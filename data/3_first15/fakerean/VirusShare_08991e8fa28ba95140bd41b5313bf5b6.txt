push
mov
push
push
mov
xor
sub
mov
and
jns
dec
or
inc
mov
je
xor
jmp
sub
roll
inc
mov
inc
cmp
jb
xor
pop
inc
pop
pop
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
sub
push
push
call
mov
cmpl
jge
push
call
mov
mov
push
push
push
push
push
push
call
cmp
jne
movl
jmp
mov
xor
mov
push
mov
mov
call
pop
cmp
je
lea
jmp
push
push
call
cmp
jne
movl
jmp
andl
cmpl
je
push
push
push
call
mov
mov
shr
mov
shl
or
mov
mov
or
mov
je
mov
mov
jmp
movl
mov
xor
divl
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
pushl
pushl
pushl
call
mov
mov
push
call
push
call
leave
ret
int3
int3
sbb
mov
int3
int3
int3
int3
int3
int3
int3
int3
add
add
dec
jp
mov
xor
add
xor
add
jbe
dec
add
and
add
adc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
push
add
add
add
cld
add
add
jg
cld
sub
add
add
dec
dec
inc
cld
adc
mov
add
push
add
push
add
add
add
add
sub
jg
inc
add
add
cld
xchg
jg
cld
add
cld
cld
and
add
cld
cld
add
push
add
add
add
roll
add
cld
add
jg
jg
add
jg
jg
je
jo
cld
add
ja
cld
jg
add
cld
add
cld
add
push
add
js
sbb
add
jg
cld
jg
inc
add
add
add
jg
inc
add
add
cld
jg
add
pop
inc
add
jnp
data16
cld
jg
jg
add
dec
cld
cld
jg
jg
add
inc
cld
jg
jg
jg
add
cld
inc
push
cld
add
push
push
push
add
add
push
add
add
add
cld
dec
add
jg
and
jg
decl
fistpll
mov
jmp
cmp
incl
mov
add
jg
adc
adc
or
es
pop
addb
add
mov
dec
dec
dec
jg
mov
add
jnp
test
dec
jg
es
add
mov
adc
mov
es
mov
ja
add
jg
mov
jg
jnp
fsts
jg
inc
push
mov
add
bound
jg
incl
mov
add
incl
add
adc
lahf
dec
push
xchg
mov
test
mov
jg
push
jg
add
jnp
push
bound
fisttps
add
jnp
lahf
adc
ds
add
ljmp
lcall
arpl
lods
xor
cmp
and
jae
jae
pushf
sbb
add
inc
xor
add
decl
inc
add
outsl
jg
fistpll
mov
jg
add
incl
jg
incl
push
jg
add
filds
add
add
incl
add
dec
aas
add
pop
mov
incl
jg
add
lea
incl
jg
add
incl
jg
ja
jg
add
sti
add
or
pushl
jg
add
add
add
jg
add
jg
jg
jg
pop
add
jg
cmp
add
pop
cmp
add
push
add
test
decl
add
test
add
test
jg
add
jg
lcall
incl
dec
aas
incl
pop
imul
pop
imul
add
pop
pop
imul
imul
pop
aad
xchg
pop
adcb
xor
imul
add
adc
add
add
inc
pop
sbb
jg
lcall
pop
call
jmp
pushf
adc
jae
add
outsl
rcrb
inc
ljmp
lcall
jg
popf
adc
lcall
call
add
jg
add
adc
mov
jg
jg
imul
jmp
and
jg
lock
jg
lcall
inc
add
jg
pop
inc
incl
pop
jg
inc
pop
adc
jg
pushf
pushf
cld
pushl
mov
push
lcall
lcall
repz
pop
pop
pop
mov
add
imul
inc
inc
jg
add
movups
jmp
inc
adc
pop
jg
inc
add
jg
incl
add
inc
jg
adc
adc
jg
jg
add
pop
call
cmovb
lcall
inc
jg
call
adc
add
adc
pop
jg
jmp
adc
jg
add
call
inc
imul
jg
jg
ud0
jmp
ljmp
ud0
jg
imul
pop
pop
add
ljmp
add
add
adc
add
ud0
pop
inc
jg
imul
incl
jmp
incl
sbb
sbb
arpl
xor
data16
data16
add
movl
add
add
add
xor
add
sbb
adc
add
add
sbbb
add
addb
add
sbb
ja
xor
add
or
sbb
add
add
add
sbb
add
add
ja
add
add
adc
xor
addb
add
addb
xor
add
add
outsl
add
add
aaa
add
sbb
add
add
sbb
add
add
xor
add
sbb
add
add
add
cmp
addb
andb
jae
xor
arpl
add
adc
sbb
add
arpl
andb
add
adcb
add
add
arpl
add
inc
xor
add
and
arpl
add
sbb
add
add
data16
add
add
jg
jg
imul
pop
pop
jg
lock
add
lock
jg
pop
jg
pop
imul
imul
imul
add
ljmp
lock
push
pop
add
add
pop
jg
ljmp
imul
pop
lock
pop
pushf
pushf
repz
repz
lcall
mov
repz
pop
pushf
pushf
pushf
repz
repz
repz
ja
add
pop
inc
imul
imul
adc
adc
inc
inc
imul
add
adc
pop
jg
fiadds
jg
add
adc
add
sbb
movups
push
ja
pop
call
add
cmovb
jnp
invd
inc
inc
adc
dec
jg
adc
adc
adc
adc
outsl
inc
add
jg
cs
ljmp
ja
adc
fdivrp
adc
add
push
jg
jae
aas
jg
jnp
sti
incl
decl
outsl
add
mov
ja
ja
xor
add
inc
add
adc
mov
jmp
ja
jg
add
jg
incl
inc
adc
ja
adc
jns
pop
xor
jg
push
clc
and
ja
inc
adc
sti
test
inc
xchg
inc
jg
inc
jg
imul
jg
push
clc
jg
js
and
pushl
test
ja
jg
pop
adc
adc
ja
adc
add
jg
fdivrp
incl
lods
ud0
fiadds
incl
add
add
arpl
add
add
add
sbb
lea
mov
add
fldl
add
add
enter
add
sbb
mov
mov
imull
mov
testl
jmp
jmp
adc
mov
divl
div
pop
idiv
lods
xchg
jmp
mov
imul
mov
idivl
mov
jno
mov
pop
imul
adc
imul
div
add
idiv
imul
add
mov
ja
add
idivl
imul
testl
pushl
pop
imul
andnps
jo
mov
jg
jnp
div
imull
pop
div
add
mov
call
jae
in
daa
jns
sbb
pop
gs
sub
lea
cmp
fisttpll
push
pop
jg
jg
dec
push
decl
jnp
rolb
or
dec
icebp
xchg
jg
jg
adc
test
movsl
adc
inc
test
add
aad
fldenv
lea
int
lock
inc
push
roll
imul
push
es
push
and
pushf
leave
lahf
scas
mov
daa
push
mov
add
imul
call
push
lcall
outsb
fdivr
xchg
xchg
incl
repz
je
or
xor
sti
or
ja
dec
ljmp
pushl
lods
jg
outsl
pop
incl
add
outsl
test
incw
jg
pushl
jg
incl
out
jnp
xchg
jmp
decl
sti
outsl
jg
jg
mov
push
jnp
jbe
jnp
jbe
add
addb
arpl
add
jae
add
addb
adcb
addb
add
incl
add
add
add
add
addb
add
add
add
lcall
add
incl
incl
incl
addb
add
add
incl
addb
inc
add
add
addb
add
add
add
addb
add
addb
addb
incl
addb
add
add
add
add
orb
add
incl
addb
incl
add
arpl
andb
add
add
add
addb
or
add
inc
and
add
add
dec
dec
jg
jg
jg
pop
dec
jg
add
inc
fnstcw
add
dec
filds
decl
jg
jg
mov
out
or
lahf
cs
push
pushl
lcall
jg
je
idiv
add
lea
filds
lcall
decl
add
push
jg
scas
incl
sahf
add
jg
add
or
dec
incl
add
add
ljmp
jg
add
test
cli
test
jg
push
pop
jg
push
dec
add
add
jg
add
je
sbb
ja
out
jg
pop
add
push
int
test
ds
and
xchg
nop
arpl
mov
pop
xor
cmp
shll
mov
add
aad
sahf
ds
clc
push
test
mov
ret
jle
out
adc
dec
stos
in
mov
outsb
inc
pushf
fistpll
xor
push
fsubrs
ljmp
mov
in
jmp
je
pop
mov
push
hlt
test
mov
ret
out
test
insb
dec
inc
insb
nop
pushf
pop
jbe
push
dec
out
imull
shlb
fnstsw
add
call
repz
jmp
call
pusha
mov
pop
hlt
mov
test
lds
adc
or
incb
dec
xchg
inc
push
cmp
cmpsb
pop
es
jae
icebp
cmp
fsubp
jg
sahf
and
inc
into
xor
mov
rcrb
jecxz
in
int3
mov
adc
into
outsb
arpl
xor
push
int3
xor
sahf
iret
stos
pop
jo
jp
repnz
pop
mov
xor
rcrb
gs
aas
sbb
imul
scas
not
adc
sbb
lahf
and
dec
gs
xchg
test
fadd
add
push
mul
sub
ds
adc
stc
scas
xchg
pmulhw
pop
xor
cmpb
pop
and
or
lods
out
mov
pop
fldl
pushf
inc
xor
mov
jo
cmp
cltd
repnz
jbe
in
or
inc
ljmp
scas
cmp
femms
pop
lock
test
add
push
dec
sahf
sbb
sbb
and
out
pusha
iret
mov
aad
adc
lcall
leave
fistps
xor
pop
insl
popf
insb
icebp
sub
out
and
pop
ja
test
out
mov
imul
mov
stos
pop
mov
mov
inc
daa
sbb
pop
mov
rcll
push
cltd
loopne
ja
ljmp
push
xor
adc
stc
sub
testb
rcrb
sysexit
mov
popf
lcall
mov
dec
nop
and
jmp
push
xor
mov
cmpb
fisubrs
cld
mov
test
cmp
movsb
or
mov
loopne
or
andl
stos
cwtl
sbb
leave
add
cmpsb
iret
cmpsl
mull
push
out
addb
fldenv
adc
loop
mov
add
jl
leave
or
out
push
and
lods
aam
mov
sar
xchg
int
jge
arpl
lret
cltd
lcall
dec
jg
ret
test
ret
mov
icebp
mov
in
pop
mov
div
aaa
mov
xor
fstl
ficompl
mov
movsb
jle
pop
shl
dec
stos
ds
std
xor
jae
pop
std
and
dec
jb
pop
fisubs
sbb
in
in
push
xlat
scas
stos
sahf
push
in
outsl
rolb
pop
push
jns
sbb
pop
pop
dec
ret
push
xchg
test
inc
ret
in
cmp
shlb
outsb
shlb
jp
and
mov
mov
jge
sbb
stc
cwtl
xor
jecxz
lods
cmp
lods
sbb
mov
movb
dec
fisttps
jp
mov
outsb
pop
lock
incl
push
mov
scas
mov
pop
jns
movsbl
ss
das
mov
push
dec
mov
adc
push
add
pusha
pop
mov
loopne
jecxz
push
jnp
xlat
loopne
aaa
add
pop
pop
jns
test
adc
out
dec
xchg
pusha
nop
adc
jle
xor
mov
push
sbb
out
add
sbb
mov
sub
mov
and
jbe
es
mov
jb
dec
xor
sub
rorl
xchg
dec
sub
xor
call
jle
jb
movsb
jmp
test
sbb
xchg
je
jl
and
rol
sbb
push
cmp
mov
mov
nop
push
push
pop
cmp
ds
popa
mov
xchg
sti
inc
cmp
cmp
ja
fldenv
nop
loopne
xchg
add
dec
fidivrs
aad
lock
jmp
sti
movsb
imul
and
test
out
adc
aad
bound
loop
in
insl
sbb
idivl
scas
pop
scas
out
rcrb
dec
sub
or
pop
dec
mov
cmpb
push
add
push
push
mov
popf
std
cld
ljmp
test
inc
jmp
pushf
mov
push
lds
add
fstpt
xor
pop
mov
lret
xchg
sbb
daa
dec
fistps
sub
cmp
pushf
stc
div
popf
add
cmp
jnp
ret
sti
gs
fcomps
int3
arpl
imul
notb
pop
push
mov
lock
loopne
leave
push
addr16
js
sub
xchg
das
les
test
xchg
cmp
sub
movsb
add
stos
push
pop
adc
lahf
cmp
and
in
mov
cmp
fstpl
lock
std
push
iret
std
cwtl
jmp
leave
cli
xchg
mov
sbb
out
aaa
or
sbb
mov
jp
cmp
rcll
xchg
lock
loope
int
sbb
mov
and
mov
fisttpll
mov
adc
std
mov
call
xchg
sub
inc
push
xor
xchg
mov
cltd
push
mov
push
test
es
mov
jb
cli
js
dec
sarb
addr16
stos
sbb
stos
lahf
add
lock
sub
mov
jnp
stos
mov
and
aaa
push
mov
sbb
lret
jp
add
or
test
jne
popf
orb
cli
mov
les
lock
pop
and
dec
mov
mov
xchg
xorl
pop
jp
adc
jnp
mov
fwait
js
add
push
add
adc
dec
mov
push
xor
imul
daa
fiaddl
sete
lret
sbb
out
xor
mov
pop
stos
sub
mov
jne
pop
cmpb
loope
into
fldcw
rcrl
imul
adc
std
nop
loop
add
and
lods
sub
loope
test
mov
pop
inc
cmpsl
rcrl
mov
push
enter
psubw
inc
cli
inc
mov
cmp
sahf
dec
mov
nop
jns
jno
mov
pop
iret
xchg
stc
xchg
nop
adc
shl
outsb
pop
jmp
lds
jmp
jecxz
or
mov
adc
adc
loope
mov
mov
ret
roll
adc
repnz
sbb
fstpt
roll
mov
jb
ja
xchg
push
in
les
insb
int
sub
lods
jp
xor
popa
add
push
shrb
or
test
add
hlt
pop
add
scas
mov
xchg
stos
mov
mov
shl
inc
push
mov
nop
aam
cwtl
cli
push
or
stc
jecxz
or
imul
pop
hlt
pop
psubsw
or
cmpsl
popf
jg
sbb
cmp
adc
inc
pop
rcr
lods
sti
mov
and
pavgw
pop
cmpb
or
cs
mov
daa
or
dec
mov
fstl
cmc
push
mov
pushf
sbb
jns
lcall
ret
ja
cmp
cmc
lea
mov
ja
mov
adc
xchg
inc
xor
jp
loope
mov
xchg
xor
js
inc
xchg
dec
dec
xor
add
mov
cli
out
aam
push
xchg
insl
std
and
push
ja
adc
push
jecxz
insb
dec
in
jp
add
push
fcoml
jmp
pusha
outsl
mov
aas
xchg
mov
sbb
jg
dec
int3
cmp
jb
sub
jp
mov
dec
pop
xchg
pop
lcall
xchg
jle
adc
pop
mov
scas
call
jno
aad
cmc
push
lods
psubsb
hlt
or
rcll
cmc
xchg
in
imull
sub
lds
sub
push
xor
shrb
lock
jns
jne
bound
adc
adc
icebp
and
sbb
mov
lock
sahf
sti
addr16
adc
adc
insl
arpl
mov
xor
into
in
cmp
sub
addr16
ret
pop
loope
push
test
adc
test
insb
add
insb
push
aam
movsl
cmp
sub
mov
sbb
ja
xchg
scas
jbe
xor
jne
mov
test
adc
jmp
div
jne
jnp
aam
or
cmp
icebp
insl
int
sbb
movsl
cmp
push
sti
xchg
jne
icebp
pop
adc
sub
adc
daa
or
lret
mov
lock
ret
cmc
cmpsb
ljmp
pop
or
xchg
in
cmpsb
sbb
pushf
repz
xchg
aaa
movl
and
cltd
into
nop
inc
fucomip
push
mov
out
leave
push
mov
mov
xchg
subb
jp
orb
out
mov
ja
or
jg
iret
sbb
mov
movsl
cmp
inc
fimuls
mov
jg
pop
pop
enter
outsl
lock
sbb
dec
imul
sahf
arpl
popf
mov
leave
add
int
sbb
inc
lds
push
jle
sarl
out
cltd
push
mov
outsb
or
cmp
cs
out
sub
mov
in
and
andl
add
jmp
sub
pop
sbb
test
fs
int3
inc
add
cmp
xchg
sub
in
int3
mov
cltd
jo
cmp
loope
mov
add
push
mov
sbb
mov
fwait
pop
cmpsl
and
cmpsl
shlb
jl
sbbb
cmp
cs
xor
mov
lods
mov
and
pop
add
xchg
dec
repnz
repnz
in
push
jl
add
mov
ficoms
or
cli
clc
or
popf
adc
or
xchg
aaa
jno
pop
inc
mov
push
inc
inc
mov
fsts
hlt
in
mov
fucom
xor
xchg
pop
jnp
insl
lods
imul
jne
stc
or
out
repnz
and
rorb
jle
stc
ret
stos
mov
push
notb
fsts
mov
xor
fldenv
repz
nop
and
mov
iret
xchg
mov
inc
hlt
dec
mov
sbb
rcll
add
sub
pop
test
mov
xchg
dec
mov
pop
insb
push
lock
pop
mov
ljmp
out
in
imul
movl
jae
adc
test
mov
cmp
mov
mov
xor
lods
cmp
sbb
pop
lret
pop
sbb
std
add
pop
sub
or
call
or
ljmp
mov
lods
hlt
xchg
mov
rolb
pop
adc
push
daa
hlt
ja
add
push
ret
xchg
outsb
jg
sahf
push
test
push
in
pop
sbb
icebp
push
inc
fcomps
cltd
or
jnp
adc
mov
inc
mov
fimuls
xor
rclb
push
in
test
cli
xor
mov
xlat
push
fcomps
xchg
mov
push
jno
leave
push
push
adc
mov
js
cmp
jns
jmp
ljmp
or
or
fistl
jl
xchg
sbb
mov
les
add
pop
iret
or
push
cmpsb
nop
xor
or
or
push
cld
jmp
mov
push
push
insl
sbb
push
test
inc
adc
repnz
lret
mov
mov
sbb
les
popf
jge
inc
adc
int3
loopne
mov
and
sbb
xor
mov
loope
out
pop
jecxz
dec
sub
clc
inc
and
mov
mov
int
ret
xor
jmp
lahf
cmp
mov
jns
sub
dec
out
push
test
mov
push
inc
cmpsl
or
pop
mov
cmp
gs
stc
int
inc
and
pop
pop
cmp
or
jns
adc
in
mov
pop
mov
inc
adc
out
insb
out
push
push
sub
sbb
out
push
mov
mov
adc
adc
aas
rdtsc
xchg
test
jl
mov
lock
pusha
xor
push
lods
and
shll
xchg
lea
fldenv
cmp
cltd
in
push
pop
mov
cli
lods
in
aaa
into
aam
pop
inc
addr16
or
daa
cli
aam
jo
and
scas
add
jmp
and
add
pop
mov
ja
mov
adc
ficoml
dec
dec
andb
mov
stos
lret
inc
inc
dec
sub
cmp
jo
add
rcl
popa
add
and
addb
pop
ljmp
mov
loopne
mov
mov
pcmpeqw
sub
lret
cmp
cwtl
mov
dec
lods
sbb
dec
icebp
in
lds
jbe
cli
repz
dec
inc
pop
in
orps
push
sub
adc
je
ljmp
repnz
add
push
sti
out
outsb
mov
push
and
dec
push
arpl
push
fwait
mov
xlat
or
subb
or
mov
push
lock
sub
outsl
fwait
pusha
jge
pop
imul
iret
cmp
mov
and
aam
mov
pushf
cmp
bound
mov
xchg
daa
fwait
icebp
hlt
fistl
sub
mov
mov
mov
fs
jle
cmp
push
shrb
leave
mov
mov
mov
or
lods
out
outsb
add
push
cmc
cmp
inc
aas
jmp
scas
adc
imul
jecxz
adc
shlb
xor
push
xor
cmp
inc
cmc
pop
add
jae
xor
adc
cmp
dec
cmpsl
inc
mov
nop
sub
fs
and
in
stos
mov
cmp
jmp
mov
jo
shlb
inc
jge
loop
or
sub
mov
ret
sbb
push
test
xlat
push
orb
insb
and
dec
jp
sub
repnz
scas
and
out
loope
lret
divl
es
cwtl
or
pop
movl
pop
sbb
or
in
push
xor
dec
ret
fdivrl
and
enter
jae
repnz
mov
repnz
dec
stos
fwait
xchg
aas
jmp
loope
jge
outsl
push
jecxz
test
dec
stos
ljmp
je
push
cli
xchg
cmp
movsbl
repz
inc
or
jmp
insb
imulb
add
sub
adc
stos
inc
xlat
sbb
je
cld
mov
insl
rcll
lret
ljmp
je
in
sarl
loop
pop
imull
je
pop
mov
mov
cltd
push
divb
mov
fnstcw
outsl
jl
pushf
daa
scas
xor
jbe
pushf
dec
pop
icebp
cmp
ja
jge
mov
in
add
outsb
sbb
push
out
enter
test
pop
inc
cmp
cld
dec
mov
andl
add
xor
push
xchg
cmpsb
mov
add
push
sub
rcrb
cld
lahf
rclb
lret
test
xor
lret
add
dec
aad
push
fstps
cmp
aam
cmp
lahf
subl
int
insb
and
xchg
mov
daa
in
aas
int
in
bound
sub
xorb
xor
push
cli
jmp
imul
jo
shl
test
int
stc
sub
pop
addb
in
push
xchg
pop
xchg
vmovntps
enter
dec
shlb
mov
dec
repnz
mov
cwtl
mov
outsb
pop
add
imul
call
mov
xchg
movsl
loope
jmp
mull
mov
stos
jno
testb
xor
repnz
shll
mov
sub
jle
nop
icebp
dec
pop
cltd
dec
mov
xor
movsl
inc
mov
cmp
sub
fst
xchg
sbb
and
sbb
fdivrl
shlb
sbb
mov
push
fimull
or
push
aaa
addr16
lret
int
call
lret
xchg
xchg
mov
add
cmp
ret
push
mov
inc
fstl
push
dec
pop
test
loop
jle
idivb
push
dec
scas
outsb
xchg
jmp
mov
xorl
cmc
jno
mov
lret
insl
mov
enter
xchg
out
pop
ror
mov
dec
repnz
push
inc
inc
lret
dec
jp
dec
sub
adc
lret
mov
dec
sbb
add
rcll
or
popf
mov
cld
int
negb
lea
mov
sarl
and
jl
push
pop
jbe
out
sub
bound
cmpsb
pop
mov
lock
and
sbb
lret
mov
pop
pop
add
ja
test
adc
pushf
or
insb
adc
gs
decb
call
add
xchg
out
aam
insb
cmp
imul
pop
add
std
jo
mov
cmp
jle
andl
sbb
jp
or
cmp
insb
js
xchg
daa
dec
dec
push
pop
pop
xor
add
add
mov
je
xchg
xchg
cmp
jno
loope
cmpsl
pop
jmp
adc
gs
ds
mov
dec
xor
das
fiaddl
xchg
outsl
cs
cmpsl
xor
and
jne
test
jno
aam
ret
jp
pushf
cmp
icebp
push
cmp
mov
xchg
cld
inc
repz
aad
lcall
dec
mov
add
cmpsb
movsl
xor
in
adc
testl
mov
ret
inc
mov
shll
test
dec
int3
pop
mov
aad
in
loopne
mov
lcall
mulb
or
or
push
pop
hlt
imulb
cmp
adc
mov
je
dec
pushf
into
adc
mov
sahf
imul
ss
mov
jle
stc
lods
mov
xor
leave
add
icebp
outsb
and
add
addr16
xchg
inc
enter
gs
pop
movsb
pop
or
ljmp
inc
pop
push
mov
inc
das
push
push
andb
shrb
mov
call
hlt
adc
dec
jp
out
and
insl
orl
adc
adc
jb
cmp
mov
jg
notb
push
pusha
addr16
adc
sbb
push
cmpsb
adc
push
jecxz
sti
nop
insb
js
xchg
repz
in
leave
scas
xor
movsl
insl
inc
je
leave
xchg
jo
sub
lods
std
adcb
pop
pop
mov
or
and
push
lods
arpl
lods
js,pt
sbb
dec
mov
dec
out
cld
pop
loop
in
lods
cld
sbb
subb
dec
test
sbb
sti
cmp
add
mov
iret
mov
es
xlat
dec
xor
mov
mov
sub
hlt
pop
mov
mov
ds
adc
or
movsl
xor
enter
and
cmp
pop
and
dec
iret
subb
push
insb
cs
iret
mov
jo
pop
cmpb
adc
orl
push
stc
loope
repz
daa
mov
pop
push
pop
nop
cs
jae
aaa
es
pushf
fcmovnb
ficoms
jg
hlt
xchg
iret
cmc
stos
push
repnz
int3
mov
inc
pop
aad
sub
push
or
cmp
inc
sahf
and
inc
or
jge
out
cmp
aas
movsl
insb
loope
sbb
pop
mov
adc
inc
ds
push
loop
mov
hlt
and
aad
or
sub
xor
js
lret
aas
popa
push
xchg
out
hlt
jg
outsb
inc
xor
cmp
out
ret
and
enter
dec
push
sub
rcll
cmpl
add
sub
outsb
idivb
adc
sub
jns
ds
ljmp
and
enter
dec
xchg
out
movsl
out
xchg
mov
loope
mov
std
bound
mov
and
sub
xor
push
out
mov
jge
cmp
jecxz
les
add
adc
aad
lea
jl
arpl
pop
gs
fcmove
into
or
xchg
insb
into
or
cmp
mov
push
je
andl
xchg
push
xchg
roll
inc
cmp
popa
inc
test
mov
roll
mov
pop
adc
cmpsb
sbb
mov
std
dec
hlt
push
push
dec
mov
mov
imul
rclb
scas
jb
pop
mov
decl
popf
mov
je
push
adcb
in
sti
jmp
cmpsb
bound
mov
cs
jnp
lods
push
and
pushf
dec
ret
sub
push
sahf
dec
or
cli
inc
sbb
enter
clc
movb
dec
lret
sbb
dec
fidivs
cs
xor
cmc
in
and
pusha
les
repnz
sahf
test
cmp
cld
popa
and
mov
lock
jns
in
xor
fldt
sbb
mov
cmp
out
pop
sbb
xor
pop
arpl
mov
xlat
arpl
jne
sbb
rclb
lret
add
sbb
fstps
adc
xchg
jnp
sbb
mov
cltd
pop
or
and
add
mov
sbb
out
pop
fbld
cmp
sbb
pop
or
xchg
inc
dec
rcrl
jl
test
divb
shlb
xor
add
arpl
or
out
ljmp
bswap
sbb
inc
dec
push
xchg
dec
lcall
les
mov
adc
jge
stc
cmpsl
lods
mov
mov
inc
fwait
xor
inc
pop
cmp
test
pop
or
mov
in
call
xchg
inc
and
or
insl
test
cltd
pushf
neg
faddl
mov
adc
lock
loope
adc
gs
inc
insb
inc
inc
ss
int3
popf
lahf
imull
mov
cmp
push
mov
outsb
xchg
jae
arpl
push
cli
mov
push
fwait
adc
cmp
cs
in
inc
xor
movsb
and
jp
push
out
loopne
mov
and
xchg
or
repz
pop
push
loope
es
imull
or
adc
test
xchg
xchg
mov
or
push
mov
sub
cmp
test
sahf
add
mov
scas
in
xchg
cmpb
push
dec
sub
mov
cwtl
popa
push
or
icebp
push
adc
out
lock
cmp
lds
popa
pop
ret
pusha
nop
push
out
lret
mov
push
and
lock
arpl
aad
in
pop
loop
aas
add
pop
xchg
shlb
and
mov
adc
lcall
idiv
cltd
lret
cmp
xchg
insl
add
push
call
xchg
mov
dec
popaw
pop
clc
jle
jmp
jg
jns
insb
test
into
ss
mov
in
sbb
add
repnz
xchg
jg
clc
pop
mov
xchg
ja
imul
stos
ror
stos
and
mov
adc
jae
cli
mov
mov
mov
les
xchg
pop
mov
mov
pop
icebp
sti
jp
mov
incl
or
cmp
repz
cmp
adc
push
dec
test
enter
inc
mov
pop
sbb
clc
imul
jl
mov
sub
xchg
mov
push
cmp
movsb
in
in
fistps
push
gs
mov
lods
jns
inc
inc
sbb
loope
popa
push
icebp
dec
push
or
inc
arpl
add
call
adc
insl
stc
mov
jae
jl
add
dec
out
xlat
xlat
cmp
dec
adcl
pop
iret
in
inc
lods
loopne
pusha
dec
pushf
cmp
fst
movsb
xchg
aas
ret
xchg
lods
ds
shrb
scas
pop
cli
fldl
je
adc
push
fidivs
jbe
xor
pop
cmc
cmp
add
xchg
xor
jmp
cmp
and
inc
or
das
les
stos
jno
aad
xchg
jp
outsb
mov
lock
das
repz
dec
std
scas
jge
push
imul
mov
int3
add
jecxz
and
aas
push
dec
icebp
das
mov
push
test
pop
jge
dec
dec
cmc
add
ret
stos
sub
mov
mov
subl
and
mov
mov
push
fsubr
cmp
sub
popa
adc
mov
and
cmc
xor
jns
cmp
and
stos
jecxz
push
or
repnz
and
or
arpl
xor
mov
in
in
push
push
lods
cld
jg
sub
popf
lods
mov
mov
ljmp
lods
jecxz
test
jo
jae
ret
sbb
xchg
add
decl
ljmp
push
add
cmpsl
pusha
leave
pop
and
mov
scas
mov
mov
lcall
movsl
push
enter
dec
jl
pop
mov
dec
or
dec
loop
ret
lcall
jp
scas
ret
pop
aas
out
add
jg
hlt
and
or
lods
add
push
popa
in
call
jg
cmp
xchg
mov
enter
mov
icebp
mov
xor
xchg
sub
shl
sbb
xor
inc
daa
xor
leave
jo
sub
mov
mov
jmp
inc
test
mov
cmp
pop
jb
dec
cmp
mov
js
jecxz
enter
popa
push
movsw
sub
lret
xchg
pop
pop
jae
cmp
dec
int
cmp
push
xchg
gs
jg
test
es
les
test
sbb
in
shlb
xor
movsb
stc
cmp
movsl
out
fildll
aam
scas
js
out
aam
jge
std
lret
lcall
and
imul
push
add
inc
int
sub
jo
popa
pushf
inc
cli
xchg
pause
push
xchg
subl
push
and
xor
cli
frstor
rcrb
test
jge
and
sti
pop
std
gs
ret
adc
ficomps
dec
and
inc
xchg
or
test
xchg
add
and
lds
in
outsb
and
cmp
jl
rorl
lds
xor
xchg
or
shrb
int
daa
rol
ds
shll
mov
mulb
imul
test
sbb
pop
dec
clc
adc
cld
int
sbb
and
xor
jbe
pop
stc
aas
cmpsl
and
scas
mov
mul
in
ja
cmp
xor
sub
jb
cmp
cs
add
ds
jecxz
mov
int3
mul
and
test
add
mov
in
inc
and
sub
xlat
pop
pop
sbb
mov
jbe
inc
push
cltd
ds
fs
testl
outsb
pop
xchg
add
pop
popl
pop
mov
xchg
inc
mov
lock
in
push
mov
jg
cli
ret
sub
jo
gs
scas
fdivrl
lds
mov
pop
xchg
or
lock
jnp
jne
call
xchg
mov
mov
cld
pop
fwait
pop
mov
aaa
add
adc
fadds
jnp
sbb
popa
xor
test
psubw
sti
pushf
andb
lahf
inc
xlat
xor
push
add
js
divb
fs
cmp
iret
xchg
xchg
mov
pop
aam
or
cmp
sub
pusha
and
fcompl
fldl
test
fistps
subl
cmp
inc
sbb
xchg
sbb
lds
mov
test
add
lea
fistps
fisubs
scas
lods
xchg
pop
pop
push
pop
jle
xchg
ret
imul
ds
mov
adc
enter
xor
aam
push
out
lds
and
in
sbb
jecxz
jno
pop
ljmp
push
push
out
and
xchg
jae
rorl
mov
mov
in
bound
xchg
push
inc
push
ret
neg
mov
in
xor
add
inc
cmp
aad
push
icebp
lahf
mov
add
arpl
or
daa
pop
lock
jne
imul
stos
stc
adc
jnp
dec
xchg
js
dec
push
add
jecxz
shll
nop
mov
xor
loopne
jbe
sub
mov
rep
bound
mov
sbb
jp
js
test
pop
cmc
icebp
out
popf
push
dec
icebp
sbb
leave
pop
int
dec
jae
aam
mov
cmp
cs
pop
add
fisubs
stos
ret
xchg
jno
les
mov
and
fnstsw
inc
cwtl
fidivrs
lods
dec
call
cli
stos
bound
mov
sub
sbb
xor
fcmovnbe
and
dec
cli
mov
loope
add
xor
xor
xchg
cs
mov
bound
shl
add
fwait
nop
dec
loope
imul
insb
stos
repnz
jecxz
mov
jnp
pop
shl
push
dec
iret
je
es
fwait
imul
icebp
les
in
dec
mov
fwait
inc
adc
lea
sti
sbb
mov
and
mov
pop
cmpsb
insb
inc
call
loopne
mov
mov
mov
jle
mov
sub
insb
mov
adc
add
popf
stos
hlt
scas
inc
sub
and
ljmp
inc
ds
outsb
inc
push
out
std
add
pop
and
rorb
adc
data16
lea
lahf
cmc
mov
push
xlat
outsl
test
sbb
push
cmp
scas
inc
sub
in
mov
push
add
arpl
xchg
jb
mov
inc
jle,pn
xchg
movsb
dec
loopne
js
push
dec
mov
jne
loop,pt
mov
pushf
mov
sbb
hlt
xor
ja
lret
popl
fcoml
push
test
ja
popf
ds
scas
push
popf
cltd
sbb
orb
sub
cmp
inc
mov
popa
ds
sti
testb
je
jnp
lods
jecxz
inc
sub
mov
test
push
jne
and
mov
test
and
je
dec
fidivl
push
sbb
push
enter
insb
dec
movb
scas
lds
add
int
hlt
mov
mov
test
push
bswap
push
aad
sub
xchg
jmp
push
ss
shlb
adc
stc
dec
dec
in
jae
je
cwtl
lcall
mov
add
call
sub
cwtl
lds
sub
lahf
push
aaa
pop
sar
in
pusha
cmc
cmp
je
inc
stos
leave
imul
je
hlt
fiaddl
in
jae
mov
fstpt
hlt
xlat
aam
lods
push
pop
mov
int
xchg
lahf
pop
jb
mov
out
mov
mov
push
repnz
sbb
and
jnp
mov
pop
das
cmp
mov
aas
mov
sbb
mov
dec
lea
mov
mov
pop
adc
lcall
lea
pop
rol
jbe
out
loope
dec
inc
lock
pop
sti
pop
and
jns
inc
aad
jne
sub
push
lds
dec
add
adc
mov
icebp
scas
lahf
or
xchg
pushf
std
scas
jns
popa
rorb
ljmp
in
iret
inc
loope
jecxz
push
arpl
int
aad
xchg
fistpll
add
add
cmp
and
imul
adc
or
xor
in
mov
mov
repnz
mov
lahf
mov
push
mov
jp
subl
or
push
sub
jp
jno
sti
add
pop
adc
mov
cs
xchg
nop
fucomi
push
mov
and
test
pop
es
adc
adc
or
imul
imul
ja
jmp
add
xor
in
jno
push
aas
xchg
lcall
out
or
or
xor
cmp
in
aad
push
dec
pushf
or
mov
mov
movsb
adc
out
fcomi
in
or
xor
sbbl
scas
stos
mov
xchg
int3
sbb
adc
stos
dec
jmp
fstps
jg
popf
mov
rcrb
aas
dec
sub
dec
mov
lea
push
jne
push
hlt
pushf
lods
daa
xor
and
push
jmp
call
adc
jno
mov
add
mov
mov
xchg
sbb
sbb
sub
insl
shl
fistpl
cmpsb
into
push
push
test
ja
pop
cmpsl
pusha
or
mov
lods
andl
mov
add
jl
pop
pop
sub
orb
loope
leave
ss
adc
lea
gs
sub
or
dec
mov
mov
rorl
sbb
jle
cwtl
dec
dec
xchg
sbb
in
out
paddsb
int3
stc
adc
inc
das
xor
adc
nop
mov
cltd
push
xor
das
insl
out
cmp
dec
jo
inc
jl
add
imul
inc
lea
mov
lods
imul
xchg
dec
cltd
push
cmp
pop
push
jnp
call
in
and
mov
adc
sub
test
dec
add
repz
mov
pop
fsubr
lcall
popf
and
add
adc
data16
cld
cltd
arpl
jae
testl
mov
rcll
pop
rolb
xor
cltd
pop
ljmp
dec
push
cmp
outsb
mov
adc
insb
aas
aaa
mov
add
jp
jg
mov
sti
scas
push
sbb
scas
mov
add
mov
jnp
push
cmp
dec
inc
in
cmp
insl
mov
add
mov
adc
es
std
orb
popf
out
push
cmp
arpl
iret
and
mov
movsl
imul
fimull
mov
js
mov
xlat
pop
xchg
je
fs
loop
inc
sbb
mov
and
xor
add
push
push
mov
lahf
xor
inc
xor
xor
pop
lods
add
fldl
fimuls
test
pushf
cmc
xor
mov
mov
movsb
ret
add
fwait
mov
sahf
lahf
cmc
mov
adc
call
mov
fcmovnu
xlat
adc
cld
fidivl
cli
pop
adc
fcmovnu
push
std
mov
mov
adc
jno
ret
mov
xchg
movsb
fiadds
ja
sahf
rcll
imul
or
arpl
push
lret
mov
lea
lcall
ss
cmpsl
jae
lahf
mov
adc
pop
repz
icebp
mov
popf
mov
adc
inc
daa
movsb
lahf
push
sub
fmull
fidivrl
hlt
mov
test
xchg
sarb
mov
pop
push
imul
mov
push
adc
sub
sbb
das
ret
mov
sbb
inc
iret
dec
lock
dec
scas
test
adc
push
dec
sar
sbb
cli
mov
inc
sbb
inc
lret
fwait
xchg
inc
sbb
shl
fmuls
je
rorl
in
dec
out
jnp
aam
jecxz
hlt
jne
sub
adc
js
push
pushf
dec
jecxz
jp
scas
imul
andb
dec
pop
cmpsl
js
jle
xchg
xor
stc
jg
cmpsl
sbb
and
push
mov
in
xor
pop
adc
pop
sbb
je
insl
insl
push
mov
mov
es
sti
mov
inc
sarb
sub
lods
mov
lds
jae
inc
jae
stos
loopne
inc
je
jmp
data16
pop
aad
icebp
aas
jb
dec
add
test
and
test
outsb
aas
int
call
jg
push
popf
testl
rolb
iret
scas
clc
repnz
inc
jg
and
xchg
xorb
push
jbe
pop
pop
movl
je
stos
inc
pop
and
loop
repz
aam
pop
mov
mov
lret
es
add
popf
push
rcrb
inc
je
movsb
bound
dec
push
and
jecxz
sub
cmp
int
ja
adc
lods
cli
xor
cmpsb
sbbb
xor
popa
movb
mov
jbe
adc
push
repnz
push
add
in
jb
add
jo
stos
mov
movsl
sub
sub
scas
and
ret
int3
fcomp
push
mov
jg
mov
adcb
xlat
loop
popa
out
pop
popf
rolb
in
aas
fdivr
and
adc
xor
cld
and
or
fptan
pop
fldenv
pop
xchg
or
dec
fisubs
pop
jl
stos
mov
pop
leave
insl
sahf
mov
insb
inc
roll
sahf
xchg
enter
or
dec
inc
std
scas
test
das
and
pop
or
jl
aaa
cmp
and
imul
jnp
cmp
ss
xchg
mov
mov
cmp
fiadds
or
or
and
in
mov
std
sbb
fldl
inc
xchg
sbb
ret
cld
fcmovbe
and
fmull
pushf
test
ss
out
loopne
mov
add
mov
push
add
mov
shlb
adc
rolb
sub
cmp
sub
movsb
imull
xchg
bound
mov
push
cltd
add
cmp
in
dec
imul
andl
sub
add
pop
notl
jp
cld
cs
enter
mov
jg
push
cld
add
sbbb
jl
into
outsl
dec
test
imul
out
jno
rorl
addr16
xchg
or
inc
rcr
inc
subl
loope
add
ficoml
mov
rolb
push
lods
inc
in
jo
decl
call
mov
adcb
xor
mov
dec
adc
ss
push
xchg
insl
imul
push
push
push
add
xor
pusha
mov
mov
add
pop
fcmovnb
jnp
pop
ds
ficoms
mov
loope
rcll
loop
push
mov
jmp
mov
lods
dec
call
jle
pop
inc
loopne
xchg
inc
loopne
lods
in
pop
jle
mov
pusha
cwtl
xchg
adc
cmp
dec
inc
xor
jge
mov
lahf
fsubr
lcall
inc
fidivrs
je
xchg
mov
filds
and
rol
and
or
sti
xchg
jne
jle
push
push
mov
js
jmp
stos
push
inc
shr
mov
dec
sbb
sbb
cs
fnstsw
ja
nop
jo
and
in
pushf
sbb
andb
shl
call
dec
inc
sti
and
and
ds
pop
inc
push
push
cwtl
push
and
push
and
in
jb
cmpsb
ljmp
das
icebp
ljmp
stos
aas
mov
jno
or
test
push
mov
imull
mov
add
adc
and
xchg
jle
int3
in
fistpll
push
in
jmp
loopne
lahf
sbb
out
sti
mov
icebp
cmp
in
mov
outsw
sbb
subb
movsb
add
add
jge
scas
stos
inc
pushw
xchg
lcall
imul
test
icebp
inc
push
xchg
dec
icebp
dec
and
int3
lret
pusha
mov
mov
push
insl
call
mov
pop
call
rcll
les
push
stc
mov
nop
outsb
stos
inc
sbb
subb
insb
cmp
xchg
xchg
int3
aaa
aad
cmp
test
into
xchg
mov
popa
stc
mov
repz
pusha
xchg
mov
in
lcall
sub
out
sbb
mov
iret
pop
mov
ret
jge
jl
cmp
sub
call
xchg
inc
out
cmp
sarb
fdivp
stos
loopne
jae
jmp
jp
shrl
adc
bound
arpl
cmp
dec
dec
daa
sarl
xlat
mov
pop
add
jo
cltd
repnz
xchg
dec
mov
hlt
fs
test
int3
inc
jecxz
jno
pushf
hlt
xor
gs
xchg
mov
outsl
mov
fidivrs
cmp
adc
sbb
sub
enter
dec
sbb
sub
rorl
nop
shrl
jmp
fucomi
movsb
fadds
int
insl
pop
mov
inc
pop
bound
loop
add
pop
out
shll
test
mov
mov
lea
mov
aam
ret
cmp
cmc
out
mov
imul
out
xchg
jmp
xchg
fbld
add
stos
rclb
dec
mov
enter
inc
loopne
shr
xchg
fldl2t
pushf
mov
outsl
jl
pop
dec
and
unpckhps
inc
jne
call
mov
int3
pop
ljmp
and
call
ds
pop
dec
shll
cmp
mov
mov
mov
and
push
test
xchg
inc
bound
int3
xor
movsl
insl
sbb
lret
mov
mov
mov
lret
std
adc
fs
repnz
repz
mov
xchg
mov
cld
cmp
js
dec
arpl
add
imul
adc
arpl
mov
jns
push
int3
jle
adc
or
push
lret
xlat
mov
fcoml
in
in
enter
repnz
adc
outsl
lea
cld
mov
cmc
loopne
sbb
xor
aaa
jp
mov
out
lret
sbb
add
mov
xor
add
mov
add
inc
int
pusha
push
add
xlat
jl
or
add
nop
sub
and
mov
aas
fisttps
cld
pop
pop
fidivs
inc
out
xor
movsb
ljmp
out
into
sub
pop
mov
cmp
into
mov
aas
sbb
or
les
stos
dec
mov
and
xchg
cmp
jg
rcrb
inc
notb
push
std
mov
stos
rcl
pop
aam
mov
fwait
pop
push
adc
andb
and
add
fistps
inc
frstor
mov
inc
dec
or
mov
movsb
mov
stos
mov
or
add
fmull
add
and
jns
and
xlat
clc
inc
xchg
inc
pushf
int
insb
pop
mov
inc
jg
pop
mov
push
pop
pushf
mov
pop
cmp
xchg
daa
insl
mov
ficoms
pusha
sub
lcall
dec
and
push
mov
mov
imul
jbe
outsb
stos
in
lock
rclb
inc
mov
push
outsl
icebp
ja
stos
insb
ja
mov
fbstp
aaa
mov
mov
dec
and
repz
into
xlat
sbb
adc
lret
mov
adc
ret
sahf
jae
or
inc
pop
aas
adc
loopne
shrl
lret
addl
shrl
xor
or
xchg
xor
push
shlb
imul
cltd
dec
xor
popf
add
mov
mov
mov
jb
lock
inc
mov
ds
fdivrl
add
out
sbb
mov
mov
dec
cmpsb
into
lcall
cmp
pop
inc
xchg
xchg
addr16
inc
clc
int3
pop
sbb
mov
ret
cmp
sbb
lods
or
cmc
adc
xor
mull
mov
push
subb
xor
adc
cmp
mov
cmp
mov
in
fstpt
aaa
xchg
lds
in
repz
es
fstpl
and
xlat
lahf
push
cmp
or
push
cmpsb
aas
mov
or
push
or
shlb
lret
je
mov
xchg
sbb
scas
arpl
out
push
ret
sub
insl
mov
fnstenv
cmpsl
dec
inc
jnp
dec
sbb
mov
jne
push
and
popa
rol
outsb
or
xor
fidivs
jecxz
inc
cli
xchg
movb
pop
inc
fistpl
xchg
xor
ret
les
ret
xor
mov
dec
fildll
adc
mov
loope
adc
xor
pop
inc
fisubrs
fdivrl
shl
mov
adc
mov
inc
test
push
popa
dec
pop
testl
cmp
cmc
xchg
cs
out
mov
mov
dec
scas
push
cmp
lret
inc
call
fucom
fwait
xchg
sbb
outsl
pop
push
addr16
insb
jno
dec
icebp
inc
jmp
xchg
leave
xchg
pusha
iret
loopne
push
mov
or
aad
xchg
fwait
sbb
mov
dec
jge
outsb
pop
mov
movsl
adc
push
add
and
cmpsl
inc
xor
ret
loopne
ret
mov
sbb
mov
insl
nop
jecxz
or
flds
andb
ljmp
xchg
sbb
lock
sub
outsl
insb
push
cli
pop
lea
loop
pop
test
stos
test
insl
cltd
sbb
lds
js
mov
cmpsb
cltd
icebp
lea
jo
mov
sahf
iret
xor
cs
out
sbb
dec
dec
movsl
js
scas
mov
sti
inc
loope
mov
mov
or
mov
fs
sahf
xor
pop
fdivrl
push
xchg
push
sbb
fcos
cli
loopne
loopne
fwait
ret
mov
cmc
movsb
and
popa
loop
out
adc
xchg
imul
stc
jo
inc
ret
test
sub
xor
int
orb
rorl
mov
das
jge
add
or
ret
popf
mov
xorl
sbb
lret
dec
cmpsl
in
or
testb
dec
in
mov
xor
gs
inc
dec
scas
ds
inc
dec
test
dec
test
jg
nop
sub
pop
mov
and
sub
movsl
fnstenv
addl
popa
out
testl
cmp
mov
ss
sbb
or
mov
or
add
mov
call
mov
push
hlt
aam
in
sub
and
sub
jecxz
push
push
std
daa
push
add
xchg
fcoml
rcrb
cmpsb
dec
ljmp
std
fistps
mov
mov
aas
fldl
jne
push
sbb
xchg
sub
add
fst
xor
sbb
inc
add
inc
add
popa
shlb
lcall
addr16
fsubl
out
jle
mov
shll
push
fwait
pop
sub
rcr
cmpl
adc
push
aas
jg
or
xchg
and
xor
or
mov
pop
sub
jb
mov
filds
dec
fstl
loopew
xor
and
in
adc
ljmp
push
or
ljmp
push
dec
adc
insb
ret
jmp
xor
and
or
daa
adc
fwait
leave
out
cli
mov
je
std
sub
mov
es
lea
push
test
mov
dec
inc
loopne
xchg
adc
ds
pop
jbe
mov
vxorps
fdivrs
std
push
inc
push
add
dec
popf
scas
xor
push
in
push
xor
add
cmp
fisubs
lret
mov
fdiv
dec
popa
xchg
mov
mov
jae
xchg
insl
call
fnstsw
push
cwtl
leave
mov
xchg
fdivl
xchg
repz
inc
cmpsl
jmp
stos
insb
nop
mov
jle
int3
adc
repnz
test
fadd
inc
add
shll
pop
jne
hlt
add
cmp
push
or
ljmp
mov
shrb
adc
dec
and
pop
in
bound
popl
fsts
mov
lods
mov
incl
jne
outsb
adc
ljmp
cmpsb
push
sub
cmp
sub
jo
push
mov
and
adc
adc
jmp
cltd
sahf
inc
mov
std
pop
outsb
gs
adc
int
xlat
mov
sarb
xchg
loop
mov
arpl
loope
xchg
mov
mov
mov
add
and
pop
and
fiadds
and
mov
push
test
push
push
mov
cmpsb
js
cwtl
mov
adc
mov
insb
pop
mov
mov
aad
adc
stos
adc
out
mov
mov
and
push
fsubs
fadds
and
xchg
out
js
adc
pop
aad
cmpsl
dec
and
push
xor
andl
mov
repnz
leave
xchg
rcrl
aas
mov
sub
aam
sbb
and
popf
xor
jmp
rolb
out
cld
jne
cmc
lods
jle
outsl
adc
mov
mov
mov
int
jnp
test
js
andl
scas
add
leave
inc
add
sbb
inc
jmp
xchg
xor
ds
add
jle
in
jns
hlt
loopne
dec
cmp
arpl
mov
subl
movsb
std
mov
jnp
jg
popf
scas
ud2
lcall
dec
add
and
aaa
imul
in
xor
inc
inc
sahf
notb
fwait
aaa
shrl
jmp
xchg
sbb
je
out
and
icebp
cmpsb
out
in
sub
xchg
jae
dec
inc
js
pop
out
call
and
xchg
add
xlat
push
ss
int
addr16
aam
jbe
mov
imul
fsubl
and
lods
leave
stos
or
xor
push
push
dec
in
push
inc
xor
pop
repz
data16
xor
pop
adc
or
push
jae
lods
fiadds
mov
mov
enter
push
sub
adc
mov
cmc
repz
scas
and
addr16
jb
ret
lret
push
test
adc
sbb
xchg
mov
mov
testb
scas
sbb
and
dec
push
rorb
pop
mov
pusha
xor
add
adc
and
inc
sti
inc
shrl
in
ja
inc
nop
repz
push
ret
cmpsb
aad
mov
sub
mov
insl
test
hlt
xchg
sbb
imul
mov
rcrb
adc
mov
pop
add
sahf
push
jmp
pop
bswap
jmp
fists
mov
mov
push
in
ret
sbb
xchg
cmpsl
mov
push
ror
adc
incl
pop
arpl
and
popa
call
push
lods
xor
mov
jle
dec
pop
sub
call
push
mov
push
ljmp
sub
outsl
ja
sub
cld
xor
movsb
adc
arpl
imul
sarl
in
inc
pop
xchg
gs
push
or
pop
sub
outsb
push
inc
in
loope
inc
mov
insl
mov
inc
aam
xchg
push
or
cmp
call
ret
pushf
push
pushf
push
inc
cmp
sub
mov
aam
add
int3
xchg
outsl
dec
pop
add
jns
xlat
push
sub
sarb
test
cltd
jmp
mov
lcall
dec
stc
and
cli
sbb
sbb
scas
xor
dec
lods
scas
int
pop
jl
sti
jle
mov
jmp
mov
pop
jp
pop
gs
mov
scas
stos
addr16
ljmp
lods
mov
cli
cmc
mov
sahf
je
xor
fmull
ljmp
jo
sub
pop
add
into
loope
ljmp
aam
testl
mov
fcmovne
xor
pop
sar
xchg
js
fs
popa
jno
cmp
jae
jg
mov
and
add
jle
cmc
mov
bound
cmp
or
xor
arpl
xchg
pop
insb
orl
mulb
in
or
or
add
addr16
xchg
push
shrb
inc
jle
push
call
stc
push
lods
pushf
xor
insl
jg
lods
imul
and
add
das
fnstcw
mov
dec
std
jnp
repz
jecxz
pusha
pop
mov
dec
or
scas
lea
bound
dec
xchg
push
bound
fdivp
out
test
mov
lods
mov
jns
imul
mov
jb
and
stos
push
and
push
cmp
fs
loop
cmp
aaa
mov
aas
mov
paddb
jecxz
sbb
cmp
in
into
pop
lds
fcomps
adcl
ja
mov
xchg
dec
lds
or
inc
sbb
xlat
xchg
out
pop
int
mov
jns
push
mov
lods
mov
jecxz
stc
inc
dec
xor
add
icebp
xchg
add
mov
jns
mov
stc
mov
stc
mov
lea
test
push
notl
stc
or
push
and
push
stos
enter
nop
ljmp
lea
in
jns
movsl
xchg
add
pop
jnp
cwtl
adc
inc
cmp
mov
push
fiaddl
outsl
push
cmp
jo
outsl
mov
jbe
pminub
sbb
jg
clc
push
inc
and
gs
lds
mov
fcompl
and
sbb
push
cld
xchg
jns
dec
and
roll
lcall
mov
jle
cmc
dec
jmp
xchg
enter
leave
push
inc
test
jle
ss
pop
mov
and
cmp
aam
fcoms
sahf
or
sub
mov
cmp
push
pop
scas
mov
lea
mov
cltd
outsb
pusha
shlb
cwtl
mov
mov
cmpsl
fimull
xor
mov
dec
pop
das
inc
imul
mov
sub
sarl
loopne
lcall
fdivl
test
adc
dec
push
cmp
test
cmpsb
dec
stos
sti
mov
outsl
ja
imul
xchg
pop
mov
pop
cmpsl
popf
lcall
jp
ljmp
and
adc
jns
or
add
inc
push
sub
jecxz
mov
cs
cmp
in
cltd
imul
ja
sbb
mov
and
lcall
jb
jg
jns
dec
xchg
je
cli
xchg
shll
sti
xorb
pop
pusha
pop
cli
mov
xchg
out
daa
cmpsb
sbb
xchg
adc
xchg
lret
cltd
dec
push
scas
jns
sahf
pop
sbb
dec
and
push
lahf
cld
mov
jne
out
jo
aaa
sbb
repz
ret
mov
call
pop
pop
push
mov
sbb
in
stos
popf
cmpsl
jle
shrl
xor
push
pop
xchg
lret
lret
pop
jo
mov
divl
leave
cmp
sub
mov
jle
push
sbb
aaa
dec
mov
mov
fsts
lods
sbb
jmp
sbb
pop
adc
ljmp
test
mov
out
shld
loopne
inc
out
cmp
fs
push
xchg
loope
out
enter
push
inc
jmp
ds
jmp
and
aam
ljmp
repnz
add
sbb
add
jae
je
mov
sarb
popf
and
mov
adc
mov
pushf
mov
out
fcomp
mov
mov
jae
addr16
mov
sarl
or
mov
xor
nop
mov
push
push
or
in
or
pop
cmp
imul
stc
and
inc
aad
cmc
cli
push
xchg
mov
push
shll
aas
hlt
and
movsl
insb
cli
push
xchg
in
test
mov
fwait
shlb
fiadds
mov
out
sub
sti
mov
rclb
insl
ljmp
jae
push
iret
rolb
mov
adc
les
sbb
mov
dec
sahf
pop
fwait
mov
pop
in
jne
jbe
and
lahf
and
mov
cmpsl
cmp
push
and
cmc
das
ss
popa
pop
mov
sbb
mov
sbb
xchg
mov
aad
call
add
add
aas
fcmovbe
push
push
sub
cltd
ljmp
enter
in
into
outsl
or
adc
add
cmp
dec
sbb
or
lcall
jg
push
pop
pushf
sbb
mov
rclb
scas
sbb
mov
add
pop
jb
adc
arpl
mov
sbb
mov
pop
push
xchg
loop
bound
lahf
cmp
xor
cmp
aaa
xchg
mov
mov
movsb
xor
xor
sub
cmp
loopne
aad
xor
add
mov
pop
daa
and
iret
mov
mov
inc
mov
pusha
sti
notl
mov
leave
fimull
cwtl
inc
or
int3
cltd
mov
xor
or
loope
push
ret
mov
push
adc
dec
repnz
std
outsl
xchg
sub
jb
add
pop
adc
add
mov
and
test
xor
stos
sbb
imul
mov
push
pop
lds
or
mov
test
inc
rcl
mov
movl
inc
shlb
inc
push
pop
out
dec
je
xchg
jo
cmp
daa
int3
and
inc
jbe
adc
adc
xchg
jle
jnp
mov
movsl
in
scas
xor
fs
xor
sub
or
icebp
mov
popf
cmp
aas
in
movsl
mov
popf
add
inc
xchg
movsb
loop
dec
or
adc
in
jmp
and
ds
ret
in
in
imulb
mov
orb
es
or
xchg
test
addr16
push
test
int
mov
jae
adc
inc
and
adc
sbb
or
inc
pushf
cmpsb
inc
jnp
cmp
or
pop
add
adc
pop
xchg
jno
pop
out
pop
cli
or
jae
push
cmovs
xor
sbbb
sub
jae
or
or
not
int
outsb
in
std
rorb
lret
jbe
jp
mov
cwtl
pop
sbb
fstl
jne
jno
aas
xchg
mov
cmp
insb
mov
mov
jae
lock
in
or
popa
xchg
movsl
xchg
testl
pop
or
scas
xchg
out
adc
mov
movb
xchg
adc
loop
lds
and
jge
sbb
jns
dec
add
mov
jg
andl
jmp
mov
mov
pop
fisttpl
divb
and
xlat
cltd
cmp
test
stos
mov
movsl
inc
insb
sbb
out
ds
loope
cs
xchg
loop
out
cwtl
inc
enter
inc
das
aad
es
mov
push
movsb
into
add
pop
sub
sbb
ljmp
cltd
test
jl
test
int3
mov
es
inc
push
lcall
mov
movsl
jns
mov
sahf
mov
sub
xchg
and
sub
dec
sbb
leave
jns
sti
adc
mov
cmpsl
jo
mov
xchg
add
rcll
adc
lds
in
test
popa
sarb
push
clc
xor
mov
push
dec
mov
scas
mov
sarl
daa
or
dec
push
mov
cli
xchg
es
arpl
mov
cmpsb
aas
add
icebp
imul
lods
out
xor
jp
adcb
insl
inc
imul
xchg
or
push
jnp
lods
movsb
jnp
leave
dec
xor
mov
cwtl
dec
outsl
out
fwait
add
push
sub
xor
adc
pop
xor
jbe
mov
dec
cmc
pop
add
dec
les
sub
lret
and
adcb
mov
xor
lret
in
lods
and
out
mov
rclb
pushf
push
rorb
stc
fildll
imul
push
popa
push
xchg
xchg
ds
rclb
sbb
nop
fs
ljmp
inc
mov
adc
fwait
cmc
cmp
ja
push
cmc
or
daa
push
mov
xor
inc
divl
leave
jecxz
in
mov
mov
mov
sbb
mov
in
repnz
sbb
mov
mov
pmulhuw
aas
shrb
push
call
pop
sarb
or
into
jg
mov
lock
std
sti
stos
push
pop
popf
mov
inc
sbb
and
mov
cs
daa
xor
ja
add
ret
jge
cmp
add
adc
cmp
loopne
or
fisttps
and
out
or
add
sub
adc
mov
test
dec
sub
push
test
mov
cmc
cmp
or
sbb
loopne
and
adc
xor
mov
fmuls
mov
shrb
out
jle
cmc
daa
mov
mov
lcall
les
sub
gs
shl
lret
dec
dec
cmp
xchg
xchg
lods
jmp
mov
pop
stos
repnz
xor
pop
dec
jmp
outsl
push
jl
fs
in
test
enter
push
imul
insl
call
push
rclb
movsl
xor
jl
mov
dec
popf
push
pop
nop
add
inc
insb
jg
or
ja
dec
aad
push
or
pop
roll
std
inc
loop
pop
sbb
cli
notl
dec
fwait
int3
mov
lock
movsl
test
push
jne
xchg
xor
cs
out
lcall
adc
pushf
jge
in
arpl
and
cli
adc
adc
add
jns
daa
cmp
in
pushw
fbstp
out
repnz
daa
sub
lds
fs
or
fisubs
adc
ret
or
xchg
clc
adc
xchg
divl
loop
pusha
fstps
lods
mov
pop
jl
inc
fs
xchg
test
sub
and
lret
add
add
and
test
cmp
sbb
lods
and
test
cmpsb
sub
mov
dec
inc
je
and
out
push
jmp
sbb
lea
mov
pushf
mov
mov
fs
cmc
cmp
sti
bound
push
out
addr16
or
fwait
pop
cmp
cmp
scas
inc
rcr
fldenv
jl
lret
repz
ret
push
add
mov
mov
jle
leave
and
pop
mov
push
aas
ret
call
inc
das
dec
inc
in
in
jae
mov
jno
push
negb
cmpsl
or
xchg
arpl
sub
ret
les
jno
js
dec
pop
jge
call
push
repz
cmpsl
cmc
xchg
stc
adc
jns
cmp
sub
testl
cmpsl
repnz
mov
xchg
into
ret
enter
in
aaa
fsubrl
mov
xor
pop
call
inc
mov
dec
aas
imul
pop
pop
mov
out
in
and
sbb
dec
dec
mov
loop
push
pop
dec
inc
gs
pop
insl
adc
xchg
add
sti
or
sbb
cwtl
pop
mov
mov
orl
mov
mov
inc
jge
sub
push
movsb
jmp
jnp
insb
lret
repz
dec
orl
adc
dec
mov
adc
arpl
loop
loopne
and
mov
sub
xor
mov
dec
test
inc
xchg
sbb
mov
add
mov
loop
in
inc
mov
js
subb
shr
add
cs
xor
in
pop
pop
pop
fiadds
inc
cwtl
pop
push
lea
or
add
addr16
jnp
lahf
and
jp
pusha
mov
aad
and
popa
dec
insb
and
or
push
xchg
jae
sub
bound
mov
adc
mov
pop
pop
push
lcall
sub
jno
repz
lret
stos
imul
mov
jge
loop
adcl
std
or
xchg
repz
jb
add
jg
cwtl
xchg
stos
sub
mov
andl
sbb
sarl
pop
mov
mov
adc
mov
mov
aas
adc
pop
fildll
insl
mov
gs
jle
inc
adc
fucomp
outsb
mov
lds
pop
cmp
in
jl
xor
mov
shll
or
fadds
clc
lss
cmpsb
sbb
ljmp
jmp
outsb
add
mov
ja
es
aaa
mov
insb
add
scas
push
call
mov
or
scas
ljmp
icebp
aam
fdivp
mov
sbb
outsl
jnp
pop
pop
arpl
lds
xor
fbstp
sub
mov
aad
outsl
mov
sbb
inc
lods
cmp
pushf
data16
sub
js
xchg
sbb
lret
loope
or
inc
mov
fs
mov
fnstcw
inc
pop
or
jnp
mov
test
sub
ret
sti
sub
mov
mov
jge
sahf
lahf
repz
fwait
cmpsb
adc
dec
stc
mov
rorl
xor
xor
push
or
addr16
rcll
push
out
pop
das
mov
mov
mov
xchg
pop
jg
dec
fs
jg
push
test
xchg
into
dec
cltd
jl
and
test
pop
fwait
inc
adc
mov
mov
jp
adc
jns
mov
mov
popa
fsubl
adc
push
lods
int3
test
or
ret
mov
cmpsl
scas
mov
mov
pop
xchg
insl
xorb
mov
daa
xor
insb
add
jb
xchg
jle
lcall
fistps
push
fadd
out
insb
popf
pop
ss
enter
or
cmp
jle
test
mov
loopne
movsb
rsqrtps
dec
fisubs
sub
xor
movsl
mov
pop
or
xor
xor
ja
mov
jae
mov
mov
int3
fbld
in
rolb
stos
sub
inc
sbb
pop
arpl
leave
insl
leave
and
repnz
adc
mov
cmp
je
add
mov
jmp
rol
mov
cmp
or
xchg
inc
imul
push
imul
mov
push
ss
sti
push
lcall
idivl
data16
jne
xchg
orl
mov
xlat
sti
flds
jp
mov
fsub
scas
mov
rorl
notl
les
xchg
and
pop
mov
out
in
into
inc
sahf
cltd
mov
pop
mov
pop
loop
subb
in
fildll
ret
and
fsubrs
dec
divl
xorb
jge
xor
push
stos
push
xchg
ljmp
popa
scas
pop
cmp
push
lcall
sub
repnz
cmp
pop
mov
cmp
xor
stos
daa
loopne
je
addr16
stos
add
sub
xchg
xor
pop
jae
cli
mov
fsubrs
fdivrl
push
cs
xchg
add
mov
xchg
rcrb
add
xchg
push
jo
repnz
sbb
fsubrs
or
cs
bnd
sub
stos
inc
scas
push
in
mov
sub
roll
in
shl
es
cltd
pop
daa
dec
je
bound
stos
jns
add
push
and
or
xor
xchg
mov
fisubrl
and
jb
sub
and
fisubrl
std
inc
pop
call
lds
mov
pop
dec
in
add
and
push
push
mov
int
push
xchg
movsb
xchg
pop
frstor
cmpsl
arpl
mov
dec
jg
hlt
rcrb
push
inc
push
cmc
cmp
sub
loopne
adc
xor
and
xlat
mov
mov
lods
xchg
mov
mov
xchg
inc
sub
adc
in
ret
mov
pop
push
loop
mov
mov
in
mov
or
or
fidivs
icebp
fnsave
sbb
mov
dec
add
jb
movsb
jo
stos
out
mov
jno
mov
enter
xchg
mov
or
ljmp
xlat
xlat
dec
leave
shrb
in
rorb
stos
sbb
les
in
cmpsb
sub
mov
cmp
shr
and
jns
shll
sbb
and
cmpsl
jns
scas
gs
lods
or
mov
das
pop
add
and
inc
xorb
nop
push
pop
mov
test
mov
mov
mov
mov
dec
stos
test
in
pop
xchg
xor
dec
xchg
mov
mov
testl
movsb
shlb
fiadds
stc
pushf
jo
dec
scas
stos
fisubrs
aaa
insl
fadds
imul
ljmp
lds
fidivrs
jg
fwait
test
mov
jno
xchg
shll
out
jnp
jne
push
or
fisubl
mov
loopne
adc
clc
test
inc
add
and
fists
xchg
push
movsb
pushf
cmp
das
jle
out
stos
pushw
aad
fcoms
sub
fcoms
lods
mov
push
imul
push
in
fucomip
mov
dec
lock
add
mov
pusha
add
shll
xchg
xchg
test
pop
xchg
nop
pop
hlt
mov
iret
paddusw
pop
fdivl
cs
addl
mov
jnp
jecxz
imul
call
lcall
jl
les
xor
in
movsb
or
mov
sbb
outsb
add
clc
sub
in
cmp
dec
mov
dec
daa
cltd
mov
dec
sub
js
scas
imul
imull
sbbl
repz
mov
push
xor
cmp
nop
jo
dec
out
jae
xor
mov
push
or
mov
inc
sub
shrb
sbb
cmpsl
cmp
adc
insl
push
loop
scas
adc
xlat
leave
std
adc
lods
mov
lds
xchg
cld
rolb
xchg
ret
lea
mov
outsl
xlat
pop
sbb
fimuls
cmp
loop
test
push
loop
adc
ja
imul
jae
insl
loopne
xchg
rclb
adcb
call
push
fistl
adc
mov
lcall
pop
jo
stc
pop
pop
xchg
push
cmpsl
push
cli
ret
mov
cmpsl
insl
and
lcall
cld
pop
and
fistl
roll
jmp
xlat
push
xchg
pop
mov
and
lds
lcall
frstor
fs
mov
pushf
fisttps
pushf
mov
push
push
dec
mov
insb
enter
sbb
dec
dec
lcall
dec
inc
gs
dec
insb
add
data16
jb
jge
and
sbb
inc
xor
xorb
je
push
sub
fidivrs
adc
lods
cmpsl
mov
aam
iret
loop
cmp
jbe
roll
aas
out
cld
pusha
pop
out
popf
mov
call
stos
cmc
push
mov
mov
and
jmp
les
mov
push
gs
cmp
jae
xor
push
imul
test
sbb
into
int3
sbb
push
scas
and
or
out
inc
je
loopne
popa
outsb
add
lods
addps
mov
or
adc
sbb
insl
ljmp
addw
stos
xchg
rorb
push
mov
inc
sahf
mov
pop
aad
mov
test
adc
movsl
sub
xor
ja
xor
sti
test
test
call
ja
adc
mov
arpl
iret
push
add
xor
stos
and
bnd
scas
outsl
xchg
int3
mov
sub
div
sub
jo
loopne
push
mov
repnz
xchg
push
xchg
add
sub
out
outsb
push
mov
cmp
pop
adc
mov
xor
sbb
shr
xchg
loopne
out
movsl
ja
andb
sub
mov
inc
or
mov
fldenv
imul
inc
test
sbb
dec
push
stc
cmp
or
call
mull
inc
jmp
cmp
pop
shl
and
adc
sbb
push
cmp
lods
inc
push
fwait
cmp
movsl
int
fidivl
xchg
pop
ljmp
js
ficoms
dec
mov
xor
push
and
test
enter
jns
dec
loope
adc
sarb
jb
out
dec
push
or
cmpsl
adc
das
sub
and
push
mov
lods
test
pop
aam
xchg
push
dec
les
mov
push
cmc
scas
xor
lods
out
inc
scas
outsl
add
xchg
sbb
mov
lds
andl
jnp
outsl
or
xor
dec
sti
sbb
xor
xor
cltd
stos
push
test
imul
push
jnp
mov
adc
sbb
inc
test
lea
jmp
xchg
jb
jmp
pop
loopne
jno
scas
sbb
or
inc
mov
add
mov
cmp
mov
test
enter
cmp
ja
inc
pop
add
xchg
dec
lret
jb
cli
test
or
clc
into
pop
movsl
xchg
cli
inc
sub
je
adc
mov
adc
jp
icebp
xchg
fwait
pusha
jb
pop
pop
mov
dec
rorb
sbb
push
jmp
sti
mov
test
push
xchg
mov
and
dec
insl
out
iret
pop
cmpsb
imul
pop
fs
mov
mov
pop
cmp
xlat
jb
or
xor
add
std
rorb
sti
jmp
mov
xlat
out
call
pop
dec
add
pop
adc
mov
shl
add
cmp
ja
repnz
pushf
rcrl
jnp
mov
dec
sbb
add
decl
popf
cs
push
mov
bound
jle
mov
jbe
jnp
xor
stc
std
sbb
and
sub
xorb
xchg
cmp
mov
movl
jns
and
mov
push
inc
push
jno
addl
inc
adc
cmp
testb
ret
inc
mov
sahf
sbb
cmc
mov
pop
sbb
sbb
mov
sub
mov
mov
jl
mov
xor
xchg
sti
cmpb
jne
enter
lods
jnp
mov
cltd
mov
loope
mov
jecxz
and
pop
out
inc
pop
aad
fwait
xchg
loope
sbb
outsb
push
data16
add
and
enter
int3
add
xchg
ja
ds
lods
dec
outsb
stc
pop
jno
or
cmp
cmp
sbb
push
sbb
dec
mov
nop
push
push
imul
arpl
pop
fildl
cmpsb
inc
test
std
mov
arpl
jge
sbb
cli
jle
adc
push
lret
adc
adc
ja
popf
stc
push
sahf
icebp
xchg
xchg
inc
les
stos
cmp
into
popf
cltd
rorb
lock
inc
sub
lea
mov
mov
cmpsl
aad
lret
xchg
jg
sub
jp,pn
orb
add
lds
push
movsl
hlt
int
push
push
test
sub
in
and
in
sbb
cwtl
inc
and
sub
mov
stos
fwait
loopne
loopne
int3
jecxz
add
mov
and
pop
pop
adc
out
das
adc
cmp
fwait
mov
jo
dec
mov
jns
arpl
mov
fwait
int3
repnz
dec
call
jp
xchg
jnp
out
nop
in
xor
jae
clc
pusha
sub
mov
jge
std
or
lea
shrl
int3
leave
lods
sbb
or
jne
dec
sub
sbb
adc
inc
pusha
adc
cmpsb
cs
sub
xchg
or
xchg
je
xor
in
xor
mov
pushl
js
adc
pushl
and
movsl
test
dec
aaa
in
ss
jno
cmpsb
pop
sahf
sahf
dec
jecxz
dec
std
adc
cs
iret
addb
sub
dec
cwtl
lods
cmpsl
in
iret
loope
int3
lock
sbb
aas
push
clc
addb
adc
popf
push
ss
cmp
lahf
dec
stos
add
cmp
xchg
xlat
lcall
loop
or
repnz
orb
jns
dec
fistps
mov
aas
loop
inc
pop
sarb
push
repz
xchg
and
pop
out
sarb
gs
out
mov
imul
sub
out
repz
stos
int
adc
add
testb
out
jmp
movsb
shlb
or
add
mov
enter
cs
push
lods
pushf
popf
pop
mov
inc
sbb
or
inc
in
sar
add
xorl
stos
or
sub
loope
test
lea
sub
scas
nop
or
movsl
xchg
gs
pop
push
lcall
movsb
shrl
sbb
nop
insb
pop
mov
into
pop
movl
push
aas
adc
inc
mov
idiv
dec
push
sub
out
mov
scas
mov
push
jae
sub
jno
add
idivl
mov
shl
and
or
fidivs
int3
lock
imul
pop
fistps
out
push
xchg
dec
cmpb
fimuls
sbb
sbb
jb
jo
lret
or
or
in
jae
call
cmp
dec
and
ss
pop
push
lret
sub
pushf
movsb
dec
ss
mov
sbb
mov
cmpb
mov
mov
popa
rcl
out
mov
decb
and
loopne
adc
mov
jns
aas
mov
js
cmp
repz
xlat
xlat
add
cmpsb
rcl
loop
push
push
xchg
cmp
mov
adc
mov
std
push
jo
mov
inc
jne
cmp
daa
pop
pop
rorl
inc
jg
push
push
popa
ret
inc
popa
sbb
mov
mov
mov
add
lret
cld
sar
inc
enter
mov
lret
push
repnz
push
js
cltd
insl
gs
fiaddl
mov
adc
cmp
cltd
xor
pushf
xor
push
sub
aam
jo
cltd
leave
cltd
cmpsl
mov
ret
mov
mov
xor
fwait
xchg
fidivrs
mov
lret
sub
jmp
es
stc
into
cmc
adc
cmpsb
dec
push
xchg
push
out
cwtl
xchg
xor
loopne
cmp
mov
add
pop
in
in
rorl
mov
mov
or
mov
cmpsl
into
add
in
mov
jno
inc
mov
arpl
xchg
cli
mov
lcall
addb
sbb
jg
fucomip
xchg
adc
pop
mov
js
push
mov
aaa
addb
push
pop
imul
inc
loope
sbb
pop
xlat
pusha
cmpb
mov
fadds
in
fstl
xchg
out
jge
ljmp
add
sbb
mov
mov
jo
lods
es
addr16
out
mov
outsl
sbb
das
xor
filds
in
ret
hlt
mov
fstpt
sbbb
sbb
mov
out
aaa
adc
das
aam
es
xor
inc
lahf
std
sbb
adc
jae
dec
cmp
push
cld
cmp
clc
data16
adc
adc
pop
mov
nop
std
or
ror
lret
lods
pop
or
mov
cli
cmc
cmp
shlb
cmp
out
sub
daa
inc
xlat
mov
xor
lret
test
incl
jl
pop
subb
shlb
add
rorb
cmp
pop
out
sbb
fcoms
jmp
mov
repz
pop
mov
ja
and
add
jbe
fdiv
mov
cwtl
ds
mov
jmp
push
mov
cld
mov
inc
fcmovnu
cwtl
nop
cmp
stos
hlt
xchg
mov
mov
insl
je
cwtl
test
sahf
mov
insl
or
in
add
mov
inc
shr
mov
xabort
sbb
out
imul
outsb
testl
inc
jne
mov
adc
jns
cmp
jmp
inc
insb
divb
ret
loope
out
xor
pop
jl
xlat
lcall
stos
lods
jb
xor
insb
pop
inc
lahf
mov
add
std
out
insb
mov
fldcw
inc
cmp
pop
loopne
sbb
pop
sbb
fistpll
cmp
mov
movd
fmull
inc
mov
jae
push
and
jno
int3
out
push
hlt
dec
call
inc
js
xchg
popa
ret
xlat
jp
inc
inc
cld
adc
xor
loope
inc
dec
lods
loopne
aaa
cmp
cmp
fmul
mov
scas
dec
call
add
dec
push
sbb
mov
mov
ret
inc
or
inc
addr16
leave
outsl
movsb
in
inc
sub
test
fwait
mov
fdivl
push
mov
jns
jg
mov
mov
jns
jns
mov
sbb
sti
test
or
cwtl
add
xchg
sbb
mov
cmpsb
push
scas
hlt
mov
dec
inc
xor
in
pop
add
in
orl
divl
in
outsl
mov
fsubrs
mov
in
sub
jo
add
cmp
gs
daa
xor
jno
in
test
jbe
dec
std
rcl
and
testb
hlt
dec
xor
inc
bound
and
adc
mov
sbb
inc
push
popf
mov
or
dec
dec
lods
aad
push
aaa
decl
pop
fcmovnbe
adc
pop
jno
rorb
pmaddwd
add
dec
call
push
jo
dec
xor
and
lock
and
imul
push
sti
fldt
mov
rcrl
adc
push
push
into
pusha
sbb
mov
ret
xor
push
xor
ljmp
and
and
add
test
pop
fwait
xor
xlat
in
push
fisubrl
or
lods
pushf
lret
loop
imul
in
cld
inc
add
mov
scas
roll
imul
decl
imull
lods
mov
push
iret
rcrb
rorl
repnz
imul
pop
jecxz
lcall
pushf
repnz
js
rorb
push
adc
xchg
les
and
repnz
add
push
fidivs
or
mov
sub
addr16
cmpsl
push
int3
lretw
xchg
inc
dec
mov
aas
mov
jbe
mov
mov
push
xor
nop
jb
lcall
cmpsb
xor
cld
sti
and
jle
sub
mov
rorl
xchg
lea
and
fldt
push
repz
lock
je
xchg
mov
fcoml
test
adc
in
add
jnp
stos
sbb
addr16
inc
test
add
pop
and
cs
data16
mov
sub
mov
jbe
ror
xchg
pop
dec
in
mov
outsl
jnp
ret
test
xor
call
dec
xchg
sbb
sbb
push
cs
xlat
adc
sti
call
stos
hlt
icebp
daa
movsb
mov
mov
and
push
aad
push
pop
push
fcoml
push
add
mov
xlat
dec
xor
cs
mov
icebp
push
mov
jl
mov
inc
or
adc
mov
xor
push
ds
mov
adc
loope
cltd
push
xchg
xorl
or
stos
out
std
cmp
aas
xchg
jge
push
or
or
pusha
sub
insl
mov
mov
push
in
mov
fcmovnb
or
jle
lahf
push
ss
pop
out
cmp
pop
lods
jge
inc
testl
cli
mov
imul
addr16
pop
js
sarl
fmuls
std
pushaw
cmp
in
call
xor
mov
add
xor
and
fistpl
lret
mov
mov
xchg
sub
jmp
outsl
xchg
notl
xchg
scas
loopne
jno
inc
push
adc
test
fcomp
lret
mov
xchg
pop
out
xchg
inc
xor
inc
xchg
add
into
jle
mov
out
fcom
mov
push
cwtl
aad
push
jp
mov
mov
cmc
mov
adc
loopne
xor
aaa
mov
lret
jb
popf
mov
dec
imul
lds
lea
xor
mov
movsb
sbb
out
xor
mov
xchg
movsb
adc
mov
sub
sbb
sub
fiadds
mov
inc
jle
jecxz
pop
and
inc
xlat
cld
cmpsl
mov
fiadds
push
mov
jne
xchg
dec
cmp
push
jbe
pop
sbb
push
xor
xchg
lods
cmp
mov
dec
stos
test
fsub
xchg
sti
inc
mov
jo,pt
and
inc
stos
sub
push
lret
iret
mulb
sbb
mov
mov
xchg
or
pop
pop
lock
pop
dec
inc
push
imul
js
jmp
mov
insb
fs
rcll
inc
je
cld
cld
sahf
mov
fwait
call
mov
insb
repz
fadds
imul
xorb
stc
fnstenv
rol
stos
sub
sbb
add
dec
movsl
cmp
repz
popa
aaa
cmp
subb
pop
xchg
out
in
mov
push
xlat
dec
mov
les
cs
pop
loopne
fucomp
add
mov
frstor
mov
and
lret
sbb
into
adc
imul
fiaddl
in
push
dec
mov
jae
inc
in
test
and
ret
cli
movsl
add
mov
dec
outsb
int3
cli
lods
scas
or
test
dec
xor
sub
jmp
sbb
and
jo
jo
push
bnd
cmp
dec
rolb
repz
cmpsb
xor
lea
addr16
add
dec
test
adc
push
test
cmp
test
add
xor
jmp
mov
adc
inc
pusha
inc
mov
ljmp
cltd
es
negl
lods
jecxz
out
stc
jne
sub
ljmp
and
xchg
adc
push
push
sbb
sub
mov
ret
dec
fwait
jmp
gs
insl
mov
sub
push
idivb
lock
pop
cmp
or
dec
sbb
xchg
inc
cmp
fcoml
out
je
and
adc
fdivrs
add
fmuls
cmp
cmp
bound
outsb
mov
popf
rclb
ret
push
imul
cs
or
aaa
les
ret
mov
mov
push
sub
push
cmp
adc
pop
add
out
lret
cmp
enter
xor
jno
lods
jo
loop
push
xchg
push
popa
mov
pop
cmp
scas
xchg
xlat
sub
or
sbb
adc
sbb
cmc
cltd
jg
add
scas
cli
rcr
add
mov
pop
jo
cmp
fstpt
add
pop
mul
sti
mov
jl
pop
popf
nop
ret
mov
fwait
push
rorl
push
sbb
mov
pop
shrl
sub
jl
pop
and
fucomip
mov
cmp
pop
cmp
xchg
mov
leave
movsl
fistl
xchg
dec
fsubrl
daa
sbb
lcall
jbe
cltd
js
pop
push
fisubrs
push
jecxz
daa
fnsave
mov
add
xor
ficompl
mov
imul
arpl
cmp
mov
mov
pop
dec
and
arpl
mov
mov
xchg
loopne
pushf
adc
push
sahf
pusha
xchg
in
fwait
adc
scas
dec
mov
mov
js
out
pop
sub
xchg
jecxz
outsb
gs
shlb
inc
mov
lcall
dec
out
lahf
inc
mov
andl
sbb
adc
imul
sbb
inc
xlat
inc
leave
iret
mov
cmp
andb
xchg
mov
or
jb
addr16
rolb
into
ret
clc
mov
adc
adcl
push
bound
shl
shll
pop
inc
addl
cltd
cs
jle
lret
cmp
ror
add
mov
push
sahf
inc
dec
mov
rcrl
jl
sub
cmp
cmp
adc
push
push
inc
clc
inc
sub
stos
mov
rol
shlb
test
pusha
lret
pop
insl
sbb
test
std
mov
cli
jecxz
jmp
mov
sub
mov
push
adc
out
dec
add
std
or
adc
and
xlat
mov
and
cmp
cmp
in
adc
repz
popa
mov
imull
movsb
in
stos
mov
sbb
insb
cmp
xor
jge
or
adc
add
xchg
inc
sub
aad
iret
jge
lret
sbb
push
fisttpll
and
dec
enter
fneni(8087
and
or
push
enter
jg
imul
subl
cltd
shl
sub
ret
cmp
das
aas
mov
mull
lret
xchg
mov
mov
mov
and
ss
dec
lods
mov
lods
addr16
mov
cmp
dec
sbb
jbe
or
and
rcrl
inc
dec
xor
iret
dec
shrl
cld
inc
inc
pop
int
into
jb
inc
jmp
test
xchg
shll
jbe
pop
nop
or
cli
aad
imulb
inc
pop
mov
mov
xchg
dec
je
mov
jno
mov
cmp
sti
lods
mov
shl
adc
call
sbb
xchg
add
push
cmp
xor
es
popa
sti
sbb
mov
popf
cmp
dec
cmp
mov
and
ljmp
add
orb
lock
cltd
repnz
shl
aas
mov
xchg
scas
test
repnz
jmp
xchg
rorl
mov
lods
jo
das
repz
adc
mov
mov
es
imul
test
adc
lea
mov
loop
sbb
inc
add
push
rclb
mov
sbb
adcb
inc
daa
push
xlat
fcoms
mov
aam
mov
push
cmpsb
lock
push
push
mov
std
mov
ljmp
push
adc
rcrl
arpl
aaa
sar
andb
sti
jge
scas
into
mov
sbb
push
mov
inc
mov
lea
outsb
adc
movsl
jne
arpl
add
dec
addr16
js
adc
jmp
mov
inc
and
xchg
notl
je
test
xor
fbstp
es
or
mov
fadds
pop
loope
dec
popa
iret
sbb
or
add
mov
xor
subl
add
sbb
mov
clc
lds
aas
inc
notb
test
pop
inc
sbb
add
imul
mov
fidivrs
push
in
dec
jno
dec
adc
cmp
cmp
cmp
mov
icebp
dec
loop
pop
push
dec
lock
mov
xlat
and
lods
je
and
xchg
sub
mov
hlt
adc
insb
dec
std
and
push
adc
xor
addl
adc
lret
cmp
shl
mov
leave
cmpsl
push
jo
cli
jmp
pushl
or
sub
arpl
xchg
lea
mov
bound
push
loopne
or
mov
les
pop
pop
out
adc
movsl
sbb
lock
daa
mov
push
iret
jl
pop
aad
sbb
jmp
jge
sbb
jmp
fildll
leave
bound
imul
dec
sub
pop
sub
push
jmp
test
jmp
mov
jae
add
std
cli
jp
leave
inc
inc
jecxz
jae
sbb
push
jo
lock
jne
cmp
fs
into
fisubrs
outsl
lock
add
lahf
jae
lret
mov
mov
popf
inc
adc
pop
push
push
inc
mov
out
xor
xlat
push
sti
jnp
dec
arpl
incb
mov
jmp
cltd
sub
and
sbb
scas
push
xor
jg
xchg
rclb
mov
orl
in
sbb
and
arpl
aas
pushf
ficomps
xor
adc
scas
ljmp
stc
pop
and
jl
add
int3
loopne
adc
jo
sub
outsb
push
adc
aas
dec
iret
push
inc
insb
aad
mov
cmc
push
movsb
xor
jle
test
stos
nop
dec
ret
and
sub
negb
dec
push
cld
aad
in
pop
movsb
adc
mov
out
scas
das
pop
call
jmp
sub
mov
mov
add
mov
mov
sahf
sbb
aam
imulb
xchg
data16
movsl
mov
lods
mov
add
or
shrb
inc
scas
mov
adc
orl
push
mov
nop
mov
je
xchg
loope
xor
xorl
dec
hlt
inc
mov
pushf
imul
or
in
loopne
push
add
dec
pusha
jns
lods
out
and
xchg
sbb
xor
loope
je
in
pop
add
subb
cmp
jne
imul
roll
cmp
insl
push
sarl
call
or
push
adc
fsubrs
fdivl
shlb
cmpsb
and
dec
cmpsb
or
lds
les
dec
jle
pop
and
mov
in
popf
hlt
adc
scas
out
dec
lar
in
xchg
frstor
inc
outsb
mov
jb
jl
js
jp
jbe
or
cmp
loopne
add
push
jb
inc
fcmove
mov
mov
daa
or
or
push
cltd
or
push
test
int3
sbb
fwait
jmp
sbb
push
in
pop
jno
xlat
xchg
cld
shr
notl
inc
sti
mov
test
push
jg
add
sub
loopne
test
mov
out
mov
xchg
xchg
add
pusha
mov
jnp
jg
idivb
je
mov
imul
loop
add
ficoml
mov
push
insb
rclb
xchg
hlt
cmp
and
insb
and
jg
cli
int
inc
mov
shlb
std
ret
sub
mov
repnz
adc
lods
pop
pop
cmp
mov
or
or
inc
pop
cs
mov
push
jb
stos
mov
ljmp
adc
mov
mov
fdivrs
mov
sahf
aaa
push
les
xchg
push
movsb
add
cmpsl
lret
movsb
idiv
push
addl
mov
fiadds
popa
pop
xor
sbb
bound
cmp
mov
cli
dec
call
incb
les
xchg
jne
pop
push
aaa
das
and
rcr
add
dec
add
cmp
or
push
into
ret
push
lds
pop
pop
into
adc
cmp
out
js
lahf
sbb
jae
push
lret
loopne
cmp
add
movsb
adc
mov
adc
iret
push
fisttps
mov
mov
int3
sti
fistpll
in
ficoms
lods
std
jo
push
mov
push
cmp
cwtl
cmp
dec
movsl
mov
push
shr
in
clc
xchg
add
and
movb
jne
mov
cmp
out
sbb
outsb
inc
or
sub
fistps
lods
lods
ss
int
ret
fbld
out
lods
sub
mov
push
pushf
mov
lds
cwtl
mov
push
out
inc
jp
gs
in
fidivl
push
outsl
cmp
aaa
or
dec
mov
stos
adc
inc
pushf
sub
int
scas
dec
das
cld
es
jbe
out
xor
add
dec
mov
xor
fiadds
push
out
mov
sbb
mov
mov
pushf
popa
sbb
fldcw
pop
adcl
add
mov
mov
enter
dec
and
push
test
pusha
mov
das
jge
std
mov
movsb
jge
subb
or
cltd
pop
shlb
shl
push
cmp
pushf
rolb
in
xchg
xchg
iret
out
prefetch
or
mov
and
mov
sub
mov
ret
pop
mov
daa
rcll
int
ljmp
lcall
inc
pop
jp
scas
shlb
sahf
arpl
push
mov
jle
push
lods
push
pop
shrl
xor
sub
or
and
rcrb
sti
loop
out
gs
cmp
rol
dec
mov
inc
popf
mov
push
lea
stc
sub
xchg
jl
xchg
mov
addb
in
shrb
sub
inc
arpl
scas
jl
xor
in
mov
addr16
add
mov
mov
mov
jne
jbe
xor
push
fcoml
xchg
rcll
sahf
xor
gs
int3
dec
sarb
int
fwait
cmpsb
mov
les
xchg
mov
ret
mov
dec
out
xorb
stc
mov
addr16
xchg
xchg
inc
outsl
mov
mov
jns
sahf
lea
lock
jp
adc
out
xchg
test
jns
hlt
jmp
push
nop
xor
sar
mov
stos
outsb
loop
lahf
sub
dec
cmc
or
int
bound
mov
mov
leave
repz
aas
mov
cmp
xchg
mov
aam
push
sbb
data16
push
ds
cmp
ret
xor
shlb
pop
shll
clc
xchg
ret
aad
mov
adc
cwtl
sahf
test
into
mov
sub
sub
xor
rorb
pop
push
negb
mov
cwtl
ljmp
cld
xlat
add
cli
add
fadds
and
notb
lds
jae
xor
outsb
push
lret
lcall
in
test
inc
mov
lfs
push
rolb
loop
pop
into
push
sarl
mov
lods
xor
or
inc
div
pop
pop
mov
mov
cld
imul
and
mov
scas
mov
jle
and
cmpl
int3
jae
clc
mov
xchg
jmp
lahf
sti
outsb
sar
cmpsb
fcmove
lret
into
xchg
pop
mov
or
inc
sti
cmovne
mov
test
mov
idivl
pop
out
xchg
sbb
ret
daa
dec
les
movsb
int3
mov
mov
mov
aas
mov
jle
or
movsl
and
test
push
xor
movsl
inc
jmp
out
mul
loope
out
int
scas
outsl
or
adc
dec
adc
dec
in
test
je
repz
xchg
inc
scas
rcrb
imul
xor
xchg
ljmp
ljmp
xchg
xor
xor
mov
and
sub
cwtl
or
and
pop
jns
jmp
dec
push
js
mov
add
loopne
scas
rdpmc
inc
cmp
loopne
sub
add
in
xor
push
cld
mov
mov
cmp
jbe
xor
sbb
xchg
and
ret
pusha
sbb
or
mov
loopne
addr16
loopne
lcall
mov
aas
cmp
xorb
cwtl
dec
mov
jne
cltd
roll
test
imul
pop
push
movsb
cli
jg
pop
adc
mov
aas
jo
add
dec
dec
stos
mov
push
fdivr
dec
dec
andl
imull
dec
push
lret
mov
or
push
push
jmp
mov
dec
subb
or
mov
cmpsl
lea
pop
orb
sub
aaa
jae
loop
cmp
mov
or
adcl
les
mov
or
loope,pn
ret
xlat
insl
mov
mov
jle
aaa
dec
pop
pop
inc
xchg
loopne
ss
sbb
ja
pop
mov
inc
lock
test
dec
stc
mov
sahf
push
push
pop
mov
cmp
sbb
mov
push
imul
and
lock
mov
or
mov
fmul
dec
int
sub
and
dec
insb
out
mov
rcrl
bnd
push
sarl
jmp
xchg
mov
lea
push
add
pop
outsl
es
and
hlt
pop
popa
out
adc
imul
lea
rorb
add
sub
dec
sbb
or
add
jle
dec
or
movsb
push
jp
inc
xor
jns
data16
aam
xor
ja
leave
decl
and
xor
rol
inc
dec
fisttpl
pop
pop
push
lahf
add
popa
mov
push
pop
add
lahf
fisubrs
inc
fs
dec
or
or
lcall
push
mov
cmp
dec
out
nop
or
sub
andl
mov
ror
in
int
adc
adc
and
test
mov
adc
jae
jbe
push
iret
pop
sbb
xchg
stos
das
xchg
sbb
add
out
mov
sub
mov
out
mov
jmp
sub
add
add
enter
jmp
dec
cmp
dec
mov
inc
sbb
sub
mov
les
dec
pop
mov
add
adc
repz
pop
aad
popf
inc
pop
lea
imul
xchg
fsubrs
push
add
pop
ds
fldcw
hlt
cld
mov
popf
and
push
roll
and
mov
jo
xchg
cmp
gs
out
and
xor
inc
out
or
ds
stos
xor
out
or
cmp
jb
loope
std
aaa
test
push
inc
into
mov
adc
fs
sbb
jns
xlat
lock
xchg
fs
imul
add
pop
dec
mov
and
imul
scas
add
cmc
cwtl
and
mov
dec
cmp
nop
in
xor
adc
adc
adc
sti
sub
pop
mov
adc
cwtl
mov
mov
cli
jo
bound
ret
jp
daa
test
or
pusha
push
pop
or
lea
or
sub
jne
jp
leave
adc
mov
pop
jno
cli
push
lock
jmp
mull
inc
inc
bound
addr16
aas
sbb
jl
xchg
cmp
jg
dec
mov
push
fwait
sbb
push
and
mov
dec
xchg
and
xchg
sahf
push
add
cmp
jne
mov
and
in
cmp
dec
fstps
sbb
sbb
cwtl
xchg
mov
dec
cmp
lcall
les
scas
les
vpmacssdd
pop
jle
js
lret
repz
leave
leave
cmp
shl
sbb
dec
push
xchg
lcall
jl
mov
mov
cs
movl
mov
xchg
popf
and
cmp
push
rcll
xor
mov
xchg
push
das
jmp
out
xor
push
jge
mov
fsubrp
pushf
mov
push
dec
stos
add
add
enter
jl
sub
dec
ret
in
adc
add
pop
imulb
sbb
xor
fwait
ljmp
movsb
out
lahf
jnp
add
xor
das
mov
adc
scas
mov
les
jge
fdivs
xchg
jae
pushf
movsb
mov
adc
fdivrl
cwtl
sbb
repnz
out
jecxz
repnz
mov
adc
sbb
test
imul
mov
xchg
mov
cmp
cmp
cmc
fstps
iret
push
sbb
pop
dec
cmp
mov
and
lret
jae
fcmovb
jmp
mov
xor
mov
stos
rcrl
sbb
inc
lods
inc
test
and
rorl
in
add
loop
aaa
stos
pop
gs
or
sbb
inc
pushf
in
inc
pop
pop
test
lret
xor
sub
xchg
out
push
clc
das
sbb
push
xchg
jge
push
push
ret
pop
fcoml
xor
and
ds
add
hlt
mov
jno
sarl
out
pop
iret
sbb
test
test
cmpsb
pop
movl
push
repz
lds
xchg
adc
ja
and
xchg
fwait
es
jle
push
jecxz
cmp
xchg
cld
sub
imul
xchg
clc
stc
stc
fidivrs
add
scas
roll
arpl
testb
outsl
cmpsb
adc
out
cmp
pop
filds
mov
cmpsb
pusha
sub
sbbb
adc
jo
sahf
mov
test
jns
push
push
iret
cmp
and
adc
orb
jg
mov
cmp
xchg
xchg
ret
scas
shll
outsb
or
mov
mov
mov
hlt
addb
fsub
test
xchg
xor
je
int3
lret
ret
push
test
insl
mov
push
arpl
leave
inc
lret
frstor
decl
xchg
fbstp
cmp
in
shlb
cmp
outsb
mov
xchg
or
movsl
xor
xchg
inc
out
xchg
xchg
push
scas
imul
std
mov
insb
push
aad
sti
inc
addr16
adc
adc
add
fcomps
insl
dec
cld
dec
pop
cmpsl
push
mov
ss
xchg
sahf
adc
dec
cld
in
push
insb
out
add
cmp
xor
call
inc
ds
push
add
push
pop
fnclex
rdmsr
cmp
jno
pop
sbb
sti
push
test
lret
outsb
orl
ficoms
or
pop
jne
xchg
in
ds
sbb
orl
lcall
out
jge
test
lods
in
push
jle
imul
addl
sbb
lods
in
enter
xor
add
push
mov
sbbl
push
sbb
pop
inc
stos
aas
popf
xchg
mov
out
fcomip
mov
push
in
cmc
add
xchg
mov
aas
inc
sub
lcall
push
jbe
loope
aas
mov
enter
repnz
mov
jge,pn
bound
xchg
adc
lds
outsb
sbb
pop
call
mov
subb
out
lret
lds
or
mov
frstor
aad
jl
jne
xorb
sub
or
mov
fimuls
test
inc
aaa
sub
mov
mov
lea
mov
call
pop
ds
and
and
cs
mov
test
mov
imul
mov
stc
jp
pusha
sbb
xlat
jo
cltd
push
loop
enter
or
jl
daa
dec
jno
clc
inc
mov
insl
pop
std
jns
test
call
pop
adc
xor
rcll
stc
push
add
fdivp
cwtl
push
push
pop
sbb
sub
sbb
dec
ljmp
mov
rolb
mov
jge
sbb
jbe
xorl
scas
mov
lods
and
push
lods
dec
gs
xor
push
cmp
xor
mov
add
jne
dec
or
ljmp
ret
jg
ja
stos
or
xchg
or
xchg
jno
sub
andl
sbb
dec
notb
push
mov
in
cmp
aas
sbb
loop
clc
lods
and
pop
inc
aad
and
lods
pop
arpl
add
cmp
jecxz
ja
sahf
xor
mov
insl
mov
pop
xchg
cld
in
inc
outsl
pop
jbe
sbb
cmp
hlt
jmp
cmpl
out
cs
cmpsb
or
in
dec
stos
cmc
scas
ds
fucomip
cltd
hlt
cli
lret
movsb
faddl
jp
sbb
or
pop
xor
dec
jp
outsb
ja
or
jle
lock
flds
clc
mov
mov
mov
inc
adc
enter
adc
mov
mov
adc
jle
jae
sahf
sub
dec
stos
xchg
fucomp
inc
sti
stos
mov
fs
loopne
mov
pop
cld
sub
push
dec
sub
rcr
lock
fsubp
and
or
push
scas
jmp
clc
popa
jp
xchg
in
mov
inc
jge
cmp
adc
mov
jp
dec
add
inc
icebp
sarb
mov
std
pop
gs
push
cmp
in
outsl
js
mov
dec
addr16
lods
inc
enter
push
in
push
fdiv
shr
ja
in
pop
push
dec
xor
sub
pop
js
inc
cs
aad
push
rolb
jg
clc
aas
pop
xchg
jb
pushf
in
sub
out
lds
xor
pushf
dec
xchg
orl
fld
push
std
inc
push
xchg
mov
jae
sbb
mov
sahf
movsb
insl
data16
aam
lea
adc
inc
imul
subl
or
pop
lret
mov
add
cmp
aam
nop
inc
pop
movsl
dec
push
clc
stos
dec
inc
fcmovne
xchg
mov
scas
out
pop
lcall
es
dec
push
jmp
xchg
das
dec
xchg
or
pop
cmpsl
cltd
dec
xor
out
push
cmpsb
push
rorl
es
cwtl
mov
mov
dec
dec
mov
incl
ret
gs
mov
xchg
addr16
cmc
jmp
lds
sub
jg
aam
in
xor
add
lea
or
push
pop
into
xor
add
loopne
xchg
mov
xchg
pop
cmp
ds
mov
adc
addr16
loopne
or
jb
je
stc
adc
dec
jecxz
call
add
in
imul
jae
sahf
jg
jmp
popa
es
xchg
lds
lds
mov
push
aam
fadds
es
fcoms
mov
jns
mov
ret
mov
fbstp
pop
mov
loope
adc
out
fwait
push
aaa
and
int3
inc
jp
int3
push
adc
inc
iret
lahf
xchg
jge
pop
lcall
push
jecxz
in
mov
fidivrl
in
aaa
std
ds
xchg
push
iret
and
ja
fwait
iret
call
push
push
inc
push
mov
daa
insb
in
push
int
les
outsb
es
out
push
inc
jmp
sbb
repnz
pop
jo
out
jl
jno
jl
pop
sahf
in
cmp
lret
cmp
xchg
cli
ret
pop
pop
pop
lret
lahf
and
or
ret
mov
inc
lea
pop
fidivs
adc
sbb
xchg
fistl
or
push
xchg
mov
cs
std
repz
int3
xchg
push
mov
dec
ljmp
rcll
adc
daa
call
xorl
sbbl
or
dec
sbb
mov
call
xor
ret
add
mov
sub
or
mov
jl
mov
je
aam
rcrb
and
fisttpl
mov
or
shr
cmp
jne
add
es
add
insb
repnz
sub
pusha
popa
inc
or
in
jecxz
pop
lock
pop
adc
ret
mov
mov
in
mov
fldl
xorl
inc
sbb
inc
popf
out
lret
adc
jg
inc
lock
pushf
mov
in
lods
lcall
fistpll
and
push
xorl
mov
fildll
lock
xchg
push
punpcklwd
inc
arpl
js
inc
pop
pop
sub
pop
stc
xchg
mov
xor
sarb
mov
push
add
mov
jnp
sub
fstp
dec
out
lea
ret
sbb
cmp
cld
aaa
xlat
adc
xor
dec
data16
psubusw
int
inc
repnz
repz
push
cltd
mov
test
lods
out
xor
inc
imul
sbb
mov
int
dec
xchg
cmpsb
popa
js
enter
sbbb
and
add
add
std
imul
jmp
sub
jbe
pop
out
pop
mov
pop
cld
inc
lret
dec
cli
mov
sti
mov
call
clc
popf
xlat
in
pusha
js
sub
mov
aam
or
and
fcoms
sbb
pusha
add
cwtl
adc
cmp
cs
mov
mov
mov
ds
fs
pop
jnp
dec
jge
pop
inc
ljmp
push
jecxz
add
inc
xchg
pop
pop
mov
jl
xor
dec
das
adc
imul
bound
dec
jmp
jle
or
stc
sbb
cmp
lods
outsl
sub
iret
aas
jge
push
lret
xor
or
inc
stc
or
adc
mov
jmp
shll
and
lods
nop
in
icebp
gs
jmp
addr16
rcrl
push
movsb
aad
mov
imul
pusha
mov
mov
test
push
jno
jecxz
adc
lahf
dec
xor
in
mov
sub
int3
xchg
jg
jne
add
bound
adc
push
xchg
xor
mov
fwait
pop
push
dec
adc
fsubs
push
cs
dec
mov
xor
mov
cmpl
sub
xor
cmp
add
adc
ja
xchg
dec
mov
cwtl
mov
push
push
outsb
mov
jp
and
movsb
arpl
mov
cmc
mov
jo
cmpsl
test
outsb
shlb
and
cmp
push
sbb
pushf
ror
add
add
ret
mov
jge
mov
lahf
push
mov
mov
xor
jnp
ljmp
xlat
test
fucomip
dec
pop
test
rclb
jae
aas
es
jne
jo
fstl
adc
idivb
or
stc
out
mov
add
stos
sub
data16
cltd
mov
outsl
mov
ja
pusha
out
fs
cs
pop
popa
das
call
push
sbb
stos
push
cmp
push
jp
inc
mov
jnp
out
out
nop
inc
lods
mov
push
sbb
jecxz
aaa
mov
popf
xlat
adc
push
aam
fwait
shll
in
sbb
inc
aaa
into
outsb
mov
repz
imul
lods
les
fwait
insb
xchg
mov
sub
mov
sub
xchg
jnp
in
sarb
mov
outsl
mov
cwtl
shlb
rcll
add
clc
cltd
add
mov
imul
gs
dec
ret
mov
lods
orb
ficompl
push
stos
mov
mov
in
push
push
and
mov
or
mov
inc
push
mov
push
sbb
cltd
fidivrs
sub
ja
or
push
xlat
xor
daa
jmp
cmp
std
mov
adc
out
fwait
test
test
dec
sarl
cwtl
aam
mov
flds
ss
enter
jno
fisubl
icebp
out
cmc
sbb
push
jecxz
mov
sbb
sbb
sbb
lea
mov
mov
fbld
jne
out
pop
adc
fcomps
xchg
clc
cmp
add
insb
mov
flds
lds
sarl
stos
je
mov
aas
mov
lret
movsl
aam
pushl
cld
inc
push
mov
fidivl
les
fwait
fcoml
mov
and
pop
push
and
xlat
or
inc
xor
icebp
int
xor
push
mov
fwait
cmpsl
cmpsl
enter
pushf
sar
mov
sub
pop
imul
inc
js
fs
push
mov
pop
dec
and
mov
or
push
mov
cmpsb
test
lahf
cli
and
or
xor
sbb
fiaddl
das
loope
scas
aam
outsl
push
icebp
cli
call
repnz
xor
ss
loop
dec
mov
xchg
xchg
in
adc
or
mov
cmp
stos
push
xor
inc
repnz
leave
pop
fldenv
xchg
jo
and
call
pop
mov
push
mov
cli
sbb
cmp
pop
push
aad
incb
loop
movl
xchg
and
gs
jmp
jmp
test
sub
iret
xor
mov
in
stos
divb
inc
mov
sub
inc
movb
lcall
test
inc
sub
jecxz
enter
mov
jl
out
mov
jne
clc
lret
cs
cli
int3
imul
das
pop
inc
or
and
cld
xlat
fsubrl
das
cld
push
cmp
dec
orl
lods
nop
pop
ljmp
mov
xor
jno
and
test
jle
push
stos
jnp
lahf
pop
cmpsb
push
sahf
popf
add
push
out
outsl
rcrb
lds
dec
dec
inc
bound
ss
lods
scas
pop
ljmp
loop
mov
mov
into
nop
jb
xchg
jg
in
xchg
xor
das
in
loopne
mov
inc
ds
adc
xchg
cmp
loope
push
jge
cmp
data16
jecxz
xor
pop
push
dec
daa
cmc
sbb
scas
xchg
loopne
jl
lahf
mov
jbe
pop
loope
xor
mov
xchg
scas
mov
xor
sbb
xlat
int
xchg
add
push
pop
rorl
scas
outsb
cld
sbb
aad
icebp
mov
int3
add
cmp
pushf
movsl
pop
repz
mov
in
sbb
aam
jo
in
mov
push
mov
insl
cmp
daa
ja
adc
push
int3
sbb
out
int
stos
cmc
cmpsb
test
out
ret
dec
out
jge
and
mov
mov
or
push
mov
fisubs
rorb
inc
xchg
rsm
loopne
imul
dec
fwait
lds
mov
enter
adc
cmp
mov
test
arpl
pop
mov
aaa
or
clc
insb
dec
cmp
cld
sub
test
and
negb
out
js
jae
movsl
cwtl
xchg
push
gs
adc
cmpsb
stc
inc
adc
dec
les
push
sub
in
es
xchg
inc
gs
es
push
int
cmpsb
push
mov
icebp
ret
jg
stos
and
and
fbstp
mov
es
imul
push
adc
dec
xchg
and
mov
daa
cmpsl
and
cmp
aaa
data16
fucomi
lods
adc
daa
scas
push
jecxz
test
enter
and
jne
and
xchg
in
sbb
decl
push
icebp
mov
fcmovnbe
mov
cmp
inc
push
push
mov
pushf
lcall
call
mov
xchg
xchg
into
and
pop
push
or
inc
add
mov
mov
lahf
pop
pop
dec
inc
add
popa
sti
inc
and
addr16
and
adc
andb
add
jne
mov
dec
sub
or
loopne
xchg
mov
stos
push
xor
in
inc
ret
je
pusha
pusha
lahf
mov
je
int
lret
clc
mov
mov
dec
test
mov
adc
jns
xor
jns
mov
into
scas
pop
test
out
push
in
mov
inc
pop
jge
cmp
push
push
lods
or
aas
loop
out
fs
nop
inc
popa
push
cmp
inc
insl
mov
pop
dec
inc
les
mov
popa
jb
cmp
inc
push
test
add
sbb
cmp
mov
out
insl
lods
rcrb
std
cmpsb
mov
xor
mov
stos
sbb
movsl
ret
aam
movsb
movsb
adc
push
insb
mov
js
jmp
sbb
adc
loope
mov
xchg
adc
insl
addr16
stc
mov
mov
sub
testb
dec
mov
jmp
jne
xchg
jp
ret
inc
cwtl
adc
and
outsb
xor
xchg
or
movl
lods
jmp
je
leave
ljmp
pop
cmp
inc
dec
inc
xchg
shl
mov
add
mov
and
leave
incl
popf
fildll
inc
stos
imul
add
cwtl
aad
push
fnstsw
clc
jnp
xchg
inc
mov
and
stos
pusha
lods
dec
jmp
jns
jecxz
mov
adc
not
xchg
lahf
mov
nop
das
push
sbb
cmp
rcll
add
mov
lahf
pop
popf
sub
movsb
mov
fadds
xchg
add
addb
fsubrl
inc
add
loopne
call
xchg
je
or
leave
mov
movsl
enter
out
jae
push
xchg
das
jmp
dec
or
push
enter
mov
in
inc
ret
xlat
sbb
roll
sbbl
xor
lods
xor
jl
and
cs
and
sar
fwait
leave
cmp
jno
xchg
ljmp
mov
mov
adc
mov
adc
cmp
ud1
loop
loope
jae
cmp
xor
in
mov
and
inc
inc
mov
and
pop
outsl
mov
jnp
pop
and
pop
adc
push
push
test
stos
ret
outsl
fstpl
push
inc
cltd
xlat
sbb
cmpsl
push
adc
pop
adc
sahf
xchg
ljmp
test
ficomps
xchg
out
xor
jns
in
mov
sub
scas
xchg
cmp
inc
insl
xchg
cltd
xor
mov
push
sbb
adc
inc
push
mov
sbb
out
inc
sub
int
mov
or
dec
test
shrl
pop
lods
sub
adc
shll
mov
cmp
pop
cli
fisubrs
mov
jg
xchg
and
xor
jo
inc
jl
xchg
pop
adc
push
out
xchg
xor
jge
int
lods
jp
xchg
arpl
sbb
mov
push
ret
lret
mov
sub
jbe
pop
rolb
mov
dec
cs
add
pop
outsl
mov
mov
mov
add
push
test
sub
rcrb
outsb
cmpsl
cmpl
cmpsb
and
lea
pop
outsl
or
mov
mov
push
in
inc
sub
push
mov
jnp
adc
shll
mov
xor
xor
adc
cli
mov
xor
cmc
jmp
add
sbb
je
pop
jae
hlt
cmc
lret
call
add
mov
add
push
pushf
push
ffree
add
push
jae
lea
xchg
test
cmc
sbb
sbb
call
sub
ja
cltd
mov
stc
pop
imul
push
jnp
gs
jno
cmc
and
sbb
pop
fwait
test
out
push
loopne
adc
into
jnp
mov
or
or
add
lods
stos
or
testl
mov
mov
xchg
cmpsl
ss
test
fwait
adc
mov
scas
rorl
lret
daa
int
and
xchg
in
inc
inc
mov
pop
cli
mov
sbb
dec
scas
push
stos
mov
or
inc
mov
out
adc
jo
push
xor
setl
dec
or
push
fincstp
adc
sub
gs
mov
push
aaa
cmp
negb
xchg
outsb
call
xchg
sbb
scas
gs
testb
lds
daa
mov
je
dec
mov
loop
cmp
pop
jle
xchg
shll
scas
add
movsl
fdivs
jnp
test
addr16
push
bound
lret
repz
into
cltd
insb
jmp
andl
push
cltd
mov
cmp
stc
pop
aas
cmp
or
aad
ret
cld
xchg
pop
mov
ret
push
roll
ljmp
pop
jnp
les
xchg
xchg
sub
mov
sub
enter
jecxz
pop
pop
das
out
dec
addr16
inc
daa
arpl
pop
add
daa
dec
sahf
pop
dec
mov
sub
rcrl
jl
or
lret
mov
sub
sbb
scas
lahf
jmp
cli
pop
jmp
jbe
jecxz
xchg
mov
outsb
xchg
sbb
push
mov
sbbl
int3
mov
outsb
mov
mov
popf
fs
jb
mov
loop
push
je
pop
test
das
nop
mov
jl
inc
lods
leave
push
lahf
mov
orl
xchg
xorl
flds
push
popa
pop
gs
insb
sbb
repz
out
fwait
cwtl
xchg
push
and
lds
dec
mov
cmp
jnp
jne
rolb
inc
pop
ds
inc
sub
lret
pop
jae
sub
jbe
sub
mov
in
adc
sahf
inc
push
cmpsb
ds
xchg
ss
lret
data16
add
imul
int3
js
xchg
fcompl
add
mov
sub
repz
pop
inc
cmpsl
dec
std
mov
jb
sub
push
cwtl
ficoms
xor
pop
jae
in
shr
push
iret
pop
adc
cwtl
movsb
sbb
mov
xor
cmpsl
jns
xchg
cwtl
cmp
mov
inc
push
call
loopne
inc
mov
sahf
addb
movsl
sar
and
push
push
iret
mov
adc
push
jp
lods
loopne
and
sub
or
test
negl
mov
mov
outsl
fildl
leave
inc
adc
aas
jbe
mov
into
test
jbe
mov
xor
das
xchg
pop
movsb
adc
lods
fldenv
pop
jecxz
divb
cmc
or
mov
xor
ljmp
test
or
sbbb
mov
xor
je
stos
or
cmpsl
iret
jge
push
imul
sub
fcoms
sar
pop
test
or
stos
sub
jo
jbe
testb
shlb
ja
mulb
inc
dec
movsb
pop
sbb
mov
pop
mov
sbb
or
sub
dec
sub
in
addl
repnz
mov
pop
lods
sub
xor
or
lea
sti
sbb
lock
dec
dec
lds
add
aam
clc
test
push
add
sub
int3
mov
and
imul
in
add
pop
in
bound
ret
mov
pop
dec
mov
pop
es
movsl
and
cmp
add
push
lds
sbb
lods
push
dec
jecxz
icebp
dec
mov
fbstp
sbb
call
neg
inc
fisubrl
outsb
xor
pop
jnp
mov
outsl
or
popf
cmp
xchg
jnp
nop
imul
int
mov
out
mov
inc
les
scas
jno
vpcomuw
out
repz
out
mov
sub
loop
enter
jae
jo
popa
and
xor
std
loop
pop
insl
popf
jg
xor
ss
cmp
das
movsl
stos
outsb
pop
jnp
les
movsl
pop
ljmp
cmp
jl
sub
movsl
int
fcoml
mov
negb
aam
imul
outsb
cmp
xchg
shr
mov
mov
pop
out
pop
lea
sbb
pop
lcall
mov
in
xor
mov
xor
push
inc
sbb
inc
cwtl
cmp
mov
jmp
inc
sar
cmc
neg
daa
mov
int
cmp
hlt
jo
insb
xor
cmp
ret
test
out
push
movsl
cmp
lahf
daa
sub
xchg
rep
add
pop
das
and
inc
jb
orl
lea
mov
and
push
xor
and
int
ret
sar
adc
jle
sbb
out
das
push
or
scas
add
adc
xor
loopne
icebp
adc
mov
push
cld
mov
jns
cmp
xchg
out
daa
popf
cmp
xchg
adc
xor
scas
call
cmp
hlt
outsb
inc
int
cmc
outsl
ret
cli
rolb
xchg
xchg
xchg
or
sbb
or
push
adcl
mov
adc
jmp
push
push
mov
insb
les
pop
out
test
pop
movsl
dec
push
cmp
mov
fsubr
cmp
rcrb
loopne
arpl
and
pop
or
lds
jecxz
shrb
xor
sub
leave
xchg
adc
test
sbb
inc
pop
cmp
or
lods
fcoml
sahf
jbe
cmpsl
push
mov
je
dec
pop
leave
add
dec
mov
or
loop
xchg
sub
xchg
lds
daa
dec
fsubrp
pop
icebp
rorb
mov
lcall
lds
mov
icebp
setge
lea
sbb
xlat
mov
jge
js
mov
mov
lock
xlat
and
push
mov
aaa
ss
jl
xchg
loop
imul
aas
cmp
ds
out
mov
fs
js
enter
xchg
jae
or
and
cltd
in
sub
sub
sahf
mov
push
adc
add
sub
mov
push
mov
push
adc
aaa
ret
daa
ret
mov
dec
cli
pop
pusha
arpl
mov
mov
aad
pop
xor
push
int3
xchg
pop
shrb
fists
cmp
xchg
popa
out
inc
in
lahf
pop
or
adc
scas
mov
lods
fcmovb
jge
jb
jmp
jo
fisubl
das
sbb
std
aam
push
ret
mov
test
repnz
cmp
aam
and
outsl
and
and
inc
pop
ja
and
in
stos
cld
add
xchg
mov
sti
scas
adc
and
add
mov
mov
das
les
fnstsw
xadd
jecxz
and
lcall
pop
ret
shr
pusha
add
out
fidivrs
mov
in
xlat
js
fwait
pushf
cmp
mov
pop
mov
shll
sti
cmp
xchg
out
cltd
push
add
xor
pop
ss
hlt
inc
loop
add
jecxz
aad
in
call
sub
sbb
and
out
arpl
iret
or
sub
adc
fdecstp
das
push
adc
inc
ljmp
adc
xchg
dec
dec
stos
mov
cmp
jne
imul
fnstsw
pop
xchg
xchg
cmpsl
mov
sub
pop
xchg
dec
int3
push
cmc
out
pop
jmp
sbb
push
aas
fcmove
rol
jle
and
cmp
push
pop
push
movsb
int3
cmp
xchg
pop
das
in
call
cli
jp
int
dec
popf
pop
adc
lds
in
int
ret
aaa
sub
and
xchg
nop
inc
outsl
shll
xor
int3
fmul
lcall
add
loop
imul
les
mov
loopne
inc
jo
mov
adc
dec
add
out
insl
imul
mov
mov
mov
inc
sbb
fldcw
or
sub
jo
push
lret
popl
push
stc
sbb
repnz
sub
inc
mov
adc
fs
mov
inc
pop
mov
in
decl
roll
stos
or
push
xorb
loop
mov
mov
mov
push
add
cmp
mov
sbb
inc
sbb
or
mov
jl
sbb
fdivrs
xchg
pushl
enter
outsl
movsb
rcrl
test
xchg
cmpsl
outsl
xchg
inc
cwtl
adc
fcoms
adc
out
cmp
arpl
push
int
add
cmp
jecxz
pop
fadd
adc
into
loop
scas
mov
aas
mov
stc
stc
jno
pop
mov
mov
push
mov
xchg
push
jbe
xor
hlt
aas
mov
mov
mov
jae
xchg
mov
xchg
add
sahf
and
lock
adc
cwtl
out
aas
xchg
ljmp
outsb
adcl
bound
pop
adc
movsb
cmp
xchg
jo
js
jno
sarb
fildl
jae
sub
nop
popf
adc
xor
cwtl
fistl
cmp
test
adc
insb
fisubs
add
mov
jns
inc
loop
stos
pop
and
adc
sub
mov
test
inc
inc
pop
and
mov
xchg
pusha
sbb
push
adc
sub
lods
add
arpl
fwait
int
xor
fcomip
push
cs
lahf
lahf
into
push
mov
adc
ja
ret
rorb
out
lods
pop
arpl
arpl
pop
out
mov
lcall
hlt
mov
insb
in
adc
xchg
push
add
and
xor
xchg
ret
lods
inc
aaa
jne
inc
inc
pop
scas
out
into
add
add
mov
mov
jmp
xchg
or
mov
inc
xchg
shl
xchg
jae
push
push
jo
cld
imul
fsubr
pop
ljmp
jnp
push
jle
es
sbb
mov
fnstenv
aaa
sbb
shrb
or
shll
xor
aad
sbbl
test
pop
or
xor
pop
mov
push
pop
clc
jne
add
add
mov
inc
mov
push
fldl
push
or
shlb
push
mov
push
sub
popf
adc
jmp
push
fcmovne
pushl
rorb
int3
and
pop
mov
in
push
sub
sti
mov
add
es
sbb
cmp
or
jge
mov
mov
iret
lret
out
shrb
pop
out
inc
enter
cmpsb
and
dec
fdiv
ljmp
sub
hlt
lret
mov
xor
inc
push
push
add
fisubrl
and
adc
mov
mov
bound
dec
in
rcrl
dec
cmpsb
je
dec
xchg
mov
adc
jmp
sub
mov
cmp
and
xchg
push
cmpsb
push
mov
push
sbb
add
xor
fdivs
mov
in
fbstp
add
add
into
adc
dec
inc
and
or
pop
jbe
pop
add
jns
cwtl
xchg
lds
fsubs
sbbl
lret
imul
enter
shl
add
xor
mov
mov
jge
xor
loopne
mov
lock
jl
andl
mov
jge
movsl
and
jno
mov
push
cmp
push
jno
insb
xor
mov
sub
jno
scas
push
in
outsl
sub
gs
fs
std
lret
xlat
sbb
inc
sub
adc
ljmp
pop
fstpt
cwtl
loopne
sub
mov
push
insb
iret
sbb
imul
mov
push
pop
add
imul
inc
cmp
mov
cs
out
mov
inc
aam
dec
jbe
add
call
mov
stos
fmulp
pop
sbb
push
test
stc
sbb
sub
jl
in
mov
xadd
push
xchg
dec
leave
imul
imul
sarb
adc
adc
js
cmpsl
ds
sub
gs
push
adc
xchg
inc
lret
push
dec
lcall
loope
fwait
pushf
scas
rorb
fsubrp
sbb
popa
mov
repz
add
shrb
mov
mov
pop
leave
xchg
and
inc
repnz
xor
iret
jmp
les
clc
and
mov
xor
sub
into
les
imul
fbstp
and
filds
std
lods
adc
ljmp
sahf
scas
lods
dec
dec
iret
add
sbb
fnsave
outsl
clc
mov
inc
les
hlt
fldt
insl
pop
nop
push
movsb
xchg
dec
enter
ret
ja
cmp
adc
int3
lock
pop
xor
int3
xchg
addr16
dec
dec
mov
ffree
adc
repz
add
insb
dec
xor
rclb
sbb
xor
jecxz
leave
mov
push
ja
es
xorb
xorb
cwtl
ret
mov
icebp
add
negb
scas
mov
fsts
sbb
jbe
push
ja
imul
daa
mov
push
cmpsl
and
pop
fsts
repnz
push
cmc
outsl
mov
sbb
jns
icebp
bound
xor
or
mov
orl
outsl
xor
mov
mov
mov
push
mov
pop
in
adc
pop
mov
sahf
push
ljmp
pop
hlt
js
pop
sar
lret
test
pop
cmp
push
outsl
mov
lods
aaa
xchg
or
out
aas
or
sbb
fistpll
pop
ss
gs
test
loop
clc
pop
ljmp
pop
insl
pushf
mov
es
push
adc
push
int3
stos
push
mov
mov
test
aam
mov
repz
sbb
cli
and
insb
mov
call
in
stos
push
inc
lahf
cmpl
push
mov
popf
add
fistpll
in
xor
inc
fists
sub
cmp
push
mov
dec
jnp
push
pusha
fdiv
sub
repnz
repz
cs
xrelease
jns
loop
dec
and
xlat
jg
loope
ds
lds
or
inc
or
lret
adc
lret
or
or
xor
adc
xchg
addl
mov
inc
xchg
insl
cmpsl
sbb
xor
out
fld1
fldenv
cli
leave
lahf
xchg
lock
or
dec
dec
gs
sbb
call
movsl
pop
sbb
clc
cmpsb
bound
aaa
pop
aas
mov
add
xchg
inc
push
mov
and
test
jno
mov
pop
xor
fnsave
inc
adcb
mov
xchg
push
sub
test
add
je
fmull
lds
filds
aaa
jb
rcr
std
sub
pop
sti
lock
add
add
add
stc
fmull
daa
jns
adc
out
jae
aaa
insl
fwait
ret
inc
out
incb
sbb
dec
mov
or
loope
jge
xchg
push
je
sbbl
mov
xor
push
push
mov
test
test
aad
push
cld
lods
push
inc
sbbb
lds
gs
std
mov
stos
fstpl
sti
shlb
adc
rorl
lret
inc
test
ficompl
mov
dec
and
dec
js
into
in
out
push
cmpsb
xor
cmp
rorl
pop
out
arpl
pop
pop
pop
testb
dec
out
cmp
add
sbb
addb
leave
in
dec
mov
popf
imul
jne
inc
dec
mov
and
xlat
sarb
int3
adc
inc
subl
ficoml
xchg
xchg
outsb
out
sub
push
jl
xorl
cltd
pop
jbe
je
cmp
aaa
pop
xor
aaa
iret
sbb
fs
int3
push
aam
popa
cltd
imul
sub
mov
adc
add
sbb
adc
clc
mov
add
movsb
ds
shl
arpl
mov
adc
mov
sahf
mov
push
call
adc
jns
xchg
mov
dec
cs
jo
and
push
and
int3
pushf
inc
fdivrs
rolb
sbb
mov
icebp
scas
test
inc
mov
cmc
jb
inc
cmp
stc
lods
adc
lret
nop
int3
mov
aam
insl
test
mov
inc
cmp
jns
fiadds
mov
dec
xchg
ficoms
mov
inc
test
mov
pop
enter
xchg
leave
lds
cltd
hlt
xor
mov
bound
hlt
cmp
jnp
stos
xlat
jno
mov
scas
js
inc
mov
xor
sbb
cmpsb
mov
pop
outsl
cmp
pop
hlt
and
push
repnz
test
int
shlb
shl
test
data16
add
es
jl
jmp
xchg
icebp
or
sub
mov
sub
sub
int
dec
outsl
subl
add
and
xlat
out
jbe
lds
pop
sbb
je
pusha
lret
mov
shll
cmp
and
pop
test
jmp
scas
std
mov
push
mov
cli
jl
mov
mov
pop
ret
rolb
jg
scas
mov
mov
fldenv
mov
loope
or
add
cld
movsl
dec
dec
and
sub
mov
cltd
cmpsb
int
or
sub
xor
add
push
pop
and
fwait
sub
pop
lock
mov
aaa
repnz
loopne
xlat
aam
or
notb
or
lret
in
add
xor
push
comiss
pop
ds
adc
lods
push
mov
out
or
push
inc
clc
pop
int3
cmp
mov
hlt
sarl
xchg
and
pop
xchg
ret
adc
mov
daa
pop
loop
icebp
les
sub
stos
xchg
or
sub
pop
bts
push
and
mov
lock
ja
cmp
jge
push
and
cmp
cmpsl
cmc
jne
sbb
adc
push
jnp
shrl
cmpsl
imul
add
jecxz
ret
sbb
outsb
shll
lods
pop
cmpsl
aaa
in
mov
stos
xor
dec
cld
inc
pop
pop
testb
ss
ficompl
mov
adc
cli
rcr
jb
mov
mov
adc
orb
or
push
ja
push
mov
or
dec
repnz
xlat
dec
sarb
mov
dec
or
add
int3
int3
pop
inc
jp
popf
sbb
push
mov
lret
cld
movsl
pop
push
inc
mov
shrl
push
fistl
cmp
lahf
xor
jmp
cmc
rolb
sbb
mov
pop
adc
pop
push
sbb
add
push
push
adcb
dec
and
cli
xchg
loope
insl
loope
js
sbb
or
dec
mov
sbb
sub
rolb
fldt
pop
xor
scas
mov
jo
xchg
add
addb
or
in
imul
push
inc
pop
or
clc
fdivl
mov
int3
stc
add
mov
lds
daa
jns
clc
ja
mov
and
ss
push
add
sahf
and
ljmp
sub
out
push
fiaddl
cmp
and
add
lods
push
mov
imul
xchg
add
sub
push
je
fidivrl
xchg
sub
jo
fisubrl
xor
xchg
or
xchg
jg
popl
jno
jno
mov
fldcw
add
sahf
cmpsl
cld
leave
loopne
daa
adc
add
cs
lea
jl
fwait
push
push
sti
jg
push
or
ja
push
mov
ret
inc
xchg
lcall
pop
dec
stos
push
mov
decb
xchg
jbe
cmp
xchg
inc
xchg
push
xchg
adc
in
inc
ret
call
jbe
or
cmpsl
mov
cmp
xchg
mov
adc
iret
sbb
div
test
inc
cmp
jp
in
test
adc
test
lock
sub
inc
push
add
das
cmpsb
arpl
sub
jmp
or
inc
push
push
xor
push
mov
das
imul
jne
and
mov
es
fsubrs
maxps
imul
aad
cmp
subl
and
push
mov
xor
out
leave
fiaddl
xor
insb
pop
jp
xor
imul
lret
mov
pop
mov
inc
inc
fisubrl
push
loop
ja
inc
inc
xor
ljmp
sub
daa
insb
pop
xchg
sbb
jae
inc
mov
cs
shll
outsb
loop
sub
test
or
add
pop
lods
jecxz
push
mov
int3
dec
pop
movsb
xchg
cwtl
cmp
dec
add
cmc
sti
sbb
daa
mov
xchg
and
test
es
dec
in
jae
pushf
test
mov
or
push
leave
rcr
imulb
inc
aad
das
sbb
aaa
ffree
sub
push
cltd
push
movsb
jae
push
xor
shlb
xor
cmp
inc
jns
mov
pop
insl
jne
fnstenv
and
xor
icebp
push
cli
sub
cmp
jb
fwait
inc
and
movsl
mov
mov
push
insb
pusha
lret
push
mov
push
xlat
mov
or
and
mov
in
out
mov
or
cmp
and
addl
xchg
rorl
inc
cmp
dec
cmp
pop
bound
add
scas
repnz
xchg
inc
push
dec
push
xchg
cmp
lock
push
lods
movsbl
loope
test
add
mov
stos
add
idiv
pop
movsl
lcall
lods
shrb
mov
cmp
jne
rorb
lock
mov
sub
in
dec
in
fistps
repnz
repnz
mov
push
icebp
mov
xchg
push
inc
loopne
jl
xorl
add
lcall
push
outsb
out
sub
push
cs
call
pop
sbb
pop
and
xor
inc
xlat
push
call
pop
cmp
mov
scas
cwtl
or
ret
bound
dec
iret
fcoml
mov
xlat
push
int3
ja
xchg
push
rclb
mov
xor
xor
lds
sub
mov
jmp
cwtl
dec
push
mov
mov
jno
sbb
lcall
add
out
adcl
bound
xor
imul
fisubrs
add
jp
rcl
in
pop
mov
dec
xlat
mov
jmp
dec
sbb
rorb
pop
sbb
out
cmp
mov
sbb
out
cmp
arpl
sbb
dec
and
jne
xor
lods
xchg
adc
pop
loope
aad
mov
sub
std
dec
les
cld
fstps
notl
push
mov
ds
aad
sbb
push
jg
push
mov
push
sbb
and
sub
lods
cmpsb
and
adc
push
mov
xchg
mov
pop
imulb
int
sti
sbb
pop
mov
cmp
push
outsb
loope
and
sar
push
in
and
hlt
push
std
mov
push
pushf
add
ret
insb
hlt
ret
test
dec
xor
add
ljmp
test
lahf
pushf
sbb
inc
daa
pop
insb
inc
lea
sbb
xchg
xor
dec
push
lea
movsb
pop
push
dec
adc
lods
arpl
mov
adcl
inc
ss
mov
lock
ja
cmp
cmp
mov
xchg
sub
iret
or
sarl
stos
insl
mov
stc
mov
adc
or
push
outsb
add
jp
and
add
in
xor
lret
and
sbb
mov
push
mov
pop
mov
push
out
loope
xchg
jecxz
xlat
jo
ret
mov
pop
pop
bnd
or
push
pop
xor
push
aaa
sbb
pop
mov
dec
dec
clc
cmpsb
pop
lods
daa
scas
lcall
pop
mov
pop
inc
mov
in
push
dec
adcb
dec
sbb
je
and
enter
mov
out
mov
sub
inc
inc
ret
cmovns
scas
lock
jp
mov
push
xchg
xor
cltd
xor
sbb
mov
adc
xor
push
adc
dec
cmp
add
push
pop
push
push
clc
test
in
adc
andl
sub
dec
int3
into
test
outsl
xchg
dec
xchg
xorb
add
mov
xor
and
js
mov
sub
movsl
mov
push
inc
mov
xor
jmp
fildll
mov
or
outsb
mov
or
lds
adc
dec
xor
clc
jle
fisubrs
ret
xchg
lods
inc
cmp
inc
sub
in
xor
sbb
por
into
cmp
pop
mov
out
jne
inc
jo
cmp
arpl
push
mov
aam
mov
pop
movq
movsb
les
mov
sub
pop
jb
jp
inc
push
sbb
pop
xchg
loop
sub
fwait
xor
adc
mov
fildl
xchg
jmp
push
sbb
andl
inc
cmpsl
loope
pop
popa
mov
movsl
push
cmpb
lds
mov
aaa
jns
jge
andb
notl
mov
movsl
test
xor
push
shll
xor
cs
push
xchg
xor
rcl
cmpsl
mov
xor
mov
and
jns
loop
dec
dec
inc
mov
sti
pop
cwtl
dec
mov
fbld
dec
js
jge
add
mov
cld
mov
push
jmp
sbb
add
inc
movsl
xchg
push
xchg
lods
mov
jo
pop
aas
int
jl
bound
cmp
pop
cld
sub
jge
sti
adc
aad
sbb
xchg
jl
rorl
in
enter
scas
inc
hlt
pop
insl
add
sti
cmp
insl
in
fsts
sub
and
dec
jnp
cmpsl
xchg
push
out
lahf
mov
hlt
or
loope
rorb
and
int
push
test
and
xorb
mov
mov
jbe
xor
ja
std
js
xadd
jp
add
dec
cmp
cmpsb
jnp
inc
dec
dec
in
dec
cmpsb
std
pop
and
inc
pop
sbb
adc
push
aas
add
add
pop
push
subb
fildll
std
rol
add
xor
lret
and
inc
pop
lods
pop
xor
mov
cli
dec
jb
scas
imul
xor
lret
fsubrs
bound
sub
sarl
push
mov
push
ljmp
rcl
adc
or
inc
fists
scas
cmp
in
mov
inc
xlat
pop
imul
test
shrb
jmp
enter
fstp
sub
fnstenv
sbb
in
mov
cwtl
jle
or
add
push
in
out
add
lcall
addr16
cld
fcompl
fucomip
sahf
lock
cld
sub
mov
shl
jb
hlt
xor
ja
inc
fstl
scas
or
ret
and
push
fcom
aaa
aaa
jmp
arpl
push
or
enter
push
lret
or
lret
inc
dec
xor
jb
nop
ss
data16
sbb
push
cmp
push
add
out
lcall
pop
jne
shlb
dec
cmp
push
add
push
sbb
jb
mov
imul
pop
into
pop
loop
pop
lods
jp
mov
test
xor
xchg
fadds
stos
xchg
and
push
sub
push
push
imulb
xor
cmpsl
int3
fwait
roll
adc
ficompl
loop
cmp
inc
aad
js
pop
test
xor
daa
sbb
add
and
rolb
dec
mov
leave
xchg
dec
and
stc
xchg
mov
cli
rclb
push
imul
jb
push
pop
jnp
jl
int3
or
and
adc
and
adc
leave
scas
stos
scas
xchg
arpl
jmp
outsl
pushf
inc
int
imul
push
in
call
stos
pop
test
in
push
stos
cmp
cmp
add
xor
sbb
sbb
loopne
push
mov
movsl
mov
adc
add
and
push
lahf
xchg
jno
xchg
jb
sbb
or
shll
xor
loop
jns
clc
stos
mov
cmp
pushf
imul
and
and
mov
jb
lods
mov
imul
xor
gs
ja
push
repnz
jbe
loopne
popa
xor
push
daa
int3
add
mov
mov
mov
mov
je
jns
ror
js
push
mov
icebp
jge
mov
mov
push
sbb
jecxz
xchg
hlt
pop
adc
inc
cmp
sub
xchg
ret
test
subb
pop
aas
inc
xchg
cli
imul
push
into
lea
dec
push
mov
cwtl
jg
jnp
cld
dec
pop
inc
ja
xor
and
mov
jle
pop
pop
decl
add
cmpsl
fists
mov
rcll
push
arpl
jmp
mov
aas
iret
jbe
enter
in
jle
outsb
xchg
in
inc
sub
lods
leave
cli
mov
pop
js
out
and
mov
out
fcoml
sbb
add
xchg
sub
fidivl
jmp
jns
add
or
dec
pushf
fld
adc
mov
mov
mov
fwait
xchg
xorl
cmpb
push
push
insl
cmpsl
inc
sub
test
sub
call
and
xor
ds
inc
push
pop
dec
icebp
xchg
bnd
or
sbb
xor
jns
subb
ljmp
dec
int
repz
gs
cli
mov
outsb
and
jnp
jne
dec
fs
push
mov
ret
subl
repz
jno
loopne,pt
and
inc
sub
out
cltd
mov
out
push
sbb
mov
dec
ret
dec
sbb
pusha
leave
dec
inc
pop
cwtl
pusha
jg
push
jae
mov
adc
jmp
add
push
mov
lret
inc
orb
or
add
xchg
mov
enter
pop
xchg
cwtl
faddl
sub
lds
xchg
and
prefetchw
or
cmp
out
hlt
jmp
scas
out
jo
mov
mov
and
add
cmp
cs
or
add
xlat
sbb
sbb
test
sub
mov
cmp
mov
sti
inc
fistpll
pop
mov
popf
fmuls
ss
les
in
push
stos
adc
rolb
jmp
shll
jl
mov
cmc
sub
pop
sbb
pop
sbb
xchg
push
xor
sbb
push
cmp
pop
lret
pop
dec
add
or
jnp
lret
insb
inc
adc
mov
notb
adcl
pop
sbb
sub
mov
adc
sbb
inc
jg
jb
loopne
jl
or
lods
test
inc
test
sub
push
scas
test
insb
dec
pop
adc
in
fmuls
imulb
jnp
inc
push
in
ret
cld
jle
lds
xchg
xor
cmpsb
sub
insl
jbe
fs
jg
repz
fistl
mov
push
aas
jne
movsb
imul
into
sub
xlat
shrb
int3
mov
adc
xchg
add
jge
or
xor
lcall
adc
loope
jb
lods
lcall
mov
cmp
addb
lods
sub
scas
in
pop
in
rorl
mov
lods
inc
loope
xchg
mov
inc
cs
push
xor
repz
add
cmpsl
xor
es
dec
test
mov
jg
dec
pushf
xchg
mov
xchg
les
pop
add
ret
push
jg
rorb
jne
cmc
pop
push
xchg
xchg
sub
cmp
xor
mov
push
aas
mov
add
shl
outsl
lret
fwait
cmpsb
ret
lret
loop
mov
or
fcom
and
push
int
int3
int
fsubp
pop
cmc
add
in
pop
cmp
push
mov
fldlg2
xchg
pop
jmp
inc
mov
shl
mov
dec
movsb
cmp
mov
push
aaa
or
lret
pop
or
orb
push
inc
pushf
mov
bound
pop
mov
mov
lret
clc
ss
aam
xchg
ss
jle
scas
andb
repz
into
aas
das
and
add
add
lods
xlat
xchg
mov
fidivl
out
inc
cmp
cmp
mov
adcb
mov
in
mov
in
push
ljmp
sub
mov
cwtl
add
outsl
fwait
jae
mov
dec
flds
je
push
mov
push
xchg
stc
xor
push
div
or
dec
cmp
xchg
lods
add
cmpsb
push
jg
cmp
orl
sub
outsb
lret
in
cld
outsb
or
mov
xor
add
fists
and
xchg
fcompl
je
popa
sub
push
cmpsb
test
data16
aam
jmp
mov
ds
insl
psrlq
sarl
aam
dec
hlt
sahf
xchg
mov
push
fbld
scas
add
loop
mov
aas
cld
inc
xlat
mov
adcb
fwait
pop
xor
xorl
push
adc
jns
in
leave
int3
in
lods
or
pop
iret
std
xchg
xchg
xchg
jbe
sub
shll
movsl
or
sbb
fdivrs
das
test
xchg
lock
push
mov
mov
stos
dec
idivl
scas
dec
sub
xchg
or
or
or
daa
and
or
adcb
and
or
rclb
cmp
cmpsl
xor
cmp
mov
icebp
or
push
call
jnp
cmp
clc
mov
dec
pop
sub
loop
or
push
inc
cmpb
pop
xchg
mov
mov
mov
mov
test
inc
pop
or
sbbl
jb
fnstsw
enter
or
stc
into
lret
ret
or
aad
and
pop
cltd
dec
xchg
push
xor
or
movsl
sbb
or
adc
jb
push
jae
and
jne
repnz
mov
pop
addl
inc
pop
loopne
mov
xchg
xorl
jg
mov
mov
sti
int
sub
add
cmc
and
jp
inc
sub
loop
inc
fsubrp
mov
iret
cmpsb
fisttpll
in
adc
out
jge
fcmove
outsb
adc
sub
mov
mov
das
mov
decl
mov
test
jne
addb
mov
pop
jle
int3
mov
cmc
loope
add
test
push
xor
enter
outsl
adc
in
ret
lea
cmpsb
mov
dec
and
adc
nop
lahf
xor
pop
mov
out
into
xchg
sub
and
and
lahf
and
pop
or
inc
xchg
addr16
pop
mov
neg
lret
dec
js
leave
sbb
xor
into
cmp
jl
push
mull
add
fdivrl
and
sarl
test
cmovne
push
mov
ja
rorb
cmc
mov
jb
lds
test
adc
scas
cmp
into
sub
inc
jb
pop
xor
mov
jp
pushf
or
push
sti
mov
stos
sub
sbb
pushf
jbe
mov
mov
add
pop
repz
dec
int
push
mov
je
popa
outsl
or
jecxz
lret
push
repnz
fldt
sti
cmp
in
aad
repnz
mov
pop
fwait
aaa
or
sarb
jg
incb
gs
aam
loopne
enter
test
xor
movsl
in
jae
out
cmp
sbb
subl
js
xor
xlat
inc
sub
addr16
add
push
in
sbb
push
and
pop
hlt
loope
xchg
clc
cmp
adc
scas
in
hlt
in
and
xchg
push
cmpsl
popf
insb
inc
cs
movsb
lods
aaa
jne
lods
pmuludq
sbb
insb
and
sub
fs
ds
loopne
int3
push
cmp
ds
sbb
mov
imul
scas
or
sti
fucompp
pop
div
in
das
cmp
or
ror
sarb
dec
push
aaa
ds
cld
cmp
sbb
jge
pop
dec
sbb
in
int
sbb
mov
ss
adc
in
and
test
xchg
aam
pop
loopne
fadd
fidivrl
xchg
repz
jg
aam
shll
inc
aas
push
mov
lcall
dec
cmpsb
clc
xbegin
js
setbe
dec
xchg
cmpsl
test
das
jl
loope
ja
xor
mov
jae
lods
add
lea
lods
lcall
dec
mov
stos
std
ja
in
push
or
mov
into
lds
xchg
pushl
inc
sub
dec
ja
cmp
jnp
jnp
rolb
movsl
dec
repnz
cs
push
cwtl
fdiv
sbb
mov
rcrl
loopne
push
push
lret
xchg
mov
sub
mov
sbb
pop
xlat
xor
add
xchg
sub
ja,pt
adc
iret
add
xor
sbb
in
int
or
adc
add
rcrb
pop
push
pop
jae
pop
ds
pushf
cwtl
les
mov
fs
outsl
sti
jmp
movsl
cmpsl
push
ja
jnp
xor
and
out
adcl
cmp
jp
mov
insl
fcoml
adc
test
mov
inc
add
adc
fistpl
adc
aad
je
sbb
adc
dec
ds
imul
lock
ffree
mov
cmp
dec
jmp
dec
mov
adc
and
cmp
test
dec
dec
push
xchg
mov
sub
add
outsl
mov
std
cmp
xor
mov
mov
push
imul
inc
into
loope
ds
mov
fucomp
repnz
andb
jp
xchg
mov
xchg
mov
dec
fdivrl
insb
xchg
test
sub
add
sub
add
pop
mov
push
insb
and
outsl
iret
sbb
ds
nop
ret
test
mov
inc
sahf
jno
pop
adc
lahf
mov
sbb
fwait
push
aad
lret
repnz
sbb
jb
aad
test
dec
les
inc
out
push
dec
xchg
jbe
sbb
cld
inc
mov
xchg
cld
ljmp
sbb
scas
inc
fstps
or
mov
iret
push
adc
xchg
fstps
out
add
dec
xchg
xchg
cli
and
add
int
into
out
mov
stos
push
mov
sahf
and
mov
jne
xchg
in
movsb
lods
jmp
mov
bound
jb
jb
inc
in
and
sbb
mov
inc
sbb
mov
inc
add
pop
cltd
shlb
mov
cmpsl
out
enter
mov
xchg
fwait
mov
sbb
lcall
xchg
ljmp
inc
mov
sub
rolb
repz
and
insl
jmp
nop
rol
adc
je
xor
mov
stos
nop
pushf
mov
ret
mov
cmp
pop
push
popf
aas
dec
sar
lds
movsl
mov
adc
sbb
mov
mov
mov
and
ljmp
ret
divl
mov
bound
aad
mov
xor
dec
rcrb
into
lds
dec
test
addl
scas
and
xlat
test
mov
nop
lahf
jecxz
loopne
lods
inc
cmp
xlat
cmp
mov
addl
adc
pop
pop
popf
in
popl
xor
into
scas
mov
pushf
stos
pop
aad
jmp
mov
sbb
pop
lods
lea
cmc
mov
cmc
call
int3
imul
jg
dec
mov
sbb
xchg
cmp
inc
dec
fidivrl
aaa
inc
xor
mov
stc
mov
divl
jo
adc
nop
jnp
adc
and
rclb
rorl
sub
cmp
adc
ret
clc
xchg
pop
dec
sub
cmpsb
addr16
int
jbe
bound
das
je
xchg
jle
jg
xor
in
dec
xchg
fwait
dec
fsubrs
outsb
lcall
xchg
push
aas
sub
fwait
jns
add
sbb
jb
xor
out
nop
dec
repz
ss
data16
pop
xor
sbb
push
adc
mov
ret
mov
fistps
pop
imul
popl
xor
add
push
cld
mulb
add
sahf
std
idivb
outsl
and
iret
mov
or
push
and
in
lret
lcall
jns
and
xchg
data16
xchg
add
mov
or
mov
jl
ljmp
js
test
pop
popa
test
mov
add
cmp
loop
fisttpl
cld
add
out
mov
out
sbb
add
mov
mov
dec
mov
adc
pop
out
fnsave
jp
popf
push
xchg
icebp
mov
nop
das
mov
and
xchg
mov
std
dec
iret
dec
pop
sub
cmp
divb
negl
mov
sbb
aam
push
imul
insb
and
lods
add
pop
jne
je
orb
adc
lds
jecxz
cmp
dec
sahf
push
jle
scas
jmp
cld
stc
shll
ret
cmp
outsb
or
cmpsl
nop
stc
loope
xchg
sub
mov
pop
xchg
jge
add
pop
or
fsubrs
or
imul
mov
loop
sahf
bound
cltd
push
das
mov
mov
cmp
fcompl
mov
cmc
mov
mov
jp
jge
out
mov
xchg
mov
add
and
pop
inc
mov
fldl
add
insl
push
jecxz
inc
dec
mov
test
lret
cmpsb
scas
xor
shlb
cmp
xchg
push
ljmp
sub
push
mov
push
xchg
inc
dec
daa
adc
int3
push
loop
inc
jae
subb
mov
es
sbb
and
stos
fistpl
pushf
out
push
jmp
xchg
dec
add
xlat
add
mov
inc
leave
sbb
inc
mov
dec
dec
xchg
add
mov
jae
in
call
sub
inc
pop
cmp
pop
orl
cwtl
and
mov
iret
or
sbb
test
fisubrs
sbb
out
enter
pusha
scas
loop
jb
jo
sub
or
sbb
out
push
dec
incl
jno
cmp
sbb
push
lret
adc
adc
xchg
jmp
or
dec
sbb
stc
aad
adc
jmp
arpl
xor
or
mov
dec
sbb
add
popl
xor
icebp
sbb
lods
add
xchg
insl
xor
lods
mov
mov
xor
sub
test
mov
xor
add
loop
scas
and
mov
sub
mov
mov
aad
push
insb
sbb
ret
mov
mov
setne
int
mov
addr16
sbb
and
dec
orl
cltd
mov
jae
pop
mov
fmul
shll
rorb
sbb
scas
push
adc
mov
pop
lock
mov
es
out
and
pop
cmp
out
ja
lea
pop
or
jae
ret
xchg
fisubrs
mov
cwtl
divl
or
xor
cld
mov
adc
push
out
stos
sub
dec
leave
leave
mov
or
sbbl
inc
fwait
and
out
mov
popf
push
sahf
push
lret
adc
fldenv
push
xchg
cli
cmpl
arpl
push
xchg
pushf
frstor
push
lods
jbe
jge
add
decl
pop
repz
popf
push
dec
out
scas
rcrl
in
cltd
cmp
and
shrl
and
data16
test
sahf
or
sbb
js
push
dec
push
lea
lret
out
sbb
mov
jle
shrb
testb
or
aad
add
or
imul
out
mov
sub
adc
sbb
pop
rorb
mov
inc
jecxz
sbb
dec
icebp
out
mov
insl
add
repnz
push
push
int
sarb
cmp
push
imul
pushf
sbb
inc
test
push
dec
stos
and
std
addb
add
popf
xor
mov
pop
add
ds
mov
loop
outsb
and
lret
dec
mov
dec
aam
lea
xor
dec
test
packsswb
stos
inc
loopne
and
or
xor
rolb
xor
lret
or
push
int
imul
loopne
xlat
dec
adc
stos
jns
cli
jbe
xchg
cmpsb
xor
add
data16
scas
jno
sbb
jnp
int
push
sub
dec
mov
xor
lock
mov
dec
add
xchg
lea
pop
dec
cmp
call
fwait
or
pop
push
loopne
xchg
sbb
pop
pop
pop
pop
jne
out
jle
jle
push
cmc
jo
sbb
cld
push
aam
addb
hlt
push
iret
cmp
movsb
mov
pop
sub
mov
dec
call
mov
jbe
xchg
in
xor
or
lret
js
xor
pop
das
lret
push
mov
jnp
or
leave
mov
not
lcall
daa
jp
sbb
adc
mov
mov
adc
pop
inc
add
push
mov
cmpsl
scas
je
push
mov
dec
xor
jnp
sub
adcb
test
imul
adc
sbb
push
les
sti
jo
call
dec
aam
push
lock
cmpsb
aam
cmc
xor
sub
sub
mov
dec
movsl
std
mov
xor
sbb
out
mov
xchg
cs
add
and
mov
push
dec
dec
and
fbstp
sti
lea
xchg
sbb
xchg
or
mov
xchg
push
or
xchg
dec
cli
in
add
sbb
enter
fcmovb
lods
mov
aam
pop
pop
imul
lret
xchg
push
cwtl
push
sub
insl
std
xor
adc
int
mov
aam
push
and
insl
pop
pop
mov
test
push
addr16
lcall
pop
data16
insl
lods
sbb
jae
push
imul
dec
jo
test
rcll
cmc
jl
in
js
fmulp
repnz
push
shl
cmp
aad
push
dec
dec
xchg
outsl
pop
imul
jns
scas
add
jmp
xor
sub
inc
out
and
xchg
jo
push
push
cwtl
xor
jnp
xchg
inc
repz
shld
sbb
pop
lds
and
pop
mov
fs
mov
pop
icebp
cli
and
sbb
outsl
insl
ljmp
jo
mov
jno
push
dec
jmp
arpl
int3
int3
mov
sub
xor
pushf
jle
mov
rcrb
sub
mov
pop
stc
es
and
pop
push
cmp
push
xchg
mov
inc
cmp
into
pop
jne
sete
ljmp
mov
add
mov
xor
cmp
outsb
xor
pop
or
jbe
int
dec
dec
dec
mov
and
stos
daa
shrb
stc
or
jns
cmp
int
mov
jge
push
pop
mov
insb
push
cmc
inc
push
mov
lods
xchg
in
loop
mov
dec
test
mov
fs
repz
imul
test
lock
and
in
xor
lcall
sub
lcall
lea
out
cmp
dec
stc
rcll
js
std
fwait
mov
std
push
cmpsb
and
repz
scas
mov
icebp
dec
or
in
xchg
pop
and
sbb
xchg
gs
add
and
stos
inc
out
stos
sub
push
xor
pop
sub
sbb
mov
sbb
and
fnsave
adc
loopne
ds
mov
sub
jnp
jmp
sub
mov
xchg
popf
pop
out
xchg
scas
xor
push
or
orb
inc
les
push
mov
fistpll
jg
mov
dec
aaa
je
int3
or
jge
dec
js
mov
fiadds
outsb
mov
ja
mov
sbb
xchg
mov
sarb
out
or
mov
pop
imul
andl
iret
shrb
das
lods
pop
adc
jmp
sub
and
and
mov
adc
loop
loopne
clc
add
cmpsl
xchg
cli
jle
dec
nop
loopne
scas
cmp
cmp
stos
pusha
pop
cmp
dec
aas
adc
xchg
mov
mov
out
jg
pop
or
pop
popf
and
dec
add
cwtl
insb
sbbl
sbb
mov
cmc
mov
hlt
cld
add
test
xor
idivb
test
es
or
aad
push
push
adcl
jno
ss
lock
aas
test
and
xchg
repz
adc
fcmovbe
loope
pop
jns
mov
or
xor
nop
adc
jecxz
test
push
push
sub
sub
arpl
push
imul
jmp
add
dec
fmull
sbb
pop
mov
push
cmp
sbbl
stos
mov
outsl
dec
das
fsubp
pop
sub
mov
jns
xchg
dec
sbb
shrl
jbe
push
mov
sbb
xor
rorb
or
pushf
jge
mov
mov
jo
mov
pop
out
shl
test
fs
out
jne
xchg
dec
jg
pop
xor
outsl
pop
stc
int3
jo
mov
jns
dec
cwtl
add
xchg
pop
dec
dec
pop
sbb
or
jb
xchg
and
xor
mov
push
or
aaa
je
jge
jp
mov
out
xor
arpl
dec
mov
out
fisubrl
push
mov
fdivrl
in
mov
ud2
ret
cmp
test
xor
sub
sbb
mov
mov
fmull
or
je
test
dec
or
or
sub
ja
pop
aaa
cltd
rorb
aaa
add
add
fcoms
lods
in
push
addl
icebp
cmp
popa
outsl
mov
or
xor
ret
inc
std
cli
mov
fistl
add
push
xchg
fistpll
mov
pop
cwtl
stos
dec
inc
stos
pop
jns
jl
push
push
inc
pop
incl
iret
dec
xchg
pop
movsb
fwait
ljmp
sbb
add
dec
jno
or
cli
xchg
bound
and
data16
jno
mov
and
adc
test
dec
jns
subb
inc
adc
cmp
into
stos
in
aaa
fadd
adc
ss
nop
fsubl
adc
or
add
sarb
pop
add
sahf
movsl
mov
xor
hlt
inc
hlt
or
pop
inc
sub
pusha
pushw
jae
sti
mov
repnz
gs
pop
mov
sub
fucomip
xchg
xchg
jae
xchg
cmpsl
dec
lods
packssdw
cmp
lret
shr
xchg
dec
lock
mov
mov
sub
faddl
jne
aam
int
inc
hlt
sub
lahf
mov
mov
mov
les
cs
outsl
fistps
repz
je
sbb
inc
inc
xor
cwtl
je
scas
cli
xchg
push
and
mov
movsl
sahf
cmpsb
or
fucomip
mov
mov
cmp
pop
xchg
imul
sub
outsl
stos
pop
or
sbb
fildll
pxor
xor
aas
jae
fiadds
test
imul
inc
xchg
aam
lahf
pop
sub
push
in
mov
ret
gs
pop
jle
mov
jl
mov
outsb
cmp
gs
sbb
cltd
in
int
adcb
inc
loope
dec
inc
and
add
push
loop
lcall
dec
xchg
inc
into
dec
mov
leave
or
sbb
pop
js
mov
xchg
mov
daa
clc
test
jmp
shll
cld
mov
imul
pusha
sub
or
lcall
mov
imul
xchg
test
jecxz
cmpsl
fadds
adc
xchg
pop
adcb
or
push
mov
leave
adc
addr16
loopne
outsb
xchg
je
xchg
pop
enter
mov
icebp
pop
aad
incb
aaa
ds
lods
mov
lock
jb
and
adc
cli
sub
adc
lcall
xor
nop
jecxz
mov
leave
push
sbb
jns
dec
push
int3
sbb
sub
xor
push
sarb
sub
stc
mov
mov
pushf
ds
pop
sub
jne
jae
xor
xor
outsl
outsl
inc
rcr
jmp
jl
add
inc
sbb
faddl
push
sahf
fadds
sub
fidivrs
jne
mov
cmpsb
jle
test
mov
repz
fisubrs
adc
jmp
outsl
ja
aam
or
sahf
iret
mov
stos
dec
sub
arpl
inc
mov
in
in
jo
movnti
sbb
iret
dec
xchg
repnz
xchg
xchg
daa
test
mov
cmpsl
arpl
negb
sub
cs
stc
jo
and
xchg
inc
lods
jle
outsb
scas
gs
sbb
adc
es
push
xchg
aaa
aad
fmuls
mov
push
stos
push
int3
lret
xchg
cwtl
push
pop
stc
lods
data16
nop
and
jmp
sti
fs
fldt
fcomps
xor
sbb
jbe
aaa
adc
mov
fbld
add
push
sbbl
sub
xor
fs
divb
testb
sub
cltd
mov
out
test
test
jbe
js
rcrb
pusha
push
or
or
into
je
fnstsw
orl
fists
std
lret
and
xchg
jno
rclb
add
sahf
out
aam
lds
mov
cld
add
daa
jbe
jecxz
pushf
inc
scas
daa
int3
mov
mov
fcompl
daa
cmp
outsl
inc
inc
outsb
addr16
jae
testb
mov
push
sbb
mov
jmp
mov
fmuls
shrb
mov
mov
inc
int
fisttpl
jecxz
leave
xor
js
fwait
jo,pn
stos
outsl
jnp
cli
popf
lds
dec
insb
mov
lods
shr
jg
inc
icebp
les
cmp
ss
and
nop
and
mov
mov
xchg
and
lret
sbb
xorl
cmp
push
mov
pop
loope
push
test
insl
xchg
xor
mov
stos
pop
mov
ljmp
aad
mov
mov
imul
sub
fildll
add
cld
mov
cmp
jl
sarb
loope
inc
lret
call
call
fldenv
push
mov
or
cmpsl
xchg
pop
mov
in
adcb
push
lret
shr
loope
fsubrl
or
insb
call
pop
push
cmp
test
xlat
into
sub
pop
push
into
push
push
inc
mov
inc
cmpl
push
adcl
mov
fcom
pop
cmp
pop
or
outsb
mov
ss
xchg
inc
sahf
int3
pop
int
and
pop
pop
pop
adc
cmc
mov
aad
lcall
inc
leave
jp
mov
cltd
or
sub
cmp
mov
and
test
nop
xchg
sar
mov
push
push
cmp
shlb
dec
xchg
jecxz
insb
addr16
ret
fxch
rorb
into
push
lret
pop
cmp
pop
pop
pop
addl
in
jae
jp
inc
mov
push
sbb
sub
inc
outsb
push
adc
repz
push
jl
push
mov
xchg
dec
inc
xor
adc
or
std
loopne
pop
les
pop
jmp
jne
push
xorb
jg
test
sbb
rcrb
or
and
sub
cmpsb
lcall
cmpsb
fld
movsb
add
or
scas
push
or
jl
icebp
iret
insl
pop
call
push
aam
and
add
aam
mov
push
in
test
shll
sub
sub
jmp
or
repz
mov
fdivrs
insb
loop
push
mov
dec
lret
add
movsb
roll
xor
sbb
fisttpl
ret
jecxz
jmp
mull
negl
jecxz
into
adc
push
pop
adc
imul
and
pop
push
jmp
xchg
sub
sbb
bound
xor
pop
dec
cltd
insb
clc
push
inc
push
pusha
inc
pop
mov
mov
or
push
cli
aad
or
sbb
rolb
imul
push
das
outsl
and
sub
mov
cmpb
inc
cmp
out
or
lea
cmc
mov
fists
scas
and
test
out
data16
fs
xchg
sub
push
popf
or
loope
jbe
dec
cwtl
xchg
jns
in
mov
in
ss
jge
pop
cld
xchg
hlt
dec
jne
ljmp
and
movsb
pop
sbb
pop
mov
stos
push
xchg
add
sub
or
dec
push
cmp
pop
test
dec
cmp
adc
or
jle
mov
inc
adc
cs
jge
mov
idivb
cmc
outsb
lea
mov
loop
mov
lret
push
stc
je
mov
cli
call
inc
sbbb
pop
out
lea
mov
ds
jmp
mov
pop
ret
aam
mov
xor
xor
inc
pop
iret
push
daa
jae
out
in
push
pop
jbe
cwtl
imul
cmp
add
lcall
scas
js
les
sbb
sbb
fwait
call
in
clc
xor
xor
pushf
test
and
shll
lea
mov
adc
mov
mov
push
lea
dec
rclb
jge
out
mov
inc
fsubrl
adc
faddl
repnz
rcll
jne
pop
lea
pop
lds
sub
out
addr16
ret
jno
in
not
cs
gs
mov
xchg
inc
in
or
push
push
shr
mov
shll
mov
mov
dec
or
rolb
xchg
add
lahf
hlt
sahf
stos
xor
add
sahf
push
mov
push
ja
ds
shrb
fnstenv
add
repz
and
mov
lods
pop
cmc
iret
repz
sub
dec
mov
dec
mov
inc
pop
sub
adc
push
sahf
gs
xlat
cmp
test
xchg
imulb
out
pop
ja
cmp
add
lahf
cmp
subl
push
orb
xchg
dec
aaa
outsl
inc
and
icebp
in
xor
std
sbb
sarb
and
add
pushf
je
fnstcw
dec
insb
outsl
xchg
sbb
inc
sbb
xchg
leave
sub
mov
push
aad
sub
les
lcall
jl
aas
loop
lock
mov
in
mov
jae
jle
push
ljmp
add
jle
icebp
add
jae
out
dec
sub
jp
cs
adc
int
aas
cmpsl
repz
pushf
repz
icebp
lahf
mov
jns
shlb
in
in
add
mov
lahf
mov
or
inc
add
mov
dec
or
jl
ror
rclb
jg
add
mov
sub
shr
or
hlt
ljmp
mov
addl
outsl
xchg
mov
push
je
ja
and
test
jecxz
pop
sbb
mov
jae
cld
mov
mov
jl
sti
nop
movb
pop
jmp
mov
jecxz
mov
xchg
lods
jp
pop
pop
in
inc
cwtl
cld
cmpsl
inc
sahf
lods
addr16
shl
mov
lret
mov
mov
and
arpl
cmp
in
scas
sbb
inc
notl
data16
xchg
cmpsl
fwait
cli
xlat
dec
nop
stos
std
popf
add
sahf
repnz
out
or
aam
movsb
cwtl
cmp
dec
imul
jbe
jmp
ja
sub
pusha
in
out
xchg
add
lcall
xchg
pop
lret
push
js
jae
mov
sbb
std
pusha
push
and
add
and
xorb
fbstp
ret
cmp
inc
jnp
sbb
add
loopne
shll
inc
in
xor
subl
shll
int3
fbld
in
or
cwtl
icebp
loopne
lahf
add
out
inc
ljmp
or
das
or
adc
jl
xlat
inc
lahf
xchg
mov
js
sbb
xor
aas
mov
push
cwtl
push
sbb
sbb
dec
data16
cmp
outsb
push
movsl
in
mov
shll
js
in
jo
lret
mov
fnstenv
and
and
je
leave
fstp
repnz
add
pop
inc
adc
push
bound
dec
push
adc
mov
imul
xor
ret
es
xchg
jle
popa
adc
sub
push
outsb
mov
dec
xchg
or
adcl
push
dec
push
repnz
cmp
jg
mov
or
jae
add
dec
pop
sub
cmp
lret
and
test
cmp
into
sub
in
and
cltd
sub
jp
push
dec
movsl
sti
loopne
push
mov
push
inc
dec
pop
xchg
jo
lret
lock
push
in
adc
pop
pop
cld
fsubr
dec
int
mov
mov
and
mov
pop
or
mov
cmpsl
pop
lcall
push
lock
out
and
xchg
ja
rol
scas
cld
adc
insl
dec
in
dec
mov
inc
rolb
fwait
mov
jecxz
inc
add
out
jne
ficompl
push
mov
inc
mov
sti
or
movsl
adcb
test
filds
loope
lock
sub
or
cmp
xorb
cmp
or
or
and
call
xchg
and
xor
fiaddl
xchg
inc
sub
fs
mov
aam
or
insb
or
sbb
stc
or
add
sti
push
ret
leave
movb
cmpsl
icebp
mov
out
xchg
lret
cmp
shll
aad
shrl
adc
add
aas
adc
cmp
pop
rclb
fwait
lods
jne
sbb
lea
adc
lock
scas
sub
fiadds
loope
arpl
adc
insl
mov
stc
jl
das
stc
ds
pop
sti
adc
cltd
sbb
in
clc
push
mov
add
repz
sbb
mov
pop
dec
mov
hlt
pop
clc
ja
outsl
testb
mov
shlb
jae
or
push
fisubrl
int3
and
cmpsl
dec
and
andl
jae
sub
scas
mov
dec
push
sub
data16
sub
push
push
mov
dec
sub
sub
rcll
repz
mov
mov
cmp
cmp
adc
inc
pop
and
sub
lcall
jg
pop
mov
dec
sbb
and
cmp
cwtl
stc
cmp
adc
sub
lock
mov
mov
lock
jnp
lret
cmp
mov
sub
mov
es
aas
mov
pop
jle
mov
dec
testl
pop
xchg
scas
or
test
mov
push
pop
es
xor
push
jp
dec
sub
jno
bound
inc
scas
fdivs
call
dec
dec
fnstsw
outsb
test
out
jae
push
push
mov
pop
xchg
push
in
push
push
dec
and
mov
push
nop
mov
cld
xchg
mov
dec
shr
lods
test
stc
loop
andl
push
aaa
loope
xor
and
rcll
and
mov
pusha
cmpsb
and
mov
or
dec
adc
lahf
adc
jmp
std
ds
lcall
and
push
inc
loopne
repnz
inc
js
leave
stos
data16
sbb
adcl
xchg
movsb
into
adcb
inc
test
jle
fstpl
aam
adc
fildll
test
adc
lods
mov
outsl
adc
subl
dec
jae
aad
nop
std
movsl
std
icebp
push
xlat
or
xchg
aaa
ret
mov
or
clc
mov
push
xor
dec
out
sub
adc
nop
mov
lcall
sub
and
cmp
inc
mov
popl
testl
mov
mov
test
sbbl
mov
pop
push
loop
sahf
cmp
inc
xchg
xor
mov
gs
adc
nop
out
pop
jne
mov
cmc
pop
clc
cmp
stos
push
xor
jne
outsl
dec
repnz
mov
xchg
lods
jb
mov
lds
ret
mov
in
jmp
or
xchg
dec
inc
in
pop
and
stos
xchg
stos
filds
or
imul
xlat
lahf
mov
pop
mov
stc
outsb
dec
movb
sbb
sbb
ja
push
jl
push
outsl
jns
mov
scas
sub
pop
rolb
scas
pop
xor
dec
xor
cli
loopne
popa
loop
xchg
add
lods
sti
cmp
ss
fimuls
jg
push
xlat
inc
jge
insl
sbbb
rclb
mov
inc
sub
cmp
push
xchg
adc
decb
call
pminsw
lods
sbb
out
call
mov
xchg
arpl
mov
xor
push
lcall
ret
int
push
jno
dec
xchg
jns
enter
lahf
or
xchg
lock
enter
mov
bnd
in
xlat
push
pop
loope
mov
pop
data16
gs
mov
arpl
push
xchg
push
pop
aam
mov
lret
pop
xchg
neg
mov
cld
std
mov
push
jae
and
cmc
sahf
sbb
test
jbe
xor
ss
fidivs
shlb
jno
std
pop
pop
inc
push
pushf
push
xchg
outsb
cmpsl
das
or
adc
subb
pop
jnp
js
mov
mov
and
mov
fs
lock
or
adc
and
stos
adc
fs
mov
jno
adc
shl
or
xchg
lods
xchg
fmull
mov
inc
jns
clc
jl
sbb
dec
sub
mov
jge
clc
pop
jp
sub
mov
xorb
iret
or
lock
mov
jns
arpl
jo
test
mov
imulb
pusha
sahf
movsl
inc
das
cmp
cmp
popa
sbb
mov
cmpsl
pop
adc
cmp
dec
loop
add
insb
dec
mov
call
adcb
xchg
push
xor
inc
jb
xor
xchg
out
lret
add
pop
and
dec
imul
jp
adc
cmpsb
push
xchg
inc
in
jno
sbb
mov
cmpsl
fisttpl
fcoms
jmp
sub
outsl
cmp
rolb
sti
call
iret
lods
cwtl
sub
add
mov
push
jae
pop
sub
mov
jae
lds
es
fisttpl
je
cli
pop
or
fisubrl
filds
pop
xchg
mov
aaa
lretw
cmp
popa
pop
push
in
aas
js
sbb
inc
cmp
fstl
sub
mov
inc
cs
aad
cmp
inc
xor
sbb
and
xchg
xchg
imul
shll
jl
sbb
lcall
lret
pop
outsb
test
sub
xchg
add
incl
sbb
sub
sub
dec
insl
outsb
nop
mov
loope
les
lahf
mov
fnstsw
stos
sub
mov
jns
dec
cwtl
cmpsb
loopne
out
daa
mov
dec
mov
push
inc
xchg
aas
or
pop
repz
es
cmp
hlt
push
dec
adc
lret
int3
inc
add
mov
leave
xchg
outsb
jbe
aam
mov
mov
ja
dec
fdivl
mov
xchg
clc
cmpl
jg
cwtl
jns
add
push
lahf
rolb
sub
xor
shrl
pop
jb
dec
push
mov
cwtl
fucomip
fcomps
std
sub
gs
insl
fiaddl
imul
add
mov
aaa
mov
scas
insb
dec
call
imull
mov
hlt
test
lods
pop
sti
ss
bound
cmc
xchg
pop
adc
mov
mov
nop
adc
xor
and
sbb
jne
pop
mov
push
sub
mov
lds
jo
sbb
loope
pop
sbb
popa
or
cmp
xor
adc
sti
pop
loopne
push
lods
mov
adc
pusha
cmp
shlb
cmp
stos
fmull
pop
jmp
mov
loop
push
lds
mov
adc
and
and
int
push
scas
leave
sub
cmp
es
inc
lahf
mov
add
fadds
pop
stc
cli
movsl
mov
imul
lock
xchg
imul
movsl
mov
insb
clc
inc
xchg
sub
shlb
or
rol
add
ja
xchg
push
add
lea
sbb
outsl
lret
sbb
pop
in
ficoml
or
jbe
xchg
lret
imul
push
xchg
in
sbb
aas
jbe
movsl
mov
stos
icebp
push
subl
movsb
in
out
adc
xlat
pop
test
dec
dec
lods
jnp
dec
push
sub
adc
fucom
or
lea
push
mov
push
sbb
push
rclb
fldt
or
fs
lret
dec
xchg
out
pushf
adc
repnz
cmp
insb
jne
pushf
dec
fdivs
xchg
imul
adc
cmp
add
sub
nop
push
sbb
daa
hlt
adc
call
pusha
test
and
or
mov
lods
popf
out
iret
aad
mov
pop
enter
mov
cmp
stos
imul
sahf
mov
rclb
jno
xor
push
add
repnz
xor
sub
movsl
mov
jmp
jns
sub
inc
push
mov
into
lods
stos
pop
push
out
outsl
push
mov
pop
bt
push
inc
adc
mov
xchg
cli
lea
xchg
lods
add
icebp
sbb
aad
mov
repnz
or
xchg
inc
icebp
fwait
cwtl
cmp
jmp
cmc
lods
insb
test
cmp
hlt
cli
in
stc
scas
and
push
bound
fsubrs
xor
pop
xor
enter
adc
jns
adc
pop
gs
dec
pushf
and
dec
pop
push
sbb
mov
cmp
mov
mov
jbe
xor
es
mov
sbb
adc
dec
aam
mov
in
add
loopne
pop
sahf
sbb
sub
out
fadds
push
loope
movsl
sti
jb
loope
dec
ret
mov
adc
mov
jle
sub
aad
adc
cmp
popa
sbb
stc
das
test
sbb
dec
mov
or
cmpsl
fwait
jo
pop
add
repz
add
pop
lock
test
loope
ljmp
in
dec
inc
paddusw
xor
cmpsl
cmpl
mov
fs
cmpsb
mov
cmp
sub
or
xchg
aad
test
icebp
xchg
fcomip
int3
jo
push
cs
std
sahf
mov
std
or
mov
add
pushf
mov
int
decb
ja
mov
dec
je
xlat
push
cltd
enter
loop
dec
ljmp
lock
xchg
push
cmc
and
arpl
in
pusha
fld
popa
imul
jns
adc
push
fsubrl
call
test
not
dec
movsl
inc
daa
or
mov
fsub
sub
scas
mov
cmpsb
ret
inc
mov
rcr
dec
mov
cmp
lods
call
into
mov
inc
hlt
pop
jb
sarb
nop
or
mov
push
xlat
ljmp
lods
or
push
fldl2t
push
es
xchg
push
jmp
test
push
or
mov
call
jae
add
imul
fldt
js
dec
arpl
sub
dec
fdivrs
xor
add
xor
int
lods
pusha
cmp
imulb
insl
add
add
dec
je
dec
add
filds
sub
jno
adc
aad
mov
inc
cltd
outsl
jmp
jecxz
lods
cmp
dec
hlt
test
aaa
lcall
rcr
ljmp
sbb
lods
imul
jp
mov
cltd
enter
cmp
popa
sti
mov
insb
and
iret
lods
shrb
mov
xchg
and
shlb
jge
repnz
push
or
dec
add
mov
pop
std
cmp
loop
mov
xor
mov
in
sbb
das
or
jmp
dec
mov
lock
divb
jne
mov
icebp
scas
scas
paddw
jg
mov
iret
add
jge
jecxz
das
mov
inc
jns
ror
mov
cmpsl
sbb
imul
mov
popa
cmp
push
mov
add
and
leave
leave
cld
ljmp
pop
int3
dec
xlat
sar
lds
sub
ret
mov
xchg
mov
dec
push
xchg
cs
dec
mov
orb
rcr
inc
jge
popa
dec
add
sbb
das
loope
dec
add
repnz
jns
and
mov
pushf
mov
leave
stos
ljmp
iret
int3
dec
jg
sbb
ss
inc
add
inc
enter
mov
push
inc
and
xlat
lcall
mov
insl
in
add
dec
inc
lret
jge
xchg
fstl
call
adc
mov
jp
pop
test
dec
sub
popf
pop
imul
inc
fistpll
clc
lods
pop
stos
push
orl
push
jo
push
test
out
pop
pop
ficomps
xchg
out
jbe
push
xor
cwtl
loop
pop
lret
mov
inc
adcl
call
out
xchg
add
mov
push
imul
xlat
lds
dec
and
sbb
push
mov
arpl
fcoms
or
stos
and
stc
daa
out
push
test
xor
jge
or
adc
cmp
int3
push
hlt
mov
loopne
imul
pop
clc
or
mov
test
shrl
jns
mov
es
cmp
jno
mov
or
xchg
scas
mov
jg
mov
xlat
xor
sti
mov
hlt
or
and
jl
sti
lret
out
mov
cld
add
sbb
mov
push
loopne
dec
cmc
and
and
stos
jmp
push
add
cwtl
fwait
adc
clc
movsl
sahf
mov
in
jle
addr16
loope
jns
rcll
fisttpll
in
int
out
add
popl
xlat
mov
push
sub
pop
and
mov
daa
mov
inc
adc
xchg
xor
jb
adc
js
in
cmp
sub
cmp
jae
popf
push
mov
or
sti
xor
push
or
and
loope
jp
in
mov
rolb
adc
testb
jno
jge
cmp
push
faddl
les
xchg
mov
jo
bound
push
sub
add
jle
leave
sub
push
cs
and
imul
inc
aad
addr16
orb
mov
jb
mov
fs
cs
nop
mov
test
xor
or
jl
jbe
or
xchg
push
dec
ds
sbb
sbbl
and
in
clc
cltd
aad
adc
shll
sbb
movl
or
mov
mov
test
cmp
xchg
cltd
icebp
fsubrl
xor
int
mov
fsubp
jecxz
mov
ret
cmp
shl
sti
ja
xchg
stc
jp
cli
sub
mov
sahf
cmp
add
or
mov
and
int3
mov
fidivs
cmp
aas
sub
push
mov
je
push
ud0
lcall
in
fldt
xlat
dec
fs
testb
pushf
test
pop
sub
fst
ds
push
in
fucomi
mov
inc
xor
mov
mov
mov
imul
dec
or
leave
movsb
fcoml
ja
ds
aaa
push
push
divl
inc
mov
test
ja
mov
xlat
mov
push
loope
loop
out
xchg
aad
sub
enter
push
push
and
jo
cwtl
mov
cmpsb
pop
notb
jmp
lret
not
popf
mov
sbb
inc
jb
push
in
or
sahf
mov
push
ror
or
fwait
icebp
test
inc
sub
cmp
and
push
call
cmp
lret
stc
cld
jnp
imul
scas
cli
add
mov
lcall
movsb
pop
and
in
das
or
dec
add
test
fldenv
xchg
scas
add
cmp
ds
sbb
inc
leave
sub
scas
ljmp
in
or
mov
mov
inc
pop
inc
cmp
mov
sub
push
movsl
pop
pop
in
cld
mov
or
shrb
pop
cmp
xor
xor
pusha
mov
inc
push
push
add
popf
scas
ljmp
xlat
ret
loope
mov
adc
push
mov
or
lahf
std
xlat
push
aaa
and
nop
adc
jo
fs
mov
jp
dec
and
outsl
outsl
push
leave
icebp
insl
sti
jg
dec
xchg
add
jbe
data16
repz
bound
push
and
std
xlat
inc
inc
jnp,pn
sar
cmp
inc
xor
pop
sbb
sbb
dec
xchg
jae
divl
sub
dec
cs
lea
nop
jnp
lret
xlat
stos
jne
pusha
addr16
cmp
scas
xchg
sub
inc
inc
aam
sub
lods
popa
pusha
fcmove
add
mov
lea
cmp
push
push
add
in
dec
std
int3
add
xchg
pop
inc
push
das
enter
notb
mov
scas
adc
sbb
pop
jae
jecxz
je
mov
jecxz
xor
jnp
xchg
jle
sbb
shl
inc
in
inc
jb
stc
or
andb
xor
sbb
xor
ret
xor
jo
es
add
fiadds
xchg
jecxz
mov
test
mov
adc
mov
mov
adc
xchg
mov
mov
cs
jae
loopne
jge
test
fcoms
mov
mov
push
xchg
mov
lds
cmp
mov
sbb
add
ret
dec
pushf
dec
sub
sahf
lock
sub
in
xchg
add
cmp
cmp
sarl
xor
insl
add
fwait
inc
mov
jmp
pop
ja
dec
xor
pop
aam
in
fildl
mov
mov
fnsave
jl
sub
xor
mov
push
and
adc
or
pop
pop
xchg
test
jge
cwtl
cmp
adc
jmp
mov
fstps
xor
xchg
ret
pop
pop
addl
int3
push
rol
push
sub
xchg
sub
xor
lods
or
jne
pop
rclb
cmc
das
push
lret
pushf
repnz
jne
inc
cmpsb
lret
push
jbe
jecxz
inc
cmpsl
mov
xchg
sub
adc
inc
pushf
stos
add
ja
add
movsl
fcmovnb
xor
fidivrl
mov
in
testb
mov
pop
sub
dec
cs
scas
pop
movsl
pop
lods
mov
push
lcall
and
test
push
add
push
repz
jb
add
mov
xlat
in
mov
jbe
test
jnp
stc
les
loop
and
cmpl
loop
mov
scas
sub
lea
repz
bound
pop
xorb
mov
sbb
xchg
stos
lods
adc
fstl
popa
negb
loop
pop
xchg
outsb
pushf
jae
repz
jmp
mov
leave
push
stc
adc
rcl
in
fs
xchg
cli
repz
insl
rdtsc
jl
adc
push
jb
pop
jnp
nop
push
sub
mov
adc
lock
and
mov
fistl
andb
mov
sub
mov
lock
jo
movsb
jle
cs
push
xchg
push
js
in
test
sarb
jp
sub
in
insl
fimuls
pushf
cmp
cwtl
lods
lahf
xchg
xlat
pop
jmp
lret
xchg
or
imul
outsb
fiaddl
xor
je
out
scas
adc
cmpsl
cmpsb
sbb
adc
movsb
addr16
pop
stos
bound
push
push
mov
and
fmull
movl
lds
call
push
ret
mov
outsl
xchg
xor
push
icebp
daa
popa
iret
stc
lret
rcll
testl
es
xchg
int
push
pop
insl
test
scas
sahf
movsl
je
sub
in
jns
push
pop
inc
mov
xor
xlat
mov
test
rcrb
stos
xor
or
fwait
mov
repz
xor
dec
imul
rcll
iret
sbb
adc
pop
test
pop
aam
rorb
es
ds
cmp
adc
mov
mov
clc
add
or
rclb
jge
cwtl
loopne
test
insl
cmp
hlt
inc
pop
lcall
in
dec
cmpsb
inc
sbb
pop
jecxz
mov
xor
cld
data16
scas
adc
fucomip
roll
pop
mov
fbld
xchg
rcrl
cwtl
cwtl
jmp
leave
sub
mov
push
and
shrl
test
add
sbb
inc
and
push
aam
cld
cmc
mov
lret
xchg
ret
pop
and
loop
shl
pop
ret
lods
int
sarl
ss
lods
cli
pop
rcrb
or
shll
mov
pop
rorb
sbbl
push
push
gs
outsl
inc
mov
ja
cwtl
xchg
cmp
push
mov
add
aad
push
push
vshufps
js
cmp
xor
sbb
cmp
fisttpl
scas
mov
sbb
or
movd
scas
call
cwtl
loopne
jecxz
mov
pop
mov
fwait
push
loop
loop
jns
dec
jb
xlat
mov
sbb
mov
and
adc
mov
mov
mov
xchg
pop
mov
arpl
cld
mov
pop
lcall
mov
imull
mov
pop
sbb
pcmpgtb
sbb
mov
popf
and
sub
loopne
or
inc
jp
and
rorb
jle
mov
xchg
imul
jecxz
xchg
push
dec
jbe
test
push
add
sbb
fstps
push
push
int3
and
ficoml
pushf
call
mov
pop
mov
xor
fimuls
jbe
nop
jns
loop
in
add
in
out
and
inc
add
shlb
mov
aas
std
add
ret
nop
std
pop
lret
pop
lods
and
movsl
ja
popf
pop
add
stos
into
fdivrl
dec
loop
and
lahf
rcrb
daa
mov
mov
rorl
mov
lea
mov
push
test
fsubp
pushf
mov
inc
loope
cmp
xchg
outsb
iret
out
addr16
dec
dec
mov
jno
lret
movsb
das
out
outsl
mov
adc
test
xor
lods
pop
subl
cmpb
popaw
sbb
lock
mov
jl
in
scas
mov
lea
aad
or
dec
pop
cld
clc
mov
ror
xchg
test
xor
and
je
jne
je
scas
negl
lock
pop
fcmovnbe
push
sbb
loop
xor
jge
cmpb
int3
pop
imul
insl
jns
pop
cld
mov
fidivs
xchg
push
mov
stc
fidivrs
or
fcoms
mov
xor
mov
xchg
sbb
adc
pop
ds
add
jns
dec
mull
jle
sbb
sbb
gs
aaa
mov
in
mov
cld
cld
loop
xor
cmp
dec
sbb
cmp
arpl
mov
jne
mov
aaa
jne
jg
push
jne
mov
ss
pop
add
cmp
outsl
repnz
out
inc
xor
fadds
mov
fdivr
daa
mov
inc
mov
or
aam
sub
push
scas
inc
stos
add
adc
mov
pop
add
cmp
xor
pop
pop
loop
cmp
push
popf
sbbb
lea
stc
inc
je
mov
jle
fstp
gs
cli
push
xchg
aam
loop
sub
leave
orb
xor
inc
xor
push
pop
sub
dec
mov
cltd
dec
add
mov
mov
ret
sub
adc
arpl
ret
mov
jmp
arpl
insl
cmpsb
jnp
outsb
pop
fadd
shlb
dec
push
sbb
gs
test
sub
lcall
insb
dec
push
aaa
push
bound
push
jmp
test
test
das
jbe
jge
mov
add
xchg
ljmp
fwait
movd
and
popa
jne
imul
add
loope
inc
mov
mov
jp
loop
xchg
insb
push
movsl
in
sti
cmp
jae
sbb
adc
push
or
arpl
outsb
jbe
xor
fdivrl
cmp
aad
jle
nop
mov
sub
mov
cmp
imul
jmp
pop
fmull
ljmp
mov
cmpsb
or
sarl
sti
leave
push
jo
scas
sbbl
push
jge
je
jns
insl
cld
dec
out
aaa
repz
or
pop
test
outsl
out
ret
xchg
mov
pushf
pop
add
or
or
and
es
outsl
rolb
xchg
lret
or
arpl
jge
adc
aam
jno
sbb
aam
inc
mov
idivl
and
push
adc
mov
pop
xlat
pop
xchg
popf
dec
lea
inc
mov
int
mov
popa
sub
dec
mov
lock
js
scas
jle
int
pop
loop
rcrl
popa
sub
loope
insb
or
cmc
push
jne
aas
sbb
outsl
andl
sub
cmp
mov
test
fdivl
dec
in
jb
push
mov
mov
push
fmul
mov
test
test
insl
mov
sbb
mov
fwait
enter
lock
and
or
insb
out
loope
adc
and
cli
pop
cmp
out
lcall
arpl
inc
pop
lcall
push
rolb
cli
btr
adc
gs
jo
push
mov
mov
orb
mov
loop
fildl
shlb
sub
adc
scas
mov
push
lds
xchg
or
test
in
aaa
cld
mov
ror
shl
jge
adc
or
je
xor
mov
inc
shrl
inc
mov
push
pop
xchg
adc
cwtl
jg
mov
loopne
scas
ja
icebp
icebp
or
mov
sbb
stos
fisttpl
push
push
sbb
mov
sbb
jmp
nop
in
xrelease
mov
popa
cmpsl
subl
mov
adc
cmp
mov
mov
sti
ss
or
lahf
fadd
push
arpl
addl
sbb
stos
inc
and
or
mov
xor
push
adc
out
push
in
shlb
cmpsb
lock
cld
xchg
cmp
push
dec
aaa
fsubs
arpl
imul
sbb
nop
and
inc
movsl
mov
xchg
mov
push
ja
mov
xor
shr
mov
jecxz
leave
dec
cmp
push
sbb
scas
movsl
sbb
or
sbb
lods
nop
dec
fwait
aam
ss
pop
mov
arpl
ds
sbb
jb
dec
mov
push
pop
movsl
ja
lods
jmp
mov
xchg
icebp
rcll
and
mov
mov
mov
inc
insb
push
or
jae
leave
out
fsubrl
push
fldcw
and
add
xchg
jno
push
loop
fnstenv
xor
pop
pop
lods
repz
repz
add
int3
cmp
outsb
push
dec
sbbl
mov
mov
jbe
adc
rorl
les
insl
cmp
jg
dec
aas
xchg
pushf
cmp
xchg
es
xor
dec
dec
mov
dec
jle
xor
lods
add
mov
xor
xchg
mov
rclb
repz
roll
and
sbb
xchg
add
or
push
mov
sahf
test
sub
dec
cmp
ds
cmp
cmp
sbb
jmp
outsl
scas
jo
adc
or
dec
icebp
ds
pushf
sub
xor
popf
or
std
ljmp
and
ret
jo
pop
mov
xchg
xor
lret
push
mov
xor
mov
dec
rcll
sbb
les
push
outsb
negb
in
mov
xchg
jecxz
lea
out
cmp
loop
add
pop
pop
push
repnz
jecxz
push
xor
push
inc
iret
prefetchnta
sarb
dec
xor
push
ret
xchg
jb
pop
aam
or
pop
jo
cltd
and
cltd
pop
ror
mov
arpl
jp
popa
gs
sbb
mov
test
lock
dec
mov
sub
mov
movsb
daa
mov
inc
mov
jno
fldt
add
in
aaa
into
fst
inc
dec
push
mov
fs
mov
out
jmp
dec
leave
lods
dec
stc
addl
insl
push
jle
and
lods
dec
mov
lods
jns
aas
push
test
pushf
sub
add
fs
cmpsb
inc
jge
roll
inc
mov
cmc
dec
das
cmp
ret
jl
or
movsb
push
cmc
into
add
loop
decl
movl
out
in
sbb
adc
out
incl
pop
and
lods
repz
jno
sub
push
ds
mov
mov
pop
jmp
mov
xchg
mov
cmp
dec
push
mov
add
bound
mov
inc
sbb
pop
pop
fsubrl
andl
fcmovb
dec
push
add
inc
in
adc
rcrl
add
icebp
aas
push
xor
pop
xchg
xor
fimuls
adc
push
xor
add
and
pop
fadds
sarb
sbbl
clc
push
outsl
pusha
dec
imul
addr16
aad
mov
popf
push
test
push
pop
sub
pop
int3
test
adc
jle
xchg
call
loop
mov
mov
cld
mov
and
cs
push
pop
and
jno
add
sub
lds
or
mov
xchg
mov
daa
int
out
pop
push
pop
out
call
std
xchg
inc
sub
mov
push
out
push
add
inc
lds
test
inc
data16
mov
shlb
loopne
xor
aas
pop
pop
aaa
sar
jmp
xchg
pop
mov
mov
sub
push
scas
in
mov
cmpsl
jno
bound
lahf
pop
gs
sub
lcall
insl
js
cmp
stc
jmp
xchg
or
ficoms
pop
jp
inc
ret
mov
mov
js
popa
lahf
ret
xchg
cmp
mov
out
cld
daa
jl
push
ret
js
dec
mov
adc
xchg
mov
cmc
mov
daa
cmpsl
leave
mov
inc
cmp
in
xor
cmpsl
inc
loopne
add
xchg
pop
fstl
ftst
pusha
mov
test
popf
push
stc
mov
ret
lods
add
xchg
or
ljmp
addr16
cmp
addr16
xorl
xor
gs
xchg
mov
pop
pop
pop
ds
fmull
xchg
mov
push
pop
jbe
pop
imul
inc
dec
nop
jp
add
icebp
jle
and
cmp
aaa
jg
jle
pop
inc
aas
ja
outsb
test
into
add
sbb
xchg
cmp
rorl
sarl
mov
inc
add
fnstsw
lcall
sub
jmp
or
add
stc
loopne
inc
sti
cmpsl
fsubrl
aaa
ret
push
pop
pusha
jnp
pop
mov
ljmp
cmc
inc
dec
push
push
jbe
jne
mov
cmpsb
movsb
mov
aam
add
pushf
pusha
mov
add
setp
cli
aas
cmpb
sub
dec
and
push
les
xchg
jle
push
imul
les
mov
adc
pop
imul
or
dec
test
sar
mov
adc
push
pop
push
or
icebp
add
arpl
jns
cmpl
out
in
imul
add
and
mov
inc
push
sbb
ret
and
rcl
dec
ss
xorl
fidivl
lret
sbb
enter
push
dec
mov
adc
pop
adc
add
or
call
imul
lcall
jns
ds
push
pop
cmp
in
in
push
push
cmp
jge
pop
movsb
cmovg
sahf
mov
sbb
pop
scas
rorl
mov
sti
scas
subb
sbb
jle
inc
adc
push
stc
sbb
adc
arpl
sub
js
pop
mov
mov
fwait
jae
enter
les
cmp
es
cmp
je
xchg
or
add
fucomi
adc
cltd
das
cwtl
iret
push
out
stos
or
add
push
xchg
and
faddp
sub
sbb
jl
inc
shlb
daa
cmp
mov
subl
fldenv
movsl
lret
fldz
ja
ficompl
sub
dec
mov
xlat
test
loopne
push
stos
aas
scas
mov
leave
sub
lcall
imul
movsl
movsb
imul
pop
dec
sub
movsl
adc
jmp
lcall
pop
dec
fldt
stc
sarl
xchg
sub
jp
lds
xorb
push
or
mov
nop
pushl
mov
xorb
movaps
faddl
mov
mov
or
outsb
outsb
jno
dec
shlb
push
popf
mov
imul
or
cmc
popf
enter
push
xor
into
vunpcklps
dec
xorl
adc
cmp
imul
outsl
pop
or
scas
loopne
mov
out
fisubl
sub
iret
sti
push
lock
push
ja
je
bswap
in
call
inc
fildll
mov
jno
cs
adc
dec
sti
pop
or
add
leave
out
sbb
addr16
cmc
sbb
adc
xor
repnz
or
movsl
sub
outsb
add
pop
jne
mov
nop
stos
add
scas
cmp
cmp
inc
sub
jne
popa
jmp
idivl
aas
xor
mov
mov
mov
je
movsb
dec
adc
out
outsb
dec
add
out
inc
xrelease
push
test
fucomip
sahf
pop
loopne
add
stc
test
addr16
pop
mov
and
add
ss
cli
cmp
stos
mov
inc
dec
scas
mov
push
mov
adc
or
jae
xchg
fs
std
jns
lahf
fbld
imul
xchg
mov
data16
test
movsb
cmc
insl
sub
pop
into
mov
les
xlat
or
push
push
ds
scas
jnp
pop
xor
xlat
cmc
xchg
sub
inc
stc
mov
stc
call
and
fiaddl
jge
dec
imul
xchg
pop
cli
fs
pop
popf
cmp
jge
ds
mov
lods
movsl
cltd
push
iret
cmp
jl
icebp
addb
jno
dec
push
sbbl
dec
pop
mov
push
in
adc
enter
dec
jne
pop
xchg
cmp
call
pop
xchg
ljmp
ss
add
out
dec
iret
mov
aaa
rcl
cmp
cmp
movzwl
ficoms
sub
sbb
jmp
jl
lcall
imul
push
into
testl
icebp
sbb
or
jmp
add
pop
mov
mov
iret
dec
inc
cmp
ret
xchg
cmpsb
xchg
and
inc
sti
imul
lret
cmp
or
lret
jno
mov
stos
xlat
dec
pop
push
divb
adc
push
add
or
add
mov
repnz
dec
sbb
and
or
enter
or
dec
push
flds
subb
inc
mov
iret
daa
lret
dec
add
or
add
xchg
ret
dec
mov
in
xchg
sbb
add
add
outsb
subb
ud0
ss
cmp
cmpsl
lret
jle
and
ss
out
sbb
push
adc
mov
sbb
xchg
or
mov
ret
imul
add
push
mov
push
cmpsb
pop
mov
sbb
or
mov
adc
push
lea
icebp
add
jne
add
mov
mov
mov
inc
fwait
push
xchg
and
sub
fnstsw
sahf
das
xchg
addr16
dec
in
gs
mov
lret
repz
mov
inc
jle
test
outsl
orl
sarl
adc
add
arpl
and
pop
sub
popa
pop
adc
je
mov
iret
lods
lret
mov
xacquire
movl
pop
shll
mov
mov
jno
fimull
mov
adc
or
or
xchg
add
ljmp
add
clc
addr16
ret
sbbl
and
add
cmp
mov
add
daa
stos
jle
mov
fs
andl
fstpt
add
lods
out
imul
fnstcw
xor
pop
stos
push
fbstp
jmp
lods
or
cli
fcompl
cli
inc
mov
movsl
xor
jae
nop
mov
outsl
lock
addr16
cmp
imul
sbb
das
push
pop
mov
mull
imull
pushf
xchg
adc
jne
ja
cmp
sbb
fisttpll
pop
sbb
pop
or
xor
stc
push
rorb
sahf
psllq
fwait
idivb
xor
mov
push
seta
mov
cli
xor
stos
int3
xor
sbb
andl
xlat
lahf
lret
mov
xchg
or
cmp
pop
imul
jb
fstpl
in
jbe
repz
xlat
aad
adc
lods
loop
add
pop
mov
mov
or
out
sub
mov
lock
cs
fbld
jp
xor
sub
inc
jne
dec
sbb
jle
popl
sbb
add
addr16
sbb
jo
sahf
jp
push
add
andb
fs
jge
data16
xor
sub
mov
fwait
dec
cmp
sub
jo
mov
or
dec
outsl
lods
popf
cs
sbb
int
mov
test
loopne,pn
sbb
ljmp
out
cld
dec
mov
arpl
cmp
out
xor
cmpsl
icebp
in
dec
clc
mov
lret
mov
push
or
dec
push
push
mov
xchg
sbb
shll
inc
clc
imul
cltd
mov
jp
popf
stc
inc
je
jnp
dec
popa
je
cmp
pushf
fs
stos
add
int3
scas
push
cmp
call
dec
nop
or
mov
mov
push
call
cs
mov
pop
cmp
movsb
orb
icebp
lcall
les
rorl
or
xlat
test
jge
in
adc
hlt
fcomps
lock
out
adc
push
aad
jecxz
xchg
repz
shl
es
xor
mov
pushf
inc
test
cmpsl
outsl
add
lock
movsb
cmpsl
inc
adc
out
fidivs
mov
mov
outsb
sub
or
push
in
sahf
cmpb
stos
and
sbb
roll
jne
push
fcmovnb
mov
fisubrl
push
call
fimull
mov
push
dec
fdivrl
repz
mov
push
in
rcrl
cs
decb
pushf
fstpl
add
jne
and
sbb
fnstenv
sub
mov
lea
lret
outsb
mov
xchg
dec
jb
sub
mov
xchg
aam
xchg
sti
roll
lahf
jae
outsl
or
sar
adc
mull
and
jnp
insl
lret
dec
sti
xor
dec
sbb
or
sub
loopne
ror
jl
mov
aam
sbb
xchg
lret
jecxz
dec
inc
arpl
test
push
sbb
xor
push
call
outsl
dec
lcall
out
jp
add
lock
out
cmpb
scas
mov
xchg
fistps
rorb
mov
push
scas
or
mov
fidivs
clc
add
jge
pop
pop
xor
jnp
test
sub
into
jne
jae
jge
jo
lret
xchg
fs
fnstcw
xchg
imul
xchg
sbb
xor
jmp
sbb
lcall
mov
jmp
outsl
test
inc
mov
inc
popa
mov
sub
mov
mov
repnz
sbbb
std
roll
inc
ret
insb
call
cmc
cwtl
inc
add
clc
leave
gs
out
iret
mov
jecxz
mov
inc
adc
adcb
jo
cwtl
jne
lret
pop
xchg
xchg
mov
dec
scas
shll
push
push
mov
test
les
movsl
push
imul
addr16
movsb
repz
cmc
jg
sbb
add
das
cmp
dec
fst
xchg
out
daa
jnp
cmc
and
jae
fcompp
pop
mov
push
icebp
insb
jbe
ret
and
adc
in
add
test
push
and
fsubrs
push
dec
mov
mov
push
imul
mov
sbb
xchg
jmp
add
inc
jb
stos
ljmp
outsb
and
push
push
out
dec
hlt
mov
popa
cltd
jg
notb
mov
sub
ds
pushf
pop
push
shll
adc
xor
cwtl
ror
jnp
cmp
push
jb
mov
adc
mov
pop
shll
mov
sbb
dec
mov
pop
pop
clc
pop
lods
stos
jp
push
adc
push
ss
pop
imul
push
imul
mov
adc
ret
cltd
push
lcall
cwtl
xchg
inc
daa
cmp
hlt
fsubrl
inc
popa
mov
sbb
jge
push
xchg
xlat
lea
mov
aam
bound
mov
pop
or
ud2
mov
and
mov
movsb
mov
mov
xor
mov
and
and
push
les
or
pop
in
xchg
inc
test
ficomps
mov
mov
sbb
into
cmp
roll
sti
popa
lock
jecxz
sub
xchg
cwtl
dec
xchg
jbe
dec
imul
fiadds
jmp
xchg
mov
mov
pop
lcall
inc
aam
sub
ret
cmpsb
pop
xchg
enter
filds
aaa
dec
adc
pop
imul
cmp
lods
loopne
pop
push
paddsb
pop
ret
pop
data16
fs
fisubs
lret
ljmp
scas
fmull
xchg
js
mov
sbb
and
mov
rclb
jge
outsb
test
add
iret
sbb
push
call
shrb
leave
mov
sahf
cmc
mov
sub
dec
inc
mov
mov
pop
adc
inc
pushf
andb
lods
loopne
jae
les
lcall
cmpsl
pushf
cmc
outsl
shrb
fwait
add
cmp
push
movsl
and
fsubrl
negb
clc
aas
pop
push
xchg
mov
cmc
cltd
insb
sbb
add
dec
dec
push
cltd
fildl
inc
movsb
cmpsl
mov
xor
mov
mov
scas
sbb
inc
insb
push
scas
mov
mov
push
pop
lods
jns
add
sub
sbb
mov
or
mov
testl
mov
fbld
cld
outsl
add
mov
inc
xor
xor
push
sub
movsb
mov
in
push
push
bnd
fsubrs
and
stos
pop
dec
movb
jl
movsb
or
xchg
push
pop
push
fs
cmp
sbb
mov
sbb
ret
jbe
cmp
mov
arpl
cmpl
push
mov
lret
or
jo
ljmp
pop
out
push
inc
clc
ss
xlat
cs
roll
cmp
jo
jmp
jbe
adc
dec
mov
dec
sub
test
sub
push
jnp
lret
outsl
and
xchg
mov
movsl
mov
movsl
adc
pop
sarl
push
cmp
sahf
aam
mov
mov
aad
sbb
daa
sub
jns
lcall
mov
jne
pop
xchg
and
pop
cs
imul
add
in
inc
sub
mov
aaa
inc
cmpsl
xchg
xchg
out
cmp
jne
mov
mov
enter
outsb
add
movlps
xor
sbb
or
ljmp
daa
icebp
push
cmp
add
jns
push
icebp
adc
icebp
lds
outsb
gs
aam
int3
outsb
outsl
and
movsb
insl
and
dec
mov
fisttps
add
and
fbstp
pop
inc
clc
gs
fwait
insb
addr16
cwtl
outsb
xchg
ja
mov
add
dec
or
xor
pusha
lret
out
btc
mov
push
mov
out
pusha
jp
sub
scas
mov
adc
and
jle
mov
mov
fistpl
or
dec
std
outsl
xchg
cmp
cltd
in
xchg
dec
xor
or
fcomps
lret
test
xchg
cmp
jge
lret
aas
stc
ljmp
adc
xor
in
or
int
adc
or
jecxz
pop
pop
xor
xor
ret
out
enter
and
repz
add
cmp
je
insl
movsl
push
lret
aaa
sub
scas
insl
xchg
jmp
inc
out
add
lods
push
ds
sub
mov
test
dec
cmp
push
mov
arpl
hlt
jae
mov
and
xor
xchg
xor
js,pt
mov
cmpsb
test
inc
sub
jb
cltd
repz
adcb
je
imul
aad
fwait
jo
xor
inc
stos
cs
cmp
inc
mov
insb
movsl
add
pusha
push
add
fisubrs
mov
scas
mov
cmpsb
xchg
icebp
xchg
outsb
insl
mov
mulb
push
inc
call
repnz
cmp
call
aad
outsl
xor
jno
jbe
mov
bound
push
push
inc
jns
test
mov
lods
loope
pop
roll
jo
dec
lcall
pop
sbb
push
mov
sahf
push
inc
aaa
dec
mov
pop
sysexit
mov
jle
pop
fs
imul
xchg
mov
xchg
jecxz
add
or
push
jecxz
lods
outsl
and
jbe
cmpsl
repz
inc
jns
and
pop
fdivrs
mov
jne
pop
adc
mov
loopne
filds
jg
mov
sbb
stos
loopne
ds
loop
test
jp
mov
notb
insl
sbb
and
repz
je
mov
jo
clc
sbb
push
jmp
xor
mov
test
and
add
mov
out
lahf
xchg
mov
fwait
iret
mov
bound
push
mov
and
dec
popf
pop
jb
push
ss
and
push
cmpsb
fmulp
and
mov
mov
pop
es
xchg
pop
cmp
inc
adc
push
sub
sbb
ret
das
pop
leave
xchg
xchg
nop
add
cmp
out
sarl
bound
jne
sbb
repnz
adc
pop
add
ljmp
sub
aam
scas
mov
iret
mulb
ds
out
mov
shlb
add
popf
loop
mov
mov
sub
leave
push
loopne
scas
and
pop
rcll
xor
in
jg
cmp
lods
ret
and
cmpl
stos
out
fnsave
xor
lret
fstpt
sbb
call
and
out
and
fmulp
xlat
mov
cmpsl
out
popf
dec
aaa
xchg
pusha
outsb
arpl
fstps
pop
insl
mov
xchg
fucomip
mov
cs
inc
cs
daa
loop
xchg
mov
jo
lcall
mov
and
leave
idivb
mov
std
inc
xchg
lret
lcall
pop
mov
dec
inc
mov
xchg
add
cmp
adcl
jge
push
imul
push
inc
cmp
xchg
mov
lock
jnp
aam
mov
mov
int3
ficompl
scas
les
push
jb
push
nop
sub
pushf
jb
adc
aaa
adc
xchg
mov
je
pop
add
mov
nop
pop
es
insb
rorl
xor
push
jae
addl
xchg
ds
insl
jecxz
mov
clc
stos
mov
enter
rcll
dec
and
fldt
jae
shrb
dec
movsl
jecxz
cmp
shlb
cmpsl
loope
movsl
xor
pop
test
mov
or
jl
dec
mov
xor
inc
xchg
push
adc
pop
jecxz
movsb
outsb
addb
xchg
mov
xchg
cmp
add
aam
sub
sbb
and
cmp
xor
jp
xchg
and
jmp
mov
add
adc
mov
add
xor
push
mov
jge
xchg
addr16
ds
pop
and
and
mov
pop
sub
stc
leave
mov
and
mov
icebp
fstl
in
jecxz
pop
test
fmul
xor
cli
jge
jg
mov
popf
cmp
repnz
add
push
cmp
dec
rep
data16
cld
jne
test
or
sub
in
xchg
je
daa
nop
mov
push
out
add
lcall
inc
enter
imul
push
xorb
and
idivl
or
dec
rcl
push
jns
dec
lods
xchg
data16
in
or
mov
sub
sbb
dec
mov
loope
call
dec
jge
scas
add
sysret
inc
cmp
sti
jmp
sahf
out
sti
cmp
sbb
jecxz
inc
pop
cmp
sub
pop
and
and
call
add
xor
jns
sbb
pusha
cmp
jae
xor
adc
stc
lods
jns
scas
xlat
imul
sub
jnp
scas
add
scas
lods
cmpsl
jne
xor
pop
stos
cmc
stos
lea
sbb
cs
test
sahf
mov
out
enter
lahf
pop
shrb
cmc
leave
outsb
sub
adc
mov
or
aas
cmpb
ficoml
xor
add
adc
xchg
mov
jle
ja
rorb
sbb
fistpll
pop
fwait
sbb
fisubs
test
xchg
xlat
lods
adc
addb
and
adc
mov
shlb
inc
or
or
into
mov
mov
and
out
mov
cmpb
xor
adc
je
bound
cmp
mov
pushf
cli
fadds
lret
nop
pop
out
mov
dec
adc
or
or
mov
adcl
mov
jne
mov
push
sub
scas
cltd
je
mov
or
in
daa
mov
mov
imul
dec
sub
mov
clc
mov
addb
ja
push
xor
xchg
pop
out
adc
leave
add
jo
cmpsl
movsb
ret
pop
cmpsb
push
mov
in
inc
mov
mov
aaa
pushf
sbb
mov
add
aas
mov
dec
bound
stos
pop
xor
sbbb
jle
adc
jb
adc
cs
adc
gs
fmul
adc
pop
adc
cs
cmp
dec
sub
in
and
imulb
mov
jbe
test
push
popa
pop
orl
fs
add
and
in
sub
sub
ss
xor
iret
dec
mov
pop
add
sub
mov
pop
pop
into
jecxz
ret
push
in
jp
sub
pusha
mov
lds
jnp
js
fidivs
mov
xchg
inc
outsb
mov
repz
sbb
pop
rorl
pop
mul
pop
addb
add
push
pop
mov
out
cli
roll
in
ljmp
inc
lods
movsl
stos
add
cwtl
lret
pop
out
jge
pop
enter
and
cld
imul
inc
test
xchg
call
inc
movsl
mov
call
pop
lods
in
add
arpl
xchg
inc
inc
es
cli
pusha
insl
mov
push
lods
mov
or
aas
push
add
test
lea
pop
mov
jbe
mov
and
mov
out
adcb
leave
pop
sub
add
or
es
hlt
pop
movsb
sub
push
xchg
sub
mov
es
mov
push
pop
fs
push
cli
pop
inc
adc
scas
add
sbb
add
pop
fst
and
cwtl
sub
xor
xchg
cmp
call
fdivs
cmp
daa
pop
push
or
out
sbb
arpl
mov
xchg
cmp
or
clc
xor
in
or
xor
push
test
mov
lahf
sbb
add
sub
xchg
adc
xchg
cmp
sub
cmp
jb
out
aaa
enter
push
mov
aad
es
cli
fldt
js
push
xorl
clc
lea
outsb
mov
inc
mov
mov
push
out
stc
jl
imul
xor
rcrb
cmp
add
ljmp
lds
cmpsl
fnsave
cmp
into
shrl
popf
sbb
sub
add
jns
sbb
fistps
xchg
orb
pop
and
aam
mov
sub
mov
out
stos
lds
push
addr16
dec
xchg
mov
shll
dec
cmpsb
add
rclb
mov
es
idivl
adc
stos
inc
pop
clc
or
aas
test
pop
or
mov
pop
mov
sub
test
or
mov
arpl
sbb
jl
mov
icebp
adc
mov
sub
push
and
repz
repz
fstpl
cltd
loop
stos
dec
lods
pop
jle
stos
in
int
xorl
aaa
add
aad
pop
dec
gs
push
call
ljmp
jo
ja
jns
or
js
inc
jb
ja
adc
shrb
mov
mov
cmp
cmp
adc
jbe
jbe
add
loop
xchg
fiadds
stos
and
xchg
sub
std
cmp
cmp
aad
sub
pop
add
stc
adc
xor
pop
out
adc
and
and
movsl
icebp
cmp
imul
mov
fbstp
pop
or
or
scas
rolb
call
dec
loope
lcall
es
sarl
sti
adc
xchg
js
lcall
pop
pop
pop
mov
mov
mov
outsl
add
adc
cmp
aad
pop
mov
aad
loop
inc
inc
adcl
jno
sti
mov
add
mov
ret
cmpsl
gs
mov
outsl
or
test
sbb
daa
test
inc
in
test
clc
or
adc
test
into
push
sahf
popa
sbb
imul
adcb
jno
lcall
jmp
mov
fs
icebp
jge
out
mov
push
mov
xchg
loop
push
mov
testb
iret
in
jmp
and
mov
push
repnz
pop
dec
outsl
add
or
mov
movsl
mov
call
sbb
mov
out
imul
xchg
cwtl
sti
inc
adc
adc
and
sbb
and
movsl
jle
cmc
idivb
ret
fwait
dec
pop
and
rclb
add
push
insb
fdivrs
dec
dec
jb
cwtl
push
fmul
out
cmp
xor
jecxz
das
in
mov
jbe
out
sbb
sbb
cmp
lret
arpl
inc
sub
repz
or
jle
cmc
cld
jo
rorl
xor
js
add
fistps
sbb
mov
pop
sub
movsb
xchg
aam
gs
cs
or
sub
jmp
inc
sub
add
inc
mov
inc
in
lods
fistps
sub
aaa
dec
idiv
cs
insb
push
jbe
stos
popa
jg
inc
andb
int
xor
ret
cs
jno
les
mov
lcall
sti
push
and
xor
movsb
sbb
in
mov
pop
cmp
push
das
lret
or
or
cmp
cmp
stos
cltd
or
popf
pop
fildll
mov
mov
add
jns
sbb
push
dec
jp
and
pop
mov
leave
add
daa
add
sub
jecxz
js
cmp
cmpsb
popf
insl
test
inc
in
inc
mov
addl
iret
leave
popf
xchg
shlb
fdivs
roll
nop
add
test
fldenv
or
cmpsl
lock
imul
jle
out
lea
jecxz
scas
sbb
inc
add
or
outsb
nop
inc
add
pop
push
or
cli
pop
neg
cwtl
dec
push
shrb
mov
mov
cmp
sbb
and
dec
in
jge
add
test
fadds
pop
imul
lds
into
push
inc
inc
fcomps
jnp
insb
add
aas
push
into
gs
rolb
pop
mov
or
or
inc
sbb
rolb
test
and
mov
mov
and
mov
fwait
andb
outsl
ret
mov
add
cmp
mov
scas
popa
pop
mov
mov
dec
lcall
jmp
lods
shll
jns
mov
ja
inc
pop
mov
or
cmp
pop
mov
mov
dec
bnd
test
in
add
outsb
std
xlat
imul
cmp
loopne
pop
and
loopne
xchg
lds
scas
xor
rcrl
ja
jne
fucomip
ret
push
inc
jle
aad
dec
push
cld
or
arpl
mov
lea
cmp
sbb
push
sbb
enter
inc
lahf
nop
es
push
pop
mov
add
pop
adc
hlt
fcmovnb
insl
and
idivl
fisttps
clc
push
mov
or
icebp
dec
shr
jmp
lcall
gs
jl
iret
adc
mov
lods
ds
dec
lret
or
out
sbbb
push
sub
xchg
xor
push
cmp
mov
mov
repnz
sub
cmp
clc
xchg
dec
sbb
pop
jmp
cmp
mov
mov
push
mov
sbb
adc
mov
lods
mov
mov
push
push
dec
mov
jno
push
mov
or
inc
mov
repz
setno
jb
mov
outsb
push
cmpsl
lret
imul
lret
xorb
in
pop
pop
mov
mov
cmp
jne
add
fwait
dec
es
pushf
push
mov
and
add
repnz
lods
and
das
mov
push
mov
xchg
push
xor
mov
jmp
lock
mov
lcall
in
test
repz
dec
xor
repnz
aaa
adc
cli
imul
mov
rorb
leave
adc
mov
icebp
iret
fiadds
iret
and
jl
xchg
insb
jp
inc
cmp
mov
xlat
jmp
sub
and
xchg
fbld
movsl
sbb
clc
dec
sti
xor
ds
adc
popf
jl
or
idivl
arpl
scas
dec
repz
sub
cmp
hlt
aaa
lds
pop
xchg
outsb
dec
pop
cmp
divb
xchg
adcb
call
lret
lcall
jb
cmc
jns
push
repnz
cld
mov
ds
add
into
jne
jp
mov
lcall
test
mov
cmp
arpl
out
ja
movsb
call
jns
nop
out
xchg
cli
xlat
inc
shlb
sbb
mov
push
pop
xor
mov
scas
gs
stos
mov
dec
mov
icebp
dec
rcrb
enter
ja
sub
adc
call
cs
push
fcmovb
mov
jle
inc
push
and
fisttpll
sub
dec
xchg
inc
outsb
rcl
sbb
sbb
pop
sub
pusha
pop
aaa
add
dec
cmp
ret
xchg
es
and
cmp
mov
inc
jbe
ds
scas
dec
jmp
fdivs
test
ret
cmp
sbb
adc
jmp
pop
xor
out
nop
stos
sahf
movl
lahf
fs
ret
and
mov
mov
sbb
push
or
push
mov
sub
arpl
sbb
lods
jbe
pop
js
dec
mov
rcl
mov
jno
std
and
or
cmp
scas
xchg
add
cwtl
sti
fisttpll
shl
xor
xchg
adc
xchg
stos
add
gs
mov
sbb
cmp
imul
insl
enter
mov
or
cs
xchg
mov
xchg
dec
xchg
xor
cld
push
inc
inc
popf
xchg
add
in
sub
das
adc
or
and
call
and
adc
sub
fildll
loope
hlt
dec
insl
mov
and
stos
pusha
gs
cmp
sahf
fstps
sbb
pop
scas
in
movsl
popa
add
cwtl
in
fwait
or
mov
orb
push
inc
dec
cld
adc
iret
xor
mov
aas
jmp
in
fwait
bound
mov
mov
push
xlat
pop
or
decl
std
adc
mov
mov
cli
lea
mov
or
pop
sub
enter
ret
mov
adc
push
fstl
mov
jns
dec
test
pop
fwait
mov
sub
repnz
or
pop
pop
xchg
in
int3
into
mov
cmp
sub
or
add
dec
jge
jge
js
jno
adc
idivb
push
mov
cmp
mov
movsb
pop
repz
jmp
sub
xchg
xchg
cltd
jge
xchg
pop
outsb
negl
imul
daa
add
push
and
dec
pop
hlt
ja
sub
inc
adc
cmpsb
stos
repnz
push
inc
shrl
cwtl
fistpll
int
neg
add
push
call
repnz
loop
sub
sub
xor
and
arpl
lds
sbb
or
pop
cmp
or
faddl
and
inc
movl
pop
xchg
pop
ds
in
pop
jns
cmpsl
dec
pop
sbb
stos
out
xor
jae
insl
mov
inc
xchg
das
out
popf
push
push
out
jg
mov
cmp
testl
mov
add
jp
iret
jmp
movsl
or
out
mov
push
adc
cmp
lods
das
insb
sbb
mov
or
ret
insl
mov
fs
orb
call
or
push
dec
out
stos
jno
mov
cmp
gs
in
stos
leave
movsl
push
imul
mov
and
mov
mov
movsl
add
mov
ja
fwait
leave
imul
mov
push
push
or
sti
push
push
xchg
lds
into
or
pop
add
adc
test
pop
mov
test
int
mov
call
push
jecxz
es
cltd
sbb
mov
ret
pop
inc
sbb
dec
hlt
xor
test
jb
mov
inc
pop
push
jp
jecxz
fdivs
sti
cmc
lret
jbe
les
cmc
cmp
insl
and
filds
or
out
pop
cmpb
sub
mov
aas
mov
or
aad
mov
ret
mov
mov
andl
div
adc
fisttpl
cli
cmp
jbe
add
and
nop
inc
sub
imul
adc
fwait
enter
xchg
add
add
fcomps
insb
mov
sub
pop
pop
push
mov
andl
mov
pop
daa
cld
es
scas
pop
outsb
fiadds
xchg
sahf
mov
push
mov
mov
or
jne
pop
loopne
sbb
jbe
dec
inc
movsl
fimuls
stos
cmp
arpl
stos
stos
xor
pop
xlat
push
mov
push
xor
push
xor
shll
jmp
lea
addb
push
ds
pop
push
stos
adc
pop
clc
or
xchg
outsl
mov
jg
sbb
adc
aas
jl
aaa
iret
out
fiadds
inc
arpl
popl
imulb
cmp
aam
ret
outsb
mov
push
push
adc
adc
push
lret
mov
cmp
les
sub
outsl
aad
xor
mov
inc
pop
popf
lds
jmp
jae
pop
insb
xchg
push
xor
and
inc
mov
xor
fistl
push
push
xchg
or
and
or
cmc
jecxz
or
jecxz
pause
call
sbb
dec
imul
iret
pop
shl
lahf
daa
in
push
mov
or
xchg
sbbl
inc
sbb
fwait
pop
and
push
rorl
das
jbe
xor
jmp
incb
popa
jae
addr16
stc
aas
xchg
xor
sbb
in
push
sbbl
cmp
aad
nop
repz
or
xchg
cmc
sahf
push
dec
cwtl
adc
jb
push
stos
cmp
and
call
sbb
xchg
mov
dec
mov
mov
add
int3
push
lahf
loope
push
dec
push
mov
movsb
insl
mov
popa
mov
mov
mov
jae,pt
adc
stc
out
adc
ljmp
pop
add
cmp
mov
mov
fistpll
insl
jp
fmul
inc
fsubrs
jns
and
push
mov
dec
fwait
cmp
test
cmp
popf
cld
mov
ds
icebp
xor
popa
lret
push
imull
insl
push
push
mov
mov
xor
insl
notrack
adc
lcall
sbb
ds
fstpt
jae
into
fcoms
mov
mov
inc
add
inc
mov
nop
xor
gs
dec
mov
cmp
jno
push
iret
push
mov
and
lds
inc
push
mov
adc
and
loope
cs
mov
ret
gs
adc
push
mov
test
cmp
ficoms
xchg
xchg
sub
addr16
jmp
in
push
arpl
sub
jb
adc
rcl
fistps
lods
fcompl
mov
mov
mov
add
shlb
mov
call
sbb
fdivl
mov
jae
ljmp
movb
mov
fadd
pop
xchg
lods
or
pop
aas
jne
sbb
addr16
lods
adc
mov
mov
mov
pusha
add
fs
insl
mov
push
loop
shlb
fbld
mov
adc
or
sub
aaa
ret
inc
aad
int3
pop
mov
ja
mov
mov
fmuls
mov
pusha
daa
ljmp
icebp
loopne
mov
imul
sti
fidivrs
add
jmp
pop
js
in
mov
xor
sar
mov
jmp
lahf
jge
mov
pop
push
frstpm(287
insb
push
shll
xchg
ss
popf
jnp
sbb
jno
sub
dec
out
xchg
cmc
imul
or
pop
push
and
out
pushf
test
or
ljmp
nop
xor
push
stc
mov
push
imul
bound
bound
pop
data16
loope
ror
cmp
add
scas
push
cld
decl
mull
sbb
xchg
jecxz
dec
or
mov
jg
mov
or
ljmp
lds
jno
cmc
mov
shll
mov
mov
inc
and
hlt
mov
cmc
mov
pop
xor
pop
scas
pusha
ja
stos
sub
mov
out
shrl
jg
mov
mov
inc
mov
std
in
cmp
bound
cwtl
add
and
repnz
dec
adc
push
mov
lods
xor
sub
adcb
jle
pop
lahf
cmpsl
and
xchg
sbb
and
sbb
jbe
inc
mov
loopne
mov
xchg
add
in
jb
lods
dec
sti
and
jge
stc
insb
test
lods
and
int3
mov
in
pop
adc
scas
and
js
add
test
mov
push
shr
jg
xchg
adc
mov
pop
inc
mov
sub
fimull
mov
adc
add
mov
lret
sub
mov
and
push
mov
adc
loop
push
jne
mov
sub
push
xchg
shll
loope
and
in
sub
in
xlat
pop
shll
out
dec
jns
in
fidivrl
push
cli
in
dec
dec
sbb
scas
lock
jmp
sub
sub
dec
addl
and
sub
sbb
jge
lret
or
data16
addr16
and
push
xor
in
cmpl
sbb
add
repnz
in
mov
andb
sub
inc
mov
loopne
sub
out
mov
push
inc
ss
sbb
into
shrb
lret
push
fs
add
outsl
inc
leave
xchg
nop
mov
in
mov
subl
add
mov
scas
fdivrs
into
sub
sbb
es
test
into
pushf
call
cmp
push
mov
lods
xchg
pop
or
mov
push
je
jne
cmp
call
dec
lds
insb
inc
lcall
addr16
add
inc
stc
jne
adc
mov
mov
or
imul
add
cmpsb
movsl
and
adc
mov
in
dec
test
pop
sbb
jnp
in
and
fiaddl
fcomps
arpl
loop
xor
and
jecxz
insb
ss
xor
pusha
aaa
gs
mov
sahf
test
std
and
dec
dec
sbb
clc
clc
cld
lds
adc
sarl
rclb
test
push
rclb
jbe
sbb
js
sub
lret
daa
mov
das
mov
dec
incl
fldt
mov
icebp
cld
jg
dec
mov
mov
dec
sarl
lds
inc
and
jno
ja
rdtsc
movb
lds
das
add
cmpsl
adc
loop
loope
sti
adc
in
lds
js
push
mov
rcrb
sub
sub
fstpt
fidivrs
rol
jnp
arpl
cmp
pop
sbb
pop
rolb
sub
or
sbb
ss
mov
add
lahf
shrb
or
add
jno
fistpll
mov
mov
add
xor
xchg
pop
mov
jle
inc
jl
bound
dec
xor
add
mov
ret
mov
push
jno
add
sbb
add
popa
stc
inc
push
lods
nopl
jo
insl
add
jl
sub
insb
inc
ror
pop
movsb
sbb
dec
xchg
add
in
pop
ds
dec
dec
mov
lock
push
aad
xor
cmc
mov
outsl
sub
idivl
stos
lret
push
cli
or
lock
gs
ljmp
xor
popf
push
addl
cli
jno
push
fnsave
sub
lods
dec
pop
iret
decl
arpl
add
add
dec
fs
dec
push
xchg
fdivrl
and
mov
std
lods
int3
adc
xchg
orl
rol
hlt
push
sti
dec
sub
mov
scas
fnstsw
call
pop
add
sub
leave
jmp
lods
pop
call
mov
jmp
dec
sub
mov
xchg
mov
lods
idivl
ret
daa
and
jmp
fwait
cmp
adc
fadd
xlat
hlt
mov
mov
je
jg
mov
imul
ja
ss
insb
sti
jae
xlat
arpl
ss
mov
adc
ret
mov
test
add
sub
mov
es
add
fstps
xor
test
xor
ud1
and
or
and
sub
imul
lcall
int
and
mov
lret
cmp
dec
cmp
adcl
xchg
and
jl
out
mov
stos
pushf
sbb
ss
pop
test
inc
out
jmp
mov
xor
insl
pop
add
mov
ljmp
sub
push
jecxz
xchg
mov
and
jp
jae
jo
inc
inc
inc
xchg
mov
testb
sahf
out
rcrb
sarl
xchg
pop
mov
outsl
xor
lret
adc
add
mov
xchg
arpl
popf
ret
pop
movsl
fldl
ficomps
mov
sbb
pop
and
push
loop
cmp
push
mov
data16
adc
mov
push
jnp
or
jbe
xchg
jb
lcall
cmp
ds
iret
aad
and
lret
cmp
xor
popf
dec
inc
lahf
sub
sub
int3
fsubrl
pop
or
sbb
xchg
jae
dec
lret
sub
inc
or
push
rolb
rolb
cmp
rorl
dec
cmp
clc
jecxz
sub
insl
add
ds
cmp
xor
cmpsl
divb
not
inc
cmpsb
cmp
dec
ja
in
std
loop
out
jno
mov
jecxz
icebp
cld
fcompl
cmpsl
fidivrl
cld
dec
adc
addl
cmp
mov
xchg
pop
mov
fdivrs
add
pop
test
sbb
dec
pop
pop
or
in
nop
xlat
adc
scas
rcll
sbb
out
insl
adc
push
push
mov
dec
sbb
dec
xchg
pop
sub
xor
fldcw
in
add
or
sbb
inc
dec
xorb
xchg
daa
mov
mov
and
insb
fistpll
fs
cmp
cmp
sbb
lock
loop
mov
mov
std
fcmove
addr16
arpl
mov
pop
out
sub
jnp
mov
and
push
jne
out
scas
pop
out
and
dec
arpl
dec
add
push
rol
add
cvtpi2ps
and
jg
fstps
gs
cmc
ljmp
fsubr
or
cli
pop
std
push
mov
stos
aaa
mov
lods
imul
cltd
pop
sbbl
jmp
push
or
dec
push
or
cmp
mov
and
scas
sarl
push
ljmp
fs
or
push
js
xor
mov
xacquire
or
hlt
adc
xchg
push
jbe
mov
leave
adc
lahf
rorl
enter
ret
mov
scas
roll
testl
inc
xor
imul
jl
dec
adc
pop
xchg
in
or
and
mov
ds
xchg
and
rol
jbe
sub
mov
int
and
mov
mov
xor
jo
mov
inc
test
bound
movsb
mov
cmpb
nop
or
shlb
in
sub
test
addr16
lcall
jecxz
imul
sbb
into
xchg
adc
inc
add
ret
cmp
icebp
imul
das
lods
arpl
jb
sbb
pop
push
rolb
in
gs
sbb
cmp
mov
mov
ret
mov
jnp
push
push
ror
mov
pushf
mulb
pop
cmp
sub
jne
rol
jo
dec
inc
mov
aas
mov
pop
push
repnz
mov
xor
add
loop
mov
iret
pop
jnp
fisttpll
dec
adc
dec
adcb
inc
nop
arpl
mov
inc
aad
dec
jl
jp
jl
daa
pop
mov
bound
aam
push
push
hlt
fwait
sub
push
mov
cmp
imul
rcll
mov
dec
jo
cltd
stos
aam
fdiv
nopl
enter
and
aas
add
add
jl
mov
sbb
and
rolb
cs
and
icebp
jbe
out
adc
out
in
movsb
pop
and
jecxz
mov
sahf
lea
mov
int3
pop
or
shll
inc
dec
pusha
dec
nop
arpl
in
call
push
clc
jnp
dec
mov
test
inc
mov
mov
cmpsb
and
out
lret
inc
inc
shll
pop
insb
leave
jno
xchg
insb
in
push
test
pop
push
arpl
aam
cmp
cmp
sahf
imul
insl
xchg
in
mov
pop
outsl
lcall
dec
js
inc
test
bound
lock
aad
dec
push
stos
pop
lret
test
movsl
outsl
push
lret
mov
pop
mov
lock
cmpsb
lret
push
cmp
dec
int3
adc
lods
push
xchg
sbb
aaa
push
mov
hlt
icebp
and
jmp
leave
cmpw
nop
jecxz
imul
pop
hlt
adc
scas
popa
cmpsb
incb
les
xchg
add
push
xchg
iret
mov
xor
ljmp
stos
gs
mov
fldl
push
mul
fs
jge
rol
pushf
mov
mov
outsb
pop
push
xlat
lret
mov
xor
cmpsb
enter
xchg
imul
push
cmpsl
mov
mov
cmpsl
sub
push
notb
gs
mov
sub
or
pop
or
imul
jns
test
sub
cmp
daa
fstpt
in
sti
sbb
movsl
ret
test
jae
sbb
gs
jno
cld
inc
xchg
or
bndldx
xchg
hlt
test
int3
ret
fsub
xlat
adc
fmull
and
rcll
pop
xchg
push
mov
faddp
sub
cmp
hlt
jno
add
fisttpl
fildl
pop
mov
loop
push
xor
xchg
int3
aas
popf
test
cmp
push
pop
sbb
aaa
aas
and
sbb
add
mov
jno
in
jae
icebp
ret
sub
xchg
jb
popf
clc
ret
lds
and
mov
add
aam
popa
shrb
mov
adc
rolb
jbe
jp
mov
xor
cmp
gs
cs
mov
cld
cs
imul
mov
pop
mov
insb
pop
jge
lea
jno
ljmp
push
pusha
aam
fcmovu
push
sub
jnp
data16
fiaddl
lods
xor
push
lahf
adc
ret
push
int3
pop
xor
out
jg
pop
adc
aaa
xchg
cmpsl
mov
je
sbb
xchg
cmp
addl
aas
push
fidivrs
jbe
push
data16
in
mov
and
fcomps
jae
iret
push
test
xor
insl
inc
cmp
mov
push
subl
push
mov
nop
call
add
pop
mov
cli
and
mov
jp
jb
xchg
pop
movsb
xor
inc
pop
std
mov
jecxz
mov
dec
sub
fmull
pop
inc
xor
pushf
and
mov
sub
fdiv
inc
repz
sub
repnz
mov
cwtl
mov
push
and
loop
lods
xchg
in
popa
lods
icebp
cwtl
jecxz
cmpsl
stc
pop
jnp
push
adc
imulb
cwtl
ret
push
mov
mov
inc
jbe
mov
ljmp
icebp
imul
xchg
xchg
xlat
in
popa
mov
pop
in
and
lahf
out
lret
jmp
ret
cwtl
shll
mov
sub
mov
pop
mov
and
les
scas
pop
xchg
daa
fistl
je
imul
cltd
mov
push
out
add
fs
or
out
cmp
fildll
dec
mov
dec
sub
loopne
dec
shlb
orb
sub
int3
aad
pusha
incl
xchg
push
clc
lods
mov
add
shl
aas
xchg
lock
lods
outsb
pop
daa
or
or
test
popa
cs
jg
xchg
sub
jmp
jae
xlat
adc
cs
fwait
in
mov
jmp
mov
leave
mov
adc
and
ret
aad
dec
das
inc
mov
mov
les
inc
mov
add
jge
mov
inc
test
push
lock
stc
popa
add
inc
dec
sub
xor
fistpll
dec
jecxz
les
cmpsl
add
data16
cmp
push
or
dec
xchg
cmpsl
sbb
fsubrs
dec
adc
js
push
scas
ret
xor
insl
cs
or
sbb
repnz
fsub
dec
adc
jno
mov
adc
leave
clc
ja
sub
call
shr
int
jne
push
mov
jnp
outsl
or
fsubr
daa
int3
mov
ds
mov
jo
into
into
gs
pop
sahf
fstps
inc
inc
cmpsl
xchg
shll
add
pop
jl
mov
loop
mov
add
movsb
jge
jg
push
sbb
cmpsb
sub
orb
shlb
sbb
scas
mov
in
in
iret
push
popa
cwtl
dec
xlat
aas
sub
or
lret
test
shlb
test
mov
icebp
push
cmpsl
cltd
jmp
mov
cmp
sub
sub
or
cli
cwtl
inc
pop
cli
cmp
mov
in
test
and
mov
cmpsb
xor
int3
in
fists
nop
add
aas
add
and
js
je
dec
or
icebp
in
adc
pop
jae
or
sub
push
mov
jno
pop
jecxz
and
or
mov
mov
jne
pushf
nop
lcall
fdivrs
xchg
mov
mov
fdivs
or
pop
vpcomuq
cld
lahf
daa
add
lods
push
inc
loopne
adc
or
lds
cmp
mov
xorb
into
mov
rcrl
lret
nopl
sbb
dec
addb
test
cltd
icebp
xlat
jle
pop
stos
sahf
sbb
clc
mov
xchg
rorb
xchg
cs
sbbl
leave
popf
xchg
xlat
outsb
inc
cli
jg
pop
mov
addb
fimuls
cmp
mov
setge
and
neg
dec
adc
xchg
add
sti
pusha
jmp
jbe
pop
add
and
push
sbb
imul
mov
adc
lds
push
xchg
inc
mov
imul
ljmp
and
add
or
xor
lds
orl
sub
mov
adc
aam
add
pop
mov
and
rcrl
cmp
sub
in
jo
test
icebp
out
jno
clc
dec
in
or
cwtl
mov
shr
scas
jmp
pop
fildll
dec
mov
and
jno
sti
mov
adc
jmp
clc
mov
icebp
add
mov
sub
adc
xchg
push
clc
scas
add
jnp
sub
xchg
add
outsb
cmc
cmpsb
mov
rcll
xor
lods
add
shr
xchg
in
mov
mov
imul
int
fldz
and
dec
cld
ds
or
adc
rorl
mov
push
sbb
andl
and
inc
dec
cld
test
pop
jno
pop
jbe
and
xor
outsl
addr16
push
xchg
xchg
add
mov
and
jg
pop
xor
xor
inc
cmp
cmpb
adc
out
dec
sbb
mov
clc
cli
xlat
push
adc
pop
enter
mov
push
cmp
and
lcall
mov
in
adc
pushf
xorl
jo
cmc
in
es
andl
mov
and
in
add
xchg
movb
sub
add
iret
movsb
or
unpckhps
xor
insl
xchg
bound
or
jo
ret
and
cmp
and
push
imul
xlat
xchg
sbb
and
jnp
frstpm(287
fisttpll
addr16
fnsave
jecxz
ret
mull
mov
mov
bound
adc
lahf
aas
int
ljmp
jmp
push
add
insb
pushf
fisttps
inc
push
add
adc
lret
popa
rcrl
ja
insb
mov
jge
add
sbb
into
hlt
adc
add
add
inc
mov
out
ja
lret
mov
aam
xor
lock
loop
dec
fs
push
inc
bound
shll
test
pop
xchg
sti
pop
mov
test
call
cmp
shlb
push
enter
jno
push
mov
ficoml
dec
jge
sahf
mov
mov
test
mov
insl
out
sub
daa
jg
imul
and
sti
cmpsl
imul
xchg
daa
cmp
inc
push
js
mov
sub
jle
mov
and
outsl
mov
aas
in
mov
xchg
loopne
mov
fadds
notl
insb
cld
mov
mov
cmp
pop
push
inc
cmp
lods
out
ds
fstpt
adc
jecxz
cmp
lret
imul
loop
mov
ss
xor
push
adc
xchg
loope
enter
mov
xchg
xor
fidivs
and
jnp
pushf
enter
rcll
push
mov
roll
add
cltd
mov
mov
pop
inc
mov
push
mov
sbb
fwait
sub
ret
pop
and
mov
imul
push
adc
push
cmp
aam
dec
cs
pop
addb
mov
lock
sub
in
ljmp
arpl
in
out
mov
mov
mov
xchg
scas
repnz
ret
out
shrb
fs
ja
sub
hlt
xchg
imul
lock
aas
mov
fnstsw
aam
adc
mov
pop
xor
insl
mov
sub
mov
imul
jne
fmul
outsb
push
xchg
sub
xor
repnz
lock
scas
in
lahf
and
cmpsb
idivl
pop
lea
and
fnstenv
mov
xchg
lods
pop
ret
out
je
xor
inc
and
inc
nop
cmp
add
add
loope
xor
insb
mov
negb
out
icebp
repz
out
jl
and
mov
cmp
in
rcll
cmp
jle
xchg
mov
dec
jp
gs
or
dec
insb
dec
sub
mov
jmp
je
lret
je
popf
xchg
dec
test
test
dec
add
push
dec
push
mov
sub
add
xlat
inc
cmp
scas
and
mov
rolb
xchg
flds
imul
sbb
and
dec
mov
push
leave
mov
mov
loope
cmp
mov
xchg
popf
jge
cmpb
push
cmp
jne
inc
pop
cwtl
sbb
xor
mov
out
inc
or
add
dec
ficoms
repz
and
insb
push
addr16
cmpsb
sbb
mov
fwait
pop
nop
popf
push
mov
cmpsb
sti
dec
xchg
xor
mov
gs
hlt
lret
mov
mov
dec
jns
ror
and
icebp
jo
loope
in
pushf
xor
sub
jnp
sbb
imulb
in
aad
push
jne
icebp
mov
bound
cmp
cmc
pop
icebp
cmc
pop
cmp
je
sub
test
fcoms
push
sahf
pop
cwtl
fdivs
inc
out
mov
aas
and
addr16
mov
rorl
push
fsub
daa
cmp
call
aas
mov
cmpl
add
jno
xor
addl
mov
jmp
loop
mov
cwtl
es
aad
stos
lahf
dec
or
subb
jbe
fwait
mov
imul
lcall
out
aas
cmp
jle
call
jl
add
adc
pop
mov
aaa
mov
dec
cld
push
test
or
iret
sub
push
jl
testb
sbb
xchg
imul
pop
adc
mov
fs
pusha
aaa
out
xor
in
lcall
and
in
add
pop
test
jl
mov
push
sub
mov
movsl
jge
and
or
inc
pop
fcmove
add
or
sbb
cld
in
dec
add
xor
xchg
adc
xor
xchg
push
cltd
hlt
fs
fwait
arpl
cmp
inc
push
out
inc
sub
ror
and
loope
sbbl
test
jecxz
lods
loope
mov
mov
adc
inc
stc
jns
mov
repnz
shll
push
mov
ret
sbb
jno
cmp
mov
mov
repz
jne
push
or
push
jmp
pop
sahf
xchg
ljmp
icebp
xchg
jno
adc
ret
adc
out
test
mov
negb
jg
and
jle
dec
call
cmp
inc
outsl
fwait
sub
lods
xchg
add
or
mov
sbb
outsl
call
inc
cmp
out
and
adc
aaa
fists
and
ret
push
xchg
and
dec
jnp
jno
adc
and
out
pop
push
mov
cmp
adc
inc
shlb
popf
adc
mov
or
popf
shl
xchg
push
mov
push
jl
clc
push
lea
mov
push
mov
js
dec
push
lea
outsb
or
jno
jl
and
or
jns
out
outsb
sbb
push
repnz
dec
pushf
mov
jmp
mov
ret
adc
jg
inc
and
jmp
cmpsl
repnz
cmpsl
xchg
outsb
fsts
jne
movsl
pop
sub
nop
push
out
fwait
out
loop
sahf
mov
xor
enter
clc
pop
mov
xor
xchg
ja
enter
gs
call
mov
sbb
mov
jmp
jns
cmp
push
mov
xor
mov
cmpsl
ljmp
push
icebp
dec
adc
dec
mov
popf
xchg
nop
pop
pop
jbe
dec
dec
mov
and
test
xor
jle
repz
sub
mov
iret
ret
leave
add
jb
mov
ljmp
cmp
xchg
sahf
into
ret
jecxz
jo
mov
jmp
or
push
add
cmpsb
lds
sahf
xor
stos
ss
add
push
xchg
xor
clc
or
out
lahf
xor
sbb
out
call
jge
mov
pop
lcall
out
lods
jnp
adc
test
int
das
jge
and
adc
mov
lahf
inc
arpl
or
xor
bound
push
jae
divl
addr16
std
mov
xchg
sub
pop
into
mov
inc
ret
fildll
cmp
outsl
mov
xchg
fwait
or
mov
dec
call
aad
pop
and
mov
mov
fbstp
out
test
mov
mov
pop
jae
sub
into
push
sub
or
xchg
loop
scas
mov
fadds
cmp
lahf
xor
mov
add
xchg
fnstcw
cmpsl
cwtl
lods
test
ljmp
pop
cld
aam
je
fwait
call
popa
shll
and
xchg
data16
xchg
push
les
add
xor
and
cmp
xchg
inc
xor
xchg
adc
cmpsb
lods
or
or
sbb
repnz
cmp
loope
loop
loop
push
mov
xor
and
out
xchg
aad
inc
xchg
aas
enter
popf
pop
push
dec
push
imul
sbb
out
lcall
sti
pop
lods
cld
mov
mov
xor
mov
movsl
into
dec
cld
orl
mov
xor
pusha
push
lock
lret
mov
adc
mov
mov
fisubl
rcr
daa
push
mov
lret
aas
iret
add
push
stos
cmp
jb
mov
cs
mov
divl
stc
inc
stos
call
addr16
mov
addl
subl
or
push
shlb
insb
das
add
push
sub
stos
pop
jbe
dec
lods
sub
xor
xchg
xchg
popfw
push
stos
insb
cmp
cmp
insb
scas
daa
aad
jle
jo
imul
lods
jae
repz
stos
cmp
push
clc
cmp
mov
out
mov
mov
sub
push
cmp
push
aad
mov
adc
jae
sbb
jns
cmp
ja
mov
ret
add
xchg
lret
mov
aam
xor
mov
insl
and
jb
imul
inc
mov
dec
push
stos
jbe
outsb
in
xchg
scas
test
mov
scas
test
jecxz
movsb
stc
stos
lods
ljmp
dec
loop
addr16
fwait
lods
ret
icebp
push
pop
repz
and
jno
lods
sub
in
dec
sbb
adc
imul
xchg
lods
scas
push
add
orl
daa
testb
mov
and
jne
shll
fnstsw
out
jo
dec
push
fistpl
xchg
pop
add
inc
jns
and
push
or
pop
add
and
add
mov
dec
mov
shr
push
ljmp
dec
or
push
pop
enter
imul
out
mov
add
and
pop
addr16
pop
out
mov
loopne
jnp
imul
ret
sbb
iret
jle
sbb
into
cmp
movsl
scas
and
pop
arpl
push
mov
sbb
cltd
pushf
ja
ljmp
bound
hlt
jbe
fistl
and
dec
cltd
fcmovbe
jp
cmc
in
insl
lcall
dec
outsl
loope
mov
cmp
sbb
ljmp
repnz
sbbb
lahf
stos
loopne
mov
lret
rorb
shrb
dec
imul
inc
lds
mov
add
data16
adc
pop
sub
mov
and
ss
adc
xchg
inc
fcoms
push
cmp
jo
or
push
fadd
jbe
push
xor
ficoml
lods
add
pop
adc
sarl
jg
hlt
out
cmovnp
aas
stc
dec
stc
inc
mov
sub
clc
xor
or
stos
add
in
inc
stos
pushf
jne
cmp
fimuls
imul
cmp
push
sub
push
jp
call
repnz
popf
xchg
shll
dec
jne
lods
fsubr
mov
scas
sbb
lock
int3
mov
test
sub
mov
icebp
xchg
mov
sbbb
jno
pop
inc
aaa
add
inc
jg
lahf
pop
and
ljmp
ret
xchg
sti
mov
pop
add
mov
pop
faddl
idiv
add
xchg
fsubrs
sub
xor
push
lahf
mov
ds
into
push
lret
cmc
mov
sti
enter
pop
movb
jo
adc
push
fbld
bound
sub
jg
loope
ror
pop
and
cmpsl
fistpl
mov
mov
mov
jl
js
pop
xor
pushf
leave
xchg
cmp
add
xor
pop
imul
dec
xchg
xor
jl
faddp
or
inc
imul
jo
sub
adc
jb
jb
sahf
mov
dec
lds
pushf
movsl
dec
ret
or
insl
mov
lcall
clc
xor
cmc
adc
dec
sbb
rcl
int3
mov
outsl
in
xor
mov
ror
cmpsl
jle
loope
add
sbb
adc
or
aam
inc
push
push
loope
aas
dec
xchg
das
dec
repz
sti
mov
jp
fsts
sahf
mov
in
mov
xlat
push
ffreep
dec
les
ror
shlb
pop
xor
mov
in
inc
mov
out
jne
test
sbb
popa
cmp
pop
repz
mov
push
adc
cmc
inc
shl
dec
add
sub
addb
xor
fs
inc
enter
push
call
scas
mov
sub
and
push
aam
inc
sarl
arpl
xchg
pop
stos
push
ss
aam
pop
xchg
inc
add
lcall
adc
cmp
sti
fcmovnb
gs
lahf
cs
mov
roll
mov
mov
out
stc
sbbl
and
dec
aas
add
addr16
mov
and
pop
and
mov
lds
test
cmpsb
lret
scas
loope
pop
popf
popa
sbb
jg
mov
cmpsl
test
fwait
xor
out
xor
push
frstor
enter
and
gs
pop
fs
pushf
jg
loope
mov
int
sbb
loop
or
add
rorl
sbb
mov
aad
movsb
pop
adc
fbstp
sbb
pop
pop
push
jmp
insb
add
inc
loope
popa
cmp
in
mov
addr16
pop
push
xor
mov
loope
and
sti
push
xchg
cltd
xor
mov
cli
ds
imul
mov
ljmp
fdivl
xchg
mov
mov
mov
pop
stos
sbb
mov
and
xchg
dec
pcmpeqb
popf
jnp
lea
jmp
inc
fldl
pop
jmp
mov
mov
mov
lahf
repz
jo
jl
mov
leave
pop
inc
inc
push
push
std
or
xor
xchg
mov
ss
jge
mov
adc
xor
mov
repnz
mov
cmp
mov
xor
aad
loop
scas
or
and
cmp
jg
and
out
shlb
dec
insl
cld
movsb
ret
xchg
dec
gs
rclb
clc
adc
sub
mov
insb
stc
scas
imul
movsl
cs
insb
or
pop
mov
jg
add
jge
pop
pop
mov
add
push
aas
push
push
sti
xor
aam
and
inc
fidivrs
test
inc
les
scas
incb
sarl
scas
ret
cmp
call
add
cmpsl
sbb
mov
pop
mov
jbe
dec
int3
int3
lret
je
push
cmpb
insb
cmp
ljmp
lret
jmp
ret
adc
add
push
adc
fwait
andl
and
js
sub
mov
or
mov
push
pop
cmp
jecxz
and
jb
jnp
je
jp
pop
jo
clc
rcrl
jl
fiaddl
divl
or
cmp
cmp
loopne
int3
and
pop
das
xor
xchg
aam
shl
insl
push
rcrl
adc
gs
dec
sbb
std
sbbl
popa
xor
or
and
jne
insl
xor
lcall
mov
xchg
pop
add
sbb
loope,pn
inc
mov
xchg
cmp
lods
and
pop
push
sbb
xchg
xchg
and
xchg
sahf
sub
icebp
cmp
mov
pop
xlat
sahf
pop
ds
inc
and
lret
shlb
imul
jne
mov
mov
or
lcall
leave
inc
jae
out
sub
push
dec
test
xchg
mov
xchg
lea
cmp
dec
pop
dec
mov
int3
testl
lods
sub
jp
xchg
xchg
mov
cmp
cmp
cmpsb
fs
jl
cmpsb
lahf
clc
hlt
mov
dec
xchg
ljmp
xor
insb
mov
icebp
push
movd
or
data16
insb
test
rcr
sub
mov
in
push
xor
leave
lcall
sbb
int3
add
mov
sbb
cmp
xchg
loop
xor
lock
pop
fistpl
and
inc
adc
lock
jle
cld
cmp
repz
nop
and
imul
fidivrs
xchg
in
mov
push
or
mov
lea
icebp
adcb
xchg
mov
jb
jp
cmc
fsubr
rorb
lds
fmul
sub
ficoms
push
mov
mov
adc
testl
aam
and
cmpsb
inc
add
repz
hlt
notl
pop
ljmp
xchg
cmp
xor
lds
mov
pop
clc
ds
sahf
cld
and
cmpsl
lock
fnsave
add
sahf
pop
cmpsl
inc
or
jle
jle
cmpsl
call
sahf
loopne
stos
mov
mov
mov
sbb
push
test
cmpl
mov
shl
inc
mov
fcom
dec
pop
in
sub
dec
mov
fwait
test
dec
les
sbb
add
and
movsb
and
add
dec
mov
ja
push
sbb
cmpb
and
ret
add
xchg
fs
fwait
sbbb
xor
mov
cmp
es
jb
xchg
clc
aas
ret
outsb
cli
lods
pop
ja
push
clc
aas
jmp
mov
pop
push
sbb
dec
in
lods
int
imul
mov
adc
push
add
inc
fmulp
sarl
lahf
popa
hlt
add
int
or
shlb
pop
test
cmpsl
shl
add
jae
lret
std
insb
shrb
fsubs
popf
mov
cmp
popf
popa
rorb
scas
and
mov
and
xchg
lds
or
pop
mov
or
xor
mov
cld
or
dec
arpl
dec
push
push
mov
test
jecxz
mov
xlat
push
loope
push
cltd
and
pusha
dec
lcall
add
pop
cmp
sbb
pop
push
inc
cld
in
inc
int3
push
call
je
mov
and
pop
adc
sti
xchg
cmc
cmpsl
pop
testb
ror
jo
mov
adc
pusha
xchg
sbb
fisubrs
js
test
sub
je
rclb
mov
push
mov
decb
xchg
and
popa
mov
sti
sbb
fs
arpl
push
pusha
scas
dec
fldl
rorb
addb
lahf
cmc
and
pop
cltd
dec
sarl
cli
xorl
out
in
rorl
push
std
js
push
daa
and
add
fcom
xor
lret
sti
rcrb
test
add
imul
adc
and
cmc
and
and
sbb
fistpll
call
inc
lea
mov
pop
dec
jecxz
and
mulb
repz
stc
imul
daa
rolb
insb
out
jp
sbb
mov
mov
or
aaa
pop
xor
jns
add
movsb
cmc
pop
repnz
jae
mov
add
icebp
xor
pop
sub
xchg
clc
les
orl
lcall
cmp
jle
test
push
fisubl
pop
loope
inc
jge
lcall
outsl
sti
fists
cs
adc
sbb
inc
inc
andb
jne
jno
fsubl
cmpsb
mov
test
int3
sbb
insl
dec
das
mov
into
cs
fdivr
jo
popa
or
push
mov
or
and
fsubp
jae
cwtl
mov
cmpl
ljmp
pop
insb
jmp
jbe
iret
mov
jb
and
in
jbe
jmp
in
pop
pop
sbbb
xor
aaa
jo
cmp
inc
pop
inc
sbb
arpl
pusha
pushf
bound
jns
inc
push
sbb
inc
mov
jge
push
ss
xor
icebp
pushf
lcall
push
xlat
mov
lock
pop
add
das
ficoml
out
fbld
mov
sahf
fnstsw
jecxz
xchg
cmp
pop
das
sti
xchg
xchg
jnp
in
sti
aas
pop
sbbl
add
mov
dec
mov
data16
push
leave
sub
mov
dec
cmp
mov
aaa
les
xchg
xchg
or
mov
mov
iret
xor
insb
dec
add
mov
repz
pushf
or
insl
xorl
aas
fdivrl
lea
leave
je
arpl
push
mov
jle
mov
mov
aam
push
outsb
ret
mov
leave
inc
test
mov
ret
jg
adc
repnz
mov
jl
stc
jmp
dec
lcall
stos
jge
cltd
xor
rorl
add
loope
cmp
fadd
mov
mov
loope
stc
pusha
mov
pop
out
pusha
dec
dec
add
xchg
lcall
jbe
pusha
inc
xlat
gs
add
xchg
lcall
xchg
xor
push
mov
aas
adc
add
jmp
sbb
pushl
pop
leavew
pop
test
push
out
stos
fmull
outsl
and
jns
nop
sbb
ja
adcl
les
fnstcw
mov
adc
pop
jmp
outsb
xlat
and
mov
mov
jo,pt
add
inc
jge
test
cmp
pop
mov
dec
js
lahf
insb
and
cmpl
sbb
fnstsw
sub
shl
addl
fsubrs
xchg
or
inc
stos
or
xchg
arpl
or
mov
cmp
cmp
int
push
pop
sub
enter
stos
or
sti
lods
pop
mov
xor
jo
push
sub
sub
jo
add
aas
and
aaa
testb
add
lds
adc
gs
fs
fdivl
inc
pop
mov
and
add
fbstp
inc
clc
and
data16
cld
jmp
ficoml
or
push
jg
cltd
adc
jge
dec
es
pop
cld
sbb
pop
sub
xchg
mov
scas
cltd
jns
add
sub
aaa
fistps
jmp
push
sub
cmp
inc
fbld
inc
lock
pop
or
test
ljmp
mov
lods
cmp
push
push
cltd
notb
out
add
mov
sub
fiaddl
mov
and
clc
jl
fisttpl
sti
leave
fimuls
cmp
cld
aam
add
pop
mov
nop
mov
xchg
push
and
xor
lret
sarl
adc
movsl
xor
ja
cmp
jo
iret
push
sub
inc
inc
mov
adc
sbb
and
repnz
sbb
mov
das
sti
push
popf
mov
fcoms
adc
dec
xchg
cmp
mov
ss
push
xchg
out
push
fwait
and
sbb
cmp
les
mov
int3
fidivl
jmp
sbb
inc
inc
adc
fwait
ds
cltd
dec
push
xchg
jbe
lods
xchg
mov
jmp
test
xor
stc
sbb
fadds
fisubrl
cmp
lds
and
mov
stos
push
cmp
add
sti
and
mov
push
out
sbb
jle
dec
xchg
push
push
xchg
dec
push
sbb
sub
jp
pop
and
jnp
outsl
xlat
adc
insl
hlt
std
cmc
mov
dec
dec
sbb
mov
push
sub
jno
xchg
inc
das
jmp
sub
xchg
mov
xchg
mov
or
arpl
add
dec
mov
cmp
adc
jae
xor
cmp
icebp
adc
jmp
or
shll
addr16
mov
shl
dec
mov
sub
jns
xchg
dec
add
imul
or
jno
jge
imul
je
movsl
fs
pop
cmpsb
add
aad
sub
push
fcmove
dec
sub
hlt
lahf
push
lea
lea
sbb
mov
inc
push
cld
push
mov
pusha
cli
push
out
jle
mov
lods
lahf
repz
mov
data16
cmp
shr
in
pop
leave
xchg
jne
jnp
ja
jo
sbb
in
into
push
inc
push
hlt
add
popf
repnz
enter
jnp
popa
cmc
cmp
push
icebp
adc
pop
mov
sbb
pop
imulb
mov
sbb
sbb
mov
insb
xchg
or
or
jmp
jb
xor
mov
mov
hlt
rcr
test
fcompl
insl
xor
adc
cmp
fwait
out
rolb
jecxz
add
push
aam
inc
mov
jnp
sarb
mov
test
jg
sahf
insb
rolb
ret
outsl
push
and
sbb
mov
aad
int3
xchg
xor
daa
pop
mov
and
push
or
insl
pop
xorb
mov
pop
jb
inc
aaa
sub
mov
dec
nop
mov
stos
fdecstp
ja
rol
pop
repz
filds
jns
test
mov
bound
sbb
sbb
outsb
stc
loop
push
imull
or
cld
daa
mov
scas
insl
ss
and
xchg
or
out
filds
push
ss
pop
dec
adc
movsb
aas
scas
and
and
cmp
cmp
cwtl
jno
inc
mov
mov
dec
cli
sti
test
out
pop
in
cs
cmpsl
add
ljmp
sub
js
out
push
push
pusha
pop
inc
sbb
data16
and
imulb
gs
divl
shlb
fbld
sub
sbb
inc
xchg
pop
jmp
adc
or
pop
jmp
and
inc
loop
add
insl
jns
rcr
jo
addr16
jo
test
cld
dec
jecxz
push
sbb
xchg
dec
cmpl
cltd
outsb
inc
fiaddl
and
adc
in
xor
ljmp
insl
ds
add
dec
add
roll
ja
stos
push
fiadds
sbb
jnp
stos
mov
stos
popa
mov
sbb
out
in
cmp
push
imul
sbb
pop
pop
ret
push
push
sub
xor
push
std
inc
jne
cmc
xor
mov
in
jmp
shrb
scas
or
push
mov
data16
or
mov
insb
popa
and
test
push
jmp
xlat
or
lret
mov
mov
mov
loope,pn
adc
mov
data16
add
pop
push
stos
xor
insb
into
cmpsb
xchg
jbe
jge
mulw
sub
sbb
and
pushf
cmp
daa
adc
jmp
loop
pop
jmp
wbinvd
addr16
iret
je
mov
xor
in
idivl
aas
adc
cwtl
scas
mov
addr16
outsb
lret
out
or
inc
cmp
mov
push
rcl
pop
mov
lahf
popa
mov
mov
insb
mov
and
mov
aas
cwtl
jp
test
fistpl
loope
pop
divb
pusha
repnz
and
mov
sub
int
mov
pushf
test
sbbl
or
xchg
sub
jg
sarl
mov
fldl
cmpsb
aaa
data16
idivb
mov
xchg
and
shrb
push
pop
add
out
fstps
mov
sbb
ret
test
sti
repz
sahf
adc
push
xor
lods
gs
sbb
lret
outsl
lea
sti
cwtl
cmp
pushf
xchg
shl
push
adc
and
sub
add
mov
daa
dec
clc
call
lcall
xlat
divb
push
sub
mov
ret
sub
or
subb
arpl
push
mov
push
addr16
insl
imul
inc
xchg
ss
mov
mov
pop
pop
call
mov
cmp
lds
push
out
mov
xchg
icebp
mov
sahf
nop
pop
mov
xor
gs
push
inc
pop
rorb
push
arpl
jecxz
rcl
jle
sti
jl
pop
jle
cmp
cltd
inc
imul
insb
sub
shrb
lods
daa
sbb
aam
cld
out
mov
adc
bound
in
ss
cmp
or
sar
jecxz
push
aaa
push
mov
cmpsl
sub
mov
jge
mov
aam
popl
call
inc
push
in
jl
push
std
in
daa
ja
mov
jg
xor
sbb
sbb
sbb
loopne
fdivrp
mov
movsl
lods
mov
cmp
pop
or
xchg
or
loope
jno
dec
int
mov
jge
adc
test
mov
mov
getsec
and
loopne
popf
nop
dec
movsb
cmp
arpl
add
xor
adc
sbbl
xchg
sbb
std
lcall
push
cmp
je
mov
mov
sub
and
out
lret
sub
sbb
jl
lcall
es
leave
add
xchg
out
lods
adc
fldenv
jmp
fstpl
pop
incb
data16
mov
mov
nop
in
dec
movsb
push
mov
xor
movsb
fs
das
sub
push
or
lea
scas
mov
jp
stos
mov
icebp
loop
mov
cmp
cmc
dec
addr16
xor
je
sub
sbb
dec
sub
das
lock
mov
jle
xchg
push
jl
or
dec
test
int
clc
sub
mov
cmpsb
sbb
mov
cmp
sub
push
sarl
mov
scas
lea
sbb
insl
jbe
mov
idiv
enter
jne
xor
lahf
and
addr16
jae
jge
xor
xor
test
lcall
fwait
inc
je
add
lahf
roll
dec
mov
sbb
sbb
or
rcll
cmpsl
dec
mov
mov
out
loopne
sub
iret
out
into
xlat
dec
nop
mov
lahf
sbb
and
in
cmp
imul
lock
loop
daa
jnp
push
inc
mov
cmpsb
mov
cmp
add
sbb
sbb
jp
mov
jne
inc
in
jns
xlat
mov
jmp
loopne
cmpsl
push
pop
mov
push
dec
cwtl
and
pusha
pop
mull
repz
fwait
adc
aas
add
mov
ficompl
loop
adc
flds
cwtl
repnz
mov
clc
pushl
leave
jecxz
mov
mov
test
pushf
xchg
cmp
inc
rcrb
dec
xchg
cmp
mul
xor
mov
sbb
push
data16
dec
adc
pop
adc
js
in
sub
loop
out
imul
push
jmp
xor
stc
xor
xor
out
mov
addb
dec
adc
lret
xor
ss
cmp
push
mov
xchg
mov
aam
addr16
pop
push
pop
cmp
scas
pop
enter
mov
loop
addr16
mov
xchg
xor
mov
jl
sub
mov
inc
in
les
into
dec
call
aad
popa
xlat
adc
push
in
pop
aaa
das
xor
test
iret
adc
jmp
in
insb
lcall
xchg
sbb
push
rcll
xor
pushf
jb
inc
and
sahf
stos
inc
inc
fcmovu
popf
outsb
aam
cli
jne
pop
daa
out
div
adc
and
or
ds
ret
iret
pop
repnz
mov
inc
jbe
mov
jno
dec
sub
push
cmpsl
scas
sbb
mov
fists
cwtl
xchg
movsb
popf
push
cwtl
mov
inc
ds
adc
xor
andl
xor
xor
out
push
pop
inc
pop
cwtl
aam
fnstsw
push
mov
push
xchg
cmpsl
lahf
push
shll
das
push
mov
mov
sahf
push
mov
xchg
das
mov
pop
push
mov
shl
push
jnp
jmp
pop
dec
mov
dec
mov
loop
xor
mov
out
pop
xchg
rcll
ret
inc
cmpsl
aad
push
sub
push
or
test
mov
mov
aaa
pop
sub
adc
cmp
cmpsl
and
and
imul
sbb
jne
in
add
test
sub
mov
inc
mov
mov
enter
cld
adc
fnstenv
cli
or
adc
dec
pop
test
imull
xor
pop
cmp
jmp
cmp
mov
into
fwait
loop
mov
inc
shll
dec
clc
mov
lds
add
and
vpshuflw
jbe
cmp
or
dec
sbb
jmp
dec
or
out
mov
in
pop
inc
or
add
int3
jecxz
jg
orl
ja
fwait
jle
jmp
insl
inc
pop
outsb
mov
mov
push
rorb
mov
mov
cmc
add
loop
mov
xorl
icebp
sarb
fcmove
test
ljmp
or
repnz
bound
or
out
mov
or
mov
push
outsb
mov
dec
outsl
xor
push
add
movsl
add
add
into
sbb
mov
bnd
cmpsb
subb
cli
ds
xchg
jns
data16
xchg
pavgb
inc
jecxz
cmc
or
test
mov
or
stc
jecxz
mov
jmp
in
sbb
popf
lcall
mov
inc
lar
or
and
shl
inc
outsb
or
addr16
jge
mov
xchg
inc
aad
fcmove
xor
loop
es
int3
addr16
sahf
xchg
in
gs
rcrb
mov
mov
lods
test
scas
xchg
sbb
ret
push
out
mov
jb
aad
cltd
mov
enter
jl
adc
mov
and
clc
pop
jp
fdivrl
lock
cld
punpcklwd
jmp
mov
loope
jnp
ds
aam
call
mov
jmp
adc
addr16
xchg
das
push
mov
inc
adc
push
sub
ficomps
or
jle,pt
popl
jo
sbb
imul
mov
pusha
lahf
repz
cmp
or
aaa
lods
cs
and
sbb
or
cli
mov
and
jo
push
das
mov
mov
xchg
ret
jge
fimull
inc
lock
movb
pop
dec
cmp
or
aad
xorb
repnz
aaa
mov
daa
sbb
aam
hlt
cmp
jnp
inc
cmp
fwait
jns
inc
mov
lods
iret
push
sub
mov
xchg
inc
push
pop
stc
mov
push
aaa
fcomps
adc
jnp
ja
test
popa
outsb
orl
sub
cmp
xor
push
xchg
ffreep
push
mov
scas
jns
int3
out
mov
pusha
and
and
mov
add
fcoms
shll
or
push
and
xor
and
aam
inc
sbb
movsb
ficoms
mov
jp
lock
lea
fisubl
out
inc
lea
aas
negl
sti
push
mov
jb
jo
adc
sub
and
aaa
das
push
jge
ja
add
sahf
pushl
push
inc
mov
add
test
in
mov
rcrl
les
sbb
sbb
ret
or
jp
mov
sbb
loopne
test
add
dec
stc
adc
pop
and
dec
repz
inc
dec
pop
inc
jge
ds
sbb
rcr
inc
imul
xor
stos
xlat
test
or
xor
je
sbb
rcr
push
sbb
es
dec
lret
test
add
in
or
jg
cld
cmc
jl
adc
sub
xchg
dec
rep
inc
mov
jmp
xchg
sbb
dec
mov
roll
mov
pop
sub
test
mov
popf
loope
sahf
xchg
mov
xor
jbe
sbb
adc
pop
cmp
mov
rcrb
cmc
fmull
sub
push
mov
mov
aas
fisubl
ljmp
mov
fs
enter
or
enter
in
in
pop
insb
aas
mov
sbb
pop
out
in
xor
aas
xor
adc
lret
sti
cmp
pop
mov
lea
rclb
lahf
xchg
sub
pop
fnsave
add
push
xlat
or
jp
out
cltd
ret
rclb
sarl
and
push
add
sbb
jae
jnp
dec
push
jl
cmc
jmp
sbb
test
repz
or
aas
icebp
cmp
aam
or
movsl
xchg
inc
icebp
fnop
sub
cli
arpl
add
es
mov
cltd
or
fstl
in
inc
fsubl
imul
push
pushf
adc
sti
hlt
cwtl
inc
mov
pop
dec
cmc
je
pushf
insl
pop
sbb
ror
add
mov
aam
jns
pushf
mov
mov
test
push
dec
sbb
lock
mov
or
sbb
in
or
fadds
sti
add
jae
cmp
lcall
std
jae
sub
lahf
scas
ficoml
pop
ffreep
repz
pop
aad
lahf
sarb
in
sbb
das
fs
outsl
leave
sahf
push
push
push
subps
nop
inc
repz
into
cltd
jb
pop
testl
xchg
sub
aad
jo
lret
fdiv
out
jo
mov
adc
or
mov
mov
mov
iret
jae
stos
lock
sbb
in
mov
jge
sbb
loop
popf
test
add
rorb
push
std
roll
mov
das
push
in
sbbl
stc
sub
jmp
mov
arpl
push
pop
xor
mov
mov
cmp
jl
mov
popa
adc
adc
into
fistl
pop
ret
rorl
pop
test
pushl
sbb
cltd
push
or
pop
sub
add
popf
pop
dec
mov
jecxz
inc
jo
rol
movsl
aam
or
push
in
mov
push
sbb
mov
jo
clc
es
ds
and
push
adc
or
push
and
mov
fldt
push
mov
nop
jg
mov
push
jo
aaa
push
xlat
lret
loope
jl
rcrl
sti
sbb
inc
in
aas
mov
pusha
stc
popf
inc
daa
adcl
jne
xchg
cmpsb
xchg
int
mov
test
dec
bound
mov
push
mov
mov
in
dec
int
cs
pop
sarb
shrl
data16
sub
nop
sbb
adc
dec
xor
push
pop
outsb
popl
cmc
sbbl
cli
push
lods
cli
mov
hlt
cmp
pushf
mov
rorb
pcmpgtw
sub
jbe,pt
sbb
arpl
out
adc
js
nop
dec
test
arpl
cld
sahf
jb
hlt
push
sarb
popa
stc
jmp
movsl
mov
pop
or
sarb
int
xor
ljmp
cs
fwait
jae
sbb
xchg
or
shrl
gs
aas
inc
jnp
mov
mov
cli
xor
out
dec
pop
mov
cmp
cld
aad
fnsave
jecxz
lds
lods
mov
xchg
fcmovu
jo
mov
jb
lret
mov
cli
cmpsb
and
jp
js
fucomi
pop
filds
xorl
fisubs
jnp
pop
push
pop
fnstsw
jmp
inc
sbb
jmp
cld
movnti
and
xor
aaa
dec
in
mov
mov
add
add
dec
loopne
sub
jae
je
ret
add
lret
cmp
mov
inc
sbb
cmp
or
mov
dec
mov
test
xchg
dec
jecxz
adc
scas
inc
sub
pop
jle
bound
dec
aaa
das
push
mov
jne
or
pushf
inc
inc
es
fcmove
aaa
cmp
adc
xchg
lods
or
jp
xchg
cmc
mov
cld
es
daa
add
into
adc
or
pop
pushf
or
cmp
sbb
mov
outsl
cmpsl
adc
pushf
fdivl
cltd
mov
xor
xlat
out
repnz
inc
adc
loopne
cs
xchg
xchg
dec
push
jecxz
movsb
ja
fwait
jns
ss
pop
adc
dec
out
fucomi
xchg
mov
and
cmpl
or
mov
jne
pop
cli
jno
and
and
subb
es
cli
lret
mov
movsb
out
jge
dec
orb
flds
push
cmp
pop
jmp
xor
jb
lcall
ficompl
sbb
mov
mov
xchg
sar
clc
pop
jo
push
cmpl
iret
icebp
mov
aam
push
dec
shl
pslld
sbb
inc
dec
adc
cmpl
and
jo
inc
xchg
mov
jle
pop
into
xchg
dec
loope
loopne
leave
inc
push
call
mov
mov
mov
mov
fcmovnbe
stos
out
arpl
into
mov
icebp
jp
mov
cmp
xchg
ret
sahf
popa
out
push
int
int3
jo
adc
aad
int
aaa
pop
repz
or
xchg
mov
test
pop
insb
pop
push
int
imul
aaa
adc
xchg
repnz
or
subl
pop
or
mov
sub
cwtl
loopne
ret
shll
dec
mov
dec
fs
xlat
inc
clc
loope
fiadds
iret
dec
loope
mov
mov
mov
rcll
andl
cmc
xchg
sub
add
imul
mov
sti
mov
add
pop
cmp
adcb
mov
lea
mov
mov
mov
stos
out
mov
mov
or
rcrb
pusha
and
and
or
mov
fldt
push
js
add
icebp
cmp
xor
pop
sub
lahf
sti
movsl
jae
ret
adc
sti
js
iret
pop
inc
or
out
xchg
dec
xor
push
sahf
xchg
pop
popa
cmp
jle
mov
push
sahf
xor
lea
call
shll
or
hlt
dec
add
or
cwtl
aaa
lods
jb
mov
mov
push
cmp
add
loopne
push
pop
jecxz
popa
mov
xor
fsubrl
js
sbb
xchg
aam
xchg
std
sub
push
fwait
mov
xchg
jb
jl
pop
push
mov
or
jns
and
sbb
xchg
pusha
int
push
mov
or
dec
ret
mov
std
in
aas
mov
mov
popf
mov
in
fisubs
pop
jp
pop
cmpsl
cmp
sbb
sub
repz
dec
loopne
mov
fistl
repz
aaa
mov
pop
mov
cli
push
aam
xchg
test
jp
cld
mov
sub
ss
sbb
in
xchg
mov
xchg
imul
cmc
shrl
mov
jnp
push
pop
outsb
pop
jno
adc
add
push
cmp
cwtl
scas
scas
stc
pushf
cmp
add
aaa
sub
dec
lret
and
mov
mov
add
add
or
pop
xchg
dec
xchg
lds
sbb
push
mov
jmp
pop
cmp
leave
dec
xchg
xor
or
inc
and
sbb
push
iret
fistpl
sahf
pop
aaa
pop
push
cli
sbb
xor
cs
xor
imulb
imulb
pop
dec
mov
imul
sbb
xor
jo
mov
xchg
push
sti
les
jp
xchg
out
movsb
adc
jmp
outsb
lret
pop
sbb
pop
pop
insb
inc
sahf
mov
stc
inc
arpl
mov
pop
shlb
mov
nop
or
stos
clc
cmp
mov
fbstp
sbb
mov
xor
rcrb
jmp
pop
pop
clts
aam
add
dec
push
sub
pusha
and
out
or
sub
xchg
rcll
jmp
jmp
fs
mov
pop
in
out
femms
in
xchg
clc
cmp
mov
lods
loop
inc
loopne
cld
and
and
fwait
adc
shr
jl
jnp
mov
mov
arpl
xchg
out
aad
push
stos
pop
mov
push
cmp
fnstsw
dec
adc
dec
adc
push
movsl
cmc
push
xchg
jnp
ss
data16
xor
loope
js
and
flds
and
cmpsl
or
int
mov
jns
or
fsubrl
nop
xchg
push
jo
jp
lds
mov
repz
jo
jbe
and
int3
and
das
sub
mov
sub
inc
pop
idivl
lods
pop
cmpsl
cvttps2pi
mov
out
sbb
sub
cmc
lds
jl
mov
idivl
cmp
aaa
inc
loopne
jl
insl
in
dec
adc
and
es
inc
adc
push
mov
mov
mov
shlb
jae
jle
inc
push
and
mov
gs
faddl
mov
fcomi
xlat
xchg
cltd
aas
data16
inc
pushf
out
shll
dec
into
and
push
cli
xchg
sub
inc
mov
movsb
insl
js
pop
mov
pop
nop
cmp
jbe
dec
test
ret
pop
sahf
xor
clc
mov
cmp
in
js
pop
stos
fwait
xlat
add
xor
dec
test
fs
adc
pusha
push
aas
jle
sub
imul
sub
jb
inc
pop
pop
xchg
ficompl
fnstsw
jnp
call
mov
enter
xchg
xchg
nop
push
jmp
sbb
lret
pop
ss
push
pop
xchg
fs
orl
loop
fsts
rclb
sbb
mov
xlat
fbstp
out
jl
jg
pop
and
sbb
or
jmp
jno
lret
jle
push
inc
inc
jg
mov
xchg
iret
jb
add
enter
pop
cmp
bound
mov
and
cmc
mov
xor
not
lds
jecxz
cmp
and
stos
das
out
insl
cli
adc
pop
insl
xor
adc
lods
sbb
mov
lcall
mov
in
loop
cmp
movsl
jl
shrl
push
loop
subb
dec
mov
and
jecxz
mov
xchg
push
xchg
push
xchg
ljmp
rcl
cltd
pop
aaa
cmp
sbb
test
add
pop
incb
std
adc
lock
push
data16
add
cltd
es
push
and
cli
add
shlb
xchg
jne
jno
mov
in
test
sub
ret
pop
adc
inc
cmpsb
not
adc
xor
enter
dec
jmp
div
ds
arpl
and
idiv
filds
or
cwtl
inc
leave
inc
lcall
ja
scas
pop
jbe,pt
sbb
push
mov
push
jl
pop
imul
cmp
xor
pop
jnp
repnz
jl
jecxz
call
mov
mov
jne
jp
ds
stos
adc
dec
xor
lock
mov
jns
xchg
in
add
or
or
pushf
ds
sbb
push
lret
cmp
punpckldq
adc
fsts
adc
addr16
pop
sbb
and
sbb
lds
gs
fdivrs
leave
loope
adc
xchg
ds
cmp
hlt
xchg
loope
adc
fwait
jmp
jnp
lea
lds
push
xchg
mov
xchg
sbb
aas
add
popa
xchg
jns
xor
clc
repnz
enter
mov
and
jge
xchg
mov
mov
lahf
out
popa
ja
leave
jp
push
iret
iret
repz
mov
pop
loope
dec
ja
lcall
bound
outsl
jbe
inc
mov
sub
ss
rcrb
jg
xchg
cld
shl
mov
inc
aam
lds
cmpsl
rclb
or
les
ret
fdivrp
mov
cmp
adc
je
add
leave
call
sub
imul
fucomi
sub
jns
gs
test
pop
shl
inc
and
pop
js
sbb
adc
xor
mov
leave
mov
std
xchg
xor
jl
sbb
mov
push
mov
dec
or
xor
popf
lock
out
mov
mov
movsb
jge
sbb
mov
inc
repnz
push
ret
mov
ret
repnz
scas
out
fistpl
aas
sti
cltd
pusha
mov
inc
scas
push
ljmp
aaa
mov
inc
mov
push
cld
test
xchg
fsubs
jg
xchg
insl
call
jp
mov
cmpsb
mov
sbb
mov
pop
in
and
data16
mov
xor
and
jae
pop
inc
loope
in
divb
fwait
pop
inc
rclb
xor
pop
popf
sub
add
push
cmp
sub
mov
mov
xor
push
aad
dec
xor
mov
or
aad
hlt
out
sbb
aad
jb
and
push
and
fbld
mov
or
or
addr16
sbb
mov
xor
cwtl
mov
sahf
mov
mov
popl
test
cli
ret
imul
push
fidivs
loope
icebp
js
mov
sbb
and
hlt
jne
mov
push
mov
jnp
pop
pop
mov
mov
pop
outsb
cltd
out
pushf
fucomp
les
xchg
movsl
fsubs
stc
es
or
ja
dec
xchg
cmp
ror
mov
cs
pop
loop
aaa
mov
idivl
fdivrl
xchg
sbb
mov
movsl
in
outsb
sbb
cmpsb
cmc
es
mov
adc
pushf
ja
mov
and
sbb
sub
cmpsl
outsb
or
fs
vpackssdw
pop
mov
push
out
int3
es
cli
inc
mov
jge
in
mov
push
shr
pop
das
cmpsb
jg
and
xor
cmp
xorb
sub
push
scas
int3
sahf
test
xchg
fdivrl
push
sahf
pop
sbb
cmc
jmp
insb
loope
xchg
dec
mov
flds
sbb
add
lahf
sbb
or
cmp
outsb
jg
iret
repz
xchg
jp
sub
inc
mov
inc
fwait
pop
pop
repz
jge
std
aam
mov
les
int
jns
or
adc
sub
mov
inc
sahf
ret
push
dec
das
jns
test
xor
and
xor
mov
andb
mov
mov
cld
add
jns
xor
xorl
loope
xchg
lret
stos
cmp
negl
cmp
sub
fcmovbe
xchg
push
jg
sbb
out
dec
sbb
mov
and
gs
mov
imul
mov
xchg
imul
jbe
jl
lods
test
dec
in
mov
cmp
mov
out
mov
mov
neg
pop
mov
repz
sub
jns
addr16
int
jecxz
pop
inc
adc
das
addb
xchg
or
mov
xor
jmpw
and
sbb
or
scas
sub
jb
pop
and
jb
cmp
mov
outsb
xor
test
fsubrl
outsl
cmp
aad
loope
dec
cmp
loop
filds
lea
fcmovnb
inc
sarl
jbe
push
pop
mov
or
insb
mov
fcomps
addr16
sti
sbb
sbb
xor
push
and
scas
lcall
in
or
and
xlat
jo
cs
sbb
adc
popa
mov
push
and
push
dec
sub
ret
jp
mov
je
call
fists
popf
or
std
bound
ss
fsts
inc
ret
or
sub
lahf
add
lods
gs
stc
xchg
stos
cwtl
push
push
ljmp
std
call
inc
loope
faddl
bound
push
pop
stc
out
mov
sbb
mov
sahf
imul
xor
adc
lock
dec
dec
push
sub
scas
hlt
daa
push
xor
mov
out
js
push
or
ja
mov
cmp
hlt
mov
pop
push
inc
sbb
movsb
les
sbb
in
outsb
and
stos
ss
push
scas
jp
mov
sti
int
add
push
rcll
push
cmc
inc
test
xor
xor
out
mov
pop
push
mov
xor
outsl
sbb
mov
loopne
ja
add
cltd
cltd
fcoms
push
push
fsubs
jl
push
and
pusha
andb
adc
lea
cmc
sub
mov
push
sbb
adc
dec
cmp
insl
jp
mov
inc
sahf
jnp
and
pop
mov
adc
xor
adc
xlat
mov
cltd
add
nop
jecxz
loopne
iret
cmp
ljmp
and
loop
js
mov
mov
mov
xchg
or
leave
addl
xchg
push
add
out
push
das
mov
jl
push
fcompl
clc
lds
pop
repz
aaa
les
pusha
xor
inc
lahf
or
stos
lods
shrb
stc
in
pushf
dec
or
mov
pop
inc
xchg
dec
mov
sbb
jle
mov
ja
enter
lret
mov
in
ficoml
popa
stc
inc
push
push
xchg
pop
mov
sub
xchg
test
pop
je
mov
call
pushf
out
sbb
pusha
xchg
dec
fldl
fsubl
rcll
push
mov
cmpsl
push
and
xchg
xchg
adc
push
jp
mov
out
lcall
sub
jp
adc
pop
das
xor
dec
pop
insb
loopne
adc
xchg
das
movsl
sub
cmp
je
lret
jne
xchg
in
andl
or
push
xor
jne
mov
cmove
pop
pusha
test
jnp
out
loopne
push
scas
dec
inc
nop
rcrl
scas
call
ja
pop
sub
push
cmp
repz
adc
pop
pop
sti
cli
cmp
dec
mov
mov
adc
xchg
hlt
xor
sbb
inc
inc
test
xor
out
dec
mov
insl
out
xchg
sbb
push
adc
jg
jg
aam
cmpsl
subl
inc
inc
lcall
jnp
sub
cmp
popf
pusha
cmpsb
dec
pop
xchg
iret
pop
into
sub
js
sbb
popf
jae
sbb
ss
jmp
stos
je
scas
in
dec
push
mov
xlat
push
xchg
cmp
cli
ret
cmp
xor
ret
adc
mov
cmpsb
add
push
repnz
xor
cmp
or
leave
cltd
fs
mov
fsubrl
xlat
testb
jge
enter
hlt
sbb
dec
xchg
imul
aad
jg
xor
pop
loop
and
pop
add
stos
arpl
fwait
jne
rclb
int
psrlq
jp
ds
push
jo
data16
mov
shrb
pop
cmp
pop
jae
arpl
jbe
mov
pop
iret
xor
testl
stc
sub
xchg
mov
fistpl
jl
push
sub
shlb
fucom
inc
xor
les
dec
mov
sbb
stc
xor
imul
add
out
sub
or
add
pushf
stos
lret
insb
lret
push
mov
pop
add
iret
cld
sub
jecxz
sbb
lahf
fisttps
dec
fisubrl
jne
jp
push
push
xor
in
outsb
mov
imul
ret
call
test
lods
jns
lcall
xchg
clc
jne
and
push
out
in
lret
push
sbb
jge
enter
sbb
mov
dec
xchg
or
mov
dec
fdivrs
into
scas
idivl
gs
bound
in
lds
out
lods
icebp
movl
loopne
xchg
rorl
and
jecxz
dec
aas
movb
mov
int
add
aas
lret
ss
cmpsb
sbb
inc
ret
scas
mov
daa
loop
imul
lahf
xchg
mov
pop
test
movsl
jl
outsl
fcoms
or
or
imul
arpl
add
pop
mov
mov
jnp
ret
xchg
sbb
mov
bound
xchg
je
loope
cmpsl
insl
ljmp
adc
pop
mov
icebp
leave
or
loopne
in
das
cmc
mov
cmp
adc
mov
data16
nop
pop
pop
push
push
push
aaa
lods
popa
xor
xchg
int
lcall
mov
lret
leave
jbe
inc
loope
pop
jl
into
lret
test
movsb
push
mov
push
mov
push
push
int3
test
ror
ja
insl
sahf
push
inc
sbb
mov
loope
xchg
bound
xor
leave
pop
xrelease
pop
test
arpl
movsl
bound
sub
aad
daa
sbb
in
adc
pusha
jg
add
and
repnz
push
mov
add
daa
lods
clc
pop
in
push
addr16
orps
sub
jno
and
cs
lea
fisubrl
xor
cmp
ds
pop
imul
scas
outsb
cli
inc
push
cltd
push
ret
xor
mov
fdiv
xor
push
lcall
mov
nop
pop
jle
jbe
pop
cmovb
stos
xor
sub
pop
js
jb
push
roll
loop
add
rorl
mov
shrl
repnz
push
sbb
jo
cmp
pop
sub
xchg
xor
test
cmp
mov
jo
pop
mov
repz
mov
ret
add
xor
push
or
mov
mov
sbb
xor
data16
adc
aaa
pop
icebp
mov
mov
lea
and
mov
jl,pn
movsl
jp
mov
dec
push
fisttps
cmp
adc
push
jle
cmpb
jecxz
cmpsb
add
in
mov
push
adc
inc
pop
rolb
adc
call
jge
outsb
rcrl
outsb
cli
add
mov
test
loopne
xchg
pop
xchg
push
shrl
or
push
jg
adc
jae
cmp
mov
lock
pop
mov
mov
fwait
adc
pop
cltd
add
imul
mov
in
or
pop
scas
daa
cmpsb
imul
jnp
or
add
cmp
mov
xchg
fisubl
mov
aas
insb
mov
sbb
rcll
or
adc
adc
cmc
jmp
mov
call
add
sti
mov
test
jmp
jo
dec
push
dec
and
mov
mov
addr16
fsubrs
inc
aam
pop
adc
ss
lcall
testl
mov
iret
out
in
sbb
inc
adc
aam
sbb
xchg
lahf
fstl
sahf
shl
jae
sub
push
loope
dec
aam
popf
arpl
add
adc
sahf
adc
cmp
sbb
jb
mov
mov
or
lahf
mov
or
lahf
pop
fcom
out
cli
add
in
pop
cmp
mov
js
lret
iret
or
cmp
sbb
push
lea
sbb
sti
mov
mull
in
sbb
mov
dec
cmp
sbb
stos
iret
mov
add
sub
adc
icebp
stos
mov
scas
dec
push
sahf
mov
js
sub
test
outsb
push
add
subb
jl
or
xchg
dec
mov
mov
outsb
cmc
in
sbb
pop
lret
lds
movsl
xchg
jge
shll
or
push
shr
out
push
adc
add
rorl
mov
mov
cmp
movsl
sahf
dec
jp
sbb
push
mov
call
imul
jne
in
mov
cmpsl
jmp
mov
push
bound
cmp
sub
notb
lods
stc
push
test
push
cli
ljmp
scas
and
insl
in
lods
sub
or
adc
out
mul
in
and
je
cs
inc
inc
loopne
xor
out
jl
mov
jmp
mov
mov
mov
sarl
les
std
jp
sub
pop
mov
and
cmc
mov
jae
dec
or
mov
xor
dec
scas
or
xchg
cs
mov
sub
jp
sahf
mov
push
dec
inc
and
adc
negb
icebp
dec
lea
daa
lcall
rorl
jmp
dec
mov
push
or
rcl
inc
pop
inc
je
jns
lock
imul
inc
pop
rcl
loopne
mov
mov
and
cmp
shll
in
xor
cs
adc
and
add
pop
pop
jecxz
sbb
mov
pushf
mov
stos
lods
mov
jg
mov
xchg
xchg
loope
sub
mov
mov
inc
hlt
hlt
add
dec
fisttpll
test
sti
add
xor
xchg
xchg
pop
cmpsb
jp
iret
and
cld
push
mov
mov
loope
aas
pop
aas
cmpsl
inc
sub
push
in
add
sarl
test
sub
or
into
rclb
xor
sbb
repnz
pushf
and
mov
cmp
call
ffree
or
loopne
lods
sbb
rorl
cwtl
das
aas
int3
enter
out
int
lock
mov
push
mov
jp
xchg
mov
pop
clc
fwait
cmpb
andl
jg
clc
cmp
push
cld
sbb
pop
add
clc
inc
mov
mov
mov
pop
in
pop
push
xchg
ds
iret
or
lds
ljmp
xor
cmp
mov
or
add
test
jb
loop
mov
mov
dec
sbb
in
lret
test
popf
rorl
cmp
pop
dec
sbb
scas
fcomps
fildll
sub
outsb
ret
cld
rolb
test
rolb
cli
les
or
dec
inc
lea
int3
movsl
adc
stos
mov
sub
mov
cld
mov
mov
mov
jmp
int
out
aaa
lock
inc
pop
adc
mov
xorl
mov
imul
imul
and
adc
movlps
jle
dec
adc
daa
fdivp
loope
push
mov
fwait
mov
xor
notl
push
jno
iret
scas
add
xlat
pop
dec
bnd
push
pop
in
stc
cs
les
xchg
adc
iret
jno
bnd
bound
pop
aaa
mov
es
loopne
divps
fsubs
sbb
cli
sbb
out
push
jno
gs
jnp
ret
push
inc
mov
sub
jl
lock
scas
cmp
lds
xchg
mov
movsb
jl
adc
push
test
mov
repz
lcall
inc
xchg
insb
push
lds
das
push
gs
mov
jne
push
adc
jge
out
mov
sbb
xchg
cs
ficoms
mov
pop
inc
dec
cld
cld
je
and
dec
sub
js
mov
imul
movsl
fidivl
imul
push
outsb
popf
cmpsl
cmp
jb
jg
xor
push
ret
and
aam
out
cltd
ror
addb
movsl
adc
test
sbbb
cmp
dec
repz
fnstcw
jae
daa
xor
mov
pusha
xchg
rcrb
lods
mov
idiv
pop
test
sub
inc
scas
icebp
jge
xchg
mov
test
pusha
ret
sarl
stos
mov
lahf
cmp
das
cli
add
and
jne
outsb
inc
dec
aam
or
inc
lahf
cltd
or
sub
rorl
pop
in
orb
jp
mov
jecxz
popa
xor
inc
pop
xchg
xorl
sub
cmp
xchg
lret
inc
and
sub
clc
add
xlat
jns
sub
in
pop
or
push
jmp
push
inc
lahf
lea
pushf
lods
addl
jecxz
add
andb
lock
icebp
out
xlat
test
ja
inc
push
add
dec
pop
pop
xlat
inc
lea
pop
add
cli
shrb
std
add
ss
lock
lcall
jb
jbe
or
jns
jnp
inc
callw
xchg
or
jae
enter
add
xchg
aas
push
cld
sbb
sub
jns
icebp
stc
cmpsl
push
pop
icebp
les
cltd
scas
or
sub
adc
in
jno
ret
or
aad
push
loopne
fadds
ss
jmp
inc
nop
fdiv
ret
xor
and
xlat
scas
in
shll
push
insb
div
mov
pop
arpl
roll
sbb
shl
faddl
or
jae
sti
cmpl
cltd
aaa
push
xor
data16
add
sarb
ret
dec
dec
cmp
cwtl
imul
add
pop
fildl
fsincos
xor
adc
cmc
jb
sub
and
lods
dec
mov
adc
xchg
iret
push
test
mov
mov
dec
fidivl
clc
push
mov
sbb
lret
push
jno
hlt
dec
jl
inc
bswap
jle
pop
mov
dec
cmpsb
lods
xlat
fidivl
xor
and
pop
sub
sub
roll
clc
and
fwait
xchg
jb
cmp
dec
or
cmp
mov
jno
mov
ljmp
test
mov
pushf
in
stos
pop
inc
scas
int3
ret
mov
adc
cmp
cmp
inc
xchg
sahf
mov
sbb
sbb
cmc
cltd
mov
or
xchg
nop
push
cmp
out
popl
insb
mov
and
pushf
push
test
dec
mov
fadds
negb
mov
stos
inc
mov
inc
scas
xor
std
add
pop
lahf
test
cmpsb
aam
loope
dec
cltd
mov
mov
cwtl
test
xchg
and
inc
mov
rcr
fdivs
push
jno
divb
push
ret
push
mov
adc
lret
mov
or
push
push
in
or
out
add
xor
add
xor
lods
jo
cmp
lds
cmpsl
sahf
popa
pop
insl
pop
xor
dec
bound
add
inc
dec
fidivrs
mov
xchg
pop
faddl
xor
sub
movsl
movsb
lock
push
inc
push
jl
iret
pop
mov
popa
scas
test
nop
inc
mov
pop
insl
mov
xor
mov
add
out
xchg
jb
mov
iret
sbb
or
rorb
jp
push
and
int
sbb
daa
jmp
dec
xor
dec
fwait
pop
fs
fcomps
cld
jno
hlt
add
mov
bound
mov
pusha
ljmp
scas
jo
mov
xchg
repnz
pop
or
or
cmp
iret
dec
cltd
movsl
jecxz
insb
mov
popf
dec
xchg
pusha
int
cs
js
aaa
jle
push
dec
sub
or
es
push
mov
pop
insl
jl
lret
iret
cmp
addr16
fs
xor
mov
xchg
imul
mov
sarl
insb
fildll
mov
push
add
out
mov
sbb
cmc
jo
lret
fidivrs
sub
add
lea
lret
cmp
pop
cmp
jecxz
repnz
sti
ret
jle
pop
jb
dec
fldt
push
scas
mov
lods
outsb
and
popa
mov
aad
jge
test
aaa
pop
mov
sbb
test
add
jns
rclb
sbb
add
movsl
jne
ret
sub
push
add
dec
roll
out
addb
scas
sub
or
mov
jp
mov
sbb
xor
in
cmp
sbb
insl
adc
sbb
aas
push
mov
pop
mov
aaa
movsl
mov
fmulp
mov
add
push
repz
lea
cmpsb
orl
dec
out
push
mov
mov
out
scas
cld
inc
and
jbe
xor
sbbl
inc
push
push
outsb
inc
adc
xlat
dec
pop
stos
xchg
mov
cmpsb
xor
inc
rcrl
das
pop
imul
dec
xchg
and
test
iret
push
and
lock
mov
loope
add
lahf
push
pop
jnp
jns
cld
idiv
hlt
push
ret
dec
adc
or
into
mov
gs
xchg
jmp
repnz
in
mov
mov
loop
lret
stos
lea
mov
sub
or
dec
scas
push
roll
in
xchg
adc
std
jle
adc
mov
push
scas
sbb
jl
jp
cmpsl
xor
daa
push
add
negl
mov
and
mov
cmp
movsl
and
jle
call
dec
xor
outsl
sbb
divl
out
jecxz
mov
stos
dec
pop
enter
arpl
lods
and
outsb
push
pushf
aas
lret
mov
or
jle
adc
enter
and
into
pop
sbb
ret
fdiv
jecxz
adc
call
shl
jle
cli
xchg
pop
js
mov
jnp
sbb
ror
xchg
lock
and
or
sbb
add
popa
adc
mov
sbb
int3
movsl
cmpsb
pop
push
mov
mov
pop
shl
mov
ss
push
stos
cmpsl
mov
add
jo
pop
inc
bound
push
add
push
sbb
test
push
and
cmp
or
sbb
aam
clc
leave
xor
jg
jne
mov
jmp
push
outsb
fldl
push
mov
jge
push
mov
jle
or
fcoms
loop
jnp
jle
insb
mov
inc
xor
loopne
or
fwait
aam
pop
push
negb
xlat
aaa
mov
add
jmp
rol
xchg
fstps
call
insb
loopne
lock
lea
negb
adc
es
adc
mov
outsl
push
xor
sarl
fsts
dec
xor
imul
mov
jmp
aaa
mov
jmp
xchg
or
ss
lock
out
cmp
add
add
lea
xor
adc
repnz
iret
pop
je
and
mov
jg
shl
cli
iret
cmp
or
test
sbb
mov
pop
add
cmp
inc
xchg
imul
pop
sbb
nop
stos
addl
out
jle
add
cltd
push
mov
aaa
stos
in
sbb
mov
adc
push
ficompl
mov
lock
es
leave
idivl
cmp
inc
xor
pop
loop
mov
int3
dec
mov
add
aam
jmp
pop
mov
pusha
mov
pop
out
push
out
mov
add
popa
loopne
fimuls
icebp
inc
ljmp
dec
int
adc
ljmp
lods
outsb
nop
mov
pop
aad
jb
and
into
shrl
aaa
mov
add
ror
jle
push
dec
mov
and
push
adc
and
aad
add
adc
mov
pop
shrl
fildl
loopne
mov
stos
shlb
out
hlt
aam
pushf
xor
sub
test
adc
sti
push
cmp
movsl
orb
fisttpll
inc
aad
pop
xor
push
sbb
xlat
popl
mov
xor
ljmp
aad
pop
inc
xchg
outsl
out
or
aad
int3
dec
fs
aam
insb
rcl
add
add
pop
adc
cmc
jge
xor
fdivl
xchg
pop
lahf
stc
outsl
jg
sub
push
dec
adc
stos
cli
dec
imul
scas
jo
fistps
iret
into
and
mov
sub
or
xchg
rclb
fwait
mov
pop
jne
sbb
test
or
inc
xor
aad
and
cmpsb
mov
std
out
adc
sbbl
sahf
xchg
insb
rcrb
nop
pop
pop
sub
ja
aaa
mov
xor
mov
jbe
pushf
jl
movsb
or
lock
mov
mov
add
stc
and
ds
inc
adc
mov
cltd
das
sbb
cmp
mov
push
fsubrs
rcr
pop
movsb
sbb
xor
mov
pushf
lret
or
jo
mov
pop
pop
xchg
mov
ljmp
jecxz
lret
mov
in
inc
pusha
adc
sub
jae
lcall
clc
xchg
or
xchg
sub
inc
or
push
xor
lahf
and
pusha
and
and
fsubs
into
rol
std
cwtl
fcompl
sbb
bound
jnp
mov
xchg
ret
xchg
lea
lods
in
mov
lods
inc
mov
push
test
dec
xchg
ret
fidivs
xor
gs
lcall
push
pop
cmpsb
xchg
faddl
loope
mov
clc
push
sbb
jmp
xchg
adc
dec
cmp
enter
sub
mov
or
add
popa
rorb
out
mov
xor
adc
jl
les
mov
fmuls
sbb
das
xchg
daa
jp
shll
test
lret
jae
and
jno
cmp
fsubl
sub
mov
adc
jb
je
fs
bound
stos
pushf
fwait
clc
xchg
inc
sti
or
out
scas
pop
push
mov
hlt
loop
mov
jmp
dec
sbb
fildl
stc
stos
xchg
popa
lcall
xor
pop
out
lods
cmp
aaa
hlt
pop
xor
gs
mov
pop
inc
je
nop
stos
sahf
std
cmp
or
sbb
jno
cltd
xor
cli
fwait
gs
adc
or
ret
push
sbb
dec
iret
mov
das
xor
xchg
outsb
or
dec
mov
xchg
notb
cmp
stos
orb
jno
jmp
pop
inc
pop
mov
dec
jp
or
int3
pushf
outsl
mov
mov
adc
mov
cmp
out
in
sub
aas
mov
js
es
push
popl
push
xchg
loopne
cs
xchg
std
dec
stos
inc
jae
std
ret
pop
jge
pop
movl
fnstcw
mov
cmp
sahf
dec
clc
mov
ds
rcrl
call
sbb
sbb
cmp
jns
jne,pn
fs
sbb
mov
pop
fistpll
sti
ja
sbb
dec
push
jns
rol
and
cmc
push
shll
in
outsl
stc
stos
mov
sub
cmpsl
push
test
push
push
cli
inc
inc
in
outsl
rcrl
pop
rclb
pop
push
jle
das
out
push
bound
sub
and
add
inc
fimull
stc
and
push
jbe
mov
or
fdivs
movsb
test
test
adc
jae
enter
mov
stc
and
shrl
pop
sub
cs
loope
sti
cmc
in
cli
push
stos
test
xor
nop
xlat
and
int
stos
mov
inc
dec
inc
sti
push
sub
pop
pop
xlat
test
shll
aaa
jne
lcall
inc
cmp
arpl
mov
and
jnp
pop
stos
mov
pop
jae
adc
mov
in
lahf
add
addr16
cli
mov
mov
inc
shlb
push
adc
popf
mov
pop
into
in
xor
daa
call
enter
sbb
inc
cmp
int3
add
add
sub
jmp
jb
mov
mov
push
arpl
jno
add
repz
daa
add
in
sbb
push
jmp
mulb
cmpsl
cmpsb
mov
xor
ret
rol
inc
fisubrs
out
fstl
int3
movsl
popf
loopne
dec
roll
cs
adc
pop
pop
push
mov
movsl
ret
add
es
or
ret
cmp
bound
adc
xchg
dec
sbb
xor
xor
mov
inc
orb
inc
dec
cld
xlat
cmovp
sbb
leave
in
or
jb
jge
loopne
mov
lods
xlat
dec
inc
mov
sub
out
andl
and
lods
out
sahf
jmp
cmp
xor
jl
pop
enter
je
arpl
repnz
movsb
stc
jmp
mov
ret
xor
mov
xchg
insl
mov
or
dec
cmp
aaa
xchg
mov
xor
pushf
test
jne
test
rolb
xor
inc
mov
xor
sbb
in
inc
mov
or
in
and
pop
or
insb
stc
leave
movsb
lods
or
xchg
sbb
xchg
insl
aaa
fwait
test
inc
test
mov
rolb
jl
mov
subb
popf
fcomp
hlt
insl
cmp
rclb
push
adc
inc
stos
lea
sbb
stc
adc
sub
mov
jg
dec
push
scas
enter
ret
lock
sub
push
cld
dec
push
add
lret
cmp
jecxz
xlat
inc
pop
mov
lahf
fcmovnb
or
add
inc
pop
rcrb
xlat
stc
ret
test
fidivrs
push
mov
ret
fidivrl
or
leave
lods
push
lret
sahf
mov
pusha
pop
ja
ret
nop
xchg
jb
outsl
insl
lods
inc
xor
xorb
and
jp
int
xor
test
leave
sbbl
add
jmp
loop
je
fistpl
xchg
cmp
push
test
jmp
sti
aam
xor
adc
mov
leave
xor
fstp
and
pop
ja
mov
lret
inc
lahf
es
shrl
cwtl
jae
adc
int
pop
ja
lcall
cmp
and
jmp
inc
das
push
and
loop
das
imul
shlb
cwtl
repz
scas
cmp
sahf
pop
testb
jns
cli
push
mov
jae
mov
adc
jp
mull
jp
fsubs
jp
push
je
rcll
pop
lea
or
cmpsb
aaa
std
lods
dec
pushf
insb
mov
sarl
leave
das
ljmp
lahf
sbb
das
out
shrb
fstpt
xlat
cmp
insb
cmp
xlat
paddq
inc
out
push
mov
inc
cwtl
test
cld
jnp
jno
lahf
arpl
adc
lret
orb
out
xchg
push
popa
push
les
arpl
inc
pop
out
mov
inc
adc
mov
dec
out
shll
mov
add
sub
pop
in
hlt
fsubrs
pop
and
repz
loope
fidivrs
mul
add
mov
mov
repz
xchg
test
rorb
inc
jmp
stos
inc
and
test
inc
mov
stos
adc
inc
inc
cmp
movsb
les
add
cld
ja
dec
mov
push
dec
cs
and
out
outsb
xchg
mov
aam
mov
pop
sbb
cmc
cmc
lea
fs
bound
movsb
lods
stos
cmp
push
jg
or
cmp
sbb
xor
sbb
dec
aaa
mov
pop
mov
xchg
sahf
dec
bound
insb
push
add
stc
xchg
fmul
cltd
mov
stc
mov
and
arpl
or
shrl
fdivrs
ret
add
leave
sti
jne
test
mov
lret
jmp
sub
stc
or
aad
ret
xchg
adc
adc
fcompl
outsl
cli
into
xchg
loopne
dec
cmpsl
int3
nop
out
lock
and
bound
jle
mov
adc
fists
mov
and
cltd
pop
ficoms
push
stc
out
jp
rcrl
out
mov
sbb
xchg
cmp
lea
sti
mov
sbb
inc
into
add
or
adc
les
cmp
std
mov
dec
mov
sub
push
xor
pop
leave
xchg
pusha
jbe
xor
test
stc
adc
js
cmpsb
inc
shlb
fidivs
aaa
in
aas
lcall
lret
clc
and
je
mov
dec
filds
imul
and
sarl
sbb
je
pop
add
and
adc
inc
push
adc
in
scas
jmp
pop
inc
testb
jae
mov
je
cmp
mov
push
addb
xor
mov
sub
stc
decl
xchg
loopne
arpl
and
inc
xor
and
mov
test
aad
es
jl
int3
push
test
lods
xchg
mov
hlt
testl
daa
inc
pushf
ljmp
jnp
xor
loop
rcr
outsl
loopne
mov
pop
mov
lret
sbb
loope
out
mov
inc
fcompl
xor
xchg
fisttpll
mov
aam
ret
shrb
cld
in
jo
and
add
lock
inc
push
xor
sbb
cld
stos
cltd
inc
xor
pop
dec
repnz
in
je
scas
add
enter
cwtl
fadd
test
xchg
add
mov
push
mov
test
pop
in
into
sti
inc
or
mov
mov
xchg
rol
xor
jge
pusha
push
hlt
add
or
out
xor
ljmp
popa
ljmp
in
enter
mov
into
imul
movsb
sbb
mul
scas
mov
pop
outsl
repz
dec
cltd
push
ljmp
dec
insb
jge
and
cmc
inc
mov
dec
xor
call
scas
push
add
in
sub
adc
fldenv
popa
pop
jle
clc
pop
add
aaa
push
int
popf
aad
sub
push
add
sti
cmp
add
outsb
mov
ds
loope
int
mov
jnp
cmp
and
std
stos
fimull
lret
xchg
jns
sub
subb
cmp
jecxz,pn
leave
pop
sub
xor
loope
dec
fisubrs
inc
jle
fimuls
jg
adc
sub
push
pop
xchg
fsts
les
out
sub
aaa
cmp
cmp
push
mov
cmpsl
stos
aaa
fnstenv
xchg
into
mov
mov
mov
dec
and
outsb
stos
cld
push
sti
pop
fldt
dec
pusha
add
fmulp
xlat
dec
sub
adc
cli
aad
lret
sub
sahf
mov
lret
ds
cs
jp
mov
pop
les
jp
out
jl
aas
jmp
sbb
rcrl
jle
iret
xchg
cwtl
push
out
in
inc
mov
mov
cmp
lahf
arpl
popa
aam
lods
aas
xchg
rcr
pop
cwtl
mov
repnz
into
daa
or
mov
mov
out
dec
pop
sub
movsb
mov
push
addr16
mov
dec
inc
xchg
xor
mov
push
in
ret
mov
test
adc
pop
imul
shll
or
xchg
push
movsb
cld
sti
scas
lods
add
inc
outsb
shll
inc
xorb
cmp
jmp
mov
and
pop
addl
enter
xchg
ficoml
mov
adc
or
pop
push
or
add
mov
adc
mov
xchg
push
push
adc
push
mov
xchg
aam
push
sbb
sub
scas
push
movsb
jae
fimull
and
dec
sbb
mov
lea
mov
cltd
mov
mov
xchg
add
xchg
mov
lods
cld
pop
ret
ja
iret
movsl
jp
sub
adc
sahf
push
lea
inc
jmp
mov
add
pop
push
adc
cmp
pusha
stos
stos
and
sbb
cmp
dec
adc
fsubr
and
mov
xchg
fsubrs
insl
xlat
pusha
fwait
or
adcb
lds
out
int3
xchg
mov
mov
xchg
xchg
sub
gs
push
mov
cmpl
movsl
dec
push
iret
outsb
ds
sub
loope
mov
add
sub
add
sbb
btc
adc
cmp
mov
mov
inc
push
in
imull
lret
sbb
sbb
daa
stos
mov
inc
xor
dec
xor
push
and
add
int3
adc
les
out
imul
sbb
or
pop
sbb
icebp
xchg
xbegin
mov
add
out
in
xchg
mov
mov
or
lret
incl
push
movsb
fsubs
mov
cli
test
rcl
inc
or
mov
dec
jg
aas
cmc
push
repz
sti
je
movsb
pop
fiaddl
or
sub
push
mov
aas
adc
xor
stos
enter
cmp
pop
into
dec
es
jnp,pn
adc
ja
lret
jns
int3
btc
or
es
mov
dec
test
clc
xchg
or
repz
pop
pop
jno
adc
in
dec
inc
loop
cmc
push
ds
ds
in
stos
add
hlt
xor
cmpsb
nop
cli
xor
xor
in
aam
or
out
xchg
ret
push
push
add
rcrb
sbb
sbb
aaa
mov
sbb
or
jb
fucomip
xchg
jg
adc
scas
stc
add
pop
xchg
push
iret
inc
shll
rcll
cmp
mov
pop
push
fildl
hlt
test
dec
mov
in
shlb
sub
leave
dec
jg
push
popa
adc
out
es
mov
je
rorb
pop
mov
pop
lret
xchg
pusha
push
jge
mov
pop
jcxz
cmp
sarb
cmpsb
lcall
hlt
mov
xor
cmpsb
cmpsl
xchg
sbb
push
dec
pop
enter
loope
loope
enter
mov
idivb
fidivrl
adc
out
addl
pop
adc
push
jge
xor
mov
xlat
inc
mov
mov
jg
aam
push
push
sbb
mov
mov
cmc
jmp
pop
int
xchg
sbb
adc
mov
aas
pop
ret
int3
add
mov
xchg
push
mov
jns
lret
xor
inc
mov
test
mov
push
pop
jbe
cli
repnz
scas
add
inc
add
add
jecxz
dec
push
lret
jmp
pop
js
sbb
add
push
push
data16
jo
xchg
fcmovbe
shr
ret
dec
out
or
pusha
into
dec
inc
xor
stos
xchg
outsl
adc
es
cltd
push
or
aas
adc
outsl
push
out
loope
sahf
and
push
sub
mov
pop
cli
mov
sub
lock
inc
outsb
and
jecxz
and
mov
push
xchg
pusha
nop
and
sub
sbb
jge
pusha
rcll
into
daa
cwtl
or
std
mov
flds
inc
bound
lock
add
dec
repnz
aad
mov
lods
cmpsb
xchg
in
fwait
popf
scas
adc
arpl
xor
xor
jle
mov
shll
push
push
lcall
jb
mov
sub
stc
push
sub
or
or
insl
iret
lods
ficomps
inc
cmp
fldl
cmpsl
push
mov
cmp
add
imul
stc
call
lods
cwtl
inc
das
inc
add
and
pop
jg
push
fsubr
test
mov
rolb
adc
test
dec
xchg
rolb
mov
test
jl
pop
dec
mov
call
push
xchg
jmp
push
stos
push
jne
dec
cmc
sahf
pop
push
bound
callw
mov
xchg
adc
adc
ss
mov
dec
jne
add
bsf
test
fsub
mov
in
lret
pusha
jg
data16
mov
enter
jnp
sbb
loopne
loopne
cs
es
loopne
hlt
mov
bound
add
cmp
inc
mov
push
test
xor
aad
outsb
lret
movb
sbb
seto
mov
aad
and
jmp
and
fildl
call
add
push
insl
inc
or
sub
mov
sub
sti
stos
inc
mov
mov
push
xchg
dec
jae
lock
sub
and
loopne
in
dec
aad
xchg
lcall
push
movsl
cwtl
test
stos
std
jne
push
mov
aaa
cmc
enter
add
sub
jp
ret
es
push
enter
xor
out
cmp
mov
xorl
fs
cmp
pop
push
jns
into
cmp
sub
sub
arpl
sub
leave
or
das
add
dec
mov
clc
push
loop
jl
scas
mov
imul
ret
add
push
pop
push
inc
mov
cmpsb
dec
movsl
mov
pop
dec
pop
cmp
or
xor
testl
jo
pop
popa
xchg
xchg
mov
ja
push
jecxz
dec
xchg
std
cmp
mov
add
or
scas
ljmp
or
daa
mov
jmp
stc
or
push
sbb
cld
jmp
popa
mov
adc
cs
shlb
or
adc
dec
loope
outsl
or
movsb
cmpsl
daa
mov
pop
inc
mov
mov
nop
jp
cmp
mov
pop
into
or
inc
jno
pop
and
push
data16
stc
mov
mov
aaa
jle
pop
jle
sti
subb
addps
subl
push
out
push
xchg
scas
cmp
xchg
mov
or
push
fistl
pop
sbb
imul
pop
lods
jmp
mov
xor
mov
and
daa
notb
push
and
shlb
mov
xchg
cmp
int
add
dec
incb
push
rorb
les
adc
shrb
jmp
repnz
and
mov
xlat
mov
mov
stos
sahf
sbb
cmp
push
mov
out
subl
into
add
lret
nopl
ljmp
add
js
lds
je
icebp
sub
sahf
and
shl
sbbb
loop
cs
sub
mov
ja
outsb
dec
mov
jl
sub
sbb
adc
flds
push
adc
push
sbb
and
data16
push
adc
sbb
shrb
cwtl
subb
xchg
push
mov
iret
jns
pop
xchg
push
dec
out
or
jl
into
sub
jmp
dec
push
cmp
mov
pop
cmp
fidivs
xor
cmp
xor
int3
jnp
jne
jp
cmp
aam
fsubr
pop
pop
mov
mov
cld
xchg
xchg
inc
push
or
lods
test
xchg
imul
popf
dec
pop
xorl
lcall
rorb
mov
es
push
movsl
lds
aas
push
mov
xchg
mov
push
mov
insl
jle
mov
inc
dec
fwait
sub
cmpsl
bound
icebp
mov
sar
loopne
mov
fimull
xchg
sbb
inc
cwtl
xlat
pop
clc
movsb
outsl
pop
cwtl
push
dec
pop
cwtl
enter
pop
inc
sub
and
cwtl
dec
pop
adc
jo
in
push
jge
and
push
adc
or
dec
movsl
and
mov
sub
mov
xchg
pop
ds
push
gs
lds
mov
rolb
mov
stc
hlt
pop
scas
mov
mov
pop
fmull
cld
mov
inc
sbb
jo
jle
mov
mov
clc
xor
js
ret
iret
xchg
xchg
cmpsb
rcrl
test
adc
cwtl
cmpsb
mov
or
and
hlt
test
dec
sti
xchg
pop
adcl
lcall
iret
jo
mov
or
add
push
ja
dec
ret
xchg
ljmp
and
fcmovnb
lock
insb
dec
cs
divl
cmc
cwtl
pop
insl
mov
add
xor
sub
add
xor
cs
int3
add
add
jbe,pt
and
cmc
cmp
imul
out
and
mov
xchg
mov
sub
add
push
cmp
test
cmp
fwait
je
add
lcall
cltd
fstl
add
adc
pop
pop
in
xchg
adc
fs
mov
sbb
je
pop
rorb
test
sub
lea
xchg
pop
inc
pop
pop
pop
adc
into
or
jne
hlt
and
pop
push
xor
int
rclb
fcmovbe
or
popa
xchg
loopne
adc
clc
pop
loopne
add
lods
mov
or
bound
test
mov
xchg
lahf
mov
inc
es
rdmsr
in
mov
pop
rclb
sbb
add
arpl
lcall
les
mov
jl
scas
push
fistpl
lock
in
stc
loop
add
mov
aas
js
mov
add
aaa
and
jmp
repz
mov
icebp
push
cwtl
mov
xchg
pop
dec
movsb
inc
loope
add
test
and
cli
stos
mov
and
sbb
bound
xchg
ret
es
inc
loope
jno
in
lock
sbb
mov
jb
cli
cwtl
xchg
add
outsb
xchg
sahf
hlt
push
xchg
roll
test
leave
aas
adc
cmp
pop
gs
lods
popf
pop
and
pushf
mov
sti
lods
dec
lock
or
cmpb
int3
out
or
xor
daa
jg
in
repnz
mov
xchg
pop
orl
into
js
pop
mov
mov
flds
std
and
ret
arpl
rorb
sbb
xchg
testb
ss
mov
cmp
xor
shl
in
mov
shrb
lods
je
adcb
sub
ret
xchg
push
jae
insl
push
xchg
or
xor
sbb
fisubrl
movsb
testl
movsb
test
add
insl
test
decl
jnp
xor
sbb
js
ret
add
xor
jnp
mov
mov
pusha
fwait
mov
pop
adc
xor
test
jns,pn
and
push
loopne
push
push
sbb
xor
add
sbb
inc
cmpsb
lahf
and
and
and
push
push
dec
pop
les
mov
cmc
cmp
xchg
mov
repnz
cmp
cmp
shrb
dec
push
je
cmpl
repnz
aaa
pushf
add
and
pop
stos
xor
movsb
push
inc
mov
ret
insb
das
dec
push
dec
dec
adc
push
mov
mov
or
and
sahf
or
mov
pop
inc
mov
mov
inc
lock
cwtl
add
pop
ret
rcrb
dec
cmp
lea
sub
iret
popf
sbb
adc
push
xchg
imul
xchg
es
xor
out
xchg
sub
pop
mov
sbb
ja
gs
push
out
mov
xor
and
push
xchg
cmp
jb
sub
call
int
mov
dec
mov
mov
fimuls
inc
inc
pop
iret
ljmp
testl
shrb
pop
xchg
insb
adc
xor
cli
push
adc
fadds
lods
push
out
es
jg
dec
ljmp
add
adc
das
les
jns
or
fstpl
and
inc
bound
jns
and
fldcw
jecxz
xchg
inc
aaa
mov
fcmovu
and
repnz
mov
pop
fwait
ror
mov
jns
dec
pop
pop
jae
mov
mov
pop
lret
imul
dec
inc
ds
mov
movsl
fs
and
jmp
minps
lock
out
repz
stos
dec
mov
insl
std
adcl
je
ja
inc
pop
pop
inc
movsb
jmp
dec
xchg
out
js
jae
daa
lahf
ss
push
mov
mov
xchg
sub
ret
into
mov
icebp
cli
es
cmp
push
push
cs
outsl
dec
fs
std
testb
add
test
in
sbb
mov
pop
or
out
shll
out
les
mov
insl
gs
call
lret
daa
mov
or
lret
mov
jo
sbb
test
adc
push
addr16
mov
test
xchg
imul
push
adc
xor
adc
jg
sub
stos
push
fisttpl
jne
or
dec
inc
adc
into
ss
adc
mov
mov
jp
adc
roll
es
stos
fucomi
into
xor
sub
jae
inc
xor
mov
fldenv
dec
mov
out
sti
push
cmpl
scas
fmul
xchg
repz
das
pusha
xor
jge
cltd
inc
int3
into
not
in
xchg
or
add
dec
pop
xchg
mov
adc
adc
jo
fwait
test
js
inc
mov
mov
repz
popf
mov
add
adc
aas
sbb
hlt
dec
scas
inc
sbb
lock
mov
jne
stc
jmp
cmpsb
xor
sub
jno
hlt
test
push
adc
int
jmp
popa
stos
and
dec
movsl
pop
ss
xor
pop
push
pop
jl
out
mov
adc
scas
pusha
psrlq
mov
push
mov
add
cs
inc
cmp
jmp
sub
stc
lods
adc
scas
mov
push
mov
es
out
rcrl
repz
fs
test
ficompl
push
hlt
fs
cs
mov
and
int
outsb
shl
mov
add
test
cmp
lret
or
aas
es
loop
add
in
orb
xchg
int3
daa
aam
and
cmp
jno
fldenv
int3
mov
out
and
fcom
jb
imul
les
adc
rcll
stc
je
inc
mulb
fistpl
and
mov
dec
popf
test
xor
call
js
js
mov
outsb
adc
cltd
inc
mov
jp
fisubrl
mov
icebp
movsl
or
add
xchg
out
push
jns
sub
fsubr
dec
or
cltd
push
pop
in
xor
incl
jnp
cmp
ds
sub
adc
das
xchg
rorl
cltd
out
or
push
bnd
leave
das
push
mov
outsb
xor
popa
imul
dec
decl
jmp
dec
shlb
enter
inc
dec
or
sti
dec
xchg
mov
xchg
inc
pop
icebp
popf
stos
sub
jae
add
js
rcl
xor
ret
sti
pop
pop
addr16
and
cmp
push
jp
jns
cld
and
aam
xor
out
ret
push
aad
jb
and
cmp
fnsave
xor
mov
push
icebp
repz
push
push
push
or
out
xchg
push
push
aas
xor
xchg
cmp
add
cmp
orl
push
test
pop
inc
cli
mov
stc
push
inc
enter
fildll
push
cmpsl
push
std
mov
mov
data16
or
push
mov
pop
lret
imul
out
jns
push
idivb
fcmovbe
push
lret
sub
and
push
outsl
push
push
hlt
adc
fdivrs
inc
xlat
movsb
or
popa
xchg
xor
adc
icebp
jnp
shlb
xchg
dec
imul
inc
aad
push
pop
xor
cmp
xchg
xor
iret
jae
aad
test
adc
out
mov
and
loope
xor
xor
xor
xchg
xor
dec
dec
repnz
cmp
sti
cmp
insb
xor
or
das
and
aad
repz
hlt
scas
in
push
adc
loop
pop
in
jge
arpl
mov
nop
lock
add
pop
lock
pop
ficoml
pop
leave
cltd
sahf
mov
test
inc
xchg
adc
jg
and
nop
push
jle
mov
leave
push
shrb
pop
pop
loope
mov
mov
jp
testl
mov
xchg
jmp
jmp
dec
xor
movsb
ficomps
dec
shl
jle
sbb
sub
lock
shll
add
rclb
and
xchg
sbb
lret
push
inc
aam
sbb
ret
sub
push
adc
lret
repz
inc
arpl
lods
mov
add
jmp
dec
sti
push
icebp
lods
mov
and
jb
push
arpl
xor
clc
inc
movsb
dec
mov
out
movsb
inc
push
xchg
or
mov
dec
pop
xlat
call
sbb
out
inc
lahf
inc
ret
xchg
mov
pop
and
icebp
xor
insl
int3
mov
add
enter
aas
cmpsl
int3
cld
inc
jecxz
adc
roll
jb
mov
data16
sub
dec
lret
pop
jno
push
push
jmp
sub
jg
xor
pop
push
pop
loope
adc
cmpb
push
xor
mov
cltd
cmpl
shrl
popf
je
or
arpl
xor
jge
sbb
jno
mov
add
pop
fwait
cmc
sub
je
aam
cmp
addr16
add
jp
mov
sub
jmp
mov
mov
icebp
cmc
mov
rcll
fucomi
stc
jns
xor
icebp
add
rorb
jbe
int3
xchg
movsb
idivl
mov
push
inc
fsubs
mov
mov
movsb
loope
mov
adc
sub
ret
rcr
test
jb
jle
prefetcht0
jp
sti
mov
mov
xchg
jno
addr16
mov
xor
scas
fistl
and
adc
test
cmp
and
sub
mov
sub
pop
pop
test
call
mov
pop
iret
fcomps
pop
fdivl
dec
push
add
sub
sbb
sti
pop
dec
jmp
imul
jge
jmp
push
pop
sbb
sub
imull
mov
scas
nop
xor
fsubl
mov
push
out
mov
sub
or
into
mov
dec
xor
fisubrs
jb
mov
push
idiv
xchg
cwtl
sbb
rcl
loopne
sbb
mov
push
sbb
sbb
loopne
xor
sti
add
lea
xchg
add
jno
mov
jae
adc
xor
ret
mov
cmp
add
pop
jne
lret
gs
lock
dec
jl
and
inc
addr16
dec
dec
xor
mov
sub
adc
nop
mov
xchg
mov
out
enter
out
jnp
xchg
enter
not
sub
pop
jg
and
movsl
cld
scas
js
cs
outsb
xor
sbb
mov
xchg
xchg
cmpsl
push
cmp
jg
xor
call
and
add
aam
adc
cld
out
loop
pop
out
in
mov
push
adc
ret
cmc
sbb
sbb
push
addr16
iret
std
add
mov
jb
jmp
outsb
mov
mov
mov
jl
loopne
pop
xchg
adc
loope
scas
jne
add
jecxz
mov
lret
and
repz
in
hlt
lea
js
inc
ffreep
or
adcl
arpl
xor
idivl
scas
and
push
rclb
dec
and
data16
xor
imul
sbb
mov
mov
fstps
inc
mov
pop
xor
repz
mov
call
arpl
push
xor
in
sar
insl
lods
aaa
mov
cmp
sti
std
adc
imul
pusha
rclb
cld
jae
repz
movsb
movsb
mov
sbb
xchg
addb
xchg
popa
mov
xor
lret
iret
iret
cltd
cli
jbe
daa
mov
js
push
add
lret
jl
cld
xlat
push
add
push
jl
lds
xor
mov
ss
xor
cmp
popa
sbb
dec
pop
aad
icebp
inc
addr16
adc
mov
fwait
lcall
data16
ret
jecxz
lock
push
insb
and
inc
aad
lds
xchg
mov
iret
jmp
sub
xchg
mov
addr16
fisubs
and
cmp
jmp
jl
stc
sub
loop
ret
aas
les
inc
insb
ja
mov
jae
out
insb
idivl
insb
cltd
or
or
mov
leave
popf
lret
cmp
add
nop
mov
fwait
sbb
push
in
cmp
xor
dec
rol
jmp
int3
and
rcrb
out
push
sbb
daa
bound
inc
or
lret
repnz
sub
add
adc
or
push
xor
sbb
loopne
rolb
pop
sahf
xor
mov
jne
jmp
sahf
pop
rolb
push
out
ss
arpl
jo
pop
xor
int3
mov
jbe
adc
mov
test
notl
sub
dec
sahf
inc
pop
arpl
jae
sbb
iret
xor
jne
cmp
mov
fldl
cmp
xchg
sbb
push
mov
dec
mov
sbb
pop
cli
sub
pop
dec
lret
mov
mov
push
leave
ret
xchg
pop
adc
mov
fimuls
adc
idivb
les
leave
or
in
leave
dec
int
push
pop
insb
cmp
lret
pop
lea
out
aam
aas
shrl
mov
cmp
add
push
loopne
test
out
pushf
in
mov
test
sbb
sub
mov
pop
add
orb
mov
sub
inc
add
arpl
aam
mov
jmp
sub
adc
sbbb
outsb
or
cwtl
inc
fdivrp
xchg
ror
inc
lret
lods
shl
xor
fmull
nop
popa
outsl
fnop
push
icebp
aas
lods
and
push
jl
jo
add
or
dec
push
add
lods
and
in
into
loop
mov
cmpsb
out
lds
pop
jno
and
dec
je
addb
inc
ljmp
or
push
popf
lock
mov
mov
xor
push
sbb
push
subb
leave
call
sbb
xor
xchg
test
mov
mov
sbb
or
and
es
shl
repz
mov
repnz
pushf
push
and
adc
test
mov
or
aad
out
sbb
jae
cmp
pushf
movsb
dec
rorb
xor
inc
lahf
outsb
movsl
sub
cmp
repz
dec
push
mov
xchg
mov
test
xchg
mov
add
xchg
shlb
mov
cmp
mov
or
mov
popf
jns
mov
push
rcll
push
cmpsl
into
push
sti
mov
push
add
push
stos
je
ss
jecxz
shlb
cmp
xor
add
call
add
push
adc
pushf
test
bound
lods
push
fists
loop
push
adc
mov
ret
pop
pop
iret
jb
pop
pushf
xor
cwtl
scas
cmc
xchg
les
mov
mov
ljmp
push
test
repnz
aad
insl
mov
sub
inc
lods
or
mov
cmpb
xchg
pop
xchg
pushf
lock
std
rcll
sarb
insl
ret
push
adc
mov
out
inc
push
mov
imul
jle
push
aam
cli
xchg
stc
or
inc
dec
dec
sub
je
mov
add
sub
mov
cmp
call
and
std
ljmp
fnstsw
pushaw
mov
cmp
dec
call
cmp
daa
hlt
jecxz
or
fwait
mov
pop
jnp
outsb
adc
lcall
jb
shlb
cmpsb
out
sbb
xchg
sbb
cmp
add
jl
dec
xor
lock
test
push
inc
aaa
sahf
and
ljmp
and
xor
in
sub
dec
lds
lea
pushf
in
sarb
loop
and
ror
cmpb
inc
cmp
and
dec
ljmp
jg
aas
addr16
cs
divw
xorl
or
mov
push
sti
xor
jmp
cmp
xor
leave
js
jo
push
jle
xchg
cmp
add
ror
sub
xchg
fsts
repz
xchg
movsl
pop
pop
into
je
fdivrp
insb
int3
movsb
add
or
sti
dec
inc
mov
pop
cmp
sti
nop
mov
mov
nop
pop
mov
ss
ss
jl
adc
sub
sbb
insl
mov
sbb
xchg
pop
outsb
and
sti
ret
xchg
test
add
test
into
std
pusha
stc
movd
dec
mov
fildll
xor
inc
xchg
jmp
adc
jns
mov
divb
mov
test
xchg
inc
ds
aas
dec
add
test
andl
outsl
adcl
rolb
add
call
in
ja
sub
add
in
mov
adc
jg
xchg
mov
leave
adc
stos
aas
pop
cmc
call
fdiv
jle
mov
imul
lcall
and
shr
push
lret
push
mov
je
insb
mov
jnp
aam
les
mov
mov
dec
push
lcall
and
dec
pusha
sbb
sahf
shll
adc
jne
insb
push
stc
inc
shll
add
xchg
sti
sub
mov
inc
push
or
cmp
aas
mov
in
cmp
or
imul
xchg
aam
mov
int3
or
data16
pop
shrl
out
push
xchg
sarl
pop
lock
rcll
xchg
clc
mov
cltd
push
fcmovu
int
addb
cmp
sub
pop
inc
xor
or
into
bnd
ljmp
cld
and
jl
out
adc
and
xchg
in
loopne
mov
adc
add
dec
adc
pushf
fwait
xor
lods
fldt
in
inc
or
pop
cmp
mov
repnz
movsl
test
push
adc
rcll
jae
mov
push
outsl
popa
jl
xor
in
push
push
in
or
sub
ficomps
add
fwait
test
lret
stc
loopne
cmpsl
jp
or
xor
test
mov
sti
lret
inc
mov
out
mov
mov
xor
cmp
xlat
jl
xchg
out
xchg
dec
jg
out
lods
mov
and
sbb
pushf
xor
xor
bound
adc
inc
and
daa
jecxz
insl
sbb
mov
xchg
movsl
pop
shll
stc
rorb
rsm
inc
out
je
fimuls
fcmovnb
into
pop
push
cltd
adc
xchg
leave
mov
je
pop
adc
and
lds
jb
invd
std
adc
bnd
mov
div
mov
cltd
notb
sub
out
fisttps
cwtl
lods
cmp
test
aas
pop
pop
pop
fcmove
arpl
jecxz
xchg
push
jl
mov
cmp
pushl
jne
bound
scas
jmp
pop
and
sub
cmp
test
aaa
icebp
outsb
sbb
mov
ret
adc
sub
lds
gs
mov
lret
cmp
jb
scas
cmp
sbb
cmp
mov
out
mov
pop
mov
jge
pop
iret
add
and
clc
jl
inc
xor
jno
push
leave
cmp
bound
pop
cmp
popa
pop
test
in
or
or
test
out
sti
insl
sub
lahf
sbbb
dec
adc
jnp
les
add
jmp
inc
cmc
dec
out
cmc
mov
fistpll
push
jmp
xor
into
inc
pop
push
es
mov
push
mov
adc
js
hlt
cmp
out
pop
dec
dec
aam
xor
pop
les
mull
dec
clc
sahf
or
xchg
cs
xchg
push
and
mov
ret
jno
ljmp
aaa
cltd
cmp
cwtl
xor
pop
lds
push
lahf
and
sbb
mov
xor
lods
adc
jl
pushf
mov
sbb
insb
push
mov
sbb
and
dec
push
xchg
or
lods
or
lea
mov
jg
adc
sub
cmc
mov
mov
mov
push
inc
sarb
dec
xor
mov
pushf
test
xor
in
je
lahf
xor
in
out
push
outsl
scas
pop
outsb
pushf
mov
gs
mov
mov
aam
in
fisttpl
ror
imulb
lods
rcr
test
jecxz
scas
mov
push
add
gs
jo
stc
jg
push
cmc
lcall
imul
jge
dec
inc
inc
int
test
xor
push
into
popa
lds
mov
out
cmp
pop
push
push
out
jg
lahf
or
pop
insb
xor
mov
in
not
add
xor
stos
pop
and
insl
jns
jmp
div
cmp
std
sbb
dec
mov
aad
je
jecxz
in
lahf
push
push
out
sbb
hlt
dec
ds
mov
push
mov
jns
mov
pushf
push
test
push
inc
jns
xchg
sbb
or
das
pop
sub
inc
add
or
inc
movsb
xchg
cmpsb
xchg
mov
jo
mov
les
xor
dec
mov
sbb
insl
add
xor
addr16
pop
dec
repz
cwtl
aam
movsb
bound
inc
adc
inc
incb
subl
mov
fwait
sar
jecxz
cwtl
ljmp
xor
mov
inc
inc
fimuls
push
push
out
adc
push
pop
fcoms
pop
inc
xchg
push
lds
enter
and
subl
ss
lret
mov
pop
jl
nop
popf
and
imul
inc
mov
mov
sub
xchg
cld
jp
cmp
cltd
into
pop
in
cmc
subl
shl
sbb
les
test
nop
sti
stos
in
jno
push
add
adc
mov
jmp
pop
xlat
in
jmp
mov
push
idivl
mov
cmpsb
adc
adc
test
jecxz
sub
clc
shll
xchg
or
sti
and
jne
cmpsl
fmull
and
sub
add
push
cld
pop
scas
or
hlt
mov
pop
add
mov
push
mov
mov
sti
or
fsub
push
outsb
in
cmp
cmp
inc
adc
notb
or
sbb
iret
push
xor
dec
int
loopne
cwtl
pop
cld
sbb
pushf
repz
push
mov
cmc
imull
mov
es
movsl
xchg
jb
shlb
cs
cld
pop
movsl
cs
sub
xchg
iret
or
enter
lcall
out
daa
insl
mov
adcl
mov
xor
xor
ja
fbstp
call
test
adc
inc
pop
or
das
inc
sub
fdivrs
push
add
cld
or
into
aam
mov
inc
cmp
sub
pushf
enter
adc
std
flds
ja
jno
loop
adc
inc
sub
call
out
mov
xor
xor
add
incl
add
pushf
add
bound
jae
stc
les
inc
std
mov
xor
sti
mov
cmp
sub
mov
pop
sub
pushf
mov
stos
int
jp
scas
pop
lcall
pop
les
jge
or
fsubp
mov
push
into
mov
mull
adc
mov
add
add
mov
imulb
push
sbb
push
movsb
and
outsb
fwait
popf
arpl
in
cmc
enter
mov
gs
xchg
gs
sbb
out
scas
dec
push
mov
or
mov
dec
mov
incb
mov
jno
scas
xchg
and
inc
mov
push
js
orl
mov
add
sahf
mov
sbb
xorl
xchg
arpl
cmp
fcmove
int3
xchg
and
pop
cmpsl
mull
push
addr16
js
dec
jmp
scas
dec
xor
adc
jle
sub
sub
ss
push
lods
mov
or
fucomp
dec
mov
imulb
sar
mov
adc
daa
or
insb
sbb
lock
cs
push
les
les
cmc
js
movsb
sarl
xor
test
fnstenv
add
mov
sub
lret
cwtl
dec
fwait
jmp
xchg
add
aad
fistps
mov
repz
sub
aam
sbb
xchg
iret
cmp
out
sub
arpl
imul
mov
add
jp
xchg
lahf
les
icebp
mov
add
mov
jnp
scas
loopne
out
xorl
js
dec
push
pushf
movl
push
cmp
add
out
stos
fldt
add
sub
jge
inc
repnz
lea
cmp
aaa
fnstsw
fwait
or
out
ret
push
mov
adc
adc
push
fidivl
repnz
adc
xlat
pop
push
cmpb
jecxz
scas
in
ljmp
into
push
pop
aaa
daa
ret
dec
test
sub
jecxz
and
std
add
or
icebp
test
test
dec
inc
dec
mov
mov
rorb
sbb
xchg
out
jne
push
jge
repz
dec
pcmpeqb
in
lods
jg
xchg
sti
cmp
test
jnp
mov
lret
popa
jbe
insb
mov
lods
xor
sub
pop
mov
subb
xchg
lock
mov
adc
fsubrl
test
mov
fstps
ret
test
adc
out
adc
ret
lods
outsl
outsl
fcomps
bound
daa
filds
fcomp
cmp
dec
nop
inc
push
or
pop
mov
fsubl
jge
fcom
or
jb
dec
mov
ret
and
out
pop
enter
pop
xchg
or
out
mov
dec
dec
fs
nop
lea
pop
and
psubb
add
sub
cmp
mov
dec
out
cli
jb
pop
inc
sahf
jecxz
jae
inc
adc
sub
clc
xor
cmp
stc
push
push
mov
cmp
add
bound
and
jmp
shl
add
sbb
sbb
ljmp
xchg
popa
shl
xchg
inc
daa
test
popa
mov
inc
mov
movsl
data16
pop
inc
ja
sbb
lock
xchg
pop
outsl
jg
cmp
lret
and
push
outsb
scas
inc
scas
cmp
xor
inc
jno
mov
or
lret
xlat
inc
xlat
cmp
dec
scas
out
cli
mov
jnp
imul
jo
aam
idiv
sub
lods
jbe
push
cld
xchg
clc
push
or
add
aas
mov
xchg
dec
mov
mov
or
pop
lret
lret
call
stos
fwait
loope
in
in
les
imul
flds
enter
and
popl
movsb
int3
mov
inc
lods
imul
adc
fwait
jb
mov
in
stc
lods
add
dec
outsl
call
mov
mov
sbb
pop
stos
mov
test
cmp
push
neg
cmp
adc
shll
incb
add
push
out
fldl
in
arpl
push
jge
movsb
sbb
pusha
inc
int
lret
xor
insl
cld
mov
pop
subb
cmp
push
jle
mov
sub
push
out
iret
dec
sub
outsl
cmpb
and
xchg
xor
push
push
repnz
fimuls
and
test
cld
inc
arpl
mov
add
pop
imul
or
mov
adc
ds
add
and
je
adc
imulb
inc
hlt
aaa
dec
test
sarb
push
mov
or
in
pop
push
dec
fwait
out
and
mov
es
and
mov
ljmp
jecxz
mov
data16
rcr
mov
sbb
imul
cld
aad
pop
mov
int3
sbb
lods
mov
cmp
jno
testb
xor
push
shlb
adc
lret
stos
int3
mov
shl
push
movsb
xchg
jns
jnp
les
jmp
sub
in
push
pusha
pop
je
lahf
jp
push
iret
daa
int3
push
jne
jecxz
push
ss
mov
jecxz
out
nop
push
push
int3
arpl
and
mov
test
dec
sub
add
movsb
mov
ds
dec
ret
sub
filds
dec
rorb
push
push
aam
call
inc
lock
imul
ljmp
fimuls
mov
mov
pop
cmp
lret
sbb
stos
xchg
cmpsb
dec
es
add
ja
push
push
icebp
pop
out
sub
mov
es
pop
outsl
pushf
shl
xchg
aaa
aad
fcoms
out
pusha
dec
lds
inc
mov
popa
aas
insl
out
pop
test
mov
lret
orl
sbb
sti
or
ret
cmp
outsl
scas
dec
adc
ljmp
or
push
adc
test
stos
dec
or
pop
inc
add
dec
cmp
mov
movb
ds
icebp
stc
mov
pusha
push
lret
push
subb
cmp
stc
cmp
int3
cmpsb
add
xor
pop
sbb
add
mov
je
lods
es
fxam
divb
inc
inc
mov
stos
inc
lock
es
in
rcll
mov
out
cs
mov
lret
stos
inc
xor
popf
mov
dec
test
loope
popf
loopne
mov
jmp
shll
jno
jecxz
fwait
lcall
or
imul
mov
inc
dec
push
sahf
sahf
xlat
lret
sub
adc
mov
cmp
ficoms
hlt
push
inc
push
sbb
in
sahf
jno
pop
mov
jp
jmp
cmp
inc
cwtl
or
lock
jns
inc
aam
dec
mov
in
sub
push
lret
lea
inc
cmpsl
xchg
movntps
cmc
xchg
stos
fdivrl
fistpll
sub
ret
adc
sbb
xor
popf
mov
callw
sbb
sbb
pop
cs
cmpsl
mov
loop
gs
add
sti
jno
sbb
pop
and
sbb
jae
test
popa
xor
xchg
jl
aaa
and
ret
in
dec
xchg
xlat
inc
inc
sti
add
push
xor
clc
in
data16
lea
pusha
pushl
ja
aam
xor
add
loope
jns
push
pop
pop
mov
les
shll
xchg
cmpsb
into
jae
stc
scas
das
lods
jbe
push
cmpsb
mov
add
lock
fwait
in
sti
pop
ret
mov
mov
aad
fildll
bound
sub
cs
mov
mov
setge
fmul
nop
lea
jae
cli
inc
add
fmull
int
mov
jge
mov
pop
bound
in
div
rcrb
int3
test
das
cwtl
push
aaa
xchg
pop
popf
imul
stos
scas
mov
sbb
mov
aas
adc
mov
and
xchg
or
sub
sti
or
sarb
sbb
in
pop
push
aad
push
fsin
into
xchg
lret
adc
xor
mov
js
sbb
fisubrl
jp
aad
pop
jecxz
push
cli
jl
lea
add
out
mov
lods
push
pushf
pop
jae
xchg
addr16
dec
movsb
bound
sti
es
push
orl
enter
inc
push
push
shlb
cmpsb
test
adc
inc
dec
test
lds
lods
cmp
cld
cmp
movsl
mov
xor
cmc
xchg
jmp
jne
jp
mov
popa
jo
lret
or
jnp
roll
sahf
add
or
sub
jmp
pop
fs
out
cmc
int
mov
sub
lahf
cmpsl
push
gs
add
leave
nop
push
dec
jmp
scas
sub
inc
mov
push
adc
movsb
mov
mov
test
pop
icebp
data16
inc
mov
aaa
lds
aas
lods
lret
repz
nop
xor
sub
outsb
inc
lcall
pop
dec
inc
fmuls
cs
dec
jmp
insl
mov
push
ds
mov
lock
sahf
ljmp
mov
pop
or
pop
inc
inc
gs
mov
fnstsw
into
jl
or
sub
mov
xchg
dec
lahf
xor
test
mov
push
jge
iret
jmp
xor
mov
arpl
loopne
dec
sub
movsl
push
shl
and
cmp
bound
aaa
fs
in
jne
mov
xchg
adc
pop
rorl
scas
mov
add
gs
sub
xor
adc
lods
jbe
pop
les
jnp
clc
sbb
daa
inc
xor
repz
sbbb
mov
movsb
lahf
bound
mov
or
cmp
aad
and
push
imul
jo
mov
dec
repz
and
shrb
mov
outsb
xchg
addr16
out
sub
rol
pop
in
or
lret
je
sub
out
subb
orb
inc
xor
int
xor
push
cltd
dec
fabs
jmp
and
and
outsl
xor
dec
out
and
imul
mov
pushf
sarb
cltd
push
dec
mov
jp
sbb
xchg
xchg
lds
mov
and
cmp
testl
ss
push
pop
fwait
shl
rcll
das
fistps
sub
enter
and
and
sahf
jb
dec
in
rol
fsts
dec
sub
push
adc
and
scas
out
js
lock
test
jne
sahf
mov
fs
jnp
jle
xchg
xlat
jo
mov
clc
leave
je
rorl
cmp
arpl
shll
pushf
outsb
cmp
testl
das
hlt
sub
add
add
rcrb
and
jno
xor
sub
repz
dec
add
imulb
fsts
dec
insb
adc
cs
es
mov
iret
call
jnp
inc
xchg
stos
mov
adc
stos
and
mov
stc
mov
mov
cld
daa
jb
sbb
rcrl
xchg
and
ret
pop
lea
cmp
jecxz
push
jge
arpl
out
lds
movsl
xchg
lock
xchg
mov
cmc
xchg
es
ret
aad
sbb
mov
add
inc
sub
movl
in
pop
push
push
icebp
scas
in
cmc
nop
jae
loope
lock
int3
add
ficomps
nop
xor
mov
stos
or
and
out
dec
negb
cwtl
xor
push
fcmove
pop
add
cld
ss
cmpsl
daa
dec
inc
jl
cltd
xchg
fdivr
outsb
addl
and
xor
jnp
fucom
mov
xor
xor
rolb
out
add
sbb
pusha
addl
sbb
outsb
inc
mov
xchg
push
fidivrs
rol
cmp
imul
push
or
mov
stos
lock
fwait
les
xchg
inc
sbb
pop
dec
pushl
inc
and
inc
test
daa
js
push
mov
cmp
fsubs
jp,pt
cmpb
ja
pop
sub
xchg
test
ja
loopne
lds
xchg
pop
jnp
xchg
lods
push
pop
fnstsw
roll
repz
push
push
mov
pushf
stos
cwtl
cmpsl
shrl
mov
mov
outsl
fistpl
stc
xchg
cltd
sub
es
inc
fimuls
mov
jecxz
xor
icebp
inc
imul
loope
in
fs
push
dec
pop
sub
ss
fwait
pop
cwtl
in
mov
ret
inc
adc
mov
rcrl
arpl
cmpb
sti
adc
call
lods
hlt
push
push
mov
sahf
add
pop
stc
sti
mov
cwtl
mov
test
or
lcall
loop
sbb
and
jle
push
push
mov
xchg
adc
adc
adc
xor
pop
jns
aas
xor
cmpsl
data16
add
je
movsl
out
mov
imul
int
lods
jl
leave
or
sar
cltd
pop
xlat
stos
aaa
outsl
aas
mov
mov
popa
add
mov
cli
fdivr
cltd
cld
mov
adc
pop
push
pop
mov
adc
mul
mov
cmp
xor
dec
push
inc
inc
mov
xor
jg
mov
xor
int
rcrl
mov
sahf
scas
cmp
hlt
jmp
xchg
mov
enter
xchg
iret
sub
notb
fsubr
inc
push
iret
mov
jns
dec
sub
sbbb
rcr
loop
out
jle
or
std
mov
mov
ret
cmpsl
das
addr16
push
lds
das
adc
or
jb
fiadds
adc
call
inc
mov
mov
add
stos
das
mov
and
mov
pop
cmp
push
jnp
pop
jne
rolb
enter
out
mov
dec
jne
or
test
sahf
popa
std
pop
jne
xor
or
clc
enter
jo
daa
mov
adc
leave
sarb
jmp
test
mov
out
and
xor
or
cmp
inc
icebp
cld
roll
cmp
jne
mull
jne
aad
cmp
ds
push
push
jnp
sub
je
scas
and
inc
xchg
lahf
inc
cmp
pop
mov
test
leave
cmp
out
push
roll
xor
mov
xchg
jns
adc
push
in
adc
ret
sbb
mov
inc
xchg
pop
in
inc
xor
sub
clc
repz
push
xchg
push
dec
push
jne
cmpl
notb
xchg
loope
adc
cmp
sbb
or
pusha
mov
sub
xchg
mov
ss
and
mov
into
sar
insl
add
int3
mov
fwait
test
mov
jl
je
mov
mov
les
mov
add
cli
jno
xchg
sarb
aad
adc
ljmp
or
test
mov
cs
orb
cmp
sbb
mov
cmpsl
movsl
insb
pop
je
mov
adc
pushw
ss
arpl
fdivl
lock
and
jb
lahf
push
adc
jns
push
cmp
mov
addr16
sbb
jo
add
xchg
in
xchg
hlt
sub
fucomp
rorb
mov
push
cmp
xor
idivl
shl
cmp
mov
cwtl
std
aas
inc
out
xchg
shll
sub
addb
sub
mov
mov
test
out
fstpt
rcr
paddusb
mov
sub
call
push
test
int
das
addr16
scas
dec
cmc
test
movsl
repz
mov
sub
sbb
js
mov
addr16
ds
mulb
mov
or
movsb
inc
fbld
pop
movsl
add
sti
fisubl
and
pop
and
movsb
or
nop
add
and
sarl
and
clc
ds
out
ficompl
pop
idiv
and
pop
addl
int
jo,pn
pushf
dec
mov
adc
or
stos
push
xchg
mov
subps
cmp
je
lods
push
lahf
dec
mov
stos
xor
sub
sub
jno
xchg
jmp
or
jns
mov
xchg
cmc
pop
nop
xor
pop
pop
cmpsl
jmp
repnz
arpl
jbe
sub
xlat
jne
shrb
aam
shlb
mov
pop
xor
jmp
add
sbb
lds
add
pop
dec
fidivrs
push
push
push
push
mov
jp
fisubrs
adc
sub
adc
stc
outsb
mov
pop
ss
jmp
push
push
imul
sbbl
mov
and
fadds
in
add
sbb
out
out
nop
loopne
sub
xchg
pop
xlat
mov
test
xchg
insb
mov
cmp
js
mov
iret
test
popa
sar
adc
notb
push
mov
push
mov
or
test
out
or
or
mov
mov
andb
movsb
ja
adc
mov
mov
and
test
mov
out
cmpsl
and
leave
fnstsw
mov
mov
test
mov
xor
mov
out
sub
out
pop
dec
scas
jp
dec
fidivrs
imul
cmp
and
idivl
adc
xchg
inc
xor
bound
mov
xor
add
iret
xchg
sbb
fwait
ljmp
test
nop
mov
out
adc
xor
in
out
leave
test
xor
cli
jge
iret
addr16
xchg
repz
imul
add
xchg
dec
test
fnstenv
mov
sbb
adc
and
arpl
push
mov
push
sub
incb
js
sbb
lock
mov
dec
loopne
call
test
sbb
mov
in
pop
pop
dec
and
mov
aas
adc
std
jp,pn
ret
jecxz
and
das
mov
adc
shl
sahf
lahf
popf
xor
sub
xchg
lcall
ljmp
cmp
aam
push
notl
popa
addr16
in
mov
lods
in
add
out
andl
call
cmp
sbb
mov
mov
daa
inc
and
hlt
mov
mov
mov
outsl
push
dec
rolb
lods
mov
jbe
sbb
xchg
inc
xor
cs
mov
push
adc
adc
push
mov
subb
lcall
push
sub
xchg
inc
call
adc
aam
popf
sarb
mov
jne
pop
jp
lret
jo
xlat
jmp
sub
mov
add
lods
adc
repz
inc
mov
lock
lock
ljmp
notl
mov
cli
lods
fmull
cmp
push
fists
mov
mov
jge
fcomi
or
sbb
mov
jo
bound
loope
mov
out
cmp
cwtl
and
rcr
out
sub
push
xchg
lea
push
mov
inc
adc
fmuls
mov
mov
pop
mov
dec
out
or
ret
sub
cmp
pop
rcll
add
mov
adc
xchg
sub
mov
aam
fimuls
pop
loopne
ss
imul
pop
inc
mov
gs
flds
arpl
popa
int3
mov
rorl
jg
sahf
rol
cs
mov
arpl
ja
jge
jmp
sti
push
sub
and
cmp
inc
decl
sub
fidivs
xor
shrb
inc
nop
and
mov
mov
or
jle
icebp
je
loopne
lock
adc
ljmp
ljmp
sbb
push
pushf
loopne
adc
lods
mov
outsl
shll
add
inc
aad
xor
and
push
or
mov
jle
dec
mov
push
mov
in
mov
jno
sbb
int
js
adc
xchg
push
mov
gs
add
mov
test
push
adc
fadd
sbb
and
mov
fchs
dec
dec
imul
stos
sub
adc
fwait
les
cmpsb
dec
cli
inc
mov
sub
push
int
gs
in
mov
test
test
adc
jmp
popa
sbb
jle
inc
dec
or
and
jb
cld
dec
and
pop
adc
in
jns
sbbl
icebp
mov
out
jmp
push
cmp
mov
push
fstpl
in
lret
in
pop
mov
mov
outsb
scas
jmp
jbe
sub
pfmul
pusha
mov
push
dec
cmpb
icebp
push
jmp
out
sbb
clc
pop
imul
mov
notl
sub
jmp
cwtl
adc
xchg
inc
add
mov
mov
js
add
jnp
daa
pushf
xchg
push
xor
mov
jbe
lret
test
mov
or
test
nop
dec
dec
add
sti
push
sub
mov
mov
es
mov
dec
cmc
pop
add
and
adc
jbe
dec
xchg
jae
xchg
pusha
aas
xlat
data16
jg
adc
cld
cmc
fmul
sbb
inc
adc
ret
jno
mov
xor
xchg
or
cmp
pop
or
mov
leave
pop
mov
xchg
add
and
pushf
or
or
popa
jno
aad
cmpsl
fcmovnu
subb
aas
dec
daa
jb
xor
xchg
leave
push
les
pop
daa
daa
dec
in
ds
movsb
in
inc
cmc
fwait
mov
push
shll
fdivl
jbe
repz
pop
pop
lods
jl
repz
cmp
xor
adc
push
fisubrl
and
xchg
add
and
cmpl
bound
into
mov
sahf
addr16
xchg
cmp
scas
ds
xlat
std
cmp
setnp
mov
cmpsb
int3
sbb
mov
cmp
push
in
mov
inc
and
addr16
stos
or
aaa
mov
pop
cmpb
inc
je
xchg
mov
scas
sbb
cmp
popa
test
lret
and
bsr
inc
xchg
xor
fdivrl
lahf
outsl
add
es
pushf
jnp
or
push
add
xchg
push
jl
pop
cltd
sub
bndstx
or
dec
xor
sbb
jecxz
test
ss
inc
pop
dec
mov
mov
inc
sbbb
or
and
in
data16
adcl
inc
cltd
out
xchg
fistpl
push
out
push
xchg
or
shl
cmp
imul
rcll
in
sub
cmp
xchg
clc
in
cmpsl
cmp
iret
xor
call
and
out
cmpsb
cmpsl
inc
mov
pushf
mov
into
out
mov
popl
xchg
pop
sub
movl
adc
ss
jmp
add
lahf
jg
cmpsl
inc
in
gs
add
pop
mov
cltd
jae
xor
mov
push
das
cld
cld
pusha
nop
xchg
nop
xor
dec
or
jle
or
mov
cmp
mov
mov
mov
stos
push
je
push
jp
push
add
push
inc
lret
pop
xor
add
scas
lcall
push
pop
and
pop
jl
cmpb
dec
inc
clc
pop
mov
roll
mov
mov
dec
repz
out
cld
fwait
stos
mov
cmpsb
lods
sub
fldt
sub
pop
mov
js
jb
in
enter
in
xchg
and
cld
fwait
out
pop
in
std
mov
sub
in
add
aaa
in
ja
adc
stc
cmp
popf
dec
or
popa
out
push
pop
sbb
popf
or
repz
jns
insl
push
out
sbb
cmc
or
cmp
mov
jg
push
cmpsb
imul
fwait
sti
sub
add
or
pop
rcll
pop
push
call
cmc
and
xlat
fistpl
add
dec
xchg
shlb
dec
inc
push
cmp
add
xchg
xchg
mov
add
adc
into
inc
mov
out
mov
aas
inc
cmpsb
mov
in
xchg
or
stos
add
jle
rolb
xchg
cmp
imul
loope
pop
cwtl
lret
insl
cmpsl
fwait
adc
push
mov
sti
mov
loope
add
and
add
loopne
inc
dec
xchg
in
aam
fildll
push
push
out
mov
xchg
lods
push
cltd
or
mov
mov
shll
incl
data16
dec
pop
sahf
dec
bound
jno
in
je
fdiv
mov
mov
sbb
push
mov
mov
inc
loopne
loopne
inc
popf
cmp
mov
addr16
and
icebp
mov
xchg
cmc
mul
ljmp
cmpsb
xchg
cmp
xchg
jle
push
cmc
mov
inc
jo
xlat
and
mov
es
imul
pop
and
inc
popa
cmpsb
aad
sbb
dec
lds
adc
das
mov
aam
mov
xor
jmp
aad
xchg
mov
mov
adc
loop
or
adc
mov
xor
xor
adc
sub
mov
data16
mov
jbe
mov
rcr
mov
sbb
cmpsl
mov
pop
in
add
out
mov
in
in
mov
jns
inc
test
sar
jge
pushf
push
jl
jnp
push
iret
sbbl
pop
enter
push
jge
ljmp
gs
add
push
bound
jp
call
jae
shll
fsubs
lock
sbb
rcl
cmp
or
lock
test
into
das
lret
arpl
daa
adc
mov
push
movsl
dec
push
and
push
add
js
inc
xor
and
adc
mov
dec
jle
daa
adc
mov
bound
cmp
repnz
dec
push
mov
cmp
aam
out
repnz
mov
mov
outsb
fsubrl
jno
imul
sbb
xor
xchg
sub
jo
outsl
xor
data16
xor
lock
testl
testb
sub
add
repz
lcall
mov
mov
mov
ds
or
mov
mov
or
cmc
mov
push
ficomps
xchg
and
out
lcall
out
and
cmp
mov
sub
stos
xor
inc
loop
cmp
lods
and
and
fwait
xlat
jnp
pusha
add
push
xchg
scas
add
pop
out
xchg
push
xor
mov
cmp
fiaddl
mov
mov
int3
and
daa
pop
lds
int
pushl
push
iret
xchg
mov
lds
es
push
pop
adc
nop
mov
lods
xchg
rol
lret
push
and
lea
inc
imul
push
fldl
notl
jg
jbe
push
and
and
xchg
adcl
jp
mov
xchg
sti
leave
je
arpl
jecxz
je
xchg
xor
ljmp
mov
and
test
mov
or
ss
loope
inc
movsl
add
or
push
cmp
or
out
cmpsb
pusha
les
pop
sti
stos
in
and
orl
popa
dec
inc
mov
jne
daa
push
ds
sub
sbb
sub
or
aaa
stos
js
rolb
out
cwtl
out
inc
push
xor
lcall
imul
movsb
into
fisttps
pop
cmp
dec
lret
ret
push
push
call
int3
mov
lcall
fmuls
rcrb
ljmp
pop
outsl
mov
adc
cmp
shrb
scas
loop
movsb
mov
inc
mov
or
inc
cmp
hlt
pop
or
cmp
mov
push
adc
inc
imul
mov
int3
pop
out
or
lcall
es
sub
mov
icebp
cmpsl
pusha
jne
cli
mov
mov
sbb
sub
sbb
jae
push
jg
ljmp
int3
int
outsl
arpl
insl
dec
fildl
insl
xorl
inc
in
fcoms
hlt
imul
add
sub
cwtl
mov
push
aam
cmp
pop
mov
sarb
call
add
mov
mov
xchg
outsl
xchg
insl
sbb
sub
nop
movsb
insl
push
fsts
js
sub
lods
pop
and
aam
sub
bound
daa
into
jno
nop
add
int3
out
pop
aas
and
xchg
cmpsl
mov
neg
int
call
out
xor
mov
inc
sbb
dec
xor
pop
xor
mov
cmp
popl
sbb
fstp
mov
and
shrb
add
xor
inc
test
jg
les
adc
add
pushf
into
xchg
adc
repnz
xchg
inc
test
out
lods
push
pop
mov
out
inc
dec
arpl
pop
jno
xlat
mov
sub
add
aas
xchg
jae
xor
test
cmp
loop
or
cmp
cmp
ret
mov
aam
ljmp
pop
test
add
or
xor
sahf
dec
iret
test
sbb
in
jp
sub
xor
pop
cmpsb
outsb
test
mov
xor
lret
imul
in
enter
outsb
out
sahf
xchg
jno
cs
sbb
lcall
pop
dec
out
out
adc
xchg
mov
xchg
xor
push
dec
test
std
dec
mov
xchg
out
fs
jmp
mov
pop
push
test
mov
cltd
lock
mov
mov
pop
ja
nop
jmp
cmp
xchg
and
or
cmpl
adc
sub
imul
mov
bound
mov
xchg
or
push
test
push
aas
movb
or
pusha
push
adc
mov
nop
adc
outsl
pop
and
xorl
mov
jae
dec
push
hlt
ds
xor
mov
dec
pop
bnd
pop
push
push
outsb
push
jae
popa
sub
mov
pop
jp
cmovnp
add
loope
shrl
sbb
inc
jns
mov
pusha
fldt
xchg
inc
fwait
stc
ljmp
movsl
and
mov
xchg
mov
lret
mov
scas
sub
pop
mov
icebp
rolb
push
ret
scas
adcb
sbb
xor
ja
xor
pop
jo
andl
dec
aas
mov
orb
jnp
mov
insb
cmpsl
rorb
sbb
nop
rorb
filds
cmp
adc
push
repz
xor
and
sarl
sbb
pop
cltd
arpl
xor
bound
ja
mov
push
inc
leave
ds
ds
and
movsl
dec
pop
jbe
fsubl
fisttps
xchg
adc
js
dec
inc
daa
mov
ldmxcsr
inc
dec
adcb
jg
repnz
mov
dec
imulb
xor
dec
mov
psubusb
rolb
sbb
mov
shlb
mov
or
data16
mov
mov
scas
stc
mov
and
mov
adc
add
cmp
pop
and
or
add
int3
xchg
movsl
cmc
fs
add
iret
std
fiaddl
call
cli
jns
mov
addr16
sarl
xchg
add
mov
dec
adc
cmp
lret
fwait
inc
jne
adc
mov
add
aam
add
pop
or
mov
clc
add
outsb
mov
cwtl
add
iret
lret
repz
loope
clc
xor
sbb
mov
ret
cmpsl
filds
pop
daa
xor
enter
adc
cmp
xchg
xchg
leave
or
add
test
and
divl
mov
popa
outsb
int
or
ljmp
test
jns
ljmp
jge
xchg
mov
inc
imul
outsl
sbb
inc
imul
sbb
adc
mov
repnz
xor
ja
pcmpgtw
lea
xchg
cli
xchg
or
fwait
in
rcrb
push
std
fwait
inc
xchg
sti
popf
sub
pop
insb
ds
mov
test
jp
pop
sbb
mov
sbb
mov
push
aaa
mov
push
iret
mov
mov
cmp
xchg
repnz
push
in
push
adc
aam
sbb
scas
subl
mov
js
mov
adc
inc
fs
call
mov
lret
sub
test
shll
in
int
popf
add
pop
xor
pop
xchg
mov
sbbl
inc
xor
mov
jae
adc
mov
xor
xor
addb
cmpsl
insb
rol
inc
mov
mov
lock
jge
in
test
mov
inc
jg
daa
jmp
jge
mov
sbb
adc
cmc
mov
add
mov
lea
pop
cld
icebp
mov
push
jle
push
dec
add
jae
cwtl
pop
ljmp
or
call
out
mov
sarb
les
xor
xorb
pop
inc
mov
sarl
mov
js
jl
push
insb
mov
shll
lret
xchg
inc
out
pop
inc
addr16
and
loopne
loop
mov
rcrl
pop
test
jg
rclb
pop
jnp
test
jae
repz
scas
dec
xor
pop
push
lret
and
js
in
ljmp
rep
aaa
pop
xchg
mov
and
jae
xchg
js
sub
and
xchg
push
sahf
in
std
pushf
les
test
imul
shll
sti
pop
into
inc
add
fadd
imul
cld
jl
xor
lods
and
fadds
mov
mul
jb
xor
aaa
movsl
sub
xchg
inc
repz
rolb
test
leave
cmp
popa
movsb
imul
out
sahf
xchg
jmp
repz
js
inc
mov
push
push
arpl
mov
push
and
mov
lea
pop
lret
orb
scas
mov
test
xchg
out
shlb
addr16
dec
xlat
inc
push
bound
and
jp
fsts
ljmp
adc
call
mov
lods
add
out
mov
decb
ss
ja
shrb
int
push
xor
icebp
jmp
sahf
mov
xor
andl
xchg
dec
push
adc
sub
insl
in
or
lds
leave
sub
mov
out
cmp
add
mov
add
das
xchg
ficompl
xor
and
andl
mov
cltd
loope
mov
das
movsb
inc
jbe
and
mov
and
jle
sbb
mov
lahf
pop
mov
sbb
out
cmp
mov
fisttpl
nop
rcl
sahf
jno
pop
cmpb
inc
loope
jns
hlt
inc
gs
xor
imul
ss
jnp
pop
jl
scas
arpl
scas
ss
incb
mov
out
jg
std
push
inc
pop
jae
cmp
nop
jb
push
push
mov
int3
rcll
sub
or
and
aas
pop
jae
xor
xlat
pusha
add
ds
fcmovbe
push
arpl
add
mov
cmpsl
mov
adc
fsubrl
jle
mov
dec
mov
jbe
outsb
je
out
dec
shll
mov
icebp
shll
sbb
mov
leave
mov
sub
mov
in
ja
dec
xor
shlb
jg
sub
and
mov
ret
mov
mov
mov
negl
jmp
stc
adc
jg
sbb
pop
shrb
sbbb
in
sbb
add
fidivl
int
jb
call
jbe
and
or
out
or
cmp
push
pop
jne
fistps
add
ljmp
dec
enter
sub
inc
mov
jne
negb
test
xor
pusha
mov
call
adc
shlb
sub
imul
rcrl
push
push
mov
pushw
in
aam
or
xchg
lahf
lret
dec
xchg
xor
add
sbb
std
iret
adc
inc
adc
xor
shlb
xchg
mov
dec
test
shl
mov
pop
xchg
cmp
cltd
push
das
xor
pop
inc
push
and
push
sbb
push
leave
ljmp
cmp
lods
scas
ds
arpl
ret
xlat
jecxz
dec
pop
cmpsl
mov
int
inc
ret
or
lea
xchg
imul
jb
test
pop
xor
and
cmp
or
iret
add
adc
sub
shll
mov
popa
sub
inc
lods
jnp
jne
jl
in
orl
sub
insl
aad
sub
and
add
pop
adc
sbb
jecxz
add
mov
xlat
push
pop
pushf
pop
cwtl
in
outsl
mov
shll
xor
add
pop
xor
adc
jo
sub
mov
andl
out
sti
mov
mov
ret
stc
outsl
pop
sahf
cmpsl
sub
add
andl
test
decb
nop
xor
or
mov
out
adc
xchg
ret
ljmp
shrb
gs
test
push
mov
inc
xchg
push
push
adc
movsl
dec
inc
xchg
inc
add
and
outsb
inc
add
sbb
out
clc
and
pop
test
xchg
mov
inc
rorl
bndldx
sbb
pushf
xchg
inc
xchg
pop
ss
inc
mov
test
and
sahf
outsb
inc
push
jmp
push
aas
dec
push
dec
sub
push
pop
lods
fcompl
movsb
je
jae
mov
and
sbb
xlat
inc
movsb
jmp
add
push
jp
out
mov
mov
jp
test
inc
dec
sarl
mulb
cmc
jmp
pop
jae
mov
adc
in
xchg
mov
xor
out
cmpsl
data16
push
shrb
loopne
cmp
xor
cmp
mov
inc
mov
push
xor
sub
les
adc
add
and
sahf
shll
sbb
xlat
or
arpl
jg
ljmp
add
mov
pusha
sub
jnp
pop
mov
inc
or
pop
and
les
std
fcoml
shll
scas
push
xchg
adc
ljmp
and
pop
adc
cmpsl
iret
insl
ss
sub
dec
pop
sar
mov
xchg
test
aas
pop
inc
adc
push
aam
mov
push
mov
in
loop
cmp
dec
lods
and
das
stos
movsb
sbb
cmc
cmp
cmp
push
sbb
xor
icebp
aas
fadd
imul
mov
aad
add
mov
push
fmull
insb
lods
aad
test
je
mov
stc
dec
jl
and
nop
inc
rep
cmpb
ljmp
and
mov
daa
xor
pop
mov
pop
sbb
cmpsl
fwait
pop
push
call
das
fidivrs
inc
jmp
cmp
xlat
mov
shll
mov
inc
cmpsb
pusha
lret
jl
outsl
push
das
jecxz
repz
mov
int
lret
sbb
popf
sub
sub
xor
mov
in
inc
pop
xor
fimuls
cmp
out
or
insb
bound
rolb
ret
mov
jg
jp
pop
movsb
sbbb
push
jo
mov
push
inc
call
aaa
insl
cmp
lret
loop
test
ljmp
xchg
enter
aam
or
sub
shlb
jo
inc
pop
mov
dec
fisttpll
add
mov
out
jl
sub
fsubr
dec
adc
gs
arpl
push
fs
mov
aas
ja
jno
loope
lahf
xor
gs
mov
inc
ror
push
push
pop
loope
push
add
outsl
addr16
or
cmp
jecxz
shrl
jl
jbe
ret
mov
xchg
mov
xor
sbb
jmp
mov
inc
jae
cmp
pusha
xchg
pop
cmp
test
jae
xchg
lea
push
imul
andb
xchg
aas
mov
idivl
jno
fidivrl
sub
jge
stos
out
fwait
xchg
in
push
pop
repz
in
xchg
or
mov
ljmp
lcall
inc
dec
cmp
orb
mov
cmp
out
jb,pn
mov
mov
inc
loop
push
mov
jmp
aas
pop
push
ja
sub
cs
jb
outsb
push
mov
clc
lret
test
pop
arpl
mov
mov
mov
mov
adc
mov
nop
fidivs
add
pop
xchg
xor
push
xchg
scas
mov
imul
lret
lock
cmp
or
push
adc
faddl
imul
stos
out
and
das
or
dec
mov
sbb
add
add
sub
sub
pop
mov
pop
and
mov
mov
js
cmp
je
cmp
repz
inc
xorb
lods
ret
xchg
loop
repnz
push
xchg
or
mov
sbb
int3
fildll
test
shl
jno
adc
sub
cmp
ret
mov
je
xchg
lods
mov
clc
stc
loop
push
pop
fiaddl
lcall
mov
ret
in
addr16
push
outsl
stos
in
xchg
mov
and
adc
dec
pop
and
loope
or
adc
adc
mov
mov
and
xchg
lods
loope
xchg
mov
xor
fldenv
pop
les
into
outsl
mov
xchg
cltd
lea
mov
xchg
inc
repnz
mov
pop
lods
bound
cwtl
in
cmpb
add
fs
xor
inc
mov
in
pop
scas
cltd
in
pop
insb
push
xchg
mov
jo
mov
dec
cli
test
adc
or
add
add
dec
cs
push
jl
orl
ds
inc
test
stc
adc
jle
push
cmp
pop
pushf
sahf
fwait
xchg
das
popa
inc
not
sub
movsb
imul
dec
adc
cmpsl
push
mov
faddl
out
mov
inc
or
or
bound
xlat
dec
jbe
ror
push
mov
imul
sub
pop
push
inc
aas
push
lds
inc
adcb
in
or
pop
fmuls
dec
pop
rolb
leave
movsb
pop
pop
stos
mov
xorl
pop
scas
or
inc
push
rcrb
pop
cltd
ss
loope
das
push
ds
push
shll
dec
cmp
or
iret
enter
jne
sbb
iret
jecxz
outsl
add
cli
mov
push
out
lds
rcll
insb
pushf
in
jns
adc
lcall
cld
in
cmpsb
cmp
add
mov
fildl
jmp
nop
loopne
dec
inc
scas
mov
pop
or
popf
enter
popa
sub
pop
or
lock
xor
sarl
push
inc
xlat
pop
pop
pop
cmp
lret
in
jae
movsl
ret
mov
dec
jp
inc
jo
lret
sbb
cmc
mov
leave
cmp
pop
outsl
lret
lcall
push
adc
cld
rcll
jmp
mov
jae
insl
pushf
or
sbb
hlt
push
dec
ds
out
add
lret
push
std
fs
stos
sbb
inc
repz
test
clc
mov
rolb
xor
xor
ds
adc
fs
popf
cmp
mov
lcall
stos
arpl
inc
inc
aaa
dec
addr16
and
mov
arpl
int3
rcrb
out
das
mov
pop
ret
in
inc
incb
mov
and
mov
inc
imul
mov
popa
ss
repz
jb,pt
insl
insl
sub
pop
cmpsb
sahf
jns
or
leave
ja
mov
push
xor
scas
and
imul
cmp
mov
inc
cmp
jg
adcl
aas
inc
pop
ss
push
xchg
dec
or
sbb
xor
or
cld
orl
idivl
dec
enter
add
dec
aas
jmp
jmp
jl
std
inc
xchg
imul
add
mov
loope
mov
pop
out
cli
xchg
imul
iret
jb
cld
shl
mov
test
xchg
js
pop
mov
sub
mov
jg
dec
jnp
and
pop
jp
call
cld
push
adc
mov
push
mov
adc
xchg
and
xor
jmp
jecxz
jg
push
lods
mov
pop
int3
stos
jl
call
or
mov
movsb
mov
out
adc
xchg
cld
outsb
mov
bswap
or
in
and
push
jne
xchg
mov
adc
add
clc
xchg
jge
and
sub
push
adc
mov
xchg
inc
jp
stos
cmp
dec
ljmp
mov
call
scas
add
pop
mov
outsl
pop
xchg
or
outsl
or
in
test
add
mov
sti
jle
stos
rclb
aad
cld
test
aam
push
aad
cmp
xlat
cwtl
jp
mov
sbb
lcall
imul
sub
addr16
sti
pop
or
jne
bswap
cmpsl
fcmovb
divl
pop
xchg
cmp
out
mov
ret
addl
push
popf
pushf
pop
pop
aas
jecxz
bound
mov
sbb
push
addr16
fwait
inc
push
jge
je
dec
or
lea
mov
mov
xor
sbb
shll
mov
mov
ret
mov
ljmp
and
rclb
xor
icebp
inc
add
bound
ljmp
mov
loope
cmp
dec
test
scas
sub
add
cli
push
inc
jmp
std
cmpsb
jle
iret
mulb
cli
dec
adc
inc
gs
frstor
dec
fdivp
sub
sbb
rorl
jbe
xchg
ja
and
test
sbbb
out
mov
push
sbbl
mov
push
push
sahf
push
lret
push
divb
fcmovne
sub
hlt
mov
mov
fs
sbb
pop
push
dec
fsubrl
icebp
bound
add
push
inc
dec
loop
mov
sub
or
nop
sbb
mov
es
sub
mov
fmull
call
mov
shrb
and
sbb
ss
or
jb
add
mov
xlat
add
cwtd
mov
rorb
sbb
in
push
jmp
popa
mov
clc
icebp
pop
out
rorb
rcl
mov
pusha
jmp
sub
ret
dec
mov
into
lret
dec
cmp
pop
or
cld
mov
inc
gs
xor
adc
data16
call
jne
mov
leave
inc
sbb
cwtl
out
out
sbb
cli
test
imul
movsl
jp
inc
bound
and
sbb
out
loopne
stos
mov
and
fnsave
or
lret
mov
in
fmulp
stos
pop
adcl
bound
lret
inc
test
mov
rclb
sub
imulb
popf
movsb
sub
jnp
mov
add
inc
adc
out
popf
sub
lret
adc
mov
dec
mov
jnp
out
movsl
mov
ja
xor
xchg
adc
mov
inc
out
dec
cmp
scas
inc
mov
rol
test
outsb
lret
out
aam
call
push
jno
addr16
movd
por
mov
scas
push
jg
push
pop
pusha
js
dec
add
ljmp
rcl
js
xchg
cwtl
fcomps
push
or
ficoms
push
dec
mov
adc
mov
lea
lret
inc
push
push
lret
cmpsb
add
cltd
jecxz
scas
adc
sarl
mov
test
fidivrl
and
cld
jl
pusha
cmpsl
mov
xchg
shlb
xchg
inc
ret
in
cmp
cmp
jns
pop
mov
lcall
fwait
aam
pushf
pusha
mov
add
jg
jle
outsb
jmp
add
in
fs
cmpsl
inc
popf
ret
add
xor
jmp
xor
iret
adc
add
adc
lcall
clc
test
hlt
xchg
mov
mov
faddl
pop
int
cmp
dec
jo
ljmp
cs
in
add
scas
xor
leave
inc
fidivrl
push
dec
in
xchg
shlb
push
cmp
clc
push
int
sub
sub
inc
insb
testb
sahf
mov
mov
or
cbtw
jnp
stos
lock
inc
adc
inc
mov
cmp
jle
loope
outsb
xchg
add
lea
cmpsl
iretw
stos
sarl
xchg
cmp
mov
bound
push
jge
inc
nop
aaa
sub
lods
pop
lds
xor
inc
jecxz
pop
or
sub
ljmp
and
popf
dec
adc
ljmp
pop
mov
pop
test
mov
jecxz
sbb
popa
jmp
mov
loopne
test
push
je
imulb
ljmp
mov
push
add
lds
jbe
adc
mov
pushl
popa
test
mov
or
mov
and
xor
loopne
dec
dec
pushf
in
lods
mov
aas
add
dec
pop
xchg
sbb
mov
pop
xchg
xor
and
ficoml
clc
jo
das
xor
xlat
mov
insl
jae
testb
bound
cmc
mov
and
xlat
lods
and
fldenv
cmp
roll
ret
lods
inc
out
mov
dec
cmp
int3
xchg
and
cmc
lock
in
fimull
cwtl
fildll
nop
xor
sub
nop
cmp
cs
cmp
push
fnstcw
add
lcall
pop
shl
lcall
push
divb
cmpl
sub
pop
mov
addr16
fsubl
into
mov
or
das
daa
xor
popa
lcall
gs
daa
push
jg
and
mov
in
aad
lahf
inc
mov
imul
repz
popf
ret
xchg
inc
stc
ficoml
popa
cmp
push
movsl
movsl
jl
fs
xlat
scas
xor
xor
mov
sub
jl
cli
cli
dec
cmp
cmp
mov
push
stos
mov
add
sbb
popf
mov
addr16
push
lea
sbb
jmp
cmp
or
mov
lds
movsb
mov
push
mov
push
fs
push
and
mov
xor
add
sub
cmp
dec
lcall
in
pushf
sub
scas
popf
repz
xchg
cmp
mov
js
jno
loop
roll
clc
fs
and
and
fldcw
ret
fmull
mov
lds
mov
fistpll
mov
test
mov
mov
ds
jae
rolb
sahf
stos
xchg
movsl
fcmove
popf
or
jnp
push
loopne,pt
mov
in
mov
lret
movsb
xor
icebp
push
jnp
leave
popf
mov
sahf
repz
mov
call
sub
add
mov
sar
jle
mov
lods
pop
push
jge
mov
jle
dec
in
dec
dec
arpl
js
cmpsl
push
aaa
inc
xorb
rcrl
pmullw
dec
sbb
aam
loop
mov
lds
pop
pop
cmp
mov
adc
in
cltd
repz
sub
fnstenv
adc
mov
clc
mov
jmp
jb
rorb
sbb
pop
sti
mov
inc
pop
add
mov
and
leave
push
inc
in
loope
or
pop
mov
adc
lcall
adc
mov
lea
inc
push
scas
or
mov
std
nop
xchg
jnp
fldcw
xchg
mov
ja
or
sbb
sub
sbb
and
leave
pop
jle
fisubs
push
jns
inc
sbb
icebp
scas
cltd
push
mov
push
es
or
adc
and
out
jb
loope
xchg
cmp
scas
dec
cli
fstpl
cwtl
aaa
cmpsb
cmc
cltd
imul
sbb
movsl
shlb
lcall
mov
xchg
or
inc
les
pushf
mov
cmp
or
leave
and
mov
movsl
fstpt
lcall
or
pop
ficoml
mov
sub
sahf
push
addr16
dec
mov
je
jmp
xchg
mov
pop
mov
xchg
sbbb
or
inc
fistpll
out
aam
cmp
mov
or
jp
mov
adc
flds
fidivl
std
daa
bound
or
push
fbld
sbb
aad
mov
test
and
ret
adc
jl
cmpsl
xor
push
inc
mov
rorl
jnp
or
les
rclb
pop
popa
pusha
mov
roll
jae
in
lods
cmpsl
pop
lcall
or
cmc
xor
mov
xchg
scas
cmc
inc
ss
movsl
xor
cmp
cmp
es
enter
repz
cmpl
and
outsb
cmc
nop
jno
mov
xchg
popa
aas
inc
mov
out
mov
inc
jmp
scas
ja
ret
mov
mov
repnz
aam
aaa
push
mov
daa
cwtl
inc
or
fst
lea
cmp
sbb
add
js
movsb
push
scas
cli
pop
sub
jo
xchg
outsl
inc
mov
in
and
ds
jbe
push
jg
mov
dec
inc
jg
xchg
mov
cmove
inc
insb
mov
inc
jb
mov
mov
in
shrb
push
repz
fadd
sbb
int3
popa
and
pop
push
in
sbb
cmc
mov
fwait
scas
sbb
xchg
mov
scas
mov
imul
sbb
mov
loopne
or
cmp
fimuls
sbb
dec
jne
mov
jecxz
cmp
sbb
xor
iret
or
inc
mov
jno
xchg
negb
mov
cmc
shrb
fs
mov
mov
mov
cmc
mov
pop
pop
ret
lcall
rorl
sbb
movsb
jl
cmpsl
xor
movsb
ljmp
pushf
cmc
add
js
in
inc
xchg
mov
inc
and
mov
sarb
and
adc
push
mov
dec
mov
sbb
lcall
ss
cmp
xor
out
sahf
ja
push
enter
loope
push
sbb
mov
popl
and
mov
rorb
addr16
pop
mov
popa
lcall
cmp
or
andb
ret
mov
and
and
movsb
movsl
add
fldcw
push
test
push
insl
sbb
add
adcl
imul
push
mov
pop
sti
insl
gs
aas
dec
push
cmp
jno
loope
daa
pop
std
outsl
xchg
cmp
fidivs
iret
jnp
pop
mov
or
lods
sbb
sbb
and
inc
mov
mov
inc
dec
sbb
hlt
pushf
or
jmp
add
sbb
leave
cmp
push
and
add
pop
pop
fistpll
push
dec
xchg
push
jns
sub
pop
mov
cwtl
test
jmp
or
fcompl
outsb
sti
dec
sbb
fmull
sahf
pop
pop
mov
lret
out
lahf
xchg
xchg
xor
test
movsl
imul
ffree
cs
je
inc
icebp
mov
ror
imul
pop
inc
icebp
das
inc
cmp
xchg
fisttpll
inc
or
mov
mov
arpl
add
jo
sub
sbb
lahf
fimull
mov
sbb
pop
mov
into
pop
fs
lds
dec
jne
and
push
jno
sbb
jns
stos
test
pop
cmc
push
and
cltd
xchg
mov
add
pop
shrl
call
mov
push
sub
enter
cmc
xlat
gs
mov
or
sub
jge
sub
cwtl
and
sbb
stc
insl
test
mov
pusha
push
push
clc
dec
xchg
ret
pop
imul
pop
add
mov
mov
in
daa
jp
and
dec
imul
sahf
sub
outsl
jno
out
fstpt
sbb
cmpb
and
adc
std
inc
xor
and
adc
mov
jmp
push
adc
mov
or
mov
cmp
mov
sub
mov
push
shlb
and
insb
cmp
popa
pop
mov
lret
fs
xchg
and
sub
sbb
jno
rolb
and
in
je
dec
lret
fidivrl
xchg
shrl
std
add
lods
inc
dec
idiv
xchg
push
ja
lahf
sub
jnp
jne
and
jmp
mov
lgdtl
repz
das
les
stc
jle
mov
negb
imul
add
mov
fwait
and
shl
aas
es
out
mov
subl
lock
push
fsubrs
xor
hlt
in
adc
push
cmp
shr
xchg
into
pop
inc
cmp
cld
and
fiaddl
push
or
out
stc
leave
popf
dec
cmp
movsb
push
ljmp
outsl
mov
test
push
loopne
pop
inc
push
in
orb
xor
dec
jnp
ds
and
pop
enter
js
xor
aad
out
jae
lahf
repz
mov
lock
xchg
aam
push
pop
jmp
sbb
sahf
push
push
fbstp
out
lock
push
inc
jecxz
movsl
ror
jo
call
fcoms
push
ja
add
lret
out
adc
sbb
or
sarb
sub
out
je,pn
leave
push
adc
cmp
jnp
push
or
and
pop
sbbb
and
cwtl
fisubl
jns
shr
cmp
adc
jbe
ret
mov
rorb
and
push
cwtl
dec
sub
imul
test
int3
xchg
out
aam
xchg
les
arpl
pop
out
add
xchg
daa
ja
sbb
rclb
in
mov
inc
shrl
pop
call
mov
nop
fisubrs
or
cld
and
cmpsb
add
push
jne
xor
sbb
into
ss
jg
fisubrs
pushf
stos
mov
jg
jnp
pushf
cs
push
push
ret
out
or
hlt
iret
cmp
in
add
xchg
sbb
ja
movsb
lahf
nop
std
outsl
mov
cmp
imul
push
test
mulb
xor
or
aaa
mov
xchg
pop
jp
stos
mov
dec
loope
imul
lret
xor
and
adc
mov
dec
xor
fsubrl
pop
mov
lods
popf
pop
mov
dec
add
mov
pop
and
imulb
sbb
mov
sub
add
mov
gs
adc
fistl
mov
data16
xchg
imul
xchg
xchg
int
jnp
cmp
xor
arpl
test
and
jecxz
push
aas
call
call
sbb
rol
adc
fstl
lods
inc
sarb
jmp
add
js
push
or
mov
push
xchg
push
loop
shl
lods
push
ret
movsl
mov
xchg
inc
stc
or
and
and
idivb
stos
cmp
inc
xor
mov
cwtl
jbe
out
aas
jge
test
movsl
mov
xchg
push
mov
icebp
adc
sbb
xor
jg
or
scas
sub
xchg
push
xor
loopne
and
imul
int3
sub
jb
in
jl
push
push
sub
jbe
inc
lcall
adc
loope
xor
callw
lods
shrb
imul
stc
mov
addb
lret
fwait
pusha
pop
mov
hlt
jae
aad
mov
pushl
push
into
push
leave
jecxz
jle
sbb
divl
cmpsl
mov
jnp
jno
in
loopne
mull
int
cmp
dec
jae
or
add
mov
dec
pop
fld
and
sahf
subl
lahf
mov
and
pop
nop
and
imul
addr16
movsl
pop
sbb
jl
adc
repz
mov
in
jge
push
lock
and
movsb
lahf
mov
jl
adc
mov
stc
hlt
fdivl
adc
js
in
or
adc
sub
loope
scas
loop
clc
or
sub
sbb
pop
push
loope
cmp
negl
outsb
xchg
pop
mov
lahf
fisubs
adc
mov
sub
and
clc
xchg
xchg
ds
jne
push
or
lret
mov
imul
jg
add
fs
lcall
dec
push
es
push
mov
jno
add
xchg
mov
adc
lods
into
cmp
mov
lahf
lods
imul
shl
xchg
in
sbb
jne
fnstcw
int3
dec
mov
xchg
push
bound
cmpsl
jns
sarl
inc
call
cmpsl
push
xor
ftst
fisubl
or
mov
loop
xlat
lahf
inc
ret
and
imul
outsl
push
scas
sub
fcmovnu
jg
aam
lds
icebp
ds
out
imul
stc
leave
add
pop
movsl
sti
xor
dec
cmp
xchg
mov
push
ret
xchg
sahf
movsb
inc
insb
push
dec
sub
push
dec
je
loope
xchg
es
jbe
xor
dec
sti
mov
ret
ja
and
adc
test
add
in
dec
add
sar
xchg
add
es
test
mov
das
ds
push
sti
test
jnp
andl
in
sbb
pop
jl
cmpsb
xor
insb
xchg
adc
cmpsb
roll
and
xor
lahf
iret
pop
jae
jge
and
xor
mov
fwait
xor
arpl
out
cmp
sub
lds
xchg
jns
test
aas
gs
mov
adc
mov
lods
push
scas
in
test
data16
sbb
cmpsl
stos
cmp
mov
mov
jge
pop
aam
xchg
cmp
scas
push
push
ja
fcmove
mov
or
cmpsl
xchg
daa
push
lcall
notl
inc
mov
sbb
inc
jmp
inc
incb
sub
lahf
ds
sahf
add
imul
mov
mov
sbbb
mov
jle
xchg
movb
rcl
jecxz
or
imul
xchg
adc
mov
inc
sti
jne
ja
cwtl
jge
insb
xchg
popf
loopne
stc
xchg
xor
pop
orb
shrl
xchg
jle
in
ja
cmp
clc
fistpll
sub
ja
push
shl
fnstsw
icebp
ds
xchg
sub
dec
leave
mov
cmp
xchg
popf
gs
out
les
jns
outsl
std
mov
cli
fdivrs
fsubl
movsb
sub
jns
test
aas
dec
push
xchg
xchg
mov
mov
xor
or
add
push
lret
jae
pop
adc
cmp
xchg
add
lret
lahf
xchg
xorb
lea
and
pushf
sbb
push
or
xor
movsb
xor
test
lods
mov
jmp
sub
pop
inc
pop
shll
xor
jbe
pop
jecxz
inc
or
popa
das
xor
sbb
jbe
test
hlt
out
dec
sub
dec
fisubs
and
insb
cmpsb
fwait
imul
jl
push
stc
mov
mov
jmp
ljmp
addl
or
xor
sub
lcall
dec
out
fcompl
sub
lock
jle
fsubr
jl
adc
in
adc
fildl
scas
mov
add
notl
popf
mov
jmp
cmp
cmp
das
push
jo
clc
scas
sbb
dec
gs
sub
enter
xor
adc
xor
adc
lcall
cmpsl
call
xlat
fs
push
sub
test
bound
push
fs
jbe
push
lock
push
xchg
pop
add
sub
sti
ds
cli
addr16
xchg
xor
fwait
out
ss
or
xchg
or
fldenv
imul
frstor
fnstsw
pop
int
xchg
arpl
in
sbb
sarb
and
jmp
xor
mov
jle
and
jae
in
sub
arpl
andl
xor
xchg
fmuls
mov
sub
and
ret
cmpsb
push
pusha
shll
cwtl
mov
fwait
mov
loopne
outsb
push
dec
pop
clc
scas
xchg
lcall
scas
push
xor
pusha
mov
pop
loope
movl
lods
jg
jl
mov
inc
loope
in
or
dec
pop
push
dec
hlt
jmp
lock
fsubr
leave
loope
jecxz
add
int3
xchg
fisubrl
lods
pusha
arpl
xchg
pop
add
fldl
out
xchg
sbb
ret
adc
imul
pop
arpl
hlt
fmulp
call
hlt
movsl
cmpsl
dec
xor
test
stc
mov
ret
and
jg
test
pop
leave
sarb
jno
inc
sbb
gs
arpl
int3
fdivs
push
outsb
inc
xchg
mov
adc
dec
dec
cli
aas
adc
aad
dec
adc
mulb
div
pop
int
jae
rcll
test
mov
mov
push
outsl
pop
mov
cmp
lea
adc
je
xor
jne
aas
scas
loop
lcall
lods
fsubrl
pushl
sub
sub
imul
cmp
test
push
mov
dec
pop
jg
data16
pusha
sub
pusha
mov
pop
inc
mov
das
adc
rcr
add
rcrl
dec
mov
push
xlat
or
mov
adc
fwait
push
mov
jne
jns
notb
or
mov
lret
out
cmp
ficomps
mov
xchg
mov
cvtpi2ps
iret
xor
pop
roll
pop
repz
hlt
cmp
cmp
outsl
in
xlat
sub
push
outsb
cld
clc
out
cli
ja
sub
nop
aas
ja
bound
or
out
mov
sbb
and
cmp
sub
lods
sbb
lds
mov
xchg
into
addr16
mov
sub
inc
shll
fiaddl
or
ljmp
inc
push
aad
cli
ret
bound
xchg
or
imul
out
out
mov
lcall
push
rcrl
push
stos
dec
cmc
adc
mov
and
inc
inc
mov
add
xchg
out
mov
pop
pushf
daa
jbe
test
mov
or
jb
ljmp
inc
cmp
pop
sub
jge
outsl
inc
cmp
or
movsb
mov
mov
lret
fwait
dec
in
cmp
sub
loope
mov
mov
jl
pop
sbb
jno
push
loopne
aas
adc
jb
fwait
adc
sbb
lods
std
lret
dec
push
aas
pop
mov
dec
mov
cmp
roll
mov
loope
pop
sbb
mov
xchg
or
sbb
sub
cs
clc
jnp
jmp
scas
dec
in
pop
xor
cmp
scas
lea
cmp
mov
xor
int
gs
cmp
sbb
pop
cltd
sbb
mov
ds
fs
dec
add
sub
adcl
fldcw
pop
or
repz
stos
add
stc
icebp
xor
aad
ljmp
mov
ffree
and
and
xchg
pop
or
dec
sub
inc
and
fiadds
or
testb
mov
test
bound
call
push
mov
mov
pop
fidivrl
scas
adc
inc
adc
jmp
int
xchg
pushl
ret
in
cwtl
xor
or
daa
adc
shl
xchg
mov
cs
in
leave
fisubrl
loop
xchg
call
jnp
add
mov
test
lea
xchg
sbb
imul
rcrl
testl
xchg
inc
jp
adc
lock
mov
jg
fcoms
lahf
das
dec
outsl
mov
and
add
pushl
adc
stos
mov
cmp
or
fildl
adc
cwtl
jae
mov
shl
ljmp
lock
xor
lcall
daa
out
mov
pop
xchg
ss
adc
mov
xchg
cltd
xchg
aaa
sbb
test
jne
cmc
inc
push
sbb
je
cld
jle
push
dec
pop
cmp
sub
inc
mov
stc
fwait
mov
popa
scas
out
lret
jle
mov
xor
and
cmp
push
enter
jne
fwait
sub
push
mov
in
popa
xchg
mov
insl
je
sub
sbb
addr16
sbb
aad
inc
cs
mov
outsb
push
scas
mov
mov
and
cwtl
push
gs
xchg
mov
pusha
or
push
ljmp
push
rcll
lret
out
fnstsw
ds
jge
or
dec
cs
add
fistpl
and
scas
pop
cmp
xchg
sbb
nop
clc
sahf
jns
out
ja
push
iret
jp
mov
and
sub
adc
rorl
cmp
sahf
add
mov
sbb
mov
imul
xchg
dec
adc
leave
sbb
pop
jl
xchg
movsb
jmp
and
fmulp
inc
fcmovne
icebp
xor
xor
mov
test
adc
loope
jae
jae
int3
cmp
fbstp
xchg
adc
mul
push
fstl
dec
insb
jb
iret
cli
xchg
rorl
loopne
leave
lods
jmp
inc
insb
es
addr16
push
ljmp
and
fnstcw
inc
mov
mov
ficoml
out
dec
pushf
fistl
arpl
cmp
cmp
jg
or
popf
pop
mov
shr
or
push
jns
cmp
xchg
adc
and
mov
fmuls
mov
sbb
int
xchg
leave
int3
cmpsb
and
fsubp
cmpsb
les
mov
incb
mov
jne
ds
jl
push
dec
out
inc
scas
test
push
push
pushf
xchg
aaa
bnd
mov
lds
dec
bnd
nop
mov
pop
cmpl
rclb
pop
inc
sbb
les
dec
inc
push
jmp
in
and
push
cs
das
daa
mov
pop
jp
inc
mov
push
and
popf
popa
mov
dec
mov
sbb
and
xor
out
xchg
dec
je
sahf
sbb
xlat
jbe
roll
push
aam
je
lahf
fstp
insb
bound
cwtl
insl
mov
fsts
mov
aad
xor
insl
cmpsl
into
je
pop
or
in
mov
push
cltd
shl
in
sub
scas
dec
daa
mov
ljmp
addr16
jmp
inc
cltd
lods
cs
xchg
push
cmpsl
or
adc
cmc
add
out
mov
and
pushf
jl
mov
in
outsl
push
push
xor
mov
push
and
and
scas
push
mov
fnstcw
icebp
mov
fstpt
push
pop
hlt
icebp
cli
es
je
cmp
mov
enter
js
mov
testl
je
pop
xchg
arpl
jmp
adc
sub
sbb
sbb
jnp
jns
adc
arpl
iret
cmpb
sbbb
xchg
std
cmp
pop
jb
adc
mov
fsubs
adcb
fisubrs
pushf
sbbb
sbb
cmp
mov
dec
jne
or
clc
and
jbe
cmp
jmp
cwtl
icebp
cmp
js
xor
jnp
sub
dec
add
pop
pushf
lahf
icebp
fwait
adc
aad
jb
js
pop
fildll
xlat
pop
add
xlat
adc
mov
mov
pop
in
aad
xor
js
mov
lods
out
cmp
outsl
stos
lds
inc
scas
shrb
out
xchg
or
icebp
push
jp
jbe
pop
in
jnp
dec
jle
outsb
pop
adc
add
jge
into
pop
jg
xor
fidivs
sbb
stos
outsl
cmp
aad
ljmp
leave
mov
pop
or
ret
pop
xor
stos
sarl
or
and
xchg
cld
lret
sub
clc
and
in
cmp
repz
in
add
sub
es
push
jmp
movsl
sbb
ljmp
push
or
ss
mov
dec
out
pop
cmp
out
loop
test
sbbb
mov
sbb
inc
sar
insb
mov
scas
je
jge
lahf
push
fnstenv
movsl
jne
fsubl
subps
fcmovnb
mov
clc
cmc
enter
outsb
adc
push
int
out
cmp
loopne
mov
pop
call
sbb
arpl
testl
dec
outsl
out
out
scas
mov
iret
sbb
ret
test
pop
insl
mov
je
nop
inc
sbb
rclb
xor
int3
push
gs
push
push
mov
cs
xchg
add
out
jle
pop
sbb
lea
pop
aas
push
lock
xchg
xor
jl
imul
imul
rorb
sub
mov
repz
sub
mov
repnz
std
push
repnz
sar
ret
loopne
or
popf
push
iret
jnp,pn
fisttps
stos
xor
fmulp
mov
jge
and
shll
popa
xor
cltd
mov
cmpsl
dec
ja
mov
xchg
push
out
dec
xor
mov
mov
mov
xchg
cmpsb
mov
cmc
or
xchg
xor
popf
lret
cmp
inc
mov
inc
dec
lods
cltd
jmp
jmp
cmp
or
sub
or
jl
mov
movsl
lahf
scas
ret
in
out
mov
sbb
lea
push
mov
cmp
pop
jle
nop
push
cltd
ds
push
jge
sbb
inc
ljmp
mov
xchg
flds
adc
xor
or
iretw
mov
or
call
mov
addr16
jmp
call
pop
scas
cwtl
sub
pop
jbe
fcoms
push
out
cwtl
fisubrs
push
test
imul
loope
cltd
shr
aad
stos
or
fnstcw
sti
pop
mov
xchg
in
insb
stc
mov
mov
pop
jge
sub
mov
aaa
pusha
pop
mov
sub
sbb
es
js
aam
movsl
jb
dec
test
sbb
jns
sbb
push
dec
lahf
xchg
inc
pop
xor
push
popa
dec
jecxz
popa
dec
enter
in
xor
call
rcl
inc
lods
push
inc
nop
xor
xorb
mov
mov
mov
or
loopne
push
fdivl
es
test
leave
sti
add
mov
xor
std
or
dec
and
divb
mov
loop
popa
repnz
add
mov
loope
or
fisubl
jg
lcall
mov
cwtl
call
dec
outsb
adc
jmp
mov
nop
std
stc
loope
loopne
jg
data16
or
insl
test
mov
push
mov
add
sub
cli
loopne
outsl
in
lock
inc
ja
mov
sub
icebp
mov
cmp
cltd
or
fstl
ljmp
mov
in
out
pop
lds
outsb
lods
sbb
cmp
dec
xor
ret
icebp
lcall
in
xchg
lods
fs
or
pop
add
mov
iret
bound
les
lret
ljmp
add
out
data16
cmpsb
ss
sbb
xchg
cmpsl
adc
je
popf
in
or
fs
mov
mov
add
out
cmpsb
clc
sbb
ret
jp
rcll
iret
mov
fstl
ss
pop
dec
fimull
xlat
popf
jo
mov
lods
dec
inc
xchg
cwtl
aas
repz
sbb
pushf
inc
sbb
mov
aam
jo
mov
rcl
xor
cmp
mov
ret
bound
les
xchg
jno
stc
stos
add
insl
add
popa
out
add
mov
dec
insb
fstl
shlb
add
mov
sarb
jmp
sbb
repz
sarl
mov
push
bound
stos
gs
jnp
push
lret
hlt
jne
daa
imul
rclb
shlb
negb
sub
push
xchg
xor
xchg
inc
mov
in
or
adc
xchg
mov
je
sub
dec
push
xchg
mov
xlat
jno
and
jo
cmp
arpl
rolb
mov
jmp
daa
jnp
cmp
dec
sub
cli
inc
addb
xor
or
jne
lods
mov
mov
lcall
or
popa
and
clc
add
fwait
mov
int3
inc
adc
ja
cmp
pop
xchg
sub
mov
les
jle
and
enter
push
daa
or
sti
es
push
add
into
mov
sub
in
movsl
mov
push
mov
jge
push
cli
iret
push
stc
in
outsb
pusha
dec
scas
lock
cld
ss
out
sbb
mov
scas
hlt
pop
lods
stos
movsl
nop
shl
jmp
mov
or
cmc
lret
push
lea
xor
mov
in
test
push
inc
mov
fadds
ljmp
fcomps
fdivrl
xor
push
pop
mov
shl
and
outsl
bound
addb
rclb
ret
cltd
addr16
xor
hlt
inc
aam
dec
mov
xor
xor
int3
addr16
fisubrs
das
mov
jge
ret
add
gs
sbb
xchg
push
push
pop
mov
cli
or
xlat
out
mov
mov
fs
filds
pop
lcall
push
lds
movsb
add
testb
aad
mov
push
xchg
sahf
hlt
jl
pop
or
fcompl
out
push
out
das
mov
pusha
insl
dec
dec
sbb
mov
or
xor
scas
call
pop
push
pusha
inc
pushf
xchg
and
int3
in
push
push
fsubrl
add
cwtl
or
mov
jne
out
dec
jp
iret
das
sarb
out
jge
sub
lret
xor
pop
ljmp
call
pop
arpl
enter
xchg
cmp
jecxz
push
repz
shl
lea
dec
dec
pop
sbb
mov
push
sbb
and
add
aam
jle
clc
mov
add
or
inc
rep
mov
add
add
scas
fisubs
loope
sbb
movsb
add
and
sbb
or
fldpi
popf
jno
mov
pop
ljmp
pop
jmp
mov
fsubrp
mov
fsubs
push
ljmp
mov
dec
imul
sub
lock
dec
cmp
sbbl
push
fiadds
out
sbb
fcoml
cli
pop
xchg
inc
lods
faddl
rolb
lock
hlt
lods
loopne
push
adc
jl
out
icebp
js
sub
sbb
jle
cmc
dec
add
pop
xchg
jmp
xchg
and
inc
adcb
or
out
and
shll
lret
push
push
mov
punpckhwd
das
cmp
outsb
xor
xorb
push
sti
push
mov
lahf
xchg
xchg
jns,pt
jle
jno
mov
jb
xorl
into
ja
jb
or
jb
cmp
xchg
add
data16
inc
ja
sahf
ficompl
adc
sbb
xchg
cmp
jl
and
enter
lret
ror
and
add
sub
dec
imul
mov
enter
xor
pop
jle
in
outsb
call
mov
jecxz
push
mov
rol
and
daa
xor
dec
mov
shl
add
xchg
in
jmp
daa
xor
pushf
je
pop
xchg
pop
repz
mov
jo
jp
js
or
and
ds
mov
repz
sahf
jne
ljmp
push
pop
ss
cmp
jl
xchg
test
ret
into
mov
sbb
xor
pop
movsl
prefetch
and
sbb
scas
mov
insb
pop
in
cmp
cld
scas
repnz
push
and
loopne
pop
mov
push
aas
sub
pop
pushf
push
iret
fisttpl
mov
in
gs
sub
cwtl
mov
pop
mov
pop
and
cmpsb
xor
std
xchg
sub
push
or
xchg
xor
xor
mov
mov
push
jg
pusha
xchg
fisttps
mov
jb
or
sti
jnp
inc
jge
inc
adc
lods
test
sarl
sbb
clc
test
adc
popa
push
mov
jo
fildl
and
jge
fstenv
sub
les
in
mov
xchg
mov
inc
outsb
xor
xlat
add
sub
add
mov
lock
test
mov
push
cmpb
mov
mov
cmc
xchg
pop
ja
test
jnp
scas
add
fists
pop
fsubrs
xchg
mov
mov
test
and
lcall
jo
mov
outsb
lret
adc
pusha
xchg
and
jbe
idivl
pop
gs
inc
or
inc
fsubl
dec
pop
xor
add
push
loopne
xor
call
mov
adc
jmp
sub
mov
movsl
sbb
mov
inc
xchg
ss
sub
insl
rorb
ljmp
push
jbe
mov
inc
enter
test
roll
sub
push
push
xchg
daa
xor
mov
pop
mov
xchg
outsb
outsb
movsl
das
or
jp
mov
sbb
sbb
out
and
or
imul
cmpsl
out
xlat
push
aaa
pop
movsl
dec
mov
or
inc
je
jle
xchg
aam
mov
fwait
mov
mov
xchg
cmp
js
nop
jns
add
movsb
dec
lret
mov
sub
in
fiaddl
dec
xchg
fbstp
dec
out
push
stos
rcrl
add
mov
scas
pop
dec
sub
pop
test
idivl
sarb
fsubl
cmp
and
sub
fiaddl
or
loop
pop
pop
iret
js
lret
mov
jp
push
hlt
hlt
mov
cmpsl
popa
int
pop
ret
test
xchg
movsb
loope
ja
jp
in
xor
mov
aas
fisubs
push
adc
dec
scas
or
ds
xchg
icebp
cltd
mov
cld
lret
mov
and
sub
aaa
daa
popf
insb
in
cmp
in
flds
outsl
mov
repnz
int
mov
lock
cmp
xchg
mov
pop
call
mov
xor
arpl
xchg
in
dec
pop
adc
rep
mov
dec
pop
mov
push
cmc
xchg
mov
andb
cmp
cmp
cmpl
das
out
push
cmp
and
adcl
and
or
mov
enter
lods
fs
in
and
jp
cltd
pop
in
int
push
mov
lret
hlt
or
inc
mov
xchg
sbbb
push
icebp
add
add
lds
movntps
mov
push
adc
jae
pushf
loope
adc
test
sarb
ret
int3
pop
push
dec
jmp
xor
shll
aas
push
stc
dec
add
mov
jmp
and
popf
cmp
inc
and
push
push
cmp
pop
cmp
sahf
mov
dec
hlt
shlb
jg
data16
inc
jno
sub
pop
inc
repnz
mov
push
xor
mov
cmp
adc
inc
xor
mov
push
sahf
pusha
or
jo
lea
jne
push
lods
inc
out
adc
movsb
mov
cmp
jbe
lds
ret
xorb
shll
dec
push
je
das
cld
scas
movsb
or
xor
fstpt
inc
adc
loop
pop
sbb
lret
fcmove
fnstenv
out
dec
add
in
pop
xchg
sbb
mov
shll
stos
xor
mov
xchg
inc
test
adc
xchg
lea
xor
in
shll
icebp
push
ret
leave
xlat
jecxz
mov
inc
rcrb
enter
add
and
scas
jge
cmp
dec
dec
sbb
ret
mov
xlat
test
jnp
mov
nop
mov
ljmp
push
push
repnz
jp
pop
xchg
adc
dec
push
pusha
pop
fisubs
cmp
outsb
int
pop
jno
jge
cs
push
jno,pn
inc
mov
lret
xlat
fadds
outsb
xor
cmpsb
les
xor
aaa
out
push
fisttpl
xor
mov
jecxz
pop
and
cmp
cmp
mov
stc
popa
mov
xchg
add
sub
adc
out
fisubs
fildll
and
mov
push
nop
sar
imulb
dec
cmp
adc
pushl
cmpsl
sub
rolb
push
lock
fisubrl
jmp
cltd
adc
jno
out
mov
inc
js
xor
xchg
cmp
outsb
fs
xchg
mov
packuswb
ss
ret
jg
loope
daa
sub
lret
and
shll
jne
shll
and
xchg
negb
jno
cltd
addr16
dec
imul
add
mov
fwait
arpl
jnp
inc
imull
push
cli
push
mov
loop
xor
cmp
or
jl
sbb
sarb
dec
sti
push
mov
in
dec
push
outsb
cmp
push
ljmpw
hlt
ss
in
lret
fimull
cld
stc
cmp
cmp
mov
je
daa
out
rcrl
aad
in
fisttpll
mov
cltd
test
dec
or
mov
push
insb
jb
sub
popl
sub
jbe
or
aad
add
leave
xchg
in
leave
out
jle
outsb
sbb
xor
mov
loopne
ret
hlt
popf
pop
sbb
or
test
je
push
inc
lcall
fsub
cmpsl
jae
stos
sub
lods
cmpsl
fbld
or
in
test
pop
dec
push
cmpsb
fs
fidivl
adc
push
jb
fsubrs
popf
mov
xor
jnp
imul
dec
lods
xor
rol
stos
into
adc
daa
xor
jl
pop
jmp
lods
xor
rcrl
push
dec
cmpsb
adc
fisubs
mov
cmp
cmp
insl
mov
push
sbb
ja
scas
pop
cli
fwait
pop
flds
cmpsb
adc
jnp
flds
insl
ret
xor
xchg
xchg
loopne
push
xchg
fistpll
mul
imulb
sti
and
shlb
cmp
aaa
mov
jg
clc
jae
inc
scas
or
insb
pop
fwait
insb
push
xor
call
push
mov
test
leave
cs
jge
mov
add
jl
jno
lret
cld
lea
sub
sbb
lret
ss
dec
sar
sbb
mov
mov
mov
insb
dec
jecxz
cmc
dec
call
mov
cmp
loopne
movsb
lock
rcrb
mov
addr16
and
sbb
jp
ret
fwait
xchg
scas
adc
xchg
add
cs
sub
and
stos
andl
movsb
int3
and
fwait
stc
mov
push
leave
pop
std
dec
mov
sub
out
dec
jb
arpl
gs
enter
push
shr
inc
incl
or
nop
mov
xorb
pop
mov
dec
sahf
mov
out
mov
stos
sarb
ret
jbe
shll
icebp
cmp
pop
mov
inc
jp
outsl
clc
xchg
jae
imul
int
jp
cltd
int
xor
push
xchg
adc
add
mov
jne
jl
dec
xchg
jge
sub
push
sti
pop
or
xchg
jecxz
into
xlat
icebp
cs
ret
je
in
ja
fiaddl
adc
pop
repnz
mov
pop
mov
popw
popf
inc
or
js
jg
popf
jp
inc
lea
test
jge
lock
pop
mov
mov
or
xlat
fisubrs
arpl
cwtl
test
test
sbb
aaa
fwait
ja
out
pop
mov
sti
cli
loopne
pop
dec
sub
scas
or
cmp
jle
repnz
cld
loopne
add
pop
inc
rep
pushf
mov
mov
icebp
cmpsl
jns
xor
add
fiadds
fscale
sbb
pop
orb
addr16
add
js
stos
sbb
aam
lret
mov
push
inc
fwait
sub
mov
push
xlat
jmp
push
inc
cmp
and
lea
sbb
mov
lods
and
jl
iret
xor
sub
add
out
repz
jp
notl
mov
mov
jae
insb
imul
cmp
iret
pop
jmp
loopne
xchg
adc
dec
add
push
mov
pop
lret
mov
cmpl
mov
pop
inc
insb
mov
xchg
xor
hlt
dec
rorb
inc
mov
inc
dec
and
cmpsl
inc
shll
mov
xchg
inc
ds
aam
adc
gs
out
pop
fabs
loope
jbe
daa
mov
ljmp
das
int
dec
add
nop
jae
loop
loop
sub
cli
es
jge
scas
loop
shl
test
lds
add
mov
lods
and
shrb
in
out
mov
lret
adc
sub
in
mov
pop
in
mov
dec
and
inc
inc
jno
sbb
fdiv
rorl
inc
cmp
sbb
adc
pop
cmp
xor
push
dec
fists
jg
imul
imul
add
ds
fwait
and
sbb
sahf
xchg
aam
imul
cmpsb
fstpl
scas
loope
cmpsl
and
in
data16
mov
jmp
and
xchg
mov
xor
dec
andb
sub
mov
cli
call
push
outsb
hlt
hlt
jge
jne
push
jae
sub
vpsubusw
inc
leave
mov
daa
pop
aam
and
lods
fisttpll
in
add
fstpl
dec
insb
push
push
xchg
mov
pop
ss
push
sub
xchg
push
pop
sub
cltd
push
outsb
int3
lret
add
add
cmp
ret
pop
loopnew
pop
popa
jb
nop
or
movsl
pop
push
repz
sub
sbb
test
pop
imul
push
pop
cli
and
daa
push
xor
or
ror
xor
xor
mov
je
add
stc
inc
push
sub
sub
cli
out
xor
inc
aas
xchg
movsb
dec
fbld
mov
in
lret
shll
inc
mov
cmp
cmp
fwait
adc
daa
push
dec
imul
jne
pop
imul
out
xchg
push
test
loopne
inc
cmp
repnz
es
test
mov
insl
sbbl
push
test
and
int3
and
adc
jo
movsl
std
cmpsb
stos
pop
pop
in
dec
push
rol
ss
mov
mov
mov
jns
jmp
dec
aas
sarb
es
test
push
mov
and
pusha
jg
fisttps
test
pop
xor
jbe
fdiv
mov
popa
fcomi
xchg
jge
jmp
push
mov
inc
in
xor
mov
sarl
stos
sbb
lahf
inc
pusha
jmp
iret
and
pop
xor
and
pop
xchg
imul
arpl
xchg
movsb
xchg
jle
xor
aaa
and
test
mov
jmp
cs
jecxz
lcall
xchg
xor
add
das
add
or
jns
out
mov
stos
repnz
and
adc
mov
sub
out
ja
xchg
aaa
outsb
push
inc
add
rorb
js
scas
push
repz
aad
sbb
in
ret
cmpb
jne
shrl
hlt
pop
cmpsb
push
movsb
das
aad
add
or
dec
hlt
or
scas
movsb
jge
imul
push
add
cld
adc
add
mov
push
adc
or
out
lcall
mov
and
xchg
rcll
adc
out
sti
pop
sub
mov
xor
rolb
sub
inc
test
dec
add
arpl
inc
sbb
fucomp
pop
les
ror
jnp
not
jp
into
lret
int3
iret
xchg
jge
or
mov
cmp
add
test
or
aaa
jecxz
das
sub
in
inc
sarb
cmp
add
psubusb
adc
xor
std
push
sub
push
fsubs
pop
aas
or
cmpb
jmp
fildl
insl
outsb
push
push
cmpsb
mov
jae
aad
stc
int
cmc
jmp
adc
inc
lahf
and
data16
jbe
add
cmp
mov
lods
stos
mov
rolb
xor
aaa
cmp
loope
ljmp
sti
movsl
insl
in
push
enter
sbb
pop
mov
lahf
mov
aas
mov
dec
and
and
movsl
or
daa
je
adc
push
xchg
jns
push
pop
cs
subb
enter
decl
mov
sahf
cmc
pop
fidivrl
jnp
mov
dec
sbb
fnstsw
xor
sub
xorb
sbb
je
xchg
fidivs
int3
imul
les
and
add
clc
dec
out
daa
cmp
inc
mov
hlt
nop
lods
movb
leave
cmpl
jae
test
inc
jno
test
sti
or
stc
add
fnsave
lret
in
cltd
lret
cmp
in
or
pop
lahf
orl
stc
jle
pop
cmp
add
sbb
cmc
repz
jno
jae
stos
or
pop
out
pop
jno
clc
dec
hlt
std
jge
cmc
lds
int
bound
int
loopne
ss
es
push
add
pusha
sahf
jg
shl
cld
faddl
jecxz
test
inc
fucom
ficoml
mov
pop
sbb
es
pop
xchg
adc
xchg
int3
sbb
adc
outsb
mov
mov
mov
inc
mov
insl
jmp
popf
lds
mov
pop
ja
out
pop
cltd
sbb
mov
xchg
push
xchg
adc
pop
mov
pop
test
add
icebp
popa
decl
shrb
outsb
and
sub
icebp
xor
repz
fmul
xorb
dec
mov
xchg
inc
bound
add
popa
jae
or
nop
push
jae
fmul
jne
mov
dec
stc
mov
inc
shrl
ja
inc
fldt
lods
sbb
lods
mov
sbb
dec
stos
sahf
xchg
shlb
repz
call
dec
outsl
or
add
xor
dec
xchg
cmpsl
lahf
cmp
or
add
aam
outsl
lock
das
xchg
add
push
nop
cmc
push
or
adc
push
mov
cmc
icebp
add
xor
ljmp
aas
jne
mov
mov
stc
cmpsb
pop
lcall
add
data16
hlt
je
add
jmp
test
mov
popf
fs
add
sbb
jne
leave
out
insl
ds
ret
and
xor
cmp
add
test
rol
data16
lods
repnz
push
leave
cmp
mov
lea
leave
sub
pop
jns
sub
out
imul
icebp
pushf
mov
ja
cmp
adc
test
adc
rcll
jl
pop
lcall
xchg
loop
add
loope
les
or
adc
sbb
sbb
inc
inc
mov
pop
jmp
ret
scas
jae
ret
mov
xchg
sub
jnp
roll
cmp
xchg
mov
pop
mov
mov
les
shll
cld
xorb
ror
stc
mov
lods
gs
icebp
jb
add
sbb
jae
mov
cmpsb
cmpsb
mov
mov
pop
xor
mov
ja
cld
or
aad
not
pop
and
aam
ss
arpl
ret
out
std
fdivrl
dec
inc
cwtl
or
dec
jmp
sub
fstl
push
fidivl
dec
mov
push
inc
lret
or
cld
andl
dec
mov
xchg
bound
jl
cmp
shll
push
and
mov
les
cmp
fs
aam
js
adc
stos
jae
test
sbb
out
jp
sbb
loope
in
das
mov
and
add
or
pop
mov
pop
inc
pop
cmc
scas
ja
fildl
cmp
mov
insb
mov
or
push
inc
dec
sahf
dec
fidivs
aad
data16
jns
sbb
lods
js
and
jp
icebp
int
inc
inc
test
fadds
cld
push
dec
jae
popa
pop
jg
pusha
ss
popf
loopne
pop
fildll
or
inc
inc
lock
aaa
adc
test
xor
cmp
jecxz
mov
test
add
mov
push
jmp
dec
sarb
fidivl
inc
push
loopne
imul
or
mov
bnd
pop
sbb
fbstp
ficoml
and
loop
int
loope
add
fld
mov
cmc
push
mov
ret
js
lret
mov
aas
xor
push
add
aam
cmp
aas
inc
dec
jb
aad
iret
sbb
mov
jno
cwtl
dec
fistl
xor
int
xor
push
sahf
push
loope
in
daa
mov
gs
push
icebp
hlt
and
cmp
jmp
mov
mov
xchg
outsl
or
lret
in
cli
ret
arpl
loopne
js
push
in
je
cmp
repz
lahf
loopne
mov
pop
xchg
int
sub
mov
mov
push
sub
push
lahf
or
aam
outsb
jp
cmpsl
sbb
sbb
dec
mov
mov
mov
fcmove
cmp
fld1
testl
mov
mov
dec
pop
push
xchg
dec
das
sbb
lock
ffreep
div
pop
push
sub
insl
mov
lods
mov
lods
push
cmp
mov
test
add
rcrl
lods
or
cmp
sub
stos
sbb
or
xchg
scas
das
cmp
int
mov
fbld
loope
dec
push
sbb
cmpsb
inc
or
xor
arpl
in
add
jb
sarl
ds
nop
ffree
add
sbb
xor
js
roll
ja
xchg
inc
xlat
mov
cli
or
inc
sarl
fadd
hlt
sar
mov
sub
xor
pop
xchg
jae
adc
out
xchg
mov
push
mov
jecxz
inc
fnstsw
dec
or
nop
inc
jl
jb
test
cwtl
pop
stos
pop
pop
mov
ss
inc
mov
icebp
outsb
addl
pcmpeqw
jae
xchg
cld
jle
aaa
push
and
xor
dec
xchg
int
xor
cmp
jbe
or
adc
jp
mov
mov
or
jbe
pop
jl
mov
dec
pop
push
fadds
or
movsb
add
arpl
subl
test
add
inc
scas
pop
or
notb
das
cmp
mov
lea
bound
and
loope
xchg
sti
pop
push
or
orb
and
iret
pop
pop
add
lock
call
lahf
jns
cmp
mov
repz
and
mov
popa
adc
bound
mov
add
outsl
mov
xor
inc
cwtl
inc
xor
leave
fisttps
add
mov
orl
imul
xor
adc
mov
push
mov
lea
mov
negl
add
pop
push
add
dec
or
xchg
inc
mov
bound
pop
jle
in
dec
lss
and
sbb
adc
inc
and
std
into
jecxz
add
jge
call
mov
lock
push
sub
sar
test
addl
mov
or
or
push
int3
cmc
in
sub
mov
mov
inc
ficomps
push
mov
stc
ss
ss
mov
dec
and
std
loopne
adc
mov
popf
jl
jle,pn
xchg
or
xchg
fwait
mov
inc
mov
popa
testb
dec
or
or
scas
stos
divl
andl
lret
mov
add
ds
sbb
dec
or
add
cmp
mov
adc
adc
in
sub
cld
lea
adc
mov
adc
fisubrl
or
push
inc
je
jp
and
rcl
xor
ljmp
push
sub
push
add
out
incb
loopne
xchg
aam
cs
and
dec
xchg
aad
idiv
mov
xor
pop
or
imul
sbbb
or
shlb
clc
xchg
sarb
mov
mov
movl
mov
inc
mov
or
pop
ret
and
jbe
cld
adc
rorl
mov
inc
sbb
outsb
push
cwtl
out
stc
and
mov
push
push
cwtl
ficoms
mov
fcmovb
in
aam
repnz
shrl
dec
mov
cmp
mov
std
cltd
pop
stc
inc
dec
inc
scas
sti
data16
rcr
imul
mov
jg
and
les
in
push
pop
sahf
dec
inc
sub
jecxz
jmp
push
popa
jge
gs
mov
jp
fldt
and
movsl
gs
pop
mov
in
inc
add
sahf
mov
adc
pop
imul
sub
push
xor
in
aas
movsb
sbb
push
or
add
push
inc
loope
addr16
movsb
pop
sbb
or
lods
call
testl
sub
fwait
push
movsl
es
lock
enter
clc
xor
in
scas
mov
pop
push
mov
adc
shrl
sbb
jecxz
lahf
jbe
mov
jg
or
je
in
loopne
mov
mov
jecxz
push
dec
in
lret
int
xchg
or
mov
mov
cmp
mov
inc
jo
hlt
iret
pop
cmp
mov
ds
jecxz
and
inc
push
dec
fistpll
sbb
adc
add
mov
call
sbb
jbe
mov
sub
or
mov
bound
mov
push
lretw
je
lcall
loop
xchg
popf
stc
add
mov
lods
inc
ja
push
dec
sub
int
pop
jne
jle
into
stos
jno
inc
insl
ret
fcompl
push
rcll
dec
hlt
jb
dec
sub
cmp
sbb
mov
push
sub
jbe
loopne
fst
adc
int3
lea
arpl
lea
adc
into
mov
add
sbb
or
push
lahf
jns
inc
ss
or
mov
jo
xlat
cmpsb
push
imul
mov
sarl
int
rcrb
dec
or
mov
pop
dec
dec
push
repnz
jle
inc
movb
int3
loopne
dec
dec
push
das
cltd
movsb
divl
xor
daa
inc
clc
mov
das
add
cmp
pusha
fwait
scas
add
ret
lret
rolb
in
mov
xor
iret
test
sub
push
fnstenv
inc
push
cli
cwtl
mov
jecxz
fisubrl
outsl
sahf
int
cmp
stos
push
xor
mov
andl
add
or
in
jmp
fisubl
dec
lcall
push
scas
int3
gs
push
adc
sahf
pop
xor
shl
outsl
xor
jecxz
pop
fdivrl
lret
int
sti
mov
fisubs
fcmovb
ljmp
add
leave
pop
cmp
mov
add
inc
push
adc
loope
daa
or
and
xchg
sbb
ret
adc
and
repz
or
arpl
jne
cmpsl
and
inc
pusha
xchg
push
loopne
sub
sarb
hlt
sti
inc
jle
jmp
jns
aad
outsl
lods
push
popf
jnp
dec
add
inc
fwait
or
ret
sbb
mov
aas
popa
inc
dec
dec
dec
xor
jmp
stc
std
or
jmp
add
lcall
and
popf
ror
jns
inc
les
sbbb
cmc
inc
shl
xlat
ror
dec
data16
mov
out
adc
inc
sbb
xchg
xchg
add
push
dec
pop
iret
lahf
hlt
push
sub
dec
mov
mov
and
les
or
cmpsb
add
outsb
outsl
iret
adc
or
pop
mov
sub
ror
xor
sbb
out
or
dec
das
in
mov
sbb
jns
pop
add
inc
mov
mov
jmp
push
mov
jmp
pop
repnz
xchg
popf
adc
mov
sbb
std
dec
push
jb
les
jle
and
jecxz
in
xor
sbb
push
sti
cmp
jmp
cmp
xchg
mov
fstl
inc
fstl
in
inc
lret
cld
adc
ja
pop
mov
sub
push
popf
mov
jmp
or
inc
adc
inc
test
xor
pop
sbb
mov
idiv
push
push
ds
push
cmp
mov
test
in
sbb
and
bound
sbb
lret
and
outsb
mov
add
add
push
dec
call
hlt
jns
lds
add
add
xchg
scas
ss
das
cli
mov
adc
or
or
xor
xchg
ljmp
ja
push
imul
mov
movsb
push
xchg
xor
stos
lods
addr16
sbb
mov
adc
add
fcomip
mov
sub
add
xlat
or
sub
cmp
inc
add
dec
mov
push
mov
and
xchg
adc
cmpl
cmp
xchg
scas
lock
cmc
lret
mov
rcll
stc
cmpsl
xlat
dec
cmp
and
adc
sub
xor
sbb
lods
pop
xchg
adc
cwtl
in
mov
mov
sub
mov
mov
cli
sbb
jnp
rol
add
sbb
xlat
test
in
fs
inc
test
ss
sub
and
sbb
dec
ret
or
sub
or
pop
sti
mov
push
int
gs
dec
cmp
pop
imul
xchg
pop
loope
ficompl
jo
cwtl
inc
pop
gs
jnp
mov
out
xchg
aaa
shr
mov
lds
sub
aas
dec
js
das
fs
cmp
cltd
hlt
inc
fdivr
lret
push
ret
cmp
mov
xchg
cmp
xlat
adc
aas
adc
mov
adc
sbb
int3
js
adc
or
and
xchg
or
and
rcll
push
dec
jg
jo
cmpsb
js
adc
inc
jg
repnz
fldl
daa
xchg
jne
mov
rcl
pop
or
jns
sbb
out
insb
dec
fcompl
dec
rclb
pop
aam
or
stos
cmp
adc
mov
mov
jl
pop
mov
das
cwtl
xchg
xor
call
cmpsl
sahf
aad
mov
adc
iret
xchg
movsl
test
add
pop
aaa
js
ds
lods
js
cs
and
cmp
sbb
xchg
int
push
jmp
cld
or
dec
adc
aas
ljmp
dec
clc
xchg
push
cmpb
mov
mov
mov
xchg
es
es
mov
testl
mov
inc
mov
icebp
jp
add
xchg
push
out
pop
sahf
mov
mov
jge
sti
sahf
scas
orb
adc
push
lcall
add
loop
xor
or
dec
jns
sbb
jno
mov
sahf
mov
jg
cli
in
xor
xchg
lods
scas
push
xchg
mov
movsb
xorl
pop
or
jmp
adc
inc
out
cmp
pusha
jle
dec
ficomps
sbb
lods
aas
or
fsubp
add
inc
loope
or
cmp
push
jge
xor
jmp
scas
repz
fcmovnu
xchg
cld
sub
pop
add
lods
jmp
inc
shll
mov
xor
pop
add
jae
lahf
cmp
aad
jbe
mov
stos
adc
mov
lea
fucomip
xchg
cmp
ja
pop
test
sbb
fmul
push
int3
pop
push
pop
sub
out
xchg
or
es
in
decb
dec
mov
into
loope
push
push
fiaddl
lea
and
inc
ret
pop
cmpsl
inc
lods
gs
mov
sbb
push
out
rcrl
mov
mov
jns
mov
test
aad
mov
data16
ror
add
mov
push
sbb
ret
sbb
add
push
pusha
jbe
push
test
jno
cs
jg
lret
into
sbb
pop
fiadds
movsl
in
aas
arpl
adcl
iret
xchg
icebp
aad
pop
mov
jae
roll
sub
hlt
lcall
mov
lcall
sahf
jae
xor
std
mov
adc
push
fsts
ret
push
add
inc
arpl
or
inc
pop
lret
xchg
adc
dec
mov
lcall
push
into
mov
pop
sub
je
scas
or
dec
insb
les
rolb
pop
mov
icebp
and
aam
xchg
into
es
sti
movsl
pop
pop
mov
out
adc
cmp
mov
mov
xchg
dec
popa
jbe
shrl
cltd
inc
into
inc
inc
adc
repz
cmpsb
cmp
mov
divl
pusha
inc
test
mov
add
jecxz
push
cmpsl
mov
addr16
sbb
mov
es
mov
out
outsl
xor
sbb
loop
cmp
mov
bound
cwtl
test
mov
mov
loope
test
int3
inc
adc
push
inc
mov
imul
sub
jl
mov
fwait
and
je
lcall
cmc
xor
pop
popa
xor
lcall
outsl
testb
ljmp
mov
jl
sub
or
test
and
lahf
aas
jp
push
mov
int3
inc
nop
pop
or
mov
lods
and
jp
rol
inc
ljmp
shl
mov
lods
xchg
out
pusha
stos
xchg
add
add
sbb
xlat
int
xor
into
sbb
or
sub
jnp
jmp
xlat
aad
inc
out
jmp
cmc
pop
cmpsl
cwtl
subl
fs
jo
loope
push
mov
adc
cmp
movsl
lahf
mov
mov
sbb
jg
insb
or
or
fcoml
fildll
fldl
adc
notb
mov
dec
cli
lods
or
add
popf
lret
inc
subb
inc
andb
xchg
adc
cwtl
xchg
clc
jp
mov
sub
lcall
ss
mulb
outsb
inc
int
outsl
mov
arpl
lods
pop
mov
inc
fcoml
sarb
shr
jecxz
arpl
popf
mov
cmp
xchg
fcomps
ret
popf
nop
test
pop
dec
in
jo
and
xorl
adc
jbe
sbb
stc
cmp
hlt
sahf
dec
ret
notb
cmp
lods
sbb
bound
cmp
pop
pop
pop
in
push
mov
mov
dec
dec
popf
dec
testl
scas
or
inc
mov
negl
loop
movsb
clc
push
aam
aad
mov
test
xchg
cmp
mov
pop
push
ret
cmp
out
dec
xchg
dec
or
jns
or
inc
mov
mov
cmp
cmc
sub
pop
mov
jo
inc
out
jo
aaa
or
aam
mov
lahf
mov
mov
pop
push
ljmp
push
sub
push
adc
int3
mov
or
push
cmc
xchg
popa
pop
inc
std
loope
pop
repz
insb
clc
jg
pop
sbb
lea
push
and
mov
cmc
sub
lock
pop
fsubrs
jle
add
fwait
xchg
shlb
imul
or
sbb
in
mov
cld
add
leave
adc
or
test
add
andb
push
lock
call
or
add
sbb
cmp
stos
pop
dec
rclb
mov
xor
arpl
or
in
mov
inc
outsl
push
lea
pop
mov
imul
pusha
mov
pop
fstpl
fisubrl
add
adc
jnp
xlat
pop
in
inc
clc
mov
mov
scas
or
mov
stc
aas
push
or
push
adc
or
inc
icebp
add
lahf
adc
dec
xor
pop
lock
push
pop
xchg
out
pop
sbb
and
mov
aas
iret
fiaddl
cld
mov
add
cmp
dec
sti
lock
inc
fcoms
inc
dec
leave
mov
in
icebp
and
lds
sbb
jle
fwait
pop
in
mov
mov
and
fs
stc
jno
cmp
ss
fdivs
popa
rorl
sub
mov
mov
test
push
clc
push
jbe
loop
imul
jne
in
jae
rcll
or
movsb
lock
jns
ds
xchg
pop
scas
outsl
mov
dec
push
out
imul
test
xchg
sbbl
loopne
leave
icebp
jge
xchg
add
add
sbbl
gs
sbb
xchg
test
cmpl
outsl
mov
in
in
pusha
pop
jp
sahf
shll
or
outsl
mov
mov
shl
clc
in
repz
mov
test
jge
cmp
ljmp
insl
fiaddl
nop
mov
lock
subl
out
xchg
cmp
pop
sbb
dec
lret
xchg
xor
ret
dec
sbb
inc
sti
mov
rep
add
dec
into
clc
adc
sub
pop
mov
lea
cwtl
jno
repz
mov
in
popf
ud0
mov
and
lret
fsubr
pusha
scas
enter
aaa
out
cmpsl
and
pop
dec
and
push
ss
imul
sbbl
xor
fwait
aas
std
imul
pop
mov
shll
xor
jns
sbb
das
push
dec
dec
je
shlb
and
testb
inc
and
fwait
addr16
cs
hlt
xor
data16
jg
or
and
arpl
aad
stos
mov
lods
lock
sbb
cmpsb
mov
jmp
inc
mov
fnstenv
jecxz
xor
insl
push
jmp
jmp
stos
test
cli
fsubrl
adc
jo
dec
push
dec
xchg
clc
popa
mov
imul
pmulhw
ret
cmp
sub
hlt
jo
fsubs
jg
ds
push
pop
mov
xor
inc
mov
pop
mov
jmp
test
outsl
jae
cmp
test
xchg
xchg
push
cmp
adc
rcr
sub
mov
mov
in
dec
cmp
mov
mov
jl
xor
dec
push
jb
xchg
lock
pusha
fimuls
into
add
sbb
mov
gs
mov
movb
shlb
jge
arpl
pop
bound
add
pop
leave
push
divl
addb
jmp
mov
and
inc
jbe
pop
out
lea
roll
sbb
fsubr
pop
lret
inc
jnp
inc
push
adc
sbb
mov
adc
pushf
or
pop
mov
cmp
ret
mov
xchg
pop
fbld
jg
pop
movb
or
mov
lret
fs
neg
mov
inc
adc
and
push
cmpsl
fld
nop
inc
xor
jmp
lret
cmp
ljmp
test
jle
pop
mov
sub
movsl
lret
mov
rclb
push
add
sbb
mov
inc
dec
jno
cmpsb
or
int3
je
xchg
inc
cmp
sub
popa
movsb
mov
data16
rorl
sub
sti
daa
insb
inc
mov
pop
push
pop
sbb
sbb
loop
test
add
daa
dec
aad
mov
gs
out
repnz
mov
cmp
call
fstpl
outsl
mov
mov
inc
enter
xchg
ljmp
mov
push
cltd
jmp
push
xchg
shrl
stos
lea
enter
add
out
pop
jbe
mov
insl
inc
jne
daa
int
sbb
or
adc
test
ret
push
stos
in
cmc
and
jb
xor
dec
sbb
movsb
xchg
push
jne
or
pushf
rclb
jp
lea
push
dec
jecxz
clc
sarb
mov
adc
adc
or
insb
jl
mov
sbb
xor
icebp
cmp
dec
jbe
sub
mov
out
sub
das
aam
push
enter
insb
insb
xor
xor
sbb
mov
js
mov
in
out
push
js
xchg
jmp
jp
inc
and
dec
aas
jl
repz
ja
inc
pop
inc
mov
mov
inc
js
and
pop
stc
or
jb
push
or
int
xor
or
das
ficompl
jg
outsb
push
and
sbb
adc
std
nop
inc
or
xchg
fnsetpm(287
neg
out
sar
xor
lcall
scas
sahf
int
repnz
addl
movsl
push
pop
fnstsw
imul
aam
jle
iret
sbb
repz
xchg
pop
js
add
mov
jl
fwait
mov
es
xor
cwtl
dec
jecxz
dec
stos
adc
mov
cmp
inc
sub
arpl
ss
sub
cmpb
adc
cmp
and
mov
inc
jno
lcall
icebp
sbb
mov
add
mov
in
ds
movl
stos
fbstp
cli
mov
rclb
inc
cwtl
lcall
pop
lret
push
dec
int
ficompl
or
in
mov
inc
pop
cmp
stc
hlt
enter
fsts
jge
add
add
arpl
ljmp
xorb
fcoml
adc
cmc
mov
shll
pop
pushw
or
cmpsl
out
push
stc
sub
lea
add
fldl
push
cltd
lds
inc
pop
lret
push
xchg
adc
and
jmp
xchg
mov
sbb
push
jl
pusha
mov
ret
sbb
mov
or
xchg
jbe
jne
xor
shr
filds
jnp
call
xor
adc
loopne
loope
dec
jbe
sbb
inc
rorb
mov
ret
out
and
mov
mov
cli
stos
pop
ficoms
push
insl
sbb
pop
push
add
dec
mov
dec
mov
jns
dec
jae
add
aad
jne
js
cvtdq2ps
push
and
lods
enter
nop
xor
dec
sbb
fwait
mov
push
ljmp
mov
outsl
imul
idivb
js
xor
push
xchg
pop
subl
imul
out
pushf
imul
insl
pop
sbb
push
inc
pop
scas
mov
call
mov
cli
imulb
xchg
int3
and
daa
stc
xchg
cmp
testb
dec
sahf
test
std
cli
mov
xchg
jecxz
xchg
jmp
push
sbb
pop
sub
fmulp
scas
shll
das
fwait
ds
push
rolb
hlt
lret
jns
les
pop
pop
fistpll
pushf
ror
jg
push
dec
push
xor
jbe
leave
out
decb
je
push
icebp
jp
mov
out
push
test
ret
cmpsb
idivl
ficomps
lock
xor
mov
jp
dec
cli
sbb
les
insl
jp
in
dec
ficoml
xor
or
push
lret
call
jg
popf
lods
xor
in
es
adc
ret
dec
cs
xchg
aam
movsb
call
jg
xlat
push
lret
or
lcall
or
fwait
lcall
xlat
jae
add
or
test
lahf
std
xchg
daa
sarb
cld
movsb
mov
dec
outsb
into
cmpsl
lods
pop
cld
mul
sbb
and
and
sbb
dec
sbb
xchg
mull
cwtl
inc
bound
sbb
aas
mov
and
lods
pop
testl
shlb
pop
add
xor
xchg
xchg
jle
nop
fs
fnstcw
lea
mov
int3
fbld
stc
mov
lahf
xor
mov
mov
mov
dec
stos
sub
sti
in
cmp
bound
sbb
jle
mov
mov
inc
cld
mov
inc
xchg
dec
jb
imul
or
sub
fs
sbb
adc
gs
or
mov
pop
xchg
movsl
push
mov
mov
sub
and
sahf
fs
loopne
push
sub
mov
call
popa
xor
mov
sub
pop
xchg
int3
jae
jns
cmp
lods
xor
mov
lods
sbb
mov
pop
inc
or
cs
inc
xlat
imul
inc
mov
js
vpcomq
das
aad
add
xchg
mov
sub
clc
test
mov
push
mov
adc
inc
jecxz
rclb
add
mov
in
push
lea
jle
repnz
rcrb
mov
in
mov
and
sar
cmc
fistpll
in
or
and
dec
sar
mov
and
ds
or
mov
jns
pushf
xchg
cld
int
pop
lahf
arpl
adc
ret
add
fcomip
jmp
push
popf
sbb
cmp
or
mov
mov
icebp
adc
fucom
push
fstl
sbb
jae
mov
push
mov
push
pop
dec
in
sbb
xor
and
sub
std
test
push
cmpsl
xchg
pop
enter
imul
inc
cmp
xor
jp
and
dec
dec
shr
dec
inc
mov
pop
popa
cmpsl
jle
mov
mov
cmp
pop
sub
call
je
mov
inc
daa
mov
into
adc
add
pop
loope
fcompl
xchg
cli
add
jg
ss
xchg
pop
jle
in
fcmovbe
in
lods
mov
ret
outsb
sbb
dec
jb
repnz
loop
fwait
xor
mov
mov
push
adc
loopne
xchg
jb
inc
push
add
push
dec
push
jl
sub
mul
mov
xor
or
fdivrp
ja
cmp
dec
mov
cmp
mov
add
mov
addr16
popf
fimull
mov
jmp
jb
adc
mov
mov
sub
cmpsb
cltd
outsl
jnp
notb
out
fistpl
cmp
js
adc
aas
rolb
sti
pushf
inc
and
fists
push
mov
push
je
subps
scas
arpl
push
xchg
xor
aam
push
sbb
mov
jnp
cltd
out
dec
jl
lret
int3
or
popl
mov
dec
subl
rolb
adc
mov
shrl
ljmp
dec
adc
sbb
out
mov
aam
or
add
cmp
lret
lret
add
xor
leave
mov
mov
sbb
jg
pop
ds
out
push
mov
fisttpll
lock
test
mov
outsl
in
enter
jge
mov
add
push
add
test
inc
xchg
push
ja
in
es
in
outsl
fimuls
push
stos
jns
and
mov
dec
adcb
orb
test
mov
call
idivb
ja
or
dec
shrl
mov
jne
popa
sbb
repnz
add
in
sahf
je
repz
dec
add
push
xor
adc
dec
cmp
test
negb
xchg
jmp
and
lret
mov
dec
mov
sbb
lods
popf
mov
lods
adc
test
ss
outsl
andl
scas
jno
inc
cli
arpl
stos
add
cmp
and
mov
sti
xchg
xchg
sub
fwait
imul
sbb
pop
ret
aam
inc
shlb
jecxz
pusha
add
xchg
out
adc
and
or
neg
fst
or
mov
xor
push
movsl
ds
jbe
decb
daa
push
mov
inc
mov
cli
push
pop
mov
cmp
mov
lods
xor
mov
cmp
push
lock
push
xor
std
ljmp
insb
fst
xor
cmp
sbb
leave
lods
cli
ret
inc
out
cmp
mov
pmuludq
mov
xchg
dec
sub
push
cli
jmp
leave
mov
arpl
or
push
or
xchg
cmc
int
out
movsb
scas
std
push
into
sbb
adc
adc
lds
dec
sub
test
leave
shl
orl
mov
mov
inc
and
ret
int
mov
xchg
xchg
es
rcl
cmp
in
lret
or
jg
adc
pop
iret
into
imul
cmp
stc
sbb
xchg
sbb
mov
stos
xchg
in
pop
pop
or
jecxz
jno
lcall
mov
cmp
jb
mov
push
dec
pop
xchg
cmp
cmp
shr
stos
in
sub
xchg
outsb
js
outsb
addr16
bound
cmc
aas
mov
mov
adc
push
rcll
shll
nop
pushf
in
idivb
std
pop
jne
jno
jle
pop
add
dec
cmp
pop
cmpsl
jne
xor
jnp
fnstenv
fcompl
es
push
notl
into
mov
mov
loopne
xchg
sub
shrl
sub
add
pop
out
iret
cmp
or
mov
cld
hlt
fnsave
fldenv
push
or
pop
js
fstpt
mov
call
inc
mov
in
sbb
mov
fcompl
enter
push
das
jl
scas
pop
lock
call
ds
ds
dec
je
loope
or
mov
adc
pop
push
out
and
stos
orb
loope
xchg
dec
jle
data16
dec
insl
inc
mov
adc
mov
lock
out
mov
fisubrs
rorb
insl
or
lahf
mov
int
adc
mov
fs
mov
ficomps
addb
fbstp
push
xchg
popa
int
add
arpl
ret
cltd
jge
add
push
push
dec
pop
mov
popa
push
fstl
inc
cmp
shlb
cmpsl
stc
mov
adc
pop
pavgb
add
pop
test
pop
pop
les
push
loop
mov
inc
dec
pop
adc
cmp
jns
lcall
xchg
cmp
fdivr
popa
notl
jmp
test
or
jb
cmp
into
mov
pop
out
ret
sbb
std
push
scas
cmp
aas
push
mov
cmpsl
cmpsb
xchg
mov
mov
ss
je
mov
std
lock
stc
movsl
jg
mov
inc
pop
inc
movsl
mov
flds
xlat
mov
mov
and
das
push
cmpsl
mov
insl
enter
js
mov
mov
mov
cmp
stos
mov
shlb
dec
mov
cltd
pop
fsub
jmp
mov
mov
sub
imul
sti
imul
or
jno
out
push
fsubs
mov
push
rcr
and
test
sbb
testl
dec
fildl
sub
sbb
mov
push
cmpsb
add
mov
andl
mov
sbb
frstor
pop
cwtl
faddl
sub
insb
lea
ret
sbb
inc
pop
shrb
out
psrld
repnz
adc
popf
nop
cmpb
nop
scas
mov
lods
imulb
sbb
lcall
cmpsl
xchg
inc
adc
adc
pop
mov
popa
sbb
jecxz
popf
daa
xchg
pop
loope
cltd
xorb
xchg
fwait
movsb
pushf
adc
je
cld
inc
jecxz
sub
nop
aam
nop
pop
mov
rorb
adc
movsb
scas
mov
cmp
push
inc
push
std
cmp
mov
int3
add
dec
cmp
roll
xchg
jae
das
xchg
xor
out
shlb
outsb
pop
pop
out
inc
fwait
clc
push
push
into
or
lock
pusha
daa
scas
rorl
movsl
push
jbe
sub
stos
aaa
test
je
mov
les
xchg
sbb
push
xchg
sbb
mov
popf
repz
xor
jp
pushf
cmp
push
clc
xor
cwtl
adc
dec
xchg
dec
add
mov
fidivrs
pushf
bound
add
into
jbe
retw
xchg
push
pop
add
into
js
insl
xchg
jp
dec
lret
aaa
mov
outsl
pop
orw
mov
mov
cmpsl
dec
pop
adc
xor
ljmp
fcomi
in
add
repz
lret
outsb
and
mov
rorl
sti
mov
icebp
dec
mov
ja
and
lds
jae
fs
push
imul
cltd
aam
jg
outsb
dec
ja
adc
mov
push
xor
insl
std
das
pop
addr16
jb
push
lock
std
addb
outsl
jmp
iret
bound
mov
gs
test
inc
push
pop
mov
cmp
fcompl
mov
adc
xor
dec
inc
in
fwait
lods
hlt
cmp
fdivrs
loop
out
mov
jae
ds
fidivs
dec
pop
adc
movsl
dec
cmp
fcomps
push
addl
mov
push
mov
stos
mov
iret
jecxz
cmpsb
aam
sbb
sbb
add
xlat
cmp
adc
stos
dec
sbbb
pop
xchg
shlb
cmp
sarb
lret
inc
cmp
add
or
mov
and
cmp
mov
add
in
adc
mov
loop
pop
jle
inc
sbb
dec
mov
push
fisubrs
jge
jbe
inc
lret
jae
scas
pop
xchg
cltd
imul
or
add
push
pop
jmp
fwait
sti
mov
lea
mov
into
andl
push
and
lods
pushf
aas
push
jp
int3
jmp
sbb
sub
stc
inc
sahf
loopne
xor
dec
xchg
sbb
mov
shrb
xchg
jno
int
or
inc
out
scas
jno
fcoml
push
enter
sbbl
stos
movsb
aam
pop
inc
icebp
popa
sbb
jno
icebp
jns
xchg
fstps
pop
mov
dec
mov
dec
push
in
es
loopne
lret
dec
push
lods
cltd
sbb
test
addr16
push
sub
sub
mov
pop
fistl
popa
sbb
fs
jle
add
sarb
push
mov
inc
ror
add
imul
fwait
daa
addr16
in
mov
das
jl
pop
mov
or
ret
pop
push
or
xor
xchg
aam
inc
pop
xchg
daa
xchg
pusha
clc
inc
loop
xor
inc
outsb
pop
jne
sbb
push
adc
mov
data16
out
fwait
mov
stos
cltd
pop
mov
jle
out
shl
adc
lcall
xchg
or
mov
aas
jne
mov
mov
xor
ds
sub
inc
enter
fildl
and
lret
lods
mov
cmp
cmp
jge
pusha
es
and
in
add
call
mov
nop
nop
mov
mov
xor
mov
and
jle
jecxz
mov
inc
jg
dec
mov
cmp
ret
ljmp
and
lds
mov
jmp
ror
push
push
std
pop
and
adc
push
mov
jg
iret
mov
push
arpl
lock
xchg
push
je
mov
call
add
movsl
leave
push
std
xchg
jbe
in
xor
stos
cwtl
daa
xchg
and
imul
in
fs
xorl
adcb
scas
push
xchg
pop
xor
jb
sub
xor
cmp
inc
aad
aad
das
adc
fdivr
decb
pop
and
xchg
jb
pop
push
push
cs
push
sub
sub
movsl
test
add
shll
push
mov
mov
jne
jns
leave
inc
add
cmpsb
std
adc
or
mov
add
mov
jmp
or
jno
xchg
fs
shl
lods
mov
stc
mov
xchg
les
or
adc
in
xchg
dec
es
movsl
into
add
lahf
test
pusha
mov
push
scas
mov
mov
unpckhps
xorb
mov
jecxz
mov
push
pop
inc
mov
pop
fsubrl
adc
pop
mov
sbb
hlt
pop
push
add
es
hlt
je
addb
not
fwait
out
test
ja
mov
aam
jle
pop
cmp
mov
inc
hlt
push
test
mov
inc
dec
mov
or
mov
cld
mull
dec
into
push
add
and
movsl
mov
leave
adc
and
call
cmpsb
cmp
lret
int
mov
lds
mov
cmp
rorl
mov
cmp
pop
orb
pop
mov
xchg
lret
out
or
nop
out
sbb
fsubrl
arpl
je
imul
push
jno
mov
or
in
das
aaa
jl
call
sbb
xchg
loope
and
jae
fnstsw
or
leave
stos
dec
and
pusha
mov
xchg
dec
setg
iret
inc
push
repz
mov
mov
jp
das
push
mov
inc
xor
fidivrs
adc
mov
fadd
cmp
push
lret
jae
stos
push
sti
lds
or
insl
inc
pop
repnz
test
sahf
jl
setge
mov
sti
dec
jp
fildl
sbb
fsincos
xor
rcll
ucomiss
std
xchg
sbb
adcb
imul
xchg
mov
insb
push
dec
loope
push
mov
adc
lcall
movsl
lea
pusha
xlat
mov
pop
lcall
popa
pop
lahf
sti
sti
mov
xchg
add
shll
pop
mov
scas
arpl
mov
rcr
dec
mov
fisttpll
or
mov
int3
xor
adc
outsl
roll
shrb
sbb
mov
dec
xchg
push
jp
shrb
cmpsl
sbb
mov
pop
fsubr
dec
pop
enter
cmp
mov
ret
xchg
addb
scas
stc
cs
repnz
mov
sub
pop
lret
stos
int3
int
sub
mov
inc
push
lahf
inc
xor
fisubs
add
lods
outsl
add
outsl
mov
add
fidivl
jmp
mov
out
ljmp
inc
mov
cltd
add
mov
aam
aam
or
sbb
test
lods
xor
dec
movsl
cmc
mov
sbb
pusha
ljmp
dec
xor
add
pextrw
inc
sarl
jecxz
xchg
int
lahf
add
xor
icebp
iret
sub
mov
adc
fsubrl
mov
pop
mov
pop
xor
shlb
imul
lock
lret
inc
stos
jne
jecxz
sbb
or
dec
inc
hlt
clc
sbb
add
push
dec
test
sub
xchg
jg
mov
outsl
mov
mov
ss
in
or
xchg
xchg
test
sub
xlat
lock
sti
enter
cmp
or
mov
mov
outsb
xchg
jne
pop
nop
scas
cmp
jge
enter
fistl
push
daa
xor
adc
push
aaa
sub
push
icebp
sahf
subb
out
outsl
cmp
dec
int
mov
repz
int3
sti
mov
stos
sub
jl
test
adc
push
adc
inc
fsubl
fs
test
xor
shll
jbe
adc
ljmp
adc
movsl
ds
pop
or
or
lret
add
or
test
bound
mov
sub
shl
mov
jp
in
adc
hlt
leave
loop
pop
aad
jp
or
insb
push
mov
icebp
movsl
movl
inc
mov
xlat
iret
and
pop
imul
leave
test
mov
fs
std
mov
adc
outsl
push
fidivrs
jns
and
push
mov
das
sti
dec
mov
out
pop
insb
popf
test
test
adc
cmp
cmp
mov
mov
sarl
pop
mov
inc
movsb
adc
ss
sahf
sti
mov
std
shll
rcrl
out
sti
add
stc
adc
and
leave
in
insb
push
mov
mov
adc
push
mov
repz
xchg
jmp
lods
add
push
push
adc
mov
shl
test
dec
pushf
mov
clc
mov
cltd
bound
or
push
sbb
push
ret
sbb
faddl
shll
iret
dec
xchg
out
xchg
outsb
mov
roll
push
loope
test
mov
mov
and
ret
xchg
mov
sub
dec
dec
bnd
mov
call
repnz
lods
sbb
sar
shll
jge
scas
addr16
push
cld
pop
bound
orb
dec
int3
mov
pop
loopne
xor
arpl
and
int3
pop
fs
xchg
icebp
daa
mov
xchg
or
add
nop
insl
inc
inc
jbe
cmp
cld
xchg
sahf
cmp
mov
insb
add
repz
test
mov
mov
mov
mov
cltd
ret
out
jno
adc
or
sbb
push
or
pop
or
inc
iret
sbb
xchg
pop
sbb
xchg
cmp
mov
aad
or
or
or
fs
sbb
add
adc
jnp
leave
lret
mov
imul
jp
xchg
cmp
leave
shlb
rolb
push
xchg
jnp
fs
jnp
fsubr
xor
or
jge
lods
test
loop
shrb
cmp
inc
ret
jo
cld
cmp
shlb
hlt
push
lds
loope
xchg
je
cmp
mov
dec
inc
jno
add
es
int3
movsl
js
xor
sub
add
sbb
mov
cltd
cmp
jge
mov
sbb
mov
ud0
test
ret
rclb
stos
jp
jne
adc
push
test
rorl
movnti
mov
pop
jmp
mov
cmp
inc
shlb
in
cmpsb
or
imul
push
fildll
xchg
jge
mov
sbb
adcb
bound
cmp
dec
shlb
push
sub
mov
mov
test
sbb
lret
aad
or
lods
inc
sar
mov
xchg
ds
imul
in
jg
xor
and
mov
mov
fs
xchg
stc
pop
into
cmc
pop
sbb
ficoml
sti
cmc
mov
pop
cmp
mov
fwait
inc
sub
sbb
test
jns
ret
mov
cmp
xchg
gs
out
scas
mov
cmp
mov
movsb
adc
addb
dec
in
jno
shlb
mov
ret
and
fwait
jno
mov
cwtl
cwtl
das
sbb
bound
js
and
xchg
inc
mov
ljmp
in
or
xor
popf
fistl
out
jae
xchg
push
scas
jmp
sar
lret
or
fdivrp
push
shl
sti
xor
jmp
cmpsb
mov
pop
sub
out
stc
test
fwait
xchg
push
xchg
test
pop
xchg
dec
push
push
cmpsl
in
idivb
mov
and
mov
aaa
sub
mul
loop
sbb
dec
in
push
pop
dec
popf
mov
out
sbb
or
sbb
jmp
inc
out
or
cmp
xchg
cwtl
cld
xchg
lcall
push
and
cmp
sbb
mov
cmp
iret
sub
mov
sub
std
pop
cmp
test
push
mov
addr16
and
pop
pslld
mov
popa
dec
pusha
mov
lock
ja
in
inc
inc
jg
pop
mov
mov
loopne
mov
cmp
je
out
insb
inc
pop
and
sbb
stc
xor
or
or
js
mov
pop
outsl
mov
fcmovbe
sub
rolb
or
pop
inc
lea
in
or
cs
stc
jns
mov
pop
in
lret
aad
xor
sub
push
jge
hlt
insl
jb
das
fcoml
mov
inc
outsl
fimull
pop
into
cs
jnp
sub
bound
lret
or
xchg
mov
jle
xor
dec
gs
and
fdivrp
movntq
out
fwait
sub
fsub
addl
les
inc
pop
jge
daa
fs
jg
int
rorb
lods
jnp
mov
cmpb
insb
lods
pop
pop
push
mov
jno
xlat
stos
mov
in
mov
sub
jmp
xor
in
lahf
sbb
movsl
aas
dec
jne
jg
cwtl
addr16
adc
jnp
push
xchg
fwait
jbe
insb
daa
or
jae
xchg
cwtl
test
mov
cmp
ret
in
ljmp
faddl
xchg
mov
mull
xor
sbb
pusha
jle
test
xor
inc
adc
sbb
cwtl
int3
out
mov
cmp
ja
nop
bound
sahf
rolb
add
enter
mov
lcall
and
aad
mov
sub
mov
pop
cmp
mov
jp
xor
mov
lea
out
jge
jmp
hlt
xchg
int
test
or
jge
mov
pop
lret
pop
push
aaa
mov
out
sub
inc
pusha
cmp
and
sub
jg
cmc
movl
mov
bound
out
pop
in
jle
push
stos
scas
lcall
in
dec
sbb
scas
jnp
in
outsb
push
fcomps
or
cmp
mov
push
cmp
lcall
scas
daa
mov
or
dec
adc
inc
loop
xchg
in
lcall
add
xchg
dec
rorb
call
jo
add
push
mov
jae
pop
sub
jecxz
js
pop
mov
jg
outsb
aam
push
cmp
hlt
pushf
pop
ljmp
lds
pushf
and
mov
sub
mov
movsb
aaa
push
inc
sub
scas
jl
sub
call
push
ret
cmpsb
int
lods
adc
stc
sub
fsubrs
stos
dec
pusha
out
push
decb
or
in
xchg
jnp
mov
jno
lcall
pop
loope
aad
je
mov
dec
js
repnz
mov
and
mov
bound
mov
adc
jo
stos
cmp
sbb
mov
xor
in
test
les
jl
in
sbb
ret
add
xchg
pop
mov
mov
gs
in
pop
dec
dec
rorl
dec
orl
hlt
and
mov
mov
add
jne
cli
xlat
out
cld
cmp
pop
mov
xor
cltd
pushf
in
cwtl
push
sub
lret
cmp
and
ffreep
sub
xor
mov
or
mov
dec
cmpsb
push
cld
test
fdivr
add
or
rep
mov
cmp
xchg
fstl
cmpsb
mov
stos
mov
push
fdivrs
out
sbb
jge
mov
pusha
lret
or
out
mov
adc
xor
lret
adc
pop
call
xor
dec
lea
and
and
inc
jmp
pop
dec
mov
inc
adc
adc
xchg
add
adc
jae
imul
adc
mov
jp
push
add
jg
loopne
jbe
xchg
mov
xchg
mov
mov
pop
push
adc
out
sub
inc
inc
fldt
clc
in
and
mov
jbe
cmpsb
mov
adc
out
inc
sub
xor
call
lds
movsl
mov
outsl
cmc
jmp
adc
aaa
mov
shl
pop
addr16
arpl
or
test
aad
rolb
sbb
dec
sub
jge
jbe
leave
jge
icebp
xor
stc
test
push
shll
mov
sub
bound
xchg
orl
push
xor
adc
sti
or
xor
leave
in
test
jbe
cmpsb
cmp
lock
mov
pushl
push
cmp
and
sahf
out
and
xorl
fidivrl
int3
cli
insl
outsb
shlb
out
loop
je
mov
lods
dec
lods
outsl
sarb
pusha
sti
enter
lock
add
mov
rcll
add
jecxz
inc
imul
std
xor
das
lock
cs
xchg
adc
popf
and
dec
scas
add
xor
or
arpl
test
xchg
jae
das
adc
es
mov
icebp
fstps
inc
mov
out
jne
test
or
repz
add
xchg
push
add
or
sahf
test
aaa
add
push
mov
mov
addr16
ds
jle
fs
mov
add
movsl
sub
or
mov
clc
outsb
pop
or
dec
lods
iret
xchg
int
test
loopne
add
ret
sbb
test
and
jne
and
les
xchg
rorl
pusha
sbb
push
jl
stc
mov
negb
and
xorl
jnp
jb
sahf
push
cli
mov
js
mov
ss
stc
mov
movsl
jge
xchg
pop
call
push
je
and
aas
and
lds
pop
loopne
cmovle
jge
cmp
adc
sbb
outsb
pop
mov
pop
mov
jecxz
in
adc
xor
ja
decb
lock
call
ficompl
push
mov
or
adc
mov
push
lock
xchg
push
aam
xchg
iret
xor
lock
fsubs
out
scas
push
jge
fsubl
enter
mov
inc
ss
sub
xchg
gs
jo
push
adc
mov
fsts
pop
push
pop
pop
shrl
pop
notb
push
es
sub
push
push
addb
sub
cmp
mov
repz
fs
sub
xor
mov
daa
cmpsb
or
inc
aaa
jge
sub
xchg
add
adcb
mov
adcb
push
cmpsl
mov
scas
push
imul
mov
pusha
xchg
add
insl
xchg
or
inc
sub
mov
jecxz
scas
sub
scas
push
cmc
lods
cmp
hlt
call
jecxz
pop
xor
icebp
jnp
loopne
dec
lods
xchg
push
mov
xchg
in
mov
ret
mov
dec
add
pop
out
dec
cmp
and
mov
mov
pop
mov
lock
cmpsb
int
ret
call
xchg
enter
sub
loop
shll
filds
push
or
mov
hlt
fsubl
mov
roll
xor
jp
iret
jle
lea
aam
movsl
in
push
jno
jbe
in
test
enter
pop
inc
leave
cmovno
aam
lret
inc
or
mov
mov
xor
fidivrl
pop
mov
ret
xchg
pop
xlat
push
pop
and
xchg
xlat
pop
jns
jns
mov
dec
loope
sub
icebp
cmp
ret
test
jb
mov
sahf
xchg
push
in
ficompl
inc
xchg
shl
btc
add
movl
inc
pop
mov
fwait
xchg
mov
pop
hlt
leave
andl
sub
lods
repz
cmp
fisubs
lods
xchg
jp
rcl
and
and
idivb
add
jl
int3
fimull
mov
add
push
xlat
or
push
cmp
imul
cltd
daa
sti
mov
sub
hlt
pop
inc
movsl
into
hlt
mov
shrl
andb
outsl
jecxz
movb
sbb
outsb
insb
int3
notb
pop
pusha
push
enter
or
cmc
push
and
shrb
leave
pop
decb
incb
out
jmp
aad
push
push
pushf
mov
cmp
jnp
es
add
pop
or
mov
pop
leave
mov
std
cmc
lock
push
cld
jnp
or
and
sar
mov
ret
mov
pusha
in
test
into
hlt
inc
fmul
pop
pop
mov
jmp
push
rol
fiaddl
cmp
push
into
push
daa
data16
fcmovnb
xor
push
xchg
xor
daa
push
insl
jnp
fldcw
jp
sbb
add
xlat
push
jns
les
jne
mov
lock
adc
out
mov
or
cmp
stos
sarb
and
mov
out
mov
jmp
pop
jecxz
cli
stos
ret
cmp
mov
lock
sbb
push
cmp
aad
jnp
mov
or
sbb
pop
cmp
js
and
dec
mov
cmp
outsl
push
adc
xor
and
xchg
dec
add
and
int3
xor
pop
sbbb
lret
mov
mov
orl
cmp
out
mov
ficoml
push
rclb
jae
mov
movsb
or
cmp
aam
out
addr16
jo
sbb
arpl
mov
xchg
outsb
enter
popa
dec
cmc
push
mov
cmovae
lahf
xchg
dec
leave
adc
sbb
adcb
push
sti
fcoml
mov
sbb
stc
in
scas
add
add
movsb
push
sub
adc
jnp
cltd
andl
sub
ss
lds
jle
fs
lods
mov
lods
xor
xlat
xor
or
stos
ffree
push
enter
leave
icebp
incb
cmpsl
mov
shll
les
test
xchg
jae
inc
fs
lret
shlb
push
xor
cmp
inc
xor
lods
adc
push
sbb
mov
mov
or
mov
mov
inc
aaa
jno
outsl
loopne
aad
xor
jne
fdivrs
scas
push
rorb
push
lock
or
jne
ljmp
add
mov
shrl
add
jge
imul
paddsb
and
mov
mov
cli
cmc
rclb
cld
mov
cmp
mov
or
mov
mov
ljmp
loop
inc
xor
xchg
xchg
xchg
inc
inc
lcall
add
cwtl
add
xor
aam
ficomps
es
sbb
ret
lcallw
sub
ja
mov
clc
mov
adc
adc
call
mov
inc
jecxz
lock
lret
mov
push
pop
fadds
lcall
dec
push
jecxz
and
jae
popa
jns
fstps
bswap
or
and
cmc
add
lods
test
adc
pop
xchg
arpl
lret
lcall
repnz
in
add
in
enter
push
out
cltd
sbb
sahf
outsl
mov
jl
ds
aad
xchg
sub
cmc
in
push
in
push
hlt
iret
outsl
dec
addb
xlat
mov
inc
sub
ljmp
push
jnp
dec
jg
nop
mov
sbb
aas
xchg
es
add
pop
jl
ds
push
pop
fldt
shrb
inc
rolb
les
push
sub
xchg
add
clc
mov
mov
sub
cmp
stos
sub
add
mov
aam
ret
ja
xchg
imul
cmpsb
das
fbstp
jle
mov
dec
push
dec
add
sbbl
inc
lods
stos
sahf
or
sub
add
rclb
jl
sub
loop
cmp
pusha
inc
xchg
pop
lds
and
or
rolb
pmulhw
jp
filds
enter
jecxz
inc
add
inc
les
out
stc
lods
lahf
clc
mov
mov
js
pop
out
nop
lcall
testl
xchg
aad
adc
aaa
mov
movsl
aaa
mov
xchg
cmc
push
xchg
sub
pop
mov
outsl
lock
inc
add
pop
ds
loopne
out
mov
cmp
into
es
xor
stos
push
cli
sarb
inc
imul
mov
add
push
sbb
call
stos
and
das
fs
repz
xor
lods
sbb
or
ds
and
xchg
rolb
loope
ror
out
push
pop
es
hlt
aaa
loopne
aas
mov
lret
adc
shll
jb
xchg
fwait
lea
dec
inc
lds
jne
mov
cmp
orl
mov
das
add
mov
cmp
insl
int3
fs
int
rclb
xor
in
mov
movswl
adc
cmp
ret
testl
push
inc
adc
push
push
fcompl
stc
xchg
ret
mov
clc
rol
cmp
test
pop
ret
add
sub
inc
push
ret
movsb
lret
jbe
imul
cltd
jno
shlb
xchg
inc
std
lret
andb
lods
and
js
push
dec
jle
cmpsb
lods
jp
test
xlat
sbb
xor
test
ja
push
jp
int
popa
dec
xor
dec
les
push
pop
lret
add
cmp
ror
inc
daa
xchg
inc
popa
push
adc
jns
sbb
jecxz
mov
jle
rol
outsl
add
out
das
and
push
jle
rolb
push
or
inc
orb
pop
mov
dec
adc
fisttpl
pop
cmpsl
lahf
dec
mov
sbb
cmc
pop
cmp
in
mov
cmpsb
stos
lcall
vmaxsd
aaa
test
orl
mov
stos
fsubrs
xor
dec
jo
inc
jns
push
repnz
repz
cmp
test
jg
insb
out
shlb
pop
jae
sub
mov
or
xchg
jecxz
lea
loop
pop
pop
lahf
xchg
pop
sarb
ss
int
push
sbb
jno
aas
in
pop
aaa
pop
sbb
fs
push
imul
ds
ret
mov
jb
push
pop
push
jae
mov
inc
xor
loopne
push
jge
xchg
mov
scas
push
push
in
cmp
cmp
mov
cld
out
loop
xorb
lods
or
adc
scas
ret
movsb
fsubrl
ret
mov
bound
cmp
fldl
and
mov
cmp
sbb
fwait
mov
mov
sbb
mov
aas
shr
dec
dec
iret
and
movsb
and
mov
clc
repz
and
insl
add
jecxz,pt
adc
mov
test
mov
out
negl
add
add
ss
lret
mov
xlat
insl
and
mov
mov
cmc
std
cmp
cld
ljmp
std
cmp
push
or
je
push
adc
ret
push
cmc
movsb
xor
clc
negl
xor
testb
fdivl
nop
xor
cmpsl
lahf
cmp
loope
mov
adc
js
flds
sbb
loopw
push
sub
pop
sub
loope
int
xorl
mov
cmc
mov
mov
or
pop
sub
mov
jo
aas
mov
aam
bound
aaa
negl
or
jnp
or
and
xor
fistps
pop
mov
mov
fildl
addl
mov
jnp
out
stos
out
jae
xorl
or
mov
inc
fxch
outsl
lds
or
std
mov
leave
in
cli
std
xor
sbb
dec
mov
xor
add
pop
sbb
add
in
pop
arpl
cmpsb
xor
mov
addr16
add
lods
mov
movl
sahf
mov
test
lret
sub
jns
jp
pop
push
jp
sar
into
mov
xor
ret
cmp
int
pusha
and
mov
std
cmp
repz
jb
rcrb
jp
daa
add
mov
inc
or
insl
lods
cli
ret
mov
push
sbb
ljmp
lea
aas
mov
mov
or
xlat
scas
loop
push
clc
aad
or
cli
stos
popf
adc
mov
sub
fwait
stc
pop
jge
imul
cmp
aad
lret
sub
dec
lods
sti
fs
fists
lahf
mov
add
popa
fcoml
xor
adcl
push
xor
jge
gs
enter
sahf
rol
orb
push
das
fwait
add
cld
aas
mov
sub
sbb
xchg
jb
mov
into
cmp
inc
mov
int
out
std
lea
inc
adc
pop
pop
sarl
sahf
push
pop
dec
popa
pop
adc
push
jb
xchg
fcomps
jnp
mov
xchg
mov
ret
xchg
dec
sbb
mov
mov
clc
or
dec
push
cltd
test
or
push
lock
xchg
sbbl
int3
xlat
arpl
ljmp
iret
jns
inc
sbb
and
fildl
push
cwtl
jo
lret
sarl
cli
pop
inc
pushw
leave
jecxz
lock
adc
or
fistl
movntq
out
lret
les
cmp
into
arpl
shll
mov
int3
dec
cmp
xchg
pusha
and
xchg
mov
add
rcrl
xor
divl
mov
push
hlt
scas
fwait
or
fldt
xchg
jns
iret
inc
mov
mov
cmp
inc
fs
clc
and
add
push
and
pop
pop
cmpsb
xchg
fndisi(8087
mov
mov
pop
das
imul
negl
ds
xchg
sub
dec
xor
jns
xchg
adc
rcrl
in
push
pusha
cmp
cmc
into
sbb
mov
pop
sub
cmp
sbb
xchg
daa
and
cltd
sbb
test
bound
pop
popf
push
std
or
mov
mov
push
mov
aad
mov
sub
dec
out
sub
mov
cmpb
leave
push
pushf
and
mov
xlat
pop
xor
mov
fs
outsb
sub
gs
cmp
dec
aam
mov
popa
lods
imul
mov
cli
mov
xor
loop
andb
add
pop
or
xor
pop
dec
push
daa
or
shr
shrb
jae
pop
sub
push
jb
test
mov
sahf
add
icebp
data16
aas
imul
or
push
mov
sahf
lret
pop
cmpb
jbe
hlt
faddl
mov
push
and
sbb
sub
js
fmull
rolb
loop
rcrb
pop
mov
push
dec
repnz
push
ret
into
scas
shll
lods
inc
and
inc
mov
push
jbe
inc
jb
movsb
jo
pushf
push
cmpl
mov
inc
xchg
test
mov
cmp
addr16
xor
fldl
sub
cld
fidivl
or
fdivl
xor
push
pop
sub
loopne
jo
js
movsl
or
push
xchg
add
push
ficoml
test
sbb
stc
jb
push
icebp
mov
ljmp
add
test
mov
rorb
or
pop
inc
mov
sbb
or
bound
inc
pop
push
nop
in
je
movsl
testl
jne
lcall
pushf
dec
pop
mov
jnp
pusha
inc
jp
sbb
add
jp
xchg
push
sbb
dec
jle
mov
or
and
int3
xor
or
xchg
mov
cmp
add
and
mov
imul
cwtl
cmp
fsts
mov
cmpsl
out
add
cmp
daa
dec
mov
mov
stc
cmp
cmpsl
repz
jae
dec
add
jle
rcll
xchg
add
mov
mov
mov
cli
les
vpsrlw
mov
push
inc
stc
jnp
jno
mov
das
mov
pop
cltd
je
test
shlb
xor
cmc
mov
shlb
push
xor
shl
jns
inc
mov
das
mov
jmp
inc
dec
loope
jb
jl
or
icebp
push
dec
nop
push
add
mov
xchg
xchg
cmc
jmp
jb
ss
xlat
clc
mov
mov
pusha
cmp
call
sbb
aas
arpl
cli
add
cmc
ficomps
or
mov
fimuls
sbbl
add
xchg
cwtl
push
mov
and
cli
mov
addr16
clc
pop
pop
push
jo
in
pop
and
movsb
rolb
cwtl
mov
xor
or
lods
xchg
lahf
jne
add
orl
cwtl
and
aad
dec
movaps
xlat
orb
adc
stos
dec
inc
js
cmpsb
int
cmp
dec
je
scas
outsl
repnz
add
cmp
xlat
aaa
out
shrb
sbb
xchg
pushf
mov
div
icebp
push
mov
and
sbb
and
fucompp
movsl
sub
cwtl
popa
stos
pop
xchg
mov
adc
es
add
sbb
sbb
push
xchg
fisttpl
cltd
into
in
int
xor
push
les
cld
jp
or
aas
sub
sub
sti
xor
jne
sub
jmp
cmp
mov
push
and
in
sbb
pop
sbb
and
test
add
mov
or
mov
fs
add
aas
fnstsw
dec
xchg
inc
outsl
insb
pop
test
mov
push
add
jmp
pop
cmp
or
add
pop
dec
inc
rol
jb
lds
cmp
or
testb
adc
push
and
sbb
popaw
pop
or
in
adc
pcmpeqb
iret
xlat
jg
xor
rorb
push
sub
loopne
fistps
push
cmp
pop
test
pushf
add
daa
in
fists
dec
cmp
test
inc
push
inc
or
addl
idivb
in
mov
adc
sbb
inc
and
clc
dec
and
cmp
xor
xchg
in
cld
xchg
pop
scas
sub
xchg
adc
in
in
dec
xchg
dec
mov
hlt
push
fbld
jbe
mov
mov
dec
and
gs
bound
cmpb
xorl
popf
mov
movsb
inc
clc
pop
ljmp
sbb
dec
addl
stos
inc
mov
sbb
lcall
sti
push
sbb
test
or
xchg
xchg
jecxz
pushf
jne
cs
in
mov
orl
adc
pop
popf
nop
mov
mov
xor
repz
add
and
sub
dec
jnp
hlt
or
or
or
ret
add
mov
adc
add
mov
sbb
lret
dec
aad
insl
mov
aad
fdivrs
rol
mov
sub
dec
icebp
sbb
xchg
sub
sahf
fcmovbe
xor
pop
and
lods
mov
shrl
and
sbbl
fdivp
or
xlat
inc
in
out
in
das
adc
in
dec
mov
dec
loope
stc
ss
hlt
xor
pop
fidivrl
dec
imul
out
icebp
jmp
mulb
push
xchg
stc
add
ror
out
pop
sbb
je
loope
cmp
rcrb
iret
cltd
mov
in
das
xchg
ljmp
decb
das
pop
push
pushf
lds
sbb
pop
xchg
push
cmp
outsl
sbb
inc
iret
not
out
add
in
hlt
repnz
mov
xchg
fistpll
sub
jne
dec
enter
jle
mov
push
in
ljmp
mov
adc
push
pop
sahf
mov
add
and
les
inc
mov
sar
push
in
setnp
add
stc
pushw
out
popf
sub
xor
mov
dec
push
mov
mov
dec
out
mov
or
and
jecxz
pop
xlat
test
cld
inc
fistps
imul
sbb
mov
and
jg
inc
lock
int3
lock
xchg
or
add
push
inc
xchg
xchg
sub
in
and
push
cmp
dec
cmp
xchg
stc
roll
cmp
lods
aam
mov
test
cmc
adc
cmp
add
and
lock
push
mov
pop
iret
xor
sub
or
xor
push
pop
sub
inc
mov
popa
shlb
mov
cmp
lea
sub
test
xor
adc
push
insb
ljmp
push
and
bnd
or
shrl
scas
stos
cmp
sbb
xchg
aam
xor
xor
jne
xlat
push
addr16
dec
pop
adc
and
mov
shrb
and
mov
sar
imul
cld
cmp
jne
fistl
movsl
leave
push
push
sbb
or
sysenter
xchg
lret
jb
loope
mov
xchg
xor
mov
lcall
lock
iret
out
arpl
aaa
inc
rolb
test
or
sbb
mov
inc
fistpl
jecxz
xor
in
fsubr
jnp
mov
push
jnp
mov
es
mov
cmc
pop
xchg
and
push
int
lock
fs
movsb
jge
cmp
in
fiadds
stc
inc
fdecstp
notb
loopne
sbb
add
jbe
aaa
mov
jae
xor
ds
or
xor
push
out
cmp
cmp
ss
cmp
mov
jno
mov
fildll
dec
imul
pop
in
sub
pop
mov
fisubrs
cli
add
inc
push
cmc
xchg
jne
sub
push
cmp
in
leave
mov
xor
xchg
leave
push
outsb
or
rorl
and
add
cwtl
cmp
or
aas
adc
cmpsb
jle
paddsw
mov
jle
daa
inc
add
pop
test
jge
sbb
push
adc
jbe
sbb
add
test
pop
int3
or
das
sub
or
push
cld
or
loope
push
xchg
and
hlt
mov
xchg
lods
jg
mov
mov
out
jb
arpl
fildl
or
jmp
mov
pop
and
pop
xchg
imul
xor
stos
pop
ja
cmp
ss
adc
inc
mov
jmp
push
icebp
je
push
call
mov
push
fbstp
jecxz
sub
int3
in
scas
sub
xchg
adc
mov
add
xorb
call
repz
xchg
clc
mov
adc
call
outsb
xchg
mov
into
pop
xchg
dec
pop
orb
inc
mov
fiadds
cmp
xchg
insl
xchg
sbb
fdivs
test
mov
cmpsb
addr16
xchg
in
dec
shlb
lret
call
mov
clc
cmp
add
jge
pop
out
mov
sbb
clc
inc
mov
fcmove
xchg
lcall
loopne
in
sahf
pop
fwait
xor
xchg
inc
ret
cmp
cmp
pop
push
pop
jp
pop
push
sub
repz
ficomps
je
jmp
or
pop
push
decl
xchg
call
sub
pushfw
adc
and
dec
push
push
stos
jl
xchg
repz
mov
dec
and
nop
mov
fucomi
cwtl
cltd
dec
inc
xorb
dec
imul
ret
out
dec
mov
out
rclb
in
jmp
xchg
lock
mov
rorb
les
scas
leave
dec
cmp
sub
scas
js
loopne
push
enterw
pushf
notl
cltd
and
xchg
aas
pusha
test
pop
cltd
pop
add
loopne
je
out
call
cwtl
test
cmp
das
hlt
xchg
roll
lds
ret
inc
test
sbb
and
fsubl
xlat
fstpl
out
bnd
dec
inc
cmp
bound
clc
test
push
cmp
faddp
int
sahf
fmuls
sbb
and
mov
idivl
out
cmpsb
push
jo
xor
dec
mov
pushf
cmpsl
test
push
cmp
xor
pop
add
sbb
mov
imulb
imul
imull
icebp
out
jecxz
and
jns
int
insb
call
das
inc
pop
cmpsb
adc
gs
adc
dec
mov
push
aam
sbb
inc
out
xchg
adc
aaa
scas
mov
pop
push
push
mov
iret
add
xor
imul
dec
jns
and
cli
jno
jg
scas
push
jno
push
insl
push
ljmp
lea
stc
inc
movsb
test
mov
xor
mov
movsl
fmuls
mov
xchg
lock
frstpm(287
sub
insb
dec
fildl
pop
test
sub
popl
lret
cmpl
push
out
sbbb
inc
mov
sub
mov
adc
popf
sub
sti
test
xchg
sbb
add
fcoml
pop
das
xor
sub
inc
lock
cmp
mov
loope
xchg
push
inc
fimuls
ficoml
sbb
dec
mov
dec
ret
and
cmp
jmp
xor
popf
dec
jnp
es
add
sub
xchg
jne
jle
jnp
jge
xor
push
jns
mov
inc
test
sti
mov
mov
cli
movsb
inc
pusha
pop
add
jmp
mov
in
xchg
addr16
push
jno
jb
je
enter
xor
dec
in
out
addr16
cmp
lock
bound
cmpsl
js
mov
and
add
dec
cltd
ret
shll
dec
mov
aas
vmovd
pop
cmp
in
pop
push
pop
push
mov
imul
mov
jnp
push
xor
shr
jnp
loope
xchg
cmp
jl
or
push
jg
push
jecxz
fwait
test
mov
mov
in
push
imul
sub
out
pop
mov
push
sarl
scas
cmc
lds
in
jnp
jmp
popl
incb
std
leave
jne
jns
pusha
push
dec
sbb
mov
into
mov
sbb
enter
fs
push
lds
in
pop
dec
stos
xchg
bound
mov
arpl
out
iret
mov
les
int
push
xchg
rclb
in
xchg
lahf
push
sub
sub
aas
mov
add
cmpsb
mov
insb
inc
push
xor
in
fwait
push
pop
outsw
sbb
cmp
mov
scas
sti
js
sbbl
ret
out
pushf
dec
test
jno
inc
adc
xlat
gs
mov
xchg
into
dec
mov
add
iret
inc
imul
adc
mov
mov
popf
adc
push
lahf
std
sbb
xor
add
xchg
sub
int
pop
push
subl
imul
popf
lahf
jecxz
pop
and
repz
sbb
sbb
dec
ss
mov
mov
push
xor
or
ficomps
adc
in
jb
int
stc
out
dec
xchg
or
testb
movsl
insb
mov
push
lods
pop
scas
fidivrl
fiaddl
xchg
js
sub
mov
rcrl
je
cmp
mov
imul
jge
cmpb
enter
add
bound
xor
scas
mov
push
inc
inc
lret
icebp
int3
xchg
xchg
mov
loop
ja
cmp
sub
data16
jmp
dec
dec
mov
loopne
fsubs
insb
fdivl
fiaddl
or
mul
mov
repz
ret
xchg
jl
xor
add
arpl
and
xlat
insb
cmp
xor
mov
pop
shlb
aas
mov
test
xchg
inc
sub
imul
inc
dec
ss
popl
push
mov
les
mov
and
out
sub
xchg
xchg
stos
mov
sub
add
fs
rclb
xchg
mov
pop
jg
dec
push
dec
andb
jge
mov
jle
xchg
xchg
dec
sub
and
cmpsl
add
imul
xor
hlt
das
xchg
mov
cli
repz
pushf
int3
incb
in
mov
cmp
call
or
xchg
push
mov
cli
dec
xor
jae
push
fisttps
or
repz
xor
mov
in
nop
dec
pop
daa
inc
push
std
rcrl
mov
push
inc
dec
jbe
das
or
mov
int3
mov
xor
gs
jmp
push
dec
jp
adcb
mov
or
shrb
or
test
jo
sub
sub
idivb
sbb
lock
push
or
gs
xchg
loopne
xchg
fcmove
cwtl
mov
cmc
sti
test
dec
push
mov
outsl
mov
aam
in
imul
push
mov
jecxz
xor
jns
cli
add
pop
aaa
addr16
std
mov
xchg
cmp
popf
add
loope
fwait
or
sbb
pusha
out
xchg
stos
popf
popf
fucomp
out
mov
test
sub
hlt
lds
dec
addl
adc
bound
lret
lods
movsl
out
inc
ljmp
hlt
loopne
in
and
jmp
adc
jg
cmp
and
aad
and
aaa
inc
xchg
dec
std
leave
stos
dec
cmpsb
mov
mov
out
int
xor
mov
les
stc
imul
rcll
daa
insb
popf
int3
and
fdiv
cmpsb
cmpsl
pop
sbb
mov
mov
add
imul
inc
int
das
js
push
mov
mov
popa
inc
mov
jp
loopne
cs
jmp
xor
sbb
mov
add
imul
stc
imul
neg
fldenv
dec
xchg
mov
pop
mov
arpl
cwtl
hlt
outsb
out
daa
mov
mov
xchg
into
inc
sub
push
fxch
or
cmc
data16
sbb
cli
cld
in
dec
mov
adc
inc
push
loop
ja
sub
xchg
lea
out
inc
enter
adc
shl
aam
sub
mov
mull
mov
test
or
mov
out
jnp
mov
scas
or
jo
xchg
ss
scas
inc
call
loop
fstpt
nop/reserved
xor
mov
insb
ret
ss
ja
out
cmp
cmp
jmp
sub
jo
je
pop
inc
sub
aaa
fdivp
push
in
push
jne
repnz
in
or
pop
cmp
xor
jecxz
sarb
sbb
sbb
sar
mov
pop
mov
push
push
xchg
aas
out
pop
cli
cmp
jb
mov
jae
lea
cmp
xchg
xor
popa
inc
test
jae
fisttpl
insb
in
out
or
scas
push
dec
sarb
mov
insb
xor
fnstsw
add
or
mov
mov
bound
jp
push
dec
dec
and
xchg
notl
js
in
movsl
shll
inc
xor
lock
fsts
mov
data16
test
dec
inc
lret
push
dec
cld
mov
xor
fcomi
ja
pushf
jnp
aas
jle
xchg
subb
sub
inc
mov
shlb
or
xor
mov
sub
lret
jns
loopne
stos
cmp
pop
push
cmp
in
ja
cli
mov
mov
sbb
and
add
popf
rcrl
std
cmp
shrl
pop
jnp
dec
int
fwait
enter
sub
cli
fwait
adc
clc
jle
xor
xchg
dec
cmp
sbb
pusha
lret
fiaddl
mov
mov
cmp
jno
adc
shll
cmc
shll
cmpsl
test
lret
cmc
mov
int
fsubs
push
out
pushl
loop
cwtl
and
sbb
jne
data16
cwtl
mov
in
sahf
inc
lea
and
sub
jns
or
daa
or
sub
movsb
mov
repz
inc
pop
cmp
mov
std
sub
lahf
jmp
stc
fwait
or
stos
xchg
xor
testb
pop
subl
popf
in
int3
sti
rcrb
out
xchg
filds
stos
popf
bound
or
jmp
daa
ss
movsl
adc
mov
push
mov
or
lds
jae
daa
enter
stos
cmpsb
lock
mov
stos
xacquire
sti
shlb
sbb
sbb
aad
movsl
mov
and
stos
pop
sbb
insb
lcall
loope
into
and
arpl
dec
jo
add
inc
jp
fsts
cmpsb
mov
shrl
mov
adc
pop
xor
std
jp
aad
insl
fimull
popa
aas
pop
movsl
lcall
fs
push
cltd
subb
into
int3
pop
jbe
loope
aam
push
and
adc
add
and
sti
es
out
or
lahf
and
fdivrs
pop
adc
not
adc
mov
push
mov
lds
and
cld
addr16
or
gs
hlt
inc
sub
mov
icebp
inc
sub
rolb
inc
pop
scas
jae
pusha
hlt
dec
mov
scas
pop
jbe
sub
pop
idivl
bound
in
add
stc
or
pushf
repnz
fists
adc
testl
fdivr
dec
jo
cmp
cmp
icebp
inc
mov
dec
mov
cmpsb
out
pop
push
into
jp
and
lahf
dec
popf
push
pop
and
xchg
fisubrs
xchg
iret
push
cmp
xor
mov
lock
cmc
sub
adc
shr
pushf
or
jp
xor
mov
and
aas
or
loope
pop
pushf
and
mov
or
movb
push
fdivrl
xchg
and
rcr
adc
inc
fisttpll
roll
jge
xor
dec
inc
mov
add
int
sbb
sti
and
cmp
jne
mov
ftst
roll
stos
js
push
add
ljmp
addr16
nop
mov
mov
dec
dec
lret
jg
and
dec
addr16
adc
lret
sbb
pop
les
mov
imul
sbb
leave
jno
or
sbb
movsb
in
in
inc
adc
adc
push
xor
mov
jg
pushf
punpckhdq
add
gs
add
test
out
mov
xor
xchg
insb
hlt
je
inc
push
push
dec
and
dec
and
mov
pop
cmp
mov
les
sbb
scas
test
idivb
xlat
add
xchg
imul
out
mov
mov
mov
js
push
fistl
xchg
lret
mov
mov
mov
and
add
pop
leave
imul
out
inc
jne
popf
icebp
dec
lahf
push
mov
outsb
ss
mov
fsubr
pusha
push
popa
pusha
mov
sbb
in
sub
jb
lahf
arpl
inc
fmull
insl
leave
mov
push
dec
ja
repz
stos
dec
fstp
fadd
leave
int3
out
cmp
sub
cmp
sbb
gs
out
mov
mov
inc
push
jmp
shll
mov
adc
push
inc
mov
popf
cmp
rorb
imul
jb
xlat
cmp
insl
and
jl
aas
mov
adc
inc
sub
push
rcrl
xchg
dec
push
inc
cmpsb
mov
xchg
jl
mov
lods
push
or
mov
mov
cmc
or
pop
cmc
in
inc
int3
addr16
xchg
sub
sub
sub
cmc
mov
jo
jo
mov
jno
popf
out
cmpsl
push
out
in
sub
push
mov
popf
pop
sbbb
dec
sbb
aaa
dec
mov
cmp
push
and
sti
cld
rorl
sbb
arpl
test
cs
lahf
in
mov
out
cwtl
or
pop
xchg
pop
jmp
clc
icebp
dec
mov
shlb
int
je
jae
shll
lcall
into
fsubrl
or
or
jl
cmp
repz
jns
and
scas
ret
sbb
mov
inc
jbe
pop
jns
loopne
js
sti
push
jmp
lods
sbb
jno
test
sbb
mov
outsl
or
sbb
dec
add
jl
xor
push
mov
das
pop
cmpsb
bound
mov
mov
fs
pop
fsubs
cmp
pop
and
jo
dec
negl
xchg
push
mov
mov
int
add
xchg
xor
sub
jle
or
les
shll
or
mov
mov
int3
dec
cmpsb
shrl
adc
xchg
push
add
push
cli
jmp
push
outsb
ljmp
mov
xchg
jne
stos
add
adc
push
jno
in
xchg
js
adc
sbb
lods
cmp
outsl
sarb
or
sarl
cltd
push
bnd
sti
jge
push
or
dec
mov
mov
dec
loope
mov
mov
pop
mov
imul
inc
adc
shll
es
loope
or
mov
stc
pop
push
adcb
xchg
mov
out
xor
xorb
nop
mov
dec
bound
and
push
jge
sub
mov
mov
xor
mov
add
test
test
dec
call
clc
fnstsw
aad
test
jmp
insl
in
mov
cmp
jne
jg
and
add
fdivs
loopne
scas
xchg
jge
sbb
xchg
mov
or
stos
shrb
pop
or
out
dec
fistpll
xor
cwtl
mov
xor
int
out
lock
mov
sbb
pop
adc
cmp
xchg
adc
lret
sub
mov
icebp
loop
xorl
mov
dec
xor
outsb
out
mov
sarl
and
pop
int
ss
scas
addb
shrl
aad
outsl
inc
push
pop
lcall
insb
iret
out
mov
adc
cmp
and
aam
mov
sub
jp
push
and
and
cmpsb
xchg
xchg
mov
dec
and
aam
pushf
cmp
and
inc
push
aas
rorl
xchg
pop
mov
mov
dec
add
xor
add
out
xchg
xor
mov
out
ds
dec
lret
div
sub
jo
int3
jb
ret
inc
xor
data16
mov
enter
in
movsb
xchg
fisubrs
xchg
jp
std
loopne
jl
or
nop
mov
in
dec
ss
inc
dec
loop
inc
aaa
popf
mov
js
or
cltd
cmpsl
divb
cmpsl
jb
pop
out
cmpsl
test
rorb
dec
dec
jnp
js
cli
jbe
arpl
dec
fcoms
add
jne
inc
pop
mov
insb
fs
movl
or
cmpsl
repnz
fs
sarb
hlt
insb
rorb
shlb
pop
push
and
jno
mov
sahf
pop
dec
movsb
mov
inc
fsubs
push
les
jge
mov
lret
and
lea
dec
repz
adc
add
mov
inc
xor
xor
lret
mov
ret
dec
dec
mov
jb
in
adc
mov
pop
fsubrl
inc
xor
out
mov
cmp
clc
xchg
push
xchg
mov
mov
mov
incl
cmp
push
push
or
jle
roll
fwait
dec
dec
fwait
bound
leavew
cmp
mov
cli
pop
arpl
outsl
cmp
popa
rolb
popf
dec
packssdw
shll
lcall
movsb
xchg
jbe
arpl
sub
mov
jo
int3
xor
add
pop
fucomi
sti
sub
mulb
jb
cmc
mov
pop
ds
push
and
mov
pavgw
in
xor
jae
fildl
cmp
jl
push
ldmxcsr
das
or
pop
loopne
mov
lds
mov
cmp
gs
adc
adc
jnp
gs
xchg
dec
and
icebp
dec
ja
lahf
pusha
xor
movb
shr
sub
orb
fadd
in
or
inc
call
add
push
adc
mov
enter
jmp
dec
sub
in
inc
and
in
outsb
mov
add
and
and
pop
sbb
xchg
out
subb
xor
shrl
fmuls
aam
ljmp
adc
pusha
push
mov
sbb
add
arpl
lea
aas
sbb
jnp
mov
jmp
stc
ret
cwtl
cmp
clc
data16
test
push
xchg
mul
add
ret
xor
fs
subb
cltd
inc
sub
insb
push
lods
inc
daa
ds
inc
dec
push
jp
mov
jmp
lods
inc
add
pop
fstps
call
mov
sub
repnz
cmp
xchg
mov
mov
inc
sbb
adc
ror
lret
sub
fisubrl
cli
cmpsl
cwtl
cwtl
mov
rcrl
test
movsl
dec
stos
fmull
imul
test
mov
popa
pop
pop
mov
mov
movsl
aad
mov
jns
push
mov
icebp
pop
adc
and
inc
cmpsb
add
ljmp
or
push
cmpsl
and
lret
jne
or
pop
mov
in
jne
pusha
sub
xor
jno
xchg
outsb
ja
xchg
xor
mov
sahf
and
or
mov
push
pop
aas
pusha
push
mov
icebp
add
jmp
cmp
icebp
sub
js
dec
arpl
mov
xor
sar
adc
mov
arpl
dec
pop
jg
push
push
add
xchg
push
in
out
cltd
add
shll
mov
ret
out
cmpsb
and
xor
adc
fisubl
arpl
mov
pop
in
cli
cli
xchg
test
mov
jbe
loope
pop
mov
push
ds
inc
add
inc
or
cmp
das
lock
jo
pop
mov
inc
out
mov
mov
adc
mov
ret
hlt
xor
mov
adc
xor
push
mov
ss
scas
dec
cmp
xlat
jbe
or
jge
mov
addr16
sub
xor
add
mov
rclb
sub
out
call
push
mov
arpl
ror
fnsave
mov
xor
inc
rolb
adc
xor
lcall
push
inc
cmp
add
push
xchg
setnp
insb
call
jns
xor
add
andl
ss
dec
jo
cmp
pop
pop
pop
sarb
push
imul
mov
insl
ljmp
arpl
xchg
ds
inc
pushf
xor
cmp
hlt
cli
movl
lea
add
fldt
mov
js
stos
jne
cmc
icebp
int
cs
mov
mov
addl
shlb
sub
das
sub
sbb
pushf
pop
and
inc
inc
cmp
sbb
mov
dec
outsl
adc
pop
inc
pusha
fwait
mov
jnp
pop
jg
fbstp
lahf
dec
aas
sbb
sub
xchg
and
ss
mov
xchg
push
xchg
pop
lea
or
in
push
aam
mov
add
push
push
loope
xchg
loopne
js
mov
pop
lret
cmc
ficomps
cld
sub
sbb
and
push
sbb
adc
adc
subl
push
loop
cmp
push
dec
fwait
push
xchg
leave
adc
or
add
lods
out
and
outsb
roll
pop
mov
cs
mov
pop
xor
loope
inc
movsb
jmp
lcall
ffree
es
push
add
in
lcall
add
repz
sub
sub
push
pop
ljmp
in
cmp
add
aad
sbb
push
out
lds
aaa
je
mov
dec
dec
xchg
dec
push
jg
rcl
loopw
in
pop
rcrb
push
and
xchg
and
mov
cli
xor
cmpsl
pop
leave
add
or
push
imul
ljmp
loope
in
lea
mov
adc
sub
in
mov
lds
add
in
pop
cmp
dec
popa
mov
mov
push
add
sub
jbe
dec
add
jbe
jmp
test
rol
imul
inc
inc
test
loop
lcall
xlat
inc
pop
push
push
notl
inc
sbb
inc
addr16
xchg
lea
add
xlat
push
fdivrl
jo
mov
xchg
sbb
xchg
mov
in
adc
mov
sub
mov
scas
or
lret
loope
add
add
call
cmpsb
pop
push
cld
les
pop
push
xor
ljmp
fstps
jo
enter
subl
dec
inc
jne
xor
loopne
insb
push
jmp
roll
fmulp
mov
rclb
cmp
addr16
cmp
sub
xchg
adcb
out
inc
mov
lock
cmp
xchg
out
mov
xor
pop
pop
ret
jmp
shll
or
mov
pop
jge
mov
bound
pop
in
push
fmul
cltd
lcall
gs
test
aas
sub
loopne
cmc
mov
cmp
dec
sahf
shl
fsubrl
and
stos
cmp
sti
icebp
nop
stc
fcom
popa
ja
cmp
fisttpl
push
lea
js
adc
cmpsb
std
or
dec
xlat
lret
mov
push
aam
imull
arpl
and
int3
xor
jp
mov
insb
stos
jae
fwait
je
loop
dec
pop
pop
outsl
or
or
leave
jae
lods
imul
mov
push
outsl
fcomip
inc
sti
jp
ffreep
sbb
xchg
or
adc
sub
ja
adc
pop
cmp
sti
shl
pop
add
jp
push
dec
jae
shl
push
push
cmp
lret
xor
aam
xor
movsb
ret
cmpsl
mov
subl
sbb
sub
int
gs
iret
push
jbe
or
lcall
data16
out
jb
shll
out
xor
js
pop
fwait
mov
aam
push
lods
outsb
xchg
ljmp
and
fcmovu
cmp
dec
mov
into
movsb
ret
test
mov
mov
and
jmp
dec
bound
xor
shll
pop
adc
out
fcomp
xor
int3
repnz
mov
mov
push
pop
jmp
and
mov
xchg
jge
ljmp
cwtl
sbb
xchg
jle
out
je
nop
xor
bound
cmpsb
mov
mov
mov
les
adc
xchg
mov
mov
push
repnz
dec
xor
push
or
jne
mov
sub
in
roll
xchg
pop
cmp
xchg
push
rorl
pop
push
jge
pusha
test
jbe
pop
push
mov
jmp
xchg
push
sbb
popa
loopne
repnz
and
into
je
ds
lret
std
adc
divb
xor
loope
daa
sub
data16
hlt
stos
push
mov
in
lcall
mov
or
dec
mov
repnz
or
rep
or
push
sub
mov
ljmp
daa
jmp
cmp
popa
and
mov
movsl
movsb
adc
or
xlat
sub
mov
mov
ds
pop
sub
nop
mov
sub
popf
lods
outsb
push
out
sbb
cmp
imul
test
add
mov
pushf
clc
jmp
mov
dec
cld
or
push
jbe
pop
xchg
push
sub
in
mov
cmpsb
aaa
mov
and
cs
je
adc
push
or
xchg
lret
out
sbb
rcrl
sub
out
cmpsb
fstpl
xor
push
or
roll
stos
jecxz
push
mov
rcl
or
xor
je
pop
rolb
test
push
out
cmp
xor
movsl
adc
sbb
push
int3
and
and
fmuls
rclb
mov
xchg
xchg
ja
sbb
jp
add
mov
sahf
pop
jns
arpl
push
xor
or
bndstx
les
sub
jae
and
pop
fmul
sub
into
adcl
and
jo
xchg
cmp
jns
pop
pop
mov
stos
cmovae
outsl
ds
pop
jns
xorl
mov
out
ret
mov
movsb
xchg
and
fcmove
mov
mov
sarb
fs
gs
aam
loope
or
pushf
dec
hlt
lahf
lock
xor
sbb
rclb
and
es
arpl
cmc
push
push
fcompl
or
lret
mov
mov
repz
das
sub
dec
xchg
dec
adc
jnp
cli
rorl
das
hlt
push
dec
sbb
scas
out
stc
dec
fimull
shll
fxch
mov
out
dec
cld
push
loopne
repz
in
es
add
and
mov
add
push
and
xor
and
movsl
js
stos
in
enter
pop
sbb
or
mov
addl
ja
icebp
cmp
lds
stos
pop
or
xchg
jo,pn
dec
dec
jb
push
lahf
jo
popf
sbb
in
sub
setno
subl
ja
pushf
push
icebp
xadd
pop
test
arpl
dec
imul
cmp
mov
shlb
int
pop
jecxz
lods
adc
test
mov
push
mov
in
sahf
push
adc
sbb
stos
lds
sub
xchg
stos
call
and
in
enter
outsb
push
cmp
daa
ficompl
shlb
push
jnp
movsl
sti
pop
or
hlt
mov
jno
xchg
add
mov
add
insb
sub
rcrb
fistpll
test
pop
jge
xchg
sub
xchg
loope
andl
lods
jmp
xchg
cmp
fildll
ror
popa
cmpsb
jnp
push
repnz
sub
mov
mov
and
repnz
or
sti
add
ror
jbe
mov
add
roll
sahf
jbe
stos
imul
cmpsb
jge
dec
or
ss
test
clc
aaa
mov
push
mov
sbb
pop
add
push
je
mov
pop
jle
xorl
repz
push
adc
add
add
pop
cmc
int
lods
loop
loopne
jno
stc
cmpsl
loop
xchg
outsb
test
in
or
inc
cmp
cli
jns
sbb
and
inc
leave
push
les
pop
aaa
loopne
xlat
cwtl
jbe
xor
repnz
dec
mov
negl
cmp
orl
test
in
andb
lret
addl
cmp
mov
je
aaa
cltd
pop
clc
push
fxtract
cmpsl
cmp
popa
movsb
mov
jno
push
test
xchg
push
pop
sbb
sbb
jb
data16
pop
dec
mov
mov
pop
pushf
dec
clc
lret
fistpll
or
repz
lea
ficoms
dec
add
repnz
daa
popf
mov
jb
cmc
das
and
rolb
mov
out
popf
nop
popa
ljmp
lcall
popf
xor
and
push
jb
jnp
fnstcw
lock
mov
pop
icebp
repnz
push
int3
popa
cwtl
ret
and
mov
jbe
mov
mov
mov
stc
mov
sahf
scas
push
mov
jmp
ja
fcoml
mov
jnp
pop
and
push
pop
imul
and
scas
bound
push
or
adc
fbstp
aad
adc
repz
jl
dec
mov
dec
xor
insb
pop
lods
stos
jb
sti
mov
push
aaa
lods
adc
leave
fildl
push
push
push
xchg
mov
add
cld
fiaddl
lret
sarb
outsl
clc
mov
aaa
test
dec
test
iret
jbe
jne
fs
inc
cmp
fwait
pop
xor
clc
mov
loop
dec
rclb
outsl
mov
sub
mov
push
imul
lds
sub
add
aas
cmp
sahf
movsb
mov
add
in
pop
cmp
xchg
mov
mov
loope
jne
mov
aas
shll
inc
jge
or
inc
xor
sbb
push
sti
divb
popa
data16
add
sbb
xor
sub
addr16
lods
rcr
sbb
sahf
add
out
insb
jae
dec
or
aam
mov
xchg
jbe
movsl
ror
lock
icebp
cltd
scas
scas
lcall
mov
cli
adc
inc
imul
or
inc
mov
aas
jmp
fsubp
push
cmp
and
cmp
outsl
pop
adc
mov
je
push
pop
inc
imul
clc
movsb
aas
lods
rcl
pop
adc
xchg
add
cmc
jmp
and
dec
xchg
inc
mov
dec
mov
fs
and
mov
repz
das
xchg
je
xchg
dec
insl
nop
xchg
outsl
repz
sub
in
rol
in
xchg
in
repz
cmp
loop
and
sub
movsl
jbe
mov
cmpsl
push
jae
pop
in
pop
hlt
push
cmp
mov
ss
dec
sub
fwait
and
ja
jbe
test
out
adc
into
int3
in
or
add
mov
lahf
adc
push
push
lock
test
xchg
pop
nop
xor
pop
mov
sub
sbb
inc
cmpsb
fdecstp
faddl
enter
cld
stos
loopne
jmp
xchg
inc
sub
arpl
push
cmp
cmp
xchg
pop
adc
mov
dec
cmpl
stos
dec
mov
cmp
leave
xor
and
adc
vpmacsww
jle
ss
mov
sbb
es
xchg
fcmovne
sub
push
inc
xor
shlb
jne
add
sbb
xor
scas
in
xchg
or
pusha
jno
cmpsb
sub
dec
outsb
aas
xchg
fs
pop
out
cs
sub
mov
sub
jg
inc
push
xor
mov
sti
push
into
fidivrl
jne
out
inc
push
cmp
dec
js
cmp
test
xorb
inc
push
pop
fucomip
jl
cmpsb
mov
pop
test
and
notl
jge
xchg
int
fldpi
fiadds
out
lret
imul
sbb
push
scas
ret
mov
sbb
push
repnz
fs
mov
dec
mov
fcoml
push
lret
andb
imul
iret
pushf
add
inc
in
jmp
add
add
jnp
out
mov
rcl
dec
out
out
sbb
add
push
fadd
pop
aaa
mov
dec
lret
push
lret
jno
arpl
cmc
or
or
xchg
sbb
icebp
outsb
and
sarl
jl
pop
fwait
imul
dec
fidivrl
mov
mov
pop
jg
or
inc
push
jge
les
mov
fsubl
testb
cmp
test
add
cld
add
add
sbb
sbb
jp
dec
incb
ljmp
add
xor
lcall
inc
fsubrp
push
data16
pushw
test
and
xchg
icebp
std
mov
shl
out
push
and
xchg
into
mov
test
cmpsb
adc
cmp
inc
mov
jmp
or
imul
mov
ja
mov
push
mov
icebp
aas
div
ret
xor
pop
inc
sub
pop
and
mov
loopne
pop
test
into
adc
inc
xchg
popa
xchg
test
mov
cmp
out
push
cld
aam
xchg
add
mov
or
fwait
dec
jp
dec
dec
inc
lcall
xor
imul
inc
pushf
je
xor
out
mov
adc
cmpsb
jo
test
sbb
adc
push
sbbl
dec
or
jo
and
inc
cmp
jne
mov
in
fldl
mov
sub
and
xor
sub
sub
xchg
and
jle
inc
outsb
or
out
clc
sbb
leave
mov
ja
xor
dec
xchg
ret
out
outsb
jnp
ret
aas
sbb
mov
ud0
lahf
dec
test
cs
mov
shll
xchg
addl
dec
sub
add
sbb
jecxz
cmp
add
pop
push
stc
ja
adcl
nop
scas
add
cmp
in
push
rcrb
sbb
loope
adc
test
add
outsb
cmp
scas
or
fdivrs
das
ret
and
push
lret
in
hlt
push
cmp
bswap
ljmp
xchg
cwtl
ffreep
sub
mov
clc
je
mov
aas
pop
dec
adc
in
inc
jecxz
lock
test
data16
mov
dec
ror
mov
dec
pop
xchg
test
jns
xlat
arpl
mov
lahf
test
xor
popa
or
push
test
lds
cld
cmc
stc
ja
and
add
es
pop
jl
addr16
insb
mov
sub
cs
fcoml
fwait
pop
aas
push
jae
aas
jge
outsb
cmp
dec
cmpsb
adc
mov
outsb
inc
frstor
out
add
adc
push
daa
pop
je
lods
shrl
pop
cwtl
add
xchg
fwait
or
push
push
inc
sar
xor
jmp
lds
es
repnz
setge
cmc
sbb
fdivrs
fdivl
negl
scas
rorl
cmp
gs
rclb
mov
pop
add
sbb
adcb
roll
jbe
movsb
xor
fwait
or
out
jo
add
adc
cmp
sete
cmp
xor
test
or
push
lds
xchg
mov
std
mov
mov
sbb
mov
scas
es
or
cmc
cmpsb
inc
sub
dec
loopne
push
add
or
pop
fnstenv
xor
clc
movsl
sub
xlat
lods
inc
sbb
arpl
mov
jno
imulb
jo
stc
clc
repnz
daa
sbb
into
loope
pop
push
shrl
aaa
js
lret
pop
subb
jnp
dec
fnstsw
add
fnsave
sub
adc
inc
push
lret
jmp
jl
dec
sub
inc
call
fadds
adc
fimull
mov
mov
pop
clc
roll
sbb
sub
adc
cs
jge
push
into
jne
aas
call
lods
push
out
adc
add
jg
lds
std
hlt
data16
fadds
cwtl
lcall
rorl
test
pop
hlt
xchg
outsl
xchg
mov
int
pop
dec
dec
xchg
int
jmp
scas
lret
out
cmc
xchg
add
cs
iret
mov
mov
sub
dec
imul
outsl
or
cmp
addr16
push
cmpsl
adc
loop
lret
jno
mov
dec
inc
jns
and
and
inc
jb
aaa
insl
or
mov
test
repnz
push
mov
dec
sub
imul
loope
mov
xchg
mov
loopne
mov
mov
and
call
cltd
sub
cmp
jmp
orb
cmp
hlt
scas
xor
cmp
das
mov
push
jo
mov
es
add
jmp
mov
les
insl
mov
mov
push
push
test
popf
out
loopne
push
mov
xor
jmp
pop
aam
imul
stos
sub
jbe
mov
and
loopne
lea
xor
sub
jge
pop
lock
mov
in
das
mov
inc
sbb
cld
xor
loope
in
jl
push
mov
or
adc
sbb
arpl
imul
repnz
ljmp
jb
add
and
adc
out
arpl
sbb
cmpsb
mov
test
dec
pusha
pop
test
mull
dec
movsl
sub
mov
ja
and
lods
inc
adc
sti
dec
add
pop
aam
cld
sub
xlat
aas
push
mov
pop
add
mov
cmp
std
into
push
fbstp
fcomi
cmp
fcompl
je
shll
nop
push
sub
xchg
ja
pop
fisubrl
mov
out
rcll
sbb
repz
in
lret
push
stos
js
add
sub
mov
inc
inc
xchg
imul
fstl
sar
jns
or
aaa
lods
das
test
push
inc
popa
cmp
mov
or
aaa
jle
loopne
subl
cmp
push
sub
in
fisttpll
les
scas
pop
out
mov
rcrb
cmp
or
xlat
jns
pop
dec
inc
lds
lret
sarb
sbb
inc
push
popa
repnz
rcrl
ss
daa
mov
enter
out
xor
adc
in
push
jge
mov
mov
daa
negl
popf
mov
test
jmp
dec
jp
sub
aaa
mov
push
stos
lret
xchg
js
cmpsl
popf
stc
sbb
dec
pop
cmc
es
mov
xchg
pop
sbbb
int3
jp
adc
sbb
pop
sub
adc
aaa
cmp
xor
lret
and
jge
mov
fists
push
add
add
jmp
add
stc
arpl
int
push
inc
cmp
cmp
mov
in
push
data16
les
lcall
out
outsl
bound
mov
into
mov
test
push
leave
je
out
stos
pmulhuw
jg
lods
movsb
sbbb
aas
mov
shr
jle
insb
xor
jnp
mov
loop
in
lds
dec
cmp
pop
push
inc
lea
sbb
arpl
xchg
xchg
mov
dec
lahf
movsb
and
int
out
gs
lea
test
jae
stos
push
enter
js
jmp
loopne
dec
adc
aas
shlb
sbb
and
cli
les
jno
mov
jo
movsb
sarl
repz
xor
aas
sbb
xchg
jecxz
dec
cmp
adc
scas
daa
inc
arpl
push
push
repnz
stc
lahf
fmulp
divb
xor
cli
gs
repz
add
in
pop
inc
inc
les
pushl
mov
js
jno
clc
cs
inc
push
jecxz
stos
incl
push
push
xor
jp
jnp
test
cli
push
add
imul
cmp
cmpsb
dec
jbe
in
cmp
roll
or
cwtl
pop
xlat
adc
mov
nop
lds
or
mov
sbb
movsl
fwait
or
in
jle
pop
cli
scas
fcompl
push
loopne
in
jge
xchg
xchg
and
push
xor
cmp
stc
sbb
fwait
popf
scas
jno
dec
mov
scas
sbb
ds
mov
pop
mov
fstps
js
addl
leave
jae
int3
aad
cwtl
mov
call
xchg
dec
xchg
into
mov
ss
inc
test
xchg
shlb
add
loopne
ret
cmc
add
ss
pop
dec
out
sbb
mov
stos
mov
cmovns
test
call
inc
xor
jns
repz
std
push
testb
mov
or
dec
clc
and
push
add
push
pop
cs
shll
cmp
dec
rorb
std
scas
fcompl
lcall
pushf
pusha
add
pop
testb
and
negb
lods
cmp
mov
in
ret
push
pop
call
inc
mov
orb
push
mov
out
sub
insl
xchg
cmc
out
push
jns
insl
cmpsb
mov
sub
std
ljmp
pushf
push
cli
xchg
icebp
inc
lea
mov
out
pop
out
cmpsb
push
mov
and
dec
cwtl
and
push
sub
rcr
shlb
subb
lret
sub
lods
xor
jge
std
iret
xchg
andl
imul
arpl
mov
push
xchg
fldt
jo
cmp
inc
test
sbb
outsb
decl
sub
sbb
ficompl
aam
popf
imul
cmp
or
mov
xor
leave
fcomps
mov
ffree
pop
cmc
cmpsl
and
pop
jne
out
jns
add
cltd
jge
push
xchg
bound
add
cmpsb
and
add
mov
movsb
mov
mov
push
xchg
lods
gs
insl
inc
enter
pop
aad
call
jg
push
add
rcr
stos
daa
push
sahf
lahf
cmp
or
cmp
fstps
ja
sub
mov
out
mov
lods
subb
mov
stc
sbb
dec
sub
xchg
adc
add
lods
std
dec
sub
push
and
sbb
pop
mov
pop
push
xchg
call
and
fwait
xchg
in
les
inc
push
out
mov
mov
xchg
lods
ljmp
sub
jne
pop
add
ss
js
pop
fiadds
jae
or
cs
add
lock
fidivs
gs
fnstcw
pushf
iret
or
call
inc
cmc
push
xor
iret
xor
imul
das
add
xchg
cmp
mov
dec
ss
mov
pusha
arpl
pop
inc
sbbb
xor
xchg
add
int3
int3
sub
lock
or
pop
pop
js
add
mov
mov
imul
popa
cld
std
cmc
mov
and
xchg
or
jno
sti
in
mov
jae
xchg
cmp
sbb
cmp
fwait
add
xchg
xlat
jbe
xchg
hlt
xchg
sub
stos
jno
cmp
loopne
lock
mov
dec
aam
mov
mov
jae
fdivl
cmp
jecxz
insl
shll
lock
jle
jge
cltd
cmp
test
inc
ljmp
ja
jnp
fnstcw
psrad
mov
ja
ret
mov
jne
dec
dec
nop
add
popf
push
ret
xor
mov
ja
jmp
inc
ljmp
in
xchg
into
jb
flds
insb
push
mov
jecxz
adcl
int3
movsb
pop
lock
in
mov
dec
imul
fdivrs
jmp
push
add
xchg
or
jae
cs
mov
iret
mov
sub
and
mov
cmpsl
jbe
mov
lds
and
fmuls
push
pop
sti
inc
xchg
push
mov
jle
nopl
jmp
imull
sbb
xor
out
ret
pop
sbb
push
pop
xchg
cwtl
mov
cmp
stc
sti
jno
cmpsb
in
sub
subb
adc
outsb
mov
add
ja
inc
adc
add
in
idivb
or
mov
mov
adc
bound
xchg
daa
mov
sub
jne
mov
pop
sarl
notb
scas
push
push
push
jmp
repnz
add
bound
dec
ss
lea
fsubp
mov
mov
xchg
jmp
push
mov
sub
push
adc
in
push
adc
sub
and
or
stos
dec
xchg
fs
cld
xchg
push
push
vcvtpd2dqy
outsl
sbb
lcall
cmp
cmp
mov
xor
sbb
xor
dec
dec
mov
push
clc
dec
int
push
cmc
add
adc
dec
or
in
out
jns
sahf
fidivs
add
cmp
testb
stos
adc
push
add
cs
lret
ja
ljmp
cltd
and
cs
jg
push
inc
insb
jbe
icebp
aam
xchg
mov
test
into
push
add
movsb
mov
dec
push
pop
jb
ret
jne
inc
dec
lds
aaa
xor
popf
or
xchg
or
xor
dec
pushf
fnsave
fs
xchg
es
daa
mov
push
and
negl
fwait
sbbl
sub
sbb
out
scas
or
mov
cmp
mov
mov
xor
and
outsl
pop
xchg
sbb
xchg
ljmp
dec
push
xchg
jg
loope
cmp
fisttpll
xchg
and
roll
lds
add
icebp
jecxz
incl
add
jge
lock
dec
sub
cltd
lds
or
dec
xchg
or
sub
mov
xchg
sti
rcrb
add
or
addr16
inc
jge
inc
imul
sbb
push
mov
jg
inc
sbb
das
arpl
and
adc
push
or
int3
xlat
mov
icebp
sbb
repnz
scas
jae
xchg
xor
xor
jmp
frstor
mov
js
xor
and
or
dec
stos
fs
test
sbb
push
cltd
repz
push
or
mov
push
movsl
cmp
jp
ljmp
jl
testb
mov
in
push
jge
and
inc
repz
jae
add
jno,pt
jl
pusha
movsb
arpl
mov
pop
icebp
or
dec
adc
sbb
std
pop
faddl
lock
or
les
adc
pushf
mov
xchg
add
xlat
fucom
setge
push
jno
push
and
scas
mov
xor
mov
into
punpckhdq
xor
add
or
lds
ret
jb
adc
lds
push
mov
movsb
stc
test
ja
sub
xlat
pop
jnp
dec
mov
jge
adc
jns
movups
mov
cli
lcall
iret
ret
adc
xchg
cmpsb
add
xor
lods
out
inc
sarb
pop
push
push
push
xchg
inc
cmp
push
lahf
dec
fsubr
add
mov
ror
add
sbb
lea
sbb
xor
into
and
out
pop
jns
sub
test
push
xchg
pop
pop
mov
call
jg
scas
adc
dec
inc
dec
sub
add
jb
fdivs
das
mov
push
mov
mov
cmp
and
cwtl
rorb
fsubs
xor
jbe
or
xchg
fs
mov
adc
mov
and
adc
push
bound
mov
jge
sbb
xor
push
sub
dec
pushf
and
xor
push
mov
in
or
pop
and
mov
lods
sti
pop
xchg
adc
mov
sbb
cmp
mov
out
aas
in
das
popf
pop
dec
lods
sbb
xchg
lds
push
imul
dec
cmc
pop
adc
ss
adc
pop
cmp
or
jb
hlt
subb
sub
dec
mov
cmpsl
lahf
cmp
ret
shlb
xor
and
xor
pop
es
xor
mov
or
test
or
pop
lods
lods
aad
jns
push
xchg
imul
je
push
mov
lea
or
call
outsb
bound
movsl
xor
inc
sbb
inc
jle
and
mov
ret
mov
adc
sub
inc
lods
cwtl
fsubrl
fsubr
xor
aam
iret
jg
mov
push
in
enter
push
es
sbb
jl
xor
in
dec
insl
jecxz
cmp
mov
xlat
jo
lea
pop
subl
stos
dec
nop
inc
and
lret
clc
pop
mov
nop
xchg
cmc
dec
adc
pop
fistps
inc
jmp
sbb
xlat
pop
stos
stc
xor
xchg
jne
sub
sbbb
xor
lds
cld
push
pop
ret
adc
mov
mov
push
xchg
jns
inc
dec
add
and
add
pushf
lretw
aaa
push
add
dec
clc
push
in
jns
add
movsl
sbb
mov
fdiv
mov
or
stos
mov
lret
push
mov
into
loop
int
cmp
pop
mov
add
mov
xor
add
sbb
inc
pop
jp
adc
or
daa
divl
dec
xchg
mov
mov
cli
cwtl
mov
addr16
cmp
pop
cmpb
push
cwtl
inc
xchg
push
adc
push
mov
lahf
test
rclb
pop
dec
cmp
in
xor
inc
mov
or
notl
push
pop
ret
dec
neg
int
mov
or
into
jb
orl
pop
ss
cwtl
fnstsw
aam
cmp
popf
jp
mov
push
out
in
cmpsb
add
scas
sbb
jg
ret
aad
dec
push
add
ret
xchg
ret
movsb
fistl
mov
leave
in
sbb
cmp
idivb
or
clc
inc
enter
push
inc
fwait
adc
leave
fnstenv
pop
cmpsb
push
jae
cld
aam
mov
rcrl
mov
fisttpl
jae,pt
xchg
dec
pop
push
inc
xchg
push
jge
xchg
int3
subb
sub
out
mov
imul
shl
scas
push
dec
mov
mov
pop
xor
mov
fdiv
dec
sarl
sbb
divl
fsubr
and
shlb
cmp
push
aad
xor
jnp
mov
push
push
adc
mov
jg
mov
bound
xor
aad
xchg
jb
fyl2xp1
nop
push
mov
inc
subb
leave
push
sub
lea
dec
push
leave
mov
inc
cmp
pop
mov
lahf
cmp
dec
cmpsb
mov
scas
cs
xchg
jno
cmp
jns
aam
dec
stc
sarl
ljmp
adc
xor
mov
insl
jne
mov
adc
push
mov
ficomps
dec
push
xchg
xchg
add
stc
mov
and
lret
xchg
imul
loope
push
add
inc
test
fdivs
mov
push
mov
and
daa
jbe
cmp
xor
fidivl
popa
sub
cwtl
push
xchg
inc
fistl
stos
inc
sub
mov
stos
nop
xchg
jle
call
cs
cs
jns
or
cltd
xchg
cmp
es
and
push
xchg
clc
dec
pop
loop
bound
adc
jns
push
add
add
cmp
cwtl
mov
cmpsl
sbb
lret
sub
mov
sbb
std
imul
sub
push
imul
mov
push
add
jb
lretw
adc
stos
xor
divb
or
inc
lahf
scas
inc
lret
push
xor
or
lret
and
cmp
dec
test
sbb
repz
jb
adc
popf
subb
rorb
inc
pop
jnp
ss
xor
mov
add
and
push
jo
test
and
pop
stc
push
in
push
mov
xor
aas
adc
xlat
icebp
xchg
lock
xor
xor
cmpps
dec
int3
fdivl
mov
in
das
adc
cmp
dec
mov
push
scas
cs
sub
out
out
ljmp
adc
inc
cltd
cmpsl
xchg
or
sub
fimuls
ljmp
push
add
push
fistpl
push
sub
or
aas
jne
icebp
push
pop
cltd
es
jne
bound
push
jp
sbb
push
xchg
js
inc
xor
lods
xor
xchg
mov
pop
inc
lret
arpl
dec
cmc
ret
scas
cmp
pop
cmp
or
push
dec
dec
movsb
jg
mov
push
cmpsl
out
repz
and
mov
adc
mov
out
xor
in
dec
hlt
lock
adc
or
jg
repnz
push
ret
arpl
inc
leave
hlt
and
and
xorl
inc
nop
outsb
pop
aad
push
sub
sbb
adc
repnz
mov
push
imul
cmpsb
xor
push
je
leave
pop
mov
shll
mov
mov
icebp
mov
stc
aas
sub
xchg
imul
mov
mov
sbb
or
mov
mov
push
adc
sbb
and
xor
xor
mov
in
add
pop
and
test
outsl
iret
fcompl
out
loop
sub
in
mov
mov
sbb
add
pushf
inc
out
arpl
add
cld
mov
mov
rcl
subl
jnp
call
outsb
mov
add
stos
adc
dec
adc
repnz
dec
js
xor
inc
mov
lcall
mov
cld
mov
nop
add
insl
xchg
inc
gs
and
ja
mov
dec
pop
pop
sub
lcall
add
mov
or
or
add
dec
es
cltd
dec
mov
aas
jb
fcmovnbe
inc
lahf
orl
cmp
outsl
idivl
loope
cli
icebp
cmp
pop
int3
push
xor
ret
cmp
add
ret
sbb
loope
aas
sar
push
mov
fwait
das
sbb
inc
xor
sub
cmc
ret
aad
jb
sub
aas
adc
mov
adc
cmc
adc
aam
pop
mov
enter
out
stc
jns
test
cld
dec
shlb
mov
mov
xchg
js
and
xor
and
insb
mov
sbb
cltd
aaa
jnp
rclb
dec
pop
mov
jo
ja
adc
call
mov
add
test
xchg
mov
push
mov
push
out
inc
sub
add
aas
in
int3
daa
cld
ljmp
push
movsl
insb
sbb
dec
inc
push
vmaxpd
cmp
rolb
cmp
xor
mov
cmp
add
cmp
mov
dec
and
xchg
orb
push
in
pop
fmulp
loop
fisubl
subl
fcompl
repnz
sbb
ret
add
jnp
movsl
mov
dec
jg
cmp
lret
dec
jle
xchg
mov
clc
sub
mov
mov
inc
push
pop
pop
mov
mov
dec
and
into
mov
pop
sub
and
ds
int3
sti
fisubs
pop
mov
push
xlat
inc
aas
inc
pop
dec
ljmp
mov
push
stos
xchg
in
dec
lock
jp
xchg
inc
outsb
mov
out
sbb
sbb
push
xchg
pop
bound
or
loop
clc
pop
out
mov
xchg
inc
cltd
cmc
lcall
mov
sub
xchg
notb
mov
loope
inc
test
in
adc
sub
lea
or
xchg
and
ficoml
inc
add
loopne
cmp
adc
mov
pop
into
xacquire
adc
push
faddp
pop
add
stc
out
mov
es
and
loope
lea
adc
push
pop
mov
dec
cmp
stc
lret
pop
push
fimuls
pop
in
pop
mov
pop
fstpl
in
mov
mov
cmpl
stos
jl
adc
sub
adc
adc
loopne
xchg
jmp
mov
jo
cld
jge
inc
test
fs
imul
mov
xchg
int
xor
out
loopne
mov
mov
push
cmc
mov
mov
jmp
imul
js
add
and
mov
daa
sub
call
das
push
pop
cmp
mov
in
fwait
sub
loope
shlb
insb
add
repnz
push
dec
je
push
pop
stos
loop
add
pop
cvttps2pi
loope
repnz
push
xor
inc
pusha
sub
inc
mov
outsb
ret
insb
movsb
jns
loopne
jg
sub
shll
jecxz
jl
scas
outsb
mov
movsl
cli
sahf
pop
shrb
mov
ss
movsl
sbb
lods
push
and
cmp
xchg
push
pop
aas
mov
pop
push
lcall
jmp
test
pop
stos
pop
mov
jno
cld
inc
iret
cmpsb
or
adc
adc
dec
cmpsb
jns
adc
cwtl
dec
insb
cs
mov
sub
sbb
adc
or
or
mov
fwait
pop
pop
pop
jp
push
adc
and
ja
push
pop
jge
ret
xchg
fsubs
subb
das
call
xchg
test
jns
lret
je
daa
dec
mov
push
ds
jae
in
and
dec
out
aaa
test
fistl
jb
push
adc
and
mov
fs
les
mov
adc
daa
pusha
shrl
jecxz
stos
scas
arpl
pop
and
icebp
lods
dec
addb
and
and
xchg
xor
std
cmpb
push
hlt
jl
jmp
outsl
or
sar
sub
cld
xlat
sub
push
xlat
sub
aam
mov
mov
inc
sbb
pop
das
jmp
and
outsl
jmp
inc
pop
fisubrs
mov
push
lock
in
fmul
fstps
fcomp
jg
rorl
sarb
mov
jo
sbb
push
pop
lret
mov
data16
add
outsl
mov
adc
pop
or
xor
jg
shr
les
push
int3
sub
pop
mov
leave
scas
hlt
neg
and
jge
dec
cmpsb
sti
lret
aas
bound
pop
fisubs
and
iret
rcrl
fldl
stos
jo
sti
std
daa
cmp
or
pop
movsl
ret
and
adc
ffreep
or
ret
xchg
pop
adc
sbb
pop
fbld
sub
mov
dec
push
mov
dec
push
push
fs
repnz
dec
test
fwait
pop
sub
cltd
aad
push
dec
push
add
xor
test
xor
inc
cmp
lret
outsb
shlb
stos
mov
movsb
aaa
cmp
sub
or
fisubs
or
xor
mov
insl
pop
sub
roll
cmp
les
in
int3
lret
out
xlat
inc
push
pop
imul
jns
sbb
jno
lock
insl
addr16
pcmpgtd
mov
sbbl
lock
jns
mov
mov
ficoms
mov
jo
jae
sbb
int
mov
sub
lods
dec
push
lret
lea
inc
pop
lods
add
jle
push
fidivrl
and
mov
mov
xchg
scas
xchg
mov
popf
rcr
sbb
rcrb
cmpsl
popf
and
mov
push
mov
xchg
jmp
and
dec
adc
cli
push
mov
ja
js
loop
and
or
in
adc
stc
loop
shll
test
adcb
sbb
or
iret
nop
lcall
pop
inc
and
lods
sub
sbb
jg
mov
std
inc
xor
mov
mov
loop
iret
pop
jle
fdivrs
sub
dec
add
cmc
bound
pushf
in
add
leave
mov
nop
testb
stos
or
sti
push
xor
or
sub
into
int
or
mov
inc
fst
xorb
sub
dec
cmp
dec
ret
pusha
mov
push
dec
add
scas
jp
out
mov
mov
inc
lahf
pop
aam
neg
hlt
lods
mov
cmpsb
push
jg
insl
mov
xor
rcrl
out
cmpsb
fcoml
jo
dec
sbb
adc
jno
lock
push
decb
and
jmp
fwait
enter
mov
ficoml
jno
in
loope
inc
lods
mov
ret
shl
addr16
test
mov
stos
xor
and
movsb
add
repz
popa
out
add
arpl
cli
je
enter
mov
nop
movsl
sub
mov
jae
dec
dec
mov
xor
std
or
pop
test
mov
adc
adc
push
add
adc
mov
or
cwtl
stos
stos
push
jne
cmpsb
and
and
in
imul
stos
xchg
rolb
scas
mov
ja
or
dec
xchg
jb
dec
dec
push
rcll
sub
or
adc
into
pop
mov
sub
imul
sub
test
stos
cltd
ss
jb
shr
hlt
mov
sbb
movsl
jmp
cli
in
les
xor
lods
cmp
cld
ljmp
repnz
cmpsl
sub
addr16
cs
pushf
les
xor
jns
mov
mov
scas
mov
push
push
adcb
push
cmp
mov
out
ds
enter
jnp
mov
dec
sub
pop
pop
lods
pop
pop
inc
cmpsl
jae
imul
cmp
pop
testl
mov
or
fwait
sahf
jle
insb
mov
test
mov
les
cmp
ss
jge
popf
dec
jb
jl
sahf
call
jnp
out
inc
jl
push
rcrb
fsubl
xchg
std
loopne
out
mov
movlps
push
sar
push
enter
std
ja
icebp
jg
ds
pop
jnp
ljmp
call
adc
repnz
sbb
test
add
lods
rcll
repz
pop
adc
addr16
inc
cmp
roll
fildl
test
dec
or
les
sub
mov
inc
arpl
loop
lods
mov
in
mov
xor
ja
daa
aad
loopne
lret
rcll
repnz
aad
pop
dec
jnp
dec
inc
jg
call
mov
stos
pop
daa
lods
add
mov
add
fldenv
enter
xor
cmp
or
fcoms
js
jg
loop
xor
mov
xchg
push
jae
test
xlat
mov
mov
cltd
or
sbb
roll
imul
push
xchg
cwtl
aam
bound
or
aad
xor
sub
xor
or
mov
cmc
xchg
and
fidivrs
mov
mov
ficompl
mov
sub
mov
cld
cli
xchg
jo
filds
lea
icebp
fs
fstp
adc
pop
test
mov
dec
fidivrs
mov
pop
cld
out
push
movsb
loopne
out
loop
jle
mov
stos
shr
push
lcall
jnp
inc
jne
out
lret
daa
outsb
jnp
test
dec
pushf
jmp
push
jp
sahf
xchg
or
sub
lret
sbb
cli
clc
dec
fistps
dec
xor
lret
fucomip
in
fst
push
pushf
ret
stc
hlt
repz
shlb
into
push
fimuls
dec
mov
pushf
add
test
xchg
xor
out
push
jo
or
cmp
leave
clc
xor
sbb
lock
sbb
mov
push
mov
lahf
xchg
roll
dec
push
icebp
jecxz
adc
call
in
push
push
ljmp
push
jno
mov
xchg
or
pop
mov
loope
ljmp
xor
xor
sub
cmp
lea
xchg
push
idivl
pop
pop
scas
dec
fisttpl
fbld
xchg
push
aad
pop
cltd
add
xor
sti
ja
xor
push
lcall
mov
loop
cltd
in
mov
ds
loop
scas
xor
or
pop
xchg
push
and
ret
push
inc
sbb
mov
icebp
pop
mov
add
mov
adc
mov
mov
dec
shll
pop
mov
sbb
lods
push
push
cmpsb
scas
in
insl
aad
leave
jmp
in
pop
push
mov
inc
test
orl
mov
dec
ja
pop
xorb
aad
inc
out
push
and
sbb
pop
nop
lret
mov
sbb
pop
mov
pop
xor
enter
xor
xor
pop
inc
repz
xchg
nop
lods
xor
loope
rolb
or
cwtl
ds
xchg
sub
mov
movsb
stc
jmp
in
dec
pop
test
dec
pop
push
int3
jae
dec
outsb
test
xor
sbb
aas
push
ds
and
pop
or
das
push
xchg
mov
sti
sub
jge
cmp
cltd
cmp
subb
and
cmp
pop
or
addr16
inc
rcrb
lods
or
or
jg
cwtl
push
clc
ss
xorl
push
adc
pop
fs
jl
in
addr16
adc
pop
pop
movsb
std
rolb
cmpl
sarl
adc
mov
inc
daa
lret
dec
icebp
push
scas
dec
mov
addl
jnp
sub
into
ljmp
xchg
lcall
push
push
test
add
adc
jecxz
out
sub
fsub
mov
out
es
sbb
cmc
push
xor
loop
dec
cmp
pop
cld
dec
cmp
insb
cld
mov
int
sub
cmp
insl
mov
xchg
rorl
jae
xchg
xor
fdivl
cltd
jl
fmuls
xchg
or
xor
dec
pop
popa
mov
cmpsb
cwtl
andl
cmc
and
icebp
sub
test
push
fdivrl
push
xchg
icebp
sub
push
lret
jle
fdivrs
mov
xlat
sbb
or
or
xchg
das
aam
popf
divb
sub
sbb
jp
scas
sub
cmc
cmpsl
cmp
xor
mov
mull
xchg
fisubrs
js
push
inc
out
out
and
jmp
mov
pop
aad
push
sbb
inc
lcall
add
and
ss
call
out
push
mov
xchg
fsts
jnp
pop
fstpl
xchg
adc
mov
pop
test
cmp
rolb
jns
jo
repz
dec
outsb
lcall
imul
push
pop
cltd
in
out
pushf
mov
mov
add
push
push
repnz
andnps
stos
outsl
mov
push
dec
insl
jge
jmp
fs
test
sub
mov
add
outsl
pop
pop
mov
dec
jmp
mov
or
pusha
inc
mov
ret
scas
out
cmc
in
aad
cmpsl
mov
lods
iret
lret
cwtl
int3
sbb
rcll
addr16
push
jp
sbb
inc
call
adc
mov
mov
adc
cmp
leave
xchg
sub
outsb
dec
fistl
xchg
les
scas
in
sbbl
lahf
dec
pop
out
fsubrl
cmp
jl
sbb
cmpsb
push
mov
push
jle
stos
cmp
sbb
adcl
lcall
pop
xor
cli
ret
pop
sub
idivb
das
jns
lret
test
jo
fidivrs
test
mov
outsb
arpl
pop
cmp
movl
sbb
dec
or
cltd
inc
jecxz
sbb
fdivl
mov
fisubrs
push
pop
mov
nop
push
repnz
mov
fnstsw
pushf
adc
add
fidivrl
push
push
xor
mov
fcmovne
cwtl
inc
fimuls
lods
in
pop
shrl
or
andl
mov
insb
rolb
insl
aam
push
ljmp
inc
dec
add
sub
hlt
jg
lcall
aaa
dec
sbb
inc
cltd
sbb
mov
jmp
ret
imul
dec
test
sbbb
pop
roll
xchg
pop
adcl
cltd
mov
xor
jl
push
push
cmp
test
push
sarl
mov
pop
mov
xor
push
inc
adc
dec
jbe
movsb
push
in
int
mov
fs
ds
cmp
cmp
mov
add
adc
or
sbb
cmp
xor
mov
add
mov
dec
addr16
leave
pop
dec
or
dec
lea
fsubs
jne
leave
mov
push
pop
jp
cmp
and
and
adc
and
push
call
jg
or
jecxz
pop
and
mov
js
mov
pop
mov
jmp
sbb
fists
jmp
mov
cld
lret
lock
and
add
adc
push
xor
test
repz
mov
pop
push
leave
or
icebp
mov
sub
xchg
mov
inc
cld
lcall
mov
fsubrl
repnz
xchg
mov
ret
popf
test
jns
aad
loope
mull
lea
adc
push
jae
lea
xchg
ret
xlat
call
mov
and
add
scas
or
push
popa
adc
sub
lea
and
fs
pop
aaa
test
repz
push
xchg
test
jle
sub
jnp
adc
sti
or
or
ds
addb
add
rorb
push
cli
inc
in
push
pop
mov
fwait
push
dec
push
unpckhps
lea
add
mov
repnz
and
pop
stos
lock
lcall
aam
test
lock
add
je
mov
push
mov
ljmp
push
repz
scas
hlt
fidivrl
pop
ljmp
push
cld
sub
mov
and
pop
ss
mov
test
je
xchg
or
xor
ljmp
mov
mov
sahf
lcall
push
sub
arpl
repz
js
adc
ss
stc
jg
mov
rcrb
sub
mov
pop
mov
incl
in
push
dec
xchg
and
js
shrl
rcll
mov
std
jne
or
xchg
ja
dec
dec
push
xchg
ret
push
mov
xor
and
push
adc
or
out
mov
inc
je
mov
jae
pushf
push
xor
lret
mov
cmp
mov
out
ja
mov
shrb
sarb
sahf
sbb
jecxz
lret
pop
sub
jbe
pop
mov
sub
cmp
mov
jo
sarl
and
mov
mov
push
jp
xor
cmpsb
adc
pusha
loop
mov
outsl
pop
das
push
popa
sbb
call
ds
mov
adc
mov
test
inc
icebp
inc
sub
mov
aas
inc
dec
adc
mov
xor
mov
inc
mov
ficomps
sbb
test
jns
gs
sub
ja
add
cmc
fnstcw
loop
pop
js
mov
adcb
sbb
lahf
daa
dec
adc
add
add
mov
xor
fcmovb
cmp
sub
pop
xchg
xchg
bound
das
mov
std
cmp
roll
movsl
push
adc
jge
cmp
sub
das
pop
inc
repz
fsub
adc
push
sub
je
es
push
ja
and
ljmp
cmp
je
popf
dec
fisubrl
cli
stos
xchg
jl
sub
and
sti
and
xor
int
jbe
xchg
imul
and
pop
push
cmc
mov
cmc
div
scas
lcall
fwait
mov
lcall
sub
push
push
aad
repz
aaa
cld
inc
add
stos
inc
fidivl
add
mov
sub
in
sbb
xor
add
or
pusha
mov
divb
sub
fdiv
cs
jp
mov
lret
or
cmp
imul
pop
push
pop
cmpsl
int
mov
test
jnp
inc
shrl
pop
push
lock
int
test
fiadds
jmp
in
dec
shrl
testl
cltd
push
ljmp
cmp
mov
cmp
icebp
in
into
sub
or
push
enter
enter
push
decb
rorl
mov
rcr
xor
mov
sbb
or
aaa
leave
xchg
mov
loop
xchg
dec
fcomip
imul
pop
push
pop
mov
imul
lods
mov
jg
xchg
pop
jae
mov
stc
jne
sub
adc
mov
and
stos
or
repnz
les
and
popa
add
into
jecxz
and
jbe
cld
daa
popa
push
dec
xor
lret
push
xor
mov
movsb
js
lret
lods
repnz
js
push
ret
sbb
sbb
and
push
les
subb
in
movsb
pop
jbe
mov
ret
repnz
shlb
aaa
call
cmpsb
jmp
iret
adc
jne
test
mov
and
lcall
repz
or
je
outsb
mov
xchg
pop
cltd
mov
in
arpl
cld
not
dec
les
sub
into
imul
mov
das
push
insl
loope
xor
rcl
aaa
mov
dec
add
shrl
adc
pop
pop
push
loope
ds
lret
aam
mov
mov
das
fdivrs
movsl
lods
dec
fucom
add
loope
inc
jo,pt
insl
aaa
mov
dec
dec
pavgb
xor
push
cmp
push
je
dec
orl
sbb
fwait
xlat
or
dec
mov
cmp
adc
and
dec
lock
in
fimull
cmp
add
push
inc
push
imul
dec
out
and
lds
pop
movsb
and
jl
loope
repz
icebp
in
cmc
mov
mov
cltd
mov
jg
mov
enter
into
and
movsl
fs
in
xor
mov
jns
roll
or
or
mov
xchg
aam
push
jge
loope
mov
or
les
pop
imul
popa
out
cmp
js
pop
cmp
ret
les
jbe
xlat
scas
icebp
xor
adc
scas
inc
dec
cmp
lods
pusha
popf
loope
popa
xchg
inc
mov
push
mov
dec
cmp
or
cld
aad
xchg
xchg
sbb
in
mov
sbb
fs
orl
add
add
clc
or
in
lret
jmp
inc
jecxz
lret
and
sbb
fdivr
lods
cli
es
notl
xor
xchg
mov
mov
cmp
sbb
inc
dec
int3
enter
cld
push
mov
and
cmp
adc
mov
pop
testl
xor
popf
mov
subl
xchg
sbbl
aad
inc
and
addr16
push
or
push
js
stos
cwtl
daa
or
loop
lods
jecxz
notl
dec
add
mov
and
dec
rorb
cmp
or
inc
adc
aad
mov
lea
negb
adc
push
xor
aam
xchg
les
popf
mov
adc
inc
js
pop
lock
notb
dec
iret
in
jo
xchg
mov
mov
and
test
cmpsb
testb
leave
and
inc
out
aaa
movsl
pusha
cmp
mov
and
xchg
cwtl
and
mov
aaa
test
xchg
cmp
sub
and
fwait
inc
cmpsl
mov
clc
inc
leave
ud1
outsb
sahf
add
sbb
cmp
push
or
or
mov
pop
pop
push
out
or
sar
pushf
mov
or
pop
mov
sbb
add
into
push
sarl
mov
sbb
and
push
mov
std
iret
sbb
ja
call
enter
mov
xchg
sahf
loopne
fwait
xchg
and
out
or
daa
cmp
test
adc
mov
rcr
cmpsl
mov
xchg
outsb
or
ret
jl
aas
mov
add
adc
dec
push
dec
sub
fs
pop
dec
inc
scas
sbb
fs
out
and
cld
pop
sbb
stos
sbb
popa
lea
mov
mov
mull
pop
fildl
xchg
push
test
mov
cs
pop
loopne
test
sbb
outsl
das
dec
push
jae
mov
enter
popa
adc
jmp
inc
data16
xlat
je
outsb
push
shl
dec
aad
aas
arpl
push
mov
ljmp
test
sbb
push
dec
lcall
out
movsb
pushf
lock
imul
inc
ljmp
js
xchg
jmp
inc
mov
xor
inc
pminsw
test
mov
push
shrb
mov
xchg
dec
adc
push
idiv
adc
repnz
cmp
js
loopne
lcall
cmp
in
cmc
mov
jg
or
je
je
cmp
mov
out
push
movsb
popf
sbb
jbe
xor
call
adc
lahf
clc
push
nop
lods
jno
add
xor
adc
aaa
or
and
icebp
and
lahf
mov
das
ds
xchg
inc
repnz
jmp
and
lcall
out
shl
lret
xor
mov
fwait
and
lods
std
adc
inc
outsb
sbb
cmc
sub
dec
in
cmp
test
cmpsb
sub
cmp
enter
out
push
pop
pop
sbb
lret
push
xchg
out
pop
mov
enter
insb
inc
fidivrs
cli
mov
divl
jg
shrb
xor
push
cs
mov
rorb
push
dec
cmpsb
std
mov
push
fcompl
idivb
xchg
mov
adc
jp
adc
bnd
add
stos
push
sbb
dec
cmpb
xchg
fildl
xor
mov
ds
outsb
std
outsl
jge
and
dec
mov
push
mov
sbb
sub
push
dec
xchg
inc
lods
mov
mov
add
rcll
jge
ds
or
adc
pop
mov
cmp
push
mov
push
iret
outsb
je
scas
clc
jmp
arpl
test
pop
and
sub
dec
add
testb
xchg
push
fstps
test
pop
jnp
jl
xchg
inc
imul
mov
adc
mov
sahf
leave
in
mov
mov
jb
inc
int
aam
sub
jl
jae
mov
xlat
enter
cltd
jp
cmc
icebp
nop
inc
pop
inc
mov
pop
sbb
leave
jb
mov
pop
dec
adc
enter
xor
xor
mov
mov
push
fs
rcll
cmp
inc
push
and
lret
pop
pop
loopne
adc
ret
test
or
inc
pushl
push
mov
dec
inc
scas
push
xchg
ljmp
je
or
adc
mov
test
dec
inc
mov
push
and
popf
inc
pop
or
adc
in
xor
sbb
mov
ljmp
in
jbe
mov
sub
push
cmp
pop
je
or
cmpsl
shr
pusha
insb
pop
jle
ss
jle
scas
dec
mov
sti
mov
fs
pcmpgtw
mov
cmpb
testl
cwtl
ret
jns
dec
push
lret
jne
xlat
inc
nop
pushf
and
mov
xor
mov
test
jmp
mov
push
jnp
repnz
dec
paddq
add
sahf
jnp
popa
shl
xchg
mov
aam
xchg
cmp
sahf
sbb
std
popf
pop
fisubrs
xchg
mov
jp
rorb
out
xchg
adc
add
in
nop
pop
or
xor
lcall
jp
xchg
sub
jnp
test
out
ret
push
mov
dec
jne
into
bound
loope
inc
idivb
sti
jp
push
fiaddl
dec
jp
int3
js
sbb
mov
pop
imul
dec
int3
xchg
dec
mov
inc
pop
outsb
sbb
jmp
gs
cmp
rcrb
nop
pop
rclb
push
cmc
xor
nop
sub
repz
ret
jb
testb
andl
mov
shll
mov
jnp
ret
jae
inc
pop
dec
xor
inc
mov
mov
mov
addb
enter
pushf
mov
imul
sub
test
cli
js
sarb
pop
out
test
inc
ljmp
cmpsl
out
dec
test
sbb
ror
mov
test
adc
out
lods
jp
aad
cmp
mov
arpl
inc
sti
mov
inc
mov
ja
mov
sti
and
dec
xchg
or
dec
pop
mov
enter
scas
inc
cltd
dec
jns
adc
adc
shll
xor
mov
mov
ret
jge
stc
popf
dec
jg
movups
popf
or
cmp
cmp
addb
iret
test
fldl2e
xchg
jecxz
push
mull
cmpsb
sbb
inc
test
or
xchg
xchg
cmp
or
ds
mov
cli
xor
mov
outsb
cltd
mov
mov
xor
fdivl
jbe
mov
jg
mov
cmc
xchg
clc
mov
in
push
icebp
xor
mov
enter
lahf
mov
sti
or
call
lock
inc
mov
adc
nop
das
cmpsl
arpl
jmp
es
stc
xchg
unpckhps
insl
mov
jl
lds
arpl
adc
imul
aad
push
add
and
in
mov
push
pop
inc
inc
cmp
jge
ja
loop
lret
sbb
loopne
mov
sub
shll
xor
and
cmpsb
in
into
jae
daa
aaa
mov
fnsave
cwtl
std
lret
adc
add
sub
js
sub
ror
jbe
int3
xchg
cmp
add
xor
imul
mov
mov
pop
sbb
push
icebp
and
fsub
lods
out
adc
jbe
cmp
dec
sbb
sarl
and
push
mov
xlat
loope
stc
dec
cmpsb
cmpsb
mov
ljmp
xor
mov
test
add
mov
or
push
daa
cmc
dec
sub
scas
pop
sbb
jle
cltd
clc
inc
or
andb
cmpsl
jne
or
ss
jle
jo
sbb
popa
cmpsl
test
add
push
push
jp
mov
xlat
sbb
ret
cltd
pop
subb
xchg
stos
loopne
inc
inc
or
bound
add
insb
icebp
cltd
subb
nop
cli
je
pop
rcll
or
test
cmc
or
mov
inc
push
jmp
and
stc
lret
adc
inc
iret
xor
loope
sub
jne
cmp
in
fildl
fwait
adc
dec
lea
jne
sbbl
sub
mov
cmpsb
iret
xor
jne
outsl
test
mov
rclb
mov
dec
xchg
int3
sbb
or
lods
push
cmp
mov
sub
xor
xchg
sti
dec
xor
jae
aaa
lret
nop
xchg
xor
jge
pop
xor
test
mov
inc
add
pushf
dec
shll
aam
mov
xchg
xchg
je
and
test
jmp
push
cmp
mov
subb
gs
sub
aaa
xor
rclb
adc
lods
cmp
and
mov
mov
nop
mov
mov
dec
jl
int3
decl
mov
jne
adc
dec
mov
inc
mov
stos
aam
loope
je
cwtl
push
test
int3
ja
push
je
test
popa
xor
fdivrl
rolb
leave
in
rclb
outsb
xchg
enter
loop
cs
or
insl
int
loope
fs
push
lret
jno
cmpsb
test
or
push
and
xchg
dec
pushl
and
sub
and
jle
and
scas
xor
lret
mov
pop
aas
call
jp
mov
lods
xchg
pop
jle
cmp
ret
jl
jb
test
in
xor
push
mov
lods
into
mov
movb
sub
dec
cmp
bound
mov
outsl
xchg
ljmp
cmp
pop
sbb
inc
scas
iret
jle
inc
aam
js
out
mov
cmp
hlt
outsb
stos
lods
outsl
iret
scas
test
jno
jge
dec
and
jg
psubq
pop
dec
and
mov
cwtl
lock
fildll
das
push
loop
push
addr16
push
mov
hlt
mov
cs
fisubrs
jge
pop
jmp
icebp
das
lock
sub
mov
lahf
mov
inc
or
pushl
lock
lods
aam
xchg
push
outsb
popf
jl
push
xchg
sbb
add
aad
pop
xchg
xchg
adc
sub
sti
dec
xchg
sub
add
jg
or
movsl
mov
outsl
push
inc
ss
mov
fwait
cmp
add
movsb
add
into
loopne
adc
stos
stos
jbe
outsb
mov
cwtl
cmpsl
insb
mov
xlat
cltd
jno
jecxz
movsl
cmp
jg
daa
movsl
sbb
xor
lcall
push
add
and
or
xor
adc
pop
xor
cmp
jno
adc
xchg
jmp
loope
sarl
repz
cmpsl
or
pushf
cmp
aad
pop
bound
dec
cmpsb
lret
bound
popf
pop
in
fldcw
or
cs
push
aas
or
and
dec
mov
mov
pop
sti
mov
push
push
gs
int
arpl
mov
loope
pop
jle
jecxz
and
push
jecxz
jne
lods
mov
and
je
mov
cmp
mov
dec
xchg
mov
sbb
je
xor
stos
inc
cltd
push
lds
or
sbb
sbb
out
jg
cs
sarl
mov
mov
push
jg
insb
cmpsl
fs
xchg
in
sbb
loop
fnsave
sub
jmp
pusha
sub
xor
xor
add
sbbb
leave
lcall
fs
or
inc
iret
popf
inc
into
push
pop
ljmp
push
inc
stos
test
mov
push
rclb
icebp
push
testb
clc
sbb
insb
rorl
cmp
add
xor
sarb
sub
xchg
inc
or
test
shll
insl
les
pop
add
sub
push
sbb
push
mov
inc
popa
pop
mov
push
loope
data16
push
out
push
fs
in
mov
addr16
xchg
out
es
sub
dec
fisttpll
cmpsl
jb
pop
mov
xchg
jbe
outsl
adcl
aam
push
fnstcw
xchg
pop
sti
fcmovbe
out
jb
jl
xor
mov
push
hlt
aam
lods
sti
push
int3
fs
push
test
out
xor
jg
outsl
cmp
push
shll
xor
lea
and
fstps
jle
add
hlt
negl
popf
xchg
rcll
mov
fwait
mov
cmp
cli
fwait
jb
insl
add
xchg
lret
insl
sbb
mov
cwtl
xchg
mov
or
lea
sbb
push
or
push
lea
xchg
cmp
fstp
testl
jmp
test
out
test
call
push
fmuls
fsubrl
cltd
pop
loop
cld
loopne
call
sub
cmpb
sbb
pop
daa
jg
mov
dec
xchg
cmc
push
adc
pushf
inc
adc
fiaddl
mov
loope
or
shrb
push
mov
jl
sti
cmc
jns
stc
xchg
imul
cmp
mov
adc
cmp
adc
das
lea
dec
sbb
jecxz
js
out
adc
leave
pop
pop
pop
dec
mov
sar
pop
dec
add
push
gs
cli
cmovnp
push
repnz
and
pop
sub
aam
dec
popf
sti
ret
clc
mov
or
cmp
cmp
adc
jmp
loopne
push
pop
lret
jle
mov
subl
fwait
cld
sub
stc
mov
sbb
nop
int3
mul
dec
xor
roll
adc
push
xchg
ret
cmp
mov
lock
xor
jae
jno
ficompl
flds
dec
add
or
lea
sub
cmp
loopne
sarb
in
jp
adc
jg
nop
pop
xchg
data16
scas
lret
adc
dec
add
cmp
xor
enter
mov
into
das
mov
sbb
cmp
out
test
loope
aas
jecxz
jb
xchg
outsl
divb
and
movsl
mov
or
mov
jo
push
mov
mov
add
push
outsl
std
xchg
pop
xchg
in
and
dec
jo
and
mov
jge
pop
addb
jb
test
stos
dec
movsb
mov
xor
fdivl
sbb
pop
push
pop
popf
xchg
pop
inc
sbb
push
mov
loop
sub
mov
jecxz
add
or
push
loop
cmc
mov
push
lods
sbb
xor
jb
jmp
mov
lds
jno
mov
jp
lods
push
or
out
jge
jge
mov
arpl
cli
stc
cmpsb
push
push
jno
shl
push
sub
pop
cmp
psllq
lock
dec
pop
push
or
dec
popf
xchg
and
mov
in
cmpsl
call
and
jge
ret
mov
aam
decl
mov
lcall
repnz
pop
in
jb
and
lock
lahf
rcll
jl
dec
xor
js
outsl
stos
data16
movl
fsubl
mov
stos
out
sub
pop
adc
aaa
cmpsl
sub
int3
shl
lea
or
pop
orl
adc
add
jle
sbb
and
mov
sub
gs
sub
push
dec
and
lret
sti
fisubs
add
push
mov
movsb
or
mov
push
inc
xor
mov
mov
js
xchg
shlb
inc
pop
leave
jns,pt
pop
pop
or
inc
repz
popa
mov
test
sub
aaa
cmp
rcr
aad
nop
mov
jmp
in
dec
aad
mov
or
add
add
je
fsubs
aaa
stos
sub
mov
sub
push
xchg
cmovle
jg
mov
sbb
inc
sbb
push
test
jl
sbbl
nop
sti
lods
or
push
stos
test
fst
jns
insb
addr16
sti
lods
fidivrs
push
loop
orl
mov
jmp
dec
test
mulb
js
sub
or
test
clc
int
scas
mov
or
xor
sbb
xor
push
xor
mov
pop
xor
mov
sub
out
into
add
fdivp
push
jns
cmp
xchg
mov
xor
push
mov
add
xchg
ret
jge
or
mov
hlt
icebp
jo
lds
dec
jp
lds
pushf
sti
mov
jb
jecxz
insb
mov
test
mov
mov
data16
ljmp
push
pop
add
sti
nop
pushf
out
inc
mov
adc
mov
lret
pusha
pop
pop
aam
mov
push
arpl
nop
inc
into
or
and
in
dec
pop
pushl
leave
add
daa
cmp
inc
ret
lahf
addl
jns
mov
jl
dec
sahf
xchg
in
push
fs
mov
mov
adc
jae
movsb
mov
aas
adc
add
push
flds
push
jge
mov
imul
adc
mov
bound
ret
mov
mov
mov
js
popa
fdivrs
outsl
jno
cltd
mov
adc
das
add
mov
add
add
sub
xor
dec
dec
aaa
mov
xchg
ret
repz
sub
pminub
mov
inc
mov
dec
push
push
int3
sbb
dec
icebp
add
subb
adc
repz
mov
mov
std
xlat
inc
push
add
les
push
mov
jle
adc
inc
inc
ror
scas
mov
jge
testl
sbb
daa
xchg
xor
cli
push
sub
adc
ljmp
inc
popa
call
push
enter
stos
push
adcl
push
cwtl
lret
xchg
jbe
popa
sbb
xor
rol
sahf
push
loop,pn
leave
in
shrb
mov
xchg
pop
pop
cmp
loopne
sbb
mov
jo
out
mov
xchg
cmovle
pop
loopne
dec
dec
fsubrl
out
mov
xchg
cmp
mov
ljmp
push
mov
dec
mov
adcl
std
lods
mov
negb
and
mov
cmpsb
xlat
or
mov
lods
lahf
stos
scas
or
sti
jecxz
mov
sbb
jae
mov
xchg
mov
jnp
daa
lcall
push
push
test
pop
pushf
lahf
inc
adc
fcmovne
push
jmp
test
jns
out
cmp
mov
sahf
test
fnsave
sarl
adc
push
mov
push
mov
out
ss
jae
shll
sub
jecxz
shl
add
enter
dec
sub
in
fldcw
dec
fisttpll
xor
addb
push
dec
in
and
fistpll
xchg
push
lahf
cmpsb
inc
cltd
in
lock
xlat
repz
aam
icebp
lds
add
gs
rclb
inc
mov
mov
scas
jge
sub
push
jmp
ss
neg
mov
sahf
lods
xor
push
mov
scas
jne
sub
iret
aaa
imul
push
test
and
inc
jo
movsb
fcoml
sub
nop
lcall
pop
mov
xor
movsb
scas
mov
pop
pop
sub
mov
sbb
jge
adc
and
fcoms
adc
mov
mov
push
push
cmp
sbb
mov
lahf
clc
pop
mov
pop
jnp
dec
jmp
enter
mov
out
test
scas
dec
sbb
lret
imull
loope
cwtl
in
loope
or
dec
test
ja
int3
dec
add
nop
lods
dec
gs
aam
fnstsw
andl
push
jg
pop
pusha
mov
push
nop
add
out
push
cmp
and
or
xlat
subl
enter
or
int3
xchg
inc
sti
cmpsb
xor
aam
mov
sbb
test
lods
jmp
xchg
inc
scas
sub
cli
mov
outsb
lds
aaa
jg
cmp
sub
adc
inc
dec
or
adc
fsubrl
xchg
jl
ds
adc
push
js
notb
mov
repnz
in
mov
dec
lret
sbb
jae
mov
clc
push
mov
dec
lods
jo
mov
xchg
mov
add
daa
push
rep
jge
inc
jle
cmp
andl
fsubr
fcomi
pop
js
xlat
jmp
cli
adc
dec
mov
hlt
js
or
leave
pop
fists
js
mov
dec
sbbb
ja
ljmp
stc
cmp
jb
into
dec
push
mov
clc
push
lock
aam
ficoml
sub
daa
xchg
or
xor
lds
ds
cmp
lock
clc
mov
lret
pop
jl
or
cmpl
fidivrs
sahf
mov
pop
mov
mov
sbb
mov
adc
fcmove
enter
jmp
mov
sbbb
sbb
or
jl
adc
aad
das
out
dec
lock
dec
cmpsl
stos
test
or
mov
fldenv
mov
dec
fdivl
sahf
jae
jno
sbb
mov
xor
out
sarl
fdivrl
xchg
add
out
int3
inc
rcl
popa
es
xchg
addr16
mov
cs
xorb
je
mov
mov
cmp
add
sti
jae
insb
jnp
arpl
push
mov
iret
xor
rol
lea
mov
mov
pop
push
xchg
xchg
xchg
xor
scas
dec
mov
mov
xor
sbb
ja
sahf
movsb
and
mov
add
mov
cli
test
andb
fldcw
cmp
mov
jg
dec
sbbl
stos
push
push
and
inc
fidivs
mov
lea
jae
sbb
mov
add
je
mov
push
daa
andl
ss
hlt
mov
jp
shlb
lock
xchg
or
repnz
fildl
xor
addr16
divl
fwait
daa
ret
add
iret
rcr
ljmp
cmpsb
mov
inc
pop
hlt
push
push
call
pop
mov
jg
jnp
sbb
mov
mov
sbb
roll
cld
mov
mov
cmp
in
test
jnp
sub
mov
fisttpl
stos
cmpsl
or
out
cmp
mov
sbb
jnp
icebp
test
shlb
enter
push
ss
dec
fnstcw
aad
dec
xchg
js
jg
fnsave
add
sti
lea
je
pop
xor
sub
nop
insl
sub
pop
adc
sub
mov
scas
mov
je
frstor
and
push
dec
ss
inc
push
aam
hlt
addr16
enter
xchg
and
ja
cmpsl
inc
outsb
add
cli
xor
xlat
add
in
adc
sbb
inc
sahf
outsl
sbb
cmpsb
mov
in
add
ret
adc
pop
cmpsb
dec
cmp
repz
sub
das
shll
push
lahf
std
xor
push
pop
int3
addl
cmp
rep
out
fistl
xchg
cmp
aaa
dec
push
sub
les
dec
or
mov
ja
cmp
ja
jle
and
cmpsl
cmpsb
lock
fidivl
test
mov
out
hlt
sbb
mov
faddl
mov
or
and
jge
in
out
xor
in
jmp
xor
jne
jbe
jmp
test
push
add
loope
cmp
lahf
add
arpl
fstps
daa
cmpsb
dec
cmp
cld
mov
mov
cmp
pop
mov
sbb
pop
dec
xor
pop
push
shrl
lds
lcall
stc
stc
adc
xlat
jmp
lods
sbb
mov
jno
cwtd
xchg
loopne
or
mov
aaa
jge
int
sub
repnz
loop
mov
mov
jge
mov
inc
add
mov
jge
mov
jae
mov
jb
and
je
xchg
fucomp
mov
xor
es
addr16
roll
cmpsb
arpl
bound
pushf
lds
push
inc
mov
icebp
dec
test
fwait
push
or
cwtl
neg
sbb
ljmp
inc
stos
mov
ljmp
insb
outsl
adc
imul
xor
pop
sbb
inc
ret
leave
add
add
sahf
cmp
xor
sbb
or
adc
xor
js
repnz
insl
clc
imul
bound
and
dec
xchg
dec
xchg
gs
aad
cli
adc
mov
jno
inc
add
stos
push
cld
loopne
mov
pop
fs
aaa
jnp
dec
and
xchg
and
dec
and
imul
pop
test
jbe
lea
inc
sbb
push
std
out
leave
jbe
popf
shll
push
gs
lock
sub
xchg
fisttpll
lock
mov
andl
insl
subb
jle
lds
mov
cmp
lahf
leave
loop
inc
in
fsubl
cmp
sti
int3
sarl
movsb
enter
push
loope
xor
inc
sbb
filds
daa
adc
mov
lret
pop
mov
fs
and
insb
popa
scas
sarb
sub
sbb
or
movsb
movsb
arpl
je
adc
mov
mov
orb
fcompl
mov
jmp
out
jge
int3
jae
xchg
int
iret
pop
out
aaa
enter
data16
xor
inc
sbbb
scas
add
insl
or
stos
adc
and
out
mov
lret
sbb
sarl
aas
call
clc
and
loope
xchg
jmp
mov
push
dec
add
push
push
push
adc
xlat
xlat
sbb
dec
or
jne
cmp
in
push
aam
xor
add
dec
insl
fcmovnb
js
cmpsb
dec
movsb
aad
and
stos
mov
push
loop
sub
cmpsl
js
mov
adc
and
xor
sbb
jno
sbb
xchg
mov
pop
fistps
cmp
inc
fninit
subb
push
out
aaa
enter
and
test
pop
ret
icebp
sbb
daa
xor
add
sub
hlt
shlw
mov
mov
and
push
pop
inc
jecxz
clc
lods
or
pop
fidivrl
jmp
or
jns
mov
loope
cmpsl
repz
in
dec
fwait
pop
sbb
adc
and
gs
cmp
in
stos
in
addr16
pop
adc
pop
test
jmp
adc
sub
scas
dec
inc
aas
shlb
adc
pslld
cmp
fsubl
rcrl
xor
mov
fdivrs
das
subb
lahf
push
xchg
popa
mov
loop
rolb
jl
jmp
jp
adc
lret
jle
addb
ficomps
jge
sbb
xchg
icebp
mov
into
push
jno
cmc
add
push
and
jb
and
push
cmpsl
jmp
adc
out
sbb
cmp
mov
fldl
or
xlat
dec
mov
in
xor
jl
push
and
icebp
pop
pop
mov
xchg
sub
sti
mov
bound
push
sbb
das
jo
flds
cmp
add
cmp
pop
jle
push
sbbb
insl
mov
cli
jb
adc
add
fwait
push
dec
and
jecxz,pn
adcl
cmc
out
lock
or
xchg
push
fidivrs
cmp
test
out
lock
dec
icebp
out
mov
int
dec
test
mov
stos
xchg
sub
sbb
cmp
jg
dec
lods
mov
into
call
in
jno
pop
xchg
fsubrl
movsb
mov
fcompl
clc
jge
leave
cmp
mov
fildll
sahf
jb
jge
aas
or
fadds
dec
ljmp
popa
sub
cmp
in
push
and
xor
inc
iret
insl
xchg
push
out
push
adc
dec
call
push
mov
stos
mov
cmp
and
xor
and
mov
or
call
jl
inc
mov
jl,pn
and
daa
in
sbb
lcall
outsb
shll
sub
mov
wbinvd
fisubrl
push
mov
push
repz
mov
mov
sbb
les
fisttps
mov
and
int
mov
iret
or
push
out
add
and
adc
xor
mov
cmp
movsl
out
jno
xchg
and
mov
cli
adcl
mov
fs
jle
pop
daa
rcll
mov
pop
data16
shlb
xchg
cld
and
dec
js
sub
lods
ror
and
pop
push
and
enter
xchg
test
dec
xchg
loopne
fidivl
or
sbb
bound
nop
mov
cs
add
push
stc
leave
push
dec
ljmp
hlt
in
mov
inc
aaa
pop
aas
inc
jp
cmp
cmp
mov
sub
mov
sub
adc
jae
bound
cli
inc
sbb
mov
enter
in
mov
pop
mov
outsb
xorl
cmp
jb
and
push
jo
jbe
sub
mov
add
mov
jge
outsl
das
sarl
dec
loop
fildl
mov
out
dec
xor
push
mov
cld
popf
and
stos
andb
cmp
lea
loop
test
sub
imul
xchg
daa
xlat
daa
lcall
fiaddl
mov
movsb
xor
inc
adc
jecxz
cmp
xchg
or
hlt
lock
aas
lods
popf
jl
mov
rcll
in
pop
push
xchg
stos
ret
enter
fwait
test
shr
push
shll
adc
xor
pop
das
out
ret
push
adc
mov
fwait
mov
mov
in
jl
lea
lods
imull
ret
pop
pop
mov
stos
fnstenv
js
sbb
sbb
dec
pop
push
mov
iret
out
sahf
inc
call
das
add
out
cmpb
xchg
jb
ret
in
les
fldenv
int3
fdivl
fbstp
ljmp
addl
negb
dec
fdivrp
imul
movsl
dec
insl
aas
bound
pushf
icebp
in
sahf
hlt
pop
xchg
stos
fwait
dec
push
xchg
fadds
fsub
fistpl
adc
mov
orb
in
negl
in
and
push
int
xor
mov
pop
lods
pop
sub
inc
sahf
seta
test
leave
mov
push
xchg
push
shlb
jne
jb
ljmp
mov
test
cmpl
cmp
pop
cmp
or
aaa
enter
outsl
cli
loopne
jo
out
push
or
rclb
inc
adcl
adc
loop
jge
xor
jns
or
enter
pop
in
sbb
sahf
pop
addl
inc
hlt
addr16
mov
pop
insl
fsubrs
sbb
scas
pop
out
int3
mov
xor
add
cmp
xchg
dec
add
push
mov
sbb
es
or
js
or
mov
es
scas
ficomps
cmpsl
testl
ss
aam
push
fs
imulb
xor
dec
sbb
imul
mov
ja
hlt
dec
int3
dec
lods
andb
or
fcmovbe
mov
popa
cltd
mov
std
cmp
insb
push
iret
jl
sub
cmpsb
ret
mov
push
push
ljmp
push
jg
mov
stos
push
shrl
movsb
adc
jl
or
cmpsb
mov
es
adc
gs
out
xor
stos
jae
int
dec
xor
cmc
insl
adc
call
dec
data16
jne
in
mov
add
iret
cmp
mov
or
xor
fcomi
jle
adcb
mov
cltd
jnp
test
cmp
cmp
clc
sbb
sub
cli
mov
fisubrl
inc
jno
mov
push
sbb
sub
push
xchg
mov
vaddsd
flds
dec
adc
mov
shll
inc
push
push
popf
mov
iret
das
inc
jge
divl
xchg
xchg
add
add
mov
jmp
xchg
jb
and
pushf
iret
jne
fstl
stos
cld
push
or
sbb
aas
lcall
sub
or
outsb
orb
cli
add
push
rorb
jb
pop
cs
insb
in
stc
mov
xor
popa
xlat
loope
pop
inc
pop
ss
and
bswap
mov
xlat
in
cwtl
add
xor
xor
xlat
xchg
les
gs
cs
sbb
andl
aam
add
imul
out
lcall
sub
std
or
adc
push
jg
cmpsl
push
xor
dec
pushf
lods
cld
push
pop
xor
cmc
adc
dec
jmp
dec
xchg
sahf
jl
icebp
out
ljmp
xchg
and
or
xor
rorb
outsb
adc
xor
adc
sub
inc
nop
mov
rcrb
leave
xor
and
shll
ss
jns
jo
mov
jo
cwtl
mov
lock
cmp
dec
pop
stc
jne
scas
inc
push
je
std
aaa
sub
mov
stos
iret
cltd
lds
hlt
mov
mov
inc
dec
push
xchg
cmpb
int
sbb
jb
xor
scas
repz
push
cwtl
or
lods
pop
fists
push
stc
pop
loope
xor
fdivl
dec
outsl
xor
mov
gs
filds
xchg
inc
xor
nop
cmp
add
out
stos
mov
mov
inc
xor
push
dec
in
xchg
mov
das
popf
insl
cmp
sarl
sub
adc
mov
out
js
std
xor
mov
sbb
jne
out
pop
fwait
enter
cmp
cmp
inc
pop
bound
jnp
push
push
jnp
test
inc
and
xchg
testb
add
outsl
rcrb
stc
jnp
rclb
add
ljmp
add
insl
and
adc
pop
mov
or
jnp
test
or
add
gs
aas
inc
jb
dec
loop
fwait
testl
sub
aad
cli
adc
aad
pop
out
dec
mov
mov
push
stc
add
or
aaa
or
inc
or
into
mov
dec
add
cltd
mov
stc
std
push
add
mov
pop
lret
push
repnz
insb
xchg
movsb
cli
mov
ficoml
adc
and
or
inc
fcoms
es
je
and
xchg
xor
outsl
adc
inc
jg
mov
or
iret
cltd
mov
inc
arpl
je
imul
push
cmp
test
mov
popl
stos
fists
sbb
xor
lret
rorb
push
mov
fisubrs
sub
cmp
xor
insl
push
jae
inc
gs
jne
dec
pop
and
cmp
ss
sti
popf
or
clc
xchg
mov
mov
sbb
mov
mov
repnz
data16
pop
lods
xchg
sarb
aam
in
int
mov
mov
fstp
aas
mov
add
and
pop
sbb
push
xor
std
push
rorb
imul
mov
push
mov
scas
jns
cld
cmp
jne
ds
cmpsl
sbb
push
addr16
cmp
mov
sbb
mov
pop
gs
mov
jmp
mov
stos
out
pop
xlat
out
jns
imul
xchg
aaa
fadd
bswap
loopne
icebp
test
pop
and
sbb
pop
sub
add
daa
test
fbld
push
mov
jae
lods
jecxz
fs
orl
xchg
int
or
push
mov
inc
jecxz
jae
fwait
leave
inc
or
clc
inc
mov
test
mov
jo
xor
mov
dec
mov
fucomp
cmp
test
mov
ljmp
lds
jle
fsubr
cmp
xlat
cmp
std
mov
notb
xchg
dec
jmp
fs
mov
outsb
fdivs
sub
lahf
dec
mov
loop
pop
shrl
movsb
out
or
arpl
jns
jp
stos
gs
fidivl
aad
push
push
pop
xchg
xchg
fucomp
mov
sbb
or
cmp
xor
rcrb
imul
add
inc
pop
pop
fcmovnb
rcrb
xor
sub
outsb
or
push
lods
inc
mov
cmpsb
mov
mov
mov
imul
mov
push
mov
int
sti
daa
inc
jl
sbb
rorb
loopne
daa
mov
mov
subb
or
jge
divl
mov
test
stos
fldt
sti
movsl
mov
jbe
sbbl
jns
add
cmp
bound
pop
sbb
popa
stos
pushf
pop
bound
add
jbe
inc
leave
insb
pop
mov
dec
mov
mov
cli
rorl
ljmp
inc
cmp
out
add
xchg
imul
daa
dec
aam
inc
hlt
fadd
mov
ljmp
cmp
out
pop
nop
xor
fxch
xchg
xlat
jmp
sub
dec
hlt
sub
pop
iret
adc
adc
jl
outsb
inc
xchg
fidivl
add
jo
xchg
aam
push
add
cmp
push
les
ja
lods
add
and
cs
xchg
mov
jbe
mov
andb
hlt
and
outsl
mov
or
sahf
mov
mov
and
cmpsb
push
mov
test
gs
sub
pop
arpl
jmp
cwtl
cmovg
not
mov
sub
adc
sbb
or
sahf
into
nop
mov
jo
jbe
dec
movsb
sub
cmp
inc
inc
loope
int3
pop
jmp
xor
stc
cmp
stc
inc
lret
sub
leave
inc
cmpb
movsl
ds
jo
jo
lods
push
inc
imul
popl
inc
cmp
repz
dec
sub
imul
xor
push
mov
pushf
in
xchg
lea
xor
mov
mov
and
imul
out
cmp
fildll
cmpsb
push
mov
in
xchg
or
dec
iret
fmulp
flds
repnz
addr16
fisubrs
repz
cs
fstl
cmp
arpl
adcb
push
fwait
mov
dec
in
xor
gs
in
xor
inc
sub
add
xchg
std
mov
xchg
out
xchg
sub
mov
sbb
lds
xchg
sub
fsts
testb
mov
sbb
frstor
inc
adcl
mov
mov
push
loope
es
fcomi
fistl
sub
aaa
mov
and
pop
xlat
cmp
pop
shl
dec
pop
pop
mov
mov
mov
fcompl
sbb
sub
push
inc
jg
jne
sub
fldl
popf
jg
mov
xor
jp
test
icebp
and
es
repnz
dec
xchg
ret
je
movsb
mov
mov
stos
bound
xchg
repnz
jecxz
xor
fldl
xchg
xchg
rcr
shrl
lret
mov
cmp
sub
or
adc
aaa
xchg
xchg
or
inc
jo
ss
fsubl
lods
adc
loopne
push
inc
mov
or
jbe
dec
jl
dec
dec
scas
popf
xor
iret
ret
rclb
mov
sbb
xchg
ss
dec
mov
out
orb
rorl
mov
xor
xlat
outsl
pushf
in
or
in
int
xchg
loop
xchg
ja
loopne
push
dec
in
or
mov
dec
repnz
mov
sbb
sbb
pop
or
push
call
inc
cmpsl
jle
mov
push
es
dec
nop
stc
xor
cld
popf
jb
xchg
sbb
jae
pop
pop
xor
fs
inc
mov
and
inc
loop
xor
and
out
add
mov
dec
xor
xchg
or
add
or
mov
adc
xchg
aad
mov
cwtl
cmp
sub
xchg
scas
or
xor
lods
les
sub
mov
out
nop
repz
inc
js
les
add
mov
fmuls
imull
data16
rcrb
lret
dec
sbb
xchg
lea
add
push
push
push
repz
ja
in
out
xor
cmpsl
add
sbb
into
loopne
scas
dec
aaa
call
jno
jno
xor
inc
test
cwtd
cmpsb
int3
shrb
xchg
xchg
push
jg
clc
mov
sub
mov
add
negl
cmp
xchg
jne
popa
pop
mov
nop
xchg
rcl
sbb
xchg
mov
sarb
adc
roll
inc
inc
inc
js
jge
and
add
dec
mov
fsubp
popa
inc
sub
movb
xlat
dec
cmp
mov
add
test
sbb
lock
pop
push
out
icebp
jno
or
daa
mov
pop
out
pop
mov
leave
lcall
sub
negl
sbb
lcall
lahf
je
and
mov
lds
jp
jl
inc
push
mov
cmp
test
mov
popl
fucomp
xorb
lahf
mov
leave
addb
mov
mov
js
cmp
gs
outsb
in
and
daa
xchg
dec
fsubrl
push
lods
movsl
sbb
aaa
lock
cmp
daa
adc
jbe
shrb
outsb
or
or
push
out
outsb
imul
insb
inc
gs
pop
add
pop
cmovg
fstps
js
jne
xchg
mov
in
mov
scas
mov
mov
jle
insb
jle
je
mov
mov
movsb
mov
inc
sbb
lods
rorl
jnp
leave
mov
jmp
jp
lods
mov
aam
insb
mov
or
push
push
jl
dec
mov
mov
jae,pt
dec
jnp
cmp
shrb
cmp
lea
push
and
and
xor
popf
jecxz
addr16
out
mov
pop
imul
sub
pop
dec
pop
daa
cmp
sbb
xchg
push
push
push
push
enter
fistpll
ljmp
and
sbb
clc
pop
rcrl
lahf
or
outsb
mov
stos
inc
or
test
sub
fidivl
sbb
fiaddl
inc
push
sbb
xchg
mov
push
arpl
lcall
cmc
push
cmp
push
lds
ss
pop
cmc
sub
scas
ljmp
pop
pusha
mov
sub
popf
aaa
xchg
addb
into
cmp
outsb
nop
rcrb
ret
cmp
popf
mov
jo
xor
inc
pop
pop
inc
in
cmp
pop
pop
and
jecxz
int
js
cmp
popf
push
jmp
cmp
dec
lds
cwtl
mov
outsb
shrl
shrl
cld
psubsw
je
lds
jmp
addr16
jno
or
icebp
arpl
dec
ret
mov
sarb
adc
loop
cld
jns
in
sbb
cmp
cmpb
arpl
lods
nop
push
or
sub
lcall
addb
rcll
mov
pop
movsl
in
fidivl
jbe
push
jae
cmpsl
inc
fiaddl
dec
xor
js
mov
push
mov
test
je
pop
loope
pop
push
push
mov
loop
fisubrs
add
or
in
movsl
sbb
int
das
add
sub
xlat
test
cli
ret
and
clc
lods
in
dec
and
xchg
ljmp
loop
and
ficoml
pushf
xor
mov
in
jmp
xchg
jmp
adc
sub
or
adc
mov
xor
jae
out
mov
adc
repnz
pop
xchg
xorl
sbb
or
xchg
std
and
and
xor
add
out
jp
xchg
sahf
push
lcall
xor
incl
ret
inc
gs
stos
mov
fnsave
stc
lds
mov
incl
daa
aaa
cli
pop
mov
outsb
inc
sub
imul
or
inc
ljmp
in
ret
dec
pop
mov
push
in
iret
aas
dec
add
inc
les
dec
fimuls
nop
push
mov
test
xor
mov
jge
cmp
sbb
into
insb
cmc
pusha
popf
inc
hlt
aas
add
mov
pop
cmp
lods
jns
lret
roll
jnp
cmc
call
mov
jmp
stc
jbe
into
inc
add
jmp
dec
sub
jmp
jg
push
jae
cmp
or
outsb
sub
sub
and
mov
push
mov
and
int
add
lea
jne
rcl
orb
sub
data16
pop
mov
jbe,pn
cwtl
notl
cmp
cmp
cmp
push
stos
in
sbb
push
shll
mov
add
sbb
or
push
lret
setae
jae
lea
jg
cmp
in
lds
and
shrb
outsl
pop
xchg
xchg
pop
xchg
mov
push
sbb
mov
adc
pushf
jmp
aad
mov
int
push
xchg
push
push
dec
sbb
sbbl
pop
pushf
sarb
leave
ss
lahf
jmp
ret
das
int
popa
imul
hlt
dec
jno
into
adc
dec
xor
loop
ret
mov
imul
pop
insl
idiv
pusha
sub
jne
pop
stos
sbb
inc
shrl
ljmp
or
pop
mov
or
sub
cmp
adc
mov
icebp
pop
fwait
insl
movsl
xor
cmp
adc
sub
sti
pop
in
sbb
lock
adc
pop
rcrl
push
jae
lods
fidivs
mov
pop
and
push
mov
jae
test
xchg
fcoml
daa
shll
pop
add
sub
call
popa
das
lret
loope
lods
fwait
xchg
xorb
push
jl
lret
orl
dec
cwtl
js
jns
add
imul
test
ret
mov
cs
mov
cmp
loope
inc
clc
xchg
add
dec
pop
jb
pop
sub
sti
sbbb
push
jb
rcrb
jle
jae
dec
faddl
int3
sahf
xor
out
xchg
dec
mov
and
mov
das
imul
pop
out
mov
imul
ds
xlat
xorb
outsl
sub
aas
inc
pop
lds
lea
jae
lds
out
das
je
jmp
pop
mov
add
nop
fmull
mov
pop
loopne
sub
lods
push
std
xor
rol
sahf
insb
cmc
xor
xor
dec
subss
ror
movsb
push
stc
in
fistps
cmovl
cmc
out
pop
push
and
xor
jns
mov
inc
lcall
pushf
mov
xor
in
movb
push
aam
inc
add
dec
popa
cmp
sub
int3
and
or
adc
fidivrl
pop
je
fsubrl
sub
push
xchg
xchg
push
lock
mov
ljmp
mov
lods
mov
pop
xchg
adc
xchg
or
out
jg
lret
movsb
push
popf
xor
and
lcall
dec
bound
sub
iret
lods
int3
ja
fmul
dec
orb
sub
or
cmp
fisubrs
inc
bound
push
loopew
push
test
sti
insb
out
sbb
les
pop
dec
cmp
xchg
data16
pop
and
pop
cmp
ss
fwait
imul
mov
or
jecxz
cwtl
jae
sbb
vmaxsd
mov
sbb
movsl
sub
push
sbb
ret
mov
lds
test
daa
sahf
add
jp
iret
jecxz
test
xchg
or
and
sar
push
fsubl
ret
mov
les
jmp
jle
pop
mov
adc
xchg
roll
inc
adc
dec
jae
nop
imul
stos
in
inc
xchg
cwtl
ds
fistl
in
ja
adc
and
add
in
sub
pop
mov
push
sub
sub
ss
mov
rcll
mov
int3
in
xorl
cltd
scas
insb
ficoml
outsb
cmpsb
push
jae
mov
add
sbb
mov
leave
push
iret
mov
inc
pop
orb
insb
jp
stos
mov
cltd
mov
lcall
xchg
mov
fwait
push
sbb
cmp
adc
cmp
and
xchg
imul
and
arpl
sbb
cmp
jmp
inc
dec
adc
mov
fbld
dec
push
sahf
adc
lods
mov
mov
shll
addr16
pop
loopne
jnp
xchg
adc
lods
jo
lods
fstpt
out
add
pop
jo
xchg
lahf
or
cs
xor
iret
inc
inc
adc
mov
mov
out
mov
xor
jle
imul
clc
mov
push
sti
sbb
es
xchg
hlt
mov
out
and
cmc
add
mov
mov
mov
test
hlt
test
lods
cmp
sub
test
mov
stos
jge
popl
pushf
mov
lods
daa
ss
dec
shrl
sbb
ret
dec
sbb
push
scas
mov
stc
mov
xchg
adc
addr16
xchg
mov
insb
call
and
out
movsl
pusha
jl
cmp
jo
pop
mov
cs
hlt
xor
pop
mov
push
stc
test
sub
mov
repnz
sbb
push
jg
xchg
push
sbb
insb
push
dec
fs
lahf
pop
rolb
dec
rcll
fnstsw
mov
in
jo
sub
lret
testb
jl
loope
loope
dec
lret
mov
test
mov
dec
mov
mov
adc
cmpl
jle
push
stos
xor
sbb
or
pop
xchg
push
sub
sbb
mov
aam
popf
pop
movsl
add
cld
sbb
mov
mov
dec
jnp
les
jle
and
cli
xor
sbb
adc
lea
ret
mov
ret
pop
mov
pop
mov
jae
inc
lahf
jl
or
cltd
jo
test
push
or
dec
push
adc
push
ss
imul
data16
ja
aam
das
inc
lds
cmp
inc
inc
push
leave
lcall
dec
pop
ret
subb
xchg
and
adc
loopne
jle
adc
add
cltd
push
mov
pop
dec
sub
jmp
rcr
aad
and
push
bound
mov
adc
ret
sarb
add
xor
push
pop
movsb
cmc
in
cmp
sahf
push
aad
mov
repz
and
xor
stc
out
cmpb
dec
lahf
xchg
ficoml
xor
or
into
jns
cs
insl
iret
and
cmpsb
mov
mov
notl
xchg
bound
les
jecxz
mov
inc
rcr
ss
ja
jg
jg
lods
dec
pop
orb
xchg
xchg
ds
roll
jne
cmp
add
inc
nop
lret
pop
int
in
jmp
shll
imul
or
cmp
sub
sarb
iret
popf
hlt
dec
sbb
cmpsb
std
jge
out
rcrb
adc
dec
mov
outsb
fdivl
outsb
push
mov
mov
adc
xor
fmulp
sar
or
insb
mov
lods
mov
icebp
mov
and
xchg
xor
jno
sub
adc
sub
bound
decl
pop
gs
xchg
xor
ljmp
bound
loope
dec
mov
push
insb
mov
jp
jo
jnp
lahf
dec
and
xlat
lods
outsl
dec
cs
fistps
in
fucom
ficompl
pop
mov
aam
add
inc
rclb
test
fisubrl
lret
nop
xchg
mov
xor
xor
push
aas
cs
dec
ss
and
bound
in
lea
xchg
popa
sti
xchg
out
and
push
push
or
add
add
scas
mov
lods
lahf
test
js
jbe
and
ljmp
jbe
push
mov
out
pop
movsb
das
push
pop
sub
movsl
test
mov
push
mov
paddb
mov
data16
xor
aas
and
mov
xchg
stc
push
jbe
pop
test
or
dec
call
sub
or
sub
insb
sbb
pop
aas
jp
sub
add
push
mov
cmpl
add
sub
je
jbe
movsb
push
pop
ret
inc
in
scas
sbb
sub
fistps
xchg
popf
lahf
inc
stos
hlt
mov
fadds
adc
sub
mov
cwtl
nop
outsl
fcompl
mov
or
jg
xor
pop
sub
mov
inc
das
mov
out
add
cmpsl
imul
call
or
push
hlt
cmpsl
or
addr16
jns
xchg
repz
daa
jae
mov
mov
or
aad
inc
test
lock
and
movsl
mov
daa
pop
pop
sbbb
lds
cmp
ljmp
sarl
rolb
sbb
push
in
pop
jge
add
outsb
pop
js
or
sub
jo
outsb
cmp
test
xlat
pop
cmp
jb
xchg
ja
mov
or
dec
std
insl
shrl
std
sbbl
mov
mov
je
xchg
cmpsl
popf
int
call
dec
cs
in
xchg
andb
inc
jns
mov
jp
out
lahf
out
std
mov
fnsave
lahf
push
push
add
sbb
icebp
aaa
xchg
and
bound
or
outsl
loop
or
popf
pop
stos
bound
sub
fmuls
inc
rcll
idivl
jne
mov
clc
jne
es
adc
fstpl
cmp
les
pop
or
out
cmp
mov
sbb
sub
das
pop
std
cmp
mov
push
sub
adc
jo
add
shll
cmc
dec
ljmp
pusha
sti
adc
xor
add
lods
dec
gs
mov
jmp
adc
loop
cld
fdivrs
push
dec
clc
lret
xchg
xor
jno
push
test
mov
cmp
pop
stos
mov
push
sub
fimull
fbstp
xor
cmp
jno
stos
push
mov
inc
mov
or
scas
inc
cmc
and
xchg
mov
mov
shrb
jno
into
lahf
inc
inc
push
jmp
sbb
and
xchg
cmp
sbb
mov
xchg
jns
mov
dec
js
ret
or
xchg
mov
test
in
xchg
orl
jge
pop
push
sbb
xchg
mov
sbb
in
cli
daa
adc
sub
mov
sub
mov
clc
lea
push
iret
and
adc
outsl
in
jl
add
push
mov
aam
sbb
repnz
mov
fldt
mov
cmp
dec
dec
lds
adc
sub
shr
cwtl
mov
test
rcrl
bnd
mov
int
xchg
daa
scas
cmp
js
xchg
cwtl
cmpsb
jmp
popa
fdivp
movsb
mov
jb
mov
pop
testl
sarb
sbb
mov
fbstp
out
jmp
stc
and
lods
pop
aas
movsl
icebp
movsl
mov
add
jg
lds
mov
ss
loopne
jge
mov
leave
out
fisttpl
xor
add
les
cmpsb
in
adc
imul
in
mov
fwait
mov
cmpb
sbb
or
jns
xlat
and
xchg
out
cli
cld
arpl
adc
lcall
cmp
test
lods
jbe
adc
cmp
jmp
sbb
jecxz
mov
test
xchg
lods
shll
fdivrp
outsb
xchg
orl
fcomp
mov
xor
adc
mov
cmp
imul
sbb
pop
ret
cmp
mov
repz
lahf
test
movsl
sub
xchg
ljmp
jno
ljmp
or
xchg
xchg
mov
call
xor
loopne
sbb
sbb
stos
jb
notl
jecxz
cltd
cmp
push
ss
mov
add
lock
dec
lcall
in
jmp
ret
jg
mov
daa
push
fdivr
test
stos
insl
fwait
pop
adc
inc
sbb
jge
lock
pop
jmp
cmp
inc
pusha
ja
pop
aaa
stos
iret
mov
mov
or
clc
icebp
cmp
into
lcall
arpl
jge
sar
filds
or
fldl
mov
pop
xor
mov
cmp
addr16
or
test
push
int3
sti
mov
dec
xlat
xor
rcr
mov
stos
test
outsl
not
mov
pop
stos
scas
push
mov
mov
xor
jmp
push
mov
int
sbb
jp
addr16
mov
clc
push
cmp
sbb
push
jbe
add
mov
sub
dec
call
and
or
pop
and
mov
sbb
jecxz
xor
xor
outsl
imul
movsl
xchg
and
sbb
pop
icebp
push
dec
loop
out
lods
or
add
cmp
xchg
ret
movsl
fildll
sub
mov
movsl
mov
in
dec
js
scas
pop
cmc
or
dec
in
inc
push
jo
sub
fsub
pop
and
dec
adc
imul
negl
mov
xor
insb
sar
cs
shlb
jnp
ja
sub
mov
ja
test
jmp
push
mov
inc
ljmp
sbb
sub
fwait
or
lods
push
mov
cltd
jge
rcrl
lret
loopne
cli
aas
shrl
mov
xor
mov
add
cld
out
mov
adc
adc
call
fnstsw
dec
inc
test
loope
and
add
dec
cltd
pop
mov
pop
enter
pop
test
mov
in
xor
push
les
in
outsb
test
mov
adc
jbe
and
lock
pop
jp
or
pusha
mov
xchg
xlat
mov
in
push
dec
and
xchg
add
inc
sub
xor
cwtl
or
xchg
daa
loopne
jle
mov
movsb
pop
scas
aam
xchg
dec
shll
dec
jl
fists
push
adc
xchg
mov
cmp
aam
cltd
clc
ja
stc
mov
xchg
add
fnstenv
es
push
into
xor
add
iret
jle
xchg
pop
lods
hlt
out
nop
imul
xchg
and
loope
inc
outsl
lahf
into
incl
inc
out
subl
cmp
adc
dec
mov
sub
xchg
jb
in
sbb
sbb
xor
aad
fwait
ds
push
pop
xchg
lods
orb
mov
xor
cmp
fmull
iret
pop
add
out
outsb
dec
das
push
jno
iret
cmpsl
pushf
mov
push
ljmp
or
pop
cmc
lods
pusha
push
mov
cmp
iret
mov
jnp
mov
jae
jg
add
cmp
in
jno
xchg
addr16
insl
es
adc
mov
xor
add
cwtl
jg
ds
jb
out
cmp
and
add
inc
pop
mov
add
dec
jecxz
lcall
outsb
lret
ss
push
imul
xor
outsl
shlb
dec
sbb
out
cld
andl
std
inc
or
enter
mov
outsl
sbb
out
jne
xchg
std
xlat
iret
int
mov
lret
push
mov
cmp
pushf
and
comiss
in
and
mov
fldenv
je
imul
fadds
mov
xchg
popf
mov
sbb
repz
fiaddl
add
fimull
cld
inc
out
xchg
adc
sbbb
aad
mov
bound
add
mov
scas
scas
repz
daa
inc
jns,pt
inc
sbb
enter
fists
jg
and
ss
or
int3
sarl
add
cs
adc
subb
push
mov
jne
aaa
int3
lcall
rcll
popf
bound
add
xchg
in
notb
mov
mov
adc
inc
or
mov
fisttpll
xchg
cld
pusha
sub
stos
mov
or
repz
push
pusha
pop
mov
subb
push
sbb
mov
jb
jmp
jmp
fsubrl
jo
test
nop
xor
lock
or
mov
cmpsl
mov
push
std
leave
dec
xchg
push
cmp
mov
fsubs
outsb
imul
mov
leave
and
adc
icebp
mov
les
outsb
pop
xchg
and
data16
jmp
lea
inc
cmp
or
fsqrt
rcrl
in
test
dec
out
inc
sbb
sbbb
cld
sbb
lock
sbb
push
dec
adc
xlat
jmp
jb
test
sbb
sbb
in
inc
or
jge
push
push
push
add
inc
pop
and
push
dec
in
or
mov
inc
mov
or
mov
dec
add
arpl
mov
jnp
push
push
sbb
out
and
jmp
jae
cmpsl
lea
jmp
mov
stos
and
add
jno
loope
es
jns
pop
dec
sub
xchg
test
hlt
je
push
jle
stc
jmp
orl
mov
inc
jb
xor
xor
sbb
dec
mov
mov
pop
dec
push
mov
movsl
loope
push
mov
dec
sti
out
ss
dec
inc
pop
xchg
dec
scas
and
popa
inc
lret
push
cmp
outsb
jbe
jbe
mov
fists
dec
cld
sbb
and
in
test
shll
setbe
mov
mov
cs
sub
pop
xchg
lds
pop
or
ret
scas
stc
cmpsl
mov
xchg
add
push
nop
aaa
fdivs
pop
hlt
popf
or
lods
pushf
or
jl
bound
arpl
sbb
aaa
aam
jo
popa
ret
and
cs
ret
jae
mov
xchg
leave
add
cmp
loop
sub
arpl
adc
subl
fs
inc
xchg
outsb
loope
pushl
sub
lret
jno
and
sub
imul
les
mov
arpl
adc
sub
gs
daa
popf
jge
pushf
or
pusha
dec
iret
add
pop
adc
xchg
out
in
out
cmp
sbb
xchg
mov
lcall
out
aas
hlt
mov
mov
std
rorb
mov
dec
push
sti
mov
or
mov
cld
icebp
or
repz
inc
mov
mov
jp
lea
lret
jne
gs
jle
adcl
loope
in
or
inc
jae
ss
js,pt
push
scas
negb
test
xchg
push
movsl
pop
pop
shl
mov
jno
int
sub
mov
push
nopl
push
in
mov
shlb
xor
int3
test
sar
pusha
addl
push
aam
cs
pop
inc
gs
sbb
adc
push
jecxz
push
jle
push
adc
stos
jae
xor
push
dec
sub
jbe
add
push
mov
out
push
xchg
ja
iret
sub
dec
mov
adc
jbe
inc
sti
ret
push
lcall
sub
mov
test
jl
push
dec
fisttpll
mov
adc
sbb
pop
fdivs
call
sbb
fiadds
adc
fidivrs
and
mov
out
int
stos
lock
inc
stos
xchg
jb
mov
cmp
sti
gs
mov
aas
adc
fldcw
xchg
aam
push
pop
push
cmp
add
push
dec
lock
mov
push
into
dec
cmpsl
jmp
mov
dec
inc
jne
pop
scas
mov
ret
jl
jmp
gs
in
jbe
or
faddl
mov
test
test
mov
inc
mov
push
jno
xor
movsl
and
xchg
int3
cmp
and
inc
or
fisubrl
push
dec
xchg
nop
jmp
fmul
stos
push
fildl
out
roll
mov
popa
test
add
addb
adc
xor
mov
adc
das
xorb
addr16
mov
jmp
dec
sbb
comiss
xchg
repnz
icebp
aas
pop
fldl
insl
pop
out
or
cltd
rorb
cmp
das
insb
fimuls
sub
andb
imul
jl
mov
mov
mov
cmpsl
iret
rcrl
lcall
out
pop
add
rclb
imul
test
jg
orl
xchg
jbe
insl
sbb
sar
or
push
cmp
pushf
mov
mov
inc
xlat
ss
fiaddl
mov
das
inc
fs
mov
fs
and
ds
push
add
jns
push
or
fwait
lahf
stc
hlt
push
lock
lahf
das
cmp
into
scas
push
cmc
xor
inc
inc
pop
jb
sbb
pop
cltd
mov
test
dec
jecxz
mov
and
leave
daa
pop
cmp
xor
add
push
xchg
mov
es
mov
lcall
scas
mov
and
mov
sbb
imul
push
xchg
mov
cmp
fcompl
dec
cltd
dec
insb
repz
ds
pop
or
mov
es
enter
repnz
test
pop
mov
pop
pop
xchg
out
sbb
mov
loope
jae
sub
mov
arpl
pop
mov
negl
wbinvd
js
test
aas
test
out
ljmp
jp
pop
cmp
add
xchg
push
int
fidivl
pushf
xchg
jns
mov
insb
cmpsb
push
mov
lret
subl
push
clc
sbb
das
xchg
lods
xchg
scas
jbe
imul
xchg
and
in
dec
mov
and
inc
sub
sbb
int3
fidivs
xor
addr16
pop
lea
dec
and
sub
mov
mov
iret
sub
loopne
push
jg
mov
push
jecxz
xor
shl
loopne
data16
movsl
out
mov
aas
mov
sub
loop
negb
and
scas
popf
fisttps
dec
test
dec
into
lret
mov
sarl
xchg
imul
arpl
mov
cmc
push
inc
cmp
popa
xchg
sahf
push
mov
popa
sub
and
dec
mov
pop
xor
cmpsl
fiaddl
andl
shll
out
push
hlt
loope
mov
ror
inc
mov
ficoml
nop
icebp
js
hlt
mov
cmp
daa
lea
dec
mov
or
mov
mov
xchg
and
cmpsb
test
scas
pop
js
jb
cmc
push
jbe
and
sbb
adc
pop
push
sub
mov
into
in
mov
xchg
sbb
inc
cmp
leave
cs
dec
movsl
xor
mov
out
shl
xbegin
dec
out
stc
sub
out
xchg
test
mov
sbb
shr
fsin
mov
ds
push
xor
jmp
push
push
mov
nop
mov
pop
mov
jle
rolb
mov
idivl
jnp
adc
pop
inc
aas
pop
int
push
mov
sub
stc
mov
jno
or
mov
gs
imul
sbb
sbb
xor
xlat
push
mov
bnd
xchg
jle
repz
sahf
jmp
mov
sarl
aad
out
adc
pushl
cmp
pop
xor
sbb
jg
pop
inc
faddl
shll
mov
gs
sub
scas
sub
das
fistps
lods
outsb
pop
pushl
inc
clc
sub
or
sbb
mov
icebp
sub
jge
add
mov
test
sti
subl
sub
add
gs
ficoms
outsb
inc
push
lcall
iret
int3
pop
add
fsubr
stos
add
ret
sub
loopne
arpl
cli
jecxz
pop
mov
push
aas
and
add
mov
je
and
sub
clc
xchg
hlt
mov
or
dec
cs
and
movsl
mov
pop
popa
roll
or
cmc
movsb
mov
rorb
adc
mov
fs
jmp
sub
fdivs
call
ret
add
mov
rorb
int3
rol
xchg
push
xor
xchg
inc
add
and
dec
pop
enter
ja
xchg
jge
and
cmp
in
inc
in
popf
sub
jae
push
dec
sub
aam
cs
cli
mov
mov
add
dec
outsl
lahf
sub
test
xor
inc
xchg
mov
mov
hlt
sbb
cmp
xchg
cmp
mov
jge
scas
fwait
mov
ret
and
sti
dec
mov
daa
in
inc
jle
daa
clc
movsb
lret
stos
or
outsb
mov
or
mov
push
cmp
ss
test
pushf
in
xchg
movsb
mov
test
fsts
mov
xor
xchg
mov
mov
int
sub
pop
in
push
xchg
and
das
ficoms
mov
add
adc
lret
lcall
int3
mov
adc
push
mov
adc
jle
add
add
pop
fidivs
mov
mov
or
cltd
sbb
inc
es
int3
sub
mov
push
xchg
xchg
rolb
and
cmp
sahf
mov
push
sbb
shrl
xor
adc
mulb
ss
dec
and
ss
adc
scas
je
adc
sbb
jp
cltd
mov
jb
xchg
push
jle
xchg
addr16
in
push
pushf
ja
test
into
clc
cmp
popa
loopne
jge
cmp
push
pop
cld
shlb
add
mov
testb
mov
xchg
fistpll
pushw
or
mov
adc
or
mov
dec
bound
in
push
fldl
mov
test
leave
stos
mov
lds
sahf
sbb
pop
xchg
xor
dec
push
mov
mov
outsb
sbb
std
es
mov
std
mov
lcall
jne
mov
jne
ss
hlt
xchg
mov
and
xchg
xor
dec
cli
mov
rorl
or
push
and
add
ss
insl
in
in
and
lea
xor
or
and
and
rcll
inc
mov
stos
xor
mov
lock
aad
jb
dec
xor
inc
imul
sub
test
adcb
mov
dec
push
push
call
test
add
mov
cmp
mov
mov
jne
ss
shlb
test
gs
or
imul
cmp
cmp
popa
dec
arpl
mov
and
repz
cmpsb
test
xchg
sbb
sbb
int3
in
adc
ss
inc
insl
enter
xchg
mov
mov
scas
xchg
lret
push
sbb
add
xchg
clc
popa
fdivrl
dec
dec
iret
xchg
dec
pop
add
xor
mov
jae
add
ds
int
push
fisubrl
int
test
ret
dec
loope
push
movsb
mov
sahf
dec
iret
movsb
rcll
repnz
inc
shr
mov
outsb
sbb
adcb
shrb
mull
testl
loopne
icebp
push
mov
cmp
xchg
adc
fists
cmp
movsl
mov
or
dec
mov
daa
sbb
inc
test
mov
push
popa
sub
cmp
mov
sub
jb
dec
addb
jl
mov
xchg
dec
call
add
mov
clc
inc
pop
fwait
push
rcrb
mov
mov
jne,pn
out
jmp
in
xchg
or
imul
dec
lds
loopne
shlb
mov
aam
lds
es
je
add
roll
cmp
iret
xor
sbb
mov
pop
pop
mov
sub
push
imull
loop
dec
sub
fstps
cmp
cmc
mov
in
shll
add
jne
jle
in
sub
or
and
add
mov
push
adc
pop
test
js
xlat
adc
aaa
dec
hlt
push
cmp
imul
movsb
out
cmp
inc
push
rorb
push
sbb
stos
or
dec
ja
push
mov
pop
mov
xor
testl
movlps
mov
cltd
in
data16
inc
lods
pop
push
pop
stos
pushf
dec
fs
cmp
cltd
xor
push
insl
mov
das
outsl
shlb
lret
ud1
cmp
or
sbb
jmp
jns
sub
dec
or
cld
fstps
cmp
out
add
xor
ficompl
inc
test
fwait
in
jg
inc
jle
addr16
and
inc
rcrb
cwtl
or
rolb
js
jo
pushf
std
mov
jl
enter
mov
aaa
push
sub
jmp
paddw
cmp
out
ljmp
fisubrl
sbb
mov
cmp
cmp
adc
pop
iret
push
sub
adc
addb
jl
adc
mov
daa
xlat
ret
ss
cwtl
pop
xchg
shrl
cmp
adc
lods
inc
xor
xor
push
js
into
fs
mov
mov
psllq
addr16
adc
jns
pop
sbb
into
lods
jl
dec
ss
fdivrs
es
popf
sub
aam
popa
jl
orl
and
cmp
stos
adc
aam
cli
jo
sarb
jg
mov
adcl
dec
popf
add
mov
jnp
pop
sub
outsb
flds
mov
pop
sarl
jns
sahf
jno
icebp
nop
fsubl
cmp
add
addl
push
test
mov
andb
test
dec
aad
sbb
mov
data16
notb
rorb
das
and
ss
movsb
pop
sbb
dec
sub
push
ljmp
hlt
scas
gs
stos
cmp
fdiv
data16
inc
pop
cmp
adcb
or
inc
loope
mov
hlt
adc
pop
shll
clc
cmp
in
popf
mov
adc
push
pop
pushf
ljmp
shll
aaa
icebp
push
fsts
aad
clc
lea
or
adc
adc
push
jnp
ljmp
jno
in
push
aas
test
cmp
lahf
jbe
adc
test
loope
sarl
sbb
imul
aaa
fldl
lahf
sbb
sub
sub
jge
int
leave
and
xor
push
inc
pop
cmp
and
mov
jg
in
imul
flds
lods
adc
and
sti
add
mov
fsts
cmp
repz
pop
sbb
mov
mov
sbb
pop
leave
xor
jb
mov
xchg
fimuls
dec
call
adc
xchg
sbbb
sahf
out
sub
inc
jp
cmp
or
jp
imul
cmp
fwait
leave
out
jp
aam
lret
sbb
and
adc
xchg
out
shrl
icebp
inc
xor
ds
or
loop
dec
xor
adc
jae
pop
mov
mov
pop
dec
jge
mov
push
pop
mov
dec
comiss
fstpt
and
stc
cmp
fnstcw
push
sub
jno
jb
cmp
push
add
jnp
ret
push
cmc
in
fsubr
out
call
lods
xchg
repz
or
daa
out
ljmp
dec
lods
jmp
and
push
sahf
adc
mov
in
xchg
pusha
out
and
stc
sub
mov
mov
in
es
push
add
popa
xor
sub
fistpll
aam
aas
add
dec
lcall
test
popf
sarl
push
xor
ljmp
jle
call
addr16
das
pop
std
pushf
jp
or
xor
in
inc
mov
divl
pop
mov
out
add
mov
in
xchg
inc
out
and
filds
repz
testb
and
stos
aaa
or
push
test
push
jl
aam
scas
je
scas
insl
lods
add
pop
jae
fcoms
push
or
mov
add
mov
cmp
shlb
jnp
push
push
popw
iret
mov
std
adc
xchg
test
popf
or
or
arpl
fs
dec
push
cmp
in
fcmovne
rcrb
fs
dec
insb
imul
push
jo
lds
push
fwait
mulb
push
pop
scas
dec
or
sbb
xchg
sbb
lock
mov
ja
daa
cmp
inc
data16
cmp
push
mov
loopne
lcall
pushf
scas
scas
movsb
clc
push
pushf
xchg
or
pop
stos
or
stos
push
lea
insb
add
insl
repz
cmpsb
loop
out
inc
lcall
out
fisttpl
inc
iret
movsl
sub
pop
out
push
jmp
loope
or
or
das
or
jge
push
jns
cmp
sub
and
out
lcall
mov
or
jmp
mov
pop
pushf
mov
loope
push
rorl
stos
clc
int
leave
pusha
rorl
aas
ret
inc
std
xchg
aaa
push
es
repz
pop
jae
inc
in
divb
fsubs
push
inc
jg
popa
std
and
xor
dec
jge
call
clc
jae
cmp
xchg
fwait
or
das
js
dec
cld
lods
xchg
es
cmpsl
pusha
pushl
dec
ret
xor
mov
rolb
cli
inc
ret
cmp
adc
cmpb
inc
bound
jbe
fwait
sarl
retw
cmp
scas
pusha
lds
xchg
ljmp
sub
xchg
adcl
inc
andl
add
int
or
jns
mov
mov
push
inc
je
aaa
push
push
rclb
repnz
sub
mov
dec
rorb
inc
lret
mov
adc
jg
mov
rcrb
add
and
loope
lcall
jle
mov
push
insb
int3
mov
fiaddl
sub
cmc
cmpsb
ret
enter
jno
add
push
jge
mov
inc
and
pusha
inc
pop
xchg
xor
and
dec
sub
xor
loop
fimull
or
or
jl
mov
push
and
mov
pop
push
add
ret
andl
xchg
cltd
lods
fistl
imul
outsl
xchg
xchg
mov
mov
clc
dec
mov
inc
mov
mov
pushf
lahf
cltd
add
inc
lret
adc
sub
xor
push
test
daa
insl
mov
outsl
mov
sbb
loope
mov
push
sbbl
mov
inc
iret
outsb
out
mov
mov
lods
or
fxch
pop
ficoms
push
adc
sti
push
loopne
or
or
hlt
jg
add
add
popa
xor
xchg
sti
pop
mov
fistpll
xlat
cmp
add
out
push
mov
aaa
sbb
or
mov
jo
cmpsl
sub
inc
stos
fcmovu
mov
dec
aad
call
or
clc
lahf
jne
stc
xchg
loope
mov
je
inc
in
xor
aam
mov
add
lds
jnp
les
mov
mov
rclb
push
pop
fwait
mov
xchg
xchg
adc
and
mov
cmpsb
push
add
sbb
pop
gs
int3
or
repnz
xchg
inc
scas
les
mov
je
push
adc
insl
mov
out
loope
fdivl
fisubl
dec
fsubrs
cwtl
outsl
sahf
rcl
inc
fstl
xchg
cld
outsl
xchg
dec
inc
sub
sbbl
lds
fwait
xor
fstpl
insl
cwtl
dec
stc
cld
push
or
xchg
inc
pop
loopne
dec
xchg
adc
xchg
sar
mov
arpl
xor
mov
adc
cmp
enter
xchg
fistl
dec
mov
js
adc
jp
call
js
and
xor
dec
jle
mov
test
pop
pop
adc
pop
xchg
pop
push
aaa
das
ja
loop
lock
test
out
dec
sahf
mov
mov
mov
daa
ss
es
fiaddl
cmpsb
xchg
inc
jnp
pop
add
mov
mov
xchg
rorl
mov
jb
mov
cs
out
fwait
clc
pop
rcrb
imul
xchg
out
ret
fistps
dec
dec
call
or
xlat
out
jo,pt
inc
sbb
pop
mov
inc
xchg
jge
in
aaa
aad
or
sub
pop
les
hlt
mov
in
dec
repnz
inc
test
inc
pop
imul
cmp
mov
xor
mov
pop
mov
fisttpll
push
sbb
pusha
fucom
and
fsub
mov
rcrl
inc
jns
sub
inc
ljmp
lods
mov
xor
jno
stc
xchg
mov
repz
dec
pop
sub
dec
xchg
mov
mov
mov
inc
sub
outsl
push
sbb
xor
test
ficoms
sub
loop
jno
or
mov
aam
stos
mov
adc
xchg
inc
test
mov
test
outsb
lock
mov
rclb
push
aad
and
sub
lock
pop
mov
pushf
xchg
sahf
push
fisttps
aam
dec
and
arpl
lcall
loopne
push
sbb
push
pop
xchg
cmp
loopne
mov
mov
inc
jae
xchg
cmp
jo
mov
vsubps
sub
movsl
inc
sbb
lds
dec
int
fsubr
xor
xchg
rcr
lods
cmpsb
mov
lret
daa
inc
or
fwait
sub
or
mov
jae
sarl
mov
inc
mov
stc
sti
xchg
mov
inc
fwait
pop
sub
push
fmull
inc
das
mov
sahf
and
or
test
mov
inc
jb
add
mov
icebp
jne
lods
lcall
fiaddl
out
in
ret
stos
jmp
cmc
outsb
mov
lcall
mov
imul
xchg
adc
cmpsl
andl
loope
addb
xlat
inc
fbld
pop
imul
shlb
mov
fnstsw
add
or
pushf
das
outsb
cld
push
mov
xchg
add
xchg
leave
push
cli
sbb
dec
outsb
jle
mov
xor
outsb
scas
xchg
jge
jbe
cwtl
rcl
inc
subl
sahf
aas
sub
leave
das
dec
sbb
dec
inc
push
cwtl
ret
add
adc
sub
popl
lret
fwait
xor
rolb
or
or
test
in
sub
mov
scas
inc
sti
or
mov
dec
sub
pop
in
mov
fldcw
je
outsb
nop
cmpl
inc
push
loope
mulb
xor
and
js
and
sbb
xor
lahf
add
jp
cwtl
data16
test
int3
mov
mov
adcl
xchg
mov
out
stc
xchg
inc
lods
jl
pop
cmpsl
xchg
ds
stos
lahf
divl
mov
mov
ljmp
push
mov
ret
ret
imul
lock
enter
xor
and
orb
mov
lods
jb
rorb
stc
ret
pop
xchg
icebp
sbb
pop
add
cli
mov
cmp
mov
inc
les
dec
add
mov
adc
clc
mov
ret
aam
je
and
clc
inc
stos
loope
std
cs
dec
outsb
cltd
jno
lret
cmp
arpl
add
out
insb
mov
movsb
cmpsb
push
lods
push
xor
loop
xor
sub
sub
or
loopne
clc
pop
cmpsb
jg
and
mov
sbb
push
dec
test
jbe
aas
mov
push
cs
dec
daa
push
xor
insb
pop
xchg
fcoms
inc
insl
add
adc
pop
cld
push
inc
inc
cmp
pop
lds
xchg
pushf
pop
ljmp
push
fistpl
inc
lea
test
scas
in
pop
mov
fwait
aaa
int3
mov
jle
push
mov
push
mov
push
aad
pop
mov
pop
add
lahf
std
fstps
lret
xchg
xor
dec
push
imul
jno
dec
jno
in
mov
xor
xor
movsb
loopne
call
xor
jge
xor
cltd
out
out
push
stos
ja
xor
mov
mov
in
push
test
and
lock
jecxz
jns
pop
jge
sbb
adc
mov
int3
inc
idivb
flds
cli
ss
xor
cld
imul
sbb
adc
sub
fucom
adc
cmp
pusha
scas
imul
mov
iret
add
test
loope
and
xchg
sub
int3
mov
test
fwait
dec
pushf
loope
or
sub
push
jne
xchg
fmull
pusha
add
subl
out
jecxz
pop
sub
loope
inc
leave
testb
cmpsl
in
mov
popf
cmp
aam
cltd
ja
cmp
and
cmpsl
jmp
aad
mov
xor
or
imul
repnz
jl
dec
pop
jl
cmpsb
inc
outsb
daa
jle
or
inc
sbb
xchg
mov
push
lods
loope
pop
or
inc
sahf
push
fcmovnu
pop
mov
adc
push
imul
add
jne
idiv
cmpsl
or
imul
ret
xchg
pop
lahf
or
push
out
mov
or
dec
xchg
ja
je
out
cmpsb
pop
cmp
idivb
in
pushf
in
jne
cmc
cmpsl
sbb
jbe
lea
in
sbb
fidivrs
or
sahf
loop
ds
pop
xlat
loop
dec
arpl
sbb
xor
sbb
dec
loop
push
daa
pop
aaa
dec
adc
into
insb
xlat
xchg
cmpsl
add
andb
pop
dec
mov
inc
dec
rclb
dec
in
push
dec
pop
pushf
sbbl
inc
xor
scas
mov
mov
lcall
cmp
and
adc
es
clc
mov
jnp
pop
cmpsl
lahf
xchg
mov
rcll
out
aad
stc
mov
mov
rol
jl
jge
sub
dec
popf
xchg
scas
loope
pop
test
pop
jmp
std
out
int
mov
jae
popa
cwtl
addr16
iret
cmp
ds
insb
sbb
or
mov
nop
add
cs
ds
sbb
je
jmp
mov
insl
out
pushf
cmp
imul
aas
das
xchg
mov
mov
sub
xchg
mov
imul
sbb
dec
ss
mov
mov
insl
orb
ss
mov
jge
je
or
or
or
and
cmc
scas
mov
xchg
imul
mov
xchg
jge
fstl
mull
push
clc
dec
or
jg
rcll
gs
and
cli
cs
dec
dec
xor
jno
xor
mov
ja
jl
ljmp
xchg
popf
pop
out
pushf
movsl
xorl
das
add
lret
fistpl
adc
arpl
imul
push
xor
inc
cmc
and
jno
jmp
rorb
sub
jno
sarl
mov
test
loop
add
lahf
xor
test
jp
lds
push
fldl
test
push
jl
pop
std
sahf
jns
ljmp
scas
cmp
es
rclb
sti
sahf
stc
gs
cs
add
shll
adc
sub
stos
adc
ficomps
idivb
push
idivl
daa
jae
sbb
mov
daa
fs
cmc
sub
aad
lret
lcall
or
sbb
loope
pop
xchg
push
push
pusha
in
pop
out
in
rcrl
negb
add
inc
xchg
push
test
jo
scas
xchg
jns
xchg
jmp
jle
sub
cmp
sub
push
test
aam
js
push
rep
or
int3
push
pop
mov
aad
dec
jne
adc
mov
jbe
cmp
movsl
and
sbb
jg
je
mov
rcrl
pop
fld
sub
into
gs
sti
iret
push
sbb
jo
jle
push
pop
adc
sahf
sbb
gs
repz
mov
jmp
bound
cltd
lcall
xor
jne
mov
dec
not
and
mov
test
sti
dec
sbb
sbb
fcomps
inc
adc
or
mov
das
pusha
gs
sbb
add
inc
mov
cwtl
ret
mov
push
data16
adc
rcrb
cld
push
adc
or
mov
enter
sbb
and
cmp
mov
cmp
in
xchg
mov
push
movsb
test
xor
mov
out
pusha
out
fldl2e
rolb
adc
cmp
cli
stos
jns
cmp
mov
jno
xor
mov
repz
push
mov
mov
inc
add
push
fsts
mov
out
sti
mov
add
in
bound
inc
mov
cmpsb
std
cltd
orl
repz
dec
xor
fucomi
and
mov
xor
clc
daa
push
ja
mov
or
xor
fiadds
aad
pushf
xor
lea
dec
int
jmp
mov
mov
es
mov
push
ja
or
add
cli
aas
add
push
mov
dec
push
lock
xchg
xor
push
xor
mov
ja
loopne
data16
cltd
fisubs
sbb
loop
sbb
mov
mov
lods
cmp
mov
and
and
or
and
int3
fldcw
xchg
addr16
cwtl
pop
in
pop
idiv
sbb
fimull
mov
push
ret
inc
lahf
aam
inc
inc
and
jae
jno
orb
gs
dec
lods
dec
ret
stos
rolb
and
fisttps
push
lods
repz
push
test
push
mov
mov
jge
into
and
stos
inc
push
mov
ret
cmp
xor
fistps
sbb
push
cmpl
repnz
adc
push
or
clc
xchg
xchg
icebp
xor
fs
popf
push
ret
adc
lock
out
fs
sub
ret
dec
loopne
and
int3
mov
cmp
aaa
sti
lods
xchg
push
leave
mov
xlat
inc
loop
test
cmp
imul
and
ret
sti
loop
xor
jae
push
mov
in
int3
loop
subb
test
ret
sbb
cmp
add
mov
xor
dec
aas
stos
movsl
test
adc
out
bound
adc
cmp
enter
scas
sbb
roll
mov
hlt
xor
aas
cmovno
adc
insl
mov
add
pop
insb
add
xchg
mov
lahf
ror
sub
xchg
loopne
cmpsb
test
jl
js
push
in
push
lret
inc
sbb
rcrl
inc
data16
push
pop
cmpsl
pushf
stc
nop
jbe
insb
jp
mov
popf
pop
push
sbb
test
cmp
jle
jae
mov
dec
mov
push
and
add
inc
ss
cmp
fistpl
lret
int
cmp
pushf
and
or
cli
cmc
sbb
pop
aam
fcmovnbe
push
pop
cmp
imul
movsb
jecxz
push
js
int
aas
sbb
pop
sbb
cmpsl
test
jp
out
dec
test
mul
push
mov
pushl
movsl
pop
imul
test
ja
call
or
add
push
ljmp
orb
std
leave
test
mov
insb
jle
in
cs
push
imul
pop
mov
mov
or
inc
add
or
outsl
cwtl
rcll
daa
mov
fs
mov
iret
jne
aaa
push
sub
dec
mov
mov
lea
mov
push
mov
mov
push
inc
divl
repnz
xor
sub
jno
cmp
xchg
push
in
sti
movsl
jnp
push
xchg
mov
jo
stos
xor
push
test
push
movd
orb
aam
jmp
inc
fldt
sbb
pop
lret
rorb
push
aad
xchg
lret
cmpsl
lods
push
pop
jne
cmpsb
setp
cmp
jl
pusha
das
mov
pop
mov
add
pop
sub
xchg
popa
aad
and
mov
jns
xor
orb
mov
mov
in
push
pop
test
adc
mov
out
mov
mov
cmp
cmp
cs
sub
shll
loope
mov
insl
cmp
les
push
out
jae
call
out
out
sahf
or
in
nop
jmp
dec
sub
imul
arpl
jp
pop
ret
scas
xchg
push
lahf
push
add
xor
in
pop
das
xchg
ficoml
dec
pop
sti
push
ret
arpl
test
call
sub
jp
add
mul
mov
inc
mov
jmp
nop
mov
cld
xlat
inc
insb
adcb
hlt
bound
inc
mov
loop
mov
dec
scas
and
fidivl
xor
jae
std
pushf
dec
cld
mov
xchg
pop
fcompl
push
rcrb
loop
lahf
out
add
mov
lods
aas
mov
cmp
out
in
mov
jg
outsb
sti
mov
loope
leave
fwait
xchg
mov
fwait
xchg
rorb
icebp
fstl
pop
mov
nop
sti
or
xchg
jnp
iret
sbb
xchg
mov
sbb
push
lret
cmp
sbb
cmp
in
shll
and
and
or
in
mov
ljmp
sbb
mov
jne
sbb
jae
sbb
mov
test
add
fmul
dec
sub
lock
jae
sub
and
nop
stc
cmp
pop
repz
repz
jge
push
or
je
xchg
ret
xchg
ficoml
mov
lods
inc
push
inc
fcmovb
xchg
das
pushf
push
lret
hlt
sbb
xchg
xchg
inc
sub
push
pop
sub
cmpsl
or
jae
test
ljmp
adc
ss
aas
leave
shlb
test
mov
mov
int
mov
dec
add
mov
in
or
ss
loop
pop
fists
sbb
in
jle
push
repnz
pop
add
repz
xchg
cmpsb
test
dec
jae
rorb
pop
mov
out
test
int
xor
xor
sub
nop
insl
xchg
mov
scas
rcrl
aam
mov
dec
cmc
and
xlat
arpl
divb
push
jae
imul
xchg
daa
lods
sbb
push
or
iret
cwtl
inc
mov
add
shlb
subb
jae
aad
sub
inc
test
sub
inc
sub
in
sbb
aaa
xor
mov
and
push
loop
ja
call
orl
std
adc
pop
je
test
arpl
sbb
mov
scas
jns
test
push
mov
add
je
idivl
add
push
push
gs
jmp
stos
out
aad
cwtl
int
bound
movsb
cmp
icebp
aam
pusha
jnp
adc
pop
rorb
lock
cmc
jl
adc
fsubrs
xchg
cmp
jmp
push
push
ja
and
idivl
sub
xlat
mov
jecxz
mov
or
add
jl
loope
push
mov
outsl
dec
mov
push
lock
pcmpeqd
cmp
cmp
test
notl
insb
pop
fidivs
std
xchg
out
sub
sub
adc
lods
mov
sbb
int3
incb
int
cmp
mov
sbb
add
adc
fidivrl
sbb
iret
nop
lret
jbe
mov
lock
subb
mov
cmp
dec
mov
xor
xchg
inc
popf
ficomps
test
insb
out
cwtl
inc
xchg
mov
andl
addr16
test
popf
inc
sub
dec
sti
cli
das
js
andl
adc
jae
jmp
mov
mov
cwtl
es
mov
pop
cmpsl
lcall
jne
into
lods
jb
int3
add
mov
andb
clc
push
push
add
mov
cli
xchg
jmp
xor
ret
out
xlat
jge
repz
push
data16
jnp
mov
popaw
or
lods
pop
push
popf
movsl
jb
fcompl
xchg
les
ficompl
test
sub
std
in
push
sub
pop
push
mov
inc
jno
imul
negb
lahf
push
arpl
xor
fcompl
stc
ljmp
inc
lods
jle
lock
outsb
ds
clc
hlt
jl
fists
call
cmpsb
xchg
ret
sub
addr16
cmp
push
or
dec
sub
lret
xchg
test
add
je
add
push
fs
dec
push
or
fadd
xor
mull
jb
dec
cmp
stc
dec
sbb
mov
iret
xlat
test
dec
test
scas
push
ds
inc
sub
lret
sbb
push
pop
xchg
add
add
pusha
sar
and
mov
push
sbb
mov
int3
adc
or
shrl
xor
or
es
fcmovb
push
mov
hlt
popa
ret
bound
push
clc
add
iret
bound
sti
out
mov
jmp
leave
pop
dec
fwait
out
stos
or
rolb
std
jmp
cmp
or
xchg
repz
mov
adc
neg
cmc
int3
idiv
sub
xor
leave
rorb
loop
enter
pop
enter
loopne
or
push
pop
outsl
cltd
inc
jo
cli
push
in
push
pop
cmp
xchg
rorb
sbb
daa
cmp
in
or
jge
mov
das
popa
fsubl
js
daa
mov
std
rcll
dec
sub
addl
out
push
jne
insl
lods
punpcklwd
push
sub
sbb
pop
imul
out
aam
test
aad
ja
mov
popa
xor
pop
mov
cmpsl
leave
inc
sarb
mov
in
jo
xlat
aam
xlat
dec
inc
mov
and
imul
mov
xor
sbb
jns
or
push
lret
mov
lret
xor
cmp
fs
cmpb
add
notl
dec
mov
ja
roll
pop
je
pop
test
scas
dec
adc
testl
cwtl
sti
lret
bound
ja
xchg
call
xor
stos
movsl
fldt
jecxz
hlt
addr16
lods
jle
loop
sarl
inc
or
jl
fwait
sbb
ds
xor
pop
lock
push
jle
cmp
pusha
fsubl
cwtl
jno
jecxz
add
hlt
fildl
inc
nop
xor
fisttps
int
into
addr16
ror
jge
fldcw
ds
mov
mov
ret
push
push
into
and
xchg
pushf
jl
aad
test
mov
pop
fwait
iret
pop
sti
clc
in
loopne
sub
inc
mov
adc
jns
testl
incb
sub
repz
or
fbld
or
sbb
add
add
je
push
mov
or
add
push
loop
lcall
gs
push
shr
mov
xchg
push
movb
jle
je
mov
das
pop
xchg
cld
gs
mov
pusha
lahf
jo
cli
call
sar
aad
repz
loop
shlb
jge
sbb
mov
cs
insb
mov
and
and
cmp
enter
push
and
das
inc
push
xlat
dec
std
loop
and
push
jecxz
mov
inc
push
cmp
xor
lds
ret
add
lods
sub
mov
fsubrl
clc
mov
push
sub
outsb
inc
inc
rcrl
xchg
pop
loope
cli
das
enter
pop
in
or
pop
outsl
pusha
push
mov
xchg
mov
popf
sbb
or
das
das
pop
ja
mov
and
xor
jmp
bsf
in
insb
out
je
inc
jae
add
xchg
add
mov
add
mov
adc
sahf
inc
lcall
outsl
int
outsb
fwait
cmp
cmp
xor
lahf
or
xor
xlat
push
or
inc
insb
in
add
xor
orl
jmp
lcall
mov
mov
xor
sub
rcrl
fs
or
insl
rclb
pop
scas
ret
insb
gs
stos
or
stos
pop
andl
fst
mov
out
fsubrs
mov
nop
es
idivb
xchg
pushf
scas
addl
dec
shll
adc
mov
sub
int3
add
pop
int3
clc
lret
pop
xorb
imul
pop
mov
sbb
fsts
adc
mov
mov
cli
xchg
divl
xchg
rcll
das
in
sbb
xor
out
ficomps
xchg
cmp
push
jnp
mov
pop
mov
in
fcompl
cmp
jne
pop
pop
and
xchg
adc
ja
pop
add
and
addr16
aam
cwtl
lret
add
push
repnz
movsl
pop
mov
add
stc
xchg
inc
pop
push
es
inc
inc
inc
xchg
int3
cltd
sub
and
cmpl
ljmp
sbbl
mov
pop
mov
mov
or
mov
sub
mov
xchg
xor
inc
pop
xor
ficoml
dec
iret
sbb
mov
lods
sub
push
jae
jns
push
sub
jmp
ret
notb
dec
and
xchg
jb
cmpb
hlt
lods
movsl
xor
call
loope
push
mov
push
fwait
inc
mov
push
add
ja
popa
cmp
fstpt
aaa
cmp
adc
sub
decl
cltd
pop
frstor
gs
and
jno
into
imul
xchg
dec
jmp
icebp
shr
loop
call
ljmp
add
cmp
mov
out
jb
nop
pop
leave
ja
sti
sbb
iret
out
stos
cli
mov
fcmovne
in
mov
mov
repz
dec
addr16
mov
ljmp
mov
jns
push
inc
or
in
inc
mov
jg
std
adc
insb
repnz
out
je
inc
sub
adc
bound
sbbl
pop
cmpb
and
mov
jne
mov
loope
add
pushf
cmp
push
bnd
jl
jne
pop
cmpb
into
push
mov
xchg
sub
rorb
mov
jne
dec
rcrb
test
pop
add
nop
repnz
pop
icebp
ret
xchg
add
fistpl
sti
add
sbb
mov
sub
pop
mov
pop
pop
pop
addr16
xor
mov
rol
dec
dec
mov
cmp
adc
ret
mov
or
add
bound
jmp
jecxz
dec
aas
inc
mov
and
mov
data16
xchg
jbe
push
pop
fs
jmp
cmpsb
jae
popf
fisttpl
lods
mov
mov
inc
sub
jne
loope
inc
hlt
lock
pop
sbb
cmp
fcompl
inc
rol
sub
rcrb
sub
dec
push
or
add
out
loope
sahf
out
adc
fdivl
in
and
mov
pusha
in
push
add
out
imul
data16
jp
je
setle
cmp
imul
sbb
mov
sarb
and
cmpsb
or
cltd
pushf
outsb
sbb
pop
insb
lret
clc
fadd
fwait
sbb
cld
in
inc
xchg
mov
shrl
fs
pop
movsl
inc
cmp
leave
jp
mov
ret
aad
lret
nop
cmc
inc
inc
addb
push
inc
push
inc
js
icebp
ds
aam
insl
add
push
ds
cmpb
lcall
loope
mov
and
sbb
and
adc
arpl
or
adc
call
jne
sbb
jg
aam
xor
out
cli
das
out
pop
mov
add
mov
test
scas
xchg
cmp
xor
scas
push
popf
movl
push
sbb
repnz
mov
sub
lds
movb
pushf
out
cltd
sub
inc
jns
lret
jo
mov
sarb
bnd
js
ja
push
repz
mov
fmul
je
orl
daa
add
gs
cmp
mov
push
jns
pop
xor
test
pop
mov
out
push
sahf
scas
lea
mov
xor
dec
and
or
or
leave
fnstsw
movsl
je
scas
push
call
adc
pop
adc
pop
cs
adc
jl
out
jge
lods
and
sbb
sbb
add
dec
mov
outsb
bound
or
lret
xchg
les
xchg
push
sub
jnp
lods
inc
adc
jne
je
std
jns
gs
lds
fidivs
sbb
rcl
adc
cwtl
test
ss
push
lcall
add
pop
testl
xchg
fs
outsb
sti
mov
repnz
aas
mov
cmpsb
cmp
daa
jge
jecxz
popa
out
loope
and
cmp
or
into
or
imul
rorb
enter
gs
and
add
mov
xor
shll
or
adc
mov
jo
xchg
adc
fiaddl
lock
ret
fidivrl
sbb
and
test
adc
push
in
jb
adc
or
dec
inc
ficoml
inc
mov
mov
or
pop
sub
or
add
popa
ret
mov
sbb
xor
data16
jb
imul
pop
sub
ficompl
bound
and
lahf
pop
xchg
testb
add
sub
aaa
mov
addl
mov
inc
enter
inc
aaa
push
daa
inc
push
jb
xchg
xchg
adc
push
popf
jp
movsb
pop
cmp
lret
imul
push
daa
arpl
hlt
or
aas
out
cwtl
sarb
outsl
mov
inc
cli
or
in
mov
jl
jle
xor
dec
ss
lds
loopne
movsb
push
inc
scas
mov
mov
dec
mov
push
xor
and
inc
mov
mov
popw
add
and
dec
sti
fs
dec
incb
idiv
and
fwait
enter
xchg
pop
lods
pop
jg
jle
and
mov
cltd
insl
ja
mov
mov
push
inc
jne
mov
andl
jle
xchg
loopne
push
or
fldenv
insb
jl
das
cmpsl
int
lock
testl
int3
es
adc
ret
loop
jno
das
and
cmp
clc
cmp
cmp
mov
sbbl
jns
lcall
sbb
imul
stc
mov
push
stos
pop
push
cmp
xchg
or
cmc
xor
sar
xchg
and
inc
jl
push
mov
mov
int
clc
sub
lahf
sbb
or
test
dec
fs
sar
gs
adc
cld
jp
dec
or
imulb
and
test
sub
pop
mov
cmp
xor
cmp
jg
outsl
popf
sub
mov
shlb
push
in
inc
fidivrl
test
mov
lret
mov
sbb
bnd
mov
test
scas
ljmp
mov
into
jb
dec
sub
js
out
or
inc
mov
ss
sbb
flds
and
jg
cltd
mov
mov
push
fcomps
rorb
push
push
mov
int
fsubl
int3
adc
pop
sbb
gs
in
cmp
mov
stos
mov
sti
sarb
xor
xchg
add
int3
xchg
inc
jae
inc
jmp
jecxz
int
cwtl
push
jecxz
insl
fmuls
inc
jg
mov
mov
cli
push
test
pushf
push
cmp
sbb
addr16
pop
in
dec
out
ret
loop
xchg
out
aad
ss
lahf
inc
std
hlt
sahf
stos
cmc
jg
xchg
mov
inc
rorb
jmp
imul
dec
push
data16
ss
adc
dec
js
adc
mov
mov
clc
jns
dec
in
dec
std
lret
testl
mov
idiv
insb
xchg
add
cwtl
loope
fs
jecxz
push
cmp
xor
push
sbb
pop
inc
shl
arpl
adc
loope
into
cld
imul
insb
lahf
dec
xchg
and
mov
xchg
push
ljmp
loope
pop
loop
add
xchg
mov
mov
jp
mov
inc
jp
adc
cmp
js
jnp
ret
jg
sbb
int
push
xchg
push
sbb
pop
add
in
aad
cwtl
outsl
add
cmpsl
pop
lock
arpl
cmc
xchg
xor
lea
and
cmp
sbb
lcall
mov
shlb
push
lock
stos
shrb
push
push
cmpsl
adc
mov
dec
pop
pop
es
int3
out
lret
mov
sub
mov
aas
inc
fdivs
push
mov
add
pop
jbe
aad
cltd
dec
jno
dec
je
shl
call
or
aaa
ret
movsl
jl
mov
outsl
inc
clc
fdivrs
paddq
adc
sub
dec
push
movsl
jno
sbb
push
cmp
mov
or
dec
cmp
inc
or
mov
fcmovbe
adc
aas
fstpl
add
inc
cli
outsl
ss
call
mov
sub
xor
or
mov
jnp
test
and
inc
mov
cmp
dec
scas
adc
dec
sbb
jnp
addr16
lea
ss
adc
mov
xchg
mov
sete
or
jne
mov
jp
inc
jne
repnz
lea
dec
shll
loopne
enter
cmp
fidivrs
cmpsl
push
stos
add
test
push
out
mov
push
xchg
mov
jp
addb
xchg
sub
sub
xchg
and
addl
pop
mov
jge
xchg
fstpl
dec
inc
imul
jo
cwtl
xchg
lea
jb
mov
and
push
and
mov
sub
xor
jo
fisubrs
dec
jmp
aad
push
jl
fimull
movsb
movsb
int
ret
shrl
adc
adc
jmp
sbb
fadds
test
xchg
jg
jmp
xchg
insl
sbb
daa
sbb
adc
adc
sbb
mov
cmp
sub
pop
in
sbb
je
mov
clc
jno
xlat
sbb
ss
sub
ret
push
add
pop
jo
popa
mov
jp
shr
std
pop
sub
sahf
jb
sbb
inc
rolb
sbb
sbb
xchg
xchg
fcoms
hlt
mov
fbld
sbb
mov
push
pop
mov
dec
inc
cmpsl
push
inc
push
movsb
jns
mov
cmp
lcall
or
mov
add
push
loop
xchg
jb
fstp
jno
lock
repz
jnp
xor
inc
mov
mov
pop
fnsave
into
add
out
roll
scas
call
or
adc
jno
cmpsb
add
in
testl
aad
cmp
adc
inc
leave
xchg
sub
aas
not
icebp
and
add
xchg
xchg
lods
leave
iret
mov
leave
ret
rorb
push
cmpsl
mov
sbb
sub
add
ja
loop
mov
out
jnp
inc
jg
mov
pop
and
pop
inc
xabort
enter
pop
cld
out
dec
sub
add
push
ds
push
xor
push
mov
loop
push
jnp,pt
in
mov
sti
aad
sbb
mov
push
outsb
aas
mov
testb
xchg
xchg
jg
outsl
jo,pt
push
fbld
dec
pop
scas
pop
xor
cmc
pop
jnp
inc
mov
jecxz
stc
jp
mov
jne
cld
push
addr16
and
jb
je
mov
pop
js
stos
inc
add
cmp
and
xchg
outsl
in
sub
pop
mov
jl
adc
lret
int3
mov
cmp
and
xchg
sub
fimuls
aaa
sub
mov
pavgb
push
aaa
call
sub
sahf
mov
or
test
or
cmp
cmpl
sti
lods
pusha
orl
jg
and
push
jbe
dec
mov
adc
dec
testb
jle
imull
imul
icebp
outsl
imul
ret
or
pop
gs
dec
pop
cmp
shll
sbb
mov
loopne
xchg
das
xchg
adc
fistps
aam
adc
sub
adc
insl
std
sti
cmp
sbb
push
cmp
xlat
aad
mov
xchg
ds
sub
jne
imul
adc
cs
sbb
movsl
mov
pop
mov
xchg
xrstors
fmul
idivb
ret
mov
cmp
popf
mov
out
pop
and
cmpsb
mov
dec
push
lahf
addl
daa
das
jo
enter
fcoml
xchg
rcll
adc
into
out
mov
rep
cmc
repz
jae
out
mov
add
xchg
aad
push
and
xchg
or
cmp
add
movsb
loope
lock
or
xor
mov
fs
xchg
and
lret
pop
jbe
imul
jns
jno
aas
fmul
pop
outsb
or
jns
pop
bound
fmuls
mov
push
fcoml
xlat
ret
adc
jp
add
or
sbbl
clc
inc
push
lods
jno
sbb
cmp
sbb
ret
repnz
aad
pop
call
lahf
ja
loope
in
jo
inc
inc
out
adc
lods
mov
popf
roll
enter
xchg
rcl
outsb
dec
out
imul
push
add
jns
testl
mov
dec
or
xchg
push
cmp
sarb
sub
mov
push
adc
lods
jge
dec
test
mov
subb
outsl
pop
cs
ret
bound
dec
inc
pop
daa
or
or
test
or
cmp
fmulp
and
ljmp
pop
pop
es
jp
ja
pusha
pop
mov
xor
and
xchg
or
jmp
or
lret
pop
aas
sbb
bound
fbstp
cli
dec
adcb
aaa
mov
mov
jbe
lods
cli
addr16
jle
fcoms
jg
addr16
jns
mov
gs
insl
call
mov
clc
lock
fiaddl
and
cmp
ja
sbb
ficomps
jp
cli
mov
mov
inc
xchg
scas
xor
ljmp
inc
dec
sar
jmp
mov
pop
ja
push
add
sbb
mov
push
mov
cwtl
lods
aad
nop
repz
addr16
sti
add
or
insl
loopne
sahf
xchg
aad
gs
xchg
push
mov
pop
sub
jl
xor
dec
rorb
sahf
xor
faddp
pop
or
dec
jnp
sahf
sub
fs
les
add
push
adc
cwtl
int3
jg
cs
pop
mov
aas
sub
jo
push
les
test
fildll
mov
push
aam
cmp
sub
xor
sbb
mov
lods
mov
sar
and
push
sbb
mov
or
mov
dec
pop
and
xchg
dec
out
in
icebp
sub
pop
pop
push
add
push
mov
jnp
gs
pushf
jle
mov
mov
xchg
dec
in
mov
push
jg
lds
popf
xor
pop
push
cli
rclb
jmp
shrb
sahf
repnz
test
or
push
xlat
mov
bnd
add
dec
pop
divl
or
inc
outsl
lea
stos
xor
dec
jns
mov
mov
dec
imul
dec
insb
stos
sbb
dec
or
jbe
fildll
mov
popf
xor
fistpl
xchg
aaa
in
rcll
lea
leave
add
xor
add
pusha
mov
jge
xor
out
push
xor
or
repz
mov
or
fwait
and
testl
pop
mov
or
mov
pop
add
inc
shrl
aas
popf
or
aad
push
sub
cmp
movsl
sbb
subl
jne
inc
mov
mov
std
sti
gs
int
jne
add
psubsw
mov
fistps
mov
mov
xlat
movsb
enter
leave
mov
mov
pop
pop
jne
aaa
imul
mov
jmp
fstpt
imul
loop
leave
mov
loopne
inc
mov
mov
mov
and
pop
jle
fcom
or
fcmovu
sbb
sub
and
mov
pop
imul
cmp
sub
fcomp
dec
pushf
mov
int3
nop
mov
bound
adc
insb
and
jnp
xchg
dec
jnp
adc
pop
dec
imul
mov
notb
cmp
and
xor
inc
jmp
mov
out
test
pop
xor
pushf
inc
cmp
sub
add
cmp
rcrl
xchg
cmp
fdivrl
pop
cmp
stos
xor
out
or
mov
jmp
ljmp
scas
cld
mov
pusha
int3
addl
jp
inc
jle
insb
inc
jae
mov
adc
mov
xchg
mov
fisubrl
cwtl
movsb
adc
or
add
sahf
outsb
or
std
sbb
sub
jecxz
mov
or
push
pop
sti
sub
add
in
fisttpl
not
cmp
jne
lock
sti
dec
push
mov
loop
popf
cltd
cmp
mov
mov
iret
push
jno
out
adc
leave
jbe
mov
xchg
xchg
leave
xor
add
cwtl
gs
insb
mov
mov
rcrl
cwtl
cmp
fucomip
mov
pop
loopne
rcll
sbb
mov
jl
sahf
xor
int
mov
pop
sub
mov
pop
xchg
ljmp
rcr
insb
xor
cmc
and
loope
in
imul
gs
add
hlt
push
fnsave
mov
rolb
mov
xchg
mov
ds
mov
jae
pop
bound
cmp
aad
js
int3
inc
push
adc
lock
mov
addr16
das
xor
push
xchg
mov
sar
push
xor
push
lahf
xor
rorl
xchg
sbb
pop
fs
dec
push
fstpt
adc
sti
xchg
ja
mov
adc
lahf
jg
dec
jne
fcomp
xchg
pop
in
lea
pushf
mov
mov
jl
pop
jo
cmp
imul
rcrb
ret
xor
daa
add
and
xchg
push
icebp
jge
pop
pop
in
out
inc
cmpsb
jb
pushf
lret
mov
scas
cmp
jle
mov
inc
outsb
lret
dec
cmp
add
jne
aaa
and
push
mov
mov
xchg
lcall
clc
dec
call
fistl
mov
int3
setp
iret
push
in
cmp
inc
addr16
push
loopne
sub
xor
cwtl
xchg
cmp
mov
xchg
dec
test
sub
pop
lret
int3
in
sbb
orl
daa
xchg
fidivrs
outsb
leave
out
lcall
xlat
or
call
push
push
cwtl
xchg
xchg
xchg
in
jmp
cmpsl
xchg
insl
mov
dec
mov
cli
sub
stc
clc
sub
and
cld
mov
dec
mov
sbb
lcall
cmp
fmuls
leave
es
into
nop
out
mov
and
pop
xchg
and
fmull
or
out
cmp
arpl
pop
pop
sbb
sar
repnz
and
cmp
xchg
cld
ds
mov
imul
adcl
sub
xchg
in
jmp
xlat
xchg
xchg
std
pop
arpl
cmc
cld
testl
leave
jge
inc
aam
sub
inc
mov
or
je
iret
dec
test
cmp
xchg
stc
js
or
test
pop
inc
mov
xor
jne
mov
add
sti
arpl
push
int3
nop
jg
sbb
aaa
mov
fdiv
xor
push
xor
mov
mov
out
jl
or
scas
add
xor
pop
add
lds
imul
and
sahf
mov
out
or
inc
or
fwait
je
icebp
push
out
xchg
mov
mov
ror
pop
jo
sbb
stos
and
rol
push
out
subl
mov
inc
push
cld
mov
bound
ljmp
cmp
push
aas
add
sub
dec
addr16
pushf
push
mov
xor
lahf
pop
fdivrl
push
cld
shll
jns
push
mov
and
addr16
cmpsl
bswap
push
jp
mov
es
sbb
pop
and
mov
push
fidivs
out
jp
cmpb
jmp
mov
jmp
mov
sub
add
adc
int
fsubrs
xor
adcl
push
sti
testb
and
mov
cli
fs
push
inc
movsb
xor
fwait
mov
xor
movb
loope
mov
gs
jmp
pop
xor
movsl
pop
jne
mov
daa
and
jne
cmpsl
pop
adc
dec
hlt
mov
jno
pop
or
out
xor
aaa
aad
jo
divb
neg
push
jg
and
adc
aad
mov
dec
push
out
push
adc
add
mov
aad
aam
cmp
push
test
ljmp
ret
adc
cmp
scas
cmp
roll
push
loopne
fsubs
jb
jge
mov
pushf
dec
xchg
fdivl
xor
into
ret
mov
in
push
inc
sbb
mov
scas
ret
dec
xor
mov
add
pop
stc
jmp
adc
iret
inc
and
jbe
jmp
or
movl
cmp
sub
add
jp
cli
push
add
into
aaa
add
lds
cmc
cltd
loope
push
enter
pop
sarl
and
aam
inc
mov
aad
mov
pop
das
adc
mov
jnp
sub
lock
or
in
outsl
mov
push
mov
jmp
decb
push
jo
int
ljmp
pop
repz
inc
adc
subl
cmp
ret
cli
fisubrs
repz
add
lcall
push
mov
cmp
sti
std
subb
pop
or
fwait
inc
cwtl
xchg
push
push
adc
cmp
sbb
fimull
leave
cmp
out
arpl
ret
test
jecxz
push
and
std
mov
div
pop
pushf
ja
loop
inc
insl
cmp
mov
adc
outsb
xchg
sahf
ja
into
repnz
mov
and
mov
inc
mov
enter
push
mov
jecxz
das
push
and
aas
adc
push
in
jle
xchg
jle
dec
cld
adc
setg
loope
stc
mov
adc
xchg
jle
xor
and
jns
push
arpl
mov
int3
stos
out
jg
xchg
cmp
mov
and
rolb
outsb
outsl
adc
add
jg
outsl
ret
mov
imul
inc
jmp
lahf
call
xchg
mov
js
icebp
les
ret
scas
pop
rolb
xor
xor
inc
testl
sti
xchg
mov
xchg
test
cmp
cli
inc
sbb
popf
flds
cli
add
rclb
fstpl
xlat
std
sbb
xor
rcr
sub
insl
add
out
in
popa
sahf
sbb
push
es
mov
mov
push
aam
addr16
dec
add
and
js
ret
push
jb
out
jge
fimuls
scas
adc
arpl
imul
lds
ds
mov
mov
movsl
xor
push
jg
out
dec
jno
movsl
in
add
xchg
and
pop
lock
dec
pop
lahf
outsl
adc
mov
sub
out
aas
daa
out
lock
test
sbb
fadds
jne
sbb
loope
sub
imul
test
out
hlt
popa
popa
nop
ficoml
js
push
or
mov
pop
cmpsb
ss
in
loopne
mov
fwait
test
xchg
ffree
mov
push
fcmovbe
xchg
sti
jp
stc
mov
popa
pushf
fstps
xor
imul
lcall
and
add
sub
cmpsl
mov
notb
inc
and
ljmp
adc
or
fwait
cmp
jp
jl
pop
pop
in
mov
or
push
and
pop
ret
imul
outsl
shrl
popf
cmp
test
mov
mov
rcrb
pushf
pop
outsl
add
cmpsb
notl
jno
push
out
pop
fisttps
mov
iret
insl
adc
into
jbe
out
orl
and
test
mov
aas
lea
in
cmp
test
xchg
push
movsb
fbld
mov
icebp
push
inc
popa
xchg
sub
mov
and
subl
rclb
sub
rcl
jo
mov
pop
pop
push
fcmovb
add
or
push
inc
jg
sub
ret
push
ret
xchg
mov
insl
and
and
mov
divl
lock
daa
lret
or
mov
jno
jg
mov
movsl
fwait
lods
in
xor
int
jp
in
push
xchg
xchg
mov
jmp
and
imul
dec
push
int
in
shr
rcrb
inc
xor
scas
jp
nop
out
sub
lahf
test
arpl
das
push
popf
push
fnstenv
mov
ror
mov
sbb
mov
into
xchg
aad
xor
sub
or
int3
xchg
cmp
pop
xor
lret
cmp
xchg
or
cld
in
mov
test
mov
mov
aam
icebp
adcb
push
repnz
jb
filds
outsb
in
sti
in
pop
pop
cmp
xor
fisttpl
ret
push
ret
push
lods
out
popa
sub
fcmovb
outsl
fstpt
cmpsl
add
jecxz
push
adc
arpl
mov
xchg
xchg
cmpb
mov
arpl
cmp
cmp
loopne
lret
xchg
mov
adc
icebp
xchg
loop
stos
and
ret
arpl
outsl
adc
rolb
adc
adc
fucom
xchg
cwtl
cmp
iret
aam
mov
cmp
push
dec
push
jo
mov
test
push
mov
cmp
es
or
inc
jge
sbb
dec
or
in
jl
jecxz
pop
sar
pop
and
adc
rcll
push
jb
mov
inc
mov
dec
adc
insl
xlat
cmpsl
sub
push
inc
sahf
add
js
and
xor
rcll
sahf
mov
xchg
mov
movsl
lret
mov
mov
cltd
enter
loop
xchg
cmp
popa
jmp
movsb
into
xchg
fcoms
inc
cs
pop
adc
movb
mov
add
inc
add
fisttps
xchg
imul
dec
mov
mov
enter
adc
lahf
rcrb
andb
das
inc
sub
pop
icebp
mov
cs
xchg
xchg
pop
pop
sbb
xorl
imul
mov
cwtl
or
mov
jge
jnp
dec
inc
mov
int3
xlat
or
inc
sbb
mov
dec
mov
lods
jmp
push
icebp
ja
pop
fwait
aad
cmp
pop
mov
inc
xchg
xor
shrl
mov
dec
call
ja
mov
std
push
popa
adc
lods
or
mov
jo
arpl
popf
inc
shrb
adc
out
pop
sbbb
cmc
test
mov
mov
jns
sub
dec
sub
nop
aaa
inc
loope
mov
negl
add
adcl
sbb
std
gs
in
sbb
adc
out
bound
fidivl
cmp
add
cmp
mov
mov
stc
xor
dec
sarl
rcrl
inc
xchg
repz
lret
out
xchg
mov
jne
scas
cmpb
fistpll
out
insb
add
cmp
dec
inc
sub
stos
insl
adc
mov
insl
add
mov
mov
scas
xor
leave
sbb
pop
out
xchg
loopne
pop
xchg
push
inc
jge
push
jle
mov
sub
xchg
lods
inc
dec
adc
or
push
mov
mov
notl
rcrl
add
imul
bound
add
or
sub
cmp
push
out
pinsrw
je
inc
pushf
data16
lock
icebp
jne
mov
mov
movsl
sub
jno
inc
xorb
iret
outsl
mov
cmpsb
inc
xor
push
dec
ss
cmp
test
rcrb
inc
fnstcw
ficoml
das
enter
movsl
scas
cld
test
daa
mov
cwtl
dec
mov
add
cmp
mov
fiadds
adc
cmp
js
movsl
in
adc
orb
sub
jmp
clc
dec
addl
sub
fsts
sbb
roll
jmp
add
or
iret
in
lods
fidivrl
into
repz
adc
push
xchg
cmp
into
stc
mov
cld
push
rolb
mov
pushf
movsl
sbb
sbb
push
loopne
add
mov
pop
and
dec
push
out
cmp
mov
dec
and
das
fdivrs
xchg
jecxz
stos
mov
pop
mov
push
setns
lods
call
pusha
in
addb
cld
repz
and
mov
ret
or
inc
xor
scas
xchg
pop
sbb
insl
ret
test
cmp
int
push
mov
movb
xor
pop
mov
ja
data16
mov
mov
scas
fdivrl
pop
xor
sbb
sbb
in
add
shll
sub
call
out
jp
push
mov
mov
scas
movsl
add
mov
mov
lods
out
jbe
xor
xor
mov
pop
loope
das
aas
or
loope
shlb
out
rolb
pop
in
pushf
les
imul
or
push
inc
inc
dec
js
xor
std
and
scas
pop
sbb
jle
mov
cmp
push
std
aaa
push
jmp
sahf
out
jg
mov
inc
shl
out
lods
cltd
in
fsub
mov
fs
out
mov
mov
jb
sub
xor
mov
xchg
inc
lods
ds
xchg
sbb
sub
jo
jmp
jae
ljmp
out
lds
pop
loopne
movsl
push
aaa
sub
pop
rcrb
dec
stos
add
outsb
push
push
stc
cmc
inc
add
stc
mov
cmp
inc
ficompl
imul
cmp
jge
loope
cld
nop
cmc
dec
js
inc
xchg
scas
cmp
pop
imul
mov
pusha
mov
rep
aas
xchg
cli
cmp
jbe
loop
fildl
push
sarl
cmp
movsl
dec
iret
aad
cmp
xchg
out
xchg
subl
mov
sub
jnp
insl
addr16
orb
lock
leave
ret
ja
push
jns
cmp
inc
sbb
adc
and
sub
imul
push
aas
xchg
icebp
inc
adc
pop
pop
sbb
inc
mov
xchg
fmulp
dec
ss
mov
dec
aad
xchg
inc
pop
add
push
int
inc
mov
dec
into
add
push
cwtl
pop
enter
add
jne
add
ret
mov
push
add
lret
sbb
popf
push
jp
outsl
mov
pop
mov
repnz
dec
rcrb
dec
lods
pop
sbb
push
xchg
pop
and
jg
pushf
mov
rcll
sbb
jmp
lods
fildll
std
cmp
xor
int3
cmpsb
mov
inc
lods
into
pop
in
aam
mov
add
dec
je
lds
push
out
push
lock
scas
push
sub
and
ret
xor
jb
cmc
lcall
adc
fs
ret
lret
inc
cmpsb
xorl
lret
cmpb
cwtl
mov
aas
imul
fisttpll
nop
push
in
aam
or
out
sbb
add
lret
enter
mov
pop
sbb
jle
jecxz
sti
call
xchg
out
jb
fwait
jne
pop
jge
xor
and
data16
ret
sub
in
mov
inc
sub
inc
dec
sub
push
mov
out
arpl
loope,pt
cmpps
mov
repz
push
inc
iret
out
push
xchg
inc
xchg
repz
je
fs
push
ja
shrl
call
dec
cwtl
test
mov
mov
aad
inc
imul
enter
push
push
add
arpl
insl
push
adc
lahf
jns
inc
mov
adc
pmulhuw
shl
loopne
dec
sub
cmp
dec
xchg
dec
pop
lahf
pop
into
cmp
sbb
xchg
inc
and
push
push
popa
jl
pop
sub
sub
hlt
lret
addr16
and
xor
xor
ds
dec
stc
and
mov
xor
jne
mov
addb
add
mov
adc
test
add
cmpsl
sbb
adc
movsl
mov
fstpl
push
andb
lods
rolb
xchg
cmp
lods
ja
xchg
mov
cmp
ss
jno
ljmp
adc
js
enter
mov
xor
je
stc
andb
or
imul
adc
cli
or
call
pop
pop
pop
stos
cmpsb
push
push
test
ds
jecxz
hlt
fnsave
xor
inc
mov
pop
inc
sbb
call
dec
fcomps
cmp
push
inc
lock
jecxz
shrb
idivl
lahf
ljmp
arpl
add
scas
cmp
movsl
int3
cmp
call
into
jbe
mov
add
and
mov
xchg
lcall
mov
fisubs
enter
cmp
lcall
cmp
xchg
lret
mov
rorl
xchg
dec
add
sub
mov
in
sub
sub
cwtl
push
rcr
push
pop
jmp
clc
imul
test
scas
scas
or
clc
clc
outsl
xchg
scas
dec
in
fsts
mov
fs
inc
decl
cwtl
inc
xchg
mov
fldt
push
ret
in
test
lret
cmp
lock
xchg
mov
xor
insb
in
cmp
aas
xor
xchg
std
popf
loope
aam
aas
loop
pop
icebp
push
repz
shl
icebp
in
dec
and
xor
ja
jo
mov
jne
dec
add
dec
mov
mov
push
push
int3
lea
enter
and
test
add
mov
sub
lock
fucomp
into
inc
xchg
mov
repnz
xor
sub
and
in
cmp
lret
xchg
ljmp
xor
loopne
inc
adc
jl
mov
mov
adc
out
dec
xor
fdivl
movsb
cmc
icebp
enter
mov
jb
push
push
cmp
adc
out
xchg
insl
mov
test
bound
les
add
dec
xlat
jl
sbb
dec
loope
fnstenv
jb
jo
xchg
loop
movsb
loope
data16
lret
sbb
xchg
dec
sbb
push
mov
xorb
fnstenv
and
xchg
mov
cmp
dec
jns
mov
sub
scas
sub
cmpsb
add
mov
aad
cmp
pop
test
or
sub
jae
and
sbb
mov
sbb
inc
jo
xlat
out
xchg
push
pop
jo
andb
sub
xchg
cld
add
push
pop
pop
and
orb
aas
rorb
add
mov
std
push
dec
movsl
movsl
xor
loopne
fsts
rcrb
mov
nop
jb
pop
ret
subl
iret
dec
xor
jg
xor
sbb
test
adc
sbb
pop
adc
xchg
test
push
jno
shrl
xchg
pop
dec
jo
jo
sbb
add
movb
jp
cvtpi2ps
mov
lods
lock
out
imul
lahf
cmpsb
imul
loope
cwtl
push
es
xchg
sub
jp
pusha
xor
out
mov
and
sub
sbb
jno
push
add
push
xchg
sub
jbe
dec
scas
dec
mov
out
xor
push
jl
inc
mov
mov
cmp
sub
lret
stc
push
test
pop
pusha
mov
jge
sbb
jp
inc
jle
jne
xchg
popf
sbb
adc
or
frstor
fdivl
xchg
das
sub
jge
jo
cvtps2pd
data16
push
jb
cmp
fs
iret
fists
mov
jg
orl
xchg
aam
pop
mov
push
add
jmp
into
mov
cmc
sbb
jbe
and
mov
movsl
test
mov
sarl
pop
cmp
dec
js
fwait
dec
inc
push
cmp
icebp
lods
sub
int3
fstl
notb
push
mov
cld
repz
in
push
and
movsl
pop
sub
sbb
icebp
sti
out
cmp
lods
sub
mov
imul
pop
loop
pop
adc
out
int3
in
pop
jno
filds
dec
bound
test
xchg
test
testl
gs
and
repz
sbb
std
cmpsb
adc
dec
pop
ds
shlb
fbld
and
imul
and
xchg
out
pop
outsb
mov
push
lock
jne
sbb
and
sub
mov
popf
stc
jg
sub
xchg
mov
or
cmp
pop
addb
adc
mov
jns
pop
fidivrl
inc
popf
jns
clc
inc
pop
adc
scas
xchg
xchg
movsl
out
sti
cmp
sub
cmp
movsl
mov
and
and
mov
cmp
cmp
lahf
loope
jle
int3
clc
arpl
lret
mov
outsl
leave
xchg
pop
dec
pop
dec
jnp
fcmovu
je
dec
leave
cmp
subb
nop
std
nop
or
mov
test
ljmp
pop
rorl
outsl
add
jge
mov
bound
or
push
cmp
test
sub
inc
jnp
nop
mov
jnp
lds
adc
addr16
add
outsb
shll
xchg
or
push
xchg
dec
cmp
sbb
xor
dec
pop
fdivrl
xor
iret
cmpb
cmp
pushf
jecxz
push
arpl
and
xor
repnz
xor
test
xchg
mov
ret
jne
jl
js
or
shlb
lret
jb
pop
shrb
mov
cltd
movsb
fidivrl
mov
xor
jl
fsubl
jmp
inc
imul
scas
or
repz
lods
mov
stc
dec
cmpsb
and
adc
and
add
cli
jg
sub
xor
xchg
daa
int
inc
pop
push
test
ficoml
mov
pop
popf
cmc
cmc
loopne
data16
mov
mov
icebp
fidivl
sti
adc
jmp
negl
adc
push
or
xchg
mov
cwtl
push
int3
mov
cs
pop
aas
cs
xchg
icebp
popf
lahf
dec
push
mov
lret
mov
ss
or
out
pop
idivb
out
push
pop
sub
leave
cs
jne
push
xor
iret
push
add
xor
out
inc
add
mov
faddl
mov
inc
push
lcall
stc
push
pop
push
dec
pop
ljmp
mov
inc
sub
or
sub
add
xor
js
and
pushf
sti
xorl
repnz
icebp
cwtl
sbb
imul
aam
shlb
lods
sarb
popf
dec
sbb
mov
sbb
mov
add
ljmp
jl
jmp
push
push
inc
bound
movsb
and
int3
adc
sti
add
adc
mov
inc
test
loopne
data16
in
cmp
ss
cwtl
imul
jle
int
cld
aaa
and
test
lods
jb
xchg
sub
in
mov
out
pop
outsl
push
pop
dec
mov
inc
mov
cmp
popf
je,pn
hlt
out
rclb
mov
dec
and
inc
inc
mov
pop
andl
cwtl
into
loop
je
adc
mov
add
or
xor
mov
adc
mov
movsb
cmp
adc
pusha
dec
dec
or
arpl
pop
or
sti
push
push
mov
fwait
sti
sbb
out
jle
jo
push
and
sbb
clc
mov
xchg
mov
push
push
jo
sub
push
sbb
sbb
enter
dec
xor
repnz
push
iret
xchg
jle
adc
outsl
iret
push
inc
das
mov
in
clc
jo
rol
dec
and
aas
das
ret
xchg
cmpsb
adc
push
lcall
arpl
mov
add
fnstenv
loop
cs
pop
notb
sub
dec
movsl
push
dec
xchg
movsb
loope
add
insl
cmpsb
mov
loop
and
add
mov
jecxz
movsb
fmuls
jmp
loopne
lock
xchg
push
add
into
mov
lret
fisubl
pop
add
push
jle
loopne
inc
fs
cmpb
xor
xor
cld
adc
pop
jae
insb
or
adc
mov
and
cmpsl
push
jge
mov
mov
fimull
pop
dec
ret
pop
mov
pop
mov
mov
xor
xor
lret
jle
fimuls
xor
push
adc
test
andl
daa
insl
dec
ljmp
pop
popf
jns
sub
cmpsb
pop
fisubl
jg
push
jl
lods
pop
jmp
popa
lods
gs
fisttpll
pop
fwait
jae
jnp
and
and
pushf
fstp
mov
fdivrp
pop
sbb
dec
jl
inc
out
pop
jge
sarb
mov
pop
and
lahf
inc
andl
mov
jb
dec
xchg
mov
mov
push
cmpsl
test
decl
mov
scas
and
push
mov
ja
push
adc
xchg
ret
push
sub
imul
mov
and
cli
out
fucom
or
xorb
test
das
add
mov
cmpsl
icebp
int
jge
inc
pop
cmp
push
mov
aaa
inc
stos
rcrl
mov
ja
repz
jae
fsubs
or
into
mov
inc
or
xchg
jle
loop
xchg
repz
ss
pop
pop
xlat
mov
gs
test
fwait
dec
cmpsb
mov
enter
lret
in
cmpsb
test
inc
add
faddl
pusha
scas
pop
inc
lds
int3
sub
bound
xchg
pop
xchg
into
push
cmp
or
fwait
pop
adc
inc
inc
popa
dec
into
jecxz
loope
dec
dec
push
push
insl
mov
sbb
movsb
jecxz
add
mov
sub
iret
daa
outsl
scas
lret
js
xchg
mov
adc
sbb
fwait
push
add
mov
or
je
pop
movsl
into
shrl
repnz
in
sub
mov
clc
cltd
movsb
and
divb
shlb
dec
adc
sahf
mov
sbb
cmp
xlat
das
xor
add
push
fsubrs
pop
cmp
xor
dec
inc
pop
out
cs
and
and
fimull
sbb
jmp
or
in
rcrl
adc
sub
lds
mov
cli
push
jp
incl
jmp
push
mov
or
or
sub
testl
popf
mov
pop
int3
stc
push
add
lock
push
adc
or
shl
fwait
imul
movsl
mov
mov
jo
mov
cld
add
mov
xor
gs
sbb
loop
mov
xor
adc
jle
je
cmp
lcall
je
mov
sti
xor
inc
pop
lods
inc
es
lds
aam
daa
mov
pop
xchg
xchg
jbe
jae
pusha
loope
ja
push
inc
cmp
fwait
push
mov
sbb
push
daa
push
or
adc
add
ds
bound
test
dec
fists
pushf
add
push
sbb
add
or
mov
adc
sti
aad
jb
xchg
test
xchg
enter
outsb
push
mov
sub
inc
dec
push
add
testl
cmp
movsb
inc
test
rorb
jne
jge
dec
mov
sub
sub
cmp
jns
clc
fs
or
pop
test
into
movsb
cli
cmp
inc
shrb
jns
xor
aaa
dec
add
xchg
mov
int3
mov
test
pop
iret
jne
xor
mov
add
aad
pcmpgtd
scas
jne
idivb
clc
ja
cmpsb
inc
daa
and
jns
and
ljmp
lods
push
adc
mov
shlb
aad
mov
sbb
jns
cmp
inc
mov
sarb
mov
jae
and
add
faddp
mov
insb
stos
stos
call
add
inc
add
icebp
push
repz
or
jl
dec
stos
in
test
push
out
in
mov
gs
cmp
xchg
cmp
mov
lods
push
jp
mov
push
cld
pop
push
mov
cwtl
imul
inc
cmc
mov
jl
jo
pop
iret
pop
jno
fdivrs
enter
push
pop
or
push
mov
dec
popa
push
cltd
mov
xor
mov
dec
xor
call
and
mov
dec
push
jbe
or
int
adc
pop
sub
inc
pop
daa
dec
push
push
scas
pop
ja
into
stc
mov
push
lahf
int3
add
pop
fsts
sbb
rolb
mov
das
rcll
popa
add
cmp
xchg
dec
in
fwait
shlb
cs
outsl
mov
leave
cmpl
andb
mov
sub
dec
adc
out
push
or
pop
add
add
test
mov
scas
push
sbb
stc
add
call
lock
mov
push
pop
push
test
xchg
add
lds
or
push
dec
ret
loopne
dec
aas
inc
aam
add
xchg
fildll
ret
mov
adc
popf
sub
clc
mov
pop
jmp
les
jp
or
fisttps
xor
pop
enter
push
cmpsl
mov
movsb
scas
fwait
ja
fstpt
dec
inc
add
cs
jne
andb
aam
sbb
mov
inc
mov
cwtl
repz
dec
sub
mov
outsl
cs
fisubrl
fists
pop
xchg
sub
loop
or
stos
lret
fidivrl
sbb
lcall
ficoml
jle
loop
aas
sbb
outsl
sbb
stos
mov
test
int3
cmp
jb
div
in
dec
push
xlat
ljmp
push
outsb
xchg
sbb
into
cmp
push
adc
loop
out
sbb
sbb
push
cmpsb
mov
lcall
sub
outsb
inc
jmp
cli
add
xor
inc
cld
xchg
and
adc
pop
int
xor
leave
scas
jns
add
xor
add
lods
add
mov
mov
and
push
repz
mov
fsubrl
mov
or
outsl
leave
cli
pop
jb
mov
in
jge
scas
jp
imul
or
pop
fisubrs
jb
mov
or
hlt
js
les
shll
sbb
adc
pushf
loop
mov
pop
xchg
mov
pop
push
call
push
sahf
cld
nop
movsb
outsl
nop
pop
push
push
fsubrs
test
push
aam
pop
movsl
add
aaa
or
in
ret
xchg
pop
hlt
mov
daa
lcall
int
aaa
adc
add
add
imul
add
inc
enter
fdivrs
and
imul
out
mov
insb
in
mov
test
fcomp
pusha
jae
sbb
stos
inc
lcall
scas
pop
je
lahf
aaa
popf
xchg
xorl
mov
loop
lds
ds
sbb
mov
add
in
imul
in
mov
shll
jb
inc
stos
pop
je
pop
aam
dec
inc
mov
xchg
fiaddl
xor
leave
loop
shlb
push
das
lcall
push
cmc
scas
gs
cmp
test
pop
test
aad
push
mov
xlat
sar
nop
ds
pusha
push
add
pop
mov
in
scas
push
stos
xor
popa
cmpsb
adc
das
adc
fstl
inc
mov
push
int
dec
sub
xor
shl
jge
int3
ljmp
aas
movsl
je
imul
sbb
mov
mov
fistpll
add
jle
xor
dec
fs
gs
je
push
insb
aad
cltd
add
xchg
mov
push
sarl
fisubl
jnp
lcall
lods
jo
loope
jo
or
in
sbb
add
push
jnp
add
pop
jbe
fnsave
shlb
movsl
inc
lock
jg
add
in
in
fsubr
add
dec
fdivs
test
je
sub
fidivrs
jae
insl
shld
mov
out
cmp
bswap
in
outsl
aad
and
ret
jbe
xchg
jns
add
mov
xor
mov
jb
pop
mov
push
mov
es
cmp
inc
xchg
xchg
push
and
mov
icebp
fcompl
lea
lret
leave
xchg
inc
xor
fcomip
and
arpl
adc
push
inc
xor
sub
out
test
xchg
iret
sub
pushf
jmp
sub
dec
jo
int
test
pop
inc
jae
jmp
jp
outsb
sbb
imul
xchg
jnp
sub
xchg
sysenter
mov
ror
lock
jle
xchg
shlb
lods
loope
mov
into
mov
xor
adc
inc
int
add
add
xor
pop
leave
add
push
mov
cmp
cmp
sahf
bsf
fs
jg
mov
jle
inc
sub
int3
fsubrs
into
dec
stos
das
fimull
xor
cmp
ss
shrb
xor
fsubrs
iret
popa
enter
aaa
js
cmpsb
mov
arpl
das
enter
mov
inc
or
lods
orl
push
sbb
call
mov
or
adc
xchg
pop
and
mov
sub
inc
dec
jecxz
ficompl
jbe
and
divb
push
mov
adc
sbb
push
dec
loopne
mov
pop
popf
xor
fstps
rcrb
je
hlt
mov
inc
clc
dec
int3
leave
push
hlt
mov
ficoml
mov
call
pop
js
loop
fdivrp
imul
call
pushf
mov
repz
add
inc
adc
mov
push
xorl
popf
mov
fstpl
stc
stos
mov
pop
daa
lea
imul
inc
icebp
and
mov
mov
push
mov
ljmp
je
sbb
mov
xchg
pushf
lcallw
aas
xor
xor
push
and
jecxz
jmp
pusha
mov
jecxz
mov
das
pop
add
dec
loope
pop
lret
xchg
rol
repz
out
xchg
data16
inc
add
test
mov
xor
xchg
sbb
mov
popf
inc
push
mov
mov
ret
pushf
rcll
adc
shlb
cmp
xchg
arpl
insl
sbb
mov
subb
stc
sti
push
sbb
enter
cmc
cmp
add
loope
pop
add
in
inc
or
dec
jb
shlb
js
sub
lcall
popf
in
dec
iret
jecxz
shr
xchg
pop
fisttps
insl
mov
ljmp
icebp
out
mov
and
mov
mov
xchg
dec
divl
add
jg
xor
adc
mov
fisubs
pushf
cmp
stc
xchg
fxam
in
lea
push
sub
jle
jle
mov
fidivl
push
lret
and
xchg
lret
adc
and
xchg
mov
jb
push
aad
cmpps
jo
add
pop
mov
mov
fs
dec
pop
test
cs
mov
xchg
push
jecxz,pn
test
mov
push
pop
jl
sbb
jns
xchg
fbld
cmp
inc
jmp
pop
xchg
cltd
dec
mov
mov
fldt
and
xchg
cmpb
shrl
fdivrl
sahf
mov
fnsave
mov
call
aam
jmp
mov
mov
movsl
call
int3
mov
test
dec
iret
mov
cmp
repz
jg
movsl
xor
pop
cvtpi2ps
icebp
lret
xchg
sbb
out
cltd
insb
and
mov
repz
and
nop
push
and
push
add
xchg
dec
cmp
sub
mov
mov
ja
repz
stos
push
scas
insb
test
test
xor
ret
dec
insb
mov
sub
scas
mov
add
adc
cs
movsb
jecxz
add
adc
stos
cltd
pop
pop
fdivs
cmp
dec
popf
xor
rcrb
out
push
lods
and
test
dec
cli
and
and
cmpl
pop
inc
xchg
in
sbb
jecxz
enter
mov
jb
sub
repz
pop
cld
mov
and
mov
shl
sahf
nop
iret
jmp
or
mov
mov
push
pop
and
add
call
call
ja
lods
repnz
test
mov
or
popf
xchg
push
pop
cmp
test
dec
jbe
movsl
jno
aas
pop
lods
add
push
mov
pop
add
jmp
loop
test
fwait
jb
into
bound
ret
ljmp
push
sub
xchg
js
loop
inc
enter
cmp
xor
ja
dec
adc
jg
rcll
pop
or
ja
daa
xchg
xchg
and
push
add
lods
jbe
fcmovb
test
fwait
dec
add
pop
filds
mov
loop
and
mov
test
fisttpl
das
xchg
popa
inc
popf
mov
adc
ds
cmp
repz
mov
mov
sahf
and
lret
sub
jp
rep
in
addr16
fdivrl
adc
push
cmpsl
add
scas
cmp
dec
pop
mov
out
mov
mov
int
pushfw
push
jns
push
adc
jns
inc
jmp
imul
mov
push
sbbb
cmp
push
jg
cmc
dec
push
outsl
sub
nop
mov
popa
out
mov
mov
dec
jecxz
sub
add
add
jne
pop
dec
cmp
hlt
icebp
mov
xor
jmp
or
pop
jl
mov
and
lds
cld
scas
xor
jg
add
popa
decl
test
shr
cli
mov
xchg
sub
sbb
loopne
jge
lea
popf
loop
roll
pop
std
ds
enter
xlat
add
dec
and
sbb
sub
lock
fistpl
adc
imul
dec
mov
int
mov
enter
iret
mov
jne
lcall
out
xchg
mov
in
scas
mov
cmp
pop
insl
jmp
ret
inc
jo
mov
or
lret
pushf
iret
xchg
add
insl
arpl
or
cmc
test
cld
xchg
mov
aaa
mov
fwait
mov
popa
leave
repz
lret
mov
jmp
jo
cmp
out
pop
insb
adc
mov
cmp
test
andl
pop
cmc
ret
fdivrl
cmp
ficoms
test
mov
xorl
pop
dec
jp
xchg
ja
pop
inc
and
sarb
mov
dec
xor
mov
pop
push
cltd
mov
adc
pop
movsl
mov
or
test
jecxz
andb
and
xchg
or
or
mov
jb
rcr
or
setl
pop
mov
and
fistps
sbb
stc
xor
push
test
fdivr
adc
push
add
or
lea
subb
and
in
arpl
mov
enter
xchg
xchg
push
or
adcl
lea
mov
test
sarl
movsb
rol
push
cmpsb
dec
cld
sbb
adc
in
test
push
out
jle
sub
xchg
push
or
and
popf
sbb
or
add
mov
sbb
sub
cmp
mov
cmpl
js
lret
movw
pusha
jp
or
popa
jo
dec
mov
inc
aaa
aaa
fdivrs
add
sub
adc
push
js
inc
jbe
clc
je
xchg
mov
loopne
xor
andl
addr16
or
adc
pop
cwtl
push
mov
daa
add
mov
sub
sti
aam
add
repnz
mov
xchg
insl
push
dec
fmull
pusha
cmpsl
jno
rolb
cltd
rclb
and
es
test
loop
sbb
scas
fisttpll
mov
addr16
fistl
lds
outsb
xchg
popa
leave
andb
js
std
popf
lods
dec
mov
cmp
xor
insb
sbb
sbb
adc
loope
push
and
jl
aaa
jae
lock
and
jg
cmp
pmaxub
push
fs
xchg
push
rep
dec
adc
loope
ficomps
movsl
and
and
movsb
xor
and
jl
mov
testb
nop
xchg
adc
cwtl
mov
inc
cmp
xor
loopne
cmpl
xor
adc
gs
imul
sbb
xor
and
in
out
mov
mov
popa
ret
popa
fs
pop
lahf
pushf
sbb
mov
or
mov
enter
jne
imull
push
scas
mov
push
fbld
dec
scas
xor
in
ljmp
and
repz
xchg
pop
jge
xchg
jge
push
xchg
movsb
inc
or
xor
cmpsb
cmp
test
iret
xor
je
int3
negb
rol
inc
sub
add
pop
aad
int3
lea
scas
pushaw
mov
push
mov
dec
sarl
ljmp
add
inc
mov
mov
jg
ljmp
imul
and
cs
push
and
xor
add
sub
mov
push
lret
mov
mov
ss
cli
jp
jae
cmc
xchg
mov
inc
adc
aad
adcb
jle
pminub
mov
lods
push
mov
aam
push
dec
inc
xchg
push
mov
shlb
and
inc
lcall
dec
mov
jno
inc
mov
cld
outsb
in
pop
lea
aas
xor
fisubl
or
scas
inc
add
push
jno
mull
sub
stos
or
mov
push
outsl
clc
fcompl
repnz
xchg
xor
gs
xchg
mov
fdivs
aam
add
outsl
or
mov
mov
xchg
rcll
sbb
jecxz
mov
sbb
push
addl
addl
xlat
nop
inc
mov
cmpb
cmpsb
dec
clc
jns
pop
add
mov
pushf
inc
lea
les
xor
jmp
or
sahf
rcrl
push
enter
or
mov
clc
jbe
or
push
test
insb
sub
or
js
add
gs
repnz
sbb
sub
rcrl
push
and
cmp
mov
xor
add
cmp
mov
rcrl
lds
popa
dec
ret
inc
cli
das
push
shlb
arpl
xchg
adc
inc
movsl
es
xor
mov
fisttpl
cmp
mov
pop
sti
loopne
cmp
cmp
ss
shrb
hlt
push
into
xchg
or
inc
mov
mov
es
out
repnz
scas
ds
ret
test
fdivs
mov
and
imul
mov
lret
fwait
test
dec
mov
mov
add
scas
ja
arpl
push
and
mov
mov
inc
ljmp
adc
dec
movsl
pop
cs
stos
dec
mov
jns
push
jns
data16
aas
or
and
out
jns
mov
leave
pop
mov
pop
arpl
fwait
or
shlb
pop
fdivrl
fiadds
lock
pop
stos
jmp
sub
sub
sti
sbb
or
int3
test
int
and
push
pop
mov
adc
lods
shll
in
dec
pop
out
mov
call
das
adcb
cli
in
sbb
stos
adc
roll
push
mov
xchg
cmp
mov
movsl
call
jmp
out
pop
aas
mov
lods
je
mov
xorb
jb
jne
mov
cmp
mov
and
aas
int
sbb
jbe
gs
cmp
mov
mov
xchg
or
jbe
mulb
adcb
push
lret
add
cmp
mov
inc
push
int3
cltd
add
push
pop
mov
mov
mov
mov
rorb
scas
xchg
sbb
call
ret
pop
mov
dec
sbb
gs
or
inc
fidivrs
jbe
jl
mov
in
in
mov
adc
mov
ret
lods
addb
jno
ljmp
xchg
push
roll
sahf
imul
aad
repnz
gs
popa
imul
mul
test
inc
push
cmp
in
inc
pushf
aaa
arpl
sti
pop
and
imul
stos
ret
jno
cmpl
add
aas
pushf
push
lretw
lods
aaa
fwait
jo
cmovp
enter
cli
mov
and
adc
pop
dec
lods
jle
push
mov
sbb
cmc
dec
sti
pop
jl
stc
cmc
sbb
xor
mov
js
cmc
test
xorb
popf
add
xor
jle
movsb
fildll
in
mov
scas
cmpsl
insl
mov
xchg
loop
stos
lods
or
and
and
mov
or
aas
sbb
cltd
or
jo
jno
in
iret
mov
inc
or
jp
andb
fisubs
scas
jbe
inc
hlt
out
dec
ljmp
xor
out
stos
pop
cmpb
xchg
sarl
daa
mov
mov
movsb
cmp
pop
rcl
and
mov
nop
pop
inc
adc
mov
mov
dec
or
and
mov
lods
outsb
cmp
test
jle
pusha
enter
imull
add
mov
inc
imul
insb
stos
sub
push
mov
mov
inc
xchg
jne
stos
pop
mov
js
jecxz
or
enter
cmc
pop
test
aad
dec
les
jbe
lods
cmp
nop
xor
jg
js
adc
add
in
jle
leave
mov
data16
xor
and
pop
xor
xor
add
jb
repnz
mov
clc
inc
int
dec
xchg
cltd
or
sub
sub
sbb
je
mov
lcall
lahf
push
or
add
xchg
pop
pop
jbe
shlb
lds
mov
sahf
jge
pop
push
sbb
inc
xlat
hlt
stos
or
adc
push
push
or
mov
and
out
mov
jge
repnz
stos
enter
pop
jo
xchg
pop
pop
mov
cmpsb
test
and
push
push
out
or
pop
cmpsl
xchg
mov
jbe
ljmp
jle
mov
lock
rcll
push
cmp
xor
or
mov
jno
lcall
mov
outsb
imul
inc
add
stc
xchg
fs
or
bswap
cli
inc
sarb
adc
aas
dec
jecxz
out
or
loope
or
and
mov
flds
mov
icebp
leave
outsl
into
and
fbstp
jns
icebp
jae
lcall
imul
push
push
adc
insb
das
pop
sbb
and
push
out
sbb
inc
lret
cmp
lods
hlt
test
lea
jo
jb
inc
mov
xchg
fcomps
pop
pushf
stos
push
xchg
addr16
xor
jo
sbb
mov
mov
mov
sub
jmp
sbb
xchg
sbb
and
push
icebp
sub
jle
mov
daa
sbb
and
movsb
loopne,pt
call
pop
test
lcall
inc
int3
sbb
push
orl
out
fidivs
call
xor
mov
test
ret
mov
cmp
mov
push
sbb
sub
cmp
or
in
outsb
addr16
jns
sbb
mov
and
in
cmp
ret
xchg
pop
into
jo
mov
enter
xor
data16
xor
push
jl
in
sbb
mov
adc
std
push
cmpsb
dec
fisttpl
in
mulb
movsl
mov
fcoms
mov
dec
inc
adc
test
test
jae
mov
xchg
sbb
in
iret
dec
dec
lret
ds
fcomp
pop
xchg
in
and
dec
sub
push
push
fisubrs
jecxz
insl
rep
cli
aaa
and
xor
pop
sbb
sub
ffree
mov
daa
stos
inc
adc
cs
ror
addr16
mov
test
mov
cmp
das
rcrl
test
sub
je
je
jae
xor
stos
jp
rcll
test
movups
clc
das
ljmp
sbb
aam
data16
xchg
and
pop
or
test
icebp
jae
sti
cmp
cmpsb
shrl
fldl
rcrb
xacquire
cld
popf
add
pop
fisubrl
lret
sub
aas
in
stos
xlat
push
and
icebp
dec
pop
sbb
xor
mov
mov
push
xchg
cmc
imul
loop
in
movsl
imul
je
movsb
outsb
add
iret
inc
andl
and
int
mov
inc
fldcw
pop
mov
sahf
into
scas
add
or
dec
pushf
mov
nop
pop
cltd
jno
jg
mov
stc
mov
out
adcl
add
fwait
out
fs
cwtl
push
sbb
and
fstl
and
inc
jo
or
fisttpl
addb
test
mov
andb
imul
stc
je
sbb
daa
mov
cmp
into
scas
cmp
add
and
in
add
sbb
lret
loope
xchg
sub
sub
jmp
mov
and
mov
jmp
jle
pandn
jno
sub
jmp
aas
imul
icebp
adc
outsb
and
push
aad
add
xchg
mov
icebp
push
inc
inc
sub
lock
gs
data16
lret
test
testb
aas
sub
bound
pop
dec
gs
mov
sub
repz
out
test
dec
or
test
sarl
fstps
fnsave
decl
fstp
roll
dec
stc
stc
cmp
movsb
jb
pop
jne
sbb
leave
int
dec
dec
or
push
pushf
ret
jmp
movsb
xchg
pop
dec
test
dec
insb
mov
mov
push
pushf
mov
fdivl
out
pop
pop
push
mov
mov
jnp
sar
subb
rcl
repz
pop
push
mov
outsl
push
out
add
out
cmpsb
mov
scas
jmp
rcr
push
add
test
jp
cwtl
imul
jae
gs
adc
jnp
shll
dec
push
nop
fdivs
stc
sti
sub
stos
jo
in
outsl
ficoml
test
movsb
insl
inc
jns
mov
jbe
mov
lahf
lcall
dec
pushf
pop
sbb
ds
adc
and
pop
xchg
in
push
das
add
pop
test
popa
mov
sub
add
adc
stos
pop
cmp
fdivl
jl
aam
fwait
pop
sub
in
scas
pushf
int
test
mov
push
pop
loope
mov
fimull
iret
mov
mov
insb
push
xchg
repnz
enter
dec
addr16
divl
cs
pop
xor
mov
cld
cmp
ret
fcompl
sub
dec
in
incl
push
add
xchg
dec
xorl
mov
fs
mov
push
mov
jp
in
int
xchg
clc
ss
scas
aas
push
loopne
test
add
lock
scas
pusha
fisubs
add
jecxz
jl
sahf
or
ret
cmovae
bound
lret
test
mov
mov
sbb
dec
cs
xor
movsl
dec
pop
mov
fcoms
dec
inc
mov
or
lods
and
mov
or
rol
xchg
hlt
xchg
es
or
cwtl
cmp
fstpl
pop
inc
xor
inc
stc
push
int3
rcr
or
or
sub
add
add
test
adc
jo
outsl
cltd
hlt
push
push
popa
pop
lock
aad
add
ja
pop
or
xchg
adc
sbb
mov
mov
call
or
das
fs
std
dec
mov
inc
leave
into
cmp
sti
es
sub
loope
jne
rolb
xor
jne
mov
mov
xchg
pop
jmp
lds
xor
test
rclb
jbe
jno
xchg
cmp
int
lods
loopne
pop
lock
scas
mov
and
mov
mov
test
sbb
dec
cld
jp
movsb
push
dec
imul
sarb
ds
mov
iret
nop
shrd
and
lret
movsb
push
cmc
push
jp
jne
pop
aad
xchg
mov
mov
jae
mov
add
cmc
xlat
imul
mov
mov
xor
ret
sub
pop
je
and
fcomps
sub
inc
pop
je
sub
movsl
gs
ds
mov
push
pop
or
cmpsb
popf
pop
sbb
mov
data16
jns
scas
mov
mov
pop
dec
outsl
and
push
xor
mov
imul
pop
mov
dec
push
xorl
mov
lods
xlat
mov
lods
xchg
in
out
ja
sub
inc
adc
out
imul
dec
sbb
jno
pop
and
pop
inc
movsl
sbb
movsb
xor
daa
mov
cmpb
mov
xor
lret
fwait
push
into
pop
sar
inc
rcll
dec
insl
sti
jl
add
loope
mov
xor
mov
sub
xchg
xlat
cs
je
shlb
pop
jmp
sbbb
movsb
inc
fs
mov
mov
addb
push
gs
std
mov
nop
add
push
xchg
mov
sti
push
repz
daa
mov
inc
aad
std
jecxz
jmp
pop
push
mov
cld
or
push
inc
jl
add
shlb
jmp
dec
inc
call
mov
adc
out
test
aad
gs
cmp
or
mov
movsl
xchg
lea
jae
scas
repz
inc
cmp
aad
std
aam
mov
fcoml
add
pop
push
sbb
rorb
push
scas
mov
test
push
or
clc
ret
xchg
movsl
inc
into
sti
jp
hlt
bound
std
jmp
xlat
out
nop
leave
sbb
stc
nop
cmc
arpl
int
push
mov
cmp
xor
mov
jnp
xchg
stos
pusha
cmp
adc
bnd
pop
mov
iret
xchg
jge
sbb
loop
sbb
mov
and
sub
jge
sub
fdivrs
xchg
scas
push
mov
jns
xor
push
xlat
pop
iret
mov
popf
insl
or
rorb
cmpb
pushf
rcl
sub
lds
or
aaa
push
out
sub
mov
sub
xor
sub
xor
jno
js
cmp
stos
add
pop
inc
and
in
aas
sbb
jmp
jge
xor
mov
imul
lret
cmpsl
icebp
jg
rorl
jg
outsb
je
or
add
bnd
jae
xchg
out
fnstsw
or
jne
sbb
mov
pop
cld
scas
dec
scas
jo
shrb
inc
mov
inc
rcrb
addb
push
sti
scas
mov
rolb
push
insl
int3
les
or
dec
fmuls
daa
xchg
mov
clc
dec
out
movsl
call
out
jbe
subl
mov
pop
fstl
test
mov
movsl
push
cmc
insl
sub
dec
lock
fbstp
jle
aas
jo
adc
pop
das
aaa
mov
mov
out
lret
bound
push
rcl
fstpl
cmc
sti
xorb
dec
int3
clc
icebp
cmp
aam
adc
cmpsl
inc
inc
aas
daa
lahf
sbb
push
testl
adc
xchg
xchg
fidivl
and
xchg
pop
mov
push
push
jg
pop
mov
dec
sbb
sub
insb
pusha
xor
xlat
cmp
and
cmp
data16
lret
jae
inc
les
cmpsb
mov
push
mov
jbe
or
inc
test
add
push
scas
or
xor
imul
fs
sbb
xchg
int
lea
sbb
push
out
cwtl
push
pop
clc
nop
mov
popa
fistps
aam
lahf
dec
jno
pop
fistpll
fildl
pop
jne
fldl
pop
push
inc
cmpb
sbb
shrl
ljmp
popa
inc
out
insb
sub
dec
lahf
shrl
mov
pusha
and
mov
in
aas
cmpsl
jg
fcoml
arpl
sbb
andb
push
mov
add
stc
sub
fldt
mov
xor
xorl
in
pusha
ror
push
xchg
in
xchg
mov
cmp
cmp
test
mov
dec
or
pop
imul
inc
subl
mov
stc
aam
imul
cmp
xlat
cmp
sbb
inc
inc
mov
mov
sti
insb
addr16
or
test
xor
mov
sub
out
fdivrs
scas
stos
rclb
and
adc
pop
adc
loope
push
xlat
and
test
les
popa
es
repz
cmp
inc
inc
loop
xor
sub
sahf
mov
aam
mov
loope
pop
jns
add
shlb
pushf
les
jg
or
sbb
lds
in
out
cmpsl
mov
in
movsb
lret
sub
das
dec
and
and
dec
xor
push
or
lret
test
sbb
bound
sbb
aad
and
xchg
jp
in
cld
loopne
jne
div
dec
mov
cmp
mov
cwtl
xor
jle
lds
cmpl
mov
add
mov
lahf
pop
scas
push
cmpl
aad
js
stos
xor
cmp
fnstsw
or
into
pop
add
mov
push
jo
daa
sbb
imul
add
cmp
push
test
ja
xor
cmp
mov
mov
js,pn
pop
jg
jo
mov
xchg
mov
enter
xchg
xchg
cld
lods
xchg
adc
outsl
les
sbb
enter
jnp
push
lcall
push
dec
jp
jle
xor
inc
and
cmp
ffreep
mov
test
or
lahf
ja
fcmovbe
mov
pusha
bsr
jne
fcompl
push
je
sar
jnp,pn
popa
cltd
push
cmp
ret
lock
shll
dec
dec
pop
arpl
jmp
fistpll
int3
sub
idivb
mov
jp
fisubrl
pop
lds
pop
ss
adc
mov
push
and
push
add
lcall
and
xor
adc
dec
or
ja
mov
mov
mov
push
mulb
icebp
sbb
mov
inc
mov
pop
xor
mov
call
pop
cmp
stc
cmp
and
add
loop
or
movsl
test
inc
cs
xor
orb
pushf
inc
mov
ds
lahf
sbb
cmpsb
in
xchg
dec
insl
fstl
mov
mov
mov
cmp
jmp
or
push
push
jg
mov
push
push
xor
sbb
lret
sub
inc
sub
insb
pushf
sbb
pop
adc
rcrl
rcrl
scas
icebp
jmp
and
mov
mov
push
ret
addr16
test
aad
sarl
negb
aam
ja
fwait
fwait
cmp
inc
stos
jp
mov
and
cmpsb
pop
xor
fiaddl
movsb
insb
or
fs
daa
mov
sbb
mov
mov
in
out
push
in
mov
sbb
pop
cmc
or
test
pop
in
out
xchg
addr16
mov
test
jne
popf
or
fwait
mov
mov
and
jne
jp
in
stos
lahf
jle
mov
mov
pushf
cli
leave
les
mov
ljmp
mov
nop
mov
lods
test
mov
test
ret
jo
movsb
cmp
mov
outsl
sbbb
lcall
xchg
pop
popf
test
or
xor
xchg
mov
add
cli
adc
scas
lods
mov
mov
lret
int
lea
arpl
or
test
imul
sti
scas
mov
and
cmp
lcall
sub
cmp
ret
inc
jnp
sbb
out
cld
ds
loopne
std
jmp
add
aaa
les
adc
mov
hlt
stos
xor
hlt
sub
sbb
mov
test
cld
gs
dec
int
cmp
call
aas
inc
cmp
loop
or
insl
movsl
pop
lds
in
test
fsubl
push
aad
mov
and
jb
scas
xchg
insb
jmp
pop
dec
mov
mov
add
lret
cmpsl
mov
cmc
arpl
mov
pop
scas
cmp
aad
test
out
out
sub
loopne
and
jmp
call
insb
xchg
popf
arpl
stos
out
sbb
mov
mov
roll
cmc
sub
push
dec
mov
pusha
mov
or
xor
push
xchg
mov
jg
fcmove
sbb
dec
mov
inc
shr
sbb
aam
pop
push
imul
movsb
mov
jo
xor
popa
pop
pop
add
jno
lods
shlb
sti
push
xchg
mov
insl
jmp
outsb
hlt
mov
mov
sbb
jnp
ror
inc
push
mov
and
test
push
adc
leave
stos
sbb
iret
aam
sub
push
jo
jno
ret
pop
xor
loopne
cmpsl
dec
stos
mov
call
es
mov
imul
inc
sbbl
xchg
or
mov
push
mov
push
xchg
cli
add
mov
cmp
divl
sub
xchg
mov
das
popa
fists
xchg
push
add
dec
mov
iret
repnz
pop
xchg
into
rcrb
insl
rorl
push
fcoml
movsl
imul
sbb
nop
mov
sub
and
imul
pop
out
jg
lret
jge
rclb
adc
popf
jae
test
cmpsl
sbb
fldt
addr16
scas
rorb
mov
movsl
movsl
test
inc
sbb
push
pop
setne
insl
xchg
cmp
mov
mov
ja
mov
roll
xchg
inc
scas
aas
test
sbb
imul
push
insb
mov
mov
or
xchg
or
scas
jg
test
stc
adc
adc
push
inc
and
inc
push
out
cwtl
sbb
and
dec
cld
mov
mov
fdivrp
pushf
rcr
dec
mov
lret
popf
push
bound
jae
shlb
insl
icebp
in
mov
cs
fwait
push
mov
stos
xlat
mov
mov
loopne
jp
xor
xor
into
push
mov
add
jae
mov
dec
xlat
push
lock
jbe
stos
in
mov
lock
bound
int
mov
and
push
fcmove
ret
addb
retw
and
adc
mov
mov
adc
xchg
fsubr
outsl
inc
inc
movsb
mov
sub
loope
and
push
shl
fdivs
loopne
adc
dec
and
clc
cmc
lea
ljmp
add
call
movups
stc
aad
lret
fs
sub
jno
mov
cmp
es
arpl
lcall
xorb
inc
jp
and
dec
push
dec
cs
sub
mov
adc
dec
inc
pop
inc
into
jmp
ret
jle
popf
lea
adc
arpl
gs
mov
or
xchg
cmp
out
data16
mov
rcll
loop
push
mov
incb
xor
push
lock
and
ret
adc
xchg
add
out
or
pop
jecxz
jae
sbb
mov
mov
pop
dec
outsl
inc
push
dec
mov
cmc
mov
mov
pop
mov
sub
or
lahf
push
add
aad
aaa
push
imul
popf
in
sbb
pop
jb
inc
sahf
frstor
pop
loopne
fdivp
vpand
aam
pop
sub
popa
scas
shll
lds
sbbl
iret
mov
push
mov
cmc
xor
and
and
jo
pushl
sub
orb
and
in
lahf
int
int3
mov
jg
pop
iret
push
sbb
xor
add
adc
mov
ja
icebp
shlb
jl
sub
mov
push
or
iret
and
mov
decb
ret
testl
cmp
ficompl
call
enter
out
mov
xchg
in
pop
inc
inc
hlt
enter
cmp
int
mov
pop
into
mov
out
and
and
xlat
out
fidivl
pop
sti
fnsave
xorb
xchg
dec
jge
std
dec
sub
mov
or
add
scas
inc
mov
movl
jp
cmp
push
nop
xchg
rorb
lods
mov
push
jb
rolb
push
push
inc
cld
add
pop
jecxz
pop
sub
jb
mov
push
add
lcall
frstor
inc
push
cld
inc
mov
sbb
push
scas
lds
pop
arpl
xchg
and
sar
popl
fildll
jmp
mov
mov
push
inc
jmp
inc
push
mov
jne
adc
inc
xchg
pop
mov
dec
pop
dec
sub
lret
lds
sub
popl
xchg
inc
ret
xchg
ja
jecxz
pop
in
xor
cld
dec
and
ret
test
lahf
in
repz
push
hlt
fld
sub
outsb
sahf
adc
fimull
push
pop
pushf
das
sbb
pop
mov
jecxz
js
sub
cmp
or
mov
cs
sub
push
adc
jns
mov
test
jmp
fsubrs
xor
push
jae
cmp
in
jae
ficoms
imul
fst
ror
js
lock
lret
cmpsb
movsb
cli
fcomp
push
xlat
lods
xchg
pop
xor
adc
inc
sub
xlat
pop
sbb
imul
andl
shlb
mov
fs
jbe
jns
in
cmp
movsl
movsb
xor
adc
add
jb
sbb
xchg
outsl
sbbb
or
mov
jne
and
jne
cmp
xor
out
loop
or
push
mov
mov
push
jecxz
nop
xchg
pop
pop
jl
in
cmp
mov
lret
dec
scas
imul
loope
xchg
xchg
insb
out
jmp
movswl
sub
movsb
das
inc
sahf
in
or
test
adc
pop
add
adc
fcom
nop
mov
sub
lock
js
imul
jecxz
lahf
notb
test
push
jg
movsl
dec
sbb
incl
aam
aas
or
pop
shrl
inc
cld
jne
mov
ret
pushl
mov
lea
pop
xchg
push
jae
cmc
mov
sub
jno
push
push
push
mov
dec
enter
imull
or
test
mov
and
xor
sarl
pop
add
xchg
mov
int3
or
outsl
pop
dec
movsb
push
adc
lds
cmp
push
adc
pop
mov
mov
inc
test
pop
test
imul
jno
pushf
das
in
xchg
jmp
mov
inc
insb
out
call
xchg
push
hlt
inc
shrl
test
cmp
outsl
inc
lea
inc
mov
emms
repnz
and
in
inc
popf
in
pop
sub
sbb
sahf
in
add
inc
mov
sbb
test
sub
mov
cmp
push
fcoms
sbb
jl
dec
pop
out
scas
dec
shrb
sub
jno
xchg
nop
jb
js
leave
add
add
out
out
subl
jb
fucom
adc
rcrb
push
pop
lds
add
add
pop
mov
fdivl
cmp
mov
and
xor
push
push
mov
sbb
adc
mov
lock
addr16
xchg
xor
xchg
loopne
and
dec
mov
loopne
shlb
loopne
jns
cmc
or
arpl
inc
call
psllw
arpl
ret
sbb
jb
es
insb
je
mov
and
or
mov
mov
in
int
addr16
lret
aas
jnp
cli
jge
xor
lods
xor
cwtl
lahf
mov
ss
loope
les
aad
lods
je
mov
pusha
scas
cmp
icebp
adc
subl
cltd
aad
jno
xchg
sbb
idivl
jae
cmp
adc
xor
and
mov
inc
pop
xlat
inc
sub
or
push
arpl
adc
xchg
adc
mov
and
pop
jmp
xchg
push
pop
es
jecxz
sub
xchg
aas
jl
xchg
xchg
xor
std
cli
xchg
scas
call
ja
inc
fwait
shll
mov
outsb
jo
jle
hlt
pusha
dec
jecxz
mov
dec
mov
pop
sbb
out
imul
sub
mov
mov
pop
pop
mov
jmp
or
test
inc
xor
inc
addr16
popa
outsb
popa
addl
push
ss
ret
sbb
sbb
inc
js
fsubrl
popa
or
ja
and
imul
add
xchg
mov
popf
mov
arpl
and
add
push
jg
pop
add
lea
insl
lret
adc
jmp
cmc
pop
loopne
pop
sub
mov
push
xchg
ds
sub
pop
mov
jo
les
aaa
xchg
fnstenv
aad
jp
or
movsb
jae
pop
sub
sarb
cmp
adc
mov
xchg
fiaddl
clc
out
scas
pop
mov
or
mov
add
pop
js
sub
in
mov
stos
fldt
push
add
scas
pop
sti
cli
pop
add
clc
cmpsb
mov
repz
not
into
pop
and
mov
cmc
push
fistpl
insb
adc
fstpl
mov
fwait
int
fidivl
outsl
in
out
xchg
dec
fwait
imul
ret
in
dec
push
pop
cli
sub
pop
and
jbe
jp
mov
out
sub
pop
stc
fs
xlat
sarb
sahf
jmp
or
mov
or
push
into
pushf
cmpsb
sbb
jb
and
pop
sub
cmp
out
push
pop
jecxz
jg
jae
jnp
inc
jg
cmp
mov
loope
mov
pop
andb
fbstp
stos
mov
mov
jno
pushf
mov
jecxz
cmp
mov
adc
fidivs
insl
daa
mov
push
gs
jb
mov
cmp
jns
xor
inc
xor
cmc
bnd
xlat
sub
pusha
inc
cmp
enter
insl
mov
push
insb
jae
shl
js
lret
sub
je
dec
lret
nop
aaa
test
sar
or
pop
and
in
out
mov
lock
xor
imul
cs
pop
insb
cmc
lret
cmp
in
lods
add
in
subb
les
adc
cmp
pop
jmp
add
popa
mov
ret
icebp
jne
push
in
in
fdecstp
fcoms
into
call
push
sti
cltd
inc
imul
inc
shlb
test
lock
imul
lock
mov
or
test
inc
andb
nop
xlat
cld
in
cmc
loop
enter
push
xchg
inc
popl
adc
dec
or
std
jge
pop
fstl
out
testb
dec
mov
test
loopne
jmp
mov
add
repz
push
pop
int
mov
pushf
jg
iret
pop
popa
and
inc
inc
data16
sbb
pop
dec
lock
outsb
xor
pop
and
lcall
xchg
leave
sub
mov
or
jns
push
enter
aaa
aas
mov
cmp
roll
xor
fimull
push
pop
scas
xchg
mov
fistpl
mov
mov
std
pop
les
xchg
inc
movb
jbe
hlt
pop
jb
ret
lgs
lcall
mov
xor
lock
jge
mov
cmpsl
sahf
cmpsl
aaa
data16
push
xor
insl
popf
push
into
cmc
test
insb
enter
cmp
mov
cs
pop
mov
mov
orl
insl
ljmp
cmp
push
push
stos
les
shll
mov
cwtl
adc
mov
in
xchg
or
dec
mov
mov
sbb
mov
mov
int
xchg
int3
mov
inc
shrl
jl
aad
mov
cmp
imul
lea
aaa
xor
inc
xor
inc
mov
jns
sbb
mov
cmp
imul
mov
insl
jns
dec
test
stos
into
stc
ljmp
jo
mov
orb
and
pop
adc
pop
ret
mov
xchg
pop
das
int3
adc
dec
push
mov
mov
pusha
cwtl
aas
push
dec
in
xlat
push
sbb
mov
jge
adc
roll
clc
mov
sbb
or
popf
call
insb
push
addb
sti
push
adc
or
arpl
push
in
enter
xor
fisttps
leave
adc
out
mov
mov
sahf
pop
jns
pop
testl
stos
jae
out
subl
mov
mov
iret
xchg
stos
incl
push
daa
insl
jnp
and
jo
test
fidivl
aas
adc
out
in
cmc
adc
cmp
fcmovbe
shrl
out
testb
jmp
push
xor
push
hlt
mov
andb
outsb
popf
movsb
pop
fst
mov
jae
push
sahf
xor
into
cmp
mov
dec
rorb
and
js
jns
cli
inc
push
mov
inc
xor
out
scas
test
pusha
lods
push
lcall
lahf
daa
and
xor
xor
lea
jne
clc
insl
imul
hlt
lods
sahf
sub
sub
lock
push
jge
out
scas
hlt
cwtl
jbe
aas
movsb
cwtl
int3
push
add
dec
js
lods
aas
and
push
sbb
rdmsr
jbe
sub
pop
bnd
shll
bound
pushf
mov
dec
mov
stos
jg
mov
and
out
arpl
ret
mov
repnz
stos
xchg
imul
and
push
adc
cmpl
cmp
outsl
or
xlat
xchg
fs
adc
xor
ret
sub
mov
sub
mov
inc
mov
loope
shrl
or
jo
dec
pop
fwait
cmp
adc
xorl
or
jns
dec
hlt
stc
in
mov
gs
jg
dec
jne
sub
and
push
lods
pop
imul
out
aam
adc
out
enter
popf
fsubl
ret
adc
jecxz
aam
mov
mov
or
fstpl
testl
inc
mov
das
addb
in
mov
xor
sbb
int3
testl
cmp
add
mov
les
xchg
sbbb
fisttps
aas
xchg
sbb
lret
lods
sbb
mov
or
loopne
add
mov
seto
push
or
jae
mov
xchg
pop
loope
fsubrs
mov
jecxz
ja
stos
mov
mov
push
js
das
in
jge
lods
inc
addr16
mov
adc
pop
cs
push
pop
insb
adcl
lea
int
xor
adc
insb
outsl
jae
fists
pop
mov
repz
fwait
sbb
ficompl
adc
mov
xchg
cmp
sbbb
dec
fisubl
add
mov
pusha
cmpb
mov
leave
lret
icebp
mov
ret
pop
push
stos
mov
mov
jl
fstp
out
pushf
inc
cwtl
push
and
dec
and
inc
sarb
inc
dec
xchg
out
pop
scas
pusha
fimuls
shll
mov
jne
sub
mov
or
dec
fsub
rcll
inc
cmp
pop
dec
jg
dec
imul
jne
jp
mov
cmp
dec
das
je
xchg
cltd
pusha
movzbl
push
not
in
sub
mov
imul
sub
push
cltd
out
fstps
xor
sti
xchg
mov
ret
or
push
js
gs
mov
mov
inc
ljmp
sbb
cmp
scas
mov
je
sti
and
test
dec
sahf
inc
dec
mov
push
aad
mov
addr16
xchg
inc
xor
xor
cmp
ljmp
add
scas
lods
pop
adc
and
arpl
test
stos
sahf
sub
mov
je
cmp
or
subb
loope
pop
cmp
add
fiaddl
sbb
pop
mov
and
into
outsb
scas
movsl
adc
lcall
add
dec
mov
movsb
das
lret
sbb
cmp
repz
sbb
adc
ja
outsl
jecxz
scas
push
and
dec
sub
lea
or
shlb
je
and
pop
jb
add
sahf
call
and
dec
sbb
xchg
sub
sbb
push
inc
push
pop
sbb
mov
in
rcrb
mov
cmp
ret
xor
mov
jae
test
into
dec
insl
and
push
mov
das
pop
out
aas
aaa
data16
xor
dec
fstp
rol
jb
push
fsubrl
xchg
add
adc
adc
out
xor
or
mov
pop
mov
push
out
loop
sbb
mov
lock
lock
mov
or
fidivs
dec
push
sbb
sbb
lods
into
xor
lock
inc
inc
mov
fstl
fnsave
sub
int3
mov
jl
push
cmp
sub
decl
add
outsl
mov
ret
loop
mov
leave
movb
cmp
popa
pop
or
rcll
mov
sbb
mov
sar
iret
data16
jno
out
test
idivb
add
adc
scas
sbb
cmp
insl
data16
mov
mov
push
and
arpl
sub
jp
or
out
stos
dec
cmp
cltd
cmp
xor
push
into
cld
pop
jnp
cwtl
movzwl
sbb
in
jnp
lret
sahf
mov
mov
inc
inc
dec
dec
inc
mov
test
dec
add
adc
push
fisubl
pop
sbb
test
lahf
sub
shll
mov
or
push
fnstenv
push
insl
mov
sti
loopne
cmp
stc
dec
inc
mov
dec
push
ja
and
mov
repnz
mov
xor
jmp
aam
xchg
pop
jo
xchg
cmp
xor
mov
mov
push
push
movsb
sbb
int3
pop
mov
xchg
imul
jge
pop
adc
mov
mov
ficoml
pop
stos
leave
push
ds
dec
mov
mov
or
cmpsl
inc
jbe
stos
inc
mov
xor
cs
mov
dec
sbb
or
inc
or
add
jns
fimuls
mov
movsb
jb
inc
test
movsb
mov
push
pop
loope
fstpt
fstl
mov
sub
sbb
mov
add
fsubr
mov
xchg
add
xor
mov
pusha
icebp
loopne
aad
push
psubusb
sysret
sbbl
cmp
das
push
cmp
pop
pop
jo
adc
mov
sub
std
mov
sub
fidivrs
out
jnp
jl
inc
jmp
loopne
push
lock
mov
mov
sbb
iret
pop
cs
xor
imul
cmp
dec
push
mov
adc
and
jbe
and
stos
jp
adc
mov
loopne
inc
push
enter
int
and
jg
or
fisubrl
and
xchg
cwtl
test
push
jl
cmp
xlat
arpl
push
aad
imul
lret
xor
xor
iret
jb
testb
push
or
popa
fistpll
adc
lods
push
xchg
or
fadds
xchg
or
in
cmc
mov
jl
xorl
cmp
out
lcall
add
inc
jl
pop
jbe
adc
fsubrl
les
sub
ss
lds
pop
cmp
rcrl
les
inc
jb
sbb
add
jnp
testl
xchg
jl
rolb
mov
push
lret
xor
leave
cmpsb
jb
sbbl
cwtl
cli
call
pop
nop
arpl
ss
pushf
mov
in
addr16
scas
push
nop
rol
divl
fidivrs
rcrb
xor
fadds
adc
lds
iret
push
sbb
mov
mov
xor
mov
fnstcw
sbb
sbb
push
sub
xorb
insb
nop
mov
jmp
mov
cmp
inc
jae
mov
cmp
mov
mov
repnz
pop
dec
daa
jecxz
sub
loopne
mov
data16
gs
xchg
cli
fucom
jp
ret
add
lcall
dec
mov
jp
sub
and
cmpsb
push
dec
lahf
shrb
out
out
mov
xchg
std
sub
mov
lods
sbb
rclb
sarb
xor
sub
sbb
push
xlat
out
mov
loope
fmul
mov
mov
cmp
jae
mov
rcll
loop
jo
shrl
insb
push
icebp
sub
adc
dec
mov
imul
push
push
jmp
push
push
mov
loopne
shll
push
dec
mov
push
push
xchg
jecxz
mov
pushf
in
or
popf
sbb
insb
pop
mov
push
jl
cmpsb
fxam
add
rclb
insb
das
pop
mov
lea
xchg
adc
inc
bound
pop
cmp
dec
lds
lahf
push
add
push
dec
mov
mov
add
cli
pop
pop
fcoms
loop
xor
rorb
clc
push
dec
daa
xchg
add
roll
xchg
rcll
rcr
mov
xchg
enter
mov
mov
cmp
cmp
xor
adc
add
mov
jnp
mov
push
mov
add
add
bnd
inc
cld
fwait
leave
and
shlb
shlb
push
mov
mov
xor
mov
fbld
mov
rcrl
ja
mov
pop
les
jno
test
mov
jecxz
jae
xor
cmpsl
cmc
daa
dec
imul
cmpl
pop
stc
inc
shll
lds
mov
and
add
mov
inc
stos
cmpsb
mov
mov
jno
xchg
inc
pushf
push
dec
push
arpl
cs
repz
aad
fcmovne
lret
mov
pop
mov
movsl
ss
insl
mov
add
loopne
mov
sahf
dec
add
xchg
add
inc
sbbl
cmpsl
cmpsl
aaa
sbb
mov
idivb
shrl
ret
cmpsb
jne
mov
add
xchg
stc
and
pusha
lcall
js
xor
jbe
lret
or
add
dec
fadd
lods
sbb
stos
jl
movsl
dec
int3
addr16
out
dec
pop
and
dec
stos
lahf
jge
and
xlat
fimuls
test
insl
loopne
jne
push
mov
cwtl
add
rdmsr
mov
sub
loopew
bound
pop
and
add
push
repz
icebp
xchg
bound
jge
nop
lea
push
cmp
lods
dec
lret
pop
icebp
pusha
outsb
xor
sub
push
popf
out
xchg
clc
aaa
in
mov
out
ret
adc
sub
lret
icebp
dec
sub
addb
inc
mov
outsl
int
test
mov
pop
dec
dec
mov
cmp
insb
sbb
xor
stos
pushf
sub
xchg
mov
sarb
push
and
hlt
cmp
adc
mov
dec
movsl
pop
ds
add
or
mov
dec
in
pop
xchg
xor
mov
lcall
rcl
lcall
lahf
inc
adcb
xchg
add
push
mov
cmp
rclb
test
fs
cmpsl
or
dec
mov
cwtl
lret
fldcw
pop
jnp
sti
adc
shlb
dec
clc
or
sub
dec
jo
sbb
aad
adc
mov
mov
in
inc
mov
push
add
sbb
sbb
jmp
dec
and
jecxz
inc
xchg
push
popf
stos
dec
sahf
aam
test
cmpsb
sbb
movsl
push
push
pop
sbb
mov
fs
insl
mov
cmp
rcll
filds
cwtl
mov
mov
adc
mov
iret
pop
mov
fwait
push
sti
test
and
in
in
pop
inc
pop
int
outsl
adc
jne
out
sbb
les
cmp
insl
add
sbb
rolb
mov
in
mov
insl
andl
in
mov
aad
scas
push
inc
jo
jo
cmp
out
ja
mov
sbb
xchg
notl
fidivrs
add
mov
mov
jnp
sub
add
loopne
or
xor
cltd
inc
pushl
dec
lds
cmc
sub
rcl
mov
fcmove
jg
and
adc
pop
xchg
cmp
lret
mov
cmp
icebp
adc
mov
out
nop
mov
mov
sbb
sbb
jge
lds
xor
sbb
loop
lds
adc
sti
xor
ja
imul
mov
in
jmp
or
or
mov
mov
cs
add
sbb
mov
out
push
testb
in
sbb
mov
fnsave
sub
cmp
jns
popf
pop
mov
rorl
stos
add
sub
in
ret
or
fnsave
fs
aaa
or
aas
mov
push
and
orl
flds
inc
jge
xchg
lods
mov
jbe
mov
cmp
dec
lock
pop
inc
jbe
lret
adc
pop
inc
mov
push
inc
or
mov
lea
ret
lahf
cmpsl
pushf
push
out
inc
mov
adc
mov
mov
xor
cmp
cmp
cmc
adc
inc
fistl
in
mov
pop
mov
xchg
ds
xor
mov
pop
repz
adc
fidivl
pop
push
rorb
sti
inc
scas
or
mov
mov
inc
adcl
popa
mov
adc
arpl
mov
mov
aam
or
mov
aaa
sub
wrmsr
in
addb
inc
or
loop
inc
mov
add
add
cmp
roll
daa
into
xor
push
mov
arpl
clc
dec
hlt
xchg
fisttpll
mov
fs
addr16
mov
pop
push
mulb
lret
imul
or
mov
adc
xchg
movd
jecxz
fcoms
jecxz
mov
popf
rcrl
in
test
add
add
xor
adc
mov
rcr
sub
jecxz
nop
jb
mov
sbb
sti
lods
mov
rcrl
mov
ret
rolb
imul
mov
scas
mov
mov
pop
and
repnz
pop
mov
add
inc
and
and
xor
mov
stos
push
outsb
les
jo
pop
addr16
or
dec
sub
movsb
in
js
inc
or
ret
daa
hlt
cmp
leave
sub
and
cmp
ja
clc
pop
lods
push
adc
or
add
cmp
rolb
push
repnz
lcall
mov
mov
or
test
jg
mov
jnp
mov
inc
xor
fildll
fisttpl
loope
sbb
sbb
repnz
fistps
fcomp
decl
jne
hlt
mov
les
popa
stos
mov
add
fs
fsub
mov
fs
insl
mov
insb
adc
nop
sub
iret
adc
xchg
cli
mov
hlt
repz
loope
mov
add
push
les
adc
scas
fcoml
sub
fcmovnu
mov
push
subl
enter
data16
test
int
pop
cmpsb
cmp
mov
loopne
loope
outsb
or
outsb
mov
push
sub
add
into
mov
lret
repnz
fcmovne
imul
cmp
mov
mov
add
aaa
insb
int3
push
inc
out
shrb
pop
fists
jo
add
and
push
int
popa
sti
scas
imul
xchg
out
enter
add
push
loopne
cmp
rorl
insb
nop
test
fiaddl
int3
les
ret
and
push
bt
imull
and
or
sbb
sub
inc
xchg
push
add
jl
pop
setne
outsb
adc
add
push
cmp
out
out
sbb
insb
int
cmp
pop
insl
lss
ret
and
fimuls
lret
js
add
test
cs
sbb
stc
cli
push
sahf
sar
add
movsb
mov
add
xorl
pop
push
int3
mov
cmp
hlt
fidivrl
scas
cli
jmp
sti
mov
fcmovu
cli
icebp
loope
mov
into
jl
jno
lret
icebp
cmp
nop
je
add
and
mov
inc
fdivrl
or
mov
inc
rorl
sbb
mov
mov
mov
lods
jl
cmovb
adc
xchg
add
movsb
insl
or
push
mov
inc
inc
cmp
ss
nop
in
mov
dec
push
imul
mov
icebp
test
repnz
or
adc
fistpll
add
jne
sbb
gs
xchg
sub
repnz
decb
setbe
mov
mov
push
mov
movb
sti
mov
and
xchg
adc
jmp
pop
insb
mov
jle
std
adc
mov
ret
jge
adc
adc
cld
enter
clc
in
mov
dec
lahf
jne
sahf
stc
sbb
shrl
pop
das
out
es
pushf
sub
cmpsl
int3
or
nop
outsl
mov
mov
inc
pop
scas
outsb
shll
jmp
mov
jg
mov
jg
and
ljmp
add
pop
enter
dec
cltd
push
cmc
ds
fsubs
ror
mov
mov
pop
pushf
lea
mov
mov
cli
push
insl
ja
add
dec
xor
fdivrs
adc
jge
repz
into
jne
push
push
xchg
test
fldcw
ja
dec
push
pop
or
fnstenv
jmp
adcb
sub
push
sbb
rclb
sub
xchg
adc
cwtl
mov
les
dec
and
pop
jns
roll
fldcw
adc
jb
imul
mov
rcrl
nop
jnp
dec
lcall
sub
and
cli
sahf
adc
xchg
out
repz
in
add
lahf
rcll
adc
pop
insl
mov
addr16
daa
hlt
pop
loopne
dec
shr
sub
fucomip
imul
or
and
sti
xor
adc
mov
lcall
inc
popa
enter
mov
jnp
stos
cltd
rorb
sahf
jb
mov
cmp
test
int
sub
ficompl
daa
sub
or
hlt
mov
or
dec
lcall
ss
js
int3
mov
js
rolb
fsts
mov
lcall
nop
pushf
sbb
test
mov
lods
pop
gs
popa
mov
mov
sub
clc
stos
rolb
xor
hlt
and
pop
cmp
adc
orb
jecxz
loopne
jb
scas
or
push
cwtl
add
push
test
scas
das
iret
roll
aam
in
outsb
aad
jecxz
jle
idivl
or
and
and
pop
cmp
adc
in
mov
fisttpl
imulb
inc
stos
rcrl
ja
dec
sahf
adc
ret
xor
inc
mov
adcl
mov
js
cmc
arpl
mov
cmp
movsb
aam
inc
ss
cltd
jns
mov
and
and
shl
cmp
xor
andl
fdivs
or
xor
cld
adc
outsl
xor
loopne
lds
xchg
in
ret
ficoms
or
xor
ss
mov
mov
mov
arpl
imul
xor
and
ljmp
fcom
cmp
ret
or
xchg
aaa
orl
out
mov
nop
cmpsb
sarl
dec
orl
inc
xorb
in
adc
les
sti
xchg
push
pop
sbb
ljmp
fistpl
mov
out
js
outsb
push
jne
sarb
out
jg
lods
fcoms
and
leave
test
or
mov
dec
sbb
cmp
les
iret
pushf
sub
js
xor
adc
sub
faddl
dec
hlt
shrl
movl
mov
into
add
test
xchg
loopne
mov
adc
decl
xchg
xor
unpckhps
cmp
rclb
mov
mov
mov
ss
rep
jecxz
xor
cltd
xchg
mov
inc
inc
test
outsb
mov
jns
push
leave
int
inc
mov
jecxz
sbb
mov
jle
hlt
inc
mov
inc
pop
andl
sbb
add
loope
loope
mov
adc
jge
data16
inc
add
sbb
sbb
rorb
pop
cmpsb
sub
mov
sbb
ljmp
mov
push
test
insb
loope
insl
lret
cs
lret
adc
ret
jl
ja
iret
call
data16
pop
outsl
cmp
xor
jecxz
mov
mov
pop
loop
mov
stos
mov
out
jl
out
cs
lret
lcall
call
add
daa
sar
popf
mov
dec
pusha
sub
add
mov
in
sub
pop
mov
fstpl
js
scas
cwtl
cs
pop
arpl
mov
fcomi
jno
out
jl
repnz
cmp
cmp
sarl
pop
lea
lahf
jnp
jmp
test
sbb
fdivr
fsts
xchg
stos
xchg
orb
adc
out
jae
roll
cmpl
xchg
inc
jbe
in
pop
ret
sbb
inc
lcall
dec
lret
push
ja
aaa
mov
mov
pop
arpl
cld
daa
push
cmpsl
fldcw
push
std
push
dec
mov
inc
jmp
aas
jne
sbb
lea
mov
xor
clc
subl
or
sbb
mov
lds
and
negl
sti
or
push
dec
fwait
xor
pop
pop
fs
lret
sub
sbb
inc
repnz
push
mov
xchg
jl
cmpsl
inc
or
fmul
xchg
mov
jmp
lea
xchg
fwait
inc
test
mov
xchg
sahf
adc
cld
shrl
dec
lock
outsb
fsubrl
ss
dec
mov
testl
jmp
jg
adc
xor
jmp
or
xor
push
sbb
jnp
mov
mov
icebp
jb
in
dec
jo
dec
movb
pop
movsl
rcll
cmc
pop
aad
fnsave
dec
in
xchg
cmpsb
add
jno
lods
in
add
test
dec
add
adc
out
scas
jae
cli
sbb
les
cmpsl
movsb
into
jp
leave
or
jecxz
arpl
push
adcl
mov
xchg
sub
scas
mov
mov
dec
jmp
shrl
mov
sbb
mov
mov
inc
jnp
mov
xlat
movsb
jp
into
sbb
push
jge
jg
cmp
push
push
adc
xchg
mov
insl
inc
imull
or
inc
pop
xchg
jle
shll
sbb
int
inc
and
lods
loop
push
mov
jge
mov
imul
xor
mov
divl
and
sub
lods
rclb
rcll
enter
iret
mov
add
and
or
and
clc
lds
push
scas
outsb
sub
inc
jo
and
outsb
lcall
rcrl
or
add
subl
fiadds
jle
push
mov
cltd
jns
js
push
clc
insb
and
divb
dec
and
pop
rolb
mov
das
mov
lret
cmpsl
and
rcrb
or
and
fisttpll
jmp
rcll
gs
pop
push
cld
pop
mov
adc
jmp
js
sarb
or
lods
scas
into
cmp
cmp
xchg
pusha
sbb
mov
push
inc
cltd
int3
push
data16
rol
xlat
add
xchg
cmp
mov
pop
xchg
out
dec
or
mov
popf
loope
push
imul
fisubl
rcl
sbb
leave
ret
nop
jl
into
cmpl
jne
test
and
add
xchg
xor
into
ret
sbb
clc
fidivs
fmuls
in
mov
std
fiaddl
xchg
bound
scas
ret
mov
fadds
mov
lret
xchg
fwait
jge
pop
dec
mov
xor
pop
std
xchg
or
mov
mov
jo
xchg
inc
aas
and
xor
xchg
ds
test
int
and
movsl
and
rol
xchg
fstpl
cmpsl
repnz
push
mov
loope
xchg
or
add
sub
mov
jle
add
or
jle
jno
dec
in
jmp
or
rcll
mov
std
mov
mov
in
sbb
loopne
les
mov
ljmp
inc
xlat
cli
test
dec
xchg
clc
mov
ret
mov
pushf
and
inc
shll
dec
imul
cltd
lods
inc
xor
leave
pop
aad
lahf
jnp
cmpsl
xor
cmp
rorb
add
adc
mov
jne
lcall
mov
dec
xor
adcb
outsl
imulb
sbb
insb
cli
xlat
jecxz
or
repz
and
pcmpgtd
test
xchg
inc
lods
arpl
shl
mov
or
or
push
mov
rol
daa
jbe
mov
jle
or
ss
push
dec
push
or
fisubrl
mov
clc
aad
jecxz
daa
inc
ds
xor
hlt
push
sub
incl
sar
mov
cmp
sti
and
enter
inc
push
test
mov
pop
ljmp
addr16
scas
mov
stc
mov
leave
lds
mov
xor
mov
jle
jne
imul
icebp
pop
adc
repz
add
mov
enter
aam
cli
push
out
sahf
cltd
out
movsb
dec
js
push
orl
mov
lods
das
jge
aaa
xchg
je
pushf
sahf
rcr
andb
inc
mov
das
mov
cmpsb
stos
dec
and
sahf
leave
pop
add
mov
dec
scas
int
xchg
andl
cmp
lahf
mov
jecxz,pt
jb
jns
mov
pop
cmp
jno
into
sarb
lods
sarl
fcoms
push
aam
outsl
pushfw
pop
andl
sub
adc
psraw
sub
cmc
mov
outsb
roll
cmp
fstps
or
fmuls
loop
mov
mov
rcrb
aad
and
mov
stos
add
repz
dec
sahf
test
or
leave
stos
repnz
or
stc
adc
leave
dec
stc
leave
out
or
push
push
inc
adc
mov
enter
xchg
adc
xor
out
sbb
daa
cli
jmp
ret
ret
push
adc
aas
add
sbb
jne
pop
ss
cmc
and
rcll
push
cmp
repz
movl
push
repnz
rcrb
in
lcall
je
mov
sub
cltd
push
mov
push
cmpsb
mov
stc
adc
ss
test
mov
jmp
push
lock
and
fwait
lret
xorb
xchg
cmp
int
push
mov
pushf
jo
mov
popf
xchg
jae
adc
jae
add
and
ret
out
mov
mov
xchg
int
inc
mov
stos
stos
and
scas
stc
shr
inc
dec
hlt
inc
mov
or
mov
gs
dec
repz
mov
loope
arpl
pop
jne
mov
or
in
test
sbb
mov
pop
scas
push
ds
bound
das
adc
jle
sub
mov
negl
dec
rorb
dec
xchg
cmp
jl
shlb
iret
in
or
pop
jno
jle
adc
or
pop
sbb
mov
out
sub
mov
xor
inc
xor
sti
lock
sbb
pop
cmc
adc
sbb
std
leave
mov
xor
inc
push
lcall
cmp
in
xor
inc
ja
sub
inc
loop
adc
jg
stc
test
loopne
jp
into
clc
xchg
lea
mov
or
les
xchg
lcall
or
lock
icebp
ja
lcall
test
mov
insb
inc
jg
ds
jbe
leave
ja
sbb
lahf
out
mov
test
cmp
nop
mov
xor
push
lahf
ja
mov
fsubrs
and
push
xorb
out
and
das
xchg
decb
in
clc
outsl
call
push
adcl
sbb
hlt
xor
push
fstpl
daa
push
sbb
pop
loopne
mov
les
xor
pop
cmp
or
js
sbb
mov
out
lcall
sbb
jno
mov
daa
mov
add
fisubrl
push
and
mov
cmp
sti
clc
aad
xchg
and
xchg
push
ds
and
popf
in
or
xor
imul
inc
sbb
xor
std
dec
sarb
ret
movsb
mov
adc
xchg
and
mov
lods
mov
pop
insb
mov
insb
call
insl
into
aad
xor
frstor
ja
add
rcl
xorl
or
addl
adc
call
packsswb
outsb
jp
mov
mov
push
imul
pop
mov
bound
and
jl
adc
call
insl
hlt
fnsave
mov
adc
mov
movsb
mov
pushf
mov
inc
add
aaa
mov
mov
jb
insl
sti
roll
icebp
sarb
inc
jl
xchg
test
adc
into
mov
push
mov
xchg
xlat
jo
pop
das
test
movsb
push
pop
lock
cwtl
dec
sbb
sub
aaa
aam
in
push
push
cmpsl
inc
lea
add
or
jae
dec
bound
nop
lock
dec
jb
mov
and
dec
jb
xor
or
cwtl
jbe
mov
add
movsl
mov
dec
loop
sbb
lret
jecxz
push
add
mov
push
in
adc
cmc
sub
scas
fsts
dec
js
aas
adc
les
xchg
fsubl
and
fwait
mov
lods
xchg
push
pusha
mov
push
jae
dec
xor
cli
cmp
adc
out
jnp
push
cltd
scas
cltd
enter
pop
repz
lahf
mov
push
sub
aam
mov
cli
loope
mov
lds
and
adc
pop
call
or
jo
mov
mov
loop
lahf
testb
mov
sbb
mov
push
enter
shll
jbe
or
lret
mov
pop
or
xor
jne
in
call
jnp
into
pop
mov
sub
jns
out
mov
enter
add
sti
sub
loope
xchg
xor
pusha
cmp
pop
testl
add
rorb
sarb
popa
xchg
int
mov
fcomps
roll
xchg
dec
call
call
add
add
xor
iret
mov
add
xor
nop
and
fnstcw
dec
test
mov
fimuls
jns
xor
xor
pop
pop
out
mov
dec
fwait
cmpsl
add
notb
fisttpll
sub
outsb
nop
adc
cmpsl
or
or
mov
or
lods
loop
mov
dec
scas
inc
jecxz
addr16
mull
jns
testb
push
ret
lret
das
cmp
and
imul
mov
std
les
sahf
stos
and
out
sub
mov
push
xor
dec
adc
inc
push
shrl
pushf
lods
test
sub
scas
or
xchg
scas
and
leave
out
cmp
mov
shl
xchg
sbb
pop
in
idivl
mov
cmpsl
mov
sbb
add
push
lds
shll
pop
mov
aam
mov
sbbb
sbb
mov
push
out
mov
sbb
in
mov
adc
mov
mov
pusha
cmpb
shl
movsb
cmp
pop
sbb
aad
and
pop
les
mov
pop
lret
jno
movb
mov
fistpll
jno
sub
fs
js,pt
orb
mov
enter
fsubr
add
and
pop
xchg
mov
test
lock
adc
jl
jge
dec
scas
jmp
jns
dec
aaa
or
sbb
outsb
xor
push
add
lcall
push
cs
push
dec
xchg
mov
scas
outsb
sub
loopne
xlat
adc
test
jmp
call
lea
xor
xchg
mov
push
outsl
leave
and
mov
mov
fnstenv
outsl
scas
push
push
sub
out
in
or
in
jno
je
and
out
clc
fisttps
mov
cmp
ds
pusha
call
jbe
push
inc
xlat
dec
test
xchg
outsl
not
jno
mov
scas
nop
push
movsb
sbb
fs
cmpsl
cmp
pusha
dec
pop
ret
mov
sti
lods
jo
add
lea
dec
xchg
movsl
sbb
into
add
das
jnp
dec
sub
lcall
and
lret
xor
pop
cmp
fucom
push
add
inc
mov
jo
push
fldenv
xchg
ret
xchg
sarb
mov
pop
insb
out
leave
mov
jg
sahf
adc
xchg
pop
push
push
cmp
mov
or
sbb
pop
orb
mov
or
sti
adc
mov
adc
cs
loopne
int
in
lds
cmp
shll
pushl
add
sbb
scas
pop
lds
cwtl
insb
std
or
imul
inc
movsl
mov
add
outsb
fldl
and
fwait
sti
stos
cmc
das
popf
add
cmp
insl
fwait
test
fbld
add
add
iret
inc
cmpb
ficompl
xchg
cli
cmp
sub
or
xor
lds
sub
dec
pop
push
shrl
test
sub
push
xchg
push
inc
pop
jae
test
mov
data16
rcr
pushf
pushf
movsb
sti
inc
negb
or
add
mov
divl
mov
and
ss
scas
xchg
or
aad
int
add
fldcw
lahf
mov
decb
andl
cwtl
test
lods
mov
jl
fimull
pop
push
push
sbb
shlb
xor
xlat
xor
dec
loope
cmp
push
subl
mov
mov
pushf
mov
lock
shrb
shlb
cmp
mov
imul
pop
add
lods
fisubl
pop
arpl
cld
lods
mov
pop
jnp
or
movsl
cmc
enter
mov
mov
mov
push
dec
divb
push
or
add
icebp
pushf
loop
xor
adc
bnd
jp
nop
add
pop
sbb
jnp
fstl
scas
lds
bound
add
jecxz
fs
mov
sub
movsb
sbb
xchg
dec
push
xchg
xchg
aaa
push
iret
test
ljmp
sbb
pop
idivl
test
ss
jl
hlt
pop
test
cltd
imul
sbb
mov
cmp
and
shr
mov
into
loopne
lret
fwait
adc
sbb
movsb
cld
xchg
xlat
mov
xchg
or
lret
mov
dec
add
cld
push
jne
jae
aaa
lock
lods
pop
xor
push
cmp
in
je
push
outsb
testl
loopne
arpl
fbstp
arpl
pop
xorl
int
dec
outsl
ja
sbb
fcompl
mov
lret
jno
and
pop
pop
jb
sub
jo
sbb
xchg
dec
push
stos
in
xchg
pusha
pop
addr16
movsb
fst
adc
ljmp
jg
xchg
mov
jbe
lds
js
mov
push
mov
popl
jne
dec
das
push
xor
and
shl
pop
data16
xlat
int3
jno
dec
mov
daa
and
add
insl
fldpi
lods
push
sbb
or
push
push
add
leave
jae
push
decb
maxps
outsb
cwtl
jmp
imul
jp
sub
loop
rcl
mov
add
or
fists
push
les
adc
or
and
add
clc
mov
push
fcoms
adc
or
andl
jne
ss
xor
pop
add
jle
in
ret
mov
rorb
orl
mov
pusha
js
mov
dec
loop
lds
nop
jno
addr16
push
cmpsl
inc
sbb
dec
jns
inc
sarl
and
jecxz
lods
cltd
adc
cli
int
rorl
jb
xchg
fimull
mov
mov
bswap
into
out
sbb
bnd
pop
jmp
sub
cs
lock
out
add
xchg
mov
stc
outsb
push
mov
adc
cmpsl
shr
adc
xor
pop
or
adc
aad
int3
scas
ljmp
xor
ss
xor
inc
sbb
xchg
mov
mov
xor
test
cltd
out
imul
push
dec
dec
int
pop
mov
test
dec
mov
fistps
mov
mov
ja
ds
bound
xorl
cmp
jae
lret
pop
fwait
add
loope
jge
aad
inc
cmpsb
scas
arpl
popf
movsl
xchg
cmp
xchg
lock
in
sub
lahf
enter
fs
adc
movb
fadd
movsb
xor
push
adc
cmp
lods
mov
mov
push
xor
xchg
jg
outsb
jb
shll
bound
pop
mov
dec
push
jp
ret
leave
xor
inc
daa
movzbl
ds
mov
cld
fmull
and
aas
loopne
in
je
mov
lods
fnstenv
and
pop
xor
lahf
mov
push
fistl
pushf
lock
dec
shlb
lcall
adc
stos
cltd
scas
movsl
into
mov
outsb
jmp
outsl
int
mov
repnz
aam
insb
sbb
fsub
push
jb
imul
mov
mov
add
dec
and
repz
dec
js
xchg
out
jmp
mov
out
xor
lahf
idivb
lock
sbbb
call
daa
jp
movaps
mov
or
jmp
lods
pop
xor
add
dec
xor
jno
jge
ljmp
mov
push
jo
xchg
add
enter
add
lds
mov
dec
pop
loope
pop
testl
xor
sti
hlt
cli
pop
push
test
ret
cmp
ret
inc
add
stos
lret
sub
push
push
imul
dec
outsb
jo
jle
lret
cmp
jecxz
in
sti
or
fwait
adc
addr16
cmp
cs
or
sub
inc
sbb
and
and
mov
dec
sti
stc
in
shlb
fstl
shlb
mov
jnp
sbb
jg
xor
ljmp
jbe
adcl
mov
cltd
cmc
cmp
in
adc
cmp
dec
jl
mov
arpl
xlat
xor
cmp
in
ljmp
cs
icebp
aam
push
jo
xchg
fnstenv
jae
mov
cld
js
mov
movsl
lods
dec
xor
imulb
lcall
xchg
add
call
jne
mov
xor
btc
xchg
inc
loope
fistl
cli
inc
xchg
inc
fsubrl
xchg
xchg
test
cld
adc
xor
dec
or
dec
lcall
push
outsb
pop
xor
lcall
push
out
dec
mov
mov
push
test
rcll
xchg
lcall
add
jns
aam
mov
mov
mov
inc
sbb
push
sbb
cli
aad
inc
shll
data16
push
add
ret
cmp
lret
jecxz
push
loop
cmpl
cmp
adc
pop
data16
js
std
lfs
jno
ss
ficoms
xor
and
leave
lret
pop
shrl
popf
mov
push
mov
int3
mov
data16
mov
sub
pop
add
outsb
adc
rcrb
xor
adc
mov
sub
call
add
ret
push
mov
dec
fsubs
out
jae
call
cmp
mov
xor
add
jge
dec
cmp
dec
mov
in
xchg
icebp
lret
test
push
fcomps
mov
into
or
rolb
out
es
add
dec
sub
xchg
xor
pop
or
xor
loope
xchg
adc
inc
inc
fs
pop
insl
add
xchg
mov
movsl
jne
dec
dec
icebp
fistps
cwtl
rcr
push
dec
xor
push
enter
or
sub
mov
push
inc
jbe
push
jmp
add
mov
inc
cmpsl
and
out
addb
lret
jmp
cmp
pop
fwait
mov
lret
mov
in
xchg
fstpl
push
sbb
and
div
int
repz
pop
in
fcompl
xchg
push
leave
push
mov
ret
lods
popa
jmp
dec
jns
fbld
loop
dec
add
icebp
jne
insl
pop
outsb
adc
push
lds
call
fildl
mov
jnp
lods
out
mov
and
outsb
push
out
xor
xchg
mov
sbb
push
cmc
fdivr
cmp
and
mull
mov
mov
add
ret
insb
add
mov
outsb
jge
pusha
add
arpl
es
das
mov
sub
shll
cwtl
movb
imul
push
cmpsl
aad
or
push
iret
outsb
or
cwtl
int3
xchg
xchg
push
mov
adc
push
and
scas
ljmp
adc
push
xchg
add
sub
jno
mov
inc
pop
dec
push
fisttpll
stos
pop
sbb
out
rol
mov
cmp
cs
pusha
loop
sbb
xor
std
mov
cmpsl
dec
dec
sbb
insb
lds
mov
dec
not
pop
or
mov
jl
repz
fsts
imul
leave
xchg
decb
test
mov
repnz
mov
xor
or
dec
call
inc
ret
lcall
or
push
xchg
dec
test
add
fisubrl
std
fs
cwtl
cmc
jecxz
out
lcall
sub
add
inc
repnz
mov
xor
xor
jmp
push
ja
loop
mov
mov
jnp
in
shl
xor
icebp
fdivs
push
sub
fwait
xchg
iret
aad
lock
fldl
mov
sub
jle
jg
ret
daa
jg
cmp
dec
int3
add
jb
inc
loop
lea
mov
std
mov
sub
and
movsl
ficoml
inc
add
stos
or
iretw
clc
or
add
add
push
mov
xor
je
adc
inc
ds
push
adc
imul
cwtl
or
jne
js
ja
addr16
adc
mov
jmp
inc
mov
adc
or
test
lea
add
adc
sahf
bound
inc
lds
movsb
push
fdivrp
roll
or
jne
das
pop
xchg
xchg
jae
leave
and
xchg
jnp
dec
push
adc
adc
mov
pushf
fcmovb
bound
das
jno
mov
xchg
scas
jl
inc
js
xor
lea
xchg
dec
adc
shll
add
icebp
fstps
gs
mov
ret
add
out
arpl
test
mov
cli
dec
bound
lods
dec
adc
mov
xchg
dec
mov
inc
pop
es
faddl
ret
out
xor
push
jb
filds
xchg
in
mov
push
cltd
cld
push
cmp
mov
push
mov
sbb
popa
pop
xorl
fadds
in
sub
inc
lret
mov
data16
push
inc
xchg
push
div
dec
push
add
es
jp
sbb
push
loopne
ror
lock
movsl
mov
fadds
mov
loopne
sub
aas
loope
mov
test
or
adc
aad
subb
fucomip
loopne
jg
and
sbb
or
mov
cmpsb
and
mov
rorl
adc
cli
push
out
test
fistl
pusha
outsb
mov
aaa
jbe
adc
lcall
push
jnp
rcl
and
xor
das
pop
jg
pop
xor
shlb
mov
xchg
pusha
xor
mov
loope
cwtl
mov
loope
jmp
testl
dec
daa
mov
xchg
notl
mov
int
jp
push
mov
orb
inc
dec
addr16
cs
stc
add
pop
loope
dec
push
loope
jmp
arpl
mov
aaa
add
xor
xor
xchg
jno
adc
js
sub
lock
lds
mov
sbb
lea
scas
popf
lds
push
sahf
cli
rolb
jle
inc
rcrl
fidivrl
fistl
dec
sub
add
or
loope
notb
inc
lock
xchg
jp
xchg
outsb
mov
mov
and
inc
outsb
inc
add
sub
sbb
dec
inc
insb
addl
ds
lret
xchg
test
cmc
jnp
into
pop
int
out
insl
leave
fsubr
jg
pop
sbb
inc
imul
pusha
add
rcr
sbb
dec
lods
xlat
jae
and
xchg
cld
sub
and
mov
push
xchg
mov
and
test
mov
add
cmp
rorb
mov
test
fidivrs
sbb
add
lock
pop
out
out
mov
popa
cltd
xchg
jo
pop
js
mov
andl
mov
cmp
xor
andb
in
into
add
mov
ja
jno
adc
inc
jmp
in
mov
roll
mov
push
or
sub
repz
pop
movsb
jno
int
fisubl
cmp
or
stos
jp
mov
test
loope
fsubr
inc
lods
xchg
cmpsl
sahf
push
inc
mov
mov
push
sub
scas
fisubs
ret
mov
lret
lds
inc
mov
cmp
fisttpl
sub
sub
jmp
scas
pushf
fs
mov
sbb
aam
out
rorb
push
es
incb
mov
and
pop
cmp
andl
shr
pop
imul
xchg
inc
outsl
xchg
int3
enter
mov
adcl
inc
sbb
daa
xor
popl
outsl
int
xchg
cld
sub
testb
add
scas
inc
ja
mov
add
pop
xor
aad
scas
xlat
lea
gs
xchg
pop
outsb
add
cmpsl
ds
hlt
cmp
scas
mov
rcll
ds
pop
lcall
add
sub
cld
sti
add
movsb
test
in
arpl
pop
loope
add
fsubrs
incb
mov
lahf
mov
arpl
jge
jmp
or
xchg
xor
sbb
xchg
shll
sub
mov
lods
in
enter
loop
shrb
xor
les
je
ret
fcoms
negb
xchg
jle
in
push
nop
loopne
aam
in
test
mov
mov
outsl
or
pop
outsb
aad
addr16
adc
xor
inc
leave
lahf
sub
iret
int
popa
or
dec
push
and
int3
std
stos
mov
jp
frstor
lahf
mov
sub
dec
scas
xchg
int3
stos
mov
test
sub
insb
pushf
rcll
into
and
sahf
sbb
mov
shl
dec
xor
pop
pop
jbe
push
popa
pop
sbb
pop
dec
mov
imul
data16
add
sub
add
repz
daa
insl
pop
lret
fucom
and
imul
in
push
aaa
sub
cmp
pop
leave
or
lock
jae
dec
pop
cmp
sub
and
pop
and
mov
pop
fsubrs
fdivl
clc
or
mov
popa
aad
lods
enter
orps
push
pop
ss
dec
shrl
xor
insb
repz
dec
dec
jecxz
mov
je
orb
loop
add
fnstsw
adc
mov
int3
int
mov
test
inc
mov
fists
and
je
insb
push
shrb
jns
addr16
lods
xlat
mov
sti
mov
sbb
add
xchg
dec
gs
cmp
loopne
or
jns
dec
pop
arpl
mov
push
and
mov
or
lcall
aas
lret
mov
add
sub
adc
pusha
fidivs
leave
clc
cmp
loop
test
xor
xor
in
ret
pop
in
ret
dec
xchg
sti
mov
dec
inc
iret
les
loopne
test
dec
pop
xchg
jne
repz
pop
sub
int3
insb
mov
dec
dec
pop
rcrl
hlt
imul
adc
add
lahf
mov
js
xchg
cmp
movsl
lock
xor
mov
iret
movsl
jle
inc
fsub
xor
add
insl
pop
inc
mov
push
adc
ror
jbe
sbb
sarb
sub
xchg
repz
test
outsb
ja
cld
insl
dec
inc
mov
outsl
adc
stos
std
mov
jmp
fnstsw
loope
fsubr
pop
inc
mov
adc
fsubl
push
adc
add
iret
outsb
lock
insb
dec
dec
shll
pushf
push
pop
pop
inc
pop
test
js
sbb
sub
sub
push
addl
cmpsb
int3
and
cld
xchg
and
daa
pop
pop
icebp
lahf
mov
rcrl
pop
les
and
repnz
push
jae
andb
jecxz
jbe
xor
cmp
cmp
aad
mov
sbb
xchg
mov
jnp
stos
repz
mov
ret
dec
add
xor
in
in
repz
jecxz
ss
fnstsw
jg
data16
or
fdivrl
push
icebp
rcrb
mov
jg
mov
pop
test
adc
lds
push
dec
xlat
inc
lret
mov
xor
in
dec
lret
cmp
xchg
je
push
sahf
push
mov
pop
mov
add
mov
adc
fmuls
jg
outsb
push
adc
in
pop
ret
push
inc
repz
cmpsb
mov
ljmp
cmpsl
xor
adc
or
dec
movsl
shrl
push
and
out
mov
rcrb
and
jb
xchg
lahf
lcall
fldlg2
stos
cmp
add
lods
mov
sub
cmpsb
jge
jmp
sub
sbb
repnz
enter
xor
xor
mov
adc
gs
sub
xchg
cmp
aaa
fs
mov
and
imul
or
movups
sbb
cli
rcrl
pop
xor
lcall
jnp
shll
imul
cmpsl
add
xchg
mov
jle
push
sub
sbb
es
mov
inc
fwait
into
rcrb
lock
test
insb
xchg
sarb
mov
negl
xor
jmp
fnstenv
push
dec
clc
mov
mov
std
ret
shrl
mov
pushf
test
out
mov
hlt
out
popa
and
scas
fs
scas
sbb
outsl
xor
xchg
inc
cmp
adc
mov
mov
inc
dec
inc
in
sahf
xchg
imul
pop
cmpsl
popa
jns
in
inc
movsb
call
pop
movsl
or
xchg
lds
or
rol
add
mov
xchg
and
or
mov
test
orb
pop
repnz
pop
in
add
xor
lock
mov
jge
sti
rorb
popf
push
out
idivl
sbb
mov
mov
adc
mov
cwtl
mov
cmpsb
jne
movsb
sti
mov
jmp
fwait
hlt
pop
or
jle
mov
enter
test
push
push
popf
cld
add
sbb
dec
jle
imul
add
js
pushf
stc
out
shll
test
xchg
repz
cmc
adc
add
mov
test
dec
pop
push
push
mov
adc
adc
les
adc
xor
int
pop
cmc
ljmpw
shll
xor
xchg
mov
mov
mov
xchg
data16
sbb
inc
cpuid
sub
and
mov
sbb
fisttpl
cmpsb
xchg
jne
dec
rorb
adc
nop
cmpsb
repz
pop
stos
jns
inc
loopne
jo
pop
push
iret
cld
push
fbld
les
sarl
adc
mov
lods
enter
push
decb
gs
cld
sub
mov
shll
pop
push
adc
in
lea
push
sbb
jno
and
dec
cmpsl
lahf
jmp
mov
movsb
xchg
mov
jno
and
in
dec
inc
or
addr16
fdivr
into
cmp
sub
pop
inc
fcomps
fbstp
fsub
cli
inc
lcall
adc
inc
lret
push
pop
loope
mov
cmp
jle
test
or
sahf
add
lahf
sbb
mov
shll
aad
add
leave
sbb
pop
lea
sub
pop
flds
js
pop
add
jne
dec
adc
push
repnz
les
add
pop
push
sub
sub
xchg
cli
ljmp
mov
mov
pop
loope
jp
pop
pop
inc
out
popa
sbb
shll
push
pop
arpl
cmp
adc
sbb
or
mov
jae
push
jne
jb
aas
ds
rol
mov
mov
push
adc
sbb
js
loope
adc
lea
mov
lods
sub
push
add
outsl
jmp
aas
adcb
pop
mov
int3
ljmp
jo
insb
imul
push
xor
aam
mov
or
mov
and
pop
rcr
je
fimull
pop
add
fwait
dec
dec
mov
or
and
push
cltd
loopne
pop
cld
stos
dec
movsl
mov
or
in
mov
movsb
je
jecxz
xor
xor
gs
mov
inc
jg
push
mov
mov
out
rcr
mov
gs
scas
mov
cltd
scas
stos
shlb
xlat
xchg
aad
dec
or
stos
enter
mov
push
dec
dec
mov
xor
cltd
pop
movsl
les
adcw
ret
or
push
jae
pop
rorl
aad
loope
sti
pop
adc
and
js
mov
mov
repnz
andl
push
loopne
dec
fisttps
push
stos
xor
sbb
jno
das
pusha
dec
push
bound
popa
pop
test
dec
das
add
lock
pop
sub
mov
lea
sbb
imul
xchg
in
fisttpll
xchg
mov
add
mov
mov
pop
inc
pop
pop
bnd
jbe
pop
cli
sbb
fisttpll
inc
scas
or
stos
in
adc
and
lods
int
jo
and
jecxz
push
or
fcoml
sbbb
lret
sub
nop
loop
cmp
stos
lret
xor
out
jecxz
or
mov
push
mov
sbb
add
lods
add
cmp
cwtl
scas
loope
mov
push
push
add
mov
icebp
pop
adc
ds
stos
cmpl
fdiv
js
add
xchg
pop
js
jle
data16
insb
add
add
hlt
jns
jns
outsl
mov
push
xchg
testl
stc
cmp
pop
dec
mov
lds
leave
sub
shrl
mov
pop
xor
cmp
jl
popf
add
jle
cwtl
mov
lahf
jmp
insb
or
jnp
dec
and
iret
jno
push
fcoms
push
ss
mov
xor
imul
sub
les
test
adc
mov
dec
xor
daa
or
stos
es
or
sbbl
mov
jp
lods
inc
lea
push
jnp
test
mov
dec
sbb
mov
dec
imul
cmpsb
mov
repnz
xchg
pop
int3
add
in
mov
sub
cmc
int3
loope
cmp
mov
cmpsb
ljmp
rorl
addr16
inc
sbb
sbb
dec
aad
cmp
jno
sbb
mov
push
sti
pop
pop
cltd
scas
push
fwait
push
push
lods
shll
xchg
leave
in
ljmp
out
imul
mov
in
sub
cmp
dec
jne
out
sbb
pop
push
sbb
ficomps
lods
lret
loopne
sub
imulb
and
outsl
xchg
add
pop
or
jl
mov
add
mov
cmp
stc
std
test
push
shrl
pop
fcmove
je
cmc
jno
out
cmpsl
xor
jl
cmp
shrl
lods
jne
or
lods
cs
xor
pop
frstor
jg
mov
mov
jmp
inc
out
rorl
testb
ja
xchg
in
into
jns
cltd
scas
inc
into
fmul
insb
cltd
add
cmpsl
aad
lcall
jb
loop
ja
mov
js
push
ret
mov
mov
add
ds
and
cmp
cmp
out
mulb
insb
fs
jae
inc
fucomi
test
jp
and
xchg
adc
pushf
add
adc
lds
and
ret
push
dec
mov
pushf
mov
int
push
push
xor
jmp
rolb
arpl
lret
jmp
jp
adc
adc
cmpb
mov
pop
sbb
mov
pop
mov
stos
clc
decl
xor
push
pop
mov
bnd
imul
inc
dec
cmp
mov
in
and
push
add
dec
ficompl
and
jle
pop
das
or
jl
inc
push
xor
repnz
stos
jb
and
xchg
ret
loop
pushw
je
mov
and
stc
das
pop
gs
mov
lret
dec
fcomps
cld
out
ss
pop
int3
sub
js
add
lea
fwait
in
in
sbb
insb
mov
or
push
mov
xchg
jb
insl
ljmp
sarl
ja
sub
cmp
add
dec
retw
ja
rorb
fcoms
push
fmul
dec
sub
test
jns
push
test
in
xchg
add
orb
testl
push
jge
sbb
xor
add
insb
orl
or
jl
scas
fsubrl
mov
rcrl
add
out
je
pop
fistpl
pop
pop
imul
in
jae
clc
repnz
pop
pop
dec
test
add
imul
addr16
jae
mov
add
dec
xchg
adc
inc
in
jecxz
xor
xor
popf
xchg
iret
fisubs
stos
aas
popa
lahf
push
dec
cmpsl
mov
shll
call
mov
jnp
fcoml
jle
fs
aaa
adc
add
mov
jae
daa
sti
stos
daa
mov
pop
mov
pop
add
enter
out
nopl
loop
xor
shr
lret
sbb
in
lret
xchg
outsb
idivb
mov
cmp
xchg
pop
mov
adc
loop
xchg
mov
imul
insb
ffree
push
mov
xor
cmp
push
adc
cmp
out
or
adc
scas
jno
mov
pop
push
shrl
daa
jo
subb
sbb
loopne
pop
dec
pop
sbb
call
scas
pop
idiv
dec
ljmp
arpl
lret
imul
pop
movsb
test
int3
outsb
dec
lret
stc
add
aas
mov
outsl
shlb
iret
rorl
xor
pop
add
sub
pushf
int
push
ds
inc
mov
push
ja
addr16
enter
inc
pop
jne
inc
mov
mov
pusha
sahf
fisubl
adc
cwtl
subl
pop
xor
sbb
add
pop
mov
leave
pop
jle
jno
mov
mov
std
test
mov
xchg
mov
sub
ret
das
inc
pop
nop
inc
mov
es
xor
idivb
movsl
pop
loopne
pop
lahf
out
sub
mov
xchg
push
mov
pop
or
adc
push
or
and
lods
mov
ret
jnp
scas
lcall
scas
mov
lret
sub
mov
icebp
sub
mov
movsb
mov
add
xchg
sub
iret
jo
cmpsl
fstpl
mov
dec
imul
sti
xchg
sti
loop
daa
popa
sahf
std
mov
dec
jno
push
xor
inc
mov
dec
mov
push
sbb
ljmp
adc
or
cmc
shrb
insl
dec
mov
jecxz
aaa
push
xchg
sbb
popa
cmp
jg,pn
xchg
mov
pop
sbb
loope
push
cmp
sbb
push
arpl
out
fs
jno
iret
into
pop
jbe
sarb
jge
mov
jb
aas
sbb
iret
int
lcall
lock
test
xchg
push
adc
js
push
scas
gs
enter
jbe
or
je
aaa
jp
jecxz
fs
les
repz
xlat
inc
insl
inc
and
or
or
cli
int3
xchg
pop
or
sbb
sti
fadds
mov
orl
lods
cmpsb
push
or
sti
mov
mov
pop
inc
lret
push
mov
aad
push
jb
gs
cltd
xchg
cwtl
orb
mov
mov
fs
in
and
sahf
mov
flds
push
sub
out
fimull
xchg
sbbb
dec
dec
inc
mov
scas
icebp
sbb
mov
lock
pop
push
dec
test
cld
inc
pop
int
sbb
ret
xor
add
pusha
fimuls
enter
and
mov
lock
push
dec
xchg
iret
or
inc
sub
ss
and
fadds
addl
push
scas
push
ljmp
xchg
push
outsb
mov
out
adc
test
or
mov
shrb
push
xchg
sub
lea
cmp
mov
dec
pop
cmp
stc
sub
mov
in
mov
scas
rolb
and
cmpsl
cld
adc
enter
addr16
mov
pop
icebp
fisttps
stos
lret
les
add
test
imul
dec
stos
inc
cmp
aas
mov
or
shlb
push
mov
loope,pn
push
lods
xor
xchg
mov
call
mov
mov
adcl
xchg
test
adc
inc
sub
shll
fwait
dec
push
adc
je
push
dec
pusha
adc
popf
lret
mov
cltd
test
inc
aaa
int3
add
fidivs
mov
cs
inc
mov
jp
das
fdivr
adc
sub
inc
std
inc
adc
mov
in
rcl
data16
pop
push
insl
mov
scas
sbb
mov
xchg
fimull
add
sub
sub
bnd
aaa
xor
scas
or
push
outsl
in
inc
int3
inc
outsb
repz
into
nop
popf
add
jl
xor
addb
inc
imul
shlb
cmpsb
andnps
dec
and
mov
mov
shlb
mov
std
sub
dec
inc
mov
lods
jbe
jns
cmp
dec
push
stc
fwait
ss
mov
loopne
popl
movsb
fs
and
adc
int3
iret
or
sub
mov
inc
mov
out
cwtl
leave
fs
fsubrs
jle
imul
and
add
dec
fcmovnbe
fwait
hlt
push
xchg
jb
faddl
in
into
fdivs
pusha
mov
lret
nop
enter
cmpsl
dec
jmp
fwait
pop
fbld
and
cmpsb
leave
in
ret
shl
ret
iret
cmpxchg
stos
jmp
and
dec
cmp
dec
gs
sub
add
ds
cwtl
jmp
lds
addr16
or
push
adc
mov
clc
int
lahf
fsubrl
adc
std
mov
add
rorl
sub
xchg
rclb
mov
xchg
fstpt
and
cltd
jl
andl
and
mov
xlat
xchg
xor
sbb
or
outsl
pop
cltd
jno
pop
aam
outsl
inc
inc
xor
adc
loope
fdivr
addr16
pop
insl
xchg
out
lods
insb
mov
shrb
xchg
gs
loop
test
mov
lcall
ja
sub
pusha
int
cli
dec
sbb
lret
sub
jnp
xor
hlt
push
lcall
rorl
ljmp
jns
jne
daa
adc
push
mov
mov
inc
dec
outsb
and
fcmovnb
test
pushf
js
sub
add
cld
xor
roll
xor
pusha
dec
in
shrl
cltd
int
xor
sub
leave
add
scas
or
subl
orl
push
pop
inc
lcall
test
cld
cmp
popa
dec
mov
jmp
lcall
pop
and
mov
adc
add
adc
xchg
stos
adc
adc
test
cmp
and
jg
jg
xchg
js
sub
arpl
or
out
mov
std
mov
push
xchg
mov
mov
push
lock
dec
shll
jb
xchg
jns
push
add
push
popa
aam
aas
lcall
cli
les
hlt
or
adc
push
jecxz
sbb
fcoms
repz
in
mov
cmp
lods
push
sbb
fistps
jo
outsb
ja
jbe
cmp
pop
dec
cmp
imul
mov
lret
fdivrs
int3
mov
xchg
pop
xor
les
popf
or
fs
mov
inc
fisubrl
sti
iret
adc
mov
movsb
enter
ss
pop
add
enter
popa
daa
int
out
sbb
cmpsb
loope
or
and
pop
sub
mov
dec
out
scas
lahf
add
xor
sbb
loopne
xlat
dec
mov
insb
jmp
dec
cmpsl
loopne
add
shrb
dec
xchg
mov
test
sbb
dec
mov
adc
icebp
es
pop
or
sbb
sti
push
sub
sbb
cmpsl
dec
xor
cmp
xor
or
or
pop
mov
int3
flds
in
pop
or
notl
vhsubpd
and
pop
icebp
aaa
jmp
das
je
xchg
dec
adc
push
es
fstps
aaa
dec
xor
push
xlat
adc
dec
xchg
sbb
fwait
pop
and
je
jecxz
cmpl
cmpsl
dec
ret
dec
addr16
int3
bound
mov
outsl
add
notl
or
out
popf
ds
mov
mov
cmp
sarl
mov
cmp
mov
movsb
aad
mov
rorl
push
sub
adc
add
les
jmp
dec
int
pop
sub
mov
pop
out
push
inc
or
push
jo
mov
stos
stc
imul
adc
ret
xor
or
xchg
daa
arpl
push
mov
mov
xchg
mul
mov
and
or
and
push
fiaddl
cmp
rolb
lret
mov
ljmp
pusha
out
dec
mov
dec
lret
and
dec
das
cmp
mov
loope
lret
mov
mov
gs
sbb
mov
inc
add
ffreep
push
and
gs
jp
push
lds
popa
and
cmp
push
aaa
jno
jle
int
push
xor
cmp
rcl
loopne
mov
std
mov
mov
adc
pop
pop
movsb
xor
cwtl
jne
imul
xchg
fmull
leave
cmc
pop
imul
fcmovb
inc
decb
stc
mov
sub
lods
add
dec
inc
pop
aam
push
dec
mov
leave
add
pop
shrl
in
repz
sub
dec
adc
mov
xor
sub
fcompl
inc
mov
scas
sub
xor
lds
push
sarl
js
pop
fdivr
test
xchg
jns
or
shl
pop
out
jne
nop
jne
popf
ss
scas
push
or
roll
fnstsw
push
pop
es
dec
ja
mov
stos
mov
cwtl
mov
dec
jne
ret
or
push
es
push
mov
push
mov
movsl
mov
pushf
xchg
movsl
sbb
jg
mov
push
adc
jmp
add
cld
xchg
or
mov
sbb
ds
mov
inc
jp
mov
cmc
dec
sar
cs
jp
adc
imul
inc
imul
xchg
popa
ds
out
mov
mov
dec
pop
add
jle
adc
aaa
xlat
jl
mov
cmp
pop
xlat
mov
mov
and
jo
lret
stc
insb
js
mov
loopne
outsb
push
sarl
push
paddusw
cmp
sbb
and
out
push
arpl
outsl
xchg
mov
cli
xor
scas
inc
stos
aad
lcall
lods
and
push
repnz
repz
sbbl
mov
nop
dec
in
incb
xchg
int
dec
jno
push
mov
and
push
mov
push
mov
jl
sahf
adc
push
jg
sub
lret
hlt
stc
dec
jecxz
add
das
imulb
push
push
cmp
xor
pop
icebp
push
daa
data16
push
shrb
inc
adc
mov
push
jbe
jl
xor
ret
loop
aad
in
ret
scas
cmp
ljmp
sub
xor
mov
call
fnsave
push
aam
test
test
sbb
mov
fisubrl
push
push
lret
xchg
add
cmp
dec
outsl
cli
cmp
fwait
aaa
add
imul
xchg
cmovl
adc
lea
mov
and
jle
mov
pop
test
fidivrl
cmp
mov
aad
sahf
ret
mov
pop
sub
imul
sbb
jg
adc
pop
stos
push
aaa
pushf
mov
into
std
and
icebp
sub
iret
cwtl
adc
xchg
inc
jnp
arpl
push
add
loopne
mov
jmp
or
or
popf
nop
or
and
out
ret
fwait
in
jae
sti
test
jno
and
mov
gs
adc
jg
or
cwtl
sti
cltd
dec
xor
add
fldt
adc
rolb
push
push
mov
mov
sbb
jecxz
dec
out
cmpsb
or
mov
cltd
jmp
cmp
push
xor
jp
aas
mov
cmp
sbb
xor
sbb
mov
or
lds
xchg
and
jecxz
ja
fdivr
sbb
rclb
push
fld
xchg
add
fcmovnb
arpl
dec
dec
push
add
popa
cltd
mov
repz
sub
inc
pop
mov
aam
push
or
add
sti
pusha
leave
push
adc
and
pop
insl
sub
mov
loop
aaa
push
outsl
clts
or
mov
xor
push
lds
repnz
xchg
mov
sub
fs
dec
ja
shll
pop
sbb
xchg
adc
mov
inc
mov
imul
sub
jl
inc
pop
push
and
lret
sbb
sbb
jne
push
shlb
lock
jge
dec
fcoml
mov
dec
andb
mov
outsb
mov
mov
mov
repnz
mov
ret
jle
push
sub
xor
adc
shll
dec
cmp
clc
imul
sti
xlat
xchg
repz
or
mov
xchg
fs
pop
pushf
les
add
cmp
arpl
into
adc
sbb
add
insb
fsubr
das
rcll
cmp
divb
inc
sbb
insl
cmp
sarb
jo
fisttpl
shl
in
cmp
cmpsb
fs
sub
scas
mov
repnz
mov
fisubs
sub
dec
out
in
and
adc
iret
jmp
stc
stos
rol
xor
adc
lahf
fsubrs
or
sbb
pop
ret
adc
int3
push
cmp
gs
push
pop
das
and
fwait
jge
pop
jnp
cltd
ret
bswap
xor
xor
js
out
push
test
decl
pop
adc
int
pop
frstor
ret
mov
sarl
lods
jmp
adc
vrcpss
cmc
xor
pushf
cmpsb
jl
lret
stos
push
push
jb
mov
scas
nop
ret
shl
pop
shll
fldenv
inc
pop
cld
dec
jecxz
out
and
lcall
push
add
pop
rolb
in
pop
push
jno
testb
xor
rorb
dec
lods
jnp
cmpl
out
test
xchg
mov
dec
cltd
xchg
pop
test
xchg
mov
pop
nop
or
lods
mov
imul
ljmp
enter
lcall
push
inc
inc
adc
jae
push
mov
in
fidivrs
fisttpll
pop
lret
sub
sbb
movsl
out
cmpsb
jl
sub
and
lds
push
xchg
fsubp
mov
hlt
cmpsl
push
out
mov
out
or
mov
push
add
aam
xor
daa
in
adc
mov
out
std
add
adc
loop
scas
dec
pop
sbb
movsl
imul
in
cmp
outsl
fstl
out
scas
ficoms
jb
dec
loop
fiadds
mov
js
push
dec
sbb
addr16
loope
jns
stos
inc
fld
jl
fwait
call
xchg
insb
push
imul
movsb
sbb
out
lcallw
jns
loope
xor
xchg
fstpl
insb
xchg
cmp
cmp
orb
vmwrite
mov
inc
lahf
sti
jp
push
ret
in
ljmp
lcall
movsl
jno
or
sub
int3
jmp
bnd
mov
or
fs
test
inc
dec
test
mov
iret
push
notl
std
and
aam
sub
loope
xchg
ret
sbb
loop
jo
jl,pt
jo
dec
add
test
ljmp
aaa
gs
sbbb
mov
lods
inc
or
test
add
leave
push
je
cli
mov
sbb
nop
adc
test
adc
xchg
jae
out
scas
icebp
push
xchg
mov
fildll
lret
cwtl
insl
in
stos
stos
bnd
add
popa
or
pop
je
jnp
pop
test
cmp
enter
push
xor
push
jecxz
push
or
in
insl
movl
daa
xorb
sub
imul
rclb
popa
sub
push
sbb
cmp
sarb
xchg
test
test
add
int
std
add
dec
pushf
mov
subb
insb
push
shrd
and
add
mov
jns
test
and
sub
mov
shlb
stc
lods
out
jl
or
jnp
cmpsb
inc
inc
and
flds
lret
subl
xchg
pop
in
push
and
xchg
imul
clc
jmp
in
xchg
stos
shlb
mov
pop
mov
mov
in
outsb
scas
or
fdivrs
xchg
jg
mov
and
pusha
addl
loopne
lds
rcll
dec
mov
not
mov
rcll
xchg
push
jns
je
add
push
xor
hlt
jecxz
dec
adc
ret
mov
jnp
and
mov
sbb
and
sbb
dec
in
leave
jo
fcompl
add
sub
adc
lock
mov
scas
sub
mov
test
mov
adc
mov
mov
adc
mov
popf
push
dec
out
jge
cmp
pop
jmp
cli
sub
sub
xchg
pop
fstpt
out
xor
sub
scas
pop
adc
stos
mov
inc
mov
xlat
mov
pop
orl
pushf
push
aaa
sub
add
xchg
mov
sar
and
xlat
jmp
dec
imul
push
outsb
lcall
call
or
fisubl
rcrl
cmp
dec
mov
rolb
sbb
or
push
push
mov
add
mov
sub
aad
out
in
pop
repz
or
fcoml
pop
jecxz
loop
subl
xor
lods
jl
sarb
or
mov
test
sarb
mov
mov
sbb
push
cmpl
ficoml
push
and
aam
and
lret
xchg
fisttpl
addb
or
test
xor
pop
xorb
test
ja
fdiv
mov
dec
roll
hlt
hlt
cmpsl
shlb
mov
push
pop
jae
daa
scas
jmp
jmp
xlat
ja
add
je,pn
xor
mov
xchg
inc
test
push
push
sbb
stc
xchg
repnz
xchg
jl
sti
sarl
mov
fnstenv
in
fidivrs
push
fcoms
clc
ss
sbb
cld
outsb
in
push
dec
push
jge
fs
fcomip
jmp
pop
adc
repnz
fs
cwtl
jmp
pop
movsb
jp
ficompl
pop
jbe
xor
test
mov
adc
sahf
loope
dec
sbbb
ret
inc
je
andl
adc
xor
std
lods
jbe
add
sbb
pop
sbb
jle
sahf
testb
jb
loopne
xor
ret
xorb
jmp
pop
cwtl
ficoml
pop
adc
outsb
ret
sbb
dec
leave
add
or
adc
ds
jl
cmp
loopne
lret
push
shrl
test
lret
mov
loope
mov
inc
xor
loop
push
and
jae
lret
stos
ret
mov
xchg
dec
pop
sbb
stos
push
das
sub
and
push
add
jbe
push
imul
fidivrl
sbb
cmp
in
mov
xor
adc
jns
xchg
pop
dec
stos
xor
xchg
xor
cmp
mov
popf
mov
mov
push
shl
fldt
inc
inc
fistl
movaps
dec
bound
hlt
mov
je
cmp
cmp
cltd
adc
das
fcmovne
cmp
fisubl
pop
mov
jno
and
ret
dec
xchg
das
or
mov
popa
jp
push
pop
mov
repz
pop
jae
sbb
mov
scas
outsb
inc
or
xchg
pop
in
jle
rcrb
sbb
add
cli
out
dec
adc
in
mov
pop
call
das
xor
das
mov
loopne
pop
pop
out
sub
inc
jp
xchg
jmp
xor
mov
sub
stos
scas
mov
inc
out
inc
and
xor
imul
repz
sbb
push
add
or
out
sub
lea
andb
mov
mov
xlat
cli
in
movsb
cmp
mov
int
push
jb
xchg
xchg
in
mov
mov
ljmp
mov
pop
out
in
xchg
call
dec
mov
cs
sbb
in
xchg
sub
push
insb
mov
aam
mov
sahf
fstl
or
test
rorl
xlat
lea
cmp
cmp
cmpsl
cs
mov
dec
dec
pusha
mov
xor
jae
jp
in
sbb
push
jge
out
sub
sub
jns
ljmp
arpl
dec
aad
in
inc
fisubrl
jg
adc
jg
test
cltd
out
or
inc
mov
insb
push
sub
add
loop
mov
pop
pushf
shr
lds
mov
rcr
loop
es
lock
in
stc
mov
adc
sub
jecxz
rcrb
icebp
inc
adc
mov
xchg
xor
jmp
xchg
push
and
fwait
subl
lods
mov
push
fsubrl
fsubr
cmp
xor
push
xlat
popf
dec
add
ja
jle
jbe
add
push
call
imul
movsl
cmc
push
mov
mov
mov
inc
xor
or
jb
fstpt
bound
cmpsb
dec
enter
cltd
sti
xchg
aam
lds
mov
mov
in
sub
dec
jnp
pop
add
loop
mov
iret
incl
sarb
xchg
push
insb
cmpb
xchg
pop
repz
push
add
adc
mov
stos
in
xor
and
out
adc
sbb
nop
pop
and
in
adc
mov
aam
push
sub
adc
shll
rcr
testb
sub
mov
sub
xchg
cs
mov
aam
mov
xchg
subl
or
mov
dec
cmp
cmp
stc
and
stos
fisubrs
scas
mov
into
xchg
add
adcl
and
adc
sbb
sub
rorb
out
sub
addr16
push
pop
jne
sub
lcall
in
cmpsb
shlb
fnstenv
sarl
pop
imul
mov
xchg
test
push
xlat
pop
mov
clc
fwait
das
je
in
push
inc
push
mov
xchg
jne
call
pop
outsb
int3
sbb
mov
pop
cld
pop
lahf
in
xchg
cmp
sub
inc
mov
fs
adc
xor
test
mov
jge
mov
add
cmp
repz
xchg
mov
cmp
xchg
mov
les
push
pop
mov
jnp
add
ja
jo
add
ret
je
stos
jle
filds
addr16
cmp
mov
jl
bound
bsf
mov
mov
rcl
leave
dec
cmc
dec
xchg
sbb
aam
xchg
dec
jge
dec
xor
stc
popaw
xchg
scas
push
cs
dec
jecxz
loope
push
push
movsl
mov
aas
mov
cld
cmp
cli
push
mov
mov
dec
mov
js
push
outsb
mov
push
loop
inc
mov
jecxz
pop
push
sub
xchg
aas
in
xchg
lea
shlb
in
mov
cmp
in
scas
test
sub
mov
inc
lea
test
xor
and
fs
push
mov
nop
dec
jne
fcmovne
imul
cmp
pop
cmp
adc
jbe
insl
mov
rorb
mov
ss
pop
and
mov
inc
imul
fisttpl
shlw
xchg
jl
arpl
stos
sbb
push
and
int3
jg
add
adc
std
sbb
jns
pop
jge
test
adc
push
pop
xchg
inc
loopne
iret
mov
clc
mov
es
push
cld
mov
clc
shl
movsl
mov
shrb
iret
inc
movsl
rol
scas
daa
imul
adc
clc
push
cmpsb
mov
insb
loop
push
gs
cmp
std
je
and
dec
xor
sub
mov
cmp
pop
lods
adc
cmp
dec
xchg
mov
lds
stos
negb
ret
fadd
push
pop
ds
mov
aas
mov
inc
pop
cmpsl
jmp
add
cwtl
les
mov
inc
test
mov
mov
push
mov
mov
or
inc
push
fcompl
lahf
hlt
jg
repnz
repz
sub
orl
scas
ds
push
sahf
cmp
lahf
xchg
push
jne
call
mov
rcrl
jp
mov
push
mov
mov
jmp
repz
gs
iret
pushaw
mov
or
and
lock
bound
mov
xor
lret
loopne
sub
push
sub
mov
sbb
daa
sbb
iret
mov
mov
loopne
xor
loopne
pop
addb
or
jp
mov
lods
jno
hlt
jo
ss
repz
dec
fcomi
fisttpl
xor
sti
mov
jl
inc
adc
rcrb
fisubrl
cwtl
xchg
mov
jo
in
enter
lods
jns
jno
shll
push
mov
arpl
cltd
lret
js
into
aam
xchg
loopne
lods
push
notl
and
loop
in
pcmpgtb
adc
js
mov
add
cmp
aad
lea
add
repz
fistps
mov
xor
mov
rcrb
xchg
add
jp
sbb
xor
rcll
adc
sbb
movups
lods
xor
test
daa
lret
aaa
adc
ret
pop
cmp
stc
out
lahf
add
negb
jb
fimull
jmp
adc
fwait
sbb
sub
mov
add
or
fdivrl
push
sbb
add
sub
fists
sub
sahf
test
pushf
ja
add
mov
imull
xchg
lods
or
mov
lret
fsts
test
or
addr16
leave
test
lods
xchg
arpl
sarl
jae
ret
int3
or
scas
int
test
js
mov
scas
cmp
in
scas
add
and
sbb
std
insl
pop
jne
orb
or
xor
leave
in
push
push
daa
pop
push
lahf
xor
push
in
jns
into
mov
jae
mov
mov
mov
lods
inc
mov
fldcw
add
cmp
push
inc
outsb
rcrb
rcrl
sub
scas
fcomps
iret
int
popa
daa
dec
sub
movsb
lods
gs
les
sbbb
jne
xor
cmp
divb
fisttps
add
push
push
out
sbb
iret
fcmove
jle
cmp
sarl
xor
sbb
in
daa
jge
lods
dec
imul
cli
sub
jp
pop
pusha
inc
push
mov
xchg
fs
lods
xor
or
cmc
inc
push
js
push
les
cli
pop
sar
dec
shll
test
mov
cmp
js
fistpll
out
push
hlt
gs
or
std
dec
aad
add
or
pusha
int
cmpl
pop
adcl
dec
push
adc
aam
pop
push
xchg
dec
test
cmp
inc
icebp
mov
sbbb
adc
jno
cmp
dec
push
ljmp
sub
sbb
outsl
cmp
sbb
ret
subb
stos
into
mov
shlb
xor
mov
scas
bound
out
das
std
in
inc
cmpsb
fists
xor
into
subl
mov
sbb
pop
pop
sub
arpl
jae
in
andb
cli
ljmp
adc
rolb
das
jl
cmpsb
roll
stos
jb
jne
sahf
jae
mov
lea
push
sbb
xor
jo
std
push
cli
push
inc
fstl
ljmp
js
loopne
cmc
arpl
ljmp
les
fistps
and
xchg
cmp
fcomps
clc
rcrb
aam
adc
iret
repz
cwtl
or
inc
sarl
jns
xchg
adc
clc
std
mov
sbb
test
dec
push
jecxz
rolb
mov
cmp
and
fbld
shr
repz
mov
ljmp
xchg
ljmp
jecxz
ficompl
push
cmp
jne
mov
in
push
mov
sub
insl
test
lods
pop
jecxz
lods
in
in
adc
mov
jg
adc
push
pop
dec
les
cmpsl
inc
pushf
insb
adc
lcall
clc
sbb
cmp
aaa
leave
xchg
in
push
lods
aas
push
lods
mov
ds
or
xchg
stc
inc
leave
pop
xchg
test
or
pop
mull
data16
sub
xor
pop
jbe
jl
and
pop
and
jns
xor
je
inc
test
js
push
fwait
cli
sub
cmp
ds
sar
xor
or
xchg
popf
into
out
stc
cwtl
lret
lcall
or
pusha
inc
pop
sbb
repnz
mov
dec
push
jmp
arpl
in
jg
enter
rcrb
jle
push
mov
mov
xor
test
add
dec
xchg
dec
cmp
sbb
cmp
cld
adc
fimull
cmp
test
inc
cmp
sbbl
push
nop
addr16
mov
jb
push
inc
pusha
and
pop
xor
dec
xchg
mov
bound
es
mov
clc
jns
xchg
and
push
test
jl
and
cmpsb
lcall
push
test
xlat
pop
mov
ficoml
mov
roll
in
lea
addr16
cmpsb
jb
orl
imul
ficoms
out
pop
sbb
pushf
outsb
pop
lods
adc
push
pop
testb
sub
dec
jmp
push
adc
or
iret
and
ja
mov
outsl
xchg
xor
sbbl
mov
xor
enter
and
les
sbb
mov
shrb
ret
fimull
dec
xor
mov
push
out
or
sbb
insl
inc
stc
test
arpl
mov
outsl
xchg
and
test
sarb
out
and
pop
cmp
cltd
aaa
clc
mov
ret
mov
fs
repnz
push
cld
imul
sar
add
push
repnz
pop
inc
call
das
lock
jbe
add
test
mov
in
mov
push
aad
xchg
icebp
cmc
and
push
icebp
add
mov
daa
cmp
mov
jge
hlt
sub
imul
orl
cmp
and
jg
lahf
outsb
sbb
test
jns
gs
pop
out
xchg
push
mov
mov
popa
repz
icebp
or
aad
cmpsb
int3
lahf
mov
mov
pop
pusha
jecxz
clc
lock
call
and
jecxz
jne
inc
xchg
adc
icebp
pop
sub
sub
pop
icebp
push
sbb
inc
and
and
dec
xchg
sub
and
sti
or
ss
ret
jae
popf
std
in
add
test
pop
jle
push
addl
jns
dec
mov
test
repnz
cmp
imulb
clc
and
in
roll
dec
pop
into
pop
push
roll
int
lds
testb
sahf
mov
jae
pop
adcl
bound
rcrb
sub
inc
jle
jle
ja
pop
repz
clc
cli
aam
imul
push
lds
js
mov
aam
cmp
xchg
push
xor
add
xor
cmp
mov
xchg
xchg
cmc
scas
lods
sarb
cmc
loop
rclw
movsb
sub
imul
pop
aas
push
mov
test
lods
inc
pop
arpl
cmpl
mov
push
out
mov
dec
test
jp
shlb
lret
jg
or
out
mov
sub
je
popf
mov
scas
insl
xor
push
mov
or
jne
lahf
mov
lock
add
inc
jl
cmpsl
pop
push
dec
shrb
xchg
into
sahf
or
or
inc
mov
jo
ljmp
imul
ja
out
adc
push
movsb
adc
shl
bound
xor
movsl
mov
mov
es
jnp
xor
push
dec
and
cmpsl
cld
in
loop
lahf
jp
stos
test
incb
ret
cmp
cmp
orb
std
fcoms
sbb
pop
mov
mov
ret
and
mov
out
lea
iret
jecxz
scas
out
adc
dec
mov
jo
negl
popf
jne
fldl
lcall
xchg
ja
test
jno
mov
mull
ret
lock
cmpsb
jnp
repnz
imul
dec
les
xchg
inc
je
ret
in
fdivr
jb
and
pusha
fcmovbe
mov
mov
mov
mov
push
fsubrp
mov
pop
xchg
xlat
sub
xlat
add
mov
dec
mov
pop
pop
in
rolb
stos
push
hlt
orl
cld
sbb
jmp
add
push
popa
daa
cmp
push
pop
mov
icebp
ret
dec
sbb
and
clc
sub
inc
pop
mov
in
xor
xchg
or
dec
xchg
mov
adc
inc
insb
inc
iret
dec
out
rcll
inc
shrl
push
sbb
repz
adc
adc
out
xchg
lret
insl
jge
dec
lds
orl
pop
fmull
aas
mov
pushf
cmp
add
lcall
add
into
sub
xor
f2xm1
leave
les
or
aam
rclb
sbbb
cmpb
lret
mov
push
dec
pop
inc
push
dec
std
fstpl
shl
in
push
test
das
mov
shrl
std
mov
out
mov
fneni(8087
sti
out
jb
inc
fstp
or
sub
mov
mov
xor
add
fs
mov
outsl
jbe
stos
mov
mov
cs
jecxz
or
cwtl
jle
scas
cs
mov
inc
inc
daa
mov
pop
sbb
cmpsl
cmc
jns
mov
jmp
aad
add
jmp
mov
add
inc
rolb
mov
xchg
push
mov
or
dec
sub
mov
int
out
hlt
add
subl
sbb
std
mov
es
outsb
dec
stos
adc
add
lock
mov
add
sub
mov
call
ja
push
mov
add
mov
js
mov
push
cmp
cmpsb
jmp
test
push
sbb
pusha
dec
xchg
cmpl
ljmp
xor
mov
pusha
lock
mov
add
mov
movsb
adc
push
ds
pop
icebp
xor
mov
divb
push
test
mov
pop
negl
or
add
insl
dec
dec
sub
inc
and
adc
push
cmp
add
mov
cmp
cltd
imul
test
jbe
cli
sub
mov
dec
xchg
mov
adc
inc
jmp
gs
mov
ret
leave
lock
xor
xchg
mov
sahf
dec
cs
subb
dec
fmul
sti
shl
shll
mov
jb
popw
lret
cltd
xchg
cmp
cmp
sbb
popa
inc
mov
repz
xchg
arpl
into
inc
adc
shll
ret
mov
shl
sub
or
push
xchg
popa
daa
adc
sbb
aam
and
add
jp
mov
cmp
dec
out
xor
adc
es
arpl
inc
cli
inc
sub
out
push
mov
pop
add
or
mov
imul
jmp
ljmp
subl
mov
sbb
aaa
push
cmp
xor
pop
test
je
movsl
push
lods
std
xchg
pop
mov
popa
clc
push
push
or
or
inc
jb
jl
movsb
push
cmp
pusha
or
xchg
dec
popf
mov
xchg
jbe
adc
aas
roll
mov
lret
sub
lods
ja
popa
data16
or
popa
sbb
shlb
test
dec
pop
mov
mov
push
rcr
sub
push
ret
and
and
mov
addl
pop
or
lods
lret
mov
pop
icebp
fdivrl
inc
dec
repz
mov
sub
jne
jecxz
filds
ljmp
shrl
lea
or
or
lcall
xor
je
adc
cmp
dec
adc
push
mov
xchg
inc
sahf
stos
cli
aam
in
xchg
sahf
repz
xchg
jmp
popa
mov
push
xchg
or
scas
and
fs
rcll
push
js
repz
inc
inc
call
jae
outsb
out
xlat
sahf
leave
xchg
mov
lods
fildl
cmpsl
in
test
cmp
lods
std
ret
push
and
and
xchg
jns
push
insl
dec
test
in
and
cltd
test
cmp
lea
inc
bound
lret
mov
lods
mov
cli
or
pop
test
fldenv
mov
negb
rcrb
sub
pop
stos
xchg
add
add
mov
mov
cmp
dec
and
push
adc
addr16
lret
cltd
sysexit
out
movsb
xchg
clc
xchg
das
test
stos
inc
icebp
or
mov
outsl
jg
inc
cs
sub
adc
in
fldt
stos
lea
and
dec
xchg
push
jmp
stos
xchg
pop
stos
imul
sub
push
sahf
lods
lcall
mov
ret
mov
mov
dec
xchg
fsubr
xchg
jae
test
mov
in
mov
cmp
orl
push
mov
mov
daa
movsl
fildll
pop
sub
mov
mov
cmc
or
aam
add
pop
test
add
es
lea
in
sbb
dec
pop
jl
mov
loopne
mov
cmp
mov
jmp
icebp
xchg
outsb
xor
cltd
ret
sbb
push
inc
sarb
subb
sub
pop
add
adc
pop
aad
and
loopne
stc
xchg
daa
fnstcw
xor
ret
rolb
mov
xorl
sub
std
fistl
sub
mov
pop
out
es
scas
repnz
ja
and
lea
dec
aaa
cmpsl
mov
jb
mov
sub
data16
jne
and
fsubl
mov
inc
divl
pop
add
dec
jbe
loope
xor
pop
js
aad
ret
jns
outsl
lret
into
mov
pop
jecxz
insl
js
lcall
mov
adc
push
outsb
mov
adc
add
loope
and
mov
cmp
shr
sub
ss
sub
clc
dec
xor
mov
sahf
fmull
data16
aas
mov
call
scas
mov
fs
insb
dec
xchg
cmp
cld
test
fimull
mov
dec
cmpsb
dec
ds
in
jle
or
mov
enter
sub
adc
pop
das
enter
push
imul
int3
mov
icebp
shlb
pop
in
pop
movsb
push
push
or
fnstsw
xor
pop
fbld
ljmp
mov
lock
shlb
in
sbb
cmp
adc
jle
rolb
dec
mov
decb
cmp
xchg
inc
in
mov
aam
std
jbe
and
popf
mov
dec
rcrl
xor
jge
inc
repnz
enter
call
jb,pn
adc
adcl
jecxz
jp
repz
mov
push
pop
andb
add
fwait
inc
add
dec
jne
push
mov
jl
cmpsl
add
mov
adc
mov
jmp
arpl
mov
xchg
mov
adc
sbb
sub
fxch
lds
lahf
add
xor
fldl
aas
pop
out
repz
jp
cmp
popf
dec
pop
in
pop
mov
dec
xor
add
jbe
push
data16
ss
pop
mov
xchg
cmp
xchg
sub
lret
addr16
cmp
jmp
pop
shlb
mov
loopne
and
mov
mov
xchg
mov
and
push
and
fs
add
test
sub
addb
imul
dec
sub
imul
insl
xor
test
and
sbb
xor
imul
or
popf
imul
add
push
aas
jne
jno
mov
mulb
and
xchg
cmp
pop
push
imul
mov
xor
sahf
enter
xchg
rolb
xchg
cmp
adc
jb
add
mov
sub
loope
dec
fdivr
rcrb
push
fisttpl
daa
mov
cmp
movl
or
call
jnp
mov
fdivrp
pop
lahf
arpl
cmp
addr16
add
pop
stc
lock
mov
out
lret
jmp
mov
fildl
push
test
fwait
lcall
cmp
mov
shrl
aam
xchg
das
sbb
loopnew
rolb
cmpsl
out
sbb
sbb
je
adc
std
lock
inc
inc
filds
fisubl
int
mov
jmp
cmpsb
cmp
pop
or
lds
or
xor
mov
fdivrs
adc
fsubl
xor
mov
and
ds
fdivrs
cmpsl
jno
lods
jl
fisubrs
mov
mov
psrlw
insb
fcompl
ret
push
jge
mov
fsubs
and
arpl
repz
pop
cmpsb
lcall
or
movsb
add
fsts
xchg
xor
out
mov
shl
jbe
call
xor
test
ljmp
sbb
push
cmpsl
dec
scas
push
outsl
cwtl
enter
fnstsw
out
xlat
push
cmp
nop
jo
mov
or
call
fdivrs
fnstcw
xor
js
jmp
imul
lret
inc
scas
inc
js
mov
add
mov
and
pop
push
icebp
imulb
dec
or
xchg
or
ret
popa
dec
sti
inc
int
or
jg
adc
dec
lods
dec
insb
ja
and
pusha
dec
adc
test
sub
pusha
push
pop
or
mov
sbb
fsubrs
ss
pop
sbb
pop
scas
shrl
call
push
jecxz
mov
mov
push
call
mov
and
mov
push
pop
fdivs
adc
sub
mov
dec
xorb
loope
xor
push
xor
fcomps
ds
mov
pop
lods
mov
dec
repz
dec
dec
fisubl
imull
xchg
mov
pop
mov
cmp
outsb
add
enter
rcrb
lahf
adc
testb
push
adc
cltd
adc
dec
push
sbb
imul
pop
ja
or
icebp
je
xor
jge
stos
je
adc
xchg
lods
out
dec
out
push
lcall
cmpsb
mov
cs
icebp
or
test
adc
shlb
lret
out
gs
dec
int
add
sub
mov
aaa
cmp
adc
push
xchg
push
pop
push
jl
data16
cld
or
stos
xchg
mov
out
aas
xchg
push
jge
popa
ret
mov
sbb
or
mov
cmc
imul
out
in
mov
mov
js
or
out
out
jnp
push
rorb
dec
dec
fmul
mov
mov
jb
sub
adc
cltd
sarl
movsb
sub
stc
clc
inc
jae
es
sub
jp
es
pop
inc
cmpl
pop
rolb
add
movsl
pushf
jecxz
push
loop
mov
adc
sbb
adc
sub
pop
mov
stos
rcll
imul
push
cmp
pop
push
out
test
addr16
cli
movsw
dec
xchg
fnstcw
in
fwait
test
in
cmp
jo
xchg
leave
scas
iret
and
xchg
add
sub
cmpb
adc
sbb
jp
dec
pop
dec
imul
iret
dec
out
xor
sbb
jecxz
xchg
pminsw
xchg
lcall
adc
insl
jmp
dec
inc
clc
into
lock
xor
jno
pop
or
inc
inc
out
fistl
hlt
cwtl
jno
push
push
outsb
mov
add
xchg
sbb
mov
in
mov
int3
push
push
fiaddl
and
inc
xchg
test
push
pop
inc
push
jle
sub
cmp
jge
push
arpl
icebp
dec
and
adc
pusha
int
fdivl
mov
cmp
insl
sub
cltd
sti
add
sbb
jbe
mov
jg
stos
dec
mov
nop
loope
fcmovnu
add
inc
popa
xor
or
cmpsb
test
ror
inc
mov
mov
and
ja
sub
mov
sar
push
mov
jb
adcl
pushf
inc
xchg
loopne
cld
frstor
push
loopne
and
dec
mov
adc
push
or
push
xor
adc
sub
arpl
mov
pop
xchg
mov
adc
andb
mov
sub
psrld
aaa
popfw
mov
lods
aas
sbb
les
and
mov
inc
push
dec
pusha
jae
xor
dec
fadds
jno
push
inc
testl
arpl
or
pop
jg
and
jo
stc
cmp
arpl
sub
mov
std
aas
mov
and
mov
lea
jmp
sbb
rorl
mov
xchg
adc
xor
xchg
cmp
fildl
push
inc
stc
mov
mov
fdivr
mov
int
sbb
imul
pop
and
lret
mov
adc
jle
or
setp
xchg
pushf
sbb
inc
push
aam
jno
add
push
dec
jbe
loop
outsl
push
mov
sub
fnstcw
lret
pop
sub
pop
add
in
inc
adc
cmp
pop
dec
es
cmpsl
das
xorb
push
push
aad
pop
cmc
xchg
xchg
mov
xor
adc
mov
inc
cwtl
mov
stos
add
pop
lahf
hlt
loopne
into
mov
insl
mov
xchg
jne
inc
xchg
inc
xchg
fistpll
xchg
rorb
mov
aam
hlt
fnstcw
scas
mov
push
leave
sub
xchg
inc
fs
pop
dec
push
push
fs
loope
xor
xchg
pop
cmpsl
pusha
pop
jbe
arpl
pminub
lods
je
push
xor
fidivrs
idiv
fdivl
cwtl
mov
or
sbb
and
jno
cmp
xchg
leave
es
xchg
icebp
pop
scas
lods
cmpsl
push
ret
rcrl
outsb
fistps
and
out
into
sbb
dec
in
pusha
jae
fwait
push
lods
mov
pusha
and
in
sub
nop
push
dec
add
insl
daa
pop
mov
push
cmp
popf
and
mov
mov
pop
js
push
dec
inc
and
dec
add
cltd
daa
leave
pop
popa
in
out
loop
aas
movsl
ficoml
stos
fidivrl
insl
mov
cwtl
out
lea
insb
addl
and
sbb
ss
cmp
adc
scas
inc
mov
push
in
insl
push
jl
jmp
shll
and
out
xor
mov
jle
fwait
dec
fistps
loop
call
bound
adc
rol
mov
scas
pop
aas
shl
or
vrcpss
jmp
dec
cs
fwait
popf
and
ror
std
call
sub
cld
std
xchg
dec
loope
stc
arpl
mov
jno
shlb
sti
cmp
jp
icebp
rep
in
daa
mov
cmp
dec
sarl
cmp
mov
pop
push
xchg
or
add
pop
js
sub
fs
jae
sbb
outsl
mov
inc
and
mov
add
aaa
cmp
mov
sub
xchg
cld
or
xor
jnp
movsl
pop
fs
and
jb
and
pop
and
inc
inc
ljmp
sub
mov
popa
and
stos
test
xor
push
aad
popf
pop
mov
and
or
mov
add
fdivrl
in
ja
loope
in
mov
mov
gs
test
mov
xor
xchg
loope
inc
cmp
iret
aad
mov
adc
push
sbb
repnz
adc
in
sub
dec
mov
sbb
jo
pop
mov
cs
lcall
sbbl
test
pusha
mov
add
xlat
jne
add
aas
lret
xlat
test
push
mov
inc
clc
loopne
dec
insl
cmc
jo
dec
or
loopne
sub
add
cmc
lahf
sbb
cli
adc
add
in
xchg
cmp
cmpsl
cmpsb
mov
nop
jns
push
lea
jns
and
das
imulb
imul
add
push
jl
mov
jbe
roll
mov
out
inc
fidivrl
rorb
pushf
pop
sub
mov
clc
xchg
outsb
loope
push
sarb
dec
into
dec
fucomip
pop
pop
push
push
inc
push
ljmp
xor
divl
mov
mov
lret
xchg
xchg
ret
sbb
movsl
in
scas
dec
sbb
subl
sbb
mov
mov
cmp
out
mov
push
js
neg
lret
repz
add
clc
pop
cmc
int3
sbb
lahf
cmp
in
push
mov
test
and
les
les
mov
mov
mov
repz
pusha
adc
dec
roll
out
cmp
je
adc
pop
sub
pop
xor
add
adc
mov
jne
dec
add
xchg
mov
and
loop
nop
scas
iret
dec
pop
inc
cwtl
scas
ss
fwait
dec
popa
out
das
cwtl
jo
ja
pop
or
inc
insl
mov
mov
jmp
xorb
or
push
lret
cs
pop
jb
cmp
stos
pop
add
mov
popa
mov
add
loope
mov
loopne
add
sbb
lcall
xor
adc
loop
lock
jns
xor
xchg
jp
push
lea
into
test
add
mov
xchg
daa
cmp
mov
xchg
jne
or
jp
lahf
outsb
push
inc
xor
cli
lret
add
aas
xor
mov
pushf
mov
jl
js
mov
jnp
lret
jmp
xchg
xchg
or
pop
repnz
cli
cs
imul
add
dec
dec
push
cmpsl
out
mov
pusha
bound
jl
or
xchg
or
je
jg
dec
sbb
xchg
lods
jnp
push
jno
fistl
dec
lock
adc
std
pop
sub
jge
push
pop
inc
jb
cltd
or
das
or
dec
std
leave
sub
lock
dec
inc
mulb
outsb
mov
insb
xor
rcrb
arpl
loop
pop
sbb
push
mov
inc
inc
addl
lahf
pop
adc
fs
jns
jo
sahf
int
roll
in
xchg
adc
fcmovb
out
push
movups
add
lahf
pop
xchg
ljmp
jno
call
lods
dec
les
out
dec
loop
cld
fisubrs
insl
xor
incb
das
fsubrs
pop
mov
and
into
push
and
or
les
test
cmpsl
mov
sbb
nop
dec
xchg
mov
jne
stc
push
or
xor
add
test
lods
cmp
out
icebp
pop
xchg
sti
sti
int3
xor
or
push
cs
sbb
pop
add
sarl
insb
lods
lea
mov
data16
pop
fdivrs
ja
scas
insb
pop
adc
lods
push
orb
pop
divb
push
insb
or
iret
loope
push
push
loop
test
xchg
sub
mov
xchg
cmc
xchg
sub
mov
push
dec
xchg
sbb
aaa
cmpl
adc
jae
leave
fists
iret
mov
pop
mov
dec
andb
dec
inc
jmp
and
lods
mov
ss
push
mov
push
loope
inc
lea
cmp
or
jl
xchg
and
repz
mov
jmp
inc
int3
and
sti
add
movsb
xchg
push
shlb
dec
subl
popa
adc
and
outsb
inc
adc
arpl
dec
dec
mov
cmpsb
xor
xchg
xchg
jnp
push
add
scas
add
mov
fsubr
aad
or
out
cs
mov
cmp
push
pop
sbb
dec
push
xchg
scas
rolb
mov
push
jne
adc
and
sub
xlat
nop
movsb
dec
lock
pop
outsb
nop
gs
jle
mov
or
sub
xchg
adc
std
or
mov
fadds
and
push
mov
pop
and
sbb
push
repnz
pop
fdivrl
stos
std
popa
jecxz
bound
pushf
in
ret
out
cmp
pop
jno
sarb
push
jmp
jo
testb
add
jg
sbb
outsl
fwait
popa
mov
sub
dec
xor
dec
mov
sub
mov
dec
mov
stos
addr16
xchg
dec
icebp
xchg
pop
push
xor
loop
jnp
outsb
pop
testl
aaa
jo
push
ljmp
arpl
mov
jbe
negl
clc
xchg
cs
lods
mov
mov
inc
mov
ljmp
int3
xchg
out
dec
inc
adc
int3
sbb
mov
sahf
fnsave
sub
ljmp
fbld
fwait
jecxz
push
lret
sarb
jae
jae
lea
pop
jae
es
in
and
not
or
pop
pop
cmp
aaa
and
mov
jne
xor
add
outsl
fimull
lahf
fs
jbe
fisubl
mov
xor
push
mov
stc
movsl
orps
mov
hlt
movsb
or
sbb
cmpsb
push
push
test
jl
adcb
sbb
mov
mov
decb
sbb
fcmovnu
add
mov
push
sub
jns
add
jmp
cmp
andb
flds
sbb
inc
jl
mov
cmp
clc
shrb
mov
cmp
out
scas
lods
insb
outsl
fiaddl
pop
inc
ds
iret
mov
fucom
inc
lods
cmpl
mov
mov
push
ss
inc
shll
roll
sub
mov
cmp
xchg
int
cld
or
fnstsw
test
add
push
jnp
ljmp
lods
mov
ljmp
fs
push
sbb
lahf
jae
outsb
cltd
push
mov
and
sub
call
aaa
sub
imul
in
mov
xor
pop
jo
call
int3
mov
sub
or
xchg
pop
and
rcll
out
mov
sti
and
mov
lock
jae
outsl
xchg
inc
mov
outsb
jb
sti
mov
call
mov
pop
test
mov
ljmp
jnp
push
fwait
roll
es
jno
mov
mov
add
aas
mov
push
push
loopne
ror
sub
or
mov
and
mov
jmp
mov
enter
and
mulb
mov
or
mov
popf
add
in
loop
xor
pop
mov
lods
cmp
cmc
ja
xchg
fisubrs
adc
enter
push
les
pop
lcall
ss
dec
xchg
out
stos
adc
xchg
ljmp
jle
mov
repnz
in
popa
aas
lret
or
fsubrl
int
cmpl
arpl
sarb
orl
scas
pop
xor
mov
lret
loopne
shlb
adc
int3
mov
mov
cmpsb
mov
ss
dec
fistps
outsl
aad
rclb
push
inc
mov
lock
pop
or
mov
pop
xchg
lock
adc
inc
or
bound
mov
jo
call
stos
xor
push
lea
pop
push
xor
jne
jg
xchg
into
and
mov
cs
sub
jns
pop
mov
enter
ret
cmp
or
dec
fcmovne
fwait
es
out
js
jmp
push
dec
mulb
movsb
fidivrl
mov
cmc
xor
push
jbe
cmpsb
add
in
pop
fisttpll
nop
std
sbb
out
pop
jge
cmp
into
jge
or
or
outsb
movsb
sbb
out
jmp
mov
lcall
movsb
mov
jb
pop
std
int3
pop
push
daa
push
int3
xchg
out
or
xchg
ret
cmc
inc
inc
nop
js
adc
mov
or
outsb
cmp
inc
lahf
je
push
or
push
mov
rcr
shl
repnz
adc
adc
in
add
mov
rcll
inc
enter
aaa
sub
clc
sbb
pop
dec
icebp
bound
movsb
cltd
sub
adcb
sub
mov
cmp
in
fmuls
scas
mov
stos
and
rorb
fadds
gs
in
mov
sbb
xor
pop
and
sub
in
jmp
dec
es
sbb
sub
js
mov
lods
out
push
mov
jge
sbb
dec
pop
add
and
xchg
test
mov
jecxz
imul
push
xor
push
fs
cmc
ja
pop
or
aas
divl
adc
insb
add
and
movsl
cmp
sar
mov
add
ds
cmpsl
fisubrl
je
or
dec
aad
lahf
out
cmpsl
jne
adc
or
test
xchg
addr16
jbe
mull
xchg
mov
popa
xlat
icebp
je
popf
mov
rclb
ljmp
push
repnz
aad
shl
ret
rol
cmp
mov
or
mov
js
mov
xor
leave
and
mov
xchg
jmp
jns
das
leave
enter
jno
add
clc
adc
into
popa
fucomi
cmp
push
cmpsl
gs
pop
fsubs
dec
push
fisubs
stc
arpl
dec
sarb
mov
jecxz
movsb
mov
or
addl
popa
shlb
push
ljmp
in
push
sbb
movsl
out
and
mov
js
add
xchg
sti
lock
inc
dec
mov
cmp
leave
stos
and
ficompl
in
mov
mov
in
repnz
xlat
mov
cltd
outsb
push
ljmp
pop
subl
push
xchg
fwait
fwait
pop
int
inc
jno
aad
cmp
jbe
outsb
negl
test
pop
xchg
xor
push
or
stc
cmpsl
push
inc
cmpl
lods
mov
xchg
push
xchg
aam
into
aam
insl
mov
notb
pop
push
xor
adc
inc
mov
sarb
and
incb
lods
arpl
xchg
fs
enter
outsl
pusha
inc
inc
aaa
je
push
jecxz
scas
jmp
inc
loopne
shrl
push
movsb
push
dec
xor
mov
ljmp
sbb
popf
dec
into
es
hlt
cltd
xor
jge
test
push
mov
mov
mov
xchg
xor
int3
cmovl
lcall
enter
sbb
and
jns
mov
inc
rolb
jbe
lret
push
inc
and
mov
aas
push
lcall
jecxz
mov
test
mov
mov
or
push
ret
xchg
ja
adc
or
push
divl
and
fcomip
stos
cmp
xchg
jp
mov
clc
xchg
loopne
in
icebp
or
lea
mov
sbb
cwtl
jp
pop
inc
repz
outsl
pushf
imul
enter
add
inc
push
xchg
stos
je
aaa
insl
pop
mov
das
loopne
xchg
insl
push
test
fsubl
sub
sahf
and
sar
lock
push
loope
push
dec
dec
lods
outsb
stos
lahf
pushfw
xchg
jmp
out
gs
cmpsb
sub
rcrl
lret
pop
add
or
jge
jmp
outsb
push
fwait
sbb
aad
popf
or
in
and
mov
mov
test
pushf
addr16
cwtl
mov
scas
add
adc
jbe
lret
mov
lret
leave
sbb
pusha
sbb
dec
xorb
or
fwait
icebp
pop
addl
aam
fpatan
and
sub
and
rol
mov
push
jae
js
cld
add
mov
xlat
cmpsl
aas
inc
rol
jae
lret
fnstenv
gs
inc
xchg
scas
mov
pop
test
mov
or
sub
jb
xchg
rolb
push
in
pop
mov
push
daa
mov
aam
and
xchg
and
fsubl
xchg
cwtl
adc
scas
mov
shrw
push
cwtl
inc
sbb
pop
into
or
and
add
cmp
fdivr
cmp
jo
dec
jmp
inc
jo
data16
por
in
inc
pop
pop
loopne
xchg
lods
jg
pop
inc
imul
mov
and
pop
sarl
push
shlb
sub
xchg
call
repnz
jnp
jmp
notl
popf
mul
or
idivl
pop
pop
lret
clc
out
das
and
mov
mov
dec
popa
xchg
mov
mov
hlt
pop
test
movsb
push
and
das
inc
sbb
repnz
sti
jge
insb
sub
and
adc
lods
gs
mov
xchg
push
cld
out
aad
or
sbb
in
and
mov
fstl
leave
dec
sub
sbb
sub
sbb
cmpsb
ljmp
xchg
xor
mov
dec
mov
lcallw
sti
loopne
lods
jge
sarb
jmp
lock
iret
pop
sub
jns
movsl
and
std
cmp
stos
mov
add
push
push
scas
xchg
add
out
or
sub
sub
das
jns
notl
lret
jb
mov
das
mov
movsl
mov
movsl
sbb
or
movsl
and
sub
add
cwtl
cld
mov
popf
pop
comiss
stc
lahf
stos
out
addr16
push
jle
pop
inc
push
rol
push
mov
pop
inc
jbe
fistl
push
popf
dec
test
imul
adc
sar
stos
imul
xchg
lods
aas
push
xchg
add
rcrl
icebp
or
ss
pusha
mov
mov
jo
push
xlat
and
jge
push
mov
cs
pop
push
aam
jne
inc
pop
add
push
pop
std
int
rcll
loope
loopne
xor
xchg
dec
push
push
push
movsb
adc
arpl
ja
clc
fdivrs
lea
sti
decl
in
pop
jmp
out
fnstcw
add
aam
test
xlat
loopne
inc
outsl
jecxz
imul
in
pop
jo
pop
sub
jge
xor
imul
cmp
les
sahf
xchg
jle
dec
xchg
pop
lods
sub
jg
and
rorb
in
fnstsw
mov
and
outsb
fs
jb
xchg
push
cmp
inc
mov
dec
out
out
sahf
mov
sbb
aas
daa
pop
stos
cli
sti
mov
je
rorl
push
imul
iret
jg
sarl
xchg
ficomps
and
mov
ficompl
int
cmp
daa
mov
pusha
jo
jecxz
pop
fiaddl
mov
testl
mov
push
cmp
xchg
in
dec
gs
das
dec
jle
jmp
lods
cmpsb
pop
lahf
mov
xchg
xchg
and
nop
mov
xchg
icebp
dec
es
fwait
lret
lretw
jo
sbb
mov
fisubl
mov
fs
loopne
xchg
jbe
jb
ds
xor
cmpl
and
mov
xchg
jns
scas
fcoml
xor
and
gs
adc
push
xor
mov
popf
ss
rcl
mov
cmp
jmp
clc
adc
mov
stos
or
shlb
mov
sbb
add
cmp
das
mov
decb
hlt
adc
mov
and
mov
les
add
add
ja
hlt
push
dec
ss
pop
stos
mov
mov
push
imulb
jo
bound
sub
mov
ds
orl
sub
out
xchg
xor
pusha
gs
xor
add
mov
mov
cltd
shr
mov
xor
daa
lret
xchg
xchg
jne
xchg
rcll
xor
repnz
adc
cmp
mov
sbb
fists
mov
imul
je
jae
push
int3
or
push
ret
jne
xor
xchg
cmc
and
mov
push
notl
ljmp
pop
push
mov
dec
mov
scas
aas
jns
fstpl
out
out
push
scas
loop
or
xchg
jo
aaa
data16
mov
and
mov
icebp
sahf
rolb
ret
gs
sub
std
xchg
ret
dec
adc
popf
mov
in
jnp
xchg
cmc
in
or
lds
out
jmp
sahf
inc
icebp
pop
ds
mov
enter
outsl
sarb
xor
push
jge
push
repnz
adc
stos
js
xchg
jg
mov
stos
or
dec
xor
fisttpl
jb
mov
in
arpl
jg
hlt
pop
iret
jnp
xchg
or
lds
inc
jge
xlat
mov
xor
stc
fdivs
lea
add
mov
arpl
push
xlat
cli
mov
dec
inc
mov
jnp
mulb
dec
in
nop
lds
push
shl
cmp
shll
xchg
pop
push
std
imulb
lret
adc
xchg
jmp
add
push
addr16
les
je
mov
addr16
xor
mov
in
mov
cmp
mov
fisubs
jne
xchg
mov
push
xlat
imul
loop
ja
fwait
enter
scas
mov
pop
arpl
push
cmpb
sub
and
fnstsw
dec
pop
ds
mov
cmpsb
add
pusha
or
test
dec
or
aad
stc
lahf
std
xchg
dec
cmpsb
cmp
add
or
sub
inc
mov
fstpl
orb
xor
or
lods
inc
inc
outsl
outsl
xor
xchg
aaa
in
cli
fldenv
inc
or
push
mov
stc
add
mov
out
inc
push
push
nop
addl
xor
jl
push
sbb
lock
mov
mov
pop
fiadds
subl
mov
ss
mov
sahf
mov
mov
les
data16
mov
or
inc
mov
das
pusha
insl
sub
addr16
push
sahf
jns
in
movsb
hlt
sub
cltd
push
and
fs
adc
cmp
jle
mov
loopne
hlt
xchg
adc
sub
pop
fisubrs
xchg
mov
sti
push
sti
jmp
les
pop
mov
insl
cmp
xchg
leave
out
jl
mov
jp
mov
mov
jns
lret
sahf
mov
orb
int3
pop
call
mulb
int
inc
xlat
pop
sbb
jae,pt
nopl
insb
mov
jmp
mov
aad
pop
xor
rcrb
out
fs
xchg
pop
cmp
cmp
sbbb
jo
jle
scas
repz
add
cmc
cltd
mov
push
je
mov
pop
pop
cmc
cmp
jp
or
jbe
sti
xor
das
add
inc
ret
test
sbb
pop
js
dec
sbb
push
ds
nop
dec
dec
mov
push
les
or
loopne
adc
mov
enter
push
fcmovnbe
outsl
mov
popf
push
xor
in
mov
pop
data16
adc
je
jno
dec
shll
clc
and
shlb
test
test
lock
neg
dec
and
les
movsb
in
cli
imul
into
pusha
and
in
push
mov
add
imul
xchg
orb
enter
or
and
out
jecxz
mov
ret
out
push
orb
and
sbb
mov
or
mov
mov
push
out
mov
negl
int3
sbbb
inc
vmread
bound
push
loop
movsb
shll
shlb
sbb
sbb
jae
jle
xor
rorl
movsb
and
out
sub
repnz
scas
mov
shll
outsb
adc
lds
add
adc
das
xor
add
cwtl
push
decb
div
pop
and
cli
dec
aad
loop
xor
shl
ds
pop
getsec
adc
shl
push
mov
sbb
push
mov
out
push
insb
push
lods
jmp
mov
add
adc
fcomp
adc
out
pop
sbb
inc
push
mov
add
adc
jbe
in
add
or
mov
in
cmp
mov
xchg
pop
or
mov
pushf
or
push
pusha
and
add
fstpl
inc
loop
in
addb
add
ds
test
sbb
pop
add
testb
rol
inc
pop
into
mul
enter
mov
fs
pop
mov
jno
jno
mov
pop
xchg
popa
mov
cld
call
ljmp
push
cmpb
fsub
popf
sub
or
ljmp
cli
rcrb
mov
or
dec
idivb
mov
cltd
mov
movsb
fwait
dec
pop
mov
cmp
pop
mov
stos
push
mov
sbb
loopne
xor
mov
stc
jmp
jo
mov
fsub
aas
lcall
leave
jmp
int
sti
sub
and
jo
movsl
sbb
and
arpl
mov
dec
mov
stos
xchg
dec
add
dec
int
xor
xor
in
imul
or
or
mov
sbb
je
mov
insb
sbb
fnstsw
incl
pushf
fs
mov
add
dec
pop
dec
loopne
dec
mov
jecxz
sbb
sti
mov
or
pop
imul
enter
adc
mov
jmp
mov
sarl
shl
cld
repz
xor
mov
xor
mov
jl
mov
subb
adc
add
push
or
gs
mov
add
sbb
sub
sbb
sbb
add
setle
add
insl
dec
dec
mov
mov
xchg
pop
das
scas
mov
out
sbb
mov
xor
or
push
imul
jne
push
xor
cmpsl
inc
push
outsb
sbb
dec
xchg
out
lret
fmull
push
std
in
mov
sarb
sar
ss
push
jb
insb
int3
add
jecxz
xor
sahf
lret
push
pop
call
fldcw
mov
jp
ja
jnp
pop
test
push
xchg
push
ja
ljmp
or
sub
and
outsb
mov
and
pop
lret
xchg
fiadds
aaa
repz
orb
jge
shl
repz
and
loopne
sti
jle
jle
mov
add
pop
mov
sbb
rorl
dec
les
pop
pusha
jns
shll
fldcw
sbb
scas
sbb
or
xchg
sub
pop
inc
sub
test
jo
adc
bswap
js
call
push
push
mov
movsb
push
mov
mov
sub
push
in
add
sbb
adc
stos
cwtl
daa
push
inc
filds
into
loope
icebp
movsl
jecxz
inc
push
popa
cmp
hlt
mov
loopne
mov
les
mov
dec
mov
rol
inc
xor
xchg
repz
jge
cmp
push
xlat
mov
fstpl
sahf
sub
es
add
ja
xchg
shrb
xchg
push
std
mov
jg
insb
rorl
pop
push
fcmove
dec
mov
mov
push
xor
adc
cmpsb
call
jecxz
push
jmp
xor
hlt
xchg
loopne
mov
addb
repnz
lahf
push
inc
das
das
inc
add
dec
in
xor
jmp
loopne
and
add
mov
call
pop
jmp
dec
loope
subl
js
div
add
adcl
cwtl
cli
push
xchg
add
dec
testl
popf
mov
daa
mov
cli
xlat
push
in
xor
test
pop
test
pop
pushf
lock
jecxz
cmp
mov
pop
stos
xchg
pop
mov
sahf
popa
movsb
fiadds
in
lcall
insl
lcall
leave
ret
push
frstpm(287
arpl
lret
ljmp
jo
int3
cmp
fs
jecxz
lea
sbb
sti
mov
cwtl
pop
pop
shl
sub
mov
mov
jns
add
in
dec
or
fists
jecxz
mov
push
push
outsb
dec
adc
daa
out
xchg
aaa
xor
jns
dec
test
inc
loopne
ljmp
subl
into
cmp
or
js
xchg
pop
or
mov
or
sub
call
mov
leave
lret
pusha
rorl
in
lret
push
push
es
int
imul
xchg
mov
repz
loope
enter
xchg
dec
mov
call
xor
sub
cmp
inc
das
test
scas
lea
and
pushf
inc
mov
and
out
addb
pop
pusha
xor
shll
fldcw
pop
lods
cmovge
daa
sub
mov
push
adc
mov
push
inc
dec
mov
mov
dec
pop
js
lret
mov
sub
jecxz
fs
jp
jno
xor
lds
sub
rol
gs
mov
stos
dec
mov
jge
inc
mov
pop
dec
fs
test
jne
pop
in
push
push
movsl
pop
push
aad
dec
xchg
mov
sbb
test
mulb
mov
pop
push
dec
adc
fsubr
popf
lock
mov
mov
iret
das
push
int3
mov
scas
dec
lcall
jle
cwtl
cwtl
lea
add
push
lock
sub
ret
jae
jp
dec
mov
jl
xor
iret
xor
cltd
sahf
insl
adc
xchg
test
mov
adc
mov
loope
jae
push
jne
movsb
cmp
pop
and
add
adc
lcall
add
mov
orb
xor
cmp
dec
cmp
cmp
add
test
sub
inc
xor
gs
ret
insb
push
gs
pushf
push
push
mov
pushf
mov
xchg
pop
cld
xlat
loop
push
mov
mov
dec
repz
add
jmp
add
xchg
incl
in
dec
ja
sub
aad
or
ja
rolb
pop
adc
in
sbb
lds
cmpsb
xchg
out
fdiv
add
iret
dec
pushf
movsb
add
pop
cltd
mov
xchg
cltd
int3
sbb
fadds
inc
sbbb
inc
repz
fildll
imul
int3
sub
daa
xor
fcompl
xchg
adc
push
iret
imul
dec
jecxz
pop
adc
hlt
push
mov
mov
add
mov
sub
and
add
and
arpl
fwait
pop
inc
mov
or
cli
pop
adc
shll
mov
insb
popf
outsl
cmpsl
fbld
fistps
jmp
inc
movsb
mov
or
in
filds
jns
cmc
mov
and
sbb
push
mov
add
mov
ss
push
cmpsl
xorl
cmp
cwtl
sub
mov
pop
push
in
jmp
jnp
or
addr16
push
test
inc
popa
mov
outsb
jge
dec
inc
pop
pop
leave
dec
mov
pop
aaa
aas
hlt
js
aam
push
sub
pushf
lea
push
loopne
shlb
pop
out
pop
add
xor
pop
push
mov
int3
mov
cltd
insl
xchg
loop
divb
out
gs
adc
add
test
icebp
jbe
mov
icebp
xchg
mov
scas
loopne
pusha
lcall
dec
mov
repz
es
or
or
int
test
rdtsc
ret
gs
adc
inc
out
loop
pop
lods
xchg
pop
sahf
lock
cmpsl
fiadds
dec
inc
jne
jmp
in
aaa
fwait
or
xchg
rolb
mov
addr16
cwtl
mov
test
repz
lahf
scas
lret
push
jge
or
pop
inc
xchg
repz
push
fdivs
mov
mov
sub
call
cmc
xcrypt-ofb
cmpsl
insb
orb
pushf
mov
jbe
xchg
popf
test
gs
mov
adc
inc
lret
sub
jg
leave
nop
inc
loopne
aam
ja
dec
jecxz
mov
xchg
mov
pop
test
add
xor
js
mov
jns
jge
jle
testl
push
lods
xor
xchg
in
push
xchg
pop
fs
adc
mov
mov
sbb
lcall
ret
popf
shl
dec
jo
mov
arpl
rol
pop
lret
int
pop
test
out
jmp
clc
outsb
scas
loopne
xchg
test
mov
rcrl
mov
dec
imul
shl
sbb
orb
pop
ljmp
fcmovnb
ss
mov
aas
clc
adc
mov
xor
test
cmc
fistpl
push
lret
sbb
fdiv
not
jae
add
sahf
orb
aaa
call
jmp
ja
pop
sub
jno
adc
jb
pop
xchg
sub
adcb
sbb
mov
cmp
xchg
jns
cmp
sbb
insl
add
pop
in
mov
aam
daa
sbb
and
xchg
jb
in
jle
sbb
in
jecxz
add
ficoms
push
xchg
cli
cwtl
sub
and
adc
lahf
into
and
jmp
pop
fisttps
push
nop
orb
stos
fistps
fs
hlt
cmp
mov
xorb
test
cmp
jge
nop
out
mov
pusha
fcompl
mov
mov
pushf
rorl
leave
loope
add
jnp
std
mov
xor
inc
push
jbe
inc
loope
mov
inc
lcall
add
aam
outsl
cmp
add
push
sub
xor
fcmovnu
scas
xchg
aad
push
mov
testl
outsl
out
cmp
mov
push
aaa
scas
test
mov
push
jae
mov
push
xor
cmpl
jl
adc
and
insl
lret
jbe
pop
rorl
hlt
pop
or
push
xor
divl
fwait
push
in
in
xor
or
dec
jmp
mov
lock
pop
std
idiv
rclb
fistps
scas
test
fcomps
stc
sub
xor
sbb
sub
sbbl
cmpb
sub
roll
push
push
push
out
sahf
pop
pop
movsb
push
push
cmpsb
push
ss
cli
out
lahf
dec
xor
mov
mov
mov
jp
jb
hlt
in
cli
and
xchg
pusha
addr16
jns
jle
add
pop
cwtl
mov
inc
out
or
shlb
outsl
lcall
sub
enter
and
fmuls
and
dec
pop
mov
sub
loopne,pt
sbb
cmp
mov
cli
bound
or
jge
jns
inc
and
stos
pop
pop
enter
bound
or
addb
inc
pop
adc
jge
push
xor
jne
dec
bound
orb
int3
and
stos
dec
dec
dec
pop
push
cmpsb
adc
mov
int3
sti
jl
mov
lock
push
rcr
mov
xchg
sbb
repz
dec
xor
cli
xor
sub
in
fcmovnu
mov
insb
mov
xlat
rorl
pop
mov
jmp
cltd
xor
jle
lods
xor
dec
mov
push
fcoml
jo
int
fnsave
pop
mov
pop
cli
stc
inc
pop
xchg
ds
or
sahf
lret
ret
data16
out
xor
and
bound
push
nop
ret
loop
outsl
loope
push
lcall
or
fistps
add
push
shl
mov
push
cmp
arpl
push
xlat
and
xchg
mov
aam
jmp
mov
mov
stos
cltd
mov
mov
repnz
ret
jmp
mov
inc
adc
es
push
cmc
jecxz
insb
in
cmpsb
fisttpl
ja
push
add
mov
inc
pop
sub
and
mov
pop
jbe
pop
rcl
xor
add
ret
adc
hlt
add
xchg
cld
xor
pop
adc
sbb
jb
loop
push
xor
in
mov
movsl
insb
jne
arpl
test
mov
out
add
imul
clc
cs
sub
mov
pusha
xchg
fcoms
sub
mov
out
ds
enter
leave
xchg
movsl
cmp
push
cmp
mov
adcl
jnp
xchg
aam
inc
mov
push
mov
xor
inc
add
iret
scas
repz
in
popf
testl
test
xor
shll
imul
xchg
pop
in
popa
ja
int
cmp
movsb
pop
or
jb
nop
movsb
cmc
jl
push
jg
gs
sbb
stos
mov
jecxz
sbb
data16
adc
mov
jne
pusha
push
cmp
add
dec
push
imul
and
cli
lods
mov
xchg
dec
sub
std
jnp
mov
push
sarl
jecxz
inc
inc
ja
inc
mov
mov
loope
or
mov
test
pop
sbb
into
cmp
leave
std
sbb
int3
mov
add
sub
or
bound
aam
push
dec
in
cmc
cmp
lret
pop
scas
insl
push
out
loope
adcb
adc
lret
xor
ss
add
pop
jb
pop
jmp
inc
out
cmpsl
inc
enter
pop
movsl
dec
dec
aaa
dec
cmp
fcomps
jmp
adc
add
pop
faddp
int
pop
shlb
fdivrs
pop
add
inc
ss
shlb
xlat
notb
push
imul
in
bnd
js
dec
lods
insl
cs
add
push
and
jno
ret
or
xlat
mov
mov
ljmp
cmp
sub
in
cli
mov
fisttpll
adc
sti
jp
mov
mov
adc
sbb
cltd
jnp
int3
dec
mov
out
push
fwait
pop
xor
add
dec
popa
cmp
movsl
jecxz
mov
xor
shrb
mov
aad
into
in
mov
xor
add
and
sub
cmpsb
nop
lahf
in
mov
pop
mov
subb
xchg
stc
out
stos
pop
jmp
shll
push
xchg
dec
mov
jg
sub
jg
jbe
lods
sub
dec
mov
in
shlb
cmpsb
dec
jecxz
dec
dec
pop
jae
rcll
cltd
mov
loop
lahf
add
push
cmp
xchg
insl
or
pop
inc
xlat
adc
sub
imul
clc
jecxz
sub
imul
add
pusha
jno
adc
or
cld
jns
adc
mov
pop
outsl
xchg
mov
and
cmp
jp
mov
inc
repnz
push
sbb
aam
jmp
lods
insl
sbb
add
bound
aad
ja
jns
shll
cmc
test
jae
push
xchg
dec
out
xor
enter
lea
fldenv
sub
stc
inc
int
xchg
mov
push
in
add
mov
rclb
arpl
jbe
lret
ds
shl
fistpll
jmp
mov
imul
sbb
xor
cli
inc
sahf
das
xchg
xchg
xor
sbb
daa
cld
leave
les
cmp
add
and
out
lock
push
lods
fwait
jmp
rcl
push
cwtl
pop
sub
ret
mov
and
in
insb
xchg
ja
pop
push
lods
pop
push
movsb
push
into
adc
add
and
sub
sub
mov
lret
outsb
int
jbe
xor
jne
add
and
push
xchg
mov
sbb
ss
out
mov
xlat
mov
jmp
bound
push
cmp
mov
fisubrs
pop
xor
and
dec
dec
mov
push
add
mov
fcomps
arpl
loopne
push
xor
mov
loopne
push
or
inc
in
mov
xor
out
pop
push
push
push
mov
in
push
into
popf
fidivrl
and
fcoms
jno
jle
mov
sub
cmp
pop
inc
mov
sub
jmp
mov
jle
das
lret
mov
movsb
push
lods
mov
mov
pop
daa
aaa
xchg
jo
pop
push
imul
or
fisttpl
dec
mov
inc
adc
scas
das
insl
xchg
cmp
push
cmpsl
xor
repz
popf
iret
pop
fwait
push
es
fldcw
hlt
xchg
fstpl
aas
jbe
pusha
insb
sub
aaa
add
faddl
add
push
lods
or
js
pop
or
fs
and
or
inc
jns
jo
inc
sbb
sub
fstpt
loop
mov
rcrl
cmp
mov
mov
pusha
push
mov
xchg
fs
pusha
xor
out
mov
inc
seto
cmpsb
mov
fiadds
add
ds
sub
sub
aam
xor
mov
or
xchg
or
jl
push
insl
inc
jg
leave
hlt
fmull
cmp
pop
movsb
jecxz
mov
xchg
aas
clc
cmpsl
ljmp
mov
or
mov
pop
ret
out
cmp
xchg
xchg
xchg
mov
insb
in
mov
idivb
xchg
mov
mov
adcl
cmp
pop
fcomp
popa
pushf
mov
lods
mov
cmp
mov
js
nop
movb
and
cwtl
push
fwait
xor
xor
and
shlb
mov
cmp
ror
pop
jmp
xchg
jae
fs
adc
shl
inc
jl
add
push
call
dec
dec
and
xchg
pop
std
mov
push
out
jae
push
jb
inc
mov
in
or
and
insl
sub
push
rcl
ljmp
jge
inc
jmp
dec
imull
cmpsl
in
leave
push
cmp
jnp
mov
insb
mov
cmp
add
pop
and
jecxz
sbb
enter
dec
sub
or
xchg
lret
jmp
add
aaa
test
testb
aaa
aaa
insl
mov
dec
sub
das
mov
cmp
inc
lret
in
push
dec
outsl
dec
fs
cmp
jb
inc
sti
dec
xor
mov
fwait
mov
inc
pop
in
mov
in
out
clc
es
xlat
rclb
sub
mov
jne
push
out
frstor
mov
sbb
rcr
fwait
xchg
std
into
sbb
xor
rcr
adc
es
xor
and
add
test
xor
movsl
add
mov
dec
hlt
jl
loop
cmp
jns
popf
pop
push
mov
sbb
in
cmp
mov
rorb
in
and
jmp
into
push
xor
lahf
jl
rcrl
inc
add
sbb
fbld
sbb
push
daa
lock
pop
lret
cwtl
int
and
idiv
or
nop
je
sbb
aam
int3
repz
outsb
sub
push
cmp
sti
push
add
dec
test
jbe
clc
fs
addr16
xchg
pop
adc
cwtl
lea
jne
push
sbb
adc
ljmp
mov
xchg
aaa
push
cmp
pop
imul
add
arpl
jnp
mov
faddp
nop
imul
sbb
aam
cmp
dec
in
rolb
rol
adc
xchg
js
pop
mov
dec
aaa
loopne
out
xlat
fildl
and
fisubs
shlb
out
cld
addr16
ljmp
jb
insb
add
pop
sbb
pop
testb
iret
das
mov
lret
ds
jo
xchg
or
cltd
sbb
xchg
mov
add
cmp
and
lods
out
add
pop
aaa
ret
sbb
mov
data16
popa
rorb
test
sub
out
outsb
mov
mov
cltd
in
int3
call
fisubl
lea
sub
out
loope
push
push
and
outsb
mov
dec
movsb
mov
mov
xor
cmp
ret
je
sub
jo
andb
push
mov
sbb
ljmp
jne
out
aas
mov
xor
mov
pop
xor
lods
repz
dec
mov
loopne
inc
mov
mov
test
adc
jno
nop
jno
fdivl
cmp
aam
lods
lahf
mov
dec
roll
hlt
mov
jecxz
sub
mov
mov
lahf
jo
movsl
in
std
jo
mov
xchg
mov
mov
push
xor
pop
jg
test
mov
fs
dec
inc
push
xor
sbb
jno
jnp
dec
or
pop
add
xlat
cmp
imul
test
ss
dec
and
jb
daa
inc
cs
dec
push
add
popf
sahf
pop
jmp
data16
mov
add
loop
fcmove
xchg
in
cmp
and
xchg
cmpsb
aam
hlt
pushl
adc
cmp
sti
mov
stc
sbb
xor
and
inc
mov
gs
or
addr16
cmpsl
sti
andb
jge
mov
cltd
adc
pop
int
cmp
nop
dec
pushf
jno
dec
aad
int
adc
lea
daa
insl
mov
lds
push
shll
and
stc
into
jae
shll
cmpsl
adc
fwait
loope
inc
das
cld
fsubl
fdivp
xor
pusha
xlat
xor
cmp
sub
pop
mov
gs
int3
pusha
add
test
dec
xor
in
aas
pop
mov
aaa
lods
dec
cltd
jge
mov
mov
clc
out
scas
jge
pop
xor
cmp
lods
popf
lods
ret
jo
lock
inc
out
sbb
shlb
mov
call
pop
mov
mov
lret
mov
dec
sbb
xor
icebp
in
xchg
std
outsl
insb
xchg
outsb
stos
aam
and
paddw
fstpt
pcmpeqw
sub
fdivrl
imul
pop
pop
sub
xchg
or
loope
hlt
mov
jbe
xchg
fs
inc
dec
xor
dec
sbb
jecxz
mov
dec
xlat
movb
mov
or
lret
js
stos
push
loop
sti
mov
out
xchg
mov
insb
xor
adc
sub
mov
mov
rcrb
push
lret
adc
xchg
frstor
and
mov
dec
mov
repz
xchg
or
cmp
scas
cmpsl
adc
pop
popa
xchg
incl
scas
xchg
repnz
ljmp
lret
mull
movsl
add
shrl
sub
xchg
loopne
rcl
cli
repz
adc
add
in
jns
jne
mov
insb
xchg
je
loope
jae
divb
push
cmp
adc
movsb
cmpsl
or
fcompl
mov
xlat
insl
sub
adc
in
mov
pop
es
dec
in
scas
lret
rcll
fdivrs
dec
das
test
pusha
pop
mov
in
adc
arpl
xchg
mov
and
filds
jae
daa
or
push
dec
mov
push
pop
lret
sub
pop
adc
outsb
cmp
adc
pop
out
jns
mov
dec
cld
lret
js
lea
push
lods
sti
jnp
mov
cld
outsb
push
mov
lcall
leave
dec
sub
pushf
je
leave
mov
pop
xor
push
scas
inc
sbb
mov
ret
pop
test
add
std
je
mov
or
adc
sahf
mov
cmp
idivb
frndint
in
in
cmp
popa
call
add
pop
xchg
jne
jae
pop
jo
popa
lahf
push
mov
dec
pop
pop
icebp
enter
loopne
pop
jp
jmp
rorl
inc
pop
in
test
xor
xchg
mov
mov
das
daa
cmpsb
repnz
clc
jo
loope
int
cmp
aaa
movsl
sbb
cmp
jno
ljmp
add
cmp
into
sahf
enter
sub
mov
sub
clc
movlps
and
xchg
lahf
inc
push
jno
test
je
clc
mov
mov
call
stos
cs
or
call
adc
cmpsl
popf
jae
cwtl
int3
xchg
inc
pop
xor
xor
and
push
loope
fcoms
shr
and
stos
fimuls
and
pop
sub
adc
inc
xor
jae
mov
mov
cwtl
daa
das
sub
mov
ffree
fsubp
jne
jno
aam
ss
rorb
push
mov
dec
push
mov
int3
fldt
mov
xchg
js
repnz
out
lcall
lret
popl
cwtl
cmp
sbb
push
jno
mov
nop
mov
aaa
icebp
and
add
insb
xchg
adc
mov
xchg
mov
es
or
jp
adcl
xor
fsubs
xchg
push
popf
cmpsb
aad
pop
cmp
lods
inc
std
iret
in
mov
mov
outsl
fstp
in
cmp
lock
xchg
addr16
sbb
into
lret
xor
sub
jnp
sarb
inc
jl
andl
add
gs
andnps
jae
dec
je
pop
popa
into
into
aad
mov
or
and
out
pushf
ror
adc
enter
repnz
jl
nop
jnp
push
jns
adc
pop
int
enter
xchg
enter
iret
loop
iret
fisttpll
add
jl
jge
ret
or
inc
mov
sbb
lahf
das
aam
loope
insb
push
daa
stc
pop
insl
pop
out
xor
enter
add
push
xor
push
mov
inc
mov
cmp
mov
sub
sbb
rorl
dec
clc
or
xchg
inc
jo
jecxz
mov
adc
fstl
inc
ja
mov
pop
outsl
push
and
push
loop
sub
jno
xor
jne
sub
cli
inc
pop
mov
out
mov
push
dec
lret
loope
je
mov
test
hlt
xor
or
mov
repz
or
push
lret
rclb
dec
inc
sub
sahf
cli
stos
dec
xchg
outsl
out
cmp
lds
mov
call
push
sub
andl
push
mov
mov
push
gs
cmp
aam
out
out
mov
das
mov
pop
mov
sti
mov
imul
or
dec
sub
xor
push
sbb
push
mov
into
jno
aaa
mov
xchg
mov
dec
out
mov
dec
push
in
fadds
out
shlb
js
das
jno
xchg
mov
sub
stc
ja
cmp
adc
adc
test
pmaxsw
lahf
xor
imul
jmp
sub
jp
idiv
lods
loope
adc
adc
jle
sahf
add
aaa
push
inc
aas
pop
test
ret
dec
aas
dec
adc
leave
ret
or
out
pusha
cmp
stc
mov
mov
mov
and
or
adc
mov
inc
sbb
push
movsl
mov
je
xchg
pxor
popf
in
outsb
js
dec
or
shll
sub
mov
orb
dec
xchg
jecxz
insl
inc
ret
inc
je
or
shr
pop
xor
outsl
mov
jp
or
cld
pop
aaa
cmp
jno
test
xor
adc
push
shlb
sbb
jns
lret
xchg
mov
mov
mov
stc
or
pop
pop
cmp
cs
jne
or
push
add
repnz
xor
andb
stc
pop
ljmp
mov
cld
insb
jp
jle
inc
in
negb
push
jae
cmp
std
sbb
push
jl
jmp
jl
jle
outsl
and
xor
lds
pop
lret
aad
xchg
movsl
fildll
enter
adc
or
adc
hlt
sbbb
push
xor
adc
pop
jecxz
dec
repz
adc
lock
mov
xchg
test
push
jb
mov
sbb
sarb
sbb
add
or
cltd
repnz
rolb
test
pop
stc
cmp
or
pop
mov
mov
fnstcw
xlat
out
xchg
flds
or
fwait
xchg
mov
imul
xor
fiadds
adc
sbb
pop
insl
aaa
shrl
cmc
scas
jle
movntq
pop
cmp
push
dec
push
ja
inc
or
and
push
add
lock
sub
addr16
pusha
pop
jl
ret
jle
in
add
add
pop
sbb
add
nop
sahf
or
loop
adc
lret
aaa
adc
xor
sbb
mov
ljmp
jl
mov
lret
xchg
xor
lcall
pop
mov
lret
push
xchg
loope
push
movsb
aas
or
pushf
inc
jge
mov
loop
cmp
adc
xchg
mov
xchg
mov
lret
adcl
dec
push
cs
and
inc
leave
call
sbb
cwtl
stc
dec
or
pop
jb
pop
cmp
xchg
pop
bound
lock
adc
lock
test
test
popa
dec
push
push
jmp
sub
cmp
mov
cmc
add
cli
fdivp
lds
xor
or
inc
idivb
sbb
fst
xor
jl
and
dec
push
mov
mov
or
orl
inc
fwait
stos
dec
inc
and
push
aad
enter
adc
clc
adc
dec
mulb
push
mov
hlt
inc
dec
aas
pop
mov
in
and
add
testb
shl
sub
adc
ss
mov
loop
sbb
mov
jbe
sti
mov
leave
testl
movsl
ss
pop
mov
das
add
mov
dec
popf
push
dec
sti
or
cltd
lods
pop
popa
xchg
data16
cmp
aas
fcoms
sbb
jae
jmp
pushf
and
aam
into
mov
inc
jg
jecxz
inc
add
cld
lret
std
jbe
adc
lock
push
sub
fwait
in
sub
mov
sbbb
adc
cwtl
mov
push
xchg
cmp
xchg
cld
ljmp
jle
inc
test
mov
jne
and
dec
cmpsb
inc
push
or
mov
push
pop
and
and
shll
dec
pop
sub
filds
adc
je
push
jbe
mov
mov
sbb
fwait
pusha
push
or
or
mov
xchg
pop
popf
sbb
mov
sub
js
mov
pusha
pushf
pop
jbe
push
popf
push
jmp
mov
xchg
sbb
stc
gs
mov
ss
xor
inc
sub
cltd
pmuludq
test
add
adcl
in
xor
scas
fmull
ja
mov
pusha
pop
iret
movsb
jecxz
jae
pop
xor
pop
sbb
jae
sub
mov
hlt
sahf
inc
int
test
sbb
dec
or
movsb
mov
jmp
cmp
out
push
cmp
mov
and
test
cmp
pop
mov
scas
imul
push
ljmp
iret
cltd
adc
cli
test
inc
ret
jg
sti
xor
out
dec
pop
cmp
sub
int
jge
dec
xlat
inc
out
or
jg
add
movsb
pop
mov
xlat
into
into
stc
dec
and
push
data16
pavgb
push
out
les
enter
inc
rcll
sbb
loop
mov
mov
jno
cli
divl
xchg
xor
rcrb
xchg
test
pop
lret
pop
pop
or
rorb
pop
inc
es
push
pop
mov
shll
xchg
mov
js
jno
and
loope
andl
jg
or
fsubrl
mov
adc
cmp
adc
xchg
scas
out
imul
addr16
addb
jbe
movsl
repz
movsb
sahf
enter
or
push
fistl
imul
dec
pushf
lcall
inc
pop
inc
in
push
imul
sub
jnp
jne
push
ljmp
mov
push
or
sbb
sbb
icebp
push
adc
or
sbb
dec
and
mov
mov
aad
jg
jo
and
sbb
loopne
dec
mov
or
imul
lcall
test
jl
jb
insb
and
cmp
jmp
jl
sub
addr16
imul
xchg
or
pusha
jno
sbb
clc
xchg
fstps
pushf
sbb
inc
bound
push
js
fdivrl
pop
mov
cmc
inc
xor
ret
and
xor
fdivp
sahf
inc
jmp
cmp
imulb
mov
mov
mov
scas
cmp
jnp
xor
xlat
es
pop
shrb
mov
sbbl
jne
rclb
jne
orl
adcl
xchg
dec
jne
js
rcll
lahf
mov
loopne
dec
cmp
aas
idivl
pusha
and
adc
outsb
xor
js
imul
fwait
push
and
inc
and
fdivp
out
or
ljmp
shr
mov
popf
xor
std
push
int3
jp
movsb
pushf
push
lret
dec
push
cmp
dec
xor
in
lcall
stc
sbb
mov
movsl
sbb
and
mov
les
inc
das
adc
enter
sub
les
mov
adc
xchg
cmp
out
test
jg
xchg
or
and
test
mov
lods
inc
xchg
push
xchg
or
outsb
sti
push
loopne
ss
push
xor
jnp
fs
inc
and
adc
lret
lcall
push
ja
jp
add
cmp
cld
xor
cmp
add
sahf
nop
cmp
adc
pop
mov
sbb
sti
jmp
xor
mov
inc
adc
sub
xchg
call
iret
iret
andb
jb
push
jns
ljmp
sbb
movsl
jo
fnstsw
pop
xchg
jo
aam
or
sbb
cmp
ja
shll
fnstsw
xor
xchg
icebp
jb
push
addr16
dec
jl
adc
cmp
aas
pop
pop
sbb
xchg
vandps
inc
sahf
jp
fstpt
mov
jbe
pop
sub
inc
jb
in
add
in
push
pop
lret
push
sbb
cmp
mov
sahf
inc
movsl
arpl
jg
dec
dec
in
mov
mov
push
arpl
pop
ja
mov
xor
pop
stos
and
mov
repz
push
lods
loope
sti
mov
jnp
aad
mov
sahf
sti
addb
inc
out
add
push
subb
mov
ss
nop
add
jmp
movsl
ja
push
or
rcll
test
cmpsl
mov
jmp
or
push
je
std
int
lea
hlt
decl
outsl
ror
lcall
mov
pushf
scas
jmp
sub
lea
inc
int
xchg
mov
mov
mov
mov
cli
push
popa
insb
cli
les
jne
jbe
xorl
aam
outsb
aaa
clc
mov
cmc
and
pusha
dec
std
fs
and
and
mov
cmp
or
mov
sub
adc
cld
inc
cs
sbb
addr16
stos
ret
xlat
adc
leave
cmp
popa
fdiv
xchg
xlat
jle
stos
insb
sub
or
shr
and
mov
dec
imul
stos
lods
aam
jb
enter
add
mov
aam
and
dec
movsb
mov
jg
lret
xchg
sbbb
cli
add
sbb
push
shll
mov
sub
mov
pop
outsl
push
mov
inc
fildll
stos
add
test
sti
sub
fadds
push
fistpll
pop
pop
and
dec
imul
andl
pop
or
cwtl
mov
or
fmuls
add
jne
into
add
popf
dec
sub
mov
xchg
sub
push
adc
outsb
out
or
jecxz
stos
and
orb
outsl
push
adcl
leave
and
fwait
sub
inc
add
xor
jbe
cwtl
mov
push
mov
mov
es
into
clc
lds
xchg
pop
pop
inc
and
sbb
or
stos
into
cmp
mov
popa
mov
out
shll
xor
sub
xorb
mov
aas
test
jns
outsl
xchg
push
or
pop
popa
outsb
fs
fisttpl
sub
ret
mov
inc
inc
mov
lret
mov
fimull
xorl
xor
clc
adc
push
xor
ret
test
add
sbb
lods
cmp
jge
test
xlat
in
pushf
leave
std
rclb
cwtl
rcrb
mov
xchg
bnd
in
cmpsl
scas
popa
cmp
fsubl
push
cmp
je
pop
cld
mov
push
aad
and
or
or
and
mov
popa
add
ret
cltd
int3
lret
lret
cs
repz
stos
add
out
adc
fsubrs
shrb
mov
jg
jge
xor
js
pop
mov
mov
leave
or
pop
adc
fnstenv
fsubr
clc
lret
aas
outsb
fnstenv
outsb
dec
add
pop
cmp
push
push
push
mov
pop
aam
cli
loop
xchg
sub
adc
sub
inc
stc
inc
mov
fwait
out
push
jp
rorb
inc
push
or
or
mov
mov
scas
mov
or
or
rol
add
je
pmuludq
mov
ss
clc
push
gs
and
fsubrs
inc
and
adc
lret
nop
cmp
mov
lock
lock
push
out
pop
and
push
adc
mov
aaa
mov
fwait
bound
sub
aad
jns
jb
shll
xchg
les
orl
xlat
icebp
les
hlt
sub
shrl
loop
cmp
jecxz
sub
inc
mov
mov
ret
mov
test
fwait
and
xor
mov
js
fidivrs
shlb
lea
lea
out
cmp
inc
and
movsb
push
dec
ljmp
lret
push
mov
les
mov
test
lea
cli
ret
push
cld
repz
outsb
dec
popa
aad
repnz
jmp
add
repz
or
and
clc
scas
lahf
mov
imul
push
dec
repnz
sti
shll
xchg
lret
ss
mov
movsl
iret
leave
adc
scas
xchg
push
scas
lahf
insl
dec
cmp
cmp
sbbb
xchg
mov
pop
int
push
push
dec
add
jmp
sub
in
push
repz
and
je
xor
outsl
shrb
icebp
and
in
popf
frstor
out
push
lods
mov
sbb
testb
or
ret
movsl
add
xor
cmp
jle
or
repz
xor
lock
stos
cmp
pop
mov
sbb
lea
xor
scas
pop
stos
jo
les
aad
in
jmp
xchg
lahf
lds
push
pop
je
or
pushf
cmp
adc
ret
rcrl
cmp
mov
jge
jbe
lret
fbld
into
scas
cmp
dec
sbb
pusha
cmp
push
pop
push
ljmp
pop
inc
xor
das
shrl
out
aad
inc
pop
push
lahf
sti
mov
push
leave
xor
adc
fcomip
lds
gs
mov
mov
ljmp
push
pop
hlt
movsb
mov
out
ja
jg
xor
mov
push
push
mov
addr16
and
adc
jns
sahf
dec
inc
or
push
std
sbb
sbb
aam
add
mov
or
out
jns
adc
aas
nop
mov
push
sub
shrb
pop
mov
daa
xchg
test
inc
sbb
push
stos
lret
frndint
loope
hlt
lahf
mov
in
push
stos
arpl
dec
mov
movsl
ss
push
dec
jg
out
push
or
pop
out
es
add
cltd
or
cli
fbld
add
stc
outsl
push
out
aad
xor
or
repz
out
test
push
xchg
xor
inc
or
jbe
iret
shll
xor
stc
xchg
imul
dec
ds
pushf
enter
xor
into
jg
mulb
lcall
xchg
imul
insb
xlat
outsl
push
js
je
stos
and
push
jp,pn
dec
xor
mov
push
add
jo
mov
sarb
xor
mov
adc
add
sahf
fcompl
movsl
sub
cmp
test
or
push
icebp
jae
mov
add
jecxz
testl
lahf
shll
xchg
movsl
push
out
fsubrl
mov
mov
loopne
sbb
sbb
mov
cs
lock
xchg
mov
adc
call
cmpsl
mov
push
xor
dec
addr16
cmp
pop
inc
js
mov
lock
test
in
lock
popf
xor
adc
jp
int3
into
arpl
lods
lods
int3
pop
sub
adc
pusha
adc
cmp
xor
xchg
jmp
ds
mul
mov
or
out
loopne
cmp
push
adc
das
mov
aas
fcmovne
popf
lods
push
xor
mov
inc
leave
pop
rcll
pusha
lcall
not
push
popa
mov
xlat
and
inc
push
rcrl
push
pop
xor
loop
je
inc
cmp
fsubs
ret
in
mov
pop
adc
rolb
ljmp
rolb
dec
and
mov
add
push
mov
sbb
aad
push
pop
or
mov
test
movsl
xor
push
or
jnp
dec
rorl
mov
push
adc
xchg
add
pop
in
mov
insb
popf
push
xchg
mov
push
inc
lods
int
or
sub
and
mov
mov
adc
imul
jnp
addr16
xchg
loopne
push
mov
mov
add
cmp
mov
dec
cmp
adc
inc
push
and
and
cmc
mov
out
cmc
adc
inc
xchg
in
jg
test
inc
out
and
lods
xchg
xor
xor
and
sub
int
push
mov
outsl
mov
call
or
mov
pop
outsb
je
inc
add
leave
sbb
stc
adc
add
outsb
mov
xchg
push
dec
scas
lods
pop
scas
sub
cmp
xor
and
cmp
mov
jnp
or
or
pop
shl
aad
in
xchg
iret
mov
rol
into
fisttpll
outsb
scas
ficomps
loopne
pushf
xor
or
mov
jbe
inc
aam
in
subb
cwtl
pop
xor
fdivs
dec
out
mov
adc
sub
inc
dec
mov
mov
cmp
pop
int3
mov
jns
push
mov
push
fcoml
push
out
mov
fimuls
rcrb
push
repnz
pop
sub
sub
and
fstl
fwait
into
jmp
or
in
dec
sarb
imul
mov
push
movsb
scas
fcompl
push
dec
pop
imul
inc
outsl
inc
arpl
fcoml
xchg
or
mov
fistpl
mov
and
pop
lahf
jbe
fld1
aaa
ret
adc
insb
pop
xchg
jae
scas
sub
idivb
xor
xchg
lock
or
and
adc
dec
xchg
push
in
sbb
cmp
mov
sub
and
mov
xor
sub
incb
adc
je
push
or
fmull
fiadds
in
daa
dec
mov
fsubrl
mov
insb
lock
push
adc
cltd
or
mov
fst
and
mov
dec
or
data16
aaa
xor
adc
pushf
mov
out
adc
dec
xchg
lcall
mov
fiadds
adc
aam
pop
lcall
pop
push
add
out
into
inc
add
sbb
jae
pop
inc
sub
nop
sub
sub
leave
daa
and
cltd
pushf
xchg
pop
test
js
xchg
pop
popf
test
jle
sub
into
aaa
sub
test
pop
clc
adc
out
movsb
sarl
and
adc
jns
test
cmp
jl
and
fdivr
test
sbb
mov
mov
inc
pop
out
ret
sbb
call
mov
dec
inc
mov
aam
jnp
mov
mov
out
orb
pop
rcr
fmuls
adc
jno
cld
sub
push
xor
xchg
adc
aas
sbb
insb
cld
aaa
add
mov
mov
mov
aaa
in
into
mov
and
or
xchg
push
dec
outsb
sbb
loop
cmp
icebp
dec
das
and
push
xchg
add
es
cmpsb
and
sbb
push
add
jecxz
xchg
mov
adc
push
adc
fsubr
movsb
jl
div
push
jbe
push
xchg
add
pop
mov
dec
add
loopne
iret
mov
inc
fistl
cmpsb
add
mov
dec
in
sub
xor
xor
rorl
outsl
rol
arpl
rcr
iret
sub
nop
xchg
dec
fidivs
and
ret
mov
js
lret
std
icebp
aad
out
andl
test
fnstenv
or
pop
dec
and
int
dec
repnz
in
lds
push
inc
xchg
cmp
outsl
push
shll
enter
sub
mov
sub
jle
push
xor
mov
scas
mov
dec
dec
adc
imul
cmp
xchg
cmp
push
lret
sub
jge
movsl
bound
pop
arpl
sbb
inc
sbb
pop
push
popa
mov
mov
ss
or
xor
lods
push
mov
xor
cmpsb
es
stos
adc
sbb
insb
xchg
popf
sub
negl
sbb
sub
cmpsl
inc
push
in
jb
insl
sbb
xlat
adc
lahf
jb
inc
push
js
or
mov
xchg
add
push
push
pusha
ja
pushf
and
inc
jae
sub
or
xor
iret
and
es
push
sub
jne
push
push
insb
inc
mov
push
shrl
loope
int
jge
fcmovu
mov
gs
adc
jbe
shll
cs
loopne
icebp
push
or
rol
mov
and
push
arpl
test
cld
push
inc
xchg
mov
cvtdq2ps
add
test
and
les
jne
bound
inc
jo
xor
jmp
ds
daa
xor
push
insl
mov
cltd
imul
cmp
and
mov
cmp
pop
clc
sbb
adc
loop
lahf
adc
mov
cmp
dec
xchg
rcrb
sbb
insb
add
into
nop
mov
dec
inc
call
xchg
cltd
cmp
cmp
jo
test
push
shlb
arpl
ficoml
dec
pop
inc
xchg
cmp
push
push
jp
in
pop
push
push
push
dec
test
pop
call
sbb
adc
ljmp
pop
sub
insb
push
or
or
out
gs
pop
pop
test
xchg
imul
cmpsb
adc
jnp
cmc
inc
loopne
outsb
adc
push
bound
fidivrl
fdivl
jge
xor
int
in
jne
fdivl
dec
cmp
mov
pop
sbbb
ror
dec
mov
ljmp
out
inc
insb
insb
sbb
inc
and
push
inc
push
enter
jmp
adc
daa
cld
fstp
add
aam
mov
repz
fisttps
sub
fiadds
mov
shr
push
ljmp
adc
mulb
xchg
negl
out
je
movsl
outsl
inc
jmp
pop
and
adc
scas
sub
cmp
mov
aad
mov
jge
add
jp
push
stos
lret
scas
xor
add
nop
xchg
pop
fiadds
or
ret
mov
lret
shlb
into
stos
aas
movups
mov
std
xchg
int
push
mov
jae
lcall
adc
sar
test
cltd
adc
jns
mov
adc
jb
pop
xor
pop
adc
sbb
call
mov
push
cmp
mov
out
xor
xchg
pop
xor
xchg
xchg
xchg
pushf
lcall
js
shlb
jp
inc
xor
inc
ljmp
stos
cmp
dec
xchg
icebp
lock
jb
mov
cmpsl
pop
arpl
cmp
or
xchg
jp
jno
mov
pop
mov
push
ret
adc
cmpsl
test
sysret
sbb
fcmovu
in
sbb
in
test
je
and
iret
jb
out
ret
sub
js
faddp
cltd
ds
mov
popa
or
int3
inc
sbb
sahf
in
or
mov
cli
xchg
std
xor
jne
hlt
dec
je
xor
aaa
jnp
add
and
insb
xchg
ss
jnp
sbb
sub
imul
inc
pushf
or
xlat
fisubs
mov
cmp
shll
andb
mov
xor
clc
or
add
loop
ja
dec
sub
out
xchg
pop
rcrb
sbb
mov
fidivs
outsb
pushf
mov
out
sbb
xchg
lea
cmp
scas
in
mov
scas
or
ss
mov
jl
mov
ja
mov
lret
pop
add
and
mov
inc
arpl
jl
or
cmp
orl
inc
fs
lds
mov
dec
jg
inc
inc
push
xchg
xor
mov
add
push
mov
dec
adc
jae
pop
pop
mov
lock
xchg
in
jne
in
sbb
bound
dec
add
xor
lret
int3
jge
inc
cmpsb
das
daa
push
out
scas
neg
cmp
hlt
icebp
test
xchg
lock
adc
mov
add
orl
or
sub
mov
cmpsb
push
inc
out
cld
int3
pop
iret
ss
sbb
xchg
mov
mov
and
jo
xchg
sub
xor
mov
mov
sbb
leave
push
or
int
mov
fcmove
xor
cmp
test
xchg
and
xor
outsl
addr16
je
and
into
mov
push
adc
mov
imul
mov
cmp
lds
test
ds
dec
mov
mov
mov
mov
fcmovbe
adc
movsl
fadds
and
ja
adc
dec
fbstp
pop
shrl
push
cwtl
jno
adc
sti
push
fstps
push
adc
mov
or
jb
das
fptan
rcrl
mov
mov
aam
xor
cmpsb
inc
mov
pop
rorb
cmpsl
insb
movsl
adc
push
jle
ljmp
hlt
cmp
add
push
nop
pop
sbb
xor
testb
test
and
cmpsb
into
scas
fstpl
jo
mov
mov
leave
lds
sahf
shrl
es
sti
mov
into
pop
push
pop
xchg
xor
push
test
sbb
ljmp
std
adc
sbb
mov
ljmp
jbe
ds
out
repz
in
mov
test
push
sub
mov
sub
ret
gs
aas
insb
xor
fst
inc
jmp
fisubrs
cmp
scas
push
xchg
pop
mov
sub
push
inc
test
iret
cli
mov
dec
jge
jb
sbb
xor
lret
mov
lahf
push
rcrb
jnp
xchg
push
imul
cld
in
jmp
mov
dec
roll
in
inc
mov
daa
int3
mov
pop
mov
xor
ficoms
pop
pusha
and
orl
movsb
insl
test
aam
ret
pushf
dec
loop
add
out
jecxz
xor
pop
push
and
pop
ja
push
dec
push
mov
pop
and
push
idiv
add
sub
inc
movsl
xor
fs
popa
jb
push
dec
ss
jae
cmp
in
mov
sbb
and
nop
mov
and
jmp
mov
lcall
xchg
jg
mov
xor
xor
mov
mov
mov
cli
jb
cmp
mov
fldl
lods
sub
xchg
sahf
mov
rolb
cmpsl
shll
testl
jo
cld
jns
pushf
dec
push
les
inc
jns
data16
imul
sbb
leave
icebp
lahf
mov
or
mov
hlt
mov
orb
sbb
cs
enter
pop
in
jne
int
mov
sub
dec
outsl
xor
jno
add
movsl
push
and
sub
add
popf
mov
mov
fisubl
andl
sbb
inc
cmp
ss
mov
sub
jmp
enter
fsubrs
mov
inc
cli
aam
fnstenv
adc
adcb
sbbb
sar
lret
fstps
xor
subb
mov
adc
dec
scas
fs
cmp
push
enter
cmc
jp
mov
pop
fnstenv
inc
push
sub
jae
fs
ds
and
stos
icebp
adc
pop
iret
xchg
int
out
int
scas
xor
jno
mov
inc
inc
xor
pop
lcall
push
push
jns
mov
push
scas
mov
add
ds
add
xchg
and
inc
adc
jno
bound
cmp
mov
stc
xor
arpl
dec
fdiv
pop
pop
sbb
aas
pop
sbb
lds
arpl
loope
mov
push
jo
or
insb
dec
mov
int
xchg
ja
or
jb
repnz
pop
dec
in
dec
out
mov
push
mov
cmp
stos
pop
in
mov
repnz
test
xor
cmp
xor
lods
xchg
dec
std
jnp
scas
data16
inc
out
or
data16
fucom
mov
jge
outsl
lret
adc
or
lahf
lea
pop
fisttpll
cmpsl
lret
sub
or
dec
in
outsb
fisttps
pop
dec
mov
mov
fstpl
mov
andb
fdivs
push
xchg
iret
inc
outsl
adc
dec
jp
pop
or
cltd
jp
add
and
push
pop
mov
jo
push
pop
stc
jg
push
imul
iret
lret
xchg
add
aas
cmpsl
mov
testb
lahf
out
xor
jg
or
and
inc
mov
jne
xchg
push
pop
loop
push
orb
push
stc
cmpsb
inc
xchg
in
xchg
mov
mov
in
adc
fadds
addr16
push
mov
lods
and
sbb
inc
adc
or
xor
in
jecxz
mov
sbbb
mov
call
inc
loop
dec
jne
movsb
mov
rcrl
ljmp
add
cli
jp
movb
out
cmpsl
cmc
aad
fisttps
pop
das
mov
xor
jl
cmp
sbb
push
std
xchg
in
cmp
negb
dec
jb
cld
jno
cmpsb
jl
fwait
push
add
sbb
mov
je
lret
movb
scas
pop
or
fdivrl
ja
xor
cs
mov
dec
out
in
fisttpll
stc
mov
sahf
sbb
or
or
fisttps
cld
cmc
in
adc
inc
xor
cwtl
imul
push
jns
stc
sub
pop
adc
add
dec
je
pop
inc
rcrl
aad
add
ja
lea
dec
cmpb
sbb
xor
push
cli
lret
xor
ret
jp
mov
gs
dec
mov
adc
pop
push
inc
shrb
es
lret
xchg
shll
addr16
dec
lock
lea
ret
xchg
cwtl
and
arpl
popa
test
test
jecxz
mov
lods
xchg
fadds
cs
lret
adc
jns
sub
pop
mov
xchg
push
test
inc
daa
xchg
aas
xchg
jb
das
dec
xor
sti
into
pop
cmp
divb
addr16
in
aam
pop
aas
stos
and
mov
sbb
test
push
xchg
mov
dec
jmp
xchg
rclb
outsb
cwtl
out
jns
scas
fidivrs
mov
jae
lea
xchg
insl
push
sub
pop
mov
jecxz
adc
out
jecxz
rorb
jecxz
add
int
and
push
in
fistl
inc
push
test
pop
out
repz
add
inc
add
mov
mov
adc
es
pop
loopne
push
push
scas
ret
jmp
push
out
pushf
imul
daa
pop
ss
jns
das
popa
mov
lret
pop
in
add
xchg
in
stos
add
ret
adc
jae
inc
shrb
mov
dec
cmp
pop
push
pushf
push
and
inc
cmp
add
xor
sub
ficompl
daa
or
and
mov
jle
jnp
sbb
dec
mov
jp
push
mov
mov
aad
dec
fidivrl
rcl
or
xor
cmp
fildll
cli
daa
js
mov
pop
cmp
rolb
fnstcw
stc
mov
xlat
jns
mov
and
mov
hlt
int
xchg
sbb
idivb
push
stc
test
sbb
fcoms
dec
push
mov
inc
or
in
cmp
jae
imul
pusha
add
pusha
cmp
pop
data16
and
mov
and
fisttpl
cmp
popf
mov
cmp
fucomp
hlt
popa
push
pop
xchg
and
fdivl
pop
insb
and
jbe
int
inc
les
mov
sub
mov
ret
jge
and
lock
mov
outsb
test
cwtl
and
gs
and
inc
bound
enter
sub
and
ljmp
int
sahf
add
push
mov
lea
or
sub
sahf
push
inc
adc
mov
dec
and
out
stos
repnz
js
sub
push
pusha
test
xchg
pop
or
sbb
test
inc
mov
pop
pop
lcall
imul
adcb
shr
inc
stos
inc
dec
xlat
jnp
aad
shrb
sbb
shrl
sub
mov
in
and
pop
push
pop
lock
and
jl
mov
jmp
mov
mov
xchg
ret
add
jnp
idiv
test
pop
movsl
mov
in
or
mov
dec
pop
and
push
scas
nop
add
dec
add
fists
je
and
xlat
push
or
push
push
in
push
lret
in
icebp
xor
sub
lds
je
push
xor
iret
pop
mov
pop
xchg
mov
mov
xchg
pop
xchg
xlat
divps
mov
dec
arpl
push
push
push
ja
imul
jae
arpl
xor
sahf
jo
cmc
popf
pop
test
push
or
jmp
jne
cmp
out
in
or
xor
ja
repnz
sbb
loopne
pop
fxch
insb
std
or
clc
sbb
xchg
ja
mov
mov
mov
loope
dec
jne
and
pop
addr16
cld
rolb
jl
pop
bound
aas
fxch
push
mov
cmpsl
jne
or
loop
sbb
push
enter
imul
jle
popa
repz
aad
inc
mov
sub
xor
xor
push
pop
pop
push
loop
ret
add
jns
jae
aam
ret
std
sub
mov
cmp
in
scas
inc
xor
hlt
stos
and
xchg
dec
sub
and
inc
out
push
cmp
fstps
fcmovnu
int3
mov
add
and
popf
out
mov
xor
push
sub
ljmp
or
jno
sbb
inc
aaa
outsl
jae
cmp
sti
cmp
inc
lcall
cs
mov
daa
ret
pop
cltd
out
mov
push
sbb
jp
outsl
ds
aaa
icebp
pop
pop
pop
jmp
cmpsl
sub
pop
mov
mov
fstps
mov
and
sub
xchg
or
push
sub
inc
or
in
stos
cli
loopne
scas
xchg
fcompl
mov
mov
iret
add
daa
push
imulb
daa
in
addr16
fdivr
aaa
mov
inc
fwait
rolb
fistpll
daa
xchg
xchg
enter
sahf
lods
and
ret
mov
jo
sbb
dec
pop
jle
jg
loope
andb
hlt
inc
jg
pop
push
pop
icebp
pop
fsubrl
jl
inc
loope
dec
jnp
repz
jo
adc
push
cmp
fimuls
hlt
mov
scas
mov
add
jae
pusha
mov
pusha
add
add
jo
cmpb
dec
adc
es
test
pop
mov
andl
popf
out
pop
cmc
jecxz
scas
mov
xchg
lcall
adc
xor
cmp
sub
sti
push
and
nop
xor
pop
add
repz
add
adc
xchg
push
or
ja
add
loopne
mov
push
jl
out
push
and
push
mov
and
push
adcl
leave
gs
lahf
pop
mov
and
jecxz
ficomps
xchg
xchg
mov
ss
inc
jp
cmpsb
sub
shll
cmp
out
cld
jmp
ret
fdivr
cli
fimuls
and
inc
dec
fsts
lock
ror
jmp
lods
mov
mov
push
push
mov
scas
sar
inc
addl
fwait
pop
cmp
clc
daa
sub
pop
movsb
mul
mov
in
push
sarb
aas
enter
adc
mov
lret
mov
notl
loopne
mov
or
mov
scas
xchg
inc
dec
shll
cwtl
outsl
adc
add
xchg
rcr
fxch
out
fwait
sahf
mov
icebp
xchg
adc
push
in
sub
iret
fisttpl
jg
out
sub
dec
notl
pop
stc
cltd
insl
sti
mov
sub
jbe
pop
and
sbb
or
mov
lods
imul
jne
fisubl
in
push
sarb
scas
push
sbb
fstpt
jmp
mov
arpl
and
pop
push
aad
cmp
push
out
test
or
mov
and
push
xchg
das
sub
sub
cmpsb
xchg
aam
dec
andb
xor
mov
xchg
push
lret
push
mov
and
or
pop
in
fistps
mov
cltd
ret
in
jl
jnp
mov
jmp
ds
insl
dec
movsb
mov
adcl
sbb
pop
and
mov
mov
jns
shl
lods
aad
rcr
loop
jns
ja
fidivrs
or
enter
push
xchg
lods
jle
inc
cmp
test
cmp
push
xchg
fnstcw
lret
outsb
mov
repnz
push
mov
sbb
out
mov
mov
lret
call
xchg
in
je
push
push
pop
fisubrs
cs
nop
call
mov
pop
push
jp
pop
and
rcrl
outsl
movsl
or
cmp
adc
pop
fiaddl
mov
xchg
sub
mov
enter
lock
cs
pushf
xchg
mov
push
xchg
mov
lea
sbb
jge
out
hlt
mov
fiadds
out
add
adc
cld
subb
stos
xchg
xor
push
bound
das
mov
imul
pushf
pop
dec
jle
adc
xchg
roll
scas
das
mov
inc
push
cmp
sahf
or
push
dec
movsb
idivb
inc
sub
mov
pusha
xlat
cld
jmp
mov
idivl
idivb
sub
lret
jne
pop
add
fisubrs
jp
dec
xor
dec
mov
mov
mov
sbb
addr16
jne
mov
pop
mov
xchg
jp
xchg
xchg
enter
xchg
cmp
xchg
sti
xor
sbb
push
and
dec
push
xchg
cli
pop
push
loopne
sbb
cmp
iret
pop
cmp
jbe
daa
push
pop
repnz
add
dec
cmpb
inc
rorl
pop
cmc
cli
jecxz
and
bound
xor
or
lahf
pop
popa
pop
pushf
gs
lods
int
jns
les
jae
lods
adc
jne
gs
sbb
xorb
gs
xchg
cmp
imul
leave
jnp
scas
addr16
sub
fmul
and
inc
adc
pop
sub
and
add
jecxz
aam
fsin
popf
ljmp
mov
sub
sub
nop
sub
push
mov
or
pop
cmp
push
mov
cmp
push
in
wbinvd
imul
cmp
sti
xor
lods
mov
into
pop
xor
pushf
push
out
xor
adc
or
cli
aad
add
sbb
es
mov
sub
mov
add
inc
popf
pop
jmp
mov
jle
imul
loopne
fbld
mov
and
adcl
call
idivl
adc
hlt
adc
add
sbb
subl
mov
xchg
ss
in
scas
shl
push
jo
add
cmp
cwtl
add
xor
jo
loop
adc
in
and
out
ret
stc
lods
into
xorl
pop
popf
call
dec
cmp
test
sbbl
xorl
and
cs
ljmp
cmp
ja
out
scas
les
imul
pusha
xchg
jae
call
jl
inc
fnstenv
lods
les
sar
lods
jns
cmpsl
outsl
jecxz
daa
jecxz
cmc
mov
mov
ja
pop
or
push
aad
scas
xor
and
or
daa
call
push
add
mov
push
stos
sub
xchg
inc
lret
push
sub
scas
mov
iret
inc
sbb
negb
pop
fnstsw
pop
rorl
add
popa
mov
lds
cmp
pop
arpl
mov
xlat
push
xchg
cmp
sub
xor
jnp
in
and
mov
mov
sbbb
nop
mov
adc
shr
cmc
gs
stc
jb
add
je
dec
pushf
jnp
fisttpll
dec
dec
mov
mov
ds
fsub
test
or
sub
jno
pop
nop
jecxz
out
mov
dec
mov
adc
mov
and
insb
inc
shlb
push
mov
lret
insl
adc
out
adc
int
cltd
lahf
or
iret
jnp
xchg
mov
dec
mov
ja
imul
aaa
mov
adc
sarb
xchg
mov
xchg
out
pop
rcrb
mov
fcomp
push
rclb
push
mull
adcb
add
inc
loope
out
fnstenv
loopne
mov
mov
push
test
sbb
fldenv
aaa
or
fsubrs
push
out
cwtl
nop
mov
movsb
mov
out
lods
cmpsl
mov
inc
shll
leave
push
call
pop
mov
inc
enter
inc
incb
sahf
sub
add
lret
loopne
adc
adc
xchg
lea
jbe,pn
ljmp
decb
scas
stos
jbe
ret
out
test
or
sbb
and
add
js
mov
jl
cmp
xchg
fiaddl
inc
addl
or
js
push
repnz
cmpsb
subb
sub
lock
cmpsb
sub
inc
or
mov
pop
fbstp
cmp
push
popf
mov
xor
das
dec
ret
das
cmp
iret
int
pop
fwait
pop
popf
out
arpl
xchg
xor
mov
inc
add
mov
mov
pop
imul
xor
xchg
adc
push
xchg
mov
icebp
lahf
jnp
repz
ficompl
sahf
dec
lock
adc
scas
add
sbb
sahf
inc
dec
xor
lods
mov
jne
loopne
push
pop
mov
pop
jns
mov
and
mov
inc
mov
decb
sbb
adc
mov
cmc
mov
xor
fsubrs
rolb
rcr
loopne
add
or
and
or
jecxz
je
in
das
mov
ret
add
mov
xchg
stc
in
mov
push
push
mov
inc
and
xor
aaa
mov
lret
pushf
movsb
outsb
mov
lret
mov
add
cld
mov
xchg
rcrb
fistl
popf
std
mov
and
adc
lea
or
dec
and
push
icebp
popf
cmc
mov
aad
mov
inc
mov
es
adc
out
jg
insl
lock
std
add
mov
or
scas
loopne
test
xchg
out
fldl
pushl
xor
test
push
mov
lcall
cmpsl
scas
pop
gs
leave
sub
xchg
icebp
xor
push
mov
cs
adc
in
lods
into
pop
cmp
sti
repz
loopne
scas
dec
shll
jecxz
stc
scas
or
push
adc
lock
dec
cmp
loopw
pop
out
fwait
mov
mov
out
inc
mov
and
cld
shl
jg
jnp
jnp
cmp
das
jno
or
aaa
xchg
push
into
pcmpgtw
adc
enter
sbb
leave
jbe
cld
dec
scas
lods
sub
int3
xchg
xchg
cld
loope
ret
mov
sar
ss
cmp
cltd
and
push
adc
lahf
outsl
lods
fmull
dec
mov
cmp
test
loope
push
push
add
rolb
mov
call
pop
stc
subb
mov
push
xchg
add
xor
insl
mov
insl
test
and
jae
test
pop
cwtl
aas
mov
and
jp
in
ret
xor
mov
loope
je
jp
inc
es
fisubl
pop
ss
or
inc
dec
dec
lret
inc
hlt
adc
les
add
sbb
rorl
stc
pop
add
dec
jne
in
icebp
sub
out
xor
stos
or
inc
scas
ljmp
pop
jae
jmp
shrl
out
pop
mov
outsl
push
sub
inc
lock
loope
jmp
xchg
inc
jl
add
jno
add
sahf
mov
rorb
xor
pop
lea
into
mov
xchg
mov
pop
sbb
fsubp
xchg
pusha
dec
sub
adc
sub
or
flds
add
fidivl
and
in
cmp
xchg
mov
je
xor
outsb
fisttpl
fwait
std
leave
xor
into
rorb
adc
sub
pop
arpl
ljmp
sbb
push
stc
lret
aas
sub
add
inc
adc
cld
cmc
addl
bound
pop
push
mov
mov
mov
fs
mov
inc
add
sbb
clc
test
xor
sar
addr16
in
xlat
and
test
addl
push
mov
xchg
clc
into
daa
mov
scas
lcall
mov
mov
mov
aaa
es
lret
xor
jg
mov
jle
push
imul
xor
push
mov
mov
imul
lds
jae
enter
dec
push
jne
pop
stos
stos
mov
sub
mov
cmp
fmull
fs
scas
add
stos
sub
out
mov
insb
out
and
adc
outsb
lods
inc
fldt
mov
sbb
inc
lcall
pop
mov
inc
cmp
xor
add
aam
sub
mov
pusha
and
les
xor
in
xchg
cmp
push
pop
std
or
and
jnp
out
mov
dec
js
push
adc
sbb
cmp
loopne
sbb
pop
mov
adc
add
or
stc
cmp
sbb
mov
jmp
adc
push
stos
test
cmp
js
cmpsl
jb
ss
movsl
xchg
xor
mov
jmp
jns
pop
fwait
mov
notl
stos
in
rclb
lods
addb
shrb
in
and
scas
subb
mov
jp
mov
adc
or
jmp
cmp
scas
sbb
push
in
and
ret
aaa
mov
add
inc
cwtl
pop
sbb
adc
sub
xchg
adc
enter
xchg
xchg
push
mov
or
sbb
lcall
pop
push
ret
shll
or
aad
push
ds
xchg
mov
loopne
sbb
jae
add
xor
mov
stos
jae
cmp
xchg
clc
mov
add
aam
push
mov
bound
pop
mov
fbld
je
mov
pop
sti
mov
pop
and
mov
push
gs
mov
cmp
adc
mov
jb
popa
or
bndstx
fwait
mov
lods
movsl
outsb
cmp
inc
aas
xor
mov
mov
rorl
out
sub
pop
mov
xchg
popa
sbb
xor
mov
cmpsb
stos
popa
mov
mov
lock
iret
insl
mov
fists
cmp
scas
and
pop
pop
aas
inc
sbb
inc
lahf
mov
mov
adc
in
imul
mov
shlb
jg
push
ss
rcll
fcomps
std
sub
sbb
jne
out
sbb
push
or
adc
push
decb
dec
icebp
into
xchg
dec
xchg
cmp
push
leave
mov
jno
sub
gs
vmulpd
dec
inc
or
test
push
cmc
jp
sbb
pushf
mov
test
in
mov
dec
sub
gs
out
xchg
dec
jne
xchg
adc
fisttps
push
sub
std
pop
lock
call
idivl
and
testl
or
rolb
outsl
inc
dec
cmp
lods
addr16
xor
push
dec
sbb
mulb
pushf
lcall
push
sub
dec
lds
xor
push
shr
push
lret
pusha
lea
or
xor
pop
adc
pusha
sbb
out
mov
loopne
push
dec
les
arpl
or
test
or
pop
aas
outsl
int
std
xchg
mov
adc
imul
dec
or
shrb
cli
push
push
xchg
call
xchg
dec
sbb
or
add
dec
sub
sub
pop
sti
pop
adc
xchg
scas
mov
add
lahf
ffreep
dec
icebp
dec
stos
aam
mov
jae
xchg
or
sub
mov
in
adc
addr16
sbb
lret
xchg
test
cmp
out
lahf
and
aam
adc
pop
out
dec
ret
fisubrl
cmp
push
pop
fldenv
adc
dec
andl
insl
icebp
cld
scas
and
sbb
jns
lds
mov
lcall
roll
push
or
adc
popf
or
repz
adc
repz
mov
or
jno
mov
fimuls
out
shll
iret
mov
push
pop
mov
xor
cwtl
and
mov
adc
mov
orl
dec
mov
inc
push
sti
xor
lds
movsb
dec
mov
add
adc
fldcw
push
push
sub
sbb
jg
pop
std
js
scas
fwait
xlat
in
inc
cmpsb
loopne
sbb
hlt
ror
mov
loopne
add
pop
xchg
inc
mov
repnz
in
pushf
cmp
imul
mov
pop
ds
jp
lea
xchg
hlt
scas
test
inc
int3
popa
jo
pop
xor
icebp
sbb
push
fwait
out
sbb
shr
inc
scas
mov
jg
mov
jb
jmp
rcrl
dec
movsb
mov
sahf
out
mov
pusha
mov
inc
dec
mov
iret
hlt
xchg
es
and
test
sbb
out
mov
stos
fisubrl
jne
outsl
into
pop
mov
not
dec
mov
push
cmp
jo
repnz
in
pushf
cmp
aad
xchg
imul
test
or
and
mov
fcoms
or
lcall
int
jno
hlt
mov
mulb
lret
cltd
bound
dec
enter
outsl
ret
xor
stos
cmc
adc
xor
inc
pop
dec
xchg
sti
es
shll
jle
inc
sbb
cmc
ljmp
into
mov
xor
in
sub
pusha
adc
icebp
add
xchg
mov
shr
repnz
cs
loop
aam
testl
stos
xchg
aad
pop
push
stos
les
push
sbb
pusha
out
lret
aas
insb
stc
sub
pop
popf
mov
mov
cmp
and
int3
clc
sbb
mov
adc
xchg
jo
clc
push
sub
jae
mov
sbb
pop
es
lods
lret
pusha
lcall
lods
fimuls
movsl
in
lahf
scas
call
lds
arpl
subl
mov
fistpll
jmp
push
in
lcall
and
lea
adc
fwait
jne
cmp
gs
aas
das
std
inc
jmp
push
mov
cwtl
movsl
mov
pop
and
jae
inc
push
loop
mov
push
sub
jb
pop
sbb
pop
cltd
rolb
inc
or
push
jo
pop
aam
mov
sbb
nop
mov
mov
hlt
push
lcall
mov
xor
mov
fimull
xchg
mov
xchg
xchg
add
insl
jmp
jno
int
add
jg
sub
daa
aad
sbb
sbb
dec
imul
cmp
lods
stos
ret
jbe
aad
aad
sub
cld
jb,pn
addl
dec
in
adc
repz
sub
gs
gs
dec
js
push
out
xor
cwtl
push
inc
cmp
in
or
xchg
outsl
in
roll
inc
xor
arpl
adc
sbb
imul
xlat
lret
push
fimull
movsl
xchg
pop
xor
fwait
nop
push
mov
rol
push
outsb
pop
popf
inc
xor
sbb
push
xor
aaa
lods
mov
fsts
cmp
lret
jae
mov
fisttps
pop
dec
jne,pn
ficoms
and
push
xchg
scas
aam
adc
pop
cmpsb
nop
movsl
out
sbb
cli
ds
xchg
push
pop
mov
inc
lea
scas
cli
sbb
mov
mov
fucomi
jb
pop
ficoms
ret
xchg
inc
decb
mov
adc
pushf
mov
lock
mov
ds
inc
repz
jmp
pop
mov
rorb
sbb
jge
or
sbb
sub
movsb
dec
pop
cmpsl
dec
gs
jno
in
dec
in
jp
or
mov
popa
pop
cmp
mov
and
jp
dec
test
mov
ja
cmp
adc
dec
fwait
mov
cmp
mov
sub
fiadds
dec
js
mov
sub
cmp
mov
in
cmp
enter
jmp
xchg
dec
int
neg
divb
std
or
pop
dec
std
arpl
mov
cmp
mov
lock
mov
mov
adc
sbb
leave
hlt
or
sub
or
sbb
outsb
pusha
lret
ret
clc
jae
dec
aad
cmc
jns
add
push
inc
aam
hlt
dec
lock
or
addr16
add
sub
mov
xor
rcrb
push
test
pop
xchg
sub
scas
inc
sbb
xchg
ror
xchg
pushf
sub
gs
lahf
clc
andl
popa
pop
pop
cmp
stc
pop
fcmovbe
add
clc
movsb
push
loope
addr16
xchg
lods
scas
mov
pop
xor
stos
pop
repnz
movsb
xlat
dec
repnz
into
sbb
insl
insl
sbb
pop
xchg
lods
pushf
test
or
mov
sbb
lret
jmp
xchg
add
xor
and
sti
push
jnp
adc
stos
popa
jp
xchg
cmp
sub
pop
test
xchg
das
or
lcall
or
subl
or
jo
inc
daa
add
mov
push
stos
pop
and
into
arpl
jg
roll
xor
or
mov
aaa
cltd
call
sub
cltd
push
sarl
outsb
mov
cld
mov
js
loopne
add
std
sub
idivl
imul
dec
std
or
int
xchg
lock
enter
dec
test
scas
xor
push
mov
mov
movsb
fprem1
mov
jns
push
jo
add
bound
int3
std
cmp
sbb
adc
rcrb
mov
popf
leave
or
push
insb
testl
push
addr16
mov
fsubs
sub
testb
cmpl
jl
mov
out
and
mov
movsb
mov
pop
fs
mov
out
dec
mov
inc
rcl
and
mov
call
xchg
dec
je
mov
sub
in
mov
jne
cmpsl
push
adc
jp
test
xchg
push
clc
ss
adc
add
std
jae
cmp
lcall
push
fmuls
xor
xlat
or
inc
xor
inc
ja
pop
inc
mov
test
mov
aaa
lods
fcomi
inc
xchg
or
lods
dec
push
mov
xor
and
shll
pop
mov
mov
jp
sub
bound
lods
cmc
mov
das
shlb
js
out
insl
cmp
adc
in
cmc
add
and
mov
pop
out
sbb
mov
mov
fistpl
xchg
loop
dec
jg
pushf
jns
aas
dec
adc
push
or
xchg
daa
idivl
sbb
frstor
ret
inc
push
add
push
lock
or
mov
push
inc
push
sub
mov
in
cmp
fiaddl
mov
lock
cmpsb
inc
add
addl
inc
adc
cmp
outsl
sbb
test
bound
adc
add
dec
outsb
divb
add
and
push
mov
push
push
adc
test
mov
jnp
or
in
fs
cmp
flds
xor
xchg
imulb
ja
pop
cli
add
add
and
or
in
xor
dec
into
adc
daa
dec
or
xor
inc
shll
rcll
dec
push
dec
inc
pop
inc
inc
das
adc
push
cmc
pop
cld
adc
outsb
lds
out
push
dec
push
fsubl
push
or
jecxz
xor
jnp
pop
cmc
mov
jo
repz
push
or
or
in
andb
inc
adc
aam
outsb
es
xorl
pusha
or
sub
xor
and
mov
scas
push
jmp
push
test
inc
xacquire
cwtl
jnp
stc
ret
js
pop
in
mov
dec
repz
cwtl
enter
stc
adc
xchg
push
mov
lea
jg
dec
es
cmpsb
test
pop
imul
std
pop
in
or
jo
xchg
cmpsb
push
mov
arpl
push
bound
cmp
rcl
xorl
push
pop
push
test
push
adc
outsb
adc
mov
lods
mov
int
xchg
xor
insb
xchg
push
lcall
push
data16
cwtl
movsb
arpl
jnp
push
and
sub
fnstcw
ss
notl
pop
inc
fldcw
cmp
push
scas
test
inc
lds
mov
jcxz
xchg
mov
push
shrb
sbb
jnp
pop
rolb
pop
jnp
pop
sbbl
push
ljmp
pop
mov
test
loop
jns
mov
sub
xchg
add
mov
mov
neg
dec
cmpl
mov
popa
outsl
mov
push
je
pop
pushf
rol
mov
inc
out
loop
rcl
jmp
jae
rorl
inc
dec
movsb
fadd
test
iret
movsl
cmpsb
adc
scas
scas
popf
jle
cltd
inc
and
leave
in
movsl
adc
or
loop
loop
push
fsubrp
sbb
pop
lret
loope,pn
je
decl
jmp
fiaddl
push
xchg
mov
mov
cmpsb
xor
push
mov
adc
add
repnz
cmp
push
popa
jge
dec
fwait
sub
push
rcrl
xchg
imul
jb
push
insb
pop
mov
dec
and
sub
inc
xchg
xchg
dec
popa
arpl
add
push
mov
les
mov
cmp
bound
iret
out
int3
std
xchg
and
jb
mov
xchg
stos
int3
jg
imul
sub
ds
inc
mov
dec
orl
scas
push
dec
cmp
mov
mov
inc
mov
xor
rep
scas
inc
int3
mov
sub
mov
cwtl
push
push
dec
xchg
xlat
add
push
mov
cli
xchg
or
and
and
mov
push
mov
sbb
data16
mov
btc
lea
mov
jbe
aas
xchg
adc
fwait
icebp
imul
and
les
mov
js
fnstsw
clc
dec
push
sbb
cld
test
stc
sub
jg
adc
ljmp
movl
mov
cmp
jne
in
fwait
repnz
jecxz
xchg
pop
inc
adc
aad
sbb
jge
in
inc
mov
xor
mov
and
mov
and
xchg
imul
roll
arpl
sub
push
sub
jo
test
sbb
inc
pushf
cmp
ja
mov
outsb
pop
cltd
adc
call
ror
pusha
push
cs
adc
adc
mov
add
push
lret
rorl
imul
rcr
fdivrl
jno
inc
mov
iret
xor
mov
les
push
lret
cmp
lret
sub
jecxz
adc
dec
shl
movsl
mov
push
data16
je
das
push
push
mov
mov
lock
mov
inc
mov
adc
inc
xchg
adc
cltd
outsb
and
shll
lahf
mov
loope
cli
add
out
cmpl
sub
pop
dec
xchg
and
fimull
cmp
pop
test
mov
xchg
cmp
test
outsb
cltd
sbb
inc
pop
push
jne
and
daa
pushf
sub
scas
pop
xor
cmp
aas
and
sub
orl
or
int3
jecxz
cmp
mov
cmpsl
or
lods
iret
jae
pop
out
push
aad
movsb
mov
mov
orl
ret
out
xlat
into
fiaddl
movsl
mov
mov
mov
xor
fidivs
movsl
add
sub
out
push
pop
dec
or
or
pop
mov
les
mov
adc
js
sub
mov
mov
mov
fs
pop
out
into
push
les
mov
jb
jb
jmp
pop
les
and
ja
arpl
pop
ficoms
cmp
sahf
xchg
jp
pop
lods
sbb
sub
jns
fs
lock
sbb
jo
cmpsb
test
dec
js
lcall
xchg
mov
and
icebp
mov
sahf
cwtl
cmpsb
dec
stc
incl
enter
add
push
jae
dec
ljmp
jp
adc
cmp
cs
inc
cltd
mov
les
jno
in
out
jl
mov
loopne
push
adc
dec
in
push
subb
push
movsl
lods
mov
push
repnz
test
out
inc
clc
test
inc
pop
adcl
pop
imul
sbb
and
in
or
sub
cmp
cld
aad
imul
in
add
jg
test
or
data16
push
repnz
jnp
pusha
jle
sahf
test
mov
mov
fcomps
rcl
inc
lods
adc
arpl
xor
cmp
xchg
and
cli
jecxz
cmp
push
mov
sub
lea
fstpl
dec
stos
in
cmpb
outsb
in
or
dec
inc
std
sbbl
pop
sub
cltd
pop
and
cmp
fs
cmp
xchg
pop
je
sbbb
shl
cs
cmpsl
lahf
mov
add
cltd
pop
and
rorl
pop
cmp
inc
les
sub
cmpsb
cmpsb
hlt
pusha
mov
clc
imul
jle
xchg
push
mov
scas
xchg
pop
test
pop
xchg
cmp
mov
fistpll
addb
and
iret
pop
xchg
cs
das
jge
in
mov
jl
rolb
pop
lds
xor
mov
je
xor
xor
imul
push
mov
pop
mov
gs
icebp
mov
aas
pop
clc
or
mov
cltd
or
inc
loop
inc
cmpb
xchg
ret
cmp
and
sub
roll
xchg
xchg
fnstsw
jne
fwait
push
rcll
and
inc
sub
cltd
fwait
add
inc
inc
adc
push
jmp
imul
mov
ret
mov
mov
sahf
mov
add
je
xor
rcl
inc
sbb
mul
xchg
inc
test
sbb
mov
lods
stos
sbb
sbbl
pop
mov
mov
xor
int
jl
xor
mov
iret
fmull
inc
cmp
jp
cwtl
gs
push
xchg
fcmovnb
mov
sbb
shrb
out
aam
pop
xor
mov
mov
pop
flds
bound
push
mov
mov
push
inc
sbb
mov
pop
mov
fsubs
inc
add
jle
rcll
lods
sub
cmp
mov
jge
sub
les
dec
adc
adc
addr16
hlt
mov
ja
or
call
inc
xor
je
stc
dec
imul
js
leave
fwait
push
jmp
pop
iret
cwtl
movsl
dec
pushf
inc
jge
mov
call
jg
push
cltd
xor
and
add
inc
fidivs
jae
movsl
cwtl
push
test
or
sbb
icebp
sub
pop
mov
fs
stos
movntps
push
mov
push
xor
push
outsb
popf
sub
outsl
jmp
cmc
sbb
test
punpcklbw
push
sub
sar
scas
lods
cwtl
daa
lea
push
mov
sub
and
xchg
pop
repnz
outsl
mov
add
jnp
mov
test
mov
aaa
or
std
int
sub
and
push
data16
push
rolb
in
adcb
int
pop
movsl
aam
or
mov
mov
adc
cld
dec
jecxz
in
mov
inc
push
cmc
mov
das
or
or
rol
push
dec
or
pusha
push
call
mov
mov
adc
add
mov
movb
mov
aam
adc
outsl
movsl
and
shll
pop
push
pushf
or
lds
or
popa
testb
test
sbb
insb
pop
and
pushf
movsl
ss
jmp
in
mov
idivl
pusha
xor
or
inc
xchg
hlt
push
aaa
in
cwtl
stos
mov
mov
jge
loopne
mov
sarl
sub
jp
add
bound
stc
push
ficomps
imul
fadd
adc
or
stc
xchg
or
in
out
jmp
data16
xchg
clc
mov
add
int
stos
adc
sahf
sbb
testb
lahf
int3
bound
push
inc
pcmpgtd
sti
lret
mov
and
dec
sahf
sub
or
mov
enter
aam
scas
pop
or
mov
mov
jle
or
jg
xchg
xor
arpl
mov
cmp
and
jae
pop
sub
cmp
jo
push
shl
cmp
push
lock
or
mov
add
sbb
cmc
lds
dec
cltd
mov
std
aaa
adc
std
rclb
insl
dec
mov
add
mov
mov
sti
pushf
inc
fsts
incl
mov
sub
aas
insb
scas
and
jmp
fsubrl
into
adc
jne
dec
xor
out
adc
js
xchg
sub
shll
add
mov
int3
xchg
idiv
mov
pushl
mov
push
xchg
pop
xchg
cmp
push
ficompl
or
int
sar
jno
cmpl
add
neg
dec
dec
lods
iret
xor
ds
and
out
dec
or
dec
inc
loope
push
dec
mov
fldenv
call
jae
aaa
and
pop
pop
mov
sub
lea
inc
test
push
data16
mov
call
dec
or
dec
shll
cmp
adc
push
dec
or
roll
in
jns
test
shrb
jb
xor
push
sbb
outsb
rclb
sbbb
in
jne
jb
or
loopne
ljmp
mov
jbe
je
jne
mov
jl
push
es
insl
rcrl
cmp
rcrb
ret
xchg
add
push
xchg
lods
test
mov
icebp
mov
jle
mov
xor
sub
hlt
inc
into
mov
loop,pn
push
loopne
jge
lea
test
es
les
les
push
dec
das
cmc
insl
pop
pop
movsb
push
jo
xor
xor
pop
insb
lods
jmp
sbb
push
rcll
lock
outsl
std
push
sahf
icebp
jmp
test
adc
mov
push
push
adc
scas
mov
adc
push
inc
test
out
push
div
and
xor
arpl
xchg
dec
xor
mov
sbb
and
push
pop
insb
popa
sahf
xor
or
push
mov
out
add
call
test
pop
stc
xchg
cmp
fst
add
insl
scas
dec
test
mov
scas
sub
scas
cltd
fsubrs
inc
hlt
cmp
out
and
pushf
sub
loop
popf
sbb
adc
movsl
push
mov
mov
mov
sahf
divl
cwtl
push
sti
sbb
out
repz
ds
jge
xor
mov
repnz
icebp
stc
dec
add
call
lret
cmp
dec
pusha
mov
loop
xchg
in
mov
or
mov
and
xor
addr16
fidivs
outsb
mov
notb
inc
fisttpll
test
or
sbb
outsl
clc
jbe
inc
mov
pusha
add
lret
jb
jbe
insb
and
rclb
es
cwtl
pop
jae
sbb
sbb
mov
js
mov
out
icebp
sarl
adc
add
dec
js
adc
test
push
aaa
mov
jge
bnd
repz
sub
lods
leave
outsb
sub
addr16
std
fcompl
js
addr16
int
mov
sub
stos
cmp
xchg
int
mov
lcall
iret
lods
faddl
stos
outsb
lret
adc
mov
xor
shrl
out
fldl
mov
sub
decb
pop
stos
cld
loopne
rcpps
je
addb
push
jnp
sahf
repz
mov
inc
jp
out
fistpl
and
add
lret
aas
nop
clc
push
daa
fcmovnbe
inc
pop
push
or
insl
xchg
mov
roll
mov
mov
jno
lds
dec
std
xchg
dec
loope
daa
or
mov
cmpsb
adc
outsb
mov
dec
xchg
push
dec
or
sub
incl
xor
in
or
adc
jmp
add
mov
stos
mov
push
loop
or
push
loopne
adc
sbb
je
aad
mov
mov
out
add
rcrl
outsb
rorl
dec
xor
mov
inc
into
adc
cmp
je
test
jo
xor
inc
daa
loop
int3
dec
xchg
mov
mov
ret
jae
sbbb
call
pop
movsl
mov
adc
jne
add
bound
out
jmp
arpl
dec
xchg
dec
icebp
inc
jecxz
xchg
in
and
mov
xchg
pop
ljmp
cmpsb
xchg
clc
cmp
insl
bound
xchg
xchg
stos
rcl
mov
sahf
cwtl
lock
add
hlt
int3
cmp
popf
mov
call
outsb
push
insl
test
sub
hlt
shll
sub
in
push
addr16
loope
insl
icebp
addl
call
mov
mov
repnz
xor
pushf
push
xchg
iret
xchg
lea
pop
sbb
jl
lods
or
mov
dec
jl
test
pop
cltd
call
pop
insl
jns
out
xor
mov
jle
pop
ja
out
in
fmull
neg
add
mov
mov
mov
lea
pop
mov
mov
mov
cld
push
lods
hlt
xor
push
and
bound
sbb
cmp
inc
aam
xchg
ret
cld
push
pusha
aaa
mov
mov
insl
or
adc
pop
push
ja
cmpxchg
adc
inc
jp
insl
jbe
cmp
sub
cmp
aam
aad
mov
and
les
pusha
bound
rcrb
sub
pop
xchg
lahf
shll
jecxz
xchg
mov
mov
insl
es
mov
sbb
mov
sbb
lock
pminsw
imul
popa
xor
in
pop
cs
aas
dec
add
sbb
mov
movl
cmc
addr16
or
cmp
fdivl
andl
add
mov
push
jmp
int
add
and
jne
lock
fnsave
xchg
sub
cmp
shl
popf
lcall
push
xor
ret
nop
testb
adc
ljmp
mov
add
mov
lds
adc
rcl
fstps
pop
mov
fdiv
jmp
adc
leave
movsb
dec
mov
xchg
arpl
sarb
inc
xor
xchg
ja
xor
ret
jae
adc
divl
mov
or
testb
adc
dec
addr16
daa
sub
push
xchg
inc
pop
fsubr
jbe
popa
aas
adc
or
push
stc
xchg
js
dec
cwtl
and
mov
dec
movsl
call
lcall
cmpsb
jbe
mov
jg
icebp
push
and
add
test
into
adc
mov
pop
or
push
scas
outsl
xchg
cmp
daa
loopne
xor
ss
add
movsl
sbb
cmp
sub
mov
shrl
pop
xchg
mov
iret
shlb
sbb
or
add
xchg
mov
cmp
cltd
dec
xchg
stc
dec
sarb
dec
or
cmp
sahf
pop
push
lea
mov
lret
pop
dec
xchg
mov
jp
mov
js
add
jae
out
and
test
test
mov
daa
add
stos
jecxz
dec
jae
add
xchg
enter
or
popf
sar
mov
fistpl
movsl
in
in
mov
leave
push
mov
xchg
aad
rol
test
or
cmp
jp
or
icebp
add
mov
loope
mov
cmp
xor
repnz
push
iret
and
or
addr16
or
or
dec
push
lock
add
mov
enterw
cld
loopne
mov
dec
push
out
jnp
adc
mov
aam
mov
stos
das
and
mov
add
pusha
sbb
ja
cmp
test
fldt
cmp
hlt
add
push
test
lss
sbb
iret
incb
scas
jbe
mov
mov
out
sub
insb
dec
dec
and
or
orb
and
fldenv
test
push
test
pop
jl
jbe
push
dec
rorb
cmp
out
mov
lods
lods
loopne
push
aaa
jne
and
pop
xchg
jle
loop
xlat
fs
cli
pusha
insl
stos
inc
mov
test
out
sbb
pop
lds
in
in
test
mov
pop
add
cmp
jl
inc
add
pop
lcall
leave
daa
popa
dec
inc
cmp
out
addr16
mov
popa
sbb
xchg
mov
rcrb
stos
sbb
or
test
push
popa
js
jecxz
in
push
test
fcmovbe
stos
mov
cmpsb
sarl
xchg
imul
inc
dec
push
dec
adc
and
repz
jnp
sub
sbb
add
and
jnp
and
insb
fisttps
cmc
jno
mov
add
into
add
mov
adc
jle
fwait
cmp
shll
lea
push
nop
inc
lea
inc
dec
arpl
sbb
fstpl
xchg
popa
sub
sub
mov
cmc
mov
addr16
test
das
cmp
push
idivb
sbb
and
je
xor
sbb
ficoms
push
or
in
adc
sti
dec
test
jp
add
inc
mov
push
out
decb
xchg
adcl
dec
dec
popf
inc
loope
lods
push
xor
xor
or
pop
sbb
fsubrs
xor
call
enter
cltd
in
inc
pop
jns
imul
stos
inc
clc
mov
sahf
xchg
pop
fdivl
xor
or
cmp
pop
push
mov
push
xor
pop
fnstcw
pop
xchg
sahf
pextrw
mov
jnp
insb
mov
rorl
push
clc
rclb
mov
push
or
ss
fstps
pusha
stos
cmp
pop
mov
movsb
mov
lea
pop
pop
lahf
push
loope
daa
adc
fisubs
dec
xchg
jne
leave
fiadds
or
lret
cltd
in
dec
adc
test
xor
shr
mov
sub
dec
out
jmp
and
mov
fldl
rclb
adc
pop
push
pop
loop
inc
sub
rcrl
enter
ret
clc
inc
mov
jae
mov
sarb
jp
jmp
pop
daa
int
sbb
or
ret
test
fwait
pop
jge
jecxz
nop
iret
push
fisubs
or
mov
xchg
mov
fistps
cld
dec
cmp
bnd
xchg
in
aam
lea
divl
ficompl
fs
cltd
and
in
push
mov
push
ror
stc
cmp
mov
popl
xchg
pop
rcll
clc
adc
fsubrp
xchg
leave
out
mov
int
insl
xor
ljmp
in
and
sub
and
decb
es
or
out
push
out
dec
mov
mov
xchg
stc
jne
or
cs
xor
xor
jle
pushf
psrld
icebp
cmp
mov
ss
push
or
cmp
cmp
xor
js
add
pop
adc
add
jbe
push
sub
xor
arpl
bound
ret
fadd
fnstenv
loop
and
in
push
test
pop
cmp
scas
jmp
ja
add
sahf
jge
adc
mov
or
push
jne
pop
ss
jno
lods
sbb
push
push
clc
xchg
jb
mov
int3
es
sbbb
pop
jl
mov
sti
xchg
dec
cmp
aad
jnp
cli
popa
push
loopne
xchg
jno
jl
scas
inc
mov
outsl
fstpl
pop
adc
shl
cmp
test
inc
pop
lret
xor
sbb
aas
aas
std
or
adc
push
cld
dec
fwait
ljmp
subl
js
pop
ds
out
inc
jo
cli
push
mov
ficoms
mov
mov
jl
jp
cmpb
mov
xrelease
mov
in
rolb
or
out
xchg
push
mov
bnd
fadds
aaa
dec
xchg
or
rolb
mov
js
push
bound
je
ret
and
les
lahf
jge
cmp
pop
cmc
test
clc
sub
inc
sti
movsl
push
cmp
sbb
inc
mov
mov
repnz
dec
sub
jb
test
int
cmpsb
add
cmpsb
mov
lods
mov
mov
cmpsl
sub
loop
cli
pushf
jnp
ljmp
es
movsbl
cmp
je
and
push
adc
sub
sbb
pop
xchg
lods
cmp
and
jge
add
lods
xor
add
pop
scas
addl
sbb
pop
inc
movsb
pop
fwait
mov
ror
push
mov
and
mov
ffree
or
sub
lcall
cvtdq2ps
and
xchg
pushf
dec
lea
or
mull
adc
xchg
mov
mov
mulb
notl
sub
mov
pop
sbb
adc
mov
jp
cwtl
shl
xlat
cmp
leave
push
test
or
push
aaa
sub
fists
dec
aaa
das
icebp
mov
mov
push
mov
or
mov
pop
pop
jp
aad
sahf
test
insl
bound
push
scas
mov
mov
push
xchg
stc
jns
loop
xchg
xchg
mov
or
push
scas
add
movsb
out
aaa
scas
in
mov
pop
leave
mov
int
testl
pop
cs
add
icebp
popf
adc
ret
imul
dec
rol
push
jmp
xchg
cmc
fdivrl
adc
mov
sti
movsl
jo
nop
js
pop
int
lahf
pop
dec
lret
push
inc
jecxz
jo
mov
iret
lock
out
jecxz
sub
xor
push
mov
stc
ret
in
idiv
jnp
cmc
dec
add
das
pop
pop
ret
sahf
loopne
mov
ret
es
jo
inc
adc
jg
mov
add
lods
int
xchg
fwait
or
js
incl
jae
xchg
xchg
ja
cmpsl
sub
jns
cli
jae
hlt
inc
rclb
dec
out
xor
dec
dec
scas
or
or
daa
add
sti
inc
xchg
bound
mov
pop
xchg
mov
loope
out
xchg
punpckhdq
shlb
rolb
mov
push
mov
cmp
pop
mov
ja
xchg
jno
ret
dec
cmpsb
sbb
dec
pop
mov
cmp
lret
bound
pop
adc
sbb
test
sub
adc
add
ja
das
loop
rorb
jnp
dec
inc
push
jmp
sub
jle
pusha
mov
mov
jmp
xor
add
imul
dec
das
movsl
mov
shl
push
pop
xchg
add
or
mov
mov
in
mov
cmpsl
sbb
sbb
leave
mov
lcall
sub
lea
xchg
mov
xor
call
xor
xchg
or
jg
inc
inc
pop
adc
mov
daa
jno
cs
push
out
adc
sbb
and
inc
out
dec
movl
and
xor
dec
ljmp
or
stos
adc
outsb
cmp
sbb
mov
lock
bound
mov
scas
pusha
loopne
es
outsl
jge
and
ret
cltd
add
lods
mov
pusha
popa
mov
popf
test
pop
sub
orl
test
push
fcomp
out
iret
add
ljmp
mov
add
dec
movb
inc
mov
mov
hlt
cmpsl
mov
popa
daa
loop
and
int3
add
sbb
cli
enter
mov
aam
repz
push
adc
mov
test
gs
and
aas
popa
aam
mov
lods
out
cmpsb
jmp
out
aaa
les
mov
push
xchg
int
fs
xlat
fidivl
andb
lods
pop
lcall
xchg
shlb
sbb
mov
in
out
push
lret
adc
sub
cmp
mov
and
pop
mov
push
lock
add
mov
cmp
or
xor
das
push
mov
xchg
hlt
push
aam
and
dec
insb
jge
jmp
je
adc
ljmp
pop
adc
ret
xchg
pushf
xor
nop
cmpsb
cs
and
mov
int3
cld
mov
incl
imul
push
scas
dec
push
jb
push
in
lret
push
pop
imul
xor
push
dec
call
xor
sbb
xchg
popf
adc
or
ret
or
jle
out
aaa
jl
and
js
out
ficoml
jae
and
xchg
imul
xchg
lcall
sbb
rorl
xor
inc
jns
pop
sbbb
pop
movb
pop
jbe
fsubrl
push
pop
out
xchg
int3
pop
shrb
adc
mov
cmc
mov
negb
inc
and
sbb
divb
pop
jnp
orb
mov
inc
cwtl
ds
das
cs
inc
ds
sub
dec
cmpsl
test
and
xor
gs
decb
cmp
push
lds
mov
sbb
loopne
cmp
pop
ret
popf
mov
add
mov
pop
loopne
or
fcompl
shll
mov
mov
jbe
cmpsb
mov
jp
aad
int
lahf
rolb
lret
jle
mov
xorl
or
stos
and
loopne
push
insb
push
pop
and
loopne
add
push
jp
jl
mov
mov
pop
test
inc
stos
jecxz
sub
pop
testb
gs
mov
lds
mov
push
rol
addr16
int
dec
xchg
cli
or
cld
sti
ret
xchg
gs
leave
adc
xor
mov
inc
or
xor
pushf
adc
testl
loop
or
or
stos
push
cs
pop
es
dec
mov
adc
sbb
mull
pop
add
push
addr16
arpl
xorl
mov
add
xchg
fnstenv
adc
adc
pop
fidivrs
out
adc
xor
pop
mulb
jne
jno
leave
xor
mov
aas
or
inc
test
jmp
dec
sub
xchg
jecxz
or
popf
jo
stc
popf
sbb
nop
cmp
mov
inc
aad
cmpsl
add
inc
inc
push
xchg
cmpl
orb
and
jns
push
lcall
mov
decl
push
cmc
call
mov
cwtl
mov
jo
add
cltd
inc
rorl
cwtl
inc
mov
rorl
sub
stos
aaa
shlb
insl
ret
clc
sbb
ret
xlat
push
push
push
sbbb
mov
xchg
xor
es
daa
outsl
adc
dec
cmp
scas
arpl
mov
inc
mov
adc
push
pushf
jae
daa
dec
adcb
or
scas
fistpl
rcr
data16
outsb
jne
cwtl
scas
mov
add
and
xor
int
outsl
pop
nop
sub
push
orb
pushf
sub
adcl
inc
dec
call
and
cmp
mov
push
dec
sbb
pusha
xchg
sti
inc
push
cmpsl
scas
js
icebp
sbb
pop
outsb
sarl
insl
mov
jle
shlb
and
sbb
lahf
sbb
push
fsub
push
dec
cmc
xchg
sar
mov
bnd
xchg
dec
jp
xchg
or
jb
popa
int3
andl
add
push
daa
cmp
jge
fidivl
mov
add
mov
loope
mov
sbb
mov
jl
mov
jl
sti
outsl
mov
xchg
xchg
cltd
adc
or
and
out
mov
and
int
xchg
jle
cmp
lea
dec
repnz
lahf
lock
xor
test
xor
mov
insl
sbb
cmp
jne
orl
insb
sbb
mov
cltd
in
pop
fcomip
mov
push
adc
xor
imul
leave
orl
scas
ds
cmp
pushf
mov
inc
pop
iret
xor
add
test
outsb
idivb
ret
add
mov
push
xchg
in
mov
inc
xlat
aas
adc
sahf
or
repnz
les
mov
sbb
sbb
mov
sbb
ds
mov
movsb
jge
inc
in
cmp
int3
js
out
int
add
daa
insl
int
fidivrs
addl
sub
in
fldenv
sbb
dec
xchg
rol
leave
dec
add
sub
xchg
lret
mov
movsl
sbb
cltd
dec
and
in
fwait
int3
mov
mov
int
repnz
jo
mov
lock
fwait
jns
in
lock
scas
test
mov
dec
pop
and
lahf
add
fistpll
cltd
push
iret
imul
lret
mov
ljmp
or
pop
push
add
and
push
push
stos
xor
xchg
dec
test
mov
xor
or
mov
fnstcw
push
int
int3
cltd
movsb
jle
insb
pusha
push
stos
xor
test
sub
in
shlb
cltd
sbb
mov
cmpsl
popf
cmpsb
leave
fisttpl
push
xlat
pop
sub
inc
jmp
cmpsb
sbb
pop
into
add
lds
fdivrs
out
mov
sub
sti
fcompl
adc
cmc
cmp
pop
xor
mov
push
mov
jb
lods
aas
ds
and
sub
ret
lock
enter
sbb
das
loope
jae
subb
jne
fisttps
adcl
sbb
jp
ret
push
push
out
add
cmp
xchg
add
mov
test
nop
sahf
fidivs
pop
ret
jge
pop
sbb
mov
in
or
fcompl
arpl
and
dec
push
fisttpll
popa
or
xchg
pop
or
mov
daa
leave
cmp
cmp
xchg
test
dec
ficoms
sbb
insl
icebp
and
ja
push
aas
xor
mov
inc
lods
push
mov
lret
jg
cmp
xor
mov
clc
bound
and
adc
jecxz
xchg
inc
std
jne
xlat
faddl
dec
lock
ret
push
test
add
call
clc
in
das
inc
lods
in
cs
fstpl
call
xor
cwtl
inc
push
bnd
outsb
push
mov
xchg
cld
jo
bnd
arpl
adc
sarl
mov
cmc
neg
xor
or
adc
pop
pop
iret
fiadds
addb
jl
or
scas
mov
lret
lock
imull
add
bound
ret
dec
dec
ret
inc
pusha
mov
arpl
inc
addr16
pop
dec
loop
sub
jbe
ficoml
jle
xchg
mov
push
xchg
dec
jae
sub
or
inc
push
stos
push
test
push
push
stos
xchg
aam
nop
push
mov
loope
lahf
push
ds
repnz
out
fcomps
sbb
pop
ss
push
mov
cwtl
out
flds
or
in
jg
mov
dec
xchg
xchg
inc
sbb
jno
int3
xchg
xorb
adc
movsl
jg
lret
add
xor
xchg
pop
mov
fisubrs
pop
xchg
cltd
mov
std
lods
add
shll
fstp
push
hlt
pop
test
push
sub
push
jp
mov
rcr
test
cmp
repz
pop
dec
jge
loop
je
xor
sti
push
or
in
lods
movsl
jb
ss
stos
movsb
mov
sub
xor
pop
aas
xchg
cmp
jmp
xor
fidivrl
mov
loopne
sub
xor
stos
jle
rol
mov
popa
and
in
add
repnz
in
pop
xchg
in
shlb
loop
mov
xor
jno
mov
mov
enter
and
pop
adc
mov
icebp
clc
hlt
pop
subl
jl
inc
cmp
and
push
inc
cli
into
push
inc
push
sub
lret
pop
add
cmp
add
or
xchg
lcall
xchg
mov
push
cmc
xor
popf
loopne
mov
mov
hlt
mov
xlat
int3
jmp
cmp
or
pushf
lds
addr16
pop
or
cmc
jne
and
xchg
lods
fdiv
ljmp
mov
pusha
in
inc
loop
adc
mov
pop
cli
lahf
ret
aad
and
mov
loopne
js
repnz
lret
xchg
jecxz
mov
loopne
push
jne,pn
hlt
leave
or
jmp
xchg
pop
int3
dec
jg
inc
outsl
pop
cld
xchg
cmpsl
lret
mov
pushf
je
enter
mov
loop
xchg
push
ret
fldl
cld
sbb
lcall
xchg
and
xchg
mov
roll
cli
ret
jnp
es
pop
lret
test
leave
adc
sbb
scas
mov
out
xchg
out
mov
jbe
and
xlat
mov
mov
popa
gs
dec
pop
jmp
jge
jb
mov
out
pop
das
mov
arpl
dec
adc
arpl
fldt
test
test
cmp
jge
or
xchg
inc
pushf
in
inc
sbb
mov
sub
cmp
lret
hlt
idivb
scas
jns
aam
mov
pop
fimuls
push
cld
cmc
jbe
pop
cmp
fsubrs
insb
jge
pop
and
pop
test
mov
data16
jge
mov
sub
insl
fdivl
lret
out
cs
lcall
enter
lock
sub
ret
cltd
sti
rcll
mov
xor
out
xlat
jg
mov
or
pusha
ret
mov
clc
push
pop
add
and
push
pop
push
xchg
pop
mov
mov
mov
lahf
mov
out
and
mov
cld
inc
push
xor
sarl
repz
gs
lret
repz
sti
jecxz
ljmp
pop
in
mov
roll
cmp
jg
mov
sbb
xlat
adc
push
xchg
pop
cmp
adc
and
sarb
push
pop
test
sbb
inc
mov
pop
sub
cld
lret
xchg
jbe
jne
lds
add
xchg
cmc
ja
sahf
jecxz
in
orl
ds
fs
or
inc
outsb
xrelease
mov
cwtl
jp
enter
daa
add
xchg
or
lock
pushf
outsb
jmp
xchg
jecxz
mov
sub
xor
sbb
addr16
call
pop
jle
jg
rorb
addl
jg
jne
mov
sti
pop
out
jge
sub
push
xor
mov
add
sub
sbb
dec
lea
jle
mov
aaa
adc
mov
cmp
fcomps
popf
lret
adc
dec
int
cli
xlat
ja
dec
xor
leave
mov
addr16
sub
jg
xchg
rep
scas
insl
mov
sbb
movsl
dec
icebp
frstor
in
sbb
cmp
aaa
pop
std
mov
movsl
bound
hlt
lcall
fldt
mov
adc
jl
mov
push
pop
mov
and
push
mov
xchg
xor
jae
or
add
sbb
mov
in
mov
and
lret
rolb
and
call
testb
lds
fiadds
add
cmp
sahf
das
daa
fisttpll
jne
adc
push
or
fldl
fdivl
testl
jne
lods
imul
idivb
stc
and
sbb
negb
jne
rcrb
jnp
push
add
adc
ss
arpl
inc
add
dec
stos
push
lret
fisttpl
adc
das
cwtl
pop
shlb
jbe
orb
add
jo
mov
dec
push
dec
or
pop
scas
jg
cmp
leave
pop
incl
pop
pop
add
inc
loope
scas
arpl
outsb
rcrl
and
xor
sub
and
mov
outsl
add
or
or
unpcklps
imul
icebp
xchg
adc
nop
mov
xchg
test
shlb
xor
xchg
push
arpl
pop
mov
sub
and
xchg
cltd
cli
enter
mov
inc
xor
out
xchg
cwtl
add
insb
std
and
in
test
ret
sahf
mov
push
mov
adc
mov
pushf
ss
shlb
xchg
xor
and
pop
out
push
sbb
cmp
xor
cmp
cmp
lods
jo
fwait
adc
push
ja
popa
ljmp
pop
and
hlt
xor
popf
adc
jbe
aaa
call
int
cmp
mov
cwtl
lret
mov
and
das
movsl
leave
aaa
mov
aaa
test
daa
xchg
jp
inc
push
das
pop
sbb
cmpsb
lret
adc
inc
mov
jle
mov
cmc
and
fbstp
fidivl
lods
loop
lahf
cwtl
lods
ret
cwtl
push
insb
cmp
adc
aam
xor
ss
dec
sbb
push
xchg
dec
es
mov
xor
outsb
shl
shl
add
and
cmp
push
gs
fs
mov
test
ret
sub
pop
dec
mov
mov
sub
test
fnstcw
mov
int
ljmp
and
mov
les
xchg
pop
pop
xchg
or
cmp
push
inc
repz
testl
icebp
push
pop
mov
add
ljmp
scas
sbb
arpl
xchg
mov
xchg
pop
pop
mov
lods
push
mov
fcoml
jae
inc
jb
jecxz
mov
cltd
pop
jg
mov
mov
loop
je
sbb
test
inc
fisubrs
mov
mov
cmp
repnz
or
pop
mov
shufps
and
adc
stos
ds
out
test
sbb
shlb
gs
inc
xchg
push
add
jne
arpl
and
scas
stos
dec
out
call
ret
test
jg,pn
xor
ja
addb
mov
sarl
popf
call
inc
push
repz
fdivrl
pop
popf
fdivl
mov
ljmp
sub
int
sbb
movsb
dec
imul
shl
sbb
cmp
push
sub
push
adc
and
mov
lods
add
repnz
xor
cmp
lcall
xchg
orb
or
fcoms
cmp
bound
dec
mov
out
pop
pop
out
adc
jecxz
sub
pusha
and
add
add
lret
cwtl
subb
pop
mov
in
stc
loopne
mov
out
lds
cmpsb
or
aad
mov
jg
mov
repz
mov
mov
push
jae
lcall
and
mov
xchg
loope
mov
loop
xor
nop
sbb
je
inc
out
fs
mov
mov
add
inc
outsl
lock
lods
mov
push
or
faddl
and
mov
mov
clc
sbb
xchg
xchg
adc
jmp
push
ljmp
push
out
into
jns
dec
shlb
aaa
push
ss
mov
push
xchg
pop
jo
mov
scas
lea
add
dec
dec
mov
je
mov
icebp
xor
ds
mov
hlt
mov
xchg
push
lret
adc
out
rorb
cltd
cld
loopne
mov
or
mov
xor
fistpl
cld
lods
imul
jge
popf
push
cmp
push
outsl
ficoml
mov
mov
sti
in
xor
lret
push
jl
nop
add
ss
adc
mov
or
orb
outsl
and
lds
xlat
add
pusha
sahf
xchg
xor
mov
aas
push
sarb
scas
inc
pop
dec
dec
jo
cmc
enter
push
sub
cli
pop
int3
pusha
cmpsb
push
in
in
mov
xor
test
icebp
inc
or
jne
xlat
dec
xchg
push
test
adc
clc
mov
incl
inc
push
insb
jle
in
mov
lcall
add
lahf
ror
jae
outsl
mov
arpl
lock
push
into
ret
xor
aad
jb
adc
and
or
leave
cmp
and
or
and
push
sti
rcll
js
aam
cs
sub
int
xorl
inc
push
jbe
mov
sbb
ret
inc
addr16
push
shlb
xlat
pop
xchg
sbb
jno
js
mov
loopne
sub
jns
rolb
mov
mov
repz
jne
loopne
adc
push
out
dec
sbb
movsb
push
push
aam
pop
inc
cmp
mov
cli
sub
es
imulb
lahf
fsubl
test
cmp
insb
int
push
test
iret
scas
push
pop
les
jnp
or
fisubl
mov
jns
and
movsl
add
test
dec
sub
andl
int
jb
pop
nop
lret
mov
pop
adc
sub
scas
out
movsl
out
sbb
int3
add
xchg
sbb
out
fcoms
int
daa
sbb
push
loopne
hlt
outsl
lock
xor
and
orb
sbb
push
frstor
inc
mov
fistpll
out
in
stos
push
shll
inc
mov
add
rclb
pop
inc
or
loopne
xor
mov
movsl
andl
jecxz
leave
sub
push
cmp
ljmp
pop
dec
and
inc
mov
inc
pop
das
aam
or
pop
aad
inc
push
pop
cmc
jl
push
fxam
mov
icebp
adcl
mov
imul
xor
aas
scas
sbb
es
ffree
push
or
imul
jnp
jnp
in
mov
popf
xchg
mov
and
or
xchg
fsubs
fwait
out
in
mov
stos
test
sarl
mov
insl
sub
xchg
aaa
fwait
and
sub
sahf
add
int3
or
xchg
icebp
cmpsb
sub
sub
push
xor
lret
movl
fwait
lret
movsb
clc
and
and
icebp
icebp
scas
xchg
cltd
inc
jbe
sarl
cli
lret
mov
in
mov
je
add
adc
int
out
cltd
sbb
popa
and
sbb
jl
sbb
fmuls
xchg
xchg
and
fistpl
mov
push
or
add
and
add
mov
cmp
jnp
ds
jo
push
pop
ljmp
pop
fwait
sub
pop
data16
mov
ds
cmp
imul
xor
xor
pop
ret
mulb
xor
push
aaa
cmpsl
pop
ja
cmpl
daa
lret
jae
xchg
xor
xchg
scas
clc
arpl
sbb
push
and
stos
cmpsl
add
add
jl
loope
or
pusha
push
xchg
add
leave
sub
xchg
sub
mov
adc
xchg
js
push
or
jecxz
cmp
in
dec
out
daa
and
mulb
mov
xor
fisttpl
popa
mov
jb
jecxz
fsubrs
inc
pop
or
jne
mov
add
cmpl
int
xchg
mov
lds
jns
jle
push
jp
inc
pop
dec
lea
popa
repz
outsl
push
or
fsubl
push
adc
jge
adc
sbb
imul
pushf
cmpsl
push
decb
xchg
sbb
cld
jo
lret
lock
sbb
fdivrl
cmp
sbb
fcoms
ljmp
jae
jp
out
ja
mov
lock
sbb
lahf
inc
cli
sub
stc
adc
enter
ljmp
fs
scas
adc
pop
adc
out
mov
pusha
fstps
fisubrl
mov
roll
dec
cmp
js
lods
lcall
dec
divb
xchg
dec
outsl
add
in
adc
std
mov
cld
out
out
push
push
rorb
mov
clc
jle
repnz
add
xchg
cltd
mov
pop
xlat
int
insb
rclb
ljmp
scas
cld
and
movsl
sub
mov
push
and
adc
cs
lods
push
pop
xor
cwtl
addr16
pop
push
fwait
pop
or
sahf
fdivl
pop
test
jle
inc
jmp
js
adc
sahf
mov
pop
cwtl
fs
jg
loopne
inc
idivl
and
ret
aam
mov
sarb
stos
fcoms
popa
jnp
std
mov
rcrl
sti
out
dec
fwait
arpl
push
int3
mov
xor
mov
push
dec
mov
cli
cmp
dec
push
jbe
inc
mov
xor
ss
mov
mov
inc
xchg
cmc
cld
or
jmp
push
shlb
jg
mov
dec
add
ds
out
pop
add
inc
loop
cwtl
jnp
xor
hlt
clts
pop
mov
sbb
fidivrs
out
xchg
pop
ret
fs
addl
clc
dec
fstl
mov
sbb
repnz
mov
pusha
inc
xor
shlb
roll
lret
fidivl
cmpsl
adc
popf
cmpsl
out
push
mov
push
daa
or
jle
inc
mov
daa
push
into
outsb
imulb
iret
cwtl
cmpl
inc
out
dec
in
pop
aad
test
pop
jne
ror
cld
mov
jp
or
cltd
push
dec
jo
loop
fsubrs
mov
dec
rcll
adc
push
add
cmp
imul
es
xchg
pop
jp
jl
and
mov
cli
cmpsl
int
jnp
daa
ret
jnp
inc
lahf
push
sbb
or
jae
loopne
pusha
mov
fsts
cmc
scas
cltd
jecxz
mov
loop
mov
jno
jle
pop
aam
add
xor
mov
adc
cmp
out
aaa
mov
lods
dec
mov
and
call
fistpl
push
push
rclb
xchg
inc
jb
mov
jge
push
fnsave
sub
jp
jecxz,pt
orl
mov
sbb
cmpsl
ds
cs
fistl
pop
imul
jbe
arpl
lods
mov
loope
nop
mov
pushf
push
xchg
icebp
and
test
icebp
or
sbb
cld
inc
jno
mov
push
pop
mov
mov
insb
dec
call
fdivrl
push
cli
fists
mov
aaa
loopne
in
in
push
ljmp
push
push
or
inc
sub
xlat
jl
imul
notl
inc
nop
fstps
push
add
out
push
mov
xchg
or
mov
sahf
rcrb
ss
sbb
into
and
cmp
or
repz
inc
pop
mov
add
jmp
icebp
and
insb
jne
push
int3
cmp
stc
aad
pop
cmp
cmp
std
repz
push
insb
sub
rcr
in
cld
cld
movsl
and
jecxz
shlb
sub
iret
sub
cmpl
pop
mov
lahf
mov
cmc
fistl
mov
add
jns
insl
daa
and
lock
loope
aaa
test
ret
mov
pushf
and
test
sahf
aad
adc
cmpsl
data16
cmp
jg
in
ss
xchg
push
fsubrs
aaa
divb
mov
faddl
and
lcall
lds
inc
sub
clc
cmp
cmp
dec
shl
jp
push
rorl
jo
mov
dec
shl
jg
fimuls
int
and
loope
pop
mov
imul
rolb
daa
inc
inc
pop
xor
push
outsl
mov
pop
add
ret
lock
lret
sahf
cmpsl
mov
outsb
int
gs
or
jecxz
cmp
shll
inc
adc
sbb
cmpsl
insl
xor
jnp
fidivrl
sahf
mov
or
jnp
add
sub
push
sbb
and
outsl
jne
movsb
push
xor
sub
push
loopne
adc
aam
inc
sbb
sbb
sbb
dec
sbb
mov
push
ljmp
push
cltd
jmp
out
sub
sub
sbbb
push
mov
pop
or
adcb
loop
icebp
call
insb
add
jo
cwtl
imul
xor
scas
mov
loope
outsl
push
mov
fsts
push
add
xor
push
and
jg
js
daa
enter
fdivl
mov
repnz
sbb
adc
add
addr16
push
adc
xchg
push
notl
xchg
and
ljmp
inc
orl
in
push
mov
lret
jge
call
dec
mov
mov
mov
das
les
fscale
mov
popf
mov
pop
das
into
add
push
cltd
pop
lcall
push
lods
xor
xchg
and
mov
addl
pop
cwtl
lret
icebp
outsb
adc
jo
and
pop
mov
outsb
out
and
fcmovne
cmp
xchg
faddl
sub
int
mov
mov
inc
push
mov
ss
and
cli
push
jbe
punpckhbw
adc
xchg
add
in
lret
aas
rorb
movl
in
inc
pop
lret
out
rclb
dec
ret
push
mov
ds
cmc
iret
sub
inc
pop
dec
es
lcall
loop
leave
je
dec
xchg
repz
pusha
mov
fwait
push
ficompl
cwtl
push
nop
pop
dec
jne
add
movsb
xor
push
xchg
cltd
arpl
pop
les
lods
das
adc
out
jae
cmpsl
mov
lods
jo
and
jg
mov
call
and
fstpl
jae
cmc
mov
std
lods
dec
imul
push
mov
repz
aam
call
xor
out
inc
fsubs
testb
lods
addl
xor
aam
stos
fsubrl
inc
inc
or
mov
vmovaps
das
btr
mov
push
rcr
cltd
add
jl
adc
mov
cli
loop
nopl
jns
mov
xchg
xchg
movsb
mov
test
mov
in
adc
arpl
out
jns
jge
and
ret
and
sub
cmp
xchg
jae
inc
cmpb
and
lret
push
sub
divb
pop
cmpb
xor
sub
outsb
push
sahf
jo
and
push
imul
cmp
jnp
aam
iret
cli
and
push
and
js
int
push
sub
ss
xchg
ret
int3
inc
rcll
pop
ret
jb
popf
or
fadds
xor
push
add
sub
cld
loop
shlb
movsl
xchg
jae
and
bound
lahf
addl
cmp
dec
push
pushf
cmp
add
cmp
add
idivb
fcomps
into
mov
js
dec
insb
or
pop
popa
bound
mov
and
dec
lahf
sahf
stos
scas
fwait
push
mov
inc
sub
test
addr16
jp
jmp
jp
push
sbb
xchg
add
adc
test
cmc
pushf
fsubl
aaa
scas
clc
outsl
jg
push
ss
mov
in
lock
iret
int3
mov
out
cmpsb
subb
or
out
dec
popf
xlat
test
not
mov
dec
jp
xor
or
es
stos
imul
inc
sub
js
movsl
cmp
add
xor
les
push
add
movsb
call
cmpsl
sub
lock
push
dec
jg
imul
jbe
mov
imul
test
fsubrl
outsb
outsl
in
push
xchg
xor
cmp
iret
dec
iret
sbb
add
andl
xchg
popa
mov
fabs
out
mov
sub
stos
or
push
rol
lea
repnz
sbb
inc
dec
jo
sbb
or
int
in
mov
pop
lea
mov
jge
cmp
scas
arpl
fistl
js
lea
les
dec
cmc
out
push
sub
jb
cwtl
pop
popl
jmp
mov
push
add
xchg
out
std
xchg
lret
add
aam
jl
popl
cmpsb
mov
adc
and
mov
add
push
sub
lret
sbb
dec
and
push
clc
les
jge
jno
jmp
lahf
movb
test
sub
int
push
subb
das
fucomi
ja
push
inc
add
ret
sub
or
mov
dec
test
stos
sti
mov
mov
mov
sub
sbb
jg
outsb
mov
pusha
loope
popa
mov
push
daa
adc
push
imul
inc
mov
rcll
xor
add
pop
out
pop
jmp
shl
and
in
adc
and
push
loope
insl
or
outsl
shll
shll
mov
dec
shll
jnp
push
out
xchg
rcl
ja,pn
xor
inc
mov
mov
xchg
add
mov
hlt
sub
out
cwtl
orb
sub
or
lcall
adc
dec
lret
push
pop
test
in
jae
addl
push
adc
popl
jbe
pop
xchg
sbb
xchg
insb
mov
push
mov
fcomi
sub
jle
jp
jecxz
xchg
adc
cmp
push
sbb
mov
or
clc
sub
mov
pop
cld
sub
and
add
xor
in
lea
push
pop
scas
ret
add
add
test
rorb
loopne
call
or
mov
jl
fidivrs
js
in
and
jo
jg
lcall
sbb
shrb
lcall
pop
pop
mov
adc
fistps
ret
lock
push
push
mov
scas
push
xchg
pop
sysenter
and
sub
arpl
adc
adc
adc
les
cmp
xor
nop
lcall
in
inc
mov
cmp
xchg
and
fldl
mov
sbb
and
mov
lret
ret
sbb
sti
aaa
jmp
cmp
cmp
ss
test
in
sbb
sbb
mov
sub
or
mov
dec
lret
push
cmpsl
fldenv
sub
movsb
mov
add
icebp
xchg
movzbl
call
inc
cmc
inc
mov
inc
pop
lds
jbe
mov
pushf
mov
stc
enter
or
popf
in
add
sub
adcl
sbb
addb
xchg
in
mov
test
push
adc
pop
repnz
arpl
insl
or
int3
jne
ds
fs
icebp
jg
dec
in
aas
cmp
setbe
push
cs
les
jg
push
push
lods
jp
mov
push
jl
add
mov
pop
sub
loope
xchg
add
sbb
add
xchg
jmp
jecxz
inc
xlat
popa
mov
pminsw
lahf
push
mov
in
imul
jbe
ja
or
arpl
mov
jae
movsl
aaa
sbb
jnp
aas
inc
dec
ret
test
cli
mov
add
aad
cld
or
xbegin
out
fcmovb
mov
mov
mov
add
or
negb
jp
cli
es
adc
hlt
pusha
push
pop
ret
push
xor
xor
push
adc
mov
and
adc
popf
cs
xor
push
enter
mov
push
xchg
xchg
inc
dec
dec
jge
add
imul
mov
cmp
test
jns
jae
mov
mov
or
test
push
push
mov
cmpsl
push
and
sbb
cwtl
cltd
push
lods
notl
mov
mov
or
xor
cld
mov
divb
xchg
inc
and
mov
in
xor
sbb
adc
pop
dec
lea
imulb
pop
pop
sub
push
adc
pushf
add
mov
js
hlt
js
xchg
sbb
jb
jp
xchg
inc
dec
dec
jle
add
adc
mov
xchg
out
ljmp
mov
repnz
in
jno
xchg
fldcw
cmp
rep
subl
scas
cmp
lods
push
mov
pop
dec
push
in
idivb
dec
out
movsl
fcoms
fidivrs
and
inc
fstpt
cwtl
addr16
adc
jo
std
mov
cmp
int
sub
jnp
test
push
mov
and
jno
cmp
adc
pop
sar
js
mov
mov
out
fwait
add
adc
movsb
int
inc
dec
dec
imul
mov
imulb
mov
loop
fdiv
repz
or
sub
mov
aaa
xchg
int3
popa
jp
or
sbb
xor
cmp
cmp
and
data16
dec
xchg
orb
mov
inc
mov
push
out
test
call
mov
sub
mov
or
jno
mov
pop
rclb
jb
jg
out
inc
cmp
int3
pop
or
cltd
dec
call
cs
popf
xchg
fnstenv
lods
out
imull
lret
mov
nop
lock
xchg
jge
cmc
popa
add
xchg
jge
inc
xor
je
xchg
ljmp
ret
xchg
inc
popa
and
test
int3
or
mov
shll
popf
xchg
enter
mov
add
add
mov
and
imul
xor
mov
mov
jb
cmp
cmp
scas
or
mov
xchg
xor
subb
inc
push
in
movsb
leave
xchg
rcrb
jbe
push
push
lret
adc
and
adc
lcall
sbbl
out
notl
test
fistpll
pop
cli
mov
jbe
adc
dec
cmpsb
inc
inc
and
nop
xchg
aam
ds
pop
xor
aas
imull
stos
je
add
out
mov
cmp
inc
xchg
push
rcrl
sbb
pop
pop
cwtl
pop
mov
test
stc
ret
mov
in
push
mov
insl
cmp
stos
lods
insl
or
dec
push
sub
fwait
sub
add
dec
dec
mov
mov
sub
pop
cs
das
adc
aam
fwait
sbb
sbb
add
pop
popa
enter
inc
aas
insb
dec
push
xor
fistpl
imulb
loopne
pop
stos
or
add
add
sbb
addb
pop
roll
xchg
push
pop
fnsave
orl
fistps
push
mov
insb
imul
loope
xor
je
and
outsb
add
push
xchg
movsl
xchg
jns
xchg
sbb
scas
mov
sbb
inc
adc
and
pop
out
pushf
adc
rcrl
push
mov
jns
xchg
inc
out
pop
inc
jnp
pop
and
push
push
xor
test
jle
ret
ret
adc
cltd
pushf
push
push
pop
lods
pushf
jnp
sbb
and
in
clc
ror
js
cmp
or
cmpsl
pop
fnstenv
add
add
adc
cltd
pop
mov
mov
adc
imul
add
adc
scas
adc
loopne
sbbb
xchg
jae
push
jecxz
adc
mov
nop
xor
iret
xor
adc
test
push
and
aas
adc
hlt
sti
adc
pop
lret
and
adc
mov
lods
arpl
cmp
decb
sbb
insb
lea
imul
adc
movsl
mov
sbb
xchg
cs
push
pop
lock
lods
iret
jge
and
cli
ds
and
xchg
sbb
cmpsb
subb
pop
ja
leave
mov
std
rorl
insl
lahf
pop
rorb
inc
push
dec
push
pop
test
add
lock
repnz
mov
xchg
mov
or
pop
adcb
xchg
std
jg
jp
push
ror
sub
sub
dec
jecxz
lahf
push
and
es
xlat
xor
daa
add
add
xor
inc
xchg
popf
cmp
adc
stc
popf
mov
nop
rorb
cwtl
xchg
push
lar
cmp
inc
sbb
adc
jno
ret
imul
jb
fcoml
mov
mov
adcl
popf
test
movsl
test
add
das
mov
pop
push
jae
cmpsb
inc
sbb
pop
lahf
iret
nop
mov
jl
fcmovbe
push
stos
lea
shrb
add
jne
jne
cmp
in
xchg
daa
xchg
push
pop
mov
jmp
jnp
xor
jne
cltd
andl
add
outsb
pusha
push
xchg
int3
jnp
xchg
mov
test
inc
cmp
inc
roll
insl
mov
xchg
inc
sbb
ret
les
test
pushf
addr16
lea
adc
subl
stos
cwtl
orb
sub
pop
xor
loop
push
pop
inc
jns
mov
add
cmc
subb
inc
or
fisubrs
imull
cld
cwtl
jnp
pop
imul
sub
inc
ret
leave
or
jge
aad
dec
cmp
sub
lret
push
inc
xorl
sbb
jbe
test
std
into
mov
cs
cmp
call
int
in
cmp
mov
mov
notl
paddw
pop
pop
lods
jbe
cmpl
mov
jg
mov
and
fmuls
in
imul
insl
mov
bound
pop
dec
sub
in
cmp
stos
int
cmpsb
pop
push
pop
idivl
jb
sub
mov
push
mov
push
mov
cmp
xchg
cmp
sbb
loop
in
pop
jg
data16
ljmp
stos
mov
mov
mov
xchg
movsl
cs
dec
jle
mov
mov
icebp
xor
sarl
loop
leave
mov
mov
or
sub
jl
stos
in
or
daa
in
test
mov
repnz
mov
cmpsl
sub
mov
and
lcall
je
dec
and
xchg
imul
in
xchg
in
cltd
mov
adc
cld
cmp
and
sbb
push
jecxz
test
ret
inc
pop
pusha
inc
insl
jecxz
in
or
and
ds
out
cltd
jne
mov
cmp
ficomps
pushf
mov
cmpsl
int3
fidivrl
adc
lcall
fcmovu
loopne
hlt
jmp
cli
lret
or
icebp
jns
cmpsl
sub
push
push
sub
inc
in
jle
sbb
sti
fisttps
sbb
shll
pushl
out
iret
xor
inc
mov
shlb
lock
push
bound
dec
push
je
iret
mov
fstpl
and
push
adc
cmpb
testl
cmp
ret
mov
in
hlt
das
test
into
imul
fmuls
arpl
stc
dec
inc
mov
mov
mov
and
jnp
xchg
leave
arpl
insb
sahf
stos
lds
movups
mov
push
jne
bound
mov
sub
test
pop
jb
dec
cwtl
lret
and
xor
xor
xchg
sbb
jmp
pop
or
out
fcompp
lret
ja
fisubrl
fwait
pushf
rclb
jmp
into
movsl
lret
repz
mov
les
and
dec
fidivrs
sbb
cld
mov
push
and
inc
push
mov
jbe
mov
in
dec
lds
call
in
jb
push
mov
and
mov
cwtl
notl
push
aam
jl
jecxz
ret
xchg
cmpsl
hlt
sbb
aad
ja
or
in
mov
jmp
data16
push
imul
rep
and
dec
pop
shrb
sub
xlat
out
adc
cmp
jne
dec
aaa
xchg
xor
mov
insl
push
mov
adc
imulb
test
sbb
aaa
shll
ja
sbb
pop
insb
or
into
push
pop
pop
sbbb
mov
je
jno
xchg
mov
popa
xchg
fs
fildll
inc
sbb
pop
pop
cmc
cmp
sbb
mov
push
add
mov
cli
xchg
fisubl
in
jecxz
dec
xchg
dec
jge
aas
jl
pop
ud0
in
push
mov
pop
scas
dec
cmp
out
shll
orl
psrad
lret
cwtl
cli
data16
imul
push
sbb
jmp
insl
push
test
repnz
ffreep
fs
iret
jecxz
cmc
sub
xchg
sub
inc
rclb
pop
nop
test
or
mov
xor
mov
mov
mov
jl
lret
cmpsb
sahf
mov
xor
aam
neg
out
gs
lds
in
inc
les
movsl
stos
xor
ret
stos
add
inc
inc
cmpsl
and
cmp
xor
pushf
or
push
jge
lds
ficoms
out
sahf
mov
std
clc
jmp
jmp
lret
cmp
subl
xchg
addr16
inc
xchg
jmp
ds
xor
jle,pn
jno
adc
fisttpl
fnclex
xchg
nop
push
cmp
add
js
pop
cmp
dec
cmp
enter
lret
out
push
push
into
pop
jnp
xchg
sbb
inc
adc
xchg
jge
sti
popa
ljmp
out
cmpsb
ja
stc
add
pop
push
jns
pusha
pop
cmpsl
iret
or
add
fidivrl
jg
stc
push
lret
inc
mov
inc
lret
pop
fidivl
inc
mov
push
xchg
dec
fpatan
xor
fildll
xchg
leave
pop
and
mov
mov
lcall
stc
aas
cmp
dec
aam
and
adc
pop
pop
imul
iret
or
idivb
or
ret
lds
jb
es
mov
dec
shlb
shll
cmp
out
fsubrs
xor
mov
in
sahf
add
xorb
cmp
out
cmp
inc
or
cli
imul
inc
jl
out
andb
mov
loopne
add
mov
lods
scas
jb
aas
xor
pop
xor
js
push
pop
inc
rcll
inc
lods
in
mov
jmp
xchg
aad
lods
xor
test
jo
gs
fst
les
mov
out
imul
sbb
or
pop
jns
frstor
dec
lods
pop
xchg
push
lcall
xor
jg
nop
aaa
mov
cmp
jnp
stos
fbld
mov
or
xchg
inc
pop
add
fwait
test
cltd
inc
pop
push
dec
sbb
dec
lahf
xor
stc
les
add
shll
jecxz
and
jge
mov
inc
add
movsb
xor
and
call
push
aaa
rorb
repnz
inc
out
push
jae
jo
or
mov
jo
dec
cmpl
imul
loopne
mov
fstps
push
fs
lods
sbb
cld
rolb
rorl
mov
cli
cmp
push
cwtl
pushf
mov
ficoml
in
inc
xor
ss
loop
xor
stc
in
xor
xor
lock
ror
into
sti
mov
inc
fistps
xor
insl
mov
arpl
or
cmpsl
xchg
gs
lods
rcrl
mov
jmp
ficompl
es
addr16
lahf
sbb
sahf
bound
cmp
push
fdivp
jge
mov
pusha
testl
adc
add
add
and
mov
shl
popa
popf
sub
in
or
sub
cmp
xchg
scas
push
mov
inc
ficomps
sbb
ret
mov
negl
fwait
jge
scas
js
repz
inc
sub
fnstsw
sub
in
xorb
push
dec
jecxz
or
push
xor
and
js
mov
pop
lahf
cwtl
shl
icebp
pop
sbb
sub
mov
hlt
scas
mov
push
idiv
sti
test
jge
jno
lret
es
mov
test
insl
or
sti
xchg
ljmp
jg
jl
cwtl
lahf
cmp
jge
mov
rcll
sbb
mov
mov
fimuls
inc
inc
jge
xchg
and
ret
cmp
out
or
dec
pop
out
sbb
out
or
mov
add
sub
mov
int3
lcall
addr16
mov
mov
cli
out
push
mov
mov
inc
aas
lods
push
insb
xor
sbb
jo
repz
cmp
outsl
sarb
lds
mov
adc
sub
test
push
inc
or
cmp
pop
daa
into
sbb
xchg
fs
sbb
mov
addb
push
pusha
mov
sbb
mov
sub
addr16
xor
popf
rcll
dec
mov
or
or
das
lock
aas
push
clc
push
add
push
jno
jb
clc
inc
mov
cwtl
stc
stos
arpl
xor
popa
in
or
pusha
sub
push
dec
jno
inc
mov
push
cmp
out
cs
pop
in
lds
test
ja
pusha
sbb
jecxz
shlb
sbb
fnstenv
adc
mov
push
push
inc
jae
sbb
sub
sub
cltd
cwtl
add
pop
mov
sub
fldcw
rcrb
jmp
pop
jle
jo
test
rcl
ret
das
insl
inc
or
push
jge
pushf
add
addl
loop
mov
icebp
mov
jl
es
push
xacquire
adc
je
sahf
mov
sub
or
imul
shrb
or
nop
push
cmp
popa
lahf
sbb
out
and
int
sub
repnz
gs
stos
fdivp
dec
cld
pop
data16
jle
jecxz
popa
mov
mov
lods
push
in
push
jo
cld
xor
mov
imul
xor
push
mov
xchg
std
aam
inc
aas
dec
shlb
stc
leave
lret
nopl
in
dec
push
adc
xchg
movsl
pop
mov
or
movsb
arpl
outsb
pop
push
jge
shrb
inc
dec
mov
aas
aad
mov
dec
cld
mov
movsb
fdivp
pop
aas
push
rorl
pop
roll
shrb
inc
push
mov
sbb
test
add
xchg
or
int3
push
mov
stos
mov
inc
xchg
stos
test
aas
xchg
xor
mov
scas
out
cli
inc
ret
sub
xchg
bnd
dec
das
cs
aas
lods
iret
mov
nop
loopne
xchg
jle
xchg
xchg
aad
lea
jno
xchg
mov
dec
movsb
popa
enter
cmp
and
and
or
rolb
mov
data16
sar
vpaddsb
repz
mul
sbbb
push
rcrl
lahf
testb
cli
jecxz
inc
dec
jnp
and
xor
add
pop
call
mov
xchg
insb
popf
add
and
dec
cmp
inc
inc
inc
inc
or
arpl
cmp
jl
inc
and
stc
loop
mov
sub
std
adc
mov
and
adc
adc
mov
mov
subl
shlb
sub
adc
mov
scas
sbb
call
test
pop
push
xor
inc
push
add
sub
and
jp
sub
call
test
cmpsb
push
sbb
gs
fmull
add
and
add
add
mov
hlt
stc
and
fadds
mov
add
sub
mov
inc
jle
cmc
aam
push
leave
xchg
pop
mov
sub
jno
dec
js
mov
xchg
imul
cmpsl
jle
pop
mov
cwtl
xor
in
add
cmp
mov
cltd
rclb
cld
mov
inc
dec
scas
inc
push
pop
dec
mov
mov
loope
add
add
dec
adc
jp
aad
adc
ret
loop
xchg
sahf
fld
in
insl
hlt
mov
lret
loopne
ljmp
int
lds
xor
inc
or
lret
inc
rep
push
inc
jo
je
inc
dec
lock
lahf
jnp
mov
cld
inc
or
fistl
and
insb
test
loop
ret
or
in
or
in
lea
jbe
dec
cltd
fisttps
jmp
fimuls
iret
lea
inc
mov
jge
insb
xchg
sub
add
mov
xchg
mov
jbe
insl
fimuls
inc
sub
xchg
push
pop
out
aam
sbb
pop
lock
repz
mov
sbb
test
aas
mov
lods
int3
sub
imul
dec
push
xchg
bound
mov
dec
push
std
inc
add
movsb
rolb
jne
bound
and
jno
shl
jbe
add
sbb
loop
adc
sbb
mov
and
out
lret
mov
lea
insb
mov
cwtl
pop
pop
xor
and
out
jb
or
xchg
cs
mov
test
mov
or
rcrl
test
cltd
stos
inc
mov
mov
mov
cs
dec
decl
lods
dec
dec
inc
and
push
arpl
repz
mov
stos
xor
js
dec
jge
jb
xor
adc
in
movsl
lea
or
sbb
fsubrs
jg
pop
xchg
sbb
sub
arpl
pop
dec
xlat
das
shll
stc
orl
int3
popf
sbbb
and
fwait
out
adc
mov
add
xchg
in
in
std
cmp
out
push
fxch
test
mov
xor
xchg
xor
outsl
mov
lods
mov
xor
in
sbb
sti
mov
lcall
psadbw
xchg
cmpb
and
sbb
call
and
mov
or
adc
popa
pop
fcoms
xor
jae
hlt
insb
cs
pushf
hlt
pmulhw
mov
cmp
pop
xchg
fdivrs
fnsave
mov
or
aaa
int3
cmpsl
cmp
xor
loop
and
push
xchg
mov
test
inc
push
sahf
inc
int
mov
lods
or
psubusw
push
fistl
test
jns
lods
and
popa
add
cld
dec
pop
pop
cmp
and
push
mov
addr16
hlt
jno
cmp
jbe
sbb
cmp
pinsrw
int3
mov
sbb
mov
or
xor
dec
pusha
insb
mov
cs
flds
inc
repnz
ja,pn
xchg
jmp
mov
or
mov
cmc
out
icebp
xorl
cmp
add
fmul
push
mov
mov
sub
sbb
cmc
xorl
repz
push
jb
inc
jg
sbb
lea
enter
out
jnp
adc
ficoml
imul
push
push
jp
movsl
cli
ja
sti
inc
hlt
cwtl
push
cmp
cltd
xlat
dec
addb
cmp
sbb
lea
adc
inc
xchg
arpl
fs
lds
pushf
pushf
ja
mov
gs
das
rol
xchg
hlt
jno
loop
cmp
cltd
outsb
mov
pusha
repnz
cmp
xchg
xchg
and
mov
pop
int
adcl
mov
call
std
shlb
jnp
vmread
and
repz
mov
out
mov
sub
push
push
stos
xor
out
sbb
push
or
inc
enter
rcll
test
xchg
pop
iret
mov
xchg
dec
aas
mov
pop
dec
lods
insl
adc
mov
sahf
mov
sbb
mov
loop
push
jae
insl
or
push
push
test
mov
push
adc
mov
push
sub
scas
xchg
sub
jecxz
lret
insl
mov
stos
sub
lret
in
push
add
pop
xor
jbe
jo
and
stos
and
xor
cmp
mov
and
scas
ljmp
pop
add
inc
cs
je
dec
xlat
idivl
jecxz
xchg
int3
xchg
cmp
adc
mov
out
and
push
in
inc
aam
fcmovu
pop
and
jecxz
nop
or
daa
sbb
ds
jo
sbb
jo
dec
out
inc
xor
add
jge
push
fcoml
loop
jle
mov
mov
enter
cmp
pop
xchg
addl
adcl
mov
push
sub
or
lds
pusha
mov
clc
mov
pop
out
pop
hlt
aaa
in
js
or
add
and
pop
cmp
orb
adc
mov
std
xchg
mov
lcall
adc
fsts
jl
ja
mov
mov
push
mov
xchg
jno
jp
dec
fisubl
les
cs
repnz
xor
dec
push
pop
movsl
pop
xchg
pop
rcrl
lods
adc
notb
and
in
in
xchg
jp
jb
xchg
leave
lcall
insb
xor
movsb
mov
cli
aam
fisttpl
pop
dec
adc
mov
pop
cmp
and
inc
add
jbe
popf
std
jnp
pop
ds
adc
sti
hlt
testb
inc
xchg
outsl
pop
mov
dec
popf
mov
repz
push
jnp
adc
fdivl
cmp
jge
push
scas
mov
jbe
adc
inc
enter
or
fiadds
je
movsl
outsb
cwtl
cmpsb
cmpsl
add
addb
push
lods
push
xor
out
mov
jb
stos
repz
dec
movsb
subb
aaa
lret
pop
rep
and
inc
lods
lret
mov
adc
mov
mov
or
inc
shrl
movsb
jle
or
or
sub
out
cmpsl
fimull
outsl
sub
js
fisubrs
dec
ss
mov
pop
xchg
adc
fsubs
xchg
sti
add
push
mov
cmp
loope
fwait
arpl
mov
mov
insb
adc
cmp
mov
into
xor
add
roll
jecxz
jnp
push
ret
das
and
test
xor
and
jl,pt
mov
pop
push
cmp
aaa
aas
stc
imul
cmp
xor
inc
jl
jge
xchg
and
loopne
fdivrs
sub
stc
cli
lcall
jecxz
xor
data16
jae
and
xchg
stos
pop
inc
xchg
cmp
inc
sti
fimull
xchg
call
dec
sub
dec
adc
lods
inc
leave
or
les
mov
mov
add
nop
mov
les
pusha
call
inc
and
jns
fistl
add
notb
inc
popa
and
cmp
fldt
pop
push
mov
jmp
gs
pinsrw
fisttpll
xor
lret
and
cmp
sbb
pop
ljmp
and
stos
jge
fldt
cli
ja
jne
imul
imul
ds
aaa
lahf
push
add
push
iret
out
outsb
hlt
mov
mov
add
inc
push
icebp
mov
push
sub
test
loopne
dec
fwait
mov
movsl
and
stc
je
lahf
imul
pop
and
or
dec
lahf
dec
lea
cmpsb
jbe
sbb
repnz
cmp
mov
adc
fdiv
dec
cmp
mov
cmc
xchg
loope
xchg
pushf
sahf
mov
mov
roll
inc
insl
jno
fs
fmul
and
movsl
lahf
or
fsubrs
xchg
out
fsts
xor
insl
jp
push
add
jno
xor
loopne
shr
mov
repz
and
in
subl
adc
jae
rcl
in
inc
fsubs
test
jae
or
jo
sbb
fldt
test
push
out
xor
inc
int3
pop
xchg
lcall
inc
mov
jp
and
loopne
das
aaa
inc
popf
cmp
jge
or
cmp
call
idivl
movsb
or
ret
inc
xlat
rcr
dec
pop
and
ds
cld
push
jle
ret
cmpps
xchg
sysenter
sub
and
add
adc
pop
sub
daa
lcall
xor
data16
inc
jns
adc
xor
fisttpl
pusha
push
adc
lret
push
iret
xchg
push
cmpsl
pop
test
loop
pop
xchg
rcl
les
loope
mov
mov
xchg
cmp
jns
mov
arpl
cwtl
inc
add
mov
sarb
dec
lret
jg
lds
icebp
jbe
xchg
push
add
dec
mov
in
or
jmp
adc
les
aas
mov
adc
sub
rcrl
push
cmp
lcall
sub
pop
stos
jbe
mov
outsl
out
imul
jge
or
pop
stc
jbe
jne
mov
and
clc
imul
repnz
lods
push
sbb
lret
cltd
fadds
pop
mov
inc
lock
inc
or
fwait
in
xchg
pop
sbb
in
xlat
aam
cld
pop
test
hlt
out
jg
pop
sbb
sub
in
arpl
lock
xchg
in
cmc
jl
aad
mov
ret
mov
mov
inc
xor
pop
xor
jl
ss
es
pop
test
je
xor
and
stos
push
jno
jae
push
mov
mov
aas
testb
ret
sbb
insl
jmp
xor
adcl
arpl
dec
dec
cmc
addl
cmp
cmp
xor
sbb
sub
add
add
neg
mov
xchg
or
add
lret
divb
push
adc
enter
movsb
fistl
fwait
mov
outsb
or
cld
sub
fsubs
lock
mov
inc
xorb
push
jae
pop
popf
lahf
repz
and
insb
lahf
add
add
mov
jno
adc
mov
jne
xor
pop
hlt
int3
push
and
outsl
ds
call
pop
test
xor
sub
addb
mov
jns
es
or
xchg
not
je
sbb
div
jno
mov
pop
scas
daa
sbb
cmp
out
mov
mov
add
scas
in
test
mov
addr16
cmp
or
rorl
cmpsb
test
push
stos
lds
adc
jno
shrb
push
push
push
push
sbb
jge
scas
cmp
cmp
mov
add
mov
dec
mov
xchg
int3
inc
dec
dec
in
mov
xor
mov
ljmp
imul
xor
insb
dec
hlt
repnz
push
daa
jmp
push
cmp
in
subb
adc
add
mov
xchg
push
mov
ds
xor
movsb
std
movsb
and
or
subl
cmc
cs
mov
xchg
popf
push
xlat
fisttpll
push
subl
pop
sbb
jp
pop
fimuls
cmp
sbb
mov
fsub
xchg
into
es
add
out
dec
and
out
aaa
in
fucompp
jmp
outsl
push
push
dec
cmp
shlb
jmp
in
jns
mov
and
jl
jg
mov
stc
cwtl
adc
sbb
or
mov
adc
movsb
fimull
mov
scas
loop
cmp
pop
ja
mov
ror
dec
popf
cmp
push
sbbb
scas
xor
sbb
insl
mov
dec
add
icebp
aad
xchg
in
testl
mov
pop
orb
call
popa
push
push
push
es
and
mov
fisttpl
popf
in
jmp
cmp
xchg
sub
jecxz
sbb
adc
inc
push
and
hlt
adc
jae
xchg
jg
pop
addr16
pusha
in
sub
scas
orb
std
jmp
inc
into
and
mov
xor
in
call
jae
add
incl
mov
dec
mov
clc
popa
outsl
push
lock
mov
cli
mov
shl
cmpsl
pop
add
xchg
fmuls
adc
mov
out
add
mov
xchg
adc
xor
mov
xor
push
cmp
mov
mov
notl
inc
rorl
sahf
adc
pop
xchg
in
insb
push
addr16
pop
pop
nop
dec
leave
or
arpl
xchg
nop
sbb
fistpll
sbb
sbb
and
cmp
cld
es
mov
clc
xlat
ljmp
pop
pop
pop
xor
out
jns
push
mov
nop
jnp
outsl
jle
cmc
shll
pop
insb
fisubrs
stos
cmpsb
mov
std
and
shlb
fmul
or
jl
pop
pop
sbb
cli
fdivl
or
dec
mov
lahf
imul
inc
pop
fildll
push
sbb
xchg
jmp
cli
add
es
or
sbb
int
and
sub
movsl
mov
cwtl
lcall
dec
mov
dec
xchg
mov
aaa
cmp
jge
inc
cmp
mov
in
mov
ret
cmp
sub
xchg
scas
cmp
loop
push
cli
mov
test
mov
mov
repz
sbbb
xor
in
out
sub
ljmp
adc
imul
negb
add
nop
lods
das
cmp
push
jns
ret
mov
out
push
cmp
jg
std
inc
ret
jg
adc
xchg
test
cwtl
and
xchg
add
cmpsb
push
cmp
test
xor
sar
cmp
std
pop
paddq
sbb
jmp
fstps
psrlq
inc
inc
sbb
shlb
cmp
mov
mov
fdiv
or
mov
sbb
lcall
mov
adc
push
mov
dec
lcall
into
inc
jg
aas
and
leave
dec
jge
sub
movsl
cmp
xchg
cld
mov
mov
cmp
std
or
fs
cmp
and
push
pop
int3
mov
sub
pop
or
xor
xorl
xor
rcrb
xchg
sahf
mov
out
cmpsb
jp
movsl
or
fcmovb
xchg
loopne
scas
pusha
ret
ror
adc
xchg
out
aas
jmp
pop
adc
insl
or
rol
xorl
iret
mov
rcrl
mov
jecxz
mov
xor
mov
popf
scas
add
add
inc
cmp
subl
loop
xorl
jp
outsl
lret
and
mov
fistpl
fs
shll
imul
jmp
sbb
icebp
ljmp
ljmp
mulb
ds
roll
fdiv
dec
pop
or
push
or
enter
cmpsb
pop
xchg
pop
adc
rclb
stc
xchg
aaa
pop
inc
dec
jecxz
inc
mov
dec
cmp
xlat
loopne
std
pop
cmp
call
movsl
es
in
inc
popf
jge
outsb
jg
sub
xor
pop
push
or
ficomps
push
mov
cmp
add
sub
pop
sbb
movsl
out
shl
mov
xor
imul
mov
pop
xor
add
mov
mov
or
nop
cmp
jo
jb
push
and
sti
fldl
js
fmull
repnz
ljmp
pop
ljmp
mov
sahf
or
ret
sub
int3
bound
dec
mov
adc
clc
in
cmpsb
repnz
sub
stos
inc
out
xor
mov
ficoml
bound
push
lret
xchg
into
popa
jecxz
pop
inc
dec
in
rcll
xchg
push
jbe
and
mov
jnp
jbe
and
int
ja
jmp
lea
mov
loop
aas
push
mov
cwtl
xchg
test
jnp
enter
cld
sarb
add
dec
push
mov
adc
mov
mov
jns
imul
mov
cmpsl
lret
mov
icebp
push
scas
adc
add
pop
lock
stc
mov
pop
leave
fsubrs
ror
mov
dec
jp
rolb
test
jne
pmullw
pushf
pop
mov
cmpl
xchg
cmp
or
jg
es
pop
adcb
inc
push
xchg
cs
push
pop
test
inc
notb
hlt
loop
int3
dec
jbe
out
scas
divl
add
add
jmp
sti
xor
push
test
flds
mov
mov
mov
sub
cmp
jmp
aas
cs
cmp
gs
leave
mov
insl
pop
dec
in
decl
xchg
in
sub
fs
fs
sbb
pushf
xchg
pop
fsubrp
pop
loopne
jo
pop
dec
push
lcall
lock
adc
icebp
push
jle
mov
popa
push
xchg
ja
out
mov
shlb
dec
arpl
stos
cmp
cwtl
into
mov
enter
pushf
out
scas
out
arpl
dec
sahf
sub
dec
mov
jae
cwtl
sub
cli
jno,pn
pusha
outsb
into
aad
pop
sar
in
popl
inc
enter
and
push
inc
mov
push
and
sbb
sub
stos
pop
push
aam
mov
inc
cmp
insl
icebp
subl
mov
or
push
push
dec
sub
and
mov
sbbl
adc
pop
mov
test
lds
dec
pop
gs
out
mov
sti
ss
addr16
jno
mov
or
adcl
stos
pop
push
mov
stc
adc
mov
inc
adc
mov
add
cmpl
cmp
sahf
frstor
or
dec
int3
inc
jl
jo
es
and
addl
mov
ficoml
into
jmp
aaa
fs
and
mov
push
push
and
sbb
dec
out
lea
stos
jmp
mov
mov
push
fs
inc
dec
pop
sbb
or
mov
mov
and
mov
fcoms
movsbl
jl
call
push
in
addb
adc
mov
mov
and
mov
jle
divb
mov
cmp
addr16
xor
aad
fs
rcl
sbb
add
cmp
adc
pop
xchg
xchg
loop
adc
data16
iret
outsl
ffree
pop
xchg
pop
int
sub
sub
xor
mov
xchg
push
add
mov
test
adc
cmp
add
insl
mov
xchg
sub
and
sarb
insb
enter
and
push
arpl
cmpsb
sbb
xor
inc
xchg
push
inc
inc
mov
jne
or
mov
outsb
and
out
mov
or
arpl
adc
repnz
pop
xor
xchg
cmp
xchg
lcall
scas
mov
sahf
int
sub
push
fistpl
test
xchg
loop
lret
in
lds
dec
in
in
fwait
int3
call
sbb
je
ds
cld
out
ret
ds
add
test
lret
mov
cli
in
sbb
and
xchg
mov
jae
pop
in
fmull
xchg
push
in
mov
mov
dec
daa
std
call
sahf
sbb
push
jl
jge
int3
inc
stc
rol
jne
aas
push
add
xor
shll
incl
mov
cwtl
jge
repz
fndisi(8087
inc
sub
je
scas
pop
push
jl,pt
sbb
mov
scas
jge
in
fs
fimull
xor
pop
mov
cmpsl
and
mull
fiadds
stos
xor
adc
ret
mov
sub
mov
ret
inc
iret
insl
ds
add
stc
pop
or
pop
inc
push
insl
lock
rcl
adc
nop
pop
pop
pusha
xchg
mov
inc
cmp
inc
pop
call
sahf
inc
nop
push
jne
sub
fistps
adc
add
ficoml
out
xor
pop
xor
mov
fs
mov
sbb
and
xor
gs
roll
sub
push
mov
xchg
sub
sub
loop
bound
pop
lret
pushf
cmp
lods
sbb
repnz
test
xlat
test
push
popa
push
xchg
iret
fistpl
addb
mov
mov
push
imul
shll
push
mov
pop
aas
ss
out
cmp
add
pop
imul
inc
push
mov
stc
insb
pushf
inc
sbb
fwait
jl
clc
or
cmpsb
mov
jmp
cli
sub
or
int3
inc
lds
or
mov
sbb
hlt
sti
cs
fs
or
push
mov
hlt
mov
and
xchg
push
mov
inc
mov
mov
xor
cmp
lds
jle
xor
nop
jge
jge
inc
aam
push
xor
loope
mov
bound
not
jge
lcall
aas
add
sarl
iret
pop
adc
adc
sbb
add
inc
orb
jle
jle
int
xor
sarb
das
cmpsb
cmp
arpl
pusha
in
lcall
cmp
lods
xorb
ficomps
adc
jns
lods
lods
jle
ret
sbb
pop
mov
or
mov
flds
pusha
pushf
rorb
lods
xchg
sbb
dec
cmp
cs
pop
loopne
push
push
stos
dec
shrb
test
lds
push
lret
dec
inc
ja
jmp
leave
sahf
jl
cli
cmc
aad
mov
sub
rclb
add
mov
gs
imul
jg
int3
loopne
fwait
or
cwtl
lret
mov
and
and
shll
shrb
ljmp
pop
inc
das
pop
clc
mov
jae
rcll
mov
mov
and
ror
sbb
loope
outsl
adc
xlat
loopne
pushf
outsb
std
mov
mov
push
mov
push
add
cmp
out
xor
lods
subl
or
in
pop
and
push
xor
js
ljmp
pop
clc
xor
js
jle
subb
dec
xlat
adc
or
pop
int
mov
dec
adc
cmpsl
mov
add
sub
andl
push
jl
add
lds
mov
push
insl
addr16
gs
es
mov
orl
sub
jle
int
negb
push
inc
pusha
cmp
xchg
arpl
shlb
adc
fdivl
in
fs
fsubrs
sbb
fnstcw
adc
addb
cld
jb
and
sub
mov
test
push
sub
aas
roll
repz
pop
xor
jne
inc
fldt
les
mov
mov
out
inc
lock
ret
fs
inc
out
in
jae
fistps
xchg
push
cs
in
mov
hlt
outsl
or
ficoml
lret
stc
mov
sbb
inc
ret
ja
scas
mov
sbb
ret
test
das
shrl
add
fs
std
sub
into
jg
ror
inc
lds
lock
xchg
jo
xchg
adc
ret
inc
stc
jecxz,pn
fcomps
cmp
outsl
movsb
sbb
imul
scas
push
popa
pop
push
scas
mov
or
ja
xchg
test
adcb
and
cwtl
ret
cmp
and
mov
jb
aas
pop
cmp
mov
mov
hlt
mov
push
dec
orb
cmp
inc
das
push
xchg
gs
adc
sub
cmp
shrb
into
scas
movsb
push
fsubrs
lcall
das
aad
imul
pusha
rorl
lahf
mov
and
or
dec
add
jnp
les
dec
pop
cld
out
iret
add
fwait
fnstcw
sbb
rol
pop
jnp
jns
adc
pop
shrb
fdivrs
sub
sti
mov
dec
pushf
mov
pop
mov
sub
mov
sub
mov
adc
insb
cmp
in
bound
movsl
jb
mov
xchg
aaa
cmpsb
sub
das
cwtl
dec
adc
push
push
dec
outsb
and
sti
popa
ret
loopne
mov
scas
sbb
shlb
sub
loope
clc
scas
and
push
and
jnp
stos
jg
lret
xlat
jns
push
adc
pop
es
ss
sub
scas
or
xchg
lret
cs
hlt
movsl
xchg
inc
jmp
cltd
lea
addr16
movsl
xchg
inc
sbb
push
fsubs
pop
fs
mov
cs
mov
sahf
and
jo
sbb
jle
out
push
insb
test
or
adc
outsw
sub
mov
addr16
out
dec
fcomi
jg
mov
pop
stos
mov
pop
xchg
jo
lcall
add
cmpsl
inc
mov
ret
inc
cmp
sbb
aad
and
ds
arpl
sub
xor
sbb
add
pop
out
idiv
nop
mov
and
insb
insl
mov
outsl
mov
mov
adc
inc
mov
adc
test
cmp
dec
movsl
dec
repz
loopne
jno
push
test
mov
lods
test
fnstsw
shll
enter
jecxz
std
jns
cmpsl
sbb
arpl
scas
mov
lcall
xchg
loope
push
mov
dec
stos
lds
adc
aad
jmp
fsts
add
and
decb
jno
dec
pop
fisttps
int3
repz
fcoml
mov
repnz
loop
lea
pop
int3
add
pop
push
add
push
aam
adc
clc
or
jo
jecxz
mov
imul
sub
and
jb
jne
mov
or
movsb
push
mov
arpl
mov
out
push
mov
xor
mov
inc
mov
cmpsl
xchg
gs
adc
orl
jg
insb
adc
int
push
ss
out
jno
out
jae
jp
pop
loopne
dec
rcrb
jmp
addr16
out
jge
gs
das
shlb
and
addr16
pop
adc
inc
ljmp
rcr
mov
xchg
sbb
mov
or
push
push
mov
inc
inc
inc
in
call
xlat
and
je
fidivl
in
or
push
jns
rcl
sbb
jno
jmp
xchg
das
int
cs
stos
push
cs
push
ret
add
add
inc
aaa
arpl
and
scas
push
out
jecxz
and
xor
shrb
testl
add
xchg
pusha
jl
push
ret
push
pusha
add
jge
adcb
imul
cli
pop
adc
sub
lods
push
mov
xchg
and
dec
leave
ret
cmp
pop
adc
adc
mov
push
add
xor
clc
xor
inc
adc
lea
add
xor
cmp
adc
imul
js
mov
clc
mov
repz
mov
xlat
add
xchg
xlat
adc
or
les
sbb
or
xchg
sbb
jne
pop
cmp
out
push
inc
iret
fs
xor
push
sub
popa
adc
cmp
js
xor
mov
test
or
mov
cmc
das
imul
jl
cltd
loope
xor
lock
sti
hlt
iret
cs
and
pop
movzwl
fisubl
dec
mov
ret
sub
nop
push
sbb
push
sbb
sbb
xchg
jne
mov
xor
imul
mov
jne
aas
gs
psubb
lods
xchg
repz
js
mov
mulb
outsb
pop
cmpsl
pusha
int3
aam
mov
mov
scas
call
pop
ret
xor
cmp
sbb
pop
je
xchg
adc
daa
repnz
insb
sbb
cmp
sti
pop
jmp
mov
ret
aas
outsl
mov
cmpb
fstpt
push
je
ss
cmp
sub
out
push
mov
bound
pop
cwtl
push
bound
sub
fistpll
lret
outsl
lea
xchg
jb
out
sub
roll
xor
mov
xor
mov
fiaddl
in
jle
leave
mov
adc
sbb
xchg
dec
ja
cmc
xchg
push
cs
or
xchg
or
je
xor
pushf
sub
push
pop
mov
sub
xor
and
xor
sub
outsl
mov
ret
aas
fcoms
stc
jge
js
jo
mov
stos
pushf
add
push
or
pop
inc
out
je
loop
outsb
xchg
jnp
insb
sti
mov
not
aam
mov
sbb
scas
mov
sbb
mov
add
out
cmpb
or
call
xor
mov
outsb
xor
scas
popa
test
lock
push
sbb
ss
push
and
inc
loop
mov
pop
sub
daa
nop
divl
in
mov
lods
mov
inc
rcrl
mov
inc
fs
test
sbb
xor
push
add
ljmp
xchg
movsb
push
int3
and
push
jbe
lock
js
pop
pop
xorl
int
push
cmp
or
shll
push
call
push
pop
cli
std
mov
cs
movsl
cld
xchg
movsb
out
movsl
jnp
pop
cmp
pop
mov
stos
shlb
mov
pop
mov
test
test
dec
pop
pop
mov
pop
push
je
test
addr16
lea
and
in
xchg
xor
and
pop
addr16
fs
dec
stc
mov
xor
sub
or
imul
aas
xor
jg
cli
and
mov
dec
and
stos
jmp
jmp
mov
dec
pop
xchg
xchg
dec
call
hlt
cmp
jle
pop
mov
jbe
mov
call
mov
sbb
loope
xor
shll
adc
mov
dec
lock
sbb
pushf
loop
shll
hlt
test
stos
add
dec
mov
jecxz
ss
fldt
inc
inc
fistl
dec
xchg
stos
adc
inc
mov
add
pusha
gs
jo
xor
sbb
push
in
iret
mov
leave
cli
push
stos
pushf
push
aam
movsb
sub
scas
pop
mov
pop
jb
xchg
sti
jne
lods
pop
xor
sbb
jmp
pop
popf
mov
push
enter
mov
push
test
cmp
xor
fstpl
sbb
repnz
xchg
pop
mov
mov
mov
jmp
push
or
xchg
xchg
movsl
in
stos
sub
cmpsl
fildll
int
incb
scas
mov
clc
ja
out
popa
push
cmp
push
sbb
xchg
pop
subb
xchg
mov
leave
xor
orl
jmp
lea
int3
mov
out
pop
mov
dec
test
insb
fldl
inc
lods
sub
cs
add
push
mov
icebp
sbb
and
xor
aad
mov
rcrb
add
jmp
inc
leave
int3
pushf
gs
xchg
cwtl
jle
lcall
jns
aaa
ds
outsl
ds
pop
sbb
mov
xchg
lcall
ret
push
mov
inc
pusha
shlb
out
test
mov
push
xor
cli
mov
out
and
adc
add
jae
jbe
mov
imul
mov
sbbb
add
push
xor
imul
testl
xor
add
data16
pop
cmpb
jl
lods
cmc
stos
inc
inc
movsb
rorb
jecxz
gs
and
sbb
cmp
mov
pop
adc
icebp
lods
or
in
fwait
jo
psubsb
dec
mov
aaa
xchg
sbb
in
shrb
dec
xchg
and
test
mov
gs
stos
adc
xchg
loopne
adc
outsb
jg
shl
call
fbstp
mov
push
sub
stc
xor
sub
jnp
adc
or
lahf
lods
cwtl
pop
cmp
jecxz
enter
inc
inc
shll
inc
lret
lock
cmc
cmp
fldl
or
lods
mov
lock
adc
rcl
data16
sti
pop
out
imul
cli
into
xor
scas
mov
loope
gs
push
mov
xchg
push
sbb
mov
cld
add
pop
cmp
xor
repnz
fidivrl
lret
shl
push
xor
bound
sbb
popa
mov
cli
sub
call
hlt
and
push
in
fdivrl
inc
loop
mov
mov
sbb
daa
addr16
mov
sbb
cmp
adc
push
jmp
or
cmovo
dec
or
rcrl
mov
movsw
jne
je
lods
mov
rclb
clc
jbe
in
adc
or
sti
mov
jbe
addb
imul
adc
out
test
sub
sbb
lds
sub
mov
pop
call
dec
lods
in
add
mov
dec
dec
mov
adc
jmp
test
lods
inc
and
clc
push
in
adc
mov
pop
maxps
mov
in
sub
fdivl
fldcw
add
and
arpl
pop
js
push
es
adc
iret
lret
je
or
jae
pop
cmc
orl
lcall
cwtl
bound
push
jnp
cmp
int3
call
mov
fmul
pop
lods
movb
bound
hlt
daa
mov
and
scas
aam
fistps
xor
ja
adc
sub
jp
xchg
mov
or
jle
out
pop
mov
je
jecxz
out
in
ljmp
js
sbb
cwtl
dec
jae
shlb
or
sti
inc
and
lea
decl
in
push
jle
xchg
jecxz
adc
loopne
fs
iret
add
hlt
pop
jl
or
call
in
or
popa
int
cmc
sbb
fstp
fistpl
mov
enter
mov
sahf
scas
test
out
rep
test
loop
scas
faddl
cmp
jge
mov
sarl
ja
sbb
ds
push
push
inc
bound
or
out
aas
and
test
ret
pop
dec
cs
lock
mov
mov
and
les
les
or
mov
ljmp
inc
dec
dec
nop
popf
jae
fldt
pop
je
add
loop
push
sbb
sub
movsl
push
mov
push
inc
xor
xchg
lods
jl
inc
sbb
pop
xchg
inc
mov
out
cmpsb
inc
mov
jge
pushf
mov
pop
inc
jbe
and
xchg
inc
popa
insb
scas
shrl
jno
mov
out
xor
push
icebp
sbb
dec
sti
push
mov
out
cltd
jg
into
xor
mov
jae
jg
and
cmp
mulb
push
sub
sarb
mov
daa
popa
nop
es
mov
xlat
fildll
data16
pop
xchg
popa
mov
iret
mov
imul
adc
jae
mov
add
rorb
cmp
cld
or
mov
in
repz
jecxz
shlb
xchg
popf
and
and
push
call
loop
sbb
fs
and
mov
pop
popf
outsl
xor
lods
leave
andl
pop
popf
lret
xchg
mov
add
sarb
dec
mov
or
and
jnp
mov
negl
cltd
lods
mov
add
shll
adc
rclb
popf
mov
jmp
ret
call
test
push
mov
push
cmp
sub
stc
cwtl
rcrb
sbb
sbb
mov
pop
add
jmp
push
ljmp
adc
inc
xchg
jmp
out
push
mov
xor
nop
mov
inc
xchg
cltd
xchg
mov
add
test
loop
sbb
cmp
ret
mov
ret
mov
mov
inc
shlb
inc
inc
mov
cli
je
std
out
imul
mov
lcall
rolb
lods
shll
sbb
subl
mov
xchg
push
xchg
cmc
fstpl
mov
adc
pop
xchg
jg
rcll
outsl
xchg
psrlw
cli
xchg
add
fsubrs
bound
ja
cwtl
inc
out
sbb
addr16
dec
ret
out
test
jnp
fwait
in
mov
lahf
lret
hlt
cltd
inc
xchg
test
push
outsl
xor
pop
nop
or
add
dec
pop
or
jns
dec
fadds
imul
data16
and
loopne
add
inc
push
pop
inc
mov
sbb
out
js
cwtl
add
pop
mov
xchg
push
jp
popa
ljmp
mov
imul
fs
mov
cmpsb
dec
call
enter
stc
jp
test
daa
adc
cwtl
arpl
subl
pop
xchg
enter
aas
enter
cs
inc
test
std
les
es
lahf
les
push
mov
insl
fistps
sbb
xchg
outsb
jp
dec
fidivl
mov
mov
jl
lahf
es
out
insl
sbb
xchg
pop
or
and
sub
inc
xchg
repz
push
xchg
jae
repnz
lret
add
xor
add
mov
adc
inc
paddsb
mov
cmpsl
add
out
test
sub
icebp
leave
loopne
lahf
sbb
mov
push
mov
dec
stos
dec
lock
adc
or
aaa
xlat
mov
popa
cltd
std
lods
jle
mov
testb
lods
test
pusha
outsl
subl
sub
dec
sub
outsb
push
jmp
xchg
daa
cli
jnp
pop
divb
lcall
rorb
mov
push
out
and
adc
icebp
outsb
jno
addr16
repnz
and
sbb
add
stos
xor
add
or
cmp
add
fldenv
sub
adc
inc
adc
jns
mov
outsl
sbb
mov
int
mov
push
rorl
addl
or
mov
jo
sub
push
and
push
add
iret
lret
lahf
js
test
add
xor
adc
in
jl
mov
adc
ss
mov
scas
jg
mov
pop
aad
stos
dec
pop
pop
xchg
test
mov
mov
data16
sbb
inc
inc
xlat
scas
inc
into
sbb
and
mov
cld
insl
push
or
shll
push
mov
and
sbb
mov
icebp
pop
rol
mov
inc
divb
add
cmc
test
jp
aas
jae
lea
ljmp
fsubs
mov
push
inc
dec
mov
cli
xchg
xchg
mov
adc
fsub
mov
inc
push
fdivrl
dec
sahf
lahf
add
adc
jge
sub
out
mov
mov
mov
mov
cltd
rorl
add
sbb
sbbl
ja
lea
in
mov
stos
and
jecxz
outsb
pop
popf
fwait
das
and
mov
jecxz
cmp
fs
xchg
inc
inc
cmp
lock
hlt
inc
jne
rcrl
or
aad
adc
mov
cmpsb
cmpl
inc
call
nop
or
mov
or
xor
or
push
call
push
jmp
and
mov
or
test
add
je
in
jle
lods
cmp
adc
or
sti
inc
jbe
orb
orb
xchg
test
mov
int
bound
das
shlb
andl
inc
xchg
test
jne
mov
adc
cmc
out
jl
mov
cmp
jae
push
imul
adc
pop
jb
sysexit
push
mov
add
xchg
cld
movsl
mov
in
sbb
pusha
sub
bound
ror
fsubs
inc
movhps
mov
cmp
aas
inc
std
cli
gs
pop
std
mov
cli
mov
scas
sbb
das
xor
dec
xchg
add
dec
dec
enter
sbb
pusha
lcall
div
outsb
lods
or
cli
lret
pop
js
pushl
lcall
popa
call
and
or
mov
jns
mov
rclb
xor
je
dec
xor
sbb
adc
xor
jg
or
cltd
in
add
pop
ds
sbb
sub
dec
popa
mov
add
cmp
scas
push
mov
cltd
lret
xor
iret
mov
xchg
outsb
xchg
add
pop
mov
cmp
dec
imul
fldl
sub
shrb
mov
jg
repz
adc
loopne
add
pop
loopne
sbb
mov
enter
or
fsubrl
pop
xor
data16
xor
cmpsl
add
mov
test
in
mov
mov
ret
mov
jmp
and
mov
repz
push
push
sbb
mov
lods
and
inc
popa
je
das
lret
lcall
testb
mov
push
loope
add
scas
cli
stos
sbb
je
add
pushf
push
ret
ror
sbb
xchg
cmp
or
scas
ds
es
clc
pop
in
dec
sub
lcall
jo
jns
js
repnz
push
or
adc
sarl
push
dec
pop
iret
jl
cmc
and
pop
or
lcall
mov
stos
jnp
pmulhw
xor
pop
inc
mov
pushf
sbb
xchg
std
ficompl
loope
cmp
lods
mov
sti
sbb
jg
jecxz
or
leave
push
or
inc
nop
sub
xchg
cmp
imul
jbe
mov
or
push
insl
pop
mov
roll
jne
cli
cmp
or
pop
pushl
or
popf
bound
dec
or
inc
jge
mov
lods
stc
cmpsl
in
adc
mov
stos
call
xchg
sub
pop
sub
sbb
pop
ficomps
mov
lods
int3
jle
pop
icebp
aaa
dec
jmp
lods
xor
jl
mov
out
rorb
loopne
push
imul
jne
push
jle
mov
aas
adc
lret
xchg
mov
adc
inc
mov
fidivrs
jp
adc
faddl
mov
das
pushf
ljmp
ds
dec
loopne
dec
test
push
xor
shlb
test
call
movl
push
jge
enter
lcall
pop
retw
sbb
popf
insb
adcl
xor
sbb
jecxz
xor
xchg
sub
sub
pop
push
pop
outsb
imull
jecxz
xor
aas
outsl
inc
outsb
sbb
inc
pop
dec
in
les
push
repnz
push
pushf
and
mov
xchg
ret
add
pop
or
enter
aad
out
mov
jae
cs
fs
mov
mov
push
scas
out
int3
adc
lret
popa
add
movsb
cs
xchg
sub
sahf
push
xchg
cmp
pop
shrb
loope
lret
aam
push
out
imul
notb
lret
mov
andb
or
pop
add
inc
dec
xor
sub
mov
fldcw
cmp
rcrl
sbb
sub
loope
xchg
and
sbb
push
pop
xlat
push
mov
mov
inc
add
mov
adc
loopne
push
pushf
sbb
aas
xor
push
fcmovnb
adc
jne
and
inc
cwtl
mov
mov
in
ja
lret
xchg
out
into
imul
loopne
mov
dec
sbb
bound
pop
lea
inc
fadd
test
stos
or
cli
xlat
mov
je
rcrb
js
dec
and
pop
sbb
xchg
dec
lods
push
dec
stc
iret
movsb
xor
xchg
inc
mov
lods
js
sub
fcmove
cmp
hlt
adc
lock
fdivr
sub
fdivrl
jmp
outsb
push
add
sub
xchg
iret
dec
aad
cltd
xchg
or
add
decl
call
loope
sarl
stc
and
pop
mov
and
pushf
sub
jb
jle
test
stos
lcall
or
test
mov
js
ljmp
mov
dec
mov
mov
test
test
aam
or
adc
xchg
mov
jl,pt
lock
pop
call
mov
pushf
icebp
pusha
fisubl
push
ret
jbe
inc
ja
mov
sbb
adc
bound
and
mov
movsl
enter
and
pop
jns
leave
insl
xor
lea
and
das
int
xor
xchg
xchg
imul
enter
xlat
int
lcall
hlt
xchg
xor
mov
sbb
pop
mulb
adc
popl
xchg
fwait
cltd
push
and
out
daa
addr16
leave
jmp
repz
push
fldl
sbb
mov
xor
fstps
mov
stc
xorl
enter
and
dec
leave
out
cs
cmpsb
clc
xchg
fsubr
adc
mov
in
sub
movsl
cmc
cmp
mov
xor
jns
std
or
mov
xchg
pop
or
xlat
fld
loop
add
jnp
push
rorb
dec
dec
sub
add
loope
sbb
imul
imul
pusha
leave
mov
mov
xor
int3
mov
pop
addr16
mov
movsb
out
mov
rorl
out
dec
movsb
adc
cmovns
mov
call
push
enter
cmp
cmpsl
mov
fxch
mov
xor
jle
pop
xchg
fmuls
call
mov
xor
std
fadds
jecxz
out
testl
lahf
jbe
dec
in
mov
out
cmpsl
jl
nop
outsl
xor
inc
test
outsl
push
push
roll
mov
repz
xchg
mov
aaa
and
push
jmp
sbb
fs
mov
sarl
les
and
mov
ret
popf
jl
adc
fdivrp
or
cwtl
jmp
jmp
pop
ds
or
or
pop
mov
je
test
je
xor
jbe
mov
pop
mov
nop
fdivrl
addb
sub
imul
lods
xor
dec
jecxz
sbb
lahf
rclb
shlb
pop
mov
push
stos
xchg
rcll
sti
jno
jnp
push
call
adc
dec
pop
add
lret
sarl
loope
loopne
aam
xchg
mov
push
aad
das
mov
daa
insl
scas
pop
dec
jl
sbb
mov
xchg
loop
add
es
je
test
inc
xor
cmc
mov
cwtl
into
dec
sbb
enter
sbb
insb
jmp
outsb
jnp
jp
add
mov
pop
push
xor
es
xor
xchg
lcall
pop
fs
cs
push
xchg
bound
cmp
out
imul
add
mov
fwait
jo
shr
add
cmpsb
loope
rcrl
jb
cmc
add
adc
xchg
mov
sbb
mov
xchg
jmp
rcll
icebp
push
xor
dec
inc
push
nop
insl
nop
or
inc
xchg
jb
lods
ret
and
push
mov
cltd
cmpsb
pop
popa
repz
das
mov
es
sbb
imul
jbe
test
jmp
int3
inc
ss
mov
pop
rcll
add
stc
xchg
repnz
xor
popa
xchg
jno
fninit
mov
imul
sbb
pusha
ret
jl
das
sbbb
das
repz
push
xor
stc
out
add
xor
mov
xchg
sbbl
movsl
out
add
push
adc
jbe
mov
xor
aad
or
cmp
outsb
shrb
and
push
insl
in
ds
adc
sbb
mov
push
xor
andl
imul
inc
push
sub
xchg
sti
cmp
mov
cwtl
push
inc
pop
loope
xor
adc
mov
mov
cltd
add
lret
push
xor
clc
shrb
movsb
dec
pop
jnp
sub
jge
aad
mov
out
pop
fucomp
push
sub
stos
mov
cmpsb
lret
cmpsl
inc
loopne
push
or
push
xlat
jle
cmp
dec
and
aad
in
cmpsl
imul
pop
cs
inc
dec
lock
dec
jb
inc
jb
dec
push
add
rcrl
js
mov
pop
fwait
mov
cmpsl
int3
mov
sub
jne
ljmp
jmp
push
sub
ja
lahf
fbstp
cld
jne
xchg
push
dec
mov
xor
xor
jns
fcomip
mov
sbbb
mov
and
push
xchg
clc
jb
dec
pusha
cs
mov
into
ret
jmp
cmp
out
sbb
xor
aad
movsb
daa
inc
std
sub
jae
data16
call
out
cmp
in
xchg
sub
mov
mov
cmp
test
fidivl
repz
in
test
jecxz
jns
fs
xor
fsubp
lea
xchg
notb
enter
pop
aam
mov
test
add
xchg
repz
je
xor
pop
cmp
cwtl
pop
jno
aam
mov
mov
inc
adc
out
push
out
dec
and
iret
xor
out
cmc
xor
jne
and
or
sbb
movb
ret
jl
adc
fcmovu
cmc
sbb
fists
or
call
ret
jo
push
repnz
lret
out
loop
push
cmpsl
push
in
dec
fsubl
je
std
mov
or
mov
mov
dec
out
push
lret
lret
fwait
push
pop
jmp
add
shll
and
data16
data16
jl
pop
aam
adc
aas
js
stos
scas
push
in
fcom
mov
fs
test
xchg
iret
rorb
sbb
mov
test
shrl
int3
adc
outsb
sub
cmc
jp
cld
sub
scas
pop
cmpl
or
std
mov
mov
rcll
sbb
in
nop
pushl
bound
push
sub
out
rcr
mov
stos
sub
lock
fcoms
pop
sbb
mov
pushf
ljmp
popa
mov
and
sub
popf
push
ds
mov
or
jnp
and
cmpsb
loope
push
fsub
pop
mov
xchg
jl
jg
and
mov
jmp
push
mov
jge
sub
int3
or
ficoms
add
xchg
mov
lea
rcr
and
in
ljmp
fcmovne
mov
sahf
push
daa
xlat
pop
inc
jno
outsl
push
inc
ss
mov
push
lods
xor
popa
scas
jns
pop
fnstsw
addr16
sbb
adc
xchg
push
ss
add
sahf
fnstsw
sti
test
inc
es
jae
cmp
jns
pop
loopne
lds
and
lcall
pop
or
mov
jl
pusha
sub
or
mov
lock
sbb
pop
imul
es
fnstenv
ljmp
xor
loopw
or
clc
pop
roll
cmp
pop
push
cwtl
dec
iret
mov
sbb
mov
ret
add
les
rcrl
scas
ffree
mov
hlt
mov
pop
mov
cmp
jecxz
sbb
dec
ret
insl
xchg
dec
xchg
and
imul
lock
or
mov
loop
movb
nop
subl
cs
cmp
sub
adc
jg
bnd
out
in
decl
cs
fcom
js
lock
in
lds
in
cmp
sbb
fadd
mov
fidivrs
ds
dec
inc
into
jo
and
sub
pusha
ds
imul
int3
mov
rclb
insl
sbb
sub
in
fsubrl
mov
jp
leave
push
test
bound
push
cs
or
push
gs
cwtl
in
lock
loopne
shl
neg
dec
lret
sbb
je
ds
mov
test
subl
and
mov
ljmp
mov
in
scas
ret
je
rorl
fsubs
cmp
in
xor
in
stos
add
jae
xor
xor
aad
lods
outsl
and
jmp
iret
loopne
lds
out
and
cli
sub
jle
testb
iret
xchg
aas
stos
mov
add
test
aam
loop
and
jg
jmp
mov
jge
ret
dec
sub
cli
bound
mov
lcall
jns
sbb
icebp
inc
xchg
cmp
stc
mov
or
mov
sub
lret
insb
test
cwtl
test
sub
mov
mov
stos
mov
xor
test
xor
leave
cmp
cs
dec
dec
sbb
pop
jnp
bound
jnp
push
lds
std
add
xor
cmp
mov
mov
scas
cmp
mov
mov
sbb
add
push
fnstsw
push
xor
cmpsb
into
imul
inc
jg
test
cmpsl
test
adc
js
mov
pop
das
or
in
shld
xchg
lock
cmp
call
into
cmp
cmp
pop
add
pop
push
dec
adc
mov
sbb
insb
push
arpl
xchg
in
mov
pop
lock
icebp
fcmove
mov
or
jle
sub
mov
adc
add
push
fdivrs
rcll
push
aaa
popf
xchg
nop
mov
dec
inc
stos
cmp
cltd
lock
cmp
add
out
cs
testl
cmc
movsl
push
lds
stos
cmovb
xlat
hlt
dec
rorb
jbe
ret
aad
mov
jo
in
adc
add
call
aad
ds
loop
nop
cltd
sbb
aam
mov
mov
repz
or
aas
shrb
and
ret
shrb
cltd
add
fdivs
pop
mov
adc
movsb
or
notb
push
push
jnp
pushf
mov
and
rorb
pop
popf
insl
aad
push
cltd
movsl
dec
dec
jno
or
jae
icebp
and
cmpsl
cmp
mov
pop
jbe
test
push
test
insb
or
addl
sub
decl
inc
lods
mov
hlt
popf
xor
rorb
das
pushf
mov
pop
push
jle
or
jns
jp
jb
fimull
movsb
and
rolb
data16
and
xchg
loop
fimull
out
ss
or
push
aad
lret
sti
leave
sbb
popa
or
sbb
test
lret
xor
gs
sub
xchg
add
fwait
dec
or
pop
mov
mov
xchg
rclb
dec
cmp
fldcw
bound
test
push
repz
sti
or
popf
gs
roll
in
test
push
daa
daa
sbb
idivb
leave
js
or
aaa
das
aas
test
cmp
ds
mov
icebp
call
mov
mov
subl
push
sbb
cmp
xlat
sahf
aam
cwtl
fistps
in
cmp
movsb
std
lret
popf
cmp
out
arpl
repnz
mov
insb
mov
aas
jne
imul
iret
jp
mov
in
mov
ljmp
out
xor
lea
faddp
mov
imul
jg
aaa
lcall
fsub
pop
push
pop
fcmovnu
xor
jb
mov
inc
push
mov
sahf
sbb
loope
xchg
jp
and
fwait
inc
loope
sub
fldl
pop
outsl
cwtl
mov
jns
sub
add
mov
push
into
pop
mov
pop
out
xor
jae
std
add
fstpt
clc
sahf
test
stc
out
cltd
mov
cli
lea
mov
lea
iret
cmpsl
xlat
xchg
fisubs
inc
int3
clc
sarl
arpl
stc
push
sub
adc
push
mov
cmp
push
mov
pop
sbbb
inc
les
cmp
push
xchg
jnp
cmc
cmp
aaa
push
xchg
movsb
push
les
fisubs
nop
jae
inc
aad
sbb
adc
cmp
xchg
cmpsl
movsl
mov
repnz
jge
and
in
mov
mov
loop
into
pop
clc
cwtl
cmc
xchg
mov
into
or
inc
in
push
leave
aam
mov
test
pop
sub
nop
sub
jno
jmp
fs
cmpsb
xor
fcoml
add
jp
xchg
test
lds
movb
mov
or
mov
mov
cmc
es
popl
cltd
sub
fdivl
dec
addb
shrl
xor
add
cmp
out
inc
fbld
xor
stos
adc
sbbl
out
cld
outsl
mov
or
out
mov
fwait
adc
jecxz
je
xchg
and
mov
adcb
push
adc
ss
pusha
bound
mov
fpatan
mov
inc
push
movb
or
cmp
shl
xchg
mov
jb
lods
mov
movsb
mov
cmp
iret
mov
popf
jmp
and
dec
xchg
jo
sti
movsb
imul
dec
pop
add
dec
andl
aas
mulb
and
nop
sahf
sbb
jb
jmp
or
push
enter
jne
mov
test
pop
sahf
aas
pop
lods
cmpb
jmp
js
xchg
pop
cmpsl
dec
pop
imulb
bound
jg
add
sbb
xchg
mov
cld
and
in
xor
mov
outsb
cli
loop
push
ljmp
mov
gs
mov
je
inc
repnz
xchg
out
hlt
popf
mov
push
in
jae
out
es
pop
inc
mov
push
xor
dec
rcll
enter
flds
inc
inc
inc
fcmovnbe
or
je
and
out
inc
inc
out
or
jno
orl
pop
cwtl
test
fbld
mov
fnsave
lcall
test
mov
stos
jecxz
add
xchg
insl
mov
pop
inc
addl
das
xchg
mov
inc
or
aam
pushf
and
ror
adc
mov
ljmp
mov
mov
out
mov
sbb
xchg
jb
xchg
int
repnz
mov
add
lahf
pop
test
cmc
cltd
or
jo
comiss
lock
mov
xchg
out
inc
adc
shr
push
lock
pop
das
mov
jg
stos
cli
push
rcrb
push
pop
jge
inc
addb
add
jb
xor
push
mov
js
adc
jbe
lock
std
cmp
inc
cs
push
movsb
mov
cltd
mov
mov
push
stc
sti
add
sahf
test
leave
pop
std
lea
jg
stos
inc
inc
bound
mov
or
out
bound
mov
stos
mov
fucom
or
loopne
jle
xlat
sub
xlat
push
add
sbb
js
outsb
mov
mov
mov
or
push
jbe
adc
shrl
gs
sbb
mov
pop
dec
push
adc
cmp
inc
mov
cmc
popf
sahf
ret
sbb
mov
mov
or
int3
add
mov
xor
inc
xchg
fnstsw
daa
das
push
jge
fstpl
std
mov
dec
pop
lret
or
adc
push
pusha
jno
xor
jns
push
pop
jnp
jne
stos
popf
xchg
and
pop
xor
std
cmp
pop
scas
push
adc
xchg
sysexit
shrl
sub
das
cmpb
xor
imul
test
pop
aas
mov
xchg
arpl
push
cwtl
inc
pop
ss
loopne
leave
in
add
mov
popf
xor
jne
call
jns
cmpsl
stos
jmp
test
mov
push
mov
rcr
adc
mov
add
fistps
insl
leave
scas
sahf
pushf
add
add
pop
push
mov
pop
sub
pop
pop
lret
idiv
and
in
sbb
mov
stos
push
mov
mov
les
jnp
int3
mov
loopne
test
or
mov
je
pusha
xor
cmc
popf
rcl
sub
stos
jne
aaa
jae
lret
stc
xchg
and
fdivl
mov
push
ret
mov
inc
xor
jl
cmpsl
inc
or
mov
cmp
sar
or
sub
cmp
gs
pop
outsb
rclb
inc
rorb
xor
stos
mov
pop
call
dec
pop
sbb
imul
mov
cltd
jle
fidivs
push
and
ljmp
cmc
ror
mov
xorl
popf
sub
push
enter
dec
or
sub
lcall
or
test
lret
aam
pop
roll
cmpxchg
push
shlb
pusha
pop
call
xor
cmp
push
scas
shll
xchg
jno
loope
cmp
frstor
sti
int
cmpsb
icebp
jb
mov
add
cmpsl
subl
push
call
xor
push
sbb
ja
lahf
inc
cmpsl
adc
adc
in
push
push
jne
inc
adc
mov
push
pop
jl
xor
jp
xchg
hlt
into
je
outsl
push
push
pop
mov
shl
jns
mov
cmpsl
loop
mov
pop
sbb
mov
jno
inc
cs
mov
pop
cmc
ljmp
and
dec
add
jae
push
js
scas
data16
ja
dec
and
testb
pop
xchg
and
dec
mov
icebp
daa
and
call
fdivs
aam
fisttpl
xchg
rcrl
shrl
push
sub
popa
add
cwtl
mulb
jae
inc
inc
cmc
xchg
sbb
mov
adc
adc
imul
nop
stc
inc
int
inc
xor
adc
mov
adc
jae
xchg
repz
mov
sub
jb
ljmp
repnz
cmpsl
mov
xchg
jmp
stos
lea
push
cmp
pop
inc
or
cs
sub
mov
cmp
pop
adc
pop
jb
imulb
shrl
xorb
in
xor
lds
icebp
and
add
xchg
je
ljmp
pop
adc
fnstenv
pusha
aaa
cli
arpl
mov
mov
mov
cmc
stos
adc
in
mov
hlt
cld
fisubrs
cltd
sub
mov
mov
test
dec
jne
xchg
sbb
push
leave
jns
pop
mov
insb
cmp
movb
int3
lret
push
jb
and
xchg
sbb
pop
jne
repnz
iret
lods
add
mov
mov
mov
insb
loop
test
cmp
push
out
iret
pusha
mov
pmulhuw
pop
xor
xchg
add
lcall
sahf
testb
notb
jnp
sub
inc
lea
js
cltd
or
pop
mov
enter
dec
aaa
xchg
aad
repnz
jecxz
adc
test
scas
repnz
mov
jb
xor
and
sub
jp
out
mov
jmp
into
sbb
push
mov
jae
push
mov
sub
sbb
pop
ret
notl
mov
cltd
or
aad
jmp
mov
mov
mov
push
xchg
jmp
push
ret
idivl
ja
pop
jo
and
fisubs
sbb
fldt
aaa
std
fs
push
repz
jnp
shl
pop
sub
clc
mov
pop
mov
adc
adc
jg
inc
and
jne,pt
adc
mov
ret
repz
pushf
fmulp
aaa
std
push
or
mov
push
jb
insl
pop
inc
imul
imul
inc
mov
fsts
push
cmp
jecxz
or
rcll
lret
sub
push
inc
lea
xor
xchg
mov
xor
dec
cmp
xchg
jg
add
repz
scas
cs
pop
jle
lahf
cmpb
mov
jmp
sbb
ljmp
inc
int3
mov
cmp
outsb
adc
push
fisttps
imul
cli
jmp
fcomip
inc
test
dec
dec
dec
fisubl
push
outsl
pop
push
mov
call
adc
outsb
fstps
repz
testl
xor
sbb
aaa
in
add
hlt
jne
loope
popf
mov
daa
mov
inc
mov
and
inc
jnp
pop
xchg
adcb
je
shr
movsl
fwait
jb
lock
bound
dec
shll
dec
pop
fisttpll
loope
sarb
les
dec
mov
jle
repz
inc
jbe
lret
push
jg
mov
pop
jmp
push
lds
nop
and
popf
lock
sub
lods
xchg
xchg
popa
mov
or
push
mov
lcall
mov
mov
outsb
leave
data16
dec
clc
pop
add
sbb
and
imul
ss
insb
sub
push
lahf
sub
fisubl
jns
mov
adc
cmp
stos
mov
rorb
cld
mov
test
enter
and
movsl
push
inc
push
dec
jb
lods
sub
adc
xor
les
push
fs
jne
aaa
mov
ret
cmc
out
scas
push
out
pop
imul
insb
nop
insl
insl
nop
outsl
je
xchg
rcrl
aaa
xlat
sbb
push
icebp
jl
mov
pop
ljmp
cmp
lock
sub
ja
dec
stos
mov
pushl
scas
cli
cmp
adc
loop
popa
dec
mov
leave
hlt
fsub
adc
in
bswap
pusha
fwait
inc
pushf
jp
in
mov
xor
cmp
mov
xchg
movhlps
sbb
and
leave
fwait
rcrb
xor
sbb
lds
adc
push
add
mov
rcr
dec
sbbb
cs
cli
sbb
or
pop
popa
pop
fstps
popf
xchg
jae
test
jb
pop
push
jp
leave
add
stos
mov
pushf
push
jecxz
outsl
bound
mov
adc
repz
pop
insb
fs
movsb
ret
int3
mov
std
push
xchg
jo
into
jmp
adc
ror
jno
push
cmp
add
jbe
push
add
mov
or
pop
mov
inc
rcr
mov
sbb
int
les
mov
test
es
xchg
fiadds
push
xor
stos
enter
push
and
mov
jno
pop
mov
aad
roll
loopne
and
les
mov
das
xor
rolb
sub
in
sub
sbb
xor
imul
insl
push
or
popa
arpl
mov
pop
xchg
outsl
mov
jge
leave
nop
pop
js
xchg
mov
dec
stos
fwait
enter
pop
sbb
ret
les
pop
fsts
xor
sub
aas
sub
mov
and
clc
pushf
mov
mov
das
and
mov
je
rorl
or
outsl
mov
and
push
das
jae
fidivs
fsqrt
xchg
add
push
jno
or
adc
pop
in
mov
jbe
dec
mov
testb
and
popa
inc
cld
or
sbb
dec
adc
cmp
pop
mov
mov
jecxz
mov
shll
cmp
xor
shll
xchg
test
lret
adc
inc
aaa
cmp
push
sbb
ljmp
push
std
sahf
jae
mov
or
xchg
dec
bnd
cwtl
lret
xchg
test
popf
adcb
or
es
mov
scas
sbb
ja
adc
inc
pusha
or
cmp
sbb
leave
xchg
sub
loop
mov
sbb
jbe
jg
inc
lret
ficoml
or
push
pop
shlb
jmp
sub
lock
insb
dec
pop
aas
sub
pop
test
faddp
jae
mov
mov
add
push
mov
js
rorl
pop
pop
xorb
ja
pop
inc
xor
fimull
cmpsl
shll
test
xor
je
xor
lcall
push
jmp
scas
icebp
add
push
cli
inc
addr16
inc
ret
lods
jecxz
bound
neg
dec
lods
inc
rorb
fs
das
inc
mov
lods
xlat
loop
adc
aam
cwtl
incl
in
std
test
jl
scas
repnz
into
cmpsl
in
enter
mov
add
call
dec
inc
scas
ljmp
adc
mov
iret
lret
test
sbb
sub
ja
and
xchg
xchg
jmp
rorb
scas
movsl
sub
int3
leave
push
scas
ret
into
pop
and
and
inc
mov
lahf
xchg
sarl
pop
lds
xor
sub
and
xchg
dec
mov
sbb
in
rclb
adc
pop
push
clc
jns
rolb
or
imul
hlt
cmp
pop
push
sbb
pop
cld
aam
jbe
loopne
mov
xor
movsb
mov
adc
stc
sub
or
rsqrtps
dec
inc
int
aam
mov
in
into
lea
add
aas
pop
xlat
leave
jne
repnz
xchg
out
call
push
mov
inc
dec
mov
cmp
adc
ret
nop
xchg
rcrb
xchg
sbb
imul
je
mov
sub
movsb
mov
add
imul
test
pop
negl
stc
lods
sub
clc
jbe
testl
mov
mov
icebp
add
sub
lcall
mov
xchg
mov
jne
imul
adc
xchg
push
aas
loop
fdivrs
loope
fwait
jns
pop
dec
aam
mov
xor
xchg
push
dec
sbb
gs
jb
and
lahf
mov
js
mov
repnz
dec
out
mov
fs
adc
sub
xor
and
dec
xor
mov
xor
xor
xor
jmp
mov
push
and
and
mov
mov
rcll
sarl
mov
sarb
aas
stos
xchg
call
mov
sub
clc
mov
rorb
clc
push
mov
mov
jno
cs
push
insb
sbb
ret
stc
ja
jecxz
lcall
xchg
loopne
adc
add
pop
arpl
jbe
dec
negb
pop
or
aad
testb
sahf
inc
inc
in
cmc
add
inc
hlt
sbb
in
mov
push
jge
in
mov
loopne
lret
enter
ja
repz
and
sbb
add
pusha
stos
js
lcall
cmp
adc
iret
imul
fdivs
lretw
mov
sub
subb
adc
push
mov
repz
cmp
dec
mov
sahf
jb
lcall
push
sub
shlb
sbb
sbb
dec
lcall
mov
pusha
mov
mov
or
cmpl
pop
and
sub
push
jne
ljmp
push
pop
dec
jle
or
sub
push
pop
rcll
mov
std
imul
imul
cltd
sahf
mov
xchg
xor
std
js
sub
sub
jg
push
mov
xor
sahf
lds
mov
add
dec
into
xor
jnp
mov
in
insb
test
inc
loopne
ljmp
sub
xchg
adc
pushf
adc
fs
add
fnstcw
iret
jmp
mov
sub
lock
aam
and
fnstenv
hlt
sbbb
aam
movsb
into
int
push
push
dec
rcrl
mov
dec
adc
cli
add
dec
mov
dec
scas
sub
filds
sub
cs
daa
and
jo
ror
scas
jp
mov
mov
inc
sbb
out
dec
cld
mov
aam
push
mov
cmp
aad
jbe
outsl
mov
testb
dec
pop
push
lret
lahf
pop
or
sbb
sahf
test
inc
push
and
imul
je
inc
stos
lcall
add
sub
jle
dec
dec
out
xchg
sbb
ds
jne
aas
mov
outsl
ds
lods
or
ds
cwtl
jae
cmp
cmp
in
mov
add
rorb
scas
or
sub
mov
add
xchg
push
clc
jmp
ret
ljmp
gs
pop
pop
int3
pusha
popa
xchg
aas
dec
insb
insb
push
pop
inc
push
lahf
inc
mov
sbb
scas
lods
push
les
fcoms
cs
or
add
mov
cmp
ljmp
adc
dec
call
lret
cmp
nop
add
std
and
add
iret
sbb
push
lods
adc
into
lcall
jmp
sbb
mov
loop
insb
xor
negl
mov
adc
popa
jg
sahf
and
ret
hlt
cld
pop
mov
mov
pop
xor
pop
cli
xor
cmpsb
adc
aad
push
ss
jmp
or
loope
jb
imul
shlb
mov
xchg
jne
stc
mov
pushf
stos
pop
insb
std
ficoms
xchg
pusha
pop
jle
lcall
popf
adc
cli
insb
jae
movsl
aaa
out
out
jmp
xchg
sti
lahf
adc
decl
adc
lock
xchg
stc
stc
sub
xor
or
jp
sub
into
lods
xor
mov
les
mov
dec
lods
gs
and
popa
loop
and
outsl
sub
enter
and
sub
pop
dec
arpl
add
inc
add
mov
sub
into
insb
mov
hlt
push
dec
or
push
addr16
pop
outsl
stos
mov
cltd
movd
lds
cmp
mov
mov
subl
mov
jns
fildll
jge
movsl
dec
outsb
stos
pusha
pop
cmpsl
adc
outsl
or
xchg
imul
imul
repnz
popa
stos
pusha
pop
jg
xor
icebp
dec
sub
inc
scas
jl
insb
test
sbb
enter
inc
ret
cmpsl
xor
and
arpl
sub
ss
adcl
adc
dec
insl
sub
mov
idiv
mov
fldcw
sub
scas
adc
mov
or
jecxz
fwait
stc
in
fdivl
ret
in
jle
dec
sbb
jo
enter
dec
xchg
loope
and
fwait
xchg
lret
mov
mov
pusha
mov
jge
jno
lahf
shrl
idivl
cltd
cs
xor
fcmovnu
repz
insb
sbb
or
subl
stos
int
push
xor
or
out
mov
mov
pop
mov
fmull
out
sub
shll
rclb
int
ret
aad
es
and
rclb
and
fildl
add
cli
xor
mov
mov
xchg
stc
jns
xchg
dec
lock
lea
out
adc
aaa
jmp
xlat
in
add
push
test
repnz
insb
into
mov
out
cmp
mov
pop
push
sub
and
sub
and
mov
pop
push
gs
or
mov
push
jne
jl
jl
enter
fmuls
aad
pop
test
mov
mov
adc
mov
fisttpl
imul
fidivl
sbb
cltd
loopne
clc
xchg
push
or
xchg
cmp
or
add
ljmp
shrl
add
fsubrs
pop
movsb
inc
cs
cmp
dec
incb
fs
fstpl
and
test
jbe
mov
push
push
push
pop
mov
inc
daa
mov
hlt
adc
out
ljmp
data16
scas
sar
xchg
fst
call
scas
jb
int
in
test
mov
rorb
dec
dec
push
fs
call
ret
stc
cmp
or
cmp
cmp
pop
lods
xchg
sti
and
pushf
out
adc
scas
adc
mov
in
fisttps
xchg
ret
mov
adcb
sahf
testl
jge
sbb
loope
js
mov
add
xor
decb
mov
jbe
adc
cmp
mov
jo
push
jmp
out
cmp
pop
fcomip
xchg
in
jge
mov
cmpsb
test
sbb
pop
ss
lcall
ss
addr16
insb
cld
fs
mov
cmp
xchg
dec
cmp
out
mov
xor
mov
in
dec
adc
aas
jns
js
adc
fnstenv
mov
mov
xchg
mov
adc
add
dec
push
testb
inc
push
movsb
fcomps
stos
jg
fstl
pop
pop
fsubrs
dec
aaa
dec
jnp
insl
jo
cld
repz
rol
mov
fadds
xchg
pop
mov
sarl
dec
into
andb
and
aad
ljmp
push
jg
pop
adc
mov
clc
or
dec
xchg
mul
xor
xor
rorb
cmc
pop
lds
jl
sbb
lcall
push
jl
js
add
xchg
xchg
cmpb
jmp
fwait
out
xor
xchg
fwait
xchg
fsubrs
aaa
imul
je
ja
xor
or
jle
push
je
add
jae
jmp
data16
xchg
lahf
xor
dec
addr16
lahf
and
stos
roll
lret
imul
adc
mov
je,pn
xchg
sbb
xor
je
cmpsl
sub
xor
push
loopne
js
pop
cmpb
outsl
jecxz
xor
fwait
mov
js
ja
dec
mov
sub
ds
mov
mov
addr16
or
mov
xchg
xor
cmpsl
xchg
cmc
inc
aas
mov
lock
mov
fildl
daa
cld
dec
dec
dec
mov
xchg
fidivl
and
icebp
out
pop
sbb
mov
and
fiadds
out
sti
repnz
push
push
sbb
ja
jno
xchg
icebp
test
fwait
jbe
mov
test
arpl
jo
sub
dec
xchg
xchg
dec
js
jbe
insl
cmp
enter
xchg
fwait
lods
xchg
icebp
pop
xchg
pusha
mov
jo
sbb
xchg
stos
fdivs
mov
loopne
sub
mov
cmp
inc
adc
mov
sub
ja
pusha
pushf
inc
push
test
mov
insl
add
cmp
int
xor
inc
jne
xor
sbb
sbb
imul
repz
pop
xlat
icebp
out
add
sbb
pop
loope
in
xchg
lds
push
sbb
sbb
test
jo
xchg
push
push
std
sbb
jmp
aam
xchg
cmpsl
pusha
movb
and
add
dec
mov
outsl
mov
sub
das
pop
std
add
xor
cmpsl
add
in
mov
sub
pop
push
das
int3
int
mov
mov
mov
xchg
repnz
cmp
mov
rolb
in
fwait
pop
cmp
cltd
hlt
clc
xchg
pop
stos
leave
push
sub
dec
xor
pop
ss
xchg
mov
mov
inc
pop
sti
inc
push
pop
outsb
insl
jmp
ret
lret
pop
ret
ja
jb
dec
mov
popf
dec
push
jecxz
lcall
mov
stos
ficoms
dec
outsb
loopne
cmp
fs
fmuls
daa
cwtl
insb
sbbl
mov
mov
xchg
fwait
out
adc
sub
xor
cwtl
hlt
testl
mov
rorb
jbe
mov
or
lret
cmp
and
out
mov
cmp
in
dec
mov
stos
lock
dec
and
sahf
mov
rcl
hlt
sbb
pushf
repz
push
cs
sub
daa
stc
xchg
arpl
mov
filds
mov
xor
fs
xchg
jp
rcr
mov
sarb
fcomps
push
mov
orl
xchg
or
jl
xor
push
fcoms
xor
out
add
rsqrtps
testl
push
flds
stc
jbe
push
xor
cmp
cld
test
movsb
push
mov
sub
xor
ffree
ds
sbb
icebp
cmp
sbb
or
repz
das
push
gs
fstpt
out
sub
test
sti
fsubl
jae
cmp
mov
push
xchg
and
aas
xor
xchg
push
cmp
pop
insb
adc
mov
mov
test
dec
sahf
dec
lret
add
ds
xchg
jae
out
and
outsb
xchg
jge
out
cmp
ss
sbb
int
dec
cmp
gs
and
mov
aaa
insb
push
mov
sbb
sbb
sub
cli
add
nop
mov
mov
push
scas
dec
aaa
movsl
xor
fwait
lahf
push
sbb
loopne
lds
sbb
mov
mov
hlt
lahf
mov
dec
pop
adc
inc
dec
lcall
loopne
dec
repz
add
fucomp
jl
xor
mov
mov
push
push
pushl
xchg
jbe
pop
dec
lds
mov
mov
add
dec
sahf
push
xor
mov
out
push
or
sti
fwait
sbb
testl
sub
out
cmpsb
rcl
rorb
adc
arpl
adc
mov
repnz
sahf
pushf
and
push
and
adc
push
and
mov
sbb
push
or
jle
icebp
fmul
sub
xor
lods
push
add
icebp
std
pusha
popf
mov
fmulp
dec
jne
inc
orps
inc
shr
and
xchg
jecxz
mov
rclb
xor
xor
int
inc
in
arpl
fdivl
test
xlat
or
or
fmul
mov
cltd
inc
movsb
push
jno
sbb
sub
push
adc
and
sub
jle
sbb
jg
add
test
test
xor
repz
jo
inc
scas
mov
test
mov
sti
adc
out
xor
push
mov
mov
dec
add
add
in
jae
xchg
out
mov
lret
lock
stos
mov
push
mov
in
mov
jge
xor
sub
xchg
xchg
dec
push
mov
loopne
out
pop
and
adc
in
inc
repnz
mov
jecxz
mov
jns
pusha
jl
xor
test
movsl
out
out
daa
sub
mov
mov
cli
in
jmp
pop
dec
ret
scas
or
movb
cs
mov
fwait
out
mov
push
test
sti
insb
test
sub
arpl
int
and
pop
test
lock
sub
cld
pop
in
xor
push
mov
mov
jo
out
add
dec
arpl
lahf
dec
pop
sub
aaa
aam
arpl
movsl
mov
dec
popa
scas
in
pop
push
and
jae
push
fdivrl
dec
scas
jae
stc
sbb
mov
pop
adc
mov
jmp
std
popf
loop
mov
xor
dec
cltd
add
push
nop
jl
and
xchg
out
cld
mov
and
xchg
or
es
mov
ss
pop
jmp
mov
repz
sahf
cmp
sbb
push
push
ljmp
imul
jno
adc
mov
out
scas
push
adc
push
mov
cli
stos
loope
xchg
push
aad
jns
inc
lahf
bound
out
add
popa
hlt
inc
test
mov
loopne
mov
push
hlt
or
or
mov
pop
ret
bound
cmp
mov
add
notl
push
add
adc
test
or
dec
jne
add
dec
mov
xchg
std
adc
jp
inc
mov
push
fiadds
add
xor
rcrl
mov
leave
dec
aad
or
sub
xlat
das
lods
add
xchg
je
cmpsb
mov
rcll
loop
dec
nop
shl
cs
mov
add
jge
outsb
mov
sti
xor
mov
inc
jnp
mov
rcrl
mov
jb
push
aaa
ljmp
jae
xor
xchg
fildll
pop
insb
xchg
jbe
sbb
and
add
and
adc
mulb
jae,pt
leave
testb
nop
aaa
dec
xchg
shlb
rclb
outsb
push
out
mov
out
jp
nop
push
and
cli
inc
movl
or
test
insl
and
inc
stos
dec
stc
mov
fisttps
int
and
xor
sub
dec
daa
dec
jnp
loope
fists
aas
mov
enter
lcall
sub
pop
sahf
sub
jp
cs
subb
pop
pop
jb
nop
jo
ds
pop
cwtl
push
test
sbb
fdivrp
cmp
int
lcall
pop
ss
and
dec
je
xor
push
sbb
mov
icebp
les
jnp
pusha
sbb
cmc
pushf
lret
and
pop
and
stos
das
and
mov
fistpl
jg
xchg
ljmp
or
pushf
inc
mov
sbb
jne
mov
or
jp
cwtl
sbb
add
jg
pop
orl
push
cld
inc
jge
xchg
push
rol
repnz
stos
jl
jp
push
ret
mov
push
sbb
push
and
nop
push
lcall
jnp
roll
inc
pop
pop
lret
sub
outsb
lea
test
scas
pop
mov
cltd
outsb
push
mov
inc
je
iret
nop
mov
jg
lcall
lea
inc
inc
aas
gs
iret
jl
push
pop
adcb
out
xchg
ja
imul
adc
xchg
add
jecxz
cmpsb
test
fs
aaa
in
and
xchg
lahf
jp
insb
mov
cltd
ljmp
lea
sbb
decl
cld
scas
sub
icebp
lds
aaa
movsl
add
pop
adc
sti
cmp
addb
inc
pop
push
pop
mov
push
jmp
pop
push
fisttpll
jmp
pusha
and
or
in
leave
lcall
enter
xlat
lcall
pusha
leave
and
sbb
rcll
push
xchg
adc
cmp
pop
pop
sbb
xchg
pop
mov
movsb
bound
lret
push
ljmp
pop
add
rorl
lret
dec
push
sarl
mov
xor
or
and
arpl
mov
jno
int
inc
enter
stos
arpl
mov
sub
add
les
pushf
jle
pop
pushl
or
jmp
lds
imul
xchg
sbb
sub
fdivrl
clc
into
lret
add
dec
lret
stos
aaa
pop
loopne
movsl
pop
in
inc
jmp
dec
xchg
jnp
inc
jmp
cld
ficomps
movsl
lods
sub
inc
mov
iret
icebp
in
lahf
call
outsl
icebp
mov
inc
mov
pop
jae
dec
push
imul
xchg
repnz
jle
aad
mov
ljmp
out
add
out
nop
cld
mov
movsb
mov
sti
sub
call
setb
repnz
sbb
cmp
or
sub
push
mov
jbe
sub
xchg
testl
add
add
mov
jge
push
dec
adc
jp
sbb
mov
adc
cmp
xorl
pushf
xchg
hlt
or
addb
orb
xchg
outsl
stc
push
icebp
nop
cld
into
sub
sub
pop
dec
sub
mov
mov
and
push
repz
pop
mov
push
cmc
ds
mov
pop
hlt
sbbl
sbb
xchg
and
add
repnz
mov
shll
lcall
cmp
std
mov
repnz
jmp
or
jae
sarb
imul
loop
xlat
pop
fcomps
dec
repz
adc
cmc
movsb
cmp
cmp
jl
adc
movsb
push
inc
cmp
pop
jge
aam
stos
xchg
push
mov
push
xor
test
inc
lahf
outsb
sbb
add
roll
or
movsb
push
and
out
stc
fnstsw
add
jge
les
aam
inc
jmp
out
adc
in
test
sbb
xchg
mov
fldenv
popa
mov
imul
push
lds
and
and
xchg
push
mov
push
mov
mov
push
insb
xchg
mov
icebp
mov
mov
mov
mov
mov
ret
mov
add
out
xor
in
jno
jnp
stos
out
mov
lods
jp
inc
mov
out
add
loop
inc
cli
pop
inc
int
cmp
pop
jnp
fcoms
mov
push
pop
push
add
mov
adc
fnstcw
adc
stos
repz
arpl
cmp
push
adc
or
int3
add
into
add
push
adc
push
pop
cmp
test
sbbb
addr16
xchg
je
push
inc
xor
pop
hlt
lret
dec
sub
test
das
lods
lret
xchg
inc
cwtl
fdiv
lret
dec
xchg
mov
mov
int
push
fs
dec
flds
rcrl
daa
xor
dec
imul
mov
shll
lret
sub
mov
xchg
sbb
ja
out
lea
fsubrs
dec
or
out
enter
sbb
pop
dec
cmp
push
inc
lods
inc
xchg
sbb
lret
out
xor
add
and
enter
push
jb
inc
push
jo
adc
loop
inc
cmpsb
dec
mov
xchg
or
push
pusha
push
xchg
sti
mov
out
cmp
test
jecxz
mov
pop
push
push
adc
ret
sbb
pusha
test
push
adc
lcall
loopne
outsl
push
fwait
sub
pop
pop
movsb
cmp
rclb
sbb
dec
mov
test
cmp
cli
fidivs
cmp
stos
loope
aas
mov
fiadds
sahf
lret
mov
pusha
pop
rcrb
cmp
cmp
adc
aam
jl
or
in
cwtd
inc
pop
fdivrs
mov
and
jo
cmpsl
clc
lcall
cmpsb
les
ljmp
mov
icebp
leave
fdivrs
test
popf
testb
push
loop
js
ret
cmc
stos
divl
xchg
push
outsl
cmp
icebp
or
test
out
jl
stos
add
sbb
mov
and
pop
and
jo
mov
insl
stc
shll
pop
cmp
aam
pop
sbb
decl
add
adc
jne
or
scas
fisubrs
mov
jg
mov
mov
xchg
fcomi
pop
and
mov
adc
repz
adc
add
adc
popf
leave
sub
mov
wbinvd
mov
adc
fwait
or
outsl
test
jp
push
xchg
mov
push
inc
cmpsl
adc
pop
outsb
int
cmpl
das
call
or
xor
repz
xchg
fistps
iret
mov
scas
les
nop
movsb
out
fwait
shlb
pop
xor
test
lods
into
addl
adc
mov
sti
outsl
jg
outsb
sar
xchg
cmp
xchg
cld
jo
pop
sub
cmc
int3
mov
jl
fisubrs
xchg
fisttpll
inc
stc
mov
rol
inc
lret
add
aad
inc
shll
jmp
loope
jnp
xchg
pop
adc
jno
lods
jl
in
and
inc
rcrl
sbb
push
xor
inc
cmp
fwait
adc
pop
repnz
in
mov
or
and
movsb
out
je
ljmp
sbb
adc
push
xlat
mov
es
fdivl
jecxz
int
mov
inc
sub
sub
rorb
test
shrl
icebp
add
cs
cli
jle
stos
ljmp
jno
fcoms
int
jg
lahf
jb
push
pop
cwtl
in
add
hlt
decl
sub
js
cltd
fbstp
fucomp
xor
jno
pop
cmp
mov
insl
add
enter
and
xchg
repz
sub
pop
cmp
dec
inc
test
lahf
pop
cmp
cs
add
cmp
or
adc
jmp
clc
jns
add
ljmp
push
add
lahf
mov
call
lock
int3
and
pop
sarb
xlat
cmp
into
pop
mov
inc
sbb
mov
lock
xor
lock
sub
jmp
das
inc
gs
pop
sbb
and
lret
xchg
inc
daa
test
lods
test
jno
dec
xor
mov
add
mov
sbb
dec
mov
sbb
jno
push
dec
test
pop
or
fldl2t
sub
cld
popf
imul
xchg
in
mov
sbb
movsb
and
sbb
movsl
aaa
and
xor
jge
pop
call
pop
jl
inc
fstps
adc
bound
loop
adc
dec
jae
daa
pop
jge
mov
iret
add
xor
fsts
test
fcmovnu
inc
imul
adc
data16
aaa
cmp
lret
sbbb
in
cmpl
mov
sub
mov
dec
je
push
adc
sbb
or
in
mov
adc
imul
mov
add
jle
dec
inc
sbb
jmp
sub
mov
add
in
and
or
jecxz
les
or
shlb
insl
lea
stc
mov
aas
jecxz
mov
movsl
popa
dec
fcoml
test
xchg
enter
stc
or
ffreep
push
inc
lods
adc
test
lods
push
add
sti
lea
cmovnp
aam
xor
jo
jg
sub
insl
xlat
aam
inc
mov
in
into
dec
je
sbb
rcrb
jle
cmp
pushf
dec
pop
es
jg
jp
add
call
fisubrs
xor
test
testb
stos
lahf
add
aas
xchg
mov
pushf
jns
mov
mov
andb
cs
ret
rcl
push
sub
clc
sub
pop
aam
pop
aam
aad
mull
pop
sbb
test
aam
arpl
insl
fs
pop
lret
and
test
cli
shrb
or
cmpsb
out
jbe
insb
dec
popa
pop
xor
xor
push
loope
out
fisubs
push
in
mov
movl
inc
jg
into
xor
enter
out
add
lock
mov
adc
out
jmp
mov
add
mov
cmp
and
lret
sbb
ret
shll
fnsave
jns
mov
push
cmp
xor
jae
mov
jmp
inc
push
or
aaa
xchg
iret
sarb
inc
sbb
in
nop
xchg
icebp
mov
jnp
xchg
popf
pop
inc
adc
das
xchg
sbb
loope
addr16
sti
lret
repnz
push
fdiv
inc
inc
xchg
bound
fucom
push
loope
dec
enter
sbb
jle
test
and
adc
inc
jmp
cmp
adc
stos
test
mov
push
ljmp
sbb
push
jecxz
in
sub
in
test
ljmp
loope
xor
xchg
mov
imul
pop
lods
imul
jl
mov
fwait
cmc
cs
cmc
sbb
or
adcb
in
leave
das
das
jge
andb
les
shll
xchg
nop
lret
mov
std
int3
inc
nop
cmpsl
and
inc
xor
jnp
mov
fldcw
aaa
add
and
dec
leave
add
ret
divb
cmp
jp
inc
ret
cmp
rcrl
fbld
pop
cmc
or
dec
jo
mov
dec
clc
aam
subb
test
outsl
imul
sbb
sub
push
ret
loop
xchg
lods
mov
push
push
scas
in
mov
mov
insl
pop
cld
sahf
xchg
xchg
rcl
nop
jno
add
cmp
cmp
ret
sub
xchg
xor
jl
aad
enter
outsb
lret
jmp
jmp
loope
nop
fidivrl
lods
lds
or
push
mov
cmp
repnz
cwtl
xchg
aam
dec
imul
inc
pop
ja
push
addr16
test
lods
cmc
add
push
mov
inc
imul
pop
orl
mov
jae
addl
mov
or
mov
mov
sub
jo
out
lret
xchg
adc
pop
sbb
push
sbb
sub
mov
test
sbb
decl
mov
imul
push
icebp
aam
mov
das
or
into
fs
mov
jne
std
aad
andb
xchg
xor
mov
stc
dec
mov
xchg
dec
in
arpl
xchg
jmp
ret
aas
movsl
push
fsts
sbb
add
xchg
mov
int3
lar
jno
jmp
pop
cmc
imul
icebp
mov
push
fldcw
adc
mov
add
and
imul
adcb
xchg
cli
sbb
les
add
ja
out
jnp
dec
add
iret
lds
js
and
lahf
mov
aad
lea
push
add
pop
xchg
push
imul
loope
scas
jmp
mov
dec
cmp
xchg
inc
jb
inc
pop
ds
dec
icebp
push
mov
xchg
lea
add
outsb
es
mov
stc
mov
repz
cli
xlat
cli
iret
cmpsb
mov
arpl
js
push
popf
in
cmp
xor
scas
mov
sbb
je
cs
mov
lcall
jnp
repz
andl
jbe
movsl
xchg
jge
or
add
dec
fidivl
cltd
int3
adc
pop
cltd
pop
jmp
pop
insb
xor
cwtl
orl
mov
push
jo
sbb
insb
pop
adcb
idiv
mov
lea
scas
push
or
cmpl
movsl
lods
xchg
dec
arpl
sbb
inc
mov
popa
or
mov
sub
cmp
inc
mov
add
adc
lcall
fwait
das
mov
or
dec
xor
cmp
fsubr
lcall
ret
adc
fistl
addr16
int3
lods
push
push
frstor
push
pop
test
inc
jp
out
popf
outsb
sub
outsl
les
stos
xchg
and
daa
add
pop
jns
push
cmp
mov
pop
jmp
std
iret
push
dec
push
mov
jmp
jae
inc
push
xchg
xor
cmp
xchg
shll
lea
out
nop
sar
repz
jle
out
dec
xchg
stos
inc
mov
or
insl
jp
mov
or
ret
push
ret
inc
rcl
pusha
xorb
sarl
bound
in
ja
xchg
dec
xchg
xchg
daa
sub
push
mov
push
xchg
jb
fmull
jle
jmp
addr16
std
imul
or
xlat
mov
stos
dec
sbb
setbe
cwtl
cmp
test
repnz
pop
and
pop
add
xchg
sbb
pop
data16
lock
sub
loopne
je
out
and
rcr
push
shr
fsqrt
mov
gs
and
pop
fisttps
pushl
cmp
sub
lahf
aaa
mov
push
jbe
mov
shll
push
test
lods
test
push
dec
out
adc
cmp
int3
lret
jns
push
jno
lahf
jbe
popa
test
mov
fwait
and
dec
xchg
insb
sub
lods
sahf
test
mov
in
clc
add
pop
int
pop
sbb
int3
mov
addr16
mov
cld
movb
mov
inc
pusha
inc
cld
lods
or
js
mov
add
movsb
sbb
das
cs
cli
mov
or
test
addr16
popa
jecxz
xorl
or
loopne
mov
pop
aas
or
jnp
rolb
xchg
setnp
sbb
dec
pop
enter
daa
idivl
iret
xchg
lret
push
mov
dec
test
mov
xchg
mov
push
mov
into
pop
aas
mov
adc
lret
xchg
or
divb
hlt
test
sbb
mov
lods
cwtl
jge
int3
xor
jp
xchg
push
mov
mov
xchg
xor
scas
push
mov
xchg
fadds
push
and
arpl
add
sbb
cld
inc
xchg
pusha
xor
jnp
and
push
pop
lret
push
or
out
js
loope
out
aaa
dec
movsl
scas
adc
jp
mov
call
lods
mov
out
add
or
mov
push
mov
mov
jle
test
daa
je
repnz
xchg
ss
mov
hlt
mov
loopne
push
xchg
or
cwtl
or
mov
je
pop
mov
test
test
cmc
jbe
daa
rcr
rcrb
in
inc
test
cmpsl
inc
enter
adc
sub
mov
test
shl
test
jns
mov
jle
add
mov
stos
notb
pop
pushl
mov
movsb
dec
push
jns
push
dec
mov
cmp
imul
mov
mov
adc
in
xorb
adc
fs
popf
stc
loopne
mov
mov
in
rcrb
outsl
add
rorl
push
mov
or
jge
addb
dec
cmp
loop
stos
jns
outsb
jbe
cld
mov
out
std
lods
add
mov
jae
and
add
rcrb
out
inc
xchg
pop
inc
fmuls
mov
cmp
pop
or
mov
mov
pusha
jp
and
aam
fldcw
mov
adc
cld
seta
jg
repnz
test
popf
movsl
pop
loope
push
xor
addr16
or
jne
pushf
int
pushf
mov
and
add
dec
jle
jae
jmp
add
ret
popf
or
stos
loope
dec
outsl
or
push
or
loop
mov
daa
test
pop
pop
rsqrtps
cmc
xchg
aad
popf
mov
dec
dec
xchg
inc
mov
aaa
divb
je
pop
sahf
movsb
sub
inc
cmp
cmp
pop
leave
cmpsb
xchg
dec
fidivrs
imul
mov
jbe
aad
imul
add
xor
pusha
test
mov
shlb
jbe
inc
jae
mov
cmp
testb
and
mov
and
ret
sarb
in
aad
fdivrp
iret
add
jbe
mov
push
sar
xlat
testl
stc
aad
pop
jl
xchg
ret
cltd
test
fdecstp
inc
inc
xchg
or
xchg
push
mov
je
ret
inc
dec
ja
xor
pop
jg
push
mov
popf
and
jecxz
addr16
arpl
or
add
cs
inc
xor
inc
push
jns
mov
add
xchg
imul
pop
mov
cmp
rcrl
test
popa
jecxz
sub
movsb
xchg
stos
dec
pusha
mov
rclb
mov
lods
cmc
xchg
adcl
movsb
mov
fs
leave
jge
dec
outsb
add
ds
lret
jae
xchg
pop
mov
inc
shl
es
movsl
imul
dec
cmc
pop
jle
sbb
lods
sub
and
or
mov
je
push
jge
fs
sbb
loope
jmp
jae
mov
scas
xor
add
pop
outsl
pop
xchg
pop
sub
xor
pop
cmpsb
pop
leave
add
cwtl
roll
add
hlt
mov
test
xchg
xor
mov
arpl
push
sub
iret
sub
mov
subb
xlat
and
lret
mov
in
fisttpll
and
shl
jns
scas
xor
mov
add
call
cltd
push
fsts
lret
fxtract
data16
jnp
pop
sub
or
push
cmp
out
call
sahf
jmp
lea
jno
mov
mov
jecxz
mov
xor
cmc
sahf
lret
insb
xchg
lods
inc
loope
int3
xor
movsl
out
sti
jl
sub
sub
cltd
or
out
lods
jle
or
and
push
nop
inc
divl
jmp
negb
test
fs
push
out
and
dec
out
sarb
xor
hlt
xor
aas
adc
jle
loop
add
les
xlat
lea
lahf
xchg
cwtl
push
xor
inc
pop
mov
fwait
mov
mov
repz
mov
jg
adc
adcb
sub
stos
test
ss
insb
mov
dec
jl
cli
mov
pop
in
jmp
fidivl
rcrl
mov
push
insb
sbb
iret
mov
lret
les
cmp
fldenv
icebp
movsl
jbe
lahf
fnclex
test
sub
ret
arpl
xchg
jecxz
inc
mov
gs
cmc
ja
sbb
jns
xor
outsl
or
sahf
inc
mov
add
not
cmc
mov
xlat
out
cmp
add
popf
out
in
mov
jbe
data16
cli
ds
clc
push
dec
in
imull
sbb
call
and
mov
notl
mov
sub
xchg
cwtl
xchg
mov
shl
lods
shlb
sub
add
movsb
dec
jg
ds
test
lods
pop
or
dec
pop
push
js
into
bound
and
mov
jmp
or
pop
dec
cs
leave
adc
push
sti
xchg
mov
pop
or
mov
adc
out
sbb
repz
jo
mov
jnp
jo
in
das
insb
sbb
mov
sti
mov
cvtps2pd
jns
pop
test
or
push
jne
push
adc
movl
inc
xchg
data16
hlt
mov
inc
sub
adc
in
lahf
ja
lcall
aam
ret
daa
cs
rcll
in
xchg
jae
fsubl
add
xor
xchg
cli
mov
sbb
push
xchg
scas
jnp
std
mov
jo
sbb
lds
cwtl
loop
xchg
pop
rorb
cs
pusha
cmp
mov
inc
jecxz
lds
test
push
jns
push
add
dec
add
mov
xchg
sub
sub
js
lods
outsb
add
push
mov
add
sbb
fcmovnbe
inc
leave
sub
std
psubw
cwtl
dec
outsl
addr16
xchg
xor
shlb
inc
xchg
mov
iret
push
stc
mov
sbb
xchg
push
and
cmp
jnp
clc
push
jge
push
in
lret
xchg
jns
jmp
and
in
les
imul
dec
mov
iret
inc
push
jns
test
ss
jle,pt
push
jge
and
out
int3
fcmove
xchg
jne
adcl
lret
add
add
test
xchg
inc
push
mov
add
or
lret
jbe
jnp
mov
into
fnsave
data16
outsb
sti
mov
mov
rcrl
test
mov
mov
std
subl
inc
dec
in
ljmp
mov
adc
clc
pop
sub
out
icebp
push
outsl
xchg
sbb
pop
adc
jmp
mov
movsb
cmpsb
int
nop
push
xor
andl
sub
push
mov
push
and
shrl
mov
enter
mov
pop
fldl
jmp
add
mov
push
ret
cmc
cmc
jl
rcll
dec
into
add
dec
sbb
dec
inc
test
dec
movsb
adc
mov
iret
jle
daa
sbbb
or
jno
push
jecxz
js
mov
cwtl
fistpl
fs
dec
repz
nop/reserved
xchg
mov
ret
cltd
lea
add
roll
insl
dec
cmp
lea
mov
xchg
daa
push
lcall
enter
jge
cmp
mov
dec
mov
push
orb
dec
loop
pop
cltd
orb
jl
imul
cs
cmp
inc
or
pop
mov
xor
or
dec
cmp
jae
movsl
dec
iret
lods
mov
jo
jl
sbb
sbb
nop
push
sbb
xor
sub
pop
add
xor
movsb
in
jl
sub
sub
test
rcr
and
test
popa
imul
push
cmpsb
cltd
pop
or
pop
push
out
inc
push
dec
mov
gs
pop
push
es
pop
leave
push
ret
sbb
sub
xor
cmp
mov
sub
dec
jg
inc
leave
popa
fs
cltd
jg,pt
add
pop
mov
sti
pusha
rcll
in
mov
fwait
xchg
mov
dec
mov
jg
jp,pn
je
mov
mov
ja
ss
add
jb
sbb
es
lock
idivb
xor
mov
enter
push
xor
icebp
cmp
stc
imul
ja
iret
xchg
or
and
jle
push
loope
pop
repz
mov
xchg
cltd
add
ret
jmp
pop
stos
out
jl
dec
ljmp
test
pop
cmp
fstpl
xorl
call
sub
mov
cmpsb
sbb
int3
sti
inc
or
mov
dec
imul
arpl
jecxz
xorps
adc
pushf
xchg
adc
addr16
sub
mov
movb
xchg
pop
lcall
mov
stos
mov
daa
stos
adc
mov
std
loopne
popf
pop
or
xor
addb
inc
bound
mov
aad
movsb
jmp
outsb
stos
inc
insl
inc
dec
cld
call
out
movsl
aad
or
mov
adc
dec
loopne
mov
test
xor
incb
and
mov
cmp
lret
and
or
lods
stc
add
add
mov
shlb
pop
cmp
jl
repnz
mov
sbb
inc
pop
dec
xchg
mov
inc
aaa
fwait
lret
imul
push
xchg
jne
fistps
lret
notb
test
sbb
push
inc
mov
sub
mov
push
mov
imul
out
cmp
decl
imul
sub
inc
dec
sti
fcompl
mov
mov
mov
mov
pop
out
sahf
add
jge
movsb
jecxz
gs
mov
leave
sub
out
xor
mov
lods
sub
jne
lds
daa
out
int
jg
xchg
sahf
adc
cltd
cld
jno
repz
movsb
push
mov
fildll
and
cmc
adc
leave
or
pop
mov
rclb
fists
lret
or
and
enter
cmp
xchg
mov
sbb
pop
iret
xor
aas
ja
pop
sbb
cmp
sbb
insb
or
or
sub
fildl
xchg
or
out
mov
jns
sub
mov
jno
fcomps
mov
adc
xlat
sahf
or
loop
dec
mov
xor
push
or
insb
pop
std
adc
sbb
scas
xor
cli
jecxz
sbb
repnz
cmp
jge
sub
mov
mov
out
or
scas
add
pusha
mov
fidivs
sbbl
ja
mov
inc
push
fldt
pop
push
into
daa
or
insb
dec
jge
fsts
orb
in
popf
insl
adc
imul
mov
jle
test
pop
jns
ja
popf
clc
pop
push
push
mov
push
mov
cli
test
inc
mov
adc
push
mov
mov
fldenv
fcompl
cld
jae
inc
scas
movsl
int
adc
sbb
clc
ret
pop
mov
insl
fbstp
cs
dec
mov
sbb
add
push
or
add
cmp
fwait
jecxz
movsb
adc
arpl
push
xchg
xor
mov
test
adc
imul
dec
repnz
push
aas
push
enter
shlb
sub
sub
in
cmpsb
aas
in
outsl
mov
imul
add
bound
out
fildll
out
ljmp
out
push
lret
out
push
xor
dec
cmp
shrb
sub
and
xchg
add
add
insl
rorl
in
cmp
jbe
pop
cmp
ret
jg
jo
push
insb
loop
jecxz
jmp
test
xchg
int3
ja
and
arpl
out
sbb
leave
cltd
scas
xchg
std
add
lods
pusha
ljmp
cmpsl
inc
adc
xor
xchg
xor
mov
mov
cmp
dec
and
mov
lods
and
push
ljmp
and
jne
lock
dec
jmp
jl
shl
test
rcrl
add
add
inc
adc
inc
mov
inc
sarb
sub
inc
mov
or
dec
lock
and
jg
sti
sbb
cmpsl
dec
test
fdivr
je
and
add
fsubr
lea
adc
fdivs
mov
fst
cltd
stos
insb
cmpsl
or
jecxz
test
clc
decb
jae
mov
mov
cs
jno
popl
in
lea
mov
mov
dec
and
or
dec
push
addl
cmpsl
and
dec
sahf
push
cmpsb
nop
hlt
pushf
mov
xchg
daa
mov
mov
mov
and
aam
sbb
and
test
pop
inc
mov
xlat
stc
add
sbb
in
sarb
pop
adc
sbb
sti
out
mov
subb
fwait
call
push
lahf
xchg
ljmp
clc
xor
inc
gs
insb
xor
push
cmp
adc
mov
pop
icebp
shufps
sbb
fcompl
stc
nop
les
jb
fadd
mov
test
xchg
jl
or
repnz
loopne
sbb
dec
jae
popa
xchg
adc
adc
cld
idiv
pop
dec
cmpsb
test
ss
scas
imulb
ljmp
jmp
xchg
les
cli
cmp
mov
xor
mov
stos
push
push
pop
imul
push
push
push
insb
mov
dec
idivb
aaa
push
jnp
push
out
aam
shll
idiv
fisubrs
adc
mov
sub
dec
outsl
add
arpl
mov
push
mov
inc
jno
test
mov
or
lock
sbb
mov
mov
dec
or
test
sbb
popl
loop
mov
inc
xchg
xchg
jg
sub
add
add
fdivl
loope
mov
test
insb
add
in
sar
lret
pop
cmp
stos
inc
mov
push
insl
sub
mov
jns
and
insb
pop
popl
push
lods
mov
xchg
xchg
in
in
sti
ja
sarb
sbb
lret
bound
fstpt
mov
cmp
subb
mov
cmp
mov
pop
pop
jl
push
sub
dec
insb
cmc
je
adc
dec
cmp
sti
inc
push
dec
jno
repnz
repz
add
xor
push
xchg
aas
cmp
or
xor
mov
nop
fnstenv
mov
inc
xchg
jo
bound
lret
insb
enter
lret
xor
rorb
cmp
in
das
ficomps
push
add
mov
lods
jmp
in
pop
xchg
and
mov
es
mov
das
jo
ds
ret
fmull
jl
loopne
sbb
gs
das
mov
aad
fidivs
dec
mov
ja
imul
insl
lods
gs
xchg
adc
out
xchg
dec
popa
cwtl
sub
lret
adc
test
aad
lret
or
ja
and
mov
push
loop
lahf
int3
jo
pop
mov
sarl
leave
jbe
xlat
fs
xor
dec
in
out
outsb
nop
and
out
and
mov
nop
push
mov
jbe
popf
and
or
rorl
test
jno
popa
jnp
mov
add
das
sub
push
jecxz
jb
sub
aaa
pop
ljmp
push
mov
cmp
pushf
les
mov
in
lods
in
xlat
mov
add
mov
incl
jns
lahf
test
add
daa
in
jnp
lcall
fdivr
adc
dec
aaa
enter
bound
testl
fnsave
fwait
sbb
mov
int3
mov
popa
inc
pop
mov
push
jns
loop
or
lock
jno
push
lea
xchg
push
sub
xchg
cs
pushf
aas
mov
loopne
dec
movsl
xor
mov
jo
das
xchg
add
mov
or
xor
in
out
mov
in
mov
imul
cmp
xor
loopne
iret
icebp
or
add
mov
outsl
in
repz
and
js
scas
adc
jp
es
call
cmc
or
imul
pop
mov
jnp
lds
cs
ljmp
imul
jae
cs
ds
les
adc
xlat
xchg
xor
xor
or
je
or
movsl
push
mov
mov
and
cmpsl
push
cmp
mov
mov
jae
stos
mov
shlb
das
in
push
fsubr
xor
mov
insl
push
cli
loop
jle
lcall
lock
pop
push
mov
push
rorl
pushf
aam
dec
jbe
aad
pop
push
ja
dec
dec
fstpt
lcall
loopne
outsb
fcoms
cld
jp
pop
push
inc
mov
scas
push
adc
int3
pop
jp
data16
loopne
loope
enter
in
ds
loop
lret
jecxz
jp
scas
xor
scas
mov
or
xchg
lret
test
xor
in
jecxz
inc
pop
imul
fsubs
ret
push
push
and
lahf
and
push
outsb
dec
inc
fistps
mov
rcrb
jns
lock
add
xchg
add
xlat
les
push
lcall
sub
imulb
out
movsb
or
jecxz
loopne
and
mov
pusha
xchg
jg
and
repnz
leave
jmp
sti
std
mov
jne
jle
sbb
bnd
icebp
insb
add
cmp
lods
lahf
add
popf
mov
cmp
cli
loope
enter
sbb
pop
shrl
mulb
and
test
mov
cmpsb
mov
pop
sbb
and
cmp
stos
sbb
push
adc
pop
mov
jg
pop
clc
out
int
mov
sbb
xlat
inc
cmp
adc
or
or
sub
push
out
push
or
lea
enter
nop
jmp
and
inc
jge
mov
outsl
sbb
inc
mov
jl
fdivl
stos
das
jbe
add
or
cld
lea
into
sbb
sub
cmpsl
mov
sarl
xchg
out
jl
outsb
lret
mov
adc
test
xchg
mov
imul
les
sub
push
ja
sub
xor
rcll
xor
and
push
mov
aam
mov
rcll
ljmp
mov
dec
loope
cmp
lret
dec
iret
sub
mov
xabort
in
std
push
mov
loope
call
cmpsl
sarb
jp
fstpl
fsub
outsb
loope
push
and
inc
pop
popf
push
inc
out
xchg
or
addr16
and
add
jb
ja
push
fisubs
jae
or
lret
cmpsb
sub
hlt
mov
and
cmpsb
xchg
dec
sub
jno
add
into
mov
xchg
ret
dec
orb
adc
rcrl
in
inc
jge
and
sahf
dec
pusha
aad
mov
xbegin
xchg
andl
ret
cmp
movsl
jbe
inc
out
pushf
inc
jo
repz
jle
out
mov
out
mov
icebp
fwait
loopne
add
repz
jge
sbb
xchg
or
mov
add
add
jo
dec
cmp
add
rcrb
enter
jge
cwtl
inc
xchg
movsl
out
sti
pop
fcoms
stc
repnz
inc
mov
cmc
aaa
pop
push
sub
jmp
imul
mov
flds
nop
fcomi
add
dec
push
adc
test
jle
mov
jae
stos
idivb
pop
jp
orl
sub
imul
inc
jecxz
sbb
add
icebp
cmp
push
popf
jmp
inc
mov
cmp
cld
inc
mov
je
jg
das
lock
aas
inc
jl
daa
pop
pop
jl
inc
fstl
test
das
idivb
jmp
or
inc
ret
jb
fstl
xchg
sbb
aas
push
iret
addb
lock
mov
mov
test
or
pop
ds
xor
push
jno
pushf
aaa
stc
jne
push
adc
or
sbb
jnp
push
nop
or
aad
push
es
ds
xor
cmp
jecxz
jne
dec
xor
xchg
hlt
es
mov
rcrb
pushl
cwtl
cmc
fs
ficoms
pop
sbb
xor
ljmp
jge
iret
pop
and
aad
xchg
popf
cmp
pusha
pop
mov
int
cld
adc
ss
ficompl
leave
push
sti
adc
aaa
and
in
pop
jae
push
jb
push
roll
mov
lock
adcl
sub
daa
or
fcom
adc
aas
nop
jae
dec
jge
cmpsb
sub
push
pop
inc
std
pusha
pushf
dec
icebp
and
mov
shlb
and
xchg
fcoml
sti
dec
sti
aam
push
fisttps
or
repz
and
shrb
add
push
ret
pushw
popl
insl
jmp
mov
mov
inc
fchs
add
push
pop
push
std
sub
mov
mov
inc
mov
mov
mov
std
sbb
adc
xor
add
sar
push
pop
mov
jge
xor
xchg
inc
inc
jge
fdivs
cmpsb
pusha
fwait
cmp
adcl
cmpsl
xchg
stos
fs
test
pop
sbb
xchg
and
idivb
mov
das
adc
in
xor
std
push
dec
arpl
inc
xchg
insb
and
lea
out
cli
mov
fwait
sub
mov
fildl
sub
std
mov
out
sub
iret
add
test
add
lret
sbb
xor
xchg
lock
mov
mov
inc
sub
arpl
movsb
jl
or
push
test
stos
enter
or
iret
ja
inc
ss
aad
in
or
in
mov
repz
fcomi
es
fimuls
incb
or
sbb
roll
gs
xchg
insl
and
xchg
out
scas
clc
cmp
sub
adc
push
mov
sub
sub
xchg
lret
loop
rorb
sbb
xchg
shl
and
pop
sbb
mov
cmp
je
mov
pop
sbb
push
leave
test
sub
ss
mov
out
movsb
in
cmp
out
add
push
andb
push
or
movsb
loope
jge
js
and
out
dec
lods
inc
scas
or
popa
dec
test
pop
testb
ds
dec
lods
hlt
xchg
je
push
sub
mov
and
loop
push
xor
cmpsl
out
xchg
fmul
pop
push
xorl
int3
cltd
pop
mov
mov
add
testb
andb
inc
scas
das
out
cmpsl
mov
mov
lock
jbe
into
adc
add
dec
ret
dec
dec
or
cmp
push
and
pushf
jae
or
lods
loopne
pop
xor
insb
inc
inc
repz
xor
sub
or
cmp
into
sbb
movsb
add
or
bound
add
jae
adc
jge
pop
nop
pop
sub
sub
pop
mov
loop
xchg
outsb
pusha
pushf
js
add
xchg
lcall
fcomp
inc
adc
int
add
jg
in
mov
and
or
mov
dec
ret
mov
adc
test
je
and
testl
dec
fimuls
rolb
lret
mov
int
pushf
loopne
ss
aad
movsb
pushf
sbb
add
aam
push
ret
cmp
popa
fadds
call
in
cli
or
xor
pop
data16
ret
int3
mov
inc
std
notb
pop
sti
shll
adc
add
jo
push
adc
xor
roll
cmp
sub
mov
hlt
dec
bound
xor
nop
add
mov
daa
pop
js
sub
lock
pop
cwtl
fsub
shlb
in
xchg
add
in
test
mov
stos
dec
cmp
imul
enter
lea
repz
leave
mov
outsb
xchg
mov
pop
jne
shrb
or
mov
je
sbbb
cmpsl
xchg
imul
adc
jns
fadds
xchg
pusha
mov
push
xchg
mov
insb
fs
pop
in
add
imul
jle
fdivp
das
lea
push
test
xor
sahf
and
adc
pop
push
or
sub
pusha
mov
sbb
pop
dec
leave
push
or
scas
jnp
gs
or
or
or
xchg
jns
and
scas
push
adc
xor
aad
sbb
imul
repz
xchg
xchg
data16
cmc
icebp
aam
sahf
outsl
pop
pop
pop
push
es
das
arpl
movsl
ret
mov
nop
sub
xchg
and
xchg
in
fwait
sub
mov
push
xor
fdiv
pusha
repnz
add
andb
outsl
xor
das
scas
gs
jp
in
rolb
aaa
shll
jg
out
or
imull
repnz
fildl
add
das
mov
xchg
sub
dec
jbe
aaa
repz
pop
inc
orb
pop
lahf
hlt
fdivrs
in
addb
push
add
les
jbe
fildll
adc
mov
dec
pop
jecxz
mov
add
es
into
lahf
jns
add
adc
into
scas
cmpsb
aas
xor
cmp
repz
aam
mov
adc
rcrl
in
das
lret
sbb
insl
lds
pop
ds
fwait
std
jmp
lea
push
aas
push
cs
cmp
enter
inc
jge
cmp
fst
leave
adc
js
hlt
add
hlt
push
test
pop
mov
jecxz
pushf
cmp
inc
pop
push
mov
in
sbb
jns
ja
xor
mov
and
fldl
xor
xchg
imulb
push
mov
scas
mov
push
pop
incl
mov
cmp
in
in
jbe
lea
mov
call
mov
gs
scas
loope
andb
bound
mov
stos
test
sbb
es
call
push
loop
sbbb
into
stos
pop
sarl
cmpsb
test
fxam
jecxz
or
inc
pop
mov
xchg
into
popf
push
adc
cmpsl
mov
gs
cwtl
lods
stos
stos
dec
cmpsl
fcompl
int
pop
and
lret
jnp
xor
loop
dec
add
fwait
mov
jl
pop
imul
idivb
cwtl
rolb
test
cs
aam
xor
insb
jecxz
mov
dec
mov
out
push
pop
sbb
sub
loop
inc
loop
gs
push
jns
jp
subb
jp
mov
loopne
mov
pop
pusha
pop
dec
or
jne
cmp
cld
sub
mov
js
mov
outsl
jg
loopne
push
std
jl
repz
add
jae
jnp
test
dec
ret
sets
mov
outsl
mov
add
and
inc
aaa
add
mov
push
aam
sbb
adc
jg
add
aad
sub
cmc
repnz
icebp
jl
inc
test
lods
jmp
mov
dec
mov
subb
inc
notb
test
daa
cwtl
cmpsl
jno
sbb
lahf
rcrb
sub
mov
push
or
fs
and
fdivrs
aas
icebp
dec
jae
lock
rorl
imul
icebp
je
dec
shr
sbb
mov
or
lock
sbb
iret
add
icebp
aaa
fs
add
test
jo
scas
clc
and
and
ffree
mov
daa
hlt
ret
imul
out
test
cmc
stos
inc
push
xor
stos
rorl
mov
pop
inc
push
and
fstl
dec
cmpsl
cmpsb
aas
jae
jbe
gs
sbb
imul
xor
addb
cmpsl
mov
xchg
mov
cs
adc
dec
cmpsb
jge
outsl
jp,pt
mov
add
ja
es
mov
sub
jns
mov
mov
inc
dec
mov
movsl
and
pop
sbb
push
mov
or
ss
adc
push
mov
or
imul
xor
xchg
test
dec
hlt
adc
lds
icebp
testb
sub
mov
aas
rclb
rorb
xor
or
ret
aad
lea
nop
inc
enter
das
mov
jns
xor
dec
add
and
xor
add
testb
mov
xor
repz
lds
lcall
imul
sub
in
notl
xchg
sub
sarb
rcrb
pop
mov
add
lahf
rorl
xchg
xchg
xchg
pop
jns
push
stos
inc
xchg
sti
cli
mov
jns
pop
jb
ret
in
js
sbbb
hlt
lcall
hlt
sub
sbb
add
pop
test
stos
push
mov
sub
or
aam
into
ja
xchg
lahf
outsl
add
ds
jge
xchg
push
push
sti
and
lock
sub
jne
and
jno
xorb
mov
fisubrl
loope
cmp
sti
mov
jmp
mov
adc
push
cmc
xchg
adc
pop
sub
mov
pop
mov
enter
or
mov
ret
jns
adc
xor
rcr
int3
js
into
inc
push
sub
imul
pop
inc
pop
adc
push
cmpsb
or
imul
pop
mov
pop
frstor
push
dec
jbe
mov
or
sbb
dec
dec
cmp
in
pop
or
dec
mov
mov
sbb
test
xchg
sub
out
test
jp
fsubrs
cltd
xor
ret
stos
fs
ljmp
fcomi
fisubl
push
adc
cltd
dec
ds
pop
vsubss
aam
shrl
into
jne
lret
imul
push
dec
mov
ds
ja
clc
adc
adc
jno
addr16
aam
sarl
outsb
pop
adc
scas
xchg
adc
xchg
push
push
rcll
mov
loope
and
movsb
out
dec
fmuls
cwtl
add
fs
cld
sar
mov
dec
aas
jae
add
inc
and
loopne
mov
ret
xchg
roll
xchg
icebp
sti
inc
jge
or
popa
rcl
mov
sbb
dec
pop
pop
mov
sti
and
shll
dec
xchg
in
or
dec
push
aas
cmp
lods
es
jp
es
push
sahf
sbb
inc
lds
mov
adc
lods
jbe
lea
inc
imul
or
sub
nop
es
mov
repnz
dec
hlt
cs
xor
repnz
insl
test
add
sub
dec
or
pop
fs
xlat
push
add
addl
cmpsl
mov
push
xchg
aad
sub
dec
or
lret
es
jae
mov
shll
jmp
ljmp
lods
jns
es
xchg
hlt
mov
dec
test
pop
out
xor
test
std
xor
mov
imul
flds
push
mov
xchg
hlt
adc
in
jl
pop
cmpl
nop
stos
inc
leave
aam
test
jns
jno
inc
scas
stos
xchg
adc
out
int3
push
lret
rorb
or
addb
cwtl
add
sub
mov
mov
addr16
and
or
cmpsl
inc
loope
jge
js
out
xchg
in
mov
xchg
rorb
out
shl
cmp
out
add
sub
xor
pusha
jmp
mov
adc
jmp
jb
enter
inc
fldl
outsl
out
jmp
arpl
leave
mov
ret
mov
insl
jl
inc
pop
pop
out
push
jbe
mov
ds
out
fisttpl
scas
xlat
and
sti
lahf
mov
mulb
jmp
sbb
push
sub
or
rcr
stos
popa
sbb
inc
or
iret
pop
inc
xor
lcall
fwait
xchg
mulb
in
adc
push
cmpl
jge,pt
push
sub
sbb
aam
std
or
lods
push
test
pop
cli
shrb
push
mov
mov
and
mov
sub
mov
lahf
xchg
sbb
sbb
push
dec
stos
cwtl
cwtl
shrl
dec
pop
test
mov
in
pop
pusha
mov
hlt
hlt
pop
cmp
xlat
orb
fdivrl
pop
and
hlt
mov
in
addb
insb
mov
mul
mov
pop
test
and
sbb
cmpl
daa
inc
pop
cmc
movsl
jne
mov
mov
orl
ret
xchg
and
sti
pop
push
insl
push
jno
sbb
mov
xor
xchg
xchg
mov
lcall
aas
and
or
fisttpll
cmp
or
pop
aas
cld
or
sbb
sbb
mov
adc
push
or
cmp
and
mov
pop
subl
loopne
mov
or
rcl
mov
mov
ss
rorl
mov
dec
dec
test
cmovns
jecxz
and
jns
mov
inc
xorb
jl
ret
mov
dec
xchg
push
imul
push
jp
repnz
lahf
jne
cwtl
pusha
push
xorl
aam
xchg
fidivrl
fstpl
js
push
scas
ret
push
push
inc
add
jecxz
insb
mov
imulb
mov
jmp
adc
repz
lea
out
push
or
mov
fbstp
dec
iret
cwtl
cli
call
and
mov
cmpb
leave
inc
xor
arpl
inc
addr16
bound
pop
pushf
dec
aam
xor
stc
and
adc
arpl
inc
sbb
pop
pusha
mov
inc
mov
xor
fcmovu
sti
sub
je
or
out
cmpsb
push
xchg
mov
jns
mov
in
mov
lods
cmp
or
mov
cwtl
mov
insl
jmp
popa
ret
mov
cli
out
aaa
sbb
ljmp
lock
in
in
in
movsl
std
mov
or
outsl
jge
cmp
cmpsb
sbb
mov
sub
xor
int3
pop
or
and
mov
jge
out
imul
sahf
lods
out
xchg
test
sub
stos
jne
mov
push
aad
xchg
shll
pusha
es
ss
pop
xor
lcall
cmp
lcall
in
arpl
mov
pop
es
sub
inc
jle
dec
mov
cmp
or
cltd
into
shl
int
out
or
jb
fdivrp
mov
sub
stc
push
in
xlat
imul
stos
sbbb
mov
or
pop
sub
or
inc
iretw
jge
pop
sbb
xor
pop
and
sbb
fmuls
pop
inc
incb
inc
test
sti
imul
jns
fadds
mov
push
push
adc
or
sub
inc
xor
fwait
and
scas
push
xor
loopne
fdivl
adc
xchg
out
cmc
outsb
sbb
push
scas
mov
inc
xlat
jbe
out
addr16
mov
mov
sub
mov
movsb
into
inc
test
adc
jg
fistps
push
rclb
arpl
adc
das
pushf
sub
adcb
andb
cmp
aas
add
xchg
stos
add
sahf
cmp
pop
das
bound
sti
sub
shl
mov
popf
test
fwait
in
fs
pop
or
arpl
sbb
cmp
inc
popf
es
inc
dec
lahf
cmpsb
inc
sub
arpl
out
sahf
aaa
les
fwait
bound
lods
cld
and
xchg
mov
outsb
dec
or
xor
xchg
xor
outsb
into
pushl
xchg
dec
push
cs
xchg
pop
and
inc
sub
pop
iret
xor
or
push
mov
cmp
cli
mov
cmp
mov
pop
divb
popa
jae
push
or
cmpsl
inc
std
add
xlat
mov
mov
inc
or
lods
inc
outsl
shr
add
roll
add
leave
into
or
jmp
test
inc
loop
sbb
out
mov
and
inc
push
pop
or
fstps
lds
shll
dec
sbb
int
loope
push
dec
add
jae
mov
xchg
jmp
push
lcall
pop
aad
xor
xchg
mov
addl
push
ficompl
dec
inc
mov
pusha
push
sub
and
push
fistl
in
sbb
pop
pop
and
xchg
arpl
pop
inc
int
lahf
fimuls
fldcw
pusha
xor
std
mov
xchg
pushl
cmc
cmp
fisubs
pop
mov
pushf
lcall
mov
mov
scas
hlt
push
shlb
sub
mov
xor
push
and
xorb
movsb
and
xor
sarb
or
or
mov
rep
dec
jg
push
or
mov
mov
xchg
inc
dec
repnz
fstps
daa
dec
int
scas
lahf
outsb
pop
test
xchg
call
jge
sub
inc
or
push
popf
or
jecxz
nop
and
jnp
xchg
scas
das
addl
dec
insb
movsl
adc
int
shll
lods
dec
inc
mov
mov
rcrb
xchg
inc
add
mov
mov
inc
fsubrs
imul
mov
push
cltd
or
inc
mov
add
mov
adc
ficoms
pop
push
in
lret
icebp
into
or
sub
push
ja
push
movsl
and
push
mov
insb
idivb
mov
iret
and
pusha
mov
mov
pushf
ret
sub
push
jmp
jg
lahf
shlb
xchg
inc
or
fiadds
add
frstor
loop
xchg
mov
sub
sub
int3
pushf
rolb
cmp
jl
inc
lret
inc
mov
dec
mov
repnz
shll
mov
or
outsb
cmp
bound
cltd
data16
xor
insl
xchg
jnp
sbb
out
mov
and
sbb
call
push
jns
leave
out
aaa
sbb
jnp
sub
mov
js
inc
lret
enter
test
or
dec
lret
icebp
fisttpll
cs
icebp
flds
pop
inc
jno
mov
icebp
mov
dec
xor
in
test
fsubp
int3
je
aam
fcmovbe
jp
and
jl
leave
mov
and
ljmp
jno
ja
bound
int
or
and
lcall
xchg
inc
aad
mov
enter
add
movsl
mov
lret
sub
push
inc
sti
fsubp
movsb
sbb
push
ficoml
test
sbb
not
cld
imul
adc
repnz
jbe
fwait
ja
pop
push
ret
lret
adc
fmuls
push
xlat
ficomps
gs
cmp
movsl
mov
jne
notl
arpl
popf
addr16
sub
sub
stc
ret
popa
out
roll
test
data16
adc
push
fstps
dec
and
andl
and
sub
mov
xchg
mov
inc
outsb
or
mov
sub
std
sbb
fnsave
insl
addl
xchg
loopne
fs
gs
bound
es
jmp
dec
scas
cmp
sbb
pop
or
daa
fimuls
dec
popa
inc
mov
jecxz
mov
aad
dec
add
outsb
xor
fistpll
in
clc
scas
nop
hlt
enter
push
jmp
jp
shl
or
aas
sbb
test
dec
jo
cmp
fidivs
cli
xchg
jl
add
cmp
pop
jb
cmp
test
cwtl
push
dec
xor
mov
xor
test
jecxz
repnz
std
or
outsb
mov
sub
lods
lret
popf
mov
outsl
scas
bound
cmp
js
mov
xchg
in
mov
jl
fdivr
inc
inc
ret
sahf
pushf
pop
inc
lods
lock
scas
sub
inc
int3
add
fs
outsb
testb
pop
ret
ret
and
cmp
mov
in
imul
lock
and
subb
aam
mov
inc
jle
add
dec
sub
lods
mov
sub
mov
in
into
addr16
push
dec
cmp
fwait
je
or
and
clc
xchg
orb
push
mov
add
mov
or
cmp
pop
cmp
adc
inc
push
mov
hlt
push
mov
xor
ja
mov
lret
enter
cmpsl
lret
mov
push
outsb
push
mov
lods
mov
insl
inc
cmpsl
push
pop
gs
adc
jnp
daa
fiadds
xor
push
mov
dec
xor
mov
ljmp
ja
jp
lock
sbb
lods
add
mov
mov
or
push
int3
movsl
rcll
dec
and
bound
adc
ret
jno
out
arpl
addb
dec
xchg
lds
cs
mov
popa
mov
cmpsl
in
outsl
or
inc
xchg
popf
inc
pop
pop
out
sbb
sub
loope
out
ja
xchg
sub
stos
mov
or
xchg
dec
les
or
cmc
adc
ds
mov
lods
into
jns
stc
mov
xchg
jnp
cmp
popa
jl
lcall
out
push
push
inc
stos
inc
out
sub
mov
in
test
test
movsl
xor
xchg
inc
inc
mov
fistps
cmp
cli
push
jbe
jo
std
pop
mov
pop
out
jo
cmp
enter
cmp
hlt
sbb
outsl
adc
push
jb
jo
cmovb
call
out
sti
dec
inc
dec
push
imul
inc
insb
xchg
mov
sahf
mov
push
es
fsubl
and
fiaddl
aam
gs
or
out
jle
mov
jge
aam
or
mov
fsubrs
mov
movsl
lahf
jg
adcl
pop
push
insb
dec
adc
ljmp
push
or
sbb
jb
fisubs
out
or
arpl
adc
imul
jno
hlt
sub
cmp
cmpsl
mov
push
mov
test
mov
ds
scas
mov
pushf
inc
enter
push
out
adcl
stc
xchg
imul
and
orl
sub
test
std
lcall
les
testb
fwait
add
xor
pop
pop
lock
xor
jmp
icebp
jbe
sbbl
mov
lret
std
sbb
aad
out
test
pop
cltd
jl
out
out
test
sbb
lods
pop
ret
movsl
les
cmp
icebp
xchg
mov
jns
loope
cwtl
in
cmp
jnp
adc
or
xor
rcll
icebp
stos
push
push
jp
jge
js
mov
stos
jb
add
out
inc
cs
out
daa
lock
imul
lret
inc
mov
push
mov
or
addr16
divb
push
pop
int3
clc
lock
pop
rep
ja
scas
sbb
xchg
daa
and
test
lods
sarb
pop
popa
mov
push
rcll
ja
testl
xchg
adc
aaa
add
insl
adc
push
inc
sbb
jl
lea
stos
cmpsl
test
in
les
lcall
in
sub
cmp
mov
dec
inc
lds
outsb
mov
xor
xchg
pop
or
push
rclb
fsubp
arpl
pop
fwait
js
cwtl
inc
add
add
mov
call
jb
out
aas
mov
mov
push
jge
insl
cmpsl
lods
or
lock
mov
xchg
mov
xchg
leave
ds
stos
into
rol
icebp
and
lods
insb
xchg
jl
decb
mov
rcrl
fxch
add
mov
jecxz
mov
fs
xchg
mov
push
jp
cmp
add
or
cld
inc
jmp
sbb
xor
lea
leave
add
sub
out
sub
fcomps
in
pusha
cmc
int
xor
dec
gs
pop
push
bound
pushf
xor
jbe
jmp
dec
cmp
xor
jae
mov
xchg
xchg
test
xchg
rolb
dec
push
jle
test
or
repz
movb
sub
dec
mov
or
cld
loope
test
cmp
ret
jp
add
adc
mov
push
xchg
push
jp
ja
fwait
int
insl
dec
xchg
xchg
adc
jecxz
sti
imul
mov
fs
mov
lret
js
je
push
lods
repnz
push
dec
int3
cmpb
mov
lods
adc
imul
hlt
jo
imul
jns
pop
cld
imul
daa
bound
mov
lods
testl
sbb
scas
cmp
jae
mov
cwtl
cmp
inc
add
sub
inc
ret
loop
clc
hlt
adc
xor
repnz
xchg
add
cmpsb
iret
cmp
push
fiadds
sbb
or
fldl
pop
mov
bnd
and
push
add
shlb
in
inc
cmpsl
in
xchg
mov
std
int
mov
lea
xor
ljmp
pop
ljmp
sbb
insb
lea
cli
clc
mov
sub
xchg
sub
dec
jle
sti
xor
push
daa
leave
ret
mov
pop
mov
in
test
xchg
jmp
out
lret
sub
jle,pn
cmpsb
add
pop
mov
pop
es
xchg
rorb
lahf
cltd
popw
dec
mov
aam
push
je
inc
inc
subb
mov
inc
pop
dec
stos
xor
inc
xlat
pop
loope
xlat
push
jmp
or
mov
xlat
movsl
test
cmp
leave
adc
push
add
jnp
dec
pop
lods
sbb
pop
or
cltd
adc
add
mov
mov
imul
inc
adc
repz
in
in
add
ret
push
cmp
call
daa
into
gs
mov
stos
fstl
adc
das
std
xchg
dec
lea
push
push
rcrl
or
and
leave
leave
es
adc
fldl
mov
nop
sub
in
jo
outsl
shlb
stos
imul
xchg
xchg
loope
and
push
or
mov
xchg
aas
xor
push
arpl
cmpl
paddb
leave
aaa
inc
sti
repz
or
mov
in
stos
pop
nop
shlb
out
sub
mov
jge
add
cltd
js
xor
rcrb
add
ljmp
xor
stos
mov
std
fchs
fmull
pop
lahf
stc
movl
xchg
and
inc
loopne
cmp
dec
or
mov
gs
pop
add
push
dec
lods
cmp
dec
aas
jecxz
xor
or
inc
shrb
sbb
repnz
pop
clc
inc
cltd
xchg
push
out
xlat
push
or
pop
pop
xor
and
mov
mov
mov
and
xchg
mov
ljmp
push
cmc
add
or
lods
test
enter
push
scas
adc
mov
or
mov
mov
sbb
das
sub
into
or
push
push
cmc
sti
xchg
pusha
incl
shlb
call
lret
fmuls
jb
shll
testl
mov
popf
or
mov
stos
inc
lds
fiaddl
insb
dec
adc
je
sub
sti
fistl
ljmp
loope
add
std
fimull
fidivl
lock
push
into
sub
ds
xor
pop
call
enter
or
xchg
pop
test
aam
decl
hlt
lcall
ret
leave
adc
clc
mov
lret
push
fs
mov
sbb
push
mov
addr16
out
lock
out
push
andl
xchg
enter
xor
dec
pop
js
cmp
jp
popa
out
cmp
adc
add
sub
mov
fldcw
lods
lock
imul
movsb
das
int
or
fiadds
mov
mov
into
push
sti
push
xor
or
lret
leave
int
jb
daa
mov
mov
jne
popf
fwait
mov
popa
inc
xchg
mov
cmpsb
push
xchg
xor
mov
out
vpsubq
or
into
out
ss
jno
in
aaa
jg
outsb
jb
pop
ja
mov
cmp
or
fs
lahf
fidivl
or
dec
int3
ret
idivl
in
inc
mov
test
adc
push
push
or
adc
lret
jecxz
jmp
and
loope
push
aaa
sub
xchg
popf
or
cmpsb
in
pop
pop
mov
int3
outsb
inc
mov
stc
lahf
xchg
outsb
or
sub
movsb
sbb
rclb
ljmp
ret
push
in
dec
mov
test
hlt
adc
xchg
inc
cmp
push
pop
loop
ret
outsb
inc
push
sbb
mov
pop
in
aaa
pop
dec
add
jnp
mov
fmull
test
inc
pop
inc
adc
pop
add
cmp
mov
repz
jne
push
fistps
push
mov
jmp
push
mov
leave
mov
mov
rcrl
cwtl
cmp
xlat
aaa
push
cmc
enter
sub
jae
icebp
inc
out
add
add
arpl
aaa
out
test
and
fcoms
lods
iret
std
xchg
or
sub
inc
cld
ret
in
mov
aas
inc
mov
jecxz
add
imul
mov
xor
adc
adc
cld
xor
xchg
add
ret
daa
mov
dec
xor
cwtl
cmpsb
test
adc
jbe
pop
jl
repz
sbb
lock
mov
cwtl
daa
loopne
jp
xor
inc
cmp
andl
jl
ds
dec
xlat
push
stos
clc
pop
fists
mov
aaa
aam
loop
xor
decb
cmpsb
inc
aad
sub
inc
imul
in
jge
mov
dec
jnp
bound
bound
mov
mov
xchg
movsl
pop
fimuls
bound
and
or
jl
sbb
es
imul
sbb
xchg
scas
add
sbb
mov
fs
enter
add
jmp
cli
inc
in
xchg
rcr
jmp
bound
mov
loope
push
lods
cmpsb
and
aam
jp
call
xchg
mov
das
inc
jns
cmp
dec
xor
cmp
outsl
rclb
lea
jg
cmp
test
shl
call
or
fs
xlat
xor
inc
xchg
pop
cli
fldenv
out
repnz
mov
imul
push
bound
cmc
sbb
dec
xor
mov
dec
out
fnstenv
sub
pop
insl
dec
fdivrl
xchg
dec
inc
pop
hlt
jl
push
ficoml
sub
xor
jbe
out
fwait
sar
pop
and
clc
sub
pop
ja
adc
xchg
scas
cltd
subl
into
enter
iret
sub
mov
xchg
fistps
aas
leave
add
add
add
popa
outsl
cmp
xchg
sub
mov
xchg
fcoml
mov
std
inc
sbb
cmp
xor
sub
lcall
hlt
pop
jb
ret
pop
cli
inc
cmpb
sub
int3
shl
adc
es
jge
xor
icebp
insb
test
inc
loop
sub
scas
ds
andl
mov
jl,pt
or
sar
jecxz
lret
push
and
mov
inc
repz
mov
roll
add
or
or
lret
jp,pt
mov
or
mov
mov
xchg
inc
and
mov
mov
jnp,pn
test
or
mov
adc
fiadds
cmp
jge
pop
add
push
gs
xrelease
loope
xchg
fbstp
sbb
shrb
and
lock
mov
stos
aaa
cmp
jge
stos
mov
rclb
test
xor
push
lock
inc
mov
leave
or
jbe
lahf
daa
xchg
add
mov
jle
out
or
sbb
outsb
and
inc
jbe
xchg
xlat
pusha
stos
test
xor
mov
sbb
leave
shr
mov
pop
sub
mov
stos
xor
cmp
sbb
dec
data16
outsb
lea
pop
hlt
xor
dec
mov
sbb
test
cli
mov
cmpl
xchg
daa
scas
pop
out
mov
push
or
inc
dec
sub
iret
jns
repz
push
sbb
outsb
xor
test
cmp
sbb
inc
andb
scas
gs
pushf
pop
out
pusha
push
jb
mov
and
push
mov
cmpsb
sub
sbb
mov
fmull
pop
test
hlt
xorb
and
push
fsts
xor
adc
xor
mov
xchg
dec
xchg
fwait
mov
cmp
cmp
push
pop
loop
jnp
xor
aad
inc
inc
fldt
jle
shr
fisubs
or
aas
lea
loope
dec
xchg
push
pop
mov
jge
out
xor
xor
addl
mov
add
int
movsb
dec
sub
lods
jle
mov
int3
rolb
push
inc
arpl
sbb
jmp
mov
mov
inc
in
dec
sbb
jno
mov
xchg
rolb
decb
or
std
ret
div
in
jne
mov
adc
je
icebp
dec
sbb
or
in
mov
inc
pop
inc
jp
mov
push
enter
pop
pop
cltd
add
dec
mov
pop
fsub
mov
xchg
sahf
inc
xor
push
scas
cli
mov
mov
ljmp
xchg
sbb
insb
sub
xor
mov
repnz
loopne
ds
in
outsb
xchg
int3
in
push
xchg
repnz
add
mov
jmp
leave
pushaw
imul
dec
addl
dec
aam
sahf
adc
imul
push
divl
sub
les
cmp
mov
ficoms
mov
aam
out
push
adc
ret
sbb
nop
cs
jmp
stos
ljmp
fildl
adc
mov
movsb
dec
stos
xchg
or
ss
push
cwtl
lahf
sub
popf
xor
sbb
mov
out
fistpll
pop
movsl
das
pop
sub
jp
dec
stos
jg
xchg
cs
inc
or
ja
and
jae
lods
arpl
loopne
lods
dec
push
fucomp
add
sar
rorb
xor
test
fwait
insb
jns
xchg
shl
pop
jbe
mov
mov
sub
cmp
inc
or
jne
or
pop
sbb
stc
push
mov
inc
leave
ret
jmp
mov
inc
fstps
xchg
adc
cld
gs
shrb
dec
out
leave
push
sbb
popf
jb
and
xor
shll
mov
sub
xor
sbb
ficompl
mov
fs
inc
scas
or
out
movsl
and
lret
sbb
add
push
jae
mov
fisubl
xchg
aam
int3
xchg
sti
sub
xchg
loopne
fldl
rcrl
jae
lcall
add
cmp
out
cmp
leave
nop
mov
jbe
inc
mov
test
fidivrs
aaa
movsl
push
fdivr
jmp
daa
mov
add
js
push
mov
lock
dec
sub
pop
mov
lahf
dec
inc
push
stos
jecxz
cli
test
gs
popa
dec
fs
cld
test
jns
clc
inc
outsb
nop
cli
das
xor
jae
mov
xorb
mov
xor
daa
addl
incb
or
push
add
pop
and
loope
aas
pop
jge
mov
and
pop
stos
sarb
sbb
in
fwait
sbb
and
push
ret
test
sbb
sti
jle
mul
testb
sbb
inc
insb
xor
mov
sbb
mov
lahf
inc
jbe
shl
push
test
mov
xor
pop
ret
addr16
mov
jmp
test
dec
jbe
push
mov
xchg
fadd
mov
rcrl
cmc
inc
icebp
mull
pop
pushf
add
inc
test
inc
xchg
rorb
je
in
fwait
lret
jmp
mov
shll
je
push
roll
mov
cmp
push
xchg
cltd
xchg
pop
cwtl
sbb
and
xor
adc
imul
test
cs
fwait
jecxz
popa
stos
aam
mov
sbb
lds
psrlw
jns
repnz
jmp
das
test
cmp
insl
ret
add
fstpl
aas
push
inc
mov
hlt
push
lods
mov
mov
mov
leave
and
fcomip
push
cmp
push
pusha
sbb
out
out
dec
movsb
sub
lds
xchg
ret
sub
mov
enter
mov
pop
push
pop
and
ret
push
pop
das
lock
ja
add
xchg
sbb
xchg
mov
mov
ds
push
and
sti
add
sbb
dec
and
dec
pop
pop
jg
popa
mov
add
sub
push
movsl
inc
pop
cli
out
notb
sahf
dec
adc
loopne
js
ret
std
movsl
cmc
xor
roll
adc
loop
scas
fdivrs
test
fisubrl
je
jb,pn
mov
mov
push
inc
xchg
hlt
cmc
sbb
mov
fiadds
icebp
add
sarb
dec
cltd
andl
mov
pop
add
rclb
cmp
mov
lods
popf
or
outsl
fistl
pop
jg
jge
pushf
jo
lret
xor
sbb
add
addr16
inc
jg
sub
lds
cmp
cmp
jg
xor
adc
rcrb
push
repz
cmp
fucomi
jmp
pop
fcoms
fcmove
test
inc
cwtl
mov
fmuls
fcoms
add
mov
sbb
arpl
iret
or
faddl
mov
into
cmp
push
push
jae
add
rdtsc
ficomps
mov
jmp
pop
lahf
in
inc
mov
lret
hlt
pop
cwtl
enter
outsb
jp
pop
loopne
bound
rcl
mov
scas
jnp
and
cmp
pushf
mov
jp
dec
lcall
sub
negb
call
call
int
push
and
mov
in
pop
jecxz
repz
std
in
cmpsl
mov
pushf
xchg
fnstsw
inc
adc
imulb
xchg
and
mov
cmpsb
push
or
into
push
stos
shll
sub
xchg
cmp
cmp
or
add
add
loopne
pop
popa
push
or
pushf
push
push
jns
add
loop
sub
out
fwait
and
imul
or
loop
inc
gs
jecxz
lods
adc
cmp
xchg
movsb
xchg
in
int
xor
push
xchg
add
divl
push
inc
outsb
ss
shrl
jmp
jl
inc
push
loopne
push
dec
stos
add
and
inc
or
stc
jge
in
jno
ljmp
out
cmpsb
pop
loopne
sub
out
into
mov
adc
imul
aad
jle
andl
jle
enter
push
push
push
inc
or
jp
add
in
jno
mov
mov
iret
inc
sti
xor
insl
jg
test
mov
gs
scas
loop
fdiv
les
sahf
xchg
cmp
in
fildll
lock
mov
adcl
or
jnp
mov
xor
leave
loopne
mov
lahf
int3
repnz
fstpt
shlb
mov
mov
xor
subl
xor
push
and
adc
mov
lods
sbb
les
test
hlt
sub
jbe
xor
call
mov
leave
aaa
fwait
lds
sub
sti
cmpsb
inc
cmpsb
scas
jne
add
or
jg
aas
or
jp
and
jge
les
dec
outsl
dec
ret
mov
repz
xchg
lea
adc
insb
fdivrs
and
jnp
shr
fwait
insl
push
sbb
xchg
aaa
ret
xlat
imul
jns
sub
dec
add
pop
xchg
es
sbb
out
imul
adcb
cmp
ftst
xor
aas
jmp
mov
es
ficoml
xor
mov
mov
cli
sti
ficoml
sahf
pop
add
push
cmpsl
cli
mov
decb
inc
cmp
dec
jo
ja
aam
in
repnz
sub
lret
and
nop
mov
mov
out
es
dec
inc
jne
loopne
jg
fistps
inc
jae
nop
adc
add
pushf
hlt
dec
in
push
aam
insl
aas
test
xor
xchg
ljmp
aam
mov
and
arpl
rolb
inc
iret
dec
dec
mov
out
push
and
sti
adc
ja
cs
cmc
popa
dec
jl
movsb
dec
lret
sbb
cmp
cltd
pop
pop
jmp
or
push
call
lock
or
clc
loope,pt
dec
inc
push
or
fldt
sub
mov
push
cmp
ror
mov
push
xchg
inc
fimuls
jecxz
mov
cmp
sahf
mov
imull
rcl
jl
xchg
mov
inc
imul
inc
mov
stos
mov
leave
insl
leave
jmp
ret
and
xlat
ljmp
inc
ds
xchg
or
sbb
jns
rcrl
cmp
mov
icebp
js
inc
cmp
lods
jl
cmp
nop
in
add
or
inc
and
mov
popf
clc
inc
stos
pop
pop
test
int
daa
push
repz
loopne
scas
mov
cmp
ret
dec
jb
jecxz
daa
adc
std
jecxz
push
fsubr
sub
cld
push
mov
ja
adc
repz
mov
lods
jg
rolb
push
mov
inc
stos
jge
aaa
rolb
lock
and
mov
orb
scas
inc
sub
lods
in
lea
dec
and
pop
xor
cs
mov
or
mov
or
std
adc
mov
pop
and
pop
pop
lret
jecxz
dec
cmp
sbb
addr16
adc
jnp
es
mov
or
aaa
mov
shr
aam
xchg
cmp
sub
mov
dec
xchg
int
test
inc
cmp
ss
or
sahf
jl
mov
sti
mov
cld
je
inc
sbb
insl
cmpb
out
mov
shlb
aam
popa
movsb
push
sub
in
popf
in
imul
mov
lret
stos
sub
push
addr16
push
arpl
shll
inc
inc
inc
pop
cltd
xchg
pop
xchg
add
ds
xorb
insb
std
out
add
fucom
clc
dec
mov
push
adc
add
or
and
jnp
dec
adc
pop
jecxz
mov
test
imul
ret
nop
jne
subl
fcmovu
test
out
pop
pop
pop
lahf
movsl
cs
test
sub
xchg
lahf
ficoml
repz
xor
ds
daa
cli
or
push
mov
fimull
lds
add
mov
std
notb
pop
inc
pusha
mov
sbb
cltd
ffreep
test
cld
adc
sbb
and
jns
cmp
incb
mov
adc
lret
aam
or
enter
stos
imul
cmp
subl
mov
mov
scas
push
jle
lock
push
je
sbb
stc
xor
or
push
mov
sbb
fnstsw
andl
push
jge
incb
pop
mov
fwait
or
dec
fst
cmp
ljmp
jo
mov
sub
inc
out
cmp
add
mov
cmp
loope
lea
cmpsl
xor
fs
aam
movsl
aam
stc
ljmp
fwait
call
shr
mov
faddl
dec
push
add
loop
idiv
fidivl
dec
add
xchg
mov
jg
push
pop
jb
data16
push
int
pop
and
imul
pop
mov
out
out
sti
jg
gs
add
sbb
lods
mov
leave
cmpsl
push
test
pop
jge
sti
ja
shll
jnp
out
push
mov
cltd
pop
lret
sbb
mov
mov
insl
imul
mov
repz
repz
orl
out
mov
ss
arpl
xor
mov
stos
cli
stos
iret
fcmovbe
lea
jo
nop
xchg
fimull
fistpll
mov
and
xor
cmc
mov
jo
mov
push
xchg
dec
gs
fiaddl
enter
sbb
repnz
icebp
outsl
call
jl
sub
add
sti
shll
sti
int3
jg
popf
scas
adc
stos
scas
mov
inc
arpl
add
aaa
xchg
jns
mov
fsts
mov
xchg
and
sbb
clc
jle
stc
and
invd
jns
rolb
popf
mov
xor
mov
sbb
lret
mov
ret
pop
lods
sarb
xor
sbb
mov
repnz
movsb
in
jg
or
jle
dec
hlt
enter
ss
jns
xchg
pop
inc
jnp
xor
repz
pop
mov
test
dec
loop
dec
mov
pop
shlb
inc
jle
push
mov
mov
xlat
fldenv
mov
and
lods
in
mov
cmp
insl
loope
in
pop
jbe
pop
jl
sbb
je
cmc
sarb
push
mov
repnz
pop
cmp
mov
inc
shl
sub
jns
lock
dec
jecxz
or
in
adc
xchg
sahf
mov
rcll
int
mov
sub
push
aaa
xchg
sub
pop
inc
cli
or
mov
fldenv
sbb
stos
aaa
icebp
mov
mov
ds
xchg
dec
push
pusha
jge
inc
adc
add
mov
mov
pop
jne
push
push
pop
push
nop
and
mov
sarl
jne
jb
pop
sub
jmp
push
iret
inc
cwtl
pop
sahf
dec
lret
stos
lcall
data16
xchg
pop
xchg
mov
xchg
add
iret
xor
repnz
adc
mov
int3
push
pop
cmc
loopne
mov
push
cld
ret
into
pop
xor
outsl
loope
mov
addl
inc
push
outsb
cwtl
jecxz
lods
aaa
and
inc
jnp
cwtl
adc
outsb
cmp
adc
push
fimuls
std
push
jl
jg
xorl
das
or
jl
dec
gs
cld
cmp
and
stc
pop
stos
shlb
sub
aas
testl
enter
fildll
adc
inc
sar
adc
pop
push
sub
cmp
push
fucomi
mov
fxam
pop
xchg
les
enter
dec
cmp
aam
xchg
pop
jp
dec
mov
jno
sub
fimull
les
cmp
xchg
out
dec
dec
pop
push
and
or
shrb
iret
push
lods
sahf
je
outsl
jg
fcomp
std
push
add
mov
dec
adc
or
mov
cmp
adc
lcall
push
adc
sub
cmp
mov
jp
jle
mov
hlt
mov
js
xchg
scas
add
outsl
fwait
inc
or
pop
jno
cli
mov
sbb
jmp
mov
inc
prefetcht2
cltd
ja
and
pop
mov
push
xor
sub
sub
mov
jge
mov
and
imul
jmp
mov
stos
fcmovne
int
sub
repz
xchg
lods
test
test
jecxz
ficomps
or
push
xchg
cmp
aad
push
mov
out
dec
fnstenv
mov
insl
fwait
inc
xor
subl
dec
cmp
int3
fimuls
nop
mov
nop
sbb
test
icebp
push
loop
push
ljmp
nop
rolb
loope
shll
xlat
shlb
int3
mov
add
in
leave
sarl
pop
add
pop
cwtl
pop
cmpl
push
sbb
cmp
jge
das
into
and
mov
sub
stc
dec
iretw
or
mov
ja
mov
loope
mov
sbb
lea
mov
ficoms
sbb
imul
addl
outsb
jb
mov
push
xchg
imul
dec
xchg
add
push
loope
push
cltd
out
mov
xchg
mov
xchg
xadd
les
or
mov
jge
sbb
inc
rorb
popf
jns
push
jae
add
sub
adc
fsubl
or
lcall
imul
mov
fimuls
dec
adc
les
pushf
icebp
scas
rclb
lcall
pop
js
inc
lcall
sahf
jle
mov
jl
push
lret
rcr
mov
cmp
jle
gs
fdiv
insb
sub
aas
cmp
mov
sub
sub
ja
mov
cmc
or
aad
jae
or
jno
mov
add
popf
push
lret
and
popa
shlb
fnstcw
std
mov
inc
xchg
jno
xchg
mov
xor
sub
cltd
lds
imul
je
adc
ret
xor
in
int3
mov
mov
jg
cwtl
jp
or
xchg
int
cltd
movsb
xor
bound
xor
dec
aas
ror
test
lds
lret
stos
lods
xchg
jb
push
rcr
inc
fbstp
push
push
in
mov
adc
adc
sub
rcll
fists
addb
jae
dec
rolb
lret
nop
mov
sbb
fs
xlat
ljmp
int
jns
mov
mov
xorl
fildll
jg
dec
add
clc
pop
test
pusha
dec
shl
loop
mov
test
push
mov
add
cmp
data16
xchg
jg
xorb
push
mov
int
pop
sahf
xchg
push
add
daa
imul
add
repnz
xor
sti
push
sub
jg
into
cli
jae
add
mov
repz
into
inc
ret
or
les
push
add
dec
sub
or
mov
jne
pop
cli
sbb
push
cwtl
adc
nop
mov
shrb
mov
fsubs
ja
jb
pop
fisubl
scas
loop
test
xlat
xchg
and
sub
pop
aaa
mov
xchg
jb
in
xchg
iret
dec
stos
iret
mov
and
sarb
inc
add
dec
iret
mov
jecxz
stc
mov
push
cmp
imul
adc
mov
mov
add
inc
pop
mov
popa
sarl
stos
xor
out
incb
or
push
out
jp
insb
cmp
sbbl
test
xchg
push
push
mov
add
adc
mov
inc
inc
cltd
or
push
jle
cli
mov
lret
in
scas
aad
aam
dec
lahf
mov
jle
inc
out
cwtl
inc
jno
ds
ret
pop
into
push
mov
es
pop
mov
fwait
mov
lret
popf
add
xor
cltd
sbb
and
les
int
divl
inc
leave
xor
sbb
repnz
mov
aas
jae
pushf
jge
in
mov
cltd
cmp
loope
jae
jge
lods
add
xor
in
fisubl
int3
ds
cwtl
mov
testl
sub
mov
popa
rclb
stc
int
mov
adc
stc
and
fwait
pop
pop
mov
xlat
or
pushf
jnp
stc
cmc
and
pop
inc
mov
test
aaa
outsb
adc
push
in
outsl
mov
aaa
nop
push
mov
and
lock
aam
or
jo
pushf
or
outsl
and
sbb
cwtl
mov
push
out
daa
jp
rcrl
outsl
jl
and
cmp
mov
je
mov
or
mov
lods
jmp
pop
outsb
cmc
mov
repnz
mov
pushf
js
mov
dec
and
jge
ljmp
xchg
inc
xchg
sub
mov
or
lahf
pop
pusha
popf
scas
test
pop
inc
sbb
decl
cmp
inc
notl
xchg
mov
imul
jmp
mov
jle
xchg
in
jl
push
das
sbb
das
mov
notl
stc
es
icebp
sub
mov
dec
jo
lds
sub
mov
push
fisubs
push
lea
or
rcrb
fisttps
xchg
mov
shrl
pop
fsubrl
or
arpl
add
pop
ss
push
lret
sysenter
shl
xor
jmp
add
inc
and
jg
jne
aas
push
inc
inc
jecxz
lock
scas
cmpsb
andl
xor
push
mov
jne
sti
push
fldt
lods
mov
lahf
test
lods
mov
push
js
sbb
mov
cmpsb
lcall
cmp
jmp
pop
test
stos
fidivs
add
shrl
pushl
jmp
mov
fs
mov
or
jno
rol
push
jl
mov
movsl
dec
testb
pop
mov
mov
jge
push
scas
pop
lret
mov
or
add
notb
shl
pop
pop
repz
jno
stos
mov
das
fdivl
or
sub
add
icebp
rorb
rcrl
filds
fcmovu
sub
aas
sbb
inc
fisubs
mov
dec
nop
lcall
inc
add
mov
adc
xor
js
or
jle
sub
je
cwtl
jmp
jg
lea
mov
jbe
jmp
insl
inc
add
call
cmp
pop
lock
mov
mov
fisttps
mov
dec
add
push
xchg
fmulp
and
push
shl
clc
and
filds
push
mov
lret
scas
rcrb
icebp
cmpl
leave
or
mov
and
fists
adc
cmp
sti
inc
scas
scas
mov
dec
test
inc
cld
inc
xchg
sbb
xchg
sub
lcall
or
jae
push
xor
loope
sahf
mov
jbe
sub
int
dec
popa
adc
push
mov
and
loope
pop
dec
repnz
or
and
popl
repz
sub
cmp
mov
add
out
fnstsw
xor
push
jbe
imul
rol
loope
popf
test
popf
or
xor
and
add
in
mov
mov
xor
out
pop
popf
xchg
stos
leave
pop
fcmovnu
push
pop
shll
push
sbb
push
add
cmp
stos
out
int3
into
sub
inc
mov
mov
into
jno
enter
lds
lret
or
jae
stc
ljmp
ljmp
mov
xor
xchg
rsqrtps
stc
mov
pop
mov
cmpsb
adc
mov
int
sbb
iret
dec
lds
mov
or
je
and
cs
das
jns
pusha
adc
add
mov
add
and
mov
dec
movsb
jbe
mov
adc
out
out
mov
movsb
js
ja
adc
sti
je
add
push
aam
and
push
cmp
mov
rolb
xlat
cmp
jno
rolb
ds
lea
dec
in
cmpsb
adc
push
push
lcall
stos
push
loop
fdivrs
in
push
xchg
and
je
jae
mov
xchg
stc
inc
imul
in
test
fisttpl
add
ss
push
repz
aaa
add
mov
pushf
mov
jle
sti
je
les
adc
faddl
in
pop
jp
lea
or
mov
ret
aad
sbb
fmuls
xlat
dec
iret
sub
popa
cmp
add
and
arpl
and
mov
icebp
inc
shll
xchg
adc
jb
pop
cmpsl
mov
pushf
sbb
adc
out
leave
fwait
mov
xchg
addr16
sti
js
insb
movsl
sub
pushf
cmp
cmpsb
test
cmp
xor
clc
dec
dec
dec
push
leave
xchg
push
add
sbb
in
inc
sbb
test
call
es
fwait
cmp
mov
ret
sbb
mov
adc
mov
fstl
and
cs
pushf
add
push
sbb
shlb
cmp
adc
outsb
pop
jno
fsubrs
mov
mov
xchg
xchg
nop
repz
in
or
rclb
loope,pt
sbb
lret
sub
adc
dec
mov
or
sbb
sub
pop
fwait
pop
fisubs
test
cmpsl
mov
popa
adc
lcall
jae
insl
insb
nop
cmp
int3
pop
lods
push
mov
fs
int3
repnz
fucomip
sahf
push
ljmp
hlt
or
sbb
or
mov
fimuls
mov
pop
jae
stos
lret
shrl
int
xchg
int3
ret
test
rclb
jle
icebp
xorl
inc
adc
pop
cli
mov
sbb
push
std
rorb
xor
sbb
int
pop
cltd
xchg
or
movsl
lahf
jg
daa
sub
test
rorl
and
pinsrw
add
xchg
lret
je
mov
push
adc
repnz
jae
jnp
pop
add
mov
push
cmp
lds
dec
pop
in
add
in
nop
inc
adc
movsb
repnz
fists
addb
and
xchg
adc
loop
lret
idivb
push
andb
ljmp
pushf
jl
xor
mov
mov
push
pop
add
into
inc
pop
rcll
mov
outsb
fisubrl
pop
sub
lods
mov
clc
push
xor
cmp
insl
adc
sub
not
pop
sub
pop
in
repz
sub
je
imul
or
or
pop
scas
or
jo
ss
or
or
jge
in
jae
popa
subb
fsubrl
ja
hlt
xchg
mov
xchg
test
in
cmp
fiaddl
pop
test
mov
lcall
enter
and
xchg
xchg
sti
sbbl
xchg
sar
pop
dec
mov
daa
pop
xlat
jno
lock
repnz
pusha
jp
scas
testl
mov
ret
and
or
or
cmpsl
jge
popf
sbb
dec
enter
dec
cmp
jo
insb
bound
xor
sub
sub
inc
cmpb
mov
xchg
loop
cmp
jae
pop
pop
scas
pop
icebp
insl
and
inc
pop
shrb
add
nop
sub
dec
add
adc
fists
cmp
sbb
mov
mov
and
aas
test
dec
das
mov
xchg
dec
shll
fidivrs
xor
sbb
mov
push
inc
lods
mov
mov
mov
cmp
idiv
subb
xchg
test
das
or
repnz
shr
cli
lods
dec
inc
push
lds
mov
jno
cli
jecxz
jb
add
jg
mov
test
fiadds
faddl
jno
outsb
sbb
loope
movsl
loopne
or
mov
leave
in
push
mov
sub
in
pop
adc
adc
psrld
mov
fcompl
stos
out
and
fldenv
fists
lahf
imul
sub
stc
out
in
jo
cmp
adc
push
dec
mov
mov
pop
cmp
fldenv
lock
pop
call
lcall
scas
xor
push
fistps
pop
add
pop
ss
dec
out
fmuls
dec
pop
mov
in
xchg
xor
movsl
xlat
add
rcrb
fwait
push
js
pop
cmp
fwait
std
dec
or
push
cmp
pushf
insb
push
xchg
mov
repnz
pop
sub
icebp
push
loope
fwait
cmpsl
rcrb
clc
adc
ss
adc
leave
adc
pushf
and
jge
pop
xchg
ret
push
inc
roll
push
pop
push
mov
jnp
es
iret
in
fs
or
outsb
vcvtdq2pd
or
sahf
stc
pusha
add
insb
in
cmp
mov
into
test
loop
inc
mov
push
adc
pop
fs
std
xchg
shlb
add
adc
popa
scas
call
testb
dec
test
cmp
shl
jp
mov
lcall
loopne
sub
xchg
stc
fs
clc
faddl
add
push
iret
and
xor
or
jbe
dec
rolb
testl
stos
pop
arpl
sub
idivb
mov
pop
fildl
xchg
ja
cmp
adc
ds
mov
sub
cmpsb
popf
xor
add
mov
add
push
shll
fisttps
bound
aaa
pop
push
int
adc
sub
out
pop
aaa
xchg
or
outsb
mov
lods
xchg
pop
cmp
and
cmpsl
stc
cmp
out
mov
push
cmp
add
pop
out
sahf
pop
ss
mov
pop
cmp
stc
cmp
sbb
push
inc
jb
push
in
sub
mov
adc
mov
sbb
xchg
push
mov
jge
pop
fs
pop
mov
pop
or
cwtl
call
sarb
leave
mov
mov
ret
adcb
mov
cmp
pop
movb
fs
mov
and
repnz
in
insb
dec
test
jno
sbb
clc
mov
sahf
add
sahf
or
outsb
xchg
je
lock
dec
adc
or
fwait
mov
scas
in
mov
cmp
fistpl
insb
jae
sbb
cmp
push
bound
fbld
test
xlat
xchg
hlt
pop
outsb
call
mov
fisttpll
repnz
call
dec
sub
xchg
aad
or
int
xchg
lahf
mov
sbb
pop
bound
jno
jne
jg
lea
das
mov
mov
mov
out
mov
jge
aas
xor
fcmovnb
nop
scas
idivl
mov
int
cmpl
and
sbb
bnd
scas
ja
mov
add
pop
jo
fmull
js
es
cmp
xchg
movsl
idivb
sahf
sbb
lock
std
cmp
push
mov
push
cmp
out
or
lds
jns
roll
push
test
lods
fistps
pop
popf
pushf
notb
and
mov
jg
jae
lret
push
mov
pop
mov
ja
inc
pop
add
std
xor
ror
cmp
sub
or
dec
ret
ljmp
and
dec
lods
rcrb
jp
in
repz
sub
mov
popf
pop
movsb
iret
sahf
addr16
pop
out
mov
sysenter
xchg
mov
in
in
push
lods
sti
cli
aad
pop
leave
loop
lds
lahf
push
xchg
bound
das
xor
xchg
sub
mov
gs
xor
hlt
mov
fbld
hlt
mov
jmp
out
leave
leave
xlat
mov
xchg
inc
les
xchg
dec
sub
in
inc
xlat
cmpsl
xor
stos
mov
in
popa
push
js
je
pop
gs
jp
adcl
fisubs
fwait
push
orl
pop
cmp
inc
mov
data16
push
lods
ljmp
pop
pusha
dec
shlb
test
dec
call
adc
insl
rorb
shlb
aas
sbb
dec
xor
ss
jnp
insb
cld
push
add
loop
int3
lea
pop
popf
movsl
jno
jb
adc
stos
sti
xchg
sub
jae
sub
dec
pop
loop
test
lret
stc
add
push
aas
cmc
pop
add
pop
or
ficomps
dec
xchg
addr16
pusha
jle
cwtl
pop
pop
jg
leave
ficomps
popl
ds
mov
lods
mov
adc
fwait
mov
in
repz
cmp
push
mov
cmp
in
loopne
fildll
mov
mov
push
stc
lods
sbb
fistpl
out
in
xor
imul
les
in
outsl
xorl
not
pop
xchg
add
add
jge
xor
int
cltd
popf
jnp
sub
roll
enter
popf
mov
mov
jp
and
xlat
rcr
mov
dec
sbb
sub
gs
loopne
mov
out
cmp
ds
test
mov
xor
pop
addr16
rolb
and
mov
mov
xchg
icebp
scas
fidivrl
insl
mov
inc
dec
pop
pop
pop
iret
sbb
iret
push
jb
sbb
test
fiadds
ret
vxorpd
es
sbb
fdivrs
mov
and
lock
pop
rcrl
push
pop
adc
ja
inc
addr16
cmpsl
inc
pop
negb
mov
cltd
mov
mov
inc
outsl
es
fimull
mov
fs
and
cmp
cmp
and
data16
test
pop
and
xchg
pusha
xor
lea
mov
jnp
test
test
and
mov
mov
jmp
movsb
pop
cli
in
repnz
sub
jmp
lret
mov
test
jae
aas
pop
scas
ss
or
jno
push
push
in
add
sbb
mov
lcall
lds
fcmovnb
repz
loop
repz
push
fstpt
repz
adc
dec
int3
ror
fwait
js
pop
add
dec
adc
xchg
xchg
inc
addb
mov
mov
fldenv
sbb
popf
or
push
test
inc
xchg
into
int
inc
ja
sub
mov
ret
repz
int
mov
mov
sbb
pop
cli
add
or
sub
inc
pushf
sbb
aam
sti
mov
es
jmp
and
mov
xor
ds
imul
cmpsb
movsl
mov
mov
addr16
jno
hlt
dec
sbb
and
out
and
and
daa
jnp
negl
lret
shrl
inc
testb
clc
xchg
shll
cmp
sub
mov
bound
mov
mov
stos
mov
dec
sub
pop
add
pusha
scas
sbb
in
and
mov
mov
push
xchg
mov
jecxz
es
sahf
sub
mov
dec
fists
repz
and
jl
lods
je
pop
loope
pop
notl
mov
fldcw
ss
xor
mov
lahf
clc
and
rorb
dec
sbb
mov
out
imul
clc
imul
ret
inc
daa
jb
fcmovu
subl
enter
xchg
cmpsl
inc
ror
cmp
mov
jge
mov
outsb
xchg
xor
pop
mov
test
in
push
repnz
das
mov
out
sarb
addr16
rolb
push
sub
sti
and
pop
and
leave
in
push
dec
sub
mov
test
sub
outsb
push
pop
jge
cmp
inc
jge
inc
jne
sbb
mov
mov
fisttpll
arpl
xchg
fstps
lods
mov
xchg
insl
lret
xchg
in
ficoml
sar
sbb
ja
sbb
add
sub
cltd
adc
dec
mov
fnstenv
pop
cmp
pop
rorl
adc
fistps
mov
jb
jae
mov
xchg
ficoml
inc
mov
pop
sbb
and
mov
push
popf
mov
sbb
lahf
add
outsb
mov
sbb
add
add
inc
cmp
inc
add
adc
and
clc
xor
in
shll
aam
push
les
push
or
mov
mov
cli
jecxz
fisubs
mov
sub
sti
std
adc
loop
pop
lahf
movsl
loopne
and
insb
loope
pop
lret
push
cmp
dec
add
lret
mov
stos
inc
xchg
xchg
sbb
ja
iret
aaa
add
mov
add
lcall
std
loopne
dec
or
jecxz
pushl
sbb
inc
jns
adcl
push
daa
xchg
out
mov
sub
jl
pop
pop
ja
cmc
sub
mov
lret
mov
dec
add
sti
dec
loop
xbegin
inc
movsl
loopne
mov
cmp
mov
fcmovnb
cs
sahf
inc
outsl
imul
lock
mov
idivl
jecxz
cmp
lcall
xchg
mov
cwtl
pop
jge
in
push
push
push
mov
test
adc
mov
loopne
rolb
and
mov
cmp
pop
sbb
imul
sub
xor
and
pop
test
lret
movsl
test
rol
call
outsb
or
xchg
movsl
nop
aam
cmp
xor
dec
add
mov
aaa
push
or
lahf
inc
insl
mov
sub
roll
fnstsw
cmp
dec
test
hlt
addb
and
mov
mov
pop
fiaddl
ja
cmpsb
and
rcll
add
stc
push
into
push
jo
pop
add
pop
inc
xchg
ja
arpl
add
dec
lss
inc
mov
icebp
scas
jo
mov
shufps
adc
adc
clc
iret
lods
push
decb
sbb
stc
sbb
add
addb
jg
jno
sbb
xchg
into
mov
lret
dec
push
xor
lods
add
dec
adcb
mov
mov
rcl
mov
push
nop
inc
xor
and
mov
negb
mov
fbld
xorb
sbb
mov
insb
in
xor
ja
xchg
jmp
dec
movsl
mov
dec
daa
pop
mov
call
outsb
lods
sbb
cld
out
jp
or
ds
pop
movsl
jl
aaa
sub
sub
jbe
xor
repz
push
adc
std
adc
lds
lea
cmp
addl
pop
das
add
dec
in
jmp
and
shl
mov
movb
pop
and
movsl
jg
pop
data16
fcmovbe
mov
cmp
inc
sub
sbb
xor
bound
aas
mov
jp
dec
fwait
mov
lea
lea
jp
in
sub
dec
mov
cmp
push
in
lods
push
jecxz
in
inc
inc
cli
mul
rclb
enter
jl
lret
push
mov
dec
mov
fiadds
push
xor
in
or
sti
xor
cld
cld
jp
rolb
sub
repz
lahf
add
cmp
out
incl
sbb
lods
cmp
popf
xor
out
arpl
pushf
dec
pop
call
popa
enter
inc
pop
xor
dec
aad
loope
cmp
dec
jmp
inc
xchg
mov
stos
pop
cmp
addr16
push
dec
inc
mov
mov
imul
jnp
inc
leave
icebp
xchg
int
add
dec
js
mov
cmp
int3
orl
push
fiaddl
call
xchg
dec
jecxz
fwait
adc
sbb
adc
mov
xchg
enter
leave
push
fadds
add
cmpsb
xor
cwtl
xlat
icebp
setae
and
sbb
cmp
pop
into
sbb
sbb
xchg
mov
add
cli
dec
es
inc
inc
mov
sbb
cmpsl
ds
out
mov
pop
and
pop
lret
pop
das
sub
push
jmp
add
xor
lea
mov
and
mov
std
dec
or
stos
mov
inc
cltd
inc
repz
cmp
or
push
test
and
hlt
push
cmpsb
enter
or
xchg
and
xchg
push
lcall
imul
bound
cmp
pop
sub
add
shr
sub
cmc
imul
out
inc
out
sbb
cmp
mov
rcl
lds
jmp
mov
add
cmpsl
enter
rcll
pop
push
ret
loop
adc
cmpsb
imul
jne
xor
inc
jecxz
aad
pop
lret
xabort
pop
adc
push
loop
imul
jecxz
outsb
and
lret
lods
or
add
mov
mov
insl
push
cmpsb
mov
cmpsl
repz
mov
xchg
cli
xor
xchg
fnsave
out
in
jecxz
fistpl
je
jne
lcall
mov
into
sbb
mov
pusha
int
daa
push
mov
mov
orl
adc
and
ret
ds
js
ja
mov
dec
neg
sar
cmp
fldenv
push
subb
and
mov
cmp
jmp
fs
xchg
in
cmp
pushl
xor
mov
cmp
insb
and
push
repnz
sbb
mov
pop
jmp
xlat
mov
xchg
adc
int
pop
fiaddl
testb
lcall
dec
test
sbb
repnz
pop
ret
add
arpl
push
test
sub
repnz
ja
mov
cmp
xchg
insb
cltd
ficoml
jmp
add
lret
in
lods
xchg
insb
push
inc
pop
xor
cmp
loope
popa
push
in
jbe
ss
and
adc
jno
push
add
mov
mov
ds
xor
insl
les
cmp
xlat
psllq
pushf
pop
push
and
movsl
lahf
dec
adc
das
mov
stos
inc
test
mov
das
rcl
jne
xor
and
jno
roll
push
xchg
cli
mov
outsb
fadds
aaa
fisubs
add
aam
out
pop
pop
xchg
and
test
icebp
ds
mov
sub
add
pop
movlps
test
out
scas
leave
std
mov
and
cmc
cmc
or
mov
shrb
push
mov
in
out
push
outsb
movsl
mov
lods
dec
push
xor
fmull
outsl
dec
add
dec
mov
push
add
and
cwtl
cltd
xor
add
push
sarl
pop
loopw
sub
sbb
push
stc
call
add
push
xchg
enter
mov
test
jae
push
sti
test
cs
cwtl
ljmp
ljmp
andb
fsubs
stos
jge
arpl
jns
dec
lahf
mov
add
sbb
pusha
adc
or
outsb
inc
lcall
insl
inc
add
adc
dec
mov
and
lcall
or
enter
dec
dec
add
mov
xorl
insl
aam
pop
xor
loope
fadds
idivb
adc
ret
dec
or
ja
in
pop
mov
push
clc
ljmp
rcrb
push
pop
inc
lcall
sub
inc
je
pop
lret
mov
pop
and
jge
popa
push
mov
subb
je
ljmp
xlat
push
rcr
movsl
int
and
or
icebp
mov
sahf
ret
or
push
and
mov
shll
fs
jnp
and
or
jno
xor
jo
mov
pop
add
les
jmp
adc
stos
adc
mov
xchg
mov
pop
xchg
outsl
test
fcoml
mov
into
or
test
out
imull
movsb
pop
and
mov
jecxz
cwtl
in
pop
fistpll
inc
mov
ja
movsb
mov
lcall
mov
cmc
ud2
mov
mov
loope
int3
jbe
call
cmp
movsl
push
mov
int
mov
add
add
push
add
xor
inc
stc
inc
dec
mov
dec
aam
mov
dec
xchg
sbb
jmp
fldenv
dec
jg
cltd
rcl
nop
in
mov
loop
add
and
pop
in
nop
sub
mov
sbb
mov
repz
stc
pusha
xor
jl
inc
add
push
lods
into
pop
mov
or
xchg
aam
cmp
ljmp
test
mov
add
xchg
xchg
test
inc
out
in
jo
in
or
adc
pop
or
loop
adc
ss
jns
inc
mov
repnz
jmp
jle
repz
xchg
cwtl
in
push
or
pop
cmp
mov
mov
add
scas
xchg
dec
test
popf
push
adc
pop
shl
cmp
faddl
dec
xor
inc
in
add
std
insl
jg
pop
jns
mov
or
xchg
out
adc
mov
out
jl
push
xchg
pop
pop
or
jbe
and
xchg
mov
out
cmp
int
push
insb
fwait
pop
fs
stos
push
loop
cli
mov
into
or
loope
call
mov
orb
repz
sbb
inc
outsl
cmp
stc
aaa
cmp
xchg
clc
mov
pop
push
jnp
repz
mov
clc
mov
rclb
inc
leave
rorl
adc
pushf
ljmp
repz
sbbb
test
sbb
jns
adc
mov
add
mov
push
mov
inc
decl
mov
lea
gs
and
adc
mov
xor
jae
lds
jle
inc
sti
mov
mov
iret
lea
mov
test
ljmp
push
push
popf
lds
shl
lahf
cmp
and
rcrb
loopne
loop
out
scas
xchg
mov
lret
js
lds
or
stos
push
cmpsl
sti
fxch
fldt
xor
inc
cs
add
jnp
hlt
call
xchg
and
inc
mov
rorl
into
push
jge
imul
adc
popf
stos
mov
mov
out
jb
je
daa
fistpl
ret
push
adc
sbb
into
adc
jmp
out
pop
in
push
lock
lahf
test
ds
mov
lahf
jo
push
shll
fs
jbe
in
mov
outsb
daa
mov
cli
fs
push
lods
lds
cltd
imul
push
mov
xor
addl
rcrb
inc
jl
es
dec
mov
int
lock
cs
popa
out
pop
rorl
mov
sub
insl
ljmp
fdivl
jae
cwtl
sti
iret
push
cmp
shl
pop
mov
mov
push
lret
mov
xor
aas
adc
iretw
leave
jl
sarl
xor
insb
popa
cld
aad
fcomps
add
fcomp
aad
movzwl
jno
lods
and
mov
mov
and
out
inc
fistps
jp
imul
inc
mov
lods
out
sbbl
mov
sub
arpl
inc
xchg
shl
test
ljmp
daa
popf
dec
arpl
lea
dec
add
orb
jo
xor
dec
je
fadd
addr16
sub
inc
jmp
outsb
and
addr16
adc
jb
clc
cmp
popa
dec
push
mov
mov
cmp
les
add
sahf
fldl
adc
xor
pop
xchg
mov
clc
int
cmp
jl
pop
sub
jae
push
sahf
add
fsubs
xor
out
cmp
mov
jb
in
aaa
scas
aad
or
fcompl
pop
in
movsl
or
sbb
fistpll
push
test
push
arpl
mov
out
test
jle
pusha
mov
xor
mov
enter
loope
es
mov
mov
and
mov
mov
mov
cwtl
repnz
movsl
ss
cmpsl
lods
adc
inc
push
js
pop
sub
push
rcrb
dec
sub
aaa
xchg
adc
call
xlat
xlat
xchg
lods
test
pop
aad
jecxz
bound
mov
cli
and
add
das
cltd
dec
shll
sbb
mov
sbbb
sbb
movsb
inc
mov
es
push
rorl
mov
mov
jg
or
mov
push
mov
inc
jge
dec
jnp
push
xor
sahf
popa
adc
stc
mov
addr16
jg
sub
jp
mov
pop
test
das
repz
xor
mov
clc
dec
les
es
stos
popa
cwtl
xchg
dec
adc
xchg
cmp
inc
push
cmp
fstpt
or
mov
mov
pop
loope
fstpt
mov
mov
jo
stos
xlat
mov
nop
outsb
xchg
push
jecxz
les
mov
lea
movsb
push
sbb
xor
inc
sub
lods
adc
push
out
out
fnsave
movsb
sbb
push
push
xchg
adc
mov
adc
inc
in
aaa
jg
icebp
push
jecxz
insb
mov
push
repz
mov
test
push
shl
mov
and
push
lcall
movsl
sub
push
inc
movsw
pop
cmc
les
in
lret
insb
xchg
push
jns
mov
sub
and
mov
sbb
mov
fidivs
mov
dec
jmp
dec
xchg
xor
pop
jg
lret
lock
ret
out
out
xor
in
cmpsl
aaa
icebp
xchg
jp
cli
inc
fsubrs
out
pop
xchg
lcall
popf
add
ljmp
jo
scas
ljmp
scas
add
fsubrs
inc
pop
pop
cli
dec
lds
rclb
inc
out
pop
add
cmp
fs
xchg
add
movsl
lock
adc
iret
movsl
mov
fildll
mov
pop
pop
push
shrb
inc
add
adc
add
pop
push
jne
mov
xor
cmp
dec
pop
fs
out
cmc
ljmp
inc
xchg
neg
sbb
lods
jmp
jne
jle
adc
mov
pop
ss
jne
sbb
fildl
cli
add
push
xchg
jge
ret
icebp
or
xchg
mov
rcrb
mov
fwait
dec
push
in
cmp
mov
movsb
adcb
mov
call
mov
push
dec
cmpsb
orl
imul
aas
mov
loopne
dec
cmp
lahf
stos
ret
insb
les
ffreep
lret
inc
sbb
sti
or
push
rcll
pop
scas
push
add
jle,pn
out
movsl
pop
pusha
mov
rcl
call
inc
sbb
jns
ss
outsb
fstpt
in
cltd
pusha
ficoms
mov
and
test
mov
shl
rorb
in
les
je
cs
loopne
stos
jne
dec
mov
cmpsb
fsubrs
scas
dec
inc
rsqrtps
inc
clc
push
cmp
sbb
xchg
sarl
dec
dec
push
out
pop
jns
cs
jmp
cmp
rorl
cmpsb
lea
scas
stc
mov
xchg
or
inc
movsl
std
out
sahf
fnstenv
inc
sahf
adc
jbe
push
jae
cwtl
cmp
out
jae
xchg
aas
nop
cmp
mov
add
pop
cltd
stc
sub
xor
jmp
jg
aaa
push
add
cwtl
loope
fdivs
jno
mov
mov
and
fnstcw
lea
addb
rcrl
and
icebp
ret
insb
sbb
add
lret
fmull
mov
es
dec
mov
add
inc
js
sub
aam
jecxz
jl
mov
lahf
and
fcoml
jns
out
cld
push
call
pushf
ret
movsl
push
mov
or
xchg
jne
iret
sbbb
movl
nop
fcomi
mov
sbb
sub
clc
push
dec
sahf
xor
push
in
sbb
fsubrl
lods
jge
outsl
sbb
mov
and
fdivrs
and
xchg
and
sbb
mov
dec
lock
xchg
popf
aam
sub
inc
nop
add
js
jle
pop
sub
xchg
std
sub
mov
sub
scas
dec
xchg
leave
and
std
inc
push
adc
xchg
fldcw
xchg
bound
pop
sbb
cmp
lcall
ret
cmp
sbb
cli
adc
sarb
push
lods
ret
jmp
xchg
mov
mov
movsb
shll
test
mov
dec
js
jnp
sbb
lds
cmpsl
scas
rcrl
xchg
mov
imul
out
sub
push
in
mov
test
popf
cltd
add
ljmp
mov
add
push
addl
xchg
out
xlat
jae
stc
or
sarl
pushf
push
mov
dec
outsb
push
cmp
xchg
inc
rclb
jae
pop
mov
outsl
cmpl
mov
rcrb
mov
dec
pop
xchg
gs
jns
data16
lods
mov
or
sbb
lods
and
adc
sbb
imul
cld
movsl
jne
jl
divl
xlat
outsl
cmp
mov
mov
push
push
fcoms
test
mov
mov
outsb
lea
jge
jmp
inc
mov
test
xchg
push
sub
push
out
lcall
lods
jb
mov
fisttpl
mov
dec
cs
std
repnz
inc
ljmp
xchg
push
mov
add
dec
push
repnz
movsb
dec
mov
and
dec
mov
movsl
mov
bound
push
orl
cmp
add
inc
mov
and
cmc
movsl
sbb
dec
into
cmp
iret
and
push
sahf
das
repz
insb
aad
lds
jl
cli
fldl
inc
lcall
pop
neg
jae
cltd
iret
mov
jno
js
push
mov
out
pop
inc
lods
and
out
iret
ds
enter
inc
push
repz
stc
pop
es
mov
aam
jg
insb
pop
in
outsl
sar
and
std
lods
movsb
mov
pop
dec
ja
and
mov
lods
pop
cli
xchg
in
or
inc
cmp
sti
jmp
mov
ljmp
divb
push
xchg
xchg
int3
fwait
mov
shlb
push
fistps
popa
adcl
lock
rcr
psrlq
mulb
or
lods
push
addl
dec
lret
popa
movsl
mov
push
cltd
fwait
shll
call
fsubr
inc
addr16
push
mull
lahf
jmp
lahf
aad
mov
cltd
mov
jg
pop
ret
xor
dec
lcall
mov
push
outsw
push
mov
sti
fimuls
inc
sub
ret
je
xor
aam
push
mov
insl
decl
pop
push
scas
push
popf
fnstcw
popf
stc
xor
ds
inc
sti
pushf
repnz
ljmp
push
jp
mov
out
push
ja
testb
ret
out
outsb
mov
push
je
xchg
inc
add
push
sbb
push
arpl
test
adc
push
in
xchg
loope
dec
sbb
dec
push
dec
sar
or
rol
pop
jno
xor
shlb
and
jbe
mov
in
negb
test
or
cltd
lods
loopne
out
roll
jmp
std
and
imul
mov
test
js
and
push
call
inc
xor
pop
dec
test
xchg
jbe
mov
data16
out
mov
mov
add
cmc
aas
in
mov
jns
jmp
out
int
sub
push
icebp
cmc
xor
push
or
mov
mov
int
xor
mov
push
cwtl
and
adc
gs
rol
add
pop
out
loope
xchg
mov
inc
clc
xorl
pop
cltd
pop
xlat
adc
push
cmp
fs
test
movsb
hlt
arpl
les
push
add
mov
and
popa
or
call
sub
push
jp
push
hlt
jo
das
out
cmpsl
mov
les
mov
pop
leave
adc
mov
out
je
cmp
in
mov
dec
mov
outsb
push
cmp
add
sub
addr16
mov
dec
adc
arpl
sub
dec
or
icebp
dec
faddl
fisttpll
fisubrl
push
push
xchg
push
jge
popa
data16
pop
loopne
popa
sbb
repnz
add
adc
mov
cld
pop
sub
adc
rclb
mov
push
mov
imul
xor
mov
icebp
pop
mov
aaa
xchg
aaa
adc
adc
mov
xchg
ss
pop
or
in
mov
push
mov
pop
loopne
insl
insb
popa
inc
lret
jmp
sub
cmp
pop
call
test
cmc
leave
jns
mov
out
aam
jns
stos
jb
jbe
pop
mov
xchg
test
adc
sbb
xor
inc
mov
popf
push
jnp
cltd
and
or
xchg
mov
std
lods
dec
bound
fcoml
sub
lret
pop
mov
mov
adc
dec
adc
push
and
into
bound
mov
mov
ja
push
jecxz
jg
or
xchg
mov
popa
mov
clc
push
inc
test
jno
fwait
mov
loope
cmp
jg
add
lret
arpl
push
adc
mov
jbe
outsb
mov
aad
call
ret
mov
jns
xor
call
sarb
push
call
in
push
cltd
adc
push
in
jl
pop
std
lds
cmc
pop
mov
jae
xchg
dec
arpl
mov
mov
push
jecxz
arpl
mov
inc
aas
xchg
xor
and
sub
xor
mov
pop
outsb
fbld
mov
pop
xrelease
jb
dec
enter
xor
repnz
sbbl
sub
aas
mov
or
jl
dec
add
test
or
lock
pop
sub
dec
push
jae
cli
push
subl
loope,pt
loopne
outsl
or
jecxz
jg
icebp
push
adc
test
xchg
xchg
idiv
cltd
jae
mov
insl
mov
adc
in
lea
adc
pop
aad
sub
jnp
mov
out
jno
cmpsb
std
repz
push
ljmp
ret
lods
or
scas
stc
icebp
mov
addr16
je
out
fsubl
les
adc
sti
ljmp
pushf
and
lods
push
insl
mov
into
and
imul
in
add
inc
fs
push
add
pavgb
pop
jmp
movsb
xchg
jp
or
and
pmaddwd
and
cltd
in
jg
dec
cmpsb
jmp
xchg
dec
leave
in
cmp
sbb
imul
mov
and
and
sub
test
mov
ficompl
sbb
mov
repnz
pop
sub
mov
test
scas
repnz
fdivrl
xlat
jno
gs
into
mov
sbb
mov
insb
inc
out
inc
push
in
call
or
dec
lds
lock
in
add
pop
dec
push
lods
insl
cmp
pop
and
sbb
lods
mov
push
mov
clc
push
or
pushf
push
jle
pusha
sbb
cld
dec
sub
pusha
out
cli
xchg
jl
sbb
fiadds
pop
push
scas
add
movsl
in
cmc
xor
dec
jecxz
outsl
pop
das
and
inc
mov
or
xor
xor
stos
cmp
pop
mov
adc
out
or
ss
fs
into
sbb
test
sbb
xchg
or
daa
xchg
or
push
sti
xor
imul
mov
dec
repnz
xor
mov
add
hlt
mov
stos
mov
mov
into
faddp
arpl
ja
xchg
in
lds
mov
cmp
fisttpl
fsubrl
loope
stos
xchg
lods
das
cltd
lea
inc
stc
scas
fdivl
add
add
aas
lret
cmp
fisttps
popf
sub
jge
push
cmp
arpl
aaa
test
in
ret
mov
fisttpl
adc
xor
adc
sbb
xor
add
push
ds
sub
pop
push
arpl
adc
sbb
movsl
mov
loop
test
mov
inc
adc
lods
inc
dec
loop
xchg
lret
sahf
mov
shrb
test
clc
jge
in
test
sub
inc
fstpl
adc
in
fildl
cmp
scas
dec
sahf
ljmp
pop
dec
orb
sbb
push
inc
rorb
and
das
cmp
lahf
in
fidivrl
push
enter
xchg
xchg
js
in
in
out
and
or
in
outsl
mov
test
sbb
cwtl
jo
cmp
pop
push
add
or
mov
mov
cltd
imull
mov
icebp
mov
pop
fists
cltd
loopne,pn
movsl
add
sbb
inc
mov
popa
ss
ficoms
pop
mov
ljmp
mov
movsl
arpl
shlb
in
pop
out
movsb
cltd
lods
in
lea
mov
test
cld
mov
pop
aam
xor
cmc
ja
jnp
pusha
mov
or
out
insb
fwait
mov
test
jle
jb
fnstenv
pop
push
jns
js
sub
adc
or
xchg
in
cmc
mov
adc
xor
aam
rcrl
fnsave
fprem1
loop
inc
cmp
inc
nop
mov
in
mov
into
int3
mov
jbe
jmp
in
das
pop
mov
loop
les
ret
aad
mov
and
pop
ss
sbb
cmpsl
xchg
mov
iret
push
or
pop
mov
lock
mov
out
dec
xor
loop
dec
mov
pop
add
imul
dec
addl
mov
popf
sub
push
popa
sub
add
outsl
aam
mov
dec
inc
sbb
enter
xor
pop
or
pop
sar
jle
mov
js
js
cmp
rorb
jnp
stc
add
xor
sub
das
add
daa
ret
xor
mov
add
daa
repz
mov
xor
popa
push
imul
rcll
test
push
sub
out
push
fxch
add
ret
xor
mov
sub
les
fmuls
stos
scas
sahf
push
sub
les
adc
out
enter
out
addb
mov
iret
fucom
or
and
jge
adc
pop
fcmovnb
lcall
jo
add
dec
daa
mov
and
fidivrs
call
jae
lods
sbb
dec
int3
outsl
dec
cmpsl
sub
mov
dec
bnd
sbb
iret
dec
pop
aad
orl
or
mov
insb
and
pop
mov
push
jmp
leave
in
xor
mov
and
pop
cmpsb
xor
pop
cld
sub
es
mov
dec
js
addb
push
ret
xchg
lret
sub
pop
xor
scas
cmp
cmp
pop
shrb
mov
sub
stos
xor
xchg
sub
mov
ret
pop
fsubs
push
jbe
in
mov
cmp
jb,pt
sti
mov
push
cmpsb
inc
rcr
out
ss
aas
fimull
adc
data16
cmp
dec
cmp
lcall
aas
sub
leave
add
dec
and
in
aad
push
mov
loop
cwtl
dec
jnp
rep
mov
or
sub
dec
out
mov
mov
repz
and
stc
mov
popf
jl
sub
inc
test
divl
test
add
xor
lds
lods
ret
sub
ficoml
mov
xchg
out
aaa
xchg
shlb
sub
gs
xchg
outsl
cmp
leave
jno
mov
fs
push
imul
mov
ja
mov
lea
mov
adc
cmpsb
mov
xor
and
xor
std
add
aaa
inc
push
and
imul
xchg
and
push
cmpsb
icebp
or
cwtl
sbb
popf
imul
insb
outsl
add
fisubrl
outsb
cli
jmp
gs
cmp
shrb
jmp
in
repnz
rorl
xchg
cwtl
jecxz
aam
test
pop
xor
int3
or
mov
or
cwtl
xorl
mov
mov
push
jg
adc
insb
jp
sti
sub
dec
or
je
jb
cmp
repnz
push
outsb
add
rorl
lods
and
int
outsl
add
cmp
fs
cmpsl
mov
inc
jne
mov
sub
inc
mov
scas
dec
sti
aam
je
inc
xor
stos
aad
xor
rorl
aam
out
push
sub
cmpsl
xchg
stos
aaa
fwait
push
imul
sbb
popa
lds
mov
inc
rcr
and
outsl
push
mov
push
adc
push
gs
gs
addr16
inc
mov
sbb
lods
dec
jb
pop
ret
filds
mov
iret
jp
xor
shlb
inc
fldl
in
pop
scas
add
pop
aad
mov
arpl
jae
add
andl
add
es
jge
xlat
add
push
xor
sbbl
pop
in
imul
cmp
pop
out
add
ffreep
cmp
popa
ja
inc
push
and
xchg
mov
ljmp
cmp
pop
outsl
cmp
adc
scas
fistpl
cld
add
add
xchg
jecxz
pusha
xor
inc
insl
daa
lods
sbbl
mov
aas
dec
cs
lods
clc
xchg
ss
sbb
mov
mov
pop
shll
cs
insl
jbe
pushf
call
in
lea
mov
pop
out
sbb
mov
enter
bound
xor
sbb
ss
sarl
dec
sub
jle
sub
addb
jl
sub
lock
addr16
loop
imul
shrl
and
sub
cmpsb
xorb
pop
scas
jbe
pusha
mov
push
fnsave
sub
adc
xor
fs
loop
xor
push
mov
sbbb
les
push
test
es
and
xchg
cmp
out
jmp
aas
ffree
lds
or
mov
inc
cmp
xor
sbb
icebp
mov
popf
aas
movsl
sti
pushf
ds
das
mov
sub
pop
in
xchg
lcall
test
and
inc
lahf
pop
sbbl
mov
arpl
imul
lea
xchg
pushf
jne
jle
xchg
and
fsubr
lods
ljmp
daa
xchg
cmp
push
xchg
fnstcw
popf
aam
push
push
mov
pop
faddl
out
bound
test
dec
inc
or
dec
leave
movsb
jo
sbb
pop
and
fs
and
imulb
dec
jge
sub
cmp
mov
xchg
aas
pop
mov
pop
xor
cmp
aas
ret
fisttps
das
cmpsb
jnp
sbb
imull
inc
cmp
outsb
sub
push
pushf
testl
mov
int
lret
pop
notb
xchg
jp
std
or
aad
sbbl
jmp
push
cmp
xor
aad
out
insb
leave
jns
xor
dec
loopne
mov
sub
nop
push
mov
je
and
sbb
test
mov
jmp
inc
push
test
pop
lahf
in
mov
cwtl
insl
mov
mov
jmp
fcompl
dec
sub
test
add
xlat
mov
fisubrl
lret
shll
inc
push
in
mov
inc
sbb
lea
pop
shll
xchg
and
mov
cmp
cmpsl
lcall
push
cmp
subb
sahf
xor
arpl
sahf
jo
add
pop
and
incl
scas
cmp
nop
mov
fstps
pop
inc
jmp
pop
test
adc
popf
xor
les
mov
out
xchg
sub
fldenv
loopne
adc
fisubrl
aad
push
mov
xor
outsb
adc
jbe
mov
js
add
mov
inc
mov
xorb
int
ja
stos
push
shll
jae
hlt
insb
stc
push
jno
iret
inc
unpcklps
and
mov
mov
jg
mov
or
insl
scas
mov
cmp
mov
inc
sti
add
add
cmp
pop
add
add
and
sbb
loopne
xchg
push
outsl
shl
push
pop
cmp
sbb
push
pop
test
push
mov
cmp
call
adc
xchg
out
mov
out
dec
rolb
into
dec
pop
ret
push
sbbl
add
adc
pushf
repz
lock
mov
fs
cli
fisttpl
fs
sti
mov
mov
mov
outsb
fnstsw
ljmp
push
lret
mov
jns
adc
jnp
inc
popa
lahf
fnstsw
inc
jecxz
loop
mov
jecxz
scas
inc
mov
bound
inc
int
cmp
mov
xchg
mov
inc
sahf
mov
imul
out
hlt
dec
pop
sub
cmpsb
mov
jg
popf
sarl
mov
ljmp
insb
aas
dec
insl
inc
rclb
mov
xchg
stos
pop
int
je
inc
dec
xchg
push
ret
adc
xchg
nop
add
hlt
pop
and
sbb
lcall
dec
adc
int3
jmp
pop
push
add
sbb
das
push
in
shl
cmpsl
sub
xchg
int
mov
inc
push
mov
sub
enter
sbb
fdivrs
mov
int
adc
sbb
mov
rol
push
cmp
mov
mov
out
xchg
jge
mov
in
int
sub
imul
xchg
push
pop
pop
popa
sti
dec
popf
pop
sbbb
mov
jae
add
imul
sbb
xchg
xor
in
out
dec
lds
in
adc
mov
sub
inc
inc
jo
idivl
arpl
and
inc
popa
test
in
xor
mov
mov
sbb
daa
add
cmpsb
hlt
mov
enter
sub
push
and
jns
push
inc
cwtl
fidivrs
mov
enter
mov
mov
fsubs
push
mov
int3
push
push
push
adcb
cmpsl
add
sbb
iret
push
subb
dec
push
test
push
hlt
mov
fldl
sbb
sub
mov
mov
push
outsl
pop
dec
nop
mov
stos
jmp
dec
adc
or
ret
mov
jo
mov
mov
ljmp
out
jae
mov
cmp
inc
fs
pop
pop
pop
std
inc
or
fdivrp
pop
sub
adc
cwtl
mov
sti
push
inc
xor
jae
imul
popf
in
cs
sub
push
mov
add
stc
pushf
sti
inc
mov
fnstenv
pop
mov
push
mov
nop
sub
or
lret
xchg
xlat
pop
mov
jae
hlt
and
add
fisubrl
adc
mov
cmp
in
hlt
roll
jmp
fadds
leave
push
cmp
inc
xor
fsubs
add
loop
lcall
ret
movsb
movsb
fwait
or
jg
mov
addr16
cmpsb
xchg
stc
shll
mov
jb
xor
dec
out
push
mov
push
adc
icebp
sbb
pop
test
loop
mov
adc
popf
jne
lahf
scas
dec
xor
cltd
pop
stc
cld
cwtl
add
jmp
jno
sarb
mov
gs
cmp
xor
hlt
dec
lds
call
cmpb
push
jl
mov
and
jnp
in
iret
je
xor
push
push
data16
add
pop
push
mov
clc
lods
js
pop
push
pop
bound
shll
insl
cs
std
push
push
xor
inc
cmp
adc
sti
rol
loopne
xor
imul
movsb
pop
xchg
lret
rorl
mov
aaa
dec
xchg
mov
push
jmp
or
and
jnp
test
and
lret
dec
enter
repz
adc
cmp
lods
sti
dec
sub
mov
mov
mov
insl
stc
out
lods
or
pop
jle
loope
mov
sub
call
dec
sti
sbb
or
lcall
jmp
mov
xlat
aad
sub
inc
or
cmp
fxch
sbb
sbb
movsl
mov
sub
push
dec
insb
xor
aad
mov
mov
lret
repz
sqrtps
sarb
sub
xor
xchg
add
or
mov
lcall
adc
fwait
es
lcall
lret
icebp
dec
mov
sub
sbb
in
lret
jecxz
flds
jnp
addr16
or
add
popl
fldcw
sub
paddw
movsl
cmp
jns
out
sub
cltd
aad
xchg
cmc
push
dec
jl
inc
jo
and
add
xchg
mov
dec
sub
das
popa
cmp
mov
je
pop
stos
or
add
cmpsl
and
mov
add
dec
imul
imul
adc
aas
jmp
xchg
ret
pop
xchg
stc
roll
incl
push
out
aas
rcl
xchg
aas
pop
jecxz
cmpsb
mov
mov
jle
add
sbb
cmc
dec
sub
adc
js
or
mov
mov
mov
cwtl
shrb
dec
int3
add
movsb
fsubl
into
ljmp
sti
call
inc
mov
push
clc
les
sub
and
or
andb
mov
int
lahf
cmp
or
in
pushf
xor
mov
mov
insb
sub
test
xor
enter
outsl
sbb
pushf
adc
push
loopne
mov
xor
movb
idivb
push
pop
and
adc
cli
add
xor
mov
imul
push
and
js
lret
rorb
mov
add
enter
insl
mov
mov
push
cmp
jnp
jae
or
xchg
mov
sub
push
cltd
ds
or
fistl
sub
cmpl
push
mov
aas
dec
aaa
jbe
dec
fcmovnbe
sti
cltd
add
popa
filds
iret
or
mov
xor
pop
xchg
mov
mov
fs
popa
sub
mov
add
dec
fildl
cmp
push
aas
popf
sti
xor
sti
add
insb
lret
mov
test
movsb
xchg
jbe
mov
xchg
mov
aam
rorl
sbb
xchg
jmp
pop
push
mov
adc
and
mov
pop
subl
mov
sbbl
jmp
jecxz
mov
in
call
shrl
lcall
inc
mov
lock
icebp
mov
test
push
mov
sti
rolb
fiaddl
mov
add
cmp
fcoms
mov
iret
xor
xor
xchg
mov
data16
mov
loope
cmp
imul
mov
mov
add
jae
movsl
fidivrl
clc
push
mov
xor
js
rcl
add
pop
dec
pop
lret
dec
in
test
fldl
je
movsl
ss
ret
pop
jmp
test
or
inc
int3
sbb
pop
add
sbb
dec
xor
inc
cmc
dec
cs
stos
pop
mov
in
int3
xor
les
add
mov
bswap
outsb
data16
mov
push
adc
add
xchg
shlb
iret
in
insl
mov
ret
jecxz
outsb
mov
ljmp
inc
insb
dec
lds
gs
dec
or
fs
imul
xchg
sub
adc
xor
cmp
cmp
sub
cs
test
lahf
cmp
ret
inc
repz
loop
pop
mov
pushf
lea
lock
lock
pushf
xor
sbb
movsb
adc
adc
aam
xor
call
fmull
inc
aas
mov
orl
mov
mov
push
ret
sub
sub
sub
shrb
xor
and
sbb
int3
cmp
inc
fs
dec
adcl
sub
push
lods
mov
jo
jg
outsb
xor
mov
mov
stos
adc
cmpl
adc
cwtl
pop
jo
jmp
leave
lret
dec
xchg
mov
jnp
shrb
jecxz
mov
jmp
lods
in
xchg
and
sub
inc
pop
faddp
cli
mov
mov
xchg
mov
stos
adc
and
iret
jbe
in
fldcw
test
inc
jne
cli
add
xor
jp
sbb
int3
cmp
cmpsb
stos
lods
fs
push
add
call
mov
dec
scas
or
leave
push
push
imul
sub
lock
test
adc
movsb
dec
arpl
add
clc
ds
mov
pop
xchg
movsb
insb
scas
aas
adc
push
ret
lret
sub
aas
cs
jp
arpl
fisttpl
push
mov
sbb
xlat
testl
lahf
mov
lock
adc
push
mov
jnp
push
jecxz
jns
nop
cmpsl
pop
in
pop
xchg
lcall
dec
jl
cmp
and
shlb
out
je
mov
pop
cmp
sub
or
pop
sub
xchg
inc
les
mov
pop
in
add
add
sbbl
cli
dec
xchg
das
or
adc
jns
cmp
call
aas
outsb
xchg
popf
pop
inc
mov
mov
aaa
push
stc
aam
enter
xorb
movsb
sbb
jns
xchg
or
int3
movsb
or
jne
pop
cmp
adc
leave
pop
sbb
add
sub
cmp
jecxz
insl
aas
adc
repnz
or
jo
mov
mov
scas
cmp
dec
mov
adc
fidivrs
bound
or
jbe
test
popf
rcrb
outsb
pop
out
gs
insb
mov
dec
and
and
lret
or
push
loop
pop
jnp
addr16
sub
aam
out
fldenv
cmp
mov
adc
mov
pop
div
pop
cli
push
sub
push
test
sub
fisubl
jbe
push
xlat
jmp
out
out
and
inc
dec
out
lahf
pop
ficomps
push
mov
cwtl
xchg
add
test
jge
imul
mov
repnz
jmp
outsb
out
sahf
jo
pop
pop
scas
sarb
cwtl
pop
and
inc
jnp
inc
addb
pop
adc
mov
cmp
and
sbb
mov
fwait
in
dec
outsb
push
push
movsb
mov
mov
mov
mov
incb
sub
sub
lods
add
xchg
aas
vfrczsd
inc
mov
and
mov
test
loop
lods
fistpll
dec
jns
adc
inc
sbb
cli
dec
popa
mov
loopne
jg
sbb
and
push
out
mov
cli
addr16
scas
pop
lcall
mov
test
dec
lret
add
movsl
sbb
push
add
push
mov
aam
arpl
mov
pop
shrb
popf
cmp
and
aam
int
add
sub
inc
jns
pushf
sub
and
pop
rcll
shrb
testb
addr16
insl
aam
sbbb
in
ret
movsb
iret
mov
ja
lahf
iret
stc
cmp
dec
push
sbb
adc
pop
cmp
loopne
jns
in
fmuls
jnp
aas
cmp
mov
sahf
ja
fwait
xchg
mov
iret
xor
add
jmp
nop
sub
xor
in
jge
and
push
out
push
fsubs
mov
adc
decb
jne
pop
fdivs
adc
xor
das
cmp
mov
neg
inc
ss
cltd
mov
jp
data16
fbld
adc
jp
inc
mov
sub
stc
nop
outsb
stos
sbb
lret
subl
jmp
mov
movups
cld
mov
sbb
xor
ljmp
int
xor
mov
insl
cld
mov
je
and
mov
dec
cltd
icebp
mov
adc
mov
sbb
enter
push
gs
push
jns
lock
push
adc
adc
aas
gs
sub
push
jecxz
fsts
mov
cli
mov
int
test
ss
fldl
dec
xor
or
cli
and
test
ja
push
jecxz
call
pop
int
sub
sbb
popa
mov
pop
loopne
push
push
hlt
in
subl
aas
insl
jne
push
xchg
add
push
sbb
push
xchg
das
ds
inc
sbbl
sub
sbb
das
or
jne
scas
nop
pop
mov
xlat
movsb
add
xchg
jmp
and
inc
inc
pushf
ficompl
cmp
gs
jns
dec
ret
push
call
inc
arpl
pop
lret
cld
cmp
add
mov
cmpb
lds
jb
lret
or
les
push
sbb
dec
cmp
je
fwait
cmp
and
dec
outsb
aam
adc
aas
fstl
mov
add
cmp
xchg
sbb
ds
lahf
sti
int3
xchg
xor
fldt
inc
sub
sbb
hlt
xor
outsb
ficompl
pop
adc
ss
xchg
or
fadd
loop
pop
jp
and
inc
dec
xchg
mov
clc
pop
adc
fcoml
cmc
pop
je
ds
mov
mov
pushf
inc
jg
lret
cwtl
adc
nop
repnz
pop
test
push
mov
adc
js
push
into
hlt
into
shl
test
les
aam
xchg
mov
pop
cmp
push
fidivrs
add
cmc
cmpsb
sub
mov
dec
sub
ss
mov
adc
jo
cmpsl
pop
adc
jg
jns
pop
imul
mov
or
rolb
push
in
fdivl
inc
sahf
outsb
adc
pop
dec
jbe
test
test
and
stos
fldenv
repz
add
stos
jmp
pop
arpl
push
sbb
or
jmp
cmpsl
cmpsl
jno
je
or
add
jl
ret
push
dec
test
test
ss
scas
fldenv
push
jl
push
cltd
add
inc
sbb
imul
ret
in
sbb
dec
ret
inc
nop
lods
xlat
jb
arpl
mov
mov
xchg
cmp
mov
and
push
adc
jae
adc
sarl
inc
mov
inc
sbb
push
xchg
jbe
jne
jnp
pop
mov
movsb
dec
mov
add
xchg
rcr
push
loope
or
jmp
jnp
data16
loope
xchg
call
push
dec
lods
sbb
or
mov
ss
pop
cmp
ss
movsl
movsl
sub
hlt
dec
mov
add
pop
jg
fs
add
outsl
dec
cltd
push
lods
mov
inc
xlat
and
shlb
mov
lahf
push
jbe
int
mov
inc
movsl
aas
adc
icebp
adc
aam
lods
or
mov
mov
ds
pop
push
and
sub
rcr
sub
adc
jecxz
insl
loop
ret
cld
ds
in
or
inc
les
lret
out
xchg
or
cmp
out
pop
fmuls
adc
mov
sub
xchg
mov
dec
ja
mov
push
jbe
push
push
xchg
or
push
xchg
and
mov
not
cmpsb
or
cmc
adc
shlb
mov
push
fsubr
sub
inc
nop
aam
rcll
fdivs
xchg
out
adc
push
lods
adc
enter
lods
jp
sub
rolb
je
loopne
leave
mov
cltd
fsubrs
inc
dec
sub
pop
jno
mov
scas
aaa
mov
sbb
mov
dec
xlat
pop
mov
in
fmull
test
mov
xchg
push
dec
inc
xchg
pushf
ret
cltd
mov
sti
in
mov
pop
orb
test
inc
in
std
repnz
sub
ds
cli
xor
xchg
push
cmp
jno
xor
in
jae
jno
or
stos
das
push
jb
mov
fimull
js
xchg
add
ror
hlt
lcall
push
fnstsw
inc
pop
test
xor
sbb
jmp
aad
xor
arpl
mov
cmp
cld
stc
in
iret
in
into
cmc
add
sub
pop
popf
mov
mov
lea
sbb
sbb
movsb
push
inc
sahf
xor
movsb
scas
scas
sbb
adc
stc
fwait
aas
repnz
push
out
mov
mov
pop
cmp
lret
jl
xchg
xor
mov
movsl
inc
lds
jle
xchg
sbb
push
xchg
mov
push
xchg
jb
jns
inc
test
pop
in
xchg
addr16
jecxz
stc
dec
mov
mov
lcall
inc
xchg
push
jno
push
jge
cmp
pop
mov
xor
insb
movsl
fsubrl
shl
cmp
lcall
sar
mov
sub
push
shr
xor
aas
dec
mov
add
mov
cltd
add
arpl
enter
push
mov
aas
outsl
cltd
testl
inc
and
clc
loop
movsl
jecxz
and
and
call
inc
call
test
sti
mov
scas
sub
in
mov
cmp
dec
std
xchg
mov
rol
jae
shrl
scas
inc
dec
xor
cmpsb
decl
pop
sahf
pop
sub
jl
sbb
jg
sarl
push
push
sbb
in
xorb
mov
jp
les
push
mov
bound
call
add
test
xchg
pop
clc
out
add
push
sub
aam
rcll
xor
fidivl
ja
call
pop
das
je
dec
xchg
divb
rep
inc
xor
and
mov
xor
outsl
orb
adc
mov
aad
rcll
xor
xchg
pop
lahf
mov
sahf
jle
dec
mov
mov
jno
fdivl
inc
fwait
inc
xchg
push
sub
mov
push
xor
push
jb
int3
out
mov
adc
jmp
or
mov
pushf
jb
jp
mov
jmp
insb
aas
loope
or
movsb
test
inc
out
adc
mov
push
sahf
push
or
call
mov
or
mov
fs
aad
fistps
mov
lds
mov
push
leave
xor
cli
fsubrs
fsubrp
jg
fcmovnu
out
cmp
inc
testb
leave
adc
mov
lcall
das
pop
cmpsb
stos
adc
rcrl
dec
xor
and
mov
movsb
repz
mov
inc
mov
jl
scas
xor
jne
push
jl
fisttpll
sbb
rcrl
subb
adc
xor
rcl
xchg
sbbl
jecxz
xlat
insb
cmpsb
daa
lock
ds
popa
aas
cmpsb
push
mov
dec
mov
loopne
aam
push
xchg
add
jl
in
incl
enter
dec
sbb
pop
aad
mov
call
std
jo
sub
sbb
negl
std
idivb
addr16
inc
jbe
lods
sahf
mov
jno
dec
jle
jecxz
cli
pop
cmpsl
mov
loope
lret
cmp
push
mov
sbb
repnz
imull
sub
mov
pop
outsb
inc
icebp
pop
mov
mov
mov
mov
mov
sarb
int3
push
mov
xor
mov
fnstsw
xchg
out
push
jb
jns
popa
mov
rol
inc
xor
pushf
rclb
lds
ror
out
pusha
fcomps
jle
test
inc
xchg
mov
std
fistpl
pop
push
dec
pop
addr16
addr16
pop
xchg
pop
rorl
jo
xor
sbb
jp
adc
pop
and
std
mov
push
lds
push
and
mov
push
sar
sub
and
adc
xlat
out
repz
cmp
lods
dec
sub
mov
and
out
pop
xchg
mov
xchg
add
cmc
add
dec
lret
scas
jns
out
fmull
sbb
ds
mov
and
xlat
add
arpl
push
outsb
mov
cmpsb
xor
lods
adc
pop
sub
lea
insb
inc
fstpl
rcll
gs
push
mov
mov
loope
mov
faddl
mov
mov
adc
adc
xor
push
ss
jo
jne
jp
sbb
fs
dec
push
push
ret
jge
jae
dec
dec
es
test
lahf
repnz
std
pop
das
mov
pop
fwait
lods
mov
out
rorb
or
mov
js
push
xchg
ret
fisttpl
and
cltd
cmp
cs
add
cmp
pop
lods
mov
adcb
cmp
mov
jae
jne
cld
sub
add
callw
dec
sbb
xlat
popf
imul
mov
lcall
js
lods
ret
adc
jmp
sbb
adc
dec
cmp
jno
inc
xor
lods
push
ljmp
fimuls
imul
sub
lret
leave
pop
stos
pushf
and
adc
adc
jle
rclb
ret
in
cmp
adc
adc
scas
xlat
adc
or
mov
shll
sub
fildl
sbb
mov
cmpb
mov
cmpsl
lcall
rcl
cmpsl
insb
insb
add
mov
loope
jg
mov
les
cmpl
imul
clc
xor
rcll
bound
mov
xor
rorl
and
das
xlat
subl
ljmp
pop
jp
xor
popa
or
inc
pop
sub
pop
sbb
push
mov
push
push
or
fucom
int
dec
and
xchg
cmp
push
push
ret
sub
xchg
jmp
enter
jns
out
xchg
push
mov
push
dec
lods
push
ds
mov
jge
mov
xchg
xor
sbb
aas
mov
cmpsl
call
ret
dec
and
aad
fs
mov
pushf
test
stos
cmp
inc
out
inc
repnz
sbb
fstp
je
cmp
push
dec
popf
pop
pop
inc
in
mov
inc
push
repz
add
push
pop
xchg
loopne
outsl
mov
cmp
icebp
pop
je
inc
sbb
push
mov
loopne
fcom
test
into
nop
nop
addr16
lods
dec
pop
aam
dec
loopne
cmp
xchg
js
and
xlat
jg
sbb
outsb
movsl
mov
push
sbb
adc
sub
movsl
push
sbb
popf
inc
dec
and
jmp
cli
cmp
mov
jns
loop
fstpl
lea
mov
icebp
sub
xor
mov
push
dec
cwtl
dec
jmp
mov
shr
or
inc
nop
call
std
or
pop
sub
sbb
xor
movsl
push
out
adc
int
out
xchg
and
sar
mov
mov
dec
pop
xchg
cmp
pop
mov
jb
stos
jecxz
push
cmp
jns
mov
mov
push
adc
adc
sti
xlat
sub
sbb
out
pmaxub
mov
ret
push
cmp
test
in
outsb
cmp
sub
sub
test
lcall
pusha
xor
xchg
adcl
insb
mov
fisttps
mov
or
insl
movsl
or
repnz
test
cmc
mov
je
mov
xchg
cmp
adcl
dec
fs
lea
pop
int
test
ret
and
or
int3
stos
xor
jmp
jbe
sbb
mov
dec
int3
dec
sub
in
leave
push
repnz
movsb
addl
mov
dec
cmpsl
inc
inc
pop
aas
imul
jmp
lods
lret
repz
bound
pop
mov
add
loope
imul
pop
mov
push
pop
mov
cmc
cld
dec
push
imul
mov
sahf
sti
insl
lods
mov
add
int3
sub
mov
inc
daa
testl
inc
into
pusha
cs
loopne
mov
mov
and
cmc
repnz
push
jbe
xor
mov
push
cmp
fdivl
fld
jo
int
inc
jl
or
xor
push
lahf
mov
jnp
mov
scas
dec
sbb
jae
movsb
cwtl
fcoml
sub
push
sahf
test
mov
push
mov
notl
push
dec
test
outsl
movsb
stos
mov
out
fldt
mov
dec
arpl
movsb
aas
dec
bound
fwait
sti
and
cmp
test
repz
mov
or
insb
insb
mov
xchg
and
push
aam
out
inc
push
mov
cmp
jmp
mov
sahf
push
xor
rorl
jl
in
xchg
imul
cmp
pop
and
in
mov
repnz
arpl
lds
cmc
pop
and
shll
adc
daa
scas
push
cmpsb
lock
mov
cmp
ja
insl
outsb
ljmp
pop
sub
add
int
pop
push
inc
int
or
in
mov
or
mov
sub
in
push
test
mov
mov
cmpsl
popa
xacquire
mov
xchg
inc
fstpl
pop
iret
pop
inc
nop
jmp
cmp
pop
js
cmp
aas
ret
repz
add
push
xor
inc
clc
sub
mov
imul
inc
pop
push
sub
and
shll
cmp
mov
push
je
xchg
xchg
dec
or
pop
mov
daa
mov
cs
and
add
mov
pop
mov
cwtl
repz
repz
push
cmpsb
xchg
pop
subl
xchg
std
cwtl
mov
xor
jmp
mov
mov
sti
mov
jb
inc
sahf
xor
adc
sbb
stos
sbb
mov
outsl
xchg
ds
and
sub
pop
mov
sub
scas
cld
cmpsl
mov
jmp
mov
dec
mov
icebp
popa
js
adc
push
pop
stos
addb
push
inc
lods
data16
push
addr16
mov
cltd
inc
or
xchg
sub
ret
jmp
dec
or
adc
movsl
mov
pop
mov
push
rorb
xchg
mov
sub
cmp
or
and
mov
mov
mov
lcall
pop
sub
int
add
cmc
add
or
ja
hlt
inc
add
ret
mov
mov
push
in
sbb
sub
aas
imul
rorl
scas
xchg
mov
or
push
cmp
mov
mov
add
pop
mov
cmp
jne
xor
ss
inc
fisttpll
fstps
fs
mov
and
ss
jl
popf
push
jnp
daa
dec
xor
shlb
cmp
lea
fisubrs
fwait
cmp
jb
push
sbb
inc
out
mov
or
test
repz
dec
test
je
ss
xor
sbb
mov
out
adcl
xor
cmp
xorb
cmp
mov
xchg
sub
mov
fwait
test
lret
pushf
jo
loop
cmp
jo
push
scas
inc
push
jae
mov
adc
je
push
lods
dec
stc
aas
fidivrl
cwtl
jne
mov
jl
jnp
inc
stc
jle
jg
adc
js
adc
loope
pop
les
rcll
and
roll
aam
dec
sub
pop
out
in
push
fisubrl
fs
pop
daa
sti
jnp
in
xorb
lcall
inc
jns
rorl
fnstcw
iret
leave
popl
fcmovbe
jne
add
mov
push
adc
dec
mov
mov
mov
inc
js
fsts
jo
sbb
mov
xor
dec
iretw
repnz
insb
iret
pushf
mov
ret
insl
imul
push
sub
cmpb
and
adcl
mov
jne
filds
xchg
arpl
adc
jnp
sbb
movsb
mov
in
jle
mov
adc
insb
cmp
popf
xchg
fs
and
shlb
inc
rol
notb
jecxz
dec
jle
cmp
not
ss
js
clc
jns
push
cmp
dec
pop
sarl
xchg
bnd
mov
or
movsl
fdivrs
popf
ds
rclb
test
inc
mulb
mov
fwait
inc
xchg
hlt
ret
sbbl
adc
fwait
or
mov
inc
and
outsb
cmp
xor
push
fiadds
adc
rcl
das
arpl
inc
cmp
leave
push
aas
or
and
pop
outsl
out
add
push
bound
xor
stc
mov
pop
pop
popa
stc
sbb
mov
lds
or
dec
push
lds
mov
sahf
stos
jae
sub
sbb
movsb
sbb
pop
adcb
in
cmc
mov
dec
popf
shrl
pusha
mov
or
pop
sub
jnp
sbb
xchg
xor
pop
jmp
pushf
sbbl
adc
mov
std
out
fmuls
mov
pushf
pop
mov
loope
mov
out
jl
and
ljmp
cmp
repz
stos
jp
or
add
xor
jl
mov
pop
out
loopne
ror
fistpl
mov
pop
orl
mov
scas
push
cmp
mov
mov
cmp
int
push
mov
call
mov
and
mov
rol
dec
adc
cmpb
das
push
add
repnz
jge
xlat
xor
lret
xchg
pusha
and
xchg
mov
xchg
adc
in
repnz
enter
in
adc
xchg
mov
mov
mov
popf
mov
lahf
add
push
std
int3
or
cld
mov
mov
push
iret
cmc
in
jbe
pop
test
repnz
cmp
xchg
lds
mov
xor
lret
and
sub
pop
or
jns
xchg
in
pop
sti
aad
sub
lahf
jb
pop
pop
ja
leave
sbb
das
outsl
jg
cmp
fwait
ret
pop
pop
das
jge
mov
mov
or
push
fbstp
mov
xor
rorb
ja
inc
xor
cmc
inc
movsb
xchg
hlt
jmp
stos
dec
and
or
jmp
and
mov
fadds
push
xor
es
pop
jle
xor
dec
ret
mov
sbb
sub
aad
mov
stc
stos
mov
mov
aad
dec
shr
adcl
xor
outsb
mov
lahf
aam
xor
mov
bound
inc
leave
dec
imul
test
aam
xor
clc
push
jl
xchg
inc
mov
test
sub
in
jle
addb
fmulp
test
mov
and
testb
scas
scas
lahf
push
inc
lods
jnp
adc
inc
orl
mov
pop
adc
aam
outsb
lahf
out
xor
fistps
adc
cmp
mov
in
jbe
rcll
mov
xchg
hlt
pop
out
push
shl
mov
iret
cs
mov
outsb
xor
push
sub
xchg
xlat
loope
popf
fadds
je
lret
pop
roll
push
cmp
inc
shll
adc
cmp
outsb
inc
and
inc
cwtl
mov
push
dec
adc
popa
outsb
mov
adc
jle
mov
mov
repz
pop
cmp
inc
out
aam
inc
add
ljmp
push
out
mov
sub
dec
push
sub
sbb
xor
lret
push
lock
sarl
fstl
mov
add
xlat
push
enter
lods
lret
shll
lahf
or
mov
andb
cmpl
push
pop
clc
mov
popf
nop
push
cmpsb
andb
push
lret
xor
push
and
dec
push
xchg
cmp
sub
mov
mov
mov
jb
mov
cs
xor
out
and
mov
jg
cld
xor
pop
test
and
and
jbe
pusha
lret
dec
addr16
aas
xor
and
and
insl
xor
lcall
leave
in
dec
pop
insb
and
pop
add
pop
cmp
aad
add
outsl
xchg
push
cwtl
sub
jo
xor
sbbl
mov
fs
mov
aam
rclb
push
dec
cmp
fistl
ljmp
push
into
daa
shrb
int3
sbb
mov
push
shr
bound
mov
mov
pop
dec
ret
jmp
add
xlat
es
pop
push
mov
stos
push
ss
testb
ss
inc
out
jmp
xor
adc
imul
shrb
xor
sbb
inc
adc
inc
les
icebp
jecxz
or
jb
les
imul
adc
sbb
pop
dec
dec
xchg
rcll
loope
jmp
rcl
and
mov
aas
cltd
das
sbb
sahf
dec
iret
dec
push
jle
jmp
sub
jle
cmp
icebp
ja
bound
jmp
xchg
mov
cmc
and
mov
inc
insl
and
jge
xor
cmpsl
sub
test
xchg
push
jo
inc
cmp
cmpsb
push
dec
and
aas
cmpsl
xchg
out
xchg
adc
mov
insb
mov
ret
fwait
and
popl
xchg
negb
xor
data16
xchg
xor
push
loope
sub
out
jo
or
int
and
pushf
lea
push
xchg
push
jmp
sbb
fisubs
je
inc
and
pop
aam
push
std
push
out
dec
idiv
mov
mov
xchg
daa
mov
dec
adc
out
or
int
inc
jno
adc
stos
and
add
ljmp
xchg
test
mov
sahf
lahf
cmpsb
push
lret
lds
popa
es
add
lcall
call
int3
roll
adc
inc
lss
lock
push
push
adc
inc
xchg
int3
lret
xchg
jecxz
dec
push
sbb
inc
cmp
stc
imul
out
mov
stos
xchg
push
andl
mov
lahf
fmull
cmpl
test
xor
jmp
xchg
icebp
xor
mov
dec
popf
push
push
mov
sub
xchg
mov
in
sbb
cltd
ja
inc
jne
mov
cli
aas
psubusb
cwtl
dec
mov
aam
or
push
addr16
sbb
pop
or
jmp
mov
hlt
push
jge
xchg
insb
push
nop
outsl
lea
out
int3
inc
ds
push
in
cmp
push
xor
daa
imul
fstpt
stos
sub
xchg
sbb
cmp
or
roll
pop
adc
inc
roll
mulb
stc
cmp
inc
jg
insl
mov
xor
adc
enter
cli
insb
into
stos
or
push
fidivs
mov
jae
aam
jmp
test
ss
fistl
dec
cmp
jmp
repnz
inc
insl
ljmp
repnz
mov
cmc
and
sub
cld
daa
clc
jb
sub
bnd
lock
jmp
pop
lods
adc
mov
cmpsb
adcb
xchg
or
cmpsb
repnz
jns
inc
cmp
sti
cmc
fsts
jmp
dec
into
and
and
xchg
test
push
jns
addr16
cmpsb
and
aad
aas
xchg
jae
lret
mov
or
das
ret
roll
jmp
adc
or
inc
mov
sarl
or
aam
adc
setno
lahf
mov
rolb
xor
and
cmp
rcrl
cmp
popf
lea
insb
cld
cmpsb
movsb
lods
push
rol
pusha
xchg
mov
mov
mov
dec
dec
inc
sarl
not
pusha
sbb
ret
mov
fldt
xchg
inc
push
sbb
repz
xor
adc
cmpsb
test
cld
fadd
push
mov
leave
sub
adc
sbb
cld
mov
hlt
jne
fiadds
push
scas
in
sub
mov
mov
pop
dec
cmp
xchg
sbb
ljmp
jo
imul
sbb
add
jo
stos
cmp
in
jne
inc
iret
data16
popf
xchg
push
leave
cmpsl
or
fmul
hlt
adc
xor
scas
push
sub
push
jmp
dec
add
ja
push
mov
push
inc
std
in
inc
shll
xchg
xchg
pop
sub
and
nop
gs
leave
imul
push
xchg
jae
mov
cmc
cmc
add
mov
push
outsl
imulb
cmovbe
add
add
fistl
inc
je
push
mov
out
fistps
or
sub
lods
push
add
dec
pop
cmpsl
mov
xchg
cmpl
adc
push
in
jl
cmp
sub
pop
repz
mov
stc
sub
fsubrs
shlb
cmc
pop
jg
nop
mov
add
in
test
js
or
sub
mov
stc
jns
jp
rorb
stos
in
or
xor
jmp
addr16
sub
xchg
cs
je
addr16
jecxz
mov
repz
lods
jo
aad
xchg
cmp
jmp
xchg
dec
rorb
testb
xor
add
push
push
aam
adc
ja
add
jmp
scas
dec
adc
cmp
movsb
dec
adc
lret
ds
jecxz
popf
cmp
aad
icebp
pop
mov
stos
lcall
dec
dec
add
xor
mov
imul
arpl
iret
rclb
dec
rolb
push
xchg
or
ss
sbb
scas
mov
push
sub
int
cli
scas
jp
cld
fdivs
jecxz
cwtl
arpl
outsl
mov
xchg
out
and
push
scas
inc
jg
xbegin
hlt
jecxz
adcb
mov
jg
push
lahf
pusha
adc
xor
mov
jge
mov
adc
mov
and
and
imul
fs
out
xor
pop
rcr
es
adc
jp
adc
iret
sub
cmp
jo
cmp
pop
loop
in
lods
imulb
rcrl
in
sarb
inc
dec
test
ret
ss
fdivs
inc
popf
mov
cmc
adc
iret
pop
dec
and
dec
push
movb
mov
bound
fwait
test
xchg
xchg
mov
and
scas
xor
in
leave
sbb
fistl
fstpt
insl
ret
mov
lret
mov
xchg
xchg
push
add
insb
xchg
leave
fxch
hlt
test
mov
mov
sbb
icebp
xor
cs
dec
mov
dec
mov
shrb
lds
pop
xchg
leave
test
mov
hlt
roll
sahf
mov
pop
and
movsl
xchg
mov
push
mov
jae
sbb
cmp
jg
out
popa
ss
pop
fidivrs
js
rorl
xor
mov
popa
dec
bound
rcrl
inc
imul
mov
cli
cmpsb
mov
sbb
lcall
mov
push
jl
stos
adcb
adc
sbb
sub
fwait
jae,pt
inc
js
and
lret
dec
jns
mov
xor
xchg
fsubrl
decb
sub
mov
or
pop
add
test
sub
jp
lcall
loope
call
mov
and
pop
add
dec
pushf
jne
ja
loop
lds
mov
std
jae
xchg
cmpsl
ret
test
clc
push
bt
and
jnp
repz
stos
adc
mov
ljmp
mov
dec
jecxz
incb
mov
cwtl
add
out
leave
mulb
mov
sub
mov
shrb
sbb
mov
ret
mov
int
cmp
and
push
dec
inc
fisubs
cwtl
das
sti
jle
call
jle
sbb
popa
push
mov
dec
inc
xchg
testl
dec
mov
scas
ss
cmpsl
add
ljmp
jbe
test
sahf
jmp
add
mov
ret
xchg
xorl
mov
pop
add
aad
xchg
repz
popa
mov
sub
xlat
scas
pop
push
inc
hlt
test
nop
fldl
xor
dec
in
lods
pop
lds
lret
fmull
sbb
pushf
cld
or
inc
inc
jmp
sbb
cmp
add
fistpl
sti
mov
repz
push
and
inc
std
lret
jne
ss
cld
repz
mov
repnz
mov
aas
leave
cmpsb
sbb
xchg
xchg
clc
das
stos
pop
out
mov
movsb
outsl
les
sbb
add
leave
cmp
sbb
outsl
out
sbb
sub
mov
test
sbb
xor
fildl
addr16
fbld
adc
movsb
mov
xchg
stos
mov
fwait
test
addr16
cmp
push
cld
mov
mov
and
xchg
adcb
lea
push
lods
push
subl
dec
sbb
pop
fs
cs
stc
mov
jo
loop
jg
add
jnp
mov
xor
enter
dec
jbe
pop
add
xchg
xor
jl
cs
mov
sbb
xor
out
fisttpl
push
xor
dec
sbbl
loopne
push
pop
xchg
popa
shlb
test
mov
insb
lahf
mov
cld
outsb
adc
idivl
data16
test
jno
gs
xchg
mov
pop
inc
and
lret
jo
das
pop
dec
inc
mov
sarb
mov
jl
mov
sbb
das
and
aam
push
mov
es
aad
mov
lods
xorb
aas
pop
jmp
mov
nop
xor
cmp
inc
push
pop
cmpsb
push
and
das
cld
jg
and
cmc
int
ret
xchg
in
mov
test
loopne
insb
push
adc
push
imul
sub
lea
push
or
add
fsubrs
int
push
fistps
aaa
ficoms
arpl
jp
jne
push
mov
pushf
stos
test
push
fdivrp
in
loop
jae
out
mov
adc
pusha
sbbb
icebp
dec
push
ds
push
repz
clc
ss
or
sub
pushf
add
mov
mov
jb
mov
xchg
push
fcmove
mov
fstpt
data16
in
in
xchg
push
test
cmp
or
inc
xchg
push
cltd
inc
out
jb
push
test
and
cmp
push
icebp
mov
lahf
cmp
sbb
dec
push
jmp
xchg
test
fldenv
lods
out
push
and
dec
add
test
push
mov
xor
xor
mov
cmp
mov
dec
sub
cmp
mov
push
xchg
addr16
cmpsb
scas
add
push
je
or
mov
sub
loopne
movsl
mov
mov
mov
cmp
push
jp
ss
fdivr
xchg
aad
xchg
and
stc
mov
xor
lahf
clc
pop
xlat
stos
lcall
cmpb
push
arpl
dec
sub
les
lret
push
out
lods
jns
pop
lds
mov
je
push
push
push
pop
and
and
andb
dec
push
int3
push
ss
jae
les
dec
cmp
sbb
add
pusha
sbb
jecxz
jmp
std
stc
mov
mov
lcall
mov
lea
cmp
int
pushf
push
xor
mov
jnp
jle
hlt
mov
cmp
pop
sbb
cmc
imul
outsb
cmp
jno
inc
mov
jg
dec
push
dec
loop
add
dec
add
out
enter
dec
sti
pop
or
ret
jmp
push
or
stc
pop
orb
es
pop
push
inc
jo
mov
cmp
lock
imul
add
test
mov
dec
add
movsb
fwait
mov
daa
aad
cmp
rcrb
and
add
ret
iret
dec
lahf
lret
gs
xchg
cmp
cmp
data16
adc
push
mov
pop
adcw
int
ds
stos
fstps
sbb
mov
push
lret
fsubl
add
sbb
jle
sbb
shrb
mov
stos
mov
shlb
test
dec
sti
jp
pop
iret
test
outsl
adc
fwait
in
ret
jmp
scas
push
pop
xchg
xchg
inc
lcall
inc
and
ret
cmc
xchg
into
inc
dec
dec
pop
xchg
lret
aas
ljmp
hlt
sbbl
icebp
pop
push
cmp
dec
xor
lcall
addb
xchg
sbb
cmp
mov
mov
adc
cmp
push
dec
xchg
mov
jb
jge
shlb
or
hlt
mov
repz
inc
jge
fmul
dec
mov
sub
pushl
clc
int3
pop
pop
incl
sub
cmp
dec
ss
lret
mov
sbb
roll
cmp
ljmp
sbb
pop
xchg
inc
stc
adc
cmpsl
jno
out
push
call
mov
cwtl
js
into
aaa
xchg
or
push
pop
push
adc
jbe
push
sub
inc
sbb
cmp
test
cmp
jl
dec
shrl
mov
outsl
out
mov
mov
inc
in
cmc
fwait
dec
pop
in
ss
adc
rcrl
sbb
stc
test
dec
je
sbb
into
mov
dec
das
mov
sbb
sub
fstp
jno
lods
out
iret
xchg
imul
dec
jmp
jg
sbb
bound
adc
add
xor
inc
test
push
mov
pop
dec
sbb
xor
scas
out
mov
xchg
mov
pop
pop
jns
into
iret
gs
cmpl
cmc
dec
shlb
je
mov
rclb
push
sub
dec
fs
lods
pop
jb
add
dec
xchg
xchg
es
dec
and
int3
jae
mov
ja
ficomps
mov
bswap
push
je
push
idivl
adc
ss
repz
cmpb
dec
sub
push
mov
add
add
aam
insl
push
aaa
filds
dec
xor
cmpsb
aas
ret
cmp
cmovbe
add
out
int3
sub
out
fcoms
in
notl
ret
mov
add
xor
rcrl
inc
fcoms
mov
add
dec
les
push
stos
test
adc
mov
fwait
adc
cld
mov
jg
int
jle
mov
mov
aas
push
insb
mov
mov
push
jne
std
xor
mov
leave
sub
dec
xchg
xor
push
outsl
ljmp
sbb
loopne
cltd
xlat
sub
std
clc
xchg
or
dec
scas
imul
pop
and
jle
mov
xchg
sbb
popl
icebp
xor
sub
sarb
push
push
push
dec
cmpb
shll
dec
sub
imul
jg
jle
inc
adc
aad
pop
scas
mov
or
mov
inc
mov
add
jmp
mov
sub
pop
xor
and
repz
jne
fsubl
inc
ret
adc
test
sbb
adc
loop
sbb
lds
or
inc
rcl
bound
add
imul
sahf
push
mov
popa
and
add
mov
popl
cwtl
testl
das
loop
leave
and
into
or
xchg
inc
adc
in
out
aaa
dec
add
fwait
mov
xor
mov
bound
push
push
or
xchg
pop
sbb
or
xchg
jle
mov
ss
pushf
jbe
mov
pop
imul
inc
pop
dec
call
mov
sahf
push
rorb
push
cmp
adc
sub
test
xacquire
sbb
in
cmp
decl
mov
outsb
jb
imulb
lret
fs
dec
mov
xchg
mov
or
bound
repnz
jno
loopne
mov
into
pop
aam
repnz
or
loop
rorb
loop
sahf
push
xchg
mov
in
pop
mov
daa
cmp
insb
mov
adc
in
or
jns
xlat
mov
sub
dec
inc
mov
jnp
pop
jbe
xor
fdivrs
sbb
lcall
pop
fistps
inc
pop
inc
loop
imul
fdiv
jmp
call
das
out
scas
aam
sbb
ds
test
and
adc
into
into
pusha
out
mov
test
cmp
xchg
mov
push
insl
in
dec
lea
adc
pop
jmp
jbe
cmpsl
fadd
aaa
sub
shlb
loopne
add
and
xchg
inc
stc
insb
jle
jb
xorb
rclb
mov
and
cmp
add
cli
sbb
jno
pusha
or
jnp
xor
mov
dec
lods
stc
pop
xchg
jle
and
pop
adc
mov
je
lea
push
in
cmpsb
sbb
push
cmp
xchg
mov
sbb
imul
sub
cltd
insl
or
enter
adc
js
rorl
clc
mov
jecxz
test
push
mov
das
loop
loope
stos
mov
push
shrl
mov
lahf
sub
xor
movsl
movsb
mov
mov
test
fnstsw
in
mov
cld
in
gs
sub
js
aad
adc
mov
call
xlat
cmpxchg
shll
movsl
add
sub
outsb
fmuls
mov
sbb
sbb
and
and
push
outsb
fisttps
sahf
jmp
mov
daa
adc
in
or
and
xchg
movnti
or
int
lret
push
sbb
mov
mov
jle
mov
dec
flds
fisubs
data16
jno
adc
ss
fisubs
push
lret
sti
or
mov
gs
leave
popa
jl
add
push
out
xor
and
outsb
hlt
inc
xchg
rcl
arpl
cmp
flds
cld
inc
ret
sub
pop
fs
mov
and
scas
dec
pop
push
mov
aas
add
sub
jmp
xchg
add
xchg
adc
imull
cmp
negb
cmp
jb
sub
and
cmp
stos
xchg
xor
adc
sbb
call
or
cltd
push
insl
cmp
cli
cmp
pop
jbe
inc
loope
out
mov
cltd
outsl
cmc
sub
push
cltd
out
aaa
sub
add
push
testl
cmp
fcmovne
lea
dec
or
jl
lds
pushl
cmp
out
sub
or
lds
cmp
mov
inc
sub
jle
scas
xchg
in
xchg
test
xchg
into
push
fistpl
or
lea
test
stos
test
subb
fists
and
xor
or
sub
cld
sbb
xchg
and
outsb
aas
gs
mov
add
aas
aas
and
out
mov
jb
jg
addr16
mov
sbb
mov
int
outsb
data16
pushf
test
xchg
sahf
jno
test
movsl
pop
jle
mov
jle
mov
in
call
enter
sbb
inc
xchg
aam
push
std
repz
or
and
out
repz
movsl
adc
imul
push
dec
adcb
nop
loop
out
cld
jne
jmp
jmp
stos
sbb
xchg
les
in
mov
mov
jne
mov
cmp
xchg
lods
mov
lret
ds
addr16
call
xor
lods
imul
lahf
cmp
xchg
push
dec
pop
or
and
popa
push
ss
ss
and
add
int3
xchg
fwait
xchg
rolw
mov
xor
lcall
popf
ret
lods
cmp
fsts
mov
pushf
and
arpl
xor
sub
aas
or
daa
add
mov
mov
and
cwtl
mov
lods
das
xor
dec
scas
into
fwait
xchg
test
add
les
repnz
scas
iret
adc
jl
or
lds
xlat
aad
jmp
outsb
mov
insl
mov
es
push
mov
push
mov
cmp
loope
sub
adc
dec
lcall
and
sbb
xor
inc
or
dec
lods
sbbb
add
ja
and
lds
dec
int3
je
dec
movsl
mov
push
mov
out
fcmovb
mov
jmp
cwtl
test
dec
jns
stos
ret
mov
pop
jecxz
mov
inc
jns
adc
call
pushl
lock
test
lret
aas
pop
fiadds
jmp
jge
mov
jp
xchg
leave
fisubrl
mov
sub
pop
aad
mov
addr16
ss
call
push
mov
dec
insb
xchg
fs
xchg
lods
int3
jns
incl
jg
dec
mov
push
popa
push
lret
mov
cli
leave
pop
mov
sub
test
mov
jecxz
xor
aam
icebp
mov
jbe
subl
cmp
ret
add
ja
sbb
jp
add
fs
mov
dec
add
pop
cs
dec
test
scas
arpl
add
xchg
mov
and
mov
into
pushf
adcl
leave
std
clc
addl
mov
pop
sub
or
outsl
dec
pop
loop
mov
pop
add
xlat
mov
inc
ret
in
lcall
dec
enter
cltd
cltd
std
test
out
push
and
and
sub
cmp
insb
pop
xchg
sti
rcr
cmp
jp
xchg
sbb
cmp
xor
push
ja
cmp
ret
inc
xchg
fucomip
pop
das
push
fisubs
pop
imul
movsb
test
lcall
lcall
mov
cmp
fdivrp
inc
fbstp
push
fnsave
push
jbe
and
out
push
jae
and
cmpsl
icebp
push
lret
xor
mov
push
test
aaa
cmpl
jle
dec
mov
or
pusha
dec
mov
int3
movsb
addb
arpl
jle
mov
mov
sbb
inc
fstp
rorl
adc
or
repnz
xor
mov
in
jne
les
mov
xor
lret
jae
add
xor
adc
cmp
inc
jge
jp
push
aam
icebp
fwait
imull
xlat
jl
insb
and
subl
rolb
xchg
lods
repz
or
dec
aas
out
dec
add
addl
es
fistl
mov
push
sub
aad
xor
mov
sahf
fisubrs
dec
or
inc
mov
sarb
push
add
cltd
jae
pop
add
mov
idivl
jmp
or
cmp
stos
das
movsb
insl
aaa
icebp
test
aad
daa
cs
push
and
sar
cmp
jo
and
cmp
test
adc
repnz
fdivrl
mov
xchg
adc
jle
mov
sti
scas
xor
test
jb
and
push
loope
cmp
xchg
lds
and
sub
sbb
push
fdivrs
add
or
idivl
incb
pop
add
test
shr
xor
pop
int
sub
mov
add
out
cli
pop
dec
fldt
mov
add
mov
add
lods
mov
cmp
sub
rcr
sub
push
pop
das
es
jns
lea
lock
sti
cltd
mov
sub
pop
das
push
mov
push
cmp
cwtl
mov
rcrl
xchg
sub
mov
lds
mov
xchg
push
and
cmp
mov
stos
adc
inc
mov
insl
stc
cli
pop
test
loope
xchg
and
push
cmp
push
or
sahf
dec
ret
movsb
inc
inc
push
cwtl
inc
fwait
sub
cld
mov
pop
movsb
testb
pop
jns
push
lea
cmp
adc
sub
enter
dec
rcrl
and
adc
jo
cmp
je
orl
mov
dec
cwtl
in
pop
or
stos
movsl
divl
mov
mov
xchg
fisttps
mov
mov
out
sub
fstpl
jecxz
or
mov
mov
inc
and
fwait
or
mov
popf
ret
les
cld
repnz
xor
movsl
mov
mov
adc
mov
in
popa
cli
sti
cs
xchg
mov
sub
and
adc
popf
ja
adc
mov
push
or
orb
inc
xor
data16
icebp
mov
aaa
ror
xorb
push
mov
xchg
bound
or
inc
insl
out
xchg
enter
cmp
push
std
ret
push
adc
mov
inc
gs
pop
popf
subl
jns
shrb
adc
adc
and
sub
mov
mov
mov
xlat
xlat
stos
push
stos
or
in
mov
dec
adc
adc
in
sbb
subb
cmc
dec
push
jmp
jns
dec
inc
mov
xchg
mov
aas
xorb
scas
xor
sti
mov
sbb
out
cmpl
add
jecxz
stos
movsl
lds
xchg
fdivrp
hlt
leave
fcmovnbe
out
mov
orb
xor
add
push
aad
stos
xlat
fmull
xchg
xchg
movsb
out
xchg
adc
mov
push
out
je
mov
mov
and
into
jne
xchg
add
jns
inc
or
jnp
out
movsb
inc
repz
mov
lock
mov
fnstsw
cmp
add
rclb
jae
or
sub
ret
cs
ret
xchg
enter
imul
idivl
repnz
push
adc
fwait
or
xlat
cmpsl
mull
repz
mov
fs
ss
insl
ret
dec
popa
stc
sahf
sbb
push
cmp
pop
stos
mov
xchg
das
add
jae
aaa
call
push
in
and
in
loop
jmp
mov
pusha
leave
mov
in
xor
repz
je
push
out
cmp
in
lea
jge
add
mov
fcompl
push
inc
and
xchg
aas
xor
push
sbb
push
xor
addr16
cmpsl
outsb
xchg
mov
fists
repnz
dec
and
push
adc
xchg
daa
shlb
jns
lea
cmpsl
roll
dec
mov
in
push
clc
jo
or
popf
popf
jle
sbbb
push
adc
xchg
mov
inc
addr16
and
lods
jp
subl
lret
xchg
stos
cmp
inc
mov
inc
dec
xor
xor
pushf
sub
dec
in
enter
cmp
test
pop
pop
lret
lcall
sbb
scas
insb
repnz
mov
nop
cmp
jle
inc
int3
adc
add
inc
cmp
movsl
cmp
cmp
out
outsl
shrb
lret
or
ret
ljmp
je
loop
movsb
lret
push
xchg
fadd
int3
ja
insb
pop
jbe
inc
or
in
push
and
pop
xchg
and
shl
jmp
xchg
mov
xlat
insl
mov
push
sti
aaa
pop
mov
mov
dec
les
sbb
and
mov
dec
and
jmp
aad
loopne
mov
sub
jb
icebp
test
loop
lods
sbb
push
pop
adc
sub
mov
sbb
xchg
shrb
cwtl
lds
push
mov
movsl
mov
pop
ficoms
xor
aam
cmp
hlt
adc
clc
negl
enter
into
or
dec
je
xchg
aam
or
fidivs
push
adc
xor
add
fildl
mov
or
pop
mov
mov
sub
push
test
cmp
xor
lea
and
xchg
xchg
sub
push
shll
cmpsl
outsl
dec
lods
iret
or
mov
rorb
push
aad
movsb
imul
das
mov
aam
cltd
cs
out
lahf
add
subl
push
push
xor
cltd
outsb
in
adc
sbb
sbbb
dec
pop
xor
ret
inc
ljmp
jnp
sbb
pop
lds
pushl
dec
inc
dec
test
and
not
sbb
sub
lret
inc
adc
paddusb
aad
ret
lods
shll
jo
push
push
fdivs
ret
mov
jge
dec
dec
insb
and
ljmp
xchg
daa
xchg
mov
dec
mov
and
inc
xchg
push
mov
icebp
arpl
mov
std
shl
push
aam
imulb
bound
testl
push
inc
into
in
mov
sti
loopne
mov
adc
es
push
mov
fldt
cltd
out
sub
xlat
stos
push
movsb
aam
xchg
adc
xor
inc
das
sbb
or
arpl
and
fdivl
lcall
mov
mov
adc
xor
sub
movsl
ret
daa
rclb
sub
in
ret
mov
push
cltd
sub
scas
mov
mov
add
ja
pop
rcl
inc
jb
cmp
incl
mov
lahf
aas
ret
add
xor
pushf
inc
aaa
enter
pop
in
sbb
in
test
xchg
lods
test
popf
cmpsl
lret
dec
adcb
jecxz
mov
inc
popf
ljmp
add
pushf
inc
cmpsb
gs
ljmp
iret
cmp
loopne
xchg
dec
xor
mov
jnp
jg
mul
test
dec
cmp
test
push
mov
mov
cli
mov
addr16
test
js
cmpsb
mov
imul
add
xor
fldt
and
push
div
push
adc
push
adc
adc
push
xchg
addr16
mov
inc
xlat
icebp
lret
sub
frstor
sbb
push
icebp
clc
jg
inc
jne
cmpsb
cmp
inc
jo
mov
mov
gs
or
fists
sub
and
repz
cmpsl
push
cmc
dec
xor
or
mov
jbe
in
loopne
int
adc
test
cmp
sub
adc
mov
or
clc
pop
or
lds
cmpsb
inc
test
mov
or
sub
das
shl
cld
sub
sti
xchg
push
lret
and
insb
add
sahf
or
jmp
mov
addr16
mov
movsb
pop
add
pop
mov
fldt
mov
inc
inc
lea
push
pop
out
mov
pop
push
adc
or
out
xchg
cmpsb
push
cmp
dec
push
sub
mov
pop
inc
push
sarb
or
pop
mov
mov
in
les
inc
mov
mov
leave
cmpsl
jge
arpl
inc
mov
add
sub
mov
push
out
cmp
push
icebp
cli
push
pop
ret
ds
inc
sub
fnstcw
xor
pop
idiv
sub
test
int3
adc
mov
aad
jmp
sbb
test
or
lock
cwtl
dec
cmp
inc
jo
mov
xor
loop
and
inc
mov
xrelease
push
std
xlat
push
pop
push
je
mov
jp
lock
and
mov
std
jne
sub
outsl
cmp
and
and
push
ds
inc
aas
xor
jbe
mov
out
mov
and
or
loop
pop
int3
add
push
xchg
pop
stc
push
cmp
ficompl
jmp
lods
sbb
into
aas
sar
add
sbb
lahf
push
xchg
ljmp
sbb
adc
mov
mov
push
dec
cmp
loopne
inc
xor
and
jnp
cmp
lret
fstpl
cmpsb
leave
lahf
lcall
sub
pop
out
dec
mov
push
jle
outsl
fldenv
into
aam
mov
sub
mov
mov
or
mov
mov
lcall
push
mov
jmp
lcall
pusha
jmp
in
pop
add
inc
or
xor
pop
das
ja
iret
mov
nop
mov
jge
icebp
push
cli
iret
mov
punpckhbw
cltd
inc
or
fstpt
js
mov
mov
idiv
mov
jl
xlat
sub
push
push
scas
bound
dec
xchg
inc
mov
stc
in
push
xor
enter
leave
or
and
pop
pop
adc
aam
add
stc
sbb
rcrl
inc
jp
ja
inc
push
cmp
andps
pop
xor
daa
test
adc
pop
xor
outsl
pop
or
pop
jge
test
mov
lds
int
mov
stos
dec
sub
movsl
call
add
pop
or
xor
hlt
lods
scas
dec
mov
pop
or
dec
or
push
xor
jg
fdiv
aas
pop
cmpsl
pop
add
cmpsb
mov
sbb
push
insl
jge
loope
aas
insb
add
int3
shlb
or
imul
insb
test
push
rcll
lahf
sbb
pop
cwtl
lods
push
hlt
or
pop
sbb
and
adc
aad
jl
jns
pop
nop
cmp
xor
std
push
xchg
adc
cmp
push
push
andl
nop
int
add
hlt
xchg
inc
js
test
dec
movsb
js
je
jae
push
imul
xor
and
cmp
movsl
dec
cmp
adc
enter
push
adc
adc
clc
and
adc
mov
push
gs
cmp
loopne
dec
cmp
leave
nop
and
cmpsl
jecxz
sub
dec
xor
mov
lcall
or
xor
dec
aad
movsb
hlt
inc
xchg
xor
or
scas
cld
imul
stc
pop
add
lods
xchg
push
iret
adc
sti
push
jmp
jle
test
cld
pop
sbb
and
and
adc
jno
test
hlt
fisubl
nop
lret
imul
cld
pop
aam
clc
pop
iret
inc
call
jno
dec
mov
fcomps
nop
or
lcall
pop
cwtl
iret
adc
ds
jbe
and
shlb
loopne
in
mov
out
lea
dec
out
add
cmpsb
jo
data16
xor
pop
pop
mov
aas
mov
jnp
mov
out
xchg
xchg
adc
roll
inc
jne
test
cmpsl
push
fisubs
push
fs
pop
lods
xchg
jns,pn
xlat
pop
sub
cli
inc
jno
loop
mov
lods
cmc
lret
pop
cmp
jle
mov
loopne
fwait
dec
jns
ret
loop
test
sub
cmp
rcrl
stc
sub
out
jbe
orb
inc
jnp
rcrl
mov
mov
jg
fidivl
negb
out
sbb
or
lcall
xor
pop
dec
xchg
cmp
and
lahf
jae
adc
cmp
lods
imulb
add
pop
xchg
inc
mov
xor
fadds
dec
push
adc
sub
push
pop
aas
sarb
lock
mov
scas
sti
jb
or
jbe
push
js
ret
cltd
out
es
pop
adcb
jle
push
pop
push
jmp
repnz
mov
xchg
es
jmp
cli
aad
pop
add
mov
adc
ret
imull
mov
jmp
jge
pop
scas
push
push
faddl
push
pop
mov
inc
loope
pop
repnz
out
ss
cld
and
dec
ja
lea
cmpl
divl
mov
mov
push
mov
in
jns
ljmp
pushf
les
push
add
push
push
mov
sbb
lods
jne
dec
jecxz
xchg
icebp
into
popf
je
pop
leave
outsl
dec
xchg
inc
loop
adc
addl
out
iret
push
dec
mov
mov
mov
sub
adc
mov
sahf
lret
aam
shlb
cld
pushf
imul
jne
jle
or
mov
push
cltd
jno
gs
inc
jno
mov
sub
movsb
or
sbb
sti
lcall
fcomip
mov
or
pop
mov
mov
push
adc
std
sub
loop
mov
pop
xchg
xchg
dec
jo
push
test
push
pop
push
add
jg
fsubs
and
inc
cmpsl
fisttps
adc
inc
cltd
or
cmpsl
ljmp
in
cmc
jl
mov
mov
test
push
repz
or
aam
std
pop
mov
into
scas
pop
ljmp
icebp
and
fldln2
stos
dec
into
mov
adc
xchg
mov
testb
fwait
test
setge
xor
mov
add
sub
pop
loop
stos
cmpsl
sub
lods
fcmove
out
adc
or
in
mov
jmp
sub
out
or
aad
in
lock
scas
lcall
or
jp
stc
fwait
mov
pop
sub
cs
incl
bound
jne,pn
and
repz
pop
mov
lods
pop
out
pop
stos
call
and
push
lret
cld
mov
addr16
js
pop
jecxz
rcl
and
sub
pop
in
or
cmp
cmpsl
push
faddl
sti
xorb
lds
and
or
jne
mov
mov
cwtl
mov
fs
into
ds
push
jg
dec
fucomi
inc
cmpsb
imul
fstl
lret
pop
lea
clc
cld
int3
adc
add
and
inc
xor
adc
fstpl
add
mov
or
in
in
insl
mov
adc
sub
rcrl
mov
pop
outsl
mov
nop
insb
adc
dec
scas
cmp
fcoml
nop
jge
loope
push
add
dec
das
adc
sahf
movsl
shl
int
mov
icebp
not
cmp
mov
aad
pop
ror
sub
stos
icebp
and
out
sahf
dec
je
seta
add
or
mov
pusha
sar
fimull
insb
mov
ljmp
enter
lcall
jbe
int3
mov
divb
adcb
and
shrb
stos
ljmp
push
loopne
test
testl
xlat
add
inc
inc
mov
movsl
jno
stos
xor
shll
inc
mov
cmp
orl
arpl
push
pop
sbb
addl
dec
ss
lcall
cmp
ss
inc
out
repnz
in
jnp
add
int3
dec
aas
jae
shlb
or
jne
stos
lret
in
insl
dec
inc
testb
and
scas
mov
jmp
fcmovnu
rclb
repnz
stc
lret
daa
ret
in
push
dec
add
filds
leave
cld
pushl
lcall
ret
mov
xor
hlt
mov
push
xchg
xchg
ljmp
cmp
les
jo
xorl
lret
mov
mov
mov
out
jae
aaa
xchg
inc
je
out
xchg
mov
std
cmp
daa
or
or
pandn
inc
hlt
jne
test
dec
inc
cmp
leave
push
cmpsl
xor
enterw
inc
jecxz
xlat
ds
adc
mov
jne
jge
into
and
push
mov
or
aam
adc
pushf
popa
dec
negb
pop
popa
in
push
jne
out
test
out
dec
mov
inc
jne
sub
lcall
jns
sahf
lret
fdivs
push
data16
pop
mov
pop
call
add
scas
jo
imul
cmpsb
cmp
mov
gs
jmp
ficompl
movsl
fistpll
popf
xor
cld
cmp
xor
adc
pop
in
jge
mov
jle
adc
jge
inc
cmpl
lea
shrb
lds
mov
sbb
push
xchg
les
cmpsl
inc
insl
mov
push
out
sbb
mov
and
xor
popa
rcll
outsl
cmp
dec
push
mov
add
inc
insl
xchg
adc
mov
mov
push
add
fwait
test
std
in
in
push
addr16
or
pusha
test
test
xchg
nop
imulb
dec
adc
lret
add
push
out
mov
sub
pop
std
adc
rorl
push
imul
fwait
push
or
pop
cmpsl
inc
or
shl
mov
adc
subl
orb
scas
dec
jge
jne
insl
mov
repnz
jecxz
mov
sbb
mov
lds
xor
pushf
dec
addr16
add
fwait
sar
test
shlb
lds
mov
iret
adc
jb
sahf
push
out
pop
ja
cmp
je
js
xchg
mov
es
dec
jmp
mov
cmp
ss
add
sub
xchg
ss
shl
jecxz
roll
arpl
or
shl
je
jne
jmp
adc
xor
ljmp
dec
jecxz
mov
in
adc
and
and
loope
and
lret
int3
mov
mov
aaa
push
ja
out
pop
and
push
cmc
in
jnp
cmp
inc
dec
frstor
clc
aas
out
add
data16
and
out
incl
jne
and
inc
pusha
int3
adc
dec
mov
or
call
cmp
mov
xlat
imul
jp
sub
xchg
outsl
pop
adc
pop
push
hlt
push
stos
fisubl
std
cs
aaa
stc
mov
mov
and
xchg
fcompl
mov
enter
xor
cltd
leave
add
ret
adc
outsb
repnz
repnz
pop
sub
inc
push
push
add
lea
dec
imul
sahf
aaa
jae
adcb
movsl
jmp
push
aaa
movsb
loope
jae
sbb
mov
outsb
out
mov
dec
adc
scas
sbb
jo
fdivrs
lds
push
rorl
mov
inc
mov
cmp
roll
test
dec
inc
lret
push
loopne
jno
cli
cmpsl
out
fistpl
and
lods
jle
inc
mov
xor
cmpsl
sahf
int3
sbb
insl
and
adc
push
mov
jge
scas
popf
repz
je
negb
enter
xor
xor
fists
cmp
mov
or
cmp
fbstp
jo
xor
pop
repnz
clc
cmc
test
and
cmp
enter
or
inc
sub
fstps
lahf
cwtl
cld
stos
mov
stos
inc
ja
dec
dec
mov
or
mov
aas
hlt
js
jmp
or
push
sbb
ja
and
scas
mov
add
push
roll
bound
mov
add
xor
jle
push
cmc
add
jg,pn
cmc
bound
idivl
add
gs
or
mov
jo
mov
mov
push
mov
mov
repz
mov
push
popf
movsl
xchg
mov
jp
jne
push
lea
popa
shlb
lock
xchg
aam
mov
mov
pop
add
jo
into
pusha
inc
pop
das
xchg
lret
popf
jns
pop
mov
push
and
popf
cmp
fstl
push
sub
fnstcw
mov
mov
out
fwait
cli
in
xchg
mov
imul
and
addb
jle
test
leave
and
adcl
pop
stc
pop
pop
fisttpll
test
aas
decl
xchg
inc
bnd
xchg
mov
xorb
testl
cmp
xor
mov
xchg
mov
dec
mov
mov
pop
jmp
lret
negl
push
mov
push
aam
filds
pop
aam
dec
mov
mov
lock
xchg
stos
dec
arpl
repz
dec
pop
jno
jl
fwait
cmp
data16
jnp
imul
dec
loope
mov
std
mov
sub
mov
mov
pop
xchg
rorl
arpl
ret
notb
test
add
mov
fadds
jo
push
lcall
mov
loopne
ffreep
leave
rcll
and
into
bound
cmp
imul
add
and
sub
ljmp
sahf
outsb
fbstp
sbb
push
or
push
mov
push
out
sub
sbb
pop
sbb
aad
imul
in
shrb
push
sub
bound
ret
int
xchg
inc
into
jnp
lods
adc
inc
ror
cmp
xor
inc
pop
or
and
xor
dec
sbb
aas
jmp
stos
cs
push
lock
ret
sti
xor
mov
popa
mov
icebp
aad
xchg
or
dec
bnd
addr16
mov
js
mov
insb
inc
dec
pop
mov
loopne
add
enter
dec
lods
xor
push
mov
repz
shlb
adc
fidivl
jnp
cmpsl
gs
xchg
dec
adc
int
aaa
cmp
dec
mov
adc
loop
lods
sti
inc
mov
jecxz
dec
cltd
adc
out
mov
mov
add
call
mov
aas
enter
sbb
push
ret
mov
lock
dec
pop
scas
mov
cld
add
mov
mov
mov
pop
lea
mull
add
icebp
std
inc
mov
cwtl
pop
mov
jge
xchg
and
jl
ret
push
stos
loop
scas
and
or
adcl
aad
and
mov
inc
int
out
flds
lock
ljmp
jle
add
bound
sbb
pop
mov
cmovle
xor
jae
mov
mov
call
pop
mov
add
int
mov
or
popa
loope
test
outsb
xor
inc
mov
xchg
sti
dec
push
pop
scas
test
pop
aad
dec
mov
insl
jmp
jg
testb
xor
inc
cwtl
pop
scas
adc
and
shlb
scas
clc
in
scas
mov
xor
aad
sbb
adc
jb
dec
mov
jns
push
pop
in
call
push
mov
fsts
mov
out
aaa
push
stos
cmpl
mov
repnz
mov
repnz
and
inc
bnd
loope
insb
subb
sub
inc
and
sti
loope
or
ret
pop
imul
nop
add
add
push
repz
ds
xor
cmp
jno
out
mov
cmp
xchg
push
push
cltd
and
into
jbe
lret
pusha
dec
aaa
sbb
ljmp
ss
int3
mov
stos
loop
mov
ficoms
and
xor
jns
ret
fldt
push
sub
push
dec
cmpl
lret
adc
push
lret
in
dec
fmull
jno
aam
mov
sti
mov
insb
cltd
fstpt
popl
push
xor
movsb
fbstp
or
stos
shrl
lock
cwtl
leave
hlt
dec
cs
stc
popf
mov
push
adc
aad
dec
shr
int
dec
shrl
cmp
cmp
xor
inc
pop
jmp
es
or
push
adc
dec
cmpsl
fimull
or
cmpl
mov
and
push
mov
imul
jns
add
lds
adc
or
pop
es
scas
push
dec
mov
push
sarb
mov
insl
nop
popf
sbb
or
mov
push
rol
dec
adc
jae
imul
push
xor
mov
das
pusha
pop
dec
push
jmp
mov
mov
and
sbb
add
insl
push
and
insl
dec
mov
cmpsl
pop
xlat
xor
out
xchg
add
mov
dec
xchg
outsl
imul
cli
jecxz
adc
rorl
repnz
xchg
inc
enter
enter
mov
add
je
mov
pusha
add
sti
insl
and
inc
dec
lret
mov
cs
cmp
fildll
xchg
notb
xchg
sahf
repnz
loope
push
push
mov
mov
jge
cmp
cmp
imul
mov
jno
and
sbb
inc
jl
cld
out
and
sti
or
in
cld
int
pushf
adc
push
dec
es
addr16
and
mov
test
jnp
mov
stos
jmp
pop
scas
add
adc
inc
mov
jb
xchg
fnstenv
dec
test
std
enter
sbb
jo
cmpsb
jo
std
popa
push
add
pop
sbb
jnp
out
or
inc
cmpsb
mov
test
xchg
mov
int3
xchg
dec
jge
mov
inc
fiadds
mov
aad
loop
jbe
xchg
jne
inc
shll
out
insl
lret
andb
push
aam
push
inc
mov
imul
shr
pusha
fwait
in
inc
movsl
cld
ret
cld
push
jbe
mov
rcrb
test
push
loop
adc
in
icebp
loop
stos
push
js
cld
in
mov
movsb
cltd
clc
dec
cmp
inc
jae
shl
pusha
sahf
imul
lock
pop
push
lock
popf
mov
dec
fwait
mov
in
cmpsl
xor
into
jecxz
cmp
mov
dec
js
and
and
fimuls
aas
adc
sbb
in
loopne
push
or
xchg
cmpsb
xor
mov
mov
push
jno
nop
pop
sub
ficompl
lea
ret
or
outsl
out
inc
mov
cli
aad
mov
sbb
mov
cld
mov
jecxz
lock
out
scas
scas
lds
and
pop
cmpsb
pop
repz
js
pop
mov
sbb
sub
into
sbb
push
xchg
stos
clc
daa
cld
ret
add
inc
jp
xor
js
add
inc
pop
add
xor
and
sbb
xchg
add
mov
in
in
test
ja
xchg
and
loopne
adc
jp
ljmp
mov
mov
jno
sub
push
xchg
idiv
pop
gs
cmp
lds
cwtl
mov
sbbb
and
mov
mov
and
mov
mov
out
or
dec
in
insl
fs
or
pop
cltd
stos
mov
pop
call
repz
and
mov
sub
lock
pop
mov
popa
test
cmp
addr16
out
loop
xor
add
and
inc
push
stos
test
and
dec
cmc
mov
jne
add
cmpsl
push
inc
repz
nop
test
in
pop
push
xchg
pop
cmpsl
stos
jg
cmpsl
fisttpl
negl
mov
push
jnp
xchg
cli
pop
mov
cmpsl
lock
pop
xlat
jge
rcrb
aaa
push
or
dec
stc
lods
mov
repz
outsl
in
div
pop
mov
dec
jl
test
fs
jb
add
cmp
mov
lret
clc
sbb
lods
dec
jl
out
sahf
mov
icebp
mov
addl
adc
sbb
inc
cwtl
pop
adc
icebp
push
out
inc
mov
addr16
xor
pop
sbb
in
xchg
and
add
in
notl
mov
scas
cmc
or
lea
daa
mov
dec
jo
pop
pop
mov
xor
movsb
and
cmp
pop
inc
and
ret
xlat
cli
ljmp
divb
xlat
out
loope
loopne
popa
imul
lret
dec
enter
and
jno
cmp
in
cmp
mov
stc
cmp
inc
xchg
cmc
or
cs
movsl
lds
sbb
sbb
sti
jg
and
dec
sub
adc
xchg
xchg
mov
jecxz
mov
fmull
out
mov
dec
pop
dec
js
xchg
stos
outsb
adc
lcall
push
inc
push
loop
inc
and
stos
mov
lods
bound
imul
xchg
movsl
les
jbe
push
shrb
jecxz
fidivrl
push
push
jle
push
cmp
add
pop
xchg
jg
xlat
loop
in
xchg
xchg
out
popf
push
arpl
push
sbb
dec
dec
add
xchg
cli
jg
dec
sti
xor
lods
arpl
cmpb
outsl
lcall
and
jmp
das
xor
cmp
xchg
outsl
repnz
pop
mov
enter
mov
push
pop
xchg
pop
cmpb
cltd
insl
in
jo
mov
imul
push
sub
jno
push
out
int3
push
test
sub
pop
adc
mov
xor
mov
fstpl
mov
and
add
ret
jg
aaa
or
cmp
fs
lea
fsts
mov
jge
out
mov
sub
add
andb
in
leave
fisttpl
fildll
enter
xor
jbe
out
imul
dec
or
aas
loope
adc
dec
leave
loop
push
lcall
mul
cmp
sub
fisubs
repnz
stc
jo
jns
ss
jae
repnz
dec
adc
or
cmp
add
push
mov
out
fcmovu
in
fs
mov
push
lds
clc
jbe
push
push
sbb
mov
xchg
std
aas
std
sbb
addl
jnp
test
pop
gs
repz
mov
fstl
push
adc
push
mov
dec
or
jnp
add
mov
lret
push
fistpl
call
pusha
xor
and
xor
mov
dec
cmp
jle
inc
loop
insl
adc
add
mov
mov
mov
call
xor
mov
lea
and
in
mov
jge
int
repz
dec
shlb
and
ret
fdivs
cmp
ljmp
rolb
js
shr
mov
pusha
push
cli
jno
mov
sbb
std
iret
sbb
dec
inc
mov
lock
add
movsl
and
imul
push
cld
adc
mov
fidivrl
mov
mov
mov
fnstsw
pop
fcmovu
imul
cmp
icebp
pop
lcall
fistpll
es
push
jge
scas
lods
mov
adc
sti
xchg
outsl
fsubs
and
or
pop
in
sbb
aas
push
mov
sbb
add
mov
fmulp
rcrb
scas
mul
loopne
inc
int
cmpsb
cmpsl
add
dec
jb
je
out
inc
imul
xchg
pop
jg
loop
adc
push
mov
lods
xchg
clc
mov
add
arpl
mov
ret
pop
shrb
in
mov
jg
sub
or
ljmp
mov
push
out
test
insl
mov
jecxz
mov
adc
dec
arpl
and
inc
rolb
shrl
push
mov
mov
sub
jmp
rcrb
xor
pop
or
xor
sbb
je
cmp
pop
popf
shll
mov
xchg
inc
xchg
mov
push
sti
jno
inc
loop
ds
ss
call
repnz
popa
dec
sub
cli
inc
mov
les
xchg
addb
cld
jg
mov
inc
fisttpll
xlat
mov
push
sbb
pushf
nop
or
mov
inc
ss
pushf
arpl
sub
sbb
in
mov
aaa
aad
insb
inc
sahf
enter
sbb
mov
pop
shll
mov
dec
and
push
pop
sub
clc
js
aad
push
adc
ret
pop
lock
adc
dec
pop
andb
mov
movsl
xchg
pushf
push
push
in
xlat
out
dec
inc
ss
and
sub
movsl
mov
xor
cmp
push
lea
add
pusha
loop
mov
jno
adc
out
and
mov
test
mov
or
sbbb
clc
xchg
addl
or
dec
lods
mov
jo
gs
mov
mov
xchg
cmp
cmpsl
lods
sbb
cmp
sub
je
loopne
ss
mov
fwait
xchg
push
insl
pop
xchg
mov
or
add
adc
std
cmp
mov
scas
xor
ja
or
mov
add
scas
call
dec
int
cmp
mov
loopne
push
jo
mov
test
sti
xor
inc
fstpt
or
mov
shrb
ret
call
lea
cmp
cmc
jae
icebp
into
adc
scas
mov
ret
or
dec
jo
test
pushf
test
jbe
lea
insb
addr16
pop
mov
push
xor
jle
or
push
jle
fwait
mov
pop
mov
inc
dec
xchg
dec
xchg
rcrl
add
rorl
cwtl
loope
js
out
popf
fs
movsl
lcall
cmpsb
xchg
mov
divl
sbb
mov
sbbl
add
popf
pop
jp
jl
lret
je
mov
add
daa
pop
mov
sub
pop
jo
addr16
shrl
leave
std
mov
sub
cmp
mov
jae
stos
test
mov
js
sbb
sub
inc
add
js
andb
cmp
or
adc
cmpsl
pop
and
mov
out
test
addb
rorl
xchg
jnp
aas
add
xor
lock
ds
loope
hlt
xchg
das
mov
loop
fwait
out
out
jge
dec
leave
push
lea
clc
add
push
je
pop
mov
out
popa
cs
dec
aas
adc
push
add
jmp
ja
mov
push
pop
out
out
mov
push
out
jp
jg
sbb
and
lods
jle
mov
lea
jb
daa
fwait
jnp
pop
fidivrl
jge
mov
push
out
xor
mov
mov
lea
and
pusha
xor
lcall
pop
xor
lock
test
shrl
jmp
repnz
cmp
sahf
adc
sarb
lods
xor
in
add
or
mov
cs
cmp
sahf
lds
pop
fsubs
mov
call
or
jg
mov
sbb
jecxz
cltd
shlb
cmp
pop
pop
mov
mov
repnz
daa
and
inc
ret
dec
inc
sub
addb
xor
cs
mov
push
mov
in
ror
scas
cmc
push
mov
mov
jle
mov
mov
imul
rcrb
push
lock
std
or
in
test
adc
out
sahf
sub
dec
fdivrl
jmp
or
mov
sti
xor
addr16
insb
repz
mov
or
add
nop
sbbb
and
call
dec
stc
icebp
adc
mov
xor
push
rcr
arpl
cmpsl
in
push
loopne
sub
mov
cs
cs
mov
das
push
fidivl
add
lods
test
inc
or
loopne
sub
jg
and
mov
neg
inc
inc
xchg
mov
nop
push
in
xchg
data16
or
roll
ret
sbb
ret
adc
xorb
andb
sub
cmpsl
arpl
push
cmc
lods
mov
adc
mov
xchg
mov
and
pop
sbb
jo
cs
leave
fxch
in
mov
xor
sbb
add
jns
inc
cmpsl
icebp
xorl
test
xchg
cmc
call
sbb
jmp
shrb
into
loope
mov
movsb
push
out
outsl
scas
inc
pop
ror
jno
adc
out
mov
scas
jns
sbb
fs
ror
jge
push
jbe
fstpl
pop
inc
outsl
push
xor
inc
lahf
inc
fidivrs
mov
xchg
inc
dec
clc
ja
mov
sub
stos
xor
jl
cmc
out
pop
and
cld
int3
pop
ja
test
insl
insl
push
or
test
cmc
mov
or
ds
add
test
clc
lret
into
cmp
sub
mov
cmp
sti
negb
inc
push
pop
int3
sub
es
scas
xlat
ds
inc
repnz
lcall
push
jne
rolb
outsb
jno
sbb
in
sahf
inc
in
daa
cmp
jns
xchg
xchg
add
inc
mov
mov
popf
mov
in
xor
pop
pusha
outsl
xor
and
jne
mov
mov
mov
pushl
jmp
dec
inc
fcomps
cmpl
xchg
xchg
jns
dec
sub
jae
add
cs
mov
push
add
daa
mov
jmp
jmp
adc
imul
rol
lcall
popa
dec
mov
clc
push
popl
cmp
test
enter
mov
gs
popa
imul
js
mov
xorb
inc
je
push
insl
lds
movsb
and
fnstenv
pop
cltd
xchg
mov
fmull
jns
mov
fimuls
arpl
fildl
push
add
into
repz
adc
incl
cli
inc
mov
into
je
orl
ret
outsb
outsl
insb
ret
ret
rclb
push
dec
fcompl
xchg
sti
xchg
sbb
pop
adc
in
cmp
test
xchg
cmc
jg
dec
clc
insb
jno
mov
pop
xor
std
pop
je
insb
test
sbb
sub
imul
adc
fidivl
jno
jg
es
fisubrs
out
inc
daa
imul
stc
filds
es
mov
add
xor
loope
cmp
mov
outsb
jbe
or
xchg
jbe
push
js
scas
mov
clc
call
subb
in
and
mov
loop
inc
mov
jp
pop
mov
scas
sub
pop
es
mov
mov
aam
and
mov
ja
lock
xlat
popa
ja
sub
clc
sbb
clc
les
lret
jle
test
add
adc
fstpl
add
icebp
mov
xor
dec
dec
mov
addl
jae
inc
bound
mov
fadd
les
pushf
sub
add
popf
out
jge
sub
sbb
mov
sub
inc
lods
ret
cs
cmp
test
dec
adc
pop
in
pop
loope
mov
mov
jecxz
loopne
repz
cmp
insb
jae
ret
or
xchg
jno
xor
dec
xchg
xor
sub
inc
movsl
rclb
inc
adc
and
lods
mov
sub
sbb
and
cmpsl
aam
push
lea
jecxz
mov
int
mov
mov
sub
cmp
fcmovne
push
push
out
push
stos
mov
dec
repz
test
mov
std
mov
and
and
shlb
icebp
xlat
movsb
and
jae
and
sub
xchg
test
lods
push
aad
or
mov
inc
mov
in
push
push
mov
dec
sub
mov
mov
mov
popl
rorl
push
rcr
out
cli
xor
subb
andl
dec
mov
data16
and
inc
push
ja
inc
dec
mov
mov
test
repnz
lea
js
adc
scas
jo
fildl
mov
lds
mov
sbb
mov
push
mov
adc
add
movsl
int3
pop
pop
test
cmp
test
jle
sti
aas
pusha
sub
es
rorb
je
add
or
out
pop
jns
mov
mov
stc
mov
cmpsl
cmp
repnz
cmpps
call
cld
mov
adc
jp
aad
inc
sub
adc
dec
ret
mov
push
insl
aad
loopne
in
inc
stc
icebp
inc
or
adc
insb
in
call
aas
das
loop
or
jl
jb
push
dec
scas
ret
sti
jmp
call
addr16
jle
mov
out
xchg
pcmpeqd
in
xor
rclb
sbb
cmp
xchg
jno
roll
lret
ror
push
shlb
ficomps
mov
adc
mull
push
aas
test
rcrb
sbb
mov
push
mov
stc
mov
cmpsb
insl
idivb
add
pop
mov
cmc
push
aad
repnz
sub
jae
fnstsw
jb
imulb
nop
sbb
add
in
loopne
hlt
in
add
pop
jmp
jmp
dec
sub
xchg
test
sub
pusha
es
aaa
roll
jmp
pushf
push
jbe
sub
inc
dec
inc
gs
jl
fwait
popa
shll
gs
mov
std
pop
orb
mov
inc
push
sub
enter
cs
xchg
divl
sub
int3
jnp
pop
cs
js
popf
popf
mov
xchg
out
sbb
pop
sub
cmp
mov
mov
aaa
jbe
mov
seta
in
sbb
jmp
pushf
mov
mov
sahf
push
xchg
mov
sbb
mov
or
jle
sti
xchg
fs
rclb
xchg
popf
inc
jbe
into
cmp
pop
push
adc
and
jp
ficomps
push
mov
cmp
jo
xor
mov
xchg
jecxz
jmp
xor
leave
or
xchg
ja
mov
push
pop
jecxz
cmp
mov
adc
sub
js
push
jo
cmp
mov
test
adc
pop
pop
insb
sub
push
stos
lea
fiadds
aam
jp
cltd
push
test
or
fwait
loope
cmp
fsubrs
dec
lea
and
xchg
ljmp
shrb
or
clc
adc
sti
std
cmp
adc
pop
jle
mov
xor
xchg
cmp
jns
pop
xor
in
test
sti
nop
aaa
add
leave
aam
fcoml
push
scas
decb
push
repnz
xchg
adc
dec
xor
int3
sbb
add
int3
or
cmp
hlt
jle
cmc
sbb
pop
mov
sbb
fs
int
ficoml
pop
lahf
inc
add
dec
in
stc
add
lahf
mov
repz
lods
lock
out
add
scas
mov
fidivl
fidivrs
daa
movsl
xchg
push
jnp
fisubrl
stos
pop
leave
cwtl
mov
adc
divb
aas
sbb
or
scas
nop
inc
movsb
xchg
loop
popf
mov
das
sub
xor
push
mov
jne
sbb
mov
or
mov
mov
iret
xor
xchg
xchg
jns
push
or
outsl
pop
and
push
je
or
mov
stos
adc
push
leave
rolb
loop
mov
dec
enter
sbb
pusha
nop
fcom
mov
inc
push
insb
dec
mov
jle
mov
outsb
jmp
xor
inc
icebp
bnd
xlat
stos
jne
dec
mov
push
dec
xchg
adc
testl
xchg
stc
insl
pop
lret
pushf
ret
popf
sarl
mov
dec
enter
cmp
cmpsl
dec
jae
xlat
mov
test
xorl
jge
pop
push
mov
popa
sub
lods
stos
movsl
ljmp
pop
movsb
mov
xchg
dec
les
xor
andb
into
movsb
cmp
mulb
and
fsubrl
and
cltd
jp
pop
ds
mov
sbb
sbb
in
push
adc
inc
add
lea
insb
int
sub
jae
inc
jae
or
pop
or
imul
mov
stos
mov
jp
dec
mov
lret
nop
xchg
cltd
mov
sub
mov
insb
sbb
push
inc
mov
fwait
pop
jge
xor
cwtl
inc
in
test
jnp
mov
push
rcrl
stos
xchg
jbe
rcr
push
ret
and
das
test
out
fcompp
fsubl
fildll
mov
inc
sub
or
icebp
lds
scas
push
sbb
push
jo
xchg
cmp
jge
into
cs
or
push
cmp
sbb
sub
loope
dec
das
lock
jnp
aas
and
xchg
out
daa
aam
mov
test
adc
jecxz
pop
pop
xor
divb
sub
bound
sti
and
outsb
mov
out
cmpl
test
hlt
int
fsub
js
lret
fidivl
vmwrite
jnp
call
ss
mov
out
rol
and
mov
out
push
sti
cltd
inc
mov
popf
inc
jecxz
xor
inc
and
sbb
mov
sbb
cwtl
jp
repz
out
roll
sahf
lret
or
lcall
out
or
jecxz
mov
mov
jo
adc
dec
aad
clc
sbb
stc
push
xor
xchg
mov
jae
movsb
inc
addl
int3
dec
rorb
dec
cs
adc
pop
inc
sbb
rorb
inc
hlt
and
cld
xchg
mov
cmp
mov
mov
fiadds
jnp
push
in
push
aad
clc
cmp
pop
xchg
mov
jle
shl
pop
xor
lds
nop
jge
loope
mov
mov
movsb
mov
mov
js
jl
cmpb
push
outsl
cmc
xchg
mov
cli
mov
mov
lahf
inc
aam
xchg
daa
lock
and
or
lds
outsl
add
das
pop
leave
in
mov
js
iret
into
lock
imul
sbb
mov
mov
push
jne
ficoml
shll
mov
sbb
and
mov
int3
dec
add
add
or
sbb
xchg
repnz
jp
icebp
out
mov
mov
daa
clc
mov
and
xchg
mov
mov
sahf
inc
fstpt
aaa
in
cmp
sahf
adc
jmp
dec
adc
mov
pop
cmpsl
xor
outsb
or
lods
xor
sbb
subb
scas
loopne
das
gs
mul
add
ja
lahf
mov
pop
jle
xlat
mov
adc
cli
insl
popf
shrb
jmp
cmp
lea
gs
push
out
bound
out
jbe
arpl
jno
fildll
outsb
mov
bound
adc
lock
sbb
jae
out
mov
pop
jne
xor
lcall
mov
repnz
mov
mov
push
pop
mov
fnstenv
jne
ss
insl
mov
xor
jo
jns
jecxz
cltd
int3
mov
jbe
loop
xchg
repz
outsb
jl
aad
insb
fs
dec
scas
mov
es
addb
js
xchg
and
das
daa
dec
cmp
add
inc
jnp
lods
fcmovbe
movsb
popl
or
adc
fsts
pop
fst
scas
aad
jo
addl
xor
xchg
iret
cwtl
xor
jb,pt
sub
pop
dec
xor
popf
push
jecxz
push
aad
xchg
mov
cmp
jle
fadd
fistpl
jns
js
orl
add
leave
in
sti
cmpb
sub
ljmp
jle
shll
and
xchg
and
jecxz
or
clc
fdivrl
stos
sarb
push
fstps
inc
test
out
inc
js
cmpsl
and
jge
fbld
out
xchg
and
add
dec
icebp
loopne
test
out
in
test
in
xchg
test
pop
loop
xchg
push
imul
adc
push
ficomps
adc
addr16
push
jae
mov
jp
loopne
clc
flds
jg
mov
mov
jmp
adc
cmp
jae
or
cmp
repz
cmpsl
add
mov
dec
mov
flds
popf
dec
mov
jne
daa
rclb
jge
enter
outsl
pusha
jl
sahf
dec
mov
pop
leave
ret
cmp
repz
ss
clc
mov
cmp
scas
imul
jecxz
out
add
pop
nop
jecxz
imulb
cs
pop
inc
repz
into
sbb
mov
jae
fnsave
aam
mov
push
cli
jp
fs
fsubp
in
or
xchg
push
aaa
stos
cmc
xchg
fs
push
xor
stc
add
mov
adc
movlps
pushf
hlt
jp
add
insl
dec
bound
mov
lret
int3
push
je
bound
lods
mov
jmp
mov
aad
cmp
inc
lret
enter
ja
test
adc
scas
jns
lret
mov
jno
mov
loop
dec
cmpsb
push
and
fmuls
shrl
pop
mov
push
leave
pushf
inc
dec
inc
stc
or
xchg
ljmp
jns
push
test
sub
push
cmpsl
mov
orb
bound
mov
insl
or
push
jno
lret
leave
js
push
enter
mov
mov
mov
add
jo
pop
scas
jae
pop
mov
xchg
mov
loop
imul
xchg
mov
shrl
mov
xchg
lcall
add
xchg
xor
ret
lahf
pop
js
xlat
cmpsl
cmpsb
xchg
adc
psrad
mov
ss
or
pop
in
push
mov
mov
dec
iretw
clc
jns
ds
adc
mov
loopne
icebp
incl
cmp
imul
test
iret
sub
xchg
mov
mul
push
mov
ret
xchg
jp
test
outsl
mov
xor
popa
mov
mov
lock
rcll
js
fucom
push
push
xorl
cli
test
xchg
lds
xchg
sub
call
sub
inc
cmp
rolb
sahf
or
add
push
ret
lea
mov
addr16
outsl
xchg
mov
shlb
add
pop
cwtl
lock
ljmp
in
shl
inc
in
outsb
inc
xchg
insb
push
test
scas
scas
xchg
jno
sub
out
push
in
or
sbb
sub
mov
inc
pop
add
frndint
xchg
push
cld
jg
cmpsb
jge
stos
test
and
sbbl
loope
push
inc
jae
gs
out
mov
andl
out
sub
pop
imul
dec
sub
out
dec
inc
fmul
push
inc
adc
push
and
pop
inc
bound
jmp
jo
cs
push
lret
xchg
jmp
sbb
xchg
jo
clc
sub
add
hlt
adc
sbb
hlt
aam
xchg
mov
test
jmp
stos
mov
jb
sbbb
rclb
inc
mov
lahf
test
cltd
jbe
and
mov
hlt
out
sub
ds
aam
mov
aad
pop
fsts
outsb
movnti
mov
add
inc
jmp
inc
xchg
cs
cld
xchg
aad
inc
push
xchg
inc
mov
out
pusha
idivb
push
xor
jns
arpl
hlt
scas
mov
leave
nop
cmp
mov
test
jecxz
lds
les
outsb
lods
or
adc
pop
notl
in
sub
fildll
inc
cmp
xlat
decb
into
sbb
jg
jl
xlat
mov
cs
mov
icebp
dec
cmpl
sti
add
mov
fdivrs
fs
xchg
xor
push
sub
push
shll
adc
mov
leave
or
sbb
push
push
fnclex
cli
add
insb
sub
ljmp
es
gs
mov
sbb
and
jno
inc
rcrb
fmull
rcl
jecxz
in
out
or
sbb
xchg
je
pop
jp
push
popf
shlb
xor
pop
aaa
push
subl
repnz
or
pop
ret
pop
and
adc
adc
leave
jo
iret
in
jae
rcl
lahf
mov
imulb
nop
jp
cmpsl
ud0
push
popf
inc
jmp
data16
inc
jb
pop
sbb
scas
inc
inc
or
xchg
aas
clc
stos
mov
iret
cs
lds
pushf
lods
xchg
out
stos
out
dec
cmpb
pop
mov
mov
popa
loope
dec
push
dec
mov
ja
pop
enter
or
xlat
arpl
test
sbb
aam
adc
sbb
adc
dec
jmp
xlat
or
cmpsl
hlt
loopne
in
mov
jns
adc
loopne
cltd
xchg
nop
cld
hlt
dec
mov
add
push
fldcw
hlt
into
out
mov
and
std
dec
rorb
mov
cmpsb
dec
push
daa
sbb
pop
rolb
push
or
cmp
push
mov
incb
cmp
std
pop
dec
push
add
mov
in
mov
fldcw
insb
bound
add
or
sub
iret
add
stos
and
in
inc
int
sbb
or
mov
mov
mov
repnz
or
aas
pop
mov
pop
addr16
inc
rol
lahf
test
adc
xchg
cmp
int3
rcl
pop
or
loope
mov
fcmovnbe
cmpb
bound
mov
pop
shll
stos
int
mov
and
dec
sub
pop
addr16
dec
mov
addr16
xchg
pop
sbb
in
ja
sub
xchg
push
push
mov
xlat
cmp
fisubl
stos
sub
xor
add
mov
aas
out
ja
pop
gs
sub
xchg
loope
lods
inc
scas
test
add
imul
adc
xor
xchg
push
cmpb
add
jnp
clc
sbb
cmpsb
lret
dec
bound
lods
out
and
jbe
testl
push
test
insb
ss
pop
fcoml
push
rorb
dec
adc
cld
in
arpl
je
sub
fistl
xor
xor
and
pop
mov
repnz
dec
mov
shlb
out
mul
shr
mov
or
mov
jl
stos
data16
mov
sub
xchg
cmp
sbb
push
dec
push
cmp
ret
mov
inc
subb
xlat
mov
scas
int
push
xchg
inc
fs
outsb
es
je
jp
adc
mov
adc
popa
xchg
imul
xchg
mov
gs
je
fcomps
ret
xchg
cmp
shll
inc
inc
push
inc
dec
inc
or
push
adc
push
and
aam
cltd
push
cmpsb
int
fstpl
pop
imul
stos
xor
pop
cmpl
aaa
cwtl
xor
or
and
sbb
dec
test
sub
push
shr
scas
imul
pushl
adc
sub
mov
jg
cmp
jo
mov
add
sti
lds
subb
adc
pop
addb
mov
sbb
lock
mov
in
xlat
scas
add
pop
daa
rorb
dec
loopne
mov
fucomi
frndint
cmpsl
jbe
mov
clc
int3
inc
sub
or
aaa
and
repz
push
out
ret
mov
ja
jp
sbb
xor
cwtl
cmp
and
mov
negl
sti
outsb
xor
and
mov
push
movsl
add
push
adc
cwtl
test
clc
sub
enter
adc
scas
cmp
and
fistl
shll
pop
movl
push
adc
loop
mov
pop
xor
add
mov
call
arpl
jno
sub
imul
adc
rcrb
rorl
mov
xlat
stos
subl
xchg
test
lahf
or
call
inc
mov
xchg
imull
and
lds
testl
pop
mov
xor
loopne
pop
cwtl
dec
and
jno
cmp
jl
mov
leave
adc
mov
testb
ficompl
adc
sbb
mov
in
sbb
mov
inc
sti
mov
dec
sub
sbb
pop
or
out
inc
lahf
inc
std
mov
movsb
out
and
pop
cmp
test
loope
push
cmp
aas
mov
arpl
pop
mov
movsb
jo
cmc
std
adc
mov
fsubl
scas
mov
mov
inc
and
push
insb
daa
cmpsb
jle
shlb
sbb
mov
aam
popf
dec
addl
cmp
xchg
ss
imul
andb
sub
inc
push
sbb
pop
dec
and
movsl
daa
clc
inc
cmpb
xorl
sbb
push
nop
sub
dec
add
imul
fcoms
or
insl
in
push
aas
or
push
and
xchg
jmp
pop
test
push
dec
inc
cmp
rorl
test
mov
add
pop
ljmp
or
dec
in
sub
jle
xchg
out
sub
mov
adc
pop
or
sahf
or
in
xor
xchg
test
push
add
adc
es
add
int3
dec
adc
jg
jle,pn
dec
xlat
sub
mov
add
add
jmp
mov
fmul
sub
mov
sahf
negb
das
sbb
xorb
add
in
sahf
inc
cli
push
adc
add
cmp
sbb
cli
cmp
adc
lret
pop
fsubrp
inc
inc
movsl
inc
in
std
and
pop
jmp
pop
fcmovnu
add
aad
lcall
pop
sub
xor
or
or
nop
mov
fucomp
xor
mov
fsubs
and
test
repnz
xchg
xchg
dec
sarb
aaa
or
mov
mov
aam
dec
pusha
push
test
pop
sub
cli
add
lds
imul
dec
jb
pop
jae
sub
mov
subb
stc
mov
outsl
jecxz
pop
or
cmp
sbb
xor
push
ret
das
popf
push
dec
out
jmp
xchg
clc
loop
cmp
in
xchg
mov
xor
inc
sbb
mov
jne
test
jg
add
push
mov
outsb
std
cmpsl
cmpsb
mov
mov
std
ljmp
stc
jns
test
andl
ret
jle
test
mov
fbstp
adc
in
mov
cmp
popa
gs
cwtl
push
mov
inc
lcall
scas
pop
adc
int3
pop
inc
add
push
add
and
or
mov
mov
cmp
sub
adc
in
lcall
xorl
sub
push
pop
inc
jecxz
xlat
out
pushf
shll
fidivs
sub
or
and
daa
nop
call
dec
call
inc
or
fsubrl
repz
outsl
pop
cmp
mov
test
addr16
aam
mov
mov
jb
inc
sub
dec
and
jbe
pusha
pusha
pop
dec
mov
mov
cmp
push
push
xor
sbb
inc
sahf
push
adc
adc
push
arpl
fbld
mov
sbb
in
bound
ljmp
js
or
jmp
lods
std
out
cs
fmull
cmp
dec
rorl
out
xchg
mov
cmp
sbb
xor
xor
push
mov
pop
pop
add
lods
or
iret
cmp
imul
negl
in
mov
jge
das
lock
push
int
aam
bound
loop
cmp
stc
sarb
xchg
icebp
mov
pop
std
adc
pop
aaa
lret
rcrl
js
cmp
stc
xchg
push
jp
jae
push
aas
leave
sub
mov
pop
mov
dec
outsl
and
cltd
pop
out
pop
mov
icebp
sub
adc
test
xchg
insb
and
cli
sbb
mov
inc
add
push
repnz
test
push
pop
push
jae
cmp
stos
int3
jp
clc
add
mov
or
dec
pop
notb
aaa
adcb
into
addl
mov
cwtl
imul
sbb
call
pusha
daa
es
cmpsb
hlt
sub
nop
int
pusha
or
xchg
pop
dec
mov
mov
mov
cmp
mov
cmp
push
je
scas
xor
ret
sbb
cwtl
mov
stc
push
pop
adc
nop
jl
aad
add
mov
mov
add
ljmp
loopne
and
mul
jne
out
out
aad
cmpsb
jno
mov
loope
xchg
popl
or
inc
dec
xchg
adc
iret
cwtl
mov
int
out
jge
mov
les
leave
adc
dec
mov
stos
jl
into
xchg
push
add
jno
cli
nop
add
std
sbb
sub
test
pop
jb
mov
dec
mulb
sub
movsb
and
jmp
adc
xchg
sbbb
push
pop
data16
and
loop
adc
js
inc
cmp
cmp
shr
jne
mov
sti
jne
pop
jge
sub
out
xchg
daa
insb
pushw
mov
mov
in
test
xor
push
leave
dec
ljmp
bnd
in
lods
ds
aad
sbb
mul
sbb
cmp
jns
mov
adc
jnp
inc
std
lods
xchg
pusha
fwait
xchg
hlt
loop
in
mov
fisttps
jo
pop
or
jb
icebp
add
or
adc
cmc
xchg
repz
inc
mov
addl
mov
xchg
scas
adc
rorb
lcall
icebp
pop
cld
cmp
mov
sub
cmp
out
push
je
push
pop
pop
fwait
imul
lds
jecxz
rorb
dec
cli
mov
or
cltd
dec
add
and
insb
les
clc
stos
jb
lret
clc
inc
cmp
pop
jnp
mov
das
mov
push
test
mov
jne
addr16
fnstenv
aas
cs
fdivrp
mov
sub
fdivr
cwtl
outsb
xorb
cmp
addr16
pop
lods
outsl
ja
fldcw
dec
cmp
sub
xchg
addr16
dec
repz
dec
repz
sahf
daa
jl
shrb
mov
adc
fwait
stos
in
sub
outsl
mov
xchg
mov
xchg
scas
lea
repnz
mov
push
xchg
cmp
adc
add
lcall
adc
insb
inc
mov
mov
inc
test
or
push
pusha
sarl
loope
push
fcmovb
pop
decl
in
lods
lret
jae
out
adc
data16
or
cmp
sti
adc
test
xchg
loopne
in
push
lcall
inc
cmp
call
mov
stos
or
outsb
dec
mov
jnp
jg
mov
inc
std
and
sbb
pop
ljmp
mov
sbb
adc
mov
xchg
inc
jmp
mov
adc
sbb
sbb
rcr
cld
fisubl
and
cmp
cmp
rcrl
lock
cmp
or
rcr
lods
cmp
jno
rep
fisttpl
push
and
sub
leave
xor
fbld
je
clc
mov
jl
cli
xchg
jno
dec
sub
sbb
jp
cmp
adc
fnstenv
pop
push
mov
mov
jnp
jp
in
imul
pcmpeqw
repz
pop
cli
pop
les
cmp
leave
cmp
pushf
mov
mov
lea
les
mov
inc
repnz
xor
cli
and
leave
add
xchg
mov
cwtl
fimuls
dec
mov
mov
sbb
sub
js
add
popl
subl
xchg
xor
flds
pop
mov
pop
pop
add
stos
insl
lret
sahf
jg
mov
int
or
call
push
pop
xchg
loope
cmp
push
lds
add
mov
test
lahf
loopne
xchg
pushf
cmp
cld
pop
clc
xor
or
mov
lahf
mov
mov
je
imul
aad
jp
inc
mov
gs
jl
fisubs
lods
sub
jmp
cmpsl
and
or
decl
scas
ret
out
pop
movsb
repz
and
add
jo
mov
insl
sbb
std
inc
mov
dec
mov
or
pop
push
out
dec
hlt
movsl
mov
movsb
cmp
push
lds
adc
int
push
outsb
mov
pop
mov
inc
bound
push
lea
fsts
fdivl
mov
pop
js
and
enter
jno
cld
sti
loopne
add
push
and
mov
andl
mov
je
cmp
sbb
mov
dec
ljmp
or
jmp
add
pop
shrb
cmc
bound
sbb
mov
add
push
sbb
sarl
add
dec
fidivl
stc
js
push
mov
out
sbb
dec
arpl
data16
cmp
scas
pop
mov
xor
insw
mov
ja
loop
and
sub
ds
sbb
push
pop
inc
dec
dec
test
fwait
sub
loopne
ffree
sub
mov
xchg
mov
cmpsb
push
test
jns
pop
xor
xor
mov
fs
mov
cmpsl
jne
inc
shl
pop
jb
push
fimull
jecxz
xlat
orl
mov
in
popa
cmp
add
loope
xchg
push
jg
repz
loopne
jb
cmpsl
movsb
push
fdivrs
lock
pop
xor
loope
cmp
xchg
xchg
adc
xchg
insb
mov
cmpsl
cmp
add
cmp
clc
xchg
adc
in
add
jne
add
jno
fldl
pop
fnstsw
fisttpl
mov
rolb
mov
test
add
pusha
call
int
and
gs
shl
loop
test
or
daa
sahf
lret
adc
addl
adc
adc
jl
mov
std
push
loope
iret
xlat
xor
cmp
or
inc
mov
cmpsb
sahf
popf
ljmp
inc
sbb
std
jns
lret
sub
enter
mov
test
or
xor
repz
cmp
mov
mov
in
popf
les
inc
cmp
fwait
xor
mov
les
mov
adc
and
mov
jecxz
repz
test
inc
lcall
aad
xor
cmc
jbe
lret
sbbl
xchg
int
lahf
les
adc
es
xor
jle
mov
mov
sarb
jbe
or
in
test
les
mov
lock
or
lret
mov
ja
add
push
pop
jbe
nop
lahf
div
inc
scas
imul
aaa
cwtl
mov
jno
mov
push
fidivrs
mov
jl
lods
xlat
fiaddl
cltd
jecxz
out
test
pusha
xchg
ljmp
xchg
popf
outsl
insl
xchg
or
test
add
cmp
testl
loope
pop
mov
push
xor
daa
fistpll
das
inc
xor
fisubl
jmp
xchg
loop
ret
enter
call
test
mov
xor
mov
mov
shll
adc
push
mov
sub
mov
imul
or
in
out
or
adc
movq
jno
pop
and
aas
mov
lahf
and
xchg
dec
mov
add
shlb
pop
outsb
lods
mov
mov
mov
je
icebp
jl
lcall
pop
es
xor
jmp
cld
ret
add
jmp
and
jmp
pop
daa
nop
cwtl
aam
out
insl
or
inc
xor
mov
shlb
fdivrs
int3
xchg
and
out
stos
mov
aas
jne
cmp
jns
loopne
testl
in
dec
out
gs
sbb
xchg
push
mov
mov
add
outsl
jge
or
popl
push
or
cmp
jle
out
push
or
sbbl
ja
cmc
adc
lock
inc
cmp
xchg
cmp
adc
loope
lods
mov
jecxz
jg
push
out
cmp
inc
into
add
pusha
jmp
rcl
and
xor
dec
repnz
push
fwait
aas
outsl
lret
sti
pushf
pop
adc
pop
icebp
add
lea
test
mov
js
fbld
loop
and
mov
imul
cmp
push
sub
or
aam
out
xlat
cld
inc
push
movsb
fsubs
in
xchg
repnz
enter
iret
sub
push
sar
std
mov
cmpb
pop
fsubrl
pop
lret
dec
mov
cmp
cmp
call
lret
cltd
rcr
cmp
add
mov
jno
push
jne
mov
hlt
movsl
push
cmp
xor
sub
pop
nop
fisubrs
and
mov
leave
jg
lock
or
or
cltd
cmpsl
jnp
push
sub
mov
mov
jecxz
mov
cld
hlt
pop
sbb
add
int
add
cmp
jp
js
inc
das
mov
dec
mov
cs
mov
dec
mov
out
mov
nop
mov
push
xchg
incl
mov
cltd
xchg
xor
inc
cmp
xchg
aad
jecxz
jmp
ret
sbb
ds
stos
sbb
stos
push
gs
xchg
and
std
jmp
push
insl
pop
mov
outsb
inc
imul
adc
pop
movsl
mov
push
in
sub
iret
bound
das
push
and
cmc
cmp
mov
push
aad
adc
jno
adc
mov
test
sbb
pop
jecxz
inc
fstpl
jl
lock
faddp
and
push
pop
adc
and
inc
out
and
repz
and
stos
pusha
mov
push
imul
cmp
inc
sbb
or
pushf
lahf
cmp
mov
cmp
rcl
xorb
push
push
sub
les
jecxz
push
cmp
sbb
fstl
push
testl
inc
fwait
sub
imul
xor
xchg
jne
bound
jp
and
repnz
mov
add
negl
out
in
push
lret
cmp
jmp
mov
dec
xor
and
loope
sub
fs
sbbb
fwait
popa
sub
jb
fistps
or
gs
pop
lock
inc
mov
inc
dec
hlt
inc
and
push
rolb
clc
test
jbe
cmp
stc
pop
into
cmp
pop
jb
cmpsb
jecxz
xor
pop
mov
add
jb
ud0
stos
sub
inc
pop
inc
les
dec
push
mov
imul
inc
pop
sbbl
or
dec
mov
notb
popa
lock
xor
cmc
mov
xchg
dec
dec
sbb
aaa
lock
sub
lea
adc
pushf
mov
sub
es
xor
xor
iretw
popa
in
add
or
jns
sbb
xchg
push
or
sub
jbe
cld
jb
add
mov
jbe
cltd
inc
jns
xorl
loope
sbb
xlat
inc
dec
shl
xchg
mov
cmp
cs
xor
inc
ja
les
jp
push
sub
int
enter
push
dec
inc
push
xlat
in
sbb
mov
adcb
cmc
fldl
lret
int3
jb
out
mov
js
iret
or
rcr
and
sub
sbb
add
cli
sbb
shlb
imull
f2xm1
je
push
push
push
ret
lcall
outsb
dec
mov
mov
mov
push
mov
mov
and
jb
add
or
loopne
cs
add
mov
jle
sbb
adc
cmp
pop
fwait
push
lcall
stc
cmp
xchg
popa
pop
js
stos
outsb
inc
mov
aas
rclb
cld
push
add
xor
ficoml
jne
adc
ds
xchg
nop
mov
xor
divl
idivb
dec
mov
push
mov
dec
cltd
inc
out
mov
ret
pop
stos
push
lcall
pop
and
push
sub
mov
mov
imul
push
sarl
aam
lahf
imull
loope
mov
movq
test
sahf
lds
test
sbb
fisttps
shll
into
adc
cmp
and
jno
data16
adc
mov
into
rcr
push
nop
in
mov
xor
push
lret
in
jl
or
movsl
add
stos
mov
push
cmc
movsb
pop
int3
cwtl
sbb
sub
pop
in
and
mov
stc
dec
or
int
pushf
and
std
push
add
cmp
cmp
out
ljmp
sub
push
xchg
sbb
sub
stos
mov
test
rol
adc
pop
and
pop
pop
inc
pusha
cmpsb
hlt
mov
cmpsb
outsl
subl
xor
insb
rolb
daa
ficomps
mov
enter
add
dec
mov
cltd
adc
xchg
inc
pusha
jp
dec
imul
push
stos
xchg
cltd
cmp
xlat
cmpl
sbb
pop
dec
outsl
sub
dec
adc
jo
pop
fwait
rorb
mov
mov
out
mov
push
clc
adc
lret
test
sub
ss
inc
rcll
mov
add
lahf
in
mov
fdivl
xchg
mov
ljmp
in
jg
out
adc
cmpsb
repnz
and
aas
mov
jp
inc
mov
jmp
xor
scas
lock
pop
or
mov
bound
sbb
mov
push
mov
jo
xor
out
cmp
jbe
mov
jns
aad
sub
add
push
sti
push
xor
rcll
testb
mov
stos
push
adc
and
lret
out
stos
scas
shll
insb
cmp
sbb
pop
adc
aaa
mov
cs
lret
pushf
add
push
cmp
inc
xlat
mov
stc
mov
jno
rcl
xchg
adc
cmc
mov
mov
mov
imul
mulb
ja
adc
push
xor
mov
push
mov
int3
sbb
pushf
test
adc
pushf
insb
arpl
inc
addr16
add
xor
jnp
repz
hlt
mov
sbb
pop
cmp
jmp
popf
push
mov
aas
jmp
xlat
int3
orl
test
fdivrl
mov
out
add
push
sbbb
push
out
bound
in
jmp
pop
cmpsl
xor
push
movsb
jecxz
add
js
rol
or
sti
and
mov
xor
shl
std
in
mov
xor
lds
and
fucomp
mov
sbb
push
push
mov
and
rorl
jne
fildl
push
aaa
jge
je
jne
sbb
sarb
loopne
push
mov
into
into
mov
movsl
or
inc
xor
mov
jbe
push
insl
bound
push
rcrb
loope
in
cmp
mov
sbb
jecxz
xchg
mov
int3
mov
in
loopne
push
in
jecxz
sbb
out
pop
rorl
mov
adc
add
cmp
jae
ret
mov
push
test
mov
sub
inc
fisubrs
movsl
xor
fisttpll
sar
mov
push
mov
adc
mov
imul
data16
stc
mov
mov
in
dec
scas
rcll
xor
enter
push
add
adc
cmp
negb
sub
shrb
mov
mov
mov
cmpsl
loop
dec
imul
push
jne
repz
sub
adc
ljmp
mov
and
es
add
mov
mov
ret
mov
int
shlb
cmpb
repz
clc
jb
jae
mov
es
sbb
sub
les
xchg
gs
jns
lds
mov
cvtps2pd
inc
into
imul
test
dec
lcall
fidivs
or
mov
mov
sahf
cmp
lret
shl
out
add
push
outsb
inc
aas
or
adc
ffree
push
mov
sub
dec
mov
push
in
pop
sti
mov
push
repz
pop
adc
je
mov
sub
add
imul
into
int3
adc
mov
push
stos
xor
out
ss
movsl
xchg
add
ret
pop
xchg
mov
mov
or
fstpl
cltd
imul
divb
cmp
sub
inc
rcr
dec
lahf
jmp
rcrl
leave
add
repz
in
ljmp
and
in
gs
insb
fsts
fdivp
or
scas
rcrb
mov
dec
sbb
sbb
add
jb
nop
dec
adc
leave
insb
pushf
jo
lahf
icebp
out
inc
lods
and
xor
ss
jmp
push
inc
in
outsb
shll
cs
xchg
jno
or
cld
imul
push
out
jle
xchg
aam
sbb
fcmovnu
dec
push
sbb
int
adc
xorb
adc
push
cmp
mov
inc
lods
cmp
xor
aaa
dec
sub
jnp
adc
loope
fwait
popf
stc
imul
sbb
ret
bound
fisttpl
push
push
dec
cld
jnp
xchg
shrb
in
out
sbb
pop
lcall
notl
xchg
sub
xchg
add
les
pop
fisttpl
push
xchg
stos
cld
icebp
rcrb
xor
mov
xchg
pop
shlb
sub
inc
test
test
push
sub
fwait
dec
bound
fidivs
mov
stc
in
lods
repz
outsl
pmaddwd
out
test
mov
add
and
popa
adc
ss
mov
jns
into
in
pushf
int3
insl
pop
insl
lods
dec
movsb
xchg
push
lea
aaa
push
push
int
lock
aas
adc
sub
repz
mov
ficoms
mov
adc
jns
stc
cmp
test
sub
or
cmp
cs
popf
aad
mov
cwtl
icebp
lret
and
mov
leave
sub
mov
std
jl
std
xlat
dec
sub
pop
fdivs
jp
mov
dec
out
scas
mov
out
xor
jne
out
add
push
jle
addr16
xchg
call
test
push
loopne,pn
imul
inc
call
ljmp
testl
inc
pop
pop
dec
mov
lea
dec
pop
into
mov
xor
jmp
pop
jnp
or
cmovae
xor
jle
xchg
dec
int3
in
fsts
add
sbbb
in
out
push
adc
popa
or
enter
push
inc
jmp
int3
nop
push
fldcw
ret
icebp
ret
mov
jl
adc
push
insb
imul
mov
sub
sti
enter
iret
fsubl
lret
shrl
mov
rcll
jle
lea
sub
jmp
sub
push
rorl
dec
sahf
leave
or
or
inc
ret
add
push
mov
jo
sub
lahf
sti
aas
push
adc
and
xor
lahf
dec
stc
nop
jge
shll
inc
cmp
sbb
sbb
repnz
dec
push
mov
sbb
add
xor
je
outsl
and
xor
inc
lods
sbb
or
dec
xor
inc
in
nop
sub
jb
arpl
cmp
les
and
inc
jp
push
test
bound
lea
stos
fcomps
jne
rolb
ljmp
add
sub
mov
jns
hlt
push
cwtl
push
adc
adc
ror
jnp
bound
sbb
adc
stos
je
les
leave
sub
outsb
xor
inc
aad
insl
stc
std
movsl
mov
mov
pop
shrb
and
insl
mov
test
inc
pop
aas
jmp
out
loopne
push
bound
out
jb
lret
jnp
push
add
sahf
inc
pop
xor
mov
aam
inc
out
or
inc
ds
maxps
mov
dec
xchg
jmp
jb
and
push
and
xor
dec
cmp
jle
out
int
xor
orb
lcall
and
sub
fdivrl
ljmp
fs
cmp
sahf
ficompl
call
ja
push
clc
scas
int3
dec
pushf
xor
sbb
mov
add
sub
int
mov
push
adc
push
shlb
dec
and
dec
mov
rcll
sub
push
jmp
jecxz
sub
and
mov
fidivs
lods
inc
filds
push
inc
test
pop
cltd
cmp
cmp
outsb
jbe
lcall
sti
jb
push
ficomps
lret
inc
mov
movl
push
and
or
mov
stos
data16
pop
hlt
addr16
xor
ret
mov
or
es
xchg
cmp
mov
or
rcrb
rcrl
jg
and
cli
sar
movsb
and
adc
mov
loope
xchg
dec
pop
loop
cld
pop
shrl
inc
jg
add
movsb
xchg
xchg
lar
ja
out
clc
popf
repnz
jl
mov
lret
push
push
jge
sbb
adc
sbb
lahf
fisttps
insb
scas
push
lcall
iret
push
push
ljmp
push
cmp
cmp
dec
outsl
loopne
loop
xchg
insb
int
fbld
push
sbb
aad
jg
pop
imul
scas
sar
mov
lea
and
ss
push
push
xchg
mov
dec
cmpsb
jae
cmp
jl
test
add
mov
push
test
xlat
into
cmp
sarl
add
mov
sub
frstor
les
insb
sete
pop
xor
aaa
dec
add
icebp
insb
cmp
gs
and
jge
negb
lret
mov
iret
int3
jns
adc
inc
mov
push
loope
lea
into
sbb
in
jecxz
add
subl
mov
adc
mov
xchg
imul
xchg
stc
jg
fdivs
orb
sub
cmp
push
mov
dec
and
js
sub
xchg
mov
loopne
xchg
mov
out
popa
lret
lret
dec
shrl
and
adc
pop
xor
int3
das
add
mov
out
push
fadd
mov
mov
mov
out
dec
pop
inc
xchg
jmp
push
push
add
xlat
sahf
es
inc
out
test
ljmp
cltd
xlat
add
movsl
outsl
std
fcoms
mov
push
adc
xor
pop
outsl
push
arpl
mov
sti
fwait
repz
xchg
pop
xchg
jmp
xchg
mov
xor
adc
das
les
or
inc
or
call
bound
pop
push
cmp
popa
iret
add
pop
inc
cmpsl
outsb
lcall
sbb
pop
add
mov
add
addr16
sbb
dec
mov
fldl
insb
lahf
mov
addr16
fisttpll
stc
scas
jmp
insl
popa
aaa
mov
cwtl
lods
or
mov
sub
xchg
lods
xchg
jno
xor
rcrl
mull
push
ss
rcll
fwait
lods
sub
fs
scas
je
push
enter
pop
bound
test
and
unpckhps
sub
mov
ljmp
mov
lcall
jmp
int3
pop
cld
lcall
jp
sbbl
jo
dec
ret
divb
add
jmp
mov
imul
cwtl
xchg
lds
mov
clc
and
lods
sub
pop
xchg
sbb
sbb
xlat
sub
mov
jno
fistps
mov
mov
mov
test
int3
aas
jge
ror
fdivr
fisttps
stc
shrb
ret
push
bound
and
pop
test
sbb
push
mov
call
fcompl
aaa
jo
pop
inc
push
jmp
in
aad
mov
push
cmp
nop
stc
fistpll
fsubr
jnp
add
push
out
jle
or
pop
dec
add
lea
cli
mov
xchg
loopne
das
les
ljmp
push
aad
testl
push
mov
mov
mov
pop
hlt
pop
jmp
inc
es
and
sbb
loope
mov
jle
lea
pop
int
sarl
xor
ss
enter
das
xchg
mov
sti
bound
push
lcall
ja
aad
mov
call
dec
push
aaa
fildl
jge
jg
nop
cmpsb
lock
aam
iret
mov
add
xor
fbld
aad
std
mov
or
in
inc
cwtl
xchg
xchg
add
daa
test
lahf
xlat
repz
sub
inc
mov
ljmp
sbb
push
faddl
mov
xlat
sub
lock
xor
pop
jge
xchg
popa
std
and
pop
add
sbb
ss
add
je
negb
sub
out
mov
dec
rcrl
mov
mov
pop
pop
cmp
pop
ret
sub
nop
fwait
pop
jecxz
adc
mov
pop
sbb
stos
add
push
pop
add
xorb
sbbb
pop
dec
xchg
fisubrs
fs
lahf
mov
mov
pop
inc
icebp
mov
pop
subl
into
dec
jg
les
inc
loop
addl
mov
adc
in
and
and
in
mov
xchg
cmp
cwtl
mov
adc
clc
jg
add
mov
dec
jb
aad
pop
inc
pop
scas
push
test
add
and
xorl
jl
es
cmc
push
dec
sbb
icebp
sbb
push
jmp
and
popf
or
imul
dec
sbb
test
sti
xor
jle
pop
add
les
in
cmpsl
idivb
adc
pop
inc
stos
aas
or
mov
andl
mov
or
cltd
xchg
mov
sbb
mov
xchg
sub
cld
xchg
stc
fsub
cmp
enter
cltd
mov
mov
test
scas
orl
mov
lds
cmc
ss
inc
loop
fnstenv
out
pop
loop
add
inc
jb
clc
aaa
dec
dec
test
leave
and
add
jmp
adc
icebp
mov
push
mov
mov
insl
or
ss
xor
jg
popa
lcall
or
mov
rcll
adc
gs
inc
stos
ds
push
and
sub
cmp
and
addl
jmp
jle
pushf
lea
push
add
cmp
dec
mov
dec
and
cmpsb
sbb
in
pusha
dec
mov
add
pop
jne
lock
mov
loopne
imul
cmc
sbb
and
fsubl
or
test
pop
adc
push
sbbl
cli
xor
sbb
dec
sbb
inc
jl
add
push
movsb
sti
enter
pop
imul
xor
mov
test
int3
pop
and
adc
shll
ljmp
andl
xor
and
fcmovnb
mov
push
mov
xchg
pop
out
outsb
mov
popf
mov
and
inc
daa
xlat
jo
push
pop
jnp
pop
push
adc
jmp
jns,pn
cmpsb
xchg
add
adc
inc
ljmp
sbb
xor
xchg
sahf
push
dec
and
das
jno
cltd
push
es
arpl
insl
and
test
repz
sub
test
add
gs
xchg
int
iret
push
out
cs
insl
mov
pop
jbe
lret
push
sub
push
sbb
rcll
ljmp
popa
testl
add
adc
jg
lcall
hlt
std
imul
int
mov
scas
shrb
repnz
jge
loop
call
push
or
fstp
mov
negb
imul
dec
aaa
cmpsl
sub
aam
inc
dec
adc
pop
push
cmpsb
pusha
push
cmp
es
sbb
mov
jp
cmp
xor
stos
xor
sbb
and
or
adc
loope
lods
je
xor
arpl
and
pop
mov
or
pop
adc
mov
sti
jp
loope
sub
out
push
push
call
sub
out
aam
faddl
pop
push
add
inc
pop
or
adc
dec
lods
iret
pop
xor
or
cli
lock
ja
jnp
xor
jl
imul
mov
fwait
jne
into
sub
mov
roll
stc
xchg
dec
jecxz
jp
in
gs
daa
cltd
icebp
push
shl
jge
das
in
inc
mov
jmp
push
pop
dec
cmp
jae
pop
out
jl
fisttpll
inc
jnp,pn
add
mov
push
pop
gs
cmp
mov
dec
adc
mov
mov
adc
lds
cmc
gs
sbb
je
sub
mov
and
and
mov
mov
mov
sahf
cmp
cmp
push
repnz
jne
vpsrad
mov
xor
lcall
jle
stos
test
cmp
push
push
addb
loop
jmp
adc
stos
cmpsb
xor
insb
mov
dec
cs
aam
sbb
pop
mov
adc
push
popa
and
xor
and
push
ret
sbb
cs
test
inc
imul
xchg
xorb
ss
xchg
add
jp
xor
xor
fdiv
mov
dec
cmpsb
fdivrl
repz
sub
fs
cmpsl
cmpsl
andb
aas
ljmp
mov
fimull
das
les
neg
daa
mov
jge
mov
mov
cmc
arpl
adc
gs
aam
mov
push
xor
mov
test
jbe
inc
or
xchg
sub
xchg
cld
xchg
out
aam
sahf
int
nop
lcall
push
call
and
in
or
test
and
dec
cmp
sub
push
adc
std
popf
shrb
cmp
xor
ret
pop
xor
ret
int
scas
push
jmp
mov
movsb
push
hlt
or
orb
clc
js
cmp
xor
dec
xchg
ja
dec
das
leave
or
jmp
addr16
mov
push
sar
lahf
adc
clc
mov
fstps
push
ljmp
cmpb
pusha
xchg
mov
js
pop
cld
dec
jns
adc
stos
adc
mov
test
mov
test
adc
fstpl
add
xchg
mov
xor
add
test
push
dec
jmp
dec
out
pop
ret
pop
jae
rorl
xor
fs
repz
psubsw
cmpsl
enter
xchg
test
in
push
imul
mov
movsb
in
mov
adc
mov
jae
nop
lds
inc
ffree
cli
inc
addl
movsb
jle
mov
pop
cmp
adc
cmp
sub
mov
xlat
rclb
push
xor
dec
push
loop
mov
mov
dec
pop
sub
es
push
pop
add
and
test
mov
jmp
stos
sarb
mov
or
push
and
add
jae
inc
sub
cmp
xor
scas
xlat
cmp
cmp
mov
or
jp
pop
push
fidivl
in
push
fbstp
into
and
pop
mov
xor
push
iret
push
inc
mov
jp
fsubl
mov
fs
dec
inc
test
popf
push
push
data16
mov
scas
sti
adc
xor
add
push
fmull
jne
outsb
sbb
jge
aaa
xor
push
push
movsbl
int3
sub
shr
xchg
xchg
pop
cmc
pop
add
gs
insb
loopne
js
dec
add
or
or
xor
pop
xor
add
sbb
lock
lret
mov
sbb
ljmp
sub
inc
int3
or
push
stos
push
add
mov
fdivp
xor
sub
dec
or
dec
cltd
add
inc
mov
std
sub
in
or
dec
cmpsb
add
stc
sub
outsb
sahf
je
in
jle
cmp
dec
mov
movsb
lret
and
lock
pop
or
xchg
add
push
add
sub
add
lds
adc
pop
adc
add
leave
pop
add
leave
arpl
in
fdivrl
sbb
mov
lret
mov
push
loope
cmpsb
clc
xlat
dec
cmp
sbb
clc
int
jne
push
push
loope
xor
push
adc
add
loope
adc
adc
pop
lcall
or
xchg
mov
push
adc
or
adc
mov
shl
cmp
mov
popa
and
call
mov
add
or
push
jne
das
inc
mov
imul
aaa
jb
or
add
sub
test
sub
aad
sbb
push
sarb
pop
clc
frstor
les
mov
inc
and
mov
xchg
in
sahf
js
cmc
inc
nop
test
stos
sbb
andl
mov
dec
or
push
sti
fdivl
test
pop
cmpsb
xor
add
mov
cmp
add
in
or
insb
roll
scas
cmpl
push
xchg
outsl
xchg
xchg
add
or
sub
and
test
inc
icebp
mov
xorl
and
aaa
mov
push
imul
loop
rol
and
fldcw
int3
add
push
push
jg
xchg
mov
and
mov
dec
inc
pop
mov
xor
out
gs
loopne
fwait
popf
shrb
sub
cmpsb
stos
or
jmp
outsl
pop
shlb
pop
xor
inc
inc
leave
sub
subb
xchg
lods
xchg
cld
add
sbb
sub
stos
push
stos
scas
imul
addl
popw
in
andb
cltd
sbb
outsl
repz
jl
dec
shlb
inc
xchg
or
test
xor
sbb
mov
push
pop
add
fldl
idiv
mov
mov
adc
xchg
and
jecxz
loop
mov
lahf
or
push
rclb
push
mov
or
pop
daa
aaa
mov
jae
and
jae
fdivs
insl
xorb
jecxz
or
in
and
js
aas
mov
lar
jle
dec
js
dec
jge
push
bound
sarl
mov
mov
jne
dec
sbb
add
inc
leave
mov
ljmp
sti
xchg
insb
cmp
add
sbb
xchg
adc
or
cltd
inc
sub
imull
cltd
inc
pop
lret
cvtdq2ps
sub
mov
sbb
xor
pop
test
cmp
shrl
out
movb
je
mov
mov
xchg
push
lods
imul
xor
cwtl
loopne
jne
xor
js
jb
lea
sbb
mov
sub
push
xchg
cmp
sub
rep
xchg
movsl
icebp
push
test
js
or
push
sbb
mov
out
xor
repz
add
rcrl
test
push
sbb
fs
ds
idivl
outsl
mov
hlt
out
push
sbb
adc
test
cmp
insl
mov
fstp
push
fs
push
jp
lcall
or
push
out
xor
loop
mov
popl
push
xchg
call
xlat
and
orb
imul
cmp
loope
cs
adc
mov
xor
xchg
idiv
mov
sub
mov
dec
test
loop
jnp
loop
inc
sbb
xor
add
sbb
cli
ficomps
cld
ret
leave
push
xchg
movsb
mov
sub
pop
sub
cmpsl
ffreep
out
test
jo
push
filds
inc
inc
xlat
call
ljmp
sub
movsl
test
push
push
push
out
xchg
jp
and
addl
mov
and
jb
nop
mov
sub
in
pop
push
dec
ror
out
cmp
sar
xchg
sub
shlb
js
pop
loope
jne
or
dec
call
add
cmpsb
push
scas
imul
sahf
cli
cmp
lcall
das
sub
out
xor
jmp
dec
xchg
xor
sub
push
cmp
pop
aam
dec
mov
mov
inc
mov
inc
lahf
inc
gs
movsl
jae
xchg
or
sub
push
fwait
cmp
inc
sub
pfrcpit2
mov
xchg
icebp
lret
or
cmc
mov
sub
lods
xor
lods
mov
ss
xlat
loope
push
fdivrl
das
push
sub
xchg
cwtl
test
shl
pop
mov
cld
loope
mov
scas
test
mov
insb
nop
mov
pop
ja
push
fadds
cmp
cmp
int3
sub
inc
fimull
jmp
sub
dec
icebp
outsl
sbb
pop
inc
int3
push
mov
aam
xchg
dec
push
jp
das
xchg
xorl
push
loope
add
fistps
cmpsb
add
outsl
push
leave
aaa
inc
and
adc
push
sub
stos
xchg
jne
test
leave
shl
rcll
arpl
push
pusha
mov
push
mov
add
pop
and
cltd
mov
and
cmp
push
mov
inc
inc
loope
or
call
sbb
push
xlat
dec
pop
out
das
add
call
mov
xor
jne
repnz
insb
jae
daa
not
inc
jbe
mov
jb
addr16
mov
jl
xchg
fistpll
dec
adc
scas
inc
icebp
in
jno
add
imul
or
test
push
jb
xor
jo
push
and
jbe
lods
inc
inc
fisttpl
js
jo
sub
jmp
orl
clc
mov
pusha
inc
jle
xchg
dec
test
sub
outsl
pop
pop
inc
jno
xor
mov
adc
das
push
ja
push
lods
mov
pushf
es
cs
jae
sub
or
pop
je
adc
imul
sbb
mov
ds
adc
push
in
sbb
out
leave
mov
and
lret
sub
in
add
stos
push
test
enter
stc
jmp
mov
test
xchg
lods
push
pop
test
lret
aam
outsl
daa
mov
lret
dec
insb
xor
inc
inc
ret
sbb
jp
xchg
sub
lret
out
mov
push
jle
push
jb
fidivrs
mov
or
push
insb
and
jb
sbb
shrl
mov
pop
and
lcall
mov
sub
scas
jne
cmpsl
pop
cmp
dec
pusha
test
xchg
cmpl
mov
push
jmp
imul
shl
fidivl
inc
shrb
sbb
push
loop
outsl
xchg
sub
clc
bound
xor
sub
filds
adc
mov
mov
cld
mov
mov
or
ja
repz
clc
add
and
mov
pop
data16
mov
movl
jne
jle
nop
shrb
sub
xor
sahf
movsl
sub
or
sti
shl
mov
daa
mov
inc
daa
adc
sti
add
sbb
psrad
or
jmp
shlb
mov
imul
inc
jnp
dec
adc
mov
lret
in
xor
into
mov
lahf
add
add
and
fsub
mov
test
lret
rorb
bound
lock
push
push
xchg
sub
test
xchg
loop
fstpl
cmp
inc
inc
ret
test
adc
sbb
repnz
inc
insb
das
pop
xchg
jle
xchg
in
inc
in
gs
xchg
stos
dec
int3
repnz
pusha
inc
shll
inc
push
pop
inc
ret
mov
xor
push
shll
jmp
rorl
sbb
cld
pop
shrb
testb
hlt
fcoms
aas
les
hlt
fstpt
mov
pushf
outsb
std
adc
nop
jnp
sbb
xor
aaa
sbb
mov
test
leave
shl
mov
push
adc
scas
sbb
xchg
aad
outsl
dec
xchg
push
fsubl
dec
lods
js
insl
les
and
xor
cmp
movsl
test
out
xchg
loope
ds
mov
cmp
aam
or
adc
add
pop
mov
repnz
fists
hlt
push
jge
scas
cmovs
cmp
inc
jg
pop
cli
inc
sahf
scas
sti
and
mov
mov
test
iret
arpl
sub
ja
push
adcl
je
stos
sbb
pop
jmp
cltd
and
sub
cvtpi2ps
arpl
jnp
or
pop
fstl
daa
push
add
inc
in
popf
inc
mov
adcb
test
xchg
mov
mov
int
or
push
jle
add
and
mov
jl
xor
inc
sahf
fs
test
add
repz
push
imul
jle
pop
andl
rorb
mov
outsb
pusha
fisubl
mov
pop
shrl
mov
lea
push
shlb
outsb
cli
mov
pusha
xchg
adc
sbb
sub
frstor
sbb
or
sub
iret
shlb
mov
jecxz
jb
movsl
pusha
lods
fbld
jb
inc
jmp
mov
addl
mov
out
mov
adc
aas
jmp
mov
sbb
mov
push
call
mov
pop
dec
xor
das
outsl
ror
out
jl
pop
pop
push
ds
or
mov
scas
arpl
cld
movsb
dec
dec
mov
mov
push
mov
pop
incl
cmp
sub
pushl
xor
mov
ds
je
movsb
out
fisubs
sahf
clc
mull
mul
shrb
testl
rcrl
push
stos
dec
dec
dec
enter
mov
ljmp
add
or
dec
add
lock
cmpl
fsub
inc
adc
insb
icebp
mov
sbb
mov
js
sbbl
sub
cmp
scas
adc
rcrl
mov
mov
ret
adc
test
sub
mov
gs
pop
sub
pop
lea
inc
cmpsl
pop
shll
xchg
adc
bound
test
ljmp
sub
xchg
movsl
pushf
jle
mov
pop
sahf
inc
repnz
loopne
adc
mov
imul
arpl
mov
jge
jle
bswap
or
mov
imul
nop
lahf
scas
or
xchg
mov
sub
lahf
fistl
ja
push
mov
into
int
sub
fldcw
or
lea
mov
pop
es
push
adc
iret
cmp
fisttps
cmp
add
fidivl
push
sub
mov
sbb
pop
test
add
adc
int
jb
mov
push
dec
add
notb
pop
cmp
xchg
and
xchg
sbb
sbb
and
adc
xor
dec
int3
scas
ret
addl
outsl
icebp
xlat
ror
pinsrw
sbb
fwait
mov
rcll
cmc
inc
cli
mov
imul
sbb
iret
xor
mov
inc
scas
or
jno
fs
push
sub
or
in
leave
jg
and
mov
imul
out
std
mov
fwait
aam
push
cmp
in
adc
cmpsl
pop
jae
mov
cmp
aam
pop
shll
mov
sti
xchg
adc
jp
fwait
stos
out
sbb
cwtl
mov
cs
dec
jp
in
std
aas
cli
xchg
daa
push
jns
push
mov
push
lods
mov
jl
xchg
insb
sub
adc
dec
addl
ja
cmp
xchg
pop
hlt
das
dec
sarl
sbb
and
push
or
aad
cmp
sub
idivl
nop
lret
cli
jns
mov
mov
std
outsb
cmpb
mov
movsl
sbb
or
bound
das
push
dec
nop
mov
aas
inc
mov
andb
jg
mov
sbb
js
xor
xchg
xor
jl
pop
mov
lahf
test
popa
jle
mov
add
adcl
mov
loope
lods
inc
adc
xlat
inc
cmpsb
jmp
fnsave
mulb
jae
cmpsb
enter
movsl
xor
sti
sbbl
flds
cld
int
inc
sahf
pushl
fnstenv
addl
jne
mov
xchg
ss
push
jne
jmp
add
popa
sbb
cmpsl
jnp
adc
mov
sti
mov
push
fcmovnb
sbb
movsb
jbe
mov
mov
fildl
loop
mov
jnp
into
or
mov
das
ss
popl
insb
out
sub
xchg
test
hlt
mov
sahf
iret
imul
adc
iret
jp
lret
dec
out
push
ficoms
xchg
push
gs
fcmovnb
loope
data16
jb
dec
jg
sub
push
out
filds
lea
mov
cmp
repnz
xor
outsl
not
inc
loop
in
xor
fsubr
icebp
pop
ret
pop
mov
or
stos
xor
xchg
mov
fadd
and
sub
lret
xchg
pop
fucomip
rcrl
ljmp
adc
push
xorb
sub
fiadds
int
mov
arpl
shlb
xchg
lahf
dec
sbb
xchg
test
add
mov
push
pop
push
mov
aas
mov
add
hlt
test
in
loopw
mov
cwtl
sbb
and
ret
mov
stos
and
sbb
inc
jno
pop
push
inc
and
shll
sbb
and
js
leave
aad
mov
stos
repz
fstp
inc
clc
sahf
test
jmp
enter
mov
mov
daa
ss
js
or
jg
inc
es
xor
outsb
shll
jg
pushf
cmpsl
lcall
and
sub
repnz
call
scas
jmp
loope
popf
sti
push
lcall
jp
mov
fwait
shlb
or
nop
pop
fwait
pop
add
cs
lds
inc
fucomp
hlt
aaa
fisubs
loop
dec
aas
xchg
bound
adc
ret
mov
mov
xorb
int
dec
pushf
out
mov
data16
push
sbb
sub
mov
outsl
add
loop
sub
add
int
daa
lods
dec
stos
xchg
sarb
mov
mov
popa
out
adc
loop
jb
insl
pop
cmp
sbb
enter
test
mov
xchg
jno
outsb
jl
call
gs
jnp
mov
mov
adc
pop
cmp
mov
fisubrl
insl
inc
insb
add
mov
jg
insb
inc
jle
cmpsl
divl
cmc
lea
adc
or
pop
iret
les
dec
fsubr
div
xor
jmp
xor
pop
mov
clc
jmp
inc
cmpsb
test
popf
adc
mov
in
push
jbe
sub
arpl
dec
in
push
jb
pop
and
fnstsw
sub
shll
mov
enter
std
fbstp
enter
int
stc
sub
push
push
push
pop
int3
pop
out
mov
and
push
add
xor
orb
and
jg
dec
aas
xor
add
mov
loopne
jno
cli
mov
insb
pushf
mov
aam
call
add
repnz
or
sbb
inc
int
sarb
into
imul
stc
dec
push
and
pop
add
lret
inc
scas
clc
or
push
les
xchg
sbb
fsubrl
fldcw
into
xor
push
stos
lock
test
nop
push
iret
mov
cmc
aad
lret
jnp
dec
xchg
movsl
mov
jbe
add
jecxz
push
frstor
jo
adcb
sbb
adc
push
movsb
jno
rolb
or
add
and
jnp
xor
ret
out
jno
mul
mov
and
mov
daa
jle
fdivrs
mov
addr16
pushf
loopne
ss
sahf
mov
test
fbld
negl
lcall
movsl
push
ja
in
pop
lcall
mov
test
add
es
push
clc
cmp
out
cmp
xchg
or
mov
add
dec
rcr
pop
dec
xor
or
sti
cld
xlat
out
add
lret
mov
jmp
add
out
xor
movsl
xchg
sbb
inc
js
sub
xor
cmp
enter
je
push
jnp
mov
out
jo
push
test
mov
stc
pop
inc
ror
cmc
call
wrmsr
jle
jg
add
jmp
pop
roll
fwait
imul
pop
dec
push
pop
mov
loopne
mov
es
mov
xor
add
adc
mov
jge
sub
mov
hlt
inc
xchg
mov
es
fisubs
mov
jp
pop
cli
pop
fsubrp
ds
xchg
xor
dec
and
push
push
adc
nop
jae
out
lods
daa
mov
adc
mov
test
or
add
in
popa
lods
or
jne
lahf
sbb
mov
test
test
out
xor
iret
jne
mov
popf
sub
and
mov
pop
aad
cmpsb
rorb
outsl
cmp
fneni(8087
out
mov
pop
xchg
fwait
mov
push
addr16
push
adc
dec
enter
out
or
iret
fsubr
cld
or
mov
xor
mov
sbb
das
lods
push
cmpsl
mov
repnz
int3
fwait
cmc
nop
push
hlt
dec
and
rcrb
call
ret
test
aad
loopne
sbb
cli
mov
mov
push
sub
or
rorl
aaa
fdivr
xchg
imul
pop
mov
shr
aaa
mov
cmp
dec
push
jns
mov
mov
and
out
xor
sbb
insl
pop
xchg
mov
push
rclb
aas
cvttps2pi
mov
notb
xor
fwait
lods
dec
js
or
fidivs
jo
xor
jle
or
and
movsl
sbbl
lahf
mov
sar
mov
sbb
scas
jge
mov
add
add
mov
sbb
fdivl
imulb
mov
clc
scas
repnz
dec
pop
xchg
jb
fmul
xor
cltd
lcall
shrb
push
mov
lock
loope
mov
push
stos
inc
jp
inc
rol
nop
loope
and
rorb
in
rcll
inc
push
fs
aas
loopne
and
or
outsb
adc
jp
push
sbb
jne
mov
cmc
or
aam
int
adc
mov
popa
aaa
lcall
xor
fs
dec
sbb
lock
mov
outsl
or
insb
test
pusha
cmp
repnz
and
mov
mov
ss
mov
int3
jp
xor
jo
push
cmp
psllq
inc
cmp
push
dec
or
orl
pop
jns
iret
lock
sbb
xor
mov
andb
mov
inc
xchg
into
js
sub
ljmp
iret
lret
aas
scas
fs
cmpb
stos
cltd
xor
fistpl
jmp
outsl
fisttpll
scas
leave
push
in
push
cmp
frstor
inc
lds
and
loopne
fwait
ja
cmpsb
mov
cwtl
pop
sub
push
testb
pop
jg
hlt
jb
xor
fadds
filds
push
inc
fidivrl
push
testb
inc
jne
mov
int3
popf
push
and
mov
mov
faddl
addr16
mov
adc
popf
fnsave
lret
sub
insb
mov
addr16
std
cmp
push
mov
jl
aas
sbb
adc
out
mov
sub
cmp
icebp
xor
mov
in
or
sbb
mull
mov
push
cli
movl
push
xchg
sub
and
inc
ret
pusha
in
jbe
mov
popf
inc
jmp
sub
je
dec
pop
clc
lds
cwtl
xor
addb
cmp
and
into
js
ror
sbb
std
push
fistl
sbb
mov
mov
lock
xor
cmp
jmp
xchg
mov
divl
repz
mov
push
stos
mov
testl
mov
inc
inc
cwtl
cmp
fidivl
aaa
iret
cmp
sub
xchg
in
testl
stc
insb
out
pop
lds
dec
gs
icebp
out
cwtl
mov
dec
sub
cltd
rolb
fisttpl
push
mov
pop
ss
fimuls
pop
add
ret
scas
loopne
and
test
add
push
std
inc
mov
cmp
cmp
add
nop/reserved
fs
dec
aas
std
mov
jecxz
mov
loopne
popf
into
add
add
mov
ret
jge
and
test
fld
fwait
loopne
dec
mov
jl
aad
or
clc
inc
adc
movsb
das
dec
movsl
cli
add
inc
jbe
roll
mov
and
aad
push
mov
aas
add
inc
dec
scas
loop
test
mov
lds
add
push
mov
xlat
out
aad
outsb
and
out
push
cld
mov
jno
notb
cmp
jge
out
outsb
jne
or
push
xchg
cmpb
jmp
cmp
mov
mov
cli
insl
xchg
pop
xor
dec
test
loop
add
mov
fidivl
mov
test
loope
sti
mov
push
dec
sub
xor
add
jo
ret
icebp
and
jge
lock
inc
mov
mov
cmp
pop
loope
push
xchg
loopne
sbb
and
ljmp
jb
jle
repz
subl
aaa
inc
add
fimuls
jecxz
xchg
out
and
leave
clc
xor
sbb
dec
pop
int
ljmp
cld
sarb
in
xchg
mov
stos
add
sbb
jecxz
or
sub
mov
xor
cltd
loop
mov
stos
out
push
add
jno
es
xchg
decl
aad
gs
daa
jecxz
adcl
dec
jle
sti
bound
cs
sbb
add
outsb
movsb
xchg
test
mov
mov
stos
outsl
inc
jb
jae
inc
arpl
outsl
dec
pusha
movsb
and
rcll
and
ret
outsl
outsb
or
push
dec
jmp
sbb
pop
sub
cmp
sub
loope
lcall
lods
jns
sbb
inc
inc
popa
outsb
lods
movsb
cmp
sahf
push
subb
jp
add
int3
ds
sbb
dec
dec
lods
mov
add
push
test
jge
fidivrl
subb
and
xor
sbb
xor
out
push
gs
fnstenv
push
mov
add
aaa
lret
cmp
rcl
inc
ja
ja
xor
cmp
mov
test
fstps
dec
in
mov
mov
add
mov
push
out
mov
mov
fidivs
int3
stos
cmpsb
mov
mov
divb
addr16
imul
mov
mov
lea
popa
xor
xorl
outsb
cmpsb
push
or
inc
sub
jle
inc
jne
jae
fcoml
shrb
or
sbb
arpl
jnp
fidivrl
les
scas
push
out
mov
shrl
cld
inc
ret
out
mov
testb
xchg
addr16
inc
jae
push
lahf
and
mov
mov
nop
jl
aad
stos
push
icebp
mov
test
jmp
push
aad
pusha
mov
mov
sub
push
cmc
add
xchg
movsl
insl
cs
lods
lahf
mov
fwait
lods
rorb
inc
ret
push
jecxz
sbb
pcmpeqb
xchg
pop
adc
mov
add
jb
imul
in
xchg
rcr
add
mov
cmp
ss
dec
pop
cmp
xor
ljmp
adc
outsb
mov
pop
scas
pop
sbb
dec
push
jbe
xor
push
std
cmp
mov
xor
adc
mov
fwait
inc
xorb
lea
push
cmp
lods
test
cmp
das
addb
sub
mov
lock
push
adc
mov
in
outsb
cli
mov
sub
lahf
pushl
push
and
out
mov
mov
adc
adc
sbb
mov
cmp
push
jmp
pop
push
lret
out
repnz
faddl
dec
outsb
or
push
sahf
adc
xchg
mov
in
sbb
mov
push
mov
je
movsb
or
aas
pop
es
cmc
mov
sbb
jecxz
enter
mov
inc
sbb
mov
mov
mov
cmp
mov
cmp
push
aam
popf
incl
loop
ja
cmp
jbe
pop
lods
aad
mov
and
repnz
mulb
fsubrs
push
inc
repz
lods
cmpsl
loope
fildll
scas
out
mov
iret
mov
jg
xor
andl
inc
jl
push
lret
lahf
jp
mov
stc
sub
cmpsb
enter
add
and
testl
scas
inc
xor
repz
jmp
cmc
or
xchg
mov
xchg
jecxz
cltd
shll
insb
mov
sbb
dec
test
mov
jmp
in
loopne
mov
xchg
fcoml
xor
xor
cwtl
and
js
gs
addr16
stos
xchg
add
inc
int3
int3
mov
std
std
lods
icebp
dec
into
dec
int
cmc
inc
icebp
adc
out
mov
add
or
mov
jne
push
cmp
test
pop
push
jg
test
xchg
mov
xor
lds
cmp
ljmp
mov
lcall
sbb
and
ds
mov
stos
test
add
and
das
xchg
jo
cmpl
scas
push
lahf
push
aad
and
popa
add
fs
push
sub
loope
jecxz
sbb
mov
cmp
and
loope
mov
test
push
mov
in
mov
mov
js
xchg
fsubs
adc
arpl
cmp
sbb
or
jne
popf
pop
inc
int
cwtl
push
jbe
test
out
outsl
paddq
loop
dec
cltd
adc
clc
sbb
adcb
js
mov
sub
sub
and
mov
push
test
mov
test
add
mov
inc
pop
xor
inc
pop
add
sar
mov
or
out
pop
fistpl
add
jnp
and
cmp
mov
cmpsb
in
leave
cmpsb
sarb
sarl
stc
mov
out
inc
ljmp
adc
lods
jbe
test
mov
or
in
in
je
rolb
or
stos
mov
push
pop
lods
sbb
js,pn
jo
sarb
inc
mov
shll
out
inc
xchg
mov
or
add
and
and
sbbb
iret
push
and
loopne
add
lock
test
insb
imul
xor
out
jnp
pop
daa
ror
xorb
and
and
mov
add
push
ja
loope
mov
pop
jae
sti
mulb
xorl
enter
xchg
jmp
inc
or
mov
xchg
push
cmp
and
in
lods
sbb
jmp
popa
dec
cmp
sbb
jp
add
mov
arpl
pop
imul
mov
cmpxchg
cmc
push
cmpsl
addb
mov
xchg
shl
inc
xor
repnz
outsl
add
push
int
or
mov
inc
xchg
in
dec
pop
cmp
loope
jg
pop
pusha
pop
mov
push
push
fdivs
nop
mov
mov
push
mov
jge
sbb
ds
mov
loopne
sub
push
sub
sbb
dec
add
xor
ret
inc
mov
fidivs
ljmp
xchg
xchg
sub
cli
sbb
and
xchg
and
mov
cmpsl
fidivrs
lods
mov
cmpsb
fisttpll
push
sbb
jne
sbb
sub
hlt
dec
sub
jle
cld
icebp
call
jecxz
test
fisubrs
jmp
imul
cmp
pop
mov
jmp
dec
insl
mov
xchg
out
sub
addr16
pop
imul
in
loop
add
cmpb
mov
jae
adc
cmp
scas
cmpsb
ret
in
stos
or
stos
loop
ss
inc
sub
int3
imul
imul
arpl
push
mov
ljmp
shrb
sti
aad
testb
lret
nop
adcb
leave
aad
mov
push
add
imul
aam
repz
mov
jl
jne
shlb
adc
das
popf
js
into
push
xchg
or
inc
xchg
lcall
leave
popa
rorl
fsubrs
jae
addr16
push
clc
jo
test
sbbb
jns
ss
inc
das
push
imul
and
andl
dec
lock
inc
popf
jle
adc
sub
jmp
pop
jo
mov
add
adc
mov
adc
xchg
dec
das
inc
mov
mov
push
ja
pop
mov
mov
inc
outsb
xor
call
adc
or
mov
xor
std
out
pop
nop
jns
xchg
push
stos
jmp
adcb
jb
and
push
imul
outsl
xor
bsr
dec
push
xor
les
mov
les
sbb
insb
and
call
xor
outsb
mov
out
inc
add
pop
pop
jge
cs
scas
sbb
lock
shl
xlat
test
pop
leave
outsb
loopne
ja
xchg
bound
test
dec
jne
or
xchg
fimull
pushl
push
lods
loope
push
subl
stc
xchg
test
leave
pop
push
das
xor
iret
mov
xchg
dec
lock
and
rcl
jge
les
jg
xlat
xchg
adc
mov
jl
mov
or
push
lock
cli
ficomps
xorb
xchg
push
lods
sbb
xchg
arpl
jmp
addr16
clc
pop
jmp
out
loop
inc
xchg
ret
dec
jnp
sti
xor
jae
ja
jbe
sbb
fiadds
xchg
sbb
cmpb
imul
lret
into
inc
iret
ret
mov
out
lock
in
mov
pop
es
mov
xchg
xor
lret
jmp
push
js
or
jbe
jo
test
inc
std
lret
fidivs
outsl
jns
stc
push
dec
pop
sarb
add
aam
int3
mov
mov
cmp
insb
in
fnstcw
nop
jno
adc
mov
sbb
movsb
inc
add
mov
add
jle
sbb
xor
push
jbe
outsb
mov
out
fucompp
out
pop
scas
adc
adc
fadds
xchg
fs
mov
xor
sub
das
js
mov
jle
arpl
dec
insb
pop
mov
in
mov
fwait
lods
pushf
mov
push
mov
xor
sbb
daa
dec
mov
push
rorl
dec
rorb
jmp
pushl
pop
lret
pushf
or
inc
insl
sbb
jl
lahf
movsb
jne
sbb
pop
sub
push
cmp
mov
nop
stc
sti
push
ljmp
adc
fidivrl
lds
sahf
or
and
dec
testb
pusha
mov
dec
out
and
dec
fildl
mov
adc
fs
jecxz
push
arpl
aaa
int3
sub
and
dec
flds
or
mov
cmc
cs
ja
cmp
stos
in
jns
fs
mov
mov
jno
in
fstpt
jl
add
or
and
arpl
push
ficoms
cmpsl
and
and
mov
mov
pop
sbb
pop
cld
rcr
mov
mov
cmp
push
inc
sbb
push
cmpsb
test
int3
add
sub
inc
shlb
jns
sbb
in
out
mov
mov
pop
ds
adc
cmp
inc
jns
sbb
sbb
test
imull
inc
pop
cltd
sbb
pop
jg
stc
popa
enter
fisubrl
enter
in
cmpsb
std
ljmp
shrb
push
ds
mov
lret
jecxz
imul
adc
jmp
stc
shrl
mov
imul
int
mov
movsl
icebp
popf
iret
aas
ja
push
sub
or
dec
and
pop
test
sub
fmull
mov
repz
sub
les
leave
addr16
and
dec
mov
inc
cmp
jmp
adc
adcb
ss
in
stos
insl
pop
inc
jecxz
sub
xor
lea
add
mov
iret
scas
xor
ja
stc
cmpsl
adc
gs
xchg
lods
fwait
pop
adcl
arpl
push
adc
adc
pop
in
jbe
add
clc
cmp
push
lahf
repz
jo
or
sbb
lods
inc
push
jo
and
xchg
push
jl
push
sub
les
adc
enter
pop
mov
addb
das
pop
jb
fs
mov
and
sti
clc
loop
xor
xor
and
cmp
nop
jmp
mov
call
call
xor
test
lahf
xor
inc
movsb
xor
cmpsb
inc
iret
js
popf
dec
test
mov
adc
cmovne
test
or
insl
ss
test
jle
mov
lds
mov
xchg
rclb
imul
gs
movsb
lcall
or
sbb
stos
test
pop
addr16
lods
in
ret
mov
and
out
inc
movsl
xor
je
lea
mov
push
lea
push
mov
inc
add
aam
jno
push
imul
inc
xchg
fincstp
pop
fsubl
mov
jnp
mov
inc
xchg
jnp
inc
mov
out
xor
into
add
mov
out
mov
jns
pusha
sub
adc
sbb
cmpsl
rorl
xchg
mov
jg
in
imull
loopne
xor
icebp
mov
adc
pop
aaa
and
cmpb
sbb
in
loop
jb
lcall
test
loope
imul
into
jmp
mov
cmp
addr16
fwait
sahf
ja
inc
mov
or
push
ss
das
cmc
mov
aam
imul
xor
pop
lahf
and
sar
movsb
jle
insl
les
fldcw
add
decl
or
mov
loopne,pt
fisubs
aad
rclb
les
and
in
mov
fcomps
mov
shr
adcl
mov
push
sub
pop
pop
hlt
pop
scas
scas
inc
cwtl
dec
fs
jns
pop
rorl
cli
or
mov
lock
aaa
dec
pop
mov
arpl
hlt
mov
jo
xchg
xchg
jp
rcrb
div
sub
icebp
cmp
sbb
mov
test
and
negl
xchg
fistps
ficoms
xorb
dec
pop
xchg
ja
mov
lret
cmp
movsb
in
adc
mov
mov
sbb
decl
sti
xor
not
mov
cs
dec
dec
incb
and
call
stos
push
or
repz
jmp
fdivr
outsl
pop
xor
outsb
mov
dec
jns
insb
mov
fwait
ja
loop
xor
jno
movsb
das
push
adc
fidivrl
adc
out
sbb
and
cltd
test
mov
pop
js
repz
pop
jmp
std
insl
add
jnp
jecxz
xchg
rcrb
mov
mov
jnp
cmpl
add
clc
jmp
sbb
push
jge
mov
cmp
pop
dec
push
fnstcw
dec
ss
loopne
cmp
xchg
stos
fisubrl
push
and
shll
pop
cmp
mov
push
mov
jg
mov
push
pushf
push
pop
cmp
and
loopne
lcall
push
jae
add
adc
sub
rorl
mov
mov
sbb
pop
inc
dec
lods
fistps
negb
loop
pop
loope
dec
lea
insb
ret
std
adc
sbb
in
mov
sub
loopne
repnz
int3
cmp
and
dec
jne
stc
int
test
xor
xchg
xchg
add
pusha
repnz
jg
mov
add
int3
pinsrw
pop
push
mov
cmpsl
sbb
fnstenv
mov
xor
push
jbe
mov
xor
stos
inc
mov
mov
pop
and
cwtl
repnz
pusha
ret
sub
inc
sbb
push
outsl
fstpt
sbb
mov
pop
jb
in
aam
lock
cmp
rolb
push
lea
and
lea
hlt
mov
push
popa
fs
pushf
jl
gs
mov
decl
jge
mov
lahf
ret
add
push
inc
xchg
xor
xchg
sbb
mov
mov
andl
sti
data16
jo
jns
xor
imul
xor
stc
xchg
sbb
ja
lret
fwait
sub
push
sub
add
fsubrl
mov
xchg
cli
push
add
aam
movsl
jae
inc
xchg
xchg
jge,pn
push
ss
mov
out
mov
add
das
push
mov
lds
push
cmp
outsb
jmp
loopne
imulb
dec
mov
sbb
mov
cld
enter
jbe
pushf
xor
xor
dec
stc
ret
push
inc
push
dec
test
push
ficompl
scas
cld
aad
bound
inc
or
jge
sub
repnz
repnz
fbld
hlt
rcrb
imul
and
mov
test
repz
std
subl
xor
push
push
cld
jae
mov
sbb
jecxz
in
mov
xor
adc
ds
sub
loop
fdiv
adc
push
xchg
stc
cmpsb
imul
pop
out
fidivrl
insl
pop
pop
psubd
insb
popa
cmp
sar
fsubrp
movsb
xor
out
loope
fldenv
push
mov
pushf
daa
pop
xchg
sub
mov
push
cmp
mov
mov
dec
lret
gs
repz
mov
fdivrs
test
jl
nop
mov
mov
pop
jle
and
add
adc
xchg
and
or
daa
filds
out
movsb
xchg
jge
je
mov
sbb
shrl
mov
cltd
dec
jo
cmp
jle
xchg
fwait
pop
in
dec
clc
mov
sbb
jnp
push
ret
pop
pop
stos
jne
js
dec
push
mov
fstl
imul
lret
pop
mov
push
rcrl
cmpsb
fldl
dec
add
mov
icebp
loop
sti
je
inc
add
or
lea
xchg
pop
js
sub
hlt
xacquire
in
add
repz
mov
sti
push
les
sub
aad
or
jmp
jge
sbbl
inc
cmp
sub
jp
push
aam
and
mov
cmpsl
add
or
fisttpll
lret
decl
push
adc
das
ret
test
lods
push
repz
insb
mov
dec
xchg
dec
je
pushf
pop
das
dec
xor
cmp
in
xchg
sbb
mov
pop
pop
ds
xor
scas
outsb
test
je
mov
push
mov
clc
jb
repz
inc
scas
push
or
xchg
divb
fmull
mov
or
cmp
sub
mov
mov
orb
lret
pop
add
lret
out
or
loopne
add
and
cmp
adc
or
call
movsl
pop
into
push
inc
dec
cmpsb
mov
mov
mov
adc
mov
xchg
call
mov
int
xchg
jns
addr16
scas
rcr
les
pop
cmp
in
ja
out
xchg
xchg
fnstenv
add
mov
sbb
test
mov
mov
xor
out
pushf
mov
fwait
loop
pop
cmpb
lcall
jbe
insb
jmp
adc
add
sbb
push
outsb
and
insl
in
pop
fstl
adc
xor
xchg
out
jns
push
fs
pop
dec
push
sbb
mov
in
mov
jb
pop
sub
rcl
outsb
push
mov
jo
sti
dec
lahf
mov
lods
mov
mov
push
lds
add
repz
xchg
mov
pop
sub
lods
cmpsl
push
mov
xchg
lock
jp
dec
adc
jne
stos
or
mov
or
sub
loop
xor
xchg
xchg
out
add
fnstsw
movsb
inc
mov
adc
in
sbb
cmp
xorl
addb
jle
pusha
outsl
xchg
add
add
sti
sub
jmp
xor
jns
in
shll
push
xchg
fimuls
sub
not
push
jge
add
loope
aaa
les
sar
icebp
cltd
lret
pop
jne
sub
adc
adc
push
xor
dec
cmpsb
jge
sub
adc
pop
mov
adc
cmp
cld
mov
mov
les
push
lret
or
lods
leave
xorb
lock
xor
nop
pop
xchg
testb
fwait
in
jnp
and
add
inc
jle
in
sti
lret
mov
xchg
cwtl
xchg
into
sub
std
xchg
leave
in
jp
rcrb
movsl
in
cmpsb
pusha
cmp
cmp
jmp
pop
push
std
dec
cmpsb
insl
add
stos
pop
inc
push
pop
shl
scas
sub
add
mov
sub
iret
cmpsb
inc
es
jb
popa
and
xor
movsb
dec
adc
cmp
in
push
out
or
xor
mov
pop
cmp
dec
sahf
mov
xchg
cs
or
clc
fildll
bound
pusha
aam
jmp
pop
insl
faddp
shlb
dec
repz
xor
sub
jg
scas
dec
mov
lret
out
dec
adc
or
lods
push
aaa
dec
addr16
cmp
cli
push
imul
push
mov
enter
mov
mov
mov
cwtl
pop
decl
lods
iret
mov
jns
sub
mov
inc
stos
js
scas
mov
jg
cmp
mov
pop
xor
scas
and
cli
lock
jbe
mov
inc
cmp
pop
push
popa
inc
popf
mov
ret
leave
mov
lret
fadd
andb
adc
cmp
test
or
mov
push
mov
punpckhwd
and
push
addr16
into
or
aas
add
or
popf
sbb
jle
xorl
inc
clc
xor
aad
inc
and
andl
out
inc
jae
or
es
scas
clc
stc
leave
pop
push
xor
mov
lods
pop
push
loop
in
das
mov
into
test
inc
aas
test
sbb
and
add
mov
jl
test
dec
rolb
into
les
fstl
out
call
cmp
ljmp
in
and
push
js
mov
pop
lock
and
mov
ficoms
xchg
test
in
inc
push
sahf
movsb
adc
lock
out
mov
enter
jmp
imul
addb
in
leave
into
in
mov
pop
imul
orb
xchg
lea
adc
mov
fs
fneni(8087
test
dec
jae
xor
push
cwtl
cld
mov
and
xor
pop
xchg
scas
test
add
and
lret
or
mov
and
xchg
sbb
clc
sub
sbb
mov
jl
cmpsb
cwtl
addb
mov
xchg
mov
dec
jns
div
pop
pop
fldl
cld
lds
cltd
jmp
pop
xchg
lock
pop
in
shl
sub
xchg
and
adc
das
jmp
xchg
mov
and
js
rolb
mov
push
cmp
sub
test
xchg
fdivs
jmp
popa
sbb
cmp
push
js
clc
jnp
mulb
sbb
cmpsb
jge
cmp
mov
pop
pop
adc
dec
inc
aas
inc
add
pop
fbstp
mov
ret
movsl
mov
xchg
fwait
scas
popf
ficoms
in
addr16
bound
pop
outsb
xor
jl,pt
fs
movsl
int3
cmc
ror
or
add
dec
push
pop
ss
add
lods
and
and
cld
mov
aam
adc
jae
or
loopne
je
push
push
push
cli
out
nop
jnp
cmp
cwtl
je
rep
push
push
or
and
fxch
inc
push
xor
jo
and
push
xor
dec
mov
pop
loope
mov
pop
cmp
sub
dec
pop
dec
sub
lahf
adc
sarb
and
sub
loop
pop
adc
dec
push
jp
lds
sbbb
add
adc
mov
out
nop
pop
jecxz
and
daa
and
adc
iret
sub
bound
fs
mov
pop
xchg
imul
cltd
inc
fldenv
add
mov
stc
pop
mov
test
je
adc
inc
pop
push
dec
int3
adc
push
addb
jp
int
pop
jg
in
lea
mov
dec
mov
sub
repz
fimuls
mov
fiadds
jmp
repnz
lods
lcall
sti
cmp
jg
stos
jmp
mov
rcl
jle
add
jge
lret
mov
push
mov
rcll
pop
adc
js
loope
aaa
insl
sub
mov
mov
scas
dec
in
lods
mov
xchg
sub
popf
cmp
sub
mov
ficomps
adc
fcompl
cmp
shll
add
loopne
xchg
loope
mov
dec
cmp
cmp
mov
arpl
fildl
jle
test
cli
lds
lock
in
pop
mov
sbb
dec
xchg
push
pop
pop
ds
push
push
mov
jmp
clc
pop
mov
idivb
mov
inc
dec
push
and
jle
aaa
pop
inc
ds
incb
movsb
cmpsb
or
out
xlat
out
testl
imul
add
fsubs
cmp
aas
add
nop
sbb
xchg
jb
sub
nop
movsl
out
les
pusha
jns,pn
js
aad
enter
dec
dec
sbb
push
daa
enter
push
jge
popa
mov
and
lcall
adc
jl
xchg
xlat
pop
out
mov
ja
rcrb
mov
std
inc
and
mov
pop
push
cmp
mov
xchg
pop
xchg
lds
not
sbb
stos
inc
adc
nop
add
pop
sti
push
dec
int3
repnz
adc
jns
rcrb
add
fsub
jl
or
jbe
xor
add
in
jnp
popa
sub
mov
cmpsb
test
data16
cmp
lods
add
stc
in
mov
fdivr
popf
pop
imul
into
scas
cmp
out
outsb
fstl
int3
negl
dec
ret
outsb
mov
sarb
push
nop
mov
outsb
dec
adc
ja
mov
sub
mov
inc
pop
repnz
inc
pop
ljmp
ss
jmp
dec
popf
mov
xorb
adc
outsl
shl
push
xchg
mov
iret
push
inc
jmp
cmp
pop
adc
pop
or
pushf
mov
fsubrp
cmp
outsl
out
movsl
fcmovnb
jbe
lods
xchg
outsb
pop
das
and
or
sbb
cmpl
iret
push
mov
or
test
test
push
mov
fs
je
mov
cmc
outsb
fdivl
or
repnz
pop
mov
push
mov
pushf
int
pop
mov
repz
sub
test
mov
jne
in
ss
bound
mov
cld
and
pop
mov
mov
incb
push
jl
cmp
sub
in
outsl
cld
mov
inc
jae
xchg
xchg
bound
and
mov
push
lds
lahf
sbb
cli
fstl
into
pop
jmp
adc
push
je
add
je
gs
xchg
xchg
ret
jg
js
outsl
in
inc
into
mov
loope
pop
sbb
xor
xchg
jae
jle
or
daa
lret
sbb
std
inc
iret
adc
fwait
orl
cs
sub
and
add
hlt
addr16
div
or
push
mov
push
fstp
hlt
sbb
xchg
dec
popa
dec
push
ds
rcrl
sbb
aam
sub
fistl
insl
jb
xchg
test
fcomp
sbb
dec
adcb
jp
data16
pusha
sub
pop
xor
stos
add
sub
inc
sahf
or
insl
xchg
imul
sarl
push
lret
add
mov
jmp
push
pop
inc
aam
inc
repnz
add
loop
mov
sbb
out
aam
mov
pop
je
leave
sub
gs
in
sub
lds
dec
fs
lahf
or
jge
xchg
push
fnstcw
jle
fistpll
loop
or
enter
push
push
jb
dec
mov
lods
push
pop
jns
cmpl
test
hlt
sbb
sub
popf
int
pop
js
jbe
cmp
xor
xchg
jns
jne
add
inc
pop
or
loop
jo
push
outsl
loope
mov
fwait
js
cwtl
aaa
stos
pop
inc
loope
addr16
add
jle
inc
and
insb
fwait
shr
int3
leave
stos
loopne
arpl
in
mov
jle
in
daa
lds
sti
daa
sbb
mov
push
or
mov
cmpsb
cld
or
outsl
out
daa
es
inc
cmpsl
fldenv
loopne
push
push
je
adc
insb
mov
popf
mov
sbb
jae
mov
adc
jno
js
mov
mov
or
jg
ja
mov
mov
and
aaa
fimull
dec
stc
movsb
fisubrl
mov
push
jecxz
add
std
negb
adc
fildll
int3
sti
or
repz
adc
aad
es
fdivrs
int
ret
scas
in
int3
sbb
dec
ds
cmp
into
imull
push
in
cld
outsb
addb
inc
test
dec
bound
push
std
or
pop
xchg
pop
push
dec
pop
hlt
andl
push
dec
imul
sub
leave
xchg
sub
xchg
cli
inc
ret
stc
in
mov
iret
mov
add
jg
fwait
cmpsl
int
inc
push
mov
test
and
outsw
xlat
cltd
xchg
leave
cmp
pusha
mov
rolb
inc
nop
repz
inc
cmpsb
pop
cmp
data16
push
push
jecxz
shrl
movsl
cmp
push
inc
pop
jne
lods
sub
out
mov
daa
sub
cmpl
xchg
sub
pop
dec
out
fwait
and
out
insb
sahf
cmp
push
cmpsl
fdivl
loope
into
not
push
ja
mov
add
iret
xor
dec
rorl
jae
and
pop
mov
test
cli
lahf
clc
inc
repnz
cld
mov
sti
out
in
push
mov
sbb
shll
cltd
jmp
enterw
add
jle
mov
cmp
stos
scas
pop
ret
mov
xchg
jmp
push
mov
bound
sub
push
and
shrl
cmp
stos
cmp
mov
negl
sahf
mov
and
incb
sub
sub
pop
cmp
xchg
mov
and
cld
or
lock
sbb
xchg
mov
cmpsl
adc
nop
and
loopne
sub
mov
add
scas
call
jecxz
loopne
cld
mov
xlat
xor
and
push
fwait
inc
sbb
mov
stos
jge
xlat
mov
and
es
adc
mov
fnstenv
fisubl
shr
xchg
popf
mov
jnp
insb
xor
jne
adc
add
adc
jle
in
and
push
orb
mov
inc
dec
and
jae
int3
frstor
hlt
xchg
cmp
adc
out
repz
pop
dec
mov
sti
lds
addr16
cmp
xchg
cld
out
mov
subb
add
dec
es
jno
int3
push
pop
dec
mov
mov
repnz
pop
jle
add
mov
or
push
push
cli
fisubrs
push
imul
not
cmp
mov
xor
out
pop
push
mov
push
cmovae
jne
fistps
mov
lahf
sub
hlt
ja
int3
test
hlt
xchg
or
adc
rorl
xchg
cmp
out
push
mov
mov
imul
rcrb
pop
xor
push
mov
push
outsl
push
push
lahf
addr16
outsb
dec
mov
cmp
test
or
pop
pop
mov
loop
jne
insb
cld
outsl
out
dec
mov
int
out
cltd
call
sbb
mov
popa
and
mov
xor
inc
push
dec
and
pusha
mov
push
adc
or
push
mov
push
pop
ds
mov
in
ret
test
call
sbb
or
dec
adc
js
aad
cld
jg
cmp
push
push
ja
shll
nop
add
lahf
sub
pop
dec
mov
shl
jb
hlt
dec
xchg
test
xchg
lret
repnz
fs
and
mov
bound
xchg
push
repnz
or
jnp
push
lods
xor
addr16
repz
xor
sbb
jmp
ficompl
pop
mov
sar
jns
rorl
mov
inc
sub
xor
push
and
jmp
out
lcall
xchg
call
pop
and
xlat
btc
lock
fstpt
pop
jl
jp
cwtl
xor
loopne
push
adcl
ja
lds
cmc
sbb
push
scas
inc
cwtl
imul
mov
andl
inc
push
cmpsb
enter
jns
test
loop
jb
sahf
lcall
mov
xor
outsl
mov
rcrb
mov
les
and
sub
in
insb
add
lock
inc
inc
fdiv
movsb
dec
push
xchg
mov
dec
mov
shl
sbb
sbb
sbb
in
cltd
mov
add
jne
enter
rolb
jbe
hlt
out
push
jge
sbb
xor
pop
sbb
cmpsl
mov
idivl
aad
or
mov
sbbl
shll
sub
jg
stos
loope
js
sbb
int3
pop
sti
push
gs
mov
loop
rcrb
dec
repz
in
sub
or
fnsave
fsubs
enter
adc
sbb
pop
jge
mov
mov
inc
mov
sub
xchg
test
push
push
clc
dec
xchg
sub
inc
add
repnz
mov
int
mov
movsb
movsl
mov
inc
popf
pusha
sbb
inc
xlat
call
dec
iret
movsb
mov
sbb
stos
and
add
dec
push
ds
repnz
popa
pop
ljmp
pop
fwait
inc
sahf
rorb
sub
pop
pushl
in
mov
cmp
loope
sub
push
sbb
xchg
xor
mov
arpl
div
jle
jbe
sub
jae
and
into
jmp
sub
int
mov
lock
sbb
mov
call
dec
fisttps
sbb
ljmp
and
xchg
inc
in
xor
cmp
cld
leave
ret
adc
scas
or
lock
mov
sbb
ljmp
lock
scas
bound
and
sbb
mov
iret
ljmp
cmp
scas
jl
push
fucomip
imul
pop
aas
jle
or
inc
inc
pop
movsl
dec
sbb
adc
push
enter
sub
adc
mov
call
add
or
add
imul
mov
pop
outsl
test
aad
push
jge
divb
hlt
loope
scas
and
sbb
xchg
adc
sbb
adc
cli
sbb
adc
arpl
sbb
mov
xchg
fwait
xor
mov
subl
mov
pop
rclb
scas
mov
popa
push
push
loop
test
js
xchg
loopne
xor
mov
inc
orl
ja
outsl
das
out
scas
sub
xchg
jbe
jg
pop
jp
inc
mov
orl
ljmp
or
mov
imul
and
adc
mov
xlat
or
int
add
xchg
xchg
add
daa
nop
movsb
fiaddl
sbb
test
hlt
push
mov
shr
repz
stos
stc
fstpl
inc
test
js
clc
das
in
cld
push
arpl
lock
popa
and
cmp
stc
sbb
orb
mov
xor
mov
fmulp
pushw
ja
push
add
daa
shll
insl
push
xor
lods
cld
out
loope
xchg
sub
xchg
stc
enter
adc
xchg
adc
add
fsubs
or
push
sub
mov
pop
aam
shlb
pop
popl
dec
fistl
jp
bound
imul
cmp
lcall
in
call
jnp
hlt
push
arpl
and
stos
inc
daa
sbb
insb
mul
mov
and
push
arpl
push
add
xor
push
push
mov
inc
and
push
pusha
xor
cmp
sbb
and
lahf
pop
sbb
imul
ret
sub
je
clc
and
out
push
popa
mov
rcll
fsubrs
and
stos
sarl
ds
cli
cwtl
popf
push
dec
mov
addr16
adc
xor
daa
ret
sbb
pop
loope
adc
ret
xchg
lret
mov
adc
cmp
shrb
mov
fistps
cmp
inc
lcall
sbb
out
jns
jg
sbb
adc
pop
gs
es
fcoms
in
movsb
arpl
je
les
mov
shl
inc
icebp
push
pushf
out
add
and
add
sbb
hlt
push
scas
pop
das
cwtl
fstpt
mov
div
call
je
inc
cmp
insb
insb
loop
testb
orb
dec
repnz
dec
test
daa
dec
push
jo
sti
loopne
pop
dec
repz
sbbb
mov
loop
in
into
daa
cmpsl
movb
add
jb
dec
inc
jo
lret
mov
pop
push
mov
and
nop
cmpsl
adc
mov
pop
into
mov
cmpsb
ja
pop
ljmp
push
jecxz
loope
mov
push
adc
mov
dec
or
popa
push
mov
dec
xchg
cltd
enter
icebp
or
loop
ud0
test
push
out
inc
mov
xchg
int3
sar
adc
int
out
mov
nop
fcmovnbe
mov
dec
dec
fistpl
sbb
and
loope
rolb
sub
div
jae
or
xor
pop
aaa
es
test
cmp
rcll
test
mov
fildl
mov
jg
cmp
push
xchg
cmpsb
jl
pop
mov
js
dec
mov
xchg
mov
repz
aam
fildl
cli
mov
stc
and
xor
ret
mov
mov
mov
mov
inc
or
sub
lret
les
loopne
into
imul
adcl
stos
adc
sbb
sbb
mov
sbb
jl
scas
xchg
lea
mov
leave
je
leave
dec
out
jae
das
fisttpll
pop
dec
int3
daa
push
imul
in
and
mov
test
rclb
mov
inc
push
pop
jle
dec
push
sub
fs
mov
jle
into
stos
or
mov
cmp
daa
push
je
daa
pop
add
stos
cs
xchg
jae
ds
push
imul
sti
cmp
cmp
pop
les
inc
icebp
or
movsl
inc
xor
lods
or
xchg
sub
bound
mov
js
movsl
and
push
repz
dec
adc
xor
xchg
pusha
pop
dec
push
lret
xlat
imul
lahf
mov
imul
cmc
or
std
push
push
ret
mov
std
lcall
stos
cmp
in
lock
mov
push
xchg
and
sti
inc
in
mov
xchg
pop
outsl
scas
mov
insb
lret
lret
mov
in
aaa
cwtl
xchg
insb
ret
fucom
lret
xor
xchg
and
pop
stos
pop
stc
out
jmp
rorb
es
push
js
push
pop
lods
mov
xchg
in
js
adc
sti
dec
inc
fwait
shlb
inc
cmp
mov
push
or
cmp
scas
int3
sub
ds
xlat
insl
sub
pop
cmp
in
test
imul
mov
dec
mov
mov
fcoms
push
ds
mov
xchg
mov
cwtl
inc
push
aad
sub
cmp
pushf
insl
fcompl
xor
mov
xchg
mov
cmpsl
sub
cli
in
jb
out
es
and
insl
imul
xchg
sbb
mov
mov
xchg
cltd
shlb
loop
mov
inc
test
jecxz
mov
movsl
into
adc
cmp
lods
idivl
mov
movsb
xor
rcrb
lret
pop
out
fsubrl
scas
mov
adc
sub
popa
jb
sub
xor
repz
stc
fs
movsl
jns
sub
insl
lret
add
add
inc
pop
add
or
add
out
stos
mov
clc
jns
leave
cmp
pop
loope
add
std
cltd
scas
arpl
or
nop
call
out
cli
cmp
idivl
mov
mov
scas
jo
and
cmc
push
mov
fsubrs
or
mov
mov
test
push
popa
adc
lahf
xchg
out
push
roll
and
push
xor
dec
xchg
add
add
sti
test
jo
roll
jns
mov
inc
lret
ss
mov
repz
mov
inc
fs
mov
xlat
pop
testl
jge
stos
add
or
adc
faddl
push
mov
cld
in
mov
push
outsb
jnp
inc
cmpsb
mov
clc
sub
inc
fwait
outsl
cmpsb
aad
gs
lea
in
loop
popf
jp
push
in
fisttpll
dec
aad
xor
cld
lods
xchg
mov
arpl
adc
lea
mov
hlt
add
adc
push
sub
out
xor
mov
push
dec
sbb
aas
sbb
lcall
dec
lods
jmp
xor
pusha
out
cld
imul
fnsave
stos
push
push
jecxz
flds
cli
push
aas
aam
push
mov
jle
jne
lret
ja
popa
add
je
rolb
roll
pop
cmp
pop
push
pusha
sbb
lcall
js
mov
sti
inc
xchg
cmp
sub
or
mov
pop
out
or
popa
es
mov
mov
mov
jg
push
cmpsl
mov
xchg
outsl
xchg
and
aam
stos
imulb
test
jmp
jb
mov
xchg
stc
xchg
dec
mov
jae
dec
stos
lcall
jg
dec
sub
push
inc
inc
sbb
ljmp
test
fisubrl
push
jnp
mov
loope
mov
push
mov
daa
jl
push
add
jo
es
push
repnz
dec
mov
test
adc
jmp
xchg
dec
int
jbe
ljmp
mov
pop
cld
mov
pop
sahf
mov
and
dec
in
rolb
test
test
mov
xor
jno
cmpsb
dec
push
in
mov
push
cmp
stc
cmc
scas
xchg
nop
jg
cs
shll
sbb
stos
xor
insb
out
add
into
xchg
pop
idivl
xchg
xor
jmp
test
daa
cltd
mov
ret
in
or
cld
ss
sub
and
add
inc
push
aas
mov
rcrl
add
push
repnz
jle
cmpsb
lods
aad
push
sbb
icebp
push
loopne
mov
jmp
nop
mov
enter
ficompl
xor
in
mov
movsl
icebp
cmpsb
test
sti
jae
cmp
test
fiaddl
lods
jbe
jmp
or
or
pop
or
push
jne
cmp
rclb
jge
jo
push
push
sub
mov
imul
addl
sbb
xchg
xchg
ret
jnp
daa
ja
fdivl
push
nop
mov
push
xlat
pop
ret
addr16
shl
fwait
inc
mov
sub
addr16
sbb
lahf
mov
sahf
stc
cmp
jo
push
push
frstor
xchg
xchg
mov
push
lret
ret
pop
lods
sbb
dec
pop
xlat
sti
pop
sub
fnstenv
or
notl
cmp
adc
pop
pop
adc
xor
adc
mov
fcomp
push
icebp
fisttpl
cli
add
std
xchg
pop
das
js
mov
les
test
jp
into
pop
mov
adc
fadds
and
aaa
pop
andl
sbb
dec
sarl
xchg
loop
imul
repnz
push
leave
test
imul
repnz
in
pop
xlat
sbb
sub
inc
lret
xor
cmp
mov
mov
jnp
lea
xlat
in
test
xchg
mov
clc
push
push
sub
pop
jb
push
addr16
adc
les
test
arpl
iret
sub
insl
fs
test
and
pop
mov
fwait
adc
jmp
cmp
movl
xor
push
pop
inc
test
sbb
sbb
mov
adc
in
pop
add
push
lock
leave
push
mov
xchg
insb
inc
pop
jae
test
push
lea
push
lret
inc
add
add
xorb
push
and
adc
xchg
movsl
aad
je
mov
sbbb
icebp
xlat
mov
lock
lea
adc
call
jae
push
dec
int
out
jae
fsts
pop
mov
cmp
lods
or
fstpt
sbb
or
jns
add
and
sub
aad
fnstenv
lods
aaa
inc
jne
fwait
dec
mov
mov
fdiv
les
inc
mov
imul
push
and
rolb
sti
xor
js
ds
out
paddsw
push
jle
test
mov
pusha
gs
jp
in
cmpsl
iret
mov
cmp
arpl
mov
inc
push
pop
repnz
addr16
int3
daa
pop
mov
cli
gs
cmpsl
or
ret
dec
sbb
mov
dec
and
repnz
cli
rolb
rolb
xchg
aam
sub
imul
mov
iret
cmc
repz
lahf
cli
popf
shll
stos
or
lea
and
push
push
addr16
stos
movsb
loopne
loope
out
js
outsl
int3
sub
nop
scas
inc
divl
dec
mov
jmp
arpl
adc
cmp
cwtl
mov
ficomps
loope
in
cs
cmp
or
sbb
sub
jne
adc
sar
add
mov
mov
xchg
mov
cltd
pop
inc
xor
push
add
mov
dec
mov
xlat
add
out
cmp
dec
int3
outsb
mov
sahf
pop
push
push
das
pop
out
or
push
test
jno
jno
dec
hlt
dec
mov
loope
xchg
jmp
or
sbb
jmp
sub
xchg
cmp
push
out
fucom
jb
mov
cmpsb
sbb
out
inc
cmp
dec
cmp
out
shrb
stos
sub
and
test
dec
insb
sbb
xor
mov
jmp
sbb
jb
fcomps
push
mov
das
data16
fisubl
mov
pushf
xor
decl
jle
mov
mov
mov
pop
int3
test
jns
adc
loope
jo
int3
outsb
fnstcw
mov
aad
jg
dec
fincstp
mov
popf
xor
pop
add
cmp
mov
in
xchg
dec
cmpb
das
loope
gs
mov
fidivrs
repnz
aas
adc
mov
shr
out
adc
push
push
fnstcw
mov
popl
cmpl
cmp
jmp
add
inc
sub
pop
repz
adc
sbb
sti
mov
fisttpl
mov
popf
adc
addl
loope
ret
cltd
add
in
aam
nop
notl
xor
cmp
pusha
incb
push
fsts
sub
lds
movsl
out
jp
inc
js
mov
dec
jmp
inc
jo
xchg
xchg
lahf
addr16
adc
fstps
insb
dec
out
jp
jnp
pop
jno
out
notb
cmc
or
and
jb
inc
adc
rol
or
add
mov
addr16
adc
xchg
popf
mov
and
mov
jecxz
add
es
sub
mov
mov
leave
push
mov
jmp
shlb
fcoml
add
inc
pop
xorl
cs
adc
fbstp
and
pushf
cli
imul
push
mov
cmp
jae
fistpll
sysret
nop
roll
or
cwtl
xchg
cmp
lret
rorl
push
or
movsb
jge
roll
das
and
fimuls
shrb
shr
icebp
xchg
adc
and
xchg
lods
push
sbb
mov
bound
xchg
sbb
repnz
pop
jge
inc
fnstenv
outsb
sbb
dec
mov
fs
sbb
les
push
inc
xchg
notb
sub
cmc
push
pop
dec
pop
mov
sahf
sbb
adc
or
mov
push
mov
dec
add
jb
dec
or
iret
push
dec
adc
cmp
mov
in
mov
sub
out
test
dec
scas
sbb
fidivl
mov
ret
jo
xor
pop
std
mov
jns
xchg
lret
lret
lahf
or
data16
adc
xlat
push
clc
mov
gs
mov
mov
inc
call
pushf
mov
mov
push
dec
fistps
jmp
mov
adc
dec
fldenv
mov
inc
mov
jbe
fcmovnbe
pushf
xor
push
addl
bound
mov
dec
lea
push
in
cmp
jae
mov
imul
or
call
jbe
fwait
cmp
push
insl
jl
in
sbb
shll
insl
mov
bound
push
mov
cs
xchg
imul
maskmovq
notl
mov
cs
in
add
add
pop
call
ret
popl
lea
sub
pop
roll
fidivs
rol
or
pop
sbb
cmpb
add
rorl
and
xchg
outsl
test
movsl
jmp
aaa
icebp
xor
movd
insl
or
call
icebp
mov
test
mov
andl
imul
xor
int
es
jmp
rcrb
shll
insb
test
pusha
pop
dec
inc
or
ret
imul
add
or
popa
fmull
xlat
pop
mov
test
scas
ds
xor
jmp
cwtl
mov
cmp
push
sbb
div
inc
mov
inc
xor
repnz
cmc
inc
add
inc
jae
rclb
shrl
test
add
aaa
or
sbb
sub
inc
jno
lock
in
sbb
push
sbb
movsl
xor
arpl
xor
cmp
mov
add
js
push
jns
insb
into
adc
mov
mov
ljmp
lock
nop
popa
jle
sbb
dec
push
rcrb
sbb
push
push
jp
repnz
cld
pop
adcb
test
push
test
sub
pop
popa
popl
cmc
sbb
or
mov
jmp
add
ljmp
or
sub
mov
lods
fstp
loop
dec
jno
and
mov
jb
add
jno
cmpsb
push
insl
insb
mov
xchg
adc
testl
pusha
lret
inc
test
in
in
scas
or
or
fcompl
lea
xor
stos
add
adc
jae
jbe
xor
fs
imul
xor
lock
jo
sarb
aad
cwtl
push
jle
scas
mov
jb
scas
cwtl
incb
mov
insb
sub
call
call
sbb
mov
insl
cmpl
in
push
out
test
scas
inc
add
cmpsl
jno
cmpsb
dec
sub
jbe
aad
cmc
gs
cld
pusha
dec
sbb
lock
add
in
mov
sti
imul
push
mov
cli
pop
fwait
imul
and
jge
adc
xor
add
xchg
sub
dec
jg
fistl
and
sub
call
mov
add
jae
and
pop
mov
nop
stos
xor
pusha
repz
in
push
pop
pop
ret
pop
sbb
mov
imul
gs
out
mov
in
out
mov
add
outsl
test
xchg
adc
orb
lock
and
cltd
je
lods
xchg
mov
mov
js
scas
inc
in
cwtl
bound
popa
lock
cmp
cmc
int
jnp
or
adc
lcall
or
push
sub
cmp
scas
pop
and
imul
dec
mov
shll
in
cmpsb
pop
cmp
and
cmpb
in
outsb
insl
xchg
pop
add
stos
neg
mov
jne
ds
xor
jns
stos
mov
mov
addr16
mov
mov
cld
adc
or
xor
mov
ljmp
mov
inc
push
pop
aas
mov
mov
xchg
sub
or
pop
pop
mov
dec
leave
mov
stos
repnz
pop
lret
popa
test
cli
mov
push
adc
imul
imul
push
jns
ja
lods
std
cmpl
fistpll
push
or
cmp
add
int
cmpsb
mov
inc
sbb
test
imul
mov
icebp
push
pop
shlb
pop
push
imul
adc
enter
shr
test
xchg
mov
push
sub
les
loope
enter
mov
sbb
xchg
jae
jbe
int
inc
mov
or
adc
mov
mov
loop
mov
jae
inc
scas
mov
and
mov
adc
dec
fcompl
in
add
jle
leave
push
jp
jg
out
fs
jp
add
xchg
pop
mov
test
cmp
fcmovb
cmpl
shrl
sbb
ret
cmp
add
je
mov
and
testb
inc
lds
sti
dec
mov
mov
adc
inc
mov
test
cmp
mov
push
cmp
cmpb
push
inc
inc
xchg
sbb
bound
push
and
aas
push
xchg
jg
icebp
rolb
sbb
mov
push
pushf
jnp
das
xchg
xor
jnp
sahf
cmp
mov
mov
loopne
dec
movsb
mov
lock
adc
jno
jae
in
scas
jp
push
addr16
pop
arpl
nop
daa
mov
imul
jnp
mov
pop
sbbl
shll
stos
xchg
push
sub
mov
xor
adc
rcl
repz
adc
pushf
arpl
mov
cmp
sbb
mov
inc
cmp
and
dec
mov
jg
test
cwtl
sbb
add
bound
xchg
ja
cwtl
sub
nop
cmp
cmp
lds
ja
bound
out
outsl
inc
sub
push
stc
push
hlt
or
aaa
push
test
jbe
es
sbb
dec
dec
js
or
mov
in
popa
adc
jl
inc
lods
and
out
sbb
jl
lret
sbb
out
lods
mov
push
pop
movsb
push
fcmovb
jo
arpl
lock
sub
xchg
cmp
sub
jne
push
cmpsl
idivl
mov
lods
dec
mov
sarl
popl
pusha
xchg
and
ror
or
pop
fcoml
mov
icebp
test
mov
stos
lock
mov
inc
xchg
out
outsb
popa
mov
add
mov
pop
add
dec
loop
xor
push
out
shlb
mov
mov
movsl
xchg
cmpsb
sub
pop
jnp
push
arpl
out
stos
js
adcb
mov
xor
mov
push
and
inc
arpl
scas
loope
add
push
add
fidivs
int3
daa
adcl
inc
lret
jge
mov
add
pop
js
test
mov
subb
cmp
push
jl
dec
jmp
cmpsl
or
fadd
addr16
sbb
mov
add
jle
cmp
test
xchg
add
scas
adc
sahf
ret
std
jg
dec
ret
fidivs
inc
repz
mov
and
jl
popa
leave
int3
je
xchg
push
sti
mov
and
mov
rcl
ljmp
mov
jle
jp
xor
mov
xchg
push
push
and
fsubrs
aam
mulb
nop
inc
sti
nop
outsb
adc
xchg
or
imul
mov
push
pop
es
mov
pop
pop
cmpsb
xchg
fs
repnz
int3
cmpb
test
xchg
or
fimull
pop
cli
loopne
frstor
sbb
or
and
push
pop
pop
mov
and
push
loop
and
pop
xchg
push
xchg
loopne
mov
jae
cmp
xchg
push
pusha
mov
push
xchg
jne
dec
icebp
repnz
lea
cltd
outsl
into
xchg
or
sbb
cmpb
mov
jl
inc
cmp
sbb
dec
pop
cwtl
mov
cmp
test
pop
std
xchg
pusha
icebp
mov
ds
testl
fld
cmp
ljmp
mov
out
jns
cltd
push
adc
xlat
shlb
xor
sarl
pusha
push
adc
jne
mov
xor
dec
sub
xchg
xchg
dec
aaa
rcl
inc
xchg
jne
pop
push
jl
push
sbb
cld
xchg
rolb
xchg
fwait
dec
and
mov
lahf
clc
push
sti
sbb
inc
pop
cmp
mov
data16
inc
popa
push
lea
dec
test
fsubrs
int3
je
nop
push
test
dec
xchg
and
mov
mov
int3
aas
jecxz
add
fcmovne
rorl
les
mov
or
jl
mov
bsf
and
in
add
stos
in
cmp
sbb
sbb
jns
xor
loopne
sub
sbb
ljmp
inc
inc
popa
xchg
inc
xorl
test
adc
adc
psubusw
adc
push
mov
das
insl
std
leave
hlt
call
stc
sub
clc
cmp
hlt
mov
inc
jmp
mov
and
jecxz
hlt
cmc
mov
add
rorb
xlat
ds
lods
lock
bound
xor
lcall
hlt
ret
bound
sub
cwtl
pop
sub
inc
jbe
cmp
rcrl
mov
cmp
leave
mov
sahf
dec
push
sbb
cs
jmp
aad
push
xchg
or
out
pop
scas
aad
jp
enter
aaa
sbb
dec
pushf
jbe
icebp
xchg
pop
movsl
fcomip
mov
xor
pop
and
mov
fstl
dec
dec
inc
aad
sti
push
gs
dec
inc
sbb
push
push
and
icebp
rcr
lret
xchg
int3
pop
xor
jne
jns
sub
jmp
push
ja
adc
loopne
adc
mov
js
add
add
jae
xlat
in
xchg
jl
jns
ss
sub
cld
inc
ret
or
cltd
scas
and
xor
push
stos
int3
jge
imul
pop
outsl
add
ljmp
or
sahf
lret
dec
cmp
mov
movsl
and
in
scas
out
sbb
push
cs
pop
mov
xor
push
pop
ret
and
mov
idivl
xchg
jl
in
out
xor
pop
sub
enter
inc
pop
xchg
pop
mov
cmp
test
pusha
aas
andb
or
orl
sub
fstpt
test
jbe
outsl
int3
stc
data16
test
sub
and
lods
cmp
push
shlb
xchg
mov
fdiv
cltd
mov
out
cmpsb
inc
fisubrl
into
add
mov
hlt
push
dec
and
lea
mov
cmpsl
je
mov
jle
push
mov
mov
mov
clc
sub
pop
push
xor
inc
mov
or
jns
pop
mov
movsb
insb
fcompl
xor
pop
cmpb
add
in
fadds
fsub
cmpsb
adc
pop
mov
fiadds
push
and
stos
inc
pushf
movsb
clc
mov
icebp
popl
lods
mov
dec
dec
sub
dec
ds
pop
cwtl
xchg
and
mov
xchg
push
cmp
pop
int3
cs
fisttps
cmp
ret
push
les
fdivrp
inc
out
repz
lret
test
jno
mov
jge
insl
xchg
pop
in
loopne
rol
push
or
add
loop
ret
mov
nop
cwtl
cmp
xchg
aam
mov
out
subl
sub
cwtl
push
cmp
imul
push
add
push
pushf
cwtl
push
and
cmp
lea
jno
notl
ret
push
add
or
xor
popa
mov
mov
mov
add
add
dec
mov
add
mov
pop
ret
xor
sbbb
pop
jbe
arpl
jnp
push
cli
cmp
fdivs
inc
aaa
add
sbb
add
sahf
and
out
dec
add
shrb
push
lret
mov
scas
xchg
adc
nop
xor
loop
mov
shlb
sub
pop
sbb
pusha
imul
movsl
mov
adc
mov
jo
mov
cmp
push
cltd
lock
push
ljmp
xchg
loope
sbb
or
daa
jns
xor
push
jle
aas
pop
testb
mov
je
mov
push
cld
pop
push
jno
rol
out
push
mov
sub
xabort
add
out
lock
inc
push
mov
lods
inc
and
std
cmp
push
fstps
aam
int3
sarl
fldenv
dec
fcoml
iret
add
mov
fsub
shl
into
sahf
aam
mov
sbb
push
sarl
jmp
pop
xchg
incb
in
mov
sbbl
mov
cmc
shl
daa
pushl
dec
and
into
mov
jl
sub
daa
mov
push
sub
sbb
push
adc
adc
pop
xor
adc
out
jl
add
pop
test
jecxz
fisttps
push
aam
jg
and
insb
mov
lods
xchg
cld
dec
das
mov
faddl
and
fcmovu
jg
fidivs
cltd
fistpl
inc
push
mov
pop
in
add
mov
pop
xchg
inc
jmp
dec
sub
enter
jne
ss
pop
jne
scas
jecxz
mov
push
mov
or
inc
bound
push
shll
add
dec
jl
pop
mov
jns
mov
in
push
push
fisubrl
sahf
sbb
mov
pop
aas
fiadds
stc
repnz
mov
inc
mov
mov
adc
repnz
into
pop
jge
divb
push
add
adc
jne
xchg
lock
sbb
les
or
aam
popa
xchg
inc
shrl
insb
push
xchg
ja
inc
mov
lock
jmp
and
jb
out
xchg
int3
dec
cwtl
mov
outsl
jg
divps
sbb
jmp
int3
ljmp
push
sbb
adc
and
idivb
stos
pushf
push
out
sbb
sbb
aaa
ror
mov
test
fdiv
movsl
loope
inc
and
sub
add
int3
and
sbb
mov
aam
or
repz
push
and
test
jnp
push
jl
js
xchg
pop
mov
inc
add
loopne
push
inc
xor
or
fwait
notl
scas
inc
dec
frstor
sub
fs
lahf
ret
sbb
es
imul
jb
mov
dec
imul
xor
in
dec
lods
sub
fwait
push
in
xlat
xchg
js
cmp
jmp
dec
sub
and
mov
jle
pop
xor
aas
popa
jecxz
cmp
adc
movsl
pop
sub
lcall
dec
sahf
dec
sbb
cwtl
jl
inc
mov
inc
cmp
leave
mov
push
faddl
mov
stos
ret
ret
jp
inc
clc
pop
imul
mov
aas
and
lcall
xchg
sahf
push
dec
mov
fdivl
faddl
pop
loopne
mov
mov
out
sub
jmp
push
inc
std
je
mov
nop
jbe
shl
das
xchg
adc
clc
adc
pop
jae
jo
test
inc
xchg
cmp
mov
sbb
xchg
lret
fistpll
test
stc
test
cmc
cli
mov
stc
shr
mov
mov
pusha
push
shll
insb
xchg
cmp
push
cltd
sbb
add
mov
xchg
or
fsubrs
mov
lret
cmp
add
jae
mov
pushf
add
xchg
or
push
and
shrl
and
loop
fldl
inc
sub
mov
repz
sbb
adc
scas
aad
rol
imul
mov
mov
and
insl
or
mov
sub
mov
xor
xchg
into
cmpsb
test
dec
and
inc
xor
xlat
xor
adc
shrl
push
in
push
outsb
cmc
add
pusha
cs
push
clc
pop
test
jb
inc
adc
shl
mov
sbb
push
pop
movsl
icebp
xchg
test
xchg
push
or
mov
mov
mov
mov
mov
fimuls
sbb
lahf
cmp
mov
xchg
or
clc
repz
insb
lea
fcmovu
cmp
xor
rcl
nop
sub
push
sub
cmp
jg
insl
sbb
xlat
dec
cmp
repz
leave
pop
pop
push
cmp
push
cmp
fsub
pop
and
mov
les
xchg
push
jg
decb
xor
sub
pop
fdivl
add
dec
inc
adc
mov
int3
inc
sub
cmp
cmp
mov
sub
dec
sub
jl
pusha
xchg
push
fsubp
scas
adc
add
lods
shl
insl
xchg
jg
add
pop
mov
out
jmp
cmpsb
cli
adc
adc
push
js,pt
pusha
mov
jae
xchg
je
lret
sub
jb
loop
and
mov
sub
int
jne
andl
lods
or
int3
orl
sub
sbbb
out
xchg
fcoml
jae
and
outsl
xor
fnsave
out
cld
sub
xor
mov
ljmp
sbb
cld
and
mov
testl
rcll
inc
pop
stc
pop
divb
int
call
adc
icebp
or
imulb
jb
sbbb
lock
into
push
cmc
mov
and
xchg
inc
movsl
test
or
jl
mov
sub
jnp
outsb
mov
in
rcrl
int3
in
data16
mov
pop
pusha
fidivs
mov
mov
jb
ret
pop
xor
jbe
and
mov
jb
xchg
jge
inc
pop
lea
push
pop
lahf
and
mov
aam
cmc
xor
test
push
or
mov
inc
ss
push
pop
jnp
cmp
cmpsb
cmp
xchg
ds
xor
into
mov
fnstcw
jnp
out
cmc
and
jno
mov
aam
or
mov
aad
shlb
aas
addb
mov
aas
cmpsb
push
jle
mov
aaa
mov
sbb
push
jge
std
sub
bound
shrl
ja
adc
loopne
inc
daa
addb
mov
lea
int3
shl
dec
nop
lret
fdivl
es
xor
or
inc
add
dec
stc
xchg
push
and
repnz
xchg
sar
mov
imul
xchg
fdivrl
sub
dec
mov
xchg
fwait
movsb
sbbl
data16
pop
and
sbb
stos
push
sub
jmp
mov
xchg
xchg
mov
dec
dec
adc
push
pop
mov
fldlg2
jns
repnz
gs
mov
test
ret
dec
push
iret
data16
cmpsb
xchg
stc
outsl
inc
jmp
into
fidivrl
push
testb
das
push
sbb
inc
mov
inc
xchg
cwtl
cli
pusha
jl
mov
inc
movsl
dec
inc
cmp
push
clc
push
int3
fcoms
add
jns
xor
push
idivl
push
add
mov
icebp
push
enter
pop
mov
add
not
out
daa
sub
inc
int3
fstl
cmp
inc
sub
jnp
fwait
incb
out
out
jne
dec
mov
rcll
outsl
cltd
mov
ret
mov
adc
out
dec
mov
mov
dec
jle
sub
push
inc
loop
stos
cli
xchg
lea
sub
mov
outsb
loope
popf
xor
xor
and
adc
movsl
repz
clc
fwait
mov
sub
mov
lret
mov
xlat
mov
inc
int3
xor
cmp
cmp
movsb
xchg
rcr
adc
fstps
push
or
cld
mov
adc
push
jl
pushf
fldl
dec
push
fsubrp
xchg
adc
cmp
mov
pop
sarl
fs
ret
sbb
fildl
cmp
lcall
mov
jecxz
daa
adc
orb
push
test
jmp
cmp
inc
rorl
push
mov
cltd
shlb
mov
cli
dec
cltd
or
int3
adc
push
dec
dec
and
jecxz
ljmp
repnz
jb
jns
mov
iret
cmp
out
dec
mov
inc
xlat
lock
mov
pop
out
push
jns
dec
bound
into
mov
jmp
cmp
inc
lea
fs
xor
mov
pusha
sub
add
cmp
rol
arpl
aaa
scas
int3
fs
addr16
jecxz
inc
mov
fstpt
mov
add
cmp
inc
shll
loopne
adc
ja
les
inc
fwait
aad
sub
and
in
add
test
push
pop
xchg
inc
fists
or
inc
mov
jl
pop
dec
xor
cmp
push
dec
loopne
out
sub
sbb
xchg
out
sahf
ret
lock
add
loop
sub
sti
xor
cmp
mov
xchg
cli
inc
push
out
jb
pop
lock
std
xlat
pop
xchg
add
ret
xchg
pop
mov
repnz
cltd
sub
js
adc
sbb
cmp
mov
pop
jge
xor
jp
std
push
cmpb
out
add
icebp
out
xchg
out
xor
sbb
pop
hlt
daa
cwtl
and
daa
inc
mov
out
ret
inc
stos
jl
ljmp
xchg
xor
pop
movsb
fstpt
dec
pop
in
mov
lods
repz
jmp
fdiv
das
call
stos
arpl
lock
adc
int
jge
xor
pop
insl
and
xor
pop
pop
jno
and
sbb
mov
inc
in
movsl
nop
pushf
mov
test
jge
mov
lock
cmpsl
scas
pop
mov
cmp
iret
cld
imul
or
and
fisttpll
add
and
adc
mov
imul
pop
adcl
xor
xor
lahf
gs
cmpsb
aaa
mov
idivb
adc
cmp
icebp
ret
mov
fstps
cmp
and
pusha
fimull
lods
addr16
test
add
out
lcall
ja
jnp
jo
jne
cmc
imul
push
cmpsb
mov
mov
pushf
or
fsubrl
dec
popf
jne
popa
scas
mov
pushf
int
std
mov
int3
js
xchg
imul
mov
insb
sub
jo
cltd
enter
adc
inc
int3
sbb
xor
pushf
shlb
pop
sub
mov
enter
mov
jne
cmp
inc
pop
pusha
je
cld
mov
fbstp
pop
mov
cmp
jg
push
lahf
pop
fs
mov
adc
in
stos
fmuls
leave
data16
add
xchg
shrl
adc
jae
je
cmpsl
idivl
push
or
cmp
cld
insl
repnz
test
loopne
sub
mov
lcall
std
fsubs
jne
ret
mov
stos
std
aas
mov
mov
add
adc
loop
repnz
mov
sub
leave
and
mov
das
mov
clc
test
xchg
cmp
sub
fwait
fs
jecxz
push
test
xor
xor
jns
in
xor
orl
cmp
xchg
mov
jle
loope
adc
mov
jae
repnz
adc
dec
adc
repz
int
popa
lock
insl
xchg
or
and
arpl
pop
adc
pusha
mov
or
das
mov
jmp
cs
xor
push
push
ja
or
jae
adc
jne
mov
xchg
les
and
fs
ficoms
stos
and
repnz
xchg
fldcw
jmp
or
out
lods
dec
fbstp
push
lock
leave
mov
pusha
mov
cmpsb
movsl
xchg
xchg
fisubrs
fisubrl
outsb
inc
xchg
pop
dec
nop
les
jle
add
or
mov
sub
dec
lret
lea
jge
vpmaddwd
cltd
stc
mov
test
xor
xchg
push
lock
lods
lds
dec
inc
scas
push
and
xlat
mov
pop
push
push
xor
xor
mov
fs
rolb
daa
mov
repz
sub
outsb
and
push
imul
inc
test
push
aaa
popa
sub
cmp
jle
sahf
sub
mov
int
sar
popa
int3
push
aam
push
inc
inc
pop
push
loope
xchg
and
frstor
push
mov
insb
cmp
ret
mov
and
orb
and
int3
lods
push
push
scas
jmp
ljmp
bnd
out
icebp
xor
adcb
cli
pop
xor
push
idiv
test
aas
in
arpl
fcomi
jl
dec
mov
aad
outsl
cmc
int
lea
pop
xchg
orb
mov
xchg
xchg
pop
fldenv
fs
out
inc
and
cmp
lock
dec
dec
frstor
or
mov
sahf
jmp
scas
lods
lcall
sub
xchg
divb
inc
cmpsl
push
fisubs
adc
pop
push
xor
jbe
push
jb
andl
mov
aas
cmp
jge
mov
enter
insl
mov
sahf
inc
ds
adc
jge
aas
jnp
decb
call
or
shll
sbb
subb
adc
ds
mov
shlb
iret
arpl
adc
mov
in
cltd
jmp
imul
dec
ret
scas
pop
jne
mov
fcomip
push
and
aas
cmpsl
xor
push
mov
movsb
gs
shrb
pop
and
stos
mov
ret
out
mov
outsb
adc
dec
punpckldq
adc
jnp
andl
insb
jae
mov
into
pop
loope
lock
xor
ss
push
aaa
jge
pusha
mov
les
test
mov
movsb
mov
xchg
scas
insl
cmp
sbb
scas
stc
imul
add
ret
and
sub
rcr
ss
fwait
push
std
inc
sahf
inc
ds
push
mov
aas
or
mov
sub
jns
dec
leave
and
adc
test
mov
rol
ficoml
sarl
jb
aas
jmp
into
iret
mov
jb
jecxz
jo
faddl
mov
daa
shl
scas
push
imul
stos
pop
dec
faddl
add
stos
or
push
push
jbe
mov
push
xor
movsl
jge
call
sarb
sub
mov
in
aam
imul
cltd
dec
push
loop
pop
aad
call
in
cmpl
push
inc
lock
dec
cmp
fimull
lea
sbb
and
jp
mov
jmp
jp
push
xchg
stc
jno
lcall
add
lcall
into
xor
fbld
jne
clc
popa
outsl
mov
jmp
mov
jns
or
out
rolb
sub
mov
loop
pop
or
or
test
xlat
ret
gs
pop
mov
test
stos
cmp
jbe
mov
mov
ficoml
idivb
lret
jg
repnz
cmc
jbe
test
in
scas
stos
pushf
cmpsl
push
push
pop
sbb
popf
inc
testb
prefetch
or
gs
add
mov
ficomps
xor
and
les
xor
lds
mov
mov
jecxz
dec
jge
and
hlt
stos
lods
movsb
clc
mov
cltd
stos
es
das
inc
add
xor
jmp
pop
jbe
adc
push
dec
fs
jecxz
sbb
push
xchg
jecxz
adc
pusha
test
mov
insl
addr16
dec
clc
dec
add
cmp
int
ljmp
cmpsb
fidivs
pushf
lock
jae
inc
pop
in
sahf
ja
inc
out
sbb
out
or
jbe
negl
rcll
cmp
mov
mov
mov
gs
in
cwtl
sub
and
je
mov
sub
test
and
and
pop
enter
notb
sahf
xor
push
loop
sbb
jmp
add
dec
cmp
fstps
and
pusha
addr16
imul
leave
or
cwtl
stc
popa
ds
push
add
or
add
and
sahf
insb
mov
test
sti
outsb
movsl
arpl
adc
xor
enter
fadd
pop
add
ret
dec
mov
dec
popf
enter
aas
mov
stos
insb
xchg
aam
movsb
or
out
fmull
sub
mov
xor
scas
fists
aas
xchg
push
call
mov
mov
cltd
fst
je
ret
je
lock
shll
push
gs
ret
xor
daa
inc
and
repz
es
pop
and
enter
loopne
insb
pop
inc
sub
insb
ljmp
sbb
icebp
aas
outsb
mov
sahf
sbb
mov
adc
mov
cmpsl
and
or
sbb
push
pop
loop
je
cmp
mov
data16
in
loope
iret
dec
sahf
mov
sub
in
and
or
rcrb
lock
int3
out
clc
setg
cmpb
lds
and
shll
inc
cmp
cmp
lea
sub
idivb
mov
xor
xor
adc
hlt
repnz
or
push
lds
stc
lahf
push
mov
mov
mov
xchg
iret
daa
xchg
mov
mov
cmc
sahf
pop
mov
or
adc
insl
inc
aad
add
xor
fiadds
enter
es
pop
and
or
imul
mov
mov
shll
or
in
in
mov
pusha
dec
add
sbb
andb
fwait
jecxz
scas
push
fidivrs
loope
int
mov
test
in
mov
push
mov
clc
inc
stc
xchg
dec
test
pop
fidivs
xchg
imul
mov
std
lret
mov
subl
dec
xchg
mov
xchg
gs
in
push
in
hlt
aaa
sbb
or
or
sbbb
inc
sub
pop
push
mov
mov
es
pop
and
cld
xchg
inc
add
or
iret
loope
rep
xchg
outsl
out
cmp
jp
add
aam
xor
sbb
jo
adc
test
scas
pushf
call
inc
test
mov
inc
sub
push
adc
xor
loope
jo
add
mov
mov
cmc
ja
xor
jle
fs
jbe
in
cmp
test
mov
les
mov
mov
inc
lret
adc
pop
pop
cmpsb
inc
mov
insl
xchg
loop
sub
iret
lods
gs
js
mov
push
sbb
add
hlt
mov
lods
dec
pop
xchg
dec
mov
outsl
test
jb
mov
dec
or
xchg
fcoml
dec
jle
imul
in
xchg
mov
test
cltd
xchg
shl
rorl
ja
hlt
xchg
jne
lret
xor
push
push
cmp
ror
mov
fidivs
or
inc
dec
xlat
xchg
out
or
cmp
pop
pop
fstl
inc
lds
add
std
jne
jae
cmp
mov
jno
sub
add
mov
pop
add
sbb
inc
sbbl
ds
sbb
pop
dec
mov
popf
or
pop
dec
inc
out
lds
xor
add
adc
pusha
lahf
pop
fldt
fcomp
push
sbb
jg
sbb
sarb
lods
out
jo
and
xor
lods
aas
lods
outsb
je
mov
pop
jg
ljmp
jg
push
sub
or
lds
adc
int3
out
fcompl
lret
test
add
loope
in
sub
jg
mov
shrb
push
mov
scas
mov
xchg
out
push
je
shll
fst
popa
fs
sub
in
lods
mov
mov
std
pop
xor
aam
push
jnp
cmp
adc
sub
in
mov
and
iret
or
stos
jb
cmp
xchg
aaa
sub
aaa
xchg
sbb
xor
push
ret
xor
pop
fs
leave
adc
sub
xor
push
pop
jae
mov
mov
sbb
out
repnz
adc
mov
sub
test
vandps
xchg
dec
sbb
dec
mov
les
xor
pop
or
sbb
sub
xor
inc
xor
cld
repnz
movsl
add
sbb
push
jb
mov
cmc
call
cli
mov
adc
outsb
subb
loope
jl
cs
pop
adc
lods
cwtl
cwtl
popf
nop
lock
cli
or
iret
mov
hlt
pop
adc
dec
dec
adc
add
pop
sub
or
xor
push
mov
lret
clc
popa
dec
insb
lods
pop
cmp
loopne
sbb
dec
inc
lret
adc
sbb
sti
or
and
aaa
push
xor
xchg
cli
pop
pop
pusha
mov
dec
into
xor
aaa
sbb
aam
aas
bound
adc
jp
jmp
sahf
outsb
cwtl
inc
xor
xor
adc
cmc
inc
iret
or
mov
aaa
loopne
pop
mov
cmpsb
bound
rcll
xchg
lea
mov
cmpl
imul
mov
sbb
mov
push
dec
add
daa
cmc
stos
sub
sbb
imul
repnz
inc
int
adcl
ja
ret
inc
mov
movsb
insb
sbb
test
pop
testb
scas
cmp
mov
stos
mov
jne
ss
inc
push
lret
sub
xor
pop
maxps
out
adc
int
push
aam
adc
xchg
mov
iret
rorl
dec
inc
push
add
push
arpl
xchg
scas
xor
pop
adc
mov
jg
movsl
mov
jl
test
lret
sbb
xor
xchg
mov
inc
mov
push
out
jb
inc
aam
and
stos
sbb
pushf
mov
dec
xchg
dec
adc
ljmp
or
cmp
fcomps
jb
xor
in
jge
inc
insb
aas
mov
xor
cmp
aam
sarb
aad
sbb
jmp
loop
cmp
jnp
or
jbe
rcr
pop
jne
shrl
add
cmpl
popa
sub
out
cmp
add
loop
or
jp
dec
dec
pop
adc
push
aam
or
or
pop
out
dec
dec
dec
aaa
rorb
jg
stos
sbb
pop
sub
clc
push
mov
stos
enter
jb
mov
inc
ds
pop
cs
nop
std
sbb
mov
mov
cmp
lcall
mov
scas
rol
std
rol
dec
adc
stos
popa
icebp
jbe
adc
arpl
out
int
inc
sub
hlt
mov
inc
jge
call
mov
xor
scas
pop
dec
lds
mov
enter
fwait
push
and
loopne
int3
test
sub
fwait
inc
ss
int3
jae
cs
imul
push
push
loope
fcomp
gs
jo
or
notb
outsl
or
mov
ret
fwait
imul
daa
mov
js
testl
push
movsl
movsb
and
mov
ret
loop
stos
mov
notb
outsb
imul
lock
insl
jp
imul
sub
fstp
bound
sub
lea
sbb
test
and
rolb
pop
inc
stc
xchg
lret
imul
aad
mull
mov
dec
bound
sub
mov
xchg
sub
in
mov
mov
ss
inc
movsb
ja
out
clc
dec
push
mov
xor
sbb
imul
imul
mov
sub
dec
cld
pop
sbb
aad
xor
sub
out
adc
adc
stos
test
add
fnsave
adc
mov
adc
clc
out
inc
jle
xchg
pop
fdivl
shrb
in
sub
push
iret
jbe
aam
xor
inc
loop
mov
out
push
adc
lret
add
or
jno
in
movsb
popl
add
sub
inc
movsb
mov
cmp
jmp
mov
push
add
xor
fst
mov
insb
mov
mov
data16
xchg
sbb
daa
sbb
adc
pop
fcomi
xchg
add
imul
dec
ljmp
movsl
sub
push
jmp
mov
repz
pop
push
sub
testl
xchg
dec
pushf
divl
pusha
jb
test
or
subl
push
mov
sub
js
shrl
nop
xor
pop
test
cmp
fisubrs
insb
mov
test
sub
in
call
in
insl
test
mov
sub
nop
aam
insb
push
and
adc
mov
enter
repz
sbb
outsb
out
pop
mov
jge
sarb
pop
mov
fisubrs
mov
sub
xchg
sahf
dec
nop
loop
lea
jecxz
inc
or
fidivrl
js
es
xchg
sbb
push
int
jae
add
stos
sahf
gs
xchg
and
cmpsb
and
call
in
ret
addr16
shl
mov
push
pop
mov
imul
pop
inc
adcl
inc
inc
test
outsb
add
sarb
mov
pop
mov
cwtl
xchg
rcrb
insb
mov
xor
out
mov
add
push
int3
leave
and
dec
dec
inc
femms
mov
js
es
clc
pusha
daa
aam
mov
iret
push
and
cmp
sbb
sub
int3
xor
in
dec
cmpl
sbb
xor
push
or
jns
shrl
aam
push
int
aad
xchg
mov
cli
xor
jno
std
xor
loopne
imul
add
sub
jno
xor
inc
sub
jbe
lret
enter
jmp
cmp
sarl
xor
push
jg
inc
into
lret
dec
mov
mov
insb
es
push
xor
punpcklbw
jnp
or
pop
ja
xchg
lret
js
mov
cmp
lret
ss
cmp
jl
adc
jns
or
add
mov
mov
push
and
cli
push
or
mov
out
push
cmp
jg
outsb
add
cmpsl
bound
data16
xor
decl
cld
xchg
mov
pop
hlt
xor
fisttpll
push
add
push
xchg
push
sahf
icebp
outsl
pop
pop
mov
pop
fs
push
cmp
xchg
add
mov
mov
fisubrl
xchg
shll
push
add
dec
ds
push
inc
scas
sti
je
jo
and
hlt
sti
push
xchg
movsb
sub
mov
xchg
shrb
sub
iret
push
les
mov
ja
aaa
xor
loopne
decl
xchg
xor
adc
xchg
adc
or
pop
and
roll
add
mov
fs
push
movsb
push
addb
push
mov
dec
enter
adc
js
enter
cltd
sub
adc
inc
cmpsl
fsubrl
mov
mov
fdivl
cmpsb
cmp
jmp
jp
cmpb
inc
adc
jmp
xchg
mov
sub
ret
addr16
sub
fdivs
es
test
pop
dec
lcall
push
mov
xor
cmc
pop
mov
nop
pop
mov
das
push
fnstcw
aam
push
cs
or
fwait
daa
leave
fmull
shr
ret
cli
out
pop
inc
sbb
ljmp
fnstsw
loope
rcl
cltd
cwtl
test
cmc
or
add
cwtl
in
ficompl
xchg
sti
test
adc
lds
sbb
dec
in
fs
std
pop
je
mov
popa
pop
sbb
dec
mov
jp
loopne
add
mov
jb
cmp
mov
mov
leave
xchg
pop
adc
sbb
mov
mov
adc
mov
clc
mov
dec
and
js
inc
mov
pop
and
jmp
mov
lock
xchg
or
outsb
clc
stc
xor
xchg
mov
mov
mov
nop
jno
in
fmull
data16
cltd
je
dec
out
scas
or
xorl
mov
pushf
push
addb
pushf
xor
mov
fwait
mov
sbb
mov
mov
adc
out
dec
mov
bound
sbb
je
pushf
sbb
xchg
hlt
mov
sahf
aaa
call
jb
outsb
xchg
mov
inc
inc
lock
push
adc
mul
mov
ss
dec
jl
xor
jmp
sahf
mov
mov
lret
xor
sbb
and
insb
mov
cli
pop
cmpsb
add
lret
mov
iret
mov
mov
dec
adc
pop
adc
mov
sbb
xlat
das
sbb
imul
repnz
std
add
mov
aaa
mov
inc
mov
imul
test
pushf
adc
pop
xor
xchg
mov
sub
push
enter
pop
shrl
jecxz
mov
test
inc
or
mov
int3
addb
add
outsb
jecxz
xorl
insl
rcrb
test
pop
mov
add
repnz
pop
in
orl
mov
jno
sarl
std
and
test
add
xchg
inc
xor
adc
jmp
or
mov
sbb
out
push
ret
loope
or
inc
push
and
decl
xlat
loopne
psubq
inc
add
mov
and
or
jo
hlt
mov
out
lea
jo
clc
daa
test
xchg
inc
push
fdivl
pusha
ds
sub
scas
xchg
push
mov
mov
dec
xor
repz
and
sbb
sarl
cmp
addr16
jmp
js
mov
fidivrl
imul
mov
dec
loop
jp
inc
sti
add
sbb
or
lahf
sub
xchg
loope
jmp
sub
dec
dec
test
add
adcl
or
push
mov
or
popa
jo
jmp
shrb
bound
pushf
fnstcw
sub
nop
fcoml
push
js
sbb
iret
sbb
and
lds
cli
pop
push
cmp
and
mov
lcall
iret
test
lret
mov
inc
jmp
std
pop
rcrb
sbb
jnp,pt
clc
push
les
mov
mulb
rorl
add
cld
ficompl
jnp
add
push
pushf
addr16
adc
cwtl
sbb
lock
xor
addl
sbb
nop
xchg
mov
xchg
lods
adc
sub
xor
fwait
add
rolb
sbb
addr16
fsubr
pop
mov
leave
popa
cld
mov
pop
scas
xchg
mov
jae
cmp
popl
out
sbbb
mov
addb
adc
out
daa
hlt
in
scas
test
xchg
nop
insb
loopne
inc
icebp
lods
jl
mov
add
push
shlb
cmp
ljmp
aam
aaa
mov
in
loopne
sbb
xor
shlb
jo
jb
inc
pop
repnz
test
add
inc
repz
pop
std
data16
push
std
mov
cltd
loope
fidivrs
xchg
mov
inc
out
xor
dec
inc
movb
fmul
push
out
adc
xchg
dec
aaa
je
mov
fisubrs
insb
push
sbb
or
xor
mov
push
lock
sub
lea
out
add
dec
shrb
add
push
mov
insl
push
cmc
sbbb
lahf
inc
lea
pop
mov
mov
dec
imul
cld
add
cld
js
push
cmpsl
leave
ds
or
dec
jg
and
pop
mov
push
lret
aas
mov
cmpsb
sbb
xchg
dec
fdivl
aad
test
dec
mov
rorb
outsb
mov
xchg
outsl
int
imul
or
add
ds
xchg
int3
lcall
add
shrb
sahf
and
fwait
inc
adc
mov
aas
fs
adc
das
xchg
std
xor
push
cld
into
fsts
shl
mov
mov
pusha
ss
call
mov
mov
or
das
sub
cmp
adc
lds
adc
push
xchg
mov
mov
jbe
pop
pusha
jmp
cmp
icebp
sub
cmpl
int3
add
push
sub
mov
iret
pop
fsubrs
sub
aam
movw
scas
mov
gs
inc
arpl
cmp
outsb
scas
vhsubpd
xor
xor
sub
or
xchg
into
mov
int
jbe
sub
xchg
shrb
lods
mov
test
jp
rcll
cmp
pop
mov
sar
icebp
cmpsb
jmp
int
lods
lahf
in
popf
fcompl
shll
mov
mov
sbb
push
enter
fsubrl
adc
adc
aad
jne
rcrl
mov
add
sub
sub
mov
mov
xor
test
push
mov
test
pop
je
ja
and
add
daa
dec
jmp
cmp
xor
xchg
stos
dec
dec
xor
inc
ret
and
mov
xor
sbb
cmp
sub
enter
shr
lods
cmp
jne
mov
sub
sbb
dec
sbb
ret
jns
test
pusha
push
jmp
adc
add
mov
jmp
xchg
mov
out
adc
orb
lret
or
xchg
xor
add
mov
push
push
out
cmp
movsb
jo
xchg
xor
push
and
pop
add
sub
pop
fsubrs
or
bound
loope
fnstsw
jecxz
pop
mov
femms
aam
xchg
jle
in
scas
and
push
add
add
push
fcomps
xor
mov
dec
inc
imul
shrb
mov
movsl
fisubrl
cmp
cmp
jg
push
sar
or
sbb
movsb
iret
sbb
xchg
push
mov
push
add
and
push
mov
cmpsb
out
jmp
sub
imul
enter
hlt
push
pop
das
imul
jne
hlt
aaa
adc
lcall
sbb
mov
hlt
scas
ja
fxch
add
or
pop
cwtl
push
add
jg
mov
ss
or
pushf
rorl
jo
push
decl
ss
mov
popa
fdivl
jge
xor
cwtl
xchg
cmp
sbb
and
mov
fistl
in
ret
lock
movsb
outsl
dec
jg
dec
inc
fwait
xchg
cmp
xchg
and
xor
xor
stos
imul
inc
push
das
fdiv
jns
sbb
xor
xor
mov
out
push
mov
adc
vmaskmovdqu
stc
testl
enter
xor
arpl
push
mov
int
insl
scas
mov
mov
pop
mov
inc
xchg
mov
cmp
and
cld
imul
pop
mov
push
in
mov
push
pop
or
outsb
cmpsl
adc
aas
leave
push
es
xchg
xor
xor
es
mov
decl
test
das
addb
jl
shlb
xor
sbb
ja
and
mov
mov
imul
inc
sub
xor
or
ret
sub
daa
icebp
cltd
pop
push
push
xchg
out
arpl
push
fldcw
stos
xor
or
or
or
fwait
dec
icebp
sub
jns
and
sbb
aam
push
push
lcall
jne
insl
ljmp
fmulp
sub
sahf
jp
push
fs
rorb
xchg
pop
pop
pop
cmp
or
sub
xchg
mov
lret
ds
mov
xchg
xor
xor
mov
test
push
imul
test
or
or
outsl
es
idiv
cmp
add
jbe
mov
and
shll
jge
jns
pusha
lea
push
sbb
cli
inc
or
test
lods
and
pop
jecxz
sbb
jmp
fildl
mov
mov
or
das
cmp
mov
push
pop
test
outsl
pop
test
fisubs
ret
mov
das
dec
and
push
test
enter
mov
mov
outsl
mov
sbb
pop
add
xchg
out
pop
pop
inc
popa
adc
mov
jle
jnp
dec
mov
jae
mov
add
pop
inc
push
test
push
inc
ss
les
scas
cmp
adc
push
or
push
std
arpl
lods
or
test
xchg
inc
rcr
bound
jl
cmp
testb
and
push
xchg
scas
pop
mov
scas
xchg
xchg
hlt
inc
mov
mov
cmpsb
lods
pop
or
movb
add
rcrl
jmp
and
mov
add
cld
push
in
fs
inc
push
repz
mov
sbb
in
pop
lret
in
mov
or
fildll
or
adc
or
push
cmp
fistpl
push
jnp
push
test
cmp
test
inc
push
pusha
in
dec
test
aad
pushf
add
push
inc
xchg
cltd
mov
inc
xchg
pusha
mov
test
and
jecxz
mov
add
pop
aad
out
popa
cwtl
adc
movsl
mov
pop
sub
xor
insl
cld
and
push
pop
inc
out
outsb
sub
testb
mov
mov
hlt
mov
mov
mov
loopne
in
jb
decl
outsl
pushf
inc
sub
adcl
xlat
rorl
mov
add
fadd
imul
stc
in
pop
jle
lcall
xchg
add
pop
sub
popa
ret
mov
ds
lcall
leave
loope
hlt
mov
add
stc
xor
push
imul
adc
adc
pop
cmp
xchg
rol
mov
rcrl
idiv
clc
jp
jne
add
rol
mov
addr16
cmc
int3
push
jne
arpl
enter
jl
xchg
or
and
ret
aam
sti
sarb
loopne
cmpsl
dec
cmpsb
inc
jb
ret
sahf
fsts
pusha
imull
and
jne
cmp
xor
xor
faddl
push
pushf
out
inc
movb
aad
sbb
xor
mov
sub
insb
cmp
inc
insl
stos
icebp
mov
cmp
dec
sbb
mov
mov
jo
fs
stos
sbb
mov
scas
mov
aad
mov
out
subl
mov
mov
cmp
andl
test
sub
add
arpl
cld
and
arpl
mov
stos
lahf
loope
jne
subb
popf
mov
aam
fmull
xchg
mov
aaa
cmp
jle
pop
pushf
xchg
or
or
mov
out
dec
jp
sbb
cld
cld
mov
mov
scas
loopne
mov
mov
push
lods
mov
test
fwait
out
add
popa
pop
out
inc
cmp
or
push
out
adc
dec
mov
out
sub
jg
sbb
inc
push
inc
cld
inc
adc
dec
xor
adc
pop
cld
mov
pusha
jb
mov
add
mov
xorl
xor
pop
ss
out
aam
mov
xor
cli
shl
test
inc
xchg
xchg
insb
or
sbb
lahf
fwait
leave
lret
xor
test
sub
xchg
cmpsl
lahf
repz
lcall
jecxz
ja
sub
lret
mov
insb
push
xchg
adc
pop
cmc
dec
sbb
js
pop
vcvtpd2ps
cs
ret
mov
lods
idivl
mov
mov
push
popf
arpl
inc
test
jnp
xor
mov
pop
popa
out
int3
sub
adc
call
aas
xchg
fsub
xchg
idivb
xor
jne
lret
mov
xchg
fidivrs
sahf
mov
fwait
loopne
dec
jne
idivb
fs
add
sbb
mov
fs
adc
dec
xor
jo
mov
push
adc
mov
pop
inc
dec
xor
shl
outsb
push
ja
sarl
or
mov
xchg
mov
jge
lcall
loope
mov
cmp
dec
dec
out
mov
sub
shrl
xor
test
pushf
sbb
ja
out
loope
mov
cld
out
pusha
int
scas
sbb
push
incl
pop
mov
pushf
loope
aad
mov
fdivrs
or
dec
jns
inc
inc
loopne
enter
out
xchg
cmp
pop
push
mov
push
pop
es
mov
xchg
sub
loop
insl
lcall
xchg
data16
mov
scas
ja
and
and
ret
testl
push
popl
iret
sarl
test
push
gs
cwtl
into
sub
pop
mov
sbb
jne
pop
sahf
inc
loopne
fwait
mov
fidivrl
jno
movsb
test
ror
outsb
cs
lds
sbb
dec
adc
insl
test
jbe
out
or
int
mov
cltd
out
push
orb
imul
div
enter
mov
fs
adc
in
insb
mov
test
pop
clc
popf
jmp
jbe
jae
push
out
aaa
cmpsb
cli
clc
ror
fadd
mov
sub
int
insb
mov
jp
cs
dec
jge
mov
xchg
test
cmp
shl
out
cli
dec
mov
mov
cmp
push
test
push
xchg
and
dec
pop
out
add
dec
rcll
shll
push
dec
mov
sbb
jle
dec
pop
mov
adc
pop
mov
aaa
scas
push
inc
cmovle
or
mov
sub
xchg
mov
mov
icebp
cmpsl
sub
push
aaa
add
cmp
or
pop
xor
xchg
int
lahf
mov
and
inc
adc
test
adc
or
mov
out
mov
es
cmp
mov
in
into
adc
dec
xor
mov
mov
mov
test
push
sbb
into
aas
jmp
jmp
push
adc
lock
mov
cmp
pop
jmp
notl
fnstenv
aad
cmp
pop
mov
shl
lods
and
cli
cs
cmp
xor
and
or
mov
cmp
cmc
repnz
scas
sbb
hlt
das
mov
das
inc
pop
inc
cmpb
pop
xchg
stc
pop
xchg
push
or
mov
inc
or
fsubl
push
imul
sbb
mov
mov
sub
adc
mov
mov
or
add
dec
stos
inc
icebp
mov
aas
inc
jle
sbb
or
and
xchg
mov
insb
pop
inc
adc
imull
inc
cmp
fcmovne
imul
push
roll
rcrl
xor
add
mov
hlt
shll
xor
les
push
inc
xchg
fwait
imul
inc
xlat
xlat
ds
xchg
jo
mov
je
in
jl
push
std
push
out
xor
dec
xchg
push
stos
hlt
add
push
icebp
lods
xchg
sahf
icebp
dec
addr16
xor
and
pop
rcl
ss
aam
lcall
mov
imul
mov
mov
rclb
mov
fisubs
mov
in
mov
jne
lret
popf
ds
push
sbb
inc
mull
add
outsl
ret
dec
ja
ret
push
mov
mov
xchg
lds
lods
adc
or
inc
aaa
cmp
dec
mov
inc
je
jge
sbb
stos
pusha
ficoms
xor
xor
call
in
pop
inc
ds
movsb
mov
lss
pop
dec
push
into
jp
push
pop
or
inc
lods
mov
sub
xchg
cmpsb
mov
sub
mov
sbb
cmp
movsb
mov
mov
movsb
sbb
cmp
dec
mov
fisttps
add
jl
cwtl
jge
pop
or
xor
cmpsl
xchg
ja
mov
lds
aad
test
and
xor
addb
cmpsb
out
mov
addr16
shrl
add
inc
xchg
gs
popf
xor
sbb
dec
icebp
mov
movsb
das
addr16
in
hlt
mov
push
insb
cmp
and
js
jne
lds
pusha
out
pop
aaa
mov
pop
jle
sub
push
sbb
xchg
mov
lock
test
cmp
data16
fs
data16
rorl
jns
add
xor
and
push
pop
add
in
loopne
les
mov
ja
and
sbb
loop
sbb
outsb
movsb
mov
dec
dec
js
int
call
lahf
fs
add
scas
imul
bound
loope
dec
inc
mov
dec
mov
imul
cmp
xor
es
fidivl
ljmp
jge
loope
pop
xor
or
mov
roll
cmp
xchg
stos
mov
out
mov
aad
push
jo
and
add
dec
cmc
adc
mov
mov
dec
push
enter
cli
sbb
scas
iret
and
mov
cmpsl
cwtl
jb
ljmp
pop
or
and
ret
imul
ret
jnp
jmp
mov
adc
cmpsb
aaa
clc
or
jb
and
out
mov
rclb
fwait
or
push
pop
jg
and
or
xlat
jle
add
mov
popf
add
push
icebp
stos
push
je
and
arpl
xchg
push
out
add
mov
mov
mov
add
xor
or
jge
call
inc
and
ret
nopl
ja
repz
add
clc
inc
mull
out
sub
into
adc
xor
data16
xor
push
rcl
sbb
adc
js
arpl
daa
fcmovu
jl
jno
popa
fwait
sub
dec
and
cmpsl
mov
push
inc
outsb
inc
sub
xchg
mov
shrb
pop
loopne
cwtl
lods
loopne
pushf
jge
testb
jnp
push
xchg
and
lret
dec
adc
mov
sbb
and
dec
xor
lret
lea
sbb
stos
sbb
loope
inc
shll
adc
andl
mov
lds
xchg
xchg
pushl
into
mov
shrl
mov
int3
repnz
pop
das
shrl
fcmovbe
mov
rcll
adc
cmp
inc
mov
mov
fidivrs
cmp
xchg
jne
sbb
cmp
rorb
jns
rcll
push
or
pop
jecxz
sbb
adc
jbe
mov
into
push
aad
jge
fcom
dec
ret
aas
orl
test
aad
jmp
je
mov
sbb
mov
mov
jb
pop
pop
inc
and
push
inc
rclb
mov
mov
mov
loopne
sarl
push
popa
xchg
cmp
orl
mov
js
and
xlat
gs
xor
mov
mov
xchg
and
pusha
cmp
fstp
add
in
cmpsb
adc
xchg
jl
sahf
add
imul
fld
pop
mov
dec
lret
movsb
jle
xor
dec
or
pop
fimuls
xor
stos
ret
sahf
js
test
lahf
sub
pop
in
add
push
sub
inc
test
add
loope
and
jge
inc
lcall
push
inc
jo
push
loopne
inc
mov
jae
jge
sbb
stc
or
pop
in
movsl
into
mov
inc
mov
stc
ja
add
cld
in
ret
pusha
and
add
mov
js
xchg
jbe
repnz
ret
add
andl
std
mov
mov
loop
and
sti
repnz
ret
mov
xor
lahf
mov
push
inc
and
cs
jle
outsl
or
mov
jecxz
movsb
stos
sbbb
dec
popf
scas
jmp
ljmp
and
lret
sub
xor
scas
mov
mov
or
iret
xor
punpckhdq
jnp
mov
xchg
popf
lds
push
add
jae
aaa
scas
sub
shrl
and
call
add
push
mov
dec
mov
mov
ret
add
mov
adc
lcall
jecxz
sbb
imul
xchg
pop
and
lret
xor
mov
xor
push
adc
mov
shll
mov
scas
adc
push
cltd
inc
push
jge
fnstcw
aaa
mov
mov
pop
sbb
mov
popf
and
cmpsb
ds
and
xchg
ror
xor
enter
pop
push
movsl
pop
mov
div
add
mov
mov
sub
or
inc
iret
xchg
leave
rcrl
pop
sbb
cmp
add
adc
add
jmp
jp
in
fsubs
jmp
fs
adc
or
gs
ljmp
faddl
mov
mov
sbb
add
mov
pop
sub
shl
test
push
mov
in
inc
add
cmc
mov
xchg
adcb
leave
aas
xchg
xor
in
cmpb
add
jmp
out
icebp
je
fwait
jle
and
movsb
xchg
inc
push
loope
popa
pop
shrb
mov
adc
or
and
cld
lods
pusha
test
and
jo
movsb
pop
ja
pop
fsubrl
push
push
sub
scas
or
out
sub
and
cmp
shrl
cmp
xchg
addr16
mov
sti
lcall
jecxz
or
lods
sbb
add
jg
bound
or
inc
and
or
jl
data16
or
aad
out
push
ja
add
jmp
in
jmp
sub
fdivrl
pop
dec
mov
incl
lods
pop
fisubrs
pop
jns
je
inc
loop
jle
add
cmpsl
popa
push
shll
pop
addr16
popa
and
and
xlat
test
pop
xchg
mov
inc
inc
lret
push
sbb
fadd
aam
add
insl
and
fistpll
jb
ret
add
sbb
aam
xchg
mov
lock
dec
rorl
aaa
mov
sub
xchg
sti
fstps
push
xchg
bound
or
pushf
jecxz
out
and
popf
daa
imul
sub
dec
pushf
adc
jne
jnp
jno
push
imul
xor
and
inc
cltd
jge
sbb
xor
imul
iret
testb
imul
lods
aam
xlat
pcmpgtb
push
mov
dec
in
popa
sti
or
cmpsb
inc
dec
gs
ljmp
testl
push
pop
out
jns
fdiv
fidivrl
stos
loopne
stc
mov
in
pop
loope
lds
xor
add
mov
and
ret
mov
ret
fistps
sbb
int
cs
cmp
cmpsb
add
stc
das
mov
stc
push
popf
roll
repnz
pop
mov
mov
push
push
inc
out
inc
mov
sti
mov
mov
mov
or
mov
inc
sbbl
in
pop
push
ret
gs
in
dec
pop
leave
pop
lods
or
adc
stos
dec
push
in
pop
pop
sub
xchg
fisubrl
test
inc
stc
jno
in
cwtl
inc
sarb
jnp
jecxz
xchg
xor
xchg
and
cli
jecxz
dec
leave
xchg
pop
ljmp
sub
and
mov
mov
das
adc
adc
adc
enter
adc
ss
movsl
dec
or
push
dec
mull
pop
fisubl
stos
xor
rcl
in
ret
push
push
mov
cld
es
leave
mov
mov
stos
sti
test
fwait
mov
mov
add
lret
add
inc
outsb
out
inc
mov
mov
sbb
cmpsb
inc
push
mov
push
in
jbe
or
dec
and
cmpsl
cmp
outsl
stos
xor
out
or
outsb
adc
cmp
pushl
push
stc
pop
iret
jno
dec
mov
stos
int3
aas
xor
repnz
mov
int3
movsl
outsl
cmp
popa
addr16
popf
mov
loopne
fildl
jp
jecxz
std
fucom
sbb
in
push
mov
jns
fwait
outsb
daa
dec
inc
push
xlat
xchg
cmpxchg
dec
ds
hlt
int3
mov
mov
and
mov
movsl
sbb
jmp
sbb
or
xchg
mull
gs
fdivp
mov
aas
pop
std
icebp
fs
shrb
dec
std
mov
in
mov
mov
xchg
movsl
cmp
ss
stc
nop
jo
sbb
subl
cmp
arpl
imul
push
cmpsb
pop
inc
idivb
push
loop
faddl
and
out
push
xchg
cmc
pushw
ja
sbb
shlb
xlat
leave
bound
push
add
shll
jle
sub
sub
repnz
icebp
push
pushf
xchg
test
loope
mov
cli
cmp
sbb
inc
out
dec
xchg
dec
mov
popa
lock
dec
fistpl
in
rcll
cmp
cmc
bound
jecxz
push
mov
mov
and
sbb
push
push
mull
mov
and
adc
xlat
inc
cmpsb
push
add
pop
add
pop
test
sub
mov
jb
lds
adc
push
ret
lods
cmpb
jb
jp
int
int3
pop
mov
push
andb
mov
xor
jp
in
mov
call
cmp
xor
mov
fiaddl
aaa
daa
or
xor
insb
negb
aaa
fbld
lea
mov
and
sub
adc
call
std
cs
adc
xchg
mov
jns
sbb
cltd
mov
pop
mov
or
sbb
dec
iret
adc
dec
enter
mov
cmp
sbb
and
fcoms
jo
fs
push
jmp
sbb
jns
mov
pop
xchg
and
int
outsl
xchg
aam
dec
int
ds
fwait
bound
xchg
cld
xchg
scas
into
das
lds
cmc
mov
out
lock
xlat
xchg
mov
data16
stos
ja
int3
inc
push
js
push
lock
sub
inc
push
cltd
jb
add
adc
ljmp
andl
insl
test
mov
dec
into
pop
cmpsl
xor
xor
pop
add
pop
pop
jne
push
loopne
add
imul
dec
mov
sub
aas
int3
inc
rclb
repnz
sub
adc
cmp
sub
lods
jns
dec
adc
cli
dec
pop
sub
aad
pop
clc
test
or
aaa
dec
lds
mov
pop
xchg
fisubrl
cmpl
push
ja
aas
cmp
inc
gs
cmp
aas
add
jmp
push
sub
xchg
out
dec
gs
cmp
push
jle
xchg
sub
fidivs
push
mov
mov
popf
das
roll
std
jmp
cmpsl
cmpsb
mov
cwtl
les
mov
jne
repz
push
cmp
pop
mov
mov
lret
pop
xor
aas
sub
aam
rol
aad
cwtl
dec
add
movsl
xor
stos
insl
push
xchg
jnp
add
push
andl
int3
fdivs
inc
xchg
fisttps
or
lock
xor
data16
shlb
loope
js
sbb
les
add
push
imul
inc
mov
insl
pop
and
mov
sbb
xor
push
std
push
fs
add
rorb
arpl
out
out
daa
sub
pop
push
ret
out
xchg
dec
lods
jg
sti
mov
sub
test
or
add
enter
xor
in
and
xchg
iret
cmp
xchg
dec
sbb
loope
push
sbbl
sbb
leave
xchg
xchg
popa
iret
test
ret
mov
inc
jp
xor
fcmovbe
popa
sub
push
sarl
adc
jo
push
push
dec
adc
test
mov
mov
stc
dec
mov
addl
adc
aaa
lret
orl
lret
test
mov
popf
mov
lds
dec
push
xchg
out
icebp
cs
imul
and
mov
lds
sbb
adc
popf
repz
inc
add
repz
inc
not
and
test
and
fisubs
pusha
rorl
sub
loop
mov
push
or
pop
jl
pop
xchg
xchg
cmp
shll
jl
xchg
cmpsl
push
jecxz
cmp
push
pop
iret
hlt
jne
lret
push
push
inc
dec
mov
push
clc
pop
mov
mov
shll
sub
and
sbb
in
jnp
leave
or
lock
fisttpl
jecxz
pushf
dec
outsb
sbb
mov
mov
and
jns
pop
addb
outsl
test
insb
mov
xchg
nop
xor
sti
fimuls
out
jmp
decb
push
std
sub
mov
push
outsb
mov
int
hlt
clc
fdivrs
fstps
mov
push
inc
xlat
lahf
popf
cs
sbb
fs
adc
xchg
scas
mov
xchg
xor
and
pop
in
push
cwtl
inc
dec
cmp
jnp
sub
push
rcl
cmpb
dec
add
fsubrl
fiaddl
dec
add
mov
and
jmp
outsl
jbe
xchg
adc
push
roll
aaa
call
jmp
pop
lea
xchg
xor
pushf
inc
mov
lret
jbe
mov
and
sbbb
pusha
arpl
cwtl
test
lods
mov
push
pop
jnp
xchg
or
popa
insb
scas
and
jo
sub
pop
sub
push
iret
mov
int
inc
imul
xorb
jle
pop
and
xchg
mov
push
xor
mov
lcall
fldl
xchg
and
and
inc
mov
mov
push
loope
cmpsl
cmp
cmc
dec
mov
pop
mov
adc
pop
fsubrp
mov
xchg
repz
xchg
roll
jl
fisttpl
rorl
xchg
push
adc
pop
xor
test
repnz
mov
iret
xor
into
fs
mov
adc
lods
jno
arpl
jge
ret
mov
scas
cmp
inc
pop
sbb
cld
out
jge
xor
cmp
push
sahf
sub
loop
subps
fwait
mov
stc
push
lahf
push
idivb
ja
scas
jnp
cmp
ja
xchg
jns
mov
sbbb
pop
pusha
inc
xor
lock
mov
aas
jns
or
mov
fisubrs
and
add
es
jnp
mov
mov
adc
out
sbb
or
jl
mov
aad
addl
xchg
dec
fsubl
aam
or
and
sub
adc
repnz
sub
sahf
inc
pop
xor
jmp
loope
push
cmp
mov
jg
push
scas
jo
jge
sub
mov
repz
cmpsl
ficompl
mov
inc
mov
inc
xor
fistpll
dec
arpl
mov
fpatan
or
test
xor
sub
xor
cmpsl
sbb
ja
rcrb
and
xlat
push
or
cmc
or
sub
mov
dec
cltd
ljmp
lcall
insb
repz
or
push
xor
frstor
mov
sub
cmpsb
sbb
jb
mov
push
cmp
cmp
xchg
mov
insb
mov
ds
lock
fs
push
loope
loop
js
call
sub
xor
sbb
mov
mov
push
xlat
subb
mov
cltd
gs
sub
cmp
sub
pop
addb
or
sbb
sti
clc
pop
push
cmpsl
adc
mov
in
or
fildll
mov
daa
fwait
jl
ror
xchg
or
cs
into
rep
leave
xlat
das
push
out
repnz
inc
mov
pushf
insl
jge
pop
dec
mov
lods
push
lods
nop
adc
inc
mov
xor
out
cmpsl
je
loopne
mov
mov
aas
push
clc
mov
sti
add
sub
fwait
pop
jo
and
inc
shl
out
or
push
inc
push
das
add
mov
sbb
js
inc
in
cltd
imul
arpl
icebp
mov
push
sbb
xchg
mov
push
cwtl
jg
push
jmp
xor
sbb
cmp
push
mov
and
xchg
jl
or
out
out
cmpl
xchg
repz
xor
or
out
fwait
gs
jae
rcll
xor
push
test
ficompl
inc
outsb
es
fiaddl
push
ss
imul
stos
insb
imul
pop
inc
or
xchg
fs
xchg
inc
mov
daa
das
push
insb
jnp
mov
mov
aas
cmc
xor
jmp
or
in
and
xor
sbb
push
cltd
mov
jae
rcll
test
xlat
andl
push
push
fmul
hlt
mov
xadd
adc
jb
inc
bound
mov
mov
dec
pop
pop
pop
push
in
xor
push
fsubr
shll
mov
and
loope
cmp
inc
fidivl
sahf
test
jbe
call
fidivl
cltd
aaa
popa
and
hlt
imul
inc
mov
mov
call
test
or
cmp
ret
mov
add
test
mov
pop
enter
test
in
imul
cltd
sbb
je
ret
hlt
pop
jnp
xchg
mov
mov
inc
pop
outsl
mov
xor
add
popa
lock
sub
out
lahf
xlat
or
fistl
imull
cmpsl
fcomps
pop
inc
les
stc
sbb
cmp
push
je
sbb
adc
xchg
bnd
dec
push
jecxz
jo
xchg
notl
dec
in
xor
lods
movsl
int3
cmc
and
mov
ljmp
dec
loop
xor
pop
cmpsl
dec
dec
mov
xor
scas
lods
stc
add
pop
stc
test
ss
jae
inc
push
idivb
pop
in
std
leave
inc
sbb
sub
pop
dec
or
test
mov
lahf
arpl
decb
and
insl
xchg
sbbl
das
ljmp
adc
jg
and
jle
push
ljmp
lds
dec
sarl
outsb
testb
fstl
add
jo
or
scas
lds
test
shll
movsb
jne
cltd
pcmpeqw
xchg
outsl
inc
sbb
sbb
add
inc
sbb
mov
xor
je
das
scas
fsubs
clc
jle
lcall
xchg
cltd
push
pop
dec
adc
roll
add
imul
test
je
push
mov
sbb
dec
gs
imul
push
jmp
inc
cmpsb
sub
int3
inc
subl
xchg
sub
call
cmc
or
and
xchg
mov
dec
sub
sbb
gs
mov
cltd
dec
mov
rolb
inc
test
push
inc
sbb
rcr
xchg
cmp
mov
jbe
sarb
cmp
in
fildll
xchg
push
shll
and
and
popf
hlt
cmp
btr
push
pushf
shr
pop
shll
inc
sub
add
xor
jne
lret
mov
and
dec
mov
ret
int3
ljmp
int
aas
adc
or
shlb
mov
iret
dec
cwtl
sbb
cmp
jle
mov
ljmp
stos
xchg
clc
stos
lods
mov
cmp
fadds
data16
shll
dec
or
mov
fstpt
jp
dec
into
leave
push
mov
cmc
mov
xor
push
imul
mov
mov
or
stc
es
sbb
xor
jb
loop
imul
sub
repz
sbb
imul
and
or
fwait
stc
repnz
test
loop
xor
sbb
xor
sub
mov
adc
out
mov
xchg
cmpsb
loop
test
mov
dec
out
cwtl
adc
addr16
jae
ljmp
add
cmpsl
fs
push
xchg
jnp
mov
mov
xchg
jns
cmp
hlt
test
es
lahf
inc
repz
mov
lock
push
adc
fstps
in
fcompl
out
rol
push
into
outsl
mov
mov
daa
add
mov
adc
sbb
sub
adc
inc
iret
test
and
xor
cmp
mov
shlb
leave
or
lods
sub
or
stos
dec
pushf
dec
pop
xchg
icebp
popf
xorl
mov
jnp
sbb
clts
inc
testl
jbe
push
fisubrl
pushf
xor
add
xor
mov
cwtl
xlat
outsb
out
pusha
loop
pop
leave
jp
rcll
iret
imul
adc
fwait
aas
sbb
pushf
jb
dec
add
mov
dec
xchg
fsub
in
add
es
sub
adc
pop
test
pop
or
inc
mov
dec
cmpsl
xchg
test
jno
dec
pop
les
sub
or
push
push
xchg
mulb
rcll
mov
aas
in
into
xchg
mov
add
mov
pop
fdivr
inc
add
in
cld
sbb
jno
mov
lds
in
adc
cmp
xlat
lds
aam
and
sti
xor
out
push
pop
ret
and
sbb
mov
sbb
outsl
in
es
shlb
leave
mov
sbb
ljmp
das
ret
test
enter
push
or
gs
in
hlt
xor
fwait
aas
push
lret
addl
lret
sahf
and
xchg
in
sahf
push
stc
mov
add
mov
push
cmp
and
loopne
ret
dec
mov
dec
cmp
iret
hlt
adc
xchg
iret
xor
push
lds
or
mov
and
xchg
push
int3
mov
frstor
dec
mov
out
rol
int3
pop
inc
push
sar
out
push
push
mov
js
xchg
outsb
or
cltd
and
popf
sarb
lahf
mov
cld
pop
pop
test
pop
add
mov
dec
fs
xchg
fstpl
stc
ror
mov
mov
xchg
imul
mov
add
std
xor
cmp
aaa
fsubl
test
ret
inc
mov
popf
les
cmp
sbb
fistl
pop
cmpsw
add
js
aas
push
push
inc
xor
fstpl
lock
jmp
adc
and
push
adc
add
mov
hlt
aaa
pop
cltd
mov
ret
fmul
cli
jge
fistpl
push
sub
mov
pusha
loope
in
adc
mov
cmp
out
mov
mov
push
cmc
adc
rcrb
jo
push
and
push
sub
nop
in
sub
sub
test
pop
enter
popf
lcall
ror
mov
or
adc
cs
inc
lods
or
sub
mov
or
cmpsl
and
ficompl
inc
adc
add
push
clc
adc
and
jno
out
movsb
shl
fildll
loop
xchg
iret
and
cmpsb
or
nop
mov
pop
and
jl
cmpsl
int
repnz
fdivr
stc
cmp
sub
lea
out
arpl
xchg
maxps
jae
mov
and
adc
movsb
and
mov
dec
cmp
pop
hlt
imul
pop
pop
dec
shr
lods
push
sbb
lahf
ret
fs
inc
jg
flds
pop
dec
xchg
test
pop
xor
mov
mov
repz
aad
cmp
arpl
rolb
fadds
test
mulb
mov
in
inc
negb
add
sub
lret
adc
xchg
lret
push
and
cmpsl
sar
pusha
sbb
fdivr
dec
notl
movsl
jae
call
mov
push
ja
out
push
mov
sbb
jnp
push
aas
fs
aam
mov
xor
stos
or
aas
xorb
movsb
cmc
aam
xor
inc
inc
sub
sbb
jl
mov
fimull
jg
je
jp
or
pop
adc
mov
insb
stc
pop
adc
fistpll
gs
mov
xor
insl
je
push
sub
xchg
lods
adc
movsb
hlt
outsl
push
sbb
movl
dec
xor
cwtl
clc
and
daa
rcrl
xchg
or
fmuls
mov
xchg
add
add
addb
in
sahf
inc
outsb
insb
repnz
mov
lret
addr16
pushf
and
aam
rcrl
mov
cmp
jo
adc
push
lret
sub
cmp
mov
sti
nop
sub
sbb
cmp
mov
cmp
sbb
shll
rorl
call
sub
add
add
mov
mov
mov
sub
jle
mov
int3
cli
or
cld
ficoml
ret
mov
fldcw
out
mov
push
bound
test
jae
cmp
xor
inc
jg
sub
dec
or
fistpl
clc
jne
mov
vaddps
mov
repnz
into
pop
or
dec
outsw
mull
sub
pop
dec
movsb
and
and
xor
outsl
inc
mov
iret
stos
out
pop
into
sub
sub
xchg
cld
push
mov
push
pop
rcrl
cli
seto
or
dec
and
mov
jg
xor
loopne
into
xchg
jns
sbb
jmp
push
int3
sub
sub
mov
cwtl
arpl
adc
mov
js
pop
ja
jl
js
cmc
jno
popa
stos
popa
stos
mov
cli
data16
lock
sub
jns
jg
outsb
xchg
call
or
inc
call
jnp
dec
and
sub
loopne
scas
adc
sub
dec
mov
and
dec
mov
sbb
ljmp
shrl
cmp
cli
insb
out
jae
sbb
sub
sbb
sbb
ljmp
dec
repz
inc
popa
add
ss
outsl
pushf
sub
int3
cltd
icebp
data16
adc
xlat
or
je
shrb
mov
cmp
inc
xor
push
call
imul
test
pop
popa
mov
mov
jo
sbb
adc
btr
lock
or
sub
xchg
push
mov
minps
lods
mov
inc
jo
maxps
push
cmpsl
sub
sub
cmp
mov
std
mov
mov
or
daa
jbe
sar
outsl
test
sbb
int
lret
cli
cmpl
or
sbb
in
push
out
rcrb
mov
adc
out
movsb
sbb
mov
jecxz
push
ret
xchg
xchg
in
push
outsb
pusha
aad
lods
push
mov
aas
sub
mov
mov
sbb
xchg
or
jno
sub
test
outsl
xchg
comiss
out
sub
xor
jne
push
mull
mov
out
fxch
fiadds
pop
sbb
popf
mov
cmpsb
push
cltd
add
gs
xchg
les
sub
cmpsl
cld
icebp
add
pop
pushf
pop
scas
pop
fisubrl
js
mov
add
fwait
and
and
cmp
loop
pop
push
pusha
mov
pop
lcall
mov
in
add
ja
scas
and
or
test
cmp
jmp
pop
pushf
insl
movsl
es
stc
jnp
test
fdivs
adc
and
test
nop
dec
lea
xchg
mov
popf
jnp
push
aas
push
sbb
imul
jge
iret
fs
push
push
fsubrs
pusha
cltd
xchg
or
stos
in
les
inc
xchg
ljmp
xchg
popa
jge
xor
leave
stc
jle
mov
in
mov
out
sub
pop
pop
sbbb
and
mov
and
test
cmp
outsl
adc
data16
ret
ret
cmp
inc
and
popa
pop
push
fdivs
cltd
sbb
mov
mov
push
dec
movsb
xchg
js
jb,pt
clc
push
lret
mov
sub
hlt
push
fdivrl
shl
in
jecxz
repz
xchg
jmp
push
lret
inc
cmp
scas
sarl
push
jecxz
fs
xor
xor
push
clc
jl
inc
aas
outsb
hlt
jb
daa
add
hlt
dec
push
es
shlb
mov
mov
mov
or
jge
fs
mov
xchg
and
rorl
cmpsb
mov
xor
lds
out
inc
jae
adc
mov
data16
lar
stos
pop
mov
mov
dec
mov
pop
mov
div
dec
jl
jno
dec
adc
cltd
ret
jle
mov
lcall
insl
cmp
mov
aas
mov
jl
inc
and
pop
sbb
mov
sbb
dec
and
add
daa
jb
shl
sbb
fsubrs
je
cmp
mov
or
jb
call
mov
mov
push
dec
and
pop
fsubrl
xchg
sub
mov
inc
push
pop
mov
lods
pop
jb
bound
enter
movsl
sbb
inc
adc
shlb
xchg
lods
insl
mov
stos
insl
aad
imul
adc
add
pop
cs
fcoms
inc
lock
cmp
aam
adc
hlt
mov
lcall
jbe
lods
push
orb
push
cmc
push
jb
rcrb
xlat
dec
ret
les
sub
sti
sub
leave
fdivrs
mov
mov
pop
sub
stos
icebp
lcall
ret
int3
in
pop
fsubs
fwait
insb
scas
cmp
adc
add
enter
pop
inc
ret
inc
pop
sbb
xchg
rcll
popf
mov
push
push
loopne
clc
sbbl
stos
lods
stos
les
lock
adc
xor
fcomp
outsl
out
mov
inc
fcoml
lea
inc
add
push
mov
xchg
sub
adc
add
arpl
mov
cmp
lcall
stc
lahf
paddusb
scas
pop
lret
mov
mov
sub
popf
mov
mov
and
dec
lds
fidivs
and
jae
out
dec
and
jl
mov
push
ja
pushf
mov
fnsave
mov
jg
mull
fbld
and
or
mov
cmp
lods
adc
pop
icebp
cltd
cmp
dec
sbb
jbe
loop
cmp
movsb
movsb
cmpl
or
pop
js
jle
fdivl
adcb
clc
cmp
icebp
notb
mov
inc
fisubl
lahf
sub
negl
add
jnp
push
xchg
mov
inc
push
jmp
mov
dec
icebp
repnz
std
pop
dec
and
push
pushf
jecxz
push
xor
std
jecxz
push
pop
xchg
push
jnp
sub
xchg
scas
addr16
stc
lea
test
scas
adc
or
cmpb
dec
scas
adc
adc
lods
pop
xor
inc
mov
lock
push
pop
sahf
loop
cmp
cmp
add
movsl
sbb
add
je
adc
add
in
inc
lds
pop
std
fdiv
mov
xor
pop
or
out
push
gs
aam
jp
test
and
mov
pop
fsubl
cmp
pop
clc
sub
inc
iret
sub
pop
iret
stos
cmpsl
push
sarl
mov
js
movsl
mov
mov
scas
fstpt
jns
rorl
dec
xor
pop
pusha
sub
and
adc
aad
pop
test
push
mov
sub
adc
mov
cltd
add
popf
add
sbb
pop
xor
rolb
fwait
test
or
inc
sti
jl
xor
leave
mov
or
ffreep
push
ficompl
fmuls
inc
or
and
sub
pop
jge
lods
xor
arpl
adc
movsb
daa
sub
or
mov
or
lret
imul
mov
cmp
shll
sbb
mov
in
sbb
cltd
lds
cs
or
jmp
xor
mov
les
add
mov
xor
ret
jle
int
xor
pop
outsb
addr16
sbbl
inc
mov
add
sti
inc
or
and
and
test
test
mov
cli
test
mov
testl
rcll
mov
lcall
ljmp
sbb
int3
loope
mov
leave
into
fidivrl
int3
push
xchg
mov
push
inc
xchg
mov
adc
movl
rcrl
cltd
bound
xlat
pushf
icebp
mov
adc
mov
xor
mov
pop
mov
pushf
mov
or
sbb
loop
lret
xlat
and
loopne
push
inc
cmp
inc
xchg
repz
jo
mov
jle
xchg
fldcw
sbb
loopne
and
adc
jns
push
xchg
adc
mov
lret
repnz
cmpsl
mov
pusha
out
or
cli
fstl
les
ret
adc
push
and
sub
mov
into
mov
js
icebp
add
cld
push
lock
push
add
movsl
inc
dec
movsl
mov
loop
orb
inc
mov
fnstenv
xor
jae
mov
xchg
xlat
test
xorl
out
fwait
add
or
sbbb
lahf
inc
cvtps2pi
out
pop
mov
arpl
pop
in
ja
push
mov
fcmovnbe
sub
int
cli
cmpsl
dec
inc
nop/reserved
addr16
lods
cmp
insb
jecxz
xchg
int3
aas
in
idivb
cli
xor
mov
lret
xchg
scas
lods
push
bound
shl
mov
dec
add
cmp
out
js
xchg
loop
adc
mov
fs
imul
fsubs
in
in
mov
or
jmp
push
or
cmpsb
or
pop
inc
mov
out
loope
and
jmp
cmc
dec
scas
mov
imul
add
loop
cmp
jbe
arpl
sub
es
xor
sub
dec
pop
ret
dec
push
mov
into
imulb
test
movsl
rol
jg
dec
xchg
jecxz
pop
or
loop
leave
clc
test
jl
data16
aas
fistl
xchg
adc
or
sti
lods
roll
cmpb
repz
das
jecxz
leave
sub
xchg
jmp
loope
insb
sub
ja
cmp
loopne
cmp
je
or
mov
mull
jae
jge
das
mov
in
movsb
je
mov
mov
int3
gs
fisttps
lret
dec
imul
iret
sbb
sub
ret
dec
dec
imul
lcall
mov
add
pop
jl
aas
or
push
mov
adc
fwait
out
and
cmpsl
nop
lcall
ja
les
leave
mov
out
outsb
xchg
adc
fs
jle
sbb
test
fisubs
sbb
popf
mulb
movsl
pop
jae
out
inc
lahf
mov
mov
mov
lock
inc
jmp
call
push
jnp
testb
test
jne
sbb
or
pop
inc
sarb
adc
push
jo
outsl
jmp
notb
sub
lret
in
push
je
jp
dec
mov
cmpsb
inc
aad
ror
mov
repnz
add
inc
sbb
test
add
cmpb
sbb
enter
sti
xor
jnp
pop
mov
outsb
mov
add
scas
mov
fdivl
data16
jae
shlb
push
jg
ljmp
pop
dec
sbb
pop
adc
ljmp
push
sbb
stos
jmp
xor
mov
iret
xchg
push
call
and
dec
lods
xchg
add
pop
arpl
inc
mov
in
mov
pop
shl
std
idivb
sar
push
lahf
xchg
sti
outsb
ret
xchg
call
das
pop
adc
ret
lahf
jbe
and
pushf
mov
xchg
popa
bnd
hlt
hlt
in
cmpsl
fnstsw
push
and
mov
dec
loop
push
xchg
push
int3
adcb
cmp
cli
rcrl
mov
sbb
mov
or
dec
repnz
rcl
test
cmp
rclb
fldt
pop
aaa
out
and
aad
je
push
xchg
add
dec
aam
scas
lea
test
mov
mov
jno
cmpsb
push
push
iret
out
ret
xorl
or
fimuls
stos
push
in
dec
adc
jbe
leave
fisubl
mov
cld
and
mov
cmc
hlt
and
cmp
ret
fwait
test
out
add
or
mov
imul
and
in
lahf
dec
push
xchg
outsl
fstps
xadd
repnz
fucom
pusha
addr16
negb
mul
out
or
fdivrl
inc
jae
clc
popa
pop
sbb
loope
sbb
loope
jne
jnp
jl
loope
pop
jns
loopne
in
cmp
xchg
inc
pop
iret
sbb
sub
jge
flds
dec
mov
jmp
bound
cmp
sub
sub
sbb
push
stos
popa
adc
cmp
idivb
cmp
test
pop
lods
push
adc
dec
fisubrs
mov
jno
icebp
lds
add
into
ds
xor
add
cmp
xlat
sub
xchg
push
lret
push
je
jle
or
sbbl
rclb
fmuls
mov
mov
lret
clc
pop
sub
inc
push
lret
stos
jge
inc
push
mov
sub
adc
cmpsl
mov
iret
lret
shrl
test
pop
push
adc
incb
js
xlat
inc
pop
movsb
fucompp
inc
call
cmpsb
sbb
mov
pop
aas
andb
xlat
pop
sarl
xchg
jne
cmp
jp
in
mov
xchg
or
jo
add
adcl
lahf
xor
popa
xchg
in
and
xorb
call
pop
mov
pop
aam
mov
push
popf
cmpsb
movsl
loope
les
ljmp
add
lahf
pop
outsb
jp
rcrb
popa
mov
das
loop
push
mov
inc
aam
popa
sub
scas
or
andb
mov
pushf
clc
test
dec
sti
mov
mov
lahf
adc
xchg
adc
sbb
inc
in
mov
aas
jno
adc
nop
jmp
sbb
mov
sub
lea
push
sahf
arpl
mov
in
mov
push
sbb
mov
popa
cmc
flds
and
addl
fists
xor
jb
push
gs
insl
test
imul
ss
fidivrl
cmc
ds
mov
adc
push
fs
adc
aaa
and
xor
loopne
stc
sub
or
sbb
dec
roll
push
push
insl
psrlw
and
ret
out
inc
dec
iret
in
shl
nop
hlt
inc
xchg
cmp
lret
xor
sbb
ja
out
ds
ds
cwtl
repnz
pop
pop
pop
xor
cmpsb
loope
lcall
or
push
ficomps
gs
insl
cs
ret
push
inc
out
ja
push
sahf
fisubrs
mov
xor
testb
fiadds
mov
xchg
add
sahf
cmp
jnp
dec
jae
sub
or
cmpsb
ja
aam
push
out
push
add
cmp
ljmp
inc
cld
lahf
js
push
mov
jae
mov
sbb
push
jno
xor
lods
push
aam
sti
mov
mov
pop
fwait
mov
popf
mov
jns
jge
push
test
inc
fwait
movsl
fildl
xor
cmp
dec
call
push
mov
jp
cmp
lret
xchg
sti
ror
rcrl
and
jmp
repnz
pop
pop
sub
sbb
cltd
push
aad
repnz
mov
gs
xchg
in
sarb
mov
push
xchg
jb
xor
scas
in
data16
mov
push
int
lahf
mov
xor
lock
jbe
decl
dec
push
dec
mov
icebp
add
cmp
popa
inc
loope
outsb
inc
jb
daa
cmc
add
pop
xor
fs
orb
push
mov
mov
popa
inc
mov
xchg
enter
cmc
or
ret
repz
jnp
mov
lods
fadds
xchg
scas
fdivrs
xlat
iret
notb
sub
sub
mov
cmp
outsl
gs
or
xor
inc
mov
sub
xchg
jecxz
ret
or
sbb
pop
dec
and
test
cmc
xor
fists
xchg
add
mov
mov
sub
dec
inc
xchg
dec
in
pop
mov
add
pop
cld
xchg
das
sbb
leave
xor
jne
aad
loopne
repnz
push
mov
sub
push
inc
mov
test
cmp
insl
mov
outsl
mov
mov
mov
or
push
xor
cmp
push
sub
mov
mov
push
xchg
xchg
scas
inc
jecxz
movsb
xor
push
shl
or
xchg
jge
or
push
ret
sub
dec
shll
cld
fldl
cmp
loop
sub
call
fdivs
popf
sbb
pop
mov
mov
lds
je
jle
xor
test
xchg
sbb
and
fistl
fdivp
jmp
pop
push
movsb
and
ret
push
cld
shl
mov
jmp
mull
cmp
xor
and
loope
or
leave
push
pop
xchg
lds
test
cwtl
scas
add
pop
cmp
pop
insl
dec
sahf
push
ror
or
inc
inc
out
mov
sahf
std
gs
int3
mov
repnz
fs
pop
rol
clc
adc
shr
stos
sbb
mov
or
jge
in
push
dec
iret
in
jb
pop
cmp
or
sub
jae
leave
xchg
lods
mov
shlb
dec
pop
bndstx
mov
int
mov
cmp
aad
cmp
adc
dec
ret
xchg
sbb
mov
xchg
push
enter
test
fnstenv
nop
out
out
and
xor
lcall
cmpsb
lahf
cmc
cmpsb
into
mov
repnz
mov
iret
pop
add
dec
mov
push
xacquire
addr16
sbb
inc
push
mov
xchg
xor
mov
push
or
fcomi
pop
xchg
pop
cltd
inc
sub
sbb
cmp
pop
jmp
add
jae
movsl
out
sub
sarl
ror
jbe
xlat
mov
test
sbb
cmpsl
inc
dec
lods
dec
hlt
xchg
mov
lret
lock
ficompl
mov
xor
sbb
lock
cmc
je
mov
xor
xor
pop
lahf
push
stc
jne
out
xor
or
sub
cmpsl
nop
lahf
ds
push
cmp
iret
lea
xor
inc
sahf
jecxz
out
mov
jp
and
rorl
lea
movsl
dec
repnz
mov
int3
xchg
imulb
push
jb
push
dec
sub
add
out
insb
jnp
bound
test
cmp
fcmovb
es
das
loop
aam
imul
xchg
dec
push
jnp
adc
cmp
cmpsb
or
pop
fisttpll
std
mov
fstl
jge
ja
cwtl
xchg
add
fmuls
das
fs
sbb
cmp
es
and
in
ss
scas
fadds
push
loopne
in
add
pop
jp
push
decb
add
pop
lcall
imul
js
loop
sub
sub
aaa
add
fstps
lods
pop
or
test
push
stos
test
xlat
leave
out
mov
dec
je
cmp
dec
mov
mov
jecxz
pop
insb
xchg
or
or
bound
mov
dec
cmp
pop
jbe
dec
mul
les
mov
sub
nop
popf
adc
hlt
push
dec
jle
inc
xchg
idiv
mov
xor
jecxz
ret
repz
fbstp
mov
ret
test
add
push
and
adc
repz
popa
jmp
into
das
mov
and
xchg
stos
sbb
imul
nop
aad
adc
pop
sti
cmc
and
push
mov
or
xor
aas
out
xchg
fiaddl
sub
outsl
cli
cmp
bound
adc
dec
rol
scas
jae
cmp
test
pop
and
and
test
icebp
dec
dec
scas
adc
xchg
push
popa
je
jecxz
xlat
add
leave
aad
mov
or
incb
bound
push
sub
dec
xchg
in
orl
push
stos
mov
imul
stc
pop
iret
sub
ficompl
ss
outsl
fbstp
xchg
out
fisubl
icebp
mov
inc
scas
xor
add
xor
inc
adc
cmp
inc
xor
adc
addb
scas
or
loope
sti
cmpsl
sbb
pop
dec
jb
jno
adc
jns
sub
pop
shll
arpl
pop
xorb
das
cmc
inc
xor
shll
filds
add
fsubr
inc
adc
test
std
lds
ljmp
push
insl
push
jnp
imul
bound
arpl
in
mov
sub
std
cltd
inc
xor
pop
cmpsb
pop
fxch
fimull
dec
ret
inc
xor
loop
cwtl
push
in
iret
cmp
sbbb
lret
iret
jae
test
rcr
sub
sbb
jmp
adc
mov
sbb
lcall
push
push
jge
push
adc
iret
repz
xor
pop
fldt
ds
in
fsub
sub
in
rorl
inc
mov
cmp
xchg
shll
pop
inc
inc
adc
negl
stc
fiaddl
or
pushf
xor
outsb
push
push
dec
fisttpl
das
sub
test
loop
adc
mov
outsb
cmp
and
inc
push
movsl
sbb
dec
stos
mov
inc
in
mov
dec
lret
aam
and
xor
loopne
popa
jle
mov
pushf
std
lret
inc
in
add
scas
pop
andb
test
push
cmp
xor
cmp
cmp
loope
dec
sbb
mov
inc
data16
sbb
adcl
ljmp
rcrb
pop
add
loopne
fbstp
cmpsb
pop
loope
ja
hlt
enter
ljmp
sub
lods
fidivrl
pop
test
clc
pusha
popl
xchg
xchg
adc
mov
push
push
and
cmc
xor
loope
je
cmp
xchg
test
mov
lock
xor
jo
pop
dec
inc
push
pop
loope
aad
stos
jmp
stc
add
adc
inc
push
push
push
and
push
aam
pushf
cmp
jbe
and
out
sbb
shlb
rdtsc
jno
js
sub
xchg
cmpsb
push
cmp
adc
daa
xchg
dec
xor
and
ficoms
in
out
push
mov
pusha
loope
push
mov
fimull
dec
int
mov
mov
je
pop
enter
lcall
movsb
mov
push
xlat
iret
push
sbb
mov
mov
pusha
xor
outsb
pop
mov
sub
in
notb
inc
popf
aas
ljmp
inc
cmp
rcrb
mov
and
mov
idivb
test
mov
stos
scas
push
adc
inc
pushf
ret
js
insb
popa
fimuls
daa
and
loopne
mov
and
dec
outsl
jge
in
shrb
insb
outsb
cmp
das
cmp
sarl
mov
imul
loop
hlt
test
push
push
pop
cmp
mov
je
sub
cwtl
xchg
ja
inc
sbb
pop
dec
jb
arpl
fs
adc
aaa
xchg
sub
jno
mov
stc
roll
rep
or
fistpl
leave
shll
cmp
int
lret
jb
stc
test
add
jmp
mov
out
sbb
addb
pop
push
cmp
sub
add
stos
out
jmp
cmpsb
mov
mov
sbb
mov
xorb
xchg
pop
jg
mov
leave
loope
jnp
xor
jns
fdiv
jnp
pop
sub
scas
and
xchg
into
pop
xchg
xor
ljmp
sbb
std
pusha
movsl
loope
outsb
rol
sbbl
and
sub
sub
ss
test
adc
pop
sbb
outsb
js
daa
fwait
dec
pop
inc
fildl
push
pop
mov
orb
js
cwtl
fiaddl
sbb
dec
xchg
and
adc
sub
lahf
nop
cmp
daa
fidivl
pop
cmp
pop
jmp
sub
mov
cld
rolb
mov
mov
jnp
leave
movsl
rorl
lods
lods
push
cmp
xor
mov
mov
push
jns
mov
arpl
movsl
test
sahf
fsts
cmpsl
mov
mov
iret
mov
pop
lods
sbb
pop
int3
xchg
into
ret
mov
lahf
lods
push
sub
loop
push
or
in
jecxz
lahf
pop
icebp
mov
add
mov
loopne
sub
sub
add
ffree
push
aam
cs
add
ja
int3
sbb
push
adcl
mov
xchg
jmp
mov
jle
push
fwait
jp
mov
cs
in
add
sub
mov
pop
test
pop
mov
add
inc
mulb
into
jne
jge
not
pushf
lret
stos
xor
xchg
scas
xchg
das
arpl
popf
ja
aam
sar
enter
cmp
and
je
xor
scas
lods
cmpsb
es
mov
adc
xchg
fwait
xlat
xchg
shrb
cmp
nop
add
cmc
imul
push
mov
mov
iret
nop
push
dec
push
inc
ret
or
or
rorb
test
sbb
xor
divl
ret
jne
mov
adc
imul
bound
adc
sbb
push
jmp
pop
test
or
idivb
dec
out
out
jnp
xor
sbb
pop
mov
push
in
fsubrs
jg
jge
pop
andb
idivb
scas
adc
cs
xchg
ja
icebp
sbb
or
mov
inc
mov
rcll
inc
add
pop
sarl
cmp
in
lcall
xlat
daa
push
imul
mov
fidivrl
xor
nop
mov
es
loopne
mov
orl
dec
and
mov
outsl
mov
pop
jmp
or
out
cld
xor
xor
sub
cmpsb
dec
dec
sub
daa
inc
jge
shlb
sub
xor
mov
xchg
mov
xor
por
shrb
or
lahf
flds
jmp
outsl
repnz
jnp
ficoml
cmp
jp
popa
dec
loopne
enter
std
xlat
sbb
aam
pusha
sahf
xchg
popa
sbb
jge
or
rol
and
or
jo
cs
push
loopne
pop
movsb
cmp
notl
daa
test
pop
and
push
test
sbb
cmpsl
mov
jecxz
jns
stos
lea
je
cmp
shlb
into
jno
shlb
mov
jg
mov
cmpsb
pop
push
cwtl
xor
pop
sbb
inc
and
pop
push
rcrl
sahf
imul
popf
or
cmp
add
imul
cmpsl
ds
ret
repnz
addb
sbb
xchg
mov
scas
fwait
xlat
jmp
inc
sub
imulb
insl
pop
sbb
outsl
pop
out
inc
aaa
decb
subl
jmp
cwtl
lcall
loopne
push
icebp
xchg
adc
subl
xor
ja
adc
popa
pop
inc
cmc
call
iret
sar
cmpsl
out
adc
pop
push
test
push
clts
mov
xchg
add
mov
les
scas
shll
and
pop
daa
cld
xchg
mov
addr16
xchg
jp
push
fildll
pushf
iret
push
popa
push
xchg
pop
sbb
rcl
sti
inc
inc
hlt
pop
in
mov
sbb
outsl
pop
mov
mov
fstl
or
mov
jge
xor
adc
jl
xchg
in
push
pop
xchg
ror
lret
mov
push
sahf
je
dec
shl
stos
push
sbb
sti
xchg
stos
fdivs
es
jp
iret
xor
icebp
cwtl
aad
stc
pop
xor
aaa
jb
cmp
jmp
test
out
dec
mov
xchg
mov
iret
int
dec
mov
cmp
enter
dec
test
inc
inc
pop
pop
xchg
pop
out
in
inc
cwtl
add
push
add
outsb
adc
scas
and
inc
jno
mov
rolb
jmp
mov
push
in
es
ds
push
mov
or
sub
push
test
jmp
lock
push
sbb
addr16
mov
sub
scas
movsb
push
inc
jne
rcr
jb
dec
dec
mov
xlat
stc
addr16
cmp
fldl
xor
cltd
sub
jl
test
jmp
add
dec
shlb
in
leave
addr16
push
cli
pop
aas
bound
push
shll
sub
dec
insl
xorb
mov
xor
mov
lcall
int
add
mov
mov
lret
inc
lret
mov
out
inc
gs
test
jbe
mov
mov
push
mov
push
mov
rcll
imul
mov
mov
aaa
stos
iret
out
sbb
jp
pop
aam
or
mov
fs
pop
dec
outsl
outsl
in
or
loop
and
sar
mov
adc
jne
repz
hlt
inc
mov
mov
ljmp
cmp
icebp
push
rcrb
inc
mov
push
xchg
pusha
faddl
mov
push
ficoml
xor
fdivrl
stos
sbb
enter
jae
adc
dec
jmp
pop
jae
out
icebp
cmpsl
mov
ret
shlb
or
in
aad
push
cmp
push
xor
add
gs
insl
push
mov
xchg
lea
dec
shlb
add
loop
dec
inc
xchg
movb
cmc
dec
or
push
xchg
loop
cmp
adc
dec
cmpsb
fidivrl
dec
dec
popa
add
insb
int
aam
decl
test
inc
add
ss
outsl
pop
stos
or
cltd
sub
jno
adc
mov
jmp
into
cmpsb
mov
aam
out
add
fs
enter
addr16
and
test
loope
out
scas
xchg
ds
in
les
jmp
jmp
jnp
cmp
ss
shrl
fwait
push
lea
jmp
outsb
rcll
jl
imul
in
sub
add
les
mov
and
xchg
cmp
lock
push
js
xor
movb
pop
mov
fnstenv
gs
andps
fldt
xchg
mov
cmp
mov
xor
test
pop
pop
pop
leave
sbb
ret
aad
mov
and
scas
fdivr
xor
fisttps
jmp
jle
xchg
rcrl
outsb
jecxz
cmpsl
sub
xchg
push
add
aaa
leave
into
out
push
sbb
mov
std
push
cmc
mov
pop
js
andl
scas
gs
jbe
ret
mov
das
jl
mov
and
int3
daa
lret
add
push
and
push
repz
in
or
adc
lock
insb
push
inc
xchg
fmull
cs
bound
sbb
pushf
shll
and
pop
adc
cmp
stc
jo
mov
adc
jae
jnp
dec
cmp
addb
aaa
pop
sub
movq
add
cmc
push
pop
fimuls
outsl
inc
fistpll
mov
aam
stos
repnz
popa
sbb
xlat
mov
adc
xchg
lret
sbb
pop
push
sbb
and
mov
cmpsb
mov
repnz
sub
lds
or
test
sbb
add
jno
bnd
xchg
popa
pushf
movb
popf
mov
or
stos
sbb
dec
pushf
or
rorb
cli
add
mov
push
inc
loopne
or
push
mov
dec
sar
test
hlt
lods
adc
mov
jecxz
mov
push
xchg
fnstsw
mov
lock
pop
insb
cmpsb
sbb
nop
das
push
std
pop
cmpsl
pop
and
fnstsw
aas
mov
push
bound
or
fdivrs
jg
sub
cmc
cmpsb
push
aam
mov
push
sbb
addb
cld
idivl
mov
mov
mov
icebp
push
fcomip
pop
and
adc
inc
push
add
mov
lods
outsl
xlat
cmp
add
call
sbb
and
iret
or
stc
xor
out
pop
or
outsb
in
push
outsb
cmp
out
outsb
repnz
insl
lods
and
push
cmp
inc
jno
andb
repnz
call
mov
mov
imulb
fwait
dec
pop
dec
outsl
sbb
rorb
xor
jns
add
or
jo
in
sarb
stos
mov
pop
mov
hlt
lret
cmp
xor
fwait
addr16
lcall
iret
adc
xchg
andl
das
outsl
add
pushf
push
or
push
out
adc
adc
testb
and
aas
inc
xchg
fs
lcall
xchg
mov
pop
pop
jge
mov
cli
ret
pop
push
fldl
stos
and
mov
pop
mov
jp
xor
and
loope
aad
jle
dec
add
js
movb
xchg
dec
or
mov
push
movsl
sub
jle
xor
sbb
into
fldl
add
pop
fsts
add
sbb
lret
add
sub
fs
cmc
xchg
mov
pop
mov
push
xor
mov
dec
pushf
scas
shl
xchg
xor
sbbb
ljmp
xor
cmp
psrad
bound
sti
pop
adc
test
mov
je
mov
stc
jbe
sbb
sbb
or
test
jnp
xchg
pop
xchg
out
sub
bound
fisttpll
xchg
or
mov
add
mov
lret
cwtl
sahf
pushf
std
pop
and
lret
mov
stos
nop
mov
mov
inc
sub
movsb
hlt
lods
test
scas
movsb
scas
mov
testl
repz
or
push
stc
in
push
xchg
mov
lcall
or
lods
js
fdiv
pop
mov
movsl
sbb
es
xchg
lea
pop
or
jmp
je
add
jae
into
imul
push
add
imul
movsb
mov
outsb
add
mov
jne
adc
popf
js
fildll
mov
lahf
and
shrb
jnp
push
pop
jp
popl
xor
orl
and
xchg
dec
out
dec
push
sbb
insl
aas
cmpl
xchg
or
lahf
cmp
pop
lods
pusha
jle
sub
cmpsb
push
mov
and
and
add
mov
mov
mov
mov
fsubrs
mov
pop
pop
call
rclb
ja
cltd
and
add
or
or
xchg
stos
mov
popa
test
mov
adc
mov
into
sub
dec
ret
jb
mov
mov
data16
cmp
pushf
push
mov
mov
shrl
decl
leave
add
mov
sub
pop
sbb
daa
stos
lock
mov
shll
sub
mov
lret
jmp
outsl
mov
aaa
shl
mov
pop
mov
xchg
pop
insl
xchg
lret
cld
dec
nop
testb
loopne
and
pusha
push
movsb
adc
pop
and
outsb
adc
addb
mov
pop
cmp
or
iret
and
adc
push
dec
lds
or
test
sbb
sbbb
dec
movsb
sbbl
push
insb
push
sbb
ds
xor
pop
in
inc
pop
test
imul
xchg
popa
cwtl
test
data16
js
test
xchg
pop
sahf
mov
std
cmpsb
sub
in
sahf
mov
imul
xor
lahf
mov
pop
mov
fistl
and
in
pop
mov
pop
dec
loopne
fs
adc
test
xchg
add
jb
dec
popa
push
cld
cs
imul
out
into
fwait
int
dec
repz
and
lea
out
and
sbb
jmp
icebp
negl
test
push
stc
insl
lcall
inc
js
jns
addr16
push
pushf
out
mov
es
pop
movsb
mov
fadds
xorb
dec
sub
mov
repnz
mov
movsb
lods
shrb
inc
sub
push
ja
mov
cmp
in
pmuludq
test
cmp
adc
jecxz
push
lock
and
into
arpl
mov
jmp
sbb
call
jne
push
ret
mov
rcll
mov
jno
mov
push
aas
xchg
inc
lods
rorl
lret
test
imul
mov
mov
xchg
jno
pop
pop
sub
jno
das
inc
xor
pop
sub
xchg
mov
data16
test
cmp
mul
push
xchg
mov
daa
push
lcall
lahf
stos
jp
mov
mov
fnstcw
xchg
xor
and
sahf
jno
stc
add
xchg
lcall
push
lret
je
in
jecxz
bound
sub
jmp
xchg
push
out
cmc
and
icebp
rcll
inc
adc
adc
lahf
and
sub
cmp
push
dec
call
mov
lock
aad
mov
int
sub
lods
adc
adc
push
cmp
lods
movsb
push
mov
in
or
lret
leave
cltd
cmp
jecxz
fldcw
inc
jecxz
jnp
repnz
push
mov
nop
fistpl
js
mov
xchg
sbb
mov
jne
nop
sbbl
dec
popa
xchg
ret
mov
add
stc
dec
fld
hlt
xor
movsb
mov
insl
bt
xchg
push
out
pop
cld
arpl
push
iret
cmp
mov
pop
pop
add
pop
lods
lahf
lods
add
lret
clc
inc
sti
mov
push
ljmp
nop
in
lock
and
pushf
or
stos
xor
pop
adc
xor
movsl
push
xor
push
mov
pop
repz
mov
mov
dec
flds
cwtl
enter
push
mov
cmp
sbb
cmp
pop
bnd
adc
imul
shlb
mov
test
repnz
lahf
adc
xor
loop
das
leave
out
xchg
ljmp
pop
aaa
mov
add
inc
popa
bound
mov
cmp
sti
fmulp
outsl
mov
lods
mov
xchg
mov
jo
or
repz
mov
xchg
std
stos
or
sbbb
movsl
movsl
lock
gs
sbb
sarb
test
outsl
stos
push
lds
dec
sbb
cwtl
cmpsb
xor
outsl
orl
mov
loopne
sbb
lcall
inc
loope
fstl
jae
pusha
or
sub
lods
xchg
jno
jg
addr16
add
cli
or
testl
enter
ret
cmp
mov
jge
in
cltd
lods
push
adc
loopne
hlt
cmc
ficoml
loop
xchg
out
jmp
and
int3
mov
cmpsb
inc
add
rcrl
or
inc
mov
cltd
ljmp
stc
cs
insl
xchg
jle
shll
ss
xchg
jns
sub
outsl
sti
mov
inc
fldcw
pop
pop
in
scas
pop
adc
mov
je
add
cmp
ss
ret
int
jl
sbb
mov
jno
js
xchg
adc
test
dec
je
jg
out
inc
cltd
push
out
testb
jno
xchg
andb
pcmpgtd
pop
mov
push
popf
or
cmpsb
lret
pop
dec
rcrb
rcrl
and
xchg
pop
xchg
in
jg
or
xor
orb
xor
lods
ror
push
mov
jne
outsb
sar
cmp
iret
arpl
arpl
je
push
repnz
out
movsb
jo
lret
imul
movsb
repz
es
and
lock
xlat
aas
mov
push
sar
hlt
out
aam
insb
or
stos
inc
or
lcall
rolb
shrl
sahf
addr16
jle
cmpsl
and
xchg
std
orl
fbld
pop
xchg
adc
mov
aas
es
outsb
in
push
or
push
xchg
dec
mov
pop
sbb
dec
jno
jg
inc
test
sbb
f2xm1
mov
xorb
insl
mov
pop
insb
mov
pop
faddl
std
rolb
xchg
lahf
ret
fcmovnu
rcll
unpckhps
sub
cwtl
pop
fimuls
sti
inc
cwtl
out
dec
scas
mov
push
sti
mov
xor
test
inc
mov
or
mov
fnstcw
mov
xchg
in
and
sbb
in
inc
inc
test
jo
adcl
xchg
scas
out
mov
xchg
sti
scas
sbb
mov
rorb
mov
test
shrd
dec
inc
jg
mov
fwait
and
roll
push
adc
inc
rcll
jl
cmp
adc
ljmp
test
cmp
push
adcb
cmp
gs
xor
pusha
scas
xchg
popf
mov
sti
mov
and
divl
and
enter
pop
cld
mov
push
dec
std
sbbb
push
add
sbb
sbb
jb
jg
sbb
xor
jl
hlt
xchg
add
xchg
mov
mov
mov
and
push
xchg
fsubrp
fimull
cmpsb
jns
push
stc
inc
jo
xor
xor
inc
xor
scas
loopne
clc
ret
cmp
test
jg
ljmp
push
push
and
icebp
push
fcmovbe
fstl
stos
add
js
test
lret
pop
inc
sbb
sbb
mov
add
data16
shlb
xchg
lods
adc
dec
sbb
in
xchg
add
daa
cmp
pop
lcall
bound
xchg
xchg
aad
ret
mov
aas
mov
xchg
xchg
push
cmp
add
jge
inc
jge
lcall
scas
imul
jecxz
orb
sarl
das
aad
scas
or
inc
add
je
mov
xor
filds
jno
popa
arpl
mov
mov
lds
xchg
ficomps
adc
stos
jmp
or
out
mov
push
gs
stos
xchg
data16
add
sub
aas
ja
std
sbb
pop
mov
leave
adc
mov
addl
popa
popf
adc
imull
add
pop
fildll
popf
dec
aas
sbb
cmc
dec
inc
scas
dec
movsb
sahf
dec
ficompl
push
xchg
fcompl
mov
add
xor
cmp
movsl
dec
and
push
mov
xchg
inc
mov
pop
sbb
lock
sub
shlb
lahf
loop
in
orl
add
in
iret
lock
mov
sub
out
lahf
dec
sub
jnp
xor
mov
cmp
xor
inc
pushf
les
clc
pop
movsb
mov
and
les
pop
leave
pop
lea
inc
mov
lret
adc
negl
jns
inc
int
cmc
inc
or
mov
test
dec
shll
xchg
sar
nop
dec
les
fwait
clc
add
cmp
pop
fsts
xor
out
dec
pop
les
pop
iret
fstps
je
dec
insb
push
or
icebp
dec
add
jle
sub
mov
mov
mov
mov
incl
or
stos
loopne
jno
mov
out
inc
call
jno
mov
sbb
outsl
pop
adc
or
jmp
mov
cltd
inc
ret
es
jae
dec
or
push
push
cli
je
jb
xchg
sbb
ret
push
xchg
rol
pop
sbb
loopne
xor
xor
lahf
add
dec
cmp
jne
loop
outsl
xlat
sub
in
mov
adc
cmp
inc
in
push
aas
mov
jnp
cmp
pop
into
dec
cmpsl
push
mov
inc
fistpl
fbstp
lock
pop
dec
aam
push
cmpsl
in
imul
sub
outsb
mov
std
call
mov
xor
adc
call
jmp
fistl
cld
adc
add
push
push
loope
sti
insl
imul
dec
or
inc
aad
push
sahf
pushl
das
int3
push
mov
cmp
mov
mov
cltd
ficomps
loop
repnz
test
mov
sbb
aam
sarb
mov
scas
fimull
das
mov
dec
loopne
aaa
insb
mov
loop
or
inc
push
scas
pop
adc
stos
mov
pushl
mov
pop
dec
sub
inc
pop
inc
icebp
mov
inc
es
stos
loope
push
inc
push
dec
mov
xchg
xchg
insl
pop
sub
cltd
gs
and
and
lret
pushf
les
aaa
push
adc
fistps
repnz
push
adc
add
scas
adc
mov
in
jmp
movsb
sbb
and
scas
aam
movsb
imul
lahf
lahf
std
inc
mov
adc
repnz
push
pop
stos
jp
inc
pop
inc
push
sub
push
mov
rorb
pop
sbb
fidivs
sub
mov
sub
fstps
pop
das
ret
incb
push
jnp
clc
xchg
adc
ljmp
rcll
ret
add
jge
loope
loopne
aam
gs
iret
and
imul
jno
jmp
cs
pop
rorl
fwait
iret
sbb
cmpsl
cmc
pop
cmp
rcll
movsb
inc
addb
faddl
mov
push
insl
and
sub
enter
pop
xor
inc
bound
in
pop
repz
push
push
mov
je
rcrb
push
cmp
inc
sbb
cmpsl
pop
cmp
addl
loop
jge
dec
xchg
mov
je
loopne
into
mov
ja
sbb
or
lods
pop
push
test
add
hlt
push
fisubrs
cli
imull
std
daa
mov
stc
mov
add
mov
mov
call
popa
pop
mov
inc
inc
sub
pop
cs
out
fwait
addr16
faddl
jp
xchg
rol
rcl
hlt
ret
lock
addr16
add
sar
cld
repz
sbb
jp
xchg
pop
lods
lahf
sbb
add
mov
mov
and
push
aad
fsubr
stos
xlat
ss
ret
jns
add
popf
jge
pusha
lods
stc
adcl
cmp
inc
dec
xor
push
neg
frstor
scas
das
sar
mov
dec
lret
push
inc
jecxz
dec
fcomi
push
fwait
dec
and
mov
add
nop
sbb
mov
test
add
xchg
xor
dec
sbb
in
mov
outsb
mov
xchg
mov
fistl
loop
and
jmp
pop
and
xlat
sub
dec
pop
sbb
pop
sub
adc
aas
inc
dec
dec
loope
xlat
mov
pop
in
inc
jo
inc
mov
add
pop
cld
sahf
cmp
sub
fsubs
xor
jl
xchg
add
jns
aaa
sarl
shufps
insb
sbb
pop
int
inc
jle
icebp
outsl
les
push
jge
add
test
insl
je
imul
cmpsl
movsb
jae
add
jns
add
and
fdiv
fisttpl
push
sbb
sub
mov
push
in
add
out
mov
ljmp
push
mov
cwtl
cmp
into
xor
cltd
cli
mov
push
pop
dec
scas
mov
mov
sbb
sub
pop
sbb
scas
sub
push
xchg
pop
fidivl
push
add
mov
into
repz
jg
lea
stc
add
mov
mov
mov
sti
or
lds
push
mov
inc
cwtl
shlb
test
pusha
es
mov
call
inc
sub
test
test
lahf
test
xchg
andb
sub
iret
push
jae
or
popa
imul
insl
cmpsb
fsub
xchg
data16
add
js
push
mov
push
popa
aam
lods
or
in
push
push
mov
mov
jl
inc
push
or
pushw
lods
ss
xchg
je
adc
lahf
loopne
mov
push
jb
loop
insb
dec
adc
sahf
jle
mov
xchg
jno
in
adc
xchg
andps
add
pop
and
mov
xchg
lea
mov
jbe
sub
push
sub
mov
add
push
cld
cltd
rclb
je
jbe
inc
mov
jne
dec
mov
push
mov
mov
mov
inc
push
div
aam
push
mov
push
idiv
iret
dec
mov
lcall
mov
dec
mov
jae
pop
repz
pop
hlt
adc
clc
mov
mov
out
inc
inc
icebp
sti
ljmp
xor
mov
push
or
clc
test
enter
mov
fimull
cmp
out
outsb
dec
push
mov
mov
mov
mov
jb
adc
xchg
cs
je
or
stc
enter
or
pop
jmp
call
div
adc
subb
inc
xchg
mov
cmp
idivl
stc
pop
mov
push
inc
jno
jle
imul
jecxz,pn
cmp
and
add
jle
pop
scas
xor
mov
fwait
movsl
dec
in
jecxz
sub
es
xor
xor
lods
int
in
adcb
sub
mov
mov
and
outsb
pushf
in
mov
xchg
jmp
outsb
xchg
mov
in
lea
pop
lds
ljmp
sarl
cmc
mov
adc
test
scas
push
out
push
add
decl
daa
xchg
sub
sub
mov
dec
mov
nop
aam
add
lods
daa
addr16
or
pop
mov
insb
jmp
cmp
mov
dec
lret
add
call
out
movsl
cmpsl
ret
add
push
into
push
imul
mov
andl
das
dec
iret
in
sbb
cltd
xchg
pop
jl
mov
popa
add
cmp
lret
loopne
dec
jno
stos
sub
sbb
cmpsb
xchg
or
mov
jl
push
mov
std
outsb
pop
dec
fldl
sub
mov
sub
xchg
mov
test
ja
xchg
jno
mov
pop
xchg
or
jmp
xchg
mov
scas
shll
stos
shlb
pop
inc
clc
cmp
push
ret
mov
repnz
adc
ficoml
roll
and
xchg
fcomp
sub
pop
mov
jmp
aam
cmpsl
cmp
cli
int
push
mov
sbbl
dec
ret
inc
push
fisttps
cmp
in
inc
jecxz
das
jge
pop
shlb
jo
cli
xchg
in
outsb
cmc
imul
lret
dec
psadbw
jns
out
das
aas
int
aaa
xor
xchg
fisubs
icebp
ficompl
ret
jge
fwait
pop
mov
dec
and
mov
pop
lahf
pop
lds
mov
cmp
pop
sahf
les
bnd
out
xchg
push
lret
imul
jecxz
mov
jno
add
ja
or
or
into
es
test
jp
jg
mov
ret
repz
movb
bound
adc
mov
sbb
xor
mov
insb
cmp
and
xchg
add
mulb
rcl
loop
loope
out
sub
aas
mov
mov
pop
aas
lcall
push
xor
iret
cwtl
jno
sbb
aad
in
jb
jns
mov
pop
jg
mov
inc
fwait
jb
std
idivb
enter
imul
lcall
push
rcrl
sbb
mov
in
adc
mov
test
in
adc
and
cmpsl
roll
mov
es
or
pop
sbb
cld
repnz
aad
je
test
xchg
outsl
int
jne
jb
push
and
push
adc
jle
jne
ljmp
push
mov
push
push
xor
jp
cmp
cmp
dec
jb
repnz
lods
xchg
inc
mov
dec
out
es
rcrb
insl
xchg
in
mov
sub
xlat
fucomp
stos
push
jmp
xchg
mov
loop
mov
cld
cli
xor
hlt
ret
in
arpl
or
sub
jg
aas
loope
sbb
xchg
add
mov
dec
out
dec
cmpsl
jae
and
fmull
pop
add
xor
loopne
popf
jmp
ljmp
sbb
cmp
push
js
stc
loope
cmp
aaa
pop
int3
hlt
sub
dec
mov
testl
push
movsb
icebp
in
vpsubusb
adc
jnp
cltd
push
in
inc
fildll
mov
dec
pusha
sbb
int
ja
push
mov
stos
mov
jns
rcl
pop
dec
mov
cltd
sub
pop
sbb
xchg
lods
adc
popw
or
pop
sbb
jb
add
cmp
cmp
mov
xchg
scas
imull
dec
stos
les
imul
in
out
clc
inc
fadds
cmp
xchg
cmp
xchg
cmp
dec
cltd
pop
mov
fwait
rcrb
lds
dec
test
xor
adc
or
jne
dec
mov
jl
push
icebp
xor
je
test
pop
add
inc
js
mov
sbb
xor
mov
jge
jg
insl
sbb
jnp
adc
lret
adc
jnp
push
aaa
jbe
das
inc
push
mov
jne
pop
mov
pop
mov
int3
jb
lret
xor
ds
je
mov
cld
jmp
push
inc
jns
cmp
bound
mov
shlb
sub
xchg
lods
std
movb
lcall
in
jg
push
push
orl
dec
icebp
test
andl
sti
xchg
fidivs
stos
cwtl
in
cltd
cmp
mov
leave
aam
push
ficoml
mov
sbb
or
lret
mov
arpl
movl
push
fcoml
imul
jo
in
lret
adc
ds
jns
sahf
sub
mov
pop
js
push
inc
mov
xchg
mov
lret
xchg
mov
xor
imull
adc
je
push
data16
mov
pop
xchg
ljmp
jb
nop
jne
add
nop
adc
inc
clc
test
call
lods
imul
out
pop
das
int3
ja
adc
dec
fisubs
mov
into
xlat
jo
mov
repnz
cli
cs
mov
or
jle
lcall
cmp
push
popa
mov
fadds
test
movsl
loop
mov
sbb
jo
jp
test
imul
in
gs
ffreep
addr16
shrl
pop
adc
pop
movsl
dec
aad
aad
frstor
fiadds
pop
pop
ja
enter
hlt
stos
hlt
dec
cs
jns
cwtl
stos
xchg
call
aas
sbb
popf
fisttps
sub
in
jp
sub
pop
push
js
inc
aaa
rcl
inc
and
mov
jno
xchg
dec
add
int
test
hlt
fcomp
pop
pop
jnp
dec
mov
push
sbb
loopne
pop
or
popa
stos
clc
fisubrs
dec
icebp
sbb
test
lcall
bound
call
inc
mov
jp
outsb
sbb
addr16
movsl
dec
cmpsb
leave
lret
push
aas
lods
push
xor
lds
mov
insb
mov
xor
adc
loopne
testb
ss
cltd
rclb
outsb
or
adc
mov
xchg
push
jnp
push
leave
push
xor
cmp
in
mov
movsl
in
cmp
jecxz
loopne
dec
jnp
dec
lea
out
les
sahf
sarb
xchg
xchg
jns
test
or
jnp
xchg
inc
add
cmpsl
shr
push
fs
lods
call
hlt
ljmp
push
pop
xchg
cmp
outsb
jl
mov
push
out
repnz
dec
push
and
fucom
js
flds
add
movsl
rolb
orb
xchg
fucomip
cmpb
pop
push
in
mov
adc
jns
repz
bound
push
out
inc
arpl
bound
out
adcb
jae
pop
test
push
inc
dec
jno
mov
int
jbe
mov
and
xchg
pop
call
pop
scas
cmpsl
decl
mov
icebp
jns
mov
cmp
add
std
cli
mov
adc
aad
in
pushf
push
adc
inc
jp
dec
movl
leave
movups
inc
rcrl
sbb
mov
sub
push
scas
mov
imul
dec
stos
push
pop
sti
hlt
jge
xchg
popa
add
ss
pop
lahf
cs
pop
pusha
repz
jbe
mov
push
cmpsl
mov
es
in
ss
in
pop
inc
loopne
add
cmpb
jbe
insb
xchg
pop
sub
lcall
and
fidivs
nop
push
push
or
cmp
jbe
jmp
sub
sahf
sub
mov
fnstsw
mov
bound
scas
movl
ret
pop
mov
cwtl
xchg
roll
push
push
jae
adc
hlt
sbb
out
jmp
insl
mov
jmp
xor
rorb
xor
sbb
lea
pop
aad
jb
sub
rol
xor
test
inc
mov
arpl
or
loopne
scas
std
mov
ds
lods
and
inc
test
mov
xchg
add
stc
out
push
xchg
lock
notb
es
cmpsl
addr16
mov
cmp
inc
fcompl
push
dec
cli
stos
pop
push
lea
and
outsb
mov
sbb
add
lret
js
cmpb
pop
inc
jecxz
test
lock
pop
scas
movsl
jb
loope
cltd
test
lcall
testb
sbb
aaa
call
mov
idivl
dec
fiaddl
cwtl
call
adc
int3
cmc
js
mov
pop
in
mov
arpl
mov
and
cwtl
pop
in
das
push
loope
cvtdq2ps
dec
inc
cmp
adc
hlt
mov
dec
xlat
addl
pop
adc
mov
adc
cmc
cmpsb
pop
mov
add
shlb
mov
in
in
jnp
dec
fcompl
scas
mov
xor
mov
mov
test
sbb
and
clc
filds
or
xor
cmp
mov
jle
cli
subb
test
xchg
ret
mov
dec
out
fucomip
sub
mov
push
cs
and
mov
movd
in
cltd
pop
fiaddl
outsl
fidivrs
dec
lods
jns
lahf
icebp
test
xlat
jbe,pn
loope
fldenv
sub
sar
lret
add
push
xchg
shll
push
xor
pop
mov
gs
popf
sti
xchg
lret
pop
mov
sub
mov
fucomp
sbb
lock
and
push
mov
stos
shr
movsl
push
pushf
insb
jge
jo
stos
sbb
daa
jge
sub
fcompl
imul
subl
inc
lahf
rolb
add
and
xor
sbb
mov
pop
sub
xor
pop
jle
mov
push
jp
sbb
int3
lret
fwait
pop
dec
jae
sahf
std
in
aaa
movsb
and
inc
mov
out
idivl
jbe
scas
mov
cmp
ljmp
mov
mov
mov
sub
and
sbb
xchg
push
fsubp
sbb
or
push
sahf
cmpsl
repnz
stc
insl
rclb
and
and
xor
cs
mov
cmp
mov
mov
fchs
test
outsb
ja
jae
lahf
mov
sub
inc
in
xchg
pop
cmp
mov
dec
xor
daa
sahf
movsl
jo
sub
mov
push
lret
xor
arpl
iret
jne
test
and
insl
insb
jnp
cli
incl
fadd
ret
mov
fisubs
andl
adc
mov
vcvtsi2sd
sbb
adc
pop
aad
frstor
adcl
sub
xor
rclb
aam
push
movsb
mov
jg
out
in
out
mov
fucomip
les
mov
int
mov
shrb
pop
or
ret
hlt
dec
fdiv
sub
and
dec
mov
and
movsb
inc
xchg
and
mov
or
mov
jl
enter
mov
jge
pop
rorb
lret
push
pop
cmpsb
mov
fdivrl
lods
scas
mov
in
scas
jle
flds
xchg
shr
push
inc
popl
xchg
pusha
push
add
jns
enter
mov
push
jne
fnsave
sub
pop
or
mov
dec
or
dec
sbb
cld
adc
mov
dec
xor
icebp
das
jecxz
pop
mov
imul
dec
arpl
add
imul
lock
xchg
lret
xor
lock
sbb
xchg
sbb
mov
sbbb
into
push
jo
mov
sahf
push
les
scas
dec
fcompl
je
mov
mov
pop
rorb
mov
sub
or
lret
and
sbb
pop
add
pop
inc
push
jbe
aad
int3
sbb
mov
mov
stc
lea
shl
pop
mov
enter
ljmp
ss
add
jle
loope
ljmp
push
hlt
mov
jns
cmp
fstl
mov
sub
jmp
nop
xlat
aas
lret
jle
sub
mov
lock
aad
lahf
mov
mov
std
push
dec
nop
push
into
push
push
mov
inc
popa
xor
inc
loope
ds
out
or
push
out
inc
xor
pop
mov
add
add
icebp
gs
push
loop
punpckhbw
push
test
repz
and
xchg
or
loope
jmp
adc
sub
xor
inc
xor
xchg
add
adc
xor
mov
lods
sahf
cwtl
out
push
cmp
popa
pop
cmp
xchg
loope
dec
jecxz
cmc
in
jb
cmp
jl
inc
int
jp
dec
cmpsl
aaa
or
movsb
or
mov
cmp
lcall
dec
mov
test
xor
adc
jbe
in
add
fimuls
push
pop
pop
jl
mov
pop
and
movsl
jne
mov
jbe
mov
outsb
das
push
lock
dec
jbe
dec
das
imul
mov
stos
enter
jle
adc
or
test
dec
call
inc
push
outsl
mov
inc
lea
sbb
pop
mov
mov
fsubrl
lods
xchg
dec
test
mov
faddl
sbb
mov
std
sub
adc
fwait
cmp
xor
and
sub
adc
adc
mov
add
mov
repnz
jecxz
adc
lcall
sbb
xor
ror
stos
mov
stos
repnz
dec
mov
push
dec
push
add
daa
pop
pop
cmp
and
insb
call
popa
sub
fisubl
dec
jb
data16
xchg
aas
movsl
int3
pop
incb
push
iret
addl
bnd
jne
sti
mov
movsb
xchg
icebp
add
das
dec
test
adc
mov
iret
jno
adc
mov
icebp
inc
pusha
and
lcall
xor
xor
ret
sahf
rcrb
bswap
mov
pop
std
adc
outsl
cmp
or
cmp
mov
les
mov
mov
xor
rolb
jo
and
jg
out
das
lds
in
lret
pop
push
insb
outsb
fldl
add
sbb
call
addr16
lret
or
in
pop
push
in
in
jb
stos
pop
incb
sub
pusha
push
cmp
cltd
pop
in
or
leave
jmp
out
mov
inc
clc
xlat
std
jb
xorb
adc
fcomps
xor
jl
inc
xor
pop
es
daa
sahf
mov
out
stos
scas
pop
cmc
xchg
popf
sti
xor
movsl
and
add
xor
pop
lahf
dec
xor
jae
xchg
and
push
mov
add
xchg
pop
rclb
repnz
out
mov
xchg
pop
mov
clc
adc
jo
cmp
dec
mov
or
xchg
orb
mov
inc
or
pop
out
int
leave
cwtl
mov
jg
lods
sub
and
das
push
mov
incb
shr
jne
push
adcl
xor
push
rcll
nop
jno
xor
in
nop
or
and
aam
movsl
mov
pushf
mov
aaa
pop
push
mov
pop
outsl
gs
sbb
dec
xchg
sub
cmp
ret
je
push
in
jmp
push
lret
lock
popf
push
arpl
sbb
test
int3
push
pop
pop
cmc
sbb
shrb
adc
dec
inc
imul
dec
or
xchg
repnz
mov
addr16
pushf
jbe
sbb
movsb
sbb
repnz
fwait
scas
xor
pusha
aaa
in
imul
inc
inc
xor
repnz
add
fisttps
stc
jp
mov
scas
faddl
mov
out
loop
cmp
subl
rol
jg
outsb
ret
faddl
adc
push
xor
das
pop
lods
sub
sbbb
push
in
je
loope
sbb
rolb
stc
out
dec
loope
pop
out
adc
js
ret
sub
adc
cmpsb
mov
jmp
add
insl
negl
add
dec
shlb
dec
pop
lret
mov
mov
addl
out
mov
scas
mov
jno
pop
testl
push
lods
sbb
xor
movsl
mull
sahf
sarb
ljmp
mov
aas
xchg
or
loope
pusha
add
push
ds
cmp
popf
xor
pop
xor
data16
lret
jle
nop
out
es
and
rcl
or
or
cli
ljmp
andl
sbb
xchg
jbe
std
mov
pop
xor
or
test
pop
jno
mov
pusha
scas
call
jno
inc
cmp
mov
stos
xor
dec
repz
cmp
mov
and
xchg
iret
lods
int3
jne
xchg
add
mov
bound
dec
pop
gs
or
lea
cs
add
data16
lahf
addr16
mov
mov
lahf
cltd
mov
push
in
sub
xchg
addb
repz
cmp
jne
add
das
xlat
push
add
int
cwtl
adc
inc
mov
test
pcmpgtw
jbe
pushf
pop
in
mov
or
push
mov
scas
xchg
and
cmpb
jno
int
and
mov
lods
filds
test
stos
cltd
jp
sti
xchg
sub
faddl
xor
xor
vcvtss2si
xor
sub
fsubl
scas
jle
cli
jbe
jnp
push
aaa
fpatan
andb
je
repz
inc
sbb
movsl
fmuls
xor
ljmp
cmp
and
lds
push
or
mov
push
inc
pop
call
rcrb
or
aaa
jg
sub
adc
gs
test
out
add
mov
lret
sub
dec
es
fadd
xchg
push
mov
push
xchg
fucomip
shl
sbb
sti
arpl
repz
addr16
in
shl
loopne
ja
mov
popa
mov
dec
push
out
sbb
jns
sbb
jp
dec
rolb
pop
fimull
test
insb
dec
xchg
pop
lret
mov
sbb
or
out
sbb
pop
paddq
pop
hlt
lods
adc
inc
and
mov
push
lcall
push
jecxz
pop
pop
jo
xlat
dec
imul
push
lds
pop
mov
negb
pop
les
rorl
insb
fwait
jbe
or
roll
outsb
int
and
pop
lds
inc
jbe
push
cltd
mov
sub
daa
xor
fmul
inc
mov
inc
jne
mov
sub
imul
mov
stc
add
movsb
jbe
aas
inc
aaa
mov
fisttpll
mov
jg
loopne
xchg
cwtl
je
jno
sub
popa
dec
out
ficomps
dec
lds
push
or
jecxz
push
mov
test
outsl
in
or
stos
xchg
dec
or
mov
inc
in
test
adc
push
jnp
leave
js
and
jp
jle
adc
pop
ljmp
inc
or
dec
daa
add
dec
lcall
xorl
mov
pusha
ficomps
int
orl
jae
shll
iret
add
popa
ret
les
and
push
pusha
lods
xor
add
and
cmc
mov
push
gs
mov
es
scas
mov
cmp
out
inc
add
jne
push
es
xor
or
pop
dec
pop
jg
roll
jne
mov
ret
aad
mov
loop
push
sahf
jo
add
dec
in
sbb
push
inc
inc
mov
out
lds
xor
xor
loop
cmp
inc
adc
stos
popa
loope
inc
daa
scas
adc
shll
ja
push
repz
ret
dec
push
sbb
jmp
loope
adc
stos
in
outsb
movd
loop
int3
test
mov
ret
add
lds
push
mov
arpl
mov
push
das
xchg
daa
mov
cmc
test
repnz
sub
and
ja
mov
sar
fwait
xor
add
sub
xchg
push
xchg
pop
nop
jmp
lea
int
loope
movsl
or
mov
cmpsl
fucomp
es
inc
fsubrs
mov
std
push
mov
sbb
shlb
in
std
outsb
pop
mov
cmp
sbb
sar
mov
bound
xor
inc
pop
jp
iret
jl
cmpsb
mov
out
mov
xchg
repz
mov
lds
dec
cs
and
pusha
mov
adc
clc
or
ret
cmp
mov
test
bound
adcl
dec
shr
aam
ljmp
in
push
fwait
sarl
cmpsl
jg
movsl
notb
lcall
repnz
sbbl
sub
add
or
and
ds
mov
out
sbb
lock
ja
pusha
push
sub
testb
cmp
rcrl
adc
push
mov
imul
lds
test
test
xchg
popf
pop
and
mov
inc
popf
push
shll
or
xchg
or
sahf
jg
lahf
xor
sbb
or
dec
out
mov
jno
push
xor
test
mov
icebp
test
inc
and
loopne
jp
jo
or
push
inc
je
mov
xchg
cmc
call
ror
enter
pop
push
sbb
add
test
insb
dec
mov
iret
xor
mov
mov
sub
imul
into
mov
mov
xchg
popf
or
add
fwait
sub
and
popf
je
addr16
test
sti
or
outsb
dec
push
xchg
sub
mov
xchg
push
mov
movl
bound
lock
jne
movsb
rolb
push
or
cmp
jle
lret
mov
cmp
pop
imul
pop
push
arpl
das
inc
sub
and
arpl
pop
ljmp
push
arpl
cltd
or
pop
push
xchg
add
mov
mov
loope
imul
bound
or
fs
mov
mov
lods
rcl
xchg
push
movsb
int3
sub
repnz
mov
mov
int
adc
xor
push
fucomp
insl
sbb
mov
xor
jae
pop
add
iret
push
in
jg
pop
add
mov
and
in
adc
vpandn
call
xchg
inc
xlat
inc
jge
jns
lea
and
clc
mov
push
mov
fstl
fstpl
mov
adc
loopne
mov
mov
lcall
xchg
jne
in
insl
xchg
cmc
ljmp
mov
in
movsb
repz
cmp
rolb
addl
push
jp
cmc
fs
lahf
dec
pushf
cmpsl
into
out
icebp
mov
lds
mov
ret
jnp
jns
nop
push
xor
dec
loopne
mov
dec
dec
nop
or
and
and
jns
scas
popf
into
das
mov
leave
or
xlat
cmc
mov
sub
jo
and
outsl
push
sbb
cld
sub
aas
and
clc
fsubrl
pushf
pop
xor
adcb
rcrb
jns
test
or
mov
jmp
adc
int
mov
xor
add
xchg
bnd
std
mov
jns
test
push
cltd
inc
push
lea
ja
inc
dec
cmp
das
aaa
loopne
insb
subl
ljmp
dec
pop
jnp
sub
repz
pop
mov
or
dec
jecxz
icebp
lds
dec
mov
jno
out
addr16
jmp
adc
idivb
std
std
pop
jae
adc
mov
or
sarl
xor
pushf
adc
jg
jge
xchg
jnp
push
xor
jg
shlb
mov
fstl
in
andl
mov
lahf
mov
lret
pop
sub
add
fcmovb
push
insb
push
sub
pop
push
ret
sbb
imul
xchg
or
jmp
push
xor
mov
sub
jp
mov
fcom
lods
push
sbb
fsubs
xchg
xchg
hlt
adc
inc
shr
or
sub
fwait
pop
dec
aam
adc
mov
les
push
mov
loope
mov
pop
ret
ds
pushf
sub
jmp
repz
or
xor
cmc
shl
or
sub
xchg
gs
jge
mov
gs
shll
out
pop
cmp
adc
orl
inc
sub
ret
sub
into
je
outsb
and
push
sti
sti
imul
aas
lret
push
shrl
cmp
mov
sbb
out
hlt
in
mov
jg
rcrl
and
cmp
shrl
test
add
nop
sub
outsl
aam
bound
inc
scas
xor
cmpsb
loop
xor
adc
fwait
mov
mov
pop
jae
cs
sarl
mov
cmp
jae
scas
daa
das
fucomp
cmp
mov
mov
cli
xchg
mov
add
jno
inc
xor
ss
ljmp
push
cmp
pop
ret
push
cs
inc
mov
movswl
in
mov
adc
daa
xchg
stos
shl
call
cmc
movsl
push
mov
add
leave
and
lods
enter
mov
pop
add
push
rorl
idivl
cmp
jecxz
inc
sbb
inc
stos
xlat
xchg
repnz
push
jmp
cwtl
rcrb
idiv
dec
jl
movsb
push
mov
add
cld
add
pause
xchg
mov
xor
add
inc
int
xlat
loopne
pop
xchg
cmp
js
cmp
in
xor
jb
or
lods
pushf
pop
jb
mov
mov
popa
cmp
shll
enter
mov
adc
cmp
sub
pushf
and
pop
sub
and
pop
mov
pushf
xor
rorl
mov
dec
jne
sub
aas
dec
cmp
fidivrs
cmp
and
imul
mov
cld
add
loope
mov
mov
mov
lcall
dec
scas
in
inc
es
pop
sub
daa
lods
inc
into
xchg
xor
scas
xor
sbb
dec
lods
gs
ljmp
lds
mov
inc
cmp
js
adc
add
int
popa
shrb
adc
jp
pop
nop
pop
jns
cli
rorb
cmp
jle
cmc
inc
jg
cmp
or
cmp
pop
adc
cmpsl
sbb
push
push
dec
pusha
xor
or
mov
and
mov
push
lret
cmp
or
jg
mov
loopne
xchg
adc
stos
sub
cmpsl
mov
lods
xor
fs
test
daa
mov
sbb
ret
mov
data16
shll
addr16
add
jns
rcrl
aam
adc
bound
jo
inc
push
pop
add
sub
faddl
xor
mov
and
pop
or
add
add
out
insb
js
imull
xchg
xchg
sbb
add
ljmp
mov
jg
shl
imul
inc
add
fucomp
scas
xor
pop
xor
fs
mov
in
dec
cmpsl
les
xor
or
mov
mov
mov
xchg
aam
pop
xor
gs
fmulp
stos
hlt
imul
nop
adc
jne
or
pushf
add
add
pop
out
call
bound
int3
inc
lods
pop
aad
cmc
mov
dec
jg
xchg
in
std
xchg
push
out
repz
jl
and
insb
jl
filds
cli
jb
ljmp
lock
mov
mov
mov
mov
jnp
dec
lods
mov
add
pop
fadds
cmp
or
and
aad
fistpll
lcall
dec
mov
and
decl
inc
inc
xchg
daa
divl
out
sub
inc
cs
aas
sbb
jg
inc
cmp
jge,pn
inc
xor
popa
sarl
mov
add
mov
mov
mov
movsb
add
lods
push
push
shl
aad
pop
and
add
in
hlt
add
out
jle
pop
sub
push
ds
sub
jg
lds
loopne
adc
xchg
dec
sarb
adc
or
cli
jmp
ja
mov
mov
sti
mov
lds
mov
inc
mov
sar
movsl
in
out
or
lret
ret
jecxz
arpl
std
pop
lret
xchg
xchg
fs
or
scas
cmp
lcall
add
pusha
adc
xor
mov
aam
push
insl
mov
mov
and
stos
in
ja
jbe
jbe
sbb
pop
or
shl
xchg
xor
xor
movsb
arpl
cmc
cwtl
insb
clc
xchg
outsl
pop
hlt
and
sbb
or
movsl
daa
ljmp
jmp
adc
movsl
inc
xchg
das
pop
push
ret
mov
stc
xor
ja
push
jl
das
mov
shl
cs
and
fwait
push
ljmp
jle
mov
int3
pop
ror
jno
mov
stc
pop
arpl
mov
in
aaa
sahf
push
testb
and
in
ljmp
xlat
lcall
fldt
adc
scas
sti
adc
lret
cli
jb
imul
jo
imul
sub
divl
fs
adc
adc
imul
mov
pop
fidivs
cmp
adc
cmp
repnz
pop
es
push
mov
lcall
cld
add
mov
jmp
ja
adc
loope
into
hlt
jmp
aam
mov
lea
add
call
sbb
bswap
stos
sbb
insl
insl
lcall
rol
jns
rcr
es
stc
fildll
mov
add
lahf
xchg
pop
jo
jmp
es
jg
xchg
scas
add
add
ret
stos
or
or
nop
ret
out
or
sbb
sbb
es
xor
xchg
pop
jmp
mov
rcll
je
scas
sbb
lods
enter
and
out
push
add
xchg
jb
outsb
dec
leavew
lock
jbe
jae
xorl
clc
in
gs
sbb
cmp
push
adc
test
or
cmp
cli
mov
jne
sahf
arpl
dec
cmp
inc
mov
pop
hlt
xor
inc
scas
mov
jmp
popa
in
iret
arpl
andl
ror
xor
cmp
adc
inc
mov
shlb
lcall
outsb
icebp
mov
push
out
aam
aam
pop
sub
xchg
sbb
mov
push
mov
or
test
scas
cwtl
xor
jae
popa
xor
fwait
insb
out
add
stos
xor
inc
pop
xchg
cmp
cmp
push
inc
xor
adc
iret
mov
movsb
hlt
push
push
inc
lahf
dec
jecxz
popf
sbb
xor
scas
fcoms
loop
lods
cs
mov
fs
xchg
outsb
sub
jmp
lds
mov
fnstenv
and
adc
repnz
jbe
lret
int
push
mov
test
mov
xlat
orb
cld
sub
mov
ficoml
outsl
push
lea
popa
sub
rolb
aam
mov
add
pop
cltd
jecxz
add
lret
test
sub
std
fisubs
rorb
rclb
addr16
mov
loope
lock
mov
rorl
or
mov
mov
insb
fiadds
mov
or
push
inc
and
popf
imull
jns
ja
push
mov
xchg
dec
inc
into
out
lods
fs
cld
and
ljmp
cwtl
add
fwait
and
mov
cli
mov
incb
jno
pop
lea
jns
mov
adc
push
mov
mov
test
cmp
jmp
mov
and
test
aas
mov
inc
inc
in
fwait
mov
data16
dec
add
inc
out
mov
les
fildll
out
add
popf
mov
inc
mov
sub
add
aas
arpl
daa
xchg
xor
sub
lds
shlb
mov
jl
xlat
xchg
dec
arpl
pop
mov
dec
xor
movsl
sub
jmp
in
pop
fnstenv
cmp
sub
jle
dec
jle
mov
jmp
fdivr
sbb
je
outsl
movsl
mov
pop
pop
adc
mov
pop
in
cmpsb
int3
pop
arpl
xchg
add
adc
fbld
mov
and
das
out
addr16
cwtl
pop
xor
lods
lds
inc
xor
call
push
cwtl
dec
inc
in
mov
xlat
fs
test
cmp
jg
jmp
addr16
sbb
je
or
lcall
loope
jne
xorl
clc
cltd
dec
adc
push
cwtl
or
pop
cltd
mov
lahf
lcall
xor
jg
cmpsb
arpl
lea
icebp
in
and
insl
jae
jl
out
pop
int3
xor
pushf
adc
mov
adc
or
pop
shll
or
popa
psrlq
pop
xor
fcomip
jp
jo
push
repz
aas
mov
jae
adc
sbb
andb
int3
pusha
rclb
movsl
xchg
add
push
movsl
dec
or
iret
or
xor
jo
mov
push
xor
mov
test
test
scas
mov
test
sub
cli
mov
call
fdivl
pop
movsb
push
ds
add
arpl
loopne
push
int3
insl
jno
mov
in
add
pop
stos
or
inc
sub
pop
pop
cwtl
or
mov
xchg
jo
dec
sti
stos
pop
iret
loop
dec
sub
mov
pop
push
push
jo
imul
mov
repz
push
bndstx
cmpsl
pop
fiadds
mov
xchg
lock
and
pop
mov
jge
dec
and
push
inc
mov
sub
sbb
sbb
or
scas
aad
popa
mov
cmp
mov
cltd
jp
fwait
adc
stos
dec
jne
dec
out
sbb
cmp
mov
je
dec
out
out
into
std
mov
and
cwtl
mov
fistpll
mov
ficomps
inc
insl
cli
outsl
or
mov
or
add
cmc
inc
sbb
xchg
push
mov
sarb
dec
mov
mov
mov
dec
bound
sbb
add
pusha
push
int3
dec
mov
lret
or
push
adc
dec
ret
jb
iret
je
out
jae
bnd
jo
xor
mov
stc
cli
gs
out
ss
jne
mov
repz
in
mull
aaa
fmul
das
out
jp
lcall
xlat
cld
dec
cmp
push
jnp
mov
hlt
pushf
sbb
out
enter
hlt
lret
sbb
fbstp
adc
iret
fdivs
xor
stos
shrb
xor
fmulp
xor
outsl
shl
pop
pop
sbb
scas
je
adc
loopne
daa
mov
dec
loopne
andl
jnp
daa
daa
les
mov
gs
aam
inc
rclb
sbb
inc
dec
push
push
negl
addr16
jbe
das
xchg
xchg
movsl
into
mov
out
push
ja
rclb
out
clc
or
std
sbb
repnz
xchg
mov
push
jbe
cwtl
xor
cli
es
fcomip
or
ffree
ljmp
pop
inc
mov
nop
dec
lcall
notb
mov
loop
ss
in
jle
jp
or
dec
jae
cmpsl
dec
jecxz
add
jmp
andl
adc
or
sbb
daa
fmull
popa
test
sbb
ja
push
mov
jns
mov
push
loop
pop
push
test
inc
fisttpll
mov
iret
nop
jp
sub
mov
add
push
shl
dec
lods
xchg
mov
shrb
lods
cmpsl
sbb
jae
lcall
adc
bound
sub
cmp
sub
mov
xchg
xchg
pop
push
out
insb
jg
das
mov
mov
jno
xchg
das
enter
jae
mov
jbe
rcrl
and
mov
inc
scas
cltd
mov
cmpsb
in
jp
cli
sbb
add
pop
fadds
fiadds
sub
sub
lea
xbegin
stos
push
mov
outsb
push
mov
ss
out
jno
adc
sub
lcall
cmpb
sti
xchg
bound
fwait
xlat
mov
fbld
shlb
sbb
inc
sbb
cltd
aas
sbb
out
push
divb
dec
jge
pop
cwtl
enter
mov
xor
test
add
sbb
pop
pushf
jns
fcompl
adc
pushw
xchg
sbb
hlt
jl
pop
inc
pop
pop
jnp
xor
sub
in
std
jmp
into
pop
sbb
loop
stos
mov
mov
lmsw
dec
cwtl
leave
and
iret
add
shrl
int3
int
enter
xchg
fs
jl
pop
data16
inc
dec
loope
adc
hlt
add
push
shlb
push
jecxz
movsb
test
and
in
imull
jmp
jl
inc
sbb
adc
add
clc
pop
ficoml
lret
addb
xchg
mov
clc
ret
loope
or
outsb
pop
ss
push
and
mov
hlt
inc
mov
jb
and
mov
inc
mov
cli
ja
mov
xor
sbb
iret
jne
xor
ljmp
insl
mov
and
pop
ss
pop
gs
mov
xchg
xchg
jno
jg
push
inc
hlt
test
clc
or
push
cmpl
push
bound
and
sbb
test
ss
add
loope
outsb
pushf
push
in
inc
mov
mov
outsl
xchg
pop
jmp
push
out
loopne
dec
jl
std
mov
aas
adc
inc
xchg
mov
xchg
and
pop
inc
leave
jne
fldcw
fiadds
sbb
mov
cmp
add
and
push
int
and
sub
loope
xchg
fistpll
mov
das
imul
dec
cmp
or
fbstp
dec
lods
xlat
sub
push
cld
push
fimuls
das
punpcklwd
insb
cmpsl
jmp
dec
addl
bound
adc
out
push
or
fsubrp
pop
dec
cmp
fsubs
jp
in
mov
xchg
jnp
fsubl
aam
adc
dec
jno
insb
dec
fmulp
in
pushf
cmpsl
mov
mov
incb
add
icebp
mov
popf
push
je
int
leave
gs
dec
lret
mov
push
xorl
je
sub
fisttps
add
loope
lods
dec
clc
cmpsb
repnz
add
adcl
in
cmc
sahf
test
pusha
push
aad
out
sbb
or
jns
outsl
sahf
dec
lret
cmp
jle
test
je
jo
imul
ljmp
cmp
fildll
mov
cs
mov
mov
mov
lea
adc
xor
mov
mov
cs
rcr
dec
or
sub
hlt
jbe
mov
in
mov
cli
lahf
dec
push
loope
sti
aad
addb
dec
inc
lcall
add
cmp
inc
movsb
scas
rol
lahf
lret
shl
or
ror
mov
cmp
fdivs
jo
mov
insl
movaps
xor
nop
xor
mov
gs
jecxz
inc
aas
xchg
das
push
add
jle
or
cli
push
pop
fnstcw
mov
add
fldt
decb
nop
sbb
add
xlat
xor
into
and
sbb
jo
mov
cwtl
sub
and
test
sub
add
shlb
add
cltd
add
idivb
or
test
in
adc
mov
fnstsw
clc
nop
or
dec
dec
js
add
sbb
arpl
pushf
pop
xchg
and
xchg
xchg
movsb
popa
call
out
xchg
jno
sbb
dec
push
or
sub
xor
insl
sub
cmc
inc
fcompl
adcl
into
cli
push
add
push
fisttpl
adc
loope
or
imulb
test
mov
out
test
or
fildll
insl
push
lea
in
shll
xchg
push
sbb
out
lret
daa
outsb
and
mov
ret
test
push
inc
aam
sub
xor
outsl
dec
cli
out
in
sbb
insl
stos
mov
inc
xor
loope
mov
dec
stc
out
lods
es
and
jmp
daa
sahf
jae
or
out
les
push
cmc
dec
inc
je
lret
pusha
cmp
inc
lret
adc
addr16
add
push
ret
and
scas
movsb
leave
sub
lret
fnstcw
inc
pop
add
pop
cmp
dec
or
mul
scas
jge
inc
fdecstp
xor
pushf
xchg
lret
lahf
ret
xchg
aad
sti
pop
daa
test
insb
push
mov
pushf
or
mov
xchg
mov
leave
fdivs
shr
cli
fcmovu
les
jecxz
iret
cmp
std
pop
movsb
dec
jg
dec
jl
lock
add
out
stos
pop
jo
dec
mov
bswap
sbb
add
add
stc
mov
sbb
inc
jle
mov
mov
ret
dec
inc
daa
adc
pushf
scas
leave
int
mov
inc
and
pusha
mov
shlb
mov
pop
push
ljmp
pop
roll
jg
sbb
ret
scas
mov
xor
pop
cld
shll
pop
repz
jmp
add
outsl
jecxz
mov
das
cltd
adc
popa
pop
mov
pop
pop
mov
bound
fists
lods
push
push
pop
or
iret
push
dec
mov
xor
adc
pop
add
jmp
ja
sbb
int
jnp
dec
mov
push
pop
mov
lock
cmp
mov
sbb
mov
fldenv
mov
ljmp
mov
aam
cmp
mov
subb
ds
data16
dec
pop
sbbl
jno
inc
insb
fidivs
int
enter
sub
mov
lods
fnstsw
xor
cmpsl
or
arpl
or
icebp
addr16
jl
or
push
fwait
dec
in
cmp
fs
cmc
mov
jmp
das
adc
out
mov
adc
mov
loope
add
cmp
shll
cmpsl
imul
xor
ljmp
fadd
cmp
jg
les
mov
pushf
mov
and
jecxz
jns
adc
loope
icebp
pop
jg
shll
inc
lret
sbb
add
or
in
stc
insl
push
mov
push
and
cmc
gs
cli
mov
sub
call
clc
loopne
nop
jp
dec
inc
fsubrs
dec
mulb
das
add
stos
dec
and
cld
push
mov
sub
xor
mov
mov
push
stos
imul
xor
mov
dec
fwait
aam
psadbw
adc
inc
and
ss
push
xlat
dec
dec
push
dec
push
cmp
faddl
dec
pop
or
adc
and
dec
mov
adc
push
xchg
pop
dec
pop
mov
jae
pop
fisttpl
and
pushf
sub
outsb
push
jbe
jbe
xchg
sahf
sub
fstl
rorl
mov
out
sub
dec
lret
jmp
es
push
test
push
jne
je
int3
sbb
add
sbb
dec
or
arpl
pop
pop
stc
stos
outsl
or
mov
mov
aaa
scas
xor
negb
clc
add
adc
xchg
mov
or
lret
int3
xor
push
test
push
push
jge
dec
mov
dec
in
ret
mov
pop
out
inc
sti
and
xor
imul
fimull
sub
mov
insl
aad
xchg
cwtl
or
in
jle
pushf
pushf
cmpl
pop
jo
mov
push
mov
ret
adc
mov
icebp
cmp
jo
mov
popa
jecxz
test
xchg
sub
fsubs
lea
lcall
divb
int
and
int
cwtl
dec
push
mov
mov
xchg
jb
push
jl
adc
sahf
or
mov
shll
adcl
fmulp
movsl
or
xlat
je
xor
repz
popf
push
stos
int
movq
sarl
cmp
inc
and
arpl
gs
xchg
test
fildll
jmp
sbb
jne
ljmp
sbb
jp
push
out
dec
mov
jle
subl
adc
adc
mov
pop
or
scas
shrl
mov
mov
adc
mov
jno
dec
pop
in
je
pusha
ja
inc
mov
aas
sbb
ret
cmc
inc
mov
xor
mov
mov
and
ljmp
ds
inc
lahf
pusha
arpl
sub
fldenv
imul
les
pop
scas
arpl
pop
and
enter
int
dec
sarl
sahf
cmpb
int3
ja
cmp
xchg
outsl
mov
aad
test
push
mov
cmp
inc
pop
pop
jmp
mov
jl
and
cmp
jge
outsb
push
cmpsl
daa
jp
and
addb
insb
add
jns
jbe
das
stos
sbb
stos
cmpsb
add
cmp
dec
out
mov
jb
int
jmp
aad
xor
cmp
std
jle
dec
fxch
and
fbstp
sti
dec
leave
mov
insl
lods
sub
mov
dec
shr
idivl
stos
mov
jp
fs
in
cmp
dec
adc
sbb
cltd
fsubrs
mov
pop
clc
mov
pusha
sub
or
xor
std
scas
mov
sbb
into
in
fimuls
pop
mov
test
sbb
push
in
ss
fmull
popf
outsl
rclb
or
inc
push
inc
cwtd
stc
out
mov
xchg
jmp
rcl
pop
sub
fidivl
pop
hlt
sub
xchg
out
xchg
ss
in
adc
cmp
push
aas
and
xchg
or
push
push
clc
lods
push
cmpsl
fcompl
add
adc
and
lret
les
pop
loop
adc
jmp
leave
pop
mov
sti
orl
out
lret
mov
pop
addr16
inc
dec
cmpsl
xchg
sbb
mov
cltd
add
cmpsl
jmp
jmp
inc
jge
pop
mov
in
jne
scas
and
cmp
xlat
pushf
pop
and
push
mov
jmp
sar
popf
cmp
scas
xor
push
jle
aad
jmp
xor
fs
jg
sahf
icebp
jne
lods
lods
jg,pt
cwtl
adc
shlb
call
inc
and
popa
js
ret
andb
xchg
sarb
lods
cmpl
dec
dec
xor
das
xchg
or
nop
rolb
lcall
icebp
mov
push
push
movsb
and
sbb
mov
nop
cmp
push
sti
lds
push
mov
push
in
pushf
and
mov
test
popa
cmpsl
push
shll
sar
sbb
add
pop
pop
add
popf
out
popa
sbb
test
pushf
cmpsl
lret
cmc
fistl
negb
leave
xlat
fwait
mov
push
addr16
loop
arpl
popf
fiaddl
cmp
push
mov
pop
dec
push
cmp
xor
cmpsb
out
sbb
push
mov
adc
pop
mov
mov
enter
insb
bound
fwait
es
mov
push
pusha
sbb
mov
pop
dec
pop
fst
int3
mov
adc
add
push
cmp
pop
xor
mov
xor
test
mov
sarb
or
decl
stos
xchg
ja
cld
adc
dec
add
jbe
pop
or
mov
adc
add
outsb
aas
mov
out
fisubl
jb
jg
pop
inc
fcompp
in
cmp
cmc
stos
xchg
mov
pop
mov
and
inc
jg
or
out
leave
test
pop
sub
sbb
jae
fnstcw
stos
lds
mov
lret
out
jno
sub
jecxz
fnstcw
fstps
out
shl
repz
jle
out
push
pop
sbb
add
xor
mov
scas
pop
xor
add
mov
xchg
dec
cmp
je
and
inc
fucomi
add
ss
sbb
pop
pushf
pusha
fldt
sub
pop
or
add
jge
out
add
adc
push
dec
xor
pop
xchg
and
adc
and
rorl
mov
jns
mov
push
dec
dec
mov
pop
push
inc
shr
mov
jns
mov
imul
jp
push
in
xorl
xor
cmp
imul
xchg
dec
movsb
cmp
cmp
dec
std
addb
movsb
jb
adc
cmpsb
cmp
xchg
adc
ljmp
xchg
cs
pop
mov
popf
or
clc
inc
xor
dec
jb
inc
out
or
sub
pop
lock
test
mov
jg
pop
scas
adc
or
push
mov
or
sbb
sahf
out
sbb
xchg
leave
xchg
iret
mov
or
inc
bound
adc
scas
xorl
inc
pushf
or
inc
fcoml
jl
push
jnp
cltd
cli
jns
or
dec
pop
insb
andb
sbb
icebp
sti
sbb
cmpsl
mov
fstpt
inc
jle
lea
mov
add
insl
dec
cmpl
cld
or
daa
mov
loop
daa
mov
idiv
mov
or
xchg
jo
cli
mov
sub
arpl
add
lahf
leave
mov
cmpsl
scas
jno
push
outsl
cmp
mov
push
mov
mov
in
ret
sarl
sbb
mov
shlb
mov
int
pop
xor
sbb
push
jno
popf
mov
movsl
push
sarb
ja
pop
cld
and
movsb
loop
in
in
xor
xchg
pop
push
loop
mov
icebp
lahf
movsb
sub
mov
fstps
mov
or
cld
inc
loop
lea
call
add
sarb
jp
outsl
sahf
lds
ja
test
xchg
dec
mov
std
fdiv
inc
sub
shl
xorb
pop
adc
js
add
and
mov
les
lret
and
aaa
push
neg
ja
mov
mov
xchg
inc
add
fnstenv
setae
xor
jmp
add
iret
jne
dec
push
lods
flds
std
mov
pop
sbb
push
inc
jmp
insl
pop
inc
jns
jle
sahf
xchg
insl
mov
js
shrd
xchg
or
aad
jo
or
int
inc
in
cmovge
outsl
mov
ds
mov
jb
or
lds
or
mov
lahf
out
sub
xor
sbbl
aas
pop
xchg
int
pushl
mov
fwait
stos
iret
je
mov
xor
jecxz
mov
mov
xchg
push
nop
std
or
sub
test
jmp
xor
sbb
jno
fcmovbe
sbb
push
pop
pop
jb
sub
pop
cld
stos
cmpsb
mov
inc
mov
jae
loopne
mov
xchg
mov
cwtl
sub
sbb
jle
pop
ret
cmc
testb
stos
cmpb
dec
pop
popa
cmp
or
outsb
lcall
mov
mov
fcmovb
int3
mov
mov
adc
dec
pop
fmull
ja
sub
xchg
adc
rclb
sahf
gs
in
outsb
icebp
ds
adcb
enter
stos
pop
mov
push
jmp
into
inc
nop
fists
pop
jge
adc
out
dec
bound
sub
mov
fidivrs
sub
xchg
shl
mov
xchg
push
push
mov
pop
jbe
xor
fdivrl
ljmp
dec
jle
lahf
add
push
push
into
fidivs
arpl
or
test
ljmp
push
pop
inc
lds
enter
cld
cmp
jnp
cmp
or
mov
je
aad
inc
mov
scas
fst
add
adc
dec
dec
cs
inc
or
cmpsb
pop
pusha
cmp
shll
adc
addr16
shl
push
pushf
decl
xchg
imul
pop
xor
into
jae
add
fldt
cmp
jp
jmp
mov
xor
mov
push
sub
mov
aam
call
jecxz
loop
push
cwtl
jb
mov
cltd
insb
xor
les
mov
mov
imul
mov
pop
addl
cmp
fisubs
add
in
sbb
mov
es
lea
test
repz
daa
aas
mov
pop
clc
ja
call
jg
addr16
push
inc
arpl
jnp
mov
push
loope
test
dec
mov
lahf
mov
xlat
cli
test
shll
stc
sub
rclb
xchg
mov
mov
out
fisttpl
cld
sahf
int3
cmpl
push
imul
cmpsl
scas
gs
sbb
jge
mov
or
jnp
and
and
push
fisubs
push
mov
test
or
mov
scas
lret
aaa
inc
nop
pusha
cs
push
call
add
add
in
push
jne
daa
push
jl
mov
and
outsb
sub
or
jb
push
mov
add
dec
pop
fnstcw
jae
adc
jae
stc
repz
mov
pop
xchg
and
incl
xchg
out
mov
dec
jae
mov
insb
fnstsw
xchg
outsl
repz
fildll
or
lds
xlat
adc
daa
xor
jmp
pop
lahf
push
imul
ljmp
andl
jecxz
xchg
popf
pop
das
push
sahf
mov
push
gs
cld
inc
sbb
mov
lock
add
sbb
mov
loop
in
repnz
sub
or
fstps
sub
cmpsb
fwait
call
mov
mov
lea
ret
nop
mov
mov
xor
lahf
sub
jb
jmp
ds
inc
cmpb
pop
xchg
xor
test
mov
cmpsl
sbb
xor
jge
fimuls
int3
add
cmp
daa
add
xor
les
adc
idiv
je
repz
push
inc
std
inc
es
lret
ret
mov
in
inc
pushf
cld
jns
xor
fadds
cmp
loopne
mov
andb
xchg
popa
and
pop
cmp
jnp
mov
insb
sub
or
insl
or
sbb
sub
jae
cmp
stos
arpl
lea
mov
subl
jb
idivl
add
loop
in
mov
push
pop
cmpsl
neg
loope
mov
mov
movsl
ret
mov
ljmp
push
xchg
ljmp
cmpsb
fsts
aaa
mov
push
negl
adc
push
adc
aas
xchg
xchg
into
ds
pop
pushf
sbb
fs
and
push
or
inc
fnstsw
sbb
xchg
sbb
addr16
pop
stos
or
ljmp
jp
inc
pop
adc
aaa
movsb
popa
scas
shl
lds
pop
push
sbb
enter
aaa
imul
dec
push
mov
cmpsl
mov
xchg
pop
mov
scas
cmp
mov
push
in
hlt
jo
nop
lock
inc
push
inc
xor
adc
jle
mov
fdivr
int
addr16
push
fildl
std
iret
adcl
inc
aaa
outsb
xchg
cld
popa
dec
mov
add
ljmp
push
pop
or
je
add
sbb
xchg
inc
loopne
addb
js
stos
mov
jne
push
lea
test
jp
pop
sub
cltd
lahf
sbb
mov
test
fsubl
adc
ja
loop
push
lods
push
adc
sbb
push
sbb
sub
push
push
jge
movsl
push
insb
es
jle
into
or
or
pop
add
and
push
xchg
push
int
push
pop
pop
xchg
xchg
and
daa
pushf
dec
and
aaa
sarl
fdivr
xor
ljmp
cmp
pop
mov
aaa
cmp
pop
cmp
jle
test
xchg
sti
pop
mov
loopne
and
cmp
jmp
ret
push
test
dec
add
jnp
int3
roll
ja
outsb
outsl
jg
xchg
xor
pop
out
push
mov
and
and
roll
aad
mov
inc
jne
loope
sub
lds
mulb
add
test
mov
add
inc
rcrb
mov
adc
emms
mov
mov
cwtl
pop
pop
les
gs
sub
jne
aam
lods
roll
leave
pop
nop
cld
sub
push
lods
push
mov
jns
daa
int3
stos
bnd
jp
out
jns
or
push
pop
xchg
sbb
imul
ja
xor
out
mov
fisubs
mov
test
add
ds
cmp
loop
xchg
filds
and
sti
push
add
jl
leave
jecxz
lret
aad
mov
test
sbb
push
pop
cmp
cmp
cli
test
inc
xchg
pop
adc
mov
mov
jle
std
sub
imul
xor
jns
jg
mull
in
lock
mov
pop
push
jecxz
lea
sar
sbb
fstpt
adc
add
sarb
mov
icebp
sbb
leave
or
scas
or
xchg
ss
fsubp
leave
xchg
into
fcomps
lock
jmp
jmp
cmp
cmpsl
cmovl
dec
fs
in
hlt
inc
aas
sahf
cmp
in
mov
aam
out
or
decb
and
sbb
js
or
cwtl
ret
outsl
scas
jmp
sahf
pop
mov
inc
jecxz
push
inc
jno
jl
jae
push
adc
add
xor
mov
dec
xlat
in
clc
cld
out
sbb
push
sti
jbe
inc
cmpsl
movsl
cmp
dec
mov
ja
sub
adc
sbb
add
jnp
jmp
call
mov
and
jo,pt
mov
jg
fs
cmp
jne
les
arpl
stc
push
enter
negl
sahf
int
daa
lret
add
sub
pop
sub
icebp
jo
push
movsb
pop
lea
inc
loop
dec
inc
and
pushf
pusha
in
pop
inc
pop
aaa
jae
sarb
scas
sub
sahf
mov
mov
pop
jnp
sub
xor
sub
iret
aas
in
ja
stos
jno
int3
cwtl
cmp
sti
sti
jns
aaa
jbe
out
loopne
fnstcw
sub
scas
loopne
ret
inc
cmp
addr16
test
mov
rcll
xchg
in
mov
xor
cmpsb
loopne
mov
imulb
cmc
cmp
fcmovnbe
add
mov
js
xchg
add
orb
or
jmp
popf
and
lods
pop
jbe
ss
ds
xor
imul
movsl
mov
outsb
sub
int3
pop
icebp
test
inc
or
and
dec
dec
ficomps
xchg
sti
lahf
popf
nop
pop
mov
mov
or
xor
jmp
mov
movsb
xchg
insl
xchg
mov
adc
push
stos
ficomps
adc
adc
sahf
dec
sub
push
std
dec
adc
pop
jmp
test
sub
mov
loopne
loopne
pop
pop
mov
cmc
jne
addr16
jge
cmp
sub
pop
mov
jmp
sti
rorl
rcrl
dec
mov
pop
jp
or
sub
mulb
sbb
mov
sbb
mov
sbb
das
or
mov
jmp
sbb
push
clc
jl
sbb
jbe
jb
mov
lods
fs
stos
adcb
mov
lods
imul
movsl
mov
xlat
lcall
std
push
mov
inc
mov
gs
daa
stos
js
loopne
cmp
dec
and
sub
out
add
stos
sti
inc
xchg
cld
xchg
push
sbb
push
sbb
cli
pop
pusha
cmp
pop
loop
mov
and
lret
mov
add
mov
adc
xchg
inc
inc
nop
mov
add
sbb
sbb
into
pop
mov
jno
mov
cmpsl
loopne
popf
cmp
fisttps
adc
dec
int3
pop
mov
sub
aam
add
adc
fisubl
xchg
mov
or
jmp
add
sub
imul
dec
inc
clc
lahf
pop
cli
add
push
aad
lea
fbstp
and
inc
add
scas
lret
mov
add
xchg
and
pop
xor
icebp
adc
stos
shrb
mov
stos
pushf
jle
in
dec
or
jmp
dec
xchg
jno
test
aaa
push
mov
mov
out
pop
stc
cli
or
sub
cmp
xor
sbb
out
push
ss
pop
ret
jecxz
je
mov
fcompl
stos
fwait
inc
jl
push
add
cmp
movb
dec
mov
sub
pop
aam
push
jg
fmuls
cwtl
outsl
movsl
cltd
shl
mov
cmp
xor
movsl
cmp
adc
movl
lods
gs
out
outsb
sbb
pop
dec
jmp
sub
pop
stc
and
add
cmc
icebp
mov
push
xchg
add
nop
mov
add
xor
push
inc
adc
xchg
and
sbb
pop
cmp
adc
test
cli
bound
dec
xchg
mov
mov
add
das
cmp
shr
sahf
xor
push
mov
sbb
aas
mov
sahf
xchg
ret
mov
xchg
ja
sub
xchg
mov
fwait
cmpsb
leave
inc
dec
cmp
hlt
aad
and
lahf
pop
imull
imul
aad
mov
inc
in
ja
sub
cmpb
pushf
rcll
inc
cmp
pop
andb
pop
sbb
je
dec
daa
aam
nop
and
and
insb
mov
inc
jle
sub
cmp
lods
adc
adc
sti
pop
sti
push
popa
jns
dec
fimull
mov
in
idivl
stos
adc
sub
pop
hlt
iret
loop
add
shlb
movsb
cmpsl
call
pop
push
icebp
mov
shlb
aam
lods
sbb
scas
mov
mov
pop
stos
cmp
adc
sti
nop
lret
jl
xor
sbb
mov
das
jno
lds
or
cltd
add
daa
pop
mov
scas
xorb
jl
sti
mov
dec
xor
imul
add
frstor
aad
sbb
sahf
hlt
push
loopne
das
and
sub
cmp
stos
add
xor
adc
nop
adc
nop
ja
iret
and
pop
aas
or
sahf
add
mov
iret
icebp
adc
shl
lret
and
cld
enter
insb
mov
xchg
stos
mov
es
dec
test
pop
pop
push
mov
imul
cmpsb
jno
mov
cmp
popf
loop
mov
jnp
jne
out
mov
clc
jecxz,pn
loop
jecxz
ret
bound
jl
jge
in
pop
pop
test
loop
stc
imulb
jecxz
xchg
scas
mov
fsts
xor
imul
cmc
popa
xchg
pop
pop
aas
adc
mov
add
cmp
jns
push
cs
mov
subl
mov
addb
jbe
addr16
inc
int3
xchg
inc
test
gs
lea
pop
jnp
add
mov
sub
aad
ret
outsl
cmp
sarb
jne
mov
or
pop
xchg
bound
jg
out
push
cmp
and
adc
and
dec
push
lds
push
dec
push
fiaddl
add
je
into
pop
add
mov
sub
lret
inc
push
popf
dec
inc
daa
pop
mov
push
in
cmp
xchg
add
jl
inc
rorb
mov
dec
mov
xlat
in
sbb
inc
shll
aaa
push
mov
add
dec
cli
test
dec
sub
cmp
out
nop
push
xchg
mov
add
push
fsubrp
inc
je
lea
shlb
pop
mov
outsl
fidivs
fldt
stos
ljmp
std
insl
sahf
test
int
xchg
je
fdivrl
xor
or
jno
lock
mov
ja
xor
shl
mov
icebp
jg
xchg
pusha
push
scas
push
xor
xor
js
pop
xor
jl
mov
fcoms
aad
sarb
push
jecxz
pop
aas
lods
movsb
sbbb
test
or
loopne
cwtl
xor
outsb
mov
adc
sub
pushf
or
dec
jle
outsb
lret
test
std
adc
test
cmovno
inc
jg
pop
in
push
mov
rol
jbe
xlat
push
cltd
xchg
mov
add
cmp
outsb
sub
shrb
jmp
out
inc
dec
jne
rcrl
xor
mov
pop
inc
sub
arpl
push
jecxz
push
rcll
je
lea
inc
sbb
xchg
popl
sub
insl
fwait
mov
xor
mov
mov
in
jbe
dec
xchg
call
daa
out
jecxz
rorb
or
scas
mov
test
cmpsl
add
outsb
jle
movsb
inc
adc
xorb
test
pop
dec
dec
psrlq
std
lock
pop
pusha
clc
push
jb
xchg
inc
pop
lods
not
or
arpl
data16
out
jecxz
adc
pop
sbb
andb
pop
sub
jle
sar
dec
icebp
les
mov
popf
out
adc
clc
fiaddl
cld
xchg
mov
push
lods
xor
inc
and
sub
out
scas
aas
adc
xor
push
cmp
stc
sub
les
mov
inc
push
mov
dec
jno
fwait
shlb
push
inc
jae
jno
shlb
dec
cmp
jmp
pop
mov
xor
test
or
mov
inc
or
lret
mov
jg
jmp
push
lock
pop
outsb
roll
loope
stc
rclb
fs
adcb
or
fcomip
jge
inc
inc
sub
insl
xor
gs
int
xlat
or
pop
ds
pop
jne
fsts
jns
popf
les
insl
push
jbe
sbb
cmp
push
mov
les
cmp
aam
loop
lods
addr16
cmp
insb
cmpsl
pop
mov
dec
jae
xchg
shr
add
out
mov
ss
lea
les
in
fistps
cs
jno
xor
sub
push
incl
dec
js
fsub
and
adc
dec
add
outsl
divl
adcb
adc
mov
jmp
mov
xor
push
jg
notl
mov
mov
aad
imul
aaa
and
pusha
push
xor
adc
fs
push
jge
insl
pop
inc
jecxz
jl
inc
inc
ss
dec
adc
lea
sbbb
xlat
add
xor
data16
cli
cs
leave
mov
xor
jne
cmpsl
data16
jbe
subb
cmp
inc
mov
pop
ret
mov
ljmp
mov
jecxz
pop
or
push
push
movsl
stos
sbb
and
daa
jmp
je
punpckhbw
sub
pop
addr16
sarb
mov
popf
or
testl
inc
addr16
mov
push
lods
adc
into
cld
xor
cmpsb
inc
repz
xor
jns
sub
ds
sbb
xlat
imul
mov
cmp
pop
cmp
mov
shll
jae
clc
lods
out
sbb
orb
fcoml
sub
iret
orl
xchg
pop
xchg
sbb
xor
out
mov
dec
xor
cld
icebp
sbb
sarl
mov
jae
mov
icebp
pop
mov
std
jae
push
push
insb
sbb
or
mov
mov
fisttps
pop
ja
push
dec
aaa
mov
adc
push
sbb
mov
add
stos
gs
cltd
scas
cwtl
dec
jae
push
jns
fstl
mov
mov
pop
test
rcrl
jne
sbb
cmpsl
hlt
scas
roll
shlb
xchg
sub
stos
or
add
orb
jl
inc
pop
roll
mov
out
dec
jg
and
and
shl
in
mov
add
lahf
pop
pop
jmp
inc
dec
cmp
lea
arpl
inc
gs
mov
push
xor
aad
and
and
dec
jb
lahf
aaa
inc
xchg
xchg
in
inc
mov
dec
or
aam
imul
fdivs
mul
jnp
fwait
mov
dec
rolb
add
and
movsl
test
mov
mov
push
pop
or
sbb
inc
fisttpll
mov
insl
sbb
jns
jle
xor
and
push
rcl
xchg
adc
xchg
and
shlb
cmp
add
jo
add
push
rorl
add
xchg
jbe
push
sahf
idivl
popa
xchg
hlt
and
test
popf
dec
mov
mov
dec
repnz
or
mov
dec
or
adc
jae
xchg
std
sub
sbb
xchg
dec
xchg
add
cs
mov
mov
xor
scas
call
cli
inc
dec
sahf
sarb
lahf
mov
pop
pop
insl
mov
cmp
push
mov
aas
pop
add
fs
das
hlt
mov
xchg
xchg
sbb
or
or
out
pop
and
sub
or
add
lahf
fsubrs
and
sub
daa
dec
jle
popa
bound
jnp
je
hlt
inc
mov
push
ja
xlat
js
xchg
xchg
inc
inc
int
aaa
mov
push
adc
and
and
cmp
inc
push
and
in
je
adc
repz
xchg
pop
js
inc
aaa
inc
das
mov
xor
sub
scas
and
loopne
pop
mov
xchg
sbb
dec
sub
mov
stos
xor
nop
rcrb
shlb
jno
pop
add
xor
aaa
ret
sbb
sbb
test
cmpsb
cltd
ss
icebp
sahf
in
mov
fs
mov
xchg
push
adc
sbb
jae
dec
pop
dec
lods
negl
fdivrs
in
mov
pop
aas
gs
sti
push
cmovne
or
out
out
pushl
ljmp
negb
das
adc
ja
ja
dec
sti
pushf
fdivl
xchg
inc
inc
xchg
push
push
jno
or
clc
mov
pop
cli
pop
pop
xor
decl
lcall
sahf
lcall
in
ss
mov
inc
dec
add
adc
add
es
outsl
aam
or
push
shrb
inc
push
into
jmp
pop
incb
xlat
dec
mov
mov
hlt
lods
mov
test
mov
cmp
xlat
sarl
sub
inc
in
inc
pop
pop
and
clc
stos
jbe,pt
movsl
fnstsw
xor
lret
xor
xchg
xchg
lods
xchg
cld
inc
in
push
fwait
pop
add
or
test
je
jbe
sub
adc
mov
daa
add
mov
pop
cmp
fcmovb
or
mov
sbb
cmp
and
jno
jecxz
lcall
jmp
mov
mov
inc
shlb
mov
negb
dec
aaa
jne
inc
jp
rclb
sti
mov
bound
inc
adc
add
shl
hlt
inc
movsl
fmuls
adc
or
xchg
push
xchg
cmpsb
adc
cmovb
inc
out
aaa
cmc
fsubrs
mov
int3
cmp
push
call
clc
pop
mov
sub
cmpsb
mov
jno
mov
mov
push
mov
jge
dec
int3
fistl
call
cmpsl
sbb
enter
inc
imul
call
enter
jg
int
mov
dec
sbb
cmp
add
cs
fsub
jp
pushf
int
mov
dec
jg
add
out
push
rcrb
add
lock
adc
jle
add
mov
jo
cmp
add
lods
cmpsb
orb
pop
je
aas
arpl
xor
jg
insb
adc
mov
and
fmulp
or
arpl
add
add
cwtl
xchg
cmp
pop
leave
test
pop
dec
jecxz
or
lcall
add
lea
sub
imul
sbb
pop
jb
les
cmp
pop
test
mov
sbb
xchg
cld
pop
in
lock
pop
jmp
inc
push
ss
cs
or
enter
test
scas
inc
das
jp
int3
lock
cmp
push
or
loope
int
cltd
sbb
rorl
movsb
sub
filds
push
out
daa
add
pop
pop
add
leave
pop
out
loopne
jo
pop
cmpl
push
out
popa
and
in
and
popf
mov
lret
add
movsl
add
popa
push
jnp
fsubp
lcall
jecxz
or
sub
cmpsb
sub
popf
cltd
xchg
lods
fldcw
imul
xor
pushf
std
imul
in
bound
sbb
xchg
mov
fs
xor
std
idiv
inc
ja
sub
cld
xor
dec
xchg
fildl
jae
sbb
int3
mov
ret
addr16
cltd
adc
fdivr
stos
shll
pop
and
les
adc
xchg
xchg
push
mov
loop
push
leavew
imul
xor
push
or
icebp
out
adc
sbb
push
push
test
paddsb
cld
and
faddl
push
mov
adc
orl
nop
push
lret
jns
out
das
mov
adc
sahf
cmp
mov
sbb
adc
or
xchg
daa
mov
sub
push
xchg
jecxz
test
sub
mov
in
das
fwait
jmp
aaa
jle
je
cmpsb
push
cmp
in
add
inc
lods
roll
sub
rcrb
cmp
sub
xlat
loopne
xchg
mov
outsl
xor
mov
sti
inc
bound
pop
jle
popf
jle
ss
out
jge
das
bound
enter
test
fdivrl
out
add
ss
test
js
cmp
or
sbb
cld
pop
in
fistpll
push
lods
pop
dec
inc
popa
js
out
test
add
loope
jg
adcl
jl
inc
test
push
mov
jmp
inc
inc
repnz
and
inc
adc
sub
ret
stos
fwait
sub
xchg
xor
jae
lods
pop
imul
aam
inc
adc
dec
shrl
mov
xchg
xlat
jmp
inc
mov
sub
or
cmpsb
in
mov
mov
mov
pop
push
dec
push
cmp
inc
cmpsb
jge
sbb
adc
jbe
jb
movsl
sbb
jb
xchg
ljmp
add
lret
xchg
lea
loop
test
cmp
or
pop
iret
ljmp
cmp
dec
add
loope,pt
rcrl
xor
mov
out
je
aaa
mov
sub
sbb
fcomps
jno
cli
lret
cmp
cs
fidivl
mov
shrb
stos
mov
push
std
jns
mov
and
mov
adcb
lcall
xor
push
pop
pop
cld
popf
and
ret
mov
xchg
push
fsubrs
shlb
adc
push
adc
lods
jl
and
cltd
sbb
jno
jno
sub
ja
xor
lret
and
repz
dec
cli
push
movsb
dec
add
dec
cmpsl
sbb
in
mov
mov
pop
push
in
stos
sahf
repz
iret
or
das
mov
ret
pop
fdivrl
hlt
stos
pop
lods
mov
jo
adc
out
cvtps2pi
xor
cmpsb
rcr
clc
lret
mov
mov
fnstcw
loop
add
outsl
mov
xchg
mov
test
loope
lock
aaa
push
out
mov
adc
sbb
mov
cs
iret
test
movsb
mov
push
adc
mov
mov
jle
aas
xchg
sbb
js
aas
jo
xchg
inc
das
mov
xor
xchg
jge
pushf
xchg
pop
inc
cmp
call
repz
ljmp
lret
imul
xor
in
add
in
xor
or
push
or
imul
jno
lea
push
cmpsl
inc
fnstcw
or
mov
xchg
xor
xlat
jg
and
inc
jno
ret
mov
push
cmp
add
sarl
dec
dec
sub
mov
adc
sub
cmp
out
xchg
lea
ljmp
xchg
inc
fstps
push
jmp
adc
adc
ljmp
or
add
gs
mov
lahf
mov
subl
cs
repz
push
xor
jbe
scas
push
cmpsl
nop
mov
mov
sbb
int3
enter
adc
xchg
popa
mov
les
and
addb
js
jge
pop
mov
sbb
out
rcll
in
xchg
fcomi
pop
loope
shll
aad
inc
xor
sub
imul
mov
shlb
mov
sub
xchg
add
ror
jg
ror
mov
js
sbb
or
mov
test
mulb
inc
insb
nop
sarb
stos
and
sbb
sub
xchg
dec
lock
loope
sub
push
xor
mov
xchg
jl
or
xor
dec
out
cmpsl
leave
lahf
ret
pop
dec
push
cltd
add
xchg
jbe
adcl
leave
fldt
mov
mov
movsb
jl
dec
shrb
or
pop
out
mov
or
ljmp
cmp
and
add
cmpsb
movsb
mov
jbe
or
adc
inc
iret
or
sub
mov
rolb
pop
pop
xor
dec
pop
ss
push
lods
ret
adc
inc
dec
mov
cli
enter
mov
cs
xchg
test
push
pop
mov
push
mov
xor
ljmp
in
pop
xchg
sbb
out
sti
sbb
jg
add
mov
ljmp
inc
jo
fldenv
jmp
pop
pop
jne
pop
subb
out
arpl
add
cmc
fwait
ret
mov
fwait
pop
inc
xchg
pop
push
imul
rcll
add
ret
pop
sub
pop
mulb
jae
inc
das
movsl
mov
lret
inc
inc
into
imul
sub
xchg
testl
and
cmp
sbb
pop
push
ds
bound
pop
aaa
hlt
loopne
in
dec
pop
das
leave
jmp
xor
add
lds
addr16
xchg
mov
pop
clc
mov
pop
xchg
dec
xchg
pop
push
inc
fsubrl
movsl
flds
cmp
icebp
lahf
pop
sub
add
scas
jnp
xor
push
test
adc
insb
mov
insb
mov
insl
jb
addl
push
roll
daa
and
iret
sbb
mov
sti
push
sub
sbb
cli
leave
lcall
pop
inc
mov
icebp
mov
pop
xchg
dec
outsl
cmpl
lods
inc
fdivr
mov
sub
cmp
aam
jns
inc
pop
mov
pop
xchg
stos
cmpsl
cmp
nop
mov
je
xchg
clc
lods
cs
out
add
lret
imul
mov
mov
jae
call
cmpb
les
sub
push
jmp
xchg
inc
icebp
ss
cmp
in
add
sub
jb
cmp
cmp
xchg
outsb
sbb
in
add
or
outsb
or
js
xor
dec
ljmp
xchg
mov
daa
inc
or
lret
pop
pop
xchg
jmp
fsubrl
or
sbb
into
dec
or
test
mov
cmp
aas
mov
jge
pop
testl
cmc
ss
dec
xorb
mov
insl
imull
cmpsb
aas
out
scas
xchg
mov
jge
insl
dec
sbb
fdivp
leave
sbb
mov
mov
adc
cmc
nop
into
in
cmp
fs
or
inc
les
mov
mov
inc
movsb
arpl
fmul
les
fcoml
in
movb
push
stc
outsl
sub
js
add
xchg
pop
test
sub
or
es
push
and
mov
stos
mov
pop
inc
and
ret
cli
mov
push
mov
ljmp
loopne
xchg
test
in
push
mov
cmp
pop
xor
popf
jecxz
push
mov
add
sbb
loopne
mov
adc
xchg
daa
scas
xor
mov
mov
loope
add
addb
mov
mov
and
shl
inc
hlt
mov
push
lds
jp
pop
xchg
sbb
jmp
inc
insl
adc
les
xchg
cmp
push
jl
rolb
aam
outsb
or
jbe
lds
out
andb
insb
dec
stos
mov
stc
sbb
cmpsb
mov
jo
push
mov
jecxz
or
in
inc
jbe
mov
dec
cmpsl
inc
pusha
lds
and
aam
sbb
or
jp
jl
movsb
test
pop
adc
add
cmc
xchg
fldt
loope
jmp
xor
mov
xchg
or
jg
or
ret
les
enter
mov
das
or
jl
les
inc
test
and
xor
jge
jle
inc
shrb
fnsave
mov
or
lea
pop
lret
insb
pop
lea
and
stos
mov
notl
lods
sub
stos
aaa
or
gs
push
rorl
imul
xor
sbb
sub
jmp
push
dec
jmp
xor
lret
shl
mov
sub
lcall
sbb
ret
sub
popf
push
mov
sub
mov
rcll
gs
and
pop
rcll
xchg
xchg
das
test
int
xlat
or
xchg
fucompp
aaa
rorb
adc
lock
jmp
jmpw
cs
mov
idivb
notb
push
arpl
sbb
inc
dec
sahf
mov
enter
xor
pop
adc
jl
mov
bound
lods
mov
rolb
mov
sub
dec
jp
outsb
sbb
int
mov
jl
pop
mov
jbe
push
cmc
pop
int3
jge
and
xchg
sub
cli
sub
inc
shrb
out
hlt
mov
fs
cmc
push
repz
xlat
xor
mov
xchg
inc
mov
xchg
jne
cmpsl
js
subl
push
xchg
jbe
bound
xor
daa
jb
or
pop
popa
rclb
mov
inc
adc
sub
enter
pop
je
xchg
inc
dec
xchg
add
dec
cmpsb
jb
jle
jg
into
aaa
or
jp
fstp
jnp
add
out
out
nop
add
xor
mov
stos
stos
mov
repnz
repnz
ja
lock
lret
lods
lcall
xor
dec
mov
jbe
rorl
rclb
jno
test
mov
pop
std
pushf
lret
icebp
push
leave
sbb
movsl
mov
or
aas
xor
add
movb
stc
push
push
pop
lds
or
ljmp
lret
mov
or
push
repnz
add
rcrl
sbb
jnp
ret
shl
cwtl
mov
xchg
sbb
or
sub
adc
jno
mov
xor
cltd
mov
sbb
mov
leave
pop
ficoms
sbb
fwait
data16
jl
aas
scas
push
test
adc
adc
dec
jl
xchg
test
cmpsl
out
and
or
add
add
mov
aas
pop
adc
shlb
jae
add
arpl
sbb
fisttps
mov
test
mov
and
ds
dec
xchg
jle
sub
clc
jp
jmp
adc
pop
inc
xchg
cmp
repz
adc
je
push
popf
icebp
loope
xchg
enter
or
jmp
sahf
sarl
inc
aas
call
and
rolb
or
cltd
lcall
sbb
sahf
jecxz
dec
ret
int3
xor
pop
push
in
pop
mull
out
imul
cltd
xor
cltd
insb
cwtl
insl
jp
int
adc
stos
push
xchg
push
jp
insb
add
shl
xor
xlat
xchg
mov
sbb
sbb
pop
out
inc
push
out
bound
insl
leave
sub
xchg
mov
mov
iret
test
sub
mov
rclb
add
sub
mov
in
dec
jecxz
pop
stos
mov
out
mov
mov
ds
sbb
dec
testb
div
cmpsl
inc
pop
pop
js
out
fmuls
add
pushf
in
int3
push
outsb
mov
sbb
mov
mov
push
inc
scas
shrl
push
jbe
sbb
repz
push
xchg
nop
insl
lahf
aaa
push
pop
fwait
jp
or
pop
jne
mov
popl
shll
cmpsl
pushf
pop
push
dec
mov
fsubrl
jecxz
lock
test
xchg
mov
out
lods
dec
dec
jo
adc
jle
jle
fdivr
fmul
push
adc
jne
dec
fwait
mov
sti
outsl
mov
xor
movsl
stc
xor
cmp
and
je
fildl
add
leave
adc
in
and
add
adcl
leave
ds
pop
nop
dec
insb
xchg
xor
mov
add
sahf
repz
leave
push
push
mov
jo
iret
scas
ja
sbb
or
movl
and
mov
aam
testb
mov
subb
xchg
dec
leave
jo
mov
and
ja
nop
sub
pop
xor
or
pop
xchg
dec
ficoms
push
lds
stc
aas
dec
push
pop
push
push
push
fnstsw
push
leave
pusha
nop
adc
and
mov
or
xchg
leave
xchg
xchg
les
jnp
arpl
lods
jecxz
cltd
stos
pop
jecxz
xchg
test
hlt
loopne
pop
xor
pop
in
dec
mov
dec
mov
jle
xchg
cmp
add
dec
mov
jo
mov
lods
dec
shrb
mov
xchg
sub
inc
sbb
popa
out
std
negb
jae
mov
push
std
sbb
sbb
int
std
or
sbbb
jnp
jnp
sub
sub
xchg
cli
sbb
outsb
pop
pop
xlat
flds
ja
sub
test
push
aam
fcoml
shl
hlt
and
addr16
insb
arpl
std
fildl
mov
push
mov
jl
insb
dec
mov
mov
jb
scas
sbb
fwait
call
dec
imul
int
and
add
mov
push
mov
push
adc
insb
push
sub
rcl
cmpsl
stos
repnz
jmp
jo
outsl
sub
jecxz
sbb
adc
jg
lcall
adc
fadds
xlat
sti
stos
or
push
lea
mov
sbbl
add
aas
nop
xchg
xlat
fwait
mov
cmp
jnp
aam
sub
scas
in
add
mov
decl
mov
les
notb
imul
loop
pop
pop
scas
lds
sub
ret
mov
mov
es
sbb
mov
fsubrs
sbb
sub
lret
movsb
idivl
lods
push
js
mov
and
mov
push
mov
cld
pop
jge
flds
scas
lea
fldenv
popa
pop
or
xor
xor
jb
fimull
rorl
in
lret
add
sub
imul
insb
push
imul
out
sub
ljmp
dec
cmp
add
cli
js
ljmp
xchg
xor
fwait
sub
ret
jns
loope
and
push
iret
daa
imul
out
sub
inc
mov
xchg
pop
mov
repnz
push
jg
adc
jo
daa
add
dec
aam
data16
dec
mov
pop
mov
mov
mov
mov
movsl
fcomip
sti
es
dec
lahf
push
shll
xlat
inc
in
loopne
dec
repnz
stos
xchg
and
mov
mov
addr16
adc
scas
sbb
mov
and
enter
xchg
xor
mov
cli
ret
mov
xchg
in
into
cmp
xor
xlat
loopne
push
mov
ja
cmp
push
hlt
inc
mov
out
inc
insb
or
ret
lods
pop
jbe
cs
xor
ljmp
arpl
inc
das
scas
mov
repnz
mov
iret
testl
jge
stos
jae
xchg
mov
mov
xor
and
cmp
inc
aas
es
cmp
imull
in
pushf
sbb
pop
bound
push
push
sbb
repz
mov
xor
enter
mov
jno
cmp
jmp
mov
cmp
jle
pop
jecxz
scas
and
sub
and
gs
aad
xor
mov
lahf
cmp
iret
ffree
cmp
test
imul
and
xorl
add
test
or
out
ljmp
daa
cs
xor
xor
sbb
std
push
imul
xchg
cmpsl
ds
or
xchg
inc
dec
and
mov
jns
push
xchg
mov
imul
mov
cmp
add
movsl
pop
xor
dec
adc
decl
dec
out
enter
test
xchg
xchg
jns
mov
xor
stc
clc
bnd
jb
ret
xchg
cltd
mov
add
not
es
clc
jg
shll
adc
out
xor
and
out
mov
or
push
adc
into
cmp
call
cli
into
ret
cwtl
sbb
mov
sub
movsb
stc
fwait
in
pop
xchg
jecxz
mov
adc
fisubl
gs
call
mov
orl
dec
jne
nop
scas
inc
stos
mov
sbb
movsb
push
dec
or
ror
inc
fdivrs
bound
pop
repnz
adc
add
in
sub
cmovno
pop
push
adc
mov
xor
pop
sbb
inc
cmp
fcoms
or
loop
loop
xchg
adc
in
movsl
sub
daa
push
fs
adc
pop
mov
xor
xchg
cmpsl
test
xchg
pop
push
pop
mov
or
dec
lea
scas
inc
mov
add
pop
mov
jnp
js
add
pop
dec
push
loop
div
pushf
push
outsl
mov
dec
outsl
push
bound
cmc
int3
or
sub
imul
inc
daa
adc
pop
clc
int
sbbb
das
jp
insl
dec
mov
stos
jp
out
les
xor
es
sbb
imul
inc
rcll
cmp
cmpsl
push
std
push
and
pop
js
call
lahf
movsb
jge
add
and
cld
push
sarl
cltd
inc
add
adc
adc
mov
inc
cs
movsl
movsl
cmpsl
cmpsl
sarb
and
std
nop
push
xchg
outsl
and
pop
add
fldt
xor
and
iret
fisubs
mov
or
sbb
add
lcall
arpl
insb
inc
xor
xchg
mov
lock
jecxz
mov
cwtl
jns
mov
mov
mov
pop
push
data16
push
ds
nop
femms
sbb
sbb
mov
dec
sub
outsb
dec
jecxz
xor
cmp
repz
cmpsb
loopne
aad
mov
xchg
mov
cmp
xor
bound
xlat
daa
das
ss
add
sahf
cld
sbb
je
sti
lret
notl
push
pop
iret
je
stc
je
shll
hlt
inc
push
aaa
aaa
subl
jns
cmp
in
stc
xchg
outsl
dec
sbb
or
xor
inc
shrl
or
jmp
scas
cmp
add
jmp
nop
inc
xchg
aad
push
cld
jg
enter
cmp
sub
shll
and
jae
sub
adc
sbb
cmp
out
mov
mov
mov
and
clc
pop
arpl
orb
mov
inc
out
sbb
jl
fisttpl
sbb
addr16
shll
or
call
dec
lods
out
and
cmpsl
sub
cwtl
adc
lds
jecxz
adc
add
xchg
dec
lea
mov
or
mov
xchg
and
es
ja
push
push
stos
or
mov
pop
xor
stos
std
cs
into
or
outsl
cmc
aaa
addl
xchg
sbb
call
pop
add
rcl
cmp
or
pop
cmp
pop
jle
add
in
cmp
jno
push
xor
jl
out
cmpsb
insb
ljmp
ret
xor
cs
push
jmp
std
sgdtl
jae
mov
inc
es
adc
cli
lods
jge
adc
push
cld
rorb
cltd
outsl
sete
fsubl
mov
scas
iret
pop
mov
jle
lods
sub
pop
xchg
ss
enter
xchg
add
mov
pop
movsb
out
xchg
jo
out
or
pushf
scas
cltd
cwtl
in
ljmp
and
stos
dec
push
mov
inc
sub
aas
imul
insb
cli
in
jns
ja
xor
adc
xchg
test
int3
jge
test
test
inc
jo
lea
ljmp
pop
aad
and
bound
inc
mov
mov
xchg
jns
push
popf
inc
mov
loopne
cli
das
jp
pop
add
rolb
dec
hlt
dec
mov
cmpsl
popa
inc
pop
in
jae
push
lods
inc
das
mov
aaa
loope
daa
pop
loope
push
in
adc
sbb
sbb
mov
dec
in
dec
in
inc
dec
es
in
pop
and
test
sub
xlat
adcl
imul
addr16
dec
jp
pusha
leave
xchg
iret
sahf
fdivs
aam
pop
lret
and
addl
sub
shrb
xchg
fdivrl
mov
popa
popa
pop
fwait
pop
dec
pop
imul
nop
out
sarl
push
pop
and
pop
inc
inc
adcb
xchg
adc
bound
daa
cmpsl
add
cmp
xor
dec
mov
out
cmp
add
fwait
arpl
lea
fsubrl
int
xor
clc
pop
cmpb
cld
push
cmp
inc
aaa
cwtl
fs
fnsave
clc
fistl
or
imul
fists
adc
xchg
lods
and
add
js
jecxz
testl
rcl
xor
mov
cmp
adc
inc
push
push
ljmp
sub
out
jne
or
shl
jne
int3
imulb
sti
dec
push
lcall
fsubs
nop
mov
pop
mov
std
xor
outsb
cmp
xor
shlb
ficoms
adc
or
nop
add
or
insb
repz
adc
xchg
jmp
mov
mov
je
xchg
dec
inc
sbb
cwtl
pop
stos
in
push
loop
aas
add
dec
pop
in
ret
aad
push
pop
loop,pt
jne
idivb
or
jmp
xor
sbb
into
xchg
pop
test
test
sbb
mov
insl
cltd
sbb
sbb
inc
mov
cmp
pushw
adc
pop
sbb
punpckldq
mov
and
push
jmp
push
add
xor
sub
mov
je
dec
mov
xchg
aaa
push
xchg
cmp
dec
jnp
fwait
js
jmp
out
mov
sbb
popa
sub
in
out
in
in
xchg
mov
mov
xor
push
pop
adc
rcrb
das
je
repnz
mov
ret
fwait
pandn
add
cld
pop
stos
pop
mov
sub
jns
fistl
jae
adc
ret
aas
lds
mov
adc
add
iret
sub
fstl
push
fildll
mov
and
pop
xor
shll
call
imul
adcb
dec
lods
jne
loop
in
movsb
add
cs
jg
jmp
das
mov
mov
cmp
sub
imul
cmpsl
fcoml
movsl
jns
cld
shr
cltd
jmp
add
mov
inc
test
roll
in
inc
mov
push
pop
jns
filds
push
dec
mov
push
sarb
stos
mov
aam
xchg
shl
stc
dec
in
imul
test
xchg
in
mov
or
test
pop
dec
mov
js
and
jo
insl
push
ja
mov
mov
aad
mov
pop
sbb
iret
jo
gs
stc
cs
push
arpl
and
pop
mov
sahf
xor
cli
pop
repnz
push
jns
leave
mov
leave
add
mov
cli
pop
icebp
pop
xchg
nop
mov
ja
push
lods
mov
inc
mov
je
jecxz
notl
xchg
dec
add
outsl
popa
sbb
or
lds
jno
ret
call
fdivl
xor
mov
inc
roll
adc
xchg
sub
repnz
in
lock
xchg
push
push
enter
xchg
jns
ret
fs
pop
or
and
lret
pop
ret
jl
out
push
sub
mov
dec
insl
adc
cmp
xchg
cmc
pop
jl
data16
leave
scas
jae
add
and
jae
sub
nop
rclb
or
les
testb
xchg
mov
call
and
fcom
cmpl
add
out
and
lea
mov
xchg
sbb
mov
xchg
addb
jnp
jno
push
cmp
idivb
sbb
sub
movsb
or
imul
dec
push
sub
loop
pop
mov
pop
xor
clc
sahf
call
data16
push
jne
sub
or
mov
add
adc
xchg
sahf
push
into
lds
je
jmp
aam
push
pop
mov
mov
outsb
movsl
jge
cmp
mov
mov
jo
mov
pop
dec
in
add
and
mov
cmp
pop
mov
in
push
enter
xlat
pop
roll
jne
jnp
adc
add
repz
int3
stos
mov
cmpsb
xor
popa
and
leave
pop
dec
mov
rclb
jns
stc
pop
jmp
sub
dec
movsl
in
fisubl
and
test
cli
rclb
out
mov
push
gs
add
or
popf
mov
sarl
icebp
dec
xlat
js
ret
loope
adcb
pop
aaa
mov
js
cmpsb
and
cmp
jg
or
int3
push
add
imul
adc
jmp
push
ljmp
pop
js
add
roll
inc
or
aam
lods
or
out
jl
lock
cmc
mulb
femms
test
es
lret
dec
push
lahf
add
push
test
in
cltd
cwtl
pop
inc
xor
mov
pop
shr
push
lret
inc
and
pop
push
shrl
ss
sbb
jp
rclb
and
mov
lahf
dec
lret
out
cmp
repz
adc
fdivrs
hlt
adc
fildl
lock
das
mov
loopne
mov
fadds
dec
roll
pop
mov
and
dec
filds
xchg
cmc
jbe
hlt
sbb
out
lret
and
popa
push
xor
mov
insl
push
mov
sahf
lock
sbb
jnp
sub
inc
jg
ljmp
cmpsl
add
flds
cwtl
test
das
into
add
inc
cmp
dec
and
lahf
fstps
or
mov
push
sbb
mov
sbb
cmp
cli
sahf
pop
addb
jp
mov
lds
or
inc
cmp
lret
mov
gs
lods
mov
in
mov
repnz
jnp
insb
or
flds
sub
pop
and
andl
stos
inc
inc
push
loope
lcall
out
shlb
movsl
test
mov
push
jecxz
into
jno
sbb
loope
mov
movsl
push
out
repz
pop
in
adc
jo
add
push
pop
cltd
xchg
and
xchg
sub
fs
xor
jne
int3
call
cwtl
pop
dec
sbb
adc
cld
loope
inc
cmp
pop
mov
pusha
and
mov
or
push
js
cli
hlt
ja
add
aad
daa
dec
rol
adc
lods
cmpsl
push
mov
xorl
je
push
aas
adc
add
sub
int3
and
mov
in
aad
and
mov
mov
aas
mov
fadds
push
pusha
ficoml
jbe
xor
fidivl
mov
ss
pop
mov
inc
mov
sbb
popf
mov
push
cltd
xchg
fcmove
andl
sbb
mov
xchg
push
cmp
hlt
lret
inc
adc
xchg
push
mov
pop
mov
xor
orb
mov
mov
mov
add
cltd
cmc
jo
outsl
dec
mov
add
jne
je
shrl
pop
and
das
cmpl
xor
xor
ficompl
test
cwtl
shrl
inc
jno
pushf
adc
sub
outsl
addr16
outsb
shlb
push
mov
pop
push
jne
pop
mov
adc
cltd
popf
jg
test
sbb
adcl
cmp
insb
icebp
dec
ret
sbb
xlat
repz
pop
sahf
leave
pop
das
mov
cwtl
lock
or
cmp
add
pop
push
mov
add
push
adc
mov
mov
movsb
xchg
sbb
insb
and
cmc
rcr
jo
or
or
push
insb
mov
sahf
decb
lahf
xchg
dec
js
sub
pop
inc
and
sbb
addr16
aas
xor
mov
adc
stc
js
popa
out
outsb
dec
das
adc
dec
jl
enter
inc
fstps
je
loopne
dec
test
shll
mov
addb
mov
lock
push
and
sub
mov
pusha
mov
or
fiaddl
push
subl
lods
inc
sbb
cmp
inc
and
or
aad
xchg
jge
xchg
jmp
je
add
in
xor
insl
in
adc
push
stc
loope
push
push
xchg
sub
daa
and
xchg
rcrb
outsl
aam
jne
leave
idivb
add
or
jp
sahf
test
ljmp
mov
mov
pop
or
insb
jecxz
or
jp
cmpl
cmp
jmp
cltd
js
mov
movsb
xchg
jne
jns
imul
popf
repz
cmp
es
dec
adc
xor
jne
jmp
inc
sbb
jl
xchg
subb
mov
test
add
iret
int3
sahf
aas
in
mov
loopne
mov
and
dec
lret
clc
and
mov
cltd
cmp
mov
mov
pop
aaa
in
fwait
movsb
mov
cmpsb
mov
pop
mov
xchg
aad
jle
xorb
jae
out
nop
dec
inc
xor
and
jo
inc
loopne
clc
mov
dec
xchg
fcmovne
std
es
or
sbb
and
in
push
pop
clc
mov
lds
mov
add
cwtl
enter
dec
fiaddl
out
adc
enter
gs
adc
cmp
fnstenv
stos
sbb
rcll
lods
push
sub
movsl
movsl
clc
mov
cmp
push
xchg
aaa
lock
popf
gs
out
xchg
cmpsb
and
and
mov
fdivrl
add
test
mov
roll
jle
lret
rorb
incl
sti
int
ret
adc
or
xchg
push
mov
jge
fnstsw
pop
jnp
add
pop
mov
mov
fldl
clc
pop
dec
popa
mov
lea
aam
push
data16
adc
gs
aaa
mov
xchg
adc
adc
stos
icebp
sub
cld
cwtl
push
cwtl
sub
sbb
addb
repz
mov
cmp
xchg
out
movsl
push
or
xchg
les
repnz
imul
xchg
mov
cmp
scas
mov
inc
adc
or
aad
aam
inc
aam
mov
dec
cmp
xlat
subb
or
mov
mov
push
push
and
out
jno
icebp
sub
dec
mov
rcrl
inc
mov
int3
notl
cmp
and
add
mov
jno
add
ret
cmc
iret
xchg
inc
pop
mov
dec
dec
push
jg
xor
nop
pop
or
lret
in
xchg
jne
sti
lcall
jl
into
add
mov
cmp
inc
add
dec
outsl
adc
adc
sbb
out
jmp
clc
mov
add
push
pop
xchg
push
adc
mov
jo
cmp
femms
sarb
xchg
inc
xchg
cmpsb
leave
xchg
les
dec
inc
in
pop
pop
cmc
leave
sbb
sbb
enter
hlt
push
je
cmp
xor
aas
add
mov
mov
inc
mov
jmp
shl
xor
inc
arpl
and
mov
jbe
addr16
xor
adc
loop
jp
xchg
sbb
rcl
into
mov
je
mov
cli
sbb
lret
in
mov
inc
dec
push
inc
dec
or
xor
imul
shll
leave
push
mov
loop
adc
jle
ds
mov
sub
mov
jbe
jl
inc
aas
xor
pop
int
icebp
push
das
cmpsl
insl
cmpsl
jno
jno
daa
mov
icebp
pop
insl
lods
dec
leave
loope
xchg
add
fs
popa
xor
inc
inc
push
mov
sbbl
pushf
mov
jmp
jne
push
dec
mov
popf
int3
push
test
cmp
ret
aaa
xchg
mov
pop
sbb
fisttpl
and
test
add
in
cmp
addr16
sahf
lods
mov
jae
pop
sbb
jle
out
pop
ret
push
loopw
inc
mov
mov
inc
add
enter
bound
cs
in
push
xlat
je
cli
add
rorl
sub
lock
mov
sbbb
inc
jg
push
cmp
mov
cld
mov
cmp
stos
adc
fucomi
xor
cmpb
pop
jnp
cmc
xor
in
sbb
mov
in
pop
jecxz
xchg
push
shlb
jno
test
inc
cli
jae
jmp
push
aaa
dec
out
scas
mov
movsb
lahf
lds
fisubrl
inc
or
push
movsl
aaa
pop
addr16
movsl
push
sti
mov
loopne
mov
cmp
adc
mov
fisttpll
out
mov
cltd
out
add
push
add
xchg
jmp
lar
jl
push
movsl
addl
adc
lods
fstp
stos
dec
cmc
fsubrp
sub
mov
fisubrl
ret
mov
push
imul
inc
test
cmp
fists
scas
push
mov
in
shlb
adc
pop
aas
mov
dec
aas
dec
sti
dec
adc
cmp
mov
xchg
mov
mov
sub
mov
jmp
loope
mov
es
dec
xchg
sti
sbb
lret
jo
out
xor
jmp
call
push
jnp
mov
fiaddl
cmpsl
xor
mov
pop
dec
dec
inc
push
out
iret
and
mov
sti
jns
sbb
cli
sti
push
addl
es
lea
mov
pop
sub
jnp
fstl
das
dec
or
lds
push
dec
xchg
xchg
rcrb
aam
and
jle
or
and
jne
or
jp
jecxz
dec
xchg
push
out
insb
lock
ja
in
movsl
out
movsb
sub
sub
jmp
pusha
movsl
ret
test
dec
lcall
mov
add
adc
leave
stc
inc
add
push
dec
inc
push
jne
outsl
mov
xchg
cmp
out
adc
rcll
ret
pop
cld
sub
mov
in
data16
imull
cmp
bound
fcomip
fidivrs
xchg
add
push
push
dec
bound
incl
xchg
into
shlb
xlat
loope
fcomps
sbb
pop
loope
fbld
mov
mov
and
jb
sbb
pop
add
imul
adc
xchg
mov
test
insb
ret
loop
push
icebp
jb
push
test
push
ror
sbb
call
test
jo
aas
pop
sahf
sahf
inc
cmp
clc
pop
jb
loop
xor
test
jg
out
xchg
pop
stc
inc
cmpsl
and
out
bound
jbe
dec
data16
fsubs
xchg
mov
fldenv
rclb
lds
xchg
mov
mov
xor
jp
out
out
sub
xor
mov
or
dec
and
stc
inc
adc
and
push
xor
popf
xor
add
loopne
imul
vpsllw
leave
add
cmpsb
stc
pop
ss
mov
and
xchg
out
and
jbe
cmp
mov
cmpsl
jp
inc
inc
outsl
sub
out
stos
je
andb
mov
rcrb
inc
mov
test
sub
jle
repz
sbb
and
imul
dec
call
test
hlt
push
stc
mov
shll
dec
and
xchg
xchg
push
or
fadds
and
sub
pop
sub
fs
pop
ds
popf
adc
std
pop
mov
cmp
sbb
es
inc
lahf
push
jg
mov
sbb
into
add
lock
adc
in
popa
sbbb
pop
xorl
mov
pop
mov
aaa
or
js
mov
xchg
mov
dec
and
jbe
sub
out
inc
pop
pushf
cmpsl
mov
and
or
jmp
and
or
sub
loope
fiadds
pop
pop
sbb
test
jmp
pop
cwtl
filds
pop
push
or
pop
ret
lret
imul
or
jmp
int3
jecxz
xor
movsb
daa
cwtl
sub
push
cmc
ja
lcall
aas
xor
movsb
cmp
jge
ret
arpl
dec
in
stc
cwtl
in
and
sti
pop
sub
push
mov
lods
in
cli
stos
jp
imul
push
push
sbb
stos
mov
push
stc
pop
xchg
dec
arpl
pop
mov
xchg
scas
fld1
or
ss
roll
andb
fnstcw
jne
arpl
cli
add
lds
cld
into
xor
dec
add
jg
mov
dec
jns
xor
stc
loope
adc
fwait
mov
jb
sbb
pop
xlat
pop
call
mov
inc
mov
andl
add
mov
stos
sub
mov
push
jmp
sbb
sbb
int3
std
push
int
nop
pop
daa
inc
lahf
aad
push
aaa
adc
popf
movsl
aaa
in
pop
or
pop
sbb
shrl
fcomps
pop
push
mov
fwait
push
jbe
inc
loope
sub
jp
inc
pop
mov
cmp
ficompl
pop
fldt
push
repz
mov
dec
jo,pn
mov
mov
xor
pushf
mov
sbb
mov
or
iret
int3
es
fcomps
sbbl
sbb
addl
in
add
dec
xchg
stos
mov
ja
jb
aas
mov
jno
outsb
les
cmp
pop
xchg
mov
xchg
push
jbe
ret
out
lcall
insl
loopne
pop
mov
jns
mov
jno
ja
stos
cmp
xor
in
push
fadds
add
cmpsl
jns
sbb
adc
jns
scas
fbld
and
mov
leave
imul
lds
ja
cltd
xchg
adc
or
jecxz
daa
cwtl
stos
cli
jge,pt
out
test
push
jo
push
xchg
pop
mov
out
lock
sub
js
xchg
mov
jmp
adc
pop
dec
insl
bts
mov
jl
cmp
imull
jns
js
test
push
xor
je
fildll
arpl
inc
inc
dec
fbld
call
mov
pop
jno
cmp
mov
xchg
push
aam
sbb
mov
pop
mov
outsb
add
popa
add
cmp
xchg
lea
pop
pop
fsts
adc
pusha
pop
push
dec
cmpsb
stos
push
dec
and
sbb
hlt
fwait
or
push
movsb
loope
out
inc
leave
insl
cli
jg
xor
ret
xchg
imul
mov
aam
mov
add
mov
add
mov
outsl
sti
add
shlb
pusha
pushf
shlb
sbb
repz
xchg
insl
cltd
test
inc
jg
imul
mov
lods
pop
bound
call
add
jno
test
cmp
mov
adc
insl
mov
mov
leave
test
jbe
shlb
iret
es
jg
lret
lods
cwtl
push
aaa
add
xchg
xchg
add
into
fcmovnu
adc
pop
cmp
xchg
les
shrb
adc
inc
fstpl
inc
cs
sahf
pop
enter
shlb
adc
popa
cs
in
xor
loop
stos
dec
jle
mov
and
aas
insb
adcl
sub
std
pop
cs
jnp
loopne
mov
pop
xchg
outsl
or
sub
fs
pop
les
jo
outsb
sbb
xor
xor
ds
pushl
mov
stos
pop
sbb
and
cmp
pop
cmp
mov
mov
cltd
pushf
gs
and
mov
sti
cmp
cmp
or
add
mov
lcall
mov
adc
stc
and
js
xchg
mov
bound
push
sub
int3
dec
aas
mov
fisubrs
ja
scas
adc
sbb
push
mov
daa
fidivs
pop
sbb
jecxz
popa
mov
sub
stc
ss
stos
adc
and
dec
out
int
mov
and
ret
cmp
maxps
or
push
daa
clc
jnp
cmp
inc
jp
add
das
call
das
out
ljmp
adc
in
cmp
add
and
pop
and
jb
imul
rcrl
stos
push
call
pop
imul
pusha
bound
push
push
mov
pop
mov
add
dec
loope
push
arpl
fnstenv
jae
sarl
cmp
inc
pop
sti
lret
mov
mov
aaa
movsb
inc
xchg
jne
imul
push
cmpsb
push
mov
mov
insl
sbb
addr16
fimull
pop
pop
adc
in
cmp
scas
add
xchg
mov
scas
pusha
inc
mov
dec
fnstenv
pop
fdivrs
ret
xchg
and
push
divb
inc
out
test
mov
or
es
inc
shlb
decl
and
mov
cmp
sbb
je
xor
loop
and
insl
xchg
mov
mov
sbb
sbb
hlt
add
cld
push
stos
in
bnd
sti
pusha
test
movsl
cwtl
pop
lods
dec
mov
fcmove
rorl
loope
js
xor
popf
mov
into
mov
fidivrs
mov
mov
jnp
add
cmp
cld
dec
inc
sahf
push
and
inc
jnp
lss
notl
mov
and
cmp
mov
mov
xlat
or
mov
ljmp
lret
aaa
ljmp
mov
or
mov
sub
inc
push
xor
popa
sbb
addr16
popa
jns
xlat
out
loop
sub
adc
stc
adc
push
fcmovb
sbb
xchg
hlt
outsl
out
mov
dec
mov
lcall
je
jp
out
and
cmp
mov
dec
cwtl
ror
xchg
loope
cmpl
das
inc
aas
fldl
imul
popf
mov
js
lcall
lea
jmp
adc
into
gs
int
clc
fwait
inc
imul
in
andb
or
xchg
mov
fistpl
sbb
jmp
dec
pop
xchg
add
xor
pop
stos
jbe
push
jne
lahf
push
add
mov
loopne
cmp
gs
loop
push
sbb
cld
mov
inc
push
push
mov
in
cmp
mov
je
sub
invd
out
and
repz
imul
andb
rcl
fidivrs
ljmp
cli
dec
adc
jns
stos
inc
pop
mov
inc
out
sub
dec
sbb
cwtl
leave
xlat
push
int3
inc
leave
repz
sbb
or
pop
push
cmp
lock
mov
je
cmp
inc
push
mov
icebp
aam
sub
and
cmc
pop
incl
rep
or
sub
jo
jno
mov
inc
je
movsl
sbb
pop
cld
mov
in
pusha
prefetch
inc
xor
cmc
fildll
imul
loopne
popa
imul
pop
test
adc
loope
sbb
divb
lret
xchg
scas
outsl
mov
xchg
inc
or
sti
inc
mov
data16
push
push
mov
adc
push
xchg
in
shlb
add
les
bound
mov
mov
mov
aas
and
ffree
mov
jns
fldcw
test
lods
xchg
add
sub
fistl
ror
push
fisttpll
push
stc
cli
jno
xor
clc
fadd
xchg
iret
pop
add
es
sahf
mov
inc
test
test
dec
shll
add
jecxz
inc
stos
cwtl
dec
jns
in
or
es
in
push
rorb
movsb
pop
out
test
sbb
pop
in
sbb
sub
sub
sbb
je
mov
cmpsl
lcall
inc
test
sub
test
les
es
pop
mov
es
sub
out
xorl
dec
cld
push
push
int
push
movsb
xchg
daa
push
add
pop
xor
in
dec
add
fstpt
mov
test
xchg
sbb
push
jg
decl
pop
mov
imul
push
adc
dec
push
dec
orb
bound
dec
lret
iret
clc
lcall
icebp
int3
push
inc
imul
cmp
mov
and
xchg
out
push
arpl
scas
jle
shlb
sbb
jae
add
mov
imul
jl
xchg
outsb
aaa
sub
adc
enter
cs
cmp
jg
pop
leave
insb
ja
stos
arpl
add
es
fs
fbld
jge
sbb
int
out
sti
stos
decb
lods
mov
in
rolb
mov
lret
out
and
xor
sbb
mov
shll
and
xor
push
adc
jge
shr
adc
add
and
test
scas
aaa
jae
mov
dec
arpl
out
loopne
add
popa
loop
aam
and
lret
test
or
lds
imul
enter
push
xor
cmp
repz
cmp
pop
mov
gs
sti
sub
insl
mov
fcoms
scas
xlat
insl
jae
mov
mov
jno
add
add
jle
out
adc
hlt
xchg
xlat
mov
mov
mov
xchg
sbb
push
mov
inc
imul
arpl
dec
cmpsl
xlat
sub
xchg
adc
jnp
aad
insl
lret
aas
gs
push
pop
outsl
mov
add
stc
add
add
or
testb
jmp
jnp
add
loopne
jle
cli
push
cli
mov
jg
mov
dec
aad
add
loopne
xlat
and
add
inc
cmpsl
dec
out
jno
fldpi
cmc
or
addr16
inc
movsb
sbb
cld
push
fistps
std
cmp
push
xchg
js
daa
sar
test
pop
mov
call
adc
lcall
jmp
add
fwait
inc
sbb
lret
mov
adc
out
fisttps
xchg
push
inc
imul
std
jo
cmp
imul
dec
cmp
or
cmp
add
cmp
adc
and
incl
mov
sbb
flds
insb
lahf
xlat
std
adc
out
mulb
out
iret
out
loop
movsl
xor
xor
mov
push
cmp
lods
leave
mov
mov
pop
call
add
sbb
add
jo
cmp
sti
inc
pop
mov
ret
fsubl
xlat
clc
or
xchg
icebp
xchg
xchg
dec
scas
add
push
cmpsb
and
mov
jns
xor
adc
mov
fimull
aaa
loope
jo
andl
mov
dec
stc
dec
fistl
stos
dec
aaa
xchg
mov
inc
icebp
cwtl
pop
jnp
outsl
gs
xorb
lahf
cli
cld
sbb
cwtl
xlat
aaa
lds
xchg
aad
aas
scas
call
and
filds
dec
nop
movq
add
orb
flds
nop
imul
or
dec
imul
inc
or
pop
inc
leave
push
xlat
aam
ret
into
jno
mov
jp
in
in
mov
arpl
fwait
aas
std
daa
mov
icebp
sbb
adc
aaa
fcompl
loope
test
dec
lds
push
mov
mov
add
rcrl
pop
mov
xchg
out
and
popf
enter
and
cwtl
icebp
rolb
xor
clc
int
cmpsb
jns
inc
cwtl
outsb
push
mov
and
inc
call
stc
popf
lret
pop
mov
mov
mov
push
xor
gs
pop
test
cmpsl
mov
add
inc
leave
je
loope
push
sbb
fildll
xchg
ret
loope
lods
push
mov
jge
cmc
jecxz
sub
xchg
mov
sahf
mov
sub
and
xor
addr16
fldcw
insb
jns
addr16
jnp
mov
jmp
mov
cmp
mov
hlt
inc
fistpll
mov
add
sarl
out
sub
and
movsb
cmc
out
testl
push
pushf
push
cli
stos
aas
jns
lret
jnp
xchg
mov
pushf
cmpsb
leave
out
out
orl
inc
adc
adc
aas
sbb
es
loopne
sbb
bound
jnp
add
imul
pop
inc
jl
xor
jl
movsl
test
xor
and
icebp
repz
push
add
jecxz
daa
or
movsb
xor
rorb
add
mov
jb
das
sbb
push
imul
aam
dec
cld
outsb
cmpsb
das
test
xchg
cmp
cmc
aas
cs
test
lods
sbb
cmpsb
fsubrs
jmp
lahf
shlb
mov
sti
mull
adc
pop
cmp
aas
push
jp
ret
fimuls
out
fdivp
je
out
mov
add
inc
jmp
or
loope
push
mov
push
jl
cmp
fbstp
scas
jmp
mov
test
outsb
sub
mov
inc
daa
mov
and
xor
sub
mov
gs
xorb
and
loopne
cmp
pop
negl
lods
ss
mov
in
mov
jle
or
mov
add
daa
add
pusha
in
mov
fstps
cli
push
push
cmp
test
or
inc
jo
inc
and
jb
ds
lods
fcmovu
pushf
jns
adc
cmpsl
xor
jge
inc
int
pop
subb
enter
imulb
aam
inc
leave
sbb
xlat
mov
jp
add
imul
cld
dec
or
inc
jnp
cmp
shl
and
les
mov
jnp
mov
cmp
scas
or
push
outsb
scas
push
fnstsw
jne
xor
fxch
cmp
pop
sbb
bound
and
paddusw
enter
cs
rclb
pop
jnp
or
mov
cmp
sbb
in
inc
test
fmull
jo
dec
cmc
pop
scas
stos
arpl
in
pop
bound
repnz
adc
fs
sbb
mov
sbb
sbb
inc
sbb
sbb
cmp
adc
push
loopne
mov
inc
mov
sbb
in
dec
sub
cmp
pop
repz
push
lock
fisubl
lods
pop
pop
popf
mov
fwait
and
jl
daa
pop
inc
or
add
lea
lret
pop
xchg
inc
dec
fwait
js
mov
pop
pop
lds
inc
lret
clc
jl
movsb
jecxz
incb
jne
push
adc
or
mov
adc
inc
cltd
in
sub
add
or
ret
inc
pop
inc
mov
dec
cmpsl
scas
cld
push
mov
sbb
ja
add
adcb
mov
andb
xchg
pop
lods
out
insl
out
clc
cmp
lods
fcoms
add
xor
outsb
cld
xchg
cmp
das
fildll
push
sti
imul
out
scas
subl
jb
popf
cmpsb
adc
int3
imul
faddl
insb
gs
loopne
adcb
push
adc
dec
sbb
aam
mov
dec
pop
xchg
and
add
mov
orl
sahf
popa
out
pop
pop
xchg
add
sub
lret
lods
jae
cs
fwait
pop
fisubs
push
out
outsb
lcall
dec
cli
jl
scas
cli
mov
ds
jmp
fnstcw
aaa
sub
jne
mov
addr16
mov
or
loope
sub
sbb
dec
add
out
xchg
out
fdivl
jnp
loop
inc
out
or
out
cmpsl
add
pop
adc
push
cmp
mov
pop
outsl
jmp
pop
test
jmp
mov
inc
int
xor
ret
lahf
mov
imull
inc
imul
cmpsl
or
scas
mov
lds
xchg
jo
stos
mov
mov
test
add
push
mov
test
or
mov
xchg
cmp
sub
mov
mov
cmp
lods
and
cld
call
push
pop
jno
inc
pop
mov
or
add
adc
xor
bound
sub
jb
inc
js
cmpb
pop
mov
les
stc
pop
add
enter
xchg
decl
cmp
leave
mov
daa
cmpl
repz
in
jae
xchg
xlat
ljmp
enter
xchg
and
psubsw
xlat
and
push
out
pop
ljmp
mov
test
outsb
xchg
lock
imul
icebp
shlb
outsl
notl
enter
mov
pop
jnp
ret
shlb
inc
xor
movsl
ss
mov
cmovb
add
movsl
loopne
test
jle
inc
mov
mov
sub
and
mov
cmp
or
negb
call
adc
inc
xchg
gs
mov
xchg
inc
or
int
scas
hlt
addb
leave
push
mov
mov
push
jle
add
ds
inc
in
push
test
adc
and
mov
pop
adc
inc
inc
pop
es
sbb
mov
cmp
xchg
subb
sub
mov
loop
xor
pop
and
and
mov
push
cmp
fidivrs
in
sbb
addl
mov
int3
test
xchg
jg
pop
inc
mov
jno
push
pop
pop
fwait
je
out
xor
adc
mov
add
cmpl
fistl
pop
out
sbb
fstl
out
insb
arpl
and
sbb
jge
je
push
xor
repz
xchg
push
outsl
xlat
sub
mov
push
sub
jmp
pop
jae
mov
jg
int
sub
xor
mov
jmp
fimull
push
test
cmp
push
mov
clc
jb
mov
jbe
or
movd
test
fucomi
scas
jge
shll
aad
push
jae
call
xchg
daa
test
add
jp
fsts
outsb
es
pmulhw
enter
retw
and
outsl
dec
and
hlt
sub
lahf
mov
icebp
pop
add
cli
shll
mov
out
std
loope
je
jnp
and
xor
inc
fiaddl
movsb
shrb
mov
ss
arpl
inc
adc
inc
sbb
in
cwtl
popf
mov
and
ljmp
jecxz
cmc
push
iret
jo
pushf
imul
pop
stc
subb
hlt
mov
loopne
jl
dec
adc
repz
aas
outsb
gs
ret
sbb
repnz
call
add
inc
sub
scas
out
mov
movsb
test
lock
xor
xor
std
mov
push
add
fists
rcll
xchg
push
mov
sbb
gs
jmp
clc
movb
daa
cli
fsubrp
and
shlb
adc
movsl
mov
xchg
popf
push
lahf
test
cmp
xor
xorb
sbb
cmp
lods
out
sbb
divb
jae
lret
lds
pushf
lods
addb
lea
pop
xor
test
sub
fstpl
movsl
pushf
pop
jno
dec
outsb
push
jae
mov
xchg
addl
lret
in
cwtl
sbb
adc
pop
add
jns
push
enter
loope
adc
lret
test
out
pop
push
hlt
js
jmp
out
jmp
into
jnp
jl
jnp
sbbl
nop
stos
pusha
xor
ss
test
push
jg
les
lds
scas
cmpsl
mov
stc
sahf
xlat
xchg
xchg
or
push
and
out
or
push
pusha
mov
mov
mov
mov
je
xor
pop
popf
aad
jne
call
xor
fimull
adc
test
dec
orb
test
js
push
insb
xlat
add
je
dec
pop
ljmp
daa
mov
add
jnp
imul
xor
or
or
xor
ss
cwtl
lret
int
loopne
in
dec
xor
shlb
xchg
in
inc
data16
fstps
inc
pop
adc
mov
dec
push
xadd
cmp
mov
xor
mov
filds
push
ja
push
lahf
mov
adcb
idivl
ret
mov
or
jno
push
enter
xor
jg
push
adc
cltd
jno
lea
fdiv
popf
rorb
divb
dec
mov
sbb
out
in
dec
cld
scas
cltd
loop
fsts
cmp
sub
sahf
mov
xstore-rng
cmpsl
add
push
cltd
sub
das
arpl
outsb
pop
loopne
add
push
std
in
push
ret
movsbl
cmpsl
jae
pop
test
jns
jno
cmp
lret
aam
inc
loopne
insl
adc
xor
in
adc
data16
ljmp
sub
sub
aad
scas
in
xor
pop
mov
pop
pop
or
dec
jbe
js
lret
jp
in
mov
ss
push
push
nop
xlat
arpl
cmc
arpl
sbb
mov
test
stos
and
mov
mov
cli
adc
test
lret
pop
daa
popa
push
adc
gs
mov
imul
pop
rcrb
dec
aam
mov
jno
fisubrl
pusha
push
repz
adc
dec
adc
cmp
xor
mov
mov
sahf
int3
lods
daa
sbb
fnstcw
mov
lret
ljmp
insl
loopne
repnz
loop
add
xor
incl
xor
sub
pushw
leave
dec
xor
push
repnz
js
repz
popa
push
lahf
mov
pop
mov
push
stc
xorl
leave
xor
leave
jnp
hlt
push
or
add
mov
subl
mov
ds
add
rcr
ret
xchg
jle
push
stos
jne
jp
or
into
roll
cmp
or
sbb
xor
push
add
out
pusha
imul
je
lock
movsl
cmpsb
sub
pop
mov
cmp
push
xorb
ficoms
fimuls
dec
nop
mov
or
sbb
sti
push
bnd
aas
iret
push
push
and
test
xchg
inc
dec
sub
sub
mov
cld
inc
repz
mov
dec
sbb
dec
push
xchg
pop
aam
inc
jg
sbb
cmp
mov
pop
lret
xchg
pop
outsb
in
mov
or
shlb
dec
xchg
aaa
inc
popf
cmp
test
mov
rcrl
sbb
lret
push
push
adc
test
add
pop
xchg
hlt
jecxz
add
mov
cmp
mov
ja
push
inc
nop
pop
and
loop
lods
pop
mov
xchg
jmp
cmp
pushf
leave
push
sar
mov
and
dec
push
pusha
scas
push
sbb
mov
dec
cmc
mov
cmp
mov
add
fsts
out
xor
gs
jae
mov
sub
and
je
cmp
vmovddup
pop
mov
jbe
or
adc
xor
ret
push
inc
sahf
push
inc
xlat
jo
sub
aam
cwtl
or
subl
adc
clc
lret
movsb
xor
mov
loope
in
ret
mov
inc
xor
and
cltd
xor
je
ljmp
rorb
es
pusha
ret
insl
bound
shlb
inc
sahf
xchg
aas
push
adc
jnp
mov
cltd
sbb
dec
mov
and
push
adc
xchg
out
sahf
dec
and
adcb
add
mov
ficoms
ret
ficomps
data16
ds
mov
cld
rcll
js
std
mov
push
adc
push
lods
repz
sub
push
inc
jo
cmp
shrl
orl
mov
or
jb
int3
and
mov
jmp
xor
or
lret
jecxz
hlt
inc
jp
add
test
in
cmpsl
lds
testb
mov
mov
cmpsb
ss
jo
cmpl
push
fistpll
test
bound
push
sub
push
stc
lock
pop
mov
add
lcall
mov
test
mov
jb
xor
cmpsb
shrl
or
cwtl
or
xchg
out
push
cltd
out
mov
mov
mov
adc
ffreep
xor
push
push
out
mov
inc
inc
loopne
hlt
decl
enter
push
fnsave
iret
push
insb
cmc
or
pop
mov
sbb
loopne
sbb
movsl
in
ja
loope
dec
out
mov
popf
push
rolb
jg
daa
push
out
inc
imul
add
jo
mov
imul
mov
mov
add
jmp
in
movsb
cmp
dec
mov
popf
pop
inc
fdivrl
and
xor
lock
mov
dec
lahf
arpl
sbb
inc
fcmovb
js
int
xchg
jno
cmp
loop
add
xor
pop
add
aad
mov
jecxz
push
addr16
pop
ja
mov
icebp
iret
add
inc
inc
adc
jp
cmp
aad
mov
imul
stc
or
xor
mulb
and
loopne
inc
incl
push
mov
and
jb
js
ret
sub
pop
push
lret
mov
scas
and
dec
in
jle
hlt
adc
movsl
sub
xchg
or
adc
fistps
in
lret
popa
dec
push
enter
mov
add
cld
jo
imul
jo
scas
outsb
jnp
pop
cmp
xchg
push
mov
cli
rcrl
mov
mov
idiv
loop
jns
jne
icebp
mov
xchg
lock
call
clc
es
xlat
in
xchg
jae
xchg
xor
test
adc
popf
cwtl
adc
data16
pusha
mov
repz
icebp
sub
push
add
enter
adc
mov
or
push
sbb
add
outsb
fists
ret
xchg
movsl
shr
xchg
ret
mov
add
das
pop
es
cmp
ljmp
jp
fs
fiaddl
pop
nop
inc
mov
fldcw
aaa
jbe
arpl
sbb
loope
pop
hlt
das
popf
adc
dec
jbe
loop
cmpb
adc
jge
mov
pop
incl
adc
xchg
stos
sbb
xchg
fwait
xchg
and
xor
or
std
repz
pop
jo
adc
lahf
fsts
jae,pn
rorb
or
cmpsl
jge
or
add
pop
cmpsl
and
cmc
call
sahf
pop
ret
inc
inc
jb
cmc
push
xchg
popa
mov
fstl
or
push
add
pop
cltd
mov
pop
dec
fstl
lods
nop
repz
add
inc
nop
adc
or
pop
pop
jb
insl
je
clc
sbb
cmp
ds
inc
adc
inc
loope
xchg
add
inc
mov
or
xchg
dec
and
test
cli
adc
jno
sar
mov
mov
insb
in
dec
push
in
shll
icebp
xchg
ja
fcomps
or
jne
bound
xor
pop
xbegin
jne
inc
and
rolb
outsl
mov
xchg
cmp
jg
adc
xchg
or
fwait
mov
into
jg
and
dec
je
jle
mov
jo
lock
imul
xchg
xchg
in
aad
lock
stos
mov
sti
mov
xchg
stc
fistps
push
xchg
leave
mov
pop
fiadds
js
in
jp
sbb
lahf
cld
push
pop
outsb
mov
push
es
jne
xor
outsl
aam
push
imull
insb
adc
lret
sbb
mov
in
ds
push
lea
sbb
fbld
int3
cmp
mov
push
out
mov
dec
out
mov
hlt
fwait
loop
fnsave
pop
mov
in
stos
jne
inc
sub
mov
push
aam
mov
mov
xchg
int
add
sysret
inc
ds
leave
xor
roll
lahf
enter
or
push
sub
jmp
mov
icebp
shlb
sub
inc
adc
lret
push
test
outsl
push
adc
inc
into
inc
push
ret
fwait
call
jmp
mov
outsb
xchg
sub
cmp
insb
xorb
pop
or
inc
cmp
int3
mov
xor
xchg
sub
xlat
add
push
push
shlb
out
lret
push
mov
mov
ror
ret
loope
ljmp
ret
and
daa
cmp
lahf
movsb
dec
xor
cld
mov
std
dec
das
mov
aam
cmp
stos
pop
mov
icebp
icebp
shl
inc
fstpt
nop
aaa
lret
pop
iret
adc
jecxz
sbb
icebp
adc
fwait
adc
sbb
int3
outsb
sbb
int
push
lods
xchg
movb
negl
mov
push
leave
outsb
fldenv
jmp
xor
or
mov
xor
mov
loopne
inc
rcrb
pop
jne
mov
inc
rcrb
inc
or
gs
mov
jns
lahf
ficoms
int3
add
cmp
addl
xor
lea
pop
xor
and
repnz
aad
sarb
mov
outsl
dec
in
mov
popf
cmp
xor
push
and
jge
sbb
sbb
ds
adc
fwait
js
test
ret
iret
rolb
pop
push
popl
mov
mov
mov
and
ror
in
mov
adc
inc
xchg
je
ficoml
jmp
cmp
or
jp
enter
lahf
push
addr16
gs
pop
xchg
outsl
dec
ds
cmpsl
fidivrl
daa
sbb
push
rolb
gs
mov
xchg
push
loope
sbb
addr16
lods
jg
jo
add
testl
iret
dec
add
mov
fstp
lcall
push
aam
or
jge
movsb
xor
sbb
sub
loop
mov
dec
lods
loope
lock
sbb
cmp
je
jb
cvttps2pi
cmp
sar
cmc
fnstenv
insl
jne
shrb
stc
inc
pop
dec
and
xchg
iret
mov
add
dec
sbb
in
xchg
mov
lret
mov
icebp
repz
sbb
push
add
push
fs
push
inc
aaa
fdivl
repz
jns
xorl
iret
xchg
jg
inc
sub
dec
mulb
popf
push
int3
lret
mov
les
jo
test
push
or
pop
push
ret
test
andl
xor
sbb
xchg
sbb
pop
mov
ss
aam
sub
mov
jp
xor
or
jge
jp
sub
cmpsl
dec
mov
test
and
sbb
decb
xchg
jl
and
cmp
dec
sub
and
rclb
jnp
push
mov
or
sub
push
aas
in
fsubs
mov
xor
lods
push
and
cli
sbbb
fistl
jecxz
fildl
dec
in
test
in
int3
std
jp
push
sub
test
idiv
mov
xor
and
iret
pop
pusha
lds
push
mov
and
mov
cltd
jmp
test
mov
mov
mov
push
pop
xchg
mov
imul
in
icebp
sbb
pop
popf
push
inc
and
aas
ret
lcall
add
je
fdivrl
jmp
test
adc
xchg
stos
call
mov
cld
mov
mov
loope
adc
cmp
sarb
mov
add
fnsave
pop
sbb
sarl
daa
sti
push
mov
adc
inc
scas
jae
pop
faddl
mov
out
imull
lret
dec
test
and
mov
jmp
sub
lods
and
sbb
cmp
push
push
mov
and
sub
jns
dec
decl
aad
and
xor
hlt
ret
cmpb
xlat
pusha
test
cli
jecxz
jo
add
pop
jge
lret
adc
cli
sub
outsl
int
rep
or
fstpt
in
lret
inc
xor
pop
and
fisubs
std
inc
mov
xlat
push
adc
rcrl
inc
mov
inc
mov
out
leave
push
dec
add
push
mov
aas
xor
sub
pop
fstpl
pushf
inc
aas
fisubs
adc
pop
rclb
sti
mov
sbb
dec
add
mov
jbe
jae
int
mov
sbb
dec
mov
push
xor
push
mov
loopne
jl
and
mov
sbb
fidivs
lea
test
xor
sub
das
cltd
xchg
cmp
psraw
cltd
repnz
lcall
clc
and
dec
adc
cmpsl
xchg
das
mov
jo
shll
mov
in
lahf
iret
ret
test
div
pop
stc
pop
add
arpl
fdivrs
stc
pop
adc
adc
jecxz
mov
inc
mov
inc
rcr
jp
cmpsl
imul
sub
add
sbb
jne
xor
fdivs
adc
inc
cwtl
pop
pop
push
jp
xchg
sbb
mov
push
pop
jne
fidivrs
xor
push
out
loop
jo
inc
dec
pusha
jbe
adc
mov
mov
std
inc
rcll
daa
jbe
movsl
je
ret
cmpsl
push
int3
popf
hlt
mov
jnp
cli
fsubr
adc
add
xchg
nop
cmp
mov
or
stos
cs
mov
nop
xchg
std
mov
or
ret
aam
push
ljmp
ljmp
mov
shl
sub
xchg
and
aaa
mov
xor
insb
inc
int3
add
xchg
xlat
jb
mov
and
xorl
iret
push
xchg
fildl
xor
scas
push
and
outsb
push
lods
int
scas
push
sbb
mulb
xchg
push
add
jnp
loopne
cmp
andb
dec
cld
lea
jecxz
jge
mov
test
std
jmp
and
adc
xchg
xchg
into
sti
pop
fcomps
pop
jmp
popa
insb
movsb
mov
mov
popa
int
push
push
scas
cmp
scas
std
aas
push
dec
cmp
fcmovnb
adc
mov
lcall
pushf
lcall
jl
ror
movsb
pop
mov
sbb
or
nop
fidivl
adc
pop
fs
sbb
push
jne
movsb
sbb
add
push
jb
mov
xor
sbb
and
fidivs
mov
pop
inc
mov
in
xor
inc
aad
into
repnz
push
adc
ficoml
mov
mov
mov
pop
push
lods
jle
mov
sub
push
je
test
testl
dec
mov
inc
cld
sarb
mov
cmp
inc
mov
and
cmp
dec
push
int3
mov
test
sarb
int3
cmp
xor
mov
jae
and
xchg
loop
push
jae
lahf
xor
popa
or
fwait
pusha
loope
sub
inc
mov
lea
in
lock
mov
and
mov
jmp
mov
notl
negw
lret
int
cmpsl
lcall
outsl
sarb
cs
push
jp
scas
cli
push
pop
hlt
daa
js
in
dec
pop
je
cltd
ljmp
pop
push
repnz
push
dec
bound
sbb
push
repnz
jge
add
outsb
lods
mov
sub
xchg
inc
call
fisubrl
xchg
mov
lea
in
insl
cli
xchg
ret
popa
add
imul
add
or
ss
icebp
aad
adc
mov
cmpsb
cmp
adc
mov
mov
fwait
orl
push
cwtl
mov
stc
dec
pusha
std
nopl
testb
pop
pop
cmp
dec
sub
pop
mov
or
mov
mulb
shll
add
aas
sti
imull
bound
rcrl
cmp
cmp
pop
xchg
cmpsl
cmp
or
jbe
adc
fcompl
ljmp
imul
or
inc
clc
fwait
xchg
pop
sarb
aad
jp
es
xor
test
test
movsb
mov
xor
adc
mov
pop
mov
lret
dec
inc
wbinvd
mov
hlt
ds
cmpsl
xor
or
insl
or
and
sbb
or
in
pop
jl
sbb
mov
fsubs
popf
testl
inc
test
aaa
mov
imul
daa
les
adc
pop
fs
mov
insb
sti
cli
add
les
cmpsb
jb
ficomps
cli
push
or
and
xor
lods
leave
mov
pop
fldl
pop
out
clc
insl
stos
sbb
mov
outsl
mov
out
std
dec
fcmovb
add
mov
inc
pop
pop
jne
subb
js
cmp
rcrb
xor
aad
scas
xor
and
clc
jmp
push
ljmp
jnp
or
imul
fldcw
lock
mov
movsb
xchg
jg
mov
mov
out
imul
test
sbb
cmp
sbb
dec
outsb
push
xor
jnp
mov
int
enter
and
aaa
out
add
aad
arpl
mov
add
mov
jno
test
jmp
rclb
push
mov
mov
loopne
outsl
push
jecxz
or
bound
sub
mov
nop
and
push
mov
scas
call
and
outsb
mov
divb
inc
mov
repnz
push
lret
add
shlb
mov
mov
fdivrl
repz
adc
cmpsb
sbb
flds
xlat
std
or
dec
pop
xor
jbe
mull
pushl
inc
inc
pop
lods
sub
jmp
popa
inc
or
lret
fisttps
or
loopne
cld
mov
scas
iretw
mov
out
pop
mov
fstps
jbe
push
cmp
clc
int
loope
lds
fimuls
xor
ret
out
adc
lea
mov
ss
test
mov
mov
mov
clc
pop
adc
shll
adc
je
sbb
mov
fwait
cltd
subps
push
mov
dec
incl
fisubs
cwtl
fisubrs
mov
fcmovu
and
test
xchg
sub
or
jae
jecxz
add
fdivrs
out
pop
mov
outsl
lods
or
or
ss
add
fcmovne
inc
orb
pop
mov
pop
or
xchg
xchg
pop
push
iret
jg
stc
mov
cltd
repnz
dec
sub
or
dec
cmp
mov
stos
cmpb
or
and
out
dec
fdivr
xor
mov
aas
push
xchg
adc
mov
pop
mov
and
mov
mov
test
arpl
mov
mov
stc
dec
les
mov
popf
hlt
xor
mov
mov
jno
xor
xor
in
mov
scas
mov
adc
pop
cmpsb
sub
cli
rep
cmpsl
or
mov
mull
mov
mov
mov
pop
dec
mov
xchg
mov
out
imul
pop
xchg
mov
push
and
stos
mov
jb
xchg
sub
insl
push
mov
in
imul
xor
add
xchg
xor
mov
cltd
sarb
cmpsl
notb
mov
and
xchg
jle
ret
push
fdivrp
data16
ret
jle
sarl
jmp
jge
imul
mov
imul
push
test
iret
inc
clc
or
xor
ja
pop
xlat
jecxz
into
arpl
xchg
jns
add
inc
fwait
push
and
cmc
repz
aaa
xor
aas
pop
mov
inc
dec
and
arpl
push
lods
aaa
mov
loop
and
mov
inc
and
aam
jno
cmp
roll
mov
mov
loopne
lock
jae
cmp
push
fbstp
mov
inc
sub
xchg
mov
dec
loope
push
pushf
aas
push
shll
inc
or
push
sbb
mov
mov
jg
lods
push
fs
fstpt
adc
shr
lret
js
pop
je
mov
mov
shll
jbe
add
jecxz
jb
push
jae
orb
lea
mov
clc
mov
inc
pushf
loopne
mov
addr16
mov
fildll
adcl
lds
daa
arpl
outsb
add
cmpsb
mov
dec
dec
or
xchg
jo
sbb
aas
bound
inc
sbb
pushf
enter
out
fidivrs
push
fwait
movsb
movsb
test
nop
or
xchg
clc
ds
cmpsl
arpl
jb
push
push
or
lods
mov
cltd
bound
stc
pop
insl
lret
cmc
dec
xchg
cmc
pushf
inc
arpl
inc
and
ja
inc
jge
into
inc
out
add
fisubrl
dec
mov
daa
jl
frstor
xchg
fmull
or
cmpsl
pop
pop
fs
ds
fsubs
icebp
adc
or
and
fstl
fld
icebp
lock
or
fiaddl
push
test
aad
push
mov
dec
test
jno
stos
cwtl
insl
stos
or
jae
mov
push
jns
clc
xor
ss
enter
mov
add
xchg
push
repnz
adc
xor
push
pop
lock
das
test
dec
bound
push
ret
clc
test
aam
notb
ret
mov
jb
movb
fdivrp
push
jge
lcall
push
mov
lock
sbb
xor
sub
mov
dec
inc
loop
imul
fs
shr
roll
test
push
pop
loopne
incl
hlt
jl
pop
pop
sar
cmp
mov
mov
sub
or
push
loope
daa
mov
sub
mov
pop
mov
fwait
repnz
testb
aam
cmp
pop
lcall
popf
call
jmp
sub
pop
es
adc
inc
sbb
or
ret
scas
in
lret
sbb
and
cwtl
and
cmp
push
repnz
pop
or
mov
pop
lds
addr16
mov
xor
push
sub
add
jns
fwait
nop
imul
lret
leave
mov
push
mov
and
fsts
popf
dec
out
inc
dec
sahf
aas
imul
shll
ljmp
push
lock
ret
or
push
adc
sbbl
fbld
or
mov
pop
cmpsb
adc
jle
or
inc
jae
xchg
pop
xor
lahf
xor
mov
inc
xchg
testb
fcmovbe
loop
enter
xor
fstps
cmp
jecxz
mov
aad
mov
inc
push
xor
or
mov
cmpsb
xchg
jmp
fs
sub
and
in
sub
jbe
movb
jle
push
adc
sub
lods
and
or
pop
icebp
insl
int
push
dec
cmp
inc
insb
fcom
cltd
sbb
and
sti
xchg
add
adc
loopne
push
jg
sub
repnz
les
push
mov
scas
lods
inc
pushf
cmc
xchg
fimuls
leave
es
es
popa
mov
mov
sub
sub
aas
out
mov
dec
popa
pop
movsb
dec
bound
in
xor
inc
or
add
pop
jp
data16
leave
push
adc
add
jno
cmp
mov
pop
lods
sub
andb
inc
cmp
iret
mov
jo
in
gs
xor
mov
ror
loop
aas
mov
iret
mov
add
movsl
mov
cmpsl
dec
cmp
rorb
pop
mov
pop
sub
aaa
pusha
data16
mov
sbb
inc
jl
gs
hlt
cmp
out
lds
cmp
scas
in
outsl
inc
fs
push
cmc
out
sbb
sub
mov
pusha
cmpsb
or
sub
stc
fsubp
jbe
cmp
aad
incl
lock
leave
add
xor
pusha
leave
push
imul
idiv
ret
xchg
mov
mov
cmpsl
xor
repz
cmp
adc
pop
cmp
cmp
sti
inc
sub
js
adc
loop
sub
jne
insl
push
fcomps
cmpsb
testl
and
add
enter
ret
scas
arpl
mov
lock
mov
stos
pop
pop
lds
xor
test
popf
daa
jnp
pop
andl
jmp
pop
repz
add
cmp
repnz
scas
in
pop
stc
pop
jno
sbb
xor
out
inc
or
mov
add
and
shll
icebp
dec
pop
mov
sarl
sub
je
dec
setae
jns
jns
or
xor
daa
jnp
mov
int
shlb
mov
cmc
cli
fldcw
sub
daa
lret
sbb
es
mov
cld
sbb
fldl
mov
add
cmp
addl
xchg
aad
mov
lods
loope
xchg
pop
cmpsl
push
cmp
cs
loop
jns
pop
daa
rcll
pop
add
mov
flds
xchg
jle
pop
mov
sub
ret
push
mov
bnd
cmp
jge
fldt
loope
imul
gs
fnstenv
sbb
es
jne
ja
inc
xor
mov
pushf
cs
sbb
addr16
and
mov
xor
adc
fldenv
test
mov
aam
outsl
popf
pop
mov
mov
arpl
fs
ret
and
push
sbb
js
in
aas
daa
fisubrs
mov
fistpl
xor
stos
test
dec
and
adc
sub
std
dec
add
shl
sub
push
test
cmp
stc
outsl
cmp
test
inc
mov
ficoms
cmp
jbe
sub
dec
add
push
ljmp
push
pop
icebp
les
mov
xchg
mov
cmp
movl
sti
mov
and
or
mov
pop
sub
sbb
mov
lods
push
mov
in
cld
and
mov
mov
outsb
cmpsl
ss
xor
fmuls
inc
into
jmp
cmp
sub
mov
dec
add
ljmpw
dec
sub
mov
sub
mov
loopne
xchg
dec
ds
insl
sbb
cwtl
mov
mov
adc
icebp
dec
loope
enter
loop
or
sub
loop
lods
mov
mov
jb
outsl
lods
in
lock
rclb
push
adc
fimuls
test
cmpsb
inc
mov
les
mov
push
repnz
jle
sbb
pop
jg
fdivs
imul
das
sbb
mov
push
pop
jns
cmpsb
adc
dec
xor
inc
lea
xor
sbb
fiaddl
and
add
out
add
pop
scas
inc
lcall
inc
and
lock
mov
pop
push
jmp
xor
fidivrl
fisttps
add
pop
aaa
fidivrl
dec
add
mov
mov
mov
les
sbb
add
test
fucomip
and
pushw
cld
aaa
in
outsl
paddsw
push
inc
scas
add
shl
push
xor
pop
xor
lds
gs
rolb
add
mov
rorb
xchg
inc
insb
mov
call
push
add
adc
add
cmp
pop
push
mov
and
lahf
sbb
out
cmpb
adc
push
test
inc
or
aad
movl
xchg
repz
cmp
adc
xor
and
add
push
mov
sub
pop
and
xchg
int3
aad
int
scas
popa
jno
push
dec
fwait
stos
xchg
mov
mov
push
imul
subb
xchg
jnp
xor
cmp
pop
add
pop
or
in
iret
out
inc
mov
sbb
pop
pop
push
cmp
mulb
fwait
cmpb
sub
popa
adc
adc
sarb
or
xor
aad
push
adc
inc
insb
mov
xor
clc
pop
pushf
dec
pop
mov
pop
cltd
jle
fisttps
xchg
mov
inc
mov
out
jp
adc
pusha
je
mov
ficompl
mov
dec
sbb
pusha
mov
shrb
pop
mov
or
shll
mov
fwait
scas
mov
and
jg
cmc
test
gs
in
jl
jnp
add
stos
push
jl
add
bound
cmp
push
sti
iret
pop
pusha
cmpsl
loop
loop
mov
movsb
lea
or
and
xor
cmp
aas
push
xchg
dec
pop
jns
fidivs
jp
or
test
aaa
mov
push
inc
inc
iret
outsl
enter
outsb
aaa
and
mov
imul
xchg
pop
sahf
je
mov
test
xchg
movl
push
icebp
into
ds
dec
rolb
call
mov
outsl
mov
dec
inc
push
mov
pop
cld
push
hlt
stc
xlat
aad
gs
sbb
inc
clc
cmpsb
jno
xchg
fdiv
cmc
cmp
sbb
sti
es
test
lahf
jmp
xchg
pop
lods
inc
inc
mov
jnp
sub
sbb
pop
call
cmp
jbe
imul
dec
outsl
jge
scas
xchg
pop
cs
jo
lock
rcr
mov
adc
xor
js
pushf
mov
out
sbb
fwait
or
jl
or
sbb
jge
sub
aam
mov
loopne
cwtl
cvtdq2ps
test
lock
lods
fisubrs
xor
pop
jg
xor
jne
sub
inc
push
push
lock
xchg
and
shrl
adc
loopne
nop
out
movsl
sarl
push
sahf
dec
mov
das
mov
mov
orl
jecxz
scas
inc
test
adc
push
mov
ds
pop
icebp
adc
repnz
xchg
xor
popf
adc
pop
into
xor
add
lods
out
lds
loopne
cltd
dec
jp
test
xor
imul
movsl
and
mov
ljmp
imulb
jae
in
xchg
mov
push
sarb
lret
pop
jnp
dec
mov
jmp
inc
adcb
or
dec
sbb
aas
in
aam
insb
rclb
cmp
push
pop
ret
call
cmpsl
js
rcl
xchg
imul
sbb
fmull
mov
mov
and
lock
fldl
pop
push
mov
jecxz
icebp
pushf
pop
add
mov
mov
lea
cmpsb
cwtl
call
fsubrl
out
sub
and
call
xlat
and
pushf
fprem
jle
jno
or
add
jns
sbb
out
sub
push
dec
jmp
mov
lcall
aad
jecxz
push
dec
hlt
dec
jg
test
cmp
dec
mov
and
mov
arpl
mov
cmc
cwtl
cwtl
daa
rcr
sub
rclb
or
mov
roll
arpl
data16
cmc
and
loopne
test
bound
push
inc
dec
mov
cs
mov
cmc
and
testb
cmp
shlb
call
outsl
mov
sbb
nop
out
inc
xchg
cld
push
sub
inc
popa
add
sub
pop
lods
pop
mov
push
dec
jne
lahf
dec
sbb
push
cmp
outsl
movsl
imul
push
adc
into
jge
sbb
jge
ficoml
into
inc
aas
outsl
test
lock
jmp
mov
out
pop
xchg
nop
jne
sub
orb
dec
lcall
pop
pop
in
movsb
cmp
cmpsb
cmp
lcall
jecxz
xchg
cltd
xchg
ret
xchg
loope
inc
lods
lock
andb
incl
jp
adc
into
loop
or
nop
cli
mov
into
fcompl
test
sub
inc
pop
xchg
fldl
xchg
fimuls
int3
test
cmpl
or
imul
cmpsl
mov
pop
jb
xor
sub
add
cmpsb
aaa
lret
mov
out
lret
jo
ljmp
adc
in
pop
xor
sarb
lock
pop
adc
pop
push
jge
stos
dec
adc
sub
inc
pop
or
inc
jnp
xorl
aas
daa
mov
imul
lahf
xchg
xchg
bound
pop
jp
push
push
leave
test
jno
fisttps
dec
fimuls
sbb
dec
push
iret
mov
xchg
xlat
call
pop
or
xchg
out
sbb
dec
and
addr16
hlt
inc
popf
sub
aas
sub
mov
cmp
mov
or
loope
mov
dec
mov
pop
test
fdivrl
fcom
cmp
ret
cmp
iret
ret
pop
sub
jbe
cmp
xor
mov
xor
dec
add
shll
sahf
push
into
test
sub
imul
add
fisttpll
xchg
lock
mov
rcll
mov
pop
jns
fimull
jl
gs
or
push
jecxz
sti
test
cmc
stos
add
pop
ret
sbb
repz
adc
int3
mov
aaa
test
xchg
mov
mov
imul
mov
pusha
jl
push
in
lea
xchg
imul
jo
xchg
ret
loopne
xchg
cmpsb
stos
add
add
cmp
fldenv
arpl
movsb
mov
sbb
sub
sbb
movsb
jg
rolb
xor
xchg
xor
gs
mov
into
mov
inc
adc
stos
xlat
or
icebp
pusha
cmpl
out
mov
or
test
repnz
enter
mov
jae
inc
nop
out
cli
scas
pushw
push
inc
stc
xorl
cmp
inc
gs
xor
add
jmp
icebp
xchg
icebp
insb
int
xchg
lret
insb
mov
push
orb
repz
push
mov
jp
pop
imulb
ss
pop
ret
out
aad
adc
mov
cli
push
sub
mov
cmpsb
add
or
xor
and
aam
shrl
shrl
in
fbstp
lahf
mov
cld
aad
inc
js
mov
aas
push
mov
out
lret
jp
test
sub
lret
and
pinsrw
pusha
fldt
xor
or
xchg
jge
andl
aam
aam
pushf
test
pusha
aad
jmpw
cmpsl
out
cmp
inc
jae
jb
push
add
popf
jns,pt
mov
mov
inc
pop
add
lret
fldcw
pop
orb
mov
jmp
gs
mov
cmc
jge
mov
sbb
stos
and
in
push
fwait
lds
and
rclb
fwait
add
jnp
loop
add
jp
push
push
adc
lock
xor
add
sbb
jp
sub
pushf
mov
xor
xor
dec
int3
dec
lea
bound
push
sub
mov
adc
ja
pushf
adc
movsl
pop
test
mov
xorb
mov
and
sub
push
pushf
pushf
icebp
mov
loop
call
or
jg
cmpsl
xor
pushf
inc
icebp
mov
psubusb
mov
xor
mov
inc
sbb
movsb
in
sbb
jb
push
jb
imul
inc
mov
in
ljmp
stos
xor
cmpsb
jno
xchg
add
pop
jo
mov
nop
xor
inc
xor
cwtl
inc
pop
cltd
inc
xor
adc
mov
inc
std
and
loope
fistpll
sbb
add
lods
cmp
push
outsl
hlt
push
dec
xchg
nop
orl
test
lret
jbe
es
aam
mov
jo
mov
inc
cltd
leave
outsl
dec
mov
mov
lcall
xchg
adc
rcrl
and
pop
jecxz,pn
push
sub
movsl
lcall
out
xor
pop
adc
cwtl
loopne
repnz
or
cmpsb
ret
mov
adcl
scas
dec
popa
dec
movsb
in
jl
pop
dec
out
or
xchg
andl
adc
notb
jp
btc
mov
pop
test
xor
shlb
jne
fdivl
shl
pop
xchg
or
in
adc
fisttpll
pushf
neg
psrlq
movsb
mov
adc
jmp
bound
inc
or
test
sub
sub
cmpsb
push
movsb
out
dec
sar
jnp
repz
or
add
mov
mov
add
or
lods
fstps
mov
push
mov
inc
lock
and
aaa
or
movsb
push
sub
cs
ret
ret
lret
mov
dec
or
mov
add
inc
add
dec
inc
lret
mov
mov
fsubs
sub
test
xchg
std
fs
ss
imul
fcoml
sarb
sub
xchg
push
loope
xor
xchg
sub
fmuls
xchg
insb
stos
std
xor
push
test
mov
mov
sub
into
sbb
mov
xchg
inc
inc
pop
add
clc
aam
iret
lds
popf
jne
and
jns
jmp
dec
mov
imull
dec
sub
cmp
filds
jb
xor
jno
into
xchg
xchg
jno
je
andb
sub
out
mov
outsl
sbb
movsb
adc
or
mov
loopne
jo
push
jle
in
lahf
jbe
jmp
add
sbb
sub
jo
mov
dec
xchg
inc
stos
jge
push
mov
mov
inc
and
sti
mov
sub
sub
pop
mov
mov
adc
lea
or
sbb
dec
dec
mov
adc
dec
xchg
adc
ja
in
dec
or
fistl
jle
xor
fistpll
lods
aas
clc
into
xchg
xchg
scas
add
add
add
cwtl
mov
and
xor
push
mov
cmpsb
mov
push
rcr
pop
out
mov
mov
fmull
xchg
outsl
inc
jno
arpl
mov
or
adc
int
xchg
sbb
std
outsl
mov
jno
pop
call
rcll
inc
mov
loopne
pop
or
add
push
pop
push
int
cmpsl
xor
std
imul
jb
cmpb
pop
xor
std
adc
sti
jmp
inc
in
enter
mov
movsl
in
cmp
repz
js
push
icebp
cmp
or
push
inc
cmp
add
test
aam
mov
cmc
mov
movsl
mov
jmp
mov
jae
lret
pusha
adc
jecxz
xchg
sbbb
faddp
xchg
iret
mov
jns
add
mov
pushf
xchg
xor
inc
mov
cwtl
loope
pop
lods
jb
sub
jmp
cltd
ljmp
in
cltd
xchg
xchg
or
in
int
insl
test
jno
aad
pop
jge,pt
cmp
dec
jle
sub
rcrl
mov
out
int3
mov
stc
in
jo
mov
rcl
mov
and
bound
sub
adc
hlt
jbe
cmp
adc
inc
add
mov
mov
std
int
mov
pop
imul
sbb
lret
cmp
push
enter
scas
icebp
mov
ret
push
cmovb
loopne
in
insb
ds
addr16
pop
call
mov
and
loop
or
gs
pushw
cs
mov
mov
dec
sbb
je
daa
pop
jns
add
xchg
ret
adc
cli
in
test
push
gs
xchg
cmpsb
jge
lods
xlat
popa
xchg
insl
inc
xlat
cs
mov
xor
in
data16
call
les
xchg
cmp
pop
push
xchg
js
pop
and
add
xor
shll
dec
add
sbb
lcall
pushf
adc
test
xchg
cmc
gs
es
jge
jp
push
int
stc
ffree
js
int
adc
pop
and
xor
jl
je
jg
and
jp
cs
and
out
into
jmp
fs
jmp
mov
mov
lods
mov
lods
lret
jp
ds
adc
push
xchg
push
js
xchg
jb
loope
pushf
pop
inc
mov
cmp
mov
shrb
aam
rol
divb
mov
adc
mov
lods
inc
pusha
jl
sub
adc
cmp
xchg
insl
sbb
cli
inc
jnp
popa
call
inc
xchg
cmp
aas
jg
lcall
dec
mov
adc
xchg
push
rolb
cmp
xchg
rclb
inc
into
das
cld
mov
sub
dec
jmp
mov
inc
ljmp
cs
loopne
fsubs
and
fiaddl
and
push
sub
cmp
cmpsl
dec
push
js
jbe
cmp
sbb
nop
xor
pop
jbe
jmp
shll
pop
push
xchg
sbb
adcb
or
filds
lods
xchg
into
adc
add
lret
jns
rorb
aad
xor
or
js
mov
xchg
iret
fwait
ss
out
hlt
lahf
out
lcall
push
in
adc
hlt
clc
inc
iret
push
in
mov
incb
ss
in
arpl
es
insb
bound
cmp
scas
jnp
jb
ret
lret
xor
fnstcw
inc
ret
mov
iret
popa
dec
lock
nop
call
ret
es
or
xchg
adc
sub
push
cmpsl
lret
inc
jno
popf
fcom
inc
cwtl
loope
mov
mov
movl
bswap
inc
xchg
pop
mov
cmpsl
in
push
mov
push
and
mov
xchg
ljmp
sbb
rorb
inc
jge
je
xor
outsl
mov
and
and
push
xchg
jne
fisubs
idiv
in
adc
and
sbb
add
faddl
ret
jp
inc
sub
bound
pushf
xor
imul
in
movsb
repnz
and
bound
and
mov
dec
xlat
mov
cmp
sbb
shll
out
std
pop
adc
add
mov
dec
lea
cmp
mov
push
das
inc
in
arpl
rorb
es
jbe
cmp
mov
dec
mov
jne
gs
imul
pop
push
push
mov
imul
cmpsl
sub
sub
push
cs
inc
jle
mov
cmp
mov
test
jns
and
jae
and
in
mov
dec
aaa
bound
xor
test
fisubs
add
into
push
jns
sbb
pop
jae
jns
sub
jmp
mov
in
test
lods
inc
xchg
mov
lds
cmp
pop
sbb
and
mov
mov
jae
repz
xchg
data16
bound
mov
inc
sbb
or
jns
jp
push
ss
aam
dec
out
mov
xlat
jg
inc
addl
mov
movsb
test
jnp
inc
mov
adc
sbb
out
fs
into
xor
out
sub
int3
test
test
add
ret
xor
xchg
push
out
scas
mov
lods
lds
subl
xchg
int3
cli
pop
gs
sub
push
pop
mov
scas
jp
or
jne
pop
into
dec
pop
iret
out
aam
aas
mov
sti
fs
mov
leave
jnp
ret
jecxz
imul
and
pop
nop
movsb
fldt
xor
out
or
jo
push
repz
dec
mov
gs
dec
add
stos
push
es
xchg
test
cmp
sbb
aam
mov
dec
push
cmp
dec
cltd
xor
sub
ror
aas
int3
xchg
repz
add
push
adc
xor
outsb
xchg
mov
scas
xchg
cmc
push
int3
pop
push
cmc
inc
sbb
pop
or
fstl
das
mov
pusha
cmc
sbb
add
jg
inc
out
cmp
rcll
dec
dec
das
mov
inc
lds
fimuls
fcomps
cmpsl
dec
out
fnstenv
mov
int3
or
mov
pop
cli
add
inc
nop
shll
popf
push
sahf
cmc
or
into
pop
mov
mov
sub
cmpsb
mov
in
insl
xchg
arpl
jae
ret
movb
mov
jns
and
sub
in
loope
mov
mov
mov
mov
dec
stos
jge
mov
inc
mov
pusha
cwtl
mov
stos
dec
data16
push
add
repz
mov
mov
dec
and
inc
jnp
sbb
in
sub
add
adc
and
cmp
popf
je
jb
jmp
cmp
sbb
xor
outsb
lds
lds
nop
iret
testb
push
cmp
lcall
ja
xchg
mov
xor
and
sub
sbb
outsl
sahf
push
rcrl
jle
fcoml
ret
aam
mov
jecxz
in
mov
cs
pop
lock
xchg
test
mov
sbb
and
fwait
xchg
leave
xchg
dec
mov
add
add
dec
dec
movsl
fcompl
nop
sbb
dec
jmp
popf
xchg
iret
call
add
mov
pop
pop
das
jb
xor
dec
hlt
adc
sti
add
sub
aad
ficoml
sub
xchg
mov
mov
adc
addb
adc
pop
cmp
imul
ja
ret
add
fcmovne
sub
pop
sbb
dec
in
sarb
mov
inc
xor
add
pop
lcall
pop
ja
xchg
cmpsb
cs
inc
orl
pop
mov
imulb
lods
addr16
dec
inc
sub
icebp
push
add
shr
mov
into
jns
decl
pop
mov
rclb
mov
dec
in
test
stos
test
or
mov
ret
repz
sub
outsb
push
fistps
icebp
int
mov
out
sbb
pop
mov
cmp
cmp
test
xor
inc
movsl
jle
mov
push
xchg
and
jae
cmp
or
in
push
adc
loop
cmp
inc
push
mov
sbb
imul
lods
aaa
push
cmp
pusha
out
add
lret
and
arpl
jae
ret
lret
test
mov
mov
nop
mov
clc
pushl
mov
add
fcom
pop
inc
cmc
adc
mov
xchg
insb
loope
scas
adc
lcall
test
in
popf
push
cmc
leave
and
enter
mov
dec
pop
mov
imul
out
decb
adc
cmpsb
or
scas
jae
add
test
hlt
mov
shrb
push
stos
addl
sbb
in
out
mov
pushf
pop
sarb
mulb
inc
adc
add
add
sub
scas
lods
stc
xchg
push
xor
xor
jg
jae
inc
xchg
sub
popa
pop
cmp
nop
cmp
cli
sub
add
dec
int3
mov
pop
insl
aas
imul
add
jmp
ja
roll
xorl
or
push
mov
repnz
ja
xor
cmp
nop
push
lcall
or
sub
xor
icebp
pop
jg
sub
mov
sub
test
mov
push
in
pushf
aad
dec
dec
loopne
or
dec
dec
xor
aam
ja
rcrl
cmc
fs
lea
or
out
push
jg
sbb
sahf
and
inc
cltd
dec
jb
subl
xor
sbb
sub
inc
mov
pop
cmpsb
div
mov
imul
jle
add
push
inc
stos
adc
lea
jo
out
dec
mov
rcl
test
jg
icebp
cmp
mov
div
pop
xor
and
and
bound
pop
loope
lret
jecxz
xorb
inc
sbbb
std
mov
xor
sar
cmc
cmpl
or
popf
loopne
xchg
ret
sbb
shlb
add
pusha
mov
mov
incl
ss
mull
jbe
clc
scas
ret
inc
lds
mov
cli
push
pop
xor
emms
xor
clc
pop
in
inc
fadd
icebp
lahf
jmp
cli
ss
pop
js
mov
out
repnz
adc
mov
inc
xor
mov
dec
pop
push
outsl
pop
adc
les
arpl
jo
dec
pop
pop
std
loopne
lods
mov
and
cmpsb
nop
outsl
push
push
popf
movsb
mov
jae
sub
pop
ret
push
jae
out
fadds
mov
xor
xchg
sub
push
cmpsb
fdivl
push
pop
stos
pusha
inc
mov
push
jae
jb
sbbl
mov
pop
jecxz
xlat
or
icebp
test
xor
sarb
or
mov
mov
inc
fwait
push
jno
adcl
inc
sub
stos
cmp
cmp
xor
icebp
jmp
shl
frstor
cltd
xchg
stos
sub
cmp
and
mov
push
pop
incl
xchg
jecxz
sarl
sbb
test
hlt
or
xorl
stos
dec
imul
sahf
add
xchg
mov
xor
inc
pop
dec
xor
and
in
xor
mov
sbb
cmpsb
xchg
das
adc
fsubs
leave
adc
cmp
lret
sarl
push
and
mov
push
hlt
xor
and
out
inc
test
pop
inc
iret
mov
jecxz
clc
stos
out
mov
ret
mov
clc
and
xchg
sub
sub
jle
sti
and
cmpsb
mov
popl
rcrl
loopne
jecxz
cwtl
xlat
dec
sub
pop
pop
jle
sahf
jae
out
sub
cmpl
test
aam
cwtl
shlb
xor
pop
lods
nop
clc
dec
add
scas
mov
ficoml
clc
sub
cli
imulb
fsts
nop
shll
xor
mov
xor
sbb
nop
mov
jl
adc
cld
adc
bound
push
mov
inc
lods
stos
aam
cmp
in
mov
dec
xchg
xor
mov
jo
add
fsubs
jno
dec
cmp
mov
sti
cmp
xor
popa
stos
mov
cli
out
jmp
adc
outsl
in
mov
sbbl
in
clc
jmp
mov
or
jmp
jp
in
cwtl
mov
jo
mov
cmp
pop
jmp
lods
mov
shlb
cli
xor
not
out
call
adc
mov
clc
jmp
cld
cld
lret
or
dec
dec
mov
fdivrs
mov
pop
inc
or
jl
pop
fldz
cmp
add
jno
xchg
lods
sbb
cwtl
test
jne
imul
movsl
int3
test
ret
add
icebp
loopne
adc
mov
mov
fistpll
xchg
add
ja
ja
rcll
dec
mov
push
lods
cli
sub
sbb
addb
push
jne
fs
rorb
sub
pop
mov
xchg
adc
aas
aaa
cmp
sbb
cmp
xor
popa
mov
mov
fdivs
push
cli
mov
sahf
adc
jmp
pop
jae
push
push
sbb
inc
and
loopne
leave
pop
repz
fwait
pop
add
mov
popa
loop
ret
mov
push
and
xchg
jle
pop
sbb
push
popf
push
add
or
xchg
add
aam
pop
inc
loope
cmp
or
pop
adc
mov
sbb
inc
lock
cld
les
dec
movsb
xchg
or
rol
sub
dec
inc
add
pop
push
push
inc
push
in
cmc
leave
cmp
icebp
xchg
mov
or
jns
pop
shr
and
data16
sbb
dec
mov
jl
ja
icebp
dec
in
lea
or
add
loop
aas
fs
push
gs
fucom
mov
aaa
or
arpl
adc
lods
adc
mov
std
add
dec
cltd
or
push
addr16
call
xor
and
xor
push
jbe,pt
loopne
push
mov
scas
insb
cmp
push
ja
adc
iret
ja
loopne
loop
imul
cmp
fdivrs
sub
aad
jnp
repz
lods
cmp
scas
sub
dec
add
jae
scas
rcll
jecxz
or
lds
cmc
mov
mov
fisttps
sbb
sarl
push
mov
pop
rcrb
adc
mov
sub
mov
cltd
or
sub
aam
mov
lds
mov
jb
call
adc
pop
xchg
in
test
xchg
mov
fnstenv
jl
js
lods
lods
bound
and
adc
lahf
stos
dec
add
dec
mov
shr
lcall
hlt
sahf
fadd
push
insl
push
enter
push
gs
and
push
xor
stos
in
jge
sbb
cltd
add
aam
inc
fistpl
popl
lock
push
xchg
lock
lock
ja
scas
test
cld
call
dec
lret
dec
and
aam
repnz
inc
xchg
pop
push
fldl2t
mov
imul
inc
xchg
lods
rcrl
jecxz
mov
push
lret
adc
mov
ds
pop
stos
pop
cltd
dec
fs
adc
loope
inc
jl
dec
push
les
enter
jmp
aam
fildll
and
mov
test
jg
fcmovnbe
lea
jmp
cmp
cmp
cmp
gs
std
lahf
jno
push
jns
ss
loope
ljmp
dec
xor
popf
sbb
adc
test
scas
notl
in
gs
andb
arpl
into
subl
mov
fsubs
cmpb
pop
pop
pop
shll
cmp
out
pop
imul
sbb
add
ja
psubsb
dec
xor
push
sub
inc
push
pop
push
sub
mov
vandnps
test
rorb
bound
call
lock
insl
sahf
fstps
mov
or
lret
loopne
and
fsubrs
inc
aas
fadd
xchg
mov
mov
jp
bound
aaa
cmp
sbb
lods
scas
ja
add
fcompp
fldcw
lea
flds
pushf
inc
jp
bound
loopne
ss
test
add
repz
movsb
mov
inc
addr16
add
sub
icebp
aaa
sub
push
movsb
cmp
inc
or
enter
push
out
and
sub
jg
inc
mov
mov
add
bound
mov
test
icebp
jo
xchg
mov
test
es
cwtl
paddw
imul
insb
push
push
cmpb
jg
mov
outsl
fcomps
div
push
sahf
adc
imul
xor
test
js
hlt
dec
lret
jecxz
clc
inc
daa
mov
lret
movsl
and
or
sub
add
jmp
insb
hlt
ret
stc
sub
mov
xor
popa
xor
xchg
jmp
icebp
dec
fcomp
cs
lret
loop
aam
int3
or
jmp
inc
mov
lds
adc
jmp
ja
ss
adc
adc
mov
pop
dec
push
mov
ljmp
into
jnp
dec
mov
sbb
jle
insb
fbstp
mov
add
repz
icebp
repz
ret
test
push
inc
pop
xchg
fs
sbb
sahf
pop
or
mov
or
jns
mov
sub
sbb
clc
out
pusha
in
aam
aas
out
in
cwtl
test
dec
mov
test
xor
fildll
fildll
sbb
sbbl
cmp
jle
insl
mov
push
rcr
mov
add
mov
cltd
imul
scas
test
mov
adc
clc
out
std
pop
jnp
in
outsl
les
pop
and
lahf
push
fists
inc
jmp
pop
adcb
pushf
pop
xlat
adc
jne
cld
lods
test
push
ja
xor
enter
push
in
in
pop
lahf
test
clc
mov
jp
loope
imul
cli
or
dec
jnp
int
push
leave
xor
sbb
jecxz
insl
adc
dec
aas
pop
xor
nop
mov
rclb
add
push
in
lds
cmpl
fimuls
jg
fs
and
jne
sub
dec
loope
sti
icebp
jecxz
adc
cmp
adc
xor
cmp
and
dec
xor
jg
lock
pop
cmp
mov
dec
jnp
mov
mov
jno
mov
push
xchg
push
loopnew
clc
mov
imul
dec
aad
mov
push
xor
push
in
sbb
nop
xchg
and
mov
push
pusha
test
xor
rcrb
leave
push
call
and
std
lcall
pop
cmp
inc
rorb
mov
lahf
cli
leave
sbb
mov
insb
gs
xor
adc
sar
sub
aad
enter
adc
js
cmpsl
and
inc
rcl
dec
xchg
mov
xor
mov
push
lds
jo
push
lahf
test
pop
push
mov
cli
push
ja
lcall
das
mov
mov
mov
xor
or
daa
xchg
push
mov
mov
push
andb
or
andl
into
call
xor
lcall
xor
pop
roll
ss
loopne
adc
aaa
loopne
jns
pop
pop
xchg
sbb
jno
jl
ds
xchg
or
push
cmp
xor
push
push
fadds
xchg
out
push
jg
in
cmp
rorb
mov
sbb
mov
ljmp
je,pt
scas
nop
std
pop
arpl
cmp
sbb
jl
cmp
insb
lds
push
sub
pusha
cmc
mov
outsl
sub
adc
push
push
ja
and
push
sbb
jg
push
pop
rorb
sub
push
mov
inc
pop
jp
pop
and
mov
mov
mov
mov
jno
lods
in
add
decb
dec
push
xchg
mov
stos
push
test
cmp
and
xchg
aas
xor
in
adc
int
fistl
in
inc
pop
mov
inc
pop
cmp
icebp
jecxz
inc
fidivl
mov
cmp
shl
add
inc
pop
nop
rcrb
cwtl
sbb
add
inc
push
testb
pushf
les
daa
js
scas
lret
xchg
xor
aam
cs
cmp
pop
sub
movb
imul
add
mov
popa
mov
xor
in
pop
fwait
or
inc
shr
and
test
mov
and
push
jnp
cmp
aad
out
mov
xchg
mov
hlt
sbb
in
mov
mov
outsb
pop
cmp
xor
test
or
icebp
les
roll
mov
dec
mov
pop
or
adc
cmpsl
cmp
mov
lods
sub
mov
cmp
pop
shl
mov
jl
ss
cmp
out
imul
repnz
inc
inc
xchg
ret
loop
jle
shrl
mov
les
push
lcall
xor
adc
and
popa
jecxz
mov
mov
and
dec
adc
adc
ss
repz
push
sub
mov
sahf
jns
inc
daa
mov
push
jle
sarb
rcrb
xlat
sub
jo
clc
and
and
pop
cltd
dec
mov
in
jns
rcrl
dec
push
stos
gs
and
lret
add
stos
inc
lahf
mov
sub
mov
adc
mov
inc
in
test
inc
mov
fimuls
push
mov
repz
pop
orb
mov
sub
in
xchg
sbb
inc
inc
aaa
mov
andl
jl
test
mov
lock
test
loope
lret
pop
fidivs
pop
sbb
and
xchg
mov
in
xor
insl
dec
sti
loop
movsl
and
pop
icebp
xchg
mov
or
dec
push
mov
jo
ret
lods
push
sbb
pop
jno
aad
sarl
xor
pop
hlt
pop
mov
add
cmp
insl
shr
lea
addl
sbb
jnp
in
cmp
out
inc
les
push
and
arpl
sub
subb
pop
out
mov
lods
mov
ret
int
pop
jge
call
enter
adc
aam
out
leave
shlb
pop
adc
sbb
jp
jle
cwtl
sub
fidivrs
pop
mov
idivl
aas
add
mov
mov
scas
mov
push
cli
je
scas
or
je
xchg
dec
out
push
or
inc
sub
lds
push
sbb
inc
fstl
jp
std
sub
lret
shrl
push
js
sub
adc
sbb
inc
iret
sbb
fimull
mov
lock
push
xchg
scas
jbe
push
pop
push
rdmsr
or
adcl
nop
nop
jne
add
into
into
push
or
push
push
in
push
imul
out
aas
mov
int3
int3
sbbl
mov
adc
xor
imul
jns
lahf
fwait
dec
xchg
push
jne
ss
push
or
mov
inc
lods
sbb
xchg
push
rcll
inc
mov
notl
outsb
adc
lods
mov
inc
aad
jge
inc
pusha
sarb
fldcw
mov
push
mov
sahf
add
xchg
add
or
mov
bound
aaa
fbld
dec
rcl
cmpsl
les
sbb
push
pop
pop
mov
test
sub
sbb
jne
push
inc
jp
jp
mov
dec
punpckhwd
xchg
mov
and
pop
or
mov
cwtl
jmp
push
sub
and
pop
js
push
jge
jno
scas
cmp
lahf
mov
inc
cmp
dec
mov
insb
aaa
loop
lods
dec
leave
daa
push
lcall
jl
adc
jle
stos
out
es
pop
add
push
aam
nop
jmp
cmp
clc
mov
out
imul
mov
rorb
je
xchg
or
fcomi
push
movsb
cs
inc
ret
cltd
idivl
ss
cmp
std
inc
stos
adcb
stc
jge
je
addr16
dec
insb
sbb
andb
cld
xor
xchg
lea
adc
aaa
inc
imul
xchg
dec
fstpl
iret
clc
xchg
or
inc
push
adc
push
out
andl
insl
mov
and
mov
push
dec
push
into
cmpsb
add
pop
or
sub
sbb
fiadds
sbb
dec
mov
fstp
test
jo
sub
push
notb
lods
jl
in
les
jno
or
sub
cli
out
out
cli
aas
sub
shlb
fldenvs
push
daa
shll
mov
lds
sub
in
sbb
loop
and
movl
mov
mov
adcl
push
jae
hlt
push
mov
mov
mov
push
movb
xchg
imul
jae
mov
push
push
lret
push
iret
jl
mov
sarl
mov
fcomp
subb
scas
mov
cmp
mov
sti
sbb
fisttpl
jo
pop
pop
rcrl
loope
mov
mov
fwait
pop
pop
repnz
inc
mov
insb
cld
rorb
adc
jb
inc
pop
xchg
mov
xor
std
and
fwait
add
std
out
lds
sub
shr
jnp
jae
sub
jo
or
and
mov
jne
fwait
gs
sti
lahf
mov
shlb
adc
lahf
cwtl
lret
mov
in
jmp
push
std
pop
add
popf
out
add
cwtl
cltd
cltd
mov
sbb
and
and
mov
shlb
cmp
mov
cmp
rcrl
fs
jg
pop
ja
mov
mov
leave
leave
mov
push
shrl
test
inc
ljmp
add
cmp
aas
cmp
dec
std
add
mov
stos
daa
outsb
mov
mov
add
neg
rclb
adc
dec
push
xlat
ds
cmpsb
ja
fistl
in
sbb
dec
push
cli
and
inc
jnp
pop
dec
jo
mov
aaa
inc
mov
inc
mov
aam
iret
push
repnz
filds
popa
push
and
imul
adc
mov
and
dec
ljmp
call
repz
gs
inc
je
dec
push
clc
pop
aad
dec
or
rcll
cmp
push
mov
in
cmp
incl
outsb
repnz
inc
inc
imul
xor
dec
daa
into
fwait
mov
mov
in
or
mov
add
dec
push
jae
mov
cmp
jg
loope
aad
icebp
mov
mov
jbe
mov
scas
stos
cld
cmp
ljmp
fwait
sarb
int3
lcall
cmp
ja
sbb
test
fldt
jno
add
fldt
lcall
dec
arpl
xor
sti
xor
lock
jle
pop
out
xor
dec
decl
pop
adc
mov
aam
inc
mov
sub
add
mov
aaa
jg
or
dec
jg
imul
js
jg
frstor
inc
jbe
pop
rep
mov
les
jbe
aad
shlb
cli
ret
rolb
xor
mov
xchg
jl
lods
icebp
into
push
ja
fcomps
sub
sahf
adc
stos
imul
jns
mov
clc
ss
push
pop
loope
ja
lds
push
sti
mov
aad
sarl
sbb
fsubr
mov
inc
lock
mov
xor
outsl
adc
gs
rcrl
push
rcrb
ret
stos
popf
inc
lock
pop
enter
lock
aad
jge
jg
cmovb
xor
sti
xor
loope
aaa
inc
pusha
sub
ja
neg
mov
gs
dec
cmp
in
mov
push
fcomi
mov
js
xchg
scas
mov
aad
jno
popf
imul
or
js
add
jae
fsts
mov
pop
lret
cmc
or
pop
test
outsl
mov
ffree
lock
insl
xchg
mov
mov
jbe
mov
push
mov
cld
std
mov
or
fisttpll
mov
jno
lcall
test
cmp
pushf
cs
outsb
and
in
fsubl
mov
inc
sbb
shrl
mov
add
push
or
out
cmp
bound
cltd
xorb
lock
mov
adc
aad
lods
mov
sub
movl
or
sub
divl
fsubrs
stos
je
jae
in
arpl
sahf
ret
jmp
lock
adc
test
aas
aas
stc
xor
push
add
sbb
movsl
ljmp
adc
jmp
cmpl
and
cltd
mov
repnz
pusha
pop
jl
stos
into
fwait
sbb
jnp
and
stos
fstl
adc
and
mov
and
add
rcl
push
sti
mov
adc
pushf
pusha
mov
sub
sub
mov
jns
jmp
add
cmc
and
nop
std
mov
jae
pop
mov
aad
loop
xchg
mov
jbe
dec
je
ficoml
add
loopne
mov
popf
mov
loop
test
daa
push
subb
out
dec
ds
jle
mov
popa
fadds
jae
pop
popf
out
mov
and
xchg
cld
mov
pusha
aam
cli
loopne
inc
aaa
or
mov
and
jb
scas
mov
xor
bound
and
and
negb
and
stc
inc
push
repnz
fdivr
cmpsl
in
imul
inc
pop
lcall
mov
orl
push
sbb
and
xchg
mov
hlt
fbstp
imul
or
xchg
cltd
mov
les
inc
xchg
sar
jns
dec
popf
nop
pop
and
add
das
rcll
orl
and
xchg
mov
cld
mov
add
sbb
push
outsb
jns
clc
test
mov
push
ds
pop
ljmp
popa
pop
push
mov
sbb
shlb
imul
mov
and
mov
jp
imul
ljmp
sahf
fwait
mov
push
clc
cmp
push
pushf
in
das
test
xor
push
and
push
sbb
push
add
pushf
rclb
mov
or
call
xchg
daa
mov
scas
arpl
or
cmp
xor
ja
pop
aad
ja
xor
aas
and
xor
inc
std
push
cwtl
xchg
pop
shrl
dec
mov
add
les
iret
mov
jbe
adc
in
enter
int
stos
lods
cmc
xor
mov
test
pushl
in
jns
pusha
je
movsl
test
jae
lret
or
leave
adc
and
movsl
add
test
lods
sub
cmp
mov
jnp,pn
push
jo
aaa
dec
in
in
fadds
iret
sbb
cmp
jmp
mov
xlat
das
sbb
iret
sub
dec
sbb
xor
adc
dec
in
js
cltd
pop
cmp
mov
fwait
lret
popf
stos
adc
stos
lea
inc
adc
and
jmp
xlat
loope
jg
fdiv
cmpsl
xchg
pop
and
clc
xchg
ret
inc
or
cmp
nop
fdivp
icebp
mov
das
std
cmp
dec
shll
mov
jb
cli
jno
aas
stos
arpl
and
mov
dec
xor
dec
js
push
call
dec
int
cmp
mov
jmp
fsubl
jecxz
jg
adc
jl
loopne
ret
or
outsl
jg
mov
pop
or
inc
and
add
ja
bound
mov
inc
dec
dec
cmpsb
outsl
xor
push
cld
pop
and
pop
xor
jle
ja
and
push
sub
daa
scas
xchg
jecxz
test
enter
mov
sub
pop
mov
mov
inc
aaa
pop
lret
add
cli
sub
sahf
sub
mov
cmp
pushf
in
insb
or
push
mov
push
in
loopne
cltd
sarb
repnz
rcll
jb
rorl
xor
jbe
and
cli
icebp
push
repnz
cmp
xchg
sub
leave
cmpsl
and
jne
and
push
loope
fdivs
push
xorl
sarl
jno
push
mov
repz
out
into
test
cmc
fnstenv
lea
test
aad
or
mov
mov
xor
nop
stc
jae
jecxz
or
lods
movsl
out
ss
push
inc
scas
ja
mov
lcall
xchg
and
mov
xchg
aaa
jb
push
ds
cmc
insb
ret
nop
sub
js
lods
ja
mov
inc
cmp
push
and
mov
std
lods
roll
out
aas
sbbb
sub
ret
aad
adc
xlat
xor
fcom
loope
imul
adc
rorb
push
jecxz
insl
cmp
dec
pushf
push
push
movsl
mov
dec
fyl2x
fcmovu
adcl
pop
or
and
inc
stos
mov
insb
mov
add
out
ficompl
call
clc
leave
dec
jae
cs
add
jb
movsl
push
sbb
mov
enter
adc
inc
into
std
xchg
cmp
xchg
fnstenv
shl
cmp
insb
mov
cmpsb
or
jne
jae
mov
aam
and
cmp
lret
aas
cltd
pop
inc
xchg
sub
push
inc
pop
test
pop
inc
addb
repnz
jo
les
xchg
add
ljmp
pop
sahf
int3
jl
sbb
fcomip
mov
cmp
push
lods
data16
inc
push
mov
imul
mov
imul
repz
inc
dec
jmp
into
and
cmp
and
pop
rorl
jg
mov
add
out
leave
ds
dec
fistps
cmc
push
jmp
lcall
in
adc
xor
cs
scas
aas
sbb
inc
inc
mov
loop
ss
shll
add
ror
mov
mov
fs
jns
mov
xchg
lds
std
lea
out
inc
adc
pushf
aam
fs
dec
adc
sbb
sub
adc
mov
mov
jne
mov
or
sub
push
xor
sub
fsubrs
adc
cmp
out
popa
sbb
mulb
jns
cwtl
ss
in
not
or
jmp
das
jle
rorl
pop
mov
or
subl
push
or
fmull
cmp
xorb
xchg
cmp
xor
dec
mov
shll
mov
lcall
jp
or
jge
std
mov
jl
xor
sub
inc
xchg
and
sti
push
fwait
push
aam
int3
pop
int
mov
and
sarb
ror
push
jne
addr16
std
loopne
mov
and
pushf
or
pushf
rorl
cvtps2pi
mov
jns
ljmp
fdivrl
jns
insl
xchg
filds
mov
dec
xchg
lea
ja
xchg
xor
sahf
jns
lock
mov
mov
ret
outsb
mov
add
and
aad
mov
xchg
arpl
add
inc
mov
outsb
mov
mov
daa
dec
jl
in
insb
cmp
sub
bound
cmpsl
in
mov
xor
int
test
out
cmp
cli
mov
dec
xbegin
fstp
cmpl
mov
fisubl
iret
xlat
aaa
aad
das
sbb
pop
frstor
xchg
or
in
pop
sub
cmp
lods
dec
mov
pop
rcrb
jl
push
loop
dec
scas
in
sub
pop
xor
loopne
cwtl
test
xchg
push
fdivrs
adc
jne
popa
or
add
insb
inc
hlt
adc
sbb
adc
dec
je
cmp
xchg
nop
lret
mov
addr16
scas
gs
sub
pop
outsl
fbstp
push
xchg
iret
push
int
sub
or
fildll
dec
and
adc
daa
dec
jl
stc
mov
mov
jb
outsl
mov
pushf
fdivrs
cs
lret
mov
mov
iret
lea
popf
mov
add
mov
fs
test
inc
lcall
xchg
rclb
fcmovu
lcall
or
nop
leave
and
xchg
negl
faddl
bound
jg
mov
push
daa
or
imul
mov
or
andb
out
fists
scas
ja
fcompl
mov
icebp
dec
enter
add
ja
fiadds
add
std
cmp
sub
adc
ljmp
jbe
inc
fstpt
push
cld
dec
jo
rorl
dec
xor
mov
and
push
sbb
out
enter
sti
mov
pop
sti
jbe
ss
ficoms
xchg
bound
jbe
push
outsb
dec
adc
rcr
shrl
or
mov
mov
out
hlt
cwtl
icebp
xchg
push
out
insb
xor
lcall
es
push
test
adc
lret
add
adc
pop
cmp
movsl
in
xor
inc
fsts
lds
in
fcoms
or
or
sbb
mov
add
out
mov
call
cmp
icebp
aam
enter
inc
out
mov
daa
inc
sar
fidivrs
lret
dec
cmovnp
lods
sub
stc
push
adc
inc
cwtl
mov
push
leave
dec
enter
call
pop
repz
sub
add
mov
lods
inc
sub
imul
sbb
enter
cli
fxch
repz
cwtl
ret
fs
mov
push
mov
and
xchg
push
sbb
mov
jns
cmp
popf
push
jle
xchg
loope
xrelease
jmp
ret
jbe
imul
scas
push
mov
nop
cmpsl
or
jge
mov
sub
popa
movsb
cltd
mov
xchg
loope
and
xlat
adc
test
shll
push
lret
les
xor
mov
sub
cltd
add
stos
movsl
es
push
lods
mov
jge
aam
lods
inc
loopne
mov
outsl
pop
imul
jg
clc
or
popf
inc
pop
mov
or
cli
jmp
xchg
push
jo
cmp
cld
leave
mov
adc
push
inc
rorl
imul
fnstcw
pop
mov
out
dec
loopne
inc
insl
push
push
push
jl
cmp
dec
add
lea
dec
shl
aam
sbb
jno
sbb
jne
push
shl
adc
mov
add
outsl
loopne
mov
mov
xchg
aaa
dec
in
add
lret
ja
mov
mov
or
and
sub
mov
out
xor
ss
pop
rolb
ljmp
jne
xor
pop
lods
jae
xor
sub
jne
push
mov
pushf
mov
push
push
or
or
mov
cmp
fwait
lcall
sub
xchg
fs
movsb
dec
loop
bound
add
lods
xchg
or
aas
adc
fnstsw
decb
in
idivl
mov
cltd
pop
loopne
rolb
xchg
cmp
add
and
sub
or
lds
mov
add
aam
mov
mov
lcall
mov
jbe
jbe
inc
and
mov
adcl
outsb
shrb
lret
dec
mov
adc
out
or
test
insl
daa
cmp
xchg
mov
arpl
mov
mov
sub
shrl
jne
out
xchg
sub
in
outsl
idivb
repz
sahf
cmp
add
jg
in
push
mov
and
hlt
inc
lods
das
inc
movsl
sti
cs
dec
xor
mov
movsl
insb
gs
pop
adc
cltd
icebp
test
or
mov
xor
or
jmp
jge
push
jle
repz
sub
loop
xchg
dec
pop
jno
sti
ret
cmp
fildll
mov
imul
and
mov
enter
fdivl
push
gs
leave
adc
cld
hlt
xor
aam
xchg
cmpsl
popa
sbb
mov
mov
add
push
dec
jmp
jne
fs
in
inc
pushf
add
adc
daa
test
jge
cmp
into
cmc
xchg
push
testl
jl
sbb
sbb
rcl
xor
push
addr16
sub
add
fldt
cmp
sub
sbb
adc
xchg
mov
dec
int3
inc
in
jge
mov
fucom
outsb
and
nop
push
push
and
mov
jecxz
sarb
xchg
icebp
dec
sti
ja
adc
es
into
test
jmp
dec
pop
movl
in
xchg
outsb
aas
addr16
pop
mov
pop
loopne
push
and
sarl
inc
xchg
mov
xchg
mov
mov
iret
into
dec
xchg
or
pop
dec
xor
stos
add
popa
and
int3
insb
popa
fisttps
shll
in
dec
xor
rcrl
push
lcall
fdivrs
pop
fdiv
sbb
js
sti
sbb
cmp
dec
dec
xchg
lods
sbb
inc
das
xlat
or
xlat
ret
sub
push
add
push
inc
add
push
cwtl
adcb
sub
sbb
inc
out
xor
cli
lahf
imul
loopne
insb
mov
daa
sbb
adc
daa
and
pop
push
lods
mov
movsl
sub
cmc
push
add
xorb
insb
push
inc
cmc
push
dec
adc
out
data16
out
test
or
dec
jne
into
int
lods
push
into
insb
repz
inc
add
stc
ja
cmp
jmp
jl
push
into
xchg
mov
xchg
xor
cmp
push
arpl
push
movb
xchg
cwtl
leave
imul
sbb
xorb
mov
imul
sub
aaa
adc
adc
inc
adc
push
fimull
in
loopne
xorb
rcr
sub
inc
shl
jbe
fidivl
pusha
dec
or
in
push
push
loopne
or
inc
aaa
mov
jae
pushf
sub
jp
sub
dec
iret
mov
sbb
popa
and
mov
orl
pop
ds
dec
in
popa
icebp
aad
or
xchg
mov
pop
dec
dec
hlt
xor
jg
adc
mov
in
movsl
orl
fsubrl
loopne
lret
mov
and
lds
mov
into
dec
cs
or
cmp
mov
mov
lock
sbb
sbb
stos
arpl
inc
and
repnz
mull
xchg
mov
int
fistpl
and
pushf
add
gs
or
lret
shlb
jecxz
aas
mov
mov
push
jp
and
gs
scas
xor
and
imul
into
stos
or
xor
jge
jb
fs
lret
aaa
jp
dec
movsb
xchg
pop
jns
dec
xchg
mov
jns
xlat
dec
in
mov
jp
mov
jp
shl
aaa
adc
cmpb
adcb
or
add
jl
mov
incb
mov
xchg
gs
sub
clc
push
sbb
sbb
sub
lcall
cli
loop
loopne
aaa
mov
add
jb
insl
shlb
xchg
lods
pop
addb
mov
cli
fs
dec
outsl
xchg
jae
test
negl
sub
repnz
insb
mov
and
cmp
mov
add
inc
shl
out
rorl
pop
jle
call
inc
push
stos
test
call
jecxz
adc
jg,pn
jnp
xchg
or
pop
cmpsb
mov
popa
xorb
or
loopne
inc
pop
cmp
or
mov
mov
mov
cltd
push
sbb
sub
adc
cmp
sub
push
test
roll
xor
mov
lock
aam
mov
notb
pop
aam
lea
xchg
adc
ja
and
fdivrl
icebp
inc
cld
loopne
xor
in
shl
mov
fidivl
dec
adc
aas
jecxz
test
hlt
sub
fdivr
add
xchg
test
inc
mov
pop
sahf
and
adc
jns
rcrl
mov
and
push
adc
lret
inc
lcall
nopl
pop
mov
cs
int3
cmpsb
inc
add
lea
pop
imull
and
lcall
les
shll
js
dec
dec
add
test
dec
sbb
stos
jae
ja
add
or
lods
pop
sti
ret
ret
in
dec
div
call
pop
xorpd
out
push
jecxz
fwait
inc
lret
inc
sbb
imul
leave
inc
mov
loop
in
push
js
into
xor
repz
addr16
jne
dec
aad
lods
sbb
pop
adc
xor
dec
xchg
xlat
repz
out
scas
or
ss
aam
sbb
repz
mov
pop
pop
and
testl
xchg
cmp
ret
push
jbe
pop
and
insb
aas
cmp
shll
es
or
xchg
push
popw
popf
jb
ljmp
xchg
and
mov
call
sbb
dec
nop
cltd
xlat
sub
push
push
fbld
lcall
movsb
mov
ss
pop
lea
in
adc
jle
fs
movsb
push
dec
daa
in
sbb
outsl
fisubs
inc
bound
jl
call
xchg
inc
jne
xchg
sbb
test
filds
pop
mov
push
jb
scas
or
add
rcrl
jne
cmpsb
ljmp
int
out
cmp
mov
je
ljmp
xchg
sbb
pop
lret
ret
sbb
lret
mov
mov
cmp
and
imul
arpl
sbb
xorb
insl
bound
in
and
enter
or
push
push
cltd
dec
pop
adc
xchg
test
xchg
repnz
jno
call
arpl
dec
or
fmull
mov
mov
xchg
popa
pop
daa
pop
nop
or
xlat
adc
cwtl
mov
out
xlat
xchg
movsb
ficompl
cwtl
insb
mov
std
dec
jg
fidivs
popf
and
fsubrl
cmp
inc
sub
or
jge
movb
push
lods
mov
push
mov
pop
sbb
adc
mov
leave
xor
repnz
and
inc
xchg
mov
add
fsts
mov
ficoms
xchg
imulb
mov
aam
outsb
mov
fisttpl
pop
adc
fs
pop
push
idivb
cmpsl
push
loop
pop
lahf
jns
popa
add
fidivrs
call
adc
int
xchg
mov
mov
mov
shl
and
mov
pop
dec
bound
aas
stos
adc
jo
cltd
mov
inc
push
mov
mov
mov
jp
cltd
push
ret
add
jmp
jecxz
sbb
xlat
aam
test
call
insb
mov
je
pop
cmpsl
lret
ffreep
je
imul
pop
xchg
test
ss
or
clc
into
jle
ret
push
xchg
lret
jnp
sbb
rcl
aaa
fsubl
sbbl
inc
or
notb
loopne
loope
mov
arpl
int3
cs
inc
cmp
mov
dec
test
or
push
sbb
movsb
test
push
out
push
jne
inc
mov
xchg
sub
out
dec
inc
gs
rolb
adc
cmpsb
mov
loop
imul
icebp
pop
in
push
test
test
ret
cmc
inc
sbb
test
fsts
add
addl
xchg
inc
pop
pop
push
test
sahf
mov
enter
addb
mov
xor
in
out
pop
scas
outsl
popa
jl
mov
xchg
push
add
add
sbb
sbb
addr16
adc
testl
mov
dec
cmp
cmpxchg
xchg
inc
sbb
mov
or
nop
popf
push
repz
mov
cmp
push
in
out
or
sbb
mov
lea
push
push
xor
out
in
push
arpl
adc
mov
js
daa
inc
notb
sub
mov
pop
cmpsl
ret
sub
sarl
add
loope
fcoms
inc
dec
popf
push
sub
mov
pop
push
and
shrb
les
inc
ja
jecxz
xchg
add
out
mov
int3
in
lahf
cmpsb
pop
sub
clts
push
ret
mov
cmpsb
sti
dec
mov
fdivp
fsub
fs
iret
sbb
push
repnz
inc
lcall
fs
cs
sub
pop
xchg
shlb
mov
mov
test
aam
xchg
sbb
and
fwait
pop
mov
jns
mov
in
xchg
lea
jbe
xlat
arpl
sbb
ds
jbe
in
mov
xor
gs
xchg
pushf
scas
mov
hlt
lods
aas
mov
dec
cld
xor
stos
inc
fs
xlat
or
pusha
imul
fdivrs
fmul
clc
call
xchg
repnz
push
xchg
push
adc
mov
fsubr
adc
cli
push
inc
out
inc
adc
xchg
add
jg
loop
push
push
push
out
into
cmc
push
mov
sub
add
int
test
add
ret
push
filds
cmp
adc
push
pop
lods
dec
icebp
out
pop
adc
rolb
pop
outsl
in
in
and
popf
push
mov
dec
pop
mov
cmp
outsl
cmpsl
cmpsb
mov
mov
xor
lret
test
push
icebp
push
xchg
test
outsl
adc
movsl
and
pop
add
repnz
std
push
cwtl
mov
push
mov
or
inc
fistl
pop
sbb
adc
int
addb
jg
fidivrs
jbe
jge
add
insb
jbe
ljmp
jmp
pop
dec
jecxz
inc
jecxz
push
mul
mov
or
insl
out
push
push
dec
outsl
and
and
pand
mov
in
mov
fwait
dec
jb
jb
wrmsr
call
and
fmulp
pop
enter
sti
and
xchg
insl
icebp
dec
dec
or
jge
inc
mov
jo
xor
and
push
movsl
mov
pop
or
popa
subb
loope
fldcw
and
inc
sbb
cld
adc
pop
fnop
add
pop
sahf
xchg
insl
out
shlb
hlt
pop
mov
in
fisttps
add
push
jne
adc
or
pop
popf
lret
fs
ret
adc
setge
test
xchg
outsl
and
push
movsl
jns
push
aaa
scas
inc
scas
lcall
rsqrtps
sub
dec
test
xchg
insb
fcmovnbe
aas
in
sub
lods
or
xlat
dec
sti
pop
jp
jne
inc
icebp
adc
movsb
popf
fsubl
cmp
sbb
jge
xchg
sbb
pop
mov
cmc
inc
in
adc
mov
pusha
or
sub
add
icebp
xchg
rolb
inc
push
or
pop
sbb
ror
adc
movsl
mov
adcl
add
cmpsl
mov
int3
data16
inc
push
adc
test
and
pop
je
addl
sub
xor
xchg
xor
mov
sbb
jbe
popl
cli
inc
lahf
or
lods
or
xchg
bound
insb
stc
dec
jge
dec
sbb
addr16
icebp
lahf
jb
nop
xor
jo
inc
xor
aaa
pusha
sbb
adc
mov
popf
fidivrs
lock
cmp
cmp
push
in
sahf
jmp
sahf
bound
mov
lods
stos
popf
pop
adc
cld
jg
push
dec
mov
cmp
jns
xchg
pop
ja
dec
popf
and
pushf
dec
mov
mov
pop
ja
jmp
sub
fists
xchg
out
repz
dec
stos
outsl
add
xchg
dec
jbe
stos
mov
pop
pop
mov
push
outsl
fwait
mov
lock
aas
xor
movsb
stc
imulb
pop
mov
jge
xor
roll
cld
sti
negl
push
into
fistl
dec
pop
jge
mov
test
sub
idivb
addl
std
std
enter
rep
sbb
inc
divl
pop
test
or
aad
sar
jge
pop
sti
enter
shlb
in
xor
mov
jb
stc
cmp
hlt
cli
icebp
cwtl
sub
sub
xor
imul
mov
mov
lods
sahf
push
aaa
out
mov
imul
insl
stc
lret
mov
mov
cmp
mov
mov
mov
dec
or
out
add
sahf
loop
movb
cli
dec
sahf
cltd
xchg
lods
scas
mov
or
sar
in
ja
push
punpcklbw
in
push
push
mov
sbb
aas
in
and
lock
mov
dec
jp
push
mov
cmc
lea
div
xchg
dec
push
xor
push
adc
ss
in
pop
icebp
push
adc
testb
repz
cli
leave
xchg
popf
outsb
mov
bound
xchg
ret
loop
in
add
popf
insl
fisttps
ror
shlb
cltd
mov
jecxz
jge
icebp
or
or
ret
xor
fmul
orl
arpl
mov
stos
mov
sti
xor
shrl
cmp
out
jg
out
dec
scas
and
cltd
mov
sahf
mov
cmp
add
adc
or
iret
test
fildll
and
lock
ffreep
pop
or
or
sbb
mov
xchg
cmp
and
leave
push
es
pop
inc
test
out
fmull
jbe
jl
shrb
mov
jnp
mov
and
icebp
and
mov
mov
in
push
adc
in
out
mov
add
or
push
mov
outsb
mov
sbb
or
push
add
and
lods
xor
in
or
mov
adc
daa
adc
mov
push
xor
mov
pop
xor
add
popf
mov
adc
cwtl
cmpl
jl
adc
dec
das
mov
dec
pusha
push
mov
aam
loope,pn
insl
repnz
flds
sub
mov
scas
out
pop
test
sbb
pop
into
mov
cmp
es
mov
mov
xor
mov
push
and
mov
std
jecxz
cmp
xchg
add
fs
push
cs
das
xor
test
xchg
or
jbe
jmp
dec
sub
and
or
cmpsb
xchg
mov
cli
mov
push
idivl
inc
fisubrs
ret
cmpsl
jg
cmp
lods
jno
ds
dec
dec
inc
adc
orl
in
mov
xchg
rcrb
sbbb
sub
pop
sub
stos
or
outsl
sti
add
std
or
aaa
cmp
sti
push
das
sbbl
mov
je
test
fwait
jecxz
lret
adc
das
sub
int
fbstp
xchg
rolb
insl
adc
dec
mov
into
adc
jmp
lods
dec
fstpl
cmp
push
mov
into
lcall
divb
mov
in
movsb
enter
xchg
js
mov
or
add
adc
cmpsb
dec
lock
insl
jnp
dec
ds
in
jp
std
test
jl
mov
jnp
sbb
or
add
repz
xchg
jle
dec
mov
popa
fnsave
aam
ja
or
iret
popa
xor
mov
out
and
xor
sbb
out
in
je
lcall
es
pop
popf
mov
stc
add
push
mov
ja
into
pop
ds
mov
xchg
push
mov
aad
push
fadd
out
insl
into
push
lods
fsts
or
mov
xor
int3
scas
add
mov
pop
push
push
mulb
int
stos
xchg
cli
mov
xor
and
imul
jnp
jnp
mov
and
int
arpl
hlt
add
add
mov
cmp
sub
shrl
dec
ret
cmp
orb
dec
xorb
xor
jnp
mov
aam
jecxz
xor
xchg
pop
mov
insb
mov
lea
xchg
stc
pop
cld
jge
inc
aad
rorl
dec
das
outsb
sbb
lock
cmpsl
jae
out
aam
adc
mov
daa
mov
js
imul
adc
push
adc
mov
pushf
push
inc
int
imul
jl
sub
lret
popa
inc
lcall
cmpsl
jle
xchg
mov
fcoml
push
lock
mov
sbb
int3
pop
sar
dec
aas
lds
and
push
push
imul
sahf
dec
push
cltd
cmp
mov
lds
popf
les
movsb
loop
scas
push
dec
cli
fucomp
cmc
rclb
cmc
mov
and
hlt
pop
inc
mov
xor
andl
lahf
mov
jbe
push
cmp
sbb
es
int
and
test
loopne
int
jg
mov
push
dec
popa
stos
pop
sbb
lock
int
push
xor
cmp
push
mov
jbe
sahf
sbb
and
sahf
jae
xlat
pop
push
pop
and
sarb
adcb
inc
dec
cld
inc
cmp
in
add
inc
xchg
fcmovnu
mov
imul
inc
xor
xlat
xchg
loopne
dec
imul
dec
out
mov
mov
and
mov
xchg
aad
push
jnp
or
mov
adc
or
ficoml
in
mov
ret
stc
ret
lret
lcall
mov
pushf
mov
push
push
repz
push
mov
fists
dec
push
rcrl
or
ja
fidivrl
dec
pusha
adc
adc
push
dec
stc
mov
mov
sbb
cmpsb
dec
inc
and
adc
nop
pop
mov
push
push
leave
sbbb
lahf
push
mov
jl
stc
add
mov
into
jle
pop
sub
iret
xor
scas
pop
cmpsl
add
arpl
insb
pop
sarb
or
pop
daa
or
pop
xor
int
repz
int
mov
cmp
in
gs
arpl
dec
adc
test
outsb
dec
stc
les
fdivrs
stc
adc
sub
enter
sub
and
idiv
icebp
push
push
sbb
xchg
lock
outsb
mov
int
pop
dec
jno
popa
cli
lds
lret
pusha
mov
xor
or
jle
dec
fidivrl
sti
rcrb
pop
movb
lret
cwtl
rolb
xchg
cmpb
fimuls
out
test
add
aad
inc
push
test
mov
inc
adc
mov
cmc
xchg
or
mov
cmp
or
mov
xchg
pop
shll
push
mov
aam
sbb
mov
int
dec
imul
lret
cmc
jae
push
loopne
out
jle
stos
pop
jecxz
xchg
js
cmp
loop
lea
mov
mov
ljmp
fs
dec
mov
mov
cmp
adc
mov
out
icebp
mov
ja
out
fcmove
sbb
push
mov
inc
xchg
adc
stos
mov
pop
add
pop
mov
fistpl
bound
jbe
repnz
jno
lods
adc
xchg
das
ljmp
cmp
cmp
adc
or
je
repz
sub
xor
in
mov
shlb
or
cmpsl
mov
loope
push
orl
xor
push
mov
mov
rorl
xor
sub
mov
push
test
inc
sbb
fadds
mov
jno
push
ret
jnp
bound
daa
dec
nop
adc
mov
push
mov
ds
bound
in
std
sbb
xchg
stos
sub
int3
cmp
out
lods
sub
mov
mov
pop
enter
icebp
test
aad
adc
and
popf
push
sub
cld
jae
inc
movsb
out
hlt
push
push
xchg
adc
jge
int3
lret
insl
xchg
aad
fs
rorl
sbb
data16
je
jmp
aas
rcrl
daa
je
xor
mov
xchg
cmp
push
push
es
lea
cmp
xchg
inc
arpl
dec
sbb
loope
or
iret
leave
pushf
mov
insl
add
in
aam
test
stc
iret
inc
ljmp
in
add
lahf
sbb
test
fwait
leave
gs
push
dec
js
sub
sub
cmp
fstpt
repz
leave
adc
out
inc
xorb
cmp
jo
shlb
adc
shl
push
data16
add
repnz
rol
jge
sub
ja
in
out
repnz
imul
jnp
pusha
pop
mov
fbld
xor
or
push
lock
xor
insb
cmp
add
fs
push
loopne
push
out
xchg
leave
add
xor
adc
mul
ja
inc
add
or
incl
sub
cmp
scas
and
xchg
mov
push
into
push
xchg
jo
xchg
mov
sbb
push
push
and
cwtl
cmp
lret
jle
setbe
popa
dec
jne
xchg
lcall
or
std
push
imul
cmc
mov
les
es
cmp
mov
in
clc
mov
jecxz
push
jg
rcll
adc
fistpll
imul
xor
xor
sbb
adcb
fwait
dec
xchg
shll
outsl
testl
into
ja
outsb
dec
lods
dec
nop
xchg
mov
fistl
push
cmp
mov
dec
push
ds
in
sbb
iret
xchg
xor
xchg
add
or
cmpsb
fs
inc
push
fbstp
in
stos
mov
push
lea
and
test
je
jecxz
test
pop
mov
xchg
jno
xchg
jp
inc
rcrl
xchg
mov
fnstenv
lods
adc
aad
es
mov
pop
inc
adc
int3
mov
mov
stos
mov
jns
mov
ret
dec
fdivp
orl
and
movsb
sti
stc
stc
push
rolb
test
xor
les
cmp
adc
sub
fwait
test
cmpsl
push
mov
add
sub
mov
mov
andl
outsb
pop
loop
mul
mov
xchg
add
xor
xchg
das
mov
lds
outsl
jmp
push
mov
loopne
aam
fs
dec
add
data16
pop
adc
and
sbb
jb
rcrb
dec
cwtl
cmp
dec
orl
xchg
sahf
push
cmpsl
movsb
pop
xchg
scas
cmpsb
movsb
insb
insb
pop
xor
icebp
and
lds
adcb
shrl
cmp
xor
loopne
jne
jne
cwtl
pushf
ja
xchg
imul
push
cld
or
cmp
inc
jmp
push
mov
mov
movsl
scas
cli
fwait
notb
aas
add
mov
les
inc
jmp
add
pop
call
mov
daa
inc
add
push
adc
outsl
push
stos
outsl
and
adc
push
insl
loopne
icebp
or
xchg
inc
aas
inc
test
inc
mov
pop
outsb
inc
xchg
loope
cmp
or
mov
neg
outsl
push
das
pop
movsl
pop
repz
ljmp
movsb
shlb
inc
stos
pop
mov
les
adc
std
adc
lock
sub
push
scas
popa
popl
movsl
xorl
mov
jp
jne
xlat
sbb
xchg
lock
in
mov
dec
test
adc
sbb
sbb
xor
jne
jmp
dec
rcll
inc
mov
cld
in
iret
adc
mov
add
add
sti
in
sbb
jae
lods
xor
int3
lea
adc
nop
xchg
les
and
add
jbe
insb
fisubs
or
int
xchg
or
popf
test
cmp
nop
popf
sbb
rol
xchg
pop
mov
dec
adcb
or
and
daa
std
xor
enter
stos
mov
mov
int
stc
leave
es
add
int
and
in
les
mov
insl
or
and
repz
cmc
pop
imul
lcall
das
clc
jmp
inc
xchg
jns
out
sbb
cmp
xchg
jmp
out
mov
ljmp
xor
pop
jmp
loop
jne
xor
mov
popf
sub
lret
mov
ljmp
rclb
xor
xlat
mov
test
jb
popf
inc
in
mov
loop
out
test
mov
stos
mov
pusha
ret
das
push
dec
xor
cli
push
add
mov
mov
aas
and
and
or
or
in
mov
xchg
mov
ficomps
jecxz
xchg
or
mov
jae
ds
cmpsl
xchg
add
mov
xor
es
and
lds
aam
iret
out
xor
mov
lock
fwait
repnz
stc
add
xchg
shll
enter
sub
dec
loope
sbb
sub
or
or
add
loop
lds
or
stos
jo
push
out
pop
imul
outsb
xlat
lcall
cmp
or
inc
and
rol
jns
mov
xchg
in
pushf
clc
lock
in
cmp
adc
stc
in
sub
mov
imul
sub
ja
or
dec
dec
jge
sahf
js
outsl
adc
mov
xor
fiadds
pop
popa
xchg
add
xchg
in
ret
add
cli
adc
outsb
sub
adc
sbb
and
xor
faddl
dec
add
out
sbb
je
jns
inc
sub
mov
mov
xor
jb
mov
test
sub
ja
mov
and
out
repnz
cmp
pop
jge
xchg
pop
sub
bnd
xchg
lret
popa
repz
ffreep
loope
lds
inc
inc
shl
adc
xchg
andb
scas
dec
pop
xchg
push
pop
push
xchg
pop
cmpsl
scas
mov
adc
arpl
mov
mov
mov
pop
mov
sahf
push
pop
inc
jb
dec
jo
jmp
pop
add
xchg
nop
outsb
aam
les
int3
jo
push
gs
mov
xor
xor
shrl
into
lahf
mov
mov
add
sub
push
push
mov
pop
mov
in
mov
jae
add
mov
mov
nop
cwtl
mov
fisubrs
ss
mov
punpckhbw
pop
outsl
ds
mov
adc
push
cmp
popa
jle
adc
or
cli
rorb
fidivl
dec
pop
out
mov
jg
xchg
enter
push
or
lret
repnz
or
and
hlt
inc
ljmp
cld
out
mov
xchg
rolb
inc
jb
or
lcall
sub
sub
ja
push
mov
cmpsb
jb
mov
stc
das
xchg
add
mov
mov
les
aas
pushf
mov
jo
mov
lods
lea
inc
push
shlb
adc
pop
push
mov
add
jne
mov
mov
call
mov
xor
and
xor
fdivrl
enter
jg
cmp
and
shlb
dec
data16
cltd
jmp
push
shl
sub
scas
imul
cld
sbb
dec
inc
aaa
cmp
xchg
mov
xor
mov
jne
clc
sahf
mov
jmp
test
add
mov
aad
jp
leave
mov
jg
pushf
int3
cs
scas
xchg
xor
in
xchg
scas
add
outsb
cs
push
test
fwait
cmpsl
hlt
mov
pop
fnsave
adc
cmp
jmp
andb
frstor
mov
ja
push
sub
and
xchg
clc
mov
repz
sbb
mov
jg
push
xor
rcrb
xchg
loopne
push
add
into
btc
mov
jecxz
cmp
jmp
jo
adc
scas
inc
add
cmp
xchg
or
adc
loope
lret
add
leave
mov
mov
mov
shll
pop
in
test
or
mov
icebp
loope
hlt
mov
test
call
daa
add
pop
push
call
jnp
sarl
jne
xor
cwtl
in
dec
adc
test
arpl
inc
pushf
and
add
lret
icebp
dec
pop
dec
lret
popf
sbb
cwtl
lea
mov
out
jbe
push
jge
mov
jmp
jae
imul
sub
loope
mov
enter
aam
mov
inc
xchg
les
lret
jo
jb
sub
sarl
xchg
ss
cmpsb
and
mov
and
sbb
loope
aam
mov
push
inc
push
out
in
rcrb
jnp
or
lahf
jae
lahf
add
dec
test
adc
mov
rcr
xchg
jg
hlt
outsl
outsl
sahf
fwait
test
sub
sbbl
mov
jns
cmpb
shrl
icebp
and
push
cltd
aaa
xor
mov
stos
add
add
arpl
sub
jle
and
out
inc
js
stc
jl
sbb
mov
push
mov
jp
call
bound
icebp
loop
jns
adc
pushf
pop
mov
dec
push
call
cmp
clc
cmp
mov
test
lods
adc
ffree
in
dec
in
pop
jle
mov
fldt
aas
jae
adc
lahf
mov
or
sub
fldt
dec
push
mov
mulb
xchg
mov
insl
xor
insb
int3
lahf
push
out
adc
sbb
addl
mov
popf
xor
inc
cs
push
add
xchg
xchg
mov
sub
inc
and
sub
iret
dec
cmp
or
mov
fcoms
inc
pop
mov
jnp
add
js
adc
inc
insb
std
jge
lcall
jbe
pop
cs
push
dec
jno
xchg
xchg
fwait
and
jp
aam
add
mov
scas
outsb
or
sbb
xchg
xchg
dec
push
adc
mov
icebp
sub
sub
mov
dec
xor
js
fcomip
iret
dec
mov
add
cli
imul
adc
mov
push
sbb
movsl
jp
cmp
mov
sbb
lds
jno
inc
loopne
cmc
mov
sub
ffree
mov
pop
inc
pop
add
pushf
cltd
lods
mov
clc
pop
jo
push
cs
mov
in
lret
in
repnz
pop
popf
shr
add
xchg
pop
inc
cmp
out
lcall
mov
cmpl
dec
js
sbb
insl
mov
mov
test
sbb
daa
fwait
shl
add
cmp
arpl
mov
xlat
fwait
pop
and
xlat
scas
test
push
pop
xor
cmpsl
mov
dec
xchg
mov
in
sti
lret
repz
mov
mov
lea
les
sbb
pop
fnstsw
and
add
add
int3
jmp
inc
inc
pop
or
pop
fbstp
dec
or
jbe
mov
in
scas
mov
xchg
mov
dec
fisttps
popf
pop
insl
lahf
and
sub
jmp
repz
shr
outsl
or
leave
add
mov
jecxz
lock
pop
mov
test
sti
sahf
push
adc
pop
inc
lcall
das
in
xlat
xor
pop
inc
cmp
fmull
lahf
and
xchg
cmpsl
das
mov
ret
in
sbbb
out
enter
bound
sub
aaa
mov
repnz
mov
mov
inc
mov
pop
pushf
jge
push
sbb
addl
pushf
sbb
push
pop
sub
cwtl
ret
add
xor
mov
jae
xchg
xchg
sbb
inc
ljmp
pop
shlb
repnz
mov
add
lret
jb
pop
sahf
mov
xor
pop
mov
fbstp
rorl
inc
jo
cmc
xor
sub
mov
or
push
jp
jnp
sbb
stc
jnp
lret
sub
jl
lcall
jb
jmp
push
aad
movsb
in
or
cmc
insl
mov
clc
pop
and
mov
pop
mov
es
cmp
pop
insl
leave
popa
clc
push
or
outsb
lea
cmpsb
pushf
icebp
aam
jecxz
imul
mov
dec
pop
in
cmpsl
xchg
dec
push
insl
movsb
mov
testb
jle
push
pop
loope
mov
mov
and
fistpl
fsubrs
inc
inc
xchg
cmp
jg
js
pop
dec
dec
aad
cmp
cmp
pop
and
stos
jg
adc
movsl
pop
push
mov
lcall
or
xor
call
and
lods
jns
fimull
add
push
xorl
inc
les
sbb
call
xchg
sbb
inc
xlat
mov
gs
sti
fs
rorl
or
inc
fidivrl
mov
mov
mov
sub
fdivrl
inc
cmp
jecxz
cmp
inc
lahf
add
or
lcall
xlat
out
fcmove
jmp
inc
mov
cmpsl
mov
pop
sbb
adc
int3
push
fidivl
dec
inc
lods
aaa
mov
xor
jns
jbe
fldl
and
push
ss
in
int
inc
shrl
imul
pop
push
or
pop
push
dec
jge
or
in
sub
cli
or
add
mov
and
sub
jmp
imul
mov
rcl
rol
xor
or
jb
pop
faddl
mov
mov
or
add
test
scas
lahf
repz
xor
ret
dec
mov
insl
movsl
sub
or
jne
dec
inc
fldt
sbb
push
inc
push
daa
les
push
popa
outsl
test
sub
repz
mov
pop
xchg
cli
ret
out
hlt
inc
dec
adc
insb
inc
call
dec
aas
dec
stc
notl
ret
lret
cmp
nop
sub
jnp
in
lahf
mov
xor
loopne
jbe
in
repz
push
or
sub
xchg
pop
xor
cmpsb
fldt
call
cs
movsb
mov
xor
inc
add
pop
imul
pop
inc
loope
adc
into
stc
add
adc
mov
cmp
test
pop
cmpb
shlb
stc
dec
xor
inc
out
cmpsb
pop
cli
push
cmp
inc
jno
scas
dec
xor
xor
dec
adc
push
ror
push
jns
mov
repnz
cmp
movsb
fsubl
dec
sbb
arpl
adc
sbb
nop
adc
mov
sub
xchg
das
sub
movsl
leave
inc
pop
imul
fs
mov
inc
jbe
cld
loop
pop
push
cld
test
dec
mov
out
pop
mov
xlat
in
gs
pop
ds
mov
add
jecxz
push
gs
addr16
add
lahf
cld
cmp
cli
mov
cmpsb
fdivp
test
pushf
in
aas
ds
mov
adc
sahf
mov
cmp
add
push
jns
fwait
ss
test
js
data16
int3
and
lret
shlb
cs
popf
fs
jns
scas
outsb
test
sahf
sub
inc
xchg
mov
pop
adc
xor
cmp
rep
out
xchg
push
mov
in
xor
adc
test
inc
bound
ret
xchg
adc
jmp
aaa
loopne
insl
mov
arpl
jb
cmp
pop
inc
hlt
and
mov
mov
push
ret
jl
lods
cmp
lods
cs
cs
dec
lret
cwtl
push
es
dec
jno
cli
ficoms
movsb
int
aam
push
loope
mov
mov
fcmovnbe
dec
aam
test
ds
arpl
push
test
lret
int
imul
sub
cmp
pop
and
addr16
pusha
test
mov
rcrl
sbb
fsubrp
das
add
popf
movsl
inc
call
fcomi
sbb
sub
scas
mov
mov
aas
xchg
pop
jle
jo
sub
mov
mov
dec
cs
sbb
sub
pop
sar
mov
aam
mov
cmp
fstp
adc
push
jmp
inc
adc
scas
adc
int3
ds
aad
xchg
mov
or
mov
fidivs
loopne
bound
mov
xor
jbe
movsl
lds
sub
dec
jge
fdivl
or
outsb
sbbb
int3
punpcklwd
gs
lods
push
lret
dec
adc
pop
cmpsb
mov
jge
inc
lods
dec
jno
mov
filds
out
lahf
outsb
mov
cmp
pop
fnsave
jne
lock
jo
sbb
mov
stos
sbb
inc
and
pop
jo
jp
jg
jp
jne
lods
mov
mov
or
call
sbb
mov
shlb
sub
mov
out
cmp
in
daa
mov
insb
aad
push
dec
sub
in
pushf
jle
imul
xchg
and
roll
pop
mov
mov
fdivr
lahf
in
iret
js
lret
mov
xlat
sub
jno
lcall
push
std
lods
or
in
dec
mov
dec
lcall
push
add
mov
popf
cltd
aam
pop
mov
stos
mov
and
out
adc
xchg
lahf
mov
stc
sub
push
ret
bound
mov
sbb
xchg
xchg
fnstcw
mov
pop
push
leave
stos
lods
bndstx
mov
shl
adc
shll
jb
xchg
outsl
sbb
xor
mov
jg
push
call
jecxz
xor
aad
lock
inc
xchg
fs
pop
loope
imul
pop
push
enter
mov
fistpll
mov
xor
sti
mov
insb
movsb
sub
sbb
xor
test
rorb
mov
inc
push
push
sub
popa
aam
jecxz
cmc
dec
mov
inc
xchg
rclb
lret
fs
in
daa
ret
jge
ds
in
cli
lahf
in
frstor
add
cltd
adc
push
add
push
xchg
mov
int
jle
jmp
fstpt
cmpsb
sub
cwtl
mov
or
js
pop
dec
imull
int
lcall
xor
bound
lret
in
arpl
subps
insb
jge
xor
push
dec
les
mov
out
das
insb
divl
test
rcrb
cmp
xor
std
sub
test
ljmp
xchg
jmp
idiv
mov
sbb
push
dec
cmpsb
jne
lcall
adc
test
cwtl
pusha
rcl
nop
mov
xchg
lods
mov
mov
pop
das
sti
sar
or
cmpsl
cmp
mov
scas
jge
jnp
nop
test
insl
xor
out
rcrl
fwait
mov
jl
adc
ret
in
jmp
pop
mov
push
outsl
nop
inc
mov
xchg
in
dec
pusha
inc
push
decl
mov
fisubl
or
xlat
pop
pop
ret
or
test
push
jmp
jle
inc
repz
adc
loopne
cmc
andb
loope
clc
pop
jmp
fcoms
xchg
mov
aam
mov
cli
adc
inc
xchg
push
lods
mov
call
xlat
jns
push
push
lds
lret
jae
in
pusha
add
int
sub
loop
or
lretw
xor
ja
ljmp
inc
sub
std
adc
jbe
es
bnd
and
cmp
inc
or
push
popa
out
mov
gs
jg
outsb
lcall
lsl
push
adc
outsb
xchg
sti
std
adc
out
arpl
pushw
loopne
pop
jae
xchg
and
lods
dec
ljmp
or
loop
test
pop
aaa
jg
pop
xchg
add
add
cmp
test
cmp
sub
jbe
std
mov
std
lods
mov
jb
adc
mov
push
cmp
repnz
cltd
cmp
xor
enter
int
cld
mov
stos
sti
nop
xchg
pop
cwtl
pop
cmpb
scas
enter
int3
shr
mov
xchg
pop
sub
stos
popa
mov
fisttpl
idivb
dec
jg
mov
stc
dec
cmp
imul
push
out
inc
sbb
cs
stos
es
jae,pn
fs
mov
sub
and
cli
adc
dec
mov
mov
push
and
pushf
mov
and
sbb
daa
movsb
insb
call
rcrl
scas
leave
lea
fs
xor
stos
mov
fimuls
mov
pusha
fstpt
loop
pop
or
scas
lds
lea
in
push
jg
mov
repz
push
int3
inc
loope
push
sub
test
add
push
sbb
bound
xchg
sub
inc
sub
test
cmp
adc
rcrb
xorl
xchg
fstpt
out
xchg
mov
mov
mov
or
call
shrb
mov
cmpl
inc
stos
add
xlat
push
xchg
dec
sub
xlat
mov
sub
xchg
inc
inc
mov
cmpsl
pop
xchg
cwtl
xorl
or
add
clc
dec
cmpsb
inc
fs
mov
js
icebp
mov
arpl
rcr
popf
and
sub
stc
movsl
adc
push
xchg
sbb
add
and
push
nop
data16
iret
outsl
out
sub
ret
cli
fwait
sbb
add
cmp
jle
repnz
adc
shr
xor
push
push
mov
pop
xchg
fbstp
add
push
push
clc
mov
cmp
xor
pop
add
aaa
pop
in
cmp
sub
xor
popf
das
push
shll
and
cmp
roll
repnz
mov
cmp
pop
das
fldcw
aam
or
mov
jmp
cltd
sbb
add
jmp
inc
sbb
in
push
andl
add
mov
and
aaa
mov
dec
inc
les
inc
xchg
andl
int3
mov
enter
dec
cmp
stos
test
inc
inc
or
outsb
inc
ljmp
jmp
xchg
es
xchg
cmp
sub
gs
stos
cld
mov
mov
inc
jge
and
cltd
cmpsb
mov
push
dec
xchg
stos
sub
push
jmp
cltd
cltd
test
add
sahf
test
dec
test
nop
imul
sub
rcrl
stos
adc
pop
ret
mov
adc
pop
mov
xor
xchg
andb
jmp
xor
test
inc
pop
jnp
lahf
push
and
fistpll
dec
push
pop
mov
push
xor
mov
hlt
add
rcll
and
out
test
sub
call
les
sti
cmp
cmp
lods
inc
rorb
movsb
test
xor
sbb
dec
fildll
into
mov
ret
movsb
jns
push
jo
lahf
sar
cmc
cmp
or
popa
ds
cld
xor
into
addr16
xchg
fbld
xor
movsl
test
es
dec
cmp
es
dec
lds
clc
push
sti
pusha
daa
jno
sub
cmp
test
mov
push
mov
mov
xor
xchg
mov
data16
arpl
in
or
push
mov
jl
dec
hlt
fistps
inc
lcall
ds
sbb
stc
mov
cltd
push
cmpl
dec
jle
pop
lret
sbb
xchg
sub
push
sbb
mov
sbb
inc
or
xchg
xchg
mov
out
pop
adc
mov
adc
sub
jge
add
repnz
inc
leave
xor
pop
dec
and
movsb
inc
xor
cmc
test
addl
shr
sub
pushf
stc
dec
inc
scas
adc
daa
pop
fsub
mov
fs
xor
sbbb
sub
add
push
pop
add
loope
push
ficoml
shll
sbb
stos
aas
cmpsl
mov
cld
dec
cmp
add
mov
sbb
aad
mov
out
adc
sub
cmp
aaa
scas
je
jl
pop
sbb
jne
shlb
jl
lock
gs
iret
jns
mov
cmc
push
sbb
cmp
movsw
jmp
dec
call
push
data16
dec
and
cltd
insl
or
sbb
push
lds
dec
add
test
ss
xchg
jne
mov
mov
sti
xor
cmpsl
fs
ffreep
mov
cs
lcall
int3
data16
lahf
popf
enter
into
push
lahf
and
or
cmp
jb
sbb
inc
jecxz
popf
das
scas
push
xchg
mov
xchg
fcomi
xchg
movsl
push
mov
les
xchg
out
pop
ja
adc
subl
sub
pusha
jbe
daa
mov
iret
andl
int3
lea
loop
jmp
mov
scas
xchg
xchg
out
jne
ret
pop
pop
sub
mul
pop
cmpb
sbb
rcrl
mov
jae
adc
mov
dec
mov
jge
dec
daa
int
xor
add
xor
roll
out
xor
adc
call
xchg
stc
stc
scas
xchg
fstl
ret
jp
ljmp
mov
das
insl
xchg
bound
adc
sub
loope
or
inc
gs
cwtl
popa
sub
fwait
stos
push
popa
int
loope
imul
mov
mov
int3
enter
cwtl
fxch
stos
or
or
xor
xor
cli
push
ja
sbbl
aaa
jl
outsl
push
inc
sub
int3
lock
and
adc
mov
sbb
jmp
xor
mov
not
pushf
or
jnp
xor
bound
mov
test
lcall
sbb
jmp
jno
addr16
cltd
xchg
jle
pop
add
aad
cwtl
lods
mov
jbe
pop
cmp
fnstsw
dec
mov
sub
aas
leave
negl
dec
dec
getsec
mov
dec
jo
es
and
std
mov
ja
ja
fildl
cld
or
xchg
bound
aad
imul
lahf
xchg
int
ja
stc
popa
xchg
pop
or
aad
push
mov
push
int
mov
cwtl
inc
int
mov
or
in
mov
jnp
hlt
enter
xchg
ljmp
lods
xlat
movsl
lcall
ret
fildll
mov
scas
sub
push
inc
int
xor
lret
add
bnd
scas
fcomp
nop
pop
in
sarl
xor
or
mov
jno
call
mov
insl
inc
call
mov
hlt
test
sub
xor
push
nop
mov
dec
fnstcw
int3
inc
xchg
adc
xor
xlat
and
aaa
jbe
add
ret
add
insl
mov
dec
popl
or
insb
cmp
mov
and
mov
mov
jmp
mov
dec
or
jge
imul
test
push
xor
lahf
jp
in
cs
add
pop
ja
rclb
mull
and
rolb
pushf
dec
outsl
adc
or
add
gs
cmp
inc
pop
lahf
or
pop
rclb
inc
sahf
cltd
js
outsb
adc
pop
mov
js
xchg
sub
aad
sbb
aam
inc
lea
jnp
cmpsb
je
mov
shlb
and
push
push
xchg
xchg
xor
fisubl
int3
enter
inc
clc
sbb
mov
jbe
push
jno
xchg
popf
mov
jbe
push
cmp
iret
icebp
ret
mov
push
sub
push
ret
cmpsw
int
popf
call
pop
lds
lcall
int
insl
int
lods
aam
push
mov
adc
push
inc
mov
test
push
sbb
into
push
add
jg
out
data16
cld
mov
dec
scas
jl
mov
inc
movsl
lcall
out
out
fiadds
cmp
int
push
cli
fstl
int3
outsb
mov
imul
pop
push
fwait
clc
leave
xor
push
mov
mov
test
ficomps
std
xor
mov
stc
mov
notb
mov
jae
addr16
movsl
or
jne
rcr
pand
test
mov
xorl
adc
scas
adc
cmp
mov
ret
clc
cltd
push
out
dec
enter
xor
test
mov
add
add
pop
pop
inc
aam
sub
fdivs
fildl
push
jnp
and
pop
sbb
popf
in
inc
mov
xchg
sbbl
pop
int
aaa
stos
fcoms
jnp
pop
mov
add
lret
rorb
jg
enter
xor
adc
xchg
fisubrs
and
lret
repnz
insb
mov
stc
and
iret
pop
pop
push
stos
cmp
bound
iret
int
sub
xchg
and
sbb
jmp
fwait
cmp
dec
jo
fdivl
shrl
push
pushf
rclb
xlat
mov
mov
adc
push
adc
sbb
lahf
rclb
ficompl
xchg
or
jnp
sub
cmp
repz
shll
jbe
addr16
movsl
mov
inc
daa
sbb
ret
movsl
pushf
xchg
fucom
dec
push
ja
pop
sbb
data16
xchg
sub
in
jnp
cld
cmp
scas
cmp
pop
adc
jp
cmpsl
lds
push
jns
pop
sbb
hlt
int3
xchg
lret
data16
xchg
push
jno
jg
mov
mov
in
aaa
jmp
pop
test
dec
xlat
add
andl
leave
incb
xor
add
mov
popf
push
mov
mov
sbb
pop
mov
cmp
inc
lret
nop
sbb
int3
push
subb
add
aaa
in
jmp
dec
jae
stc
inc
mov
adc
adc
rcll
dec
xchg
pop
fadds
les
xchg
sbb
cmp
lods
push
clc
scas
xor
xor
flds
mov
xchg
mov
push
xor
xchg
fadd
lcall
xor
add
mov
call
and
mov
inc
cltd
sbb
stos
adc
ljmp
push
pop
jbe
out
or
xchg
and
leave
xchg
cli
mov
addb
mov
aad
movsl
or
pop
mov
push
test
sbb
push
push
or
mov
stos
scas
jbe
sbb
push
out
xlat
sbbb
lret
in
rolb
mov
and
cmc
sbb
xchg
dec
push
into
imul
cld
mov
adc
xchg
mov
in
imul
jmp
insl
push
add
lahf
mov
pop
ljmp
dec
mov
std
movsl
push
idivl
push
sbb
add
jg
stos
inc
add
out
js
sbb
imul
adc
add
lahf
and
xor
lods
vpsubd
inc
lret
pop
ja
rcrb
shrb
add
cmp
add
sbb
out
pop
loope
es
fadds
rcl
mov
cmp
mov
ret
push
or
aas
fstpt
into
sbb
push
cli
cld
cmp
sub
add
mov
clc
push
push
sub
mov
outsb
fisttpll
mov
push
push
mov
pop
add
sahf
and
push
push
lret
xchg
push
sbb
push
and
adc
cwtl
inc
enter
adc
int3
inc
std
popa
stc
leave
repz
out
les
add
loop
sub
inc
sub
mov
addr16
sbb
cmpsl
sbb
mov
movsl
lock
pop
test
jne
cmpsl
push
fucomip
cmpsb
push
hlt
mov
shlb
push
push
movsl
cmp
push
xchg
cmpsl
loopne
jg
hlt
adc
cs
mov
clc
jo
add
out
scas
pushl
or
ror
ds
push
xchg
nop
fwait
cmp
addr16
call
roll
sbb
ret
lret
mov
lods
jmp
mov
aaa
or
mov
jg
jbe
repnz
xchg
adc
cmp
push
or
cwtl
je
jl
and
nop
leave
inc
jmp
xchg
cwtl
hlt
cmp
popf
mov
loopne
cwtl
call
jecxz
jge
mov
sub
or
std
jge
rolb
inc
jns
jb
jb
aad
and
jbe
jnp
mov
js
and
sub
std
jo
lock
gs
bound
enter
mov
idiv
dec
sbb
test
adc
rcll
cmp
or
movsl
out
pop
icebp
mov
fcoml
sti
out
mov
in
inc
jne
xchg
out
bound
sbb
insb
icebp
ja
xchg
mov
fisttps
test
movswl
adc
insl
jo
or
jg
jl
aas
jo
sti
add
cmp
subl
aam
insl
jp
jne
test
popa
push
insb
inc
sub
shl
arpl
iret
nop
stc
ja
cmpsl
stos
push
push
cmpsb
sbb
iret
loope
fnstsw
jo
fwait
xorb
mov
clc
sub
ljmp
adc
into
sub
jns
add
stos
loope
dec
daa
push
out
adc
mov
cmc
inc
andl
mov
push
je
lods
in
pop
ljmp
push
adc
ja
fwait
fs
testl
cmp
test
xchg
popf
fldcw
adc
pusha
sti
lds
dec
adc
xchg
cmp
hlt
or
outsl
popf
add
je
push
std
scas
movsl
test
fisubrs
pop
push
out
mov
ret
xor
xchg
jl
jno
loope
mov
fildl
stos
and
xchg
adcl
stos
dec
jge
in
int
or
inc
mov
hlt
out
mov
insb
mov
sub
int3
push
add
imul
add
test
inc
and
movsb
dec
int
notl
mov
mov
pop
jp
lret
lods
push
inc
mulb
insl
es
or
addb
loopne
or
dec
xchg
xor
int3
cmpsl
lret
or
push
int3
and
jmp
jp
or
ficompl
mov
mov
loope
mov
enter
or
mov
adc
sti
sub
mov
aaa
je
sub
out
enter
lret
fnclex
int
xor
mov
xchg
stc
or
mov
cmpsl
filds
cmpsl
adc
iret
xchg
add
mov
test
sub
dec
mov
int
lea
and
add
cmp
scas
jecxz
mov
insb
les
enter
sub
cmp
scas
or
pop
subl
sti
outsb
ret
jg
fistps
pop
or
movsl
test
insb
mov
cwtl
mov
jnp
jne
popf
addr16
fucom
call
cmc
loop
dec
outsb
shl
out
add
pop
js
push
xor
pop
pop
or
and
addr16
repnz
push
cmp
aad
mov
jo
aad
nop
add
les
test
inc
xor
call
lods
lahf
mov
jmp
xchg
cmp
dec
jg
out
shr
mov
inc
inc
scas
mov
mov
test
movsl
in
pop
iret
mov
push
mov
sub
lea
jmp
sub
js
mov
or
adc
sahf
or
add
imul
loopne
pop
mov
dec
fnsave
loope
xchg
mov
xchg
nop
or
jne
adc
js
sbb
or
rcrl
mov
and
in
loope
and
push
and
inc
into
sub
cld
in
cld
dec
mov
dec
dec
add
sarb
cmp
sub
xor
insb
sub
and
loop
shll
pop
xor
adc
or
adcl
and
iret
mov
xor
imul
jle
aas
lahf
ret
iret
lock
or
sub
and
sbb
rolb
or
xchg
and
add
or
daa
test
std
in
and
add
xchg
sbb
pop
cld
adc
mov
mov
loope
ror
sarl
roll
adc
sbb
lret
jb
mov
daa
hlt
xchg
mov
fs
divl
cmc
inc
mov
ds
jp
stos
inc
sarl
cltd
or
pusha
xchg
inc
mov
pop
addl
jp
aam
daa
xchg
ret
xor
jns
pop
nop
cwtl
mov
arpl
lret
push
adc
sub
mov
jno
sub
pop
and
push
push
jecxz
enter
inc
clc
sub
jo
sub
xchg
mov
mov
push
cmpsl
mov
xchg
test
or
jp
inc
add
mov
std
mov
rcl
mov
data16
into
leave
popf
enter
pop
inc
mov
addr16
aad
xchg
popf
inc
enter
sarb
lret
dec
jns
sti
imul
cmp
repnz
inc
jbe
mov
scas
sbb
adc
jmp
mov
in
fiadds
test
inc
pop
scas
add
mov
cmpsb
or
push
mov
push
mov
cmc
sbb
insb
subb
adc
fstpl
jecxz
sbb
lods
pop
cmpsb
sbb
out
aas
jecxz
ss
imul
lods
pop
mov
pop
repnz
xor
inc
rcrl
jb
loopne
mov
inc
dec
dec
or
sub
add
aam
push
xchg
inc
and
add
pop
push
loope
call
les
test
pop
xchg
adc
in
pusha
loopne
test
faddl
cmc
cmpsl
push
jle
mov
sub
jp
jecxz
pop
mov
adc
jmp
js
jne
repz
cld
insb
mov
add
adc
les
subl
loope
adc
jle
xchg
xlat
aam
sti
ret
xchg
and
or
jmp
ret
jg
push
in
ret
mov
mov
jno
insb
mov
sbb
sub
add
and
lock
scas
mov
inc
push
add
das
daa
fimull
and
xchg
cmove
icebp
xchg
push
pop
push
jo
xor
fisttps
and
or
fs
lret
mov
in
adc
loope
adc
sbb
shlb
rclb
pop
jle
pop
maskmovq
cwtl
outsl
adc
cmp
lods
mov
ds
xchg
add
xorl
inc
hlt
fisttps
leave
jmp
adc
call
mov
mov
repnz
popa
pop
inc
out
jg
and
xor
jge
cltd
mov
sbb
cwtl
xchg
rorl
fldt
cmp
push
repz
adc
ds
jb
lds
push
es
loop
or
mov
or
jmp
pop
or
sti
les
test
sub
mov
xor
aam
sbb
inc
int
dec
fdivrl
mov
adc
jne
jmp
scas
jbe
fisttpl
mov
cmc
xlat
add
stos
xchg
gs
cmp
cmpsb
mov
arpl
pop
lea
daa
fstl
ss
sti
adc
xorb
jb
scas
and
mov
loopne
daa
pop
add
cwtl
sub
xchg
loopne
popf
or
sub
lods
pop
repnz
hlt
inc
icebp
cmp
xchg
mov
insb
adc
sbb
sub
imul
test
push
cmp
cmp
adc
imul
in
mov
sub
ljmp
inc
jle
outsb
push
xchg
jle
push
cmpsb
jmp
add
cwtl
sub
cwtl
test
cmp
push
imul
stos
xchg
cmp
and
mov
sbb
xchg
jp
lock
adc
movsl
jo
sbbb
push
xchg
lock
aaa
push
push
loope
lods
push
push
xchg
push
xor
push
sbb
iret
or
cmp
ja
sbb
fwait
or
lcall
icebp
push
fiadds
push
dec
int
mov
dec
loope
sub
inc
ret
inc
repz
imul
mov
add
sub
jge
addr16
pop
add
sbb
ss
jne
dec
push
fldenv
rclb
sub
adc
fs
jae
xor
fbld
pop
pop
leave
lods
mov
jg
add
or
je
cwtl
dec
bound
mov
fwait
lds
fiadds
jp
xchg
mov
enter
jbe
jb
mov
xchg
mov
push
loope
out
lea
in
jecxz
iret
push
mov
outsb
lret
jg
push
jo
xchg
scas
stc
cmp
mov
inc
adc
dec
orl
mov
mov
push
jecxz
jmp
cmp
push
jne
nop
mov
mov
out
lods
cmp
cwtl
imul
jnp
mov
mov
enter
or
add
push
mov
loope
fidivl
mov
add
loop
into
inc
hlt
loop
dec
lahf
out
scas
push
mov
or
ds
xor
push
mov
daa
and
je
lods
je
js
test
inc
jbe
jns
jmp
dec
cmp
cmovle
loopne
pop
add
mov
dec
enter
movsl
loope
add
sub
inc
cmpsb
mov
sub
scas
cmp
imulb
add
in
rcll
fimuls
into
mov
xor
jo
movswl
pushf
mov
outsb
leave
icebp
pop
out
add
loope
fstl
fistps
addr16
mov
inc
ret
out
lcall
mov
sub
xor
xorb
in
mov
or
xor
loop
fidivl
sbb
xchg
shrb
cld
fbstp
inc
test
jnp
jne
jnp
pop
stos
and
xor
cltd
push
and
imul
dec
les
mov
xor
dec
imul
push
mov
jne
xchg
repnz
adc
mov
xchg
shrl
sahf
cmpb
or
mov
jno
mov
fcoml
mov
pop
dec
push
movl
and
fs
in
clc
pop
fstl
enter
mov
push
shr
sbb
nop
enter
enter
mov
jp
sbb
inc
sub
jmp
icebp
insl
jle
jg
ficoml
mov
pop
cltd
pop
add
push
cmp
test
lods
int3
push
push
insl
addb
mov
mov
sub
sbb
rorl
movsb
push
test
lret
test
sbbb
loope
mov
or
cld
pop
sub
test
je
lock
jp
out
jg
hlt
test
in
jnp
add
adc
cmp
aaa
or
add
lds
es
mov
fnstsw
sub
mov
or
push
bound
sbb
inc
push
or
push
inc
inc
inc
shrl
pop
mov
lret
jmp
adc
xchg
push
and
add
mov
iret
pop
bound
inc
mov
sbb
sbb
pop
cmp
cmp
inc
xchg
mov
stos
popf
fcmovnb
outsl
aad
pop
mov
leave
aam
pop
js
fistpll
push
sbb
ret
cmc
xor
popf
xor
sbb
xor
xor
or
repnz
jae
lea
jmp
pop
loope
xchg
sbb
jle
xlat
adc
add
out
xchg
mov
mov
and
lcall
loopne
out
and
std
mov
sub
mov
ror
xor
push
inc
jns
jl
popf
inc
push
aad
push
aas
lcall
jne
add
popf
and
pop
jns
insl
jecxz
pushl
and
cmp
out
adc
mov
sbb
daa
mov
and
pop
push
loope
adc
nop
inc
mov
shlb
xor
ficompl
outsb
cmp
sbb
inc
shl
push
leave
inc
or
aaa
es
adc
inc
negl
pop
daa
sub
std
sub
mov
jnp
sbb
push
into
notl
push
cmp
xor
je,pn
int
dec
push
mov
adc
xchg
mov
std
movsb
mov
push
mov
xchg
fildll
or
scas
mov
divb
and
pop
fildll
xchg
out
sbb
in
or
mov
sbb
flds
push
leave
call
daa
add
or
inc
and
sub
adc
or
fs
ja
or
out
ds
adc
cmc
pop
stos
clc
lcall
in
insl
add
dec
pop
mov
adc
lret
push
cmp
mov
jmp
mov
loope
xor
cli
dec
jo
or
or
sbb
xor
movsl
mov
xor
mulps
xchg
add
xchg
out
dec
rol
fsubs
jle
sbb
nop
dec
nop
mov
loope
pop
rorb
loope
add
add
mov
sbb
cmpsb
push
out
push
sbb
repnz
popa
inc
loopne
mov
insb
xlat
xor
jne
test
inc
xchg
add
in
sbb
lock
fs
aaa
push
je
dec
loop
sub
pop
xor
sub
out
fdivrs
mov
dec
fcomip
dec
xor
xchg
out
ljmp
ds
pop
ret
add
fmull
loop
xorb
xchg
adc
fstpt
push
lods
and
xchg
int3
mov
sbb
xlat
cld
pusha
inc
repnz
iret
dec
mov
sbb
out
insb
insl
jg
sbb
adc
addl
and
push
adc
adc
sub
pop
in
push
and
pop
int
bound
push
lods
xchg
sti
adc
fbstp
cwtl
push
jp
xchg
out
shrb
and
push
ljmp
dec
out
sub
jb
push
jmp
test
cmp
cli
and
push
lahf
movsl
dec
loope
jo
or
movsl
scas
das
xchg
popf
rcr
stc
or
ja
push
popa
add
insl
sbb
pop
lahf
mov
rol
in
daa
out
jne
or
add
xchg
xchg
pop
fwait
lods
cltd
in
dec
or
jb
int3
push
jecxz
add
adc
adc
lret
lret
sub
xchg
fisttpl
cmp
shrb
and
inc
in
enter
inc
in
dec
ret
imul
xchg
in
je
popf
int3
jbe
mov
movsl
out
shll
mov
sub
jno
or
ret
jae
and
stos
mov
xchg
ss
xrelease
jns
dec
or
and
fstps
iret
mov
jecxz
xorb
movsl
or
adc
lods
icebp
out
imul
out
cmp
nop
sbb
addr16
push
mov
or
xchg
nop
push
push
imul
xor
lcall
xchg
jns
sbb
cmpsl
fwait
into
aad
mov
lret
and
sbb
cmpsl
nop
xchg
sbbl
testb
out
xchg
lds
rcrl
stos
add
lret
pushf
shll
call
je
arpl
xor
sahf
lods
movsl
mov
cld
sarl
inc
outsl
ret
cmp
cmp
cli
out
divl
mov
gs
cli
mov
cmp
adc
inc
push
stc
sarb
jmp
jl
fcoml
adc
imul
aam
push
mov
inc
dec
divl
dec
mov
roll
cmp
hlt
sbb
aaa
fbld
in
cmpsl
flds
lods
sbb
dec
pop
nop
test
mov
in
cmpsb
or
cltd
mov
xor
push
arpl
jae
aaa
call
sbb
mov
and
push
pushf
xchg
imull
and
aaa
inc
and
imul
shrb
ljmp
push
jb
scas
in
jge
jns
adc
dec
mov
cmpsl
mov
gs
sbb
mov
push
mov
je
sub
sbb
pop
and
xchg
out
sbb
jmp
ljmp
negb
mov
push
sub
loope
je
cltd
jns
sbb
sbb
mov
push
or
add
imul
mov
lds
push
insl
scas
mov
aas
mov
mov
dec
call
daa
clc
out
mov
pop
jmp
cmp
decb
test
push
ret
pop
push
jns
in
js
push
xor
cmp
cmp
les
in
aas
test
mov
outsb
jno
loope
sub
iret
push
jns
insb
in
push
cmp
sub
cmc
or
cmpsb
push
call
gs
push
mov
push
or
jmp
lret
sbb
sub
loop
imul
shll
xlat
sbb
sub
push
jnp
push
fisubl
xchg
les
hlt
pushf
cmp
push
pop
push
pusha
and
inc
mov
jl
and
insb
outsb
dec
pop
dec
mov
dec
add
add
dec
inc
gs
sarb
push
mov
pop
es
call
cs
in
xchg
in
cltd
out
insl
dec
sbb
cmp
jge
out
lret
int3
jnp
jmp
addl
dec
mov
pop
lock
fs
repz
sbb
inc
mov
call
test
out
xor
inc
es
adcl
push
push
sbb
mov
mov
push
adc
je
push
in
frstor
xor
dec
and
jne
pushl
mov
lcall
ret
mov
jmp
mov
mov
lret
inc
fwait
outsl
mov
add
xor
dec
mov
scas
mov
jae
rcrb
test
shrl
in
and
repnz
xor
fs
inc
cwtl
imul
pop
mov
movsl
pop
std
mov
rcrb
sahf
xchg
xchg
sub
push
dec
add
ja
add
fstpl
bound
xor
daa
jae
hlt
xor
or
mov
std
adc
imulb
xchg
clc
dec
sub
sub
das
fiaddl
fucom
int3
outsb
movsb
sub
mov
dec
mov
pop
and
lret
inc
lds
sub
dec
push
mov
dec
push
popa
stos
fsubrl
mov
sub
dec
sti
loopne
and
mov
sub
insb
inc
inc
sbb
jp
mov
enter
dec
insl
cmp
insl
std
add
cmp
mov
pop
rcll
repz
dec
mov
pop
mov
pushf
es
xchg
shlb
xor
mov
aaa
xor
lret
andl
sbb
mov
mov
out
imul
cmp
out
in
push
aas
outsb
add
sti
push
mov
adc
pusha
movsl
and
lods
shl
mov
call
cmc
shl
stos
mov
adc
push
in
cmp
pop
imul
xor
add
push
add
pop
sub
pop
jbe
insb
cmpsl
add
sahf
adc
pop
scas
fsubs
hlt
pop
dec
sub
fbstp
sbb
ret
data16
push
std
sub
ja
call
xchg
cmp
js
jbe
lods
xchg
push
xor
mov
xor
cmp
mov
mov
sbb
dec
fsubrp
cwtl
inc
mov
lret
adc
lret
ret
mov
cmp
push
jle
and
add
jnp
ret
stos
mov
xchg
or
mov
push
mov
sub
sbb
out
add
movsl
jb
out
out
in
test
mov
push
xor
jecxz
into
in
jne
cmp
push
dec
fidivl
iret
xor
rorb
sbb
les
es
push
imul
jns
pop
cmp
mov
scas
inc
sbb
aas
adc
pop
inc
pop
or
call
xorb
xchg
negl
mov
out
xchg
xor
int
lock
data16
xor
mov
in
ficomps
insl
push
pop
dec
cmp
inc
fsubrs
jge
gs
jp
xor
jae
xor
adc
outsl
pop
fdivs
lcall
call
xchg
in
pop
imul
out
or
cmp
cld
bound
and
and
dec
lfs
xchg
dec
arpl
mov
sub
and
cmp
inc
cmp
jae
insl
mov
jns
pop
rcrl
popl
push
das
xchg
jbe
mov
push
push
mov
lret
lock
or
adc
pop
and
and
or
push
jne
lock
cmp
push
clc
scas
lret
add
jge
lret
jnp
ficompl
mov
mov
xchg
pop
push
xchg
insb
test
loop
dec
dec
pushf
dec
mov
fdivl
gs
dec
cmp
pop
cwtl
rolb
rcrb
mov
cs
cli
sti
xor
push
sbb
pop
stc
mov
out
or
sbb
imul
into
cmp
push
aaa
pop
js,pt
add
mov
mov
inc
and
sbb
scas
inc
xor
pop
jg,pn
sahf
aad
mov
popf
cmp
jns
mov
pop
je
sub
push
lret
mov
std
pop
mov
in
cmpb
mov
xor
xchg
int
mov
jnp
fcmovnb
xchg
and
inc
bnd
bound
sbb
das
out
cmp
loop
dec
push
lcall
pop
and
cld
cwtl
retw
stos
jne
aas
das
mov
popa
data16
or
push
dec
lds
mov
sbb
jp
xchg
add
bnd
sbb
and
jb
inc
sti
fcomp
xor
add
insb
sbb
mov
arpl
popa
add
fidivrl
add
jnp
cmp
popf
jmp
fcomps
lds
adc
mov
out
gs
cmp
and
loopne
outsl
push
mov
popa
or
mov
lds
int
dec
pop
inc
sub
mov
lods
xchg
mov
test
pusha
es
or
mov
push
rcr
dec
push
push
inc
xor
test
mov
es
pop
pop
adc
out
push
xbegin
divl
shr
pop
fs
adc
and
sarl
mov
xor
jns
inc
adc
sbb
sahf
inc
enter
pusha
dec
lahf
push
cli
xor
pop
sbb
scas
xor
repnz
cmpsl
lds
aas
fs
hlt
jne
and
xor
mov
push
lods
cmp
xchg
or
insb
mov
pop
mov
push
call
dec
or
es
pop
cwtl
xchg
add
jmp
bound
push
push
dec
clc
push
cmc
inc
push
stc
mov
lahf
jns
dec
fiadds
popf
mov
fldenv
xchg
rolb
mov
xchg
sbb
shll
push
cmc
sbb
sub
test
sub
ja
jb
sbb
sbb
add
jnp
inc
mov
out
fs
inc
aas
sarb
or
add
and
cmp
lret
mov
pop
sti
cmc
mov
xor
cld
addb
roll
jl
loop
rolb
jne
enter
or
loope
pop
add
lods
sbb
leave
jmp
or
or
inc
lret
insl
sahf
jno
and
jmp
ret
scas
or
test
fcmovnb
rolb
cmp
xor
jno
ret
xor
pop
jo
adc
push
rorb
les
pop
cwtl
frstor
push
inc
add
rorl
adc
xchg
dec
xchg
add
data16
xchg
cmp
out
cmpsl
cli
mov
xor
mov
jae
clc
sar
cltd
sbb
add
inc
cmp
and
jb
int
cmc
js
sub
test
repz
or
dec
mov
subb
mov
mov
movsb
fldl
sbb
pop
xchg
sti
add
or
push
jne
jmp
test
cmp
pop
and
sub
jnp
loopne
ds
inc
insl
into
or
mov
adc
sbb
xchg
xchg
xlat
push
mov
out
adc
sbb
in
inc
call
js
dec
cs
cltd
mov
in
outsb
and
xor
jbe
stos
or
dec
insl
or
xchg
dec
cwtl
cmpsb
mov
push
nop
outsb
stos
sbb
add
fnstenv
das
xor
dec
jb
sahf
scas
ds
cmpsl
lea
and
jmp
adc
cmp
jns
push
sbb
xlat
xor
cmpsl
sbb
or
push
sub
push
fistpl
sti
sub
sbb
xrelease
and
jbe
subl
cs
adcb
jae
gs
les
xchg
int3
insb
sbb
popf
cmc
cmp
xorl
lds
jb
sub
or
mov
adc
dec
jne
pop
jle
in
add
fiaddl
mov
imulb
aam
xlat
dec
les
pop
fsubs
pop
mov
bound
dec
aaa
push
sbb
mov
fiaddl
mov
sbbl
sbb
and
xor
out
mov
incl
adc
xor
lea
mov
pop
add
pop
sbbl
and
and
cwtl
loope
jg
jmp
jmp
push
push
icebp
ss
add
xor
or
out
into
xchg
xchg
stc
icebp
ljmp
dec
pop
sbb
pusha
stos
fsin
mov
dec
test
cmp
mulb
shl
xchg
adc
pusha
mov
cmp
dec
lret
in
je
sub
fcoml
movsb
pushf
cmp
mov
ljmp
push
scas
addr16
in
and
mov
mov
test
lahf
arpl
cmp
xchg
aam
testl
add
iret
cmp
pop
sbb
fistpll
xor
add
test
mov
cli
lahf
in
icebp
or
add
into
sbb
jb
js
xchg
xor
cmp
xor
cmp
lock
or
shlb
jae
outsb
mov
repnz
lahf
xchg
fisttpl
push
adc
das
push
and
push
sbb
mov
dec
ret
ja
push
adc
in
out
insl
add
shr
xchg
push
out
mov
fiadds
cmp
sti
sbb
or
sub
and
movsb
mov
add
addb
lock
fldenv
jp
inc
movsl
inc
cmp
push
sbb
cmp
mov
aas
test
cmpsl
cld
dec
adc
sbb
push
stos
mov
push
mov
mov
cwtl
je
cli
in
out
dec
mov
inc
add
and
or
xchg
lret
push
sub
movsl
adc
cwtl
je
mov
push
lds
mov
pop
dec
in
mov
cli
jmp
mov
les
insl
je
jno
jbe
adcb
mov
scas
pop
and
mov
mov
imulb
sbb
xor
in
inc
ja
pop
sub
aaa
pop
movsb
xchg
sub
jmp
stos
push
cmp
push
or
xor
loope
cwtl
inc
js
movsl
xor
sbb
dec
cmc
mov
loope
dec
push
cmp
jp
aam
fwait
add
push
int
aaa
scas
std
popa
mov
sub
push
jmp
fwait
inc
push
cmp
fprem1
test
mov
imul
sub
and
mov
popa
ret
add
jg
add
cmp
decl
loopne
sbb
jb
pushl
scas
andl
fnsave
rcrb
mov
test
jge
les
mov
shrl
fs
loope
call
xchg
pop
gs
je
stos
ss
inc
xor
dec
cltd
mov
inc
xchg
inc
xchg
cld
call
lock
xor
or
or
jg
lea
sbb
mov
xchg
push
and
or
cwtl
enter
subl
imul
loopne
sbb
xlat
sbb
cmpsl
xchg
lods
inc
lcall
test
mov
inc
std
mov
lods
jge
imul
cmp
rclb
shlb
nop
dec
stos
add
sbb
xor
pop
lret
pusha
jmp
xor
sub
test
pusha
mov
push
jmp
and
iret
scas
push
mov
test
push
add
mov
sbb
loope
cmc
mov
cld
pop
stos
mov
call
in
rorl
aas
int
andb
cmp
mov
stos
add
test
out
sub
add
mov
or
push
mov
jb
xchg
shll
outsl
adc
outsb
movsl
outsl
ds
bound
mov
push
pop
lds
fs
sbbl
mov
dec
pop
sbb
pop
cmpsl
mov
jno
mov
popa
or
jle
push
inc
push
pop
das
cmp
sahf
decb
daa
mov
sti
and
pop
cmc
xchg
xchg
inc
ds
fcoms
mov
decl
jle
shrl
clc
ds
and
es
jns
xchg
sbb
repz
sbb
xchg
lret
out
jnp
in
gs
sub
imul
sub
in
jmp
adc
int
push
push
push
xor
jge
sbb
pop
pop
mov
pop
pop
lahf
push
andb
add
fprem
into
cmp
gs
and
mov
inc
push
mul
movsb
mov
cmc
jne
test
adc
inc
xchg
xor
je
adc
test
mov
push
mov
sub
dec
jmp
cmc
inc
lock
jle
jge
jne
aam
lock
and
or
xchg
dec
lcall
stc
fidivrs
mov
xor
inc
ret
shll
cmp
faddp
pushf
xorl
add
jecxz
xlat
cmc
movb
rol
in
sub
cltd
push
cs
xor
fwait
pusha
enter
xor
xor
pop
pop
push
inc
sbb
cld
nop
outsl
stos
mov
xor
mov
int3
and
andl
jle
cmp
std
add
pop
dec
cmp
xor
es
fldcw
jne
mov
add
push
nop
iret
loop
dec
sahf
fs
lea
mov
sbb
mov
cli
mov
adc
leave
lcall
or
mov
out
mov
stos
jl
test
sbb
repnz
rorb
mov
and
sti
xchg
jnp
sarb
and
adc
ds
pop
pop
out
int3
pop
push
sbb
insl
mov
or
push
imul
cmp
call
cmpsl
ss
lods
popf
adc
out
or
fadd
outsl
pushf
inc
add
mov
mov
daa
movsb
push
cmp
and
mov
sti
lea
push
mov
std
mov
mov
sub
into
cmp
repz
cmp
movsl
movsb
lock
js
pop
mov
test
jg
sub
je
stc
push
insb
adc
sbb
std
or
cwtl
pop
lock
pop
cmc
adc
mov
jbe
pusha
jle
fidivl
lds
sbb
shrb
xchg
pop
jno
sbb
icebp
ljmp
fdiv
jp
outsl
mov
pop
mov
push
mov
daa
or
lcall
in
or
xor
dec
inc
and
or
int3
mov
inc
dec
in
and
outsl
adc
mov
iret
mov
lret
jmp
es
push
cmc
fildll
push
mov
sbb
add
aad
sub
stos
arpl
movsl
push
adc
mov
pushf
pop
jno
fcoms
mov
imul
dec
arpl
scas
aas
push
xchg
enter
aaa
repnz
cmpb
test
sub
loop,pt
daa
bound
lcall
adc
mov
shlb
or
stos
je
sarl
cmp
fnsave
mov
or
mov
cmpsl
sbb
jge
xchg
jle
and
cmpsb
cli
das
inc
icebp
mov
or
add
push
gs
dec
add
xchg
scas
add
data16
adc
sbb
das
add
xchg
std
mov
cmp
cwtl
jb
gs
test
cli
ljmp
xchg
ret
cmp
jecxz
daa
popa
es
xchg
lock
and
fldpi
pop
dec
push
mov
lcall
test
push
shrb
fsts
jo
mov
arpl
int3
test
or
or
or
cli
xlat
jo
stos
testb
sub
and
je
into
test
scas
loope
sub
jecxz
insl
es
les
adc
mov
push
scas
out
incb
sbb
jecxz
in
je
ds
je
inc
and
cltd
pop
sbb
jbe
jmp
and
mov
xchg
mov
or
xor
out
pop
xchg
ret
loopne
or
sub
add
push
dec
sub
sub
imul
mov
jb
adc
mov
out
jecxz
add
imul
leave
push
sub
pop
adc
mov
mov
mov
lahf
in
or
mov
mov
mov
push
xor
mov
cmpsb
cltd
dec
sbb
test
movsl
push
paddw
sub
jbe
stos
pop
fdiv
pushf
sti
and
notb
loop
jae
pop
rol
jge
adc
clc
cmp
xchg
stos
adc
add
mov
sar
out
fsubs
xchg
push
popf
je
pop
jns
mull
lods
sahf
clc
push
or
fmul
imul
xchg
jp
push
and
jl
xchg
sub
xor
lods
cmp
mov
cld
mov
xchg
cmp
pop
inc
or
xlat
mov
daa
sub
sahf
jecxz
jecxz
sbb
mov
rcr
add
pop
ficomps
mov
lret
aaa
or
out
sub
int3
lret
data16
clc
xor
and
out
imul
mov
iret
pop
mov
add
xchg
pop
jmp
mov
addr16
cld
mov
cmp
and
adc
scas
rolb
scas
pop
xchg
dec
sub
fstps
hlt
cld
cli
subl
insb
shll
jnp
lds
outsb
and
jno
mov
mov
cmp
cmp
push
or
sbb
cmc
add
and
xchg
inc
ficompl
test
sbb
xlat
aam
sbb
mov
sbb
add
xchg
cmpsb
dec
insb
nop
enter
xor
data16
add
ss
insb
add
jg
andl
fstl
in
mov
inc
icebp
cmp
repz
loopne
outsl
add
sbbb
inc
ret
repz
mov
fcmovu
jno
lahf
and
sub
adc
or
ret
es
sti
push
cld
and
daa
mov
jne
or
push
insl
inc
or
xchg
or
cli
or
mov
les
int3
jmp
popf
or
lods
jns
inc
mov
and
and
rcrb
add
jnp
xor
in
testb
into
push
sbb
jp
mov
lahf
sub
imul
scas
pop
pop
sbb
adc
or
push
pop
test
loop
es
popf
mov
add
xor
test
xchg
pushf
stos
jno
cmpsl
jg
data16
push
test
sbb
enter
add
subb
leave
jnp
mov
rolb
popa
mov
fnstsw
in
xor
sti
mov
jmp
dec
inc
pop
stc
stos
popf
mov
mov
pop
or
scas
inc
jg
dec
cld
xorb
add
push
loopne
push
lds
or
xchg
mov
sub
mov
js
pop
dec
inc
mov
mov
xchg
mov
insl
cs
push
jl
dec
push
add
and
add
push
ret
clc
ret
clc
dec
fisubrl
ds
mov
inc
cmpsl
jg
mull
or
push
jp
pop
imul
push
pushf
cwtl
adcl
sbb
or
mov
sbb
or
in
bound
jl
xor
sub
movsb
push
sbb
push
fists
jl
es
push
lahf
dec
bound
fwait
xor
dec
push
mov
lea
lret
dec
jp
jbe
in
mov
aam
inc
cs
fsubrs
sub
pusha
mov
stos
ljmp
jo
sbb
cmp
test
jge
sub
mov
in
pop
test
aas
iret
xchg
push
aad
fsub
imul
mov
in
cmp
xchg
add
ret
sbb
mov
repnz
xor
clc
leave
lret
jmp
push
and
mov
jae
push
roll
outsl
dec
xchg
out
or
jnp
jns
ljmp
lock
cmpsb
xor
and
pusha
inc
adc
sbb
adc
xorl
jle
sti
push
roll
lahf
mov
fdivrl
jns
shl
sti
and
mov
pop
dec
sub
add
sub
or
jae
sub
popf
lret
cmp
ret
xor
mov
rcl
rolb
outsb
push
and
xor
pop
xchg
inc
mov
jbe
dec
jns
or
mov
out
mov
jmp
aas
adc
fsubrs
test
xchg
and
xor
xchg
imul
jmp
stos
lahf
outsl
sub
test
mov
inc
dec
cld
sub
push
test
outsl
sub
xor
jl
in
je
mov
imul
mov
jne
or
je
dec
inc
test
adc
sub
pop
inc
xchg
mov
lds
mov
pop
sbb
or
out
add
mov
pop
cli
in
cs
push
jae
test
arpl
fistl
mov
loop
int
out
leave
addr16
and
dec
leave
cmp
lock
jg
aaa
aas
icebp
cmp
mov
mov
out
es
lock
mov
pushf
mov
orl
test
dec
adc
sahf
nop
fiadds
inc
or
and
pop
out
leave
pop
movsb
sub
inc
adc
sbb
cld
mov
cmpsb
test
mov
lds
sub
cmc
ficoms
pop
push
xchg
mov
movsb
mov
jns
js
mov
rcrb
mov
cmpsl
leave
aaa
std
out
mov
jg
push
das
jns
pop
mov
sti
mov
or
insb
inc
fidivrl
or
jnp
pop
and
and
xchg
rorl
dec
mov
scas
mov
mov
xchg
mov
loope
or
and
in
jecxz
popf
fs
jmp
test
cli
fiadds
int3
xor
sti
jmp
mov
cmp
xor
adc
mov
sbb
fimuls
scas
popl
es
data16
inc
subb
mov
loopne
nop
lret
dec
sbb
mov
adc
mov
pop
negb
push
cmpsl
sbb
popa
mov
mov
cld
sti
mov
cs
out
and
test
sub
or
xor
out
mov
dec
push
adc
cmp
cltd
ja
stos
std
push
imul
or
clc
xchg
shll
pusha
add
dec
in
fcmovnu
xlat
pop
lahf
dec
lcall
arpl
scas
mov
sbb
dec
outsl
lret
ret
push
dec
inc
aam
out
mov
mov
ljmp
push
mov
push
leave
or
dec
pop
enter
mov
mov
mov
jg
sbb
dec
sti
call
imul
inc
add
bnd
std
xor
movsb
js
sbb
or
mov
int
mov
rolb
rcr
sti
xchg
mov
jno
lret
sbb
push
test
inc
cmpsb
push
mov
xor
xor
lea
jp
fs
icebp
jb
mov
sub
xchg
mov
adc
push
jnp
enter
and
dec
jle
int
lods
aam
jns
loop
pop
sbb
or
pop
push
sub
es
xchg
pop
add
pushf
loope
mov
sahf
aam
sarb
push
push
sub
cmpsb
jg
xor
inc
sub
cmp
or
adc
cmp
cmpsb
adcl
loopne
push
ficoml
scas
and
sub
rclb
insb
jbe
das
sbb
jno
inc
int3
iret
mov
imul
push
push
mov
jle
cld
jns
nop
data16
cmp
sbb
negb
lods
or
daa
mov
cmp
mov
jle
lret
cld
negb
mov
jg
sbb
pop
or
cmc
ljmp
cmp
stos
jmp
rol
insb
xor
jp
xor
mov
jle
das
pop
sub
ret
dec
xor
pop
fwait
add
out
pushf
adc
jmp
push
or
ds
xlat
scas
push
jo
lret
je
test
movsl
sbb
xor
xchg
push
push
cmc
aas
loope
in
pusha
pop
jge
jg
ljmp
data16
xor
lods
test
in
sbb
xchg
adcl
or
mov
mov
jns
mov
and
push
mov
repnz
fcomps
in
mov
jecxz
dec
inc
inc
testl
ret
arpl
pop
xchg
loope
cmp
mov
push
jmp
mov
xor
negl
aad
mov
mov
cs
loope
and
mov
outsb
jge
xchg
cmp
fldt
js
push
inc
mov
pop
push
push
outsl
test
inc
sub
mov
jecxz
ss
cmp
inc
dec
dec
enter
lods
into
jb
mov
mov
sub
lea
daa
xor
outsl
out
popf
mov
into
ret
insb
call
sub
mov
shll
pushf
dec
and
scas
push
popa
cli
jb
movsb
push
jecxz
sub
hlt
movsb
jge
mov
mov
inc
inc
popa
jno
or
pop
mov
mov
sub
xor
adc
add
pop
in
cli
stos
mov
aas
js
test
movsb
pop
xchg
add
add
add
movl
ret
int3
movsl
hlt
adc
add
sbb
push
sbb
pushf
lahf
mov
mov
inc
dec
sub
xchg
xor
ds
push
fcomp
gs
mov
sbb
sbb
in
xchg
jmp
xchg
fwait
cmc
pop
in
dec
pop
lcall
jmp
mov
aas
jge
mov
jno
cwtl
ss
es
mov
xchg
fcoml
xchg
push
pop
push
rolb
sbb
repnz
pop
lock
sbbl
push
lods
ret
mov
jge
mov
mov
daa
push
adc
rcrb
sub
or
rorl
inc
cmpsl
loope
aam
add
pop
bound
xchg
sahf
adc
mov
pop
and
xchg
rclb
gs
inc
fwait
xchg
out
fcompl
jp
xchg
jno
xchg
lret
lods
in
mov
and
shrl
pushl
push
sbb
lds
jb
vpmulhw
pop
adc
repz
push
jbe
sbbl
push
fmulp
xchg
cmp
inc
in
and
bound
ljmp
pop
jae
mov
inc
roll
add
call
cmovb
mov
test
mov
jg
ret
adc
mov
mov
cmp
jbe
testl
rolb
sbb
sbb
xchg
adc
ret
aam
mov
xlat
pop
xchg
xorb
xor
xorb
popa
js
cld
das
mov
xchg
out
in
not
inc
out
jo
sub
jo
iret
out
pop
mov
mov
fidivrl
addr16
stos
and
mov
jnp
scas
test
sbb
xchg
aaa
push
subl
repnz
addb
jle
ret
cltd
ret
imul
cli
xchg
pop
ret
xchg
jle
shl
int
xchg
inc
jg
dec
and
outsl
in
pop
out
fs
inc
outsb
repz
or
xor
xlat
push
js
mov
mov
pop
sub
pop
jbe
out
or
leave
pop
pop
es
cmpsl
mov
mov
test
fxch
push
test
adc
cmp
push
movsb
jl
mov
ds
pop
scas
scas
xor
pusha
xchg
pushf
mov
bnd
out
pusha
push
shl
sbb
scas
xchg
mov
enter
sbb
xor
cmc
popa
iret
rcll
push
cld
loopne
in
inc
sbb
into
daa
dec
adc
xchg
jmp
mov
fisttpl
xchg
jb
jp
xchg
push
mov
mov
daa
mov
adc
out
dec
lret
iret
sbbl
sub
mov
jae
adc
sub
pop
aad
js
loopne
pop
or
inc
lahf
lahf
mov
mov
add
inc
nop
push
jl
dec
test
pop
out
repz
arpl
xchg
popf
jnp
push
cltd
jmp
cwtl
stc
je
lahf
fdivs
or
jns
lret
into
cmp
xchg
jl
scas
push
mov
jl
subb
ret
fisubrs
out
mov
mov
xlat
mov
jne
or
and
xor
adc
aaa
lock
movsl
hlt
fdiv
push
scas
add
imul
test
push
nop
into
hlt
xchg
addr16
mov
cmpsb
jae
pop
mov
rolb
into
jl
add
leave
inc
sarb
or
outsl
and
dec
mov
mov
divl
jne
dec
dec
pushf
mov
pushf
mov
stos
dec
add
out
hlt
in
inc
aad
pop
sub
or
sub
sbb
sbb
xchg
cmp
scas
sti
xchg
gs
orb
xlat
add
cmp
jl,pn
nop
stc
xor
leave
nop
out
pop
push
clc
xor
cwtl
cs
movsb
add
insb
aad
cmp
dec
loope
sub
cmp
movb
js
xor
cmpsb
jb
pop
dec
int
in
xor
add
xchg
push
mov
jmp
stos
pushf
or
enter
insb
push
stos
hlt
or
cmp
xchg
jmp
mov
mov
loopne
sbb
xchg
fmul
cmp
ds
js
test
fld
cmp
mov
pop
mov
add
push
rclb
into
mov
sub
mov
mov
jge
jp
fistpll
or
or
imul
lods
dec
jmp
dec
fidivrl
and
dec
popa
xchg
scas
xlat
inc
inc
xchg
jo
mov
mov
dec
out
pop
test
test
xchg
inc
shr
loopne
pop
ljmp
stos
pusha
test
sahf
or
pop
pop
push
sbb
jbe
adc
rcl
fdivr
adc
xor
sub
jecxz
bound
dec
inc
jge
mulps
cmp
es
pop
pop
pop
lds
addl
and
mov
dec
jl
adc
cwtl
mov
aam
rcl
lods
ds
jo
pop
aam
xorb
cmp
mov
clc
cs
pop
cmpsl
and
dec
xchg
xchg
mov
arpl
and
add
jp
pop
push
sub
fucom
dec
outsl
pusha
ds
inc
imul
loopne
cmpsb
arpl
inc
fcoms
mov
in
mov
enter
jno
pop
out
add
jb
push
lods
xlat
fcmovnu
xor
fdivr
push
std
and
and
fwait
lret
sahf
insl
sbb
pusha
adc
jns
sbb
sbb
in
push
enter
pop
or
xlat
flds
std
aaa
orb
hlt
jle
cmp
repnz
lods
jmp
mov
ja
mov
out
dec
jle
mov
xchg
jmp
sub
icebp
das
repnz
out
jbe
jl
fisubrl
stos
test
iret
push
mov
mov
outsl
movsb
int
cmp
xchg
mov
imul
out
jns
cmp
mov
es
imul
sarb
xchg
push
lods
outsl
pop
xlat
mov
jb
add
mov
stc
mov
xor
pop
sub
cli
lea
ret
mov
or
dec
mov
mov
jl
xor
xchg
stos
lahf
and
push
ret
push
movd
or
mov
add
ret
or
and
pop
pop
hlt
mov
outsb
xor
rcr
push
mov
std
push
aam
nop
pop
push
sub
ror
mov
pushl
std
daa
aam
cmc
inc
pop
in
xor
xor
mov
lods
and
sub
idivb
sbb
movsl
sub
data16
add
aaa
xchg
adc
xchg
mov
push
pop
in
xchg
rcr
xchg
cmp
dec
jg
push
aad
popa
pop
pop
xchg
inc
sub
out
xchg
ljmp
add
sbb
stc
out
dec
int3
popa
pop
or
loopne
xor
inc
cltd
xor
orb
xchg
scas
pop
rcr
cwtl
add
das
enter
inc
movsb
int3
cmpsl
mov
cmp
ret
movb
cli
add
or
mov
test
dec
sbb
les
shrl
sbb
xor
add
pushf
mull
mov
mov
mov
std
cmp
sub
pop
aam
adcb
add
lret
aas
lcall
aaa
aas
pop
or
push
fs
pop
cmpl
jge
inc
jmp
cs
scas
call
test
xchg
inc
outsb
aaa
xor
ss
addr16
lods
xorb
jle
cmp
out
loopne
inc
lock
pop
adc
sub
cmc
cmc
adc
adc
xor
jmp
lds
sbb
lods
je
add
pop
mov
jns
lcall
and
cwtl
inc
xchg
loope
lret
jl
rcll
cmpsl
arpl
js
leave
xchg
ds
in
adc
inc
andb
lret
sub
pop
and
pop
and
xchg
popa
pop
sbb
mov
mov
mov
stos
mov
mov
cmp
stc
ds
pop
xchg
out
mov
and
scas
push
ljmp
sub
nop
into
aam
push
fs
lret
aas
pop
fmull
pop
paddsw
adc
mov
idivl
xchg
shr
jnp
clc
adc
sbb
push
mov
cli
dec
sbb
stc
es
je
sub
mov
mov
sub
jp
test
cmp
xor
imull
dec
out
pop
push
mov
sbb
sub
cs
in
dec
xchg
pop
lcall
outsl
lcall
push
loopne
mov
in
dec
mov
sbb
stc
adc
leave
adcb
mov
fistps
je
jo
mov
test
fcomip
shrb
adc
xchg
mov
lcall
cmp
jge
aam
xchg
and
sbb
stos
cli
and
test
repz
pop
mov
mov
add
mov
jmp
sub
mov
rcll
in
fs
push
cwtl
rcrb
inc
sar
jo
mov
scas
add
subb
mov
sbb
clc
ret
adc
xlat
sti
dec
push
and
dec
call
xorb
sbb
mov
lea
or
hlt
or
das
ret
push
mov
cld
add
mov
inc
xchg
mov
push
dec
adc
ja
fwait
dec
dec
ljmp
mov
test
addps
int3
sbb
cmpsb
lods
rol
xor
pusha
mov
arpl
in
mov
sub
cli
or
mov
gs
mov
bound
and
jns
icebp
movsl
sub
mov
push
or
and
ffree
sbb
ret
xor
call
jp
xorb
xchg
int3
cld
cmp
icebp
sahf
xchg
jne
sbb
pop
arpl
cmp
mov
jl
push
fwait
push
cmpsb
mov
aad
cld
dec
xchg
mov
div
mov
fs
jg
sub
or
and
add
sbb
jp
cmp
movb
mov
dec
icebp
sub
ja
clc
popa
xchg
leave
int
gs
fs
add
test
rolb
pusha
mov
in
or
mov
stos
sbb
repnz
insb
rclb
cmpsl
mov
push
lret
pop
mov
add
pop
inc
add
leave
push
pop
jmp
out
mov
xor
jecxz
arpl
push
add
or
jmp
repnz
daa
imul
push
push
cltd
cmp
fucomip
es
mov
std
jmp
add
cmp
xchg
mov
popf
loop
stos
mov
xchg
scas
ja
ss
popa
sub
repnz
test
sbb
pusha
fidivrs
sub
mov
xchg
cmp
jb
aas
test
or
sub
mov
sub
insl
das
dec
sbb
mov
adc
xchg
cmp
fucomi
ret
xchg
imul
lods
and
pop
or
out
mov
mov
movsl
and
inc
add
push
loop
out
jbe
sbb
stos
rcrb
sbb
xchg
mov
mov
pop
pop
cmpsb
lods
cli
test
mov
mov
shrb
aam
xor
push
stos
mov
inc
adc
loopne
mov
fs
dec
mov
xchg
jnp
and
jne
mov
and
pop
adc
push
mov
mov
rclb
sbb
cli
xchg
or
insl
xchg
insb
xchg
test
das
push
adc
sahf
inc
testb
addl
pop
push
in
xchg
cld
add
mov
and
cwtl
stos
daa
scas
or
pop
aas
dec
mov
sub
stc
pop
testb
fldcw
repz
call
iret
subb
mov
mov
jno
ljmp
outsl
jge
sub
pushf
push
jo
cmp
jecxz
xchg
lods
lret
jbe
add
push
bound
insb
flds
sbb
or
dec
jbe
imul
inc
jae
ja
movsl
rcr
clc
data16
push
dec
in
xchg
sbb
push
fadd
adc
arpl
push
sub
into
or
mov
cli
xchg
sub
outsl
out
popf
cmpsl
push
je
pop
into
dec
sbb
paddw
xchg
cmp
jne
or
ss
lret
arpl
cmp
push
movsl
push
mov
sti
scas
inc
pop
pop
mov
cmp
xchg
sbb
jp
imul
repz
cld
ds
pop
lds
inc
out
mov
mov
leave
rolb
xchg
data16
out
push
inc
lods
sub
jbe
or
push
call
jbe
ret
jno
add
jle
enter
mov
pop
mov
and
pop
cmp
inc
sub
inc
test
lods
mov
mov
mov
jbe
jae
mov
rclb
inc
iret
mov
mov
pop
testb
out
repnz
xchg
das
stos
xlat
fs
inc
dec
or
outsl
mov
sub
cmp
adc
pusha
fistps
push
mov
psubw
push
imul
jno
xchg
popf
cmpb
sub
sbb
js
mov
mov
pop
lods
xchg
lret
mov
xchg
push
push
ljmp
cmp
scas
ljmp
enter
mov
mov
add
xor
lahf
xchg
pop
add
mov
xchg
push
or
rclb
mov
jg
loopne
fiaddl
in
xchg
in
adc
sub
jle
sub
out
mov
popf
ljmp
pop
mov
div
popa
sub
and
cli
faddl
or
mov
std
xchg
loopne
and
dec
mov
mov
clc
addr16
or
mov
and
sbb
inc
rcll
add
push
inc
mov
sbb
or
out
pop
mov
pop
scas
mov
pop
and
loop
gs
js
test
or
fwait
mov
inc
in
sbb
and
mov
movsl
cld
test
mov
or
stc
dec
xchg
ljmp
and
aas
lea
cmp
sahf
incb
dec
flds
stc
cmp
pushf
cs
gs
jbe
xor
push
sbbb
stos
jecxz
pop
loopne
addr16
pop
sar
scas
pop
addr16
mov
inc
inc
mov
mov
jno
fldenv
imul
cmpsl
pushf
cld
inc
leave
sahf
dec
push
jg,pn
loope
xchg
pop
repz
inc
lods
pop
inc
icebp
mov
mov
adc
sub
dec
and
mov
mov
dec
push
xor
adc
pop
iret
jecxz
push
add
xchg
push
mov
xchg
je
out
out
mov
stos
mov
dec
call
fmuls
jb
negb
lock
dec
push
dec
jg
incb
mov
inc
jo
out
cmp
js
add
add
and
filds
int
sub
push
cs
ja
and
pop
or
ljmp
dec
push
insb
pop
xchg
mov
xor
int
dec
cmc
jmp
int
jmp
test
test
clc
pushf
loop
xchg
pop
js
test
dec
mov
add
ss
out
pushf
out
jnp
incl
out
aad
mov
or
das
leave
pop
mov
lret
cmp
lods
add
xchg
repnz
sub
mov
cmp
cltd
inc
inc
je,pn
xor
inc
stos
jo
fnstenv
les
dec
mov
push
loope
mov
int3
mov
or
inc
cltd
and
insb
push
inc
test
imul
pop
add
insl
ds
sub
rclb
and
pop
dec
jmp
pop
xchg
stos
movsb
adc
sti
add
and
cwtl
and
mov
mov
gs
insb
mov
ja
jbe
lret
sbb
scas
jmp
mov
mov
adc
fidivrl
xor
loope
ss
inc
xchg
outsb
std
imul
jecxz
lods
icebp
inc
cmpsb
mov
mov
ret
mov
pop
jp
mov
lea
and
fst
xor
je
nop
hlt
push
xchg
mov
inc
pop
cwtl
pop
or
mov
test
movsl
aam
mov
pop
sub
pminsw
mov
sbb
aad
das
sbb
cmpsb
push
or
std
scas
and
call
clc
cmpsb
xchg
and
ss
arpl
callw
fwait
dec
loope
mov
inc
stos
pop
cwtl
add
or
or
xor
xchg
inc
imul
and
mov
add
jle
jne
dec
lock
mov
jae
insb
pop
insl
sub
adc
jp
lods
rolb
orb
daa
jo
sbb
dec
xor
ret
ljmp
rolb
mov
pop
cmovno
jns
iret
xor
stc
add
scas
xlat
out
xchg
xor
cmpsl
in
inc
pop
scas
xlat
mov
pop
push
xchg
cltd
mov
jle
sbb
mov
xor
mov
mov
add
cmc
sub
pop
lcall
bound
daa
aad
imul
nop
inc
sbb
repnz
lock
or
enter
push
cwtl
mov
pushf
ss
push
mov
ljmp
div
lret
dec
daa
dec
pop
mov
jle
sub
sti
jmp
rcrb
cmp
sbb
aas
add
fld1
faddl
mov
xor
xor
mov
jne
cmp
test
mov
xchg
jne
mov
les
repnz
adc
sbb
test
xchg
lcall
loopne
mov
sarl
jno
fs
in
js
push
and
mov
jae,pn
adc
jns
rcrl
scas
xor
es
popa
aad
xchg
out
dec
shrb
out
xchg
jnp
movsl
xchg
adc
sti
arpl
adc
ljmp
out
mov
xor
push
rclb
movsl
dec
jecxz
or
mov
dec
and
or
sub
xor
or
jnp
jo
cs
lret
cs
sub
pop
mov
xchg
xor
shll
push
popf
sub
std
sbb
add
std
hlt
xchg
out
cmp
xlat
sub
outsb
setns
and
xchg
xor
jp
imul
aas
inc
cmpsb
ret
sub
lahf
xor
pop
xor
dec
sarb
shll
fisttpl
dec
sarl
or
add
xor
ret
test
or
mov
mov
cmp
movsl
addr16
cmpsb
mov
cmp
pop
call
jne
ja
call
inc
in
pop
out
and
movsb
mov
push
inc
pop
pop
int3
push
cmp
mov
ret
mov
jbe
cmp
jbe
mov
xchg
push
aad
lods
add
xchg
jg
mov
xchg
cmp
sahf
xor
call
jbe
mov
add
les
pop
pusha
mov
add
out
or
pop
pop
movsb
insb
inc
mov
or
or
xchg
jl
aam
outsl
int
add
pushf
or
lods
xchg
cltd
popf
outsl
les
sbb
dec
pop
outsb
aas
sub
xchg
sbb
movsl
cmp
fistps
and
lahf
into
and
cmpsb
lahf
arpl
test
loopne
std
pop
ret
stc
ss
dec
mov
aam
pop
xor
loopne
orb
stos
inc
ljmp
test
andb
hlt
dec
sub
push
sbb
pop
pushf
lods
mov
cwtl
aam
sbb
dec
divl
mov
dec
clc
lahf
jmp
cmp
pop
push
mov
clc
mov
cmpsb
test
and
fldt
sbb
jnp
sub
cmp
fwait
cmp
hlt
mov
mov
mov
fs
push
pop
xchg
xchg
inc
mov
pop
sub
and
pop
pop
sahf
fcmovbe
mov
dec
mov
mov
and
adc
dec
cmp
cmp
sub
xor
out
dec
mov
mov
fdivrp
sbb
fucomp
xor
orl
in
cmp
jecxz
mov
repnz
or
pusha
icebp
fs
sub
hlt
xchg
jnp
inc
pop
jae
push
mov
mov
inc
mov
cmp
mov
push
sub
push
jge
fisubs
stos
sub
ja
xchg
and
cwtl
dec
out
fidivrs
data16
imul
inc
sbb
sti
cmp
lret
lods
loope
dec
inc
imul
fnstsw
mov
dec
adc
mov
jb
or
je
push
ficoml
add
cmp
roll
sub
ficoml
xor
lret
mov
movsl
int
or
fsubrl
jmp
test
or
aam
mov
aaa
xchg
icebp
mov
mov
xor
cltd
dec
and
popf
daa
testl
add
outsb
xchg
cmc
ss
ret
mov
jnp
jo
lahf
and
dec
inc
push
xlat
xchg
imul
cwtl
insl
jg
enter
pop
sbb
xchg
adc
mov
stc
insb
rolb
inc
lds
jecxz
cmpsl
cmp
rep
jns
xchg
bound
inc
outsl
loop
mov
and
fidivs
pop
mov
or
call
cld
cmp
mov
jno
adc
add
pushf
fnstenv
lahf
pop
and
test
push
test
mov
or
push
and
movsl
pushf
add
jb
push
pop
add
add
dec
dec
ret
testl
stos
testl
sbb
imull
out
cltd
rcr
push
mov
pop
fstpt
popf
inc
fdivrs
push
push
pusha
and
sar
out
lods
mov
aas
and
mov
adc
pop
sbb
jns
movsl
lret
jnp
mov
pusha
xchg
popa
adc
insb
rolb
cmp
add
push
jmp
filds
insl
cmpsb
xchg
fcmovnu
add
cmp
xchg
mov
fsub
sub
call
cwtl
xor
test
xlat
sarl
jno
dec
cmp
xor
arpl
popf
push
scas
adc
push
sbb
fmull
and
jge
dec
out
cmp
arpl
inc
imul
push
std
cmc
mov
insb
out
pshufw
aas
jmp
shl
inc
mov
mov
sarb
aad
cmp
test
mov
loope
push
test
or
lret
xor
jecxz
leave
mov
jmp
fld
popf
xchg
xchg
dec
addr16
inc
seta
clc
adc
dec
inc
je
add
es
fs
lods
aad
sbb
push
or
xor
push
cmp
mov
dec
es
dec
xchg
xorb
cmpsl
or
pop
pushf
push
dec
jno
dec
jo
jbe
dec
inc
lret
mov
js
in
int
push
loop
push
jmp
and
in
ja
cmpl
add
test
mov
jle
adc
adc
push
pop
inc
mov
stc
xor
sbb
mov
mov
dec
in
mov
fbstp
cmp
test
jae
adc
inc
xchg
in
sub
pop
cmp
les
xlat
xchg
aad
inc
lcall
out
ficoms
inc
enter
bswap
cwtl
sbb
pop
jle
sbb
jnp
dec
push
mov
loope
or
subb
std
inc
mov
fistps
xor
gs
aam
int
jecxz
adc
adc
pop
into
inc
lea
xor
cmp
out
lock
cmpsb
jno
loope
subb
or
add
aaa
mov
out
sbbb
loop
pop
rcrl
fbstp
or
scas
mov
jb
xchg
lea
fcomps
jae
outsl
ja
shll
imul
cmp
lcall
data16
int
and
js
ficoms
jg
in
dec
je
xchg
xchg
ss
add
mov
sub
pop
lds
cmp
pop
xlat
pop
sahf
cltd
insb
mov
adc
pop
sbb
sbb
loop
jne
fsubl
lock
mov
mov
leave
add
fmull
adc
sbb
jae
cwtd
mov
jne
mov
cmpsb
fdivrl
or
sti
push
pop
pop
roll
or
mov
aaa
add
int
sbb
ss
aam
xchg
in
movsl
loop
cmpsl
nop
pushf
int3
xchg
sbb
ljmp
pushf
xchg
or
add
outsl
scas
sbb
adc
mov
push
push
jb
movsb
xor
push
push
mov
loope
push
scas
ret
mov
rorb
adc
lods
lock
loop
adc
mov
and
pop
mov
and
pop
push
sar
mov
dec
pop
paddusb
xor
andl
and
cwtl
add
push
pop
jg
mov
cmp
imul
cmp
dec
movsb
popf
push
cmp
mov
out
add
imul
hlt
or
into
imul
xchg
push
lcall
push
xlat
inc
pop
jle
das
push
dec
push
inc
loope
ss
dec
pop
pushf
cmpsb
jle
mov
subl
leave
ds
insb
mov
inc
mov
push
mov
push
adc
jno
pop
int
outsb
mov
push
jae
mov
je
xchg
mov
into
mov
pop
fidivrs
jl
push
xor
jecxz
insl
pop
lret
dec
bound
inc
inc
jns
aaa
sub
test
lds
add
jmp
aam
je
push
int3
iret
pop
loop
daa
cmp
or
pop
push
in
loope
lds
ss
push
mov
xchg
inc
sti
sbb
mov
cmp
xchg
cwtl
adc
aas
stos
lods
jmp
pop
adc
insl
lock
int
in
je
sub
ja
out
pop
push
fisttpl
jb
negl
cmc
add
mov
pop
inc
dec
mov
clc
jge
dec
pop
dec
nop
fsub
cmp
dec
mov
mov
mov
aad
and
pop
int3
lods
sub
aaa
scas
sti
ror
xchg
int3
loopne
popf
and
jbe
cmpsb
data16
stos
push
test
cmp
push
and
out
aas
add
fs
fbstp
pop
sbb
xor
adc
sub
fndisi(8087
jl
out
inc
sub
dec
inc
and
adc
mov
adc
fimuls
mov
mov
mov
gs
scas
ss
or
int
and
sub
or
pop
fldcw
mov
out
mov
and
sub
loope
jge
pop
or
data16
and
pop
cmp
pop
jl
mov
addr16
push
fstpt
lret
cmp
daa
and
daa
jge
push
gs
or
test
icebp
icebp
das
imulb
xor
mov
cmp
mov
push
pop
cltd
pop
jmp
cmp
lea
inc
popa
push
push
out
jno
xchg
cwtl
cmp
cmp
xor
dec
testb
jge
popa
add
int3
mov
inc
sub
or
dec
dec
loop
daa
insb
rol
nop
cld
loop
mov
outsl
fadd
pop
lods
push
push
or
fs
jg
shlb
push
fwait
movsl
mov
sub
insl
scas
lcall
enter
fwait
mov
jg
jl
imul
repz
inc
adc
sbb
and
ds
nop
addl
push
cltd
cmp
dec
stos
cmpb
sbb
sbb
std
aas
xor
pop
or
jnp
adc
ja
insl
inc
add
cmpsl
mov
pop
add
lret
xchg
les
insl
cltd
ds
push
adc
jb
popa
imul
outsb
and
xlat
xchg
jbe
fmull
lcall
add
cld
insl
add
lock
mov
repz
add
cmp
sahf
lods
aas
bound
lea
xor
push
in
jg
push
and
push
mov
push
stos
or
aaa
xchg
mov
pop
lock
jmp
pusha
loopne
sbb
push
sbb
fldcw
jns
add
add
lcall
movsl
jp
or
repz
push
jecxz
cmp
pop
xor
loopne
mov
push
jmp
mov
jp
lds
ljmp
xlat
into
jns
movsb
idiv
or
mov
xor
cld
mov
ljmp
dec
les
cmpsl
dec
les
popa
push
fcoms
outsl
mov
clc
xor
pushf
stos
and
dec
jno
mov
in
movsb
aad
int
cmc
sbb
add
jb
fmull
stc
and
fistpl
or
cmp
and
cmpsb
adc
cmp
cmp
outsb
lret
adc
pop
dec
xor
fcomi
add
icebp
sbb
sbb
jae
fdivl
bnd
fidivrl
ret
pop
cmp
aas
push
and
jbe
cltd
cs
cmp
cmp
pop
push
shrl
test
rcl
stos
and
pop
subb
push
mov
out
mov
pop
in
push
scas
sub
adc
lods
mov
mov
pop
test
out
jmp
test
ljmp
or
push
dec
arpl
dec
xor
pop
push
sub
or
popa
aad
call
loope
sub
push
mov
push
jne
xor
push
lret
jo
sarl
loop
xor
push
mov
and
mov
ret
pushf
adc
ljmp
pusha
call
push
insl
imul
shl
cmpsl
fwait
xchg
mov
dec
sbb
jg
out
enter
mov
mov
sbb
inc
mov
roll
push
cmpsb
adc
mov
mov
or
xchg
sbb
fs
xor
cmpsl
addr16
or
cmp
mov
arpl
mov
jecxz
adc
stc
xchg
insl
jmp
and
test
xor
aaa
fld
sti
jno
mov
mov
mov
inc
dec
mov
shrb
lahf
or
xchg
stc
je
adcl
cmp
test
lods
or
mov
jo
subb
popf
sub
cmpsb
push
out
ja
inc
mov
xchg
mov
leave
mov
cs
xchg
dec
or
imul
ret
jl
mov
aaa
test
xchg
xchg
sbb
xchg
mov
xchg
pop
les
jb
lods
gs
stc
insb
loopne
jne
insl
cltd
push
pop
mov
or
jnp
lret
scas
out
fldt
hlt
jno
push
shll
fidivrs
cmp
test
or
stos
sbb
sub
shll
push
add
enter
xchg
orb
sti
mov
add
aaa
pusha
cmp
call
xor
jno
adc
enter
sub
mov
lcall
jge
test
xor
sbb
or
push
xchg
insl
lret
leave
sbb
inc
testl
xchg
inc
lea
or
and
lret
mov
stc
mov
leave
std
enter
dec
ss
xchg
enter
dec
push
movsb
popa
aas
sbb
test
ss
xchg
xlat
sbb
push
test
stos
cmp
ret
mov
dec
stc
imul
enter
loop
insl
test
stos
fwait
xorl
jp
and
popa
jne
mov
pushf
cli
inc
dec
xchg
mov
cs
jne
sbb
and
outsl
pop
and
mov
icebp
fucomp
insb
loop
inc
lret
dec
push
dec
push
aad
test
xchg
add
adc
imul
movsb
sub
pop
push
cmpsl
xor
dec
in
shr
or
inc
cmp
push
mov
test
fldcw
andb
mov
icebp
jmp
inc
fstl
hlt
out
iret
iret
cmp
cwtl
cmp
pop
js
or
lea
ds
or
inc
sub
pop
and
and
jno
pushf
push
js
pop
cmp
pop
out
push
jle
add
inc
cmp
rclb
mov
ss
mov
xchg
dec
mov
mov
lcall
das
in
xchg
negl
inc
add
lret
hlt
sub
lods
pop
into
lcall
loopne
loop
stos
imul
pop
test
jecxz
leave
call
jae
imul
pop
stos
stos
jno
out
shll
rorb
test
stc
mov
jae
out
ret
cmp
inc
pushf
punpckhwd
push
sbb
jo
inc
into
or
popf
nop
enter
imul
in
xor
mov
xor
adc
dec
inc
mov
pop
dec
iret
push
xchg
js
sahf
inc
cmpsb
nop
incl
sbb
js
ds
pop
aas
xchg
stos
push
imul
pop
jle
clc
sub
hlt
pop
jno
data16
add
imul
jne
adc
cmp
fwait
sbb
cmp
lcall
jne
dec
movsb
in
mov
xchg
data16
cmp
push
jle
arpl
jg
dec
mov
cmpsl
push
xor
fisttps
lret
sti
fstl
movsb
jae
cmpb
js
or
repnz
push
daa
imul
inc
xor
mov
rorb
xchg
lret
loop
aaa
push
sbb
out
aam
and
mov
xchg
and
stos
cmp
fcomip
cltd
and
xlat
stc
ffreep
dec
imul
mov
cmc
cs
imul
fsubrl
and
jl
mov
push
dec
fnstenv
mov
das
and
aam
cmpsl
xor
jmp
jecxz
jne
inc
mov
cmp
xor
addr16
mov
in
pop
movsb
pop
lea
imul
or
jae
sbb
in
pop
sbb
lret
push
xchg
das
adc
sahf
cmp
pop
aaa
mov
pop
push
pop
lds
xor
push
ljmp
mov
repnz
mov
pop
out
inc
sub
or
cmp
xlat
mov
loope
and
cld
std
push
or
xor
push
iret
xchg
in
push
out
pop
out
mov
inc
add
xchg
stos
cwtl
cmc
stos
loopne
mov
dec
sbb
out
jl
adc
pop
xchg
or
and
and
cmp
fisubl
insb
xchg
daa
cmp
outsl
movsb
or
inc
iret
pop
in
adc
sub
bsf
add
js
mov
jmp
test
dec
adcl
mov
xor
lods
mov
mov
push
repnz
in
mov
das
xor
pop
mov
in
mov
scas
dec
and
mov
xchg
mov
mov
in
sbb
call
xor
jmp
adc
and
test
inc
push
xchg
adc
fsts
lret
xchg
xchg
test
test
push
cltd
imul
fisttpl
push
adc
ds
andl
sbb
sbb
or
rcrb
push
jnp
lods
in
mov
mov
hlt
inc
jnp
adc
cld
mov
inc
movsb
mul
test
pop
stos
mov
lret
dec
gs
or
adc
mov
sub
add
jnp
int3
push
jae
lret
jne,pt
push
cmc
adc
sub
in
adc
xchg
fs
int3
cltd
pushw
dec
cmp
jg
lock
jns
xchg
pop
sti
inc
loope
mov
fdivl
sbb
sub
sbb
mov
mov
repnz
add
in
shl
lods
fadds
xchg
ret
outsl
sbb
aad
mov
push
pushf
jecxz
ds
xchg
cmp
add
rorb
popf
ret
jnp
sbb
sub
popa
push
jmp
inc
js
pop
push
or
cli
pop
xor
outsw
mov
ficoms
cmp
sbb
into
and
fsubl
mov
inc
jnp
xchg
cmpsl
mov
mov
cmpsl
pop
mov
pop
pop
aaa
addb
mov
or
in
dec
inc
data16
notb
sub
jb
imul
loope
jmp
jge
shl
lcall
dec
pop
push
divl
xor
mov
gs
inc
add
sahf
xor
push
and
dec
add
pop
jl
in
push
adc
dec
add
clc
ja
mov
mov
jmp
sub
push
fidivs
pop
sar
mov
or
or
js
out
add
push
pop
jmp
pop
lea
adc
daa
and
in
jo
ljmp
js
add
cltd
lods
xchg
bound
adc
cld
mov
rcll
setp
scas
cmp
outsb
enter
add
pop
mov
jns
add
mov
int
jo
cwtl
inc
mov
iret
mov
jmp
pop
jmp
xchg
cmc
add
adc
cld
subl
cmc
ret
sub
inc
imul
mov
sarl
xorl
pop
inc
xchg
inc
xlat
scas
clc
jno
jmp
jp
ss
mov
subb
mov
out
es
lds
mov
int
aad
jb
or
pop
fdivs
xlat
cmp
add
imul
cmp
loope
test
mov
jl
shrl
popf
imul
fwait
pop
out
sahf
mov
mov
ss
xor
mov
sbb
dec
outsl
push
mov
dec
lds
cmpsb
sub
adc
pop
push
sbb
int3
mov
mov
out
jl
add
fildll
mulb
lock
fwait
inc
pop
sub
lret
dec
popa
dec
cmpsl
movsb
mov
mov
repnz
mov
and
push
pop
add
mov
fcoms
shll
xadd
pop
and
in
xor
int3
add
xor
fs
mov
sub
scas
adc
call
sub
aam
fwait
lcall
sub
sub
rolb
push
shrl
scas
scas
cltd
loope
hlt
into
mov
sub
ret
and
jg
push
loope
pop
pop
xchg
loope
mov
fucomip
and
ss
inc
iret
jns
adcl
sbb
mov
push
nop
adc
xchg
daa
sbbb
movsl
out
adc
fcmovnu
jns
movl
jmp
xor
cmpsl
cwtl
loopne
cmpsb
xchg
ss
jno
es
and
out
ljmp
bnd
in
push
xor
mov
jmp
repz
aad
je
filds
cltd
mov
and
mov
lock
in
ror
dec
mov
push
push
test
cltd
or
out
gs
pop
dec
lods
or
inc
leave
cmp
lea
jnp
lods
movsl
stc
pop
and
addr16
mov
outsl
inc
pop
cmp
les
push
jge
sbb
add
adc
into
xor
adc
out
push
inc
jb
xchg
or
lret
test
cmp
mov
enter
pop
sbb
jno
imulb
mov
jp
cmpsl
addr16
xorb
call
jo
add
sar
in
push
mov
mov
lods
jmp
jnp
dec
xor
out
std
ret
iret
push
lcall
jle
cmpsb
mov
mov
pop
data16
push
mov
push
sub
cmpsl
popl
fwait
push
or
cmp
out
pop
jb
sbb
push
in
mov
mov
cmp
pop
sti
sub
popa
add
mov
jns
shr
pop
inc
neg
pop
repnz
je
jnp
mov
mov
and
xchg
pusha
loope
sbb
loopne
mov
mov
loop
ja
mov
pop
dec
mov
xchg
jo
and
sub
cmp
ficoms
dec
mov
xchg
sbbb
xor
jno
push
cmp
sbb
ljmp
cmpsb
cld
stos
sbb
push
hlt
mov
jle
xchg
push
cmc
sahf
loope
test
or
das
mov
inc
addl
pushf
aam
sbb
aas
jae
add
loope
fwait
inc
xchg
cltd
push
dec
jb
dec
in
xor
sub
sbb
dec
xchg
adc
xchg
ret
test
repnz
push
xchg
cmp
repz
scas
icebp
xor
lahf
and
test
push
push
mov
mov
or
sarl
out
mov
aaa
orb
dec
mov
xor
push
sub
mov
ja
loopne
add
stos
mov
fidivrl
mov
nop
bound
sub
loope
push
lea
pushf
sahf
jne
fs
dec
mov
bound
shl
dec
aas
adc
icebp
push
jo
movsb
cmpl
les
sub
adc
dec
adc
cwtl
popf
xor
sub
pop
inc
mov
mov
add
xor
push
inc
jb
je
aam
xchg
addr16
jae
ljmp
popa
push
and
js
push
jl
movsl
aad
adc
jg
jecxz
in
in
in
push
mov
adc
mov
lods
out
fimuls
daa
sbb
in
xchg
ja
fisttpll
cmp
mov
xchg
mov
sti
out
and
scas
lea
gs
or
aas
pop
jo
aas
loope
xchg
cmc
ds
push
mov
mov
sub
lahf
test
jnp
repnz
inc
ljmp
lahf
popf
add
mov
iret
jo
inc
jge
mov
cs
lret
test
sbb
je
ss
mov
repz
lock
mov
jno
stc
clc
push
jmp
daa
loop
jmp
pusha
aad
sub
dec
xchg
sbb
test
stos
ss
sarb
push
and
js
lock
jg
and
shll
mov
cmp
enter
jnp
cmp
or
lret
imul
out
ljmp
sbb
adc
sahf
mov
adc
mov
mov
cmp
not
ret
js
or
jne
pop
dec
insb
scas
mov
je
aam
inc
shll
incl
pop
xchg
push
pop
push
adc
jge
sbb
xor
in
outsb
jmp
cmp
and
and
int3
sti
daa
jge
inc
xchg
pop
popa
xchg
jmp
dec
mov
add
pop
bound
xor
fcoml
notl
sub
sub
add
lods
add
mov
mov
jmp
sbb
inc
or
mov
mov
mov
push
out
cmp
push
daa
inc
mov
cld
cmp
lret
sbb
jb
adc
cmp
imul
test
xchg
imul
xchg
sub
and
xorb
jp
cmpsb
push
jae
cld
inc
xchg
in
enter
mov
push
jns
in
add
bound
shll
sbb
push
and
fdivrs
outsl
fwait
sahf
push
adc
lret
mov
mov
xchg
push
loope
cli
sahf
stos
adc
stos
and
out
lret
mov
mov
cmp
mov
jne
cmp
sub
pop
mov
jmp
xor
pushf
ss
xchg
sub
push
roll
lcall
push
push
push
adc
cld
pop
push
and
dec
inc
fs
mov
jg
push
leave
sub
aad
cmp
push
repnz
push
add
int3
xor
rclb
fidivl
inc
push
fwait
mov
cmp
pop
sarl
mov
std
bound
pop
mov
mov
es
pop
jb
pop
add
sbb
and
push
mov
lret
cmp
mov
push
or
in
stos
orl
fcoms
jle
mov
pusha
cmp
sahf
pop
xor
ja
lcall
nop
loop
movsb
sti
je
fsubrl
sbbl
aas
xchg
addr16
stos
out
dec
or
or
loope
out
neg
gs
rolb
cmpsl
xchg
mov
inc
subl
push
movsb
fs
cmp
daa
ljmp
add
lds
mov
stos
sbb
mov
in
adc
fdiv
ss
mov
dec
call
out
aam
jmp
lods
cmp
adc
enter
xlat
popa
decb
adc
imul
jg
cmp
shll
movsb
cli
add
mov
subb
ds
jp
aas
cmpsl
pusha
mov
mov
mov
loope
or
je
mov
cmovp
ds
inc
inc
sbb
lret
sbb
insl
out
push
icebp
fwait
insl
dec
mov
rcrb
mov
add
jae
jmp
lcall
leave
xchg
out
pop
jne
loope
mov
cmpsb
mov
addr16
dec
lret
insl
dec
and
divl
mov
mov
jo
push
inc
dec
sbb
cmpb
add
jp
dec
sbb
cwtl
fucomi
jmp
push
ljmp
in
int3
mov
into
test
push
sahf
xor
xor
in
pop
add
int3
or
adcb
lods
call
mov
xchg
push
out
xchg
pop
wbinvd
mov
jmp
cmp
shl
jae
adc
inc
mov
jae
xor
fsts
jge
mov
idivl
jb
rcll
lds
ret
inc
cmp
out
fsts
pop
add
and
adc
jl
xchg
je
roll
mov
repz
dec
clc
sbb
out
out
int
xor
push
ret
insl
push
sub
sarb
or
push
unpcklps
arpl
cwtl
lcall
jae
push
insl
and
das
add
push
mov
stc
repnz
ret
cltd
adc
jbe
and
fildl
or
inc
fmull
pop
jmp
pop
dec
hlt
es
mov
push
sahf
ret
cmp
sbb
clc
addb
pop
add
test
dec
int
fcmovnb
push
movsb
or
xlat
aaa
loop
cmp
sub
aam
jecxz
ss
sub
loope
jae
aam
fwait
sbb
lods
mov
cmpsb
jecxz
adc
pop
cmp
mov
mov
call
dec
mov
out
and
ja
mov
mov
fmul
mov
gs
addr16
mov
adcl
test
xor
out
in
loope
mov
lea
cwtl
test
and
push
push
sub
jbe
call
aam
cmp
call
std
jo
pushf
jmp
jecxz
in
in
decb
fimull
jae
cwtl
jecxz
pop
mov
scas
shll
xchg
xchg
add
std
lods
cmp
movsb
mov
xor
sarb
sbb
cltd
sbb
xchg
xlat
xor
sbb
lds
inc
jg
test
fdivrl
xchg
inc
aam
repz
leave
out
add
add
imulb
mov
outsl
daa
popa
mov
stos
dec
xchg
pushf
fisubrl
mov
and
or
jge
das
cld
insl
jb
ret
rcrl
push
jo
test
dec
ja
sarl
jmp
or
outsl
inc
jne
sbb
outsl
adc
addr16
add
or
mov
push
and
cmp
mov
rcll
cmp
les
push
fs
mov
push
mov
pop
int
lret
add
inc
repz
xor
ret
pop
push
or
mov
fcomip
dec
hlt
fimull
xchg
fstpt
xchg
jns
add
testb
jbe
mov
movsb
xchg
insb
jb
cld
jmp
xor
cmpsb
pop
add
stos
jge
insl
sbb
cmp
add
shl
or
jae
jecxz
rcrl
ret
rolb
aas
fcmovnu
movsb
inc
mov
roll
pop
lods
ret
xor
popf
and
cmp
jnp
dec
xor
in
sahf
and
mov
movsl
mov
xor
stos
lret
dec
pop
xor
nop
push
or
pop
push
test
sbb
push
pop
push
cmp
jl
add
aas
mov
adc
add
push
or
shrl
or
lods
mov
int3
icebp
shll
ds
cmpsl
pop
into
pop
xchg
inc
or
mov
pop
mov
or
mov
sub
fcomps
mov
adc
xor
inc
mov
push
aam
xchg
cld
ljmp
stc
add
jno
push
sbb
adc
aaa
sbb
sbb
leave
aad
je
adc
push
xlat
insl
icebp
outsl
std
dec
cwtl
cmc
push
sub
and
mov
push
adc
imul
bound
cli
mov
pop
ret
cltd
repz
jg
mov
pop
and
das
push
add
adc
push
les
mov
out
mov
xchg
lcall
rolb
sbb
addb
dec
ret
pushf
inc
das
or
outsb
daa
sbb
xlat
test
cmc
mov
enter
xchg
fs
call
aad
out
and
jle
nop
mov
mov
out
push
mov
xorb
add
cwtl
and
popa
lods
mov
decl
cmp
cmpsl
scas
cmp
ret
push
cmp
or
bound
daa
call
fldlg2
cmpsl
dec
jecxz
mov
outsb
jle
repz
jg
xchg
mov
sbb
inc
es
mov
xchg
cmp
int
jo
iret
gs
fcoml
popa
gs
mov
mov
std
sbb
cltd
sbb
stos
enter
mov
shlb
pop
adc
mov
stos
jo
cmpsl
add
xchg
push
mov
adcb
fstpl
adc
movsl
sub
mov
dec
rorl
lcall
popf
xor
in
xlat
inc
jbe
push
dec
sub
movsl
mov
mov
add
mov
mov
cmpsl
lret
dec
dec
mov
dec
dec
int
movsl
dec
pop
aam
rcrb
and
add
mov
pop
xchg
jmp
xchg
bound
clc
add
add
adc
jnp
pop
mov
xchg
std
add
test
pop
fidivrl
in
inc
icebp
cmp
pushf
dec
and
sub
nop
les
jmp
shl
test
add
add
jle
rorb
mov
sub
cmp
sub
jg
arpl
adcb
and
mov
je
imul
negl
fldl
jmp
je
push
fadds
push
cwtl
mov
mov
jnp
jmp
push
mov
add
adc
inc
push
dec
mov
and
inc
sbbb
pushl
jp
in
jo
push
mov
xor
mov
scas
rorb
sub
aad
ror
testl
incb
mov
adc
fistps
push
sub
dec
jnp
jl
or
mov
mov
test
in
push
aad
cmp
and
bnd
sbb
mov
push
dec
ljmp
or
adc
fists
mov
movsb
ss
loop
mov
jmp
je
xchg
mov
lahf
sbb
and
les
enter
mov
push
ss
cli
sahf
ret
mov
inc
push
push
cmc
and
cltd
jmp
lahf
cmp
push
fisubrs
inc
imul
lret
test
pop
fildll
push
movsl
mov
stos
sub
mov
sub
repnz
push
xchg
and
xor
fisttps
fildll
push
stc
xchg
mov
mov
jge
movsb
jg
push
aaa
leave
rcll
loope
lea
bound
sub
lcallw
cltd
cld
push
mov
dec
jbe
aam
lret
fisubl
push
test
adc
mov
jbe
imul
sbb
pop
loop
sbb
mov
adc
jo
scas
push
ja
jae
pop
addr16
repnz
lret
and
arpl
je
xor
inc
movsb
insl
inc
sub
and
movsb
inc
sub
mov
xlat
icebp
fldcw
sbb
pop
and
out
push
lcall
ficomps
pushf
adc
push
call
lcall
outsl
jno
js
fldl
mov
sbb
repz
xor
inc
push
ja
add
xor
iret
sub
inc
xchg
push
inc
cli
movsb
mov
imul
popa
dec
jns
ret
fadds
push
mov
bound
add
add
push
movsl
int
mov
test
cmp
mov
shll
pop
adcb
pop
cmp
fldcw
pop
loope
mov
mov
or
lock
inc
push
pushf
xlat
jnp
xchg
outsb
addr16
pop
ret
xor
pop
mov
insl
jg
xchg
bound
mov
or
jle
mov
aas
push
aaa
fistpll
pop
shlb
aad
inc
in
call
outsb
pop
cmp
mov
mov
test
mov
add
fs
into
cwtl
shlb
dec
mov
in
negb
push
push
sbb
aam
shr
andb
stc
cmp
mov
mov
add
xor
popf
jl
sub
into
popf
in
inc
adc
popf
loopne
hlt
andb
sbb
in
dec
cmp
mov
bound
ljmp
fcmovu
enter
movsb
mov
xchg
aaa
cmc
mov
or
cmpsb
push
nop
cmp
fucomip
scas
or
mov
pusha
xlat
xchg
outsb
imul
aam
mov
jmp
hlt
add
dec
popf
addr16
cmc
cmp
lea
loop
inc
dec
shll
adc
mov
icebp
icebp
mov
cwtl
inc
icebp
insb
dec
lea
mov
fidivl
push
fs
pop
test
mov
in
int3
lods
push
mov
sbb
sbb
jno
fisubl
sub
mov
mov
hlt
pop
shlb
sub
les
push
cld
int
mov
cld
inc
sbb
std
shl
mov
jp
mov
in
sub
push
adc
mov
jne
cmpb
xor
and
stos
fistps
inc
jno
or
xor
cwtl
hlt
test
fisubrs
add
call
xchg
adc
sbb
cmp
sti
loop
int3
in
fidivs
sbb
inc
sti
push
push
adc
sub
mov
movsb
nop
pinsrw
repnz
inc
mov
test
cmpsl
aas
stos
jge
data16
mov
inc
loop
fwait
pop
mov
lds
mov
and
ret
mov
and
movsl
mov
scas
fwait
pop
aaa
adc
aas
shlb
fdivrl
or
mov
push
lcall
lret
add
adc
push
andl
push
sbb
inc
mov
bound
dec
andb
push
mov
sub
bnd
and
aaa
mov
lods
imul
or
push
sub
loope
add
push
repnz
mov
and
adc
ja
inc
mov
cmp
call
fstpt
call
xor
test
adc
inc
mov
mov
jns
ja
addr16
aas
or
jne
ret
jnp
inc
pop
cmpsb
add
rclb
jae
cmp
mov
xchg
inc
inc
pop
add
fwait
es
xchg
das
fcompl
adc
jg
cmc
push
lret
inc
test
sbb
jo
mov
jmp
adc
int3
jns
stos
aad
inc
xor
and
dec
je
pop
test
push
xchg
inc
ret
sub
pop
inc
inc
mov
mov
mov
push
fisttpl
mov
outsl
movsb
clc
lahf
cmc
fwait
jno
ja
push
xor
sbb
push
mov
push
scas
nop
cmp
sbb
jmp
push
add
jmp
add
and
rclb
out
sbb
mov
into
pop
inc
mov
jns
fs
iret
aas
js
aam
fisttpll
ljmp
xor
das
jnp
inc
movsb
jae
jg
xor
test
sahf
mov
mov
mov
dec
xchg
xchg
in
mov
mov
dec
cmpsl
ss
sbb
inc
cmp
enter
mov
pop
adc
pop
pushf
gs
rorb
add
js
pop
stos
jae
inc
mov
shl
dec
adc
mov
pop
sub
out
jo
pop
push
rcll
cltd
push
jg
data16
dec
add
pop
insb
dec
iret
pop
push
sub
inc
ret
dec
clc
sbb
push
jmp
shrb
inc
stc
xchg
jle
sbb
outsb
fld
rcrb
and
jb
out
and
sub
xchg
mov
rcrb
inc
leave
loop
dec
xlat
push
xchg
mov
pop
mov
imul
sarl
lods
mov
and
jmp
rcrb
hlt
imulb
scas
mov
repnz
cmp
push
push
ja
push
addr16
stos
std
pop
and
and
test
mov
popa
mov
scas
and
shll
out
mov
jecxz
and
inc
inc
cwtl
repnz
stos
pop
pop
and
jge
xor
dec
jbe
mov
ja
or
lret
adc
lods
int
andb
call
mov
in
xor
xchg
fiaddl
aam
fidivl
push
cld
jbe
lcall
mov
ljmp
sahf
dec
xchg
jmp
push
sub
movsl
cli
cmp
pop
aaa
outsl
lods
lods
sbb
sbb
sbb
loop
sbb
repz
mov
sahf
xchg
repnz
mov
je
punpckhdq
movsb
cmp
in
test
push
xor
adc
mov
movsl
aad
push
loop
mov
in
inc
push
inc
add
sub
cmc
push
out
shrb
in
int3
js
popf
lea
sbb
mov
imul
jge
movb
xlat
jns
pop
jnp
xlat
aas
push
mov
or
and
out
data16
or
push
adc
xchg
jmp
stos
adcb
and
jne
or
xchg
and
dec
nop
add
dec
imull
inc
lock
or
mov
scas
pusha
add
arpl
repnz
pop
adc
outsb
mov
sub
xor
stos
cmc
stos
inc
and
push
fldl
out
shrb
or
mov
xchg
aas
outsl
addr16
mov
insl
hlt
rcl
pop
lahf
mov
xor
pop
lods
gs
xor
inc
mov
jmp
jl
push
push
push
xor
mov
dec
xor
mov
dec
mov
fadds
fsubr
mov
cld
fimull
or
jmp
pop
xorl
inc
out
sbb
dec
scas
jg
add
mov
hlt
stos
jp
mov
mov
mov
fcmovnbe
mov
ret
ret
pusha
sub
sub
insl
pop
lahf
xlat
fidivrl
repz
xchg
pop
es
data16
push
push
push
add
enter
jo
cmpsl
jb
test
sbb
sub
mov
pop
iret
inc
xchg
xor
push
mov
pop
xchg
mov
pop
mov
push
out
loopne
pusha
push
and
adc
loopne,pn
mov
mov
dec
hlt
push
xor
mov
mov
dec
xchg
pop
sub
lahf
sbb
daa
popa
insl
shl
sub
dec
jmp
sub
sub
pop
movsb
fdivs
inc
xchg
push
outsl
testb
push
fsubl
dec
roll
inc
js
ret
gs
cmp
ret
mov
cmpb
sbb
sbbb
test
mov
inc
push
xchg
lods
dec
xchg
sahf
cmp
movsb
adc
ret
repz
fldt
mov
xchg
pop
mov
mov
cs
mov
pop
pop
dec
xor
mov
mov
fcmovb
fcmovnb
pop
hlt
cmpsb
and
into
inc
in
jle
mov
sti
popa
mov
cmpsl
lcall
stos
out
subb
aaa
push
enter
jne
fcom
mov
cmp
testl
je
inc
inc
xor
push
imul
sub
add
mov
adc
ds
cs
mov
ds
sbb
popa
mov
fistpll
push
stos
pop
jbe
fxch
hlt
les
mov
loop
insb
fs
dec
xor
and
push
ds
lea
scas
pop
ds
les
fcoml
add
jecxz
iret
test
push
add
push
fimull
inc
mov
xchg
data16
add
loope
in
fmul
cmp
adc
push
jmp
inc
jecxz
addr16
or
mov
lcall
fs
adc
mov
sbb
dec
mov
test
popa
inc
nop
test
aam
fwait
inc
and
hlt
fcoms
mov
and
cmp
pop
xchg
mov
mov
sbb
xchg
fnop
addr16
outsb
cmp
pushf
pop
pop
jg
ja
jnp
fmuls
dec
mov
enter
lret
gs
lods
xor
xchg
pop
dec
inc
js
mov
in
cmpsb
jle
jl
stc
add
loopne
and
and
lahf
mov
sbb
lret
xor
test
es
dec
je
pusha
mov
imul
and
lcall
icebp
and
pop
stc
push
cmpsl
jg
decl
daa
nop
cmp
into
sbb
cmp
and
cli
outsl
pushf
xlat
test
dec
scas
insb
sbb
push
imul
aad
pop
into
sahf
sti
dec
jle
mov
add
gs
loop
push
mov
or
mov
rorl
ja
add
mov
adc
je
and
nop
popf
and
push
test
iret
out
inc
adc
outsb
mov
sbb
cmp
adc
stc
sysenter
mov
cmp
xorl
or
pop
add
addl
jmp
int
cmp
pop
shll
jb
hlt
jmp
adc
jle
inc
rcrl
mov
call
or
mov
adc
mov
jmp
repz
pusha
ljmp
test
and
rclb
ss
lds
mov
xor
inc
int3
cmpsb
imul
mov
dec
jo
pop
mov
fbld
mov
and
mov
cmp
mov
ljmp
lods
cmp
xor
add
stos
cld
lahf
ja
sti
sahf
xchg
sti
test
cmp
into
adc
cmp
xchg
mov
mov
mov
fmuls
xorb
xchg
adc
mov
outsl
sub
dec
push
stos
imul
stc
stos
movsb
les
into
cmp
es
fst
pop
xlat
sub
sbb
or
ret
data16
push
clc
lret
rcrb
js
add
fucom
cmpsb
das
out
roll
loop
cmpsb
jp
adc
dec
pop
test
test
je
inc
add
cld
iret
sahf
pushf
andl
sub
movsl
xchg
shrl
and
popf
mov
sti
cwtl
inc
add
sub
xor
jmp
das
add
adc
loope
test
loope
inc
pop
or
mov
hlt
fisttps
jne
rol
fmulp
inc
sub
lods
jge
fbld
das
sub
cmp
addl
mov
sbb
ds
call
pop
pop
movl
sbb
dec
xor
loop
and
sahf
test
scas
jg
cld
mov
sub
dec
xor
ror
hlt
inc
jae
imul
sbb
pop
enter
bound
push
push
data16
cmp
jnp
cld
mov
or
adc
int3
in
imul
adc
xchg
sbb
pop
and
in
mov
xor
shlb
lahf
dec
mov
js
push
mov
outsl
mov
shlb
jne
test
adc
jne
mov
aas
cmp
jle
leave
mov
stos
orb
mov
push
ljmp
lcall
inc
mov
xor
sbb
cli
loope
mov
sahf
aam
push
clc
rolb
aas
cli
mov
dec
inc
jge
sahf
sub
sub
jp
andb
leave
dec
jo
mov
in
fistps
test
stos
dec
pop
daa
cmp
pop
imull
es
fs
sbb
pop
cwtl
iret
add
lcall
push
fldcw
dec
mov
shlb
out
cs
jo
mov
push
dec
dec
insb
imul
or
gs
je
pop
jl
add
xchg
mov
icebp
lock
push
cmp
or
cmpsb
push
and
jecxz
shll
shlb
dec
into
lods
loop
aas
movsb
inc
cmp
cs
or
iret
inc
lock
sti
nop
push
rcrl
in
or
shl
sub
sti
adc
mov
xchg
push
sub
or
or
adc
movsb
flds
push
dec
or
sbb
out
roll
cmp
je
push
test
jns
mov
push
daa
out
add
outsb
mov
and
nop
outsl
stos
rorb
aaa
mov
ljmp
aaa
addr16
lock
jmp
sub
mov
inc
aas
push
jp
jb
add
out
imul
out
jp
mov
and
aad
sti
sub
bound
fcoml
js
push
mov
lods
int
push
mov
mov
repz
push
push
les
mov
out
dec
out
sahf
inc
aad
pop
xor
sub
and
outsb
loopne
mov
into
add
push
in
sub
scas
cmp
js
push
cmp
jae
xlat
jge
jecxz
in
inc
arpl
cwtl
sbb
scas
adcb
pusha
std
mov
sti
jp
insb
icebp
dec
mov
pop
pop
jns
jno
jnp
xchg
mov
jmp
adc
sub
cmp
cmpsb
enter
add
inc
int3
fistps
inc
xor
shr
insb
mov
sbb
jle
mov
lods
test
lahf
xchg
mov
mov
mov
sbb
sub
lods
and
rolb
cltd
mov
pop
gs
sub
xlat
push
test
icebp
dec
pop
mov
mov
xchg
add
nop
cld
popa
xchg
sbb
cld
jmp
jmp
addr16
fdivrl
jle
aad
outsl
adc
inc
out
add
mov
jecxz
ja
arpl
rorb
pusha
pop
fwait
test
test
xor
cld
or
ror
pusha
rcrl
lret
xor
push
int3
je
je
cmpsb
cmc
lahf
inc
stos
mov
inc
testb
adcb
jp
cltd
cmp
pop
push
stc
cmp
mov
mov
addr16
fnstsw
inc
sbb
inc
sbb
ljmp
idivl
jle
xor
imul
push
fimuls
pop
sbb
rclb
sbb
fstps
ss
ds
mov
xchg
and
test
lret
mov
gs
xchg
sub
test
mov
xor
outsl
lcall
push
add
iret
pushl
cmp
push
ret
mov
inc
jge
mov
enter
adc
xchg
xchg
adc
sbb
lret
pop
add
mov
add
pop
fcmove
xchg
ljmp
mov
pop
mov
cli
gs
loopne
jle
jge
out
xchg
inc
push
and
cmpsl
sar
xor
insl
xchg
jecxz
push
orb
mov
test
aam
xchg
ret
int
sub
pop
sbb
jecxz
fmull
sti
testl
aad
xor
sar
jo
push
fistpl
push
sub
push
sub
mov
jp
or
inc
add
lods
int3
in
add
inc
stos
push
pop
push
mov
or
mov
cs
js
sbb
jae
stos
jp
inc
lds
and
sub
rorl
mov
mov
mov
cmp
imul
loopne
dec
jp
push
test
dec
mov
and
leave
inc
insl
push
test
loop
and
mov
dec
inc
shrb
xlat
inc
sti
insl
daa
outsb
adc
dec
inc
dec
jo
mov
negb
inc
call
xchg
mov
outsl
add
mov
gs
sub
inc
data16
test
push
aaa
aad
or
or
add
outsl
addr16
jecxz
testb
gs
outsb
fcmovne
or
xchg
out
mov
and
pushf
sbb
mov
std
pop
pop
xor
clc
test
or
xor
xlat
jno
sti
push
lods
cmp
das
lock
outsb
sbb
mov
aaa
in
sbb
add
ss
xor
mov
int
pusha
lcall
nop
stc
cmc
cmpsl
mov
push
into
dec
popa
jl
dec
stos
loop
nop
mov
inc
jge
cmp
fs
dec
out
mov
sub
jmp
inc
push
push
out
in
sbb
sbb
incb
xchg
dec
push
pop
cmp
ficoms
lahf
fnstcw
mov
push
add
mov
test
test
mov
rorb
mov
push
ss
add
sbb
pop
mov
inc
loop
lods
je
movsb
notl
mov
mov
sub
fdivs
adc
xchg
rorl
sub
push
adc
xor
xor
or
daa
sti
xorb
inc
test
int3
mov
mov
inc
pop
push
pop
or
pop
add
mov
insb
and
push
jbe
pop
xor
jg
lock
jbe
notb
add
mov
nop
jb
pop
mov
mov
sbb
mov
stc
pop
dec
stc
repnz
in
popa
enter
jp
je
sbb
or
push
std
add
push
test
cmp
fdivs
inc
mov
push
push
xchg
mov
movsl
and
fsts
mov
icebp
je
jae
bnd
jmp
inc
push
pop
fstps
lods
sub
and
pop
xor
dec
enter
pop
add
test
cli
in
cmp
es
mov
int3
call
push
push
jecxz
xchg
jecxz
xor
addb
fs
xor
sbb
fldt
or
mov
in
enter
dec
xchg
gs
iret
and
sbb
mov
cmc
jl
iret
movsl
sub
in
imul
popf
dec
cmpsb
push
dec
mov
or
loope
cmpsb
lea
les
mov
clc
jb
push
adc
push
pop
jmp
int
cld
xor
and
daa
or
ret
jnp
stc
and
ret
subl
cwtl
jle
out
dec
out
sbb
mov
cli
sbb
das
lahf
jns
dec
popf
mov
outsb
mov
fdiv
hlt
sbb
mov
cltd
aam
mov
out
lret
paddb
dec
cmp
xchg
add
dec
lods
push
ja
in
mov
cwtl
adc
push
cmc
or
leave
jne
mov
or
mov
andl
jecxz
push
outsl
roll
mov
loopne
faddl
pop
adc
stos
cwtl
mov
clc
lock
adc
xor
sarb
sbb
xor
push
cltd
and
fwait
mov
cld
int
add
outsl
dec
inc
dec
cmp
test
adc
cltd
jl
int
xor
pop
sub
push
bound
stos
push
lods
jg
mov
sbb
fisubl
scas
sub
mov
cmp
pusha
je
sbb
shl
and
push
xchg
mov
fs
sbb
mov
jmpw
aaa
mov
jmp
mov
adc
xchg
cwtl
jmp
mov
jg
add
xlat
insb
add
sarb
in
cmp
sbb
mov
mov
rcll
pop
push
sbb
xchg
push
aam
in
or
push
xchg
in
jnp
sub
aaa
xchg
arpl
mov
sub
mov
jno
fcmovbe
adcl
orl
mov
cld
and
in
jl,pt
adc
pushl
jbe
adc
lds
sub
sub
arpl
andb
mov
outsl
xor
add
pop
mov
fcoml
xorl
and
inc
jno
jle
pop
aas
cwtl
xlat
cmp
arpl
cmpb
mov
out
movsb
adc
outsl
dec
mov
data16
inc
aad
aad
push
aaa
ljmp
mov
jmp
fistl
pop
pusha
or
sti
sbb
cmp
ljmp
xchg
sbb
cltd
xlat
mov
cltd
jns
mov
es
fwait
aad
push
sub
inc
ss
mov
xor
sarl
aaa
mov
cmp
push
inc
mov
cld
fcmovnb
mov
xchg
lret
xchg
bound
sbbb
cmp
and
xchg
push
jnp
jmp
pop
push
lods
lock
aaa
out
adc
mov
mov
in
mov
stos
or
push
mov
or
ljmp
jle
jb
xor
cmp
push
xor
pop
dec
or
jnp
in
xlat
out
inc
pop
push
push
sub
rorl
sbb
ds
sub
add
inc
cmp
decl
scas
cmpsl
cmpsb
mov
pop
mov
stc
jmp
test
out
mov
or
jmp
push
jnp
test
in
mov
or
xor
xor
xor
dec
xchg
mov
mov
cmp
mov
leave
int
in
pop
es
push
cwtl
loope
mov
pop
fs
movsb
in
push
ds
int3
mov
stc
popf
fisubs
jmp
adcb
mov
sub
lahf
inc
or
inc
jecxz
jl
enter
dec
neg
adcl
hlt
xchg
or
scas
push
sub
lret
movsl
sbb
popa
enter
adc
bound
and
repz
fists
xchg
call
cmp
push
fildll
lahf
push
cmpsb
xchg
pop
mov
or
sarb
dec
sbb
and
aam
mov
mov
leave
mov
cmp
pop
call
mov
mov
sub
jbe
sub
outsb
inc
fs
fucomip
insb
les
dec
sti
call
testb
movsl
std
into
dec
cs
stc
pop
mov
push
enter
and
arpl
xchg
inc
pop
xchg
loop
ja
out
popw
out
repnz
or
leave
loopne
pop
sub
je
movsb
jl
testl
push
pop
lret
je
xor
add
adc
sub
xacquire
in
cmp
push
lods
xchg
mov
xor
scas
clc
inc
hlt
mov
jl
imul
lods
mov
dec
lcall
and
jg
repnz
rclb
out
fmul
je
aaa
adc
mov
xor
test
push
out
xchg
cmp
sbb
je
xchg
test
fidivs
cltd
mov
test
add
xlat
jecxz
int3
mov
add
fmulp
push
aam
ljmp
lea
add
lds
sti
pop
in
push
inc
cltd
cmpsb
jge
popa
inc
fsubs
stos
cltd
int3
notb
jle
test
idivl
and
int3
jmp
cmp
stos
mov
leave
push
pop
es
inc
ja
insl
mov
test
push
xor
pop
outsb
outsb
cs
push
mov
pop
cmc
mov
call
add
lahf
add
pop
fnsave
inc
jecxz
inc
xor
inc
add
int
insl
hlt
sub
in
adc
loopne
orb
scas
in
mov
test
movsb
jbe
aam
fnsave
mov
stos
scas
in
push
sbb
mov
sbb
ja
ljmp
cmp
daa
je
jbe
sahf
lret
lock
pop
sbb
xchg
pop
xlat
push
jg
pop
sub
jg
ds
add
ljmp
mov
inc
lahf
push
ret
and
pop
lea
ret
push
inc
cmpsb
fsubrs
cmp
xchg
fwait
jp
jl
mov
repz
mov
sub
inc
dec
xchg
jbe
inc
clc
pop
cmp
xchg
xchg
xchg
scas
subl
sbb
inc
iret
rclb
mov
int3
out
addr16
cmp
lcall
ss
lcall
or
subl
movsb
sti
cmpl
mov
stc
nop
js
das
push
dec
sub
ret
xor
test
xlat
push
add
pop
push
sti
into
sub
scas
loope
outsb
mov
das
stos
daa
dec
stc
testl
out
add
xchg
xchg
adc
scas
jmp
inc
cmpsb
mov
add
loopne
mov
lcall
xchg
jecxz
add
jno
shlb
lcall
cmc
mov
fistpl
mov
popa
sub
inc
mov
mov
repnz
sbb
or
fs
fdivr
jmp
mov
xor
inc
pop
fmul
and
pop
inc
mov
dec
and
lea
ja
out
insb
dec
push
ret
cwtl
fwait
dec
mov
std
rdtsc
sbb
add
xchg
sub
mov
mov
cltd
lret
mov
shrl
cmp
outsb
pop
test
sub
mov
popf
lret
mov
mov
adc
push
xchg
aad
fs
push
cmpb
sbb
jl
push
adc
jae
cmp
sbb
xor
movb
mov
in
outsb
pusha
or
stos
fildll
sub
enter
sub
pop
dec
jmp
fadds
mov
and
push
cld
fcomp
pop
sbb
movsl
dec
xchg
xchg
xchg
daa
push
ds
bound
add
lds
sbb
je
fs
movsb
repz
ud1
addr16
inc
xor
jno
loop
push
mov
cmc
out
das
decl
jnp
dec
jnp
mov
push
inc
xor
int
and
mov
xchg
push
mov
xor
push
inc
add
push
add
mov
cmp
inc
sti
jmp
pop
mov
lock
addl
cli
aaa
gs
dec
mov
int
sahf
loope
jl
cmpsl
pop
pop
pop
sub
or
loopne
outsb
aam
popa
mov
cmc
outsb
sbb
stos
add
pusha
fbld
xchg
cmp
scas
add
cltd
je
or
cmc
dec
in
cld
stc
orl
aaa
mov
adcb
fwait
cmp
fldt
inc
pop
ret
mov
push
mov
subb
or
cmp
insl
sti
addl
push
pop
lods
sti
ret
shl
jno
dec
jmp
mov
imul
aad
and
add
adcl
loopne
fistpll
idiv
or
das
leave
jno
dec
repz
fisttps
lahf
dec
test
dec
stos
xchg
out
stc
aam
xor
mov
lds
sbb
jmp
test
loop
mov
in
iret
or
cmp
sbb
dec
and
repz
lahf
popl
inc
outsb
idivb
xlat
pop
ss
sahf
or
or
adc
dec
inc
sbb
dec
ret
dec
pusha
sbb
inc
outsb
sbbl
xchg
mov
push
dec
stos
xchg
repnz
inc
sbb
testl
dec
cli
push
cmpsb
ret
outsb
xchg
out
dec
mov
outsl
mov
push
fsub
push
ret
ret
cmpsb
adc
popa
mov
and
dec
and
add
lret
loope
aam
inc
xchg
xor
pop
mov
cmp
dec
icebp
push
aaa
mov
ret
xchg
pop
jae
sti
stc
in
mov
xor
add
inc
repz
or
cmpsb
test
into
test
dec
sbb
rcrb
xorb
or
lods
cmpsl
jl
inc
std
mov
sti
adc
jecxz
daa
sti
aad
frstor
push
add
pop
bound
mov
sbb
test
xchg
add
aad
sub
and
lods
cld
ja
push
aas
jmp
cmp
pushf
xor
fimuls
gs
loopne
sbb
jns
push
or
outsl
inc
loop
notl
iret
stc
cld
and
sarb
add
inc
scas
xlat
fnstcw
push
or
flds
cwtl
lret
ljmp
pop
cli
push
pop
call
fimuls
add
sahf
shr
push
clc
dec
xchg
mov
leave
mull
les
dec
cld
xor
hlt
pop
push
and
push
add
in
ror
scas
cmpsl
mov
mov
or
rorl
mov
inc
pop
gs
jae
sti
sbb
popa
adc
dec
mov
fdivl
cmpsb
mov
dec
jne
pop
inc
test
pop
gs
inc
out
mov
das
adc
icebp
into
inc
push
call
push
flds
mov
xchg
mov
add
les
push
jae
je
fcoml
cmc
repnz
pop
push
in
daa
inc
ret
jle
cmc
and
adc
test
inc
std
fdivrp
cltd
jmp
mov
mov
jp
dec
dec
mov
leave
stos
loop
imul
in
jb
cmp
mov
add
outsl
nop
scas
jle
inc
popf
stc
and
adc
addb
jg
sub
inc
jne
jecxz
mov
sub
jge
xor
mov
pop
stos
inc
or
and
daa
jp
loop
sbbb
leave
aam
cmp
xchg
mov
ljmp
mov
xor
jmp
call
gs
cmp
xchg
and
add
gs
fst
xchg
or
into
out
and
sub
cmpb
testl
jg
push
pop
mov
out
pop
aas
cmp
fldt
sbb
add
out
ret
xor
stc
loope
aaa
aaa
xorb
cmp
loop
sarl
mov
popa
shl
iret
movsbl
insb
jp
outsb
stc
shlb
cmp
mov
add
cs
fs
fcompl
mov
scas
cmpb
add
in
jg
dec
xchg
scas
xor
das
stc
push
mov
lahf
mov
dec
ds
sbb
jl
xchg
xchg
jge
js
push
inc
inc
sbb
roll
or
popa
inc
inc
mov
cmp
aaa
xchg
in
in
mov
xor
cmpsb
inc
outsl
ret
mov
mov
pop
in
sbb
or
or
nop
mov
jo
jecxz
adc
xchg
or
stos
mov
adc
jno
cmpsl
sub
adc
push
lea
test
ja
pop
dec
stos
jge
mov
bound
mov
mov
mov
out
mov
fstl
cmp
js
adc
les
push
xlat
rorb
inc
rcll
xor
cli
dec
inc
sub
push
adc
arpl
add
das
push
xchg
add
dec
fsub
mov
push
pusha
inc
mov
xchg
push
dec
push
hlt
jb
mov
test
aam
in
mov
or
sub
push
inc
push
jno
pop
cmp
fcom
inc
mov
xchg
sub
add
jnp
mov
sti
or
ja
pop
rorl
inc
les
nop
mov
xor
aad
test
dec
setge
rcrl
and
bound
cmp
and
jmp
insb
sbbb
cld
push
pop
aaa
mov
mov
cltd
jae
loope
push
int
mov
sbb
mov
stc
inc
pop
add
out
cs
in
jl
test
sahf
dec
sbb
ja
push
mov
mov
lcall
xorl
add
mov
mov
push
and
scas
insl
xchg
cld
jo
jge
jnp
cltd
cmp
mov
addr16
ret
clc
jne
movsl
rcrl
xchg
jecxz
clc
dec
and
sahf
pop
adc
test
fistpl
mov
mov
gs
add
sarb
shrl
and
inc
xor
xchg
clc
push
inc
lret
jg
imul
idiv
fcom
jecxz
fisubrs
xlat
ljmp
xor
addb
or
mov
insl
mov
push
mov
xorb
sbb
jmp
adc
push
je
cmp
pop
leave
or
scas
stos
xchg
imul
in
mov
xchg
jns
pop
mov
test
nop
gs
cmp
xchg
enter
add
lret
mov
or
insl
add
mov
pop
cs
pop
add
adc
sub
rcll
sahf
ret
les
jbe
mov
dec
or
mov
pop
cltd
jge
mov
dec
sahf
mov
addr16
test
or
movsb
rcr
push
mov
dec
or
test
mov
pop
test
sub
pop
pop
mov
rol
mov
lods
mov
mov
mov
sub
pop
sub
imulb
int3
in
push
pusha
lret
notl
sbb
sub
inc
in
aas
orl
pop
dec
stos
int3
cmp
bound
mov
jo
push
xchg
imul
add
fnstsw
jg
mov
nop
jge
mov
sbb
or
in
sbb
scas
lahf
add
adc
aam
dec
dec
and
add
pushf
scas
in
insl
jnp
aam
loopne
add
sti
rcll
aas
out
scas
cld
es
out
lea
fisubl
fisubrl
out
xchg
ljmp
dec
jl
lds
or
inc
cvtss2si
inc
pop
scas
mov
add
test
roll
addl
fists
mov
pop
lret
es
push
aaa
dec
dec
sbb
mov
rcrl
dec
xchg
bound
dec
movsb
arpl
add
and
clc
int3
test
mov
jl,pn
mov
pop
andb
jbe
movsb
divl
cs
daa
sub
stos
jge
mov
dec
xchg
mov
inc
sbb
pusha
imul
xchg
adc
lcall
mov
xor
fildll
xchg
insl
dec
add
cmp
sbbb
pop
ficomps
sbb
pushf
rcll
insb
imul
jne
sbb
mov
and
data16
pusha
jb
js
push
out
ret
dec
and
jl
aaa
movsb
stc
imul
dec
add
or
mov
adc
lea
out
nop
ret
sbb
dec
jb
adcl
fdivrp
scas
dec
sbb
inc
jae
insb
outsl
fldt
jle
mov
inc
or
cld
jecxz
mov
adc
lea
or
add
pop
mov
adc
or
push
mov
fmuls
shrb
sub
scas
jnp
nop
scas
or
nop
insb
ja
xlat
stos
jmp
in
push
adc
jmp
mov
jae
mov
cmp
mov
push
ret
in
xchg
sti
lock
push
imul
or
mov
sub
test
jp
pop
scas
mov
push
loope
xchg
dec
shll
pop
sub
add
xor
inc
pop
fstpt
cs
bound
jbe
mov
lcall
add
stos
and
popf
cmp
cmp
add
inc
xor
test
push
shl
sbb
xchg
int
les
jmp
bound
jle
jle
scas
xchg
mov
dec
mov
bound
adc
add
inc
popf
je
mov
inc
jo
add
push
pop
cmp
xchg
mov
test
xor
sub
or
shll
sbb
adc
movsl
or
mov
cli
popa
subb
out
mov
push
lods
lea
ja
insb
adcl
xorl
insb
and
mov
les
add
sbb
fisttpll
or
add
mov
daa
sub
and
sbb
fwait
sbb
sub
xor
test
mov
sub
pop
mov
popf
enter
das
cmp
sbb
cmpsb
scas
inc
fs
push
stos
inc
push
pop
xchg
sar
repz
sti
push
je
loope
and
fnstcw
xorb
sbb
aad
pop
inc
insb
loope
push
out
jne
fs
pop
mov
or
push
and
pop
in
mov
pop
lods
bound
or
sbbb
xchg
in
dec
pop
repz
sbb
ret
mov
mov
xchg
xchg
mov
push
sub
mov
movsl
movsl
sub
and
lods
jge
xchg
cmp
mov
ja
sahf
ret
sti
popf
loope
cmp
subl
or
cmp
inc
loope
sub
lret
xchg
movsl
inc
add
in
jae
aaa
or
aaa
jmp
ret
jmp
popa
push
cmp
fscale
xchg
movzwl
mov
mov
std
call
or
pop
fstl
push
addb
lahf
sbb
or
aam
adc
incb
call
add
sbb
dec
mov
cmp
jno
cltd
mov
ljmp
aam
ljmp
pop
call
adc
hlt
jge
push
bound
adc
iret
adc
sbb
sbb
inc
or
xor
rclb
bound
xchg
adc
pop
xchg
ss
sbb
shrb
jbe
sub
outsl
dec
andl
pop
xor
inc
pop
repz
sub
mov
inc
stos
mov
cmc
cmpsl
sub
insl
jne
adc
sub
cmc
jecxz
stos
or
sub
mov
cmc
clc
fwait
in
pop
fidivrs
pop
xchg
ret
int3
mov
rclb
dec
add
xchg
in
jg
out
jg
jnp
cmpsl
daa
imul
fs
or
mov
insb
xchg
or
sbb
arpl
xchg
adc
cmp
adc
adc
add
push
sti
std
stc
add
sbb
aaa
les
and
imul
jge
pop
lock
mov
jbe
jb
icebp
dec
sarb
cmp
ljmp
push
and
sub
xchg
lea
dec
mov
or
std
mov
dec
xor
popa
sti
jbe
xor
mov
jae
imul
stc
xchg
bound
pop
pop
jo
scas
xchg
sahf
pop
aaa
jg
or
clc
add
lret
stc
dec
jecxz
sbb
imul
subl
push
push
js
dec
outsl
sub
fwait
adc
and
mov
xchg
sbb
inc
jne
jae
pushf
inc
mov
mov
pop
cmp
test
xchg
mov
dec
aam
fwait
dec
jl
repnz
imul
inc
cltd
sub
cwtl
cmp
psadbw
pop
dec
push
leave
xor
sub
push
popa
lret
call
push
ljmp
cmp
jmp
xchg
pop
stc
mov
cmp
and
jno
mov
or
add
xor
add
inc
inc
xor
push
pop
sbb
jmp
xchg
faddl
xchg
push
inc
sub
sahf
push
daa
fwait
ret
push
outsb
push
rcrb
mov
xor
stc
fwait
hlt
outsb
jns
out
mov
movsl
jge
shrb
cmp
fdivrl
push
out
xor
movsl
pop
or
jecxz
leave
add
jge
jb
je
sbb
shll
out
adc
mov
out
inc
xor
lock
imul
pop
jae
iret
ljmp
xchg
fidivrs
jne
mov
cmp
aam
addr16
outsb
out
in
cmpsb
xlat
lods
jmp
das
frstor
inc
adc
mov
cmpsb
mov
fwait
push
imul
lods
mov
push
cwtl
in
popa
mov
mov
jp
insl
or
push
and
push
repnz
push
aam
sti
mov
fcmovu
insb
cmc
arpl
fdivrs
jb
sarb
and
add
test
cltd
pop
fimuls
lahf
into
inc
stc
pop
inc
fdivp
pop
stos
icebp
cmp
push
lock
mov
in
test
lcall
and
insl
adc
cli
cmp
push
pop
outsb
jg
push
dec
loop
movsl
mov
das
fbld
push
rcrl
xor
xchg
pop
pushf
enter
jmp
imul
mov
jno
push
push
push
push
jns
cmp
mov
push
mov
sbb
and
shl
es
into
stos
das
dec
adc
or
cmp
lods
popa
popa
cmpsb
ss
dec
add
popf
cmpsb
jnp
mov
lcall
scas
stos
sub
sub
sahf
pushf
cli
div
insb
sub
loope
add
or
fs
or
pusha
aam
ret
adc
test
adc
adc
and
xor
aas
in
cmp
rclb
add
and
mov
dec
push
sub
pop
pop
adc
inc
out
or
ljmp
rorb
and
or
pop
int3
sub
and
outsb
xor
cli
sti
push
pop
cmc
add
jle
xchg
mov
pop
sbb
jb
sub
outsb
adc
insb
mov
lods
jge
into
in
jne
pop
sbb
pushl
mov
xchg
je
test
out
loop
adc
arpl
popf
adc
jecxz
add
sbb
test
mov
cmpsl
or
shll
test
jmp
test
jbe
push
out
push
mov
sahf
jmp
mov
clc
push
mov
jns
in
fwait
pop
xchg
cli
mov
popa
dec
xchg
jle
adc
fcompl
inc
dec
inc
pop
inc
jmp
pop
test
dec
andb
stos
idivl
add
stc
cmp
sub
jl
jg
pop
inc
mov
or
xchg
jbe
jmp
pusha
and
sub
sti
pop
inc
push
repz
sbb
dec
jmp
jge
push
jmp
dec
fildl
ss
jge
sbb
add
pop
cmp
scas
mov
or
in
lahf
mov
call
xor
in
cmp
cmp
sbb
arpl
inc
inc
jp
ljmp
or
ficomps
sub
jecxz
and
ljmp
cltd
mov
arpl
mov
add
hlt
out
dec
ffree
imul
mov
test
inc
dec
dec
jl
call
cs
mov
jecxz
aam
mov
aaa
clc
in
shll
mov
mov
inc
mov
fldl
jnp
shrl
sbb
loopne
or
leave
pusha
jbe
aaa
mov
inc
pop
push
or
sbb
xchg
sbb
hlt
lods
sbb
mov
into
call
push
push
inc
in
in
hlt
loop
push
bound
imull
xchg
fs
clc
and
lahf
cmp
clc
shll
sub
fwait
sub
jo
dec
cmp
adc
jno
ret
test
shrl
jne
push
pop
sub
stos
push
mov
xor
xor
daa
sub
dec
repnz
scas
mov
dec
outsb
adc
mov
pop
pop
or
pop
sub
out
ljmp
rolb
int3
mov
pusha
or
lret
mov
ss
push
js
lock
cmp
js
sbb
adc
mov
inc
outsb
movzbl
loope
pop
mov
jg
sbb
repz
repnz
out
fisubrs
cmpsb
je
mov
nop
adc
push
or
jb
fisttpl
add
dec
sub
clc
lods
shrl
jns
jg
add
mov
test
xlat
out
dec
push
xchg
mov
das
sbb
sub
push
cs
pop
mov
push
andl
sbb
pop
inc
in
inc
inc
and
cmp
aaa
out
xor
jne
pop
pop
cltd
mov
adc
adc
iret
in
call
adc
addr16
pop
or
ja
pop
rorl
or
scas
out
mov
sbb
roll
mov
xlat
mov
inc
test
daa
jle
xor
mov
imul
sub
adc
scas
das
mov
movsl
jp
adc
movsb
sub
es
adc
xchg
std
movb
aad
add
shll
push
pusha
sbb
ror
adc
out
xor
xchg
xlat
mov
adc
dec
or
inc
cmc
fidivs
cmp
sub
sub
imul
lock
cli
sbb
out
fwait
movsl
xor
jmp
cmpsl
push
andb
rclb
mov
sub
test
xor
loopne
scas
mov
mov
bts
pop
sbbl
adc
dec
pop
inc
mov
mov
pop
cmp
pop
sti
cs
push
mov
inc
in
int3
mov
cltd
add
inc
jg
add
in
sbb
aam
fs
imul
scas
shl
out
mov
cmpsl
mov
sub
out
push
push
out
and
dec
dec
rcrb
mov
lods
aas
push
sbb
dec
rcrl
decb
icebp
mov
adc
sahf
mov
push
add
dec
mov
dec
pop
sbb
inc
scas
sahf
fsubrl
and
dec
cmpsb
das
add
mov
mov
lret
nop
int3
popf
idiv
popf
sub
or
jp
mov
add
lds
rolb
mov
pushf
in
and
mov
orb
aam
adc
lock
add
fisubrs
and
pop
sbb
ja
shll
stc
push
adc
adc
bnd
or
mov
data16
push
push
mov
sub
data16
jno
cmp
push
pop
adcb
xchg
movsl
mov
test
xor
jne
xchg
js
inc
or
xor
outsl
inc
bndldx
xor
dec
das
jnp
lret
int3
enter
jmp
pushf
push
or
aam
and
cli
outsb
mov
push
add
and
in
lds
cwtl
pusha
imul
addr16
inc
mov
and
mov
or
sub
pop
in
mov
or
movsl
es
sbb
mov
leave
inc
aad
lods
cld
xorl
inc
rorl
loop
ficoml
add
out
or
jmp
jl
in
adc
inc
mov
stos
daa
lret
push
or
and
cs
ret
test
int3
xor
pop
inc
mov
into
xchg
pop
adc
inc
jbe
xchg
loop
ljmp
push
mov
int3
pop
push
push
cwtl
sbb
negb
out
mov
mov
jp
dec
pop
mov
ja
cld
fiadds
sbb
and
pop
xchg
sub
cltd
jl
icebp
sbb
clc
dec
les
mov
fstp
mov
cmp
cltd
loope
cmp
lcall
xor
sub
stos
movsl
jp
outsl
sub
xchg
mov
test
push
hlt
add
sbbl
mov
mov
ja
icebp
aam
xorl
or
add
mov
into
xchg
mov
test
adc
cmc
repnz
dec
xchg
enter
xchg
jmp
aad
scas
xchg
cwtl
mov
pop
and
mov
fistl
stos
jb
xor
mov
dec
imull
lds
adc
or
ss
pop
dec
aad
mov
loope
rcrb
testl
loopne
int3
cmp
in
outsb
cmpb
sub
mov
xchg
test
pop
inc
sub
inc
mov
xor
out
daa
ljmp
jb
adc
aam
icebp
fisubs
add
dec
std
outsb
call
into
jmp
xchg
cmp
pop
pop
jmp
cmp
push
cmpsb
daa
xchg
insb
shll
adc
xchg
cmc
mov
testb
adc
addr16
out
fdiv
push
stos
jle
jmp
pop
jns
cli
mov
jo
jmp
or
mov
jae
mov
movsl
out
sar
pop
inc
outsb
adc
xchg
shrl
lcall
cmpsl
popa
ret
jle
xor
mov
out
xchg
mov
dec
xchg
inc
sub
xor
lahf
add
enter
and
sub
shll
push
add
mov
cld
imul
mov
rcrb
jp
pushf
dec
out
lahf
jmp
xlat
jmp
add
cmpsl
mov
xchg
jmp
dec
xor
sbb
lret
in
sbb
iret
jecxz
shr
inc
jge
dec
cmp
repz
andl
add
repz
dec
mov
adc
and
cmp
jg
push
pop
rorl
cld
enter
repnz
stos
imul
in
mov
jns
outsl
in
bound
es
and
and
test
dec
adc
ss
pop
dec
in
lret
loopne
and
lods
ret
xlat
mov
adcl
dec
fdivrp
jmp
mov
and
push
leave
mov
xor
cmpb
sti
xchg
gs
sbb
fildll
inc
je
pushf
pushf
jno
jmp
insl
pusha
js
adc
nop
mov
daa
lock
xor
jae
fdivrl
lret
mov
iret
mov
leave
lock
cs
or
ret
std
mov
in
and
push
aad
jecxz
mov
pop
cmp
sar
jecxz
sub
call
jle
pusha
mov
lahf
push
das
stos
int3
mov
jno
insl
push
clc
sbb
dec
inc
inc
insl
lahf
sub
cmp
lret
jnp
popf
pop
inc
iret
bound
outsb
lds
stos
and
mov
mov
pusha
repz
clc
sub
ss
xor
mov
cmp
push
cwtl
in
and
mov
fs
dec
push
push
jg
push
pop
mov
sub
add
sbb
mov
sub
ret
jnp
bound
je
nop
gs
psubq
jb
fiaddl
push
test
or
mov
mov
mov
inc
cmp
lods
fsub
sbb
xchg
jl
sti
arpl
scas
aad
orl
cmc
pop
add
sub
shr
dec
lods
mov
das
mov
jo
mov
dec
andb
jns
push
pusha
mov
loop
loope
jmp
popf
cltd
mov
cmpsl
jge
mov
mov
scas
inc
ds
pop
cld
pop
sbb
lods
sahf
sbb
or
cmpsl
jle
inc
sbb
lret
inc
mov
test
insb
pop
push
inc
imul
mov
jmp
and
cmp
xor
out
repz
shrb
in
iret
movsb
push
xor
fnsave
popa
je
jmp
mov
inc
jne
xchg
mov
insb
mov
lods
rcrl
or
pop
or
cmpsb
insl
test
js
clc
in
imul
inc
cmpl
mov
pop
loope
popf
sbb
aaa
out
daa
cmp
adc
sbb
mov
rorl
push
mov
cmp
das
stos
leave
sbb
rorl
xchg
dec
push
ljmp
loop
jbe
xor
fcomp
jg
jnp
movsb
push
mov
xchg
mov
scas
add
clc
add
push
jmp
cmp
mov
push
xchg
adc
es
pop
inc
iret
lock
push
adc
popf
cli
push
jl
adc
sub
cwtl
pop
or
in
and
sub
in
lret
test
jno
jnp
push
xlat
int3
dec
pop
cld
into
mov
into
xlat
sbb
pop
jae
lahf
add
xlat
scas
idivl
mov
jb
in
int3
jne
das
push
mov
jecxz
and
mov
mov
cmpsb
cmp
mov
stc
adc
jmp
add
stos
sahf
cltd
in
inc
daa
loopne
cmpsl
sub
jp
xchg
push
ss
push
push
xchg
xchg
cmp
cltd
daa
inc
push
inc
adc
fs
sbb
jnp
jl
xchg
lahf
jecxz
in
add
cmpsl
pushf
add
jae
cmpsb
sar
mov
or
nop
and
add
pop
mov
dec
mulb
or
jae
std
jno
mov
jecxz
pop
xchg
rorb
jmp
push
mov
add
loop
shrl
ljmp
imul
std
and
sbb
aad
mov
cmp
sub
sti
lret
jo
cmpsl
imul
add
dec
push
call
outsb
inc
sub
mov
insb
das
mov
sbb
addl
mull
xor
push
je
adc
in
mov
pop
aas
pop
jmp
jecxz
stc
xlat
xchg
jo
int3
stos
test
pop
sbb
jae,pn
insl
inc
lds
cmp
and
shr
cs
push
es
cmp
mov
or
mov
adc
enter
cld
xor
xchg
add
pop
sub
jno
pop
push
dec
cli
add
xchg
nop
push
inc
sarb
dec
aas
xchg
cltd
pop
fwait
in
ja
ljmp
sbb
add
push
shrl
push
cmc
sub
fldcw
cmpsl
xor
xchg
loopne
sahf
loop
add
rorb
out
data16
lds
ja
cmpsb
es
sbb
adc
push
dec
lods
inc
ret
pop
push
pop
pop
mov
sbb
sbb
add
aas
jecxz
lcall
xchg
enter
sub
add
push
pop
jp
or
or
aad
mov
jl
ret
mov
outsl
xor
pop
dec
mov
sarb
push
cltd
jne
ret
mov
mov
lahf
cltd
icebp
movsl
popa
and
in
mov
and
addr16
mulb
ljmp
mov
int
jmp
fs
xchg
rcrl
or
sbb
ja
jle
ds
insl
mov
xchg
adc
jbe
pop
cmp
movsl
fdivrl
mov
je
cwtl
mov
rolb
xchg
mov
mov
sti
fisttps
mov
inc
sbb
idivl
and
pop
gs
mov
mov
pushl
jp
adc
lods
xchg
or
rcrb
out
and
jecxz
push
cmp
insb
mov
adc
int
pop
stos
or
scas
test
sti
fstl
stc
push
loop
ds
mov
pop
repz
fcomp
or
lods
mov
push
andl
mov
fisttpl
add
xchg
sub
sbb
mov
dec
enter
and
add
mov
imul
and
or
or
subb
jnp
dec
inc
inc
test
lea
ficompl
push
dec
shrl
loopne
aas
cli
pop
dec
mov
fsubrl
lahf
loop
pop
aas
adc
or
int
push
inc
cmpsl
jp
or
xchg
xlat
cli
adc
mov
and
mov
dec
cld
stc
inc
mov
mov
sub
push
lret
ficompl
inc
jecxz
imul
xchg
push
leave
push
into
and
xchg
mov
mov
popf
xlat
sahf
insl
loopne
inc
adc
andl
xlat
cmp
pop
ljmp
dec
mov
dec
dec
pushl
push
jmp
mov
loope
push
cmpl
mov
pop
fiaddl
out
xchg
cmp
adcl
fidivs
xor
cwtl
fcmovnu
sbb
repz
shrl
addr16
es
jae
fldcw
std
ret
add
icebp
in
movsb
push
inc
xor
in
mov
xchg
jbe
push
popa
stc
in
sarb
sub
inc
outsb
xor
or
fistpl
ss
add
sbb
and
mov
pusha
enter
inc
push
pop
movsl
or
nop
inc
or
out
in
fmuls
int
lods
push
xchg
pop
outsl
test
jns
out
dec
ds
mov
add
xchg
inc
in
and
sub
push
pushf
fnstenv
xlat
jecxz
test
jnp
hlt
mov
push
mov
test
pop
mov
or
call
adc
in
outsl
push
xchg
add
stc
mov
call
push
xor
xchg
out
cltd
fisttpl
and
scas
scas
loop
push
push
insb
out
mov
and
popa
jno
shll
jmp
lret
dec
or
sbb
ret
xor
push
repz
jp
imul
push
fnstsw
cmp
cmc
in
sbb
cmp
and
dec
mov
aad
jge
nop
adc
fisubrl
js
out
icebp
adcb
ror
test
jge
stc
dec
jp
sbb
insb
fdivrs
add
mov
adc
fldl
lcall
inc
repnz
mov
sbb
lcall
sbb
xor
stos
les
std
dec
or
sahf
cmp
add
add
add
inc
scas
popf
int
push
jnp
loopne
imul
mov
icebp
fisubrl
inc
enter
inc
movsb
cmp
lea
leave
call
scas
push
adc
xorl
les
pushf
shlb
jns
fwait
xchg
call
xlat
xchg
mov
lds
nop
lcall
push
inc
repz
cs
or
push
shr
add
mov
hlt
dec
ja
cmp
or
ljmp
outsl
mov
rcrb
fdivl
or
and
sbb
stc
out
jp
ljmp
cli
es
push
xor
mov
mov
lods
fiaddl
push
sbb
test
js
push
cmp
mov
int3
jnp
xor
sub
lret
into
inc
decl
sub
jne
cmpsb
push
fiadds
xchg
rorb
jmp
push
icebp
loope
insl
and
sbb
pop
mov
push
or
mov
mov
mov
rcl
insb
in
sub
and
shlb
inc
test
xchg
inc
xchg
stos
lods
push
rcrl
test
and
adc
daa
and
out
repnz
daa
inc
dec
inc
mov
sub
jecxz
sub
or
rolb
jo
pop
or
in
aas
mov
divb
xchg
pop
xor
push
fiadds
mov
leave
pop
xchg
inc
pop
cmpb
aam
les
je
rolb
bound
sbb
movsl
adc
dec
fcompl
xor
sbb
jne
enter
and
mov
mov
mov
push
enter
jns
movsl
imul
xor
idivl
sbb
sub
mov
lret
test
jbe
cmp
int
inc
push
mov
pop
xchg
mov
mov
mov
xor
cltd
mov
push
inc
sub
int3
dec
arpl
or
lret
cmp
and
bound
in
mov
sahf
and
push
sbb
xor
push
jae
xor
lret
and
lock
sbb
dec
xlat
test
pop
ja
fldl
jne
xchg
loop
mov
ret
out
or
dec
pushf
sbb
mov
sbb
inc
jbe
xor
or
ss
or
pop
mov
insb
adc
sbbl
dec
xchg
sbb
mov
xchg
cli
xchg
mov
dec
push
jecxz
pop
xchg
mov
outsb
xor
out
and
adc
inc
test
leave
enter
mov
loopne
arpl
insl
lcall
push
cmc
stos
jo
cmp
fisttpll
rorb
xchg
mov
jge
mov
and
je
lea
aam
in
loope
mov
adc
mov
shrb
sbb
aam
hlt
jmp
hlt
incl
pop
fnstenv
fwait
out
subl
jg
lcall
push
lret
insb
insb
and
popa
inc
jae
popa
inc
cmp
stos
cwtl
jmp
dec
adc
loopnew
mov
popa
lahf
fsubs
popa
je
pop
es
add
jo
push
test
scas
lret
or
icebp
mov
sahf
lret
enter
sub
inc
fs
jne
cld
push
xchg
roll
rol
out
lods
xchg
pop
sub
mov
add
add
pop
or
jns
cltd
add
popf
pop
pushf
mov
aas
push
or
cmp
and
in
nop
int3
addr16
fsubrl
xchg
insl
das
dec
es
or
mov
icebp
add
adc
imul
fsts
pop
and
add
enter
clc
mov
cmp
pop
icebp
mov
jle
push
xor
push
and
and
jmp
pop
fcom
lds
cmp
cmp
and
int3
out
out
fmulp
dec
lcall
sbb
push
dec
rcll
dec
inc
add
imulb
lods
sahf
mov
mov
xchg
leave
xchg
push
cmp
and
rol
xor
mov
add
fwait
add
mov
pop
insl
xchg
stos
sarl
test
es
iret
mov
mov
imul
pop
pop
adcb
push
mov
fdiv
mov
js
lcall
push
push
cmp
scas
sub
jp
pop
fiadds
cmp
int
pop
popf
lds
dec
pop
fstl
test
mov
out
pop
inc
mov
xchg
fidivrs
subb
add
addl
pop
int3
fildl
xchg
xchg
xor
lods
ret
scas
adc
clc
sbb
mov
adc
xor
jg
add
notl
int3
cmp
add
std
add
or
jo
jge
push
pop
rorb
dec
mov
gs
into
iret
jg
cmpsl
jge
outsb
dec
inc
jle
inc
or
lret
aas
adc
mov
in
icebp
out
sub
bound
push
and
mov
xchg
sbb
scas
cmpsl
pop
cmc
fisttps
call
mov
mov
jno
add
and
add
cmp
xor
jnp
repnz
push
sub
imul
xchg
xchg
jge
daa
stos
xchg
mov
pop
and
sub
adc
jo
std
fs
dec
mov
loope
cmp
xorb
rclb
jl
subb
jb
stos
stos
push
lock
mov
loop
add
pop
and
xchg
lods
test
shlb
mov
ret
adc
sub
sub
dec
jnp
cmp
popa
cmp
mov
add
or
cmp
sti
pop
or
cli
xor
movsl
or
push
enter
insb
xor
jbe
pop
mov
jmp
mov
push
scas
lds
dec
dec
add
xchg
cli
shlb
out
mov
pop
stos
shlb
xchg
enter
int3
ljmp
mov
add
push
jg
inc
cli
sbb
jl
push
out
out
cs
xchg
int3
add
aaa
push
mov
xor
mov
push
hlt
cmpsl
scas
pop
repnz
out
xchg
dec
mov
out
xor
mov
push
cwtl
lods
mov
sbb
cld
sbb
iret
insb
int
pop
mov
subb
scas
sbb
dec
stos
dec
adc
cmc
xor
mov
mov
mov
loope
mov
aas
pop
pop
dec
jne
adcl
test
cmpsb
nop
cmpsl
fs
loopne
fcmovnbe
clc
shl
jbe
jge
imul
sbb
mov
repnz
xor
adc
aam
mov
mov
in
inc
ljmp
ja
cld
jno
jecxz
dec
fstps
ja
ss
xchg
mov
jb
adc
loop
repz
adc
mov
out
loop
jb
mov
push
push
gs
arpl
sbb
loop
stc
aas
dec
xchg
sbb
jmp
flds
jl
fdivs
sub
imul
stc
faddl
or
ret
push
enter
xor
xchg
pop
cmp
and
mov
dec
repz
ja
pop
jb
or
fildl
and
mov
push
cltd
bound
xchg
popa
inc
sbb
inc
cli
ss
or
xchg
push
arpl
pop
adc
mov
jo
xchg
cmp
testl
out
hlt
bound
pop
rclb
fcoml
xchg
scas
inc
ret
ja
inc
rorb
add
cmp
gs
negl
mov
shlb
icebp
cmpsl
sbb
pushf
xchg
dec
cmp
jbe
hlt
xchg
adc
push
fwait
push
dec
lods
imul
lock
xor
xor
ss
pextrw
and
or
add
push
sub
jle
dec
dec
push
fs
lret
aad
mov
lods
jae
into
jge
sti
hlt
movsl
or
repz
loope
fstpt
stos
xchg
in
loopne
push
fidivl
test
sahf
adc
pop
cmp
pop
mov
iret
fiadds
pop
push
xchg
stos
incl
push
mov
loopne
pusha
sub
jg
xor
inc
or
push
and
mov
movsb
xor
rorl
pop
sbb
popf
xchg
pushf
jg
xchg
mov
les
lds
xchg
icebp
mov
scas
adc
dec
xchg
add
leave
scas
xor
lea
or
repnz
in
jb
gs
roll
cwtl
mov
aas
aad
cmp
mov
mov
or
outsb
dec
clc
jecxz
faddl
incb
xor
mov
aas
jb
xchg
xlat
lret
into
pop
leave
mov
hlt
pushf
xchg
jp
js
mov
arpl
dec
loop
mov
add
scas
sbb
sub
arpl
jg
mov
xchg
lcall
add
mov
data16
jns
adc
cld
lock
sub
xorl
xchg
xlat
jne
daa
sbb
sahf
subl
ds
aaa
and
popa
inc
xchg
sub
push
mov
das
imul
mov
loopne
jnp
mov
rclb
cld
xchg
pop
cmp
xchg
data16
pop
push
fwait
cmp
movsw
pop
xchg
jp
sbb
call
cs
out
xor
andb
addb
pop
sub
xchg
sbb
loop
push
push
pusha
lds
addb
push
jmp
in
adc
int3
dec
mov
stc
fmull
std
inc
sub
mov
ja
jnp
pop
dec
and
loop
sbb
or
add
xchg
hlt
outsl
aam
xchg
fcompl
faddl
add
lods
cmp
stos
divl
add
add
jae
adc
lods
movsb
in
arpl
and
mov
mov
mov
aam
pop
pop
xchg
lea
xchg
push
add
pusha
addr16
dec
xlat
mov
inc
shl
ja
scas
jmp
stc
sti
imul
dec
test
call
push
fimuls
mov
sbb
push
push
neg
lcall
fistpl
sub
loopne
call
je
lret
inc
pop
inc
enter
sbb
stos
aam
jns
sbb
mov
adc
pop
ret
lahf
pop
and
fimuls
lea
dec
push
test
mov
mov
test
pop
push
cmp
fmulp
int3
push
outsb
xchg
fwait
jmp
xchg
repnz
cld
lods
movsl
add
in
lahf
fs
out
dec
sahf
inc
movsb
aaa
loope
cmp
in
jmp
popa
aas
shl
pop
adc
xchg
push
outsb
popa
push
jnp
mov
ret
mov
pop
gs
mov
jne
lret
or
imul
fs
aam
hlt
xchg
sbb
decl
or
aad
mov
jbe
mov
push
add
mov
fwait
mov
pop
ret
in
std
or
outsl
mov
jo
mov
jle
xchg
into
push
ja
mov
xor
jle
sub
fsubl
in
lds
pop
mull
jl
push
rol
ds
and
cmp
sbb
dec
outsb
pushf
or
test
dec
ficoms
push
mov
mov
add
clc
out
sub
bound
pop
scas
adc
lret
sbb
xor
filds
test
jle
jae
jae
nop
pop
mov
push
push
shlb
adc
inc
lock
inc
movsb
inc
sub
mov
sti
pop
push
das
push
inc
cli
adc
dec
mov
jmp
dec
test
outsb
repnz
fadd
out
add
xchg
cmpsb
pop
loopne
cld
fidivl
dec
inc
jnp
adc
push
sbb
popa
sbb
imul
orb
popa
cmc
dec
lods
movb
stc
fisubrl
arpl
icebp
dec
js
cmc
flds
adc
and
mov
jo
xchg
bound
sbbl
dec
pop
xchg
xchg
adc
leave
push
iret
into
mov
inc
cmp
popa
jge
jae
jb
adc
fsubr
test
sub
jmp
pop
sub
add
mov
fildl
cmp
out
cmp
jno
fldcw
cmp
add
aas
jp
loop
jb
out
pop
mov
stc
jp
call
sbb
jmp
stos
and
mov
xchg
jno
test
insl
test
pop
pop
int
sub
sarb
lock
js
mov
subl
and
pop
cmp
lcall
shlb
jecxz
lds
mov
shlb
in
cmc
add
and
xor
xchg
dec
rorl
loopne
cmp
add
in
sbb
pop
mov
dec
adc
and
lea
jns
inc
push
push
cmp
sbb
ret
and
jmp
or
fisubrs
xlat
fsubr
push
xchg
or
movb
add
xchg
pusha
mov
mov
or
push
jno
jne,pn
or
cmp
xor
xchg
pop
aas
xor
pop
in
sub
call
ja
push
enter
popf
dec
ja
xchg
cs
ljmp
dec
cmp
in
js
mov
mov
sbb
inc
insb
xor
xlat
jno
jmp
bndstx
dec
jge
pop
subl
inc
cmpsl
hlt
dec
sbb
mov
es
icebp
lods
push
jmp
mov
xchg
cmp
lcall
sub
ljmp
je
push
xor
fs
xchg
push
sub
inc
sarl
std
out
mov
sbb
outsb
xor
js
xchg
inc
jns
repz
mov
dec
aas
into
cs
jne
stc
inc
mov
xor
ficoml
jmp
out
mov
imul
inc
jne
cmpsb
adc
cmp
stos
or
push
adc
sbbl
jns
mov
mull
push
cmp
sbb
call
lds
std
mov
fidivl
sbb
mov
imul
adc
loopne
test
pop
dec
mov
mov
mov
add
rcr
lock
pop
mov
int
push
push
or
mov
pop
aaa
mov
mov
bound
and
sub
add
popa
push
sub
pop
imul
in
js
adc
xchg
sub
sbb
stos
test
out
cmp
mov
into
psrad
pop
push
pop
roll
sub
test
lds
imul
xchg
and
fcoml
lods
int3
aam
lea
pop
ds
push
mov
cmp
jne
mov
jnp
cmp
iret
inc
test
wrmsr
mov
popf
xchg
push
sub
jnp
lock
mov
int3
mov
das
xor
jno
scas
pop
mull
jo
xchg
popa
mov
rcr
ljmp
fildl
mov
push
sub
mov
xor
popa
xchg
mov
addl
dec
jg
pop
insl
push
adc
lcall
jns
cmc
loope
filds
fincstp
addr16
data16
mov
mov
addr16
icebp
and
fdivs
xor
div
inc
pop
jl
ret
nop
xchg
fwait
jmp
xor
or
jp
cmc
pushf
sahf
sbb
fimull
shll
daa
or
mov
dec
out
rcrb
pushf
and
decl
in
mov
pusha
fidivrl
xchg
and
hlt
sub
xchg
pop
out
fistpl
shrb
bound
insb
ret
aaa
jmp
push
mov
dec
mov
inc
aaa
xor
add
cmp
push
bnd
outsl
sbb
lods
je
mov
xor
repnz
mov
xchg
shll
rcll
roll
insb
stos
jnp
in
out
shrb
jne
ljmp
bound
lock
rcrb
pusha
jecxz
push
lret
in
push
imul
push
rol
mov
inc
pushw
jns
sarb
add
out
scas
xchg
mov
fcompl
push
mov
shrb
fwait
stos
xchg
xchg
lds
dec
jns
sbb
cmpsl
add
dec
daa
fwait
push
xchg
cmp
loop
adc
sub
add
jmp
or
adc
insb
pushf
int
mov
int3
test
testb
xchg
out
mov
xchg
add
movsl
xor
sbb
xlat
cs
dec
adc
mov
inc
add
sahf
jmp
jg
mov
testb
pusha
sbb
adc
or
xor
mov
or
aaa
fldenv
mov
loopne
jp
scas
sub
adc
mov
adc
push
mov
sbb
les
push
call
sub
flds
add
bnd
jmp
and
test
pop
jle
movsl
push
cmp
add
dec
adc
divl
nop
jle
sbb
call
push
jp
inc
xor
sub
hlt
cmp
aaa
ss
mov
mov
mov
rorl
and
mov
xor
mov
mov
sbb
mov
jb
sbb
cmp
cmp
stc
stos
push
sahf
lcall
or
ja
pop
out
es
jmp
add
lea
sbb
in
mov
nop
scas
sti
jb
sbb
mov
sbb
nop
imul
ss
rcrl
dec
jae
lret
jo
mov
lods
jno
xor
dec
push
dec
push
mov
movsb
dec
out
adc
xor
cmpsb
nop
xor
mov
sbbb
mov
sbb
sub
sub
cmc
push
pop
fcoml
out
das
pop
mov
mov
xor
push
and
ja
dec
jbe
and
mov
xchg
out
xor
aas
cld
testb
popf
xchg
and
dec
cmc
push
std
inc
sbb
pop
das
mov
minps
int
xchg
pusha
mov
jns
dec
xlat
push
mov
mov
loop
out
aaa
dec
fadds
aad
pushf
cmpb
ficomps
dec
xchg
dec
dec
cmp
movsb
filds
les
insl
adc
mov
mov
subl
or
push
sarb
xor
sahf
int3
push
mov
xor
dec
call
sbb
arpl
imul
cmp
addr16
mov
test
lcall
cmp
push
mov
ffree
je
add
les
xchg
adc
inc
out
fcoml
lret
outsl
loope
cmp
xchg
inc
mov
negl
xchg
jb
lcall
in
movsl
loopne
sub
jl
das
ja
pop
push
jecxz
push
aad
dec
add
mov
jbe
push
in
xor
add
jo
pop
xchg
jmp
enter
jge
mov
aam
enter
ss
int3
mov
inc
lods
xor
push
add
cmp
mov
xchg
clc
and
cmp
jbe
pop
sbb
or
mov
out
mov
sti
clc
pop
std
pushf
int3
cmpsb
mov
mov
addr16
xor
xchg
jb
stc
dec
out
std
cmp
mulb
add
push
sbb
xchg
or
out
test
or
dec
es
loope
jge
mov
or
pop
addr16
pop
test
fdivp
loope
mov
and
mov
loope
adc
cmpsb
repz
or
lds
xor
in
ljmp
in
cmpsl
cmp
sub
repnz
adc
xchg
mov
jnp
xchg
shll
adc
pop
pop
iret
cmc
xlat
mov
das
jae
loope
test
sbb
and
add
cld
adc
rcrl
sarl
pop
inc
scas
push
popf
ds
mov
hlt
lret
rcr
xchg
sub
push
decl
push
int3
lcall
sub
adc
sbb
adc
call
mov
cmp
stos
push
inc
scas
jecxz,pn
aas
dec
pop
lret
dec
jnp
pop
mov
xchg
jo
sbb
jg
inc
in
test
lock
jne
sub
inc
push
xor
insb
in
add
pop
push
xor
pop
clc
mov
fwait
testl
dec
nop
dec
xchg
sbb
fstpl
popa
or
mov
aam
pushf
in
mov
and
out
lret
in
sti
movsb
adc
mov
cwtl
mov
fsubrl
testl
mov
mov
std
out
sbb
mov
ret
jo
ja
add
dec
gs
int
shrl
push
lahf
pop
in
out
ret
dec
xchg
ret
stos
mov
shrb
mov
shrl
mov
sbb
aad
in
das
xchg
xchg
xor
iret
mov
imul
cld
sub
bound
shll
pop
pop
sbb
push
ds
dec
out
fdivrp
ljmp
mov
fsts
test
push
add
lods
ret
faddl
lods
or
cmp
jno
sub
mov
push
into
and
test
pop
cmp
ret
dec
push
add
mov
pushf
nop
mov
xor
movb
mov
outsb
xlat
sub
sbb
mov
cli
lret
add
push
fidivrl
mov
movsl
popf
int
mov
lret
inc
daa
xor
push
fidivl
xchg
mov
sub
cmpsb
pop
adc
push
cs
divb
stc
hlt
cmp
sbb
jecxz
cmc
dec
imulb
or
imul
aaa
pop
cmp
mov
addr16
in
push
sub
cmp
or
cwtl
adc
or
test
add
inc
mov
fisubrs
das
scas
xor
push
insl
dec
sub
fnstenv
mov
out
push
dec
imul
cmp
and
fisubrs
or
sbb
or
movsl
adc
cld
push
xor
lret
push
cmp
push
loopne
sbb
lahf
outsb
push
or
or
cwtl
adc
aam
js
jno
xchg
sub
pop
xchg
dec
sub
outsb
call
pop
xchg
mov
lret
push
filds
daa
push
and
or
push
add
ds
inc
adc
imul
fstpl
test
jecxz
pop
jg
pop
mov
sub
ds
movsl
sbb
int3
and
add
adc
in
loopne
inc
movsl
addr16
inc
into
lock
mov
cmpl
push
push
lahf
mov
cmp
add
sti
sub
fsubrl
lret
dec
cs
das
out
je
fldt
lahf
dec
cmpsl
loop
ds
mov
push
pushf
jo
test
add
loope
jge
in
inc
mov
hlt
movsb
cmp
jne
js
sub
cmp
inc
dec
xor
rclb
dec
xchg
pop
mov
gs
fdiv
lea
push
lods
mov
lea
pop
enter
lret
fnsave
xchg
cmpsl
int
jle
movsb
xchg
dec
dec
pop
ret
mov
jbe
mov
inc
mov
scas
cmc
mov
icebp
jmp
hlt
dec
mov
dec
stc
lock
mov
pop
mov
xchg
cmp
add
inc
jg
ficoms
fwait
dec
mov
insl
cmp
xor
adc
fildll
mov
dec
sbb
inc
cld
and
or
or
push
pop
mov
cmp
in
popl
imul
inc
mov
and
adc
call
jl
out
mov
cwtl
mov
ret
scas
popa
rcll
sbb
add
repnz
mov
mov
ret
and
aam
pop
cmp
xor
adc
jae
fildll
pop
das
out
sar
icebp
mov
in
lock
cmp
inc
outsb
xchg
stos
cli
cmc
cwtl
out
xchg
or
popa
movsl
shrl
mov
sbb
mov
ret
push
xchg
xchg
es
aad
leave
inc
cs
sar
loope
cmp
xor
jb
push
mov
sub
pop
gs
dec
push
repnz
xor
lods
jne
pop
jmp
push
inc
scas
orl
fbld
adc
ds
and
test
push
mov
orl
push
xchg
repz
lret
add
inc
mov
dec
jno
sti
hlt
outsl
aam
jmp
and
pop
push
aam
outsl
adc
adc
mov
mov
scas
cmpsl
repz
mov
fisttpll
xor
push
rcrb
push
pop
dec
cli
dec
sbb
adc
or
mov
jp
jns
lds
loopne
fimuls
jnp
ljmp
imull
dec
aad
push
add
in
cld
out
int3
lret
dec
add
lret
jne
xchg
je
je
inc
cwtl
and
inc
jmp
add
mov
push
mov
xchg
stc
jo
add
stc
sub
sub
aad
inc
jb
fadds
cmp
clc
cmp
xchg
dec
cltd
and
lret
fistpll
xchg
cmp
xchg
adc
sub
mov
in
xor
call
mov
cmp
out
xchg
mov
shl
inc
cmp
push
ss
aas
or
dec
sahf
adc
rcl
inc
rolb
push
jo
ds
push
loopne
mov
inc
cli
cmp
fiaddl
or
pop
daa
jp
pushf
push
decl
fbld
ds
inc
fiaddl
mov
mov
imul
mov
pop
mov
push
pop
xor
cmp
inc
jecxz
inc
cli
loope
pop
push
les
jae
scas
pushf
psubusw
push
push
mov
lcall
sub
ss
push
shl
sbb
sub
jns
xchg
adc
pop
subl
loop
adc
outsb
sarb
dec
push
mov
pop
add
or
inc
jp
or
dec
fisubl
and
sbb
add
fstpl
stos
loope
push
push
and
lcall
mov
iret
add
pop
add
inc
scas
mov
mov
shrb
int
adc
cmp
test
and
push
adc
or
das
in
or
inc
fdivr
ficomps
sarb
lret
cmp
inc
mov
mov
push
rol
jns
mov
lods
mov
add
jg
inc
mov
imul
and
add
rolb
push
nop
in
sbb
add
and
or
adcl
imul
pop
fbld
inc
jbe
jae
out
inc
jg
arpl
and
sub
xchg
jl
pop
mov
subl
cmc
popf
jg
jae
ud1
mov
add
rcrl
xor
mov
nop
pop
jae
sub
mov
lret
pop
xor
mov
adc
cmp
rclb
mov
mov
loop
aas
jmp
ret
inc
orb
or
or
push
shll
pop
fdivp
stos
lahf
sbb
jg
jle
cli
lret
loop
arpl
add
push
fdivrs
fidivrs
mov
and
inc
sub
cmp
push
repnz
insb
bound
cmp
add
cmpsb
out
call
movl
xor
inc
sbb
sbb
pop
adc
mov
jl
push
and
stos
ret
or
jno
mov
inc
sar
add
rcl
sahf
in
sbb
pop
or
mov
cwtl
push
mov
scas
push
mov
mov
nop
and
or
daa
sbb
cltd
fstpl
pushf
push
sti
push
mov
pop
sbb
pushf
cli
lea
in
jmp
push
sub
dec
into
mov
inc
mov
pop
enter
inc
fimull
or
and
rcll
repnz
stos
loop
pop
lds
dec
jg
mov
les
mov
shr
jb
push
adc
daa
in
add
pushf
rcll
clc
jo
xchg
iret
pop
fdivrs
dec
pop
or
xor
clc
dec
les
cmp
mov
ret
xor
in
adc
sti
je
enter
push
and
mov
jl
subb
and
or
adc
add
in
xchg
jmp
out
add
ljmp
adc
mov
jl
and
stc
aaa
push
pop
gs
ret
es
inc
pop
xlat
or
lock
add
pop
xor
xchg
add
jnp
andb
gs
mov
sub
dec
imul
arpl
lds
xlat
arpl
in
int3
xchg
add
loope
mov
xor
push
or
out
sbb
jmp
lret
sbb
cmpb
loope
mov
rcl
adc
fistpl
stos
dec
add
test
mov
ljmp
movsl
mov
push
xchg
out
mov
in
dec
xor
inc
int3
mov
fwait
iret
jg
repz
xor
int
and
sbb
inc
mov
pop
enter
dec
add
jbe
and
and
mov
leave
in
mov
gs
pop
adc
inc
rcrb
cli
sub
mov
dec
stc
insl
stc
push
repnz
enter
jle
cmpsb
idivl
push
push
jo
les
pop
data16
pop
inc
das
clc
push
lods
imul
mov
enter
outsl
mov
dec
mov
inc
cmpb
iret
xchg
adc
loop
sti
adc
mov
push
out
pop
pop
and
ret
xor
cmp
stc
pop
cmpsl
pushl
jo
and
jmp
dec
adc
xlat
sbb
ja
jp
jp
xor
cmp
dec
out
mov
call
xchg
dec
js
inc
popf
out
xor
lcall
mov
shr
inc
mov
jnp
add
test
jecxz
test
mov
pop
mov
pop
call
in
push
sub
dec
lahf
ficoml
mov
xor
inc
adcb
sub
xchg
scas
mov
push
sub
or
cmpsl
mov
mov
sbb
push
dec
lret
hlt
lods
daa
outsl
jecxz
pop
mov
adc
sbb
mov
mov
push
clc
dec
test
inc
push
push
call
mov
inc
mov
adc
pop
push
dec
mov
and
mov
sub
xorb
movsb
adc
sahf
adc
cwtl
or
xor
push
xchg
pusha
test
int
sub
jecxz
pusha
nop
sub
or
in
mov
sbb
out
mov
cmc
imul
push
cmp
lret
scas
and
int
push
fimull
test
xchg
sub
imul
cmp
outsl
lds
inc
lods
stos
pop
sbb
push
hlt
cld
fistpl
shrb
cmp
cmp
add
or
cmp
mov
push
and
mov
jae
pusha
rcrl
and
ja
or
xor
lcall
pop
adc
testb
enter
dec
outsb
lret
sbb
test
test
test
es
add
xchg
fdivr
stc
jecxz
cmpxchg
fimuls
into
fdivs
dec
out
popf
sbb
ret
xchg
repz
adc
pushf
fdivrs
mov
and
stos
aaa
xor
mov
mov
outsb
cld
push
and
push
jns
lods
outsb
xchg
lret
lret
frstor
jle
stos
jno
repnz
mov
fisubrl
add
sub
push
ret
loope
dec
repz
nop
push
jb
aaa
into
pop
sub
dec
movsb
push
mov
stos
push
aam
dec
stos
or
sbb
scas
outsb
push
or
mov
lret
ss
fisubl
popa
sarl
cmp
fwait
and
and
jl
pushf
sub
lods
lahf
cmpsl
vpmaddwd
popa
es
xor
popf
mov
inc
xor
and
or
and
xchg
mov
add
mov
push
mov
mov
dec
pop
adc
into
sub
enter
idiv
jp
cmpsb
push
popa
sbbl
dec
mov
jnp
fs
test
add
jp
test
je
outsb
pushl
jae
jno
dec
jb
cltd
jmp
cmc
fwait
or
scas
dec
jl
test
push
push
jl
sbb
sub
repz
sub
mov
pop
mov
or
loopne
jle
imulb
xor
outsl
insl
hlt
sbb
and
rorb
mov
and
fisubrs
lea
lret
jl
xor
mov
push
sub
xchg
xchg
dec
icebp
push
push
je
aam
loopne
push
sub
mov
mov
shll
in
cltd
inc
or
sbb
cmpsb
jb
sub
mov
iret
out
cmc
fcoms
pop
ficomps
in
leave
add
daa
xchg
mov
roll
mov
rorb
fistpl
loope
ljmp
adc
xchg
ret
or
in
cmpb
and
pop
mov
movsl
xchg
jno
lock
mov
sub
loop
mov
xor
sbb
or
xchg
popa
and
xor
mov
pushf
fldt
dec
mov
rcl
popa
in
jae
les
cmpsb
ss
iret
out
pop
pop
repz
mov
pusha
imul
jbe
jp
pushf
sub
jne
jns
xor
sub
pop
icebp
dec
popf
cwtl
or
cmpsb
sub
xchg
arpl
jb
scas
jp
call
bnd
fmulp
xor
sbb
outsb
or
push
add
daa
lds
xor
iret
mov
jo
mov
jmp
sti
lcall
push
rcrl
adc
push
loopne
mov
lods
shlb
xor
fmuls
xor
pop
je
std
sbb
push
cwtl
jecxz
inc
outsb
push
adc
fidivrs
dec
push
les
sub
xchg
and
push
je
push
inc
test
aam
mov
fistpll
cwtl
rorb
add
insl
jmp
jle
popa
daa
lock
push
dec
jp
sbb
jae
adcl
jge
push
fdivl
xor
test
imul
mov
sub
mov
addr16
pop
movsb
mov
ret
inc
lock
jo
jno
loopne
mov
mov
loop
mov
sbb
in
xchg
and
cmpsl
sub
adc
mov
and
add
cltd
popa
dec
mov
test
pop
les
push
popf
rcrb
loopne
jmp
or
xor
mov
jge
ret
mov
jge
sub
test
mov
inc
push
push
test
std
mov
pushf
repnz
and
pop
sub
call
jbe
ds
jbe
sahf
jns
dec
jno
neg
dec
and
clc
loop
push
fsubrl
sbb
ss
jp
addb
int3
sahf
cmp
sbb
mov
popl
add
cs
repnz
les
in
dec
les
fisubs
cmpsl
jbe
jge
sbb
rclb
sbb
insb
in
fstpt
mov
push
mov
inc
ljmp
fidivs
push
mov
push
pop
push
sti
push
xchg
lds
dec
push
add
les
out
out
out
imul
and
repnz
mov
push
jl
gs
in
xchg
int
insb
xlat
lods
cmp
mov
xchg
fwait
scas
xor
push
pop
aam
fmuls
pop
push
fs
jg
imul
xor
lcall
add
sbb
arpl
ret
cltd
jb
stos
xor
test
mov
jns
mov
mov
aam
cli
bound
das
jnp
jmp
shll
std
daa
add
mov
mov
mov
out
adc
test
adc
pop
jle
xchg
inc
int3
lret
idivb
xor
mov
pop
gs
sub
fcmovne
jmp
jge
cmp
pusha
fildl
mov
fbstp
mov
out
add
scas
sub
cwtl
lret
leave
dec
iret
andl
jecxz
cmpsb
add
gs
lock
xchg
and
xor
push
push
js
inc
outsb
cs
dec
add
stos
mov
or
test
mov
in
stos
mov
cmp
push
insl
and
pop
out
gs
jnp
jbe
jle
mov
xchg
cmp
aam
pushf
scas
rorb
sbb
leave
shrb
jl
aas
pop
or
mov
push
inc
or
and
adc
cmp
pop
scas
adc
jno
pop
cmp
mov
push
cmp
sub
add
fld
pop
push
xchg
test
outsb
or
jnp
shlb
imul
aad
mov
add
dec
mov
pop
push
out
pop
into
add
stos
leave
stc
lds
or
rorb
imul
lret
in
cs
mov
and
fdivr
pop
stc
sub
add
push
sbb
mov
dec
test
mov
lret
test
mull
dec
mov
jecxz
push
xchg
xor
fs
mov
dec
loopne
push
imul
gs
jnp
out
push
pop
jp
pop
insb
sbb
ljmp
aam
es
jmp
mov
xchg
fldenv
lea
or
orb
arpl
cvtps2pd
and
sub
xchg
dec
pusha
sbb
add
or
and
jmp
adc
popa
sbb
mov
mov
das
xor
lcall
xchg
daa
js
dec
cwtl
scas
cmp
xchg
loopne
loop
rorb
in
dec
or
cmp
and
leave
jo
push
insl
push
push
jge
je
inc
ja
dec
or
push
loopne
cmp
mov
and
mov
mov
dec
pop
inc
nop
loopne
popa
push
dec
push
sub
and
rcrl
sahf
repz
mov
fnstcw
xchg
fmull
adc
cmp
ficoms
divb
rcrb
pop
cwtl
push
mov
fwait
inc
movsb
dec
test
dec
lods
insb
push
inc
mov
int3
inc
xor
sbb
or
insl
jmp
inc
mov
mov
pop
je
loop
aas
push
std
sbb
cwtl
lahf
loopne
or
sub
xchg
scas
shl
dec
loop,pt
out
ds
sbb
in
sub
sbb
pop
or
inc
mov
fmul
shlb
mov
stos
outsb
sbb
scas
popf
jle
xlat
hlt
ljmp
or
add
addb
mov
mov
xor
outsl
adc
sub
dec
scas
pop
outsl
mov
xrelease
and
mov
out
dec
test
in
pop
mov
inc
add
xor
jle
or
inc
imul
pop
pop
dec
loop
int3
pop
inc
cld
add
fsubs
dec
leave
xchg
lds
push
push
push
cld
fiaddl
dec
dec
popa
repz
add
mulb
xor
clc
ss
and
add
out
mov
lret
xor
and
push
popf
sbb
movsl
adc
mov
cmpsl
in
cmp
test
xchg
pop
add
sbb
pop
or
jbe
cmp
push
pop
mov
xor
mov
push
add
xchg
push
int3
jg
or
xchg
shlb
push
mov
sbb
inc
jbe
sar
fs
ret
jae
in
movsl
movntps
ret
andl
sub
or
aaa
add
inc
test
jecxz
into
movsb
xor
push
mov
jmp
test
mov
mov
rol
call
fcoms
shlb
dec
pop
cmp
adcl
sbb
mov
xor
inc
ljmp
jg
add
or
jno
adc
push
xchg
movsb
jbe
inc
cltd
int
xor
dec
sbb
xchg
int
cmpsl
add
mov
loopne
mov
fwait
sbb
rolb
cmp
je
and
das
popf
sarl
push
ret
jp
loop
jmp
cwtl
jns
fistl
lods
out
and
jb
and
sub
cmp
mov
rcrb
pop
es
data16
pusha
inc
pop
inc
or
xlat
mov
std
out
cmc
mov
jnp
cwtl
loopne
inc
bound
lock
cmp
jmp
stos
pushf
mov
and
in
in
and
mov
mov
sbb
fcmovnu
lret
orl
xchg
pop
fidivrs
cmp
movsb
in
icebp
popf
push
ja
pop
inc
repnz
out
rorb
or
adc
insl
mov
or
push
sahf
fs
xchg
xchg
dec
test
int
repz
mov
or
call
je
sub
mov
out
mov
aas
mov
mov
leave
pop
cmp
adc
sbb
fdivp
test
in
push
arpl
xchg
mov
lock
push
sbb
lret
call
movsb
sub
repnz
push
jmp
lcall
inc
ficoml
push
mov
pop
rcl
fstpl
jmp
inc
push
push
push
ret
xor
mov
gs
or
mov
cli
sub
push
and
sbb
xchg
aam
xchg
lea
adc
push
jne
dec
int
dec
adc
pop
cs
lea
je,pn
test
outsl
sbb
xchg
jae
imul
nop
or
ret
iret
and
ja
ss
or
in
adc
adc
lahf
pop
jo
cwtl
stc
jle
sahf
pop
shll
and
jo
cld
mov
fnstsw
dec
dec
call
shr
gs
mov
aad
pusha
pop
cltd
out
ss
fiaddl
test
rcr
bound
rcrl
or
cmc
ss
mov
bound
jge
xchg
mov
cmp
insl
xchg
cmp
es
xchg
pop
pop
cmpsb
push
sbbb
jo
lcall
jge
adc
cmc
push
leave
push
cmpsb
testb
sub
sub
jecxz
pop
jb
addb
das
mov
cmp
mov
cmp
dec
ss
mov
cld
clc
shrb
jecxz
push
iret
scas
mulb
inc
orb
insl
stc
lcall
mov
insl
push
movsl
lods
cmpsb
cmp
inc
dec
cli
xor
xchg
sbb
andl
add
jns
or
adc
push
push
addr16
iret
in
out
imul
xchg
jns
add
clc
cmpl
stos
cld
jbe
or
mov
cmp
push
inc
pop
ret
pop
dec
lret
out
fs
lds
push
inc
cmp
jg
out
adc
ficompl
repz
lea
inc
rcrl
push
int3
fdivrl
pop
mov
and
loopne
push
xchg
ss
and
push
das
out
jnp
mov
adcl
gs
bound
test
rcll
ja
dec
faddl
dec
mov
push
in
jnp
xor
add
xchg
and
std
jbe
ljmpw
jns
jmp
das
mov
in
mov
lock
inc
lock
and
sbb
push
push
or
test
mov
vcvtss2si
and
loop
stc
jo
add
xor
pop
in
idiv
mov
cmp
stc
inc
pop
and
daa
imul
xchg
in
orb
or
or
add
js
add
in
sub
add
cmpsl
icebp
in
clc
mov
jg
cmp
xor
lret
xor
add
dec
push
jecxz
scas
xor
push
out
push
mov
daa
mov
cs
dec
and
push
call
rclb
or
mov
jg
push
enter
scas
sbb
test
mov
push
xchg
shrb
test
pop
addl
test
cmp
fmull
div
movsl
lcall
insb
push
add
mov
shr
or
ss
fs
lcall
cs
mov
xor
dec
xor
das
pop
push
adc
push
notl
cmpsl
and
add
jle
mov
addr16
sbb
cmp
je
jg
sysenter
pop
inc
out
mov
xchg
xor
orl
stos
lds
loopne
jb
enter
dec
adc
mov
cmpsb
loopne
bound
les
roll
sbbl
bound
add
xor
dec
dec
cmp
jno
or
mov
inc
rcll
mov
cs
scas
loop
push
sbb
cli
je,pt
mov
mov
shrl
mov
lret
mov
dec
adc
mov
mov
adc
push
iret
mov
xor
test
movsb
jle
outsl
leave
ljmp
xchg
mov
dec
xor
nop
mov
cld
or
test
jne
jmp
xchg
cld
insb
in
shl
test
lret
hlt
int3
mov
push
mov
bound
outsl
sbb
mov
add
shlb
mov
cmp
cmp
pop
xor
dec
loopne
mov
rcrb
jecxz
in
xor
xchg
std
inc
pushf
test
call
lret
adc
aam
ds
jge
xor
mov
mov
mov
or
sub
ficoms
in
jg
pop
mov
sbb
pop
adc
sahf
test
jle
aad
jno
or
ja
outsl
scas
std
adc
cmp
stos
into
sbb
lds
xor
bnd
and
adcb
inc
lcall
push
and
loopne
adc
xor
push
adc
fcompl
mov
push
loopne
fists
push
pop
lcall
xor
call
sbb
inc
les
inc
pop
incl
pop
push
mov
outsl
and
cmc
test
mov
mov
pop
mov
fdiv
fdivrs
loopne
xor
das
push
cltd
mov
fimuls
and
inc
icebp
loopne
movsb
cld
pop
pusha
jns
mov
pop
cwtl
xchg
movsb
jbe
and
push
add
test
sbb
jp
andb
xchg
or
or
push
addl
mov
loop
pop
in
mulb
imul
out
hlt
pop
or
cmp
dec
and
out
scas
sub
popf
imul
xchg
push
mov
cmp
idivb
cmp
lock
push
aad
std
jne
adc
push
lret
fadd
mov
push
testl
push
movsl
imul
add
ret
movsb
hlt
sbb
loope
xchg
jns
stos
nop
dec
sbb
pop
insb
aas
jl
jle
mov
rol
mov
mov
movsb
inc
sahf
cld
push
cwtl
jae
mov
mov
ljmp
push
ret
notb
xchg
push
jb
repz
shlb
fistpl
xor
shlb
dec
inc
or
sub
pop
shll
fcomp
nop
mov
add
es
or
adc
xor
adc
fcmovu
mov
push
into
popa
sub
pop
push
je
aad
cmp
push
stos
sbb
mov
std
psrlw
aad
xchg
mov
jnp
cmp
inc
std
cmpsl
into
dec
iret
icebp
ret
pop
lret
or
sub
clc
lahf
leave
imul
adc
mov
lods
adc
and
push
mov
sbb
push
jecxz
pop
jns
mov
jne
das
lea
iret
jnp
pop
inc
fsqrt
jne
push
jo
clc
push
mov
or
ljmp
mov
ljmp
orl
leave
mov
push
repz
hlt
cltd
dec
xchg
and
xor
inc
mov
jns
lret
jnp
cs
push
cmp
cld
out
stos
and
and
pop
loope
addr16
dec
fdivl
lahf
cmpsl
add
sysexit
add
jp
mov
push
adc
xor
mov
mov
repz
sti
movsb
xchg
pop
xor
cmp
cs
std
lds
push
or
push
lds
cmp
adc
cli
ficoms
leave
adc
inc
or
nop
daa
jge
or
loopne
jp
test
test
shll
ret
jle
jge
ret
call
add
xchg
fstp
push
sub
push
aad
insb
mov
lods
push
lods
adc
jne
push
mov
dec
xchg
pop
inc
mov
fiadds
xlat
popf
aas
mov
sub
popa
lds
jl
mov
cltd
xor
mov
icebp
mov
add
cmp
mov
inc
push
sub
push
gs
sahf
mov
push
addr16
lea
cmc
das
add
push
aad
pop
pop
hlt
fnstsw
add
xchg
cmpsl
inc
sahf
mov
pushf
mov
je
or
sbb
pop
popf
push
dec
cmc
mov
add
xor
orb
cmpsl
scas
data16
pop
mov
fcompl
cltd
push
aaa
sub
insl
rclb
push
aam
aaa
int3
pop
call
xchg
pop
add
xor
sbb
add
sahf
iret
jge
or
push
jns
icebp
xchg
push
iret
dec
enter
dec
and
loope
sarl
arpl
lcall
push
xor
xlat
sub
inc
pop
aam
sub
fnstsw
jle
dec
sahf
stos
lds
jae
iret
mov
mov
out
and
ret
les
and
cmp
shll
movsl
bts
lcall
into
jmp
jbe
push
cmp
jle
loopw
or
jne
xchg
jo
pushf
jb
cld
xchg
and
or
sbb
xor
stos
xchg
mov
shll
jecxz
daa
jns
fsubrp
std
in
add
imul
mov
sbb
lock
lcall
mov
rcr
xor
les
js
sti
xor
push
push
or
mov
outsl
sbb
mov
cmpsl
sti
mov
sbb
std
daa
push
in
js
mov
subb
rcrb
inc
cmp
lds
aam
jmp
das
ret
push
xorl
lods
ficoms
jge
movsl
dec
jno
out
testl
and
int
or
outsb
int3
xor
jne
pop
nop
fsubrs
jns
mov
push
cmp
mov
push
jns
subb
dec
xchg
fs
pusha
xchg
sar
leave
ljmp
push
pop
jmp
incl
addr16
test
sbb
xor
popa
aas
dec
jg
pop
cmc
das
adc
pop
add
lods
dec
mov
xchg
push
push
push
fs
shlb
cld
sahf
mov
cli
cmp
cmp
sbb
pushf
dec
aam
pop
pop
dec
ret
testb
enter
xor
sahf
or
es
sub
sbb
outsb
out
pop
sub
pop
sub
xor
jo
rep
and
in
pop
jae
pushf
cmc
add
mov
lock
inc
les
cli
pop
mov
fnstenv
jge
lds
std
fisttpl
leave
mov
push
pop
jne
dec
popa
mov
cwtl
cmp
mov
int3
pusha
inc
jge
dec
push
test
daa
mul
jb
mov
das
push
imul
ljmp
int
pop
ror
sbb
or
jge
popw
xchg
adc
enter
dec
out
push
pop
shll
xor
ja
shr
or
and
imul
das
mov
jb
pop
mov
cltd
addr16
jp
aam
adc
inc
andb
or
mov
ret
cmpsb
mov
mov
xchg
xchg
dec
stos
out
cmpsb
cmp
or
push
xor
jle
xchg
cld
and
inc
dec
out
jno
jl
lea
cmpsl
andl
xchg
or
loope
outsl
pop
in
xchg
add
int3
int3
fnstenv
scas
mov
push
insl
adc
jl
xchg
lock
mov
out
lods
adc
out
les
lea
sahf
xor
sbb
jl
sub
push
sbb
add
movsb
into
cli
aas
out
jo
test
add
xlat
mov
and
add
or
pusha
cmp
call
mov
scas
xchg
loopne
mov
roll
imul
push
and
jae
xlat
es
test
lock
adc
jl
rcrl
inc
mov
xchg
mov
sahf
push
movsl
sahf
dec
ficomps
pop
ds
cld
cwtl
or
cmp
xchg
popf
push
mov
mov
std
adc
rcll
push
cmovo
inc
dec
aas
adc
mov
cltd
fwait
xchg
mov
fwait
leave
clc
xchg
repnz
mov
xor
mov
movsl
leave
rol
dec
sub
aas
in
xchg
xchg
jmp
test
cli
push
cltd
into
add
mov
push
push
call
dec
enter
push
mov
and
imul
jb
pusha
push
dec
adc
jae
lret
in
xchg
pop
add
and
ds
sbb
pop
jp
mov
lret
cltd
loope
fwait
into
pop
stc
inc
loope
jne
rcrl
mov
push
xchg
push
inc
aam
out
sarl
stos
cmp
sbb
jne
mov
adc
enter
xchg
stos
push
xchg
jp
test
inc
cmp
mov
or
xchg
fstl
daa
mov
popa
push
sbb
fmulp
fwait
dec
adc
adc
xor
insl
movsl
xor
jecxz
aas
or
push
mulb
ds
adc
mov
arpl
pop
js
sub
or
in
repz
lds
or
or
and
popa
in
pop
popf
pop
movsb
inc
mov
rorl
adc
or
incb
cmp
insl
cmp
addr16
hlt
mov
lock
xchg
lds
xor
xor
xlat
adc
insl
xor
add
lock
xchg
cs
xlat
dec
adc
and
add
adc
mov
lock
mov
cmp
frstor
loopne
out
pop
loop
push
js
insb
add
sbb
mov
and
mov
mov
jnp
rorb
xchg
jb
pop
sbb
cld
fisttps
jns
sub
sub
sbb
mov
rcrb
bound
adc
in
cmovs
sbb
xchg
push
jl
push
adc
popf
das
daa
and
fistpl
mov
movsb
cltd
mov
xor
inc
pop
lea
xchg
ffree
test
dec
arpl
push
aaa
in
ja
sub
and
pusha
lret
mov
pop
jno
iret
int
aam
pop
fcoms
roll
jns
adc
xor
jp
cld
pop
dec
pop
test
movsb
push
pop
sahf
xor
es
sbb
push
lret
addl
bound
dec
xlat
dec
movsl
out
lret
pop
int
ss
leave
mov
loop
adc
sbb
and
cwtl
popf
push
pop
mov
roll
cmp
cld
clc
mov
xchg
add
fiaddl
push
pop
push
hlt
push
repz
push
arpl
push
push
pop
aaa
xorl
incb
cmp
mov
inc
cmp
xlat
adc
pop
fcompl
das
inc
sbb
cmc
iret
mov
add
lret
fldt
xchg
add
out
stc
std
or
pusha
dec
test
ja
imul
int
sub
pushf
mov
gs
push
adc
adc
or
sbb
jns
and
push
into
call
mov
and
fidivrs
cltd
mov
aad
sbb
jno
xor
mov
nop
adc
push
pop
das
loop
sub
lret
adc
cmp
leave
into
sahf
cld
mov
mov
cli
mov
ljmp
jmp
mov
pop
xchg
in
leave
or
stos
push
ret
lret
or
add
and
shll
inc
add
enter
test
into
jecxz
push
mov
out
fs
or
dec
pop
test
das
jg
xchg
inc
lods
xor
adc
cltd
and
les
cwtl
pop
daa
fbld
add
cmp
sahf
pushf
loopne
fildl
mov
stc
mov
push
xchg
dec
add
xchg
inc
stos
rcrb
xor
xchg
int
xchg
lds
in
cmpl
or
pusha
mov
cmpsb
fucomi
imul
xchg
lcall
mov
cmp
adc
andl
ret
ror
add
inc
mov
into
mov
push
notl
add
mov
mov
dec
mov
out
adc
xchg
mov
repz
leave
popf
dec
inc
popf
popa
repz
mov
mov
cmpsl
movsb
orb
cmpsb
adc
and
fnsave
or
add
add
adc
shlb
mov
ljmp
and
ds
mov
and
pushf
fidivs
push
dec
mov
lahf
repz
mov
xor
in
mov
in
or
or
cmpsl
mov
out
dec
mov
sbb
pushf
jle
xor
rclb
sub
xchg
jne
fldcw
std
add
mov
orl
xor
xchg
leave
mov
cld
xchg
loope
push
jmp
xor
dec
cmpsb
pop
cltd
mov
clc
mov
xor
ljmp
sbbb
xor
push
ds
fbld
cmp
pop
xor
call
dec
testb
xchg
dec
inc
dec
xor
cmp
fildl
sbb
jecxz
rcr
add
or
inc
xacquire
sub
shl
out
sub
clc
das
movsl
cmp
cld
pop
lds
in
dec
ret
jbe
repnz
mov
jg
les
and
lds
xor
ret
les
dec
push
ja
out
add
out
xchg
sbb
rclb
xchg
jle,pt
ja
repz
xor
cmc
pop
mov
xor
fmuls
and
jb
fs
pop
lret
jg
adc
adc
outsl
jno
dec
pop
push
mov
mov
mov
fs
fldt
mov
mov
icebp
cmp
add
or
and
or
lcall
jbe
aam
pushf
xchg
popa
xchg
xchg
nop
dec
adc
xor
mov
mov
rcr
addl
sahf
mov
cmc
dec
aaa
stos
mov
pop
gs
sbb
and
jl,pn
out
jae
inc
fld
out
push
fnstcw
mov
fimull
loope
aaa
decl
mov
xchg
loope
push
out
or
pop
sti
xchg
mov
shl
ja
out
dec
sbb
pushl
daa
lds
and
mov
inc
sti
push
mov
sbb
inc
xchg
fildl
insb
xchg
notb
cld
movsl
mov
lock
loope
addr16
xor
cld
lret
insb
xchg
sti
das
inc
dec
xchg
fisubrs
sbb
adc
mov
mov
mov
movsb
dec
xchg
ret
xorb
decl
lds
sti
xor
dec
cmp
fistps
std
in
cld
or
test
addr16
mov
pop
in
inc
jne
push
add
ss
push
fwait
in
rcrb
lods
lcall
jecxz
fists
jl
add
pop
sub
sub
ficompl
fisubrs
clc
cmpsl
xor
aas
lock
mov
jne
or
insl
and
aad
sub
pusha
xor
mov
aas
add
push
push
in
push
sub
sub
xor
mov
inc
ret
xchg
adc
sahf
aad
out
or
mov
xchg
movsb
lds
pop
shlb
das
xor
out
dec
in
inc
out
jp
rorb
sbb
sbb
mov
dec
lahf
mull
int3
fisubs
aas
es
cmpl
push
xor
mov
mov
bound
push
cld
nop
sbb
jae
movsb
inc
and
mov
fcoms
enter
inc
add
inc
xchg
inc
test
pusha
dec
push
stos
sahf
sbb
out
xor
fucomp
cmp
cltd
jmp
pusha
pop
inc
mov
mov
loop
inc
int
rolb
xor
imul
popf
cmp
adc
jmp
push
add
sbb
int3
mov
xchg
mov
push
pop
das
adc
js
cmpsb
cmpsl
fsubrl
or
add
dec
cld
lcall
sbb
dec
ljmp
mov
data16
pop
lds
fisttpl
push
xor
xor
fstpt
lods
test
add
imul
pop
lds
inc
cmp
int
xchg
popf
clc
sti
adc
lds
sbb
jge
gs
xchg
xchg
inc
lock
or
inc
mov
std
dec
xor
mov
sub
mov
hlt
dec
sbb
test
push
mov
mov
fildll
mov
in
imul
jmp
in
cwtl
or
mov
push
fsubp
or
pop
xchg
inc
xchg
mov
push
aaa
pop
es
xchg
movups
lock
mov
mov
push
in
mov
push
push
pop
pushf
add
sub
pusha
cmp
mov
push
ds
movsb
scas
enter
xor
insb
push
and
testl
pop
and
xchg
aam
jb
push
lea
jo
push
jae
push
rep
imul
addb
mov
out
popa
push
jmp
mov
in
into
sti
lds
pushf
sub
aad
mov
insl
cld
imul
lods
sbb
inc
push
cmp
mov
inc
sbb
icebp
lock
outsb
push
test
dec
fistps
lret
lods
cmc
push
xchg
mov
inc
sbb
xor
ja
andb
ret
cmpsl
fadds
insb
mov
mov
xchg
push
or
int
pop
stos
ss
mov
pop
pop
jp
addr16
repz
in
mov
decb
je
inc
adc
push
test
add
add
popf
push
xchg
cmpsb
mov
mov
ret
jp
sub
call
jg
das
aas
xor
push
mov
repnz
fsub
inc
loope
push
je
sub
sbb
sbbb
nop
test
dec
or
dec
push
mov
push
inc
jle
dec
sbb
popa
mov
mov
push
ret
gs
jo
or
loope
adc
xor
in
cmp
mov
insl
or
stos
mov
in
outsb
mov
mov
sbb
push
or
mov
fsubs
cli
imul
bound
mov
mov
sbb
stc
add
outsb
push
jne
iret
mov
aaa
jmp
fnstcw
xor
shrb
addr16
int
pop
push
andb
enter
or
xor
inc
loopne
xor
xor
jecxz
fildll
sbb
jne
cmp
xorl
jo
scas
ss
sbb
fnsave
or
xchg
repz
inc
lahf
loopne
cmpsl
xchg
lods
pop
dec
jbe
pop
and
cmp
in
rcrb
or
xchg
testb
daa
sub
and
loopne
jo
dec
stc
sub
out
cmp
movsb
pushf
jbe
inc
cmpsl
jb
or
fcmovu
add
inc
cmpsl
sub
insl
das
jge
push
lret
dec
push
mov
xchg
test
mov
js
ret
mov
sbb
jmp
push
push
cmc
loope,pt
movsb
mov
clc
mov
or
xchg
ja
or
add
icebp
pop
jns
insb
mov
idivb
and
es
fdivs
data16
movb
lret
inc
dec
or
mov
cmpb
adc
pusha
daa
sti
sbb
and
stos
jno
xor
clc
jg
push
mov
dec
sti
dec
push
xor
outsl
sti
dec
pop
test
insb
hlt
enter
adcb
inc
clc
xor
xchg
push
aad
das
clc
fucom
fcom
je
std
adc
inc
xor
mov
out
xchg
aam
mov
lock
outsb
push
dec
js
jmp
cmp
mov
mov
xchg
sarl
jge
or
in
jae
es
icebp
sub
add
test
enter
mov
pop
or
stos
add
lret
jno
mov
or
in
jmp
movsl
push
mov
shrl
pop
pop
mov
add
scas
pop
add
xchg
jbe
scas
push
subb
mov
cmpsl
arpl
test
pop
enter
lret
dec
leave
test
shr
lahf
mov
mov
icebp
xchg
push
add
adc
stos
cmp
inc
js
fdivrl
test
fnstenv
dec
mov
rol
ss
push
push
loop
jne
dec
mov
enter
loopne
rorl
mov
inc
add
movsl
cltd
mov
jb
cwtl
imul
jo
jp
mov
pusha
std
mov
mov
sbb
mov
dec
mov
and
hlt
xor
lods
pop
insb
sub
ret
push
add
mov
test
mov
xor
mov
sbb
iret
xor
in
jle
mov
das
pop
pop
int
pop
mov
jo
pop
xchg
sbbl
push
cltd
jmp
fisttps
cwtl
dec
push
ljmp
sub
or
add
and
or
out
sbb
push
or
mov
aas
add
inc
js
iret
mov
les
sub
pop
bnd
in
or
add
outsl
dec
rcrl
push
jge
xchg
es
bound
and
mov
push
or
and
mov
cmp
popf
cmp
mov
cmpsb
mov
clc
add
rcll
test
and
insb
push
outsb
int
data16
idivb
cmp
ret
fldcw
lea
xchg
iret
xchg
sub
mov
mov
sbb
pop
mov
out
or
mov
jmp
jmp
fsts
mov
adc
loope
or
jle
cwtl
inc
aam
out
jo
xor
pop
popf
sbb
imull
add
cmp
adc
call
lret
cmpb
test
cli
mov
int
out
rolb
stc
sti
repnz
mov
ja
notb
out
leave
jl
enter
dec
ret
scas
mov
jle
std
imul
push
jb
imul
stos
enter
lahf
mov
xor
push
jl
shll
inc
lea
jnp
cmc
in
mov
in
movsb
insb
in
push
push
out
mov
inc
sbb
add
unpckhps
jnp
mov
pop
lods
out
xlat
mov
dec
pop
jp
mov
push
testl
mov
dec
dec
jns
insb
jnp
xor
das
cmp
mov
aam
mov
sbb
test
cmp
xlat
ljmp
mov
push
andl
push
test
aaa
subl
mov
and
into
testl
add
sbb
mov
into
add
adc
and
jae
das
test
xchg
je
and
cmp
pop
sbb
jo
cmp
fldl
jne
cmp
xor
lcall
xchg
add
cmp
push
push
add
arpl
stos
arpl
mov
icebp
xor
insl
in
cmpsl
inc
roll
xor
insb
xor
lcall
arpl
or
jp
lahf
or
fiadds
mov
in
ret
fcmovnb
ljmp
xchg
into
lods
pop
inc
popf
jbe
or
sbb
mov
sub
dec
aad
inc
movsb
push
push
inc
in
sub
sub
lret
mov
fidivrl
adc
jp
enter
test
cmp
mov
inc
ret
hlt
insb
arpl
mov
lahf
and
adc
pop
xchg
in
mov
or
addr16
daa
inc
loop
cld
xor
mov
int3
insl
mov
pusha
cmp
cmp
aas
sbb
mov
aaa
test
mov
movsb
mov
aas
cmp
mov
or
and
les
stos
ja
daa
dec
mov
bound
sbb
das
jne
mov
mov
sti
pop
jae
clc
into
out
lods
add
es
xchg
std
iret
dec
jnp
in
mov
jp
pop
ret
xor
leave
push
jp
cmp
cmpsb
jne
push
push
jl
aas
out
fcomps
cwtl
mov
daa
xchg
add
cmc
and
repz
inc
outsb
and
out
test
mov
pusha
lock
lods
clc
sahf
icebp
dec
push
xchg
or
cmp
or
movsb
mov
fs
cmp
mov
sub
daa
out
nop
scas
xor
xchg
jge
fstl
cwtl
test
insl
call
shlb
subb
xchg
pushf
inc
xorb
lds
and
js
je
xor
cmp
jp
push
dec
mov
test
repz
jno
cmpsb
push
mov
cld
fwait
dec
pop
fcmovne
cmp
std
test
aam
icebp
dec
xchg
scas
pop
std
adc
jg
inc
jb
push
lret
mov
in
adc
xchg
jbe
lea
jl
pop
mov
mov
sbb
jne
scas
loopne
pusha
cmp
jl
dec
xor
pushf
daa
xor
icebp
xor
subl
add
movsb
and
iret
clc
push
lcall
test
inc
jo
adc
or
lret
rorl
dec
dec
scas
in
xchg
leave
cmp
lds
push
inc
aaa
push
andb
xor
sbb
pushf
dec
cmp
sarb
mov
mov
inc
jbe
jle
pop
dec
xor
pop
add
dec
clc
and
ja
in
insl
mov
add
das
in
pop
out
addr16
aas
pop
insb
insb
sub
dec
ljmp
jbe
push
pop
int3
loope
pop
fsubs
call
out
mov
inc
cmp
jne
rcr
fwait
adcl
sub
je
cmp
pop
mov
enter
sbb
mov
sub
mov
and
xchg
scas
sub
sbb
outsl
rcrl
lds
inc
xchg
sti
fisubrs
xor
mov
push
inc
mov
mov
popf
or
pushf
push
sub
ds
or
mov
mov
and
mov
sub
add
icebp
cs
mov
aas
pop
pop
pusha
inc
stc
iret
jmp
adc
lret
pop
push
hlt
or
repz
jle
push
popf
jnp
out
loop
xchg
mov
mulb
push
jne
xor
mov
enter
mov
je
and
cmpsl
mov
popf
push
mov
adc
fstpl
je
cli
push
jle
ficoms
ljmp
enter
mov
outsb
aaa
js
mov
out
scas
xchg
dec
mov
xor
mul
push
mov
mov
inc
push
add
pop
sbb
inc
xchg
stc
fistpl
lods
sti
jmp
imul
in
pop
hlt
subb
in
cmpl
lret
fidivrs
out
inc
sub
pop
dec
mov
push
pop
in
pop
fcmove
mov
scas
shll
iret
xor
repz
sahf
mov
push
fs
pop
pop
jb
adc
mov
or
mov
nop
je
into
push
jo
shlb
bound
cmpsb
add
xchg
cmpl
lcall
dec
idiv
adc
addr16
xor
lcall
cmp
cmp
pop
or
push
int
nop
push
sbb
adcb
lahf
lds
sbb
orl
mov
je
inc
clc
dec
pop
inc
mull
in
sub
dec
mov
xchg
jmp
lcall
xchg
jns
pusha
mov
pushf
pop
pop
arpl
push
lret
pop
sbb
fldcw
notl
xor
out
cmc
aaa
icebp
sbb
mov
lea
bound
pop
dec
adc
andw
mov
cwtl
push
mov
hlt
arpl
ffree
sub
pop
pushf
mov
mov
stos
nop
pop
in
lock
mov
pop
sub
cmpsb
mov
ja
cmp
adc
mov
in
fildll
jle
aad
popf
stos
lret
rcll
pop
scas
push
out
test
xchg
sbb
inc
pop
inc
hlt
fsub
jae
in
jo
xchg
es
ret
imul
xchg
rclb
xorl
jge
xor
mov
in
inc
pop
aaa
pop
call
push
jns
mov
sub
test
sti
ds
push
sbbl
push
inc
mov
cld
aaa
jae
out
mov
outsl
push
aam
push
ret
or
movsl
out
daa
sbb
daa
mulb
inc
add
into
and
daa
std
scas
lods
inc
mov
mov
sbb
sub
push
adc
adc
fst
in
cmp
sub
or
fidivrs
outsl
dec
test
mov
nop
sbb
xor
inc
inc
jge
ja
call
cmc
out
push
sub
dec
adc
push
pusha
push
jne
ss
and
push
lock
sub
movsb
cmp
mulps
inc
jns
xchg
addr16
push
shlb
pop
xor
pop
test
push
mov
out
in
pop
stc
cmp
nop
sbb
push
or
sbb
dec
push
test
mov
sub
iret
add
jl
dec
sbb
add
fidivs
aas
cmp
dec
stos
jge
pushf
shll
cmp
stos
bound
pusha
mov
mov
push
sub
popf
popf
mov
jl
repnz
push
cmp
mov
pop
push
mov
mov
push
sub
mov
mov
pushf
les
into
add
test
ljmp
inc
mulb
mov
mov
into
andb
xor
sub
lock
dec
cmp
jmp
fwait
scas
xchg
cmpsb
mov
add
jge
xchg
mov
aad
adc
js
dec
cmp
cwtl
loop
repz
out
jecxz
xchg
mov
movsl
pop
mov
adcb
dec
or
mov
dec
sarb
mov
push
xor
cwtl
stos
inc
repz
xchg
mov
push
mov
inc
aas
loopne
out
jg
xchg
xchg
int3
xchg
sti
add
addr16
rclb
inc
push
mov
arpl
int
scas
fdivp
mov
sbb
dec
xorb
push
jge
sbb
js
insl
mov
imulb
inc
and
sahf
in
mov
fcoml
cld
mov
pop
adc
cmc
pop
pop
add
push
add
rcll
insb
jge
leave
mov
cwtl
lods
stos
push
push
mov
ja
gs
daa
cld
cmp
mov
ljmp
dec
cltd
cld
insb
lods
xchg
and
add
stos
push
dec
lea
stos
jno
fwait
test
mov
and
xor
sti
xchg
data16
xchg
out
lock
ds
xor
cmpsb
das
data16
cli
lea
bound
sti
mov
shl
or
mov
insl
insl
and
rcrl
lock
lea
add
adc
jecxz
enter
sbb
jns
mov
out
movsb
out
mov
imull
fwait
test
int
out
sub
dec
jo
mov
pop
pushf
fstpl
jnp
inc
test
pushf
inc
push
mov
inc
scas
xor
xchg
dec
scas
fstenv
inc
lods
push
jl
cmc
aas
mov
in
xchg
ja
inc
sarb
rcll
pop
fidivrs
inc
in
add
ret
jb
add
inc
adc
adc
sarb
jmp
arpl
mov
jb
xchg
insl
xchg
insb
or
xor
lock
or
or
inc
jnp
addr16
push
sahf
dec
sbb
mov
adc
pop
sbb
rol
jg,pt
movsb
addr16
inc
add
add
fcmovnb
movl
push
mov
adc
or
js
mov
adc
cmpsb
sbb
scas
and
gs
lock
jo
es
inc
daa
and
inc
xchg
cld
xchg
in
mov
sbb
xchg
cld
pushw
imul
fdivl
mov
or
test
or
rcll
push
testb
cli
mov
dec
bnd
loop
push
xchg
js
stos
jbe
and
insl
sbbl
mov
int
pusha
orl
adc
jbe
sub
das
test
fiaddl
pop
jo
jmp
cwtl
inc
xchg
das
push
cmpb
mov
cmp
xchg
mov
lock
insb
mov
les
adc
int
scas
scas
mov
push
andl
xor
addl
gs
inc
push
jns
mov
jecxz
leave
out
and
inc
loopne
xor
pushf
cwtl
adc
test
mov
or
mov
mov
dec
pop
imul
add
push
jae
mov
in
cmp
jb
mov
sub
inc
or
dec
add
sub
push
mov
inc
sub
mov
xor
inc
pop
fldz
cmp
aam
movb
shl
out
leave
aas
popf
in
cli
cmpsb
ret
stc
or
daa
scas
popa
and
scas
cmpsb
pop
int3
xchg
xchg
std
xchg
stos
lcall
push
mov
in
fildll
out
aas
std
das
popa
add
pop
dec
xor
cmp
mov
and
rcrb
call
mov
mov
pop
sarl
mul
fisttpll
pop
and
repnz
jecxz
sbb
pusha
mov
ds
and
movsl
pop
mov
mov
sbb
dec
stos
push
dec
mov
jecxz
xchg
sub
push
cmp
sbb
add
roll
sarb
sarl
pop
bound
je
cmpb
std
std
jae
mov
insb
jns
repz
pushf
push
adc
negb
xlat
sub
jmp
jmp
mov
cld
inc
stos
sbbb
xchg
add
in
mov
push
push
les
ret
xor
add
dec
data16
ja
and
or
mov
sub
push
xchg
add
mov
shrl
test
shr
divl
popaw
sarl
push
jmp
sbb
push
mov
and
call
test
dec
cwtl
sub
stos
jp
lret
push
sbb
jbe
cs
imul
cmp
negb
xchg
add
cmp
adc
hlt
loope
ss
or
addr16
stos
mov
jns
and
mov
jb
sbb
iret
loope
fcomps
inc
inc
mov
xchg
push
jnp
in
or
out
mov
pop
sahf
inc
movsb
scas
pop
cmp
cld
sub
dec
mov
std
inc
mov
in
add
jg
insb
mov
xchg
fucomi
mov
decl
xchg
ror
and
pop
sbb
in
inc
movsl
cmpsl
inc
add
mov
sbb
in
lea
popf
mov
jne
scas
push
or
ret
shll
in
adc
idivb
sub
push
aam
cmp
fldl
scas
adc
add
xchg
rorl
jmp
and
std
nop
outsb
daa
or
inc
xor
add
and
stos
mov
or
mov
add
imul
xor
push
lock
cmpsl
inc
or
or
push
jo
dec
addr16
xchg
cmp
sarb
loopne
loopne
pop
xlat
mov
js
inc
pop
mov
dec
xor
mov
imul
and
aad
xor
ja
jecxz
fildll
out
sub
out
push
xchg
dec
cmpsb
jp
dec
fisubl
add
mov
and
adc
inc
stos
mov
sub
lock
psrlw
and
enter
xchg
mov
fstpt
and
cmpsl
pushf
or
mov
sbb
fnsave
push
adc
movsl
push
add
push
push
xacquire
xlat
sbbl
sbbb
call
outsb
loop
add
or
je
lock
rcl
fnsave
inc
loop
xabort
je
sbb
or
or
add
int3
testl
fisubs
pop
lods
jb,pt
mov
lock
xor
mov
pop
cmp
sub
pop
aas
fs
repnz
adc
xor
aad
jns
mov
adc
ret
pop
out
xchg
xchg
jae
add
sbb
outsb
jnp
aaa
enter
xchg
mov
xor
and
iret
scas
into
cmp
cmpsb
in
ljmp
lods
mov
jp
and
push
mov
xchg
test
mov
cli
or
jg
sub
outsl
push
repz
jge
roll
pop
sti
aad
add
adc
mov
fidivrs
inc
popa
jnp
dec
int
fucomp
push
dec
inc
jae
xor
shll
insl
aaa
xor
lret
shll
int3
in
push
lret
add
xor
adc
push
jmp
push
popf
orb
call
xchg
jge
rolb
dec
jge
cmp
xchg
imul
or
pop
aas
push
xchg
ret
aaa
sub
jne
out
insl
and
lcall
and
outsb
mov
and
mov
mov
push
fsubrs
js
and
fcmovnb
xchg
imul
xor
xchg
xor
js
cmpsl
in
push
divl
pop
imul
push
movsb
pusha
or
fcmovb
das
adc
es
dec
loope
cmpb
rcr
sbb
mov
fs
iret
pop
mov
xchg
mov
xchg
and
xchg
mov
jne
adc
clc
add
movsb
jne
ljmp
cmp
sbb
or
shrb
jmp
shll
mov
fs
fcoms
movsb
dec
cmp
ret
xchg
sti
in
xlat
inc
stos
push
or
stos
jnp
lods
cwtl
lret
xor
nop
cmp
add
pop
or
xor
adc
and
fbld
icebp
pxor
jle
add
add
insl
sub
repz
test
cmpsb
iret
inc
sbb
les
pop
rcll
mov
inc
pop
jecxz
daa
or
jle
lods
andb
xchg
cmpsb
sahf
jb
cmp
enter
inc
rorb
orb
dec
jb
xlat
xchg
lods
leave
addl
into
mull
pop
xchg
mov
xchg
cmp
jbe
pop
lahf
jno
fnstcw
inc
jmp
mov
pop
jo
cld
test
pusha
pop
aas
jno
movsl
xchg
int
in
shr
inc
push
aam
cmp
add
fwait
or
lea
push
cmp
or
mov
push
flds
xor
xchg
std
decl
imul
xchg
mov
cli
mov
sbb
mov
push
cmp
nop
mov
aas
dec
cmc
pushf
lcall
scas
int3
cld
push
cmp
outsl
ljmp
outsl
vmread
xchg
addl
scas
fs
leave
jp
pusha
dec
inc
fcoml
iret
clc
dec
xor
mov
ret
push
inc
movsb
pop
mov
add
pop
out
leave
stos
xchg
js
cli
and
les
mov
sbb
xchg
loopne
fcmove
out
xchg
std
jnp
lret
jecxz
inc
les
test
mov
rolb
test
add
jb
mov
inc
jbe
cwtl
xchg
or
mov
mov
fldl
data16
insb
rcrl
jmp
or
mov
or
shrl
fildl
mov
repnz
adc
jno
cmpb
loop
mov
sbb
lods
ja
jbe
sbb
stc
xchg
dec
pop
push
sbb
pop
xchg
sub
pop
xlat
cmc
pusha
aaa
popf
mov
loopne
mov
cld
dec
lret
cli
jl
fs
setge
pop
lcall
pop
add
ds
scas
and
data16
lock
mov
or
addr16
imul
push
jmp
add
xchg
mov
in
sbb
jb
jae
decl
dec
rolb
jg
aaa
pop
add
stos
and
loope
cwtl
cmp
fs
fs
mov
mov
pop
push
pushf
movsb
loope
insl
adc
je
inc
xlat
xchg
lahf
enter
add
xchg
mov
aas
xchg
push
and
or
pop
bound
add
enter
mov
xchg
rorb
pop
xor
addl
cmp
xor
test
fwait
lret
mov
mov
lods
dec
cli
jb
push
test
jle
xchg
notb
loop
jge
hlt
mov
cmpsb
adc
mov
fstpl
pop
push
into
faddl
repnz
mov
and
push
sub
dec
and
pop
adc
ja
mov
out
push
nop
mov
loope
mov
or
out
cmc
scas
xchg
aad
cld
hlt
dec
jmp
scas
jb
imul
mov
shlb
xor
lds
sbb
enter
addr16
inc
pop
stos
sub
pop
adc
cmp
aam
push
lret
dec
mov
idiv
sub
fcmove
lock
outsl
push
pop
std
stos
mov
aas
lcall
xchg
push
mov
std
inc
jg
sahf
xchg
mov
ja
inc
xorl
ja
aas
ja
mov
cmc
notl
fidivs
imul
mov
imul
pop
dec
int
mov
adc
test
mov
int3
loopne
sbb
cmp
mov
dec
subl
xchg
sbb
ja
and
int
test
jns
mov
cmp
adc
test
push
icebp
pop
addr16
adc
icebp
test
hlt
movsb
sub
test
je
push
divl
cmpsl
sbb
mov
ja
orb
cmp
pop
add
ja
lahf
stos
jge
inc
daa
cs
xchg
jle
aam
nop
adc
jecxz
inc
add
jecxz
in
mov
or
popa
in
sti
loope
js
fistpl
lahf
shll
mov
lods
pop
cmp
dec
push
push
insb
adc
cli
faddl
or
int3
shr
xlat
es
xchg
ret
inc
into
andb
lds
mov
jbe
mov
pop
jno
mov
inc
push
mov
data16
out
out
in
and
das
lahf
push
shl
jge
jl
and
adc
les
lods
mov
sbb
adc
adc
ret
dec
mov
sbb
mov
push
jecxz
jb
inc
pop
int3
and
jns
insb
je
xor
cs
dec
leave
imulb
dec
ljmp
mov
bound
hlt
xchg
int
jo
bound
out
aas
notl
test
test
mov
push
lock
push
cmp
cwtl
add
add
call
fcmovnbe
shr
push
mov
ja
dec
pop
retw
rorl
push
clc
ja
or
adc
rclb
mov
ss
or
pop
scas
xchg
sub
mov
add
ljmp
jbe
faddl
xor
sub
adc
push
mov
sbb
lods
xor
xchg
push
push
mov
push
add
sti
dec
sub
jno
popf
and
imul
icebp
jmp
fucomip
or
out
push
movsb
ret
fisubrs
xchg
std
adc
jp
or
stos
add
out
sti
sub
movsb
adc
scas
pop
out
adc
push
adc
in
sub
sbb
mov
dec
sbb
and
in
sub
bound
xor
sub
jge
xchg
dec
adc
cmp
jbe
sub
xor
mov
icebp
sub
mov
je
loope
cmpsb
or
push
dec
js
daa
out
movsb
cmp
pextrw
mov
inc
jmp
mov
test
insl
xchg
pusha
sub
mov
pop
negl
inc
lods
jae
cmp
in
jo
int
divb
enter
negb
push
mov
in
or
inc
jmp
ret
jmp
or
jecxz
push
mov
jo
nop
enter
sub
push
pop
add
das
divl
shl
notb
push
sbb
inc
jmp
add
stc
jbe
jns
pop
sub
xchg
cwtl
jae
xor
imul
in
cmp
test
sub
int3
or
cmpsl
scas
and
bound
test
xor
and
mov
adc
mov
jmp
jbe
xchg
insl
shll
xor
or
popl
xchg
cld
add
aam
aad
or
xor
int
gs
or
pop
adc
jb
mov
ja
adc
inc
xchg
inc
outsl
push
sub
push
pushf
xor
push
loop
mov
fsubp
mov
cmp
cmp
xchg
lahf
divb
test
aam
mov
mov
sar
aaa
stc
lods
lret
adc
adc
outsb
sbb
mov
incl
imul
xorl
mov
or
adc
push
mov
cs
adc
daa
cmp
sub
cmp
adc
into
mov
add
dec
add
cltd
addr16
xchg
outsb
fdiv
test
in
aas
or
adc
sahf
sub
jmp
push
dec
leave
int
test
aam
jns
out
push
addr16
jb
push
push
dec
push
mov
and
sub
pop
jmp
pop
insb
stc
in
mov
ret
mov
and
les
pusha
out
jno
stc
cltd
adc
ret
inc
test
mov
mov
lods
nop
xor
adc
pop
mov
shll
xlat
xor
cmp
add
mov
jb
inc
orl
int3
inc
lahf
sub
pusha
popa
pop
scas
cs
imul
mov
imul
in
mov
mov
lock
and
or
jl
pop
movsl
mov
add
adc
push
cli
pop
daa
sbb
mov
add
xor
jecxz
sti
xchg
cmp
xor
jmp
cmp
cmp
rcrl
and
sbb
pop
lods
pusha
mov
jnp
gs
and
jl
enter
ret
stc
push
pop
testl
stos
out
pusha
movsl
push
inc
inc
sahf
inc
mov
cmp
or
jmp
xor
outsl
or
push
mov
lret
and
sbb
pop
ljmp
call
into
imul
mov
jecxz
fimuls
pop
add
or
sub
pop
das
ljmp
in
adc
ret
fimull
stos
cld
jg
outsl
data16
jl
jmp
aas
repz
and
xor
or
lds
push
mov
sbb
int
gs
fs
movsb
pop
dec
push
scas
jle
std
stos
sub
fnsave
clc
sahf
adcb
inc
dec
out
jns
cltd
or
xor
cmp
xor
dec
dec
insl
push
sub
lea
in
mov
cmp
out
dec
mov
or
sbb
lret
lret
scas
pop
sahf
iret
mov
out
int
mov
pop
call
cli
insl
pop
dec
stos
enter
gs
pop
adc
push
sub
inc
add
imul
mov
gs
xchg
imul
ss
insl
aad
cmp
jl
and
loope
cmp
rol
and
testb
push
push
inc
aam
cmp
inc
addl
out
and
jl
data16
jne
add
jnp
dec
out
data16
out
xchg
add
popl
jecxz
inc
cld
jge
sar
movsb
cwtl
mov
or
inc
mov
mov
xor
das
inc
mov
std
out
fstl
push
ret
adc
jp
inc
dec
lea
dec
popf
sbbb
ljmp
mov
cwtl
xor
imul
lret
ds
xchg
aad
mov
je
stos
rorl
xor
pop
adc
or
cmpsb
loopne
int3
pop
out
andb
out
sahf
xchg
inc
sub
adc
jno
and
dec
inc
movsb
repz
adc
movsb
xor
adc
xchg
dec
cmp
inc
enter
and
lds
jae
imulb
and
ja
inc
push
ljmp
xchg
or
stos
or
add
stos
add
dec
jecxz
xlat
pop
dec
pusha
pusha
sbb
and
mov
jge
push
xor
push
jge
dec
data16
cmpsl
ljmp
inc
sub
inc
jg
jmp
jno
or
pop
xchg
add
loop
push
xor
cld
lods
adc
dec
iret
in
mov
or
mov
and
lea
lahf
xlat
fimull
fsubrs
ljmp
xchg
pop
clc
pop
int3
scas
ss
xchg
jnp
push
ljmp
and
mov
fcoml
push
inc
xchg
push
fwait
push
and
inc
out
stc
and
imul
push
xchg
lods
das
push
es
add
sbb
data16
sub
jl
addr16
push
aas
inc
sub
outsl
mov
push
mov
pop
aad
ret
stos
push
dec
clc
bts
rorb
mov
loop
sub
sbb
pushf
in
adc
adc
movsl
cmp
add
iret
push
mov
adc
jmp
inc
mov
das
mov
fimuls
into
fidivs
andl
cmp
jne
add
adc
mov
push
sub
mov
sbbl
xchg
and
mov
cmp
or
mov
lods
xchg
cmp
cwtl
cmp
push
jg
daa
mov
cmpl
call
xchg
stos
sahf
out
or
push
xchg
fisttps
stos
xchg
es
jmp
dec
xor
sbb
cmc
insl
xor
clc
add
sub
fists
fyl2x
lock
hlt
xor
xor
xor
mov
sub
sbb
pop
adc
xchg
fistl
outsb
cld
mov
aas
shll
stos
sub
cmpsl
out
dec
adc
mov
aam
enter
sub
pop
cmc
ja
and
ret
cmpsl
pop
out
cmp
mov
loop
jmp
sbb
xchg
std
mov
sbb
bnd
fdiv
sbbl
sub
fmul
mov
dec
jmp
enter
cli
adc
or
pop
cli
fwait
adc
jge
mov
ret
stos
xchg
leave
mov
dec
cli
mov
push
push
stc
ljmp
add
sub
arpl
jl
cmpsb
fadd
pop
ret
adc
fists
aad
loop
jo
daa
add
nop
inc
push
test
subl
adc
out
shl
je
mov
adc
dec
jl
cmp
add
mov
dec
shll
mov
sub
hlt
movhps
xchg
xchg
pop
mov
lds
dec
jp
pop
dec
stos
ljmp
pop
fidivrl
testl
mov
cmp
popa
or
push
push
cld
or
std
dec
push
and
jb
sti
dec
ja
dec
fldcw
adc
outsb
lods
or
mov
adc
add
bound
pusha
lcall
dec
xor
outsb
es
push
aam
lods
nop
or
push
cmc
jb
mov
sbb
or
or
xchg
jge
std
mov
dec
lea
imul
inc
xor
ja
orb
cmp
mov
je
mov
test
stos
adcb
add
xchg
adc
loop
cmc
lds
mov
push
dec
dec
imul
xchg
jne
mov
push
xlat
movsb
repnz
cwtl
or
push
stos
out
and
xchg
js
cmpsb
add
fwait
mov
sahf
jo
rep
xor
mov
scas
inc
push
aam
push
adc
xor
push
popf
lret
ret
pop
cmp
ljmp
lahf
shl
sbb
in
sub
sub
lods
inc
cmp
dec
outsb
add
pop
imul
xchg
sbb
hlt
pop
in
int3
popf
fmuls
jl
scas
mov
subb
sarb
ret
adc
nop
popf
or
jecxz
inc
or
shrl
pop
mov
sub
je
fadds
mov
or
xchg
aad
push
mov
mov
xor
mov
or
aad
outsl
out
inc
jmp
sbb
pop
or
nop
cmpsl
daa
cmp
push
inc
cmp
dec
in
cmp
mov
lock
movsb
cmp
cmp
imul
loope
cmp
cwtl
mov
inc
aaa
adc
add
bound
js
clc
push
aam
mov
xor
cwtl
scas
aas
cmpsb
pop
cmp
jns
in
pop
push
pop
or
add
sbb
push
dec
xor
roll
cmp
mov
pop
mov
sub
loope
jae
popf
dec
dec
insb
xchg
inc
es
aas
lods
js
lcall
outsb
inc
fdivrs
enter
push
out
sbb
ja
push
popf
mov
addr16
in
add
adc
sub
lds
test
adc
movl
fstpl
int
xchg
fsubl
idiv
mov
cld
dec
cmp
pop
sbb
or
popf
incb
add
enter
pop
jb
xchg
mov
pop
pop
dec
cmc
inc
jg
loopne
xchg
cwtl
shr
mov
ds
pop
mov
ss
cmp
arpl
mov
xor
push
push
pop
notl
xchg
sub
ljmp
or
dec
repz
sarb
vpmuludq
mov
xor
xchg
lcall
add
fwait
orl
in
dec
js
xlat
push
in
or
pop
mov
pop
lods
mov
sbb
fwait
mov
stos
mov
or
adc
and
cmpsl
int
out
out
rolb
jno
push
int
fwait
adc
pcmpgtw
add
test
out
cmp
inc
jae
jno
mov
xor
sti
lret
std
rcl
push
mov
or
mov
xchg
lds
mov
mov
add
ds
mov
insl
pop
scas
testl
dec
ret
mov
lret
add
cli
popa
fisttpll
inc
sub
sub
cmp
pop
xor
psubsb
and
insb
popf
cmp
out
lods
xor
adc
push
and
js
pop
dec
jno
push
es
jge
xor
pop
adc
daa
and
cs
push
jp
insb
push
push
shll
sti
sti
cs
pushf
cmpsl
ficoms
movsl
push
mov
mov
pop
xor
in
jp
inc
sbb
hlt
fdivrs
xor
ljmp
cli
jp
add
insb
pop
jno
jmp
hlt
mov
pop
and
xchg
mov
adc
mov
and
jno
pop
dec
loopne
xchg
and
popa
filds
cmpsb
add
mov
js
cmpsb
es
arpl
jo
das
cmpsl
cmpsb
fmull
shlb
fidivs
and
test
push
rcrb
cli
test
push
aas
pusha
and
pop
call
insb
pop
test
rcrl
sahf
dec
test
ja
mov
cmp
mov
cwtl
pop
add
das
test
or
or
mov
jae
mov
insb
fadds
pop
mov
sub
add
sti
mov
insb
in
sahf
shl
cmp
hlt
mov
mov
sahf
mov
inc
call
add
nop
xchg
insb
push
repnz
mov
cmp
pop
addr16
lock
adc
mov
pop
cld
inc
and
or
inc
icebp
dec
mov
imul
movl
mov
push
sbb
imul
insb
scas
and
mov
push
mov
shrb
mov
pop
jbe
lcall
mov
jge
push
es
sbb
inc
sub
push
pop
ror
mov
fs
add
mov
cmpsl
testb
lcall
in
xchg
sub
dec
or
cmp
das
imul
scas
push
sub
repz
mov
fsub
mov
loopne
hlt
lahf
ret
and
cmpsl
scas
and
loop
inc
sti
mov
adc
mov
xor
cltd
cmp
xor
pushf
xchg
sub
push
cmp
cmp
sub
daa
xchg
int3
lock
cs
xchg
push
push
hlt
adc
or
fwait
test
fs
scas
dec
add
imul
add
mov
popa
cwtl
outsb
mov
leave
pop
fbld
gs
push
cmp
mov
pop
mov
pop
ficoms
push
jne
aam
out
sub
cmp
cmp
mov
jge
jp
cvttps2pi
add
sub
bndstx
or
in
xchg
cltd
pushf
movsb
fwait
or
mov
and
pop
outsl
mov
dec
adc
pop
idivb
shll
ja
add
inc
out
cmp
lock
daa
stos
lods
and
fidivs
cld
xchg
imul
std
cwtl
mov
dec
dec
outsl
xchg
push
jmp
push
mov
pop
mov
in
fimull
jp
data16
loop
ficompl
dec
or
movsb
add
in
inc
clc
insb
divl
lret
inc
negb
pop
mov
repz
mov
popa
pop
test
push
loopne
pop
push
dec
xor
mov
cmpsb
cmp
movsb
push
call
cltd
push
imul
or
mov
xor
lea
xchg
sub
add
mov
fiaddl
inc
into
push
pusha
or
dec
in
test
xor
aad
pop
std
add
fwait
loop
sbb
push
add
lock
pop
inc
sahf
outsl
cld
jecxz
pop
movsb
sbb
cs
mov
insb
repz
pop
or
xchg
rcrb
aam
pusha
sub
int
mov
fldcw
add
pop
cwtl
xchg
cs
pop
sbb
imul
add
mov
ret
mov
aas
fstps
push
insl
fs
hlt
pushf
xor
sbb
ret
sahf
clc
int
cmc
add
push
cwtl
shll
icebp
icebp
mov
stc
push
insl
in
xor
sbb
pushf
add
pop
sbb
nop
test
les
movsb
jne
stc
imul
flds
insl
jne
mov
pop
sbb
xor
fsts
push
mov
jns
and
out
push
lods
push
xchg
add
mov
mov
adc
pop
lods
add
mov
add
pop
mov
insb
inc
fisubrs
and
xlat
popf
lock
sahf
mov
add
lea
adc
rorb
inc
test
mov
nop
mov
out
push
mov
push
adc
add
fisttpll
pushf
outsl
or
cwtl
mov
lods
push
adc
test
pop
popa
cmc
pop
push
adc
mov
adc
pop
lcall
mov
jmp
sbb
dec
dec
push
bound
mov
lods
out
cwtl
test
sahf
pop
xchg
jnp
jne
lret
jmp
sti
jge
mov
push
ja
sbb
pop
adc
faddl
cmp
in
or
fsubrl
xor
sub
ds
test
sbb
mov
adc
test
loope
shlb
lods
dec
sub
stos
ret
icebp
adc
jae
mov
sub
add
push
pop
or
mov
in
cmpsb
xor
mov
inc
xchg
int
mov
mov
push
divb
es
lret
test
xchg
pusha
pusha
or
inc
dec
ss
xor
xchg
sbb
arpl
push
adc
inc
leave
movsb
imul
xor
dec
es
ds
mov
sub
inc
popa
mov
mov
ret
or
je
xchg
int3
cs
mov
or
xor
add
jmp
cmp
test
jg
inc
mov
ret
or
cmp
int
addb
gs
dec
cmp
push
mov
pop
pop
roll
test
aam
dec
jle
lret
cmp
jle
jnp
out
icebp
dec
fwait
jae
int3
insb
cld
cs
sti
mov
inc
movsl
fcomps
xor
and
leave
inc
jo
xor
mov
mov
pop
mov
cmp
imulb
flds
daa
adc
rcrl
pushf
pusha
fisttpl
pushf
lcall
lret
andb
add
sbb
sub
in
pop
lock
pop
iret
lret
or
jae
dec
fwait
cmp
jbe
xchg
aas
adc
inc
add
bswap
mov
pop
push
mov
cs
mov
test
cmpsb
and
sti
mov
stc
ds
mov
mov
idivb
mov
sub
xor
push
mov
xor
jo
and
icebp
cmpsb
loope
ror
inc
fistpll
jns
dec
icebp
insb
dec
insb
repnz
mov
cmpsl
mov
mov
sbb
repnz
push
push
test
pop
fists
js
mov
push
mov
xor
fidivrl
sbb
mov
movb
movsb
ljmp
add
xchg
jg
es
xchg
out
sub
sbb
inc
dec
mov
cmp
rcrb
pop
imul
js
xchg
ljmp
sbb
movsb
sub
dec
iret
mov
sbb
fnstcw
cmp
adc
dec
data16
movsb
sarb
mov
mov
push
ret
pop
dec
cld
mov
adc
insb
adc
adc
mov
cmpsb
testl
rol
pop
stos
jno
and
decb
jo
in
xchg
imul
stos
inc
aaa
push
test
dec
shl
ret
or
mov
jg
ljmp
mov
nop
lock
mov
mov
or
mov
mov
imul
iret
mov
nop
js
mov
fsubrp
in
pop
sub
xchg
inc
add
gs
ret
lods
cmp
lods
or
out
and
inc
arpl
mov
jno
bound
test
gs
je
mov
add
test
push
cld
test
sbb
or
stos
pop
sbb
jo
add
adc
in
sub
repnz
int3
and
xor
sahf
movsb
daa
cld
jmp
jge
jns
bnd
mov
outsb
cmp
mov
scas
adc
mov
ds
xchg
sub
test
aaa
mov
ja
ficompl
ss
test
sub
out
neg
fistl
cmp
fwait
sub
pop
push
inc
jnp
sbb
xor
dec
in
out
ljmp
or
dec
adcb
stos
push
popa
dec
jne
aas
lock
mov
sub
dec
popa
divb
ret
jge
push
daa
inc
sbb
aaa
fwait
dec
jnp
hlt
jne
jbe
mov
jb
incl
inc
or
adc
addr16
mov
mov
incb
cmp
les
xor
insl
arpl
or
std
xor
outsl
popa
fbld
rcl
cltd
xor
ljmp
jecxz
clc
andl
pop
xor
or
sarb
inc
stos
lea
lret
pop
addr16
call
xor
ja
pop
scas
xlat
rorl
scas
imull
inc
int
sub
or
inc
out
scas
sbb
xor
movsl
cmp
pop
out
stos
cld
add
dec
pop
inc
sub
pop
push
jmp
je
cwtl
lods
arpl
jnp
add
add
lcall
xor
jb
sbb
lock
in
sub
inc
add
pop
add
mov
dec
xchg
int3
arpl
or
insb
pop
jle
inc
imul
cmpsl
into
xor
push
sub
xchg
icebp
mov
push
jnp
popf
stos
ret
mov
es
out
fidivrs
dec
xor
std
cli
outsb
insl
or
insl
push
xor
mov
rorl
popf
int
xchg
std
xor
jecxz
scas
test
sub
in
and
sub
mov
add
push
push
push
xor
sbb
add
mov
push
push
aad
jle
popa
and
sbb
dec
movsb
mov
push
xor
sub
push
mov
cmp
mov
mov
add
dec
clc
pusha
add
dec
mov
dec
clc
lahf
xchg
daa
mov
test
cmp
loopne
add
sbb
dec
shr
cmpb
fs
loope
ret
dec
cmp
out
inc
insb
push
subb
mov
fidivl
mov
push
das
clc
or
decb
movsb
cmp
pop
jl
ds
cmp
mov
mov
dec
dec
add
out
sbb
cmp
div
add
sub
jp
int
cmp
and
test
push
cmc
add
jp
jge
push
inc
mov
or
add
jbe
inc
pop
test
roll
xor
push
add
adc
jns
rcll
lcall
jns
rolb
and
xchg
xchg
das
orl
mulb
test
adc
cld
imul
lcall
imul
test
imul
pop
mov
sahf
add
repz
cmpsl
call
data16
js
scas
lea
pop
stc
or
scas
xor
cmp
lahf
inc
and
sbbb
add
enter
mov
sarl
add
outsb
jno
insl
out
or
xorl
jne
push
hlt
dec
sbbl
outsb
xor
aas
mov
int
out
inc
loopne
and
adc
in
xchg
jne
jne
jg
inc
xchg
lret
jo
int3
shlb
clc
cmp
adc
jp
fcmovnbe
dec
mov
out
repz
sub
push
mov
and
mov
inc
push
popa
mov
dec
pop
pusha
xchg
xor
and
push
sub
inc
roll
mov
push
clc
data16
xchg
clc
fcomps
dec
pop
push
test
testl
sti
fistpl
ficompl
sahf
pop
jp
cmp
cwtl
movsl
iret
in
std
in
das
ret
fcmovnu
lods
insb
mov
ss
sub
addr16
sbb
out
mov
bound
iret
mov
push
mov
outsl
ljmp
test
pop
mov
stos
in
lret
pop
and
jo
and
sub
fisubl
imul
dec
xchg
lods
stos
lods
push
sbb
cmp
outsl
push
xchg
inc
aaa
pop
in
pushf
out
push
mov
dec
into
imul
mov
cmp
and
cmp
scas
fisubl
insb
mov
jg
push
jmp
stos
pusha
clc
stc
test
in
icebp
cli
dec
cmpsb
scas
or
lcall
test
fs
out
arpl
pushf
out
sub
jecxz
cmc
jno
mull
shrb
push
sbb
jae
push
jo
lret
out
sub
mov
push
jmp
cs
stos
xor
je
rol
cmp
sub
adc
je
mov
lods
jg
imul
jae
cmpsl
rolb
jnp
adc
fsubl
xor
fcoml
clc
sahf
dec
dec
adc
adc
xchg
fldt
call
xlat
and
inc
outsb
sub
shl
fcoms
jae
cwtl
jno
mov
add
lcall
aas
icebp
int3
test
xchg
sub
cmp
xchg
out
mov
lods
adc
rolb
fists
scas
mov
mov
stos
cwtl
movsl
shll
js
adc
popf
iret
mov
aas
add
dec
outsb
int
mov
xchg
rcl
inc
sub
push
xlat
push
fmulp
sub
push
ret
imul
cmp
jno
push
push
push
test
aam
test
fistpl
sahf
dec
fistpll
cmp
xchg
pop
add
ret
adc
xorb
arpl
push
lahf
mov
bound
or
pop
adc
out
dec
insl
fidivs
ss
in
fwait
adc
repnz
and
mov
mov
fiaddl
pop
lods
loop
jp
mov
xor
inc
xor
ss
and
fistps
push
outsb
add
pop
push
imul
mov
cpuid
std
pop
cmp
pop
mov
and
inc
fbstp
pop
cmpsl
int
xor
mov
fsubrs
sbb
iret
ret
daa
or
mov
push
sbb
xchg
xor
sbb
fs
mov
and
aas
inc
push
mov
push
push
adc
mov
add
add
mov
out
lret
cmp
dec
lret
je
test
cmp
or
mov
iret
cmp
xor
imul
cmpb
dec
dec
jmp
mov
fwait
test
mov
pop
xchg
popl
fbstp
addl
xchg
add
test
cwtl
sub
add
push
jnp
imul
hlt
jmp
ret
sbb
jno
add
xchg
pop
dec
in
mov
xor
and
lret
mov
mov
mov
cmp
loop
jge
dec
push
fimuls
dec
ror
fldcw
push
jmp
shrl
movsl
cmp
shll
fimull
popa
sub
jmp
xchg
fsubs
out
repz
fdivl
das
insl
ljmp
test
sbb
jge
add
add
ret
les
sub
or
xor
mov
adc
mov
mov
xchg
adc
imul
ds
inc
ror
sbb
push
or
dec
sub
adc
aas
or
cmp
adc
sbb
repnz
push
or
fbld
lods
and
xchg
cmp
adc
mov
push
pop
pusha
shl
add
adc
xchg
jns
imul
lods
add
sub
push
adc
lods
loope
sbb
push
lret
xor
pusha
pop
mov
repz
pop
push
jnp
adc
je
test
adc
icebp
cmc
fstps
ljmp
xchg
xchg
mov
movsb
dec
enter
or
rolb
xchg
dec
sbb
dec
and
push
push
cmpsb
mov
jle
lea
mov
inc
jl
rcr
js
add
out
or
push
xlat
mov
jo
js
jmp
test
jmp
adc
es
popa
fdiv
rcl
adc
cltd
xchg
sub
iret
imul
lock
stos
jg
dec
mov
repnz
jb
add
xchg
iret
mov
movsb
push
jp
outsb
cs
aas
lret
aas
faddp
add
fmul
and
push
pop
dec
loopne
pushf
dec
cmp
lret
lret
cmp
jle
cli
cmp
in
sbb
std
lods
rcl
mov
std
pop
aam
gs
scas
in
cmc
ss
lret
aas
add
cmp
ljmp
ljmp
mov
cltd
lcall
push
lcall
mov
xchg
in
jno
jae
mov
jns
stos
ret
sahf
pop
inc
dec
sbb
lds
iret
xchg
adc
dec
sahf
push
pop
test
divb
jne
icebp
leave
es
or
scas
in
mov
push
rolb
xchg
mov
enter
mov
dec
enter
mov
pop
out
jge
fdivr
fcmovbe
sub
adc
sub
jp
std
push
push
cld
testl
sub
xchg
cld
subb
leave
mov
rcr
lret
xor
xchg
cmp
lds
movsl
fdivrl
push
insb
pop
mov
push
sbb
xchg
sbb
popf
test
adc
iret
sub
in
bound
inc
jp
xlat
or
sbb
je
stos
jmp
out
scas
push
out
pop
into
cmp
jbe
add
fisttps
dec
or
xor
dec
or
daa
mov
loop
sub
jle
movsl
mov
xchg
jns
stc
fnstcw
sub
ret
loope
mov
int3
icebp
enter
dec
ss
or
jb
lods
clc
sub
loop
or
mov
ss
cmp
rcll
pop
outsl
pop
rol
pushf
adc
in
jl
xor
loope
lret
subl
iret
inc
pop
scas
pop
lahf
push
xchg
xchg
pushf
mov
xor
in
adc
mov
jb
cli
mov
flds
ret
pop
cmpsb
das
xchg
add
nop
ret
in
add
lret
cld
pusha
int3
inc
push
adc
mov
fmul
push
cltd
aas
mov
sbb
das
inc
xlat
cmpsl
sbb
shl
and
rcll
push
push
add
add
xchg
dec
pop
mov
jno
mov
cwtl
and
and
jg
pop
jle
lock
xchg
xchg
scas
mov
into
mov
sub
cmp
xchg
xor
mov
mov
out
pop
push
dec
std
push
xor
mov
push
add
add
pop
dec
stos
add
mov
test
lods
jns
into
xchg
jp
adc
decb
fwait
xor
in
icebp
mov
div
sub
pop
mov
sub
cmp
and
xchg
pop
aam
mov
and
fs
xor
gs
cmp
subb
hlt
cmpsl
pop
mov
cmp
push
or
push
xor
push
push
insl
push
test
into
scas
fnstenv
cmc
shll
xchg
cmp
mov
div
out
sti
add
and
jl
pop
pop
test
addl
roll
sbb
dec
pop
movsb
xor
imul
sub
ds
cmp
out
jmp
insb
jb
loopne
or
insl
add
add
xor
fdiv
ds
shlb
imul
daa
and
xchg
sub
outsl
lcall
cmp
add
mov
pop
xchg
divb
popa
or
stos
pop
pop
mov
sub
xchg
mov
jg
fisubs
xchg
xchg
mov
sbb
and
sub
aas
outsb
push
and
jno
pop
adc
add
insb
cmp
cltd
jp
dec
mov
add
cmp
xlat
add
ss
fxch
imul
mull
xor
mov
mov
loop
or
and
inc
xchg
lods
sbb
add
mov
fists
fcmovne
and
or
sahf
and
jle
inc
dec
mov
jle
lret
out
mov
mov
jmp
sub
fisubl
fstl
cmp
cmp
rcrl
ret
orl
dec
adc
mov
adc
in
in
loopne
int3
pop
sbb
jns
push
push
mov
pop
imul
push
xlat
mov
mov
cmpsb
xchg
pop
call
xchg
adc
div
popf
mov
cltd
imul
jg
push
and
clc
push
pop
insl
jecxz
sub
xor
sahf
cmpsl
bound
dec
sub
fs
popa
mov
jne
addr16
call
push
insl
in
and
push
sbb
mov
mov
test
imul
dec
outsb
push
or
cmp
mov
cmp
fistps
jns
push
and
test
std
int
sub
dec
cmp
imul
sub
xchg
push
outsl
shrl
xchg
movsl
push
jle
mov
and
aam
lods
and
js
mov
aad
inc
adc
xchg
jbe
and
in
mull
push
adc
stos
cmpsl
test
mov
fstpt
test
fldcw
loope
cwtl
jo
aas
test
adc
loope
fidivs
pop
xor
aad
loopne
test
popa
cmp
data16
outsl
mov
mov
xchg
adc
lret
add
div
sub
in
xchg
iret
add
out
adc
pop
fcomps
dec
inc
sub
push
cmp
push
jns
lret
inc
repnz
cmp
sbb
mov
pop
xlat
imul
pop
test
jnp
inc
out
mov
enter
mov
enter
xchg
stc
or
bound
pushf
out
aaa
cmpsl
cmp
lock
ss
int
nop
jo
jb
pop
fisubl
cld
xchg
das
test
cmp
or
mov
imul
xchg
loop
iret
pop
es
add
cltd
loop
ja
icebp
dec
das
aaa
stc
lret
movsl
sbb
xor
mov
add
jb
fbstp
push
and
mov
jns
out
loope
pop
in
cs
adc
popa
inc
sbb
cmc
push
fsubrl
loope
ds
and
xchg
jmp
xchg
fisubl
aaa
xchg
add
xchg
jg
push
pop
and
adc
cs
xchg
add
dec
adc
and
mov
aas
push
test
repz
mov
cmpsl
push
pop
int
sbb
je
xchg
sbb
jbe
outsl
adc
sub
push
enter
dec
repnz
fsubrl
xchg
pusha
lock
sub
ljmp
xor
loope
add
or
xchg
mov
pushf
dec
loop
out
jbe
fiadds
bswap
mov
push
imul
sti
pop
dec
push
sti
and
xlat
movsl
pop
les
out
xchg
jg
add
je
ss
cmp
mov
add
fs
or
or
add
pop
mov
inc
jae
dec
test
adcb
push
out
pop
dec
push
inc
inc
popa
push
into
test
mov
dec
das
mov
out
push
push
nop
jns
pusha
or
lret
pusha
repnz
rol
sbb
ret
dec
jl
leave
aas
sbb
test
mov
daa
push
cli
xlat
jecxz
test
push
cmc
jecxz
push
xlat
sarb
cmp
adc
push
int
push
inc
dec
clc
test
and
clc
add
out
pop
stos
push
pop
rcrl
mov
ss
jp
aaa
lds
fimuls
call
fucomip
into
lock
idivb
push
pop
fcomip
enter
jbe
dec
push
pop
xlat
out
pop
bound
xor
loope
mov
dec
xlat
dec
cmp
jge
cmpb
les
mov
int
cmp
lock
repnz
cmc
test
sahf
pop
lods
push
ret
xchg
jbe
jecxz
mov
out
loope
repz
lahf
cmpl
gs
outsl
in
jo
cmp
int
sub
imul
push
xor
adc
pop
loop
lock
sahf
xor
xor
adc
jecxz
aad
mov
pop
adc
sbb
cwtl
xchg
js
arpl
inc
push
movsb
adc
pushf
fstpt
mov
sub
mov
xor
fwait
sbb
inc
sub
aaa
jge
or
jge
popa
xchg
lret
aas
jecxz
popf
mov
sarl
ret
mov
pusha
idivb
rcl
sub
cmpsb
pop
push
jp
aad
faddl
movsb
pop
adc
int
xor
or
add
lcall
andnps
js
repnz
arpl
push
outsb
lahf
inc
push
iret
xchg
and
lods
lret
loope
push
mov
jo
outsl
fildll
pusha
sub
loopne
push
pop
mov
dec
bnd
addl
rcll
or
or
xchg
xchg
xor
iret
and
cs
lret
xchg
lea
dec
sbbl
fwait
or
imul
std
inc
out
mov
shlb
ljmp
cmp
xchg
fbstp
pop
jnp
push
pushw
mov
jl
xor
aaa
nop
repnz
jo
int
add
xor
cmp
lret
stos
mov
mov
cld
or
inc
psubusb
ror
inc
xor
sarb
jno
into
xchg
add
jecxz
das
and
in
int3
imul
mov
inc
sbb
xor
enter
nop
push
cmpsl
lcall
aaa
iret
stc
jge
xchg
ficompl
and
adc
mov
movsl
outsl
jl
clc
pop
int
mov
nop
cmp
pop
jecxz
call
ja
pop
inc
jne
cmp
and
mov
cmp
rorb
repnz
mov
xchg
adc
es
cltd
push
add
jbe
adc
adc
fwait
lahf
stos
fsubrl
lods
orb
sbb
mov
aaa
mov
adc
push
push
lods
dec
jae
mov
push
into
xor
pusha
rcl
leave
sbb
loopne
cmp
sarl
or
cwtl
daa
je
mov
cld
enter
in
or
lea
xor
int3
dec
dec
jg
and
insl
scas
lods
dec
daa
ljmp
in
call
add
add
data16
movsb
movsb
punpckhbw
lods
xchg
mov
or
adc
mov
dec
push
lcall
or
cltd
jp
or
loop
push
incl
ja
ljmp
or
in
xchg
mov
hlt
arpl
or
adc
ljmp
dec
inc
jmp
pop
call
sti
pop
adc
inc
popf
mov
popl
push
out
and
jle
call
imul
movl
push
inc
push
sub
jnp
sbb
repz
icebp
adc
rcrb
imul
pop
ss
movsl
scas
jge
jg
mov
sti
cltd
dec
fcomps
xchg
xor
inc
sub
loop
xor
add
sbb
into
shlb
inc
pop
lods
adc
mov
gs
jge
mull
adc
lods
fsubr
loope
cli
pushf
xor
add
mov
int3
cltd
jo
add
push
dec
push
cltd
sub
xor
out
xchg
cmp
xor
pop
sar
repnz
bound
clc
inc
rcl
rclb
in
mov
enter
xor
or
mov
mov
int
jg
lods
jns
jns
dec
test
push
xchg
lcall
mov
orl
lahf
dec
adc
adc
testb
sbbb
addr16
xor
mov
outsl
outsb
inc
insb
sar
out
push
mov
ss
out
xlat
jnp
dec
cli
nop
xorl
jo
adc
dec
loop
mov
out
sar
cmpsb
lods
sub
inc
inc
fdivrl
imul
inc
jl
mov
mov
scas
sbb
jnp
loope
jle
or
ret
or
int
cwtl
gs
divb
mov
pop
jo
ficoms
sub
xor
pop
leave
add
aam
mov
ds
pop
push
inc
lods
or
jnp,pn
adc
dec
cmp
cmp
sub
cmpsl
lret
mov
test
clc
adc
ret
push
popa
sub
add
daa
inc
dec
or
add
lock
add
push
inc
subb
mov
mov
in
cwtl
mov
jmp
cmp
dec
imul
roll
mov
pushf
mov
xchg
push
xor
add
aaa
or
outsl
or
mov
push
shl
jge
js
adcl
push
scas
pop
jo
ret
in
lahf
cmp
xorb
int3
jp
xor
mov
in
jp
sbb
jne
shrb
pusha
sbb
iret
sbb
push
jne
pop
sub
mov
cmpl
jbe
mov
cmc
jp
pop
mov
adc
mov
mov
jno
fsubrs
nop
and
or
or
or
jg
cmc
shlb
mov
leave
push
data16
inc
outsl
push
dec
mov
ret
rcr
movsl
dec
sub
lods
push
cmp
es
hlt
push
pop
or
adc
and
sub
inc
sub
std
pushw
or
in
push
data16
jge
fcomps
xchg
jnp
test
lock
inc
sbb
mov
mov
imul
sub
insb
lock
std
jne
js
aad
pop
daa
call
lods
out
push
inc
xchg
ljmp
subl
cs
mov
or
cwtl
cmpb
pop
ficomps
cwtl
adc
and
jl
lahf
dec
das
repz
push
lcall
cmp
xchg
mov
jo
jno
int
dec
movsl
mov
or
inc
sub
out
gs
mov
scas
test
lret
lret
xor
stos
xchg
int3
mov
xor
adc
adc
ds
scas
push
add
or
aaa
xchg
and
stc
cltd
lods
sbbb
pop
das
ror
jo
xor
sbb
out
iret
nop
ljmp
xor
adc
mov
xor
aad
pop
cwtl
hlt
mov
push
and
lahf
xchg
mov
mov
cmp
sar
clc
cmp
dec
icebp
lahf
mov
or
mov
cli
inc
jg
mov
movsl
adc
ss
cwtl
add
mov
in
pop
fstpl
outsb
add
or
in
mov
insb
mov
sahf
sbb
cmc
sbb
ret
mulb
jl
xor
add
lods
xchg
mov
rol
imul
ja
rcll
xlat
cmpsb
cmp
in
sub
cmpb
jne
rdtsc
sub
jecxz
enter
jns
mov
xlat
shrl
push
mov
enter
test
test
or
das
arpl
cmp
push
sahf
cli
bound
das
add
pop
enter
push
add
jb
out
add
fwait
jo
xchg
std
pop
xor
pop
cmpsb
and
pushf
adc
jecxz
xchg
scas
ja
int
sbb
arpl
dec
int
test
sub
cli
pop
in
outsb
lods
jl
or
mov
shrb
fs
cmp
xchg
or
imul
adc
inc
mov
cmpb
mov
jle
shll
cmp
or
cmp
xorl
fisubs
aas
aam
xchg
jnp
lea
sbb
add
push
test
je
ret
imul
dec
imul
lahf
or
sbb
sub
mov
je
jp
clc
insb
and
xchg
sub
add
sub
mov
imul
sahf
push
inc
cmp
lock
mov
sar
es
mov
fs
xchg
rcl
push
push
mov
shrl
xchg
in
mov
popf
or
pushf
aad
push
popa
jae
cmp
call
cltd
dec
stc
fs
xor
cs
testl
mov
jo
mov
mov
jge
xlat
pop
push
inc
shr
clc
mov
ljmp
loop
jb
jecxz
imulb
leave
cwtl
scas
into
jae
adc
lret
hlt
popa
sub
xor
and
sti
in
cmp
outsb
loopne
fsub
push
hlt
mov
mov
pop
jb
push
rcll
repnz
sti
and
and
in
loope
sub
je
sub
rcr
jo
repz
inc
pop
sub
sbb
leave
aam
test
call
or
pop
insl
pop
das
inc
cwtl
push
xchg
leave
mov
mov
imul
dec
scas
mov
das
mov
test
insb
pop
mov
in
mov
cld
out
pusha
stos
dec
data16
divb
cld
jmp
and
filds
jg
icebp
pcmpgtd
hlt
int
inc
push
test
dec
push
rolb
mov
outsb
popf
mov
mov
notl
add
andb
adc
enter
loopne
mov
fwait
sbb
fbld
pop
adc
mov
fisubrl
nop
mov
mov
mov
orl
fbstp
ret
cld
negl
scas
xor
dec
xor
mov
leave
loop
xchg
xchg
jle
pop
negb
movsl
jo
mov
push
out
inc
ja
loopne
sub
mov
dec
xchg
decl
dec
pop
mov
inc
lret
jle
lods
ret
mov
inc
xchg
rclb
xchg
or
xchg
loope
lret
std
mov
xor
ret
push
cs
pop
adc
push
jne
add
or
insb
xchg
xlat
fisubs
fcmovnu
stos
cmp
or
fistpll
cmc
jp
cwtl
ja
outsl
inc
inc
sub
cmp
addr16
pusha
divb
je
addr16
jbe
jmp
out
lock
jl
jno
ds
and
int3
mov
mov
mov
adc
jo
fs
ficompl
cld
add
or
dec
jbe
jl
insl
nop
lret
or
js
pop
xchg
in
jae
and
call
into
pop
ss
push
sub
scas
lret
out
scas
add
or
ds
scas
push
aas
add
aaa
mov
xor
mov
loopne
ja
cld
shll
cmpsb
cmp
inc
pop
insb
jbe
adc
dec
imul
add
push
xor
test
mov
outsb
sarb
xchg
push
mov
cmp
mov
leave
sub
xor
and
mov
sbb
sbb
cltd
addb
or
iret
dec
loopne
mov
mov
xlat
pop
xchg
mov
insb
and
test
pop
loop
repnz
pop
sub
and
bound
dec
in
push
inc
xchg
mov
adc
pop
lret
xor
scas
imul
mov
sbb
mov
hlt
mov
ljmp
pop
mov
iret
push
xchg
mov
rcl
addb
jmp
xlat
jge
repnz
xlat
mov
sbb
loopne
sub
mov
lret
add
repz
fwait
mov
mov
push
sub
jbe
mov
cli
dec
xor
ds
int3
aam
testb
jle
jp
mov
fsubl
ret
mov
push
sub
push
push
or
or
mov
loop
outsb
add
ret
push
inc
pop
fcomps
mov
popf
fstps
daa
in
hlt
push
aam
jecxz
popf
pmullw
test
movsl
mov
aad
mov
jnp
lock
adc
sbb
scas
outsl
dec
cmpsb
xor
pop
xor
mov
int
dec
mov
scas
ret
inc
popf
incb
xor
stos
mov
sub
pop
mov
push
inc
add
je
fdivl
jl
je
jns
push
rcll
outsb
mov
mov
mov
pop
leave
and
int3
ret
cmpsl
mov
fldenv
icebp
lea
loope
adcb
andl
sub
jl
jle
frstor
bound
push
imul
fsubrp
mov
xchg
cmpsl
out
mov
pop
mov
cli
jne
mov
data16
pop
sub
cmc
outsl
mov
pop
stos
mov
jno
push
fadd
push
cmpl
je
ret
loopne,pt
or
xlat
insl
aas
and
test
ds
cmp
jne
daa
mov
imul
icebp
push
xlat
cmc
cs
mov
clc
jnp
scas
es
gs
test
push
imul
mov
adc
ja
call
out
and
inc
leave
imul
push
and
notb
mov
mov
mov
aam
jmp
jg
shl
jle
out
insb
insl
out
sbb
push
xor
jbe
pop
lret
add
inc
insb
jle
sub
and
xchg
sahf
jge
pusha
or
loope
aam
daa
push
push
mov
xor
jno
pusha
dec
mov
in
jo
or
ds
lahf
adc
jno
imull
mov
mov
stc
push
and
popa
out
mov
out
mov
mov
xchg
xchg
cmp
leave
adc
fstps
pop
mov
imul
outsb
jae
xchg
shlb
pop
js
push
sub
jnp
loopne
aam
add
fistl
adc
jp
outsb
add
mov
mov
icebp
insl
add
add
mov
aam
sbb
xor
pop
cli
add
loope
jne
cltd
push
jge
xchg
mov
in
outsl
pop
xorb
push
cltd
push
mov
cmc
jmp
sahf
add
jge
adc
mov
sub
adc
mov
fisubrs
in
cmp
dec
or
aam
lods
mov
xchg
repz
movsb
pushf
stc
clc
aam
sbb
setge
aas
pop
out
cltd
aaa
add
test
dec
xchg
jns
dec
xor
faddl
out
lds
mov
fs
dec
inc
mov
mov
lods
dec
sbb
and
inc
jg
outsb
fbstp
mov
jne
aaa
adc
shlb
and
jb
shlb
outsb
lods
arpl
push
ret
cmp
insl
scas
adc
mov
xor
xor
rorb
jmp
or
shl
adc
sub
roll
mov
adcb
mov
aam
ljmp
or
mov
movsl
rorl
cs
scas
ja
lods
push
inc
popa
push
adc
dec
mov
movb
xchg
add
add
mov
mov
xchg
xor
jo
ss
dec
inc
iret
jle
xor
add
andb
sub
je
orb
inc
cmpsl
pop
adcb
enter
lcall
dec
push
and
inc
lret
and
mov
shl
leave
adc
mov
cmp
push
mov
xchg
dec
jno
fsts
adc
jne
out
inc
inc
movsb
cli
mov
daa
lods
repz
mov
les
inc
sbb
sub
xchg
add
ss
adc
fnstcw
packsswb
xchg
xchg
scas
xchg
sub
pop
inc
lock
cmp
popa
inc
insl
mov
shrl
add
mov
inc
ds
cmpsl
inc
imul
mov
arpl
fisttpll
dec
xor
mov
fwait
ret
pop
push
push
inc
mov
test
lock
xor
adc
add
test
cmp
lahf
push
out
inc
adcb
jl
or
cmp
sbb
repz
add
data16
pushf
in
andl
pushf
xchg
xorb
pop
dec
pushf
ds
bound
push
aaa
and
test
pop
rcll
push
pop
icebp
int3
clc
lds
into
dec
test
adc
outsb
dec
ds
cmpsb
js
cmp
pop
inc
fisttpll
add
push
mov
cs
mov
arpl
mov
shrl
add
int3
adc
sub
xor
jmp
repnz
jns
xchg
mov
cli
stos
out
test
arpl
cld
inc
sbb
in
mov
xlat
xchg
rclb
sub
mov
loop
sbb
adc
sarb
dec
mov
cmp
movsl
jne
cld
fcom
mov
cmp
add
iret
xchg
sbb
add
mov
and
push
mov
sub
je
out
gs
push
iret
mov
stc
jp
dec
cmc
mov
sbb
mov
fldenv
jns
cs
sub
aad
mov
negb
outsb
and
stos
push
psubsb
aas
inc
test
loope
inc
adc
adc
inc
push
add
in
aam
rorl
mov
cld
mov
jne
addr16
es
cld
mov
cmp
mov
hlt
xorb
orl
mov
pop
int3
es
jno
cmc
test
mov
incl
fwait
inc
jne
lret
or
jle
inc
insl
jp
fcomip
mov
mov
mov
testb
dec
iret
cmc
dec
jns
inc
notb
sbb
push
xchg
mov
jae
mov
push
push
add
inc
pop
or
sub
xchg
mov
into
or
jae
outsl
jl
mov
insl
add
or
inc
and
jg
cld
xor
repnz
sbb
mov
test
dec
cmp
jo
js
mov
out
aad
mov
lahf
hlt
je
mov
or
inc
stc
into
sub
mov
insb
or
pushf
jg
and
cwtl
aas
clc
pop
int3
jne
mov
sub
aad
movsb
rorl
pop
xchg
popa
loope
cltd
inc
in
rclb
dec
cmc
shll
add
and
aad
dec
cwtl
dec
mov
in
add
xor
imul
mov
data16
outsl
daa
mov
and
pushf
ret
test
inc
ror
inc
loop
repz
shrb
pop
pop
inc
andl
fbld
stc
inc
jbe
leave
cmpsl
mov
dec
mov
fneni(8087
xchg
pop
ds
das
movsb
pop
mov
inc
mov
xlat
cmp
fisubrl
into
cmp
cmove
mov
xchg
enter
shr
mov
test
lods
xor
movaps
inc
mov
test
push
jb
push
aas
test
mov
cmpl
jecxz
pop
loop
idivb
out
lock
pop
jno
mov
pop
mov
adc
jnp
push
jbe
es
daa
push
cmp
pop
fcompl
out
xor
jge
in
shl
andb
pop
popa
xlat
cli
stos
push
pop
lds
mov
inc
cmp
imul
push
rcl
adc
cwtl
icebp
cld
dec
jge
dec
jo
rcr
jmp
sub
ret
rcrl
add
push
mov
jae
sbb
xchg
stos
xchg
dec
xor
adc
mov
inc
das
lods
in
xchg
aad
and
or
ss
xchg
loop
mov
mov
out
push
dec
push
aas
jecxz
mov
and
lahf
jno
arpl
test
sub
dec
cmpsl
pop
aam
fprem1
xor
jmp
js
pop
sub
stos
fwait
dec
cmp
mov
dec
pop
lods
xchg
sub
mov
rcll
inc
test
out
ret
cvttps2pi
into
in
shll
mov
ret
xor
imul
mov
lds
orb
adc
push
mov
mov
mov
dec
jle
mov
rcrl
push
jg
jecxz
add
push
xadd
cmp
push
rcl
mov
push
xor
adc
jge
cmp
aaa
fnstsw
mov
add
fwait
outsl
pop
sahf
leave
pop
call
mov
pushf
in
dec
out
mov
cmp
hlt
pop
push
int3
leave
mov
or
loop
xchg
lods
push
mov
or
mov
add
jmp
stos
pop
xchg
or
dec
imul
sub
xor
ja
mov
mov
jae
xchg
xchg
aad
xchg
mov
xor
pop
xor
mov
hlt
add
xchg
stos
fists
sbb
movsl
out
sti
movzbl
insl
data16
push
xor
push
adc
loope
or
sub
add
inc
push
pop
add
jle
scas
sub
or
cmp
test
cwtl
mov
lret
sbb
and
mov
dec
dec
pushf
cltd
mov
pop
lret
mov
xchg
add
adc
test
and
jne
sub
aad
loope
jmp
add
loope
and
scas
jno
ja
dec
mov
cmpsl
jb
mov
int
pushf
dec
mov
in
inc
jne
sbb
or
xorb
xchg
jb
jae
rcr
xorb
mov
jp
rcrb
mov
cmpsl
xlat
inc
mov
jne
inc
or
cs
or
subb
push
pop
sub
popa
sbb
and
and
fistpl
mov
pop
shl
sub
pop
out
outsl
stos
imull
gs
jo
fisttps
pop
jmp
je
cmp
mov
mov
fimuls
loope
pusha
jmp
mov
loop
fcoml
movsl
scas
sar
aad
and
mov
aad
lock
adcb
jb
xchg
std
adc
scas
rorb
cwtl
push
lcall
stos
inc
mov
pop
and
or
ret
adc
out
movsb
call
pop
mov
push
addl
cltd
pop
sub
mov
popa
push
cmpsl
ja
test
ficompl
lods
push
aad
add
xor
xchg
fwait
sub
fmull
xchg
add
daa
push
mov
push
add
out
xor
inc
rcl
xlat
push
bound
clc
sahf
sbb
testb
push
push
scas
or
outsb
xor
sub
nop
es
add
rcr
or
cld
mov
mov
mov
mov
jo
lret
inc
ficomps
jp
pop
imulb
fistpl
adc
xor
or
fwait
add
ret
push
pop
xor
lods
ja
cmp
inc
stc
shrb
pop
fldcw
repnz
cmp
push
movsl
js
and
xchg
gs
push
sbb
mov
lcall
inc
in
dec
dec
in
js
out
sub
popa
cmp
cwtl
jo
int3
data16
mov
sbb
adc
orl
test
rorl
jno
cmp
arpl
pop
dec
xor
aas
inc
repz
pop
nop
notl
sbbb
rolb
push
jge
sarl
pop
insb
mov
sti
adc
test
je
movsb
push
scas
sti
sbb
push
jbe
push
orb
pusha
inc
cmp
adc
dec
loop
cmp
inc
mov
cld
xchg
aaa
cmc
dec
sbb
rcr
sbb
outsl
mov
mov
cmpsl
adc
test
push
ljmp
popa
int3
pusha
pushf
jae
or
cmp
adc
repz
and
imull
adc
fdivrs
repz
daa
loop
xor
dec
insl
loopne
push
fidivs
inc
inc
fisubl
test
xchg
pop
mov
les
mov
icebp
stc
jb
mov
xchg
jp
pop
or
jl
rcrl
push
inc
fiadds
fwait
arpl
add
inc
fiaddl
dec
sub
cli
jnp
xor
fst
es
sbbb
dec
push
paddq
push
push
dec
movsb
mov
pusha
enter
or
xor
adc
leave
enter
xor
js
mov
sub
lea
stos
cmp
int
jmp
pusha
lock
pop
in
pushf
mov
mov
mov
insb
jl
mov
push
sbb
push
cld
push
mov
sbb
fsubrl
mov
leave
push
push
fwait
lret
xchg
sti
negb
xchg
pushf
mov
jl
pushf
mov
outsb
int3
in
inc
loopne
xchg
adc
and
mov
mov
jns
mov
xorb
or
sti
aad
int3
cs
cli
mul
mov
push
pop
int
adc
mov
mov
fisubrl
iret
jo
popa
sbb
jne
pxor
dec
dec
inc
imul
movsb
lock
jne
jle
cmp
dec
add
dec
xor
push
lods
and
mov
sbb
arpl
scas
cmp
jecxz
sub
out
dec
bound
and
les
xchg
pop
cmpsl
adc
mov
test
jae
fdiv
or
and
xorl
icebp
sub
xchg
dec
test
xchg
adc
mov
mov
cmpl
imull
add
loopne
jo
jecxz
inc
jg
mov
sbb
addr16
cmp
outsl
into
sub
mov
int
test
jnp
ret
in
add
jp
int3
aam
and
imul
cmp
mov
add
shll
orl
mov
cmp
loop
pop
and
push
mov
leave
jg
ficoml
ficomps
xchg
jae
adc
and
inc
mov
lods
pop
hlt
lods
adc
dec
adc
shlb
lret
les
lret
jl
sbb
xlat
jb
mov
addr16
dec
push
and
clc
mov
add
in
xor
or
mov
std
or
adc
mov
jnp
sub
inc
stos
cmp
push
pop
jge
jmp
rcrl
xchg
out
popa
xchg
ljmp
sub
push
imul
js
xor
xchg
data16
insl
ss
mov
xorb
jb
dec
mov
inc
mov
inc
push
cli
loop
adc
xchg
jnp
scas
xlat
sub
adc
push
mov
or
dec
pextrw
inc
sbb
pop
lock
inc
push
aad
int
xchg
cltd
pop
insb
mov
hlt
mov
jmp
insl
pop
iret
das
jecxz
cli
enter
dec
insl
inc
loope
mov
pop
fcmovne
pop
int3
mov
stc
imul
pop
dec
pop
arpl
dec
dec
push
out
fwait
cwtl
jo
addl
and
movsb
pop
ret
iret
lea
daa
mov
imul
sahf
lret
inc
rcl
pop
gs
mulb
mov
cld
push
fprem1
mov
fisubrs
xchg
fst
test
mov
sahf
push
lahf
fnstsw
or
pushf
mov
scas
fisubrl
hlt
int
test
jb
into
push
push
inc
sbb
leave
push
ss
popf
lock
push
lock
cli
mov
xor
xor
andl
cmp
aas
out
pop
test
adc
cwtl
in
xor
push
inc
movsl
ret
cmp
lea
int3
jo
inc
jo
xchg
mov
ret
or
jnp
cmc
mov
imull
aaa
adcb
and
push
fwait
xchg
js
cmp
pusha
testl
cmc
nop
call
adc
lahf
out
jb
lds
xor
addr16
imull
ret
add
inc
and
es
push
pop
xchg
cs
aas
xor
mov
inc
negl
add
sbb
in
movsl
ret
jl
aad
sbb
pop
xor
out
stos
pop
fimuls
aas
mov
sub
inc
repz
call
push
mov
cmp
sbb
imul
mov
push
adc
pop
jns
cmp
cwtl
cmpsl
jb
fidivs
adc
add
cld
push
pop
xchg
mov
sbb
jmp
jae
mov
fs
aad
xlat
lods
dec
cmp
sub
adc
or
sbb
loopne
dec
adc
hlt
sbb
pop
outsb
mov
xchg
pop
pop
push
mov
sbb
ja
jae
mov
mov
test
jo
jmp
jecxz
sti
sub
hlt
and
data16
sbb
in
mov
jns,pt
addl
call
dec
ds
add
imul
mov
into
and
push
xor
mov
divb
mov
stos
shrb
cltd
push
dec
in
and
mov
adc
dec
add
les
sub
fstps
in
add
cmp
jnp
cltd
pop
mov
std
jns
icebp
or
loopne
and
or
jb
and
xor
sbb
inc
lcall
f2xm1
repz
lret
into
fstpl
enter
xchg
stos
leave
loopne
test
add
cli
loope
mov
mov
mov
fwait
mov
rclb
std
lea
iret
mov
dec
jp
in
les
sbb
pop
xor
or
fsubl
jl
adc
xchg
cmp
pop
mov
pop
jg
aad
jo
lret
mov
ret
mov
and
inc
add
sbb
les
lock
rcrl
xchg
mov
lods
mov
pop
dec
mov
cmp
pop
fwait
addb
das
stos
jbe
ret
aaa
shrl
xlat
aad
mov
jmp
mov
in
xor
test
xchg
mov
mov
out
mov
mov
cld
les
loop
jo
iret
dec
les
stc
jae
mov
add
or
cmp
push
rorb
mov
jle
wbinvd
aaa
sub
fld
inc
mov
cltd
xchg
cmpsb
outsl
dec
call
adcb
pushf
popa
cs
sbb
add
push
filds
xchg
fimuls
out
testl
sub
push
mov
mov
mov
dec
dec
push
shlb
andb
pop
jg
pop
mov
fcomi
scas
mov
mov
inc
dec
pushf
and
push
movsl
sub
add
cmc
lret
cmp
push
mov
or
push
shlb
adc
mov
add
add
mov
out
add
fadds
push
lods
jo
push
shl
es
push
aam
imul
in
dec
and
pop
xchg
xor
rolb
push
sub
push
inc
sbb
or
add
xchg
xor
adc
movsb
mov
push
push
mov
or
mov
add
sub
inc
or
adc
jp
out
ds
imul
test
adc
jp
pop
sarb
add
xchg
ds
pop
inc
enter
pop
jno
push
ret
mov
jne
sub
icebp
and
cmp
pop
gs
push
test
xchg
outsl
dec
lret
decl
inc
fildll
ret
sbb
push
dec
dec
adc
or
mov
scas
in
inc
mov
mov
inc
stos
sbb
mov
sahf
test
push
pop
dec
or
mov
xchg
sbb
mov
or
insb
and
enter
fidivrs
sub
sub
subl
mov
stc
and
stos
sti
arpl
cld
dec
adc
insl
pop
out
jge
sysenter
sbb
mov
ds
cld
mov
pushf
roll
mov
push
in
adc
mov
in
push
pop
sub
fwait
das
xor
jnp
dec
pop
frstor
or
xchg
gs
fldl
popf
push
test
push
lahf
hlt
push
dec
and
fsub
into
sarb
push
cmp
mov
ds
scas
mov
xor
pusha
inc
mov
sbb
and
cmp
outsl
jmp
xor
scas
pop
push
cltd
fisubs
in
mov
xchg
sub
out
add
sub
xchg
and
repnz
stc
pusha
and
pop
mov
push
mov
mov
pop
sub
sub
cmp
jecxz
fsubr
xchg
dec
iret
es
outsb
leave
stos
xor
popa
mov
lds
cmp
adc
in
inc
jo
sbb
or
imull
cmp
add
push
or
lea
sub
xor
gs
aam
add
push
and
mov
shll
stc
rcl
mov
xchg
lcall
mov
loope
adc
repnz
push
lds
pushf
popa
xlat
mov
sahf
pop
enter
and
jb
xor
xchg
inc
adc
insb
pop
inc
mov
xor
sub
add
insl
ss
and
pop
or
push
jno
and
mov
xor
sbb
aam
adc
pop
fidivl
jno
loopne
insb
es
in
inc
pop
jmp
fldl
inc
ds
inc
mov
cwtl
sub
sub
mov
je
je
pop
push
xchg
jg
xchg
sbb
push
lret
inc
pushf
mov
mull
rcrb
pop
push
les
and
mov
es
xorb
daa
dec
out
repz
push
jb
xchg
int
cmp
loope
or
mov
mov
xchg
loop
adc
int3
lea
clc
imul
sahf
mov
subl
cmp
in
mov
dec
mov
cltd
xchg
pop
push
mov
and
sub
fwait
les
popa
fldl
in
icebp
pop
andl
jno
test
pminsw
scas
jecxz
jbe
sahf
sub
or
mov
mov
xor
pushf
pop
jg
out
pop
add
add
sub
cmp
or
lock
pusha
and
data16
dec
inc
and
mov
push
inc
pop
movsb
sub
daa
dec
add
and
scas
jl
cld
fdivs
sub
insl
sub
in
loopne
push
jecxz
rcl
call
inc
mov
push
or
mov
cmpsb
int
mov
mov
ficompl
xor
test
pushf
cmp
popf
mov
imul
scas
pop
aaa
mov
sbb
fsubrl
loop
push
loope
mov
mov
scas
push
and
sti
xchg
dec
adc
repnz
mov
xor
cmp
add
lret
lret
mov
ljmp
popa
in
dec
adc
lock
repnz
add
stos
and
inc
mov
mov
loop
repnz
inc
lahf
lea
cs
mov
xchg
fsts
call
sahf
mov
fadds
clc
fildl
pop
hlt
test
cmp
jmp
push
dec
shl
push
hlt
xorb
arpl
je
xor
faddl
sub
insl
sbb
fimull
cmp
addr16
cmp
fdivl
xchg
mov
push
push
xor
in
fwait
loopne
outsb
insb
jae
aam
adc
xchg
faddl
in
mulb
int3
xchg
add
pushf
cmp
stos
push
dec
adc
sub
mov
or
fnsave
mov
push
jno
mov
das
loopne
pusha
aas
hlt
inc
enter
int3
push
in
enter
int3
pop
repnz
popf
xchg
mov
cltd
imul
in
push
cmp
push
int
out
xchg
test
push
inc
lds
sbb
push
stos
sub
dec
xchg
fdivs
xchg
movsb
sub
or
pushf
and
and
notl
mov
stos
push
je
jbe
in
iret
retw
fldenv
lock
int3
push
shll
inc
and
mov
mov
lods
pop
popf
add
sbbb
adc
pop
in
enter
aas
push
adc
push
mov
loop
popa
sub
cmp
addr16
fldl
dec
xchg
shrb
cmp
ljmp
adc
gs
iret
ret
outsl
xor
pusha
mov
add
mov
inc
dec
mov
out
lea
mov
jae
dec
imul
mov
outsb
loopne
leave
lcall
jle
jp
ret
test
mov
sbb
mov
das
rorb
fldt
gs
pop
test
sub
inc
add
dec
mov
jge
dec
shlb
sub
lds
dec
sahf
dec
aam
or
inc
and
add
or
stc
xor
into
jbe
cmp
pushf
lcall
insb
dec
xorb
xor
mov
mov
mov
push
mov
lea
dec
cmc
test
call
mov
push
push
pop
int
cld
or
xlat
add
cs
push
sbb
into
leave
in
testl
rcrb
push
push
mov
lds
sub
sub
mov
loop
dec
mov
add
pop
xor
out
sub
cmp
mov
xchg
cmc
xor
mov
mov
fs
dec
popl
dec
pop
bound
mov
mov
out
cmp
adc
movsl
mov
gs
pop
mov
adc
push
sub
fcmovu
lea
mov
adc
cltd
loopne
adc
repnz
inc
rcrb
push
dec
push
sbb
add
xor
xor
icebp
pop
in
subl
lods
lock
mov
xchg
or
daa
hlt
dec
mov
ret
adc
movsl
aas
mov
inc
and
sub
xor
mov
cmp
les
int3
les
adc
mov
xor
cmp
sbb
inc
insl
out
jmp
or
inc
hlt
jo
adc
dec
jle
outsb
outsl
ja
push
cld
sbb
adc
inc
sbb
pop
in
mov
sub
ds
pop
aad
mov
jb
fucomp
inc
insb
nop
int
pop
mov
and
jmp
shl
sub
jecxz
movsb
daa
scas
cmpsl
ror
cmp
cmp
mov
in
sti
xchg
and
push
cmp
int3
push
cmc
es
dec
scas
pop
sbb
lret
hlt
call
dec
movq
cld
jmp
cmpsb
jecxz
jbe
adc
cmc
cli
lds
xchg
call
pop
or
jb
test
sbbb
xchg
push
mov
jle
call
shl
rcll
mov
insl
cltd
aaa
pop
push
in
in
adc
ja
enter
lds
pop
xchg
rcrl
ret
scas
in
push
mov
scas
hlt
mov
pop
hlt
push
jo
adc
and
adc
or
aaa
sub
push
jae
dec
push
popf
lods
sbb
fstps
jl
cmc
ret
inc
out
sbb
fistps
inc
mov
int3
popa
outsb
es
cmp
leave
dec
fwait
mov
adc
test
cmpsl
lds
fsubr
mov
cmc
push
mov
add
fdivs
jne
mov
pop
push
aaa
shrl
sbb
adcl
and
fistpl
in
addr16
lret
sub
ret
sub
in
out
xorb
imul
xorb
fildll
and
int
lods
je
pusha
pop
mov
dec
incl
jnp
pusha
divb
jp
pop
imul
loope
decb
dec
push
adc
loopw
mov
cwtl
stos
sub
cmpsl
inc
adc
xchg
imul
lods
ret
inc
xor
sub
jnp
push
cmp
mov
stos
loopne
mov
lea
push
out
dec
mov
sbb
loope
mov
dec
nopl
int
add
fdivs
test
popf
push
repz
daa
push
xor
lcall
adcl
push
pop
arpl
int3
and
cmp
jae
or
into
or
xor
adc
push
dec
ja
fisttpl
ret
dec
test
jl
mov
mov
inc
adc
xchg
sub
imul
sub
jb
mov
mov
hlt
mov
dec
aam
loope
ret
pop
cmp
cmp
adc
repnz
xor
xor
fimull
adc
ret
and
shl
fnstsw
aad
mov
sti
insl
mov
inc
or
cmp
imul
call
xlat
pusha
arpl
push
sar
push
pop
dec
cs
pushf
sub
addl
push
dec
push
xlat
nop
xchg
inc
lret
push
stc
aas
adc
xchg
push
outsb
cwtl
jbe
jae
in
jle
dec
and
add
dec
fisttpl
std
call
test
rcr
push
pushf
pusha
cmp
popa
cwtl
outsl
xchg
call
push
xor
or
xor
ret
push
sbb
lods
ret
fdivrs
fcoml
xchg
test
xchg
inc
test
add
xor
ret
fmull
hlt
outsl
jnp
dec
filds
pop
cli
int
mov
mov
insb
adcb
int3
loope
fstl
push
into
and
out
outsl
mov
add
ja
push
popa
es
outsb
sub
arpl
das
sub
stos
pop
bound
mov
dec
insb
xchg
scas
scas
jl
aas
arpl
cmp
pop
sbbb
pop
lret
pop
xor
adc
test
sub
ja
scas
mov
ja
xchg
pop
inc
and
cmpsl
ja
jmp
sbb
xchg
push
cmp
lea
or
lds
push
movb
adc
inc
cwtl
insl
mov
pop
and
jmp
icebp
cld
mov
mov
inc
mov
sub
xchg
shrl
test
sbb
aaa
jne
or
and
das
into
pusha
pop
outsb
push
adc
jecxz
les
in
xor
adc
sub
adc
aad
mov
aas
dec
push
jbe
or
and
add
mov
fstpt
jg
fxch
dec
cmp
sbbl
mov
repnz
mov
mov
adc
fwait
cmp
jb
stos
sbb
cld
or
sbb
mov
mov
stos
add
fwait
shl
jl
pop
lret
incl
xor
add
mov
jbe
aam
out
pop
test
pop
add
movsl
pop
and
push
lods
mov
xchg
clc
scas
push
xor
in
add
pop
or
mov
dec
sbbl
dec
cmpsl
lcall
and
fisttps
and
xchg
and
test
cmp
dec
fdivs
ret
mov
sub
icebp
pop
pop
xor
out
inc
rcrb
lea
jle
jmp
fwait
stos
fistpl
jbe
addr16
cltd
sbb
or
ja
xchg
jecxz
cmp
test
adc
das
sti
fisubrl
and
push
fs
push
mov
bound
pop
popa
mov
leave
rorl
sub
ror
push
sub
xlat
add
not
pop
lock
and
lcall
mov
test
push
pushf
mov
dec
mov
mov
les
mov
mull
adc
lcall
shrb
pop
mov
fistpll
cmp
lret
sbb
inc
repnz
mov
cwtl
cmp
leave
jae
fldenv
notl
mov
imul
inc
mov
punpcklbw
cltd
test
dec
mov
add
dec
and
cld
xchg
push
cld
sbb
adcl
sti
push
popa
icebp
pusha
or
sub
jmp
loop
add
ret
and
sbb
pop
push
sbb
pop
int
out
push
mov
pop
push
fdivl
mov
movsb
outsl
pop
fnsave
dec
or
mov
sbb
xchg
mov
pop
or
sbb
ja
xchg
in
fstpt
adc
or
mov
out
sbb
push
adc
test
les
xchg
mov
cli
popf
cmp
sbb
test
aaa
popa
imul
inc
or
cmc
lret
sub
fcmovnu
hlt
jae
sub
jo
mov
jp
popf
bnd
fiadds
inc
popa
mov
cmp
inc
cltd
insl
push
pop
pop
mov
test
test
pop
mov
cmp
in
mov
mov
cmpsl
and
lret
adc
mov
jne
or
loop
aas
mov
xor
mov
xchg
jns
inc
ucomiss
jno
sub
push
addb
and
ja
scas
and
push
sbb
mov
fadds
shlb
inc
into
insb
add
push
mov
in
inc
pop
xchg
call
mov
outsb
int
das
jmp
cmc
sub
mov
cmc
dec
sub
push
mov
outsl
mov
push
pop
inc
cmp
inc
xchg
and
aam
mov
int3
lea
jbe
fcoms
push
fmull
rcll
and
jo
xadd
aam
or
pop
mov
outsb
mov
adc
aad
add
lcall
scas
lret
add
cli
xor
roll
hlt
push
outsl
mov
leave
imul
int3
mov
cli
in
test
push
lea
addl
nop
mov
inc
aaa
dec
add
mov
sbb
mov
jp
movsb
sbb
out
pop
popf
sbb
inc
jns
lcall
sub
pop
cli
sbb
fidivl
fcompl
inc
out
nop
ds
xchg
push
inc
and
push
inc
inc
repnz
std
js
adc
mov
sarb
sbb
mov
xor
or
sub
push
in
push
int3
fdivrl
sub
jge
mov
dec
lods
push
fisubrl
adc
lea
movsb
jns
sbb
xchg
lahf
popa
push
cmc
mov
data16
cmpsl
repnz
leave
es
imul
cmp
mov
scas
loopne
jg
xor
jge
lods
xor
ret
mov
jnp
xor
dec
dec
lret
xchg
mov
enter
dec
lea
sub
nop
inc
xchg
gs
adc
aad
cmp
inc
fnstcw
mov
stos
popf
dec
in
iret
adc
stos
in
mov
test
push
push
leave
ret
cmp
aad
jne
in
scas
addr16
mov
sub
flds
mov
shlb
fs
jb
outsl
and
pop
xchg
jmp
jmp
stc
or
cmpsb
mov
cltd
mov
in
jns
add
rcrl
and
cmc
aas
enter
and
repnz
adc
lahf
cmp
sub
cmp
mov
fidivrl
lods
sbb
push
aam
and
test
or
dec
jge
mov
int3
cmc
dec
dec
aad
mov
xor
fildl
fdiv
sub
movsb
cmpsb
xor
and
imul
mov
test
jge
push
mov
std
insl
mov
jno
or
rcr
xlat
enter
mov
sbb
lods
push
loopne
in
ss
or
cltd
mov
mov
pop
sbb
mov
cmpsl
sbb
xor
and
int3
rcrl
ret
iret
dec
mull
pop
sbb
into
aam
je
outsl
xchg
arpl
adc
cmp
jp
hlt
popf
sbb
fs
inc
pop
mov
fildll
outsl
adc
and
int
mov
jo
scas
xchg
push
test
mov
pop
adc
hlt
and
jne
in
cmp
test
movsb
inc
ja
in
mov
arpl
fdivrs
mov
jae
and
add
jecxz
int
out
enter
loope
sbbl
cmp
ret
ficompl
imul
xor
and
sub
fwait
cmp
dec
cltd
arpl
es
in
inc
into
cltd
popa
les
pusha
lahf
mov
and
lds
shll
mov
or
mov
aam
das
jbe
fimuls
and
xchg
repz
add
popf
xor
pop
mov
into
rcl
aas
loopne
out
sti
lock
push
pushf
leave
pop
fiaddl
outsb
or
jp
movsb
inc
insb
int
frstor
inc
jo
xchg
aad
icebp
fldcw
testb
movsb
sti
addl
fiaddl
mov
lcall
popf
or
push
push
cwtl
inc
dec
cs
jl
repnz
shl
sbb
iret
and
pop
ret
xchg
mov
lret
mov
imul
in
sbb
sub
cwtl
rcll
adc
sti
call
adcb
loop
sub
xor
cmp
shrl
daa
sbb
cld
lret
addl
mov
fisubl
mov
mov
pop
pop
push
xchg
inc
jo
adc
aas
mov
ljmp
mov
pop
loop
pop
lcall
jle
clc
pop
insl
aad
jbe
in
imul
repz
mov
adc
jne
sub
fsubrl
adc
in
jle
mov
mov
leave
aaa
inc
int3
xor
jo
rorb
add
mov
mov
mov
js
and
mov
sub
pusha
or
dec
jns
fsubp
out
es
ljmp
aas
xchg
push
popa
out
push
aas
insb
repnz
mov
xchg
mov
fs
fisubl
jmp
xchg
addb
inc
nop
fwait
sub
pop
and
stc
inc
out
push
int3
jo
cmp
dec
cmc
dec
cwtl
lahf
cmc
sti
pop
jne
stos
or
paddb
dec
andl
popfw
dec
aam
push
mov
or
mov
mov
xor
ja
mov
sahf
and
fwait
dec
jecxz
adc
pop
test
sub
fstpt
mov
int
in
sub
mov
lds
push
mov
mov
push
jo
scas
jne
cmpsb
lret
cmpsl
or
test
in
push
dec
aas
ss
and
sub
movsb
mov
mov
es
lods
xchg
mov
dec
out
les
dec
fnstsw
loope
popf
and
fnsave
xchg
xchg
icebp
push
add
pop
xchg
ss
mov
jg
mov
js
cli
xchg
ds
pusha
inc
ret
inc
xchg
push
shl
int3
dec
rcll
and
cmp
dec
dec
add
jp
adc
jbe
cmp
repnz
xor
cltd
imul
lds
dec
sar
clc
lock
movsl
pop
ljmp
or
sub
cmp
idiv
shrb
xchg
in
cmp
push
cmc
mov
pusha
cld
fwait
mov
inc
jle
push
negb
ljmp
in
shll
add
add
dec
xor
cmpsb
or
dec
jb
add
cmp
in
inc
adc
inc
jmp
nop
inc
fstpt
pop
jae
add
cmpsb
cli
test
adcb
mov
stos
bnd
pop
inc
xchg
xchg
mov
mov
jbe
dec
push
pop
in
cmp
mov
repnz
jns
test
push
pop
xor
test
mov
das
cmpsl
sbbb
test
mov
fildl
add
jp
pushl
jae
in
imul
cltd
sub
jg
push
aam
inc
js
outsb
mov
push
int3
dec
mov
inc
dec
cmp
lret
add
mov
fdivrs
enter
je
sbb
sub
add
fnstsw
xchg
stc
lock
push
add
mov
pop
jo
test
pop
and
cwtl
test
push
push
push
sub
cmc
in
cmc
inc
ret
jns
lods
push
adc
out
pop
test
jbe
fs
lods
fsts
adc
aaa
jb
js
scas
mov
test
ffreep
sbb
js
adc
popf
test
adc
stc
icebp
inc
out
mov
loopne
loop
into
movsb
mov
push
adc
xchg
mul
arpl
sahf
or
xchg
inc
loope
jp
lock
call
into
jno
xchg
cli
nop
adc
adc
pop
jmp
fstps
ret
movsl
mov
xchg
or
xchg
fidivrs
mov
sahf
jle
cltd
pop
lcall
adc
popf
orb
fcom
test
pushf
les
dec
or
jp
xchg
ret
imul
adc
mulb
sbb
add
mov
jmp
out
out
and
ret
xchg
pop
negb
rcrb
or
and
enter
dec
sbb
inc
sbb
jl
jl
push
pop
popa
repnz
add
popl
imul
aaa
mov
imul
push
xchg
int3
cmc
inc
arpl
push
leave
popa
out
pusha
mov
shrl
cmc
inc
ss
jge
cwtl
pop
pop
jle
inc
int3
or
lret
lret
cltd
lea
aas
dec
push
dec
pusha
das
add
mov
and
jmp
mov
or
xchg
xor
xor
das
jl
inc
jb
inc
test
cmpsb
push
and
rolb
sbb
clc
jne
mov
sub
nop
daa
xchg
adcb
jae
sub
and
int3
mov
flds
shr
ret
out
outsl
jge
je
add
pop
icebp
js
repnz
jbe
addr16
cmp
xor
xorb
push
imul
xchg
repz
pop
popa
mov
pusha
je
adc
clc
addr16
ret
pop
pusha
negb
nop
mov
xchg
dec
mov
neg
mov
add
out
add
xor
nop
pcmpgtw
insl
loope
stc
mov
loope
dec
test
test
and
orb
and
stos
cs
out
push
jne
loope
dec
mov
aad
push
popf
jle
pmaxsw
out
cmp
push
mov
adc
cmp
jo
fsubl
push
pop
jne
into
pushf
add
push
add
hlt
mov
dec
ret
sarb
test
inc
and
loop
test
sub
push
inc
jne
xchg
insl
test
rorb
faddp
fcoml
mov
ja
je
fimuls
inc
mov
scas
adc
popa
jge
jge,pn
cmp
loope
fstl
mov
jmp
jne
pushf
aaa
push
add
mov
cmp
cmpsl
pusha
fsubs
inc
push
icebp
test
lcall
out
call
jae
adc
out
mov
xchg
mov
hlt
repz
sbb
inc
and
fsubrs
loope
push
pop
ret
push
pop
adc
sti
lahf
mov
cmp
xor
jg
je
inc
cmp
cmp
mov
pop
sub
sbb
jno
fcomps
scas
xchg
and
inc
pop
fisttps
add
hlt
das
push
ja
mov
adc
aaa
gs
test
push
cmp
lret
gs
fcmovnu
jne
outsb
cld
pusha
push
mov
dec
push
inc
mov
rcll
xchg
mov
leave
push
push
loopne
xor
push
cmpl
mov
orl
dec
mov
cmp
jae,pt
ja
icebp
ljmp
sbb
mov
sbb
loop
adcb
cmp
in
repz
mov
mov
push
push
leave
jge
das
pop
out
push
adc
jle
inc
cmpsl
les
jle
mov
popf
cmpsb
jnp
dec
mov
repnz
clc
sub
mov
inc
test
loopne
out
loope
mov
nop
mov
or
into
lret
scas
cmc
aas
jmp
hlt
jp
notb
mov
add
cs
fsubrs
les
jo
cmc
or
paddw
push
xor
test
jmp
xchg
pushf
sbb
stos
cmp
inc
dec
add
mov
stos
decb
aas
ficompl
sbb
cltd
sbb
push
nop
arpl
push
inc
mov
sbb
leave
or
test
fnsave
int
pop
jmp
jnp
ret
aas
loopne
adc
xor
cmp
jno
push
dec
add
fwait
pushf
sbb
adc
andl
mov
xchg
clc
movsb
ret
jg
push
clc
add
cmpsl
jbe
adc
out
insb
sar
loope
jge
aam
add
jno
imul
ret
push
cmpsl
ficoms
push
pop
lock
aas
fwait
jbe
sahf
adc
dec
cmpsl
push
mov
aaa
lret
xor
jg
xchg
add
dec
scas
or
bound
lcall
jae
lods
mov
add
pop
leave
add
push
xchg
mov
xchg
movsb
mov
ljmp
sub
cli
mov
xchg
push
in
scas
insl
out
daa
jl
bndstx
mov
add
push
mov
outsb
pop
jge
adc
jl
jg
jmp
sti
jns
xchg
or
mov
fucomi
jae
faddl
pop
mov
imul
adc
xlat
mov
mov
pop
dec
mov
repnz
and
cmp
pop
pop
sti
cmpsb
pusha
lret
in
sbb
fdivs
stc
pop
enter
add
fmull
push
jle
add
jl
mov
jle
jns
xchg
mul
stos
enter
sbb
mov
movsb
sbb
pop
jge
xchg
jo
inc
pop
and
mov
in
cli
adc
test
test
mov
sbb
sub
movsl
stc
push
loopne
push
add
out
sub
aam
inc
andl
xor
dec
jb
test
pop
xchg
jnp
sbb
movsb
sub
mov
cmc
mov
mov
sub
clc
mov
inc
pop
lret
mov
cmc
jl
les
jg
iret
or
daa
test
add
jle
cmp
and
cmp
out
int
ficomps
jg
push
or
pop
add
int
nop
int
outsb
fsub
push
mov
dec
int
pusha
popa
sbb
dec
xchg
icebp
jp
mov
lahf
push
mov
xlat
into
mov
movsl
xchg
mov
fldcw
rcll
cwtl
mov
lret
sbb
js
fiadds
xor
stos
cmp
push
xlat
fidivrs
int3
inc
jnp
orb
repz
je
fwait
dec
enter
mov
jle
je
in
je
mov
cmp
mov
nop
jne
pop
pop
inc
pop
and
fisubl
pop
test
clc
int
and
test
xchg
and
sti
fdivs
xlat
sar
outsl
mov
pop
mov
inc
xchg
pop
push
aam
call
xchg
sahf
stos
push
sub
inc
jnp
mov
clc
and
mov
xchg
mov
ds
mov
lret
pop
jge
and
fsubp
out
test
add
push
inc
js
add
and
stc
jp
mov
add
dec
sbb
mov
lea
jb
popa
xchg
sub
mov
jne
imul
adc
out
pop
adc
iret
addr16
in
and
mov
lods
lods
mov
mul
insb
test
clc
incl
in
mov
dec
and
cwtl
negl
outsl
mov
into
aad
dec
or
or
aaa
fcmovne
loop
push
orb
lods
icebp
push
and
cmp
add
cmpsb
adc
dec
andl
data16
dec
push
push
xchg
ror
jns
cmpsl
xlat
inc
jnp
flds
dec
cmp
or
mov
jb
imul
xchg
dec
push
cmpsb
cld
pop
sbb
inc
cli
or
mov
aaa
jge
mov
add
and
lock
xor
and
cmpsl
pop
gs
bound
push
out
and
inc
sarl
jbe
insb
push
cmpsb
cmp
xchg
push
xchg
push
add
test
pop
gs
dec
mov
push
loope
fiadds
mov
mov
repz
xchg
and
mov
mov
mov
xor
xchg
or
xchg
test
fcoms
adc
or
lock
mov
les
cmp
aad
inc
in
cmp
lds
dec
dec
lahf
xchg
test
gs
inc
nop
mov
xor
test
testb
rol
adc
push
sahf
pushf
mov
pop
jp
jge
test
test
inc
ja
and
or
add
jae
outsb
outsb
dec
mov
mov
sbb
pop
xchg
sub
test
mov
dec
ficoms
cmp
cmovb
mov
mov
je
sub
jle
xor
test
into
or
or
loop
dec
jg
icebp
cli
pop
inc
insb
popa
loopne
pop
cmp
jne
jne
xchg
inc
jle
add
inc
inc
repnz
pop
push
xchg
and
fwait
mov
shrl
xlat
clc
mov
cmpsb
and
pop
das
rolb
int3
cmpsb
imul
dec
cmc
js
dec
ret
sbb
iret
fisubl
mov
mov
pop
xor
adc
push
sbb
sbb
mov
adc
ret
push
jp
adc
ss
xor
outsl
cs
leave
not
and
jns
jmp
xor
repnz
rorl
push
sbb
mov
xchg
fidivrs
xor
xchg
jo
addr16
fcmovu
les
mov
and
dec
test
or
int
sbb
or
cmp
test
mov
inc
aas
and
iret
jno
dec
int
shl
cmp
push
fcmovnu
test
lret
jae
fbstp
push
xchg
mov
mov
cwtl
in
pop
sbb
cmp
push
jecxz
cmp
outsl
mov
in
mov
push
sarb
mov
cmp
cmpl
lds
pushf
jl
sbb
pop
and
mov
sbb
cld
inc
sbb
lahf
out
lods
mov
testb
fwait
or
movsl
shrb
out
add
adc
out
adc
je
ret
sbb
mov
sbb
and
and
imul
fcmovnb
int3
mov
lds
js
pop
in
hlt
sbb
call
jg
cmc
rorl
cmpsb
js
sub
sub
lea
push
cmp
xor
inc
push
pop
xor
pop
adc
pop
dec
xor
cmp
mov
stos
cld
fwait
lods
aad
jge
push
cltd
insb
jae
cmp
aas
in
cli
sbb
lahf
jg
jo
icebp
in
jge
lds
fsub
loop
lahf
loop
push
push
inc
sbb
jne
icebp
xchg
clc
push
jp
mov
mov
and
and
cli
cmp
lret
or
cmp
mov
arpl
lds
cmp
mov
aam
or
jbe
adc
and
dec
out
push
xchg
inc
xor
shrb
rep
clc
data16
push
pop
xor
out
xchg
xor
cltd
in
aaa
push
mov
push
inc
sar
push
ret
adc
cmpsl
xchg
push
out
add
leave
clc
cmp
sbb
push
cmp
lahf
dec
ss
insl
test
xchg
mov
sbbl
sbbl
lcall
add
pop
movsb
pop
mov
sbb
cltd
gs
out
imul
push
mov
add
mov
and
or
cmp
lret
add
inc
andl
mov
mov
loope
cmpsl
mov
js
ja
pop
mov
inc
dec
shl
loopne
cmp
dec
lret
xchg
lds
inc
enter
in
cmp
xchg
addr16
cs
sbb
push
dec
push
inc
cwtl
push
push
ret
loop
lahf
fidivrl
push
aas
sbb
xchg
outsb
fcom
and
or
push
add
dec
cltd
inc
clc
cmpb
fidivl
cld
je
pop
mov
shrb
push
enter
sbb
sub
lea
or
test
testb
adc
mov
daa
cmp
inc
cmpsb
mov
popa
xchg
dec
jmp
jecxz
lock
sbb
out
je
dec
push
sub
sbb
mov
sahf
movsl
loope
cli
push
push
fiadds
addr16
cmp
rcrl
notb
clc
push
fidivrs
mov
pop
into
sbb
aas
jae
aad
push
dec
aas
adc
mov
dec
icebp
jle
jne
movsb
enter
rorl
add
sbb
repnz
lret
inc
pop
push
cmp
dec
cltd
cmpsb
int3
mov
inc
lea
xor
mov
xchg
lret
out
inc
ds
cmp
fisttps
data16
mov
mov
dec
cli
pushf
add
dec
in
gs
dec
jl
jns
repnz
cmc
aad
adc
mov
divb
cmpl
push
mov
xor
mov
cmp
cmp
and
xchg
push
roll
mov
cmp
xor
push
outsb
lds
inc
test
jl
insb
repz
cli
cmpb
loop
pop
sub
sahf
movsl
xor
call
mov
cmpsl
cmp
mov
cs
mov
fsubrl
push
pop
xchg
mov
push
nop
dec
mov
dec
outsl
jb
cmp
ret
add
ror
clc
insb
mov
popf
popa
push
lods
jae
inc
mov
orb
jne
push
push
or
fldcw
out
and
into
dec
leave
mov
cmp
andb
imulb
in
outsb
inc
cs
dec
push
rol
out
mov
mov
mov
xchg
ret
jne
lea
mov
pushf
icebp
and
addr16
jnp
je
xchg
mov
rcrl
mov
mov
pop
mov
aaa
xchg
aaa
inc
mov
adcl
rol
or
test
or
pushf
pop
test
inc
jb
xchg
or
lahf
stos
xchg
movsb
xchg
xchg
mov
adc
and
or
dec
fwait
jo
outsl
dec
addr16
icebp
stc
lods
cwtl
jb
push
sbb
pop
sub
je
xor
sarb
shrb
inc
push
ss
or
or
testb
cmp
xchg
sbbb
loop
neg
dec
mov
mov
mov
insb
hlt
aam
pop
sbb
cmpl
lcall
fists
sbb
ds
pop
pop
testb
mov
inc
inc
xchg
lods
pop
arpl
imul
je
mov
dec
adc
cli
aad
jl
sub
inc
fistpll
loopne
es
pop
insl
mov
loopne
scas
pop
cmp
xchg
jns
cld
sar
mov
adc
mov
xor
inc
push
inc
jp
sti
pop
fcomip
outsl
xchg
enterw
mov
jbe
adc
rcrb
sub
mov
mov
dec
test
xchg
xchg
mov
sub
push
ret
push
xor
scas
jp
daa
stos
push
das
lret
inc
mov
push
push
loop
inc
les
scas
out
mul
xchg
mov
in
sbb
nop
add
sti
rcr
dec
hlt
xchg
xor
mov
inc
std
scas
mov
push
adc
icebp
sbb
xor
stos
filds
adc
fists
push
leave
xor
incb
out
pop
sahf
shrl
pop
mov
pop
cs
sbb
inc
fnstcw
add
std
das
pop
je
loop
and
sbb
fucomip
pop
pusha
test
cs
or
pop
test
rep
fidivs
js
imul
stos
inc
loopne
cmp
fnstcw
push
sbbb
push
dec
stc
push
sbb
les
adc
mov
sub
xchg
push
inc
shll
aam
test
shll
mov
fsubrs
sbb
add
push
gs
cmp
xchg
popa
pop
jnp,pt
and
mov
push
movsb
xchg
fistl
mov
push
sub
lock
sbb
dec
iret
xchg
or
pop
pop
mov
add
jecxz
icebp
les
lret
inc
std
push
in
cmp
movsb
outsb
or
jmp
sbb
loop
xchg
push
shll
mov
xchg
sti
and
ret
pop
rclb
cs
and
rorl
xor
fbstp
shr
mov
mov
cli
std
aad
fistpll
bound
push
adc
inc
mov
add
scas
xor
aam
pop
jno
loope
shll
mov
push
xor
inc
xor
pusha
jb
in
jne
xlat
inc
call
mov
int3
mov
out
lret
aas
mov
out
dec
loop
jne
int
jg
jb
pop
cmp
cmp
jecxz
cmp
sti
mov
sub
cltd
stos
xchg
mov
aam
insl
daa
add
jg
addr16
sbb
jp
cmp
or
aaa
or
popa
cmp
cmp
lea
icebp
sarl
cmpsb
mov
sub
pusha
loopne
xor
fwait
mov
mov
enter
jg
push
add
out
lods
jecxz
mov
call
cmc
cmpl
mov
mov
dec
les
inc
pop
inc
popa
and
xor
jns
xlat
jb
dec
xchg
mov
in
mov
pop
mov
push
sub
aam
test
jge
pop
fstpt
sbb
sub
push
mov
out
les
clc
stos
stos
pop
rcrb
mov
inc
dec
pushf
rclb
cmp
imul
xor
sub
fwait
mov
pop
pop
aaa
or
push
mov
xchg
sarb
popa
add
adc
adc
inc
mov
out
daa
sub
movl
pop
mov
pushf
icebp
lcall
int3
jecxz
pop
adc
loopne
jle
mov
pop
sub
sub
cmp
pop
jo
sti
push
out
sarb
ja
into
xchg
inc
inc
lds
xchg
mov
popf
sbbl
jg
subb
adc
fldl
push
cwtl
adcl
arpl
mov
jb
out
sbb
adc
mov
popa
or
imul
jmp
cmp
hlt
cltd
lods
and
push
push
xor
sarl
push
or
rclb
in
rcll
or
push
daa
cwtl
movsb
mov
add
adc
mov
xchg
sub
push
jns
xchg
es
xor
divb
shll
lret
scas
pop
sbb
pop
mov
lahf
bound
sub
cmp
shufps
fsubp
scas
fldcw
push
jns
sub
sbbb
pop
mov
stos
xor
inc
cwtl
sub
and
sysexit
push
and
sub
pushf
and
push
test
jle
pop
dec
jae
repnz
rol
das
cmp
js
ljmp
or
lret
push
pushf
lahf
pop
clc
push
test
sub
jge
lock
dec
out
push
dec
inc
and
mov
add
ss
and
popf
ret
mov
fldcw
pop
mov
dec
cmp
inc
cmpsl
in
mov
push
pushf
xchg
nop
test
rol
xor
sti
push
shrl
pushf
out
adc
mov
push
aaa
mov
mov
fldl
sub
fcompl
jp
mov
lcall
std
stos
or
mov
adc
sub
insl
dec
sbbl
imul
sbb
pop
xor
repz
cwtl
push
jl
sbb
sbb
mov
test
daa
mov
add
or
outsb
push
ret
test
fdivrp
lret
jge
outsb
xchg
aam
js
and
mov
inc
lret
sbb
gs
add
cli
mov
sbb
adc
jp
jl
mov
lahf
add
lahf
or
les
lds
mov
xchg
inc
call
jg
je
inc
fnsave
rorl
dec
push
fmul
mov
fcomps
push
adc
cmp
mov
or
fcoms
xor
xchg
mov
cmpsl
inc
inc
cmpl
loop
and
push
mov
or
ret
push
jge
test
xchg
sarb
add
scas
enter
push
sarb
cld
push
les
add
fs
fisubrl
icebp
je
xlat
fucomp
out
shl
fwait
jge
fstpl
adc
inc
popa
js
or
pushf
mov
fisubs
fidivrs
stos
xchg
or
repz
pusha
push
stc
mov
jg
mov
dec
xchg
mov
xchg
gs
das
mov
dec
bound
xchg
loop
leave
mov
push
xchg
addr16
xchg
pop
lret
push
mov
adc
dec
nop
jne,pt
lcall
sub
ret
scas
inc
cmp
mov
dec
das
mov
adc
into
hlt
inc
xchg
out
add
and
jnp
lds
and
lods
mov
faddl
insl
mov
dec
sahf
pop
pop
xor
loope
mov
mov
cmpsl
xor
mov
lods
rcll
ss
pop
and
mov
or
pop
xor
lcall
add
dec
or
xor
lea
mov
mov
psrlw
lcall
lea
imul
aam
pop
cmp
fwait
xor
nop
stc
int
push
inc
pop
sub
mov
addr16
sti
mov
les
mov
in
scas
jle
jae
mov
push
push
test
loope
stc
aaa
jne
ja
lret
add
in
mov
stos
cmp
outsb
mov
mov
outsb
subl
out
les
out
sbb
and
idivl
test
xor
jle
pop
adc
xor
std
cmp
jmp
sub
fisttps
retw
je
mov
and
mov
shlb
sub
sbb
dec
clc
add
in
dec
icebp
ljmp
fs
push
jg
pop
enter
inc
add
sbb
add
add
push
bound
dec
in
inc
aam
sti
mov
sbb
pop
bound
dec
mov
xor
mov
sti
je
pop
enter
ds
and
add
inc
test
test
cmp
ljmp
test
or
popf
pop
sub
mov
dec
outsl
sti
adc
add
test
add
filds
lods
mov
test
mov
fisubs
jb
jns
dec
dec
das
mov
scas
outsb
push
cmp
ds
and
ds
lods
jge
js
int
dec
repnz
mov
test
push
pop
lods
enter
nop
add
mov
loopne
imul
outsb
mov
adc
int3
arpl
pop
inc
lea
fmul
imul
or
inc
cmp
push
mov
pop
mov
cltd
jno
add
xor
mov
test
enter
out
push
and
loopne
add
cmp
in
arpl
loop
call
mov
jno
xchg
rorl
mov
dec
arpl
subb
jp
subl
call
dec
cmpsb
mov
fs
je
dec
push
pop
cmpsb
pushf
popa
push
inc
aaa
and
mov
mov
lea
lahf
mov
xor
fwait
scas
dec
outsb
xchg
clc
and
fcmovu
mov
repz
pop
push
popa
rclb
sub
aaa
call
inc
push
idivl
or
clc
stc
inc
mov
in
fstpl
and
mov
imul
ss
adcl
leave
sti
cwtl
repz
fldcw
sbb
div
pushf
inc
sbbb
fdivrl
in
ljmp
out
ds
push
or
es
daa
imul
mov
jecxz
out
stos
fs
js
inc
cltd
into
sub
and
add
gs
out
js
jge
cmp
int
jg
add
xorb
lret
lea
inc
ds
or
test
cmp
jl
lret
mov
pushf
inc
repz
mov
pop
jbe
test
adc
jmp
push
sahf
fs
pop
jp
push
xor
mov
sets
in
data16
jb
push
daa
sti
std
jo
rcll
scas
mov
xor
xchg
mov
dec
cmpsb
push
mov
pop
in
out
in
xor
or
icebp
stos
scas
xchg
mov
xchg
jae
dec
push
dec
insl
rol
outsb
loopne
lds
sub
lods
jns
mov
rcll
mov
mov
cmp
aam
fs
jne
adc
popa
push
addb
addb
sahf
jle
test
jg
cwtl
stos
mov
push
jmp
popf
mov
shrl
xor
shll
frstor
cmp
out
loope
push
fisubs
and
pop
ja
jmp
or
mov
xchg
shll
cli
rorb
xor
enter
jno
mov
sbb
or
add
xchg
mov
int
mov
lea
cmp
imul
ficompl
mov
push
jno
xchg
sbb
mov
iret
fstl
cmpsb
inc
hlt
outsl
out
andb
jecxz
and
jns
negb
rolb
ss
addr16
xchg
sub
jmp
stc
lret
mov
or
adc
inc
cld
jl
test
rol
enter
gs
sbb
push
loop
cld
sbb
xchg
shlb
mov
jmp
jecxz
jb
xchg
sub
vdivpd
dec
or
mov
fcoms
mov
popl
pop
xor
fstpl
stc
inc
push
adc
pop
jle
mulb
dec
inc
enter
out
and
repz
fs
sub
int3
mov
push
push
sub
loope
lods
insl
cmpsl
lods
negl
pop
cmpsl
mov
scas
add
jmp
mov
sub
add
dec
sbb
sub
mov
pusha
mov
xor
aam
inc
enter
repz
jp
rcl
and
ja
xor
adc
push
call
mov
mov
in
lods
test
sbb
popf
pop
lds
inc
ljmp
xchg
jecxz
pop
sub
out
es
imul
roll
jns
jp
dec
cli
lahf
push
stos
je
or
xchg
andl
pop
fwait
adc
jne
cmpsl
jmp
insb
or
pusha
ret
notb
pop
div
lahf
push
xor
and
call
lahf
lret
lcall
in
sbb
in
daa
lods
mov
fwait
pop
movsb
mov
push
xchg
loop
movsb
lods
clc
call
into
xlat
inc
pop
adc
or
inc
ds
cmp
daa
mov
mov
and
inc
lock
fdiv
leave
mov
dec
push
xchg
in
xchg
test
mov
jae
movsb
insb
mov
mov
mov
inc
cmc
movaps
add
fwait
push
and
dec
out
mov
cmp
add
fsub
pop
ljmp
pusha
pop
icebp
inc
enter
jle
fistpl
int3
sbb
adc
pop
lods
add
xchg
mov
jecxz
jp
loope
aam
loopne
fimull
pop
js
lods
xchg
mov
jmp
imul
pop
dec
cmp
incb
add
es
call
lock
divb
or
scas
jae
inc
xor
out
cli
jae
add
loopne
insb
add
mov
addr16
push
iret
ja
dec
fs
fs
in
fildl
sbb
add
xchg
or
xor
cmp
sbb
lahf
int3
mov
ret
jecxz
pop
repz
sti
adc
xchg
or
js
jecxz
pushf
push
test
bound
test
sahf
shlb
aas
scas
test
jns
mov
mov
mov
stc
outsl
insb
push
cli
sub
lods
gs
or
xchg
std
adc
cmpsl
dec
or
mov
jmp
mov
stos
inc
dec
jo
sbb
mov
sub
sub
nop
fsubrl
cmpsl
sub
dec
arpl
add
mov
xchg
mov
xor
push
pop
mov
addr16
decb
add
push
into
insl
mov
sub
mov
cmp
int
jb
sahf
rorl
es
xlat
push
pop
mov
out
and
lret
dec
pop
lods
and
mov
js
add
and
lret
repnz
sbb
pop
push
adc
and
mov
arpl
loope
ret
mov
fnsave
aas
je
xchg
cwtl
aaa
rcll
sub
cld
or
cmp
push
and
daa
inc
dec
repnz
xchg
pop
pop
mov
test
jns
cmp
xor
mov
xlat
xchg
cmp
add
push
sbb
inc
dec
hlt
sub
fnclex
int3
pop
jge
dec
mov
mov
dec
sub
js
loop
xor
test
loop
les
jge
inc
aad
movsl
sbb
xor
pop
pop
xlat
pop
add
xchg
shlb
sub
dec
imul
es
notl
fprem
je
add
jbe
adc
fcompl
pop
das
mov
clc
jge
int
xor
sbb
xor
sbb
add
xchg
mov
and
sbb
aam
mov
gs
mov
and
mov
mov
loopne
filds
fmull
adc
orl
adcb
cmpsb
repz
mov
push
and
cwtl
pop
sbb
jo
das
dec
sub
testb
mov
mov
sbb
pop
xchg
and
cmp
fldl
fwait
mov
jg
inc
cltd
adc
lods
inc
das
aam
mov
ss
jae
cmp
push
mov
dec
jbe
sub
push
dec
aad
subb
into
cmpsb
fdivl
ret
or
push
xor
fwait
add
aas
jl
daa
add
inc
pop
mov
sahf
mov
jg
shlb
lods
int
pop
sub
cltd
das
scas
xchg
jno
mov
fisubrl
xchg
mov
pop
or
std
ficoms
add
test
aad
mov
sbb
idivb
hlt
stc
xor
adc
ss
or
daa
ret
push
test
pop
aam
addl
out
or
in
ds
cmp
aam
and
cmp
je
mulb
jne
xchg
nop
add
or
add
cmp
lods
lds
stos
call
xchg
mov
ficomps
scas
jne
push
cld
fucomip
addb
insb
pop
jnp
mov
mov
data16
jns
out
xchg
mov
lods
cmpl
insb
js
movsb
dec
lcall
mov
dec
ret
xorb
mov
cmp
les
popf
enter
push
sahf
out
adc
jbe
in
xchg
cmp
out
inc
mov
push
push
inc
je
movsb
dec
or
stos
jnp
outsl
mov
fbld
int3
fistpll
cld
inc
mov
out
pop
mov
mov
dec
cmpsb
pop
push
mov
adc
aaa
cmpsl
pop
sbb
fidivrs
mov
movsb
in
cmpsb
je
dec
push
daa
pop
movsl
mov
xor
nop
sbb
dec
fcomip
push
or
outsl
dec
sbb
stos
out
inc
mov
rcrl
pop
add
cld
je
sarl
lret
es
mov
ret
add
pusha
push
push
jl
push
scas
cmp
push
movsl
add
movsb
jae
mov
stos
adc
insl
add
pop
jo
loope
outsb
inc
inc
inc
insl
xchg
xorb
push
out
int3
in
lods
test
inc
out
out
mov
sub
push
pusha
xor
xorl
stos
xor
lods
es
pop
jmp
icebp
inc
loope
mov
pop
push
je
jl
cld
out
sub
and
add
aaa
xlat
hlt
ja
pop
lret
popf
shrl
push
nop
mov
iret
push
add
je
dec
out
xchg
ss
pop
adc
sub
mov
inc
les
inc
xchg
pusha
mov
repz
jno
and
or
xchg
ljmp
xchg
out
shrl
montmul
cmpsb
pop
mulb
xor
mov
adc
push
dec
lcall
xor
cmp
lss
mov
mov
cmp
loopne
cmp
mov
add
sahf
cwtl
cwtl
adc
movsb
lods
add
rclb
xchg
sahf
add
xor
adc
clc
cmp
or
jbe
es
insb
imul
or
dec
adc
out
shll
shl
jg
sbb
aaa
xchg
and
std
push
shlb
push
int
test
std
push
or
or
std
aaa
shl
add
xchg
int3
or
mov
out
jp
out
xchg
aad
aas
clc
push
pop
in
sbb
call
mov
cmp
mov
into
mov
fwait
out
pushf
dec
adc
jle
or
outsl
enter
mov
push
xorb
pop
push
or
adc
push
lcall
icebp
out
pop
lods
fbstp
out
in
je
lret
inc
and
mov
xor
iret
add
lahf
sub
dec
pop
nop
add
jecxz
inc
and
xor
pop
repz
orb
or
ljmp
clc
inc
mov
sub
adc
sbb
cli
xor
inc
or
jb
and
sub
int3
jle
pop
and
icebp
jns
rcr
loopne
scas
jno
mov
add
fcmovb
loopne
xchg
add
arpl
ss
mov
imul
sub
xor
dec
push
icebp
and
inc
lret
ret
mov
das
lods
push
mov
jno
addr16
lea
or
loop
mov
or
stos
imul
and
pop
cvtps2pi
sbb
out
aas
jbe
add
jg
sbb
out
xchg
ffreep
mov
stc
dec
jp
or
jl
js
roll
lods
pop
sbb
aad
sub
add
mov
sbb
add
mov
adc
mov
jo
out
lcall
jp
test
adc
mov
inc
fdivrl
fdivl
jg
and
aam
xor
adc
testb
aam
scas
mov
push
stc
pop
ja
les
dec
mov
inc
xchg
pop
inc
xor
lahf
xchg
jnp
imull
mov
jmp
xor
jg
popf
jnp
xchg
inc
lds
adc
nop
push
repz
scas
lret
repnz
call
and
jbe
adc
and
adc
cmp
test
sbb
ret
mov
mov
mov
xor
popa
push
xorl
xchg
jg
bnd
cmpsl
out
xchg
cmpsl
xor
push
movsb
fwait
mov
and
mov
mov
dec
into
icebp
xchg
or
lds
jl
int3
in
sbb
and
push
xor
rcll
pop
es
int
inc
scas
or
cld
sbb
mov
push
pop
xor
adc
mov
fprem1
repz
decb
xchg
xchg
in
mov
iret
popa
sub
imul
fiaddl
mov
mov
jbe
dec
mov
cmp
inc
or
dec
mov
xor
testl
and
fldenv
sbb
cmp
jb
fstps
and
dec
pop
and
pop
lcall
mov
or
inc
clc
lods
test
push
movsl
jl
hlt
jle
add
adc
mov
sbb
cs
test
sbb
xor
push
pop
add
xchg
inc
mov
xchg
sbbl
in
jns
lock
push
lret
fwait
lret
bndstx
adc
jmp
lcall
stc
mov
scas
jp
lret
pusha
pop
out
jmp
ret
cmp
cmp
adc
int
mov
popa
xchg
in
in
jnp
inc
and
popa
sub
or
aas
pop
push
repz
scas
push
adc
mov
fucomip
mov
inc
jmp
add
mov
jge
xchg
cmc
adc
nop
in
dec
push
ucomiss
mov
pop
lds
xchg
mov
aaa
sar
cmp
lods
add
test
inc
sbb
pop
mov
aas
or
stc
xor
mov
scas
pop
xchg
mov
loopne
xchg
fsub
clc
xchg
add
inc
push
xchg
or
je
xor
subb
mov
fcmovbe
push
insl
inc
std
lcall
mov
std
out
adc
jmp
in
mov
jo
mov
loopne
cmp
in
xchg
sbb
gs
push
mov
pop
add
jb
repz
daa
ss
xchg
rcr
sub
mov
cmc
lahf
fcompl
add
xchg
sbb
xor
mov
adc
enter
cmpsb
mov
mov
hlt
ja
stos
mov
xorb
adc
out
jnp
mov
dec
mov
fnstenv
in
jmp
mov
jle
push
jmp
repnz
add
js
or
dec
aad
jnp
fisttps
stos
pop
loope
sub
or
xor
enter
xchg
or
mov
aam
sbb
rcr
xchg
push
push
dec
inc
cltd
sbb
push
scas
mov
push
andb
popf
dec
dec
ficompl
jb
insl
inc
xchg
add
js
xchg
jmp
scas
les
imul
jno
dec
jle
jp
cmp
arpl
mov
imul
pop
insl
es
sahf
xor
ds
fimull
stc
fnstsw
lods
popf
pusha
mov
mov
add
frstor
loop,pn
cmpb
adc
mov
jb
loopne
or
push
pop
inc
cltd
and
cmc
mov
adc
popf
das
jecxz
xor
popf
arpl
inc
mov
aad
rol
imul
xor
leave
jp
add
add
iret
popfw
ret
sbb
cmp
cmp
repnz
sbb
add
sbb
arpl
mov
cld
inc
xor
xlat
jb
data16
test
aas
pop
xor
cmp
cmp
stc
mov
pop
fs
sub
mov
movsb
xchg
or
xor
leave
mov
repnz
jns
imul
cld
mov
add
js
xchg
loopne
cmp
cmp
ja
testl
insl
jle
cmp
out
shl
push
adc
lahf
add
ret
stos
int3
outsl
sub
sub
jae
mov
enter
add
add
jo
orl
ds
dec
cs
int
cmpsl
or
cmp
out
cs
loopne
and
or
pop
pop
xchg
push
gs
inc
and
jmp
mov
shl
inc
jbe
push
xchg
dec
sub
ss
adc
mov
push
xchg
lcall
jl
sbb
mov
inc
rol
inc
out
pop
out
pop
jne
push
xchg
leave
and
xchg
push
icebp
dec
lds
mov
mov
pop
jne
rcrl
mov
jns
xor
jbe,pn
sbbl
mov
popf
sahf
bound
mov
jge
xchg
jns
pop
shl
in
mov
mov
jb
push
xchg
inc
adc
mov
add
inc
mov
pop
dec
cmp
shl
loope
push
mov
enter
jns
jne
push
cmp
and
jp
mov
getsec
movsb
rcrl
push
mov
lds
sbb
lret
loop
daa
xor
loopne
lds
mov
dec
les
dec
xchg
pop
or
adc
mov
or
jae
dec
mov
loop
mov
add
std
loope
mov
insb
or
push
mov
cmp
cwtl
pop
sub
cwtd
sub
lea
mov
movsb
sub
aas
cmp
xor
adc
jecxz
sub
xchg
insl
jmp
dec
lods
dec
mov
sbb
rcrl
adc
or
jo
mov
dec
adc
mov
je
int3
out
loope
inc
or
push
cmp
insl
cmpl
aaa
ljmp
rcrl
orl
jne
cmpl
dec
push
jno
bound
pop
loope
xchg
dec
push
imul
mov
sti
pop
xor
out
push
pop
rcrl
xchg
data16
sbb
lds
sti
lods
pop
repnz
push
pop
aam
jmp
xchg
decl
inc
inc
and
outsl
and
mov
push
dec
xchg
and
popf
ljmp
outsb
std
and
push
lods
jne
fistpl
xchg
or
lcall
jb
fwait
std
and
pop
repz
loop
dec
lret
std
mov
mov
jnp
mov
test
es
out
scas
scas
xchg
sbb
out
ja
ljmp
scas
mov
out
push
push
stos
call
push
add
shlb
out
ljmp
je
lock
out
inc
stos
inc
xchg
fsubr
filds
mov
add
movsb
jecxz
cmpb
out
and
jp
mov
cli
pop
mov
sbb
fcmovbe
push
repnz
mov
jbe
mov
test
xchg
xlat
mov
sbb
and
cmp
inc
repnz
in
adc
div
and
xor
dec
jnp
arpl
data16
jbe
mov
and
aad
pop
jbe
sub
push
inc
push
pop
hlt
or
and
insl
push
inc
jns
adc
sub
or
pop
mov
pop
adc
es
mov
xchg
rorl
arpl
dec
popf
loopne
out
stc
cs
clc
stos
mov
pop
xor
pushf
jle
test
cmp
dec
cmp
mov
dec
mov
dec
int3
adc
pop
fcomp
sbb
loope
js
add
outsb
test
mov
shl
enter
pushf
push
xchg
xchg
xor
pop
dec
jne
sbb
or
dec
cli
mov
xor
daa
jl
test
sub
jle
inc
movsb
sub
sub
fldl
jp
pusha
jns
ret
cmpsl
push
cmc
loop
add
inc
fdecstp
mov
hlt
andb
fistpll
jge
inc
cli
sub
jno
push
aad
daa
push
test
jg
pop
pop
inc
add
jmp
inc
dec
push
sub
mov
adc
jl
aad
sarl
pop
mov
push
rcll
ds
jbe
push
test
mov
imull
leave
enter
inc
add
pusha
and
into
dec
test
cmc
and
cwtl
dec
daa
clc
push
popa
add
sbb
mov
inc
dec
push
aas
sub
mov
std
rcll
xor
mov
out
pusha
dec
and
inc
cmpsl
lret
jns
cmp
add
jae
xchg
push
mov
xor
roll
and
addb
insl
add
setns
and
dec
inc
xchg
nop
push
sub
sub
mov
pop
pop
loopne
cmp
jg
add
fsubrs
mov
mov
push
xchg
in
sbb
mov
or
inc
mov
or
push
pop
pop
loope
add
mov
xor
mov
lea
out
shr
repz
pop
sub
jno
mov
loopne
bound
pop
push
pop
and
sti
stc
xchg
mov
sahf
sar
or
jb
insl
pop
cmc
insb
dec
idivb
pop
lea
pop
int
gs
testl
je
sub
ds
lret
push
call
jge
fdivr
xchg
push
mov
shll
mov
stos
das
aaa
sub
xchg
push
enter
fnsave
test
mov
cmp
stos
mov
mov
sti
cmp
nop
popf
out
sbbl
xchg
push
sbb
jne
loop
mov
xchg
pop
inc
insb
pop
fs
fisttps
dec
addr16
sarl
xor
pop
mov
sub
fisubl
ja
sub
mov
jo
xchg
push
lods
loope
and
add
dec
cmp
dec
out
or
fidivs
xchg
loopne
lods
sub
adc
push
push
cmp
mov
das
fs
and
and
insb
push
sbb
repnz
pop
inc
lret
movsb
xor
mov
pop
xchg
mov
xchg
das
cmp
push
call
clc
xor
clc
jecxz
pop
cltd
cmp
cmc
hlt
testl
gs
pop
dec
test
ss
xor
outsl
pop
fcmovu
mov
cs
sbb
stos
ss
in
xor
jbe
sub
jnp
push
std
enter
lea
inc
inc
xchg
mov
inc
lods
jmp
lods
adcl
xor
jnp
pop
sbb
in
jns
andl
sub
mov
outsl
mov
or
ss
je
xor
out
fs
mov
or
loopne
mov
aad
inc
enter
mov
jno
jns
pop
adc
bound
xchg
repnz
push
pop
or
insb
jmp
rcrb
cmc
mov
mov
fbstp
loopne
xchg
and
mov
fsts
sub
push
rolb
sbb
push
cld
jmp
loopne
std
cmp
shll
loop
movsb
pop
jae
mov
jp
faddl
aad
mov
dec
and
dec
shlb
jmp
aad
xchg
pop
lods
and
fucomip
fs
leave
shrl
bound
movsb
inc
xor
mov
inc
pop
hlt
movsb
and
cmpsl
lahf
add
or
lret
cwtl
sub
sub
outsl
and
jmp
add
push
or
sub
iret
lret
jbe
clc
mov
es
jo
repnz
sbb
dec
add
mov
orb
jecxz
lahf
stos
mov
dec
pop
mov
and
jp
sti
xor
inc
sbb
cmp
into
lock
les
adcl
cmp
jno
fistps
rcr
pop
xchg
add
add
cli
mov
dec
insb
sub
movsl
sarb
push
sbb
jo
int
lods
int3
inc
xchg
jns
push
shrl
in
std
psrlq
cltd
scas
pop
cltd
aad
js
pop
in
jmp
push
mov
shrl
insb
pop
dec
mov
orb
mov
inc
pop
adc
leave
mov
nop
pop
lret
mov
sub
add
dec
lea
mov
and
dec
and
jmp
adc
orl
add
insl
fdivs
int3
movsl
imul
add
rcr
out
push
xlat
inc
mov
rorb
flds
out
fadd
lock
mov
inc
jnp
pusha
jl
cmp
jbe
xchg
push
push
daa
dec
lcall
mov
or
xor
test
ds
ss
das
add
cli
jne
scas
popf
inc
xor
idivl
pop
stos
xor
mov
repnz
fsubrs
out
sbb
dec
es
or
stos
sub
or
xor
add
dec
call
out
mov
test
insb
movsb
aad
push
jmp
scas
sub
sub
cli
pop
aaa
sub
ss
mov
ret
mov
push
sub
or
mov
in
inc
fs
and
mov
pop
mov
push
adc
pop
int
push
mov
adc
mov
push
sub
fstpt
iret
mov
pop
push
cld
mov
ret
fwait
in
dec
shlb
sub
sbb
pusha
adc
les
mov
push
sub
mov
adc
cmp
mov
push
sti
adc
fucomi
shrb
ds
aas
in
cmp
int
jbe
xor
fadds
inc
add
out
sbb
lret
jbe
loopne
inc
icebp
sbb
mov
mov
dec
and
mov
mov
push
xchg
mov
mov
ret
xor
mull
rcr
call
out
ljmp
test
push
mov
ret
dec
dec
sub
mov
subl
pop
pop
inc
cs
sub
fwait
pop
lret
js
into
jae
inc
adc
out
dec
mov
mov
cld
imul
adc
sub
scas
loop
and
out
stos
adc
inc
aas
jl
dec
repz
in
inc
lahf
pop
test
push
add
fcompl
sbb
jns
mov
rcr
es
pushf
and
jno
sbb
jnp
lds
inc
pop
pop
mov
mov
cmpsl
jg
sbb
mov
adc
fstpt
jp
and
sbb
xchg
sub
dec
in
cli
xlat
mov
pushl
jns
jbe
test
sahf
lea
ss
pop
mov
dec
jle
pop
je
mov
nop
sub
fiaddl
adc
rcrb
sub
mov
sub
sub
loop
push
dec
test
jo
dec
cltd
test
fstl
enter
adc
sub
add
lods
cmpsl
subl
loop
aad
push
rdmsr
jecxz
xor
stos
jnp
and
mov
cmpb
inc
hlt
insl
call
and
cmp
dec
fidivrl
mov
test
xlat
jle
dec
lods
ljmp
into
mov
ss
not
or
mov
icebp
push
mov
in
dec
dec
cmpsl
in
mov
loopne
js
mov
call
xor
mov
and
adc
mov
aas
or
test
and
sub
int3
jl
lods
inc
sbb
sti
cmp
pop
mov
out
scas
dec
mov
jmp
push
mov
adc
fcmovbe
insb
add
idivl
lcall
mov
outsl
sbb
sbb
mov
test
mov
xor
enter
pop
sbb
xor
xchg
shrl
das
push
or
mov
pop
xchg
cmp
jnp
movsb
and
xlat
or
mov
push
push
mov
add
jge
mov
out
add
sbb
cmpsl
dec
xor
jl
subb
sbb
cltd
sar
sbb
cmp
cmp
stc
jb
out
xchg
pusha
lods
mov
inc
arpl
test
add
fstl
lods
int3
pushf
mov
in
fidivrl
xchg
xchg
and
in
cmp
push
dec
sub
dec
cmp
in
sbb
and
addr16
push
xorb
xchg
leave
scas
repz
inc
lea
push
cli
lahf
nop
or
mov
imul
fmuls
jb
inc
in
data16
dec
mov
out
sub
mov
dec
loop
jl
int3
ss
or
xor
mov
mov
add
cltd
jecxz
cmp
jge
xor
push
loop
jo
xchg
push
xchg
or
and
inc
hlt
add
inc
out
dec
out
in
mov
xchg
mov
xchg
cmp
jmp
addl
fiadds
or
mov
lods
pop
bound
imul
dec
and
test
dec
testl
cmp
aaa
sub
push
leave
jbe
hlt
pop
jg
xchg
lods
out
push
stos
push
movsb
mov
mov
inc
xchg
sub
dec
lret
cwtl
xchg
inc
lahf
imul
out
adc
ss
xchg
dec
aam
or
cmp
out
mov
sub
pop
faddl
sub
xor
out
sub
mov
sbb
push
aas
add
cmpsb
mov
pop
clc
add
jnp
xorb
xchg
adc
jg
fcmove
imul
inc
into
stos
rolb
pop
mov
fxch
push
inc
shr
call
add
rcll
pop
pop
fldl
aad
mov
test
testb
push
mov
les
ss
insl
cmpsl
mov
gs
mov
xchg
sub
push
popf
cmpb
add
jmp
mov
xlat
aad
sar
xchg
adc
test
mov
and
and
cs
sahf
je
mov
push
jbe
push
xchg
or
jo
fwait
cld
mov
inc
or
das
lret
mov
pop
xchg
push
je
xchg
sbb
jbe
loop
pop
mov
and
pop
pop
shlb
mov
inc
push
cltd
xor
sub
pusha
mov
repnz
add
cmpsl
popf
adc
dec
dec
mov
adc
mov
inc
das
pop
sbb
or
cmp
mov
xor
xor
jno
mov
scas
cmp
or
mov
in
mov
adc
aad
xchg
movsb
xchg
ja
dec
jbe
je
icebp
iret
xchg
lahf
addb
ja
cmp
cld
push
xor
inc
int
add
repz
xor
xchg
fistl
insb
sahf
xchg
shl
das
out
jne
dec
or
enter
pop
inc
pop
xchg
inc
fcmovnb
negb
hlt
daa
inc
lock
jmp
or
stos
mov
inc
fstpt
cmp
ret
std
cwtl
pop
sbb
inc
mov
push
mov
xchg
mov
jae
shlb
jp
mov
dec
pop
cmp
movsb
mov
stos
add
and
xchg
mov
cmp
aad
cmp
xor
push
movsl
ret
pop
fld
sbb
and
xabort
pop
jns
scas
push
pusha
dec
enter
dec
fs
sub
in
repz
inc
pushw
clc
and
mov
sub
xchg
mov
add
aaa
fisttpl
mov
sahf
daa
je
mov
sbb
mov
insb
es
ret
push
movsb
inc
imul
loopw
popl
movsb
and
mov
jae
xor
sub
cwtl
xchg
cmp
mov
insl
hlt
cmc
flds
ficoms
mov
add
lds
mov
mov
mov
cmp
xlat
xchg
in
xchg
pusha
and
int3
into
mov
jno
xor
clc
mov
gs
cmpsb
adc
out
mov
lahf
test
in
xorl
jle
loop
mov
mov
inc
daa
inc
mov
jb,pn
outsb
jl
ss
adc
mov
lods
lock
dec
hlt
sub
dec
shll
xchg
cli
fs
dec
lahf
sub
dec
cmp
repz
scas
cmp
vmovapd
stos
xchg
lods
roll
mov
jbe
mov
xor
cli
push
mov
dec
je
sbb
fidivs
dec
loope
xchg
imul
add
jo
mov
and
mov
adc
adc
stos
gs
mov
mov
xchg
fiaddl
ljmp
adc
inc
roll
fiaddl
cli
lret
int3
mov
mov
mov
pop
mov
seta
xchg
xchg
lahf
sbb
lcall
aaa
popa
jnp
fistl
scas
pushf
mov
mov
xchg
pop
pop
pop
mov
pop
sub
ja
mov
stos
push
cmp
sbb
aad
pop
enter
xor
or
adc
fdivl
adc
jne
mov
cltd
sub
mov
pop
jb
int3
imul
sbb
pop
stos
out
fwait
mov
adcb
les
pop
scas
jne
dec
stos
mov
push
pop
pop
daa
imul
push
mov
in
adcb
js
pop
ja
xchg
sub
rolb
sahf
add
loop
add
lea
sbb
out
mov
test
repz
jb
test
cmc
inc
in
add
repz
xlat
les
or
pop
out
dec
sti
test
dec
clc
out
push
stos
xchg
test
sub
mov
fimull
pop
jbe
movsb
gs
std
fsubr
xchg
mov
sbb
sbb
orb
popf
lods
addr16
xor
lret
jmp
jo
icebp
xor
jb
mov
mulb
pop
mov
std
mov
xchg
inc
and
push
je
jns
add
cltd
int3
bound
mov
idiv
push
jae
mov
shrl
mov
pop
or
xchg
mov
sbb
mov
push
push
xorb
jmp
fdivrs
shll
mov
push
mov
in
out
add
pop
pop
mov
arpl
jns
and
nop
test
inc
jo
fsubs
pop
or
push
inc
jno
jp
jp
loope
imulb
outsb
sar
shll
adc
outsl
push
mov
mov
sub
insl
repz
cltd
stos
or
test
mov
sbb
pop
mov
xchg
ret
or
mov
dec
iret
xor
adc
ja
sbb
in
cmpsb
adc
pop
lahf
in
inc
and
push
pop
push
repz
test
aas
sub
mov
dec
jecxz
popa
and
cmp
cmp
add
rorb
mov
mov
add
scas
push
mov
aas
cmpsl
arpl
inc
fidivrs
and
fnstsw
rcrl
cmp
sub
in
cwtl
mov
in
stos
int
pop
js
fildll
shr
add
mov
jge
xor
ljmp
add
imul
push
loopne
push
fimull
cmpsl
addl
inc
sbb
add
or
movzwl
pop
push
js
aas
add
push
sahf
mov
push
sub
dec
out
add
fsubs
cld
push
mov
js
pushf
push
fisubs
or
cmp
arpl
loopw
or
or
or
mov
cs
xchg
dec
and
and
into
xchg
mov
sub
mov
sbb
leave
ljmp
push
bound
arpl
test
bound
insb
jge
ja
xor
adc
dec
or
adc
adc
inc
lods
and
mov
aam
in
jmp
adc
popf
pop
in
ljmp
and
fmuls
pop
mov
pop
stos
cld
cmc
hlt
hlt
fiadds
xor
popa
adc
push
or
adc
xchg
jle
mulb
mov
push
push
and
ret
jb
or
outsb
loope
pop
loop
pop
sub
nop
pusha
mov
test
and
dec
push
mov
jb
inc
roll
icebp
pop
inc
jmp
lds
xor
sub
sahf
sbb
add
daa
or
lcall
aaa
inc
xor
pushf
and
dec
jns
dec
scas
push
rol
jl
or
imulb
dec
lret
dec
sub
mov
adc
mov
and
and
clc
out
push
push
pop
pop
repnz
sbb
addr16
xchg
or
cli
aas
jno
ret
push
das
pop
jae
iret
fcmovb
mov
jle
lahf
cli
lods
loopne
xlat
stos
pop
in
mov
call
adc
pop
mov
mov
push
lret
testb
pop
cli
jbe
push
add
push
dec
roll
inc
cmp
test
ret
fs
mov
cld
std
enter
enter
adc
inc
or
pop
mov
adc
and
adc
mov
mov
or
getsec
sub
pop
and
lret
jle
pop
fmulp
add
pop
pop
int
dec
pop
call
or
std
cld
mov
xchg
inc
jmp
or
outsb
dec
data16
sbb
add
pushf
jo
add
sbb
ss
push
in
push
lret
lods
adc
js
loopne
or
cmpsl
fs
inc
mov
jns
data16
cmc
into
rcll
dec
shrb
insb
scas
mov
add
or
xlat
popa
addr16
test
and
std
jecxz
hlt
mov
jo
adc
call
push
mov
ficompl
xlat
mov
or
movsl
cmp
or
push
sub
stos
dec
cmp
scas
jae
mov
sbb
sbb
jne
in
ja
and
addr16
mov
mov
fcompl
mov
jb
fmuls
push
sub
add
into
aas
push
dec
push
xchg
rolb
push
ja
jl
push
adc
repnz
test
fadds
xchg
and
daa
mov
out
fdivs
in
clc
hlt
das
xchg
mov
lcall
out
push
push
cmp
fistpl
cmpb
or
xor
and
mov
lret
fsubs
adc
loopne
push
leave
popf
enter
or
mov
add
decl
push
mov
movsl
mov
xor
int
cmp
pop
adc
popf
xchg
jmp
out
cmpsl
push
pop
popf
nop
pop
rcrb
fldcw
jae
xor
adc
cltd
cmp
mov
lahf
aam
imul
popa
lods
jmp
repnz
or
inc
sbb
xchg
std
jecxz
mov
lahf
addr16
sbb
loop
aas
mov
inc
ret
fistps
pushf
scas
pop
les
jae
lods
out
hlt
fs
sahf
sbb
icebp
add
inc
xor
sbb
pop
pushf
hlt
jbe
test
cmp
aam
sbb
xorl
sub
inc
lea
movsb
push
loopne
stos
jecxz
cli
bnd
pop
add
test
cmp
push
iret
test
sbb
add
sbb
out
pusha
sbb
aam
fmul
pop
sbb
test
mov
mov
xchg
lods
cmc
pop
dec
mov
add
sahf
lock
lds
lret
rcll
dec
icebp
ljmp
dec
in
leave
pushf
mov
cmp
popf
push
add
std
stc
popf
jle
fcmovnbe
mov
int
cmp
stc
cmpsl
fdiv
das
xor
jae
je
adc
aad
sbb
pop
mov
addb
mov
mov
or
jbe
inc
test
dec
stc
sub
mov
stc
aas
cmp
cltd
lods
xchg
rcrb
push
dec
add
push
inc
fsubrs
frstor
mov
push
mov
or
ret
pop
push
jne
cwtl
mov
out
test
das
push
jb
xchg
inc
lea
hlt
push
xor
fnstcw
cmp
inc
dec
push
jae
lret
add
sub
mov
jns
aad
movsb
mov
jnp
fidivrs
mov
inc
loopne
ljmp
cmp
aas
push
nop
gs
ss
test
push
push
and
mov
or
shlb
xchg
adc
xchg
rcll
sbb
adc
cltd
dec
xor
push
pop
std
call
xor
sahf
push
inc
sbb
lahf
aad
and
enter
rol
xchg
mov
adc
dec
sbb
cmp
cmp
push
cwtl
in
stos
mov
cwtl
int3
pop
gs
aam
pop
add
cmp
mov
sub
int
pop
scas
cs
dec
addr16
pushl
mov
imul
loope
push
pop
mov
out
dec
mov
push
incb
pop
inc
outsl
popf
or
das
bnd
pop
mov
pop
in
jo
leave
data16
jecxz
pop
gs
pop
call
clc
jmp
lods
cmpsb
xlat
mov
pop
mov
sbb
test
or
and
or
outsb
pop
lea
push
inc
fucom
rcrl
add
mov
dec
outsb
inc
and
jno
push
jecxz
mov
sub
xchg
idivb
pop
loope
bound
and
fistps
in
insl
jmpw
test
jg
bound
jne
pop
fstpl
mov
push
pop
or
jg
mov
ljmp
and
and
std
or
shl
popa
dec
ret
lods
rcrb
and
xchg
iret
and
ret
call
inc
lods
and
stos
sbb
pop
mov
cmc
adc
mov
cmc
mov
jns
xlat
call
fs
adc
sub
adc
jmp
cmp
gs
lds
mov
xor
arpl
test
fdecstp
std
aaa
insb
inc
dec
cmp
or
jp
pop
mov
es
jns
dec
sub
fcomps
or
push
fisttpl
or
xor
or
adc
and
in
push
mov
movb
stos
xchg
mov
sub
inc
fdivl
or
xor
lods
or
stos
jle
jbe
or
cs
ret
add
pop
test
movsb
jno
inc
insl
insl
xchg
adc
sub
xor
or
ss
pop
loopne
ret
fsubrs
in
sub
aaa
ss
mov
ljmp
or
out
out
dec
push
sbb
cmp
out
loope
cld
adc
test
stos
fldl
adc
sub
fcomps
scas
imul
mov
fwait
lock
jecxz
pusha
cmp
jno
push
push
bound
and
shll
dec
les
inc
add
add
jl
dec
ljmp
stc
xchg
and
fdivp
mov
addr16
pop
mov
loop
pop
sarb
mov
jae
jecxz
mov
stos
mov
push
lea
cli
jmpw
ljmp
jns
gs
dec
in
div
outsb
mov
out
mov
xlat
inc
cwtl
xchg
repnz
pop
dec
ljmp
mov
ljmp
loopne
push
jl
and
lods
push
ss
inc
add
and
gs
ja
stos
fisubl
xchg
sub
outsl
add
or
es
or
lret
mov
xor
in
cli
and
ja
leave
or
push
push
imul
xchg
aam
sbb
cmp
inc
and
mov
outsl
xchg
mov
outsl
adc
push
jns
dec
lock
and
push
inc
mov
dec
sbb
jns
and
mov
adc
incb
sbb
mov
push
mov
adc
inc
mov
arpl
lea
mov
pop
testb
stc
jmp
scas
bound
jbe
pop
montmul
cmpsb
popa
nop
call
inc
fwait
or
lcall
movsl
inc
push
clc
mov
sbb
roll
add
mov
in
testl
and
roll
out
push
mov
outsl
loop
mov
mov
or
insl
lods
or
sub
test
imul
sbb
add
dec
bound
sahf
push
pop
ja
xchg
rolb
pop
xor
push
jnp
add
cmp
ds
sub
add
test
daa
mov
mov
push
mov
in
mov
imul
cld
imul
jae
fdivs
jmp
fcmove
mov
ret
mov
push
cmp
lods
mov
rcll
xchg
pop
ds
pop
lahf
ficompl
jnp
es
push
out
inc
cli
sbb
push
testl
cld
and
mov
cld
xor
push
push
out
aad
cmp
icebp
cmp
das
xchg
mov
sbb
rorl
call
pop
sub
pop
mov
sub
inc
dec
inc
push
clc
push
fisttps
call
push
jae
mov
fcoml
fsqrt
test
sbb
push
loope
dec
fwait
out
mov
jecxz
fstps
inc
cmc
call
add
dec
pop
lock
outsb
pop
jnp
jns
ja
mov
push
cmp
ret
jbe
movsb
mov
jp
xchg
mov
jmp
int
jp
test
icebp
sub
sbbb
js
mov
les
and
jb
dec
or
adcb
xchg
test
ret
push
sub
sub
mov
push
xchg
call
cld
or
sub
and
ret
repz
ret
je
outsb
adc
repz
sbb
jbe
pop
imul
xchg
push
arpl
and
jb
cmpsb
sub
cwtl
repnz
mov
dec
gs
movsl
push
add
mov
inc
loopne
push
out
test
or
movsb
in
test
aaa
mov
jae
shl
cld
lea
loope
push
pusha
rcll
out
xor
outsb
icebp
and
sbb
pop
ljmp
repz
cmp
and
push
sub
push
loop
in
or
movsl
jp
xchg
jmp
sbb
adc
rol
cmp
xchg
lock
insb
out
test
xor
lods
imul
push
arpl
push
jno
out
and
sbb
cmp
xchg
inc
test
lcall
mov
das
fs
ret
sub
push
les
out
sub
insl
add
jns
push
jmp
sub
add
int
in
and
fsubrs
mov
shlb
sbb
sbb
aaa
loopne
and
imul
xchg
dec
sub
leave
das
ja
jp
or
cltd
cmp
cwtl
mov
lcall
out
and
stos
adc
push
mov
sahf
mov
rclb
imul
cmp
mov
cli
sub
adc
sbb
or
sarb
dec
out
adc
push
shll
pop
mov
cmpsl
push
adc
pushf
or
imul
push
lret
push
and
jnp
loop
adc
scas
cmp
fisubrl
int3
shrb
aas
xchg
jecxz
push
jecxz
xor
jo
adc
shll
pop
js
pop
pop
sti
inc
call
fwait
mov
lea
les
sbb
or
out
addr16
adc
aam
mov
hlt
cmp
inc
sbb
cmp
ds
aaa
pop
xor
mov
sahf
lret
push
hlt
scas
mov
sub
push
movhps
aaa
mov
into
adc
push
out
mov
cmpsl
mov
xchg
push
mov
jge
lods
push
jle
out
aas
into
ror
pop
gs
in
pop
pop
adc
popa
loope
mov
lahf
lret
or
mov
push
cli
pop
pop
ljmp
scas
push
and
rclb
mov
push
or
pop
mov
popa
out
hlt
push
mov
mov
sub
or
push
frstor
adc
adc
mov
adc
or
in
clc
cs
jno
ja
push
jecxz
aam
jmp
loopne,pt
mov
test
jo
inc
frstor
idivl
dec
cmpsb
add
mov
xchg
mov
pop
mov
jp
and
cli
leave
dec
inc
mov
fstl
ds
fisttpll
or
mov
out
fwait
mov
push
icebp
cmpsb
cmp
insb
cwtl
and
or
xchg
jmp
testb
adc
jmp
push
in
mov
jae
mov
xorb
jae
xchg
pusha
inc
inc
int
lret
inc
andl
decl
jns
pop
fldcw
mov
jne
inc
popa
and
scas
jp
push
and
and
nop
dec
cld
movsb
xlat
outsl
insb
mov
lahf
mov
fmull
adc
sti
cmp
mov
out
mov
jecxz
xchg
jns
insb
test
sub
in
jge
xchg
jmp
mov
xchg
inc
push
lods
pop
loope
jae
movsb
xchg
cltd
jmp
add
loope
movsb
fnstenv
push
pop
sbb
js
xor
sbb
leave
or
inc
movsl
cli
cmp
cmp
lods
xchg
push
lcall
mov
dec
mov
leave
mov
insb
shll
and
out
cmpsb
es
xor
les
sub
push
and
ret
movsl
mov
mov
movsl
xchg
and
je
dec
pop
push
test
push
ret
jne
mov
ret
pop
fbstp
in
int
clc
dec
pop
imul
leave
add
add
push
lods
stc
fxch
jecxz
mov
mov
and
nop
movsl
out
dec
cmpsl
dec
cli
sub
sbb
cli
pop
jp
cmp
popl
mov
popf
jnp
push
or
pop
out
shrb
sub
inc
xchg
xor
jmp
or
sti
adc
out
mov
jb
fs
mov
in
inc
fmuls
stc
sahf
orb
dec
ret
xor
push
enter
or
cld
inc
inc
inc
jae
into
and
frstor
sbb
and
aad
or
cmp
stc
pushf
xchg
popf
mov
or
aaa
adc
mov
cmc
mov
enter
jp
mov
dec
cmc
cld
dec
ja
leave
push
repnz
cmc
pushf
mov
int3
sub
les
ret
nop
adc
inc
mov
arpl
xor
repz
and
adc
fists
mov
shlb
jbe
jge
inc
jno
iret
ror
int3
lds
loop
daa
ljmp
jg
icebp
nop
inc
add
sar
jae
int3
iret
jp
lock
xchg
xor
icebp
pop
jnp
das
enter
idivb
jb
scas
or
jge
int
std
and
or
xor
sbb
cli
dec
push
call
inc
cmpsl
xor
jne
fwait
outsl
dec
add
mov
loope
jo
les
cmp
pop
pop
inc
jno
cmpsl
xchg
es
cmpsl
popa
dec
mov
cmp
pushf
jbe
xchg
adc
imul
sbb
mov
add
lret
in
dec
stos
int3
sbb
aas
ljmp
je
xchg
aas
lcall
sti
loope
cltd
jne
out
aad
ds
sbb
mov
pop
adc
inc
push
cli
enter
fwait
mov
dec
push
or
inc
dec
mov
mov
jmp
push
imul
jle
push
dec
icebp
shlb
xor
or
mov
je
data16
dec
mov
and
fdivl
ret
and
pop
ss
xchg
sub
in
or
push
pusha
stc
popf
lods
xor
sti
or
sub
cmp
add
jl
cld
or
scas
popa
inc
add
push
jp
pushf
pop
lahf
adc
mov
xchg
sub
fldenv
and
xchg
jne
scas
js
pop
pop
outsl
mov
fisubs
es
cs
hlt
mov
sbb
cmpb
inc
mov
dec
push
xor
fst
fldl
imull
jecxz
sub
cmp
repz
sbb
push
repnz
cmpsb
in
mov
pusha
hlt
in
add
aaa
pop
mov
imul
cmp
xor
in
or
push
adc
cmp
in
loop
sub
adc
and
sbb
xchg
jns
xchg
shufps
add
xor
stos
fwait
mov
sbb
sti
sahf
mov
xor
cwtl
and
and
ljmp
jns
into
ficoml
sbb
pushf
push
cwtl
mov
push
and
sub
dec
fcmovbe
and
mov
mov
xorl
add
mov
dec
add
fwait
lds
cmp
popf
push
push
jge
xor
or
lods
popa
imul
ret
ficoml
aaa
call
mov
sbb
or
add
pop
sub
aas
add
ret
mov
rclb
rclb
out
cmp
loopne
cmp
push
cli
enter
jl
push
stos
je
push
push
out
jae
test
xchg
mov
cltd
mov
cmpb
clc
outsb
jae
add
mov
push
adc
inc
loope
pinsrw
jb
fistl
mov
popa
int3
out
dec
aaa
sbb
test
cmp
jnp
xchg
call
popf
mov
mov
jge
lock
push
out
imul
inc
xchg
xor
pop
pop
xchg
loope
sbb
fcmove
mov
js
es
rcl
jge
push
fwait
js
imul
popa
rolb
dec
inc
movsb
jp
cwtl
lretw
pushf
out
and
test
sar
or
leave
mov
test
fldenv
lahf
pusha
decb
nop
rcrl
in
cmp
push
xor
push
mov
mov
sub
adc
fcompl
clc
cli
mov
into
or
jne
push
lret
adc
shl
sbb
xlat
cmp
mov
and
std
repz
mov
jnp
lcall
jg
call
nop
test
ja
mov
popa
fstpt
push
lods
ret
aam
dec
movsl
xor
les
and
cs
ror
fs
inc
xor
das
shl
mov
xor
sub
fsts
xor
sarb
xor
sbb
adc
out
addr16
xchg
fdivs
xchg
mov
out
mov
lds
or
push
jbe
jo
cmp
jns
jl
sub
lods
mov
sub
pandn
push
enter
lods
mov
jnp
mov
hlt
adc
or
or
pop
xor
sahf
lahf
movsb
mov
aas
and
hlt
add
dec
insl
cwtl
fdivrl
push
pop
dec
fs
mov
jge
mov
enter
std
push
inc
in
mov
inc
out
jl
loop
cmpsb
in
roll
push
stc
testl
rorl
pop
sbb
outsb
lods
in
mov
movsl
stos
cmp
and
cmpsl
ret
sub
ss
inc
fisubl
jne
sub
in
add
fsubrs
add
enter
sub
jae
sbb
das
xchg
nop
mov
orl
mov
out
sbb
xlat
repz
pop
cmpsb
fstpl
out
inc
and
dec
jne
ret
inc
lret
sbb
dec
sub
mov
dec
push
jp
xor
cmp
jnp
es
mov
xor
cwtl
in
sbb
scas
insl
push
cmc
dec
mov
adc
movsl
imul
leave
add
sbb
jb
pop
mov
dec
mov
lret
fistpl
or
or
or
mov
out
arpl
in
rcll
sbb
pop
lret
sub
lods
or
inc
adcb
jmp
mov
iret
stc
jmp
repz
jno
mov
sub
and
stos
cmp
dec
xchg
push
out
add
or
mov
jno
mov
sti
inc
rcrb
add
out
test
ljmp
pop
add
insl
dec
inc
and
jno
mov
pop
lods
pop
and
cwtl
push
sbb
inc
outsb
iret
lds
inc
aad
adc
pop
cmpsb
fiaddl
add
out
data16
out
mov
data16
sub
icebp
inc
cmc
xchg
into
pop
sti
jp
lret
scas
fs
cmp
add
dec
jns
xchg
ja
dec
pop
sbb
icebp
sbb
je
mov
stc
ja
and
lods
add
lods
dec
mov
mov
ret
jnp,pn
bnd
orb
loopne
jle
sbb
push
fisttps
mov
gs
mov
xchg
mov
and
stos
xlat
ret
adc
jmp
fbld
mov
flds
lret
push
test
dec
pusha
into
mov
out
fisubs
test
mov
out
stos
pop
shlb
or
xlat
lds
jge
pop
pop
inc
mov
push
add
cmp
sub
xchg
mov
bound
adc
mov
lds
push
addr16
adc
xor
xor
int
sysexit
mov
and
hlt
mov
lret
mov
insl
push
sub
cmpsl
cmpsl
fndisi(8087
add
jmp
adc
mov
addr16
ja
daa
push
icebp
test
aas
sbb
test
dec
push
icebp
int3
mov
or
in
stos
and
shrb
push
jnp
cltd
cmc
xchg
adc
or
dec
xor
insl
repz
add
mov
xchg
jae
cli
sarl
mov
lods
cwtl
fsubl
xor
dec
add
pushf
pop
xor
add
mov
add
jg
jno
pop
or
xchg
mov
mov
and
in
and
inc
shlb
stos
sahf
imul
in
cmp
mov
and
lds
int3
cltd
add
push
and
mov
sti
outsl
mov
cmp
enter
cmp
sub
sub
out
insb
jmp
repnz
fisttpl
xchg
pop
dec
imul
jae
lret
clc
sub
push
mov
pop
loope
adc
stc
aas
inc
cltd
mov
mov
inc
mov
or
pop
adc
aas
call
mov
stos
out
sub
mov
lcall
das
es
testb
adc
and
push
sub
cltd
ja
mov
cs
leave
push
adcl
js
or
aaa
leave
sbb
data16
cld
pusha
dec
lock
pop
inc
mov
mov
loope
xor
imul
push
or
pushl
pop
push
sbb
sbb
insb
or
mov
das
mov
add
sar
mov
insl
jge
mov
inc
cvtps2pi
pop
popa
es
and
jne
cli
add
jb
sub
dec
into
lahf
subb
std
shlb
xchg
mov
in
in
jg
neg
das
icebp
cmpsl
pop
js
idivb
fcomp
pop
xchg
cmp
xchg
mov
in
dec
cwtl
mov
mov
lret
pop
push
jg
mov
cmp
pop
lcall
clc
dec
mov
insb
insb
sub
and
cmpl
inc
xchg
inc
fwait
and
dec
lahf
sbb
fidivl
cmpsl
ljmp
dec
jecxz
into
scas
lcall
sub
push
jmp
scas
jb
push
or
in
punpckhdq
fs
leave
push
push
ret
xchg
outsl
or
sti
and
pop
ret
xchg
fs
fldl
lods
jae
addr16
movsb
xchg
dec
inc
add
int
sub
enter
stos
jg
pop
in
pop
add
test
cmp
inc
pop
push
jp
jo
cwtl
pop
movsb
xlat
ds
in
out
push
scas
adc
jne
loop
jecxz
loop
shll
cmp
pusha
rcl
push
lods
stos
test
rorl
add
add
aaa
mov
push
add
subl
loopne
jecxz
jmp
into
pop
shll
lock
cmp
mov
mov
jg
shll
lret
pop
popa
jno
dec
mov
bswap
dec
lahf
pop
push
mov
or
orl
push
sub
test
sub
or
jg
or
mov
int
mov
bound
cli
xchg
mov
inc
nop
ret
jb
es
ret
shrl
sub
imulb
and
add
dec
cltd
adc
js
push
xchg
sahf
pop
addr16
mov
pop
call
sbbb
add
jne
aas
xor
lock
cmc
inc
fnsave
lods
and
or
push
mov
mov
cmp
inc
cmp
repz
insl
add
jmp
icebp
cmpl
sbb
pop
mov
fsts
dec
scas
add
hlt
xchg
mov
outsb
mov
mov
push
int3
dec
jecxz
movlps
fistpll
iret
scas
movsl
push
xchg
ljmp
push
jbe
negl
aam
rcll
jge
xchg
sbbb
nop
mov
push
test
sbb
mov
lods
dec
outsl
popa
mov
aaa
mov
dec
sbb
sub
pop
mov
adc
mov
xchg
mov
push
stc
repnz
xor
mov
mov
mov
xchg
fsts
fwait
in
pop
test
in
mov
mov
mov
dec
leave
int
add
and
mov
call
dec
sbb
fwait
lret
mov
aaa
scas
push
push
insl
cmp
cmpsl
xorb
jbe
shlb
mov
stos
aad
inc
dec
sub
clc
dec
and
popa
or
jp
pop
pop
mov
xor
mov
xlat
movsl
or
idivb
inc
mov
mov
jle
vmwrite
mov
aam
add
jne
inc
sbb
pop
sbb
arpl
out
xor
jbe
adc
and
dec
icebp
jge
dec
or
add
ret
mov
jbe
fists
cwtl
sbb
shll
add
adc
sbb
or
int
jae
jg
out
aam
jmp
mov
faddl
pop
or
test
mul
cli
out
popa
addr16
loope
in
test
aaa
jne
std
lock
ret
mov
lods
lret
and
ljmp
dec
dec
mov
jno
inc
cs
in
outsb
mov
aad
gs
dec
xchg
movsl
lods
into
pop
sub
mov
xor
mov
mov
gs
call
mov
data16
sbb
stos
ss
scas
loope
mov
loop
pusha
ror
jmp
sahf
aas
sti
fmuls
lods
fcomps
repz
mov
xor
dec
out
pop
pop
cwtl
add
cmp
mov
into
int3
dec
or
cmpsl
add
mov
out
jecxz
pop
out
dec
cmp
push
push
call
test
ds
stos
movsb
movsb
dec
and
loop
jle
mov
outsl
xor
fldcw
nop
iret
daa
lds
movsb
pop
push
sbb
int3
inc
mov
pushf
int3
and
outsl
fistps
jne
sub
imul
mov
test
dec
lds
pop
fld
insl
pop
fs
add
and
push
sub
adc
xor
add
jne
jmp
sub
add
cmp
adc
pop
ss
xchg
fistpll
dec
or
xchg
inc
push
out
into
mov
adcb
adc
mov
or
xchg
mov
clc
movsb
xor
push
pop
jbe
test
lret
push
cmp
in
add
in
mov
test
fs
idiv
fistl
fwait
out
or
sbb
pop
adc
addr16
mov
adcb
and
das
fisubrs
ret
jne
or
cmp
jae
add
mov
push
fmuls
ja
test
sub
rolw
rcrb
jecxz
push
or
test
repz
lea
sbb
es
incl
pop
outsb
push
xor
or
dec
sbbl
xor
hlt
mov
dec
sti
jecxz
cmp
mov
cwtl
loopne
push
stos
je
add
popa
mov
fstpt
and
sbb
nop
push
fldcw
or
inc
mov
add
cld
int3
sbb
and
inc
repz
ljmp
xorl
jmp
ja
xchg
pop
mov
cmc
jmp
dec
inc
xchg
nop
mov
adc
je
lds
ror
lcall
jnp
mov
movsl
mov
sub
sbb
pop
mov
or
mov
sarb
inc
inc
push
rcll
lea
adc
mov
inc
in
ret
or
sti
pop
pop
inc
jmp
leave
xor
xchg
mov
inc
mov
out
lret
in
cld
add
mov
and
mov
test
jbe
inc
xchg
pop
jns
fistl
lcall
les
lret
out
pop
repnz
mov
inc
aam
out
push
outsb
rolb
sub
fwait
pop
lock
mov
stc
stos
mov
cmp
clc
call
sub
ds
adc
inc
adc
push
push
and
mov
ljmp
sub
add
lods
xor
pop
arpl
fsts
sub
adc
or
je
test
adc
imul
jmp
and
test
sub
push
nop
in
mov
je
js
push
andl
cmp
xchg
scas
cmp
mov
or
jae
mov
mov
add
inc
mov
xlat
fisubs
jb
enter
ret
loope
dec
cmp
lods
aaa
add
mov
repz
mov
lret
divb
fwait
and
mov
adc
add
cmc
mov
testb
push
xchg
outsl
rol
sub
insl
cmp
mov
fisttpl
jle
icebp
mov
adc
das
add
stos
in
stc
xor
xor
aas
adc
iret
testl
cmp
jae
mov
int3
jecxz
in
xchg
xor
outsb
in
cmp
push
cmp
outsl
pop
xchg
aas
jae
and
testl
jecxz
push
dec
mov
jne
or
mov
jp
fmul
mov
or
pop
sbb
or
sub
arpl
dec
lods
jl
enter
xchg
or
jno
nop
das
repnz
cwtl
cmp
adc
and
pop
xchg
mov
adc
push
cmpsl
test
cli
andb
xchg
mov
lahf
ja
lods
xchg
cmpsl
xor
ljmp
mov
repnz
loope
insl
repz
mov
pcmpeqw
pop
sub
repz
daa
or
inc
push
fisubl
jne
jne
insb
sti
sub
push
pop
mov
mov
adc
and
sub
ja
mull
shrl
pop
sub
sbb
inc
lods
cltd
in
bound
aam
jl
add
popa
xchg
inc
pop
outsb
out
mov
sar
sub
popf
cmp
mov
les
or
lock
aam
lcall
dec
sbb
add
ja
nop
ljmp
cmp
sti
xor
jle
dec
add
or
hlt
and
jp
inc
push
jb
mov
xchg
jecxz
cmc
dec
les
pop
xor
xor
push
js
enter
add
push
xor
mov
adc
idivl
cmp
jo
movsl
mov
sub
pop
scas
jne
movsb
loop
aad
mov
dec
ret
outsb
mov
xor
xchg
addr16
daa
push
pusha
out
mov
popa
scas
pop
call
or
insb
aam
fistpll
inc
aaa
fptan
scas
inc
outsl
and
jge
ficomps
shrb
xchg
mov
jecxz
dec
mov
outsb
test
bound
iret
mov
ds
ret
shll
loope
or
dec
ret
xchg
cmp
outsb
cmp
pop
jmp
push
repz
in
movsb
aas
pop
lock
imul
rol
pop
sbb
les
ljmp
cs
dec
js
adc
push
imul
or
push
pop
push
enter
or
inc
sub
movsb
popl
dec
fwait
mov
cmpsb
jmp
sti
or
jbe
fldcw
cs
insb
add
xchg
xchg
out
mov
and
mov
cmp
mov
jo
bound
mov
push
sbb
push
push
xor
enter
cmp
lret
lds
push
sbbb
lods
mov
pop
xchg
cltd
pop
dec
or
jl
and
jp
mov
mov
pop
xchg
ds
out
jmp
pop
jecxz
ret
add
dec
adc
pop
insb
inc
cmp
mov
adc
shll
jl
jmp
loop
test
mov
imul
sub
loop
ljmp
xchg
int3
or
icebp
aad
fbld
xor
xor
stos
out
test
jne
push
sbbb
jge
fs
mov
mov
addps
push
sbb
in
rorl
xor
in
clc
loop
and
cmpsl
adc
ja
add
lcall
cmp
lret
gs
add
clc
bound
aaa
inc
and
pop
lock
pushf
sub
push
adc
iret
dec
shrb
outsb
subl
push
roll
pop
out
filds
inc
cli
inc
cmp
push
jg
loope
je
jmp
adc
and
inc
push
push
shl
lret
pop
xor
and
cltd
jl
inc
jae
mov
sar
jmp
push
sub
mov
fistpl
clc
lds
cs
dec
fsub
pusha
popf
or
shlb
test
xchg
icebp
outsb
xchg
cmp
popf
or
add
and
pop
jecxz
adc
xchg
xlat
dec
rorb
scas
sbb
into
enter
icebp
mov
dec
gs
sbb
popf
call
lock
sbb
jg
inc
repnz
fsubl
orb
adc
repnz
gs
fimuls
jecxz
iret
cmp
jmp
and
fxam
loopne
add
mov
jns
adc
cmp
or
xchg
aad
fnstsw
frstor
insb
mov
int
call
pusha
or
lods
sbb
mov
cmp
je
add
pusha
push
xor
lock
xor
mov
les
add
mov
and
dec
mov
fimuls
mov
je
test
push
pushf
push
fcoms
mov
idivl
fistpl
sub
adc
xor
xchg
dec
outsb
mov
shlb
add
mov
int
test
aad
cmp
sbb
sbb
test
enter
mov
lret
mov
sub
cld
and
lcall
add
cmp
xchg
sub
mov
fsubr
lret
enter
into
push
or
xchg
aam
decl
sbb
or
fcmovnu
push
jecxz
daa
andb
inc
and
and
insb
shl
lea
push
and
add
inc
inc
and
adc
sub
lret
lret
pusha
sub
repnz
fsts
cmp
lods
sbb
gs
mov
mov
mov
inc
sbb
test
or
js
jo
or
inc
fldt
outsb
leave
jne
stos
js
inc
pop
imul
fmuls
push
add
andb
adc
loop
hlt
dec
inc
push
mov
into
push
aad
jecxz
fimuls
lret
mov
add
cli
mov
pushf
push
outsl
add
cmp
mov
popa
push
subb
mov
lret
bt
or
mov
fldcw
pusha
in
lds
cltd
fs
clc
pop
or
daa
hlt
stos
mov
pop
inc
inc
mov
ficoml
js
push
push
mov
je
jp
mov
mov
mov
sahf
and
or
mov
daa
outsb
test
dec
aas
lock
add
ljmp
inc
test
outsb
sarl
stos
adc
outsb
hlt
pop
mov
fistpl
test
cwtl
mov
jne
sbb
lods
orb
and
adc
inc
stos
mov
les
pop
xlat
sbb
cwtl
repz
repnz
inc
sub
inc
jecxz
ficompl
gs
pop
xor
rcrl
hlt
and
sbb
mov
das
pop
movsl
mov
and
or
jno
lahf
popa
popa
pushf
sbb
jg
cs
cmp
inc
imul
sub
pop
data16
adcl
dec
fxch
xchg
sub
ja
lea
data16
mov
jno
shr
xchg
insb
dec
in
clc
adc
push
inc
insl
leave
lods
repz
sti
sbb
loopne
in
rcll
fcompl
arpl
adc
cs
xor
lock
and
mov
push
scas
cmpsl
lcall
fidivrl
and
mov
scas
cmp
xchg
inc
lcall
jg
lods
rcll
std
xchg
xchg
outsb
adc
dec
pop
dec
or
jns
int3
enter
cmp
rcr
pop
rolb
ret
in
in
shl
mov
jmp
testb
xor
and
add
ss
mov
xor
lods
test
xor
xlat
frstor
mov
movsb
xor
mov
outsb
fists
fnstenv
mov
push
cmp
mov
insl
cwtl
fisttpl
popf
je
addr16
or
arpl
jnp
aad
pop
push
mov
out
mov
lock
push
dec
mov
imul
das
fcompl
xchg
pop
push
int3
and
lcall
and
xor
loope
lods
fwait
cmp
mov
shlb
mov
inc
std
fsubp
fsubrp
mov
and
pushf
and
imul
mov
lret
mov
dec
fbld
push
push
dec
lahf
scas
and
clc
mov
lret
xchg
jl
decl
pusha
and
ljmp
jmp
andb
bound
adc
out
sahf
stos
mov
jb
sub
add
or
insb
arpl
jmp
inc
dec
jnp
cmpsl
and
pop
iret
popa
fldcw
pop
xchg
mov
mov
call
adc
pop
ret
int
add
mov
jp
shr
xchg
or
mov
inc
popa
add
fcmovnu
fsubrl
mov
imul
in
stos
test
add
cmc
add
adc
push
aam
lea
jne
add
idivb
jecxz
dec
pop
shll
push
and
rcrl
cmp
mov
dec
push
scas
ret
psubd
pusha
xchg
fcomi
hlt
inc
jge
outsb
jge
push
lock
loopne
into
jb
addr16
sub
mov
fs
popa
mov
jge
int
push
xchg
lahf
add
xchg
out
sarl
ret
rolb
jecxz
daa
cmpsb
push
push
lret
into
sbbl
stos
fs
xchg
cwtl
jle
mov
push
jecxz
popf
jno
icebp
xchg
cld
xchg
outsl
mov
subb
rolb
decl
or
xor
bnd
mov
imul
mov
fisttps
incb
insl
mov
mov
ret
popa
pusha
pop
ds
sub
jmp
lods
sbb
icebp
std
rorl
divb
enter
xor
aaa
jno
inc
add
fnclex
lock
cmpsb
ficomps
mov
aas
mov
add
test
mov
push
test
inc
out
scas
fisttpll
sti
out
ret
cld
in
bound
int3
ficoml
lret
mov
imul
rclb
inc
call
mov
orb
jns
jnp
frstor
hlt
and
push
inc
popf
fwait
shl
push
jg
xchg
mov
mov
shll
and
adc
mov
daa
inc
push
fwait
mov
dec
and
fimuls
push
lahf
movsb
clc
into
or
or
inc
insl
repz
aas
pop
fcoml
push
cmc
or
mov
xor
fisubrs
push
push
mov
adc
pop
cmp
sub
je
cmpsl
in
fwait
xchg
mov
mov
xchg
pop
pop
push
pop
push
mov
pop
call
and
push
inc
cmp
daa
cmp
pop
cmpb
dec
mov
or
in
sbb
push
push
lds
xlat
scas
fsubr
std
das
idiv
adc
lret
push
fstps
rolb
mov
test
and
icebp
cmp
cmp
std
dec
push
push
jnp
loop
in
sub
jno
cwtl
push
or
movsl
pop
ljmp
dec
sbb
dec
repnz
insb
sbb
pop
mov
es
pop
pushf
push
mov
xlat
lcall
arpl
add
xlat
imul
lods
mov
mov
xor
fisttpll
xorl
mov
mov
ret
cwtl
into
inc
sub
fwait
fs
xchg
stos
data16
lcall
add
loope
mov
or
daa
or
mov
push
push
hlt
xor
pop
and
mov
sub
pop
pop
insl
cmpsb
jo
sub
xchg
mov
popf
pop
orl
mov
adc
lret
sub
notl
adc
mov
push
sarl
add
or
jns
xorl
mov
fs
sub
add
test
decb
inc
xor
ret
jnp
cwtl
dec
mov
inc
jne
jmp
dec
inc
out
divb
pop
and
lea
je
mov
int3
jg
sub
cli
mov
movb
adc
fstps
movlps
pop
nop
pushf
lret
icebp
mov
cld
aas
mov
pop
add
int
lcall
mov
shrb
mov
int3
out
aaa
iret
sbb
dec
push
mov
mov
fisubl
sub
nop
mov
dec
lret
jp
sbb
pop
dec
xchg
idivl
push
push
lock
xchg
int3
cmpsl
pop
lret
cmp
jno
in
scas
or
and
dec
cmp
lods
idiv
and
out
cmp
xor
scas
cmp
pop
mov
mov
add
jl
dec
lahf
pop
aas
lock
mov
lahf
es
lea
sub
and
sbb
cld
xchg
mov
mov
sahf
mov
in
or
and
xlat
lret
xchg
sub
jmp
cmp
dec
fnsave
in
push
pop
push
hlt
push
add
sbbb
jo
call
pushf
repz
fildll
jb
jp
test
ss
in
imul
nop
lahf
call
clc
cmp
out
out
gs
stos
push
jb
sbb
int
in
sbb
add
inc
mov
sbb
ja
aas
out
push
or
mov
mov
divb
test
in
fcom
add
outsl
xchg
sbb
pop
out
add
sarb
nop
sarb
push
lods
dec
out
fdivs
dec
pop
pop
ret
push
cmp
int3
add
xchg
sti
int
imul
push
xchg
stos
sub
aaa
loope
push
push
cmpsl
mov
fidivl
test
inc
sti
sbb
ret
push
xchg
xchg
pop
adc
jo
mov
enter
icebp
outsb
push
leave
xchg
test
jnp
fcoms
fdivr
sahf
add
xor
nop
mov
push
jnp
shl
movsl
shrb
jl
push
mov
and
pop
and
mov
out
int3
sbb
mov
mov
and
sbb
out
sbb
sub
jl
push
push
leave
dec
push
sbb
dec
cltd
pop
incb
lea
and
push
cmp
cmp
mov
lock
push
loopne
rclb
jb
inc
push
inc
cmpsb
inc
out
clc
scas
sub
mov
pop
scas
sub
lret
and
iret
pop
jmp
mov
add
and
clc
add
stc
dec
dec
fptan
inc
lds
divb
inc
jecxz
mov
out
idivl
outsb
xlat
push
lds
roll
fs
and
mov
jge
cld
add
cmp
sbb
sub
mov
jae,pn
pop
xor
or
cmp
shl
mov
jmp
dec
pop
in
repnz
mov
inc
jg
clc
mov
lcall
mov
movsb
out
loope
push
call
xchg
lret
aaa
inc
inc
jne
mov
fadds
sahf
or
data16
outsb
mov
or
sbb
sbb
sub
in
int3
push
addr16
arpl
ret
pop
subl
sub
rcll
sub
jecxz
xchg
jno
dec
mov
mov
mov
ljmp
sarb
int3
cmp
and
xchg
or
cmp
dec
int3
cs
xchg
or
mov
push
addl
pop
jg
inc
fwait
push
lods
jne
repz
frstor
jo
push
sbb
pop
std
inc
dec
test
jne
out
cmp
lock
inc
push
pop
mov
dec
aaa
push
gs
jg
and
pop
sbbl
enter
fsubp
push
mov
push
sub
shrl
fsubr
lds
inc
xor
jnp
dec
jecxz
pushf
xor
test
ret
fwait
bound
sbb
in
or
cmpb
in
or
mov
mov
xorb
jmp
inc
or
rcrb
pop
sub
orl
and
loope
arpl
cmp
add
das
bound
pop
push
mov
inc
cwtl
mov
orb
test
in
ljmp
add
ss
adc
std
in
call
pop
test
sahf
out
aad
ja
mov
mov
dec
adcb
push
push
mov
test
sbb
adc
dec
movsl
push
mov
bound
pop
push
push
pop
pushf
bound
and
sub
fstpt
or
xchg
hlt
fwait
jb
ds
add
jge
cmpb
in
insl
mov
xor
push
icebp
and
add
mov
outsl
shlb
loope
dec
repz
mov
enter
pop
ss
sbb
jbe
mov
loopne
and
aas
imul
pmaddwd
jne
add
push
scas
rcrb
lods
mov
xchg
popa
and
push
push
cmp
xor
movsl
lods
push
lea
outsb
adc
stos
sbb
push
mov
mov
sub
or
inc
and
out
mov
inc
mov
mov
or
sbb
xchg
mov
scas
xor
xorl
push
and
ss
out
fwait
ret
gs
xchg
xor
seta
xlat
xchg
imul
cwtl
and
pop
lahf
cmp
push
mov
push
cmp
test
and
dec
cld
fbstp
icebp
jge
xor
cltd
fsubl
fisubrl
in
or
das
xchg
sub
in
imul
adc
inc
add
and
push
push
mov
fldl
sbb
push
out
lock
xchg
fisttpll
std
jnp
inc
roll
add
out
mov
fs
xchg
mov
adc
jle
cmp
lret
push
jecxz
popa
jmp
pop
or
xchg
or
fsubrs
scas
xchg
imul
cli
mov
arpl
and
test
in
mov
mov
sbb
xor
or
ret
push
push
pop
lret
pushl
enter
test
push
ss
add
mov
xchg
or
movsl
pop
jne
push
adc
ret
bound
mov
xor
cmp
mov
push
ficomps
dec
push
lret
xor
test
push
jb
dec
xchg
pop
rclb
jno
mov
xor
mov
not
dec
jo
pop
sahf
jo
push
stos
aaa
pushf
push
cmp
sub
xor
jecxz
arpl
pop
test
dec
pop
and
popf
and
lods
or
lcall
push
cmp
mov
cmp
femms
push
loope
ss
into
or
aam
inc
sbb
or
adc
clc
fdivrs
adc
in
cmp
adc
jmp
movsl
aam
gs
add
and
daa
add
sub
mov
push
iret
shlb
cwtl
push
xchg
lret
sbb
pop
out
mov
xor
xchg
dec
mov
xchg
fisubs
shlb
jbe
xchg
enter
pop
or
sbb
mov
xchg
mov
cld
inc
out
push
dec
cwtl
sbb
inc
jmp
inc
fisubl
sub
test
inc
jmp
fnsave
aad
mov
in
sbb
xchg
mov
and
and
leave
dec
sti
xbegin
push
sub
aas
mov
arpl
frstor
mov
mov
gs
repz
or
xchg
arpl
add
sbb
sbbl
inc
sahf
xor
rolb
in
iret
mov
inc
cmp
fcomps
add
sbb
imul
and
mov
inc
mov
mov
in
cmp
aam
pusha
ljmp
jle
paddusb
xor
stos
or
in
repz
pop
xor
mov
mov
fcomip
cmc
mov
pop
int
adc
orl
fisubl
jp
ror
pushf
add
xchg
or
sub
scas
push
push
test
mov
gs
ret
inc
sub
push
or
aad
mov
cmp
cmp
andb
mov
dec
in
mov
call
mov
in
lret
pop
hlt
cld
pushf
mov
or
out
testl
mov
xchg
cs
ljmp
jecxz
mov
push
xor
lock
mov
lods
xor
mov
es
mov
mov
pop
mov
aad
aas
xchg
sti
out
lahf
jbe
mov
jge
add
add
stos
mov
or
push
cmp
sub
stos
lea
adc
in
sub
cmpsb
fwait
cmp
xchg
jl
test
push
loop
lahf
cmp
ret
mov
jnp
jae
loop
jp
jg
cmp
sbb
mov
addr16
lods
fistpll
mov
arpl
mov
xorb
imul
sbb
sub
aam
mov
loop
in
pop
cmp
in
and
jo
adc
jp
hlt
outsl
fdivs
mov
push
test
insb
arpl
icebp
fidivrs
repnz
das
sub
es
push
ja
add
enter
data16
and
in
sub
dec
int
clc
ss
xor
jl
cmp
mov
gs
jnp
pop
mov
cmc
imul
fmul
stos
jmp
sub
stc
pop
xor
fildl
sbb
in
mov
sti
fldt
adc
imul
inc
rcrb
shrl
add
lret
movsl
loop
pop
out
mov
mov
rcrb
test
mov
or
sub
mov
sti
repnz
jno
ret
pop
sbb
test
stos
xchg
sub
cld
jmp
dec
jno
ljmp
arpl
jo
inc
rcll
lahf
call
inc
imul
mov
dec
mov
fs
or
rcrb
xor
push
or
sub
ret
or
inc
pop
mov
push
add
xor
stc
shrb
jae
xchg
cltd
movsl
pop
xchg
sub
push
movsl
scas
or
xchg
lods
cmp
je
dec
sub
inc
mov
test
addr16
sub
cltd
movsb
std
push
pusha
sbb
jb
sahf
and
gs
mull
dec
imul
and
loop
dec
int3
loop
mov
imul
into
xor
pop
xchg
cmp
xlat
mov
jnp
into
push
inc
rcrl
test
out
test
push
sub
mov
js
mov
xor
inc
sbb
xor
imul
bound
cmpsl
and
or
test
mov
push
cmp
out
push
sbb
aam
loop
enter
sahf
adc
inc
push
or
loop
outsb
push
out
dec
mov
into
dec
jno
testl
cwtl
repnz
pop
aaa
adc
xor
fstl
inc
push
add
jne
adc
in
and
jne
cli
xchg
inc
mov
insb
inc
mov
loop
lret
push
je
out
mov
mov
inc
imul
mov
sbb
xor
inc
dec
lret
mov
pop
mulb
push
jb
push
into
sub
insb
nop
pop
inc
push
and
repnz
mov
cwtl
mov
adc
frstor
into
push
out
clc
sub
notb
lea
incb
gs
mov
push
sub
out
mov
jecxz
sbb
xchg
cli
or
and
mov
jmp
int
leave
sub
test
push
xor
xor
ljmp
push
adc
add
inc
sub
rorl
xor
clc
lods
test
adc
insb
inc
push
jg
outsb
cmp
pop
stos
mov
push
push
test
sub
xchg
xchg
push
movntq
fdivl
data16
sbb
out
mov
dec
and
jl
jmp
xchg
pusha
insb
and
push
mov
xor
mov
xchg
mov
clc
adc
out
call
mov
decl
insl
jp
sbb
push
roll
lods
arpl
sub
into
mov
test
imul
push
jmp
lock
adc
mov
scas
xor
jp
pop
mov
pop
lahf
out
add
bswap
jp
lret
jno
pop
mov
aam
sbb
mov
dec
sub
insl
pop
pop
fisubrs
and
mov
cmp
fdivrs
movsl
cmp
xchg
fnsave
sbb
arpl
push
nop
cmp
lods
lods
in
add
mov
orb
cmpsb
pop
mov
mov
clc
mov
adc
in
pop
dec
ljmp
sbb
xchg
pop
mov
inc
cmp
dec
lea
sbb
daa
dec
jnp
cmovp
arpl
fcomps
or
or
dec
adc
push
sbb
stc
ljmp
pushf
xor
shrb
xchg
or
lret
out
mov
subb
sbb
mov
pushf
lock
xor
push
push
adc
clc
sbb
bound
pop
mov
sbbl
fisttps
jae
xor
xchg
mov
and
push
idivl
shrb
in
or
nop
insb
inc
or
lahf
mov
xchg
fmuls
inc
inc
mov
rcr
je
fdivr
test
jp
xchg
jb
test
sti
cmpsb
scas
popf
mov
push
ret
add
scas
pop
je
cld
inc
xchg
inc
enter
mov
cmp
test
xor
bound
je
or
sbbl
cltd
movsb
insl
mov
ds
bound
clc
in
mov
and
mov
sub
iret
arpl
fwait
inc
pop
frstor
or
cmpsb
cmp
insb
jp
pop
je
cmpsl
ret
ja
mov
dec
incl
aas
add
movsl
jge
xor
xchg
loopne
out
xor
push
inc
inc
aaa
arpl
in
dec
mov
sti
lods
sub
mov
sub
pop
arpl
pop
decl
loope
mov
subb
cmp
dec
aaa
mov
xor
aam
icebp
ljmp
sub
cltd
les
pusha
adcl
lcall
std
data16
fsubrs
imulb
das
adc
ljmp
enter
stos
paddusw
adc
push
cltd
and
xchg
jns
sahf
ret
pop
pop
icebp
cmp
cmp
pop
sbb
adc
iret
into
jg
xchg
ret
xchg
lret
data16
xlat
xchg
cmpsb
ficomps
into
mov
lahf
shrl
pusha
jmp
mov
jae
lret
addr16
mov
add
rolb
dec
sbb
mov
adc
repnz
xor
xor
dec
push
outsl
push
and
adc
in
dec
fnstcw
jae
imul
push
adc
lods
mov
add
push
fbstp
loopne
xchg
int3
and
adc
ficomps
xor
aad
pop
or
jecxz
out
in
sbb
xor
aaa
orl
cwtl
dec
mov
leave
addr16
negb
adc
jae
ret
or
pop
fiaddl
ljmp
insl
int3
icebp
push
xor
jbe
dec
jmp
adc
lock
xor
push
rcrb
daa
test
repz
fldcw
stc
je
arpl
inc
or
subb
stos
jecxz
mov
sbb
enter
and
dec
js
mov
ficomps
enter
and
data16
and
push
add
fstps
call
mov
mov
movsl
sub
sahf
std
test
aas
add
pop
pop
jns
pop
fs
mov
addr16
movb
mov
sub
pop
push
mov
pop
sarl
iret
lcall
xchg
cmpl
je
bound
fidivs
icebp
shlb
imul
push
ret
push
dec
leave
xor
jnp
sti
ret
add
fdivs
add
mov
jnp
mov
pop
incl
int3
into
xchg
ss
xchg
pusha
mov
ret
aaa
mov
shr
pop
inc
test
das
sub
movsl
mov
jnp
xchg
add
jbe
cmp
xchg
lea
mov
lods
pop
mov
xor
jno
fisubs
sbb
stc
sub
in
xor
std
lret
insb
or
xor
test
fbstp
lret
mov
lret
aad
mov
bnd
fcoms
imul
mov
outsb
jecxz
cmpsl
xchg
inc
or
push
push
scas
cli
add
inc
cmpsl
adc
int3
negl
xchg
jp
jo
mov
aad
les
xlat
sbb
hlt
or
and
jb
popa
pop
xchg
xor
aas
adc
sbb
int3
mov
jae
ja
sub
jae
sti
jno
or
and
dec
push
dec
ret
lock
adc
addr16
sbb
pusha
gs
icebp
adc
jecxz
out
imul
adc
mov
pop
mov
or
les
jne
dec
mov
mov
imul
xchg
pushl
or
jbe
mov
stos
int3
xchg
rcl
shrb
call
adc
pop
mov
push
adc
ret
xor
shrb
sbb
iret
mov
sub
nop
dec
adc
jae
loopne
fwait
pusha
mov
imul
mov
xchg
jl
clc
movsl
and
dec
popa
mov
mov
push
jecxz
pushw
rcrb
orl
ret
xor
add
mov
enter
rorl
push
push
pop
jp
inc
std
or
lods
mov
fcmovnb
inc
mov
popa
out
mov
xor
lock
ss
add
notl
movb
push
inc
js
jle
inc
mov
es
test
push
aas
loop
mov
bnd
outsb
loopne
shrl
jp
mov
adc
mov
pop
outsl
ret
push
push
sub
sarl
push
mov
stos
and
cmp
mov
mov
mov
xor
in
in
add
je
js
xchg
sbb
xchg
mov
int
fisubl
inc
loope
push
pushf
repz
mov
addl
shll
idiv
shl
inc
cli
push
scas
stos
jbe
xor
and
add
out
into
aaa
lret
lcall
mov
inc
out
mov
xchg
ret
popf
imul
lret
pop
pop
mov
shlb
outsb
cs
dec
inc
jmp
jo
scas
jb
fnsave
es
arpl
nop
das
aam
pop
add
fistpll
push
sbb
mov
hlt
fistpl
and
push
dec
das
cwtl
adc
mov
jl
aaa
cs
int
pop
jge
lock
ficomps
rol
jne
cmpsb
cmc
push
cld
mov
fcmovnu
add
ret
dec
jl
rorb
mov
xlat
cwtl
push
mov
and
popf
test
mov
sbb
xchg
int3
push
push
cmpsb
xor
pop
enter
xchg
and
into
xlat
mov
loope
sub
aaa
mov
mov
mov
movsb
mov
push
adc
sub
mov
sarb
jl
adc
std
cmp
jae
dec
daa
mov
jl
cmp
mov
daa
dec
cmp
pop
jmp
cmp
cltd
subl
imul
ret
adc
sbb
xchg
mov
mov
stos
cltd
lods
pop
mov
push
jmp
gs
xchg
pop
lods
mov
out
inc
inc
repz
ucomiss
hlt
aas
inc
push
add
inc
ljmp
inc
dec
insl
in
adc
cmp
lret
and
lock
xlat
mov
adc
test
jge
pop
daa
js
or
push
cmp
mov
dec
icebp
and
pop
insl
pop
in
insl
and
sti
adc
pop
out
cs
lods
xor
and
mov
mov
stc
pusha
mov
xor
sbb
cmpsb
add
jbe
aas
mov
scas
add
jmp
stc
mov
dec
or
xchg
faddl
ljmp
rcrb
xor
lods
outsb
sub
fs
mov
insl
loope
dec
sbb
shlb
call
fucomp
testb
pop
xor
jae
js
cmpsl
cmp
rclb
xchg
xor
loopw
insb
test
mov
pop
fbld
add
sbb
and
insb
mulb
sbb
loope
dec
in
fsubl
adc
xchg
in
dec
xchg
movsb
cmp
test
adc
aam
shlb
les
jecxz
jne
outsl
imul
mov
sub
push
dec
leave
inc
jnp
xor
dec
sub
mov
mov
adc
popf
cmpsb
xlat
or
bound
xchg
push
test
out
add
fidivrs
loopne
and
fisubs
push
pop
iret
inc
punpckhwd
das
mov
pop
sahf
add
jle
mov
jbe
push
rolb
stos
inc
data16
mov
push
add
cs
cld
pop
push
pushf
popl
jp
pushf
sbb
shl
push
jno
xor
int
or
nop
out
xchg
inc
into
push
mov
inc
data16
inc
enter
cwtl
ljmp
jnp
jno
enter
push
sbb
and
mov
loopne
and
pusha
loope
or
insb
xor
icebp
xchg
sbb
pop
inc
pop
pop
stc
jns,pt
mov
sarb
inc
test
xchg
icebp
cld
es
test
push
push
dec
aaa
push
cmp
cld
jge
stc
jp
mov
add
inc
jl
call
inc
xchg
sub
sbb
loopne
lahf
pop
clc
je
xor
push
out
add
std
sbb
movsl
int3
in
jns
and
rol
je
mov
push
mov
clc
lret
insl
adc
mov
data16
and
mov
mov
sbb
dec
fldenv
dec
or
jge
lahf
or
ljmp
inc
and
sbb
push
sahf
xchg
dec
pop
sub
sbb
cmp
ficomps
and
adc
loop
pop
xchg
xor
lods
xor
sbb
fsubs
adc
mov
es
pop
mov
or
adc
push
call
jmp
cli
inc
es
mov
aaa
add
fidivrs
xchg
lret
inc
mul
cmpsb
int
imul
out
nop
add
lods
andb
dec
cmp
inc
je
sbb
push
adc
push
int
cmp
mov
pop
push
loop
mov
loop
hlt
sbb
shl
push
push
xor
into
inc
ret
pushf
or
aam
jp
inc
popf
testb
xchg
ja
or
inc
adc
dec
into
jle
or
fs
dec
or
cld
xchg
nop
dec
mov
push
fs
mov
stos
push
out
jbe
push
push
scas
out
jno
loope
or
rcr
push
dec
dec
ret
aas
jp
cmp
sub
adc
add
push
xor
inc
adc
push
bound
mov
xchg
call
pop
pop
mov
sub
cmc
pmaxub
or
or
dec
or
lock
clc
fimull
test
or
sbb
sub
jo
lcall
js
das
lahf
xor
xchg
push
or
cltd
popf
adc
fs
inc
je
and
sahf
pop
dec
push
lcall
xor
test
push
dec
ljmp
test
pop
or
es
sub
jns
bound
popa
adc
f2xm1
dec
xchg
stos
add
xchg
iret
int
sahf
xlat
pop
out
or
outsl
ss
mov
cli
jle
mov
sbb
mov
ret
test
ds
push
rol
and
lds
test
adc
xor
mov
test
adc
mov
lods
cmp
rcrb
push
into
mov
loop
test
lods
dec
pop
push
sub
mov
addr16
shlb
insl
das
out
pop
and
and
movsb
adc
cmc
and
cld
lock
jae
aam
and
xchg
jecxz
adc
aas
adc
sbb
int
dec
ficomps
outsb
jg
loopne
repz
and
lcall
adc
nop
or
mulb
subb
pop
in
sarb
mov
or
aad
mov
inc
jbe
movsl
adc
and
dec
icebp
lea
shrl
mov
fcmovbe
mov
inc
push
mov
dec
rcl
test
xchg
shll
adc
and
mov
sbb
dec
into
cs
out
mov
jmp
jge
pop
and
push
jle
hlt
sti
sbb
lds
mov
insb
mov
jb
out
dec
push
fnstcw
sahf
jg
mov
xchg
xchg
sbb
int
stos
orb
ss
xlat
jmp
mov
mov
out
jns
mov
xchg
add
fs
pushf
mov
outsl
sbbb
push
cmpsl
stos
int3
enter
sub
mov
int
int
cmp
or
mov
jbe
xchg
cld
loopne
mov
and
jbe
nopl
adc
fcom
clc
mov
jne
fsubp
mov
add
imul
dec
jbe
es
mov
fldenv
insb
leave
push
into
add
mov
test
loopne
sti
add
data16
jp
call
jne
rol
lret
jae
pop
cmc
mov
push
lods
mov
pop
add
insb
ss
pop
sub
inc
cld
sti
shlb
in
dec
fistps
mov
pop
mov
sbb
rorb
mov
dec
dec
push
adc
aad
sbb
jns
fimuls
test
mov
push
lret
cmpsb
and
cmp
lods
sbb
jbe
int3
xchg
mov
fists
or
dec
or
outsl
out
push
adc
mov
int3
pushf
pop
fists
out
pusha
inc
je
lcall
test
inc
dec
cmp
or
jne
scas
inc
cmp
js
jp
lock
shlb
in
ds
out
or
jno
jmp
in
pushf
loope
ss
mov
pop
xlat
xchg
pop
mov
push
roll
leave
insl
ret
call
lods
mov
mov
mov
mov
inc
popf
int3
xor
sahf
pop
out
jmp
scas
shrb
cmp
bound
fnstenv
inc
andb
inc
xchg
fnstsw
mov
xchg
popf
orl
sbb
push
mov
pusha
cld
fbld
sub
jbe
and
add
pop
movsb
pop
push
movsl
icebp
xchg
lea
mov
adc
loopne
or
xchg
int3
fld
push
mov
jmp
lock
xor
xor
xchg
lods
enter
loope
pop
push
ljmp
push
mov
xchg
imul
and
shll
sub
and
clc
cmp
xor
cld
ljmp
mov
pop
sarl
dec
in
test
pop
cmpsb
add
loope
fisttps
pop
xor
out
dec
js
std
cltd
jno
push
add
ja
jb
adc
mov
outsb
dec
loop
ret
data16
outsb
subl
insl
cmp
jbe
inc
jg
and
cmpsl
or
xor
insl
dec
add
stos
mov
ljmp
andl
fsubrp
movsl
pop
xor
xor
mov
fnstcw
dec
push
pushw
aas
cld
out
sub
mov
jmp
je
movsb
adc
test
pop
enter
mov
mov
mov
jmp
inc
loop
mov
fs
jb
rcrl
leave
pop
movsb
imul
cwtl
or
or
loopne
cmp
mov
jbe
aaa
mov
div
ror
data16
pop
sbb
ret
mov
mov
and
mov
rorl
sub
ljmp
pop
mov
push
push
jl
jno
cmp
xchg
or
jne
jae
push
sbb
pop
cltd
shrl
pop
into
xchg
or
push
cmc
mov
fs
push
sbb
add
jge
sbb
pop
sarb
sti
jbe
pushl
dec
pop
dec
fidivrs
cmp
jbe
pop
add
dec
cmp
out
lds
pop
rorl
cmp
xchg
insl
lds
mov
mov
inc
cld
xchg
pop
jns
push
movsl
mov
out
sahf
cmp
lret
stc
push
fdivrs
imul
icebp
dec
sbb
push
pop
adc
dec
movb
dec
flds
inc
aad
pop
xchg
inc
pop
fwait
stc
inc
jae
add
dec
push
lea
fcomps
out
mov
mov
out
or
add
mov
inc
movsl
add
xchg
into
inc
cs
icebp
inc
and
mov
enter
sbb
jno
pushf
cmp
call
paddusw
jae
jl
push
adc
fsubrs
outsb
cli
and
add
and
ret
scas
cmpsl
fisttpl
push
xchg
call
sbb
mov
cmp
imul
pop
mov
je
out
mov
ret
ljmp
xchg
pusha
dec
push
sbb
ficomps
jle
dec
or
cmpsl
out
lock
call
xchg
fists
xor
inc
outsl
shrd
mov
adc
div
fldt
xchg
push
pop
shr
ja
adc
cmp
int
pop
std
bts
pop
xchg
test
or
pop
mov
sahf
inc
aaa
sub
das
aam
jmp
sub
xor
into
add
mov
cmpsb
clc
mov
mov
ds
add
mov
insl
sbb
jb
xor
jmp
push
adc
ljmp
roll
je
dec
xchg
adc
jo
mov
inc
js
ret
inc
dec
addr16
cmp
les
lret
loopne
xor
jo
inc
mov
adc
std
add
int
inc
aaa
nop
jne
lock
test
jb
outsl
xlat
iret
and
sbb
aad
pop
shll
jne
xchg
lret
and
repz
addl
lods
xchg
and
shll
sahf
dec
mov
push
fs
cmp
clc
sub
icebp
lock
push
inc
les
cld
or
inc
rol
dec
hlt
in
push
xor
test
mov
dec
jge
mov
clc
jg
jae
jmp
dec
xchg
fidivl
mov
outsb
xchg
push
cmc
jecxz
cmc
push
sub
dec
cwtl
adc
das
mov
adc
xchg
push
add
roll
pop
xchg
jo
loopne
xchg
pop
cmp
adc
mov
or
inc
ret
outsl
outsl
mov
pop
enter
adc
gs
mov
les
push
cmpsl
cs
fxch
insb
sbb
xlat
int
pop
dec
ret
sbb
jns
cmp
lods
loope
outsl
pop
mov
testb
test
pop
mov
push
cmp
dec
add
sub
fsubrl
aas
push
mov
push
ffree
stos
xor
lds
lds
push
and
mov
sub
mov
mov
popa
cmp
push
mov
out
data16
and
cmpsb
aas
arpl
dec
sbb
xor
push
cmp
adc
insb
jnp
push
lods
pusha
mov
js
enter
fstl
paddq
cmp
jne
iret
mov
add
negb
sbb
mov
dec
stos
cltd
notb
and
stos
fisttps
adc
push
addr16
out
pushf
xchg
inc
sarl
pop
add
mov
cmpsl
div
cmpsl
jge
into
jb
iret
push
adc
xchg
inc
push
pusha
sbb
push
inc
idivl
mov
and
pop
mov
and
and
sbb
inc
outsb
or
mov
jp
in
cmp
mov
inc
pop
sub
or
jecxz
mov
jne
fisubs
pop
decl
xor
and
loop
frstor
std
das
outsb
xor
xchg
mov
pop
pop
ror
adcl
push
fbstp
and
jp
iret
adc
pop
push
icebp
mov
adc
adc
add
outsl
jecxz
enter
xchg
shrb
xchg
mov
dec
rorb
push
out
ljmp
sub
xor
jo
mov
andb
push
shrb
or
mov
stos
fimull
mov
mov
push
dec
push
test
icebp
inc
ljmp
aas
rcrl
adc
addr16
sub
or
jne
add
shlb
push
mov
or
jg
jae
rcr
scas
dec
into
sarb
cmp
imul
cmp
enter
adc
dec
and
lret
stos
jno
pop
insb
xchg
fisubrs
push
scas
scas
sahf
mov
dec
inc
mov
insl
div
push
or
pop
adc
out
sbb
icebp
pop
loopne
sbb
xor
push
jns
jge
das
push
lods
fwait
xor
or
pop
nop
leave
jp
inc
mov
sahf
jmp
les
into
mov
sub
mov
stos
push
test
xchg
push
loope
out
pop
sti
mov
out
jno
mov
adc
jb
hlt
sbb
fidivrs
dec
in
adc
in
bound
call
pushf
imul
stc
arpl
dec
adc
mov
pop
sbb
aam
sahf
sbb
or
or
jp
push
dec
cwtl
imul
rcrl
or
cmpsl
ds
mov
pop
sbb
jl
xchg
in
stc
sbb
mov
aam
sbb
cmp
mov
dec
stos
mov
ja
sbb
mov
mov
adc
adcl
xor
adc
push
mov
or
xchg
add
mov
add
push
loope
jge
inc
or
inc
xor
add
popf
fs
push
xchg
push
hlt
inc
jnp
je
push
cwtl
lea
cmpb
inc
and
inc
or
add
pop
sti
loope
das
imul
push
roll
sti
add
into
outsl
idivb
mov
mov
in
jecxz
stos
lea
addl
lds
adc
inc
jb
scas
in
jns
popa
mov
popf
cmp
pop
push
jmp
lret
aaa
sbb
pop
mov
lods
xchg
sbb
pushl
test
xor
into
int
ret
pop
add
loop
sub
jne
push
jle
aas
pop
jmp
lcall
adc
adc
frstor
dec
icebp
testl
pop
mov
pop
imul
push
pop
cmp
lret
ss
jb
enter
sbb
jb
nop
and
imul
call
lea
adc
hlt
mov
add
iret
xor
xchg
stos
loope
xchg
jnp
and
pop
aaa
jbe
push
mov
data16
arpl
pop
inc
arpl
adc
inc
jne
ficompl
std
add
pop
shlb
fstl
add
nop
sub
dec
fdivr
cmp
add
out
notl
jecxz
js
lret
pop
lret
pop
addr16
sbb
jge
sub
shlb
dec
insl
mov
jbe
cmc
adc
pop
and
pop
sbb
cmp
sti
jae
lahf
and
xor
sahf
jne
xchg
sub
xchg
lds
jb
xor
inc
std
imul
jp
scas
adc
test
sahf
or
mov
je
xchg
sbb
das
fcoml
inc
or
out
jae
mov
shll
lahf
ja
es
pop
stos
dec
add
rcrb
out
mull
aam
movsb
lahf
scas
cmpl
push
push
popl
mov
push
push
jnp
outsl
or
push
mov
xor
and
pop
scas
int3
add
or
pop
cmc
sarb
test
iret
repz
lret
iret
cmc
or
imulb
pop
cmpl
leave
jmp
inc
mov
das
sbb
ja
mov
out
das
add
dec
dec
or
push
push
fcoms
imul
sbb
xchg
pop
shl
adc
pushf
push
jle
lea
lea
in
or
mov
cs
and
mov
stos
into
push
pusha
pop
sbb
arpl
mov
aas
push
js
addr16
pop
inc
adcb
inc
xor
shll
movsb
xor
inc
jecxz
insl
sub
aad
cmc
iret
mov
aad
cmpsl
pusha
and
sub
and
loopne
and
cmpsb
inc
pop
data16
scas
mov
add
mov
or
sub
lods
jno
sbbl
cld
mov
jl
ret
test
cwtl
andl
lock
and
xchg
cmp
mov
push
test
nop
dec
insb
mov
popf
cmp
mov
mov
inc
call
popa
pusha
sbb
mov
xchg
cmc
subb
xlat
cmp
pop
mov
sahf
adc
aam
lods
or
js
mov
fistpll
out
aad
or
dec
lods
ffreep
adcl
mov
and
push
mov
pop
loopne
sbb
sbb
ja
and
cmp
sub
xchg
pusha
fimuls
pop
jg
popa
lods
lods
ja
jle
adc
or
xchg
sbb
adc
push
popl
mov
sbb
mov
cli
movsb
sub
rclb
test
into
add
jb
mov
fmuls
mov
gs
rorl
adc
xchg
pop
jb
aad
test
stc
popa
mov
xor
push
std
push
imul
mov
int
push
cs
and
pop
call
jg
jae
pop
std
pop
inc
mov
andl
mov
inc
adc
fdivrl
call
les
test
lods
dec
and
push
addr16
andb
mov
mov
inc
ret
out
mov
fs
cmpsb
push
sarb
addl
inc
js
in
aad
xor
rcrl
sub
lret
pop
repz
cli
fstpl
int3
pop
cmp
cmp
pop
xlat
add
push
pop
dec
and
lret
xor
loopne
and
repnz
and
or
push
and
clc
or
sub
adc
push
cmpsb
push
dec
jno
loope
cmc
inc
fs
jo
sbb
jo
mov
mov
mov
sahf
xchg
push
pushf
mov
xchg
jns
lea
outsb
push
jcxz
add
mov
lret
mov
ja
dec
or
scas
cli
xchg
call
repz
stc
push
mov
cmp
subl
or
push
sbb
fstl
andb
pushf
lock
add
imul
ljmp
fwait
cmp
mov
adc
cmpsb
pop
mov
push
insl
jns
xchg
in
scas
in
xor
pop
in
addl
push
pop
out
aam
insb
cmp
jbe
mov
rorl
jae
iret
repnz
das
adc
inc
xchg
iret
popf
xchg
in
loop
std
mov
sbbl
add
sbb
push
inc
sbb
mov
and
les
pop
xor
popf
mov
fldcw
lods
push
or
inc
jns
sbb
cmpsl
test
je
inc
mov
test
shl
mov
sub
xchg
out
fnstsw
mov
clc
hlt
jge
cwtl
popf
stc
xchg
cmc
imul
mov
call
arpl
xchg
fsub
sbb
inc
mov
inc
cmp
test
sub
or
les
movsb
popf
inc
movsl
fs
and
cwtl
ret
inc
and
mov
testl
ds
outsl
out
dec
ja
pop
shrl
mov
outsb
mov
lahf
push
mov
aad
mov
out
mov
fcomps
sbb
insl
fmuls
mov
pop
push
jge
in
jle
inc
sbb
push
mov
xchg
shll
xchg
orb
pop
xchg
test
shl
lea
cmp
dec
scas
ljmp
pop
out
ss
stos
push
xchg
test
je
sbb
jmp
jmp
xor
sub
adc
cmpsl
pop
negb
xchg
mov
add
je
mov
or
jb
aaa
sub
lret
movl
lock
push
dec
cmp
in
pop
jno
xor
xchg
das
mov
repnz
inc
sub
mov
push
insl
xchg
sbbb
cmp
test
mov
shlb
cld
jne
das
jl
into
ljmp
jo
adc
sub
mov
jmp
push
inc
xchg
lock
adc
stos
bnd
cmp
add
xor
filds
test
scas
mov
sub
fldcw
shr
lret
mov
aaa
lcall
insb
daa
xchg
dec
out
jae
scas
mov
loopne
mov
sbb
dec
xor
xchg
adc
xlat
sbb
sbb
arpl
stos
shll
nop
add
ret
sar
sub
pop
arpl
dec
hlt
test
jb
or
ja
mov
and
dec
aam
ret
or
les
ja
jp
imul
dec
cmp
shr
dec
and
xchg
out
ret
lcall
lock
mov
push
inc
cli
fdiv
imul
in
jecxz
test
sbb
data16
loopne
ret
out
addr16
pushf
ja
xchg
ret
sub
aaa
push
sbb
ficoms
int3
add
mov
xorl
or
xchg
cmp
lldt
mov
jp
js
shll
xchg
jle
push
push
inc
outsb
and
jae
jno
jmp
sti
pop
imul
bnd
lods
jl
and
dec
divb
decb
icebp
stos
fsubrs
xchg
jmp
xor
out
incl
jo
cmp
push
xor
xchg
pop
cmp
leave
xor
inc
and
clc
push
xchg
aas
shr
jb
scas
ss
adc
shll
dec
jp
or
xchg
cmp
adc
rcrl
mov
cmp
int
inc
clc
std
fwait
int3
ficompl
in
fbstp
rorb
lods
mov
int
loope
out
pop
and
test
fcomp
in
out
bnd
mov
push
mov
or
test
jl
out
inc
fwait
lahf
push
std
or
out
dec
xchg
cwtl
or
in
outsb
or
or
pop
idivb
xchg
enter
dec
adc
pop
mov
clc
out
daa
in
mov
icebp
cmpsl
popf
mov
pop
dec
lahf
cmpsb
jne
cld
pop
adc
testl
mov
rcrb
push
mov
stc
sub
lods
dec
adc
bound
mov
popl
imul
push
push
fs
sub
xor
pushf
out
in
inc
and
icebp
cmp
mov
loop
repz
imul
dec
aad
xchg
mov
inc
std
pop
add
add
cmpsl
dec
in
stos
ss
jge
roll
fcoml
dec
enter
cld
ja
in
cmp
mulb
ja
loop
inc
pop
sti
cli
int3
sbb
inc
nop
jmp
ja
mov
mov
out
hlt
xchg
xchg
js
push
cmp
std
mov
cmp
xchg
stos
sub
aam
sub
ljmp
iret
cmp
mov
sbb
insb
scas
mov
jae
pop
mov
ss
xchg
mov
arpl
into
lahf
mov
or
push
outsb
cltd
gs
mov
add
mulb
stc
sub
lcall
out
gs
imul
sbb
outsb
ret
int3
fsubr
test
add
xchg
sbb
inc
mov
sub
cmp
xchg
bound
les
mov
test
imul
aam
sub
js
or
cs
jno
out
or
popf
sbb
test
repz
fisubs
div
jmp
push
cmpsb
pop
jg
mov
adc
movsl
outsl
sub
xchg
adcb
stc
in
add
dec
jns
xor
cmp
scas
mov
jae
add
dec
mov
jb
fstl
ficoml
jecxz
ss
repnz
mov
test
ret
add
sub
add
stos
mov
out
pop
jecxz
push
movb
shll
cmpsl
in
pop
fdivrs
mulps
adc
stos
add
lret
fisubrs
clc
hlt
mov
pop
lret
pop
scas
sub
nop
xlat
sbb
arpl
bound
dec
ret
iret
ret
jl
shlb
mov
fidivl
in
fwait
in
adc
mov
repz
scas
mov
mov
nop
and
out
push
pop
cmp
add
mov
mov
mov
fwait
sbb
mov
mov
cld
jno
js
jnp
loope
sidtl
sub
jnp
outsl
repz
data16
iret
pop
stos
sbb
add
mov
adc
add
out
push
pop
pop
cmp
ljmp
cmp
xor
mov
jb
cmpsb
in
cmpsl
fwait
test
jns
jo
inc
subb
jl
gs
out
push
lock
push
out
xchg
fildll
dec
in
cmp
lds
cwtl
mov
data16
mov
ja
movb
mov
push
adc
push
lea
dec
shrl
leave
pop
cmp
jnp
xchg
push
sbb
sbb
stos
jbe
out
mov
jns
std
push
arpl
cmp
negb
sbb
jb
idiv
shl
loop
rcl
push
mov
mov
iret
sub
and
mov
repz
jle
dec
andb
out
mov
mov
icebp
add
stos
or
cmp
jbe
icebp
or
inc
add
movsb
xchg
xchg
push
jbe
and
jge
add
mov
mov
nop
mov
adc
loop
xchg
bound
mov
add
out
add
enter
jbe
nop
sub
xor
inc
dec
jp
loopne
xor
imul
iret
jns
popf
xchg
int
scas
out
xchg
fs
ja
inc
insb
or
push
gs
ret
dec
add
or
test
mov
mov
sahf
stos
arpl
and
scas
inc
lock
mov
xor
sbb
dec
pop
mov
fstl
or
fcom
mov
sbb
mov
or
push
xchg
mov
negl
out
les
decl
pop
jns
jmp
les
or
je
lds
sbb
test
dec
inc
enter
pop
movsl
xor
rcrb
inc
jno
es
pop
jae
add
mov
sub
jle
jno
loopne
mov
test
mov
push
and
add
nop
fbstp
icebp
daa
mov
push
mov
and
icebp
lret
lock
inc
and
or
cld
aad
repz
pushf
stos
out
or
fistpl
xor
aas
pop
push
stos
inc
out
in
shlb
or
xlat
and
mov
mov
addb
pop
or
stos
sub
jmp
aam
add
outsb
pop
sub
sub
jmp
inc
mov
and
mov
stos
ficompl
adc
loop
adc
in
inc
pop
es
enter
dec
fidivrs
out
pop
fcoml
mov
xor
mov
pushf
push
pop
jge
pop
xchg
std
sbb
repz
xlat
and
jnp
pushf
jmp
mov
dec
dec
popf
mov
hlt
mov
inc
add
or
or
lds
mov
cmp
ja
das
mov
pop
lods
loope
adc
int3
pop
mov
cmc
loop
rcrb
shl
jbe
lods
fldt
mov
jge
xchg
pop
xchg
aad
cmc
ret
push
or
insb
insb
test
out
push
imul
mov
lcall
inc
dec
xor
mov
bound
jg
hlt
lea
mov
sbb
lret
shll
jns
or
dec
pop
adc
adc
mov
pop
js
gs
fisubs
pop
aad
or
cmpsb
jge
mov
inc
and
cmp
je
and
adc
into
pushf
aaa
cltd
or
rcrl
xchg
loope
stos
daa
pop
mov
call
les
sub
push
rcrb
lahf
xchg
into
cmpl
cmpb
adc
rol
mov
push
andb
jae
xchg
sbb
leave
nop
pop
cmp
jb
ds
out
sarb
movsb
clc
mov
push
mov
cmpsb
pop
ret
add
sbb
xchg
jno
xchg
jo
into
pop
sbb
pop
int3
push
inc
cmp
loope
add
cli
fisubs
cmp
jmp
dec
jb
cmp
inc
shl
pop
push
call
imul
or
xchg
int3
movsb
insl
shrl
aas
leave
pop
lods
lock
fisubl
out
or
inc
push
push
repz
repz
xchg
push
mov
ret
test
jae
cmp
cmp
jno
inc
sub
shr
jns
ljmp
fwait
mov
scas
nop
aas
shl
sub
inc
out
imul
pop
faddp
mov
mov
push
cwtl
xor
sqrtps
notb
pushf
pop
push
cltd
insl
std
ds
loope
pop
fwait
cwtl
fbld
jns
xchg
test
or
pop
fwait
dec
sub
out
aam
jp
adc
faddl
push
mov
aas
repnz
pop
xor
daa
cmc
mov
push
inc
fldenv
in
outsb
adc
sti
mov
aas
jbe
dec
imul
sub
fisubrl
jecxz
addr16
in
mov
cli
clc
js
mov
xlat
jmp
loop
insb
pop
pop
repnz
adc
mov
mov
mov
aaa
in
sti
insl
sub
sbb
je
mov
repz
dec
ret
xor
in
in
xchg
mov
out
dec
popa
push
push
mov
sarb
adc
call
movsb
mov
out
xchg
dec
dec
mov
aam
pushf
cwtl
inc
les
mov
stos
jbe
nop
xchg
jecxz
fmuls
xchg
dec
xchg
sbb
pushf
or
ds
pop
test
jae
mov
sbb
sub
sub
repnz
xor
cs
sub
repz
xchg
scas
std
fcomp
popf
dec
aam
test
inc
mov
push
xchg
mov
shr
out
out
loope
rcr
xor
sub
push
cmpsb
push
cwtl
pusha
cmp
enter
gs
pop
je
sub
mov
inc
mov
mov
gs
int3
and
push
push
jg
cmc
das
mov
adc
shrl
push
or
jecxz,pn
or
mov
subb
out
xchg
inc
das
xchg
mov
or
xor
add
loopne
loope
mov
cmp
cli
jae
dec
mov
je
inc
xor
notl
pop
out
notb
adc
jmp
cmp
into
dec
jb
cs
test
je
jmp
sbb
imul
inc
lret
pusha
dec
lcall
xor
imull
fwait
jecxz
mov
xchg
push
imul
fwait
nop
les
jnp
rcrl
pop
lods
movsb
push
out
adc
cs
setno
and
jg
pushf
inc
push
nop
pop
xlat
lods
int
stos
lods
mov
js
mov
lret
insl
call
mov
push
stos
mov
push
push
jns
cwtl
xchg
add
or
push
pusha
push
xchg
jmp
loop
or
mov
mov
scas
xor
mov
inc
push
jp
popa
int
bnd
ss
jl
jnp
out
pop
imul
test
inc
mov
movsl
cmpsl
sub
xor
mov
and
aas
or
cld
xlat
add
je
ret
out
shll
shld
push
add
shll
inc
sub
sbb
lret
sub
pop
nop
repz
int
leave
sbb
xchg
add
sub
inc
in
rcrl
repnz
daa
fstpl
aad
dec
sub
and
adc
mov
add
div
std
xor
repz
fisubl
jo
xchg
mov
sub
add
mov
movsl
neg
iret
hlt
aad
inc
js
jecxz
mulb
cmp
jae
imul
push
lcall
sbb
outsl
mov
xchg
in
test
mov
lds
cmp
cmpsl
sub
push
out
icebp
in
nop
and
ret
jmp
push
outsl
cmp
lahf
loope
and
fistpll
push
pop
stos
mov
lahf
pop
mov
dec
mov
xchg
lods
jne
fisubs
ret
sub
das
cmp
in
push
fcmove
mov
sub
cmpsl
mov
xor
mov
add
mov
jmp
js
enter
rcr
mov
mov
adc
in
shrl
ss
repz
xor
xchg
mov
mov
sbb
fstpl
es
inc
loope
enterw
cmpsl
and
data16
fbstp
lock
push
out
rcl
adc
and
ret
inc
dec
xor
aaa
gs
les
push
pop
out
lret
lret
pop
lods
mov
mov
jmp
xlat
jle
enter
sub
andb
dec
mov
daa
mov
mov
and
mov
stc
rcrb
and
and
fstl
shlb
mov
sbb
ror
out
cmp
xorl
fists
mov
nop
push
or
das
jg
loopne
xchg
les
sbb
mov
in
clc
dec
jl
sub
sub
cmp
jmp
xchg
pop
cmp
xchg
shlb
test
sbb
mov
je
push
lock
jle
jmp
repz
push
aaa
mov
jp
lret
mov
scas
mov
insb
data16
mov
mov
sbb
cld
mov
xchg
fmuls
mov
inc
nop
mov
mov
dec
mov
cmpl
loop
aaa
mov
imul
pop
push
push
sbb
mov
shll
ret
adc
push
lods
cmp
xor
jle
add
test
mov
outsl
leave
movsb
push
mov
out
out
xchg
inc
aad
push
lock
loopne
xorl
pop
cmp
inc
ret
lret
stc
mov
bound
cmp
inc
and
adc
aam
jbe
data16
test
sbb
enter
inc
xchg
xchg
invd
adc
jl
sbb
dec
lods
push
xchg
lret
test
push
mov
add
es
flds
push
mov
sub
mov
neg
sbb
mov
nop
dec
adc
sti
mov
fs
dec
jg
mov
mov
inc
sbb
sar
dec
out
mov
jnp
mov
lods
lahf
lea
add
push
pop
dec
push
neg
dec
push
and
cld
int3
adc
mov
inc
mov
ljmp
inc
xchg
loop
mov
push
loopne
jae
jmp
pop
int
jp
adc
mov
int
or
in
cmp
cs
insl
push
sbb
sub
push
testl
cli
dec
sbb
jg
cmp
push
xchg
mov
dec
sbb
adc
out
mov
inc
cmp
inc
out
mov
test
call
stos
mov
jne
out
xchg
jl
in
mov
into
out
adcl
movsb
cmp
inc
aaa
ja
in
icebp
jns
shl
or
fstl
psubsb
sti
or
pushl
and
xchg
lea
out
mov
cmp
or
in
pop
and
dec
mov
jge
mov
repnz
pop
aaa
pop
xor
shlb
fiaddl
xchg
loop
shll
or
ficoms
sbb
loop
sbb
pop
xchg
imul
mov
outsb
shrl
push
sarl
int3
lahf
xor
cli
mov
cmp
pop
dec
xchg
jnp
dec
dec
and
shlb
add
mov
std
mov
and
inc
ljmp
fcmovnb
cld
outsb
mov
lcall
aad
int
lods
mov
sbb
adc
test
cmpsb
in
int
stc
adc
je,pt
bound
mov
data16
mov
jmp
xor
xchg
fsubp
insl
outsl
sti
rclb
pusha
out
lret
imul
stc
sbb
aad
popf
sar
mov
ret
sub
push
or
sbb
ret
xchg
lods
fsubl
xchg
and
push
insb
iret
je
into
dec
sahf
pop
lock
and
dec
mov
incb
adc
and
pop
faddl
sub
shlb
push
push
popa
les
dec
and
sahf
fldt
cmc
adc
jbe
inc
dec
call
inc
xchg
loopne
mov
orps
dec
push
enter
sbb
sarb
rol
pop
mov
mov
daa
jns
pop
xchg
ds
imul
xchg
repnz
clc
sbb
inc
xor
call
lds
adc
fs
loopne
shlb
movsw
push
jl
mov
dec
jecxz
scas
push
jbe
fcoms
xchg
pop
pop
aad
and
adc
mov
cs
nop
sbb
addr16
xor
adc
ljmp
in
loopne
test
je
sub
scas
test
fmuls
insl
fisubrl
xlat
das
test
test
lret
outsl
stc
aad
adc
hlt
and
xor
in
pusha
mov
inc
dec
jmp
sarl
and
xchg
stos
out
inc
push
outsb
in
mov
push
fisttpll
ja
or
pop
lcall
push
adc
jno
and
das
cwtl
popa
shr
pop
sarb
mov
ljmp
lcall
cmpsl
fists
mov
pop
dec
mov
jp
sbbb
or
popl
and
stos
xchg
xchg
int
cwtl
xchg
and
inc
pop
xchg
and
or
inc
jecxz
mov
pop
adc
iret
lds
sub
aas
xchg
and
adc
shrl
xchg
imul
aad
rcll
bound
cmc
adc
jl
insl
jbe
lret
lcall
and
shlb
mov
xlat
sub
aam
pop
mov
mov
pop
mov
pop
xor
sbb
xchg
movsb
fsts
sbb
sbb
clc
push
into
dec
dec
sbb
in
add
aam
sbb
iret
xchg
and
loop
jnp
or
add
and
xchg
mov
cltd
popf
repnz
push
pop
sub
jbe
jbe
push
mov
and
arpl
sub
push
adc
mov
xchg
fiaddl
ret
gs
and
and
ljmp
adc
pop
sub
in
fsubrl
daa
push
inc
clc
es
call
mov
stc
push
mov
jecxz
adc
xchg
mov
loope
gs
enter
dec
cmp
or
ficoml
jbe
loope
dec
sti
mov
icebp
or
int
decl
cld
in
pop
jbe
dec
dec
ljmp
daa
sti
in
fisubrl
pushf
or
lock
pushf
push
sub
dec
and
lock
jp
pop
push
jmp
lods
xchg
fwait
inc
xor
int3
cmp
lret
cmp
and
insl
daa
dec
aam
xchg
pop
mov
and
stos
dec
lret
mov
mov
and
mov
cmp
inc
ljmp
and
push
pop
cmp
fidivs
xor
rorb
addr16
pop
enter
jo
inc
test
fisubrs
dec
or
jb
jge
scas
fbstp
mov
jne
in
jns
xchg
in
std
adc
dec
xor
jno
shll
pushf
xchg
inc
jg
ret
xlat
xchg
push
test
adc
fists
push
pop
or
mov
scas
jno
mov
sti
insb
pop
das
sbb
push
loop,pn
jle
stos
leave
jle,pt
orb
repz
es
imulb
adc
into
xchg
lahf
push
inc
inc
decl
push
addr16
dec
test
sub
inc
stos
cli
inc
jl
lcall
iret
mov
sub
ret
cmp
lret
test
pop
ffreep
push
mov
lret
pushf
sti
inc
jbe
fadds
je
jge
orl
adc
mov
cmp
test
leave
cli
cmp
fwait
outsb
jmp
push
repnz
or
xchg
add
in
mov
jmp
jo
or
and
scas
add
jb
and
scas
out
jmp
sbb
fldt
or
add
movsl
test
mov
es
add
lea
pop
fnstenv
aam
cmp
lret
jl
and
xlat
xor
mov
hlt
out
ds
xorl
pusha
popa
cmpsl
jne
sbb
push
movsb
rolb
das
call
lret
mov
ljmp
dec
je
loopne
lods
fnstsw
xchg
bound
ret
or
repz
and
adc
cltd
xchg
subl
arpl
adc
mov
popf
mov
ja
lea
cli
cwtl
insl
push
imul
push
push
in
ret
std
adc
sbb
dec
test
mov
test
mov
leave
jbe
pop
daa
add
lods
sbb
or
mov
pusha
adc
stos
and
jle
loopne
imul
mov
subl
into
cs
cld
into
xor
xorb
and
scas
lret
inc
and
jne
add
adc
adc
iret
notb
dec
sahf
pop
xchg
lea
sahf
adc
xor
xor
cs
jmp
icebp
fisttpl
jp
sbb
inc
nop
out
sbb
faddl
std
flds
mov
imul
dec
cmp
push
loopne
lods
or
lcall
xchg
in
inc
dec
xchg
sbbl
sub
dec
mov
sbb
mov
xchg
and
cmpsl
pop
inc
dec
mov
dec
jno
inc
ja
mov
sub
in
and
lcall
cltd
or
fdivrl
fstpt
mov
pop
es
js
mov
push
pop
or
sti
aam
pop
push
cwtl
cs
adc
in
mov
test
inc
mov
jb
cltd
aam
call
iret
inc
cmpl
and
add
repz
aas
mov
shll
in
cmpsl
jo
aaa
fsub
hlt
scas
jle
sub
mov
add
fmull
inc
lea
rcr
pushf
or
xchg
pop
lds
mov
jp
rcll
or
jns
xchg
push
ficoms
mov
add
push
pop
push
jo
or
roll
outsb
or
ficomps
cmp
insb
dec
cmp
mov
iret
mov
xor
add
jns
arpl
cmpsb
add
inc
lcall
mov
loopne
cmp
adc
or
pop
jmp
popw
dec
das
adc
nop
mov
les
inc
jns
cli
pop
test
lret
pop
lods
sub
dec
xchg
mov
les
int
aam
mov
jns
push
data16
jmp
mov
cmpsb
inc
movsb
push
fs
sbb
lods
dec
dec
xor
gs
xchg
jo
and
add
inc
dec
aaa
cmp
xor
xchg
ret
xlat
pop
sbb
lret
mov
out
pop
subb
imul
jge
inc
xchg
out
popf
lcall
or
out
es
loop
dec
xchg
sbb
adc
cmp
sub
cmp
add
nop
in
pop
movsb
aaa
xor
inc
xor
pushf
clc
lods
dec
push
les
push
std
inc
cmp
lock
sarl
mov
jo
xor
inc
fimull
icebp
adc
fistpl
adc
jno
xchg
inc
shrb
mov
scas
mov
faddl
in
sub
mov
insl
scas
stc
cmp
mov
mov
cld
or
jnp
xor
push
shl
cmp
mov
inc
je
pop
cmp
call
adc
push
push
xchg
jge
int3
xchg
mov
mov
sub
pop
xorb
int
ds
mov
out
dec
dec
out
cmp
in
iret
mov
add
inc
scas
add
inc
dec
lahf
shlb
lahf
movsb
je
sbb
adc
mov
sbb
lods
cmc
shlb
movsb
sbb
cmpsl
ret
loopne
jae
pop
xchg
fstpl
xchg
outsl
push
sti
les
fisttpl
fdivl
ljmp
jecxz
cmp
xchg
add
adc
push
clc
dec
pop
inc
fiaddl
xor
scas
popa
gs
push
rcrb
cmpsl
xchg
mov
xchg
mov
sub
adc
xor
sahf
add
flds
cmp
sbb
ds
mov
clc
sub
insb
xchg
lods
cmp
adc
nop
out
in
iret
mov
hlt
rclb
mov
rorb
dec
fsubl
pushf
and
sti
xchg
adc
mov
push
je
insb
ret
and
jae
and
fstps
test
dec
xchg
inc
lock
cmp
jmp
scas
sbb
gs
pop
cmp
loop
pop
adc
clc
roll
in
sbb
pop
xlat
int
pop
jmp
sbb
push
shr
pop
mov
xchg
pushf
mov
push
push
invd
sbb
stc
push
sbbb
mov
std
or
or
jo
xchg
mov
mov
das
dec
adc
daa
out
int3
lds
outsl
stos
ds
lcall
lock
push
inc
inc
mov
inc
xchg
mov
mov
inc
xor
jne
out
mov
test
jb
nop
es
cmp
xchg
inc
fidivs
rcl
out
popf
pop
out
sbb
out
mov
inc
nop
push
sbb
stos
outsl
pop
dec
cmp
fdivr
dec
pop
clc
jb
xchg
jnp
cmp
clc
inc
mov
cwtl
sbb
add
or
adc
or
pop
negb
scas
mov
or
movb
sti
xchg
adc
test
jmp
jae
jge
aad
dec
cmc
scas
dec
and
int
repnz
dec
outsl
sbb
in
fistpll
xchg
inc
jne
add
adcb
dec
pop
aas
dec
in
xchg
mov
xor
sub
inc
mov
mov
mov
sarl
xchg
cmp
dec
and
mov
xlat
inc
pop
int3
inc
sti
fidivrl
test
das
pushf
sub
gs
xchg
in
psubusw
jmp
push
fldenv
jae
mov
mov
aad
icebp
jnp
mov
clc
cmp
mov
out
inc
mov
imul
or
or
pop
dec
mov
xlat
in
mov
lods
les
mov
pop
das
icebp
out
pop
cmc
insl
outsb
jg
shll
add
mov
sbb
adc
adc
jl
popa
mov
ljmp
je
imul
mov
mov
and
mov
add
cwtl
ret
pushf
arpl
fcoms
pushf
out
ds
xchg
mov
pushf
jo
push
shlb
lret
les
mov
mov
push
ret
out
inc
in
add
add
les
or
sbb
aam
dec
rclb
cmp
lret
jge
shrl
or
mov
outsb
dec
ret
scas
jnp
cmp
mov
inc
xor
and
scas
jmp
or
jp
loop
cwtl
jle
in
jle
movsb
daa
ret
test
mov
fcompl
inc
sub
imul
stos
cld
cs
aaa
test
into
sti
sbb
xor
scas
and
pop
xchg
clc
pop
push
inc
jecxz
jp
and
push
mov
mov
add
gs
enter
je
hlt
scas
loopne
in
stos
push
pop
pop
sub
subb
and
add
ficomps
out
push
shl
nop
xor
ds
mov
pop
cmp
or
inc
xlat
and
fdivrl
pop
fs
lret
filds
cmp
xchg
xor
mov
loop
adc
xchg
aad
or
sbb
in
lock
xor
jle
mov
and
mov
fs
jae
icebp
cmp
negb
cmp
test
bound
xchg
adc
lods
mov
ljmp
sbb
cmc
push
pop
jb
mov
jg
mov
loopne
jp
test
fs
pop
in
movsl
jo
jo
repz
andb
outsb
dec
fstl
mov
jne
lds
push
insl
dec
pushf
enter
cmp
xor
push
inc
inc
mov
mov
add
or
movsb
scas
outsb
roll
lcall
shll
xchg
xor
add
add
divb
mov
mov
aam
cld
clc
loop,pn
addr16
jnp
inc
andb
sbb
cmp
cmp
les
lret
dec
icebp
sbb
mov
or
nop
or
mov
nop
scas
ljmp
xor
loope
xor
mov
pusha
das
fs
xchg
sub
iret
xor
jae
icebp
xor
mov
rcrb
sub
data16
inc
jae
popf
dec
ljmp
jo
lcall
xor
jp
cli
mov
cmp
js
je
xchg
aaa
cmpb
roll
cmp
ds
jns
int
imul
jle
push
or
lcall
ror
dec
push
lods
mov
and
cmp
cmc
cltd
xchg
push
lods
repz
add
xlat
fiadds
xlat
lcall
inc
cmp
sete
mov
pushf
cmc
mov
fbstp
add
mov
inc
cli
pop
je
lock
xchg
adc
sub
and
mov
hlt
stc
cwtl
push
jecxz
mov
inc
and
stos
mov
mov
sub
stos
mov
mov
imul
stos
or
es
adc
aam
jg
cmpl
mov
cwtl
je
mov
sub
aad
fs
and
repnz
dec
and
sub
cmp
pop
lea
xchg
pop
pushf
loop
xor
aam
sub
mov
js
leave
mov
dec
push
nop
roll
add
add
fnstcw
push
xor
jbe
and
cwtl
jnp
push
nop
fs
ljmp
leave
leave
andl
or
sahf
daa
mov
aam
pop
xchg
cmp
dec
pop
pushl
cmp
sbb
and
test
sahf
mov
add
xor
in
outsb
pop
js
dec
roll
or
cwtl
add
lret
clc
xchg
xchg
negb
adc
bound
cmp
lcall
push
mov
xchg
ja
push
imul
xor
inc
mov
pop
stos
xchg
push
cmp
jmp
mov
nop
mov
xchg
push
aad
lock
gs
shll
xchg
xor
jo
dec
adc
jno
cmpsl
jne
stc
enter
xchg
or
adc
sbb
sbb
mov
hlt
in
dec
push
stos
jp
cli
int
lods
bound
ret
jbe
fnstcw
fbld
lcall
daa
andb
nop
movsb
sub
sub
or
shrl
inc
xor
inc
jmp
push
rolb
test
jecxz
int3
mov
sub
sarl
int3
ret
fsts
cmc
pop
out
les
call
pop
inc
pop
fbstp
sub
pop
mov
je
pop
ljmp
and
jns
push
push
mov
ret
and
inc
jle
mov
mov
std
or
in
sbb
push
fiadds
icebp
cmp
outsb
inc
pop
aad
aas
adc
inc
mov
es
mov
scas
or
mov
sub
repz
out
imul
testl
pop
cs
add
pop
jp
daa
and
mov
inc
stos
xor
lret
orl
mov
fistps
ret
sahf
inc
and
addr16
fwait
mov
ds
push
mov
sbb
inc
pop
enter
adc
lods
andl
arpl
lds
pop
mov
fidivs
jb
dec
jl
arpl
or
dec
pop
xchg
jmp
xchg
and
lahf
insb
inc
ror
mov
outsl
fnstenv
stos
mov
push
aad
dec
nop
ret
push
jg
mov
sub
clc
scas
loope
clc
repz
mov
fmuls
lods
int3
jbe
push
mov
stc
fcoml
jb
repnz
mov
dec
sub
mov
arpl
jg
mov
imul
pop
sub
lods
or
shl
adc
xchg
fsub
xchg
xchg
add
pop
xchg
js
mov
pop
jle
inc
shlb
push
xor
push
and
shll
in
push
inc
inc
fcompl
sub
mov
cmp
test
nop
jp
and
inc
xor
xchg
aad
and
lods
lods
xchg
mov
mul
rcrb
adc
push
test
lea
mov
adc
sbb
mov
sub
xchg
loope
or
loop
inc
lds
sbb
movsb
xchg
jb
mov
call
ja
clc
sub
out
adc
jne
inc
inc
sbb
ds
fcoml
push
fidivs
push
mov
mov
das
mov
or
insl
inc
cmp
ljmp
add
ds
dec
jp
outsb
xor
xchg
out
data16
std
enter
fisubs
jo
icebp
imul
or
ret
out
add
mov
cmp
insb
xor
rol
dec
sbb
pop
sbb
push
cmp
mov
insl
jno
jmp
mov
pop
dec
lret
pusha
pop
mov
je
dec
mov
stos
rorb
dec
data16
inc
add
dec
pusha
xor
adc
xchg
ljmp
js
xchg
scas
xor
lcall
data16
mov
ficoms
xchg
pop
cmpsl
rol
or
fisttpl
sub
test
mov
push
shr
movsb
fldenv
je
mov
cmp
mov
or
fcomps
leave
stos
dec
ss
jnp
sub
lds
fmuls
outsl
adc
insb
outsl
mov
and
cmpsl
cmp
movsb
adc
das
pop
mov
fildl
dec
jno
int3
lcall
rcr
push
cmp
pop
jns,pn
and
jle
outsl
jae
in
dec
cltd
icebp
dec
dec
subl
test
fcmovnu
lret
dec
add
jae
insb
mov
mov
fsqrt
adc
loopne
mov
popf
or
xor
xor
or
cli
scas
mov
notl
sub
cwtl
aad
ds
xchg
adc
les
pop
cmc
mov
mov
jge
jg
jecxz
fsubrs
std
out
repz
xchg
movsb
jecxz
popf
scas
stos
addl
xor
fldt
rolb
adc
fistl
push
inc
shll
cmpsl
push
cs
icebp
lock
pop
push
mov
call
insb
je
adc
sbb
lds
sub
test
mov
fs
push
xor
push
inc
test
popf
xor
sub
jno
mov
mov
mov
and
pusha
cmp
lret
mov
add
cmpsl
scas
sub
push
mov
jnp
pop
enter
ds
or
loop
add
stos
clc
mov
shrb
xchg
rorl
pop
loop
xchg
jae
int3
cmp
xor
cmp
shlb
lods
cmpsl
mov
dec
pop
and
leave
mov
mov
adc
jg
sbb
in
ret
pop
mov
inc
lock
jno
addr16
cwtl
xchg
or
or
test
fimull
mov
fsts
test
dec
dec
inc
xchg
lods
sbb
or
lahf
icebp
and
in
jecxz
mov
xchg
push
addr16
xchg
pop
xchg
das
push
iret
leave
daa
aas
je
push
or
xor
adcb
in
in
enter
or
and
jp
inc
xchg
dec
test
in
scas
in
xchg
and
imul
dec
mov
test
out
cmp
mov
sub
and
mov
xor
sbb
clc
dec
add
clc
aad
lcall
addl
dec
les
lds
mov
out
mov
dec
enter
or
inc
shr
push
lahf
divb
xchg
ret
sbb
mov
rcr
and
leave
mov
mov
dec
dec
jp
clc
push
sub
push
fidivrl
and
insb
mov
xor
sub
xor
push
dec
dec
sbb
mov
mov
mov
test
sub
cld
adc
jl
push
cmp
or
add
jp
pop
cmpsb
xchg
cli
cmpsl
hlt
jl
cmpsl
sbb
dec
cmpsb
aad
aaa
fcmovu
into
dec
jl
push
sub
push
stos
lock
mov
mov
and
and
mul
adcb
xchg
jg
jle
xchg
sub
adc
ss
or
mov
add
xor
lret
ds
add
sbb
out
cmp
sbb
inc
push
pop
mov
ljmp
and
lret
xchg
jbe
cltd
mov
cwtl
icebp
push
int
ret
and
mov
push
shl
icebp
mov
decl
mov
sub
pop
dec
jno
pop
gs
loopne
jbe
inc
imul
pop
mov
pop
mov
sbb
xor
jne
rol
mov
jno
xor
cli
mov
shl
xor
adc
jns
movsb
pop
outsl
fidivrs
lret
push
pop
inc
xor
mov
add
sub
cmpsb
pop
sar
repz
pop
inc
jp
or
fstp
inc
imul
and
fidivs
jnp
push
gs
dec
das
inc
xor
push
cltd
xchg
push
or
and
insb
pop
jns
icebp
mov
mov
negl
mov
mov
fistpll
cmp
push
or
std
and
test
cwtl
pop
bound
pop
fdivrl
sub
out
inc
cmpsb
inc
xor
mov
testl
aad
outsl
pop
mov
mov
fsubr
imul
mov
call
lds
rcrl
movsb
aam
inc
ljmp
inc
in
adc
arpl
lods
loop
insb
mov
adc
lcall
sub
fwait
jnp
adc
ss
test
xchg
sub
or
dec
jbe
stos
push
jnp
js
add
out
cld
pop
je
out
push
adc
xor
and
std
inc
out
mov
push
mov
mov
jg
mov
push
mov
cltd
add
stos
and
dec
mov
sbb
sub
mov
jmp
mov
sbb
rep
fsts
enter
out
jecxz
or
fcmovbe
insb
sub
xor
xlat
mov
dec
mov
xchg
test
sbb
repz
cmp
or
ret
mov
cltd
pusha
pop
jmp
push
xor
adc
js
sbb
lods
rorl
inc
pop
cmpb
lsl
shl
push
mov
aaa
cltd
xchg
lds
fstp
inc
lods
mov
sub
mov
xorl
ja
cmpsb
movsl
fistps
mov
sbb
add
push
mov
imul
movl
rclb
popa
out
mov
shll
cs
inc
adc
dec
mov
repnz
cltd
out
jb
inc
jecxz
dec
xchg
inc
sub
inc
mov
cwtl
rorl
mov
sti
push
outsl
mov
mov
rol
mov
adc
dec
mov
xchg
outsb
lea
sti
call
jae
mov
inc
jp
adc
lret
imul
mov
scas
pushf
cmpsb
popa
or
leave
sub
sub
jb
push
mov
pop
add
stc
and
les
in
push
cmc
cltd
loope
add
pusha
stos
filds
jg
inc
icebp
pop
pop
add
mov
cmp
mov
pop
loop
dec
aam
or
imull
ljmp
mov
dec
or
inc
std
cmp
add
sbb
push
mov
jb
mulb
int3
mov
je
sub
int3
mov
stc
cmp
ds
cmp
pop
mov
loopne
dec
push
or
jo
jle
imul
aad
or
add
gs
push
cmp
pop
mov
xchg
mov
cmp
aaa
int
negl
fsts
jnp
sbb
pop
cmp
pop
push
nop
pop
cli
scas
sbb
jb
lcall
push
jne
test
inc
push
loop
fisttpl
pop
lret
pop
js
popf
jo
adc
in
mov
dec
and
lods
enter
aaa
cld
push
ss
pop
addr16
jnp
pop
xor
addb
dec
and
int3
stos
push
aad
jae
mov
test
dec
pop
shlb
arpl
shrb
imul
cmp
inc
pop
push
mov
adc
iret
sbb
lods
push
imul
mov
iret
fwait
adc
bound
stos
or
sub
insl
xor
adc
ljmp
ss
jl
xchg
fmul
push
ret
jg
xchg
popa
fldl
xchg
dec
jmp
rorb
sub
sahf
jnp
movsb
outsb
mov
mov
fisubs
mov
aam
pop
test
aas
loope
push
rcr
aas
pushf
add
fs
scas
jnp
leave
adc
jle
es
pop
xor
pop
push
cltd
bound
popa
lret
pop
fiaddl
stos
loopne
xchg
in
cmp
mov
add
ret
or
and
dec
jecxz
push
lret
ds
lahf
aas
rcll
xor
cmp
cmp
mov
sub
das
pushf
lret
jecxz
sbb
cmc
outsl
out
adc
pop
out
in
push
dec
xchg
push
icebp
push
imul
out
dec
dec
mov
pop
mov
jae
or
lock
inc
stc
into
cmpsl
mov
add
cs
pushf
ljmp
lock
and
mov
adc
mul
mov
lret
inc
and
rcrb
push
push
movsb
int3
adc
dec
cmp
ja
and
in
pop
fisubrl
out
in
iret
fildll
cli
lahf
test
test
push
sti
hlt
jmp
mov
leave
push
imul
sbb
xchg
repz
fidivl
fcomip
orl
or
mov
andb
daa
lret
push
xlat
adc
xchg
cmpsb
jne
in
or
lret
xchg
lcall
xchg
stc
dec
xor
jl
rcr
inc
push
mov
nop
inc
popf
aaa
and
xchg
and
lds
xor
je
lods
fmuls
or
pop
mov
mov
iret
repz
inc
pusha
loopne
or
imul
xor
push
xchg
xchg
and
ret
inc
lock
cmp
pop
ljmp
aad
and
rorl
xchg
sub
out
aaa
lods
shll
ljmp
push
pop
pop
sbb
jmp
pop
fldt
add
mov
in
mov
jo
jns
adc
jge
inc
mov
imul
iret
inc
add
push
loop
leave
xchg
pusha
lret
cmp
loop
mov
pop
and
jnp
push
or
orb
mov
call
jae
mov
jb
in
cmc
sbbl
mov
addr16
inc
xchg
nop
push
cld
add
lret
inc
cmp
mov
imul
fbld
cmpsl
lds
adc
lds
bound
sbb
sarb
pop
movsb
aam
sub
fxch
mov
inc
int
pop
dec
movsl
mov
push
add
adc
add
xchg
inc
add
ret
and
sub
mov
clc
out
popf
pusha
or
ljmp
std
dec
mov
jmp
inc
mov
icebp
mov
fld1
js
add
fwait
pop
add
out
and
sbb
mov
jecxz
mov
sub
add
and
or
inc
loop
ljmp
pop
stos
in
or
mov
jecxz
xor
and
stc
and
or
dec
ja
lods
and
into
dec
push
iret
pop
push
jae
repnz
pop
push
out
lds
xchg
nop
dec
jbe
push
insl
sub
aas
ljmp
xchg
cmpsb
jmp
aam
mov
sarl
and
in
arpl
fcmovb
stos
cmp
sbb
mov
nop
mov
and
jae
cwtl
or
ja
dec
add
sub
dec
jecxz
adc
fwait
shll
jmp
push
mov
mov
jle
dec
mov
adc
mov
sar
jmp
ljmp
mov
sbb
cmp
inc
imul
push
pop
mov
jno
lds
pop
jle
or
enter
adc
bound
add
xchg
adc
shlb
inc
xor
subb
aad
data16
cmp
mov
push
or
jb
call
add
mov
ret
cwtl
xor
std
adc
cld
jle
xchg
sub
stc
add
adc
mov
jbe
and
or
dec
mov
vmovapd
xchg
jae
or
jbe
fildl
bound
xchg
pop
lcall
insl
clc
lahf
lock
push
sahf
or
push
dec
in
out
clc
std
sub
pusha
stos
push
jecxz
xor
fidivs
xchg
cwtl
lret
test
repz
xchg
mov
stos
das
adc
das
jno
dec
test
mov
xor
imul
fisttps
ret
inc
dec
xchg
lcall
mov
adc
pop
mov
pop
push
out
lock
cwtl
and
cmpsl
xchg
xchg
add
repz
pop
inc
ficoms
mov
sub
xor
and
pop
les
int
pop
repnz
xchg
and
enter
sbb
scas
push
popa
in
les
add
lcall
add
dec
sub
mov
iret
popf
xor
data16
stos
std
or
cmp
mov
mov
clc
faddl
add
mov
cltd
nop
fistpll
push
pop
fs
fdivrs
or
rcl
lods
pop
xchg
xor
dec
mov
mov
adc
inc
fisttpl
loope
mov
pop
mov
mov
test
cli
je
lods
bound
in
data16
cmp
mov
jb
pop
cmc
and
outsb
ret
adc
sbb
inc
repz
add
out
std
push
adc
cltd
cld
popf
fcoms
sar
push
and
pop
inc
xor
pop
dec
cld
sub
sub
out
inc
aas
jmp
add
je
pop
insb
jmp
mov
ret
mov
fiadds
mov
sub
sub
test
push
into
je
inc
mov
mov
dec
movsb
push
lods
mov
mov
insl
hlt
test
jnp
into
adc
ja
icebp
cmpsl
add
fwait
or
push
xchg
je
mov
cmp
insl
push
out
push
sub
adc
jle
mov
cmp
lds
ja
pusha
scas
es
incb
push
fidivs
orl
inc
mov
xchg
xlat
sbb
push
mov
mov
daa
stos
pop
xor
sbb
jg
xor
in
pop
adc
stos
dec
dec
xor
add
and
push
adc
popf
push
arpl
sbb
lcall
sub
add
push
imul
mov
xchg
dec
or
jae
test
xchg
fldl
testl
shrl
push
nop
inc
xchg
lds
int3
aam
loop
iret
outsb
inc
cmp
pushf
scas
dec
mov
es
xchg
push
push
subb
dec
pop
dec
mov
add
mov
lock
push
sbb
jmp
mov
sti
cmp
rcr
pop
and
clc
mov
andb
sub
rcrl
push
dec
dec
sub
mov
or
add
mov
jp
xor
arpl
lods
in
inc
xlat
nop
test
call
in
cmp
jecxz
cli
iret
dec
fwait
jnp
add
pop
ret
dec
leave
lahf
mov
mov
insl
cmpsl
outsb
xor
pusha
fs
popf
inc
fidivrl
pop
cld
scas
std
push
adc
out
adc
scas
xchg
add
jo
jmp
hlt
push
mov
out
jl
movsb
inc
mov
insb
lods
into
or
dec
out
jo
jl
add
cmp
or
cld
push
insb
jmp
sbb
push
je
std
ja
dec
movsl
clc
dec
sbb
mov
jmp
iret
pop
rolb
out
test
push
dec
hlt
std
daa
jae
subl
std
add
sub
inc
mov
or
ss
imul
mov
cmp
insb
test
dec
push
jmp
sahf
and
nop
fs
bound
inc
mov
fsub
xor
mov
es
pop
repnz
jecxz
ret
xor
dec
mov
sub
sbb
jecxz
gs
lcall
xchg
daa
cltd
std
pop
mov
movlps
shrd
lods
int
pop
push
inc
xchg
lds
adc
lahf
aas
jmp
idivl
pop
jmp
jp
jo
push
fldcw
ja
fsubl
mov
mov
mov
xlat
xchg
test
jecxz
aad
pop
fisttpll
jo
sub
xor
push
mov
imul
adc
add
sub
stos
pop
and
ljmp
add
xchg
out
das
mov
fmull
clc
outsl
sbb
fldl
mov
xchg
fildll
jne
out
loopne
mov
cwtl
pop
fwait
mov
jg
cmpsl
inc
sbb
add
xor
jge
pusha
pop
mov
push
xchg
out
test
inc
add
xchg
xchg
sti
jns
mov
add
pop
daa
jo
loop
mov
cmp
xchg
xchg
pop
adc
jle
dec
and
cwtl
iret
ja
mov
xchg
icebp
dec
pop
xchg
mov
arpl
lds
mov
ds
dec
jb
mov
xchg
mov
dec
inc
dec
out
int
clc
cmp
dec
adc
push
or
mov
cmp
scas
mov
fistpl
in
out
push
pop
push
ret
std
xor
jo
lahf
call
inc
les
sub
orb
ja
add
cwtl
scas
call
mov
inc
xor
and
ficoms
rol
jno
xor
ds
mov
jge
lods
mov
xchg
dec
pop
daa
es
lcall
mov
rclb
imul
xorb
mov
mov
gs
int
push
pop
jno
xor
stos
push
out
xor
xor
shl
push
das
fs
mov
call
sbb
loopne
adc
pop
xor
fsts
lahf
and
mov
test
xlat
sub
push
mov
and
cld
jae
dec
inc
mov
setne
aas
sub
fldt
movsl
or
and
xchg
inc
inc
loopne
lret
dec
cs
loopne
call
pop
add
fwait
dec
fidivs
outsb
pop
jnp
or
jo
mov
aaa
push
and
nop
lods
lea
mov
push
int
orl
jle
out
jno
dec
pop
and
stc
mov
sub
dec
cmp
mov
push
add
push
imul
imul
add
xchg
cmp
and
jge
leave
inc
js
fbstp
das
xor
cmp
jns
sahf
sbb
sbb
jecxz
push
cmp
jp
mov
std
ljmp
sub
mov
xor
sub
or
push
add
xor
data16
or
add
pop
mov
mov
xchg
cwtl
and
aam
cli
jg
push
mov
inc
sub
out
call
jp
cmp
or
lahf
movb
stos
jge
adc
repz
inc
cmp
fisubl
js
sub
in
or
jne
pop
cmp
mov
sarb
call
icebp
les
call
sub
sub
iret
push
pushf
out
testl
test
stos
adc
mov
xchg
rclb
mov
push
jae
arpl
push
outsl
jns
sahf
mov
push
dec
sbb
dec
push
jno
fcom
sbb
xchg
jbe
xor
pop
jae
push
jmp
mov
lods
and
sbb
mov
jb,pn
dec
mov
jmp
xor
das
mov
and
or
shlb
mov
insb
aaa
iret
adcb
dec
movsb
and
rorl
cmc
sti
and
in
sbbb
rolb
cmc
mov
cltd
push
mov
hlt
adc
inc
cld
xchg
ficoml
pop
pop
lret
icebp
popf
mov
mov
outsl
dec
add
fisubl
push
je
out
dec
xchg
insl
push
subb
cmp
in
adc
cwtl
push
or
mov
mov
rcr
in
push
mov
shr
pop
inc
mov
stos
lods
nop
pop
pop
sbb
mov
or
mov
inc
inc
scas
test
ds
repnz
imul
and
sti
ret
pop
gs
aad
lahf
cmp
insl
push
push
cmp
mov
add
lods
lcall
jno
mov
xchg
cmp
adc
das
lds
adc
sbb
jb
clc
mov
fs
jmp
pop
dec
adcl
mov
jb
adc
lock
or
xlat
xchg
add
xchg
fsubrl
incl
insl
inc
mov
out
subl
or
addr16
add
pushf
jecxz
pop
in
or
mov
jmp
add
scas
adc
loope
jecxz
cmp
insl
jecxz
fs
xchg
insb
cs
adcb
mov
cmp
sub
or
jle
sub
je
push
pop
aam
or
es
dec
push
std
pop
jp
addl
push
xor
sbb
leave
push
clc
mov
in
lds
je
jmp
and
mov
mov
test
push
int
mov
mov
xchg
jo
dec
das
xchg
je
ss
jp
and
cwtl
aaa
filds
mov
into
xchg
sti
mov
cwtl
push
addr16
push
imul
fdivrs
dec
xchg
adc
dec
movsb
lds
addr16
sbb
mov
mov
imul
mov
imul
push
mov
sbb
out
adc
jns
or
outsb
ds
in
ljmp
or
mov
fdivrl
xchg
dec
scas
inc
enter
cld
mov
dec
jmp
mov
push
daa
and
nop
cli
jo
sahf
xchg
xchg
and
daa
cmpl
mov
in
out
mov
or
inc
ljmp
hlt
stos
mov
pop
dec
das
or
addr16
ss
cs
repz
sbb
inc
fdivs
mov
enter
push
lret
sahf
xor
xor
xchg
ss
out
fxch
cmp
mov
test
sarl
sbb
out
jg
rclb
pavgw
aad
fildll
sbb
jg
popa
sub
inc
xchg
pop
sub
and
dec
jno
fs
lock
pop
dec
jbe
sbb
xor
and
xchg
inc
decb
xchg
adc
fbstp
and
mov
movsl
and
cld
fisubl
push
mov
cmpsl
sub
pcmpeqd
outsb
add
xlat
or
or
mov
mov
inc
or
fdivp
int3
call
sub
jecxz
mov
les
repz
inc
sbb
movsl
lock
inc
popa
mov
add
jns
outsl
sub
mov
test
pop
loopne
repz
clc
xor
not
fldenv
hlt
adcb
pushf
hlt
add
jnp
inc
mov
or
mov
adc
mov
shl
shrl
sbb
aas
scas
sub
cmpsb
aas
movsb
xchg
jb
push
sbb
leave
pop
mov
fcmovnbe
mov
pop
ljmp
mov
and
lahf
loop
out
push
gs
mov
jb
stc
out
inc
add
out
jmp
sub
xor
imull
or
ljmp
mov
xchg
daa
movsl
dec
sahf
lock
dec
fmuls
jl
add
add
push
shrl
jge
push
mov
adc
lcall
jg
ja
fucomip
fcomps
mov
out
jnp
jmp
inc
lret
add
test
fsubp
mov
scas
ss
test
jmp
je
inc
jae
jmp
add
sub
pop
lret
cs
or
idivl
les
add
cmp
inc
jne
mov
lret
mov
fisubrl
mov
test
inc
test
out
out
addr16
xchg
pop
adc
pop
and
std
cmp
or
imul
ret
sbb
jb
push
mov
inc
call
push
inc
testb
bound
xchg
add
inc
jns
rol
jl
fistl
mul
leave
cmp
outsl
fwait
stos
pushf
mov
lcall
into
outsb
stos
lcall
sbb
dec
jb
or
and
test
icebp
cld
addr16
mov
xor
jecxz
mov
je
int3
insb
jo
mov
or
jg
sub
jg
ficompl
stos
leave
fnstcw
and
loop
mov
mov
cmpsb
xchg
testl
mov
hlt
daa
mov
xlat
jecxz
dec
jge
add
test
imul
repnz
iret
inc
inc
sub
push
and
xchg
cltd
dec
and
imul
xchg
pop
mov
xchg
adc
xor
inc
mov
ljmp
fadds
ds
xchg
sbb
andl
sub
fs
push
int3
decl
pop
sarl
enter
adc
xchg
leave
sub
imul
scas
in
aas
adc
cs
dec
jp
scas
test
add
and
pop
sti
xchg
push
aam
pop
je
lahf
sbb
imulb
mov
and
insb
inc
cmp
mov
in
adc
out
xchg
scas
lret
jae
pop
xor
imul
sbb
xor
nop
mov
jmp
jnp
lret
cmp
ss
mov
repnz
xchg
test
mov
or
lahf
test
and
mov
fisttps
mov
and
in
arpl
call
aam
pop
fildll
shl
sub
lret
and
jg
inc
cltd
test
shl
sub
mov
pop
cmp
inc
or
pop
adc
xor
subl
ret
mov
aas
repnz
pop
inc
fidivs
add
dec
xor
add
dec
cs
cmc
push
xlat
pop
mov
adc
fwait
adc
rorb
js
dec
test
test
xchg
pop
pop
or
push
out
int
fucomip
mov
out
lock
sbb
add
and
cmpsl
add
loope
sarb
scas
adc
xchg
cmp
or
lret
push
jp
and
ret
add
add
stos
cs
mov
mov
mov
xor
fisttps
xchg
jno
stos
cltd
mov
test
or
add
decb
test
dec
movsl
aas
int
jne
scas
jge
ds
xchg
in
jg
ret
les
inc
in
or
hlt
inc
sbb
adc
aaa
adc
mov
popf
and
mov
pop
mov
mov
test
scas
fstl
test
lds
shlb
sub
inc
dec
or
lods
push
mov
or
mov
lods
je
and
xor
iret
lock
jb,pn
in
sub
lret
addl
inc
cmp
jno
mov
clc
mov
push
jb
fwait
add
outsl
in
cmc
notb
popa
xor
adc
fldl
fcompp
mov
cmp
cmpsb
xchg
std
leave
pusha
mov
aaa
scas
push
int
mov
xchg
push
dec
xor
push
ljmp
clc
mov
stc
mov
xlat
add
aaa
jg
mov
js
clc
pop
popf
stos
scas
sbb
mov
loopne
cmp
push
cmpb
pop
out
and
mov
pusha
mov
popf
push
xchg
out
ret
and
lret
jns
mov
xchg
js
popa
mov
test
mov
mov
mov
push
add
jnp
xchg
scas
push
ja
mov
jno
in
jge
sbb
xor
ret
scas
es
cmp
xchg
xchg
enter
stc
outsl
mov
lret
mov
mov
xchg
cmp
aad
in
sub
sti
add
jne
adc
repz
fistpl
lods
adc
xor
jns
lods
mov
mov
mov
inc
mov
dec
mov
shll
imul
inc
mov
jmp
into
mov
mov
push
dec
lds
sub
pop
insl
mov
mov
mov
inc
js
rcrb
lea
and
inc
dec
dec
stos
fucomip
adc
or
lock
and
in
dec
mov
outsl
aam
xchg
and
pop
test
cmp
mov
xor
fdivrs
mov
aad
repz
shlb
mov
mov
dec
mov
lea
movsb
cmc
and
insb
pop
xchg
push
inc
out
insl
jb
ljmp
mov
mov
js
mov
lock
inc
jnp
outsb
mov
xchg
jl
iret
push
andl
dec
loope
fisttpll
push
or
add
idiv
mov
sti
test
je
mov
or
nop
outsb
popl
dec
xchg
cmc
jbe
add
test
push
jle
call
gs
pusha
mov
mov
stos
fildl
push
aam
mov
xor
xchg
subl
inc
push
sbb
leave
xor
sahf
sub
fwait
jno
mov
dec
test
or
dec
dec
fdivl
adc
xchg
or
imul
cmp
mov
out
jl
add
icebp
add
inc
xchg
sbb
add
pop
push
rcrl
das
jmp
pop
int3
sti
cmp
fs
arpl
lock
push
cmpsb
jno
xchg
imul
lret
shrb
test
lea
mov
jb
movb
pop
mov
jl
and
pop
xchg
sti
fists
push
ret
xor
test
clc
jecxz
std
rcrb
cmp
xlat
lds
pushf
call
fldenv
jmp
lea
cmp
scas
dec
xchg
fdivrl
test
xchg
bound
jae
insl
iret
jns
insb
into
cld
ja
int3
scas
mov
enter
pop
add
jecxz
pushf
xchg
cmpsb
jle
movsl
mov
mov
jne
mov
mov
or
cld
insb
sub
js
ss
or
sti
inc
lcall
out
loope
push
mov
dec
test
pop
mov
xchg
mov
sub
pop
add
jmp
fucomi
lahf
jl
push
subl
pop
or
mov
cmp
cld
addl
and
lds
leave
ds
cmp
xchg
xchg
ror
push
pusha
dec
stos
inc
add
std
fstp
notb
scas
outsb
xchg
clc
sub
dec
or
jo
add
xchg
test
sub
lea
push
in
pop
inc
ret
out
mov
inc
inc
lea
sub
fs
mov
cmp
cs
ret
out
mov
repnz
mov
sbb
out
stos
shlb
mov
out
lods
sub
daa
mov
inc
add
push
push
stc
rcrl
push
inc
movsb
aaa
out
inc
push
xlat
xchg
nop
leave
mov
mov
insl
dec
jecxz
mov
mov
mov
insb
inc
insb
sub
jae
push
loopne
or
js
pusha
push
ss
xchg
imul
push
fwait
lcall
mov
lods
xchg
adc
fisttpl
inc
push
and
add
sbb
les
or
fisttps
cmp
in
xchg
jne
sbb
inc
test
pop
ja
xchg
jle
int
mov
rcll
mov
fadd
cmpsb
push
lods
out
jp
movsl
xor
mov
rcl
cmp
stos
imul
mov
add
cmp
dec
sbb
dec
mov
enter
cmp
movb
jo
scas
roll
or
dec
ret
in
sbb
xchg
push
push
inc
mov
in
addl
fsts
adc
push
jmp
mov
pop
pusha
push
fstp
xchg
stos
adc
scas
scas
fadds
xchg
scas
mov
dec
add
in
ja
mov
pop
sbb
and
scas
ret
lret
add
out
and
stos
push
sbb
lcall
mov
jmp
jne
jnp
xor
imul
sub
stc
dec
mov
cmpsl
daa
jne
jnp
cmp
mov
loope
nop
lret
subl
dec
jb
int
jmp
pop
fimuls
in
jne
mov
aas
shll
lods
push
mov
inc
inc
lea
sub
inc
lcall
dec
pushf
mov
push
filds
xchg
mov
adc
push
sbb
push
inc
repnz
cmp
xor
sbb
les
lods
sbb
adc
cmpsl
cltd
xor
adc
dec
mov
xor
in
mov
push
aam
cs
mov
push
inc
mull
int
add
inc
testb
sub
xor
in
jecxz
fs
lock
shl
sarb
or
orb
js
out
dec
jae
mov
add
aaa
cmp
lods
cmp
fsub
enter
aad
popa
nop
jecxz
push
popf
pop
mov
nop
xchg
es
mov
xchg
xchg
cmp
push
je
test
je
ja
test
inc
enter
test
xchg
xchg
ja
rorl
pushf
mov
adc
ds
and
test
lret
xchg
pushf
inc
cmp
lret
ret
outsb
test
sbb
scas
adc
out
and
mov
xor
insb
xor
push
xchg
jnp
jbe
in
shlw
test
sbb
test
mov
dec
inc
shr
sbb
mov
int3
dec
add
jge
es
aas
loope
adc
jbe
jmp
jno
mov
sti
icebp
push
out
test
aaa
dec
cmp
jl
ds
lcall
push
sahf
and
jp
pop
addl
jmp
xchg
sbbb
loop
and
lock
aam
xor
nop
cmp
cmp
push
lds
push
mov
xor
pop
adc
dec
or
cmp
mov
push
xchg
ds
rcrb
dec
cmp
pop
jno
mov
mov
cmp
sub
and
add
jl
inc
dec
pushf
loope
stc
adcb
cs
ficompl
lds
push
filds
mov
flds
js
out
ficoml
cmp
scas
push
rcll
cmpsb
in
inc
data16
je
jnp
push
push
jno,pn
push
and
int3
loopne
adc
jp
lods
or
lock
nop
outsl
jp
ja
bound
push
cmp
push
or
data16
shll
xchg
fmuls
std
lock
cmp
scas
in
jl
fwait
mov
mov
jae
mov
negl
ja
jle
lcall
roll
mov
xor
sub
cmp
jg
mov
dec
cmp
aaa
mov
movsb
push
xchg
add
xchg
xor
pushf
pop
lahf
data16
aaa
cltd
es
push
xor
call
xor
sbb
daa
jae
xor
jae
xchg
stos
xchg
add
call
js
dec
mov
pop
inc
inc
jmp
and
inc
push
push
std
sbb
mov
sbb
int
mov
inc
sahf
or
ss
pop
push
and
and
xor
jl
jno
test
shll
test
test
iret
popa
pop
lock
andb
int
dec
loopne
imul
in
in
xor
movsl
aas
std
mov
jl
sub
movsl
daa
imul
fcoml
negb
and
mov
adc
out
sbb
ss
int
adc
repz
out
mov
shlb
lods
icebp
jns
enter
xchg
mov
out
push
out
sahf
inc
mov
jns
insl
jmp
sub
les
test
push
dec
push
or
mov
in
test
add
lahf
inc
pop
outsb
push
lock
sti
sti
popa
stc
gs
and
mov
xchg
mov
xchg
addr16
jmp
jno
aam
xchg
int3
mov
cmc
sarb
push
jne
pop
fisubrs
sbb
inc
inc
arpl
shlb
in
dec
sub
int3
pop
jnp
sahf
insb
xchg
xor
mov
inc
push
fimull
in
pop
lock
popa
and
dec
fdivl
pop
cs
ljmp
pop
cmc
mov
cs
aam
insb
out
sbb
lods
dec
push
outsb
add
fcmovnu
mov
dec
out
jb
icebp
xchg
loope
inc
adc
jb
and
cmpsl
imul
dec
divb
sbb
and
shr
imul
sti
imul
subl
push
mov
ret
and
insl
lea
pop
push
je
sbb
sub
mov
out
out
mov
test
test
jo
fldl
push
push
cld
mov
adc
das
ss
les
xchg
xor
pop
dec
int3
push
add
add
adc
test
pop
inc
es
mov
addl
repnz
push
sbb
rcr
mov
lea
dec
out
repnz
sbb
push
mov
jle
add
and
push
inc
fistl
sbb
addr16
pop
aaa
push
mov
fcmovnb
xchg
idivb
mov
and
pop
orb
icebp
push
iretw
sbb
out
in
mov
out
cmpsb
xchg
clc
addl
xor
arpl
mov
call
inc
out
dec
ljmp
add
lahf
fwait
push
pop
dec
ss
cmpsl
cmp
aas
xor
cs
enter
mov
scas
and
and
jb
ss
mov
movsb
and
aaa
push
push
aaa
or
pop
inc
add
in
int3
loope
inc
in
jae
cmpsb
cltd
enter
or
nop
mov
sub
and
mov
sti
lcall
sub
sti
lret
mov
mov
jg
or
xchg
ljmp
lds
call
and
xor
or
xor
imul
mov
iret
jnp
cltd
xchg
mov
mov
xor
pop
mov
pop
mov
fidivrl
xor
xchg
loop
fisubl
jne
fcoml
sbb
and
xchg
and
cld
adc
jo
mov
cmovb
loope
push
and
in
push
or
jl
shll
cmc
push
test
mov
sar
ja
pop
sbb
xor
xchg
mov
or
insl
scas
mov
cmp
xchg
jae
push
mov
inc
out
icebp
fildll
or
and
aaa
jo
pop
test
sbb
adc
inc
and
xlat
mov
cmc
test
mov
xchg
push
incl
popf
cltd
dec
mov
xor
daa
ljmp
pusha
seta
fs
out
inc
fsubr
shll
sbb
jno
push
lods
xorl
insb
cmp
iret
call
jle
in
clc
sub
sub
dec
lcall
mov
add
iret
push
loope
xchg
push
cmp
sub
jb
xadd
data16
insl
lods
insl
cmc
push
lahf
jp
push
bound
mov
je
js
pop
jns
outsl
mov
ja
test
sarl
sti
and
imul
into
out
xchg
je
repnz
cli
and
je
fimuls
arpl
and
mov
xor
fsincos
out
loop
std
adc
test
mov
xchg
jne
insl
std
mov
nop
lods
or
sbb
pop
jl
in
in
and
and
cmp
lock
aad
out
fistpl
gs
fwait
mov
cs
xor
repz
pushf
lea
insb
cs
mov
imul
cmpsl
jb
int3
xchg
mov
or
das
fwait
cltd
inc
push
pop
scas
mov
xor
add
ljmp
mov
imul
mov
mov
lds
fcompl
pop
movsb
bound
ret
xor
js
and
aam
rcr
sub
push
cmp
and
dec
lret
inc
push
mov
cld
daa
sub
jmp
and
lods
mov
inc
fs
xorl
enter
xchg
dec
lahf
test
popf
test
fcmovne
sbb
sbb
push
jecxz
shrb
adc
stos
pop
pushf
arpl
xor
mov
rcrl
mov
cmp
push
sub
mov
sti
mov
add
sbb
lahf
das
mov
sbb
cmp
sbb
sub
outsb
push
enter
cltd
cs
orl
popf
jmp
inc
cmpsb
leave
mov
mov
adc
test
mov
xchg
dec
sarb
pause
daa
in
mov
ficoms
fstl
enter
stos
data16
pop
ds
jge
jns
out
pop
out
xchg
cs
cli
pop
dec
mov
jecxz
shr
stos
jb
xor
bound
mov
mov
jb
inc
mov
addr16
ret
mov
mov
push
sbb
es
stos
out
sub
and
mov
cmp
mov
shl
jle
dec
inc
out
fistpl
out
addr16
scas
lea
insb
mov
out
cmpsl
jbe
insl
jg
adc
pop
push
mov
int3
in
push
inc
mov
stc
add
in
jns
inc
test
cmp
les
adc
fldl
jl
sub
call
add
adc
out
push
pusha
push
test
push
andb
fmuls
and
mov
rclb
jge
push
mov
lcall
mov
mov
inc
cli
jl
repnz
rorb
bound
push
jnp
call
or
push
andl
scas
rcrl
insl
pop
fnsave
sbb
icebp
mov
sbb
data16
mov
ret
icebp
push
repz
mov
push
popa
sti
gs
orb
dec
jmp
test
cmp
das
cmpb
inc
pop
cwtl
cmp
out
shr
inc
adcl
pusha
cmpsl
push
adc
push
jp
xor
add
stos
mov
pop
rcll
adc
stos
fdiv
jbe
test
mov
ss
inc
data16
jbe
mov
xchg
iret
dec
sbb
add
cmp
jb
mulb
inc
int
movsl
daa
data16
stos
stc
mov
add
sbb
dec
int
xor
jno
gs
fs
aas
xchg
pop
in
cmpsl
fildll
jnp
and
das
mov
xor
xchg
outsb
push
adc
sbb
jmp
push
shrl
enter
mov
mov
in
addr16
je
into
pushf
push
movsb
adc
andl
sbbl
inc
adc
push
lea
mov
std
scas
arpl
fildll
fadds
pop
mov
dec
decl
aas
adc
jl
sbb
gs
addb
mov
mov
dec
sbb
cwtl
push
sbb
in
test
pop
ss
je
loopne
je
sti
cmc
movl
jecxz,pn
mov
repnz
push
daa
adc
insb
data16
inc
in
gs
sub
and
sub
aad
pop
xchg
xchg
in
in
adc
mov
daa
add
mov
cmp
adc
aaa
les
testb
jne
out
add
push
das
jb
fldcw
and
mov
adc
fnstsw
daa
andb
dec
mov
cs
xchg
in
jns
dec
and
ficoms
mov
insl
outsl
mov
mov
stos
cmp
pop
cmpsl
out
dec
cmp
cmp
cmp
bound
cli
nop
sub
sub
cltd
aam
xchg
adcl
push
scas
cwtl
outsl
xabort
jmp
xlat
nop
xor
pop
cld
repnz
into
ja
movsb
push
and
mov
push
in
addr16
arpl
sbb
sub
int3
push
push
dec
out
sub
inc
xchg
aas
mov
sub
pushf
data16
mov
int3
sbbl
loope
dec
pop
dec
pop
sbb
mov
xchg
or
hlt
xchg
sub
xchg
pop
or
out
jne
push
mov
add
outsb
lock
xor
rcrl
pusha
scas
dec
jge
cltd
outsb
push
jg
fsubrl
pop
jo
adc
popa
and
mov
adc
mov
stc
popa
js
stos
push
mov
andl
aam
lcall
mov
arpl
rcrl
aas
jne
outsb
ds
scas
dec
or
cs
shlb
push
lds
das
fs
ljmp
add
aam
shrl
adc
cltd
mov
testb
aaa
mov
jne
pop
jns
pop
test
aas
push
rcrl
sub
dec
mov
dec
mov
dec
and
dec
mov
pushf
imul
pusha
xlat
sub
test
or
loope
xor
fcoml
cmpsl
cmp
sub
cmp
loope
pop
arpl
mov
stc
pop
js
inc
iret
in
test
adc
mov
xchg
and
or
vpmacsww
aad
fsubrl
push
out
cmp
cli
aad
fwait
jne
shrb
jl
fcoml
fcomps
pop
xchg
mov
mov
movsb
mov
out
lcall
das
add
dec
ret
test
pop
into
add
pop
cmp
loop
add
aad
stc
js
push
stc
xchg
pop
mov
inc
vandpd
inc
adc
pushl
mov
mov
xor
popf
enter
adc
xchg
jp
push
adc
lahf
jb
and
mov
mov
sbb
sahf
xchg
nop
jecxz
and
inc
scas
das
outsb
mov
movsl
out
xor
test
xor
adc
xor
cmp
clc
dec
out
insb
sub
inc
divb
rorb
stos
lahf
or
jb
or
xchg
sbb
jg
sub
mov
sub
xor
int3
int3
fsubrl
jae
push
add
pusha
and
jp
test
cmp
pop
stos
mov
sub
sbb
pop
mov
aad
xchg
out
push
xchg
and
mov
js
mov
cmpsl
call
dec
inc
xchg
cmp
in
stos
or
mov
add
xor
mov
aaa
or
sbb
jmp
addb
mov
mov
sahf
mov
xchg
lea
cld
popf
mov
add
ret
or
push
test
js
stos
int3
cmp
sub
pop
pop
mov
hlt
imul
rolb
stc
push
push
dec
test
mov
mov
mov
pop
push
fistl
pop
dec
rorb
aaa
int3
sub
test
movb
push
inc
jle
mov
xlat
cmp
scas
xor
xchg
aad
dec
add
pop
fcoms
es
xor
loop
xchg
fnop
sbbl
cmp
cmp
je
sub
lahf
call
iret
inc
mov
xrelease
dec
cmp
lret
int3
jo
stos
sbb
call
push
add
shrl
shl
sbb
sub
out
aaa
cmp
nop
cmc
ret
jbe
push
insb
xchg
aas
dec
enter
mov
pop
sti
arpl
fdivrs
sub
mov
fwait
insb
fcomps
sbb
nop
jae
push
mov
movsb
orb
fsubp
push
add
icebp
xchg
xor
jnp
xchg
xor
std
hlt
sbb
out
cltd
scas
mov
inc
sbbb
sbb
test
in
sbb
xchg
pop
pop
mov
fistps
ret
in
adcb
or
call
test
roll
dec
pop
popa
mov
in
iret
repz
dec
das
jecxz
pushfw
add
pusha
or
enter
iret
and
cmp
clc
xor
lods
sub
and
sbb
xchg
testb
sbb
push
jge
inc
lret
popl
dec
mov
aam
cmp
pop
loop
mov
and
sti
arpl
lret
dec
xor
inc
aad
addb
push
sub
ror
mov
aaa
push
pop
cmpsl
scas
sti
mov
add
inc
inc
pop
popf
pop
popf
addl
lret
test
sub
es
inc
and
sbb
outsl
push
jne
inc
mov
cmp
or
pop
aam
cmp
sbb
mov
fdiv
ds
shlb
pop
out
lea
roll
jl
xchg
add
and
in
movl
jnp
sub
fcomps
lea
fisttpl
push
js
mov
mov
pop
rcll
aam
mov
and
sarb
int
aas
imul
push
shll
out
outsb
enter
mov
ljmp
or
movl
dec
mov
out
mov
sub
mov
pusha
fwait
and
in
scas
aad
jl
in
and
mov
mov
pop
sbb
pmaddwd
mov
daa
in
subb
adc
cld
sbb
xchg
lods
adc
jnp
jge
mov
sub
pop
cmp
std
lea
iret
jbe
js
push
cmpsb
loopne
xorl
push
lock
mov
ret
cld
ljmp
cmp
int3
lret
jo
jne
jg
pop
fyl2xp1
xchg
push
popa
dec
jg
cmpsb
daa
test
cmp
das
xchg
lods
add
in
lahf
popf
pop
inc
mov
mov
mov
lcall
idivl
or
jle
loope
repz
shrl
movsl
xchg
out
sub
test
push
jne
sbb
add
jbe
jno
fwait
lds
xlat
sub
jns
ss
cmc
xor
push
push
ficompl
adc
sti
rcr
xlat
lahf
aam
xchg
scas
inc
push
mov
sbb
dec
dec
xor
pusha
inc
fnstenv
dec
jg
mov
pushf
inc
and
xchg
push
push
push
pop
mov
sub
enter
fwait
mov
div
icebp
roll
mov
sbb
pop
dec
inc
xchg
inc
adcl
xchg
test
dec
leave
bound
cmp
popa
mov
orb
mov
push
xor
xor
mov
lods
pop
and
sbb
mov
pop
xchg
cmp
xchg
sbb
mov
in
xchg
rcll
das
sub
fwait
xchg
repz
addr16
aam
jmp
mov
int
sub
mov
jbe
jns
push
cli
out
aas
push
out
int
jae
jbe
lret
push
cld
pop
cwtl
add
sub
fs
mulps
ds
test
jns
xor
ljmp
xchg
in
cmpsl
fbld
cli
adc
repz
xor
adc
mov
leave
int
out
imul
cli
sub
push
out
fs
dec
les
pop
xor
xchg
pop
sbb
cmp
test
xor
ret
movsl
rolb
test
popf
push
cmp
scas
sbb
mov
insb
add
or
jl,pt
jbe
adc
ja,pt
mov
dec
test
lret
incl
and
rcrl
fimuls
mov
movsb
aaa
mov
lret
out
daa
sbb
mov
add
dec
jns
pop
jnp
inc
shlb
push
xorl
dec
xor
xor
sub
insl
cwtl
mov
outsb
std
loop
inc
jae
sub
fists
in
sub
stos
jecxz
mov
ss
jb
and
inc
cmp
xchg
inc
push
pushf
fsubl
rcl
xor
push
into
fdiv
mov
xchg
pop
rol
mov
in
cltd
xchg
add
sti
jo
orb
push
fsubl
out
cld
cmp
cwtl
push
inc
mov
inc
mov
or
aaa
aad
jbe
pop
pop
mov
push
xor
ds
lock
leave
dec
inc
or
out
inc
data16
jge
std
add
jns
sbb
mov
in
mov
out
xlat
mov
call
sbb
mov
xor
clc
mov
push
or
fldcw
movsl
jnp
mov
dec
test
fcoml
js
movsb
jbe
es
lds
addr16
test
scas
cmp
fwait
xor
and
cwtl
stc
xchg
gs
xchg
repz
popa
cmp
aas
scas
push
sub
scas
clc
fimuls
inc
mov
js
movsl
inc
in
jmp
jg
and
jge
jmp
sbb
stos
jge
cwtl
ja
into
ss
dec
into
jno
jl
ja
popf
add
daa
inc
imulb
sub
ret
adc
cmpb
xchg
popf
icebp
test
mulb
jl
lea
fisubl
pop
idivb
loopne
rol
lret
test
mov
js
inc
mov
dec
mov
jnp
loope
orb
stos
imul
insl
dec
mov
and
hlt
cmpsb
cmpsl
lds
adc
jae
jo
ss
cmp
icebp
imul
add
mov
pushf
icebp
pop
das
mov
rolb
add
pop
dec
mov
mov
fstps
pop
aaa
test
inc
adc
xor
and
aas
clc
cmp
xchg
adc
jle
cmpl
add
and
les
sbb
sti
repnz
sbb
hlt
test
rcrl
cmp
fimuls
xchg
repz
mov
negl
in
fnstcw
iret
lea
jle
mov
adc
jmp
jb
mov
enter
lds
sub
xchg
xor
lods
inc
insb
push
or
pop
insb
int
test
push
mov
incb
ja
mov
push
rcrl
pop
stos
outsb
lods
push
or
push
lods
dec
adc
sarb
lock
add
and
es
mov
subl
bound
pop
hlt
mov
lret
je
and
ds
ret
jnp
rep
jmp
icebp
xor
xchg
xchg
dec
inc
lahf
jbe
push
xrelease
sub
adc
sub
sub
mov
xor
stos
je
inc
aaa
jg
inc
dec
xlat
aaa
mov
inc
test
xchg
mov
in
lock
xor
in
or
lret
icebp
shll
adc
lods
xchg
push
lahf
jns
fld
ja
cmp
rclb
xchg
das
idivl
dec
cli
mov
push
lds
jo
fbld
jmp
adc
nop
push
mov
sub
xchg
cmp
xor
push
andl
in
xor
pop
popa
xor
fwait
dec
push
imul
mov
jecxz
mov
push
or
or
inc
scas
ret
jnp
mov
push
push
dec
jge
xchg
ret
push
insb
push
imul
add
stos
pop
adc
mov
jnp,pn
cmp
sbb
lret
loopne
seta
add
push
jecxz
adc
push
cld
cmp
rol
cmp
mov
inc
and
jo
push
cmc
mov
incl
dec
mov
rcrl
arpl
pop
cwtl
mov
mov
ficompl
mov
xchg
jg
outsb
aam
pop
xchg
movsl
fwait
dec
out
cmpl
ljmp
inc
cmp
mov
pop
loope
aam
iret
aas
cmp
pop
rcr
fcmovne
int
fwait
mov
pop
les
popf
cld
sbb
mov
and
push
mov
scas
mov
push
push
rol
jmp
addb
push
imul
xchg
lahf
stc
and
enter
push
xchg
cmp
arpl
mov
add
xor
cld
pop
mov
xor
dec
xlat
jno
outsb
add
out
sub
jb
mov
lretw
repz
jecxz
xchg
popa
sub
adc
popa
push
adc
adc
fld
call
cli
adc
rolb
or
jbe
je
loope
sbb
mov
pushf
xor
pop
xchg
inc
push
dec
add
inc
push
out
outsl
mov
lahf
negb
mov
cld
and
lock
movsl
or
mov
lea
pmaxsw
in
dec
pop
and
dec
std
mov
shll
adc
pop
es
ss
or
pushw
and
ds
inc
fdivs
or
push
fisubs
or
lds
mov
pushf
leave
test
and
sti
mov
fs
popf
stc
popf
jge
enter
fiaddl
cltd
lods
xchg
fsubl
dec
ss
jae
sbb
mov
mov
pop
cmpsl
mov
adc
in
or
and
idivb
ret
jae
or
call
fwait
in
dec
aam
lds
movsb
std
dec
int
cmc
cli
lods
push
pop
test
sub
xor
mov
das
mov
jb
cld
jne
cmc
mov
push
jae
mov
xchg
mov
push
loopne
dec
les
jp
push
push
xchg
pop
mov
mov
adc
lcall
mov
sti
sbb
pop
jg
sbb
scas
bound
xchg
push
push
stos
add
sub
xchg
je
scas
sub
pop
into
out
cmp
mov
std
and
cwtl
mov
out
xor
mov
insb
arpl
push
cmp
fildl
or
inc
inc
je
add
call
sarb
xor
inc
pop
push
pop
and
mov
movsl
cmp
fcmovu
dec
or
xor
data16
test
add
pop
or
mov
inc
mov
fisttpl
jae
loopne
iret
sub
mov
jg
in
mov
loop
push
shrl
cmpl
and
andb
mov
pop
bound
jmp
mov
and
mov
jmp
cmp
in
xor
pop
mov
mov
inc
dec
stos
jle
out
and
es
in
pop
mov
sub
xchg
fisttps
push
insb
inc
jns
xor
xor
jb
adc
or
mov
outsl
cs
jmp
dec
mov
pop
mov
or
mov
test
pop
adc
and
inc
fidivl
and
xor
scas
repz
cmp
sbbb
je
lret
movsl
mov
lahf
xchg
call
mov
mov
xor
xorb
lods
arpl
pusha
faddl
and
xchg
shll
fs
xor
insb
pop
clc
adc
jne
xchg
cmp
lret
xor
jge
sub
pop
mov
and
or
cmp
sub
negb
ret
push
iret
mov
inc
rorl
ds
stc
lret
sbb
inc
mov
out
in
cli
in
push
negb
mov
push
imul
mov
adcl
mov
mov
push
pop
push
mov
ja
jmp
addr16
scas
mov
xchg
pushl
push
test
data16
xchg
je
jge
xchg
jmp
in
adc
mov
mov
push
int
rclb
mov
mov
cld
sti
jl,pt
xor
rcrl
rol
sbb
or
jle
cmp
xchg
ficomps
xlat
adc
testl
push
add
xchg
insb
lcall
icebp
int3
dec
dec
mov
sub
mov
and
pop
rcrl
lcall
test
in
pop
shll
mov
ljmp
stc
mov
andl
cli
jge
les
or
hlt
lods
shlb
enter
cmp
in
clc
inc
xchg
and
mov
ds
ja
cmp
ds
idivb
add
int3
push
mull
cmp
pop
mov
adc
incl
pop
add
repz
add
cmp
scas
cli
hlt
mov
cld
lock
xor
pop
data16
iret
and
je
sbb
and
outsl
xchg
in
vshufps
bound
or
lret
mov
xchg
js
push
movsl
cmpsb
sti
and
fcompl
pop
mov
lock
loope
or
push
repz
pop
insb
mov
pusha
lds
testl
push
mov
and
nop
mov
add
popa
mov
add
testl
leave
lahf
das
aad
lds
mov
jae
scas
push
push
test
cltd
movsl
incl
pushf
sbb
pop
addl
and
mov
dec
sub
data16
jg
sub
rol
add
in
stos
xor
add
sbb
and
xor
aaa
stos
jp
call
xchg
mov
je
jno
dec
xchg
test
cmpsb
cmp
or
lret
xlat
add
push
les
sub
inc
and
imul
mov
mov
add
int
adc
add
pop
cmpb
pop
jmp
dec
stos
fprem
jo
into
lret
in
insb
mov
or
test
push
nop
mov
daa
fidivs
aaa
fsubr
jle
xor
out
push
or
pop
ljmp
push
sbb
push
cli
xchg
jae
adc
movsl
pop
push
lods
jecxz
call
or
or
pusha
inc
mov
fidivl
inc
xorl
cmp
add
mov
adc
jo
mov
push
lcall
inc
pop
mov
test
adc
cmpl
sbb
mov
mov
and
mov
iret
aaa
sub
cld
pop
shl
push
cli
add
je
scas
jb
sub
xor
adc
popf
leave
cmpsb
inc
sti
jmp
jp
xor
stos
arpl
sahf
mov
pop
xchg
movsl
cmp
mov
adc
and
xchg
lcall
lods
stc
testb
and
les
mov
enter
push
lcall
xchg
fdiv
aaa
fwait
dec
repz
mov
and
lea
jb,pn
mov
aam
mov
add
and
out
mov
jb
or
les
lcall
sub
pop
paddq
pop
scas
and
mov
aaa
push
shlb
inc
aad
into
adcl
or
sub
adc
jb
sbb
pop
loop
dec
fwait
adc
and
mov
dec
xchg
clc
xchg
cmp
jl
test
std
in
inc
into
arpl
mov
adc
add
add
sub
scas
addb
xchg
loopne
daa
sbb
lret
cmc
xchg
mov
std
and
outsb
mov
xor
adc
sbb
or
cmp
sbb
das
loopne
jbe
stos
xchg
imul
popf
add
cmpsb
or
sarl
jge
push
sub
xor
mov
pusha
xor
jbe
frstors
loope
notl
mov
mov
cmp
into
inc
dec
pop
or
xlat
and
and
pop
stos
push
lds
cmp
loop
push
scas
shr
dec
insb
inc
and
lds
lret
jne
cmpsl
out
inc
orl
sub
push
cmc
xor
cltd
repnz
cmp
fndisi(8087
ss
adcb
popa
sub
pop
lock
bnd
mov
mov
loopne
push
push
in
out
jp
push
add
out
mov
mov
sbb
and
mov
das
lock
les
daa
jo
outsl
push
add
sbb
xor
aad
dec
adc
enter
pop
mov
jle
pop
js
mov
adc
std
mov
adc
aaa
jg
push
sti
push
in
shlb
push
call
fs
imul
stc
dec
jae
in
jle
enter
mov
push
mov
aad
adc
jns
cli
cmp
leave
adc
ljmp
dec
outsl
loop
ss
mov
pop
in
lcall
jp
cli
dec
adc
xor
pop
ljmp
dec
or
add
add
and
adc
insl
xor
sub
mov
loop
sub
dec
ret
pop
pop
add
popa
jle
insl
in
xchg
or
cmp
dec
stc
call
mov
inc
pop
popf
stos
mov
cmc
xlat
out
nop
mov
adc
insl
imul
jmp
jae
enter
outsl
mov
pop
fldl
stc
int
gs
xor
mov
faddp
rcll
and
jmp
mov
sbb
mov
pop
test
dec
cmc
inc
cld
push
ljmp
sbb
mov
lods
inc
sahf
jb
pop
ja
test
test
inc
arpl
lahf
adc
negb
fbstp
mov
sti
xor
cltd
mov
add
sarb
mov
push
shlb
pop
mov
mov
mov
jecxz
je
mov
repz
mov
decl
cmp
add
inc
popa
push
xchg
add
jnp
jmp
shlb
and
push
push
cmpsb
push
mov
pop
lea
in
movsb
repz
jbe
pop
leave
adcl
cld
subb
stos
or
pop
jge
dec
aad
add
loopne
aad
insl
movsl
sub
lcall
test
repnz
inc
push
add
out
roll
sti
mulb
xchg
push
fldcw
daa
dec
cmc
dec
sbb
or
fld
jno
stos
xor
inc
fmuls
arpl
les
jmp
xchg
sub
pop
adc
lea
jmp
clc
adc
movsb
jmp
sub
mov
aas
sbb
jmp
lahf
mov
stos
pop
mov
jg
mov
pop
dec
push
jmp
in
pusha
sbb
sbb
xor
test
pop
xor
mov
js
insb
fsubs
dec
enter
sbb
cs
test
xchg
bound
repnz
dec
push
sbb
or
xor
mov
repz
or
push
fisubrs
jae
dec
mov
or
cld
dec
cmp
jp
push
lock
addl
add
daa
add
adc
xor
jno
add
sti
fadds
push
xchg
mov
loopne
out
mov
les
nop
sub
sub
test
lds
repnz
cli
xor
sub
into
mov
sbb
cmp
imul
mov
arpl
pop
lret
sbb
scas
mov
pop
mov
movsl
insb
mov
pop
pop
lds
div
jmp
inc
adc
inc
dec
dec
gs
or
cmpsb
dec
cmc
daa
and
repz
inc
imul
pop
aam
dec
dec
nop
imul
vmwrite
sbb
jp
lock
mov
mov
dec
insl
icebp
and
cmpsl
xlat
outsl
call
inc
testl
outsb
sbb
xchg
test
out
mov
stc
loop
cmc
aaa
cltd
pop
mov
jo
jmp
jns
mov
lahf
cwtl
aaa
repnz
xchg
pop
test
add
aaa
subl
adc
push
rorb
out
xor
mov
sahf
sbbb
adc
inc
fsubrl
inc
lcall
add
mov
add
out
jge
out
fcomp
add
xor
je
js
pop
out
cwtl
sub
dec
les
cmpsl
xor
lcall
pop
iret
cmp
fcoml
cmp
inc
push
sub
sub
or
shl
and
and
inc
jg
cwtl
cmp
mov
add
out
scas
mov
dec
jp
addr16
fistpll
add
cmp
pop
lods
jmp
and
xor
loope
cmp
pop
xchg
xchg
xor
scas
xor
mov
cmp
cmp
imul
mov
jecxz
xor
fistpl
push
or
ficomps
mov
loopne
sub
sbb
or
sbbb
push
pop
pop
popa
mov
pop
leave
push
movsl
cli
and
jbe
add
add
or
xchg
or
jno
lret
pop
imulb
test
cmp
sub
loope
ror
enter
inc
jg
sti
or
cmc
mov
sub
imul
xchg
mov
insb
mov
add
push
or
xor
mov
lods
lret
stc
push
push
jno
cmp
sub
popa
into
shl
pop
pushf
arpl
mov
stos
xchg
adc
push
frstor
mov
pop
mov
stos
rcll
das
xchg
dec
fs
lcall
jne
int3
outsb
add
mov
cld
add
test
and
mov
stos
add
out
jge
and
icebp
fdivs
dec
fs
mov
arpl
mov
aaa
mov
test
ja
xor
dec
mov
xchg
pushf
ret
rol
push
fwait
jno
mov
push
xchg
fists
addb
sub
and
pop
stos
mov
jmp
sbb
lret
in
aaa
mov
mov
enter
loop
pop
fstpt
jmp
imul
mov
and
mov
cwtl
xchg
and
fs
jl
iret
pop
jbe
push
nop
aas
xchg
cmc
jae
lcall
inc
fstps
xchg
mov
xor
andb
sti
inc
xor
mov
xchg
int3
inc
loope
xchg
ficompl
sbb
mov
and
in
push
mov
lea
sahf
and
push
adc
cmp
lret
jo
shll
push
mov
sub
push
push
scas
push
fcmovnu
outsl
cld
xchg
pop
pop
lahf
andl
xorl
shlb
popf
iret
and
sub
jg
cld
repnz
push
and
std
lods
pop
dec
and
and
and
mulb
or
inc
sbb
xchg
imul
cmp
adc
pushf
sub
sub
pop
int3
movsb
dec
roll
dec
shrb
aam
push
lahf
xchg
imul
adc
mov
pop
movsb
aad
mov
iret
and
sub
xchg
scas
xchg
or
xchg
lahf
and
cmp
jmp
mov
movsl
andb
add
xchg
fimuls
mull
jl
xchg
mov
mov
push
jmp
xchg
add
jnp
stos
bsf
push
jle
shlb
adc
movsb
jp
stos
out
push
dec
outsl
mov
xor
sbb
jbe
mov
aas
shlb
xchg
xor
cmc
inc
loopne
insb
push
aaa
incl
push
sti
pop
int
sti
jne
outsb
xchg
pop
gs
shlb
daa
cmp
das
test
adc
jl
outsb
xchg
pop
push
lret
outsl
insb
jecxz
aas
in
jg
mov
sub
fsubrs
jl
mov
lret
test
loop
inc
xchg
shll
pushf
loope
lret
rclb
and
push
push
cmc
xlat
lret
add
insl
pop
imul
fadds
push
ss
ret
icebp
ret
pop
es
sbb
jecxz
fildl
into
and
std
sub
cmp
cmp
aam
add
inc
out
cmp
insb
ror
pop
es
test
add
lock
outsl
mov
xchg
sahf
aas
lret
in
fs
stos
ret
insb
stos
cmp
push
out
seta
popa
les
push
cmpsb
xor
or
sbb
cmpsb
cmpsb
mov
repz
mov
and
xchg
cmp
add
mov
sub
scas
xor
sub
mov
or
aaa
inc
or
jb
cmp
stos
ljmp
pop
daa
and
xchg
inc
mov
stos
push
arpl
sbbb
xor
lds
shlb
fildl
dec
int3
les
inc
rcrb
scas
jg
cli
xchg
push
rorl
xchg
sarl
aad
stos
jne
jne
outsl
pop
scas
xor
xchg
inc
mov
mov
daa
addr16
in
mov
ror
mov
adc
shrb
mov
push
fildl
lods
cltd
cmp
jg
mov
dec
pop
subl
in
sub
aam
fnsave
sbbb
imul
adc
aaa
sub
pop
fimull
mov
mov
xor
lock
mov
loop
dec
adc
sti
pop
subl
sti
inc
pop
bound
movl
test
lds
push
lods
lcall
or
sub
add
push
mov
push
dec
cli
frndint
pop
cmpsb
sub
push
in
push
js
mov
lds
xchg
cmc
inc
ficomps
aaa
in
sub
fidivrl
icebp
push
add
cmp
cs
sahf
icebp
push
imull
inc
xchg
inc
or
test
test
add
dec
push
movsb
icebp
das
dec
inc
push
dec
std
jl
push
aaa
mov
jmp
inc
jmp
inc
jl
ss
jl
mov
imul
fstpl
jge
dec
xchg
rcrb
ror
mov
fisttpl
clc
cmpsb
mov
shll
loopne
ss
gs
xlat
mov
or
sbb
hlt
xor
adc
xchg
mov
inc
add
mov
daa
not
cli
repnz
dec
jle
mov
and
popf
sub
sbb
mov
push
jae
sub
mov
insl
cmp
fs
jle
shr
fwait
push
stos
mov
imul
or
lret
mov
addr16
out
push
push
out
call
inc
test
and
xlat
clc
cs
jg
mov
addb
je
dec
jo
jno
jb
scas
insb
mov
mov
and
lret
sub
or
pusha
out
ret
sub
mov
scas
vmwrite
stos
push
lahf
fldt
shll
lock
pop
jle
fst
nop
cmp
xor
and
idiv
stos
push
push
lods
cmpsl
xchg
addr16
dec
and
push
cmc
pushf
data16
cmpsb
movsl
mov
pusha
stos
mov
std
in
adc
cmp
sub
mov
mov
cmp
and
sbb
sahf
jo
jae
adc
push
adc
rcrb
fwait
or
xchg
mov
pop
dec
inc
pop
inc
lret
jmp
imul
dec
mov
or
xor
daa
das
inc
adc
pop
push
jne
push
fdivp
sahf
ret
cmp
jp
push
sahf
loop
cld
imul
cmp
jmp
mov
js
daa
mov
add
cmp
sub
push
insl
cmpsl
loop
insl
mov
jmp
jmp
ja
and
mov
fstps
outsl
sub
xlat
cs
pop
dec
je
mov
lahf
cld
fwait
inc
sub
out
ss
int3
jno
aas
or
fldt
fiadds
int
jbe
jecxz
loopne
or
add
stos
mov
adc
mov
add
xchg
idivl
das
lea
fildll
fistpl
ds
sub
shrb
movsb
dec
repnz
mov
jo
test
adc
xor
movsl
out
or
or
call
cmpsb
ficompl
lods
scas
and
or
mov
scas
jnp
mov
in
fwait
inc
out
shll
cmpsl
and
imul
jns
cs
mov
cmc
push
push
imul
nop
sbb
test
mov
sbb
xlat
lock
mov
outsl
push
rolb
sub
sub
xchg
icebp
adc
inc
mov
mov
aaa
inc
fwait
mov
xchg
into
push
push
scas
pop
xchg
mov
push
ja
arpl
jns
das
cld
sbb
cmp
lret
adc
push
arpl
add
jmp
push
cmp
sbb
data16
xchg
add
out
sbb
push
or
and
mov
push
sbb
xchg
mov
pop
nop
shr
int
loop
mov
fs
cld
lea
jmp
rcr
mov
call
cltd
ljmp
js
sbb
xchg
jl
and
loope
cs
cltd
pop
ljmp
xchg
cmpsl
dec
cld
adc
popf
jne
repnz
adc
adc
enter
adc
hlt
into
in
out
pop
outsl
shll
das
xchg
jbe
out
pop
dec
mov
jne
cmp
mov
pop
into
jle
cmp
mov
cmp
enter
mov
sbb
mov
mov
xchg
inc
shrl
iret
lahf
push
jo
fisubrl
jle
pop
mov
fdivl
insl
sti
fildl
add
push
or
xchg
add
push
stos
push
inc
adc
xor
lea
jne
ret
test
push
adc
in
or
insl
add
rol
pushf
cli
mov
aam
out
lods
mov
inc
xor
inc
sbb
jle
or
or
js
in
sar
inc
mov
and
mov
mov
push
cs
and
xchg
ret
inc
inc
cmp
cs
pop
das
popf
fdiv
sti
xchg
movsl
into
out
mov
mov
jmp
sub
xorl
call
mov
or
cmc
ljmp
mov
inc
mov
jb
push
and
mov
xor
insl
fwait
mov
dec
or
dec
adcl
dec
push
popa
push
adc
push
mov
jne
hlt
lret
xor
sub
sbb
out
int
sub
stos
int3
mov
clc
ffreep
inc
sbb
sbb
das
arpl
lret
jle
ds
lret
sti
pop
sub
adc
jle
out
jae
adc
in
pop
adc
cmp
sahf
adc
dec
adc
arpl
cwtl
dec
push
sahf
xchg
pop
jns
repnz
xlat
rorl
sbb
push
daa
in
or
add
dec
test
hlt
addr16
xor
aas
jae
mov
cmc
ss
and
push
cld
sbb
je
mov
cmpl
adc
mov
jp
push
or
rorb
cltd
pop
xchg
xchg
fisttpll
xchg
push
pop
push
loope
stos
aaa
mov
lret
sub
loop
test
jmp
sti
xchg
cwtl
shlb
sub
je
dec
stc
cmp
jno
mov
push
aam
lods
pop
push
sub
cmc
test
xchg
movsl
pop
jecxz
mov
ljmp
xchg
jnp
scas
loopne
inc
jp
or
pop
aam
shr
dec
push
enter
aaa
comiss
sbb
xchg
cs
fstpt
ret
in
bound
xchg
dec
cmp
insb
rorl
add
sub
js
pop
xchg
int3
add
pop
cltd
jl
push
pop
popl
add
mov
mov
or
ljmp
add
mov
mov
lods
call
jge
xchg
data16
nop
mov
inc
cmp
ljmp
loope
clc
xor
hlt
lods
pop
shll
repnz
hlt
dec
cmp
pusha
pop
cld
jmp
pop
push
mov
sbb
push
jne
sbb
stos
in
lds
mov
lods
dec
fistpl
or
dec
pop
dec
fwait
clc
xchg
popf
jo
shl
ss
sub
sbb
xor
jp
scas
push
add
jnp
jge
mov
ret
dec
inc
sbb
ret
xchg
scas
repz
jo
jp
cli
pop
add
xchg
fidivs
push
dec
call
xlat
or
leave
add
lret
xchg
cwtl
mov
idivl
ljmp
aas
xor
outsl
sbb
dec
mov
aam
cwtl
stos
mov
cmp
jle
xor
push
jge
jle
or
jns
inc
add
adc
or
pop
out
fcoml
inc
jl
loopne
and
sahf
testl
jno
dec
sub
lret
ljmp
xor
xchg
mov
push
mov
mov
lods
pop
dec
shr
or
adc
cmp
fstpt
fiaddl
rcrl
cld
addr16
rorl
sub
mov
mov
fistl
xchg
fldl
and
bound
sahf
xchg
push
movsb
adc
test
jb
into
xorb
ds
call
roll
addr16
mov
pop
mov
lcall
xchg
adc
cmp
pop
push
rol
mov
cmp
dec
xchg
outsb
or
or
lock
and
fldcw
nop
mov
out
sub
push
cmp
ljmp
adc
pop
mov
ss
mov
sbb
scas
jae
loope
cmp
pop
jo
mov
push
rol
stos
orb
or
js
push
out
xor
adc
mov
mov
pop
pop
jg
add
adc
pop
movsl
int
adc
cmp
cld
mov
jbe
sbb
cmp
xchg
xor
fbld
sub
push
dec
push
jg
out
sbb
push
fcomp
ret
jnp
out
std
jo
push
ss
fldenv
sub
stc
scas
js
jp
sbb
aaa
addr16
add
shlb
call
jae
xor
jb
test
add
jno
jb
inc
add
cld
cld
into
push
lock
xchg
inc
sub
push
fidivs
pop
pop
inc
ss
stos
int3
xor
outsb
dec
bound
sub
fdiv
add
or
or
popa
mov
dec
add
aas
scas
jp
aad
mov
xchg
dec
inc
pop
inc
inc
imul
cmp
out
lahf
mov
jl
xorl
outsl
into
xor
dec
xor
xlat
inc
test
arpl
in
adc
adcl
ds
popf
imul
adcb
push
iret
ljmp
lds
test
mov
fsubrs
into
mov
adcb
dec
jge
insl
je
aas
push
xchg
mov
or
mov
mov
in
pop
add
je
loop
mov
xor
cmp
add
flds
inc
fmul
inc
stos
call
mov
loopne
imul
mov
fwait
shll
rorb
mov
mov
pop
jl
outsb
insl
push
add
xlat
out
mov
out
sbb
in
adc
js
cwtl
pop
jge
mov
jmp
pop
repz
mov
xchg
ret
mov
dec
jnp
mov
cmp
mov
and
jl
push
or
rcl
aad
or
adc
jnp
xor
es
pop
imul
cltd
add
mov
sbb
negb
les
scas
arpl
and
xor
inc
mov
sahf
aas
dec
push
nop
loope
in
jb
or
lea
dec
xchg
bound
mov
subb
or
test
mov
iret
mov
test
sbb
xor
push
dec
jne
pop
in
push
adc
dec
and
repnz
mov
aas
mov
cmp
push
insb
pop
outsl
fs
int3
sahf
jp
ret
into
push
or
mov
pop
dec
sbb
mov
lds
aas
xor
xorl
inc
clc
adc
and
inc
rcll
nop
cmp
dec
in
shlb
data16
inc
or
mov
add
vfmaddsub231pd
xchg
cmp
mov
nop
ja
mov
in
addb
jle
jp
inc
jo
pop
xor
idivb
mov
sbb
and
sti
inc
and
jno
repnz
add
scas
inc
push
dec
stc
movsb
push
test
xlat
add
jp
mov
pop
or
mov
xor
out
repz
inc
mov
pop
lahf
adc
cmp
fdiv
rclb
push
cmp
ret
sbb
xchg
add
shlb
pop
pop
or
adcb
push
sbb
lock
outsl
in
scas
jmp
push
inc
lahf
sub
cmp
aad
xchg
in
shrl
adc
inc
sbb
add
mov
adc
stos
push
call
movsl
dec
adc
jnp
shlb
cmc
jl
das
jmp
cmp
imul
lcall
adc
shlb
cmp
pop
sbb
sbb
inc
fcoms
ret
es
nop
ja
inc
or
mov
out
cwtl
or
sbbb
lds
ja
sbb
jno
loop
mov
iret
hlt
push
ljmp
imul
mov
test
nop
arpl
fnstsw
pop
push
push
adc
mov
pop
repz
fisttpll
mov
ja
jns
sbbb
xchg
push
fcos
fs
jne
mov
dec
pushf
mov
xchg
mov
test
adc
cli
mov
pop
shll
push
and
cltd
fisttpl
outsl
js
sarb
cmp
jmp
xchg
inc
fwait
sti
xchg
rcll
test
lcall
dec
cmc
clc
xchg
adc
xor
das
faddl
mov
int3
into
dec
fucom
pusha
add
adc
and
sbb
out
pop
and
ficompl
cmpsl
test
and
rolb
push
pop
cmp
setg
push
xor
in
xor
lcall
pop
sahf
adc
lret
jmp
mov
pop
or
lret
lods
int3
lahf
ljmp
je
cld
and
and
mov
add
mov
mov
mov
ljmp
mov
aaa
or
sbb
mov
shlb
into
shl
cmp
adc
mov
pop
mov
ja
or
hlt
ret
mov
add
loopne
push
adc
push
add
cmp
test
inc
jmp
cmpsb
cmp
sti
mulb
lret
xchg
in
dec
sbb
icebp
mov
pop
notb
mov
xor
into
cld
inc
movsl
out
mov
movsl
sbb
sub
jno
js
ss
jb
sub
mov
mov
inc
ja
cmp
xor
flds
hlt
mov
in
std
mov
cmpl
pusha
cmp
sti
rorb
frstor
lahf
hlt
cli
push
push
stos
mov
mov
mov
sbb
add
jo
fidivrs
sbbl
test
cmp
lcall
fistpll
push
daa
and
jb
cmp
xchg
and
lret
lock
leave
sub
adc
arpl
data16
cs
or
push
xlat
iret
push
push
xchg
nop
out
mov
add
push
mov
imul
movsb
into
jmp
repnz
dec
dec
std
push
shr
jecxz
xor
cwtl
xor
jnp
sti
jnp
mov
ret
sub
cmp
addl
outsl
push
push
inc
lock
lods
outsl
jno
add
sub
setno
repz
data16
repnz
loopne
scas
and
and
stc
fdivrs
inc
fnop
das
ljmp
jno
mov
imul
push
pop
mov
iret
in
rclb
xchg
sahf
mov
add
pop
mov
dec
sub
pop
int
jle
cwtl
sub
jp
add
mov
inc
cmp
clc
push
jae
dec
xor
ret
push
jmp
dec
mov
push
fsubrs
pop
pop
cmp
mov
test
cmp
jbe
fimull
dec
aam
or
cwtl
repnz
push
push
and
addl
push
je
mov
and
mov
inc
mov
out
ljmp
lock
out
mov
pop
push
lea
inc
je
inc
cmp
jmp
ss
or
lret
repnz
div
jle
lea
stc
sub
sbbb
imul
fsts
shlb
pop
pop
hlt
and
mov
sti
pop
jae
mov
pop
icebp
dec
mov
mov
dec
sbb
jae
rolb
dec
xor
sbb
adc
out
arpl
xor
fwait
out
and
fsubrl
imul
in
cmp
loope
in
sti
out
pop
sbb
push
inc
add
sub
enter
pop
push
or
iret
pop
sub
roll
sub
mov
sub
cs
testl
sub
mov
adc
cltd
dec
lds
leave
stc
int3
mov
add
fidivl
call
xor
cmp
jne
cmp
repz
imul
out
push
sub
div
jo
adc
mov
stc
add
jns,pt
cmpsl
sub
out
sbb
ss
and
mov
pop
mov
push
loope
or
aas
stos
sti
push
inc
sbb
push
sbb
cmpsb
mov
add
cmp
in
int
jl
and
dec
add
lret
es
ds
imul
jnp
push
scas
xor
push
shll
push
fstl
es
insl
ss
pop
inc
jle
xchg
dec
mov
aad
add
jne
and
xchg
jae
les
scas
mov
dec
stos
rcl
les
loopne
aam
into
push
repnz
jmp
pop
xchg
or
push
call
dec
inc
mov
lcallw
sub
repnz
lcall
shll
dec
xor
scas
je
test
add
jmp
lret
movsb
movsb
outsl
mov
pushf
sbb
jg
js
outsl
cmp
cwtl
jmp
cmp
scas
je
xchg
sbb
imul
inc
add
mov
inc
adc
mov
fs
pusha
xchg
shlb
mov
adc
mov
mov
adc
pop
rorl
das
sti
xor
pushf
sub
daa
sub
test
push
out
sub
sbb
jb
imul
jnp
push
imul
lods
out
popa
ljmp
call
call
out
mov
push
and
dec
add
inc
dec
imul
jnp
jns
negl
fs
in
lods
idivb
push
jp
daa
mov
or
dec
push
fdivs
dec
cs
les
sub
cmp
imul
aas
scas
in
mov
aam
pop
mov
in
fmul
call
popf
movsl
fdivrs
mov
xchg
mov
mov
mov
lock
pop
xchg
out
dec
push
std
xchg
jmp
rorb
adc
rcl
test
push
addr16
clc
cmp
push
or
into
xorl
mov
adc
jp
outsl
test
mov
outsl
pusha
mov
xor
sbb
and
ljmp
pop
mov
push
mov
pushf
jl
daa
mov
lahf
mov
dec
enter
repnz
adc
mov
sahf
out
add
sar
mov
mov
jno
les
iret
inc
sbb
pop
fiaddl
sbb
push
mov
sbb
or
out
push
mov
fwait
loop
cmp
cs
andb
ds
stos
push
push
push
repnz
popf
sbb
xchg
pop
fildll
xchg
or
dec
jb
loop
xlat
xchg
fwait
adc
loop
hlt
cmc
insb
push
out
or
adc
mov
mov
hlt
arpl
add
lahf
loopne
sbb
stc
xor
fcomps
sbb
inc
cmp
jno
xor
out
xchg
xchg
filds
push
or
push
lea
jecxz
out
icebp
cmp
arpl
setno
xchg
movsb
push
xchg
shr
sbb
push
aaa
out
fs
xor
xor
mov
loop
fs
inc
inc
loop
lds
sub
add
mov
arpl
pushf
daa
out
mov
push
je
cli
popf
xlat
push
js
rolb
inc
inc
add
push
scas
mov
incb
inc
in
mov
rcrb
mov
xchg
mov
dec
mov
push
xor
fidivl
idiv
pop
mov
aad
cld
cmpsb
dec
or
cmp
in
xchg
ret
fucomip
mov
shlb
fs
inc
imul
xchg
add
mov
incl
mov
outsl
iret
orl
or
in
push
loope
xor
add
cld
cmp
insb
enter
mov
aam
into
dec
jl
aas
in
inc
or
inc
xchg
cld
cmpsl
scas
cmp
jb
sti
jge
aas
inc
xor
adc
xchg
movsl
fildl
lds
adc
mov
push
xor
push
cwtl
xor
cltd
mov
pushf
pushf
mov
imul
cmpl
rcl
sti
nop
or
insb
pop
push
lret
std
std
sbb
rorb
pop
and
movsl
push
frstor
aad
inc
pop
out
and
pop
dec
es
sbb
pop
ret
shrb
cmpsb
test
add
frstor
addr16
cmp
enter
in
outsl
xchg
mov
add
sub
adc
jmp
cmp
push
dec
fisubl
push
and
or
push
add
bound
inc
test
pop
movsb
inc
push
jbe
jae
lahf
xchg
jp
pop
mov
sbb
inc
insl
xchg
or
xchg
outsl
mov
jmp
and
pop
add
pop
psadbw
out
ss
gs
nop
fwait
les
pop
cmpl
mov
sbb
mov
and
cltd
cwtl
jmp
hlt
or
ljmp
mov
inc
sub
mov
jmp
or
aad
inc
popa
pop
xchg
loope
ds
pop
mov
ficomps
cmp
xchg
cld
pop
or
lds
in
scas
and
bound
es
testb
lods
xor
cld
sub
sub
imul
push
sarb
ret
cmp
xchg
test
cmp
lods
pop
dec
fdivl
out
lds
movsl
call
inc
ds
push
clc
pop
adc
mov
adc
push
jge
jg
xor
adc
lds
mov
and
cld
dec
popa
jnp
add
or
push
sub
or
jo
fisttpll
cmp
outsl
out
push
jne
adc
sbb
stos
insl
daa
push
sbb
fwait
jo
or
dec
addr16
sub
xchg
lods
push
adc
mov
push
cli
jecxz
sbb
xor
push
call
mov
sti
aad
sbb
mov
pop
fcoml
incl
jb
test
in
jle
fidivs
add
xor
sub
pop
pop
mov
dec
add
cmpsl
push
lock
test
fistl
hlt
inc
lock
jecxz
enter
cli
fbld
xchg
ret
fld
jle
jae
push
es
jg
rcrb
sti
enter
adc
int
xlat
cmp
sbb
push
jnp
mov
push
ror
or
fnsave
or
out
jns
sbb
cmp
mov
adc
lahf
cs
outsb
scas
dec
rolb
scas
scas
xor
popf
adc
dec
inc
xchg
push
push
test
jo
popa
cmp
lods
xchg
es
pop
sbb
ja
cmp
sbb
arpl
push
or
fsubrl
in
xor
lods
sbb
pop
mov
das
shll
dec
push
pop
ss
sub
cmp
and
dec
lock
leave
lretw
fcompl
arpl
mov
push
mov
data16
dec
in
adc
test
adc
movsb
call
mov
pop
mov
inc
test
jge
jle
sub
adc
nop
jge
pop
nop
sub
sub
mov
shl
cld
push
ss
daa
lret
in
daa
fdivr
lock
xchg
cmpl
je
xor
enter
in
bound
clc
fwait
std
jb
nop
adc
leave
push
repnz
mov
mov
adc
shrb
mov
mov
nop
sti
push
mov
fistps
lds
sti
sub
xor
and
mov
sub
inc
outsl
lods
fiaddl
fimull
jecxz
cltd
into
je
mov
inc
pop
or
xchg
fisubrs
sub
mov
gs
insl
and
xchg
call
enter
out
mov
mov
jge
add
push
mov
sbb
mov
clc
cwtl
ds
scas
inc
ja
jns
inc
mov
dec
jmp
fdivs
or
shl
xor
mov
push
out
ret
add
and
dec
pusha
mov
mov
test
and
sub
jae
add
dec
dec
pop
insb
mov
mov
mov
inc
xchg
pop
dec
fwait
outsl
mov
test
pop
outsb
adc
rcr
push
or
mov
lahf
cmpsb
pop
outsl
ss
push
call
push
pop
sbb
mov
push
dec
test
fildl
fldcw
in
out
sti
pop
into
sbb
sub
outsl
jmp
sbb
sarb
mov
mov
and
mov
sub
movsl
push
jge
out
notl
cld
mov
ficomps
loop
pop
imul
sbb
cwtl
cmp
push
jmp
orb
push
cmpsb
mov
rorb
mov
fwait
in
and
adc
mov
adc
add
testl
enter
es
rcrl
pusha
neg
loopne,pn
xor
cmp
stc
pop
test
sti
out
icebp
push
sub
mov
cmp
push
repnz
in
cmp
push
jl
sbb
inc
in
insl
add
or
jb
pop
push
shrl
rorb
sub
mov
mov
sarb
pop
mov
jmp
nop
pop
stc
insl
fdivs
ucomiss
jmp
bound
push
push
in
les
push
cli
out
jnp
test
movsl
xchg
adc
cmp
insl
sub
pop
jnp
adc
into
pushf
push
ja
movl
sub
push
fstps
test
jnp
inc
ljmp
lahf
imulb
push
mov
lahf
and
jecxz
mov
push
rcrl
call
nop
mov
ja
push
adc
push
mov
sub
shrl
shll
repnz
dec
mov
add
sti
jmp
or
adc
dec
sbb
xor
sbb
lcall
scas
cmovno
repnz
jbe
adc
jne
sarb
jne
sub
inc
mov
lahf
jbe
int
sub
sub
add
pop
clc
test
mov
adcb
dec
repnz
std
fdivrl
icebp
negb
jnp
into
mov
repz
nop
mov
mov
add
test
shlb
inc
mov
add
or
sub
iret
or
fsubs
repnz
lock
jb
lcall
dec
or
mov
loope
enter
iret
cld
push
push
jno
xor
add
dec
testb
pop
daa
mov
pop
cwtl
sbbl
rolb
je
inc
mov
push
test
jmp
cmp
mov
fldt
jg
jbe
addb
xor
and
adc
inc
in
sbbl
sarb
push
lock
outsb
mov
dec
dec
outsl
hlt
inc
test
int3
mov
jmp
push
mov
xchg
sub
push
int
popa
ja
add
addl
ud0
push
nop
sbb
mov
les
insb
into
int
mov
jb
push
xor
mov
arpl
or
xchg
inc
cmp
cmpsb
push
xchg
js
hlt
sbb
jecxz
inc
mov
pop
xor
jle
cmp
adc
inc
fidivrl
jbe
sub
xor
retw
jg
sub
mov
insb
adc
cmpl
movsb
jnp
hlt
sbb
call
outsl
int3
insb
es
test
movsl
idivl
push
adc
test
lds
adc
lds
idiv
mov
lcall
or
in
xor
subl
add
mov
stos
xchg
adc
jno
repnz
aam
fdivl
lcall
sub
mov
sbb
push
sbb
mov
xor
int
outsb
mov
sti
into
js
daa
mov
pop
pop
in
mov
cmpsl
mov
jmp
lret
jge,pt
mov
das
div
mov
push
or
in
movq
out
iret
aam
xchg
push
fs
ljmp
test
or
sti
add
scas
dec
xchg
jp
cs
fcomip
mov
jmp
jae
dec
inc
subl
inc
int
call
mov
mov
jno
mov
loope
and
add
fisubrs
fcomps
imul
push
cmp
sbb
mov
mov
shll
or
hlt
mov
cld
mov
shl
sub
mov
add
adc
adc
test
out
in
or
mov
mov
fwait
pop
sub
adc
add
pop
fidivrs
rclb
es
jns
outsb
icebp
and
inc
inc
xchg
push
pusha
loopne
aas
js
push
adc
lahf
test
rclb
and
movsl
adc
add
popf
stos
or
xor
sar
lret
cmpsl
jno
xorps
xchg
mov
mov
jns
push
stos
or
push
out
dec
flds
lds
ss
roll
xchg
inc
add
xor
mov
and
pop
pop
pop
mov
rorb
test
cmp
mov
add
pop
jae
xor
sub
push
or
jae
into
mov
push
jo
lea
sbb
iret
xlat
xor
cmovns
mov
dec
or
pop
hlt
pop
int
adc
or
mov
push
cwtl
andb
mov
cmp
mov
data16
xchg
push
sub
lds
stos
jns
cld
mov
lahf
lea
add
jp
inc
jns
insb
adc
outsl
xor
cmp
rorb
shrb
mov
pop
insl
in
push
jg
sbbl
xchg
lcall
jbe
or
mov
scas
and
xlat
add
dec
enter
pop
ret
adc
ljmp
xchg
mov
xor
test
xchg
inc
stos
sti
push
lea
add
test
or
sbb
xchg
pushf
pop
in
or
jns
test
pusha
mov
sahf
inc
push
sub
out
cmpsb
fcomps
sbb
or
dec
sub
pop
out
push
push
or
cltd
mov
jne,pn
fcomp
push
lea
shlb
lret
ja
shrb
pop
pop
aam
lods
inc
or
cs
xchg
mov
push
mov
sahf
cmp
cs
xchg
push
ret
ss
pop
fsts
xor
push
mov
mov
push
out
mov
mov
or
fildll
cmp
sub
fs
or
mov
and
dec
in
xor
push
mov
inc
leave
cmp
sbb
arpl
push
jae
loopne
sahf
dec
imul
inc
jns
sub
cmp
push
popa
mov
aad
dec
push
cld
lcall
mov
mov
pop
ljmp
in
xor
inc
pop
dec
inc
or
inc
fwait
es
xchg
test
das
popf
sub
xor
test
mov
and
mov
cmp
cmpsb
ret
movb
movd
leave
and
fsubr
push
sbb
sub
mov
add
popa
fdivl
loope
mov
les
xchg
loope
inc
mov
jp,pn
fcos
mov
out
call
mov
jl
fwait
add
or
sti
lods
sbb
adc
cmpl
sbb
or
int3
fs
insb
push
and
pop
std
adc
xor
popf
imul
lock
gs
sub
pop
lods
adc
inc
mov
lds
into
hlt
leave
cmp
push
addr16
clc
adc
sbb
out
or
test
out
in
pusha
push
and
xchg
xorb
cli
popa
sbb
ljmp
rolb
xor
sti
fwait
and
push
xor
les
xor
sbb
lods
or
addl
xchg
cmc
js
ds
popl
adc
jge
shrb
sbb
pop
or
hlt
mov
cli
jnp
int3
addr16
sar
sbb
outsl
xlat
ja
fnsave
add
cmp
lret
and
movsl
sbb
pop
pop
adc
pop
xchg
jge
mov
pop
pop
repnz
mov
or
ja
adc
cmpsb
pop
ds
cs
out
mov
roll
pop
xor
out
and
les
cmp
shll
pushl
cmp
and
mov
jno
or
sbb
sub
add
pop
mov
subl
rolb
and
pusha
test
icebp
push
stos
pop
rcr
sub
stos
fists
lahf
jbe
movsb
mov
sbb
adc
insl
push
pusha
sub
mov
in
lds
jo
cmp
rcr
pop
push
daa
hlt
incl
mov
sub
dec
movsb
repz
and
in
std
fnstsw
jle
cli
cmp
xor
jg
and
js
sbb
sub
es
inc
add
lahf
idivb
and
nop
pop
sarb
mov
adc
test
inc
sub
mov
push
aad
lahf
cmpb
movsl
ja
aaa
push
rorl
xorb
sbb
sub
ljmp
rorb
push
stos
adc
pusha
lock
inc
mov
mov
icebp
and
mov
mov
imul
pop
xor
mov
sbb
inc
or
stos
xchg
loope
xor
div
das
lret
and
inc
cmp
movsl
mov
in
xor
shl
push
pop
and
fistpl
outsb
cli
movsl
data16
pop
aad
mov
mov
pop
xchg
inc
test
ds
dec
dec
dec
xchg
int
movsl
inc
xor
xchg
push
inc
fnstsw
insb
push
cwtl
add
jp
pop
lea
shlb
aaa
mov
jp
xor
adc
push
mov
inc
loopne
inc
shrl
in
jno
inc
mov
or
gs
sti
jmp
mov
insb
inc
out
or
clc
mov
jge
xor
adc
fcmovbe
insl
xorl
dec
lret
lea
in
cs
sar
cmp
dec
fcompl
in
jo
cli
out
pop
pop
call
pop
shl
aad
loop
scas
shl
loop
lahf
lds
mov
inc
stos
mov
popf
pop
stc
fsubl
pop
xchg
out
ljmpw
jmp
inc
sub
push
shll
int
xor
incb
push
stos
mov
mov
cltd
inc
sbb
fs
push
nop
sub
add
cmp
rcrb
push
movsl
xchg
mov
jae
mov
mov
mov
in
or
jne
jl
mov
loopne
ficomps
or
mov
cmp
sub
push
mov
repnz
and
jp
mov
jb
sbb
nop
jge
orb
cmp
icebp
aad
xchg
pusha
int3
mov
inc
nop
ja
rcrl
test
push
and
or
cmp
js
sarb
or
lods
leave
je
add
mov
jg
inc
xor
mov
add
cmp
add
push
out
cmp
inc
mov
push
mov
lcall
or
lock
and
jno
adc
inc
imul
mov
jno
mov
mov
sbb
dec
mov
mov
push
stc
stos
add
ljmp
test
ret
aad
pop
arpl
rolb
and
mov
lds
cltd
leave
ret
cmpsb
repz
loope
jb
out
jnp
inc
test
test
push
iret
outsb
rorl
adc
dec
mov
sub
and
pop
jns
fnstenv
ret
mov
imul
and
pop
mov
or
mov
ret
dec
in
ret
bound
xchg
in
dec
loope
cmp
scas
rcrb
sahf
add
mov
not
push
aas
lea
iret
and
jle
cmp
xchg
xor
ret
out
sbb
bnd
adcl
xchg
and
aam
inc
or
cmc
add
xor
lret
cmpl
pop
popf
repnz
mov
bound
leave
xchg
xchg
das
and
mov
add
stos
jo
mov
cmpl
ret
imul
inc
divl
or
subl
in
mov
sbb
mov
fistpl
xchg
mov
dec
test
popa
cwtl
and
inc
jbe
out
push
cmc
add
jne
pop
mov
cmc
enter
or
cs
popa
xorl
mov
mov
scas
ret
sub
orb
popa
in
stos
mov
pop
cltd
out
mov
push
mov
mov
ret
mov
pushf
inc
jo
fs
and
cmc
or
sub
xor
jl
cltd
fnstsw
popa
xor
jp
gs
fists
add
sbb
inc
inc
test
xchg
imul
lret
add
sbb
sbb
das
inc
aad
fs
push
push
xchg
push
inc
aas
cmc
push
cmp
pop
push
add
jnp
mov
mov
ljmp
xchg
mov
sti
add
xor
pop
ret
mov
idivl
sahf
pusha
stc
add
int
loope
dec
sarb
push
imul
into
faddp
mov
les
inc
sti
int
shll
sbb
into
in
mov
or
sub
or
jnp
cld
mov
sti
dec
lea
dec
gs
sub
mov
sub
push
or
rolb
repnz
and
stos
ret
outsb
nop
add
inc
and
and
loop
lret
and
mov
ret
aam
scas
sbb
popf
das
mov
out
mov
cmp
sub
into
push
into
dec
mov
int3
mov
int3
mov
lods
add
sahf
mov
add
fsubs
xlat
pusha
push
add
test
xchg
cltd
mov
or
mov
xchg
fbld
mov
popw
es
movsl
sub
scas
mov
add
repz
test
js
popf
sti
push
or
bound
decb
sbb
jge
and
mov
add
inc
mov
mov
xor
jl
xor
outsb
iret
add
cmpsl
pop
les
pop
test
cmpsb
fidivrs
push
cs
dec
pop
push
and
scas
jecxz
push
jae
mov
pushf
or
ja
leave
inc
jns
xchg
push
mov
or
shl
jge
mov
xchg
fwait
cmp
and
stos
popl
jmp
in
subl
xor
pop
sbb
add
pop
sbb
jge
test
lcall
fcoml
je
mov
push
stc
add
pop
test
lret
stos
ret
dec
inc
iret
scas
imul
pushf
pop
pop
sbb
lcall
cli
outsl
stc
adc
or
ds
mov
jge
add
or
mov
bound
lcall
pop
xor
jbe
mov
and
jl
mov
push
inc
cmp
mov
daa
or
mov
imul
dec
push
cwtl
icebp
pop
mov
test
or
cmp
sarb
pop
jnp
pop
adc
mov
add
data16
mov
lahf
addr16
inc
sub
movups
inc
sti
lret
shlb
or
push
iret
add
jmp
in
scas
cmp
cmp
rorb
xchg
jmp
sahf
mov
sub
outsb
arpl
and
lods
mov
pop
leave
xor
cwtl
dec
mov
iret
mov
pop
jecxz
pushf
sub
aad
and
sahf
lret
es
or
jne
xor
xchg
jb
lds
imul
jo
ffreep
pop
sti
leave
test
inc
xor
mov
xorb
cmc
in
lods
orb
cld
out
add
xchg
int
lcall
rcrl
pop
push
cmp
mov
cmp
push
dec
std
mov
adc
xchg
adc
jle
insb
lret
popa
mov
mov
jns
sub
hlt
xchg
daa
sahf
insb
out
jno
sbb
push
or
mov
cmp
aam
outsb
rolb
clc
jno
inc
repnz
test
add
aad
les
jp
stc
cmc
into
or
repnz
push
jecxz
mov
xor
jns
sahf
adc
push
dec
int
mov
inc
pushf
cltd
hlt
sahf
push
int
ljmp
sub
psllq
and
sahf
les
pop
stc
add
sahf
fstpl
and
pop
xor
mov
mov
enter
adc
aaa
dec
mov
call
shll
push
xor
sahf
jnp
sbb
push
push
je
popf
fidivl
mov
jb
lock
clc
xor
pop
xor
into
xchg
push
dec
leave
fs
add
out
ret
addr16
in
xor
dec
fists
movsl
sbb
mov
adc
push
push
jnp
fmul
movsl
aaa
push
sub
fimuls
or
mov
daa
pop
or
les
ljmp
out
mov
fcomps
mov
sub
icebp
pop
mov
fwait
mov
sub
push
cmp
popf
shrl
push
clc
cltd
add
pop
enter
or
ror
loopne
lret
mov
adc
call
cmp
add
mov
cmpsl
sti
pop
dec
daa
out
sub
xor
scas
and
je
push
jb
push
lcall
push
out
cld
pop
test
mov
sub
sbb
fcompl
insb
fdiv
das
dec
sbbl
mov
xor
push
aas
mov
xor
xchg
sbb
ret
ret
xor
lahf
cmp
mov
sti
mov
add
repnz
fstps
pop
mov
loope
jecxz
imul
cmp
imul
xor
orb
ret
push
mov
pop
jns
cltd
setns
or
push
fiadds
or
push
lods
adc
mov
popa
dec
outsb
fs
cmp
mov
ds
add
arpl
xor
add
je
push
xchg
jnp
push
sbb
shrb
int3
movsb
stos
cltd
test
outsl
push
ja
push
jge
in
sbb
es
inc
mov
push
xorl
cmpl
imul
cs
mov
lea
stc
inc
movl
xchg
pop
pop
push
push
xchg
pop
mov
mov
leave
inc
out
push
adc
and
imul
or
ljmp
sbb
xor
mov
jne
je
inc
mov
fs
lcall
xchg
cmp
rcll
dec
rcr
and
sub
jo
dec
test
imul
rcrl
adc
adc
sub
out
mov
add
fistpl
xor
mov
in
push
sbb
push
mov
rcl
neg
stc
in
pop
aad
add
sti
cwtl
sbb
je
push
sub
cmp
arpl
mov
lret
icebp
ss
cld
push
stc
adc
mov
sbb
fldcw
stos
cmpsl
cmpl
jns
jmp
clc
adc
aad
add
mov
or
insb
dec
dec
inc
dec
xchg
sahf
mov
dec
mov
or
cwtl
hlt
addl
xor
mov
jg
sar
mov
jno
xor
xlat
push
cld
sti
xlat
cwtl
sbb
out
adc
scas
dec
sub
fnstsw
or
lcall
push
test
lock
or
or
gs
lret
in
xor
in
push
jecxz
cmp
mov
jmp
add
inc
aam
add
es
pop
push
fwait
cmc
mov
loopne
lock
pop
shlb
jl
jp
push
xor
xor
jmp
pop
jnp
test
mov
sub
jae
dec
xchg
fildll
sub
clc
jne
movsb
mov
jg
fists
xor
lea
movsb
mov
scas
hlt
sub
insl
mov
jb
loopne
sbb
gs
bound
xchg
pop
adcl
mov
fimull
in
pop
sbb
or
adc
cli
sbb
xchg
cli
add
xchg
test
push
xor
add
outsb
xchg
inc
mov
sahf
aam
mov
es
xorl
xchg
or
xchg
pop
jno
lahf
mov
pop
scas
fwait
mov
pop
inc
lret
shlb
add
int3
loop
out
or
pop
jmp
or
sbb
cmpl
adc
rcr
lods
add
scas
mov
sub
mov
sarl
pop
sti
sub
ds
mov
adc
hlt
mov
pop
aas
and
les
daa
xor
push
jno
pop
loop
jb
in
lfs
cs
mov
repz
or
stc
push
add
mov
imul
push
mov
aas
adc
int3
xor
inc
call
cld
les
out
out
sbb
aaa
lds
pop
addr16
sub
insb
xchg
mov
sbb
pushf
lods
xor
lcall
mov
loop
xchg
sbb
inc
xor
or
aad
lea
sub
inc
inc
in
dec
test
adc
pop
repz
xor
loopne
xor
mov
pop
jl
inc
push
or
or
ds
sub
test
movsl
jnp
mov
outsb
cmp
jg
sub
mov
mull
ss
xchg
push
cmp
jmp
inc
mov
jae
pop
or
cmp
shll
mov
jo
ds
cwtl
nop
inc
filds
sub
adc
les
and
rorl
mov
pop
insb
push
mov
inc
push
lods
jne
pop
insl
rol
xor
leave
cmp
cli
cmc
jns
dec
mov
add
pop
fcomps
jns
and
adc
movsl
pop
lods
negb
fildl
mov
inc
lock
cmp
pop
mov
pop
cmc
or
push
fbstp
add
rolb
outsl
xor
add
or
icebp
or
out
sarl
xchg
or
movsb
xchg
mov
sbb
cmpsl
pop
or
jp
rep
push
add
or
cmp
mov
mov
mov
sbb
cmp
push
mov
sbb
mov
inc
xchg
adc
jp
jno
adc
lods
sub
pusha
in
xchg
call
insb
lock
idivl
sub
and
mulb
lods
mov
mov
push
sub
pushw
dec
and
push
je
mov
pop
sarl
test
mov
popf
call
xor
push
ret
jmp
mov
pop
add
insb
dec
add
iret
daa
dec
ret
adc
rcll
leave
jno
ja
pop
popa
stos
test
cmp
mov
mov
stos
pop
sbb
xor
cld
inc
inc
or
jmp
pop
dec
pusha
mov
psadbw
jno
loopne
out
movb
adc
and
cmp
dec
adc
mov
inc
outsl
je
sbb
pop
or
lret
je
clc
jecxz
push
shl
push
xlat
and
inc
push
xor
inc
mov
jbe
sub
xor
movsb
cmp
mov
cmp
cmp
aad
xchg
ds
pusha
inc
dec
xor
movsl
cmc
pop
fsubs
test
add
out
and
aaa
mov
xor
outsl
dec
inc
movsl
pop
mov
fmuls
xor
scas
mov
cmpsl
and
cmp
call
mov
pop
ss
negl
dec
push
dec
inc
fs
insb
cmp
cmp
pop
push
dec
jae
adc
stc
sti
mov
and
push
pop
stos
std
pop
mov
lock
and
cld
xchg
xchg
lcall
cmp
inc
mov
int3
cwtl
rcll
enter
mov
aad
push
lods
jg
mov
imul
adc
je
movsl
xorl
xor
ss
pushf
test
shlb
daa
jmp
adc
inc
or
and
out
mov
outsb
adc
jge
cmp
sub
xchg
sti
loope
stc
jg
stos
inc
movsl
sahf
pop
mov
jnp
jbe
fdivrs
nop
mov
test
outsb
cli
sti
and
sbbb
inc
adc
out
test
and
or
lcall
aas
sbb
dec
fiaddl
cmp
jb
pop
fs
mov
imul
div
scas
sub
xor
test
pop
fsub
sub
lret
andl
les
je
roll
xor
jecxz
cmp
jle
fbld
cmpsb
dec
scas
into
aas
cwtl
push
popf
mov
imul
flds
xchg
xor
in
xorb
cmp
or
in
imul
popa
sbb
fucom
dec
cmpsb
movsl
lcall
aas
sub
pop
or
cmpsb
orl
sbb
jno
int
jl
or
jbe
lods
ret
inc
mov
ljmp
loope
loope
xor
xor
or
nop
dec
xchg
outsl
dec
ret
pop
jp
pushf
fidivl
push
jl
pop
aam
sti
sbb
cmpsb
sbb
std
xor
jl
fidivrl
xchg
xor
push
adc
dec
sbb
sub
movsl
jo
or
lods
aam
stos
pushf
insl
shl
and
lock
inc
popa
pop
mov
sti
pop
and
shl
imul
out
xchg
outsl
int3
gs
adc
insl
jp
int
lret
xchg
and
mov
sub
popf
mov
aam
push
divl
dec
das
in
sub
and
pop
push
or
xor
movntq
jb
mov
fwait
inc
push
adc
jg
addr16
sbb
mov
aas
push
mov
mov
add
sarl
jae
pop
loopne
popf
xchg
icebp
push
add
loop
mov
es
xor
mov
lcall
lahf
mov
out
movsw
les
mov
xchg
cwtl
imul
push
mov
inc
dec
push
lcall
inc
sbbb
pusha
xchg
std
pop
call
in
cmp
negb
push
lret
es
sub
cmp
adc
or
enter
rcll
or
sub
imul
xchg
or
aad
lock
sub
fs
sub
hlt
mov
xor
repnz
dec
jae
jp
jge
sbb
push
mov
scas
adc
cmp
push
mov
int3
pop
iret
dec
and
jbe
add
dec
add
and
sub
and
iret
cmpl
ficompl
enter
out
push
pop
sbb
add
leave
xchg
push
popf
daa
sbb
cmp
sbb
movsl
push
fwait
inc
jb
xchg
xor
scas
rorl
cmp
rcrl
insl
add
cs
push
jle
xor
lahf
mov
out
hlt
inc
mov
stos
pusha
cmp
cld
xor
adc
pop
dec
mov
insl
outsl
lea
inc
pop
push
push
jae
xchg
push
ljmp
in
jmp
dec
push
push
cmpsl
imul
push
jmp
push
cmp
data16
and
add
cmp
or
mov
imul
push
outsb
xor
dec
jbe
inc
lret
jae
cltd
roll
push
lret
data16
or
push
jb
aaa
mov
inc
shlb
das
sbb
or
lcall
fsubr
xchg
cmpsl
lahf
aam
loopne
call
add
sub
lret
cmp
xorb
lret
cmp
mov
mov
adc
xor
test
mov
int
shr
mov
pushl
jnp
inc
jbe
xchg
mov
xchg
fdivrl
sub
stc
mov
and
pop
lods
and
leave
adc
jo
rol
jecxz
pop
cli
aam
adc
je
cltd
imul
xlat
jg
push
sbb
stos
int3
xor
scas
cmp
push
push
lsl
pop
sub
xorl
in
cmp
out
sbb
cs
aam
repz
dec
push
test
jmp
int3
mov
in
rorl
push
push
cmovne
hlt
jle
testl
xor
or
sub
adc
cmp
out
mov
sbb
add
into
sbb
cmp
or
sub
outsl
add
aas
lock
stc
imul
sub
aas
and
xor
cld
std
imul
lcall
lcall
loopne
les
mov
jae
dec
pop
fdivrp
out
leave
repz
sahf
call
ret
aam
or
pop
rcrb
pop
sub
iret
movsb
adc
sbb
sahf
bound
jb
out
pop
cmp
fsubs
enter
sbb
fidivrl
cmpxchg
pusha
pop
pop
inc
addr16
cwtl
lea
popf
lret
loope
in
jp
sahf
cmpsl
scas
sub
mov
sbb
fistl
inc
and
jle
idivb
mull
cmp
loop
adc
push
loop
dec
fldenvs
ss
or
std
stc
xchg
in
xchg
xchg
jecxz
arpl
mov
loop
push
jl
cmp
pop
pop
or
and
subb
shlb
fmulp
into
fmull
nop
dec
jnp
jne
daa
iret
popf
ret
and
inc
xor
jnp
xlat
pop
push
mov
pop
rcll
mov
jo
daa
or
xchg
cmp
repnz
mov
loop
cmp
push
sbb
add
mov
fs
mov
adc
mov
push
adc
fxch
push
dec
sub
xor
mov
or
or
mov
test
sbb
inc
push
mov
in
pop
std
clc
mov
jae
stc
cmp
test
push
push
mov
mov
push
mov
fmull
mov
daa
add
imul
out
adc
cmp
shll
mov
fsubrl
mov
bound
adc
int
rorb
or
pop
shll
push
test
out
loopne
pop
pop
mov
jbe
test
sub
jae
clc
out
clc
mov
push
xchg
cmp
xchg
addr16
and
adc
out
lods
sbb
outsl
std
lcall
inc
adc
add
xor
lea
sti
lods
push
mov
pop
adc
or
jne
bound
xor
mov
in
inc
sahf
push
push
dec
ljmp
out
pop
sbb
daa
pop
arpl
mov
xchg
movsb
sub
test
fwait
jl
repnz
out
in
inc
das
xchg
inc
push
inc
pop
pushf
sub
repz
xor
out
jbe
int
icebp
fidivrl
lret
sub
dec
or
neg
push
fwait
clc
stc
lods
cmp
jb
ds
cltd
movsl
imul
lods
iret
mov
cmp
inc
loope
pop
shll
xor
jbe
mov
scas
hlt
shrb
adc
and
ljmp
xor
sbb
push
test
xor
out
les
push
fmull
mov
inc
pop
mov
test
xchg
popf
add
mov
cmp
inc
leave
sbb
push
pop
sbb
ss
sbb
nop
cmpl
sbb
leave
jb
daa
jp
cwtl
xchg
mov
inc
popf
rcl
push
cli
decb
cmp
add
mov
test
dec
and
in
sbb
dec
rcll
jb
jge
ret
and
push
pop
xlat
jno
and
insl
push
push
paddsw
inc
cwtl
xor
add
mov
push
stos
mov
mov
shll
cli
adc
add
ret
fnstenv
jnp
rclb
arpl
daa
push
or
repnz
addr16
popf
hlt
mov
xchg
jp
adcb
jge
int3
loop
and
mov
cli
aaa
jnp
movsb
idiv
bound
aaa
and
xchg
dec
sub
mov
in
ds
push
pushf
sbb
imul
lcall
cmp
and
das
mov
add
ds
imul
mov
fimuls
lods
jno
jl
fwait
out
push
dec
out
lahf
in
clc
test
repnz
mov
xchg
jae
sub
sar
add
pusha
mov
call
cmc
inc
jnp
cmp
xchg
fidivrs
les
fucomp
xor
push
mov
sub
mov
addl
cmp
int
mov
pusha
jne
insl
in
lds
jle
mov
jo
jmp
rcl
repnz
sbb
cmp
mov
jp
int3
push
cmp
popf
cs
xor
outsb
mov
add
rclb
sbbl
or
int
xchg
std
mov
ss
leave
mov
or
inc
xor
add
stos
jns
repz
in
sub
xor
jo
cmp
ja
pop
cwtl
addl
mov
add
enter
mov
fisubl
adc
lock
and
sar
cmc
vfmsub213pd
pushf
and
test
mov
jne
jge
mov
leave
test
jb
pop
loopne
mov
push
pushl
cmc
xchg
jecxz
cmp
or
pop
inc
adc
jb
jmp
dec
inc
and
xchg
mov
test
xchg
and
push
push
push
push
repz
mov
adc
mov
xchg
inc
xchg
in
fmul
testb
cs
sahf
popa
iret
xor
imul
ljmp
or
popf
mov
aam
cmp
pop
xor
sahf
call
inc
fsubl
mov
push
lcall
mov
pop
sub
pop
dec
add
data16
frstor
mov
inc
rcr
cltd
repnz
hlt
pop
lcall
mov
fdivrs
push
andb
mov
dec
repz
sti
jp
cmp
mov
push
test
pop
lock
mov
push
loopne
aad
push
cmpsl
movsb
ret
and
mov
dec
pop
xchg
je
and
xchg
adc
jno
sub
mov
or
mov
sbb
into
or
es
and
xchg
cmp
sub
xor
cwtl
shr
dec
shlb
shrb
std
fdivrl
inc
cmp
out
add
inc
je
jmp
daa
fwait
test
nop
push
mov
sub
xchg
cltd
data16
sbb
ljmp
movsb
lock
fstpl
movsb
xchg
mov
push
and
dec
fnstenv
xor
jb
xchg
jge
mov
sub
push
pop
xchg
aad
rcll
std
or
jle
aam
cmp
iret
iret
sub
mov
test
ret
mov
movsb
xlat
adc
imul
push
mov
js
and
xchg
add
jecxz,pt
mov
bound
sbb
stos
jecxz
les
fidivs
cld
adc
mov
xor
adc
and
xor
icebp
sbb
ja
and
ja
shr
xlat
pop
pop
ret
ret
scas
or
rolb
aas
xchg
ret
dec
bound
mov
pusha
mov
movsl
cmpsl
fiaddl
fnsave
pop
sbb
sarb
loope
mov
lods
sub
xor
pop
lds
mov
cmp
mov
test
xlat
xchg
adc
in
js
xchg
and
push
addr16
sbb
xchg
and
out
sub
inc
xor
mov
ja
inc
fwait
mov
xor
scas
fisttpll
push
shll
mov
sub
sbbl
cmp
data16
sbb
push
cs
jp
dec
insb
out
into
outsb
pop
dec
mov
arpl
adc
pop
xchg
sbb
sub
pop
mov
scas
popf
adc
xor
movsl
into
xchg
inc
movsl
icebp
imul
mov
fcoml
and
adc
xchg
push
mov
xchg
addr16
in
hlt
into
das
out
repz
push
loop
push
and
sub
mov
xor
jmp
jb
sub
xlat
stos
inc
lods
mov
mov
pusha
popf
pop
pop
sti
in
push
fisttpl
ficompl
insl
ret
jecxz
or
std
pop
test
cmpsb
sbb
xchg
gs
mov
mov
jae
cli
es
cmpsb
xor
in
jecxz
lahf
mov
ja
or
in
jae
xchg
mov
lret
jns,pt
dec
rcrb
in
test
push
dec
popf
fldenv
pop
adc
sub
mov
sub
sub
cmp
lret
sub
out
pop
inc
pop
push
pop
rclb
mov
xchg
out
test
outsb
and
lea
pop
cli
sbb
jnp
icebp
lds
cmp
add
mov
scas
scas
and
sbb
fistpll
mov
loope
cwtl
jl
pop
push
sbb
mov
in
cmpsl
das
add
lods
push
fs
xor
sarb
adc
inc
sbb
mov
inc
dec
xchg
jb
ret
pop
fmull
mov
inc
inc
rcrl
lcall
jle
scas
jns
jmp
mov
divb
xchg
in
pushf
cmp
mov
sub
shl
aad
je
lds
filds
jmp
or
mov
popf
mov
xchg
push
in
rolb
xlat
mov
inc
sub
push
or
addl
lods
dec
dec
push
aam
cs
xchg
decl
ja
aaa
popf
cli
push
cs
pop
scas
pop
cmp
insl
icebp
inc
es
daa
pop
cmp
call
lods
dec
xchg
push
sub
pop
push
mov
jmp
push
xchg
push
into
jmp
aaa
out
mov
push
push
xchg
sar
xchg
xchg
shl
pop
sub
movsl
fmul
adc
push
subb
pushf
add
mov
add
int
xchg
into
lods
dec
cld
loop
ficompl
negb
xlat
lcall
cmc
into
jmp
js
jb
out
jl
cmp
cmp
pop
xchg
sub
andl
out
dec
fimuls
xchg
mov
or
and
sarb
mov
mov
mov
shr
pop
pusha
idivb
sub
pop
jae
xchg
sahf
int
fwait
mov
or
lods
popa
jmp
adc
in
pop
sub
cmp
sbb
aam
insb
pop
xor
jae
and
mov
xor
cli
insb
or
push
fsubrl
movsb
imul
or
pop
int3
arpl
test
arpl
jnp
rcr
pop
pop
insb
int
adc
cmc
sbb
mov
or
jmp
sub
pop
int3
outsl
push
jnp
cmpsb
xchg
push
adc
pop
repnz
xchg
jae
std
pop
and
add
adc
pop
loopne
popf
dec
inc
cmc
out
push
sub
lock
repnz
mov
imul
jae
push
mov
add
adc
rorl
cmp
ret
mov
sar
push
fisttps
or
dec
xchg
xchg
dec
sub
rorl
push
mov
xchg
ss
and
mov
addr16
rcrb
mov
cmp
pop
loope
mov
nop
push
pop
dec
leave
test
sbb
mov
add
push
dec
fnstenv
out
incb
dec
fsubs
jbe
or
bound
pop
repnz
jg
inc
imul
push
pop
pop
mov
test
jnp
jmp
mov
jge
sub
hlt
jno
js
ja
sarw
mov
fwait
sti
xlat
test
push
out
dec
fiadds
inc
mov
jp
adc
out
mov
or
clc
shlb
jl
or
addr16
and
inc
adc
sbb
adc
fwait
sub
pop
in
bound
mov
pop
add
pop
mov
shrl
sti
and
icebp
dec
or
test
dec
imul
arpl
add
or
rcrl
shrb
push
cmp
mov
mov
sti
mov
ret
pop
xchg
mov
jns
mov
mov
ljmp
enter
in
int3
lahf
xchg
cmpl
std
dec
sbb
push
sub
add
jns
sbb
xchg
mov
or
aas
jle
out
rclb
and
sbb
pop
push
jns
movsb
add
movsl
inc
or
ret
jb
mov
aad
faddl
sub
inc
or
scas
xchg
mov
mov
insb
xchg
mov
jbe
repnz
je
xor
jecxz
insl
push
in
lods
mov
mov
into
or
inc
out
jno
lock
pop
xchg
jbe
mov
xchg
and
adc
xlat
mov
xor
mov
repnz
xor
xor
or
mov
jp
jle
mov
and
rcl
xchg
mov
push
inc
inc
jns
xor
cmp
ljmp
cmp
mov
push
and
mov
scas
ljmp
out
adc
test
xchg
fmull
inc
lea
xorb
push
sub
mov
out
jnp
repz
fisubrs
mov
inc
loopne
cmp
popa
mov
adc
push
out
pop
stos
test
or
sti
mov
sbb
insl
ret
int3
inc
les
pushf
rorb
lcall
or
jle
stos
or
rolb
mov
xor
test
lret
xor
add
cmpsb
jnp
cwtl
mov
and
scas
adc
stc
and
loopne
popa
xor
data16
fst
movl
shll
mov
push
inc
adc
or
ja
cmp
out
pop
mov
jne
push
sub
sbb
loopne
fisttpll
cmp
mov
and
or
aaa
mov
sahf
xor
mov
jle
out
and
add
call
or
out
adc
inc
hlt
shrb
data16
dec
test
pop
push
push
xchg
adc
sub
push
cmpsl
cwtl
out
push
arpl
imul
jne
test
inc
inc
in
andl
rcll
imul
jle
ja
pop
lret
mov
lock
leave
repz
shl
xor
cmp
test
xlat
rclb
mov
mov
imul
cmp
cltd
fwait
cmp
or
in
popf
xchg
inc
addl
cmp
cmc
inc
bnd
xor
stc
sub
jne
cmp
sbb
pop
mov
xor
cld
jo
sbb
sbb
xor
xchg
out
aad
lds
mov
and
sahf
xor
and
xor
dec
fadd
addr16
ret
push
jbe
bswap
adc
inc
mov
xorl
insl
xchg
ficoms
test
xor
iret
sub
jnp
push
sub
popl
jmp
sahf
pop
lods
dec
rolb
out
xor
cmp
mov
test
jmp
loopne
cmp
ret
and
mov
fsts
dec
xlat
pop
std
arpl
mov
dec
lds
mov
jo
jbe
es
cmp
sbb
in
fwait
xchg
lock
xlat
sahf
testl
jno
testl
pop
aas
fnstenv
dec
popf
adc
mov
push
xorb
std
out
fbld
stos
jge
movsl
mov
mov
mov
pop
in
xlat
add
ret
sti
jno
test
mov
and
fwait
jno
jae
mov
nop
push
jl
cmp
xor
orb
stos
inc
fwait
outsl
add
fnstenv
insl
jno
xchg
mov
bnd
into
enter
mov
dec
lahf
dec
dec
in
sub
pop
cmp
out
mov
mov
inc
inc
cmp
ds
and
int
jp
inc
out
test
mov
mov
cli
push
aam
fs
rcrl
dec
outsl
jno
adc
scas
add
fnstcw
xchg
outsb
pop
inc
repz
imul
movsb
pop
xor
mov
jns,pn
imul
aas
jle
cmp
dec
stos
mov
inc
jo
sbb
fdivr
add
ret
push
push
pop
cmpb
or
lock
sub
shll
pop
inc
int3
mov
idivb
shrb
jg
inc
xchg
mov
jg
movsl
in
mov
add
mov
lock
xchg
fmull
test
pop
and
xlat
cmc
jge
nop
popa
push
pop
roll
push
mov
jns
cli
in
loopne
nop
iret
xor
jp
mov
data16
dec
xchg
es
scas
mov
sbb
shll
movsb
sbb
shlb
scas
mov
mov
cmp
mov
mov
push
sub
mov
in
add
leave
stc
mov
fucomp
add
push
xchg
loopne
in
adc
cld
pop
movsb
lods
jo
mov
repnz
add
or
push
cs
push
es
xchg
jg
mov
lret
jno
mov
or
out
push
xchg
shrl
mov
mov
into
fnstenv
fimull
cmp
push
push
push
sbb
les
mov
in
jge
dec
adc
and
push
or
mov
inc
int
scas
rclb
xchg
in
mov
mov
cmp
mov
stos
mov
in
subl
jecxz
out
push
rcrl
ljmp
adc
dec
push
push
mov
inc
lods
test
repnz
mov
std
out
mov
enter
jb
test
sub
pop
cmc
cltd
or
enter
pop
xchg
int3
xchg
dec
jmp
inc
xchg
out
xor
push
lods
test
jle
mov
fxch
push
cwtl
or
lods
sbb
pop
sbb
or
test
movsb
out
lea
imul
inc
icebp
repnz
rclb
sub
mov
lods
pop
repnz
and
and
std
jnp
dec
and
add
sub
xchg
movsl
stos
jge
or
mov
movsl
xorb
cltd
jl
sub
in
cs
or
jo
xchg
in
fwait
lcall
into
push
fisttpll
insb
jno
inc
in
inc
push
cmc
mov
cmc
xchg
dec
test
lahf
jae
dec
push
cmp
scas
cs
add
inc
adc
mov
ficompl
in
fsub
cmc
xor
hlt
stos
xor
pop
xchg
incl
mov
sub
jmp
and
sbb
fsubrp
imul
add
mov
pop
or
add
jg
mov
data16
popf
repz
sahf
cltd
push
or
push
test
aam
mov
loop
and
xchg
sti
adc
nop
leave
dec
add
call
cwtl
mov
dec
loope
jno
aam
cld
jl
fsubrs
xchg
push
cmpsl
xchg
out
dec
xchg
mov
push
stos
jg
adc
xor
xchg
loopne
jle
pusha
push
pop
test
mov
fs
clc
jecxz
stos
mov
insl
mov
lods
sub
movl
ljmp
mov
add
test
pop
add
sub
dec
or
push
fnstcw
ss
aas
and
repnz
ret
pop
or
fisubrl
mov
or
inc
and
arpl
das
mov
mov
shl
push
jns
mov
pop
mov
jae
jae
hlt
adc
mov
dec
out
scas
mov
ds
arpl
gs
adc
je
or
int3
pop
cmpsl
cmp
es
pop
push
push
sbb
ret
jb
sub
cld
fcmovnu
push
ret
arpl
push
out
pop
inc
pop
mov
xor
imul
or
cmp
loope
jp
cli
fwait
sbb
and
sub
jmp
aad
add
jg
lock
mov
mov
mov
push
das
inc
jbe
dec
sbb
out
pop
mov
std
es
sub
dec
push
ret
in
inc
mov
push
out
pop
pop
lds
ficoms
popa
xchg
or
sbb
cmp
push
sbb
js
imul
dec
mov
sarb
rcrl
and
cmp
fwait
sti
push
rcrb
insb
in
xchg
dec
arpl
sahf
fsubr
arpl
lret
nop
lods
test
pop
adc
ds
clc
cld
sbb
sbb
lock
push
fcmovne
or
xchg
pushf
push
dec
and
add
xchg
inc
mov
cmovle
pop
adc
sub
pop
in
xchg
movsl
arpl
aas
sub
push
mov
cmp
mov
adc
or
movsl
mov
aam
hlt
dec
inc
push
ja
dec
mov
push
call
sub
pop
inc
pusha
incl
iret
pop
or
flds
jecxz
and
pop
call
or
loop
cli
stos
sbb
dec
mov
adc
js
dec
das
and
popf
scas
add
dec
inc
repz
stc
xchg
lcall
xchg
mov
cmp
insl
pusha
cmp
or
fsubp
mov
insb
push
jo
popf
jae
sub
push
and
pop
std
mov
ja
pusha
repz
adc
sahf
cmpsl
or
xor
repnz
cwtl
shlb
push
je
jno
call
cmpl
mov
std
push
lahf
mov
addb
dec
push
popf
mov
dec
mov
xor
es
mov
jb
out
add
adcb
and
pop
jns
divb
outsb
jno
mov
fildll
or
ret
ficomps
mov
mov
or
mov
sub
push
subl
fcoms
pop
jnp
xchg
xchg
push
push
mov
mov
inc
xor
push
cmpsl
cmpl
cmc
int3
and
test
decb
pop
ret
push
inc
mov
pop
adc
lret
adc
jnp
divl
xor
xchg
test
je
ds
aad
cmp
xchg
clc
jge
lahf
dec
dec
sub
pop
mov
mov
pop
sbb
mov
adcl
and
cmc
shr
cmp
mov
jns
or
push
cmp
mov
mov
shl
mov
xor
dec
xchg
sti
stos
fld
mov
jns
pop
ficomps
pushl
dec
ud0
cltd
or
push
inc
cltd
negb
cmp
push
pop
loope
adc
xchg
je
mov
jle
sbb
fwait
lods
rcrl
inc
or
push
rclb
loop
xor
js
sub
adc
sub
sbb
mov
gs
sbb
jle
mov
lods
push
jns
and
stc
insb
adc
inc
pop
leave
test
adc
lret
push
pop
and
sub
lar
cmp
jle
stos
mov
inc
ja
loop
out
mov
sbb
je
scas
or
jmp
mov
int3
pushf
fcomps
stc
ss
ds
cmp
sbb
cwtl
add
sbb
je
movsb
fstpl
add
pop
jle
into
and
jp
ds
aam
push
or
mulb
popa
adc
sbb
push
cmp
inc
pop
icebp
je
mov
arpl
sbb
jmp
jl
les
mov
pop
sub
into
sahf
fldcw
mov
inc
gs
fs
fcomps
sti
shlb
push
adc
aaa
cmpb
lret
and
insl
jns
inc
dec
sbb
add
dec
mov
sub
test
mov
aaa
pop
leave
jno
loopne
mov
lock
pop
jmp
or
loop
pop
insl
stos
into
xor
mov
ret
lods
cltd
daa
cmp
jae
sbbl
jecxz
shll
notb
lea
stc
cmp
add
cmp
pop
inc
cmpsl
lods
mov
add
sbb
in
or
push
into
sbb
adc
dec
xlat
dec
aam
ret
ficomps
lods
inc
outsl
adc
sbb
push
loopne
mov
push
jmp
nop
enter
push
out
jns
pop
push
inc
enter
lahf
sub
or
and
mov
rcrl
les
data16
jbe
mov
cmp
ret
mov
js
lret
cwtl
sub
outsb
and
std
outsl
in
xor
stos
jns
lock
cvtpi2ps
mov
cmp
xlat
addl
push
in
lods
pushf
shl
push
pop
nop
shll
jle
je
push
inc
pop
mov
clc
fwait
mov
orb
pop
ret
ja
das
dec
mov
fcoms
lea
das
push
inc
add
mov
movsb
rclb
and
push
sbb
rorl
ds
outsl
push
adc
jmp
and
int
int
rcrb
pop
js
sbb
aas
push
mov
lgs
add
and
stos
xchg
cmp
jge
rorl
add
push
cli
sub
enter
je
lods
movsl
sub
sbb
mov
xor
loop
xor
xchg
add
ljmp
adc
push
mov
xchg
lcall
fldcw
pop
jne
add
test
dec
data16
jb
addr16
or
ss
cltd
ror
cmp
push
cmpsb
cli
pop
stos
mov
data16
dec
mov
aas
push
imul
sti
loope
fsubs
pop
mov
test
mov
iret
xor
inc
mov
fnstcw
je
cmp
or
imul
push
mov
adc
mov
in
dec
addb
rorb
out
out
movsb
mov
clc
sbb
push
push
xchg
xchg
jno
push
in
cltd
dec
imul
mov
mov
ret
xchg
xor
aas
pop
dec
aas
or
hlt
dec
mov
xor
xchg
and
xor
ljmp
jbe
xchg
in
sbb
fidivs
or
ss
rcrb
std
test
jmp
push
add
rcrb
jp
pusha
roll
cmp
cmp
or
in
cmp
cmp
addr16
xor
adc
jle
inc
sub
ret
add
pusha
or
iret
scas
push
jecxz
inc
pop
and
adc
adc
and
jle
sub
cmp
icebp
mov
lahf
je
les
or
xchg
sub
mov
ds
and
add
mov
loop
sti
stc
xor
inc
sbb
or
adc
and
jl
popa
pop
in
into
push
imull
in
mov
sub
jmp
sbb
xor
or
cld
lock
push
int
mov
sub
jne
adc
mov
inc
add
push
xchg
dec
pop
insl
and
mov
cmc
mov
push
inc
idiv
pop
ss
andl
ret
mov
lods
ret
sub
cmpsl
lock
push
sarl
pop
scas
xchg
sub
or
leave
mov
jnp
push
mov
int
in
inc
roll
dec
xchg
xor
sub
test
testb
push
arpl
sarb
pusha
leave
add
icebp
and
lock
or
dec
sub
pop
xor
into
shll
int3
add
inc
movsl
add
inc
sub
cmp
hlt
inc
add
jae
push
shlb
orb
enter
xlat
sbb
mov
adc
cltd
clc
in
mov
int
adc
int3
jl
enter
cmc
mov
mov
ss
imul
jge
test
cs
shl
insl
jno
imul
es
fcmovne
ret
leave
mov
xchg
adcb
xchg
jno
mov
in
daa
cs
mov
pop
mov
cmp
jbe
ja
cltd
push
pop
repz
je
cs
xchg
cs
lahf
mov
xchg
cld
and
sti
gs
nop
aam
jecxz
xor
shrb
pop
aas
jg
lea
lret
pop
fsubrs
fdivs
movsb
mov
xchg
movsb
adc
test
fisubrl
subb
xchg
lods
inc
and
dec
das
mov
inc
outsl
sub
repz
sub
divl
shll
lcall
jp
pusha
daa
dec
add
mov
cli
mov
jnp
sbb
or
mov
cmp
pop
pop
and
mov
inc
mov
xchg
mov
xchg
cmp
cmpsl
outsb
movsb
js
in
cwtl
push
mov
shll
outsl
outsl
fadds
inc
clc
stc
xchg
mov
out
in
shrl
jnp
inc
dec
push
mov
jmp
xor
aad
pop
jno
dec
stos
inc
or
add
mov
pop
test
adc
add
int3
rcll
andl
push
mov
cld
mov
repnz
xlat
xor
jle
jnp
ja
add
scas
mov
into
mov
loopne
lock
push
inc
sbb
sub
jne
imull
pop
lret
jae
mov
or
aad
cmpsl
push
les
add
in
or
into
mov
loopne
jmp
lds
cli
movsl
out
add
xor
stc
cwtl
xchg
rcll
imul
pushf
cwtl
add
imul
or
jp
arpl
ss
insb
jo
fsubrp
jmp
jmp
cmp
cmp
repz
jo
mov
cmc
jg
dec
push
lcall
lret
imul
pop
mov
mov
fcmove
pop
sbb
inc
mov
cs
lods
ljmp
mov
fidivl
pop
bound
mov
dec
mov
inc
mov
adc
xor
xor
mov
ret
fldt
aaa
sub
jae
sbb
mov
mov
aad
faddl
xor
and
inc
orb
mov
mov
decb
sbb
orl
jo
shlb
cmp
dec
lahf
dec
push
iret
loopne
pop
test
inc
mov
int3
jns
inc
lret
xor
sbb
popa
xor
cmovg
xchg
push
xchg
or
lahf
inc
pusha
and
bound
jne
add
add
or
js
ret
cs
push
dec
sub
mov
xor
push
add
inc
push
lds
popl
jb
scas
or
xchg
and
inc
xchg
sub
cmp
xchg
dec
adc
outsb
pop
pusha
out
ret
les
and
clc
test
imul
mov
mov
loop
xchg
shlb
adc
loop
hlt
cmp
dec
push
fstpt
icebp
fisubrl
sbb
mov
cmc
pop
int
sub
mov
lods
add
push
jle
repz
outsb
xor
mov
inc
mov
aaa
fadds
cmp
loopne
call
and
lods
cmpsl
adc
cmc
mov
es
jecxz
call
pushf
xchg
jl
cmp
int
add
mov
add
gs
mov
push
lods
stc
adcl
in
and
cwtl
test
sub
es
sbb
pusha
out
jo
in
in
jne
xor
fisttpl
fimuls
fwait
idiv
clc
aad
inc
stc
arpl
adc
or
jns
loope
stos
lods
xor
cmp
xchg
or
shll
jns
dec
push
subl
clc
pop
ss
std
fcomps
les
or
cmpsl
imul
dec
fsubl
std
enter
aam
and
push
lock
push
rcrl
push
dec
imul
rcrl
mov
jecxz
popa
je
adc
xchg
fidivrl
pop
inc
sub
imul
mov
arpl
pop
ror
fcmovbe
mov
mov
jbe
dec
mov
test
shlb
cmp
or
mov
adc
test
roll
sub
add
mov
call
push
nop
inc
sub
adc
ja
inc
mov
jmp
sub
adc
cmp
sub
lcall
cmp
cmp
sbbl
mov
jg
cmp
and
les
lods
rcrb
push
jo
es
mov
jg
bound
loope
sahf
movsb
out
daa
xor
loope
into
jmp
sahf
aad
in
shll
mov
mov
pop
jg
out
push
xchg
imul
aam
or
adc
hlt
les
cld
push
sahf
lock
cli
push
mov
int3
push
adcb
pop
lcall
pop
ror
mov
inc
imul
sub
shlb
mov
xor
push
daa
mov
mov
add
and
sub
sub
cwtl
rorb
mov
loope
into
insb
lock
fcompl
adcl
cmp
mov
inc
or
popf
sti
adc
cs
sub
movsb
scas
mov
loopne
repnz
mov
xchg
mov
mov
ficompl
data16
lds
xor
push
and
imul
push
aam
fmuls
and
jp
and
fadds
lods
aad
cmp
jnp
aad
imul
rorb
push
packsswb
cmp
dec
and
add
pushf
jno
cs
xchg
jne
lcall
loop
gs
lcall
insl
pop
shrl
into
sahf
xor
push
mov
cmp
mov
popaw
push
mov
jne
and
cltd
ficompl
push
cmpsb
mov
ljmp
pop
lcall
xchg
and
outsb
cmp
pop
jle
cwtl
adc
sub
or
sti
jecxz
enter
add
iret
cmpsb
lcall
cmp
mov
mov
ret
cmpsl
sub
pop
dec
mov
cmpsb
js
and
xchg
faddp
pusha
cltd
data16
adc
adc
inc
clc
xor
repz
in
and
arpl
daa
pushf
js
and
jb
push
lods
lods
mov
push
inc
bnd
pop
dec
lock
and
js
mov
ds
adc
sub
xchg
paddd
int3
lcall
fdiv
xchg
sub
pop
jge
movsl
dec
std
jno
jns
sub
in
leave
push
sub
jg
outsl
lret
mov
dec
idivl
stos
lock
mov
pop
mov
xor
dec
cltd
xchg
cmpsb
enter
pushf
out
cmp
adc
sbb
stc
fsubrp
push
inc
push
sub
xchg
jnp
dec
mov
in
inc
mov
sub
mov
xlat
ss
mov
mov
loop
enter
push
xor
divb
adc
jmp
dec
push
and
add
xor
jl
xchg
and
xchg
into
dec
cmp
adc
dec
cmp
insl
enter
jg
dec
sub
and
pop
push
cli
rcr
ret
jp
fldcw
cmp
sub
loopne
xor
inc
xchg
xchg
outsb
movsl
imul
out
movbe
cmp
std
cmp
shrb
pop
mov
out
ret
pusha
idivb
cmp
push
add
dec
jge
jmp
scas
pop
pop
add
or
mov
adc
insl
jnp
cmp
int3
dec
jno
push
mov
mov
movsl
sub
movsb
jno
lret
inc
sub
int3
mov
mov
adc
pop
add
sub
repz
mov
mov
lcall
fnstsw
sarb
sbb
push
adc
push
movsl
jp
jp
shrl
mov
shll
hlt
push
cmp
scas
jg
jecxz
pop
clc
fstpl
pop
sbb
mov
sub
xchg
lahf
mov
sub
mov
mov
sbb
int3
jmp
es
iret
lcall
adc
or
add
pop
lcall
inc
subb
and
repnz
movsl
or
add
mov
pop
mov
add
jmp
jae
sbb
jbe
sbbb
inc
shlb
in
xor
je
sub
cs
scas
pusha
popa
pop
mov
jmp
sahf
scas
fs
push
cmpsl
xor
sarb
lods
cmpsl
adc
jb
push
xor
out
mov
imul
in
mov
pop
lret
sbb
jle
fisttpll
adc
scas
xchg
mov
push
adc
sub
cmc
xor
sbb
in
int
push
sbb
bnd
or
inc
js
mov
xor
cmpsb
or
aaa
fstpt
jbe
out
and
in
loop
fs
mov
pushf
or
icebp
hlt
mov
mov
xchg
inc
jmp
mov
pop
mov
shl
outsb
loope
or
dec
sub
jecxz
icebp
cltd
inc
sbb
fdivl
xchg
xlat
dec
mov
insb
outsl
sbb
push
dec
or
fs
xor
fwait
jbe
call
pop
in
repnz
js
outsb
sub
push
addr16
scas
xlat
push
and
push
push
jo
lods
and
aad
shl
gs
cld
xor
sub
mov
mov
adc
repz
dec
gs
int
inc
cmpsl
imul
dec
stc
jl
ss
imul
adc
xor
repz
stc
lahf
or
pop
cmp
scas
addr16
je
int
sub
ror
and
aad
mov
push
aaa
movsl
lret
cld
pop
xor
notb
dec
add
mov
inc
or
les
lahf
sahf
fmuls
fisubrs
dec
adc
pop
dec
add
jne
imul
aas
paddsw
fmuls
mov
xor
cmp
add
aam
inc
aad
jae
test
xor
outsl
imul
mov
cltd
add
mov
movsb
mov
dec
mov
fidivs
ret
out
jnp
pusha
scas
xor
pop
popf
xor
or
dec
jb
mov
repz
jmp
and
dec
inc
push
push
outsb
stos
cmp
and
push
inc
adc
jge
popa
add
sub
and
push
lock
push
fnstenv
pop
sbb
cmp
xchg
nop
scas
movsb
out
into
or
test
dec
ja
xchg
stc
xor
mov
sub
adcl
jge
loopne
push
pop
fwait
aas
cmp
scas
add
cmp
adc
leave
into
cmp
mov
cmp
or
fst
mov
aas
adc
dec
mov
incl
sub
fildl
in
sbb
js
mov
loopne
cmp
mov
mov
outsl
pop
push
cmp
into
iret
sbb
xchg
popf
sub
or
hlt
cs
mov
dec
arpl
lahf
push
repz
dec
fdivl
mov
sahf
imul
adc
mov
std
sbb
insb
push
mov
sub
sbbb
js
pop
xor
inc
mulb
and
cmp
int
js
out
addr16
popf
cmpsl
sbbb
icebp
outsb
mov
std
pop
sbb
mov
les
sbb
in
rorl
sub
in
push
in
cmp
sbb
lret
cmp
lds
and
in
push
leave
ljmp
push
mov
mov
add
xor
mov
mov
and
xor
xchg
jae
mov
shll
dec
imul
jge
push
es
daa
subb
or
and
ljmp
inc
cld
mull
or
sub
outsl
js
lds
adc
xor
or
xchg
outsl
inc
add
les
mov
adc
arpl
insb
aaa
call
dec
adc
cmp
cmp
and
mov
mov
or
loop
test
sub
bound
jne
test
dec
or
leave
insb
xchg
sbb
lods
xor
mov
sti
and
adc
push
sub
lods
fisubrl
inc
outsl
test
push
sbb
xor
leave
lea
in
nop
mov
jae
es
lds
sysenter
lods
icebp
stos
lret
pushw
pop
sub
fiadds
hlt
or
inc
cmp
adc
sbb
push
mov
in
and
mov
cmp
push
sbb
sbb
mov
pop
push
shrl
sub
add
mov
and
sbb
imul
xchg
test
xor
pushl
std
sub
sub
pop
inc
and
lahf
or
sbb
xchg
mov
xchg
jbe
dec
push
insb
push
fistl
les
sub
enter
push
xchg
ja
sub
add
ss
or
subl
ret
push
loopne
imul
jb
js
pop
repnz
mov
arpl
mull
das
sbb
xor
jo
int
jo
sub
cmp
jne
mov
shlb
xor
shl
int3
or
jle
fimull
cmp
xchg
sbb
ss
movsl
xor
push
push
fildl
ficompl
jge
cmp
jbe
mov
cmp
sbb
inc
and
gs
adc
je
pusha
out
inc
js
cmpsb
push
in
xchg
outsl
push
es
cmp
sbb
push
push
pop
cmp
mov
ss
les
cli
movsl
sbb
andl
insb
ficompl
out
leave
out
mov
push
mov
jo
std
sub
mov
adc
mov
push
or
testl
jo
inc
pop
sarb
pusha
std
sarb
adc
adc
fcmovnu
or
pushf
ds
mov
sbb
push
mov
inc
cli
rorl
cld
cltd
mov
and
lcall
int
mov
fldenv
scas
sbb
stc
adc
hlt
scas
dec
insb
ret
out
cmpsl
cmpsb
mov
pushf
insb
in
inc
lods
fwait
mov
loop
dec
mov
pop
adc
jmp
sub
pop
mov
pop
nop
inc
mov
jbe
mov
es
sub
mov
jle
pop
adc
out
cmpsb
jge
nop
mov
lret
and
pop
dec
mov
dec
push
movb
and
arpl
pop
je
in
stos
xlat
push
dec
out
mov
lea
adc
and
test
mov
mov
sub
push
xor
push
pop
sub
dec
inc
inc
icebp
cld
adc
and
imul
addl
ja
lret
in
jp
pusha
mov
lea
rorb
jno
movsl
enter
cmpsl
idivb
mov
add
xlat
inc
xchg
incb
nop
dec
addr16
cmp
cmp
out
loopne
fldenv
mov
cmp
rcl
xlat
dec
mov
das
aam
orl
jle
fiaddl
pusha
lret
das
outsb
mov
popa
lret
jmp
arpl
xchg
add
in
int3
sub
jbe
jnp
mov
add
outsl
daa
cli
add
pop
lods
xchg
sbbl
jns
mov
mov
mov
jmp
jp
jae
movsl
push
fs
loope
sbb
add
jl
jb
int
cltd
arpl
out
push
xor
push
dec
fnstenv
sti
and
and
sub
jbe
or
jp
mov
scas
cmpl
stos
mov
in
ja
aad
sbb
push
cmc
mov
pop
jecxz
and
fs
pop
ss
mov
mull
pop
push
add
mov
out
sub
test
or
nop
adc
cmp
and
ss
fmull
inc
ja
pop
hlt
mov
fs
push
cmp
stos
and
mov
dec
pop
bound
mov
stos
cmp
pop
jns
shrb
push
fnstsw
ret
cmp
inc
jmp
fdivrs
dec
inc
pop
fcmovnb
aas
push
imulb
nop
cmp
and
shrb
sbb
insl
jae
cmpsb
lahf
jmp
andb
dec
xor
idiv
lods
add
iret
mov
stos
std
outsl
sbb
imul
mov
lock
stos
xor
add
adc
inc
repnz
inc
data16
xor
pushf
xlat
in
adc
stc
sbb
fs
dec
pop
mov
mov
inc
mov
sub
popf
mul
xor
sub
dec
push
out
adc
andb
mov
push
mov
mov
sti
jmp
adc
dec
fisubrs
stos
xor
iret
cwtl
in
inc
jge
popa
dec
loope
lods
in
in
lds
jns
mov
movsl
push
jb
gs
dec
sub
repz
mov
inc
or
mov
cmp
mov
add
or
ljmp
xlat
into
cmp
ret
pop
and
push
sub
fnsave
mov
cmpb
call
push
add
lods
int3
xor
xor
mov
mov
cld
das
jb
jbe
xchg
jns
inc
inc
daa
test
inc
cld
mov
lock
dec
push
mov
cmp
pop
testb
repz
gs
fiaddl
repz
call
mov
nop
xchg
dec
jnp
xchg
int
sub
out
dec
sub
popf
loope
jle
shll
loopne
movsb
movsb
cmp
sahf
arpl
loop
pop
sarl
loopne
stos
fbstp
in
int3
jg
xorl
hlt
push
out
mov
pop
cmp
pop
dec
cmp
ja
test
sar
pushf
subb
mov
mov
pop
loopne
pop
sbb
cmp
mov
out
xchg
pop
inc
rorl
jecxz
mov
xchg
hlt
lcall
test
push
mov
lea
movl
and
pop
fstp
sub
movb
arpl
jge
cmp
and
rorl
nopl
fwait
push
lret
aas
fisubrs
cs
adc
push
sub
and
movl
mov
push
inc
testb
jno
push
cwtl
scas
clc
nop
cmp
scas
je
dec
cli
xor
fidivs
xchg
inc
jg
jno
out
and
pop
adc
cmp
lea
insl
clc
xor
mov
dec
icebp
cmp
nop
cmp
dec
mov
push
lret
outsb
test
leave
insl
pop
dec
out
addr16
in
sub
xchg
imull
lods
xor
xchg
fidivrs
sbb
push
xchg
imul
mov
nop
pusha
gs
jo
sub
shll
lahf
xor
xor
mov
dec
cmp
cmp
fsubrl
pop
push
jbe
pop
cmp
nop
add
jl
adc
rcll
adc
mov
outsb
test
imul
aaa
adc
or
sub
dec
pop
shrb
out
sbb
rcll
mov
inc
negb
pop
xchg
jmp
daa
pop
inc
shlb
mov
pop
pusha
xchg
pop
aam
pop
js
cmp
adc
cld
push
jnp
and
daa
decl
push
mov
ds
lret
sbb
aaa
mov
mulb
mov
xchg
jnp
imul
sub
sbb
xchg
and
std
pop
pop
mov
outsl
sbb
jb
and
lcall
out
movsl
jg
cltd
mov
out
xchg
xlat
inc
gs
test
sub
loopne
sar
cwtl
test
xorb
pop
xchg
lods
rcrl
call
inc
or
jno
mov
mov
push
lea
enter
mov
inc
inc
loope
test
pushf
mov
jo
mov
clc
sbb
pop
pop
scas
outsl
or
or
pushf
pop
inc
xor
fdivr
js
int3
negl
pop
mov
push
repz
scas
iret
sbb
iret
rorb
xor
fxch
stc
cs
mov
inc
aad
outsb
lret
outsb
fwait
in
adc
mov
sbb
push
push
fistpll
fincstp
lret
or
mov
fsubrs
aam
icebp
pop
movsb
jp
mov
push
inc
sub
inc
enter
ficoml
mov
pop
in
loop
fadds
test
mov
sbb
xlat
cmp
call
test
sarb
mov
xor
movsb
sbb
or
inc
loopne
push
pop
adc
loop
lods
lock
push
clc
cmp
jb
fstpt
jne
sub
std
mov
mov
dec
xor
popa
mov
lods
rorb
inc
xor
fs
pop
xchg
inc
insl
mov
das
mov
test
mov
sbb
jg
fisttps
sbb
mov
and
or
mov
jecxz
fs
aaa
rolb
jmp
add
mov
into
xlat
pop
pop
fcomip
out
inc
inc
lods
xor
repnz
mov
jns
mov
jnp
sub
lods
ret
sbb
push
dec
insl
dec
pop
leave
push
mov
sub
in
fldt
mov
lods
pop
popa
or
or
sub
lret
mov
mov
call
adc
xchg
mov
mov
adc
mov
mov
inc
jae
in
and
sahf
pop
mov
cmp
add
adc
sti
push
push
xor
mov
mov
fistl
push
dec
mov
mov
jl
and
mov
mov
pop
xor
mov
pop
test
push
cs
out
xor
jge
mov
lds
jne
pop
fidivrs
pop
scas
les
jge
test
jb
mov
push
imul
dec
adc
dec
stos
int
mov
lods
sbb
sub
push
xchg
sbb
stos
push
jo
cmc
jp
imul
lret
push
repnz
cmp
outsl
mov
adc
icebp
lcall
jle
js
push
aad
push
enter
jbe
enter
and
cmp
fmul
push
fadds
aas
add
add
shll
cmp
inc
aad
mov
out
adc
idivl
icebp
je
dec
addb
scas
js
outsb
jbe
push
pusha
push
push
dec
cmp
mov
cwtl
add
popa
cmp
or
sbb
add
hlt
ret
xchg
jnp
mov
ret
hlt
cli
das
sbb
adc
jbe
ss
call
cmp
mov
mov
xchg
mov
cmp
sub
mov
hlt
inc
mov
insl
rorb
imulb
push
pop
mov
inc
js
xchg
mov
push
inc
test
test
lods
lds
mov
and
pusha
inc
insl
aaa
mov
mov
pop
sbbb
add
mov
jb
push
lock
out
xor
and
addr16
xor
sbb
push
pop
add
les
or
jp
or
out
test
pop
inc
dec
shrd
mov
sub
pop
xchg
test
pop
jnp
ret
add
cld
sub
sbb
mov
test
aam
cmc
subb
or
ret
out
ficompl
xor
lds
jge
cmp
cmp
int
scas
pop
lock
sbb
lods
adc
hlt
data16
das
mov
xor
mov
fisttpll
pop
mov
iret
push
idivb
stos
fucomi
mov
hlt
aam
fwait
testb
lods
sarl
stos
pop
xchg
aas
shrb
outsb
pushf
lret
divb
xchg
and
and
dec
pop
cmp
push
xor
imul
mov
dec
push
or
dec
cs
leave
hlt
cmp
push
loopne
jmp
clc
hlt
jbe
mov
pop
dec
jmp
ret
sbb
xchg
roll
push
sub
test
repz
dec
sahf
das
cmp
aas
jmp
andb
cltd
cld
test
dec
sub
adc
mov
sbb
je
stos
insb
iret
jnp
jo
in
nop
mov
ret
jmp
and
xchg
xor
xchg
mov
popf
insb
jbe
popf
and
push
scas
lea
inc
pop
out
mov
jle
nop
cld
ds
mov
leave
pop
mov
bound
mov
call
push
rcrb
add
adc
clc
and
cmp
fwait
ljmp
push
and
je
cmpsl
ljmp
push
or
adc
sbb
push
jb
repnz
pusha
outsb
dec
add
gs
stos
insl
push
imul
add
pop
insb
fistl
hlt
xor
lea
jae
lock
pop
cmc
cmp
push
mov
in
ret
and
mov
in
lea
jle
or
mov
mov
in
cmpsl
hlt
incl
jo
push
inc
jns
ret
lds
mov
hlt
test
jns
mov
mov
mov
xchg
mov
dec
sub
xchg
into
in
in
stc
mov
mov
jmp
mov
pop
add
xor
notb
ljmp
dec
addr16
aas
push
adc
jl
xor
js
xchg
arpl
mov
andl
and
sti
aam
jmp
pop
lods
push
movsb
push
cmp
ret
or
pop
push
sbb
adc
inc
leave
pop
sub
inc
push
aaa
push
adc
add
mov
lahf
xor
in
das
jl
test
mov
rolb
xlat
out
cmp
iret
mov
dec
scas
or
push
and
call
sbb
fwait
cmp
cld
mov
mov
popa
nop
stos
pop
pop
pop
pop
jo
pop
jecxz
sbb
out
add
xchg
cltd
aad
loope
inc
mov
rolb
mov
cmp
shrb
inc
inc
sub
loope
popf
cmp
imul
inc
cmpsb
xchg
es
xor
sbb
pop
inc
push
push
and
jg
mov
popf
in
movsl
mov
test
fimull
arpl
xchg
ds
mov
in
pop
sarl
stos
mov
mov
cwtl
cmp
mov
add
jge
les
and
test
xchg
dec
cmp
sub
jno
pop
in
dec
rcll
iret
add
pop
leave
adc
daa
test
cli
loop
icebp
lret
in
in
inc
sub
mov
mov
adc
pop
ds
mov
ja
jg
cmp
mov
mov
adc
imul
push
test
call
push
fiadds
lods
andb
or
cmpsl
mov
insb
lret
jae
div
pop
out
movsl
lds
mov
add
test
mov
mov
add
add
mov
or
xor
mov
mov
push
mov
add
push
aam
cmp
sub
ret
fldcw
adc
xor
ret
mov
xorl
jns
imul
jnp
inc
jg
jecxz
cmp
stc
fbld
jmp
dec
or
mov
pop
popa
xchg
lahf
jb
repz
pop
lods
add
inc
cwtl
jb
dec
in
mov
cmpsb
or
test
and
testl
rcll
sbb
and
jle
xor
dec
mov
mov
jnp
jecxz
je
sub
add
les
aam
dec
jb
xor
cwtl
mov
outsb
jmp
outsb
cmp
xor
or
subb
mov
arpl
push
pop
pop
jmp
and
mov
add
insl
pop
in
and
in
daa
inc
push
inc
mov
fstps
fdivrl
loope
psubsb
daa
loope
pop
and
jae
fldenv
pop
push
mov
xchg
addl
mov
fimull
or
push
or
int3
xor
mov
arpl
fsub
lds
add
sbb
in
shlb
mov
notl
ja
rcr
aas
testl
pop
movsb
lods
mov
das
xchg
xor
fisttps
bound
gs
inc
jae
mov
push
mov
mov
int
or
xor
jmp
xchg
xor
out
outsb
sbb
jo,pn
sar
xchg
std
dec
mov
push
in
jne
popf
in
cmp
rcrb
push
cmpl
inc
or
cli
stos
jle
add
scas
add
dec
insl
in
dec
cmpb
and
cmp
test
nop
arpl
mov
fisubrs
loopne
and
mov
push
adc
cmp
mov
popa
dec
sbb
rclb
loope
dec
add
xchg
mov
mov
add
call
andb
inc
insl
movsl
xchg
je
test
sbb
mov
stos
inc
mov
inc
out
outsl
cmp
enter
adc
xor
inc
in
sbb
pop
mov
and
add
sub
mov
dec
je
mov
cmpsb
mov
jnp
cmp
inc
dec
push
popf
outsb
pop
sbb
sarb
mov
cmpsb
pop
sbb
pop
or
push
add
mov
mov
push
nop
roll
fcmovnb
and
add
mov
xor
inc
sbb
pop
mov
imul
mov
clc
mov
cltd
add
push
cmp
xor
mov
repnz
fisubl
add
and
addb
or
mov
pop
or
mov
sbb
mov
mov
mov
mov
inc
fcoml
incl
in
lret
jp
rcll
loope
ret
ss
xlat
insb
mov
xor
push
xchg
mov
dec
nop
repz
int
mov
pop
mov
add
in
mov
xor
aas
jge
insl
add
add
fcmovnbe
stc
cwtl
movsl
mov
sub
and
lret
cmp
push
fadds
jecxz
cmpsl
jp
pop
lahf
stos
add
lahf
jnp
lods
into
es
ja
fisttpl
repz
outsl
pushf
adc
mov
dec
xchg
push
jae
and
push
ljmp
mov
sub
pusha
sub
jns
scas
es
popa
cmpsl
mov
mull
xchg
fmull
push
push
inc
ljmp
jb
xchg
repz
jo
or
cltd
ja
lock
mov
in
sub
pop
sub
scas
and
mov
xor
icebp
sbb
shrb
test
outsb
mov
icebp
inc
sahf
test
cmp
fdivrs
mov
mov
cwtl
js
xlat
xchg
push
lret
mov
xchg
add
dec
outsl
mov
fnstsw
jb
push
stos
xchg
and
cmp
dec
aad
add
cmp
jns
nop
add
call
out
mov
sub
mov
lret
cwtl
int
je
cmpsl
mov
mov
and
add
imul
jmp
aaa
scas
sub
mov
mov
cmp
add
mov
lock
mov
jbe
incb
or
sub
add
je
sarl
mov
outsb
outsb
cmp
clc
ss
jns
inc
sahf
mov
fdivrl
adc
stos
adc
cmpsl
mov
ret
clc
mov
loopne
sub
es
add
dec
sbb
pop
cmp
inc
sub
mov
ja
jl
fcoml
inc
mov
push
dec
dec
push
loop
push
mov
or
mov
mov
js
dec
or
pushf
add
xor
mov
pop
pushf
test
or
dec
nop
cmc
sti
xchg
iret
push
ljmp
adc
ret
sub
add
fistl
std
push
sub
or
clc
test
push
cmpsl
insb
or
ljmp
push
push
or
shrl
mov
icebp
movsl
cmp
dec
pop
add
cmp
insb
xchg
pop
std
xchg
sub
idivl
inc
pop
popl
decl
popa
jb
adc
and
inc
sub
int
xlat
pop
mov
push
xor
xchg
or
fst
pushf
out
xlat
mov
or
push
pop
lret
mov
lds
cmpsb
leave
lods
push
jge
mov
and
jp
cli
popw
das
in
mov
and
cmp
sbb
xchg
scas
xchg
cmc
daa
enter
mov
mov
ss
adc
movsl
adc
cmp
mov
jmp
hlt
gs
fidivrs
aam
or
mov
adcb
insl
add
dec
pop
int
mov
sti
mov
aam
popa
int3
mov
data16
fbstp
cmp
mov
cmp
lds
cmpsb
and
lahf
rcrb
adc
cmpsb
cli
pop
pop
lea
loop
adc
sarl
jne
mov
jmp
aaa
mov
push
jg
out
push
aas
out
cli
popa
ljmp
jbe
insb
icebp
inc
xor
insl
mov
or
fildl
sub
lds
sub
mov
mov
into
push
push
pop
mov
adc
pop
popf
aam
es
push
and
ds
in
ds
scas
mov
sub
or
mov
cmp
mov
rcl
xorps
inc
or
daa
jbe
and
into
lret
and
xchg
neg
pop
inc
jns
add
pop
aad
push
dec
pop
xor
mov
loopne
mov
xor
les
int3
push
stos
inc
out
jnp
dec
pop
jno
stos
sub
jecxz
aad
cmp
ss
push
jg
lea
popa
sub
sub
jne
jns
mov
cmpsb
imul
mov
rorl
in
pop
call
inc
in
mov
ret
dec
int
pop
xchg
xchg
lea
inc
mov
cs
jmp
aas
in
inc
ss
loope
mov
inc
jae
xor
orl
lahf
das
outsb
mov
mov
or
daa
or
sub
xchg
mov
jp
add
mov
mov
cltd
push
add
or
jo
lret
lds
sbb
sti
lret
xor
push
adc
inc
lcall
pop
aaa
int3
xor
sub
and
dec
dec
lock
cli
mov
in
mov
sahf
cltd
xchg
xchg
or
adc
sub
mov
adc
lahf
jle
dec
pushf
xor
test
xchg
repnz
es
in
rcrb
movsb
out
push
jge
and
sub
std
in
push
sub
and
mov
mov
hlt
push
sbb
sub
mov
xor
adc
stc
inc
lods
lea
adc
hlt
fimuls
mov
xchg
adc
dec
xchg
and
sahf
sbb
jnp
outsl
adc
lods
mov
adc
xchg
lods
xor
sbb
lods
dec
into
cmc
cs
xchg
xchg
mov
outsl
test
das
sbb
sbb
shll
cmpsb
push
pop
mov
adcb
aaa
fisttps
les
inc
out
and
outsl
sub
outsl
mov
stos
sub
mov
sahf
xchg
mov
leave
pop
push
inc
les
add
iret
ffree
out
push
cmp
add
shl
dec
lahf
lds
loop
xchg
test
lods
add
xchg
jne
into
jl
test
stos
push
mov
xchg
lcall
push
and
xor
lahf
loopne
mov
and
push
push
and
test
insb
pusha
jo
fdivrs
add
das
test
out
into
push
fs
lods
jb
in
xchg
out
out
mov
or
es
xchg
pop
ds
xor
lahf
cli
add
dec
push
sbb
adc
push
dec
loope
lret
and
pusha
and
lret
jl
pop
xchg
pop
pop
mov
add
ret
les
xor
lock
jne
nop
sub
negl
js
jo
ja
add
push
inc
push
mov
aaa
pop
xchg
mov
scas
shlb
scas
loopne
sbb
xor
repz
and
clc
sbb
pushf
or
pop
jmp
dec
xlat
push
sbb
adcb
push
inc
and
mov
iret
int3
mov
je
or
mov
es
xchg
sti
jl
xchg
lret
jb
mov
fwait
gs
scas
loope
mov
aad
inc
xor
mov
pusha
push
je
mov
addr16
push
frstor
lods
repz
enter
xchg
cmp
andb
adc
rcrb
push
add
fcomp
mov
mov
cli
sub
lock
lea
mov
es
rcrl
fcoml
xchg
sbb
fistpl
sar
pop
sub
insb
cmpsb
fbstp
cmp
pop
inc
dec
decl
push
emms
bound
test
mov
xlat
and
jae
xchg
xor
loop,pn
fpatan
sbb
faddl
cmp
les
loop
call
inc
dec
xchg
lahf
movsb
cmp
stos
movsb
inc
pop
js
push
jae
xor
jns
pop
push
inc
sbbl
outsl
inc
jl
or
or
test
jecxz
orb
fisubs
mov
sti
lods
inc
lret
stos
pop
bound
mov
inc
call
icebp
lret
outsb
pop
jge
dec
movsb
mov
jno
leave
dec
lods
xchg
sub
sbb
add
mov
mov
ljmp
icebp
push
test
lds
lret
shlb
jl
pop
push
arpl
push
dec
mov
push
sub
cmp
inc
lahf
nop
inc
mov
ljmp
pop
mov
xchg
xchg
ss
je
xchg
push
movsl
icebp
adc
mov
and
lahf
mov
and
mov
sti
and
insl
jp
pushf
js
cmp
popf
push
fdivrp
inc
out
es
cli
fs
mov
imul
sub
outsb
jno
sub
add
push
outsb
and
sbb
cmp
call
nop
mov
cmp
clc
jl
xor
or
cmp
push
int
xchg
jo
aad
fimuls
xchg
push
out
cs
adc
jecxz
xor
cld
ss
movl
in
ret
dec
mov
mov
push
ljmp
stos
test
push
mov
pop
sub
inc
mov
dec
lret
or
aam
add
dec
push
hlt
neg
repnz
insb
cli
cs
in
pop
sbbl
cltd
shrb
jno
jo
inc
iret
orb
mov
xor
js
decl
pop
shrl
lods
inc
mov
ss
sub
cwtl
and
or
stos
outsl
or
mov
lds
push
test
hlt
insw
ret
xorl
dec
xor
test
cmpsb
add
cmpsl
ret
pop
ljmp
xor
sub
jo
add
mov
test
adc
into
dec
xchg
mov
and
int
push
xor
push
divb
sub
add
xor
out
jo
orl
or
adc
mov
dec
out
shl
sbb
shll
pop
sbb
sbb
std
hlt
pop
bound
mov
cmp
out
xchg
decl
jg
dec
xor
int
lcall
ret
sub
stos
out
or
je
roll
mov
jg
ret
mov
xor
les
pop
xor
pusha
test
sub
xchg
cmp
inc
adc
neg
xchg
loop
or
test
mov
addl
push
xor
adc
shl
scas
jmp
and
pop
imul
dec
jbe
inc
inc
fadds
inc
push
sbb
dec
pop
xchg
mov
push
push
aas
sub
dec
pop
sub
fldt
xchg
not
and
jb
xor
jp
rclb
loop
shll
fisttpll
push
dec
nop
and
test
sbb
lret
shll
cmpsl
lea
cld
cmp
mov
insb
pop
cli
adc
int3
jnp
cmc
push
jg
jb
popf
enter
jmp
stos
dec
in
dec
inc
xchg
xchg
ljmp
clc
add
enter
int
jg
sbb
popf
mov
mov
filds
es
rorb
in
mov
push
inc
ss
cmp
pop
movb
aad
mov
leave
inc
push
stos
cwtl
jae
jne
sub
ret
xlat
in
std
dec
adcl
decl
add
pop
mov
cmp
outsl
ret
mov
int3
sarb
push
push
cmp
les
rorb
mov
lock
leave
rclb
push
mov
xor
mov
inc
negb
jae
xchg
unpcklps
mov
nop
fdivrl
int
rcr
daa
push
push
ret
push
sahf
sti
sub
xchg
inc
lret
and
pop
jmp
mov
in
push
and
dec
cmp
iret
rorb
dec
mov
and
gs
cmp
lea
lcall
mov
aam
xor
iret
adc
in
idivl
push
jecxz
mov
adc
pop
sbb
add
xor
nop
js
test
push
mov
test
into
out
cmp
rolb
lods
ljmp
es
pop
jg
add
mov
sbb
mov
mov
mov
idivl
sub
add
out
or
rcrb
inc
dec
fst
jmp
push
inc
imul
push
jmp
push
jl
and
sbb
cmpl
jo
int3
movsb
add
sub
dec
mov
mov
and
sbb
sahf
stos
aas
xor
sbb
xor
nop
mov
jmp
addr16
das
cmp
fisubrl
inc
lods
shlb
in
sbb
xor
and
arpl
mov
rclb
imul
shll
jno
cmp
std
int
mov
and
aaa
sbb
xor
jbe
add
jne
loopne
fisttpll
data16
rcrb
push
aas
adc
jns
sub
mov
fisubl
inc
jmp
adc
and
outsb
sbb
ficompl
mov
mov
cmp
xor
pop
xor
stos
fldcw
push
mov
hlt
pop
enter
add
mov
test
imul
aad
test
test
pop
int3
mov
add
dec
les
xor
sub
mov
inc
test
clc
fstl
bound
fs
xor
or
dec
push
sbb
test
cmpsl
fsts
add
rclb
aam
xor
aaa
mov
adc
mov
or
cmp
das
dec
pop
xor
pop
stos
das
arpl
outsb
jle
cld
sbb
jae
inc
dec
loope
push
and
jo
push
adc
out
push
rorb
pop
sub
jecxz
push
push
pop
mov
pusha
mov
fcoml
popf
sbb
mov
int3
test
mov
mov
add
or
pop
clc
jbe
sbb
mov
jns
jp
mov
mov
popa
xchg
or
sbb
xor
lahf
inc
pop
lcall
das
push
mov
js
call
xor
jbe
leave
icebp
shrb
popf
jno
das
jecxz
mov
or
sub
pusha
xchg
loopne
push
movsb
jb
mov
cmp
daa
jmp
push
cmp
les
or
inc
repnz
rolb
push
mov
inc
insb
mov
mov
arpl
and
mov
movsb
fcmovnu
or
arpl
ds
mov
ja
int3
sub
pop
shrb
mov
push
cs
imul
daa
lret
ficoml
cmpsb
cs
fcmovnu
cmp
and
lret
add
lock
popf
lret
cmpsl
inc
pop
in
sub
call
ss
sbb
jno
int
mov
aad
cmp
inc
jmp
push
mov
xchg
jle
xor
dec
mov
pop
adc
scas
hlt
and
out
clc
pushf
stos
xchg
fwait
and
jbe
push
movsl
cmp
push
rcrb
pop
loopne
dec
mov
gs
lea
cli
xor
mov
mov
xchg
add
insl
loop
ret
or
jp
shll
dec
ljmp
stc
mov
cwtl
movsb
jb
je
mov
add
lods
jp
pop
push
push
jo
jo
add
and
sbb
fstpt
jge
jns
adc
add
mov
rol
fcmovne
xor
lcall
mov
enter
and
mov
mov
movsb
loop
sub
movsl
pop
mov
jbe
cmc
test
mov
leave
lret
out
inc
addr16
pop
mov
mov
jl
mov
inc
sarl
mov
push
mov
pop
inc
add
sub
adc
pushf
dec
jp
not
jne
sub
add
cmc
jo
in
push
inc
add
push
adc
cmp
arpl
mov
in
leave
fcmovu
aaa
fcmovb
ljmp
fcoml
pop
add
push
inc
aaa
and
pop
push
sub
pusha
inc
bnd
push
xor
punpckhdq
jns
add
inc
fistpll
pop
shlb
andl
pop
inc
dec
inc
mov
xchg
mov
ljmp
aad
in
push
sarl
in
out
test
push
inc
and
shll
cmpsl
and
bound
add
sbb
repnz
movsl
mov
mov
popf
aas
xchg
sbb
jle
or
or
adc
dec
adc
xlat
jge
loope
lahf
mov
jnp
mov
inc
mov
sbb
mov
mov
imul
sti
jp
pop
shlb
and
mov
jo
inc
adc
out
jae
cltd
fdivrl
push
pop
fwait
mov
sub
repnz
pop
inc
mov
push
sub
loopne
mov
adc
sbb
daa
cs
mov
mov
or
and
xor
nop
cmp
jecxz
call
icebp
nop
dec
out
cmpsl
daa
add
mov
pushf
xchg
push
cmpsl
push
sbb
popf
subl
out
inc
in
loopne
mov
dec
cwtl
adc
subl
inc
inc
in
inc
outsl
sahf
shrl
jbe
mov
mov
adc
rcll
mov
in
stos
out
jmp
test
cmpsl
cmp
jae
int3
and
mov
fsubrl
jae
fmull
lahf
jmp
add
mov
mov
push
or
xchg
xchg
cmp
repz
jns
in
sbb
repz
inc
pop
sbb
adc
daa
ret
ret
pop
test
xchg
mov
lock
or
fnsave
test
pop
mov
or
ror
mov
sahf
or
cmp
dec
pop
loope
pop
inc
sub
loop
data16
dec
and
jns
cmp
stc
in
rcr
jl
jg
nop
and
dec
xchg
jno
addb
shrb
pop
jle
mov
xor
mov
aaa
clc
out
jle
pop
add
cmpb
cli
stc
insl
das
movsl
xor
or
add
roll
add
sub
testb
iret
dec
pop
gs
lods
xchg
push
jne
fwait
loop
into
pop
add
dec
mov
mov
sub
mov
gs
or
jne
repnz
pop
insb
mov
sub
or
mov
lret
dec
pop
icebp
xchg
sarl
add
sarl
inc
scas
andl
mul
loop
sub
sbb
gs
pop
call
xor
in
xor
xchg
sub
jl
imul
out
cmp
add
jp
insb
insb
push
ljmp
insb
popa
negb
lea
push
push
bound
mov
or
xchg
jnp
idiv
inc
scas
mov
faddl
lods
mov
ret
test
addb
sbb
arpl
sahf
push
icebp
push
pop
and
insl
push
filds
xchg
inc
mov
inc
jb
xchg
and
dec
imul
addr16
cli
lock
xor
or
cmpsb
push
in
repz
sub
mov
decl
enter
cmp
decb
push
divb
mov
push
stc
push
arpl
sbb
sbb
dec
mov
std
inc
pusha
add
cmp
pop
and
push
or
cli
adc
arpl
dec
dec
pusha
ljmp
dec
mov
dec
jl
pop
divl
les
cmp
push
dec
in
cld
test
add
and
inc
mov
xor
fwait
mov
lods
fisubrs
sbb
xchg
adc
xchg
test
icebp
mov
pop
stos
sbb
inc
repz
dec
cmpsl
inc
ds
fldl
push
lahf
add
sbb
or
inc
test
repz
test
inc
icebp
dec
mov
hlt
ss
fdiv
pushl
pop
inc
jno
fbstp
and
inc
add
xchg
dec
jne
leave
mov
scas
sub
in
mov
dec
cmc
ljmp
leave
pop
add
mov
pop
xor
add
mov
hlt
push
pushl
dec
pusha
push
lahf
push
cmpsl
pusha
std
popa
or
mov
xchg
sbb
not
or
out
add
xor
outsb
clc
test
data16
sarb
push
movsb
dec
std
and
sbb
pop
icebp
pop
inc
cld
mov
sahf
jmp
mov
test
mov
scas
mov
lcall
stos
packuswb
mov
das
sbb
test
sub
hlt
xor
lret
nop
mov
movsl
pop
mov
mov
push
adc
and
cmp
out
cmp
les
in
mov
andb
into
cmp
lea
subb
pop
inc
mov
rclb
cli
js
dec
jmp
jnp
add
mov
sbb
xor
scas
push
push
cmp
cmpsl
add
imul
cs
mov
jae
push
xchg
frstor
cmp
xlat
loopne
sahf
popf
fdivl
pushl
push
iret
loope
and
sub
lret
stos
nop
push
mov
arpl
inc
sbbl
push
lods
adc
je
and
bswap
push
xor
js
cltd
les
iret
popf
mov
out
pop
lock
pushf
mov
in
adc
pop
enter
pop
sbb
lods
mov
inc
movsl
cwtl
or
fisttpll
testb
mov
jp
inc
sarb
push
jg
or
sahf
fsubs
push
icebp
fwait
inc
mov
xor
popa
pop
imul
push
clc
mov
adc
add
orl
xchg
hlt
aas
cmpsb
mov
out
push
or
adc
sub
fildll
add
imul
sbb
xor
sbb
push
fmuls
mov
xorl
mov
push
add
jg
fwait
or
sbb
jg
daa
sarl
cltd
lock
jo
enter
jns
pop
mov
lods
mov
enter
mov
mov
mov
cmp
mov
inc
fs
addr16
movb
es
push
mov
jl
mov
cmp
and
add
dec
fwait
push
icebp
xchg
add
das
loop
mov
xor
xchg
cmpsl
xor
jecxz
dec
dec
add
mov
sbb
cld
or
xor
std
in
pushf
pop
lods
cmp
aam
and
sahf
jge
dec
cld
xor
xchg
mov
imul
sub
test
adc
in
add
movsbl
rol
dec
leave
xchg
inc
add
mov
lods
sbb
adc
test
cmpl
cmpsl
adc
fstpl
es
aas
mov
and
outsl
rolb
push
fiadds
fldl
outsb
mov
in
mov
repz
jns
leave
jae
push
out
and
inc
hlt
sub
repnz
arpl
or
mov
aam
std
pop
insl
cs
mov
mov
ret
addr16
push
adc
arpl
in
stos
addr16
or
aam
add
sub
push
repz
int3
cmp
call
adc
xchg
std
sub
or
mov
les
pushf
jno
popf
sar
adc
mov
sub
cmc
adc
rdtsc
shlb
mov
xchg
shrb
in
outsb
into
rcll
mov
hlt
xor
lahf
mov
add
xchg
xchg
xchg
xchg
je
xor
pop
hlt
aad
mov
push
jge
lcall
push
out
pop
mov
lds
fldenv
fisubl
mov
add
loopne
cmp
cmpsl
mov
test
lret
int3
mov
sub
out
jbe
test
enter
hlt
fwait
add
jbe
repz
push
push
enter
and
pop
popa
test
movsl
mov
xchg
lods
mov
sar
bswap
pop
xor
cmc
and
arpl
mov
inc
das
sti
sbb
mov
cld
mov
cld
loop
inc
add
pusha
dec
jns
add
cwtl
daa
lds
push
or
jg
jecxz
jle
daa
cs
pop
hlt
pop
mov
mov
repz
cld
push
mov
and
xchg
sbb
stos
mov
mov
xchg
ljmp
xchg
mov
add
cmp
cmc
cmc
pop
and
dec
mov
inc
cmp
inc
enter
fs
pop
stos
cmp
dec
aam
andb
lods
adc
adc
fcmovbe
aad
xor
ss
push
outsl
cmp
sub
xchg
push
xchg
mov
pop
mov
stos
and
mov
cmp
fadd
mov
mov
into
mov
cltd
xor
bound
in
xchg
push
fwait
addr16
mov
aad
shrl
ja
dec
jg
sbb
sbb
fucom
dec
imul
imulb
mov
test
repz
cmp
daa
ss
scas
xchg
popf
jmp
add
dec
int
fimull
insl
fdivrp
notl
push
mov
dec
lcall
inc
mov
xchg
sub
dec
negl
rclb
xlat
xor
jl
int
xchg
cmp
pop
push
js
mov
ljmp
mov
rol
hlt
xor
sti
inc
rorb
push
xchg
inc
repnz
xchg
cmc
fisubrs
lock
pop
jle
pop
mov
lods
mov
dec
dec
cli
movsl
fsubp
in
push
fwait
push
std
mov
pop
mov
cmpsl
int3
stc
lods
dec
ds
mov
push
je
and
popf
in
daa
mov
mov
hlt
dec
pop
sub
add
mov
jp
add
dec
insl
inc
lods
cwtl
jle
test
pop
sub
xchg
loop
icebp
cmpsl
pop
or
xchg
rcl
insl
aad
sahf
cs
hlt
cmpsl
testl
flds
lods
scas
das
push
xchg
rolb
fwait
ret
loope
adc
ljmp
jno
sbb
inc
adc
dec
or
fsubp
outsl
popf
push
adc
sbb
xor
pop
fs
lret
sbb
xlat
and
xor
push
enter
jb
xor
add
pop
movsl
rolb
cld
scas
sbb
adc
jle
frstor
stos
adc
pop
je
loope
xchg
mov
fmul
cmpsb
fisubrl
aas
xchg
ret
pop
or
sbb
pop
dec
pop
mull
mov
push
pop
out
xchg
fcomps
jmp
in
adc
sti
cltd
or
fidivl
ret
pop
push
xor
cs
sbb
pop
mov
cmp
fisubs
or
cltd
mov
sbb
les
ds
push
jle
xlat
outsl
mov
stos
imul
jo
pushf
ret
in
mov
pop
stc
xlat
inc
decl
into
pop
or
jno
mov
in
movsl
in
in
test
sar
aam
lock
daa
dec
mov
int3
ficompl
or
push
inc
jg
loopne
xchg
jne
notb
cmc
scas
hlt
sub
shrb
addr16
aad
lods
jno
jle
js
je
cmp
test
adc
jecxz
mov
adc
sub
jge
sbb
in
addr16
lret
lret
inc
or
bound
jnp
imul
iret
cmp
jg
sbb
movsb
sub
repz
das
stc
out
jp
jle
out
ror
enter
pop
jl
ret
mov
xor
bound
sub
mov
and
repnz
xor
cmpsb
mov
sbb
adcl
and
add
mov
push
xor
add
cmp
daa
cmc
and
mov
loope
in
pop
or
jge
dec
cli
dec
mov
scas
push
or
add
add
sti
mov
int
mov
sbb
mov
sub
dec
nop
dec
and
movsb
push
jnp
pop
add
xor
dec
addl
lret
lahf
ja
jge
fs
orl
andl
insl
sub
dec
ljmp
lea
jno
cmpsl
daa
aas
scas
mov
mov
cmp
test
or
pop
push
push
mov
and
xlat
fldl
dec
push
in
popa
or
mov
xor
arpl
inc
sbb
xor
push
jnp
aam
dec
enter
inc
out
add
movsl
leave
cs
jnp
jne
out
mov
arpl
jle
add
lcall
cmp
mov
and
mov
rclb
test
fldcw
clc
arpl
jns
mov
push
in
scas
sbb
vmptrst
into
shll
jg
xchg
jno
scas
mov
inc
mov
cmp
lods
xchg
push
adc
fidivl
test
jmp
mov
jmp
push
xor
negl
in
lret
mov
jp
mov
cmp
mov
and
jo
popl
push
jae
aaa
mov
mov
cmp
ficoml
mov
cmpsl
out
inc
fcoml
or
in
in
shlb
mov
xchg
push
xor
fs
sbb
int
xchg
mov
sbb
scas
xchg
rcll
sbb
fbstp
mov
jbe
and
xchg
mov
adc
xchg
jmp
adc
fnsave
mov
sbb
mov
in
add
daa
pop
and
test
cmc
std
inc
cmp
mov
data16
lods
jmp
mov
push
adc
sbb
xchg
jb
cwtl
inc
lcall
pop
sahf
xchg
jmp
fdivrl
dec
in
sub
jne
xor
aas
push
insb
arpl
sbb
sub
sti
outsb
dec
pop
in
mov
sbbl
je
sbb
sub
fucomip
mov
cld
scas
jecxz
add
dec
jmp
test
adc
out
aaa
nop
dec
pop
mov
and
mov
fmul
cmp
push
popa
imul
pop
mov
insl
out
out
cmp
insb
lahf
xchg
push
xchg
push
cmpsb
cwtl
std
sahf
add
mov
std
in
pminsw
js
in
mov
and
inc
enter
jns
add
add
sbb
dec
popa
pop
lret
icebp
test
mov
pop
test
fcmovnbe
pop
outsb
sub
imul
inc
mov
test
imul
outsl
mov
add
movlhps
mov
xor
jae
and
pop
aas
loopne
mul
daa
jb
stos
mov
lret
popf
icebp
mov
jg
les
test
sti
sbb
je
lret
mov
sub
out
adc
movhlps
gs
clc
fdivr
cmpsl
push
ret
out
out
add
fstl
sbb
cltd
dec
and
xchg
mov
inc
or
mov
adc
inc
cltd
xchg
in
add
sub
xchg
sbb
or
jno
shlb
hlt
jecxz
popa
outsb
aas
dec
mov
sbb
jecxz
rcl
jecxz
jmp
cmp
jmp
icebp
push
setg
or
jae
test
xchg
aaa
out
and
nop
sarb
mov
sahf
jae
mov
xor
lods
fwait
ret
fildl
clc
mov
sbbb
mov
ja
loopne
out
je
sbb
jno
push
addr16
mov
jnp
sbb
mov
std
cmc
mov
and
mov
push
aas
sbb
mov
and
push
pop
mov
lock
mov
rorb
inc
std
pushf
jno
iret
jmp
sbb
fildl
gs
inc
lea
xor
shrb
sub
negl
clc
clc
test
movsb
mov
adc
out
ds
test
test
pusha
int
lds
lret
and
mov
aam
bound
or
in
and
sahf
dec
push
push
shlb
dec
adc
or
inc
pop
mull
test
xchg
dec
loopne
mov
pop
sub
imul
insl
ds
fisubl
add
push
sbb
lret
loop
pop
adc
push
fldcw
pop
or
inc
cmpsl
inc
adc
push
mov
pop
push
jo
xor
test
push
mov
inc
fwait
sub
lcall
test
mov
int3
sub
in
sub
outsl
lea
cmp
mov
scas
push
push
fwait
ja
pushl
xchg
xor
push
fwait
push
push
lea
mov
sub
aam
daa
jmp
sahf
stos
push
xchg
movb
inc
mov
cltd
in
cmp
mov
or
or
sub
jae
and
add
mov
cli
pop
jmp
mov
es
pop
sbb
xlat
jl
ljmp
ret
arpl
mov
pop
jnp
xchg
rcr
mov
add
insb
arpl
mov
icebp
push
add
xlat
cli
imul
cld
in
repnz
aad
mov
and
lds
mov
cmp
lea
ljmp
fsubrp
aam
jne
ss
mov
xchg
jno
jp
les
test
xchg
xchg
lods
xor
jnp
into
cmp
test
pushf
jle
xchg
popa
inc
movb
mov
aad
add
bswap
iret
push
push
jge
aas
adc
sahf
js
xchg
push
or
add
scas
lock
jns
push
in
loope
out
push
dec
in
aam
enter
pop
pop
jge
fsubrl
inc
je
push
jge
push
jae
add
dec
jge
ret
xor
test
dec
das
push
adc
cmp
or
jbe
jle
popa
fdivrs
jecxz
bound
mov
sub
scas
clc
aam
mov
cmc
pop
jecxz
out
xor
push
cmp
clc
pop
pop
push
stc
sub
mov
ret
ja,pt
dec
sub
inc
int
add
ds
push
fiaddl
int3
push
push
jle
mov
mov
fstpl
mov
cmpsb
je
ljmp
pop
repnz
rolb
mov
test
lods
repz
adc
push
jecxz
sub
add
dec
jge
lahf
push
add
in
mov
cltd
lcall
pusha
cmpl
cmpsb
insl
cmp
mov
cmpsl
sbb
js
repz
cld
pop
lods
out
out
ret
jns
das
fdivp
call
mov
fdivs
out
jb
xchg
fistl
into
mov
pop
daa
dec
fdivs
fsubl
jae
outsl
aad
pusha
ds
jnp
aaa
pushf
cmp
lock
in
cmc
sub
mov
imul
cld
or
mov
mov
push
push
adc
jb
mov
das
cmp
or
xor
iret
pop
nop
scas
imul
ss
adc
arpl
dec
jae
sub
leave
fisubl
dec
subb
lahf
or
dec
faddl
pop
mov
mov
fisubrs
fsubrp
cmpsl
ds
add
mov
push
aad
jb
push
add
es
pop
jbe
cmp
xor
stos
int
pop
mov
push
and
jmp
in
aas
pop
jp
cli
push
arpl
sti
mov
scas
sar
sbb
aas
lret
out
or
movsl
nop
dec
or
jmp
outsb
roll
xor
xadd
in
push
mov
ret
shrb
fstpt
aas
rcr
xchg
int
popf
fcompl
rolb
ds
or
xor
adc
test
inc
jo
es
inc
pop
push
arpl
fwait
in
mov
xchg
movsb
xchg
out
inc
mov
jp
loop
mov
mov
jnp
js
push
adc
pop
cmp
dec
push
cmpsl
push
rep
fsubl
or
roll
push
imul
xchg
sbb
sbb
mov
repnz
out
add
fnstcw
aam
push
sbb
pop
out
xor
xor
ja
fadd
aaa
sub
std
cmp
rclb
into
ja
js
mov
addr16
popa
enter
incl
leave
sahf
mov
add
mov
pop
cwtl
sub
adc
cli
sbb
lea
pop
cmp
cltd
sbb
jo
subps
pop
and
pop
mov
cltd
idivl
sbb
xchg
adc
fisubrs
ret
scas
cld
dec
and
mov
pop
ljmp
and
cmp
jg
stos
xor
sbb
repz
fcmovne
mov
jo
jno
lret
xor
cltd
jg
and
loop
jl
cmp
sti
stos
jne
cmp
and
adc
cmp
or
cs
pop
mov
rcrb
pop
jle
aam
shll
loopne
push
sti
and
inc
xchg
or
popa
movl
roll
cmp
push
enter
push
icebp
pushf
add
neg
jmp
inc
pop
stos
inc
dec
mov
jge
jg
cwtl
sti
lock
cmp
outsl
add
xchg
push
sbb
cmp
das
les
cmp
or
mov
mov
dec
hlt
fcoml
jecxz
fstpt
scas
lret
stos
jp
bound
imul
scas
stos
dec
mov
outsl
mov
out
pop
cli
push
pop
xchg
fisubl
xchg
int3
nop
jmp
xor
cmc
sub
loope
push
or
or
pop
sub
pop
ret
ljmp
pushf
dec
lock
je
sub
shl
cs
sub
call
loop
stc
adc
xor
mov
subb
cmpsb
ds
test
push
test
xchg
adc
sub
mov
adc
mov
pop
fistpll
jmp
add
ret
test
and
jo
cmpsb
into
pop
dec
push
add
inc
test
add
stos
loope
icebp
test
hlt
cmpl
mov
xorb
xor
adc
mov
add
mov
cmp
sbb
fisttps
pop
jae
and
inc
icebp
mov
jg
add
cld
mov
or
dec
inc
mov
cmp
pop
mov
pop
mov
idiv
mov
hlt
add
sbb
adc
mov
adc
int3
pop
lahf
push
mov
mov
test
dec
frstor
rorl
scas
mov
adc
push
ret
pop
mov
shl
push
push
push
scas
jge
add
push
in
icebp
cmp
and
push
cmpsb
out
js
inc
sub
cli
cli
inc
inc
mov
pop
les
arpl
ret
bnd
loope
fs
jb
std
je
adc
jb
hlt
stc
pop
fsubrl
xor
imul
std
fsts
pushf
mov
mov
xchg
sub
dec
push
mov
popf
dec
adc
cmp
stos
jnp
cli
js
nop
jp,pt
adc
mov
xor
scas
and
mov
push
mov
insb
xchg
jo
dec
cmp
sub
ret
pop
mov
jg
jge
lret
cmp
and
es
mov
sbb
pop
mov
addb
lods
xor
jbe
push
pushf
rclb
mov
scas
or
sub
testb
pop
add
inc
subb
loope
aas
jne
testb
insb
or
pop
enter
dec
xlat
dec
ret
jb
push
dec
fwait
arpl
dec
stos
jae
pop
sahf
int3
xor
testb
mov
mov
mov
ss
cmpsl
je
add
cmc
leave
and
pop
fcomi
add
sbb
jno
out
insl
lods
data16
insb
test
xor
or
and
jl
repz
outsl
gs
call
lea
and
stc
mov
xlat
icebp
adc
fwait
jnp
roll
mov
cmp
loope
iret
sub
or
or
je
mov
stos
sub
adc
cmc
mov
aad
bound
fs
pop
ret
dec
enter
jmp
cwtl
mov
push
jmp
in
test
sub
lock
cltd
jne
sbb
adc
lahf
push
out
push
test
jbe
mov
cmc
push
movsb
xchg
xchg
mov
lahf
popf
sbb
pushfw
in
in
add
das
dec
outsl
inc
into
sub
in
push
jmp
dec
push
imulb
add
inc
lahf
adc
cmp
testb
inc
mov
mov
imul
sub
cmp
mov
adc
ret
jp
dec
adc
mov
arpl
add
scas
lret
sbb
lahf
jno
add
aam
xor
enter
jg
dec
lret
lahf
mov
es
xchg
pop
cltd
iret
pop
js
nop
or
jnp
sub
push
mov
dec
mov
inc
xor
insb
pop
je
stos
iret
sbb
lds
push
dec
aaa
jnp
je
inc
mov
cld
add
fimuls
repz
sub
nop
call
loope
leave
je
test
xor
lods
adc
mov
dec
mov
jo
push
fadds
lahf
fstl
loopne
add
mov
or
setp
in
movb
jns
xor
movsb
inc
jmp
lret
add
in
add
lret
mov
sub
stos
mov
and
inc
push
sbb
mov
sar
xor
xor
fs
data16
sub
mov
cmp
inc
mov
push
repnz
in
mov
stc
push
sub
bound
mov
xchg
fldcw
daa
imul
pop
adc
movsb
lret
cmp
pop
xchg
jge
inc
adc
imul
in
cmp
mov
inc
hlt
mov
or
outsl
filds
push
pop
xchg
in
push
push
es
mov
call
aam
in
xchg
leave
mov
outsl
jnp
or
and
mov
push
mov
mov
dec
scas
ret
push
xchg
jnp
into
sbb
and
ss
mov
mov
out
add
pushf
xor
dec
ret
fcoml
into
incb
mov
arpl
fsubrl
outsl
jbe,pn
lock
nop
mull
or
mov
lret
pusha
xor
cwtl
adc
sbb
mov
pop
cmp
fs
mov
pusha
insb
out
and
orl
add
movsl
push
mov
pop
push
inc
xchg
out
pushf
dec
fmull
jle
pop
iret
fs
es
loop
out
inc
and
jl
cli
aas
sti
mov
push
or
dec
push
mov
mov
jo
repz
or
push
or
mov
jns
or
xor
pusha
dec
lods
or
rcrb
mov
aaa
adc
cmpsb
xchg
xor
lea
sbb
loope
aas
xchg
push
daa
pop
and
dec
push
pop
cmp
xor
adcl
or
lods
cs
mov
les
jbe
cltd
pusha
push
mov
insb
lea
shlb
pop
jle
pushf
xor
sbb
jle
push
cwtl
movsb
adcl
cmpsl
inc
movl
iret
mov
dec
sbb
cmpsb
dec
cmp
add
lods
pop
out
push
push
imul
cld
xor
dec
dec
rcrb
imul
mov
imul
adc
dec
out
cmp
mov
xchg
icebp
xchg
push
std
mov
jb
lods
pop
sub
into
jne
sub
out
out
adc
adc
push
inc
xor
mov
lods
cmp
sbb
inc
jbe
outsl
inc
daa
ret
add
push
jmp
cmc
cmpsl
int3
lret
sbb
in
dec
cmp
adc
movsb
popf
jg
mov
jmp
es
dec
in
and
xor
dec
sub
push
stc
cmp
scas
stos
push
push
xchg
xorl
in
mov
mov
sbb
xor
xor
dec
shll
dec
add
in
stos
xchg
sub
lds
xor
int3
test
mov
lret
and
loopne
push
shl
enter
sahf
jmp
inc
outsl
add
sbb
jo
fidivrl
cmp
aaa
sub
pop
dec
pop
movsl
insl
jnp
sarl
rcr
dec
xor
mov
jge
jno
testb
es
inc
add
jae
test
inc
and
fdivrs
pop
mov
popa
pop
adc
out
pop
and
ss
aas
xchg
dec
out
test
xchg
std
int3
test
push
cmp
jnp
jnp
mov
divb
xchg
in
enter
repnz
dec
pop
inc
lock
or
push
push
push
inc
mov
iret
pop
lods
cmp
stc
xchg
push
stos
movsb
sub
lds
pop
sahf
mov
btr
dec
xor
add
sbb
cmpsb
mov
andb
div
psraw
mov
jp
add
lods
sahf
push
test
rcll
mov
insb
xor
les
enter
js
xorb
xchg
pop
cmp
mov
lock
ret
fcompl
add
mov
push
jl
stos
or
ja
push
std
xlat
fistpl
pop
test
cmp
inc
dec
imul
jnp
push
sub
inc
sub
jbe
das
inc
push
test
mov
xor
jno
jno
mov
mov
test
or
xor
cmp
sub
fisubrl
push
inc
ret
adc
lret
int
inc
mov
stc
fmuls
sbb
and
loop
xchg
gs
imul
push
dec
mov
cmp
shll
xorb
and
scas
inc
push
popf
mov
outsl
fs
mov
ljmp
sar
in
and
pusha
push
test
add
in
leave
out
sbb
pusha
mov
addr16
in
pop
add
ds
inc
dec
fmul
imul
out
inc
pushf
stc
sbb
xorb
mov
cmp
lret
insb
repnz
xchg
push
or
xchg
and
jge
dec
inc
xor
clc
aaa
pop
inc
jns
pop
inc
ljmp
xor
xchg
mov
scas
add
outsb
call
adcb
stos
scas
scas
jno
repnz
loop
out
scas
stc
or
mov
inc
stos
movsb
mov
xlat
mov
adc
and
stos
int
sub
lret
adc
repz
sub
test
mov
xor
decb
sub
adc
inc
movsb
dec
test
mov
lods
insl
stos
fistpll
int3
test
dec
cs
movsb
or
sub
loopne
pop
lcall
lcall
push
mov
or
add
adc
adc
notl
dec
and
jecxz
scas
jbe
pop
data16
adc
jle
mov
mov
cmp
add
aad
push
mov
inc
xchg
dec
xlat
mov
sbb
pop
jae
ss
out
add
dec
into
hlt
insl
xor
or
enter
cs
or
fadds
cmp
add
xor
push
xchg
mov
sub
jo
adc
mov
xchg
ljmp
scas
lds
or
adc
fists
xor
xlat
pop
iret
add
sub
xchg
test
sbb
fucomi
push
push
lahf
clc
enter
xchg
jno
cwtl
or
gs
xchg
cltd
mov
mov
pop
imul
and
gs
insb
xchg
xor
lahf
es
xchg
sahf
imul
xchg
daa
jo
jmp
test
lock
cld
add
jnp
lods
xchg
mov
aad
mov
loop
sbb
lock
push
inc
sbb
js
pop
cmp
movsl
aas
and
sahf
cltd
fidivrs
inc
jmp
and
fcmove
mov
inc
xchg
push
push
cltd
incb
aad
repnz
inc
sub
adc
cmp
jns
repz
xlat
cmp
dec
ljmp
xor
xchg
sbbl
aam
fstpt
bound
testb
scas
pop
pop
insl
xchg
mov
xor
push
push
std
dec
ficomps
mov
andb
and
lcall
mov
cwtl
xor
das
imul
cmpsb
sbb
pushf
cmp
sahf
mov
dec
add
in
fmull
push
int3
scas
pop
outsl
sbb
int
mov
pop
out
dec
cltd
cmp
add
je
gs
adc
aaa
mov
unpcklps
sbb
scas
lods
add
cwtl
mov
repnz
jno
or
or
cmpsb
loopne
aaa
xchg
and
push
arpl
dec
xchg
sub
mov
icebp
push
mov
sbb
or
aaa
mov
push
cmpsl
adc
insl
jmp
ljmp
pop
and
push
push
jmp
hlt
or
lods
push
addl
out
cmpsl
rcrb
pop
adc
push
in
stc
pop
mov
enter
mov
cmpl
jg
xchg
add
sbb
or
xchg
cli
out
add
je
ret
cmp
fldl
test
cmp
pop
and
add
ss
xor
roll
out
sub
sbb
fcoml
ffree
decl
in
pop
xchg
rorl
xchg
scas
add
fidivrl
pop
jbe
cltd
adc
in
jae
movsb
push
push
mov
outsl
add
cmpsb
xchg
popa
push
mov
add
or
pop
insb
mov
jl
jnp
fildll
mul
dec
hlt
pop
rdmsr
jne
pusha
mov
inc
xchg
lea
pop
mov
mov
shll
xchg
dec
dec
or
pop
cmp
inc
test
loop
ljmp
das
out
pop
cmp
xchg
jmp
lret
sti
mov
jmp
inc
pop
mov
dec
adc
aaa
ds
aad
xor
loope
repz
push
push
lcall
shrb
cwtl
mov
icebp
popf
in
pusha
pop
and
xchg
jnp
push
loopne
dec
mov
mov
push
adc
push
iret
addb
jp
ljmp
dec
test
imul
push
je
push
dec
mov
jo
sbb
or
out
cmp
test
fstl
nop
das
out
cmp
pop
popa
jnp
scas
in
in
jne,pt
add
scas
jnp
xor
addr16
add
mov
adc
pusha
jbe
add
pop
sub
or
inc
fcompl
adc
and
push
leave
ret
jne
jl
aam
loopne
mov
push
mov
in
into
imul
push
push
pop
mov
arpl
jp
adc
jne
jge
imul
cmp
inc
aas
pushf
push
jae
fdivl
adc
loop
popa
dec
jo
sahf
pop
std
push
push
cmp
inc
sub
cld
mov
sub
lock
jnp
cmpsb
sbb
push
dec
jg
repz
outsb
imul
jl
test
sti
adc
adc
mov
fsubp
sti
mov
push
aad
xchg
cmp
or
dec
pop
int
lea
cs
xchg
or
dec
cmp
in
enter
mov
sub
sbb
cmp
pop
mov
in
adc
adc
in
xchg
mov
cmpsb
test
repz
mov
mov
xchg
pop
pop
sbb
dec
push
adc
inc
xlat
imul
je
ret
loop
lods
mov
sbb
fiadds
in
call
lcall
arpl
push
fs
mov
cs
pop
cld
je
adc
lret
add
gs
cmp
adc
test
fcoml
cmp
add
popa
push
mov
stc
sti
mov
pusha
dec
outsb
or
mov
adc
out
dec
xlat
mov
scas
jp
out
sbb
mov
sub
xor
insl
lret
rcrb
aam
les
lret
sub
ljmp
addr16
inc
out
xlat
jns
gs
mov
pop
insl
fadds
pop
xlat
stos
clc
push
xor
lcall
cmp
xchg
jb
cmp
lret
jecxz
pop
fcmovne
stos
jl
movl
leave
aaa
or
mov
test
popa
lahf
mov
dec
jge
or
gs
xchg
mov
movsb
sbb
dec
sub
adc
lods
mov
test
clc
mov
or
push
aam
mov
pop
iret
test
push
insb
aaa
aaa
scas
mov
xchg
outsl
das
testb
cmp
insb
loop
mov
dec
pop
adc
jae
sbb
iret
pop
mov
rcrb
and
je
mov
xchg
push
int3
push
add
xor
aas
les
dec
dec
mov
movsb
imul
mov
aad
imul
jno
add
mov
cmpsb
lcall
aad
cmp
push
ret
add
fisttpl
lret
cmpsb
outsb
push
jo
stos
jecxz
sti
mov
pop
sbb
call
jae
xlat
shl
hlt
sahf
mov
push
xor
arpl
inc
push
jmp
cmp
pop
sbb
pop
cmpsb
pop
mov
dec
push
add
iret
pushf
push
ret
and
xchg
sub
jl
xor
push
push
xor
jp
out
inc
movsl
mov
cmp
cwtl
sbb
into
sbb
cmp
sbbl
mov
movl
cli
jge
push
inc
out
incb
sub
push
sti
jmp
ss
jo
pop
daa
stos
sub
adcl
fistl
adc
adc
cmp
xchg
xor
test
loope
xchg
aam
mov
dec
decl
adc
pop
fdivrs
push
imul
aam
dec
cmp
into
or
arpl
xchg
and
sbb
xchg
push
mov
sub
icebp
mov
cmpsl
jg
stos
gs
sub
inc
stc
mov
outsb
icebp
mov
scas
daa
mov
pop
fsts
clc
pop
pushf
fs
and
loope
jl
shr
sbb
mov
lret
cmc
inc
and
mov
shlb
jge
and
jbe
jnp
and
and
gs
or
lahf
mov
push
or
das
mov
cwtl
stos
out
gs
push
xor
bound
cmpb
jecxz
add
sub
imul
pop
jbe
cld
ja
ds
and
add
lods
js
insl
ficomps
and
xchg
fninit
outsb
int3
ret
sub
inc
inc
mov
jo
scas
xor
das
sbb
aam
out
dec
shr
divl
shrl
xor
adc
cmpl
cmpsb
iret
lahf
mov
mov
and
sar
es
dec
jecxz
lds
cmp
test
cltd
outsb
rcrl
push
add
mov
push
loope
cmp
pusha
leave
incb
push
inc
scas
pushf
pop
out
mov
ror
add
mov
mov
pop
stc
and
popf
call
shlb
adc
fsubl
notl
repnz
inc
push
or
jo
mov
sti
add
aaa
inc
xor
je
arpl
nop
adc
je
pop
das
and
jmp
xchg
je
push
sbb
inc
mov
mov
ljmp
mov
rcrb
xor
mov
pop
mov
lcall
pop
sub
add
dec
cmpsl
mov
xchg
stos
cli
inc
mov
adc
xchg
mov
push
xchg
bnd
jbe
xchg
daa
arpl
dec
xchg
iret
inc
xor
mov
push
push
gs
fbld
out
jae
sub
leave
or
dec
mov
shlb
cs
outsb
int
stos
xor
shrb
call
mov
outsb
lods
mov
fildl
pop
push
or
nop
arpl
xchg
xor
pop
dec
sar
mov
es
mov
pop
sub
loope
iret
sub
ret
cmpb
push
push
inc
dec
ror
sbb
call
nop
and
jl
sti
out
mov
xchg
mov
pop
adc
xchg
icebp
mov
cmp
pop
sahf
sub
lahf
in
cs
cmpsl
mov
mov
pop
rcrl
movsl
loopne
add
mov
jl
lods
xor
aam
pusha
scas
mov
push
vpcmpgtb
sub
push
mov
addr16
dec
inc
das
add
mov
xchg
jno
mov
xlat
fcmovnb
and
test
ret
jns
cmp
push
in
mov
jp
and
daa
sarl
inc
arpl
xchg
xchg
cwtl
dec
push
pop
nop
outsb
enter
subl
daa
adc
and
mov
adc
out
ss
mov
jl
icebp
mov
mov
mov
cld
xchg
andb
fistps
mov
cmp
mov
jbe
in
orl
push
mov
roll
in
pop
gs
and
xchg
aas
movsl
popf
mov
adc
pop
ret
je
hlt
stc
lods
xor
sub
add
scas
stos
sbb
lea
jns
andb
mov
mov
sahf
push
jmp
jbe
cs
add
es
cmpb
fisttps
mov
sbbl
sbb
iret
popa
pop
pop
aas
hlt
jo
add
fsubl
ds
or
js
stos
scas
data16
inc
mov
ret
mov
and
inc
mov
inc
pop
fnstcw
shlw
or
dec
dec
mov
inc
mov
push
insb
lcall
push
outsl
cmc
mov
cmp
lds
sub
insl
xchg
lahf
inc
fcmovu
lods
sub
mov
mov
shlb
push
jne
jmp
xchg
jns
and
dec
popf
test
scas
adc
push
in
into
in
sbb
sahf
ljmp
das
adc
test
add
push
outsl
mov
int
mov
loop
das
loopne
and
cs
int3
lods
and
cmc
das
cmp
sbb
dec
lods
lods
jae
xor
add
aaa
mov
mov
lds
lods
xor
cmpsl
cmpsl
filds
mov
push
int
pop
daa
xchg
fiadds
pop
mov
add
dec
mov
adc
sarb
sub
cmp
jbe
sub
mov
in
pop
dec
push
out
xchg
push
mov
es
cmp
mov
dec
xor
adc
mov
mov
dec
sub
inc
inc
pop
enter
cmc
jg
fwait
mov
daa
xchg
out
stos
stos
jns
jne
pop
cmp
jmp
in
jl
cmp
sub
out
call
push
or
xor
cmp
mov
inc
jns,pt
insl
repz
iret
ffree
and
or
sbb
into
xor
es
shl
mov
cwtl
pop
mov
out
lret
imul
lock
mov
inc
lret
cmp
gs
pop
sub
jl
push
dec
pop
adc
sahf
xor
dec
mov
test
and
jb
ffree
daa
and
adc
xor
cmp
mov
and
jnp
push
cmpsb
aas
rorb
sub
xchg
push
xchg
sahf
jo
pop
dec
enter
gs
sbb
jmp
loop
mov
mov
lcall
maxps
mov
jmp
sti
pop
inc
orb
ja
pop
sbb
lea
sbb
add
sub
cs
into
je
xchg
icebp
mov
jle
fxch
jbe
cmp
je
pop
and
leave
pop
sub
mov
addr16
ja
enter
or
ret
ja
cmp
mov
mov
adc
jg
shrb
jo
insl
adc
rcr
pop
data16
xor
ficompl
xchg
lds
dec
sub
sub
xchg
sub
cmpb
xchg
mov
lret
stos
dec
inc
scas
sbb
mov
negl
insl
daa
xor
pop
sub
push
stos
jl
or
inc
into
mov
int
xchg
mov
andb
push
shr
inc
xor
lret
fbstp
mov
and
scas
sub
stos
ds
push
jecxz
push
mov
sti
adc
sub
or
jmp
push
mov
fldcw
jbe
and
sub
mov
add
insb
aad
xchg
xor
dec
inc
lea
test
scas
mov
rcll
lcall
cwtl
cmp
popa
jno
movsl
les
push
out
out
push
add
clc
mov
movl
js
xchg
out
add
fidivrs
sahf
xchg
insb
mov
cltd
xor
insb
mov
jae
in
fadds
and
nop
sbbb
es
das
xorl
or
dec
dec
cli
insb
flds
add
add
andb
cmpsl
xorb
loope
xchg
sbb
jne
xor
push
pop
cwtl
ret
cmc
push
mov
and
cltd
aaa
push
and
mov
test
add
xor
pop
inc
cmpsl
xchg
std
push
les
sub
xor
jbe
ds
xchg
daa
add
dec
lods
movsl
mov
call
mov
sar
mov
in
xor
dec
xchg
jb
xchg
pop
lock
int
cwtl
jmp
vpmuludq
movsl
ds
dec
push
out
mov
jl
shlb
rorb
sbb
cmp
mov
icebp
clc
idiv
loopne
mov
mov
rclb
push
mov
call
xchg
outsb
fiaddl
fisubl
cwtl
popf
xchg
adc
orb
dec
shrb
jnp
nop
mov
mov
xchg
cmp
xlat
and
xchg
in
imul
dec
xchg
dec
jle
xlat
fimuls
pop
and
cmp
sbb
cmpsl
pop
jbe
je
imul
pop
dec
or
mov
mov
push
hlt
pop
js
push
enter
jb
xchg
and
andb
test
hlt
sub
or
icebp
mov
mov
xchg
and
dec
or
idivl
push
fcoml
dec
and
ret
mov
loope
mov
das
hlt
push
popa
mov
addb
adc
inc
sbb
pusha
movsb
push
call
test
pop
daa
mov
lret
inc
xchg
inc
movsb
call
mov
push
inc
push
jb
loope
or
sbb
lock
imulb
lret
out
add
push
inc
and
pop
arpl
insl
dec
cmpsl
leave
adc
cmpsb
lahf
inc
mov
jg
or
lods
mov
cmpsb
or
xchg
xchg
xchg
mov
jae
ljmp
inc
sbbb
mov
jecxz
mov
mov
insb
sbb
subb
or
pop
jmp
int3
sbb
jge
cltd
popf
add
popf
frstor
movsb
adc
mov
mov
lock
loop
loop
aam
or
loope
or
fisubl
std
rcl
add
mov
sbb
insl
js
fdiv
nop
inc
das
shll
iret
sub
sbb
call
xor
pusha
out
jae
dec
mov
inc
out
subb
mov
push
loop
dec
jae
leave
lcall
fwait
jle
mov
sub
mov
popa
add
inc
xor
scas
jae
and
xchg
and
xchg
pop
ja
aam
sub
sub
mov
push
xor
imul
loop
fildll
lods
pushf
add
mov
cmc
xchg
es
cmp
popf
jmp
mov
repz
js
sbb
test
and
cmp
lahf
shlb
outsl
cwtl
jne
mov
push
sbb
jno
stos
pop
pop
mov
adc
fsubs
push
lea
das
or
xchg
mov
jg
loope
shrl
mov
push
cmp
xor
mov
bound
aam
roll
sbb
cmpsl
loop
ror
xor
push
or
sbb
adc
mov
out
mov
and
xchg
and
xchg
test
lret
mov
dec
push
mov
fcomi
call
mov
mov
rep
aad
int
mov
mov
jge
adc
jnp
das
jae
cmp
cld
push
sub
push
mov
loop
sbb
cmpsb
push
push
mov
and
xchg
data16
jg
enter
mov
cmp
dec
cmp
push
adc
cld
dec
pop
jo
enter
sbb
outsb
flds
and
xchg
mov
loopne
add
out
iret
rcrb
xor
pop
xchg
lret
in
loopne
cmp
sub
or
mov
out
push
adc
ret
out
ljmp
das
pop
aaa
push
push
or
pop
pop
mov
adc
xchg
xlat
jne
mov
mov
mov
mov
outsl
xor
and
les
stc
inc
cmp
cwtl
xchg
sahf
jns
repz
divps
jp
pusha
mov
fiaddl
jne
push
iret
jl
mov
ds
dec
ret
mov
push
out
mov
mov
xor
aas
dec
ja
lods
or
enter
mov
or
sub
xor
mov
in
add
sbb
and
jo
jecxz
xchg
jne
jbe
jecxz
inc
lods
sub
test
mov
mov
into
mov
out
data16
repz
cmp
mov
dec
jg
js
test
loopne
pop
pop
call
cld
dec
imul
gs
pushl
sub
cwtl
in
mov
sub
and
das
mov
imul
mov
cli
dec
movsb
push
icebp
sbb
inc
mov
push
pop
loopne
lret
mov
lods
dec
xlat
sti
inc
repnz
pop
in
xchg
dec
jnp
push
inc
scas
lret
in
push
push
and
sti
cld
pop
pop
push
test
lds
stc
adc
push
lret
outsb
xchg
pop
daa
lds
shlb
dec
mov
push
test
sub
inc
lds
fnstsw
repnz
push
xchg
cld
loope
test
add
xor
cmpl
sub
outsl
stos
jmp
daa
addr16
aas
mov
dec
xor
xchg
sbb
or
lods
lcall
jns
inc
add
dec
clc
bound
int
sbb
adc
xor
dec
and
jl
jns
out
rol
pop
pusha
fadd
inc
jae
xchg
je
adc
sub
push
sarl
pop
pusha
int
aaa
mov
fucomip
push
jp
xchg
shlb
or
sti
data16
je
cld
mov
pop
and
cmovbe
nop
cmp
inc
mov
loopne
outsb
or
pop
cmp
mov
jo
push
movsb
mov
aad
fwait
inc
and
int
mov
int
imul
mov
sti
cmp
sbb
inc
push
adcl
pop
and
in
xor
orl
sub
sub
aaa
or
cmp
or
inc
test
cmp
mov
cmp
or
sbb
orb
pop
mov
dec
inc
sbb
inc
inc
jnp
fwait
mov
rcll
test
cltd
dec
orb
mov
int
and
stc
push
popa
fs
scas
out
lds
gs
pop
in
iret
adc
xchg
push
sbb
jge
mov
gs
add
repz
fwait
jl
xor
stc
jge
das
das
in
movsl
adc
enter
cltd
popa
sub
ficompl
jg
inc
jg
pandn
loopne
sbb
sti
leave
dec
push
xorl
call
jne
mov
inc
lcall
cmp
or
add
sub
gs
or
nop
loop
push
ja
add
int3
fisttps
adc
jge
xchg
mov
xchg
or
jp
sbb
inc
inc
adc
sub
dec
jmp
mov
lea
mov
mov
xor
push
xor
pop
in
insl
pop
sub
mov
mov
lahf
mov
out
or
jns
mov
mov
inc
popf
dec
jecxz
popf
cmp
shrl
dec
xchg
and
add
stos
sub
das
dec
cmp
cmpsb
mov
ror
imul
adc
stos
or
ss
mov
or
mov
mov
cmc
xchg
push
dec
or
pop
sbb
insl
pop
loopne
mov
data16
dec
shr
mov
lret
popa
test
cmp
mov
int3
sti
fcmovu
dec
cmp
cmp
aam
pop
cltd
cmpb
stc
mov
arpl
mov
mov
inc
test
jo
dec
scas
cli
cli
mov
pop
test
or
cmc
inc
xlat
cltd
mov
fnsave
inc
mov
sbb
adc
pop
movsl
or
imul
jae
adc
adc
out
pop
fincstp
push
dec
pop
loope
cli
clc
or
notl
jne
pop
cmp
add
or
mov
leave
xor
add
cmp
into
rcl
jno
xchg
int3
jl
jo
cld
lock
or
mov
sti
lds
into
dec
or
mov
adc
sahf
xorl
jae
dec
movsb
ret
ret
sbb
adc
and
xlat
lods
mov
iret
xor
sbb
lcall
push
xchg
xchg
in
mov
leave
sti
jl
ret
lock
aas
int
pusha
js
ss
js
xchg
inc
mov
mov
subl
sub
pop
push
fisubrs
icebp
test
add
mov
repnz
sub
ret
pop
lea
iret
sub
int3
xor
arpl
inc
out
jge
pop
adc
xlat
mov
jns
sahf
mov
cmp
mov
out
add
push
push
xor
mov
adc
jecxz
hlt
push
cs
ja
jb
out
repz
add
mov
aad
inc
test
jns
cmp
int3
int
mov
xchg
or
scas
cmp
dec
pop
pop
mov
std
into
sti
daa
fisttps
repz
out
ret
lcall
dec
add
xor
loop
pop
cmp
and
or
std
ja
testl
mov
out
ucomiss
aas
decb
sbb
mov
mov
xchg
xchg
mov
stos
js
cmp
fdivl
push
xchg
xchg
out
rclb
mov
adc
pop
das
dec
or
int3
hlt
jne
xchg
ds
adc
sub
aam
pop
dec
mov
nop
fsubs
add
inc
or
repz
sti
dec
xor
fisttps
add
jb
push
orl
js
rorb
push
push
pusha
out
out
rcrl
push
shll
test
sti
pop
pushf
loopne
or
stos
in
xchg
pushf
adc
clc
pop
std
cwtl
testb
aad
fimull
jl
test
push
arpl
ja
test
push
in
cmp
inc
addr16
shrb
imul
cmp
imull
into
mov
jecxz
xorb
sbb
pop
sbb
xchg
scas
cmp
mov
sbb
bound
dec
dec
cmpsl
cld
rorb
movsl
jle
adc
test
scas
iret
es
test
fnstsw
mov
adc
lea
lret
jo
push
push
sub
sub
and
sub
aam
movsb
sub
sarb
xchg
movl
test
sub
mov
sbbl
sbb
mov
cmpsl
into
and
mov
and
jge
and
jmp
dec
mov
mov
sbb
push
push
push
enter
out
in
in
in
insl
add
sub
mov
mov
sar
aam
mov
rcrl
mov
inc
jmp
pop
cmp
xchg
daa
add
aam
xlat
mov
stos
cmp
add
xchg
inc
cmp
cli
daa
cli
pop
cmp
or
ljmp
dec
mov
fdivp
push
js
out
test
push
ret
out
jb
lcall
jecxz
dec
loopne
scas
push
nop
jle
sbb
dec
push
adc
xchg
std
pusha
inc
mov
es
shr
add
insb
or
jno
mov
rolb
lahf
in
and
push
sbb
and
fstpl
inc
or
adc
pop
loop
pop
std
aam
push
mov
xor
fdivrs
daa
mov
pop
test
xchg
xchg
mov
lds
aas
cmp
jno
pop
and
lcall
mov
outsb
inc
clc
ljmp
lret
ja
pop
sbbl
xor
pop
jecxz
and
andl
xchg
paddsw
mov
lods
hlt
dec
addr16
add
shlb
sub
xchg
in
push
and
jbe
orl
jp
test
mov
cmp
dec
jnp
sar
pop
bound
les
fildl
call
push
rol
idivb
push
pop
or
mov
cld
jae
or
xchg
jno
sbb
and
dec
call
dec
clc
xchg
adc
xor
xor
pop
lods
mov
test
loop
pop
mov
push
sti
das
mov
pop
mov
or
loope
xlat
data16
test
dec
mov
in
idivb
adc
ror
adc
sahf
fdivs
insb
mov
add
int3
shr
mov
test
test
jg
mov
or
cli
cwtl
jge
aam
aad
movsb
movsb
in
xor
push
das
sbb
outsb
adc
push
mov
outsl
test
fs
sbb
std
iret
pop
cli
nop
cld
inc
push
fistps
or
sub
ret
jg
xor
ljmp
movsl
shlb
adc
add
adc
add
inc
imul
jnp
iret
enter
loopne
inc
inc
jge
or
adc
loope
mov
pop
or
adc
addb
push
cli
fcmovbe
mov
lea
or
les
in
fcoml
sbb
adc
dec
add
and
push
inc
aaa
cmp
sub
xchg
or
dec
xchg
pusha
test
ret
sbb
sbb
inc
xchg
clc
jno
cmpsl
jo
or
or
sub
xor
shll
shlb
dec
cmp
mov
lret
std
rcrl
in
negl
leave
or
push
mov
daa
in
dec
adc
add
sbb
and
ficomps
data16
jbe
std
add
sahf
adc
xchg
adc
mov
int3
stos
mov
in
ficompl
cmpsl
inc
mov
cmp
adc
pop
mov
xor
sub
add
fisttpl
cmp
aam
adc
out
fstpt
icebp
xor
push
sbb
and
inc
cltd
push
fisubrs
fdivrs
xor
lea
sub
addr16
pop
push
enter
sub
lcall
pushf
pop
jmp
icebp
pushl
mov
mov
mov
sar
lea
out
cmp
test
xchg
mov
call
pop
fisubrs
fidivrs
mov
inc
xchg
aas
sub
jbe
cld
mov
and
and
mov
out
fs
xor
es
cmp
xor
xor
stc
dec
scas
cmp
mov
fisttpll
cmp
icebp
push
repz
lcall
push
outsb
adc
int
inc
in
sbb
sar
inc
aaa
rorb
ret
test
pop
aam
iret
add
mov
xchg
mov
inc
xchg
sub
decb
add
das
sbb
in
iret
movsb
mov
jns
icebp
clc
push
shl
leave
scas
js
inc
pusha
fldl
lods
cltd
pop
mov
xor
int3
add
push
bound
out
sbb
pop
push
push
jge
pop
test
les
adc
inc
psubusw
xchg
pop
inc
push
loope
cli
cs
popf
cli
rorl
scas
mov
push
or
sbb
cld
cwtl
leave
lcall
shrl
dec
mov
scas
ds
inc
out
bound
xchg
jb
popl
dec
xor
sahf
inc
test
ja
adc
cmp
xor
mov
xchg
inc
mov
repz
add
pop
imul
sbb
cltd
cs
negl
xchg
stos
push
clc
call
xor
cmp
add
lock
sbb
adc
push
add
xchg
inc
lea
idivb
jle
jg
sub
dec
mov
fdivs
mov
inc
cmp
cltd
dec
je
pop
fisttpl
rcrl
push
xor
pop
inc
je
fdivrl
mov
lahf
icebp
or
pop
mov
or
xchg
jge
cmp
test
daa
push
xor
inc
das
push
or
lahf
aam
lcall
dec
cwtl
sbb
mov
dec
add
fs
stos
cmp
popf
jecxz
pop
mov
push
fisubl
mov
out
xlat
add
pop
dec
jae
das
icebp
inc
dec
dec
cmp
test
ja
mov
or
aad
lods
int
cltd
mov
dec
shlb
xchg
xchg
mov
cmp
in
loop
mov
dec
xchg
iret
js
xor
lret
xor
jp
lcall
addl
xchg
sbb
adc
xchg
mov
arpl
mov
repnz
lret
mov
mov
adc
cmpsl
lock
adc
lcall
lds
mov
aad
mov
loope
inc
and
or
mov
ss
xchg
mov
test
cli
dec
jno
addb
out
ficomps
cmp
push
sub
push
icebp
xchg
pop
sbb
es
je
pop
aad
push
and
mov
push
push
insb
inc
adc
sbb
sub
arpl
mov
lods
add
jns
pushf
fadd
mov
scas
sarb
xor
cmpsb
mulb
cmp
insb
mov
mov
adc
sub
push
jle
ja
pop
push
rep
shll
jp
mov
lcall
and
pop
rcl
and
fmull
scas
js
jo
or
jmp
ret
cmpsb
jbe
mov
cld
out
adc
mov
imul
xchg
sub
jb
xchg
stos
repnz
cld
xchg
dec
fstl
dec
dec
ror
mov
stos
clc
jl
int3
mov
aaa
ss
mov
xchg
jge
xchg
xor
xchg
push
cmpsb
mov
xor
cmp
fildl
ret
mov
cmp
lcall
cli
adc
cmpsl
insb
fldt
rcl
dec
fcmovu
inc
or
dec
or
mov
cwtl
adc
mov
push
dec
test
sub
sub
dec
addr16
imul
sub
mov
mov
fstp
push
push
or
jns
ljmp
xchg
cmpsb
and
arpl
loop
popl
mov
or
scas
cmp
pop
repnz
int3
pop
mov
jb
test
les
rolb
repz
mov
push
jns
fildl
sub
xchg
outsb
hlt
out
sub
jp
shrb
scas
iret
lret
lea
repz
push
and
xchg
sbb
cmpsb
enter
cmp
dec
jo
popf
lcall
adc
mov
mov
sahf
outsl
pop
popf
arpl
fs
inc
shr
pop
das
mov
lods
dec
cld
inc
ret
outsb
sbb
je
xlat
das
sti
aam
test
xor
mov
push
or
cltd
pop
cmp
movsb
xchg
ss
mov
les
xlat
roll
in
push
inc
ss
icebp
add
lret
movsb
add
cmp
mov
jbe
lret
sub
stos
xlat
sarl
push
dec
and
cmp
rolb
adc
loope
xor
pop
push
addr16
mov
jns
idivl
or
outsb
ljmp
dec
push
clc
aas
in
dec
cmp
iret
push
sbb
mov
mov
or
jno
jns
lds
pusha
jns
xchg
out
loopne
les
lds
dec
adc
pop
lods
into
fwait
sbb
dec
push
fcomip
in
push
lods
pop
hlt
push
sbb
sbb
fisubrl
mov
jb
call
push
xchg
push
scas
add
jno
ror
push
fsts
jecxz
popf
xor
aaa
add
pusha
aaa
inc
adc
stos
aad
pop
xor
ljmp
fbld
incl
bound
jg
dec
jnp
fcomip
fldl
movsl
sub
cmp
dec
mov
jp
add
xchg
fisubs
rcrb
xchg
lods
mov
repz
cs
sub
lock
loop
and
cli
mov
sub
xchg
gs
push
cs
and
nop
and
mov
xor
je
sarb
data16
jp
or
insl
stc
jecxz
test
fmull
pop
in
xchg
cmp
lret
pop
sub
add
jp
mov
aam
mov
out
sub
cmp
inc
jp
pop
in
imul
and
shrl
jg
mov
cmp
xor
in
add
mov
divl
jg
cmp
mov
sub
frstor
std
jmp
add
out
imul
cmp
and
rcl
jae
add
icebp
test
jno
fdivs
pop
je
xlat
sar
ja
jo
xor
dec
xchg
jae
aad
push
sahf
push
push
mov
stos
sbb
mov
sub
mov
enter
aad
inc
shlb
scas
movsl
jmp
movsl
mov
adc
aaa
loope
sub
sbb
adc
ret
cmp
pop
movsb
mov
mov
out
cli
adc
lds
pop
jl
jmp
mov
js
pop
lds
lods
dec
enter
xchg
out
repz
sub
movsl
out
inc
fs
pop
and
sarl
int3
rorl
mov
std
xor
push
bswap
ja
test
test
jmp
pusha
in
repz
repnz
add
or
sbb
push
cld
lret
or
xor
ret
repz
mov
aad
cld
adc
dec
sar
ljmp
add
dec
mov
jmp
inc
inc
aas
sti
popf
dec
pushf
pusha
repz
cmp
daa
cmp
xchg
pushf
insl
mov
mov
loope
shrb
cld
sub
lea
sub
cmp
int3
push
jne
sub
fnstcw
shl
cmp
arpl
push
shr
cmpsl
nop
sbbl
scas
cmc
bound
xchg
rcl
out
pushf
jnp
add
lds
mov
xor
jge
sbb
inc
sbb
mov
scas
mov
sbb
out
adc
jge
stc
dec
imul
push
mov
mov
xor
pop
adc
add
add
jno
lcall
mov
les
dec
dec
out
out
incl
mov
or
pop
shll
call
ljmp
inc
mov
add
fists
push
mov
mov
lds
pop
adc
jl
xchg
sub
mov
lcall
movsb
pop
add
ret
and
sbb
push
popf
mov
in
repz
push
mov
rclb
sar
loope
imul
adc
pop
ret
test
aam
int3
data16
fwait
inc
sbb
cli
in
ljmp
mov
in
and
cltd
inc
lret
mov
jge
xchg
jnp
nop
leave
mov
push
in
push
repnz
jp
or
push
cltd
push
pop
inc
sbb
adc
rol
lret
cld
and
push
in
xchg
dec
jl
sub
dec
add
jge
das
dec
outsb
js
out
mov
lahf
mov
jno
addl
inc
insb
sbb
fs
les
add
fistpll
jp
jmp
data16
popa
xchg
inc
jecxz
in
inc
sbbl
push
sbb
inc
adc
dec
mov
adc
dec
pop
jne
or
adc
xlat
jg
addr16
inc
xor
pop
jg
cmpsb
mov
mov
sub
adc
mov
jo
fwait
cs
pop
nop
mov
xor
add
stos
push
enter
mov
xor
mov
mov
push
fwait
cmc
pop
pop
jle
setg
push
or
ret
inc
repz
jmp
movb
and
adc
mov
rcll
divb
xchg
imul
add
cli
jle
es
add
hlt
push
xor
jg
jecxz
adc
xor
lahf
jg
lods
jne
xchg
lret
in
in
iret
imul
inc
or
and
jo
mov
andl
or
dec
mov
imul
ja
adc
mov
xor
sub
aam
mov
xor
outsb
xchg
cld
jae
js
daa
dec
std
sbb
inc
add
xor
or
stos
out
sahf
and
cmp
pop
pop
mov
or
and
pop
sbb
loope
inc
movsb
das
mov
icebp
push
push
pop
shll
adc
lret
mov
nop
push
xchg
pop
mov
fxch
cmp
cmp
mov
dec
les
dec
add
shlb
mov
push
mov
cmpsb
aas
loop
jge
or
mov
sub
push
repnz
mov
dec
mov
push
cmp
jne
inc
cmp
jmp
loopne
scas
xchg
movsl
jecxz
test
and
push
mov
inc
and
mov
xchg
jle
jo
stc
push
jmp
pop
mov
es
sub
xor
imul
pop
in
int3
orl
mov
add
test
sbb
pusha
pop
rolb
repnz
inc
mov
pusha
xor
cld
dec
in
push
addl
xor
dec
clc
mov
cmp
push
mov
inc
xchg
or
cmp
push
inc
gs
enter
add
je
sbb
in
jns
sbb
fwait
cmp
sub
inc
xor
adc
pop
popf
jmp
push
arpl
cmp
stos
aas
cmpsl
jmp
inc
mov
inc
in
insl
inc
push
sbb
cmp
out
sbb
outsb
pop
cmp
insb
cltd
cmp
fs
jbe
lret
dec
cmp
ficomps
or
mov
les
clc
xlat
pop
sub
ret
or
dec
aaa
mov
xchg
out
popa
loopne
xor
int
es
mov
enter
rcll
jp
loopne
jnp
dec
jnp
cmp
into
out
fldl
sarl
xchg
inc
pop
loop
movsb
data16
idivb
pop
lret
cmc
outsb
xchg
outsb
sahf
dec
pop
add
push
movsl
movsl
push
leave
jb
xchg
aad
aaa
scas
sbb
xchg
push
adc
mov
movl
dec
push
inc
jmp
loop
xchg
mov
lcall
lea
mov
out
xor
inc
push
sub
push
xchg
js
and
insb
in
arpl
orb
sub
dec
jne
mov
push
mov
xor
add
ljmp
cld
sub
mov
pop
test
add
inc
mov
dec
outsl
into
pop
hlt
and
xor
inc
cmc
rsm
push
loope
adc
xchg
stos
sub
add
test
or
aaa
ljmp
dec
push
inc
lea
iret
ret
push
xchg
or
sub
aas
sbb
mov
jg
test
mov
hlt
in
inc
xchg
adc
mov
jo
sbb
icebp
int
repnz
in
mov
mov
int3
cmp
and
inc
push
cmc
and
jnp
jmp
push
dec
test
outsb
and
sbb
loop
xor
sub
xlat
out
pop
bound
sahf
cmpsb
lock
mov
push
add
popf
inc
insl
cmp
iret
rolb
addr16
fwait
mov
mov
and
into
js
inc
add
and
mov
mov
and
xor
lcall
ss
es
mov
outsl
or
pop
cmpsb
mov
xchg
stos
cmc
cmp
aam
xor
out
lods
enter
mov
and
push
dec
mov
pop
hlt
jae
dec
clc
fisttps
sub
scas
xor
xchg
sub
cmp
insl
hlt
arpl
xchg
lea
mov
sub
cs
fbstp
mov
adc
cs
sbb
jmp
sbb
sbb
jne
push
pop
adc
jnp
xor
cld
fwait
imul
jecxz
and
in
pop
xor
lea
or
cmc
lcall
sub
mov
aaa
lds
push
sub
dec
jp
cmp
sbb
push
inc
test
inc
xor
in
pushf
and
imul
test
adc
addr16
cmc
ss
hlt
cmp
xchg
imul
fs
push
mov
lods
imul
shl
jae
imul
adc
bound
shl
mov
xchg
push
mov
fstps
inc
push
call
pop
aaa
jl
fs
push
and
fstps
lods
adc
pop
push
cmp
cmp
mov
pop
adc
test
mov
lods
test
mov
push
inc
xor
jno
mov
stos
sbb
inc
popa
add
jle
jecxz
lods
cmpsl
push
xchg
jns
add
jbe
arpl
sti
cmpsl
xchg
add
mov
lds
bound
into
cmpsb
or
lret
bound
xor
pusha
mov
adc
inc
lods
rcl
shll
pop
mov
data16
xchg
xchg
fildl
aaa
sbb
xor
pop
mov
cmpb
xchg
mov
insb
adc
push
mov
mov
and
loope
pop
inc
pop
jns
lahf
and
dec
cmp
ficoms
mov
inc
jbe
cmp
xlat
xor
sti
jl,pn
popf
inc
clc
cld
xchg
sub
dec
sbb
loope
inc
jecxz
test
mov
gs
dec
push
nop
insb
jl
and
lret
in
fstpl
xchg
mov
xor
fbstp
test
and
cmp
mov
jge
cmp
pop
test
pop
ret
insb
and
adc
js
xchg
push
adc
popf
inc
movsb
pop
push
inc
pop
mov
leave
push
lea
ds
dec
or
mov
dec
ret
jb
inc
adc
mov
xchg
movsb
cmc
rorl
push
mov
std
mov
or
out
jbe
nop
fists
lret
shll
jg
sub
inc
jnp
mov
fsubr
test
jmp
sti
or
test
jmp
mov
cmp
imul
xchg
das
sti
lods
mov
cmp
rdpmc
dec
add
push
sti
jmp
aam
xchg
jae
fsubr
adc
stos
add
es
push
mov
jb
cltd
mov
ja
fstl
and
pop
push
mov
dec
rcl
dec
insb
leavew
jo
sub
add
test
rcll
pop
outsb
dec
shr
idivl
pushf
cli
xchg
dec
jg
mov
mov
cmpsl
pusha
shl
ja
mov
mov
fs
or
fdivr
add
jecxz
mov
and
jmp
sbb
enter
loopne
inc
fistpl
in
jne
jle
dec
lea
jg
and
sub
mov
sbb
lcall
dec
cli
pop
dec
pusha
mov
jmp
adc
pop
cmp
out
sub
add
cmpsb
mov
xchg
fcmovnb
mov
add
or
dec
fnsave
sub
repnz
fdivrs
mov
mov
pop
xchg
sbb
shlb
test
pop
frstor
sub
cli
inc
xchg
mov
test
dec
add
jg
loope
xor
test
test
sbbl
mov
daa
and
xchg
lods
iret
pop
fadds
adc
mov
adc
xor
mov
aam
pop
nop
and
add
adc
int
mov
inc
je
ljmp
subl
push
cmp
aad
in
cmp
into
mov
daa
flds
mov
inc
stos
lock
stos
call
inc
mov
jb
pop
and
add
daa
mov
pop
sbb
or
dec
mov
xor
xor
dec
cmp
lret
das
pop
xor
leave
mov
pusha
out
negb
aad
je
out
and
add
lret
fcoml
lret
fdivrs
sbb
push
add
adc
ds
repnz
dec
outsb
sub
je
jne
iret
mov
lods
add
stc
aam
popa
or
cmpsl
fsubrl
jecxz
or
cmp
lahf
call
mov
dec
loop
xchg
or
jge
dec
test
jo
repnz
orb
sti
xchg
push
imul
xor
push
pop
fcoms
test
push
dec
push
dec
mov
insb
leave
pop
bound
mov
pop
and
cmp
cmpsl
add
outsl
sub
sbb
adc
sub
imul
mov
sub
mov
push
jno
scas
jo
fnstsw
arpl
add
pop
or
clc
jb
push
jb
ss
ljmp
jp
mov
mov
push
jno
ror
fstps
movsl
jno
clc
jecxz
xchg
push
xchg
inc
adc
cli
fidivl
es
xchg
pushf
rcl
mov
dec
enter
add
adc
in
outsl
sahf
dec
mov
jmp
stc
movsb
pop
mov
stos
adc
mov
mov
mov
inc
lock
jecxz
scas
dec
sub
inc
iret
add
push
pop
sub
xchg
lods
stos
mov
cmp
mov
icebp
and
dec
cmp
les
mov
fildll
jnp
int3
mov
dec
test
push
cltd
sbb
out
pop
fninit
loop
xchg
cmp
lock
or
test
into
sub
xchg
cmp
scas
cmpsb
cmc
js
mov
fistpl
ljmp
pop
cs
fwait
lea
inc
pop
jge
cmp
lods
in
jge
and
insl
cmp
sarb
fstpl
mov
pop
or
inc
enter
push
jno
and
repz
mov
pop
sub
push
inc
mov
addr16
and
push
fnstenv
enter
jno
test
xorl
in
xlat
pop
ret
add
stc
pusha
add
idivl
hlt
out
xchg
cltd
push
and
or
incl
cmp
mov
cli
into
jbe
lcall
call
sub
aam
nop
lret
sti
jo
ret
xchg
insb
cmp
inc
pop
xor
sbb
loope
pop
aad
or
jp
testl
rorb
neg
xchg
sub
sbb
cwtl
aaa
or
jne
jecxz
jg
cmp
into
aaa
pop
neg
xchg
adc
adc
out
add
add
bound
in
pop
xchg
negb
and
xchg
mov
xchg
dec
add
cmpsb
popf
sbb
inc
fdivr
insl
and
in
mov
shlb
stos
pop
mov
sub
int
lds
fs
sub
into
xchg
fistpl
inc
shll
dec
test
push
xor
lahf
idivb
vminpd
iret
sbb
or
fstps
xchg
in
push
adc
sub
fsub
cmp
sahf
dec
dec
das
aad
mov
repz
insl
mov
popa
or
js
aas
mov
sub
or
daa
inc
and
imul
inc
push
ds
mov
movsl
cld
aam
loopne
loop
shrb
cmp
mov
dec
mov
and
insb
test
cltd
ja
stos
pushf
lds
and
xchg
sbb
cmc
in
push
xchg
add
xor
xchg
lret
std
sbb
shll
inc
add
xchg
jg
mov
fisttpl
add
inc
and
addl
jns
movsb
pop
lret
xchg
leave
xchg
inc
imul
stos
add
sub
shl
push
jb
pop
sti
test
fadd
ss
test
cltd
jmp
mov
andl
aaa
orb
out
data16
adc
adc
inc
add
cltd
sub
out
sarl
aam
sbb
in
fisttps
out
jl
mov
sub
xchg
cltd
out
sub
out
cmpsl
pop
fs
add
push
lock
inc
subb
rcrb
dec
xor
cmp
femms
sbb
ss
sbb
jo
loope
mov
xchg
shlb
xchg
push
cld
test
pusha
jecxz
mov
mov
inc
scas
cs
mov
xor
cmp
xor
xchg
out
sbb
cmp
push
sbb
aaa
pop
push
fisubrl
jae
dec
pop
adc
jns
in
sub
bound
ja
ss
dec
sahf
pushf
mov
pusha
pusha
xor
mov
stos
scas
pusha
leave
mov
inc
push
imul
fistpll
pop
loopne
pop
jne
lods
int
dec
cmp
mov
divl
push
test
shlb
xchg
mov
dec
mov
lods
ret
lds
cmp
mulb
adc
xor
mov
xor
mov
mov
adc
in
nop
daa
jge
mov
call
cmp
stos
popa
repz
add
sarb
mov
xchg
clc
leave
mov
shl
mov
inc
fbstp
sbb
xor
idivb
in
inc
pop
pop
add
adc
aaa
push
add
out
or
std
dec
fildl
jp
fmuls
rorl
sub
xchg
fnstsw
dec
sti
daa
mov
mov
popf
xor
loopne
into
pop
or
pusha
mov
movsl
aam
ret
mov
pushf
push
sbb
pop
jae
pusha
add
mov
inc
xchg
pusha
insl
stos
pop
jp
stc
push
or
xlat
adc
das
xchg
sub
test
mov
jb
jg
pushf
fcomip
test
popf
sub
lret
ja
stos
xor
cmp
sbbb
add
shrb
push
push
std
mov
scas
pop
das
in
mov
sbb
jbe
daa
xor
arpl
jae
xor
cmp
xlat
fs
and
movb
iret
jns
jo
hlt
ret
sbb
pop
push
inc
inc
imul
sub
fldt
je
sub
xchg
cmp
shll
cmpsl
ja
push
aad
sbb
dec
enter
mov
call
mov
out
mov
dec
test
cmp
fnstcw
push
in
in
mov
arpl
popf
xorl
fdiv
aam
inc
es
icebp
add
pop
lds
push
xor
xlat
sbb
gs
popf
bound
add
dec
xchg
jp
dec
in
mov
call
adc
in
mov
or
rol
push
imul
push
mov
sbb
cmp
adc
rcll
mov
rcrl
sub
xor
repz
mov
or
jp
aad
rcll
xchg
mov
stos
fcomps
pop
or
out
fs
cmpsl
and
iret
mov
out
fnstcw
pop
pusha
ret
xor
cmp
sub
xchg
cwtl
mov
stos
mov
ret
ret
pop
mov
add
adc
dec
test
incl
int3
mov
jnp
incb
mov
cld
push
cwtl
fdivrs
out
jge
lcall
jne
jne
sti
inc
pop
mov
out
jb
mov
insl
das
mov
add
push
push
dec
sbb
jmp
push
dec
mov
push
arpl
into
aaa
adc
dec
inc
pop
fbstp
int3
jecxz
les
sub
sub
push
lret
lods
xchg
pop
and
sarb
ficoml
sbb
xor
adc
lret
sbb
pop
push
push
lods
sbb
in
dec
sub
jmp
xchg
fs
pushf
and
cmp
pop
cs
lods
gs
rcrl
push
inc
lea
cmpsb
xchg
adc
test
dec
dec
fidivrl
push
ficomps
mov
fwait
scas
cld
sahf
mov
xchg
int
imul
in
cmp
cmpsl
push
call
push
fcom
aam
es
jnp
jge
push
outsb
jmp
xchg
dec
out
rol
rclb
fwait
and
xor
sub
inc
push
shl
ja
int3
xor
push
std
cli
lds
sbb
xchg
xchg
pop
movsb
mov
mov
gs
cmpsb
shr
lods
les
test
fstpl
inc
jae
or
lret
adc
aam
aaa
push
lods
movsl
pop
xor
insb
sbb
inc
imul
sbb
jecxz
jno
xchg
mov
fdiv
dec
sarb
add
and
loopne
frstor
push
mov
fs
pop
pusha
push
jb
mov
dec
sbb
mov
mov
and
pop
testl
ja
scas
outsl
int
add
jecxz
push
lret
push
test
add
xchg
mov
aas
repz
in
nop
repnz
ja
or
push
sbb
jg
out
and
mov
mov
lahf
repz
fwait
mov
pushf
data16
incb
out
pop
mov
jbe
add
in
ja
jl
push
int
leave
mov
in
add
add
inc
aad
ret
inc
jl
call
enter
aam
dec
jg
lret
ss
js
mov
jnp
orb
ret
mov
dec
lock
loope
xchg
sub
cmp
sbb
rcrb
jo
lret
adc
or
fcomps
dec
xchg
dec
lds
and
test
or
ss
movsb
mov
inc
mov
lahf
fnstsw
sbb
inc
adc
in
mov
mov
out
imul
aaa
loop
mov
xchg
insl
push
push
lret
arpl
pushf
getsec
mov
fldcw
lock
out
outsb
push
cmp
fidivrs
mov
notb
pop
test
mov
in
dec
outsb
mov
jns
imul
and
leave
push
movsl
sbb
fdivrl
sub
push
mov
jne
scas
push
rcrl
out
adc
dec
ret
lea
pop
cmp
ret
add
or
shll
je
xchg
cmpl
mov
xor
mov
jns
fcmovb
mov
jno
repz
jge
mov
lahf
enter
pop
dec
adc
mov
jbe
movsl
adc
not
outsl
mov
dec
add
sbb
cmpsb
sub
adc
scas
ret
pusha
das
inc
jle
movsl
insl
push
fsts
into
xlat
clc
incl
fists
orl
loopne
dec
ja
add
daa
and
daa
fs
lret
jnp
sub
ret
xchg
add
adc
fsubr
vpmaddwd
sub
out
int3
jbe
icebp
lret
mov
addr16
sbb
fsubrs
fs
push
rcr
es
cwtl
jp
adc
sbb
addr16
jo
lods
insl
lds
out
mov
mov
or
nop
and
push
je
dec
data16
xor
or
cmp
std
and
aas
fistl
mov
nop
pop
ja
outsb
inc
out
xchg
fwait
inc
and
int
mov
in
notb
jecxz
test
mov
push
lock
adc
outsl
nop
insl
xor
sbb
push
mov
ss
adc
in
lahf
add
push
push
pusha
out
rcll
scas
pop
fmuls
xor
es
push
movsl
jecxz
jnp
adc
push
lahf
test
jae
inc
nop
je
push
sbb
shr
inc
pop
dec
push
imul
daa
pop
add
loop
outsb
pop
sbb
xor
mov
jae
mov
dec
mov
jg
dec
push
jns
fwait
push
add
adc
xchg
int3
aam
jg
dec
movsb
inc
or
jmp
adc
les
xor
pop
add
out
xor
ss
mov
scas
iret
mov
inc
inc
push
fdivl
dec
jmp
sbb
imul
clc
mov
and
mov
and
in
adc
xor
mov
inc
jle
outsl
pop
fs
mov
insl
in
jne
jae
call
jle
inc
sbb
jmp
ds
pop
add
into
sti
lcall
ss
inc
cmp
pushf
in
jmp
inc
lret
xchg
call
cmp
dec
je
push
pop
xchg
push
jmp
das
rolb
cwtl
adc
dec
repz
push
push
out
xchg
popf
das
popa
ret
test
xchg
sub
fwait
jae
out
movsb
cmp
pop
xchg
adc
sbb
subl
sbb
cs
addr16
mov
sti
cmp
inc
pop
mov
mov
sub
repnz
sti
xchg
rorb
pop
jb
fs
pop
xchg
outsl
mov
lret
shrl
jne
and
pusha
popa
xchg
dec
mov
jmp
sub
mov
xchg
fistps
push
inc
and
push
sbb
mov
scas
cmp
cltd
mov
dec
push
dec
xor
bound
pop
es
shr
jp
mov
mov
popf
cvtdq2ps
fisubl
stc
clc
outsb
lret
push
insb
sbb
je
popa
pop
icebp
inc
and
cs
and
add
dec
shlb
arpl
jmp
and
and
sbb
shlb
bound
mov
pop
sbb
insl
jge
mov
lcall
sbb
roll
test
dec
outsb
push
mulb
xchg
aad
add
mov
dec
lea
cwtl
mov
lret
adcb
add
arpl
stos
cwtl
mov
aam
loopne
xchg
imul
jp
scas
lods
sbb
jmp
mov
mov
aam
lods
pop
add
scas
std
jae
xor
sub
outsl
cmp
lds
lea
ds
push
std
mov
movsb
rolb
lret
sbb
test
mov
inc
dec
mov
mov
push
cmpsl
outsb
xchg
mov
mov
push
rol
es
and
pop
adc
fmuls
mov
sbb
mov
ret
add
add
add
idivl
mov
cmp
test
sub
aad
fwait
jae
std
sbb
ffree
lret
inc
hlt
push
gs
jae
sti
mov
xor
sbb
push
ss
pusha
mov
mov
scas
lea
aaa
cltd
pop
int
jge
xchg
mov
fpatan
lods
add
test
xchg
pop
gs
push
mov
rcrl
or
scas
and
je
cmpsl
idivl
es
lret
ss
xchg
pop
btc
adc
pop
jb
pushf
sti
sub
cmpsl
aas
fwait
mov
int
fsubrp
dec
jbe
and
cmp
add
stos
xchg
jl
cli
dec
ret
clc
push
cli
ror
fucomp
jle
cmp
push
inc
push
mov
lahf
jne
paddw
clc
fwait
test
pop
test
in
sbb
and
fdivrs
vcvttss2si
pop
mov
ljmp
push
cld
push
add
ds
js
and
cmp
fisttps
stos
fsubrs
sarl
inc
dec
adc
xchg
mov
icebp
xor
sub
pop
xchg
lea
out
xchg
sbb
or
jns
repz
mov
sbb
xor
insb
sub
mov
rorb
into
clc
lahf
xor
pop
dec
lods
adc
mov
outsl
mov
inc
lock
or
aad
mov
ja
mov
xor
adc
mov
mov
iret
dec
imul
cmpl
xor
push
sahf
push
push
fstps
aad
jbe
pop
pusha
rcll
imul
xchg
xorb
pop
add
sub
jne
cmp
xchg
stos
mov
nop
or
repnz
or
or
loop
and
lret
daa
pop
les
je
and
sti
inc
inc
push
stos
scas
inc
fwait
addr16
mov
mov
fimuls
in
add
in
sub
lods
or
xor
ja
in
int
add
data16
add
filds
ret
loopne
les
sbb
mov
fildll
outsl
int
das
jb
stos
rcll
lea
jmp
test
cli
ret
push
stc
imulb
inc
fxam
cld
popa
jmp
dec
jg
repz
lods
jns
out
adc
mov
pusha
ror
push
in
loop
test
popf
int
int
loopne
and
push
mov
mov
mov
or
push
lea
sahf
jg
push
or
jb
inc
pop
mov
push
jge
and
daa
cmc
add
inc
mov
lds
adc
sub
jne
lea
pop
mov
inc
adc
mov
jns
loop
add
fadds
sbb
inc
mov
or
cmc
out
mov
je
add
or
fistps
xor
lods
pushw
sub
cmp
jnp
pushf
fisubs
shlb
fdivrs
cmp
es
dec
insb
bound
or
nop
in
scas
xor
int3
pop
cltd
cmpsb
adc
insw
mov
jns
mov
and
xchg
fs
push
dec
shll
aaa
lcall
js
leave
in
mov
loope
sub
out
je
mov
inc
sub
test
and
lret
mulb
mov
mov
cmpsb
pop
enter
xchg
xchg
mov
push
and
ss
out
add
xchg
ja
out
jl
add
stc
lock
xorl
inc
lahf
lods
loopew
mov
mov
push
bound
dec
cltd
into
jecxz
idiv
adc
adc
insl
push
rcrb
push
mov
cld
cmpsb
sbb
mov
and
gs
or
dec
std
pushf
jno
fcomip
mov
scas
imul
mov
sbb
push
inc
popf
or
sbb
sbb
dec
popl
test
push
out
add
lea
xlat
les
mov
xchg
mov
addb
aam
adc
or
mulb
push
sbb
inc
mov
out
test
and
shlb
sub
aas
sbb
lds
lret
mov
mov
push
and
stos
add
lcall
in
sbbl
jg
dec
lock
adc
sub
and
mov
and
cmp
movsl
cmpsl
mov
cmp
mov
inc
sub
cli
push
mov
and
xor
cwtl
xchg
inc
cmp
jb
pop
iret
lods
je
cmp
jns
call
js
gs
sub
fneni(8087
inc
mov
sub
pushf
add
fcompl
lods
jl
data16
cmp
dec
cmc
aas
xorl
vcvtps2dq
xchg
repz
add
mov
jae
and
inc
dec
push
int3
bts
movsb
cmp
or
movsb
cltd
jmp
fstpl
pop
lods
jo
jp
inc
les
in
icebp
fucomip
ret
sub
jno
or
sub
shll
fistl
test
or
icebp
mov
cmpsl
decl
test
jae
ficompl
pushf
inc
mov
jge
lock
mov
fwait
movsb
fwait
sub
mov
sub
mov
or
fimuls
ja
sub
hlt
stos
xchg
mov
les
add
mov
addl
test
loop
pop
fwait
cmp
mov
sbbl
mov
push
pushf
in
dec
inc
mov
data16
popa
sbb
out
sub
iret
arpl
cmp
xlat
or
cwtl
aad
in
sbb
mov
mov
xchg
enter
jns
hlt
cmp
int3
movsb
inc
inc
clc
sub
push
ror
imul
roll
xor
adc
scas
lret
jno
out
stc
cmp
leave
jmp
jae
sub
fs
mov
into
aas
inc
stos
sub
fcomip
lods
test
mov
inc
lods
mov
jmp
repnz
mov
ds
mov
sbb
add
mov
jbe
add
call
mov
outsl
inc
and
xchg
jp
dec
out
imul
fs
pextrw
aam
and
mov
pop
xor
cmp
popf
outsb
ss
aam
cmp
sub
cmp
movsl
enter
push
cld
cmp
push
add
sub
push
xor
insb
xor
ret
jns
xor
cltd
mov
mov
xchg
push
pop
imul
imul
pop
cmpsb
cmp
out
jo
sub
push
in
push
push
sbb
cmp
xor
test
sub
nop
clc
ljmp
jo
scas
xchg
xlat
push
stc
pop
jns
sarl
dec
add
mov
lods
stos
sub
scas
jns
mov
cli
sub
or
repz
int
inc
enter
add
mov
mov
push
xlat
loope
int3
ljmp
adc
xchg
add
push
out
pop
jb
emms
icebp
xor
jae
mov
add
leave
pusha
popf
jmp
mov
pop
xchg
std
adc
mov
xchg
mov
pop
pop
insb
cltd
xor
mov
rorb
inc
mov
mov
nop
orb
hlt
mov
daa
leave
lods
stos
fcompl
jge
and
das
ds
push
inc
idivb
ficoms
mov
daa
jge
dec
xor
xor
testb
iret
sbb
cmpsl
jecxz
sub
sahf
popa
dec
cmp
xor
insb
xlat
sub
mov
mov
popa
mov
mov
out
jbe
xor
inc
std
adc
fisubrs
or
outsl
xor
movsb
mov
loop
scas
sbb
sbb
cwtl
add
dec
jno
cmp
jo
cltd
mov
popl
scas
or
sbb
mov
scas
push
xor
adc
mov
mov
cmp
bound
out
test
aad
ret
in
std
add
fwait
mov
jg
jg
sbb
lods
clc
pop
lahf
dec
mov
in
add
insl
jg
sub
sub
xchg
bswap
sub
cli
pop
in
outsb
hlt
xchg
push
xchg
cwtl
popl
ficoml
shlb
dec
xor
loopne,pt
cmp
loop
stc
adc
jp
test
insl
or
gs
push
ror
mov
and
test
xor
rcr
jno
xor
mov
push
fldl
cmpsl
pusha
push
jl
insl
mov
sub
hlt
cmc
pop
mov
bound
daa
sti
in
ret
inc
mov
mov
lea
xchg
adc
decl
mov
mov
and
mov
les
mov
add
pop
xor
add
mov
and
jmp
inc
cwtl
test
leave
mov
push
test
fld
sbbb
test
ficoms
adc
dec
jnp
out
ja
loop
roll
fdiv
loope
pop
and
mov
test
aaa
add
test
mov
pop
or
xor
add
or
mov
sbb
test
out
jle
sub
push
or
add
xchg
mov
or
bound
push
or
sub
mov
test
xor
les
out
push
inc
nop
in
pop
enter
and
xchg
mov
sbb
insl
cmpsl
pop
jb
in
imul
cmp
loopne
or
rorl
sbb
sbb
adc
or
gs
cmp
scas
test
sub
dec
or
push
jg
in
clc
sbb
insb
int3
mov
test
jle
aad
sahf
dec
jg
aad
sti
xchg
test
jbe
adc
inc
push
loopne
dec
fsubrs
cmc
xor
inc
dec
push
ss
jno
mov
insl
pop
add
pop
or
xchg
das
jle
sub
rcrl
test
in
mov
cmp
je
fcoms
mov
in
push
and
mov
jae
jge
cli
cli
test
or
and
sti
lahf
rcll
pop
mov
loope
popf
incl
lcall
push
xchg
shll
pop
nop
jnp
shlb
sbb
movsl
js
mov
das
dec
test
sbb
jmp
xchg
push
mov
xor
gs
out
and
adc
outsl
into
arpl
mov
outsb
addb
cmp
fisubrs
mov
fs
cmp
xor
int3
pop
or
fdivl
dec
inc
shlb
mov
sub
jae
lret
push
lret
mov
add
xchg
pop
orb
xchg
clc
xchg
mov
mov
hlt
scas
fs
nop
push
shl
inc
mov
ja
loopne
or
fst
mov
fdivrs
inc
mov
jg
gs
icebp
dec
push
sarb
xor
push
pop
gs
cmp
cmpsb
mov
add
popa
aam
addr16
shlb
sub
inc
mov
out
mov
cmp
in
movsb
xchg
loop
stos
xlat
mov
adc
pop
sub
shlb
dec
or
mov
insl
jge
into
adc
mov
sbb
in
fildll
cld
dec
rclb
push
cmp
das
push
lds
test
aam
in
xchg
mov
adc
aam
mov
push
aad
or
sbb
ret
push
loopne
push
or
push
mov
xchg
jecxz
lahf
dec
scas
out
aad
or
mov
sbb
pop
stos
jbe
sbb
jae
ja
cmc
inc
nop
ja
sbb
je
mov
xchg
or
pop
mov
adc
push
icebp
dec
mov
sub
mov
out
gs
add
out
cmp
in
fstpt
ret
leave
in
insb
movsb
push
mov
push
scas
pop
lods
ficoms
mov
xchg
mov
lahf
fwait
shl
jg
xchg
imul
sbb
lret
add
rorl
popa
add
pop
inc
inc
mov
xchg
mov
mov
mov
movsl
pop
pop
jne
ja
lock
divl
mov
fmull
cs
in
popl
cmpsl
mov
out
cmpsl
in
sar
mov
pusha
fisubrs
shll
add
jl
sbb
insl
test
sub
ja
into
mov
xor
mov
xlat
xor
or
adc
adc
and
out
jp
movq
mov
jecxz
loope
mov
sbb
or
or
ljmp
les
mov
adc
jns
leave
push
inc
dec
pop
xlat
or
sub
ss
mov
pop
pop
sbb
adc
jns
mov
into
lret
dec
ret
sbb
lds
sahf
enter
loop
dec
cmpsb
xorb
out
test
ja
int3
inc
iret
dec
ljmp
dec
les
mov
add
sub
adcb
in
iret
clc
fcoms
aam
lcall
stos
rcr
mov
xlat
cmp
arpl
out
movsl
ret
addr16
xchg
lret
sbb
addr16
jno
sub
hlt
lcall
pop
mov
iret
add
xchg
mov
jle
adc
movb
pop
fsubrp
ficoms
sbbb
call
cmp
ds
lcall
int3
jp
xchg
cmpsl
and
je
dec
sahf
addl
sbb
lret
outsl
mov
jmp
or
push
fs
pop
mov
cmpsl
clc
ljmp
mov
mov
sbb
comiss
cs
hlt
pop
test
movsb
ss
pop
neg
ficompl
push
fstps
data16
ja
pop
std
divb
lock
push
push
adc
cwtl
sub
loop
imul
fsubs
sub
xchg
inc
fwait
mov
std
outsl
cmp
sbb
lret
xchg
push
outsb
out
test
xor
push
mov
in
comiss
push
sub
xor
cmpps
in
stos
sbb
inc
icebp
movsl
xchg
cmpsl
and
adc
mov
cltd
shrb
fisubl
bound
mov
je
cld
shl
push
adc
fcoms
lock
cmp
ljmp
mov
mov
xor
loop
xchg
addr16
or
jae
jecxz
mov
fcmovu
mov
stos
imul
mov
cld
and
ljmp
aas
daa
jae
outsl
out
and
adc
push
sub
and
sbb
pop
push
or
enter
sbb
cmp
add
jle
mov
test
and
iret
add
test
aaa
pop
adc
pop
sub
push
repnz
rcl
int3
dec
pop
orl
cmpb
pop
add
mov
fcomps
push
sbb
pop
dec
pop
xchg
insl
fists
in
jne
ds
xor
xchg
adc
xor
mov
daa
int3
scas
and
test
pop
je
pop
sub
leave
and
add
jbe
dec
js
push
push
push
add
jmp
xchg
je
adc
jle
sysenter
nop
call
pusha
sahf
rorl
hlt
cmpsb
fldt
dec
clc
add
enter
xor
jle
cmp
movsb
pop
faddl
add
cltd
imul
xchg
fiaddl
lcall
jo
fdivs
and
mov
lods
or
scas
sbb
and
test
ja
cmp
fs
add
sbb
dec
mov
xchg
cmpsl
ljmp
inc
bound
xor
cmc
js
push
xchg
pusha
xor
test
and
aas
add
cmpb
invd
loopne
insl
push
fdivrs
push
pop
test
jbe
lahf
aas
sub
maskmovq
divl
es
inc
ret
test
bound
in
xchg
dec
cld
adc
jno
daa
lahf
cwtl
or
mov
cmp
jne
pop
mov
push
cmc
pop
sub
pop
and
aaa
ret
in
loope
cltd
scas
out
inc
jp
in
cmp
adc
sub
jae
pop
push
loope
push
imul
mov
mov
inc
sahf
jno
xchg
adc
ss
sub
jne
sub
movsb
inc
jle
add
lret
add
lock
sbb
mul
repz
pop
xchg
dec
push
lds
imul
cmp
fstpl
outsl
jae
lds
imul
cmp
inc
sub
fmull
jns
int
ret
sarl
repz
imul
and
cli
out
mov
push
xchg
inc
mov
sub
mov
das
stos
add
loope
inc
xchg
mov
in
out
sbb
push
dec
push
mov
inc
lods
jbe
jo
in
jp
sbb
sub
mov
dec
push
push
adc
cli
xchg
fbstp
dec
addr16
data16
or
and
stc
dec
push
les
les
sbb
xchg
push
pop
cmpb
idivl
mov
cmc
sub
pop
pop
in
pop
adc
xchg
sbb
inc
mov
pop
pop
push
ror
jge
xchg
sbb
and
cmp
icebp
das
jmp
jg
sub
ror
sbb
outsb
add
mull
sbbl
xor
sbb
xchg
mov
rcr
lret
push
push
rcll
and
enter
pop
jecxz
in
jae
mov
fwait
pop
mov
or
add
or
dec
flds
in
outsl
jl
cld
mov
push
shrb
lods
xchg
push
cli
arpl
jg
xchg
pop
leave
lods
lods
xor
xor
shll
mov
xor
sbb
adc
sbb
mov
cmove
mov
ss
and
lahf
jecxz
cltd
test
test
sbb
pop
mov
ficoml
xor
outsb
cmp
movsb
adc
mov
adc
xchg
push
xchg
jae
xor
push
mov
adc
pop
xor
lods
mov
xorb
out
andw
fsubs
push
aam
data16
lods
cmp
lret
imul
xor
push
or
and
fwait
cld
adc
repz
mov
cmp
cmp
data16
mov
clc
mov
test
dec
dec
leave
mov
sahf
out
iret
xor
sub
adc
insl
add
notl
adc
out
adc
aam
pushf
adc
push
sbb
mov
mov
sub
pop
cmp
xchg
sub
fildll
int
aad
xchg
jmp
cmp
mov
stos
dec
cmp
aam
xchg
mov
adc
push
test
pop
sti
je
xchg
lods
pop
into
ret
out
cltd
push
mov
mov
aam
in
cmpsb
in
clc
bound
in
add
std
inc
les
in
inc
int3
arpl
js
add
sub
mov
adc
xor
xor
pusha
jae
ret
sub
jnp
fsubl
pop
jo
mov
aaa
aaa
sbb
fwait
sbb
sti
jnp
test
movsl
out
mov
in
loop
insb
movsb
cmp
inc
scas
arpl
lods
and
cmp
or
aas
or
in
xchg
loop
dec
test
sbb
shll
sbb
das
xchg
pushf
cld
imul
and
roll
mov
fcom
pop
in
push
jl
inc
adc
outsb
xor
outsb
lret
test
pop
push
xor
add
stc
cmp
fucomip
push
add
push
mov
adc
fcmovnbe
mov
ja
stos
fidivs
mov
lock
adc
int
sbb
mov
leave
bound
jmp
or
icebp
add
leave
setle
sub
ret
in
pop
aaa
movsl
orb
movsl
aad
leave
mov
js
add
int3
sarb
das
movsb
rorb
fwait
xor
cmp
inc
mov
int
sbb
pop
mov
xchg
fstl
mov
pop
mov
jo
jmp
test
test
shll
mov
js
mov
fbstp
insl
jb,pt
sub
cmp
cmc
cmp
adc
push
insl
ljmp
inc
xor
jecxz
jle
jae
std
scas
jle
cmp
nop
cwtl
ja
out
add
fsubl
adc
add
mov
dec
inc
fdivrs
icebp
testb
sbb
stos
call
add
sahf
dec
fisubrl
fcmovbe
jge
mov
lahf
cs
fwait
test
inc
cmp
mov
jp
in
sbb
xchg
push
addb
xor
cmp
cli
ffreep
inc
jmp
shlb
inc
fists
adc
imul
lret
outsb
pop
mov
mov
out
inc
xchg
pop
shrl
lds
fs
mov
adc
fdivr
dec
mov
sub
adc
aam
in
mov
jae
adc
or
dec
ret
out
out
mov
clc
cmp
xor
mov
test
outsb
lahf
pusha
pop
mov
xchg
inc
push
push
or
push
testl
inc
adc
popa
sub
mov
les
arpl
lahf
mov
out
add
push
mov
dec
repz
loop
loope
cwtl
je
imul
dec
test
icebp
push
push
daa
in
mov
jmp
aaa
lcall
pop
aam
pushl
or
daa
out
dec
jmp
fnstcw
insl
shrb
sti
icebp
mov
or
fwait
out
fcompl
mov
je
pop
dec
xor
loop
scas
mov
dec
loope
lock
mov
ror
outsl
jb
rorl
jo
pop
lret
mov
outsl
mov
subl
lcall
or
cmp
mov
fnstenv
add
jmp
pop
out
xchg
fsubs
cld
xor
sarb
stos
scas
sahf
pop
push
add
test
mov
pushf
icebp
inc
lock
cli
cmp
xchg
sub
pop
inc
and
cmp
sbb
sub
inc
jmp
dec
inc
outsb
inc
sbb
loopne
inc
pushf
pop
xchg
fcompl
push
daa
xor
iret
adc
sub
lds
jns
add
or
lcall
cmp
std
sub
jl
daa
dec
rolb
lret
push
cmpsl
push
jmp
xchg
lea
aaa
hlt
int
xor
inc
jo
rorb
dec
pushf
leave
addr16
int3
mov
in
push
cli
xorl
adc
rclb
arpl
popa
sub
insb
shrb
cli
dec
inc
out
inc
push
nop
dec
data16
das
push
ljmp
dec
jo
or
pop
aam
ret
jb
aaa
jbe
add
adc
adc
pop
test
dec
cmpsl
cmpsb
mov
pop
dec
sub
rolb
in
pop
fcomi
dec
test
aaa
lods
jle
mov
test
xor
loope
push
in
mov
addr16
dec
or
sub
cmp
mov
xor
mov
out
lcall
gs
mov
daa
add
mulb
test
out
sub
mov
adc
cmpsb
push
lds
jns
adc
and
aam
loope
aam
das
aam
pop
xchg
push
adc
xchg
jns
aam
mov
in
mov
dec
aas
mov
int3
jg
rcr
xchg
mov
aas
add
mov
jo
decb
xor
cld
pop
movsl
imul
xor
outsl
mov
data16
mov
hlt
lahf
dec
xchg
sahf
test
mov
cwtl
rcrb
xchg
sub
xor
mov
gs
movsl
sub
jg
cwtl
xor
int
jg
mov
sti
jne
and
shll
dec
jnp
adc
inc
jmp
call
xor
dec
sub
xchg
sbb
fdivrs
mov
adc
fwait
inc
mov
and
ret
jp
xor
into
push
xchg
mov
push
pop
je
inc
std
dec
mov
xchg
cmp
leave
loope
scas
jbe
push
lods
cmpsl
out
fdivl
ja
xor
sbb
dec
sub
jae
icebp
andb
push
and
setae
cmpsl
jp
cmp
mov
push
pop
dec
out
or
lahf
daa
or
jbe
push
jecxz
test
add
dec
xchg
pop
dec
fisttps
lcall
insb
jae
insl
lods
adc
push
sub
stc
pop
adc
in
in
inc
stc
lds
sub
movsl
fstpt
out
pop
mov
jmp
iret
mov
fldcw
pop
fs
dec
sub
adc
mov
sub
cmpsb
rorl
pop
sar
sti
addl
inc
std
push
inc
es
scas
pop
in
cmpb
popa
adc
icebp
lcall
cmpl
roll
outsb
jnp
jp
add
sbb
pop
xor
fmul
sbb
xchg
idivl
iret
icebp
inc
test
test
pop
fxch
push
pop
addr16
dec
mov
dec
dec
dec
xor
shr
dec
scas
or
xor
int
addr16
pushf
inc
xor
in
repz
fcomi
popf
sbbl
mov
ret
push
xchg
mull
xchg
push
insl
ret
cmp
scas
loopne
imul
divb
mov
aaa
aad
sti
inc
sub
iret
scas
stos
sarl
cmp
das
cmp
test
shrl
out
test
sub
fidivl
jmp
idivl
loop
arpl
inc
fmuls
dec
icebp
add
jno
jno
or
cmp
mov
imulb
dec
fldcw
mov
mov
pop
sub
aad
and
xchg
fidivrs
ret
push
cmc
fiadds
push
jbe
filds
jo
sub
dec
scas
xchg
das
mov
repz
enter
stos
jmp
mov
mov
lahf
repnz
lret
popa
mov
mov
lret
test
lahf
mov
bound
push
js
mov
dec
push
jl
pop
sar
movb
jnp
ds
arpl
gs
repz
add
jbe
mov
insb
pop
xor
dec
sub
outsl
dec
pop
mov
xlat
ud2
or
xchg
jns
outsl
roll
negb
add
je
popw
arpl
add
add
jno
dec
and
lock
loopne
jne
outsl
aaa
std
pop
sti
mov
into
outsb
hlt
mov
mov
loop
mov
pop
fwait
mov
andb
jg
mov
xorl
lds
jnp
mov
adc
xchg
daa
lret
push
adc
xchg
inc
int
mov
lods
dec
and
mov
mov
mov
loopne
es
push
stos
fdivrs
into
test
ret
jle
sti
clc
mov
mov
fcoml
les
adc
rolb
test
movsb
insl
es
in
push
cmpsl
sub
enter
leave
fwait
jo
xchg
add
jae
stos
inc
pop
mov
cld
sub
mov
xchg
addr16
jg
add
add
xchg
add
xchg
dec
fidivrs
rclb
cli
daa
dec
test
sub
out
fs
icebp
repz
ss
or
mov
cs
ds
iret
cltd
pop
in
adc
xor
xchg
lds
add
xor
inc
adc
call
pop
test
mov
mov
int3
push
lret
ret
fmull
push
jb
rorb
stos
popa
adc
inc
cmc
pushf
es
dec
and
scas
stos
ds
test
aas
mov
sub
pop
adc
mov
pop
or
pop
dec
int
xchg
out
ds
test
loopne
sbb
imul
fnstcw
orl
lcall
mov
sub
mov
add
lret
mov
ljmp
xlat
shl
sub
int3
out
sbb
xor
pop
mov
es
out
and
sub
adc
add
rclb
clc
call
shrl
mov
gs
je
das
mov
fsubrl
ficoml
rolb
mov
loop
in
jmp
xor
push
dec
push
sti
sbb
push
add
fmul
mov
lcall
inc
mov
imul
mov
in
dec
cmpsb
jle
insb
cmp
jno
push
mov
pushl
dec
imul
xchg
xchg
and
add
je
cli
cmpsb
idivl
push
push
divb
add
inc
popf
sarl
adc
mov
dec
loopne
inc
or
mov
pop
push
jp
or
mov
push
mov
pop
divl
dec
imul
dec
xchg
inc
rorl
cmpsb
push
ret
nop
adc
test
movsl
scas
test
addr16
mov
jg
enter
jbe
ficoml
cmc
clc
aad
iret
adc
jb
outsb
sbbl
mov
loop
adc
js
shrl
stc
sub
mov
addr16
push
insl
pop
push
and
cli
or
xchg
ret
inc
ret
lods
dec
mov
cs
mov
sbb
lcall
aad
dec
pop
ja
rclb
aad
dec
sbb
js
jno
sbb
daa
adc
cli
mov
sbb
and
jns
je
jno
test
lods
or
mov
add
jo
pop
sub
push
mov
je
add
mov
scas
ja
mov
sub
sub
jmp
icebp
mov
or
stc
jp
mov
jb
ja
sbb
inc
mov
mov
jno
pop
ret
shlb
cmp
stos
add
pop
xor
jnp
mov
push
jg
out
xchg
push
lret
or
xchg
in
pop
jmp
jae
push
es
cmp
mov
lock
mov
cmp
xchg
das
inc
mov
movsb
pop
xchg
jbe
add
loop
sub
jb
mov
dec
add
lods
pop
jo
xchg
popa
outsl
xchg
push
jae
or
cmc
sub
je
and
xor
stos
int3
or
or
and
fwait
loop
xchg
repz
mov
outsb
int3
mov
xor
lods
and
xchg
aaa
jns
xchg
aas
pushl
push
cs
stos
fxch
dec
arpl
or
js
pusha
xchg
pop
xchg
stc
mull
stos
les
out
mov
loopne
sbb
hlt
lea
ret
cli
dec
repz
jne
sbbb
add
fildl
jne
pop
cltd
insb
test
jle
pop
lock
dec
sub
pop
jo
leave
jp
les
addr16
jmp
fcmovbe
pop
inc
das
adc
int
pop
jmp
mov
std
les
sbb
repz
and
arpl
jecxz
mov
ror
enter
sbb
lds
add
push
ja
clc
negl
cmpsb
testb
scas
adc
jecxz
call
subl
nop
sbb
mov
xor
je
mov
repnz
lcall
xchg
mov
test
fsubs
jp
and
je
pop
jecxz
hlt
mov
mov
pop
call
sbb
js
jl
or
into
adc
aad
lahf
aad
addr16
adcl
paddw
cmp
out
mov
xchg
imul
mov
xchg
sti
iret
mov
xor
ja
sbb
test
xchg
sub
mov
int
or
int
dec
inc
scas
pop
mov
aas
pusha
popf
or
shll
xchg
sub
das
dec
lahf
ds
mov
adc
pop
lret
dec
stos
mov
dec
loop
inc
cwtl
jnp
xlat
pop
and
dec
and
or
aas
divb
push
adc
movsb
icebp
unpcklps
add
xchg
xchg
sahf
xchg
sbb
fisubs
push
mov
cltd
push
and
and
clc
fdivr
gs
inc
in
push
cld
mov
pop
notl
push
dec
jo
and
mov
push
bswap
dec
inc
xor
pop
lods
rep
mov
xchg
mov
dec
repz
popa
in
cmp
shll
push
sub
or
mov
add
inc
and
nop
and
fistpl
push
push
aas
dec
mov
lock
rcr
xchg
add
outsb
cmpsb
adc
ficoms
adc
sbb
mov
rclb
sbb
and
ja
and
out
or
push
fsubrs
and
mov
or
adc
or
push
xor
jecxz
lcall
lods
mov
xchg
daa
popa
aad
pop
pop
pop
decl
cmpsb
nop
icebp
fstpt
push
mov
stc
and
xchg
mov
addr16
int3
dec
sahf
inc
cmpl
and
push
mov
sub
and
mov
test
cmc
inc
add
icebp
inc
stos
gs
cwtl
test
fimull
push
mov
add
lret
and
es
fnclex
pop
gs
or
push
les
dec
add
mov
dec
insb
xlat
sbb
repz
and
repz
xor
int
push
pop
add
sbb
leave
fldt
sbbb
pop
icebp
add
xchg
and
dec
adc
fwait
pop
cmp
or
outsl
loop
and
xchg
fisttpll
cli
es
push
popl
orl
rclb
mov
pushf
sub
or
xchg
pop
sbb
xor
cmc
push
fstps
xchg
outsb
in
aam
xrelease
cmp
push
fmull
test
cmp
inc
mov
out
mov
lods
out
out
pop
fistpl
fdivr
mov
cwtl
jg
jbe
imul
adc
jle
pop
cs
cmp
gs
mov
clc
loop
into
mov
daa
mov
imul
xchg
mov
mov
xchg
mov
in
movsl
jns
lods
sbb
ja
stos
jo
jg
xchg
stos
out
dec
out
jns
sti
xorb
mov
rclb
hlt
push
push
xor
push
inc
dec
cmp
mov
ret
cld
xor
fs
stc
push
icebp
test
fs
mov
lcall
cmpsl
movsl
shrl
inc
inc
sbb
push
cmovs
mov
aaa
fwait
xchg
xor
sbb
cwtl
out
adc
flds
pop
je
inc
pop
or
cmpsb
xchg
mov
pop
cmp
leave
mov
jb
loop
mov
scas
inc
iret
rolb
jo
rcrl
pop
je
mov
lock
mov
or
lret
fwait
outsl
xchg
push
data16
dec
pop
mov
fldt
xor
sarb
jecxz
or
call
pop
js
cmpl
mov
in
es
js
jge
jns
mov
mov
mov
rclb
insl
inc
jns
xor
js
sarb
adc
testl
addr16
cmp
mov
adc
bnd
and
dec
sti
sti
inc
mov
lcall
jns
lods
push
pop
mov
loop
rol
jmp
shll
and
lea
adc
mov
pop
dec
mov
hlt
test
mov
push
lahf
pop
pop
and
mov
inc
cmp
enter
pop
dec
test
adc
pop
movsl
add
movsb
mov
inc
add
and
jne
pop
nop
ficoml
mov
cs
adcl
test
mov
and
dec
xchg
xor
and
or
pop
rorl
adc
xchg
fdivp
xor
pusha
or
lret
xchg
xor
xor
push
divb
movsb
das
or
push
in
adc
lret
in
sbb
outsl
fstpl
lds
add
xor
jmp
rorb
mov
repnz
les
xor
lods
add
test
daa
mov
push
gs
inc
push
or
mov
push
xchg
jbe
std
nop
in
sarl
cmp
shr
mov
pop
push
mov
push
test
mov
xchg
mov
sub
pushf
sub
adc
lahf
sarb
cmp
inc
xor
push
xor
sti
inc
test
cmp
stos
sbb
and
xchg
xor
popa
shl
adc
std
js
fists
lock
in
jno
mov
push
push
mov
mov
pop
add
cmpb
arpl
sahf
fstpl
lock
inc
sub
ret
add
mov
ljmp
add
mov
fsubl
or
icebp
push
jbe
insl
jns
rorb
ss
repz
xor
xchg
fstl
in
adc
push
js
sarl
scas
xorl
sub
jb
pop
in
hlt
hlt
dec
je
mov
add
cmpsb
mov
jg
inc
in
lds
jo
int
pop
cmp
adc
cwtl
test
cmp
mov
xchg
vmovlpd
mov
movsb
and
inc
shlb
loopne
or
mov
in
adc
push
sbb
inc
inc
xlat
or
xlat
xor
fs
in
popf
adcb
imul
mov
xchg
mov
ss
mov
es
enter
jecxz
jmp
mov
leave
pop
pushf
push
popf
mov
mov
fmull
and
cmp
pop
push
lcall
mov
mov
je,pt
sub
movsl
mov
addr16
sub
push
testl
sub
inc
dec
std
mov
rcrl
xchg
sbb
or
call
bound
push
daa
cmp
lods
lds
jae
push
sub
adc
xor
stos
stos
shrl
sub
and
cmp
hlt
push
cli
sub
lahf
push
xor
inc
js
scas
fidivrs
xchg
rorl
sub
add
jb
lea
adc
lahf
fs
xor
xrelease
mov
loop
and
dec
add
add
leave
loop
adc
push
enter
enter
mov
arpl
jge
push
sub
push
add
dec
pop
cld
jl
call
xor
outsb
les
dec
jae
cvtps2pd
adc
ss
cmpsl
fsubs
ss
in
push
sbb
outsb
ja
fwait
shll
mov
scas
push
jp
lea
pop
lock
sub
loopne
dec
insl
jle
and
mov
add
lds
xchg
mov
and
fwait
jmp
xor
clc
mov
out
or
dec
or
pushf
movsl
adc
push
or
lds
js
push
cmc
aaa
push
mov
mov
xchg
into
aas
movsb
jp
push
les
jp
mov
test
adc
xchg
pop
dec
push
push
insb
faddp
cmpsl
push
xor
movsb
cmpsb
xor
inc
sti
cmp
rclb
nop
ss
sti
daa
xor
pop
add
cld
lahf
xchg
xchg
mov
test
outsl
cs
aam
mov
push
loop
lcall
ficompl
aas
pop
insb
lret
mov
cs
xor
adc
xor
push
pop
cmc
jae
aas
pop
adc
push
test
adc
frndint
sahf
push
jnp
and
mov
add
or
inc
add
into
mov
add
mov
lock
cmp
pop
inc
lock
movups
cmovb
pop
jg
mov
adc
ljmp
call
lock
lds
xor
jae
push
pop
push
mov
or
lea
pop
ss
xor
out
into
pop
in
sbb
cwtl
pop
mov
jno
clc
jmp
repnz
or
int3
adc
xchg
pop
clc
cmp
stos
xchg
sbb
xor
out
pop
cmpsb
and
xor
add
add
aaa
pop
testb
push
cld
cmp
dec
cmp
ret
or
cmp
cld
insl
loop
incl
xor
fdivp
popa
adc
xor
dec
insl
das
ret
fstpt
sbb
cltd
jecxz
pop
mov
sbb
dec
mov
fdivr
mov
div
mov
or
sub
pop
outsb
and
iret
jae
andl
pusha
stos
xchg
imull
push
mov
cltd
ss
xchg
push
ret
je
pop
fildl
push
pop
fiaddl
or
push
or
lret
scas
jae
mov
mov
mov
fists
out
sub
ja
sub
int
or
pop
data16
push
sbb
xor
mov
push
vpshaw
pop
sbb
add
jmp
mov
or
xchg
in
roll
cli
cmp
ja
lock
sti
sti
lods
dec
mov
mov
ss
aam
into
insl
xor
mov
xor
pop
int3
leave
lods
push
imul
in
pop
sahf
inc
mov
jno
gs
shrb
dec
pop
jl
inc
leave
ss
mov
xchg
std
lahf
and
mov
pop
sahf
push
jo
sub
mov
add
lods
mov
xor
ja
ja
sub
out
repnz
adc
mov
push
sti
push
xchg
pop
or
mov
fbstp
pusha
or
pop
rcl
prefetch
movsb
xor
mov
adc
orl
fcompl
sub
adc
test
mov
and
mov
jne
sub
cmpsb
fsubrl
add
sbb
into
std
add
add
lret
out
popf
jbe
jno
pop
xor
out
cmp
pop
je
imul
and
mov
fcomi
ret
fcomip
inc
jbe
sub
dec
adc
adc
fldenv
bound
insb
dec
dec
add
std
inc
jecxz
scas
fisttps
inc
jl
add
ret
pop
leave
ds
xlat
jns
and
popf
loopne
shll
addr16
mov
xchg
cmp
fstl
and
cmpsb
and
or
test
scas
push
subb
insb
pop
push
push
popa
mov
iret
or
nop
push
push
xchg
orl
jmp
jbe
push
jmp
jne
mov
sub
inc
int3
inc
mov
add
outsb
stos
test
popa
sbb
in
lods
mov
scas
push
in
xchg
aaa
mov
in
movsb
dec
inc
insw
mov
xor
mov
or
aad
insb
jmp
add
sbb
stos
insl
imul
aas
jne
push
mov
test
icebp
mov
xchg
sub
repz
mov
mov
mov
sbb
and
xor
pop
mov
push
dec
rorb
mov
inc
xor
jmp
or
push
aas
sbb
sub
jmp
and
sahf
out
xchg
dec
jbe
or
and
sbbb
aas
xchg
hlt
sahf
ret
and
xchg
insl
inc
add
pop
popa
and
pop
jp
inc
lret
sub
push
inc
and
out
xchg
test
dec
hlt
je
mov
mov
jp
idivb
xchg
or
scas
cmp
pop
movsb
adc
and
mov
cmp
sub
outsb
pop
and
pusha
push
adc
xor
push
lock
jbe
int3
and
aad
cmpsl
dec
push
lock
xchg
push
aam
pop
cmp
imul
int
xor
pop
loope
sub
jl
sahf
ss
lock
xchg
mov
sbb
lret
pop
loopne
xor
cltd
push
fs
lahf
in
xchg
inc
sti
jne
sbb
outsl
cmp
push
jne
test
daa
imul
push
cmc
insb
dec
pushf
xchg
jae
call
mov
mov
outsl
das
xchg
or
xchg
icebp
int
inc
cmp
push
pop
mov
shlb
lret
mov
in
mov
bound
add
mov
repnz
mov
mov
xor
jne
push
sbb
push
or
inc
js
cld
dec
inc
addr16
rclb
ret
data16
ret
jnp
pop
outsb
dec
add
and
pop
xor
icebp
js
adc
pop
enter
sti
jge
mov
xor
xchg
mov
sub
cmpsb
pop
sti
fisttpl
stc
push
push
xchg
mov
inc
jp
addl
daa
pop
mov
inc
mov
in
mov
inc
nop
mov
std
sbb
sub
inc
dec
ljmp
std
mov
cmc
loop
inc
into
popa
dec
pop
lea
push
dec
aaa
inc
or
cmp
and
xchg
pop
insl
mov
iret
sbb
insb
repnz
push
sub
dec
in
lods
mov
xchg
adc
mov
jle
jg
jns
in
daa
pop
fsubrl
test
add
cli
pop
add
xchg
leave
nop
mov
sbb
std
in
jmp
pop
sbb
cmpsl
push
outsl
fwait
xchg
call
push
pop
dec
dec
arpl
test
push
sahf
cmpsb
push
jecxz
pop
xchg
pop
dec
out
rolb
or
lds
mov
jns
imul
or
jbe
xor
aaa
rcrl
pop
cmpsl
cwtl
adc
cmp
jg
or
fs
jnp
adc
shlb
lret
pop
bound
fistl
mov
pop
cs
movl
cld
pop
fucomip
mov
sbb
push
sbbl
mov
inc
add
pop
cmp
call
mov
scas
pop
dec
jo
add
sub
sbb
inc
jae
cmp
jle
or
mov
mov
add
std
fcoms
les
xor
mov
inc
adc
ljmp
pop
sbb
mov
xchg
mov
insb
mov
cmp
xchg
and
pop
imul
push
inc
lea
jo
inc
jge
sub
or
fxch
xchg
sbb
fcompl
sub
push
daa
outsl
inc
leave
std
scas
inc
mov
out
dec
fdivp
loope
mov
pop
popa
repz
or
inc
addr16
mov
mov
jno
push
or
das
jb
shrl
imul
cmp
xchg
ljmp
inc
mov
ds
mov
mov
scas
xchg
movsl
fsubrl
mov
push
cli
movsb
xor
push
adc
pusha
mov
in
sbb
mov
leave
lods
inc
addr16
jbe
pop
das
inc
leave
aam
lret
xchg
xchg
adc
loopne
out
and
loop
push
cmp
mov
sub
sbb
dec
loop
frstor
push
fisubrs
arpl
out
pop
jg
leave
pop
mov
lods
xlat
int
pop
pushf
in
fildll
mov
cmpsl
stos
decb
bound
mov
cwtl
cmp
pusha
pop
jge
add
outsl
mov
out
lea
mov
push
movsl
mov
mov
out
push
push
aas
aam
repnz
xchg
ds
in
pop
clc
xchg
and
incb
les
jae
in
xor
outsl
adc
ret
mov
scas
shl
arpl
inc
ds
imul
lcall
cmpl
aaa
add
mov
adc
adc
sbb
stos
pop
inc
jno
div
push
mov
mov
dec
dec
add
out
negb
pop
jle
mov
jns
out
ret
xor
sbb
inc
cmp
mov
in
mov
lea
out
mov
loopne
fwait
daa
icebp
and
sub
cmp
frstor
mov
adc
int
jge
jno
out
sub
arpl
loopne
pop
xor
stos
out
aas
je
popa
gs
or
xor
sub
xor
pop
dec
mov
adc
sahf
push
dec
cmp
ja
icebp
dec
lret
sub
fnsave
mov
hlt
jp
insb
push
sbb
fcompl
test
loopne
adc
xchg
les
mov
fisttpl
rclb
lcall
xor
jo
std
jns
shll
sbbb
push
push
enter
gs
inc
and
popa
xor
fs
cmpb
jne
aad
sbb
push
xor
sahf
dec
jnp
push
jb
jne
fwait
and
call
cmpsl
xchg
sub
jmp
pushf
pop
mov
mov
cmp
adc
stos
jmp
inc
cmc
xchg
or
pop
addl
dec
mov
frstor
mov
imul
movsl
sub
lret
jle
lcall
push
cmp
jnp
call
flds
mov
out
js
insl
mov
jae
inc
push
jno
pop
aam
inc
sub
mov
pop
dec
xchg
loop
xchg
xchg
or
iret
je
inc
std
lock
shrl
and
jb
xor
aas
dec
sbb
sbb
adc
mov
mov
sbbl
dec
or
and
nop
fcoml
stc
iret
je
pop
repz
jl
pushw
push
adc
mov
mov
ret
arpl
dec
inc
popa
cmpb
cmpsb
rcrb
push
les
in
add
dec
dec
adc
movl
lahf
stc
mov
xchg
addr16
and
cmp
or
mov
fwait
stc
call
aaa
inc
mov
mov
sbb
push
das
cmp
and
ret
pop
movsl
mov
popa
cmc
mov
mov
lea
imul
leave
pop
add
xor
dec
jne
ja
stos
shrb
push
push
ljmp
cli
aas
testb
mov
ja
jge
pop
rcrl
in
xchg
mov
fmuls
bound
mov
push
pushf
scas
in
xchg
or
stos
lret
out
push
js
jbe
ret
outsb
pop
ret
mov
push
and
jmp
aad
int3
pop
inc
out
sbb
sbb
ds
xchg
fists
xchg
jne
mov
fistps
lret
or
mov
xor
stc
mov
adc
bndldx
rcl
sahf
insb
rcr
out
js
and
ja
aam
stos
ficoml
pop
shrl
aaa
jge
and
or
push
mov
lea
daa
push
xor
sub
xor
cli
outsl
repnz
jl
adc
into
jne
or
push
sub
test
xor
xchg
lods
hlt
mov
mov
and
mov
arpl
cmp
outsl
mov
adc
and
xchg
and
push
fxam
jmp
jle
aam
inc
xlat
ja
cmpsl
push
xor
and
jb
cmp
rcl
jg
inc
xchg
jno
aam
data16
dec
push
push
rorb
inc
jecxz
sti
jmp
mov
mov
adc
repnz
cltd
pop
adcb
push
insb
and
iret
push
add
pop
lcall
or
subb
jno
mov
xor
sbb
pop
sahf
enter
push
in
xchg
xchg
jno
leave
inc
or
mov
imul
mov
add
mov
movsb
xorl
pusha
ja
test
push
fs
adc
jae
lret
xor
fstpt
js
repnz
pop
push
inc
scas
popa
push
mov
or
out
rcl
aad
xor
ret
push
lret
icebp
push
inc
imul
mov
pop
mov
mov
xor
fcomps
dec
int
cmp
fdivl
test
out
fisubrl
pop
inc
mov
lock
stos
cmp
mov
jne
jmp
adc
leave
jp
cmp
add
repz
inc
dec
sub
fsts
and
out
mov
xor
dec
aad
movsb
add
cld
lret
flds
ja
inc
test
inc
icebp
ss
test
mov
xor
push
jb
loop
mov
out
lret
mov
mov
mov
cmp
xor
push
sahf
ret
lret
leave
inc
or
insb
pop
into
lcall
and
cmp
push
pop
das
cld
or
insl
xlat
std
jnp
sbb
stc
fcomp
pop
push
push
pop
lea
int3
pop
sub
inc
rcll
out
jnp
insb
push
mov
adc
loopne
shlb
int3
add
mov
ja
lock
clc
imul
shrl
outsl
mulb
sahf
or
sub
arpl
or
in
xchg
rolb
and
in
add
inc
lcall
add
and
xor
pop
dec
js
daa
fsubl
cmpsb
sbb
sbb
shlb
push
cmpb
jns
insb
jbe
pop
mov
leave
push
fidivl
fstpl
xor
das
sub
dec
jb
sub
imul
pop
adc
or
fwait
xchg
insb
lea
fstps
cld
jae
insb
sub
mov
shl
ret
add
push
jl
sub
sbb
aaa
lea
pop
sahf
and
ds
sub
daa
sub
mov
outsb
jns
inc
test
cmp
or
add
cmpsl
dec
fstpl
push
hlt
sbb
mov
fisttps
inc
xlat
icebp
imul
sbb
out
jae
xchg
fdivs
fistl
test
dec
cmp
loope
cmp
mov
cwtl
pop
add
mov
repnz
jbe
xchg
dec
jl
leave
ror
cmc
mov
jns
loope
out
pop
ds
pushf
ret
sbb
ja
pusha
ds
add
out
aas
lret
mov
jl
cmp
push
mov
lcall
les
ds
ja
fldenv
popf
add
fildl
dec
out
mov
push
mov
mov
xchg
roll
int3
push
sub
push
mov
fsubl
adc
or
add
push
dec
sub
jle
dec
lcall
inc
aam
mov
add
aad
test
repz
adc
idivl
mov
int3
jbe
sub
out
ret
icebp
dec
loope
lcall
xor
lahf
push
cmpsl
test
inc
into
shll
jae
mov
and
sub
and
popf
arpl
lock
cwtl
fdivl
test
sbb
test
nop
imul
mov
jne
jae
cmp
xor
pop
es
push
xchg
sub
and
and
shrw
out
lods
cmc
or
aad
mov
add
mov
outsl
mov
adc
cs
mov
icebp
pop
sbb
push
roll
add
mov
push
push
push
and
jmp
jbe
jne
jb
xchg
addr16
std
mov
rorl
mov
sub
xor
cmp
pop
mov
sbb
lcall
and
pop
stos
xchg
bnd
mov
aas
adc
inc
or
inc
push
adc
into
mov
bound
mov
or
hlt
fisubl
sbb
cltd
gs
daa
mov
in
pop
mov
cld
out
fildl
push
push
dec
enter
fbstp
pop
inc
mov
sub
hlt
cmp
cmpsb
fisubs
pop
int3
pop
fisttpl
push
jg
and
ss
shlb
jae
or
iret
mov
movsl
int3
jo
mov
adc
lret
addr16
adc
nop
sti
push
push
fstpt
in
cmc
jl
mov
loope
jg
fmull
jno
std
jb
leave
or
mov
push
mov
jnp
loope
inc
sbb
hlt
jnp
inc
or
andl
ljmp
xchg
push
jae
push
imul
mov
fdiv
popf
scas
cmp
add
jne
add
sbb
fimuls
es
aad
adc
movsl
les
adc
cmp
jecxz
arpl
in
jl
cmp
enter
push
sub
jbe
and
mov
insb
inc
xor
pop
add
imull
decb
loop
adc
ror
mov
cli
shlb
fstpt
mov
or
iret
jns
int
or
fmuls
mov
jp
fcoml
mov
or
sarb
arpl
jp
icebp
andl
fnsave
xor
push
arpl
add
jge
pop
dec
sub
daa
adc
negl
dec
and
shll
cmp
test
xor
fimull
in
lret
mov
mov
mov
or
jecxz
and
loope
inc
or
bound
pop
mov
sub
sbb
mov
jle
cmp
ret
pop
ss
adc
xchg
jns
aaa
and
cmp
mov
or
push
and
stos
lock
dec
add
cld
inc
and
sub
mov
test
xchg
insb
cmp
xor
mov
cmp
movsl
cld
cmpsb
or
inc
inc
cmp
push
and
mov
pop
lret
lock
dec
mov
test
dec
mov
mov
sub
xor
mov
cmp
xchg
jge
pop
pop
jae
push
sbbb
and
jo
sbb
xchg
addr16
push
cmpsb
enter
jmp
test
cmpsl
and
je
and
sti
sbb
shll
outsl
pusha
imul
xchg
pop
jp
xor
dec
sbb
pop
sbb
cltd
aam
or
and
popa
mov
outsl
mov
das
hlt
mov
pop
jb
and
add
cmpb
jo
cmp
outsb
xchg
sar
jns
xor
adc
and
xchg
inc
imul
sbb
xchg
jecxz
lds
cli
cwtl
arpl
inc
daa
jecxz
jae
inc
in
push
dec
sub
imul
jno
das
test
repz
into
movswl
and
decb
aam
loope
sub
gs
and
cmpsl
sahf
mov
popa
push
dec
call
movl
push
hlt
jne
outsb
dec
ja
rcll
sbb
mov
mov
inc
fdivrs
xor
mov
inc
repz
xor
mov
lret
jg
and
loopne
dec
sub
gs
inc
xor
lret
lds
mov
or
ja
adc
std
repz
push
push
or
std
ficompl
mov
push
out
mov
pop
add
mov
push
and
fnstcw
scas
mov
xchg
nop
fidivrl
mov
jne
mov
xchg
imul
lods
pusha
push
pop
jne
outsl
pop
dec
sbb
mov
push
sub
sbb
push
cs
xchg
mov
lods
xchg
jmp
sti
cltd
sub
xchg
lret
dec
cwtl
mov
adc
sub
test
adc
in
and
aad
inc
dec
push
mov
pop
bound
cld
fimull
jmp
je
xchg
mov
repz
inc
inc
jl
or
inc
pop
jbe
shrl
cli
cmp
xor
popa
imul
out
pushf
xchg
xor
vzeroupper
cs
xlat
add
loop
imul
inc
mov
cmc
mov
xchg
bound
mov
stos
test
in
dec
fchs
xor
push
sub
mov
out
jmp
jg
mov
pop
xlat
jmp
data16
sub
pop
sbb
xchg
mov
les
pushf
jno
out
lds
jge,pt
frstor
in
mov
mov
mov
push
insb
xchg
dec
mov
dec
pop
push
push
mov
sbb
mov
jbe
inc
call
nop
adc
fsubl
ljmp
pushf
dec
xchg
in
cwtl
jge
shll
scas
fdivrp
fldt
stos
lret
cmpsb
int
sub
adc
outsb
mov
jmp
out
lock
je
push
lahf
das
sub
je
sub
xor
mov
mov
mov
mov
xchg
push
sub
jb
push
jnp
push
fmuls
add
out
mov
adcb
xor
pop
imul
inc
xorb
pop
xor
daa
sub
loope
or
jae
sub
fdivp
in
push
add
mov
xor
xor
sbb
outsl
stos
push
insb
push
test
add
fcoml
ds
push
dec
cmp
xchg
xchg
add
subb
lods
into
push
out
add
dec
add
mov
or
dec
xchg
sbb
sahf
dec
adc
das
cltd
aaa
mov
fsts
sahf
imul
dec
pop
in
push
imul
insl
or
vsqrtpd
pop
mov
std
jmp
mov
xor
in
xchg
cltd
and
pop
mov
mov
mov
ret
stos
pusha
dec
idivb
pop
aad
in
jne
fstp
fimuls
fidivs
imul
jnp
lock
jl
cli
movsb
fs
dec
pop
or
xchg
sbb
into
pop
adc
aaa
shlb
nop
leave
add
sub
stos
push
pop
negl
jp
jae
sbb
dec
fildll
xchg
test
push
rcrb
repnz
push
push
or
adc
out
fimuls
jne
or
fsts
into
mov
inc
inc
cmp
mov
les
cmp
xchg
movsl
push
pop
das
push
jno
xchg
push
xlat
call
jbe
sub
inc
ds
mov
scas
out
in
xor
mov
negl
sbb
lods
cli
mov
imul
and
leave
inc
jae
inc
ljmp
push
push
nop
arpl
cmp
cmpsl
dec
aam
sbb
leave
add
es
faddl
lods
sub
add
push
pop
add
cmc
jae
ret
cmpsl
unpckhps
sub
xchg
add
jl
or
stos
mov
and
jmp
and
je
sub
dec
push
movsl
repnz
frstor
xchg
or
iret
loop
test
repz
sahf
test
hlt
fisubrs
mov
icebp
popa
ds
lds
mov
rsm
mov
adc
dec
push
movsb
sub
stc
xor
shlb
cltd
ret
nop
pop
add
dec
cli
rclb
push
sbb
daa
sbb
daa
fwait
dec
fwait
add
cld
daa
push
or
sti
and
dec
jp
roll
enter
incb
incb
bound
inc
mov
add
dec
or
xor
push
outsb
sub
sbbb
arpl
aam
mov
push
lods
or
dec
mov
mov
xchg
sub
in
std
mov
in
push
push
jne
icebp
popa
inc
ret
sub
pusha
mov
outsb
or
in
shl
sahf
enter
and
add
in
test
lock
ret
cmpsb
push
push
cmc
insb
jl
fnsave
cli
pop
sbb
loopne
mov
cmpl
loopne
push
xchg
loop
in
cmp
call
lock
inc
mov
loope
sub
or
scas
pop
mov
cmp
adc
lods
cwtl
cmp
inc
fidivl
sbb
insl
xchg
jne
dec
imul
fcmovbe
xchg
push
pop
jg
xchg
fistps
push
rorl
shrl
mov
pop
xor
das
mov
mov
sarb
roll
push
push
push
ret
sbb
cmp
into
inc
dec
popf
xlat
outsb
mov
in
cld
lods
xor
adc
mov
xchg
xor
inc
push
leave
inc
push
xchg
scas
gs
sub
and
push
test
out
call
or
cmp
inc
mov
mulb
mov
std
add
call
xchg
stc
imul
adc
aam
in
mov
ret
xlat
add
mov
int
inc
test
and
jb
leave
cli
loop
aad
pop
xorb
out
rorl
nop
imul
mov
xchg
cmp
movsl
jns
in
jne
xor
push
add
jecxz
dec
add
pop
pop
push
xor
xor
movsl
sub
pop
jle
js
pusha
cwtl
clc
frstor
pop
cmp
or
pop
jg
add
adc
push
fdiv
insl
mov
inc
sbb
push
leave
push
insb
aaa
rorb
adc
xlat
addr16
das
jecxz
ljmp
mov
popw
out
or
xor
movb
sub
cld
movsb
push
rcrl
adc
popw
cmp
jno
pop
push
jmp
movsb
push
imul
fdivr
es
xlat
testb
js
xor
jae
jnp
sub
movsb
push
mov
or
test
sbb
leave
out
jb
int3
inc
out
je
adc
sbb
popa
sub
cwtl
pop
and
aam
in
aam
mov
das
mov
leave
ljmp
pop
jle
sbb
cmp
jle
into
mov
mov
cmp
hlt
out
lahf
fucomp
mov
enter
or
jl
aad
ljmp
mov
jle
mov
and
add
test
mov
pop
je
add
and
pushl
push
ficoml
dec
pop
pop
fmulp
movsb
mov
popf
ret
sub
pusha
dec
sub
and
and
inc
dec
cwtl
stos
inc
out
rcrb
jecxz
imul
mov
fsubs
lods
fcoms
pop
adc
mov
dec
cld
mov
in
pop
je
pop
test
add
jns
mov
add
or
mov
mov
sarl
sub
fmuls
fptan
push
ss
pop
jb
imul
int3
xor
mov
pop
sbb
adc
leave
sub
xor
add
sub
sub
sub
adc
pop
mov
push
scas
adc
and
add
jb
mov
mov
dec
mov
insl
xchg
aad
add
sbb
clc
leave
or
push
daa
add
mov
dec
std
pop
stos
dec
rcr
adc
add
int3
cmpsb
mov
xchg
ret
arpl
and
fucom
dec
lock
xchg
adcb
dec
das
xlat
jbe
rorb
add
sbb
insb
sbb
push
add
sahf
adc
dec
ret
push
test
xchg
jo
sbb
dec
lcall
mov
cld
xchg
rorl
pushf
xchg
jge
push
ss
out
mov
mov
add
movq
and
adc
popa
push
cmp
dec
push
stos
loop
loope
cmpsb
jo
movb
inc
mov
and
cltd
add
mov
aas
lock
xlat
dec
sub
push
out
test
loope
dec
dec
xchg
insl
lcall
shlb
loop
add
cltd
notb
negb
fsincos
and
mov
clc
int3
push
push
mov
jmp
and
add
repz
add
xchg
test
add
adc
fimuls
and
test
fbstp
xlat
shll
push
sti
push
gs
out
and
xlat
nop
daa
rorl
les
jae
jg
or
dec
call
xor
mov
loope
lock
mov
jo
pop
inc
sub
sbb
push
adc
cwtl
or
jnp
out
sub
or
lods
xchg
push
xchg
outsb
out
movsb
dec
fisubl
jne
adc
push
test
sbb
outsb
les
lods
ds
fdivr
into
lods
mov
sub
es
std
pop
xlat
mov
in
inc
fnsetpm(287
add
cmp
sbb
mov
or
lods
insb
pop
pop
cli
sub
pop
push
jb
add
or
mov
shl
std
mov
mov
out
and
cmc
jb
mov
fidivrl
hlt
out
inc
sub
inc
jno
xchg
fiaddl
jp
cli
popf
ds
data16
das
cmp
push
outsl
add
pop
sbb
add
xor
ss
.byte
ss
.byte
