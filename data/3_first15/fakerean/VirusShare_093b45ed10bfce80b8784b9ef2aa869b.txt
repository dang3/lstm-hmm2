xor
ret
push
mov
sub
mov
xor
mov
lea
push
lea
push
push
movw
call
mov
xor
cmpb
sete
xor
call
leave
ret
push
mov
sub
movl
mov
call
mov
mov
mov
mov
and
cmp
jne
mov
add
mov
mov
mov
and
mov
mov
shr
mov
mov
add
mov
movzbl
movzbl
sub
mov
add
mov
jmp
mov
add
mov
mov
mov
and
mov
mov
sub
mov
mov
mov
movzbl
movzbl
xor
mov
add
mov
mov
inc
mov
mov
shl
mov
shr
or
mov
cmpl
jl
xor
inc
leave
ret
push
mov
sub
push
movl
mov
xor
push
pop
div
push
pop
mov
shl
mov
xor
push
pop
div
push
pop
sub
push
pop
sar
or
mov
mov
mov
pushl
call
mov
pop
leave
ret
push
mov
sub
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
push
push
call
cmp
jne
lea
mov
lea
push
push
push
push
call
movl
movl
jmp
mov
add
mov
pushl
push
push
call
add
cmp
je
jmp
movl
call
call
push
call
pop
pop
leave
ret
int3
int3
jbe
mov
arpl
adc
loope
mov
ljmp
sub
imul
loopne
stc
in
jmp
inc
out
mov
mov
mov
push
rcrl
xchg
pop
addr16
int3
jle
arpl
jp
cmp
inc
ret
or
xchg
mov
mov
stc
xchg
adc
push
mov
jbe
and
subb
out
cmpsb
and
mov
sbb
imul
push
dec
xchg
mov
xor
push
int
dec
scas
add
sti
xchg
adc
jo
adc
outsl
ja
push
hlt
mov
lods
adc
sbb
push
and
iret
mov
pop
sub
ljmp
mov
add
add
adc
jae
mov
jns
cmpsb
pop
adc
xchg
adc
push
pop
aaa
mov
sub
cmp
dec
cli
jb
or
mov
bound
test
xchg
hlt
xchg
loopne
xchg
dec
or
mul
mov
bound
fiadds
lret
sub
sub
mov
dec
filds
sub
sbb
test
pop
in
data16
lock
in
jp
jp
jne
and
sarb
mov
loopne
loope
bound
dec
mov
popa
test
sub
ds
sahf
out
xor
test
jge
arpl
stc
push
sbb
jb
outsl
dec
jne
push
sbb
fmulp
add
mov
xchg
daa
je
ljmp
fdivrl
stos
das
fmull
out
lock
mov
push
lods
sbb
pop
pop
stos
icebp
sti
jo
out
aad
xor
dec
sbb
jne
loopne
idivb
inc
jae
xchg
fadds
les
repnz
sbb
jns
cltd
inc
popa
into
test
add
hlt
and
jl
cmc
or
cmp
pop
fcmovnb
lea
mov
dec
mov
fdivrs
mov
push
sub
das
mov
jne
inc
adc
ja
jle
sbb
pushf
cmpsb
cmp
call
fldenv
jne
inc
insl
ds
stc
lcall
aad
xchg
sub
xchg
and
fs
stos
insl
cs
add
ja
mov
outsl
insl
cmp
sub
inc
int3
lods
icebp
jno
jo
jl
mov
outsb
out
fcompl
dec
bound
fnsave
arpl
xlat
dec
or
mov
lods
cmpl
mov
or
mov
jp
hlt
xchg
ret
in
lahf
and
enter
gs
out
test
das
movsl
lds
push
scas
mov
notb
mov
add
and
jle
add
out
jl
lret
mov
dec
adc
gs
or
outsl
lea
cmp
push
jmp
es
xor
movsb
stc
bound
imul
mov
and
insl
xor
mov
enter
cld
in
jbe
add
and
mov
sub
dec
push
inc
or
add
int3
or
lcall
sahf
aaa
es
rolb
sbb
les
or
jae
leave
or
rclb
or
iret
mov
pop
in
dec
push
jns
push
jmp
movsb
popa
outsb
daa
jp
sbb
sub
sub
and
outsl
das
pop
push
loope
cmp
mov
fcomps
adc
arpl
mov
cmp
scas
rcrl
pop
aam
pop
fimuls
orl
jne
sbb
jo
xchg
mov
pop
mov
push
push
je
pusha
xor
cmp
push
roll
and
jmp
pusha
outsb
mov
movsl
out
xchg
push
imul
inc
xor
jp
or
divb
sbb
fimuls
push
popl
pop
dec
lcall
js
cld
lds
sub
lret
sub
pop
test
mov
popa
mov
sbb
and
and
insl
imul
test
adc
jmp
pop
mov
xor
clc
frstor
repz
loop
sahf
or
add
dec
cmp
xchg
jge
add
jnp
push
imul
fsubrp
and
lcall
andb
add
push
imul
outsl
add
mov
imull
je
adc
inc
cli
mov
xchg
cmp
and
arpl
into
lods
mov
movsb
fmuls
push
sub
dec
inc
push
jmp
sub
push
sub
sub
or
sub
enter
jbe
mov
mov
ret
shl
test
jns
loope
pusha
mov
sbb
cmc
lcall
push
data16
adc
sahf
rcrb
cld
pop
mov
mov
loop
jo
mov
jle
add
pop
dec
and
std
in
and
and
xor
xchg
mov
xor
and
push
mov
or
shlb
mov
push
add
dec
mov
mov
ss
cmp
xor
xor
push
pushf
popa
pop
push
xlat
outsb
mov
cmp
pop
movsl
lret
mov
lcall
addr16
out
fwait
jno
bound
stos
jns
add
or
pop
in
test
ret
push
sub
adc
leave
xchg
ret
dec
sarl
add
xchg
dec
push
inc
leave
push
push
and
dec
pop
adcb
ds
nop
adc
xor
stc
lock
push
mov
sub
adc
mov
lock
sbbb
ss
shlb
xor
add
cmp
dec
inc
fidivrs
ficomps
out
mov
push
imul
mov
mov
or
jmp
pushf
pop
xchg
stos
stos
push
mov
add
lods
cmc
shlb
pop
jge
mov
lret
stos
dec
test
ret
test
add
sub
cmp
xor
aas
addr16
sub
lds
push
ja
imul
scas
ss
arpl
inc
and
and
inc
sub
jmp
iret
sarb
jecxz
xchg
adc
std
cmpsb
mov
dec
sub
cmpsb
cmp
fistpll
cld
mov
xchg
add
sub
sahf
jae
xchg
movl
out
arpl
imul
push
and
mov
imul
or
inc
stc
xor
mov
mov
sub
push
sub
mov
fidivs
or
fs
xlat
xor
popl
call
outsb
adc
pop
jmp
jle
icebp
mov
cwtl
les
mov
inc
aad
push
ret
aam
pop
test
daa
loopne
lea
pop
inc
fnstcw
mov
and
xor
js
shrl
pop
push
pop
fsts
xchg
dec
aad
adc
cmp
stos
or
pop
push
jb
add
sub
jne
negl
xor
push
pop
sbb
adc
mov
sbb
ret
movl
inc
loop
and
adc
inc
sub
aas
cmp
dec
testb
or
shrb
popa
pop
rorl
xlat
mov
fwait
jo
clc
jno
jmp
xor
jo
add
jbe
push
out
add
in
adc
outsl
adc
mov
sar
mov
cmp
scas
arpl
dec
or
loope
jno
mov
or
int3
test
mov
add
ds
xlat
inc
jle
mov
shll
inc
hlt
pop
leave
in
pop
adc
pushl
mov
or
les
add
xor
pop
mov
pop
imul
pop
sbb
adc
ljmp
fbld
ss
aas
push
pop
testl
pop
pop
rcrl
pop
dec
lret
xchg
aam
roll
popa
and
fsts
jae
enter
add
movd
cmp
dec
je
aam
pop
cmp
or
out
push
fdivrl
dec
jne
cmp
mov
in
popa
push
call
loope
notb
push
gs
je
fwait
lcall
sti
fiadds
or
mov
test
lcall
push
mov
sbbl
cmc
lods
mov
jo
lods
pop
cmc
jp
mov
jnp
ljmp
cmp
addr16
mov
loope
div
pushl
xchg
movl
jbe
jl
icebp
arpl
cmp
xor
outsb
iret
lret
push
cmp
mov
rcll
lcall
push
jecxz
mov
and
mov
adc
std
sub
adc
dec
push
cmp
fucomi
pop
mov
mov
pop
arpl
xchg
enter
push
jmp
nop
adc
fdivp
aaa
xchg
addr16
ljmp
in
jle
fidivrl
xchg
rolb
add
bound
gs
add
push
mov
sub
xor
xor
dec
repnz
pop
jns
jb
lods
popa
mov
pop
clc
fistpll
rolb
icebp
pop
push
inc
mov
add
mov
add
dec
pop
and
pushf
and
clc
push
clc
insl
push
sub
cmp
cmp
push
add
push
mov
in
push
out
pusha
std
xor
sbb
and
in
ds
ret
inc
cmp
dec
stos
test
lock
mov
scas
lds
test
sbb
bnd
lock
fsubrs
jp
push
jno
dec
add
jle
filds
icebp
loop
lret
adc
out
mov
test
ds
fcoms
adc
pop
cltd
mov
test
fcompl
rorb
lahf
cli
cmp
insl
out
jbe
push
or
adc
insl
or
inc
dec
pop
lcall
inc
mov
nop
pop
adc
lds
sbb
iret
cs
test
push
cmp
mov
mov
cmp
inc
cwtl
lock
jl
mov
pop
imul
jge
sub
lahf
sub
mov
xchg
outsb
adc
data16
dec
or
mov
mov
cli
les
adcb
test
fnstcw
jns
sub
dec
pop
mov
and
push
cmc
je
jae
cs
jmp
rcr
jmp
mov
hlt
pop
mov
mov
xor
ret
jle
inc
fbstp
push
push
sbb
cld
leave
gs
sbb
bound
cli
sahf
jb
js
repnz
xor
cmp
mov
sub
enter
pop
push
adc
sbb
or
push
and
rol
stc
ret
adc
ds
inc
ss
lock
mov
push
fwait
cwtl
xor
xchg
or
cmp
mov
insl
pop
lret
loope
jne
imul
iret
adc
lret
pop
xchg
jbe
push
pusha
xchg
ds
jge
js
mov
fldl
pop
mov
push
mull
mov
xchg
jmp
loopne
cmp
xchg
loop
hlt
mov
nop
cld
dec
cwtl
in
add
test
pop
fisubl
test
add
insl
fs
adc
rorb
xchg
test
jge
lret
xor
imul
mov
addr16
push
int3
or
xchg
pop
inc
cmp
cld
movsl
fstps
jb
mov
or
lret
add
fisubrl
cld
lret
xor
daa
stc
imul
mov
pusha
cmp
mov
cmp
jnp
inc
rol
mov
ret
push
cmp
sbb
inc
loope
loop
clc
xor
xor
mov
je
imul
add
dec
adc
ret
out
inc
jmp
cmpsb
ljmp
jp
icebp
jl
gs
cwtl
sbb
aas
loopne
mov
stos
push
testb
push
insb
sbb
scas
out
aad
loopne
in
subb
push
jp
push
cmp
sbb
inc
xor
lds
les
cmp
aad
adc
dec
mov
call
jno
mov
xor
outsl
pushf
adc
add
add
idivl
test
xchg
popa
lds
add
xor
out
mov
aas
add
in
repz
mov
jnp
mov
out
mov
in
mov
mov
ja
je
add
add
adc
insl
adc
imul
cmp
js
adc
mov
loopne
cmp
mov
jmp
lods
aam
jle
imul
jns
mov
movsb
mov
insb
dec
data16
push
cmp
add
mov
jae,pt
in
test
movsb
or
dec
dec
mov
push
lds
je
cld
push
icebp
dec
jg
jbe
pusha
pop
xor
xchg
dec
mov
push
sbb
cmp
test
out
outsb
push
jp
out
jge
cmpsb
sahf
mov
dec
sar
lea
ret
mov
das
cmp
and
adc
cmp
nop
add
push
mov
and
cmpsl
cmp
or
sti
icebp
mov
pop
mov
dec
adc
nop
push
xor
jae
aad
test
jmp
mov
mov
push
clc
mov
movsl
push
or
ds
sahf
sbbb
fs
in
inc
and
daa
inc
jno
int3
stos
iret
scas
lret
stos
mov
lock
or
test
lcall
xor
sub
add
cmp
or
mov
mov
hlt
jb
fdivl
add
push
cwtl
lods
mov
mov
sub
jmp
add
adc
orl
inc
mov
sarb
addr16
into
stc
daa
mov
mov
pop
mov
insl
sub
sbb
pop
loopne
out
out
pop
jb
scas
jb
flds
test
push
jae
add
scas
lea
cltd
add
or
add
fsubs
dec
and
push
sbb
imul
and
or
inc
bound
test
sub
aaa
jge
sti
mov
lahf
sub
push
mov
rcrb
cmpsl
and
es
les
sub
push
adc
lods
out
sub
popf
push
cmp
pop
xchg
dec
cmpsb
xor
stc
ljmp
std
sub
push
push
rcll
push
cmp
pop
cmpsb
dec
fnstcw
dec
mov
pop
inc
jo
mov
outsb
jmp
popf
jb
addl
dec
cmp
loopne
bound
ja
mov
out
je
mov
add
add
es
inc
mov
xor
sbb
xor
dec
lret
xchg
add
lcall
push
rcll
fldenv
lret
imull
fildll
push
test
mov
cltd
ud0
sbb
dec
out
lds
mov
inc
hlt
enter
push
push
sbb
out
sub
shll
fwait
int
je
clc
add
jecxz
outsl
lahf
loopne
jl
jle
inc
imul
push
aas
sbb
scas
ret
cmpb
ret
les
sbb
mov
rorb
xor
inc
les
dec
jle
pop
sub
and
stos
mov
adc
xchg
xchg
cli
xchg
pop
push
fabs
gs
adc
stos
sbb
add
js
movsl
cmp
inc
inc
cltd
divb
add
and
cmc
pushf
add
pop
xchg
add
jmp
xchg
add
aam
mov
sbb
mov
dec
scas
cld
aam
sub
in
adc
mov
xor
or
or
out
cmp
rol
aaa
mov
add
adc
or
sbbb
enter
xor
xchg
dec
pop
pushf
into
out
mov
arpl
or
xor
std
xorl
loope
outsb
shll
xchg
cmpsl
xchg
xchg
inc
jge
and
call
push
popa
dec
gs
sub
sbb
sahf
ja
in
cmpsb
fiadds
outsb
cmpsb
lahf
lret
icebp
or
xor
lcall
adc
xor
mov
dec
test
or
test
daa
sbb
mov
and
arpl
cmp
pop
jp
adc
pop
cmp
adc
bound
jg
mov
xor
and
jb
test
pslld
dec
dec
xchg
push
and
imul
ds
pushf
fs
dec
cmp
adc
or
in
ds
ds
or
lret
pop
gs
pop
dec
int3
xor
add
mov
adc
outsb
aas
jo
mov
add
pop
fwait
xchg
and
call
das
jb
jnp,pn
sbb
shlb
int
bnd
dec
inc
push
das
fwait
push
into
dec
call
push
clc
push
mov
js
cli
or
in
shrl
imul
lcall
enter
mov
insl
push
or
mov
push
push
inc
ret
loop
add
popf
stos
xchg
aad
push
jmp
in
pop
out
xor
mov
xor
sar
add
jle
fcomip
mov
aaa
cmp
dec
mov
cld
push
loopne
cmpsl
push
test
fldcw
orl
mov
movsb
mov
mov
xchg
and
xor
jecxz
rcll
ss
mov
jno
xlat
jbe
xor
sub
xor
lahf
adc
into
fmul
shll
loop
test
mov
lret
ja
adc
hlt
cmp
loope
imul
shll
or
adc
daa
xchg
sbb
cs
sub
je
or
inc
sub
outsb
fstl
mov
lahf
shl
push
cmpsb
add
sub
aad
test
push
add
loopne
push
es
out
push
repnz
and
testl
call
mov
pop
xchg
sub
add
mov
xbegin
ret
jne
sub
xor
xchg
gs
lds
ficompl
mov
dec
cmp
push
inc
sub
pop
cmp
subl
xchg
fdivl
call
cmc
fsubr
pop
pop
mov
aad
cmp
sub
mov
jns
push
jb
les
lods
mov
mov
and
or
pop
repnz
cmp
jl
and
jmp
movsb
lods
fildl
sub
jecxz
ret
in
stos
shrb
mov
adc
pop
jmp
lcall
in
outsl
sub
loope
lahf
add
imul
add
imul
test
ficoml
out
mov
push
test
mov
inc
in
dec
jnp
push
inc
cli
adc
sbb
ret
xor
xor
out
je
inc
jno
push
and
loope
and
add
mov
cmpsb
les
push
xchg
cltd
inc
inc
jb
arpl
adc
sbb
loop
cmp
cli
into
ficompl
sub
mov
or
xchg
inc
ss
cmp
out
jl
mov
sub
inc
and
xor
sbb
mov
jae
push
jb
js
lret
and
pop
stos
jp
xor
cltd
cmp
mov
mov
cli
popf
out
rcrb
int
push
add
mov
push
mov
fsts
xor
insb
sub
stos
jg
sub
divl
je
and
fldenv
jl
std
scas
call
add
fisubrs
in
xchg
pop
inc
inc
ss
lods
pop
sub
dec
jns
xor
and
call
pop
cli
pop
cpuid
out
sbb
testb
sahf
inc
rcrl
int3
inc
sub
jbe
jne
cld
mov
adc
cwtl
pop
and
bound
std
push
daa
add
addr16
mov
lahf
mov
inc
sub
cmp
sub
bswap
gs
popa
add
push
pop
mov
jg
mov
pop
jnp
outsb
cwtl
pop
jge
fdivr
fs
jle
ret
adc
add
jbe
pop
push
jne
loopne
add
call
lcall
sbbl
mov
popf
inc
jle
sbb
test
adc
stos
jo
push
lock
stos
push
push
dec
adc
dec
add
arpl
fmuls
fwait
jns
mov
mul
cltd
cld
fdivs
into
das
dec
loop
jno
mov
cmp
lret
jns
or
loopne
sahf
mov
out
rorl
andb
movb
nop
sbb
outsl
stos
jecxz
jns
loope
sub
dec
sub
jmp
lods
into
movsl
mov
ret
xor
sbb
pushf
cmp
xor
lcall
dec
sbb
outsb
movsl
mov
sub
sub
cwtl
out
jne
add
test
or
add
xchg
repnz
iret
inc
stos
mov
lret
insb
jp
add
pop
out
jnp
pusha
add
loope
push
stos
lods
mov
nop
pop
dec
cmp
aad
mov
test
and
cmp
stos
divl
jbe
add
sarl
or
cmp
or
popa
es
push
negl
adc
rolb
dec
insl
scas
outsb
xchg
xchg
sub
pop
cmp
fld
pop
adc
inc
xchg
add
cmp
xchg
jp
cwtl
shll
out
sti
mov
mov
mov
add
dec
les
dec
ficomps
jns
pop
and
jp
inc
mov
popf
mov
outsb
mov
out
mov
and
mov
jg
inc
rorl
nop
ret
sbb
ljmp
inc
inc
icebp
iret
std
sbb
adc
mov
jge
mov
jmp
mov
mov
inc
mov
mov
fdivrp
mov
xlat
mov
and
push
sbb
das
int3
sar
pusha
sbb
shll
es
xchg
jb
cmp
mov
mov
popa
cmpb
cld
popa
popa
std
adc
fisttpll
mov
loop
cmc
push
push
lock
sbb
loope
lret
mov
inc
aad
xchg
jns
out
lret
popa
xchg
out
fidivrl
rol
jns
xor
add
pop
sbb
enter
xchg
or
aaa
lret
test
shll
rcll
fistpll
cs
mov
int
pop
mov
imul
adc
mov
mov
xchg
sti
xor
das
test
sub
sbb
add
outsl
or
ret
mov
jns
in
lret
std
mov
stos
cltd
cmp
push
shlb
lods
cmc
mov
mov
add
mov
aas
dec
rolb
jp
decl
test
sti
ja
jb
sahf
nop
adc
inc
or
sbb
lahf
xchg
sahf
sbb
decl
mov
lret
xchg
cltd
cmp
sbb
repz
add
mov
mov
cmp
icebp
pushf
sbb
xor
mov
inc
addl
sar
mov
sti
das
mov
or
movsb
lods
inc
mov
icebp
sbb
mov
ds
xor
lret
shlb
inc
lahf
jb
fdivrs
dec
mov
insl
es
push
das
stos
shr
cmpsb
in
sti
pop
or
pop
mov
aaa
popa
mov
xchg
test
sbbb
sbb
aad
les
xchg
loopne
cmpsl
push
adc
mov
jmp
mov
aaa
fnstenv
clc
adc
push
and
int
in
push
pop
jnp
jnp
and
lahf
movsb
pop
jge
xchg
jl
cmp
fstp
call
or
dec
push
orl
int
scas
and
cs
and
in
iret
inc
leave
imul
sbb
fimuls
lds
sub
sar
test
add
fbld
imul
cwtl
arpl
sub
roll
into
and
popa
or
sbb
shl
mov
xor
mov
xchg
aad
imul
or
pop
lock
xchg
shr
inc
jge
mov
pop
pop
push
inc
cmp
mov
pop
add
mov
fs
add
pop
cmp
lock
pop
pop
xor
adc
inc
dec
mov
mov
sti
pop
nop
movb
lret
mov
addr16
jb
imul
scas
mov
lahf
xor
es
cmc
int
or
add
add
repz
divps
frstor
scas
sti
shl
jnp
mov
int
inc
jno
rcrl
arpl
enter
push
jbe
int
xor
in
stc
push
imul
add
ja
sbb
inc
pop
push
jb
fcmovu
sbb
insl
lret
lds
lods
sbb
aam
lahf
hlt
lods
fildl
push
roll
mov
adc
ljmp
mov
frstor
jp
jg
sbb
int3
lcall
jp
lds
ljmp
stos
std
pop
hlt
lahf
sbb
adc
mov
jmp
imul
fdivrp
jecxz
shrb
push
sbb
xor
mov
push
push
inc
sbb
cmpsl
repnz
test
cmpsl
addr16
adc
mov
mov
loope
aad
popf
stos
pcmpeqw
mov
lcall
cld
adc
clc
xor
lock
xor
je
sub
dec
jmp
nop
mov
in
and
pop
gs
mov
inc
adc
xchg
in
xchg
xchg
rcl
ljmp
sub
cmc
sbb
mov
dec
sbb
add
outsl
mov
sbb
jp
lahf
adcb
mov
xchg
stos
aaa
add
insl
add
add
xor
in
std
push
fwait
cmp
mov
lea
les
cmp
dec
pop
loop
fwait
dec
or
movsl
nop
divl
scas
negl
mov
sub
out
mov
ljmp
cltd
xchg
out
add
sbb
sbb
pushf
mov
pop
and
frstor
ret
aaa
mov
decl
lods
mov
cmpsb
mov
cli
aaa
in
mov
sti
or
in
pop
fisttpl
aad
outsb
ds
bound
xor
push
into
mov
or
movsb
xor
pop
lea
pop
or
mov
sbbl
into
lret
lret
lock
sahf
mov
xlat
addr16
mov
enter
shrb
mov
dec
cmp
push
inc
pushf
out
xchg
bound
into
xchg
push
mov
jo
sub
xchg
sbb
xlat
sti
clc
stos
cmpsb
or
cwtl
mov
ftst
mov
stos
cmp
add
adc
ds
flds
jb
sbb
xchg
sbb
push
mov
push
stos
pop
sbb
popf
aas
sahf
lods
lea
es
aas
pushf
sbb
jb
mov
dec
inc
lahf
gs
leave
dec
add
std
mov
fisttpll
inc
mov
or
addb
lcall
outsl
sti
or
call
andl
cmp
sbb
nop
aam
pop
repnz
push
add
push
and
mov
push
xor
dec
add
in
cld
mov
cmc
loope
xchg
ja
mov
andb
mov
ja
sbb
and
jg
fcoml
test
lcall
or
inc
out
lock
fisubrs
repz
cmp
fdivp
jbe
sub
andb
push
outsb
push
mov
dec
jnp
push
fisttps
hlt
push
sahf
lods
jbe
sub
imul
out
pop
dec
inc
lcall
lock
pop
push
imul
call
push
arpl
or
or
push
add
sbb
mov
jp
shll
movsl
scas
mov
sbb
adc
inc
add
push
fs
mov
repnz
out
test
popf
xor
jo
pop
mov
add
dec
cmp
lock
adc
cld
cmp
jo
out
mov
icebp
mov
jae
mulb
cwtl
inc
dec
in
jb
test
imul
in
jmp
add
mov
push
mov
mov
mov
dec
rorb
loope
in
popa
dec
or
fimuls
lahf
rclb
sbb
cs
stc
scas
lret
jns
mov
mov
loop
jbe
addr16
and
test
jae
jp
xlat
arpl
stc
jb
lods
push
push
dec
xlat
adc
xlat
out
hlt
or
filds
jecxz
out
js
mov
std
out
clc
repz
lock
adc
mov
push
test
add
popa
mulb
push
mov
mov
mov
xchg
cmp
sbb
fwait
ja
insb
xor
fsubs
push
icebp
pusha
xchg
lea
call
push
aaa
pop
stc
pop
inc
in
mov
out
inc
add
in
xor
out
xchg
out
loop
insl
ljmp
xchg
incb
xchg
pop
pusha
movsl
xchg
test
mov
test
xchg
popf
repz
add
inc
bnd
cwtl
mov
mov
imul
adc
fistpll
pop
xchg
and
add
add
push
mov
mov
pop
ret
loop
sbb
mov
repnz
sbb
inc
mov
push
test
ret
push
xchg
jnp
mov
jmp
add
lock
sahf
ja
cmp
jp
gs
data16
dec
xchg
lods
xchg
push
or
inc
sbb
jmp
jns
stc
arpl
shrb
out
jne
mov
cltd
frstor
pop
ds
mov
dec
pop
mov
jmp
fistps
je
dec
sahf
inc
aam
push
mov
shl
inc
in
daa
fmuls
rcrl
push
lds
int3
adc
popw
pop
xor
sbb
test
fnstsw
sub
rcl
icebp
pusha
adc
or
flds
cltd
cmp
push
jge
mov
xchg
fwait
jne
add
fwait
outsb
adc
or
pop
add
inc
movsl
jae
xor
cwtl
enter
jge
inc
xchg
les
cmpsl
and
or
cmp
mov
test
add
inc
cmp
cmp
lcall
imul
xor
dec
push
jecxz
lret
sti
sbb
stos
inc
add
jge
leave
js
sbb
push
mov
js
or
cmpsb
dec
sbb
adc
dec
pop
fsts
and
sti
sub
push
test
mov
push
pop
shrb
mov
xchg
pop
mov
inc
adc
je
dec
push
mov
jl
cwtl
outsb
dec
outsl
aas
outsb
pop
xchg
cltd
xor
lret
rep
cld
cs
test
dec
pop
jle
inc
add
out
je
sub
lock
loopnew
lods
adc
mov
and
arpl
cmp
inc
fdivr
adc
insb
jne
ja
bswap
or
and
call
push
mov
jnp
sarl
cmpsl
add
jno
ss
vpsrad
mov
enter
xor
or
dec
pop
dec
loope
xchg
mov
adc
arpl
iret
cltd
jae
popf
in
adc
cli
cmc
xchg
cltd
mov
inc
sub
daa
xchg
iret
mov
std
ljmp
jge
hlt
leave
pop
stos
rcll
enter
xor
sub
push
stos
ljmp
mov
cmp
outsb
xchg
aam
xor
out
mov
or
outsl
icebp
bsf
js
sarl
inc
dec
adc
jno
aas
adc
lock
sub
test
cmp
xor
or
ljmpw
xchg
pop
mov
mov
push
inc
mov
sbb
mov
dec
dec
mov
xchg
jne
mov
sub
sbb
jns
dec
pop
pop
int3
cli
mov
test
add
loop
push
ds
add
ds
out
xor
and
push
lds
fwait
dec
adc
loop
xchg
jnp
sub
lods
loopne
pop
lret
cwtl
push
mov
fs
mov
out
dec
adc
into
repz
sub
fisttpll
pop
int
sbb
das
adc
push
inc
mov
dec
add
int3
pop
testl
das
adcl
cmpl
push
mov
or
pusha
xor
push
leave
data16
jne
push
int3
popa
daa
xor
adc
push
jecxz
mov
push
inc
mov
dec
and
pop
sahf
lret
out
jge
cmp
mov
dec
jb
sbb
jecxz
adc
imul
iret
xchg
xchg
add
arpl
das
fstpl
xor
aam
push
out
out
and
mov
aas
inc
push
pop
int3
push
xchg
iret
ds
test
mov
or
popf
gs
lret
pusha
jb
fs
mov
fcomps
xchg
or
pop
fmuls
push
xorb
out
xor
int3
xor
addr16
add
xor
adc
inc
jne
sbb
push
cmp
aas
cmp
cmpb
hlt
add
icebp
and
or
xchg
pcmpgtw
push
lcall
cld
sbb
clc
out
addl
push
lret
scas
and
push
mov
adc
add
mov
xchg
cmp
push
or
lds
and
in
mulb
insl
lret
mov
lret
push
scas
cmp
pop
rcrb
cmc
sbb
inc
mov
push
lret
ja
add
pop
pop
clc
dec
mov
or
push
add
inc
rol
xor
jmp
test
push
or
vpperm
mov
push
iret
arpl
scas
sub
or
pop
cmp
dec
add
jno
incb
lahf
test
insb
popf
mov
xchg
rolb
dec
call
pop
out
pop
cmp
mov
cmc
call
cld
cwtl
inc
fwait
mov
fists
fcoms
fildl
mov
lods
ret
and
sbb
adc
out
out
out
sub
sub
dec
daa
xor
popf
mov
loopne
add
ret
push
fadds
fstpt
ljmp
cmp
fldl
adc
imul
popa
popf
adc
lret
aas
cmp
std
xchg
pop
sbb
xchg
out
push
iret
pop
sbb
adc
adc
cltd
inc
pushf
adc
js
push
ljmp
je
dec
stc
push
test
stc
jae
stos
add
jno
iret
movsl
adc
xor
cmp
scas
adc
xchg
popa
dec
sti
adc
lret
xchg
js
mov
cwtl
xchg
cs
sbb
xchg
ffree
lds
mov
push
add
push
mov
inc
jp
xchg
stos
lret
adc
imul
cmp
stos
mov
xchg
sahf
repnz
adc
xor
fwait
int
mov
pop
mov
dec
and
push
popf
push
jecxz
cmpsl
lods
test
xchg
push
stos
cmpsb
pop
clc
scas
cmp
push
sub
aaa
daa
xchg
mov
cmc
mov
aam
ret
xchg
nop
push
xchg
dec
add
movsl
mov
hlt
add
sti
mov
and
jns
cmp
pushf
aas
pop
xchg
movsl
fsub
test
and
les
in
cmp
push
daa
loopne
pop
or
mov
push
and
mov
mov
imul
std
into
dec
sbb
popa
int3
test
jp
pop
jbe
pusha
fistpl
pop
mov
enter
call
out
shll
push
xor
pushf
xchg
mov
es
xchg
call
ficomps
test
and
nop
ja
popa
xor
xchg
fs
in
mov
pop
std
xchg
pop
add
cltd
iret
mov
outsl
loop
inc
loopne
hlt
leave
outsl
je
xchg
cmpsl
enter
das
mov
fistpl
pushl
cltd
cmpsl
ja
push
and
jp
mulb
and
in
fcmovu
mov
js
and
jge
sbbb
rcrb
dec
aaa
lods
lea
ljmp
in
jg
or
lock
mov
mov
clc
add
nop
out
testb
jmp
cmp
cmpsl
push
mov
fs
int
inc
inc
ficomps
sub
in
push
lock
lret
int
xlat
xor
mov
mov
pop
scas
fstps
add
fwait
ljmp
lods
or
cld
xchg
shll
pop
into
cmc
adc
mov
out
fiadds
lock
push
arpl
call
mov
out
pop
xchg
not
outsl
mov
or
and
fcmovbe
mov
and
repz
push
dec
out
hlt
test
mov
adc
mov
outsl
jae
movsl
mov
in
sub
xor
push
xor
ret
cmpsb
or
out
dec
mov
xchg
ret
ds
andl
or
test
outsl
test
out
xor
mov
or
out
dec
lahf
sub
push
lods
add
pop
mov
inc
add
dec
xchg
jno
jno
and
add
adc
and
push
ret
imul
xor
pop
fiadds
push
push
repnz
add
data16
fnsave
xchg
aaa
mov
sti
inc
sub
pushf
add
jle
pop
mov
jmp
jnp
sbb
repz
pop
push
mov
jae
ret
mov
out
in
and
fcoml
nop
imulb
icebp
sbb
movsl
rclb
sbb
mov
cwtl
sbb
inc
and
adc
les
je
rolb
pop
push
add
pop
mov
cltd
outsb
pop
cmpsl
ds
in
sub
sbb
push
pop
shr
fisttpll
mov
sub
mov
gs
adc
mov
std
pop
int
dec
stos
test
or
sub
dec
orb
repz
push
pop
cltd
aas
mov
shrl
call
cli
sub
js
cmp
fistl
notl
jo
in
or
mov
fs
xor
jle
add
cmp
arpl
sbb
aad
mov
stos
aad
push
xchg
push
inc
cld
fcmovnbe
dec
and
add
jno
or
push
sub
stc
das
jle
cmp
inc
mov
xor
push
icebp
cmpsl
mov
jle
adc
push
inc
imul
mov
mov
adc
aaa
sub
es
das
inc
xchg
pop
call
out
std
jns
xchg
mov
scas
aam
xchg
loope
jbe
ljmp
jo
pop
std
pop
pushf
dec
sti
in
jbe
int3
repnz
and
incl
sbb
adc
sub
leave
mov
push
popa
mov
addr16
clc
pushf
or
repz
daa
je
ss
mov
in
icebp
lea
adc
fnstenv
shlb
test
mov
and
fsubrl
std
pop
cmpsl
lods
xchg
or
dec
jns
clc
jge
push
rcrl
dec
in
jecxz
jl
mov
mov
shrb
pop
jns
xor
pop
dec
dec
scas
dec
or
xor
sahf
mov
xor
pop
das
pushf
pop
addr16
cmp
or
aam
sub
cmc
in
mov
adc
popa
adc
outsl
mov
sbb
std
mov
cmp
pop
stc
ret
mov
and
jl
sub
add
add
pushl
repnz
dec
std
mov
cmp
push
test
add
addb
xchg
xchg
rcrl
push
sbb
cmpsl
int
xchg
mov
subb
pop
pop
sub
in
push
pop
out
movl
cmpsl
enter
push
fadd
jge
jns
mov
imul
sub
jmp
jp
mov
push
ret
mov
xchg
mov
sub
dec
add
inc
imul
xor
push
insb
mov
pop
and
rorb
in
loop
sub
into
add
cmp
pop
mov
push
nop
fisttps
loopne
mov
push
sarl
mov
sbb
movsb
movsl
je
stos
jge
in
adc
mov
test
scas
jno
or
mov
jno
ja
dec
lods
sub
hlt
imul
pushf
mov
add
cmp
fidivrs
imul
xchg
mov
flds
xor
dec
or
push
adc
mov
xchg
cmp
test
pop
mov
daa
cli
push
cltd
xchg
imul
xchg
adc
add
jne
je
cmp
mov
jb
les
pop
add
stc
fucom
shr
and
imul
lret
dec
es
cmpsl
leave
mov
arpl
lahf
mov
ret
aaa
xor
xchg
dec
test
jle
test
push
fsubrs
mov
aam
adc
cmpsl
mov
sub
adc
jmp
cmp
in
xchg
pop
es
daa
int
in
sarl
jge
mov
into
dec
enter
imul
rcrb
push
into
mov
mov
add
stos
jle
fnstsw
jmp
mov
out
dec
out
lret
iret
mov
gs
outsb
and
movsl
test
mov
popf
adc
and
leave
loop
mov
xchg
pop
add
lock
lret
add
sbb
lcall
or
mov
push
push
aad
orb
scas
cvtps2pd
fnstcw
adc
inc
and
insb
push
mov
jl
fistpl
test
repnz
sub
add
pop
push
adc
xor
mov
lock
out
xchg
lds
push
inc
push
sar
sbb
push
sarl
xchg
push
rcrl
mov
mov
sbb
insb
push
or
jbe
repz
jge
pusha
cmpsb
adc
int3
mov
jo
inc
cmp
jbe
push
add
fs
scas
push
lods
call
lea
jnp
or
lock
mov
inc
mov
decb
stos
jne
in
stos
lret
pop
jge
cmp
les
divb
mov
sub
rorl
sbb
sbb
inc
je
loopne
xchg
sbb
repnz
in
popw
xor
mul
cmpsb
jmp
mov
mov
daa
mov
daa
rolb
hlt
sub
mov
push
lret
pop
xchg
mov
lock
in
js
out
pop
and
jle
jmp
ja
inc
stc
add
add
mov
xor
add
fucomp
mov
sbb
stos
inc
adc
insl
arpl
aad
cwtl
rcll
and
scas
jbe,pt
mov
les
lods
imul
js
add
add
xor
fists
fisubl
xlat
add
test
test
adcb
push
jnp
hlt
aaa
mov
add
loopne
mov
xchg
pop
mov
pop
aam
stos
dec
mov
push
aam
jne
mov
or
xchg
ret
adc
imul
push
movsb
push
psrlw
push
aas
aad
rorl
out
orb
and
jp
xchg
xor
push
sbb
xchg
push
aas
rcpps
or
dec
das
pop
xor
es
jle
mov
js
jbe
icebp
jl
in
fs
mov
lret
jmp
pop
inc
pushl
inc
jecxz
pop
lods
xor
ficoml
pop
vmovupd
and
pop
add
inc
and
adc
in
imul
shlb
inc
xchg
inc
ror
or
dec
cmc
insl
clc
pop
rsm
in
shl
rorb
fcomip
roll
lds
cld
and
in
xor
mov
mov
fucomip
mov
xchg
mov
jbe
jo
pop
clc
sti
gs
sbbb
inc
jle
pop
adc
xchg
ja
aas
bound
incl
sub
and
pop
xchg
sbbb
clc
mov
cmp
jecxz
mov
adc
stc
push
push
pop
in
repnz
pusha
in
out
data16
xchg
xor
test
push
sahf
pop
cltd
xchg
mov
shr
mov
test
xchg
or
inc
scas
pop
push
ss
sbb
in
in
or
dec
iret
pop
mov
flds
push
jmp
faddl
sbb
pop
lods
cmc
push
cmp
jo
push
jns
in
cmp
mov
jecxz
sbb
sub
sti
or
mov
aad
xchg
bound
hlt
or
iret
or
adc
std
jl
dec
out
sub
int
sbb
divb
jne
jl
xor
and
test
dec
es
aam
adc
cmp
jmp
sahf
imul
xor
in
jns
movsl
inc
push
or
xchg
rcrb
out
xchg
pop
pop
stos
xor
jbe
xchg
out
js
xchg
lods
ja
les
mov
jp
jae
xor
cli
stos
cmp
fnsave
xchg
lds
dec
into
iret
fwait
cmp
push
adc
mov
mov
xor
les
insb
xchg
mov
in
inc
inc
mov
pop
scas
idivl
push
sti
mov
js
scas
sti
pusha
inc
sbb
or
mov
lods
cmpl
aas
xor
add
push
mov
add
sbbb
push
shrl
jae
mov
cli
sub
lahf
sti
sbb
xchg
out
mov
mov
lcall
cmpb
sti
stc
xor
leave
sbb
sub
and
pop
repz
out
inc
call
movsb
cmp
jbe
jge
and
fs
jl
ror
or
pop
inc
xchg
or
push
or
ret
push
stos
push
lods
xor
test
or
xor
decl
loop
mov
xchg
xchg
mov
push
xor
lret
je
mov
imul
inc
push
xor
test
xor
movsb
pusha
in
mov
in
xor
stc
leave
out
repnz
popa
out
pop
test
ss
push
mov
jo
imul
inc
inc
dec
jl
pop
jnp
arpl
shrl
xchg
je
bnd
push
shll
inc
jg
fcomps
xchg
adc
and
and
leave
int
lock
dec
loopne
sub
popa
leave
jb
cmpsl
cwtl
call
out
ficoml
mov
mov
pop
xchg
mov
out
je
sti
jbe
call
out
cmp
decl
call
cmp
sbb
scas
dec
outsb
in
xor
lret
mov
fs
std
scas
insb
dec
mov
adc
mov
cmp
mov
enter
xlat
in
pop
test
mov
cmp
ds
gs
shl
movsb
je
jmp
cli
pop
mov
mov
repnz
loop
inc
loop
or
mov
xor
orb
shll
call
add
lods
jnp
and
das
pop
dec
cmp
mov
loopne
outsl
sbb
test
rorl
loope
or
lds
sub
ret
cld
jmp
add
mov
addr16
movsb
mov
clc
jmp
inc
jo
adc
int
mov
mov
sbb
imul
jae,pt
push
ret
stos
in
out
pop
inc
sarb
jns
sbb
icebp
inc
and
sub
clc
loop
xchg
dec
and
test
cmp
into
adc
hlt
or
adc
and
cmc
pop
xchg
lret
sbb
test
ficompl
cltd
out
jle
pop
xor
and
das
lds
leave
jns
sti
iret
and
push
xchg
xor
jle
dec
lods
nop
fadd
mov
inc
sarb
fistpl
addr16
lods
mov
push
sub
jns
add
and
pop
icebp
into
xor
repz
je
push
or
xchg
das
inc
fisttpll
cmpl
push
fisttpll
mov
or
jp
mov
repz
push
ja
fstps
mov
cmp
fldl
cmp
mov
bound
xor
push
push
mov
loopne
fistpl
aam
out
popa
mov
popf
dec
aad
sub
cmc
repz
jb
mov
push
loopne
pop
test
das
mov
jo
das
cmc
pop
xor
inc
adc
loopne
sub
jp
ret
mov
mov
pop
ljmp
cmpsl
jecxz
or
xchg
sub
ficoms
xor
mov
sti
xchg
mov
adc
add
pushf
mov
rcl
aam
stc
mov
pop
mov
or
jne
cmp
mov
sahf
jns
jl
xchg
and
fwait
xor
cld
cs
mov
sub
push
ja
loop
inc
add
in
push
jge
mov
pop
push
dec
arpl
and
sub
fimuls
sahf
inc
pop
testb
lahf
xchg
shld
xor
mov
bound
cmpsb
jecxz
fnstsw
pop
jp
pushf
mov
mov
mov
lods
int
jnp
pop
cltd
mov
push
aas
and
addr16
cltd
pop
insb
cmpl
jmp
std
jg
sbb
pop
mov
fmuls
sub
cmc
aas
and
dec
mov
or
ret
loop
int3
lds
fmuls
jae
lock
into
lock
int
lods
inc
int3
xor
loopne
inc
repnz
into
and
push
inc
adc
pop
aam
xlat
add
sub
add
pop
ljmp
insl
jle
mov
push
jg
or
data16
add
pop
outsb
inc
add
popl
repnz
popf
push
cs
dec
lock
sub
jl
cld
mov
xchg
insb
fdivl
daa
stos
jge
mov
lahf
push
aas
cmc
loop
ret
push
push
jp
dec
xor
sub
add
aas
dec
in
flds
fsubs
sbb
push
cs
ror
xor
mov
insb
pop
xlat
push
movsb
dec
fwait
insb
loopne
fistpll
into
shll
cmc
jp
or
sti
ret
xchg
pop
xor
ds
jmp
and
jo
sbb
enter
jmp
push
mov
sub
lock
and
imul
mov
cmpsb
loope
ss
push
and
insb
jno
xchg
pop
add
mov
xchg
jmp
push
clc
mulb
mov
pushf
mov
cs
jmp
sti
xlat
sub
int3
and
push
add
mov
cmp
aam
sti
out
bound
inc
sub
xchg
cli
mov
sub
movsl
outsl
fimuls
dec
aas
push
insb
pop
shr
in
sti
pop
inc
cli
in
imul
ljmp
or
mov
mov
and
addr16
and
lods
mov
gs
adc
scas
adc
enter
sbbb
xor
xor
lock
inc
mov
cs
cltd
repz
xchg
das
adc
inc
xchg
mov
popl
out
xorb
mov
les
jge
add
xchg
test
sahf
adc
pop
pop
or
inc
scas
dec
fimull
imul
cwtl
mov
aas
fcmovnbe
mov
insb
fwait
push
inc
cmp
sub
sahf
xchg
fsts
dec
xchg
xlat
movsb
inc
scas
add
mov
jmp
push
lock
loope
pop
sbb
dec
ljmpw
xchg
es
or
inc
or
pop
cmp
cmpsl
adc
mov
js
cmp
out
lds
into
xorb
ffreep
sub
fcompl
ss
xor
fld
push
pop
sti
xchg
icebp
mov
sbb
mov
push
imul
add
int3
sbb
movsb
loopne
fidivs
subb
mov
mov
add
dec
sbb
js
out
xor
jp
dec
or
enter
cli
call
xchg
hlt
stos
pop
push
hlt
es
dec
insb
daa
ds
sbb
inc
dec
std
out
inc
cmpsb
mov
push
shlb
test
pop
mov
sub
xchg
push
fsubrs
adc
daa
lea
lret
xor
jne
test
call
pop
lret
sub
adc
sbbb
inc
cmp
xchg
bound
push
arpl
pushl
jns
xchg
into
mov
push
mov
enter
inc
or
inc
pushf
fidivrl
ss
scas
jb
loopne
cs
inc
sbb
pop
stos
in
cli
cwtl
adc
dec
adcl
push
mov
stc
dec
das
mov
dec
nop
adc
out
imul
repnz
sbb
push
cltd
xchg
ss
jbe
sahf
push
in
jle
mov
lods
jecxz
sbb
cli
inc
sti
loopne
addb
incl
cmc
outsb
arpl
mov
shll
mov
or
in
and
adc
push
lea
cs
ja
sub
pop
push
push
jecxz
loop
test
fldenv
adc
or
pushw
enter
sub
add
push
fwait
push
or
lods
mov
sub
popf
leave
push
mov
sub
or
xor
dec
pop
int
imul
mov
inc
shrb
add
inc
shlb
fdivl
jbe
pop
aas
shrl
add
test
xchg
ret
pop
jns
inc
cmp
lret
push
cmp
add
call
cmp
std
xchg
cmpsl
iret
pop
lds
adc
sbb
pop
xchg
lcall
mov
lcall
mov
insl
pushf
scas
adc
sbb
adc
addr16
testl
insl
outsb
pop
clc
and
stc
into
adc
ret
pop
hlt
and
sarl
insl
sub
and
adc
xchg
inc
sbb
or
push
cmpsl
fwait
push
sarl
test
ret
xchg
aas
push
pop
mov
or
ds
fs
adcb
and
jb
inc
daa
stos
adc
das
inc
sahf
aaa
iret
xchg
cmp
out
push
je
movsb
sbb
mov
cmpsb
push
cmp
adc
xor
adc
add
adc
enter
outsb
imul
dec
mov
dec
shll
sub
cmp
mov
lret
add
dec
or
stos
xchg
dec
mov
jno
jo
pop
and
hlt
cld
out
popf
and
int
pop
dec
fisubs
dec
lock
xor
pop
mov
cmpl
pop
jbe
cs
xor
sbb
scas
push
jnp
and
loope
push
push
sub
sti
jo
xchg
mov
in
push
sbb
push
mov
jmp
push
sub
mov
sub
jecxz
aad
ret
movsl
lcall
mov
push
lahf
xchg
xor
mov
lods
pop
in
sti
pop
add
xchg
and
ds
enter
xchg
cld
rep
addl
push
mov
mov
or
sbb
into
cld
adc
adcb
adc
dec
and
ret
fstps
in
push
mov
push
sub
and
fistps
push
test
push
repnz
jmp
sbb
in
xchg
scas
dec
out
push
cli
insl
or
insb
mov
jge
sahf
push
cltd
mov
xor
xchg
xchg
mov
clc
sub
mov
dec
pop
dec
iret
stos
adc
test
nop
push
mov
push
loopne
inc
xor
xchg
mov
lret
mov
and
test
jno
lods
aas
fdivl
cmp
mov
loopne
cmc
mov
test
xor
push
dec
in
or
outsl
testl
inc
out
jne
cld
cld
lds
or
inc
or
jg
cmp
sub
mov
and
push
fnstcw
subl
cmp
roll
push
repz
and
mov
mov
push
xorl
and
out
fdivrs
ds
rcll
mov
movsb
outsl
adc
icebp
add
bound
incl
xchg
push
mov
pop
cmp
sbb
js
mov
or
lods
es
sbb
jbe
or
aad
cltd
push
add
pop
adc
jecxz
sbb
call
sub
lods
mov
enter
push
aaa
daa
scas
xchg
into
out
andl
repz
cmp
lock
xor
xchg
stc
jmp
lahf
mov
xchg
test
fs
sahf
sub
xchg
push
cmp
push
mov
and
imul
enter
lock
cmp
rcl
or
push
mov
jmp
popf
movsb
pop
pop
xor
push
xor
mov
mov
pop
jg
cwtl
sub
pop
add
out
les
jno
leave
adc
push
dec
and
xchg
jp
dec
aaa
test
pop
add
cmp
jo
cmp
push
cmp
xlat
inc
mov
pusha
pushf
sbb
pop
fwait
mov
shr
aam
mov
inc
pop
push
cmp
jbe
or
fstpt
ljmp
test
stos
stc
mov
nop
inc
fwait
mov
mov
out
outsl
adc
out
dec
arpl
pop
and
mov
mov
orl
popa
push
mov
inc
or
pop
adc
push
lret
xchg
lret
sbbb
sbb
hlt
nop
jecxz
call
repnz
cwtl
mov
arpl
cmp
test
mov
push
ljmp
jo
icebp
jbe
add
xor
repnz
or
xchg
lret
sbb
mov
pop
popf
xor
incl
xor
adc
stc
scas
int
les
or
inc
inc
sub
shlb
test
in
inc
push
mov
or
cmc
popa
insb
pushf
dec
pop
ret
sub
sub
mov
xor
imul
adc
imul
div
das
push
inc
hlt
and
cld
scas
fs
push
inc
call
lcall
adc
sub
and
pusha
xchg
xchg
test
jne
xchg
push
xchg
push
xchg
cmp
in
out
jmp
sbb
or
xlat
push
or
les
xorl
push
mov
ljmp
push
cld
ljmp
int
pop
addb
cmp
imul
rep
andb
jno
in
scas
mov
push
adc
out
ret
adc
ds
or
dec
pop
cmc
add
cmp
fcmovnbe
mov
jmp
push
addb
popl
imul
fadds
insl
aas
test
iret
mov
andl
call
test
pop
push
rcrl
mov
lcall
nop
test
test
adc
and
jmp
jb
cmp
movsb
xchg
and
jnp
sbb
mov
repnz
repz
jmp
nop
pop
add
in
test
mov
mov
pop
or
fldt
pushf
xchg
in
sub
mov
int3
jnp
sub
in
lret
clflush
jne
sarb
or
jge
xor
sti
cmpsb
xchg
repnz
cmovno
jp
mov
xor
insb
pop
sub
dec
push
lods
mov
movsb
sar
inc
das
js
es
in
pop
jl
aas
xchg
push
fiaddl
fidivrs
hlt
adc
shlb
fbstp
sbb
xor
mov
cmpsl
inc
ss
adcb
adc
in
fimuls
push
mov
xor
enter
jl
lcall
movsl
lcall
pop
sub
addr16
insl
daa
fs
arpl
push
or
dec
je
fs
push
sbb
push
pushf
sarl
inc
pop
fldl
jb
mov
lret
add
popf
repnz
ljmp
push
inc
push
imul
mov
mov
inc
cmp
in
sbb
ss
lods
popf
xor
arpl
jae
lahf
pop
mov
and
xor
pop
sti
stos
lods
js
dec
push
mov
mov
iret
mov
aad
push
in
fidivs
cmp
add
jg
xor
mov
loop
sbb
xchg
mov
mov
sub
inc
xor
hlt
mov
cld
and
cld
call
sub
xor
sbb
stos
xchg
int
and
stc
and
pop
cmp
mov
mov
xchg
cmp
push
mov
push
and
call
shrl
setno
ret
scas
fsqrt
xchg
or
push
mov
lods
dec
fcomps
lds
fs
sbb
mov
mov
movsb
mov
and
push
repz
or
mov
mov
in
les
lods
inc
lret
mov
clc
xchg
and
movsb
sub
add
stos
mov
pop
cmc
add
mov
or
jge
sti
jb
daa
mov
ljmp
hlt
pop
test
push
jp
int
je
sub
outsl
mov
ljmp
xchg
stos
lods
out
mov
xor
data16
stos
std
adcb
cmp
add
fcoml
js
insl
insb
pop
fs
add
xchg
in
add
pop
cmp
mov
pusha
xor
xchg
add
icebp
nop
dec
pusha
lea
and
fisubrs
insl
mov
dec
loop
xchg
cld
push
jns
mov
out
insb
rclb
jnp
insl
leave
mov
or
test
jae
divl
stos
nop
jmp
cmp
or
add
orb
or
push
cmp
mov
insb
mov
movsb
popf
daa
push
mov
xchg
leave
add
xor
jne
push
mov
cmp
or
das
int3
jmp
mov
mov
mov
or
push
outsb
mov
inc
sub
movsl
int3
outsl
or
mov
arpl
xchg
dec
xor
push
cld
inc
cmp
subl
mov
out
mov
adc
pusha
add
cmp
mov
out
push
loopne
iretw
xor
imul
out
data16
jmp
and
out
adc
aas
hlt
jno
fldl2e
gs
sbbb
mov
add
sub
mov
stos
ds
and
adc
movsl
cmp
loop
shl
xchg
negb
mov
outsb
iret
mov
sbb
pop
popa
xor
cmp
lret
scas
outsl
add
adc
cmp
dec
inc
je
jb
xor
xchg
xchg
sub
adc
pushf
loope
pushf
inc
lods
addr16
pop
xchg
hlt
inc
iret
data16
push
fstps
scas
push
sbb
jmp
xchg
mov
sub
out
or
mov
adc
les
mov
mov
int3
push
mov
iret
inc
lret
jg
cmp
je
jnp
fdivrs
xor
sub
inc
in
sbb
cltd
jns
leave
ds
mov
sub
or
or
jecxz
je
jnp
test
fsubl
and
pop
jge
mov
outsb
neg
ret
outsl
cltd
inc
push
sbb
xchg
icebp
add
shl
add
or
iret
adc
inc
cmp
icebp
fcomi
jno
and
pop
jp
mov
in
call
scas
jnp
jg
xor
aaa
inc
imul
cmp
imul
pop
push
in
loope
fdivrl
adcb
jns
pop
mov
and
fdivrl
insl
mov
test
dec
sbb
push
cwtl
mov
adc
imulb
push
repnz
ljmp
movsl
in
mov
outsb
lock
test
stos
dec
in
adc
cld
pop
mov
jge
xchg
out
adc
lods
mov
push
fmuls
xlat
inc
arpl
jne
test
in
push
push
and
add
negb
lods
imul
inc
xor
inc
shrb
mov
mov
jl
or
xchg
add
fdivs
movsl
int
rol
add
sub
pop
fdivrl
jae
shl
cmp
and
mov
jns
inc
push
das
push
or
add
xchg
mov
cmp
xor
xchg
lods
es
gs
pop
dec
xchg
inc
push
or
push
mov
push
test
cmp
sub
rorb
or
or
push
xchg
jecxz
sbb
mov
dec
movsb
mov
mov
pop
and
lret
dec
sub
dec
xor
arpl
movsl
and
arpl
pusha
ljmp
es
or
incl
sub
adcb
jbe
push
mov
leave
pop
jmp
stc
push
mov
or
xor
mov
dec
aad
dec
fisubl
push
popf
ds
arpl
inc
lea
cld
sbb
sahf
mov
popf
sbb
sbb
outsb
xchg
pop
push
adc
push
fidivl
out
leave
lock
insl
movsb
jecxz
sbb
dec
dec
lods
adc
adc
jnp
cli
jno
or
or
inc
stos
ljmp
pop
out
adc
insl
xchg
xchg
push
fs
mov
or
cmp
shrb
inc
inc
test
ljmp
xchg
addr16
and
daa
jbe
cmp
fadd
and
and
adc
xchg
mov
test
inc
dec
or
stc
or
mov
cmp
sti
cmp
dec
outsb
out
pop
jae
pop
pusha
movups
clc
jne,pt
dec
sub
daa
test
aas
test
sub
sbb
enter
bound
xchg
sbb
dec
das
cmpsb
mov
repz
dec
aam
inc
aad
push
add
pop
insb
push
inc
mov
es
mov
add
push
fadd
bound
xchg
pop
sahf
lret
daa
int3
mov
ja
aam
xor
mov
popf
sub
and
push
ss
jl
jmp
sahf
mov
stos
loop
push
xchg
in
in
dec
jle
xchg
inc
ds
jo
and
xchg
daa
ss
mov
dec
cmp
adc
pushf
xchg
or
dec
mov
jg
cltd
xchg
xchg
fcoms
sub
sub
mov
icebp
stc
cmp
adc
jnp
sbb
fstl
add
cmpsb
pop
push
mov
lods
sbb
jo
sub
mov
pop
jbe
sbbb
dec
loope
sbb
dec
roll
cmpl
aaa
push
insb
out
add
mov
test
sub
inc
int3
stc
jno
enter
aad
inc
mov
movsl
push
xchg
fnstenv
cmpsb
mov
xor
loopne
xchg
push
push
outsl
xor
inc
mov
jle
adc
cmc
fs
xlat
add
mov
call
push
jns
imul
add
mov
jno
xchg
filds
push
cmp
lahf
lds
add
pop
add
cmc
outsl
push
add
mov
loop
pop
in
cmpsl
sbb
imul
jbe
sub
out
cmc
sbb
xchg
jmp
int3
inc
in
cmp
mull
hlt
jne
sbb
lock
mov
push
mov
fcmovne
cli
daa
mov
push
ficompl
xchg
add
mov
and
call
or
fsubrp
shrb
jl
hlt
jne
aas
ds
adc
test
xchg
insl
fcomps
dec
loope
ret
lock
add
popa
in
mov
lcall
stc
lret
mov
sahf
loopne
lock
jmp
mov
add
add
mov
sub
sbb
imul
dec
push
xor
cmp
test
jl
xor
push
pop
scas
cmp
cmp
mov
stos
nop
cs
jne
insb
and
out
ja
adc
or
das
pop
add
int3
and
inc
nop
mov
push
cmp
xchg
stc
fisubrs
mov
bnd
cmp
sbb
out
cmc
jmp
pop
push
fwait
jmp
cmp
es
cmpsb
vunpckhps
stos
test
outsl
sbb
mov
in
push
je
push
std
fadd
xchg
rcrl
push
xchg
js
pushf
std
test
aaa
les
pop
decb
xor
ljmp
jge
mov
cmp
fwait
jg
cmc
cmp
xchg
repz
add
xor
arpl
jno
sbb
mov
push
cmp
cmp
adc
hlt
js
loope
notl
add
shld
cmc
mov
dec
outsl
or
icebp
stc
sub
shlb
sub
frstor
arpl
xor
out
and
arpl
outsb
ss
push
inc
push
leave
fldcw
andl
add
gs
push
push
test
jae
popf
pop
cwtl
imul
jmp
rcl
cmpsl
negl
pop
add
push
fsubrs
mov
jg
std
shlb
dec
sbb
dec
push
add
fdivr
lds
fsubl
dec
dec
decl
cld
mov
push
mov
in
mov
fistpl
or
mov
shll
inc
push
mov
popfw
pop
mov
mov
push
and
outsb
das
inc
xor
das
xchg
push
dec
inc
cmp
fwait
jge
adc
nop
arpl
mov
or
pop
dec
pop
jbe
lock
aad
mov
cli
rcl
jb
fdivl
sti
mov
loop
add
scas
lea
outsl
inc
and
pop
bound
pop
decl
out
in
repnz
ret
mov
test
loopne
mov
and
mov
mov
shl
adc
cs
xchg
mov
lds
pushf
xor
push
pop
mov
push
mov
es
xchg
sbb
dec
xor
arpl
lcall
mov
pop
xor
inc
in
daa
out
les
push
jae
repnz
pop
test
mov
add
shrb
es
xlat
jns
add
xor
sbb
inc
rep
jnp
push
idiv
push
pop
pushf
mov
es
jg
cmc
daa
jmp
mov
pop
dec
outsb
std
jbe
arpl
xor
lods
add
or
stos
cltd
cltd
add
mov
repnz
jbe
test
fnstcw
mov
add
dec
outsl
mov
mov
insb
div
in
pop
fsts
std
jno
pop
mov
cltd
mov
mov
loop
test
addl
push
testl
outsb
mov
dec
mov
mul
jle
mov
fcom
fs
mov
mov
js
scas
mov
ret
jecxz
lret
pop
out
int
into
mov
jo
adc
xchg
sbbb
daa
xchg
pop
icebp
cmpsb
sbb
push
cmc
xchg
xchg
inc
scas
mov
ret
sbb
in
ljmp
jo
lahf
dec
mov
xorl
repz
add
sub
add
out
push
push
mov
mov
add
pop
fisttps
fsts
dec
dec
and
dec
mov
faddp
cli
cmc
cmp
addr16
cmc
in
push
jns
add
mov
cmp
sbb
test
dec
fnstcw
in
incl
loope
lock
adc
gs
xor
cwtl
stos
ret
jo
xrstor
inc
sub
pop
ret
sub
subb
aas
in
std
xor
fmuls
je
jle
cmpsl
stos
cmp
es
cwtl
pop
or
jae
adc
ljmp
xor
cmp
mov
aaa
lret
jno
cmpl
and
addr16
or
sub
movsl
call
cmp
aaa
cli
pushl
push
mov
mov
mov
push
movsl
stc
cmpl
push
jmp
jo
lcall
cmp
cmpsl
loopne
xor
inc
dec
add
popl
iret
mov
clc
les
js
cmp
fstl
mov
xchg
dec
aaa
les
pop
cmp
inc
or
pop
or
jb
mov
aad
adc
es
test
imul
mov
mov
adc
xchg
xchg
iret
cmc
aad
push
popa
push
dec
pop
mov
adc
jge
aas
add
xlat
hlt
bound
lret
inc
daa
rcrl
bound
jecxz
cmpb
mov
mov
in
test
icebp
cmp
leave
dec
inc
test
ljmp
or
push
xchg
xchg
ja
enter
push
jne
sub
inc
push
iret
mov
mov
pop
jne
repz
jmp
pop
mov
push
pop
or
aaa
sarl
cmp
loop
aam
xchg
push
xchg
xor
out
cmpsl
aad
and
nop
scas
stos
pop
cmp
jge
fsubrs
pop
iret
push
push
xchg
jae
xchg
shrl
fstps
xchg
sub
sub
mov
cmp
adc
sub
xor
jmp
add
movsb
daa
and
hlt
sarl
aaa
mov
jmp
insl
or
sahf
inc
das
cltd
ret
test
inc
scas
sub
es
cmpsl
test
and
fistl
pop
in
bound
imul
jno
or
lock
int
inc
imul
js
push
ds
add
loope
mov
outsl
xor
insb
mov
aaa
lret
imul
cmpsl
iret
fnsave
call
inc
adc
cmp
adc
push
js
addr16
or
mov
add
std
mov
mov
stc
aas
cmp
cmc
loop
in
mov
xor
sub
xor
rorl
lahf
dec
xchg
imul
lea
adc
lahf
jecxz
push
repz
mov
scas
push
cmp
jmp
jecxz
or
movl
cmp
inc
fisubs
scas
out
adc
and
lcall
cmc
xor
inc
add
loope
inc
jae
xchg
shrb
push
dec
fstp
popf
push
popf
push
add
nop
icebp
ja
xchg
rorb
das
cltd
movsl
idivl
push
aas
daa
stos
clc
out
daa
jae
push
aas
xchg
xor
pusha
add
jl
sbb
pop
movsb
pusha
lret
lods
xchg
clc
ss
dec
repnz
cmpsl
ja
xor
daa
jg,pn
xchg
pop
add
mov
xor
pop
push
xor
icebp
sub
adc
xchg
push
dec
int
xor
in
push
push
push
add
add
and
loope
dec
jo
sti
mov
inc
mov
shl
cmpsb
xchg
call
or
ljmp
and
dec
les
inc
gs
call
mov
les
arpl
mov
cmpl
pop
jp
addl
daa
xor
call
loopne
cmpsb
or
mov
fldcw
cmp
das
in
mov
lret
xor
mov
push
fisttpll
jle
arpl
or
sub
xchg
insb
xchg
dec
in
sbb
cld
stc
hlt
lods
test
out
adc
in
divb
xor
ficompl
bound
mov
mov
jno
push
lods
and
jle
and
popa
jmp
repz
xorb
adc
cmp
and
cwtl
adc
pop
orb
jno
ret
hlt
or
jne
ret
popf
push
ss
repz
movsl
lods
push
dec
xor
sub
rorb
pop
mov
imul
push
cmpsl
call
sbb
or
push
and
mov
mov
add
push
out
and
aas
push
cld
mov
pop
test
cmp
lret
ret
mov
xor
into
lret
adc
and
loopne
dec
or
xchg
int3
neg
fwait
push
add
or
mov
sti
jo
jl
push
cmp
add
insb
cmp
aad
mov
leave
dec
aas
je
xor
push
clc
imul
sub
cwtl
jno
mov
mov
jnp
pop
mov
insb
add
push
xchg
push
sahf
adcb
or
outsl
popf
rol
push
outsl
cmp
js
mov
dec
pop
fidivl
negl
add
in
pop
fcom
xchg
outsb
in
js
loop
sti
push
push
or
cld
int3
insb
clc
jo
lock
pop
jmp
shlb
and
sbbb
scas
cli
ds
xchg
or
inc
frstor
jl
dec
shr
mov
jge
andl
out
xchg
and
push
xchg
pop
popa
sbb
mov
and
or
pop
pop
aam
cmp
aam
mov
jg
fmull
adc
and
loop
test
dec
mul
pusha
jmp
mov
jmp
pop
je
sbb
out
push
push
in
jg
jg
xor
push
adc
pop
cmp
jne
push
stos
mov
pusha
dec
xor
lahf
std
js
imul
sub
fcomps
dec
sbb
mov
mov
call
scas
pop
enter
test
ret
jb
in
xlat
filds
sahf
outsb
add
les
lahf
mov
das
scas
mov
sahf
mov
add
jo
into
mov
push
out
mov
jne
sub
stos
cmpsb
inc
mov
repz
push
sbb
jae
xor
inc
idivb
mov
mov
jle
push
or
cmc
movsb
imul
mov
inc
rcll
fs
push
mov
outsl
scas
movsb
or
fidivrs
hlt
jle
jle
inc
imul
lock
stos
mov
adc
sub
or
lcall
mov
les
and
pop
stos
sti
pop
pop
or
in
jnp
or
gs
jae
mov
insb
mov
adc
push
cltd
cmp
sub
push
cmpsl
or
xchg
xchg
das
lret
loop
cmc
jp
pusha
mov
ljmp
fs
dec
push
adc
adc
jbe
jecxz
shlb
cli
or
or
popf
sub
lcall
ss
cmpsb
or
fchs
mov
leave
dec
insl
sub
push
ja
pop
sti
jbe
push
mov
jnp
pop
and
shlb
inc
sbb
out
xchg
mov
bound
sub
sahf
push
and
mov
mov
add
pusha
adc
iret
mov
xor
in
notb
add
sbb
das
sbb
pop
ret
fnstenv
push
popf
xchg
fwait
xchg
lds
cmp
jb
mov
fwait
jl
test
mov
inc
cltd
ljmp
push
and
dec
jge
cmpsl
push
enter
mov
addr16
cmp
inc
stc
int3
jl
inc
lds
sub
push
sub
mov
orl
mov
pusha
stos
or
lcall
adc
rcr
dec
adc
outsb
leave
sbb
mov
mov
dec
pop
cmp
clc
mov
insl
outsb
test
push
dec
push
test
sti
pop
pop
notb
fcoms
adc
dec
daa
sti
fists
test
sub
ja
imul
push
nop
pop
mov
lahf
fstp
sub
cmpsl
lret
fnsave
test
mov
xchg
imul
mov
add
fsubs
pop
hlt
xor
test
clc
xchg
add
add
jno
loop
or
divb
or
test
pop
dec
sub
loopne
cmp
test
dec
gs
or
sti
add
push
ljmp
add
insl
ljmp
mov
hlt
push
and
fwait
jae
scas
lahf
outsb
cmp
mov
js
sbb
shlb
pop
inc
cli
push
mov
jnp
or
subb
mov
lret
hlt
ds
dec
test
icebp
push
and
jl
aaa
popf
jb
in
mov
aam
clc
roll
repz
mov
inc
mov
add
xor
jne
add
cmpsb
divb
je
jb
mov
mov
xlat
adc
rclb
shrb
fdivs
repz
data16
pop
sbb
dec
jp
das
data16
rolb
xor
pop
pop
daa
imul
mov
mov
pop
inc
mov
fdivl
push
pop
jae
daa
adc
inc
add
and
lcall
dec
jecxz
icebp
sbb
jle
into
fdiv
sahf
sahf
sti
or
jae
test
out
add
xchg
data16
cmpl
loop
xchg
dec
inc
pushf
aaa
cwtl
cmpsl
mov
enter
adc
fnstsw
ljmp
pop
jnp
imul
decb
sbb
das
dec
pop
fdivs
in
or
push
inc
das
loop
and
fisubrl
inc
sbb
repz
pusha
fidivrl
jl
mov
test
pop
jae
iret
daa
fisubrl
lret
aas
push
jle
sub
or
or
cmc
sbb
mov
pop
sbb
lret
inc
lcall
and
ja
cmc
jbe
pop
sbb
add
int
fadds
inc
incl
mov
jmp
jns
aaa
subb
sarb
insl
mov
movsl
mov
pop
stos
adc
mov
add
call
imul
mov
sub
lds
rcl
push
leave
inc
add
popf
jb
cs
es
sarb
adc
adc
xchg
push
movsl
push
aas
imul
ret
sub
jmp
xchg
lds
dec
hlt
mov
push
adc
jl
not
xchg
mov
imul
out
or
mov
mov
jmp
je
fdivrl
adc
scas
test
jnp
or
movl
test
sub
push
jae
outsb
xchg
mov
xchg
enter
xor
adc
test
bound
fs
ss
mov
push
out
and
jp
enter
xor
cmpsb
push
and
and
jo
cmove
mov
test
adc
pop
lock
test
addb
jg
jmp
rclb
mov
aas
cld
mov
lcall
sub
xchg
jle
cmp
insl
xchg
jno
mov
testl
xchg
int3
sbb
dec
jbe
xchg
or
xlat
fnstsw
leave
inc
jnp
sbbl
cmp
push
xor
jo
dec
popa
push
imul
xchg
push
jo
push
mov
adc
in
jb
jl
pop
rcl
mov
adc
rcrb
in
loop
xorb
cmc
and
sahf
add
pop
adcl
push
enter
aaa
pop
enter
or
ljmp
add
add
lods
mov
scas
nop
xchg
or
sbb
add
jae
cwtl
or
add
daa
test
push
push
lock
pop
popf
push
enter
lea
add
sub
pop
movb
rclb
lret
mov
int3
into
pushl
push
rolb
xor
inc
in
or
hlt
xor
inc
sbb
push
xor
cmovb
jmp
fxch
pop
leave
lds
mov
push
xor
cmp
out
push
cld
fcmovnb
push
push
add
mov
das
or
xor
in
add
pusha
mov
mov
lea
jle
add
dec
test
xchg
addr16
ret
and
js
roll
std
jnp
aad
mov
nop
mov
jg
mov
stos
push
ds
push
ja
jo
or
pop
pusha
cmp
push
aaa
cwtl
push
xor
push
ss
xor
mov
fstl
mov
push
repz
jo
and
lret
fisttpll
adc
dec
fiaddl
mov
je
adc
cmpl
fwait
mov
inc
shll
dec
scas
in
or
aaa
xchg
mov
std
out
or
sbb
sbb
repz
cli
fdivrl
pop
fsts
lea
fcompl
mov
outsl
xor
shrl
aam
lods
cmp
cmp
add
incb
inc
xchg
loopne
lcall
imul
xchg
adc
and
popf
push
rolb
lcall
mov
push
mov
xor
js
jle
and
aas
push
cmp
lahf
cs
adc
cmp
mov
or
and
xor
shrb
imul
pop
xchg
dec
sub
aas
ja
mov
sub
imul
sub
xor
xlat
ror
shlb
dec
pop
cmc
fmuls
jecxz
into
jl
sub
jmp
in
jo
jo
es
add
outsl
fucom
clc
push
fwait
mov
push
mov
mov
cmpsl
testl
push
pusha
mov
orl
cltd
mov
sub
mov
xchg
shrb
shrl
sub
adc
shrb
and
push
les
stos
lods
or
jnp
lahf
jl
out
push
cmpsl
push
lock
aas
negl
mov
lock
push
int
add
mov
and
fcmovnu
sub
xor
iret
shll
pop
daa
lods
daa
es
cmc
ret
sti
or
and
repz
jno
loope
xchg
repnz
hlt
loopne
push
xchg
fsubs
mov
jle
push
xor
mov
jne
push
ds
icebp
lahf
out
push
in
mov
jae
push
push
rcrl
jbe
test
lock
sub
lret
negl
cmpl
aas
add
fmul
loope
inc
mov
jae
or
outsl
jge
test
lahf
xchg
mov
push
inc
cmpsb
inc
adc
mov
sbb
cwtl
sub
sarl
lret
mov
push
sub
mov
and
add
sahf
or
int3
jg
sbb
mov
push
mov
xor
popf
mov
mov
out
pop
iret
cmp
stos
mov
mov
or
sbb
aam
loope
xchg
imul
lock
paddusb
lods
mov
inc
lahf
andl
jne
mov
push
shrl
ds
and
or
ja
mov
xor
stc
mov
mov
mov
inc
add
test
xchg
clc
xchg
mov
cmp
fimuls
sub
cli
sub
push
wrmsr
loop
subl
push
cmc
jno
pop
ret
adc
les
js
inc
das
out
test
xlat
pusha
xorl
mov
out
xchg
add
jne
xchg
dec
xor
cmp
test
mov
gs
mov
xor
cmp
ja
add
mov
out
and
imul
ljmp
and
jle
gs
in
sar
jle
fdivrs
pop
cmp
mov
shr
cmp
adc
jmp
and
cs
mov
add
add
or
mov
imul
int3
or
adc
add
outsl
lret
xchg
add
and
xchg
push
push
jae
xchg
sub
and
xor
or
xor
cmp
outsb
add
outsb
or
xor
popa
sbb
test
add
ja
int
lret
lds
andl
mov
mov
or
xor
pop
push
out
repz
mov
stc
xchg
sahf
sub
mov
xchg
cltd
push
xchg
addr16
dec
lods
and
push
jl
popf
dec
rclb
jmp
jmp
and
adc
fidivrs
shr
cmpsb
mov
arpl
mov
loop
and
daa
out
adc
xlat
and
lock
add
int
push
aam
std
ds
fsubrl
loopne
adc
mov
mov
inc
pop
cwtl
push
fstpt
and
push
dec
ffree
sbb
or
inc
mov
inc
lds
ja
xlat
daa
rol
jmp
notb
add
inc
popf
iret
cltd
adcb
data16
fistps
cmp
pop
fs
cs
inc
mov
and
shll
mov
jae
add
data16
cmpsl
cmpsl
cmp
fwait
nop
sub
dec
sbb
dec
push
jmp
adc
lret
outsl
fsubl
or
mov
push
das
and
rcrb
inc
ss
inc
bnd
movsb
js
push
aaa
hlt
dec
mov
insl
add
mov
mov
wbinvd
push
or
daa
lcall
sub
sub
je
mov
fidivs
xchg
or
inc
inc
add
and
fs
cli
rcrl
in
cmc
fcmove
push
js
repnz
xor
mov
aas
outsb
fcoml
mov
ret
stos
clc
fidivrs
aam
daa
je
adc
xor
orb
and
cwtl
xchg
sub
insl
fsubp
dec
mov
mov
loope
cwtl
add
sub
cmp
jle
jb,pt
dec
dec
mov
push
mov
mov
int3
and
cmp
sub
dec
movsb
in
in
jg
jl
insl
test
sarb
js
pop
xchg
ret
fimull
jne
jl
xchg
jg
inc
jbe
scas
or
lret
cld
add
push
xor
call
test
mov
lock
jl
mov
aam
jns
cmp
pop
and
std
sti
dec
inc
aad
outsl
xchg
shrb
xor
pop
sbb
mov
pop
ret
mov
push
sbb
lahf
xlat
js
arpl
test
xlat
mov
shlb
jg
in
mov
xor
xchg
xor
out
dec
jne
adc
xorl
mov
sti
push
jo
or
dec
xor
push
and
int3
mov
fldenv
lcall
cmc
ret
inc
mov
xor
clc
mov
add
stc
insl
sub
xchg
mul
imul
xchg
adc
xchg
imul
push
out
mov
adc
js
inc
insb
or
test
ss
mov
sbb
inc
loop
punpckhdq
jecxz
stc
add
sbb
and
push
inc
ljmp
fldt
jo
fdivs
sbb
mov
in
arpl
inc
jp
push
sub
lds
fwait
test
and
add
jno
fnstsw
mov
inc
imul
popf
lcall
ljmp
out
test
mov
enter
inc
push
lea
inc
xchg
jb
push
adc
loop
or
cmpsb
adcb
adc
outsl
mov
inc
sub
mov
push
mov
sbbl
push
adc
icebp
pop
ret
sub
adc
xor
mov
pop
push
leave
into
cmp
lock
int3
fwait
pshufw
iret
or
mov
fs
ret
les
mov
nop
clc
mov
inc
xchg
sahf
rcrl
call
test
insb
push
sub
mov
data16
fistpl
and
aad
cmc
sbb
push
js
mov
adc
push
add
rcr
xchg
dec
jp
pop
add
je
mov
pop
pop
push
jmp
xor
sbb
push
sbb
push
out
clc
and
rcrl
sub
inc
shll
and
aad
lods
add
ffreep
ss
setae
data16
xchg
mov
xchg
fwait
scas
lods
js
push
imul
adc
jp
cltd
adc
ljmp
xchg
adc
mov
add
inc
inc
sbb
imull
adc
sahf
test
xor
aad
xor
icebp
cmp
mov
sbbl
icebp
push
lds
inc
gs
mov
shr
jae
icebp
adc
je
xchg
xchg
cmpsb
add
dec
cmc
xchg
std
lret
dec
or
nop
mov
scas
dec
imul
cld
jo
pop
sahf
mov
mov
mov
cltd
mov
roll
stc
rcll
jp
sub
shrl
sub
ret
pusha
outsl
push
adc
pop
or
inc
pop
add
fnstsw
divb
pop
mov
jge
adc
xchg
adc
fs
sbb
xchg
pusha
sbb
jb
mov
inc
shrb
nop
xchg
or
dec
lldt
mov
add
lea
cmpsb
add
inc
js
xchg
mov
test
ret
test
ret
icebp
xchg
lods
clc
mov
scas
filds
xchg
fistl
or
xchg
mov
out
js
insl
inc
cmp
ja
test
mov
and
sbb
jnp
cltd
icebp
aad
pop
imul
lds
and
aas
ds
cmp
adc
xchg
leave
add
push
adc
dec
fnsave
and
clc
mov
imul
lret
call
or
arpl
in
data16
pop
xchg
mov
fildll
je
imul
add
lahf
jno
jae
push
adc
lret
les
xchg
add
xchg
mov
andl
cli
pusha
mull
int
jno
loope
lods
insb
sbb
mov
out
jbe
or
lds
push
fldenv
test
sti
shll
sarb
dec
xor
clc
sti
dec
push
movsl
roll
setge
icebp
xor
cli
ljmp
mov
daa
ret
adc
jne
pop
add
in
data16
stos
addr16
sub
fld
add
xadd
pop
cmpsb
sarl
pop
jae
cmpsb
mov
mulb
and
cmpsl
or
mov
andl
mov
dec
stos
sbbl
jbe
mov
ss
adc
adc
pop
es
jnp
lret
push
hlt
xor
push
xchg
sub
mov
ss
add
xlat
sbb
mov
jle
pop
adc
and
adc
inc
lock
xchg
jnp
cmc
hlt
and
divb
inc
pop
icebp
lods
arpl
mov
cltd
loop
xchg
shlb
insl
mov
pushf
jae
sub
insl
jle
sbb
sbb
xchg
or
cmpsl
add
push
mov
mov
out
fcmovnu
lahf
and
out
orl
inc
sbb
ss
mov
insl
or
and
fs
add
insb
push
mov
adc
lods
loope
mov
ret
jecxz
call
inc
mov
cmpsb
iret
inc
in
or
inc
fstps
out
jp
pop
jg
cwtl
push
ficoml
or
stos
mov
fwait
adc
scas
test
inc
mov
push
outsb
rcrl
cmp
jbe
into
dec
jmp
pop
lods
ja
insb
mov
ljmp
insl
stc
xchg
sbb
ds
pop
jl
fists
fcoms
lret
pop
int3
xor
cmp
nop
push
pop
sbb
cmpsl
test
scas
sub
int
pop
inc
divl
ret
out
mov
ja
rsqrtps
test
dec
xor
in
push
adc
ret
jle
outsl
add
vmovaps
mov
stc
test
int
mov
inc
push
sbb
enter
mov
sub
in
fwait
int
pop
push
cmpsb
out
repz
xchg
roll
xor
and
inc
mov
add
lods
insb
pop
repz
call
int3
pop
fmull
or
jnp
clc
cwtl
out
jmp
mov
loop
stos
push
xchg
lods
sbb
subl
xchg
into
or
cli
rclb
ret
fcmovnb
clc
roll
xchg
lahf
test
aas
push
jg
aaa
push
jbe
lea
inc
pushf
mov
popf
pop
mov
xor
mov
inc
jle
mov
enter
js
or
sbbl
pop
mov
in
xchg
addr16
test
movl
sub
mov
sbb
rclb
iret
mov
aad
dec
out
clc
add
add
shll
xchg
pusha
mov
dec
inc
mov
std
ss
idiv
rcrb
insb
jl
lret
ljmp
pop
mov
sub
jns
cmpsb
jns
int
mov
or
dec
push
and
cmp
add
icebp
sub
in
stos
mov
xchg
lds
stc
sbb
in
push
std
cmp
push
lret
sub
js
and
mov
mov
scas
cmp
cmp
mov
push
pop
add
bound
into
dec
xor
xchg
dec
popf
xor
add
int3
fcmovnbe
ret
xchg
cltd
xor
xchg
addr16
mov
pop
sub
call
cmpsb
gs
ljmp
cld
add
cmp
jns
adc
jo
jne
mov
jb
loopne
mov
xchg
jno
add
mov
call
cli
fcoms
jge
and
aad
lock
movsb
mov
rclb
fwait
adc
xchg
sar
xor
mov
iret
dec
mov
pcmpgtd
xor
aaa
mov
mov
out
fwait
notb
xor
ss
xor
xchg
xor
pop
enter
out
cmp
imul
ds
inc
leave
or
outsl
cld
or
ret
mov
push
lahf
jl
mov
insl
cmpsl
ja
sbb
loop
push
fildll
xchg
and
rol
icebp
cmc
adc
ds
lea
lea
scas
das
inc
faddl
dec
and
rorl
addl
jecxz
or
jbe
es
fisttps
test
or
push
in
stc
outsb
push
mov
enter
sbb
shl
es
pop
incl
inc
mov
idivl
and
jnp
xadd
sub
or
mov
sub
fwait
sub
dec
push
test
inc
stc
or
sbb
xor
sub
sbb
push
fs
subb
mov
push
push
cwtl
dec
icebp
xor
dec
fmul
out
jne
inc
add
scas
lret
out
pop
jno
fstpt
aad
mov
xor
nop
cmp
clc
popf
xor
adc
inc
jae
and
or
mov
mov
test
repnz
test
cld
jbe
mov
mov
push
cmp
in
or
scas
mov
mov
out
out
mov
iret
jno
ud0
test
or
mov
das
call
push
xor
mov
add
fldcw
mov
shl
pop
cld
loopne
aam
mov
cli
mov
fs
cmp
sub
push
xor
or
cwtl
sbb
mov
mov
adc
sbb
js
mov
mov
nop
int3
mov
push
xorl
lret
mov
mov
adc
mov
adc
mov
jecxz
jne
nop
or
cmp
jle
sub
sbb
js
lods
in
shl
sbb
push
and
das
aam
das
ljmp
out
mov
xchg
or
pop
mov
sub
cs
inc
cwtl
jmp
imul
dec
mov
loope
pop
mov
xchg
xchg
inc
inc
ja
hlt
jmp
inc
xchg
and
nop
and
loopne
jno
pop
adc
sub
shll
outsl
push
dec
clc
stos
sub
fidivl
mov
cmp
movsl
rcll
leave
sub
jb
arpl
push
add
and
cmpsl
sub
cwtl
sbb
popa
mov
jmp
adc
jge
imul
inc
mov
ss
and
push
cli
adc
cmp
and
pushf
jne
sbb
mov
flds
or
int3
repnz
rolb
pop
fs
cmc
imul
out
lock
dec
jb
imul
push
sti
adc
xchg
aad
test
xchg
daa
adc
rcr
or
outsb
aas
enter
pop
imul
xchg
push
icebp
xchg
mov
add
and
mov
lret
xchg
dec
cmpsb
mov
in
xchg
push
lahf
pop
dec
cmp
sar
stos
loopne
inc
insb
daa
mov
int3
inc
cltd
mov
dec
outsb
in
rcrl
fs
sub
idiv
xchg
fldcw
enter
in
lods
or
mov
push
push
adc
or
or
sbb
movsb
jg
ja
lcall
enter
pusha
andb
ja
lcall
xchg
cmp
in
shr
sbb
dec
sbb
dec
test
scas
mov
ret
or
dec
push
and
push
cmp
fsubrp
outsl
ret
ret
out
ss
int
lcall
mov
pusha
jb
jl
ret
sub
mov
pop
or
je
fidivrl
and
inc
and
addb
sub
or
cmp
fcmove
daa
mov
inc
add
push
call
mov
cmp
fcom
std
sahf
cmc
imul
std
mov
das
es
fmull
inc
pop
loope
xor
or
pop
in
inc
mov
add
stc
mov
inc
insl
aas
pop
jge
stc
xchg
sbbl
or
mov
scas
mov
xor
sub
call
stos
xor
mov
pop
inc
sbb
xchg
insl
shrb
in
data16
cwtl
add
enter
jl
sbb
out
test
movsb
fdivrp
sub
mov
rcll
sub
scas
fmul
mov
mov
add
push
test
jl
push
scas
mov
inc
xchg
mov
movsb
push
scas
inc
mov
outsl
add
jae
andl
cmp
imul
fistps
xchg
movsl
jbe
div
mov
ss
jmp
xchg
out
in
cmp
jae
dec
mov
and
fldt
pop
sub
mov
jmp
mov
push
shrb
lret
xchg
inc
clc
les
mov
xor
or
lods
das
ljmp
stos
inc
jno
add
push
cmp
mov
mov
jnp
jle
add
or
add
jne
mov
or
leave
ret
pop
repz
cld
mov
filds
mov
jecxz
fcoms
loope
shr
sub
aam
and
pop
push
cli
sub
jle
xor
cmp
dec
jnp
out
mov
and
inc
out
divb
dec
mov
dec
mov
stc
rcr
inc
or
mov
mov
adc
out
add
dec
popf
fisttpll
outsb
xchg
lret
xchg
xchg
arpl
pop
mov
divl
dec
stos
xor
inc
sbb
and
add
adc
rcr
cmp
aam
scas
and
or
sahf
cmp
xor
mov
imul
push
loope
mov
outsl
inc
lods
mov
mov
rcrb
das
mov
test
jl
es
mov
push
ret
in
sub
lods
inc
ret
insb
mov
mov
mov
mov
sub
mov
cli
jp
xor
cmpsb
in
mov
icebp
adc
mov
mov
sbb
stos
mov
pop
into
aad
jg
fsubrl
lea
sub
les
imul
inc
pop
adcb
add
xchg
les
outsl
clc
cmpsb
neg
out
inc
adc
gs
xor
xor
ss
out
hlt
xchg
xchg
ror
decl
xchg
pop
xlat
mov
fwait
aaa
adc
cld
and
imul
mov
imul
test
fwait
cmp
cmp
aad
adc
mov
sbb
add
mov
dec
out
add
push
mov
insb
cmp
inc
repnz
cli
dec
fdivrp
jnp
je
pop
lret
jg
jmp
psubsb
xchg
fstpl
fiaddl
and
insl
push
sub
pop
mov
addb
and
and
mov
dec
fistpll
pop
stos
fisttpll
push
mov
enter
mov
sub
mov
sub
inc
ffree
mov
in
sahf
out
xchg
mov
sub
adc
mov
push
cmpsb
pop
leave
pusha
int3
sbb
lret
je
add
into
in
jae
push
ljmp
fwait
arpl
add
rclb
dec
push
stos
cmpsb
lret
cmp
push
add
jne
lcall
roll
fcomps
cmp
shr
push
js
outsl
pop
mov
fidivrs
mov
sbb
sbb
bound
in
jle
mov
aas
enter
inc
dec
jnp
stos
fidivrl
leave
pop
jnp
push
inc
sub
xor
push
or
mov
pop
popf
jno
xchg
mov
jmp
push
inc
adc
daa
data16
lret
lods
jae
push
cmp
lahf
rcrb
in
dec
inc
repz
sti
mov
out
jno
je
test
xlat
mov
push
push
lahf
pop
mov
fwait
movsb
dec
sub
xor
mov
mov
and
dec
jnp
adc
or
mov
addr16
mov
xchg
lcall
push
and
inc
sub
dec
aam
dec
popf
imull
dec
jbe
jl
stos
js
into
fsubr
movsb
dec
ljmp
repz
pop
dec
aaa
test
ljmp
shrb
movsb
loop
or
pop
enter
fdivrl
test
jns
das
xor
icebp
loopne
test
fisubs
push
mov
ja
fcmovnbe
or
mov
arpl
lahf
xor
sbb
popf
jnp
leave
int
shlb
imul
pop
in
nop
jmp
fwait
pusha
int
mov
stos
sub
xor
inc
push
adc
test
sub
popa
clc
call
add
or
ljmp
xlat
gs
lods
mov
scas
jmp
fdivrl
sub
lods
movsb
pop
sahf
xchg
cltd
mov
addb
dec
jg
ja
dec
and
sub
mov
into
pop
ret
repz
xchg
mov
inc
in
mov
adc
cwtl
lea
jl
inc
jne
andl
jmp
and
aas
decl
pop
ja
jp
lret
cmc
cmc
pop
leave
movb
pop
inc
pop
icebp
ss
dec
dec
mov
aas
pop
push
pushf
pop
mov
testb
mov
xchg
mov
adc
enter
inc
icebp
ljmp
int
aas
lret
or
pop
loopne
jge
insl
xor
stos
fucom
or
ja
call
mov
lds
in
adcl
movsb
arpl
sbb
lahf
aas
pop
bound
cmp
clc
out
bound
jmp
clc
and
and
adc
ror
xor
mov
xor
std
pushf
mov
mov
adc
bound
mov
jo
data16
fs
sbb
testb
ja
xchg
mov
pop
ja
lret
adc
adc
pop
jmp
fisttpll
xor
jo
pop
sub
dec
adc
sahf
adc
add
and
jb
rcll
out
gs
pop
cld
ret
ja
enter
sarl
sub
outsl
cmp
inc
ljmp
push
or
jge
mov
insl
push
rcrb
jno
push
mov
cli
shll
testb
fists
adc
push
push
ljmp
mov
arpl
add
movsl
inc
mov
mov
daa
enter
rolb
fs
dec
pop
jecxz
or
daa
dec
sub
mov
in
clc
xor
sbb
pushf
cmpb
and
popa
int
lds
test
xor
ja
in
loopne
and
fwait
sahf
pop
sub
mov
imul
mov
xor
pop
xchg
leave
jb
imul
adc
sbb
push
xchg
scas
out
cwtl
xor
cs
sti
cs
xchg
pop
inc
lods
bound
cmpsb
movaps
lock
xchg
ror
fisttpl
jae
sbb
adc
adc
adc
dec
aas
pop
jg
out
gs
out
daa
aaa
mov
int
mov
add
loop
lret
clc
and
std
and
inc
lcall
mov
data16
inc
add
nop
nop
mov
jg
cld
hlt
lock
mov
push
mov
add
aaa
dec
push
mov
insb
mov
mov
sub
adc
int
out
outsl
xchg
or
call
push
push
jns
pop
pop
fcomps
pop
int3
call
sbb
adc
pushf
xchg
sbb
sub
add
xor
das
push
les
push
sahf
sub
mov
in
bound
subl
stc
xchg
fcmovu
sbb
aaa
sbb
sub
data16
lcall
inc
mov
inc
inc
mov
mov
xor
inc
bound
fldt
stos
mov
sbb
in
ljmp
std
push
inc
lahf
and
push
aaa
lcall
mov
push
or
out
cwtl
loopne
sbb
roll
out
xchg
call
mov
scas
inc
outsl
lods
pusha
push
mov
add
xchg
into
lods
push
test
mov
arpl
movl
xor
insb
insb
cmc
popa
adc
mov
insb
loopne
push
testl
cli
jp
xchg
or
cmpsl
cltd
pop
mov
jae
pop
cmp
cmp
or
into
sbb
repz
pop
push
inc
jle
inc
pop
pop
sti
xor
inc
push
call
movsb
ss
xor
outsl
call
lcall
pushf
and
in
outsb
push
out
ret
fwait
hlt
stos
mov
daa
jg
aad
mov
hlt
push
sub
aaa
jbe
xor
push
out
icebp
imulb
fwait
xor
fcoml
sbb
data16
in
lret
in
and
dec
mov
shll
into
add
xchg
mov
mov
push
stos
jecxz
cli
mov
repz
lock
les
iret
xlat
mov
scas
in
jno
adc
lods
dec
mov
sub
outsb
dec
cld
call
and
xchg
fsubrs
xchg
cmpsl
lds
sbb
add
sahf
jg
ds
loopne
xor
and
and
pop
adcb
mov
imulb
jge
stc
mov
mov
aas
mov
mov
test
push
xor
int
add
rorl
les
arpl
pop
sbb
in
pop
getsec
lahf
push
repnz
popa
in
outsl
cltd
fcompl
jns
xchg
int3
dec
lret
fwait
out
stc
clc
testl
dec
xchg
stos
xor
sbb
cmp
dec
and
enter
dec
and
mov
xchg
imul
repz
xlat
and
int
out
mov
das
sbb
mov
dec
and
sub
rcl
jae
and
in
lret
mov
notb
cmpsl
xor
imul
cmp
mov
inc
add
mov
icebp
mov
jb
rclb
dec
movsl
mov
sub
adc
int3
xchg
inc
add
addb
jns
add
mov
dec
cwtl
and
cmpsl
or
xchg
sub
adc
aad
into
lods
mov
lock
sbb
outsb
les
push
fwait
inc
push
shll
dec
add
ret
cmpsl
aas
adc
add
mov
mov
add
jae
shll
sbb
mov
jmp
fisubs
fidivl
fsubp
into
cmp
cmpsl
cmp
negl
lret
ffree
fcmovnbe
ret
mov
inc
sub
mov
push
xor
fidivrl
dec
jle
add
xor
inc
mov
into
sbbb
sbb
scas
cmp
data16
add
pop
cltd
imul
adc
std
sbb
dec
enter
pop
outsb
call
js
jo
xor
inc
addr16
out
push
mov
into
roll
dec
inc
xor
sbb
push
test
dec
loope
imul
mov
mov
test
gs
into
repz
dec
sub
popl
in
add
xchg
jo
cld
in
inc
shll
add
mov
adc
sti
xchg
or
sbb
cmp
js
ret
cwtl
pop
dec
fdivl
pop
adc
and
and
int3
loop
es
leave
jb
cmc
in
adc
sub
lret
lret
orb
into
inc
repz
leave
pop
adcl
sti
subl
mov
repz
add
pop
dec
xor
stc
std
jo
pop
into
test
aaa
xlat
pop
cmpsl
loopne
and
daa
hlt
push
jnp
pop
cmp
push
insb
add
movsl
mov
cmp
decb
cwtl
pop
mov
jg
mov
hlt
inc
insl
rolb
int3
mov
dec
popf
mov
sub
daa
fcmovb
clc
out
bound
data16
ja
pushw
xchg
scas
mov
ja
xchg
int
ja
mov
ret
cmp
push
jge
pop
das
push
push
addb
xlat
or
call
imul
dec
pop
adc
pop
jmp
nop
jbe
pop
sub
and
out
cmp
pop
loopne
leave
sbb
lock
dec
out
leave
xchg
sub
lcall
outsl
pop
mov
pop
sahf
shrl
jns
incb
add
pop
mov
mov
or
jg
pop
das
inc
mov
sub
lret
jbe
mov
sbb
fs
sub
int3
in
mov
incl
popf
aaa
inc
and
aam
int
jb
enter
pop
jns
sbb
fmul
or
ficompl
stc
inc
cmc
pop
dec
xor
scas
cmp
dec
xchg
pusha
insl
lret
mov
push
push
int3
jecxz
imul
out
pmaddwd
hlt
cld
pop
es
cwtl
out
imul
popf
push
loope
in
fcomip
sahf
mov
stos
jo
rcr
enter
and
cmp
add
lcall
leave
add
mov
das
or
add
sbb
mov
add
adc
add
and
or
pop
cs
pop
xor
xchg
jno
adc
into
jl
insb
adc
pop
and
mov
add
setp
xor
lods
mov
clts
in
in
rcrb
es
add
pop
fcomps
pop
push
negb
cmp
outsb
in
scas
cmp
and
jo
lcall
cmpsb
lret
cmp
lcall
shrb
or
or
stos
dec
dec
sbb
and
std
xor
jge
jmp
or
adc
sub
xchg
ja
cs
hlt
cmpsl
daa
jg
xchg
cmpsl
adc
shrb
jmp
sahf
ret
and
jb
ret
dec
repnz
sbb
push
push
test
aad
push
lds
inc
enter
das
xchg
movsb
jae
jecxz
cmpsb
imul
push
pusha
lahf
and
xchg
jb
faddl
lcall
shrl
xchg
pop
fdivl
test
mov
pushf
sub
mov
popa
dec
testb
neg
icebp
jne
jo
xor
xchg
test
std
ljmp
roll
xor
mov
scas
arpl
adc
cld
test
and
outsb
adc
add
dec
sub
dec
sub
gs
xlat
addb
xor
decb
sub
and
xor
mov
pop
rcll
pop
mov
jae
jae
mov
xchg
shrb
pop
jnp
fwait
pop
stos
xchg
or
stc
rcrb
mov
mov
dec
int3
push
xchg
and
push
cmp
cmp
dec
and
xor
push
xor
sbb
ret
jmp
inc
xor
sti
adc
cli
dec
and
xor
push
mov
mov
sbb
push
adc
cmp
inc
fwait
dec
pushf
out
jnp
leave
xor
lea
cmpsl
xchg
or
jno
les
dec
mov
arpl
cmp
jb
adc
sub
sar
mov
sbb
adc
int
dec
inc
mov
fisubl
iret
ljmp
inc
dec
xor
pushf
mov
add
and
test
xor
out
sub
jns
mov
in
mov
adc
ret
xchg
ss
xchg
add
aaa
addl
rorb
jnp
sbb
movlps
pop
xchg
add
aas
xor
stos
jge
mov
aad
iret
outsb
add
mov
loopne
push
pushf
ds
pop
jno
and
imul
add
or
jmp
cs
aaa
dec
dec
lea
jle
mov
test
nop
test
add
jg
push
inc
xor
insb
inc
jno
pusha
nop
xchg
mov
dec
test
jb
push
sarl
ljmp
mov
inc
lock
pop
cs
and
lret
cmc
ljmp
mov
aaa
inc
fistl
cltd
inc
ss
push
stos
dec
push
jle
call
or
mov
push
adc
inc
out
mov
xor
jp
int3
cmc
adc
daa
fnstenv
and
mov
imul
out
adc
inc
rcrb
mov
mov
push
or
lcall
mov
call
sarl
mov
gs
dec
out
xor
jbe
or
xchg
popa
adc
xor
pusha
shrb
in
inc
es
imulb
ret
sub
test
xchg
xor
cli
fs
jno
fistps
add
fs
pop
aam
ss
popf
mov
pop
sbb
lock
dec
outsl
add
push
pushf
shll
std
gs
mov
std
ljmp
addr16
pop
les
push
pop
movsl
loopne
push
mov
mov
cld
ret
push
add
scas
mov
test
insl
movsl
sbb
jo
mov
pop
aaa
test
into
or
xorl
mov
enterw
cmpsb
out
xor
xchg
sub
imul
into
xor
data16
mov
aaa
xor
fs
pop
inc
movsb
xlat
add
sbb
adc
push
mov
in
add
mov
or
inc
add
outsl
dec
inc
imul
mov
jb
popf
jp
out
fadds
push
shrl
cmp
lahf
sbb
mov
xchg
nop
iret
testb
sub
test
scas
sti
ss
fmuls
sbb
lods
jp
insl
leave
in
cmpsb
popf
nop
mov
jg
push
dec
test
cmc
testl
outsl
dec
mov
lods
inc
and
adc
test
jae
adc
sub
enter
iret
add
fisubs
in
stc
sti
lret
test
int
mov
popa
stc
pop
xor
enter
jo
daa
jl
or
push
data16
cwtl
call
out
stos
mov
dec
mov
pop
inc
lahf
mov
gs
popa
cli
pusha
sbb
push
ja
lea
icebp
sbb
movsl
rorl
pop
sub
or
mov
pop
ret
pop
inc
das
test
push
sub
sbb
leave
pop
daa
cmc
sti
lock
pop
xor
push
cwtl
add
mov
jbe
dec
sbb
fdivrs
lods
adc
jmp
mov
inc
mov
mov
lret
mov
push
sub
mov
call
outsb
pusha
in
fs
sbb
mov
dec
lods
and
xchg
lds
dec
mov
pop
or
les
dec
push
inc
sbb
les
popa
pop
or
mov
jo
das
out
cmp
pop
into
fcompl
lods
xor
mov
cmp
loop
inc
mov
mov
loope
in
test
popf
cmpsl
jg
xchg
push
or
mov
jbe
xchg
fs
xor
popf
sub
pop
jg
mov
sbb
adc
sbb
mov
add
cmp
icebp
push
push
mov
mov
sub
push
les
push
subl
scas
into
addr16
jp
mov
cmc
ficoml
jl
mov
mov
jecxz
fwait
jbe
fidivrl
lods
fs
push
push
fwait
pusha
pop
xchg
dec
jg
aad
enter
test
lret
mov
cli
fsts
xor
add
and
and
cld
sbb
hlt
pusha
mov
je
mov
mov
out
in
in
and
repnz
lods
dec
push
js
push
mov
push
mov
cmpsb
or
xor
or
outsb
mov
xchg
mov
dec
lret
movsb
insl
adc
notb
add
and
mov
mov
out
xchg
push
jne
or
dec
xchg
test
jo
xor
xor
in
jge
imul
push
cmp
dec
lods
repz
pop
rcr
adc
push
jnp
dec
sub
cs
sub
lcall
imul
push
cmp
sbb
addr16
pop
push
dec
out
das
push
fldcw
dec
push
imul
rclb
popa
lcall
pop
adc
divl
adc
sbb
js
mov
xchg
std
lds
mov
jg
pop
aad
psllq
push
shlb
std
not
stos
inc
imul
add
sbbb
mov
fs
fiadds
cmp
ljmp
xor
or
ja
sub
sarb
pop
adc
arpl
inc
sub
cld
mov
pushf
cmpsb
push
insl
not
add
insb
bound
outsb
iret
pop
xchg
mov
add
ret
repnz
orb
lock
mov
push
cli
stos
leave
xchg
xchg
lods
add
movsl
dec
cmp
std
and
mov
mov
dec
movnti
mov
xchg
mov
xor
mov
imul
les
pop
cmpsb
jl
inc
dec
xchg
inc
in
shll
cmp
inc
daa
dec
adc
jno
imul
mov
xchg
dec
push
rcrb
xchg
shll
dec
push
mov
push
rclb
imul
adc
fbld
jae
mov
dec
inc
mov
aam
sub
int3
or
aad
mov
xchg
lret
movsb
sub
push
push
jmp
cmp
into
adc
loopne
jae
mov
push
sub
or
push
mov
lcall
add
xor
sub
scas
pop
push
adc
shl
test
clc
popa
movsl
pop
xor
popa
or
idiv
aam
dec
mov
xor
add
jmp
jnp
xchg
jb
shll
mov
push
mov
fsubr
repz
lret
and
out
dec
rorl
mov
inc
and
adc
movsb
jecxz
ja
inc
jae
add
aam
and
rclb
fwait
rclb
ljmp
or
adc
cmp
arpl
es
dec
push
mov
mov
pop
lret
or
rorb
add
pushf
mov
lahf
stos
push
pushf
xor
adc
adc
pop
add
xlat
ljmp
pushf
outsl
test
test
ljmp
adc
out
add
mov
and
mov
cltd
add
mov
jnp
cltd
shlb
fs
xchg
mov
in
cltd
int3
inc
outsl
enter
add
fs
and
es
out
xor
out
sar
out
arpl
sar
cmpsb
jae
mov
dec
lcall
loop
xchg
lea
in
mov
inc
jge
push
pop
or
mov
mov
ljmp
mov
jno
fwait
rcl
insl
push
and
push
mov
lods
mov
sub
adc
jnp
outsl
adc
mov
aaa
or
cmc
icebp
ret
xor
dec
clc
lods
scas
in
sbb
cmp
cmp
push
sbb
sti
pop
das
lret
sbb
dec
insl
xor
jbe
inc
or
test
out
mov
in
xor
insb
shl
push
mov
mov
dec
dec
or
sbb
test
cs
pop
jae
pushf
jmp
add
mov
rolb
repnz
repnz
inc
pop
insb
out
sbb
int3
daa
sub
pop
and
lock
adc
xor
shll
cmp
inc
cmp
into
adc
mov
loope
sbb
sub
push
lcall
or
js
popf
cmp
int
shr
sbb
mov
add
cs
add
push
fdivrl
jno
out
aaa
jbe
dec
repnz
shlb
fiadds
or
ja
fldpi
xor
jl
ljmp
nop
adc
mov
xchg
xchg
push
rorb
in
xor
and
add
sarw
imul
mov
out
ficoml
lea
dec
push
push
test
xor
jecxz
outsb
adc
mov
idivb
dec
jg
cmp
push
add
jecxz
sbb
mov
scas
cwtl
cwtl
xchg
stos
mov
das
sbb
data16
leave
sti
xchg
mov
lods
add
ss
repz
cs
xor
stos
repnz
sub
scas
and
aaa
cld
push
sbb
mov
jge
jne
pusha
cs
xchg
inc
fdivrs
sbb
adc
pop
add
js
cmp
pop
or
push
out
scas
jns
push
jge
mov
push
mov
adc
jecxz
rcrl
add
and
mov
mov
dec
inc
gs
mov
imul
faddl
add
inc
mov
mov
scas
mov
cmpsl
inc
fwait
cmp
pop
sbb
adc
gs
ss
cltd
inc
xor
aaa
xchg
adc
add
shr
mov
lods
pop
mov
mov
js
stos
lea
mov
mov
mov
xchg
enter
jl
ficoms
or
int3
clc
ja
cld
jne
lret
xchg
pusha
xor
jb
inc
push
inc
je
sub
in
lret
jmp
mov
test
aam
inc
icebp
out
cmp
and
lahf
fisttps
out
jmp
xor
pop
mov
sbb
adcb
popa
mov
push
ret
push
lcall
jmp
ljmp
cs
mov
pop
gs
or
cltd
mov
lods
jge
scas
sbb
xchg
xchg
or
scas
push
cli
add
mov
test
cmp
fcomip
fdivl
je
and
add
psllq
mov
cmp
sbb
leave
mov
lret
jp
jne
push
adc
jecxz
loopne
add
cltd
cltd
dec
mov
out
dec
add
pop
sti
out
test
enter
dec
jae
or
jnp
adc
xchg
pop
xor
js
add
push
popa
dec
mov
push
push
fwait
or
cltd
popf
mov
mov
sbbl
out
push
lods
sbb
xor
lock
mov
test
inc
jnp
dec
fwait
rorb
cmp
add
dec
cltd
imul
mov
outsb
mov
mov
ror
notl
pop
cmp
jno
jne
xor
mov
cmp
and
push
pop
mov
les
call
xorb
mov
xlat
sub
movb
out
xchg
lods
push
xor
mov
add
mov
mov
arpl
push
sbb
pop
bound
sahf
insl
aam
int3
lock
idivb
fs
adc
pop
and
pop
stc
mov
mov
daa
lods
and
je
mov
add
lret
lret
add
push
mov
fwait
xor
ja
sub
insl
mov
mov
cmc
cmpsb
pop
push
inc
cmp
adc
aaa
movsl
push
pop
xlat
sahf
xchg
xchg
xchg
mov
mov
lret
je
push
xchg
rcl
leave
outsl
xlat
repz
xchg
js
xorb
xchg
xor
loop
aam
clc
and
mov
add
imull
dec
pop
xlat
aas
fsubrp
adc
in
pop
push
push
push
inc
les
mov
mov
xchg
rclb
dec
pop
adc
mov
clc
xlat
or
mov
push
mov
or
adc
movsl
mov
sub
jmp
imulb
loopne
mov
aas
rcll
aas
pop
inc
mov
sbb
mov
popf
or
jp
lret
sbb
pop
loope,pt
mov
jb
and
adc
mov
push
and
xchg
outsb
std
cmp
add
mov
lock
adc
ja
mov
bound
dec
or
idivb
in
test
xchg
mov
jmp
movsl
data16
imul
dec
xlat
jns
mov
mov
shrb
cmp
mov
mov
dec
jg
rcll
mov
mov
in
hlt
popa
jnp
dec
or
sahf
mov
jle
inc
pop
jp
jae
sbb
add
mov
sarl
imul
aaa
sbb
pop
les
fadds
fadds
outsb
lcall
cld
cmp
movsl
push
or
imul
aas
push
lock
sub
cmp
stos
cltd
fidivrl
movb
rclb
sti
shlb
dec
mov
ret
in
icebp
jnp
xchg
js
inc
cmp
aas
mov
jne
je
out
mov
out
loopne
test
jb
cmp
iret
rcll
jne
scas
mov
or
sbb
iret
pushl
pop
insl
mul
inc
out
push
hlt
or
xor
outsb
roll
cmpb
adc
xchg
jb
stos
shl
clc
arpl
out
imul
jecxz
mov
sub
pushl
cmp
sbb
mov
dec
and
push
add
popf
jnp
in
mov
mov
movl
xchg
push
ss
ds
xchg
cmp
xor
fidivrl
mov
iret
push
stos
adc
iret
push
lcall
xor
cmp
dec
out
adc
addl
sub
cmp
xchg
jg
mov
sbb
xlat
clc
shr
and
xchg
sub
cmp
test
in
imul
adcb
and
mov
cmpsl
fidivl
int3
dec
iret
ss
nop
xor
cmp
je
mov
jg
test
jle
in
rcrl
xlat
clc
das
pop
mov
add
mov
sub
hlt
sbb
cli
pop
flds
and
in
or
sbb
adc
rcrl
mov
push
mov
push
xchg
inc
bound
adc
sub
inc
sahf
test
sahf
icebp
mov
and
add
xchg
push
cmp
pusha
aad
and
sarl
sbb
sbbl
pushf
ret
cmp
add
cld
xchg
and
pop
inc
or
cmp
out
cld
jp
dec
out
sub
data16
mov
sbb
andl
clc
xchg
mov
or
sbb
imul
test
call
add
andb
out
adc
adc
sub
dec
enter
pop
je
sar
mov
and
nop
jo
sahf
repz
push
stc
mov
xor
mov
fs
ljmp
pandn
add
push
lcall
push
mov
xchg
fistps
adcb
push
popa
pop
and
pushf
adc
shrb
insb
push
jmp
dec
jbe
lret
insb
push
arpl
jbe
jecxz
dec
cmc
ret
stc
ja
add
dec
test
into
mov
and
cmc
daa
add
adc
test
and
cld
outsb
jmp
sub
imul
shl
ljmp
mov
xor
mov
int3
jp
int3
imul
xor
dec
ja
dec
sub
fsubl
add
add
dec
repz
rcrb
add
jle
in
je
lods
ds
int
push
loope
or
xchg
jne
push
out
mov
pop
push
subb
inc
xchg
cmp
aas
ljmp
loop
jle
icebp
lcall
lcall
lds
xchg
push
pop
jl
xchg
aam
out
add
popa
or
addb
int
adc
stc
stos
lcall
sub
jp
jecxz
pop
mov
movsl
xor
pusha
testl
insb
sbb
fs
mov
mov
std
imul
aaa
mov
mov
push
lds
jnp
int
cltd
mov
push
or
cwtl
mov
and
push
popa
outsl
repz
lds
sarl
dec
jp
insb
in
clc
scas
sahf
sarb
aad
mov
mov
ljmp
pop
lret
lds
cmp
imul
out
outsl
push
pusha
push
adc
into
pop
ror
in
in
dec
int3
lock
lds
pop
cmp
push
stos
mov
add
enter
or
and
std
cmp
insl
pushl
jno
imul
call
imul
pop
mov
in
xchg
adc
jmp
lcall
arpl
pop
mov
test
jbe
je
xor
dec
in
xchg
pop
insb
push
outsl
push
fs
clc
or
adc
xchg
fadd
fsubl
daa
sbb
aas
mov
cmpsb
jb
out
and
fdivp
push
adc
flds
test
xchg
jge
adc
push
ja
xchg
loopne
scas
or
outsl
xor
sahf
pop
cmc
sarb
and
jbe
adc
es
pop
insl
pushf
jo
inc
push
dec
loopne
out
pop
dec
loopne
in
bound
stos
pushf
push
adc
mov
jmp
into
mov
jns
mov
sub
push
xchg
inc
pop
xor
int3
out
mov
sub
sbb
test
dec
push
rcll
jae
or
rep
mov
cmp
mov
imul
pop
xor
notb
in
cmpl
rcrb
fistps
nop
mov
push
repz
mov
inc
jp
into
lock
inc
decl
cltd
mov
pop
lcall
out
inc
mov
jge
test
add
inc
je
push
cwtl
adc
add
lret
aad
or
cwtl
or
dec
push
test
push
mov
cmp
test
out
sbb
lock
mov
inc
jae
aad
test
mov
mov
add
cmp
bswap
mov
addb
lods
sahf
test
scas
pop
sbb
arpl
idivl
push
fcmovnu
sbb
mov
jecxz
pop
jmp
lcall
das
shll
cmpsb
jbe
rolb
call
data16
sub
mov
jnp
test
in
xchg
insb
pop
mov
enter
ljmp
int3
push
mov
call
or
popf
es
dec
xchg
stos
int3
jns
sbb
and
roll
and
add
add
mov
and
sub
call
and
aaa
adc
hlt
push
xchg
lahf
xchg
and
cmp
pushw
mov
sub
jecxz
test
fisttps
mov
inc
mov
and
cld
fcomp
sub
gs
dec
xchg
shll
rclb
test
gs
mov
add
pop
push
sub
scas
es
popa
cmp
xor
inc
cmc
jne
test
cmp
push
nop
pushf
loopne
push
cmp
in
loope
lea
mov
loopne
call
int3
mov
mov
outsl
fdivr
mull
mov
out
pop
mov
lret
xorl
ja
imul
int
sbb
cltd
cmp
mov
inc
sbb
mov
mov
dec
add
rcll
repnz
arpl
inc
idivl
mov
sub
aam
sarl
lods
inc
adc
jo
push
out
sahf
fiaddl
popf
fwait
sbbb
pop
adc
js
xor
push
inc
movsb
mov
sarl
sub
cld
lock
fmuls
mov
notb
cli
cli
xor
push
stos
inc
sbb
mov
and
movsl
add
pop
sub
stos
stc
add
movsl
or
movups
and
sbb
rorl
cmp
fwait
ret
test
in
clc
clc
out
or
push
mov
or
repz
aam
movhps
dec
push
add
les
in
push
cli
lods
shl
loope
or
push
fs
js
sub
lcall
adc
jo
cmp
lret
mov
and
or
shll
cld
in
mov
sub
and
sbb
andb
js
ret
cmp
fnstcw
cli
mov
dec
pushf
xor
push
dec
pop
cwtl
dec
test
iret
xchg
cmp
ds
out
sub
cmp
aad
std
dec
lods
cmp
xchg
je
pop
mov
and
xchg
jb
mov
pop
js
lods
xchg
int3
js
test
stos
test
ss
jae
sub
cmp
leave
addl
test
sub
sub
jl
in
add
xor
cmp
loop
mov
imulb
add
aad
js
add
scas
sub
popf
aam
xchg
out
loope
inc
xchg
jl
jbe
mov
repnz
pusha
cmp
xlat
stos
bound
loope
sbb
rorl
pop
adc
push
hlt
jl
inc
mov
cltd
test
cmpsb
test
or
dec
jns
aad
inc
aaa
je
inc
and
into
jae
data16
or
xchg
test
sbb
push
aas
pushf
fsub
cmp
pop
lock
sbb
stos
sub
xchg
and
pminub
xchg
adc
push
jmp
mov
std
clc
cs
mov
mov
cs
sub
mov
push
mov
inc
sub
mov
cmp
adc
mov
in
pop
jne
out
lods
mov
gs
outsl
sbb
jns
fcomp
xchg
push
inc
add
adc
test
adcl
adc
aaa
ljmp
dec
cmpsl
shrl
sbb
mov
xchg
pop
dec
fdivrl
aaa
loopne
in
je
jno
aad
cli
fbstp
dec
dec
popf
pop
push
aas
jo
das
lcall
es
idivl
stos
in
rcrb
mov
and
int3
icebp
enter
adc
in
rorb
pop
mov
inc
hlt
dec
inc
insl
inc
bound
push
fs
sub
jl
xchg
mov
mov
jmp
mov
aaa
pop
aaa
xchg
loop
iret
test
mov
mov
xor
js
push
mov
test
andb
pop
pop
push
data16
sbb
sub
mov
jecxz
mov
jne
out
xor
push
pop
xchg
fidivrl
mov
shlb
lahf
orb
mov
stos
dec
aas
mov
xor
push
rorl
push
lods
stos
mov
subb
div
test
adc
add
mov
shrb
and
or
imul
imul
gs
mov
popa
in
adc
ljmp
xor
cmp
scas
mov
and
push
div
cmpsl
outsl
and
out
bound
es
ds
rcll
repz
and
fcom
xchg
mov
dec
pop
xor
xor
xchg
pop
movsb
inc
fadds
jge
loopne
adc
sar
xchg
das
in
loope
inc
sbb
or
popa
xor
ja
shr
mov
hlt
mov
loopne
inc
mov
xchg
inc
pop
mov
cwtl
pusha
test
inc
iret
insb
arpl
cmp
xchg
add
xor
adc
cmp
sub
push
jb
pop
fsubr
ret
dec
lods
push
rcr
sbb
inc
cltd
mov
push
mov
push
add
pusha
dec
fcmovu
into
cmp
pop
shrl
stos
lods
inc
insb
or
mov
add
cld
xchg
aas
sahf
fs
push
ja
add
jnp
mov
std
adc
idiv
iret
jp
test
popf
iret
add
iret
mov
push
adcl
xor
pop
push
int3
lea
into
dec
inc
test
dec
cld
mov
xchg
jmp
xchg
push
mov
cmp
icebp
inc
test
mov
xorb
rolb
test
cmpsb
dec
push
sub
mov
fistpll
ret
or
aas
push
leave
pop
adc
push
push
inc
aad
cmp
in
sbb
dec
outsb
mov
mov
aam
jmp
add
in
iret
jnp
xor
cld
mov
popa
fnsave
jle
shrl
sub
int3
push
mov
add
jb
movsb
fdivrl
cltd
daa
daa
cmp
pop
test
mov
add
inc
ret
and
jmp
imul
call
int
jmp
testl
mov
outsl
inc
inc
enter
out
pop
dec
mov
aam
push
pop
enter
mov
out
clc
insb
and
mov
shlb
mov
enter
cmpsb
inc
push
cli
lods
xchg
rolb
dec
add
or
mov
xchg
repnz
cmpsb
push
aad
inc
jl
fimull
cwtl
xor
mov
ljmp
push
pop
outsb
leave
pop
push
nop
cltd
stc
cmp
mov
sub
call
sub
mov
push
stc
sti
add
mov
addr16
ds
inc
stos
mov
stos
xor
xchg
mov
push
lea
push
test
mov
push
jp
or
cmp
adc
in
inc
loope
ljmp
mov
dec
push
cmp
popa
and
cs
stos
sbbl
push
cli
jne
pop
notl
cmp
lret
lret
dec
rcll
xor
nop
and
cmc
add
add
loopne
add
fstpt
cmp
sti
cmp
test
mov
mov
pop
xchg
call
js,pt
int
dec
cmc
mov
mov
stos
lahf
imul
add
push
negl
mov
jns
scas
shlb
sub
push
cmpsb
insb
in
out
sbb
mov
cmp
in
xchg
dec
fistps
dec
bound
cwtl
rcl
or
into
sub
sub
sti
lods
xchg
lahf
inc
scas
dec
jae
sahf
jmp
mov
lea
cld
push
sub
and
mov
scas
cs
sbb
vrsqrtss
add
xor
inc
push
mov
pop
filds
adc
push
rclb
into
mov
rcrb
lock
dec
jmp
repz
mov
cmp
push
leave
les
jbe
das
das
pop
stc
xchg
loopne
mov
les
call
sub
mov
inc
jecxz
call
aad
push
jg
fsubrp
dec
cwtl
dec
leave
fsts
push
out
mov
mov
jb
sub
aam
test
push
jl
dec
dec
fidivl
dec
sub
pop
es
imul
or
mov
jle
inc
fisubrs
sbb
icebp
push
lcall
std
inc
scas
sbb
imul
dec
mov
xor
scas
fistl
xchg
bt
sub
pop
xor
sbb
mov
and
mov
int
aas
add
or
inc
stc
fiaddl
sahf
aam
xor
shl
pusha
add
add
dec
adc
ljmp
out
adc
mov
xchg
sub
out
test
xchg
sbb
popa
lret
fcmovnbe
mov
movsb
jo
repz
mov
fdivl
xlat
mov
sahf
dec
pop
jb
fs
popf
popf
dec
fsubrl
mov
sub
jae
fimull
cltd
icebp
dec
mov
lahf
push
adc
das
jmp
insb
pop
pusha
add
mov
sbb
enter
int
ljmp
jno
and
lea
rorb
test
jl
dec
dec
aam
arpl
out
and
gs
aad
xchg
lods
fwait
mov
out
pushf
fwait
movsl
in
roll
out
clc
xchg
lock
or
out
push
test
and
jmp
addb
xor
stc
jb
add
adc
divl
and
cmpsl
inc
scas
push
sbbb
sbb
mov
sub
xchg
mov
mov
scas
inc
and
add
push
int
sub
cmp
cmp
cmp
std
dec
jl
fdivl
int3
xorb
mov
jmp
inc
aam
fistps
push
repz
jp
loope
jg
mov
mov
push
xchg
lea
push
in
jae
mov
adc
ljmp
push
jns
lods
js
imul
sahf
lret
in
xchg
daa
loope
lahf
push
mov
xchg
sarb
decb
dec
adc
push
loop
push
sbb
insl
andl
cltd
js
int
adc
mov
inc
in
cmp
adc
mov
cmc
xor
int3
push
fbstp
inc
rorb
lods
out
and
cmpsl
dec
repnz
in
sbb
sub
dec
sub
jmp
and
incl
ficomps
mov
int3
mov
out
aam
ficomps
mov
mov
test
fsubrs
stc
sub
jge
imul
std
mov
mov
sbb
jg
jns
test
jmp
outsl
fisttpl
mov
addl
lcall
push
push
mov
mov
jl
inc
mov
mov
cs
ja
push
xchg
xorb
push
testb
push
fs
xor
imul
stc
or
in
out
popa
xor
xor
dec
add
gs
aam
ss
fdiv
int3
cmp
aad
outsb
inc
loopne
popa
mov
imul
dec
cmp
dec
mov
test
js
fs
dec
xor
ds
loopne
lcall
ret
nop
lahf
mov
push
aas
mov
mov
fwait
or
xchg
adc
add
push
in
ret
ljmp
pusha
and
xor
or
jne
mov
cs
push
fstl
sbb
sub
pop
testb
mov
inc
sbb
ljmp
and
arpl
inc
ljmp
adc
push
or
or
dec
jl
xchg
out
cmpsb
push
add
lret
sub
popf
jmp
cmova
insl
popa
es
fbld
nop
jmp
mov
cld
test
sbb
data16
adc
mov
scas
push
mov
inc
inc
pop
lock
inc
jge
ud1
pop
aas
nop
add
hlt
fsubs
add
mov
rorb
jge
push
or
and
xor
mov
push
mov
mov
inc
insl
shrb
xor
jo
fwait
adc
aaa
and
pop
fdivl
pop
push
mov
in
insb
sub
add
mov
imul
jmp
cmp
push
fmul
mov
xchg
out
cs
add
stos
jb
mov
mov
std
jnp
out
hlt
sbb
fs
ret
add
mov
lret
mov
stos
mov
ret
jne
and
fbld
jecxz
push
and
jnp
loopne
jmp
jecxz
incb
lock
mov
cli
mov
int
repz
jmp
test
cmp
adc
nop
hlt
cmc
xchg
dec
ljmp
pop
and
mov
dec
movsb
dec
inc
test
stos
sub
xor
mov
inc
inc
cmpsl
adc
fsubl
and
pop
cmp
mov
flds
flds
or
inc
cmp
push
mov
ljmp
insl
xchg
push
cmp
dec
jecxz
lock
loope
popa
cld
add
or
sub
pop
or
loop
xchg
in
push
pop
lcallw
cmp
shrb
fisubrs
subl
jae
lea
jnp
mov
fsub
sbb
test
test
negl
xchg
mov
mov
jg
jo
jl
mov
bound
in
xchg
cs
subb
stos
sbb
mov
aad
mov
mov
popa
aam
cmp
aam
insl
aaa
in
jecxz
jo
sbb
inc
movsb
jmp
xchg
rcll
add
push
loop
mov
push
lods
pop
stc
adc
cmpsl
andl
scas
out
fdivrs
mov
cld
mov
mov
out
movsl
out
bound
cwtl
jne
sbb
xchg
push
jp
cmpsl
or
aad
sbb
frstor
xchg
add
imul
dec
jge
out
ss
loop
pusha
ret
cmp
mov
repz
loop
mov
psubusw
jno
sbb
adc
jo
js
bound
test
inc
jns
jae,pn
push
popl
outsl
mov
push
and
in
test
stc
mov
pop
sub
das
push
cmpsl
xor
leave
cmpsl
xchg
adc
adc
loope
push
xchg
or
sub
js
mov
mov
sub
add
or
scas
js
cmp
scas
pop
xlat
cli
inc
cli
sub
ffreep
xchg
sub
movsb
iret
arpl
into
mov
ja
test
xchg
pop
fwait
cwtl
subl
bound
aad
jecxz
sub
imul
and
popf
cmp
dec
push
fnstenv
and
dec
mov
and
subl
data16
lods
shll
test
and
pop
rorb
xchg
stos
test
xchg
addr16
xor
addl
mov
cmpsb
dec
adc
add
adc
insl
iret
ja
cmp
out
inc
pop
ja
jnp
dec
jno
adc
cmp
or
pop
ss
xor
fistpll
icebp
cmc
push
test
mov
inc
dec
jnp
ja
inc
mov
xor
jmp
loopne
aad
lods
jne,pn
je
daa
cmpsl
data16
xor
imul
jns
jno
ljmp
addb
fiadds
daa
sti
mov
out
orl
in
lea
xor
push
xor
cmp
inc
adc
fwait
cmp
mov
mov
mov
outsl
ds
xchg
adc
dec
pop
sarl
fldt
out
dec
cmp
lahf
mov
and
xor
mov
jp
dec
out
loope
inc
mov
dec
outsl
std
out
cmp
popa
lods
or
mov
shll
test
sbb
pushf
cmp
adc
pop
fdivr
add
cmp
dec
movsl
popf
sub
daa
stos
cltd
and
inc
mov
dec
repz
jno
out
cwtl
ret
ljmp
jge
push
std
subb
ss
pop
loop
lcall
or
std
popf
push
add
push
add
xchg
sahf
shrl
sub
movsb
js
inc
mov
inc
xor
mov
scas
adc
outsl
shl
into
sub
call
fsubrs
popf
sub
sub
nop
pop
loope
cmpsb
mov
lret
mov
stc
pop
jno
sarl
ret
or
jmp
push
inc
les
xor
lcall
and
jmp
shrb
xchg
adc
mov
xchg
dec
out
adc
mov
or
mov
mov
xchg
addr16
rcrl
sub
mov
popa
adc
cmp
call
scas
sbb
or
jp
into
test
gs
xchg
inc
jl
or
ss
js
push
jo
fimuls
adc
xchg
xchg
inc
imul
push
mov
gs
flds
mov
or
iret
out
and
jae
cmpsl
pop
add
sbb
movsb
stos
ss
dec
cmp
into
popf
pop
mov
sub
push
xchg
fstps
pop
cld
out
jg
or
and
mov
add
pop
sub
fdivr
popf
shll
adc
cmp
fsub
mov
jp
lahf
cmp
test
jnp
fstpl
test
ss
int
cmp
mov
inc
push
jnp
cld
xor
xchg
cld
sbb
fists
int3
cmp
mov
fwait
and
adc
push
mov
push
call
push
mov
mov
mov
repz
shl
in
inc
dec
repz
insl
jge
not
pop
ret
mov
enter
shll
adc
movsl
bound
inc
mov
in
jmp
jae
js
inc
in
mov
mov
mov
cmp
in
stos
jmp
cwtl
out
gs
jae
sbb
mov
lahf
cmp
scas
xchg
jmp
test
jp
lods
in
xor
mov
jl
fcmovu
lret
mov
mov
inc
mov
jno
pop
mov
dec
std
sbb
or
mov
or
test
je
xchg
mov
xorl
pop
mov
adc
inc
push
fimuls
push
sub
arpl
fcmovu
fcomps
mov
daa
cwtl
fs
sub
add
ret
stos
in
and
jbe
and
cmp
sub
xchg
add
xchg
adc
dec
jb
pop
repnz
sub
fimull
fisubs
push
cmp
cmp
js
sti
cli
sub
rclb
imul
sti
test
arpl
xor
addr16
sbb
cld
or
push
cs
mov
mov
mov
pop
or
xchg
popa
and
mov
cmp
dec
dec
repnz
add
iret
inc
jge
sub
out
imul
dec
icebp
imul
pop
mov
aaa
or
pop
push
aam
mov
mov
in
nop
scas
push
mov
or
ficompl
test
jecxz
xchg
mov
push
dec
dec
pusha
add
rcll
in
cli
in
fcom
rol
ljmp
xlat
ret
mov
sahf
out
or
dec
out
jmp
das
std
orb
sbbb
mov
jae
or
ficoml
std
ljmp
dec
xchg
pop
nop
xchg
jbe
lret
xlat
push
jmp
and
jns
jae
xabort
or
loope
loop,pn
leave
scas
jbe
mov
ficomps
scas
sub
scas
sti
mov
cmp
mov
adc
pusha
inc
add
sub
das
mov
dec
pop
fbld
dec
dec
cmp
dec
mov
popl
fisttps
test
ret
or
jno
jle
nop
cmp
fisubrl
stc
dec
push
ror
fisttpl
dec
xlat
sub
js
adc
jnp
leave
mov
cmp
mov
adc
ret
fildl
mov
jle
and
xchg
mov
or
and
or
mov
inc
enter
add
lret
sbb
cmpsb
xchg
js
out
add
cmp
and
movsb
imul
and
push
cmpsl
hlt
add
leave
stc
mov
add
leave
xor
add
inc
aas
fildll
divb
cmp
jns
imull
add
push
inc
jne
cs
clc
shlb
and
mov
addr16
xor
negb
stos
add
scas
and
cld
xor
das
jge
clc
xchg
cmpsl
daa
mov
outsl
push
faddp
inc
inc
repz
inc
repnz
adc
iret
fiadds
adc
adc
jbe
mov
repz
bound
sbb
xor
icebp
stos
mov
js
das
jnp
gs
js
jp
shl
xchg
js
filds
in
jge
ret
push
push
lods
pop
aas
mov
push
add
dec
mov
xchg
and
mov
mov
lret
push
dec
pop
leave
sbb
orl
notl
mov
xchg
adc
ds
pop
jmp
sbb
lret
fnstsw
xchg
cmp
push
je
push
in
out
loopne
js
sub
icebp
jne
mov
push
dec
lods
or
cmp
pop
add
push
mov
aam
fsubrs
rclb
mov
adcl
cs
jp
das
lret
aas
xlat
xor
insl
jp
ds
iretw
mov
mov
lcall
sti
fldcw
xchg
imul
xor
es
sar
dec
jl
pop
outsb
cmp
pop
xchg
jno
mov
into
cmp
xchg
lds
shll
dec
inc
ja
cli
pop
sbb
jae
dec
stos
xor
cmpsb
jg
pop
ljmp
or
push
fwait
push
enter
add
icebp
push
sbb
push
jbe
test
das
lret
add
sbb
push
jmp
or
ja
push
fdivrp
xor
mov
dec
out
mov
cmp
andb
div
mov
jo
push
or
add
mov
add
ffreep
cmp
add
das
add
and
xchg
inc
jbe
jbe
xlat
mov
push
das
and
jmp
ja
add
mov
xchg
sti
dec
fnstenv
push
stos
mov
sar
icebp
jbe
mov
movsl
scas
outsb
popa
inc
bound
aad
aam
jl
sti
mov
xor
sub
add
mov
js
in
xchg
out
jp
int
es
or
loopne
inc
sbb
cmp
cmp
push
pop
jmp
xlat
loope
jecxz
sbb
push
dec
jo
lock
mov
and
shl
xor
fldenv
cmp
dec
and
rcll
sti
clc
jecxz
and
and
inc
lods
fidivl
adc
dec
sbb
cmp
push
faddl
sahf
loope
jo
int3
xchg
push
fmull
sub
decl
adc
xchg
pop
inc
pop
mov
stos
pop
cli
or
mov
out
pushf
mov
test
outsl
push
in
and
sti
js
in
mov
scas
jns
hlt
add
sbb
in
les
mov
loope
shrb
and
mov
out
jne
mov
mov
scas
out
pop
cmpsb
jnp
xchg
mov
xor
popa
fcoml
xor
and
cltd
in
pop
push
adc
jae
cmpsl
gs
jbe
repnz
out
cmpsb
std
mov
loope
sbb
inc
aas
or
roll
inc
sub
pop
inc
sbb
cmp
lea
shlb
adc
xorl
stos
or
aaa
add
dec
push
inc
add
xor
adc
sbbb
inc
cmc
xor
ret
fstl
fistpll
in
inc
jno
mov
xchg
jb
hlt
add
adc
pop
lcall
fcomps
es
ja
bnd
lret
shrb
fs
inc
cmp
movsb
jge
sub
cmp
jecxz
aaa
int3
push
push
imul
repnz
push
pop
dec
inc
mov
and
sbb
fwait
sbb
iret
fwait
out
sub
jl
adc
js
or
sbb
mov
das
sahf
xor
inc
test
dec
mov
clc
or
ljmp
pushf
adcl
xchg
out
push
fmull
popf
leave
jg
adc
cmpsb
test
iret
jae
xlat
push
add
imul
insb
pop
rcrb
xchg
pop
push
mov
add
push
aas
jmp
lods
adc
ret
push
icebp
popa
ljmp
mov
stos
icebp
push
cmp
jbe
or
mov
pop
mov
mov
bswap
fisttpll
shrb
fbld
mov
and
lods
sub
ret
ret
into
add
inc
cmp
mov
loope
mov
lahf
adc
fwait
cmp
pushf
push
shl
repz
shlb
sbb
xchg
ret
test
adc
inc
jmp
xor
dec
fiaddl
addr16
mov
sub
lea
nop
inc
push
sub
mov
mov
xor
nop
outsb
add
dec
cmp
ja
dec
ret
jge
nop
filds
sub
sbb
mov
or
pop
aas
add
sbb
es
and
inc
faddl
fisttpl
aam
fildll
xor
jo
cmpsb
add
fstps
scas
pushf
mov
adc
js
aad
mov
inc
aam
std
lea
push
xor
mov
push
aad
xchg
inc
sub
jo
push
aad
adc
in
dec
fbstp
and
mov
testl
es
mov
mov
mov
push
imul
add
iret
push
scas
repz
pusha
xor
movsb
fcompl
pop
sahf
xchg
ljmp
or
cmp
add
ja
fnsave
dec
aas
scas
fcoml
aam
inc
insb
nop
mov
leave
push
or
sub
xor
test
adc
mov
and
fdivl
js
push
stc
daa
add
lret
lcall
shll
push
bt
int
sbb
xlat
jmp
xor
test
and
jb
ret
cmpsl
sbb
and
mov
xchg
and
xchg
enter
nop
sarb
mov
leave
out
les
scas
mov
rcrb
ret
or
pop
push
jbe
loopne
and
mov
or
xchg
leave
add
push
mov
or
add
mov
dec
dec
lods
dec
scas
cltd
push
mov
sbb
mov
push
push
es
stos
hlt
cld
dec
or
scas
jg
cmc
xchg
dec
ret
adc
push
jb
or
inc
push
dec
xchg
ds
add
xor
fisttps
or
and
dec
dec
aaa
mov
and
adcl
inc
dec
push
imul
mov
pop
out
cmp
and
inc
jbe
mov
pushf
inc
fsts
hlt
mov
xchg
xor
aam
shlb
mov
jb
icebp
pusha
pop
in
stos
cltd
push
ja
or
cmpsl
push
xchg
push
cmp
pop
mov
jecxz
mov
sub
and
or
rcll
add
inc
mov
jno
adc
add
femms
jmp
pushl
idivl
test
mulb
mov
xor
push
push
add
xchg
add
jmp
mov
push
lods
mov
add
pop
mov
push
xchg
inc
cmp
xor
test
ss
jns
or
mov
fnsave
pushf
into
daa
cmp
add
dec
dec
ret
nop
repz
jecxz
outsl
push
aaa
mov
sub
cmpsl
aad
stc
jp
leave
in
mov
jo
cmp
inc
lret
lcall
test
aad
push
xchg
sub
test
mov
shr
xor
lods
cld
sub
test
icebp
popf
test
addr16
and
cmp
rcrl
mov
shrb
test
pop
mov
inc
add
add
adc
and
and
mov
add
add
inc
lds
or
add
add
add
add
rcr
imul
jbe
ljmp
xor
mov
hlt
fwait
lea
fsubrl
mov
sti
je
mov
mov
stos
jb
and
mov
push
sahf
test
lahf
push
push
jmp
pop
popa
call
dec
pop
push
es
sbb
adc
sub
imul
sahf
rorl
jns
cmpsl
pop
mov
negb
mov
test
inc
jne
jle
cmp
xchg
add
fildl
pop
cmp
push
pop
xchg
xchg
popaw
pop
mov
jae
jl
fsts
dec
pop
xor
dec
and
push
add
dec
jbe
mov
cmp
cmp
sub
cs
cmc
mov
popl
mov
and
loop
add
out
sbb
daa
xchg
mov
sbb
push
xor
stos
cld
lods
mov
fwait
repz
cmc
mov
test
fisttpl
divl
outsl
lret
cs
or
or
cwtl
orb
or
hlt
aam
mov
xchg
mov
aam
mov
cmp
or
and
mov
jns
lret
jb
sar
fcmove
cmc
fbld
mov
arpl
xor
stos
sbb
or
dec
cmp
gs
in
out
pop
mov
pop
repnz
das
xchg
out
aaa
xor
pop
push
in
icebp
sarl
xchg
xlat
shr
sub
sbb
pop
sbb
es
js
jo
lods
push
push
pop
sbb
push
fnstsw
xchg
decl
jno
add
inc
test
or
bound
leave
stos
or
subl
fwait
movsb
mov
xor
cmpl
jmp
aam
imul
jb
mov
xchg
xor
or
scas
fs
mov
lds
xor
gs
mov
pop
sub
pop
cmpsl
daa
aad
push
jl
rcrb
incb
data16
test
push
add
xchg
sub
adc
cmp
mov
jl
gs
sarb
jecxz
xorb
xchg
in
mov
sbb
lcall
adc
bound
cmp
fcoms
les
and
aad
dec
push
add
aam
loop
imul
into
test
cmpsb
and
cmpsb
pop
nop
push
pop
push
jae
fildl
xor
dec
cmp
xchg
stos
xchg
xor
xor
ret
pop
add
scas
pop
test
cmpsb
lods
dec
push
andb
inc
dec
subb
insb
mov
xchg
dec
mov
hlt
ficompl
loope
out
sub
xchg
es
aad
jl
xlat
aas
push
rorb
jae
xor
inc
repnz
jo
pop
mov
jb
int
and
xchg
lods
mov
sub
bound
mov
into
loop
cmp
pop
outsb
std
insb
mov
loop
xchg
cmpl
xchg
movb
mov
js
inc
mov
push
outsl
inc
pop
in
push
xchg
mov
dec
pop
shlb
mov
push
test
xor
stos
add
int3
outsb
repz
sbb
pop
scas
and
repz
jp
sub
popf
cmp
adc
stos
and
mov
sarl
fdivrl
sub
and
mov
add
or
mov
scas
lret
scas
sbb
or
inc
pop
mov
adc
mov
cmp
test
sub
inc
out
jns
add
test
incb
enter
lods
xor
mov
mov
les
jmp
pop
lcall
and
push
ror
mov
loope
out
mov
xchg
jl
cmp
lea
into
add
dec
dec
scas
and
sbb
nop
stc
mov
aam
stc
mov
push
inc
pusha
pop
and
or
addb
push
int3
daa
aaa
in
js
pop
xchg
sub
xchg
paddusb
lds
cmc
mov
movb
sti
cmc
mov
popf
int3
cwtl
pop
and
shlb
mov
adc
mov
mov
imul
stos
sbb
mov
xchg
rol
add
push
int
mov
clc
or
inc
xchg
xchg
sbb
jge
stc
jo
lds
lret
shll
xchg
fdivrs
aas
iret
or
cmpsb
out
jnp
inc
ja
imul
int3
addb
push
mov
rcll
in
out
jne
push
loopne
jns
pop
lret
sarl
pushf
dec
xchg
cmovo
dec
pop
jbe
or
and
pop
aam
mov
and
mov
ljmp
sbb
mov
cmpl
test
jnp
in
out
cmpsb
scas
sbb
fs
inc
sbb
or
insl
sbb
mov
cli
imul
jne
cmpsl
and
lods
mov
fisubl
out
rorl
jnp
mov
jns
and
outsb
and
pop
mov
repnz
pop
inc
out
push
mov
jecxz
push
mov
pushf
ret
dec
pushl
in
stos
xchg
mov
repz
and
scas
pusha
scas
xchg
movsl
pop
and
or
push
push
gs
xchg
sub
aaa
dec
arpl
mov
fcmovu
mov
loopne
sbb
add
aad
enter
negl
in
mov
ret
repnz
or
dec
add
loope
cmp
insl
pop
out
mov
out
inc
mov
gs
imul
sahf
xor
daa
or
mov
mov
mov
and
sbb
sbb
addl
push
popf
sbb
pusha
adcb
sub
adc
sti
ljmp
add
imul
daa
sbb
outsb
xchg
sub
xchg
add
cmp
imul
cmp
rcrl
sub
es
cmp
ret
or
sbb
fcmovu
shll
pop
jecxz
popa
enter
add
xchg
or
test
and
jmp
pop
xchg
int
mov
lds
pop
ret
insb
arpl
scas
mov
sahf
repz
loop
setp
sub
sbbl
pop
outsl
fcoml
mov
xchg
adc
popa
and
push
or
cli
call
invd
sbb
cmp
pushf
jmp
inc
pop
lods
xchg
into
xchg
arpl
sub
mov
sbb
lret
jmp
insb
out
outsb
pop
or
cmp
mov
cmp
pop
insb
and
daa
loopne
leave
pop
mov
in
loope
loope
out
int
mov
pushf
outsb
sbb
mov
fs
inc
add
pushf
call
add
xchg
pop
mov
es
xor
pusha
lds
outsb
mov
cli
je
inc
jge
inc
xchg
pop
bound
out
mov
pop
jae
cmp
enter
jle
in
data16
mov
xchg
jns
mov
pop
sahf
std
lds
fmul
adc
out
bound
jg
mov
add
fiaddl
std
andb
dec
jbe
fmuls
pop
jbe
xchg
in
or
cmp
mov
add
fisttps
jnp
mov
loope
mov
dec
outsl
xorl
call
aad
jb
test
outsl
loopne
pop
cmpsl
test
fiadds
adc
add
push
sar
xor
es
jbe
dec
test
lods
xchg
jge
jbe
mov
lcall
cmpsb
loopne
cmpsl
clc
inc
mov
ja
fmul
es
cmpsl
push
push
notb
pusha
hlt
shll
xor
jle
inc
push
push
adc
sub
pop
mov
fimuls
add
ja
stc
loop
mov
repnz
loop
fildl
loop
addr16
mov
les
movsl
imul
stc
add
mov
xchg
test
iret
push
pop
jmp
ja
pop
repz
pushf
lds
pop
adc
or
push
xchg
cmpsb
add
xchg
out
sbb
cli
cmp
test
and
cwtl
imul
push
mov
test
test
jg
ror
imul
push
out
insb
imul
hlt
xor
push
clc
loope
xor
dec
dec
push
inc
ret
adc
mov
out
sbb
xchg
push
rcrb
shlb
imul
loopne
stos
push
sbb
hlt
mov
xor
mov
jmp
adc
or
les
push
xor
movsb
dec
icebp
jnp
dec
sbb
pop
sarb
jg
sbb
imul
and
add
push
push
inc
jnp
add
add
in
xchg
popa
pusha
les
lahf
xchg
inc
xchg
fidivrs
mov
mov
mov
loop
sbb
adc
jo
push
dec
shrl
push
pop
popf
cs
test
mov
dec
mov
dec
imul
dec
mov
inc
insb
pop
cmc
fnstsw
pop
mov
xor
insl
xchg
sub
fistpl
jo
mov
mov
fcomps
inc
mov
in
fwait
movsb
add
xchg
mov
push
xor
sub
xor
sbb
cltd
pop
dec
test
andb
mov
mov
lret
xchg
pop
adc
adc
outsl
loop
sub
xchg
pop
or
xchg
sub
cmp
movsb
addl
jae
or
cli
imul
mov
xchg
lea
xor
ss
and
xlat
hlt
mov
into
lock
push
lcall
mov
test
leave
fs
cmpsl
lret
add
test
testb
pop
in
mov
or
sub
daa
inc
mov
jae
mov
cmpsl
jle
hlt
fwait
inc
int
mov
repnz
inc
jns
cmp
fdivp
lods
insb
dec
ja
sbb
in
cmp
aas
loop
mov
nop
insb
cltd
sub
in
mov
jecxz
aaa
lret
mov
xor
icebp
loopne
and
test
add
push
mov
or
cld
dec
mov
les
lods
clc
sti
int
or
sub
adc
pusha
mov
cwtl
inc
js
in
lock
leave
je
clc
xchg
pushf
mov
push
xchg
cltd
inc
lods
inc
scas
xchg
ljmp
out
lcall
or
hlt
fcompl
cmp
mov
mov
pop
ret
xchg
cmc
mov
mull
inc
stos
out
into
ret
mov
test
pop
sarl
sahf
aam
test
lret
push
push
mov
xchg
push
gs
cwtl
arpl
movsl
shll
fistl
mov
out
lea
pop
lods
inc
dec
push
pop
mov
mov
lahf
popf
jle
jae
mov
scas
xor
sub
pop
push
xor
fs
or
mov
cmp
rcl
jmp
arpl
repz
push
pop
xchg
mov
cld
pop
dec
mov
mov
inc
push
mov
pop
inc
xchg
xchg
std
shrl
aam
pop
or
jnp
mov
or
insl
push
out
repnz
dec
scas
loope
sbb
sbb
xchg
dec
fdivl
jne
pop
jp
arpl
mov
pop
dec
dec
push
xchg
jnp
push
add
fadds
sbb
hlt
pop
aaa
js
jno
mov
mov
sbbb
lds
add
add
jnp
je
or
xchg
loopne
push
push
cmpsl
mov
add
mov
lret
push
xor
pop
rorb
jl
mov
lods
rol
push
add
sbb
dec
enter
push
stc
out
into
jb
negb
outsb
das
xchg
xchg
popa
xor
fmull
call
dec
das
mov
xchg
imul
pop
sub
sbb
add
pop
arpl
xchg
lret
repz
jno
stc
pop
imul
ret
popa
cmpsl
mov
je
lret
loopw
push
cmp
bswap
mov
xchg
push
sbb
shr
sbb
jmp
test
clc
dec
test
mov
xchg
fwait
push
xor
push
jmp
adc
push
rcrb
xchg
es
and
xor
and
mov
or
mov
cltd
aaa
xchg
adc
jge
insb
mov
fs
pop
mov
mov
and
and
add
xchg
inc
ret
xor
loop
cmp
or
add
mov
add
pop
outsl
xchg
push
add
xchg
cmpsb
pop
insb
fildll
in
loopne
adc
rclb
sti
into
sbbl
movsl
jb
repnz
nop
sbb
cmp
mov
xor
xor
jno
jno
cmp
arpl
aam
xchg
sbb
or
adc
sub
dec
pop
lock
cmp
and
dec
cwtl
sbb
lds
outsb
add
sub
int
xchg
pop
lea
mov
add
gs
inc
ss
ljmp
inc
xor
hlt
push
fldl
cmc
cli
push
popa
cmpsb
add
xor
xor
inc
jno
mov
fbstp
gs
das
mov
addr16
insl
sub
mov
test
rcl
fadds
in
push
mov
sub
or
outsb
test
out
mov
lahf
xchg
mov
and
sarb
outsl
xor
inc
pop
loopne
pop
cld
cmpsb
xor
loope
pushf
add
int3
inc
ret
scas
stos
jb
decl
mov
lea
add
xchg
inc
inc
push
xor
xlat
dec
ja
jecxz
xchg
pushf
mov
mov
xor
xor
orb
adc
mov
popf
add
ret
pop
sub
adc
ret
push
adc
leave
rcll
mov
cmp
pop
adc
cmp
outsl
cmpsl
add
fs
fwait
mov
loopne
mov
insb
sbb
mov
int
pop
mov
in
pop
popf
push
arpl
sbb
ret
test
in
and
ret
lahf
jb
add
jae
or
rcrl
std
push
iret
out
xchg
sub
and
aam
je
ret
addr16
movsl
ret
out
mov
push
jae
or
sti
mov
pop
mov
mov
sti
test
rol
dec
xor
in
daa
or
mov
or
mov
insb
dec
in
lods
push
je
dec
xor
rcrl
push
mov
pop
in
mov
cmpsl
int
jae
adc
fldcw
cmp
xor
mov
push
mov
sti
pop
or
fidivrl
cwtl
out
popa
das
push
inc
xchg
loope
cmp
ret
mov
and
xchg
cld
pop
mov
aad
jl
imul
aam
mov
xchg
cwtl
mov
jne
arpl
addl
and
stc
lret
lock
mov
adc
movsb
mov
mov
rorl
pop
ret
testb
pop
es
jo
and
lcall
jae
ja
jecxz
imul
xor
dec
and
sub
jbe
lret
ret
sub
inc
leave
xor
and
in
add
adc
sub
daa
inc
enter
pushf
xor
jbe
xlat
div
cs
cmpsb
dec
add
sub
adc
and
aas
and
dec
xchg
add
jg
pushf
or
out
xchg
pop
cmpsl
xchg
jae
pop
lds
mov
test
cs
mov
mov
test
mov
in
cmp
lods
dec
and
mov
jge
cltd
cmp
cmp
sbb
jae
xor
mov
xchg
test
aas
paddusw
in
sbb
adc
aad
mov
dec
and
dec
add
or
in
cmp
xor
shrl
loopne
lock
sub
xchg
call
outsb
inc
imulb
enter
mov
xchg
fucomip
stos
lea
mov
pop
sbb
outsb
push
fcoms
int3
sbb
sub
cmp
jno
mov
cmc
icebp
mov
pusha
scas
push
imul
jmp
les
enter
pop
fmull
mov
inc
imul
add
call
mov
ficoml
in
into
mov
xchg
dec
loop
mov
int
fidivrl
pop
orl
lods
insl
out
mov
sbb
cmp
imul
sbb
lahf
shl
push
add
xchg
movsb
sbbb
out
cs
xchg
jle
mov
adc
mov
mov
sarb
cmpsb
adc
aas
cmp
xchg
addr16
bound
pusha
imul
jnp
mov
dec
sub
clc
push
call
push
xor
jl
out
out
inc
sub
pop
inc
in
mov
popa
lahf
jnp
arpl
fsubl
mov
popa
and
jg
mov
aas
addr16
mov
mov
adc
mov
les
xor
movsb
call
sti
cs
mov
or
sub
int
scas
iret
loopne
mov
lret
sarb
jmp
decl
fildll
sbb
sbb
mov
adc
jl
push
and
cmp
cmc
adc
or
lods
lcall
mov
popa
lahf
flds
in
mov
stos
stc
jcxz
jge
and
sbb
pop
popf
jle
pusha
xchg
jb
and
ljmp
jge
fisttpl
repnz
push
popa
movsb
pop
mov
scas
shlb
inc
icebp
xchg
lods
sarl
xor
mov
loopne
fisubrs
xchg
xchg
pop
ficoms
movsl
xchg
dec
outsl
jecxz
fstl
mov
nop
xor
mov
cwtl
stos
js
les
inc
xor
test
ret
xchg
jb
adc
mov
scas
mov
jnp
in
add
sbb
inc
lock
xchg
test
testb
stc
xchg
fstpl
ss
xor
das
jns
shl
jne
das
cmp
rcll
aam
fnstenv
icebp
push
jb
or
and
adc
inc
push
jmp
cmp
imul
pop
and
xchg
std
popa
mov
outsb
sub
mov
push
mov
jecxz
out
sbb
call
mov
into
lcall
push
xchg
sbb
xchg
dec
cld
out
fcompl
cmp
incl
cmp
in
cli
sarb
or
lea
mov
dec
sbb
sbb
dec
xor
and
inc
push
int
scas
lock
movsl
push
xchg
jecxz
dec
ud1
cmpsb
jno
sti
roll
inc
pop
out
cwtl
add
imul
xor
dec
jnp
push
xor
push
xchg
adc
mov
test
lods
add
push
lds
fcmovbe
stc
add
cli
mulb
adc
out
push
test
adcb
lods
and
xor
xchg
pop
or
adc
les
fcmovnbe
aaa
push
push
mov
fists
push
lds
mov
mov
or
lahf
ljmp
addl
imul
js
xor
jno
repz
das
pop
and
ljmp
inc
fsubrs
insl
add
insb
lret
mov
dec
jp
cmpsb
insb
xor
shl
sti
jno
out
popf
mov
movl
mov
dec
mov
lods
in
push
cmp
enter
pop
scas
sub
les
push
clc
jnp
ret
or
lods
shrl
xchg
in
xchg
lret
je
stc
test
test
mov
inc
enter
out
add
fstl
fildl
rcrl
adc
adc
mov
cmpl
jno
push
fmull
mov
lock
and
inc
decl
push
cmc
xor
lahf
mov
mov
adc
jbe
xor
daa
loope
add
cmp
cmp
xchg
mov
sbb
push
cmp
xchg
fs
adc
sahf
mov
pop
or
mov
sbb
icebp
dec
imul
jg
cld
sbb
lds
loopne
lock
in
push
dec
mov
and
pop
jbe
and
outsl
sub
add
icebp
fldcw
push
icebp
test
mov
fimuls
jp
jg
sti
jmp
mov
je
mov
inc
popf
sbb
pop
scas
push
inc
dec
push
jns
sbb
dec
pop
pop
out
ds
out
aad
mov
adc
fcomps
cmc
imul
mov
pop
push
add
cmp
adc
push
stos
mov
pop
pusha
iret
cmp
shl
or
fsubl
mov
pop
cmp
out
icebp
inc
sub
jns
test
pop
or
adcl
out
xor
shlb
int3
inc
xor
jbe
je
push
jp
xchg
xchg
cmpsb
jne
inc
and
and
shrl
mov
rclb
mov
push
add
in
je
jae
cmp
rcrl
lock
pusha
add
mov
dec
or
mov
add
jae
adc
dec
mov
hlt
insl
mov
or
out
dec
aad
mov
arpl
or
cmpsl
mov
dec
sbb
jae
mov
shlb
out
lds
or
in
and
movsb
mov
test
xchg
and
mov
cmp
std
sbb
push
mov
in
lahf
push
mov
fistpl
sub
mov
aas
xchg
in
imul
cmp
mov
ds
jge
rcr
pop
and
ret
pop
clc
mov
lock
ret
pmulhw
pusha
mov
mov
insl
clc
fisttpl
mov
rcll
test
adc
addl
sub
test
cmp
cmp
icebp
ds
mov
shrb
cmp
inc
pop
jb
and
inc
mov
sbbl
into
mov
jp
and
xchg
inc
xchg
cmp
mov
pop
out
mov
imul
and
jp
imul
test
mov
and
repz
cmc
mov
decb
or
pop
mov
and
xchg
enter
sbb
popa
sbb
in
inc
ljmp
gs
frstor
divl
sahf
loope
push
insl
mov
pusha
dec
and
andb
arpl
arpl
dec
test
sbb
pop
add
inc
mov
cmp
into
test
mov
loopne
int
mov
orl
jne
adc
je
insl
mov
orl
pop
jecxz
push
dec
push
push
inc
test
inc
xor
loop
shrl
scas
push
jno
mov
dec
adcl
mov
insb
shrl
pop
sbb
stos
pop
add
jl
or
cmpsb
adc
mov
cmc
add
movb
in
sqrtps
or
nop
and
data16
sub
xchg
pop
push
roll
rcl
imul
int
js
sub
inc
add
imul
repz
aad
jecxz
cltd
push
in
jmp
insb
call
popf
out
jge
int3
and
xchg
push
lea
push
add
imul
adc
xchg
push
aad
nop
mov
fsubr
mov
aas
stos
test
add
daa
mov
push
fwait
sbb
ljmp
shrb
ljmp
inc
jmp
stos
aaa
ret
stc
aas
sahf
data16
imul
inc
std
subl
popa
orl
mov
pop
push
mov
nop
stos
mov
imul
sbb
bound
xchg
pushf
enter
cld
dec
and
mov
fldt
add
fsubs
mov
or
arpl
lods
in
dec
mov
lods
lods
iret
jmp
mov
dec
push
lcall
pop
sahf
or
or
in
push
adc
mov
out
jb
adc
push
add
sbb
mov
arpl
dec
pop
cs
jnp
scas
sarl
iret
fists
push
cmpb
push
or
dec
rol
mov
iret
xchg
lods
lahf
shl
shlb
jo
insl
stos
jae
jbe
xor
adc
xorl
cmp
cmp
imul
iret
faddl
dec
aad
lcall
adc
lea
iret
sub
push
gs
hlt
popf
pop
scas
shr
fstps
and
mov
test
xor
es
dec
out
pop
mov
ficoml
lock
ret
xlat
mov
je
push
test
cmp
loopne
fidivs
gs
push
mov
mov
mov
fsubrs
jo
test
icebp
cmpsl
out
cli
stc
repnz
stc
inc
inc
xchg
or
pop
pop
movsl
inc
mov
out
insb
or
lea
inc
mov
stos
stc
adc
outsl
fld
cmp
rolb
pop
or
faddl
daa
sbb
pop
mov
jecxz
nop
push
sub
lret
cmp
xor
jmp
loope
mov
xlat
sarb
in
aaa
in
cmpsl
cli
push
adc
out
mov
cmp
push
test
xchg
lret
addl
mov
fwait
arpl
adc
les
pusha
or
rol
xor
mov
add
test
jns
icebp
int
mov
ja
repnz
jmp
xchg
dec
fiaddl
loope
add
pop
sahf
ret
and
pusha
push
ss
xchg
lcall
lcall
ja
adc
mov
jbe
imul
add
and
sbbb
pop
xor
adc
loop
sbb
inc
push
sbb
loopne
es
leave
jecxz
and
and
and
mov
dec
fisttps
add
ljmp
and
mov
mov
popa
sarb
mov
cmpsb
mov
xor
icebp
mov
jl,pn
pop
xor
inc
mov
aam
dec
adc
or
push
push
aad
popf
adc
rcrl
jecxz
push
jnp
pop
cli
imul
ret
movsb
jp
jle
cs
fwait
mov
out
xchg
xor
cmc
rolb
dec
dec
scas
ficoml
enter
sub
xor
enter
sti
pop
shlb
or
sub
cmpsb
mov
adc
inc
cli
loope
xchg
outsl
xchg
fstpl
and
jg
rcll
ja
push
adc
in
scas
add
adc
ds
lea
xor
clc
jb
or
mov
insl
lock
jno
movb
and
mov
mov
jle
sub
add
cmp
mov
and
mov
sbb
jbe
push
les
jo
add
jmp
mull
int
jg
mov
ret
mov
dec
aas
mov
dec
mov
inc
scas
leave
or
jo
dec
sbb
and
ret
addr16
lods
cmp
scas
jecxz
sbb
add
dec
icebp
sti
jg
add
xchg
jne
ljmp
sti
gs
or
or
inc
inc
sbbb
xchg
stc
pop
in
jb
in
psubb
inc
fcmovne
jge
cmp
and
sub
xchg
push
ds
dec
lods
scas
inc
data16
jno
jl
sbb
loope
repz
fnstsw
mov
pop
out
lret
pop
cli
bound
dec
mov
adc
sub
and
xchg
push
out
lret
and
or
add
mov
mov
pop
mov
in
ret
or
mov
push
jmp
mov
add
lds
adc
xor
inc
cmpsb
fnsave
pop
add
jecxz
mov
divb
stos
mov
js
out
addr16
insl
mov
mov
lods
mov
aam
popa
ret
rorb
add
mov
pop
and
push
ret
shlb
insb
xchg
lret
popf
lods
mov
iret
pop
sahf
ja
mov
mov
insl
mov
inc
dec
dec
dec
cmpsb
sub
pop
andl
je
jmp
cld
xchg
adc
fisubl
aas
movsl
cmpsb
popf
ss
shlb
sbb
js
lret
push
or
push
icebp
push
cli
jne
ja
adc
and
dec
jge
es
outsb
call
dec
pop
lret
pop
pop
push
cmc
call
dec
xor
hlt
inc
cmpsb
mov
and
push
ret
pop
push
lock
fstpt
imul
or
mov
aaa
xchg
jnp
adc
mov
call
ss
xchg
es
cmpsl
push
imul
mov
adc
call
jae
xchg
test
nop
fisttps
cs
stos
or
cs
jnp
pop
push
dec
pop
fadd
cmp
mov
xlat
shlb
inc
sbb
adc
lods
imul
sub
push
arpl
xchg
cmp
cmp
inc
sub
adc
sbbl
aas
andl
mov
lea
mov
and
jb
jmp
inc
and
push
xchg
mov
xchg
and
aad
in
ljmp
add
pop
mov
cmc
sbb
cltd
call
flds
and
in
sbbl
inc
out
lds
es
adc
xchg
loope
sarl
negl
std
adc
loop
cmpsb
push
cmp
insl
cmc
cltd
pop
mov
js
add
fnsave
int
add
push
cmpsl
icebp
inc
lret
push
sahf
pop
sub
adc
notb
inc
cmp
dec
in
ds
fs
jl
hlt
outsl
jmp
xchg
inc
test
loop
decl
in
icebp
jecxz
loopne
sub
test
jl
enter
add
ret
aad
inc
jae
into
fldenv
pop
sbb
xchg
and
pop
push
mov
jns
loop
push
lods
push
cld
or
jb
notb
pop
ds
adc
std
add
cmp
loop
mov
or
xchg
scas
push
ss
lods
sbb
jo
jno
adc
rcr
hlt
cltd
hlt
cmpb
cmp
xchg
in
xor
popfw
jbe
insb
mov
pop
add
movsb
fldt
das
scas
stos
push
xor
loop
xor
mov
xor
mov
iret
mov
or
add
lds
clc
sub
mov
push
push
or
push
and
nop
add
ljmp
aaa
pop
mov
call
movsl
or
mov
jnp
mov
jmp
test
and
pop
orl
xchg
out
mov
pop
leave
fimuls
inc
ja
movsb
jne
shr
enter
push
pusha
hlt
and
and
and
adc
xor
or
inc
out
push
icebp
or
and
sub
xchg
jae
mov
addb
repz
and
push
out
xor
push
cmp
les
call
xor
push
lahf
dec
mov
mov
and
into
inc
in
pop
insl
jbe
out
iret
pop
popf
jecxz
xor
dec
pop
and
or
in
inc
push
jp
inc
lcall
push
push
jns
push
add
inc
adc
mov
call
mov
das
icebp
lret
sub
mov
into
lret
stos
pop
arpl
xor
lods
pop
push
loopne
imul
loop
and
pop
pop
add
fsts
sbb
in
ds
jo
jge
mov
int
pop
movsb
cmp
das
jae
and
or
popf
cmp
mov
cli
xor
cmp
xchg
and
sub
mov
sub
mov
std
leave
jb
cmp
cmp
jg
jne
nop
fcompl
mov
arpl
jae
sbb
imul
push
hlt
mov
or
cmp
outsl
mov
adc
lcall
mov
mov
sarb
bound
negl
cmpsl
ss
add
sub
popf
or
out
cwtl
cwtl
psubsw
lock
fcmovnb
push
outsl
mov
aas
dec
sbb
xchg
subb
scas
adc
and
cmp
insl
sub
or
or
xor
inc
pushf
mov
pop
inc
outsb
leave
enter
rsqrtps
adc
adc
cmc
js
push
iret
and
std
add
mov
sub
mov
jmp
orb
call
addb
sahf
mov
test
sbb
cmpsl
or
pop
scas
cmp
or
mov
jmp
add
hlt
icebp
inc
arpl
fidivrl
test
rcll
jns
adc
sbb
mov
xor
jge
out
iret
loopne
test
dec
adc
sub
cld
add
dec
lock
lea
jl
in
mov
sbb
mov
sbb
aam
mov
stc
jae
sub
bound
cli
cs
out
push
cwtl
xchg
inc
adc
jnp
jbe
pop
ficompl
popf
mov
pop
daa
es
jns
cwtl
out
adc
je
mov
and
out
pop
push
fwait
aam
push
adc
mov
dec
insl
stos
and
sbb
xor
cmp
gs
xchg
aas
xchg
imul
icebp
xchg
stos
jle
inc
xlat
and
mov
lods
jmp
or
pop
andb
out
xchg
cmp
or
cmpsb
mov
bnd
cltd
mov
pop
dec
es
mov
pop
push
jle
adc
inc
adc
push
outsb
xlat
stc
and
les
in
bound
pop
push
dec
sub
jp
cmp
cli
icebp
or
sub
inc
mov
in
lret
sub
rcrb
pop
arpl
jno
xchg
pop
add
outsb
pop
stos
adc
lea
mov
sbb
inc
notl
popf
xor
movsl
push
jnp
xchg
mov
lods
je
es
cld
fwait
sahf
lahf
xchg
pushf
sub
out
push
movsb
mov
test
inc
pop
add
and
insl
out
jl
pop
scas
ret
adc
and
push
outsl
test
scas
or
shll
out
push
rcll
iret
xor
dec
bound
inc
in
xchg
vmptrld
jne
fidivrl
loopne
mov
mov
or
mov
mov
sbb
xchg
cmc
je
jmp
inc
rolb
cmpsb
pop
adc
adc
aam
lret
rcrb
in
fisttpl
pop
sbb
jns
mov
fcomps
add
cmpl
lret
push
inc
cmp
add
sub
dec
out
int
out
and
push
rcrl
push
dec
inc
fldenv
mov
mov
push
sbb
mov
mov
nop
leave
scas
adcb
imull
sahf
inc
sub
out
mov
cmp
push
fldt
inc
leave
stc
dec
pcmpgtd
push
xorl
xor
lock
mov
push
mov
lods
loop
lock
stc
stos
imul
neg
std
mov
xor
fdivrl
add
or
push
es
add
cmp
sti
loop
incl
lahf
ja
jp
lcall
cmp
inc
aaa
push
adc
push
scas
pop
scas
pop
xor
push
xor
pop
cwtl
pop
or
and
xchg
or
adc
pop
aas
xor
push
xchg
loopne
xchg
mov
out
mov
jbe
out
fwait
gs
inc
dec
inc
add
cmp
inc
sbbb
and
stos
jne
les
test
dec
mov
mov
stos
lret
orb
jge
pop
cli
mov
xchg
add
call
pop
ljmp
pop
hlt
das
and
pop
inc
mov
inc
stos
and
push
cmp
mov
addr16
jmp
sbb
push
loop
mov
pop
lret
push
adc
sahf
inc
and
js
mov
xchg
mov
cmpsb
mov
lds
adc
aaa
mov
cmpsb
fcmove
in
dec
scas
push
cmp
popa
ss
dec
inc
jbe
pop
out
mov
or
jge
cmp
leave
xchg
lds
fwait
push
jecxz
cltd
push
fs
cmp
not
ljmp
fsubrl
and
sbb
mov
daa
jle
mov
dec
xchg
es
inc
mov
cltd
xchg
rcr
mov
rol
fcmovnbe
stc
fidivs
fstl
in
xchg
fcmovu
aas
outsb
int3
pop
push
inc
lods
imul
ret
fwait
xchg
mov
out
int3
mov
mov
and
movsl
push
bound
push
cmpsb
cld
test
pop
gs
jnp
dec
jns
xchg
test
and
dec
and
test
imull
pop
shr
mov
add
cmpsl
push
add
rol
in
cmp
ja
adc
sahf
sbb
insb
bound
sub
js
into
lods
adc
mov
std
xchg
cmp
mov
aam
jb
movb
push
adc
in
mov
addl
xor
or
nop
and
shl
rorl
decl
jnp
pop
fbstp
scas
cs
adc
push
push
fs
mov
andb
aad
rclb
js
shll
aad
fidivs
sub
xchg
mov
pop
icebp
repz
dec
sbb
fcomip
fsubp
jl
inc
sub
mov
mov
das
in
mov
cli
in
cmp
sub
popa
adc
movsl
fs
push
in
orl
xlat
push
inc
cmp
xor
push
sub
loopne
in
mov
pusha
sbbl
clc
add
scas
adc
push
in
dec
dec
sbb
imul
test
sub
and
ret
into
xchg
xchg
shrl
ret
push
shrl
and
dec
int3
and
xchg
das
mov
aam
xor
and
mov
cmp
movsl
sbb
dec
pop
jnp
xor
insl
cmp
adc
out
and
ds
ret
outsb
out
dec
aas
cmc
fwait
pusha
and
lahf
sub
stos
rcll
das
jle
inc
dec
push
aas
adc
rcl
cs
xchg
jge
outsb
cs
pop
movsb
add
icebp
jns
xor
cmp
cmp
xor
push
out
js
sub
insl
es
stos
mov
jnp
outsl
sahf
loope,pn
fwait
mov
fcmovne
pop
or
pop
mov
jl
and
fmuls
jl
aas
mov
mov
sub
sub
in
jne
ja
shrb
test
dec
cmc
paddq
outsl
ret
fcomip
cli
adc
aam
xchg
icebp
popf
popa
fs
gs
jnp
cmp
fldenv
or
sbb
pop
stos
jnp
cwtl
and
and
sbb
dec
push
dec
out
xchg
xchg
ljmp
bound
push
das
hlt
test
mov
dec
cld
xorb
adc
rol
ds
xchg
push
call
shl
pop
add
add
add
push
xor
movsb
scas
popa
stos
or
insb
mov
push
into
xchg
movhlps
add
inc
dec
lcall
in
mov
cmc
pop
arpl
sub
bound
shrb
mov
adc
pop
add
movsb
div
cli
shrl
imul
sub
faddl
sbb
or
cltd
std
in
mov
pop
and
rcr
daa
cmp
push
cmp
xchg
xor
pop
ret
pushl
rol
cmp
sbb
aas
xlat
hlt
imul
scas
sbb
sbb
aaa
enter
divl
jle
sbb
ret
gs
or
sbb
lret
or
and
loope
dec
push
mov
mov
jg
jle
jp
je
out
shrb
pop
jbe
mov
xchg
daa
pop
mov
std
cmp
dec
sbb
push
test
add
gs
andl
add
cmp
cmpb
sub
inc
jecxz
jecxz
test
sub
adcl
adc
mov
xor
popa
sbb
xchg
and
insb
testl
lret
pushf
fisubl
and
sub
popf
out
loop
pop
mov
test
daa
scas
pop
jae
inc
add
cmc
mov
imul
gs
sti
or
es
push
dec
int3
fidivs
push
mov
lea
or
dec
lods
fldz
rorb
cmc
dec
mov
or
pop
xlat
mov
pushf
std
or
fwait
push
cltd
fidivrs
sbb
add
jb
in
dec
adc
imul
lods
adc
sbb
scas
idiv
adc
xor
push
mov
icebp
sbb
fnstcw
cmc
out
andb
cmc
test
scas
jle
loop
fchs
repnz
cwtl
xor
test
out
dec
jle
mov
cmp
adc
iret
shll
pop
fsts
lcall
xchg
imul
out
push
xchg
aad
jae
lods
push
pop
add
adc
mov
cld
aaa
clc
out
lret
push
xor
pop
jae
and
faddl
mov
cmp
lea
push
fs
push
fwait
rol
into
mov
sub
mov
mov
adc
push
test
xchg
leave
inc
outsl
add
sub
or
js
ja
outsl
imul
inc
ret
dec
jns
sub
inc
pop
xlat
lcall
adcl
insb
and
sub
mov
mov
iret
dec
cwtl
decl
scas
and
call
rcrb
out
sbb
mov
test
mov
push
xchg
int
jmp
lcall
into
pop
arpl
cwtl
sbb
sbb
sub
mov
notb
inc
jmp
push
and
dec
xchg
and
push
pop
fs
out
movsb
pop
push
cmp
out
jb
and
jno
sub
dec
pusha
adc
cmpsl
mov
and
inc
xchg
mov
call
inc
jecxz
cld
mov
testl
sub
notl
xor
lock
cmp
mov
jns
sub
adc
rcll
inc
fcoms
subb
sub
lcall
pop
sub
dec
jge
flds
out
dec
ja
stc
cltd
jl
sarb
into
insl
xchg
mov
sbbl
inc
jnp
cmp
pop
pop
mov
dec
push
cmc
pushl
sarb
in
push
cmp
frstor
sarb
push
loope
adc
lods
test
dec
inc
inc
or
xchg
mov
mov
add
lock
xor
movsb
cmp
pop
scas
adc
cmp
imul
xchg
aas
mov
int
adc
orb
or
mov
push
into
pop
cli
mov
jo
aad
in
sbb
fmull
ja
lods
sub
mov
or
stc
mov
int
adc
cmp
cltd
in
mov
into
sbb
int3
xlat
or
mov
cwtl
loopne
imul
mov
mov
dec
popa
jnp
popa
out
mov
mov
fiadds
mov
or
adc
cmp
jge
into
xor
cmpsb
test
jle
lahf
xor
cmp
mov
sbb
and
test
fistl
int
test
sahf
mov
int
inc
lahf
sbb
mov
stos
jo
sbb
sbb
jmp
push
andb
jb
addr16
xchg
daa
lret
stc
or
loop
push
mov
push
out
push
in
leave
pop
addl
lcall
lahf
or
adc
mov
popa
imul
fistl
pop
out
push
mov
fldcw
xorb
jge
inc
mov
std
sub
sbbb
push
js
pop
or
or
mov
pop
mov
loopne
aaa
jno
inc
clc
jl
pop
mov
sub
jge
mov
jmp
push
lahf
dec
add
call
cmp
insb
xchg
pop
fdivrl
test
aam
cmpsl
mov
adc
add
stos
cmp
fcmovbe
xchg
xchg
pop
js
pushf
je
sub
xchg
mov
fmul
fcomp
mov
aas
xchg
cmp
mov
mov
push
ret
sub
pop
jnp
insb
cmp
cmp
mov
lock
inc
dec
stc
scas
dec
xchg
xchg
es
fbstp
gs
cmpsl
inc
negl
lea
and
xlat
iret
jle
iret
adc
mov
stos
dec
push
push
bound
call
shll
loop
nop
push
jb
add
in
scas
jp
pop
adc
outsb
xor
test
mov
mov
lcall
pop
push
fdivrl
push
roll
andb
test
outsb
lock
mov
fsubrs
enter
out
adc
cli
sub
push
add
dec
fsts
sbb
push
mov
inc
shll
in
xchg
dec
pop
push
out
hlt
pusha
mov
lahf
or
ljmp
push
cld
cmp
test
ret
pushf
movsb
cld
test
jge
or
jno
test
outsl
jo
and
or
push
push
cwtl
in
pop
adc
jb
xchg
test
fcomps
inc
mov
mov
cmp
mov
inc
icebp
dec
mov
pop
and
or
shl
addr16
pop
stos
mov
mov
push
les
mov
int
test
cmc
push
add
cmpsb
ja
mov
mov
repnz
fld
cld
test
leave
in
daa
sub
shrl
xchg
jne
mov
xchg
add
xchg
sub
lret
fcomps
jp
mov
adc
push
jp
pop
jle
push
xchg
movsl
pop
sti
jnp
sub
fiaddl
test
das
and
xchg
jno
fmuls
mov
popf
push
repz
pop
imul
ret
lods
sbb
incl
fisttpll
lds
mov
icebp
dec
adc
and
into
sub
and
aad
out
or
xor
into
push
jmp
push
push
sub
add
dec
sub
mov
pop
imul
mov
jb
daa
xor
aad
jmp
std
arpl
mov
in
cmpsl
repnz
inc
adc
jb,pt
adc
shll
mov
mov
xchg
lret
fs
xor
jb
cmp
repnz
arpl
les
xchg
lret
lahf
sub
mov
pop
mov
or
xor
cli
xchg
or
shll
push
shlb
sti
fcomps
imul
jno
xor
jae
or
dec
mov
pusha
pushf
outsl
cmp
int3
enter
dec
add
das
movsb
lret
dec
mov
push
ds
hlt
mov
flds
ficomps
lret
pop
into
sahf
inc
push
lahf
cmpsb
mov
ret
pop
jle
in
cmpsl
sarb
cmp
adc
mov
sbb
push
inc
lods
sub
stos
cli
sub
pop
inc
fistpll
push
pop
mov
inc
or
xchg
mov
test
mov
in
push
cmp
sbb
clc
sub
xor
mov
dec
fimuls
loopew
xor
sbb
inc
and
repz
in
lods
test
addr16
mov
popa
call
lods
test
inc
mov
addr16
or
fldl
rorb
mov
call
pop
mov
popl
inc
clc
loopne
add
dec
mov
lock
jns
ret
pop
xchg
sarb
push
dec
xor
fwait
sub
pushf
out
ficoms
mov
gs
insl
xor
mov
mov
inc
repnz
fwait
mov
js
jl
fcom
pop
dec
jecxz
cmp
pop
ss
jnp
testb
push
or
bound
shlb
mov
aam
call
ja
jmp
dec
lods
jge
daa
jne
cmpsb
test
jno
cltd
imul
stc
fiadds
dec
add
out
add
mov
ret
or
xchg
aas
arpl
cmpsb
in
out
in
adc
pop
icebp
insb
sub
iret
jnp
or
and
mov
mov
xchg
nop
fsubl
in
xchg
add
out
fstl
mov
fwait
sahf
ja
movsl
lret
jp
ljmp
inc
lock
insb
mov
lret
inc
mov
xor
aas
call
test
pop
xor
bound
mov
cmp
mov
dec
fstl
jl
out
loopne
jno
arpl
xor
dec
lahf
adc
inc
in
enter
or
orl
movsl
stos
lea
enter
aad
mov
push
mov
adcl
adc
loope
add
mov
dec
shll
sub
mov
lret
add
repnz
imul
test
sub
mov
ja
loopne
stc
arpl
inc
dec
xchg
cmp
jo,pt
lods
enter
adc
mov
push
test
jae
pusha
lds
jbe
jb
nop
cmp
data16
push
insl
insb
jae
cmp
imul
jb
shr
jns
sti
jne
xchg
mov
adc
push
mov
inc
testl
push
test
push
outsl
push
inc
ljmp
je
pop
addr16
cmpsb
lea
inc
adc
iret
mov
mov
mov
cmp
jecxz
mov
and
xor
dec
arpl
out
test
mov
xchg
and
xchg
cwtl
cmp
cmp
xor
or
and
jno
lock
xor
xchg
aas
and
ljmp
fxch
aam
pushf
int3
std
insb
xorl
or
dec
jmp
fwait
mov
and
lea
dec
sahf
jbe
repz
inc
fs
pop
push
mov
mov
dec
sbb
stos
lea
mov
jg
out
push
lret
mov
jne
inc
lahf
mov
popa
add
scas
aas
mov
pop
cmpsl
add
jne
fiaddl
les
lcall
push
cmpsb
dec
cli
mov
cmp
outsl
pop
icebp
test
or
push
or
addr16
push
mov
mov
pop
scas
mov
shr
test
push
data16
sbb
inc
mov
push
jo
rclb
cld
pusha
lods
rolb
xor
lods
loopne
cmpsl
repnz
insl
sub
arpl
or
xor
jmp
mov
movsb
jge
pushf
idivb
xor
in
jo
add
out
pushf
lahf
mov
cltd
xchg
jb
aam
mov
push
lcall
pop
xchg
mov
lahf
xor
std
mov
scas
fwait
mov
sub
sub
push
and
push
aas
test
adc
fidivrs
xchg
outsl
arpl
mov
mov
sti
mov
mov
pop
fnstenv
mov
add
frstor
insb
mov
push
or
stc
push
test
jmp
mov
jae
push
push
mov
jecxz
mov
and
mov
fs
inc
cmpsl
out
jmp
xor
cmp
xor
sti
pop
push
sbb
cmp
jp
mov
mov
push
pop
jg
out
jmp
dec
js
repnz
cmpsl
xlat
jp
cmc
cs
add
push
fcompl
arpl
mov
xor
flds
mov
xor
addr16
ds
xor
xchg
notb
or
fabs
bound
mov
xor
aad
call
inc
add
lret
adc
dec
cmp
loop
mov
push
push
inc
jae
dec
sub
dec
mov
dec
fs
dec
mov
outsb
mov
xchg
aaa
xchg
lds
lods
repz
cmpsb
adc
dec
loope
bound
mov
jnp
jnp
nop
cld
and
stos
lret
sbb
mov
fstpt
mov
mov
mov
jp
dec
push
iret
daa
xor
ret
fnsetpm(287
or
push
or
mov
jp
or
or
inc
mov
mov
loope
clc
and
and
or
pusha
stos
pop
cmp
adc
out
ss
add
data16
in
cld
out
mov
pop
pop
lods
cmc
pop
faddl
adc
in
xchg
dec
lea
mov
add
adc
in
and
inc
push
fdecstp
popa
dec
lods
in
or
fiadds
test
push
cmp
adc
popf
insl
test
and
js
sbb
xchg
add
push
ss
jnp
filds
xchg
jle
jl
fsubrl
fadds
jle
jno
mov
imul
add
fisttps
adc
imul
jo
test
xchg
cmp
iret
stos
and
mov
jl
fldenv
enter
in
test
jns
divl
fstpl
in
pop
das
faddp
jae
cltd
sbb
and
jno
mov
lcall
ret
shl
add
sub
push
fidivrl
inc
into
popf
out
bound
and
hlt
inc
mov
sbb
jp
or
enter
xchg
xor
ret
sub
mov
pop
push
jle
ja
jg
in
pop
or
pop
inc
inc
add
push
and
in
lret
push
fsubs
push
inc
jnp
cmc
xchg
pop
leave
lcall
mov
push
xor
push
xchg
aam
mov
inc
jecxz
and
mov
jecxz
adc
push
inc
mov
ljmp
push
mov
das
ss
ja
movsl
or
fldl
xor
dec
arpl
lods
adc
ficomps
mov
mov
cmpsl
cld
dec
pop
jecxz
aam
add
outsl
test
jo
xchg
pop
ror
push
nop
add
dec
rolb
fldcw
dec
mov
cmp
movsb
mov
insl
sti
mov
jns
xchg
dec
lods
push
push
mov
jnp
testb
mov
insb
xchg
jns
aaa
push
stos
nop
xchg
out
aaa
xchg
sti
inc
dec
mov
adc
mov
or
call
das
into
xchg
sti
mov
and
insl
or
daa
mov
or
pop
fstl
out
mov
andl
fidivs
mov
andl
je
or
xlat
push
in
pop
cmp
fs
dec
jle
nop
arpl
lock
outsl
jns
sahf
in
mov
pop
ficoms
cmpsl
cmp
pop
xchg
xor
mov
xor
inc
rorb
mov
leave
repz
adc
hlt
repz
dec
inc
gs
adc
and
subb
popf
mov
mov
stos
fs
pop
mov
fnstcw
roll
movsl
mov
cld
adc
int3
and
fdivrs
xor
jmp
lods
jl
push
data16
cld
adc
scas
leave
sbb
stc
or
cmc
xor
xlat
aas
jns
insb
lcall
out
lret
mov
pusha
std
mov
loop
sub
inc
pop
aam
cmp
and
mov
jb
daa
andl
xor
pop
push
lret
inc
ss
inc
sahf
cmpsb
pop
out
les
in
push
cmpsb
test
xor
ret
sahf
adc
push
lock
std
enter
xchg
sbb
add
fsubrs
es
jmp
sbbb
insl
sahf
add
cwtl
fsubl
stos
mov
lcall
xchg
scas
insb
in
arpl
mov
dec
cmpsb
lds
push
adc
outsl
inc
adc
insb
mov
daa
mov
test
cld
bound
int
movsb
push
pushf
aaa
jne
icebp
mov
pop
add
sub
arpl
push
mov
js
cld
ret
adc
jo
mov
lcall
push
je
fisttpll
pop
xchg
lods
mov
xchg
mov
jp
cmp
js
xchg
pushf
fstps
call
mov
dec
pop
cmc
mov
in
outsl
sti
cmc
loope
add
imul
or
or
add
sbb
mov
fadd
cld
sbb
or
in
inc
shll
loop
xchg
mov
es
aaa
push
roll
popf
mov
out
xchg
sbb
rcll
mov
xchg
mov
enter
addb
sbb
cltd
xchg
test
scas
cmpb
mov
popf
out
xor
sbbl
sti
sub
popl
mov
push
inc
sbb
es
aad
pop
adc
idivb
andl
or
lahf
popa
mov
mov
add
inc
pop
aam
and
inc
sub
popf
mov
cmc
mov
icebp
and
dec
pop
test
jo
rorl
sbb
in
xchg
insb
sub
cld
rcrb
mov
bound
push
jge
push
neg
in
xor
or
ret
dec
fidivs
iret
stos
pop
xchg
je
mov
iret
aas
and
fld
sbb
test
or
xor
rorb
adc
inc
mov
sub
mov
xchg
subb
out
adc
mov
decl
xor
out
pushf
divb
cs
push
int
add
adc
test
mov
or
fsubrs
adc
sub
jne
flds
mov
pop
add
lcall
testb
into
repz
shlb
add
or
pop
push
lods
pusha
adc
fiadds
and
in
fsubr
lock
pop
push
xor
xchg
or
insl
push
lea
shll
xchg
push
outsl
stos
xor
ljmp
inc
jne
scas
cs
jno
xchg
sbb
xor
xchg
hlt
ss
enter
sarb
sub
or
out
sub
cmc
enter
pop
in
enter
xor
adc
and
mov
jp
aam
sar
push
or
pop
daa
jl
inc
fiaddl
punpcklwd
cwtl
xchg
iret
je
mov
rcl
test
sbb
cmp
inc
lahf
cmp
mov
mov
mov
jnp
xlat
mov
into
fs
jns
xchg
sti
pop
pop
lock
mov
sub
sbb
lods
in
dec
xor
popa
or
sbb
aaa
repz
lods
xchg
push
popf
push
push
xchg
add
daa
fwait
aad
bound
xor
mov
sbb
mov
xor
inc
and
push
xchg
cmp
mov
mov
mov
xlat
aaa
dec
inc
pop
dec
aas
xchg
sbb
pop
rorl
lret
jmp
rorl
and
and
in
mov
cmp
aam
or
xlat
incl
xor
shll
out
lock
sbb
std
and
in
dec
js
sbb
add
cmp
inc
xchg
inc
pop
mov
scas
mov
pop
sbb
mov
push
adc
cmp
push
dec
stos
xchg
add
dec
inc
icebp
add
lods
mov
push
clc
mov
mov
rcr
xor
inc
es
mov
pop
xchg
sbb
stos
push
mov
push
fs
add
jno
mov
lcall
jp
xchg
inc
add
je
sahf
inc
push
or
adc
mov
shl
pusha
int3
out
xchg
mov
mov
cltd
mov
test
lret
or
cmp
aad
mov
mov
popf
mov
mov
mov
ret
cmpsl
fstpt
lahf
das
repnz
test
fmulp
sti
mov
sbb
js
mov
cmp
stc
sti
jno
sub
cltd
jge
pushf
jae
hlt
sub
push
pushf
jo
dec
push
xchg
mov
repnz
and
int3
test
adc
cltd
jbe
in
push
ss
addl
dec
mov
or
add
jns
shrl
inc
mov
xchg
add
mov
cmp
push
dec
sbb
mov
push
insb
mov
gs
lret
int3
adc
lds
rcll
popf
lds
pop
jns
in
xchg
push
fsubrl
adc
sbb
std
xchg
cltd
mov
popf
pushf
cmpsb
fadds
inc
mov
shlb
ret
mov
push
idivl
repz
sbb
fsubrs
xor
mov
fmuls
jbe
mov
and
cmp
mov
jnp
popf
sti
lret
sub
test
sbb
int3
or
shlb
dec
sub
mov
out
pushf
shrl
mov
or
out
push
ds
add
mov
rorb
ror
mov
and
sub
int
cmp
sub
lods
xor
repz
jne
push
cs
dec
xor
mov
adc
test
into
cmpsl
xchg
inc
cltd
data16
pushf
adcb
ret
xchg
cmp
mov
sbbb
aaa
nop
mov
sbbb
and
sub
mov
jae
inc
dec
mov
sbb
cmp
pop
in
fidivl
lods
inc
sbb
xlat
xchg
fisttpl
ja
dec
lea
out
xchg
rcr
dec
fisttps
loop
sub
add
outsl
xchg
movsl
clc
je
stos
mov
push
add
mov
jle
sub
popf
mov
adc
xor
ret
mov
xlat
repz
rcl
into
cmpsb
pop
repnz
add
adc
faddl
jo
pop
js
popf
icebp
dec
pushf
loope
enter
sub
jbe
jae
orb
sbb
mov
aas
insb
cmc
pop
std
clc
aaa
dec
ja
push
xchg
mov
testl
jmp
and
int3
and
add
mov
dec
in
mov
lea
cmc
shlb
repnz
xor
stos
push
in
lcall
lea
scas
loop
push
xchg
adc
lods
add
roll
xlat
fidivrs
mov
lods
or
or
add
mov
cmp
mov
pop
and
adc
sbb
nop
aaa
cltd
lds
sbbb
mov
gs
out
fbstp
dec
dec
xchg
hlt
ss
aad
mov
dec
repz
mov
sub
xor
jl
xlat
push
outsl
stos
inc
in
insb
imul
ds
push
stos
inc
dec
rorb
or
fwait
lods
fcomps
push
adc
dec
leave
sbb
mov
dec
add
and
insl
push
cmp
adc
mov
cltd
cmp
and
mov
fldl
popa
fldl
or
mov
pop
push
xor
loope
lahf
sarl
or
test
mov
imul
mov
sub
cmc
add
lret
adcb
adc
push
cs
popa
mov
lret
insl
mov
movsl
pop
inc
mov
das
in
jmp
testb
mov
inc
xchg
mov
push
sbb
cmc
sbb
fldl
nop
dec
rcr
mov
lahf
mov
xchg
fidivrs
push
mov
cmc
xor
cltd
loope
add
or
out
divl
fwait
xchg
mov
clc
sbb
xchg
pop
xchg
push
loopne
loopne
or
xor
out
mov
testb
pop
jo
adc
push
pushf
mov
ljmp
sub
dec
data16
inc
xchg
mov
inc
sub
shlb
push
xchg
push
mov
dec
jnp
aas
and
frstor
scas
mov
jae
lea
pop
popa
pop
mov
pop
or
ret
xchg
mov
lock
mov
cmc
inc
sbb
scas
inc
mov
inc
cmpsl
jo
lret
mov
pop
push
xlat
std
xor
sbb
push
or
arpl
mov
jae
dec
adc
mov
call
mulb
or
xchg
call
mov
clc
add
notl
adc
xor
mov
lods
flds
loopne
gs
cmp
mov
push
mov
out
lret
xchg
or
sub
std
pop
outsl
inc
outsb
dec
stos
sarb
mov
sub
add
or
and
mov
cmp
aaa
xchg
insb
sub
inc
clc
and
push
mov
push
inc
repnz
stc
mov
inc
aaa
sbb
push
mov
add
push
out
rorb
in
fwait
dec
lds
xchg
imul
xlat
sbb
and
out
je
movsl
mov
push
mov
push
push
fisttpl
fwait
push
xcrypt-ofb
cmpsl
sub
xchg
cmpsb
add
mov
in
push
mov
daa
cmp
cltd
inc
mov
jno
push
pop
mov
lahf
daa
popa
xor
lret
cwtl
sbb
ror
sbb
cmp
sbb
popf
outsl
stos
out
neg
jb
out
outsl
cmp
stos
xor
jae
jmp
sub
fiadds
and
push
movsl
xchg
shll
sub
push
jecxz
jmp
shlb
xchg
fldl
adc
dec
insl
lret
mov
inc
mov
and
jmp
das
sbb
mov
or
data16
adc
cmp
dec
adc
cmp
dec
andl
jbe
icebp
or
push
jns
outsl
pop
orb
in
cld
mov
repz
jbe
cmp
add
and
imul
jnp
or
pop
jmp
mov
pop
lahf
push
lret
inc
and
aas
inc
xchg
jp
or
mov
ret
popa
push
pushf
sar
xor
popf
xor
jp
and
add
add
fists
les
cmp
mov
lea
push
mov
ja
dec
pop
inc
sbb
stos
stc
inc
rol
cmp
jg
out
push
push
adc
sbb
pop
insb
in
outsb
shrl
sbb
ss
sbb
cmpsb
add
cwtl
jae
in
adc
addr16
or
adc
js
or
dec
loope
xchg
xor
shrl
ds
jnp
negb
inc
and
adc
and
subb
jne
das
mov
aas
ja
das
inc
outsl
aam
xorl
iret
adc
nop
js
pop
xchg
jbe
xchg
imul
pop
sub
test
mov
and
xchg
ret
icebp
or
loopne
ss
cmp
rorb
pushf
sbb
leave
ljmp
nop
repnz
or
jecxz
pop
push
mov
sub
push
jns
pop
adc
jl
jnp
cmc
push
cmp
jb
mov
and
push
ds
dec
sbb
mov
subl
pop
cld
repnz
dec
shll
fdivr
xchg
js
outsl
xor
inc
out
into
sti
mov
lea
jns
inc
sbb
sbb
mov
xor
dec
andl
shrl
sbb
or
adc
dec
imulb
mov
outsl
push
mov
adc
cmpsb
das
rcl
adc
aaa
sti
cmp
or
push
cmc
sahf
cmpsb
fyl2xp1
out
lea
stos
xchg
mov
adc
mov
repz
xor
es
adc
push
movsb
divl
mov
in
push
xchg
movsb
xchg
jmp
add
shll
mov
push
aam
mov
pusha
dec
out
xchg
jl
xlat
and
or
jge
out
push
in
sahf
or
stc
jb
sahf
sbb
lods
sbb
insl
std
shl
mov
jnp
mov
out
push
and
mov
xlat
pusha
rorb
cmp
arpl
nop
rorb
inc
push
test
sbb
or
mov
add
lds
and
mov
push
push
std
mov
cmp
xor
pushf
pop
je
pop
ds
sbb
pop
jp
cmp
pushf
mov
ret
adc
fucomp
cmpl
ds
insl
popf
in
adc
lock
or
lret
push
adcb
add
sub
jno
clc
push
mov
xor
inc
rorl
xlat
cmp
jmp
mov
or
cmp
and
or
mov
jmp
mov
pop
fsubl
push
push
or
xchg
rcrl
lods
scas
sub
xchg
xchg
mov
mov
xchg
jmp
mov
call
xchg
mov
xchg
aad
sbb
imul
cmp
lahf
sbb
mov
nop
mov
inc
in
addr16
push
pusha
cmp
xchg
adcl
push
mov
repnz
push
aad
aas
pop
gs
es
in
jecxz
int3
popa
int
pop
inc
icebp
jne
jno
sub
and
call
or
mov
sub
dec
and
imul
sar
push
sarl
subb
mov
pop
sahf
divb
add
repz
mov
adc
pop
xchg
jg
and
cltd
sbb
fisubs
jmp
jns
push
dec
lods
stos
out
jae
or
jecxz
sbb
outsb
aaa
mov
or
mov
testl
push
aas
ja
mulb
mov
xor
mov
jl
jns
in
xchg
insb
add
dec
outsl
mov
sub
and
js
mov
jge
xor
dec
pop
les
lds
jmp
mov
insb
orl
and
mov
pop
int
add
fcomps
push
int3
push
push
scas
mov
adc
mov
repz
add
fwait
xor
xor
or
out
pop
xor
dec
pop
xchg
mov
lds
pop
mov
in
in
jecxz
pop
or
iret
push
mov
xchg
adc
mov
push
push
sbb
xlat
inc
cmpsl
push
mov
insb
pop
jbe
inc
fwait
mov
pushf
cmp
lahf
fcompl
mov
lret
lret
iret
in
jb
jl
cld
jle
and
jno
mov
push
movsl
adc
lds
shlb
pusha
push
lods
add
xor
and
cmp
lock
out
adc
mov
mov
push
jae
push
fsubs
mov
dec
shll
subb
insl
imulb
pop
jge
cli
inc
dec
xchg
mov
push
sti
arpl
xorb
push
push
mov
mov
int
sub
cmp
pop
ds
jge
dec
int3
aad
stc
jg
clc
push
mov
jmp
jecxz
add
jmp
push
add
dec
cli
dec
outsb
imul
inc
push
enter
sub
imul
add
jns
or
xchg
lahf
movsb
pop
mov
and
das
cmp
clc
sahf
mov
dec
lret
pop
shl
test
push
and
push
inc
popf
cld
lds
in
lds
mov
cmp
dec
xor
pop
hlt
push
movsl
repz
cmpsl
lahf
mov
popf
mov
icebp
add
icebp
mov
push
jae
jo
sub
xlat
jecxz
mov
mov
mov
data16
adc
cs
data16
pop
lcall
sbb
test
cmc
push
dec
xchg
or
in
pop
lret
scas
mov
loop
add
jecxz
or
sbb
jnp
pop
cmp
shl
mov
lcall
jecxz
and
lcall
arpl
cmp
mov
and
cmp
xchg
vhaddps
fldt
sahf
mov
cwtl
jl
cwtl
dec
out
aaa
shlb
pop
out
and
out
das
cltd
aad
jg
and
sub
pop
imul
xor
mov
jmp
sub
call
into
xchg
sarl
jle
out
sub
mov
inc
ja
shufps
inc
outsb
mov
or
mov
outsl
jno
mov
loopne
cmp
and
pushf
xor
xchg
stos
jo
add
insl
int3
stos
ja
add
and
or
hlt
rcrb
adc
xchg
cmp
idivl
mov
xchg
or
pop
ja
mov
xchg
mov
ret
movsb
loop
fisttpll
dec
jl
rcl
scas
ds
std
jge
fpatan
sub
ficomps
push
cmp
sub
sub
rolb
pop
scas
xor
cmp
pop
xor
or
mov
lods
add
enter
sub
les
popf
mov
jae,pt
push
daa
lea
mov
outsl
add
xchg
test
dec
pop
mov
int
ss
bound
or
jle
leave
xor
leave
jge
fiaddl
lcall
push
push
imul
loopne
mov
rcrl
mov
inc
repnz
push
pusha
xchg
repz
rcll
ret
repz
daa
jo
push
fsubp
dec
adc
sahf
repz
xchg
pushf
and
popf
int
xchg
sarb
pop
jecxz
cmp
leave
mov
add
push
cmp
outsl
pop
into
fadds
insl
test
lock
in
movsb
sbb
xchg
and
cmp
stos
jge
pushf
dec
xchg
xchg
int3
push
or
mov
xor
mov
jne
adc
ljmp
dec
movsb
mov
and
cmc
push
bound
pop
loopne
adc
imul
pop
push
xchg
lcall
gs
mov
call
repz
add
push
into
aas
add
and
mov
inc
mov
jns
lret
jecxz
decl
pop
mov
out
aas
shrb
add
sub
popa
les
outsl
aad
data16
les
mov
imul
jl
pop
idivb
mov
movsl
in
xchg
add
inc
dec
mov
stos
mov
test
adc
jg
insl
sub
loop
adc
inc
mov
push
rclb
push
stc
push
lret
inc
int
dec
mov
push
and
sbb
sub
jnp
inc
scas
pop
and
in
and
sbb
mov
inc
jno
jmp
push
pop
fildl
adc
sbb
pusha
mov
mov
cmp
xchg
scas
loopne
iret
jg
mov
mov
cmp
cmc
stos
cmp
daa
xor
loop
push
jg
mov
jp
sub
cli
aaa
test
lcall
adc
out
cltd
cs
fwait
pop
mov
sti
sub
shrb
pop
push
neg
rcll
das
sbb
cmp
cld
pop
cld
cmp
push
shll
fs
or
xor
hlt
mov
mov
into
jge
enter
into
je
clc
push
or
pop
in
repnz
jb
gs
sbb
and
mov
mov
push
xchg
adc
outsl
hlt
fdiv
xchg
loop
cmp
test
clc
cs
mov
bound
sub
sub
pop
jae
enter
sbb
sbb
pop
fiaddl
pop
jo
push
jl
aas
pusha
fstpt
pop
lcall
mov
repnz
cmp
lods
mov
aad
push
nop
mov
neg
repnz
cld
dec
loope
xchg
clc
dec
or
std
pusha
test
icebp
jmp
xchg
imul
mov
or
pop
add
repz
mov
and
jge
cmp
pop
fnstcw
mov
test
push
rorl
xchg
icebp
xor
lods
mov
and
loopne
rep
loopne
cmp
in
loopne
jbe
pop
cmpsl
mov
jp
add
call
pop
inc
insb
lahf
mov
insb
inc
jnp
jo
sbb
push
pop
in
lahf
jl
in
out
pop
push
mov
push
outsl
stc
mov
jne
pop
xchg
ss
add
std
adc
mov
cmp
call
adc
xchg
gs
lds
aas
xor
adc
inc
std
mov
nop
push
jmp
pop
xchg
sahf
pop
jo
jecxz
or
and
pop
in
cmp
mov
dec
sub
fcmovnb
in
xchg
push
sbb
fwait
call
std
data16
ror
lcall
xchg
aas
cmpsb
fstpt
rorl
xchg
aas
jbe
je
xor
jns
xlat
arpl
cmc
xchg
mov
add
cmp
jg
adc
out
arpl
aas
fcmovne
or
movsl
jecxz
xorb
cs
pop
pushf
insb
loopne
mov
xchg
xor
pop
imul
and
or
fcoms
adc
ret
je
fiaddl
add
xor
in
xchg
shrl
cmp
add
mov
pusha
sub
or
xor
movsb
sub
icebp
sbb
add
push
or
inc
lahf
scas
jae
jno
lahf
pmulhuw
ficoml
or
jecxz
andl
adc
sti
pusha
mov
fmul
lahf
or
lods
leave
xor
adc
and
xor
cld
jbe
mov
out
daa
jne
scas
pop
xor
and
dec
xchg
xchg
fildl
mov
movsb
pop
loope
outsl
sub
and
or
xchg
cmp
repnz
mov
dec
cs
xor
mov
mov
inc
outsl
lcall
inc
and
and
mov
shl
aad
hlt
xor
shl
lret
out
cmc
mov
xor
mov
flds
pop
insl
add
int
outsb
decl
adc
jle
test
xchg
aaa
adc
popf
pop
dec
mov
cmpl
sub
jmp
aad
lret
fs
dec
popa
pop
pop
mov
popf
mov
xchg
ret
aaa
clc
pop
push
scas
sbb
lods
cmp
and
std
gs
mov
aaa
int3
jecxz
lret
adc
sbbl
adc
adc
lods
dec
mov
test
mov
mov
out
jae
test
push
pop
mov
fimull
cmp
cmp
ja
pop
lcall
aam
mov
jns
fmul
out
mov
jecxz
jp
rol
mov
mov
fucomp
outsb
inc
jmp
sub
stos
inc
aas
dec
cltd
imul
xchg
pmulhw
stos
pop
jge
in
sbb
icebp
call
sbb
mov
cmp
xchg
jb
fistpl
lods
add
push
das
mov
insb
cmc
into
pop
inc
pusha
mov
mov
test
xlat
push
or
lcall
in
dec
mov
inc
mov
and
mov
mov
pop
pop
ja
inc
les
shlb
iret
lahf
sub
fdiv
mov
inc
xor
int
mov
push
js
inc
bound
mov
scas
mov
jne
mov
stc
test
imul
pop
or
push
aad
in
mov
push
jg
jmp
rolb
repz
xlat
xchg
outsl
jb
add
js
mov
dec
mov
dec
xrelease
bound
inc
dec
rcll
sub
out
dec
mov
and
add
rolb
lock
sbb
pushl
pop
fbld
xchg
ds
push
aaa
repnz
xor
jecxz
in
inc
mov
jbe
int3
push
sub
jne
mov
mov
sbb
popf
das
aad
nop
pusha
iret
sub
push
data16
mov
lock
sub
cmpsb
aaa
sub
mov
pop
sbb
into
sbb
mov
mov
add
xchg
inc
les
movsl
test
popf
ja
lahf
sbb
sbb
mov
imul
sub
jnp
add
test
sarl
fbld
jmp
cmpl
pop
jg
xor
and
lds
ret
test
inc
lds
mov
xchg
dec
push
inc
xlat
dec
mov
bound
loope
lods
jno
int3
movsb
mov
cmpsb
pop
lahf
popf
dec
cltd
popl
shrb
dec
pushf
data16
rorl
push
xchg
add
out
push
pop
ja
pop
test
mov
popa
xchg
xorb
xlat
int
icebp
hlt
jmp
mov
mov
fwait
inc
add
out
mov
xchg
xor
movsl
xor
testl
movsb
int3
test
sti
stc
test
push
stos
hlt
xchg
jnp
in
sub
or
jmp
add
mov
sbb
jp
inc
sahf
add
push
pop
cmp
mov
loopne
aad
std
sbb
dec
ljmp
add
push
loopne
mov
out
mov
pusha
int3
push
mov
aas
xlat
xchg
int3
pop
insl
inc
dec
cltd
sbb
test
out
ss
ficoms
jae
sbb
inc
pusha
movl
push
andb
leave
pop
pop
lods
push
sti
shll
push
fs
pop
push
mov
mov
dec
and
loop
fs
add
lods
inc
adc
gs
leave
or
fdivs
adc
add
add
dec
test
stos
ds
add
loopnew
dec
xor
mov
mov
shll
push
adc
jbe
ret
es
push
in
out
scas
xchg
xchg
lea
test
inc
add
scas
repz
dec
ds
or
dec
inc
es
not
rcrl
push
clc
mov
xchg
push
add
roll
fxch
sub
std
push
mov
pop
mov
jbe
ret
add
ja
pusha
testb
sub
imul
dec
inc
push
test
jecxz
mov
cmp
sbb
adc
mov
mov
outsb
dec
push
and
imul
adc
mov
xchg
rcll
pop
mov
push
jmp
repz
or
push
scas
inc
fwait
add
xchg
adc
aas
lret
sub
mov
jmp
sub
int3
ss
aaa
xchg
dec
out
pushl
jo
xor
fs
scas
shl
dec
sti
lock
incl
inc
xlat
ljmp
sbb
add
popf
insb
lret
pop
and
and
and
add
rcrl
insb
sahf
sbb
inc
stc
xchg
add
arpl
js
dec
stc
fidivrl
loop
add
decb
int
push
cmpsb
lock
cmpsb
scas
movsl
mov
mov
mov
test
cmp
sbb
pop
int
jo
sahf
push
jo
dec
mov
ret
aas
xchg
fcoms
ds
inc
inc
pop
lods
push
dec
or
pop
sub
repz
aam
addl
pop
mov
repz
xchg
sarb
fbstp
or
jnp
int
popa
inc
xchg
xchg
mov
jnp
add
or
pop
and
aaa
mov
test
pusha
jns
hlt
repz
adc
push
mov
test
jle
fisttpll
outsb
addl
push
cli
xchg
push
pop
pop
mov
lret
or
in
lods
in
std
rcrb
ljmp
mov
pop
outsl
mov
lea
xchg
cmpsb
pop
sub
idivb
fisubl
inc
cmp
leave
mov
out
xchg
js
mov
xor
dec
add
aad
lods
sbb
mov
js
nop
cli
cmp
or
ja
mov
fsub
push
push
imul
lcall
ja
or
mov
lea
testl
adc
xor
fistpl
sbb
jae
int
push
movsl
and
test
arpl
lds
lahf
lea
add
test
divl
and
jb
xor
jns
mov
add
sbb
hlt
shrl
outsl
push
shl
out
enter
scas
addr16
cmpsb
jl
and
push
jl
inc
popa
add
insl
inc
mov
lahf
je
jg
push
out
orb
das
in
mov
out
lcall
mov
adc
xchg
add
mov
pop
cmc
inc
xchg
cmp
addr16
loopne
dec
mov
jb
scas
sbb
pop
mov
jb
sbb
js
ja
ret
add
pop
xchg
pop
imul
jae
imulb
stc
adc
push
sub
cmp
sysenter
jl
aam
xorl
mov
test
sub
mov
lods
xchg
sbbl
out
rclb
sarl
mov
mov
sarl
fadds
stc
mov
aaa
add
popa
cld
dec
rorl
mov
mov
jp
and
jnp
stc
call
pusha
insl
mov
cmp
xchg
sub
loopne
ljmp
movsb
lret
ja
xchg
iret
js
out
jns
ljmp
das
xchg
fstps
mov
cwtl
pop
cli
es
iret
repz
mov
dec
pop
xor
scas
in
pop
sub
lods
cmp
mulb
or
je
test
es
mov
clc
mov
xchg
icebp
dec
jne
aad
fcomp
push
es
xchg
enter
cmp
mov
mov
enter
ljmp
dec
inc
mov
or
out
les
jno
shll
mov
inc
mov
push
pop
popf
ret
push
test
pusha
push
pop
outsl
out
xor
mov
adc
xchg
cli
cs
push
dec
push
mov
fdivrs
cmpsb
adc
push
or
sub
sbb
pushf
dec
in
int
push
addr16
jae
xchg
fwait
mov
xor
push
aaa
xor
cwtl
mov
int3
add
cmp
cmpsb
stos
mov
push
ret
jle
stos
xlat
fs
cmp
cld
hlt
out
jae
cli
sub
loopne
fistl
mov
je
sbb
mov
mov
sub
leave
lahf
sub
ja
inc
jge
repnz
mov
jne
pop
iret
inc
cld
push
and
inc
ficoml
stos
sti
jecxz
dec
mov
lea
dec
repz
call
stc
fnsave
frstor
repz
inc
adc
fstpt
aaa
scas
in
pop
sbb
jecxz
lods
cld
out
cmpsl
xchg
xchg
mov
hlt
lock
in
movsl
andb
adc
ds
adc
xor
fldcw
lock
inc
gs
mov
add
insl
and
xchg
insb
test
mov
shl
sarb
mov
add
mov
inc
int
int
sbb
and
push
aaa
mov
sbb
lods
xor
pushf
sbb
sub
dec
icebp
dec
jmp
jecxz
in
imul
into
mov
xchg
cmp
imul
fcomip
push
inc
xor
stc
cmp
jg
shrl
add
dec
xchg
lahf
aam
xchg
mov
fbld
pop
mov
push
gs
xchg
pop
cmc
les
in
adc
divl
pop
test
rol
popa
inc
mov
mov
mov
fldpi
xchg
insl
test
into
sub
mov
sub
mov
xlat
inc
out
pop
adc
jge
popa
andl
out
loop
add
xlat
or
adc
xlat
or
jmp
sbb
fdiv
xor
loopne
or
inc
cs
adcb
add
xor
fidivl
or
mov
jp
sbb
mov
cmpsb
adc
js
test
cmp
xor
mov
mov
pushf
das
mov
or
xor
mov
inc
dec
jne
es
mov
sarl
addr16
jae
push
dec
mov
jo
lret
lret
adc
negl
inc
insl
fsubrs
xlat
repnz
and
mov
repnz
cmp
lret
push
xchg
dec
movsl
arpl
xchg
lcall
add
fisubl
xor
aas
pop
cs
add
mov
and
cmpsl
cmpsb
sub
movsl
push
adc
cli
mov
xchg
aaa
gs
cld
jae
adc
or
mov
pop
flds
pop
cld
or
popf
lret
cmp
mov
out
cmp
push
dec
jecxz
mov
adc
scas
das
fdivr
cmp
push
adc
aas
fldl2t
push
xchg
adc
xor
fbld
cwtl
out
sub
shl
and
mov
addr16
hlt
cmp
es
in
lods
inc
in
cmp
lahf
loop
fwait
insb
mov
shrl
push
sub
stos
das
out
jecxz
jo
mov
lods
or
mov
add
or
mov
out
xor
mov
dec
pop
cmc
jp
std
insb
int3
jo
test
mov
aad
enter
xchg
and
inc
stc
pop
lods
mov
jmp
insl
xchg
or
jb
jle
lods
mov
ror
or
pop
test
mov
daa
data16
and
push
outsb
mov
mull
mov
fs
add
pop
lea
fmuls
inc
call
mov
mov
fs
int3
inc
add
mov
jge
in
pusha
lods
popf
dec
js
push
pop
sub
and
jmp
jge
ljmp
xchg
fmul
pop
roll
stos
xchg
cmp
and
cmp
sbb
and
push
dec
inc
lods
pop
push
dec
pop
and
sti
jae
mov
in
push
xchg
je
cmp
scas
inc
sti
mov
in
rcrb
mov
insl
loop
gs
popa
mov
cmp
ss
test
mov
cmp
and
stos
sub
es
or
mov
xlat
aad
inc
imul
int
data16
xor
pop
push
faddl
pop
jge
lods
insb
cmp
std
daa
les
fildl
mull
jmp
push
adc
xor
xor
in
mov
sbb
sub
fidivrl
adc
fstps
jl
pushf
cwtl
stc
add
pop
adc
test
jmp
lahf
std
fsubl
jae
add
inc
xchg
pop
and
mov
or
movsb
lret
mov
cmp
sbb
add
xchg
adc
mov
fistpll
mov
repnz
repnz
popa
shr
add
mov
gs
clc
and
inc
dec
dec
xor
inc
test
int
mov
lock
gs
int
in
sbb
jmp
rcrl
rcl
inc
std
and
loope
sub
arpl
xchg
jl
and
or
mov
mov
cmpsb
insl
pusha
scas
jge
mov
lret
popa
adc
stos
push
aam
addr16
add
ficompl
insl
fdivs
lds
pop
data16
fwait
repz
jbe
fbld
xchg
inc
ficompl
data16
js
inc
addr16
add
push
pop
lret
push
shrb
out
add
cmp
cltd
xchg
ret
and
xor
cmovb
xchg
push
pop
arpl
cwtl
add
lcall
dec
sbb
jnp
stc
jge
sub
mov
mov
enter
mov
xchg
stc
mov
mov
hlt
outsl
add
mov
rorb
add
pop
or
dec
mov
xor
out
sub
pushf
and
cmc
inc
inc
sub
in
mov
xchg
fwait
cs
out
bswap
add
ret
mov
sti
call
jle,pt
negl
int
int3
jmp
push
or
pop
mov
js
dec
add
lods
loopne
inc
pop
sbb
lea
mov
lds
jmp
xor
adc
pop
and
xchg
sub
pop
pop
std
test
jo
shrb
into
pop
iret
scas
stos
lret
mov
inc
cmp
int3
sbb
pop
pop
pop
push
fwait
mov
pop
ret
xchg
lods
push
aaa
mov
mov
or
das
cmp
cmpsb
loopne
fs
cmp
mov
clc
aas
jge
enter
fwait
test
testl
jnp
test
mov
jnp
cmp
sbb
insl
sub
sbb
mov
xor
out
stc
jbe
dec
push
mov
loop
loopne
cmc
lea
mov
and
cwtl
ret
jp
sbb
jae
pop
ja
mov
pop
inc
sub
adc
cmc
jno
sbb
mov
icebp
rcrb
jecxz
add
sbb
movsl
dec
xor
lret
ljmp
and
add
xor
gs
mov
fcmove
loop
sub
dec
call
mov
jge
xor
push
mov
adc
mov
xchg
mov
cmp
enter
jl
inc
xlat
mov
xor
adc
cs
adc
xlat
movsb
addr16
add
icebp
test
adc
gs
mov
xchg
push
xchg
lret
mov
out
aad
jp
push
sbb
repnz
lcall
popf
cmp
sarb
pop
push
or
sbb
call
and
add
aam
push
xchg
insl
xor
fs
mov
mov
mov
pusha
insl
xor
lock
mov
xchg
ret
fs
rcrb
cmp
enter
pop
cmpsl
das
sbb
pop
cmp
xor
jns
cli
mov
mov
mov
xchg
add
lahf
mov
test
jecxz
popf
cmp
loopne
loopne
cmpsl
pop
lea
cltd
add
aad
mov
aad
out
sbb
shl
cmp
and
push
inc
scas
div
and
pop
aad
mov
in
fsubrl
mov
inc
mov
data16
adc
xor
pop
jecxz
dec
std
mov
outsl
cmpsl
xor
ss
add
stos
stos
mov
clc
flds
push
dec
fisubrl
insb
int3
or
outsb
call
dec
shrl
cmc
js
fisubs
outsb
adc
js
ja
loope
out
push
or
and
sub
sbb
xchg
mov
flds
push
stos
fs
ret
gs
fsubr
inc
inc
cs
jno
mov
sti
inc
cld
mov
arpl
hlt
cmpb
mov
and
jl
gs
push
insl
stos
cmp
pusha
ret
push
push
mov
in
xor
mov
mov
mov
mov
xor
ljmp
gs
mov
in
xchg
mov
cmp
lock
movsb
mov
scas
rolb
xchg
xchg
iret
mov
mov
pop
add
andb
insb
imul
or
fbld
scas
aaa
push
cwtl
in
lcall
xchg
or
lods
add
or
insb
ss
iret
test
add
xlat
add
call
inc
out
inc
push
pop
xchg
jbe
sbb
pop
pop
lret
out
test
xchg
cmp
cmp
sub
in
call
adc
ret
jno
jno
mov
cmpb
imul
data16
popf
mov
repz
push
scas
jmp
inc
mov
sahf
pop
jo
mov
add
div
int3
sub
cltd
call
jo
leave
jge
jmp
icebp
sbbl
nop
aaa
add
xchg
dec
or
add
adc
push
jne
andl
pop
xchg
addr16
adc
cmp
shrb
enter
adc
add
and
sub
enter
xlat
mov
sub
popa
dec
inc
pop
jg
stos
mov
jecxz
scas
orb
addl
cmpsl
fiadds
aas
pop
aas
leave
subb
pop
sbb
imul
aad
aas
jno
sub
js
dec
dec
adc
add
lret
xchg
std
mov
shll
mov
xchg
push
xor
cmp
repnz
es
jmp
cli
pop
pusha
arpl
fdivrl
xor
cltd
fsubrp
mov
sub
push
das
dec
ret
outsl
pusha
adc
xlat
lds
and
xor
mov
jge
pop
mov
add
icebp
clc
sub
dec
sbb
jg
cld
mov
fdivl
icebp
fmull
xor
stos
icebp
xchg
xchg
loop
mov
fs
xor
pop
lock
xchg
cli
jecxz
xlat
dec
into
dec
mov
and
mov
sahf
sub
rcrl
sub
int3
sub
fcompl
adc
scas
mov
xor
cmp
pusha
movsl
and
imul
popa
mov
insb
adc
mov
dec
xor
bound
sub
ss
mov
inc
movsb
xchg
mov
lahf
jae
fisttps
lea
mov
rcrl
loop
mov
and
pop
mov
dec
inc
cmp
shll
stos
testb
dec
adc
sub
jmp
mov
loope
fcoml
cmp
ja
pop
repz
push
adc
jle
adc
inc
push
and
inc
sbb
add
inc
movsb
stos
add
dec
inc
jge
test
out
cmp
mov
dec
dec
stos
mov
and
fnstenv
std
inc
pop
ret
mov
and
movsl
jno
mov
inc
push
pop
pop
in
adc
loopne
lcall
xchg
sbb
jo
xor
mov
jbe
mov
neg
daa
push
jne
and
inc
leave
imul
push
sub
sbb
lea
out
mov
and
sub
jge
jno
arpl
lods
insl
incb
out
pop
fadds
out
mov
enter
add
scas
frstor
pop
popf
subl
dec
mov
inc
mov
pushf
dec
repz
inc
mov
mov
mov
pop
js
jmp
xor
adc
push
stos
push
adc
xor
push
add
and
pop
enter
sarl
data16
fisttpl
fsubrs
fcoms
adc
in
out
jmp
or
mov
xor
adc
adc
pushf
cmp
cld
pop
dec
push
sub
jae
mov
arpl
xchg
movsl
loopne
sbb
or
movsl
jmp
xchg
or
iret
gs
mov
cmp
sbb
fbstp
pop
stos
jp
pop
ret
in
jne
mov
orb
mov
jno
aas
jecxz
ja
nop
xchg
jecxz
add
roll
into
and
cmp
dec
inc
jle
cmpb
mov
jnp
dec
ds
aam
fcmovnu
or
mov
mov
loope
or
xlat
dec
push
sub
es
add
aaa
xchg
mov
push
scas
and
push
xchg
sbb
sbb
scas
stos
test
pop
scas
enter
fidivs
sbb
cmc
loope
mov
insl
pop
push
jns
fdivrs
add
mov
xor
jg
out
clc
loopne
dec
push
icebp
ret
test
add
fstl
pop
decb
in
jl
movsl
loopne
jmp
int
ja
fs
pop
xor
adc
and
xor
insb
and
inc
pop
xlat
sahf
out
syscall
and
in
jnp
mov
lds
xor
pop
add
jae
push
inc
mov
test
dec
rclb
xor
mov
sbb
and
xchg
inc
mov
jne
pusha
pop
iret
out
popf
lret
notb
dec
sbb
aad
jecxz
add
or
pop
and
sbb
dec
jbe
subl
test
cwtl
in
ds
hlt
je
movsl
inc
pop
out
outsl
scas
lahf
dec
xchg
cmp
sbb
leave
inc
les
mov
into
mov
push
jae
push
sub
rcrl
mov
test
daa
sub
mov
xchg
pusha
ss
lock
cmpsb
jne
fs
pop
stos
scas
bound
loop
mov
addr16
sahf
and
cli
rcrb
ja
push
mov
cs
into
inc
inc
in
push
stc
push
sarb
xchg
std
or
lret
in
mov
and
fiaddl
notb
push
dec
incb
fnstsw
mov
xchg
ds
add
fimull
movsb
mulps
xchg
out
dec
cmp
pop
fdivs
jbe
jmp
sahf
les
ss
out
insb
lock
enter
stc
add
mov
mov
pusha
jl
int
inc
sub
data16
sub
and
pop
inc
mov
int3
arpl
add
idiv
xchg
cs
loop
pop
ja
xchg
nop
dec
cmp
pusha
xlat
lea
sbb
xchg
xchg
incb
or
mov
lods
loopne
cmp
xchg
xlat
les
popf
sbb
and
inc
or
addr16
test
adc
fbld
pusha
lods
cmp
mov
out
sub
ret
jecxz
imul
adc
add
dec
in
inc
cmpsb
push
in
cmp
shrb
sbb
lcall
in
dec
jnp
mov
fbld
negl
inc
xchg
and
push
inc
test
roll
sub
xor
test
add
mov
adc
lds
inc
outsl
int
jmp
pop
xorb
xchg
mov
push
xchg
cmp
loopne
fs
int3
int3
inc
in
and
inc
daa
fisubrs
imul
or
in
cmp
xchg
loope
aad
pop
loopne
clc
repnz
out
push
mov
mov
lahf
sbb
sbb
cwtl
sarb
divb
xor
pushl
lods
repz
out
fcompl
sahf
and
lret
pop
push
mov
mov
adc
stc
push
lods
pop
or
stc
adc
adc
pop
lret
jo
mov
fsubl
std
in
es
cmp
loop
and
push
pop
jl
test
fstpl
pop
adc
pop
jo
sbb
mov
adc
ror
dec
xchg
add
mov
push
dec
das
imul
add
xor
xor
xchg
gs
aam
js
sarl
test
dec
jmp
aaa
imul
xlat
mov
idivl
cmpb
int
gs
jg
and
xor
sub
in
in
and
sub
fs
xor
out
mov
pop
rclb
add
adc
xchg
rcrb
pop
rcrb
sub
pop
pushl
repnz
dec
lods
pop
in
mov
cld
jge
fistpl
mov
jmp
lea
cmp
dec
cmc
enter
scas
std
sti
into
ret
push
xchg
push
or
dec
push
jl
ret
shlb
dec
jl,pt
push
xor
dec
cs
lahf
stc
lret
and
lret
icebp
sbb
or
out
add
pop
adc
lea
inc
add
loope
ja
jno
iret
mov
hlt
psubusw
mov
sub
insl
and
hlt
in
dec
adc
sub
push
xchg
push
daa
in
rclb
int
cmp
adcl
mov
pushf
adc
js
xchg
fwait
lea
cltd
add
mov
add
dec
push
mov
sbb
lea
xchg
mov
mov
mov
std
and
ret
sub
imul
or
and
imul
cld
incb
sub
pop
fldcw
out
ljmp
cmpsl
fdivrp
mov
mov
add
jne
lods
scas
jbe
arpl
push
inc
insl
mov
rcrb
or
pop
sub
mov
orb
and
out
jg
sti
pushf
jae
rol
outsb
repz
fcompl
or
add
xchg
xchg
inc
test
push
or
adc
jbe
jae
push
fs
aad
mov
nop
int
inc
daa
dec
sub
jmp
push
pop
dec
adc
dec
out
popf
out
xchg
shll
pusha
xor
or
imul
xor
sahf
movsl
xchg
ds
mov
out
mov
or
leave
jg
push
xchg
ss
and
sub
sub
mov
and
and
cld
imul
arpl
cmp
jno
sub
cmpsb
into
stos
pop
jb
cltd
dec
nop
add
jns
fs
iret
mov
push
xor
push
adc
cmc
dec
rolb
scas
bound
cmp
cmp
fs
subl
ja
adc
mov
mov
lahf
popa
sbbl
andl
adcl
and
adc
mov
ret
rcl
bnd
sub
mov
mov
idiv
clc
xor
jg
pop
pusha
call
loop
mulb
jae
jp
xchg
mov
jno
inc
sub
sti
in
fnstsw
clc
divb
mov
fnstcw
adc
sub
jp
mov
mov
push
sbb
imul
inc
roll
xchg
xor
sahf
mov
mov
inc
cwtl
sbb
sbb
lcall
enter
rorl
jmp
in
push
aas
and
sbb
cmp
test
icebp
add
fldenv
pop
and
sbb
sub
in
je
xor
adc
out
pop
out
and
add
cmpsl
std
inc
mov
ret
pop
sbb
mov
in
add
xchg
jle
hlt
and
outsb
je
add
add
sbb
sahf
loopne
sbb
xchg
scas
xlat
sub
add
xor
mov
scas
mov
sbb
mov
cmp
mov
popa
subb
aaa
call
mov
jbe
dec
cmp
pop
inc
mov
adc
out
jl
stos
inc
das
mov
cmpsl
std
add
test
aas
loopne
pushf
pop
xor
mov
sarl
lret
sbb
in
sbb
sub
in
imul
adc
jae
cmpb
mov
imul
mov
push
cmp
jl
inc
cmp
fadds
xchg
inc
xchg
sahf
lea
icebp
jle
icebp
pop
sub
mov
mov
mov
xchg
fstps
sbb
sbbb
adc
pop
mov
mov
lcall
mov
pop
in
out
mov
xchg
xlat
je
ljmp
mov
roll
mov
and
cs
aad
shlb
movsl
call
or
outsl
leave
out
inc
add
ret
jp
rclb
sti
stos
cmp
fsub
push
cmp
jle
jge
nop
or
or
dec
call
ds
xor
imul
add
mov
mov
cmp
ds
inc
aam
les
fcmovb
ss
icebp
loopne
xor
sub
and
jnp
leave
jp
outsb
sbb
mov
cmp
push
mov
lahf
or
xlat
fucomi
lahf
mov
adc
in
sub
mov
ret
push
fisubl
bound
scas
xchg
lods
hlt
decl
jns
fwait
ret
lock
push
repz
mov
cltd
mov
pop
inc
flds
ljmp
push
lea
hlt
pop
jle
push
cwtl
adcl
mov
add
int3
push
in
push
pushf
sarb
pop
cmp
sbb
lahf
std
push
lahf
jle
lret
mov
inc
fs
mov
lcall
loop
mov
in
pop
fwait
and
push
dec
fs
inc
pop
adc
dec
cmpsb
test
jbe
pop
mov
test
fisubs
inc
pop
and
or
jmp
mov
lahf
add
jge
jno
inc
push
cmp
out
add
dec
sbb
push
std
add
test
dec
and
fistpl
and
xor
sbb
into
mov
adc
call
ja
in
enter
imul
test
fcompl
test
scas
mov
push
in
jns
mov
les
pop
sbb
nop
nopl
scas
cs
sarl
adc
test
push
mov
inc
add
inc
xor
dec
rcrl
movsb
sub
cmpl
into
dec
lods
sub
dec
push
stos
xor
add
bound
fwait
push
jnp
sti
daa
arpl
nop
cld
stos
out
rorl
and
mov
insb
cs
ret
pop
inc
mov
jle
inc
jmp
enter
xchg
in
mov
mov
test
mov
enter
addr16
xor
fists
aad
or
push
lds
pop
outsl
push
insl
stc
cmpsb
and
dec
xlat
jne
xor
jnp
push
dec
mov
test
mov
cmp
stos
incb
dec
sub
add
push
or
mov
jge
incl
cli
or
lret
pop
add
push
and
or
jge
ja
lret
jnp
pop
push
test
cwtl
ss
or
dec
or
add
push
movsb
stc
mov
pusha
sbb
cmp
add
scas
jl
sub
out
jne
test
xchg
cwtl
cld
jp
add
adc
out
dec
and
test
add
mov
lret
out
fmul
mov
test
fwait
adc
mov
aas
add
adc
jmp
inc
and
adc
in
mov
out
mov
out
popa
cs
dec
adc
lcall
mov
pop
xchg
cmp
das
cmp
fwait
pop
jne
mov
lock
and
lods
dec
mov
mov
stos
sub
pop
ret
xor
loopne
in
or
jecxz
out
xchg
mov
cwtl
aas
rcll
movsb
test
repnz
stc
test
or
pop
stos
popf
and
pop
or
repnz
mov
sbb
out
cmp
pushf
cmpsl
adc
out
inc
gs
sbb
movsb
sbb
jl
in
hlt
loope
ret
std
jb
ret
mov
or
fisttps
loop
push
sub
sbb
pop
adc
ja
lds
ret
pushf
test
push
enter
inc
je
gs
pop
nop
push
fldenv
lcall
dec
outsb
jge
sbb
lods
push
fwait
mov
xchg
pop
pop
mov
mov
cs
stos
lods
pop
into
dec
dec
and
pop
jp
jg
push
mov
mov
mov
xchg
fs
lcall
cmp
xchg
outsl
pop
test
stos
push
sbb
dec
adc
jmp
xchg
xor
cs
jae
or
mov
jne
mov
jp
mov
in
mov
jp
push
mov
ret
sti
pop
pop
hlt
fwait
add
and
xchg
stos
push
jmp
cli
icebp
add
xchg
leave
into
mul
jge
test
mov
addr16
sahf
xchg
jb
pop
leave
push
xchg
lds
adc
fdivrs
scas
test
jmp
test
ss
pop
in
ja
xorb
jmp
mov
jo
lock
push
push
pop
xor
out
sub
xchg
xchg
clc
arpl
mov
into
mov
lret
outsb
stos
int3
ds
andb
leave
pop
push
lods
mov
lds
ds
mov
xlat
inc
lods
dec
out
incb
pop
rcrb
dec
dec
iret
das
dec
pcmpgtd
push
pop
loope
mov
push
aam
mov
mov
xchg
jmp
insl
pusha
fldcw
arpl
loopne
pop
sbb
icebp
xchg
or
cmpsb
movd
mov
xchg
jle
leave
daa
dec
out
xchg
arpl
aam
outsb
arpl
ffreep
push
and
stos
test
insb
lret
adc
lods
test
dec
repnz
xchg
enter
mov
stc
push
sti
stos
sub
pop
mov
and
mov
cmp
imulb
cmpsl
test
pusha
in
fbstp
mov
lods
mov
test
push
dec
les
sub
ss
movsl
cmp
sahf
jge
repz
pop
jge
imul
rcr
dec
sub
dec
sub
decl
cmp
xchg
in
ljmp
jne
pop
push
add
and
data16
fs
jbe
mov
xchg
mov
dec
out
push
mov
fldcw
inc
andb
push
jmp
xchg
and
and
ljmp
std
ret
ds
pop
mov
fdivrl
add
add
setp
inc
cmpsb
or
in
popf
mov
mov
push
lcall
fiaddl
dec
xchg
sub
mov
outsb
dec
imull
push
in
or
inc
lahf
popa
popf
dec
outsl
fstl
repz
xlat
nop
adc
and
mov
pushf
sbb
in
es
ljmp
push
hlt
aad
jmp
pop
sbb
lds
mov
std
adc
xor
ror
popa
insb
test
mov
xorl
test
loope,pn
in
mov
pop
mov
adc
iret
cld
push
mov
xchg
mov
inc
ret
push
pop
or
ljmp
jl
xor
iret
ss
inc
jge
fs
adcb
loopne
dec
inc
jg
mov
inc
xchg
mov
push
push
testl
cld
jge
mov
xchg
out
insl
push
insb
xchg
out
push
pop
popf
jp
pop
mov
sbb
int3
inc
xor
pop
or
push
cmp
mov
mov
mov
sbb
mov
jo
jecxz
cs
notl
cmpsl
pop
dec
push
fs
inc
push
outsl
test
repz
mov
pop
cli
pop
push
dec
add
test
outsl
sub
add
mov
daa
in
xor
imul
fcmovb
shr
les
outsb
cmp
mov
hlt
push
sub
test
cs
mov
sti
bound
mov
out
sub
les
dec
fimuls
daa
or
cmpsl
inc
orb
lods
or
pop
stos
or
adc
jnp
sub
or
push
xchg
into
test
push
ror
shll
mov
xchg
sub
pushl
xor
icebp
repz
mov
push
sbb
and
scas
test
sub
mov
outsl
fnstenv
sbbl
or
push
pop
push
std
cmp
push
testb
push
mov
sbb
sub
mov
ljmp
adc
and
sub
adc
jg
movsb
cmc
pop
fidivl
xchg
sbb
outsl
jge
popf
add
push
mov
int
pop
add
and
sbb
std
add
sbb
xor
fdivr
pushf
cmpsl
stc
loope
jb
xchg
hlt
xchg
aam
daa
in
lahf
push
jbe
inc
and
in
test
lret
data16
or
pop
mov
jns
mov
push
mov
cmp
pop
in
sub
and
and
test
pop
mov
sbb
rorb
scas
in
inc
cwtl
les
xor
xor
loop
out
dec
loopne
sbb
scas
pop
imul
aaa
outsb
scas
xchg
sbb
and
fists
cmp
scas
cmp
jle
dec
mov
std
xchg
sub
add
mov
in
sbb
in
mov
ljmp
movsb
notl
lret
shl
rorb
sbb
insb
int
cmpl
pop
push
mov
scas
cltd
clc
int3
add
pop
jbe
test
jbe
mov
sub
cmpsb
popa
pop
inc
mov
packuswb
xchg
and
xchg
cmpsb
add
scas
test
aam
fistl
clc
mov
sti
mov
lsl
inc
cltd
test
imul
dec
mov
into
inc
xchg
adc
adc
and
fst
xchg
add
dec
xor
in
push
lcall
stos
mov
loope
bound
int3
cli
sti
popf
push
data16
xchg
lahf
push
push
mov
fidivs
out
ss
and
mov
cmp
or
push
gs
mov
jns
es
movsb
pop
pop
pop
imul
mov
adc
pop
js
jl
mov
cmpsl
popa
pop
or
clc
fcompl
xor
xchg
sbb
cmp
enter
call
xor
cwtl
mov
add
stos
out
cmp
add
pop
clc
popa
pop
addl
mov
sbb
jge
ja
fidivl
imul
fstpl
and
inc
push
ss
xchg
loope
test
mov
ret
shl
jno
sti
and
addr16
sahf
jae
daa
cmp
fdivrs
pop
in
xchg
lods
or
sbb
push
test
aam
je
das
xchg
shl
pushf
fimuls
adc
mov
push
cmp
adc
cmp
pop
bound
lret
imul
sub
stos
loop
insb
jns
jg
lds
mov
pop
mov
xchg
mov
and
cmp
jb
xchg
jmp
addr16
roll
cmp
adc
jo
push
fs
push
mov
daa
out
loop
mov
inc
notb
lds
inc
xchg
fcmovne
cmp
les
lock
sbb
js
push
adc
mov
lock
and
xor
dec
ss
inc
js
test
inc
lods
fidivrl
jecxz
jmp
push
loop
in
mov
cmpsl
push
sub
sub
enter
jno
push
insl
fwait
pop
or
add
int3
mov
scas
inc
sahf
dec
add
loope
insl
js
mov
sahf
push
inc
dec
imul
push
jns
insl
add
jnp
adc
cmp
nop
push
sbb
xchg
sbb
das
orl
jge
adc
fwait
sub
data16
xchg
push
dec
mov
outsl
rcrb
push
mov
mov
je
insb
rol
xlat
fndisi(8087
sbb
xchg
jecxz
aaa
in
xchg
cmc
add
test
fwait
in
inc
xlat
clc
and
loope
imul
cmp
jle
insb
out
xchg
loope
andb
mov
jle
cld
mov
xchg
sbb
pop
push
sbb
test
test
dec
lods
push
dec
ja
out
xor
bound
and
xor
dec
lock
adc
fsts
int3
pop
sub
sbb
lcall
rorl
mov
in
fisubl
xchg
cmp
lock
or
xchg
pushf
sbb
sub
shll
outsl
add
adc
cmpsl
shlb
sbb
mov
mov
cmp
addr16
into
shlb
add
cmc
jl
mov
and
push
adc
mov
xchg
addr16
cmp
push
push
movsb
xor
fwait
jb
in
or
dec
fisttpl
xchg
mov
inc
rcr
inc
inc
mov
add
out
push
jmp
leave
mov
cwtl
mov
fnstsw
out
ret
pop
pop
test
dec
pop
sub
scas
lahf
popa
pop
sub
jo
mov
fcomps
pop
adc
repz
pushf
xlat
xchg
sub
movsb
arpl
addl
pop
cwtl
scas
or
inc
adc
imul
imul
int3
pop
in
xchg
sarl
das
cmc
jge
daa
push
popa
leave
in
ja
mov
shlb
ja
or
and
in
les
jecxz
dec
sbb
notl
xor
xchg
incl
movsb
or
jne
mov
adc
lock
jle
push
pop
sub
sar
ds
cld
adc
negb
jns
test
dec
mov
test
add
data16
pushf
push
aaa
xor
test
pop
jge
or
mov
cmp
push
xor
or
jl
add
es
sbb
cs
pop
inc
mov
xchg
ljmp
sub
out
sub
rcl
add
sub
cmp
hlt
or
xor
cmpsb
and
fcompl
lock
xor
pop
movsl
add
ljmp
mov
push
mov
divl
fstl
test
xchg
dec
mov
cmp
shlb
dec
pop
stc
cmovs
loope
loopne
push
add
lcall
push
les
dec
cld
ss
mov
adc
icebp
mov
fiaddl
adc
sub
xchg
hlt
clc
adc
fidivl
ret
push
bswap
and
add
jp
bound
popl
xor
push
div
xchg
mov
inc
mov
or
movb
pop
insl
sbb
pop
scas
hlt
adc
bound
mov
dec
insb
cmp
push
daa
shrl
flds
mov
and
xor
push
adc
jbe
out
sub
js
add
cmp
dec
jns
sub
lahf
pop
xor
xchg
sahf
pop
xchg
gs
decb
fidivrs
mov
ljmp
fldenv
imul
sti
ret
dec
push
cltd
and
cmp
mov
cmpsl
popf
lea
nop
pop
mov
mov
push
int3
pop
lods
ds
mov
popa
sbb
mov
dec
stos
sahf
std
in
cmp
inc
jle
fsubrs
jg
rorl
push
mov
nop
clc
jg
fnstcw
aad
lret
xchg
imul
incb
mov
cmp
sub
orb
adc
into
lcall
out
pop
and
mov
movsl
dec
mov
mov
pop
out
jnp
lahf
test
jecxz
push
adc
xchg
add
or
mov
inc
enter
outsb
in
or
pop
pop
sti
mov
jae
xor
fucom
outsl
jmp
dec
xchg
push
ror
arpl
add
push
or
mov
stos
stc
push
push
xlat
push
adc
xor
and
jae
mov
mov
mov
lock
jl
jb
mov
setg
mov
pop
enter
jnp
add
in
int
jle
push
loopne
cmp
addl
shll
rsm
add
mov
pusha
mov
fisubrs
imul
je
iret
test
ss
scas
int
fistpl
jb
inc
in
mov
pop
sub
dec
xor
shll
mov
lret
xor
sbb
shll
std
incb
js
jle
jae
nop
adc
mov
imul
outsl
xchg
and
mov
fldl
inc
or
dec
das
int3
and
leave
test
loope
imul
inc
jae
cmc
xchg
lret
outsb
pop
or
inc
fadds
sti
lea
sub
sbb
mov
adc
int
cmp
lret
xor
mov
sub
mov
adc
pushf
ds
nop
out
sub
int3
mov
add
jno
mov
cwtl
out
adc
xchg
jae
push
dec
jb
fcoms
push
push
sub
jl
mov
cmpsb
sub
xor
push
inc
cmpsb
jecxz
adc
inc
adc
push
gs
pop
mov
push
jp
outsl
sbb
outsl
shlb
clc
nop
jae
mov
imul
ss
or
or
int3
shl
aam
aaa
xor
mov
inc
std
jmp
repnz
filds
inc
fcompl
ljmp
or
xchg
cmp
movsb
std
frstor
out
xor
mov
mov
inc
insb
pop
push
neg
insl
xchg
or
add
push
lahf
fidivl
ja
pop
rcrl
pop
aas
pusha
fdivp
fistpl
repz
notb
add
inc
pop
or
adcb
jmp
adc
cmc
mov
lret
cmpsb
inc
push
dec
adcl
lcall
lock
cld
jp
inc
lds
mov
xor
xor
out
stos
adc
les
push
cmp
movsl
xor
fcmovb
jae
sub
adc
insb
mov
or
and
mov
addr16
aam
push
push
stos
jb
sub
cmpsl
push
fwait
push
ss
outsb
pushf
sbb
cmp
or
jae
xor
push
push
ret
ja
out
sti
lcall
nop
sub
xor
lret
loope
xchg
cmp
popf
ret
lcall
leave
fldt
pushf
push
ss
repnz
jo
mov
shlb
cmp
repnz
je
orl
aam
scas
xchg
jge
pop
cld
fs
adc
jmp
add
jnp
insb
loopne
jbe
add
pop
mov
pop
pusha
sbb
stos
sahf
xor
aad
mov
inc
popa
push
lea
jmp
mov
add
xchg
push
dec
cmp
hlt
ss
adc
rorb
pop
iret
sub
jo
movb
mov
popa
pop
clc
sar
push
cmc
inc
or
mov
mov
in
je
push
xor
jae
and
adc
sub
push
cmpsl
jo
pop
push
pop
ret
push
fisubl
popa
adc
lcall
jne
mov
sahf
pop
movsl
addr16
inc
in
leave
or
das
inc
adc
dec
pushf
notb
pop
mov
pop
jp
test
mov
dec
jmp
mov
fs
xor
jbe
cld
xor
pop
ds
jae
std
push
xchg
mov
out
shrb
lods
and
inc
xor
cmp
pop
popa
push
mov
inc
or
or
cmp
movsb
mov
jmp
std
arpl
pop
or
dec
nop
jnp
sbb
cwtl
les
push
repnz
or
push
pop
shrb
imul
xlat
test
mov
imul
pop
xchg
xchg
mov
jl
xor
neg
mov
cmp
clc
lods
addr16
xchg
jo
jbe
pop
dec
mov
inc
pop
in
into
sti
and
iret
outsb
jne
and
test
mov
mov
dec
mov
mov
jno
movsl
dec
aad
cmpb
lods
aad
nop
sub
jns
inc
xchg
sbb
lret
adc
xlat
data16
lea
scas
push
mov
dec
jbe
pusha
cld
in
das
jge
jl
sub
stos
negl
add
in
mov
mov
test
push
insb
loop
dec
sub
mov
pop
mov
jnp
mov
pop
mov
movsl
out
or
out
clc
roll
mov
pop
jge
sub
test
jns
cmp
ret
mov
and
sub
sbb
mov
insb
pop
xorl
sbb
out
or
fimull
ret
pop
mov
mov
cmp
cmp
sub
pop
aaa
pop
mov
add
fdivrp
cltd
movb
jae
nop
data16
or
movsb
popl
icebp
ficoms
in
push
push
lahf
std
gs
divl
aas
pop
stos
pop
mov
and
popf
bound
jne
push
or
mov
mov
sub
shll
mov
sub
xor
adc
sbb
mov
cmp
clc
lods
icebp
jg
fistpll
fldenv
xchg
fdivs
ficoms
jno
pop
add
lret
cmpsb
or
dec
loopne
xor
sub
cmp
sbb
push
ret
mov
enter
adc
fnstenv
jo
aad
or
add
mov
mov
mov
insl
push
or
sarb
dec
mov
mov
sbb
dec
cmp
pop
sub
aas
jp
stos
ss
pop
sub
stos
icebp
pushf
mov
ret
sahf
or
inc
outsb
pop
std
repz
lahf
dec
pop
es
int
dec
xchg
xchg
mov
rcr
sbb
xchg
add
aas
jp
movsb
sbbb
mov
scas
les
mov
jae
jno
pushf
mov
inc
ret
es
loope
jae
scas
call
jb
mov
cmpsb
cli
fsubs
cmp
rorl
mov
push
insb
pop
ret
jns
inc
inc
stc
push
adc
shrl
push
nop
popa
sti
in
test
test
push
mov
xchg
jns
test
mov
rcrb
out
adc
xchg
mov
std
mov
push
pop
or
testl
xchg
cmc
subl
loope
cmp
bound
fwait
js
idivb
mov
mov
add
mov
cltd
insl
pop
leave
jg
jo
lods
xchg
jbe
jae
ss
xor
fstpt
mov
jl
inc
xchg
mov
aaa
and
mov
cmp
mov
push
adc
sbb
stos
int
pop
sub
add
orl
sub
push
dec
add
into
push
mov
cmp
cmp
pop
ds
fsubrs
addb
and
xlat
test
bound
adc
push
out
cli
add
lcall
adc
je
scas
fildll
test
pop
cmp
incl
pop
imul
xor
inc
sbb
fadd
dec
add
ljmp
loop
pushf
in
addb
jg
inc
push
iret
cld
xchg
pushf
stc
pop
adc
dec
mov
mov
int3
or
dec
orl
sbbb
pop
lahf
push
cmp
jne
pop
sti
sub
xchg
adc
aas
cmpsb
dec
ficomps
subl
mov
jge
pop
xchg
ss
jae
pop
xor
aad
xor
push
or
add
add
jne
dec
add
lock
jmp
jmp
and
popl
mov
or
push
popf
jb
cld
jmp
pop
push
enter
nop
addr16
mov
mov
out
loope
in
adc
stos
repnz
aad
jbe
mov
test
stos
pushf
dec
imul
xor
enter
imul
das
in
xlat
subl
pushf
test
or
out
sub
stc
insb
gs
imul
arpl
lret
in
xchg
loopne
leave
sub
mov
pop
mov
xchg
xchg
cwtl
in
stos
insb
sub
pop
ficomps
shrb
fldl
pushf
pop
movsb
in
mov
test
mov
call
pushf
push
pop
mov
dec
sub
add
xor
mov
insb
lds
and
mov
jae
mov
cmp
repnz
push
iret
ss
mov
pop
sbb
lahf
push
fcmovne
add
jl
adc
pop
mov
or
fidivl
xor
in
scas
lods
cmp
movsb
lea
rclb
adc
call
push
jle
nop
movb
mov
mov
in
in
add
sti
mov
jmp
movsl
imul
xchg
insb
lcall
cmp
xor
mov
lds
cltd
dec
sbbb
incb
mov
xchg
fstpt
inc
lea
das
pop
mulb
shlb
clc
mov
div
lds
cs
adc
xor
xor
adc
add
jecxz
js
loop
mov
adc
fbld
cmpsb
ja
mov
incl
insb
popf
add
test
call
xor
push
addr16
jmp
cmp
cmp
adc
std
xlat
dec
cld
xchg
sub
std
sub
and
push
mov
or
xchg
int3
adc
dec
int3
hlt
jmp
daa
sub
push
jo
jae
inc
pop
adc
jmp
test
push
stos
or
xchg
sbb
or
mov
xlat
push
or
fnstenv
loope
fildll
arpl
in
fdivrs
jno
mov
int3
cwtl
mov
dec
in
rcll
or
inc
jp
fisubrs
xor
shll
sub
mov
add
mov
lds
ret
mov
inc
jne
jg
ljmp
outsl
mov
inc
jle
in
jge
jp
mov
in
ljmp
xor
pop
add
sbb
sub
bound
mov
mov
lock
jae
loopne
iret
inc
cmp
push
mov
xchg
sub
xchg
cltd
scas
cmp
pusha
sbb
ds
dec
or
jge
movsbl
dec
inc
xchg
pop
pop
cmp
fsubl
dec
jp
sub
out
imul
js
out
rorl
push
mov
lods
fsincos
inc
mov
aas
aas
mov
cmp
xor
ficoml
mov
loop
test
push
shlb
mov
loope
lea
mov
and
testb
gs
and
popa
jns
sbb
and
gs
cmp
clc
test
imulb
jne
mov
cwtl
test
sahf
mov
inc
loop
jle
xor
cmpsb
clc
rolb
fnstcw
lret
mov
xchg
mov
pause
mov
push
hlt
sub
add
pop
les
sbb
jecxz
cmpb
cli
mov
mov
dec
jnp
imul
xchg
ds
and
jae
mov
pop
pop
xor
stc
mov
and
out
sub
fidivs
xor
lcall
and
lret
and
mov
into
cmp
or
ret
mov
jp
xor
repz
cltd
push
fldz
or
sbb
push
stc
shrl
lods
xor
cmp
cmpsb
cmp
adcl
adcl
push
mov
jl
ret
lret
loop
mov
sbb
mov
dec
xchg
ss
movb
in
push
lods
pop
stos
push
icebp
inc
and
jg
cld
pop
pop
and
xchg
testb
call
inc
sbb
cmp
jge
aam
cmp
ret
pop
inc
test
pop
inc
pop
sbb
pop
scas
or
in
out
push
fs
ffreep
je
adc
add
pushf
add
in
cmpsb
ja
mov
test
mov
dec
aas
ljmp
and
data16
pop
pusha
es
dec
ljmp
inc
mov
loop
scas
lcall
stos
push
mov
js
push
add
add
adcb
mov
in
xchg
stc
mov
sti
dec
inc
fcoml
mov
pop
sti
dec
push
xchg
dec
jbe
cmp
sbb
xor
insb
xchg
mov
out
shrb
xor
psubb
add
jecxz
movsl
push
jmp
enter
popf
ret
jb
xlat
xchg
or
insl
in
mov
popf
jae
add
gs
xchg
jb
dec
scas
cmp
xchg
cmp
mov
push
testl
adc
sbb
movsb
adc
mov
mov
imul
sub
or
mov
scas
in
cmpsl
imul
xlat
pop
in
fsub
test
dec
fcoms
jmp
sub
and
nop
or
in
dec
push
jge
test
test
jne
pop
mov
jne
dec
ss
clc
sahf
cmp
add
addr16
stc
ds
mov
push
out
scas
xor
adc
add
jnp
add
out
lret
push
into
push
sbb
mov
test
repnz
dec
mov
dec
das
or
sub
into
loopne
jp
ja
cmpsl
or
ja
pop
inc
push
and
pusha
inc
adc
fwait
gs
fistpl
jno
cs
jecxz
mov
shll
pop
je
add
insl
pop
and
adc
push
rolb
js
inc
dec
pushf
mov
mov
les
sbb
cmpsl
mov
popf
lret
les
inc
push
lahf
pop
test
jge
jae
sub
pushf
popf
fcmovnb
mov
popf
push
mov
repz
cmpsb
repnz
hlt
jmp
notl
lods
cli
push
ja
int
and
mov
jmp
loopne
je
mov
popf
jge
repz
mov
mov
dec
int3
push
outsl
pop
xor
inc
loopne
cwtl
add
cmp
mov
cmpsl
lret
clc
sbb
add
movsb
mov
bound
je
sub
inc
aam
add
int3
in
push
cld
jo
push
stos
xchg
mov
leave
rcrb
lea
lret
addb
inc
adc
loopne
add
sub
mov
test
inc
aam
enter
dec
stc
dec
sbb
jns
sbb
lea
dec
pushf
sub
imul
idiv
mov
fidivs
int
outsl
sbb
hlt
xchg
push
ljmp
aas
xor
sub
jl
or
fstpt
jnp
sub
mov
pop
stos
push
movsb
inc
aaa
xchg
mov
add
aad
jp
fs
mov
cmp
pushf
das
in
data16
stos
jmp
arpl
mov
pop
pop
dec
push
push
and
sub
and
dec
decl
push
fmull
stc
lahf
fwait
sbb
push
lret
adc
cmpsb
gs
xchg
cwtl
shl
mov
lahf
out
inc
stc
or
push
pop
inc
lea
inc
test
lock
cmp
inc
inc
rolb
jge
push
xchg
movsl
dec
loopne
out
ljmp
lods
es
loope
dec
push
cmp
inc
test
mov
xor
fxch
test
scas
xchg
jge
adc
adc
scas
nop
pop
jb
inc
cltd
movsb
mov
xchg
mov
add
inc
push
mov
cmp
and
leave
pop
push
ds
jae
jmp
dec
mov
push
push
jo
cld
mov
pop
in
inc
sub
mov
jbe
xchg
sbb
mov
faddp
push
mov
mov
sbb
lret
adc
out
sub
mov
adc
sbb
rcrb
mov
iret
popa
lahf
shr
cmp
mov
cmpsb
enter
xchg
imul
lret
jmp
or
jns
divb
mov
cmc
outsb
ja
lcall
push
pop
and
int
scas
push
push
push
inc
mov
dec
dec
sarl
jl
popf
ds
inc
lock
or
in
adc
out
icebp
pop
cmp
jmp
mov
mov
pushf
cmp
in
xor
xor
mov
mov
scas
sub
lds
enter
mov
sbb
lock
setge
push
je
mov
cmpsb
rcrb
scas
or
ljmp
adc
in
repz
std
push
lret
popa
outsl
getsec
fistpll
xchg
xor
mov
add
xchg
movsl
mov
dec
cmpsb
fidivrs
cmpsl
cmp
divb
mov
movsl
sarl
out
add
xor
mov
add
lret
fwait
push
test
stos
push
sub
ret
lcall
fldt
lcall
addr16
xlat
out
pop
andb
push
pop
out
mov
ljmp
out
adc
or
iret
fs
dec
scas
jo
xor
mov
sub
jmp
out
push
xchg
add
xlat
lahf
inc
pop
sub
pop
pop
notb
ds
push
or
inc
mov
test
adc
push
jo
popa
mov
or
mov
iret
xor
lock
shlb
scas
je
aas
push
out
xor
lea
fmull
sbb
xor
adc
call
sbb
mov
push
pushf
cwtl
cs
push
or
jecxz
lods
sti
repz
cmp
push
mov
je
xor
xor
sbb
and
pop
pop
dec
aaa
ficomps
dec
pop
lock
cmp
sub
mov
mov
mov
inc
lock
pop
xor
xchg
out
and
jo
sub
dec
cmp
push
mov
fisttpll
test
adc
mov
push
sbb
out
pop
addl
pop
xchg
inc
loope
jns
out
data16
js
aas
call
out
movsb
and
or
scas
aam
lcall
icebp
insb
call
mov
mov
addr16
call
test
sub
xchg
add
mov
stos
sbb
in
pusha
call
jae
mov
mov
mov
testl
mov
cmp
cwtl
xchg
push
jge
dec
in
fildll
sub
mov
insl
scas
vlddqu
out
dec
and
ficoms
pop
lock
clc
pop
push
mov
aaa
sub
or
repnz
ret
xchg
daa
xor
into
jo
lods
or
lods
dec
fs
xor
xchg
aad
popa
inc
test
mov
xchg
in
imul
ljmp
mov
cmp
adc
aad
push
lods
lret
xchg
mov
cwtl
mov
movq
push
daa
sbb
test
adc
pop
mov
inc
and
rcrb
and
lcall
in
ret
cmp
mov
mov
xor
and
ret
xchg
adc
loope
jge
es
dec
xchg
push
pop
xor
leave
in
adc
fs
push
or
pushf
sub
push
push
cmp
inc
and
push
jp
xchg
mov
cs
jbe
sub
cmp
ja
fidivs
xor
mov
into
jns
xor
sbb
mov
popf
loope
fsts
insb
lahf
arpl
sub
inc
cmp
jle
loope
add
inc
addr16
lahf
add
insl
call
and
add
add
dec
cld
push
aad
jo
or
mov
les
cmp
pop
mov
add
das
xchg
mov
aas
sbb
add
or
lret
nop
add
test
xor
lods
test
dec
pop
and
pop
cmpsb
gs
cmp
pushf
cmpsb
fiadds
movsl
cmpsl
inc
movb
pushl
sahf
lret
fcomip
or
in
dec
mov
and
jg
outsl
sbb
fwait
mov
sub
xor
loopne
xchg
jmp
mov
pop
ret
movsl
mov
push
dec
stos
scas
and
push
pop
cmp
xchg
push
sahf
cs
add
iret
roll
adc
inc
movsb
add
mov
add
jbe
sbbb
and
xorl
shrb
adc
sbb
add
jge
enter
mov
rcll
inc
test
mov
in
and
cmp
mov
shl
xchg
bound
out
loop
repz
jg
test
mov
outsl
jl
out
jns
mov
xchg
mov
push
int3
xchg
stos
cltd
or
aas
test
xor
punpckhbw
pop
lahf
xor
inc
outsl
xchg
xchg
ja
push
sub
push
outsb
add
add
rclb
shlb
or
ss
push
cmp
mov
xlat
adc
push
fisubrs
mov
imull
sub
in
in
shrl
mov
fwait
dec
loop
gs
jmp
jp
jg,pn
daa
leave
stc
add
pop
cmc
sarb
sbb
fbstp
jnp
mov
icebp
repz
icebp
mov
pop
je
or
push
mov
in
mov
call
xchg
jle
cmp
jp
lods
in
movsb
stc
repnz
fwait
sub
scas
cld
cmp
movsb
dec
jp
or
nop
sub
and
inc
xlat
push
sub
xlat
add
rcll
mov
dec
in
mov
sbb
jg
xorb
mov
xor
or
add
mov
dec
movsb
cmp
je
dec
fptan
and
mov
pop
cwtl
mov
ljmp
daa
cmp
movsb
stc
pusha
cld
push
icebp
jnp
inc
or
xchg
or
xor
push
popf
sub
push
inc
call
cs
push
sbb
xchg
test
gs
mov
notb
pop
je
cmp
bound
lds
dec
mov
mov
pop
xor
ret
cmpsl
mov
sub
add
add
mov
xor
mov
mov
adcb
ds
sub
and
clc
pop
cmpsb
push
int3
fidivs
sub
sbb
pushf
lock
fbld
mov
sbb
clc
cmp
inc
lea
call
and
cmpb
add
in
divb
nop
xor
lret
iret
testl
lcall
mov
imulb
inc
int
data16
int3
aaa
test
stc
cmp
sub
test
ror
mov
cmp
cltd
or
inc
sub
cli
jp
ret
add
sar
pusha
ds
movsb
sub
push
push
out
xor
inc
mov
cmp
xor
jmpw
and
in
sbbl
xor
pop
lret
adc
and
jo
js
in
and
xchg
je
xor
cwtl
push
pop
cs
mov
int
idivb
fs
sub
mov
mov
outsb
adc
dec
push
aas
hlt
out
xchg
sub
pop
push
cmpsl
dec
or
outsb
mov
stc
dec
into
mov
jae
gs
adcl
add
jecxz
imul
lods
push
movsb
cmp
push
xchg
pop
cltd
and
sbb
push
xor
adcl
aam
xchg
xor
xchg
jle
sub
push
shrl
ja
mov
sub
fnsave
repnz
bound
stos
aas
ds
cmp
xchg
jg
sub
scas
int3
cmp
div
mov
out
nop
fisttpl
add
popa
cmp
dec
imul
aad
fwait
push
push
xchg
sub
fs
sub
test
inc
icebp
jno
or
dec
in
xor
mov
in
icebp
and
fcomps
sub
int
mov
shrb
add
or
shr
jne
int
call
cmpsb
int3
xchg
rcrb
rcr
mov
add
das
mov
mov
ror
jae
enter
cmc
scas
and
test
add
outsb
pop
ljmp
repz
add
cli
lods
pop
fstpl
or
rclb
or
cmp
jl
sti
push
and
loop
int3
leave
popa
adc
inc
cmp
inc
mov
lcall
jmp
mov
add
loop
mov
in
xor
cld
rcrb
lcall
in
mov
outsb
cmpsl
sub
sbbb
mov
and
in
xchg
ljmp
stc
repz
cmp
jg
sub
or
dec
xor
int3
sbb
xchg
sub
xor
or
pop
jno
adc
insb
jmp
sbb
and
cmp
mov
xor
and
adc
sub
xchg
lret
xor
lcall
push
sbb
and
push
sub
inc
xor
or
bound
jo
pop
mov
faddl
mov
movsl
subl
sbb
dec
cmp
stos
pop
js
int3
dec
fdivl
sti
rorl
xchg
xchg
dec
out
adc
xchg
inc
dec
shrl
popf
or
shr
outsb
jae
dec
jb
and
and
xor
pusha
lods
int3
iret
adc
pushf
inc
inc
and
jo
or
cmp
xor
pusha
das
jle
fidivl
xor
gs
lock
and
movsl
jne
out
cmp
cmp
out
pop
xchg
test
inc
mov
gs
and
add
jo
fstps
adc
loopne
lods
xor
fnstsw
addl
inc
bound
pop
xchg
adc
cmp
in
sbb
sub
mov
push
pop
add
push
faddl
push
or
jb
xlat
add
adc
jb
and
hlt
aad
xlat
in
push
stos
xor
fistpl
pop
jns
ret
xor
hlt
or
sub
sbb
pushf
sbb
scas
or
in
push
or
ja
mov
cmpsl
xor
push
lea
adc
sbb
push
mov
pop
addb
push
or
les
int
inc
sbb
jmp
shrl
push
out
push
jl
pop
mov
cmp
xchg
pop
cmc
mov
enter
adc
sub
mov
lea
sahf
frstor
mov
ficoml
cld
lods
cmpsb
push
mov
fs
dec
js
add
xchg
pop
xchg
fidivrs
call
pushf
nop/reserved
sbbb
xor
in
add
bound
mov
popa
arpl
pop
je
mov
int3
push
xor
stos
adc
fldenv
or
out
sahf
jle
pop
out
push
or
adc
mov
cmc
and
cltd
pusha
or
sub
fldl
dec
sub
jne,pt
scas
out
mov
inc
and
in
aad
cmp
jo
pushf
ja
stos
mov
add
or
loope
cmp
push
daa
insl
pusha
negb
or
xchg
dec
or
js
jge
repnz
push
loop
mov
mov
fldt
bound
in
ret
test
and
les
mov
mov
dec
dec
popa
jbe
push
test
xor
cmpsb
lcall
mov
adc
insb
enter
jae
and
or
pop
push
scas
add
cmp
jnp
mov
adc
clc
repz
sbb
mov
cmp
xlat
mov
push
sti
mov
sbb
mov
and
inc
push
pop
leave
movsb
push
pop
js
sub
dec
nop
push
mov
sbb
pop
lods
stos
mov
mov
movsb
sub
pushf
xchg
sub
xor
ficoms
fimull
scas
cld
rcll
add
mov
pop
sbb
cmc
sti
out
out
popa
cmc
jp
mov
data16
out
cmp
mov
xchg
dec
mov
pop
in
test
jle
and
fildl
fbstp
cmp
adc
sub
mov
pop
sub
stc
xor
popf
loopne
adc
pop
xchg
inc
mov
imul
lods
clc
bound
xchg
xchg
icebp
jp
mov
or
icebp
in
or
ss
jae
push
insb
jmp
dec
mulb
gs
out
sbb
mov
movsb
sub
jnp
je
cmp
fbstp
jo
fstl
jp
das
lcall
push
dec
mov
pop
lods
xchg
add
inc
mov
js
mov
cs
jne
cltd
and
dec
jae
adc
sti
push
mov
in
jae
aas
push
mov
cmc
lea
cld
xchg
dec
sbbl
pop
lock
inc
sarb
aas
xchg
std
jae
icebp
xchg
sub
fnstsw
mov
leave
xor
mov
out
lret
jg
rcrb
mov
adc
idivl
mov
jae
xor
pop
arpl
outsl
mov
sbb
xor
leave
mov
sarb
push
ret
cmpsb
adc
inc
cmp
or
ja
pop
mov
cmp
push
fsub
mov
jmp
adc
ja
dec
mov
sub
ret
ret
jmp
pop
jns
jecxz
push
in
ja
add
jecxz
push
sbb
adc
mov
dec
adc
outsl
xchg
cmc
ret
out
fsub
imul
js
cli
int
or
and
addr16
sbb
fisttpl
add
jmp
push
aad
mov
test
lcall
or
les
outsb
scas
pop
outsl
shll
or
out
movsl
dec
sbb
jle
in
mov
push
cli
cmp
jl
in
add
aam
repnz
test
sti
pop
push
mov
jns
repnz
movl
cli
mov
ja
cltd
scas
in
test
stc
fdivr
ja
push
ret
adc
dec
call
lods
in
out
mov
mov
fcmovu
adc
jp
in
clc
cmpsb
mov
mov
cs
hlt
cli
cmp
and
dec
fldenv
movsb
fwait
or
inc
jbe
mov
fisubrl
add
sbb
ja
sarb
dec
cld
pop
inc
lds
dec
cmc
in
mov
mov
inc
repnz
js
dec
mov
cwtl
lcall
test
add
pop
xor
xchg
push
jnp
inc
inc
mov
jl
scas
add
addr16
sbb
in
mov
mov
mov
lea
adc
roll
es
aad
lahf
fs
mov
xor
pop
jle
adc
les
adc
faddl
xchg
sub
xchg
push
stos
pop
push
outsb
xlat
out
cmpsl
push
out
out
mov
or
or
inc
cmp
push
std
xchg
dec
andb
inc
mov
lret
dec
icebp
je
pop
cltd
out
jne
pop
std
and
std
pop
out
sbb
test
mov
inc
xchg
pop
cmpsb
push
mov
inc
xchg
xchg
inc
ljmp
push
in
call
lods
adc
repz
test
ljmp
mov
int3
adcb
inc
imul
aas
mov
mov
push
leave
out
or
adc
repz
test
mov
sub
inc
addl
std
sbb
cmp
arpl
pop
xchg
xor
popf
push
repnz
mov
pusha
pop
xchg
iret
xchg
into
shlb
popa
aam
fcomps
inc
das
add
shlb
jbe
xor
lock
or
inc
outsb
je
shlb
outsl
ds
adc
pop
fdivp
push
hlt
enter
add
fwait
sub
xor
sbb
outsl
out
push
sub
inc
dec
scas
pop
jno
out
shlb
pop
and
inc
jecxz
pop
push
aas
es
or
mov
or
and
pushl
cmp
add
enter
pop
inc
push
sub
leave
and
sbb
out
jmp
sbb
std
cmp
scas
mov
jmp
inc
cmpsl
cmpsb
mov
stos
jbe
cmp
push
add
fadds
sbbb
pop
pop
pop
fsubr
jecxz
inc
mov
mov
xor
sub
dec
add
mov
pusha
dec
in
xchg
adc
cmpb
jb
fs
cwtl
cmc
cmpl
movsb
loope
mov
cmpsb
inc
insb
adc
pop
jo
lods
aaa
mov
loopne
data16
and
xchg
int
or
mov
add
cltd
adc
pop
mov
adc
or
xchg
xchg
les
int3
iret
sub
adc
mov
sub
popa
sbb
mov
test
ljmp
cmc
sub
cmp
sbb
inc
sub
stos
aaa
cmp
lret
ret
pop
fwait
out
lds
add
ja
mov
add
mov
xchg
out
js
or
cltd
loop
jae
or
imul
pop
sbb
mov
in
xchg
dec
das
xor
negb
mov
aaa
and
hlt
ficoms
push
cld
jmp
xchg
mov
sbb
dec
sbb
sahf
fwait
sbb
jae
push
xchg
lea
lods
pop
cmc
xchg
and
adc
jbe
jp
and
dec
or
aaa
cmp
cli
leave
loopne
lds
imul
pop
mov
scas
shlb
inc
push
imul
es
or
inc
sbb
scas
xchg
pop
sbb
xchg
lods
cwtl
cld
jge
std
adc
in
aam
jp
jb
shrb
push
pushf
push
out
rcrb
mov
hlt
jg
in
push
test
jno
cmp
insb
and
scas
mov
inc
xchg
mov
out
lahf
mov
sub
scas
lea
lret
subb
sahf
and
inc
data16
lds
adc
xor
sti
lds
stos
pop
push
imul
imul
xor
push
jnp
fildll
imul
adc
lea
js
inc
jmp
out
add
inc
dec
push
shlb
cltd
mov
mov
inc
imul
popa
es
fcompl
insl
push
sarb
or
sbb
es
sbb
jl
pop
test
push
rcr
pop
sbb
push
scas
sub
adc
pop
fdivrl
sub
repz
addr16
add
jecxz
loope
jmp
pusha
ljmp
cmp
rcll
movb
push
push
das
mov
ss
jnp
add
inc
fsubrl
iret
inc
cli
mov
xchg
scas
xchg
idivl
fiadds
inc
aas
push
mov
popf
call
cmp
je
mov
inc
adc
repnz
movsl
jg
jno
push
aas
xchg
call
lcall
std
mov
or
jae
cmpsb
adc
shlb
dec
or
xchg
xchg
and
dec
or
mov
imul
xchg
mov
scas
lret
mov
sbb
daa
nop
mov
lahf
out
mov
js
addr16
les
jecxz
mov
add
cmp
fwait
loope
mov
data16
mov
or
lret
movsb
enter
fcomps
inc
cmp
push
cmp
cld
jbe
in
push
push
push
cld
cmp
dec
xchg
stos
in
jbe
dec
ljmp
cmp
nop
add
xor
out
lcall
mov
xor
jae
push
push
sub
cltd
push
xchg
fsubrl
cmp
lods
push
outsb
dec
sbb
jecxz
movsb
notb
loopne
mov
cld
scas
subb
pop
testb
jns
ret
cmp
cmp
pop
mov
repz
data16
and
add
hlt
repz
mov
ret
scas
dec
into
std
pop
lret
and
dec
inc
icebp
pop
iret
xlat
fnstcw
testl
push
lds
sub
fdivrl
ljmp
cmp
out
aam
sbb
pusha
mov
jge
xchg
ficomps
mov
push
fisubrl
sbb
inc
cwtl
pushf
jno
test
mov
pop
aam
cwtl
gs
adc
fs
enter
rorl
stc
mov
insl
push
in
idiv
aas
movsb
lock
aas
sbbb
adc
shlb
and
and
mov
cmc
lret
imul
lret
dec
mov
adc
outsl
dec
jg
addb
mov
dec
jno
inc
xor
sub
test
leave
inc
and
inc
mov
fwait
scas
xor
adc
lds
mov
sbb
incl
mov
lret
push
lret
push
sub
jo
jle
repz
cmpsl
mov
lds
cmp
cs
pusha
push
xor
bnd
repnz
lcall
pop
sbb
mov
dec
xchg
and
iret
stos
fnstcw
cmp
and
outsb
and
fisubl
dec
cmpsb
push
mov
lret
pop
mov
into
clc
loope
das
mov
test
hlt
das
push
inc
lods
and
jae
lcall
js
rolb
nop
cld
push
data16
adc
js
xchg
int
popf
inc
mov
loopne
dec
adc
out
lock
out
dec
adc
cmc
push
clc
lret
nop
mov
movsb
call
mov
sub
imull
add
mov
cmc
aad
ja
cwtl
or
cmp
mov
xlat
jne
mov
mov
aad
test
sbb
adc
xchg
shll
pop
jmp
frstor
dec
movsl
inc
xor
ss
mov
int
dec
adc
xchg
push
lock
adc
push
mov
scas
inc
stos
push
in
out
insb
jne
sub
fidivrs
repnz
jne
mov
mov
pop
shl
test
test
mov
std
fisubs
mov
jb
andb
int3
or
mov
dec
rcll
xchg
cmp
in
and
dec
sub
subb
mov
adc
lock
dec
data16
pop
mov
std
mov
fstpl
dec
arpl
mov
test
test
out
cs
push
aas
cmc
mov
jecxz
jecxz
movsl
dec
jne
repz
adc
dec
rcrb
sub
pushf
inc
or
jmp
cld
pop
xor
pop
in
add
bound
cmp
sub
sub
inc
sub
into
push
pop
iret
adc
enter
add
insb
push
lret
sbbb
mov
ror
fists
pop
cmp
mov
jp
popa
je
push
pushf
mov
xchg
aas
and
cmp
insb
jecxz
jns
sbb
popf
call
fcomps
repz
jne
stc
push
or
data16
stc
hlt
out
aad
inc
mov
or
iret
push
jne
jo
dec
aaa
pop
inc
pop
arpl
fmuls
or
addl
stos
sbb
sub
popa
stos
mov
push
mov
cltd
add
mov
cltd
sbb
outsl
inc
mov
mov
mov
fists
sub
nop
int3
addr16
and
jne
sti
pop
shrl
cwtl
push
xor
xor
inc
inc
pop
in
mov
dec
insl
rcll
lahf
loopne
cld
in
icebp
imul
cmc
add
or
data16
or
repz
fists
pushf
leave
repnz
dec
inc
enter
add
push
loop
sbb
xchg
idivl
js
cwtl
mov
mov
cltd
dec
pop
mov
jae
inc
mov
mov
xor
cmp
jmp
mov
lret
push
ror
sbb
add
mov
mov
xchg
outsl
sbb
mov
mov
movsl
sti
lahf
sub
les
outsb
in
mov
sub
jl
ficomps
xor
pop
inc
or
out
cs
push
mov
push
stos
xor
inc
gs
pop
in
jge
popf
icebp
cmp
roll
stos
inc
sbb
mov
ss
lock
ret
int
inc
call
repz
pop
sbb
mov
mov
xchg
pusha
pusha
mov
inc
add
out
call
mov
insb
mov
xor
or
jp
xor
mov
mov
fwait
mov
jecxz
or
push
fsts
pop
mov
mov
cs
sbb
jo
add
sub
dec
inc
add
mov
xchg
or
sub
and
ja
sbb
xchg
push
scas
setno
test
jae
stc
dec
clc
test
or
js
fadds
pushf
jl
pop
jmp
pop
jae
cmc
inc
loop
rcl
xchg
xchg
ljmp
cmpsl
or
imul
pop
adc
testb
push
xor
popf
and
mov
into
ljmp
jle
jge
loope
inc
lods
into
mov
sbb
inc
rclb
inc
stos
leave
cs
mov
jae
and
push
js
ret
sbb
push
mov
inc
and
mov
inc
mov
sbb
into
aad
scas
mov
pop
pop
lahf
lods
fidivl
cmp
xchg
inc
mov
pop
pop
xchg
inc
repz
rcrl
push
jl
push
xchg
in
out
and
jae
xchg
pop
test
sti
ret
dec
scas
scas
mov
mov
aam
xchg
in
cmp
sub
jmp
movsl
adc
mov
add
leave
mov
mov
mov
push
fucomi
dec
inc
mov
mov
sbb
insb
cmp
inc
inc
rep
and
jmp
lock
in
mov
test
mov
clc
mov
push
sbb
loope
inc
out
jmp
mov
xor
jbe
mov
sbb
popf
cmp
inc
mov
push
iret
push
adcl
ja
cmp
dec
push
mov
sbb
mov
xlat
cmp
lods
repz
inc
and
pop
test
mov
cmc
adcl
xchg
shr
aaa
adc
rcl
pop
push
push
jl
mov
add
and
mov
mov
jo
jb
mov
mov
sbb
dec
icebp
ret
pop
dec
gs
lcall
inc
mov
add
pop
jmp
inc
push
test
jno
jo
aam
xor
inc
gs
add
jge
icebp
mov
inc
sub
sub
roll
lods
arpl
jge
cmp
fstps
movl
adc
sbb
xchg
pop
fwait
ret
lods
in
add
cs
lea
jo
je
dec
jge
sbb
dec
xor
cwtl
jmp
subb
xchg
and
cmp
fcmovu
cmpsb
cld
scas
fdivrl
xchg
cwtl
inc
pop
jge
cs
lahf
push
add
or
push
sbb
mov
mov
fldcw
cld
cli
test
sub
xchg
pop
add
arpl
fsubrs
lret
gs
sub
xchg
mov
sbb
jo
mov
xlat
adc
into
lods
mov
les
push
or
data16
mov
xor
jne
pop
movsb
pop
push
aaa
in
call
incl
ja
mov
nop
scas
popf
push
xor
push
mov
sbbb
leave
cmc
sbb
ds
jmp
dec
fdivl
repz
xchg
stc
subl
xchg
pusha
mov
enter
or
pop
pop
sbbl
mulb
leave
mov
push
pop
add
mov
mov
aaa
pusha
cmc
xor
lcall
pop
ljmp
pusha
pop
jno
jnp
pop
stos
add
adc
xchg
inc
mov
lret
loope
sub
dec
iret
out
fsubl
pusha
aad
pop
jns
stos
xor
mov
sub
mov
gs
jbe
and
mov
popf
cli
sub
pop
shlb
pop
stos
sub
imul
test
lahf
test
lds
in
cltd
int
mov
enter
jbe
jb
sbb
std
and
dec
xchg
int
scas
mov
pop
bound
jnp
sbb
push
stc
inc
mov
test
in
ret
cwtl
dec
test
cmovno
mov
push
mov
mov
imul
cmp
inc
into
daa
mov
cmpb
lret
jge
shl
mov
dec
imul
out
push
inc
outsb
fcmovbe
sbb
out
insl
xchg
ficomps
es
dec
or
data16
scas
jl
inc
enter
mov
push
push
xchg
push
mov
test
imul
xor
mov
xor
jmp
out
sub
sti
add
out
inc
lahf
jg
les
mov
aaa
jo
fs
xchg
jns
xchg
lods
mov
fcmovne
ja
gs
mov
inc
ja
std
aam
or
dec
div
scas
pop
push
clc
movsl
lahf
mov
loopne
mov
add
mov
inc
and
and
push
in
dec
pop
and
mov
adc
stos
call
inc
js
adc
aaa
cmp
fs
aas
mov
insl
aad
mov
mov
xor
mov
mov
clc
in
insb
inc
mov
es
lret
sub
push
ljmp
out
fisubrs
cmp
stc
into
mov
pop
mov
cwtl
jb
imul
pop
mov
pop
icebp
inc
xchg
popa
dec
xor
icebp
adc
enter
loopne
xchg
test
lods
dec
xchg
inc
lahf
es
lcall
aaa
xlat
and
subl
les
or
cli
stos
js
lock
ljmp
push
notb
inc
pop
sub
dec
inc
test
pop
push
icebp
ficompl
mov
sti
enter
int
loope
or
dec
out
ljmp
loope
icebp
test
adc
xor
add
aaa
daa
pop
lods
xor
push
popa
insl
popl
jb
and
test
adc
add
lds
xor
adc
sbb
je
cmp
xchg
ljmp
gs
push
inc
fmuls
scas
rol
mov
sub
mov
inc
jp
pop
fisttps
sbb
cmpsb
jb
addl
xchg
dec
xchg
and
icebp
sub
dec
pushf
dec
ds
enter
push
lret
fisubl
sbbb
xor
popf
dec
push
int3
mov
repz
ja
add
aas
inc
stos
lds
addr16
int3
mov
xor
sbb
jne
cmp
daa
fists
pushf
add
sbb
inc
mov
scas
mov
lahf
shrb
dec
xchg
mov
push
nop
enter
addr16
lret
and
cld
push
xchg
insb
insb
pop
sbb
je
dec
cli
jb
sbbl
lahf
rcrb
mov
sbb
popa
jecxz
sbb
or
adc
xchg
jno
ja
xor
pop
imul
push
xor
fistps
dec
icebp
ds
lret
negb
fstpt
mov
lret
imul
xor
and
xchg
int3
xchg
jb
in
sbb
mov
mov
popa
cltd
std
add
sub
cli
push
pop
mov
inc
nop
xchg
lods
dec
stos
xor
sbb
inc
sub
push
test
out
out
dec
pop
jo
push
pop
mov
scas
xor
je
jmp
push
jae
clc
stos
dec
sub
add
inc
imul
sbb
or
in
push
shlb
clc
fidivs
xlat
inc
pop
std
pusha
push
sub
pop
add
test
std
xor
add
popf
mov
mov
ret
sub
lret
lret
dec
std
mov
push
add
push
pop
mov
outsb
jo
xlat
sub
ret
cmp
cwtl
ss
jecxz
in
mov
aas
lock
call
and
adc
out
and
cmp
push
mov
cmc
cmp
fwait
popl
cmpsl
daa
sub
cmp
pop
xchg
xor
push
push
mov
mov
fists
and
dec
push
jae
mov
cmp
loop
sub
inc
inc
pop
data16
scas
mov
pusha
jbe
mov
add
lods
das
pcmpeqb
enter
iret
dec
cmpsl
sub
push
out
ljmp
jg
out
movsb
pop
lret
sbb
dec
outsb
insl
popl
sbb
xchg
aad
jae
mov
jno
jge
data16
fs
gs
pop
sub
adcl
lret
push
popf
add
cmp
addb
outsl
shl
das
xchg
out
add
dec
imul
iret
mov
or
and
insl
cmp
mov
icebp
mov
gs
adc
mov
push
std
mov
adc
addr16
nop
in
pushf
sub
push
mov
cmp
sub
pop
sti
jge
jle
mov
dec
outsb
lock
xchg
dec
pop
out
fwait
push
cmpsb
int3
xor
es
add
in
rcrb
mov
loop
sub
into
cmp
fwait
ja
out
lahf
pushl
insb
mov
mov
or
xor
cmpsb
xchg
test
add
push
lahf
cmpsb
cwtl
mov
out
mov
or
pop
std
cmp
and
js
rcrb
push
sub
dec
es
out
cmpsl
scas
xor
push
in
mov
push
je
cmp
pop
cwtl
push
sub
pop
dec
int3
loope
xor
mov
lret
mov
dec
fcmovnb
add
movsl
loop
icebp
cmc
loopne
dec
loope
sub
in
add
je
add
xor
cwtl
sub
or
cmp
mov
or
xor
sub
fildl
stos
mov
sbb
push
cmp
jmp
xchg
pop
pop
push
bound
pop
mov
jns
mov
xchg
fistpll
dec
loope
adc
aas
inc
mov
jmp
unpcklps
pop
sbb
popf
pop
popf
xchg
repz
jmp
mov
bound
sub
mov
jno
nop
push
fs
ja
pop
add
lock
sbb
jp
fs
jno
repnz
mov
in
mov
imul
xchg
cmp
or
adc
push
pop
adc
push
add
jl
dec
sub
insl
test
imul
pop
pop
hlt
mov
fidivrs
aam
mov
leave
call
movsb
sub
aad
mov
lods
jb
add
cmpsb
and
lret
nop
mov
enter
pop
jmp
nop
into
ret
mov
mov
adc
lods
push
cmpsb
cmp
jle
sub
stos
push
and
xchg
push
cmpsb
xchg
jno
mov
sub
in
sub
cltd
lock
movsl
or
add
arpl
push
push
add
je
movsb
cwtl
je
test
call
inc
sbb
enter
mov
sbb
std
stos
ret
cmp
mov
iret
xor
cs
lock
addl
and
sub
pusha
das
mov
mov
ss
lods
xor
xchg
int
fcompl
lds
sbb
pop
or
rcrb
int3
lea
out
incl
pop
lods
sub
inc
incl
jno
inc
jo
nop
dec
je
movsl
inc
mov
pop
cmp
addb
outsl
jno
fsubrs
push
lods
add
mov
lret
sub
mov
or
ret
stc
push
ljmp
popa
cli
in
mov
or
sbb
add
clc
bound
negb
ret
cmp
roll
push
clc
pop
stos
leave
cli
subl
push
or
jnp
popa
daa
imul
adc
ja
add
jl
add
push
fldenv
repnz
mov
add
fldcw
mov
add
inc
outsl
out
mov
insb
pop
fmulp
adc
lret
sub
out
jp
ret
and
sbb
sub
mov
data16
je
or
mov
ss
outsl
mov
mov
mov
lret
insl
sbb
ds
push
sarl
mov
lock
dec
popa
int3
push
xlat
sub
dec
mov
test
and
jle
cld
stos
out
dec
mov
push
fisttps
cmp
push
movsl
xor
cmpsb
and
adc
sti
mov
mov
pushf
repz
rolb
mov
dec
sbb
popa
push
cld
or
pop
jg
push
jno
dec
push
repz
rcr
das
repnz
or
mov
sub
aas
xchg
fldpi
aas
fistps
movsl
mov
sub
cltd
mov
and
pop
add
mov
je
mov
jo
negl
test
jl
jne
sbb
in
je
push
mov
and
mov
stos
adc
repz
movsl
or
xor
test
sbb
lods
enter
xchg
ret
pop
xchg
xor
push
xor
shll
inc
mov
fdiv
add
inc
push
push
ss
add
shlb
ljmp
sahf
xlat
shll
xlat
loope
xchg
enter
imul
sbb
js
mov
test
add
ret
sub
lcall
xchg
push
xor
call
mov
xor
movsl
les
daa
push
loop
std
stos
push
jge
popf
add
mov
inc
dec
jbe
fdivl
xor
inc
xchg
ret
std
xlat
add
clc
sbb
out
jg
push
repz
add
scas
jno
jmp
ja
sub
xchg
cmp
flds
sbb
test
push
or
mov
xchg
pusha
push
leave
and
jns
xor
sbb
cmp
mov
mov
repz
pop
nop
arpl
mov
jns
lcall
lcall
fnstsw
cltd
mov
mov
and
ret
sbb
jle
and
mov
cld
xchg
outsl
test
push
jbe
loope
jo
stc
lods
mov
push
shll
cltd
lods
cltd
mov
mov
push
inc
mov
mov
jnp
cmp
fiadds
imul
mov
dec
mov
sbb
ljmp
push
fwait
cmp
and
ret
cmp
inc
xor
inc
jmp
inc
loop
mov
fisttpl
mov
jp
addr16
and
or
and
pop
sub
test
dec
sub
mov
lods
lds
insl
roll
jecxz
fsubrs
sbb
inc
sbb
fcomi
rcll
mov
adc
in
outsl
ja
lds
loopne
dec
repnz
fistpl
ja
cmpl
clc
dec
or
int
push
movsl
js
jno
leave
popf
fsubrl
pop
xor
shll
scas
pushf
or
sbb
mov
outsl
add
idivl
xchg
popa
out
xor
adc
scas
sti
sahf
fidivs
cs
scas
or
mov
push
pop
xor
pusha
insl
push
xchg
dec
stos
add
idivl
xchg
out
fwait
gs
in
pop
addr16
xchg
lcall
push
pop
push
cmp
inc
push
jne
jne
xor
imul
xchg
test
cmc
push
pop
sahf
ja
cld
pop
xchg
aad
iret
mov
fsubs
fstps
add
dec
mov
push
addr16
in
sti
inc
and
repz
arpl
rorb
or
cld
es
adc
jg
jmp
push
ja
push
mov
cmpsl
jge
mov
pusha
push
jp
int
mov
dec
sti
ret
js
sbb
push
imul
aas
dec
jno
sub
shll
mov
adc
or
jg
stc
push
and
movsl
push
nop
cmp
imul
dec
js
xor
cld
in
aaa
dec
sbb
leave
add
mov
cmpsb
mov
imul
mov
fidivrl
pushl
dec
inc
mov
mov
pop
and
hlt
lret
xor
mov
cmp
cmp
hlt
pop
mov
and
sbb
gs
lret
fidivrs
or
mov
dec
cmp
sbb
jl
pusha
ret
call
adc
fs
in
push
in
nop
add
ja
xor
out
aas
mov
add
scas
ss
movb
std
pop
adc
mov
push
into
fistpl
push
pushf
lods
push
ret
add
jno
jbe
adc
cmp
clc
mov
stos
in
test
mov
xor
std
xchg
dec
dec
mov
popa
test
xchg
inc
or
clc
aad
mov
fs
adc
icebp
mov
mov
dec
mov
fistpl
mov
cli
rcll
cmp
and
cs
aas
sti
mov
sub
or
or
pop
test
inc
loopne
pushf
popa
pop
leave
dec
iret
int
and
cwtl
fimull
mov
rcl
pop
adc
movsb
dec
or
rolb
cmp
add
sub
idivl
stos
cmp
lret
jecxz
out
test
movb
mov
nop
pop
mov
xor
std
scas
sub
jmp
insb
cmpsb
jmp
push
mov
sub
loop
in
ret
or
xchg
mov
push
and
lods
ret
popl
cmpsl
mov
fmull
mov
scas
lock
fnsave
jnp
add
sbb
leave
je
sbb
xchg
and
sub
pop
mov
mov
cmp
pop
inc
mov
stc
inc
and
xchg
fwait
inc
bound
cmp
std
mov
sbb
hlt
cwtl
jp
dec
fisubs
cmp
jg,pt
adc
lods
sbbl
push
inc
push
out
imul
xchg
push
add
add
dec
cmp
push
pop
sub
dec
daa
daa
shrl
mov
push
mov
gs
shl
mov
xor
aad
sbb
pop
xchg
rcll
in
shlb
ss
call
mov
or
repz
adc
dec
imul
outsl
mov
pop
jmp
mov
inc
into
jns
inc
inc
in
sbb
cltd
cmp
sub
mov
lock
int
outsb
imul
shrl
inc
out
icebp
je
cmp
mov
popa
js
mov
jbe
dec
inc
rorl
fistpl
inc
mov
push
jmp
mov
cltd
insb
insl
xor
xorl
mov
xor
mov
or
pop
ss
enter
test
xchg
jne
cs
cmp
mov
or
mov
adc
adc
repz
loope
lods
cli
pushf
lahf
or
push
cmp
jne
out
sbb
adc
repnz
popa
negb
cld
jle
daa
add
cmp
push
sbb
jl
aad
outsb
daa
mov
lock
add
rcr
push
jge
mov
jmp
fdivrs
loop
mov
xchg
or
loope
or
jae
dec
and
dec
fisubrl
fstps
aad
stos
jnp
fldcw
pop
adc
into
mov
lret
push
pop
int
inc
jbe
jg
popl
jmp
push
sti
stos
int3
aaa
push
jmp
and
jae
sarl
jno
inc
inc
push
cwtl
xchg
popf
lea
aad
push
fsubrs
push
inc
into
jbe
mov
nop
pop
movsl
push
jp
je
push
lret
enter
push
mov
and
lret
leave
loop
mov
mov
jle
add
jl
jne
popa
sbb
shll
xchg
xchg
dec
stos
xchg
fmuls
sub
outsl
pop
aad
mov
cmp
cmc
adc
jae
in
int3
dec
sbb
push
lcall
mov
mov
and
lret
mov
into
shrb
clc
outsb
mov
mov
and
js
idiv
dec
mov
dec
jg
gs
mov
movsb
or
movsl
fisttps
test
jbe
add
or
xchg
cld
and
inc
jb
rcr
pop
mov
or
xchg
in
ds
cmp
inc
scas
pop
push
mov
xchg
jecxz
je
sbb
jae
push
sub
out
mov
nop
int
adc
les
js
xchg
inc
mov
or
scas
and
adc
mov
sbb
mov
adc
and
ja
aam
out
std
jno
aam
xchg
ficomps
leave
mov
mov
and
sahf
xchg
lods
pop
lds
popf
inc
data16
aad
jb
mov
insl
pop
in
add
jmp
rcll
xchg
jbe
pop
cmp
jnp
cmp
cmp
xchg
int
and
or
pop
mov
shlb
testb
shll
sub
and
sti
ss
cli
mov
and
in
fcompl
mov
test
cli
push
xchg
shlb
mov
or
push
adc
jle
jbe
outsb
mov
adc
arpl
ficoml
cmc
mov
sbb
dec
out
lahf
insb
or
xor
pop
movsl
int
and
cmp
mov
shlb
pop
pushf
inc
iret
push
or
fmulp
mov
adc
or
and
cmpl
dec
outsl
bound
scas
jns
into
adc
ljmp
hlt
data16
aad
clc
jp
popa
adc
jecxz
mov
jbe
leave
testl
mov
xchg
in
mov
imul
lds
xor
les
xor
stos
mov
scas
das
or
scas
dec
int
jne
push
mov
jo
in
int3
dec
inc
fs
fimull
xlat
mov
inc
test
imul
pop
movsb
in
jg
inc
mov
jbe
push
lods
pop
nop
aad
subb
cmp
cmp
leave
dec
or
loop
pushf
or
push
xor
test
inc
out
imul
add
add
dec
cs
adc
inc
in
ret
mov
subb
in
xor
cmp
sahf
xchg
ret
mov
inc
add
mov
arpl
adc
clc
shrb
cmp
xchg
xchg
test
mov
jl
stos
jns
pop
sbb
jge
sbb
xchg
movsl
out
aaa
push
mov
es
dec
sub
inc
aas
cmpsb
cs
es
sub
lretw
push
scas
cmp
out
aaa
into
jb
adc
sbb
mov
xchg
data16
pop
jne
or
and
ss
mov
loopne
pop
ret
mov
cs
xchg
in
xchg
jns
mov
dec
lret
dec
mov
test
lock
lods
ss
lods
pop
ror
mov
jbe
clc
ss
test
enter
inc
pushf
sbb
insb
adc
cmpsb
mov
adc
jno
and
in
aas
sbbb
jae
xorl
dec
add
add
or
adc
or
call
mov
sbb
imul
ds
mov
push
sub
insl
mov
jecxz
movsb
das
xor
or
add
in
pusha
aas
cmc
aaa
mov
mov
sbb
add
adc
and
lods
push
imul
xchg
bound
hlt
cmpsl
xchg
divb
dec
pop
into
fsubl
lea
jo
lock
int
sbb
xchg
mov
pop
stos
sub
jb
xchg
lds
popf
adc
out
mov
inc
cmp
arpl
iret
mov
mov
or
fwait
mov
pop
repnz
and
hlt
xchg
push
fldt
in
dec
or
pusha
dec
or
jbe
push
and
into
lret
mov
and
add
pop
adc
jb
rclb
jb
loope
jp
sub
inc
mov
scas
and
mov
popf
in
daa
sub
pusha
lods
aam
loop
and
incl
xchg
sub
and
mov
push
test
aas
lea
and
arpl
and
pop
push
mov
dec
jne
rorl
subl
adc
sti
dec
xchg
mov
xchg
mov
cmc
xchg
cmp
es
adc
cld
sbb
xlat
es
test
ret
ljmp
arpl
sub
int
cmpsb
xchg
jae
mov
mov
sahf
mov
push
jo
movsl
rcrl
cmpl
jno
es
inc
aad
in
rolb
and
data16
es
or
sub
mov
arpl
mov
jg
filds
mov
aad
pop
mov
mov
adc
std
dec
push
add
test
mov
cli
jns
dec
ret
mov
xchg
cmpsb
and
jns
addr16
std
inc
xlat
sub
jmp
fbld
pop
in
faddl
jge
xor
rcrl
jg
jno
idivl
xchg
fldl
fidivrs
lcall
lcall
jp
add
and
lcall
xchg
fidivs
std
adc
in
cmovl
mov
push
loope
popf
push
arpl
sbb
add
gs
mov
lahf
xor
push
cmpsb
mov
aas
test
fisubs
clc
loop
xchg
dec
mov
jecxz
push
popf
loopne
jmp
cmpsb
push
push
test
push
dec
push
rclb
clc
std
fcoms
or
mov
mov
pop
mov
mov
icebp
xchg
push
data16
pusha
std
popf
push
jne
adc
imul
incb
out
fiadds
int
dec
dec
xor
inc
test
push
sbb
dec
bound
fldcw
lods
mov
int
dec
imul
adc
lods
inc
sbb
and
and
xlat
out
sbb
xor
subb
adc
int
scas
mov
push
rorl
xor
sbb
xchg
xor
dec
cmp
pop
dec
sahf
sub
push
sub
adc
std
int
test
flds
movb
mov
xchg
pop
cmp
scas
scas
pop
das
push
frstor
cmpb
in
insl
inc
dec
std
loopne
adc
fistps
repz
ret
rorl
test
mov
pop
fistpll
or
fildll
cltd
test
sub
jnp
arpl
add
xchg
out
xchg
lcall
push
lret
mov
add
mov
icebp
push
or
lock
test
jp
lock
mov
mov
repz
jnp
pop
addr16
test
mov
dec
mov
adc
mov
mov
lcall
lcall
into
arpl
add
std
xchg
sub
cmpsl
cmp
lret
cmc
add
bswap
push
mov
es
mov
pushf
push
ss
sbb
outsl
ljmp
cmp
addr16
and
notb
push
jno
pop
or
test
sti
negl
jp
mov
inc
ja
push
and
jecxz
mov
fs
fldenv
test
test
test
rorl
cli
cmp
sub
jl
in
cmp
pop
mov
das
inc
and
cld
out
es
adc
jmp
mov
xchg
addb
rclb
jbe
lea
sbb
fs
daa
stos
push
sahf
ret
icebp
loope
add
pop
bound
jo
ss
movsl
mov
mov
xchg
xchg
cmp
mov
mov
cmp
jno
mov
mov
jge
mov
test
js
add
cld
xor
push
cld
push
cltd
sub
cltd
iret
mov
cmp
fcmove
sub
popa
repnz
xlat
xchg
in
or
sti
mov
push
daa
xchg
cmp
push
pop
add
out
aad
and
testw
pushl
push
scas
loopne
mov
dec
std
mov
mov
ja
sbb
jecxz
shll
lret
and
mov
test
imul
inc
ret
andl
inc
repnz
or
jmp
movsb
fmul
jmp
add
stos
lret
mov
adc
es
adc
leave
das
ret
inc
test
imul
cmp
or
and
add
outsl
xchg
dec
mov
cmp
or
mov
jno
daa
mov
or
and
aam
push
xchg
aas
cmp
xlat
dec
jp
jo
loop
inc
popl
or
gs
xchg
adcl
sarb
mov
adc
mov
pop
inc
ds
arpl
hlt
lods
inc
inc
bnd
mov
scas
out
ficomps
sbb
sbb
xlat
in
pop
dec
cmc
adc
mov
ljmp
push
xchg
adc
push
addr16
push
jno
arpl
es
mov
or
cmp
daa
mov
mov
inc
lret
in
xchg
mov
add
out
pop
loopne
xor
adc
test
xchg
push
test
movsb
jecxz
popa
xchg
mov
fcompl
pop
mov
int
mov
xorb
adc
or
and
ret
pop
mov
mov
adc
jg
leave
cltd
aas
nop
lock
out
test
jmp
ffreep
dec
mov
mov
aaa
sahf
and
adcb
mov
push
push
lock
mov
negl
mov
inc
lds
jle
in
xlat
scas
jne
sar
lcall
cmpsb
lock
sti
pop
jnp
push
xchg
outsl
push
adcb
lods
daa
pusha
loop
out
daa
sub
int
pop
and
mov
push
mov
jno
fs
data16
inc
scas
or
rorb
popf
inc
mov
subb
out
and
mov
push
pushf
lahf
insb
mov
xorb
sbbl
jne
mov
cmp
jno
mov
or
outsb
call
pushl
cmp
ror
sub
outsb
mov
loope
xor
ror
mov
in
pop
sub
lret
sarb
dec
or
fisubrl
xchg
mov
cld
cmp
in
sbb
in
pop
ss
push
shll
mov
js
xor
fiaddl
fnstenv
mov
fcoms
fs
xchg
ret
or
outsb
ret
mov
jns
xor
rcll
pop
or
pop
jmp
cmc
sbb
push
test
mov
dec
movb
lret
imul
jle
mov
and
jne
outsb
enter
pop
push
inc
mov
fs
fs
sub
inc
dec
cmp
lcall
mov
hlt
dec
pop
sub
clc
mov
outsb
sbb
cmp
shlb
mov
xor
lret
lea
rcrb
pusha
ret
mov
stos
mov
ja
adc
movsb
push
mov
repz
dec
lahf
inc
pushl
sub
sub
cmp
jmp
cld
orb
ss
fwait
dec
mov
cs
push
mov
popf
mov
lret
in
mov
cmp
loopne
mov
sbb
jno
jo
sbb
rcll
and
movsb
fnclex
orb
pop
mov
adc
fists
pusha
xchg
ljmp
pop
ja
lds
pop
lret
cltd
or
sbb
add
mov
imul
jmp
out
jne
add
fiaddl
inc
add
inc
adc
pop
mov
cltd
adc
lds
inc
repz
mov
add
aaa
ror
es
lahf
sti
aas
xlat
dec
dec
orl
insl
lock
add
dec
dec
inc
scas
lcall
jbe
xor
hlt
dec
iretw
sbb
adc
dec
push
fsubs
or
clc
cltd
mov
jno
addb
dec
or
add
out
outsl
fst
loopne
add
pop
jl
sub
dec
mov
xor
jle
adc
ret
out
rorb
mov
fsubs
jo
jb
aam
jecxz
fwait
xor
out
jo
dec
repz
fstpt
fisttpll
lock
mov
sti
xchg
roll
sbb
ret
xchg
add
sub
sbb
adc
bound
fisubrs
and
push
repz
js
loopne
out
rolb
inc
movsb
stc
pop
shlb
mov
mov
loope
and
movmskps
sahf
test
fcoms
mov
mov
push
in
jl
cmpl
mov
in
jb
dec
adc
mov
lret
fisubrl
stos
or
xor
or
pop
jno
lcall
xor
jle
jecxz
popa
add
dec
push
test
pop
loope
stos
sbb
mov
push
add
fs
jns
sub
push
out
add
cmpsl
or
fistpl
pop
aad
test
and
lcall
push
cs
cwtl
sbb
mov
mov
mov
je
movsl
mov
pop
ljmp
jecxz
outsl
add
hlt
sbb
loopne
je
lcall
jae
adc
hlt
test
dec
push
dec
jne
mov
iret
or
bound
in
inc
sub
cmp
lock
or
and
testb
sub
sbb
xor
in
jmp
scas
cmpsb
test
enter
into
sub
sub
int
dec
add
nop
outsb
jg
addl
sahf
stos
ret
cmpsl
mov
jecxz
aas
jg
add
xor
sub
pop
dec
xlat
push
adc
scas
fld
addr16
daa
cmpsb
je
push
mov
rcl
sub
pusha
ja
pop
jne
aaa
push
icebp
push
sub
repz
mov
mov
jge
jb
movsb
mov
jmp
lretw
mov
adc
mov
icebp
loope
pushf
and
mov
dec
fnstsw
hlt
adc
inc
ffree
push
lods
push
lret
and
mov
sahf
pop
and
movsb
add
pop
call
out
into
rcrl
xchg
gs
mov
aas
mov
cli
dec
mov
mov
lods
loopne
outsl
cmp
jmp
popf
mov
push
aam
repnz
subb
in
xlat
fsubs
ror
or
mov
int
insb
or
outsl
push
cmp
fiadds
cli
hlt
insb
or
fsts
push
mov
jb
lock
stc
out
adc
lods
cmpsl
push
jge
xor
jb
dec
data16
mov
testl
or
pop
ss
cmpsb
stc
sub
xor
xor
adc
or
add
or
dec
mov
mov
xor
sbb
jg
out
push
shll
icebp
pop
lahf
icebp
dec
jae
cmp
pop
in
mov
dec
pop
jnp
cli
out
push
jp
xchg
adc
and
outsb
inc
xor
ds
enter
sbb
fmuls
inc
inc
or
jno
cmpsl
pusha
jb
pushl
fimull
adc
and
jl
xor
mov
or
push
sarb
aam
sub
outsb
pusha
bound
dec
sahf
mov
sbb
sub
lods
xor
xchg
push
xchg
mov
clts
mov
lds
out
ret
jg
out
push
daa
scas
inc
or
ret
stos
cld
nop
in
cmp
arpl
aam
xchg
pop
insl
mov
rcrb
shr
pop
and
outsb
into
movsb
fldlg2
or
sub
sbb
and
addr16
pop
fstpt
jno
lcall
movsl
dec
pop
mov
lret
xor
aam
pop
or
adc
lods
push
mov
cmp
lea
ret
test
jae
cmp
jb
loop
inc
pop
xchg
sub
mov
jo
popf
sbbb
in
inc
in
scas
lock
push
sub
xor
lahf
mov
cmpsb
push
xchg
addb
rcrl
xor
sub
pop
sub
inc
dec
push
sbbl
out
int
scas
inc
and
inc
sbb
insb
lahf
jne
ja
mov
or
nop
sbb
popa
ds
rclb
xor
cwtl
icebp
or
mov
inc
cmp
cmc
out
pop
mov
or
sbb
mov
sub
mov
inc
shrl
pop
bnd
xchg
push
jno
test
mov
fcoms
cmc
setg
dec
test
jmp
xor
xchg
inc
jnp
and
call
dec
add
pop
outsb
or
scas
jl
sbb
test
sahf
inc
xlat
imul
sub
add
mov
sub
in
sbb
push
sti
push
enter
dec
mov
call
int3
push
test
or
mov
push
das
push
cwtl
stos
popf
bound
dec
jle
push
imul
jnp
fwait
xadd
pop
imul
fisubl
test
insl
int3
add
inc
mov
cmpb
or
push
stc
imul
test
sahf
push
jg
xchg
inc
data16
mov
sbb
jns
inc
push
mov
nop
jge
dec
fstl
ret
rcll
outsb
and
cs
mov
jmp
aas
ficomps
std
mov
cmp
pop
mov
mov
gs
cmpsl
enter
adc
cld
outsb
daa
dec
ret
pop
mov
sub
mov
jp
and
adc
fists
xchg
cmp
jmp
addr16
push
mov
adc
in
add
push
jbe
out
out
jne
in
in
jne
cmpb
invd
and
bswap
adc
in
mov
fildl
mov
bound
pop
out
into
xorl
icebp
jno
push
out
push
xor
xchg
mov
xchg
mov
xor
jo
dec
shrb
inc
push
cmp
push
lcall
into
and
mov
push
xor
aas
inc
fldl
pop
dec
inc
pop
xchg
inc
int
jo
fisttps
ret
add
mov
cli
je
js
fadds
sysret
out
rolb
out
loopne
xor
mov
xlat
popf
ret
jb
aas
sub
aas
mov
adc
test
ret
add
adc
pop
pop
ficoms
jo
pop
enter
push
je
fistl
mov
xchg
enter
testb
ljmp
enter
in
jb
xor
stos
sbb
imul
gs
scas
xchg
lods
push
xchg
jo
mov
pop
std
insl
sub
inc
shl
pop
jle
jmp
ret
xchg
sbb
jp
stc
aaa
jne
icebp
call
lcall
aas
out
insb
cwtl
pop
push
mov
cmp
inc
outsb
pop
adcl
inc
add
sub
stc
aas
add
or
cmp
xchg
sub
mov
dec
rcll
push
shl
jns
ss
xchg
mov
xchg
lock
cli
lock
lret
nop
jmp
addr16
inc
dec
mov
push
leave
xor
je
nop
sbb
sub
ret
mov
in
mov
sbb
push
out
cmpsl
mov
cmpl
sub
pop
jbe
ss
or
mov
test
cltd
pop
cmp
mov
mov
add
fs
les
popa
adc
jbe
cmp
icebp
test
xchg
sbb
paddw
pop
outsl
pop
push
mov
sarl
xchg
dec
add
int3
dec
cmpsb
xor
js
add
mov
xlat
jns
leave
cmp
pop
inc
sbb
push
nop
stc
scas
jo
mov
lret
std
mov
sub
mov
mov
leave
mov
or
push
pop
outsl
hlt
call
addr16
push
ja
add
scas
movb
out
popa
mov
jl
xchg
pop
enter
enter
jp
inc
popa
clc
sub
adcl
les
test
jmp
jnp
ret
add
cmp
or
stc
rcll
jg
cs
fcmovb
pop
ja
dec
and
sbb
pop
or
xchg
lret
fidivl
pop
add
loope
lods
imul
adc
push
lcall
push
fs
decb
xchg
cmc
out
or
sub
add
mov
hlt
mov
leave
jbe
cmp
pushf
adc
xchg
repnz
xor
push
ja
mov
cmp
dec
and
pushf
and
pop
mov
and
and
hlt
fs
shr
inc
xchg
scas
or
xchg
rorl
or
cmp
cmp
dec
cmp
push
sbbl
cmpsl
aaa
and
cld
decb
adc
jns
fstpt
pop
inc
jno
hlt
popa
cltd
cmpsb
or
sbb
clc
fsubl
sbb
jo
mov
push
call
xchg
test
mov
xchg
das
sbb
icebp
mov
xor
xorl
test
cs
xor
mov
or
push
vandnps
jp
xchg
adc
arpl
xchg
test
pop
leave
cmp
add
test
jecxz
xchg
cmp
ljmp
cmp
mov
mov
and
sub
mov
sub
or
in
das
cmp
jns
mov
mov
daa
ja
mov
sbb
ja
movsl
test
jno
aad
mov
aas
lcall
rcll
mov
iret
pop
imul
cld
out
lret
xchg
lods
mov
aad
sub
cld
mov
inc
xor
data16
push
fs
stos
mov
pop
inc
push
shlb
lahf
mov
cmp
sbb
lret
pop
aaa
insb
test
or
mov
jecxz
sar
ss
loopne
out
in
add
or
addr16
outsl
jge
fisubrs
fnstsw
aad
rorb
insb
pop
sbb
push
and
and
mov
jo
push
sbb
jne
or
dec
pop
mov
lock
mov
fcomps
pop
push
cmp
and
rorl
mov
daa
mov
pop
sub
out
fmull
cmp
rcl
or
lcall
clc
fldcw
orb
insb
sbb
mov
dec
adc
pushf
pop
xchg
sub
mov
pop
push
outsb
push
iret
jle
sub
ljmp
lret
inc
insl
dec
fcomps
lahf
popf
xchg
mull
lea
push
and
push
int
push
arpl
ja
mov
jge
imul
jg
sbb
std
mov
or
cmp
jp
shrl
es
stos
add
pop
int3
mov
sub
push
jnp
sbb
xchg
fadds
and
xor
inc
pop
sarb
aas
pop
sbb
outsb
push
fnop
jl
mov
mov
mov
xchg
les
mov
arpl
lods
insb
lds
getsec
mov
lcall
inc
push
jo
ljmp
adc
mov
test
arpl
es
or
gs
shl
call
scas
mov
or
ja
stc
daa
jge
pop
or
outsl
jne
or
sub
mov
nop
mov
add
pop
jne
imul
sarl
pop
sbb
dec
roll
jp
mov
sbb
int
roll
and
xchg
stos
sarb
mov
push
insb
iret
loopne
loopne
test
ret
add
movsb
loope
in
cmp
lea
mov
xchg
mov
sbb
loop
lds
hlt
push
sbb
mov
int3
dec
mov
pop
push
jno
mov
dec
xor
bound
aad
outsl
mov
cs
push
cmove
lock
add
daa
call
fldt
test
ss
sbb
pop
jle
and
pushf
mov
test
daa
filds
and
lret
inc
incb
leave
outsb
and
sbb
xchg
roll
imul
outsl
sub
lret
ret
pop
adc
sar
pop
xor
popf
xchg
lods
daa
cmp
rcrl
es
rorl
mov
cmpsl
mov
aad
icebp
std
aas
mov
daa
addb
mov
pop
ja
outsb
pxor
dec
cs
mov
cmp
inc
orb
int3
jnp
jmp
jo
bound
stos
shlb
xchg
call
add
sub
pop
xchg
lret
mov
lods
pop
movsb
adc
sbb
dec
add
aas
inc
rcrb
mov
push
fisttpl
adc
je
es
push
mov
iret
cli
ss
fs
jg
fdivr
std
test
jecxz
lahf
leave
cmp
cs
mov
mov
fwait
loope
mov
mov
aam
ja
adc
out
jns
adc
mulb
shll
pop
inc
and
mov
shll
cmpsl
call
nop
pop
mov
out
cmp
mov
leave
add
das
sti
popf
in
jmp
jno
push
cmpsl
xchg
xor
mov
shll
ficompl
out
pushl
sub
xchg
and
mov
test
adc
sti
loope
cmpl
add
arpl
into
dec
jecxz
aad
mov
inc
xor
add
dec
push
and
lcall
add
add
fbstp
outsl
or
push
push
ret
sbb
andb
cmp
cltd
dec
add
jne
in
sub
cmp
fstpl
add
mov
sub
mov
decb
pop
js
movsl
push
in
sbb
cmp
xorb
scas
rcll
jae
adc
pop
sbb
pop
sbbl
std
dec
pushf
pop
dec
fsubrs
aam
push
leave
test
inc
pop
pusha
sbb
fst
andb
pop
and
mov
jne
cmp
cmp
outsl
dec
data16
and
xchg
ret
aad
in
add
shl
lods
jno
jecxz
lods
ljmp
adc
mov
xor
sub
shrb
out
in
and
lcall
mov
scas
fisttpl
ret
sbb
imul
jo
inc
adc
xlat
mov
and
mov
icebp
jmp
inc
adc
jle
mov
sbb
es
xor
scas
dec
xchg
jae
cwtl
push
into
test
or
jg
xchg
pop
bound
bound
stc
jg
pop
stc
fbstp
clc
xor
addr16
das
rolb
aam
mov
divb
jo
int3
jge
push
sti
adc
xor
leave
into
push
lret
pop
outsb
xor
neg
mov
test
aaa
inc
mov
cmp
cmp
xor
scas
add
adc
xor
jne
mov
in
fildll
in
or
mov
lods
cmc
fsubs
test
je
push
jmp
loope
mov
leave
call
and
stos
insb
mov
popa
pop
pop
sbb
xor
mov
push
mov
mov
jne
xchg
rorb
pop
sub
insl
out
and
mov
add
push
sub
mov
or
jnp
mov
dec
int
int
dec
scas
outsb
xchg
xchg
mov
daa
mov
stos
pop
xor
or
outsl
mov
iret
pusha
xor
mov
sub
rorb
cmp
cmp
cmp
cmpsb
mov
pop
sub
jo
imul
popf
into
jno
aad
sbb
pop
xor
outsl
jl
jbe
pop
cwtl
out
mov
push
sub
out
jmp
fs
and
lret
dec
bnd
es
lcall
insb
shlb
xchg
jp
xor
adc
mov
push
aam
in
outsb
enter
jmp
jb
push
popa
addb
imul
pop
arpl
jle
mov
inc
mov
cmpsb
pop
push
mov
fdivr
cmp
leave
sarl
pop
sbb
int
popf
push
rolb
jns
dec
cmc
ret
xchg
shlb
ret
xchg
and
inc
adc
pop
fdivrp
pop
dec
fnsave
jbe
mov
popa
rcl
lret
jne
ja
mov
or
mov
xchg
daa
sub
dec
sbb
out
xchg
sub
fucomp
mov
push
mov
and
bnd
sbb
aas
into
aas
mov
das
mov
out
mov
call
or
iret
fidivl
icebp
in
pop
inc
jns
and
notl
jno
call
ljmp
adc
or
sub
rcrb
subb
es
js
mov
push
sub
mov
in
sbb
mov
dec
add
or
cwtl
mov
xlat
pushf
adcb
and
addb
mov
scas
icebp
mov
pushf
cs
mov
jo
pusha
push
cwtl
inc
xchg
pop
sbb
std
jg
mov
push
pop
ror
pop
or
jo
sub
jo
and
outsb
out
push
js
or
movl
mov
dec
mov
xorl
ds
fnclex
ror
push
mov
xor
scas
idivl
test
jle
les
orl
dec
into
movsl
mov
rcll
push
mov
push
dec
mov
incl
ljmp
pop
pop
mov
lods
je
push
adc
stos
fs
sub
jno
xor
sbb
rcrb
std
in
icebp
js
mov
pop
or
jns
adc
sar
test
in
pop
mov
scas
dec
mov
fst
scas
xor
std
xor
add
sbb
das
insb
or
adc
sub
and
daa
xor
sub
xchg
dec
fidivrs
test
popf
adc
jle
mov
inc
stos
stos
push
repnz
movsl
mov
xchg
ret
movb
cmp
xchg
push
adcb
pop
dec
ret
sarb
adc
ja
call
mov
rcrb
out
sbb
sbb
loop
outsl
adc
xchg
iret
js
out
sub
mov
push
jmp
inc
mov
lcall
mov
in
pop
test
dec
pop
nop
xor
rorl
inc
jmp
add
xchg
loopne
mov
push
inc
ja
ret
rcl
rcrl
mov
xor
fistpll
and
inc
rcll
scas
ficomps
mov
mov
pop
icebp
adc
sbb
cs
push
dec
add
fcomip
mov
aam
xor
rol
cli
push
sahf
jbe
aaa
insl
adc
sub
inc
bound
lcall
xchg
arpl
jge
and
xchg
or
jae
push
and
cmp
sub
adc
xchg
mov
loop
sbb
daa
rclb
lret
jl
loop
fidivs
rclb
rorb
and
popl
push
xchg
testl
cmc
pop
xchg
data16
adc
mov
or
rol
or
stos
push
mov
pop
xor
mov
mov
mov
pop
mov
dec
inc
mov
mov
in
rcrl
sbb
test
cwtl
popa
nop
iret
add
sbb
or
push
mov
movsb
push
je
add
cs
mov
sbb
adc
pop
cmp
int
mov
int3
mov
push
mov
bnd
xor
mov
aaa
stc
adc
sub
addr16
sbb
arpl
xchg
lods
mov
ds
mov
mov
sarb
inc
loopne
outsl
push
pop
in
dec
iret
dec
movsl
sti
inc
out
jp
xchg
adc
pop
outsl
mov
aas
hlt
mov
push
jmp
or
gs
xor
mov
cwtl
xor
aas
out
add
arpl
nop
xchg
mov
popf
loope
mov
jle
pop
stc
cmovg
xor
and
pop
cltd
push
lods
stc
add
aas
mov
in
or
sub
dec
push
adc
cs
dec
mov
daa
add
add
xchg
sub
inc
std
push
and
cwtl
ja
scas
mov
lcall
jbe
mov
sub
sbb
xchg
lock
aaa
lahf
in
cmp
rcl
inc
fistpl
out
and
mov
fstps
fs
imulb
stos
hlt
xor
cmp
cmc
adc
scas
insb
jns
pusha
push
stc
out
push
sbb
neg
push
and
repnz
shrl
jle,pn
stos
and
pop
adc
scas
jp
pushf
dec
daa
hlt
jo
fcompl
rcrl
cltd
jns
adc
out
pushf
icebp
and
and
in
cmc
dec
lea
jno
push
stos
test
outsl
mov
mov
push
adc
icebp
xchg
jmp
clc
loope
icebp
mov
cs
mov
fldl
filds
cmpsb
sbb
mov
push
xlat
push
mov
pop
sub
adc
dec
pop
xor
incb
jle
insl
xchg
mov
mov
xchg
xchg
inc
loop
and
mov
ja
push
sbb
popa
je
test
cmp
sbb
in
pop
lds
loop
fldenv
inc
sub
inc
fcmove
subb
cmpsl
fdivr
sbb
push
mov
mov
and
outsb
xchg
mov
jbe
inc
jnp
lret
push
ljmp
or
outsl
inc
push
mov
sbb
and
cmpsl
mov
xor
or
in
pop
inc
popf
aas
sahf
mov
ret
cmp
jbe
fsincos
adc
int
pop
stc
xor
dec
in
jbe
jg
fisubs
or
mov
adc
push
shr
jmp
mov
fwait
and
and
in
or
cwtl
or
mov
cmp
aas
cltd
sbb
sbb
bndldx
mov
movsl
int
fsubrs
jg
jo
push
add
pop
or
ret
rcrl
ljmp
inc
addr16
stc
icebp
inc
cmp
adc
int3
sbb
pop
sbb
adc
cmp
in
bound
or
jge
out
mov
pusha
fnstcw
cltd
bound
mov
add
dec
jbe
lea
out
and
add
xchg
xor
pop
sti
lods
and
dec
mov
xchg
mov
cli
xor
sbbb
mov
loop
xchg
or
ror
jo
int3
mov
ds
popa
data16
push
and
lret
loopne
outsl
stc
mov
mov
pop
lcall
mov
add
ret
xchg
dec
cltd
stos
cltd
rep
push
cmp
daa
dec
out
dec
xchg
cltd
xorl
and
test
fdivr
fstpl
sub
dec
leave
sahf
je
imul
test
nop
mov
cmp
mov
js
cmp
incb
sbb
pop
xchg
push
outsb
fwait
iret
mov
lock
aam
and
aaa
pop
outsl
es
or
inc
dec
dec
jle
pop
jbe
es
movsb
arpl
mov
test
cmp
push
stos
pop
nop
test
push
rcr
jns
jno
repz
imul
and
adc
int3
mov
mov
pop
cmp
add
jg
scas
repz
dec
imul
roll
lahf
shrb
ret
dec
rorb
mov
mov
int
das
call
sbb
mov
xchg
pop
shlb
sbb
cmp
shl
pop
mov
xor
nopl
pop
fcos
int3
movsl
sahf
fnsave
mov
mov
cmp
adc
and
inc
and
aaa
cmpsl
scas
jbe
fldenv
pop
test
lcall
dec
fwait
lcall
push
mov
or
jge
push
push
dec
push
decl
movsb
sbb
jge
jl
les
pop
mov
imul
movsb
out
adc
mov
xor
jge
test
dec
nop
leave
mov
push
xor
mov
or
and
jae
jnp
cmpsl
shrb
movsl
icebp
pop
push
sahf
jne
mov
inc
add
sbb
adc
mov
aad
mov
cmpl
dec
mov
pop
ss
xchg
stos
inc
pop
jge
adc
aam
mov
cmc
dec
and
mov
xor
inc
dec
fdiv
jle
add
cli
mov
sub
add
cmp
movsl
outsb
repnz
cs
or
sbb
andl
mov
mov
xchg
in
aad
pop
dec
and
sub
fcmove
mov
mov
xor
xor
outsb
call
dec
repnz
out
in
fsts
sti
movsb
or
in
cmc
into
mov
pop
pop
or
add
mov
xchg
aaa
mov
testl
cld
js
out
mov
pop
fistl
je
sbb
or
shlb
scas
dec
xchg
std
cltd
icebp
xchg
pop
pop
fcmovb
and
xchg
mov
add
ss
push
loop
data16
cmpsb
aaa
inc
cmp
jge
sbb
dec
outsl
mov
fisttps
xchg
sbb
cwtl
jle
sub
fwait
cwtl
leave
inc
jb
pop
lahf
jge
push
test
push
daa
shlb
andb
mov
jno
movnti
mov
mov
rol
push
addr16
cmp
mov
sbb
xor
xchg
xchg
sub
and
lcall
push
das
xchg
mov
enter
ljmp
jno
push
jmp
jnp
lds
out
xchg
mov
xchg
lahf
fwait
add
js
flds
repz
push
or
hlt
mov
and
in
and
test
sbb
cwtl
or
loop
xor
push
sbb
and
scas
mov
ja
mov
fs
mov
pop
pop
lds
xchg
and
pusha
insl
shrl
mov
pop
addr16
popf
es
call
insl
stos
push
int
mov
sub
test
clc
test
enter
dec
xchg
in
push
pop
push
andb
lahf
andb
adc
xor
aaa
mov
adc
loop
sbb
test
pop
call
rcll
inc
mov
icebp
lcall
push
loopne
in
int3
stos
lds
or
stc
add
push
daa
lods
mov
xchg
xchg
stc
mov
flds
ljmp
xchg
mov
mov
cs
push
cli
ss
cld
and
test
push
sahf
ffree
mov
daa
lcall
loopne
dec
mov
es
aaa
sub
push
sub
notb
inc
iret
cmp
jecxz
sbb
mov
push
test
pop
lds
cld
cmp
cld
dec
rclb
mov
insl
addl
ja
jg
fists
cwtl
xchg
dec
xchg
cmp
push
and
or
mov
ja
inc
sub
sub
xchg
test
dec
push
movsl
pop
or
out
jl
push
and
lock
mov
jg
fidivrl
cld
jno
nop
lods
scas
fwait
xor
mov
es
orl
sub
adc
and
sub
mov
outsl
mov
lret
or
insb
fwait
aaa
push
push
or
add
cli
jo
div
insl
adc
dec
jb
jle
push
push
push
test
mov
ljmp
insl
imul
scas
dec
insl
outsb
clc
xchg
cmp
xchg
popf
js
je
cmp
sub
pop
lds
mov
cmp
xchg
enter
inc
dec
push
mov
and
imul
jge
sub
jmp
icebp
fbld
inc
sbb
test
mov
pop
mov
mov
mov
scas
scas
jl
outsb
dec
lock
push
lock
aad
pushf
shll
and
jp
add
enter
cmpsl
ja
adc
negb
aas
inc
bnd
pushf
ret
inc
lds
call
or
inc
lds
ret
rcr
jp
test
fs
sub
loope
int3
or
icebp
repz
xchg
sub
out
adc
leave
into
sub
ss
stc
mov
ss
sbb
xchg
scas
push
lods
jg
dec
mov
xorl
inc
ror
add
loopne
and
rcrl
ds
dec
stc
decb
je
stc
sub
roll
popf
and
pop
xchg
sub
repnz
mov
or
push
add
pop
or
popa
lock
cmp
gs
aam
xchg
ret
loopne
pop
sub
sahf
rcll
pop
cli
nop
dec
jg
test
iret
cmp
movsl
sbb
bound
mov
stos
push
into
add
sub
cmp
xchg
popl
push
inc
repnz
jae
mov
int
add
ret
push
jge
mov
push
push
loopne
fcom
popa
sbb
aaa
xchg
sub
rcr
scas
insl
inc
add
out
cmp
adc
xchg
or
cmp
into
jb
int
hlt
mov
repnz
sbb
frstor
scas
xchg
mov
push
fdivrs
pop
mov
fstps
nopl
dec
cmc
add
fucom
cmc
cld
xor
add
mov
shr
scas
dec
outsb
push
pop
mov
mov
jg
test
aad
push
xchg
xchg
ja
scas
fcomps
clc
mov
cli
or
mov
ljmp
mov
cs
out
test
sbb
push
jp
pop
cmp
inc
movsb
inc
cmpsb
das
popf
enter
sbb
or
call
cmp
lret
shll
mov
je
and
sub
neg
aam
test
jne
adc
sbb
sbb
add
in
dec
cli
mov
jno
xchg
mov
imul
and
inc
xorb
je
jo
pusha
in
leave
lods
cmp
or
mov
out
aad
out
push
lret
ja
xchg
pop
pop
stc
cltd
int
aam
xchg
fbstp
fcomip
dec
cmp
push
xchg
hlt
out
hlt
test
add
pop
jg
sbb
sub
jg
mov
rclb
push
lock
pusha
ss
loope
mov
fwait
pop
or
mov
addr16
cli
push
fmul
out
out
cmp
pop
loope
add
scas
sbb
stos
es
ror
sahf
dec
push
inc
sti
push
sar
in
popa
dec
das
mov
inc
mov
pop
aas
mov
call
and
mov
aaa
daa
cmpsb
clc
or
inc
stos
xchg
inc
nop
adcl
outsb
imul
dec
aam
xor
push
rclb
fldt
sahf
icebp
les
jno
cmp
mov
fdivrs
test
cmp
fistpll
jbe
mov
add
sahf
add
inc
inc
dec
faddl
sarb
xor
shlb
arpl
fistl
lods
adc
pop
decl
int3
jecxz
pop
inc
int
sub
test
add
sbbb
dec
dec
sub
fwait
dec
scas
and
gs
lods
call
pop
cmpsb
out
aam
xor
pop
xor
sbbb
cmpsb
pop
cmc
outsl
leave
arpl
pusha
out
mov
pop
mov
pop
cs
fsubrs
lcall
and
fsub
mov
mov
jecxz
push
aaa
mov
in
pop
lret
enter
arpl
push
scas
inc
lret
inc
xor
jo
push
xchg
imul
pop
sbb
jb
mov
jbe
dec
out
inc
jns
mov
movsl
stos
or
fisubrl
rolb
xor
sbb
ja
pop
int3
jle
push
enter
xchg
jp
sub
leave
jae
fstp
insb
mov
inc
bound
mov
mov
add
imul
inc
pop
int
sub
mov
orb
cltd
ds
xchg
ljmp
lock
sub
cmp
lds
push
sbb
rorl
imul
xor
mov
push
mov
incl
jg
pop
add
jmp
add
xchg
or
inc
call
dec
mov
rolb
insl
loope
loop
in
pop
test
add
ror
repz
push
xor
mov
or
pop
in
outsb
orl
pop
and
les
jge
ret
mov
inc
dec
lret
shr
into
push
jg
jae
movsl
faddl
xor
dec
out
add
xor
pop
in
insl
ja
xchg
cltd
cmp
mov
xchg
popa
repz
test
nop
aad
pop
jae
aas
push
decb
mov
stos
pop
jge
leave
adc
or
sub
push
push
jg
dec
mov
add
xchg
dec
hlt
je
test
pusha
mov
xor
lods
lods
fstpt
cld
loop
dec
fcompl
cmpl
ds
and
mov
and
mov
rcrl
sub
jle
ds
and
ret
inc
mov
jo
das
out
test
adc
data16
sub
in
xchg
jno
and
pushf
shl
mov
cmpsb
dec
cmp
cmpsb
shrb
adc
cld
loopne
call
inc
mov
and
mov
cmp
outsl
mov
aam
pop
insb
fnstsw
mov
sub
rcll
dec
xchg
push
or
int
les
iret
je
subb
loopne
ss
lret
repnz
mov
adc
mov
idiv
add
lods
sbb
xchg
cli
movsl
mov
jmp
roll
fcmovnb
icebp
mov
popf
mov
mov
jno
scas
add
adc
jns
lcall
das
xchg
add
mov
add
mov
xor
pop
rcrl
add
pusha
mov
das
test
into
iret
push
scas
movsb
int
addr16
fsubrl
addr16
in
dec
ffreep
movsl
into
jg
into
movsb
xor
cltd
mov
jl
fbstp
adc
pop
and
jno
imul
mov
pop
fdivrs
test
fisubrl
aaa
leave
pop
xor
push
cmp
lahf
mov
sarl
imull
add
pop
xchg
lods
jb
sti
loope
jns
cmp
int
lods
xchg
pop
push
sahf
dec
mov
icebp
fs
sbb
into
in
lods
sbb
push
repnz
jno
add
ficomps
jecxz
sbbb
pop
mov
or
and
stc
popf
jo
mov
and
inc
in
inc
sub
repnz
sbb
mov
out
xor
iret
subl
fwait
sbbb
mov
xchg
es
stos
add
stos
sahf
aas
hlt
mov
cwtl
xlat
pushf
and
add
jmp
sub
out
add
ficoml
add
adc
or
in
jl
nop
cmpsl
into
dec
cli
dec
cmp
ja
fmulp
xchg
sbb
xorl
sub
jo
jp
fs
mov
pop
test
outsl
cs
popa
push
loop
sar
insb
jl
dec
inc
cld
mov
pop
mov
fisttpll
xchg
cmpsb
popa
in
leave
cmp
decb
not
inc
movsl
xchg
dec
arpl
pop
cmp
pop
inc
sub
cmpb
mov
cmp
jnp
or
inc
outsb
push
stos
clc
bnd
sbb
lods
clc
add
xor
out
jns
jmp
jae
mov
sahf
push
dec
sub
push
ret
ret
push
repz
enter
out
pusha
mov
add
cmpsl
sbb
push
pop
push
add
rorb
fisttpll
cmp
xor
push
xor
insb
cmp
imul
imul
jo
sahf
dec
shrl
sbb
fstsw
jg
fcmovbe
daa
test
rorl
push
xchg
cmp
iret
or
outsl
mov
imul
popa
or
ret
push
add
arpl
xor
jecxz
mov
xor
pop
jp
mov
sub
popa
xchg
mov
or
test
cmc
cmp
pop
adc
dec
rcr
cmp
lea
mov
sub
push
test
inc
mov
mov
adc
mov
imul
sub
xchg
cmc
add
std
sub
add
add
xor
add
adc
repnz
shrl
cmp
cmp
std
xor
xchg
push
xor
aaa
mov
leave
sub
or
rorl
mov
loope
cwtl
pop
cmpsl
rcrl
and
jbe
jmp
stos
mov
scas
mov
pop
jbe
xchg
fmul
fcoml
dec
or
std
pop
iret
dec
fnstsw
push
sub
imul
push
loopne
jbe
xor
inc
test
cld
inc
xlat
push
jl,pt
push
push
add
jmp
or
push
fdiv
xchg
xor
xor
call
adc
int3
jge
mov
xor
jp
inc
pop
fiadds
cmp
ret
lcall
mov
pop
cli
ret
fs
inc
mov
jno
outsb
adc
inc
adc
popf
pushf
popa
add
jmp
out
pop
jo
in
mov
xchg
cli
addr16
ss
jg
ljmp
out
dec
sbb
push
shl
rcll
pop
mov
das
xchg
hlt
xchg
jne
and
fisttpll
out
xor
jnp
movsb
cld
ret
inc
outsb
inc
ret
sbb
dec
pop
jecxz
testb
testb
jne
loope
sub
pop
subl
cmpsb
xor
adc
mov
in
xlat
dec
or
pop
pop
dec
ds
int
pushf
fcomp
cmp
inc
dec
pop
arpl
cmp
les
xor
cltd
xchg
jb
xchg
js
orb
xor
pop
mov
cli
pop
jecxz
lcall
ljmp
push
scas
push
sub
je
popa
das
dec
adcb
pop
ss
mov
jl
lcall
jnp
enter
mov
jecxz
subb
insl
add
xor
sbb
mov
decb
in
and
lret
add
mov
call
in
lock
xlat
add
insl
adc
pop
xlat
outsl
mov
icebp
xchg
pop
fs
sahf
mov
rorb
xor
lods
mov
inc
xchg
sti
pop
inc
incl
movq
not
lods
dec
sbb
or
jns
adc
outsl
add
and
inc
adc
adc
push
sub
inc
clc
sbb
sti
lret
adc
icebp
sub
inc
and
push
jecxz
aas
pop
lock
mov
mov
dec
int3
in
xor
xchg
arpl
xchg
bound
xchg
jb
push
xchg
jo
scas
add
pusha
ss
dec
mov
pop
push
jp
cmp
mov
cmp
sarb
vpunpckhbw
ret
push
or
cmpsb
lret
xor
jle
or
loope
loope
or
std
cmpsl
daa
ret
push
inc
fwait
mov
cmp
es
subl
xorl
adc
bound
jns
inc
inc
bound
cmp
dec
out
push
faddl
out
push
out
inc
jecxz
xor
add
rcrb
xor
setge
ficoms
xchg
out
mov
push
enter
je
rclb
test
sbb
mov
ljmp
or
push
mov
mov
or
jg
fistl
mov
dec
arpl
movl
ljmp
and
test
cltd
xchg
pop
mov
ja
push
dec
or
loope
mov
js
loope
lods
cmpsb
mov
or
pop
inc
mov
sar
push
shr
mov
push
or
jns
fdivrs
and
xchg
cmpsb
dec
inc
loop
cmp
jge
lret
test
aas
and
push
xchg
sti
andl
std
or
and
or
lret
push
xor
xchg
xor
iret
push
push
cmp
cmpsl
clc
push
sbb
push
addb
aas
scas
cwtl
or
jae
imul
stos
dec
pop
inc
sbb
jecxz
movsb
cmc
and
in
loope
cld
in
add
ds
jle
jmp
addl
mov
sbbl
cs
std
outsl
push
or
ret
dec
mov
push
sub
cmp
xchg
mov
cmp
inc
add
jl
insl
jp
aam
repz
cs
mov
leave
xchg
mov
jne
cmp
inc
xor
jns
cmp
push
mov
adcl
les
adc
psrad
test
cmc
popf
aad
push
mov
insb
cmp
xor
xor
xchg
cltd
lods
pop
push
inc
jno
je
in
or
sub
xchg
clc
movsl
cmpsl
mov
adcb
inc
mov
xchg
mov
hlt
push
lock
jb
idivl
xchg
out
push
dec
leave
jno
popa
mov
cmpsb
insl
jg
enter
pusha
int
mov
pop
arpl
xchg
popa
aas
add
scas
das
int
shlb
adc
dec
daa
add
mov
popf
jb
lahf
sti
inc
loope
and
gs
inc
out
pop
xchg
jge
fwait
stc
inc
inc
decb
pop
mov
cli
lds
repnz
sub
xchg
xor
jne
sahf
jge
add
mov
xchg
jl
and
in
out
insl
shrl
xor
jl
int
aas
xchg
mov
xchg
mov
xchg
mov
test
faddl
fimull
frstor
outsl
pushf
frndint
hlt
mov
pusha
and
jle
scas
add
dec
sti
mov
nop
pop
test
jmp
jg
sub
insl
in
mov
xorb
sub
mov
sub
test
shrb
mov
out
sub
outsl
or
mov
xlat
or
push
push
std
mov
or
out
dec
test
add
stos
popa
testb
and
jne
pop
test
lea
adc
and
nop
or
xor
inc
les
mov
daa
aad
jmp
add
inc
dec
popf
dec
sub
test
lret
sti
repz
lcall
cmpsb
in
pop
mov
sbb
mov
add
mov
mov
inc
sti
insb
mov
outsl
xchg
out
and
xor
lods
jnp
jbe
and
cmpsl
negb
mov
dec
lds
nop
cmpsl
mov
movsl
xor
mov
sub
lcall
push
xchg
inc
loop
jg
aas
mov
push
lret
icebp
and
adc
fstpt
cmpsl
arpl
adc
adc
and
jp
in
mov
stos
xchg
adc
jae
mov
filds
jmp
or
dec
mov
popa
xchg
ja
fwait
pop
push
jge
insb
inc
scas
xor
repz
lock
inc
inc
jp
insb
pop
mov
enter
jecxz
xchg
in
lds
xchg
fiadds
icebp
and
xor
bound
aam
sub
ss
push
cmp
pop
push
jg
mov
fistpl
xor
pop
in
lahf
xor
jbe
jb
decb
je
and
push
ret
lahf
lcall
sub
test
mov
aaa
ret
popa
outsl
xor
and
push
js
lods
in
add
dec
ret
adc
push
fnstenv
push
xorl
mov
jg
xor
and
push
add
gs
dec
lock
jmp
push
mov
pop
fsubp
fildl
or
mov
loope
or
ret
dec
scas
mov
sbbl
mov
sub
jecxz
mov
dec
xor
lea
xor
shlb
inc
xor
popf
mov
outsl
jg
inc
fcoms
mov
push
sub
lods
test
xor
lcall
aam
cld
cmp
ret
push
jl
xor
pop
ja
mov
pushf
and
mov
jns
add
test
jmp
mov
mov
test
sahf
sub
ljmp
jae
outsl
mov
leave
pop
sbb
xor
xor
cmp
jecxz
jl
add
jp
or
xchg
add
sbb
stos
ficoml
push
cmpsl
mov
out
movsb
cmp
mov
add
scas
lret
ret
jmp
add
orl
js
and
adc
test
cmp
je
add
cmpsb
or
pop
addr16
nop
mov
cmp
aam
push
cltd
sbb
pop
xor
fdivrl
mov
add
cs
or
shrb
int
daa
stos
icebp
jl
xchg
xor
jae
mov
push
adc
sbb
lret
sti
xchg
pop
dec
or
stos
adc
mov
mov
ret
sub
shll
mov
in
fistpll
adc
cli
fnstenv
lret
jns
and
es
ljmp
push
sub
test
pop
push
das
mov
shl
mov
insl
mov
mov
sub
mov
cmp
and
pop
in
mov
imul
mov
sub
or
jge
pop
jp
fisubl
inc
or
mov
test
pop
clc
fildl
or
in
mov
sbb
fisubl
add
loopne
pushf
add
xor
popa
pop
pop
ret
sbb
into
mov
xchg
in
lds
and
cmp
imul
xor
push
add
push
mov
xor
cmp
cmp
outsb
ret
push
adc
pop
mov
je
pop
jmp
push
pop
mov
mov
xchg
mov
jmp
cmp
and
adc
push
dec
push
jecxz
cmovnp
dec
divl
fsts
xlat
sbb
int
or
shlb
cld
add
mov
mov
jge
sub
pop
fsts
or
dec
pushf
pop
mov
repz
or
add
sub
push
sahf
jecxz
add
xchg
mov
or
xor
sub
cmc
es
pop
outsl
outsb
in
or
frstor
inc
das
jb
mov
mov
adc
cli
rcrl
pop
enter
loop
mov
pusha
fisubl
and
adc
cmp
in
lcall
or
xorb
rorl
idivb
in
loopne
cmp
repnz
js
in
popf
sbb
and
xor
popf
fcom
in
int
sbb
lcall
mov
add
lods
ret
jae
repnz
cltd
adc
and
ficoms
push
mov
lcall
daa
or
daa
int
lds
aam
fs
mov
cmc
mov
push
in
mov
mov
lds
cmp
daa
cli
push
lret
sti
mov
fimuls
ret
dec
xlat
in
add
mov
push
movsl
mov
sub
mov
ds
test
pusha
stos
jb
sbb
outsb
std
or
nop
mov
dec
add
lcall
inc
outsl
loope
roll
or
jb
incb
mov
movsl
lods
pop
cs
mov
xchg
sbb
dec
in
mov
cmovne
pop
push
bound
push
test
pop
or
pop
push
sbb
adc
pop
sar
cmp
xchg
repnz
xchg
les
xchg
jne
cmp
test
pusha
nop
mov
cmp
jmp
sahf
sub
jo
xor
ja
sub
lods
adc
mov
scas
jle
cwtl
lds
or
cmp
call
mov
add
dec
rorb
cmc
jle
inc
push
push
pushf
mov
jae
pop
add
loopne
cli
loop
xchg
call
inc
stos
lods
mov
mov
fnsave
fwait
lret
scas
das
mov
insl
sub
arpl
popf
jg
repnz
pop
dec
dec
jge
inc
fldlg2
stos
push
sbb
gs
push
rclb
add
add
fwait
ret
mov
outsb
and
push
rol
daa
dec
fldenv
outsb
pop
cwtl
push
into
fwait
push
dec
sti
jmp
stos
imul
jecxz
and
int
pushf
adc
lods
jae
fstpl
fisubl
out
cmp
add
xor
in
sub
cli
mov
push
out
mov
sahf
jle
mov
mov
sbb
xlat
in
mov
push
pop
cs
mov
fdiv
push
adc
fnsave
sub
mov
enter
pop
pop
push
mov
inc
imul
repnz
xchg
xchg
ffree
pusha
jmp
call
negl
and
mov
pop
xchg
jmp
cmp
repnz
jp
scas
add
jbe
cli
test
mov
enter
mov
jecxz
outsl
test
push
mov
fnstenv
fwait
mov
mov
insl
xor
jo
sub
sbb
aam
int
das
jmp
sbb
lods
mov
sbb
sub
lds
mov
fnsave
or
int
mov
and
mov
daa
jae
mov
or
out
pop
cmp
notl
dec
adc
decl
cmpb
out
lods
mov
jl
in
mov
mov
jne
in
push
or
adc
and
jbe
mov
out
jb
jl
adc
cmpsl
rcr
mov
pop
xchg
rol
xchg
hlt
mov
mov
ss
cli
outsb
stc
sbbb
vcvtsd2si
mov
and
jnp
jge
fmuls
sub
mov
in
mov
push
into
mov
pop
aad
mov
out
xor
cld
xlat
or
into
pop
cmp
outsb
xchg
sbb
int
imul
out
sub
fiaddl
scas
dec
adc
out
cwtl
cld
inc
xchg
insl
pop
jecxz
mov
enter
add
leave
inc
nop
pushf
lds
or
adc
cmc
mov
adc
negl
int3
hlt
out
pop
fldt
lds
xchg
lret
sbb
jg
outsb
mov
loope
dec
jle
icebp
test
rorl
mov
sub
cmc
mov
cmp
cmp
adc
or
arpl
leave
outsl
and
enter
jle
sar
lea
xchg
negb
inc
mov
scas
mov
shrl
jge
clc
mov
cli
xchg
xchg
pushf
fadd
aas
outsl
pop
xchg
std
pop
push
push
mov
inc
pop
sub
fsubl
mov
iret
inc
adc
xchg
cmp
jb
push
sti
loop
or
add
test
repz
inc
insl
test
sbb
pop
push
cmpsb
ds
out
add
std
mov
repz
jg
out
jg
out
push
sub
pop
outsl
fidivl
sub
test
cmc
pushf
mov
cmp
pop
push
cld
int3
sahf
ret
pop
jge
and
mov
out
lcall
mov
mov
dec
test
inc
mov
jmp
cltd
out
lods
insb
mov
fdiv
mov
xchg
cs
lret
jge
cmp
ja
cmp
pop
fdiv
cmc
push
pop
imul
jno
pop
dec
popa
ds
jmp
or
outsl
jo
add
inc
das
sbb
out
loope
movlps
lea
pop
jno
cmp
ffreep
popa
and
or
xor
jbe
xlat
jl
jbe
sbbb
shlb
das
scas
add
pop
push
arpl
das
add
cmp
repnz
adc
movsb
xchg
fnstenv
xor
add
loop
aam
imul
clc
add
push
sbb
jbe
push
adc
xor
adc
sbb
push
jbe
xchg
dec
inc
adc
add
movsb
pop
sub
jns
subl
inc
enter
xor
or
fists
xchg
adc
lods
xchg
push
sub
insb
pop
ljmp
mov
pop
sbb
or
cmp
arpl
pop
popf
out
push
add
out
jbe
imul
pop
call
stos
std
les
jbe
xlat
add
inc
or
ja
out
out
dec
ss
neg
out
sub
mov
sub
daa
add
pop
add
dec
dec
inc
mov
xor
cmpsb
loop
stos
mov
cmp
adc
mov
cmp
adc
int
bound
inc
popfw
dec
or
sub
ja
adc
jns
sbb
lahf
cmpsb
push
mov
sbb
bound
jno
dec
imul
gs
incl
sbb
imul
loop
sbbb
push
push
frstor
lret
jmp
les
lds
jl
xor
in
insl
adc
test
mov
scas
das
rolb
rorw
cld
call
cmp
jb
jne
in
add
testb
rsqrtps
je
movsb
fisttpll
rcrb
test
add
lret
movsb
inc
in
push
movsl
cmpl
pusha
aas
push
mov
adc
jg
daa
aad
mov
out
outsl
pop
mov
add
aad
nop
fwait
xchg
jb
fdivrl
and
and
lret
in
cli
or
add
pop
xchg
mov
mov
fucompp
dec
popf
pop
lods
pushf
jb,pt
popf
push
mov
sbb
inc
pop
outsb
loopne
cmp
pop
insl
mov
es
loope
xchg
cltd
sahf
push
rclb
add
jle
pop
out
mov
decb
pop
fs
mov
lahf
jle
scas
inc
xchg
je
es
xor
xchg
outsb
inc
jg
mov
add
pusha
les
add
adc
rorb
and
mov
add
mov
xor
sahf
xchg
mov
divb
cmp
ja
and
xor
popa
add
or
push
insl
insb
cmp
cmp
mov
dec
stc
inc
andl
cmp
out
or
cld
mov
hlt
jg
call
rcrl
fnstcw
sbb
out
sbb
enter
xchg
and
xchg
shr
mov
popa
dec
xor
ds
xlat
iret
adcb
or
jg
mov
mov
rcrb
cmpsl
inc
fmuls
sarl
adc
repnz
rcrl
cmp
add
lret
sub
aaa
add
ret
cltd
or
inc
sbb
sbb
out
jbe
dec
dec
icebp
or
mov
dec
fidivrl
add
jbe,pt
fcmove
jbe
pop
jmp
ja
clc
not
mov
xchg
mov
rclb
or
lea
dec
sti
es
cs
cmp
jno
jne
xchg
sbb
out
aaa
mov
push
jg
jbe
jbe
and
es
aad
rcrb
pushf
push
imul
ficoms
and
inc
test
je
mov
ja
mov
icebp
mov
mov
mov
loopne
cmc
pop
pop
xchg
inc
sub
dec
nop
push
jecxz
push
mov
sub
dec
mov
mov
jle
mov
imul
pop
mov
cmpsl
xchg
mov
lds
push
in
mov
jbe
cltd
inc
sub
jmp
xchg
daa
test
push
push
inc
iret
or
sti
cmp
push
push
xor
mov
add
lcall
dec
xor
call
xchg
sbbb
push
mov
outsl
sub
out
shll
pop
inc
test
add
pop
mov
icebp
dec
mov
pop
xchg
jo
mov
mov
subb
mov
and
add
xlat
jg
push
je
setno
mov
mov
or
xor
cld
push
or
xlat
cmp
xchg
jb
add
int3
leave
jnp
sbb
ret
mov
dec
inc
jp
icebp
push
inc
data16
fcmovne
lods
pop
and
or
daa
mov
shlb
mov
repz
popf
adc
xorb
cld
cs
enter
les
and
mov
scas
outsl
iret
dec
inc
cmp
mov
push
mov
cmpsl
int
xchg
out
ds
out
adc
lds
out
inc
into
and
movb
mov
cwtl
ret
mov
xor
push
movsb
cmp
adc
int3
mov
je
mov
push
push
or
mov
repz
push
xchg
pop
cmp
add
jle
pop
cmp
popa
jge
lods
shrb
push
lods
scas
cmp
lds
loopne
inc
mov
sub
int3
adc
add
ss
add
sbb
jns
add
test
rorb
dec
dec
out
lret
push
popf
int3
xchg
push
sub
xchg
dec
add
mov
popf
aam
lea
rolb
jl
xor
push
mov
mov
add
cmp
add
loope
push
dec
shrb
push
or
xchg
insl
cmp
add
nop
fs
or
fistpll
mov
shlb
dec
cmp
daa
cld
in
or
push
jp
or
adc
mov
es
pop
xor
insb
push
sbb
and
mov
mov
mov
inc
sub
pop
cmp
or
pop
xor
testb
je
cmp
lret
clc
es
out
leave
add
inc
or
outsb
xchg
sub
arpl
repz
les
cmp
rclb
dec
gs
sbb
inc
repz
int
xchg
mov
adc
dec
es
shrb
mov
mov
push
and
push
dec
lcall
mov
push
shll
jmp
test
cmp
test
test
sub
xchg
and
ret
loopne
enter
xor
mov
in
pusha
pushw
orb
mov
in
lds
pushf
jle
mov
xchg
insb
add
in
leave
xchg
dec
out
sbb
dec
aaa
popa
push
clc
push
in
mov
into
lods
test
iret
or
cmp
lock
insl
ss
jno
cmp
sbb
add
repz
mov
sbb
and
jb
inc
add
adc
arpl
out
addr16
loopne
pop
pop
sub
std
cmpps
scas
insl
inc
imul
xor
sarl
ja
aam
call
push
lods
sbb
xchg
xor
shll
inc
pop
idiv
cwtl
repz
jne
andl
popf
jle
fidivrs
add
jbe
pop
add
xchg
bound
test
nop
mov
mov
jb
lcall
dec
pop
push
cmpsl
sbb
data16
in
inc
outsb
or
mov
pop
and
push
xor
scas
call
stos
les
jne
jbe
loope
sbb
lock
jmp
inc
add
jo
add
std
dec
adc
fs
popf
xchg
mov
gs
and
enter
or
fisttps
icebp
add
shll
xchg
mov
and
fstpt
aas
roll
xor
sub
out
mov
testb
dec
insl
push
jb
push
or
int3
cmp
xchg
sbb
sbb
bound
push
xchg
xchg
jge
jp
sub
pop
lret
jle
ror
xlat
stos
sub
jmp
xchg
push
popa
or
cs
xchg
push
xlat
lods
mov
jecxz
mov
sbb
mov
rolb
inc
pop
fsubl
in
mov
jae
pop
sbb
mov
mov
rorb
adc
push
mov
dec
divb
lret
xor
and
cwtl
loopne
or
in
decb
or
pop
push
or
cmpsl
sbb
jecxz
push
imul
testb
xchg
jb
test
imul
addb
xchg
jns
test
test
sbb
loope
mov
pop
decl
leave
jp
cli
and
mov
cmc
dec
xchg
adc
or
in
inc
add
insl
sbb
xor
rcrb
lods
pop
adc
xlat
cwtl
test
call
ficomps
push
ret
mov
rclb
sahf
orl
rorl
sbb
xlat
ds
lds
inc
pop
adc
mov
lea
or
pop
sahf
cmp
jp
cmp
cmpsb
pop
xchg
sub
lahf
mov
mov
jne
mov
sbb
sti
cwtl
subb
pop
mov
stos
inc
std
mov
js
sub
pop
adc
jb
jecxz
out
jl
dec
fimull
ds
jbe
in
in
das
jmp
std
call
push
push
sarl
dec
dec
cwtl
mov
test
repz
imul
mov
push
ret
mov
stc
and
mov
cmp
mov
clc
lahf
rcll
cwtl
push
loop
enter
pop
xor
outsl
push
inc
jp
mov
sub
mov
sbb
jb
xchg
fwait
jae
pop
add
xchg
or
and
movsl
addb
push
loop
xor
cmc
pop
sbb
outsl
mov
in
sub
call
pop
mov
inc
and
mov
push
mov
xor
test
je
and
pop
es
fs
mov
jle
nop
and
dec
cltd
mov
mov
push
aad
mov
lret
cld
jo
jmp
outsl
into
sub
push
pop
pop
push
xchg
repz
leave
jbe
test
mov
sti
sub
scas
inc
rcr
xchg
enter
subl
mov
cli
add
shl
adc
or
stc
aam
push
gs
addr16
psubq
gs
push
fstl
mov
test
insb
or
dec
fnsave
push
mov
pop
aam
loop
dec
mov
adc
mov
xchg
push
test
mov
out
add
pop
jp
inc
add
adc
sbb
xor
out
mov
lret
sub
or
sub
dec
sbb
out
cwtl
ja
test
mov
lods
xchg
pushf
mov
pop
lret
insb
dec
popa
mov
mov
xor
imul
sbb
fists
or
ret
lock
jge
icebp
push
fsubr
pop
fcomip
mov
lahf
imul
inc
aam
rcrb
pop
xor
pop
dec
sbb
add
psllw
out
add
in
xlat
push
pop
cmp
mov
mov
jb
imul
and
outsb
mov
outsl
cmpsl
jl
fsts
push
push
xchg
add
cmp
aas
sub
ret
test
cmpl
jbe
mov
dec
dec
inc
out
pusha
inc
push
or
pusha
lea
pop
xchg
popf
add
fs
mov
xor
je
inc
pop
and
repnz
sbb
out
fstpt
test
imul
out
mov
clc
jg
pushl
in
mov
sub
inc
out
mov
dec
jb
inc
addb
test
dec
sti
xlat
push
pushf
lret
movsl
push
inc
daa
sub
and
data16
pop
pop
enter
mov
jo
mov
lock
jle
xchg
bswap
sub
pop
loop
in
push
sub
cltd
out
and
ret
out
inc
nop
jmp
mov
mov
dec
rorb
jnp
daa
pop
mov
out
jle
loop
inc
inc
xchg
es
mov
and
xor
and
loope
mov
call
xor
mov
mov
sub
repnz
fsub
adc
roll
aad
fcmove
sbb
add
sub
jb
mov
popa
push
add
and
mov
mov
dec
out
mov
pop
add
or
mov
push
xchg
inc
dec
enter
pop
jp
sbb
mov
jns
in
dec
ss
scas
cmp
cmp
stos
testl
mov
jae
cmp
sbb
pushw
fldt
push
mov
hlt
cmpsb
xor
adc
ret
lcall
ret
jecxz
rcll
fbld
jmp
or
mov
stos
or
jecxz
jle
pop
mov
sbb
jmp
aad
xor
adc
ds
das
mov
push
mov
pop
into
fdivr
out
popl
inc
aad
sbb
push
xor
xrelease
cmp
les
pop
mov
pop
adc
divb
lret
jns
mov
lret
dec
jns
ret
outsl
das
loope
jno
push
dec
pop
movsl
popf
sbb
dec
mov
testb
dec
mov
cmpsl
push
mov
ret
das
mov
mul
adc
inc
push
xchg
xor
mov
jge
decb
dec
in
jg
jnp
jmp
push
cs
mov
and
aad
into
pop
test
pop
pop
scas
push
xchg
ret
ss
js
rorl
sbb
and
inc
xor
lods
sbb
mov
add
jge
imul
dec
or
jo
lret
dec
cmp
shr
inc
insb
pop
ss
fistl
fmulp
loope
clc
sub
ja
mov
xchg
adc
xchg
inc
scas
dec
int
xlat
xor
ss
dec
mov
in
sub
sub
mov
rcrl
fiadds
outsl
mov
xor
test
mov
stos
loopne
popa
mov
xor
arpl
sub
js
cmpsl
js
jp
inc
call
ror
leave
aam
mov
push
loope
add
push
lret
mov
in
jl
sbb
pop
xchg
jb
dec
jp
into
in
in
mov
mov
lea
jne
fs
subb
or
sub
or
dec
fucomi
xchg
jo
push
mov
shll
shrl
cli
pop
mov
or
dec
pushf
push
jae
arpl
push
test
sub
call
mov
cmpsb
int
std
aas
xor
cmpsl
or
jb
movsb
inc
mov
sub
and
mov
loopne
lcall
mov
fadd
cmp
cld
sbb
ja
dec
mov
mov
je
cmpsb
cwtl
mov
push
pop
mov
mov
mov
rorl
ss
push
clc
ljmp
and
in
pop
sub
dec
and
jg
pushf
divl
dec
xor
subb
aad
cs
xor
sbb
les
outsl
inc
xor
adc
mov
xorb
add
lods
fsubrl
xchg
lcall
mov
jo
js
inc
xchg
cmp
out
outsb
ret
cmp
hlt
jl
scas
fstpt
out
arpl
ss
xor
cmp
iret
xchg
bound
jg
xor
inc
mov
js
pushf
lret
stc
push
adc
gs
xchg
jle
ja
dec
dec
lret
jns
adc
fisttps
lods
push
leave
in
inc
xchg
fists
pop
xchg
mov
scas
dec
fistl
xchg
xchg
push
out
shl
push
arpl
sub
push
add
call
dec
out
subb
and
or
fsubs
jle
insl
push
jmp
int3
imul
adc
incb
psubd
loop
outsb
push
out
popf
xchg
xchg
arpl
aas
add
dec
jg
popa
fs
lds
das
push
xor
cmc
pop
aam
add
icebp
mov
jg
xlat
loop
xlat
dec
sub
xlat
sub
dec
hlt
jmp
lea
sti
lods
mov
loopne
ss
jecxz
push
sti
adc
mov
in
fdivrs
lahf
dec
push
and
loope
sub
into
mov
push
rolb
inc
dec
outsl
fnstenv
dec
repz
and
ret
js
stos
mov
inc
cmpsb
adc
xor
out
orb
dec
jp
sub
adc
xor
repz
int3
sub
xor
ret
jno
sbb
or
stc
and
mov
insl
popa
shlb
aad
out
sub
add
mov
or
sbb
jno
mov
mov
insl
sub
xchg
xlat
pop
xlat
aam
sbb
call
pop
ljmp
mov
push
mov
icebp
adc
inc
add
xlat
pop
xor
mov
arpl
test
push
lea
cmp
and
not
aam
or
js
and
into
outsl
lahf
out
out
cld
enter
fistl
push
pop
cli
inc
sbb
cmp
add
lock
fsts
cmp
fnsave
dec
and
and
pushf
xchg
stc
sahf
test
xchg
push
test
outsl
xchg
roll
or
in
ja
lea
pop
call
push
push
sti
pop
movsb
jmp
dec
rcl
jge
xor
dec
mov
jae,pn
xor
sub
sbb
loope
mov
cmp
mov
bound
sbb
hlt
mov
pop
test
aaa
inc
and
push
xchg
push
or
test
and
add
pop
jle
loop
adc
lret
ss
lods
mov
lret
cmc
enter
push
and
aaa
push
pop
xchg
cmp
push
add
out
push
test
xchg
rcrl
in
stc
test
push
inc
popf
jns
pop
dec
mov
xor
xor
out
xchg
out
enter
cld
mov
xchg
cmp
arpl
sub
adc
jecxz
rcll
lmsw
mov
movsb
push
shlb
push
sub
inc
lcall
jnp
mov
cmp
mov
pop
sbb
sub
xchg
arpl
inc
jae
mov
out
ljmp
out
add
jp
cmp
sbb
sbb
repz
ljmp
pop
pop
or
push
scas
xor
pop
aas
push
shl
push
mov
push
xor
jnp
adc
and
lods
or
sub
aas
loope
out
mov
mov
shrl
test
lock
rorl
insb
lock
jb
adc
mov
mov
movsb
mov
ja
test
sahf
loope
arpl
sbb
and
mov
test
mov
inc
jle
aaa
loope
xchg
push
fidivl
adc
jne
pop
arpl
imul
jbe
out
stos
jmp
jnp
loop
and
arpl
xchg
push
cmp
mov
ljmp
and
mov
xlat
xchg
cs
push
mov
sub
in
mov
mov
push
push
insb
xor
mov
into
stos
push
cmpsb
fistl
out
jae
pop
mov
cmp
sbb
or
sub
es
inc
jl
stos
in
test
inc
subb
xchg
cwtl
movsb
fldl
jp
leave
addr16
push
push
lret
and
and
mov
das
fdivp
pop
arpl
inc
xchg
aam
push
cltd
cmp
xlat
outsl
push
fs
add
pushf
cmpsb
dec
push
jbe
filds
pop
out
ret
adc
ja
mov
dec
pop
fsubr
mov
push
dec
lock
mov
cmc
das
push
jp
fmuls
sbb
jmp
jno
cmp
cmp
and
insl
addr16
push
hlt
inc
aas
mov
xchg
pop
addb
xor
cmp
nop
aas
sti
add
test
mov
fsubs
jo
rcrb
ficompl
xchg
lods
sub
shl
imul
in
mov
dec
jecxz
or
mov
mov
pop
lods
dec
jp
jmp
pushf
push
loope,pt
shll
inc
add
cmp
outsb
pop
rcr
pop
xor
adc
cmp
push
bsr
push
popf
repz
jne
mov
out
rcrb
cmp
neg
int
xor
inc
add
xor
cli
sub
pop
nop
icebp
jg
add
loopne
out
inc
add
int3
inc
sarb
inc
or
jge
pop
jp
mov
dec
xchg
stos
popa
and
movsb
je
sub
enter
fxch
sbb
pop
inc
in
add
sub
pop
push
mov
adc
mov
outsb
jnp
cmpb
mov
repz
out
cmp
inc
and
aam
and
aam
fadds
fildl
mov
xor
gs
sbb
sbb
xchg
dec
xor
in
inc
das
and
mov
xor
adcb
jns
cwtl
je
fiadds
nop
imul
jo
lret
xlat
mov
cmp
pop
mov
cmp
and
iret
fwait
xor
fmuls
cmp
lods
lret
cmp
sbb
sub
or
jb
adc
mov
dec
inc
mov
dec
sub
cmp
cwtl
out
std
add
ljmp
subl
mov
iret
js
mov
jg
jl
or
push
bound
icebp
movsl
mov
inc
out
push
sbb
movsl
push
pop
sub
data16
pop
inc
adc
sarl
jmp
mov
daa
ffree
mov
fsubl
sbb
cmc
ljmp
xchg
add
fldenv
jbe
fs
imul
cmpsl
jbe
insb
pushf
jbe
stos
int
inc
sub
cmp
and
push
lock
cmp
call
sub
xchg
jle
cmp
sub
mov
daa
ret
mov
int
xor
mov
scas
mov
icebp
xchg
pop
rclb
popa
dec
insl
addl
jecxz
adc
jne
mov
jns
mov
mov
ret
imul
in
pop
push
enter
mov
or
mov
dec
sbb
jp
pop
ss
insb
mov
mov
inc
cld
ret
in
sub
jnp
add
gs
pop
dec
push
jecxz
sbb
aam
dec
jns
lret
mov
push
pop
aas
stc
or
mov
or
iret
inc
test
xchg
mov
add
or
cld
leave
push
je
ficomps
out
mov
into
shlb
std
add
push
sti
test
iret
sahf
test
lods
or
push
lcall
pop
jg
arpl
in
iret
aad
jecxz
subl
scas
jne
mov
pop
xor
pop
fistpl
mov
sbb
mov
ljmp
out
xor
jl
or
mov
mov
or
movswl
ja
in
cmp
lret
dec
addb
xchg
add
push
gs
or
imul
fstpl
dec
loope
sbb
cs
xor
jmp
and
xor
sbb
sub
movsb
cli
xor
xor
mov
mov
ret
mov
stos
ret
test
dec
or
jns
lret
and
pusha
pop
xchg
push
pop
mov
mov
ljmp
add
pop
repz
data16
cld
jo
cld
jno
jno
inc
jge
mov
out
int3
xor
js
mov
xorb
into
lock
movsb
in
dec
popa
aad
ret
mov
mov
mov
sub
xchg
xchg
pop
mov
sbb
movsl
xchg
ljmp
or
imul
cmc
push
and
jge,pn
dec
fdivrp
sbb
xor
ja
inc
pause
mov
sbb
jmp
lret
filds
fcmovb
dec
cmp
scas
adc
pop
cmpsb
mov
data16
sub
cmp
ss
cs
cmp
add
lea
inc
add
sub
xor
mov
xchg
fistl
lcall
movsb
add
add
add
pop
sub
sbb
gs
xor
ret
cli
test
arpl
test
out
popf
iret
sbb
jae
das
popa
inc
test
fadd
and
mov
sub
loopne
fcom
dec
adc
xchg
std
dec
daa
jb
xor
icebp
push
rcrb
pop
push
icebp
gs
fnstcw
in
lods
stos
dec
sbb
fistpl
sbb
push
out
sbb
mov
repz
or
adc
adc
jbe
inc
out
fisttps
enter
pop
cmpsl
add
push
call
mov
aaa
aad
pusha
mov
daa
sub
fmull
cmp
dec
dec
aas
mov
push
fcompl
dec
and
testl
adc
or
pusha
cld
bound
fmuls
mov
ficompl
pop
scas
jnp
ja
push
dec
jns
std
push
jle
das
adc
cmpsb
or
push
jle
xchg
mov
mov
push
addl
stc
sbb
jno
xor
cmc
shlb
pusha
dec
mov
test
sti
pop
dec
ljmp
jne
cli
mov
lcall
mov
mov
jg
lock
js
scas
dec
ficoml
insl
repz
lods
xchg
cld
push
adc
in
cmp
dec
push
and
xchg
adc
in
aas
dec
inc
rcr
dec
push
gs
mov
repnz
or
mov
stos
in
push
repnz
in
testl
das
xor
sbb
jns
insl
cmc
arpl
jle
jb
cs
sbb
int3
test
sub
jge
adc
adc
bound
cltd
mov
jae
xchg
mov
xchg
xor
mov
adc
fst
jecxz
cmpsb
xor
jmp
adc
movsl
daa
into
xchg
xchg
mov
inc
out
int
sub
inc
mov
dec
jns
jno
es
sub
fcoms
cmp
orl
xor
test
mov
iret
xor
icebp
cs
mov
sub
mov
dec
jle
jmp
sub
outsb
xor
pop
rorb
add
sbb
xor
repz
cmp
or
push
notl
xor
test
lret
mov
add
sbb
jne
sub
lods
lahf
jb
out
aam
rcrl
mov
pop
cld
lock
lods
idiv
adc
inc
sahf
mov
lods
dec
js
addl
add
or
adc
mov
xor
fbstp
and
sahf
and
jnp
inc
shll
test
mov
fwait
push
jge
sbbb
adc
pop
pop
push
mov
and
inc
cmp
jge
out
hlt
dec
add
addl
mov
inc
mov
cmp
push
mov
cld
adc
nop
add
test
mov
adc
xchg
imul
and
mov
fsubs
and
pop
mov
adc
xchg
inc
mov
shrl
jl
inc
jb
jecxz
clc
push
jle
jno
cmp
pop
sarb
or
mov
add
sbb
outsb
sbb
add
push
mov
mov
scas
and
xchg
mov
fidivrs
je
call
mov
and
test
es
sarb
cmpsb
lahf
loope
test
xchg
jno
lds
repz
or
cmp
xchg
jno
leave
mov
fldenv
fidivl
adc
movsb
cwtl
cmp
nop
jne
push
add
adc
sub
nop
jecxz
lods
fbld
sbb
add
adc
jle
fisubrl
push
jle
loope
add
push
imul
sub
inc
add
insb
mov
iret
mov
loope
in
stos
dec
and
mov
adc
dec
dec
loope
add
or
lcall
mov
cmp
push
filds
in
cmp
daa
ljmp
jae
push
dec
adc
iret
repz
jp
mov
cmp
pop
adcl
xchg
notb
subb
mov
mov
mov
push
adc
dec
incl
mov
jmp
adc
or
adc
add
lock
xchg
jge
inc
dec
lods
inc
sub
mov
mov
xor
pop
ret
iret
mov
cmp
lcall
lods
and
mov
adc
test
lcall
pop
test
inc
add
fwait
loopne
test
push
dec
ja
cli
iret
sbb
xchg
lock
repnz
pop
cmc
mov
test
call
and
xchg
inc
add
dec
lldt
scas
dec
inc
pop
cltd
or
fstpt
lock
sbb
inc
xchg
mov
jmp
ret
repnz
xchg
dec
mov
mov
ror
sub
xor
jno
add
rcrb
inc
or
lods
cltd
stc
push
outsl
fisubl
insl
in
repz
jle
cs
adc
test
enter
movb
cmp
js
jle
mov
push
fistl
sub
shrl
fs
fsubp
xor
jecxz
inc
add
dec
das
cmp
xchg
arpl
shll
inc
inc
lds
sub
push
mov
jp
and
repz
cmpsl
push
lock
xchg
int3
aam
inc
and
sub
aam
mov
fcoml
jl
mov
mov
pusha
xchg
pusha
insb
es
in
jmp
sbb
xor
push
jp
mov
cmp
ljmp
aas
or
ret
out
cmp
scas
cmpsl
mov
sub
sahf
sbb
sbb
add
jmp
test
orl
fldt
shl
ss
mov
xchg
mov
pop
dec
adc
enter
dec
add
add
je
cwtl
shrb
add
cmp
and
xor
jge
and
jge
outsl
bound
out
xchg
xlat
sahf
add
test
lods
ds
xchg
dec
loop
out
loopne
pop
loop
fists
std
mov
jecxz
pop
stos
xchg
fistps
mov
dec
mov
lahf
jnp
mov
dec
sbb
xchg
pop
mov
subl
out
in
test
sbb
loopne
xor
outsb
enter
icebp
mov
test
and
cmpsb
test
into
popa
dec
pushf
push
mulb
aad
outsl
and
sub
push
push
sub
or
sbb
jns
mov
and
sarl
fwait
insb
movsb
dec
jb
inc
sbb
push
lods
sub
les
repnz
adc
inc
jg
sahf
sbb
push
cld
mov
pop
inc
aas
pop
js
dec
inc
mov
loop
bound
cld
mov
lea
adc
out
sub
inc
xchg
out
daa
out
push
ret
dec
mov
mov
or
ja
test
jae
adc
lcall
cs
push
rcrb
insb
sub
pusha
test
imull
push
sbb
xchg
mov
push
popa
push
jne
cwtl
shll
xor
es
jb
call
paddusw
sbbl
mov
inc
stc
xchg
addr16
dec
and
jo
mov
leave
inc
pop
inc
mov
mov
xor
pusha
cmp
fisttps
in
cli
cmpl
andb
fwait
sub
sbbb
pop
into
inc
arpl
insl
ss
jmp
xor
js
cs
movsl
ret
push
mov
movsb
imul
add
js
or
testl
push
imul
and
push
xor
jge
cmp
mov
scas
lock
inc
and
xchg
mov
jb
mov
hlt
jmp
int3
or
fs
ss
jp
pushf
outsb
sbb
sbb
outsl
mov
lds
cmc
push
scas
jle
dec
dec
inc
out
or
xchg
repz
fs
lds
mov
mov
lret
jmp
sbb
jnp
dec
sbb
fsubrp
mov
bound
sbbl
inc
daa
and
xchg
int3
xor
cwtl
mov
mov
pop
push
mov
cwtl
dec
push
and
mov
mov
jae
nop
cltd
ret
ror
dec
push
loop,pn
gs
lds
lds
xchg
ss
js
sbb
sbb
sbb
imul
clc
inc
cmpsl
js
adc
xchg
jmp
xchg
push
pusha
sub
inc
jle
das
fisttpl
imul
fwait
imul
fisubl
outsb
daa
je
push
incl
mov
mov
add
cmp
xor
add
and
lret
out
std
in
dec
mov
dec
mov
cmp
loop
xchg
jnp
jmp
cs
int
adc
fdivp
add
lret
cmpsb
xor
xchg
aam
ret
dec
jp
out
gs
xorb
in
inc
leave
xor
sub
icebp
sub
dec
mov
cltd
clc
inc
push
bound
sti
test
test
loopne
dec
or
icebp
addb
sub
shrb
cwtl
cmp
xor
rorl
inc
xlat
movsl
jb,pt
inc
sub
jge
inc
xor
enter
in
mov
xor
scas
lret
dec
sti
jbe
pop
test
sub
pop
repnz
jne
arpl
push
insb
mov
dec
cs
fcomps
mov
clc
test
fwait
mov
out
fisubs
repnz
dec
pop
adc
iret
insb
ja
leave
mov
xchg
push
popa
es
js
loopne
mov
les
out
mov
popf
shrb
imul
addb
and
ret
jns
data16
mov
cmp
or
push
scas
sub
jae
pop
repz
jbe
out
insb
in
stos
out
xchg
jecxz
je
inc
mov
rcll
xchg
pop
mov
jns
or
jne
insl
lret
cmpsl
scas
mov
cltd
mov
xchg
adc
and
or
inc
dec
pop
rorl
pop
call
push
shrb
push
gs
push
mov
xlat
and
imul
in
mov
inc
mov
addl
in
xor
jmp
and
pop
fists
add
add
adc
cltd
mov
mov
scas
das
cmp
ljmp
loopne
mov
mov
push
jp
lret
jnp
ds
fucomi
add
cltd
fimull
push
daa
pop
outsb
loop
ret
aaa
arpl
pop
sbb
push
sbbb
mov
xor
fwait
movsb
lods
push
lahf
sbb
clc
xor
stc
les
dec
mov
or
fcom
fwait
pop
cmp
mov
data16
popf
pusha
fldcw
std
sahf
fwait
addr16
adc
nop
mov
xchg
in
jmp
cli
add
addb
std
add
sbb
jbe
jo
out
pop
cmpsl
lahf
xchg
pop
sub
inc
insl
inc
nop
adc
fstpt
xchg
push
mov
pop
into
inc
dec
sub
leave
xchg
mov
mov
add
dec
enter
jg
cmpsb
loope
test
adc
orl
dec
or
xchg
addr16
add
jge
nop
lods
mov
ret
mov
ss
sahf
push
call
push
push
xorl
jl
adc
flds
cld
dec
push
and
push
xor
out
imul
add
mov
xor
leave
fld
pop
mov
out
movb
jl
test
rdpmc
adc
sub
fadds
inc
aam
push
sub
arpl
cmp
xchg
popa
sub
ja
pop
jge
inc
insb
imul
xchg
cld
lods
pop
pop
jno
sub
sub
test
popa
pop
cmp
out
mov
xchg
add
mov
cmp
pop
ljmp
mov
aam
int3
cwtl
add
out
mov
sub
sub
mov
xor
loop
sahf
jecxz
sbb
and
and
in
stos
mov
andl
dec
or
and
adc
int3
xor
rolb
mov
xchg
loope
mov
dec
dec
sbb
mov
popf
out
fdivl
jmp
mov
inc
push
in
jge
out
das
mov
popa
push
inc
sbb
adc
xchg
dec
mov
xchg
jg
inc
adc
pop
mov
cmp
ja
add
lahf
test
in
jnp
xor
shll
xchg
push
outsb
rcrl
cmp
js
jge
inc
shrl
out
insl
test
and
mov
push
cmp
mov
adc
neg
xchg
jns
rolb
dec
add
and
lds
push
mov
fbld
pop
and
data16
cmpsl
outsb
and
xor
lods
lret
addr16
in
imul
rorl
mov
add
sub
loop
jb
jmp
push
repnz
inc
xchg
sbb
lods
lret
movsl
pop
xor
inc
add
mov
push
push
and
scas
pop
adc
movsb
std
in
cld
sbb
adcl
jmp
pop
pop
imull
mov
sub
or
dec
add
dec
leave
jbe
push
jmp
jl
mov
push
call
mov
mov
mov
push
stc
clc
pop
pusha
orb
or
scas
dec
or
popa
mov
mov
mov
push
test
imul
outsb
lcall
scas
aam
pop
gs
jno
call
data16
in
sub
outsb
or
lahf
out
cs
aas
add
dec
daa
mov
iret
call
xchg
xchg
lret
and
sbb
fisubrs
jns
and
stos
and
pushf
mov
lahf
rcll
jbe
pushf
add
dec
push
imul
outsl
pop
jns
out
outsl
xor
loop
xor
lahf
jmp
das
inc
dec
popf
in
push
xchg
scas
mov
adc
aas
setnp
cld
int
inc
add
mov
lods
push
outsb
mov
and
filds
in
call
std
les
inc
pushw
lret
sarb
mov
ret
lods
lds
add
dec
cmpb
rcrb
xchg
pop
lods
push
ret
arpl
in
sbb
ja
pop
imul
cmp
push
ss
sbb
cld
push
jl
sub
xchg
xchg
int
lea
jnp
pop
push
rcll
int
mov
daa
rcrl
sub
lret
rorl
in
xchg
push
sub
and
xor
dec
adc
outsl
mov
push
cmpsb
or
dec
mov
fistpll
inc
std
pop
mov
in
movsl
add
psadbw
sbb
add
jnp
nop
pop
aad
xchg
aaa
jmp
xchg
lret
pop
sbb
test
loopne
rol
adc
sub
and
push
jge
cmpb
ss
push
xor
insb
stos
inc
ja
pop
sub
das
dec
ret
cmp
movsl
pop
push
xchg
sub
jnp
xor
mov
adc
fildl
fucomip
jl
scas
xor
cmpsl
shrb
scas
mov
xor
daa
xchg
jg
bound
sti
jl
pop
or
inc
ror
jb
sbb
shl
addr16
sbb
sbb
aam
mov
jge
imul
jb
pusha
add
gs
cmp
mov
inc
dec
cmc
jecxz
addb
xor
insl
xchg
push
sbb
cmp
nop
and
ljmp
pop
cmpsl
sbb
add
fwait
notb
xchg
and
gs
xchg
outsl
cmp
mov
popa
stos
loopne
add
adc
push
rorb
push
ljmp
outsb
jne
add
test
mov
lcall
add
cli
sub
movups
add
lock
out
cmc
outsb
fildll
mov
cmp
xor
xor
cmp
xchg
aad
inc
sbb
rolb
cs
std
ret
out
mov
xor
jmp
roll
arpl
push
out
mov
repz
ljmp
sub
in
push
loope
add
sbb
data16
adc
or
cmp
addr16
jle
mov
punpcklwd
int
mov
adc
enter
jmp
popa
test
test
fsubr
aas
lcall
out
pop
or
or
mov
int3
or
add
ret
push
xor
scas
xchg
lcall
sarl
mov
xchg
pushf
out
cmpl
mov
es
int
les
pusha
jmp
inc
das
sub
jne
cmp
call
or
ss
movsb
imulb
mov
cmp
sarb
rolb
fadds
push
sub
lea
and
dec
in
test
lret
pop
dec
adc
jl
push
mov
fcoml
loope
test
pop
xchg
pushf
movsl
xor
jp
mov
sarl
out
roll
shlb
mov
mov
scas
xor
mov
movsl
sub
jp
push
mov
imul
je
inc
outsb
xor
mov
loopne
jb
dec
lods
sbb
adc
hlt
pop
ficoms
aad
sbb
jmp
imul
xor
imul
mov
cmp
jb
scas
fwait
in
sti
sbb
movsb
mov
iret
sar
jnp
popa
test
ja
aaa
cltd
fldcw
je
dec
out
jge
lock
cmp
mov
shlb
xchg
and
inc
xor
dec
pop
jle
test
push
ret
into
out
imul
cs
xor
dec
mov
dec
sarb
xor
ljmp
sub
inc
fildl
xchg
gs
mov
addr16
and
mov
sbb
rol
outsl
mov
cs
mov
in
mov
mov
fistpl
and
sbb
push
fistps
clc
movsb
lret
push
loope
js
leave
sub
pop
fsub
cli
lret
adc
out
add
outsl
adc
lods
adc
xlat
push
mov
cmpl
mov
add
rcll
pop
inc
sbbl
das
xchg
dec
xor
push
popw
repnz
add
cli
int3
test
lea
sbb
test
mov
jb
pop
insl
lret
pop
popa
test
mov
loopne
in
lahf
inc
ret
push
jns
in
push
inc
leave
shl
push
enter
arpl
xchg
fdivrl
dec
mov
sbb
push
call
jmp
adcl
mov
iret
sbbl
lahf
jl
decl
iret
insb
gs
pushl
scas
inc
cmp
pop
sbb
or
push
add
sti
adc
leave
lret
popa
pop
dec
lock
imul
jl
pop
movsb
dec
jg
cltd
inc
das
and
jl
popf
mov
push
repz
out
mov
add
notl
mov
mov
int3
bound
es
pop
sbb
enter
cli
xor
adc
fidivrl
xor
jnp
popa
cmp
arpl
jb
xorb
xchg
push
lock
mov
mov
add
xor
notl
dec
data16
je
or
push
inc
jp
add
nop
add
aaa
fadds
out
mov
das
popf
mov
mov
in
andl
cmp
jmp
into
sti
pusha
addr16
stc
cmp
adc
inc
mov
add
xor
stos
inc
jbe
or
fwait
inc
jge
cs
arpl
into
je
addb
gs
adc
inc
jg
push
out
lds
xor
loopne
xchg
jmp
sub
pusha
xor
fwait
das
jle
dec
daa
inc
cmc
pop
jbe
and
fisttpl
jle
bound
jno
sub
dec
cmpsb
cmp
or
xchg
mov
lret
and
ja
cmp
add
dec
mov
sbb
mov
xor
fcmovu
or
arpl
sbb
inc
out
jbe
pop
pop
popf
rclb
notb
push
fidivrl
adc
out
shlb
fisubl
fimull
mov
push
jns
movsb
dec
ljmp
add
pop
dec
call
cs
sub
cmpsb
add
pushf
les
add
dec
into
cmpsb
sub
dec
sub
sub
mov
xor
xor
test
xor
mov
popa
test
scas
sbb
and
mov
int
xor
push
movsb
push
popa
push
push
push
and
or
sar
nop
iret
push
mov
jg
leave
jmp
and
or
cmp
jne
mov
jae
bound
jo
mov
ret
movsb
push
or
test
dec
jnp
xchg
mov
jbe
jl
push
rorb
in
mov
pop
test
lcall
js
mov
sbb
movsb
orb
jbe
pushf
sub
xor
or
and
pop
mov
mov
inc
mov
cmp
push
movsb
jl
outsl
mov
clc
pop
ficomps
enter
iret
test
lods
adc
rolb
dec
mov
mov
sbb
add
loopne
mov
xor
pusha
dec
mov
enter
mov
test
sub
sub
mov
ds
mov
xchg
sarb
sbb
cmpsl
dec
fdivs
xor
jmp
test
fsubs
mov
mov
and
lahf
or
dec
push
and
scas
mov
xor
and
push
jg
test
in
add
cmp
or
cwtl
stc
xor
pop
ror
dec
lahf
cmc
fnsave
test
add
aad
xor
mov
sub
mov
pop
pop
cmp
cltd
mov
mov
push
xchg
mov
jp
push
out
dec
push
ret
addb
adc
xchg
mov
mov
std
push
mov
mov
push
sti
bound
mov
insl
popw
out
ret
sub
jle
ljmp
lret
xchg
xchg
adc
mov
call
ja
fistps
in
adc
pop
add
pop
sub
xor
adc
pop
sub
adc
adc
push
xchg
lods
inc
add
sbb
pusha
pushf
jne
sub
mov
sub
adc
push
sbb
mov
mov
and
mov
push
pop
xchg
dec
in
push
mov
mov
or
mov
imul
test
or
cli
sub
push
hlt
or
stos
mulb
dec
inc
clc
or
dec
or
dec
sbb
lods
daa
dec
mov
les
es
dec
aad
scas
mov
and
dec
mov
rol
pop
stos
or
loopne
out
sub
cmp
sub
or
decl
aam
mov
jmp
ret
negb
pushf
xchg
push
lret
out
mov
inc
in
xchg
subb
jg
cmp
sub
inc
pusha
and
cmpsb
jbe
cmpsb
jnp
xor
insb
sbb
cli
pop
cmp
xchg
xchg
insb
mov
ret
scas
flds
pop
repz
add
clc
stc
pusha
cmp
xor
adc
loopne
adc
loop
lahf
xor
mov
dec
clc
jo
add
ret
mov
aad
movsl
jns
mov
movsb
out
xchg
pop
inc
or
lds
pop
mov
scas
jns,pt
clc
aas
movsl
sbb
cmp
mov
sti
jle
pop
test
dec
cmp
push
mov
sbbb
movsl
loopne
imul
xchg
clc
lds
or
mov
int
out
adcl
enter
jp
xchg
dec
or
push
lds
push
lods
mov
inc
push
mov
adc
xor
add
jmp
sbb
and
std
xor
mov
les
repnz
pop
int
rorl
icebp
into
pcmpgtw
ret
mov
mov
dec
insl
stc
aad
add
jno
jno
into
data16
bnd
mov
shlb
push
or
hlt
fisubrs
jmp
pop
xchg
js
lret
jl
mov
jns
in
cmp
ds
pop
in
mov
xlat
fisttpll
xchg
fdivrs
push
ror
jg
dec
dec
sub
call
push
xor
mov
shld
mov
out
daa
sub
add
outsb
inc
sub
out
sbb
popf
testl
jl
sub
or
mov
and
fdivr
cmp
fcompl
or
fnstenv
lea
mov
pop
imul
loopne
mov
outsl
mov
jne
out
fcom
push
xchg
cmp
push
call
das
int3
sub
in
pop
sbb
es
dec
inc
dec
mov
lret
lahf
test
mov
inc
pop
daa
stos
sbb
out
bound
mov
int3
loopne
cmc
jae
arpl
xchg
xor
mov
jb
mov
xchg
pop
mov
inc
mov
xor
shlb
adc
mov
sbb
std
rol
xor
sub
fisttpll
dec
jmp
loop
arpl
enter
mov
hlt
out
leave
xlat
push
xchg
pop
ss
xor
xor
in
and
jb
sub
cmp
cmpsl
popf
jl
add
cld
adcb
je
pop
xchg
pop
hlt
jns
inc
push
ja
push
imul
sbb
xor
outsl
orl
out
sub
sbb
and
stos
or
and
push
insl
cmpsb
sub
jne
push
jecxz
xchg
imul
push
movsl
das
stos
push
inc
arpl
addr16
jmp
aaa
cmp
and
jge
add
fs
je
mov
mov
mov
cmpsl
iret
test
xchg
dec
rolb
addr16
sbb
cmp
mulb
mov
aad
movsl
push
sub
push
movsb
push
shrb
sbb
add
cmp
sub
sub
and
in
xchg
repnz
cmpl
jnp
mov
sub
cwtl
cmc
dec
xor
arpl
mov
mov
inc
inc
out
aaa
add
pushf
je
cmc
xchg
clc
in
xlat
lret
pcmpeqw
mov
rolb
lcall
inc
jp
xchg
fldcw
stc
fcoms
cmp
cmp
inc
jne
mov
fsubs
or
jb
leave
movsb
lahf
mov
movd
sti
orb
fcoms
rorl
mov
cmpsl
cwtl
filds
mov
push
sbb
or
jecxz
pop
jne
das
daa
in
pop
shll
out
aas
ret
dec
mov
iret
ret
repnz
inc
pop
jle
dec
push
sarl
ss
xor
xor
int3
adc
aam
inc
and
aas
mov
xchg
in
mov
and
jge
testl
in
mov
mov
mov
jmp
or
xchg
pushf
and
pushf
sub
pop
mov
pcmpeqd
push
sbb
add
xorb
fiadds
xchg
pusha
lea
fxch
inc
andb
sbb
insb
jmp
pop
pop
iret
notb
cmpsb
cmpsb
shrb
outsl
adc
aas
and
fbstp
shlb
icebp
or
push
das
fists
mov
lea
adc
jns
fucomp
sbb
pop
pop
mov
popa
inc
test
stc
mov
sub
cmp
lock
stos
mov
mov
out
into
xchg
mov
stos
mov
push
es
ficoms
jnp
and
push
lock
insb
sarb
and
iret
adc
dec
fcmovbe
add
loope
pop
push
jecxz
aad
add
clc
cmp
xchg
rorb
popa
push
fwait
lahf
cmovle
cmp
addr16
outsl
jmp
test
sub
xlat
repz
push
xchg
divb
cmp
dec
sbb
sbbl
popf
outsl
outsb
lcall
mov
jecxz
out
cli
adc
test
mov
cmpsl
fisttps
popf
add
std
es
mov
arpl
sbb
mov
inc
add
stos
push
xchg
cli
adc
sub
sti
push
pusha
sub
sbb
or
enter
pop
popf
stos
sub
pop
shrl
mov
pop
test
cmc
add
mov
and
aaa
fcomps
loopne
imull
and
or
push
adc
push
add
mov
and
pop
adc
icebp
stos
pop
pop
nop
mov
jbe
aam
fbstp
push
dec
mov
adc
sahf
cwtl
mov
pop
pop
jae
push
addr16
jnp
mov
cmp
cwtl
and
sahf
into
iret
outsb
cmpsl
pushf
push
jle
call
mov
pop
addr16
mov
testb
mov
jmp
clc
int3
pop
stc
dec
jge
dec
cli
notl
popf
in
sub
add
rorb
mov
pop
cltd
cmpl
icebp
mov
push
mov
push
push
pop
mov
jle
sti
sub
cmp
cld
in
or
leave
lret
cltd
xor
fucom
outsb
test
dec
in
js
lcall
fildll
mov
faddl
xor
pop
nop
sbb
jg
push
loope
iret
and
push
xchg
pop
add
mov
mov
push
adc
xchg
clc
lea
inc
faddl
scas
outsl
fwait
sub
das
xchg
sbb
xorb
scas
xchg
jp
fidivrs
int3
mov
add
pop
sbb
aas
cmc
sbb
in
xlat
mov
out
adc
imul
movsl
scas
fcomi
inc
pop
dec
jg
jecxz
inc
mov
test
lods
mov
fwait
out
ljmp
inc
loopne
add
push
mov
pop
hlt
aas
scas
inc
rcrl
adc
push
xor
pop
mov
push
das
mov
jo
add
aaa
les
icebp
fwait
aaa
gs
test
or
sub
xchg
stos
inc
outsb
ds
test
aad
repz
aaa
imul
sbbl
mov
cli
sub
lahf
loopne
mov
fisubl
das
testl
pop
rorb
and
push
xchg
or
icebp
daa
andl
push
data16
daa
mov
addr16
pop
addr16
mov
ficomps
pop
ret
lock
mov
das
rolb
mov
testb
divb
mov
incb
fs
lds
aad
dec
inc
lcall
push
xchg
adc
jno
or
das
push
cmp
std
push
cmp
mov
jns
or
pushf
cmp
dec
xchg
mov
jge
popa
loop
mov
iret
lods
jecxz
je
push
shr
sub
jmp
jge,pt
sbb
jbe
imul
rcrl
xor
xchg
jecxz
ss
imul
cmp
clc
mov
fwait
push
mov
clc
add
outsl
mov
lcall
dec
xchg
jge
hlt
push
scas
push
cltd
lods
pop
fsubs
add
jo
fidivl
jle
dec
ss
rorl
jo
mov
into
push
mov
fcompl
adc
adc
and
ret
outsb
or
mul
add
add
xchg
dec
arpl
push
jmp
inc
sbb
rcr
and
sbb
mov
loopne
jae
movsb
xor
ficompl
mov
fsts
cld
push
xchg
fisttpll
call
test
test
aaa
adc
gs
jge
loope
fcoml
aam
int
dec
pop
filds
cwtl
rcrb
ljmp
repz
jmp
ds
lock
adc
add
outsb
sbb
pop
fnstcw
in
mov
imul
scas
stc
ljmp
jg
xchg
sbb
mov
pushf
xor
xlat
or
push
fs
mov
icebp
jne
pusha
push
pop
imul
xor
pop
and
aas
pop
xor
pop
sbb
xchg
stos
test
stos
das
loop
add
xchg
pusha
out
lret
push
sub
icebp
jno
fst
ret
outsb
cmp
mov
adc
ljmp
mov
xchg
das
push
outsb
xchg
cmp
xor
mov
fnstsw
sbb
and
pop
sbb
lds
inc
push
cwtl
rcrl
mov
scas
ss
jno
cmp
cmpsl
movsl
and
xchg
rorl
stos
mov
fiadds
xor
test
test
jo
std
test
mov
adc
inc
inc
sbb
sbb
inc
mov
imul
inc
pop
int3
daa
lret
fdivs
dec
adc
cmp
in
icebp
bswap
adcb
xchg
mov
rclb
sub
addr16
push
jne
sub
cltd
cld
out
push
sahf
adc
lret
fcoml
jle
in
xchg
fisubrs
mov
push
xchg
cld
xchg
test
outsl
mov
push
aam
movsb
test
repnz
shll
leave
ljmp
dec
push
mov
pop
fs
movsb
jae
sar
mov
or
push
dec
imul
enter
faddl
lcall
iret
pop
xor
addb
cltd
add
pop
mov
mov
testb
dec
mov
dec
popa
ret
dec
pop
sbb
test
imul
mov
lds
fs
jnp
shrb
cld
fimull
push
fiadds
arpl
movsb
push
js
cli
pop
pop
lcall
mov
fadds
ficoml
out
add
cmp
test
and
adc
test
lahf
sbb
shlb
jae
jp
dec
push
or
mov
jns
dec
sbb
sub
inc
sub
dec
outsb
cmpsb
xor
sbb
aad
test
xchg
adc
mov
call
out
test
xchg
por
out
mov
nop
cmp
ret
lock
or
loope
pop
sti
mov
rclb
insl
imul
lock
fstps
int3
ret
mov
and
xchg
mov
sbb
or
push
rcl
xor
std
inc
cwtl
repz
adc
pusha
shrl
adc
push
pop
and
pop
mov
pop
push
adc
jne
iret
jle
push
xlat
xchg
aas
hlt
int
inc
mov
mov
xchg
popa
dec
sub
mov
lods
fidivrl
pop
xor
xor
stc
mov
add
rorb
cs
dec
inc
out
jmpw
push
mov
mov
loope
push
add
jbe
movsl
xchg
popf
sbb
jne
mov
dec
xchg
xor
add
ljmp
pop
sub
inc
aaa
scas
cmp
cmp
or
lahf
sahf
mov
inc
mov
add
jge,pt
mov
jge
push
mov
hlt
push
and
in
cltd
xchg
out
dec
in
push
mov
loopne
iret
push
adc
stos
test
or
jle
bound
leave
ret
test
mov
and
lock
fwait
mov
std
rorb
pop
or
cmp
repnz
cmp
mov
int
pusha
pop
rolb
das
test
movsb
xchg
pop
in
mov
and
loopne
ret
jno
sub
out
adc
pusha
jo
jecxz
pop
pusha
mov
adc
or
lret
lahf
xchg
or
push
cmp
xor
jns
cmp
ja
mov
mov
inc
sti
stc
gs
loopne
lret
sbb
test
jl
and
mov
xchg
es
sahf
mov
fsubs
imul
movsl
aas
mov
les
pop
ja
lds
dec
aad
lds
xor
adc
and
adc
or
std
sub
js
and
xchg
sub
pop
xchg
adc
cmp
add
stc
insb
in
aas
scas
bsr
pushf
or
nop
aad
and
mov
cmp
arpl
js
add
adc
pop
lahf
push
lcall
sbb
scas
mov
inc
enter
popl
cmp
lock
mov
shr
in
add
cmpsb
adc
xchg
fs
xor
fcmovnb
rolb
dec
xchg
sub
jp
shlb
out
icebp
pop
loop
xchg
outsb
sbb
xchg
mov
dec
jb
in
sub
adc
out
in
mov
sbb
in
sub
and
xor
and
mov
fistpll
jns
subl
lahf
fbld
cmc
xor
or
negl
mov
xchg
ss
jge
leave
or
sub
ds
sbb
loope
push
mov
jl
inc
dec
xchg
lods
xor
or
sub
ficompl
push
rclb
cwtl
xor
iret
psraw
js
shl
lret
or
push
fwait
cmp
scas
or
inc
adc
iret
cmp
inc
scas
andb
push
aam
mov
inc
push
inc
mov
sub
stos
adcb
mov
add
ljmp
ds
adc
jmp
adc
inc
cmp
cmpsl
or
js
repz
sbb
mov
leave
repnz
movsb
cltd
or
fistps
fs
xor
push
or
cwtl
ljmp
inc
mov
xchg
jmp
mov
sahf
mov
push
sti
push
xchg
adc
mov
stos
sub
dec
sub
hlt
daa
in
pop
inc
lds
gs
ds
adc
inc
mov
jge
stos
fnstcw
jb
sti
and
nop
push
and
sbb
ret
test
enter
call
xor
push
pop
or
pop
rcr
movsl
cld
mov
movsb
ffreep
out
movsl
or
rcll
fcomip
add
imul
inc
push
mov
lahf
aad
enterw
or
dec
insl
stos
popa
pop
cmp
add
dec
lret
xor
loop
lods
sbb
rolb
cmp
push
xlat
dec
enter
lods
test
adc
out
cli
dec
or
inc
sbb
clc
mov
mov
popf
lods
xorb
or
add
pop
ja
rcr
jb
lods
and
std
push
mov
mov
rcll
or
adc
fnstenv
flds
sbb
cmpsb
push
and
jge
fiadds
loop
jbe
gs
or
out
xor
inc
xchg
mov
push
mov
andl
xor
dec
insb
adc
jnp
je
or
ret
xchg
mov
repnz
lods
adc
fs
or
mov
idivb
add
or
inc
adc
jp
aad
fcompl
push
dec
push
xchg
push
jge
mov
inc
clc
out
sub
and
out
pop
sbb
pusha
jae
pop
sbb
fiadds
cs
call
adc
sbb
movsl
mov
lds
sub
jecxz,pt
ret
loop
pusha
in
fidivs
add
fisubrl
les
cmpxchg
jmp
cmp
stc
or
inc
shrl
in
outsb
add
in
inc
outsl
leave
insl
dec
cmp
pushf
sub
je
loopne
sub
mov
xor
xor
das
imul
divl
cwtl
fucompp
addb
xchg
insl
jg
insb
sub
adc
sbb
ret
lods
test
push
mov
cmp
pop
lahf
inc
cmp
in
pop
das
std
dec
add
push
je
movsl
xor
imul
mov
lret
jb
xchg
repz
xchg
mov
loopne
mov
cmp
pop
or
fs
and
mov
dec
push
mov
push
jecxz
imulb
xchg
stos
push
sbb
sub
ret
test
pop
xchg
pop
xchg
jg
jne
imul
into
je
jae
cmp
sub
cmp
cmp
push
dec
pop
mov
fisubs
adcl
jb
sti
lahf
mov
push
pop
adc
push
pop
dec
test
mov
ret
jae
mov
mov
mul
fsub
cltd
jb
fldenv
inc
imul
mov
adcb
lahf
in
mov
mov
es
jne
add
lgs
fs
xchg
fadds
lock
pusha
push
mov
pop
pop
push
mov
mov
inc
jnp
mov
dec
mov
outsb
mov
mov
ret
mov
enter
pop
push
jns
jns
repz
enter
sar
leave
out
sub
lret
ljmp
add
sub
fnstsw
sub
sbbl
andb
push
mov
jne
push
push
inc
xor
dec
mov
dec
adcb
mov
jp
inc
pop
test
inc
movsl
jecxz
xchg
push
xor
scas
cmp
mov
inc
test
cmpsl
lock
mov
in
iret
sub
jle
inc
and
jmp
adc
outsb
sbb
xor
arpl
mov
pop
divl
in
lret
inc
xor
ljmp
cmpsl
test
ficoml
xlat
push
fistl
or
outsl
clc
push
addr16
mov
lea
cmpsl
and
or
jne
jnp
out
shlb
ss
ja
dec
mov
inc
pop
mov
faddl
cmpsl
inc
mov
repnz
shll
les
scas
add
subb
adc
sti
jl
insb
repnz
inc
add
dec
cmp
shrl
arpl
sub
jmp
aam
arpl
orl
fld
push
cmp
outsb
push
xchg
push
insl
test
mov
call
inc
pop
pop
cmp
xchg
aam
cltd
add
pop
std
cld
rolb
jns
test
xchg
loop
inc
jecxz
mov
ds
pop
fisubrs
adc
inc
jg
dec
rcrl
in
xor
or
hlt
pop
lcall
dec
loop
cltd
popf
and
fstpl
mov
xor
mov
adc
push
sbb
cmp
decl
mov
mov
xchg
cli
pop
pop
loopne
mov
mov
ds
xchg
lahf
sub
pop
inc
mov
sbb
adc
mov
mov
pusha
movsl
add
xchg
fsub
in
dec
arpl
scas
push
pushf
xchg
dec
jo
add
xchg
mov
lds
into
or
jg
sub
daa
movsl
pop
arpl
add
mov
mov
jb
je
pop
jne
add
and
pusha
and
adcl
sub
or
jmp
and
and
mov
je
jl
pop
adc
xchg
pop
pop
jns
movsb
jmp
into
test
roll
stos
mov
mov
jbe
add
xor
jo
in
mov
inc
imul
push
das
jp
dec
daa
ss
pcmpgtb
cmp
add
xchg
fsubl
cmp
lock
or
jno
mov
mov
mov
out
movsl
fildl
outsb
bound
sbb
test
rcl
mov
add
add
insl
rdpmc
and
push
loope
ud2
fidivrl
ret
adc
jo
push
push
pop
push
push
mov
jl
jb
imull
xchg
pop
jnp
and
lock
mov
sbb
add
sub
call
pop
jle
pusha
adc
xor
xchg
lcall
sbb
repz
adcb
dec
shr
adc
sub
sub
dec
pop
idivl
jp
add
mov
xor
ljmp
xor
repnz
xor
loop
into
sahf
mov
mov
sub
decl
xor
xor
pop
dec
jns
aad
popa
pop
retw
sub
dec
imul
fcmovbe
test
lods
hlt
loope
xor
pop
mov
cmpb
mov
out
insb
lods
repz
int3
xchg
inc
sbb
pushf
movsb
cmpsl
mov
in
idiv
inc
popa
inc
mov
add
std
add
pop
imul
dec
out
test
shll
sbb
jb
aam
outsl
xchg
roll
or
push
sbb
je
out
dec
jbe
sub
in
lods
push
std
xor
lock
adc
subl
sbb
cltd
cli
orl
jbe
outsb
rorl
lock
add
out
scas
cmp
mov
dec
sahf
cmp
jno
inc
and
fs
lahf
movsb
xor
sub
cmc
gs
jl
rcrl
adc
mov
mov
mov
jnp
sub
insb
loope
adcb
pushf
dec
sub
jns
out
cmp
in
and
add
clc
pushf
fadds
or
sti
shlb
imul
sub
outsl
xchg
inc
and
adc
bnd
fcmovb
cld
fsubl
sti
pop
mov
xor
sub
testb
aas
in
fldcw
sti
inc
push
ja
and
or
aaa
dec
imul
lahf
movsb
std
in
loop
shlb
scas
in
cs
dec
inc
loope
cmp
cwtl
insb
loopne
mov
aam
ror
std
xchg
lahf
or
xor
psrlw
das
jns
mov
in
and
jge
gs
in
push
ret
or
add
fmulp
mov
cld
xor
sub
jg
jg
loopne
stc
sahf
lds
jno
mov
or
int3
sarl
jmp
inc
cmp
pusha
mov
aam
xchg
push
jbe
push
cli
inc
ror
imul
xchg
dec
cli
xchg
mov
mov
js
out
jmp
pop
popa
sub
xor
push
pop
daa
mulb
out
dec
cmp
add
ja
xor
jae
sub
inc
xlat
mov
adc
sahf
mov
andl
int
cmp
pop
add
fcomi
mov
gs
loopne
or
inc
outsl
inc
vpermil2pd
xchg
mov
orb
stc
xchg
or
sbb
pop
mov
pop
cmp
mov
daa
repnz
mov
adc
arpl
pop
pushf
fistpll
aam
push
in
fnstcw
mov
mov
sbb
add
dec
shrl
inc
push
jb
xchg
pop
mov
dec
lahf
rcr
push
in
adc
push
sbb
inc
dec
adc
popf
gs
loop
jmp
or
jmp
popa
cli
insl
sub
and
imul
loope
movsb
adc
aas
rcrl
jp
test
push
sub
xchg
jl
inc
nop
les
lods
aas
aaa
bound
flds
dec
jb
adc
lret
cld
push
into
rorb
jp
sbb
cwtl
out
dec
orb
movsl
jmp
movsl
jmp
lret
les
negb
jae
push
idiv
push
dec
test
ror
xchg
int3
mov
mov
sbb
push
mov
push
in
ret
daa
cli
orb
push
inc
xlat
jecxz
sbb
mov
add
inc
jle
icebp
fiadds
test
in
andl
fistps
dec
mov
add
imul
mov
fdivrs
les
add
dec
out
mov
or
in
jne
jle
push
mov
das
mov
mov
and
repnz
add
sub
into
and
rcrb
dec
idivl
dec
pop
cmp
stc
loope
mov
push
push
aam
lret
sub
pop
pop
rcrl
leave
insb
adcl
stos
mov
gs
or
sub
inc
inc
push
in
out
fmuls
shl
stos
in
or
and
push
sub
jne
sbb
or
jmp
pop
adc
adc
leave
cld
popa
test
adc
fsts
jle
push
mov
sub
movsl
shrl
lds
push
xchg
add
xchg
xchg
xchg
mov
loope
icebp
mov
or
push
lock
adc
push
push
fdivrs
orl
jo
fwait
pop
dec
imul
pop
pop
xor
fldt
xchg
jmp
mov
push
xchg
xchg
pop
fsubp
lock
cwtl
add
cwtl
movsb
inc
mov
ds
push
cltd
dec
add
in
pop
imul
jo
xchg
push
jbe
xchg
data16
sub
fnsave
mov
sti
sbb
add
fnstsw
mov
add
dec
test
fs
scas
xchg
dec
cmp
pop
pop
push
inc
xor
inc
outsl
gs
je
jno
ds
sub
lret
pushf
cmp
lods
call
fld
fisubrl
dec
mov
inc
addr16
lret
fildl
jg
aad
mov
stos
jg
jnp
cltd
pushf
pop
cltd
pusha
adc
pop
sub
push
stos
call
push
jge
jmp
aam
divl
mov
pop
add
xchg
out
leave
insb
loop
out
xchg
fcompl
repz
leave
push
out
push
inc
out
rclb
lods
mov
ret
ret
jbe
pusha
mov
or
sub
xor
dec
mov
push
fs
or
mov
push
out
test
mov
aam
inc
inc
adc
loopne
and
mov
lret
inc
adc
pop
pop
jnp
gs
cmc
clc
mov
loope
mov
pop
stos
popf
jp
dec
cmpsb
ljmp
xchg
je
or
sbb
mov
lahf
jg
and
iret
adc
pop
sti
stos
addr16
or
andl
sbb
ret
mov
dec
cmp
in
or
ds
push
lret
pop
sahf
clc
jge
ffree
add
pop
cmp
cmpsl
aaa
or
ljmp
cmp
cmp
cmp
jns
xchg
or
in
insb
adc
dec
sub
jae
dec
jae
icebp
arpl
jp
cli
dec
iret
xchg
xchg
std
pop
mov
mov
mov
add
mov
xor
loopne
popa
fisubrs
pop
out
gs
sbb
mov
test
dec
pop
push
push
xchg
cs
jae
mov
xchg
int3
xchg
jmp
push
lahf
std
lret
daa
jo
jp
xchg
cld
orl
clc
scas
jmp
popl
mov
lds
pop
sbb
adc
cmp
int3
in
mov
js
mov
jle
leave
sub
xchg
mov
cmp
movsb
mov
in
mov
outsb
mov
sub
cs
cmp
subl
int
xchg
daa
das
push
cli
pusha
into
std
and
hlt
idivb
aam
je
sbb
lods
add
jb
or
jmp
mov
add
adc
sub
nop
jmp
test
mov
xchg
ljmp
lcall
scas
insb
push
push
test
fwait
mov
popa
dec
popa
inc
addl
fimull
inc
icebp
cmpb
scas
lcall
mov
and
add
sub
xchg
ds
aam
sahf
sub
add
aam
pop
neg
sar
sbb
cmp
inc
fiadds
cli
add
mov
inc
sti
aaa
pop
cmp
mov
jle
nop
out
inc
shlb
add
pop
in
hlt
push
daa
sahf
xor
in
pop
mov
lods
ss
and
xchg
arpl
pop
push
sub
mov
ds
sub
mov
shl
and
and
out
dec
scas
inc
jmp
das
lds
push
jmp
mov
inc
out
rcrw
xchg
pop
dec
callw
aas
shll
repz
repz
and
sti
pop
enter
mov
and
dec
mov
iret
inc
pop
xor
movsb
fwait
incl
int
pop
ss
xor
cmp
imul
das
xchg
push
in
sub
mov
fistps
fwait
outsl
mov
addl
push
xchg
rcl
push
mov
adc
frstor
addl
nop
mov
stos
lret
xor
pusha
negl
out
icebp
cmp
add
out
and
xchg
sub
pop
lret
call
jbe
shll
sbb
out
filds
mov
xor
sbb
dec
inc
outsb
pop
andl
xchg
jle
les
inc
push
call
jle
out
sbb
inc
inc
lcall
ss
xchg
add
clc
adc
sbb
inc
sti
mov
mov
pop
movsb
inc
mov
stc
leave
stos
jmp
loop
mov
fistl
lds
subb
jns
pop
stos
inc
sbb
adc
jno
movsb
mov
dec
daa
outsb
xchg
pop
sub
fs
sbb
mov
ret
sbb
cs
fwait
sub
mov
adc
sbb
add
imul
inc
out
out
std
adc
sub
xchg
xor
pusha
inc
mov
lret
in
in
fisubl
mov
adc
push
xor
int3
pop
cmpsb
fldcw
and
add
adc
mov
rcrb
pop
add
inc
push
add
ret
rcrb
test
add
loop
cmp
cmp
in
add
inc
cltd
das
imul
leave
rorl
mov
leave
int
stc
popf
fcmove
mov
lods
clc
inc
xor
push
cwtl
jg
movsb
mov
adc
into
xchg
in
dec
sub
repz
movsl
xchg
mov
cmp
mov
stos
mov
shl
cwtl
stc
aaa
pop
add
push
mov
es
pop
repz
int
pop
jnp
rorl
test
lods
notb
cli
pop
sub
push
sbb
pushf
sub
rclb
xchg
stos
jns
in
subl
fwait
dec
lock
loope
into
xor
ret
xor
js
xchg
pop
jl
push
cwtl
cmpsl
push
jecxz
rcrb
add
idivb
xor
mov
mov
fcompl
mov
add
mov
fwait
in
pop
or
cmp
clc
inc
xchg
and
xchg
sub
cmp
xor
call
int3
or
dec
mov
pushf
scas
mov
push
sahf
pop
hlt
mov
addb
cmp
push
jne
popa
loopne
insb
pop
mov
js
mov
iret
aad
fistps
out
out
add
mov
jmp
fcoms
stos
push
loopne
idivb
adc
lret
leave
inc
dec
ljmp
in
ficomps
and
inc
decb
add
push
jne
orb
adc
add
scas
inc
arpl
sbb
dec
mov
popf
pop
sarl
jecxz
rorl
int3
mov
roll
scas
rorl
adc
mov
jo
add
mov
xchg
jle
jmp
loope
inc
push
bound
loopne
ret
je
mov
mov
mov
mov
cld
xor
out
add
and
sub
dec
out
cld
push
call
cld
lret
aam
push
data16
mov
jb
int3
lcall
fisttpll
jae
xchg
fistl
sahf
ret
test
pop
sbb
cmp
or
push
fidivrl
bound
idivb
test
xor
cmp
in
lret
and
push
in
in
mov
push
mov
push
mov
xlat
lahf
outsl
push
jge
addb
dec
jle
inc
mov
xchg
push
in
adc
sbb
leave
mov
sub
inc
rcrl
jno
inc
inc
inc
push
shlb
iret
rclb
cmc
add
cltd
in
stos
rclb
adc
inc
mov
inc
jle
xchg
adc
jns
sbb
hlt
call
cmp
cmpsl
cwtl
add
jmp
mov
xchg
xor
mov
lahf
and
pop
inc
dec
mov
push
lret
jecxz
outsb
xchg
shrl
into
inc
and
out
dec
and
sub
push
and
aam
sub
loop
iret
mov
sbb
jns
repz
mov
dec
ja
out
roll
add
inc
addr16
dec
xchg
ficoms
push
mov
imul
mov
outsl
sbb
jmp
adc
jo
xchg
fs
lahf
jo
jbe
and
xchg
xchg
int
cmp
cltd
or
jno
dec
sub
frstor
pusha
push
jns
add
mov
mov
out
sub
mov
inc
xor
loope
stos
inc
mov
stc
out
cmc
lea
push
xchg
add
mov
cmp
cwtl
mov
movsl
jno
mov
sbb
sub
and
pop
adc
mov
mov
popf
add
push
sub
out
loopne
jo
idivb
insb
ret
jno
mov
mov
push
xchg
cmp
scas
insb
inc
jb
int3
jno
dec
lret
add
add
sbb
fdivrs
mov
cltd
fsubrs
lahf
fs
and
mov
call
mov
inc
dec
popa
add
jle
out
andl
insb
jp
shrl
push
aam
or
push
test
fimull
xchg
arpl
jbe
jle
add
ror
pop
lock
mov
fsubrl
mov
data16
add
xchg
and
js
xor
cmc
jnp
sub
adc
add
inc
sbb
scas
lea
rcl
ud2
pushw
ja
push
stc
outsl
shll
cmp
inc
mov
pop
imul
pushf
sahf
sub
mov
lea
xor
test
movsl
loop
cmp
dec
fdivl
push
mov
sbb
in
push
sub
imul
out
cmp
out
aad
adc
mov
daa
clc
pop
jb
loope
xor
xchg
adc
pop
jno
imul
ret
lods
mov
pushl
xor
shl
add
mov
insl
and
imull
rorb
imul
pusha
adc
sub
rorl
daa
in
xchg
and
push
dec
xlat
cwtl
mov
pushf
jg
out
mull
adc
adc
sbb
aaa
jp
jns
sti
stos
xchg
in
in
push
adc
fwait
int
stc
movsb
clc
cwtl
popf
pop
inc
fs
and
mov
ja
leave
test
cmpl
cmp
aas
inc
xchg
aad
add
mov
and
cmpsl
push
adc
sarb
nop
bound
sbb
shrl
imul
iret
xchg
inc
adc
in
cli
xchg
cli
pop
or
xchg
loop
movsl
dec
push
adc
add
cmp
div
push
lock
ljmp
inc
mov
dec
jno
sahf
cmp
sub
daa
int3
xchg
dec
adc
mov
dec
jne
jbe
sbbl
icebp
ret
repnz
sti
or
lock
push
fwait
cld
pop
xor
lcall
fndisi(8087
fisubrl
add
adc
adc
inc
pop
icebp
pop
fbstp
mov
jmp
mov
push
loop
rclb
int
lahf
fs
aas
stc
pop
jl
aam
pop
cmc
sbb
jno
add
cs
loop
pop
adc
mov
push
sub
mov
adc
xchg
mov
lret
cmp
or
movsb
lcall
mov
ljmp
arpl
mov
dec
pop
or
xor
in
test
lock
sti
jns
cli
push
or
cmpsb
push
shrb
shll
mov
and
mov
dec
repnz
sbb
repnz
sbb
cmpsl
mov
out
push
das
jno
iret
dec
adc
int
push
mov
lds
adc
mov
dec
push
sbb
je
and
or
cmpsl
or
jnp
movsb
repz
ret
int3
into
lcall
or
sbb
dec
leave
mov
loope
insl
push
adc
push
mov
in
sub
cmovg
jg
fidivs
ja
fwait
lahf
sub
sub
in
adc
repz
stos
pop
lret
ljmp
sbb
mov
or
sbb
or
add
push
jb
insl
mov
push
or
sub
push
test
or
incl
add
and
inc
and
lds
sbb
jo
sub
or
fcmovb
inc
push
mov
dec
jecxz
fdivrs
loope
dec
es
stc
adc
jmp
mov
aad
cld
xorl
push
mov
jp
jnp
outsb
call
pusha
push
imul
and
inc
lahf
test
sub
xor
lods
imul
push
and
cmpsb
push
movsl
andl
loopne
mov
fisttpl
cmc
call
xorb
repz
pushl
sbb
and
loope
cwtl
lret
pop
out
lea
dec
scas
lds
clc
inc
stos
shlb
xchg
sbbl
jp
add
into
pop
mov
outsb
sbb
mov
fistpll
mov
test
lock
jno
stos
jne
ja
jmp
sbb
dec
shrl
clc
mov
adc
scas
sub
les
outsb
mov
lods
mov
jg
movsb
std
xchg
or
mov
or
stc
dec
sarl
push
adcb
add
or
xlat
xor
pop
add
bound
movsl
enter
jge
mov
cld
cld
aad
pop
je
jecxz
fld
add
pop
mov
test
fwait
mov
fwait
pop
sti
mov
in
jmp
loope
movsl
mov
push
jne
sub
fbstp
imul
jle
lret
data16
jb
push
mov
out
aaa
sub
pop
push
enter
adc
xchg
dec
sbb
in
shr
notl
inc
pusha
mov
sbb
insl
cltd
xor
sbb
dec
lret
bound
push
negl
fsub
test
ret
and
jle
das
push
cmp
js
or
xor
mov
dec
negb
ss
jg
xor
lds
dec
aas
jle
aam
add
sahf
push
clc
and
rcrl
cli
mov
scas
push
dec
mov
inc
sbb
out
xor
push
push
push
xor
pop
fdiv
pop
and
lret
enter
adc
cltd
lds
je
stc
cmc
dec
das
inc
pop
pop
mov
das
and
hlt
and
mov
aas
fwait
lods
xchg
stos
or
mov
shlb
push
sbb
push
hlt
pop
jns
jnp
orb
out
jne
repnz
lcall
rol
sub
inc
xchg
loop
push
loope
xchg
jecxz
pushf
mov
mov
lret
xor
sbb
aam
dec
push
xchg
movl
std
dec
cmc
inc
mov
cmp
mov
inc
push
lods
nop
jns
xchg
and
xor
push
into
xor
mov
pop
and
mov
cmpxchg
sub
fwait
pop
in
jmp
push
xchg
orl
insb
or
cli
xchg
pop
push
pop
es
xchg
cli
xor
aam
lret
addb
pop
out
gs
ret
sahf
pop
lcall
bound
mov
mov
jno
or
movsb
mov
cli
sti
fsubl
inc
push
loopne
and
pusha
shlb
daa
outsb
or
ret
lods
test
addr16
pop
inc
and
xor
ret
cmp
xor
mov
jle
sbb
inc
mov
jge
inc
pop
dec
xlat
dec
arpl
xchg
hlt
adc
adc
jg
push
xchg
dec
testl
ret
inc
repz
decb
adc
sbb
dec
push
inc
pop
dec
xchg
jnp
ljmp
insb
jnp
outsl
xchg
pop
inc
andb
or
xchg
pop
jmp
test
add
fdivrs
and
mov
adc
outsb
cld
adc
sbb
inc
mov
mov
xor
cltd
or
jo
xor
sub
fsubl
movsb
dec
fisttpll
inc
int
sub
mov
cwtl
cltd
jmp
pop
imul
inc
xor
push
out
aam
add
sub
mov
sbb
push
adc
imul
jns
outsb
or
lcall
or
xchg
hlt
mov
sbb
xor
jmp
in
cmp
xchg
cwtl
cmp
mov
ret
sbb
push
fcoml
icebp
mov
mov
sub
sub
push
cmp
ret
dec
lcall
pop
mov
or
movsl
in
outsb
loope
lret
scas
sti
orb
pushl
push
add
dec
xchg
mov
psubd
pop
dec
rcl
cmp
jl
pusha
rorb
inc
xchg
add
xchg
icebp
out
in
mov
dec
decl
adc
sub
cmp
xor
loopne
aaa
int3
mov
adc
stos
mov
or
into
imul
shlb
les
cld
add
add
stc
or
jp
push
test
jmp
dec
insl
lods
imul
cmp
dec
push
fisttpll
bound
mov
sbb
add
inc
imul
mov
fbstp
sub
xor
adc
mov
push
mov
add
xchg
ja
inc
inc
mov
out
push
mov
push
mov
test
fnstenv
pop
mov
cmpsl
arpl
stos
fiadds
pop
push
dec
mov
mov
jns
sahf
das
js
sbb
sbb
mov
push
jg
aas
in
xor
into
aas
les
movb
mov
pop
mov
sub
pop
cmpsl
lea
into
outsb
adc
push
push
stos
outsl
push
push
adc
sub
push
enter
stc
cmp
mov
mov
mov
fistpll
icebp
push
push
fistpll
inc
and
add
mov
jl
cli
stos
clc
popa
pusha
adc
mov
jg
or
dec
enter
or
adc
test
test
inc
mov
call
cmp
adc
pushf
imul
icebp
xchg
aad
dec
rclb
xchg
mov
push
lock
dec
into
mov
daa
insb
insl
jge
or
call
xor
jo
cmp
imul
or
enter
cld
jle
insl
pop
btc
or
xor
sub
ja
clc
mov
lods
push
jecxz
in
pop
jmp
inc
loope
or
mov
out
pop
pop
sub
test
add
in
inc
lock
rolb
nop
jb
int3
addr16
loope
cmp
cld
out
pushf
lea
pop
xor
cld
ds
fisubs
gs
pop
aad
cmc
stc
mov
xchg
aad
test
je
fiaddl
mov
sub
lock
fadds
push
fiaddl
jb
in
sub
stos
in
aaa
cmp
mov
mov
sub
fwait
mov
mov
cltd
testl
dec
pusha
xchg
dec
xchg
fisttpll
stc
cltd
or
add
xor
push
pop
nop
jo
add
sbb
or
leave
pop
xor
cmp
mov
dec
test
xchg
dec
jge
adc
insl
ret
inc
and
les
in
fstps
jae
jge
iret
and
and
lods
insl
rcl
xchg
dec
sub
insl
sub
jbe
mov
inc
cmpsl
ljmp
fsubr
stos
or
mov
lahf
inc
sub
mov
push
pop
cs
or
xor
lock
cmp
mov
lahf
fisubl
add
frstor
mov
pop
xchg
int
cwtl
jbe
roll
or
nop
adc
dec
xchg
or
pop
std
ss
add
iret
insb
inc
mov
xchg
mov
or
inc
cmp
dec
aam
sub
stc
adcl
pop
xlat
inc
adc
gs
add
pop
das
fadds
pop
popf
adc
insl
stos
jmp
push
lods
cmp
pop
lods
pop
cld
mov
sub
loope
leave
out
pop
sbb
inc
iret
and
loop
stc
movsb
addr16
dec
push
fisubrs
and
movsl
int
std
jae
cwtl
cmp
push
jmp
fadds
es
data16
lods
das
adc
test
push
jl
lret
jg
jns
test
in
adc
jg
mov
sub
faddl
push
adc
outsl
loopne
rol
vmwrite
or
lock
shlb
gs
push
hlt
daa
cli
insl
les
and
cmp
sbb
pop
push
enter
add
pop
pop
mov
cli
ljmp
movsl
push
jecxz
xor
loopne
clc
xchg
xorb
mov
repnz
cltd
cmpsb
popa
xchg
bound
dec
aad
cmc
or
movsb
mov
cltd
jb
out
xlat
fidivl
pop
cmpsb
lret
jle
jmp
bound
cmpsl
push
int3
test
mov
push
xchg
pop
pop
cmc
stos
cli
jnp
fnstcw
and
sub
icebp
cmp
loope
fwait
mov
sbb
mov
xorb
clc
xchg
loop
cs
arpl
xchg
ja
mov
mov
insl
and
loope
or
add
mov
inc
push
es
add
ljmp
mov
cltd
push
inc
xchg
test
sub
jp
ficoml
outsb
popf
imul
xor
xor
add
mov
imul
shlb
pop
mov
shrl
arpl
test
and
aad
xchg
call
mov
out
sub
sbb
mov
cmp
mov
repnz
insb
add
out
or
inc
out
jno
jl
fcmovu
push
mov
inc
lcall
inc
jo
mov
cmp
imul
sbb
cmp
test
out
xor
ret
into
jne
xchg
insb
popl
ss
and
movd
ficoms
mov
clc
push
loopne
sahf
inc
sbb
rcl
sbb
addr16
push
mov
in
cwtl
gs
dec
sbb
and
sub
movzbl
add
xor
ja
xchg
xchg
mov
xor
mov
gs
and
mov
fwait
push
xor
inc
jg
sub
add
jo
push
mov
sub
lret
rcll
push
stos
cwtl
stmxcsr
xor
aas
lods
mov
das
push
flds
pushf
push
cmpsb
das
or
mov
dec
ror
adc
aad
inc
fcmovnu
add
xchg
int
or
mov
imul
loop
mov
dec
and
movsl
add
lock
or
ds
jl
fidivrl
pop
ss
mov
ja
mov
jne
pop
fidivrs
pushf
test
jbe
hlt
dec
cmp
push
mov
pop
or
cmp
xchg
pop
mov
add
popf
sbb
incb
xchg
xchg
jmp
scas
out
imul
loope
sbb
mov
mov
inc
insl
push
rorl
add
stc
xchg
push
sti
xor
lret
dec
sub
dec
arpl
sub
movsb
push
inc
mov
lret
pushl
fdivr
mov
sbb
rcrl
pop
jno
sub
arpl
scas
daa
ss
and
dec
outsb
lock
outsl
popf
imul
xor
mov
jbe
movhps
jle
mov
sub
pop
subb
gs
aad
stc
stos
add
lods
loope
loope
jl
inc
xor
enter
jnp
lahf
fdivrs
rcl
mov
loope
ja
ljmp
xchg
and
pop
pop
pusha
dec
inc
out
cmc
dec
pop
jnp
jb
pop
xchg
sub
jp
add
fmul
push
jno
cwtl
inc
sub
jb
fsubs
inc
pop
sahf
lret
mov
mov
sbbl
inc
lods
mov
incl
cmpsl
repz
lds
stos
or
shll
inc
lods
mov
in
dec
inc
mov
scas
pop
je
mov
xchg
inc
add
rclb
outsb
cmp
out
mov
in
mov
mov
jg
dec
mov
outsb
popa
clc
fidivl
je
lret
int
xchg
xor
mov
dec
test
and
loopne
data16
adc
xchg
sub
xor
int
sbb
adc
mov
jle
mov
pop
jno
jle
fmuls
pop
mov
pminub
inc
imul
int
mov
mov
dec
testl
lahf
fnstenv
pop
cltd
sub
push
emms
into
rolb
and
mov
adc
mov
test
std
mov
jb
mov
pop
cltd
jecxz
fistps
mov
aam
sbb
stos
jl
repz
sub
lret
lods
lret
hlt
cmp
push
jmp
gs
frstor
cmp
cs
pop
jo
jo
ficoms
inc
fsubs
or
inc
inc
inc
fimull
repnz
lods
outsl
cmp
lahf
sbb
fistpll
sahf
push
sub
cld
fsubrs
fsts
js
lret
sbb
adc
lods
inc
cwtl
clc
adc
aas
jne
jg
pop
in
les
push
xorb
imul
in
pop
xlat
add
push
test
sub
mov
xchg
cli
es
nop
push
xchg
add
mov
xchg
stos
sub
sub
jmp
sbb
adc
push
mov
sti
xor
jle
mov
out
xchg
cmc
enter
or
sbb
sbb
leave
mov
jmp
icebp
push
test
add
cmp
imul
daa
jns
mov
leave
push
mov
or
mov
or
adc
dec
sbb
ds
test
aad
ja
push
cmp
aaa
loopne
jnp
je
mov
dec
cld
cmp
or
ljmp
insl
pop
push
mov
mov
mov
jl,pt
enterw
icebp
xor
dec
stc
jno
inc
cmc
add
sbb
daa
imul
mov
inc
mov
iret
sahf
dec
repnz
arpl
cmp
pop
or
adc
xor
rclb
sub
jg
aam
xor
outsb
jo
hlt
and
jp
cmp
xor
add
pop
and
add
ret
in
ljmp
xchg
pushf
jo
sbb
scas
loop
iret
and
push
adc
push
xor
mov
ljmp
fs
cmp
push
mov
pop
mov
xchg
stc
ret
cmpsb
jo
xchg
sbb
mov
lcall
das
mov
jmp
mov
push
cmp
add
das
adc
imul
test
mull
fmuls
mov
add
mov
add
cltd
dec
jle
pop
mov
js
lods
pushf
sub
pop
push
loope
stos
push
or
mov
arpl
or
dec
ret
or
push
push
inc
jg
push
xor
xchg
push
lock
imul
insl
cmp
ja,pt
lea
sahf
and
js
dec
push
ds
clc
mov
sub
dec
fidivs
inc
stos
push
adc
ret
out
gs
fbld
fucom
cli
dec
adcb
add
mov
loope
cmp
and
je
dec
push
leave
sub
das
stos
mov
aam
imul
data16
add
mov
xor
push
pop
and
mov
lods
stos
or
shll
dec
mov
pop
fwait
loope
and
add
xor
mov
dec
and
aam
int
sub
mov
repnz
rorb
popf
testb
pop
adc
mov
pop
jg
add
lret
mov
ret
outsb
ret
movsl
and
cmp
test
lods
aad
gs
mov
fisubrl
adc
cli
adc
ds
fbstp
inc
enter
xor
jecxz
jp
aaa
xchg
pop
xchg
loopne
push
adc
mov
cmpsb
pop
call
mov
sbb
lods
push
mov
clc
fiaddl
and
xor
xor
out
imull
repz
pop
mov
push
popf
inc
inc
mov
inc
add
imul
data16
push
jae
sub
sub
out
xlat
js
fdivl
fdivrp
outsb
cwtl
jg
rcr
rcll
push
add
aas
add
add
pushf
push
in
fcoml
pop
int
jmp
js
stos
push
push
repnz
pop
addb
xor
imul
call
push
aaa
inc
in
mov
in
pusha
mov
or
xorl
inc
dec
fwait
inc
jno
lods
cmp
in
ret
movsb
sub
stc
adc
hlt
cmp
sub
and
mov
inc
cltd
stc
sub
cs
sbb
cmp
stos
xchg
and
lret
movsl
data16
adc
ljmp
out
ss
adc
xor
or
nop
loopne
int
dec
mov
add
addr16
fisubrs
xchg
xchg
out
out
push
aas
clc
lods
jl
aad
xchg
sub
push
fucom
loopne
aas
hlt
inc
insb
icebp
fstl
lods
mov
nop
aas
push
loop
push
or
cmp
or
cld
fdivrs
mov
push
sbb
ret
out
inc
hlt
dec
sahf
pop
fnsave
out
aad
lods
adc
jmp
or
das
ss
pop
dec
add
leave
stos
xor
pop
out
xchg
mov
mov
push
mov
or
cmpsl
adc
cwtl
push
sub
adc
and
clc
test
je
test
outsl
test
clc
lret
mov
and
mul
push
insb
fistps
movsl
shlb
mov
mov
jmp
loope
mov
push
ss
mov
es
dec
and
int
imul
mov
adc
mov
fucomp
sti
jae
shlb
and
mov
gs
scas
js
outsb
fwait
nop
and
dec
pop
pop
out
andb
mov
jnp
or
add
xchg
mov
mov
cli
mov
push
mov
loope
jmp
mov
push
xorl
inc
push
cli
lods
iret
nop
push
cltd
sbb
xchg
mov
inc
pop
insl
push
sub
lods
movb
int3
adc
in
adc
and
cli
ds
not
cmp
in
jbe
dec
mov
pop
cltd
stos
and
lds
mov
clc
fs
je
mov
push
inc
xor
cmpsl
push
fdivrs
cmp
xchg
stc
orl
ret
add
push
push
cmp
in
in
jno
out
xor
in
sbbb
insb
cmp
push
out
outsl
rol
popa
push
inc
jmp
push
out
addr16
pop
jae
fidivl
xchg
test
mov
test
aas
pop
mov
addl
adc
cmc
ret
jno
mov
fldcw
fdivrs
jl
imul
add
xchg
imul
mov
add
and
cmp
ja
cmpsl
call
out
test
inc
mov
repz
lods
mov
sub
add
xor
xlat
fsubl
enter
mov
aad
sbb
dec
outsb
pop
and
inc
pop
sub
dec
dec
cmp
std
xor
sub
xorl
fdivl
insl
fisttps
icebp
lcall
sbb
out
xor
sbb
xchg
imul
push
scas
mov
xchg
out
adc
int
clc
lods
fsubl
sbb
pop
inc
add
push
or
or
push
cmpsb
pop
mov
cmp
dec
cs
and
xlat
call
pop
lea
daa
icebp
add
int
jns
test
sbb
mov
popf
fcomps
add
dec
bound
push
dec
cmp
scas
xchg
cmpsb
inc
xchg
xchg
ret
js
and
xor
sar
pop
xchg
push
icebp
mov
add
inc
jno
rorb
pushl
add
cmpsl
or
icebp
mov
les
rol
inc
call
cltd
loope
sarl
lods
xchg
add
movsl
mov
nop
jle
mov
ret
or
mov
out
loope
daa
ret
and
sub
ja
xor
cmpb
or
ss
push
adc
xor
inc
fcomps
sub
jl
repnz
xchg
push
rcr
inc
and
sbb
sti
cs
iret
cmp
rcr
orl
push
negl
push
xchg
push
lock
and
or
les
cltd
popf
dec
ss
out
sbb
and
test
push
test
xor
iret
loopne
xchg
cmp
or
mov
dec
dec
fsub
into
add
sahf
dec
sub
fistps
inc
sbb
pop
pop
dec
or
repz
cli
sti
je,pt
xchg
jl
mov
jno
add
push
xor
add
inc
xor
jp
es
dec
std
push
jb
outsb
mov
lahf
cld
jle
pop
popa
arpl
jno
stc
mov
mov
sbbl
adc
pop
dec
lea
adc
sub
nop
fidivs
cmp
lret
pop
sar
lret
mov
aad
sbb
pop
inc
outsl
pushw
xor
dec
adc
mov
and
incl
stos
pop
cmp
test
fsubrs
stc
mov
sar
jge
iret
cltd
xchg
sbb
and
lock
mov
or
cs
sahf
adc
imul
mov
fwait
xchg
mov
stc
mov
push
cmp
lds
jns
fsubrl
dec
cmpsl
or
mov
inc
mov
stc
xlat
jle
add
inc
jg
push
subl
sti
jl
inc
mov
mov
mov
daa
fdivrl
inc
idivl
mov
jle
mov
lods
loope
ret
pop
jnp
or
in
cmp
mov
in
sub
fsubr
movsl
pop
adcb
pop
lea
nop
mov
adcl
adc
loop
lods
cmpsb
inc
and
push
aaa
push
push
pop
mov
fistpll
lds
scas
jle
adcl
in
cmpsb
inc
adc
xor
test
or
jnp
cmp
scas
dec
loope
inc
lods
adc
pop
jge
cmpsb
push
xor
mov
fiaddl
xchg
mov
ss
mov
push
jmp
jp
icebp
jmp
mov
std
add
jns
jle
pop
loope
or
cli
ljmp
push
or
xor
xorb
andb
or
outsb
ljmp
cmc
and
sbb
and
jl
sbb
test
lcall
jns
jg
daa
mov
dec
test
mov
ret
mov
mov
mov
and
aaa
jle
in
or
xor
add
daa
adc
cwtl
cmp
jbe
sub
loop
pop
mov
jne
iret
add
fldenv
mov
fs
jo
push
negw
arpl
les
repnz
scas
mov
cmpsl
jl
pop
push
mov
ljmp
mov
xor
movsb
lret
jg
dec
movsb
xchg
cmp
stos
xor
sahf
int3
jae
mov
dec
in
and
mov
push
in
sysexit
dec
mov
jmp
test
mov
call
mov
xchg
inc
lcall
sub
inc
lds
adc
repz
ja
loop
jmp
pop
mov
cwtl
mov
adc
mov
jecxz
or
dec
push
cwtl
out
sub
insb
pop
push
mov
movsl
imul
stos
shrl
dec
lds
add
in
inc
psubb
mov
adc
leave
rcr
or
pop
push
adc
ljmp
pusha
cmp
pop
jae
fsubrs
ljmp
xor
cli
adc
mov
pop
test
pop
add
imul
or
dec
xchg
ljmp
mov
div
in
ret
hlt
mov
sub
repz
std
js
lea
stos
push
xchg
outsb
mov
push
xchg
mov
and
frndint
pop
sub
or
push
inc
fwait
jp
push
loop
lea
xchg
pop
xor
es
dec
push
lock
jns
adc
jns
mov
mov
mov
xor
jb
pop
icebp
or
popa
jns
popf
iret
sub
pop
ljmp
adc
jmp
pop
jl
outsb
decb
ss
int
addr16
xor
mov
sub
xorb
test
insb
push
fcom
clc
rolb
dec
adc
push
sub
popf
pop
inc
cltd
mov
inc
ret
dec
fcomi
jo
adc
das
jmp
push
mov
xchg
clc
test
xchg
in
inc
adc
xchg
cmp
mov
das
sti
jle
mov
cmp
lret
xlat
popa
outsb
cmpsl
add
arpl
js
mov
aad
cmc
and
aad
xor
and
in
fidivrl
sub
sub
je
and
fisttps
bound
inc
add
fcoml
test
xchg
es
shll
or
stos
push
test
jnp
push
push
mov
xchg
sub
mov
shufps
cmp
fcompl
mov
in
fdivp
and
xor
orb
mov
das
push
and
sub
or
mov
fsubs
push
mov
jae
in
jmp
insl
ds
inc
xor
fmuls
sub
lds
inc
push
cld
lock
lcall
lret
push
fucomp
mov
lds
dec
mov
dec
outsb
hlt
inc
xchg
adc
and
lret
cmp
sub
mov
mov
test
adc
or
das
xor
cmpl
mov
outsb
leave
or
push
mov
dec
leave
rclb
push
and
repz
push
and
shrl
cmp
sub
movsl
addb
and
pop
arpl
hlt
mov
jl
jp
sbb
ret
ret
push
sbbl
andl
stos
lods
movsb
xlat
mov
lods
inc
out
dec
sub
in
aaa
mov
jg
js
roll
insb
jle
mov
xchg
dec
push
push
jo
daa
repnz
jle
fwait
iret
and
test
cmp
cmp
fadd
loope
scas
repnz
out
dec
paddw
lods
mov
imul
or
sub
popa
push
dec
ret
sti
int
dec
cli
dec
sbb
jne
pop
inc
rcrb
sbb
or
sub
pop
js
shll
icebp
stos
fstps
es
push
xchg
enter
push
cmpsb
mov
adc
jae
fildl
push
clc
out
scas
mov
mov
in
xor
lcall
cld
sbb
mov
jge
adcl
inc
ret
mov
push
jbe
dec
jnp
push
add
xchg
sbb
pop
imul
pushf
into
dec
sbb
add
jo
cltd
xor
aad
into
mov
jl
jb
dec
loopne
mov
sahf
sbb
pop
mov
loop
int
out
mov
in
mov
cltd
fldcw
imul
pop
movsb
mov
or
rorl
lds
sbb
pop
push
rcl
cmp
popf
mov
js
add
les
and
add
in
test
add
fisubl
adc
repnz
add
repnz
sub
movsb
inc
mov
inc
bound
call
mov
icebp
push
dec
sub
pop
mov
or
lods
and
sbb
xchg
cld
les
inc
pop
sub
or
popa
shlb
inc
bound
mov
in
test
lret
push
lds
iret
rorl
mov
or
cmp
iret
mov
pusha
push
add
fidivs
or
jnp
cmp
mov
jb
pop
bnd
ljmp
ja
xchg
adc
sub
cwtl
shll
mov
hlt
inc
pop
loop
popa
sbb
xor
push
push
lds
and
push
xchg
cltd
adc
iret
mov
enter
sbb
fimull
ror
aaa
loope
xor
inc
jae
mov
test
sub
jp
outsl
aas
loopne
add
mull
sar
jae
outsl
and
cmp
rcl
rcrb
xlat
lods
nop
scas
xchg
and
add
lods
fsub
cmp
icebp
jne
and
out
mov
repz
or
add
loop
xchg
outsl
or
xchg
aaa
push
push
mov
call
jne,pn
push
push
scas
mov
sbb
stos
outsb
sbb
and
jle
inc
rcrb
xchg
mov
testl
mov
fadd
outsb
xchg
jno
out
cmc
lods
add
push
popf
push
mov
lret
mov
out
pop
adc
loope
cmp
rcrb
ljmp
repnz
push
ror
nop
add
out
decl
sub
jnp
icebp
mov
outsb
adc
divl
push
push
ret
sub
cld
and
bound
iret
mov
jg
aam
or
hlt
stos
popa
sbb
cmpsb
fwait
xor
mov
aam
aam
xor
dec
fstpt
hlt
add
mov
xchg
pop
imul
lods
and
adc
mov
mov
in
or
mov
icebp
dec
pop
imul
sti
iret
testl
orl
aad
pop
xchg
mov
pop
add
cmpsl
xchg
lods
add
outsl
sbb
data16
or
pushf
sub
push
mov
in
and
xchg
hlt
int3
scas
xchg
mov
imul
push
ret
mov
adc
sub
cmc
aaa
out
in
icebp
inc
sbb
mov
negb
das
cmc
lcall
orl
cli
hlt
pop
stc
outsb
jnp
push
adc
stc
xchg
scas
fidivrs
es
scas
mov
icebp
jle
ljmp
or
mov
and
mov
inc
pop
inc
mov
jb
push
push
out
mov
fsubrs
cltd
fistpl
enter
aam
lsl
outsb
push
mov
stc
ja
sub
pop
mov
andl
push
or
fdivrl
jp
mov
stos
ja
and
loope
sub
out
clc
insl
inc
dec
lds
pop
cld
sbb
add
push
ja
dec
dec
and
jne
packssdw
loope
inc
jmp
mov
cmp
js
push
out
cmc
into
test
or
push
add
out
adc
add
stos
adc
jne
fnstsw
jge
aam
ds
dec
not
push
push
jbe
aam
xor
inc
push
test
adc
fcmovbe
incl
rcrl
add
and
cmp
push
int3
pop
cltd
jmp
jp
in
pop
pop
adc
jmp
dec
or
stc
outsl
push
fstpl
adc
or
sar
faddp
js
jbe
ljmp
cwtl
sti
add
push
xchg
xor
icebp
fs
mov
cmpsl
inc
mov
mov
mov
push
dec
and
xchg
cmpl
repnz
add
lock
mov
outsb
and
out
xchg
mov
mov
lods
mov
push
imul
push
cwtl
or
cwtl
outsl
cld
ret
xchg
pop
pop
cwtl
jns
loopne
fwait
jns
adc
jge
inc
sub
jo
nop
aad
xchg
mov
or
dec
inc
inc
cmp
jl
in
jp
pop
push
popa
dec
out
inc
daa
rolb
adcb
dec
fmull
lret
xor
fld1
lock
jnp,pt
jp
xor
mov
imull
je
sbbl
push
add
cmp
or
aad
inc
cmp
xchg
jle
and
popf
icebp
xchg
sub
push
sub
dec
mov
pop
cmc
xor
rclb
jo
jbe
cltd
mov
lret
lods
cmp
out
add
push
mov
imul
and
movsb
and
clc
popa
scas
arpl
cmp
xor
adc
ds
into
pop
jg
and
test
cs
pusha
push
cmp
or
sub
icebp
and
mov
mov
jbe
mov
push
fisubl
pop
ficoms
aad
sbb
mov
jns
jb
xchg
out
cmc
dec
sbb
inc
mov
mov
out
push
es
sub
push
jg
fsubl
pop
cmc
push
outsb
std
fbstp
popa
mov
xchg
mov
js
fs
movsb
in
inc
xor
mov
inc
pop
cmp
pop
jbe
nop
pop
mov
adc
rolb
push
cli
inc
pop
ja
fistpll
imul
pop
mov
jns
sub
sub
xchg
mov
sub
sub
xor
sub
sbb
jo
dec
mov
jae
pop
les
in
cmc
sub
lds
mov
sub
cmp
cmp
inc
lahf
into
in
out
aad
leave
sbb
daa
ret
add
scas
rolb
push
push
arpl
js
inc
adc
fadds
jmp
mov
push
mov
pop
mov
push
out
adc
push
in
cli
push
push
ret
out
add
mov
in
rcll
cli
cmc
incl
sub
mov
inc
xor
mov
jmp
push
and
fnstcw
inc
mov
inc
arpl
nop
sahf
or
xor
push
test
xchg
or
dec
insl
mov
icebp
sub
xchg
push
popa
rcll
ret
icebp
and
add
inc
scas
mov
jecxz
sbb
pop
push
scas
movsb
pop
sub
sti
testb
push
fstpt
mov
pop
jne
scas
push
out
mov
cmc
iret
mov
mov
inc
sub
rolb
js
sub
pop
dec
xchg
insb
fildl
adc
xchg
shrb
bound
jle
gs
cmp
scas
xchg
aas
repz
jmp
scas
push
fs
test
mov
mov
xor
in
and
sarl
cmp
insl
sbb
repz
push
sbb
jmp
mov
or
xor
jns
sbb
inc
je
ficomps
cs
push
pushf
or
rolb
cmp
sub
inc
cmp
cmp
push
sub
xchg
mov
pushf
lock
push
mov
push
jnp
xor
or
mov
jb
movsb
inc
pop
cmp
sbb
pusha
lods
xchg
and
adc
push
dec
pushf
les
adc
and
pop
out
pop
and
arpl
mov
icebp
sub
jmp
es
aas
aaa
mov
push
ljmp
mov
pop
xchg
and
int3
push
jle
adc
push
mov
sbb
aam
movsb
lcall
and
lcall
inc
push
mov
mov
push
sub
or
fisttpll
imul
jle
aaa
fsub
xchg
or
loop
int3
jmp
in
ret
fdivl
adc
cs
cmp
cmp
into
movsb
cmpsl
mov
outsl
pop
jg
xor
sub
in
bswap
stc
sbb
stos
hlt
sbb
stos
cmpsl
jb
pop
es
xchg
call
pusha
jne
xchg
fcmovu
pop
in
or
lcall
rcrl
adc
test
rol
mov
xor
fs
push
mov
sbb
push
in
sbb
jne
pop
jne
dec
dec
in
scas
mov
sub
mov
cmpsb
jl
mov
mov
dec
inc
dec
dec
sarl
fwait
cwtl
cmpsl
pop
insb
xlat
xchg
cmp
subb
cltd
adc
and
add
sbb
add
sbb
xor
in
stos
std
jb
dec
in
test
dec
gs
mov
sti
jo
pop
jmp
inc
bound
aas
divb
sbb
mov
pushf
cmp
xor
adc
or
cld
pop
jb
outsl
cmp
addr16
inc
cmc
dec
dec
int3
inc
sti
adc
inc
jae
adcb
test
jecxz
addr16
pop
sbbl
or
sbb
cmpsl
xor
insb
lods
sbb
sub
lea
sub
filds
leave
in
mov
xlat
xchg
add
das
lahf
sahf
mov
push
insb
outsl
or
add
mov
and
mov
mov
mov
or
test
xor
pop
pop
mov
lret
xor
push
jne
in
jg
fdivrs
mov
popf
pop
mov
iret
push
xor
inc
cmp
lahf
dec
notl
cmpsl
or
sbb
jmp
or
ljmp
loope
push
mov
cmp
inc
psadbw
bound
lds
mov
aad
dec
xchg
mov
rol
sbb
ret
jg
xchg
ja
push
push
imul
pop
xchg
mov
ret
mov
jecxz
bound
lret
cmpsb
nop
fistl
sahf
std
sbb
andb
pop
jmp
aaa
pop
inc
rcr
add
pop
mov
insl
mov
lds
sbb
dec
imul
notb
cli
adc
adc
inc
sub
push
jl
push
scas
je
stos
inc
outsb
and
pushf
sbb
xor
add
lods
mov
decb
stc
adc
loopne
shrb
imul
dec
xor
scas
imul
xchg
mov
adc
and
or
hlt
gs
mov
jbe
movsl
jns
xchg
mov
in
stc
dec
push
xchg
in
pop
and
pop
pop
sbb
cld
pop
subl
sbb
movl
mov
std
xor
jno
shr
testl
test
adc
sbb
leave
xchg
insl
push
xor
fimull
pop
dec
into
stos
cmp
fadds
outsl
jns
jno
cmpsl
mov
outsl
mov
pop
xor
xor
rol
push
mov
inc
sbb
sub
and
adcb
dec
mov
repnz
xor
xor
rclb
inc
popf
jae
lea
clc
mov
jle
cmp
fcompl
fstpt
jnp
js
test
cmp
outsb
mov
xor
mov
out
sbb
jge
lret
negb
clc
js
negl
repz
clc
push
push
push
mov
xor
pop
test
xchg
push
pushf
mov
inc
jbe
test
std
mov
in
push
sbb
fldl
fisubrs
out
clc
repz
xchg
push
dec
lret
xchg
ds
popa
cs
lret
stc
popa
cltd
push
enter
out
sbb
sub
lret
andl
mov
loopne
xchg
xchg
mov
fldenv
sbb
add
adc
pop
xchg
pushf
jo
pop
popf
movsb
push
add
cmpsb
mov
inc
mov
add
imul
pop
cmpsl
sub
or
push
popf
aam
sbb
sub
jne
jnp
imul
push
imul
nop
insb
cmpsl
adc
lahf
repz
dec
cmp
jne
adc
aad
jp
outsl
pop
mov
jo
jmp
or
mov
cmpsl
sub
mov
jp
daa
les
pop
imul
scas
xorb
test
ret
jnp
jo
nop
push
outsb
fldt
ss
sub
ret
mov
jl
cwtl
arpl
pop
iret
add
cmp
dec
push
adc
mov
jp
xorl
xor
call
push
push
insb
or
bnd
add
mov
aad
stos
test
daa
andb
test
inc
jl
jg
scas
loope
test
test
or
cmc
mov
mov
icebp
pop
fstpt
jge
adc
in
mov
xchg
shlb
lock
rcll
mov
mov
push
mov
dec
hlt
fcoms
and
push
sbb
jg
cmpb
cmp
shlb
mov
cwtl
cmp
xchg
loop
repnz
sbbl
les
cmpsl
push
cmp
push
daa
pop
cmpsl
cmc
sbb
mov
sub
out
lret
sub
mov
pop
cli
xchg
out
mov
adc
divl
xor
aad
out
cmpsl
sti
mov
loope
dec
inc
xchg
jecxz
inc
call
adc
ret
cld
adc
xorb
jns
aaa
hlt
push
mov
das
adc
add
sub
sbb
les
jmp
push
shlb
push
adc
push
or
jmp
jecxz
add
stc
xlat
lret
scas
adc
int
pop
jmp
loop
mov
leave
loop
xor
and
dec
lmsw
push
mov
outsb
mov
mov
mov
mov
aaa
lock
daa
negl
and
sub
sub
int
adc
mov
inc
ret
inc
shll
pop
sbb
mov
dec
cwtl
pusha
sub
ljmp
sti
outsl
mov
pop
inc
sbb
mov
jge
arpl
incb
test
mov
sub
in
adc
jnp
pop
sbb
xor
push
data16
addr16
rorb
jl
outsl
inc
mov
pop
insl
xor
outsl
or
add
aaa
mov
push
cmc
inc
dec
cmc
aam
rep
mov
repnz
icebp
mov
testl
sahf
xchg
and
stc
jbe
mov
leave
mov
nop
popf
jmp
nop
arpl
or
push
dec
imul
lods
add
mov
mov
adc
les
jns
sub
in
imull
in
mov
xchg
and
lahf
flds
roll
paddd
idivb
popf
orb
or
cmp
movsl
lds
stc
rolb
icebp
movb
cltd
sbb
in
xchg
bound
or
or
mov
aaa
pop
test
and
repnz
daa
jl
arpl
enter
inc
mov
jb
xor
hlt
lahf
sub
ds
inc
insl
rorl
pop
test
jl
js
pusha
cltd
mov
jle
push
outsl
int3
icebp
fstpl
pop
fs
mov
add
xor
cmpsl
dec
mov
cmp
or
dec
cmp
xchg
push
push
lock
jnp
std
or
movsl
cwtl
and
jmp
cmpsb
mov
sbb
add
mov
test
xchg
jne
adc
scas
and
or
fldt
ljmp
cmp
bound
addr16
mov
and
pusha
push
push
jmp
outsl
int
pop
lea
shll
movsl
pop
push
inc
and
fcoms
ss
jmp
icebp
jmp
cs
inc
cmp
inc
xchg
push
sbb
mov
or
cmp
out
insb
mov
rolb
cmp
jp
imull
pop
adc
movsl
pop
and
imul
jns
or
sub
dec
xor
fcoms
mov
inc
shl
and
fsubp
sbb
mov
cmpsb
mov
add
inc
and
add
lods
int3
movsl
addr16
int
add
pop
cwtl
mov
movsl
or
neg
push
aam
jmp
jmp
mov
cld
inc
negb
xor
or
adc
lock
push
pop
loop
sbb
sbb
ja
push
xchg
xor
pop
mov
or
xor
idivb
lcall
jae
mov
ret
test
adc
push
subb
incb
pop
in
mov
fiaddl
lahf
dec
sahf
pop
fldenv
push
daa
rcrl
cmpsb
inc
mov
lods
test
psrad
popa
mov
inc
or
cltd
xchg
sub
jbe
pop
xchg
rcl
scas
aam
fwait
jg
jp
mov
shl
clc
cmp
cmp
mov
push
jo
dec
push
or
fwait
test
imul
pop
jmp
scas
pop
mov
test
outsl
pushf
fsubl
data16
or
int3
mov
xchg
mov
mov
inc
int
rcr
jo
rcll
int3
in
aam
out
repz
pop
loopne
xor
enter
pop
js
pushf
pop
mov
data16
testl
mov
inc
xor
xchg
call
pop
shl
ret
pop
fcoms
mov
inc
enter
lods
cltd
sahf
aad
sub
and
add
push
js
inc
mov
xchg
ja
aam
inc
addr16
xchg
js
and
mov
mov
repz
inc
sbb
scas
adc
adc
mov
add
push
test
dec
hlt
into
into
test
iret
push
inc
negl
inc
addr16
mov
mov
sub
push
fsubs
les
xchg
jg
jo
sub
fcoml
inc
scas
adc
sub
in
lods
xor
mov
sub
cmpsl
mov
fs
sbb
jmp
push
xor
out
cmpsl
or
pop
inc
jge
adc
push
sbb
addl
les
sbb
add
or
mov
leave
stc
xchg
fisubrs
add
gs
mov
sub
inc
stos
cmpsb
push
sbb
daa
divb
push
addr16
jo
mov
dec
addr16
xor
daa
pop
fbstp
mov
dec
rcll
nop
cmpsb
adc
mov
fwait
jl
push
fstps
jbe
or
bound
or
cwtl
and
out
jecxz
das
in
push
loope
xchg
xchg
push
pusha
mov
fbstp
push
in
cmpsl
inc
sub
test
movl
es
xchg
inc
push
lods
push
iret
pop
movsb
das
or
adc
cmp
mov
mov
sub
mov
dec
mov
xchg
mov
xlat
jo
xchg
cmp
ljmp
das
or
movsl
in
and
fdivr
insl
pusha
mov
jno
inc
cmp
dec
jo
orl
or
mov
fstps
sub
decb
xor
mov
cltd
clc
mov
cwtl
ret
push
sti
arpl
es
repz
aam
pop
repz
addr16
push
testl
mov
jns
mov
and
loopne
adc
inc
aaa
dec
fimull
inc
xchg
mov
lret
inc
stos
or
or
test
and
xchg
pop
fisttps
mov
nop
sbb
jno
add
mov
xchg
into
mov
push
pusha
mov
adc
push
jnp
jo
es
mov
enter
gs
stos
push
add
mov
xor
mov
and
mov
lcall
cmp
int3
lcall
xchg
push
xor
lock
cmpsb
dec
imul
aaa
mov
adc
sub
mov
mov
sbb
insl
subl
and
and
mov
imul
aas
in
int3
movsl
and
ljmp
adc
mov
mov
lea
mov
dec
idivb
shll
pusha
xor
out
mov
jp
repz
add
inc
xor
jp
ret
pushf
add
xchg
ret
mov
xlat
std
xchg
inc
movsb
ret
pop
clc
jle
in
mov
dec
jnp
add
jle
lcall
jne
or
lcall
movsb
out
lods
jecxz
cli
add
frstor
sub
sub
mov
push
or
mov
inc
daa
add
test
sti
mov
inc
jns
clc
gs
inc
push
lret
and
js
int3
inc
sub
push
mov
add
jo
rorl
mov
ljmp
jle
pop
nop
inc
mov
sub
jo
cmp
gs
jge
jno
dec
loope
bound
negl
ret
out
insb
mov
jo
aad
rorb
mov
dec
ud2
adc
sub
mov
push
les
je
xchg
xor
jo
mov
or
fwait
xor
jle
cmp
cmp
mov
loope
je
and
sub
call
inc
cmp
sbb
push
pop
fstpl
and
aad
xor
dec
fcmovne
and
fsts
dec
insb
add
int
cmp
pop
mov
xor
dec
inc
or
jne
ds
je
xchg
and
data16
jg
jne
sbb
cmp
std
push
jl
sbb
mov
subl
sar
pushf
aas
cmp
fcoml
push
aad
and
fwait
or
notl
jns
xor
sbb
mov
xor
dec
rcrb
xorl
or
jmp
insl
sti
aaa
jp
adc
mov
std
cmp
pop
orb
test
push
jle
inc
dec
adc
orb
jmp
inc
call
je
dec
aaa
std
lahf
or
call
pop
pushf
push
and
int
hlt
gs
jne
aaa
rorb
mov
pop
flds
inc
arpl
lcall
call
adc
iret
int3
pushf
pop
jmp
cmpsb
mov
xlat
xchg
mov
ds
push
rcrl
repnz
inc
sbbb
xchg
adc
imul
xor
jno
rol
xor
push
xor
ds
mov
inc
push
jb
dec
dec
lea
clc
add
rcr
push
add
rol
movl
js
push
xor
je
xchg
cmpsb
mov
int
popa
xchg
test
stos
mov
mov
loope
and
gs
cli
pop
mov
add
fs
mov
sbb
filds
xchg
inc
cmc
cmpsb
lcall
mov
jmp
js
dec
lods
int
clc
cmpsl
fsubp
push
or
int
or
inc
stos
jns
jmp
out
test
shlb
jmp
inc
pop
and
mov
push
sub
cmp
or
sbb
dec
enter
in
lret
add
push
out
adc
out
imul
int
push
lret
test
dec
jb
testb
cmp
inc
popf
pop
dec
xchg
lods
in
sub
sbb
scas
jno
inc
jnp
rolb
sbb
fimuls
jle
inc
ds
repnz
outsb
shrb
push
and
js
inc
dec
or
test
jp
mov
jbe
arpl
or
fcomi
dec
pop
mov
outsl
xchg
insl
mov
adcl
insb
or
fsub
adc
dec
aam
ror
push
hlt
pop
push
mov
cmp
stos
mov
or
in
mov
movsb
or
cld
setg
lcall
dec
and
bound
or
dec
mov
aaa
jbe
cltd
sbb
out
lock
into
dec
or
and
jbe
xchg
insb
fldln2
and
add
mov
mov
imul
rol
pop
jnp
decb
lret
loopne
mov
aad
dec
scas
dec
jne
shlb
jecxz
ret
mov
test
pushf
jne
roll
out
or
dec
test
mov
shlb
cmp
rcrl
mov
jae
ja
sub
push
sbb
pop
das
mov
in
mov
stos
pop
pop
xor
movsl
mov
and
fsubr
scas
or
and
lret
out
dec
fwait
out
ljmp
sub
inc
xchg
test
fndisi(8087
iret
divb
push
xor
mov
aas
dec
out
sahf
jecxz
adcl
in
adc
mov
add
les
push
js
fs
inc
sub
sbb
lcall
jne
out
sahf
leave
into
push
inc
pop
mov
inc
xchg
mov
push
adc
sub
movsl
jmp
xchg
aas
pop
mov
out
flds
mov
test
inc
lret
fidivrs
cmc
cmp
mov
jp
nop
std
test
dec
loopne
in
mov
cs
xor
mov
int3
jle
push
jne
sbb
fsts
std
aas
fmull
mov
dec
mov
popa
jb
stos
add
clc
inc
dec
cmp
mov
int3
inc
cmpsb
cmc
cmp
sbb
or
lock
xor
xchg
jne
test
push
shlb
loope
into
movb
lods
stos
mov
inc
cmp
sbb
sbb
dec
iret
movsl
and
pop
pop
dec
adc
and
test
sbb
clc
ss
movsb
out
repz
ss
dec
in
insl
pop
in
inc
push
cmp
hlt
sub
int3
bound
dec
sub
xor
add
cltd
call
adc
and
xchg
xor
nop
xor
cli
mov
dec
pop
add
mov
and
sahf
rcrl
aam
outsb
and
dec
enter
xchg
push
xor
sbb
leave
pushf
xchg
mov
cld
in
inc
pop
sbb
out
xor
push
add
adc
dec
adcb
mov
jae
pop
rcrl
mov
xchg
mov
mov
cmp
dec
mov
imul
add
mov
dec
mov
inc
adc
int
sub
cmp
mov
stc
xchg
loope
inc
enter
flds
xor
aad
pop
jbe
lahf
mov
ret
cmpsb
les
ret
inc
imul
cltd
mov
incl
add
test
sahf
add
mov
pop
negl
cmp
inc
pop
or
mov
cmp
mov
xchg
fs
xlat
pop
mov
or
mov
jno
pop
shrb
add
pushf
rclb
dec
or
call
jns
xchg
push
inc
push
mov
lods
cld
enter
jl
dec
mov
lock
icebp
sbb
or
sub
mov
ja
imul
dec
lahf
or
rorb
add
jge
add
pushf
pop
ds
xchg
aam
pop
xchg
mov
mov
adcl
mov
pusha
adc
fildll
pop
lods
lret
outsl
xor
movsl
cltd
test
insl
pop
bound
push
xchg
inc
push
sbb
into
mov
mov
jbe
mov
mov
je
aad
sub
sbb
loope
lahf
xor
nop
aam
lea
insl
repnz
test
mull
xor
push
adc
push
sti
mov
nop
mov
ss
test
mov
push
add
mov
sub
arpl
mov
dec
dec
mov
lods
int
fxch
test
sbb
es
and
outsb
push
xchg
das
mov
fsubr
jl
mov
or
mov
rcl
into
cmp
rclb
inc
jp
add
into
fcoml
in
mov
in
icebp
pusha
jle
jecxz
loope
xchg
pop
pop
movsb
aas
ret
fists
dec
jbe
test
or
outsb
mov
sbb
add
jp
stos
mov
cmp
push
repnz
add
aam
shrl
pop
pop
push
mov
ss
fbld
pop
ret
testb
jbe
jl
push
xchg
dec
jae
in
or
jecxz
adc
stc
lea
stos
mov
inc
pop
pushf
push
sub
jp
cli
mov
out
xchg
les
stos
mov
adc
shll
es
or
nop
andl
and
pop
xchg
loopne
jb
stc
cmp
cwtl
sar
xorb
lds
in
jb
or
sbb
in
mov
mov
in
or
add
aam
inc
mov
push
loope
sub
inc
mov
repz
dec
ret
cld
lods
outsb
add
and
andl
cmp
inc
mov
lahf
add
test
js
xchg
sub
fdivs
iret
sbb
jae
enter
jecxz
daa
sarb
arpl
adc
adc
pop
mov
in
mov
nop
mov
pop
dec
inc
pop
mov
push
xchg
and
ficomps
xchg
dec
mov
pop
jle
ljmp
scas
mov
jg
arpl
inc
mov
push
push
inc
es
jno
lahf
or
mov
insb
fisttpl
adc
or
sub
pop
rcrl
scas
int3
in
mov
sbb
cwtl
mov
sub
jle
push
xchg
and
or
mov
or
popf
add
pop
xor
xchg
push
arpl
cmp
dec
or
aam
addr16
loope
or
lds
cld
sbb
enter
push
mov
hlt
lds
mov
pop
fistps
xor
out
lods
fiadds
in
xor
xchg
and
stc
mov
adc
adc
fstp
pop
lret
mov
sub
xchg
mov
adc
std
pop
fwait
xchg
out
enter
cmp
mov
rcll
divl
dec
lock
adc
clc
xchg
leave
push
xchg
popa
pop
and
mov
dec
lahf
xchg
pusha
sbb
mov
mov
adc
cltd
pop
and
pop
bound
sbb
cmpsl
pop
rolb
pop
sbb
clc
lret
xlat
adc
mov
int3
push
fiadds
and
jle
lock
mov
jge
or
push
inc
mov
imul
ret
xchg
dec
dec
inc
rcl
jecxz
adc
cmp
loop
jmp
jb
cs
jo
outsl
push
jbe
dec
lods
jmp
add
popa
int
cmp
sbb
adc
jp
mov
cmpsl
pop
test
cmp
sub
xchg
sti
es
mov
xchg
lret
push
mov
dec
mov
inc
fidivs
fdivs
sahf
mov
add
xchg
adc
unpcklps
mov
mov
repz
and
std
adc
pop
sub
sub
adc
cmpsl
lret
int3
mov
fcoml
mov
or
inc
movsb
push
mov
ja
cmpsl
xchg
and
pop
xor
add
xor
jae
cmpb
or
int
ja
sub
xorl
mov
push
scas
pop
jle
rclb
frstor
repz
int3
sbb
or
push
mov
dec
sub
cmc
xchg
inc
rcll
jle
push
xchg
xchg
cmp
insl
inc
stc
mov
in
xor
add
sbb
push
enter
std
cmp
or
lea
cmpsl
testb
sti
pop
nop
push
lret
lea
data16
cmp
rorb
inc
idiv
mov
iret
jp
push
test
mov
nop
sbb
fs
imul
mov
lahf
repnz
and
pop
icebp
lods
adc
xchg
lcall
push
add
int3
adc
pop
and
pop
add
jp
push
xor
psrld
push
xor
mul
jne
mov
or
imull
xchg
inc
mov
out
xor
lds
daa
or
cmpsb
rcrl
sbb
dec
daa
hlt
push
adc
scas
adc
shrb
pop
jno
popf
sarl
xchg
mov
inc
pop
loopne
movsb
enter
jmp
mov
shl
orb
add
push
stos
gs
repnz
clc
and
jne
mov
hlt
xor
add
data16
mov
cmp
sub
insl
mov
cli
inc
sub
cmp
sti
sub
jae
jb
mov
and
jo
adc
mov
adc
and
dec
pop
test
add
mov
std
arpl
push
stos
bound
jnp
push
push
loope
int3
out
pop
jno
pop
mov
inc
adc
mov
dec
lds
push
addb
push
or
or
sbb
sub
rolb
loop
inc
fimuls
inc
pushf
inc
jb
fisttpl
or
cmp
xlat
add
cld
insb
dec
push
pop
jge
mov
sub
int
dec
pop
mov
out
add
cltd
daa
movsl
test
push
roll
xor
push
fisttpl
shll
add
lock
subl
icebp
add
sub
xchg
jo
pop
movsl
or
mov
out
and
mov
jb
cmp
repnz
fstpt
xchg
add
xchg
push
sbbb
ret
mov
jle
and
pop
xchg
hlt
aam
jno
pop
sbb
cltd
addl
and
jne
jnp
ret
stc
pop
loope
push
aad
mov
xchg
mov
pop
pop
into
rcll
cmp
into
and
js
xchg
inc
out
mov
test
sub
mov
push
and
popa
add
stc
jle
dec
cwtl
inc
cmpsb
fmul
pop
xor
ljmp
arpl
je
sahf
mov
rorl
push
out
sbb
stos
push
movsl
mov
jae
inc
fiaddl
inc
mov
fdivrs
test
or
addr16
jecxz
xor
js
iret
inc
and
mov
and
or
jo
jb
inc
flds
je
inc
pushf
pop
add
lret
inc
pop
xchg
xchg
dec
js,pt
aad
in
cmpsb
or
xchg
cmpsl
out
loop
and
arpl
or
and
fdivs
pop
xor
lds
addr16
shlb
push
mov
jge
mov
cmpsl
or
xor
and
mov
or
mov
out
cmp
sbb
es
push
push
movb
xchg
cli
xor
or
nop
inc
jne
data16
or
cs
imulb
adc
push
mov
adc
test
jmp
or
mov
dec
mov
mov
roll
iret
xor
les
jb
lahf
cmovp
xchg
clc
sub
sbb
test
adc
xchg
xchg
mov
add
fldcw
jo
mov
mov
loope
popa
sti
mov
std
loope
inc
push
mulb
imul
xor
xchg
mov
add
orl
add
sbb
sub
and
arpl
jl
push
mov
mov
xchg
scas
outsb
sbb
fnstenv
fcomip
mov
jp
fistpl
push
outsb
push
jecxz
cmpb
jnp
mov
lret
movsl
sbbl
sarb
mov
pop
out
ja
mov
jne
push
jmp
lock
cmp
lret
rol
sbb
and
lcall
cmp
pop
addr16
in
frstor
adc
jle
xor
dec
into
push
pop
push
repz
mov
mov
push
call
mov
adcb
sub
cmc
inc
xchg
xchg
xchg
cmp
add
cmpsl
dec
shr
ja
repz
cmpsw
cli
fs
mov
push
pop
sahf
fsub
push
test
sbb
jl
mov
arpl
jb
and
mov
leave
lods
loop
rcll
push
jecxz
outsl
lea
sub
ret
pop
push
out
xchg
mov
dec
jmp
loope
lods
fimull
push
xor
out
lods
dec
mov
fisttpll
add
and
sbb
cmp
sahf
out
or
pop
clc
mov
mov
clc
das
and
sti
fmul
xor
leave
xor
mov
aam
and
mov
mov
or
je
push
aas
negl
sub
mov
cmp
add
orl
jb
rorl
xor
aad
push
mov
push
cli
cmc
xchg
int
mov
pop
push
ljmp
mov
inc
jp
sahf
push
xchg
icebp
adc
nop
lret
loop
aad
adc
dec
les
push
inc
scas
das
lcall
jnp
push
pop
scas
add
push
cmp
stc
test
lds
xchg
int
adc
pop
negl
sbb
adc
in
pop
xor
loopne
daa
and
in
imul
std
movsl
ret
adc
lret
dec
inc
es
lods
outsb
jl
cmp
jle
aaa
jle
mov
sbb
or
xor
pop
ljmp
lock
mov
or
flds
inc
xchg
add
sub
lahf
mov
push
cmc
repnz
stos
mov
pop
ljmp
xor
xor
cmp
cwtl
xchg
stos
pushf
cmp
rorb
inc
out
div
and
daa
daa
or
sub
and
addr16
jmp
rcll
push
sahf
bound
mov
and
sub
sub
add
add
loop
out
pusha
jns
sahf
dec
fldenv
push
lock
stos
cltd
push
and
sub
fisttps
cmp
jnp
push
in
or
lret
popa
ror
pop
je
sub
push
cmpsb
push
and
jg
xchg
cmc
xlat
cli
lahf
je
mov
aas
inc
xor
jmp
sbb
add
sbb
pusha
cli
out
gs
popf
mov
inc
pop
inc
aad
aam
or
push
fidivrl
pop
sbb
pop
inc
push
mov
inc
add
mov
mov
mov
jnp
mov
gs
cmc
cltd
and
sub
push
xchg
fbstp
arpl
adc
jbe
in
add
xlat
fisubrl
xor
push
lcall
fsubr
add
sub
push
in
lahf
int
jns
jg
mov
sbb
repnz
jg
iret
push
dec
test
dec
lahf
xlat
in
or
or
imul
pop
sbb
sub
push
sub
mov
jb
ret
dec
lock
hlt
call
xchg
cld
xorl
jae
out
out
nop
in
cmp
jecxz
sti
push
mov
xor
rolb
sub
sub
call
int3
push
jb
aam
stc
push
push
jb
jo
inc
xor
sub
jb
or
fidivl
mov
and
lock
cmp
arpl
test
adc
mov
popf
add
add
mov
xor
add
pop
push
cmp
and
add
nop
dec
idiv
iret
inc
in
outsl
mov
adc
sar
in
or
xchg
mov
out
mov
jmp
adc
std
jmp
inc
daa
inc
xor
pop
xor
pop
or
push
cmp
sbb
into
out
xlat
mov
std
das
leave
cmp
xor
fisubs
adc
sti
jno
fsts
cld
test
iret
mov
jnp
arpl
clc
jg
cmpsb
lods
fmull
movsl
cmp
dec
cwtl
sub
clc
mov
xchg
loopne
dec
ja
ret
mov
cmp
cmp
dec
nop
cmp
fcoml
test
adc
cmc
lahf
mov
jno
iret
shl
mov
pop
push
xchg
xor
stos
popa
popa
mov
xchg
push
sbb
mull
fcoms
or
push
xchg
pusha
aas
mov
mov
aam
jne
xor
insb
xchg
jnp
jno
stos
pop
in
or
int
push
aam
cmpsl
mov
into
push
push
pop
cwtl
sbb
push
xor
pop
pop
xor
test
push
push
cmpsb
jmp
std
jge
cs
xchg
sub
mov
je
pushf
or
lods
or
ret
or
push
jne
xor
jo
sbb
pop
es
fcmove
shlb
xor
inc
int
inc
insb
jne
in
and
test
and
rcl
adc
push
xchg
jo
jnp
scas
int
movsl
mov
dec
mov
cmpsl
mov
pushf
xchg
je
nop
imul
jae
ficoms
fwait
int
rclb
pop
pop
jmp
push
xor
inc
dec
sub
dec
rclb
dec
movsb
inc
dec
jo
out
add
mov
movsl
ds
mov
jbe
or
movsb
sub
mov
js
mov
xor
mov
mov
inc
fcom
jmp
pushf
mov
push
repz
fwait
inc
lea
repnz
pop
lds
scas
cmpsl
xlat
dec
jns
sarb
pop
dec
inc
push
aam
fildll
movsl
mov
or
shlb
sbb
jp
addl
jle
and
aaa
pop
inc
fmulp
gs
pop
mov
outsl
xchg
and
jle
jnp
in
mov
sub
leave
jg
pusha
sub
xchg
out
xor
push
push
stos
repnz
push
xor
sub
or
pop
outsl
sbb
call
jle
xchg
outsb
cmp
add
push
sbb
pop
ss
add
pop
or
std
lods
repnz
lret
ljmp
mov
movsl
iret
dec
jecxz
dec
adc
mov
lods
mov
stc
sub
popf
popf
shll
mov
das
mov
pop
out
and
insb
pushf
lret
jp
adc
pop
std
popf
add
mov
gs
add
loopnew
sub
idivb
or
inc
int
sbbb
cld
sbb
jl
mov
stos
adc
sbb
je
jl
sub
dec
xchg
inc
js
sbb
mov
imul
or
fs
lret
pusha
pusha
sub
xchg
bound
orl
jp
sarb
pop
adc
jno
fwait
and
iret
adc
and
cwtl
mov
push
mov
pop
ret
mov
in
sbb
jne
xchg
jmp
xor
mov
imul
incl
gs
mov
test
pop
enter
mov
mov
cmp
out
pop
xorb
iret
jns
imul
leave
js
push
fbstp
adc
xor
arpl
aaa
in
leave
jb
and
cmp
sti
pop
mov
xor
shlb
aaa
stos
out
hlt
fisubrs
inc
scas
adc
lea
jl
inc
int3
inc
aas
hlt
mov
sbb
add
scas
lods
add
xchg
notb
adc
adc
addr16
jne
scas
add
sbb
loope
push
mov
vmovntdq
mov
inc
pop
sbb
adc
lock
sbb
ja
lea
dec
jae
and
jmp
cwtl
cld
xorl
inc
adc
xchg
mov
adcl
add
lret
out
pop
xor
add
dec
nop
mov
add
jle
out
cmp
inc
or
outsl
incb
notb
mov
adc
ds
mov
mov
mov
mov
mov
sub
fistl
iret
pop
ja
das
imul
test
test
out
adc
das
insb
sbb
xor
aad
mov
inc
pop
ja
gs
sbb
data16
aaa
cwtl
cmp
leave
pop
insl
or
pop
cld
sub
dec
or
rcrb
int
out
lods
push
mov
stc
sbb
mov
ror
pop
sarl
sbb
rcl
jbe
sbb
idivl
icebp
call
lods
adc
decb
xor
in
inc
mov
adc
xchg
add
popa
mov
and
mov
hlt
icebp
into
insl
lods
in
into
sub
mov
jno
inc
or
fs
fcmovbe
inc
pop
adc
inc
mov
lahf
inc
cmp
cmpsb
cmp
add
sti
stos
fisubrs
jecxz
js
pop
aad
xchg
cld
in
movsb
or
pop
and
cwtl
mov
xchg
xor
lods
xchg
jge
push
imul
int
sub
in
mov
adc
sbb
and
lret
out
aaa
call
or
dec
add
insl
inc
and
shrl
mov
icebp
outsl
pop
lods
add
pop
cmp
push
pop
sbb
dec
je
popf
fnstenv
rcr
loop
xchg
cmp
or
js
outsl
andb
inc
push
sub
xchg
xor
cld
pop
jb
or
popf
mov
mov
cli
mov
jg
sbb
popf
mov
cmp
pusha
mov
repnz
inc
pop
push
dec
call
xchg
mov
and
shll
ljmp
adc
xchg
push
push
scas
inc
or
or
mov
add
rdmsr
xor
jns
popf
jae
sub
xor
mov
data16
lock
outsl
xchg
lcall
mov
clc
call
push
fcomps
mov
addr16
push
mov
popf
fstpl
xchg
push
fwait
stc
add
clc
out
loope
mov
enter
rol
ret
sbb
std
xchg
movsl
mov
popl
xlat
cwtl
ret
arpl
mov
sbb
jne
loope
stos
jle
xor
add
int
cmp
dec
push
aaa
movsl
xlat
sbb
xor
addb
dec
cmc
pop
inc
mov
rclb
sbb
mov
push
jp
ja
fxch
pop
lret
xchg
mov
dec
test
push
ds
outsb
xchg
dec
sbb
mov
dec
and
cltd
std
cmp
or
xchg
movsb
sbb
add
sub
mov
jp
out
ljmp
popf
into
add
ds
cmc
sub
addb
outsl
les
jmp
add
pop
ret
movsb
stos
sub
add
pop
lahf
setno
add
scas
mov
dec
lods
call
xchg
out
mov
jecxz
sub
mov
xor
jnp
nop
scas
push
sub
int
fisubl
adc
dec
fistl
or
inc
ss
jp
or
pop
mov
sti
push
sbb
frstor
and
dec
jmp
sbb
pushf
gs
scas
cs
push
test
add
push
std
inc
in
mov
xor
cmpl
repz
dec
jb
imul
cmp
test
decb
and
inc
int
xor
insb
push
mov
push
out
sbb
test
sub
mov
xor
ljmp
mov
js
addr16
push
cmp
ret
xor
pop
push
pop
inc
mov
fwait
mov
xor
stc
pop
ja
sub
xor
cmpsb
xchg
daa
cmpsl
cld
ljmp
imull
mov
push
mov
push
insl
dec
or
mov
loope
addr16
xor
xor
xchg
out
lahf
pop
adc
adc
repnz
rorl
pop
push
inc
fldenv
jno
push
mov
testl
push
gs
or
mov
mov
push
jno
xchg
insb
clc
sti
or
and
fldt
mov
shl
test
xor
and
andb
out
loopne
cmp
addr16
test
rolb
ljmp
sub
sub
std
or
mov
stos
es
enter
inc
push
dec
scas
lds
sub
movsb
cs
loope
lods
or
pushf
movsl
inc
xchg
pop
jnp
movsl
addb
or
mov
pop
xor
pop
mov
test
add
sahf
leave
cwtl
push
lds
aam
add
push
fsts
pop
jno
bound
add
outsb
inc
leave
mov
push
mov
push
add
xchg
mov
arpl
lods
ljmp
in
jns
test
xchg
fs
add
mov
jb
aaa
mov
dec
jge
fistps
rep
pop
xlat
int3
gs
cmp
inc
cmpsb
cld
jg
pop
push
inc
xor
nop
stc
mov
and
js
jg
mov
fcomi
cmp
mov
jge
sbb
xor
inc
adc
xor
add
jle
daa
scas
xor
xorl
fiadds
enter
addr16
mov
and
repz
lcall
or
jge
jbe
out
mov
and
adc
add
dec
adc
aas
jecxz
ret
ret
mov
push
std
push
xchg
add
mov
subb
test
xor
pop
and
arpl
pop
loopne
or
hlt
dec
xorb
mov
sub
scas
jo
and
sub
sub
inc
arpl
movb
test
push
xchg
in
inc
adcb
jns
aaa
jecxz
sub
mov
mov
pop
dec
addr16
inc
adc
sbb
addr16
or
je
test
cltd
cli
lods
hlt
sbb
popa
adcb
jl
sbb
pop
and
rcll
jle
mov
es
lcall
aad
divl
fwait
mov
stc
push
shrl
rclb
leave
mov
cs
xchg
jp
mov
jecxz
cmp
pushf
add
outsl
pop
xor
inc
lret
adc
aaa
sti
aad
fstps
or
lods
icebp
push
add
sbb
out
ds
dec
icebp
cmp
rcr
add
jmp
sbb
fadd
and
sub
pop
mov
cltd
add
fldl
adc
clc
mov
jno
jecxz
pushf
xchg
xchg
in
call
js
dec
jp
jge
and
sub
addr16
and
jmp
and
xor
lret
pop
ds
arpl
iret
add
mov
movsb
mov
push
cmp
jmp
cwtl
sub
jno
lret
cmp
adc
movsb
mov
nop
lea
mov
pop
adc
adc
out
adc
ss
dec
out
ud0
adc
add
insl
adc
push
pop
je
add
push
popa
push
and
jmp
lea
scas
mov
jge
mov
inc
cmp
mov
nop
arpl
xchg
pop
movsb
pop
ss
lcall
add
inc
mov
xor
jge
out
bound
jmp
rcrl
fimull
sub
ss
sub
push
adc
ret
incb
js
push
dec
adc
push
ljmp
lods
jl
pop
std
int
pop
pop
pop
imul
cmpsl
mov
test
xchg
xchg
xchg
xor
shl
std
outsl
mov
jp
xor
jmp
sbb
jle
mov
enter
jo
hlt
in
push
push
sbb
loop
loopne
or
das
out
xchg
rcrl
fmull
jbe
cwtl
adc
xchg
sbb
mov
roll
cmpsb
int3
ja
call
sbb
mov
cltd
and
mov
xor
vmulss
xchg
nop
xorl
imul
mov
int
adc
xlat
inc
xor
loope
mov
pop
pop
test
pop
sti
sub
sbb
xor
jbe
jl
mov
imul
ret
cmpsl
mov
mov
sbb
and
sbbb
faddl
imul
add
out
or
adc
fadds
ss
xchg
sub
xor
xchg
dec
mov
js
daa
sbb
leave
xchg
jnp
mov
call
and
fidivrl
push
out
dec
jle
in
out
sarb
sarb
aad
lcall
push
push
imul
jae
inc
push
push
pop
jecxz
push
lahf
jo
push
enter
mov
jns
or
test
mov
cmpsl
clc
add
pop
mov
cmp
movsb
jo
xor
lods
add
adc
into
out
jle
inc
mov
mov
inc
push
jmp
cmpsl
push
and
movsb
add
sti
add
cmpl
push
idiv
popa
fwait
aas
jo
cmpsb
in
add
int3
clc
fdivs
rcl
scas
push
and
addl
push
movsl
outsb
lods
adc
repnz
outsb
rcr
pop
cmp
push
nop
fisubs
mov
inc
mov
std
xchg
or
xlat
rcrb
fbstp
pop
xchg
pop
add
jmp
je
xor
mov
sti
or
push
mov
xor
jb
mov
fsubrs
leave
orb
ja
push
jne
rcr
mov
jecxz
fs
imul
sbb
ss
jno
lock
add
bound
in
cmp
mov
ret
shrb
arpl
mov
loope
cmc
aad
jmp
imul
rcrb
scas
loopne
fcmovnbe
fmuls
adc
cs
push
iret
jp
outsb
ljmp
rclb
push
sub
mov
aad
mov
mov
mov
scas
js
out
xchg
pop
test
popa
push
test
bnd
mov
in
sahf
dec
sub
lods
push
and
fildll
scas
lahf
shll
and
call
leave
lods
dec
stc
adc
enter
inc
fisttpl
scas
pop
aad
and
cmp
in
jp
and
sbb
ror
xchg
ja
gs
push
pop
add
jge
fildll
mov
sub
into
jle
mov
ret
jmp
lret
sbb
addb
cmp
and
scas
lods
jge
in
or
push
loop
int3
pusha
rcrb
inc
iret
shll
lret
push
jbe
add
fsts
loopne
fmulp
mov
push
and
sbb
dec
popa
xchg
jl
mov
add
xor
hlt
imul
pop
loope
jmp
sub
mov
call
mov
into
sbb
lret
dec
fsubrs
xor
test
cmpsl
ljmp
jle
pop
push
popf
xor
ror
dec
adc
mov
lea
cmp
outsb
lret
dec
aam
out
jae
leave
std
loop
imul
push
and
in
test
rcrl
test
xorl
test
cmp
mov
fldt
jg
xchg
ds
cmp
fwait
shlb
pop
fs
or
adc
call
sbb
out
addr16
sbb
cmp
test
inc
stc
stos
mov
inc
mov
jns
mov
loop
xchg
and
adc
adc
sbb
sbb
das
lock
mov
sub
mov
inc
outsl
into
and
leave
pusha
cmp
push
sbb
add
loopne
rorl
insl
das
js
add
cmp
adc
movsl
jmp
pop
fmull
inc
pop
add
movsb
call
daa
data16
les
fisttps
dec
mov
jmp
stc
sbb
or
addb
cmpl
mov
cmp
and
stc
lea
inc
js
inc
push
movsl
lfs
adc
adc
loopne
mov
cmpsl
pop
jnp
enter
adc
fmull
bound
cld
mov
cmpsl
shll
int3
bound
cld
pop
and
test
mov
mov
daa
gs
fdivl
mov
pop
psubsw
loopne
repnz
cmpsw
ss
adc
pop
pop
popf
jb
rcl
mov
jmp
mov
push
clc
sub
repnz
sbb
pop
adc
xor
jge
pop
lret
lcall
ja
xor
insb
jno
and
xor
mov
stc
sub
fdivr
ror
sub
mov
daa
and
cmp
mov
sbb
lahf
pop
fsubs
std
xchg
push
mov
clc
je
jo
cli
repz
in
mov
loope
lods
fiadds
cmpsl
ss
mov
imul
std
push
sub
lea
mov
jnp
ds
insb
jge
mov
loopne
adc
in
sub
orb
fnsave
mov
out
cwtl
addl
adc
cwtl
sub
fisttps
add
hlt
lock
ja
push
test
fwait
push
int3
loope
out
in
mov
mov
psrlw
sub
stos
sbb
dec
inc
inc
cmp
outsl
movsb
scas
aad
into
mov
fists
inc
pop
cmp
or
dec
mov
mov
mov
sbb
xor
movsb
ja
in
sbb
mov
mov
pop
or
push
stos
add
inc
dec
mov
xchg
imul
and
jbe
pop
mov
movb
fisttpll
inc
lret
std
insl
jae
push
outsb
jle
mov
xor
test
push
push
enter
sahf
lods
test
call
mov
fidivl
sub
cwtl
loope
xor
sub
xor
sub
pop
pop
mov
xor
loopne
ljmp
xor
cltd
shrl
addr16
dec
arpl
mov
ljmp
dec
fmul
femms
fwait
jo
pop
jle
and
or
jg
in
push
leave
mov
mov
dec
pop
shll
stc
pop
ja
mov
std
adc
in
cmp
dec
ret
clc
adc
xor
insb
inc
stos
sti
add
shl
fcmovnb
jnp
outsb
xchg
lcall
xchg
mov
mov
sbb
push
test
repnz
stos
mov
hlt
cs
lahf
pusha
add
push
jl
stos
sarl
and
cwtl
xor
jge
shlb
sub
inc
pop
out
inc
push
push
push
sbb
adc
aam
sub
aas
adc
mov
and
and
xchg
pop
das
pop
fisttpl
jge
std
dec
cli
test
leave
loope
andb
mov
xchg
cli
mov
and
and
scas
adc
and
mov
aam
fnstenv
xor
sbb
sbb
cmp
mov
mov
das
ret
flds
adc
inc
jns
xchg
xor
repz
xor
repz
pop
push
and
mov
bound
ret
aaa
aad
and
push
adc
fmull
adc
adc
and
shlb
loope
sub
sbb
icebp
lahf
add
adc
and
clc
out
adc
cwtl
push
add
imul
mov
mov
mov
pop
push
hlt
xchg
mov
cltd
aam
xchg
pop
add
mov
mov
addr16
dec
sahf
pop
aas
loopne
add
leave
dec
inc
adc
data16
inc
pop
cltd
adc
jbe
push
in
mov
cmp
or
movsl
mov
fwait
push
loopne
pop
jbe
lcall
push
add
or
test
iret
adc
pop
adc
push
adc
push
xchg
std
mov
jecxz
pop
sbb
cmpsb
fcomps
jmp
out
dec
mov
mov
push
push
or
pusha
and
daa
cmp
jb
cmp
fcmovnu
jmp
push
test
jns
push
movsl
aad
out
or
push
mov
stos
xchg
mov
jmp
mov
jo
cli
or
cmp
loope
movsl
adc
clc
test
inc
stos
inc
xchg
pop
addr16
sub
mov
inc
dec
sub
loopne
jae
mov
movsb
in
adc
or
mov
rcrb
roll
adc
mov
add
movsl
cmp
jp
and
jne
pop
push
mov
jp
sarl
arpl
xor
xchg
pop
test
ficomps
loop
cld
scas
xor
lock
fldcw
jns
decl
push
aam
xor
inc
sbb
aad
pop
popf
push
cmc
xchg
lcall
dec
mov
outsl
mov
adc
pushf
inc
jo
aaa
dec
adc
lret
pop
adc
pop
cld
imul
mov
and
sti
sahf
iret
dec
pusha
or
cmp
fstpt
adc
adc
out
cmpsb
cmp
adc
rclb
ja
sbb
stos
div
psubsw
xor
addr16
hlt
sub
add
mov
mov
inc
pop
das
inc
int
jmp
dec
cld
cli
xchg
inc
daa
les
orl
incl
aas
mov
sub
fadd
movsb
inc
out
xchg
mov
mov
pop
cmp
inc
xchg
das
add
mov
ja
outsl
ja
pop
cmpsl
sub
in
sbb
mov
fisttpl
mov
dec
mov
fisttpl
pop
or
mov
dec
add
xchg
imul
or
cld
mov
test
out
das
adc
xchg
fs
jbe
lcall
inc
inc
je
loopne
lahf
adc
jnp
adc
sub
sti
in
jbe
loopne
mov
dec
xchg
adc
sbb
cmp
xorl
xor
cs
dec
and
mov
test
mov
frndint
push
push
ds
mov
cld
and
shlb
mov
out
fistpll
mov
mov
jle
fidivl
pop
mov
scas
cmpsl
and
jge
loop
sbb
push
shlb
xchg
xlat
dec
movsb
and
xchg
inc
pop
popf
and
jns
repz
mov
jle
repz
hlt
mov
sbb
push
xor
lcall
addr16
js
sti
aam
stc
or
cmpsl
pop
cmovg
mov
mov
pop
and
or
mov
xchg
adc
push
int3
cmpsb
in
mov
adc
ja
pop
adc
add
add
xlat
xor
jno
ja
and
cmpsb
and
daa
test
cmpsl
loop
inc
je
gs
xchg
shl
and
mov
std
pop
xor
inc
jmp
insl
xlat
hlt
fimuls
fwait
in
ljmp
cmp
mov
or
lock
push
add
inc
push
xorb
sbb
cmp
leave
xor
dec
fdiv
fwait
movb
add
dec
jne
movsl
or
js
jns
push
inc
sub
lret
push
push
aad
sbb
push
mov
int
dec
clc
fs
add
test
pushf
into
insb
pop
jnp
insb
ja
imul
xchg
xchg
mov
cmp
jb
arpl
jno
push
pop
xchg
or
out
mov
je
sbb
test
loopne
add
mov
movups
int3
xchg
imul
push
pushf
insb
add
ret
jbe
frstor
add
jg
add
stos
cmp
scas
push
sub
jns
lock
mov
mov
push
jmp
imul
fldcw
adc
or
dec
ds
jmp
inc
pop
mov
xchg
sahf
mov
aaa
arpl
dec
cld
arpl
jb
lods
negl
push
mov
xchg
les
jno
xchg
xor
sub
jge
int3
mov
inc
push
ja
xchg
iret
dec
icebp
sub
lahf
mov
lret
push
sub
clc
pop
ss
inc
test
sub
fcmovu
mov
cli
mov
sarb
dec
test
dec
push
pusha
sbb
add
mov
mov
xlat
leave
daa
adc
xchg
subl
dec
aad
loopne
popf
fsubs
sub
call
ds
dec
ds
fists
fldcw
xor
aad
xor
mov
iret
fidivrs
add
mov
out
rclb
xchg
pop
cmp
sbb
mov
jns
repz
inc
das
fmuls
test
leave
push
mov
sbb
jl
fs
push
ds
pop
imul
adcb
insb
jo
mov
mov
ss
dec
dec
xchg
in
push
push
repz
aam
pop
mov
pop
fdivrl
lock
daa
sub
mov
pushf
or
push
mov
jne
mov
mov
pop
dec
fs
pushf
jecxz
movsb
andl
ret
sub
cltd
mov
mov
lods
test
cmp
pop
insl
insl
jl
mov
stc
add
mov
call
call
dec
aas
pop
movsl
int
addr16
xor
rorb
xchg
and
and
lcall
lahf
cmp
xchg
insl
dec
sub
mov
adc
pop
inc
or
in
xchg
leave
test
into
das
or
push
xor
scas
push
add
cltd
sti
xchg
xchg
and
mov
out
mov
movsl
xchg
xor
js
xchg
push
pop
push
inc
mov
mov
sbb
push
lcall
out
cld
fimull
add
mov
call
aaa
stc
add
das
nop
mov
inc
adc
mov
aaa
mov
inc
mov
popf
jg
cltd
je
xchg
stc
dec
mov
mov
dec
rorb
shll
iret
aam
hlt
lods
inc
sub
insl
in
xchg
mov
sub
bound
inc
push
jno
incb
sub
sbb
inc
cld
loopne
test
pop
js
pusha
inc
add
jg
out
mov
das
fsubrl
in
out
rolb
outsl
shll
xor
mov
aaa
fldenv
in
xchg
inc
cmp
lahf
mov
or
xchg
imul
fisubrs
adc
roll
sub
sbb
adc
sub
add
push
lds
mov
inc
push
xchg
add
imul
push
or
pop
jecxz
push
jnp
cmp
ss
addr16
xchg
fs
out
je
add
rorl
fadd
xlat
inc
jecxz
mov
sub
inc
repz
adc
xchg
cmpsb
mov
and
push
push
jae
outsl
pop
testl
ss
insb
pop
out
cmp
cmp
dec
aas
andb
mov
mov
arpl
mov
add
loope
push
xchg
or
xchg
ljmp
out
repz
iret
xor
cld
decl
and
mov
cli
adc
loop
test
fiadds
xchg
sti
int
stos
es
xorb
enter
add
mov
pop
stc
and
dec
cmpsl
xor
add
lret
out
shrb
shll
mov
mov
xchg
addr16
jnp
cmp
xor
sub
inc
ret
addl
mov
sub
repz
insl
push
or
lcall
js
psllq
iret
cli
cld
xchg
fisttps
rol
arpl
mov
inc
dec
dec
or
push
pop
pushf
shl
fwait
jbe
push
fisubl
repz
aas
pop
pop
arpl
mov
cmp
pusha
push
insl
out
stos
out
push
lcall
sbb
rorb
pusha
leave
pop
nop
iret
sub
fwait
in
inc
adc
out
pop
mov
subl
jne
or
inc
cmc
jno
addr16
mov
mov
mov
adc
sbb
cmp
xor
and
cld
mov
ja
cmc
clc
movsl
xchg
jns
push
or
mov
xor
fimull
dec
cwtl
gs
mov
outsb
sarb
call
shrl
sub
shr
int
into
lock
xchg
sub
xchg
or
subl
xchg
jp
pop
dec
mov
jo
dec
test
lahf
xor
lret
js
outsl
mov
sbb
xor
in
add
fsub
jp
insl
mov
jp
sub
insl
je
mov
dec
popf
mov
sbbl
ret
int3
lret
mov
mov
andb
fists
shlb
xchg
sub
dec
jge
clc
mov
pop
dec
scas
dec
imul
mov
push
sbbb
icebp
iret
pop
lcall
outsl
arpl
jbe
aaa
scas
cmp
lea
decl
cwtl
dec
inc
cmp
mov
mov
mov
out
jns
jecxz
sti
adc
or
jmp
scas
dec
and
out
outsl
inc
fiaddl
adc
sbb
push
ja
pop
or
sti
jecxz
cmp
aad
push
mov
stos
push
or
jns
dec
cmp
push
sub
rclb
mov
dec
aam
mov
push
orl
pop
jo
jl
and
sarl
inc
adc
cmpb
mov
push
clc
ficoml
mov
cmp
jnp
pop
in
iret
and
sub
push
mov
hlt
faddl
addr16
sbb
sti
outsb
out
xlat
vmovntps
inc
fistl
out
inc
cmp
adc
mul
les
xchg
push
sub
insl
out
push
add
or
mov
add
test
aad
fistps
lods
rclb
ljmp
popf
mov
test
dec
fbstp
adc
mov
jle
inc
and
dec
push
sub
adc
xor
mov
pop
xchg
notb
push
push
out
push
dec
ret
aaa
sub
stos
push
adc
ficoms
gs
imul
lods
lea
or
cli
jg
pop
call
lods
shlb
pop
inc
fmull
out
xchg
mov
out
push
xchg
divb
push
xor
inc
adc
lcall
jl
imul
ret
xchg
mov
jae
mov
xor
pop
inc
jl
into
push
dec
jns
into
loope
sub
cltd
dec
xchg
or
xchg
imul
push
jb
in
loope
adc
jb
inc
mov
xor
mov
pop
dec
cmp
mov
stc
repz
push
adc
in
fisubs
sub
add
das
xchg
shrl
xor
jmp
xor
or
insb
xor
outsb
sub
jno
xor
shll
mov
xchg
sti
cmpsb
adc
and
mov
jl
out
mov
insb
and
lret
rcl
ret
cmp
and
ljmp
mov
int3
dec
fiaddl
xor
jl
push
mov
xor
lcall
add
pop
dec
mov
cmpb
mov
dec
sub
lods
enter
in
mov
dec
and
ljmp
sbb
add
pushf
inc
scas
pop
hlt
mov
imul
xor
popf
xor
push
ljmp
or
cli
xchg
jb
pop
outsl
punpckhwd
or
call
aad
push
call
push
dec
xchg
test
das
adc
mov
xlat
ljmp
test
mov
sbb
inc
inc
add
and
cmp
inc
inc
and
icebp
inc
repz
inc
xchg
les
clc
icebp
and
xor
js
pop
xor
sahf
push
or
test
push
jmp
pop
ss
jg
scas
mov
mov
and
lods
pusha
ljmp
xchg
ret
jo
sahf
fsubrs
out
pop
cmpsb
rcr
sub
scas
insb
push
daa
stos
xchg
add
notl
mov
mov
cmpsl
cmpsb
cmc
out
das
or
jge
adc
imul
shrl
cmovns
sub
fdivp
ds
lods
mov
xchg
mov
mov
sbb
data16
inc
or
ja
lcall
insl
xchg
stos
fs
js
jmp
xor
dec
xor
out
xor
push
jnp
ret
xor
add
pusha
arpl
jne
cmc
mov
pop
ror
lds
dec
push
out
aad
pop
jg
inc
xchg
jle
rorl
inc
imul
ss
in
loope
or
cmp
out
shlb
cmp
aam
dec
or
xor
pushf
mov
lods
mov
popf
hlt
lret
cld
mov
shrl
loope
xchg
cwtl
pop
int3
push
int3
flds
mov
test
push
sbb
sub
cltd
mov
or
pop
xchg
rcll
icebp
sbb
js
lea
out
nop
jnp
les
xor
mov
int
inc
jg
pop
sub
sti
pop
ret
or
daa
xor
and
call
sbb
cmp
mov
andl
jns
movsb
mov
and
and
sbb
pop
lock
stos
push
mov
and
mov
mov
sbb
repz
mov
movsb
xchg
test
mov
or
push
loop
cmp
test
js
lcall
inc
push
cs
lcall
arpl
shlb
mov
mov
mov
xchg
mov
insb
and
push
cmp
cli
push
fiadds
and
sub
mov
jl
push
inc
fs
mov
pop
cmp
add
scas
icebp
repnz
pop
out
add
dec
sarl
add
mov
lret
nop
loope
cmp
int
inc
xchg
pop
lods
push
jne
cmp
dec
push
mov
stos
push
cmp
xchg
mov
add
sahf
leave
jl
test
adc
js
inc
mov
dec
je
fstpl
mov
paddd
xchg
inc
add
adc
xor
call
fldt
fucom
out
pop
ds
pop
or
xchg
dec
mov
pop
pop
dec
cmc
push
shrb
mov
sub
cld
popf
call
std
fadds
comiss
movsl
fidivrs
aam
and
les
xchg
jle
mov
mov
cmp
test
pop
lea
je
xchg
dec
mov
ret
ljmp
xorb
subl
jecxz
xlat
repnz
arpl
push
push
inc
jl
mov
imull
mov
addb
lret
and
mov
xor
pop
movsl
cmpsb
inc
push
into
fcomps
ret
incl
shl
fst
jp
test
cmp
jp
xor
push
fwait
or
and
add
enter
bnd
scas
aam
insb
jbe
dec
fs
popf
and
mul
dec
sbb
xor
mov
int3
movsl
jno
pop
idivb
mov
xchg
fcmovnb
es
dec
dec
jne
add
out
scas
jmp
mov
rclb
jge
aad
pusha
dec
xorl
dec
fbld
fimull
mov
stc
or
inc
adc
roll
jmp
int3
in
shrb
ficompl
sahf
pushf
jecxz
cmp
es
test
fstpt
je
and
aaa
das
dec
andb
xor
stos
sub
loope
in
cmpb
xchg
dec
aas
pop
nop
or
clc
jns
sub
mov
adc
push
sub
bound
aas
scas
jp
inc
xlat
out
dec
enter
insl
mov
cmpb
push
cmpsb
cld
in
push
mov
stos
insl
mov
mov
ljmp
mov
mov
cli
fistl
sub
mov
push
push
imul
ret
fstpt
jae
cmp
sbb
test
lock
icebp
clc
outsl
mov
and
and
or
cmp
aas
pop
dec
mov
shr
cmpsb
sub
scas
out
mov
jae
insl
mov
in
mov
dec
daa
arpl
sub
mull
divl
xor
lds
sbb
adc
addb
rclb
jne
sbb
std
shll
lret
push
mov
je
mov
xchg
cmp
lea
sub
aas
xorl
mov
mov
pop
push
daa
fsubr
push
xchg
ja
adc
jbe
mov
add
push
fbstp
aad
mov
shlb
dec
loopne
jp
mov
dec
push
or
mov
dec
jns
jo
dec
das
mov
imul
call
adc
stos
adc
push
adcl
push
sbb
pop
lock
std
inc
sub
mov
sbb
add
mov
andl
mov
sbb
loopne
cs
xor
xor
lock
or
push
fwait
mov
insb
arpl
lar
mov
jge
dec
loop
scas
cmc
lcall
mov
ret
xchg
adc
xor
fidivs
loopne
push
push
hlt
test
mov
std
xchg
popa
cmp
jl
pop
cmp
mov
sub
cs
iret
inc
loopne
push
mov
pushf
add
mov
aaa
dec
add
jae
mov
shll
into
mov
iret
ret
out
repnz
mov
in
add
int3
mov
loope
and
es
or
mov
jl
add
sbb
adc
lods
outsl
fstpl
mov
stos
mov
xor
std
push
imul
add
arpl
int3
fwait
dec
lcall
outsl
loop
lahf
pop
jle
lds
int3
push
cmp
in
and
fsubrs
loopne
cmp
cmp
mov
stos
lea
popf
je
jl
cwtl
dec
mov
jns
repz
adc
aam
in
ficoml
idiv
int3
jl
mov
int
jae
push
push
push
aad
sbb
adc
mov
movsl
pop
mov
xor
dec
push
and
xlat
cmpsl
subb
push
mov
je
call
orb
ror
inc
iret
aad
xchg
pop
data16
movsl
xor
inc
push
out
cmp
adc
icebp
cld
sbb
mov
sub
mov
or
add
push
int3
jmp
inc
pop
lods
shrl
xchg
out
push
mov
sub
lock
xchg
add
xor
in
flds
scas
popf
add
shl
lea
pop
popf
push
outsl
dec
dec
les
push
add
int
inc
sbb
cmpl
push
mov
lods
cs
lock
arpl
push
and
es
pop
pushfw
push
movsb
add
push
shlb
adc
ret
loope
mov
in
lock
xor
insl
jg
and
or
and
das
and
arpl
lret
dec
jo
mov
sbb
mov
cltd
pop
sbb
clc
cmp
pop
fdivrl
or
loopne
lahf
cmp
in
fmuls
mov
bound
into
push
push
test
faddl
cmpsl
and
pop
fistps
sbb
pushf
add
push
pop
jg
xor
lods
fisubrl
out
sbb
sbb
add
mov
js
jbe
das
filds
push
jnp
shr
jecxz,pn
mov
icebp
push
jle
ds
pop
and
jne
shl
ficoml
and
pop
cli
pop
imul
pop
jg,pn
push
push
xchg
cmp
push
loop
pminsw
mov
or
push
sub
push
jbe
push
lahf
mov
les
sti
das
loop
jbe
in
ret
mov
clc
xchg
add
scas
arpl
imul
mov
sbb
jbe
jg
fwait
das
fsubs
xchg
adc
cltd
test
nop
notl
gs
or
addb
movsl
mov
push
call
dec
mov
adc
cmp
mov
lcall
jae
pop
lock
stos
popa
int3
add
imul
mov
mov
insl
sub
push
sbb
test
cmc
cmp
inc
enter
cmpsb
rclb
xchg
inc
scas
jo
clc
mov
mov
dec
or
jo
add
pop
sahf
aad
ficoms
mov
ds
fistps
call
jl
cmp
jns
or
aad
bound
mov
mov
test
mov
in
sub
iret
enter
addr16
cmp
into
sbb
dec
outsl
addr16
add
fwait
jecxz
mov
dec
lock
dec
and
mov
movsb
cs
dec
bound
arpl
inc
mov
test
sub
sub
int
test
pop
test
jnp
hlt
push
stos
push
gs
jp
mov
fcomi
hlt
fbld
cmp
jns
xor
sub
in
dec
dec
jg
cmpsb
loop
cmp
stos
cld
test
enter
mov
or
sti
add
mov
lock
cmc
mov
mov
push
cmc
xor
aas
dec
movsl
test
sbbb
pop
jmp
es
and
jge
push
sbb
and
fs
add
bound
in
or
adc
cmp
rolb
xchg
mov
sbb
xor
mov
sub
adc
xor
xchg
rcl
jne
loop
int3
es
fbstp
add
xchg
fwait
adc
pop
outsb
or
mov
outsb
std
pop
je
das
sbb
js
addr16
pusha
inc
out
add
cwtl
dec
sub
pusha
sub
or
dec
jmp
ret
dec
sbb
inc
jg
push
sbb
mov
dec
jmp
mov
sarb
loope
mov
mov
or
mov
mov
ds
jg
ret
cltd
cmpsb
cmc
inc
xchg
rorb
cltd
pop
fisubl
insb
pop
movsl
pop
add
out
push
mov
imul
pop
rcr
push
xor
aam
aad
or
rcl
cs
out
push
adc
sub
lods
cmp
bound
lds
inc
jl
and
pop
stos
mov
sub
xchg
xchg
cli
jno
mov
mov
rol
test
roll
lds
mov
cltd
push
popl
out
xchg
aad
push
inc
xchg
xor
repz
ret
bound
mov
inc
mov
xchg
mov
cmp
push
call
movsl
mov
loopne
leave
into
rcrb
mov
sub
inc
add
pop
pop
pop
or
mov
add
add
cmp
sahf
aad
add
enter
pushaw
sub
sub
outsb
add
sti
add
add
mov
popf
and
push
aad
icebp
rol
and
sar
adc
cmp
out
jb
imulb
adc
mov
xchg
fs
clc
dec
jg
addb
xlat
push
sahf
out
xor
jo
fdivrs
xchg
test
insl
or
inc
cltd
std
mov
xchg
cmp
in
insb
aas
lahf
xchg
pop
fisubrs
test
call
push
and
mov
loop
mov
mov
es
shrb
mov
stc
jg
mov
pop
or
fsubs
outsl
mov
mov
and
mov
push
addr16
enter
jbe
sub
jnp
clc
add
pcmpeqd
loop
pop
push
mov
add
mov
jp
stos
insb
mov
fisubrs
sub
arpl
sahf
adc
sbb
bswap
lea
jmp
lret
ret
das
fdivrs
pop
push
daa
jbe
ret
add
fwait
mov
and
scas
test
jno
fnstenv
adc
addr16
out
lahf
sub
cld
jp
mov
mov
arpl
ds
xchg
add
cwtl
inc
stc
fcoms
gs
push
ss
insb
addr16
jle
addr16
lret
dec
cmpsb
loopne
mov
loope
push
sbb
add
jecxz
ljmp
jne
pop
add
in
fcomps
mov
leave
shll
inc
mov
stc
add
jle
cmp
xchg
pop
imull
ja
lcall
inc
push
fadds
loopne
jne
jmp
into
jbe
rcrb
int
out
scas
das
sbb
or
cmpsb
fcoml
xchg
pop
push
xchg
call
push
das
add
out
sub
call
push
ret
xchg
ljmp
jg
insb
test
dec
adc
mov
jns
jp
inc
pop
push
std
push
xchg
xchg
cltd
clc
adc
mov
mov
adc
dec
sarl
pushf
js
mov
sbb
mov
jno,pt
fcmovnu
scas
jp
in
test
mov
sub
add
dec
jno
pushf
insl
inc
aam
shl
mov
pop
out
cld
inc
faddl
insb
lock
pop
aam
inc
imul
loopne
sti
fnstcw
dec
mov
int3
jbe
nop
lods
bound
ret
inc
cwtl
hlt
inc
ret
xor
dec
jg
jo
xchg
mov
pusha
pushf
movsl
loopne
pusha
mov
push
adc
fdivl
xchg
pop
dec
cmpsl
in
adc
push
and
int3
outsb
inc
int
cwtl
scas
sbb
dec
leave
scas
mov
cld
dec
cmp
pop
pusha
ret
push
or
mov
jge
jl
clc
loope
rolb
mov
xor
bound
sahf
or
sub
je
add
stos
cmpsb
jge
pop
mov
inc
xchg
fwait
shr
vandps
pop
cs
and
fs
repnz
xlat
push
pop
iret
sahf
mov
fstpt
mov
cmp
call
push
gs
lret
jbe
insb
push
push
jo
out
les
dec
test
dec
mov
push
inc
jecxz
cld
clc
jb
ss
cli
xchg
cmp
loopne
je
jg
sti
xor
notb
mov
int3
jnp
mov
std
mov
cmp
ror
cmp
out
lods
mov
outsl
mov
repz
mov
sub
mov
xor
cmp
icebp
mov
sbbb
push
sbb
jb
scas
dec
icebp
imul
in
aam
aas
mov
repz
xchg
loopne
sarb
insb
movsb
jmp
mov
pop
push
xor
loop
push
dec
xchg
je
pop
aam
mov
rorl
out
add
dec
repnz
orb
dec
mov
test
xchg
ret
push
sub
fwait
dec
adc
in
dec
mov
xchg
into
in
int3
and
fstpt
push
hlt
mov
sub
add
in
jecxz
ja
rorb
loope
mov
xchg
xchg
ljmp
gs
add
pop
add
lock
in
cmp
mov
jnp
pusha
sbb
mov
scas
lock
bound
jmp
movb
lret
daa
push
cli
js
fwait
aam
lods
xchg
mov
push
aad
lds
mov
xchg
fcmovnu
cli
rcrl
inc
push
aas
ucomiss
test
out
xchg
adc
aam
mov
addb
lret
cld
or
je
mov
mov
inc
and
and
loope
ret
ror
mov
push
or
mov
aam
imul
stos
sub
enter
mov
jl
xchg
rcll
in
add
mov
mov
cmp
add
imulb
dec
fs
rcrb
push
ret
and
ret
inc
or
lcall
cmc
adc
mov
push
or
loope
pop
nop
stc
push
dec
icebp
mov
mov
pop
adc
xchg
mov
adc
xchg
push
cmc
adc
inc
push
xchg
repz
and
jle
jl
xchg
loope
shr
pop
cs
xor
rorl
sbb
jmp
cwtl
pop
jl
push
sub
in
push
inc
mov
mov
in
xor
sub
nop
pop
xor
jb
dec
and
pop
xchg
add
out
xchg
mov
jae
cmp
push
test
pop
int3
or
ja
push
andb
mov
incl
outsl
daa
hlt
dec
jmp
mov
jo
test
xchg
sbb
push
insl
daa
jg
mov
cmpsb
push
jmp
xchg
bound
xchg
call
call
mov
fnstenv
mov
mov
mov
xchg
insb
out
add
pushf
les
sbb
inc
test
out
repnz
sbb
xor
dec
ds
push
dec
imul
xchg
and
xchg
repnz
insl
inc
in
out
popa
les
mov
fidivrs
dec
and
push
setle
daa
in
out
adc
mov
lea
jnp
data16
pop
loope
mov
mov
ss
push
adcl
push
arpl
ret
out
clc
inc
adc
pop
mov
sbb
jp
subl
adc
clc
hlt
repnz
movsb
pop
movsl
addr16
ss
fs
dec
xor
lods
inc
cltd
stc
adc
pop
pop
ja
and
and
push
pop
insb
xchg
push
test
std
dec
jge
or
cmpsb
das
or
jle
mov
cmp
cld
mov
jge
test
lret
insb
jecxz
ds
stos
or
sub
push
into
mov
push
adc
fadds
push
push
out
sbb
jmp
ds
add
jae,pn
pop
mov
cmp
and
add
movsb
pop
push
outsl
cmp
xchg
loope
adc
loopne
movsl
mov
aaa
jb
js
mov
jnp
test
xor
pop
mov
sub
cld
mov
sub
and
call
mov
mov
mov
xor
xor
mov
dec
xor
in
or
pop
dec
repz
clc
scas
mov
cli
push
iret
imul
hlt
cmp
inc
jp
mov
rorb
mov
lcall
xor
shrl
adcb
lret
ja
xor
andb
pop
data16
push
divb
lods
lret
mov
xchg
jp
insl
or
inc
mov
in
scas
or
adc
loopne
cld
jl
lea
and
out
pop
mov
and
mov
cmpsb
sbb
fnstenv
push
das
mov
shrl
leave
mull
adc
mov
inc
pop
das
fsubrl
jle
mov
es
mov
insb
jp
inc
push
in
pusha
mov
xchg
test
xor
repnz
mov
imul
xchg
cmpxchg
inc
imul
mov
ss
loopne
in
add
rcl
loopne
aam
cld
push
mov
lcall
or
hlt
xor
and
test
ljmp
push
xor
mov
test
xchg
jo
xor
push
ja
jecxz
push
std
popf
add
jbe
divl
mov
sbb
inc
push
mov
adc
shlb
push
gs
cmp
mov
ljmp
stos
mov
pop
sub
lods
out
gs
in
cmp
in
jp
push
test
fsubp
out
pop
jb
cli
fisttpll
das
mov
je
arpl
or
and
sbb
cmp
fidivrs
ljmpw
and
or
test
xchg
test
notb
xchg
adc
ds
mov
jne
cmp
push
repnz
sbb
cmp
in
cli
mov
das
shrl
lock
lahf
call
sbb
add
test
je
out
fdivs
jg
push
mov
inc
imul
fimull
inc
cs
std
ror
inc
mov
jo
mov
jae
outsb
incb
andb
jle
dec
jl
jge
cld
mov
jmp
mov
mov
pop
insl
stos
push
in
inc
test
inc
cmpsl
daa
out
insl
std
aas
aam
dec
sub
fisubl
ss
shl
dec
push
ljmp
adcl
xor
inc
adc
push
inc
in
mov
xor
mov
xor
cmp
in
ret
aaa
inc
xchg
clc
add
xor
cmc
inc
fistpl
pop
dec
push
int
cmpb
jle
mov
push
stos
ds
add
or
popa
pop
mov
popf
dec
cmp
mov
mov
jmp
push
paddd
leave
cli
mov
jno
push
push
cltd
mov
jg
sub
mov
pop
in
jge
jne
push
dec
aad
jge
mov
pop
sub
into
xor
sbb
and
or
mov
test
stos
mov
shll
rclb
ficompl
sub
dec
das
or
jmp
or
and
pop
idivb
mov
push
push
xor
cmpsb
mov
push
inc
inc
xor
into
mov
sbb
pop
js
add
icebp
dec
dec
test
shlb
ret
mov
inc
out
dec
dec
pushf
sub
push
and
fsubp
cld
dec
mov
out
testb
jo
call
pop
les
nop
dec
push
inc
and
mov
push
in
jns
mov
pop
cwtl
pop
imul
add
out
dec
mov
sub
in
or
pop
sbb
inc
stos
out
xchg
sbb
orl
outsb
pop
pop
mov
add
outsb
mov
mov
add
jmp
ret
popa
iret
mov
sahf
test
ret
adc
loop
cld
loop
mov
nop
mov
jle
test
xor
pop
add
out
pop
movsl
pop
jo
mov
sbbb
mov
jae
mov
mov
jmp
dec
fwait
mov
int
mov
cmpsl
les
cltd
sbb
scas
push
outsl
xchg
jecxz
sbb
jbe
push
cmp
ficoml
mov
mov
jb
dec
dec
cmovl
xchg
cli
lods
add
add
sub
mov
leave
aas
popa
adc
stos
pop
mov
outsb
add
rorb
mov
aad
subl
ljmp
mov
pop
aaa
xor
into
mov
lea
addb
sbb
inc
aas
stos
ljmp
sub
xchg
fstpt
clc
dec
mov
and
pusha
test
push
push
pop
mov
mov
sbb
sbb
scas
decb
push
shrl
fcmovbe
out
shlb
movsb
movsb
cwtl
jge
fisubl
fwait
sbb
repnz
mov
xchg
rclb
imulb
push
movsb
mov
jecxz
lahf
inc
js
push
idivl
fbld
push
inc
sub
outsl
cmc
adc
sub
call
add
push
stos
cltd
movsw
push
pop
adc
stos
xor
js
ljmp
inc
jl
add
add
mov
xor
cmp
notl
ljmp
mov
push
pop
int3
push
pop
insl
sbb
lods
sbb
cwtl
cmp
ret
fwait
mov
mov
ret
fidivl
lret
js
rorb
mov
ror
in
jnp
cmc
lcall
mov
mov
jp
shll
jns
outsl
mov
fnsave
pop
mov
mov
data16
sub
lret
xchg
rorb
jmp
xlat
cli
xchg
jp
cmp
sub
sti
jbe
mov
gs
imul
mov
sub
loopne
xor
insb
out
out
fadds
lret
inc
loop
addr16
out
sarl
xchg
mov
mov
jae
out
cmc
xchg
addr16
jmp
fdivrl
add
push
shll
pop
enter
cmpsl
push
push
out
jmp
inc
lea
push
sub
mov
cmp
or
clc
lea
popf
cld
sti
addl
cmp
movsb
dec
jecxz
cmpsl
or
jo
scas
jecxz
imul
in
push
mov
cwtl
xlat
enter
cwtl
punpckhwd
push
sub
cmp
adc
and
lret
arpl
xchg
and
jne
or
dec
jns
add
cmpsb
or
mov
and
cwtl
mov
lret
pop
hlt
pusha
push
fisubs
loope
and
stos
mov
sbb
cwtl
loop
or
popf
inc
sahf
xlat
push
pop
mov
mov
lods
xchg
adc
xor
cmp
xor
testl
inc
cmc
jae
fcom
sub
pop
dec
mov
adc
adc
pushf
shlb
mov
mov
jp
add
das
mov
aaa
jp
add
or
jne
stos
icebp
pop
dec
sbb
cmp
aaa
jmp
das
out
pop
mov
cmp
push
outsl
xchg
push
mov
mov
mov
jae
fldt
add
push
in
xchg
adc
dec
loopne
addr16
imul
cwtl
loope
push
popf
stos
fidivrs
lds
stos
nop
or
outsb
cld
xchg
jl
jl
xor
ss
sbb
subl
shrb
dec
xor
sarl
mov
lods
rolb
mov
in
ret
mov
cmp
xchg
push
add
sbb
mov
and
add
mov
imul
les
popf
sbb
xor
and
lods
sbb
jmp
cwtl
fidivs
jecxz
adc
aad
sbb
outsl
push
shll
or
dec
cld
lea
mov
scas
data16
retw
pop
fdivp
sbb
les
out
ds
sub
sub
sbb
lret
adc
jb
or
add
push
popf
stos
idivl
sub
rep
mov
fcompl
stos
or
notl
test
dec
fnsave
inc
dec
outsb
pop
push
pop
add
loope
sub
lods
int3
mov
rcl
push
fldenv
or
jecxz
cmp
cli
mov
cli
cmp
movsl
lahf
mov
test
imul
mov
add
aad
lods
lcall
movsb
add
lea
fldcw
cmp
sar
push
jecxz
lahf
mov
sbbb
fnstenv
scas
inc
jl
sbb
shrl
loope
lcall
pop
push
jne
add
push
out
mov
je
into
dec
jnp
or
mov
push
push
mov
and
insb
cld
xchg
add
push
add
in
fstpt
jmp
dec
add
xchg
and
daa
pop
cmp
mov
ja
cli
mov
dec
fstpt
add
and
cs
loop
add
sbb
mov
ss
fadds
add
sub
icebp
lret
stc
and
je
int3
adc
call
rol
ljmp
and
cmp
xor
lds
lea
jmp
sub
hlt
xchg
fiaddl
pop
mov
cmpsl
cmc
and
cmp
repz
adc
or
movsl
aad
aaa
adc
push
std
push
mov
jne
xchg
or
mov
cld
xor
xchg
adc
pop
mov
out
pop
and
xchg
andb
and
sbb
popa
xchg
add
lahf
lahf
std
lods
pop
cwtl
pusha
stos
lahf
sub
das
daa
push
add
or
addb
xor
pop
pop
orb
fists
std
pop
xor
mov
lods
addl
incb
ds
lcall
lea
sbb
bound
pop
inc
adc
adc
xor
cmp
mov
pop
mov
sbb
mov
fcmove
test
cmp
cmp
xor
adc
test
xchg
aad
jg
popa
test
push
mov
movsb
insl
loopne
inc
mov
push
jmp
popa
jle
scas
bound
popa
inc
push
dec
into
pop
shrb
or
sarl
xor
dec
mov
jmp
mov
ds
sahf
mov
hlt
int
and
fdivs
test
mov
mov
fimull
lret
scas
xlat
or
and
inc
jecxz
outsb
and
mov
jns
nop
addb
xchg
daa
dec
iret
or
pop
and
push
jb
test
in
aaa
push
lret
sbb
pop
and
mov
dec
imul
cmp
cmpsl
xor
ds
push
push
insb
xchg
adc
mov
and
rol
mov
int
adc
inc
pusha
arpl
and
lods
xor
sub
clc
pop
stos
xchg
mov
or
movsl
and
jle
loope
xor
test
hlt
repnz
jne
sub
jle
das
mov
inc
mov
and
jno
loop
push
sub
nop
ss
jge
mov
dec
and
add
add
loope
xor
jg
lods
cmc
xchg
sbb
mov
jae
xchg
mov
xor
push
lods
ss
test
lds
popf
dec
and
stos
push
pop
adc
jge
popf
xor
or
mov
fwait
lea
cltd
movsb
xor
cld
sbb
addr16
mov
mov
jns
ja
cmp
cs
fdivrs
xorb
pop
cmp
xor
adc
sahf
push
cmp
jne
ja
inc
ret
or
and
rol
lret
les
push
movsl
addb
jmp
gs
adc
les
push
dec
ss
jp
ret
jnp
and
mov
push
push
cmpsb
in
inc
in
xchg
mov
add
xor
cmp
inc
jo
mov
adc
ret
dec
mov
pushw
pusha
lock
jg
and
lock
jmp
mov
js
mov
mov
xchg
clc
push
mov
dec
mov
cmpsl
mov
sbb
lret
imull
adc
mov
push
jecxz
popa
and
lods
xor
iret
and
push
in
ds
cmp
push
fs
popa
add
mov
inc
incl
or
and
fidivs
outsl
add
jbe
pusha
dec
add
add
fdivrp
adc
scas
bswap
mov
call
test
insb
dec
imul
ljmp
inc
push
add
xor
outsl
push
imul
or
xchg
push
subb
adc
dec
into
dec
out
das
inc
aad
insl
out
sbb
sbb
mov
xorb
xor
stos
jno
sbb
fimull
mov
jg
into
loopne
sub
outsb
leave
arpl
in
roll
aas
call
sbb
orb
subb
mov
shrb
ljmp
fs
int3
cmpsl
cmc
sub
lcall
cld
or
loopne
pop
or
cmp
stos
jp
push
scas
into
jp,pn
scas
jmp
mov
cmp
mov
or
sahf
xchg
mov
arpl
adc
jp
cmp
push
mov
or
dec
mov
sub
xchg
ret
add
jb
js
pop
out
data16
sti
cltd
stos
pop
test
stos
jae
movsb
mov
push
imul
xor
dec
jne
sbb
dec
mov
test
and
pop
not
inc
sbb
cmp
mov
nopl
int3
stos
lcall
bound
jg
add
xchg
cwtl
jp
js
jne
scas
fstpl
mov
jmp
repnz
addr16
jne
lock
inc
pop
fidivl
mov
mov
cld
mov
cli
dec
ss
aam
sahf
insl
mov
sbb
int
std
jbe
imul
mov
shl
and
lock
pop
les
sbb
leave
out
inc
mull
aad
cld
jne
or
aas
sub
jmp
inc
or
add
in
icebp
jle
xor
cmp
pop
das
or
das
xlat
add
push
mov
push
call
push
lods
mov
scas
sub
inc
sbb
push
sbb
repz
cwtl
sbb
ss
add
jmp
mov
mov
xor
push
xchg
push
mov
sub
add
pushf
cs
mov
in
adc
and
push
repz
inc
ficoml
cmpsb
sbb
pop
sahf
cmp
idiv
std
jl
push
lods
add
out
mov
cmp
notb
pop
adc
ret
push
xor
cmp
mov
push
dec
push
cmpsb
xor
mov
rep
sub
adc
jb
sub
fwait
mov
ficompl
adc
mov
sub
lret
shl
popf
mov
pop
xchg
inc
jno
cmpsb
adc
cmp
xor
lret
int3
jecxz
xchg
mov
stos
sbb
jmp
pop
popa
mov
sbb
out
pop
or
in
pushf
sub
sbb
clc
cmp
add
dec
loopne
mov
lret
mov
addr16
out
add
cltd
lret
mov
sbb
mov
data16
xor
xor
ds
push
les
jnp
inc
aas
sbb
cmp
jns
and
sub
fcmove
clc
stc
jp
add
dec
inc
dec
or
ret
fld
cmovb
je
cmp
sbb
jne
aad
jne
mov
push
call
sub
mov
cmp
cmp
pop
pop
enter
fwait
adc
xor
out
xchg
sbb
sub
dec
pop
test
aaa
mov
or
jge
mov
cld
int
dec
push
daa
xor
mov
sub
ja
mov
fsub
fstpl
mov
jns
enter
pop
movsb
outsb
dec
es
mov
and
adc
ja
mov
lock
rcll
fadds
cmpsl
sbb
push
ljmp
xchg
dec
es
xor
and
cli
mov
push
mov
fidivs
sub
push
lock
gs
aas
mov
push
dec
push
pusha
fdivs
outsl
cmp
or
mov
sbb
mov
inc
push
mov
out
lret
pushf
roll
fdivl
dec
mov
or
inc
out
xor
xorb
jmp
jbe
sub
sub
xor
shlb
sti
add
in
push
aad
faddl
fists
jecxz
add
mov
jae
addr16
mov
in
xchg
dec
mov
xchg
mov
enter
adc
pop
js
dec
aad
orl
mov
mov
in
cld
aas
scas
pop
hlt
push
pop
pop
push
inc
ficompl
pop
dec
push
cmpsb
insl
push
cltd
fldl
mov
dec
xchg
test
lods
xor
dec
ja
pop
in
xor
popa
incl
add
stos
imul
out
jl
stos
lock
inc
inc
push
fwait
cwtl
push
xor
pusha
dec
fidivrl
imul
xor
sbb
fwait
cld
sahf
cwtl
jbe
or
mov
cs
pop
or
jne
xchg
cli
cmpsl
cwtl
out
xor
aaa
ret
adc
mov
inc
shl
push
jne
outsl
adc
lret
mov
js
out
in
insb
icebp
mov
cmpsl
jnp
ss
aas
insl
push
xor
into
jno
add
repz
lods
lods
mov
xlat
add
aas
jecxz
mov
sbb
xchg
test
or
pop
call
dec
sbb
pop
sub
pop
dec
icebp
stc
add
clc
inc
es
imul
in
je
out
cmp
mov
and
xchg
lret
fdivrl
nop
mov
push
dec
dec
loop
xchg
mov
fdivl
fwait
mov
loop
test
xchg
lret
scas
or
jle
pop
out
fisttps
cltd
test
scas
lods
or
dec
unpckhps
pop
or
insb
and
mov
sbb
and
inc
cs
daa
mov
and
inc
sbb
movsl
jle
hlt
ret
and
inc
scas
lds
fnsave
cmpsb
add
inc
jo
sbb
jno
jae
mov
push
mov
and
dec
in
imul
dec
fsubl
icebp
cmp
test
pop
aas
scas
mov
fsubrp
test
or
add
int
add
push
repnz
sbb
sub
das
cld
add
ds
fstps
movsl
jmp
push
and
inc
sub
jbe
testb
add
xor
adc
jns
dec
xor
ds
in
pop
lahf
scas
push
sbb
sub
xchg
repnz
lret
ret
inc
xchg
addr16
rcr
rcrl
stc
cmpl
inc
call
test
and
aaa
and
push
inc
jge
fdivs
arpl
loop
sbb
hlt
rolb
cmpsl
cwtl
cmpsl
std
mov
frstor
insb
dec
fucomip
clc
rorb
xor
mov
pop
pusha
adc
mov
dec
cmpsb
hlt
push
lods
pop
or
sbb
in
movsb
sub
push
cmp
adcb
push
mov
mov
or
das
cmp
cmpsl
mov
mov
fwait
add
insb
test
jge
inc
lcall
jnp
add
or
sbb
fmul
sbb
jecxz
js
popa
cmp
xor
and
mov
pop
fldl
or
idivl
mov
loope
or
cmc
loop
inc
cmpsl
and
test
sarl
adc
inc
jae
and
dec
out
test
out
test
js
adc
das
mov
sub
jmp
dec
sahf
mov
mov
xor
and
out
imul
push
adc
dec
ds
or
mov
inc
scas
jo
lock
jno
pop
mov
or
rcr
movsl
push
xchg
or
popl
push
fs
aas
lea
nop
add
sbb
mov
pop
stos
decl
aad
scas
les
shlb
sti
pop
shll
cmp
jno
popf
push
ljmp
lea
push
jns
fnstenv
les
andl
rcll
repz
mov
int3
lcall
in
xchg
movzbl
push
fs
mov
and
dec
adc
loopne
push
push
fiaddl
xchg
inc
mov
idivl
inc
pop
push
rcrl
jae
std
adc
sub
fdivrp
cmp
mov
iret
and
sub
push
std
iret
call
mov
mov
jmp
movsl
fxch
insb
insl
clc
adc
iret
jbe
pop
jbe
les
rcr
das
lea
iret
int
leave
gs
jo
jne
movsl
shl
sahf
sbb
dec
mov
pop
mov
in
jae
cmp
add
sbb
adc
jge
std
cmp
xor
add
out
cmpl
inc
cmpsb
cld
xchg
sti
push
sub
mov
jmp
mov
mov
loope
jge
and
add
mov
shrl
jmp
sbb
call
divl
xor
inc
test
jge
movb
jb
ja
dec
je
mov
add
std
das
push
inc
sahf
nop
jae
pop
cli
cmp
inc
mov
xchg
testl
or
mov
bound
mov
mov
loop
dec
jns
mov
sti
jl
enter
mov
add
xor
push
lock
aad
lods
insb
adc
int3
jnp
sbb
ljmp
cmpsb
ret
pop
lret
sub
sub
arpl
mov
ja
cmp
push
fstpt
add
aas
xlat
push
loop
lock
ja
mov
std
gs
rcl
pop
sub
scas
loop
or
jnp
mov
push
fwait
int
mov
pusha
lret
dec
sub
jecxz
push
sbb
cmc
sbb
and
subl
jl
xchg
dec
insl
cmp
jle
pop
cs
cmp
push
cltd
cmp
mov
loopne
jbe
cmc
mov
stos
mov
mov
arpl
mov
repz
xorl
fldcw
cmp
sbb
lods
add
sbb
out
push
push
sbb
inc
jnp
adc
push
stos
fildll
dec
xlat
mov
ja
jge
xlat
gs
pop
in
les
std
and
push
mov
add
inc
inc
pop
fs
lods
mov
dec
push
insl
xchg
pop
imul
movq
jg
jmp
pop
fstpt
gs
mov
adc
mov
add
leave
fnclex
out
pop
sub
mov
xchg
vmovaps
test
sbb
sbb
jmp
cmpl
fidivrl
pop
mov
mov
repz
cmpsl
movsb
loop
lret
adc
aam
mov
imul
out
inc
test
lods
insb
fdivrs
lcall
sub
addb
repz
mov
jp,pt
mov
inc
adc
outsl
jnp
mov
fbstp
jg
leave
push
imul
test
add
mov
push
fsubrs
stos
mov
xchg
aaa
sbb
rcrb
pushf
cmp
cli
jl
sub
xchg
xor
adc
xor
outsl
in
clc
lock
dec
push
mov
mov
mov
lea
push
sub
or
xor
stos
leave
sub
mov
les
in
push
clc
sti
fidivs
aaa
popf
mov
pop
popa
mov
pop
in
and
test
insl
mov
in
testb
adc
mov
push
orl
and
arpl
jg
jne
inc
sub
dec
mov
pusha
imul
lret
fldt
jno
push
ret
dec
loopne
push
dec
idivl
add
movsl
test
notb
outsl
dec
mov
in
fmul
pop
aad
les
fstpt
les
imul
pop
push
nop
icebp
xchg
xchg
mov
lcall
xor
pushl
jae
pop
jno
xchg
push
out
sub
mov
int
cmp
push
push
rorb
xor
sub
outsl
nop
xchg
cmc
pop
mov
fimuls
mov
dec
call
jle
jecxz
call
pop
mov
pop
nop
roll
not
outsb
mov
adc
xchg
dec
and
icebp
pop
arpl
xor
fld
nop
decl
stos
mov
cmpsb
aaa
cmp
fsubr
add
ret
lock
mov
pop
sub
fwait
scas
jmp
lods
xchg
pop
mov
inc
cmp
mov
inc
mov
insb
add
and
loop
pop
in
jne
push
xchg
and
xchg
push
lds
cmc
mov
shr
adc
clc
pop
pop
dec
fidivs
dec
jecxz
arpl
hlt
cmpsb
jnp
rcll
sub
hlt
lcall
cmp
mov
sub
inc
sbb
and
in
test
shrl
hlt
call
in
mov
por
shlb
xchg
mov
mov
mov
sbb
or
push
sbb
pop
xor
sar
stc
mov
imul
xor
cltd
mov
movsl
mov
daa
sbb
mov
ffree
sbbl
mov
adc
test
loop
jns
shl
cmpsl
dec
jge
and
xor
or
cmpsl
ret
and
ljmp
cld
mulb
mov
add
xchg
cmp
adc
sbb
jg
addb
inc
pop
jle
jp
outsb
push
lret
xor
test
adc
mov
inc
cltd
addl
cmp
fprem1
aaa
dec
push
sub
xchg
or
shrl
inc
or
addr16
ret
test
jmp
push
mov
loope
pop
dec
cmp
fadd
cmpsl
lea
mov
sub
pushf
aaa
adc
pop
jle
xor
sub
sbb
push
lcall
dec
lods
inc
popf
dec
mov
xor
pop
mov
mov
xchg
insb
cmp
pop
enter
stos
jne
fstps
dec
pushf
enter
icebp
addb
addl
xor
sbb
add
pop
pop
xchg
dec
testb
push
inc
test
sub
inc
es
mov
mov
sbb
imul
xchg
mov
in
pop
je
or
dec
stos
xchg
addr16
inc
push
test
pusha
fimull
xor
push
mov
xchg
loope
add
jp
aaa
popa
std
sub
sti
push
jge
pop
sarb
mov
aam
loope
addr16
test
sub
ret
lahf
repz
sbb
jb
js
out
jae
and
sbb
add
xchg
push
sub
pop
add
fadd
jb
aaa
insb
jne
cmp
pop
in
sahf
mov
xchg
mov
mov
pop
test
mov
push
mov
test
add
jmp
sbb
mov
pop
cwtl
fisubrs
jecxz
mov
and
cmp
leave
leave
gs
jbe
div
adc
add
mov
cmp
out
faddl
out
test
xchg
pop
pop
jge
pop
dec
adc
pop
xor
xchg
sti
rolb
jbe
lret
es
xor
in
xlat
scas
add
ret
cmp
cmp
add
xchg
pop
dec
or
imul
add
int3
out
nop
and
out
mov
into
and
and
add
loop
pop
mov
aam
into
clc
cwtl
andb
xchg
adc
je
mov
inc
jbe
test
sbb
jo
sbb
mov
in
mov
pop
enter
insl
pop
lcall
je
mov
add
sbb
jae
sub
fildl
or
sahf
jmp
push
lds
jp
sbb
shr
rcrb
out
pushf
es
enter
sub
jmp
lahf
fsubs
aad
sbb
imul
cltd
and
mov
pop
ja
add
sti
sbb
dec
mov
repnz
jg
iret
enter
mov
leave
xchg
mov
push
scas
fbld
push
std
xchg
inc
mov
push
mov
lock
jno
fucomi
rcrb
dec
push
cmc
adcb
or
or
inc
or
adc
lret
push
mov
sbb
dec
xor
sbb
pop
shrl
or
jns
adc
lock
in
sahf
cmc
fnstsw
add
ljmp
or
or
stos
and
jle
cmc
xor
cli
gs
arpl
sub
cmp
sbb
les
dec
cmp
out
and
fwait
imul
out
cmp
roll
popf
lahf
js
mov
adc
mov
repnz
ret
test
nop
adc
repz
inc
mov
mov
cmp
stc
inc
aas
mov
fbld
mov
mov
jge
xor
imul
push
fcmovnbe
lret
or
sbb
testl
popa
lcall
ja
xor
push
push
and
lahf
rcrb
inc
aam
sbb
aas
push
shll
mov
dec
lods
ja
sbb
add
test
in
out
rcl
add
aas
pop
popa
jbe
ret
bound
pop
call
cmpsl
adc
flds
push
das
pop
into
out
aad
xchg
cld
popl
jl
pushf
lahf
jp
ret
test
fs
fs
xor
sbb
loop
cli
insl
outsb
sbb
mov
aaa
xchg
icebp
xchg
and
adc
mov
xchg
jno
push
mov
inc
push
out
loopne
xchg
push
mov
repnz
mov
int3
flds
shrb
adc
enter
test
dec
push
fcoml
and
insl
sub
xchg
rcrl
xchg
xlat
fwait
xchg
in
nop
sahf
test
ret
xchg
mov
dec
xchg
xlat
in
dec
pop
sbb
mov
add
inc
clc
mov
or
scas
fwait
push
sub
stc
cmp
imul
xor
mov
mov
or
mov
xor
mov
sub
out
les
jmp
pop
int3
push
or
mov
mov
adc
cld
test
cmc
jg
inc
pop
test
mov
addl
cmp
xor
inc
push
sbb
mov
shll
pop
push
sub
test
mov
std
add
xor
cld
fsubr
mov
jae
repnz
dec
lds
stc
xchg
mov
jl
xorb
sbb
mov
xchg
mov
enter
ja
insl
in
cmp
out
stos
xor
pop
xchg
das
mov
mov
cmp
data16
lods
rclb
lret
mov
jecxz
aaa
dec
adc
icebp
add
test
rol
and
lock
dec
andb
sbb
push
or
ret
push
dec
adcb
add
fwait
sbb
cmp
sub
in
negb
popf
mov
and
jae
sub
imulb
mov
mov
ja
mov
pop
cs
mov
int3
ret
out
jg
add
sub
inc
inc
xlat
add
shll
adc
call
inc
movsl
xchg
adc
mov
mov
sub
addr16
push
mov
cld
jbe,pt
pop
cmp
aaa
push
jmp
xor
mov
js
incb
scas
cmp
out
icebp
pushf
jp
lcall
push
dec
inc
sbb
pop
popf
push
xor
mov
in
mov
shll
outsb
sbb
std
mov
lods
fwait
dec
adc
cltd
xchg
int3
jnp
fidivl
ljmp
mov
stc
inc
push
add
rorb
inc
fidivs
pop
lods
dec
or
rcr
cmp
add
xchg
and
testb
push
add
sub
out
dec
addr16
popa
or
scas
cmp
rcl
xchg
fisubs
mov
stos
popa
jg
imul
sbbb
out
push
push
xor
add
mov
sbb
idivl
adc
add
in
in
ret
sub
inc
cmpsb
lock
add
sub
sub
add
ds
int3
mov
mov
xchg
mov
push
adc
xor
mov
inc
movsb
sbb
cmc
push
xor
push
dec
jnp
shll
lret
jns
sbb
mov
stos
xchg
aaa
or
outsb
xchg
adc
add
cli
ret
das
imul
jge
adc
stc
jno
xorb
push
hlt
pop
loopne
mulb
outsb
dec
ret
mov
jl
sub
mov
jno
rcl
and
cmp
pop
out
pop
imul
xchg
adc
xchg
mov
add
mov
push
pop
pusha
or
les
loopne
clc
push
push
nop
jmp
push
in
and
enter
xchg
scas
sub
jne
sub
mov
and
pushl
andb
add
clc
inc
push
pop
outsb
inc
cmp
adc
popf
fldcw
jnp
pusha
mov
movsb
int3
sub
rorl
mov
stos
stos
call
es
je
jb
ljmp
mov
popa
nop
cmp
sbb
js
hlt
sub
test
int
rclb
or
xlat
sub
test
pop
int3
jge
or
xor
push
push
psubq
leave
hlt
or
ret
mov
mov
outsb
int3
xor
jne
jg
inc
cmpsl
test
and
popf
nop
mov
pop
inc
data16
in
out
cmp
or
mov
inc
sub
rcll
inc
pop
jle
inc
pop
call
adc
ja
idivl
pop
inc
inc
aaa
mov
mov
ja
or
ljmp
cmpsb
sbb
stc
movsl
aad
or
loop
mov
out
adc
sbb
mov
cli
cmp
push
and
int
push
mov
mov
popf
hlt
movb
xor
jbe
scas
ja
loope
sbbl
ret
xchg
add
nop
orb
lea
test
mov
mov
cmpsb
cmp
das
xor
mov
sub
jae
es
pop
adcb
add
imul
add
sbb
pop
enter
jae
and
loopne
xor
lock
lahf
aad
sub
mov
push
ficomps
push
sarl
xor
inc
repnz
adc
jnp
mov
in
imul
out
mov
int3
push
push
test
leave
movsl
sub
and
rorb
addr16
pop
mov
jge
sub
dec
gs
clc
aam
aas
imul
imul
cmp
sub
inc
lret
mov
insb
stos
mov
pop
imul
jns
test
fnstcw
aas
mov
ret
shrl
add
cmpsb
adc
stc
inc
repz
in
adc
andl
mov
test
jl
add
or
sbb
cli
nop
ljmp
push
test
fidivl
cltd
out
inc
rcl
xchg
sub
mov
fimull
jp
xor
imul
sbb
pop
arpl
adc
add
cltd
movq
roll
sub
adcl
mov
lahf
fwait
out
or
cmp
sub
sub
daa
shll
adc
pop
testl
push
add
je
jle
jp
repnz
lret
push
jns
jg
xchg
sub
scas
adc
cmpsl
mov
mov
jnp
leave
cltd
sub
push
xchg
and
shrb
lret
xor
and
pop
ret
or
ret
hlt
outsb
jno
leave
dec
xchg
dec
in
mov
mov
cmp
mov
mov
xor
pop
push
pop
xor
cmpsb
arpl
iret
cwtl
sub
mov
out
sub
xchg
call
push
aaa
and
inc
and
pusha
jecxz
mov
gs
sub
pop
mov
dec
xchg
ret
and
es
movsl
stc
inc
push
pusha
daa
cwtl
xlat
sub
sbbb
bound
std
push
in
pop
in
int3
push
data16
enter
xchg
dec
cmp
cmp
xor
popa
push
xchg
dec
mov
daa
lods
cmpsl
je
lahf
xchg
pop
loope
sarl
cld
out
nop
fisttpl
dec
adc
sbb
add
jl
cld
popa
mov
stos
mov
cmp
out
push
call
or
pusha
decb
inc
or
data16
pop
fisttps
sub
push
cmp
push
loopne
jns
andl
sub
mov
pop
xor
fnstcw
out
mov
inc
push
pop
loope
outsb
sahf
xlat
sahf
loope
sahf
lea
xchg
mov
or
adc
jmp
out
sbb
imul
jbe
sarb
jo
in
daa
xor
fdivr
jb
and
insb
cli
pop
sbb
and
loop
dec
cmpsl
adc
loopne
in
test
outsl
and
sarl
mov
push
pop
test
or
xor
in
jmp
jl
into
ret
jo
sub
mov
push
loopne
je
lret
jmp
sub
cs
push
int3
add
test
or
xchg
mov
out
jnp
movsb
aam
addr16
andl
pop
push
inc
xchg
fs
fisubrs
es
push
int
outsb
sbb
inc
xchg
cmpb
mov
fisttps
jno
sbb
mov
ja
int
ds
imulb
sub
push
pop
scas
inc
stc
insl
adc
mov
pop
adc
dec
push
jbe
mov
push
xchg
sbb
pop
inc
shll
mov
mov
sbb
repnz
xchg
shll
mov
pushf
ja
sbb
fistpl
fimull
sub
jmp
rcr
mov
cmpsl
nop
jg
xor
sbb
jp
or
adc
repnz
in
sub
cmpsl
adc
popf
mov
pop
jp
or
mov
jae
mov
jg
xchg
lret
fimuls
push
sbb
cmp
test
jg
test
or
mov
fdivr
push
dec
add
and
sahf
sbb
pop
insl
xchg
aam
sahf
xchg
xchg
fwait
cmp
xchg
dec
dec
leave
lods
imul
sbb
xchg
lods
jns
faddl
into
mov
loope
sub
jmp
testb
xor
sub
xor
rol
cmpb
mov
xor
out
mov
pop
pop
adc
dec
xor
mov
pop
push
jne
sub
mov
rol
jo
xor
mov
jno
mov
addr16
xlat
xchg
cmp
fstpt
push
mov
test
insb
xor
cwtl
sub
aaa
arpl
aaa
fidivs
push
mov
ret
cmpsl
stc
test
sbb
aas
cli
fnsave
lods
fdivrl
stos
or
xchg
rclb
xlat
xchg
fldcw
fisubrl
pop
out
jp
and
ja
jb
xchg
ds
fsubrl
movsb
fucomip
push
das
dec
fidivl
sbb
imul
outsb
and
scas
or
mov
sti
aas
lcall
call
lret
xchg
add
outsb
mov
mov
into
fmull
jo
mov
aam
pop
fwait
push
imul
mov
add
mov
mov
aam
sub
cmp
gs
sbb
in
xchg
std
pop
jmp
mov
cmp
lods
xor
aad
push
mov
jae
out
aas
xchg
addr16
lcall
pop
je
mov
inc
push
and
inc
stc
sarl
movsb
sahf
ja
sbb
mov
mov
out
jg
in
repz
mov
mov
cld
xlat
adc
shlb
mov
test
pop
dec
out
sahf
nop
cmp
push
and
xchg
cmp
ds
repnz
out
mov
test
jb
push
xor
loop
loope
jae
enter
into
sbb
cmpsl
scas
stos
mov
mov
pusha
mov
push
mov
adc
or
xchg
cmp
push
xchg
aad
jl
lock
jge
insl
test
xchg
xchg
scas
mov
xor
adc
cs
mov
call
sbb
cmp
or
imul
cltd
inc
mov
sub
xor
mov
mov
jne
scas
lds
add
dec
pop
and
lods
repnz
and
and
cmp
imul
and
pop
sahf
icebp
bnd
cmp
mov
sahf
mov
ds
ss
sbb
cmp
fwait
push
sub
sub
or
movups
push
inc
jge
jecxz
dec
and
or
sub
add
sbb
dec
mov
sub
or
push
mov
jmp
cs
mov
or
or
pusha
push
jle
mov
fmulp
mov
dec
lcall
adc
jmp
shll
test
enter
mov
insb
shlb
aaa
adc
lcall
inc
xchg
roll
cmc
rorb
sbb
push
divl
repz
and
fdivrl
jmp
lcall
jns
das
repnz
jl
sub
out
jl
add
mov
fdivrs
mov
into
shlb
aam
jmp
popa
iret
mov
popl
in
push
pop
shrb
stos
pop
sub
sub
push
and
dec
inc
mov
outsb
xchg
sbb
int
testl
inc
add
movsl
sarl
sub
jg
jno
mov
outsb
insb
sbb
mov
leave
jmp
xchg
sti
mov
in
xchg
jae
test
jecxz
dec
movsb
mov
mov
mov
adc
adc
xchg
or
pop
or
in
scas
rcrb
sbbb
outsl
pop
sbb
add
adc
popf
stos
lock
jo
lret
int
cmp
lock
sub
cmpsb
fmuls
xor
inc
cmp
push
jae
mov
loope
xchg
or
negb
xor
and
fidivrl
xor
and
loope
lret
xor
testl
sub
or
icebp
std
lds
cltd
out
xchg
inc
popf
daa
popf
das
into
imul
fists
fldl2t
xchg
stc
add
inc
pop
push
sbb
mov
dec
and
xchg
movsb
mov
jle
mov
inc
pushf
subl
push
in
rcr
add
shlb
push
sbb
inc
lcall
je
lds
cmpsl
pusha
adc
pop
stos
adc
jns
xchg
rcr
stos
repnz
ljmp
xchg
adcl
dec
xor
repnz
xchg
mov
sbb
mov
mov
pushf
pop
cmc
or
xor
in
and
sahf
pop
adc
adc
dec
pushf
mov
in
decl
adc
movzbl
pusha
cmpsb
cwtl
mov
test
mov
pop
dec
xchg
jecxz
ror
outsb
movsl
xor
or
sbbl
cmp
sub
pop
jmp
ljmp
aam
push
or
adc
rcll
inc
imul
mov
outsl
sbb
cmp
lods
push
aam
and
insb
xor
add
orb
addl
add
mov
les
pushf
mov
sub
pop
mov
and
push
push
push
in
fwait
pushf
roll
push
jmp
mov
adc
xlat
mov
cs
call
add
mov
pushf
in
pushf
mov
add
sbb
mov
stc
mov
dec
outsb
in
mov
aas
xor
inc
jmp
mov
cmp
pop
cmp
and
cmpsb
jmp
adc
xor
aam
in
ljmp
in
in
adc
mov
outsl
fsts
fsubrl
out
jle
pop
jns
fs
jmp
mov
sbb
xchg
mov
xor
stos
sbb
jg
pop
adc
stos
cmpsb
sub
popa
xor
push
add
insl
inc
push
xchg
dec
push
xor
sbb
inc
pop
out
jl
mov
sub
add
pop
or
clc
int3
xchg
rorb
popf
mov
push
pop
jae
inc
imul
xor
or
lret
aad
jbe
cmc
fs
movsb
das
adc
and
iret
xor
lcall
loop
aaa
mov
iret
or
ficomps
sbb
out
test
pop
lret
mov
ss
iret
sbb
or
gs
or
adc
int
push
xchg
cli
je
xor
out
xor
pop
sub
jbe
xorb
outsb
inc
add
mov
insl
push
out
xor
iret
popf
sub
rol
loop
gs
push
mov
je
sub
lcall
or
inc
stos
mov
fwait
or
lods
bswap
sub
xor
movsl
or
popf
pop
shlb
jmp
mov
fisttpl
andl
pop
cmpsb
out
fidivrs
arpl
idiv
sub
int3
sbb
int3
test
icebp
loopne
inc
scas
pop
ja
xor
sub
adc
add
xchg
rcr
push
push
add
loop
aad
push
push
loope
xor
sub
jecxz
or
test
pop
lahf
fs
push
sbb
in
cmpsl
ja
rorl
jns
pusha
or
xchg
jmp
pop
mov
nop
lret
addr16
adc
dec
adc
pop
mov
xor
out
data16
or
lret
ljmp
ja
sbb
push
ret
in
jge
data16
push
lea
out
stc
sbb
xor
inc
pop
cmp
cmp
and
mov
jle
in
imul
jb
push
push
xor
stc
jge
out
and
out
rolb
in
push
sahf
or
call
test
dec
jb
jp
mov
pop
mov
mov
and
loop
mov
and
sbb
aaa
aam
shr
sbb
lock
loop
cmc
cs
int3
hlt
ds
stos
ss
mov
adc
mov
shlb
outsb
lret
xor
into
fcoms
popf
in
out
imul
mov
cld
xor
pushl
sti
or
sahf
jb
lds
dec
popa
sbb
add
xor
xchg
lahf
ds
test
push
pop
cmp
aam
xchg
jmp
mov
cmp
shll
push
or
add
loop
sbb
lea
int
push
pop
pop
int
pop
into
or
or
xchg
imul
and
mov
dec
jo
mov
mov
test
orl
cmc
xor
xchg
xor
stc
mov
xchg
das
add
mov
jb
das
cmp
gs
movsb
sub
mov
loope
push
out
pop
fcmovnbe
inc
sub
outsb
sub
imul
pop
adc
repz
icebp
fdiv
push
popf
or
mov
stos
and
lahf
mov
jge
add
pop
xor
stc
into
das
push
mov
in
sbb
ficomps
cs
add
mov
pop
scas
shl
test
hlt
mov
insb
sub
mov
fidivl
mov
sbb
int3
cltd
dec
xchg
imul
fists
inc
push
inc
ljmp
into
fbld
mov
or
imul
fdivrs
test
jmp
les
aas
iret
fdivrs
jg
pop
add
push
dec
push
pop
rclb
push
lds
inc
icebp
xchg
rolb
pop
xor
jnp
or
pop
pop
sub
and
cmpl
sbb
and
sub
or
jns
in
iret
imul
dec
sbb
arpl
fcomip
sbb
cli
push
std
sub
sar
pop
movsb
jo
ret
bound
adc
cltd
stos
into
dec
movsl
stos
iret
and
out
or
fcomi
mov
lods
pop
std
fstl
xchg
fsts
int3
sbb
ret
fwait
xor
xchg
lods
mov
inc
lret
ja
sbb
and
scas
sub
test
add
jne
or
insb
fsubl
jecxz
test
sbb
mov
mov
add
in
out
xchg
sub
outsl
rcrl
movsb
mov
out
rclb
jl
jmp
mov
pop
mov
pop
add
cmc
push
stc
leave
mov
sub
lock
dec
xor
pop
in
mov
sub
lcall
int
loop
shll
imulb
inc
in
call
gs
es
mov
lret
pop
in
addr16
sarl
mov
pusha
mov
jnp
out
dec
movsl
mov
push
test
movsl
aam
int3
testb
pop
shl
sub
jbe
dec
fiaddl
dec
xchg
xchg
adc
jmp
dec
sub
movb
int3
test
call
pop
in
xor
inc
push
ret
push
adc
jg,pn
xor
movsb
adc
adc
inc
mov
jecxz
lea
cmpsl
xor
sahf
in
push
out
insb
dec
aas
or
xchg
dec
lret
orb
cmp
xchg
xor
pop
mov
adc
sbb
push
jmp
fidivs
mov
cwtl
dec
add
out
out
xor
pop
ljmp
int3
push
fstl
push
mov
test
mov
leave
cmpsb
jl
mov
popa
repz
cmpb
fucomip
popf
lahf
inc
jne
movsb
insb
out
adc
cld
add
mov
cs
out
mov
orb
icebp
or
ret
or
mov
and
cmpsb
iret
rcll
cwtl
pushf
adc
inc
mov
push
xchg
inc
dec
sub
xchg
add
rcrb
lds
pop
shll
in
jg
lods
pop
lds
dec
and
in
fs
mov
inc
pextrw
cmp
test
cs
push
movsl
insl
sbb
stos
push
mov
or
add
sub
cmc
leave
aam
adc
jmp
fwait
inc
hlt
loopne
xor
out
sub
jae
ljmp
fwait
sbb
test
adc
fcoms
pop
push
jns
fbld
adc
jnp
shrb
mov
xchg
stc
subl
fstpt
cmpsb
or
popa
push
dec
xchg
xchg
fiadds
pop
out
ja
mov
mov
pop
repnz
fstpl
pop
ss
add
xchg
mov
inc
iret
repnz
add
add
stc
inc
xor
sbb
mov
push
xchg
mov
mov
fldcw
scas
sub
lahf
lods
mov
stc
movsb
mov
decl
in
jmp
cmp
jle
pop
ja
mov
mov
std
or
jb
adc
xchg
xor
scas
in
push
cli
push
mov
ret
lods
mov
popa
pusha
test
mov
push
iret
ljmp
jb
mov
add
add
jmp
dec
cwtl
pop
pusha
out
test
sub
int3
les
mov
mov
push
mov
mov
rcl
out
jbe
and
ret
pushf
js
mov
xor
or
mov
xor
notl
lret
addr16
lock
mov
ficompl
jbe
call
mov
ud0
add
and
bound
mov
into
mov
fwait
or
adc
int3
cmp
shrb
pop
rorb
pop
add
add
jo
xor
xor
pop
mov
adc
ret
pushf
xchg
sti
cltd
ja
pop
xchg
lahf
pop
mov
mov
adc
enter
lds
aaa
cmpsb
dec
shlb
mov
fildll
rcr
outsl
nop
mov
std
push
jno
mov
loopne
cmc
sbb
mov
in
and
popa
add
cmp
jmp
out
out
inc
std
aas
push
or
mov
test
push
aam
sub
and
adc
jnp
pop
mov
jbe
loop
data16
and
int
hlt
push
int3
cs
mov
dec
add
stc
pop
fbld
stc
hlt
pop
ja
sbb
repz
js
or
jo
cmp
xchg
push
out
fldl
shl
push
ret
inc
shrb
cmp
pop
js
mov
pop
dec
rclb
lret
clc
faddl
jl
inc
jmp
cmc
sbb
bsf
subb
push
fisubrs
xchg
xor
xchg
jge
add
inc
pop
ja
mov
mov
xchg
out
aas
rcrl
and
mov
cli
pop
mov
sub
and
adc
cmp
and
jl
xchg
xchg
loopne
sti
add
cmp
cmpsl
dec
jno
xlat
xor
cld
pop
outsl
pop
sub
xchg
enter
int3
aaa
pop
sub
data16
test
test
mov
mov
pushf
xchg
inc
aad
popa
ljmp
and
pop
jns
xor
cmp
lahf
pop
fld
push
jg
lret
ds
shr
adc
std
sub
push
dec
mov
cld
scas
pop
scas
sub
or
mov
sub
xor
push
icebp
sbb
jl
xor
or
pop
inc
hlt
sahf
mov
jae
add
mov
xorb
xor
mov
adc
sar
jae
xchg
mov
fldenv
stos
shr
ret
mov
mov
mov
loope
iret
fimuls
xchg
sbb
sub
stos
xor
dec
lret
fs
ja
and
xor
das
pop
xchg
inc
sarl
and
mov
adc
sbbb
sub
daa
mov
push
push
sar
push
ror
popf
test
fdivrl
fisubl
jb
loope
es
cld
xchg
enter
pop
pop
sub
mov
aad
out
pushf
xchg
pop
pop
cmpsl
test
mov
add
aas
pop
mov
ret
cltd
stc
inc
jbe
push
mov
das
in
cmp
sbb
and
ficoml
and
scas
jnp
cld
loopne
jl
negb
in
inc
ljmp
fdivl
lods
sbb
inc
icebp
and
mov
test
cmp
inc
jne
fucom
push
xchg
push
les
data16
jns
popa
js
mov
les
sbb
jge
adc
jg
xor
enter
dec
gs
xchg
out
fs
dec
push
xlat
dec
aaa
neg
stos
mov
scas
xor
sbb
and
loopne
sbb
setb
ja
lock
lods
rorb
mov
cltd
push
das
pop
adcl
xor
sbb
fidivl
fwait
add
jbe
pushf
sbb
xchg
cmp
push
jge
aaa
lret
out
cld
stc
insl
stos
enter
pop
leave
sti
rorb
and
pop
call
xor
leave
inc
mov
inc
imul
sbb
mov
call
ret
inc
leave
lods
dec
in
orb
mov
stos
cli
xor
fisttps
or
push
aas
xchg
in
aam
cltd
ret
pop
adc
or
jo
cwtl
fsubrl
mov
cmpsl
mov
loope
sbb
dec
push
outsl
lcall
and
les
in
xchg
daa
mov
int3
mov
ja
outsl
xor
push
adc
sub
dec
dec
pop
dec
orb
push
cmp
mov
sar
xor
test
dec
or
je
cmp
stos
pop
outsb
pop
lahf
aam
int
fisubs
adc
imul
jge
sub
testb
lds
cmp
pop
es
mov
push
or
jp
inc
loopne
or
xchg
mov
adc
jle
je
incl
hlt
rcrb
in
stos
fsubr
mov
inc
and
nop
out
or
adc
nop
sbb
insl
add
shld
lret
xchg
dec
sub
nop
add
or
jb
lret
dec
adcl
mov
hlt
mov
cmc
dec
mov
ret
test
into
mov
push
add
pusha
fbstp
push
repz
lods
xor
inc
sbb
xchg
cli
fwait
out
mull
jg
test
outsb
div
xlat
xchg
mov
sahf
leave
icebp
dec
addl
and
mov
jle
inc
xchg
adc
lea
das
out
ret
hlt
lcall
mov
adc
or
mov
mov
mov
inc
add
xor
cmpsb
push
inc
cld
jecxz
mov
pop
test
call
sarb
sbb
daa
push
mov
lahf
mov
push
push
call
add
addr16
lock
repz
int
xchg
pop
stc
mov
jae
cld
mov
call
push
pop
fsubl
mov
out
sbbb
clc
insl
inc
cld
jb
mov
push
xchg
pop
je
incb
aaa
cmp
nop
fcmovnu
push
sub
lcall
cltd
scas
pop
in
enter
ret
push
ja
inc
pusha
xlat
insl
sbb
sbb
mov
sub
cli
gs
mov
lahf
leave
aas
dec
das
out
iret
pop
push
mov
gs
outsb
fsts
daa
add
mov
mov
xorb
mov
out
div
fwait
mov
fstps
sub
push
adc
push
call
add
cmp
jecxz
xor
outsb
inc
jae
and
jl
int3
mov
pop
in
sub
cmp
sub
and
ja
dec
pop
or
pop
cwtl
sbbb
hlt
inc
popa
mov
mov
pop
dec
xchg
cmp
push
pop
test
adc
lods
pop
scas
mov
sbb
jb
pop
push
pop
stc
cwtl
xor
cmp
xchg
fmul
push
xchg
aaa
fwait
jno
testb
insb
aam
cwtl
xchg
movd
cmpl
or
addb
mov
rolb
push
sbb
pop
jne
int
adc
jmp
in
fldenv
enter
jae
jb
stc
adc
icebp
add
xchg
arpl
roll
inc
mov
je
xor
iret
sbb
xorb
pop
pop
xchg
movsb
mov
push
add
ds
jp
das
and
sub
mov
fwait
stos
adc
jmp
test
movsb
ss
mov
sbb
xor
orb
mov
pop
outsl
adc
insl
out
imul
imul
dec
rorb
es
mov
mov
push
cmp
out
add
push
mov
ficoml
xchg
cmp
jle
ret
aas
or
loope
iret
icebp
push
cmp
lcall
and
jns
iret
mov
mov
stos
push
sbb
mov
dec
mov
jns
adc
cwtl
lods
cs
aas
clc
sbb
cltd
in
jmp
fstpl
jns
daa
inc
add
test
lods
nop
adc
xchg
push
dec
gs
mov
mov
movsl
mov
outsl
mov
sbb
movsl
xor
ficomps
xor
pop
add
xlat
mov
mov
mov
add
in
cmp
fstpt
insb
mov
fs
mov
decb
aaa
jg
inc
ficoms
push
pop
xor
jne
pop
mov
loop
sbb
lea
lret
dec
lahf
push
mov
xchg
dec
cltd
mov
shll
jns
pop
pop
xchg
push
movsl
dec
test
in
inc
fidivs
or
nop
jp
es
mov
sub
rorb
xchg
dec
out
pop
sbb
lea
or
jmp
pop
or
addr16
jmp
sahf
lret
jg
mov
sarl
inc
pop
cmpsb
cltd
cltd
sti
imull
enter
addl
pop
and
ret
cmpsl
fdivl
pop
stos
or
pop
test
push
and
jo
movsb
mov
movsl
fwait
or
sub
std
sub
cmc
nop
enter
and
push
popa
js
mov
andps
inc
cmpsb
mov
pop
push
inc
fwait
aad
pop
dec
jo
divb
pushf
ss
mov
mov
repz
je
inc
inc
cld
mov
aaa
dec
inc
xchg
ret
aad
mov
mov
adc
lods
popf
fistpll
push
xchg
call
lahf
mov
cs
test
push
lret
daa
xlat
insb
push
leave
mov
and
jnp
xor
js
int
dec
mov
xchg
push
xor
scas
cli
cwtl
fldcw
std
push
mov
xchg
in
int
test
imul
ljmp
sub
pop
hlt
in
pop
cmp
arpl
aaa
push
sub
pop
xor
in
hlt
mov
aad
or
pop
add
adc
stc
cmp
xchg
sbb
mov
cmc
out
out
mov
mov
mov
cmpsl
jmp
lcall
mov
inc
jecxz
xchg
daa
sbb
inc
fistl
dec
push
xchg
scas
arpl
mov
jb
mov
cmpsb
inc
jp
add
popa
stc
in
push
in
repnz
jg
xor
outsl
xor
out
stc
cli
outsl
outsl
in
js
cmp
jbe
sub
cmpsb
sub
adc
sbb
pop
add
jne
loopne
adc
pop
fcomps
dec
xchg
pusha
cmp
icebp
imul
icebp
mov
xchg
push
mov
das
out
imul
mov
xchg
add
leave
or
pop
add
jecxz
aad
cmp
sub
pop
rorb
loopne
popa
adc
add
dec
adc
xchg
dec
xchg
adc
out
movsb
enter
jb
arpl
fwait
xor
aas
xchg
test
call
jnp
xchg
stos
or
xor
movsl
mov
mov
aad
ret
xor
scas
xchg
adc
adc
js
cmp
out
xor
add
out
stos
pop
cli
mov
bound
icebp
mov
pop
adc
xor
xchg
push
mov
adc
hlt
jns
add
les
pushf
adc
ljmp
mov
fsubrl
adc
scas
or
loopne
and
fdivrl
push
sbbb
shll
mov
fisubs
ljmp
mov
hlt
ret
mov
repz
pushf
pop
jae
iret
bound
fcoms
sbb
sub
scas
add
dec
je
sarb
inc
pushf
push
sahf
jg
lods
push
mov
ljmp
sbb
or
add
mov
dec
adc
call
mov
jecxz
jl
xlat
stc
das
push
mov
mov
xor
mov
xchg
inc
aaa
cwtl
pop
push
pop
pop
mov
jb
mov
lea
pop
stos
jno
push
out
call
inc
cmp
ret
jmp
xchg
outsl
out
leave
jnp
clc
je
pop
sar
push
dec
leave
es
dec
xchg
or
jecxz
int3
sti
xor
jle
shll
iret
sub
data16
xchg
lret
jns
inc
lahf
in
loope
mov
fs
int
cmp
mov
divb
fmuls
or
jns
repnz
cmp
insb
xor
test
loope
and
mov
and
fsubrs
add
jns
or
mov
pop
gs
ljmp
pushf
sub
or
jecxz
push
mov
cmp
loop
cmp
mov
adc
lret
int3
icebp
and
in
fmul
cmp
pop
enter
cmp
movsb
sbb
pop
cmpl
dec
insb
mov
xor
sub
mov
or
pop
fmuls
mov
xor
sbbb
mov
add
fidivs
loope
pop
mov
cmpsb
dec
mov
imul
dec
aad
pop
ret
sub
push
xchg
ljmp
mov
mov
sbbl
cmp
stc
cmp
jle
ja
or
add
sub
push
and
insb
push
push
push
sahf
scas
cmp
and
call
xchg
fwait
arpl
or
jo
jmp
mov
ljmp
cmp
pop
mov
add
mov
aas
ljmp
das
rcl
sbbl
outsb
test
scas
pop
mov
aaa
icebp
mov
nop
jbe
lahf
xchg
daa
and
xchg
loopne
rorb
in
repz
inc
jle
outsb
call
lcall
cmc
out
xor
lds
loope
arpl
jae
movq
cmp
mov
gs
stos
mov
add
jmp
incl
enter
cmp
cs
dec
aam
xor
outsl
or
mov
mov
cmp
xor
sbb
pushf
out
mov
sub
pushf
push
xor
es
in
repz
lea
push
inc
pop
inc
stc
sahf
orl
xor
push
test
mulb
push
sbb
jns
or
dec
xor
arpl
jmp
pop
xor
iret
inc
mov
push
or
jno
cmp
shll
insb
cwtl
xlat
mov
add
imul
sti
insb
mov
int
clc
mov
popaw
xchg
mov
in
imul
lds
rcrl
into
int
lret
jns
cli
int
push
add
and
pop
lods
and
nop
push
daa
pushf
push
sti
fwait
inc
cmpsb
mov
inc
in
xchg
ficompl
bound
in
into
dec
mov
pop
scas
cmp
pop
jo
push
add
cmp
movsl
cwtl
or
mov
stos
xor
divl
inc
stc
add
mov
cmp
dec
rol
adc
jbe
lds
insb
fimuls
sub
dec
out
and
imul
mov
mov
insl
jl
xor
pop
cltd
ret
js
out
icebp
cmp
push
cli
pusha
imul
push
adc
ss
ficoml
or
std
shrl
imul
cwtl
enter
pusha
and
or
dec
add
pop
movsb
xor
adc
xlat
push
pop
out
mov
mov
lock
jmp
inc
jnp
test
or
sbb
leave
in
enter
xor
stos
mov
pushf
sbbl
xor
dec
lahf
daa
push
add
push
andb
add
push
fwait
adc
ret
fcompl
aam
mov
jle
pop
ficoml
jl
xor
std
sub
push
or
loopne
push
scas
ljmp
push
testl
xchg
sub
jl
or
or
adc
ret
stc
and
neg
and
sbb
xchg
jge
clc
xchg
iret
dec
orb
push
cmp
cs
push
mov
push
jp
jns
in
incb
and
xor
loopne
popa
pop
arpl
xchg
addr16
and
xor
adc
orb
xor
lock
jbe
dec
pushf
sbb
or
iret
lds
sti
in
dec
add
fsubl
xor
push
cmp
movsl
jmp
and
lock
out
mov
int3
xchg
repz
cmp
push
adc
aaa
dec
mov
stc
aam
inc
and
adc
pop
mov
cld
pop
xchg
in
cmpsl
jnp
cwtl
jo
mov
int3
ja
inc
sbb
mov
mov
cs
mov
xchg
stc
iret
lea
iret
pusha
mov
jmp
add
cwtl
mov
movsb
push
stc
les
addl
lcall
sbb
mov
mulb
scas
aas
sub
fldl
lret
mov
cs
popl
cmp
cmp
lahf
cli
test
aas
out
dec
mov
aas
jae
int3
js
or
xchg
mov
lea
cs
inc
int
inc
stos
scas
push
arpl
test
mov
or
enter
jle
rolb
lods
icebp
mov
mov
sbb
outsl
movsl
repz
and
jg
mov
mov
pop
add
aaa
adc
lods
sbb
mov
mov
vfrczsd
dec
int
dec
test
mov
andb
jp
popl
iret
push
std
cld
aad
movsb
mov
push
fstp
jnp
in
push
add
les
dec
adc
movsb
push
dec
inc
nop
xchg
inc
xchg
mov
arpl
mov
addl
dec
add
cmp
les
daa
xor
lret
mov
jbe
adc
cmpsb
dec
xchg
hlt
aam
inc
dec
mov
mov
fldenv
jge
add
cmpsl
pop
dec
testl
int
movsl
aaa
add
rcrb
in
sub
in
push
sub
inc
lret
push
flds
push
jp
clc
test
test
or
lea
dec
and
notl
cmpl
dec
pop
sbb
cwtl
and
jge
xor
lea
pop
dec
xor
es
mull
shld
je
cmovbe
sbb
pusha
daa
sahf
and
subb
adc
sbb
addr16
in
testb
loope
daa
imul
andb
leave
inc
mov
stos
lods
ss
mov
incl
in
subl
mov
fpatan
pusha
cmp
pushf
repz
mov
sub
roll
mov
xchg
push
pushl
xchg
bound
dec
sub
btr
ljmp
loope
xchg
loope
mov
xchg
cmp
jno
cwtl
jo
pop
mov
cmp
adcb
xchg
add
jecxz
les
fcoml
adc
ss
sahf
dec
jo
addb
test
and
jo
dec
aas
push
fst
and
shrb
inc
sbbl
push
ljmp
dec
inc
xor
call
or
mov
pusha
pop
pop
das
inc
pop
int3
jmp
adc
sbb
jne,pt
pop
movsl
and
scas
inc
mov
or
or
aaa
ljmp
and
addl
jl
sub
jge
rorb
cmp
inc
lahf
inc
lahf
cmp
aam
mov
xor
xchg
cmp
sbb
or
aaa
mov
lods
je
push
adc
jp
push
inc
std
or
xchg
subb
jg
pop
iret
jle
outsb
sub
jae
scas
xchg
std
sub
insl
or
in
or
jmp
xchg
mov
mov
inc
lahf
mov
out
mov
or
adc
sbb
jge
add
movsb
in
imul
aaa
into
enter
add
out
nop
pushf
add
add
mov
mov
xlat
inc
jmp
fs
lock
xor
add
mov
jns
push
cmp
mov
leave
cmp
arpl
insb
push
mov
mov
stos
add
imul
pop
pop
test
fisubrl
or
out
push
adc
sbb
xchg
fwait
jb
stc
fidivl
mov
frstor
fisubrl
mov
jecxz
mov
dec
jg
and
cwtl
sbb
adc
cmp
jl
inc
rcrb
or
pop
in
xchg
jb
push
test
jle
push
bound
repnz
les
adc
shlb
incl
scas
mov
cmp
mov
popa
xor
sub
push
dec
cmc
add
fidivl
call
scas
or
lock
lret
inc
push
testl
lea
push
cmpsl
cmpsl
push
cwtl
mov
sti
jmp
adc
adc
ret
xor
out
adc
sarl
or
inc
mov
test
inc
pop
je
gs
or
jp
inc
movsl
and
shlb
rorb
decl
push
xlat
addr16
xchg
dec
jmp
xor
sub
aad
dec
out
and
and
lods
pusha
mov
add
push
dec
mov
lahf
sbb
arpl
cmp
xchg
cmpsl
inc
aaa
jnp
lcall
adc
xchg
push
out
loopne
and
mov
adc
inc
mov
add
or
xchg
pop
movsl
push
adc
mov
mov
test
push
ja
std
leave
dec
aad
or
cmp
shr
sbb
sub
lret
sub
icebp
movsb
ret
cmp
sbb
test
and
out
mov
cmp
pop
xor
add
es
test
sub
mov
fcmovnu
dec
aam
hlt
mov
xchg
loop
mov
fsubrl
xchg
fdivrp
and
enter
push
adc
ja
in
mov
pusha
inc
sub
hlt
std
mov
sbb
scas
and
jl
int3
sbb
call
sub
jno
mov
out
sbb
cwtl
jae
push
sbb
jb
sahf
fidivs
scas
pop
bnd
jecxz
rcrl
xor
lret
sahf
aas
movsb
mov
xchg
popa
idivb
mov
xchg
jns
imul
insl
mov
mov
repnz
popf
fwait
mov
lds
fldenv
in
mov
cmp
and
pop
dec
mov
or
jae
loope
mov
lret
repz
sbb
stos
cmp
cmpsb
ret
sbb
stos
pop
fdivl
shll
stos
jb
lea
lret
mov
scas
stos
mov
push
or
cmpb
in
mov
js
int
jg
push
xchg
push
fcom
shll
mov
sbb
or
int3
out
in
lds
loopne
dec
mov
jne
xchg
les
enter
or
or
clc
push
sbb
mov
iret
pusha
pop
sub
insl
push
cmpsb
xchg
shl
fdivrl
mov
data16
cmp
lret
or
sbb
scas
mov
cmpsl
cmp
sub
inc
roll
xchg
fistl
pop
push
or
mov
aam
hlt
movsl
lock
mov
dec
adc
insl
repnz
out
stos
add
aaa
pop
add
mov
movsb
mov
xchg
repz
or
or
push
mov
cmpl
daa
xor
pusha
push
and
xor
movsb
call
adc
mov
out
add
mov
pop
out
xor
clc
lcall
cmpsl
cwtl
lret
add
dec
test
negb
or
pop
jmp
push
scas
int3
and
pop
pop
shlb
sbb
jae
and
jmp
test
sahf
mov
pop
out
loopne
cld
mov
mov
loop
mov
inc
lret
repnz
cmpsb
push
stos
movsb
jle
mov
imul
arpl
lock
or
mov
pop
mov
inc
adcl
mov
icebp
inc
mov
in
pusha
movsl
cmpsl
fs
add
sbb
jl
mov
int3
cmpsl
jecxz
pop
dec
xlat
dec
pop
mov
push
mov
ja
inc
pop
adc
scas
push
mov
xchg
cmp
outsl
xchg
jbe
stos
dec
insl
cmp
xchg
mov
mov
xchg
inc
cmp
xchg
lret
pop
pusha
push
movsb
add
aam
loope
scas
xchg
inc
xchg
mov
xchg
xor
stos
push
mov
push
das
jo
add
fbld
enter
lds
mov
sbb
push
in
jno
insl
js
cmpsb
xchg
loope
stos
iret
push
shrl
push
dec
in
std
lret
pop
xor
mov
stos
sub
daa
pop
jecxz
add
jmp
inc
ja
dec
jmp
adc
pushl
lods
sub
icebp
cli
pop
push
jge
fsubr
sqrtps
jp
pop
call
das
dec
cmp
jp
add
mov
push
sub
fsubs
sub
test
pop
rclb
dec
std
in
imul
mov
adc
popa
bound
xchg
mov
pop
test
add
enter
add
cmp
push
pusha
aad
test
icebp
addr16
enter
subb
jl
sbb
mov
aam
adc
out
cwtl
mov
cmc
inc
cwtl
mov
push
sahf
sub
clc
add
xchg
sbb
add
lret
iret
mov
xchg
jecxz
les
das
cmp
xchg
mov
or
add
jmp
cltd
pop
inc
leave
enter
sub
sbbb
sbb
rorb
mov
mov
outsb
insb
call
mov
sahf
pop
out
cmp
bnd
xchg
bound
mov
lcall
push
sub
xchg
xlat
repnz
dec
sbb
in
enter
xchg
push
dec
and
or
or
sbb
inc
dec
cs
or
xchg
cmp
decl
mov
jl
push
div
imul
jge
adc
dec
and
adc
push
cltd
fs
mov
imul
add
xchg
sti
cwtl
mov
xchg
push
jns
sbb
push
test
mov
or
inc
add
pushf
cmp
jmp
aad
xchg
cmpsb
inc
push
add
mov
arpl
clc
bound
daa
pop
in
sub
rcll
loopne
aad
mov
movsb
outsl
mov
and
fmull
pop
adc
aad
cmp
inc
push
cmp
int3
shr
jecxz
sbb
icebp
repnz
dec
xchg
cmpsb
inc
mov
and
faddl
push
xchg
pop
or
mulps
fidivs
cs
ret
pop
dec
rcl
push
jae
dec
aam
xchg
movsb
adc
sahf
movsl
dec
mov
test
inc
dec
ljmp
gs
test
dec
ja
mov
adc
and
fiadds
pop
cwtl
rorl
xchg
sub
mov
rol
subl
inc
and
mov
out
cmova
or
xchg
imul
shll
rclb
mov
jmp
sub
pushf
push
adc
or
dec
aas
or
mov
out
packssdw
pop
gs
fisubs
sbb
clc
mov
cmc
je
imul
stc
stos
jbe
ret
inc
push
mov
mov
and
loop
popa
cmp
xchg
push
xchg
push
nop
jmp
lret
sbb
pop
sub
xchg
dec
fsubrs
add
mov
into
int3
lea
sub
lret
pop
mov
mov
jle
stos
jb
jo
int
xor
or
movsl
ret
mov
mov
leave
cmpsl
jae
jbe
imull
mov
jmp
int3
stc
arpl
sbb
pop
sub
insb
sbbb
sub
repz
push
ds
fs
mov
pop
mov
scas
stos
ja
int
mov
or
jl
js
add
add
loopne
imul
loopne
ret
inc
or
shrb
push
loope
jb
inc
test
cltd
addl
dec
xchg
sub
clc
cmp
dec
mov
xchg
movsl
pushf
int3
testb
push
xor
cmpsb
dec
jno
sbb
lds
mov
sbb
loope
mov
xchg
das
lods
out
mov
fldcw
fucomi
jae
sti
aaa
add
lret
fwait
ljmp
pop
cltd
int3
xchg
adc
sbb
dec
push
cmc
jns
pop
clc
adc
inc
jae
dec
xor
fstpt
fisttps
sahf
out
movsl
ret
pop
fisubl
gs
flds
pop
lods
rep
shl
int3
test
xchg
call
mov
dec
jg
arpl
pop
mov
cmp
enter
gs
cwtl
mov
mov
mov
imul
push
aam
lahf
clc
lds
imul
inc
stc
roll
cli
pop
lock
in
ds
sub
aad
or
mov
xchg
push
inc
call
xchg
fwait
lods
je
pusha
cmp
sub
add
xchg
idivb
out
or
push
inc
leave
das
jb
mov
dec
jne
cmp
test
sahf
inc
jb
or
push
lret
cmp
jge
cmp
push
adc
add
dec
call
dec
jns
popa
mov
gs
lods
aaa
pop
or
xor
sbb
fidivl
daa
mov
lock
jno
xchg
aam
inc
mov
pop
mov
xor
pop
pop
ret
push
jno
mov
sarl
out
roll
into
test
outsb
lahf
and
jae
vunpckhpd
xor
fstp
addb
cmpsl
gs
aaa
or
xchg
popl
xor
mov
aas
out
gs
pop
inc
pop
or
push
clc
movsl
sub
pop
push
js
dec
push
cmp
and
test
mov
inc
mov
outsb
inc
ja
scas
cmp
ljmp
popf
jbe
je
rorl
mov
and
xor
dec
fsubrl
and
inc
lock
hlt
stos
stos
mov
test
ret
push
mov
stos
fs
scas
stos
or
std
adc
push
adc
cmp
cmp
mov
lock
push
push
xorb
sbb
sti
jnp
dec
dec
aas
push
inc
stc
dec
lods
inc
mov
mov
mov
add
pop
imull
std
inc
aas
imul
ss
mov
or
xchg
pop
mov
shll
arpl
arpl
inc
fisttpl
lods
movsb
fildll
test
xchg
pop
and
in
jns
icebp
and
and
push
adcl
repnz
mov
fdivrs
popa
sub
lret
cmpsl
test
arpl
fildl
add
inc
addr16
fwait
jmp
adc
orl
jo
cmp
add
movsl
mov
or
lret
push
in
jne
cld
or
xlat
imul
insl
dec
mov
mov
pop
lock
or
dec
bound
je
insl
test
int
orl
lret
outsl
hlt
xchg
adc
int
stos
push
push
sub
rorl
mov
xor
mov
je
inc
pop
dec
adc
xor
push
shll
mov
scas
clc
out
addr16
test
in
xor
mov
popf
cmp
hlt
cmc
and
xchg
fwait
cmp
test
or
cmp
into
loopne
mov
mov
sub
popa
pop
cmp
push
incl
bound
sub
es
incl
inc
cld
sarl
mov
bound
pop
lods
je
ret
push
mov
repnz
jecxz
xchg
inc
subb
icebp
fcoml
icebp
and
sub
jg
hlt
mov
cli
push
mov
and
xchg
jns
adc
xor
mov
scas
leave
xchg
lret
sbb
adc
push
mov
movsl
lods
pop
arpl
adc
inc
scas
pop
int3
sahf
stc
cld
push
xchg
xor
aas
push
outsb
inc
lods
inc
adc
outsl
and
cld
and
mov
fsubrp
or
cmpsb
cmp
outsl
mov
dec
repnz
in
cmp
in
ds
out
mov
jp
lea
or
movsl
mov
sub
ss
and
stos
xchg
push
adc
mov
adc
arpl
mov
stc
aas
rolb
jle
push
sbb
sbb
lea
repnz
ficomps
pop
pop
ret
jl
cmpsb
mov
mov
push
fcomps
sahf
jno
xchg
cmc
xor
push
dec
mov
rorl
push
adc
cmp
scas
mov
pop
xor
js
mov
sbb
pop
inc
push
push
in
stos
pusha
inc
mov
adc
pop
sbb
loope
pcmpgtb
xchg
mov
sbb
sub
inc
mov
mov
in
or
aas
inc
push
sub
pop
mov
popa
sbb
mov
mov
mov
xchg
xor
loope
cmp
rolb
sbb
mov
jle
inc
pop
hlt
in
andl
add
testb
daa
dec
in
jno
lret
pop
movsb
lds
fstl
movsl
es
orb
out
mov
aad
push
mov
and
stc
xorl
mov
cld
movsb
stos
in
cltd
add
mov
jmp
daa
fisubl
dec
es
stos
mov
inc
mov
loop
mov
xchg
out
adc
orb
inc
outsl
sub
insl
sub
dec
mov
jb
sub
dec
jmp
je
xchg
and
out
shrb
or
xlat
add
push
and
push
adc
xchg
pop
jle
mov
mov
add
test
shl
jbe
xchg
mov
cld
push
sarl
cmp
hlt
push
js
adc
push
psrlq
xchg
jp
cld
roll
arpl
js
and
imul
sbb
out
shr
jg
mov
cmpl
xor
imul
lds
mov
jge
fwait
inc
stc
lret
icebp
mov
stc
push
sbb
aaa
cmp
test
mov
ljmp
mov
dec
push
adc
ficoml
not
sbb
dec
out
aas
fsub
repz
sbb
shll
dec
rolb
dec
mov
adc
in
push
std
mov
pop
jns
dec
and
daa
lea
lock
push
jle
inc
aam
iret
cli
mov
add
shll
lea
mov
ja
push
incl
mov
or
sbb
jno
push
xchg
sub
add
test
mov
add
sub
adc
sarw
sub
push
or
push
out
fucomp
jns
add
pop
fstps
sbb
cmp
pop
scas
jle
mov
cmpsl
pop
fsubl
addr16
push
fwait
jge
fisttpll
shlb
lahf
mov
pusha
insb
jne
push
sub
and
xlat
pop
and
outsb
adc
ljmp
addb
cltd
aad
mov
movsb
xor
lcall
push
leave
into
jge
mov
xor
and
mov
repnz
jl
dec
dec
out
sahf
add
push
cmp
mov
cmc
jl
and
lock
std
js
in
xchg
inc
fwait
scas
jne
jb
scas
cmp
ja
mov
mov
das
out
loopne
mov
outsb
sbb
sti
jl
inc
subl
in
hlt
mov
sbb
aam
xchg
sbb
sbb
sbb
mov
adc
inc
xor
jbe
test
jl
out
add
sbb
stos
test
aaa
mov
repnz
push
push
mov
dec
xor
cmp
lods
mov
push
xor
cltd
xchg
adc
adc
cmp
out
pop
in
mov
rcrl
jle
pop
fbld
fisubs
inc
add
pop
push
xor
jb
inc
fldpi
xor
push
mov
out
mov
jl
cltd
popf
fsubl
je
andb
add
cld
jmp
jo
loopne
pushf
adc
mov
fwait
sub
cs
dec
movsb
cmpsl
mov
mov
dec
xor
loopne
mov
iret
popf
repz
popa
call
push
mov
xchg
xchg
cmpsb
sbb
sbb
fadd
push
push
adc
and
mov
imul
pusha
addb
inc
dec
jl
inc
lahf
ret
scas
xor
sti
cs
cltd
imul
and
cmp
xor
fisttpll
cmp
imul
jo
mov
insl
insl
xlat
dec
or
push
adc
xor
jmp
cld
imul
xchg
cld
push
aad
jb
fwait
push
roll
pop
out
cmp
pop
iret
scas
mov
or
sahf
push
cwtl
imul
dec
xor
dec
mov
loopne
mov
nop
stos
inc
pop
push
mov
fld
popa
jl
cmc
out
or
or
outsl
cmp
mov
sahf
jmp
cmp
icebp
aas
jecxz
sub
adc
jbe
popl
sbbl
dec
aam
jmp
sbb
bound
sub
lods
xor
push
mov
sarb
movsb
xchg
outsl
push
ds
adc
xor
stc
inc
jecxz
add
push
nop
imul
sbb
mov
xchg
mov
inc
inc
inc
insb
xor
sbb
dec
std
xor
cli
mov
adc
xor
jns
mov
fdivrl
inc
push
xchg
add
adc
mov
stos
mov
stos
cltd
sbb
mov
ljmp
push
dec
cmp
inc
xchg
mov
shl
mov
pminsw
xchg
cltd
adc
dec
adc
stc
mov
xor
cmp
adcb
push
hlt
out
pop
cwtl
mov
hlt
hlt
cmp
cmp
sbb
sarl
outsl
gs
lock
sub
pop
mov
loop
mov
add
cmp
aad
add
adc
pop
aas
add
les
mov
pop
push
xchg
jb
lock
lock
shrl
ja
jg
xchg
push
call
push
xchg
cmpb
jl
test
inc
addr16
mov
mov
mov
mov
push
aaa
jmp
pop
nop
pop
mov
xchg
mull
test
sbb
sbb
add
pop
lock
xchg
enter
pop
cmpsl
or
and
mov
adc
insl
jo
jae
push
sti
xchg
aas
lods
xor
or
ret
push
rorb
jo
push
lcall
lea
mov
xchg
into
lea
sti
sub
dec
push
fwait
inc
jle
aam
cs
stc
js
and
inc
jns
cmpsl
jecxz,pn
jbe
or
pop
pusha
ja
std
add
jecxz
test
mov
cwtl
fildl
add
push
add
inc
xchg
xchg
sub
sbb
push
bound
cmp
aaa
repz
mov
in
pop
gs
cmpsb
pop
push
test
std
in
push
ljmp
cli
jl
push
jns
add
shlb
int
jb,pn
fidivl
in
inc
lods
pop
movb
dec
inc
movsl
in
add
in
push
into
hlt
lret
lods
sub
lods
push
lret
mov
das
pop
dec
mov
repnz
ljmp
mov
inc
adc
and
xor
jmp
add
xchg
inc
add
mov
ret
jo
inc
push
into
stos
std
add
push
xchg
inc
idivb
push
sbb
mov
pop
fildl
jmp
jae
sub
loop
test
jns
sub
test
test
sbb
sbb
stos
push
outsl
hlt
arpl
pusha
loop
or
sub
push
add
jns
mov
mov
lods
dec
sbb
cmpsb
cmp
mov
mov
mov
imul
std
aad
sti
jmp
cmpsb
add
adc
sti
xor
cwtl
imulb
jo
xchg
sbb
lret
adc
push
test
es
dec
cwtl
push
mov
andnps
scas
mov
into
or
cli
movsl
insl
add
sbb
sbb
sub
enter
add
nop
jle
push
cmp
ss
lcall
push
pop
add
sti
and
push
out
addb
mov
inc
out
les
mov
xchg
inc
xchg
xchg
bound
rcrb
mov
fsub
sbb
jno
push
in
dec
pop
add
dec
hlt
cld
xor
in
jbe
jge
sbb
call
xchg
lahf
rorb
scas
out
pop
jp
fistpl
frstor
cmc
stc
pushf
fwait
mov
sub
xor
xchg
repz
sub
add
add
stc
je
add
jg
jmp
mov
jb
les
xor
decb
sbb
scas
adc
jns
jno
adc
iret
mov
adc
mov
add
add
loope
mov
add
jge
lcall
cmpb
call
jb
incb
pop
add
pusha
add
sub
push
int3
int
cmpsb
pop
mov
xchg
cmp
push
hlt
xor
ds
adc
rcrl
sbb
jecxz
inc
sbbb
ret
fldcw
js
cmp
bound
bound
xchg
ret
fs
mov
orb
sub
sahf
and
arpl
cmp
cltd
sbbb
and
jge
decb
arpl
bound
dec
mov
xchg
pop
mov
mov
adc
mov
sbb
mov
lods
pop
pop
outsb
out
sub
adc
sbb
and
or
mov
ja
bound
cmpb
shll
inc
cwtl
ficomps
xchg
mov
sub
imul
sub
call
data16
mov
lret
testb
adc
stos
mov
sbb
cwtl
imul
add
lret
mov
pop
imul
sbb
and
cmp
xchg
mov
imul
nop
inc
test
ljmp
ret
jmp
sub
jmp
cmc
inc
sbb
or
pop
inc
pop
mov
push
xchg
add
or
jb
imul
sti
cs
mov
loope
and
dec
negl
in
pushf
sarl
or
xor
pop
lret
pusha
xor
int
pop
pop
push
sahf
ret
fdiv
sbb
clc
fists
dec
cmp
mov
shrb
fists
push
sbb
inc
jg
icebp
mov
cmc
cltd
lret
inc
mov
jno
pop
lcall
jb
xor
roll
fisubl
cmc
lcall
movsl
add
fmulp
sub
test
mov
out
pusha
lcall
outsl
xchg
popa
add
in
push
dec
mov
fs
leave
mov
fsubr
les
sbb
xchg
jns
xchg
mov
pop
inc
mov
imul
loopne
stos
cmpsb
dec
lods
add
sub
xorl
push
fs
test
lods
movsl
mov
arpl
mov
mov
outsb
and
or
xchg
xor
jp
mov
push
movsl
jmp
cld
or
and
enter
ret
xor
lds
lock
mov
jl
mov
mov
add
into
mov
mov
iret
pop
cli
shll
negl
xor
jno
pushf
inc
loope
imul
lea
clc
sbb
push
xchg
cmp
cmc
sub
ret
jb
jo
in
aaa
shr
pop
or
cltd
fidivrs
mov
test
sbb
loopne
xor
imul
lock
mov
push
fyl2xp1
movq
cmp
mov
mov
sub
call
pop
rol
in
and
push
aam
in
shlb
sbb
sub
outsl
sti
enter
jl
repnz
pop
outsb
xor
push
lds
inc
ret
nop
pop
insl
mov
pop
popa
pop
fwait
mov
inc
add
mov
or
fldl
divl
jle
pop
or
xor
popf
inc
mov
das
call
sbb
clc
inc
into
pop
xor
fnstenv
or
cli
mov
movsl
mov
scas
mov
lcall
in
hlt
sub
addr16
into
push
movsl
add
mov
lret
clc
addr16
mov
adc
jnp
aas
addb
xchg
aas
jno
mov
cli
pusha
lret
xchg
mov
cmpxchg
and
pusha
adc
xchg
ljmp
inc
cs
xchg
mov
fsubrl
inc
scas
out
jno
push
mov
ss
jl
sub
add
pushl
movsl
jns
mov
ss
push
cmp
xor
mov
loop
mov
push
ja
or
jbe
push
xor
pop
dec
fstps
shlb
int3
jae
xchg
xchg
scas
pop
ret
shlb
xor
jl,pt
xchg
ja
lea
insb
cs
jae,pt
imul
mov
lods
push
outsl
and
outsl
push
nop
pop
dec
and
push
push
dec
enter
push
pop
lods
or
xchg
lcall
fdivrs
mov
inc
or
repnz
xor
sbb
imull
jae
mov
xor
int
out
or
mov
pop
xchg
scas
mov
ret
pop
and
dec
int
cmp
rcll
mov
pop
inc
inc
jp
add
sbb
testl
shll
add
ja
out
outsb
xor
sub
push
jp
pop
xlat
icebp
cmpsl
shlb
push
lret
icebp
cmp
lds
inc
sub
sub
adc
inc
sub
jmp
lret
dec
ret
fs
and
cmp
fwait
mov
lods
popf
iret
mov
cmpsb
pusha
adc
stc
insl
insb
xlat
inc
jo
and
xlat
inc
inc
sub
xchg
ret
xchg
enter
mov
dec
inc
xor
sbb
and
enter
pusha
and
pop
rorb
xchg
pusha
idiv
adc
or
aam
movsl
mov
cmp
loope
out
cld
add
xor
xchg
adc
movsl
movb
adc
out
shr
out
jge
stos
push
adc
icebp
adc
das
add
mov
stos
mov
inc
test
popf
cmp
fimull
mov
leave
fisttps
jmp
sbb
ja
mov
out
xchg
cmc
push
pop
sub
rol
inc
mov
push
inc
mov
dec
jecxz
mov
sbb
push
leave
mov
mov
jle
scas
mov
add
mov
lods
sbb
cmp
stos
adc
cvtps2pi
in
sbb
out
adc
push
in
pop
mov
dec
dec
cwtl
fs
xchg
push
xchg
mov
dec
jge
pop
mov
dec
push
jecxz
enter
xchg
sub
call
sub
jmp
add
cmp
fsubs
push
sbb
cmp
or
xchg
bound
pop
pop
mov
shll
xchg
gs
push
pop
xchg
insb
mov
dec
xlat
fdiv
sub
out
leave
pop
daa
orb
je
aas
sub
push
clc
movsb
cmp
xchg
mov
sub
or
xchg
aaa
rolb
push
testl
shrl
stos
lock
hlt
mov
pop
lret
jbe
aam
bound
movsb
sbb
jg
pop
insb
insb
mov
imul
popf
lcall
je
test
mov
mov
xchg
aad
dec
inc
cmp
inc
dec
loopne
pop
add
jb
jmp
mov
cmpsb
xchg
add
fbld
out
cs
mov
jp
fisttpll
jecxz
jno
pop
clc
dec
push
fidivrs
sahf
pop
mov
imull
mov
cmp
lahf
push
push
add
mull
dec
pop
cld
sbb
cmp
orb
nop
push
xchg
mov
jae
xlat
inc
push
pop
sbb
fwait
add
adc
sub
pop
ret
inc
push
push
lock
imul
test
and
ja
pop
mov
into
or
arpl
mov
es
jne
cwtl
in
jl
jne
loope
lods
push
stos
jecxz
add
daa
jge
xor
adc
ds
sbb
mov
jb
mov
push
add
mov
std
mov
pop
add
popf
loope
lea
adc
int3
push
cmp
and
push
sbb
nop
add
icebp
adc
imul
outsl
mov
cmp
cmpsb
mov
scas
xchg
pop
add
add
and
jle
cmp
xchg
pushf
gs
outsb
popf
jbe
addb
xor
push
testb
inc
ror
sahf
jae
les
je
lods
or
fsubl
mov
repnz
sbb
fmull
call
sub
fnsetpm(287
adc
dec
push
testl
jecxz
fdivp
jnp
xchg
ljmp
pavgb
xlat
jae
xchg
ret
xchg
adcb
push
add
int3
sub
cmpsl
in
push
jmp
cmpsl
lahf
int3
shrl
test
rcll
and
xlat
jl
mov
hlt
cmp
aaa
cs
mov
jnp
jno
repz
and
stc
xchg
pushf
inc
lods
popa
mov
or
movsb
mov
jecxz
adc
cmpsl
push
test
pop
test
aaa
in
shr
xchg
mov
cmp
cmp
aaa
std
andb
lock
dec
mov
mov
shufps
xchg
lret
sub
addr16
or
adc
test
cli
sbb
xor
dec
insl
mov
mov
repz
xor
iret
mov
outsb
dec
mov
mov
stos
out
shl
cmpsl
das
add
loop
or
cmc
or
imulb
jae
inc
cmp
mov
scas
fcmovu
push
jle
sbb
xchg
adc
mov
int
dec
cmp
mov
xchg
add
jae
aaa
push
leave
dec
xchg
pop
sub
scas
rol
sbb
lock
dec
push
xchg
cmp
mov
bound
out
pop
iret
adc
daa
xor
mov
jne
loop
sbb
cmp
leave
jecxz
out
or
jge
jmp
fisubrl
inc
xorb
push
mov
or
bound
cltd
push
and
push
mov
xor
push
dec
movsl
xor
ret
pop
dec
movsb
insb
repnz
mov
adc
pop
push
push
pusha
inc
dec
inc
repnz
sbb
stos
cli
std
jle
pop
ss
sub
mov
xor
imul
dec
sub
push
fwait
inc
arpl
push
sub
push
mov
xor
in
jnp
jno
test
lret
loope
daa
iret
lds
mov
js
idivl
sub
outsb
xor
fisubrs
leave
lret
jbe
mov
popf
in
popa
inc
sub
rcrb
pop
push
cmp
mov
insb
sub
es
sub
fwait
mull
sbb
or
xor
jg
sbbb
test
shrb
cld
push
add
mov
sahf
mov
pop
lret
sub
out
dec
push
dec
sbb
cmp
das
pop
nop
adc
xchg
imul
pop
int3
aas
or
xlat
push
mov
and
daa
nop
pop
pop
out
mov
lea
je
xchg
pop
dec
pushf
lret
xchg
je
test
xchg
or
add
and
mov
shrl
push
ret
sbb
add
jo
decl
jbe
jb
lar
mov
stos
ljmp
shrl
dec
mov
lock
test
incl
iret
std
jle
sub
pop
rol
xchg
push
in
sbb
movsb
mov
rcrb
or
xchg
pusha
dec
cmp
inc
fwait
movsl
arpl
shll
pop
cld
out
add
cs
insl
inc
sbb
daa
adc
mov
xchg
and
je
test
out
pushf
sub
shlb
xchg
fs
jmp
data16
or
in
add
xor
aad
push
shl
fistps
sub
je
add
out
testb
lahf
mov
fsub
inc
inc
inc
dec
in
pop
mov
add
pop
daa
xchg
lret
lcall
dec
pushf
hlt
pop
push
jns
ja
mov
popa
mov
f2xm1
jno
aad
data16
test
cmp
xchg
xchg
leave
mov
cmp
fs
lret
cmp
jg
lcall
lock
jnp
std
jbe
mov
fsubrs
adc
push
cmp
and
pusha
cmpsl
mov
push
adc
in
xchg
fwait
mov
hlt
xchg
and
ret
dec
xlat
and
push
lods
das
pop
pop
pusha
adc
jl
popa
hlt
pop
rcrl
lock
sub
dec
sarb
push
mov
ss
pop
mov
inc
fwait
cld
xor
shll
out
jnp
ds
inc
movsl
cmc
push
inc
jmp
outsl
shll
xlat
jg
push
rcl
xchg
or
mov
movsl
xlat
mov
xchg
adc
test
aas
sahf
mov
add
jnp
sbb
inc
xchg
inc
lock
pop
test
shrl
add
mov
out
xchg
xchg
mov
fxch
pop
mov
notl
repz
mov
lret
nop
sub
popf
es
mov
mov
test
lcall
cmp
and
sbb
push
pop
or
js
add
lds
sbb
dec
sbb
dec
aam
ljmp
xor
mov
sbb
lock
push
imul
popf
shlb
dec
jle
in
mov
jnp
mov
aaa
xor
cmp
sub
shlb
iret
push
and
mov
movsb
pop
mov
inc
into
adc
call
add
rcrb
add
xor
jno
push
and
xchg
outsb
insl
sbb
push
xor
adc
test
push
repnz
sub
dec
bound
adc
dec
mov
movsl
cmp
cli
ret
push
jge
and
add
mov
loope
int
dec
scas
xchg
jge
sbb
loop
or
inc
aaa
mov
stos
into
ja
shl
scas
pop
sub
and
lods
cmc
xor
out
sbb
sbb
loope
push
adc
xchg
cmpsb
jl
xchg
mov
dec
mov
mov
dec
fs
and
cmp
or
inc
push
adc
lea
ja
pop
add
sub
clc
pop
fsubrl
pop
shlb
fldcw
in
fadd
sub
out
stc
sub
rorl
add
cmp
call
cmp
inc
push
inc
bound
pop
addl
ds
adc
pop
and
push
mov
jbe
pop
inc
hlt
lods
add
dec
lret
mov
data16
pop
stos
imul
int3
aas
inc
shrb
lret
add
nop
or
and
imul
sbb
bound
mov
aaa
les
sub
cmp
gs
std
adcl
push
or
test
jns
cli
test
aam
sub
int3
das
test
adc
int3
xor
inc
adc
and
repz
aas
push
ja
adc
xchg
daa
cmp
les
fiadds
pop
sub
cld
cmc
fnsave
lret
sbb
and
test
inc
cmp
jge
add
push
shlb
je
and
dec
scas
push
dec
inc
sarl
divl
orb
inc
sub
mov
sbb
add
adc
push
sbb
sbb
cmp
or
leave
mov
dec
adc
out
cmpb
push
dec
or
out
nop
icebp
sbb
cmp
add
pop
loopne
dec
dec
inc
inc
cs
scas
mov
test
pusha
or
movnti
add
aam
ss
repnz
mov
sub
xchg
lret
pop
pop
cmpsb
fwait
adc
aas
testb
mov
pop
in
cld
bound
mov
js
int3
inc
xor
fstps
fisubs
mov
dec
imul
adc
in
aas
mov
sarl
inc
jg
dec
mov
add
shrl
and
adc
jnp
dec
shll
xor
push
int
out
addw
xchg
pop
adc
push
test
aas
dec
and
ja
sbb
loop
out
cmc
cmpsl
movsb
incl
pusha
mov
jecxz
jne
mov
test
inc
loop
aaa
dec
and
inc
add
xchg
xor
cli
jbe
xchg
lahf
xchg
mov
cmp
jbe
out
rcrb
andb
xor
inc
aad
insb
stos
hlt
fildl
mov
mov
xchg
out
mov
fldt
jne
xchg
pop
mov
pop
inc
mov
gs
scas
sbb
movsb
jno
xchg
out
adc
push
stos
or
outsb
adc
in
enter
popa
jo
das
lret
mov
xorb
pop
mov
cltd
pop
data16
jle
jmp
lret
aad
ficomps
lret
fldl
cmp
lret
lcall
das
in
lock
scas
cwtl
cmc
out
jmp
int
rclb
into
jne
push
insb
mov
inc
std
add
or
jbe
or
adc
icebp
sti
mov
xchg
push
mov
inc
mov
enter
push
jae
push
outsb
sub
push
negb
leave
dec
cmpl
push
and
inc
test
cmp
popf
fprem
lods
push
jp
es
jae
cmp
ret
pop
push
cs
mov
jp
jnp
lret
xlat
mov
loop
shlb
xor
test
push
jmp
addl
rcrb
js
ja
jg
xchg
pop
or
jl
and
push
cmp
mov
mov
xchg
in
sbb
push
test
lcall
es
mov
sub
and
jge
inc
shlb
mov
jge
cli
inc
rorb
xchg
inc
sub
xchg
dec
jb
addr16
pop
mov
fwait
test
xor
inc
lret
shrl
sub
pop
cmp
scas
add
scas
jne
sbb
or
or
sarb
xor
or
cmp
mov
shlb
dec
ret
pop
cwtl
jno
mul
fsubrs
fwait
mov
mov
xor
mov
adcl
repnz
or
pop
sub
movsl
imul
aad
out
stc
stos
imul
outsb
sub
xor
mov
dec
sahf
sbb
enter
pop
sub
jns
lds
or
sbbl
int3
xchg
nop
jb
sbb
mov
test
aaa
std
sub
mov
wbinvd
xor
adcl
pop
push
jle
push
dec
lock
data16
or
push
push
push
pop
xlat
cmp
xchg
loop
add
addr16
push
test
adc
jp
test
sti
mov
addr16
aaa
decb
mov
addr16
sbb
pop
mov
jge
or
mov
sbb
fs
dec
es
clc
mov
clc
sbb
cmp
pushf
pop
icebp
lea
hlt
mov
mov
rorb
cli
stos
jnp
dec
mov
add
xchg
jb
xor
cmp
mov
jne
leave
lahf
fnstsw
lods
roll
cmpsl
sti
pop
push
mov
inc
mov
mov
fadd
aam
cltd
dec
push
dec
push
das
jmp
lds
daa
mov
push
ret
and
xchg
xor
mov
int3
mov
out
jno
insl
adc
add
or
push
add
rsqrtps
push
lcall
mov
adc
ret
pusha
and
mov
orb
xor
mul
add
xor
ljmp
cli
pop
aam
push
clc
add
xchg
adc
xor
or
push
movsb
mov
das
stc
stos
icebp
roll
lcall
add
add
popa
xchg
inc
imul
xchg
in
loope
js
or
fwait
dec
cmpsl
xor
imull
adc
inc
pop
dec
dec
sub
loop
push
in
es
inc
out
fs
xor
cmp
jnp
mov
jmp
lock
push
pushf
data16
pminsw
mov
mov
int3
adc
push
in
rcrl
push
inc
cmpsl
decl
mov
ret
inc
mov
and
mov
mov
iret
sbb
sahf
inc
fistpl
repnz
imulb
ret
ret
mov
cltd
cmpsb
pop
xor
stos
aaa
sbb
sbb
cmp
sub
nop
xlat
lret
repz
xchg
hlt
cmpsb
fnstcw
mov
addr16
popf
sti
jo
xor
sub
cld
dec
int
pushf
or
inc
ret
pop
in
int
out
mov
ljmp
mov
adc
jl
inc
jg
adc
jge
insl
adc
shrb
ss
dec
mov
and
mov
mov
decb
dec
mov
mov
ja
push
test
jns
aad
pop
leave
jmp
push
pop
mov
push
leave
and
xor
and
mov
aam
sub
hlt
jns
out
lods
xor
lock
cmpsb
pusha
stos
sbb
sub
pop
or
cvttps2pi
enter
std
test
ljmp
stc
daa
js
ret
or
loopne
cmp
scas
addr16
push
and
and
inc
pop
ret
xor
loop
insb
lcall
push
mov
movsl
xorb
xchg
pushf
addl
mov
pop
fdivs
xlat
mov
or
movsb
dec
repz
daa
or
or
shlb
pop
es
inc
fstps
cmp
das
and
and
bound
push
repz
fists
out
pushf
jmp
mov
xchg
adc
ja
jp
xchg
xchg
pop
mov
xor
mov
sub
xchg
jecxz
movsb
orb
pop
aam
daa
xor
aam
fstp
mov
cmp
pop
inc
push
jle
imul
add
xchg
push
xchg
repz
cmpsl
lcall
xchg
cld
fsubrs
outsb
cmp
pushf
daa
shlb
test
mov
out
jl
xchg
push
add
push
push
jmp
jb
shll
in
rcrl
xchg
addb
adc
loop
ljmp
push
add
xchg
bnd
add
or
pop
subb
out
out
and
xchg
lahf
xor
or
ljmp
push
xchg
push
repz
jb
xor
insl
fcmovu
sbbl
sbb
jo
mov
sbb
stc
loop
bound
lock
lret
int3
lret
stos
pushf
lock
jg
or
and
cmp
sbb
sub
jns
cmp
sti
ljmp
neg
dec
lret
pop
out
loopne
or
mov
add
inc
jmpw
mov
rcrl
mov
and
fldcw
scas
jg
int
mov
jg
dec
repnz
movsb
jae
sbb
ret
fwait
daa
test
or
nop
scas
loop
jbe
jno
incb
inc
das
mov
cltd
lcall
mov
jp
pop
pop
xor
dec
mov
repz
loopne
add
fwait
sub
adc
aaa
fdivl
inc
in
cmp
out
pop
jnp
push
mov
in
mov
inc
jne
les
mov
loop
xchg
jns
int3
pop
loope
mov
adc
push
fbstp
pop
pop
js
loope
xor
jp,pt
add
push
mov
jp
in
in
or
int
arpl
in
movsb
daa
into
cmp
outsl
enter
cmp
sbb
fiadds
cmc
and
vpcmpeqb
mov
pop
iret
repnz
jl
aam
hlt
lahf
xchg
xchg
sarb
mov
js
lds
repz
dec
xor
dec
daa
jle
mov
push
mov
dec
mov
fwait
mov
loop
loopne
mov
leave
sbb
daa
xor
sub
in
js
rcll
mov
divl
xor
nop
fwait
adc
xor
loopne
xor
adc
out
add
movsb
aaa
stc
jle
ficoml
cs
sbb
xrelease
mov
fsts
daa
cmpl
or
mov
inc
jecxz
jp
push
sub
test
imul
pop
lods
lock
jmp
rcll
push
mov
outsb
mov
cli
daa
sahf
push
sbb
cmp
test
jno
idivb
mov
xor
dec
jae
data16
and
jmp
add
mov
pusha
pop
movsb
sub
pop
test
inc
test
popa
jl
pop
stos
inc
push
dec
sub
dec
lock
push
jmp
and
dec
fs
xchg
sbb
ret
loopne
mov
xchg
push
lea
ret
clc
repz
mov
sti
es
pushf
inc
sbb
cmpsb
cmp
cmpsl
mov
jbe
add
xchg
xchg
add
imul
mov
fbld
xor
mov
clc
push
out
mov
xchg
scas
add
add
je
cmc
xor
inc
mov
mov
and
or
sbb
mov
js
inc
xlat
stos
bswap
shrl
dec
dec
rorb
lock
cli
cmp
jecxz
mov
mov
xlat
out
mov
sbb
enter
lret
ljmp
xchg
push
jo
mov
loop
je
pop
cmpsb
or
add
jp
stos
lods
and
or
xorb
jne
or
cmp
lret
add
cmp
mov
lods
xchg
incb
cmp
lds
movsb
jl
stc
push
leave
lahf
mov
fcomi
out
xlat
cvtps2pi
cmp
mov
movsb
and
xchg
add
out
mov
push
ss
outsb
inc
xor
and
ret
pop
mov
mov
rol
add
push
aam
add
fsubrs
sbbb
and
inc
cmp
mov
test
das
scas
lock
data16
loopne
sub
decl
std
push
mov
cli
sbb
out
jbe
lock
shlb
mov
dec
xchg
stc
and
orl
mov
sahf
pusha
aam
ret
inc
push
in
mov
mov
fcompl
test
push
mov
add
repz
fbld
insb
cmc
jns
mov
add
or
aaa
xor
in
mov
mov
test
dec
xchg
fadds
push
enter
mov
push
cmp
pop
loopne
andb
cs
test
xor
fstl
jecxz
dec
pop
test
or
xchg
leave
xor
notl
fs
or
mov
les
pop
mov
jb
dec
adc
test
pop
sbb
subb
imul
push
bound
add
pop
cmpsb
aas
jb
push
inc
add
testb
cmp
sub
in
sub
sbbb
mov
push
jmp
int
cld
leave
and
add
cs
mov
push
push
adc
std
jmp
ss
jle
or
sbb
mov
ja
or
int
jp
mov
cmp
or
sub
sub
sbbb
and
mov
ds
sub
xchg
aam
and
idivl
shlb
sbb
adc
fisubrl
bound
pop
daa
repnz
add
sub
inc
push
test
movsl
aad
mov
insb
xorb
das
inc
jno
inc
je
loope
imul
lock
call
bound
out
cld
inc
out
sbbb
and
lahf
cmp
mov
sbb
rep
jecxz
loopne
mov
mov
xchg
movsb
mov
adc
dec
and
push
sbb
fimuls
aaa
ljmp
inc
push
fldenv
mov
add
or
dec
sbb
jp
lds
ljmp
into
js
adc
pop
lods
aad
add
fwait
stos
or
mov
divl
hlt
rolb
cs
mov
jne
adc
in
andb
xchg
push
and
movsb
dec
call
in
data16
daa
pop
hlt
mov
cld
cmp
xchg
stos
jecxz
popf
out
fstpt
in
xchg
outsl
hlt
fldl
rcl
inc
xor
xchg
fs
nop
jbe
xor
stos
jl
mov
sub
ss
fmuls
arpl
insb
mov
les
std
xchg
in
push
or
push
sahf
subb
mov
xor
nop
scas
outsl
jno
adc
pop
add
pop
inc
mov
mov
mov
cmc
aad
xchg
aam
mov
dec
in
insb
adc
cmp
adc
test
inc
mov
xchg
sbb
cmp
mulb
cmpsb
push
sbb
adc
insb
xor
push
push
xor
pushf
jle
xor
inc
mov
pop
push
adc
jns
sbbl
pop
addr16
ja
push
out
jne
cmp
jbe
dec
ljmp
mov
popa
stos
fstp
das
test
push
mov
xchg
cwtl
and
jnp
mov
jmp
arpl
pop
sbb
inc
lods
mov
push
or
filds
aad
sbb
mov
enter
in
sbb
jno
out
cmpsl
add
outsl
leave
push
mov
jb
xlat
gs
cltd
fwait
jne
pop
shrl
xchg
jl
mov
mov
inc
addr16
mov
dec
rol
lahf
xor
out
mov
and
fsts
jge
mov
xchg
mul
mov
mov
std
mov
mov
leave
in
cld
sbb
aas
jmp
aad
mov
jnp
add
enter
xchg
clc
or
ljmp
scas
xor
xor
ret
jbe
mov
std
push
or
add
arpl
js
insl
popa
inc
sbb
add
leave
and
sbb
mov
jns
test
sbb
jo
push
inc
inc
notw
test
jae
gs
ficomps
lahf
xchg
call
pusha
and
inc
insb
mov
pop
dec
push
shr
cltd
and
mov
xchg
xor
mov
mov
or
pop
xchg
in
js
cmpl
adc
inc
mov
fldenv
xor
or
cmp
push
mov
push
mov
sub
and
mov
nop
or
jmp
cltd
sub
fxch
mov
or
int
mov
or
xor
ja
cli
repnz
int
adcl
xor
jge
ret
sti
stos
repnz
inc
add
clc
or
test
subl
xorl
inc
jecxz
loope
mov
scas
adc
mov
add
cltd
scas
sbb
loop
shll
inc
adc
pop
aaa
lea
ret
lods
testb
movsl
loop
mov
xchg
decl
xor
dec
daa
enter
cmpsl
ret
jae
clc
orb
jb
xchg
push
and
mov
and
fstps
mov
jmp
or
in
lret
xchg
pop
xor
lods
pop
mov
pop
aam
out
test
push
pop
leave
pushf
mov
jb
ret
add
fnstcw
insb
mov
sub
add
jp
mov
mov
or
cmp
ds
jbe
adc
addr16
mov
shll
cli
sbbl
pushf
dec
jno
cmpsb
test
nop
mov
enter
cmp
adc
nop
imul
movsl
push
pop
testl
lret
je
jecxz
int
mov
cmp
movsb
jnp
loop
xor
pop
out
add
adc
les
aas
std
xchg
scas
in
xor
lds
push
inc
mov
sub
pop
out
minps
int
ficomps
mov
shr
sbb
ljmp
jp
jecxz
xchg
orl
in
xor
adc
outsl
sbb
xor
mov
jecxz
int
xorl
push
jno
xor
pop
mov
insb
lock
fdivrs
les
xor
cmc
and
or
cmp
rolb
pop
popf
or
xor
and
mov
and
push
xchg
inc
dec
sub
add
jne
out
pusha
jne
xchg
fcmovbe
and
or
xchg
or
push
inc
int
xor
pop
mov
leave
rcll
leave
movsb
or
jb
or
pop
ret
ljmp
jmp
mov
lret
movsl
push
iret
leave
cli
ja
mov
mov
jnp
push
inc
aam
test
lret
lcall
mov
rorb
das
add
fdivp
in
cmp
sar
aas
pop
mov
push
jp
cmp
stc
mov
ror
cmp
fcmovb
dec
loopne
fnstenv
jb
outsl
in
loopne
inc
xlat
sub
jo
pop
lods
scas
and
mov
rcrb
loop
mov
sbb
mov
leave
xor
test
cmp
cmpl
jae
add
test
mov
jne
out
cmp
mov
inc
std
lcall
mov
mov
jbe
pop
int
xlat
cmp
inc
or
xor
sub
inc
std
xchg
sbb
in
insl
sub
mov
arpl
pop
test
pushf
push
sub
cli
inc
mov
mov
mov
hlt
ds
add
add
jmp
pushw
popa
jne
adc
fcomi
loope
mov
faddl
es
cmpsb
mov
push
cmp
or
xor
pushf
loope
in
shlb
das
mov
xchg
xor
pop
mov
jmp
stos
das
push
jl
mov
add
adc
out
sti
cwtl
imul
hlt
lahf
nop
test
in
xchg
or
aas
sbb
popa
mov
test
mov
mov
mov
mov
fstpt
mov
outsl
dec
lds
mov
decl
insl
xchg
pop
inc
std
and
adc
shll
loopw
push
mov
fwait
test
outsl
fists
xor
cmc
roll
test
adc
addr16
cmp
sub
jmp
and
push
or
pushf
add
xchg
pop
and
mov
mov
aad
mov
and
mov
in
lods
cmp
and
jle
xchg
clc
fldl2e
cli
scas
mov
or
or
inc
mov
push
js
mov
fucomi
mov
je
pop
pusha
add
in
addr16
push
rorb
pushf
pusha
cmp
lock
pop
lea
jns
add
and
mov
sbb
sbb
xor
mov
and
in
out
adc
outsb
add
out
lea
sbb
mov
jo
imul
inc
pop
fidivs
ss
and
mov
push
mov
inc
mov
jno
popf
dec
outsb
add
sbb
mov
xor
fwait
mov
push
cli
pop
xor
mov
xor
inc
fcompl
mov
jns
fstps
inc
les
inc
loope
mov
es
iret
insl
push
sub
jbe
mov
mov
sub
xor
fstpl
xchg
mov
push
addl
inc
movsl
inc
sarb
call
mov
ja
into
and
or
add
mov
push
sub
data16
popf
pop
ficompl
lahf
lcall
test
mov
addb
pop
and
daa
pop
shl
push
movsl
adc
add
push
rcr
xchg
xor
mov
xor
cs
ds
add
js
pop
loop
add
daa
pushf
or
sub
divb
lahf
and
lea
int3
add
out
lcall
cmpsb
pop
mov
jae
out
mov
jb
push
push
push
lock
mov
mov
stos
inc
mov
push
jns
call
sbb
data16
jae
cwtl
incl
leave
movsb
popf
ret
jecxz
stos
aas
mov
add
cmpsb
pop
mov
mov
shlb
imul
xor
mov
mov
sub
inc
jnp
icebp
sbb
sbb
push
mov
jne
dec
pop
mov
add
inc
mov
pop
out
cmp
xor
sbb
movsl
mov
pop
aaa
mov
cmp
ljmp
jp
stos
pop
dec
sub
addr16
jo
jmp
lods
xor
pop
fadds
jg
aam
ljmp
aas
and
fidivs
and
jp
dec
adc
mov
sahf
push
mov
leave
xor
cld
xchg
mov
add
sarb
dec
movsb
lea
int3
lea
jb
xchg
jnp
adc
sub
xchg
jb
ret
shl
pop
pop
fucomip
inc
adc
addb
sbb
ret
fsubs
sub
push
int
add
mov
add
xchg
sbb
je
gs
hlt
push
incl
mov
sub
daa
or
mov
cmp
mov
loope
movsb
jo
nop
test
insl
cwtl
out
popa
xchg
out
push
rorl
or
insb
outsl
push
xchg
enter
inc
jecxz
loop
lods
pop
pop
mov
dec
ret
inc
xor
popf
testb
pop
xchg
test
idivb
jge
mov
in
repz
xor
aaa
loope
shlb
push
movsb
and
lret
pop
xchg
xchg
subl
ss
dec
or
pop
dec
xor
push
sub
jle
mov
loope
stc
ss
jo
xchg
mov
loope
sbb
sahf
xor
jno
mov
sahf
inc
sub
into
aaa
ret
cmovl
mov
pop
jb
pop
stc
out
pop
mov
mov
adc
loope
sub
jl
shrl
jg
jae,pt
dec
clc
mov
mov
dec
test
leave
mov
lcall
shrl
shrb
and
mov
outsl
das
sub
jno
inc
je
jno
or
lahf
ds
pop
lock
inc
push
je
bound
lods
push
nop
stos
jg
mov
stos
leave
iret
pop
push
loop
std
out
and
and
pop
push
push
add
in
xor
inc
das
sar
cli
push
mov
fisubrl
jecxz
imul
push
dec
xor
jle
in
mov
and
std
sbb
out
roll
xorl
or
jne
xor
popa
xlat
daa
stos
pop
gs
test
add
clc
rcrl
lret
cmp
sub
pop
dec
mov
push
fldt
pop
fldcw
and
add
add
rcll
pusha
test
xor
mov
inc
mov
repz
add
js
lret
rcrb
lahf
ds
push
pushf
jb
push
cwtl
cmp
push
insl
or
pop
ss
sub
das
out
mov
sar
jmp
or
call
pop
mov
adc
xchg
mov
in
jns
cld
fcoml
popf
add
pop
outsl
clc
stos
dec
jns
sbb
mov
fcompl
add
cld
mov
sbb
test
mov
jb
clc
roll
dec
xchg
adc
sbb
push
dec
cld
cwtl
inc
aaa
clc
mov
clc
call
mov
dec
in
xor
je
jae
lods
jle
pop
es
jmp
lods
jne
fs
lock
addl
loop
sbb
add
fmull
adc
or
add
dec
ret
rorl
imul
xchg
pop
or
jmp
mov
dec
add
ss
stos
xchg
pop
ja
add
outsl
movsl
movsl
mov
pop
sub
into
xor
or
or
pusha
cltd
into
cmc
nopl
dec
dec
data16
lods
btc
add
jmp
pop
icebp
dec
mov
xor
out
or
js
jne
xchg
cmp
sub
jg
jnp
add
jecxz
add
push
ja
adc
jae
cmpsl
fwait
in
or
icebp
sarb
and
xor
mov
into
push
sub
rcrb
test
lods
scas
notl
push
fisttps
inc
pop
mov
sbb
lret
lods
push
or
fstpt
and
pop
jbe
mov
xchg
or
cmp
and
jmp
repz
movsb
sub
aaa
push
mov
in
icebp
aam
push
pop
jecxz
mov
add
ja
mov
or
int
jne
loope
shlb
cmpsb
push
cmp
xchg
dec
das
loop
add
jmp
cltd
adc
adc
add
cmp
inc
lcall
push
adc
jp
aad
shrl
mov
loop
xchg
sub
lock
gs
xor
dec
mov
rcr
or
je
out
inc
cmpsl
fwait
rorb
daa
faddp
or
add
enter
pop
cmp
or
sbb
movsb
sbb
jo
mov
lahf
shll
cmp
mov
inc
insb
out
fs
add
lahf
int3
out
pop
sub
pop
inc
fistpll
mov
inc
adc
cmc
mov
movsb
dec
push
shl
dec
dec
mulb
lods
dec
fistps
into
cmp
inc
shll
sub
and
dec
mov
lock
jb
pop
test
sbb
into
pushf
clc
fs
out
je
or
mov
fcomps
push
pop
insl
xlat
inc
dec
push
outsl
sbb
pop
jae
out
and
or
cmpsw
cs
js
inc
scas
jecxz
cmpsl
add
pusha
pop
test
jl
dec
pop
inc
mov
stos
nop
xor
shl
into
std
divl
mov
test
mov
inc
lret
pusha
ficomps
imul
jno
sub
sbb
add
lahf
hlt
or
cmp
insb
cmp
testb
lea
pop
daa
lock
popa
mov
mov
lahf
jnp
inc
cmc
add
mov
shl
sub
jmp
loope
sbb
or
outsb
cmp
out
andb
pop
inc
scas
fildll
loope
and
subb
daa
lds
iret
mov
sbb
xchg
jnp
fcmovnb
test
or
lcall
sub
fcompl
sbbb
into
xor
jbe
inc
lods
mov
icebp
cmp
xor
inc
mov
cmp
clc
xor
and
mov
cmp
xor
cmp
call
inc
inc
xchg
arpl
xlat
icebp
dec
push
sti
jb
aas
fdivr
mov
addb
jg
repnz
jno
add
xor
in
lods
add
dec
sub
mov
cli
jns
jns
fmuls
jl
scas
pop
scas
aas
pushf
cmp
testl
xor
enter
dec
outsb
add
test
outsl
mov
fs
add
push
pop
mov
push
or
xchg
jmp
mov
pop
adc
mov
incl
aas
xchg
add
imul
jno
scas
jg
clc
cmp
pop
and
jns
push
fldt
insb
mov
nop
add
outsb
and
xchg
cwtl
mov
mov
pop
xlat
lock
xchg
ret
cmpsb
sub
addr16
mov
sbb
xor
fildll
mov
mov
jmp
push
lahf
outsb
add
lods
dec
fwait
and
push
push
cmpsl
jg
lcall
outsl
hlt
bound
into
std
popa
pop
sbb
fdivr
mov
shl
icebp
or
lret
scas
inc
mov
aam
mov
jg
push
rcrb
or
data16
dec
xchg
pop
xchg
cmc
out
popa
jmp
inc
dec
es
lcall
cmp
pop
test
dec
dec
pop
and
cmp
hlt
pusha
rcl
xchg
pop
popa
fisubl
xchg
outsl
std
cmp
std
lds
pop
lea
mov
mov
jl
stc
fdivp
loope
mov
mov
xor
pop
push
add
sub
andb
adc
popa
mov
test
in
sahf
jns
jbe
ficompl
xchg
push
pop
mov
jge
pop
inc
pop
out
and
add
adc
bound
std
nop
outsl
les
or
lahf
xor
sub
adc
dec
sub
lahf
andb
cli
inc
jle
bound
or
lcall
push
sub
mov
xchg
fsub
xor
pop
pop
fimull
jae
add
inc
mov
inc
adc
mov
push
das
rclb
mov
mov
imul
loope
push
loope
inc
mov
test
aaa
lahf
imul
out
push
pushf
sbb
shrd
mov
inc
jmp
ss
xchg
or
xor
push
pusha
xor
call
mov
dec
daa
test
orl
addr16
mov
pusha
imul
xor
out
arpl
xchg
push
lahf
movsl
inc
pop
or
mov
jno
cli
cmpsb
dec
push
jmp
popa
dec
mov
jbe
aam
mov
mov
xor
in
lcall
jg
sub
imul
mov
popf
xchg
dec
and
clc
shl
ja
add
pop
add
imull
insl
dec
mov
cmp
dec
sbb
jge
pop
push
test
out
mov
lods
aas
cld
jns
sub
sti
sub
push
aas
int
aas
adc
test
cmp
out
adc
push
mov
xchg
inc
leave
in
outsl
gs
repnz
jl
adc
mov
fnstenv
and
clc
rcll
adc
sbb
ss
dec
pusha
sub
call
sub
fdivl
sbb
lock
mov
out
pop
adc
mov
xlat
cmpsl
adc
pop
cmp
ja
lret
ljmp
mov
jecxz
mov
and
lock
mov
mov
inc
test
fcmovnu
mov
fwait
pop
xor
jae
mov
cmpsb
add
cmc
fiadds
jb
lods
cmpsl
dec
mov
das
hlt
inc
outsb
and
ja
add
in
mov
push
pop
jbe
mov
xchg
and
lret
fucompp
movl
repnz
imul
xchg
push
adc
mov
aad
mov
dec
outsb
dec
icebp
in
test
mov
and
adc
xchg
stos
ss
xor
imul
dec
pop
jb
fcoml
inc
adc
lret
jo
call
mov
in
ret
cmp
pop
negb
lods
mov
loop
mov
mov
in
rolb
add
jb
cmpsl
adc
jecxz
aam
xlat
and
add
mov
push
push
jns
mov
mov
mov
jl
pop
fisttpl
in
xchg
iret
out
pop
mov
bound
xchg
inc
xor
push
fcomps
lcall
std
popf
push
lea
loopne
sbb
add
jg
or
lods
xchg
outsl
iret
add
jae
sbb
sub
cltd
sti
pop
out
xor
mov
sub
repnz
arpl
inc
int3
pop
in
add
div
pop
and
inc
pop
and
cmp
mov
in
mov
lds
ja
inc
jno
push
mov
xchg
movsl
sar
xchg
pushf
lcall
in
icebp
sbb
mov
arpl
int
sub
jnp
jne
jb
sahf
out
test
cli
rcll
sarl
aas
sbb
sbb
inc
fistps
jne
jg
movsb
dec
test
mov
mov
xor
stos
int
inc
xchg
jbe
adc
pop
rol
adc
add
mov
jbe
mov
add
push
fistl
pushl
mov
ret
dec
test
ljmp
xor
xchg
call
fidivrl
mov
decb
shl
push
bound
xchg
or
mov
push
jecxz
addr16
insb
or
add
adc
adc
mov
or
pop
in
sbb
xchg
push
sub
mov
jge
pop
cmc
ret
flds
ss
pop
divl
mov
push
add
stc
sub
sbb
popf
mov
ret
mov
fdivs
int
xchg
sbb
push
and
lock
inc
mov
lock
add
sub
test
mov
arpl
sub
xchg
xor
mov
mov
inc
cmp
outsl
add
clc
pop
mov
xor
pop
jg
inc
mov
sti
or
loopne
pop
stc
cmp
mov
inc
out
pop
cmp
jl
inc
mov
daa
xchg
in
imul
bound
in
jl
lcall
movsb
ljmp
rcll
sub
loopne
mov
mov
ret
inc
xchg
xchg
in
cmpsl
lods
dec
and
or
mov
std
repz
mov
fbstp
jmp
out
inc
and
lods
and
mov
stos
bound
incb
out
push
or
lods
cmp
adc
lea
push
push
outsl
inc
sub
call
lcall
ds
out
fcompl
inc
call
adc
xor
cmp
sarb
iret
inc
push
sbb
in
sub
pop
or
stos
fcmove
sub
xor
xchg
scas
test
gs
lcall
repnz
aas
lret
mov
jecxz
or
inc
imul
mov
les
mov
mov
xchg
out
arpl
in
in
fcomip
inc
push
jne
xchg
mov
mov
inc
into
fbld
mov
lahf
repz
gs
and
sbb
xor
push
jge
imul
push
test
fdivrs
xor
xchg
lods
in
inc
xor
xchg
mov
sub
push
aas
jo
adc
flds
dec
arpl
leave
jle
push
std
leave
lahf
inc
jg
lock
and
adc
adc
xchg
push
sbb
add
cmp
les
jl
mov
or
jno
int3
push
xor
cmp
outsb
inc
enter
push
xchg
mov
mov
popa
lock
mov
in
jecxz
cmp
nop
imul
push
cmpsb
das
and
pop
adc
jmp
push
popa
mov
dec
and
ds
sub
fsubrl
xchg
insb
mov
hlt
shll
js
andl
push
jg
popa
das
fwait
pause
in
push
inc
push
inc
dec
cltd
push
adc
das
pop
sbb
ss
and
jns
jg
ds
jb
xchg
lcall
repnz
test
mov
mov
imul
negb
push
outsl
repz
mov
add
popf
ret
xor
das
js
push
sbb
cmpsl
sbb
imul
mov
mov
stc
and
sub
push
lds
shlb
push
ucomiss
jbe
addr16
rclb
stc
jo
or
movsb
popf
pop
pop
movsb
jmp
and
cmpsl
or
les
or
movd
cs
in
dec
jp
rcll
sbb
shrl
add
or
stos
test
and
and
sub
jmp
enter
fsubrl
jbe
push
jbe
in
jns
push
push
and
shrl
ss
out
inc
jg
cmp
add
sbb
icebp
clc
pop
sub
nop
cltd
mov
sub
ror
mov
aad
movsb
dec
outsb
adc
push
insb
mov
mov
bound
orb
xor
and
stc
mov
jecxz
mov
lock
iret
out
jge
add
add
mov
icebp
icebp
aam
sbbb
ljmp
or
xchg
or
push
fisubrl
mov
test
push
fsub
mov
stc
cmp
sbb
adc
pop
insb
mov
push
xchg
sub
movsl
adc
outsl
sbb
xchg
pop
mov
add
mov
add
adc
incl
arpl
pop
cmp
xchg
arpl
stos
es
outsb
pop
out
stc
out
push
int
pop
xor
sub
xor
push
sbb
in
xchg
add
outsl
and
push
add
popa
mov
lret
enter
mov
sbb
stc
pop
in
out
decl
aas
adc
push
mov
sbb
inc
mov
add
pop
mov
enter
pop
enter
icebp
jne
repnz
push
push
test
mov
push
pop
adc
sbb
cltd
pop
mov
mov
repz
or
push
sub
lret
in
pop
repnz
rcll
dec
pop
aad
out
dec
fldt
jae
or
shll
xor
and
inc
adc
jp
or
xlat
pop
mov
mov
xchg
dec
mov
mov
mov
sarb
outsl
add
mov
mov
shl
mov
mul
push
rol
pop
dec
sbb
push
lods
add
les
jb
fcmovb
fmull
test
arpl
and
pop
add
cmp
nop
dec
or
or
cmp
insb
pop
int3
sub
aas
sub
pop
fucomip
addb
aam
ja
adc
out
das
or
ret
sarl
jo
cmp
dec
jmp
jg
xchg
inc
pop
int
loop
lcall
mov
je
sub
test
jbe
xchg
dec
or
and
and
insl
sbb
je
int3
shl
jae
loop
mov
cmpl
push
xlat
xchg
mov
cli
in
jg
jb
mov
icebp
mov
popf
push
insb
cmp
cltd
repz
rcll
jl
push
jae
sub
jno
push
in
xchg
add
dec
fmull
add
push
aaa
inc
push
pop
pop
cmp
jo
dec
and
push
inc
subb
iret
cmc
sbb
adcl
sti
and
lret
push
in
mov
dec
popa
cmpsl
pushl
jle
inc
sahf
jmp
stos
test
mov
scas
bound
pause
inc
lcall
lea
in
mov
and
ror
jne
cltd
inc
js
std
dec
sbb
adc
cmp
lret
std
shlb
icebp
ja
ljmp
xor
jno
push
stos
mov
mov
sub
inc
in
ret
xor
xchg
or
adc
out
sub
and
pop
jecxz
lcall
mov
inc
jnp
dec
push
das
xchg
ret
cltd
out
push
add
test
iret
jns
and
out
mov
push
js
sbb
cmp
addr16
fbld
inc
in
addr16
and
lret
rcl
mov
push
mov
sbb
loope
stc
and
roll
push
push
cld
jb
push
popf
sbb
daa
data16
mov
xor
aaa
andl
cmpsl
push
movsl
das
push
push
inc
inc
pushf
call
ljmp
in
das
scas
or
or
leave
pop
test
imul
loopne
dec
scas
inc
divl
gs
aas
lods
fwait
mov
cmp
xor
sahf
push
xchg
cmpl
int
inc
sbb
mov
cltd
aad
adc
xchg
jne
sbb
lea
nop
imulb
mov
test
int3
rcrl
mov
and
mov
lds
call
imul
pushf
arpl
lcall
shrb
shll
or
scas
jg
in
repz
xchg
sub
je
sahf
into
into
pop
outsb
jo
insl
or
push
aad
popf
mov
or
jmp
ret
mov
xchg
out
cmp
insb
push
iret
popa
sbb
outsb
fbld
dec
sub
imulb
xchg
cmp
add
rcl
pusha
iret
xlat
jge
loop
adc
inc
xchg
pop
add
out
sarb
data16
push
push
fdivrs
xchg
and
ret
pop
pop
cli
mov
pop
sahf
add
sub
mov
movsl
jmp
pop
mov
iret
dec
dec
jne
lret
loope
mov
pop
push
aam
imul
rcr
lret
js
scas
aas
lds
cmp
lods
pop
pcmpgtw
mov
ret
dec
xchg
mov
mov
push
cwtl
outsl
mov
push
lcall
xchg
jnp
xor
fs
aad
das
mov
mov
push
scas
push
outsb
roll
sub
push
adc
ljmp
pop
sbb
jno
xchg
sbb
push
push
cmp
jae
dec
hlt
in
outsb
push
sbb
aaa
ss
in
sub
mov
jbe
add
xchg
cmc
mov
push
sub
gs
in
cmp
addr16
inc
repnz
int
fdivrs
sub
loop
mov
xchg
das
fwait
data16
dec
lods
jae
mov
enter
movsl
clc
fisubl
cltd
sub
outsb
out
jae
add
sbb
jnp
leave
xor
jecxz
les
jnp
or
rcr
mov
scas
out
popf
sbb
pop
add
xor
xchg
lds
mov
mov
je
adc
not
push
imul
cmp
add
inc
xor
aad
sub
cld
in
ret
mov
jbe
test
in
add
imul
pop
xchg
sub
or
ds
loope
and
mov
dec
xchg
stc
xor
xchg
pop
xorb
or
cmp
pop
in
fadds
push
pop
mov
mov
daa
mov
out
fnstcw
in
imul
mov
sub
cli
xchg
je
ljmp
fmull
adc
push
jp
bound
and
dec
jae
dec
mov
lret
pop
out
push
sub
je
push
clc
hlt
sbb
cld
xchg
cmpsl
lock
test
rcr
push
andb
ss
xor
aad
fidivs
cmp
and
sub
or
in
pop
mov
mov
sbb
xchg
into
in
leave
and
push
pop
lcall
pop
pusha
and
clc
imul
bnd
cmpsb
mov
inc
pop
push
mull
or
repnz
fwait
or
mov
les
mov
imul
cmp
push
dec
js
xchg
cmpsl
das
mov
fsubl
stos
insl
outsb
mov
lock
dec
inc
mov
cmp
sarb
ds
mov
pop
ret
cmp
fs
push
jns
mov
addr16
push
inc
push
dec
jmp
xchg
mov
adc
xor
mov
dec
call
in
pop
inc
sbb
jmp
ret
sub
xchg
mov
xor
rorl
andl
nop
or
cmpsl
sbb
shlb
mov
insb
dec
mov
lds
jne
stos
call
loopne
or
stos
inc
inc
jmp
cld
sub
insb
pop
adc
cmp
dec
and
mov
movsb
or
adc
lock
jge
mov
mov
lods
xchg
dec
or
mov
mov
dec
xchg
negl
xor
add
mov
sbb
pop
xchg
gs
sahf
lret
jno
xchg
mov
aam
sub
arpl
cwtl
xchg
scas
fsub
test
and
cwtl
scas
jae
lahf
js
inc
mov
fwait
inc
jbe
sbb
jg
movsl
xor
xchg
in
inc
and
gs
insl
roll
sbb
mov
inc
int3
xor
mov
adc
ret
cmpsl
push
in
out
jle
dec
mov
cli
jb
loop
lds
add
jo
icebp
das
pop
xor
mov
fs
adc
mov
add
jg
pop
pop
sti
inc
push
sahf
rdmsr
sub
cmpsl
adc
xchg
or
cmp
into
mov
xchg
xor
ret
icebp
xor
and
sub
aas
aaa
or
jo
cmp
jg
jnp
lods
or
inc
sub
mov
mov
jecxz
push
loope
lock
mov
mov
mov
jl
out
shl
bndldx
outsl
std
test
mov
or
xchg
mov
in
insl
add
lahf
js
sahf
mov
sbb
outsl
push
adc
ficompl
paddsb
push
rcrb
stos
int
dec
inc
push
arpl
push
dec
inc
inc
or
push
cmp
cwtl
inc
add
add
lods
sahf
pushf
shrl
add
mov
and
sbb
and
dec
xchg
jmp
aaa
nop
and
fidivl
cld
inc
fistpl
es
mov
jl
sub
inc
xor
pop
andb
lahf
adc
sub
xchg
daa
and
fs
bound
pushf
push
xor
loop
leave
enter
or
mov
inc
or
loope
add
or
pop
cmp
lahf
xor
cwtl
ficompl
or
xchg
ret
push
filds
loopne
scas
cmp
xor
inc
out
or
pop
daa
call
jnp
pop
or
sbb
push
push
xor
clc
mov
push
jb
out
sbb
sti
pop
jecxz
xor
popf
sbb
mov
push
pop
cmpsb
test
xor
ljmp
or
aaa
sti
lock
push
push
xor
push
pop
mov
push
or
stos
fistpl
aam
mov
scas
push
mov
xor
sbb
jbe
mov
push
mov
movsl
push
out
push
mov
jg
cmp
and
push
xor
xor
rcll
popf
testb
jbe
add
test
and
in
scas
test
jg
inc
pop
cmp
xchg
jb
push
cmp
outsl
adc
test
cmc
push
add
or
aam
xchg
cltd
test
dec
xchg
pop
inc
sub
cmp
pop
cmpsl
sub
lods
leave
and
add
aaa
in
mov
orl
rclb
cwtl
cld
push
mov
out
mov
jnp
cmp
add
lcall
mov
xlat
dec
sub
mov
gs
mov
popa
sbb
filds
mov
or
iret
adcl
or
sbb
popa
mov
mov
lea
mov
cmp
jae
adc
mov
lods
xchg
add
add
or
fiaddl
mov
xor
stos
adc
daa
xchg
scas
lcall
imul
pop
push
pop
or
pop
push
inc
pop
fdivrp
push
mov
pop
xorl
xchg
fidivs
cmpsl
push
test
sbb
pop
sbb
inc
in
mov
icebp
or
loope
ret
fs
mov
adcl
out
aam
inc
cmp
xchg
in
pusha
std
xor
mov
xor
lcall
pop
cwtl
lea
shll
fstl
or
lcall
jbe
ljmp
push
push
test
gs
mov
in
or
mull
adcl
inc
out
ret
cltd
dec
dec
or
ja
or
xor
mov
hlt
pop
mov
jmp
loop
add
xor
arpl
loop
push
inc
mov
jg
wbinvd
cmp
gs
add
mov
lret
and
shlb
pusha
sub
mov
adc
cli
mov
std
and
push
mov
ss
sub
mov
cli
out
dec
fdivl
mov
les
mov
inc
pusha
or
mov
add
xor
and
lds
cmc
repz
pop
jbe
mov
dec
sbb
out
cwtl
insl
add
addb
sub
xor
les
ficoms
dec
dec
jp
loop
addr16
pop
jecxz
loope
and
or
pop
mov
lret
sub
test
pop
es
ss
mov
rcr
lods
aad
rcll
mov
aaa
sarl
wrmsr
xor
sub
push
outsl
shrb
dec
inc
sbb
movsl
outsl
lret
xchg
push
cli
bound
sbb
sbb
clc
mov
dec
dec
jg
xchg
inc
ret
xchg
pop
aam
inc
out
fiadds
cmp
sbbb
in
fisubl
or
les
push
sar
dec
xchg
andb
mov
mov
and
mov
mov
pop
lcall
lret
inc
rcrl
repnz
xchg
xor
gs
stc
in
addb
movl
inc
push
cmp
mov
in
adc
mov
jnp
cmp
imul
sbb
popf
scas
jae
cmpsl
lahf
add
push
xchg
imul
mov
inc
jg
stos
lea
push
fucom
inc
or
rolb
sub
imul
and
icebp
incl
push
mov
imul
lret
movsl
gs
fucompp
xchg
mov
mov
je
mov
jb
sbb
sti
jae
dec
add
or
cli
mov
pop
jae
bound
and
mov
pushf
xor
mov
cmp
mov
loop
pop
push
mov
adc
aaa
insb
cld
in
or
fsin
fstpl
xorb
xchg
jmp
hlt
aam
and
sbb
jbe
mov
and
pusha
jl
shll
jo
mov
lret
mov
notl
inc
and
mov
iret
or
pushf
imul
out
jge
cs
mov
imul
icebp
mov
dec
pop
leave
sahf
mov
jns
out
push
sub
inc
gs
popa
mov
repz
pushl
and
int3
ret
sahf
sbb
insb
jbe
out
inc
cmpsb
mov
sbb
jp
aas
add
shrl
pop
loopne
dec
jo
mov
or
cmp
hlt
cmp
xor
mov
adc
adc
pop
pop
mov
xor
dec
xor
cmp
test
das
aam
shll
xor
sub
idivl
dec
mov
pop
jmp
cmp
sub
clc
movsb
ret
push
add
dec
or
repz
daa
shrb
movsl
test
add
jae
and
notb
sub
rolb
jge
mov
xor
cmp
mov
adcl
outsl
push
fwait
pop
arpl
int
mov
mov
pusha
lret
xchg
int
dec
or
loop
jl
pusha
ds
lods
ds
movsl
sbb
repnz
jno
xchg
jle
adc
ja
dec
movsl
push
jae
inc
mov
cmp
les
jmp
xorb
loopne
push
mov
jl
push
mov
je
rclb
push
and
mov
test
cmc
or
cmpsb
cmp
or
nop
psrld
mov
sub
sahf
jns
sub
or
inc
enter
daa
adc
enter
xor
call
sbb
adc
stos
daa
xor
mov
shlb
addr16
jno
cld
xor
hlt
and
xchg
ret
push
sub
repnz
mov
imul
jmp
push
and
out
repnz
out
jbe
push
push
ds
cli
lods
add
inc
xor
pop
fwait
lods
mov
dec
pop
or
dec
ret
into
xchg
jns
lcall
sub
mov
int
sbb
cmp
push
pop
gs
add
pushf
stos
fwait
mov
or
fsubrs
push
cmp
cmp
sub
fdivr
lret
scas
int
pop
shr
aam
loope
inc
mov
test
in
arpl
fstl
mov
mov
pop
xchg
cmpsb
test
mov
dec
push
xor
mov
fisubrl
xor
xchg
mov
cmp
jl
in
jb
pop
gs
adc
add
adc
ss
dec
in
scas
mov
mov
pop
jge
popf
inc
jmp
lods
mov
or
dec
inc
sbbl
lret
xorl
jno
lock
loope,pt
jmp
sbb
addr16
push
cmpsl
in
ret
dec
pusha
lret
cmp
mov
and
pusha
gs
cli
sbbb
pop
movsb
jbe
sub
ficomps
mov
rolb
vpslld
mov
je
cmp
rcrl
icebp
mov
out
cmp
adc
jge
dec
test
js
jle
in
adc
mov
inc
lea
js
pop
dec
xchg
lret
sbb
mov
push
mov
ljmp
repnz
enter
shll
xchg
test
jp
pusha
mov
jno
dec
xchg
push
icebp
enter
fcmovnu
add
xor
outsl
repnz
push
rcrb
push
inc
add
sbb
loopne
adc
lock
movsl
mov
jmp
adc
popa
dec
sbb
jp
sarb
or
push
inc
cmpsb
adc
xor
cld
fsubl
stc
data16
popf
or
sub
sbb
cmp
cltd
rclw
test
out
aas
inc
xorl
mov
or
inc
lcall
fdivrp
outsl
enter
jl
jmp
lahf
imul
and
jle
and
scas
mov
movl
ds
iret
cmp
mov
mov
jbe
out
xlat
or
aam
inc
lea
fisubrs
imul
sbb
pop
lret
xor
pop
fs
int3
add
push
rclb
pop
lcall
outsb
pop
adc
sahf
in
call
xchg
lds
ficoms
aaa
dec
mov
sbb
adc
arpl
pop
inc
xor
loope
inc
sbb
orl
push
pusha
loopne
cli
sbb
mov
push
mov
fwait
jl
jns
mov
stos
xor
or
pushf
xor
sbb
sub
mov
cli
ljmp
ret
mov
cmc
push
rol
adc
into
shll
mov
sbbl
insl
push
mov
cmp
and
xor
xor
cmp
jo
negb
push
inc
mov
pusha
mov
push
scas
sbb
fnsave
xchg
aas
mov
jns
inc
sbb
push
int
in
add
imul
clc
mov
repz
in
and
push
adc
jb
mov
sub
hlt
dec
lahf
pushf
inc
jl
xchg
mov
test
or
pushf
pop
xor
jns
push
incl
arpl
adc
xchg
sar
outsb
or
aad
mov
das
dec
pop
lock
pop
push
cld
adc
push
dec
pop
cmp
cltd
xchg
and
incl
scas
repnz
aas
xor
loope
loopne
ds
sahf
sbb
xchg
sbb
mov
mov
lea
dec
mov
fldt
and
mov
pop
mov
aaa
std
or
mov
mov
or
sbbl
outsb
stos
xchg
sbb
xor
stos
lcall
add
xchg
inc
jbe
jp
out
loop
dec
pop
ficoml
lds
xor
nop
mov
fnstenv
jne
mov
jbe
push
fnstenv
rcrl
roll
xor
mov
loopne
cmpsb
pop
cli
cmpsb
aaa
ret
into
popf
mov
incb
sbb
and
mov
adc
add
fs
ret
notb
cli
push
mov
mov
bound
icebp
mov
scas
ficomps
gs
cmp
ja
jge
lret
xor
cmpl
inc
fcmovbe
fstps
xlat
ss
adcb
shlb
out
mov
mov
movb
xchg
daa
jae
mov
cmpsl
pop
sbb
int3
and
xchg
xor
addr16
ja
les
jle
or
call
insb
adc
mov
ret
dec
sub
cmp
xor
sbb
jnp
dec
aas
xor
or
movsl
sahf
pop
jb
mov
jbe
mov
sbb
push
xor
repnz
cmp
ficomps
and
mov
and
inc
insb
addr16
push
movsb
dec
lods
pop
addr16
add
pop
pop
aad
sub
pop
sbb
dec
push
inc
stc
xor
mov
jnp
cmp
insb
loope
popf
cwtl
cmp
cmp
xlat
arpl
mov
sar
popl
mov
mov
mov
sbb
cmc
push
sub
call
hlt
and
scas
movsb
bound
out
das
out
cmpl
insl
pop
orl
rcr
ret
sti
xlat
cwtl
icebp
orl
cmp
jg
mov
stc
outsb
inc
insl
arpl
dec
out
arpl
sbb
shr
int3
imul
sbb
and
or
pop
xor
mov
outsl
mov
cs
jnp
rcll
outsl
push
cltd
pushf
shr
cmp
jbe
fisubrl
andl
ja
sbbb
add
add
xor
xchg
cmp
into
je
cmp
inc
dec
inc
cmp
and
push
adc
fnstcw
or
jecxz
jg
adc
mov
inc
inc
mov
xchg
sub
leave
pop
push
xlat
mov
in
ret
inc
stc
and
push
stos
mov
icebp
outsl
add
mov
add
test
mull
ficompl
cmpl
push
add
add
mov
es
repz
in
sbb
aad
popf
dec
and
dec
psrlq
loopne
xor
fimull
push
sbb
cmc
pop
jb
push
sbb
shlb
lret
jmp
rcll
jbe
mov
iret
in
xor
pop
sar
lods
xor
xor
inc
insl
add
fildl
aas
and
aas
sahf
push
push
mov
dec
stos
mov
mov
test
jne
sub
enter
jae
cld
jo
ror
hlt
dec
addr16
push
xor
mov
and
loope
rcrl
out
sub
xchg
or
jns
cltd
jnp
inc
jb
mov
dec
or
subb
cmp
sbbb
imul
andl
cmp
clc
icebp
adc
pop
mov
insl
movsl
jg
rorb
inc
or
jno
pop
or
sub
aam
loop
cmp
lds
xor
subb
mov
xor
push
out
dec
arpl
movsl
push
or
je
pop
mov
jns
sub
add
les
mov
jns
test
add
push
ja
mov
cli
dec
out
loopne
or
and
mov
pop
pop
mov
clc
out
das
and
xchg
xchg
pop
mov
pusha
xchg
mov
jo
iret
insb
cli
out
mov
jnp
cmp
xor
jbe
fisubl
outsb
dec
gs
lahf
mov
ljmp
add
xchg
cmp
xchg
fldl
adc
mulb
and
lock
in
pop
ss
popa
sub
push
jo
sub
daa
jnp
inc
add
pop
jle
and
out
pop
notl
add
cs
lock
mov
sub
jg
jo
xor
jbe
mov
pop
ja
movsl
mov
hlt
mov
movsl
leave
das
scas
sub
mov
inc
jp
or
popf
inc
push
push
xor
dec
addr16
mov
jnp
das
push
inc
and
subl
fcmovu
shll
outsb
xor
inc
in
push
fidivrs
bound
adc
xor
jbe
enter
fmulp
add
pop
mov
push
inc
sub
push
dec
jl
jp
shll
inc
fpatan
mov
jb
mov
cmp
pusha
subb
xchg
rorl
call
mov
test
scas
in
repz
xor
push
fmuls
shlb
and
movsb
out
adcb
and
sbb
sub
xor
fwait
lock
test
rorb
dec
push
pop
push
cmp
cmpsb
xchg
sub
cltd
push
leave
cmpsb
in
call
or
ljmp
addr16
rclb
push
aaa
mov
push
lods
jecxz
cmp
sub
sub
adc
rorb
inc
xchg
and
or
pop
push
inc
adc
insb
mov
mov
mov
in
aas
sub
jle
jp
in
mov
ja
sub
iret
dec
fsubs
or
xchg
imul
shrb
cmp
or
orl
jae
mov
inc
sub
xchg
js
call
rorl
imul
inc
pusha
out
out
cmp
lret
loope
pop
sbb
inc
lcall
xor
xor
jae
pop
lock
lret
test
outsl
mov
fdivrl
cmp
pushf
mov
mov
xor
adc
add
jmp
adc
in
push
xchg
out
jnp
out
nop
push
lds
lock
dec
jbe
je
sub
push
lcall
dec
test
outsl
fisttps
stc
cs
lods
data16
int3
sbbb
push
aad
mov
sbb
xchg
adc
push
sbb
lea
lcall
das
pop
or
xchg
and
cmpsb
jne
push
and
mov
sbb
dec
scas
jmp
xlat
mov
mov
cs
stos
and
and
scas
sbb
ds
mov
loop
mov
hlt
push
pop
loope
mov
jmp
push
sbb
dec
jns
jne
stc
out
mov
outsl
cmp
stc
xlat
std
sbb
xchg
imul
enter
pop
mov
in
data16
or
fdivrs
jge
jae
or
pop
pop
enter
sti
ret
jl
add
push
leave
repnz
sub
xchg
or
cli
test
faddl
cmp
xor
sub
dec
inc
sti
scas
sub
pop
xchg
inc
loop
jp
sbb
loop
jb
lcall
pushf
in
les
dec
cli
or
jb
xchg
mov
lahf
push
popf
movsl
mov
push
in
ss
nop
pushf
push
and
pop
adc
push
out
repnz
push
leave
and
cmp
loopne
add
add
xor
cwtl
inc
and
loope
mov
es
mov
rorl
sub
fdivr
push
push
xchg
jg
push
xchg
pusha
mov
push
gs
dec
cmp
stos
ja
sbb
icebp
int
imul
stc
and
push
clc
in
ljmp
xchg
fwait
cmp
add
adc
sub
scas
push
orl
nop
stc
jl
xor
sbb
ja
ljmp
push
arpl
movsl
mov
sarb
pop
fwait
movsb
dec
lds
mov
imul
lret
inc
jp
cmp
xlat
dec
jne
xor
add
test
mov
shl
scas
stc
push
mov
cli
rcll
ljmp
adc
mov
fnstsw
sbb
push
inc
jg
sbb
pop
aas
mov
stos
mov
push
std
mov
data16
movsb
sub
or
movsb
aas
mov
cmp
cmp
pop
or
out
shll
andl
mov
xor
sti
add
sbb
pop
xchg
mov
aas
adc
in
call
xor
cltd
std
loopne
or
jecxz
dec
xchg
inc
xor
jmp
jb
data16
hlt
pop
scas
cmp
leave
imul
gs
cmp
test
cld
insl
sbb
insl
shlb
imul
or
mov
jno
mov
out
add
notl
imul
in
pop
xchg
mov
loop
inc
out
cwtl
jle
mov
sbb
dec
xor
mov
in
into
stos
insb
pop
insb
add
mov
mov
xchg
push
test
mov
mov
xchg
loope
mov
mov
mov
lret
inc
mov
nop
push
sub
mov
mov
or
mov
cmp
xor
rorx
adc
xchg
dec
movsb
dec
xchg
xchg
js
fists
popf
push
and
add
scas
mov
into
cmp
in
aaa
insb
adc
jbe
inc
push
movsl
stc
inc
jl
adc
mov
sarl
js
dec
insb
stos
movsb
cwtl
repnz
popa
cwtl
push
out
dec
mov
dec
ret
mov
cld
lock
add
icebp
push
jle
xor
xorl
adc
inc
add
daa
mov
xor
cmp
loopne
pop
ret
mov
out
lods
cmpsb
icebp
aas
pop
xor
aad
lods
les
adc
cmp
cmp
and
les
pop
out
xchg
int
repz
fnsave
mov
mov
jge
outsb
sbb
sub
cmp
inc
adc
or
es
or
mov
xchg
push
stos
push
shl
mov
cld
pop
mov
mov
xchg
xchg
adc
and
xorl
stc
je
fstl
mov
jne
dec
mov
push
lret
pop
lahf
hlt
fcos
xchg
fscale
sub
push
inc
dec
ret
xchg
inc
sbb
jne
and
cltd
mov
test
dec
jne
ror
xchg
or
repz
sbb
rcl
mov
jne
xor
xor
dec
mov
rclb
sub
xchg
sti
pop
ds
pushf
or
andl
or
jae
cmp
neg
imul
fstl
cmp
shr
adc
push
int3
xchg
add
cmpsl
push
in
cmp
negb
mov
stc
dec
es
mov
inc
negl
je
fiaddl
xor
inc
gs
xlat
push
cmc
loop
push
push
addr16
sub
push
rcll
and
mov
mov
mov
daa
xchg
popa
dec
xlat
stos
cli
xchg
xlat
mov
and
stc
ljmp
mov
inc
idivb
test
mov
sahf
jb
iret
aaa
add
mov
adc
jbe
andps
mov
mov
xchg
push
jmp
sbb
push
push
add
aas
inc
mov
addr16
in
ja
pop
out
pop
ret
fwait
mov
jge
fucomp
cmp
adcb
jg
xchg
jae
rolb
cmc
mov
cmp
das
in
out
inc
mov
aad
add
lahf
mov
leave
test
adc
ja
inc
pop
push
and
in
inc
in
roll
cmp
push
sbb
xchg
xor
int3
push
xlat
outsb
sub
dec
pusha
cmp
mov
dec
cmp
ja
sbb
xor
repz
add
add
push
and
subl
repz
enter
inc
lods
xorb
jg
in
jns
sbb
and
jp
sub
leave
add
lahf
mov
or
sbb
outsl
jp
add
mov
aad
mov
hlt
jo
subb
data16
je
outsw
je
inc
in
inc
aas
imul
popf
popa
inc
mov
stc
fcmovnbe
jo
jne
or
outsl
adc
aad
sti
into
xchg
pop
sbb
sub
push
xor
pop
cmpsb
mov
inc
pop
cmp
cli
and
jp
scas
ss
cmp
xchg
icebp
sub
push
lea
in
fcmovnbe
mov
jbe
mov
add
call
in
inc
cmpsb
adc
jne
xchg
mov
jo
fcmovnb
int
repnz
test
mov
inc
dec
xlat
call
jp
mov
push
xchg
sub
pop
scas
out
pop
xchg
inc
pop
clc
dec
xchg
xor
xor
imul
sbb
mov
jae
mov
popa
xchg
push
dec
sbb
push
mov
lea
jne
std
jne
leave
pusha
dec
push
sbb
xchg
adc
into
cmpsb
insl
pop
aas
cmp
dec
aaa
ja
mov
mov
mov
pop
mov
test
cli
lret
scas
lods
mov
or
out
cmp
sbb
popf
or
sbb
nop
ficoml
cwtl
inc
jno
pop
int
decl
cmp
push
pop
dec
add
addb
mov
mov
push
or
pop
jmp
popf
popa
xchg
out
jns
test
ret
mov
pushf
jmp
mov
add
adc
clc
xchg
call
cmp
jo
aas
mov
jns
jno
jg
out
pop
inc
adcl
xorb
movsl
out
mov
repz
test
cld
pop
fcmovne
pop
lcall
pusha
dec
iret
inc
cmp
stos
push
mov
sti
cmp
aas
aad
or
or
test
xor
popa
adc
call
cmp
push
xchg
sar
fs
cmp
pop
xlat
sbb
adcb
lock
cmp
scas
fistps
in
jg
xchg
hlt
loopne
jg
andl
lds
cmp
mov
cmc
lea
int3
mov
dec
aaa
rcr
inc
scas
sub
gs
mov
mov
cmpsl
jle
mov
into
inc
and
ret
push
push
jnp
push
pop
pop
in
adc
push
pop
es
idivl
mov
jle
movsb
iret
in
movsb
push
gs
movsl
hlt
lcall
xlat
movsl
xchg
imul
test
and
pop
pop
mov
jne
xor
rsm
mov
adc
ds
and
dec
jnp
pop
dec
es
push
jg
in
mov
imul
loopne
leave
popf
mov
stc
xor
xor
sbb
jne
or
xchg
mov
adc
sub
testb
or
dec
out
movsl
add
iret
shll
adc
ret
pop
or
test
cltd
cwtl
mov
pop
sub
test
jmp
mov
out
cmp
clc
pop
in
sub
sbb
dec
or
jns
imul
movsl
xchg
arpl
fsts
loopne
cmpsl
int
testl
and
xchg
repz
mov
insl
xchg
jae
jp
icebp
js
dec
sbb
push
test
cmp
lahf
ficomps
lods
mov
mov
mov
fsubl
ja
inc
aaa
outsb
push
pop
pop
lcall
push
xchg
push
shrl
aad
bound
push
stos
setg
out
sbb
mov
stc
rclb
in
dec
pop
mov
sti
jnp
pop
test
and
lahf
enter
dec
dec
jo
xor
fcoms
rolb
mov
je
jb
lds
mull
in
les
mov
jmp
or
xor
dec
inc
lods
mov
and
pop
adc
cltd
fisubrs
stos
mov
int
mov
aam
dec
cmp
mov
sub
push
daa
xor
pop
inc
adc
xor
loope
enter
mov
sti
aad
inc
rolb
fidivs
dec
clc
jcxz
insl
aam
xchg
inc
mov
cmpsb
fs
popa
fcompl
hlt
push
fcoml
loop
test
and
xor
mov
mov
add
je
repnz
int
inc
push
xor
push
xlat
movsb
cmp
cmp
pop
js
dec
shll
or
xor
cmpsb
push
daa
test
mov
cmpl
scas
jp
push
dec
cld
ljmp
push
stc
push
pop
push
rsm
orb
xchg
in
scas
sbb
lahf
ret
xorb
in
push
popf
mov
in
push
enter
mov
sub
or
lcall
dec
pushf
movsb
push
and
xor
sbb
dec
dec
add
out
outsl
sub
jl
mov
lea
mov
dec
lea
rcr
and
cs
push
mov
int3
int3
xchg
mov
addr16
scas
mov
pop
lods
add
in
or
inc
inc
pop
sbb
arpl
push
cltd
imul
cli
jne
jbe
jne
flds
sahf
pop
bound
dec
imul
pop
xchg
xor
or
mov
inc
xchg
mov
xor
cmp
in
cli
push
push
add
ds
push
mov
xchg
ja
cmp
add
test
aas
and
jo
push
xor
fidivs
hlt
sub
pop
mov
je
mov
in
xor
mov
ds
mov
fucomp
imul
es
push
fcmovnu
sub
idiv
and
movsl
or
push
sbb
ret
mov
mov
push
jne
lea
sbb
inc
jo
push
mov
push
mov
lret
mov
lcall
push
sbb
andb
shll
jmp
sub
mov
sub
das
insb
mov
sbb
in
pop
mov
mov
aas
sub
sbb
push
inc
push
fisubl
cmp
into
pushf
pop
sbb
pusha
dec
pop
and
mov
cmc
dec
movsb
loope
imul
sub
cmp
arpl
jge
jp
pop
sbb
adc
lea
jle
sub
jb
pop
or
or
shlb
repz
mov
pop
sti
inc
loop
pushf
jg
fwait
ret
cmpsb
cs
xchg
fwait
lock
adc
addr16
bound
or
inc
jno
and
sub
shll
jo
dec
mov
add
sbb
ret
adc
popf
bound
xor
mov
cli
imul
aam
mov
pop
push
cmpsb
mov
std
jbe
sub
test
icebp
cld
xor
push
push
inc
nop
subb
ror
xor
adc
adc
nop
pop
lods
test
push
push
cmp
dec
les
out
add
data16
mov
inc
dec
hlt
iret
cmpsb
lods
xchg
out
push
roll
std
aas
sbb
xchg
sbb
fcoms
fwait
inc
fs
mov
xor
js
inc
pusha
adc
lods
dec
lea
adc
mov
or
push
cmp
stos
inc
sbb
xchg
dec
sbb
out
cs
inc
mov
inc
movsb
sbbb
jl
push
imul
jb
ja,pt
fst
leave
and
je
lods
scas
sahf
inc
sub
inc
scas
int3
adc
movsb
lds
xchg
ret
enter
pop
in
test
pop
pop
jnp
pop
lahf
jne
or
dec
cmc
in
jo
rclb
cmp
mov
sbb
test
addr16
pop
out
cld
arpl
cmpsl
jne
loop
mov
popa
or
xchg
popa
or
dec
mov
jl
aaa
mov
aad
test
mov
testl
lret
outsb
inc
das
rclb
xor
cmp
pop
mov
out
iret
subl
jnp
sbb
adc
push
std
shl
jp
cmp
fwait
rolb
ret
push
loop
dec
stos
dec
mov
dec
rcr
cmpl
mov
push
push
stos
or
jne
mov
pushf
sahf
xlat
inc
adc
pop
and
inc
lcall
pop
push
adc
mov
ja
push
addb
cwtl
and
loop
subb
and
pop
dec
sti
sub
repnz
das
xor
test
lds
pushf
push
mov
cmp
cmp
loopne
out
ret
and
pop
fwait
xor
insl
add
sbbb
jnp
or
mov
cmp
dec
les
cwtl
push
cltd
lret
in
jecxz
pusha
adc
sbb
sbb
adcb
sub
jmp
push
pop
mov
out
fcmove
aad
cmpw
aad
std
xchg
lds
shl
testl
sub
fldt
stc
lods
jge
xchg
push
mov
jp
stos
adc
sahf
aam
ss
popa
or
xlat
mov
leave
pusha
les
mov
int
fisubs
lods
xchg
push
lea
orb
sarb
jns
fidivs
pop
cwtl
sbb
xchg
cwtl
xchg
push
repnz
cmp
sub
dec
mov
in
mov
mov
insb
fwait
sub
xchg
data16
pop
sub
imul
lea
in
add
xchg
inc
cmp
cli
mov
icebp
rcrb
repnz
mov
adc
popf
jle
loop
mov
test
jecxz
add
pop
add
sahf
pop
jecxz
xor
dec
dec
test
daa
dec
popf
lahf
fnsave
mov
int3
test
loopne
mov
cmp
outsl
pop
jp
rclb
shll
pop
cld
mov
push
ffreep
test
pop
movl
lret
pop
insl
shrl
adc
push
dec
aad
in
fcmovnb
cmp
das
mov
flds
int3
bound
inc
cmpl
je
add
or
cld
imul
sbb
cmp
cmpsb
ret
dec
je
aas
stos
cmp
push
jno
push
pcmpgtd
lea
clc
lahf
das
fnstsw
or
pop
ljmp
mov
add
cmp
jno
cmp
adc
pop
jmp
stos
xor
sbb
lret
or
rorb
mov
out
push
or
pop
or
js
out
out
mov
sbb
dec
js
lea
jno
pop
adc
movsl
mov
cmp
xchg
mov
mov
push
sbb
je
inc
push
out
inc
lcall
inc
inc
les
ss
xorb
mov
lahf
mov
push
fcmovb
mov
aam
fs
pop
int
cmp
xchg
repnz
insb
or
lcall
addr16
push
clc
dec
out
outsb
imul
jmp
lahf
sub
fisubl
nop
push
sbb
jle
adc
out
pop
mov
outsb
out
jp
cs
add
sbb
rorl
pop
fxch
ja
dec
cmp
mov
inc
pop
movd
icebp
call
dec
dec
shll
lods
ja
or
dec
out
and
lahf
dec
nop
cld
adc
jb
jmp
mov
ljmp
inc
sar
bound
test
add
xor
cmpb
or
test
and
adc
mov
insl
cli
inc
pop
pushf
add
shll
mov
pop
cmp
subl
sbb
sarb
pop
bound
xchg
sbb
cld
jl
xchg
pop
lods
jmp
xor
cli
bound
out
xchg
imul
mov
cmpsl
lds
pop
adc
cmp
rep
pop
jecxz
add
sub
repz
cs
imul
scas
clc
call
ret
out
dec
ds
mov
mov
mov
pop
xchg
push
andl
inc
into
xor
inc
mov
and
int3
sbb
xchg
subb
aaa
adc
in
stc
mov
lret
mov
das
mov
loop
push
enter
cmp
inc
xor
insb
rolb
jge
mov
adc
test
mov
lcall
add
push
add
jmp
in
aam
aam
rcrl
ss
add
leave
clc
mov
out
jmp
repz
stos
cmp
xchg
push
push
sti
sub
xchg
dec
sarl
iret
scas
pusha
insl
fs
and
rolb
dec
popf
xor
inc
xor
lret
ret
arpl
or
test
in
inc
getsec
sbb
sub
xor
ds
aam
hlt
repz
sti
mov
dec
add
xchg
lret
notb
dec
mov
add
add
test
push
call
inc
scas
scas
ficompl
mov
movsb
cmpsb
push
jb
push
xor
xchg
inc
push
mulb
sarb
shll
pop
mov
pop
ficompl
imul
push
adc
test
xor
pop
subb
in
and
dec
imul
lret
pushf
add
pop
loop
xor
push
aam
mov
movsb
mov
cmp
mov
notb
lcall
fnstsw
bound
sub
push
test
pop
adc
and
fldenv
sbb
rcrl
cmp
push
rcl
mov
mov
add
inc
and
ret
push
mov
or
mov
jl
aas
scas
mov
lods
test
in
jae
pop
xchg
stos
scas
mov
aaa
dec
dec
dec
pusha
jle
jnp
mov
dec
inc
xchg
push
xchg
or
lds
cltd
shrl
xor
mov
stos
daa
cmpsl
mov
xor
shll
cmc
push
mov
adc
cmc
pop
ret
aad
jge
ret
xor
stos
shlb
scas
or
fs
pop
sub
xchg
inc
cmp
inc
aaa
pop
xchg
fnstcw
mov
mov
movsl
int
int
callw
lcall
out
stos
mov
daa
ss
add
scas
lret
ss
pop
and
repz
inc
lcall
mov
jecxz
jae
in
inc
or
mov
xor
cmpl
outsb
fsubp
call
and
scas
dec
and
fcmovne
or
mov
addr16
fcomp
mov
mov
sub
jne
xchg
dec
mov
out
push
push
pop
lock
and
lea
dec
or
dec
push
out
es
add
xchg
aam
inc
push
lea
mov
dec
push
mov
in
pushf
add
lcall
sub
push
mov
imul
test
cmpl
cmp
in
icebp
inc
mov
lahf
fisubrl
dec
fbstp
push
sub
lock
sub
ja
int
xor
sub
mov
push
mov
rcrl
fidivl
pushf
je
sti
popa
or
sbb
cwtl
std
fsubl
pop
scas
es
in
dec
jmp
xor
add
push
adc
mov
out
out
push
outsb
movsl
sub
add
inc
sub
push
xor
pop
daa
jecxz
pop
test
imul
dec
xchg
xchg
mov
lock
js
push
lods
pop
or
cmp
shr
xor
jmp
sar
dec
jo
adc
lods
lcall
add
add
and
rcll
jecxz
or
mov
xchg
mov
cmp
xchg
add
in
mulb
pop
mov
shll
adc
sub
pop
mov
dec
scas
and
cmp
leave
or
sbb
arpl
adc
jo
and
filds
stos
jae
ud2
xor
push
jmp
dec
adc
mov
adc
cmpsl
ret
lea
push
ret
insb
gs
pop
pusha
daa
xchg
into
push
scas
or
sahf
dec
xchg
xor
test
jae
mov
jo
out
sub
add
push
mov
daa
cltd
je
jmp
dec
addr16
xor
or
xor
dec
popa
fisttpll
or
repz
sbb
and
lock
or
in
pop
add
enter
xchg
lods
push
daa
xchg
dec
pop
push
cmc
js
inc
insb
stos
sub
inc
rclb
out
mov
add
loopne
lds
stos
vprotq
cmp
and
and
mov
js
ret
mov
in
jb
sti
pop
aad
jmp
add
jbe
in
xchg
and
and
xchg
fs
out
call
aaa
add
ficoms
mov
jo,pt
stos
stc
dec
inc
pop
mov
fcomps
jne
clc
xchg
sarl
pushf
push
xchg
sub
adc
sub
fists
add
lock
cmp
or
lea
das
and
push
sbb
addr16
push
cmp
add
adc
xchg
jnp
mov
sub
sahf
mov
pop
fmul
cltd
ret
ja
xchg
or
inc
sub
mov
push
xchg
ror
mov
xchg
stos
lods
jns
lahf
add
sub
push
sub
popa
scas
push
js
into
xchg
push
sbb
outsb
and
push
mov
inc
add
stc
jbe
mov
cmp
pop
mov
cmpsl
rcr
xchg
iret
cmp
mov
loopne
xor
or
fldl
mov
imul
call
mov
sbb
xchg
sub
cltd
xor
int3
dec
push
ja
fucom
jecxz
les
leave
jns
push
xchg
leave
adc
inc
mov
sub
xor
das
jno
cmpsl
test
xor
ffreep
inc
dec
sbb
jmp
inc
jge
dec
in
add
cmp
arpl
xchg
mov
test
fisubs
mov
inc
sub
ljmp
mov
rorl
mov
inc
mov
ret
sbb
sub
xchg
test
ja
pushf
mov
adc
xor
inc
push
outsb
fbld
xor
iret
lods
mov
xor
lahf
and
in
out
mov
mov
lret
mov
and
mov
cmc
sbb
std
gs
cmpl
mov
xchg
sub
clc
add
mov
push
clc
in
cmp
ret
sbb
movsb
sub
and
fists
out
xchg
or
push
out
jmp
add
mov
inc
adc
lea
addb
ljmp
sbb
lret
ds
in
leave
ja
inc
adc
xor
push
cmp
jo
pop
loop
hlt
or
aas
movzbl
cmp
std
push
jb
sbb
cmp
sub
lods
unpcklps
xor
loopne
pop
repnz
push
ds
add
icebp
mov
loope
mov
movsl
ret
dec
pop
or
mov
xchg
ret
add
repnz
ss
addr16
jo
ljmp
sbb
mov
rcrl
shll
jae
mov
loopne
aaa
and
ret
lret
in
mov
add
repnz
ret
add
cli
mov
xor
bound
imul
dec
cmpsl
cmp
push
push
push
lea
test
cmp
jbe
loopne
shlb
xor
out
or
or
je
jbe
cmpsb
mov
sti
cs
push
mov
data16
or
pop
push
out
pop
das
sahf
mov
push
pop
dec
sbb
call
insb
inc
movsb
stos
and
test
stos
mov
gs
in
in
pop
xchg
adc
sbb
and
ficomps
fs
mov
out
incl
jno
cli
xchg
sub
xlat
dec
xchg
data16
cmpsl
into
sti
int
add
into
addr16
push
jl
xor
mov
cld
mov
dec
loopne
in
outsb
rclb
jno
xchg
movl
mov
push
stos
jno
dec
sub
jnp
jp
mov
cmp
jp
dec
push
int
inc
cmp
sti
rorl
pop
sti
xchg
sbb
lret
cld
mov
stos
inc
sub
cmc
and
inc
inc
out
xchg
sahf
leave
xchg
add
ljmp
xchg
dec
xlat
push
pop
push
xchg
cs
xlat
sbb
cmp
insb
in
and
fdivrp
add
hlt
and
mov
dec
or
jb
or
jo
adc
in
aaa
inc
xchg
js
aad
inc
or
cmpsl
or
push
mov
jecxz
ja
jl
inc
pop
call
adc
xor
and
faddl
scas
std
insb
out
adc
test
popf
jo
subb
ja
rorb
mov
mov
pop
pop
aaa
cmpsl
orb
ret
cld
hlt
fwait
xchg
mov
pop
jg
sarl
mov
dec
jge
and
stos
push
aas
mov
pop
sub
jg
sbb
mov
stc
ret
fcomps
arpl
cli
sub
testb
push
inc
xchg
pop
jae
mov
cltd
push
push
sbb
mov
hlt
add
inc
jae
add
pop
ds
mov
lret
loopne
enter
hlt
mov
cmp
mov
mov
mov
mov
inc
lock
xchg
outsb
pop
push
repz
lods
jg
sub
inc
outsb
and
jae
or
mov
mov
or
mov
addr16
sahf
fbld
ss
mov
dec
pop
repz
adc
ljmp
das
mov
adc
hlt
xor
or
movsb
mov
xchg
mov
xor
fimull
or
loop
cmp
mov
xchg
stos
test
popa
add
out
and
in
insb
sbb
lods
sub
lea
mov
addb
aaa
sbb
mov
cmp
jbe
sbb
pop
js
cmp
into
popf
push
lcall
cmp
push
pop
jnp
mov
jbe
mov
mov
jno
in
decb
dec
push
mov
pop
cmp
jge
mov
mov
insb
shlb
cmpsl
stc
jbe
and
sti
or
mov
mov
cmpsb
sbb
xchg
inc
push
rorb
movsb
call
popf
inc
aam
sbb
xor
push
lret
push
lea
mov
in
mov
mov
sbb
das
cwtl
add
mov
stos
jno
mov
adc
mov
lds
rorl
stc
insb
das
push
push
stc
scas
adc
xor
push
cs
jne
push
xchg
stc
mov
or
jp
ja
cs
jl
neg
int3
loopne
lods
lea
push
lds
insb
movsb
or
insl
faddp
jle
repz
cmpsb
sub
scas
push
mov
in
and
mov
push
mov
lea
inc
jbe
rcrb
dec
enter
mov
mov
stos
les
mov
push
insl
cmp
push
and
aaa
dec
mov
in
fidivs
roll
in
ror
mov
mov
mov
insb
enter
cmc
fsub
mov
dec
fistps
pop
cli
gs
cmp
and
js
or
xor
inc
push
inc
lahf
jl
sub
jnp
xor
inc
mov
fs
fs
gs
cld
imul
dec
ljmp
jge
cld
cmp
dec
cmp
pop
stos
pop
test
gs
push
lds
in
mov
sub
fdivr
jecxz
mov
sbb
dec
and
sbb
pop
pop
jnp
jg
ljmp
loopne
mov
cmp
fstps
mov
mov
mov
mov
hlt
pop
ret
mov
xchg
or
test
lock
mov
push
mov
mov
out
inc
enter
or
push
insb
sarb
call
adc
cmpsb
xchg
and
push
mov
pop
dec
cltd
xchg
das
push
xchg
dec
jge
jmp
xchg
loope
incb
mov
or
jmp
stos
pop
shll
insl
test
cli
mov
aad
or
in
cmpsl
jge
insb
sbb
hlt
lret
fdivrl
leave
adc
lahf
aaa
dec
mov
das
repz
jb
jecxz
jne
and
adc
pusha
gs
ja
push
inc
jmp
mov
jl
test
in
psrlw
sub
push
xlat
fwait
mov
xchg
pop
data16
in
jbe
sarl
cwtl
dec
jns
iret
fwait
rorl
daa
sub
sahf
je
mov
lods
mov
out
out
push
xor
outsb
adc
and
pop
rcl
fwait
sbb
in
cmpsb
mov
pop
mov
mov
leave
stos
pop
scas
pop
adc
pusha
aas
shrl
fs
or
or
push
je
and
aam
test
aas
mov
sahf
shrl
sahf
js
or
mov
mov
sub
stc
lcall
fwait
add
ret
stos
cmp
frstor
xlat
add
mov
push
and
js,pt
repz
pop
push
xchg
shll
pop
movsl
sbb
lods
lods
sbb
ja
sub
sub
jmp
imul
xchg
xor
out
pop
outsb
xchg
xchg
xor
iret
fwait
adc
inc
enter
outsl
and
xlat
cs
push
xchg
enter
or
sub
mov
jbe
ret
dec
push
mov
andb
popf
or
pushf
test
pop
inc
mov
adc
fs
cmpsl
fs
pusha
add
outsl
mov
xorb
inc
je
icebp
lcall
dec
fidivs
adc
stos
xchg
jbe
or
cltd
push
mov
jae
icebp
lcall
cmp
in
daa
jbe
pushf
mov
test
cs
fsubs
aam
in
fstps
dec
sbb
dec
cltd
in
cmpsb
in
add
testl
xor
int3
dec
jo
mov
pop
popa
mov
dec
sbb
dec
loop
subps
push
popf
push
inc
dec
popf
mov
das
out
push
stos
mov
mov
sarb
ret
test
xor
lods
into
mov
popf
jns
and
mov
cmp
cmp
outsl
fyl2xp1
fistps
stos
adc
test
pop
pushf
xchg
add
cmpsb
ret
fildll
sbb
enter
sub
repnz
cmc
mov
xchg
or
inc
mov
iret
sub
es
xchg
xor
mov
dec
insb
out
popf
inc
sub
enter
or
je
mov
fstpl
dec
jp
xor
or
loopne
adc
xchg
jnp
scas
pusha
les
out
mov
sbb
movsb
rcrb
clc
cmp
cmc
lcall
mov
jbe
stos
adc
std
lods
ljmp
adc
shlb
sbb
hlt
aas
rcrb
lods
pop
inc
xchg
adc
fs
xchg
or
aas
lahf
cli
ss
inc
add
and
rorb
mov
sbb
dec
fnsave
adc
pop
test
lahf
imul
ficoms
aam
sbb
stos
jg
stos
jp
imul
test
sbb
add
popf
movl
movsb
test
xorl
mov
dec
xchg
cmp
mov
xchg
pop
pop
lret
mov
stos
mov
negb
inc
xor
loopne
aam
icebp
and
sub
xchg
ds
fidivs
pop
pop
div
lods
sbb
inc
cmpl
pop
rcl
jg
nop
jb
pop
shrb
lods
in
rorl
cmp
add
loop
cmp
xchg
push
testb
sarb
sar
lds
inc
or
nop
xchg
pop
pop
sbb
out
add
mov
lods
inc
mov
cmp
ret
and
or
inc
and
aaa
out
aaa
xlat
mov
mov
insl
mov
jmp
inc
jl
cbtw
or
xorb
out
sbb
xor
cltd
push
cmpsb
push
cmp
mov
add
jge
insl
lock
adc
ds
xor
jbe
cmp
gs
fwait
dec
lock
mov
clc
mov
xchg
sub
mov
pop
or
jnp
cld
lret
xchg
push
dec
pop
xor
cmp
cmpsb
xor
lods
add
mov
stos
jbe
push
mov
jg
cwtl
imul
adc
inc
vshufps
popa
test
in
inc
mov
sbb
aam
cmp
mov
inc
mov
ljmp
push
cmpl
insb
popf
rcrb
adc
xchg
jle
sbb
daa
jmp
pop
dec
imul
jbe
and
jo
push
stos
jne,pn
mov
icebp
insb
adc
or
pusha
inc
lods
cmp
sub
jo
rcr
mov
jnp
mov
ret
jnp
pop
or
in
aad
mov
adc
xchg
fs
shlb
add
cmpb
sub
xor
sbb
cs
mov
lret
and
sub
jle
dec
inc
mov
inc
clc
push
dec
shlb
adc
rcr
push
popa
dec
xor
push
mov
mov
aad
fwait
sbb
xchg
add
sub
push
dec
dec
push
test
js
repz
test
mov
stc
dec
jge
xchg
stc
jnp
or
sbbl
mov
push
cld
insb
add
mov
clc
or
add
add
push
pop
push
sub
in
mov
sub
push
js
inc
es
lret
xchg
lds
xor
mov
xchg
jb
jb
xor
aas
lahf
inc
or
pop
aas
cmc
xchg
insb
sbb
xor
cmpb
stos
sahf
or
jl
sub
adc
push
jmp
adc
sahf
dec
mov
outsl
mov
xlat
inc
pop
mov
daa
xor
push
aas
pop
mov
xorl
pusha
xlat
mov
bound
sbb
push
decl
pop
pop
stc
pop
bound
ffree
mov
sbb
insb
sub
adc
aad
push
mov
imulb
sub
pop
fwait
out
clzero
cwtl
stc
jmp
in
lahf
mov
pop
fdivrs
mov
scas
out
ficoms
popa
pushl
dec
and
jbe
loope
mov
movsl
jmp
test
hlt
pop
cmp
adc
add
fmulp
jb
je
int3
ret
xchg
adc
daa
sbb
sub
shrl
inc
jmp
pop
jbe
cwtl
fneni(8087
nop
push
cmpl
stos
dec
dec
insl
outsl
mov
fisttpl
out
cs
stos
pop
sbb
imul
adc
mov
scas
jmp
cwtl
mov
adc
push
jmp
sbb
mov
enter
jp
sahf
adc
or
xor
jl
fnsave
std
push
adc
cmp
outsb
imulb
xlat
jmp
ret
mov
fisttps
stos
mov
dec
stos
dec
insl
pushf
lods
mov
pop
int
clc
fldt
into
sti
push
ss
clc
ss
inc
fcomi
pop
fnstenv
xor
popa
sub
pop
jnp
scas
inc
lea
shl
hlt
fdivs
adc
xor
shlb
sbb
imul
sarb
popl
mov
mov
in
lock
mov
or
repz
jl
out
adc
jns
jp
addl
movsl
das
andl
cli
push
arpl
cmpsl
lcall
jg
inc
xchg
popf
out
gs
cltd
mov
addr16
rorl
add
push
rorb
mov
push
ja
xchg
insl
shl
sub
cmp
or
imul
call
imull
mov
adc
rorl
cmpsb
cmpsl
cmp
popf
add
jmp
jnp
push
mov
rorb
test
fidivrl
ffree
mov
inc
lcall
adc
nop
jne
push
ret
aad
mov
int
ja
pusha
fdivrs
mov
sarb
clc
cld
or
cmp
mov
xchg
dec
jbe
nop
cmp
add
sbb
mov
adc
ja
stos
sub
mov
add
xchg
and
pop
xchg
stc
clc
arpl
out
sahf
mov
lods
rorb
andl
add
sbb
jg
fsubs
filds
push
push
xchg
inc
inc
call
pop
and
loopne
mov
pop
jge
add
push
xor
pop
and
pop
mov
jle
jne
or
or
pop
cmp
xchg
enter
and
inc
cmp
dec
add
daa
push
sbb
pop
or
int
push
lahf
jmp
sbb
mov
cmp
pop
xchg
sub
mov
xor
and
fwait
mov
orl
or
outsb
out
into
and
je
fimull
jecxz
out
int
sub
inc
int3
popa
push
inc
adc
mov
sahf
push
shlb
cltd
mov
xor
imul
cmpsb
hlt
push
pop
sub
pop
add
aam
push
xor
inc
in
or
add
jecxz
shrl
push
repz
cs
xor
ljmp
push
add
xchg
popa
mov
push
jne
xchg
jl
aaa
rcll
mov
and
xor
gs
cmp
ja
and
sub
cmp
ret
xor
mov
add
inc
ror
adc
inc
mov
sub
arpl
jge
mov
es
in
pop
pop
sub
pop
cmc
jnp
push
test
fdivrl
inc
mov
sub
sub
daa
xor
call
and
sub
inc
mov
or
jmp
cmpsb
lret
cwtl
jno
outsb
cmp
cmp
jp
call
lea
mov
mov
fisubrs
repz
pop
adc
mov
out
or
mov
add
adc
outsb
adc
and
mov
mov
and
icebp
jb
pop
push
ds
enter
aad
popl
jecxz
adc
inc
mov
or
sbb
loope
test
push
hlt
xchg
sbb
popf
aas
lcall
lret
inc
jecxz
fnsave
fisttpl
sub
mov
mov
lea
mov
dec
ds
jo
push
js
mov
hlt
iret
mov
rcr
adc
lahf
outsl
push
push
sbb
repz
repz
in
mov
cmp
es
sbb
or
add
pop
jnp
pop
pop
test
dec
pop
std
jg
mov
dec
xor
bound
jg
repnz
inc
xchg
int
add
mov
cmp
shlb
push
mov
sub
xchg
push
lea
dec
cmp
pop
jbe
arpl
xchg
mov
xchg
adc
xor
lods
xor
jl
in
xchg
pop
or
xchg
pop
sub
lea
add
lret
in
jns
call
popa
push
cmp
arpl
and
mov
cli
shll
incl
dec
or
mov
mov
and
test
push
mov
ljmp
push
ret
mov
mov
aam
add
cld
mov
mov
inc
cltd
loope
mov
xor
lods
cmpsb
int
les
jge
std
dec
mov
neg
add
rclb
or
and
pop
jo
outsl
add
leave
inc
dec
sub
mov
and
aam
adc
addr16
dec
loopne
mov
aam
je
test
clc
sete
fcomps
add
jns
xor
sub
dec
lock
sbb
inc
inc
mov
xchg
cwtl
notl
push
xchg
call
sub
mov
sub
mov
int3
cmp
add
addr16
mov
in
imul
mov
dec
jmp
ja
aam
test
jno
std
loop
clc
cltd
inc
push
mov
gs
pop
aaa
mov
sarb
popf
cmp
and
mov
push
dec
arpl
jae
lcall
insb
mov
daa
ss
and
or
xorl
lret
mov
add
xchg
je
in
cmpsl
stc
mov
sarl
movsb
movsl
jo
xchg
pop
jne
ret
push
jg
push
add
mov
decb
xchg
push
inc
test
inc
cmp
and
out
popl
movsl
in
jge
pop
pmaxub
cmpsb
mov
mov
jge
and
ja
xchg
in
add
das
push
mov
mov
sti
scas
std
push
jnp
xor
mov
jle
roll
adc
sbbl
imull
sbb
sub
aam
lret
mov
push
adc
sub
mov
jp
pop
lret
aad
jae
pop
sbb
mov
inc
cmpsb
ja
outsl
fbstp
or
add
push
and
cmpsl
fdivl
adc
filds
sarb
pop
or
dec
mov
mov
xor
add
cld
fidivs
aas
mov
push
insl
ret
cmp
pusha
cmp
clc
movsbl
cld
jnp
add
je
dec
xor
xchg
adc
out
jbe
fxtract
mov
sub
push
lahf
out
sbb
lret
sub
sbb
clc
loopne
mov
shr
and
mov
adc
imul
adc
pop
test
arpl
xchg
hlt
stos
aaa
fadds
aam
stc
pushl
and
push
inc
cmc
in
jmp
call
movb
sbb
xchg
shll
imul
aaa
out
mov
adc
or
dec
inc
repz
aad
andb
adc
mov
jp
aas
fwait
movsl
mov
xchg
clc
add
repz
pop
enter
jmp
fdivrp
add
js
jbe
jge
cli
push
push
mov
aad
int3
push
out
popa
out
lock
fldenv
inc
arpl
mov
xor
push
jecxz
lcall
lcall
cwtl
jl
mov
lods
and
inc
or
xchg
lds
ret
popa
out
inc
dec
divb
mov
icebp
push
cmpsb
and
stc
movsb
mov
sti
lock
lahf
dec
and
data16
mov
sbb
sbb
push
adc
dec
cmp
cmp
test
scas
faddl
xchg
ret
fimull
enter
pop
stc
jl
sar
pop
into
dec
mov
xor
inc
iret
xchg
rcrb
subl
mov
jmp
sti
lret
bound
movntq
stc
push
das
clc
mov
xor
push
add
jge
or
loop
add
jbe
movb
orl
pop
sub
cltd
loopne
jmp
fisubl
xorb
lcall
pop
shll
pop
mov
inc
mov
dec
add
cmp
mov
out
je
inc
mov
cli
mov
lods
pop
fcmovnu
gs
sbb
cmpsb
imul
popa
push
cld
cli
dec
icebp
mov
ret
mov
dec
std
inc
xorl
je
xchg
pop
int3
mov
scas
mov
test
test
mov
ja
lods
aas
dec
mov
sbb
sti
fists
ja
cwtl
fdivrl
out
xchg
lret
pop
sbb
mov
pushf
mov
inc
adc
stos
fdivr
pop
sbb
lods
leave
mov
xchg
cmpsl
push
arpl
loop
pop
movsb
push
popa
cmp
jbe
cltd
push
lea
adc
or
repnz
inc
cwtl
test
jl
cmp
mov
shrb
cld
nop
aam
mov
loop
popl
movsl
addb
adc
test
lret
sahf
push
cld
xor
and
int
pop
ror
or
mov
add
loop
and
push
jmp
or
mov
xchg
or
mov
xchg
add
push
and
xchg
popa
push
mov
sbb
lret
or
xchg
hlt
ss
repnz
enter
sbb
push
xchg
and
mov
mov
in
bound
int
jne
fsubr
push
test
mov
or
jne,pn
pop
lahf
mov
sbb
adc
ja
add
mov
jbe
aam
mov
mov
xchg
sbb
sahf
adc
loope
mov
xchg
sahf
leave
mov
dec
cld
repnz
pop
jmp
sbb
push
rorl
sti
sbb
inc
test
or
push
in
imul
cs
loop
and
out
or
push
ror
ljmp
nop
push
movsl
enter
fmull
cs
pop
xor
jge
inc
or
pop
movsb
jge
jnp
xchg
repnz
dec
push
cmp
lahf
fcoml
inc
cwtl
repnz
xchg
cmp
sbb
cmc
mov
test
inc
ljmp
adc
xchg
arpl
adc
mov
sahf
mov
fsubs
rclb
cmpl
add
and
enter
mov
das
jne
dec
inc
push
cmp
adc
testb
xchg
test
loope
stc
push
push
inc
pop
cld
sahf
adc
or
lea
sbb
icebp
mov
in
sbb
stos
sub
outsl
push
mov
adc
xchg
in
mov
push
pop
jnp
stos
stc
movsl
xchg
pop
mov
fnstcw
or
cs
adc
adc
push
in
in
sub
iret
nop
mov
loopne
lcall
fxch
fcoml
fldt
mov
fcomps
jge
mov
sahf
fucom
mov
ss
dec
mov
or
add
xchg
jmp
imull
mov
dec
lret
jb
decb
or
lods
stc
pushf
ss
and
jl
adc
repz
scas
jbe
xchg
sbb
clc
jo
cmpsb
xchg
lret
out
sahf
pop
faddp
push
data16
lret
faddl
xor
dec
stos
pop
adc
fsub
jle
and
push
pusha
or
not
inc
aam
packsswb
mov
mov
fcomps
cmp
insb
mov
dec
mov
sub
ret
ret
dec
sahf
es
je
mov
scas
xchg
imul
nop
loopne
shll
sub
inc
sub
into
lahf
jle
push
xchg
xchg
mov
fcoml
jo
aas
pop
push
test
sarb
stc
and
in
dec
loopne
decl
and
jecxz
sub
fbld
adc
sub
jp
xchg
cmc
add
test
aad
cwtl
mov
xor
sbb
mov
ds
pushf
fldenv
movsb
xor
xchg
xor
mov
out
push
xchg
outsb
inc
cmp
cmp
dec
es
rorl
ja
cwtl
enter
stos
fidivl
andl
mov
mov
sbb
or
xor
fs
pushf
dec
jno
call
mov
decl
mov
dec
enter
or
sbb
add
insl
aad
ljmp
psubd
idivl
lret
mov
lea
lcall
sbb
mov
daa
cmp
pop
xchg
xchg
mov
dec
aas
es
insl
ss
mov
fimuls
out
test
pop
gs
cmp
test
pusha
cmp
and
push
sbb
test
sbb
mov
jl
out
lea
sub
add
push
jecxz
pop
adc
scas
jns
ja
mov
aaa
sbbl
or
pop
pop
sub
subb
fsubr
xor
movsl
int
ljmp
cld
mov
add
inc
int
and
sahf
and
stc
imul
out
movsb
add
add
dec
adc
iret
mov
addr16
inc
push
mov
push
filds
loope
xchg
test
push
push
daa
das
lock
push
stc
out
or
loopne
push
test
daa
mov
sarl
ret
lods
pop
lret
ja
in
adc
fisttpll
cwtl
adc
push
or
fmulp
dec
pop
sbb
sub
out
xchg
fsubs
lcall
jb
aas
aas
rclb
pop
cmpsl
repz
pop
es
mov
bnd
cmpsl
sub
out
push
dec
pop
adc
movsb
sub
mov
xor
in
xchg
mov
adc
into
cmp
mov
shrb
pushf
mov
jns
sahf
adc
aas
mov
xchg
xchg
adc
in
xchg
and
out
cmpsl
sahf
enter
std
loopne
lahf
hlt
pop
and
inc
aas
pop
insl
nop
jl
pop
cli
enter
push
cmp
sti
aad
pop
push
rorl
push
xchg
adc
cmc
rcrl
sbb
ja
fdivr
jge
mov
xor
imul
shrb
or
jmp
pop
data16
pop
fsubs
add
mov
pop
mov
insl
cld
in
leave
add
enter
or
and
leave
shlb
sub
xchg
sbb
push
cmp
test
nop
sbb
adc
out
push
pop
cwtl
addb
and
jg
lods
or
pop
ret
and
xchg
mov
mov
mov
test
xchg
fistpll
inc
addr16
mov
cmp
dec
neg
std
fldt
fwait
in
int3
inc
negb
mov
mov
test
sbb
mov
inc
das
xchg
lods
scas
shl
adc
and
mov
aad
pop
push
adc
lret
pop
in
pop
mov
xchg
push
iret
jl
add
mov
mov
scas
stc
psubsb
inc
cltd
shll
push
test
cmp
popa
sub
call
xor
scas
sahf
or
dec
insl
jae
gs
mov
sahf
into
stc
imul
mov
ss
cli
mov
pop
xor
mov
fistpll
mov
aad
sbb
or
cmc
mov
xchg
pushf
mov
fwait
outsl
mov
jmp
xor
push
pushf
inc
xchg
loope
in
pushf
loope
and
lods
movsl
data16
cld
xchg
out
sub
lods
outsb
aaa
mov
dec
jmp
enter
repz
std
add
push
pop
out
push
jg
push
imul
pop
stos
push
loopne
mov
mov
dec
xor
cmp
pusha
mov
mov
push
jmp
or
xor
out
push
stc
adc
mov
ss
cmp
in
adc
push
aaa
mov
mov
in
decb
sbb
or
insl
pop
ret
xor
outsl
adc
push
push
mov
mov
mov
iret
push
ficompl
or
jecxz
adc
inc
out
lret
in
lret
xlat
xchg
repz
xchg
test
shll
scas
and
hlt
pushf
add
cs
ret
repz
pop
and
pop
cwtl
sbb
pop
dec
xchg
sub
jae
push
pop
mov
add
test
push
xchg
shl
pop
xor
mov
stos
scas
xor
and
lock
mov
adc
add
xchg
das
incl
mov
xchg
sub
mov
andb
add
jl
or
mov
inc
sahf
sbb
and
les
and
mov
adc
ret
mov
mov
cwtl
test
adc
shll
jmp
or
prefetch
jns
push
push
add
add
daa
push
lds
push
jno
jl
pop
pop
mov
daa
leave
loop
pop
cltd
mov
sbb
out
sub
or
cmp
pop
push
jbe
rcll
mov
stos
sbb
pop
into
cld
xor
push
imul
adc
and
icebp
push
insl
dec
mov
xchg
lods
sub
jbe
xor
mov
jae
add
std
call
and
loop
inc
jp
ss
mov
inc
jae
jae
push
mov
adc
push
adc
out
xchg
int
inc
mov
repnz
mov
mov
push
mov
je
cmp
xor
je
mov
push
lret
and
add
out
test
lods
pop
sub
mov
mov
fcomps
sub
sbb
adc
outsl
sub
push
mov
jp
inc
jmp
jmp
jmp
pop
popf
jg
call
or
pop
pop
inc
add
in
jecxz
add
dec
enter
lods
gs
icebp
daa
adc
cmpsl
sub
jnp
je
int
jge
mov
les
inc
lret
aas
adc
mov
inc
pop
fidivs
inc
outsl
cwtl
jb
push
inc
adc
and
lods
ret
lods
mov
orb
stos
lea
loopne
bound
adc
cmp
lods
ds
push
dec
arpl
xchg
mov
push
push
shll
pushf
xor
je
shll
rcll
dec
scas
hlt
insl
fnstsw
mov
push
cmpsb
scas
or
jno
addr16
mov
sbb
repnz
adc
cmp
insl
or
push
dec
and
cli
sbbb
xchg
and
mov
mov
gs
mov
mov
int
or
push
sar
lods
jbe
push
popf
fistps
ja
movsl
addb
fcmovnbe
dec
aad
sbb
cltd
fld
into
jae
decl
pushf
sbb
push
jnp
test
loop
scas
mov
imul
xorb
or
or
lods
push
sahf
mov
xchg
dec
mov
call
xchg
pusha
pop
ret
ss
pop
mov
daa
out
pop
lahf
mov
adc
jmp
dec
sub
bswap
or
mov
mov
inc
push
sub
or
push
out
mov
jmp
data16
adc
arpl
add
mov
std
mov
dec
add
je
js
cmp
or
jl
pop
les
hlt
ds
or
daa
insl
add
jne
mov
push
dec
inc
mov
and
loope
mov
and
xlat
xchg
jb
adc
cmp
pushf
nop
pushf
fsubrs
lret
fnstsw
jno
adc
mov
mov
aad
addr16
sub
hlt
test
out
clc
xchg
fs
mov
js
imul
mov
push
scas
cltd
ret
cwtl
push
mov
and
mov
test
cld
dec
mov
cmp
sbb
out
aaa
xor
mov
lcall
pop
enter
imul
cmp
push
cld
pop
cmp
jmp
mov
imul
inc
sti
leave
mov
add
jae
lods
std
test
adc
pop
cs
jle
dec
icebp
dec
jne
ffreep
fstl
pop
fisubrs
xchg
bswap
mov
dec
je
outsl
shl
ss
sahf
inc
stc
push
xor
xchg
and
mov
movsb
sbb
xchg
dec
jp
sbb
test
mov
xchg
nop
iret
xchg
xor
sahf
cld
xor
out
insb
mov
rcrb
inc
sti
into
push
jne
lcall
cmpsb
cmp
mov
adc
in
fucom
out
jo
call
sub
addr16
dec
jns
in
and
jp
por
sbb
sub
push
cmp
jno
xchg
leave
sbb
lock
mov
push
dec
data16
mov
push
cmp
inc
xlat
sub
xchg
jb
and
test
les
jns
or
aad
loope
mov
lahf
pop
push
aaa
adc
repnz
jmp
adc
popl
xor
scas
add
and
push
cmp
jns
mov
mov
scas
inc
cmpsb
mov
loopne
adc
fsub
mov
xchg
cmp
xlat
cmp
dec
and
out
lahf
sar
jecxz,pt
mov
xchg
push
int
sbb
shlb
ja
adc
roll
xchg
jl
inc
leave
push
loop
xorb
xor
mov
or
dec
lahf
dec
and
jecxz
lret
pop
lcall
xor
or
jno
push
jp
mov
stos
xor
push
test
jne
mov
mov
dec
xlat
sbb
and
cmc
mov
enter
cltd
stos
mov
push
out
jp
test
test
mov
cmc
out
mov
push
ljmp
sbb
nop
loop
iret
test
add
mov
int3
sarl
mov
xorb
inc
fsubrl
mov
mov
in
adc
mov
push
mov
xchg
inc
andb
jle
dec
ret
sbb
sub
push
out
pop
cltd
pop
cwtl
mov
and
mov
mov
cltd
and
inc
std
enter
xchg
adc
in
and
adc
addl
lret
fld
push
rcr
lret
sub
popa
shr
mov
push
or
scas
andl
js
leave
mov
xchg
push
ret
sub
ljmp
dec
js
push
pushf
fdivl
aaa
jg
fstps
inc
pop
sbb
xor
popa
clc
daa
lret
xchg
xor
clc
dec
test
jecxz
sbb
xor
add
stos
adc
jne
fldenv
xchg
scas
or
mov
sbb
out
add
lods
popf
mov
dec
stc
xchg
pop
push
pop
sub
mov
mov
add
lret
jge
sahf
lock
inc
rol
popa
iret
testb
fnstsw
mov
xchg
push
cmpb
iret
in
icebp
jno
pop
pop
movlps
add
cwtl
out
mov
jge
ds
insl
shlb
push
jge
loope
add
iret
mov
adc
jmp
test
inc
int3
addr16
daa
into
pop
xchg
cmp
test
xor
add
fdivr
loopne
jno
das
mov
sub
jmp
insb
adc
enter
mov
leave
int3
movsb
hlt
stc
add
mov
mov
repnz
test
sti
add
push
xor
subb
outsb
fsubrs
xchg
adc
subb
jmp
xor
jmp
mov
pop
repz
cmpsl
sub
push
lds
add
aas
push
adc
adc
mov
data16
fisubs
xchg
xchg
data16
sarb
ret
repnz
jge
pop
flds
pop
jl
inc
popa
push
cltd
in
lock
mov
sub
pop
pop
inc
test
cmp
push
icebp
dec
mov
ja
loope
arpl
int3
add
mov
xor
sub
and
jle
arpl
negl
and
xor
es
mov
subl
std
dec
push
lret
xor
mov
xchg
shrl
aas
xor
add
mov
mov
pop
lahf
sahf
add
nop
mov
cmp
dec
dec
and
lret
mov
mov
outsb
pop
push
shl
lahf
out
mov
aad
imul
lock
jg
popa
cwtl
xor
test
fbld
xor
fcmovnb
les
sub
mov
mov
jnp
dec
xchg
or
add
fsubrs
add
mov
dec
arpl
or
mov
sub
movsl
imul
imul
inc
enter
ljmp
test
jge
dec
mov
xor
jno
or
or
movd
iret
mov
mov
movsl
adc
dec
clc
push
ud0
cmp
pop
push
add
or
out
sub
xchg
les
and
sub
mov
test
sti
xchg
sub
inc
xchg
xor
push
inc
xor
lods
loop
add
sbb
inc
les
loop
jnp
test
mov
xchg
jl
adc
and
pop
lahf
sub
push
pop
dec
cmp
adcl
loope
ja
sub
push
in
mov
push
push
push
lret
fsubl
shlb
xchg
in
in
adc
cld
aas
pop
mov
mov
loop
shlb
inc
xchg
pop
push
lea
sbb
outsb
cmp
pop
fwait
movsl
pop
ror
sub
add
fdiv
lds
mov
jl
je
sub
cmp
jge
push
jne
pushf
shlb
fsubrl
mov
or
cmp
scas
clc
mov
pop
aad
or
cmp
sbb
xlat
mov
mov
cwtl
mov
rol
dec
xor
stc
fmull
loop
shll
adc
sbb
xorb
dec
xlat
sbb
cmpsb
packsswb
addr16
mov
mov
mov
clc
sahf
dec
pop
stos
add
int3
scas
shrb
movsb
inc
nop
pushf
sub
dec
mov
mov
int3
add
or
icebp
pop
mov
pop
dec
pop
push
mov
inc
jae
ljmp
pop
sahf
xchg
cmpb
fcompl
xor
fdiv
add
fdivl
es
mov
pop
in
test
lea
and
push
lock
lea
and
pop
leave
pop
lcallw
or
clc
in
inc
repz
sbb
pop
incb
pop
add
dec
dec
cmp
mov
bound
add
popa
popa
pinsrw
lea
mov
and
pop
test
and
imul
cltd
in
imul
ds
jge
adc
gs
push
push
test
dec
fcompl
dec
loop
dec
dec
add
int
lcall
xchg
push
mov
fdivrl
loopne
xchg
pop
add
insl
mov
fscale
dec
iret
ja
pop
stos
stos
cmp
lods
scas
dec
xor
mov
mov
and
cltd
xor
repnz
or
je
mov
outsl
xchg
mov
mov
in
mov
or
add
lcall
cmp
mov
rolb
out
dec
cmpsb
xchg
lret
inc
mov
popf
cli
dec
or
test
cld
xor
scas
stos
pop
faddl
insb
push
xchg
pushf
mov
add
fstpt
mov
xor
dec
xchg
loopne
inc
adc
adc
gs
mov
mov
and
cwtl
scas
pop
jecxz
push
mov
sbb
add
or
ret
mov
mov
fildll
imul
es
add
sbb
insl
call
repz
popa
jb
ds
mov
add
jg
into
lods
cmp
mov
sti
fcmovne
cld
sysexit
or
add
push
xor
int3
jae
mov
jne
mov
xchg
mov
cmp
mov
push
imul
cmp
xor
push
cmc
cmp
cmc
lods
mov
popa
aam
stos
sbb
jb
xchg
and
xor
push
jecxz
test
jbe
sbb
mov
adc
cmp
js
shufps
dec
or
jmp
jo
pop
jg
xor
sahf
movsl
in
push
sub
dec
popf
das
jmp
adc
sub
jnp
cmc
xchg
movsl
scas
addb
jle
sub
add
test
scas
mov
sub
xchg
sbb
daa
sti
inc
sub
ljmp
cmp
cmpsb
add
xchg
xor
jge
mov
aam
dec
sbb
xchg
lods
adc
ljmp
cld
mov
icebp
inc
subl
push
and
rorl
xchg
xchg
into
das
fwait
ret
jmp
ret
sub
insl
ja
jae
imul
movsl
pop
sub
loopne
cltd
divb
test
into
mov
push
mov
jb
or
and
popa
scas
xchg
fwait
inc
add
loope
xchg
and
pusha
mov
dec
push
iret
mov
insb
push
sbb
sub
mov
cs
xchg
popf
pop
pop
xlat
sub
add
inc
mov
mov
dec
test
jmp
adc
sbb
mov
loope
add
lret
jbe
mov
ds
les
pop
pop
fldl
subl
insb
and
adc
jle
sbb
femms
dec
cmpsl
mov
sub
nop
push
dec
mov
pop
adc
in
es
or
out
push
sti
push
mul
push
andl
cmp
loopne
inc
and
arpl
jmp
inc
test
or
pop
add
fldl
push
cmp
fsts
scas
pop
add
dec
xor
adcb
pusha
push
ret
xchg
pop
ret
push
push
ja
fwait
push
rclb
cmc
xor
rorl
push
lds
xlat
adc
xchg
and
mov
add
or
or
push
adc
jl
je
stc
inc
sbb
sbb
inc
jg
adc
jmp
rolb
sbb
pusha
shlb
push
pusha
in
rclb
fldt
xchg
in
gs
scas
dec
popa
cmp
clc
push
aaa
and
push
es
mov
jecxz
mov
cmp
push
arpl
nop
sub
adc
cmc
jns
xchg
mov
add
xchg
mov
ret
cmpsb
inc
adc
pop
jnp
ret
adc
mov
das
mov
ljmp
enter
jne
cwtl
addr16
int
jge
push
in
fidivrl
and
setp
cmc
push
outsl
and
ss
push
pop
shlb
push
scas
mov
adc
cmc
dec
sbb
stc
pop
fdivs
test
mov
pop
xchg
ret
push
or
mov
in
xor
sbb
ret
arpl
outsl
inc
sub
out
sbb
fidivrl
dec
pop
mov
mov
or
adc
dec
sbb
insl
mov
negb
movsl
in
idivb
xchg
jo,pt
shll
test
xchg
in
test
jno
jns
jecxz
sbb
stos
ret
decb
das
pop
cs
mov
outsl
pop
insl
in
les
test
pop
sti
into
push
jge
inc
dec
cli
mov
pop
sub
or
jmp
imul
aaa
pushf
fs
mov
imul
cmpsb
jnp
loopne
pop
insb
jecxz
lret
sarl
cmpxchg
movsl
lcall
adc
imul
rclb
divb
popa
rcll
test
ljmp
movsb
pop
dec
outsl
sahf
cmp
dec
mov
push
cmpsb
mov
imul
sbb
mov
adc
jne
push
push
int3
cmpsl
mov
adcl
int3
or
mov
fwait
insl
sbb
lahf
lcall
add
mov
xchg
iret
adc
dec
add
mov
repz
or
sbb
xlat
cmc
hlt
lahf
add
cli
push
push
into
imul
lock
outsb
orb
les
jnp
pop
cmp
lcall
cmp
loope
dec
and
in
mov
or
jge
mov
out
addr16
mov
and
jbe
lcall
loopne
push
sbb
es
shl
decl
jb
shl
inc
inc
jp
dec
ror
iret
bound
mov
cmp
push
andb
add
icebp
out
cmc
xor
sub
adc
loopne
pop
lds
out
add
add
pushf
mov
pop
add
jb
flds
ljmp
adc
jg
imul
xchg
scas
sbb
xchg
aas
jg
cli
movsb
mov
and
mov
pop
std
stos
shr
cmp
aad
hlt
mov
lods
mov
mov
out
iret
test
xor
push
hlt
jmp
aaa
xchg
sbb
add
jl
xchg
and
fdivrp
enter
push
ljmp
adc
repnz
rolb
rol
stos
aad
pop
in
movsb
dec
push
xor
cwtl
repnz
or
or
sahf
shrb
adc
fistl
pop
pop
notb
std
pop
cmp
sahf
dec
sub
popa
jnp
push
adc
hlt
pop
xchg
xchg
push
sahf
in
sbb
sbb
inc
push
inc
pop
inc
adc
jmp
push
jno
sbb
ret
push
jle
jle
out
call
mov
mov
mov
push
ffree
popf
fidivrs
sub
ficoms
pop
pop
add
jne
ljmp
mov
pop
jmp
pop
pop
pop
repz
mov
or
fdivr
push
or
pop
inc
mov
sbb
std
js
jmp
movb
inc
std
in
push
cld
aam
cmpsb
gs
in
dec
stc
or
mov
jp
pusha
adcb
cmc
ja
enter
jl
xchg
jg
imulb
leave
inc
movsl
loop
sti
dec
orl
xor
and
roll
pop
and
inc
add
pop
mov
leave
and
and
daa
pop
lcall
xchg
push
xlat
shlb
fadds
in
mov
mov
mov
out
lret
pop
jecxz
sti
outsl
outsb
cld
inc
iret
pop
inc
pop
jne
div
insl
mov
jns
mov
shrl
in
stos
sub
ja
mov
jp
lods
decl
into
xchg
nop
inc
adc
shr
clc
clc
pop
mov
mov
sbb
jns
pop
xchg
ret
fistps
in
jno
and
mov
stos
testl
adc
mov
adc
loope
les
add
xor
mov
sarl
divb
popf
imul
pusha
notl
sbb
inc
into
mov
daa
js
push
test
jl
adc
and
sub
aad
lea
xchg
les
movsl
mov
jg
shlb
loopne
mov
xor
xchg
into
call
rorl
push
mov
jl
stc
in
inc
cmp
out
lcall
loope
arpl
inc
in
or
pop
popf
fistps
mov
fsubrs
and
pop
adc
dec
add
sahf
nop
insl
lret
inc
fcomps
cli
mov
add
jecxz
lcall
fmuls
in
std
incl
pop
add
pop
or
mov
fldt
or
jge
cmp
call
xchg
and
inc
out
xchg
std
sub
ljmp
sbb
push
jl
hlt
push
adcb
dec
cltd
pop
sbb
adc
jmp
jb
in
cmp
loop
imul
shrb
push
loop
scas
lret
push
inc
fcoml
test
cmpsl
jge
cli
mov
out
sub
jb
push
das
clc
mov
xchg
fiaddl
out
lock
xchg
dec
pop
pop
add
call
xor
pop
sarl
pop
movsb
scas
mov
out
or
bound
mov
sbb
into
mov
rclb
clc
cmpsb
fcomps
enter
cmpsb
loopne
lret
out
incl
cmp
xchg
les
std
cmp
mov
xchg
ja
sti
jl
pushf
ret
mov
ljmp
sub
adc
pop
rorb
adc
hlt
sahf
and
xlat
inc
mov
push
mov
pop
je
push
test
insl
jno
xchg
int
xor
lods
int
mov
dec
xchg
dec
adc
xor
int3
lret
mov
into
loope
lea
out
push
pusha
inc
sahf
or
jle
mov
outsl
punpckhwd
rcl
push
or
ret
dec
addb
aaa
es
aad
data16
dec
js
and
add
jnp
dec
call
in
ret
int
add
mov
loope
fs
or
mov
lds
xor
xchg
repz
mull
push
lret
cmp
sahf
fstpt
mov
jge
subl
outsl
and
pop
dec
cltd
dec
xlat
sub
jne
pop
lods
push
or
fucomip
sub
push
pushf
mov
or
cwtl
cmp
fmull
shl
inc
jmp
fistpl
sar
push
loopne
mov
stos
mov
pushf
sub
icebp
inc
insl
outsl
mov
cli
adc
outsl
and
je
push
pop
out
mov
push
add
aaa
call
les
insl
lock
cmp
stos
into
cmp
aas
lahf
add
aam
xor
popa
mov
jae
rcll
pop
inc
dec
push
out
sbb
pop
jno
in
aas
loop
jno
enter
mov
and
dec
push
fld
dec
test
sti
and
mov
lret
movsl
or
or
or
mov
out
mov
enter
dec
jecxz
mov
nop
aam
xchg
push
test
and
xchg
or
cmp
sub
bswap
inc
clc
ds
push
inc
push
repz
fs
cltd
ret
mov
xor
and
dec
test
aas
fdivrl
mov
add
adc
xor
int
sbb
cmpb
scas
repnz
adc
repz
inc
mov
mov
jp
cmc
mov
push
dec
shr
stos
adc
std
pop
imulb
push
sub
les
fbstp
adc
dec
push
aam
packsswb
repz
mov
jp
js
test
push
pop
ljmp
xlat
out
add
fmulp
pop
ret
adc
pop
lahf
pop
sub
and
xor
mov
push
dec
mov
mov
mov
pop
mov
ds
sub
xchg
leave
notl
iret
sbb
and
lods
or
hlt
call
outsb
dec
mov
pop
testl
dec
push
pop
adc
add
xchg
arpl
add
ja
xchg
push
roll
out
imul
jle
out
movsb
add
mov
add
bound
js
loope
pop
add
jmp
ret
jb
enter
cmpl
inc
into
push
push
xor
jno
lahf
xchg
xchg
push
andb
jge
je
fidivl
pop
ret
enter
pop
push
daa
sbb
pop
jbe
and
sub
or
or
xchg
mov
sbb
testb
pop
cmp
ss
sbb
mov
push
lcall
aam
test
mov
roll
data16
jbe,pn
loope
and
insb
data16
out
lret
sub
xchg
mov
pop
sub
pusha
aam
and
clc
cmp
add
or
inc
cltd
shrb
xchg
xor
push
xor
jmp
repz
repnz
adc
mov
sbb
add
out
mov
fisubrs
inc
jle
test
and
mov
mov
lock
mov
int
test
cwtl
sbb
cld
dec
xor
sub
repnz
cwtl
mov
int3
or
push
dec
jae
ja
lock
out
mov
xchg
in
js
inc
cmpsl
dec
inc
mov
movsb
mov
or
insl
das
outsb
shlb
jp
ljmp
sbbl
cmp
and
icebp
dec
push
fistpl
mov
mov
mov
push
add
add
mov
sti
enter
cld
push
cmp
ficoml
bswap
jne
or
iret
ja
jle
subb
mov
and
dec
les
pop
push
fbstp
scas
jns
adc
pop
imul
enter
and
mov
std
std
push
pop
gs
adc
xchg
sub
lahf
int3
loopne
cmp
mov
int3
gs
cld
xchg
inc
rcrb
lret
dec
imul
xchg
into
cltd
jp
sbb
mov
mov
daa
test
pop
fnstsw
sub
inc
mov
adc
pop
jo
negl
std
rcr
pop
ds
insb
movsl
cs
push
inc
roll
inc
push
scas
push
push
test
nop
jno
mov
stos
enter
inc
les
data16
mov
mov
push
loop
jne
in
cmp
stos
das
push
divb
sbb
sahf
or
push
xor
je
adc
or
stos
dec
inc
adc
sbb
xor
cli
mov
dec
daa
test
rclb
adc
xor
jne
into
jo
mov
inc
lret
mov
mov
mov
dec
out
inc
nop
xor
sbb
sub
pop
mov
adc
sahf
add
sarl
int
mov
sub
shll
sbb
cltd
clc
sub
outsb
and
ss
add
cmpsb
fimull
cmpl
insl
jge
sbb
shl
mov
ja
sub
dec
push
arpl
xor
scas
cmpb
cld
add
lret
push
leave
inc
sub
es
pop
scas
jne
or
adc
mov
or
std
pushf
mov
inc
add
test
jbe
aas
ss
movl
negl
xchg
cwtl
add
jp
addr16
mov
fwait
adc
ja
mov
pop
jl
daa
and
test
adc
lock
inc
push
into
ret
xchg
dec
mov
ret
in
cmp
adc
lret
dec
sti
test
dec
test
pop
or
jns
push
xchg
ja
add
and
mov
pop
xchg
adc
add
cltd
cmp
push
sub
adcb
adc
repnz
imull
adc
sub
cmp
push
addr16
bound
cltd
ljmp
pop
mov
stc
je
inc
push
es
mov
cmpsl
and
add
mov
mov
fstpt
int
nop
imul
add
jb
pop
sti
sahf
xchg
xor
sbb
dec
das
test
bound
add
push
leave
fnstsw
scas
or
mov
fdivl
lds
daa
adc
push
lds
xor
mov
les
push
jbe
cmpsb
jbe
or
icebp
pop
and
push
dec
or
ret
adc
cld
jmp
jl
mov
cmpsl
pop
in
inc
loopne
repnz
mov
xlat
or
adc
pusha
xchg
or
cmpb
mov
aad
mov
mov
fs
mov
repnz
jne
push
xor
mov
inc
arpl
cmp
xor
mov
and
jno
dec
fidivl
jge
iret
data16
add
mov
jnp
enter
movd
std
hlt
das
rolb
ds
add
nop
jo
inc
lock
dec
pop
lret
fs
mov
cmpsl
lods
inc
insl
xchg
stos
test
ret
mov
shlb
or
shlb
xchg
pop
or
pop
mov
mov
iret
les
add
cmp
inc
fmul
adc
fwait
clc
es
and
jmp
sahf
gs
jno
pop
lock
pop
adc
je
out
dec
loopne
lds
jns
out
jecxz
push
outsb
sub
lea
cmp
fs
insb
and
add
int3
push
pop
add
mov
insb
pop
stc
mov
mov
das
in
sbb
ds
dec
mov
mov
call
es
mov
xor
pusha
push
and
and
dec
sub
out
dec
lret
stos
mov
jmp
jle
jge
dec
inc
shll
jno
icebp
fs
stc
andb
push
jecxz,pt
pop
jmp
jns
icebp
fdivrl
es
sbbb
or
add
jle
lret
and
mov
repnz
and
mov
mov
iret
into
cmc
xor
xor
lea
mov
or
dec
and
cltd
decl
hlt
xor
jge
jecxz
jns
xchg
imul
pop
aam
repz
iret
das
cmp
rclb
mov
rcl
outsl
lock
pop
lret
cmp
iret
lock
jbe
sub
add
aad
jnp
pop
jno
xchg
mov
add
adc
out
xchg
arpl
aam
xchg
inc
push
jl
cmpsb
scas
jno
push
insl
jno
pop
es
out
int
fs
mov
jl
pop
subl
sbb
push
test
lds
lcall
lods
mov
fwait
mov
sbb
stos
mov
xor
mov
lock
sbb
faddp
fcomi
popa
mov
test
sub
adc
and
cld
cmp
arpl
mov
cmp
adc
cli
cmpsl
sub
sub
add
push
sub
adc
push
cli
loope
out
rcll
dec
nop
mov
xlat
stc
fsubrl
loopne
arpl
jle
mov
popa
jmp
xchg
cmp
jae
xchg
mov
mov
dec
jmp
imul
cs
sbb
aam
out
scas
and
ret
ss
mov
je
fdiv
out
push
aad
lea
mov
gs
push
sahf
shl
inc
or
mov
mov
jne
out
mov
repz
mov
js
mov
and
cs
shlb
push
sahf
xor
jle
stos
push
mov
add
xor
mov
out
sbb
mov
adc
ret
adc
add
push
pop
mov
xlat
cmp
cmp
iret
jge
pop
jge
pop
dec
stos
jecxz
les
xchg
loop
jg
cmp
cmp
daa
mov
cmp
and
xchg
out
sbb
cmp
dec
imul
cltd
notb
daa
cmp
lea
jae
scas
inc
xor
sahf
jae
pop
scas
push
mov
hlt
dec
dec
lock
lods
fcmovbe
ja
push
mov
dec
movsb
jl
ljmp
adc
xor
movsl
rcrb
imul
or
lds
inc
inc
mov
shll
sbb
inc
stos
stc
test
ds
dec
std
lahf
movsl
lret
lret
xor
fs
pop
iretw
adc
xchg
xchg
divb
jmp
arpl
fs
jne
es
idivb
xchg
sub
in
je
lret
mov
lcall
inc
stos
scas
inc
dec
jo
mov
insb
mov
stc
jno
cmp
sbb
scas
xor
jl
stos
dec
out
sbb
popf
xchg
clc
mov
loop
paddsb
sbb
loope
sahf
lock
pop
add
aam
test
add
jns
sti
nop
mov
sub
in
hlt
xchg
jmp
mov
inc
xor
scas
pushf
xor
test
shrl
mov
mov
stos
addr16
das
jne
aad
jle
mov
dec
fcomps
pop
xchg
jg
add
push
hlt
lahf
lcall
sub
mov
pushf
sub
sub
or
cwtl
xchg
mov
add
xchg
push
stc
test
fnstsw
enter
or
jl
roll
test
dec
fs
test
jp
inc
mov
cli
xor
mov
js
cld
mov
iret
xchg
je
mov
add
push
fcoms
insl
outsl
stos
cs
testb
hlt
lret
stc
or
stos
xor
mull
add
gs
lahf
mov
adc
data16
mov
push
test
testb
jg
sti
outsb
shlb
outsb
test
lock
and
call
and
pop
jbe
pop
cld
ret
pusha
imul
inc
xor
in
mov
dec
fldl
jg
and
dec
test
pop
xchg
or
shr
pushf
rol
outsb
daa
das
sub
jl
push
or
in
mov
cli
fnstsw
fcom
insl
mov
outsb
or
sahf
jae
add
cmp
mov
xor
xor
or
mov
add
cmpsl
cmc
sbbl
or
cmp
mov
inc
and
mov
es
add
and
inc
in
add
fiaddl
xchg
outsb
ret
jno
nop
insl
cwtl
movsl
pop
pop
sub
jmp
or
jl
push
cmc
mov
ljmp
mov
addr16
push
gs
pop
xchg
push
cmp
pop
shrb
gs
xchg
addr16
cmp
cmp
adc
jns
pop
jb
repnz
sub
inc
sub
in
nop
adc
sub
loop
xor
dec
or
daa
ja
fadd
cmpsb
add
sub
enter
fsubl
sub
adc
inc
pushf
lcall
push
ljmp
mov
cmpsb
push
or
fcmovb
xlat
dec
or
stos
pusha
ljmp
pop
lds
push
jno
leave
sbb
sbb
repnz
mov
xor
mov
push
jne
or
pop
mov
mov
das
insl
lcall
pop
fisttps
pusha
jnp
push
mov
inc
xor
jo
mov
adc
mov
xchg
pop
jo
fs
idivl
add
xchg
orl
movsl
sti
jno
xor
icebp
loopne
xor
add
fdivrs
aad
repz
inc
or
popf
add
fsubr
mov
fs
mov
and
mov
scas
pop
or
push
stc
inc
sub
jmp
psubusb
outsb
push
inc
int3
push
movsl
pop
ss
xchg
loope
cmc
shll
mov
cmp
xchg
mov
jae
jle
dec
push
testb
cmp
cmc
xchg
arpl
push
jle
sbb
xchg
cmp
mov
pusha
add
int
repnz
popf
imul
cmpsl
fdivl
notb
mov
and
jl
adc
inc
inc
jo
ss
arpl
jae
data16
dec
mov
sbb
aaa
pushf
mov
iret
jmp
enter
sbb
cmp
je
loop
pop
fidivrl
ljmp
mov
xchg
sbbb
mov
enter
lock
sub
outsb
add
ftst
lods
mov
xor
inc
add
lds
pop
ja
dec
xchg
xchg
xorl
cmp
das
addr16
jg
pop
sub
test
es
es
add
frstor
mov
mov
ljmp
inc
add
sbbl
cmp
cmp
out
bound
xchg
scas
push
lret
xor
fwait
stc
iret
xchg
insb
sahf
in
push
pop
mov
aas
pop
sahf
sub
xchg
inc
inc
addr16
dec
cld
push
in
sub
mulb
push
mov
inc
cmp
inc
out
xchg
and
xchg
jbe
mov
or
dec
cmpb
lret
jg
int3
int3
ret
sub
int3
sbb
mov
inc
cmpsl
jecxz
pop
pop
stc
sbb
jb
inc
cli
push
push
mov
sbb
out
movsl
ds
mov
lods
aam
sbb
inc
sub
inc
std
sub
popa
push
rol
aas
push
push
sub
sbb
int
sti
add
fimuls
jmp
sbb
push
or
fnsave
cmpsl
ret
pop
mov
mov
jnp
mov
mov
dec
mov
push
fnsave
imul
rcrb
pop
sahf
or
aaa
sti
inc
ret
and
cmp
mov
sbbb
sub
and
stc
inc
add
stc
pop
inc
ret
cmp
imulb
mov
sbb
jne
loopne
cwtl
dec
mov
pop
stos
fwait
test
jnp
xor
xchg
sbb
in
cmp
ljmp
ficoml
jmp
loope
adc
pop
cmpsl
cli
aad
xchg
aas
data16
lods
jecxz
push
inc
in
mov
ficoms
push
mov
fcmovbe
mov
incb
cli
mov
sbb
xor
cs
push
or
addr16
into
test
or
and
loopne
push
jle
xchg
mov
pop
cmpsl
repnz
jge
aad
mov
out
add
jnp
out
or
adc
jg
inc
cmp
push
loope
sub
push
popa
jno
cmc
push
xor
xchg
pop
xor
dec
movsl
nop
dec
or
bound
pop
fidivl
leave
cs
stos
push
dec
jle
sub
jns
roll
dec
push
inc
jae
mov
in
xor
dec
add
ficomps
and
into
xor
add
int3
cli
mov
jb
in
cmp
fsubrs
inc
pusha
and
inc
xor
push
test
bound
pop
jge
mov
xor
lahf
int
subb
lea
or
mov
daa
subps
lret
insb
scas
cltd
xor
cmpsb
cld
mov
jbe
scas
pusha
mov
xchg
fdiv
pop
jno
jne
bound
fimuls
push
ds
testb
push
imul
repz
xor
add
adc
popf
mov
inc
lea
sahf
mov
inc
outsb
mov
add
jae
cmp
xchg
inc
dec
lret
jge
xor
into
scas
mov
jb
fld
cmpsb
xchg
jmp
adc
mul
jb
cmp
pop
xchg
in
les
xor
xchg
cmp
mov
xor
sbb
or
scas
mov
cmp
sbb
lods
mov
int
lods
cmp
je
scas
lahf
mov
popa
adc
aaa
and
jmp
enter
mov
addr16
loope
loop
sub
negl
std
fs
pop
and
or
out
ds
imul
sub
stos
mov
stos
mov
hlt
je
mov
repnz
lock
jb
fadd
pop
pop
jnp
in
aas
mov
dec
out
sbbl
xchg
cmp
movsl
dec
fdivs
cmp
push
push
into
insl
cmpsb
jle
aam
push
mov
jp
js
fwait
mov
cs
mov
cwtl
cmp
add
cltd
aam
sub
sar
out
loop
dec
cmp
mov
sub
or
adc
cltd
adc
lds
cs
mov
or
iret
and
xor
push
jmp
dec
inc
jno
test
jnp
push
mov
pop
cwtl
sahf
lret
fs
lock
add
aam
js
int
sub
jae
rol
icebp
scas
pop
add
cmp
je
and
xchg
test
jmp
out
popa
sub
scas
out
out
push
arpl
jb
sub
in
pop
and
jns
sub
je
cli
pop
pop
xor
jb
fucomp
jmp
mov
inc
mov
scas
hlt
in
outsl
jp
js
and
out
push
pop
mov
scas
popa
bound
test
or
scas
xchg
sub
adc
movsb
push
imul
push
ljmp
fldl
jmp
xchg
je
sub
pusha
daa
in
lea
ljmp
popf
es
xchg
in
test
sbb
mov
das
pop
fdivl
jae
cli
scas
add
xchg
pop
ljmp
push
pop
lcall
adc
dec
jl
mov
mov
pop
mov
popa
scas
fwait
jo
and
mov
iret
adc
lods
outsl
xor
or
lahf
aaa
repz
jo
ret
lcall
nop
mov
adc
out
sbb
jno
push
fiadds
and
jp
sar
xor
out
sub
pop
sbb
dec
fcomps
arpl
sub
pop
push
adc
rclb
inc
xchg
out
pop
popf
xchg
aad
lcall
sbb
hlt
push
mov
pop
mov
mov
les
lret
cld
cmp
fs
nop
stc
mov
push
stos
mov
mov
ss
popf
stos
push
pop
push
fsubrl
stos
push
adc
mov
and
adc
insb
sbb
popa
mov
movsl
push
loopne
pop
incl
push
xlat
sbbb
dec
xor
stos
test
rorb
js
je
add
mov
scas
sub
sahf
fsubl
aas
test
xchg
repnz
mov
mov
cmp
scas
inc
pop
cmp
shll
inc
data16
add
dec
or
cmp
inc
fucomip
push
cmp
fsubrl
sar
inc
xchg
gs
test
shrl
into
stc
gs
movsb
sbb
xchg
mov
je
sbb
add
fistps
aad
xchg
push
clc
insl
pop
enter
add
sbbb
dec
inc
jle
adc
mov
lcall
lds
sbb
xor
mov
xchg
mov
scas
repnz
scas
mov
cmp
jns
outsl
push
movsl
popa
mov
or
lods
fildll
sbb
aas
mov
test
iret
ret
push
push
or
xchg
clc
jno
push
leave
les
xchg
lock
lea
sbb
jbe
movsl
xlat
or
mov
into
jl
in
mov
notl
dec
ja
repz
push
or
push
dec
loope
mov
xchg
jbe
xor
fisubs
xor
add
pop
loop
sbb
and
and
fisttpl
push
stos
leave
jg
dec
fisttpll
jmp
mov
in
inc
fisubrl
dec
mov
or
js
in
sbb
pop
xchg
sahf
fisubl
add
cli
push
mov
pusha
arpl
pop
mov
xor
jnp
nop
pushf
cmp
ds
push
push
sti
mov
push
pop
xor
cmpb
ds
adcl
shll
mov
jnp
lcall
and
les
test
inc
sbb
andl
inc
sub
jmp
sub
ja
xchg
sbb
sti
inc
clc
adc
xchg
sbb
adc
test
insl
daa
mov
cmp
xor
jmp
or
les
icebp
stc
mov
mov
sub
xor
sbb
xchg
jmp
dec
push
sti
icebp
jl
je,pn
test
shr
cs
cmp
jo
adc
nop
in
xor
and
dec
addr16
rolb
loope
push
jg
dec
sub
xor
scas
outsb
or
jmp
jge
lret
mov
cltd
cwtl
mov
in
sbb
or
enter
sarl
aam
adc
cwtl
push
dec
push
or
xor
cmp
xlat
jl
cmp
inc
and
cmp
push
dec
xor
std
dec
and
xlat
test
test
scas
dec
pop
add
les
xchg
leave
cmpsb
popa
mov
rcl
adc
push
imulb
xchg
mov
mov
dec
dec
and
xchg
cli
mov
push
xchg
sbb
aad
sbb
cmp
xor
insb
mov
xor
mov
push
mov
movsb
dec
insl
sbb
cmpsb
jbe
add
int3
mov
cmp
pop
adc
adc
out
mov
in
mov
pusha
mov
mov
mov
xlat
xchg
inc
pop
bound
add
int3
cmp
cmp
pop
adc
and
xlat
call
test
das
mov
pop
adc
test
jmp
sbb
cmpsb
popf
and
adc
inc
mov
cltd
addr16
imul
dec
scas
je
shr
inc
fnstenv
je
adc
xchg
or
and
es
push
mov
cmp
cwtl
push
xor
mov
xchg
test
out
cltd
cwtl
int3
out
jo
out
lods
sub
pop
adc
inc
mov
icebp
stos
loop
or
sar
xchg
or
aad
or
in
sahf
imul
out
push
mov
xor
out
add
push
into
xchg
das
inc
fisubl
in
mov
xchg
sarl
and
adc
clc
and
cmpl
xchg
fmulp
fs
arpl
pushw
dec
out
rcll
loopne
fsts
fstps
out
mov
and
mov
sub
jmp
sbb
sub
or
mov
or
mov
sub
fstl
push
ss
nop
mov
test
jae
enter
or
loopne
push
sub
mov
cmpsb
jns
movsb
pop
cwtl
ret
cmp
xchg
orb
add
xchg
fs
ret
outsb
pop
fxch
add
outsb
nop
loop
pop
xchg
dec
add
and
jp
dec
lcall
jb
loop
enter
dec
xchg
fcompl
mov
adc
mov
push
aam
lcall
cltd
xlat
or
jg
repnz
aam
xchg
ja
ss
xchg
daa
add
cmc
cmp
adc
fdivs
xchg
mov
outsl
movsb
and
or
test
inc
lret
add
popf
jge
dec
sbb
pop
pop
popf
mov
and
push
jbe
fsubl
rcl
sbb
int3
outsl
xor
inc
loop
imul
and
lock
je
loop
lds
push
cmp
pop
pushf
arpl
into
inc
push
xor
pushf
mov
xchg
adc
mov
fwait
jge
mov
add
movsl
jp
icebp
dec
pop
mull
and
lods
adc
sub
lods
aad
xchg
xchg
push
push
and
std
sbb
mov
or
ds
mov
sti
push
pop
pop
icebp
mov
cmc
js
leave
cmpsl
add
jbe
add
cwtl
clc
jp
fcmovb
rep
inc
repz
xor
pop
xchg
jge
or
mov
and
mov
xchg
xchg
lock
sub
dec
inc
and
mov
mov
lcall
or
add
lcall
inc
fistpl
inc
add
fs
cwtl
rolb
aaa
xor
and
pop
out
cmp
dec
outsb
lds
aad
adc
out
sub
test
or
fs
dec
mov
adc
add
repz
dec
call
fwait
data16
inc
lahf
add
je
dec
push
ljmp
mov
scas
xor
xchg
sub
test
dec
cmp
or
fdivl
mov
add
and
pop
iret
mov
xor
sbb
scas
push
out
push
mov
jb
fxch
lahf
inc
cld
call
outsl
in
addr16
mov
add
jae
xor
pop
je
push
jbe
or
cmpsl
sub
xor
and
ja
lahf
fwait
dec
push
gs
cmp
mov
outsl
shl
lea
clc
pop
ficoms
sahf
bound
daa
pop
pop
dec
jecxz
push
mov
inc
test
js
inc
mov
enter
test
gs
inc
jne
lea
xor
mov
add
movsl
dec
or
add
or
cmpsb
icebp
push
mov
cli
or
mov
add
negl
jne
in
mov
lock
jmp
mov
mov
pop
daa
jge
pop
std
mov
mov
mov
in
mov
aas
jg
jne
ja
arpl
add
mov
xlat
loopne
insb
dec
in
xchg
xor
and
xchg
aas
enter
lret
sbb
repz
sub
icebp
fildl
xor
xchg
ljmp
jbe
lret
enter
mov
jp
in
call
pop
ficomps
arpl
enter
in
mov
call
scas
fildll
jbe
into
shll
and
mov
inc
movsl
or
sub
sbb
ss
mov
dec
jo
aas
adc
cmc
inc
mov
mov
cmp
test
daa
aad
mov
inc
jbe
sbb
out
mov
test
sbb
stos
and
lcall
insb
leave
lods
mov
pop
cmp
mov
leave
jo
xor
movsb
or
fstl
pop
sub
stos
dec
jnp
inc
dec
xorb
testl
cmovae
mov
mov
ficompl
ljmp
or
sub
stos
lret
ret
mov
shrl
jbe
test
stc
push
xor
in
pop
inc
inc
je
lea
xchg
shl
cmp
arpl
pop
add
jne
inc
pop
lods
pop
adc
popa
adc
rcll
cmp
rsqrtps
sahf
cli
push
mov
neg
lods
pop
loop
add
gs
in
push
mov
adc
sub
push
sarl
xchg
popl
int3
push
incl
mov
dec
loope
mov
outsb
insl
sbb
sti
push
sbb
cs
xor
adc
pop
sti
int
lret
add
fwait
sarb
jmp
fdivrs
lock
pop
pop
loopne
fucomi
mov
pop
xor
movsl
dec
jle
push
lret
int
sbb
cwtl
sub
in
lret
sbb
fidivrs
sbb
in
xor
test
popa
mov
push
or
jmp
dec
pusha
cmp
js
stos
and
into
xchg
aad
mov
cmp
rolb
dec
nop
jecxz
push
je
arpl
or
addb
pop
leave
push
xlat
mov
sarl
add
cmp
fucomi
ror
push
mov
jae
cmp
mov
not
jnp
xchg
cltd
add
push
push
push
adc
pusha
push
jo
je
xor
movsb
pop
sbb
fadds
cmc
mov
movsl
sbb
fwait
push
xchg
adc
adc
in
sarl
out
or
xchg
mov
xor
inc
pop
cmp
xor
bound
hlt
rcrl
loopne,pt
push
je
lods
call
push
js
cld
into
xor
inc
in
in
sbb
sbb
adc
into
sub
cmpsb
aas
jecxz
or
fdivrs
test
and
inc
mov
mov
cli
push
or
cmc
mov
sti
cmp
inc
lods
in
jno
sub
and
mov
adc
pusha
imul
xchg
lock
mov
inc
dec
xlat
cs
outsb
or
pop
mov
ss
enter
mov
xchg
push
dec
jecxz
sarb
pop
mov
jnp
add
pop
ss
imul
add
movsb
add
cmpsl
aas
fnsetpm(287
adc
inc
or
mov
pop
pop
sbb
out
push
in
inc
ljmp
pop
mov
je
gs
in
outsb
cld
xchg
push
loop
sbb
std
out
mov
stos
jno
nop
sub
mov
ja
test
pop
ret
adc
pushf
xor
daa
sar
out
dec
mov
pop
cmp
fsubrs
pop
inc
stc
shll
dec
fisubrs
les
and
lret
pop
mov
jae
mov
sub
dec
add
int
add
mov
push
inc
jnp
add
push
mov
sbb
repnz
call
addb
mov
orl
sbb
cmpsl
fdivrs
push
stos
lods
jmp
in
daa
jp
ja
fnstsw
in
jmp
adc
movsb
or
jl
and
stc
roll
cmpsl
mov
xchg
xorl
test
sbb
add
mov
dec
aam
imul
aaa
les
sbb
into
jmp
or
jb
mov
and
in
jmp
xchg
adc
fucomip
in
ljmp
sti
mov
fdivp
faddl
jb
adc
or
push
mov
scas
dec
sub
xor
call
pop
mov
and
loope
popf
ret
pop
mov
mov
sbb
aas
and
lahf
xchg
adc
dec
in
hlt
push
mov
or
adc
fidivrl
cmp
xlat
push
xchg
popa
nop
push
les
dec
in
in
into
mov
cwtl
test
test
lea
mov
test
push
and
add
push
cmpsb
push
sub
xchg
jmp
test
pop
inc
add
cmp
add
daa
lcall
fisttpll
pop
adc
add
xor
mov
test
stc
dec
add
stos
xchg
push
add
lret
pop
cltd
je
mov
repnz
or
adc
mov
adc
dec
dec
icebp
imul
lods
loop
mov
xor
add
push
sbb
sub
dec
inc
popa
pop
inc
mov
stc
sarl
out
mov
addl
mov
lcall
pop
test
mov
cwtl
add
add
push
mov
dec
scas
jecxz
push
sbb
mov
jmp
pop
or
pop
mov
pop
cs
loope
movb
mov
cwtl
jns
sbb
aad
adc
es
mov
add
insb
dec
xor
std
dec
sti
push
sbb
jno
adc
push
add
inc
xor
fsubrl
loopne
aas
xor
repz
js
adc
mov
shlb
pop
sub
jb
adc
add
idivl
repnz
insl
inc
xor
mov
out
shll
andl
sub
mov
push
pushf
fildll
mov
into
push
lret
mov
push
mov
mov
and
mov
xchg
mov
fstpl
sub
lock
and
aas
or
mov
mov
inc
xchg
push
rolb
ljmp
cmc
pop
push
add
sbbb
stos
sbb
cmp
shl
into
rcll
lcall
lret
xchg
cltd
hlt
sbb
adc
scas
push
leave
xchg
dec
ret
xor
add
mov
cwtl
dec
mov
scas
jns
les
mov
imul
sub
cmpsl
sbb
stos
lahf
shll
add
mov
hlt
lcall
cwtl
stc
push
test
xor
push
push
ret
mov
outsl
lret
xor
jp
adc
sarl
imul
dec
push
pop
mov
lcall
xorl
xorb
lock
and
mov
rcrb
xchg
leave
outsb
sbb
and
sarb
fs
daa
sub
or
xor
fdiv
std
dec
pop
dec
xor
jb
inc
sbb
mov
cmp
pop
xor
mov
adcl
xor
enter
dec
inc
push
icebp
sbb
popf
cmp
aaa
mov
clc
mov
ds
popa
clc
dec
xor
sub
popl
lret
aas
psubusw
cmc
jne
leave
push
shlb
ds
add
jl
sub
cmp
aas
jge
and
add
or
sti
sbb
stos
push
push
in
pop
add
shrl
mov
fs
dec
and
jo
popa
dec
push
fbld
push
test
ja
jg
xchg
jnp
mov
aaa
add
pop
cwtl
imul
testl
sub
push
aad
xchg
bnd
ret
rclb
inc
movsb
xchg
xchg
mov
addr16
add
in
pop
xchg
ds
pusha
mov
jae
lods
cmp
or
push
add
cmp
scas
into
dec
xchg
rolb
dec
push
push
ljmpw
lahf
mov
sbb
test
adc
mov
mov
and
mov
inc
xorl
dec
scas
lods
mov
sub
mov
mov
lds
mov
gs
fnsave
gs
roll
mov
mov
fcomi
xchg
lods
mov
xor
adc
push
dec
jge
add
push
or
dec
ret
es
mov
mov
fbstp
fsubl
add
jl
add
xchg
cmc
push
jnp
mov
out
popf
enter
lahf
pusha
in
insl
shlb
pop
sub
pusha
xor
adc
js
repz
mov
fisubl
hlt
sahf
std
lea
dec
inc
lret
loope
nop
cmp
test
scas
xchg
cld
push
push
outsl
rolb
ljmp
inc
data16
mov
icebp
cwtl
mulb
je
loop
jns
aad
fwait
repz
jno
loope
mov
lds
js
mov
mov
movsl
loope
xchg
cmp
aaa
sub
or
repz
push
xor
sbb
cmp
dec
add
dec
or
dec
pop
add
mov
imul
dec
int
mov
out
shll
inc
inc
insl
icebp
push
repnz
out
xchg
fidivl
loop
je
imul
jns
in
jle
les
xchg
gs
sub
push
jno
sti
jge
jecxz
inc
mov
std
aam
ljmp
inc
push
push
cmp
cmp
jns
mov
inc
jae
es
xchg
mov
or
aad
insl
aad
mov
dec
insl
mov
sbb
les
roll
and
push
push
jge
es
adc
xchg
sub
or
test
push
rorb
aas
shr
das
popa
insb
dec
je
push
popa
cmpsl
hlt
push
inc
inc
sub
test
jl
jbe
cmp
jge
mov
and
xor
outsb
xchg
pop
roll
lcall
test
sub
insb
inc
mov
xlat
push
cmp
sbb
ljmp
or
fisttpl
xlat
loope
dec
mov
nop
add
ds
or
shrb
insb
cmpsb
sub
addr16
jecxz
mov
jg
mov
ret
adc
push
repnz
pop
cmp
sbb
testl
adc
dec
mov
mov
loop
andl
xor
adc
sbb
dec
int3
sub
jns
shr
subb
cmp
push
lds
push
lea
jecxz
test
shlb
imul
aad
and
lahf
repz
leave
loop
andb
dec
xchg
loope
stc
ror
shrb
push
and
sub
push
mov
push
xor
sbb
cmpsb
mov
call
cmpsb
scas
pop
aam
pop
cmp
mov
inc
into
scas
ret
imul
stos
push
aad
in
push
leave
mov
arpl
sbb
mov
daa
enter
xor
mov
cld
push
mull
or
adc
and
mov
push
rclb
and
pop
pop
in
ffree
fstl
add
pop
lock
xchg
shlb
jb
ret
les
out
ja
sbb
inc
pop
cli
sbb
mov
or
dec
test
mov
lock
insb
nop
and
cmp
add
sti
mov
pop
pushl
call
push
sub
sub
fcmovbe
xchg
xor
jae,pt
inc
and
outsl
movsb
cli
cmpsb
fsubs
xchg
jg
shl
stos
adc
cmp
in
xchg
mov
jmp
and
sbb
lods
and
cmc
mov
xchg
stos
aaa
pop
dec
inc
es
scas
mov
aad
xor
xchg
out
cld
std
dec
inc
enter
mov
pop
dec
lods
call
in
adc
leave
movsl
mov
das
xor
push
outsl
and
cmp
aad
jmp
push
cmp
pop
es
insb
mov
sub
rolb
in
int3
out
sbb
lea
movsb
xlat
lock
or
cmp
mov
pop
push
enter
std
adc
sti
test
mov
pop
mov
icebp
jae
and
sub
xor
and
shr
fidivrs
cmp
jl
push
les
dec
sub
loope
int
cmpsl
lock
jp
insb
sub
push
enter
fdivl
popf
aad
add
sub
jge
je
sbb
inc
int
and
lret
add
xor
mov
clc
std
call
loopne
enter
cmpsb
push
and
mov
in
ljmp
mov
daa
jg
and
xor
push
xchg
xor
aas
loopne
addl
or
pop
cwtl
rcl
push
adc
adc
mov
push
cwtl
scas
fsts
push
adc
push
inc
lods
xchg
pusha
mov
mov
fwait
cmp
movsl
pushf
xchg
and
rcrb
mov
lret
data16
mov
imul
addr16
dec
and
jmp
dec
sarl
inc
mov
mov
daa
ds
shrl
add
mov
je
mov
add
popf
ds
mov
xchg
rorb
sbb
add
mov
icebp
in
cmp
adc
mov
mov
mov
popf
push
inc
cmp
jae
mov
add
mov
loope
loopne
cmp
mov
lcall
or
sbb
xor
sbb
in
stos
pop
out
scas
scas
bound
xchg
inc
inc
pop
fldl
jl
aad
orl
pop
dec
pop
frstor
insl
add
jnp
and
pop
lahf
xchg
popf
inc
ss
add
repnz
cs
jo
sbb
cmc
jmp
icebp
test
mov
mov
sbb
test
js
pop
insb
shll
mov
sbb
mov
ret
subb
adc
and
es
inc
icebp
icebp
push
movzbl
loope
dec
pop
sarl
or
insl
bound
jae
enter
mov
push
dec
add
addl
orl
arpl
push
lods
and
neg
pop
cwtl
out
int
push
lock
or
xchg
cmpb
les
sbb
aas
jle
jmp
inc
mov
jae
pop
mov
ret
mov
inc
adc
lcall
inc
or
aaa
sub
inc
stc
add
inc
or
sub
pop
scas
out
pop
js
xor
mov
xchg
inc
jns
cs
jle
jecxz
dec
lods
xchg
scas
fidivrl
mov
sbb
loop
sub
cmpsb
cmp
jno
xchg
mov
dec
add
cs
lock
jp
jle
and
dec
sub
cmp
mov
aaa
lods
inc
mov
out
lcall
nop
scas
mov
adc
xor
addr16
ds
mov
sarl
ficoms
test
dec
fisubrl
sbb
inc
sub
and
out
sbb
mov
mov
mov
movl
movsl
or
insl
sahf
cmp
out
xor
lret
js
ljmp
dec
dec
adc
ret
xchg
dec
dec
jle
jl
push
mov
idivl
cs
adcb
jmp
add
stos
fs
mov
cmp
fcomp
cwtl
ja
and
mov
fildl
jp
dec
xchg
push
js
mov
enter
mov
sbb
cmp
mov
fildll
lret
jno
mov
jecxz
adcl
fs
fmulp
push
and
xchg
push
jp
mov
or
stc
sbb
cli
in
in
fnstenv
nop
das
pop
mov
shl
cmp
loopne
sarl
arpl
push
shrl
fdivr
lret
lock
inc
andb
jmp
shrb
aam
out
mov
into
cmp
test
jl
xchg
vsubps
add
cmp
push
inc
mov
or
int
mov
not
push
in
xchg
mov
xchg
into
daa
mov
mov
or
fidivl
cmp
cld
iret
push
inc
dec
and
sub
cmc
dec
jns
cmp
cld
dec
lock
lret
add
or
les
repz
loop
mov
scas
loopne
insb
movsw
lods
sbb
clc
or
and
mov
xchg
xor
jae
mov
pop
lret
iret
or
lret
stos
cmpsb
and
lret
mov
jnp
mov
sar
jns
cmp
pusha
scas
insb
mov
lock
in
call
stos
in
sbb
add
cld
or
mov
push
mov
dec
cmp
mov
sub
ljmp
aas
mov
pop
pushf
adc
hlt
bound
popf
inc
rolb
out
negb
sti
shll
push
testl
cmp
pushf
mov
mov
jg
jns
jl
add
pop
and
dec
sub
nop
enter
jp
mov
mov
lds
xchg
xor
inc
jp
repnz
negl
sbb
pop
adc
cmp
pop
mov
xor
cmp
out
imul
xor
push
hlt
pop
icebp
and
lock
inc
and
mov
pop
push
lcall
xchg
test
mov
cmp
iret
jmp
pop
cmovb
adc
push
aaa
ds
aam
push
scas
inc
pop
sti
rol
pop
es
mov
repnz
cmp
mov
fs
xlat
dec
iret
xor
jbe
imul
stos
mov
test
mov
ret
mov
add
jne
insb
xchg
cmp
or
add
lock
fs
pop
mov
test
inc
jns
test
stos
add
aad
pop
out
ret
sbb
add
fisttpll
inc
mov
ret
lret
inc
dec
pop
jp
pop
aaa
xor
xchg
mov
shrb
dec
jne
ljmp
popf
mov
andl
loope
add
adc
sbb
mov
and
mov
xchg
fnstcw
insb
cmpsl
stc
leave
adc
loope
mov
xor
lods
mov
bound
ja
mov
mov
pop
aaa
mov
mov
or
in
sti
push
ret
jno
fs
push
cmpsb
add
popa
push
push
jnp
xchg
lcall
mov
imul
or
push
js
adc
adc
mov
in
inc
aad
sbbb
dec
xchg
mov
call
pop
mov
pop
mov
xor
cmp
jmp
jns
inc
sahf
xor
jnp
arpl
mov
pop
stc
fwait
jp
pop
mov
sub
push
cs
test
movsl
push
xchg
je
xchg
inc
movsl
mov
loopne
outsl
add
ret
std
outsb
int3
or
in
xor
or
addb
push
mov
inc
aaa
mov
dec
lahf
popf
adc
cs
or
xchg
scas
sub
sub
test
push
cmpsl
popw
testb
loopne
or
mov
imul
jbe
push
sbb
je
push
lds
insb
jg
lahf
mov
add
aaa
test
mov
js
fnstsw
ret
mov
and
jns
xchg
popa
fwait
add
pop
sbb
mov
aas
insb
cmp
rorb
cmp
stc
mov
subl
adc
jo
and
das
mov
or
xchg
push
jle
inc
mov
cmpsl
cmpsl
mov
cmp
neg
push
pop
movsb
lock
mov
push
sub
je
test
fisubrl
sbb
cmp
jne
jmp
sub
inc
cmc
add
imul
shlb
pop
out
jae
sub
icebp
sbb
jle
sbb
in
xchg
out
jecxz
lret
es
push
inc
outsl
jnp
inc
mov
mov
pop
in
in
xor
stos
ret
or
sbb
jbe
sbb
mov
inc
mov
int3
lods
xchg
sti
icebp
push
pop
cmp
ja
std
je
insb
mov
mov
xchg
or
or
inc
add
xchg
sbb
std
loop
adc
flds
push
repnz
jo
outsb
imul
sbb
inc
pushf
in
test
and
lods
inc
pusha
inc
into
xchg
push
out
das
jns
pop
mov
orb
and
or
pop
cs
std
xchg
jmp
inc
bound
sbb
xorl
jb
mov
test
je
mov
dec
jns
jl
mov
inc
ffreep
rorl
sbb
add
dec
bnd
mov
jae
aad
into
sahf
pop
mov
cmp
jo
out
sbbl
cmp
inc
lods
pop
xor
xor
sti
inc
test
add
add
mov
xchg
jg
push
dec
add
pop
mov
cmpsb
and
xlat
dec
aad
and
lret
and
and
mov
shrl
jmp
lcall
mov
out
push
imul
cmp
ds
jne
shlb
repnz
mov
jne
pop
hlt
xor
jmp
add
cltd
push
push
dec
jle
push
or
out
adc
or
jbe
ret
mov
sub
push
or
insb
push
dec
mov
pop
arpl
pusha
orl
icebp
addr16
mov
mov
iret
or
cli
mov
sbb
int
aam
dec
mov
lods
out
jns
adc
decb
loopne
clc
mov
fisubs
dec
insb
mov
lea
scas
xchg
dec
lret
test
dec
or
cmp
jae
repnz
aad
xor
lea
jecxz
hlt
fmul
cwtl
push
in
mov
and
jb
pop
and
jo
cmp
test
push
lret
test
fsubp
popf
ljmp
push
in
mov
or
cld
adc
popf
mov
cmp
sahf
jecxz
ljmp
or
xchg
xlat
adc
sar
sbb
insb
adc
push
mov
mov
mov
mov
in
fsts
fisttps
inc
xor
out
roll
ret
enter
icebp
or
cmp
lea
pop
rolb
mov
test
jbe
testb
mov
clc
into
cmpsb
push
inc
sub
je
mov
leave
lods
shll
jp
fcomi
popf
or
adc
jae
pop
and
push
ret
dec
das
cmc
ljmp
xchg
std
mov
xor
sub
and
dec
mov
add
fldenv
or
iret
nop
dec
scas
mov
sub
pusha
jl
lret
jae
mov
in
mov
cmc
and
aas
iret
mov
imul
and
xchg
scas
dec
pop
leave
lock
insb
xchg
call
adc
mov
loopne
cmc
jl
js
shll
and
int
test
sti
les
imull
in
cmpsl
loopne
mov
xorl
iret
or
cs
jo
aam
jnp
addl
jno
xor
test
scas
cwtl
inc
mov
popf
movsl
sbb
dec
sbb
dec
call
movsl
sbb
add
and
scas
sub
push
mov
bound
sbb
cld
lahf
cmp
push
stos
xor
push
loopne
cld
xchg
shlb
orb
out
push
adc
sbb
iret
and
jne
lds
pop
rolb
xchg
test
inc
mov
aas
cmp
mov
xchg
mov
pop
pop
pop
fptan
cmpsl
cmp
inc
sarb
pop
add
xchg
xchg
xor
into
lds
and
in
loopne
cmc
mov
jmp
push
xchg
ja
ja
dec
call
mov
gs
jg
ret
pop
xor
scas
lcall
jb
fistps
outsl
ds
mov
push
xchg
movsb
sti
add
pop
mov
jle
lods
push
lods
les
lea
mov
add
cli
popf
xor
xor
sarl
pusha
das
pop
jno
icebp
jmp
shll
lock
addr16
int3
xor
xchg
stos
insl
push
movl
out
mov
aad
jecxz
cmp
xchg
xor
sbb
in
bound
shrl
jne
adc
cmp
mov
pop
jb
add
jecxz
rorl
pop
xchg
imul
into
iret
add
pop
enter
and
imul
xchg
popa
ret
mov
call
movsl
and
fcoml
sbb
push
rcll
mov
or
test
rorl
adc
pop
add
in
cmpsl
and
mov
xlat
int3
push
xchg
push
sub
rcll
dec
inc
cwtl
gs
int
add
jle
or
push
jno
gs
inc
enter
cmp
xor
daa
int3
shrb
pop
xchg
addl
cmc
cltd
cmc
add
xor
xor
mov
mov
or
test
push
cwtl
xchg
shl
push
adc
stos
cltd
mov
aas
inc
dec
incl
xor
pop
xor
or
and
mov
cmp
pop
ret
sti
repz
pop
xor
mov
fs
nop
push
fsubrl
and
pop
nop
ret
subb
jecxz
nop
xchg
jnp
pop
inc
push
mov
std
cmp
out
mov
loop
lahf
pop
mov
add
pop
bnd
add
scas
add
mov
sub
jb
xchg
stos
pop
sub
je
mov
stos
fs
nop
lret
add
in
mov
push
adc
mov
xchg
xchg
mov
sahf
lea
cmp
push
pusha
adc
and
mov
push
addl
out
in
mov
mov
loope
int
call
and
xor
popf
pop
mov
aam
pop
and
pop
insb
fiadds
aaa
repnz
enter
sahf
bound
cmp
or
dec
adc
mov
stos
mov
xor
push
scas
adc
test
ss
test
add
rcll
mov
dec
je
fstp
icebp
outsl
testb
ds
or
mov
adc
frstor
jae
push
mov
ud0
jne
shll
gs
jecxz
mov
or
imul
add
inc
sub
push
add
mov
push
mov
out
lcall
dec
xlat
lret
insl
sbb
jecxz
sti
cmpsl
stc
rcrb
cmc
faddl
jno
lahf
and
xchg
mov
mov
stc
mov
aaa
pop
gs
aam
push
pop
and
push
nop
and
mov
push
mov
mov
mov
push
add
popa
sub
popa
jo
scas
xorl
jnp
lcall
pop
orl
cmp
push
movsb
mov
ja
dec
test
adc
mov
ficoml
inc
in
stos
jmp
xor
dec
nop
sub
xchg
mov
mov
in
mov
sbb
loop
push
es
add
and
aad
je
fsts
in
push
dec
jg
inc
xchg
mov
pop
shrb
rolb
je
icebp
xor
jecxz
and
aas
test
sbb
xor
jbe
push
insl
or
lret
addr16
stos
lods
jge
stc
lods
out
test
sub
or
xorl
test
in
sub
or
mov
push
in
mov
push
cmp
int3
mov
adc
cs
mov
pause
mov
insl
sub
pop
std
mov
adc
popa
pusha
lret
cmp
push
adc
xor
mov
push
dec
lret
xorb
into
adc
or
aas
cmp
mov
jecxz
mov
push
push
in
es
cs
sbb
lock
sbb
pop
nop
movsb
xchg
mov
add
fdivrl
popa
call
je
mov
in
test
adc
and
stos
jp
add
and
and
hlt
fldenv
jns
or
cmp
jecxz
mov
or
idivl
fimuls
loop
insb
into
push
idiv
dec
mov
ljmp
sub
fcomps
push
sti
shl
pop
and
loope
mov
fcompl
xor
inc
addr16
mov
cmp
fidivrl
or
addr16
push
jns
pop
pushf
mov
repz
in
jl
add
loopne
mov
sahf
cmpsb
dec
stos
gs
xchg
xchg
aaa
shlb
mov
mov
and
sub
in
out
dec
dec
push
loopne
jnp
push
cwtl
pop
mov
jne
push
xor
leave
dec
loopne
or
pop
pop
inc
cmc
add
xchg
push
leave
cmp
mov
xchg
leave
jmp
stos
jle
cli
fists
sub
lahf
lock
or
imul
add
test
add
mov
inc
loope
cs
sub
imul
jb
mov
dec
mov
popf
faddl
sbb
xor
jnp
es
cmpsl
sbb
aaa
in
mov
jne
enter
pop
cwtl
jb
movsl
cmp
xchg
add
fcomps
pushf
ja
std
outsb
xlat
aas
add
lahf
or
mov
add
jge
insb
test
mov
outsl
outsb
stc
mov
mov
mov
ret
push
test
cmpb
xor
or
arpl
xchg
mov
mov
das
inc
add
cmp
xchg
sub
xchg
sbb
sbb
add
or
nop
pop
jmp
icebp
fnstenv
xor
xor
pop
dec
sub
fistpl
scas
shlb
and
mov
mov
jp
inc
je
mov
add
cmc
cmpsl
std
inc
pop
scas
daa
and
mov
pop
icebp
pop
push
cmp
add
repz
and
or
mov
test
arpl
push
or
sbb
add
add
inc
cmp
and
pusha
cmp
pop
xor
not
inc
imul
ljmp
mov
xlat
add
xchg
das
mov
psraw
enter
stc
pop
mov
into
sub
loope
sub
push
sbb
int3
out
shrb
mov
mov
add
cmp
xchg
push
inc
aaa
negb
add
bound
xchg
jg
cmpsb
jp
xchg
imul
pop
mov
fcmovb
dec
fistpl
sub
stc
or
das
loope
notb
cmp
and
sbb
adcl
pop
test
lahf
rolb
out
add
cmp
mov
mov
jecxz
rcrb
hlt
lods
or
xchg
faddl
gs
int3
push
mov
push
mov
add
lea
dec
mov
or
push
and
add
add
xchg
xchg
push
inc
int
test
insb
xor
xlat
xchg
int3
add
imul
jmp
fimull
and
imul
dec
jg
xchg
lahf
sbb
adc
lret
xchg
mov
call
push
outsl
cmp
icebp
jle
xchg
push
sbb
mov
jmp
mov
cmc
hlt
js
popa
out
loope
imul
icebp
das
add
stos
pop
add
gs
clc
sarb
mov
pusha
cli
cmp
mov
and
and
shrl
mov
jecxz
aam
mov
sub
xorb
dec
mov
xor
push
in
sub
leave
jae
and
fisubl
stos
loop
inc
cmp
jecxz
push
movsb
into
mov
imul
cwtl
jbe
lret
pop
das
cld
xor
or
mov
jb
cmpl
andl
dec
and
lds
faddl
loop
in
shll
fildll
jmp
xchg
sbb
test
adc
test
or
sub
push
cmp
pop
enter
sti
xchg
je
inc
or
lods
dec
in
jno
jl
mov
stos
dec
arpl
movsb
scas
popf
dec
cwtl
fsubs
and
jl
test
out
fucomi
sub
les
xchg
and
repz
or
inc
in
mov
mov
dec
dec
pop
andb
test
jno
pop
or
fstl
lds
sbb
frstor
enter
imul
insl
pop
shrl
mov
and
mov
mov
mov
mov
stc
icebp
lea
inc
dec
outsl
jge
cmp
xchg
ret
dec
sub
addl
cmp
daa
sti
insb
push
cmp
out
cmp
mov
aas
sub
scas
fs
mov
xchg
aaa
and
pushf
or
mov
fimuls
lret
inc
int
sbb
mov
sbb
lret
movsb
mov
xor
add
lret
add
icebp
jecxz
add
fldcw
stos
sti
stos
xlat
ljmp
mov
mov
push
test
sub
mov
push
add
jae
cld
pop
sbb
adc
flds
sbb
push
dec
xchg
adc
mov
mov
ja
xor
scas
fst
sti
insb
lret
fdivs
cmp
xorl
insl
xchg
stos
mov
sbb
and
lret
out
ret
mov
xchg
inc
sub
xor
mov
pop
cwtl
insb
sbb
lret
dec
lds
sub
sbbb
xchg
pop
mov
arpl
movsb
xchg
pusha
inc
sti
aad
mov
jmp
insb
enter
insl
pop
in
mov
xchg
xchg
dec
loop
adc
inc
push
lea
cs
movsb
push
fistl
les
cmp
or
insb
addr16
pop
pop
jecxz
nop
sub
pop
cli
push
jecxz
adc
psrld
add
cltd
pop
rcl
pushf
nop
mov
inc
fadd
inc
movsl
mov
arpl
in
push
jns
pushf
adc
mov
push
mov
leave
imul
mov
xchg
test
xor
stos
adc
arpl
pop
push
dec
mov
loop
jmp
das
jb
cmp
rcrb
dec
mov
into
jno
imul
mov
mov
xor
pop
and
mov
call
dec
jae
dec
pop
cmpsb
inc
dec
dec
fsub
jmp
rcll
js
cmp
xchg
cmp
mov
jbe
inc
aad
dec
loopne
loope
xchg
mov
pop
pop
in
jp
pop
cmp
loope
es
test
repnz
push
cmpsb
jle
pop
jbe
push
rcrl
shrb
outsl
cmp
sub
sub
mov
or
cmp
mov
sbb
ret
out
insb
push
mov
mov
and
scas
in
les
bound
aaa
aam
inc
or
push
aas
push
ds
push
sub
push
push
andl
xor
dec
pop
les
jl
aad
icebp
clc
mov
inc
jb
rcrl
mov
dec
sbb
push
mov
adcl
mov
inc
lret
lret
sub
push
outsl
mov
cmc
push
out
add
out
mov
insl
cld
pop
cmc
and
loope
lds
pop
mov
scas
sahf
xchg
insb
pusha
mov
inc
inc
sbb
in
cli
mov
sub
fs
push
sbb
roll
and
push
jg
outsl
test
fbstp
push
in
add
ja
push
and
xor
dec
pop
add
mov
fldcw
rep
and
icebp
bound
mov
ret
nop
js
push
int3
xor
fnsave
lods
xchg
mov
js
stos
stc
in
push
mov
pop
cmp
dec
int3
into
adc
sbbb
sbb
cmp
es
out
jmp
imulb
jbe
dec
cmp
and
insb
das
shll
sub
lea
xor
ja
sub
xorb
sub
push
lock
xchg
sbb
sbb
inc
stc
jne
push
mulb
sub
aas
pop
addr16
jmp
ljmp
dec
push
and
pop
cli
rcll
pop
xor
dec
pop
ds
push
xor
sbb
or
stos
inc
mov
xchg
xor
fisubl
ficompl
inc
movsl
jg
dec
mov
mov
xor
fdiv
cmpb
and
clc
test
test
or
inc
mov
call
and
iret
nop
fwait
stos
movsl
sub
adc
popa
sub
outsb
sbb
fsubl
pushf
push
and
mov
bnd
xchg
mov
inc
cmc
pop
jbe
fnstenv
inc
out
outsl
shlb
cmpsb
pop
lods
pop
inc
mov
xor
mov
mov
cltd
lods
jmp
loop
push
sarb
fidivrs
rcrl
mov
push
pop
adc
iret
pusha
jno
cs
or
dec
xchg
sub
dec
mul
test
or
fcompl
aaa
mov
cwtl
int
inc
push
scas
aaa
push
xor
mov
mov
lret
clc
fsubrs
cwtl
aaa
cmp
pop
mov
ss
jnp
lret
pop
punpckhbw
push
mov
ds
inc
cld
xchg
push
fiadds
dec
mov
jo
loop
cltd
nop
cltd
ljmp
push
add
pop
and
push
and
test
dec
bound
outsl
shll
imul
iret
stc
jg
jo
sub
outsl
out
xlat
xor
xchg
lods
xor
repnz
sbb
idivl
out
outsb
xor
adc
lret
or
or
loope
sbb
inc
mov
pop
iret
jnp
push
add
xchg
mov
in
push
bound
out
jo
nop
sub
mov
inc
pop
dec
dec
sti
icebp
push
xchg
inc
aaa
push
dec
inc
jb
or
and
test
sbb
xchg
dec
xor
das
add
mov
pop
pop
popf
mov
aad
and
loope
mov
int3
add
movsl
mov
jmp
mov
lods
divl
jb
adc
and
popa
rorl
mov
push
ja
jl
rcr
adc
push
or
xchg
lock
sub
negb
mov
mov
sub
in
loopne
inc
mov
mov
xchg
lods
fildll
push
xchg
xchg
or
cmp
inc
dec
mov
cmp
mov
int3
xor
shrl
pop
testl
mov
scas
pop
dec
scas
xlat
mov
jg
les
pop
mov
sub
enter
xchg
jge
xor
or
jns
nop
sbb
lods
pop
popa
rclb
scas
scas
dec
imul
mov
sbb
movsl
nop
in
ret
dec
pop
mov
sub
mov
sbb
or
inc
xor
fdivl
mov
fadd
pop
mov
and
hlt
ffreep
xchg
ret
mov
gs
enter
sbb
cmp
xchg
sbb
jmp
cmpsl
xchg
sbb
push
std
es
out
daa
sbb
rcrb
pushf
mov
sub
stos
je
mov
fs
mov
xor
rolb
push
test
in
pusha
add
push
mov
jae
xlat
push
cmpsl
fisubrs
xchg
jbe
mov
aas
addr16
push
imul
iret
mov
mov
sub
mov
sbb
xor
jnp
inc
xchg
inc
fcompl
inc
shrl
xorl
mov
aaa
pop
mov
xor
dec
mov
jg
inc
xor
sahf
or
decl
xchg
dec
or
dec
mov
clc
fisubs
dec
add
mov
sbbb
cmpsl
dec
int3
fidivl
mov
lahf
gs
out
cmp
inc
sub
incl
jnp
xor
xor
sub
pop
jg
xor
sahf
and
mov
jne
scas
cli
jno
cmp
push
sub
mov
out
or
jne
mov
nop
loop
xor
jl
hlt
dec
xchg
mov
and
xor
loope
xchg
sbb
rolb
mov
repnz
mov
xchg
xchg
dec
jne
sahf
int
cli
testl
push
cltd
mov
sbb
shl
jo
fwait
mov
out
out
rcr
xor
cmp
xor
enter
cld
jae
hlt
push
repnz
xorl
push
insb
aad
shrl
repz
mov
sbb
dec
mov
clc
or
insb
inc
mov
lea
fidivrs
ret
shrd
call
dec
xor
loopne
or
rcr
cmpsl
nop
xor
inc
cmovg
dec
subl
pop
mov
jae
rol
jne
cmp
cmp
ret
pop
ret
out
sbb
jecxz
cmc
test
mov
mov
push
ds
pop
jo
test
cwtl
in
xlat
sub
pop
sbb
out
in
out
rcrl
sbb
xor
mov
negl
fwait
negl
aaa
pop
jo
jmp
xchg
sbb
lock
xor
scas
pop
lea
dec
adc
test
jge
jbe
xor
and
pop
push
lods
addr16
mov
jae
mov
lods
jp
pop
cmpsl
push
or
cmp
test
mov
das
sub
cs
or
popa
out
dec
imul
pop
xor
dec
test
subl
out
inc
sahf
push
aaa
and
mov
dec
je
mov
xchg
mov
push
cmp
xor
mov
cmpb
jnp
mov
inc
sbb
jo,pt
stc
call
sbb
out
push
ja
mov
je
xorb
pop
or
jne
pusha
and
pavgb
or
jae
mov
stc
jb
xlat
mov
fistpl
rcl
lods
jae
jns
es
jl
xchg
loope
imul
and
insl
or
je
scas
int
push
fadd
inc
pop
adc
dec
xchg
mov
dec
xor
mov
ljmp
xor
std
xchg
pop
dec
sub
notb
in
inc
pop
push
dec
shll
xor
jns
jle
push
idivl
mov
outsb
ja
imul
sub
ljmp
push
out
pop
js
out
imul
xchg
cli
leave
aad
jbe
lret
les
push
pop
adc
aam
xchg
andb
sub
fsubs
pop
negl
or
adc
xor
or
mov
inc
xchg
pop
sub
bound
fdivs
mov
dec
xchg
mov
in
push
insb
push
incl
adc
cmp
jge
paddsw
xchg
cmp
pop
cli
jecxz
sub
jne
mov
cld
fwait
add
mov
fsubl
ror
scas
fdivrp
shrb
pushf
adc
cmp
out
mov
dec
push
movsb
insl
and
or
es
push
mov
inc
pop
cmpb
add
dec
mov
mov
aad
pop
add
aaa
xchg
xor
add
jge
xchg
gs
scas
or
lea
xor
insb
sub
cld
lret
mov
andl
dec
jp
scas
adcl
pop
popa
aas
ljmp
arpl
aas
sti
mov
mov
or
das
mov
pop
lret
ror
js
xor
std
sub
or
mov
and
dec
mov
movsb
mov
inc
cmp
add
xor
inc
pop
clc
outsb
repnz
or
jmp
sbb
lcall
je
sti
push
sahf
rcrl
aas
aad
mov
sbb
fwait
dec
into
icebp
clc
xlat
xchg
and
mov
pusha
push
push
xor
nop
bound
push
fdivl
push
out
jp
push
lock
xchg
jmp
pop
insb
mov
pop
sbb
pop
das
and
jp
xchg
pusha
mov
mov
imul
mov
push
add
mov
sub
push
jg
adc
call
rorl
and
inc
lea
adc
sub
adc
lods
sbb
cmp
sub
idivl
pop
arpl
cmpb
int
pop
insl
cmp
sub
std
lea
push
dec
loop
xor
sarl
js
fs
in
or
in
xor
sub
jbe
mov
sbb
repnz
clc
aam
daa
gs
push
ds
mov
or
mov
mov
jbe
sbb
dec
in
dec
push
das
xor
or
fwait
stc
sbb
and
and
xchg
cld
enter
mov
lahf
mov
out
ret
dec
cmpsl
sub
lret
lea
jns
pusha
mov
dec
test
dec
jne
mov
test
sbb
push
aad
add
or
rolb
xchg
popa
and
cmp
mov
jmp
add
mov
and
cld
cmp
jg
popf
push
pusha
mov
add
inc
mov
inc
cmc
call
shlb
or
adc
dec
in
xchg
dec
out
incb
xor
inc
inc
adc
jge
xchg
pop
or
imul
icebp
insl
mov
icebp
sbb
and
lahf
mov
pop
push
iret
dec
out
xor
imul
mov
jae
xorl
aad
or
call
call
inc
or
out
adc
push
cmp
cmpsb
pop
push
lret
mov
cmp
inc
push
movsb
cmc
stos
push
add
lds
ss
or
stc
jl
imul
aam
push
xchg
ret
inc
pop
popf
cltd
dec
push
pushf
fistl
fnstenv
cli
jle
jg
pop
jle
std
fnsave
fidivs
dec
push
adc
clc
scas
shll
cmp
lods
push
jbe
mov
mov
arpl
xchg
sbb
out
xor
mov
mov
push
les
jge
adc
cmp
or
out
xchg
cwtl
stos
cmpsl
arpl
test
aaa
sub
test
lahf
std
inc
jno
int
cmpsl
sub
push
pop
push
cmp
add
adc
psrlq
and
je
das
sub
int3
add
push
mov
bound
mov
std
cld
inc
pushf
rorb
nop
insb
pop
cmp
inc
out
push
cmp
lret
lods
das
pop
out
and
add
ret
mov
cs
add
in
sub
adc
pop
add
leave
xchg
test
jl
add
xor
mov
sbb
pop
loop
mov
arpl
call
stc
in
fimuls
hlt
lret
mov
das
jl
notl
daa
or
icebp
jo
push
test
push
test
cli
inc
pop
dec
lea
mov
mov
xor
add
pop
mov
xchg
repz
dec
insl
ss
cmp
outsb
popa
lock
out
xor
pop
mov
rcll
push
mov
sbbb
jns
mull
lret
int
xchg
imul
push
jge
and
jge
cld
add
mov
fst
iret
sbb
mov
int
jbe
jae
jne
push
pop
bound
ret
fwait
sbb
inc
and
dec
int3
cmp
xchg
cmp
lahf
inc
sbbb
dec
add
dec
adc
icebp
or
repz
or
fnstsw
xchg
test
movb
lret
outsl
xchg
stos
psubusw
cmc
roll
jl
or
insb
jecxz
push
dec
jle
sbb
xchg
fcoml
jnp
xchg
movsl
xor
les
insb
jno
push
xchg
mov
ret
cmc
cltd
ljmp
testb
jne
test
imul
xor
mov
js
mov
add
outsb
pop
test
inc
sub
insl
cmp
jmp
rcr
jne
sub
sbb
in
mov
push
cmp
lods
mov
mov
mov
imul
inc
pop
popa
nop
mov
clc
add
test
stos
clc
fbld
sbb
movsl
jecxz
int3
xor
and
inc
mov
adc
test
sti
mov
rcrl
or
lret
outsb
test
repz
popf
cs
inc
add
stos
cmp
dec
movsl
jl
shlb
push
mov
in
mov
fpatan
pop
popa
dec
or
pop
es
out
mov
jecxz
push
mov
stc
out
inc
mov
dec
stos
loop
jns
or
cltd
jge
sbb
inc
sarb
jno
les
leave
fwait
cmpsl
scas
fsubl
dec
and
orl
cmp
jbe
or
mov
mov
cli
jb
mov
mov
movl
push
subl
cmp
xorb
inc
sbb
stos
mov
frstor
mov
dec
cld
xchg
jmp
das
movb
xchg
lods
xor
push
shl
pushf
pop
jmp
insl
add
shrb
aad
pop
imul
mov
sahf
out
xor
mov
or
imul
pop
cmc
sbb
xor
mov
stc
aam
add
sbb
mov
ljmp
lahf
std
pop
xchg
shll
pop
and
in
jl
xor
jae
push
int
fcoms
int3
pop
sbb
mov
sbb
adc
andps
in
cmp
ret
mov
xorl
in
dec
xor
pop
jns
inc
in
pop
stos
aas
jns
jne
inc
ds
inc
data16
mov
ss
mov
add
stc
pushf
imul
sbb
cmp
and
js
shrl
sahf
in
mov
mov
and
cld
adc
xor
or
mov
aam
xor
bound
enter
cmp
jmp
xlat
pop
add
pop
ret
pusha
cmp
jmp
sbb
lret
xchg
mov
cltd
mov
mov
mov
xchg
adc
sti
out
add
pop
mov
mov
das
jl
pop
stos
in
and
adc
xchg
stos
xchg
rdtsc
loope
bound
or
adc
sbb
mov
lock
test
sub
scas
arpl
gs
iret
aas
andb
mov
cmp
loop
fdiv
add
mov
adc
or
insl
stos
gs
or
insb
dec
inc
jae
test
iret
mov
xor
data16
in
sahf
xchg
inc
jecxz
inc
add
mov
push
negl
je
jns
dec
xchg
sub
add
lea
or
aam
cmpb
dec
icebp
cltd
dec
pop
repz
iret
pop
mov
sub
aaa
pop
pushf
aaa
add
push
aas
mov
test
pop
out
adc
inc
or
rorb
outsl
jl
adc
mov
push
dec
mov
outsl
loope
jae
loope
inc
stos
les
sti
jl
sahf
enter
outsb
jne
inc
clts
or
loop
cmc
lock
das
jne
fcmove
inc
data16
xchg
outsl
popa
dec
dec
stc
dec
sub
fnstcw
xor
add
add
arpl
call
add
and
add
ss
push
out
fucomi
and
rorb
ja
adc
jo
in
lods
sbb
ja
pop
scas
ljmp
sub
loopne
pop
xchg
adc
lea
mov
mov
daa
cmpsb
sbb
sbb
inc
push
push
jle
dec
imul
inc
fistpl
dec
mov
push
jl
sbb
cmp
pop
mov
mov
dec
pop
xor
xchg
jmp
mov
filds
rorb
in
inc
lock
push
add
out
add
mov
lods
nop
lds
scas
pop
dec
sahf
pop
sub
xchg
pop
inc
in
lcall
xchg
cmp
push
jg,pn
test
adc
cltd
sbb
mov
cmpsl
inc
test
mov
add
xor
lea
or
push
pushf
repz
mov
push
test
outsl
and
stos
add
sbb
pop
and
mov
dec
leave
shl
push
scas
pop
xor
idiv
rclb
inc
inc
in
lea
push
dec
icebp
pop
sbb
mov
fisubs
mov
in
out
mov
loope
mov
and
sbb
mov
cmp
or
das
xor
in
ljmp
pop
lods
add
jae
data16
dec
test
pop
mov
int
mov
sub
fwait
add
or
mov
pop
jb
add
shlb
dec
aaa
or
inc
inc
shlb
pop
insb
cli
ret
mov
inc
sbb
rolb
and
mov
out
fstp
jns
mov
out
inc
int3
mov
popf
ret
mov
test
test
xchg
mov
jp
or
jne
fbld
adc
enter
mov
je
loop
adc
mov
mov
and
js
mov
lock
push
cmc
sti
add
movsb
xorl
mov
or
mov
and
xor
iret
adc
test
in
in
inc
pop
lcall
hlt
pop
orb
inc
out
jge
cmp
xor
pop
icebp
inc
and
pop
andl
mov
jb
adcl
fisubs
mov
movsl
xchg
xchg
sub
inc
arpl
scas
pop
insl
dec
pushf
cmp
and
adc
xchg
push
addr16
icebp
outsb
xor
add
sti
sbb
xor
dec
sub
push
pop
cli
mov
mov
nop
repz
adc
lahf
movsl
or
mov
fisubs
push
pushf
push
or
adc
leave
adc
mov
cmp
popf
inc
mov
ficompl
mov
xor
jno,pt
int3
sarb
loop
pop
add
lock
mov
push
add
mov
fs
sub
lock
push
rolb
in
adc
icebp
ljmp
sub
or
dec
repz
mov
and
test
push
insb
mov
adc
aaa
jbe
lea
mov
lea
cltd
push
imul
fs
xor
sbb
leave
cmp
js
in
cmp
mov
sbb
call
and
imul
movsl
out
push
ss
push
inc
xchg
pop
add
jns
daa
and
xor
outsl
and
push
mov
lcall
ja
popf
loope
sbb
addr16
arpl
add
mov
incb
sbb
inc
xchg
xor
stc
mov
ret
ja
frstor
lds
xchg
sbb
movl
cld
mov
insl
fwait
mov
testb
xlat
aad
in
mov
mov
je
adc
or
pop
sub
adc
add
in
sub
dec
pushf
sbb
sub
les
sub
les
adc
jle
hlt
loopne
sub
add
mov
int3
mov
mov
push
leave
mov
orl
lcall
scas
dec
ret
mov
add
push
mov
out
mov
lahf
mov
or
pop
bound
outsb
sarb
push
or
rorb
nop
fcmovnb
mov
fadds
jae
xor
mov
out
xor
pop
mov
js
jnp
cmp
push
cmp
popf
aam
movsb
jns
aam
fcomp
xor
in
ss
pop
repnz
mov
movsl
sub
out
int3
arpl
xor
sbb
sti
xchg
lods
mov
dec
mov
pop
aas
imul
cmp
in
repnz
ljmp
loopne
aam
insb
adc
mov
stos
mov
fimull
dec
or
in
loop
xchg
push
pop
pop
lea
loopew
fisttpl
add
gs
add
ret
stc
jmp
inc
pusha
pushw
movsl
jae
jmp
inc
mov
iret
dec
pop
iret
and
sub
mov
pop
ja
and
adc
ret
push
add
add
out
jnp
mov
insl
ljmp
sub
mov
fcoms
xchg
in
test
adc
pop
mov
add
hlt
push
je
xchg
push
dec
in
rcl
mov
push
int3
adc
dec
in
add
dec
sub
imul
js
in
out
or
cmp
mov
dec
ljmp
dec
mov
add
lea
mov
mov
mov
test
or
ds
enter
mov
test
adc
add
pop
icebp
jae
jp
popa
pushf
dec
add
mov
ljmp
or
inc
cmpsl
inc
add
imul
ja
mov
ficoms
xchg
xchg
adc
xor
adc
pop
pop
or
pushl
lock
fcmovu
xchg
fwait
sub
fisubrs
lahf
and
xchg
lahf
sub
push
fdivrs
or
mov
xchg
aas
test
mov
jmp
and
mov
outsl
fmull
push
xor
stc
pop
hlt
test
sbb
mov
inc
and
xchg
hlt
clc
ss
mov
ret
addl
bound
cmp
sbb
insb
imul
ret
push
ljmp
push
mov
dec
cmpl
int3
loope
sbb
test
int3
loopne
dec
jp
shrb
iret
cmp
loop
pop
in
inc
sbb
mov
lock
sub
sub
shr
push
sbb
scas
or
das
mov
or
jnp
xchg
xor
mov
mov
xor
cmp
jmp
cmpsl
pop
in
sbb
sbb
xor
mov
adc
cmp
inc
mov
jne
push
lcall
test
ret
xorl
cmp
xor
inc
or
popa
pop
lret
mov
jmp
xchg
nop
jnp
in
xchg
imul
mov
mov
stc
repnz
xchg
pop
mov
pop
jne
adc
es
in
dec
js
leave
outsb
sub
lcall
push
pop
sarl
leave
mov
sbb
negb
adc
test
outsl
in
or
inc
mov
inc
xor
sbb
fstl
sarb
add
push
shrl
shrl
jb
loope
ljmp
retw
aaa
mov
cs
and
ds
shlb
add
sub
adc
adc
loope
dec
mov
sbb
xor
popa
lds
dec
aaa
fxch
mov
xchg
jle
stos
jle
sub
in
test
movsb
add
lock
cmp
sbb
loop
push
in
loope
and
sub
or
ret
leave
pop
fs
jne
jbe
cmp
adc
call
lods
loop
stc
push
jecxz
jnp
xchg
cmp
push
repz
movsb
push
lret
in
jo
fidivrl
dec
jno
test
andl
fstpt
lds
imul
add
adc
mov
push
repz
xchg
xchg
movsl
or
push
push
sti
mov
fnstcw
inc
cld
xor
mov
pop
and
inc
sbb
sub
and
add
mov
sbb
jae
sbb
and
sbb
sahf
into
xor
mov
pop
mov
sahf
imul
ds
and
cmp
and
aad
std
mov
xchg
addr16
mov
sahf
ja
dec
push
lea
sub
fst
xor
fiaddl
inc
insb
imul
adc
cltd
mov
mov
pop
and
js
mov
stos
jmp
xchg
fwait
jae
mov
in
xor
mov
or
fildll
mov
stc
mov
xor
sbb
mov
ret
cmp
or
add
jg
pop
sbb
add
sub
popf
inc
mov
push
fbstp
or
ret
jbe
push
sbb
mov
sti
ss
jl
jns
ds
inc
fsubrs
and
fs
test
mov
lds
imul
fs
test
xchg
sub
mov
shll
out
out
mov
mov
jo
sbb
jns
mov
js
aaa
loopne
in
sub
inc
ss
adc
imul
mov
add
loop
stc
rol
sub
push
pop
scas
std
repnz
dec
pop
sahf
jne
dec
pop
icebp
add
call
add
inc
adc
xlat
fstps
push
rorl
xor
dec
push
mov
xlat
out
jo
push
loope,pt
iret
push
sbb
cmc
insb
jg
mov
sbb
dec
hlt
les
jbe
ja
loope
push
push
mov
fs
sbb
mov
xor
dec
adcl
mov
lahf
add
mov
mov
pop
xor
push
xor
sub
sub
test
mov
fisttpll
ljmp
imul
dec
fisttps
and
mov
nop
inc
and
adc
and
add
jb
std
ss
add
jnp
pop
dec
std
pop
std
xchg
or
push
xlat
jl
xchg
loope
lods
popf
sbb
mov
jb
and
pop
insb
outsb
ja
fidivs
xchg
push
gs
jbe
cmp
pop
mov
dec
lds
movsb
cmp
pushf
adc
mov
dec
mov
addr16
or
aad
xchg
jge
loopne
adc
lahf
dec
icebp
mov
out
mulb
or
fstps
mov
cmc
add
jo
mov
xchg
out
inc
loope
mov
add
cmp
jecxz
jne
sbb
push
and
lret
cmp
shl
pop
mov
pushf
cld
scas
xchg
popa
shlb
xchg
lcall
nop
sub
lret
mov
inc
sub
imull
cmp
movsb
cmp
mov
mov
xchg
push
imul
sbb
bound
mov
push
mov
jnp
cld
jnp
mov
push
xlat
in
lahf
in
cmp
popa
imul
xchg
push
shll
loop
loop
push
xchg
call
call
stos
xor
das
nop
sbb
or
ret
xor
jno
loopne
pop
xor
sbb
dec
lret
xchg
inc
movsb
ljmp
or
xor
movsb
lret
arpl
mov
inc
push
xchg
rorl
push
mov
mov
adc
inc
jno
or
lods
inc
lahf
mov
mov
dec
inc
das
out
lods
mov
je
or
push
xor
out
popf
push
and
lret
push
mov
pushl
mov
aam
into
add
test
pop
out
cmp
pop
add
xor
mov
add
xchg
adc
sbb
xor
dec
and
es
imul
insb
sbb
mov
xlat
mov
ljmp
pusha
jno
inc
pop
push
inc
push
dec
cmpb
mov
pop
ret
mov
stc
ja
shl
movsl
imul
loopne
rcl
fadd
aaa
jo
cmp
data16
xor
mov
pushf
test
and
and
and
pusha
mov
outsb
mov
cmp
inc
stos
insl
test
dec
cmpsb
adc
sub
push
aaa
pushf
aaa
bound
lds
inc
cmpsb
test
out
or
lret
cmp
mov
or
mov
shl
pop
test
ret
imul
push
xchg
and
jle
nop
lods
out
xchg
hlt
roll
inc
dec
xor
hlt
jb
iret
iret
pop
or
mov
dec
into
adc
push
cmp
sbb
sbb
mov
or
xor
pop
cmp
inc
push
xchg
inc
movsb
inc
rorl
loop
es
cwtl
jg
xlat
fldl
je
outsl
out
add
push
sarl
xchg
adc
sahf
xchg
fiaddl
bound
ficoms
cmp
mov
aad
adc
mov
adc
aaa
inc
nop
push
sbb
js
dec
stc
mov
fdivr
add
test
ds
pop
imul
xor
clc
and
cli
int
out
lods
cmp
xchg
sbb
adc
cmp
xor
add
ss
push
cli
bound
sbbl
xchg
and
push
xchg
fdivs
out
push
pop
das
xchg
aad
fdivs
lods
mov
cmp
jns
mov
movsb
bound
inc
push
test
add
testl
dec
fildl
and
or
loop
xor
sbb
push
mov
iret
leave
push
test
jns
fucomi
xor
inc
dec
fldcw
cmpsb
jp
or
or
mov
cmpsb
cmpsb
getsec
or
xor
mov
cs
jne
mov
pushf
iret
add
lods
mov
je
je
adc
fisubs
aad
fadds
in
pop
xchg
mov
xchg
mov
in
pop
xchg
xor
inc
pop
leave
ljmp
adc
xor
pop
xchg
sub
adc
xchg
dec
or
xchg
sub
popf
jb
xor
cwtl
stos
sub
test
jae
jnp
pop
pop
cld
push
repnz
adc
jge
push
cmpsb
ljmp
xchg
test
lds
les
fucomi
xor
push
call
mov
pop
in
or
pusha
adc
adc
and
mov
dec
xchg
movsb
dec
lret
cmpsb
in
aas
pop
add
cmpsl
cmp
lea
imul
repnz
xchg
push
popa
xchg
mov
fisttpl
test
repnz
lds
mov
jnp
adc
sbb
iret
in
push
lods
pop
dec
incb
or
inc
sbb
nop
ds
or
sub
les
movb
cli
mov
sub
mov
mov
jb
les
mov
rcrl
test
dec
push
and
and
in
dec
inc
mov
movl
xchg
pop
lock
pop
mov
test
addr16
aas
gs
cmp
push
pop
lcall
or
js
push
cwtl
pusha
add
mov
jno
push
cmp
enter
jg
cmpb
roll
int3
xchg
or
pop
nop
jbe
adc
push
outsb
mov
aad
nop
insl
add
pop
lock
lcall
and
inc
push
xchg
mov
pop
cmpsb
jnp
jb
xchg
insb
push
inc
inc
push
mov
js
dec
add
jmp
jmp
xor
movsb
lock
scas
xor
cmp
inc
stos
mov
sbb
sahf
test
jbe
mov
mov
jge
adc
jo
pop
inc
jnp
fs
jnp
sbb
mov
sub
pop
add
inc
test
or
loop
pop
pop
rolb
cmpsb
rcll
adc
add
jg
lret
ja
or
adc
lret
mov
loopne
ficoms
and
nop
ret
xor
fwait
add
mov
inc
fdiv
mov
jnp
pop
enter
xchg
lret
dec
sbb
and
fistl
fisubl
or
sub
push
popa
leave
xchg
pusha
cmp
push
push
jecxz
out
pop
inc
dec
xor
lahf
add
mov
mov
dec
movsl
xchg
aad
sahf
sub
push
mov
pusha
sbb
idivl
mov
imul
and
outsb
jle
xor
xorb
push
test
movsb
mov
popa
sub
repnz
shr
das
xchg
popf
insl
int3
sti
jg
add
mov
inc
fcmovnb
mov
pop
lahf
outsl
mov
dec
in
xchg
pop
and
clc
cmp
add
roll
and
insb
bound
and
cmc
fwait
xchg
lods
shll
mov
pop
lea
sbb
sbb
shlb
dec
dec
and
xchg
mov
ja
sub
jl
push
es
sti
sahf
out
lahf
adc
loop
pop
push
pusha
jo
frstor
outsl
insl
outsb
add
cmp
xchg
pop
les
jns
nop
fmuls
sbbl
xchg
lods
mov
dec
aaa
lea
scas
ljmp
int
movsb
xchg
cltd
mov
in
std
mov
inc
inc
insl
mov
cvtdq2ps
lods
jl
ret
mov
stos
movsl
jmp
cmp
popf
inc
jno
into
xor
xor
push
imul
xchg
push
adc
sub
enter
loopne
push
adc
sub
push
cmp
repnz
clc
cmc
and
out
es
sti
nop
call
dec
mov
cld
lret
and
daa
andl
loope
incl
xor
adc
gs
xchg
cmp
mov
push
fiadds
xchg
xchg
outsl
push
dec
push
mov
inc
and
xor
fldln2
jge
push
adc
jle
cltd
scas
mov
mov
and
inc
or
pop
sarb
insb
aas
mov
pop
jmp
xchg
adc
cmpl
and
xor
jnp
add
jbe
rcll
xlat
sub
add
add
mov
fcomps
jge
pop
xchg
cmc
test
movsl
cmpsl
inc
xor
jmp
ljmp
iret
pop
pop
sub
arpl
jns
jl
dec
lods
out
movsl
mov
test
test
cmp
mov
jno
or
cmp
mov
xor
pop
adc
loope
mov
lret
mov
push
dec
mov
xchg
jbe
popf
xor
into
xchg
hlt
pop
cmp
sub
mov
push
add
out
rorl
cmc
push
stos
jp
fsubs
xchg
sti
outsb
lahf
adc
pop
ljmp
popa
sbb
xchg
mov
sbb
popa
jne
inc
ds
out
sarl
fidivs
jge
cmpsb
jnp
leave
divb
into
out
mov
mov
pusha
lea
adc
aad
fstpl
ds
jecxz
fnstsw
addr16
mov
pushf
gs
pop
sbbl
leave
xchg
call
push
jbe
nop
sbb
adc
mov
outsb
filds
dec
mov
and
dec
push
pop
inc
aad
ficompl
fnstsw
xor
and
mov
das
jmp
shrl
pop
adc
sbb
int3
das
leave
pop
xor
mov
mov
pop
and
in
inc
in
jns
mov
leave
and
clc
rcrl
popf
fcoml
adc
dec
jge
inc
adc
inc
mov
or
and
icebp
iret
cwtl
clc
or
popf
mov
inc
sbb
inc
mov
hlt
ds
cmpsb
add
xor
imul
cltd
insb
xchg
scas
xor
sub
xchg
xchg
in
inc
ret
mov
cmp
test
in
add
lea
data16
les
insb
add
aad
icebp
sbb
lock
enter
in
mov
or
test
in
sbb
xchg
sub
sub
lahf
dec
fsubrp
leave
push
or
jecxz
pushf
nop
xlat
fnstenv
mov
xchg
mov
xchg
ds
or
leave
cltd
xchg
sbb
lcall
xchg
pop
xorb
dec
cmp
xchg
fidivl
sahf
adc
outsb
test
lea
fisttps
push
hlt
aam
mov
fdiv
add
pop
jns
and
arpl
call
jmp
imul
adc
and
cmp
mov
push
imul
adc
adc
adc
dec
ficomps
push
jae
adc
pop
dec
adc
push
push
inc
xchg
jae
scas
pop
aam
adc
out
stos
bound
jg
daa
decl
lret
sbb
mov
push
cmp
into
std
cmc
mov
cmp
testl
not
pop
mov
lds
gs
pop
mov
mov
rclb
mov
fsubrs
fstps
enter
stc
dec
nop
cmp
aad
popf
or
fstl
adc
or
and
fsubrl
movsl
cmpsl
sbb
sbb
and
push
scas
mov
sar
and
sqrtps
adc
lds
add
sbb
sub
add
xchg
push
out
jo
dec
stos
jmp
xchg
xor
add
jns
arpl
jno
dec
outsb
jb
fistl
divl
inc
dec
xchg
dec
adc
iret
adc
adc
into
je
or
repnz
hlt
mov
lret
push
mov
inc
aad
xorl
dec
shrb
mov
cmp
mov
mov
and
mov
popf
roll
inc
mov
addr16
pop
stos
cmp
cltd
sbb
pop
bound
in
cmpsl
aad
cmpsl
pop
mov
sbbl
cwtl
jne
jl
pop
cwtl
sti
jns
rcrl
fldcw
fcompl
dec
loop
xchg
jbe
pop
clc
mov
lock
mov
scas
xor
out
mov
cmp
fisttps
sahf
mov
push
lea
sub
pop
inc
inc
sti
lds
mov
sub
dec
push
test
or
push
cmpsl
pop
imul
xchg
test
dec
mov
push
or
stos
cmpsl
cld
pop
mov
pop
lea
mov
adcl
das
mov
fidivs
mov
dec
dec
adc
sbb
or
test
stc
mov
add
fidivl
adc
cmp
xchg
mov
shlb
in
pushf
jo
push
sub
lods
sbb
mov
mov
dec
mov
daa
inc
outsl
adc
mov
cmp
ljmp
stos
popf
cmc
pop
sbb
dec
incl
add
push
mov
mov
jns
bound
mov
fisubrl
add
pop
pop
out
mov
daa
mov
pushf
xor
aaa
jg
jne
lret
adc
bound
sahf
fs
mov
adc
punpckldq
and
inc
lods
dec
push
push
cmpsl
int
lcall
dec
out
xchg
lods
clc
dec
into
and
and
fisttps
jg
pop
xchg
lcall
rcll
scas
fdivrs
stos
xor
fcomp
into
je
sub
cmp
jecxz
je
pusha
add
pop
cmp
cwtl
mov
popf
sahf
or
mov
loopne
call
pop
add
ret
mov
sbb
call
arpl
lods
inc
js
sti
test
mov
insb
out
mov
addr16
adc
andb
movsb
or
fnstenv
pop
jmp
sub
add
js
mov
or
sub
xchg
negb
ja
in
jbe
sbb
jl
leave
int
xor
add
pushf
ja
repnz
cmp
fildll
add
mov
xchg
dec
les
push
add
and
inc
dec
lahf
mov
cld
inc
dec
jge
stos
movsb
addl
push
dec
mov
mov
mov
and
lcall
mov
fidivl
addl
mov
imul
adc
pushf
jnp
fadds
inc
lret
jo
shll
jle
adc
clc
daa
pop
cmp
jae
rcrb
pop
inc
in
adc
sbb
dec
loopne
fnsave
sbb
aas
lret
out
cli
mov
push
xorb
adc
mov
push
fildll
lods
call
and
and
arpl
rorl
test
cmpsb
add
rorb
clc
mov
cli
test
cmp
mov
mov
lods
stos
push
xchg
adc
dec
int3
cwtl
mov
fs
jno
fdivrs
mov
inc
and
or
xchg
jp
hlt
stos
cmp
loopne
jb
outsl
inc
aaa
popf
lcall
int
jns
xor
sahf
inc
inc
xlat
add
int
push
and
les
xchg
xchg
mov
jle
add
pop
mov
add
movsl
and
shrb
and
shlw
xor
pop
pusha
dec
aam
adc
not
or
sbb
inc
sbbl
xor
icebp
jbe
adc
add
aam
dec
enter
daa
fsubl
cmp
out
test
xor
leave
push
sbb
stos
cmpsb
sub
test
in
or
dec
sti
mov
push
lret
test
push
mov
add
insl
inc
sub
test
hlt
dec
ss
sub
js
cmp
mov
cli
jae
aaa
mov
fistpll
insl
lahf
mov
sbb
adc
push
mov
pop
xchg
mov
repz
movsb
scas
sub
dec
mov
lea
mov
jns
fsub
shll
cmp
sub
stc
rcrl
add
cmp
or
jmp
cmp
outsl
in
jle
sbb
sub
adc
js
fdivrs
cmp
and
aaa
insl
test
and
jnp
inc
loope
lahf
xchg
jmp
jg
mov
and
add
test
andb
aam
xchg
jnp
ljmp
sar
ds
aad
mov
and
pop
or
dec
adc
adc
insl
push
add
fstpl
xchg
dec
out
or
xchg
push
mov
pop
mov
rcl
loopne
fincstp
ljmp
pop
pop
or
sbb
pusha
sbb
jno
inc
pop
call
popa
fwait
decb
xchg
sbb
int
and
push
pop
js
xor
fbstp
and
imul
scas
out
scas
imul
xchg
outsl
int3
sahf
pop
out
jb
scas
fwait
ds
cli
shll
xchg
cmpl
xchg
outsb
lods
jne
in
dec
cmpl
and
mov
std
add
adc
ds
dec
lahf
cld
xchg
sub
dec
push
dec
subb
mov
push
jge
out
cld
ficomps
scas
or
jg
mov
xchg
xchg
adc
or
loopne
into
popa
sub
pop
push
jns
add
xchg
jecxz
pop
push
jp
mov
or
mov
movsb
rorl
ja
les
add
repz
je
jo
insl
aas
add
aaa
loop
out
xor
outsb
in
ljmp
scas
xor
test
stos
inc
mov
or
call
sub
shl
dec
or
pop
or
scas
push
fs
push
and
insb
das
inc
xchg
mov
ret
leave
pop
push
pop
cmp
into
movsb
inc
lret
pop
sub
loopne
cmp
loop
lahf
dec
push
inc
adc
incb
outsb
push
enter
data16
imul
imul
xlat
insb
lds
or
pop
push
pop
and
mov
lods
sub
les
pop
add
adc
mov
jmp
cwtl
repnz
outsb
cwtl
daa
cmpsl
inc
mov
adc
mov
iret
repz
lcall
loop
inc
xor
leave
dec
xor
loop
lods
test
push
out
mov
pop
mov
xchg
out
nop
arpl
fistpll
ror
std
lcall
sub
popa
mov
xchg
ss
iret
stos
push
ljmp
cwtl
nop
or
sbb
out
pop
out
rol
call
jb
push
mov
mov
mov
adc
filds
push
icebp
dec
add
add
dec
add
and
loope
in
pop
push
out
fstpl
push
fcompl
and
jmp
das
push
nop
pop
fwait
mov
out
jg
xor
in
push
sub
sahf
adc
push
add
jmp
hlt
jo
aad
mov
jge
adc
loopne
xchg
and
daa
or
or
or
pusha
adc
pop
mov
cmp
sub
xlat
addb
gs
xor
push
in
and
inc
pop
inc
lods
sbb
jno
push
dec
add
jne,pn
jo
push
dec
stos
xlat
popa
mov
scas
sti
fldcw
jns
addb
test
test
sbb
sahf
xor
lcall
fmuls
xor
mov
mov
jae
mov
pusha
data16
jg
xchg
mov
les
cmp
or
jbe
popf
xor
cmp
insl
adc
xor
ret
or
add
wrmsr
pop
cmp
ds
sarl
xor
rcrb
psllq
inc
es
adc
not
jp
xchg
or
add
lcall
or
push
insb
pop
sub
jbe
push
mov
pop
mov
iret
loopne
adc
push
lret
xor
mov
xlat
jae
in
cmp
sarb
pop
pop
xchg
fidivrl
gs
movsl
mov
add
jecxz
mov
push
fwait
jb
ret
das
adc
call
jo
and
arpl
and
mov
test
loopne
ss
mov
dec
shr
es
jno
or
mov
sub
in
push
mov
arpl
maskmovq
divl
imul
pushf
pop
std
pop
and
leave
mov
imulb
dec
aas
pop
rorl
inc
jo
stos
pop
and
fwait
mov
aad
mov
bnd
outsl
popf
sub
or
jmp
xchg
stos
pop
adc
jle
push
mov
push
stos
push
test
gs
pop
cmp
xchg
and
outsb
int3
aaa
loopne
test
insl
fldenv
or
movsb
stos
out
push
mov
xchg
or
and
mov
push
xor
loope
arpl
test
sbb
adc
pop
test
std
in
or
fs
rcrb
fildl
or
das
push
arpl
pop
mov
cltd
xor
cmp
xor
cmp
popf
mov
inc
inc
xchg
inc
push
cmp
ja
aad
or
sbb
and
push
xchg
into
insl
and
pop
cs
pop
lret
insb
push
xlat
fldcw
jecxz
sub
jg
jnp
icebp
mov
pop
xor
xor
fwait
push
gs
cmp
and
sbb
dec
cwtl
insb
enter
out
js
and
lds
rcrl
pop
jmp
les
xchg
cmp
sti
inc
outsb
insb
orl
xchg
adcl
mov
nop
into
jecxz
inc
enter
pop
add
adc
sti
mov
mov
mov
repnz
or
movsb
sti
pop
push
aas
movsb
adc
stc
int3
or
lods
xchg
sub
add
mov
cmp
add
jb
mov
cmp
in
push
add
push
loope
sub
xchg
sahf
or
out
leave
cmp
ljmp
xor
mov
enter
movsb
outsl
cmp
or
mov
and
into
push
out
or
push
pushf
sub
jno
aad
fistps
repz
and
nop
add
repnz
mov
out
stos
outsl
ja
and
roll
int
jg
jb
movntq
fisubl
add
add
ss
mov
fildll
sub
loopne
in
test
pop
dec
sbb
icebp
inc
test
xchg
in
test
mov
ret
rclb
xchg
or
mov
jbe
shll
lea
imul
cmpsl
cmp
int3
sbbb
in
sbb
dec
jno
pop
adc
xchg
in
or
lretw
adc
push
sub
jns
outsb
aas
pushf
or
inc
push
lods
loope
pop
inc
mov
subps
sub
das
sub
incb
shlb
inc
mov
arpl
das
mov
popa
xor
jecxz
jle
inc
add
adc
jb
ljmp
roll
lcall
fmuls
stc
jecxz
and
stos
lahf
in
xchg
push
loopne
test
fdiv
or
xor
add
adc
aad
jmp
pusha
cmove
xchg
xchg
push
pop
insl
xor
sbb
jge
xor
xor
and
and
inc
inc
cmpsl
add
arpl
into
aam
fadds
rcrl
cld
sbb
mov
inc
push
test
adc
add
xchg
je
pop
test
xchg
jns
cmpl
add
or
jecxz
dec
push
xchg
movsb
loop
adc
clc
xor
dec
mov
cmp
fidivs
dec
call
scas
ljmp
loope
out
sbb
out
add
pop
out
cmp
sub
xor
sub
add
out
add
pop
in
gs
mov
jmp
mov
test
rcrb
jmp
cltd
pop
fsts
cld
add
and
ljmp
cmp
out
mov
jmp
push
idiv
and
pop
inc
push
mov
push
pop
mov
add
je
xor
adc
sti
mov
push
mov
cmp
mov
add
xchg
xor
push
lcall
add
hlt
divb
idiv
cmc
sbb
xlat
jmp
cmp
sub
stc
inc
xchg
cmp
faddl
inc
xchg
aad
icebp
inc
add
popa
mov
xor
mov
adcb
xchg
sbb
ja
add
out
lcall
inc
mov
into
cmp
ds
cmp
and
imul
addl
cmp
mov
arpl
movsl
loopne
pusha
out
dec
xchg
bound
int3
mov
out
fmull
out
and
cltd
ss
mov
fstpt
inc
mov
dec
fwait
popf
inc
cmp
pop
pop
xlat
fistpll
aam
fbld
mov
call
negb
cmp
add
ss
push
fdivl
push
inc
and
rorb
outsb
scas
and
js
nop
push
push
mov
mov
jae
lods
shlb
lods
in
lcall
mov
pop
xor
out
xor
push
xor
push
inc
movsl
adc
jmp
pop
adc
sbb
dec
xor
fstpt
call
fnstenv
sub
std
pop
shrb
pop
hlt
stos
pop
pop
sbb
into
jae
mov
cwtl
mov
incl
pop
je
inc
xchg
and
jo
test
fidivs
cmpsl
push
fildll
addr16
fsubp
scas
dec
dec
lods
mov
xor
xchg
push
testb
mov
repz
sbb
jo
inc
cmp
je
xlat
adc
inc
fisubs
test
out
rcrb
mov
out
out
andl
mov
mov
mov
mov
stos
pop
mov
rcl
cs
outsl
sti
xor
test
mov
mov
out
lahf
repnz
jno
pop
and
xor
sub
jno
je
lea
jecxz
mov
jmp
or
fdivl
into
xor
fucomp
mov
imul
scas
mov
call
call
lea
cmp
insb
call
jl
fdiv
daa
lods
inc
lahf
push
rolb
and
out
xchg
jmp
dec
xor
sbb
mov
xlat
call
ljmp
jl
in
out
mov
sub
stos
push
cli
bound
cmp
mov
add
dec
fdivs
stc
jnp
xor
dec
aaa
xchg
js
adc
enter
cs
call
into
fadds
ljmp
loope
ljmp
cld
popa
add
call
xchg
jp
inc
rolb
mov
adc
aad
movb
movsb
lcall
xchg
or
dec
aam
adc
dec
jge
or
dec
adc
inc
insl
lods
loopne
inc
or
adc
sub
and
mov
subb
stc
pcmpeqb
xchg
das
out
pushf
fistpll
xorb
jae
mov
and
xchg
sahf
jb
pusha
sbb
test
adc
sarl
fwait
and
cwtl
xchg
jno
adc
call
and
mov
and
mov
divl
imul
cmp
mov
adc
ss
aas
xchg
popa
das
daa
xchg
ds
xor
loope
jo
adc
mov
dec
add
notb
cmpsb
mov
outsb
cltd
jg
ss
ss
adc
adc
scas
mov
add
je
add
adc
push
fisubl
xchg
js
ljmp
mov
test
adc
es
dec
scas
scas
push
cmp
rorb
pop
lds
sub
lods
subl
mov
push
add
sub
adc
stos
dec
ss
xchg
cs
das
sub
pop
mov
pop
and
aaa
adc
xchg
jnp
cwtl
mov
rorb
jecxz
adc
adc
add
pop
and
fnstsw
add
inc
add
adc
adc
jnp
cmp
in
repz
jbe
movsb
or
insl
je
inc
es
jno
inc
or
cmp
lcall
test
imul
shlb
addr16
sbb
sub
push
add
jne
pusha
add
add
fs
jecxz
mov
mov
sbb
push
push
loope
push
dec
push
int3
xor
nop
dec
test
sbb
xchg
adc
jnp
push
mov
push
jne
or
pusha
xlat
sub
push
xorl
pop
mov
dec
std
mov
mov
mov
in
sub
jbe
jne
xchg
add
and
push
adc
jb
jnp
sub
add
push
loopne
mov
cs
into
out
ja
stc
pushf
mov
lret
dec
cmp
fldt
sbb
lods
aad
sub
xor
push
dec
cmp
mov
leave
mov
cltd
cwtl
jp
rorb
mov
pop
imul
mov
mov
lcall
mov
mov
adc
xchg
std
shlb
in
icebp
sub
lds
xor
je
ja
ror
ret
cmp
adc
xchg
loopne
aad
sahf
add
lds
adc
loope
shlb
bound
xchg
test
add
rolb
test
pop
push
adc
ss
add
dec
mull
and
fisubl
mov
and
loope
jb
add
insb
add
insl
bound
inc
fs
sbb
xor
lea
and
jne
loopne
xchg
lods
mov
test
std
pop
mov
sahf
shr
pusha
mov
pop
nop
js
outsl
push
xorb
mov
lods
in
mov
icebp
iret
or
add
push
inc
xchg
mov
and
mov
xor
mov
inc
cmpsb
dec
lahf
xchg
cmpsl
in
aas
mov
pop
shl
sarb
inc
dec
mov
pushf
adc
xchg
cmp
add
jle
test
lahf
jnp
pop
call
pop
je
aam
and
lcall
inc
cwtl
inc
pop
js
enter
xcrypt-cfb
cmpsl
and
ss
inc
pop
dec
out
add
cmpsl
mov
pop
inc
jno
gs
popaw
lret
xchg
sbb
stos
add
mov
push
test
xchg
rolb
loop
push
and
push
push
aaa
sbb
dec
add
sub
jne
cmpsl
push
xor
jne,pn
xchg
dec
ss
jno
jbe
test
lahf
ficoms
popf
jg
ss
dec
xchg
push
repz
sub
or
sbb
add
sar
and
inc
push
mov
aaa
xchg
jl
dec
xchg
jle
push
fstpt
sub
lea
cmc
rcrb
pop
test
xlat
ror
mov
arpl
pop
add
mov
mov
sbb
cmp
aas
dec
adc
or
sub
mov
dec
sub
scas
xchg
aaa
sub
in
dec
push
or
stos
sbb
js
xchg
dec
aad
aas
pop
dec
xor
fadds
dec
data16
imul
scas
mov
and
inc
movl
pop
adc
sub
in
or
push
test
scas
inc
sti
sbb
jp
mov
jo
shr
andb
int
xchg
addb
push
lods
dec
mov
stos
pop
lcall
push
cmpsl
add
jg
add
les
shrl
or
cld
push
sub
in
sub
push
ss
xchg
iret
xor
xor
shlb
popa
loopne
mov
sub
add
int
add
ret
stos
mov
hlt
mov
outsl
or
push
test
sub
outsl
out
pop
movsb
jb
call
inc
inc
test
or
mov
mov
mov
mov
aaa
xchg
sub
loope
lods
dec
ja
incl
aam
mov
in
xchg
fnstsw
mov
add
aam
iret
cli
cmc
ss
fidivrl
lods
or
cltd
btc
sbb
test
mov
lret
in
jae
and
cld
shl
push
mov
and
test
mov
jmp
cld
les
mov
adc
cli
ret
xor
daa
out
movb
push
jge
push
inc
dec
sub
subl
xor
cwtl
push
jns
les
inc
sbb
dec
sbb
mov
add
jp
lret
call
rolb
add
imul
xor
ja
daa
sahf
loop
test
ljmp
xor
daa
push
int3
mov
lock
ljmp
popa
jl
andl
loope
sbb
pop
mov
inc
push
adc
xchg
arpl
mov
imul
add
xchg
lods
sub
sbb
jl
out
sbb
mov
imul
xchg
popa
hlt
mov
imul
sub
scas
test
ret
testb
je
dec
out
fidivs
sbb
jl
insb
push
mov
inc
and
in
inc
pop
into
xchg
aaa
inc
adcb
mov
bound
xor
pop
dec
mov
fnsave
js
mov
mov
mov
mov
dec
cltd
sub
popf
rolb
xlat
cmpsb
mov
test
dec
cwtl
popf
pop
push
shlb
fs
sbb
sbb
mov
dec
int
loope
ja
shr
sub
cltd
mov
xor
pop
and
mov
ljmp
ffree
filds
xor
out
inc
push
xchg
jmp
in
and
cmp
mov
fsubrs
test
sub
fisttps
sti
fmulp
fld
inc
out
jo
jecxz
fsubr
push
push
pop
or
push
inc
jecxz
fwait
xor
xchg
pop
fiadds
adc
idivl
popf
mov
divl
push
fs
fs
call
push
into
push
sar
test
xchg
daa
pop
mov
hlt
mov
sti
sbb
mov
popf
cmp
insl
xchg
enter
mov
fcompl
int3
das
push
out
loop
inc
pop
sub
inc
or
mov
mov
lods
in
dec
int
out
xchg
ror
jns
imul
mov
add
fnsave
leave
sldt
push
loop
andb
rcl
push
mov
mov
mov
hlt
stos
sahf
popf
pushl
sub
fistpl
ret
aad
sub
out
mov
cld
stos
insl
lea
dec
out
sti
pop
sarb
fcmovnbe
dec
jbe
test
mov
repnz
jb
in
xchg
test
inc
repz
inc
inc
xlat
cmp
push
cmpsl
pop
push
xchg
out
mov
sti
jb
dec
jmp
mov
ja
mov
cmp
inc
and
shrb
into
cmpb
pushf
lret
shlb
push
movsb
lcall
frstor
cmp
stos
aaa
sub
fsub
xor
lret
je
daa
cld
fcomip
hlt
cmp
sbb
loop
lret
add
and
insl
sbb
pop
test
xor
pop
sbb
mov
icebp
pop
loopne
pop
out
cmp
ret
loopne
dec
test
test
nopl
xor
sbb
push
cmp
jns
sub
inc
pop
mov
push
jne
cmp
into
sub
push
lea
dec
out
cmp
movsb
lds
inc
dec
aas
xchg
or
jb
out
push
rcll
out
mov
into
push
imul
aad
rcr
adc
inc
dec
dec
xchg
pop
hlt
sbb
icebp
inc
imul
leave
pop
inc
add
inc
mov
mov
jns
lahf
adc
ret
adc
mov
mov
jae
push
sbb
xor
js
mov
lret
mov
pop
mov
pushf
fsubs
outsb
push
push
ljmp
bound
mov
or
scas
mov
out
loope
das
add
call
rorb
in
shrb
shll
cmpsb
sub
test
insl
out
mov
push
or
testl
sbb
ret
mov
in
mov
stos
or
dec
test
cli
add
and
aas
xor
or
aaa
sti
add
mov
inc
stc
push
xchg
aad
mov
push
popa
or
xchg
loopne
ficoms
jbe
lret
pop
lods
mov
inc
lret
mov
sub
and
jge
sbb
jge
inc
inc
in
jmp
outsl
gs
je
jbe
or
lods
xchg
hlt
sub
jnp
addr16
mov
inc
ficomps
scas
sub
adc
dec
mov
mov
sbbb
and
fadds
mov
loope
add
add
push
imul
imul
add
mov
in
in
fptan
add
pop
push
xlat
daa
arpl
adc
lret
outsl
mov
adc
cmp
mov
mov
notb
inc
or
cmp
push
fs
mov
push
xchg
add
pop
sahf
bound
fs
or
fwait
xor
adc
dec
or
int3
inc
popa
cmc
movsb
adc
shlb
out
pop
add
insb
and
sbb
xchg
cltd
xor
clc
cmp
dec
aas
loop
adc
and
xor
fistps
mov
adcb
sbb
push
pop
lcall
mov
movsb
jle
add
das
out
xor
mov
insb
es
dec
les
jb
pop
or
inc
lds
sarb
jne
xor
xor
sbb
int3
das
out
jecxz
inc
dec
fiadds
dec
cli
pusha
daa
sarb
dec
lods
rorl
sbb
fdivs
loop
test
movsl
sub
xchg
outsl
mov
jl
int3
xor
push
and
sar
mov
cmp
je
mov
leave
data16
and
or
jmp
lcall
sbb
kmovb
loope
mov
lea
mov
ljmp
adc
iret
jmp
jnp
sub
mov
mov
loop
mov
je
icebp
cmp
adc
dec
push
mov
add
adc
cld
rol
jmp
adc
pop
sub
rorb
cs
push
jbe
mov
cmpsb
dec
ljmp
shlb
aad
dec
inc
rep
jno
adc
rclb
or
cmc
pop
and
push
dec
insb
incb
cmp
addr16
inc
mov
out
xchg
sbb
mov
cwtl
sub
inc
popf
aaa
mov
jae,pn
cmpsl
push
aas
or
add
cmp
lcall
shll
popf
inc
mov
test
ret
push
push
add
outsb
adcb
mov
xor
sbbb
bound
jle
and
add
pop
in
loopne
dec
sar
jmp
test
push
iret
dec
and
aam
decl
in
sub
add
fsubl
mov
sarb
lahf
xchg
mov
mov
repz
jae
cmp
push
mov
sbb
into
aaa
xchg
xchg
push
add
pop
in
fadds
dec
test
insb
arpl
scas
sbbb
and
loop
mov
aas
xor
lahf
lods
nop
aas
sbb
mov
cvtdq2ps
mov
sbb
mov
lea
pop
in
xor
xor
add
dec
xor
mov
jno
jecxz
jnp
icebp
xchg
push
push
mov
iret
test
pop
int
mov
cmc
lret
and
loopne
out
sbb
jbe
cmc
loope
test
adc
jge
or
ss
lret
xor
jecxz
call
add
hlt
mov
lods
mov
mov
xchg
std
shr
aad
cwtl
fdiv
das
dec
push
mov
nop
push
leave
shll
in
into
ltr
in
mov
mov
jnp
push
and
push
jle
in
xor
jno
pop
pavgb
movsl
sbb
cmp
push
pop
mov
fbstp
ret
xor
inc
pop
ficoml
mov
lret
sarl
xor
and
icebp
add
adc
push
scas
shr
outsl
inc
pop
stos
test
retw
leave
icebp
aaa
insl
pop
mov
cmp
in
dec
fbld
es
cmp
in
loope
or
add
sbb
or
fisttpl
mov
imul
inc
mov
sub
xchg
jae
xor
push
push
jbe
jecxz
and
mov
cmp
loopne
aad
xchg
add
inc
cmp
lods
fnstsw
scas
jp
mov
and
movsl
arpl
mov
jb
cltd
call
imul
mov
add
and
mov
leave
sub
adc
push
std
mov
repnz
cmp
cmpsb
cmp
xchg
mov
test
bsr
and
test
adc
es
lods
addr16
cmp
in
jae
or
pop
adc
fmuls
adc
incl
lock
js
or
mov
stc
addr16
cmp
xor
cmp
sbbl
jmp
or
mov
clc
jb
hlt
mov
mov
movsb
jae
js
inc
stos
gs
cmp
inc
ds
sbb
lret
inc
push
bound
cld
test
cmp
add
jp
mov
dec
mov
rolb
dec
subl
push
addl
sub
push
subb
loopne
pushf
inc
push
sbb
push
jle
cmp
fisubs
jo
mov
in
add
lahf
insb
add
xchg
iret
int3
cmp
and
sub
repnz
test
inc
loope
test
inc
dec
insb
and
jge
xchg
into
fcoms
mov
int3
mov
addb
push
incl
out
cmovnp
mov
sarl
push
mov
les
cmp
sar
fs
pop
pop
or
incl
int3
or
push
mov
es
es
pop
pop
inc
push
mov
rorl
ljmp
mov
into
sti
cmp
test
mov
setg
sub
test
outsl
jl
push
mov
inc
add
mov
mov
jno
push
orl
or
cmp
push
aam
lock
rcrb
insb
jg
rcll
push
mov
mov
cwtl
sbb
out
adc
or
mov
out
add
pop
dec
xor
xor
cmp
aaa
adc
dec
sbb
sub
in
iret
fnsave
jg
les
mov
popa
dec
mov
xchg
ss
pusha
sub
int
incl
clc
cld
mov
sti
fistpll
adc
ret
mov
shrl
jnp
jno
ret
fists
pop
stos
ja
xchg
inc
call
and
inc
imul
jp
pushf
sahf
add
dec
cwtl
cmp
popf
mov
and
fidivrl
fwait
es
xor
ret
test
int3
push
adc
xchg
jmp
into
aaa
push
push
or
inc
mov
lods
pushf
and
sbb
call
clc
push
jg
cmp
leave
shr
das
and
jg
cmp
or
xchg
je
add
icebp
and
mov
jge
in
dec
adc
es
cli
jae
loope
pop
sub
adc
jno
xchg
test
xor
sbb
mov
inc
mov
jl
inc
pop
adc
pop
imul
flds
push
js
fcoms
insl
pop
fwait
jae
sti
sbb
push
mov
lret
jo
out
adc
orb
andb
push
push
or
push
jae
cmpsb
mov
mov
or
add
jo
add
xor
js
xor
and
pop
pushf
jbe
fnstsw
test
fdivrl
xor
xchg
push
imul
dec
mov
mov
cmp
lods
cwtl
test
push
push
test
dec
xor
jecxz
insb
lcall
in
pop
movsb
cmpsb
aaa
dec
or
pop
scas
outsl
pop
dec
or
xor
or
lock
dec
pop
aaa
dec
cld
fisttps
dec
mov
cmp
cltd
cs
sahf
movsl
or
mov
add
je
push
push
sbbl
stos
clc
jno
cmpl
mov
nop
add
cltd
inc
test
jns
inc
xchg
loope
outsb
mov
fidivl
push
mov
sti
aas
lret
sti
loopne
ficoms
cs
in
mov
sbb
mov
xor
dec
dec
mov
xchg
jnp
push
jnp
shrb
add
testb
push
sub
jg
cld
sub
pushf
cld
fwait
aaa
inc
dec
jo
mov
iret
ds
add
xor
mov
mov
push
rorl
cld
add
out
add
dec
push
xor
and
xchg
mov
cmp
and
rorb
jmp
cmp
fists
dec
out
sub
xchg
in
ds
push
pmullw
inc
sbb
jo
mov
in
xor
loope
or
mov
repz
sbb
pop
sbb
mov
mov
sbb
push
scas
addb
jmp
jmp
lahf
lcall
in
mov
push
adc
cmp
mov
push
lea
imul
je
dec
or
je
les
aam
xor
add
cmc
cmp
jno
sbb
sub
dec
in
lds
sub
inc
pop
cmp
dec
repz
fsubrl
mov
inc
dec
push
aaa
mov
dec
sahf
cmp
add
adc
cmp
lea
lea
cltd
adc
movsb
stos
stos
lret
out
imul
jmp
call
jnp
pop
pop
inc
lea
out
sbb
data16
dec
mov
push
mov
out
sub
sbb
push
stos
xor
daa
ss
add
pop
shll
jge
clc
xchg
and
leave
jns
fisubl
mov
fnstsw
dec
xlat
lock
push
jnp
shlb
lret
cmp
cmp
mov
imul
add
jne
xor
adc
idivb
frstor
sbb
add
aas
mov
xchg
cmp
cmp
mov
jl
sbb
mov
mov
mov
mov
es
sti
ljmp
fstps
lds
lock
lahf
inc
jge
and
and
mov
inc
add
add
cs
push
push
pop
sbb
mov
outsl
mov
into
and
push
inc
add
push
lea
mov
inc
aad
and
js
jle
jmp
ljmp
scas
mov
or
mov
shrb
mov
xor
mov
fwait
push
hlt
test
js
pop
sbb
arpl
mov
lock
sbb
xchg
ret
jmp
cld
cs
sub
jmp
rcll
das
es
add
pop
lock
in
stc
xor
pop
and
mov
adcb
pop
xchg
neg
insb
ljmp
js
or
rol
cmpsl
and
out
iret
dec
enter
sbb
outsl
test
ja
int
add
push
int3
mov
scas
jae
push
ja
mov
pop
cld
cmp
mov
cmp
das
fld
cwtl
or
mov
in
xor
xlat
cmp
mov
sarl
adc
insb
sahf
icebp
leave
jo
inc
and
add
add
shlb
cmpsl
pop
lahf
in
scas
mov
xchg
sbb
pusha
add
sbbb
jno
jge
pop
aam
pop
cwtl
xchg
sub
or
lea
jecxz
rcrb
pop
xor
cmpsl
into
cmp
pop
push
push
lahf
pop
fs
sbb
and
sbb
push
shl
in
in
mov
inc
jmp
das
and
cmpsb
mov
imul
shrl
es
sti
std
dec
cs
adc
popf
mov
add
ss
cltd
pusha
addb
push
mov
stos
ss
loope
adc
push
subl
inc
bound
imul
cs
jp
pop
fsts
orl
sub
dec
adc
addr16
mov
mov
mov
mov
sarb
pop
daa
cmpsl
in
icebp
lds
add
xchg
or
xchg
pop
inc
test
mov
fists
cmc
cmp
outsb
or
testw
cmp
ss
push
icebp
movsl
xchg
es
cs
push
inc
add
jnp
dec
ljmp
xlat
jns
push
mov
lret
fcmove
fstpt
bound
out
dec
in
shrl
push
xchg
inc
hlt
stc
adc
adc
shrb
repnz
xchg
dec
pop
fidivrs
mov
lret
and
repz
fwait
enter
or
push
das
mov
jg
sub
cmc
inc
sub
xchg
push
pushl
xchg
sub
and
outsl
xchg
fistl
cwtl
jl
push
das
inc
out
xor
push
mov
in
jmp
pop
xchg
cmpb
shl
movsb
dec
cmp
mov
jnp
mov
js
and
lods
pop
lahf
pop
popa
decl
adc
roll
add
js
subb
mov
outsb
push
mov
loop
popa
pop
ret
sbb
mov
ds
fstl
aam
sub
ljmp
adc
test
dec
fwait
push
add
lods
and
push
daa
mov
mov
push
icebp
movsl
push
cmpsl
repz
pusha
and
and
es
xchg
daa
adc
in
in
dec
xchg
test
sahf
in
je
lods
daa
dec
push
pop
mov
nop
mov
cmp
imull
int3
adc
test
and
pop
xor
cmp
or
and
icebp
inc
pop
pop
mov
mov
movsl
scas
mov
nop
push
fsubl
andb
loop
mov
out
jne
xor
sub
movntq
out
cmp
repnz
push
repz
push
popf
sahf
sti
je
je
sbb
xchg
jmp
nop
or
test
addr16
mov
popf
mov
outsl
inc
pop
fisttps
add
sbb
pushf
mov
daa
inc
xlat
push
bound
aaa
adc
stc
popf
ucomiss
lock
rcl
add
enter
sbb
mov
jge
lods
and
call
mov
movsb
stos
ret
daa
and
bound
push
gs
and
dec
mov
and
jb
cwtl
jnp
add
mov
cmc
pop
sahf
repnz
adc
ret
stc
push
lret
mov
mov
mov
insl
or
mov
xor
sbb
jae
mov
mov
in
jl
push
lods
mov
xchg
rcrb
push
insb
mov
jl
js
nop
shlb
mov
xchg
jp
rcl
add
mov
test
push
lea
arpl
dec
call
icebp
jb
xchg
or
mull
andb
hlt
sarl
mov
loopne
ret
xchg
xchg
cmp
sub
or
jl
adc
inc
jo
inc
push
sti
hlt
or
mov
inc
cwtl
push
sbb
mov
sub
arpl
roll
loopnew
mov
js
cmpsl
dec
mov
out
xor
cld
sub
lock
fists
pushf
inc
outsb
xlat
adc
pop
sub
add
or
mov
sbb
dec
shll
movl
imul
outsb
dec
jle
mov
das
adc
jnp
shll
out
nop/reserved
mov
jp
fwait
ljmp
fsubrl
fwait
jns
icebp
cmp
jmp
jae
sbb
sub
sar
fmull
xchg
lcall
out
xor
pop
fcomps
and
jae
test
inc
push
push
lret
test
stos
add
aad
xchg
inc
pop
pushf
jbe
dec
xlat
dec
adc
dec
inc
ret
mov
mov
data16
mov
mov
mov
hlt
test
jg
pop
sub
outsb
jge
sti
jnp
cmp
mov
loope
sub
push
or
fmuls
xchg
ret
leave
mov
mov
aad
inc
mov
inc
dec
jno
fucomip
mov
cmpsb
dec
idivb
insb
sub
jns
addl
mov
push
imul
popf
push
inc
xor
jecxz
dec
sbb
add
push
pop
push
inc
cli
mov
daa
mov
mov
cmp
jno
out
lods
cmp
mov
push
xchg
and
sub
fcompl
rcr
cmc
stc
sub
shll
mov
dec
stc
outsb
mov
and
fwait
mov
or
inc
je
pop
rclb
jae
cmp
gs
repnz
xchg
jecxz
loope
mov
add
in
imul
seta
add
jp
cmp
sbb
lods
xchg
dec
fisttpl
pusha
fsubs
addr16
sub
rclb
mov
pop
or
int3
das
jo
insl
xlat
cmp
dec
int
pusha
mov
enter
pushf
fists
push
nop
rcl
fwait
cmpsl
ret
and
push
adc
popa
loope
inc
jno
fcoml
mov
adc
stos
scas
push
adc
add
ret
sub
jecxz
js
ret
jle
lods
mov
sti
add
inc
and
push
aaa
add
out
add
cmp
xchg
push
icebp
imul
test
icebp
adc
stc
adc
leave
out
jae
ljmp
fldl
js
inc
stc
out
or
mov
lret
test
mov
jge
jbe
sub
scas
sbb
stos
xor
out
pop
push
sbb
enter
or
scas
inc
hlt
push
inc
sbb
dec
mov
dec
xor
data16
mov
shll
dec
scas
jae
mov
add
pushf
repz
ss
aas
fcoms
cs
fcmovb
sbb
flds
mov
out
cmc
or
cwtl
jge
jae
sub
inc
sbb
scas
or
pop
cmp
fucom
inc
sbb
icebp
jmp
sahf
jo
push
int
loop
mov
xchg
cmp
insb
adcb
and
and
test
lea
push
dec
pop
fistps
mov
jecxz
js
sahf
sbb
mov
out
call
inc
rorl
jne
adc
dec
out
imul
aaa
xor
and
daa
and
add
std
jle
pop
int
sub
and
pop
inc
ss
roll
or
loope
mov
jle
loop
ret
mov
and
loopne
cmc
imul
test
and
out
in
add
int
arpl
xor
popf
cmp
in
cli
cmc
hlt
repnz
leave
or
lods
jo
mov
adc
cmpsb
rorb
add
inc
movsb
pop
int
and
out
cltd
data16
lock
pop
push
jae
stos
filds
dec
ds
int
xor
push
push
dec
pop
pusha
insl
loope
shrb
jp
jmp
decb
xchg
xor
arpl
in
inc
das
mov
jbe
pop
idiv
sbb
push
enter
jb
add
daa
add
outsl
fistpl
jno
cld
xchg
sti
orl
mov
lret
je
movsb
mov
push
jl
clc
lahf
inc
cmp
fcompl
outsb
test
sbb
out
jae
cld
imul
rcr
fldenv
adc
mov
cmp
push
inc
cs
movsb
movl
and
ds
ret
es
pop
inc
outsl
js
and
or
into
mov
icebp
cmc
xchg
xlat
mov
xchg
es
and
pop
fs
inc
outsl
sbb
or
punpckldq
dec
add
add
xor
out
or
push
add
into
mov
mov
dec
jge
xchg
sbb
or
enter
add
aas
adc
pop
les
rolb
cmp
gs
mov
and
ds
add
lods
mov
mov
cs
dec
movsl
mov
pop
xchg
mulb
repnz
movb
es
dec
ret
mov
jg
xor
and
push
je
and
into
ret
repz
cli
cmp
inc
gs
iret
adc
fnstsw
or
es
test
push
lahf
xchg
push
out
mov
bound
ret
inc
xchg
xchg
sbb
mov
jg
loope
cmp
inc
stc
mov
mov
mov
cmpsb
out
scas
dec
xchg
mov
mov
cs
dec
jmp
pop
vshufps
pop
jge
pop
aas
jg
push
ds
jo
inc
and
ds
jbe
scas
aas
inc
stos
jo
iret
mov
movsl
sbb
stos
add
xor
add
xchg
je
mov
stos
cmpsb
mov
aas
mov
push
push
xor
lods
nop
rcr
push
ret
add
jge
lods
and
dec
rcl
les
mov
or
mov
dec
push
and
ds
dec
lods
and
adc
popf
mov
js
das
leave
out
dec
sub
aas
jl
fs
fnstcw
out
sahf
pop
inc
leave
lret
push
xchg
ljmp
sbb
fnstsw
ret
test
or
mov
aad
adc
into
daa
pop
xchg
jne
imul
aam
push
jb
pop
ficoml
or
push
loopne
and
scas
dec
je
adc
mov
adc
scas
das
xlat
push
dec
fs
push
stos
dec
or
imul
and
out
push
call
or
outsl
pop
and
in
cmp
test
scas
ret
mov
frstor
jmp
adc
insl
ja
sti
lcall
mov
aas
clc
dec
mov
pop
mov
xchg
dec
pop
shrl
stos
inc
test
rcrl
mov
add
inc
mov
and
scas
pop
jl
push
add
sbb
fistl
jne
mov
fucompp
push
cmp
mov
ja
mov
mov
pop
and
popf
fsubr
ret
rcrl
out
loopne
imul
xor
lret
mov
ss
lret
or
jo
lods
inc
mov
xchg
pop
lds
mov
ss
mov
xor
aaa
dec
stc
mov
add
inc
and
sbb
test
sub
sbb
cmc
cs
and
fucomi
scas
daa
loop
mov
inc
or
test
std
push
js
push
sbb
ds
out
mov
ss
rcl
outsl
inc
push
cld
incl
jle
mov
pop
mov
pop
stc
hlt
xor
dec
jle
sbb
sub
xchg
mov
mov
inc
xorl
pop
sub
push
push
mov
stc
mov
add
xor
nop
lea
ss
pusha
int3
pop
add
adc
in
insb
dec
inc
iret
add
aas
mov
mov
mov
dec
stos
loop
pop
pop
and
sbb
enter
xchg
test
iret
dec
sbb
movsb
ss
icebp
int
dec
nop
and
pop
dec
and
push
imul
xchg
loopne
sub
subb
lcall
faddl
ja
stc
lods
mov
orb
sub
push
mov
xor
repz
je
ss
ds
and
mov
pushf
xabort
mov
pop
mov
mov
and
pop
push
lods
add
mov
mov
and
leave
mov
loopne
xor
adc
lock
je
movsb
lahf
xor
xor
and
out
or
mov
cmp
and
imul
pop
mov
rcrl
enter
inc
lock
test
ja
cmp
push
xor
jge
mov
ds
mov
mov
scas
push
sub
push
imul
ret
xor
mov
scas
mov
fistpl
xor
inc
imulb
mov
push
out
xchg
and
fnstenv
int3
cmp
add
sbb
mov
sbb
adc
test
pop
push
cltd
push
hlt
xor
pop
mov
aaa
adc
fadds
rcrl
inc
stos
imul
pushf
lds
xor
jl
jne
out
mov
pushf
pop
sub
adc
hlt
xchg
jl
aad
cld
adc
mov
cmp
pop
pop
xchg
mov
outsb
nop
sub
leave
pusha
out
adc
inc
mov
leave
std
xchg
insl
lcall
sub
cmp
push
pop
mov
test
cmpsb
addl
adc
cwtl
insl
repz
aas
filds
fadd
je
lea
mov
data16
xchg
push
lea
fldenv
out
in
sub
sub
dec
lods
lea
mov
xchg
rcrl
and
orb
iret
xchg
add
flds
movsl
inc
dec
cwtl
jne
loope
aad
ja
mov
jb
andb
xchg
mov
jnp
push
xorl
inc
push
ret
jg
mov
mov
inc
mov
add
js
mov
add
inc
adc
aaa
mov
xchg
addl
imul
inc
sub
js
clc
add
pop
mov
dec
sub
in
jae
mov
jecxz
push
cmp
or
xor
bound
pop
adc
shll
cwtl
scas
shll
adc
sub
push
xchg
in
jecxz
push
xor
stos
sbb
lods
fdivrs
mov
or
jnp
cmp
fsubp
xchg
rcrb
mov
mov
add
jmp
int
data16
in
sbb
mov
stos
dec
sarb
sbb
or
insb
push
mov
inc
jne
aam
inc
test
inc
xor
xchg
mov
xor
mov
dec
mov
dec
hlt
mov
test
aam
rcrb
adc
mov
aam
pop
jg
add
scas
pusha
mov
mov
push
dec
sub
push
jno
mov
adc
inc
mov
cmpsb
or
insb
push
rep
xor
mov
in
pop
in
fdiv
add
adc
scas
cmpsb
lds
add
imul
mov
mov
mov
dec
nop
ljmp
add
ljmp
push
repz
ret
jg
js
pop
dec
sbb
aaa
pop
add
popf
sarl
jno
push
mov
mov
insl
cmpsb
and
test
movaps
fiadds
lret
inc
push
mov
cmp
inc
add
cli
fs
in
push
rolb
mov
ret
lret
push
cmp
lret
insb
pop
movsb
imul
data16
adc
inc
insl
repz
es
out
call
lods
xchg
lret
lahf
ficoms
pushf
les
and
fsubs
pop
lea
lret
fsubrp
fwait
inc
mov
push
mov
arpl
xor
jmp
cmp
push
repz
lods
add
iret
push
push
dec
cmp
jne
sbb
aam
cmp
mov
pop
divb
jl
cmp
jne
sub
shrl
in
cmp
push
dec
pop
aaa
lret
outsb
inc
lcall
jge
dec
stos
sti
lcall
mov
lods
xchg
adc
in
je
int3
stos
push
and
out
aam
out
pop
add
mov
aas
clc
inc
test
movsb
out
add
in
loopne
ret
push
inc
dec
pop
inc
xchg
ret
cli
repnz
nop
out
xchg
pop
mov
and
jo
sub
mov
mov
mov
insl
sub
add
les
and
and
or
xor
adc
mov
jmp
dec
sbb
sbb
jae
aaa
jb
jo
rclb
mov
lcall
or
xor
and
inc
cmc
dec
push
pop
dec
andb
mov
inc
inc
fldl
push
pop
ss
negb
mov
push
pop
add
pop
pop
out
push
shlb
aaa
leave
andb
fnstenv
shll
jae
push
jns
negl
or
loop
in
fld
pop
xchg
inc
bound
mov
mov
jns
and
arpl
jp
aaa
call
or
lcall
lcall
jg
xchg
mov
cmp
push
movsl
lock
pop
add
xchg
or
out
imulb
sar
jmp
dec
xor
mov
mov
aas
movsb
sahf
pop
sbb
xor
stos
jl
enter
xorb
mov
in
mov
pop
loopne
jo
aam
pop
das
fnsave
int
adcl
fcomi
loope
fstp
jns
add
push
pop
xor
jae
cld
xor
lods
inc
ret
mov
outsb
imul
jp
hlt
add
add
push
ret
push
fimuls
xchg
jbe
pop
test
arpl
out
lret
and
out
xor
cmp
xor
jnp
mov
arpl
push
xor
loop
mov
mov
frstor
mov
pop
or
aaa
jne
data16
or
add
fldcw
inc
jae
and
dec
rolb
lods
lds
sbb
nop
fwait
mov
ss
add
and
xchg
leave
or
pop
xchg
jg
in
movsb
cmc
push
icebp
lea
lcall
test
push
insl
in
mov
pop
shlb
loope
sbb
pop
outsl
pop
inc
xor
fsubrl
cmc
cmp
imul
cmpsl
inc
mov
arpl
add
faddl
push
mov
icebp
mov
ss
pop
xor
push
xchg
sbbb
mov
aad
cmc
mov
sbbb
or
nop
push
fdivrl
pop
cmc
out
and
out
test
pop
and
test
mov
call
fildl
or
push
arpl
je
mov
jo
shl
mov
loope
aaa
movsb
or
dec
xor
or
rcrb
adc
add
outsb
hlt
jle
cld
xchg
cltd
adc
jno
or
dec
xchg
insl
sbb
xchg
jg
call
jg
test
sbb
jne
push
push
in
mov
jecxz
add
push
addr16
add
mov
std
xchg
push
cmc
mov
sbb
in
xlat
cmpsb
push
jmp
xlat
pop
roll
inc
mov
mov
xlat
inc
std
push
sub
dec
faddp
cmp
cmp
pop
dec
mov
jo
das
dec
inc
inc
push
inc
call
adcb
xchg
xchg
enter
xchg
pushf
ret
loopne
dec
adc
xchg
stos
mov
push
in
mov
pop
mov
sub
mov
push
sbb
popf
sbb
mov
mov
andb
jp
or
fnstenv
pop
mov
mov
sbb
pop
sbb
lretw
xor
jae
pop
sub
add
inc
int3
dec
and
sub
and
mov
jg
push
fisubl
test
fdivl
ficompl
rclb
lods
sbb
jg
ret
int3
sbb
push
pop
mov
and
jle
mov
xchg
aad
and
js
mov
dec
fstpl
push
mov
jne
lods
jmp
and
int3
cmp
fwait
xor
cmp
xchg
jb
push
push
popf
pop
cmpsl
mov
mov
pusha
sub
push
pop
or
mov
mov
xor
add
jno
or
or
mov
fisttpl
mov
std
cmp
fists
dec
mov
pop
mov
in
das
daa
push
xlat
adc
push
cmp
lcall
mov
inc
mov
out
rclb
jecxz
and
aad
xchg
or
cwtl
fs
dec
faddl
dec
adc
adc
mov
loopne
fidivrs
lds
or
incb
fsubr
jae
jecxz
mov
dec
xchg
cmp
fisubrl
or
inc
inc
test
movnti
sbb
dec
cmp
and
add
lcall
rolb
push
push
cmp
sub
icebp
xor
xchg
cmc
add
insl
sbb
mov
int3
mov
test
rolb
or
ljmp
cmp
sbb
clc
out
mov
repnz
adcb
or
mov
xor
addr16
ljmp
xchg
ljmp
stc
add
outsb
gs
pop
aad
in
xlat
inc
data16
std
incl
cmp
adcb
addb
mov
and
jge
add
inc
jle
push
out
hlt
dec
pusha
aas
iret
dec
adc
mov
aam
sbb
mov
jp
scas
sahf
data16
pop
xchg
pusha
mov
mov
pushf
mov
and
int3
fnstsw
pop
mov
mov
nop
pop
xor
mov
and
das
je
lea
cwtl
popa
inc
ljmp
fidivrl
push
and
pushf
pop
mov
mov
cwtl
xchg
in
jmp
cli
enter
adc
xchg
mov
xorb
lods
xchg
ljmp
fsts
pop
push
lcall
mov
or
cmp
pop
js
ffreep
pop
xor
or
cltd
outsl
fdiv
stos
xchg
sbb
xchg
lock
insl
sub
stos
inc
xorb
mul
xchg
fcmovu
xchg
roll
pushl
push
insb
cmp
sub
xchg
out
add
or
mov
adc
mov
pushf
in
mov
mov
sbb
int3
jmp
stos
fsubrs
leave
sub
inc
ja
cwtl
in
aas
cmp
xor
and
leave
sub
ror
hlt
syscall
sahf
adc
sarb
push
sti
push
imul
lret
nop
sbb
cmp
sti
loop
je
test
es
sub
mov
outsl
adc
cli
xchg
adc
inc
cs
inc
or
fistl
fwait
push
repnz
cmpsl
push
add
xor
mov
xchg
adcb
jae
add
cwtl
mov
aad
pop
aam
les
fcmovnb
rcll
into
push
dec
stos
sbb
cmp
mov
pop
adc
jnp
mov
jae
inc
out
ret
les
xchg
push
xor
inc
bound
or
cmpb
shlb
inc
loope
xor
pusha
js
inc
cmpsl
dec
stos
popf
mov
jg
mov
iret
popf
xlat
pushl
mov
repnz
xlat
cld
inc
test
je
and
mov
sub
dec
mov
in
pop
xor
jne
dec
lahf
and
cmc
insb
mov
cld
shlb
inc
mov
ret
mov
fbld
cmp
loope
push
ja
adc
pop
pop
mov
add
scas
sbb
push
andl
inc
xchg
cmc
insl
adc
dec
outsb
daa
loope
loopne
enter
iret
or
pop
jno
test
movsl
stos
ficomps
pop
xchg
push
mov
jnp
push
mov
mov
adc
es
in
dec
jo
aaa
inc
pop
sbb
mov
repz
out
jo
fwait
xorb
xor
jg
adc
subb
lods
out
out
aas
ljmp
andl
mov
in
sub
fstpt
outsl
push
inc
aas
imul
loop
dec
fnstcw
push
jbe
in
lcall
xor
pop
sbb
es
leave
push
sub
xchg
dec
stos
loop
add
push
sar
mov
mov
push
xchg
inc
pusha
stos
jne
pop
negb
cmpsl
out
pop
pop
call
xor
cltd
cmp
mov
popa
cmp
stos
and
and
call
fwait
mov
mov
je
jle
adc
pop
dec
mov
pop
push
aaa
or
xchg
scas
sti
xchg
dec
mov
add
mov
imul
fcmovne
test
scas
lcall
sbb
inc
dec
sub
ds
xor
std
mov
jno
pop
pop
sub
add
sbb
jecxz
jne
int
sbb
push
inc
ret
cwtl
or
cmp
inc
pop
loop
inc
cmp
cmp
xchg
mov
adc
cmpsl
leave
enter
imul
cmp
lret
xor
insb
sbb
push
ss
pop
pop
mov
pop
xor
in
jmp
push
sub
jne
js
xor
fiadds
jmp
in
push
scas
imul
xchg
dec
jns
mov
hlt
inc
cmp
xlat
dec
testl
cmp
into
test
test
test
dec
pop
or
popf
cmpb
pop
cld
cmp
inc
ja
movq
xor
in
mov
mov
js
insb
fs
xchg
mov
lds
mov
and
jnp
pushf
jl
cmp
inc
loope
add
fcompl
ss
mov
sahf
mov
xchg
push
xchg
ret
sar
icebp
adc
pop
jnp
adc
xchg
pushl
cmp
cmp
adc
sbb
inc
movsl
dec
or
int3
xor
das
adc
dec
lds
idivl
and
decl
test
ficomps
sbb
daa
jnp
and
cs
dec
push
fisttpll
add
lods
inc
push
pop
int3
pop
mov
mov
xchg
push
mov
loopne
mov
enter
das
or
cld
lods
mov
out
mov
mov
cli
xor
fcmovu
shlb
popa
nop
cwtl
mov
test
jne
xor
mov
dec
xor
bound
popf
sbb
or
das
scas
rcr
pop
mov
sbb
xor
fcoms
mov
pop
push
jle
cs
sub
mov
xchg
mov
or
enter
aad
in
jbe
rol
rclb
call
add
xor
mov
in
adc
lea
mov
sbb
into
adc
inc
pusha
mov
subl
shll
mov
inc
lahf
mov
cmp
shr
mov
xchg
xor
cmpsb
and
xchg
test
and
pop
dec
adc
or
jmp
inc
jae
js
scas
dec
xchg
ret
adc
xchg
push
cltd
shlb
xchg
inc
or
jmp
dec
sub
popf
inc
xchg
lahf
xor
test
push
push
out
jnp
lods
adc
mov
push
cmpb
cwtl
mov
or
icebp
dec
or
and
arpl
popf
xor
jmp
ret
jmp
out
and
jg
repz
or
jbe
fbstp
push
inc
push
adc
and
fistpl
sub
insl
mov
xchg
inc
and
jbe
cmp
insl
stos
xchg
pop
addr16
dec
sub
imul
dec
inc
test
xchg
mov
dec
jns
push
movsw
test
add
test
fldenv
clc
add
nop
pop
pushl
or
lret
push
pop
popf
jecxz
fwait
lahf
jl
inc
pop
add
push
lahf
icebp
popa
push
lods
jl
enter
out
and
clc
insl
int3
cmpl
sbb
sbb
ja
push
sahf
mov
push
xor
add
inc
adc
aam
aad
dec
cmp
lea
cmp
xchg
xchg
inc
std
push
mov
push
cmp
lcall
stc
lods
mov
loop
test
ljmp
cltd
repnz
sub
pop
repnz
test
lahf
in
ret
mov
cmp
push
out
into
testb
or
add
jg
arpl
aaa
test
pop
xor
dec
sbb
mov
hlt
and
outsl
out
mov
lret
je
inc
lahf
sub
sbb
stc
push
imul
pusha
lcall
or
xor
pop
out
adc
imul
inc
jge
sbb
repz
inc
mov
xchg
popa
arpl
into
pop
cli
pop
scas
ja
mov
test
stc
push
push
aam
lods
and
adc
in
jg
leave
sahf
pusha
mov
stos
imul
aas
and
or
push
jo
sub
nop
popa
jns
pushf
addl
push
sbb
fsub
outsl
outsb
mov
sbb
in
sti
add
int
mov
mov
jg
sahf
dec
push
xchg
bound
pop
es
jns
add
jb
loopne
mov
test
int
shrb
jne
stos
fildl
and
cmp
and
movsb
into
jae
test
lds
pusha
and
pop
fstp
pushfw
add
adc
lods
mov
mov
ds
arpl
fmull
shlb
cmpsl
pop
xchg
pushf
jo,pt
xchg
or
pusha
mov
cs
out
pop
lods
and
inc
mov
jns
loop
shlb
push
mov
ja
leave
inc
pop
mov
jne
pop
add
cld
push
adc
dec
dec
lret
add
sub
jmp
je
sahf
test
xlat
dec
loopne
shl
jnp
jecxz
inc
notb
lods
jns
sub
sub
cld
insb
sti
sub
sbb
mov
jne
dec
push
mov
lods
ja
out
jp
xchg
push
xor
int
add
sbb
xor
gs
cltd
dec
xlat
mov
push
pop
into
add
mov
sub
jns
add
aas
cmp
inc
xchg
decb
jb
subb
push
jecxz
cli
jl
into
ja
popf
movsb
jns
push
and
sarl
cwtl
ret
loope
and
lcall
lret
add
and
lods
in
cmp
scas
imulb
and
jb
lock
adc
test
je
pop
shr
test
aas
fs
int3
cmpsb
cmc
rorl
cwtl
inc
xor
aad
out
insl
add
fdivp
aaa
lods
mov
jbe
cmc
test
add
enter
push
test
sbb
add
cli
out
pusha
subl
fidivrl
mov
int3
lahf
adcl
insl
fucom
int3
in
pop
xchg
sbb
les
add
ret
daa
adcb
sub
mov
aaa
dec
mov
icebp
ret
jae
sahf
xchg
xor
or
adc
arpl
out
sbb
outsl
mov
test
xchg
cli
add
jg
dec
out
loopew
push
stc
lret
movsb
fidivl
dec
js
dec
insb
dec
insb
jo
ret
xchg
sahf
mov
lods
sarl
xor
jl
mov
push
sub
jge
or
movsl
aaa
insl
mov
cmpsb
cmpsl
int
cmp
icebp
add
mov
mov
std
pop
stc
pop
sahf
mov
add
je
jl
mov
test
pop
and
mov
insb
fimuls
das
data16
mov
inc
pushf
jnp
jg
test
ljmp
ljmp
mov
pop
mov
in
out
inc
movsb
ret
mov
movsb
lcall
sub
imul
nop
ljmp
push
insb
inc
or
popf
xchg
cs
dec
stos
popa
add
adc
mov
pop
sbbb
scas
push
loope
add
insb
sub
jp
pop
cwtl
or
push
call
dec
shll
outsl
test
xchg
jnp
sub
sub
imul
and
cmp
incl
cs
push
cmp
xchg
mov
iret
mov
cmp
aas
dec
pop
push
inc
or
add
ja
cmpsl
fdivrs
jnp
cmp
mov
test
or
adc
add
pop
addb
xor
mov
inc
jecxz
mov
adc
mov
sbb
push
jnp
aam
movsb
xor
daa
mov
inc
jb
inc
lcall
fists
sbb
dec
sbb
mov
testb
adc
cmp
orb
sub
jo,pt
nop
enter
fwait
iret
push
mov
out
idivl
aas
adc
adc
xchg
daa
inc
add
mov
call
dec
sbb
push
inc
or
in
pop
dec
dec
or
ficomps
scas
sbb
dec
cwtl
js
clc
xchg
lsl
divb
ret
test
jge
xor
cmp
cmp
mov
es
rcr
shlb
jl
push
or
lahf
dec
xlat
ret
out
xor
out
add
xchg
jg
test
icebp
rcrl
jae
mov
mov
add
pop
test
mov
movsl
mov
adc
cwtl
jo
or
fisubs
add
popa
sub
and
jns
in
mov
les
xchg
xchg
mov
and
and
mov
cmp
loopne
movsb
jge
sub
outsl
mov
mov
js
mov
cmpb
fwait
pop
lret
or
inc
cwtl
test
sbb
aas
cld
inc
xor
leave
jo
adc
jae
jmp
cwtl
pop
test
ja
add
mov
xchg
ljmp
sti
or
mov
mov
wbinvd
push
and
cmp
fdivp
and
fadd
jmp
inc
stc
inc
cmp
lds
test
cltd
inc
mov
or
cmp
fxch
and
inc
ss
mov
mov
xor
pushf
ja
out
pop
mov
adc
nop
ret
mov
rolb
or
aam
push
out
fsubrl
cmc
jae
mov
pushf
mov
sti
mov
clc
mov
lea
lret
insb
outsb
push
popa
stos
stc
push
out
ljmp
iret
xchg
test
mov
cmpsb
gs
sub
dec
sbb
movups
and
jle
lret
mov
test
lock
outsb
cmpsl
push
sbb
sarl
daa
mov
lods
jns
out
out
jns
mov
and
push
mov
jnp
cmc
ficompl
cmp
pop
popf
or
xor
jns
es
mov
add
in
sub
sbb
cli
iret
inc
pshufw
cmp
jge
mov
das
cmpsb
ss
jecxz
add
jb
push
xor
xchg
call
pop
es
mov
pop
loope
les
sahf
aad
icebp
add
jnp
leave
sbb
mov
rorl
hlt
and
mov
cmp
int3
shlb
out
adc
sub
mov
loope,pt
push
int
jb
ss
out
lret
and
mov
xchg
or
or
js
insl
sti
fstpl
clc
mov
mov
mov
mov
mov
movsb
sbb
push
push
sub
mov
rdmsr
scas
sbb
sbb
in
mov
out
push
mov
or
repnz
inc
sbb
scas
or
adc
mov
test
inc
dec
push
int
mov
mov
mull
adc
or
mov
and
jne
enter
mov
insl
or
mov
pop
sbb
ss
outsb
ret
movsb
rcr
loop
push
loope
mov
mov
mov
andb
jae
fldt
cltd
adc
sbb
es
loope
sbb
mov
dec
mov
mov
fs
not
sahf
inc
xchg
xor
inc
jp
adc
lods
jae
lret
mov
adc
xchg
ja
push
imul
in
or
cmp
ss
aad
fistps
and
in
cmp
aas
add
leave
dec
xor
jae
sbb
mov
jo
rcrb
aaa
mov
repz
shll
cmpsl
push
loope
pop
xchg
push
movl
dec
in
and
push
add
push
cwtl
ss
ljmp
mov
pop
imul
jmp
pop
icebp
fmulp
xchg
fsubrl
mov
fildl
fsubr
sub
jge
and
data16
out
or
xchg
rcl
mov
pop
mov
jecxz
aam
pop
lcall
out
shrb
divl
mov
xchg
jp
pusha
pop
cmp
lods
popf
divl
insl
repnz
orl
sbb
lcall
add
mov
fimuls
adc
cwtl
push
add
mov
add
scas
adc
jnp
or
fldt
push
jne
cmp
icebp
mov
dec
jno
aad
xor
insb
sub
mov
mov
pushf
jmp
jns
pop
mov
xchg
jbe
lcall
push
jnp
daa
sahf
pusha
lods
jmp
push
mov
xor
mov
sbb
call
nop
xchg
pop
lea
sub
xchg
pop
xchg
mov
int
je
cli
mov
daa
sbb
mov
dec
imul
mov
cmp
mov
jge
mov
xor
jb
dec
out
fnsave
pop
ret
inc
fstl
add
ds
jns
jns
xor
mov
outsl
pop
in
xor
push
call
int3
addr16
fnsave
fs
mov
push
jp
add
movsb
adc
test
xlat
jp
add
cmp
out
sarl
add
shll
cmpsb
add
sub
pushl
movl
iret
inc
add
jb
jmp
or
sbb
mov
call
dec
adc
pop
inc
popa
sub
shll
adc
outsl
jbe
mov
stos
outsb
stc
xchg
adcl
xchg
or
in
sub
adc
mov
fidivs
stos
mov
xor
and
adc
pusha
paddusw
dec
push
fwait
rol
hlt
in
mov
add
out
mov
xchg
sub
adc
mov
lret
add
push
jb
push
and
repz
cltd
cmpsb
xlat
inc
decl
int3
scas
je
outsl
adc
jbe
adc
add
pop
in
lods
ljmp
mov
int3
fdivrl
ret
fdivl
push
stc
in
addr16
jae
mov
push
loope
hlt
aaa
repnz
adc
icebp
test
fs
xchg
xchg
push
movsl
das
push
fs
movq
pop
or
movsb
dec
data16
lahf
or
fwait
push
pushf
insb
ss
lret
inc
add
ficoml
push
cmp
fcmovu
xchg
test
cmp
push
cmpsb
cmp
pusha
mov
jmp
jno
rol
cmp
pop
cmp
xchg
imul
leave
test
push
push
xor
adc
jnp
mov
out
xchg
lods
push
loopne
cmpsl
cmp
xor
push
mov
adc
pop
and
dec
mov
mov
sub
pop
push
arpl
or
andl
sub
jmp
divl
dec
mov
lods
pop
inc
sbb
repz
xchg
int3
push
imul
pop
and
repz
jb
in
fdivrs
fimull
pop
sbb
push
or
mov
adc
cld
add
cmp
push
repz
out
cld
dec
and
rol
sub
xchg
sti
cli
ds
int
lods
xchg
js
mov
or
mov
in
push
cmp
fsubl
dec
and
mov
mov
insb
mov
mov
sub
fucomi
adc
push
sub
mov
lea
dec
test
cmp
add
int3
sbb
insb
shlb
rcl
jge
dec
out
stos
int
mov
imul
jne
push
cmp
inc
insb
inc
and
mov
test
sbb
xor
outsb
mov
cmp
pop
mov
adc
lcall
mov
ffreep
jne
jmp
inc
rorl
fildl
loope,pt
lods
push
jl
mov
aaa
xchg
pop
pop
imul
scas
shll
jbe
jnp
push
pop
test
insl
call
fiadds
test
in
push
and
fs
popa
gs
idiv
cmpsb
sbbb
or
jmp
mov
mov
push
push
mov
push
push
adc
aad
test
xchg
jle
mov
sub
mov
inc
sahf
cwtl
imul
in
pop
and
xchg
mov
test
out
subl
and
inc
pop
gs
notb
xlat
adc
rorb
sbb
insb
test
movd
push
out
inc
in
shll
mov
push
mov
mov
int3
nop
jnp
out
mov
push
ret
or
jbe
fsub
jl
dec
fsubr
pusha
lea
shlb
push
rorl
push
mov
cs
test
cld
push
mov
movsb
jb
les
xor
cmp
out
push
jge
shll
mov
xor
pop
xlat
icebp
and
cltd
and
nop
scas
ss
xchg
bound
lret
out
mov
loope
lahf
in
fs
mov
mov
sub
mov
jnp
add
in
mov
invd
pop
xor
jl
std
mov
lret
in
cmp
arpl
push
push
pop
sbb
pop
sbb
inc
xchg
data16
out
std
and
sarl
rolb
jne
mov
inc
mov
cs
adc
add
mulb
xchg
inc
jg
repz
mov
mov
enter
mov
out
insl
or
outsb
or
xorl
jmp
call
xchg
test
loopne
icebp
push
es
call
xchg
adc
push
xor
insb
xchg
outsb
stos
or
xchg
inc
in
cmp
and
ljmp
rorl
sub
out
les
fisubl
daa
scas
or
insb
sbb
insb
jmp
xchg
mov
arpl
lods
in
subb
jb
pop
lcall
jo
adcl
loop
stos
cmp
insb
jns
inc
adc
sbb
dec
sub
test
addr16
ss
pop
xchg
push
loopne
ja
push
pop
leave
cmpsl
mov
mov
imul
jb
imul
inc
test
cmp
cli
rcr
cwtl
in
push
push
movb
xor
jp
lock
arpl
mov
jp
aas
int
add
mov
movsl
mov
icebp
fnstcw
repz
cs
adc
adc
ficoml
push
and
and
not
cs
xchg
jl
push
xchg
stos
aaa
mov
dec
xor
test
push
and
arpl
jmp
push
pushf
sahf
cld
or
push
adc
mov
pop
lock
jb
and
shrl
loopne
cmc
push
test
pushf
in
xor
test
xor
mov
adc
push
push
fwait
push
or
sub
scas
cs
or
jnp
fwait
add
sbb
sbb
add
ds
sti
js
cmp
xlat
loope
fucomi
xor
mov
mov
mov
out
in
nop
jmp
dec
jl
mov
outsl
mov
jge
jmp
fmuls
popl
push
mov
out
jmp
add
cwtl
shll
movsl
dec
sub
stc
outsb
mov
lcall
inc
and
inc
iret
mul
sbb
in
and
jmp
daa
sti
and
test
and
xor
ss
iret
xchg
stos
repnz
pushf
lret
push
lea
or
push
ds
mov
andb
sbb
arpl
cmc
in
ss
xchg
aad
das
data16
adc
mov
cmp
out
enter
mov
fsubr
shrl
jne
repz
mov
or
adc
ja
xchg
jns
aas
jno
sbbl
adc
adc
sar
outsb
stc
arpl
mov
iret
add
out
fwait
clc
or
ds
jmp
mov
inc
fisubrl
dec
push
inc
cld
sbb
xchg
fsubs
xor
bound
mov
sub
dec
gs
clc
inc
or
dec
and
call
sbb
add
dec
in
icebp
jmp
fsts
pop
jns
pop
popa
std
cmovs
je
out
mov
or
repz
mov
aas
push
fldenv
jp
roll
sub
leave
inc
test
push
push
cmp
sbb
icebp
in
imull
xchg
into
push
inc
stc
out
adc
jge
cmp
mov
inc
rclb
mov
push
sub
or
into
jp
xor
and
cmp
cmc
in
inc
lea
aam
js
pop
cmp
lds
ds
cwtl
sub
push
pushf
xor
sub
movsl
arpl
inc
pop
adc
jmp
cmc
enter
mov
mov
pop
aas
cmpsl
outsl
rclb
fisttps
mov
inc
add
ljmp
push
cmc
call
adcl
pusha
or
test
jg
add
ljmp
mov
jecxz
xchg
dec
lea
pop
or
movl
mov
mov
cmp
pop
cmp
leave
and
pop
cmc
hlt
or
mov
pusha
call
in
sub
gs
mov
in
push
cmc
jg
jmp
push
cwtl
inc
into
mov
jp
pop
and
int
addb
jl
outsb
inc
adc
jo
test
pop
and
mov
in
lret
aam
aas
rclb
idivl
mov
aas
sub
es
dec
subb
data16
pop
pop
ds
mov
inc
mov
movsb
and
jl
fistpl
cmp
loope
aas
stos
aam
jbe
sbb
cwtl
lock
je
shrl
or
jae
popa
into
mov
gs
and
ret
stos
and
pop
dec
shlb
pop
pop
pusha
daa
mov
out
mov
repnz
mov
jb
shl
pop
xchg
fcmovnu
inc
dec
ficompl
add
inc
jmp
clc
test
adc
xlat
or
sti
cmpsl
shlb
mov
decl
or
inc
aad
sbb
and
sub
xlat
out
jmp
cmpsl
push
rolb
sbb
inc
inc
test
jne
insb
jle
xlat
add
add
loop
ficompl
jmp
xor
or
jae
push
sbb
lock
and
inc
lods
ss
inc
sbb
inc
mov
dec
jle
cs
cmp
pop
arpl
sbb
and
add
je
jb
mov
bound
push
fcomp
les
ss
lcall
movsb
cmp
fsubrs
mov
xchg
das
xor
push
je
ret
push
int3
dec
fdivp
inc
mov
into
dec
xorb
jbe
jmp
sub
aaa
enter
mov
jmp
mov
xor
and
add
adc
inc
test
dec
fldl
mov
mov
test
inc
cmp
sarb
aaa
inc
pop
jmp
roll
data16
shl
push
push
or
clc
enter
xchg
inc
push
imul
jecxz
iret
jmp
mov
xchg
mov
pop
jno
or
sbbl
sub
lcall
adc
jno
xor
mov
nop
not
jmp
call
or
xor
lods
sub
inc
mov
xchg
mov
and
pop
mov
lahf
push
inc
xor
xor
push
dec
outsl
aam
jns
sub
dec
ljmp
sub
or
pop
cmp
mov
cld
jns
sbb
fmull
pop
into
xor
cmp
xor
imul
cmp
adc
pusha
inc
std
jb
repz
fcmovnu
test
cltd
pop
xor
push
cmp
fidivrl
daa
icebp
add
dec
jo
out
stc
inc
sub
call
dec
cli
sub
jnp
ss
lods
jl
sbb
pop
xchg
mov
mov
mov
enter
pop
sbb
cmp
data16
mov
pop
push
xchg
aaa
aad
pop
push
hlt
lds
rclb
jne
mov
lahf
outsb
mov
xchg
arpl
loop
insl
in
mov
mov
mov
es
xchg
lock
and
lds
dec
repz
add
add
mov
leave
and
scas
lds
xchg
lods
pop
fcmovne
outsl
push
jecxz
cmp
push
mov
fldl
mov
gs
sbb
and
js
push
outsl
stos
mov
cmp
cmp
lock
mov
sub
jg
jmp
negl
loop
pop
cs
jae
bound
pop
enter
inc
cmp
cwtl
lahf
cmp
mov
xor
adc
stos
xchg
fisttpll
mov
out
sbbb
and
addb
lds
sbb
stc
movsb
push
push
sbb
cwtl
into
and
or
cld
push
jp
xchg
es
lea
ficoml
mov
push
inc
mov
cmp
fistpl
jb
lods
mov
loope
jo
pop
cmp
icebp
push
mov
or
jle
mov
stc
lods
or
xchg
stc
mov
or
sahf
sti
out
jmp
push
xchg
sarl
dec
cmp
loopne
rorb
gs
and
jmp
test
inc
mov
sbb
cmpsb
repnz
add
shll
jne
mov
aaa
mov
cmp
xchg
stos
test
cld
and
sbb
pop
stos
pop
cli
push
leave
loope
push
inc
pop
mov
pushaw
push
jecxz
cmp
jae
and
push
ja
pop
dec
xchg
adc
fsubl
jae
sbb
je
lcall
loop
cmpsl
adc
sti
aas
clc
push
push
mov
jb
mov
adc
pusha
jns
pop
lock
xor
call
mov
xchg
ret
pop
jb
aas
imul
out
or
inc
popa
add
lahf
and
adc
push
sbb
scas
pop
sbb
push
insb
aam
mov
pop
push
or
add
subb
cmp
xor
bound
dec
xchg
insb
decl
scas
movsb
adc
inc
lock
addr16
mov
sbb
fsubrs
jle
aad
push
adc
aaa
outsb
out
inc
inc
mov
lds
int
imul
sub
in
xchg
inc
pop
ja
xor
stc
jg
test
js
cli
int
adc
inc
xchg
xlat
daa
insb
inc
push
mov
cwtl
cmc
bound
sahf
and
loopne
push
push
push
gs
xor
movsl
jae
jnp
and
loop
or
cmp
mov
sbb
xor
add
push
inc
fisubrl
pop
fldt
fwait
dec
rclb
cmp
sti
lods
ret
xor
and
je
lock
add
test
mov
int
push
sar
jno
xchg
enter
add
cld
fs
aad
push
das
dec
xor
pushf
enter
aaa
add
neg
into
enter
sub
cltd
pop
dec
popa
and
jl
jb
addr16
jns
jmp
movsl
fsubs
clc
aaa
int3
adc
rcll
pop
out
push
rolb
dec
call
incb
or
pop
mov
iret
mov
xor
not
cmc
lods
and
sub
xchg
adc
add
outsb
aad
jno
cmp
mov
push
mov
push
dec
outsb
add
and
je
cmp
insb
xor
xor
je
lahf
loopne
dec
mov
mov
imul
xchg
imul
sub
fcomps
js
frstor
call
add
inc
in
mov
pop
adc
mov
clc
dec
push
add
inc
xchg
dec
mov
sbb
mov
lret
dec
add
pop
mov
mov
aam
shl
jge
push
pop
ud2
adc
fdivs
lock
addr16
jns
aad
xchg
xor
dec
sub
push
and
sbb
outsl
stc
and
pop
mov
sub
out
mov
aam
pop
pop
push
add
stos
inc
adc
push
imul
test
and
testl
mov
dec
mov
or
iret
sub
dec
clc
cmp
and
in
mov
mov
movsb
stc
push
out
dec
mov
mov
mulb
dec
and
iret
shrl
popf
and
lcall
insb
pusha
mov
in
scas
mov
mov
les
xchg
fwait
xchg
out
push
stc
fs
faddl
sbb
xlat
push
loope
fs
mov
in
mov
stc
idiv
and
cmp
lods
or
mov
rol
mov
xor
push
or
adc
jg
call
cmp
xor
repnz
sbb
das
scas
movsb
and
push
repnz
ret
or
cmc
sub
stos
cmp
pop
dec
push
mov
test
lock
dec
and
adc
into
jbe
cmp
xchg
enter
add
and
ss
cmpsl
mov
push
orb
pop
lods
dec
rcrb
lods
dec
das
xor
inc
dec
test
jmp
int
mov
pushf
or
test
xchg
or
dec
cwtl
jle
pop
and
dec
jbe
inc
into
mov
sub
lods
add
andl
mov
add
inc
xchg
cmpsb
mov
dec
xchg
popa
jmp
cmp
aas
das
or
divl
adc
ljmp
jmp
xchg
shll
mov
cmp
out
add
and
mov
data16
cwtl
and
aad
movsl
add
lock
daa
stos
and
in
repnz
push
lds
aad
sti
mov
push
mov
test
fidivrs
dec
icebp
stos
inc
in
es
xchg
shrl
movsb
sahf
inc
jle
xchg
cmp
aas
imul
dec
adc
es
or
sahf
es
insl
repz
xor
push
stc
mov
fists
mov
or
inc
xor
push
cmp
fdivs
jb
test
movsb
pop
add
jmp
rcr
add
pop
and
repz
daa
dec
cmp
out
incl
mov
aam
adc
leave
fdivr
scas
test
dec
sub
shrl
ss
stos
dec
clc
pop
fidivrs
es
mov
or
add
insl
stc
mov
push
je
xor
dec
es
mov
lahf
cwtl
bound
xchg
inc
pop
inc
imul
xchg
test
add
adc
and
ja
mov
movsl
das
adc
or
mov
xchg
xor
sub
pop
in
daa
add
shrl
xchg
jbe
popa
push
lcall
xor
adc
lea
test
cmp
push
pop
ljmp
loop
int3
in
sbb
pshufw
jmp
pop
pop
loop
mov
mov
xchg
insl
lea
mov
jo
andl
xchg
out
shl
jge
adc
sti
pop
or
jae
add
mov
adc
mov
popf
xor
rclb
mov
mov
add
dec
es
sbb
rcrb
mov
pushf
inc
inc
fmull
xchg
mov
fisttpll
imulb
ss
push
mov
xchg
test
std
test
mov
ret
orl
xchg
les
or
dec
inc
subb
sub
inc
sub
xchg
in
lds
pusha
xor
jg
mov
xor
mov
push
lds
mov
outsb
xchg
repnz
mov
mov
andnps
xchg
cmp
outsl
mov
ss
pop
push
sub
movsb
push
movsb
push
mov
pushf
scas
mov
int
jle
rcrl
data16
fwait
leave
add
loope
adc
and
test
xchg
mov
shl
stos
jbe
scas
inc
dec
inc
xchg
scas
sub
sbb
xchg
mov
cmp
icebp
cltd
pop
loop
push
enter
popf
push
jbe
orb
lock
lret
into
mov
gs
jge
push
pop
ds
mov
out
lret
jno
ljmp
xor
pop
jmp
push
push
cmp
push
scas
sahf
pop
loopne
mov
int3
aas
sti
jne
mov
popa
mov
mov
or
push
mulb
xor
jb
test
mov
shrb
jbe
cmp
mov
pop
lock
cs
jg
sub
lods
mov
rolb
dec
sti
and
or
in
and
stc
das
mov
outsl
shrb
xchg
in
cs
dec
dec
std
out
arpl
xor
nop
cwtl
sbb
cmpl
pop
mov
mov
stos
adc
je
ja
ljmp
movsl
inc
cs
dec
aaa
dec
mov
pushf
jae
adc
sbb
icebp
pop
jg
popf
cmp
and
imul
mov
mov
xlat
adc
out
lret
addr16
add
lcall
pop
lahf
lods
stos
push
dec
lahf
flds
lret
outsl
pusha
mov
dec
and
add
lock
out
pop
dec
push
out
sbb
push
mov
pushl
xchg
xor
je
fdivrp
daa
sbb
cmpsl
aaa
mov
adc
and
in
cmp
pop
xor
inc
xor
mov
push
inc
dec
adc
adcl
shll
pop
sti
mov
dec
jg
sti
or
addr16
cmp
add
stos
sahf
fbld
fcoml
imul
cmp
jg
add
nop
sub
stos
pop
iret
and
jp
sbb
je
hlt
push
shr
jns
jb
js
mov
push
les
or
and
cli
xchg
lock
pop
ret
dec
and
jb
push
fcomip
das
mov
adc
popf
cmp
xor
scas
dec
lahf
enter
sbb
ljmp
mov
xor
push
ror
sbb
jl
jge
data16
mov
xor
xchg
or
add
inc
addr16
orl
add
fsubrs
mov
add
adcb
andb
jb
loope
jnp
jae
idivb
pop
pop
sub
pop
pop
jns
mov
xchg
addr16
sahf
mov
mov
sub
js
add
int3
mov
fisttpl
xor
fbstp
xor
sub
fdivs
add
mov
or
std
je
outsl
xor
dec
jle
mov
rcrb
inc
jo
hlt
mov
pop
lret
cld
leave
icebp
mov
pop
and
mov
jecxz
add
sub
dec
inc
movsl
ret
sbb
hlt
adc
mov
cmp
sbb
js
jle
and
loopne
xchg
add
sbb
mov
inc
ret
xor
add
jmp
sbb
pop
or
arpl
sub
les
lods
push
jbe
in
cmp
fs
in
jmp
mov
fldenv
cmp
add
mov
mov
sub
subl
inc
mov
inc
jae
or
mov
adc
arpl
jge
add
push
push
lret
addr16
cmp
mov
dec
movsb
stc
lret
inc
push
jmp
xor
mov
mov
pop
test
repnz
test
cmpsl
xor
or
jns
mov
fdivr
xor
adc
fcomp
and
das
xlat
sbb
arpl
loopne
mov
aas
inc
mov
mov
jne
fsubrs
repnz
xlat
or
add
mov
jo
outsb
ja
fwait
ret
xor
add
adc
add
mov
add
cmpsl
and
hlt
mov
cmp
mov
sbb
cltd
xchg
xlat
stos
dec
adc
out
mov
and
imul
movsb
int3
push
rorl
mov
mov
push
xchg
dec
icebp
cmc
stos
inc
add
fucomip
lea
loope
cmc
sti
test
scas
call
jbe
pop
or
ljmp
push
movsl
outsb
dec
stc
rcrb
test
adc
add
mov
je
push
out
jbe
or
jae
ljmp
jnp
lcall
scas
jnp
mov
xchg
jb
ficoms
jne
sbb
stos
cli
out
mov
pop
hlt
add
int3
jle
lds
stc
out
int
div
cmp
pop
mov
rcll
jae
aas
enter
mov
and
aas
imul
fiadds
push
xchg
pop
pop
addb
fisubrl
add
aad
jb
leave
daa
or
loopne
add
fisttps
push
shlb
mov
inc
mov
icebp
std
cmp
adc
add
jae
sub
jo
daa
stc
js
incb
dec
jae
xchg
sbb
cltd
pop
dec
xchg
hlt
ljmp
xchg
and
add
jmp
inc
dec
es
mov
sub
int3
or
inc
fisubl
hlt
ds
hlt
push
cwtl
cmp
push
mov
dec
cmp
mov
outsl
cmpsl
nop
ds
push
and
mov
or
jo
insl
push
adc
jge
int
and
jle
dec
int3
dec
push
cltd
inc
push
add
movsb
dec
pop
dec
or
xchg
cwtl
sbb
adc
mov
push
sbb
mov
push
sahf
pop
fstps
addl
popf
pop
and
hlt
out
subb
sbb
push
shlb
mov
pop
sub
daa
mov
loop
in
mov
ss
pusha
pop
mov
testl
jae
inc
add
cltd
cmp
cmpsl
mov
mov
push
cltd
jl
xchg
popa
cmpsl
pushw
pop
ret
js
loope
dec
and
loop
pushf
fcmovne
add
ja
dec
rol
arpl
rorb
stc
dec
ret
dec
cli
pop
inc
sarb
mov
insb
push
sub
xor
stc
stos
mov
sbb
mov
in
fyl2x
sbb
mov
cli
dec
fsubs
xchg
arpl
clc
mov
push
pop
mov
cld
dec
or
pop
outsl
dec
in
push
or
jmp
dec
xor
stos
xchg
hlt
je
or
fs
or
or
and
sarl
pop
jno
xor
cmp
jne
fstl
sbb
movsb
leave
mov
ficoml
mov
je
sar
cltd
out
push
mov
jnp
mov
cmp
sub
sbb
subb
mov
popa
test
push
add
in
addl
mov
adc
push
mov
cmp
push
fcmovbe
loopne
shll
xchg
movsl
adc
or
jle
clc
data16
push
dec
lods
and
mov
xor
xchg
mov
dec
jge
clc
popf
jge
pop
mov
std
xor
add
pop
cmpb
stos
mov
out
out
mov
sti
sub
popf
xchg
adc
sub
xor
leave
int3
push
jle
pop
jns
imul
addr16
in
sbb
mov
test
in
adc
ljmp
mov
jne
mov
push
xlat
das
sub
adc
jbe
dec
jae
sbb
arpl
in
sub
jo
clc
and
aaa
dec
cli
mul
loope
add
xlat
ja
sbb
stc
loopne
arpl
xchg
mov
jp
les
hlt
xchg
insb
push
adc
mov
and
inc
mov
jb
cmp
and
jl
shr
xlat
aam
in
xor
mov
test
ja
lcall
push
jo
jns
adc
fisubs
mov
andl
movsl
and
bound
cmpsl
inc
aas
stc
jmp
jbe
sub
in
dec
or
jmp
sbb
frstor
prefetcht1
pop
loop
xchg
bound
clc
jecxz
mov
mov
push
mov
push
into
xor
mov
push
push
push
clc
stos
add
mov
or
jae
shll
push
xchg
sub
cmpsl
ds
pop
js
je
and
nop
cmp
jnp
and
jmp
insl
mov
pop
jg
or
je
jg
pusha
add
and
or
pop
push
mov
rorb
xchg
scas
and
ljmp
mov
xor
sbbl
mov
das
xchg
rorl
les
orb
xor
inc
fs
or
pusha
adc
mov
mov
dec
dec
aad
and
fcompl
inc
fistl
pop
in
push
mov
sub
lds
mov
jo
fadd
scas
inc
xor
jle
pop
sahf
xchg
jns
lods
pop
sbb
mov
xchg
jo
jae
outsb
xor
ja
xchg
inc
enter
and
sar
xor
xchg
nop
int
addl
push
sbb
sarl
sub
ja
cmp
cmp
pop
push
das
push
inc
sbb
push
cwtl
fiaddl
movsb
mov
insb
iret
mov
lods
out
imulb
mov
push
push
lock
xor
icebp
enter
adc
mov
xor
test
jns
xchg
cltd
jns
aaa
add
inc
cs
adc
enter
mov
mov
jle
xorb
hlt
in
roll
dec
out
scas
jmp
cmpsl
adc
call
or
jecxz
push
sarb
dec
jne
aas
or
sti
and
pop
rorl
out
mov
sarl
cli
inc
sub
les
xor
enter
jg
inc
pushf
dec
lods
repz
xchg
inc
xor
scas
add
sbb
push
popf
rcrb
sti
imul
mov
int
imul
mov
mov
lods
adc
cli
rolb
and
adc
push
gs
push
xchg
xchg
les
fimull
mov
mov
loopne
and
das
push
xor
cmp
sub
stos
iret
jne
les
pop
inc
popf
add
shl
movl
sub
hlt
test
filds
fwait
notb
aas
xor
pop
std
inc
cwtl
jmp
cmp
push
push
addb
cs
mov
arpl
jno
pop
adc
cmc
cmc
testb
dec
add
sub
push
push
jne
add
adc
aad
mov
fildl
and
push
xchg
shlb
dec
jno
je
psllw
cmp
dec
gs
cmp
imul
out
sti
push
xor
push
xor
adc
ret
xchg
pop
in
mov
inc
lahf
in
jae
stos
or
cli
dec
sbb
mov
sbb
add
jmp
cmp
les
in
aaa
lea
notl
fisttpl
and
pop
and
leave
js
add
scas
int
sbb
lock
cmp
stc
fiadds
test
fldt
mov
fxch
aas
imul
icebp
cmc
and
cmp
dec
sti
out
mov
nop
sbb
repz
mov
jg
jl
das
inc
sbb
mov
jge
push
in
pop
gs
sbb
jp
shrb
mov
inc
cmp
enter
hlt
movsb
out
xchg
push
in
xchg
mov
pop
cmpsb
pop
xlat
mov
popa
std
rcll
cmp
lcall
lods
outsl
and
gs
sub
les
mov
movsl
neg
std
leave
loopne
mov
jae
imul
pop
rcrl
addb
fs
mov
lret
bound
arpl
pop
scas
fcomps
leave
pop
fsubs
inc
push
push
sub
cld
es
out
stc
fldenv
cs
nop
iret
movsl
xlat
test
jae
rolb
and
in
xchg
sub
popa
orl
pop
daa
ja
movsb
pop
data16
jb
inc
inc
mov
push
push
daa
ficomps
sti
dec
dec
pop
pop
fidivl
addb
jle
mov
subl
mov
movsl
dec
jl
cmpb
notb
xchg
aas
sbb
jl
adc
cmp
movsb
mov
and
mov
mov
and
add
rclb
outsl
loopne
out
ds
mov
xor
lds
rcrl
out
xchg
add
int
repz
xchg
adc
and
in
stos
int3
jne
mov
cmp
mov
mov
test
push
mov
mov
js
gs
out
cltd
iret
mov
ror
int3
enter
cs
mov
add
scas
mov
mov
jbe
rcrl
mov
jg
cmp
stos
repz
addr16
scas
fwait
mov
lcall
das
fdivrl
enter
lret
adc
cmp
fidivs
xor
int3
pop
les
mov
push
xor
outsl
jmp
scas
ret
inc
loopne
ja
pop
push
jbe
std
or
mov
dec
cmp
clc
out
ret
mov
ljmp
jns
shlb
mov
aaa
pop
jne
movb
cld
xchg
jmp
rolb
mov
dec
fdivl
cli
jle
loop
rclb
sahf
sbb
ljmp
jns
stos
test
mov
or
rorl
xchg
mov
test
ficoml
pop
lds
or
and
das
push
pop
ljmp
das
int
and
insb
cmp
pop
pop
lock
rolb
sbb
xor
mov
hlt
push
incb
fcoml
js
dec
mov
mov
lods
test
cmc
dec
xchg
sti
lods
out
mov
loope
mov
in
dec
sarl
mov
mov
mull
xor
outsl
test
ret
jg
mov
sbb
sub
push
ljmp
rol
test
fcmovu
xor
mov
xor
inc
add
sbb
sbbb
mov
scas
cwtl
shll
andb
icebp
push
push
adc
pop
loope
scas
mov
jae
cmpsb
push
ss
xchg
add
addr16
pushf
add
into
add
pushf
dec
sahf
clc
divb
in
pop
sub
lahf
scas
sbb
out
test
cmp
mov
testl
cmp
push
sub
ret
in
mov
arpl
insb
jo
add
arpl
std
push
sbb
jl
or
stos
lcall
cmp
outsl
cmp
xchg
lret
mov
cmp
cmpsb
sub
jbe
repnz
add
sti
push
push
fdivp
dec
faddl
mov
cld
mov
stc
fsts
je
pop
sbb
mov
push
add
in
or
fdivs
pop
imul
add
pop
jnp
imul
mov
dec
imul
repz
xor
js
icebp
adcl
addr16
lret
sbb
mov
fldcw
dec
inc
ja
mov
nop
insb
sub
jp
shlb
enter
lods
sub
mov
push
mov
sub
jge
dec
pop
testl
dec
inc
sbb
cwtl
sub
mov
ret
mov
mov
cld
dec
jle
nop
ret
and
push
lock
movsl
test
scas
dec
cmovge
ror
adc
mov
addb
mov
aas
lret
fdivrl
mov
lcall
inc
inc
dec
in
mov
cmp
imul
adc
jg
mov
and
push
cld
sub
lahf
shlw
fwait
andb
jb
fstpt
cmc
xchg
xchg
xor
inc
xchg
sbb
pop
addl
xchg
pop
leave
cli
push
push
inc
mov
jmp
cmpsl
addb
jb
mov
cmc
ljmp
mov
push
mov
adc
sahf
cmpsb
xor
pop
or
in
mov
lods
xchg
pop
addr16
lcall
mov
ljmp
aaa
cltd
int3
mov
mov
inc
in
cli
xor
inc
pop
pop
pop
add
jbe
insl
inc
and
inc
xchg
sub
repnz
out
lock
lds
and
lds
dec
cmp
cld
movb
mov
cwtl
sub
in
icebp
lcall
push
roll
xor
mov
xchg
orps
pop
aam
fwait
cs
adc
bnd
pop
cmc
out
lret
loope
pop
lods
jl
clc
leave
pop
into
dec
les
jl
xor
sbb
xchg
jl
stc
loop
adc
xor
ss
lret
ljmp
inc
mov
and
cwtl
je
cmpsl
enter
mov
xor
adc
sbb
jmp
jb
cmp
mov
mov
ljmp
mov
fsubrl
cmpsb
inc
fdivrs
hlt
sarb
pop
mov
les
out
xor
std
fnstsw
xor
or
js
xlat
arpl
mov
decl
dec
rcrb
mov
nop
or
lret
popf
lcall
inc
in
inc
loopne
out
inc
jae
or
or
cmp
iret
adcl
dec
add
adc
fmul
mov
popf
aam
dec
push
je
inc
push
cmpsb
dec
in
mov
jo
shl
adc
mov
mov
jne
cmp
out
cwtl
imul
mov
or
and
fisttpll
loopne
addr16
xor
addr16
sub
jecxz
sbb
cmc
adc
or
jnp
push
sti
or
jmp
mov
dec
std
pushf
adc
mov
cmp
or
out
adc
sub
test
cmp
lea
int
lret
mov
jo
pop
scas
pop
ja
mov
mov
mov
pop
lods
lds
adc
fwait
jns
mov
out
rcrb
ret
andb
jns
lds
dec
ljmp
je
sbb
mov
adc
adc
pusha
sbb
icebp
insb
stc
test
xor
ret
cmp
mov
or
adc
dec
sbb
fcmovnu
mov
outsb
xchg
popa
repnz
jno
scas
jo
stos
movsb
sti
imul
xlat
xor
mov
in
inc
fmul
add
lret
mov
bound
lret
aam
inc
fadds
xchg
sub
fidivrs
sahf
popf
jb
icebp
push
cltd
js
mov
mov
sub
shr
cltd
mov
ja
out
and
and
cmp
mov
sub
inc
adc
and
clc
repz
cmc
mov
xor
add
adc
push
ds
xchg
push
js
mov
mov
xchg
adc
or
call
sbbb
mov
xor
pop
jg
xchg
add
jmp
add
test
lods
and
inc
jle
test
jecxz
sbb
repz
sbb
es
dec
rcll
xorl
mov
pop
rcr
xor
push
push
stc
cwtl
xchg
dec
xor
dec
xor
ds
out
push
cmp
mov
rcrb
lods
jp
daa
test
fldt
push
sbb
pop
aaa
js
ss
or
cwtl
enter
lods
inc
popf
mov
inc
xchg
adc
pop
push
adc
mov
das
add
push
sub
les
in
sbb
shll
fucomi
leave
incl
pop
xchg
mov
xor
adc
dec
imul
pusha
add
popf
inc
repz
lds
adc
out
mov
sub
cmp
pusha
ds
bound
xchg
mov
shrb
les
jecxz
vpsubusw
sub
ds
mov
out
ss
adc
stos
sbb
dec
sbb
push
lods
movsw
mov
sti
fsubrs
fwait
or
mov
push
push
xor
xchg
test
jmp
pop
push
and
sbb
cmp
ret
paddb
outsl
movsb
cmp
pop
je
xlat
jge
inc
and
ss
adc
insb
and
jno
das
cmp
push
and
popa
lods
lahf
int3
addr16
movsb
fnsave
in
out
jle
jb
in
jle
jbe
fisubrl
mov
imul
lahf
or
dec
inc
or
vsubss
xorb
popa
imul
fisttps
cmp
addr16
dec
repz
icebp
testb
test
fstpt
rorl
in
sahf
jmp
shrb
cmpsl
or
adcb
xchg
mov
push
xchg
fcmovnb
inc
fmull
jno
mov
in
stos
and
into
imul
pmaxsw
insl
add
xchg
dec
call
mov
in
jno
into
jb
add
cmp
mov
ds
jno
popa
dec
or
jnp
outsb
xchg
icebp
mov
add
les
pusha
movsb
mulb
or
cmp
and
pop
cwtl
cmp
push
cmpsl
or
stc
xor
push
xor
aas
xchg
jg
cmc
int3
ds
cmp
mov
xchg
pop
mov
and
push
ret
shrb
and
stos
aad
rclb
xchg
mov
in
mov
ja
add
daa
dec
enter
mov
sub
nop
out
xchg
cmpsb
jnp
in
mov
dec
stc
stc
inc
cli
dec
push
loopne
test
inc
aaa
cmpsl
movsl
ficoms
scas
sbb
aas
xchg
imul
xchg
testb
jge
cmp
mov
popa
mov
in
lcall
js
mov
sub
daa
lods
jmp
es
into
dec
or
add
testb
push
and
push
xchg
sbb
and
sbb
push
or
mov
sbb
inc
ljmp
mov
pop
push
sub
aas
inc
test
sbb
adc
mov
inc
imul
insl
aad
insb
or
fs
add
adc
scas
sub
jno
jne
pop
cmp
sub
sbb
and
mov
push
mov
cwtl
rcrb
int3
mov
dec
sub
arpl
and
add
jae
and
lret
jb
push
mov
in
xlat
jecxz
or
xchg
dec
lds
popa
inc
dec
sbb
scas
loop
xchg
dec
xor
cltd
daa
and
cmp
mov
test
mov
or
lods
fstpl
add
icebp
xor
mov
sub
jbe
jmp
push
sub
cltd
mov
lret
data16
lret
xchg
mov
lods
dec
dec
push
sarl
and
sub
sti
mov
xor
or
sub
dec
insl
mov
add
sbb
outsb
pop
mov
sub
shl
loop
push
mov
or
pop
int3
fstpt
dec
adc
push
push
push
cs
dec
ror
cmp
cmp
leave
dec
cltd
mov
sbb
push
cmp
fdivl
add
out
sub
mov
pop
cmpsb
dec
mov
add
push
jp
sub
push
ss
or
xchg
stos
loop
faddl
test
inc
jl
cmp
test
lret
cmpb
arpl
les
daa
adc
icebp
xor
clc
pop
movd
pop
inc
dec
push
ja
xlat
pop
rcll
cwtl
adc
rcrl
and
and
in
mov
xadd
mov
xorb
fs
sub
test
jns
xchg
stc
negb
sbb
cwtl
push
int3
cli
das
cli
prefetchnta
jle
mov
loope
scas
xlat
mov
adc
mov
push
mov
lods
ja
test
push
ljmp
out
adc
sub
lock
mov
sbb
jecxz
mov
sub
cs
inc
xlat
fnsetpm(287
ret
sub
stos
iret
mov
mov
popa
push
push
dec
pusha
mov
test
push
xor
dec
fs
mov
mov
scas
out
jge
fldenv
cmp
sub
xor
dec
mulb
inc
sahf
or
or
aas
imul
push
or
lock
out
mov
pop
and
aaa
jle
cmpsb
and
fstpt
aas
pop
lods
into
pop
add
rorb
stc
inc
aaa
lret
adc
or
adc
subb
mov
jg
xchg
insl
xchg
orb
loope
out
stos
stos
out
fisubrl
inc
test
leave
jae
xchg
mov
or
and
sbb
and
cmp
push
mov
fdivrs
out
pop
aad
cltd
xor
mov
or
push
pop
inc
ljmp
hlt
mov
xor
fcomps
hlt
adcb
clc
pop
sub
shll
dec
repz
les
lahf
into
sbb
lds
loop
cs
or
loopne
stc
fidivrl
repnz
xchg
out
in
out
pushf
aaa
or
cld
lods
insb
sub
cld
cltd
cmp
sbb
enter
push
out
movsl
pop
pop
and
inc
cmpsl
ljmp
xchg
dec
pusha
js
inc
push
add
sahf
cmp
mov
out
sub
mov
push
sti
mov
sarw
jb
mov
fnsave
mov
and
xor
dec
xchg
xchg
iret
arpl
int3
and
push
push
mov
cs
sub
and
xchg
adc
loopne
pushf
scas
arpl
pop
imul
dec
insb
neg
lds
inc
addl
sbb
or
les
ljmp
add
loop
mov
mov
repz
jbe
popf
mov
xor
sub
int
imul
into
pop
js
mul
pop
and
loope
jae
ret
inc
aaa
mov
lock
ljmp
mov
lret
fstpt
xchg
idivb
outsl
adc
outsl
out
mov
jnp
addr16
movsl
jecxz
xchg
and
jbe
movsb
xchg
push
stc
dec
nop
mov
sbb
xchg
iret
xchg
and
out
mov
movsb
fcmove
idivl
pop
test
adc
jo
inc
in
pop
cli
push
sbb
cmp
inc
sub
pop
shrl
jnp
mov
push
cmp
and
inc
or
inc
enter
pop
je
push
cmp
data16
and
in
into
push
push
mov
adcl
and
pop
push
scas
adcb
rcll
pop
xchg
frstor
jne
cli
or
loop
add
sbb
fnstcw
xor
movl
lcall
xor
jae
push
dec
xchg
pop
into
mov
mov
stos
xchg
int3
cmp
dec
popa
cmp
cmp
out
dec
test
outsl
das
mov
movsb
mov
dec
shl
xorb
xchg
or
or
movsb
repz
leave
cmpb
aad
push
dec
ret
test
cmpsl
repnz
rcr
mov
jecxz
mov
mov
jbe
adcb
leave
mov
mov
mov
popa
repnz
or
pusha
loopne
xor
dec
mov
mov
notb
lds
sbb
movsb
mov
sbb
pop
inc
xchg
in
inc
sub
add
out
xchg
outsb
cmp
sub
push
or
fistl
std
dec
jmp
mov
mov
jae
inc
inc
jne
inc
add
outsb
pushf
adc
loope
inc
js
daa
in
mov
dec
sti
and
dec
adc
and
ljmp
fidivs
inc
int3
ss
out
andl
test
adc
cmpsb
push
adc
pop
loopne
and
int3
pop
adcl
add
cltd
pop
test
icebp
cmp
push
and
lret
and
and
lea
dec
xor
fs
adc
hlt
lods
push
jno
sbb
inc
std
inc
push
jl
scas
fsub
jnp
aaa
leave
cmp
aaa
outsl
dec
pop
es
sahf
scas
out
stc
inc
mov
and
adc
lds
into
xchg
mov
jp
pop
cmp
fists
add
inc
stc
bound
fisttps
push
fstps
sbb
das
cmpsb
out
sub
fs
inc
leave
lcall
sub
sbb
out
add
ret
bound
outsl
inc
movsl
popf
jnp
mov
or
mov
les
xor
jns
sbb
imul
lods
in
movsb
int
push
jnp
scas
into
jl,pn
dec
push
cmp
dec
or
sub
mov
inc
loope
add
inc
mov
iret
lea
testl
push
push
arpl
je
scas
mov
sub
stos
sti
inc
sbb
stc
dec
push
push
xchg
ret
iret
or
gs
cmp
lcall
js
xlat
mov
imul
arpl
call
sub
add
hlt
in
sbb
enter
or
out
mov
in
mov
xchg
adc
pop
jl
adc
jnp
xor
mov
add
mov
js
enter
imul
jl
push
sbb
divb
pop
notb
sti
lcall
add
lahf
lcall
xlat
pusha
mov
sbb
out
test
js
add
sub
shr
call
add
adc
mov
or
hlt
int3
imul
popf
xchg
cmp
insb
fstps
adc
lock
ret
cs
sti
test
vmulsd
enter
lods
dec
pop
jge
sbb
pop
mov
outsb
fwait
aas
shll
sbb
jecxz
add
sub
mov
push
xlat
cmp
in
mov
fcmovnbe
jmp
adc
xchg
cmp
sbb
and
ljmp
mov
iret
xlat
aas
rcll
mov
mov
jecxz
cmpsl
inc
xacquire
sub
cmp
push
ljmp
and
stos
push
sub
imul
nop
push
cltd
imul
xor
aad
sti
daa
adcl
cmp
lods
paddq
pop
xchg
fidivrs
xor
icebp
into
lahf
stos
sub
xor
and
xor
imul
lahf
iret
cmpsl
cmpsb
les
cs
or
movsl
ja
or
mov
inc
pop
out
sbb
popa
cld
sbb
dec
adc
dec
cmp
call
dec
loopne
jl
jbe
pop
int3
lret
insb
ret
pushf
out
jl
pop
pop
push
sub
test
and
leave
inc
in
in
clc
mov
xchg
push
les
add
leave
add
lock
sahf
popa
or
sub
aam
enter
add
mov
mov
inc
xorl
arpl
les
mov
in
cmp
cs
ljmp
add
mov
push
sub
fdivrs
stos
jns
pop
test
pop
or
push
mov
xchg
jg
mov
mov
hlt
pop
popf
fldl
mov
ljmp
dec
dec
sub
jb
test
mov
test
in
sbb
loopne
adc
mov
sti
mov
push
push
cmp
xor
jno
test
cmp
push
push
adc
ret
fsubrl
mov
xchg
adc
cmc
mov
lret
shrl
dec
lahf
fwait
jp
stos
orb
cmp
scas
dec
out
pop
clc
sub
xchg
mov
repnz
es
xchg
js
jl
repz
jle
jno
cmc
ret
test
in
cmc
add
and
xchg
dec
iret
mov
xchg
jmp
test
fidivl
cld
inc
sub
xchg
movq
cwtl
cmpsb
pop
sahf
and
inc
add
loopne
jl
pop
jl
xlat
int
xor
jl
rcll
pop
std
dec
pop
add
stos
loope
lods
imul
push
in
aad
add
sub
insl
shlb
fistpll
adc
sbb
aad
js
mov
cmp
cs
xchg
cmpsl
notb
ss
jmp
rclb
int
mov
cmp
fcoml
pop
lods
popa
xchg
aad
imul
dec
mov
dec
dec
dec
fimuls
pop
xor
gs
popf
imull
cmpsb
test
pop
ljmp
xchg
rcr
iret
push
pop
data16
fldl2t
iret
aaa
nop
lret
sar
sar
out
inc
into
enter
icebp
leave
mov
stos
mov
shlb
push
or
cmpsl
pop
jbe
lods
mov
or
sub
jmp
mov
jle
mov
mov
addb
popf
std
jns
stc
dec
fchs
in
addb
mov
push
in
js
mov
filds
pop
or
adc
shrl
push
xchg
mov
cmc
push
movsb
xchg
xlat
shr
mov
sbb
mov
out
scas
enter
dec
adc
jnp
dec
mov
test
sbb
aas
push
dec
pop
cmpsl
aaa
push
movsb
mov
idivl
arpl
jne
lcall
add
leave
lahf
xor
and
or
aam
dec
int3
outsb
inc
or
push
and
jle
xchg
jne
cmpsb
dec
out
sarb
ret
movsb
jecxz
adc
fst
push
repz
fbstp
jl
stc
and
push
mov
jl
inc
imul
inc
fdivrp
pop
cmp
fcmovnb
inc
push
shl
nop
hlt
sbb
mov
dec
or
lret
mov
xchg
js
lcall
call
lods
int
in
xlat
inc
sbb
outsb
sub
subl
adc
out
in
xchg
hlt
test
mov
add
dec
imul
xchg
dec
fwait
test
test
cmc
xchg
movsl
int
ja
pop
arpl
prefetcht1
fisttpll
and
xchg
loopne
mov
lods
dec
xor
inc
movsb
adc
cld
cld
pop
cmp
scas
and
ss
insb
test
lds
sbb
decl
xchg
jns,pn
mov
cmpsb
mov
es
or
lcall
inc
pop
push
inc
in
sbb
or
pop
dec
clc
xchg
lods
adc
out
and
pusha
loop
loop
fbld
ss
repz
mov
adc
ljmp
test
cmpsb
jle
xchg
mov
mov
jmp
lret
lahf
inc
xor
pop
pop
ss
add
and
cli
shll
push
stos
fwait
mov
cltd
iret
push
scas
rcll
dec
dec
push
add
sbb
lcall
ret
jmp
add
and
out
pop
mov
imul
roll
jne
loope
jb
outsl
fcoms
cli
imul
lods
xor
push
sub
push
mov
cmp
imul
movsb
mov
testl
jo
adc
mov
sbb
jns
push
push
sahf
popf
out
push
add
sbb
adc
cmp
lcall
repz
cli
insb
sbb
repz
pop
das
mov
cs
fistpl
cli
int
mov
bound
bound
bound
loop
bound
movb
sbb
push
mov
cmpsb
xchg
insl
xchg
pop
sub
icebp
jno
faddp
lods
xor
mov
mov
mov
push
in
jae
cmpsb
mov
add
sbb
test
mov
cwtl
and
into
mov
mov
push
adc
cmpsl
xchg
lea
les
jne
sahf
imul
xor
push
popa
xor
aad
imul
and
xor
jb
in
push
outsb
popa
ss
jae
lods
stc
cmp
inc
xor
xor
mov
xor
aad
add
fiadds
test
sbb
xor
shrl
cmc
movsb
aad
sti
jmp
enter
cmpsl
outsb
sbb
cmp
std
pop
cld
pop
in
in
or
jmp
xchg
or
shrb
mov
stos
mov
daa
mov
mov
push
enter
clc
jbe
inc
bound
jnp
test
in
cmp
dec
lea
sahf
push
add
or
call
sbb
fdivr
push
dec
ss
fbstp
sub
xchg
scas
dec
xor
mov
add
mov
jmp
cwtl
cmp
push
pusha
rolb
push
shll
push
xchg
adc
cld
jmp
cmp
adc
push
mov
cli
in
insl
sbb
notl
adc
jge
icebp
dec
cmp
adc
adc
ficoms
cwtl
in
cmpsl
cmp
add
jl
sub
or
mov
push
addr16
addr16
gs
loopne
cli
adc
pop
xlat
jg
xlat
mov
outsl
ficoml
xchg
enter
sub
push
push
pop
pushf
mov
inc
lods
lds
xchg
push
aad
imul
pop
movsb
clc
lret
scas
mov
jno
in
adc
mov
insl
daa
mov
scas
and
in
and
dec
push
movsb
sahf
cs
repz
mov
iret
mov
scas
dec
out
aad
aas
sub
sub
adc
int
cmpsb
or
sub
add
cmp
or
out
in
js
dec
mov
cli
daa
dec
jnp
inc
cmp
mov
sbb
je
mov
or
dec
jge
sbb
mov
jmp
testb
scas
jle
push
xchg
fwait
mov
adc
or
mov
mov
loop
ds
and
in
nop
jmp
aad
xchg
jo
loopne
sub
add
pushf
xchg
jmp
lods
or
fistpll
dec
mov
sti
jmp
mov
rorb
jno
inc
cmp
mov
lahf
push
test
fimuls
mov
mov
scas
inc
in
mov
add
inc
cmp
repz
adc
jbe
cmpsl
jae
push
stos
in
xchg
cmp
mov
add
pop
pop
adc
mov
inc
inc
mov
movsb
pop
inc
jns
mov
add
or
mov
adc
sarl
je
dec
test
fmuls
jno
cs
jno
ja
test
mov
fisubs
pushf
loope
lea
pop
repz
mov
test
sbb
push
sub
cmp
pushf
mov
mov
into
add
sbb
jo
cmp
add
imul
int
loopne
mov
xlat
loopne
pop
pop
xchg
scas
dec
push
push
or
rclb
fs
add
add
mov
fcmovne
rorb
add
lret
mov
mov
test
insl
or
or
imul
aas
insl
mov
push
push
xorb
and
jge
in
or
sub
pop
and
xor
pop
dec
xlat
sbb
xchg
mov
divb
mov
mov
mov
shll
mov
sub
je
repz
adcl
addr16
sbb
sbb
mov
add
xor
xchg
pop
aas
pop
dec
push
inc
scas
es
inc
jo
jb
push
adc
data16
and
cwtl
adc
lock
je,pn
insl
push
or
ficomps
cmpb
mov
and
addr16
jb
cmpsl
adc
imul
mov
mov
in
xchg
push
inc
xchg
arpl
hlt
mov
mov
rorb
adc
imul
shll
xchg
adc
inc
test
sahf
sub
sbb
push
dec
les
inc
adc
pop
push
nop
pop
pop
xlat
adc
test
push
jb
jb
clc
imul
js
and
test
pop
mov
mov
mov
inc
test
xchg
les
xchg
repz
test
test
incl
jno
fidivrl
jnp
pushf
mov
pop
aam
pop
fwait
divb
push
fimuls
or
mov
bound
mov
aaa
stos
aas
pop
in
mov
inc
das
and
cmp
sbb
test
mov
add
or
mov
aad
xchg
adc
sub
lock
lahf
sub
inc
pushf
cmp
jmp
push
imul
dec
xchg
int3
cmc
add
int
aaa
xchg
pop
lret
pushf
xchg
rorl
ror
jnp
addr16
clc
test
lret
jae
ds
es
fldl
cmp
stos
jge
in
xor
data16
pusha
add
xchg
jge
jbe
shrl
insl
iret
arpl
cmp
das
aaa
call
jg
push
push
jae
xchg
aaa
fstpt
jecxz
mov
popa
pop
mov
fiaddl
sbb
pop
push
xchg
xchg
out
notb
xor
fwait
push
inc
xlat
jns
dec
test
arpl
loopne
test
stc
mov
mov
sarl
pushf
inc
mov
push
out
arpl
xor
cmp
out
cld
mov
jle
lcall
add
mov
mov
sub
pop
insl
mov
xor
or
test
cwtl
shll
aas
lds
adc
cmp
xlat
dec
ljmp
scas
stc
add
into
or
xor
sub
icebp
sub
sbb
mov
cmpl
jmp
jl
mov
or
lcall
cltd
daa
push
adc
aam
pusha
das
xor
popf
mov
mov
gs
xor
xor
out
mov
std
xchg
shl
jle
iret
je
test
insb
das
pop
xchg
frstor
mov
loopne
mov
test
repz
repz
lahf
fidivs
sbb
adc
pop
pop
sub
xchg
inc
fwait
rcrl
mov
push
jnp
icebp
popa
dec
es
add
jg
push
mov
mov
rolb
add
cmc
out
mov
inc
and
cs
lea
push
jmp
pushf
stos
xor
and
add
in
fidivrl
xchg
lret
test
pusha
jne
mov
inc
push
inc
loopne
test
test
pop
out
inc
loopne
dec
cmp
incl
push
xchg
inc
lret
jecxz
aam
sbb
xchg
xor
iret
jle
fdivl
mov
inc
push
sbb
stc
negl
xorb
sub
dec
jge
loop
add
xlat
mov
rcrb
movb
push
scas
sub
mov
adc
in
xor
jmp
cwtl
sub
add
xlat
iret
xor
fnstenv
aaa
jecxz
iret
and
dec
out
and
xor
out
inc
mov
add
outsb
and
push
hlt
sub
xor
stos
jae
pushf
jg
xor
sbb
mov
nop
cld
pop
jle
dec
lahf
aam
stos
mov
mov
mov
out
stc
addr16
stc
or
and
xchg
jecxz
movsb
scas
pop
jb
out
adc
movsl
jb
andl
rcrl
cwtl
aad
jbe
add
inc
mov
out
cwtl
mov
xchg
cwtl
sub
mov
ret
inc
push
loope
pop
fisttpl
mov
fdiv
les
icebp
mov
aas
js
mov
add
shufps
loop
aam
test
int
mov
out
popa
and
insl
pop
adc
pop
jo
pushf
mov
adc
repz
mov
test
fildll
loopne
lret
mov
test
adc
mov
push
mov
imul
jl
outsl
sti
int3
cmc
jge
mov
arpl
clc
xchg
and
dec
jbe
dec
aam
xchg
mov
test
sbb
movb
test
xchg
daa
stos
mov
dec
pop
rcrb
adcb
int
xchg
dec
loopne
stos
mov
aas
xor
or
sub
fwait
jno
test
xor
xchg
mov
popa
push
ret
addr16
insb
mov
mov
pusha
in
mov
loop
addl
imul
sub
test
sub
outsb
ds
aas
add
lea
inc
imul
test
mov
inc
leave
sbb
scas
mov
fcmovbe
fmull
sarl
fistpll
mov
inc
call
imul
test
aad
sbb
jo
sbb
and
mov
jns
xor
call
test
outsb
dec
jb
jb
pop
icebp
xchg
fisubrl
push
in
xchg
imul
adc
imul
ss
xor
inc
mov
enter
add
cmp
mov
mov
jae
out
daa
dec
in
jmp
shll
inc
fwait
mov
xor
mov
push
jns
and
movsl
out
sbb
xchg
sar
int
int
fnop
sub
sbb
sarb
pop
pop
xor
js
icebp
push
pop
sbb
sbb
add
adc
or
xor
inc
and
push
mul
popa
mov
xchg
cltd
jb
inc
decl
popf
jb
insl
call
pop
iret
movsl
femms
lret
js
inc
les
xlat
sub
sbb
scas
loopne
loop
lahf
aas
ret
loope
mov
fisttpll
mov
adc
jne
cltd
cmp
push
popa
popa
mov
xchg
mov
cmp
jge
and
pop
jmp
lcall
pop
movsb
mov
and
and
aam
stc
xor
leave
mov
dec
sub
addr16
xchg
or
pop
test
xor
jp
ficompl
stc
pop
lods
sub
push
mov
in
test
inc
nop
call
cmp
cmp
inc
roll
or
and
rcrb
jle
repz
inc
adcl
mov
and
test
cltd
cwtl
cs
add
out
jge
mov
inc
pop
add
negl
cmp
daa
imul
mov
push
insb
std
mov
cld
stc
mov
pusha
or
cmpsl
mov
xor
call
jp
mov
jb
sub
push
cmc
cmc
pop
ret
ljmp
cmp
mov
pop
sbbb
sbb
mov
or
xchg
je
mov
les
jl
add
mov
xchg
das
mov
inc
loope
xor
pusha
clc
sbb
ret
jnp
add
mov
fldcw
nop
push
and
outsb
jo
lea
fidivl
and
js
pop
lcall
sahf
cmp
and
sub
rolb
test
sub
rol
popw
push
cmp
cmp
sub
cs
pop
les
cmc
and
mov
ljmp
fsubl
call
rorb
inc
push
test
sbb
mov
push
enter
mov
dec
jge
test
movl
push
imul
xor
ds
pop
cmovb
int
push
stos
jnp
cmpsb
mov
push
xchg
cmpsb
pop
enter
test
fbstp
mov
and
daa
adcb
pop
mov
fdiv
mov
int3
ds
cmp
dec
pushf
lock
stc
xor
in
outsl
fnstenv
xor
jne
mov
mov
mov
inc
lods
shll
sub
mov
xlat
iret
loopne
xchg
xchg
pop
dec
push
push
or
cmp
mov
dec
inc
or
xchg
shlb
ss
xchg
sub
pop
repz
out
fsubs
cltd
cmp
and
dec
fwait
call
fs
mov
pop
jo
pop
xor
xor
sub
and
dec
push
push
xchg
mov
sub
fadd
add
insl
scas
fs
or
sub
repz
xor
mov
subb
xor
jl
cmp
mov
push
add
fiadds
push
in
ljmp
mov
pop
sar
std
jbe
dec
and
cmc
inc
iret
sbb
cmp
mov
mov
cli
shrl
pop
adc
push
int3
mov
fdivs
inc
xor
dec
out
xor
fidivs
movsl
out
fidivs
jne
testl
mov
mov
test
dec
mov
and
call
mov
outsb
pop
dec
shrb
imul
mov
dec
add
or
xor
dec
sbb
lds
mov
dec
cld
mov
mov
sbb
movsl
in
add
fcmovbe
mov
adc
lods
int
outsl
imul
jl
adc
dec
pop
and
test
push
dec
mov
dec
lret
jmp
stos
mov
shlb
dec
iret
repnz
or
out
outsl
add
fnstsw
loopne
aaa
jae
or
adc
inc
sub
xchg
add
jmp
inc
lds
js
rcll
mov
test
add
cwtl
mov
jg
mov
pushf
dec
mov
pusha
inc
aaa
je
sbb
lock
pop
fidivs
cmp
fld
pop
scas
test
or
mov
inc
mov
mov
add
mov
outsb
pop
xchg
ret
adc
lcall
repnz
xor
pop
lahf
xor
cmp
sbb
cli
shrl
ja
loop
fcmovne
mov
lods
cwtl
mov
mov
mov
dec
mov
lret
dec
jae
sub
lock
repnz
mov
dec
aas
mov
lock
mov
mov
fsubrs
mov
cmp
bound
xchg
fidivrs
and
add
arpl
dec
adc
in
adc
movsl
jno
push
sbb
cmp
mov
and
notl
out
cli
insb
cld
loopne
cmp
fldcw
data16
packuswb
ds
push
mov
pop
adc
mov
add
pop
pop
lds
jle
sbb
inc
push
xchg
inc
enter
cli
pop
jp
imul
cmp
dec
inc
or
pop
mov
ss
push
int
mov
jl
add
add
arpl
sub
mov
jle
call
lret
push
pop
xor
aad
repz
test
aaa
xchg
ja
jle
movl
jge
adc
mov
pusha
pop
xorl
adc
cs
shll
int
call
push
sbb
mov
xchg
movsb
jmp
dec
jmp
mov
dec
daa
pop
push
xlat
xor
fldl
rcl
mov
test
push
adc
daa
jge
xchg
cs
sub
mov
mov
push
inc
mov
in
daa
push
pop
jo
lcall
or
out
jle
divl
cmc
mov
mov
add
cmpsb
rcrb
repz
notb
pushf
fnstcw
inc
sbb
pop
lea
sub
mov
insl
leave
cmp
xor
imul
xchg
and
mov
or
test
mov
out
pop
mov
xchg
inc
and
and
fwait
jns
xor
sbb
push
arpl
pop
aaa
daa
ficoml
pop
jecxz
sbb
mov
push
ljmp
imul
stos
push
sbb
adc
scas
xchg
mov
loopne
pusha
int
scas
dec
cmp
adc
repz
mov
daa
add
fists
and
dec
lret
jne
push
xor
pop
add
mov
pop
aas
add
mov
mov
fdivl
dec
pop
popl
mov
mov
pop
cld
fwait
push
ss
mov
pop
imul
push
mov
push
shll
xchg
sbb
jbe
into
adc
and
sub
push
arpl
xor
jo
jmp
or
pusha
repnz
mov
dec
mov
jne
mov
arpl
lock
lret
int
add
aas
lahf
nop
mov
jbe
and
pop
adc
shlb
mov
jbe
xorl
subl
movsb
inc
mov
aas
sub
pushf
inc
loope
sub
std
sub
insb
push
add
insb
and
push
push
lea
leave
add
dec
jne
mov
pop
jl
xor
imul
push
xor
scas
testb
int3
adc
add
int3
pop
popa
cmp
lcall
mov
ljmp
jg
push
jae
ror
hlt
cmpsl
adc
sbb
fidivrs
test
call
jl
xchg
adc
lea
mov
mov
fistpll
and
cld
xchg
jle
imul
pop
loope
fwait
pop
aas
mov
push
mov
hlt
add
push
and
pushf
sub
iret
cmp
jmp
lock
lock
dec
out
cmpb
or
or
std
gs
pop
loopne
loop
add
insl
insl
testl
scas
jne
int
xor
ror
lret
into
and
jl
sbb
add
inc
aaa
mov
dec
adc
lock
fsts
xchg
mov
movsl
dec
jl
xor
in
or
cmpsl
push
and
xchg
mov
inc
pop
sbb
das
adc
xchg
or
xchg
pop
ljmp
lock
setae
pop
outsl
mov
das
sbb
repnz
inc
outsl
push
jl
push
pop
shrb
decl
fcmovnbe
sti
insl
rorl
clc
pop
fcoms
mov
cmp
mov
adc
jbe
xchg
adc
stos
or
cli
aaa
mov
or
and
call
fsubs
int3
lods
xchg
and
ficoml
xor
add
lea
fs
inc
iret
mov
std
out
inc
sub
mov
insb
or
sbb
les
dec
loop
adc
int
push
jbe
cwtl
add
sbb
mov
mov
dec
push
pusha
lret
push
or
loope
mov
jge
out
cli
xor
cmp
inc
xor
sbb
push
add
sbb
repnz
dec
sti
arpl
jns
cltd
lret
hlt
xchg
dec
xor
popa
shlb
pop
rclb
pop
mov
cli
and
mov
or
filds
sti
sub
mov
and
adc
mov
gs
cmp
dec
xchg
inc
popf
adc
cmp
or
popa
inc
or
mov
shll
lea
loop
pop
fldt
jb
mov
idivl
leave
ficompl
out
adc
lahf
imul
sub
pop
cmc
mov
mov
in
outsb
adc
adc
iret
movsl
lods
lahf
mov
fcoml
push
test
sbbb
sub
insb
movups
jmp
mov
imul
mov
stos
xchg
mov
and
and
imul
cmp
inc
ret
add
cmpsb
scas
roll
pop
pop
pop
rol
jp
mov
ror
cld
aam
push
nop
ds
jno
push
fidivl
or
push
inc
add
push
sti
xor
cmpl
mov
jl
cmc
les
sbb
inc
daa
out
push
negl
xchg
hlt
xlat
jo
fisubs
add
lahf
popa
dec
mov
jno
or
jo
andb
into
mov
pop
mov
dec
lahf
es
call
mov
stos
sbb
adc
fcomps
xor
and
add
dec
cs
mov
lret
int
pop
pop
pop
mov
ret
pop
sbb
sbb
push
fst
ja
cmp
scas
dec
cmp
icebp
lods
test
xor
dec
mov
ret
pop
arpl
int
mov
mov
lret
int
cmpsb
inc
scas
insl
xor
fcompl
cmp
dec
xor
sbb
das
cmp
popf
or
cmpsb
test
in
out
mov
sub
and
in
lcall
inc
adc
xor
push
jnp
cltd
sub
out
imulb
xorl
dec
or
inc
inc
stos
or
fisttpl
dec
pop
add
cmp
pop
mov
rsqrtps
arpl
cmp
xchg
cmp
sub
xchg
adc
aad
cmp
sbb
mov
xchg
movsl
lock
clc
xor
fsubs
dec
loopne
and
and
mov
lock
or
pop
cmp
mov
dec
cmp
in
mov
shr
cmp
dec
or
addr16
cli
aam
mov
mov
lea
imul
xlat
and
cmp
adc
add
xchg
mov
sub
fistps
mov
jl
lods
mov
mov
push
mov
xor
mov
nop
orl
rcrl
daa
rcl
push
jl
inc
or
nop
mov
ficomps
repz
insl
mov
call
xlat
cli
sub
ret
xor
push
sbb
faddl
xchg
sbb
or
push
mov
cmp
cmpsb
mov
pop
and
or
mov
rcl
cs
inc
xor
xchg
es
std
adc
add
jl
xchg
mov
dec
mov
fnstcw
frstor
daa
std
popa
and
loopne
fdivl
sub
pop
test
rclb
push
notl
mov
jmp
mov
stos
cld
data16
daa
jmp
or
mull
fcomps
mov
and
dec
scas
sahf
bound
imul
dec
mov
bound
sub
inc
push
and
xchg
dec
mov
popa
out
inc
ljmp
mov
jmp
loop
insl
pop
out
add
sub
jno
arpl
dec
pushf
adc
movsb
cmp
or
out
daa
add
pop
push
mov
push
into
xor
rcrb
test
lea
out
mov
mov
mov
das
vpcmpuw
fisttpl
and
outsl
pop
pop
test
adc
mov
pop
int
fcoms
cltd
dec
aam
inc
loop
xchg
jne
add
fistl
push
imul
hlt
js
mov
pop
dec
sub
divl
mov
aam
dec
jnp
inc
mov
sub
or
or
mov
adc
cmp
nop
sub
inc
mov
jl
push
sub
jg
pop
cmpsb
std
lret
or
cmp
cmp
mov
sub
or
inc
mov
sbb
cmp
dec
or
jle
add
scas
shr
arpl
sbb
inc
popf
movl
inc
adc
add
pop
lcall
test
mov
lahf
adc
or
jne
cmpsl
loop
mov
mov
test
jb
pop
repz
lock
dec
lods
xor
cld
sub
arpl
lea
rcrl
ja
cli
iret
jo
addb
mov
je
test
xchg
and
inc
orl
fistps
cmp
js
dec
cmp
psadbw
pushl
inc
sbb
outsl
sub
stos
or
cmp
icebp
push
push
adc
lea
or
pop
loope
leave
xor
sub
push
add
cld
mov
das
adc
lods
das
xchg
popa
sub
fdivl
bound
pop
sbb
pop
out
push
flds
add
inc
push
testl
mov
movsl
mov
bound
or
push
in
iret
or
jo
push
dec
es
add
xor
push
push
je
mov
push
xchg
imul
jmp
push
cli
pop
clc
out
push
je
xor
rol
jnp
scas
in
lahf
mov
sub
sti
sbb
out
cwtl
sub
or
cmp
data16
std
inc
shl
imul
mov
mov
mov
orb
out
inc
or
mov
mov
dec
sub
movntps
mov
fcompl
ds
roll
xor
adc
lahf
mov
xchg
sbb
xor
loope
loope
xor
sahf
add
sub
xchg
mov
je
sub
or
cmpsb
cmpl
lahf
push
jo
popf
enter
jmp
sub
pop
stos
mov
incb
into
mov
cltd
shll
jmp
adc
pop
xorb
int3
insb
fdiv
add
aam
sub
test
mov
aad
sahf
add
jno
pop
cmp
mov
lea
movsl
inc
les
addb
adc
jmp
or
test
rcl
out
adc
call
xchg
int
mov
adc
mov
adc
jo
pop
push
cs
xchg
sbb
add
mov
add
adc
ret
pop
pop
mov
out
add
sbb
push
pop
into
jns
clc
cwtl
pushf
lock
fistpl
inc
icebp
mov
push
sbb
mov
push
hlt
cli
in
mov
repnz
pushf
sahf
jg
daa
out
xor
popl
nop
mov
or
icebp
cltd
test
sub
popf
xor
dec
scas
push
xor
imul
xchg
int
pop
scas
ret
mov
xor
dec
insb
adc
mov
xlat
pusha
push
repz
sbb
lret
mov
out
jl
pop
jge
adc
dec
ret
addb
out
xchg
movsl
int
jl
and
xor
jns
cwtl
sbb
dec
xchg
int3
ja
das
xchg
cs
out
sbb
push
or
test
je
in
orl
pop
mov
repnz
sub
mov
scas
lods
mov
and
jg
dec
rcrl
xchg
inc
sbb
mov
sub
shl
iret
jnp
in
into
mov
std
jmp
shlb
ja
loop
es
movsl
iret
in
loopne
lret
jae
roll
call
nop
mov
mov
jl
jge
jmp
add
mov
mov
and
jge
adc
aam
sarb
lods
sub
movsb
imulb
jmp
cmp
jno
test
jmp
pop
and
call
or
push
mov
push
mov
sub
cli
pushf
cmp
je
aam
in
jo
xchg
lret
stos
jge
xbegin
out
or
jl
call
cmp
pop
or
inc
es
lods
dec
pop
or
pusha
scas
in
popf
arpl
push
clc
dec
pop
sub
pushf
aas
ret
test
fnstcw
adc
jb
mov
push
xlat
mov
mov
push
ret
inc
test
sub
ljmp
test
mov
dec
mov
cmc
and
jl
pushf
fwait
push
pusha
rorl
sahf
incl
pop
mov
jecxz
jns
push
aam
cmpsb
mov
mov
ja
sbb
add
insb
xchg
imul
fwait
sub
cld
cmp
xchg
into
outsl
push
icebp
mov
push
fld
cmpl
outsl
cmp
jmp
dec
nop
jb
or
scas
aad
add
cmc
shrb
adc
xor
mov
mov
fs
punpckhbw
or
cmp
popf
hlt
or
dec
fisubl
mov
repz
xchg
mov
xlat
loope
int
xor
dec
add
dec
mov
xchg
lock
sub
lods
call
pop
sbb
mov
sub
std
dec
ljmp
push
inc
mov
idivb
jmp
int
inc
pop
pop
lock
inc
into
or
or
adc
ret
sbb
out
mov
pushf
cmp
sbb
dec
pop
jmp
movaps
cmp
jl
dec
out
and
push
push
cmp
sbb
aad
jbe
and
jns
test
shll
gs
lea
or
and
ja
push
mov
push
jmp
or
scas
lea
xchg
fldl
mov
mov
or
lods
inc
push
rcrl
movsl
xchg
jo
jne
and
test
jge
jno
pop
sti
out
and
cmp
mov
mov
rorl
movsb
jb
sti
movsl
lret
mov
adcb
pop
xchg
je,pt
or
adc
aam
xchg
push
pop
pop
rcll
imul
cmp
adc
mov
dec
mov
mov
xchg
push
loop
jne
dec
lock
sub
fidivl
loop
push
push
imul
repz
lret
mov
cmp
mov
std
mov
mov
push
test
in
and
sbb
push
add
mov
mov
gs
cmpsl
daa
dec
xor
mov
mov
pop
push
ret
ficomps
ficoms
cmp
push
or
jae
das
mov
lock
ret
mov
inc
sbb
adc
jge
pop
pop
jmp
js
in
dec
fdivp
stos
push
test
xchg
jmp
ljmp
insl
stc
test
fstps
cld
push
inc
out
data16
xor
fstpt
inc
mov
sub
mov
into
push
mov
inc
popf
cmpb
shlb
cmp
push
fwait
imull
and
jmp
and
int3
cmp
mov
mov
or
je
in
scas
scas
int
pop
cmp
jb
add
bound
imul
pop
adc
mov
decl
and
lret
mov
mov
cmpsl
fistpll
sbb
or
les
sub
das
cltd
xor
in
xor
stos
or
fldcw
sub
mov
out
xor
call
cmp
mov
xchg
outsb
arpl
mov
cmp
jne
inc
loop
or
jle
outsb
das
shl
adc
inc
mov
adc
mov
add
in
icebp
in
js
outsb
push
jp
repz
push
nop
out
arpl
adc
js
and
lods
outsl
inc
sub
add
clc
hlt
rorl
pusha
lea
xchg
test
imul
jg
sub
bound
bound
in
lahf
sbb
in
cmpsl
jge
cmpsb
repz
divb
dec
adc
shll
js,pt
cmc
fwait
mov
leave
xchg
and
cmpsl
popf
or
int
in
mov
xchg
data16
pop
pop
push
xor
adc
scas
jbe
add
fstpl
es
mov
jae
loopne
pop
loope
jl
insb
inc
cmpsb
pop
jae
sub
jnp
out
jb
xlat
dec
in
aam
sub
ret
pop
cmp
cltd
pop
cmp
fsubl
lahf
add
gs
mov
inc
push
push
cmp
mov
mov
pop
out
daa
shrb
ret
cmp
int
setp
rolb
sahf
lods
sub
lcall
or
push
das
and
das
dec
jecxz
cmc
push
dec
icebp
shlb
sbb
iret
rol
cwtl
sbb
das
rorl
cld
cmp
or
dec
adc
outsb
scas
dec
dec
dec
jecxz
and
mov
jp
push
mov
clc
add
or
ljmp
jae
les
xor
jb
pop
js
sbb
stc
mov
jo
fidivl
xlat
aad
sub
mov
mov
lea
outsb
jp
out
push
roll
mov
ds
add
pop
mov
push
jne
aam
dec
sti
inc
or
cmp
and
and
xor
imul
xor
jnp
add
lahf
aaa
lods
popa
bound
sbb
stc
repz
out
rolb
or
scas
ja
pushf
add
ds
imul
repz
mov
sti
outsb
add
pop
and
leave
or
cmp
mov
into
es
mov
outsb
outsb
sub
mov
popa
es
cltd
jl
or
sahf
fwait
xchg
loope
int
xchg
cmp
fisubrl
jb
jmp
mov
subl
or
mov
add
std
sbb
pusha
enter
mov
jmp
cmp
test
inc
rcrb
and
sahf
pop
and
jne
lds
mov
stos
repz
or
push
inc
jnp
sbb
stos
push
sbb
xchg
mov
pop
sub
inc
adc
data16
aad
mov
loope
repnz
jg
clc
jno
xchg
add
inc
repnz
and
inc
outsb
mov
pusha
ds
cmp
sbb
pop
clc
mov
push
xor
or
xchg
fninit
mov
push
add
popa
mov
aas
inc
mov
mov
mov
cwtl
mov
pop
adc
ds
lahf
pop
dec
imul
daa
fwait
and
xlat
dec
mov
das
fnstcw
or
insl
pusha
cmp
adcl
out
test
inc
aaa
or
and
dec
push
sahf
pop
aas
dec
jne
clc
adc
or
ds
add
into
xchg
ja
or
push
mov
loop
movsb
movsl
aad
mov
mov
push
add
add
cld
jp
jns
adc
xlat
scas
sbb
out
inc
mov
arpl
jp
ljmp
adc
or
in
add
inc
and
sub
loopne
leave
addr16
repnz
clc
dec
sti
dec
jge
mov
and
add
xchg
pushf
and
xor
or
iret
cmp
ja
adc
jge
and
pop
fs
jl
pop
sbb
rol
mov
and
pop
sahf
push
ljmp
repnz
xchg
pop
push
test
adc
arpl
in
pop
cmpsl
popl
xchg
dec
push
sbb
pusha
sub
lea
and
pop
pop
divb
mov
data16
loopne
popf
popf
cmp
rcl
pop
popf
into
cmp
mov
outsb
js
jns
jne
ret
mov
adc
or
xor
out
pop
mov
xchg
popf
daa
in
mov
cld
push
aad
lea
aas
pop
mov
mov
dec
dec
and
scas
fcmovb
xlat
in
psubq
push
jp
call
mov
xchg
sbbb
lahf
clc
mov
jmp
dec
adc
pop
mov
dec
inc
jle
imul
into
pusha
xorl
test
loope
aam
mov
mov
xchg
mov
les
out
inc
les
mov
mov
repz
in
and
sbb
addr16
imul
fcomi
and
push
xor
mov
loopne
mov
das
dec
mov
pushf
ja
rcl
dec
out
je
int
aad
xchg
or
jl
push
lods
xor
fucom
mov
jnp
mov
xor
xchg
and
imul
mov
out
popa
fidivrl
mov
out
or
xchg
sahf
push
aam
popf
cmp
pop
stc
cmpsl
nop
fsubrp
inc
mov
hlt
nop
movsl
dec
push
nop
movl
mov
inc
xchg
fwait
in
and
ja
repz
call
roll
js
and
inc
adc
idivl
arpl
fsubrp
add
or
in
sbb
inc
jge
or
ret
call
or
daa
clc
dec
dec
fistl
std
mov
and
nop
scas
xchg
lret
cmpsl
out
pop
ss
mov
jne
das
cmpsb
mov
andb
jp
add
lods
ret
push
mov
jmp
sbb
and
out
aaa
adc
pop
pop
jns
push
sub
stos
clc
xchg
lcall
mov
xchg
fisttps
imul
lea
mov
xor
rolb
aaa
inc
imul
sub
test
jge
cli
jbe
lahf
xchg
leave
pop
pop
and
xchg
adc
and
test
xor
sti
push
push
enter
mov
inc
mov
imul
xchg
xor
out
pop
ss
fnsave
lods
aas
test
imul
or
and
movsl
and
lret
addb
test
vfrczps
mulb
fiaddl
push
test
jecxz
adc
jle
inc
ljmp
jne
mov
push
cli
cmp
popf
orl
outsl
inc
mov
jno
adc
sub
or
incl
in
ret
adc
add
call
shrb
jbe
jmp
dec
lahf
std
in
lcall
xor
push
sub
xor
rol
xor
inc
xor
and
gs
xchg
jge
lock
cmp
inc
je
outsl
xchg
pushf
outsl
aam
repz
fwait
addb
mov
jmp
call
lods
or
mov
or
arpl
inc
dec
push
push
lcall
push
in
mov
bound
xor
js
xchg
movsl
lret
in
fimull
andl
lret
lods
mov
jecxz
xor
inc
movsb
xchg
movsb
mov
xchg
xor
popf
sub
push
adc
dec
out
pop
sahf
sub
push
add
dec
push
xor
shll
stos
loopne
cmp
ja
arpl
ret
out
dec
popf
add
xchg
test
sub
xor
add
mov
adc
decb
jne
aam
push
xor
mov
pop
push
sub
inc
rcl
imul
mov
cmp
lock
popa
imulb
mov
cli
aad
cmpsl
in
mov
add
stc
mov
pop
cli
adc
lcall
aaa
cmp
xchg
adc
pop
call
or
faddl
fwait
dec
cwtl
inc
lcall
std
out
fs
jnp
pop
mov
aad
ds
fwait
or
scas
jo
rcrl
loopne
std
out
sbb
dec
mov
cmc
insl
sub
call
push
mov
xchg
xchg
fucom
test
adc
ret
adc
movsb
inc
daa
xlat
cs
lods
into
aas
or
bound
adc
cwtl
mov
jle
clc
in
and
rolb
into
xchg
sbb
movsb
fdivl
sub
xlat
inc
push
jae
daa
lcall
jecxz
les
loop
lods
pop
notl
sahf
push
adc
jnp
ret
aaa
jno
sub
xchg
add
stc
dec
aad
mov
cld
imul
inc
mov
jg
sbb
shlb
pop
mov
out
addr16
pusha
sub
pusha
fwait
dec
dec
push
sbb
stos
out
push
mov
xor
cld
mov
cmp
add
es
rcll
and
add
sbb
mov
imul
or
leave
out
fistpll
add
scas
in
and
xchg
je
es
or
add
sub
pop
jp
sub
call
test
test
mov
or
push
adc
adc
mov
xchg
push
xchg
les
mov
nop
out
lcall
aaa
dec
push
jns
and
imull
je
cmp
xchg
ret
aad
jecxz
iret
das
dec
lods
arpl
ret
out
sbb
add
add
dec
pop
and
mov
add
clc
lret
out
jae
or
shlb
outsb
sub
out
in
fstpt
cld
push
sbb
popf
jb
mov
jl
xchg
mov
xchg
pushf
add
add
stos
aam
jle
test
add
mov
repnz
in
pop
movb
ret
xor
insl
ljmp
imul
std
cmc
lods
adc
inc
mov
mov
mov
ret
sub
outsl
inc
xor
movsb
inc
push
and
push
or
ds
xor
xchg
out
popa
enter
mov
mov
lea
pop
cli
cmpsb
mov
xchg
into
jae
insb
test
lods
sub
ret
mov
mov
fstpt
jae
adc
rcrl
jno
mov
cmp
scas
cmpsb
nop
sub
mov
push
sbb
sub
mov
imul
mov
xor
xor
add
and
lock
je
test
cmc
cltd
mov
push
les
std
in
xlat
scas
outsb
punpcklwd
cmp
mov
scas
sub
xchg
pop
fadd
rorl
push
xchg
cwtl
popf
add
cltd
lds
stc
add
clc
stos
mov
aad
xchg
out
pop
pop
mov
imul
mov
mov
sub
mov
ficompl
push
mul
mov
into
mov
fwait
xchg
and
sarb
add
aad
cli
inc
data16
js
call
mov
push
inc
pop
sub
inc
lcall
push
int3
jge
add
bound
xchg
shlb
push
es
in
mov
dec
jbe
add
pop
shrl
inc
mov
cltd
fs
mov
dec
in
sbb
pop
adc
shlb
inc
loope
jmp
iret
or
jo
cs
and
das
and
ss
push
add
ret
cli
xchg
add
enter
cmp
scas
adc
sbb
clc
sub
sub
sub
sub
sub
aaa
mov
pop
rcrb
sarl
or
nop
push
fdivrs
xchg
cld
cs
ret
sbb
sarl
xor
xchg
pop
jge
or
loop
test
dec
pop
shrb
loopne
lahf
aaa
pop
je
lea
ret
incl
or
aam
xor
dec
in
loope
mov
mov
inc
pop
mov
mov
push
jnp
cmp
dec
daa
or
jno
cmpsl
out
jno
jb
shlb
fnstcw
fcos
xor
add
mov
add
outsb
inc
jg
rclb
or
in
add
cmpsl
dec
or
les
sub
sub
push
ret
scas
imull
mov
adc
jae
rorl
out
mov
pop
jbe
xchg
or
pop
sahf
aad
xchg
adc
shll
mov
pop
testl
sub
fimuls
mov
push
pop
test
adc
daa
or
inc
xor
leave
mov
das
xchg
dec
in
mov
lahf
stos
enter
insb
mov
lret
icebp
fildl
mov
pop
lock
jmp
pusha
cmpsl
pop
ds
in
shll
cltd
xchg
fs
mov
mov
push
and
mov
mov
xor
mov
xchg
sub
shl
ss
pop
push
cmp
aas
mov
push
popa
jecxz
mov
dec
adc
sub
jl
lahf
cld
inc
adc
pop
daa
fcoml
push
rclb
xor
dec
jo
jg
jl
dec
mov
or
fdiv
mov
nop
out
jb
insl
mov
mov
inc
sbbb
xchg
jl
mov
add
dec
test
jo
dec
cmpsl
inc
add
pop
jmp
insl
testl
cmp
call
scas
nop
xor
add
mov
nop
xchg
adc
mov
adc
std
lcall
adc
xchg
pop
lock
aad
dec
jmp
test
dec
lock
jge
jle
pop
aas
mov
aaa
pop
lret
xor
push
xchg
in
mov
cli
dec
mov
push
in
or
inc
adc
test
std
aaa
push
movsl
mov
mov
insl
or
cs
in
or
imul
cmpsb
fisubrl
cs
mov
sarl
lahf
test
fdivrs
dec
xlat
iret
adc
data16
test
sub
mov
shl
mov
int3
stc
jmp
push
add
into
std
or
sbb
lea
or
xorb
cs
xchg
jns
jge
dec
jns
add
pop
xchg
mov
enter
aas
jae
sbb
and
mov
stc
andb
sti
sub
mov
sub
loope
lret
jb
ja
add
ss
dec
loopne
dec
inc
pop
repz
sahf
in
lods
sbb
stos
add
and
xorl
jl
inc
stos
mov
or
mov
or
imul
mov
mov
mov
cltd
cwtl
ficompl
pop
repnz
inc
into
cld
clc
scas
xchg
sbb
ljmp
dec
subl
stc
mov
pop
cmc
sarb
add
xchg
and
inc
adc
cmpsb
push
inc
in
mov
adc
push
mov
dec
dec
mov
push
call
pop
jmp
cmc
add
dec
loope
push
xchg
rol
xchg
addr16
in
mov
cmc
adc
out
mov
ret
mov
push
aas
xor
sbb
ss
add
in
and
add
xor
mov
xchg
shl
decb
pop
xchg
or
add
xchg
cmp
gs
adc
jae
mov
repnz
gs
or
movsl
xchg
dec
sub
daa
mov
mov
inc
jmp
stc
lret
adc
imul
pop
xor
dec
and
dec
aam
push
mov
sbb
decl
xchg
xorb
leave
inc
data16
jl
xor
cmp
mov
icebp
cli
sub
push
and
mov
lock
das
xor
push
sub
aas
enter
and
jle
and
incb
xchg
push
cltd
mov
xchg
mov
fisttps
jne
and
subl
les
aam
lret
nop
jge
sub
mov
push
xchg
jl
push
fdivrl
add
pop
mov
xlat
sub
add
xchg
xchg
fidivs
insb
sub
lcall
cld
shll
push
stos
test
sub
movsb
and
lock
incb
mov
jp
stos
dec
push
mov
xor
add
push
cmp
sbb
sbb
cmp
xchg
imul
sbb
jnp
dec
inc
movsb
push
test
cs
pop
js
inc
cmp
jecxz
andb
imul
xchg
push
aad
sbb
lds
and
mov
push
ds
jo
inc
cltd
test
fmuls
outsl
add
lock
push
cwtl
mov
mov
lret
or
arpl
arpl
mov
icebp
sbb
adc
clc
in
test
das
adcl
cli
xlat
lods
push
mov
test
mov
push
cmp
js
pop
dec
scas
jp
mov
sbb
add
jmp
xchg
in
in
addl
jecxz
adc
das
xor
je
inc
adc
cmp
inc
sub
rsqrtps
arpl
fsubr
std
cmpsl
mov
add
in
js
fsubrl
xor
xor
loop
pusha
xchg
xlat
ja
pop
mov
mov
clc
jp
mov
and
test
mov
fnstsw
int3
jmp
cmp
jge
mov
pop
iret
pop
ror
rorl
cmp
adc
cmp
pop
pop
ss
add
scas
les
aam
stos
leave
pop
and
push
mov
inc
test
stos
mov
jbe
push
sbb
inc
sahf
push
ds
enter
roll
das
mov
lock
inc
mov
cmp
test
outsl
aas
mov
or
pushf
pushf
cmp
add
pop
sti
imul
dec
or
cmp
aad
fadd
push
xor
in
pop
push
mov
cld
jbe
mov
cmp
xchg
shll
sub
dec
xor
inc
inc
frstor
incl
push
mov
lcall
test
push
add
pusha
dec
inc
ljmp
sub
outsl
or
iret
sahf
xchg
sbb
xor
mov
aam
icebp
ret
dec
or
sbb
and
stos
cmp
test
in
sahf
outsb
insl
imul
movsl
adc
mov
sbb
xor
clc
lret
ljmp
xchg
aas
or
es
rclb
jmp
arpl
jmp
cld
mov
mov
nop
mov
hlt
lock
rorl
ret
push
loope
popl
xor
sti
sub
xchg
mov
push
pop
xchg
gs
push
sub
push
pop
mov
bound
xor
push
mov
inc
xchg
daa
jmp
ds
mov
cmp
add
je
hlt
cmpsb
repnz
pop
xchg
rcrl
jle
addb
jge
xchg
ffreep
xor
hlt
lea
xor
icebp
lods
push
lret
insb
cltd
mov
push
orb
fiaddl
pusha
insb
inc
add
test
fwait
and
movsl
cmp
inc
or
jl
pop
pushl
and
rcr
arpl
sbb
repz
sbb
popf
jl
jl
adc
jo
add
pop
sti
xor
push
fbstp
or
ja
incb
push
inc
addb
jge
adc
and
test
mov
xorl
jge
out
mov
imul
mov
decl
cwtl
push
mov
or
xchg
and
sbb
mov
repnz
iret
pop
push
mov
mov
test
popa
push
js
es
in
push
pop
in
sub
icebp
xchg
add
mov
js
pop
jl
divb
push
pop
or
push
jmp
add
adcb
cmp
push
lds
sub
and
xchg
adc
dec
cmpsl
xchg
fimull
jno
add
push
int3
pop
nop
popa
mov
jl
mov
push
sbb
mov
ficoml
sbb
lods
push
into
mov
dec
lds
xchg
sub
cltd
add
xor
loopne
push
aaa
mov
inc
movsb
jmp
movsl
or
fxch
ret
mov
xchg
aas
add
or
mov
out
mov
pop
or
insl
lcall
add
imul
dec
test
aas
push
js
dec
xchg
jae
mov
lret
shll
lret
insl
std
scas
pushf
pop
call
loop
mov
fdivrs
pushf
std
cmp
inc
mov
insb
fwait
out
inc
and
out
lcall
cmp
cmp
push
sub
aam
push
rcrl
outsb
mov
popa
int3
jnp
jo
jbe
dec
jb
ja
sahf
cmp
inc
dec
ljmp
jle
dec
pop
and
out
test
sub
inc
jns
pusha
dec
daa
mov
fildll
fisubl
pusha
dec
pop
push
lods
out
dec
sbb
lods
into
xor
and
mov
lock
cmc
xor
inc
push
daa
fsubl
cmc
int
shlb
push
cs
pop
push
shlb
mov
out
add
fisttpl
cld
cmpsb
mov
push
cmp
fdecstp
aam
xchg
push
lret
jnp
test
pop
cmp
pop
and
div
sub
scas
mov
jns
mov
add
les
les
mov
dec
mov
fisubrs
push
inc
mov
jne
inc
shrl
jmp
div
lds
pusha
sbb
pop
popa
ljmp
push
aad
push
cmpsl
js
add
cmpsl
dec
iret
and
push
or
daa
or
cltd
jg
push
inc
add
push
mov
dec
mov
ret
loop
xor
fisubrl
and
cmp
iret
and
pop
push
dec
lods
fisttps
mov
aaa
jo
mov
mov
add
pop
lea
leave
cmp
jne
adc
addr16
movsb
loopne
xchg
pop
sub
repnz
sub
outsb
cld
cmc
cmp
pusha
sbb
inc
scas
icebp
xor
jnp
xlat
jne
icebp
fildll
pop
out
lahf
popf
xchg
popa
out
mov
cmpsb
leave
jo
or
add
rol
shl
sub
cmp
fsubrs
das
pusha
sub
dec
int
sub
mov
aas
mov
jmp
sbb
mov
sbb
mov
loop
ror
dec
push
dec
jg
push
enter
insb
call
test
nop
jg
mov
iret
jp
inc
mov
dec
fldenv
mov
repz
mov
ja
test
sub
sbb
pop
out
popa
movsb
inc
ret
ljmp
push
fs
pusha
dec
inc
mov
outsl
mov
mov
inc
push
and
clc
fldt
inc
xchg
dec
fists
sbb
lahf
in
pop
mov
clc
les
cwtl
imul
in
ljmp
mov
sbb
jl
jg
scas
fwait
add
fstl
mulb
pop
fisubs
cmpsb
add
xor
sub
arpl
push
test
cmp
dec
cmpsb
out
mov
jne
adc
sbb
fdivrl
sti
push
adc
mov
dec
jmp
outsl
mov
push
fbld
sbb
xor
nop
dec
les
arpl
insl
inc
add
inc
mov
or
mov
ss
lods
iret
testl
out
test
lcall
mov
and
dec
out
maskmovq
outsb
repnz
lea
xchg
inc
das
repnz
jge
pop
xchg
xchg
ljmp
sbb
or
pushf
inc
xor
ja
cmp
pop
pushf
pop
dec
mov
adc
mov
xchg
pop
test
sti
lods
add
sti
jbe
lock
ret
inc
cmpsl
or
mov
xorl
mov
movsl
push
and
es
xor
pop
incb
sub
lock
test
les
fidivrs
cmp
pop
dec
sub
lods
or
push
sbb
jg
mov
or
movsb
jle
inc
test
sbb
lea
fsubr
fmuls
push
mov
sbb
ljmp
pop
cmp
or
xchg
sbb
icebp
mov
adc
mov
dec
sahf
xchg
mov
jnp
rol
push
jecxz
outsl
jns
ret
in
ja
mov
scas
pop
fdivl
into
jns
xor
xor
mov
iret
mov
push
mov
sbb
push
mov
jno
cltd
shl
xor
mov
sub
sub
push
scas
sbb
pop
dec
mov
roll
adc
dec
push
push
and
addr16
mov
sbb
mov
shl
pop
dec
out
or
test
shr
cld
mov
pop
push
push
aad
je
lods
ds
pop
jmp
cld
xchg
mov
clc
xlat
xchg
sbb
cmp
and
popa
adc
loopne
test
sbb
mov
ds
fdivr
jb
jle
mov
std
jmp
in
stc
sbb
xor
sub
mov
mov
lds
add
cmp
lock
cmc
sub
jmp
fisttpl
cmc
cmp
pop
jp
inc
jl
arpl
loopne
outsb
mov
inc
int3
jns
sbb
mov
cmp
sub
cwtl
sbb
sub
scas
rol
push
sahf
jg
or
xchg
jb
xor
pop
xchg
loopne
and
ds
push
xor
frstor
sbb
mov
and
loop
jle
addr16
mov
inc
xchg
rsm
cld
std
jnp
jb
and
xchg
add
sahf
pushf
shll
gs
call
push
xchg
mov
insl
jle
sbb
inc
xchg
stos
shrb
jbe
push
add
jmp
pop
inc
ret
mov
sarb
inc
inc
pop
mov
stos
sub
mov
mov
jecxz
dec
push
int3
add
mov
mov
fbstp
adc
and
fadds
pop
add
dec
lds
mov
rcrl
xor
mov
bound
xlat
decl
and
inc
xchg
repz
or
loopne
pop
jg
pop
sub
mov
xchg
add
cmp
lods
fwait
je
in
mov
mov
lcall
dec
xchg
inc
ds
iret
popf
pop
inc
jl
mov
xor
push
or
sar
outsb
repz
sbb
arpl
fst
repnz
jmp
sbb
test
out
inc
push
pop
ret
mov
fs
push
push
mov
add
pushl
int
into
and
imul
fdivrp
lahf
aad
dec
lods
cmp
or
test
or
call
mov
mov
jo
fwait
repnz
jnp
hlt
add
js
add
adc
mov
int
pop
xchg
mov
dec
int
xor
inc
std
icebp
mov
adcb
push
xchg
mov
add
sub
adc
shll
pusha
add
dec
sahf
cmp
ret
fnstenv
mov
cmp
mov
cmp
push
mov
sbb
negb
xchg
loope
xchg
das
int3
xchg
pop
xorl
push
icebp
imul
mov
jmp
add
ljmp
add
cwtl
outsb
out
push
loope
scas
add
movups
push
iret
or
pop
data16
push
test
push
cmc
fsubrs
aad
fidivl
fsts
cmp
dec
jae
mov
loope
push
jbe
adc
lods
mov
inc
xlat
lds
bound
jmp
adc
dec
push
mov
hlt
aas
mov
cmpsb
cmc
cs
sub
xor
cld
xlat
push
push
leave
popf
pop
push
adc
in
loope
and
push
imull
sub
inc
sbb
arpl
push
das
adc
data16
comiss
xchg
mov
popf
inc
mov
mov
jmp
push
sbb
popf
or
lahf
out
pop
sub
loopne
rcl
div
mov
add
icebp
fwait
arpl
cwtl
bound
dec
outsl
cltd
sbb
lods
scas
push
lods
repz
mov
dec
iret
xchg
daa
sbb
adc
xor
test
fcmovne
mov
lahf
inc
dec
push
cmp
clc
pop
mov
mov
and
mov
fisttps
fcoms
out
xor
into
add
shrb
pushl
push
insl
and
pop
xchg
repnz
dec
add
cmpsb
and
and
push
rolb
lods
inc
mov
mov
dec
xor
mov
jmp
loope
push
lods
add
dec
cwtl
mov
jo
in
mov
ss
xor
sub
xor
lea
mov
xchg
lea
repz
push
jnp
cwtl
cmp
mov
push
cmp
insl
outsb
dec
lret
repz
dec
jge
dec
sahf
xor
xchg
shl
xor
push
push
add
xchg
les
inc
decb
fistpll
clc
orb
call
mov
movsb
mov
jmp
pop
stc
cmpsl
pop
std
or
popf
fisubs
dec
mov
mov
and
loopne
sbb
cmp
int
scas
ds
sbb
enter
stc
push
jg
mov
dec
jg
inc
xor
push
das
pop
inc
or
mov
jg
mov
jmp
push
push
frstor
lods
push
mov
in
incl
pop
sbb
mov
popl
iret
xor
jg
in
scas
in
rclb
mov
test
add
inc
or
add
fnstcw
adc
pop
mov
add
clc
mov
ret
push
rclb
adc
stos
add
sbbl
call
push
repnz
adc
mov
adc
mov
popl
jle
out
lahf
insb
or
mov
mov
dec
stos
in
lea
dec
repnz
or
jecxz
xchg
cmp
adc
pop
jg
jno
cmp
lret
jns
add
xchg
sbb
jno
loope
test
popa
cmp
sbb
inc
jno
cmc
pop
and
pop
popa
sub
stos
push
les
pop
sbb
cmc
mov
fucomip
sub
rorl
sub
add
jnp
xor
bound
inc
push
mov
and
add
aas
popa
cmp
in
test
sbb
cmp
push
and
mov
arpl
into
push
add
out
xor
cld
or
std
push
xchg
mov
mulb
ja
test
mov
emms
aaa
repz
sbb
popa
stc
add
mov
lahf
hlt
in
mov
imul
xchg
xchg
xchg
inc
fsub
and
fdivrs
insb
pop
xor
xor
loop
test
sahf
js
loop
and
push
dec
adc
mov
outsl
and
xchg
stc
inc
or
xor
adc
popf
js
bound
loopne
daa
mov
add
loopne
cmp
ds
in
push
cld
dec
loop
sysexit
leave
inc
jecxz
scas
dec
xlat
es
xor
out
jecxz
mov
sahf
lret
adc
pop
mov
lret
lods
sbb
xchg
rorl
dec
or
pop
push
ss
push
cmpsl
mov
pop
jnp
push
xor
mov
imulb
test
andb
xor
scas
pop
dec
jmp
ljmp
mov
mov
xchg
jle
pop
xchg
neg
stos
sarl
mov
insb
cmp
push
addr16
cmc
cmp
sub
cli
push
or
cmp
adc
jno
daa
pushf
jg
aaa
aam
adc
aaa
scas
outsb
shll
inc
xor
lret
sub
dec
sub
mov
lahf
adc
sbb
mov
cmc
cmp
nop
adc
jle
aam
pop
stc
inc
fsts
and
push
jle
push
xor
test
inc
out
jl
xor
dec
out
enter
enter
out
lret
fldenv
loopne
xchg
leave
cli
int3
das
js
and
lcall
loopne
cmp
call
sub
cmpsl
adc
mov
inc
lods
inc
fisubl
xchg
mov
inc
push
xchg
scas
js
mull
cmp
add
push
push
lods
xor
hlt
push
xor
std
jo
lahf
push
sbb
mov
iret
mov
es
rorl
incb
cmp
mov
lods
mov
fwait
xor
xlat
cmp
sub
and
sub
xchg
cmp
outsl
cmc
xor
pop
xchg
add
xchg
adc
fidivs
imul
aad
mov
xorb
push
arpl
push
cmpsl
xor
sbb
inc
insb
cmpsl
push
loopne
movsl
lods
sbb
sbb
jbe
pop
jno
clc
imul
ficoml
sbb
dec
scas
sub
xchg
outsb
js
dec
push
rol
fidivrs
cmp
push
rorl
lds
sbb
or
sahf
div
out
imulb
pop
shll
loope
int
jo
push
out
mov
scas
jnp
str
jns
pop
sbb
and
mov
jmp
pusha
arpl
adc
ret
adc
mov
inc
mov
sub
push
stos
mov
inc
pop
fcmovb
xor
sub
add
add
push
test
cmpsl
mov
inc
inc
lods
pop
adc
fwait
std
jno
cmp
mov
sbb
test
mov
js
mov
shll
jae
scas
outsl
cmpsb
data16
mov
loop
fwait
and
xchg
xlat
sahf
lds
gs
test
leave
pop
or
mov
xchg
repz
scas
xor
jnp
hlt
jbe
adc
stos
scas
subb
dec
or
or
loopne
jno
jecxz
fdivl
cli
add
and
inc
inc
push
shr
aaa
lods
mov
sahf
fs
fmul
or
andl
pop
in
cmp
mov
cld
mov
pusha
into
or
inc
push
dec
cli
mov
add
and
fs
adc
mov
in
jb
xor
dec
dec
cmp
imul
int3
std
dec
sub
mov
cmp
pop
and
dec
outsb
cs
jg
mov
inc
adc
or
in
and
stos
mov
imul
lds
movsl
arpl
cmpsl
shll
cmp
sbb
push
add
push
cmpsl
daa
aaa
shll
inc
push
cmp
call
mov
jbe
inc
add
dec
mov
push
fwait
dec
mov
add
cmp
es
xchg
add
andb
outsb
dec
lret
mov
jmp
das
sbb
mov
push
fdivrl
insl
imul
or
sbb
mov
std
push
imul
cmpsb
add
hlt
push
jp
sub
shlb
xchg
fs
ds
lock
xor
bound
pop
mov
push
mov
mov
sbb
mov
jno
mov
das
shll
mov
nop
es
cmp
insb
neg
cld
sti
dec
cli
hlt
xchg
jno
mov
hlt
mov
repz
push
hlt
xchg
mov
pop
stc
sub
jno
cmpsb
ficomps
adc
add
cltd
test
clc
push
pop
test
sbb
add
sub
and
mov
scas
cmp
cmp
jbe
jae
inc
inc
jg
and
push
iret
mov
out
mov
sub
cmp
mov
sbb
sub
mov
rcl
xchg
xchg
in
jbe
jns
lcall
xor
decb
insb
aas
insl
jp
jbe
dec
xor
pop
mov
aam
xchg
pop
imulb
mov
cwtl
mov
xchg
mov
adc
bound
ret
test
pop
inc
mov
ret
push
jmp
lock
ror
stos
sti
jne
dec
fcmovb
xchg
loop
shll
popf
push
leave
inc
lods
bound
rorb
or
mov
xchg
in
mov
repnz
mov
xchg
stos
jne
push
bound
hlt
and
dec
sbb
jl
mov
mov
call
popa
jnp
jae
mov
rolb
sbb
add
pop
mov
add
test
inc
int3
jo
shll
mov
mov
xchg
rcll
jmp
mov
sbb
cwtl
shlb
sbb
xchg
push
xchg
mov
inc
lret
or
adc
pop
mov
mov
xchg
pop
push
es
bound
lds
outsl
dec
cli
pop
dec
dec
sbb
mov
push
mov
jle
popf
sti
mov
add
inc
cmp
push
pushf
out
int
hlt
cmp
out
inc
inc
out
inc
cmpsb
ljmp
flds
enter
int
sti
push
aad
xor
sub
shrl
add
fnstsw
xchg
sahf
lods
adc
ljmp
mov
and
mov
pop
jo
inc
nop
mov
movsl
dec
leave
pop
pop
adcl
cld
fadds
lret
aad
in
mov
pop
push
push
jnp
dec
sbb
mov
arpl
dec
shrb
test
popa
shlb
xchg
fs
stos
lock
pop
cmp
lods
adc
mov
cwtl
pusha
pop
gs
cmc
add
push
jmp
jecxz
ret
stos
cmp
cwtl
repnz
xchg
or
sub
cmp
xchg
das
mov
rcrl
add
int3
xchg
mov
pop
xor
mov
jge
movsl
or
xlat
lods
push
inc
adc
mov
popl
pop
jmp
lods
dec
mov
mov
jno
or
hlt
push
xchg
leave
in
push
add
iret
enter
mov
pop
pop
bound
into
xor
std
filds
lods
xchg
les
pop
dec
pusha
dec
aam
lahf
push
out
sti
fisttpll
pop
rcrl
pop
inc
mov
sahf
and
sub
sbbb
lahf
adc
pop
outsb
jno
scas
icebp
aad
arpl
pop
popl
int
jbe
sbb
inc
xchg
imul
xchg
or
push
xchg
aaa
jle
inc
push
pop
dec
data16
fistpll
repz
jge
incb
fdiv
adc
mov
mov
xchg
jle
mov
mov
std
push
inc
push
test
js
cmp
test
mov
aas
xchg
in
scas
mov
lea
push
shll
and
test
add
pop
test
pop
lods
test
ret
pop
test
call
mov
dec
in
outsb
and
lods
cmp
les
popa
or
sub
mov
loop
or
data16
push
mov
inc
mov
test
fildl
pop
sbb
insb
out
mov
fcompl
push
and
sbb
addl
ror
test
jg
outsb
icebp
repnz
pop
dec
xorl
mov
adc
test
ret
leave
adc
rorl
mov
stc
insb
mov
lds
xchg
testl
xor
and
ret
nop
repz
enter
inc
and
cmpsl
pusha
or
inc
cmc
iret
pop
stos
sub
or
jbe
movsb
bound
stos
jmp
push
out
lahf
cmp
xor
lcall
fdivrs
in
movsl
imul
xchg
jno
icebp
inc
ja
mov
pop
or
xchg
inc
or
cmp
fucomip
sub
loope
cmp
rcr
sbb
movsb
divb
cwtl
cmp
push
sbb
adc
out
lcall
fnstenv
lods
cmp
gs
mov
xor
push
int3
mov
jmp
andl
cmpsl
mov
or
popf
cmp
push
jl
mov
je
out
divb
pop
adc
xor
loop
dec
std
shl
xlat
mov
leave
call
adcb
sub
out
push
sbb
iret
movsl
mov
pop
ss
jbe
cmp
insl
shl
imul
mov
cmpsb
jo
outsl
ss
call
dec
mul
dec
pop
mov
inc
dec
adc
mov
cld
mov
or
scas
dec
lcall
xlat
jmp
pushf
js
or
addr16
cwtl
mov
xor
jge
in
cld
jb
mov
xchg
push
daa
add
movsb
push
fdivr
xchg
ja
inc
out
jmp
fiadds
outsb
xor
pop
in
sub
ss
xchg
movsb
xchg
cmc
jl
sub
je
push
adc
mov
mov
pop
clc
in
nop
out
pop
repnz
push
in
mov
and
or
aam
aaa
pop
cmc
cmpl
mov
imul
out
pop
cltd
dec
dec
and
outsb
jo
popa
div
call
inc
dec
xchg
push
mov
nop
pop
orb
add
cmp
inc
idivb
jns
dec
push
xchg
lcall
roll
out
sub
int3
fcmovnb
in
adcl
les
ja
test
mov
dec
sbb
xchg
popf
sub
pop
fisubl
scas
jno
mov
lods
scas
dec
sbb
and
add
inc
lock
xchg
dec
lock
mov
cld
dec
fwait
lcall
mov
sub
jns
jp
dec
ljmp
fwait
lret
lcall
push
fsts
jp
cmp
notl
mov
dec
cld
shlb
les
ss
aas
xor
lock
xchg
inc
push
mov
mov
mov
sbbl
dec
add
adc
ret
out
das
adcb
adc
mov
test
aas
mov
mov
sbb
xor
xor
data16
pop
cld
jle
dec
sbb
cmpsl
insl
mov
aaa
cmp
xchg
popa
xor
stos
fmulp
push
or
ja
pop
shr
or
rolb
sahf
fsubr
cltd
xchg
push
pop
out
sahf
jecxz
jecxz
xorb
push
scas
cmp
cltd
mov
jae
cmp
icebp
dec
jbe
add
xrelease
rsm
mov
lcall
into
sub
pop
mov
aaa
lds
mov
inc
icebp
dec
sahf
popa
negb
inc
in
adc
mov
sbb
loope
mov
push
mov
ret
and
adcl
lds
xchg
adc
xor
ljmpw
mov
push
daa
mov
or
lods
and
push
test
loop
enter
or
or
dec
insl
inc
push
cli
les
clc
es
pushf
cmp
jbe
and
shlb
movsl
cltd
bound
adc
mov
jnp
outsb
ljmp
jl
ljmp
sbb
je
fldl
cld
enter
or
lcall
outsl
in
sti
inc
sub
sbb
std
sub
imul
popa
outsl
mov
jns
xor
sub
mov
das
pop
mov
or
xchg
dec
pop
push
cs
push
out
adc
ret
stc
lods
ficomps
mov
xchg
push
adc
and
mov
out
pop
jo
push
sub
push
jle
imul
add
sub
mov
movsl
push
and
fstpl
add
xchg
ja
aam
mov
cmp
daa
fsub
pop
ljmp
and
cmp
lahf
xor
mov
pusha
fldlg2
xor
cmpl
and
cmc
scas
fistl
cmp
out
mov
push
int
dec
in
idivb
xor
scas
xor
loope
push
out
or
ret
repz
aaa
in
dec
ret
add
or
sub
andl
mov
push
dec
pushf
in
sbb
push
push
pop
mov
add
adc
cmp
jecxz
mov
outsl
jo
mov
push
outsl
in
orb
sbb
xchg
jle
lcall
inc
or
loopne
adc
out
lods
sarl
mov
cmpsb
stos
mov
jae
popa
sbb
mov
or
int
jp
jo
xchg
pusha
data16
jbe
xor
dec
jbe
jnp
test
pop
fldcw
or
mov
cmp
xor
push
cmp
xchg
xchg
cmpl
push
fldt
dec
or
sti
int
cmp
push
pop
sahf
cmp
sub
leave
adc
push
jge,pn
andl
pop
in
pop
data16
iret
or
sbb
xor
inc
xchg
mov
sub
adc
shrl
xchg
mov
jge
and
pop
xchg
stos
cwtl
into
cmpsl
and
jp
mov
and
jecxz
int3
mov
push
sbb
and
push
jnp
or
xchg
mov
cmp
cmp
jno
pop
or
and
push
push
in
cmpsl
jae
jecxz
idivl
xor
mov
pop
daa
mov
pop
out
testb
push
push
xchg
jno
sub
std
bound
out
mov
pop
mov
xchg
insl
roll
xchg
lods
fmul
adc
cmp
in
std
or
xlat
loopne
jnp
and
xchg
int3
push
repnz
fwait
dec
inc
push
or
ret
inc
xchg
cmpsb
xor
jl
orl
adc
xchg
pop
xor
sti
aam
adc
popl
popf
in
aaa
out
fildll
out
inc
and
iret
addr16
je
comiss
andl
xor
adcb
arpl
jge
mov
mov
xchg
mov
loopne
loope
cmp
out
push
fiadds
std
popa
mov
push
jle
mov
sbb
dec
insb
insl
shl
movsb
inc
add
enter
fsts
les
sbb
sub
fsubl
mov
push
stc
imull
fists
pop
pop
dec
jg
xchg
sub
and
mov
pop
mov
push
insl
fdivrl
loopne
fwait
sub
mov
jbe
xor
cli
repz
pusha
ja
stos
lods
jmp
and
inc
xor
mov
push
xacquire
insb
or
adc
sub
cmpsl
lret
cmp
std
dec
inc
jle
jns
push
xchg
add
xor
xorl
adc
pop
fidivs
shlb
xchg
jo
pop
out
inc
push
mov
and
in
lcall
rcll
js
mov
push
pop
lea
add
jb
stc
rorl
loop
pop
mov
int3
mov
test
inc
push
mov
sub
inc
pop
scas
add
add
inc
mov
inc
in
jb
and
pushf
cld
push
dec
pop
les
inc
mov
inc
stos
add
aaa
aaa
jle
xchg
lret
div
or
outsl
pop
lds
test
inc
push
mov
fstpl
daa
lcall
imul
push
or
adc
push
out
je
inc
cmp
imul
push
sahf
aad
mov
aam
sub
cwtl
lds
jmp
mov
adc
or
xchg
xchg
cld
or
out
stc
push
push
pop
leave
push
fsubl
mov
dec
pop
fcoms
sbb
mov
sbb
js
pushf
push
jae
jmp
jle
lods
push
mov
pop
xchg
jo
icebp
dec
mov
adc
cltd
dec
jnp
in
jae
test
push
push
test
cli
xor
ss
xchg
fs
adc
mov
xchg
mov
push
sbb
cmp
bound
xor
jns
sbb
pushf
jb
insl
stos
cmp
cmc
repnz
mov
dec
mov
subl
fadd
mov
mov
cmpsb
jbe
lahf
mov
sbb
hlt
mov
sti
insb
adc
imul
adcl
adcl
sbb
in
adc
pop
vpackuswb
and
xor
xchg
cmp
jbe
popa
add
xor
call
adc
loope
xor
cs
xlat
inc
test
and
sahf
jge
aas
lret
mov
fnsave
jns
cld
dec
btl
mov
lock
mov
clc
add
aam
sub
ret
das
mov
rcrl
test
or
jl
lret
fdivs
sbb
sbb
pop
xchg
and
pushl
cmp
jg
mov
out
mov
popf
incl
add
mov
lar
pop
xchg
test
movsl
ficoml
cs
jo
in
mov
cmp
das
mov
push
jecxz
adc
mov
aas
xor
shll
or
mov
jb
test
mov
xchg
add
sar
add
addr16
ja
push
lret
mov
jne
xchg
and
add
cmp
sub
and
xor
pop
jg
movsl
push
movsl
fs
push
mov
xchg
outsb
jno
xor
xchg
rorb
jg
fcmovu
inc
xchg
arpl
adc
fistpll
idivb
popa
outsb
outsb
or
inc
xchg
addb
out
data16
mov
add
cmpsl
stc
and
mov
push
adc
inc
and
orl
idivl
xchg
mov
xchg
xchg
push
aam
sahf
les
lea
push
jns
mov
jmp
out
into
add
repz
xor
arpl
int
push
pop
push
adcb
inc
push
push
out
adc
sbb
push
rcrl
popa
pop
mov
pop
mov
xorl
cmp
or
cmp
std
mov
adc
scas
inc
lcall
imul
push
cs
push
mov
fwait
insl
aam
hlt
jl
es
sti
repnz
call
stos
adc
test
sbb
in
pop
xlat
push
jo
sahf
loope
sub
pop
push
xchg
pop
std
data16
xlat
fidivl
add
sbb
bound
jnp
inc
lret
xor
sub
mov
jne
mov
popf
mov
aam
es
pop
aad
sub
cwtl
aaa
add
mov
out
loope
push
out
adc
jmp
ss
pusha
popf
imul
sub
sbb
scas
xor
jmp
scas
mov
ss
push
or
or
xchg
bound
dec
push
test
cmp
push
mov
int
jb
push
pop
push
popl
cltd
dec
push
pop
mov
and
and
xchg
std
sbb
sbb
jno
repz
xchg
push
sub
xchg
xchg
dec
hlt
xchg
in
adc
jecxz
stos
call
scas
mov
rcl
mov
pushf
sub
int
loopne
xchg
mov
adc
repnz
adc
lret
sub
sbb
xchg
pop
fcomp
inc
pop
jnp
scas
in
xor
stos
call
cmc
imul
mov
xchg
ret
or
xor
xchg
xchg
jmp
mov
mov
lock
or
jmp
test
ja
outsl
jno
pop
sbbb
shrb
lcall
popf
outsl
mov
jle
sahf
xor
sub
xor
cld
mov
adc
push
sub
ja
add
add
adcl
lcall
outsb
call
cmp
sub
cltd
js
sbb
jp
ror
loop
fildl
faddp
int3
cmp
xchg
xor
call
call
in
das
pop
jg
jb
stos
lahf
jno
cmp
scas
lock
mov
xchg
xor
mov
imulb
or
or
test
movsb
adc
pop
and
lods
xor
stos
push
add
mov
orl
ljmp
cli
lcall
ret
pop
lods
subl
cmp
pop
lods
sub
pop
cltd
inc
sbb
xchg
rcrb
cwtl
xorl
stos
pop
pop
outsb
cld
loop
les
into
and
mov
xchg
lret
push
adc
sbb
flds
loop
push
lods
dec
lods
outsb
lea
scas
aam
xchg
jne
cmpsb
cmp
mov
adc
push
call
pop
bound
xor
cld
fwait
stc
mov
movsb
add
push
mov
mov
or
mov
sub
out
mov
cmp
ret
rcrb
push
ret
xor
inc
xor
cs
pop
push
pop
data16
mov
adc
mov
movsb
lcall
pop
xchg
lret
sbb
loope
jae
lret
sub
test
add
leave
pop
lods
rorb
daa
sbb
outsl
arpl
fcoms
stos
xchg
cmpsl
dec
std
and
lods
xorl
xor
bound
insb
sarb
jmp
insb
inc
js
xor
push
xchg
imul
push
sbb
out
dec
add
jbe
rclb
mov
mov
sbb
sbbl
mov
insb
push
inc
in
outsb
pop
pop
mov
jg
or
mov
sub
xor
mov
sub
sub
inc
shrb
shrl
call
push
mov
adc
mov
lcall
popf
push
decl
lock
or
lods
out
mov
outsl
rol
mov
push
lret
test
pop
and
pop
mov
sti
xchg
mov
stos
and
add
outsb
adc
rorl
ret
cmpsb
cltd
sub
xchg
sub
outsl
xchg
insl
mov
jb
jno
pop
xlat
shll
jno
popa
arpl
ret
sub
or
xor
sbb
lret
movsl
fs
xchg
mov
mov
or
xchg
push
pushf
pop
aas
push
mov
cs
adc
fcomi
stos
jnp
xchg
sbb
jo
hlt
sub
cmpb
aaa
jnp
lcall
enter
jl
xor
mov
mov
insb
xor
mov
arpl
xchg
push
xchg
mov
mov
and
out
adc
add
cmpsl
cltd
mov
int3
test
shlb
cmp
sub
push
call
sbb
mov
dec
cmp
call
cli
loope
imul
xchg
mov
xor
data16
xchg
xchg
nop
dec
hlt
jp
adc
inc
jmp
incl
popa
pusha
xchg
sub
push
repnz
add
rcll
and
mov
adc
stos
mov
loopne
adc
sbb
cmp
push
fcoml
mov
call
push
imul
jge
adc
scas
loopne
mov
mov
push
outsb
sub
aas
adc
jns
imul
idivl
dec
int
ficoml
js
iret
dec
pop
push
cmpb
out
std
inc
mov
nopl
mov
iret
or
in
ret
cmpsl
xor
sub
ret
fiaddl
push
sub
shrb
sub
popa
ss
xchg
sbb
and
mov
cmp
push
xchg
jbe
outsb
cwtl
mov
adc
jle
add
cmp
cltd
xchg
mov
aad
in
xor
xchg
mov
mov
or
je
mov
fs
mov
and
ja
cmp
in
cmp
mov
aas
jmp
stc
dec
push
addb
jmp
sbb
push
iret
jne
cmp
lcall
jmp
xor
and
fwait
mov
push
ss
adc
ret
fucom
notb
aas
jp
ds
movsl
scas
repnz
jecxz
ds
cmpsl
adc
sub
insl
pushf
repnz
cwtl
bound
lea
roll
testb
push
xor
sbb
mov
sahf
dec
aam
xchg
mov
mov
pop
aas
or
scas
test
jmp
or
lcall
jp
jl
pop
sub
lods
sub
pop
pop
pop
dec
jno
cli
out
jle
jns
xor
xor
or
jo
gs
mov
popa
sbb
ret
sbb
stos
push
inc
in
cltd
loope
bnd
aas
lret
dec
enter
pusha
xchg
stos
add
xchg
xchg
xor
scas
jmp
arpl
mov
cmp
cmp
adc
xorb
ret
roll
jl
rolb
and
cmp
cmpsl
iret
int3
out
out
mov
inc
filds
mov
das
sbb
cltd
hlt
mov
dec
jns
adc
iret
jae
xchg
xchg
mov
adc
lea
xor
push
jp
mov
fisttpl
jae
and
cmp
shrl
xchg
mov
cmp
push
mov
xorl
hlt
call
sbb
xor
rcll
fisttps
mov
add
mov
xchg
es
pop
adc
out
mov
dec
pop
pop
ret
and
adc
movsb
jle
push
adc
mov
scas
dec
lods
popa
lock
lahf
jnp
call
sbb
repz
sbb
notb
lahf
add
das
sahf
push
lret
imul
das
out
movl
jle
clc
xor
or
mov
dec
popf
divb
push
ja
cmp
sbb
pop
and
xchg
fiadds
test
loope
out
sarl
pushf
jb
add
dec
stos
sahf
aaa
rol
rcr
push
repnz
ds
xor
fwait
popa
into
scas
add
add
mov
pop
and
les
cltd
addb
sub
push
jns
stos
inc
aam
daa
push
jmp
out
push
je
jp
add
xor
into
jbe
aam
mov
test
cli
sub
loope
pop
mov
mov
sti
mov
insl
or
jo
shrb
dec
test
outsl
out
push
sti
dec
mov
mov
add
cmp
sbb
packssdw
bound
xchg
xchg
aas
std
das
arpl
enter
test
push
roll
cmpsb
push
push
jg
jmp
mov
loopne
lahf
mov
and
es
and
sysret
add
adc
fadd
push
cmpsl
lock
sub
dec
mov
mov
push
sarl
negb
xchg
bound
dec
push
scas
ds
testb
pusha
fimull
dec
jp
sqrtps
cmp
cmp
or
xor
add
aad
xor
sub
out
sub
aaa
sub
pop
pop
enter
cmc
xchg
imul
and
aam
mov
push
push
inc
cli
mov
mov
push
mov
push
pop
ficomps
mov
sarb
test
pop
shll
sbb
lahf
clc
mov
xor
pop
mov
nop
inc
into
inc
mov
cmp
loop
and
sbb
insb
fs
aad
sub
add
ret
test
cmp
xchg
cmp
mov
in
mov
or
cmp
push
sti
outsb
mov
call
xor
xor
pop
and
xchg
push
add
je
test
mov
sbb
test
js
jg
shll
mov
push
ss
mov
mov
xor
loopne
jecxz
subb
cli
cmp
cmp
sbb
lcall
arpl
dec
mov
ret
mov
stos
dec
test
xor
cmp
mov
in
add
std
sub
out
adc
pop
repz
sub
test
and
out
xchg
pop
orb
lret
pop
cmp
sti
les
dec
mov
jo
sub
add
popf
xchg
fnstsw
jp
adc
cli
mov
pushf
daa
scas
sub
lods
jg
lods
call
out
push
add
clc
push
or
sbb
xchg
mov
pop
lret
pusha
fs
pop
dec
ret
push
sub
pop
pop
lock
mov
add
cmc
sti
or
paddsw
pusha
jbe
pop
add
into
or
cwtl
jmp
mov
jmp
sub
pusha
inc
pop
repnz
inc
xor
jnp
in
es
movsl
adc
jmp
mov
push
int
dec
aad
das
into
std
cmp
xor
scas
incb
pushw
mov
sbb
dec
stos
xchg
popa
push
jmp
inc
jl
sub
push
jae
adc
xchg
push
sbb
fimuls
adc
or
jne
pop
cmp
and
pop
sub
int
add
int
out
xchg
rcl
or
je
lock
jb
sbb
insl
mov
pop
loope
inc
or
lods
mov
and
adc
dec
pop
adc
mov
mov
ror
mov
movsl
fstpl
scas
decl
jns
inc
fs
cmp
lahf
dec
iret
sbb
testl
and
scas
fcmove
pop
mov
arpl
and
cmp
repz
stos
out
add
xor
fwait
push
sahf
loope
jge
sbb
bnd
mov
xrelease
in
into
jae
mov
or
insb
addr16
sub
dec
cmp
nop
sbb
mov
and
int
mov
add
inc
pop
dec
cmpsl
in
clc
mulb
clc
bound
ficoms
inc
dec
dec
ret
mov
aas
nop
jno
xchg
pop
xchg
iret
jb
outsl
loope
sub
cmpl
leave
popf
jb
pushf
add
clc
inc
cmpl
dec
popa
pop
mov
lea
xchg
outsl
repz
and
sbb
xor
jno
or
ljmp
out
in
enter
jae
xchg
insl
cmp
mov
loop
mov
or
fistps
repnz
push
or
leave
in
or
mov
add
or
and
aas
rclb
inc
scas
jl
int3
out
pop
pushf
ficoml
xchg
inc
ficompl
je
lret
xor
scas
sbb
mov
stos
out
jno
dec
test
aam
popa
push
jmp
iret
jno
jmp
into
push
stos
lock
or
mov
cs
mov
jns
mov
je
ror
fcmovnbe
mov
cld
pop
sbb
sbb
add
cwtl
pop
test
test
and
notl
inc
bound
mov
inc
add
xlat
mov
sub
adc
inc
mov
mov
add
pop
fwait
and
popa
adc
mov
test
enter
mov
cld
outsb
xchg
sbb
sub
pushf
fistpl
mov
out
lret
loop
or
movsb
cmc
xor
or
loop
push
out
test
mov
sub
outsb
out
stos
mov
ds
scas
push
gs
icebp
push
or
inc
out
xchg
cltd
sub
push
repnz
pop
lods
and
into
addr16
inc
loop
into
adc
enter
fwait
insb
mov
sti
xchg
nop
mov
pop
or
push
mov
fildll
dec
mov
mov
shl
adc
in
das
stos
scas
xor
sub
nop
fnsave
ljmp
in
mov
mov
pop
jns
mov
mov
add
outsl
add
mov
test
imul
add
addb
add
ffree
pop
mov
fbld
push
enter
std
add
sbb
or
lods
test
pusha
pusha
int
call
shl
mov
cmp
loopne
rcll
xchg
mov
decl
mov
pop
mov
loopne
jge
fcomps
and
les
jl
arpl
sahf
jo
fstps
pop
cld
cwtl
inc
enter
sbbb
dec
jns
xor
out
mov
mov
push
inc
xor
adc
shlb
sbb
adc
imul
sbb
or
cld
outsl
fs
icebp
aas
arpl
test
jg
jle
inc
fiaddl
lret
add
loop
xchg
nop
pusha
add
aad
pusha
call
sub
and
xor
adc
jge
leave
cmp
or
xor
push
dec
jne
and
lock
dec
push
xchg
outsb
arpl
sub
sub
jno
cmpb
add
mov
jmp
int3
cmp
push
mov
loop
jne
mov
and
outsb
inc
cmp
cmpsb
fistl
mov
test
add
in
arpl
lods
sbb
movl
movsl
dec
pop
pop
inc
ret
lock
mov
pop
adc
dec
and
test
xor
xchg
in
xor
cmp
out
add
pop
out
jmp
cld
sbb
inc
pop
fsubrs
dec
outsb
lods
fucomi
cmpl
sbb
enter
cltd
hlt
cmpps
outsl
pop
mov
testl
shll
cld
jb
xor
fdiv
fdivrs
fidivrs
push
int
jmp
cmp
not
mov
ret
aaa
xchg
add
inc
movsl
aas
xchg
out
dec
aam
mov
imul
into
test
and
mov
and
dec
mov
jno
adc
pop
sbb
test
jmp
add
hlt
insb
loopne
push
test
push
jbe
jl
jno
out
push
data16
add
jno
and
mov
xchg
out
mov
bound
lret
lahf
aad
arpl
rcrb
outsl
adc
jecxz
shll
mov
jle
sbb
aaa
lds
dec
mov
or
aad
xchg
xchg
mov
sbb
push
hlt
es
sahf
movsl
or
loope
or
lea
jae
mov
push
test
add
pop
in
and
and
loopne
jmp
daa
outsl
mov
js
stc
testl
dec
test
test
sbb
push
mov
rcrb
adc
sub
sbb
cmc
in
sbb
fisttpl
mov
lods
jnp
jb
mov
nop
movsb
shrb
mov
sub
testb
fldcw
xchg
cmpsl
add
jnp
fstpt
loop
xchg
or
jmp
xchg
or
out
xchg
sbb
sub
test
sarl
fs
ljmp
bound
faddl
mov
jo
adc
stos
sbb
jbe
divl
sbb
mov
pushf
pop
out
mov
repnz
iret
clc
dec
adc
jl
xchg
add
roll
jbe
ljmp
sbb
add
fistps
insb
pusha
add
push
push
push
scas
stos
dec
jns
mov
sarb
sub
cmp
movsl
jae
bound
jle
subb
cld
sbb
xor
cltd
dec
jle
lahf
out
sbb
jecxz
cmp
add
adc
pop
fwait
cmpsl
int3
xchg
push
pop
or
jg
mov
cmp
hlt
push
xchg
and
iret
cwtl
pop
xchg
inc
les
gs
cmp
jge
push
adcb
sub
inc
loop
andb
mov
sub
shlb
stos
mov
xchg
repnz
mov
inc
push
insl
in
jecxz
pusha
into
lcall
stc
rcr
jno
add
xor
xchg
adc
lret
popf
in
jbe
call
ret
pop
mov
or
sbbb
xchg
sub
mov
sub
xor
mov
pushl
adc
push
mov
jo
jmp
jne
inc
xchg
iret
dec
adc
movsb
inc
ljmp
pop
jg,pn
stc
sahf
cmp
mov
jbe
and
out
cmpsb
fs
lods
jge
xor
mov
lods
repnz
jmp
cltd
and
testb
popa
dec
insl
fstpt
sbb
mov
in
leave
adcl
fdivs
lret
inc
fwait
aas
fistpll
cs
and
xchg
cli
lea
add
scas
dec
add
iret
xchg
and
add
ror
mov
add
push
cmp
cmpsl
in
mov
repnz
aas
pop
inc
push
mov
mov
adc
mov
js
sar
pop
sahf
jb
in
sub
icebp
sub
adc
cld
gs
cwtl
dec
arpl
fistps
dec
jecxz
icebp
xor
and
lahf
imul
or
pushf
or
and
xor
shr
jp
sub
and
inc
dec
adc
insl
cmpsb
add
sti
and
test
adc
pop
mov
and
pop
inc
or
out
sub
rol
aam
ret
xor
adcb
dec
popa
and
cmp
mov
out
push
jl
xchg
lods
dec
and
xor
pop
xor
or
iret
outsb
xchg
stos
xchg
cmp
pop
mov
mov
xchg
int3
sub
push
pop
adc
cld
pushf
cmpsb
mov
add
adc
and
mov
cld
mov
mov
into
mov
lock
js
fwait
loope,pt
pop
dec
out
pop
cmpsl
mov
or
push
xor
in
add
or
dec
add
loopne
add
xchg
fucomp
dec
jle
or
pop
add
add
jmp
mov
lods
or
in
dec
dec
push
jns
jo
imul
mov
add
inc
shlb
ret
cmp
or
lock
push
movsb
dec
outsl
xor
xchg
sub
out
es
fiaddl
sub
adc
out
aad
mov
jae
mov
push
mulb
mov
rorb
dec
int3
iret
lds
jmp
or
in
push
test
ss
stos
push
jne
or
fldl
sbbl
jle
and
xor
dec
pop
loop
rclb
xchg
nop
sbb
mov
popa
sarl
mov
mov
nop
or
push
push
and
mov
push
jne
xor
popf
mov
outsb
stos
or
arpl
sbb
inc
mov
dec
mov
ljmp
sbb
jg
add
outsl
sub
xor
setge
in
cmp
lods
and
xor
inc
out
ret
push
hlt
mov
sub
push
or
add
inc
addr16
js
pop
xchg
pop
xor
jb
lods
mov
pop
jg
xchg
jne
rcll
cmpsb
clc
adc
das
decl
adc
mov
dec
jb
cmp
ror
mov
mov
and
arpl
or
pop
test
add
cmp
arpl
sbb
lea
scas
push
and
add
sahf
xchg
outsb
imul
push
lods
add
adc
cs
ja
pop
orl
xorb
sub
sbbb
or
sub
push
xchg
out
xor
adc
dec
pop
aad
cmpsl
les
and
mov
dec
aas
jne
clc
jmp
fcmovne
iret
xchg
orl
xchg
data16
cmp
sub
pop
mov
sbb
pop
in
enter
sbb
mov
pop
xchg
push
cs
fucomp
cli
push
adc
test
loopne
dec
sbbl
or
push
out
and
pushf
mov
jl
dec
inc
sbb
xor
fdiv
sub
cmc
jle
jle
fwait
loope
sahf
mov
popf
mov
dec
jp
xor
lods
stos
or
mov
sbb
pop
sub
sub
test
lahf
in
jmp
flds
xchg
mov
enter
xor
mov
sti
xchg
mov
out
xor
sub
inc
xchg
push
dec
daa
fidivl
xlat
orb
movsl
dec
lds
pushl
and
xchg
das
cmc
push
movsb
add
int3
mov
sub
call
imul
test
subb
divl
insb
add
mov
mov
rolb
mov
push
popa
pop
push
outsb
bound
adc
sahf
mov
pushf
stos
jb
ss
mov
aaa
sub
inc
push
push
test
ds
pop
dec
xchg
dec
bnd
jecxz
mov
xchg
add
aaa
adc
cmp
or
shlb
fucomi
icebp
jp
insl
push
sti
test
popf
dec
cmp
aad
mov
imul
lods
inc
rcrb
inc
loope
cmpl
insb
inc
dec
mov
sub
xchg
xchg
fstps
jbe
sub
fwait
aaa
jmp
popa
ljmp
inc
and
cmpsl
and
in
lods
and
pop
xor
mov
jle
mov
pop
adc
shl
cmpsb
aas
sahf
into
repnz
leave
mov
dec
int
popl
lods
test
jmp
push
and
push
adc
fwait
xchg
pop
nop
hlt
lds
pop
jmp
sahf
nop
int3
cmp
pop
pop
cmp
or
mov
xchg
pop
mov
mov
shlb
inc
mov
inc
mov
lret
push
mov
mov
inc
dec
les
js
inc
and
add
pop
mov
testb
fiaddl
or
out
or
mov
add
cmp
jmp
adc
daa
or
lcall
decb
push
ret
lds
xchg
mov
ret
mov
scas
mov
pusha
lea
arpl
pop
fmull
mov
icebp
xchg
sti
or
insl
sub
lds
adc
sub
inc
jns
jge
in
jp
and
xchg
call
cmp
cmp
cmpsl
enter
sub
into
jmp
push
andb
sub
jnp
es
xor
pop
dec
adc
rolb
or
dec
push
jp
xchg
outsl
push
in
add
rorb
cli
stos
jge
cmp
aaa
jge
out
inc
push
or
cs
add
and
movsl
or
cli
iret
das
push
fs
sub
push
push
ficomps
out
mov
jecxz
call
ret
flds
pop
adc
in
push
mov
sarl
mov
je
testb
push
test
inc
mov
loopne
inc
xlat
stos
mov
call
cmp
cltd
push
stc
sub
inc
cli
test
sub
lret
jmp
stos
cmp
clc
mov
mov
jecxz
rcrl
inc
in
lahf
sti
lock
inc
ljmp
fcmove
daa
jae
mov
or
dec
xchg
jle
cmp
pop
les
rclb
mov
data16
adc
push
roll
adc
ja
out
dec
fimull
pusha
or
sbb
fildl
inc
ret
je
cli
fxrstor
pop
lock
cmc
cmpsl
mov
push
outsb
mov
in
rcrl
in
int
and
pop
add
dec
and
rolb
adc
lods
fsts
and
in
cmpsl
or
leave
add
pop
xor
or
jg
in
icebp
int3
xchg
mov
aaa
pop
icebp
fisubl
imul
lret
mov
mov
xchg
push
mov
jb
out
xchg
aad
jno
cmp
jg
mov
xorl
pop
aas
push
xor
fldt
xor
mov
or
push
jge
add
push
xor
es
pop
outsl
mov
push
js
mov
test
addr16
mov
in
dec
sbb
add
cmp
and
data16
adc
pop
in
aam
jmp
jp
out
dec
adc
sbb
mov
mov
jbe
lock
cltd
mov
cmpsb
iret
xchg
push
mov
in
xor
imul
jne
pop
push
xor
xor
jns
out
dec
cmc
dec
mov
xchg
pop
jnp
push
mov
cli
and
in
sti
clc
mov
lcall
inc
repz
fidivrl
ret
cmp
lahf
push
jb
sub
mov
test
mov
sub
icebp
mov
push
data16
xor
jnp
ljmp
push
cmp
cmp
test
mov
fldl
push
addr16
sarb
cmp
push
subl
std
mov
inc
dec
lods
push
andb
cmp
out
gs
ds
fistl
loopne
xchg
int3
add
and
jno
loopne
cld
lock
xchg
push
add
frstor
sarw
sarl
aaa
sti
mov
and
mov
mov
xor
or
jbe
add
fsubs
pushl
mov
pop
fcmovne
mov
add
test
nop
sub
sub
test
add
xor
movsb
out
or
mov
shr
pop
test
lock
leave
pop
mov
out
xor
jae
adcb
loope
mov
jo
shll
push
and
stos
dec
push
outsl
xor
ss
cltd
mov
pusha
mov
icebp
add
mov
cld
jl
xor
insb
jl
and
stc
mov
lods
imul
xchg
cld
shll
sub
cmpsl
push
in
cmc
mov
std
ljmp
data16
xchg
pusha
inc
inc
int
pop
sub
inc
inc
fisttps
daa
or
xchg
xor
pop
es
stos
loop,pn
xchg
xor
inc
fnstenv
jae
cli
jl
leave
ret
insb
add
lods
jne
rcrb
jnp
scas
jp
pop
inc
fistl
xchg
or
setb
and
fdivr
aad
push
adc
inc
or
cld
mov
jne
cmp
push
lret
push
cmp
push
jl
outsl
daa
fnstcw
pop
test
inc
mov
push
scas
add
inc
movsl
ja
fildll
xor
out
in
xchg
pop
and
sub
xor
xchg
add
mov
pop
inc
mov
adc
out
mov
popf
into
push
sub
add
nop
dec
xor
lods
mov
out
jo
inc
cmp
mov
add
imul
adc
mov
xor
iret
jmp
les
mov
pop
int
lret
add
loope
sahf
aad
in
mov
mov
rcrl
jno
in
es
xchg
fsubrl
dec
sub
call
lock
out
enter
scas
jae
or
xchg
dec
xchg
mov
int3
and
cmp
dec
jl
xor
push
les
repz
push
adc
push
mov
nop
scas
mov
scas
push
xchg
sbbl
int
and
jns
daa
lahf
xchg
push
push
into
jae
mov
adc
mov
xor
dec
in
adc
inc
movq
mov
cld
adc
adc
fs
pop
add
mulps
or
cwtl
into
cmovge
int
pusha
jle
jo
mov
aas
xchg
insl
lcall
in
scas
or
popf
inc
or
sub
cltd
mov
inc
sbb
lods
mov
cwtl
shrl
xor
cli
jg
loop
jns
and
addl
inc
fwait
push
pusha
mov
icebp
dec
cmp
sbb
cmpsb
ficoms
js
mov
add
repnz
bound
dec
je
push
push
xchg
mov
sub
push
push
inc
in
fdivs
and
movsb
pushf
ss
inc
xchg
sahf
enter
push
sbb
aaa
in
pop
mov
movsl
insb
test
pop
test
addr16
lret
hlt
cmp
xlat
dec
cmp
inc
jb
jp
bnd
dec
adc
pop
mov
mov
pusha
add
mov
int
mov
dec
jecxz
push
ljmp
mov
call
or
mov
ror
cmpl
ret
in
pop
dec
test
shll
cmp
lods
pop
push
pop
shrl
faddl
jnp
inc
add
fbld
and
xchg
xorb
or
xlat
in
inc
xlat
fstps
fs
jae
mov
xor
cli
jle
js
and
shlb
lcall
loopne
loope
in
fsubl
std
push
cltd
int3
mov
cmpsl
push
in
lods
pop
daa
insl
jae
mov
dec
dec
pop
aas
js
xorb
bound
mov
fstpl
xchg
xor
cmpsb
mov
mov
call
sbb
cmpsb
pop
stos
fcoml
mov
loopne
sahf
mov
in
jle
jle
xor
ss
fistps
add
mov
lcall
mov
loope
aas
out
out
cmp
push
je
sahf
push
or
adcl
pushl
mov
sub
xor
data16
loopne
pop
sub
shlb
mov
mov
mov
call
dec
cwtl
outsl
stos
and
mov
sub
outsb
add
xchg
pop
cs
push
pusha
dec
mov
mov
std
sbb
mov
pusha
or
xor
xor
add
adc
int3
or
xchg
jns
add
mov
scas
mov
aam
mov
lahf
adc
test
xlat
scas
xchg
push
inc
jne
sbb
mov
inc
stos
fiadds
lods
push
add
imul
pop
out
dec
loope
in
hlt
out
add
fildl
and
add
xlat
negl
mov
out
dec
push
das
int
in
insb
cmp
or
lahf
cld
or
repz
inc
ficompl
lcall
shlb
xor
xor
jnp
adc
divb
xor
fldcw
mov
push
test
in
test
push
scas
xchg
xchg
cld
push
mov
ljmp
mov
mov
dec
sahf
inc
imulb
loope
fiaddl
dec
clc
add
adc
sub
inc
loope
in
int
test
enter
add
test
ss
pop
mov
xchg
ja
xchg
fnstsw
xchg
add
jl
pop
jmp
nop
das
ret
fs
jl
mov
jmp
xchg
dec
fldcw
fwait
pop
scas
lock
fs
push
in
imul
mov
stc
xorb
roll
push
dec
cmp
push
sbb
ret
shrl
popl
dec
pop
mov
push
xchg
xchg
cltd
push
ficomps
in
cmp
xor
aad
test
outsl
es
shl
in
icebp
pushf
pop
add
sahf
loop
test
or
mov
rcr
cltd
roll
mov
test
push
std
mov
mov
mov
in
add
dec
rorb
jl
sub
inc
out
xchg
mov
sub
ret
addr16
lahf
ljmp
es
js
lock
cwtl
pop
xchg
xchg
adc
push
push
add
cltd
ss
int3
addr16
and
mov
in
notb
fldt
nop
mov
or
mov
sbb
popa
in
mov
jge
shl
movsb
inc
movl
sbb
mov
inc
and
mov
push
jmp
push
dec
je
out
push
sbb
repnz
mov
scas
out
outsb
sub
push
sarl
scas
outsb
add
fiaddl
push
repz
mov
pop
adc
imul
and
test
sahf
cmpl
push
adc
mov
xor
jae
test
mov
fsubrs
xor
sbb
cli
xchg
mov
decl
xchg
jp
cmp
daa
sti
jmp
rol
jno
sbb
scas
outsl
imul
out
jecxz
cmp
xchg
inc
jnp
sub
loope
shr
in
inc
jl
and
imul
je
xchg
rol
push
sbb
lcall
jmp
pop
dec
out
leave
sbb
add
loop
jl
xchg
iret
jne
stos
add
dec
lea
mov
pop
pop
imul
cwtl
and
push
sub
test
inc
mov
loopne
mov
mov
dec
jb
add
jae
bnd
jae
xor
push
jmp
shlb
jg
xor
test
mov
or
add
loopne
lahf
cld
imull
orl
stc
mov
inc
test
mov
add
sub
ja
in
adc
pushf
ljmp
gs
jp
idivb
test
add
js
imul
call
in
insb
xchg
or
pop
add
cmp
pop
mov
xchg
lret
int3
jge
cwtl
ljmp
leave
stc
push
sub
xlat
lds
adc
jecxz
aas
leave
lret
jne
shll
pop
jl
jne
jno
fstpl
xchg
inc
inc
dec
scas
cmp
das
xchg
pop
mov
leave
pop
lock
jno
sbb
rcll
fmul
mov
or
sub
imul
xor
dec
icebp
test
lods
mov
stos
lods
js
push
pop
lret
rol
mov
scas
pop
mov
test
pop
test
lahf
shlb
sbb
pop
data16
inc
jmp
add
test
mov
out
mov
pop
push
movsb
jp
fdiv
mov
mov
ljmp
or
into
xchg
ja
mov
push
roll
cmp
xor
cmp
adc
fidivl
out
xchg
jp
aaa
cmpsl
pop
aas
push
clc
in
inc
pop
adc
xchg
jge
push
mov
psadbw
out
and
pop
add
jo
cmp
negb
std
sub
jbe
lea
sti
js
cld
pusha
pop
shll
pop
lret
jo
mov
dec
clc
les
adc
fstpt
sub
xor
movb
mov
ljmp
add
sub
ss
loop
inc
dec
xchg
adc
push
add
jl
in
xchg
xor
pop
dec
push
repnz
out
lcall
mov
aad
ficoms
ds
add
mov
xorb
lea
test
cmpsb
stos
push
dec
repz
and
lret
and
fiaddl
or
mov
jno
xor
enter
imul
test
add
lea
js
add
scas
fcmovnb
outsb
lret
stc
mov
ja
in
mov
sbb
fstpl
pushf
lods
jle
cmpl
shll
lret
mov
movzwl
sbbl
and
stos
pusha
mov
xor
int
rorb
push
fidivs
fyl2xp1
iret
pop
mov
push
mov
mov
mov
inc
into
mov
mov
jmp
outsb
mov
jae
cmp
or
negl
pop
hlt
cs
jae
xchg
sbb
push
add
loope
gs
xor
scas
push
ret
cltd
sub
mov
add
scas
leave
adc
pop
mov
pop
fldcw
cwtl
pop
sbb
mov
lret
sbb
sub
push
xor
dec
out
aaa
mov
push
loope
testl
mov
sbb
and
jae
mov
rcrb
xor
cmp
lret
or
stos
add
loop
xchg
dec
in
push
jbe
adc
xchg
cmp
xor
cmp
adc
dec
dec
sbb
jl
push
in
jnp
and
scas
dec
aad
jmp
sbb
and
in
or
jge
enter
decl
push
mov
dec
xrelease
ljmp
and
mov
out
mov
cmpsl
pop
jns
enter
daa
xor
fsts
andb
repz
push
and
mov
and
rolb
jge
add
push
cmovb
lcall
mov
fsubs
or
or
and
pushf
movsb
and
fadds
clc
frstor
fisttpl
lret
shll
outsb
push
mov
lcall
adc
int
pop
mov
cwtl
push
call
push
aad
scas
jg
insb
mov
push
jno
add
lock
pop
cltd
in
loope
test
aad
jmp
cs
inc
in
inc
loopne
mov
imul
push
push
xchg
mov
jl
dec
push
push
in
movsb
push
ss
fmuls
or
in
test
shrl
aas
andb
adc
sbb
hlt
fs
lock
inc
mov
jns
pop
rorl
adc
sbb
cltd
push
jae
push
cltd
jns
inc
fildll
sbb
roll
mov
xor
in
gs
push
and
xchg
rcr
pop
std
cwtl
clc
xchg
cmp
ss
stc
xchg
pop
jo
pop
dec
mov
popa
outsl
insb
adc
pop
clc
jle
hlt
movsb
adc
mov
push
dec
mov
pop
movsl
std
jge
les
mov
rolb
and
sbb
cmpsb
sbb
mov
and
hlt
daa
mov
lea
pop
in
push
scas
or
jge
and
fs
bound
inc
mov
adc
cwtl
mov
inc
xchg
icebp
in
outsl
mov
mov
arpl
or
adc
bound
movsb
pushl
scas
ds
dec
inc
test
adc
sahf
add
xor
fs
daa
ljmp
pop
jmp
lahf
scas
or
testl
test
repz
xchg
add
dec
mov
and
mov
mov
cmc
movsl
jno
data16
in
adc
and
fstl
sahf
sbb
in
aaa
mov
repz
inc
add
or
mov
cmp
addr16
jne
ret
shr
mov
nop
imul
mov
mov
xor
and
std
jnp
sub
xchg
jl
mov
mov
aas
movsb
sbb
xor
test
adc
nop
loop
cmpsb
into
int
or
dec
mov
js
push
lea
pop
outsl
jg
gs
jmp
xchg
sbb
mov
jae
push
mov
dec
mov
or
push
dec
loopne
insl
push
pop
scas
xchg
test
jnp
sub
push
test
ret
mov
mov
or
dec
push
pop
jmp
ret
push
push
inc
mov
jno
add
out
jae
loope
add
out
mov
sub
pop
and
shl
pop
fnstcw
outsb
jmp
mov
pop
lods
mov
call
mov
mov
subb
mov
mov
jg
fldt
jb
pop
pop
arpl
add
mov
sub
adc
xchg
inc
push
mov
stc
or
js,pt
outsb
inc
test
int3
stc
inc
pusha
leave
das
jecxz
stos
jno
lahf
jae
repnz
xor
xchg
jns
in
jp
test
add
leave
sbb
lds
stc
add
inc
call
das
mov
mov
push
push
in
cwtl
lcall
dec
ficoms
test
or
jne
popa
xor
adc
and
rcll
pop
xor
insb
in
adc
in
sbb
xor
xlat
add
cld
jae
pop
add
xchg
test
pop
push
aas
and
jno
dec
fidivrs
lds
hlt
pop
xlat
dec
or
sbb
inc
mov
mov
iret
or
mov
lea
test
mov
jge
and
movsl
nop
xor
inc
sub
lods
sarb
or
sub
pop
lods
jne
call
fsts
and
fiadds
aam
sbb
mov
gs
test
leave
jp
enter
xor
push
add
notl
xchg
jbe
sub
ja
xchg
push
imul
mov
fdivr
push
and
pop
lds
out
sub
or
les
adc
ret
in
inc
cli
or
leave
repnz
inc
mov
pop
cmpsl
dec
and
out
call
ljmp
je
jp
pop
inc
sub
dec
adc
inc
out
lahf
xchg
mov
bound
mov
pop
jp
dec
dec
int3
orl
pusha
and
dec
xor
je
loop
cmpsb
insb
pop
jge
cmc
test
addl
aaa
pop
or
icebp
xor
push
data16
pop
shl
or
jmp
add
mov
outsb
pop
or
inc
push
dec
aaa
sahf
xor
mov
out
push
sub
dec
jbe
mov
adc
outsl
jle
cmpsl
test
adc
sub
add
add
jo
test
xchg
gs
bound
ret
mov
sub
pop
orl
sbb
loope
xchg
and
xchg
vcvtsi2ss
les
sbbl
add
enter
sub
in
xchg
js
jbe
sbb
aam
cmpsb
loop
adc
jg
imul
leave
cli
sahf
adc
jp
inc
gs
test
std
push
xchg
rolb
jae
test
rcll
sbb
cmp
pop
sbb
add
push
ficoms
pop
test
dec
push
js
movsb
xor
loop
xchg
and
jmp
add
pop
fdivrp
inc
jle
fwait
mov
add
scas
pop
xchg
jb
add
mov
pop
push
cmpsb
int
lret
add
mov
push
mov
pop
mov
pop
cmp
outsl
add
fmull
jp
andl
jne
daa
xchg
call
nop
push
inc
xchg
in
inc
std
xor
pushl
fidivs
pop
addr16
sub
aad
out
nop
dec
push
mov
lea
mov
or
xor
popl
pop
mov
test
fists
filds
jl
sbb
fbld
ds
test
stc
out
pop
jno
mov
or
pusha
xchg
fsubrs
call
xchg
jle
xor
mov
xor
clc
mov
jbe
rcll
or
shll
sbb
pop
cld
nop
jbe
nop
out
add
cmp
push
out
mov
stc
cmp
imul
lret
jae
mov
and
ja
cld
sbb
adc
xchg
push
insb
push
jle
lods
fistpll
sbb
roll
lcall
out
sarl
cmp
popf
xchg
pop
jle
sub
mov
ss
cli
sbb
inc
mov
fisttpl
lods
add
cmp
ja
mov
pop
mov
mov
loopne
cltd
imul
adc
sub
shl
mov
out
push
adc
call
fwait
into
and
dec
cmp
xor
paddb
repz
jnp
adc
sbb
fistl
aas
shrl
mov
push
arpl
scas
testl
inc
add
popf
push
scas
insb
in
cmp
dec
and
lods
cwtl
scas
int3
ret
idiv
testl
xlat
shr
pop
mov
push
aas
dec
adc
fisubl
and
push
mov
lods
mov
sub
stos
xor
je
outsb
push
add
daa
and
xor
sub
in
jb
xchg
stos
and
adc
cmp
push
mov
jb
push
adc
ret
lret
test
xor
mov
out
jle
mov
insb
mov
xor
fcmovb
xor
jmp
push
in
adc
out
push
pop
and
int
ret
subb
jae
gs
push
push
dec
repnz
pop
xchg
negl
sub
cmpsl
fistpl
cltd
repz
push
jp
aas
inc
pop
push
lcall
popf
xchg
repnz
adc
mov
ss
and
dec
lret
and
mov
mov
mov
jae
sti
cs
cld
es
xor
call
dec
jo
xor
imul
std
and
or
xchg
adc
stos
lods
jg
in
loope
xchg
jb
sub
hlt
dec
add
dec
loop
fs
lock
sbb
int3
cld
cs
into
xor
outsl
sti
incl
mov
fidivs
jno
mov
pushf
push
cmp
xlat
lods
jbe
in
push
add
mov
scas
insl
xor
test
adc
push
pop
mov
icebp
repz
aad
aaa
pop
mov
lods
mov
adc
inc
ret
or
pop
dec
jg
adc
mov
cmp
or
gs
ret
mov
pop
and
addr16
or
add
sbb
add
adc
ja
inc
or
iret
shll
cmp
mov
test
xor
adc
mov
cwtl
test
pop
test
ljmp
push
cmc
imul
into
in
and
xor
insl
mov
shlb
jno
js
aas
mov
sub
std
in
pop
sub
js
jmp
pop
int3
imulb
stos
adcl
mov
fstpl
and
pop
jne
popa
push
imul
pop
fildl
imul
mov
push
push
in
and
add
pop
pop
cmp
and
sub
xor
xchg
xchg
out
out
leave
fnsave
and
cmpsl
sarl
pusha
mov
dec
mov
shll
insb
gs
shlb
and
adc
xor
xor
pop
dec
xor
pop
clc
mulb
xchg
sbb
aam
xlat
jge
xchg
dec
push
jge
cwtl
cs
add
push
cld
loopne
lods
movsb
stos
pop
lret
dec
adc
fsub
mov
fwait
addb
dec
fimull
imul
test
pop
and
jmp
outsl
push
out
shlb
adc
and
hlt
pusha
ficoml
sbb
jl
jmp
mov
fadds
movsl
mov
and
and
pop
cld
xlat
sub
lods
clc
pusha
xor
out
movsl
mov
ljmp
sahf
push
addb
jle
pop
xchg
sahf
push
adc
loop
ja
loop
das
insl
clc
lock
roll
add
dec
nop
aaa
sbb
dec
leave
mov
stos
mov
push
popa
add
push
stc
imul
adc
jb
mov
and
aaa
enter
frstor
mov
and
mov
scas
popa
lods
push
movsl
cmp
ds
mov
xlat
int3
repz
lahf
je
xor
jge
ljmp
lods
fsub
fsubrs
out
mov
lret
outsl
addr16
ret
fnstcw
sti
cld
outsl
mov
inc
add
insb
aas
hlt
xchg
cltd
add
jmp
fwait
pop
sbb
mov
mov
std
rcr
in
sti
mov
bound
and
dec
lret
ss
imul
fs
inc
jne
insb
enter
cmp
pop
jmp
cmp
push
mov
lds
cmp
in
scas
sar
ret
das
xchg
xor
pop
pop
movsb
clc
mov
jb
lret
pop
xchg
lds
inc
and
pop
sarl
mov
inc
add
pop
or
push
cwtl
aas
jb
lahf
push
cmp
mov
xchg
xor
ret
cmpsb
daa
push
mov
jg
sub
bswap
sub
mov
mov
push
mov
push
pusha
adc
or
out
ret
pop
push
in
outsl
inc
test
add
ljmp
jns
pavgb
and
js
dec
inc
dec
adc
aaa
test
clc
aad
cwtl
jb
shlb
imul
sahf
adc
xchg
repnz
mov
cld
and
mov
and
fadds
or
mov
cmp
cmp
xor
cmp
into
add
mov
je
movsl
push
fistl
call
inc
dec
cmp
xchg
test
out
fldt
rcl
ret
add
sbb
inc
xchg
call
sub
jbe
ficoml
sbb
xchg
mov
xchg
xor
dec
xor
stc
sbb
stc
sub
js
rolb
inc
pushf
lock
lcall
push
sub
cmp
mov
pop
or
push
jbe
mov
sbb
sahf
insb
mov
jl
fcmovnbe
lock
subb
adc
sub
mov
jle
mov
lahf
mov
into
pop
dec
or
nop
pop
sbb
notb
mov
arpl
pop
add
aam
loope
dec
les
pop
mov
imull
das
cmpsl
cmpl
push
cli
push
push
inc
in
sub
cld
xor
cmp
flds
mov
adc
and
movsb
jae
sarb
bound
gs
frstor
mov
xor
add
cmpb
xor
jb
add
lcall
jle
adc
cmp
movl
and
int
lods
jl
mov
mov
sub
add
inc
rcrl
mov
ljmp
mov
cmp
push
cmp
out
xchg
mov
repz
popa
jp
and
sbb
cmp
sbb
push
repz
mov
outsb
sub
loope
sub
xor
jg
arpl
pushf
pusha
ljmp
fadds
cltd
loop
test
sub
loopne
shrl
mov
mov
jge
and
wrmsr
bound
cltd
divb
mov
out
adc
test
aad
push
xchg
pop
xor
pop
mov
repnz
fidivrl
insl
test
mov
add
mov
les
push
pop
sti
xchg
cli
inc
cmp
sti
xchg
les
dec
dec
pop
xchg
les
mov
cmp
fwait
inc
xchg
pop
std
jp
jns
in
xchg
add
or
mov
mov
mov
fadd
push
addb
push
out
mov
dec
popf
popf
push
lods
test
test
ja
pop
lods
test
mov
lahf
out
inc
jmp
xchg
and
mov
dec
xchg
xchg
sahf
mov
push
lret
xlat
adc
xor
imul
push
fidivl
repz
jle
sti
push
les
scas
leave
mov
frstor
fists
or
sbb
mov
push
mov
dec
mov
sub
scas
repnz
hlt
xlat
popa
pop
push
addb
cs
and
xor
in
sbb
shrl
lods
nop
pop
enter
into
fistl
pop
enter
jle
out
leave
es
test
xor
fldcw
ja
push
push
jle
sbb
xchg
xor
dec
cmp
out
xor
or
dec
or
lods
scas
out
popf
pop
mov
aas
jne
outsl
ret
ss
jne
div
sub
push
and
xor
lods
add
icebp
scas
js
call
lahf
add
lcall
or
mulb
fistpl
sahf
adc
orl
inc
not
add
push
and
data16
push
daa
popa
jb
lods
push
adc
mov
scas
inc
pop
push
cs
in
mov
push
sti
push
push
test
je
std
sbb
rcrl
mov
lea
fsub
mov
add
leave
js
push
divb
dec
pop
push
push
add
rcrb
inc
add
jmp
or
pop
mov
out
fdivrl
push
or
lods
fdivrl
mov
sbb
add
ss
rcll
dec
inc
sbb
push
cld
aad
dec
pusha
add
jo
xor
testb
mov
imul
das
sbb
loop
shl
outsb
adc
scas
bound
xor
mov
cmpsl
dec
test
add
inc
fisubrs
add
mov
sub
cmp
or
shlb
call
test
mov
jmp
aaa
pop
or
stos
lock
push
stos
fildl
test
scas
sbb
jmp
sbb
inc
jb
mov
sbb
push
jecxz
xchg
in
mov
mov
mov
jge
lcall
fmuls
cmpsb
fstpl
int
fistpll
and
fldt
xchg
lcall
dec
rorl
jg
insb
sub
or
jne
frstor
cmp
push
push
jg
adc
and
call
jns,pt
and
mov
out
mov
rcrl
push
add
add
adc
stc
add
pop
sbb
int
or
les
xor
call
movsb
lcall
pop
repz
xor
mov
sub
and
scas
lcall
adc
mov
xchg
imul
add
cmp
jg
loop
les
inc
xchg
in
mov
cmpl
add
fs
outsb
cs
movsb
or
add
push
lods
add
cmc
cmp
cmp
inc
repnz
pop
pop
fimuls
movsl
out
lret
push
imul
into
pop
js
out
enter
jle
mov
jge
movsl
test
jbe
pop
mov
imul
jno
fwait
test
lret
test
xorb
mov
gs
jp
mov
out
test
xor
leave
addr16
cmpsb
in
cwtl
lahf
jb
fstps
ficoml
dec
jo
xor
push
push
xchg
inc
xor
adc
and
push
jne
outsl
jp
or
sarb
fwait
dec
les
xor
jge,pt
test
sub
cmp
xchg
mov
xlat
mov
mov
test
repnz
arpl
sti
mov
andl
mov
jp
xorb
mov
cli
mov
js
dec
jns
in
push
sahf
leave
daa
cmpl
int
xor
mov
aam
xlat
test
pop
enter
in
jle
lds
ds
add
hlt
xchg
in
jb
fbstp
ret
mov
je
imul
std
hlt
jns
in
pop
cmpsb
mov
scas
popa
pop
mov
in
add
les
push
ja
dec
pop
repnz
xlat
mov
in
jo
lret
jbe
adc
loopne
les
mov
jns
lods
and
das
rcrl
mov
mov
pop
int3
mov
lcall
sahf
dec
xor
es
sub
outsb
js
jnp
iret
mov
inc
loope
scas
and
inc
inc
dec
imul
aaa
adc
pop
leave
push
jmp
cmp
pusha
outsb
xorb
out
aad
and
mov
inc
sub
lcall
loope
pusha
mov
loop
in
repnz
xchg
jge
fisubrs
imul
mov
das
stos
out
divl
icebp
loop
nop
rorb
js
mov
or
dec
pop
sub
outsl
cmp
lods
sub
das
pop
and
in
jg
dec
stos
test
jmp
push
ret
jne
dec
je
xchg
jg
lock
xlat
fldenv
jbe
shl
imul
mov
icebp
inc
out
sar
shl
in
les
pop
lds
jae
std
sbb
adc
and
test
ds
jbe
sub
jne
jmp
push
inc
int3
int
push
insb
aam
push
fmull
loope
cmpsl
push
mov
mov
negl
add
testl
push
push
push
mov
jge
out
mov
nop
xlat
xor
adc
sbb
mov
xchg
dec
je
push
sub
lret
jg
loope
push
or
scas
inc
add
loopne
nop
jae
pop
inc
nop
pop
push
sub
orb
cmp
scas
mov
test
scas
push
iret
adc
inc
leave
push
insb
jl
mov
ljmp
fwait
fsubrl
mov
divl
mov
std
roll
or
pusha
cld
stc
mov
push
add
inc
popa
push
mov
add
jle
adc
xchg
pop
outsb
int
sub
dec
adc
fldcw
js
sub
xchg
clc
ret
push
ret
pop
lea
hlt
subb
xchg
push
aam
movsb
mov
xchg
aam
test
leave
push
cli
hlt
dec
fisubs
ret
roll
push
push
cmp
mov
sbb
jp
enter
push
mov
lea
out
test
jnp
sub
pushf
das
lea
mov
aaa
or
mov
or
mov
gs
and
or
int3
jnp
cltd
jp
ret
clc
jge
and
cmpsb
fimuls
jle
jbe
test
lods
pop
jl
jo
xor
push
shrb
pop
pop
and
and
je
adc
out
iret
daa
pop
xchg
ret
xchg
imul
faddl
push
or
jo
xor
sub
push
ljmp
mov
lock
lds
jnp
push
push
js
push
mov
mov
dec
syscall
bound
xor
pushf
push
ja
ret
adc
xor
in
fisubl
xor
lods
ss
arpl
xor
nop
rol
rorl
sub
cltd
xchg
dec
and
jle
pushf
add
ret
shr
rolb
sub
jl
and
bswap
mov
cmp
popf
xlat
xlat
rorl
jl
push
in
lahf
sbb
mov
jo
xchg
inc
or
and
sahf
int
xor
or
mov
cmpsb
nop
lahf
or
jmp
imul
push
lret
inc
sbb
cwtl
stos
fwait
mov
xor
inc
mov
xchg
sti
pop
adcb
in
ja
pop
aad
mov
cmp
push
lret
scas
mov
popa
cmp
or
ret
cmp
jno
xor
sti
mov
shll
or
push
in
movl
cmp
or
xor
popf
fisttps
popf
sbb
adc
lods
stos
aaa
mov
and
or
pop
sbb
add
iret
mov
pop
aaa
cmpsl
xchg
pushf
aad
push
inc
cmp
push
lods
mov
cli
pop
add
gs
dec
lea
insb
aas
pusha
pop
dec
or
mov
repz
mov
loopne
jg
or
int
sub
fmull
les
sub
sbb
sti
sti
addr16
ror
cmpsb
xor
adc
pop
iret
cmc
aam
andb
and
cmp
movsl
in
add
jns
outsl
cli
leave
ret
mov
xor
push
ret
add
xor
dec
loopne
fbld
push
sub
mov
std
jle
int
mov
fldl
test
add
pop
nop
or
insl
pop
daa
mov
sbb
sarb
je
je
add
inc
mov
or
inc
cmc
lahf
lcall
or
xlat
pop
inc
cmpl
ret
scas
cmc
inc
popf
pushf
push
lods
and
push
lret
inc
icebp
mov
dec
into
mov
outsl
aas
outsb
and
jne
lret
xchg
push
cmp
ds
std
decl
loopne
sub
jnp
scas
pop
jmp
data16
fldl
pushf
aas
sbb
rcr
push
in
xchg
pusha
adc
adc
rcr
mov
fs
repnz
out
sub
lds
and
daa
std
enter
pop
sti
push
sub
dec
dec
in
sbb
xchg
ret
icebp
and
cmc
xchg
lret
dec
cmp
stos
outsl
sub
call
and
pop
int
dec
mov
test
mov
fs
stos
fstps
leave
repnz
jg
jae
push
adc
stos
int3
pusha
repz
fcomps
dec
addr16
mov
addr16
cmpsb
stos
inc
test
dec
add
stc
xlat
mov
inc
aam
jp
jge
xchg
insl
cltd
out
xchg
lahf
pop
loope
imul
inc
xlat
roll
fdivs
ret
cmp
aad
cwtl
jnp
jae
gs
xor
cwtl
cli
jbe
icebp
push
popa
mov
xlat
jns
cmp
out
sub
xchg
data16
das
jle
les
and
test
icebp
lods
xchg
in
jg,pn
xchg
outsb
clc
add
xchg
sbb
sbb
add
lods
sbb
gs
call
xchg
fcompl
in
mov
push
test
sbb
cmc
lret
lahf
inc
ss
dec
push
push
add
setge
adc
push
jle
mov
cmp
or
or
jle
mov
mov
int
mov
sub
mov
xor
outsb
jge
inc
mov
test
mov
roll
fsubs
dec
into
push
in
mov
lcall
aas
aas
jbe
add
fiadds
iret
sub
add
cmpsl
push
fdivrs
or
jmp
jb
inc
add
insl
lea
lret
xchg
mov
push
and
inc
pusha
cs
jns
push
cwtl
jecxz
stos
je
mov
fldl
xchg
push
int3
inc
negl
and
and
dec
pop
pop
xor
test
mov
xor
add
push
and
lods
rcrb
adcl
xlat
jp
cmovns
mov
arpl
xchg
cmpsl
xchg
iret
and
bnd
ret
and
test
xchg
dec
lods
out
mov
dec
sbb
jno
repz
lods
rclb
pop
push
inc
or
rcrb
pusha
mov
push
pusha
mov
push
cltd
jb
jne
movsl
aaa
fists
repnz
mov
outsl
jmp
jno
and
xchg
sub
pop
jmp
mov
int
ret
out
call
rcrb
cmc
cmp
lods
push
mov
cmp
nop
hlt
mov
xor
sbb
jge
adc
jg
rorb
mov
in
das
cmpsl
mov
std
enter
fiaddl
mov
cli
stos
sets
lods
lahf
in
aas
mov
mov
in
pop
pop
ss
dec
out
pop
bound
mov
mov
dec
jb
dec
add
out
inc
jg
cs
andb
dec
mov
fs
lret
ret
in
pop
xchg
mov
shll
lods
mov
dec
mov
inc
add
aad
shlb
xchg
push
adc
inc
mov
xchg
insl
out
sbb
xor
shrb
loopne
bound
cmp
add
mov
imul
mov
cmp
sbbl
fwait
inc
dec
dec
cmpsb
pop
mov
mov
dec
add
mull
push
xchg
insb
enter
syscall
rcrb
imul
mov
sbb
stos
iret
fadds
dec
and
and
rcrb
push
xor
aaa
lcall
pop
stc
fyl2xp1
ficomps
fsubl
and
mov
and
jnp
pop
int
push
bound
cmp
add
jl
inc
push
sub
xor
add
mov
stos
jae
adc
sub
int
cmp
shll
orl
lock
mov
jne
adc
gs
dec
test
bound
mov
pop
jns
das
jae
inc
mov
dec
pop
jbe
lock
sbb
fimuls
cmpb
incl
dec
cmp
adc
dec
xor
mov
xchg
or
jo
out
sub
inc
sarl
rorl
jmp
addr16
push
mov
push
xchg
push
ss
addb
dec
lret
jne
jne
dec
clc
mov
je
xchg
push
ss
adcl
mov
cld
ret
in
cmp
cmc
mov
in
xor
jmp
xor
jnp
sbb
rcrl
jae
xchg
ja
cmpsb
pusha
repnz
lock
jo
pushf
mov
cmp
enter
pop
lret
fistpl
js
neg
and
lret
sahf
pop
xchg
je
add
cmovle
xor
lock
js
pop
mov
adcb
gs
mov
cmp
icebp
clc
idivb
aaa
aad
clc
cltd
add
dec
inc
sbb
push
loope
cmp
or
icebp
hlt
jecxz
mov
shrb
push
jno
dec
mov
push
pop
negb
push
push
cmp
data16
sbb
or
jne
jb
aad
fsubp
lret
das
jne
mov
or
lods
sub
in
push
stc
enter
mov
mov
std
lods
mov
flds
mov
imul
cmp
imul
stc
and
cmp
lods
test
fldt
sbb
ljmp
adc
pushf
add
mov
xchg
out
inc
aad
jecxz
add
adcl
mov
ja
push
push
aas
dec
in
or
pop
xor
incb
fiadds
adc
out
xor
push
addb
out
pop
xchg
icebp
nop
xchg
add
and
les
in
clc
iret
rclb
mov
mov
sbb
cltd
imul
test
inc
test
xchg
in
flds
mov
inc
idiv
sub
and
popa
push
dec
adc
push
shll
add
jae
or
movsl
sbb
mov
jo
aam
push
sbb
add
lods
movb
inc
fstps
add
inc
xchg
cmp
into
bound
push
enter
jnp
xlat
shll
xchg
cmp
xor
add
push
call
stos
fstps
adcb
mov
mov
dec
xor
test
sbb
nop
and
mov
cltd
sti
mov
pop
push
mov
dec
cmp
pop
or
mov
and
fmull
mov
ret
inc
aaa
in
insb
fs
inc
call
or
sbb
mov
outsl
xor
mov
dec
pop
movsb
ja
cmc
movsl
mov
shrb
test
sub
int
int3
jge
pop
xchg
ret
mov
pop
repnz
mov
test
jg
pusha
sti
cltd
pop
decl
adc
mov
mov
adc
faddl
mov
cmp
inc
xor
mov
and
adc
lahf
dec
loopne
sub
dec
cmp
ss
dec
fwait
push
pop
mov
cmp
ret
push
test
movsl
jge
test
mov
rclb
inc
or
or
stc
mov
inc
add
push
pop
stos
aam
ljmp
xchg
sti
lds
fidivs
data16
sbb
mov
out
jecxz
clc
in
jg
insb
mov
pop
xor
lods
jmp
jle
lea
divl
mov
pop
and
xchg
xchg
mov
test
or
cmp
cmp
divl
push
xor
repnz
sbb
xor
mov
jne
push
sbb
adcb
lods
pop
mov
popf
sbb
push
popf
mov
mov
jne
loopne
mov
jl
ljmp
aad
shl
add
rcll
cmp
pop
imul
cmc
mov
push
popa
adc
jno
cli
mov
repnz
xlat
aaa
jmp
adc
or
push
adc
xchg
jne
pop
adcb
pop
mov
pop
mov
js
adc
pushl
popf
mov
call
aam
out
idivb
sub
push
es
test
xor
xchg
inc
mov
int3
push
adc
fxtract
adc
xor
scas
sub
cmpsb
push
sarb
mov
add
and
jl
subb
movsb
xlat
lret
loope
adc
imul
scas
stos
push
adc
jle
push
movsl
or
out
sub
idivb
xchg
sbb
ds
xor
mov
fnsave
jmp
mov
insb
rcrl
call
clc
push
iret
in
js
call
inc
out
xchg
xlat
pop
nop
popa
cmp
hlt
stos
ror
fistl
dec
or
inc
bound
sub
pop
xchg
adc
pop
mov
js
outsb
cmpsb
mov
insb
adc
and
roll
and
mov
jmp
mov
push
pop
loopne
xchg
nop
fiadds
push
lldt
mov
les
mov
sbb
lods
cmpsl
stc
mov
fldenv
js
rcrl
iret
xor
fcoml
sbb
sar
sahf
mov
mov
mov
popa
pop
cmp
adc
shll
outsl
jecxz
int3
push
and
mov
cmp
fdiv
pop
ljmp
mov
lahf
and
add
add
scas
mov
hlt
mov
into
adc
lds
mov
xor
and
test
jbe
xor
fiadds
and
jnp
and
jo
fimull
sbb
xchg
adc
test
xchg
push
daa
es
dec
movsb
gs
cmp
out
faddl
mov
jno
add
sub
jnp
sahf
aam
xor
andb
ds
sub
jnp
jg
inc
aam
fwait
test
push
push
adc
inc
call
lret
movsl
into
aad
ror
adc
out
push
mov
mov
sub
aad
mov
scas
rcrb
mov
loop
ficomps
push
mov
lds
test
bound
es
push
cmp
cmp
push
test
js
cmp
bound
inc
pop
mov
pop
sub
xchg
andb
sbb
sub
mov
cmp
jg
mov
rcl
mov
xchg
mov
mov
or
and
jmp
call
pop
mov
xchg
jnp
and
subb
ret
push
dec
int
lahf
shlb
out
adc
jne
scas
mov
std
into
int
fiaddl
adc
push
in
fdivl
adc
or
xchg
test
call
lcall
dec
xor
out
and
stos
cmp
insl
movb
pushf
mov
sub
adc
sbb
enter
sbb
cmovb
enter
cmp
or
mov
pusha
pop
cs
repz
adc
jge
and
jae
ljmp
push
lret
das
gs
rolb
out
adc
aam
adc
mov
xchg
dec
dec
arpl
xorb
dec
inc
and
push
pop
push
jb
lcallw
inc
dec
sbb
jle
or
and
dec
mov
std
mov
mov
mov
adc
decb
movsb
test
sub
inc
mov
inc
out
in
or
dec
sbb
push
mov
nop
jge
lret
iret
cmp
mov
push
imul
mov
mov
dec
stos
cltd
int3
pop
jae
movb
icebp
push
cli
xor
dec
scas
loopne
test
shll
mov
rorl
jp
scas
jbe
fildll
into
out
out
add
mov
inc
dec
add
arpl
or
sbb
ja
xor
mov
cmp
dec
out
dec
arpl
mov
sbb
mov
lods
jp
adc
inc
mov
cmpsb
lcall
sbb
scas
repnz
inc
sti
aam
or
addr16
ljmp
daa
sbb
xchg
cwtl
xor
sbb
push
lods
sarl
or
hlt
inc
jg
not
gs
cli
jnp
adc
ds
sbb
popa
loop
lret
sub
pop
or
inc
and
mov
dec
xlat
lods
and
inc
mov
call
mov
fld
xchg
and
xor
push
stos
insl
movl
and
add
or
aad
negb
rcll
dec
xor
jb
repz
sub
inc
enter
jle
add
sub
imul
dec
negb
enter
or
dec
and
inc
movsb
stos
fmull
idivl
lock
pop
out
ret
popf
mov
shll
imul
sbb
stos
and
int
cmpsb
int
int3
fldl
mov
sahf
and
push
fstl
es
cld
mov
cmpsb
test
sbb
inc
std
sub
out
insb
mov
pushl
stc
ja
add
mov
jbe
lcall
fwait
add
adc
ret
jo
movsl
dec
add
in
xchg
loopne
rcll
xchg
fmul
inc
push
mov
dec
popa
aad
daa
mov
cld
xor
das
inc
loopne
and
sub
sbb
adc
or
xlat
dec
xchg
sbb
vmwrite
jle
mov
jle
into
cmp
into
pushf
push
ja
shrl
add
dec
mov
ja
and
aaa
xchg
push
rclb
pop
daa
jg
testl
jge
pop
cltd
ss
das
jbe
loopne
ret
jge
fmuls
popf
repz
sub
cmp
sbb
cltd
lods
fldcw
cwtl
aas
rcr
and
cmp
jo
arpl
mov
lahf
outsb
js
lods
sarb
mov
cmpsl
sbb
ja
imul
lods
cmp
aam
mov
and
xlat
mov
dec
fmul
stc
imul
addb
and
outsb
push
addl
mov
cmp
lea
cmc
push
and
jo
mov
test
cli
in
xlat
int3
in
xchg
xchg
rolb
ret
adc
adc
loopne
lods
enter
xchg
sti
stos
jne
sbb
push
ja
pop
call
adc
mov
cmp
call
pop
iret
hlt
jae
xor
mov
cld
out
sti
mov
cmp
lcall
cmp
adc
push
xchg
data16
cld
aam
mov
inc
and
int
xor
lods
js
jae
out
cmpsb
cmp
mov
arpl
jg
and
data16
es
sub
mov
popf
add
into
cli
jbe
repz
ror
and
push
ret
sbb
out
push
lcall
push
add
jle
push
cmp
dec
cmpsb
icebp
lods
jae
mov
jle
cli
push
repnz
sub
cmp
inc
ljmp
shrl
rcrl
cs
xchg
push
cmp
or
roll
dec
hlt
inc
bound
pop
out
sbb
nop
pop
push
jne
sbb
sbb
adc
push
add
repz
ficoml
cmp
cmp
adc
jae
pop
and
aaa
pop
adc
test
addr16
fxch
jmp
arpl
inc
pop
adc
leave
enter
mov
mov
xchg
out
shr
mov
movsb
imul
fwait
lret
xor
push
lret
push
decl
loopne
jg
addr16
add
xor
inc
xor
sbb
ds
jae
jg
inc
mov
pop
pop
sti
rolb
js
or
and
or
movsl
fdivp
std
push
call
xchg
jno
rcrb
fildll
dec
cli
dec
mov
bound
dec
xor
int3
movsb
les
stos
add
jo
mov
jecxz
and
sub
cmp
shlb
xchg
pushf
cli
and
pop
in
and
shl
arpl
pop
movsb
push
rorl
adc
decb
adc
pop
loopne
and
xor
or
je
imul
fs
adc
push
pop
cmpsb
aas
sar
push
fcomps
rcrl
gs
pop
in
es
fwait
test
mov
out
jge
mov
xchg
inc
sbb
xor
pop
lock
je
loope
mov
cmp
shlb
cmp
add
inc
gs
out
rcr
mov
mov
and
in
mov
pop
hlt
mov
mov
das
dec
gs
pop
inc
pop
into
es
mov
ja
xchg
lock
fcomps
xchg
fadd
mov
adc
stos
inc
xor
or
orl
je
out
sbb
or
fisubl
mov
data16
bsf
mov
xchg
ret
gs
std
les
shl
das
js
mov
and
mulb
add
mov
dec
aam
mov
add
ja
pop
aad
stc
or
cli
inc
mov
xor
inc
adc
jg
mov
movsb
cwtl
jnp
add
pusha
loope
xchg
and
in
out
insl
ret
outsb
lcall
sbb
leave
ficoml
sbb
add
cmpsb
fwait
add
stos
ficomps
lods
jg
in
cmp
fwait
sub
mov
push
cld
hlt
xchg
fdiv
jle
cmpsl
bound
dec
and
sbb
pushf
lods
sarb
mov
inc
pop
call
stc
dec
push
mov
adc
cmp
pop
divl
stc
dec
push
fldl
frstor
nop
aas
shlb
inc
shlb
push
ret
pop
movsl
loop
in
les
test
dec
loop
push
insl
inc
subb
sahf
pusha
sub
or
arpl
mov
lds
cmp
xchg
arpl
ss
lods
loopne
inc
fistps
add
jge
adc
xor
inc
cmp
movsb
out
adc
sbb
adcb
mov
mov
add
movsb
add
mov
movsb
movsl
cmp
mov
lds
sahf
pop
ret
sahf
adc
jno
repnz
sub
fidivl
add
xor
lret
add
sti
or
lods
pop
ret
mov
sbb
sahf
clc
repnz
pusha
dec
mov
iret
leave
xor
shl
lock
cli
dec
fdivp
daa
stos
mov
rcll
je
fbstp
out
je
adc
out
push
stos
mov
dec
adc
sub
pslld
xchg
xchg
bound
mov
gs
jne
mov
mov
jge
and
imul
adc
inc
mov
mov
repnz
sti
popf
jg
xor
sahf
dec
mov
pop
es
add
xchg
lcall
pop
and
les
mov
hlt
mov
jo
adc
jo
push
sbb
decl
pop
or
subl
push
in
jns
jnp
jo
mov
in
push
sbb
ja
dec
insb
ret
or
sar
adc
movsl
ret
imulb
cmc
aaa
pop
cmc
mov
fldt
push
mov
ljmp
ds
icebp
pop
in
xlat
xor
mov
cmp
cmp
sarb
push
setg
in
jl
cmp
pop
xchg
mov
cmp
les
gs
xchg
movsl
xchg
add
pop
xchg
aas
mov
and
inc
ljmp
out
std
pop
jg
rcrl
jg
add
push
pop
adc
mov
jp
xchg
aad
jg
pushf
jns
mov
jo
push
rorl
mov
flds
shll
mov
iret
and
mov
add
icebp
mov
mov
jns
xchg
out
sub
shl
or
pop
mull
adc
stc
das
rolb
cmp
pushf
and
je
pop
jle
mov
mov
into
adc
pushf
arpl
push
stc
jo
jle
mov
js
loopne
push
push
push
add
xor
std
ds
lret
jns
or
insl
outsb
and
cmc
mov
adc
cmc
inc
mov
ds
icebp
iret
outsl
xchg
mov
sub
mov
mov
cmp
push
sub
pusha
adc
sub
ret
sarb
and
loop
aad
sbb
stc
push
sbb
arpl
loopne
pop
sbb
test
pop
outsl
or
add
jmp
ret
push
cmc
xor
insl
dec
lods
add
ret
cmp
dec
mov
call
push
stos
sbb
sub
jle
bound
xorl
adc
adc
jge
pop
dec
mov
add
in
lahf
ja
xchg
test
dec
mov
jo
push
mov
xchg
mov
fisubrl
mov
in
pop
add
cmpsl
vpsubusb
sbbl
in
inc
sub
loope
repz
and
push
mov
add
repz
in
push
inc
push
ret
inc
add
mov
gs
clc
std
jae
pminsw
pop
sbb
cmp
or
movsb
les
dec
jl
xchg
sbb
pop
fs
fistl
xor
jo
int
mov
out
mov
jne
mov
ds
inc
mov
into
cltd
inc
jnp
pop
fsubrs
pop
push
xchg
or
pop
jne
xchg
push
sub
inc
sbb
dec
jmp
or
rcrl
xor
fbld
roll
mov
xchg
ret
xchg
cmp
out
xchg
lods
dec
lret
mov
mov
bound
sti
lods
inc
leave
stos
pushf
pop
psadbw
sub
add
lret
test
rcl
lods
adc
and
in
add
mov
ss
cltd
loop
mov
xor
dec
pusha
mov
sub
inc
lods
ficompl
xchg
fimull
lods
fidivrs
pushl
popf
xchg
push
mov
clc
and
push
xorl
dec
mov
test
movsl
dec
mov
jp
aad
out
into
ret
mov
repnz
pop
addr16
clc
push
js
repnz
jle
cli
push
fwait
add
outsl
in
lcall
lahf
shl
stos
ss
push
leave
sub
pop
jne
arpl
xor
sub
jecxz
and
sbb
lret
or
movl
jle
mov
rclb
cltd
int
dec
mov
mov
adc
loopne
aas
add
jbe
sub
test
sahf
jge
inc
neg
orb
loop
leave
insl
movsb
faddl
sahf
jl
inc
repnz
jo
movsl
inc
or
jnp
mov
out
jbe
incb
sbb
inc
daa
or
popa
negb
inc
jp
or
es
xchg
sti
shlb
and
mov
add
les
shlb
mov
and
push
sbb
jl
loop
or
pop
xchg
js
xchg
push
fiaddl
sti
jb
pop
xchg
into
sbb
mov
jp
popa
adc
call
insl
icebp
mov
outsl
sub
xchg
pop
adc
lock
imul
fstl
imulb
mov
rcl
insb
mov
enter
or
sahf
sub
lea
rorl
jnp
xor
ss
adc
scas
loopne
mov
jl
ds
enter
ds
ss
rorl
aas
mov
pop
arpl
cmp
cli
adc
mov
mov
push
scas
adc
insl
mov
sub
or
xchg
bound
orb
mov
add
dec
iret
pop
sbb
sub
rcrl
lods
int3
js
cli
fcompl
adc
mov
shll
adc
sbb
cmp
push
mov
jno
cmp
shr
shlb
or
xchg
cmp
daa
xchg
ja
jb
pop
pusha
mov
data16
enter
movl
or
out
movsl
or
cltd
inc
push
loopne
and
dec
add
push
loope
stos
pop
mov
sti
xor
repnz
xchg
lcall
es
xor
mov
xlat
jno
out
pop
jp
ret
loopne
test
mov
mov
movsb
adc
dec
cwtl
add
pop
sub
dec
lahf
scas
orl
lahf
dec
jb
shll
lahf
mov
xor
xchg
into
cld
xor
out
test
into
repz
inc
push
cmp
daa
mov
pop
inc
fbstp
enter
sub
xorb
out
movsb
cld
loope
icebp
xor
ljmp
pushf
ret
jmp
rorl
mov
jge
fwait
jae
mov
adc
xchg
or
adc
sbb
jle
call
lods
js
mov
xchg
sub
mov
mov
fstl
cmpsl
mov
cwtl
jmp
arpl
add
test
gs
push
xor
add
and
adc
movsl
jns
pop
pusha
aaa
outsb
test
inc
mull
int
inc
or
in
aaa
not
cmp
jg
xlat
mov
mov
test
mov
dec
repz
or
test
cmp
in
rorb
inc
lods
cmc
aam
xchg
push
insb
mov
jp
ja
jp
add
sbb
sub
pop
cmpb
iret
orb
cltd
andl
push
bnd
daa
out
dec
add
mov
sub
and
xchg
loope
ss
decl
test
repz
mov
add
sub
pop
popa
xlat
push
inc
lret
mov
fcom
sbb
mov
fs
jbe
jge
push
mov
fdivp
sub
enter
rcll
dec
pop
movsb
mov
inc
fidivs
les
add
lahf
ds
movsb
stc
in
femms
sahf
add
subb
mov
cli
das
in
cmpsl
loope
jae
dec
sub
add
les
mov
insb
dec
mov
loopne
cs
xor
ret
or
inc
sbb
inc
cltd
jo
adc
mov
lahf
leave
lods
mov
imul
or
pop
ljmp
hlt
leave
outsb
add
mov
stos
lods
fnstsw
orl
lods
sar
push
stc
adc
lcall
stc
in
add
std
or
les
mov
pop
stos
mov
or
sbb
in
mov
xchg
loope
out
pop
inc
cld
push
mov
and
add
aam
push
jmp
outsl
mov
aaa
inc
int3
xor
push
stc
mov
mov
daa
and
sub
xor
pop
sbb
test
pop
hlt
outsb
movsl
pop
and
push
ja
or
add
int
sbb
mov
or
and
out
sbb
mov
or
cwtl
jg
popa
test
adc
mov
push
scas
mov
sbb
sub
daa
pop
push
cmp
jecxz
push
pusha
test
pushf
adc
mov
or
fisttpl
xchg
rcrb
ja
rclb
mov
dec
xchg
insb
daa
jge
and
pop
mov
dec
pop
dec
cmc
out
xchg
or
cwtl
loope
jns
clc
pop
pop
fstl
data16
push
jnp
addr16
jmp
push
sub
cs
mov
inc
sub
xor
push
stos
cwtl
mov
test
add
mov
xchg
lods
push
xor
imul
test
push
dec
dec
sbb
in
das
es
sti
adc
js
xor
je
and
popa
mov
xchg
rclb
mov
xchg
jmp
ret
dec
jg
push
negb
out
nop
push
pop
mov
cmp
mov
jo
mov
aam
out
jle
aas
xchg
clc
mov
lock
cs
pushf
inc
mov
xlat
sbb
cmc
and
fbstp
and
out
lret
push
add
scas
lahf
add
push
inc
mov
lret
jp
inc
pop
scas
pusha
xor
jg
jmp
mov
pop
ja
out
mov
out
sbb
add
icebp
inc
loop
dec
leave
out
pushw
adc
sub
sbb
mov
jns
stc
mov
aad
and
imul
repz
test
push
idivl
loop
pop
lock
pop
pop
or
subb
cmp
jg
mov
loope
lock
cltd
pop
xor
repnz
subb
repnz
fisubrl
inc
test
stos
test
mov
inc
cmp
stos
add
mov
jae
jge
and
sub
test
and
jb
fadd
pusha
aas
enter
xor
test
xor
je
ss
loope
jg
ljmp
std
adc
lea
pushf
rorb
aam
sub
stc
push
std
lahf
mov
pop
add
rorl
jmp
icebp
xchg
into
fs
xchg
push
cs
push
sbb
js
mov
mov
add
mov
or
xor
mulb
dec
stc
cmp
lcall
dec
test
test
stc
loopne
xchg
inc
sarb
xchg
mov
xchg
inc
lods
mov
lds
mov
movsb
mov
xchg
popa
je
cmpsl
adc
les
test
cmp
sbb
jns
jl
in
test
sarb
and
insl
jo
addr16
xor
sarb
arpl
test
inc
xchg
adc
cmpsl
mov
fwait
scas
dec
stc
call
adc
dec
loop
aam
xchg
mov
pop
aad
sub
pop
push
lcall
or
xchg
mov
out
idivb
mov
rcll
out
fadds
pusha
xchg
dec
mov
mov
mov
mov
mov
in
in
dec
xchg
and
scas
in
sub
adc
add
scas
add
out
cmp
rcll
lret
out
je
leave
pop
or
in
mov
fs
mov
jg
std
or
lret
mov
xor
adc
and
int
jnp
and
cmpsl
mov
jae
or
push
inc
mov
lds
pop
or
popa
imul
shll
loopne
and
sub
xor
and
lock
jae
pop
gs
sub
repnz
or
in
or
or
inc
cld
inc
out
mov
inc
inc
push
pushf
jle
dec
shlb
aam
jg
mov
xchg
dec
sub
into
inc
push
cmp
pop
cltd
lret
cmc
pushf
loopne
insl
push
xchg
jae
stc
out
dec
mov
imul
loop
je
lods
xchg
insb
lcall
outsb
int
fsubrl
test
int3
jnp
cmp
insl
std
pushf
bnd
scas
jo
xchg
fwait
jb
push
or
aaa
xorl
xchg
jecxz
subb
inc
in
cmp
mov
loope
push
stc
arpl
lcall
icebp
das
pop
ret
pushf
loope
dec
mov
inc
clc
das
pop
fs
xor
icebp
pop
out
test
fwait
test
adc
sub
in
push
fistps
insl
and
adc
xchg
jecxz
rcrl
push
add
jne
lea
xchg
daa
adc
pop
push
adc
imul
imul
push
push
or
mov
or
sahf
mov
push
jo
xor
sti
lahf
loope
outsl
dec
cld
stos
sbb
fsubs
shll
cmp
inc
cmpb
sub
add
sbb
outsb
je
mov
or
fiaddl
stos
pop
cltd
sub
iret
mov
or
lea
jp
mov
sbbl
mov
push
mov
dec
mov
xor
cmp
sbb
mov
lsl
mov
pop
xchg
jbe
stos
xor
fimuls
pop
and
lds
jne
insl
sbb
adc
jns
arpl
sbb
sub
into
pop
orb
je
stos
scas
push
cli
stos
mov
xchg
push
out
dec
fucom
je
shll
adc
add
push
gs
adc
dec
cmp
sarb
lods
xor
aas
mov
adc
ja
adc
cmp
and
or
lds
in
jg
dec
cmp
xor
imul
xorb
out
pop
loop
sub
cmpsl
das
cmp
aam
jbe
adc
or
pusha
and
aaa
aas
jmp
xor
lds
and
popa
pop
jge
or
addr16
fidivs
jle
cld
and
or
dec
cmc
repz
jl
filds
pop
es
jb
mov
lret
jmp
outsl
add
adc
fmul
scas
ja,pn
and
or
inc
and
sub
push
or
jg
and
jne
sti
pop
enter
dec
xlat
jo
and
xor
in
or
inc
xchg
sbb
fdivrl
repnz
add
xchg
mov
pop
and
push
adc
and
popa
pushl
jo
ficomps
lahf
std
jmp
mov
ljmp
mov
or
dec
pop
test
pushf
leave
jo
fsubrs
repz
ss
and
sbb
mov
rorl
dec
xchg
sarl
dec
dec
inc
bound
jmp
arpl
mov
add
cwtl
mov
xlat
scas
jno
dec
fbstp
inc
xor
xchg
fdiv
sti
cmp
xchg
pop
lcall
mov
mov
sbb
pusha
sub
push
scas
sub
cmc
dec
inc
xor
and
or
cmp
push
or
xchg
mov
push
jno
cmc
gs
add
mov
xchg
inc
test
cmp
and
test
leave
adc
scas
rol
jle
mov
nop
outsb
add
sub
ret
xchg
stc
push
in
shlb
mov
add
mov
cld
popa
sbb
jbe
push
mov
mov
ret
jnp
jmp
adc
movsl
orl
ds
sub
adc
and
movsb
test
fiadds
pop
ljmp
clc
xor
xchg
inc
jne
mov
xchg
jmp
lea
imul
out
mov
mov
add
nop
sbb
addr16
sub
xor
sbb
dec
sbb
jmp
push
jne
fmull
jmp
in
mov
and
add
dec
scas
mull
inc
inc
xor
adcb
cld
fisttps
pop
mov
test
or
in
mov
pusha
pushf
xor
sbb
jo
out
je
addl
mov
out
push
fnstsw
push
ja
cmp
add
repz
add
jnp
movsb
mov
or
xchg
lods
ret
mov
push
pop
push
mov
jne
sub
movsl
xlat
or
leave
int
sbb
inc
adc
jmp
jg
xor
and
arpl
dec
fwait
mov
loope
push
push
mov
mov
setb
jle
mov
and
fldcw
mov
xor
mov
in
push
enter
xor
inc
pusha
push
push
sub
shll
mov
sbb
fst
ficomps
pop
fnstsw
subl
repz
push
pop
mov
rcl
cmp
dec
fisttps
clc
out
mov
lea
inc
imul
dec
mov
jbe
ljmp
jno
loope
call
lock
xchg
xlat
push
cmp
push
push
xor
sbb
jg
cmc
das
out
mov
push
sahf
jb
aaa
cmp
add
mov
iret
mov
push
into
lahf
iret
mov
cmp
xchg
ja
jo
call
dec
cmp
jle
jp
daa
push
nop
icebp
out
cmp
pop
dec
fsubrp
jg
mov
cmp
xchg
pop
push
dec
jno
xlat
popf
fisttpll
mov
adc
adc
fisubrl
call
xor
test
adc
jo
dec
mulb
jle
call
mov
shll
sbb
test
in
loopne
cmp
add
aas
test
aam
lret
pusha
inc
jp
dec
sub
dec
aam
jmp
and
mov
fucomi
out
imul
std
mov
and
addr16
mov
xor
push
fists
fidivs
xorl
push
or
add
cmp
xchg
sahf
pusha
test
bound
xchg
cmc
pop
pop
shl
shrb
cmp
or
cmp
ds
fs
mov
test
loopne
add
cltd
lea
mov
push
pop
xor
pop
insl
mov
mov
pop
loop
jecxz
aad
lock
daa
xchg
push
xchg
mov
stos
mov
pop
mov
mov
pop
and
ds
pop
add
xor
les
or
xchg
xor
mov
mov
or
sbb
cmc
xor
add
xchg
adc
call
add
dec
xor
push
xor
sbb
push
mov
movhps
cmpsb
out
jle
bound
jno
push
push
xchg
fwait
popa
jge,pt
ja
insl
inc
jmp
popa
mov
adc
arpl
shll
add
cmpsb
sub
dec
sbb
mov
addr16
or
aaa
and
pop
ret
fcoml
incb
sbb
and
lret
push
mov
lds
cmp
test
sbb
les
xor
hlt
movsb
pop
pop
outsb
add
mov
loopne
mov
jo
add
sub
mov
pop
mov
pop
add
repnz
xor
and
scas
repz
fdivs
push
inc
loop
jo
adc
jle
repz
out
aad
sahf
fbld
pop
pop
jp
insl
incl
or
dec
jns
shrb
outsb
dec
push
mov
add
jno
add
mov
or
lods
mov
les
mov
into
sub
mov
aas
mov
std
mov
sub
movsl
stos
dec
iret
mov
add
scas
ficomps
js
sti
js
or
out
adc
inc
push
mov
cmp
cmc
shrb
pop
inc
roll
adc
ret
pop
cwtl
jbe,pn
addr16
das
fadds
sub
loopne
add
pop
movsl
pop
mov
cmpsb
adc
fiadds
adc
push
fcmovnb
loopne
stos
stos
hlt
in
test
cmp
out
inc
popf
bound
sbb
jnp
push
lock
pop
fiadds
mov
ficoml
cwtl
mov
ja
pop
insb
lcall
mov
cmp
repnz
outsb
in
enter
pop
mov
popa
dec
in
push
or
mov
movsb
cwtl
sti
cmp
xchg
ret
std
inc
push
aad
sbb
dec
dec
cltd
and
cmp
mov
orl
movsb
pop
ljmp
pusha
push
int
pop
outsl
insb
int
pop
outsb
xor
rorl
test
lret
sub
js
sub
ljmp
dec
mov
adc
cmp
testl
add
pop
mov
test
popa
sbb
lret
repnz
outsb
adc
cmc
sub
dec
loopne
mov
mov
jp
loopne
rcr
jne
faddl
fcmovnu
add
mov
dec
in
jle
ffree
dec
fwait
imul
mov
aam
cmp
push
jae
sub
lods
push
mov
and
sysenter
cmp
cmp
pop
xchg
sahf
movsl
dec
cmp
nop
add
xor
fcomp
bnd
lret
adc
sbb
lret
movsb
int3
mov
push
sbb
jbe
ljmp
sbb
inc
imul
stos
pop
or
rcll
sti
pushf
out
cmp
cmp
adc
mov
sub
xchg
test
ret
mov
nop
inc
and
out
sub
inc
sub
cmpsb
adc
mov
aaa
push
cmpsl
add
fwait
add
inc
enter
xor
push
js
add
int3
out
cmp
and
dec
movsb
inc
mov
enter
ja,pn
sbb
cmp
imul
push
jge,pt
or
xchg
sbbl
in
lods
es
cld
and
mov
cmp
xor
aas
loope
and
jb
arpl
mov
lods
leave
lret
hlt
mov
dec
int3
jmp
loope
test
dec
xchg
arpl
loopne
fs
sub
aaa
adc
out
dec
xchg
pop
jecxz
add
mov
xor
cld
sbb
xor
xchg
xor
loope
mov
shll
inc
fistpll
xchg
dec
xchg
cld
clc
lahf
lret
jns
cmp
pop
inc
dec
adc
xor
add
pushf
jb
adc
js
call
sub
cmp
lea
loope
push
push
dec
lret
fists
sbb
mov
pop
sub
aas
cmpsl
add
lcall
push
xor
xchg
cmc
cmpsb
lods
mov
fcomip
or
mov
or
stos
sub
fdivp
mov
inc
sub
mov
incl
xor
jnp
stos
mov
or
mov
cmc
icebp
imul
jle
adc
fisubrl
ret
test
sub
ds
and
jp
ja
xlat
sti
mov
and
icebp
or
pop
jnp
push
mov
cmpsl
add
lret
std
mov
js
into
sahf
stos
dec
jo
mov
call
xchg
out
mov
push
sarl
cmp
jecxz
lahf
aam
mov
loopne
sbb
jp
lahf
and
ret
js
mov
or
sbb
lds
popa
clc
inc
dec
xor
jl
iret
mov
jp
cmp
inc
arpl
sub
dec
faddp
int
cmpsl
outsl
or
dec
pop
pop
sub
fsub
sar
addr16
adc
dec
xor
test
jne
aam
xchg
je
dec
jne
jbe
test
lds
mov
jl
imul
test
aad
lds
cmp
insl
loopne
leave
pusha
push
in
scas
repz
cmc
and
pushf
inc
pusha
mov
push
or
cwtl
add
ja
cmp
mov
repz
cmp
pushf
loope
outsb
mov
daa
into
mov
and
sub
jmp
sbb
out
jp
ds
jnp
xor
mov
es
and
pop
inc
mov
mov
push
adc
jns
fst
mov
shrb
rolb
push
mov
xor
and
jg
fsubs
bswap
int
bound
xorl
nop
mov
scas
enter
or
inc
test
jecxz
js
mov
pop
mov
mov
shll
imul
leave
cmp
mov
int3
push
stc
jne
add
mov
rorl
add
arpl
loop
and
andb
push
stos
call
xor
pushf
or
sub
or
jbe
jecxz
or
fdiv
cli
push
loopne
aas
testb
mov
xor
sub
in
jbe
jmp
jp
cmpsb
push
dec
xorb
dec
pushl
cmp
int3
mov
lcall
daa
sub
popf
inc
mov
movsl
lods
aas
fwait
mov
xchg
jp
fs
jl
inc
push
push
add
mov
push
out
push
std
mov
and
sbb
data16
aam
les
jle
or
into
lods
or
mov
pop
mov
repnz
jle
or
nop
inc
xor
gs
or
scas
xlat
fcomps
dec
dec
mov
mov
adc
aad
out
in
add
sbb
and
in
mov
fcomp
ret
data16
mov
mov
out
xchg
push
mov
loop
xor
add
sub
lret
scas
push
push
jmp
shrl
sbb
xlat
jl
dec
mov
push
call
fstps
insb
jo
xchg
fsubr
pop
dec
dec
jns
jbe
inc
js
lock
mov
addb
popa
sbb
jecxz
adc
mov
call
cld
inc
or
dec
mov
xor
push
ret
pop
aas
mov
mov
fidivl
fisttps
addl
xchg
adc
bnd
sub
repz
xor
push
mov
scas
inc
pop
es
iret
xchg
nop
cmp
aad
or
mov
pushf
pop
sub
lods
jecxz
sbb
fldl
mov
pop
in
inc
mov
icebp
out
outsb
in
mov
test
dec
pop
jp
xchg
es
mov
cmp
ljmp
jnp
sarb
stos
dec
fbld
xlat
outsb
fisttps
rclb
xchg
rorl
pop
hlt
mov
jnp
pop
or
dec
xor
sub
pushf
mov
adc
xchg
bound
inc
dec
test
mov
repnz
or
dec
dec
cld
clc
std
sti
dec
push
pop
fiaddl
xchg
sub
pop
jmp
add
fisubrs
dec
sub
fcmovnbe
push
fisttps
push
test
aas
dec
scas
mov
ret
pop
cld
push
mov
jmp
je
pop
mov
fwait
sub
jb
lret
shr
sar
das
in
pop
orb
stos
push
lret
addb
jge
jns
push
pop
fistl
repnz
jns
jge
aas
lret
gs
hlt
mov
or
xchg
repz
push
dec
loop
or
out
cmc
pop
out
pop
outsb
jo
outsl
orl
hlt
fcom
aas
rorb
inc
push
stos
fwait
sbb
aas
movsl
pop
je
jecxz
add
jo
mov
in
lret
jb
xor
test
je
icebp
setae
enter
add
mov
stos
popf
push
lahf
jns
push
and
jg
dec
aaa
bound
aas
push
das
pop
insb
xor
mov
loope
ss
insl
ror
add
pusha
and
mov
jno
sbb
adc
jl
aad
sbb
push
inc
mov
dec
push
insl
repz
add
loope
loopne
adc
loop
lock
xor
aam
pusha
aaa
mov
cmp
pop
mov
or
adc
xchg
xchg
sbb
mov
les
pop
and
cltd
adc
jle
jbe
popa
fcmovne
xlat
and
sbb
push
in
rcrl
mov
pop
mov
fwait
popf
outsb
cmpsl
pushl
xchg
pop
in
mov
push
pop
cwtl
mov
insb
sub
xchg
and
dec
or
cld
jmp
pop
push
jge
lods
outsb
ret
jp
and
lock
sti
scas
lret
dec
sbb
xchg
in
ljmp
mov
jge
lret
cli
in
xchg
scas
push
add
shll
jne
push
fidivrl
fnstcw
push
pop
mov
in
xor
movsl
mov
je
in
jp
cmp
push
mov
add
and
adcb
jp
ja
loopne
into
clc
dec
sti
cmc
sbb
adc
xchg
jp
fisttpl
xor
call
jl
pusha
jge
loope
bound
popf
mov
out
inc
add
cmp
jo
loopne
cs
das
enter
shl
mov
fistl
jge
or
pushf
lea
aas
in
adc
mov
sub
jno
call
add
mov
sarb
fs
addr16
xchg
icebp
mov
and
xor
xor
pop
gs
rclb
aam
jp
or
adc
cmc
subl
imul
mov
mov
jb
mov
adc
mov
daa
movsb
sbb
scas
mov
cli
mov
dec
mov
and
fstl
or
cmp
jge
sub
pusha
adc
mov
fmulp
mov
enter
cltd
stos
int3
and
and
mov
jge,pt
aaa
shlb
mov
mov
lret
jmp
and
test
cmp
mov
jo
inc
iret
pop
ja
push
xchg
pop
mov
mov
inc
popa
cmp
aad
jle
in
pop
sbb
cwtl
fisttpll
cmp
call
sub
inc
dec
ja
insb
sbb
pushf
stc
cs
mov
mov
mov
push
pop
repz
mov
jp
pop
js
pop
pop
pop
repz
pop
aad
dec
movsl
push
aam
mov
lds
mov
mov
decl
hlt
mov
mov
test
add
sbb
cmp
push
int3
dec
call
std
cmc
xor
mov
add
xchg
shlb
bound
int
into
xchg
loopw
or
mov
xchg
ss
pusha
sahf
push
dec
movsl
mov
loope
in
pop
dec
je
mov
repnz
imul
call
mov
and
push
cmpl
loopne
mov
aad
lea
cli
sbb
mov
aaa
stos
jo
mov
daa
push
pop
dec
adc
inc
add
xchg
sahf
xchg
or
pop
xchg
sti
ss
scas
mov
lret
add
mov
jg
add
loope
mov
repnz
sarl
out
lods
fwait
jb
shl
jmp
or
sub
in
negl
sbbl
dec
lahf
adc
imul
push
sub
push
mov
jle
fisubs
xchg
add
cmp
jle
adc
insb
hlt
out
test
mov
ljmp
adc
inc
xchg
call
and
and
pop
movsl
sub
or
ret
bound
pop
inc
push
aad
daa
push
xchg
push
mov
cmp
jmp
jl
scas
pop
jns
jl
imulb
push
dec
ss
in
xor
or
pop
adc
pop
cmpsb
or
mov
inc
insl
push
sub
xor
cmp
mov
adc
scas
cltd
push
jge
in
cmp
jnp
sbb
gs
dec
jge
fiaddl
push
mov
sbb
mov
xorl
shlb
sbb
in
loope
lock
push
push
or
xor
loop
dec
test
scas
add
out
decl
xchg
xor
mov
push
ror
xorb
rcll
ret
cmpl
test
jmp
xlat
fists
dec
lea
inc
pop
xchg
rorl
xchg
stos
call
cld
push
cmp
pop
sub
cwtl
cmp
sti
cli
xchg
lods
hlt
fists
or
testb
xor
jl
dec
lods
jnp
jns
mov
inc
jb
jl
leave
sub
je
leave
sahf
lret
arpl
shr
loopne
xor
sub
jg
mov
lahf
add
cmp
adc
movl
mov
mov
add
mov
movsb
dec
add
lea
dec
push
adcb
cmpsb
dec
push
mov
xor
xor
xor
das
int3
or
test
pusha
push
daa
dec
adc
cmp
xchg
xor
adc
inc
rcl
test
xchg
popl
or
std
and
bound
je
jecxz
in
pop
pushl
fldcw
or
cwtl
cwtl
in
and
pushf
mov
jns
test
sahf
or
movsb
jmp
xchg
cli
add
lods
test
push
add
adc
shrl
mov
inc
std
lods
out
xor
cs
xlat
std
outsl
aam
lahf
cli
js
pop
cmp
mov
mov
xorb
jno
subl
cmp
nop
insl
ljmp
mov
rcr
popf
xor
inc
leave
cmc
in
dec
arpl
mov
xchg
fisubrs
scas
test
js
sbb
mov
std
jns
or
ja
pop
adc
add
xor
addr16
and
add
ja
ret
mov
aaa
bound
jns
cltd
je
fistpll
jnp
push
pop
adc
gs
addl
dec
ss
and
out
cld
out
inc
push
popf
notb
jle
dec
lea
adc
cmc
jmp
fidivs
dec
pop
mov
and
jl
adc
call
mov
out
popf
call
pop
rolb
fwait
dec
and
mov
int
ja
out
jnp
jp
and
pop
push
ja
push
sbb
out
test
gs
pop
lcall
xor
es
push
out
das
sub
imul
fsubl
in
sub
pusha
mov
cmp
mov
jmp
xchg
neg
pop
out
sub
add
add
ja
xor
mov
cs
daa
xorl
loop
pop
popf
lret
jp
adc
xchg
inc
mov
movsb
jmp
sbb
dec
xor
fidivl
pop
pop
mov
neg
sbb
inc
in
push
std
scas
fisubl
xchg
fidivs
stos
das
out
pop
mov
enter
or
mov
pop
mov
or
iret
xchg
add
or
imul
rcrl
mov
pushl
es
nop
mov
sub
xchg
fildl
mov
fildl
jmp
out
inc
add
adc
pusha
ret
add
dec
mov
outsb
scas
add
jbe
and
sbb
leave
add
loop
xor
cmp
data16
and
out
jl
jae
aaa
mov
fsubl
paddd
daa
ret
mov
pop
jle
pop
shll
aaa
xor
sbb
jns
and
lret
rorb
cs
and
xchg
cmp
mov
out
ds
mov
lcall
push
cmp
out
fsubrs
adc
mov
jge
sbb
jno
sbb
mov
out
sbb
int3
jno
cwtl
insl
sbb
inc
fldt
mov
iret
mov
or
adc
hlt
push
out
sahf
xchg
and
test
push
cmp
jbe
or
popf
xchg
sub
add
pop
cmc
std
sarl
int
pop
stos
or
bound
pop
jns
mov
pop
js
push
in
aad
xchg
scas
xchg
sub
xchg
fstpt
es
in
movsl
ficoml
ficoml
push
add
sbb
dec
test
jns
jge
dec
sbb
fadds
mov
cmp
and
js
add
lcall
adc
in
add
ss
lcall
ds
pop
test
add
sbb
add
sbb
or
cmp
add
popf
ret
mov
adc
nop
add
out
addr16
sub
je
cwtl
out
pushl
in
loopne
mov
sub
and
or
push
gs
shlb
addr16
jnp
test
add
outsb
sbb
cmp
mov
mov
push
add
dec
fsqrt
das
mov
jbe
je
fs
xor
jae
cmp
in
push
insb
sub
add
push
mov
jmp
sub
repnz
adc
sbb
mov
int
jmp
hlt
pop
decl
in
orb
xchg
mov
and
sbb
xchg
add
insl
jae
push
mov
int3
mov
aad
cwtl
and
xchg
push
xchg
push
rcrl
sub
jbe
jo
jecxz
inc
xchg
mov
jo
insl
sub
cmp
fstps
out
or
rcrb
inc
inc
int3
push
int3
icebp
lret
cmp
mov
aam
sub
imul
arpl
subl
push
cld
push
mov
sbb
std
outsl
fnstsw
out
mov
push
pop
call
push
leave
xlat
and
sbb
popf
cmp
dec
scas
mov
jno
pop
pusha
fcompl
icebp
jbe
sbb
lahf
roll
mov
sub
and
mov
push
ja
arpl
pop
es
adc
add
loop
int
inc
leave
cmp
ss
insl
scas
roll
cmp
std
cs
int3
jae
adc
js
push
xor
lock
xchg
mov
repz
ret
lret
push
add
mov
sub
jb
mov
adc
dec
dec
add
jmp
mov
mov
inc
rcrl
into
cmp
hlt
imul
push
fnstcw
jmp
cmpsb
sbb
pop
fisubrs
rolb
mov
inc
aad
add
push
or
cli
jge
pop
mov
inc
pusha
adc
mov
jge
outsb
jle
mov
enter
sub
add
repnz
jns
aaa
sub
lret
data16
repz
mov
outsl
call
popf
mov
add
sub
inc
pop
out
mov
mov
gs
jbe
out
das
enter
lods
push
test
sahf
loop
add
dec
or
dec
es
inc
add
dec
jo
fdivp
sub
insl
xlat
fldcw
fisttpl
cmc
push
mov
je
sub
fnstenv
jmp
jne
inc
test
and
fldl2e
call
jmp
shrb
add
lock
fdivrl
add
mov
jo
stos
adc
push
mov
in
ror
lods
iret
pop
sbb
push
mov
stc
mov
subb
aam
ljmp
dec
outsb
test
lcall
das
scas
aas
mov
add
test
ljmp
repz
es
dec
and
repnz
daa
cmp
pop
ja
pop
pop
jne
cmp
arpl
lret
fucom
popa
je
aaa
dec
movl
dec
pop
inc
movsb
pop
fcmovb
xchg
jne
lock
sahf
mov
cmp
cmp
jg
lods
scas
pop
outsl
negb
fisttps
aas
mov
jb
aam
jae
cmpsl
aad
or
test
dec
xchg
rcl
insb
test
mov
xor
test
jg
and
sub
jbe
jl
xchg
dec
push
jns
adc
and
jp
cmp
mov
cwtl
test
pop
rclb
mov
fadds
scas
in
adc
add
nop
mov
push
mov
push
lods
call
rcrl
adc
rorl
or
subb
addl
gs
mov
js
or
int
push
lods
hlt
fsts
pusha
push
cs
outsb
xchg
fadds
jp
enter
jge
gs
push
jo
add
jo
inc
nop
lret
mov
dec
mov
push
xchg
loopne
jo
dec
sub
mov
pop
jne
xor
inc
jns
lds
xchg
in
movsl
jne
stos
outsl
lea
sbb
mov
in
mov
addr16
cwtl
popf
aad
in
mov
add
repnz
movsl
mov
fistps
out
xchg
fbstp
cmp
fcompl
adc
fs
divl
sub
dec
cli
push
pop
fstpl
push
xor
test
in
unpckhps
pop
push
in
jp
pop
xchg
in
les
sahf
push
sbb
pop
insl
push
scas
sub
int
cmp
mov
ds
xchg
mov
das
cmp
lea
push
add
je
jns
int
into
inc
cmp
test
dec
dec
jle
add
shll
ret
adc
sbb
test
test
in
jo
test
jecxz
xchg
add
insb
sub
xlat
xlat
data16
add
and
mov
push
sub
or
das
fdivl
hlt
out
pop
and
shrl
lock
add
out
mov
aad
mov
jl
lods
out
inc
cld
out
mov
pushf
sbb
dec
and
arpl
je
add
adc
jmp
mov
jp
jecxz
mov
mov
ja
sbb
push
push
push
xchg
scas
sub
dec
fwait
inc
incl
jb
into
fdivrl
std
sbb
xlat
shrb
daa
inc
sub
stos
mov
adc
pushf
cli
cmp
add
jl
inc
add
or
jns
test
mov
pop
aas
into
dec
dec
sahf
aam
cmp
insb
aam
lods
scas
ljmp
push
mov
jae
inc
mov
shl
cwtl
sub
and
addl
loop
arpl
mov
dec
loop
cmp
movsb
add
insb
inc
test
pop
adc
mov
sub
add
addb
add
mov
cmp
mov
add
gs
cmp
dec
clc
xchg
cmp
adc
popl
cmp
pop
sahf
outsl
lods
in
pop
adc
mov
ja
sbb
int
ret
jmp
leave
mov
xor
fstpt
xor
mov
xchg
rol
or
push
sub
sti
jge
push
std
or
dec
mov
stos
ficoms
mov
fisubrl
lock
stos
mov
sbb
popa
test
lods
and
shlb
mov
mov
es
and
loop
lock
imul
outsb
scas
xor
dec
dec
jge
in
loope
mov
inc
cmp
push
fsub
dec
ficoml
add
mov
adcl
test
pop
ja
sub
das
inc
adc
in
cmp
cltd
ja
pushf
push
sbbl
add
imul
lods
lock
je
hlt
pop
sub
pop
fnsave
pop
adc
jp
jecxz
mov
mov
cs
pop
dec
inc
test
mov
fsubrp
js
add
insb
stos
pop
pop
inc
push
in
mov
dec
outsl
shlb
jmp
ja
mov
lea
xor
mov
loope
mov
sbb
cwtl
inc
sbb
and
fcomip
fidivl
sbb
es
push
adc
adc
mov
lock
sub
sub
stos
push
out
movsl
std
icebp
scas
inc
fisubrs
pop
cmpl
xor
lret
mov
adc
iret
mov
xchg
scas
loope
dec
pop
push
add
add
inc
push
fdivr
cmp
movsl
sti
mov
mov
dec
xchg
push
sahf
stos
int
fcmovnu
push
sbb
mov
or
push
xchg
adc
cld
out
mov
lcall
call
mov
shlb
mov
rcll
mov
pop
les
mov
gs
loope
bound
lds
mov
scas
cmpsb
in
mov
sbb
xor
nop
mov
pop
pop
jmp
jge
sub
shr
sbb
in
and
mov
push
jp
sbb
jecxz
stos
outsl
or
in
dec
lahf
in
sub
cmp
or
pushf
push
pop
cmc
ficomps
rcll
push
popf
mull
pushf
mov
leave
insl
sti
enter
inc
add
mov
cmpb
sahf
aaa
jp
hlt
pop
mov
mov
dec
xchg
setbe
mov
adc
add
push
mov
mov
cmpl
or
fucomp
arpl
xor
mov
loopne
add
cmpsb
ret
stos
repnz
jne
mov
push
popf
es
pop
adc
and
fmuls
dec
movsb
movsl
dec
add
jbe
imul
and
inc
adc
xor
dec
mov
cmc
or
test
stc
mov
jl
adc
sub
shl
ljmp
xchg
mov
jae
arpl
in
dec
stc
xchg
aam
mov
mov
xchg
in
pop
adc
pop
add
xchg
or
inc
pop
dec
ljmp
dec
cmpsb
mov
iret
outsb
dec
xchg
and
pop
jecxz
sbb
mov
add
xchg
repz
int
loop
mov
jmp
sti
pop
and
xor
adc
mov
push
push
pop
hlt
popf
add
jmp
loopne
es
push
enter
mov
dec
test
pusha
inc
icebp
dec
mov
loopne
in
push
in
push
shrb
out
repz
sahf
shr
aam
seto
mov
jno
adc
das
mov
push
mov
sarl
dec
push
ja
mov
and
aaa
dec
fiaddl
pop
jecxz
or
push
ljmp
cmp
mov
cmc
fcom
gs
cmp
sub
dec
xor
jbe
fwait
stos
add
lcall
cwtl
cltd
dec
dec
ljmp
daa
aaa
enter
cli
scas
or
shll
pusha
fiadds
in
addb
jg
gs
cli
cmp
dec
ss
adc
jae
loop
filds
sbb
loope
mov
lea
int3
adc
aas
stos
jne
repnz
or
or
jns
xchg
add
sub
imul
inc
adc
ffree
das
push
call
int3
in
dec
xor
roll
push
adc
jnp
sbb
mov
mov
pop
pop
es
push
lret
inc
mov
jmp
sbb
cmp
stc
cmp
pop
int3
addb
mov
mov
sbb
ret
shlb
jnp
push
notl
jmp
sub
fistl
andl
push
loopne
jmp
out
sub
mov
push
and
popa
rcll
pop
in
lods
mov
pop
addr16
and
cltd
sub
addr16
scas
mov
out
or
shll
loopne
mov
sarb
pop
ret
decl
mov
sbb
icebp
mull
das
test
sarb
add
jns
mov
add
mov
mov
adc
loope
aaa
and
mov
inc
and
pop
xor
shlb
jb
lods
outsl
inc
sbb
jno
test
gs
shlb
int3
cmc
or
sarl
repnz
std
sub
movsb
cmp
hlt
adc
dec
cwtl
aaa
test
mov
test
jae
cmp
hlt
fcoml
aaa
and
jle
ret
pusha
sub
xchg
and
rcrb
or
js
sbb
mov
and
dec
fistpll
add
mov
pop
jae
fnstenv
ljmp
mov
loope
movsb
stc
movsl
or
test
pop
sub
into
inc
call
mov
lcall
sbb
aas
jns
cltd
arpl
sti
scas
shrb
addr16
aaa
mov
loope
add
xchg
xchg
mov
cmpsl
push
pop
and
aam
clc
mov
push
xchg
push
mov
aas
pop
sub
push
push
inc
les
or
pop
ror
sub
in
icebp
push
js
sbb
add
mov
sti
jnp
pusha
dec
scas
into
lods
lods
shlb
mov
cmpsb
and
andb
push
mov
aas
lock
decl
and
iret
pop
lret
jbe
int3
testl
xlat
dec
push
jb
js
insb
sahf
lods
dec
and
ljmp
mov
lods
leave
or
les
int
fwait
mov
or
dec
and
push
cmp
testl
std
pop
ret
fcomip
mov
xchg
popa
pop
add
cltd
je
sub
imul
push
testb
cltd
sarl
iret
jl
xor
outsl
sbb
jnp
arpl
jns
es
mov
neg
pop
dec
pop
sub
lds
jmp
jge
mov
cmp
int
test
fdivrp
ret
push
or
jns
out
fs
loop
cmpb
add
dec
xor
mov
rorb
adc
repz
jo
clc
jecxz
adc
icebp
cltd
mov
rcrb
insb
in
fmul
xchg
scas
mov
sub
fstpt
push
jne
mov
xchg
sahf
push
loope
cmp
loopne
lcall
mov
ficomps
in
adc
test
outsb
add
gs
int3
test
sbb
cmp
inc
pop
dec
sub
in
xchg
mov
rcll
int
or
iret
addr16
mov
inc
cwtl
jno
sbb
fisubrl
loopne
fmul
jl
shll
test
je
aad
out
mov
data16
xchg
push
inc
adcl
cmp
out
push
sub
jle
outsb
sbb
add
jl
out
add
imul
mov
imul
xchg
push
inc
pop
xchg
push
push
lock
popa
ret
scas
fucomi
aas
out
and
dec
sub
neg
mov
adc
test
leave
dec
jne
out
out
lcall
or
mov
mov
add
cmp
push
sub
loope
imul
mov
ss
into
sbb
rcrl
loop
and
in
mov
nop
call
lcall
loop
cmpsl
in
in
outsl
add
jns
inc
loop
inc
addl
lahf
xchg
pop
and
imul
into
xchg
jbe
adc
shrb
cwtl
jbe
out
je
lret
sbb
out
icebp
adc
or
sahf
daa
std
sub
push
dec
or
mov
testl
test
sub
mov
leave
push
xor
fsubrl
mov
sbb
push
loope
outsl
scas
push
xor
in
and
pusha
mov
jl
mov
lods
pop
imul
jnp
push
mov
mov
fwait
mov
mov
loope
ljmp
ljmp
sar
je
and
mov
xchg
inc
movsl
jmp
mov
push
mov
sub
shrl
cwtl
pop
adc
hlt
ret
cwtl
sbb
sub
xchg
lock
in
cmp
xchg
fldcw
xchg
pop
ljmp
dec
loope
xchg
lea
popa
loope
and
add
pop
adc
add
add
pop
into
jl
cmp
and
mov
mov
dec
mov
and
clc
mov
jle
adc
or
jmp
pop
jge
mov
loope
adc
cmp
and
jo
aaa
and
mov
xchg
int
pushf
adc
xor
call
push
aad
loope
jmp
out
mov
bnd
mov
je
add
pop
mov
or
pop
jne
out
mov
add
dec
add
xor
sub
mov
mov
lods
fdivr
cltd
setbe
hlt
mov
nop
push
fs
dec
cmpl
adcl
out
adc
std
pop
addr16
adc
pop
pop
inc
mov
stos
xor
xorl
or
push
rcrb
fcompl
movsl
and
iret
test
push
and
adc
test
add
test
scas
adc
stos
hlt
and
sti
pop
add
lret
ret
cmpsl
in
inc
xchg
xchg
jp
and
mov
jecxz
mov
out
and
and
xchg
sbb
sarl
call
cwtl
mov
or
pop
pop
les
add
leave
pop
outsl
rolb
inc
jge
mov
adc
jp
rolb
or
setg
in
cltd
pop
ds
mov
fsub
push
cmpsb
mov
jecxz
cld
fs
arpl
pusha
fmuls
sbb
mov
out
test
data16
dec
mov
push
lds
mov
inc
mov
or
sbb
in
ficoms
dec
sub
sbb
call
push
imul
aam
lret
sub
clc
jbe
mov
and
stos
add
or
nop
pusha
cmc
movsl
xchg
outsl
and
lods
jmp
add
test
cmp
lahf
cli
push
or
push
aaa
xchg
ret
fistps
repz
add
adc
or
gs
cwtl
xchg
ja
xlat
in
aad
ret
adc
mov
clc
mov
iret
add
movsl
and
add
cmc
jmp
mov
pop
cmp
or
add
test
add
lods
dec
lea
aad
cltd
jb
cmpsl
add
xor
dec
sbb
jge
inc
aam
int3
jo
outsb
xchg
notl
xor
js
jl
out
lcall
int3
mov
call
jecxz
pop
sub
add
jl
test
int
inc
and
fwait
or
and
mov
out
call
fdivs
pop
adc
neg
test
jmp
movsl
and
push
les
push
loop
or
insb
lahf
outsb
xchg
cld
inc
into
xor
xor
nop
mov
mov
rcrl
xchg
lahf
push
fdiv
mov
mov
aas
mov
add
lea
and
xchg
adc
mov
adc
enter
mov
aaa
xchg
popf
xorl
je
xchg
sub
ja
movsb
pusha
aaa
push
outsb
test
pop
fists
xor
in
cmp
dec
mov
cmpsl
mov
mov
xor
mov
ret
into
and
pop
ret
inc
mov
xor
inc
shlb
sub
repz
xor
in
std
pop
enter
jle
push
sbbb
xchg
xchg
movl
mov
xor
mov
jecxz
popa
mov
mull
adc
in
push
dec
push
in
jae
and
ficomps
jns
mov
jbe
jne
shl
or
pop
out
mov
pop
push
pusha
push
sti
iret
dec
and
mov
movsl
inc
jae
ds
aas
xchg
xchg
insb
xor
sbb
push
xchg
test
mov
cltd
cmp
and
mov
fsts
xor
mov
pop
or
jb
nop
lcall
frstor
ret
ss
and
push
ja
jl
out
xor
xchg
push
cs
mov
push
cli
dec
cmpsb
sbb
jae
jo
gs
lock
adc
push
lret
arpl
sbb
ret
or
rorl
add
dec
andl
arpl
adc
jae
icebp
jl
sbb
andl
shll
xor
in
sbb
push
mov
xchg
xlat
out
fneni(8087
div
lods
popa
cs
mov
and
dec
dec
add
or
sbb
fnsave
xor
xorl
pop
pop
repnz
xchg
mov
fcom
rolb
push
ret
sub
cmpsl
lret
mov
fwait
mov
cli
je
daa
stc
push
clc
cmp
aaa
lret
jnp
aas
mov
stos
repz
jmp
xor
jnp
cwtl
xchg
test
cmp
cli
sub
sahf
jno
movsb
imul
xchg
adc
add
clc
mov
mov
stos
jb
pusha
xor
and
lahf
xchg
sti
roll
pop
scas
addr16
fwait
pop
pop
and
ret
subl
sbb
es
fildll
imul
or
popa
sub
dec
xor
js
out
pop
test
jnp
xlat
pop
adc
movsb
pop
mov
les
call
cmp
repnz
enter
ret
pop
jae
imul
ljmp
sub
dec
mov
jbe
aaa
fnsave
cltd
fisttps
cmp
stc
dec
mov
mov
addr16
rcrl
mov
add
xchg
ficoml
mov
or
lahf
cmp
sbb
sbb
out
es
jns
test
dec
sbb
mov
push
adc
push
mov
and
insb
fstpl
scas
lcall
fs
fwait
loopne
or
push
into
out
jne
cmp
lret
sub
fwait
xchg
add
mov
pop
mov
add
shrl
cld
in
mov
stos
jb
stos
outsl
dec
fwait
push
cmp
pop
cmpsl
lods
or
push
gs
pusha
adc
mov
pop
sub
push
fs
dec
mov
sub
jnp
js
in
lret
mov
cs
mul
leave
push
adc
mov
loop
xor
clc
out
ljmp
and
out
mov
xlat
dec
sahf
outsb
mov
push
iret
xchg
mov
xor
xchg
pop
mov
pop
fsubl
test
or
sahf
jns
pop
mov
std
call
mov
repz
add
pop
jmp
mov
mov
insb
movsb
inc
data16
outsl
bnd
mov
pop
leave
lahf
xor
sub
adc
out
or
jno
insl
mov
push
arpl
shll
push
pop
stos
inc
push
and
insb
push
pop
test
mov
pop
rcrb
sar
pop
decb
or
nop
mov
cmp
cmpsb
scas
mov
push
cld
loopne
sub
fdivs
xchg
test
cwtl
iret
jo
sub
xchg
js
notb
sti
xchg
jbe
int3
dec
out
cmpl
sbb
gs
iret
movb
sarb
aad
mov
dec
outsb
rolb
lds
pusha
xchg
push
mov
mov
hlt
loop
xchg
cmp
hlt
repz
lcall
mov
scas
jle
mov
mov
aaa
pop
lcall
add
sub
inc
ja
in
xor
mov
test
jl
adc
xor
mov
xchg
repz
dec
in
pop
outsl
cmpsl
jno
fs
mov
xchg
mov
aas
cmc
frstor
out
inc
mov
mov
adc
inc
fisttpll
cwtl
ss
stos
lods
iret
cltd
sti
in
stos
cmpsl
mov
sti
ds
rol
jb
jb
repz
nop
sahf
js
adc
push
popf
mov
lods
or
loopne
inc
mov
lods
js
push
push
out
mov
ja
xchg
xchg
or
push
adcl
cmp
loop
inc
fistl
nop
push
insl
mov
jg
pop
call
movsb
and
jl
mov
mov
push
or
xor
fmull
shll
xchg
sub
push
sarl
test
clc
arpl
cmp
pushf
cmp
inc
mov
sub
xchg
xchg
xor
inc
dec
stc
cmp
iret
sbb
negb
jge
xchg
sub
dec
dec
iret
xchg
or
in
ret
mov
xor
add
out
mov
iret
sub
mov
scas
jg
push
cmp
push
rorb
aas
cltd
imul
sub
in
imul
ja
aas
es
xchg
cltd
cli
insb
add
fdivrl
push
xorb
jle
mov
cmpsl
mov
mov
scas
test
sarb
mov
mov
std
pop
sbb
lock
inc
in
lock
movsl
gs
sbb
mov
fwait
nop
roll
jne
ja
push
int3
xor
in
adc
fmul
inc
stc
out
or
xor
sub
stc
mov
mov
jae
insl
popa
push
jns
cmp
and
jae
shr
cs
or
push
pop
in
adc
and
push
jno
push
jg
xor
sub
xor
mov
and
xchg
leave
stc
adc
rorb
mov
or
fcompl
push
rcl
and
ljmp
fstps
xor
nop
dec
pop
dec
push
xchg
lcall
push
and
mov
mov
lods
jge
movsb
sub
hlt
sbb
movsb
mov
sahf
dec
movsb
push
ret
dec
xor
and
ret
mov
negb
movl
movsb
lcall
ret
push
mov
rorl
or
in
imul
mov
xchg
cs
scas
cld
mov
jbe
outsl
loop
cltd
test
xor
pushf
dec
andb
iret
js
es
imul
mov
or
js
add
or
xor
stos
inc
fnstenv
int3
bound
out
mov
mov
or
sarb
xchg
add
pop
ss
xchg
or
repnz
push
adc
inc
mov
sub
cmpsb
mov
or
adc
or
push
jmp
dec
out
push
push
mov
push
std
pop
into
jle
push
dec
idivl
pop
movsl
xor
mov
mov
pop
stos
push
dec
mov
sub
fmul
lods
jbe
or
ja
fsubrs
inc
into
jae
xor
jp
mov
test
ret
lcall
sarl
movsl
insb
ljmp
push
adc
jne
sbb
movsb
rol
mov
gs
out
mov
push
mov
jg
clc
xor
cmc
int3
stos
jp
aas
les
lea
icebp
clc
adc
jne
sub
inc
xchg
or
loop
cmp
andb
hlt
xchg
enter
aas
xor
push
iret
pop
ds
jae
popl
and
rclb
sub
add
pushf
adc
test
int
and
jge
mov
in
and
mov
repz
sub
mov
call
jle
insb
imul
push
pop
pop
inc
scas
cmpsl
movsb
jne
pop
test
mov
push
ljmp
pusha
mov
xchg
icebp
xchg
inc
push
push
fsubr
movsl
sbb
aam
mov
push
cs
mov
shlb
iret
cld
inc
popf
add
ret
pop
jns
lcall
flds
aas
pop
cmpsl
rcrb
dec
xchg
jle
mov
sub
add
push
cmp
xor
adc
ljmp
jp
ds
das
sub
aad
push
jg
fildl
add
fsubrs
xchg
enter
inc
add
aam
aaa
and
push
rcrb
lods
sbb
insl
fisttpll
push
stc
jo
jae
fiadds
ss
jns
or
fbld
push
cli
xor
push
jbe
mov
xorb
cmp
push
int
or
nop
pusha
sti
sub
xor
mov
or
les
hlt
sub
mov
cs
cmp
xchg
cmp
add
leave
mov
into
dec
jne
jne
cwtl
jmp
mov
pop
mov
and
dec
add
das
cmp
mov
mov
jp
xlat
mov
mov
ds
mov
dec
cmp
xchg
insb
push
push
insl
add
addr16
push
repz
mov
icebp
nop
push
jmp
inc
mov
pushf
dec
sahf
stos
ds
ret
cmpsb
add
aaa
dec
jmp
xor
xchg
cmp
lds
inc
push
pop
inc
xchg
xchg
fs
out
mov
mov
loop
loope
add
notl
out
in
mov
and
add
dec
mov
pop
xchg
xchg
lods
sub
sub
pop
or
pop
mov
int3
loope
inc
adcb
or
sub
daa
pop
jo
mov
lret
cs
xor
cwtl
mov
nop
stos
mov
inc
jmp
mov
cmp
lret
repz
pop
sub
ss
add
out
lret
loop
lea
roll
xchg
pushf
out
dec
xchg
in
in
jbe
ffreep
leave
sub
cmp
xlat
push
and
mov
cmc
xchg
pop
xchg
jb
adc
int3
insl
popf
pop
push
int
addb
mov
lret
rcrb
lods
lods
aaa
add
lcall
shrb
sete
push
xor
inc
inc
das
xchg
adc
or
les
out
stos
xor
sbb
pop
adc
mov
int
repz
lea
shr
faddl
fistpl
inc
dec
push
push
popf
mov
insb
fs
adc
daa
dec
sbb
mov
bound
jb
mov
pop
lcall
sbb
cmp
xor
imul
sub
sub
adc
pop
jbe
dec
mov
or
mov
sub
jmp
mov
pop
push
insl
cs
div
loope
xchg
cli
lahf
push
data16
cmp
or
aad
scas
sub
scas
dec
dec
mov
mov
daa
push
mov
mov
aaa
fisubs
call
lods
mov
add
push
rorl
push
shll
sti
in
arpl
hlt
scas
inc
stos
clc
scas
push
pop
cmp
out
loopne
lahf
add
inc
push
mov
jns
shlb
int
dec
jb
ds
mov
push
cmp
popa
xor
push
xor
xchg
insb
lret
jb
je
call
in
cmp
sbb
add
pop
mov
bound
push
pop
fcmovnu
cmp
or
jp
hlt
inc
inc
xchg
mov
scas
mov
pop
push
pusha
xchg
fs
jp
dec
roll
add
ds
lret
xchg
xchg
cmpsl
int
inc
in
scas
push
pushf
adc
int3
ss
or
imul
shll
or
adc
jg
push
ds
dec
mov
mov
mov
cmp
outsb
fcmovnu
shrb
adc
sbb
mov
dec
pusha
push
mov
inc
movsb
lock
xor
hlt
push
aas
aas
cmp
repz
sbb
movsb
or
bound
data16
sbb
dec
jo
push
cmpsl
push
cmpxchg
xor
xchg
cmp
shrl
jbe
test
rcrl
cld
cmp
pop
fiaddl
push
jle
roll
in
testl
out
jp
das
outsb
test
cmp
loopne
xchg
pop
cli
mov
mov
daa
jae
and
ret
jmp
and
jae
mov
or
fdivrs
insl
daa
ret
add
and
xchg
aad
lahf
xor
loop
rcrl
in
fcoml
ficoms
and
add
addb
jbe
cmp
mov
shlb
in
mov
in
mov
push
inc
cmovl
jns
add
cmpsb
mov
sti
jge
rclb
mov
cmp
mov
push
xchg
incl
xchg
xor
jno
sub
das
fldl
mov
mov
jns
sub
push
sbb
mov
test
or
movsb
lret
xchg
adc
dec
lret
nop
lahf
xchg
add
xchg
imul
jmp
movsl
jle
andb
fnstsw
ja
sbb
mov
push
sub
stc
pandn
mov
lret
ljmp
shlb
ret
subl
add
add
les
clc
mov
cld
inc
cmpsl
jle
mov
call
jb
ja
mov
repnz
into
inc
jo
mov
std
mov
jne
adc
cmp
xchg
in
or
icebp
inc
pandn
enter
or
or
and
stos
shl
xchg
inc
repz
int
mov
ss
mov
jb
test
push
mov
mov
scas
imul
or
in
mov
jb
ficoms
add
imul
sbb
pop
loopne
rcr
shl
cmc
js
cmp
loop
out
popf
adc
or
pop
loope
call
jmp
sarl
mov
mov
add
aas
fisttps
jbe
sub
mov
movsb
in
lret
sbbb
lock
repz
pop
or
push
adc
outsb
mov
rorb
xchg
xchg
lea
shll
testl
cli
pop
pushf
pop
add
into
icebp
adc
mov
in
jge
jmp
xor
out
js
loop
push
adc
or
scas
test
pop
jns
inc
dec
push
dec
sbb
add
adc
in
or
sub
dec
loop
loope
nop
jo
inc
cmpsb
or
sbb
ljmp
cmp
push
stos
add
inc
dec
sub
std
lret
daa
shlb
xor
sti
cmp
cmp
scas
mov
xchg
pop
jle
mov
dec
ljmp
lods
lahf
mov
lret
add
and
cwtl
sbb
push
in
push
dec
jno
push
mov
cmpsl
es
cmc
jecxz
js
dec
mov
mov
push
cmc
mov
pushf
insb
mov
insl
pop
push
adc
xchg
pop
mov
call
in
insl
jno
ljmp
mulb
imul
sarb
pop
imul
out
or
lcall
movsl
adc
push
leave
jg
ds
push
cwtl
sub
add
push
in
js
enter
push
xor
aaa
and
fnstsw
loope
aad
jno
add
push
sub
push
test
es
faddl
pushf
jne
notrack
jg
negb
outsl
pop
xor
pop
cmpsl
pop
stos
mov
mov
lret
hlt
pop
lea
pop
xchg
ret
push
lret
les
das
add
lret
jnp
fldenv
sub
inc
fildll
out
add
adc
ret
popf
ret
out
xchg
lahf
loop
sbb
xlat
push
and
test
xor
sbb
jle
dec
dec
test
bound
subb
jge
out
and
sarl
into
cli
fisubrl
push
outsb
adc
jae
adc
sbb
movb
das
ret
pop
repz
adc
data16
aam
movsb
xor
mov
xor
pusha
cmp
jp
cmp
cmp
xchg
mov
sbb
iret
insb
push
push
dec
or
sahf
movsb
call
xor
xor
out
shrb
xor
test
sbb
dec
loopne
std
inc
cmpsb
jo
popf
daa
ja
mov
insl
push
xor
push
sub
sub
xchg
cmp
adc
and
mov
imull
int
lock
roll
dec
es
adc
stos
in
rolb
dec
clc
arpl
mov
dec
or
jmp
loop
cmp
push
sbb
cmp
pop
loope
and
lret
xor
push
mov
pushf
out
cmp
sahf
mov
fsubrs
shll
xlat
ljmp
fdivs
push
pop
enter
inc
jle
push
push
repz
and
xchg
das
push
and
mov
sbb
and
loopne
cmp
sbb
pop
xchg
or
sahf
sub
xor
test
add
sub
or
mov
lods
adc
shl
mov
sub
inc
mov
movsb
out
add
sub
out
jcxz
add
jno
gs
icebp
vpcomub
sbb
jb
push
mov
adc
jbe
hlt
push
fildll
test
xchg
cmp
jo
pusha
lcall
mov
jge
nop
inc
add
in
adc
push
jae
pop
aam
js
xor
in
ret
inc
mov
add
sub
mov
mov
xor
lahf
repnz
popf
cmc
push
dec
inc
mov
rcrl
cltd
cmp
dec
aas
aas
mov
subl
jge
xor
insl
add
sub
xchg
sbb
sub
push
imul
jns
aam
xor
daa
adc
push
push
loope
loope
lock
cmp
inc
mov
sbb
mov
mov
popf
xor
or
push
fiaddl
sar
mov
daa
xor
fldenv
push
add
test
or
add
jns
test
es
jae
mov
ja
aad
dec
cwtl
repz
inc
add
xor
sbb
xchg
xchg
sub
imul
iret
enter
sub
loop
cmc
gs
xlat
xchg
jae
pop
add
pusha
jecxz
pop
test
mov
dec
sahf
addr16
lret
fistpll
mov
adc
outsl
pop
jnp
add
inc
aam
jo
dec
sub
xor
mov
xor
push
mov
push
cmp
or
or
pop
pusha
daa
push
rorl
in
mov
ds
and
sub
sarb
sub
inc
and
and
arpl
fnstsw
mov
add
add
mov
push
adc
push
test
out
inc
mov
jp
inc
and
or
scas
sbb
dec
dec
popa
jge
cmp
dec
cmp
push
pop
push
push
es
icebp
xchg
in
cs
outsb
jne
add
js
sbb
xchg
js
fidivl
shrb
mov
imul
push
lcall
jmp
in
dec
push
or
cmp
lods
je
add
xchg
push
loope
adc
pop
jl
ret
inc
inc
adc
lcall
sub
and
in
mov
shlb
mov
imul
mov
cwtl
test
lock
jge
jg
sub
gs
fldcw
inc
pop
and
repz
xor
jns
mov
je
mov
push
cltd
xor
xor
or
push
cltd
mov
stc
in
dec
out
lret
pop
test
in
loopne
shlb
cwtl
je
push
shll
xor
xchg
enter
lea
movsb
lods
cmp
into
cmpsb
dec
inc
jp
jae
andnps
xchg
rclw
add
mov
xor
sbb
cmp
lcall
or
sbb
enter
mov
data16
enter
dec
sub
add
lods
test
shl
out
and
mov
dec
adc
jbe
orl
aas
out
in
pushf
add
sub
inc
mov
cltd
dec
pushf
or
push
lcall
lret
aam
fwait
div
out
inc
pop
aam
push
pmovmskb
pop
dec
jo
dec
and
outsb
int3
into
push
xor
shl
or
jecxz
popf
add
xor
pop
mov
pop
jnp
negl
xchg
jge
sub
cli
mov
dec
mov
ljmp
lret
out
and
adc
mov
adc
jle
jno
push
dec
pop
adc
dec
jne
mov
rcl
out
sub
enter
lcall
rolb
fst
arpl
mov
lcall
xchg
cld
testb
and
push
jl
sub
jbe
in
xchg
mov
decl
mov
sahf
jmp
pop
les
mov
scas
or
jge
sahf
cwtl
lods
jmp
in
mov
fmull
lret
mov
xor
cld
popf
jnp
jl
push
cmp
add
jo
cmp
sar
inc
dec
dec
xor
mov
push
cmp
jl
add
sahf
sub
cmp
ret
xchg
in
sub
add
ja
in
xlat
cmp
rcll
ljmp
jo
jge
ficompl
push
and
loop
lahf
shlb
gs
insl
mov
cmpsl
dec
xor
stos
adc
xchg
jle
sarl
xchg
lea
dec
xor
shlb
mov
sbb
dec
int
or
out
jb
sti
into
pop
adc
xor
lret
call
test
add
or
push
out
mov
daa
push
test
xchg
ljmp
cld
sub
push
or
push
stos
pop
sbb
dec
xor
mov
xchg
and
mov
push
sub
or
addr16
dec
rorl
loop
sbb
fcomi
scas
and
cltd
xor
push
cltd
icebp
cs
adc
or
push
adc
aaa
push
lret
pop
inc
lahf
xor
je
xor
addl
insb
mov
ljmp
std
xor
das
xor
push
scas
nop
repnz
jmp
inc
inc
int
and
mov
ror
xchg
movsl
push
push
add
pop
or
test
sub
cld
cmp
sbb
bound
gs
add
push
mov
ret
inc
cld
mov
mov
mov
add
add
add
pushf
inc
inc
inc
movsb
ds
mov
sbb
or
andl
outsl
scas
int
mov
xchg
fucomi
and
push
add
into
into
shrl
fidivl
ja
es
and
fcmovnb
inc
add
lea
xor
lahf
insl
lock
push
fidivl
les
or
aas
jne
aad
lods
rol
inc
push
push
mov
lahf
movsb
loopne
mov
xorl
cltd
mov
mov
xor
test
scas
jmp
inc
inc
push
idiv
fildl
push
lahf
mov
nop
lret
test
ficompl
jmp
xor
into
roll
out
leave
or
pop
mov
mov
cmp
dec
setns
pusha
sub
sub
loopne
jns
pop
psubsw
jmp
cmp
mov
push
mov
sbb
mov
sbb
daa
jb
stc
cmp
fisubs
add
fldt
push
jl
jge
adc
xchg
xor
enter
mov
mov
fucomip
adc
inc
loopne
inc
mov
cmp
es
js
cltd
rcr
sysexit
rcl
or
scas
fisubrl
jno
icebp
loop
mov
xor
lcall
xlat
xor
lods
dec
jae
cwtl
sub
cmc
cmp
xchg
jno
mov
push
sbb
jmp
outsb
mov
pop
xlat
add
cmp
imul
sub
iretw
mov
inc
imul
xor
cmp
xlat
das
enter
popf
mov
rorb
sub
adc
js
sub
or
and
add
pop
sub
xchg
imul
add
push
mov
int
bound
pushf
sub
out
ret
mov
mov
mov
rcrl
loope
into
mov
mov
pop
mov
ljmp
stc
adc
sbb
sub
ret
cmp
scas
mov
pop
push
push
push
lds
jl
adc
or
cli
pop
subl
adc
rorl
ret
push
pusha
popf
cmc
and
push
xchg
push
notl
stos
les
daa
fisttpll
mov
add
pusha
dec
pop
adc
mov
out
movsb
arpl
mov
leave
sahf
lret
cmpsb
leave
iret
jb
mov
mov
in
std
movsb
fwait
dec
fadds
rcr
cmp
fcoms
inc
mov
xchg
jl
xchg
and
movsb
test
enter
aas
es
sbb
dec
dec
lods
cmc
gs
cmp
repnz
jge
lock
pop
in
jno
mov
inc
jnp
pop
aad
mov
aas
cltd
dec
insb
decb
out
mov
inc
jbe
sbb
dec
mov
stos
mov
jg
or
sarb
inc
dec
mov
push
stc
jo
sbb
clc
jecxz
mov
mov
and
sub
ja
mov
cs
iret
jne
cmp
adc
jl
xchg
movsb
jo
lods
dec
leave
cmpsb
aas
push
shlb
mov
cli
loopne
icebp
mov
and
inc
loopne
mov
pop
lods
and
stc
imulb
and
in
add
out
xor
and
mov
fisubl
out
sbb
cmp
outsl
pop
add
and
fsub
lds
dec
sub
stos
add
rcr
iret
xchg
lret
xchg
shlb
cmpb
jmp
and
jmp
adc
lods
or
jb
icebp
cmpsl
sti
popf
mov
sarb
mov
loopne
aad
stc
nop
mov
dec
popf
cmp
pop
mov
movsb
cli
pop
scas
rcrl
mov
out
pop
pushf
aad
int3
push
daa
pop
fwait
testl
pushf
mov
xchg
push
and
pushf
fdiv
pop
xor
aaa
xor
movsb
std
push
inc
mov
jecxz
or
sti
rcrl
aam
adc
xchg
adc
and
mov
rclb
or
sub
in
cmpsl
bnd
xor
sbb
cltd
ss
nop
pop
jae
xor
cmp
mov
pop
dec
dec
outsb
into
gs
jle
mov
cmp
stos
add
or
dec
fists
test
sbb
mov
mov
out
andb
int3
xor
jne
inc
cmp
mov
adc
xchg
jl
pop
insl
pop
xlat
adc
cmp
inc
jnp
mov
fwait
sub
add
pop
addl
xor
movsb
in
push
add
repz
das
xchg
mov
push
out
mov
mov
aam
into
gs
scas
xchg
or
iret
inc
push
inc
jo
or
lret
pop
insl
xchg
cmpl
dec
jns
push
mov
ret
cld
cwtl
cmp
or
push
pop
jl
pop
mov
test
or
out
dec
sub
pop
and
sbb
pop
add
ret
adc
sub
arpl
cli
test
cmc
mov
pop
lcall
push
xor
stos
mov
aam
pop
adc
push
clc
xor
pop
mov
lret
mov
nop
or
push
adc
andl
cmp
cmpsb
hlt
fidivrs
sbb
test
mov
or
xchg
cmp
testb
mov
mov
sbb
bnd
jb,pt
jae
out
xchg
lea
sub
push
push
daa
out
mov
int
lock
jae
mov
inc
xchg
int
push
and
lret
stc
mov
int
addr16
fwait
mov
pop
jmp
pop
insl
push
jecxz
fisttpl
or
or
lahf
mov
cmp
mov
cmpsb
pop
jge
insl
xchg
fisubrs
cli
and
mov
mov
mov
cltd
popf
faddl
or
cmp
sub
pop
add
inc
fiaddl
or
xchg
or
loope
bound
inc
dec
ret
inc
xor
and
mov
inc
popf
bound
mov
push
cs
sbb
cltd
or
inc
xchg
lods
or
push
pop
inc
xor
imul
jp
add
pop
pop
pop
pushf
mov
xchg
out
loop
in
sbb
sub
iret
or
cmc
movb
fdivrs
ret
adc
cmp
xchg
add
lock
pop
jae
pop
sub
movsb
repz
clc
bound
loopne
pop
sarl
ljmp
mov
pop
out
jne
shl
mov
jnp
mov
and
mov
inc
jnp
mov
xchg
shlb
lcall
jae
xchg
mov
stos
jle
inc
rol
sub
addb
out
push
pop
cmc
les
push
outsl
cmpsl
cld
sbb
shlb
push
dec
clc
mov
insb
dec
stos
rolb
cld
mov
ja
rcl
push
pop
adc
or
icebp
out
or
ljmp
aad
pop
add
cltd
pop
leave
cmpsl
xchg
clc
in
fcoms
js
xchg
into
dec
xchg
cmp
sahf
xor
lret
push
adc
or
stos
repz
adc
ret
ret
scas
xlat
add
mov
dec
enter
cmpsb
and
lret
repz
lret
call
hlt
outsl
or
cmpsb
or
sarb
lock
fwait
mov
inc
je
dec
lods
mov
xor
shlb
adc
lret
subl
je
mov
stos
es
mov
adc
dec
sarb
das
push
and
xchg
in
pop
xlat
hlt
and
test
ret
cmc
cmpsb
or
movsb
jbe
adc
sarl
cld
aaa
dec
xchg
sarl
dec
movsb
mov
lahf
imul
xchg
fldt
std
pop
sti
push
push
mov
add
jge
std
fmuls
sbb
cmp
push
push
mov
leave
xor
push
adc
cmpsb
xor
adc
js
xor
insb
jecxz
xchg
stc
lods
int
adc
test
enter
call
push
jmp
dec
iret
pop
add
in
sahf
aam
out
inc
push
jmp
mov
sti
push
add
fnstenv
sbb
xchg
or
loope
mov
fcoms
sbb
shrb
je
add
mov
fdivrp
xor
out
or
arpl
sub
add
sub
jnp
pop
xchg
fcompl
sub
xor
pop
into
pop
movsb
movsl
dec
sarl
push
jo
push
es
out
dec
xchg
xor
cmc
lcall
faddp
pop
out
pop
dec
gs
adc
adc
add
aam
iret
in
call
pop
sbb
rcll
mov
mov
mov
pop
pop
xor
adc
mov
xor
aad
add
and
ret
out
xchg
inc
fld
enter
outsb
push
and
push
fs
int
mov
ficompl
fstpt
lock
push
or
xor
or
popf
cwtl
leave
and
outsb
xor
pop
push
fildll
sub
insb
cltd
mov
lea
inc
ret
aas
outsl
adc
add
aam
cli
xor
movsb
hlt
out
iret
cmpsl
popa
fsts
sbb
add
xchg
jmp
incl
jge
data16
xor
jl
or
mov
dec
fcoms
lahf
and
ja
xchg
leave
les
mulb
popf
pop
mov
pop
lcall
js
or
sbb
or
nop
pop
inc
mov
cmc
fists
cmp
ret
xor
pop
sti
mov
cli
jecxz
jno
addl
sahf
into
fcomi
cmp
andb
mov
addr16
jle
push
pop
inc
das
xor
loopne
ror
pop
cs
jae
fsubl
in
out
stc
js
movsl
outsl
jns
inc
jae
mov
pop
std
adc
jo
cmp
xor
mov
cmp
bound
mov
add
scas
out
jne
ja
data16
xchg
cmp
lods
ja
movsl
loope
icebp
sub
ret
inc
loop
mov
mov
push
add
cmp
cli
cld
sub
or
sub
xchg
imul
scas
inc
jo
adcl
rcrb
adc
dec
cmp
rorl
sub
fisubs
push
adc
cmpsb
fnstcw
test
lahf
js
lahf
insl
pop
pushf
test
mov
inc
lret
mov
mov
mov
or
push
jo
inc
dec
cmpsl
dec
lods
add
and
push
insl
enter
test
push
fs
les
scas
dec
inc
mov
add
ds
cmpsl
jmp
fsubl
cmp
sub
das
inc
dec
fsubl
mov
mov
bound
movsb
fsts
inc
cmpsb
xchg
add
in
dec
out
jmp
sub
pop
inc
pusha
sbb
rcrl
xor
and
push
xlat
loopne
iret
dec
inc
sbb
stos
cmpl
pop
push
in
dec
jnp
pop
add
push
dec
rorb
jmp
mov
dec
mov
or
fidivrs
mov
pusha
dec
std
fidivrl
cmp
add
mov
subw
inc
fs
aad
xor
add
mov
sbb
loopne
adc
and
call
sbb
mov
aam
pushl
mov
adcb
aam
fld
push
std
sbb
sahf
mov
std
iret
js
mov
mov
xchg
fistl
cwtl
nop
aas
int
rcll
push
adc
mov
mov
mov
lahf
ljmp
stc
cmpsb
fnstcw
lcall
std
imul
jo
loope
sahf
movsb
adcl
lock
cmp
in
adc
xor
xchg
xchg
ds
pop
mov
add
aaa
nop
inc
mov
cmpsb
add
pop
int3
stc
aas
push
mov
int
jle
mov
xchg
mov
popa
daa
xchg
xor
imul
pop
lods
mov
jno
sub
ret
adc
and
xor
jecxz
bound
dec
imul
mov
jae
pop
jns
sbb
gs
scas
add
xlat
aad
add
hlt
shl
adc
decl
shll
fsubs
jae
push
ja
sub
jge
dec
in
add
repz
jg
leave
out
mov
popa
clc
loop
mov
stc
cmp
out
mov
jb
enter
jno
jp
in
mov
cmpsb
sbb
ja
and
pop
fcomps
fnstenv
inc
jl
pop
das
lock
xchg
jb
loopne
out
xor
notb
out
mov
sbb
sbb
addr16
mov
fdivrs
addr16
and
aas
sahf
xchg
sti
lea
sub
iret
push
pop
inc
dec
xchg
mov
out
leave
push
mov
lods
out
loopne
addl
sub
movsl
lret
xor
push
or
fidivl
dec
lret
and
xor
hlt
sub
push
adc
xlat
in
adc
xor
push
int3
les
dec
pop
je
mov
adc
and
push
pop
orl
or
mov
das
fiaddl
xor
pop
pop
fiaddl
daa
out
xor
fiaddl
mov
aaa
mov
fisubrl
addr16
sub
xorb
repz
rcr
add
enter
insl
xchg
test
out
fcomps
loopne
repz
push
xor
imul
jg
dec
xchg
cmp
mov
clc
push
mov
icebp
push
aam
pushf
or
out
imul
sub
lods
mov
mov
pop
cmp
sub
es
add
int3
cmpl
sub
inc
mov
pop
iret
movsl
and
stos
lock
or
pop
push
imull
je
cmpsb
movsl
sbb
adc
je
and
dec
movb
jl
adc
pop
loope
scas
sub
dec
test
xchg
dec
pushf
cmp
fstpl
cmp
inc
stos
adc
inc
pushf
lcall
mov
sub
mov
pushf
mov
or
add
jb
jns
add
sub
add
mov
cmp
in
std
lret
shl
addb
jno
xchg
mov
aaa
jg
mov
popa
pushf
ljmp
pop
jno,pn
stos
das
outsl
pop
in
mov
mov
sub
xchg
in
negb
stos
jle
pop
std
pop
outsb
cwtl
and
mov
xchg
gs
mov
std
adc
sbb
gs
leave
mov
mov
jns
dec
add
mov
xchg
ficoms
cmpsb
inc
mov
cmc
jb
aas
cmp
push
mov
sbb
popf
enter
add
inc
jmp
ret
pop
mov
jne
sub
movsl
xor
push
leave
js
lea
ljmp
cmp
sub
xchg
inc
test
aaa
sti
sbb
dec
xchg
push
imul
aaa
lcall
dec
cld
mov
in
adc
leave
mov
lret
pusha
loope
insb
ja
mov
lahf
fcompl
jo
sub
nop
je
or
and
rcrb
mov
in
sbb
les
mov
jmp
mov
xlat
pop
jo
push
cmp
or
inc
fistpll
inc
xor
mov
es
mov
mov
cli
mov
iret
enter
int
popa
dec
jbe
ficoml
sbb
idivb
gs
aam
sahf
mov
mov
or
adc
sub
add
pop
jp
sbb
lods
inc
push
movsb
pop
mov
into
dec
cmp
push
cmp
rcll
and
out
out
sarb
fstl
mov
movsb
js
ja
lcall
lret
scas
sbb
adc
es
scas
mov
jbe
loope
cmp
shl
mov
hlt
sub
je
mov
leave
mov
xchg
lds
xchg
jnp
std
enter
mov
fs
stc
in
dec
or
xor
leave
mov
shrb
and
scas
decl
adc
push
movb
out
mov
movsb
ja
fwait
aad
js
mov
or
mov
push
adc
add
call
pop
ja
xchg
mov
adc
ds
dec
add
dec
out
outsl
add
sub
inc
mov
pop
jp
decl
popf
push
mov
in
std
mov
out
frstor
inc
pop
out
push
cmpsb
push
jmp
rolb
or
scas
add
add
pushf
fistps
sbb
dec
cld
push
out
hlt
in
rcrl
add
xor
pop
je
dec
cmp
insl
adc
and
adcl
push
jl
lods
xchg
imul
mov
inc
jb
ja
dec
push
xlat
insb
repz
xor
data16
bound
dec
push
xend
test
out
lods
pop
cwtl
test
inc
icebp
rcr
scas
ret
decl
push
xor
push
out
mov
pop
cmp
ss
popf
repz
aam
sbb
or
jge
mov
mov
fmull
cmc
jle
int3
mov
pop
jmp
dec
in
pop
cmpsb
repz
jno
pop
dec
jmp
add
mov
or
test
inc
jns
push
add
pop
jne
ds
icebp
pop
repnz
sbb
xor
mov
mov
enter
fcomps
ljmp
mov
in
adc
loope
les
and
shll
and
addl
dec
sbb
inc
cmp
mov
lods
movups
and
pop
mov
or
leave
dec
lock
xchg
or
aad
pop
mov
pcmpgtd
loope
dec
cltd
pushf
adc
ret
and
cltd
and
pop
add
jno
fmuls
int
sahf
push
mov
sbb
cmpsl
xor
jno
fs
mov
lret
lods
fidivrl
adc
lcall
fcmovne
fdivl
sbb
mov
adc
rorl
sbb
cmp
inc
xchg
add
clc
cmp
popf
mov
jnp
adcl
add
xor
pusha
push
adc
add
and
mov
push
mov
jnp,pt
pop
xor
and
and
mov
je
jb
sub
int3
cld
cmp
std
mov
mov
push
jb
lret
cmp
out
lods
andl
rcr
sti
or
popa
jl
adc
fsubrl
fisubrs
cmp
vmread
and
es
xchg
xor
jb
mov
stos
dec
lea
scas
sbb
jno
push
sub
enter
rol
xchg
fwait
mov
ficompl
testb
es
dec
xchg
jecxz
mov
pop
pop
leave
in
popa
ljmp
adc
mov
or
or
fldenv
call
push
in
test
xorps
les
add
xchg
add
adc
add
pop
sub
insb
jb
popf
out
push
imul
imul
cmp
jmp
add
stos
inc
sub
xor
adc
sti
sbb
fdivrs
mov
jmp
pop
push
or
adc
es
and
adc
inc
lahf
xor
test
fstl
in
dec
sarl
jle
pop
xchg
scas
orb
int3
into
xchg
cld
add
jmp
add
cmpsl
sbbl
xchg
enter
jmp
icebp
test
stc
icebp
out
out
dec
push
jecxz
jge
dec
sti
pop
movsb
das
xchg
jno
loope
das
adcl
add
imul
cmp
das
mov
xchg
ja
pop
imul
cmpsb
cmp
cmpsl
add
add
cmp
jnp
dec
sub
test
andb
jg
add
fmuls
aad
insl
daa
fildll
adc
stos
fucomip
cmpsb
jmp
mov
not
push
loopne
and
cmp
sub
and
mov
sahf
mov
incl
dec
cmc
fisttpl
xchg
add
lods
mov
repnz
mov
aaa
icebp
daa
push
lods
or
icebp
movsb
pop
aas
loope
ficoms
mov
jmp
roll
inc
movsl
cmp
dec
dec
jo
shll
jo
hlt
jb
dec
js
push
jecxz
shrb
dec
aad
out
js
mov
pop
pop
inc
aam
bound
add
imul
xor
sub
add
mov
or
or
jmp
stos
mov
bnd
add
decl
dec
cli
or
jae
lods
fstpt
pusha
int3
add
ljmp
roll
stos
ret
jnp
dec
in
frstpm(287
or
sbb
loope
cs
and
xchg
rcrl
leave
cmp
xor
in
jbe
lahf
jle
or
fdiv
jno
sub
xchg
add
mov
cmpb
jp
lds
mov
bound
cmp
sub
inc
out
mov
mov
jmp
mov
fwait
or
andl
or
movsl
pop
rcrl
notb
sarl
sub
cwtl
fadds
xchg
cmpsl
jnp
fcompl
stos
test
nop
sbb
daa
dec
xchg
out
inc
pop
mov
aaa
cltd
mov
ljmp
push
and
ljmp
outsb
mov
push
sbb
mov
and
repnz
lods
push
orb
loopne
xor
mov
lea
mov
sbb
daa
stc
cwtl
push
mov
pop
mov
dec
pop
xor
add
out
negl
lcall
and
adc
clc
insl
pusha
push
sbb
aad
push
and
fstpl
sbb
add
xchg
andl
ss
orl
nop
jno
adc
repnz
cmpsb
loopne
out
cmc
and
sbbb
hlt
cmp
pop
in
push
xchg
sbb
dec
cvttps2pi
mov
push
mov
ss
aas
and
aam
pop
add
and
lahf
inc
leave
pop
cmp
mull
dec
add
in
adc
xchg
sub
adc
xor
bound
pop
dec
ret
notb
jl
xchg
loop
sbb
push
sbb
loop
insl
sub
ljmp
jno
sahf
into
jg
lret
jbe
repz
int
sub
cmp
lret
imul
pop
imul
push
loopne
add
test
lea
pop
pop
stos
mov
sub
dec
jb
popf
aad
stos
xor
push
jae
mov
cmpl
ds
sbb
push
repz
loopne
mov
jecxz
mov
sub
stos
dec
das
fbstp
or
out
orb
jo
jae
cmp
cmp
push
jp
icebp
add
mov
popf
lret
xchg
mov
test
xchg
pop
pop
shll
les
test
int3
orb
jp
cmp
jnp
daa
popf
add
ret
push
mov
cmp
stos
lods
ret
pop
stc
enter
push
pop
jns
std
xchg
jno
cmp
sub
xlat
mov
mov
movsl
mov
push
cmp
std
pop
imul
jmp
test
mov
xchg
out
pop
imul
js
xor
cmp
jle
add
ljmp
paddsw
xchg
adc
nop
mov
bound
xchg
push
data16
xchg
lods
jae
inc
enter
mov
loop
mov
sub
xlat
dec
scas
mov
hlt
outsl
inc
mov
jnp
mov
xor
cmpsb
scas
into
ficoms
rcr
icebp
outsb
push
in
stc
or
xor
pop
dec
mov
and
mov
push
out
scas
les
out
push
jno
or
cld
arpl
pushf
mov
data16
loop
inc
mov
mov
jno
popa
lahf
push
cli
jno
cli
jno
cmp
repz
or
test
xchg
jns
cmp
push
repnz
sbbl
cmp
outsl
adc
add
hlt
sbb
mov
popa
nop
add
sub
jb
sbb
sub
pusha
popf
push
aad
push
or
cmpl
rorl
test
sub
fld
mov
test
leave
data16
cwtl
in
test
or
imul
pop
dec
cmpsb
xchg
pop
adc
out
sbb
jp
lcall
jl
fsubrp
repnz
bound
pop
repz
scas
pushf
mov
ja
pop
pop
pop
jb
cmp
mov
xchg
mov
popf
pushf
fildll
loope
aaa
sub
popa
mov
adc
pusha
push
mov
pop
test
fcomps
dec
adc
je
jmp
inc
add
shlb
mov
fildll
loope
mov
dec
and
xchg
pop
scas
sti
cmpsb
test
repz
stc
jmp
ret
ret
sahf
ret
loope
lods
loopne
in
ficoms
lcall
cld
hlt
mov
cmp
inc
cld
arpl
sahf
adc
nop
sub
pop
ljmp
mov
push
imul
repnz
in
jl
adc
pop
imul
cltd
je
push
inc
sbb
inc
jecxz
and
inc
lods
lds
pop
leave
cmc
xchg
lds
ja
xchg
lods
in
cmp
daa
in
fsubr
fsubr
mov
jo
or
cmpsb
loope
mov
push
pop
mov
xchg
add
sahf
loopne
and
mov
ds
dec
add
cmp
ljmp
adc
cli
dec
pop
out
rcrb
mov
subl
jge
movsb
and
loopne
add
hlt
and
repz
out
stos
imul
xor
bound
add
imul
mov
or
mov
lcall
sbb
mov
sub
mov
in
inc
pop
call
or
hlt
sub
and
jl
dec
sahf
into
mov
mov
dec
cmp
scas
cmpb
jg
xlat
mov
out
jno
scas
and
pop
and
xor
xchg
scas
incl
inc
stos
dec
push
pop
scas
mov
sub
cmpsl
inc
popa
stc
mov
sub
scas
pop
dec
or
imul
sub
shrl
dec
jbe
cmc
ret
ret
out
scas
mov
adc
frstpm(287
sahf
shrb
add
andl
into
xchg
pop
in
cmp
out
cmp
push
inc
js
test
scas
or
int
lahf
movsb
outsl
mov
xor
add
and
adc
mov
cmp
icebp
push
sbbl
mov
roll
pop
fimuls
das
imul
or
int
pop
xor
xchg
sbb
adc
xchg
and
xchg
dec
push
stos
fiaddl
jmp
xchg
mov
scas
xor
fwait
inc
bound
jmp
scas
or
cmc
sahf
push
sbb
rolb
xor
aaa
lock
notl
addr16
data16
xchg
test
push
sbbl
cmp
popl
add
out
mov
ja
push
mov
xchg
xchg
scas
inc
sbb
pushf
mov
add
adc
xchg
jns
test
jle
fadd
popa
jnp
sub
jl
sti
cmp
push
outsb
push
mov
fs
xor
mov
test
xor
inc
inc
and
lea
imul
sub
test
mov
rclb
xlat
mov
adc
or
outsb
cmpsl
xchg
mov
into
int
mov
sbbl
mov
inc
scas
adc
leave
mov
mov
test
ss
add
adc
push
xchg
popf
or
cs
mov
mov
push
and
lret
aad
inc
imul
shlb
out
fwait
subl
push
xchg
movsl
push
push
xchg
ficomps
push
fildll
jbe
cs
icebp
jl
das
jl
cmp
push
aaa
stos
cmpsb
sub
xor
pop
mov
xchg
xchg
jmp
sbb
aam
jp
das
js
inc
shll
jbe
push
in
push
sbbl
pop
int3
sbb
xor
out
cmpsb
mov
adc
jecxz
imul
imul
enter
sti
or
fs
pop
cmc
js
xchg
sbb
test
loope
mov
cmpl
pop
push
maskmovq
testl
mov
lods
sbb
cmp
sbbb
xor
adc
iret
adc
and
jae
incl
mov
popf
push
jmp
or
ja
fisttpll
or
iret
popf
xchg
arpl
shll
sarb
int
mov
popa
aaa
dec
jb
repz
and
call
adcl
pop
int
or
add
insl
jae
out
ret
push
testl
mov
sbb
inc
movsb
xor
aaa
adc
xlat
mov
inc
mov
sub
movsb
scas
sub
popa
jl
test
mov
push
jbe
repnz
sbb
xchg
hlt
cmp
clc
pop
mov
xor
sub
xchg
jbe
insb
cmp
ja
cmp
ljmp
lahf
mov
mov
shr
sub
enter
mov
cmp
inc
lock
sub
jno
loop
inc
imul
icebp
cmp
xor
imul
xchg
imul
and
andl
das
and
add
add
adc
adcb
negl
fisttps
cmp
add
mov
pop
in
ja
jmp
shr
sahf
xchg
mov
push
and
gs
mov
mov
lock
or
xor
clc
repz
add
and
in
fildl
mov
test
dec
gs
in
mov
fisttps
test
jg
mov
les
and
jnp
outsb
mov
movsl
and
mov
out
inc
sub
dec
bound
adc
fwait
xor
movsb
fidivs
addb
in
fs
push
icebp
sahf
jb
mov
clc
xor
or
xchg
push
pusha
cmc
hlt
xchg
arpl
pop
jmp
aaa
sub
cli
adc
jb
add
sbb
popf
mov
fimull
add
adc
test
sub
sahf
cltd
movl
lret
jg
arpl
push
scas
or
adc
sbb
mov
adc
cmp
lock
sti
push
hlt
pop
xchg
pop
sub
in
sub
sbb
jg
push
imul
or
loopne
cmp
inc
aaa
bound
add
lret
imul
push
movsl
add
popf
or
test
lds
jge
cld
ss
or
xor
push
and
jno
push
dec
fdivrs
stos
pop
push
in
rcl
cmc
jbe
xor
mov
lret
inc
leave
mov
or
ss
mov
or
cld
dec
ds
sub
das
pop
call
rcrl
mov
mov
ffreep
jl
cmp
inc
dec
divl
push
add
push
insb
mov
cmp
sub
push
mov
mov
or
dec
fadds
les
arpl
lea
dec
int3
fistps
mov
test
mov
lea
mov
stos
lock
aas
imul
pop
adc
imul
stos
dec
fucomi
fcmovnu
adc
xchg
outsb
add
pop
fsubs
movsb
add
xor
pop
inc
pop
sub
fcomps
mov
mov
lock
adc
movsl
cltd
mov
jae
mov
and
fcom
enter
or
cli
inc
push
fisubs
dec
insl
dec
fisttps
mov
push
jmp
push
shrb
or
sbbl
sbb
xchg
sarb
inc
dec
xor
mov
xor
sub
xchg
or
xor
jmp
sub
cs
push
mov
push
push
mov
fisubrl
add
adc
cltd
mov
testl
incb
add
adc
mov
jecxz
xchg
cmpsb
daa
in
imul
pop
adc
push
lock
jg
clc
mov
xchg
jmp
add
fs
jecxz
addb
mov
pop
cld
es
or
call
add
mov
cmp
ja
push
sbbl
lods
pop
lock
add
and
iret
rolb
jne
rolb
pop
or
in
fnstenv
push
addr16
adc
add
push
mov
int3
mov
aam
aad
sub
out
pop
out
pop
pushf
push
mov
imulb
negl
add
sub
bound
xor
and
flds
in
popa
mov
pop
mov
fldt
dec
test
ds
and
sbb
cmp
fldl
clc
cltd
push
data16
inc
stc
jo
stc
fwait
add
add
cmp
mov
in
xchg
jmp
fisttps
mov
pop
adc
xchg
sbbb
test
cmp
pushf
out
repnz
lods
inc
and
stos
and
cmp
cwtl
adc
call
push
hlt
pop
xchg
fldcw
jae
rorl
ss
jo
ror
fwait
lret
push
jp
or
les
enter
mov
sbb
xchg
nop
push
orb
inc
inc
lahf
loopne
popa
stc
mov
scas
inc
xor
stc
dec
cmp
and
out
xchg
mov
outsb
imul
pop
push
pop
sub
push
xchg
add
movsl
ficoms
xchg
dec
imul
cs
adc
stc
add
fs
xchg
hlt
shrl
pushl
lahf
movsl
mov
push
and
test
hlt
fimull
push
sbb
jbe
or
insl
rcr
inc
sub
pushf
imul
cmp
adc
cltd
adc
movsb
nop
in
pop
aad
add
push
cmpsl
or
lds
ret
imul
pop
jp
jmp
loopne
jne
adc
dec
js
movsb
mov
imul
das
pop
adc
pop
push
fstps
sub
mov
ret
sub
pop
and
das
imull
adc
push
pop
ret
adcl
test
push
loope
xchg
push
mov
clc
push
loop
sub
xchg
aam
out
cmp
das
into
cmp
mov
sbb
add
push
or
popf
jge
lods
mov
lahf
xchg
sbb
in
nop
pop
xorl
cmpsb
popf
ja
ja
xor
lds
insb
mov
or
bound
mov
push
clc
sbb
test
idivb
add
cmp
cmp
cmp
mov
out
xchg
inc
inc
cli
and
inc
and
jne
jp
cmp
sub
xchg
cld
xchg
inc
sbb
cmp
mov
cmp
jae
test
xor
out
scas
loop
sbbl
cmc
pushf
pushf
and
in
mov
mov
rcll
lea
loop
jb
test
enter
movsl
lahf
cmpsl
jne
shlb
adc
mov
sub
and
mov
xor
std
push
enter
addr16
test
les
sbb
mov
add
xor
das
or
divl
pop
xor
sarb
int3
nop
pop
pop
push
icebp
test
dec
sbb
pusha
xor
out
cli
add
mov
dec
sahf
cmp
or
jl
dec
xor
sbb
aaa
cwtl
test
jne
mov
ljmp
test
fnsave
repz
inc
or
and
out
ja
es
push
jmp
cmp
jecxz
int
pop
jnp
sub
ret
fs
add
jno
cmp
mov
nop
jb
mov
movsl
add
push
js
pop
dec
pop
jns
jle
xor
shlb
pop
jo
push
and
lods
test
imul
mov
dec
out
jns
scas
test
push
rcr
mov
mov
das
jnp
sahf
dec
lea
cmpsl
dec
mov
push
xchg
aaa
add
imul
shrl
pop
rorb
xor
negl
mov
xchg
dec
test
dec
and
popf
or
loopne
mov
jae
or
test
cmp
adc
movl
leave
dec
cmp
sbb
mov
ss
fwait
cmpsb
int
andb
mov
aad
dec
ljmp
aam
inc
das
mov
or
pop
rorb
test
pop
sbb
inc
mov
iret
movsl
call
dec
mov
dec
jl
xchg
js
add
inc
dec
scas
push
stos
out
outsl
idivb
pop
imul
adc
pop
adc
inc
movsl
cs
mov
or
test
aad
push
inc
mov
inc
shll
cmp
pop
adc
pusha
mov
stc
mov
sbb
loope
inc
jecxz
out
fwait
pop
ja
lods
cmp
lret
imul
mov
jnp
cmpsb
sbb
mov
or
pop
ret
sbb
mov
adc
inc
movsl
mov
dec
sbb
clc
call
sub
dec
aam
xlat
and
and
call
push
cli
rorb
inc
gs
iret
ljmp
icebp
xor
pop
mov
push
mov
cld
in
fistl
mov
movsl
push
andl
xchg
nop
roll
sar
lahf
jns
push
adc
je
repz
ja
fucomp
xchg
mov
bound
inc
sub
std
ja
lods
cmp
pop
fwait
cwtl
les
popa
les
adcb
adc
aam
add
pop
sub
adc
xlat
and
fwait
and
sub
lcall
fstps
xlat
push
and
jb
xchg
jae
push
repz
outsb
cmpsl
shlb
add
push
aas
cltd
mov
notl
add
movsl
mov
iret
bswap
adc
dec
inc
fidivrl
inc
mov
jle
nop
loop
insl
adc
mov
adc
imul
scas
repz
push
repz
cmp
ja
jae
xor
push
es
icebp
scas
fwait
iret
stos
jnp
dec
fnstcw
loope
sub
push
adc
sub
mov
sahf
das
shrb
dec
clc
in
jnp
ja
in
cs
ja
push
mov
mov
test
out
pop
jmp
push
lahf
dec
inc
int
test
xlat
mov
andb
add
outsl
mov
gs
sbb
xchg
pop
adc
cwtl
sub
inc
ffree
sbbb
adc
inc
bound
or
jae
outsl
lcall
sub
xchg
nop
add
push
adc
jecxz
lret
mov
mov
jo
push
adc
cmp
pop
call
or
ss
push
mov
nop
aad
enter
push
add
pop
push
jno
std
or
or
pop
mov
push
test
dec
xor
or
xchg
sahf
mov
mov
test
add
push
jecxz
xor
xchg
dec
lock
pop
jbe
xor
jecxz
loope
fdivs
fxch
mov
lods
sarb
das
push
ror
xchg
push
outsb
or
push
outsl
xchg
mov
mov
mov
aam
xchg
jnp
sub
imul
inc
int3
ret
sub
faddl
cli
mov
aas
shr
rcrl
xchg
pop
pop
push
mov
stc
and
test
mov
popf
xchg
lods
inc
das
sub
jmp
arpl
fcomps
jecxz
call
insb
xchg
sbb
pop
ficoml
adc
add
fldcw
jmp
fisttps
call
int
mov
daa
jns
popa
repnz
pop
test
outsl
shl
je
mov
or
dec
stos
inc
dec
mov
push
lret
sarl
shll
mov
mov
mov
add
sarl
jno
pop
xor
repnz
xchg
sbb
fsubrp
xchg
std
xor
sbb
jmp
ljmp
enter
pop
mov
xchg
nop
and
dec
jg
and
xchg
xchg
test
in
jns
inc
sbbl
adcb
outsb
mov
gs
jo
adc
in
sar
or
das
jecxz
dec
rep
lret
mov
push
xor
arpl
pop
mov
mov
pop
sub
sti
inc
sub
inc
sbb
mov
dec
pop
in
cmpsb
iret
jmp
sarl
arpl
adc
mov
jp
or
dec
pushf
outsb
repz
popaw
push
push
mov
mov
dec
popa
cltd
jmp
in
addr16
xor
bound
lock
or
xchg
clc
or
jmp
ret
pop
and
in
data16
ror
mov
push
rorb
int
jno
xchg
or
scas
test
mov
push
push
andl
dec
icebp
xlat
jp
loop
sub
jns
add
xchg
mov
inc
popa
int3
dec
pop
rcl
out
es
lods
inc
cmpsl
lcall
xor
add
add
enter
cmc
lahf
bound
outsb
aad
mov
sub
dec
xlat
outsl
or
adc
sbb
popa
push
mov
push
icebp
repnz
test
ret
push
dec
cmpsl
sub
insl
cmp
sbb
jo
pop
in
sub
adc
jne
cs
mov
inc
dec
xchg
andnps
mov
mov
outsb
fsubrl
jns
das
fdivs
cli
mov
pop
mov
les
ja
arpl
shll
arpl
mov
push
ficoml
in
mov
sahf
jbe
xchg
loopne
out
int
xor
pop
rcrb
jmp
mov
push
jecxz
cmpsb
outsl
pop
or
icebp
sub
cmpsl
lea
cmp
jns
les
and
test
mov
or
sbb
adc
gs
data16
cmpsb
sub
out
xchg
not
mov
pop
adc
xchg
xchg
inc
mov
cs
push
mov
scas
dec
ljmp
enter
sub
mov
mov
inc
or
jl
sub
cld
mov
inc
ret
jmp
xchg
mov
push
mov
inc
aas
fsubs
fisttps
adc
sub
aad
out
out
push
fisubrl
cmp
test
mov
mov
bswap
dec
add
and
ret
das
jne
sbb
flds
jmp
mov
add
mov
mov
dec
mulb
xchg
or
rcr
pop
jp
or
mov
stos
xchg
scas
fimuls
or
insl
mov
pop
hlt
jne
pop
into
mov
ret
mov
pop
jl
call
enter
push
sbb
das
stos
jl
in
push
ljmp
or
push
xor
xlat
icebp
mov
in
int
mov
in
outsb
mov
cmc
and
sbb
test
out
nop
js
xlat
ret
lea
arpl
mov
cmp
jnp
push
dec
test
or
pop
scas
and
js
push
popa
fnstenv
xchg
cmc
push
je
pop
jbe
lods
iret
pop
ficompl
pop
cmp
int3
cld
std
dec
lret
cwtl
dec
adc
ret
aaa
push
negl
div
jbe
mov
scas
test
lahf
lea
scas
pushf
imul
and
mov
jp
or
int3
dec
jmp
jle
or
add
xchg
mov
mov
or
cld
xchg
lcall
cs
ds
fs
int3
fildl
fsub
and
ja
daa
jnp
test
push
or
mov
and
mov
pop
and
xor
std
in
je
cmp
mov
jl
inc
fstp
out
sub
sbb
push
adc
outsl
aad
repz
xchg
jae
rcl
mov
cmp
or
sub
loop
push
xchg
insb
jno
in
rcll
inc
testb
arpl
cmc
dec
cmp
xorb
mov
xchg
fsubl
shll
mov
jo
lahf
and
push
lds
dec
pop
outsb
push
adc
xchg
ror
mov
test
lahf
jb
out
push
cli
push
inc
test
fstpl
mov
fisubs
test
inc
push
pushf
loop
push
inc
add
adc
mov
or
shrd
and
xor
jne
xchg
stos
add
test
repnz
jae
nop
testb
mov
not
das
inc
pop
neg
roll
insl
or
sarl
filds
jle
dec
insb
mov
xor
lahf
pop
out
in
ret
stos
mov
popa
or
pop
mov
cmp
jg
mov
and
mull
test
pop
push
fxtract
or
subl
ficoml
pop
fwait
cmc
xor
fsub
aam
cmp
pop
jle
mov
dec
pop
inc
mov
cld
xor
ret
fbstp
test
inc
inc
int
fmuls
int3
lods
jo
jae
mov
sbb
adc
inc
cmp
mov
nop
add
jge
sahf
jle
lods
jno
xlat
je
mov
cmp
mov
mov
inc
xchg
subb
fstpl
lods
fs
push
sub
imul
pop
loope
add
xor
and
xchg
ljmp
push
testb
cmp
hlt
or
repnz
and
mov
testl
jp
decl
adc
cs
movsb
loope
ret
sub
mov
ret
sub
jno
enter
jnp
sub
cmp
fisttpl
scas
sbb
xchg
mov
mov
fprem1
mov
and
mov
sub
cld
iret
jl
pop
loop
jb
mov
shl
or
lods
imul
shrb
mov
or
mov
lcall
jne
push
fs
pusha
sbb
aas
xorl
pop
loop
inc
testl
mov
call
mov
mov
mov
cmc
scas
fsubrs
sub
bound
add
adc
cmp
pop
cmp
dec
and
and
cwtl
jno
fs
mov
fidivl
xchg
sub
int3
xchg
pop
in
sti
lock
xlat
xor
push
mov
or
mov
xlat
sbb
xor
mov
scas
or
adc
mov
cmp
or
jb
xor
pop
mov
in
movsb
stc
xor
push
dec
jo
cmpsl
and
jne
push
rorl
rorb
jns
mov
mov
test
pop
clc
mov
push
sahf
push
adc
fwait
test
stos
imul
ret
movsl
pop
int
or
lods
xchg
sub
loopne
int
sbb
addb
int3
nop
push
mov
repnz
ja
rcrl
punpcklbw
and
cs
sarb
xor
das
mov
pop
scas
jne
and
adc
cwtl
lods
cmc
pop
xchg
jo
mov
add
dec
out
mov
push
sbb
gs
jmp
xchg
stos
jecxz
ja
mov
push
movsl
xchg
popf
inc
mov
bound
xchg
lret
mov
adc
add
outsb
clc
add
pop
adc
popa
xchg
addb
inc
fs
mov
movsl
add
iret
hlt
ds
aas
jp
outsl
fs
mov
lea
sub
inc
jmp
pop
push
repz
in
sbb
mov
jp
nop
mov
adc
xchg
jmp
or
or
js
out
mov
arpl
sbb
les
cmp
call
pop
or
mov
adc
gs
rcll
xchg
int3
loopne
dec
sub
mov
and
pop
insb
mov
roll
mov
cmpsb
dec
xchg
sti
mov
fsubrl
fsubrl
pop
sub
dec
sbb
mov
xchg
fidivrl
mov
pop
loope
ficomps
fsubl
enter
shl
push
clc
js
push
add
or
add
popf
adc
xor
out
pusha
cwtl
or
cltd
inc
in
fldt
sbb
fwait
add
xor
xor
sbb
dec
fldcw
mov
mov
pop
sti
xor
sbb
sub
xlat
stos
mov
pop
jbe
mov
out
push
mov
fiadds
pop
inc
arpl
sub
movsl
dec
pop
faddl
xor
loop
imulb
ds
or
jp
adc
dec
mov
ds
movsl
pusha
sbb
int
ja
mov
dec
les
aaa
add
mov
mov
mov
mov
in
and
mov
das
fadd
lret
loope
pusha
inc
in
mov
push
add
daa
pop
xor
sub
dec
adc
or
cmp
mov
push
ja
icebp
xchg
in
aam
and
xlat
movsl
mov
rorl
shrb
fidivrs
out
roll
sub
fs
mov
sub
cmc
pop
cmp
shl
aaa
aam
lods
je
lock
jl
add
xchg
mov
in
scas
push
stos
sarl
and
pusha
fsubs
daa
pop
sub
test
cmp
gs
jge
fucomi
int
jne
bound
sub
sti
andb
or
es
pusha
je
and
hlt
jg
repz
movsb
out
bound
mov
jb
lods
push
and
test
push
mov
push
adc
cmpsb
adc
cmp
inc
jbe
xchg
xchg
sbb
push
hlt
pop
sub
aad
es
pop
fdiv
fstps
jl
rcl
jecxz
fstl
dec
movnti
in
std
pop
mov
js
sahf
popf
add
mov
pop
pop
push
or
jp
aaa
je
add
pop
jecxz
adc
pusha
in
jo
xchg
bound
test
cld
lds
inc
mov
loope
sub
fidivs
and
adc
loop
addb
xor
leave
das
or
lret
fst
popf
sbb
lea
cmpsl
scas
or
lods
mov
or
sbb
mov
lret
out
out
insb
outsb
push
mov
lahf
sbb
notb
out
je
gs
mov
dec
das
dec
outsl
or
rcll
adc
and
pop
sbb
sbb
sub
popf
shrl
lahf
xchg
fadds
inc
mov
mov
fld
adc
xchg
hlt
idiv
test
dec
push
jb
pushf
dec
push
ret
xlat
inc
push
imul
in
jl
mov
cmp
stos
xchg
out
cmp
out
jns
cli
pusha
mov
out
push
and
cmp
movsb
fbstp
fwait
add
add
repz
ret
pop
cmpsl
pop
cmpb
ljmp
mov
rcr
lcall
iret
mov
pop
cmc
jg
or
xlat
pop
and
lcall
jae
pop
ljmp
adc
jp
cmc
mov
cmp
dec
testl
aas
push
xchg
cli
adc
mov
ret
and
mov
dec
dec
and
repnz
test
bound
xchg
movsl
pop
xor
cmp
xor
xchg
mov
js
outsb
dec
sti
lcall
and
cs
ja
cltd
cmp
dec
das
dec
stc
insb
popf
jmp
jl
sbb
sti
add
ror
inc
xchg
shl
ja
sbb
aas
jge
into
jecxz
sbb
jp
pop
mov
mov
repnz
es
or
repz
mov
icebp
mov
mov
cmpsl
fwait
js
mov
ljmp
fisttpl
adc
sbb
loopne
lcall
mov
cmpsl
or
xor
int3
out
in
call
scas
push
mov
outsl
ss
cmp
add
pop
sbb
mov
cmp
push
mov
shlb
lcall
cld
sar
adc
pop
and
jb
mov
add
xchg
sahf
and
adc
xchg
mov
ljmp
aam
push
std
lods
sub
in
xchg
call
adc
icebp
or
push
loop
mov
xor
mov
jae
daa
mov
and
dec
fistps
or
pop
data16
test
mov
sbb
cmp
lock
ffreep
pop
xor
out
xchg
push
repz
inc
imul
aad
pop
pop
aaa
dec
push
push
ret
sahf
mov
int
cmpb
pop
in
test
mov
mov
test
scas
pop
and
out
pop
cmp
cmp
hlt
aaa
push
add
push
loopne
xchg
xchg
ss
sbb
and
jnp
xor
sub
sarl
sub
imul
add
loopne
inc
inc
cmp
push
int
adc
sub
fisubrl
jb
lea
scas
xchg
push
adc
and
push
icebp
hlt
andps
mov
mov
xor
ds
or
pushf
lods
push
sarb
das
lahf
iret
push
cmc
add
aaa
pop
pop
xor
mov
addl
mov
push
pop
dec
sbb
inc
jge
mov
call
or
inc
rorb
incb
pop
dec
aam
jb
lret
mov
mov
scas
xchg
sub
fwait
sbb
xor
and
popf
ret
stos
loop
jne
fs
loopne
dec
dec
test
xor
jge
jbe
cmpsb
mov
aaa
shll
out
sbb
jl
iret
clc
imul
test
jnp
addl
stos
mov
mov
inc
mov
filds
xor
mov
insl
jmp
lret
sub
or
add
gs
dec
icebp
orl
movsl
jo
pop
mov
test
and
mov
and
mov
sub
inc
negb
mov
sub
mov
jmp
iret
sbb
or
int3
push
mull
nop
lods
pop
lods
sub
int
xor
jmp
jge
and
movsl
loope
stos
popa
jecxz
jnp
in
andl
andb
scas
add
xchg
or
cmpsb
push
popa
push
lcall
pop
iret
inc
mov
psllq
xor
or
push
movsl
stos
lret
jge
subb
jno
pop
sbb
mov
je
icebp
xchg
jmp
loope
movsl
xor
popf
inc
int
or
imul
jecxz
insb
mov
push
jno
add
nop
and
mov
or
dec
mov
dec
and
jmp
shrl
popa
lods
dec
dec
icebp
out
pop
loop
enter
test
nop
les
sbb
add
dec
popa
pop
ljmp
jns
neg
or
call
push
cmpsl
push
dec
sarl
sub
into
cmpsb
add
test
in
fdiv
mov
fnsave
cmp
and
addps
xor
mov
nop
and
data16
jmp
xchg
loope,pt
les
fnstenv
addl
filds
cmp
jb
aaa
int3
mov
dec
xchg
ret
inc
push
ret
inc
nop
mov
add
push
ds
pop
bound
ss
roll
sub
dec
jo
fildl
and
inc
adc
icebp
shrb
je
int
shr
sbb
in
repz
push
repnz
bound
ja
jns
fs
dec
sarb
mov
pop
cmp
fsubl
fsubrs
xadd
sub
shrl
add
lcall
mov
std
movsl
adcl
or
inc
jns
sbb
inc
fidivs
xor
xlat
daa
pop
loop
mov
inc
dec
shlb
sahf
ja
cmp
std
in
dec
jle
dec
int
mov
sub
inc
lcall
add
inc
jg
nop
push
pop
and
mov
enter
xchg
inc
out
cs
mov
cwtl
out
sbb
sbb
cmp
scas
sbb
jb
mov
and
cmc
in
push
lds
bnd
and
mov
push
rolb
cmp
sbb
jecxz
in
test
stos
stos
es
stos
movsl
ret
loopne
inc
repz
rorl
neg
repz
into
les
loop
out
jge
pushf
data16
insl
xchg
cmp
dec
or
add
out
cltd
aas
xor
loope
gs
jp
jecxz
mov
pop
arpl
in
pop
cmpl
xchg
jg
into
insb
pop
adc
push
jb
in
stos
enter
mov
dec
jns
cmp
mov
jge
mov
cs
push
mov
jnp
jmp
push
sub
push
fnstenv
and
cmpsl
fists
jo
and
dec
add
test
xchg
mov
mov
test
inc
cmp
mov
jle
fistps
mov
cmc
decl
xchg
sbb
jl
inc
in
cltd
test
jecxz
aaa
outsl
inc
jecxz
cwtl
sbb
pusha
mov
pop
sub
push
cltd
push
in
dec
lds
and
and
sbbl
add
add
mov
out
leave
mov
jne
add
mov
ljmp
dec
lock
fldt
outsb
dec
sarl
mov
mul
add
popf
js
enter
jmp
dec
jne
xchg
and
adc
mov
inc
and
lods
repz
or
and
or
mov
cmpsb
push
dec
sar
and
fdivrl
mov
dec
into
testl
std
pop
mov
fadd
in
push
ss
xor
pop
sbb
inc
add
shrb
add
jl
cld
cmp
mov
enter
adc
lcall
sbb
adc
mov
mov
mov
aas
scas
push
jne
loop
lods
push
arpl
imulb
fwait
sbb
xor
adc
out
mov
bound
pop
in
lretw
push
out
mov
lods
insl
out
daa
mov
or
xor
jl
popa
clc
sti
jb
cmp
mov
movl
out
xor
or
gs
loopne
push
fildll
daa
js
sub
jecxz
test
int3
leave
aas
fsubrl
stos
stos
mov
inc
fsubl
mov
push
sti
xchg
inc
adc
mov
mov
jl
test
outsl
sub
xchg
and
mov
mov
out
scas
rcrb
or
push
xor
repnz
pop
cltd
cld
sbb
fstps
orb
inc
sti
shlb
sbb
jnp
mov
loope
pop
fldl2t
fildl
fidivl
adc
add
cs
push
jo
sbb
fsubl
jle
stc
inc
mov
jle
adc
addl
out
jecxz
push
push
lret
adc
les
dec
call
jecxz
lods
inc
sub
imulb
add
cltd
enter
xorb
inc
push
sbb
or
ds
push
mov
aad
pop
push
add
sub
dec
notl
jmp
stos
inc
arpl
mov
std
or
js
lret
cmp
push
xchg
test
mov
xor
pop
mov
out
push
sub
pushf
ss
ret
inc
dec
mov
add
xor
pop
inc
insl
aas
sub
pop
push
sub
mov
adc
dec
sbb
jnp
add
push
push
mov
outsl
fcmovnb
xchg
outsb
loopne
add
test
jae
mov
int
and
jp
lds
cmp
jge
sbb
sub
or
cmp
or
inc
lret
add
lock
xchg
inc
or
stos
or
out
loop
call
adcb
push
mov
fs
push
mov
es
mov
sbb
push
jb
out
sbb
push
sub
notl
lods
mov
jnp
sub
dec
adc
insl
jno
push
xchg
mov
mov
inc
cmp
add
lea
pop
cmp
cmpb
outsb
dec
ljmp
mov
mov
divb
lods
bswap
cmc
mov
push
dec
cld
mov
shll
sbb
loope
dec
pop
pop
shlb
in
jp
xchg
fldcw
dec
scas
outsl
lcall
ljmp
adc
lods
pop
mov
lcall
mov
mov
cmp
mov
shll
lods
ja
bound
xor
cmpsb
pop
fstl
addr16
cmpsl
dec
xor
add
popf
je
data16
sub
les
sub
and
jg
xchg
adc
pop
inc
repz
adc
inc
mov
bound
je
xchg
dec
mov
cmp
aaa
in
mov
mov
psubusw
xchg
js
mov
int3
sbb
adc
mov
jns
cmpsl
cwtl
xor
cmp
xor
mov
das
lds
mov
fcmovnu
cmp
jle
stos
inc
pop
popa
or
push
pop
mov
nop
lret
push
adc
aam
dec
mulb
adc
push
mov
loopne
xchg
mov
jnp
andb
push
icebp
test
pop
call
adc
add
ret
fdivp
sub
sub
pop
or
cmp
fwait
sbb
enter
les
xchg
adcl
jle
sbb
jae
mov
sbb
test
andl
cmpsl
mov
xchg
push
into
cmp
sub
sbb
or
xchg
inc
insb
mov
loopne
shrb
cmp
or
xlat
jne
repz
cmpsb
fdiv
fisubrs
mov
addr16
mov
pushf
in
cmp
cltd
daa
int
jg
insb
lret
mov
pop
js
push
lock
add
inc
neg
pushf
sar
xchg
insb
and
clc
mov
enter
fs
sahf
mov
mov
or
fsubl
mov
and
in
jbe
sbb
or
xor
mov
shll
imul
dec
jo
popf
std
lcall
fisttps
out
pop
pop
mov
mov
das
js
jns
mov
xchg
lea
sbb
outsl
aam
fmull
in
mov
pop
xor
mov
mov
inc
ficoml
imul
popf
push
inc
or
nop
insb
cs
in
pop
inc
lea
call
jmp
mov
dec
adcl
lods
or
lea
xlat
mov
cltd
add
repnz
sub
xchg
cmp
push
fwait
mov
pop
cmp
sbb
movsl
in
add
jns
jne
aaa
adc
sbb
fcmovne
nop
sbb
mov
fistps
jecxz
ret
imul
lods
sbb
and
push
sbb
aas
pop
lock
jnp
jne
adc
jecxz
in
mov
lret
xchg
rorb
cld
lods
movsl
mov
add
fwait
aad
cmp
pop
push
pop
xchg
sbb
mov
sub
pop
xor
test
xorl
lahf
jae
inc
mov
mov
movsb
mov
sub
or
fs
fldl2e
loop
rclb
hlt
das
dec
add
testl
dec
scas
xor
xor
pop
lods
fmuls
mov
aad
fildll
lods
notl
test
pop
sub
mov
mov
inc
xor
xchg
ss
pop
enter
dec
sub
repz
insb
jle
pop
jge
shlb
dec
adc
adc
shl
hlt
iret
jle
mov
jl
dec
lock
pop
call
xchg
lock
xchg
inc
aaa
mov
push
sub
xchg
fcompl
push
imul
xchg
xchg
dec
xor
shlb
add
pop
outsl
pop
pop
fistps
jecxz
lcall
out
jle
inc
jmp
jecxz
cmp
mov
sub
xchg
dec
jbe
push
out
lahf
movb
jbe
in
add
mov
dec
mov
dec
repnz
mov
sbb
pop
cmpsl
sub
push
jp
sub
add
xchg
cwtl
cmp
loopne
xchg
insl
cmp
lods
cmpsl
sti
call
pop
mov
dec
cmp
add
addr16
push
in
ret
in
mov
adc
outsb
jae
pusha
dec
nop
subb
out
cmp
clc
gs
or
ret
adc
xor
rolb
or
sbb
mov
or
or
std
sub
add
cmpb
rorb
loop
xor
xor
and
mov
int3
mov
and
int
and
jo
je
xchg
popf
pop
sub
add
addr16
and
push
lods
rcl
pushf
imul
jg
dec
push
rorl
nop
xchg
adc
outsb
and
and
andl
pop
les
and
in
jo
push
lods
shlb
xlat
out
or
ret
adc
or
mov
insl
mov
std
mov
test
xor
or
dec
push
jmp
int3
or
sarl
jmp
cmc
mov
sbb
pop
aad
pusha
cmpsb
mov
call
rcrl
dec
lds
or
jle
not
and
add
call
daa
xchg
lea
adc
mov
jmp
stc
dec
cmp
inc
jg
mov
mov
mov
clc
fsts
jb
jcxz
loopne
mov
adcl
or
mov
xchg
movsb
leave
orl
ficoms
sbb
das
or
cmp
lods
mov
idiv
in
add
aam
aas
leave
pushf
lea
push
mov
pop
xor
mov
mov
popf
jae
sbb
sahf
mov
out
mov
xor
jne
arpl
dec
push
mov
jge
stc
sbb
aad
arpl
add
fcompl
add
rolb
lcall
mov
std
ret
sub
addb
cmc
fistpll
mov
rol
test
test
aaa
cmc
outsl
in
lcall
and
cltd
pusha
or
add
push
aas
mov
and
out
mov
xchg
sbb
das
mov
lock
mov
lea
in
sub
mov
inc
daa
sahf
add
call
iret
int
mov
rcll
inc
cmp
pop
and
stc
pop
pop
jg
xor
jle
jp
fwait
cltd
adc
mov
ss
mov
or
sub
sub
sbb
jg
adc
push
mov
push
ret
adc
xor
shl
lods
dec
xchg
xor
popf
gs
mov
es
adc
insl
inc
sbb
int
ds
nop
jp
pop
outsb
xchg
add
in
sub
fadds
jl
mov
cmp
inc
cmp
sbb
aaa
mov
in
add
and
xchg
mov
lock
cmpsb
insl
inc
inc
xor
jb
mov
adc
cmp
in
mov
popa
fldcw
push
jo
inc
add
shlb
call
mov
sub
ret
psllw
inc
into
lock
push
push
lahf
pop
les
push
inc
and
fucomi
mov
inc
cwtl
mov
rorl
add
xchg
dec
testb
ret
xchg
add
into
push
popf
inc
jns
jnp
int3
dec
mov
xor
push
xchg
lret
cmpsb
out
js
cmp
scas
incb
pop
lea
cmp
dec
jle
jmp
mov
mov
mov
push
pop
lahf
lret
loopne
pop
ljmp
and
jmp
in
ljmp
mov
pop
push
cmp
sub
push
xor
gs
repz
lods
inc
push
fistl
xor
rcll
mov
xchg
sub
mov
int3
xchg
data16
dec
out
fsubrs
or
pushf
pop
sbb
mov
xlat
mov
sbb
lret
cmp
leave
pop
cltd
dec
sub
lds
lahf
xorl
aad
and
pop
adc
leave
outsb
adc
push
test
inc
lods
out
push
fs
repnz
jnp
pusha
jge
data16
out
sub
or
xlat
sets
cmovl
xchg
cmp
pop
call
shll
rorb
ljmp
les
imul
pop
out
cmp
adc
mov
dec
andb
mov
sarb
jae
add
out
pop
mov
jmp
shll
fstl
imul
les
inc
push
push
fidivrl
stos
mov
xchg
mov
sbb
push
les
pop
dec
fucomp
sbb
xchg
and
das
les
mov
int3
lods
leave
stc
cmp
lds
fwait
mov
cmp
in
jmp
lret
pop
lods
cmp
xchg
xchg
lcall
fldt
out
mov
iret
cmp
popf
mov
dec
jl
pop
lahf
mov
sbb
mov
jbe
adc
fisubs
movsb
mov
pop
aas
adc
mov
call
xchg
sbb
xchg
mov
clc
mov
inc
out
lods
pop
pop
cmp
iret
xchg
xor
jmp
xchg
add
rcrb
movsl
test
jne
jle
sbb
pop
aaa
dec
icebp
jle
and
sub
or
enter
xor
addr16
inc
loopne
inc
sbb
ret
xchg
sub
pop
fnsave
cmpsl
xor
cs
fucom
scas
sub
ficompl
jo
xchg
sub
push
jmp
add
and
in
push
and
fstpt
nop
adc
mov
test
mov
ds
xor
ret
and
jae
sbb
pop
sbb
xor
mov
push
push
mov
sub
shlb
jo
sbb
cltd
inc
mov
adc
mov
loop
sub
fcomps
jge
aad
loop
and
lahf
lea
mov
test
xchg
xor
sub
jp
mov
pop
pop
lods
fld
ret
mov
dec
pop
xchg
add
push
inc
ret
add
mov
sbbl
loop
jae
and
es
fidivrs
xchg
rcrb
andb
or
sbb
adc
lcall
adc
xchg
cmp
rol
adc
jecxz
mov
test
mov
popa
xchg
addl
cs
popw
xor
mov
mov
cmp
lret
inc
mov
adc
ss
fstl
mov
repnz
leave
loopne
imull
outsl
pop
pop
mov
in
jbe
rclb
and
nop
xlat
pop
xor
push
cmp
cmp
xor
adc
adc
mov
push
jge
cmp
loope
rolb
shll
push
insb
or
sub
sub
inc
cmc
mov
stos
jmp
test
sbb
imul
adc
push
cld
and
adc
pop
adc
and
dec
aaa
fiaddl
push
adc
int
into
lods
inc
jo
push
cltd
fsin
cltd
stc
and
sbb
fs
xchg
icebp
dec
dec
lods
dec
mov
fldl
stos
mov
andb
mov
push
aam
xor
and
add
add
or
std
inc
test
lock
iret
lds
out
pop
push
int
sbb
je
shl
int
es
cmp
shrl
inc
lods
in
adc
aaa
mov
push
mov
xchg
mov
mov
test
add
test
xchg
nop
insb
xor
mov
lods
cli
fstpl
add
sub
cmp
data16
jns
addb
hlt
call
mov
xchg
push
adc
xchg
xlat
ds
xchg
xlat
cmp
or
test
lock
adc
jmp
stc
cmpsl
into
lcall
divl
inc
adc
das
pushf
aad
or
in
pop
inc
jmp
lcall
sahf
mov
jno
dec
xchg
xchg
jl
lret
add
stc
fwait
cs
test
sub
mov
dec
int
lds
add
xor
ljmp
rorb
int3
dec
and
cmc
xchg
call
fcoms
outsb
loope
xor
dec
out
mov
loopne,pt
test
pushf
mov
into
stos
cmp
daa
mov
insl
lds
rcll
shlb
in
rcll
enter
idivl
repnz
add
jae
mov
adc
imul
cmp
lret
dec
into
mov
icebp
inc
add
jecxz
xchg
je
push
add
adc
les
decl
add
and
cmc
inc
outsb
in
add
ficomps
hlt
insb
gs
jo
push
sti
outsb
and
inc
lcall
adc
xchg
dec
push
ljmp
sbb
inc
sbb
jle
dec
inc
mov
fdivrl
inc
sbb
ja
aas
js
and
pop
cmpsb
movl
inc
add
dec
add
jmp
sbb
in
into
lea
inc
jl
test
pop
insb
inc
lds
clc
decl
lret
test
mov
sub
mov
shl
xabort
push
int3
fimull
sub
cld
fsubl
jno
es
hlt
mov
cmp
sahf
mov
popf
and
sar
cmc
repz
mov
add
xor
notl
ficoms
jns
push
daa
in
or
daa
lahf
pop
jg
push
dec
loope
out
cmc
mov
mov
pushw
ds
add
ret
dec
das
jecxz
xchg
add
in
scas
mov
or
add
inc
sbb
inc
call
inc
xlat
imul
pop
xor
mov
xchg
movsb
repz
mov
lret
imull
push
and
movsl
arpl
xchg
add
roll
push
shlb
xchg
shl
movl
addr16
adc
stos
sti
fmulp
adc
and
fadds
sbb
es
aad
pushf
out
pop
or
push
dec
sbb
inc
int3
call
scas
andb
cli
or
xchg
dec
stos
jle
jle
lods
scas
in
fnstenv
aam
es
rorb
mov
inc
adc
mov
test
testb
insl
mov
jge
shlb
nop
push
mov
pop
mov
add
pushl
repz
jnp
repnz
pop
push
jge
sahf
sub
es
clc
add
push
lods
test
out
jl
adc
sbb
setl
xchg
push
jg
imul
ds
jbe
pop
inc
push
mov
inc
je
in
inc
sbb
cmc
lcall
ljmp
cwtl
cmp
out
lods
add
imul
lds
test
xor
loop
or
xchg
dec
stc
mov
cmp
xchg
push
mov
xchg
adc
cmp
jmp
or
sub
xchg
jno
rcrb
bound
sub
add
sub
pop
jg
shl
ret
lds
pop
lods
ss
outsb
mov
push
fwait
sub
dec
push
loopne
mov
lock
fcoml
fmull
insb
mov
inc
pop
bound
scas
cmp
jp
sub
mov
outsl
fimuls
lock
sahf
out
sbb
imul
push
mov
mov
scas
mov
hlt
jne
es
inc
in
stc
popa
xchg
call
jnp
cli
shlb
stos
std
insl
out
pop
arpl
mov
push
mov
mov
adc
movsb
cmp
dec
out
out
cmp
fisubrs
xor
push
xchg
sub
lods
xchg
shlb
sub
jmp
add
fnstsw
es
push
in
lcall
lea
ret
pop
xchg
cmp
test
mov
xchg
repnz
unpckhps
sbb
ja
xbegin
in
push
pop
mov
mov
lcall
cmpsb
jb
outsl
pop
das
jno
popf
notb
lods
cmp
ficoms
popa
xchg
xchg
dec
sub
push
pop
shll
pop
cltd
add
or
mov
pop
mov
mov
cmp
hlt
mov
lods
sbb
lods
test
mov
xor
or
adc
das
xchg
sbb
into
mov
fdivrl
test
cmp
addr16
movsb
lods
add
pop
jb
or
js
jbe
movb
and
jp
mov
inc
sub
jge
xchg
or
mov
jmp
pop
xchg
mov
pop
inc
hlt
rolb
jmp
icebp
pushf
sub
sarl
sbbl
hlt
lea
ja
adc
psrlq
and
nop
jmp
fstps
push
mov
inc
xor
xor
lock
cwtl
push
and
rcrl
xorl
pop
pop
mov
mov
out
push
call
xchg
pop
push
test
xchg
adcl
ljmp
adc
mov
sbbb
lahf
inc
addr16
bound
jnp
lock
xor
in
mov
dec
mov
cmpsl
mov
pusha
push
xor
pop
jl
mov
xor
jl
enter
addb
lods
pop
jge
xlat
xor
cmp
cld
cld
cwtl
xchg
jns
dec
std
mov
imul
adc
mov
movsl
pop
push
cmpsb
insb
test
or
negl
aam
scas
or
imul
xchg
and
mov
xor
scas
add
out
mov
fpatan
bound
fsubrs
popf
sub
das
shl
add
sub
repnz
inc
dec
add
inc
outsb
ss
xchg
inc
inc
ficoms
jp
adc
ret
push
cld
xor
cmp
cmc
cmp
dec
nop
mov
xlat
repnz
push
dec
sti
push
outsl
sbb
fidivl
repnz
xchg
ss
ret
lds
sahf
dec
mov
pop
dec
scas
andb
fcmovne
pusha
jbe
mov
fwait
xchg
mov
xchg
xor
aaa
std
jb
call
or
mov
xchg
sub
outsb
mov
nopl
xchg
ss
xchg
mov
out
mov
xor
div
sub
xchg
fnstenv
jno
lods
inc
xor
sub
imul
jb
dec
sub
scas
cmp
mov
sub
pop
xor
jecxz
popa
inc
add
rolb
int
fcoms
call
inc
ret
and
movsb
das
fdivl
fidivs
jbe
cmc
dec
in
leave
xor
dec
dec
addr16
movsl
adc
ljmp
es
clc
out
lods
js
inc
movsl
dec
pop
push
lea
inc
sbb
mov
and
stc
pop
fnstsw
sub
test
adc
or
mov
aam
in
test
nop
pop
fcoms
push
jl
push
test
dec
adc
sub
jb
fsts
add
jl
test
adc
test
movsb
lods
loop
sub
xchg
mov
mov
lcall
inc
and
adc
and
add
mov
xorl
addr16
mov
aam
cmp
xor
inc
sub
movsb
mov
xor
test
add
fwait
mov
xchg
mov
lahf
rcr
std
sbb
or
subl
add
cmp
or
test
mov
cltd
dec
cmpsl
lret
repz
and
push
pushf
mov
inc
pop
lock
scas
xchg
sub
shlb
pushl
xchg
mov
enter
aad
out
iret
ror
cmc
push
push
or
pop
cvtpi2ps
nop
je
repz
scas
pop
mov
cmp
mulb
out
int3
pop
hlt
bound
shrb
in
mov
or
fisubrl
icebp
mov
and
mov
mov
dec
mov
add
gs
xchg
outsb
mov
mov
or
jb
aam
pmulhuw
decl
lods
dec
mov
rcrl
xchg
sub
cmc
test
cmp
mov
into
jne
push
mov
xchg
es
jmp
xor
and
xor
movsl
icebp
dec
fcompl
adc
fdiv
add
outsl
or
mov
and
mov
inc
fucomip
push
and
imul
push
ret
outsl
nop
inc
int3
popa
sti
lods
cmp
lahf
mov
xchg
xchg
jns
int
fnstsw
idiv
je
xor
or
xchg
insb
mov
inc
cmc
ret
bound
cs
cs
aam
mov
cwtl
jo
add
sbb
in
xor
or
push
ja
test
inc
imul
push
imul
andb
int3
inc
xor
xor
inc
mov
pop
daa
or
aaa
push
cmpsb
cmpsb
outsl
dec
fstpt
push
pop
cmpsl
add
pop
insb
in
xchg
sbb
out
sbb
mov
jno
cld
xchg
pop
push
out
das
mov
push
xor
jbe
sub
sahf
xchg
aam
push
divb
lods
imul
xor
mov
iret
imulb
jp
adc
inc
adc
mov
aas
daa
pusha
andl
lcall
add
mov
lcall
aam
dec
or
icebp
adc
enter
pop
adc
and
nop
clc
rcll
insb
ljmp
add
jle
lods
and
sub
xchg
ret
jnp
lahf
jle
pop
popf
shlb
ffreep
ja
pop
cltd
int
cmp
add
push
and
mov
shrl
jbe
fidivrs
fldl
jo
adc
xchg
xor
not
cmp
jb
pop
mov
add
push
pop
test
inc
dec
mov
inc
or
lret
cmp
mov
scas
xorb
xor
aaa
cli
push
aaa
into
jae
leave
pop
ljmp
call
push
push
xchg
xchg
add
dec
sbb
int3
adc
push
lods
pop
inc
mov
sub
idivb
movsl
notb
std
inc
or
mov
mov
mov
popa
popf
jb
xchg
and
dec
mov
inc
sbb
jle
je
jne
pop
inc
sarb
nop
cli
inc
mov
mov
dec
repnz
lods
or
std
and
jp
test
aaa
cmp
cmp
pop
enter
ror
and
push
inc
cmp
sbb
xor
inc
cltd
mov
mov
jl
mov
stc
bound
add
rol
pushf
adc
dec
gs
or
xor
sbb
stos
push
sbb
sub
add
movsb
out
insb
shrl
mov
js
lds
pop
addr16
xchg
sti
flds
cmpsl
xchg
sub
jle
push
cmc
pop
ja
xchg
dec
sub
push
push
inc
pop
lret
sub
mov
xchg
jnp
mov
out
repnz
sub
filds
adc
xchg
aas
push
jo
jb
xor
divl
mov
js
ljmp
mov
jae
cmp
jae
or
add
lds
imul
push
inc
dec
daa
sbb
in
cmp
push
xchg
leave
test
mov
gs
add
adc
mov
pushf
jo
push
mov
sbb
ja
dec
leave
int3
mov
enter
sbb
repz
add
mov
fnstcw
ss
loope
arpl
jno
adc
mov
nop
jae
call
mov
mov
dec
jb
xchg
pop
push
fxch
lods
filds
fwait
cmp
push
test
pop
add
mov
in
and
lods
fwait
mov
mov
insl
xchg
stc
pop
stc
pop
jle
and
lock
or
js
call
in
popf
pop
xchg
inc
mov
fcmovnb
aas
mov
add
jl
faddp
jg
mov
test
xor
mov
les
int
enter
sub
cmp
in
js
add
imul
into
andl
popf
sub
dec
adc
jle
pop
xor
jp
mov
imul
shll
int3
pop
add
lods
prefetch
or
add
aas
jg
mov
lods
pop
outsl
pushf
sbb
cmp
insl
scas
or
pop
mov
jne
out
fs
stos
mov
lahf
stc
lods
test
mov
inc
jmp
mov
jp
addr16
mov
xchg
push
and
rorb
addl
clc
std
js
push
into
mov
rcr
mov
in
sbb
stos
andl
push
mov
mov
or
ret
testl
cmp
in
outsb
fcmovu
pusha
sarl
stos
mov
imul
cmc
xor
push
sbbl
fildl
scas
inc
aad
fs
and
dec
mov
sub
or
jbe
xor
cmpsl
idivb
hlt
jg
sbbb
les
xchg
rcll
jmp
sub
mov
xchg
int3
dec
jle
add
rclb
sbbl
mov
les
out
jbe
sbb
adc
cmp
insl
adc
pop
mov
mov
adc
ljmp
jb
int
push
stc
inc
sti
push
aas
and
mov
pusha
subb
pop
cmp
push
pushf
lahf
fisubl
pop
mov
outsb
mov
movsb
sbb
sub
jbe
sbbl
or
or
repnz
aas
hlt
popa
cmp
add
add
pop
or
mov
les
out
xor
add
ja
push
mov
enter
push
sbb
xchg
mov
and
fdivrp
dec
mov
xor
jp
push
add
mov
repz
shl
ss
repnz
out
xchg
jle
xchg
adcl
fidivrs
jg
cli
ja
jae
out
sbb
iret
daa
xor
and
push
ljmp
xchg
mov
fnsave
push
ror
icebp
adc
add
mov
xor
jmp
jns
add
mov
dec
out
mov
or
inc
xor
jle
push
iret
mov
pop
inc
sti
add
jmp
hlt
dec
mov
aas
fidivs
xor
in
jg
loop
in
adc
inc
movntq
push
vmread
mov
lahf
dec
or
js
push
stc
pop
clc
dec
pop
aas
jb
push
and
mov
iret
shll
add
jmp
popf
sahf
add
js
cmpsl
jg
xchg
movsb
mov
fs
mov
or
movsb
cmp
pop
xchg
mov
or
outsb
test
lds
or
cmp
jae
xor
ljmp
xchg
adc
jmp
lahf
js
cmp
hlt
mov
mov
cmpsl
jb
movsl
jle
dec
shrb
test
clc
divl
nop
dec
xchg
testb
adc
test
ret
pop
pop
mov
rolb
push
mov
loope
dec
mov
rcrl
mov
cmpsl
and
pop
xchg
cmpsl
ffreep
jge
in
popf
jge
fisttpll
mov
stos
stc
adc
and
cli
fstps
cmp
scas
mov
jl
cmp
aam
test
add
inc
mov
cmp
xor
lcall
xchg
xor
push
lret
lea
push
inc
mov
fldt
pop
lock
add
test
aad
mov
jns
pop
mov
jno
stc
lods
fistpl
into
jl
jge
je
jno
inc
and
sti
repz
dec
faddl
aam
xor
or
mov
repz
jno
fidivrs
sbb
cmpsb
outsb
inc
int
jmp
lcall
pop
push
addr16
jbe
or
or
dec
sub
and
in
jne
aad
jmp
test
and
mov
add
addr16
pop
gs
jp
pop
repz
sub
ret
xor
ficoml
mov
inc
aam
popl
dec
sbbl
ss
xor
push
das
repz
and
push
loope
inc
int3
lcall
xchg
scas
stc
xchg
popf
or
inc
fcoms
cltd
dec
sbb
test
loop
test
nopl
adcl
std
leave
adc
testl
mov
lds
sub
cmp
jno
sub
push
xchg
addr16
jno
jae
lods
popa
jg
xorb
mov
fimull
sub
pop
mov
mov
mov
bound
setno
jne
outsl
scas
add
inc
dec
stc
into
mov
mov
shrl
scas
and
mov
nopl
jmp
adc
mov
push
jecxz,pt
cld
cmp
pop
leave
mov
mov
fucom
mulb
scas
dec
adc
xchg
movsbl
xchg
inc
fcmovu
or
or
test
ds
mov
lds
mov
decl
jo
out
push
lret
mov
sub
inc
xor
cmc
arpl
mov
push
mov
loope
cmp
jb
push
test
test
push
jb
mov
xchg
ret
add
pop
je
pop
sub
outsb
and
in
cs
and
pop
pop
pop
aad
in
jl
pop
arpl
mov
jge
addr16
push
adc
mov
cmp
ror
jl
das
adc
sbb
pushw
movsl
adc
test
out
in
push
hlt
movsb
or
push
push
lods
mov
add
mov
hlt
lock
dec
rol
jmp
and
xor
dec
jle
pop
xchg
xor
jne
or
pop
lods
bound
adc
call
fiadds
outsb
pop
das
nop
mov
mov
or
jbe
pop
loop
daa
jbe
icebp
adc
loopne
imul
jae
dec
mov
xlat
test
je
mov
jns
aam
stc
scas
mov
lods
xor
mov
das
aad
sub
out
cli
pop
ret
mov
add
std
call
jecxz
and
aam
stc
enter
out
loopne
movsb
or
xchg
dec
sarb
cwtl
nop
xor
mov
fidivrl
aam
xlat
push
add
subl
movsb
int3
xchg
out
dec
mov
jp
lretw
push
je
ja
sahf
push
aam
xchg
jns
clc
enter
lret
jge
cmp
mov
or
pop
popf
rorb
mov
pop
xchg
xor
sub
cs
out
in
sarl
mov
lahf
or
push
idiv
sti
flds
jo
sbb
and
lahf
pop
ret
push
dec
and
aas
jp
add
ja
repnz
pushf
mov
divb
inc
add
mov
mov
push
das
or
inc
dec
cmp
lret
xchg
jge
arpl
stc
push
xchg
les
xlat
mov
into
icebp
test
pushf
push
lods
into
jp
cmpb
inc
mov
bnd
dec
cmc
jg
inc
mov
jg
leave
mov
shll
add
jmp
mov
mov
xor
mov
xchg
jmp
jmp
shrl
dec
je
mov
pop
adc
insb
rol
repnz
shrb
lods
push
inc
xchg
jle
xor
pop
xchg
xchg
mov
cmc
sbb
or
jmp
lcall
data16
mov
mov
xlat
icebp
enter
fcmovbe
iret
push
es
push
imul
nop
push
orl
mov
fcom
push
and
imull
ret
push
push
mov
mov
ss
mov
jmp
jb
mov
pop
fildll
xlat
push
addr16
sub
lret
sahf
sbb
xor
adcl
aad
test
mov
jnp
add
sbb
mov
mov
xor
bswap
jecxz
addr16
sbb
adc
cmp
jbe
adc
push
mov
pop
dec
cmp
out
outsb
cmp
jnp
lret
xbegin
sub
mov
xchg
test
mov
adc
jl
pusha
cmpl
add
push
lods
std
jg
lcall
lea
pop
xor
pop
repz
and
pop
dec
jecxz
stc
mov
shl
pop
ds
cmpsb
sbb
add
jae
and
mov
sti
fidivrl
aam
add
xor
sar
jp
fadd
push
mov
push
lahf
pop
andl
aad
rol
fwait
inc
mov
call
inc
fs
sarb
repz
add
pop
xor
outsl
bound
mov
push
mov
repz
repnz
dec
hlt
jl
lret
int3
xchg
or
adc
mov
stc
ss
or
jb
sub
xor
cmpsl
or
js
faddp
cmp
jg
xor
into
js
cmp
ret
les
dec
sbb
bound
aas
push
adc
inc
cmpsb
adc
es
lods
xchg
stos
mov
xchg
adc
inc
movsl
aas
cmp
adc
movsl
test
or
fwait
sbb
xor
fisttps
fcmovnbe
lahf
adcb
add
xchg
inc
push
dec
jmp
adc
sub
push
pop
cmp
cmp
sbb
sub
mov
jb
jo
outsb
daa
dec
or
lods
nop
lea
nop
pop
fcmovnbe
sti
inc
in
jns,pt
scas
and
or
gs
jp
push
cld
xor
mov
test
adc
xchg
in
push
push
jb
mov
jmp
pop
lret
rcll
or
imul
jmp
ret
inc
push
jnp
movsl
mov
add
xor
or
adc
mov
nop
mov
adc
rorl
clc
add
aaa
dec
repz
jb
pop
nop
jmp
and
shrl
jl
lahf
ret
fmuls
and
inc
mov
fdivs
inc
cmp
lods
repnz
lahf
scas
sbb
inc
repz
roll
cmp
in
sti
xor
aad
lcall
test
ljmp
xchg
sub
int
cmc
leave
push
mov
sahf
les
dec
arpl
sbb
xchg
xor
add
jecxz
in
xor
sub
adc
push
mov
insl
js
mov
and
insl
push
out
push
leave
wrmsr
insb
push
les
js
imul
xorl
pop
outsl
dec
cmp
fcmovnb
test
lods
push
cmp
mov
mov
jle
xor
pop
in
arpl
xchg
and
jmp
fwait
mov
sub
inc
adc
loop
xchg
cmpsb
jecxz
pop
push
cmp
cld
add
shll
stos
rorb
mov
int
cmp
dec
cmp
sbb
mov
pop
sti
jecxz
jmp
mov
adc
aas
test
jno
in
and
and
lods
in
mov
aad
xchg
cmp
ret
jnp
hlt
fincstp
aam
aas
pop
stos
stos
push
add
xor
iret
push
cmp
sbb
mov
xchg
popf
dec
dec
xchg
popf
std
ret
xor
loopne
jecxz
inc
fisttpl
ret
jecxz
dec
roll
mov
pop
pop
lds
int
or
mov
pop
push
mov
ss
lods
xchg
xor
sbb
addb
inc
mov
jno
mov
bound
loop
mov
iret
sub
divl
and
jg
xor
ja
pop
lret
dec
push
loop
xor
push
mov
in
jle
fdivl
imul
ret
ret
std
shrb
add
dec
inc
movsb
fs
cs
scas
cs
inc
nop
push
push
jecxz
add
or
movsl
xor
es
loop
out
mov
bnd
stos
pop
mov
adc
mov
shl
sub
movsb
test
int
xchg
xor
inc
xchg
or
aas
add
or
ret
add
mov
aad
adc
repz
addl
aas
into
cmp
mov
jge
sbb
xchg
andb
xlat
out
push
lds
sub
imul
or
out
fwait
sahf
cs
loope
mov
add
sub
je
push
pop
loopne
mov
jp
add
mov
dec
movsl
stos
or
jbe
push
ret
testl
pmulhw
addr16
aad
xchg
rcll
push
cmp
mov
mov
mov
sti
or
insb
sbb
sbb
add
jb
pop
loop
popa
xor
xor
mov
lcall
movsb
aas
cld
bound
enter
dec
les
inc
jge
in
mov
lret
sub
std
imul
cld
jl
out
push
aad
adc
xor
jbe
ror
movaps
or
push
popf
js
jbe
iret
stos
and
mov
push
je
push
adc
sahf
add
fnstcw
lcall
pop
dec
push
or
loopne
lds
in
jne
xor
sub
arpl
add
mov
push
sti
and
bt
rol
mov
mov
mov
lret
lds
rcl
xchg
ret
nop
clc
xor
mov
imul
inc
xor
and
arpl
rorb
pop
or
lahf
aaa
mov
xchg
sbb
insl
xchg
fsubl
sbb
push
repnz
outsb
std
arpl
lea
push
mov
insl
das
in
imul
mov
and
add
je
push
mov
loop
ja
fs
js
sub
aaa
scas
and
pop
jmp
leave
sub
xlat
daa
rcll
flds
xchg
push
jmp
mov
inc
sub
testb
addb
loopne
dec
and
dec
mov
dec
cltd
xchg
cs
push
jmp
and
out
aas
lahf
cmp
stos
lea
xlat
ja
xor
add
and
adc
cmp
mov
xor
sub
int3
xchg
jns
jle
sub
mov
lods
mov
inc
rclb
mov
sbb
push
aaa
xchg
mov
shr
lock
rcrb
cmp
idivb
insb
test
xor
shlb
xchg
in
and
inc
push
or
outsl
loopne
in
lods
fisttpl
add
jecxz
and
mov
mov
clc
adc
int3
out
cmp
mov
sbb
and
out
xchg
ja
mov
les
aam
push
or
xchg
clc
hlt
cli
jecxz
and
rorb
sbb
clc
push
cmpl
in
and
xchg
mov
jb
scas
mov
rcll
cmp
jmp
jne
or
mov
pop
mov
mov
stos
xchg
repnz
inc
mov
cld
xchg
faddl
arpl
and
jle
sub
nop
imul
mov
mov
lods
sbb
std
ja
xchg
std
jp
dec
pop
pushf
in
xchg
inc
sbb
add
out
mov
sub
sub
dec
or
clc
mov
cmp
push
lahf
and
push
filds
pushf
pusha
repnz
das
xor
pop
or
nop
addb
push
jecxz
add
aad
cwtl
xor
insb
les
outsl
push
mov
and
inc
aam
xor
sbb
es
jmp
cmp
cld
fs
mov
clc
out
roll
ja
adcb
inc
xchg
adc
adc
inc
jecxz
add
xor
push
sub
push
jbe
pop
mov
mov
roll
mov
imul
nopl
pusha
cmp
push
ss
lret
sahf
push
or
stos
das
mov
ffreep
imul
rorl
cli
ss
jl
stos
mov
or
imul
icebp
push
adc
push
mov
and
xor
dec
pop
das
mov
xor
sbb
cmpsl
test
xor
or
lahf
mov
jp
ret
and
lock
adc
call
sub
sbb
outsb
lcall
inc
push
mov
out
pop
nop
push
push
pop
mov
jbe
into
pop
adc
and
fxam
rorl
add
imul
mov
repnz
sbb
jl
add
dec
sub
sahf
mov
xchg
outsb
fildll
lcall
mov
rclb
into
sub
push
lcall
dec
jbe
out
jecxz
imul
cld
movsl
mov
cld
jl
stos
aam
pop
or
mov
cld
clc
pop
mov
ja
xor
mov
pusha
sahf
push
mov
loopne
lock
scas
js
or
inc
into
add
icebp
shrb
xchg
jb
test
lret
aad
and
decb
push
dec
xchg
or
mov
popa
jl
cmp
stc
add
jne
sub
sbb
jne
push
sbb
mov
setl
subb
das
xchg
sub
sar
mov
or
mov
cmpsb
inc
mov
mov
lods
adc
sbb
in
add
jns
loop
cwtl
dec
scas
jmp
pop
cli
inc
inc
cmp
rcrb
jg
pop
pop
push
and
insl
negb
jg
mov
enter
dec
jg
sbb
jb
scas
shl
mov
or
enter
dec
leave
sub
mov
jg
pop
xchg
mov
pop
jg
jbe
ja
ret
lahf
test
das
push
ss
idivl
inc
notl
std
pop
or
mov
dec
cs
fcoml
pop
pop
mov
imul
lods
cltd
aas
or
adc
dec
frstor
sub
aad
push
jl
fdivs
lcall
xor
rclb
cld
shrb
pop
xlat
push
push
sbb
and
movsl
std
movl
mov
lahf
mov
out
xor
imull
mov
test
fcmovu
lods
cmp
insb
xor
lcall
adc
and
cmpsb
fdivrl
js
sbb
stos
outsb
aad
inc
cld
or
jecxz
jge
insb
outsb
outsl
push
ficoml
enter
leave
mov
inc
inc
outsl
lea
ss
add
cmp
test
inc
lods
mov
test
fmuls
xor
jne
shrb
out
stos
adc
test
lret
int
add
jnp
sub
fnstsw
xor
mov
inc
imul
nop
mov
fdiv
xchg
pop
pop
and
inc
inc
push
dec
dec
nop
mov
sub
jg
pop
pushl
or
pop
sbb
std
push
and
and
aas
push
aad
xchg
xchg
jns
mov
subb
arpl
push
inc
cmp
mov
and
push
dec
int3
sub
jae
call
jns
inc
cwtl
mov
mov
pop
sub
and
mov
popf
jne
repnz
call
push
xor
icebp
ljmp
or
in
inc
gs
push
pop
mov
xor
pop
mov
pusha
lods
mov
and
daa
cwtl
pushf
sub
mov
roll
adc
enter
icebp
pop
sbb
xlat
fistps
cwtl
pop
add
sbb
sub
loopne
in
lock
xchg
or
jle
dec
adc
dec
mulb
es
inc
xchg
inc
pop
fadds
push
mov
leave
out
std
stos
subl
pusha
movsl
insb
adc
pop
pop
dec
mov
push
pop
ret
push
cld
jnp
and
and
jg
push
aas
xchg
xchg
scas
adc
mov
ja
lods
jae
fnsave
jo
sbb
jno
jo
push
push
jno
rcll
add
hlt
testb
ret
les
add
fnstcw
sub
mov
fwait
jmp
sub
sbb
inc
push
stos
stos
inc
mov
pop
aam
xor
mov
ret
inc
iret
in
mov
push
jo
sbb
add
inc
lret
mov
dec
out
pushf
roll
pop
bound
sahf
or
or
sahf
decl
out
add
ja
ret
hlt
jp
dec
add
cltd
xlat
mov
es
mov
and
aas
js
push
rcrl
cmp
adc
je
pop
je
mov
xchg
sahf
lods
push
out
in
add
adc
repz
adc
loop
sub
in
loope,pt
adc
rorl
mov
imul
fidivl
dec
mov
hlt
sbb
push
xchg
insb
mov
cltd
out
ffree
loop
push
jnp
push
loop
or
inc
subl
inc
cmp
test
arpl
mov
xchg
xor
or
mov
pop
and
enter
sub
sbb
or
test
js
inc
enter
dec
add
test
out
xchg
imul
pop
push
int
and
cmp
mov
sub
adc
in
daa
fwait
aam
cmpsb
xchg
jbe
and
shll
loop
jns
ss
loop
and
dec
push
fistpl
jle
mov
mov
cmp
in
or
imul
std
pop
pop
test
push
insl
jbe
mov
jl
lret
iret
jne
insl
cmp
cmp
dec
mov
or
lods
into
sub
push
call
sbb
mov
jecxz
addr16
jge
mov
xlat
push
jg
nop
stos
pop
xor
jg
mov
rolb
aad
popf
call
push
sub
add
pusha
lcall
aad
cmpsb
scas
arpl
push
stos
negb
aas
jne
push
jae
in
je
cmp
push
add
icebp
cmova
scas
mov
fisttps
mov
inc
nop
shlb
mov
sbb
push
test
pop
jmp
cmpb
gs
mov
add
fwait
stos
push
rclb
mov
cmp
insl
push
fisubl
sub
aas
rolb
jle
mov
aaa
or
push
pop
sahf
add
test
mov
in
pop
jbe
mov
insb
mov
jmp
mov
inc
mov
lcall
jg
lea
js
dec
or
jo
add
and
xor
mov
fistl
adc
or
lods
push
lods
lock
mov
mov
dec
sub
add
mov
sbb
fcoms
out
aad
adc
test
mov
out
sub
cmp
xchg
iret
add
or
cli
nop
mov
loop
mov
mov
loope
popf
dec
push
add
dec
das
cmp
fdivs
mov
push
nop
mov
call
in
pusha
aad
pop
out
ljmp
outsb
test
rcll
jns
imul
pop
mov
stos
lcall
sub
xor
mov
call
mov
jb
aas
stc
and
fcom
dec
and
xlat
sbb
cmp
jmp
fdivp
ljmp
mov
lods
jo
in
rol
out
aas
inc
stos
sub
dec
or
divb
add
xor
xor
pop
repnz
fistpl
stos
popa
test
dec
sub
aad
ds
aas
cmp
adc
dec
cmp
cmp
mov
xor
push
dec
imul
jp
enter
mov
lret
push
xor
jl
stos
jmp
int3
mov
lcall
sbb
dec
shrl
pop
add
or
mov
stc
loop
sub
adc
xchg
js
and
and
lods
mov
jge
fistps
testb
jne
lahf
sahf
std
aaa
rorl
repz
inc
iret
inc
int3
test
inc
and
movsl
imul
and
lock
push
mov
xchg
and
sub
lods
inc
xchg
das
in
and
push
lock
cmp
inc
pop
mov
lahf
adc
cld
add
adc
je
xlat
ret
iret
dec
fadds
xlat
mov
adc
cmpsl
popa
ret
into
push
ret
dec
inc
inc
imul
loop
push
inc
jge
mov
pextrw
or
mov
jp
into
scas
aas
shrb
mov
lods
bound
iret
sub
push
inc
nop
int
dec
in
cmp
rorl
dec
das
xor
push
and
ror
pusha
jmp
and
push
and
hlt
add
std
push
js
push
sbb
cmp
hlt
adc
aaa
inc
rclb
neg
inc
xor
ds
fsubl
lret
out
sub
sub
cli
jp
ds
push
into
lret
repnz
std
movsb
mov
subl
negl
adc
ljmp
mov
movsb
push
and
pop
mov
nop
pop
jo
xor
xor
ljmp
jne
mov
jns
cmp
sbb
jp
or
pop
xor
ret
leave
and
and
jb
jp
push
cli
pop
jae
leave
lcall
shll
inc
adc
sti
in
inc
inc
and
xchg
jl
addb
jecxz
je
stos
in
inc
or
lret
cmp
dec
out
std
xchg
mov
mov
lds
jge
sub
outsb
cmp
repz
jg
ret
mov
dec
rcrb
jge
inc
sbb
push
dec
daa
ds
mov
sbb
fistl
add
cltd
stos
outsb
bound
push
imul
jnp
xor
add
adc
out
insb
jle
inc
push
mov
cmc
xor
and
loopne
out
fdivl
ds
xor
ss
pop
push
add
js
lcall
icebp
jno
mov
fs
adc
int
mull
xor
cmp
fadds
mov
test
je
inc
add
pop
icebp
mov
xor
mov
cmp
push
add
cmp
cmp
cwtl
pop
cmp
mov
pop
sbb
dec
in
aas
sub
cmp
inc
mov
test
mov
inc
mov
js
jge
frstor
repz
test
in
fcompl
mov
add
cmp
jae
shl
cmp
clc
push
jb
lcall
cltd
lret
out
jae
into
xor
dec
stc
or
mov
add
ret
sub
daa
mov
sub
rorl
mov
cmpsb
mov
out
jmp
pop
pushf
stc
movsl
or
in
mov
out
or
inc
cmpl
testb
mov
xor
int
in
sbb
push
imul
xor
mov
test
call
ja
leave
push
call
roll
sub
jnp
inc
sub
inc
jp
ja
fiaddl
xchg
std
mov
inc
out
test
int
inc
repz
xchg
and
xchg
pop
iret
pop
jp
in
adc
xor
es
fidivs
jae
xchg
cli
pop
sub
sahf
fstps
bound
jmp
repz
fmuls
in
ja
xchg
push
fwait
jb
pop
push
orb
addl
lods
test
inc
mov
div
mov
cmp
iret
scas
push
test
testl
or
adc
mov
push
ds
aaa
jne
iret
jge
push
adc
inc
sub
dec
push
cmp
fcmovnbe
mov
imul
push
cmpsl
decl
adc
sbb
fucomp
into
pop
cwtl
ret
push
das
test
and
das
int
int3
adcb
popa
jns
sub
in
out
shrb
dec
popa
fwait
pop
fldcw
cwtl
adc
data16
andl
repnz
cmp
icebp
daa
das
fidivs
cmp
pushf
fidivrl
js
jge
repz
es
stos
out
push
ds
cmp
or
jo
lea
or
pusha
adc
mov
rcll
shl
mov
push
mov
mov
ror
ss
inc
ret
loope
mov
push
adc
jae
push
inc
add
lea
repz
mov
movsl
add
xor
stc
sub
mov
in
adc
push
mov
dec
je
sarb
pop
mov
lock
xor
mov
loop
nop
or
les
fwait
jge
pop
sub
lods
iret
in
sub
pop
dec
pushf
jbe
sub
lock
xchg
ret
aam
push
sbb
lds
add
pop
repz
daa
jne
jecxz
mov
gs
sbb
push
sub
out
sbb
jo
or
in
cmpsb
push
cmc
dec
arpl
clc
in
dec
xchg
in
into
ret
mulb
sbb
inc
loopne
call
pop
sub
out
mov
cmpsl
pop
fsts
xchg
out
js
push
or
sahf
xor
lods
jno
jmp
jae
pop
rol
xchg
cwtl
js
xchg
jmp
icebp
add
mov
push
cmp
test
push
mov
ror
lods
or
dec
sub
lock
pop
lahf
test
mov
dec
fcoml
repnz
jno
adc
ja
add
test
imul
pop
sbb
int3
mov
or
pop
jl
data16
jl
mov
mov
in
sub
outsl
test
idivb
inc
testl
sbb
fldenv
inc
mov
xchg
xchg
cmp
lret
arpl
add
cmp
dec
jl
ret
push
xor
out
lods
cmp
test
add
dec
imul
hlt
fcomip
inc
xchg
shlb
jmp
dec
clc
mov
into
lock
lods
mov
lcall
add
add
cmpsl
test
inc
lret
addl
cmc
lcall
cld
xor
icebp
pop
inc
push
jecxz
stos
xchg
inc
push
fdivrs
lret
popf
testl
and
and
xlat
dec
rcl
mov
sbb
mov
xor
add
jbe
xor
or
sbb
cmp
mov
adc
dec
mov
pop
xchg
pop
aad
sub
clc
xor
mov
lods
add
rorb
lods
jne
jl
mov
and
cltd
sub
mov
mov
mov
push
and
enter
int3
sarl
sub
pop
in
adc
sbb
adc
ficoml
and
aam
scas
aaa
adc
test
lock
dec
ja
popa
repz
rcl
lds
test
lret
test
outsl
adc
pop
mov
int
adc
fldenv
shll
xchg
cltd
and
sbbb
inc
in
adc
cmp
mov
push
aad
loope
fistpl
fsubrs
das
or
lods
dec
jno
xchg
pop
addr16
shlb
insb
clc
insl
jl
pop
pop
jecxz
add
addr16
sbb
mov
sbb
push
xlat
sbb
add
jecxz
adc
fs
addr16
mov
mov
push
movsb
mov
mov
adc
in
dec
cmp
data16
and
or
call
add
test
dec
cmp
js
mov
push
sub
mov
cwtl
out
mov
xor
mov
fs
fdivl
ret
hlt
lcall
inc
into
aas
sub
cld
divb
adc
cli
mov
mov
stos
jae
mov
in
fisttpll
insb
mov
dec
ljmp
mov
lods
inc
jge
stc
fs
jl
vpshlw
mov
leave
std
pop
jle
xchg
and
mov
int
jbe
fsub
ja
xchg
xchg
daa
test
int3
fcmovnu
mov
or
xchg
or
mov
jmp
out
loopne
int
cltd
loop
and
mov
jne
repz
js
cmpsl
andl
sbb
insl
sbbl
mov
xor
mov
daa
mov
mov
sub
xor
int
cmp
inc
in
jecxz
lret
inc
mov
btr
fisubrs
lret
mov
pop
addr16
cld
fs
imul
movsb
stos
fmuls
add
je
stos
hlt
sub
scas
mov
sub
shrb
ss
out
lahf
iret
lods
sub
inc
cmp
inc
inc
push
inc
jecxz
mov
leave
js
push
sbb
mov
xchg
loopne
inc
jl
sti
xchg
int3
add
je
push
stc
push
dec
mov
clc
adc
cmpsb
add
sub
js
xchg
clc
sbb
ds
mov
sahf
fwait
inc
dec
inc
sub
nop
sbb
xchg
and
movsb
test
mov
jecxz
pop
push
inc
jb
cwtl
push
or
cmp
cmp
xchg
andl
test
les
sbb
je
fwait
leave
cmp
adc
and
loopne
nop
cmp
pop
ja
fs
ret
or
jge
and
sub
testb
aaa
sub
dec
shl
iret
pop
imul
lods
in
xchg
mov
xor
ljmp
fwait
ret
sbb
sbb
push
jge
mov
js
and
fcmovnu
and
add
mov
mov
std
loop
mov
jmp
sub
jns
xor
or
ja
push
rorb
ds
in
out
push
pop
in
mov
rcll
insb
pop
icebp
fbstp
mov
hlt
xor
xchg
fsubrp
movsl
dec
fwait
jns
leave
and
push
pop
in
js
dec
adc
cwtl
and
xchg
fnstsw
stos
pushf
xchg
mov
and
mov
lock
push
mov
mov
cmc
or
loope
xchg
mov
aam
out
bound
dec
inc
mov
into
punpckldq
xchg
jo
sahf
mov
sti
and
sbb
sti
jae
leave
sub
cld
in
test
and
int3
mov
jno
push
test
imull
fidivl
stos
adc
std
jo
push
outsl
aam
and
mov
aas
inc
enter
jne
dec
pop
or
and
xchg
push
fisubrl
in
mov
enter
rcrl
pop
test
ret
pop
mov
sbb
jg
gs
mov
mov
std
pop
out
sbb
or
insl
or
jno
popa
dec
or
inc
daa
push
pop
sarb
je
test
lahf
xchg
ss
and
aad
dec
cmpsl
xor
daa
rclb
push
and
inc
aaa
push
cmp
jge
add
sbb
popa
jno
sahf
adc
mov
in
sarb
jg
ret
mov
rolb
ret
inc
cmpsl
ret
mov
pop
scas
add
sarb
clc
inc
dec
fmull
imul
jp
fs
int3
dec
dec
aam
pop
pop
aas
xor
push
push
mov
in
mov
dec
jl
jle
outsb
cltd
jnp,pn
cmc
mov
and
xchg
mov
leave
adcb
xchg
inc
ja
orl
cs
mov
cmpsb
jge
outsl
mov
jno
or
xchg
sbb
push
pop
ret
sbb
mov
les
pop
test
or
cmc
aaa
imul
push
push
mov
leave
mov
daa
push
cmp
test
mov
daa
outsb
ffree
sub
sub
stos
sti
mov
push
xchg
or
sbb
xchg
lods
imul
inc
pop
inc
aam
or
cmp
mov
xchg
mov
pop
xchg
sub
popf
sti
mov
js
lret
xchg
xor
xor
imul
mov
inc
popf
xor
dec
testl
mov
iret
add
and
push
pop
push
pop
xchg
in
inc
xchg
mov
xchg
cmpsl
mov
or
les
and
sti
xchg
fdivrl
test
hlt
nop
int
in
push
mov
add
mov
inc
fcom
repnz
adc
gs
add
inc
stos
fadds
and
dec
inc
jbe
cmp
movl
or
out
xchg
mov
mov
inc
pop
stc
stos
add
loope
push
xor
out
sub
sahf
cwtl
xchg
or
mov
or
and
jne
sbb
xchg
mov
mov
lods
xchg
sar
dec
mov
dec
sahf
std
jae
int3
enter
lods
jg
push
sti
cmp
fistpl
cs
aaa
std
pop
ljmp
hlt
roll
mov
inc
pop
mov
out
adc
add
mov
in
push
rclb
popa
mov
mov
or
repz
mov
adc
pop
addr16
jnp
xchg
mov
add
mov
scas
cwtl
mov
aas
mov
xchg
aaa
add
mov
push
insl
fwait
cmp
loope
repnz
jg
imul
pop
and
repnz
out
jl
mov
subb
clc
dec
mov
dec
or
sbb
pop
sahf
insl
mov
or
rclb
fnstsw
or
cs
pinsrw
xor
inc
sub
xchg
rorb
repnz
cmp
inc
pop
into
adc
std
movsb
cs
mov
test
sbb
mov
mov
cwtl
pop
add
in
fsubr
arpl
push
je
xor
sub
in
sub
aas
jb
and
sbb
dec
or
or
aas
loop
push
fisubrs
push
mov
add
or
and
es
mov
repnz
iret
add
stc
aad
pop
lds
add
loop
or
jnp
mov
pop
scas
inc
mov
dec
outsl
outsl
ja
movsb
or
and
jp
lea
inc
cld
pop
and
push
popf
pop
mov
mov
and
xor
cwtl
xor
mov
inc
test
mov
push
inc
shlb
adc
inc
xchg
push
or
xor
pop
inc
sbb
cmpsb
jmp
iret
xchg
xchg
pop
fadd
fisttps
sbb
negb
jge
xchg
push
fdivl
lock
adc
bound
push
icebp
add
cmovl
add
sbb
xchg
movsl
lret
xchg
lret
out
nop
xchg
in
mov
jnp
sbb
xchg
mov
cmp
lods
and
idivb
in
mov
cli
and
outsb
dec
outsb
ljmp
insl
pop
xor
dec
mov
scas
and
and
cmc
mov
repz
jnp
mov
jl
add
sbb
mov
mov
dec
jnp
mov
push
cmpsl
or
flds
aas
sbbl
cltd
std
cmpsb
lahf
dec
or
mov
imul
or
ljmp
shlb
push
lods
fldt
sbb
dec
push
loop
mov
push
shlb
adc
rcrl
and
int
call
mov
icebp
ss
imull
dec
ret
xor
addr16
call
inc
out
popf
test
inc
sbb
addb
cwtl
ret
and
ror
cld
adc
mov
inc
xor
enter
cwtl
int
mov
sub
mov
xor
jmp
outsb
mov
nop
jo
jmp
jo
ss
data16
or
out
add
movsl
ret
push
xchg
mov
ss
mov
inc
shlb
jl
inc
cmp
mul
movsl
add
rol
xchg
loopne
test
dec
mov
bound
jb
out
inc
and
inc
loopne
shl
dec
cmc
arpl
bound
xchg
xor
int
mov
mov
popa
mov
xchg
divb
xchg
sbb
mov
sbb
cmpsl
mov
dec
sbb
push
or
data16
push
ljmp
pop
dec
inc
adc
cmp
sub
in
pop
insb
xor
jl
imul
test
std
mov
call
in
dec
jle
lahf
adc
push
jns
cmp
adc
popa
jmp
inc
add
push
fsub
pop
adcb
push
xor
adc
sbb
mov
lods
mov
push
mov
adc
lahf
and
pop
mov
unpcklps
fsubr
jg
pushf
dec
jne
bound
pop
pop
sti
cmp
clc
iret
and
movaps
stos
aaa
jno
sbb
jle
sub
mov
orb
dec
push
lea
ds
add
pop
dec
push
mov
inc
or
out
stos
enter
fldenv
jl
dec
jno
roll
pushf
imul
xor
test
xchg
movsb
xchg
lret
movsl
dec
nop
shll
xor
sub
adc
js
push
mov
add
inc
shrl
push
push
mov
test
jl
lds
rcrl
push
push
popw
fs
fs
xchg
pop
decb
add
jo
mov
shl
addr16
push
dec
jno
addr16
dec
pop
sub
mov
in
jo
pop
test
scas
adc
stos
mov
xor
fs
mov
xchg
inc
stos
lods
inc
gs
sbb
jnp
mov
mov
xchg
rcrl
outsb
stos
xor
addr16
sarb
and
add
mov
mov
or
pop
mov
loope,pn
mov
incl
inc
out
lods
fildll
jo
sub
sbb
jl
or
mov
daa
or
ja
and
lahf
mov
movb
repz
test
mov
cltd
aas
jnp
jb
int
in
dec
push
cmc
xor
imul
fbld
or
in
mov
dec
sbb
and
jge
cmp
lret
lock
sbb
jmp
push
rol
jmp
add
mov
push
lret
mov
inc
pop
jg
mov
int3
pop
pop
cmp
mov
test
neg
dec
push
jl
pusha
mov
aam
jnp
repz
test
cltd
loop
in
pop
adc
bound
loope
arpl
add
sub
add
rcrl
and
mov
out
xor
nop
jns
inc
stc
lret
mov
outsb
pop
daa
mov
sub
cmp
cmpsl
xchg
outsl
pop
lret
jle
cli
cmp
push
std
pop
sub
xchg
shl
pushf
cmpsb
xor
loopne
addr16
dec
inc
dec
aam
and
subl
pushf
add
loopne
sbb
cmp
iret
jo
pop
pop
adc
jbe
pop
mov
inc
xchg
inc
mov
mov
jbe
mov
enter
dec
arpl
dec
arpl
dec
test
mov
sub
jnp
xchg
dec
mov
aad
cmp
pop
shll
dec
fstpl
dec
jo
loopne
adc
inc
aas
push
and
push
mov
jmp
pusha
std
js
mov
movsb
lcall
add
dec
pop
sbb
daa
movsl
stos
pop
sub
dec
xchg
shll
lds
mov
or
sbb
scas
in
pop
inc
mov
out
sbb
imul
fs
stos
in
pop
dec
mov
push
sti
orb
rcll
les
int3
sahf
mov
jmp
addr16
mov
push
mov
sbb
leave
inc
popa
xor
enter
xchg
inc
popa
jmp
xchg
popa
cmp
adcb
test
je
cmp
bound
aam
out
mov
jmp
mov
ret
cmp
jge
imul
xor
cmp
dec
push
std
imul
xor
xchg
add
push
in
jo
mov
loopne,pt
xorb
xchg
inc
icebp
negb
inc
lods
mov
push
pop
push
lcall
jo
sbbl
imul
mov
dec
rcrl
scas
rolb
push
stos
es
cmc
jno
popa
sti
or
arpl
lea
sar
xor
pop
xor
pop
mov
xlat
and
add
rcll
aam
mov
xchg
mov
xor
mov
ror
or
rolb
rcrb
pop
sarb
and
lret
enter
fnstsw
aad
push
dec
ret
aad
push
sbb
pusha
mov
xor
stos
jnp
popf
add
push
imul
sbb
mov
mov
movsb
in
shrl
nop
push
mov
mov
sahf
jg
mov
out
stc
pusha
dec
sbb
hlt
mov
daa
xchg
jmp
int
inc
int3
mov
imul
dec
inc
leave
xchg
jb
xchg
jb
sbb
mov
sub
in
lcall
jns
leave
enter
inc
mov
xchg
push
adc
ret
cmpsb
dec
scas
adc
push
pop
and
ljmp
sbb
icebp
insl
cli
dec
lahf
mov
and
mov
pop
adc
test
test
or
les
mov
sub
int
outsb
push
push
sbb
ret
add
popf
in
mov
add
in
inc
pop
mov
push
cmpsb
loop
das
rcll
push
in
jle
and
xor
jge
xchg
fcmovbe
call
pusha
or
mov
imul
mov
sarl
lahf
jmp
popf
mov
jb
jo
js
loop
cmp
test
adc
push
mov
aam
inc
jmp
and
pop
js
cmp
jno
or
or
mov
adc
shlb
push
jg
lcall
mov
push
push
sbb
out
push
fs
test
xchg
iret
adcl
dec
pop
sub
daa
lcall
push
rcrb
or
xlat
pop
ret
lods
xor
mov
call
xchg
or
loopne
dec
repz
push
sbb
leave
and
jno
ljmp
sbb
shll
jne
les
div
push
ljmp
negl
push
push
sbb
jge
mov
fs
xlat
mov
add
xchg
out
xchg
dec
pop
jbe
xchg
shr
cmc
sahf
lcall
aaa
movsb
ljmp
cli
iret
out
mov
arpl
cld
push
int3
in
mov
mov
popa
sarb
dec
sbb
ficoms
imul
adc
dec
push
and
push
pop
lock
jb
pop
rclb
sbb
movsb
cmp
pusha
das
add
mov
outsb
xchg
popf
pop
fisttpl
sub
ret
dec
and
inc
in
shrl
cmc
adc
sub
adc
and
push
mov
push
mov
shl
xor
inc
push
mov
cmp
inc
repnz
push
enter
pop
adc
xchg
add
or
and
pop
push
iret
ret
call
push
mov
popa
xor
into
add
pop
push
daa
sbb
jno
gs
stos
loopne
loop
push
add
push
loop
dec
das
xchg
sbb
outsl
fwait
adc
adc
fistpll
mov
jp
xor
jnp
mov
mov
dec
mov
sti
jbe
aad
jnp
mov
lea
sbbb
sbb
mov
scas
fs
add
push
stos
sbb
test
adc
shl
aas
call
jl
sar
test
mov
sbb
xor
ret
jg
test
aaa
ret
mov
pop
leave
stc
movsl
js
stos
mov
out
sub
fildl
popa
mov
inc
fwait
shr
cmpb
cmp
xchg
sbb
inc
outsl
jecxz
mov
and
mov
sub
das
xor
pop
add
adc
mov
xchg
lods
shll
mov
xchg
mov
jmp
xchg
sub
out
mov
push
icebp
and
cmp
pop
inc
lcall
cmp
out
jne
andb
jp
mov
fidivrs
enter
aas
sbb
es
jle
sbb
enter
and
mov
lret
jns
inc
out
mov
aam
sbb
int3
fistl
out
add
adc
sbb
out
cmp
sub
adc
xor
cmc
mov
scas
jb
mov
sbb
pusha
leave
cltd
xor
stos
rcrb
bound
and
out
roll
lds
mov
sub
xchg
cmpsb
pop
push
jp
xchg
pop
cmpl
leave
cmp
popf
mov
notl
mov
fmul
mov
mov
push
mov
dec
or
dec
testl
ret
mov
mov
rcrb
fwait
stos
jns
dec
repz
cmp
adc
inc
jno
shl
stos
movsb
push
mov
rcr
outsw
push
negb
fisubrl
repnz
xlat
push
addl
iret
mov
test
sbb
pop
mov
xchg
sbb
stos
aam
hlt
inc
test
sbb
sub
int
add
push
jns
test
push
aaa
sbb
push
xchg
mov
add
les
aas
xchg
xor
mov
js
aam
sub
push
invlpg
mov
enter
cmpl
add
cmpsl
jns
or
dec
cltd
pusha
pop
xchg
out
xor
loope
jnp
fsubrs
subb
xchg
jg
push
pop
xchg
add
push
inc
call
mov
out
push
xor
pop
jle
cmp
imul
adc
movsb
out
push
jae
iret
shll
mov
lds
movb
ret
lock
sub
in
int3
xor
mov
xchg
pop
int3
scas
pop
dec
dec
dec
fnsave
mov
repz
lods
stc
nop
ret
push
dec
or
ds
cmp
ret
mov
fcmovnu
jl
cmpb
cmp
bound
cmp
and
fdivrs
mov
or
jne
sub
add
lea
jg
sbb
mov
scas
mov
out
lods
sub
jp
enter
mov
push
in
ss
insl
add
push
gs
call
mov
inc
cmp
lahf
jg
pop
cmpsl
pushf
pop
push
dec
bound
repnz
inc
jno
shrb
out
cmp
mov
or
xchg
add
adc
push
out
push
xchg
lock
mov
fld
int3
push
cs
movsb
xlat
faddl
and
hlt
jns
mull
xchg
push
nop
cltd
insl
jo
test
lret
sub
es
lahf
jb
out
leave
cmp
shr
popf
dec
xor
add
les
mov
jne
push
sub
in
add
xor
jo
adc
repnz
jae
add
inc
xchg
mov
mov
in
fucom
sub
mov
xchg
xchg
mov
push
sbb
inc
xchg
xor
sahf
jb
lods
push
pop
sahf
int
sub
mov
rcrl
xor
add
dec
and
xor
push
mov
inc
push
mov
lea
fwait
and
xchg
insl
adc
popf
inc
cs
mov
stos
xchg
movsl
decl
call
add
mov
divb
inc
popf
sub
dec
das
adc
adc
aad
or
jae
sub
loop
cmp
or
rcl
pushfw
in
mov
dec
and
les
shl
stos
mov
adc
stc
cmp
lcall
cmp
out
inc
leave
sbbl
xchg
lods
inc
and
imul
lcall
lahf
add
lret
jle
xorl
addr16
mov
inc
lcall
add
cmp
add
push
add
or
mov
sub
cmpsl
pop
and
ja
xor
add
int
stos
mov
test
adc
or
lods
sarb
loop
pop
dec
mov
out
sub
negl
or
clc
outsb
adc
xchg
push
ljmp
in
pusha
xor
rolb
jmp
dec
push
inc
jmp
das
fwait
shlb
add
outsl
adc
ja
cmc
ret
jge
push
movsb
js
mov
cltd
mov
mov
in
in
add
inc
dec
bound
jmp
popf
out
popl
dec
mov
sbb
or
ucomiss
pop
fimuls
fstpl
ret
jae
out
xchg
adc
testl
je
sub
fldcw
pop
cmp
xlat
push
insl
pop
ret
inc
pop
call
push
cmpsb
mov
add
test
xchg
and
lock
xlat
insb
shlb
enter
in
sub
lcall
add
sub
xchg
outsl
jmp
test
mov
mov
and
and
mov
pop
clc
sahf
sbb
stc
cmp
lret
test
popf
inc
push
jns
add
pop
enter
ds
les
add
imul
int3
xchg
scas
pop
add
mov
cmpsl
ficomps
scas
pop
fiaddl
stos
call
pop
iret
or
sbb
mov
pop
mov
out
push
stc
popf
scas
dec
jb
or
flds
mov
dec
and
mov
fs
aad
call
jb
xchg
in
into
inc
sub
ja
push
jae
jbe
inc
push
and
pop
and
xor
adc
sub
dec
aad
sbb
inc
sub
and
lea
cmp
xchg
mov
sarl
add
push
sbb
dec
jns
mov
cmp
mov
and
lcall
inc
add
pop
leave
sbb
es
dec
mov
xchg
out
or
rol
outsl
icebp
mov
jnp
jg
dec
pop
enter
repz
sub
je
sti
leave
roll
pop
das
xchg
add
sub
cmpb
ret
xorl
mov
push
iret
bound
pop
data16
add
or
or
arpl
test
outsl
popf
pop
xchg
add
dec
xor
sbb
mov
xchg
mov
cmpsb
je
mov
inc
xchg
jnp
loop
test
pop
sub
sub
hlt
add
pop
cld
rcl
popf
outsl
cmpsl
insl
imul
jnp
inc
shll
inc
mov
push
cmp
int3
push
mov
aas
mov
aaa
stos
testb
test
out
sbb
cmpsl
xlat
negb
pushf
pop
scas
stc
rolb
and
xchg
jmp
stos
ja
sbb
mov
jno
insb
dec
out
outsl
aas
ret
and
or
mov
xor
xchg
xchg
leave
push
loope
sub
sahf
sbb
jmp
and
mov
jne,pt
sbb
nop
push
int
mov
loop
sub
and
pop
shll
add
cmp
in
add
push
je
les
je
adc
fdivrl
sub
xor
adc
xchg
fsubrs
xchg
stos
sbb
ror
faddl
cli
lea
cmpsb
movsl
inc
xchg
rcl
jno
nop
fisubs
jns
mov
mov
xor
cld
ss
psubw
adc
shrb
mov
cmp
push
addr16
xchg
and
enter
push
ja
data16
mov
sti
es
jmp
mov
fwait
dec
mov
inc
in
loop,pn
int3
scas
jne
cltd
mov
ja
std
testb
lret
jmp
pop
jbe
clc
push
inc
incb
stos
lock
add
pop
push
popa
push
arpl
arpl
aaa
out
dec
add
mov
sti
mov
out
outsl
ja
cmp
mov
adc
pop
movsb
insb
ljmp
adc
int
inc
pop
mov
mov
fst
in
movsb
div
push
in
outsb
sub
sbb
sub
lahf
mov
fstpt
pop
clc
xchg
push
les
add
xchg
rorl
adc
addr16
push
test
cmp
inc
sub
xlat
fistpl
mov
push
in
xchg
push
cmp
in
and
clc
sub
adc
aaa
fs
sub
cmp
hlt
pusha
outsb
jne
cmovo
xor
lods
ja
push
inc
cs
addr16
push
daa
ss
test
xchg
cmp
mov
add
cs
xor
jbe
out
gs
sti
mov
inc
jbe
fldl
mov
imull
jo
enter
lea
je
inc
mov
in
mov
mov
xchg
jmp
popa
pop
mov
mov
adc
loop
movsb
xchg
jbe
rcrb
arpl
pop
lods
mov
add
adc
insl
jmp
and
test
mov
push
or
daa
imul
jle
ds
fs
adc
xor
mov
add
dec
sbb
inc
cmp
stos
fdivrs
and
push
in
add
dec
clc
xorl
pushf
or
cltd
pop
outsb
dec
xor
mov
aaa
add
or
xchg
push
jb
cmp
out
ja
fsubrp
imul
xchg
mov
xchg
das
je
adc
rcll
or
xchg
outsl
nop
std
xchg
icebp
cmp
push
inc
lods
loopne
add
sub
outsl
pop
mov
or
stos
xor
lahf
xor
aam
lret
adc
adc
sub
clc
fidivrs
subb
scas
xor
inc
mov
ds
in
xchg
testl
sbb
ror
mov
int3
repz
mov
fidivrl
popf
popa
xor
ds
dec
rorl
ffree
mov
mull
popf
sub
lods
or
jae
fsts
cld
div
or
jb
bound
stc
outsl
xchg
stos
or
push
or
xor
mov
das
adc
fidivs
sub
loope
pop
clc
daa
out
push
xor
or
or
cmp
or
mov
jne
jb
icebp
or
push
sbb
fst
sub
xlat
stos
xchg
mov
xor
or
cmp
jae
nop
ret
in
hlt
scas
push
push
or
xchg
cmp
xor
sub
pop
in
out
mov
mov
mov
lods
out
lock
inc
in
rclb
add
aas
out
out
inc
aad
xor
pop
inc
push
scas
or
cltd
xlat
lahf
jno
mov
mov
jb,pn
push
fistpl
adc
lahf
cwtl
xor
mov
fs
aad
sbb
xor
mov
add
imul
or
fcomps
mov
int3
ret
inc
cmp
xchg
ret
scas
adc
ds
aam
xchg
or
and
divb
pop
inc
cltd
pushf
fucom
mov
pop
pop
pop
enter
loopne
sub
gs
cld
lcall
xor
dec
cmp
iret
fists
movsb
xlat
dec
or
dec
mov
dec
pop
movsb
je
push
adc
mov
sbb
sahf
call
dec
adc
mul
xor
cmp
repnz
mov
jbe
dec
jg
mov
inc
adc
arpl
adc
inc
xor
adc
shll
jbe
js
lcall
jnp
hlt
or
adc
lds
inc
out
movsl
or
and
jecxz
bound
pop
movsl
out
xchg
xor
jge
or
cmp
roll
fstl
mov
jae
loope
sub
outsb
xchg
iret
sbb
push
mov
push
push
hlt
and
jmp
xchg
rolb
mov
out
call
mov
fiadds
lds
lahf
das
dec
cld
push
add
sbb
cmc
xchg
fmuls
or
xchg
adc
nop
hlt
xor
addb
fistl
dec
pop
insl
bound
subb
hlt
iret
mov
fwait
orl
jns
ret
ljmp
int
sub
into
cs
les
outsl
outsl
jns
jbe
hlt
popf
jle
fs
icebp
jo
bound
or
int
push
push
cmp
sub
pop
lcall
daa
fidivs
hlt
out
popf
sub
mov
mov
jg
adc
xchg
xor
or
mov
pop
inc
xchg
or
addr16
loopne
xchg
and
cs
lds
pop
inc
adc
pop
xor
insl
xchg
cmc
hlt
imul
or
je
subl
icebp
in
fwait
cmp
cmp
xor
add
scas
or
and
test
push
scas
mov
iret
mov
cmp
shlb
mov
test
imul
push
test
das
mov
inc
inc
ss
std
push
cmp
jnp
rcr
or
fwait
add
cmp
jmp
loop
mov
xchg
inc
sub
mov
mov
xchg
cmpsl
mov
test
and
pop
dec
xchg
jg
ret
xlat
sbb
push
add
cwtl
jecxz
adc
push
clc
movsl
movsl
jl
pop
mov
jae
jl
pusha
int
mov
xor
inc
push
xchg
xchg
pop
pop
fdivrs
out
out
jl
sub
add
pop
jae
mov
repz
iret
add
push
imul
inc
out
fidivrl
rcll
mov
pop
pushf
jnp
rolb
mov
call
jno
cmp
jle
adc
call
or
dec
pop
imul
fisttpll
ss
loope
test
es
or
data16
mov
adc
int
aaa
rcpps
jg
pop
sarb
in
fistl
pop
shll
jle
xchg
mov
mov
sbb
pop
mov
mov
sub
movsb
mov
js
inc
fwait
add
out
insl
sti
jecxz
sahf
push
test
and
sub
inc
xchg
rcll
mov
xchg
imul
fimull
pushf
and
mov
dec
xor
test
mov
and
push
in
push
fiaddl
cmp
shl
scas
fdivr
sbb
push
dec
dec
jnp
dec
adc
xchg
lods
movsl
mov
sti
stos
and
ret
push
sub
mov
insb
or
jbe
nop
ja
icebp
pop
out
mov
loope
ja
mov
mov
jp
push
pushf
ljmp
inc
repnz
pop
jo
mov
sub
fucomip
dec
enter
push
cli
mov
xchg
scas
lcall
add
ret
mov
in
bound
push
decl
cli
xchg
mov
movsb
movsl
das
push
std
scas
mov
push
fisttps
test
sub
and
mov
lcall
or
pop
lret
adc
mov
xchg
push
shlb
gs
repnz
or
aad
adc
lcall
in
xchg
daa
insl
fsts
stos
inc
into
in
movsl
xchg
js
mov
lods
jg
jae
aaa
jge
and
mov
pop
das
push
push
jne
or
and
test
outsl
cmp
daa
dec
dec
inc
sbb
test
push
mov
xchg
or
sarb
call
xlat
ljmp
mov
mov
incl
sub
push
lds
adc
cld
adc
xchg
jle
into
stc
push
jae
loopne
mov
arpl
xchg
adc
inc
or
sbb
rclb
lahf
add
mov
fisttps
sub
xor
inc
xchg
cld
fninit
and
pop
jbe
cltd
add
icebp
adc
jecxz
cmpsb
and
movsl
add
mov
clc
stos
cmp
call
packuswb
dec
push
and
fildll
int
fldt
sub
ljmp
pushf
mov
push
adc
cmp
addr16
and
aas
jnp
ds
in
jge
pop
les
aam
aad
mov
jo
daa
roll
lods
push
scas
dec
leave
adc
inc
sti
mov
cmp
xchg
clc
lret
mov
lret
xchg
repnz
adc
sahf
cmp
ljmp
mov
out
xor
adc
insl
lds
das
xorb
jp
inc
sbb
dec
sbb
xor
inc
mov
fists
mov
data16
outsb
fdivr
add
into
shlb
push
popa
jnp
add
nop
cmp
mov
int
ds
or
and
js
mov
fsubs
and
in
pusha
xor
out
and
bound
rclb
hlt
and
out
outsl
insb
fcmove
dec
addr16
mov
addb
call
mov
icebp
std
rorl
aad
cmp
push
inc
loopne
lods
out
movsb
mov
cwtl
xchg
jle
xlat
pop
popf
xor
pop
jg
clc
mov
xchg
pop
stos
sub
push
nop
lahf
filds
lahf
add
pusha
inc
mov
inc
hlt
jle
aad
movsb
sub
jecxz
push
add
adc
add
stc
dec
adc
mov
out
in
fbld
cltd
jg
dec
lahf
push
push
mul
mov
xchg
je
addr16
mov
push
mov
in
test
xlat
jmp
inc
cli
cmp
inc
nop
sti
or
dec
fldcw
push
rolb
lahf
cmc
mov
aas
inc
scas
iret
and
shrb
lods
pop
out
mov
dec
sub
or
rorl
arpl
xchg
vpaddb
int3
jl
pop
rolb
xchg
test
sahf
sub
stos
test
sbb
sbb
inc
mov
or
addl
jmp
pusha
inc
lcall
inc
mov
inc
fisttps
clc
sbb
xor
mov
jecxz
std
popa
lret
enter
add
sahf
iret
adc
lods
fdivrs
mov
jns
je
fldenv
out
push
jp
add
testb
xlat
jae
mov
fs
stc
inc
pushl
xchg
sbb
mov
out
inc
push
adc
adc
and
subl
lock
xchg
sub
insb
nop
repz
and
mov
mov
jae
mov
inc
in
test
int
push
add
push
lods
insb
incb
mov
scas
adc
and
mov
in
xor
mov
sarl
insl
hlt
or
xlat
mov
mov
mov
ljmp
cmc
inc
add
jns
inc
pop
aaa
inc
xchg
repnz
xor
push
mov
out
cld
xor
add
test
adc
fcmovnu
jle
cltd
cmc
movsb
mov
dec
inc
pusha
stos
pushf
sub
notl
dec
and
push
sahf
movsb
xor
call
lret
es
cld
leave
aam
fistps
cmpsl
std
cmp
jp
jo
call
cmp
mov
mov
or
dec
add
sbb
lret
mov
adc
loopne
loopne
sbb
jg
cmc
xchg
fs
call
dec
adc
imul
or
mov
jae
sbb
das
fistps
mov
sbbb
and
push
hlt
iret
adc
cmp
push
divl
gs
in
mov
addb
mov
xor
and
je
pop
shll
add
or
pop
lock
jge
ret
or
ja
dec
enter
fwait
jl
loopne
mov
ss
fwait
push
push
cmp
addb
loope
adc
add
addr16
dec
or
es
setns
fsubrp
pop
jecxz
mov
repz
jl
mov
push
mov
push
dec
push
fsub
xlat
fiaddl
out
test
and
gs
fiadds
and
fstcw
push
lds
out
dec
push
lcall
sbb
lock
fwait
stc
push
into
xorb
and
or
divl
xor
xchg
sbb
sarb
add
push
dec
and
and
rcrb
sub
in
orl
add
out
pop
lret
push
fcomps
in
mov
jne
aaa
std
push
into
push
pushf
bound
sti
push
repz
push
jmp
stos
shrb
repnz
lea
add
clc
and
cmp
rcll
adc
ljmp
sbb
jne
rcl
jl
sub
mulb
dec
lcall
and
das
xor
adc
rcr
adc
negl
lea
arpl
mov
ss
dec
aas
xor
xor
mov
mov
inc
call
xor
int
xor
push
mov
mov
out
add
nop
mov
jbe
das
sbb
push
mov
mov
mov
xor
add
pop
jmp
pop
shlb
jbe
and
cmp
add
jb
test
adc
sti
lahf
rolb
outsl
dec
sub
bound
insl
clts
inc
nop
lahf
into
xchg
sti
sbb
test
mov
repz
clc
or
xorl
loop
mov
test
cmpl
std
jae
or
leave
leave
out
mov
adc
les
push
ja
cmc
xor
inc
and
pop
jbe
das
js
xlat
push
inc
xlat
cltd
push
dec
test
add
and
mov
mov
pop
xchg
pop
push
into
sub
jno
xchg
jb
fmull
inc
or
int3
shrl
mov
sub
sbb
pushf
movsb
mov
out
ds
inc
add
pop
outsb
sti
and
sti
lods
ds
jnp
aam
sub
in
dec
jge
stos
iret
push
pop
push
mov
dec
jb
loop
xor
mov
stc
call
stos
add
test
mov
int3
mov
inc
adc
mov
mov
sub
push
negl
int
xchg
push
pushl
iret
ja
pop
orl
ljmp
adc
xor
or
jo
and
lods
add
sub
or
jno
cld
mov
mov
adc
insl
out
cld
pop
jp
push
dec
lock
xlat
shl
push
dec
adc
movsl
and
jmp
add
jb
cli
cmp
sub
flds
ret
add
cltd
jg
aam
outsb
mov
adc
shll
pop
push
stc
dec
sub
ljmp
xor
sub
mov
pop
lret
shlb
xor
cmc
add
pop
inc
mov
es
out
push
arpl
lret
lahf
dec
aaa
or
inc
std
daa
fidivrl
push
stc
adc
mov
and
testb
mov
addr16
mov
pushl
mov
xchg
imul
lret
ret
out
cmp
pop
int
jecxz
dec
mov
mov
stc
mov
ret
and
test
push
dec
out
jb
aaa
into
pop
jb
sar
testl
mov
add
mov
fstpt
out
push
dec
bound
in
pop
pop
mov
lods
stos
lret
cmp
lock
push
andl
adc
outsl
iret
xor
add
or
shrb
xchg
or
mov
ljmp
and
out
or
in
push
fidivrs
and
mov
imul
pop
inc
outsb
jge
hlt
les
xor
cwtl
repz
aaa
bound
mov
inc
decl
popf
rcrl
push
int
mov
inc
pop
mulb
xchg
lret
sahf
adc
push
xlat
aaa
mov
lahf
rorl
stos
cli
cmp
ss
mov
xor
outsl
lcall
xchg
into
push
or
jmp
xchg
shll
inc
out
js
aam
sub
mov
sahf
repnz
mov
add
clc
xchg
loop
inc
aad
pop
imul
sbb
or
mov
iret
pop
popf
iret
mov
bnd
ret
repz
mov
mov
nop
fidivl
pushl
cld
imul
shrl
mov
adc
sub
jbe
lods
jp
xchg
fsubs
cs
hlt
cmp
and
or
test
lods
jo
dec
pop
aas
int3
ret
movsl
mov
pop
out
sub
test
pop
xchg
cmp
add
mov
std
sub
or
lret
mull
lds
pop
call
and
xor
insl
pop
aaa
popa
in
inc
cmp
lock
mov
sbb
clc
add
push
test
into
inc
mov
xchg
stos
mov
or
inc
push
fildll
xor
fsubs
dec
sbb
notb
jecxz
movsb
insb
pop
ja
enter
insl
mov
popf
xor
dec
and
inc
out
or
loopne
test
negl
mov
pop
jecxz
adc
add
pop
and
mov
lock
fistps
aad
or
fcmovne
lock
decb
mov
fsubr
mulb
mov
out
imul
in
flds
ss
mov
mov
sti
int3
add
hlt
xchg
test
and
mov
inc
sti
mov
loopne
mov
inc
push
push
nop
dec
xor
out
dec
mov
test
cltd
in
insb
ss
xchg
push
mov
push
in
xchg
mov
pop
mov
cmc
sub
cmp
inc
xchg
pop
scas
dec
je
scas
pop
lahf
sbb
arpl
mov
add
pushf
mov
cmc
es
mov
xchg
call
xor
jae
mov
pushf
xor
mov
lret
xchg
lret
in
insl
mov
xor
xchg
jg
adc
mov
sub
inc
add
inc
lea
jp
xor
mov
fildl
ficoml
push
scas
and
dec
and
add
mov
add
xchg
xor
jo
fistps
cmp
sbb
lods
push
es
in
mov
popf
jmp
scas
cmp
cmp
pop
aam
mov
mov
dec
dec
sbb
inc
sbb
jmp
loop
sbb
adc
dec
add
movb
lret
mov
notl
xor
xchg
adc
xlat
out
inc
add
sahf
mov
mov
jbe
or
jp
repz
jmp
sahf
or
sub
incb
xchg
jne,pt
pop
fmull
aad
int
adcl
out
cli
ss
cmp
fidivrs
mov
mov
jmp
push
sub
or
xchg
push
or
sbb
fstpt
sahf
inc
xor
xchg
cmc
dec
rcrb
lret
and
arpl
iret
jg
loopne
iret
dec
fs
pop
repz
push
les
insb
fldt
daa
jnp
pop
xor
ja
xchg
inc
scas
jg
dec
iret
and
sub
mov
jae
jbe
je
pop
dec
xor
mov
enter
ret
lahf
mov
pop
je
sti
test
cs
lret
hlt
arpl
lret
mov
jmp
ffree
or
push
inc
fstpt
imul
aaa
mov
clc
xchg
xor
mov
fs
lahf
mov
daa
insl
rclb
pop
cld
aam
outsb
nop
xchg
mov
jne
xchg
pop
lret
jo
ljmp
hlt
cmp
inc
or
mov
out
jge
sbb
sbb
add
jge
pop
mov
arpl
pushf
xor
hlt
daa
flds
mov
dec
insl
clc
adc
in
add
dec
dec
adc
daa
push
pop
xor
sbb
cmpsl
adc
or
add
lods
jg
push
fwait
and
in
sbb
pop
das
std
jecxz
outsl
and
scas
arpl
cmpsl
cwtl
jmp
pop
cmp
pop
insl
jmp
inc
push
fdivr
or
push
mov
popl
mov
int
and
or
ds
shll
dec
lods
mov
or
repz
sbb
in
jns
shll
fsubr
push
or
stc
fcmovnb
xor
daa
or
sub
loope
inc
or
adc
cmp
push
repz
or
jg
sti
push
jb
mov
cmpsb
les
push
jecxz
and
rcrb
dec
enter
xchg
repnz
inc
and
enter
cmp
add
sahf
adc
or
fists
mov
pop
subl
sub
adc
nop
fidivl
mov
out
arpl
add
xchg
xor
mov
test
xchg
mov
and
jmp
lods
sbb
fstpl
out
mov
xchg
push
mov
test
bound
movsl
xor
movsb
outsl
cwtl
rolb
sbb
xor
mov
cmp
cwtl
and
dec
enter
outsl
jle
subl
rcrl
mov
fs
xor
push
dec
scas
pop
and
test
rolb
call
and
or
repnz
sub
xor
lretw
xorl
divb
mov
jmp
shrb
fs
jge
jbe
and
gs
push
push
mov
cwtl
pusha
rclb
or
pop
mov
sbb
push
lods
and
test
in
adc
sub
and
aam
mov
mov
out
roll
imul
mov
or
add
jg
fs
iret
cmc
flds
jo
dec
add
cmp
jbe
out
into
addl
mov
mov
add
mov
shrl
sub
pop
es
pushf
lods
fidivs
subb
cltd
int3
jo
inc
aad
sarl
jle
leave
xchg
fnsave
lret
cmpsb
rcrl
pop
and
add
xor
adc
out
js
stc
ja
in
in
sbb
ret
xor
sar
bound
and
stos
testl
test
jmp
ret
addr16
mov
scas
pop
test
sub
adc
mov
jle
adc
cli
jg
pop
or
jb
stos
and
pusha
dec
inc
in
mov
push
inc
or
mov
popa
mov
lret
popf
cs
xor
insb
das
jo
call
iret
test
mov
sub
cmp
fs
popf
push
enter
push
adc
add
pop
dec
cmpsb
scas
test
cmp
rcrb
push
add
mov
testb
xchg
lret
das
pop
stos
cs
pop
faddl
xor
xchg
out
cmpl
jbe
add
out
sub
ds
sbb
popf
jle
jge
inc
test
xchg
inc
std
and
push
sahf
xor
add
daa
and
mov
inc
insb
xchg
fildll
scas
ffreep
xor
or
repnz
xchg
add
pop
dec
push
jmp
mov
outsb
ja
xor
in
lea
dec
mov
imul
mov
js
test
call
sub
cmp
mov
xchg
fnstcw
jmp
popa
jns
out
or
push
or
sbb
dec
inc
in
and
cmp
xchg
movsb
adc
ja
jp
mov
dec
dec
dec
out
in
or
scas
rol
mov
lcall
fists
inc
imul
in
sub
mov
outsb
imul
cmp
dec
aam
iret
mov
ret
or
push
notb
int3
js
sub
mov
daa
and
shrl
cwtl
pop
lcall
int3
pushf
mov
push
jl
ficomps
cmp
lcall
mov
dec
test
add
dec
sbb
iret
lahf
mov
in
stc
push
das
fwait
mov
xchg
add
pop
pop
clc
mov
mov
mov
xor
sub
pusha
mov
inc
icebp
inc
or
ret
rcrb
fnsave
repnz
in
test
dec
pusha
cmp
fistps
in
loop
pop
xchg
add
inc
push
sahf
add
in
dec
jns
lods
popa
loope
sbb
popf
xor
je
sub
dec
shlb
hlt
push
movsl
inc
jl
insl
rol
inc
xor
jno
push
out
inc
push
sub
push
add
pop
pop
dec
je
jb
push
push
pop
push
stos
mov
leave
aas
rclb
xchg
add
and
rep
push
xor
insl
in
inc
out
xchg
cmpl
sbb
or
adc
add
cmp
sti
out
push
push
mov
aam
push
clc
xlat
repz
call
call
jecxz
gs
or
and
pop
jno
push
or
fs
push
in
rolb
sar
insb
rolb
out
out
adcb
xor
pop
imul
arpl
stos
xchg
adc
ss
jecxz
int3
mov
das
cmc
push
xor
scas
cmc
mov
testb
aas
mov
adc
add
jmp
ljmp
inc
add
push
cmp
sub
add
es
push
or
hlt
dec
movsl
ljmp
add
mov
ficompl
je
inc
imull
int
fadds
lds
xor
inc
lcall
repz
int
mov
enter
sahf
ffreep
mov
fwait
lcall
testb
cmp
scas
push
mov
xchg
pop
mov
mov
insl
xchg
mov
sar
jecxz
sbb
cmp
icebp
add
cmp
dec
mov
cli
sbb
and
mov
test
iret
mov
mov
aas
add
pop
inc
pop
and
stos
bound
aas
frstor
gs
fistpll
dec
fldcw
add
lods
mov
sarl
leave
xchg
pop
sub
xor
nop
imul
sub
fcoms
loop
ljmp
imul
outsb
lock
test
dec
ficompl
jno
loop
lods
lock
pop
sbb
outsl
and
aam
jl
jmp
xor
scas
out
fidivrs
inc
pop
in
movsl
inc
pop
shl
cli
xchg
pusha
sub
repz
jmp
je
mov
es
mov
popf
rorb
sbb
or
fbld
cltd
xorb
or
sbb
dec
xor
ret
ljmp
sbb
jne
mov
xchg
xchg
jae
xchg
addb
dec
mov
loopne
les
scas
cmp
mov
sbb
ljmp
sub
mulb
lret
loope
mov
xchg
xor
or
pop
push
ds
adc
sbb
cmpsl
pop
sarl
sbb
push
pop
cmp
or
push
rorb
les
jno
stos
mov
inc
mov
in
adc
dec
mov
jg
mov
lahf
pop
jno
shlb
add
xchg
push
lods
or
mov
mov
loopne
and
dec
gs
push
movsb
jo
mov
pop
jp
mov
imul
filds
test
jle
pushl
sbb
adc
xor
jmp
jne
icebp
leave
outsb
adc
stos
dec
mov
in
xor
in
or
pop
push
sub
push
inc
icebp
pop
test
push
call
bound
cmp
loop
shr
ljmp
addr16
cmp
fstl
into
xor
insb
in
outsb
loope
fiadds
jbe
std
sbb
add
xorb
cmp
into
dec
enter
cld
and
mov
xlat
call
inc
bnd
or
mov
adc
mov
cmp
mov
dec
jecxz
int3
jns
push
leave
pop
ret
xchg
push
mov
cmp
and
dec
out
ret
andl
cmp
arpl
ds
and
jl
pop
std
jno
hlt
mov
scas
and
sub
and
jns
xor
jne
xchg
cmpsl
lcall
push
fwait
icebp
add
scas
xchg
gs
ss
cmp
or
insb
aam
fnstsw
arpl
pushf
xchg
out
out
movsl
push
sub
push
xor
sahf
and
cmp
jmp
addb
adc
test
pushf
add
daa
in
inc
ljmp
bound
jge
xchg
hlt
dec
cmp
stos
mov
jmp
out
and
dec
mov
adcl
in
loopne
adc
daa
bound
mov
sub
loop
hlt
shrb
out
inc
inc
stos
out
jge
xchg
jge
shl
pop
lret
xchg
enter
arpl
jmp
ret
adc
es
pop
and
dec
mov
jo
adc
lods
into
dec
in
stc
aam
lahf
and
in
cmpsl
and
xor
jecxz
or
and
leave
pop
cld
incb
cld
add
enter
jnp
sahf
or
adc
inc
das
cmc
add
push
mov
lret
mov
add
into
xor
sub
mov
test
cmp
cmp
xor
stc
cmp
icebp
imul
xchg
adc
test
dec
mov
jecxz
xor
push
jmp
xchg
je
mov
adc
inc
mov
mov
mov
cmp
lods
movsl
out
jo
push
inc
lahf
repnz
mov
push
mov
add
mov
addr16
sbb
or
inc
sbb
dec
in
mov
daa
scas
hlt
pop
xor
fidivrs
adc
or
cmp
mov
push
sbb
cmc
rcrl
aaa
jge
data16
incb
imul
aaa
xchg
pop
bound
sbb
sub
dec
pushf
mov
add
cmp
sbb
in
sbb
aad
dec
movsl
fldenv
inc
repnz
icebp
cwtl
mov
push
sub
add
cmp
mov
lods
nop
sub
es
or
adc
ss
inc
cmp
inc
subb
push
add
inc
aaa
and
std
sbb
mov
pusha
or
daa
adc
add
out
sbb
cmc
adc
pop
sub
pop
xchg
popf
scas
jno
jbe
cltd
dec
repz
enter
add
mov
clc
sti
or
popa
and
pop
xchg
xor
pusha
mov
cltd
inc
incl
test
push
xor
pop
mov
cltd
stc
sub
dec
aaa
cmp
sub
or
xchg
dec
or
test
outsl
sub
add
add
jae
and
pop
repz
mov
ret
lea
or
lea
mov
jae
leave
fcmovnu
mov
pop
mov
movsb
jns
fdivrl
cli
xor
sbb
jb
mov
mov
cmp
lock
mov
xor
pop
ret
rclb
cmp
push
cli
es
jnp
je
out
mov
cmpsb
push
lods
jae
mov
adc
mov
dec
sti
xchg
decl
add
jne
jbe
mov
rcrb
or
incl
sub
fisubs
adc
add
test
jg
adc
ljmp
sbb
lcall
subb
in
pusha
rorb
outsl
dec
xlat
add
mov
aas
iret
sub
jp
mov
and
xor
lcall
in
xor
popf
xchg
mov
mov
mov
cmpl
and
mov
xchg
mov
add
shll
xchg
cmp
in
test
or
jnp
lds
sub
js
repz
and
cmp
cmp
clc
testl
xchg
int3
mov
push
scas
dec
push
cmpsb
cld
imul
outsb
lods
adc
sub
std
lahf
ljmp
nop
push
cmp
fs
cmc
imul
popf
insl
push
pop
push
mov
mull
or
push
sbb
mov
lea
mov
jb
cli
add
push
imul
fisubl
dec
aam
xchg
mov
icebp
and
repz
fadd
adc
adc
jne
ret
mov
adc
inc
scas
xor
stos
les
dec
fisttpl
lods
ds
stos
pop
jne
fs
sbb
or
and
ja
ret
pusha
pushf
cwtl
lahf
add
jno
mov
jmp
fs
mov
pop
jns
cmpsl
mov
ljmp
push
movsl
stos
xchg
and
xchg
sbb
mov
aaa
add
push
sbb
je
pop
push
cmp
ficomps
sub
sbb
jbe
lcall
inc
xor
lret
inc
sti
fsub
lahf
inc
das
pop
inc
ret
xchg
cmc
push
lahf
sub
pop
sbb
loopne
aam
mov
les
testb
mov
jnp
test
push
jo
fstps
jg
dec
mov
into
fdivl
mov
jbe
mov
push
rolb
daa
mov
call
pop
push
dec
jb
mov
into
xchg
divb
loop
sub
sbb
aaa
scas
jne
inc
fadds
imul
xor
pop
push
std
jmp
sub
jg
push
push
push
lods
imul
push
xor
cmp
insb
add
mov
pop
outsb
shlb
mov
sub
or
mov
cmp
lods
and
xchg
lods
rcrb
dec
mov
mov
add
xchg
mov
int3
ss
lds
mov
pop
aad
stos
lahf
out
jg
jns
mov
or
pop
mov
or
cmc
aaa
mov
or
pop
ja
ret
mov
cmc
jnp
jno
sbb
lret
daa
call
dec
sbb
add
in
aas
adcb
jmp
movsl
cmp
scas
les
push
cltd
ds
test
mov
mov
icebp
add
ja
mov
les
popa
xor
fistps
push
fisttpll
int3
into
sub
rclb
dec
subb
jecxz
jb
xchg
cmp
into
rclb
movsl
dec
cmp
mov
adc
out
jne
cmp
dec
out
jo
mov
lahf
shlb
pop
je
xchg
push
cmpsb
clc
ljmp
push
push
sub
mov
fstpl
out
lods
sub
dec
fisubrl
cwtl
xchg
out
mov
push
outsl
cld
add
inc
jae
hlt
xchg
jnp
mov
pop
rcl
pop
mov
and
cwtl
push
icebp
mov
inc
adc
pop
dec
adc
jg
adc
js
icebp
stos
fadds
out
dec
loopne
push
jp
xor
push
int
cmp
sub
out
out
mov
adc
mov
xchg
imul
mov
lahf
adc
fmuls
push
dec
in
sahf
ss
mov
sahf
fst
cmpb
mov
push
loope
out
shrb
fiaddl
xor
sbb
mov
movsb
dec
xor
and
inc
psraw
jb
out
pushf
or
insb
lahf
arpl
or
insb
inc
lcall
in
jno
xor
cwtl
push
pop
cld
repz
sbb
popa
xchg
fdivs
cltd
xchg
add
mov
ss
jno
int3
insb
mov
aaa
mov
lds
jae
lcall
xor
popa
adc
push
loop
repnz
inc
jnp
loopne
sub
es
sti
dec
mov
push
icebp
mov
or
push
sbb
pop
orl
mov
imul
or
xchg
bound
pop
das
and
mov
imul
sub
jbe
or
jbe
xchg
pop
sub
lods
inc
adc
dec
repz
push
xor
mov
in
add
adc
scas
push
add
fsubrp
push
bound
out
add
cli
inc
cmc
and
popf
xor
out
rcl
push
loop
xchg
outsb
jg
sbb
fistpl
insb
sbb
dec
mov
mov
xor
loopne
sbb
aaa
inc
sub
arpl
rcrb
aas
mov
sbb
pusha
cmp
int
mov
scas
lret
orl
xor
push
daa
mov
add
cltd
cltd
inc
push
not
dec
push
add
lcall
cmpsl
sbb
jecxz
sti
jecxz
fdivr
add
mov
in
mov
stos
or
les
sbb
push
lea
sti
cmc
out
mov
add
mov
push
xchg
sahf
scas
xor
das
mov
xor
jecxz
test
jp
iret
jae
aam
lret
mulb
sbb
mov
mov
fs
mov
inc
insb
pop
enter
dec
xor
cmp
mov
mov
lret
mov
jg
in
int
aaa
mov
lret
push
call
pop
or
pop
jle
pop
push
mov
inc
mov
lods
push
dec
sbb
nop
cmp
add
sarb
push
mov
mov
loopne
lahf
dec
mov
fistps
testb
jl
mov
je
mov
cmpsb
mov
pop
sub
mov
pop
outsl
or
add
or
movsb
mov
xor
fwait
mov
jle
mov
mov
stc
cmpsb
popf
push
rorb
repz
push
or
adc
dec
ja
clc
cmp
xchg
xor
adc
pop
push
dec
xchg
cmpsl
push
outsb
repnz
icebp
inc
jns
ja
mov
fsubl
movsl
ss
adc
stos
in
mov
das
lcall
inc
pusha
sti
add
mov
sahf
fisttps
mov
add
icebp
xor
fistl
and
mov
es
add
jb
test
insl
repz
add
mov
add
and
jmp
fwait
icebp
mov
and
int3
jo,pt
stos
xor
shrb
adc
lods
pop
mov
cmc
out
push
shrl
jns
out
xor
adc
push
sbb
pop
rclb
imul
andb
fcompl
aaa
dec
push
ret
cwtl
mov
jg
push
and
fidivrl
cmpsl
push
and
daa
scas
sub
adc
jno
lret
lahf
imul
cld
add
hlt
test
dec
fnstsw
dec
jecxz
test
add
mov
or
in
sub
les
lock
mov
push
int3
sarl
and
or
in
fisubrl
cmp
mov
arpl
or
sub
mov
mov
cmp
dec
xchg
out
cmp
pushf
push
xor
pop
mov
sub
aaa
mov
int3
mov
adc
jne
sbb
inc
push
sbb
pop
outsb
outsl
repnz
insb
shlb
add
lahf
es
cli
dec
pusha
mov
jl
aas
pop
rcrl
jge
push
xor
jecxz
add
pop
fdivrl
stos
adc
out
push
adc
mov
sar
stos
xchg
inc
cmp
aaa
incl
inc
popf
dec
aas
push
enter
push
fmull
xchg
adc
fmul
dec
movsb
pop
test
fst
in
inc
dec
add
iret
sub
lea
and
xchg
sub
inc
in
into
cmpsl
inc
cmpsb
inc
and
adc
sbb
faddl
cwtl
add
in
lods
pop
loop
mov
lods
lds
cmpsl
shll
rcl
pop
sbb
pop
test
cmc
jmp
icebp
jg
mov
sti
stos
ret
or
cwtl
fcmovb
add
or
imul
or
inc
shll
jle
mov
iret
inc
adc
push
enter
inc
pop
xchg
and
mov
fidivrs
lret
inc
fdivr
jmp
roll
in
rep
xchg
fidivrl
mov
sub
aam
sbb
das
psubusw
sub
ljmp
rclb
test
xchg
pop
and
wrmsr
sbb
cmpsb
cmpsb
cs
xchg
out
pop
add
mov
adcb
push
sub
cli
imul
sbb
mov
iret
aas
in
test
std
ficoms
push
dec
jnp
scas
jnp
mov
xor
in
stos
loopne
out
out
jge
ss
sbb
testb
sbb
roll
lock
enter
dec
test
jnp
in
mov
iret
sbb
adc
jns
into
pop
lret
mov
push
push
loopne
icebp
aas
adc
adc
inc
inc
push
xor
sub
mov
stos
xor
es
shlb
xchg
testl
add
mov
pop
mov
test
std
xchg
mov
je
pmaxub
dec
push
popa
ljmp
or
mov
inc
fidivl
jecxz
push
mov
test
das
les
loopne
fwait
or
push
xchg
push
cmp
das
out
repz
and
xlat
pop
in
or
xchg
inc
cwtl
clc
fcoml
add
aaa
jbe
sub
test
mov
test
pop
adc
mov
pop
cmp
lret
cmp
imul
dec
cmp
adc
push
mov
pop
xchg
rcrl
inc
arpl
addl
add
push
test
or
sbb
and
cmpsb
xchg
in
mov
cmpb
sub
sbb
jo
dec
cltd
mov
test
and
test
xchg
inc
push
jmp
push
xor
mov
xchg
fnstenv
repz
or
jnp
popf
dec
lahf
mov
adc
cmpsb
mov
sahf
loopne
push
mov
push
dec
jno
jns
fists
in
jae
cmp
orl
outsl
add
into
xor
movsl
push
mov
sbb
xchg
rol
mov
fdivrl
inc
lds
dec
jbe
adc
push
pop
push
sbbb
jo
out
js
push
jbe
mov
inc
iret
andb
dec
adc
daa
and
pop
mov
lahf
cli
shrb
hlt
mov
in
mov
in
loope
stc
lret
push
pop
sub
cmpsb
mov
inc
pop
mov
mov
fwait
loopne
add
add
ret
jecxz
mov
mov
xchg
lds
pop
mov
cmpsb
fldcw
addb
sahf
roll
insl
sbb
aad
push
sti
stc
xor
push
jbe
push
xchg
mov
into
out
mov
subl
mov
sub
daa
inc
or
mov
ret
aaa
pop
push
adc
push
loopne
stos
dec
jmp
mov
cmp
lret
ret
test
pop
pop
or
out
and
in
xchg
inc
dec
out
cwtl
push
mov
lcall
xor
ret
imul
push
add
adc
push
jo
adcl
mov
push
pop
mov
stc
sub
fnstenv
lret
xchg
push
jne
daa
mov
mov
loopne
or
jecxz
insl
pop
nop
cmp
push
rolb
ret
lods
sti
arpl
cmpsl
enter
out
jmp
push
mov
xor
pop
rcl
sti
movsl
call
jl
sbb
adcl
pop
and
or
out
movsl
jne
mov
ds
lock
inc
aaa
adc
push
pop
xchg
int
push
popa
lahf
test
adc
fldenv
jecxz
xchg
cmp
sub
push
inc
int3
jno
mov
outsl
lock
outsl
dec
jne
cs
xchg
mov
sub
add
pop
sbb
notb
imul
cmpsb
dec
mov
outsl
pop
jns
std
pop
push
push
xlat
imul
xchg
dec
mov
dec
mov
ljmp
movsl
add
and
jle
test
popa
or
push
jne
sub
fbstp
xchg
pop
and
hlt
mov
movsl
leave
push
pop
xchg
add
and
adc
ljmp
sahf
pop
idivl
mov
leave
in
xchg
mov
xchg
iret
je
loopne
ss
push
repnz
xchg
pop
pusha
push
aam
les
adc
cltd
sbb
sbb
sub
jnp
scas
cmc
push
sbb
sti
sbbb
testl
mov
inc
rcrl
and
mov
arpl
nop
cmpb
xchg
add
aad
pop
insl
dec
cmpl
push
test
lahf
cmp
sbb
dec
xor
aam
mov
lds
or
lret
sahf
mov
lods
andl
xchg
cmp
ja
mov
pop
cmpsb
sub
outsb
jle
push
mov
pop
ficoms
fwait
cmpsl
add
push
ret
xor
pushl
mov
sbb
pop
mov
mov
inc
add
and
inc
aas
sbb
rcr
jmp
insl
in
xor
jg
push
cmp
testl
andb
sbb
fisttpll
or
jne
xor
call
or
in
jmp
jge
sbb
lods
aaa
inc
movsb
jp
xchg
push
out
cwtl
movsl
xor
xor
push
add
imul
bound
mov
adc
jne
cli
scas
and
and
cmp
loope
cld
fidivs
mov
aaa
sub
addr16
out
pop
or
sahf
js
lods
lret
add
jne
sub
cmp
test
lret
rorl
cld
jne
bound
and
mov
jns
insl
rclb
cs
ja
push
notl
aaa
sub
mov
dec
and
xor
ret
adc
lret
and
ret
pop
arpl
out
scas
mov
cmc
adc
stos
movsl
push
jecxz
push
pop
xor
rorb
inc
push
inc
and
and
movb
add
js
sti
sbb
jle
repz
sbb
sbb
fadds
mov
or
mov
addl
add
and
sbb
test
ljmp
test
ss
ret
sub
mov
rclb
inc
fmuls
xor
aad
stc
add
ficoms
jecxz
in
mov
sbb
dec
xchg
sub
xchg
adc
scas
adc
sbb
jecxz
nop
imul
rcrl
rorb
cmpl
pop
js
inc
pop
clc
dec
xchg
xor
dec
adc
popf
daa
pushf
movsl
sbb
lock
inc
aam
int3
xor
mov
mov
loop
mov
mov
cltd
xchg
xchg
adc
popf
jmp
push
dec
inc
sbb
rolb
arpl
aas
sbb
push
gs
lcall
pop
mov
mov
fdiv
addr16
cmp
nop
aas
jo
test
push
lea
ja
mov
inc
inc
sbb
jne
mov
test
xor
sbb
dec
dec
lock
add
arpl
pop
rorl
xchg
ret
xchg
jecxz
inc
sahf
inc
iret
push
movsb
mov
scas
mov
aad
xor
movsb
cmpb
inc
fnstcw
fwait
mov
mov
dec
jnp
dec
and
scas
pop
dec
sahf
inc
loopne
add
pop
jb
mov
lock
xor
mov
pop
popf
shl
das
cmp
lret
lods
inc
push
repz
imul
jmp
mov
movsl
or
jmp
adc
xor
testl
addr16
js
mov
int3
inc
dec
mov
imul
add
les
fistl
test
xchg
jge
fsts
pop
cwtl
jo
addr16
sub
mov
sti
lahf
rcl
cmp
inc
sub
std
stos
shll
mov
int3
arpl
out
das
scas
adc
cmpsl
test
adc
arpl
sbbb
loopne
sub
pop
add
xchg
or
outsl
lods
cli
mov
shll
call
stc
mov
push
or
mov
xchg
sbbl
jecxz
test
mov
mov
fildl
fdiv
aas
pop
push
cmp
jg
std
xchg
jg
inc
add
hlt
mov
fisubl
mov
xchg
push
cmp
cli
push
pop
lcall
xchg
dec
cmp
adc
popa
xor
mov
fsubrs
call
lds
mov
mov
cmpsl
push
jge
ret
scas
push
insl
sbb
dec
aas
push
lret
addb
fadds
xchg
dec
adc
fcmovbe
icebp
jecxz
loopne
aad
in
fs
cwtl
mov
bound
ficoml
lds
ret
sub
xchg
cmp
sbb
divb
jl
push
fwait
lret
pop
inc
adcb
push
test
xchg
cli
and
dec
fmuls
cld
std
stos
inc
dec
add
jp
dec
mov
and
sub
loope
push
mov
in
adc
or
or
xchg
and
push
loope
into
jnp
outsb
push
jmp
aam
xchg
sti
xor
cld
dec
cmpsl
loope
jmp
add
repz
rorb
fdivs
mov
pop
sub
movsb
pop
mov
xor
cmp
frstor
mov
jg
or
enter
movsb
adc
add
cmp
sub
sahf
dec
adc
push
out
dec
pusha
sub
lcall
push
add
or
xor
stc
xor
xor
lods
cmp
lds
and
cmpsl
cmp
inc
push
mov
test
adc
outsb
and
popl
cmc
rcrb
or
stos
push
rcll
daa
in
std
push
or
add
xchg
add
scas
mov
push
fs
in
mov
in
in
sbb
jg
mov
cmp
inc
mov
mov
out
dec
adc
or
loop
mov
fidivrl
in
fs
dec
xchg
mov
mov
push
adcl
inc
hlt
pop
js
jmp
jmp
xchg
outsb
dec
mov
cmp
mov
mov
mov
cmp
shrd
das
out
jp
das
lcall
frstor
jae
sub
movl
jle
inc
xchg
lock
or
cmp
lock
sar
fmulp
adc
mov
sbb
mov
and
fs
popl
addb
imul
lock
stc
lock
lds
xchg
xlat
stos
dec
fildll
xor
lds
inc
inc
push
xor
ljmp
fwait
insb
inc
push
push
fisubrl
loope
sbb
into
jl
rcr
and
insb
sub
cli
aaa
iret
cmc
data16
inc
les
push
ret
stos
lahf
insb
cmpsl
test
jmp
out
mov
sti
push
ljmp
adc
add
push
sbb
std
sbb
sbb
out
imul
xor
jge
rcll
popa
inc
movsb
loopne
lea
adc
lret
test
push
ror
push
test
jle,pn
adc
repz
inc
add
out
add
dec
ret
ljmp
or
fwait
arpl
xchg
sub
sbb
pop
add
ja
pop
push
stc
mov
sbb
arpl
adc
shl
fdivr
xchg
fcoml
aaa
rcrl
lds
fldt
aad
lds
add
mov
jno
cmp
pop
jo
aaa
lahf
sbb
int3
lret
xchg
pop
lcall
sub
orb
mov
aas
subb
sbb
addb
lahf
mov
lock
js
jo
movsl
mov
mov
hlt
js
pop
rcrl
inc
pop
jl
je
and
in
loopne
out
pop
pushf
loopne,pn
jnp
stos
xchg
leave
enter
adc
sub
iret
data16
push
mov
jne
push
es
clc
xor
data16
xlat
lret
not
mov
push
add
jp
mov
or
pop
dec
cli
pushf
and
rol
pop
jl
mov
cmpsb
nop
lock
test
lret
lods
mov
dec
jl
and
jle
js
jb
xor
divb
loopne
xchg
arpl
test
popf
mov
add
iret
ss
lods
movsl
or
and
rcrb
loopne
xchg
push
xor
pop
xchg
lcall
xchg
flds
mov
and
rcrl
in
or
mov
add
mov
sarb
fildll
in
xchg
sbb
jmp
aam
pop
jns
popf
lock
vmovdqa
mov
cs
pop
insb
push
shlb
sahf
scas
jb
notl
cs
unpcklps
pop
cmp
mov
outsb
sbb
es
pop
mov
fmuls
and
cmp
and
mov
xor
shl
stos
add
insl
arpl
call
jecxz
jle
dec
fstl
and
jb
sub
and
daa
push
mov
cmc
daa
cmp
sbb
fadds
jg
xor
ss
ja
xchg
cwtl
ret
cmc
mov
sub
rcr
cmp
adc
jecxz
icebp
push
ja
outsl
arpl
imul
xchg
xchg
mov
jae
fdivrs
sahf
outsb
test
mov
or
jle
mov
js
mov
push
inc
mov
es
mov
adc
inc
lahf
xor
cmc
imull
xor
adc
std
arpl
sbb
or
outsl
nop
jbe
inc
cmpsl
push
repnz
imul
jae
jns
rclb
clc
ss
push
and
test
pop
adc
mov
cltd
pop
iret
fidivrs
rep
inc
pop
out
ja
sbb
fwait
fwait
pop
aad
and
xor
xor
test
cmpsl
fsubs
adc
push
inc
jecxz
popf
push
or
int3
jns
xor
fldl
push
aam
pop
dec
fsts
add
ret
mov
push
inc
push
les
fdivrl
push
push
adc
sarb
xor
loopne
mov
mov
pop
test
fst
scas
fucom
push
xchg
stos
dec
out
clc
xchg
cmpl
xchg
cld
int3
hlt
add
sub
lahf
mov
into
outsl
js
inc
stc
jno
xor
or
out
add
addr16
cwtl
mov
in
add
popa
mov
int3
sub
int
movsl
sbb
xchg
or
push
lods
push
leave
pop
inc
mov
fldenv
and
and
andb
enter
mov
rcl
cmp
push
sub
subl
and
popa
outsl
jge
mov
stos
ljmp
rcr
jge
inc
sub
fs
sarb
iret
xor
stos
mov
incb
adc
jmp
out
or
sub
mov
rorb
lret
cltd
add
xchg
xor
test
icebp
sbb
mov
dec
push
imul
xor
mov
sub
sub
add
xor
stos
add
dec
imul
pop
popf
lds
nop
test
scas
add
in
push
xor
pop
mov
js
mov
ss
mov
push
pusha
sbb
ja
in
push
das
mov
pop
dec
lods
out
sub
jne
cmp
mov
jns
fisubrs
mov
lcall
xchg
loopne
dec
sub
mov
dec
pusha
cmp
xor
shl
mov
shlb
je
inc
pusha
fstl
fidivrs
loop
mov
stos
gs
mov
jbe
push
ljmp
decl
lock
outsb
mov
mov
jle
pushf
js
lret
dec
sub
sub
imul
mov
aas
mov
scas
scas
int
shll
fldenv
scas
inc
sbb
or
js
fmul
add
pop
and
mov
lret
fs
jle
test
lea
dec
adc
sbb
sbb
daa
dec
bound
mov
and
rorl
jecxz
mov
shrl
xchg
push
xchg
sahf
inc
cmpsb
in
xor
addr16
mov
or
pop
adc
jne
add
scas
aad
js
add
xchg
icebp
outsb
int
fstpl
aam
adc
mov
leave
test
shrl
repnz
add
add
mov
icebp
outsl
stos
push
xchg
movsb
mov
popa
hlt
xorl
jge
adc
add
pusha
and
add
lds
jae
sbb
pop
mov
sbb
gs
mov
xor
mov
push
pop
icebp
fs
ja
dec
or
popf
imul
pusha
test
jns
cmp
adc
sbb
std
push
hlt
dec
aad
jmp
add
pop
cmpsl
add
pop
rcrb
pop
xorb
add
lret
push
gs
jne
aad
add
xor
cmpsl
ret
pop
and
or
jmp
xlat
mov
mov
mov
outsb
mov
mul
mov
daa
sub
mov
mov
scas
cmp
hlt
shl
addl
and
pop
xor
xchg
adc
pop
mov
add
sub
adc
mov
fbld
sub
data16
push
xor
lods
xchg
int3
nop
scas
push
in
adc
pop
inc
add
repnz
pop
mov
scas
movsb
imul
adc
sbb
push
sub
lahf
mov
ret
add
inc
cmp
cwtl
int3
ljmp
or
popf
inc
clc
inc
xorb
add
sub
out
inc
out
dec
cmp
mov
aaa
mov
cmp
inc
xchg
or
sbb
imulb
jl
xchg
inc
lods
lods
test
mov
xchg
sti
pushf
test
add
or
xchg
push
in
in
dec
dec
jns
in
cs
divb
cmpsl
popa
repz
jmp
mov
test
mov
add
jl
aas
js
pop
inc
loopne
pop
mov
adc
and
mov
cmp
std
sub
or
fldcw
sbb
aam
add
xor
mov
jle
aad
sahf
in
test
jnp
scas
fidivl
jmp
loope
xchg
mov
adc
negl
lock
mov
dec
sbb
int
cli
sub
mov
or
sbb
rcr
nop
cmp
inc
xorb
xchg
fisubs
cmp
add
outsb
push
cwtl
mov
add
addr16
adc
mov
jle
pop
pop
add
loopne
add
push
xor
add
mov
pushl
cmp
gs
push
addr16
cld
push
pop
pop
cs
outsb
scas
jo
stos
cmpsb
and
call
leave
xlat
cld
xchg
add
xchg
xor
jg
lods
pop
adc
pop
jns
cmpl
mov
out
xlat
in
sarb
add
ja
call
test
mov
add
loop
mov
add
sti
sub
lret
in
mov
mov
xor
sub
xchg
ljmp
loopne
hlt
ljmp
jl
push
out
out
cmp
jle
add
in
mov
xchg
pop
jmp
mov
sbb
out
lock
add
mov
js
sahf
xchg
lods
sarl
or
ret
jp
leave
sbb
rclb
out
push
xchg
cbtw
and
mov
std
sub
mov
shl
les
push
enter
sti
addl
cmpsl
add
clc
icebp
adc
add
push
decl
ret
out
imul
jns
arpl
mov
ja
cmpsl
push
cmpsb
jge
sbb
push
std
push
adc
icebp
pop
mov
push
insb
xchg
cmp
rclb
xchg
lahf
inc
and
dec
push
stos
mov
pusha
lea
out
pusha
add
jecxz
fistpl
sub
bound
insl
push
int
push
jecxz
subl
scas
icebp
stos
sbb
or
movsb
mov
inc
in
xchg
mov
in
push
inc
fiaddl
aas
add
aas
xchg
dec
xor
push
xorb
push
lret
lods
and
mov
sbb
push
mov
sub
in
rcrb
andl
xchg
outsl
adc
fisubrs
sahf
or
cmp
addr16
test
mov
xchg
xor
sub
add
js
test
notl
ds
mov
and
aaa
inc
jns
pop
orb
mov
add
sbb
mov
popf
sub
push
mov
add
inc
mov
movsl
int
mov
outsl
and
mov
mov
or
sub
scas
in
dec
jo
inc
inc
add
or
add
cltd
jae
sbbb
pusha
mov
das
ret
push
repnz
push
mov
leave
adc
mov
addb
cmpsl
pop
mov
ja
and
inc
or
enter
inc
pop
xchg
in
daa
xchg
push
popa
sbb
mov
add
pusha
adc
ja
push
and
inc
ret
iret
mov
dec
push
imul
mulps
sbb
adc
push
mov
mov
lahf
sbb
fmull
xchg
sub
jp
lcall
gs
xchg
push
mov
rorb
aad
sarb
add
clc
pusha
jge
or
jecxz
push
xor
scas
mov
repz
sbb
adc
mov
sbb
ds
mov
mov
cwtl
mov
cmpsl
xor
inc
fidivs
xchg
xor
psubusb
adc
out
mov
jl
pop
lods
outsl
sbb
sbb
ss
dec
idivb
dec
or
roll
xor
stos
sub
jmp
sub
test
sbb
scas
mov
mov
adc
sbb
cmpsl
test
pusha
aad
popl
pusha
push
into
fstps
mov
push
mov
and
inc
adc
add
cld
arpl
add
je
data16
cltd
inc
ficoms
push
sub
lods
int3
idivl
ss
pop
sbb
push
inc
inc
add
cmpsb
repz
call
dec
dec
cld
aad
mov
pop
fmuls
add
jg
movsb
jae
jecxz
sbb
xchg
cmp
outsl
jle
shrb
add
or
ds
rcrb
mov
mov
dec
mov
mov
ljmp
fsubrs
sub
jo
cmpsl
into
jle
cmp
imull
and
lret
add
xor
daa
stos
xor
sub
pop
in
push
xchg
xchg
ret
jg
push
lret
in
cmpsl
mov
adc
mov
jae
add
gs
pusha
jno
sub
fdivrl
cmp
xchg
mov
add
mov
adc
push
popf
or
iret
enter
adc
xchg
sbb
fmuls
pop
jbe
push
loope
sti
xchg
aad
dec
lret
push
inc
insl
in
fwait
inc
xchg
mov
push
dec
pop
loop
xchg
and
cmp
push
mov
inc
fmulp
xor
push
loopne
inc
pop
leave
xchg
xchg
test
cmc
cli
jnp
sbb
xor
pop
adc
icebp
pop
sahf
mov
insb
lcall
add
push
jne
js,pt
fucomi
pop
inc
pushl
cmpsb
ja
mov
sub
sahf
stos
or
jecxz
bound
or
shl
mov
pop
aaa
sbb
int3
mov
negl
pop
adc
inc
ror
push
sahf
pop
aas
xor
stc
or
scas
xchg
jmp
test
sahf
lcall
pop
jne
xchg
insl
call
xchg
jecxz
in
and
mov
dec
cwtl
in
xchg
inc
mov
lods
push
mov
sub
add
cld
push
xchg
aas
xor
sub
xlat
into
xor
add
push
mov
shll
les
xchg
sub
pop
aaa
sahf
pop
inc
xchg
xchg
test
test
dec
adc
test
or
adc
and
fwait
lret
xchg
jp
mov
mov
mov
cmp
dec
jno
lret
out
cmp
cmpsb
out
mov
fcmovbe
pop
add
aas
xchg
sahf
jecxz
imul
sbb
pop
push
cmpsb
fsts
in
mov
jno
mov
mov
jo
addr16
test
pop
cmc
xchg
cmp
int
clc
dec
cwtl
cmp
insl
lret
sti
jns
cli
test
in
data16
out
add
loop
je
cli
adc
jecxz
adc
scas
cmp
xor
jl
add
mov
popf
adc
lret
rcrb
bts
mov
xchg
jecxz
aas
mov
inc
ja
xor
mov
popf
mov
in
push
aad
pop
stc
xchg
cwtl
dec
sub
sub
das
cld
call
inc
decl
cmpsl
fdiv
jp
mov
jno,pn
cld
stos
sbb
repnz
inc
adc
fwait
jmp
sub
movsb
push
lock
sti
xor
jb
leave
jae
jg
in
xchg
mov
divl
adc
xor
lds
stc
xchg
xor
adc
outsl
movl
jbe
and
shll
or
and
cmp
shl
adc
xchg
icebp
sub
sarb
dec
and
out
add
jo
dec
xchg
stos
and
add
popa
mov
sub
lock
or
dec
mov
cli
outsl
testl
sub
mov
pop
imul
xor
cmc
out
mov
fnstenv
or
adc
cmpl
pop
xchg
mov
jbe
mov
mov
sub
les
stc
jne
jne
gs
nop
pop
ss
sbb
ret
add
pop
repnz
add
dec
pop
out
dec
and
mov
daa
xchg
fisubrs
mov
mov
jno
cmc
dec
mov
jl
lods
sti
dec
mov
repnz
stos
push
mov
mov
dec
mov
ds
pop
and
dec
sbb
hlt
fmull
dec
push
cmp
jmp
xor
enter
mov
mov
adc
sarb
mov
xor
push
xor
push
iret
je
adc
rcl
pop
pop
testb
mov
xor
or
aaa
mov
daa
cmp
and
pop
push
test
loopne
test
in
rcrb
mov
sti
sbb
sahf
push
jae
cmpsb
outsl
sub
mov
mov
push
cmp
les
mov
xchg
lods
std
jecxz
dec
gs
push
sub
movsl
xchg
and
loope
dec
mov
ret
mov
rcl
mov
adc
xor
sub
sbb
xchg
mov
ja
pop
push
loopne
sbb
sbb
inc
mov
fs
xor
adc
fcompl
inc
outsb
frstor
fld
push
pop
test
lcall
mov
pop
rsm
insb
xchg
arpl
outsb
imul
fldenv
rol
or
roll
or
ja
jle
not
pusha
lahf
adc
popa
insb
mov
cmp
sbbb
and
aad
shr
dec
iret
cltd
adc
shlb
jle
repnz
and
adc
mov
pop
movsb
pop
pushf
repz
mov
mov
call
enter
push
addr16
cmp
xchg
hlt
and
clc
jb
xor
fidivl
and
out
jmp
in
xor
sub
mov
nop
sub
inc
xchg
cmp
mov
cmp
jbe
popf
xchg
fildl
dec
xor
loope
xor
mov
mov
mov
mov
andb
sbb
sub
fisubrl
mov
lods
test
test
movb
jno
fisttps
and
out
negl
mov
lret
inc
jge
data16
jnp
stos
ror
mov
es
mov
clc
dec
jecxz
jmp
push
pop
movsl
lods
or
fisttps
cld
xchg
mov
push
or
and
mov
xchg
sbb
dec
inc
adc
fwait
push
xor
mov
push
xor
push
rorb
adc
cmp
sbb
and
xchg
or
xchg
xchg
pop
fdivr
or
and
ffreep
mov
arpl
jno
out
sbb
and
fldt
aaa
scas
pop
ficoms
lahf
pop
pop
insb
pop
cmp
rcrl
xchg
cmp
add
cmpsl
fdivp
jge
xor
mov
cli
fldenv
int
mov
aas
add
push
insb
mov
std
and
mov
je
dec
sub
out
and
adc
cwtl
add
call
sbb
test
fimuls
sub
aas
ffree
ret
scas
dec
mov
sub
imul
sub
movsb
dec
inc
or
mov
shrb
leave
mov
repz
es
lock
cmp
loop
pop
xor
mov
mov
jl
pusha
ficompl
or
mov
xor
cmp
dec
mov
xchg
adcl
imul
ds
in
cmp
mov
inc
push
stos
push
push
lock
dec
aaa
adc
mov
loop
rcll
call
mov
cltd
shll
scas
dec
add
cli
rcrb
out
aam
popf
add
jno
shl
sub
cmp
inc
pop
std
cwtl
das
sti
repnz
aam
sub
mov
pop
das
sub
cmp
xchg
aaa
aad
pop
xchg
xlat
fmull
lods
add
imul
xchg
cmp
sbb
xlat
rcrl
repz
pop
add
nop
scas
add
pushf
pop
jmp
out
andb
inc
out
int
jmp
outsb
and
mov
adc
adc
iret
pop
jne
pop
pop
stos
jae
mov
cmp
sbb
out
adcb
add
push
cld
adc
sub
or
ret
xor
testb
aad
scas
mov
mov
and
jecxz
or
ficompl
mov
pop
add
iret
hlt
mov
pop
push
imul
dec
dec
mov
movb
stc
push
mov
pop
adc
jecxz
or
jge
fcoms
scas
mov
add
call
push
stos
in
sbb
fs
or
call
out
je
jbe
pop
out
cmc
test
and
dec
pop
fs
inc
mov
mov
jbe
lahf
js
lods
pop
or
or
mov
out
mov
xor
imul
popl
dec
jb
cmp
and
xchg
cmpsb
mov
push
jae
pop
or
cwtl
cli
mov
lahf
lods
arpl
and
jns
cli
xchg
test
cmp
mov
pop
and
add
mov
sahf
jae
aaa
pusha
mov
mov
divl
push
mov
pop
lret
or
lds
ljmp
repnz
loop
adc
and
insl
mov
adc
pop
stos
mov
std
pop
movsl
jmp
push
push
or
cmp
push
arpl
adc
rclb
das
cmovb
std
lcall
cmp
mov
mov
sbb
push
fnstsw
mov
jl
int3
add
ret
aad
cmp
or
addr16
pop
push
lds
std
lock
sbb
js
add
fs
ljmp
test
push
pop
mov
inc
dec
ficompl
xchg
pop
push
cmp
outsb
lahf
pop
and
aam
and
push
arpl
test
test
lock
add
push
inc
dec
shlb
loopne
jno
sbb
pop
and
stos
jmp
cwtl
ret
cmc
mov
leave
add
loope
mov
adc
mov
xor
pushf
rcll
rorl
std
push
xor
jno
packsswb
adc
or
int
je,pt
mov
aam
decl
repnz
cltd
movb
test
les
adc
pushf
xlat
and
dec
xchg
fisubl
inc
push
loop
and
jmp
pop
and
xlat
out
enter
movsl
popf
addl
pop
pop
ja
dec
movsl
hlt
jnp
shrl
into
jle
ljmp
push
adc
dec
leave
test
cmp
ret
mov
btr
cltd
ficoms
popf
mov
enter
mov
mov
add
xchg
pop
xor
call
pop
xchg
push
lods
popa
lds
jno
test
and
data16
pop
rorl
and
mov
mov
fs
jno
lret
jbe
push
xchg
sub
dec
out
lret
pop
xorl
jbe,pt
sub
jbe
adc
call
call
pop
sbb
addr16
repz
cmpl
mov
and
mov
ss
adc
add
cmp
ds
cmc
pop
fs
dec
jecxz
fwait
cmp
xor
cmpsb
and
daa
xor
push
xor
lods
xchg
aaa
pop
jle
sbb
jnp
mov
loop
in
mov
ret
pop
int
test
dec
test
push
ss
push
cmp
sbb
arpl
movsb
repz
dec
sti
pop
arpl
imul
ret
adc
and
stos
leave
icebp
add
into
adc
jne
add
popl
in
jns
cmp
pop
mov
add
mov
add
mulb
jnp
add
cmp
dec
jge
jo
pop
mov
mov
nop
or
xchg
cs
imul
xchg
jno
mov
or
xchg
or
mov
add
xor
sub
dec
sub
lods
mov
mov
popa
mov
cwtl
push
lds
or
pop
int3
jl
xchg
mov
stos
add
je
in
mov
cmpsb
stc
adc
cwtl
shl
mov
mov
sbb
pop
movsl
mov
bound
cs
or
push
movsb
mov
xlat
popa
pop
lock
and
iret
xchg
fistl
mov
call
cmp
xchg
add
sub
fsts
mov
mov
xor
roll
gs
inc
add
sahf
bound
test
repz
es
adc
ficoms
pop
ljmp
pop
pop
mov
cmp
xor
sub
and
test
loop,pn
jne
and
enter
cld
pop
bound
jecxz
cmp
int
dec
test
addr16
insl
aaa
adc
mov
popf
mov
push
dec
push
inc
dec
dec
or
and
ret
mov
dec
and
pusha
scas
popf
ret
push
mov
mov
mov
xchg
lods
push
test
popa
pop
sub
jmp
cmp
imul
jle
push
es
out
or
push
dec
pop
in
cmpsb
loope
ljmp
cmpsl
add
in
in
and
or
inc
sti
in
mov
pop
dec
rolb
adc
in
int
pop
daa
mov
and
mov
xlat
xor
pop
adc
cmc
jae
and
push
mov
adc
std
stos
add
jae
add
or
push
aaa
aas
loope
pop
dec
andb
cmpsl
add
push
lods
adc
pop
pop
lock
test
mov
cld
adc
inc
mov
lcall
mov
pop
test
out
cltd
mov
inc
add
mov
sbb
add
pop
lods
xor
or
or
fiaddl
in
or
lret
or
pop
clc
jb
push
movsb
aam
fwait
or
scas
shl
mov
cmp
inc
jle
add
adc
adc
psubq
loop
icebp
cmp
rolb
push
rcrl
rcr
xchg
fdivs
fdiv
std
pop
ja
test
outsb
lcall
iret
dec
mov
test
jae
pushf
bound
cmp
cmp
dec
cs
push
cmp
jbe
adc
pop
xor
int3
xchg
aad
cmp
dec
aam
push
sbb
sub
inc
cmc
loopne
sarl
push
jmp
cmp
push
out
adc
and
jmp
fcom
inc
out
mov
add
popf
das
popf
aas
js
mov
cmpsl
lea
xchg
adc
cmp
xchg
scas
and
sub
mov
mov
inc
cmp
fxch
sub
jbe
sbb
mov
mov
pop
xchg
sub
lods
aaa
mov
sub
pusha
rorl
fdivs
dec
xchg
cmp
sbb
pop
xor
dec
rcrl
aam
dec
sbb
sub
push
jle
or
lods
fsub
adc
sub
mov
insb
popa
jo
clc
out
pop
cmp
jne
and
cli
mov
out
iret
and
xchg
add
jl
and
or
movsb
adc
scas
push
loopne
cmp
push
and
inc
inc
aas
aam
ja
fistps
inc
push
loopne
xchg
sbb
imul
ret
xchg
push
fs
xchg
shr
xchg
mov
stos
loop
stc
sbb
repz
and
mov
inc
mov
inc
push
add
cli
out
push
daa
aam
lock
push
test
mov
lods
call
int3
enter
lods
orb
mov
rcrb
scas
fwait
jae
mov
mov
out
or
fcmovnb
test
sbb
xorl
fstpt
cmp
shll
pop
mov
jnp
mov
out
pusha
or
or
mov
scas
test
imull
mov
cmp
xchg
mov
jbe
fsubl
xchg
jne
fmuls
push
dec
imul
push
and
sbb
push
ljmp
hlt
cmpsl
push
jecxz
cmp
mov
sbb
cmp
xchg
pop
cmp
hlt
shl
xor
inc
xchg
push
popf
cmp
hlt
stos
push
pop
je
arpl
pop
inc
clc
jne
fsubrs
cmc
xchg
lods
sbb
das
mov
sbb
jo
ret
sbb
cmc
xor
mov
sbb
mov
pop
jp
loop
cltd
icebp
push
sub
and
sub
ficoml
imulb
push
dec
cs
and
inc
ljmp
or
pop
out
in
jp
clc
push
xor
fistl
loop
insb
dec
imul
jo
ficoml
std
dec
mov
nop
jae
pop
pop
push
pushf
negb
ljmp
and
iret
insl
test
ljmp
enter
out
stos
add
add
loopne
fsubl
mov
out
in
sahf
je
sub
in
or
arpl
push
sub
lods
outsl
aaa
scas
adcl
fcmovnb
iret
mov
jmp
xor
ficomps
mov
and
mov
lock
xchg
mov
je
lret
pop
repnz
xor
daa
pop
imul
cmp
mov
xchg
pop
orb
push
mov
sahf
les
push
aad
mov
fildll
cmpsl
pop
and
mov
xchg
xor
mov
mov
insb
push
add
or
fidivl
mov
lahf
insb
inc
and
pop
call
or
bnd
xor
sub
sbb
xchg
stc
lds
unpckhps
les
jge
fs
mov
xchg
sbb
push
mov
inc
es
ss
cli
push
add
jp
lret
xchg
dec
jno
fstpl
mov
andl
adc
add
sti
ss
sbb
icebp
mov
push
mov
adc
jnp
xchg
adc
inc
mov
fcoml
fnsave
nop
mov
or
dec
int3
sbb
je
push
bound
ds
xchg
add
stos
push
add
stos
sar
inc
aaa
push
in
inc
xchg
xor
rcr
mov
lret
sub
je
inc
pop
outsl
and
arpl
adc
cmp
les
aaa
or
inc
test
pop
rorl
scas
sbb
mov
xchg
dec
add
or
insl
mov
xor
and
addb
pop
out
mov
rcrl
xchg
adc
dec
iret
mov
negb
icebp
sbbb
icebp
stos
jg
mov
cmp
cmp
outsb
cmp
push
push
sub
mov
add
into
pop
fisubrl
sti
in
push
add
test
subb
jno
and
push
jns
sub
pop
jne
test
mov
sti
lcall
mov
jo
cmpsl
jb
push
out
ss
push
cmp
mov
and
jmp
fwait
loopne
test
repnz
or
mov
jno
xchg
jmp
loopne
std
mov
shll
ret
xchg
lret
int
xor
pop
sti
push
stc
arpl
mov
ss
dec
xchg
test
dec
pop
pop
sub
xchg
ret
mov
int
int3
sbbb
stc
dec
stos
and
js
inc
ljmp
mov
push
test
pop
cmp
jnp
and
push
mov
cmpsl
dec
in
repz
addb
xchg
add
repz
or
leave
outsb
jmp
loop
push
aaa
out
mov
call
outsb
lods
ret
mov
jno
jg
or
jnp
insb
or
popa
jmp
lea
sub
dec
pop
dec
das
lods
sub
mov
sub
leave
aas
lcall
cmpsb
test
ds
sub
sahf
add
mov
sub
mov
inc
mov
dec
mov
mov
cwtl
inc
mov
xor
push
cmc
test
mov
push
scas
loope
sbb
ret
xchg
add
jge
push
cld
sbb
pop
test
and
adc
add
aaa
fwait
or
sbb
xor
sub
mov
in
hlt
andl
jg
xchg
fidivrs
in
fdivs
ss
jle
mov
pop
adc
adc
push
mov
sub
in
inc
pop
inc
stc
push
test
idivl
sahf
jmp
ja
dec
inc
jecxz
pop
stos
andl
out
rorb
mov
clc
pop
ljmp
out
mov
and
add
push
push
dec
pushf
mov
cmpsb
jo
xor
pop
cli
test
call
in
mov
mov
pop
push
xchg
xor
pop
out
mov
sbb
ret
mov
cltd
mov
push
mov
sbb
test
add
pop
push
aas
jmp
in
lods
mov
popa
test
mov
fwait
insl
loopne
xchg
inc
mov
mull
movsl
and
jl
shr
lock
enter
jne
ss
push
mov
add
lret
sub
ret
ror
cmp
push
lret
mov
into
cmp
jbe
inc
in
ficompl
rorb
mov
ss
add
stos
roll
add
jmp
aad
inc
dec
clc
cltd
jle
push
fiaddl
pop
pop
cld
addr16
fdiv
jg
lret
pop
pop
ljmp
arpl
or
cmp
aaa
imul
sbb
cltd
push
sub
and
sub
xchg
insl
das
jnp
aaa
jg
mov
scas
aam
jg
cmp
sub
outsl
pop
push
std
lret
push
dec
pop
stos
sbbl
sub
jbe
and
fdivr
mov
cmp
mov
int
adc
popa
sbb
cmpsl
imul
xor
imul
mov
out
rclb
loopne
clc
xchg
lret
pop
and
xchg
popa
inc
leave
in
gs
nop
pop
clc
push
cmpsb
add
imul
mov
adc
cmp
mov
adc
test
lods
sbb
iret
pop
adc
cmp
mov
inc
call
adc
pop
imul
xor
rcr
aaa
sub
mov
adc
xchg
mov
lods
sub
cmc
push
pop
xor
cmpsl
push
out
adc
mov
icebp
cltd
vmovhpd
dec
add
loopne
sti
xor
pop
push
inc
ret
not
mov
mov
mov
in
mull
lods
dec
jmp
arpl
dec
xchg
aam
mov
jne
ret
fldcw
fs
fimuls
mov
enter
mov
adc
pushl
sbb
in
movsb
popf
or
xchg
out
iret
test
xlat
or
sub
xchg
stos
adcl
mov
cmp
xchg
hlt
jg
in
lcall
xchg
mov
je
cs
xor
mov
fisubrs
adc
add
into
test
movsb
cmp
cmp
or
lods
sub
or
fimull
pop
sub
jbe
add
sbb
movsb
scas
in
lods
fstpt
inc
inc
push
push
xor
cwtl
mov
dec
imul
or
imul
push
push
xchg
data16
pop
hlt
clc
sti
dec
movsb
or
cmpl
dec
fs
xor
mov
mov
arpl
inc
jecxz
aaa
mov
xlat
xchg
cmp
sarb
cmp
pop
add
and
mov
aaa
pop
jg
aad
dec
mov
add
xchg
shlb
stos
mov
enter
mov
cmp
mov
xchg
mov
mov
push
lock
or
xchg
lret
xchg
dec
pop
pop
sbb
in
cld
fisubrs
mov
or
cmp
aam
mov
cltd
inc
rolb
sub
dec
pop
int
std
negb
dec
cmp
pop
and
xor
xchg
pop
push
aaa
xor
add
sbb
xchg
ret
lods
dec
out
mov
sbbl
sbb
into
call
dec
insl
sub
pop
mov
lods
dec
pop
mov
sbb
cld
fwait
jb
pop
int3
rolb
and
and
xor
xor
cli
dec
test
scas
mov
and
adc
mov
sti
inc
imul
sub
push
sbb
scas
repnz
or
mov
adc
lods
xor
add
stc
mov
in
inc
int
lret
mulb
sar
cmpsb
lahf
jmp
cmp
mov
inc
shlb
sbb
cmp
pop
dec
pcmpeqd
xchg
gs
xlat
cmpsb
cltd
lea
xchg
mov
adc
jge
stc
loopne
xchg
test
in
dec
in
inc
cmp
cmp
xor
mov
and
jg
aaa
daa
inc
std
jne
shll
sub
out
add
mov
jg
fistpll
arpl
and
test
arpl
clc
rol
std
push
mov
add
out
incl
or
nop
sti
hlt
clc
mov
mov
fnstsw
mov
mov
add
sbb
out
imul
push
mov
mov
je
daa
jns
rcr
inc
lock
aas
gs
adc
dec
into
into
mov
faddp
sbbb
push
xchg
rorl
xchg
stc
mov
in
adc
mov
push
push
stos
add
test
decl
sbb
popa
lahf
push
aaa
push
stos
insl
mov
arpl
cmp
scas
loope
leave
arpl
pop
fstpl
pop
mov
out
icebp
add
or
mov
les
imul
data16
mov
pop
lcall
inc
dec
lock
push
mov
sarl
pop
xchg
xorl
and
sbb
lcall
aas
shrb
fdivr
stc
sbb
insb
ret
lods
or
leave
mov
push
mov
pop
jno
lock
bound
jb
mov
in
lcall
adc
stos
push
add
inc
out
jge
int
stos
popa
stos
mov
add
or
inc
mov
mov
sti
scas
or
and
pop
repnz
jmp
pop
lret
mov
add
lcall
pushl
sub
shrb
idivl
popf
mov
dec
adc
push
push
das
jmp
stos
gs
aaa
in
stos
cltd
sub
call
sub
imul
rorb
xchg
and
out
mov
imul
shll
mov
pushf
cwtl
test
pop
inc
mov
clc
xchg
push
sbb
in
out
xor
pop
inc
ficoms
jp
sbb
push
mov
ja
mov
xchg
mov
popf
add
sub
movb
mul
mov
add
pop
sbb
out
mov
push
inc
in
imul
mov
push
xchg
jmp
add
push
sarl
pop
or
mov
gs
xor
push
ja
out
cmpsb
inc
sub
jbe
fdivl
inc
sarl
push
or
out
push
call
xchg
lods
cwtl
mov
adc
lcall
push
arpl
cmpl
xor
int3
test
cs
pop
cmp
add
dec
ja
cmpsl
xchg
orl
cld
loopne
push
push
xchg
inc
cld
dec
ljmp
push
cmpsl
dec
test
cli
loop
idivb
mov
and
mov
repz
pop
rcl
fs
adc
cmp
sahf
in
scas
std
cmp
or
mov
inc
xchg
js
and
cmp
xor
inc
fmuls
sub
xor
or
mov
stc
xlat
push
movsb
aam
bound
mov
movsl
js
fwait
pop
push
sbb
add
sarl
test
aam
mov
and
push
test
sub
insl
out
mov
mov
xchg
loopne
clc
add
cmp
sub
sbb
loopne
sbb
cmp
test
cmpsb
xor
test
repnz
call
cld
lods
rclb
xlat
hlt
sub
and
je
int3
jae
and
add
pop
sbb
cmpsl
jo
jp
lret
and
movsb
callw
add
add
and
ljmp
cmp
mov
shrl
insl
scas
aam
push
xor
dec
addb
mov
clc
jg
out
cmc
xchg
popf
rorb
xorb
ret
rcll
nop
sub
ljmp
xchg
sub
add
push
ds
cs
stos
cmp
pusha
repz
push
mov
dec
push
inc
sub
dec
mov
dec
pop
jecxz
sub
out
mov
jecxz
fs
pop
ffree
or
enter
fnstenv
inc
and
cltd
cmc
cmp
test
hlt
jmp
inc
and
and
jbe
inc
adc
lock
sbb
inc
dec
jno
adc
icebp
lods
sti
mov
inc
mov
dec
ret
insl
xor
mov
in
push
stc
pop
mov
ja
sbb
push
popf
fbstp
xor
stc
cwtl
xor
aaa
test
sbbl
mov
sub
xchg
or
jno
push
jle
and
test
rorb
sbb
push
mov
and
inc
ljmp
arpl
xchg
dec
mov
jnp
and
cwtl
add
push
fdivl
call
daa
xchg
ror
bound
mov
add
sti
icebp
dec
ror
shl
out
dec
ljmp
jne
cmp
dec
lds
pop
dec
cld
mov
ret
mov
sbb
adc
insb
leave
loopne
shll
jo
loop
fs
aad
cli
add
in
sub
rcrb
bound
inc
bound
sub
leave
xor
xchg
sub
cmp
cmp
mov
repz
insb
movsb
repz
jmp
push
sbb
mov
in
jmp
fs
jmp
cmp
jg
inc
aaa
dec
dec
adc
mov
cli
adcb
scas
pushf
popa
popf
cltd
jbe
or
dec
add
mov
into
jge
mov
fidivrs
cmp
roll
mov
mov
fisttpl
mov
adc
jmp
xchg
mov
fnstenv
fdivl
mulb
sub
gs
sub
mov
jmp
xor
sbb
pop
mov
push
and
xchg
dec
mov
mov
or
mov
or
dec
mov
dec
xchg
mov
fstpl
xchg
insb
xor
cmp
hlt
sub
sub
repz
cmp
aad
insb
loope
add
scas
mov
sub
and
es
js
sub
subb
scas
or
cli
sub
ds
decl
ret
ret
cmp
add
mov
bound
inc
pop
fists
xchg
lods
addl
pop
cmpsl
pop
imul
scas
sub
add
daa
jg
cwtl
sbb
jo
xchg
les
aas
inc
pop
dec
xchg
sub
pusha
and
sbb
daa
lcall
xchg
in
das
dec
mov
test
lea
mov
pop
xlat
adc
std
or
xor
stos
jb
loope
ds
popa
adc
push
aaa
gs
push
outsb
sub
icebp
inc
test
icebp
scas
pop
lret
into
jno
sbb
jmp
fmul
xchg
push
add
jle,pn
flds
cmp
xor
push
into
xor
adc
mov
test
jae
jae
test
imul
cwtl
add
insb
shl
mov
dec
and
xchg
mov
cmc
popa
pop
ret
lods
stos
dec
pop
pop
popf
mov
jns
loop
push
fidivl
cltd
inc
push
jb
mov
fistpll
add
test
add
sub
push
pop
int
mov
cmc
pusha
sbb
sub
mov
test
dec
std
int
pushf
mov
jmp
cmp
out
stos
std
sub
mov
prefetch
and
jmp
adcb
aam
sub
call
mov
mov
sbb
lds
fisubrl
inc
cli
cmp
dec
and
mov
and
jns
inc
sbb
dec
aad
pop
cs
fstl
mov
ret
sub
mov
decb
ja
pusha
or
popa
mov
inc
addb
repz
cld
mov
fucomip
sub
sti
or
arpl
jmp
test
mov
popa
test
mov
int
mov
mov
sub
in
xor
pop
hlt
add
cs
xor
add
pusha
into
mov
pop
fildl
clc
leave
jo
loope
dec
idivb
sbb
mov
mov
fdivl
jg
sbbb
push
push
add
inc
lret
and
jge
mov
inc
and
jge
cs
mov
fldl
fildll
xchg
das
loop
mov
xchg
shrb
xchg
dec
sbb
or
jmp
xor
xlat
adc
xor
ss
sub
sbb
sbb
inc
test
addl
std
jns
scas
mov
inc
popf
fdivs
aad
andb
xor
cmp
mov
aad
lods
test
inc
fimuls
mov
ficoml
jo
fnstsw
pop
mov
roll
or
mov
popf
insb
xor
mov
in
xor
xor
gs
hlt
gs
lods
mov
cli
mov
mov
xor
and
push
mov
stc
pop
mov
daa
and
mov
fcomp
lret
add
scas
das
and
lock
sub
pop
pop
hlt
imul
jg
cs
hlt
sbb
aaa
mov
scas
lret
sbb
mov
scas
xchg
aam
scas
jb
faddl
cmpsl
scas
and
push
pusha
imul
push
mov
add
out
add
jg
leave
add
mov
add
xor
imul
pusha
std
or
adc
sbb
or
lods
hlt
inc
dec
pop
cli
jns
stc
imul
ljmp
cwtl
mov
adc
mov
mov
add
cmp
cmp
jbe
mov
xchg
xor
mov
mov
cmpsl
jne
mov
sub
jo
mov
iret
xchg
push
push
mov
data16
sbb
bnd
leave
adc
cmc
mov
add
adc
xor
sbb
stc
dec
push
add
data16
push
cmpsl
test
stos
loopne
cld
out
testb
repz
xchg
shlb
add
cmp
mov
inc
and
jmp
addl
push
and
cmp
pop
pop
push
inc
sub
push
mov
and
xchg
inc
insl
nop
sahf
push
into
into
push
je
cmp
xchg
test
xchg
add
sarl
fidivl
jle
insb
cmc
cs
jnp
xchg
mov
clc
push
dec
jg
enter
adc
cmp
jge
lea
push
stos
push
xlat
add
or
sbb
sbb
sbb
sbb
mov
aad
cmpb
js
and
imul
mov
je
xchg
add
sbb
xlat
xchg
ds
mov
xchg
adc
outsb
dec
mov
test
sub
pop
jae
adc
mulb
inc
push
iret
imul
stos
mov
scas
xchg
stos
ljmp
xlat
aas
jae
sarb
cmp
and
mov
call
or
stos
mov
sbb
add
fadds
pop
mov
jg
mov
mov
jl
sub
jne
in
push
pop
push
or
das
push
xor
sbb
jbe
push
ljmp
lea
jbe
ss
adc
outsl
pushf
push
add
js
xor
or
dec
sub
or
inc
jae
push
dec
pop
shll
sbb
or
ret
xor
sti
fistpll
js
lahf
mov
rorb
jae
scas
cmp
push
dec
push
jb
sub
clc
xor
and
lods
stc
filds
mov
push
inc
sub
pusha
adc
test
xchg
cmpsb
jno
mov
sbb
pusha
sbb
mov
mov
and
sbb
mov
fwait
jns
cltd
fwait
dec
push
add
fistl
loop
jbe
mov
pop
scas
jbe
jns
ret
sti
lds
popa
iret
sub
xchg
pop
mov
add
inc
dec
sub
push
add
hlt
sbb
and
lret
mov
mov
nop
push
jae
rorb
adc
sbb
or
outsb
sub
es
or
dec
decb
sbb
and
dec
cmp
add
jnp
stc
jge
jge
dec
xchg
inc
sub
xor
or
lods
repnz
jg
fwait
cmp
mov
fidivs
out
addr16
or
pushf
les
sbb
pop
sbb
ficomps
push
and
adc
lcall
mov
fcmovne
adcb
std
or
cmp
ljmp
mov
mov
cltd
inc
ficompl
lods
cmp
sbb
lea
jae
stc
roll
shlb
sub
push
imul
pop
xlat
test
jg
add
mov
pop
mov
scas
adc
fxch
leave
add
lods
cmc
or
fxch
loope
ja
or
mov
mov
xchg
mov
cltd
repz
pop
mov
cmpsb
add
or
arpl
ret
out
pop
ljmp
add
mov
ret
das
outsl
mov
adc
jbe
out
xchg
inc
fnstsw
cmp
xor
fimuls
lret
pop
movsl
ss
mov
cmpsb
loopne
sbb
rolb
clc
pusha
test
sub
lret
out
insb
sub
mov
push
imul
gs
xchg
ljmp
pushl
pop
mov
les
orb
add
stos
fildl
mov
xchg
cmp
scas
pop
mov
mov
lahf
push
pop
popf
jl
mov
fwait
jmp
sub
fwait
stos
xor
xchg
insl
sbb
sub
dec
push
mov
jg
lods
mov
adc
insl
into
test
sub
in
addr16
hlt
lret
shlb
mov
into
mov
adc
or
cmp
loope
adc
xor
xor
push
add
lea
push
dec
int3
and
pop
inc
sub
repz
fmuls
mov
sbb
jecxz
xorps
sbb
sbb
pop
push
fwait
popa
arpl
out
outsb
xchg
dec
pop
call
add
loopne
push
fwait
call
fists
scas
jge
cs
clc
cltd
mov
mov
push
jecxz
xchg
mov
adc
or
mov
mov
leave
and
test
shll
shrl
push
insb
or
cmc
cmp
je
repnz
hlt
testl
ror
sub
lds
jmp
adc
outsb
test
inc
push
add
jmp
popf
movsb
lret
adc
jno
inc
out
push
dec
or
push
xchg
out
lods
decl
or
push
xlat
and
ja
jmp
mov
cltd
int
push
sub
mov
scas
sub
icebp
jne
dec
sub
test
xchg
imul
loopne
popa
sub
jp
repnz
mov
sub
xor
lods
cwtl
pop
push
or
mov
xchg
lods
je
out
xor
sub
mov
mov
or
stc
inc
aad
lret
jp
xchg
aad
inc
dec
jnp
ljmp
cltd
adc
add
cli
mov
jp
sub
and
sbb
pop
mov
dec
sahf
dec
ja
and
ret
sub
dec
and
mov
adcl
out
sahf
dec
lret
sbb
fisttpl
insl
xor
shl
iret
cmpb
popa
jecxz
roll
fildll
dec
mov
into
mov
xor
ror
sub
sub
adcl
jns
push
arpl
ret
test
mov
push
insb
inc
das
mov
ret
imul
pop
dec
sarl
dec
sub
ja
push
cmp
shl
inc
sbb
rorb
in
jle
pop
pop
les
pop
gs
inc
xchg
cmpsb
mov
stc
shll
push
adc
push
add
out
shl
gs
fsub
test
js
add
ds
mov
sbb
fiadds
mov
hlt
and
push
fsubr
xor
sarl
xor
lret
cmpb
mov
push
cmp
fstpt
xchg
mov
fistpll
jp
inc
fiadds
arpl
pop
lods
jmp
xchg
pop
data16
shrb
mov
popa
mov
cmp
sbb
adc
stos
cs
call
push
and
aam
pop
ds
xchg
or
enter
fstl
sbb
rorb
mov
mov
inc
add
xorl
test
mov
je
xor
cmp
das
movsl
and
repnz
xor
stos
sub
mov
pop
repnz
inc
adc
pop
cmp
nop
adc
pop
mov
adc
mov
das
lret
push
in
or
jmp
pusha
in
daa
add
push
movsb
int3
jle
push
outsl
test
push
dec
aam
mov
adc
adc
adc
imul
je
inc
or
cmp
clc
push
popf
mov
jmp
push
sub
out
rep
in
xor
dec
mov
aas
aam
cmp
inc
outsb
jp
fistps
push
leave
in
les
xchg
xlat
shlb
imul
leave
mov
rolb
sub
mov
nop
cmp
xor
mov
lods
inc
movsl
rcll
bound
pop
dec
mov
popf
xor
sub
in
bound
fwait
push
pusha
imul
cmpsl
outsb
lcall
inc
cmp
into
and
incl
sbbb
out
mov
lods
and
add
bound
imul
mov
cmp
and
push
aas
mov
pop
fmull
jb
stos
insb
adc
sub
mov
sti
mov
xchg
mov
repnz
aas
lods
inc
rcl
icebp
rclb
aam
lods
rcrl
lea
je
loope
cmp
mov
call
jb
pop
loopne
cltd
pop
insb
xor
mov
lret
mov
add
lahf
test
pop
jno
addr16
mov
add
xor
fbstp
jne
pop
jb
inc
dec
fldenv
fistpl
into
xchg
add
mov
out
or
mov
adc
adcl
in
sbb
mov
xchg
xor
jbe
int3
mov
int
rorl
pop
in
lds
flds
pop
xlat
cmp
stc
or
insb
cs
sahf
ja
xor
jg
or
imul
imul
test
xlat
imul
mov
ljmp
adc
test
test
cmp
fstl
bound
dec
push
mov
scas
shlb
pop
inc
mov
sarb
mov
popf
or
push
sbb
pop
sahf
int3
mov
repnz
mov
int
shrb
test
inc
sbb
push
dec
mov
jnp
dec
cmp
cmovge
sbb
mov
xor
test
pop
arpl
ret
cmpsb
sub
out
dec
xchg
mov
cli
cs
fwait
imul
xor
pop
movb
and
lods
roll
imul
dec
xchg
adc
pusha
dec
loope
arpl
pop
shrb
arpl
icebp
call
pop
mov
jl
mov
inc
icebp
inc
imul
lock
push
cld
push
pop
and
sarl
lahf
mov
in
into
push
test
mov
jmp
push
mov
adc
mov
jns
int3
xor
inc
std
data16
xor
aas
or
and
shl
adc
mov
xchg
xchg
xchg
imul
out
pop
jmp
jnp
xorb
inc
adc
pop
leave
mov
xor
adc
mov
pusha
rolb
mov
mov
ret
mov
inc
leave
scas
scas
call
out
jmp
sti
pop
loop
cwtl
decl
jge
lret
jecxz
out
sti
clc
in
pop
or
mov
mov
inc
mov
cltd
out
clc
pop
and
stc
cmc
jp
lcall
jg
les
out
cmp
lods
inc
adc
inc
js
xchg
imul
imul
xor
jbe
cmc
adc
pop
push
lock
or
and
xchg
cwtl
fdivs
mov
sahf
sub
sub
insb
jns
xchg
divl
gs
mov
dec
ljmp
dec
xor
and
push
lds
cmp
push
jns
loope
test
mov
lret
stos
out
je
cld
or
adc
and
divb
bsf
fxch
data16
mov
fmull
jns
out
imul
xor
xor
imul
xlat
cmp
inc
sub
out
ret
dec
inc
xchg
sbb
sbb
push
hlt
ret
lahf
in
xlat
fldl
fisttpl
out
lret
imul
lock
nop
cmp
cli
jnp
mov
inc
xchg
test
jmp
std
mov
clc
fstl
repnz
dec
fidivrl
adc
mov
push
xor
xchg
xchg
mov
push
lock
xchg
test
cmp
xchg
inc
adc
sti
cmp
cmp
inc
int
shlb
pop
sub
cmp
ret
loop
fwait
sbbl
sbb
dec
mov
or
stos
xor
jle
das
movsb
add
jo
add
mov
and
loope
xor
adc
xchg
cltd
roll
push
xlat
mov
mov
int3
fisubrl
fucomi
or
fisttpll
lock
repnz
fxch
xor
out
pop
or
in
mov
mov
cmp
js
shll
jg
sbb
mov
imul
pusha
or
jge
cmpsl
lock
dec
faddl
adc
xchg
adc
cmp
fiaddl
rorb
or
push
aam
es
fs
orb
leave
out
ds
xchg
xchg
das
mov
dec
sbb
cs
ret
push
mov
sbb
sub
cmp
sbb
and
cwtl
shll
and
inc
xlat
mov
in
push
sub
jg
scas
jnp
lret
pop
mov
shlb
cmc
push
lea
jecxz
mov
movsb
rclb
stos
lock
dec
psubusw
scas
dec
adc
in
test
mov
jecxz
push
arpl
add
mov
pop
dec
gs
dec
pop
fisttpll
stos
call
jl
mov
mov
jne
add
adc
outsb
jmp
cmp
sbb
inc
xor
orb
ds
or
bound
or
movd
xor
inc
imul
lock
push
fwait
pop
jg
mov
clc
push
notl
aaa
iret
lcall
stos
int
push
xchg
mov
mov
adcb
loope
push
pop
int3
inc
ja
pusha
inc
pop
scas
mov
jmp
into
ret
mov
xchg
fstl
std
jo
fidivs
fstl
mulb
or
sub
fcom
adc
rol
lds
out
lret
scas
scas
or
int
and
xlat
out
xlat
pop
jg
xchg
in
ja
fistl
lret
mov
jg
cld
out
dec
jno
add
dec
cmp
sahf
testb
ljmp
mov
test
push
push
ljmp
and
push
adc
pop
push
stos
dec
push
idivl
test
ds
and
mov
and
outsb
dec
rcll
stc
clc
loopne
fdiv
lret
jle
push
inc
popf
mov
cld
add
stos
stos
and
pushf
cmp
adc
jne
xor
or
xchg
jno
mov
sbb
add
stc
adcl
je
adc
adc
cmpsl
in
push
inc
out
pushf
push
jmp
repnz
fildl
insl
aas
push
fdivrs
les
xchg
xchg
ret
clc
das
sbb
sub
testl
mov
ucomiss
and
out
ljmp
pushf
outsl
and
xchg
out
aaa
int
sbb
mov
shlb
jbe
nop
movb
leave
fs
fsts
pop
mov
pushf
mov
add
not
xor
testb
je
push
jecxz
push
fcoml
mov
lret
lret
insb
dec
call
push
add
jo
xor
shr
inc
xchg
stos
or
jecxz
cs
bound
pop
daa
enter
and
dec
das
push
or
inc
pop
pop
mov
les
fldenv
cltd
jae
fistpll
test
sahf
mov
add
daa
and
mov
fdivrs
jge
ret
push
mov
aad
mov
push
cmpsl
int3
and
inc
xor
xor
pop
aad
cwtl
mov
push
addr16
inc
mov
rcr
and
fnstenv
sbb
rcll
subb
xor
xor
insl
jno
cmpsl
addb
xor
or
stos
mov
int3
push
inc
popf
std
sbb
jne
stc
into
sbb
sbb
cltd
and
cmpsl
mov
add
mov
xchg
cmpsb
add
xorb
lret
lds
mov
xor
sbb
loope
mov
dec
sub
mov
add
adc
add
inc
loope
test
or
and
dec
jle
xor
or
mov
push
pop
or
mov
lods
out
lods
or
leave
shl
bound
stos
add
xchg
pop
and
mov
out
cmpsl
inc
sarb
es
sbb
ss
push
ds
popf
jbe
ds
stc
int3
sbb
in
aad
jb
es
lods
faddl
mov
les
clc
test
xchg
sub
lret
xchg
inc
insb
jmp
xor
dec
xor
jb
push
and
ret
xlat
aam
sbb
jmp
stos
int3
xlat
mov
mov
push
add
test
push
mov
pop
aas
sahf
adc
jae
jnp
mov
icebp
push
xchg
xorb
loope
mov
test
aam
jne
cld
sub
rol
add
lahf
jb
sbb
jl
mov
xchg
ret
lahf
adc
ds
fisubrs
aaa
inc
stos
cltd
fstp
stos
clc
stos
arpl
leave
pop
xlat
xchg
lret
jae
inc
stos
mov
lcall
lock
pusha
sub
stc
push
outsl
dec
ljmp
push
shl
call
or
out
mov
and
pop
push
inc
fmul
shlb
popa
add
lret
jp
pop
fidivl
jne
iret
xchg
inc
lret
sub
jmp
addr16
push
xchg
xchg
jo
inc
cmpl
mov
xchg
mov
rcll
dec
add
sbb
inc
out
push
jecxz
out
xchg
lods
mov
sbb
jnp
dec
or
aas
cmp
inc
pop
xchg
dec
xchg
stc
ss
sti
add
out
clc
clc
repz
stos
lret
repz
and
jbe
rclb
jae
lret
inc
repnz
jns
addr16
mov
inc
jg
js
cmp
scas
rorb
pop
icebp
dec
aad
mov
pop
xchg
inc
push
outsb
pop
jl
xor
dec
push
lahf
seto
das
push
pop
add
or
push
push
sub
movl
aad
add
push
jb
scas
xchg
wrmsr
repz
mov
aam
mov
insb
ja
inc
jbe
rorl
aam
popa
and
mov
popl
fs
jne
movsl
fwait
ss
imul
sti
adc
xor
movsl
push
inc
gs
in
and
and
shll
push
adc
dec
mov
mov
xor
stos
arpl
das
stc
rcr
enter
dec
mov
fcoms
scas
sti
mov
test
add
ljmp
fwait
jo
fsubp
push
mov
mov
ja
sbb
stc
jns
sub
inc
cmc
xchg
jmp
in
xor
cli
cwtl
ret
jo
pop
adc
cmp
mov
ljmp
lahf
enter
sbb
insl
pop
test
in
cmp
jbe
push
shlb
pop
mov
adc
pop
mov
ds
pshufw
xchg
or
in
sbb
inc
lea
inc
repz
movsb
jl
or
cmp
aam
add
int
push
fistl
inc
push
ret
adc
dec
iret
rcll
inc
cmc
ret
dec
jbe
movsl
in
mov
lods
push
in
jae
movsl
or
data16
jp
cmpsl
mov
dec
aam
andl
popf
rcrl
lret
jbe
jecxz
sub
xor
loopne
cmp
movl
dec
dec
sub
jp
pushl
imul
and
gs
adc
out
sbb
mov
push
fldcw
iret
dec
or
mov
adc
les
push
sbb
pop
ret
sahf
or
jb
jo
push
xor
js
sahf
adc
cli
pop
jp
rcrb
sbb
xchg
loope
clc
jns
mov
push
push
sub
jg
sbb
ds
xlat
xchg
int3
cmp
fwait
out
dec
add
js
inc
scas
fisubs
mov
pop
cmp
inc
pop
fldt
fyl2x
dec
repz
add
cmp
cmc
aad
pop
dec
mov
pop
sbb
or
aas
or
mov
pushf
jne
mov
int3
repnz
in
ret
in
lret
mov
clc
xchg
fwait
xor
insb
mov
out
in
rcll
xorl
pop
pushf
inc
out
xor
stc
cmc
orb
rorl
pop
fwait
or
sub
enter
das
data16
dec
add
imul
lods
add
test
xor
bound
jg
enter
outsb
imul
and
jmp
enter
xor
mov
lret
das
mov
stos
add
icebp
jmp
add
shl
data16
mov
mov
rcrl
jnp
and
cwtl
mov
shll
jle
xchg
test
ja
imul
inc
test
fsubrs
aad
shlb
js
je
addl
sub
es
push
movsl
popf
pop
fcmovu
pop
enter
push
popa
adc
fildl
js
and
xchg
or
xchg
mov
femms
dec
xchg
and
cmp
imul
imul
push
pop
cltd
aaa
fnsave
inc
xchg
aam
mov
and
popa
adc
cmp
jns
fwait
arpl
lock
mov
mov
pop
jecxz
pusha
push
sub
sub
jbe
fdivrs
sub
stos
add
bound
lock
js
pop
aad
into
int
dec
xchg
out
xchg
push
jnp,pn
dec
xchg
inc
sub
xlat
jbe
mov
lcall
mov
pop
inc
jb
inc
mov
in
or
adc
jnp
dec
push
aad
pop
test
pop
dec
imul
or
loop
jae
nop
scas
jne,pt
jge
cmc
rclb
scas
jae
cmp
fcoms
cltd
mov
fdivs
push
out
dec
xchg
jb
add
pop
or
or
mov
movsl
pushf
lahf
or
lock
ss
stc
imul
imul
call
jge
xchg
add
imul
sbb
insb
cli
je
mov
cmpsl
jb
mov
push
test
xchg
lea
inc
mov
add
jns
bound
lods
adc
xor
jnp
rorb
or
xlat
or
inc
inc
push
ss
push
push
aas
cmp
mov
mov
sbb
cmc
adc
mov
xor
add
dec
dec
inc
jns
add
and
mov
xchg
jp
fistl
fdivl
ljmp
mov
inc
xchg
stos
insb
inc
ret
sub
sahf
sub
pop
fisubrl
insl
mov
ds
mov
lret
push
cmc
loopne
inc
sahf
sbb
jge
popa
scas
inc
jmp
cmp
mov
adc
mov
push
cltd
inc
sub
jp
pop
dec
and
pop
jb
ja
cmc
jp
pop
xchg
inc
fdivs
adc
and
dec
pop
pop
inc
push
xchg
push
cmp
ja
movsb
adc
mov
inc
fsubrl
or
xor
aas
xchg
popf
xor
mov
add
mov
cmpl
sbb
hlt
fadds
cmpsb
cld
cmpsb
sbb
int
icebp
push
mov
jnp
sbb
cmp
mov
xchg
shlb
aad
lock
fstpt
fldenv
icebp
push
mov
ljmp
into
inc
jle
cmp
jecxz
mov
js
push
mov
lock
cmpsb
aas
sti
call
and
repz
sub
jnp
xor
cmp
aas
push
stos
out
hlt
jmp
jbe
not
repnz
icebp
test
xchg
out
dec
push
pushf
cld
aad
mov
mov
insl
cmp
mov
pop
in
mov
jmp
mov
sbb
insl
inc
adc
out
inc
push
pop
and
sahf
fists
jle
addb
mov
fbld
xchg
xchg
sub
sbbl
sbb
pop
je
cmc
inc
gs
movsb
call
mov
mov
pop
push
sbb
cmp
stos
pushl
lcall
ret
insb
data16
test
cmp
mov
sbb
cmp
call
lea
push
mov
jmp
jle
ficompl
mov
inc
pop
dec
js
jae
pop
std
out
cmc
sub
aam
and
inc
mov
mov
adc
iret
cmpb
dec
insl
dec
inc
push
lret
xor
mov
aam
add
test
sbb
xor
xor
imul
fcmovbe
inc
inc
xchg
repnz
ret
lahf
sbb
out
or
pop
pop
inc
inc
xlat
lret
in
test
mov
in
addl
mov
mov
adc
mov
gs
xchg
dec
lods
cwtl
call
loop
mov
rorb
or
cs
iret
dec
push
push
add
adc
inc
into
lock
loop
push
enter
gs
int3
xchg
out
icebp
sbb
pop
jp
bound
and
jmp
aam
xchg
xorb
push
shlb
pop
out
aaa
xchg
inc
pop
imul
jns
add
pusha
push
or
xchg
inc
dec
jmp
adc
outsb
rcrb
xchg
add
mov
fdivrl
pop
pop
sub
and
aad
xor
scas
repz
int
cmpsb
xor
inc
push
pop
adc
data16
out
notb
xchg
and
sahf
add
mov
loopne
adc
fs
or
out
scas
test
stos
jmp
mov
lret
fwait
push
call
or
xchg
dec
jmp
jnp
jbe
xchg
push
pop
out
jl
pop
clc
pop
pop
fs
daa
cs
sbb
jg
sbb
insl
xlat
dec
push
ljmpw
mov
jns
imul
daa
lret
outsl
jb
data16
lds
popf
or
xor
cltd
and
test
sub
fs
pop
push
fmul
iret
shrb
xchg
cmp
es
sbbl
lods
sub
insb
jecxz
adc
jg
cmc
dec
or
sub
outsb
stos
pushf
sub
inc
mov
rolb
mov
adc
pop
clc
clc
adc
jae
popf
sbb
fdivl
fistps
data16
pushf
cltd
cmp
loope
dec
inc
push
cmpsl
dec
cmp
sub
movhps
and
dec
fwait
arpl
aam
mov
ret
mov
add
push
fs
lods
lock
mov
adc
add
ss
insb
cmpsl
adc
stc
fwait
out
jle
lret
rcrb
mov
nop
adc
std
into
and
aaa
or
mov
in
pop
sti
cmp
loope
sti
cmova
mov
xor
addl
dec
in
cltd
aad
and
inc
xor
mov
xchg
daa
xchg
jbe
pop
and
pop
lret
mov
pop
push
xchg
ss
cmpsb
fnstsw
mov
shr
xchg
mov
mov
call
addr16
scas
push
sbb
xchg
mov
cli
inc
lcall
sub
aad
inc
fstpl
dec
pusha
cli
jge
jp
adc
mov
cmp
xchg
std
adc
pop
divb
pop
sbb
inc
pusha
int3
pop
adc
neg
sbbl
pop
fld
in
fiaddl
inc
shlb
lea
out
push
test
sbb
rcrl
dec
in
inc
repnz
shrl
cs
outsl
ljmp
mov
js
test
inc
popf
imul
jno
pushf
sub
cmp
and
dec
dec
into
pop
insl
push
shl
and
fiadds
sub
addr16
test
cmpsb
repnz
in
fsubrs
push
jge
js
mov
mov
repz
test
loop
mov
pop
mov
pushl
push
or
xchg
inc
bound
jp
sbb
mov
sbb
dec
xchg
popa
push
push
push
mov
aam
out
mov
test
xchg
mov
inc
lea
int3
call
lahf
adcl
mov
mov
and
sbb
call
cld
inc
lods
addl
mov
sbb
cmp
sub
aaa
pusha
je
dec
sar
es
push
in
cmp
mov
hlt
cltd
xor
sub
mov
or
push
gs
push
jb
fst
cltd
in
pop
ja
das
and
das
add
sub
inc
jmp
std
xor
mov
jg
pusha
movsl
push
xor
sbb
add
mov
sbb
sbb
adc
push
add
scas
add
push
sbb
push
data16
inc
in
cli
or
mov
dec
call
mov
sarl
imulb
mov
int3
outsb
js
sub
inc
push
outsl
add
fcoml
sub
les
cli
movsl
in
cli
pop
icebp
mov
test
loop
daa
fucomi
inc
movb
jle
leave
mov
or
ffree
in
or
cmc
divl
int
mov
lods
push
aam
rep
and
lahf
mov
fcoms
sub
cmc
push
out
das
aas
data16
fwait
fs
push
or
pop
mov
dec
cmpsl
jnp
enter
cmp
ret
ja
jae
jo
mov
addr16
and
cmp
mov
jmp
lods
dec
int3
out
mov
lret
add
leave
enter
scas
push
enter
and
pop
aaa
loope
std
movsl
out
cmpsl
sbb
add
rcrb
dec
fisubrs
jp
jb
mov
data16
push
sar
stos
and
or
and
nop
cli
pop
enter
add
add
adc
lahf
ljmp
inc
push
push
cmpsb
std
ret
cmp
or
push
fwait
repz
push
test
push
adc
inc
pushf
mov
and
xor
sbb
ss
or
stos
mov
pop
cmp
mov
cld
int3
or
mov
test
rep
mov
sub
es
test
jl
data16
mulb
cmp
sar
push
insl
insb
pop
bound
testb
xchg
gs
mov
loope
cmp
or
cltd
cmpl
addr16
and
xchg
test
popa
popf
insl
scas
pop
xchg
sub
add
cmpsb
test
ja
pop
xlat
lcall
add
popa
sti
xchg
xchg
loop
add
mov
xor
aas
push
ljmp
xchg
out
aas
adc
enter
adc
lahf
dec
mov
mov
movsb
gs
mov
cmp
outsl
mov
cmp
mov
rcr
mov
mov
adc
ror
fwait
rolb
jp
push
and
sahf
fdivrs
push
rcrb
and
push
dec
and
pushl
dec
test
aad
aas
roll
out
adc
mov
into
addr16
sub
psubsb
pop
in
in
dec
test
clc
jmp
jge
and
lods
xchg
push
dec
xchg
pop
adc
dec
cwtl
test
mov
cmp
jg
inc
or
inc
repz
xor
add
xor
mov
add
add
adc
ljmp
bound
adc
mov
sub
sbb
in
xchg
out
mov
test
in
test
add
and
clc
fwait
bound
outsb
xchg
imul
stos
daa
xor
or
mov
and
xlat
aam
or
in
iret
adc
dec
loope
mov
repz
push
sbb
cld
adc
mov
bound
popf
xor
xchg
jl
jo
inc
sub
mov
mov
insb
inc
js
aas
pop
adc
movsl
add
ds
pusha
mov
mov
or
dec
xchg
and
adc
test
jae
scas
mov
mov
outsb
rcll
push
push
nop
inc
xor
sub
inc
or
pop
xor
jnp
cli
pop
pop
lret
sub
xor
out
lret
sbb
push
psubusb
mov
outsb
and
mov
push
dec
mov
or
mov
inc
mov
das
hlt
test
aam
xchg
or
mov
loope
jecxz
add
inc
in
mov
in
jmp
xchg
cmc
push
int
push
add
xchg
mov
mov
jle
les
cmpsb
xchg
mov
jb
pusha
enter
mov
data16
incb
cmp
fldl
add
jp
movsl
jns
js
enter
mov
call
in
es
sbb
mov
lret
negl
movsl
jp
fwait
pop
in
insl
fcomps
mov
pop
in
lock
iret
mov
mov
fcompl
adc
sbb
imul
dec
mov
push
out
pop
add
lea
jne
pop
mov
inc
xchg
cld
fwait
popa
loope
xchg
sahf
or
lret
into
ljmp
and
into
leave
les
jl
add
and
imul
mov
int3
inc
movsb
xor
add
movsb
arpl
xchg
push
mov
sbb
sub
lea
pop
sti
out
sbb
aam
int3
dec
jmp
pop
cmp
lods
dec
repnz
or
movsl
push
outsl
sub
and
mov
inc
xlat
xchg
jle
xor
call
daa
orb
std
inc
sub
xor
cmp
popf
mov
mov
fcomps
mov
mov
pop
lret
ficoms
sbb
pushf
movsb
push
gs
sub
fldl
data16
cmp
iret
and
repnz
nop
inc
pop
into
out
pop
mov
adc
cmp
fwait
popa
and
add
imul
xchg
inc
scas
add
pop
adc
mov
rol
or
sub
popf
mov
sub
ds
call
iret
xor
dec
lock
pusha
or
test
aam
lret
ljmp
outsb
mov
mov
cmp
pushl
std
cmp
xor
das
not
ljmp
pop
mov
push
mov
ret
inc
or
add
lcall
dec
mov
xor
sbb
pop
cwtl
in
aad
mov
inc
in
cmp
and
cmp
jo
add
sbb
cmp
xchg
or
mul
xchg
jnp
add
and
ds
lahf
into
icebp
jae
inc
xchg
mov
push
xchg
ja
packssdw
sti
jns
movsl
ror
cmp
std
pop
sub
sti
jne
pop
push
xor
daa
lret
cmp
dec
loope
sub
add
mov
push
xlat
or
loope
xor
movsl
mov
pop
fisttpll
scas
aas
jge
stos
lcall
ds
stos
adc
jge
push
push
aaa
mov
add
xlat
lret
lea
stos
ljmp
mov
mov
mov
push
dec
inc
hlt
pop
movsl
or
pop
into
push
leave
stc
sub
add
dec
push
rorb
mov
divb
ljmp
push
out
cli
adc
jne
test
repnz
mov
in
sbb
mov
sarb
imul
in
not
je
and
fildll
mov
xor
lods
dec
or
jbe
sbb
sub
sbb
cld
adc
pop
xor
inc
cmpsb
xchg
js
insb
jae
and
out
imul
xchg
loope
jl
notl
outsl
fs
mov
shlb
mov
add
stos
jle
test
lcall
cwtl
add
loope
adc
lods
sbb
jb
fs
lds
push
cmp
and
in
xor
fadd
aam
dec
pop
test
push
mov
insb
cmp
pushf
nop
decl
xor
ja
jecxz
mov
sub
adc
sub
xchg
lods
rol
roll
rclb
dec
mov
stos
out
pushf
out
mov
push
push
sub
jno
jne
in
std
ds
in
and
scas
test
lods
aam
xor
std
jnp
fldcw
push
inc
xlat
loope
sub
xor
inc
pop
jmp
lds
das
leave
dec
fwait
mov
mov
dec
pop
into
pushf
mov
test
mov
lret
jae
pop
out
inc
xchg
fdivl
add
test
call
xchg
mov
mov
mov
mov
inc
clc
dec
gs
pop
aaa
jp
xchg
lods
adc
hlt
call
mov
leave
xor
aas
mov
adcb
add
cmp
pop
cmc
dec
fs
fsts
xchg
es
in
mov
sahf
and
jg
xorb
xchg
dec
jecxz
mov
mov
shrb
sti
xchg
or
dec
jmp
mov
push
sub
dec
cmp
jbe
orl
lock
dec
pop
fistl
mov
arpl
repz
jae
mov
add
add
fmuls
mov
and
testb
fsts
aam
fs
dec
bound
lods
lods
aad
out
xor
inc
dec
inc
push
fimull
out
shr
sbb
leave
out
mov
fisttps
aad
aaa
cmpsl
push
inc
push
dec
sub
add
cmp
mov
push
aad
jmp
push
jge
js
jae
jmp
jae
shrl
sbb
or
jge
loop
jmp
in
arpl
scas
sar
mov
jle
add
shl
imul
cmp
pop
std
xchg
or
jg
fdivrs
out
test
inc
add
outsb
mov
mov
mov
lret
mov
jnp
mov
mov
mov
shlb
push
loop
lahf
hlt
jg
mov
jg
xchg
push
mov
popa
lcall
jg
mov
push
mov
push
lods
cmp
ljmp
dec
cwtl
mov
inc
jl
or
and
inc
cmpsb
xlat
add
aas
rolb
xchg
jp
sahf
sbb
repnz
add
or
dec
loope
bound
into
xlat
outsb
mov
test
push
sahf
jb
dec
mov
fcmovnu
les
inc
rclb
or
mov
hlt
test
fcoms
xchg
imul
sub
pusha
push
inc
dec
test
mov
ret
mov
fcoml
or
adc
out
xor
xchg
push
mov
int3
lahf
jl
xchg
cmp
lock
pusha
sub
stos
mov
lock
and
and
xchg
mov
daa
addr16
in
push
cwtl
int3
ljmp
add
fs
cwtl
pop
arpl
out
mov
scas
std
and
or
cwtl
pushf
and
adc
rolb
insb
add
xor
jl
sub
in
leave
mov
sub
dec
cld
dec
cmp
jle
jne
stos
xor
add
sub
mov
jp
div
lock
lret
sub
andl
sub
adc
xlat
fisttps
cmp
subl
and
int3
jnp
cwtl
push
hlt
arpl
out
sarl
or
dec
insb
shl
lcall
xchg
out
or
lret
int
lcall
out
xchg
call
insb
adc
leave
add
dec
push
and
insl
or
mov
jmp
xchg
mov
cmpsl
cld
mov
mov
insb
or
rcll
xor
es
cmpsb
push
popf
or
jg
fwait
fwait
mov
jg
add
lahf
repz
cltd
push
mov
mov
xlat
pop
loope
test
xchg
lods
xor
sar
outsb
pop
xchg
dec
nop
lret
data16
mov
pushf
xor
mov
add
cmpsl
sub
sbb
pop
pusha
pop
inc
gs
fcompl
cwtl
sarb
add
and
sbbl
mov
ret
js
pusha
xor
push
xor
nop
push
xor
aas
ljmp
mov
pop
push
pop
ror
rolb
cmp
sbb
pop
jo
pop
mov
mov
mov
sahf
xchg
jle
loop
xor
test
cmp
mov
and
mov
ret
push
and
ljmp
icebp
rcrb
mov
mov
or
dec
pushl
dec
mov
add
stc
bound
repnz
sbb
rcll
loope
mov
dec
sbb
into
jge
xorb
scas
popa
popf
jae
aas
sahf
outsl
add
in
in
dec
pushf
xor
push
dec
adc
mov
push
mov
sbb
loopne
in
dec
add
lds
jns
sub
lahf
push
xor
sub
in
sti
xchg
pop
insb
es
lods
or
pop
push
imul
clc
gs
ljmp
push
jg
jp
push
and
cmpl
xchg
outsl
mov
test
cli
imul
cmpsb
decl
mov
ret
jecxz
int
or
sbb
mov
cli
xor
std
mov
test
adc
push
cld
stos
movsl
insb
xor
mov
loopne
mov
out
adc
sarb
rcl
sbb
sbb
lods
incb
jmp
xlat
push
jecxz
lds
pop
jmp
addr16
arpl
lret
jp
imul
or
jge
mov
popa
scas
pop
xchg
in
cmove
ror
mov
add
xor
dec
xchg
inc
stos
aad
mov
push
sbb
adc
xchg
or
add
cmp
loopne
and
cmpsb
mov
and
xchg
push
stc
add
or
xlat
adc
xchg
push
insl
popa
xor
push
sbb
mov
and
pop
adc
mov
rorl
xchg
test
fildll
mov
pushf
ss
pop
out
out
data16
mov
or
mov
mov
incl
push
sbb
lods
inc
bound
jb
add
inc
add
cld
sub
and
or
mov
add
push
sub
sub
fnstsw
mov
lods
sarl
dec
push
stc
push
les
lods
je
add
sbb
jae
cmp
push
mov
imul
mov
dec
arpl
insl
repz
clc
ljmp
push
inc
outsl
mov
fdivs
fadds
fdiv
cmpsl
push
cmp
ja
push
add
adc
cld
mov
fidivrs
add
inc
daa
sti
pop
mov
jg
mov
mov
sbbb
mov
das
jne
add
xor
rcrb
adc
sbb
xor
jo
pushf
loopne
into
and
adc
mov
inc
mov
push
movsl
push
dec
imul
ror
pop
aas
mov
fistpl
repnz
jb
push
cmp
ret
shll
cmp
rcl
pop
arpl
scas
inc
fidivs
flds
testb
insl
int3
repz
sbb
cmpsb
inc
push
xor
fidivrl
in
or
and
sub
jne
jecxz
outsl
mov
das
repnz
pop
test
xlat
mov
inc
inc
fs
sbb
push
jne
lcall
iret
loopne
mov
cmpsb
or
out
jp
cs
push
mov
test
outsl
or
sub
cmc
jmp
imul
cwtl
jno
jge
sub
test
mov
mov
fsubl
pop
xor
sbb
sbb
call
cmp
inc
in
je
mov
cmp
jae
xchg
push
mov
fidivrs
jle
clc
jp
lret
in
pop
sbb
and
and
sti
adc
push
stc
and
pop
dec
stos
outsb
insb
dec
addr16
dec
jno
jp
icebp
icebp
sub
ret
jg
push
sub
pop
mov
rol
mov
jo
jae
jecxz
sbb
push
xchg
lds
sti
jmp
incl
push
cwtl
hlt
enter
mov
and
cltd
mov
jl
repnz
mov
inc
nop
mov
aad
sub
orb
roll
push
add
pop
push
pop
push
lods
pop
push
in
xor
popa
pop
or
xchg
cwtl
jle
sub
add
add
jnp
xchg
jns
push
cltd
jg
or
and
push
loope
popf
popa
rcrb
sti
cld
pop
mov
push
xor
jle
mov
lea
stos
xchg
fs
shlb
stos
mov
mov
jns
pop
aas
or
xchg
and
mov
jne
test
and
jb
fcomps
sahf
xor
xor
dec
cmp
mov
loopne
aas
icebp
xchg
aas
aaa
cmpb
test
std
aas
int3
push
sub
fnstsw
adc
and
jl
pop
push
push
fmull
xor
icebp
repz
aas
and
pop
lret
adc
jbe
jp
jle
movsb
cmp
test
insb
hlt
dec
pusha
inc
mov
inc
xchg
jo
aad
iret
mov
xor
aaa
movsb
adc
push
sbb
jne
inc
xchg
push
and
ret
cld
jno
xchg
add
mov
fwait
test
movsl
xchg
fs
and
xor
add
and
push
outsb
push
scas
add
adc
inc
inc
subl
pop
loop
call
lret
cmp
aam
xor
outsb
cmp
push
push
jae
push
xor
pop
push
mov
sbb
xchg
clc
cmp
bound
lcall
push
add
jecxz
xlat
test
and
cmp
and
sub
rorb
fistl
testb
pop
inc
push
rcrl
dec
mov
add
aad
insb
ret
pop
jl
fisubrs
scas
popa
repz
and
jl
das
jno
fstl
loopne
das
jns
mov
mov
cli
les
loopne
sub
imul
pop
fisubs
mov
movsb
xchg
fcomps
lods
jmp
insb
mov
imul
les
int
sub
roll
aam
dec
mov
cmpsb
mov
inc
and
imul
rcll
andb
cmp
cwtl
pop
mov
mov
dec
inc
out
mov
imul
fidivrl
cwtl
ucomiss
fdivs
add
ds
jbe,pt
mov
sbb
cmp
mov
addr16
dec
imul
rolb
jmp
dec
mov
mov
pop
scas
push
or
imul
mov
dec
scas
cli
test
sub
inc
push
out
lock
cmp
jns
xor
test
cld
inc
repnz
mov
loopne
insl
adc
jb
jecxz
rcll
jp
ss
loop
into
pusha
and
pusha
adc
sub
sub
add
sbb
test
push
jne
push
in
dec
dec
filds
mov
push
rcll
push
push
aam
inc
les
sarl
das
les
ja
outsl
movsl
mov
test
lea
lcall
jle
data16
into
xor
enter
push
jb
sub
push
enter
mov
movsl
insl
mov
lods
or
jg
shrl
aad
aaa
es
popa
cmp
mul
cmpsl
imul
cmp
addr16
mov
lock
cld
imul
xchg
leave
push
xchg
cld
xchg
cmpsb
std
push
in
pop
mov
fimull
fmuls
ret
adc
fldenv
xchg
and
sub
cs
jns
fistpll
or
add
add
xor
out
dec
pop
mov
cmp
push
pop
cwtl
push
add
lret
test
cmpsb
fidivs
mov
in
outsl
jle
jmp
stos
out
cltd
fdivl
cmp
pop
sub
jmp
inc
mov
sbb
xor
or
adc
test
jl
sbb
ljmp
lock
fs
stc
add
sbb
xor
xchg
push
pushf
out
mov
fdivrs
mov
ljmp
pop
xchg
ja
daa
shll
scas
push
xlat
arpl
lock
sbb
xor
into
ljmp
sbb
adcl
dec
fdivrl
pop
add
xor
mull
inc
out
mov
and
imul
scas
imul
and
mov
adc
std
push
inc
xchg
mov
sub
popa
dec
movsl
push
adc
mov
add
and
insb
scas
xor
mov
in
push
jno
scas
inc
xor
add
mov
xor
xor
call
jmp
sarl
xlat
test
sti
test
insl
sahf
or
pop
out
scas
lret
xchg
int
mov
lds
in
leave
adc
shrl
adc
js
jg
mov
fprem
addr16
ret
insb
mov
push
hlt
das
xor
loopne
add
daa
and
dec
jg
aad
lret
cmc
cmp
cmp
jnp
mov
xor
inc
dec
xchg
mov
mov
xchg
mov
inc
nop
out
inc
mov
xor
jg
or
in
fcom
adc
aas
sbb
push
jb
cmpsb
xchg
jecxz
lret
aaa
daa
xor
pop
mov
out
or
shlb
push
insb
push
stos
jp
xchg
test
adc
push
sub
clc
inc
jmp
outsb
outsb
shrb
aad
mov
ja
xor
dec
mov
fisubl
mov
stos
ljmp
neg
mov
xor
iret
insl
or
sub
sub
ljmp
out
mov
cmp
cld
cs
mov
js
sub
and
xor
cmp
stos
pop
pushf
push
jmp
mov
in
xor
imul
scas
mov
pop
push
loope
mov
xorb
pop
scas
in
mov
add
add
mov
out
daa
xchg
pop
add
mov
adc
stos
jl
add
xor
mov
ret
add
mov
mov
popa
icebp
iret
hlt
cli
call
imul
dec
shl
and
in
sbb
hlt
scas
adc
xor
adc
add
jg
inc
sub
mov
or
add
test
mov
and
fsts
mov
add
mov
jg
and
std
mov
add
aaa
ret
out
add
or
int3
push
sbb
cmp
in
ja
je
push
mov
repz
jmp
sub
mov
pop
out
cmpsb
imull
sub
std
jnp
cmc
fstps
repz
mov
daa
lods
mov
inc
loopne
sub
xor
rolb
in
fisubrl
dec
loopne
jle
lods
cmp
insl
shlb
jns
test
adc
jp
fwait
in
lods
test
push
sbb
popfw
imull
sbb
jmp
and
daa
jns
std
test
mov
flds
es
and
decl
xor
ja
ja
and
pushf
and
cmpsl
xor
and
and
test
roll
out
arpl
ja
adc
push
test
sbb
mov
sub
inc
jbe
insl
mov
xchg
mov
push
xor
inc
adc
push
xor
sbb
jecxz
leave
mov
jnp
sbb
pushf
mov
out
sti
into
daa
jl
mov
insl
clc
mov
mov
and
mov
sti
push
add
xchg
and
inc
in
aam
stos
insb
adc
lock
sub
daa
push
lret
out
pop
pushf
pushf
xor
cwtl
ds
pop
cmp
xchg
cmpsb
xchg
jno
test
aam
outsb
ret
sahf
sbb
cmc
mov
std
and
out
cmpsl
cmpsl
loop
mov
loope
cli
scas
push
jecxz
imul
push
mov
and
out
pop
fcomps
rorl
cmp
xor
jge
pop
cmp
test
mov
or
popa
addr16
in
mov
sbb
pop
add
pushf
adcb
stos
jp
dec
push
int
inc
pop
out
lock
mov
repnz
jl
xchg
outsl
outsb
popa
inc
sub
or
mov
clc
stos
mov
mov
xlat
outsb
push
mov
es
pusha
ss
push
sbb
hlt
hlt
aam
inc
int3
fnstcw
push
test
xor
jne
and
dec
sub
imul
fildl
out
add
das
push
test
xchg
mov
ja
xor
sti
in
lods
add
adc
iret
insl
mov
cmpsl
jns
and
ds
ljmp
leave
inc
mov
adc
data16
leave
ljmp
jg
adc
mov
jb
pop
jg
scas
mov
enter
les
stos
mov
enter
aad
mov
ds
stc
adc
xor
in
ss
fstpl
pop
loop
fwait
jbe
mov
je
lret
xor
fimull
mov
out
pop
add
outsb
ss
cld
add
popf
dec
stos
sbb
pop
lods
arpl
xchg
divb
cmp
dec
pop
roll
shrb
cmp
mov
mov
mov
nop
fisttps
jmp
fst
add
insl
insb
test
xor
out
cmp
bound
xchg
stos
pop
add
adc
mov
dec
popf
incb
testl
mov
mov
aas
ffreep
xchg
aad
cmp
inc
js
sbb
and
dec
adc
inc
cmp
cmp
addb
push
xchg
or
ror
clc
fsubl
inc
mov
xlat
or
push
lock
in
fwait
inc
and
push
sub
fstps
or
mov
movsb
les
sbb
pop
cmp
popw
mov
aaa
fbstp
push
popf
adc
outsl
popa
mov
mov
xchg
mov
adc
scas
and
inc
mov
pop
push
push
push
frstor
sarl
pusha
inc
xchg
mov
movsb
and
xchg
icebp
je
or
fimuls
sbb
lock
out
notb
or
adc
or
xchg
out
add
outsb
adc
in
popaw
mov
xchg
jne
adc
orl
fwait
adc
jb
cld
pop
or
inc
push
or
xlat
outsl
bound
mov
ja
push
mov
mov
xchg
jecxz
iret
and
sbb
imul
xchg
lock
in
sbb
cmp
out
inc
icebp
movsb
into
or
jl
mov
addr16
jl
sub
jnp
stos
and
movb
jmp
inc
add
les
ret
adc
fdivrp
mov
inc
fs
cmp
pop
mov
bound
mov
ret
movnti
pop
jno
push
mov
sub
mov
outsl
bound
push
les
call
fisubrs
mov
push
xchg
cmp
fstpl
inc
mov
xor
push
cmpsl
pop
and
jp
jg
lret
ljmp
iret
js
and
pop
xor
outsl
pushf
jge
mov
divl
push
popa
mov
mov
xchg
jbe
mov
lods
int3
test
stc
cld
adc
jl
mov
and
movsl
scas
fs
sub
xchg
test
loope
mov
and
iret
pushf
jecxz
cld
mov
fsubs
adc
push
push
mov
xlat
mov
mov
add
or
or
jl
out
sti
jae
fcmovnb
mov
imul
mov
cli
xor
jb
aaa
push
jg
dec
inc
sbb
mov
sub
cwtl
hlt
dec
mov
xor
mov
add
cmp
jle
pop
cmpsb
pop
xor
push
call
iret
mov
ret
cwtl
or
push
fcom
jge
push
mul
rcll
enter
clc
dec
add
icebp
jmp
pusha
pop
push
sahf
in
push
pop
jmp
sbb
push
stos
push
outsb
jne
pop
rorb
mov
push
jl
xor
jge
lret
aam
out
lods
insl
pushf
xchg
push
or
push
inc
lret
inc
xchg
jg
push
mov
insl
imulb
mov
and
xchg
xchg
sbb
lcall
pop
mov
ljmp
aam
xor
xor
cmp
nop
cmpsl
and
mov
loope
inc
fistpl
or
gs
testb
xchg
inc
sbb
mov
sub
inc
push
mov
push
iret
cld
or
cmp
cmp
mov
push
pop
mov
or
or
incb
lea
aaa
pop
les
cmp
mov
mov
push
leave
cltd
push
shl
mov
lock
subb
dec
xor
je
int3
jne
adc
jmp
movsl
mov
lret
push
dec
ffreep
cli
cmp
mov
shlb
adc
add
push
test
add
dec
inc
shl
jle
lock
add
stc
cmpsb
sub
jp
enter
and
push
iret
sbb
adc
xchg
jb
std
js
cmp
dec
and
js
jg
jg
test
push
adc
sub
sub
or
pushf
fldenv
jg
push
add
pop
xor
test
in
pop
into
mov
scas
shrl
sub
jle
repz
mov
div
mov
cmp
sub
cmp
lret
mov
or
in
sbb
mov
and
enter
jle
sbb
outsl
sub
daa
add
mov
or
sub
aad
adc
sub
add
loopne
fs
lret
dec
in
std
loopne
enter
insl
pop
nop
xchg
add
dec
sub
je
mov
cmc
inc
out
sub
icebp
jle
jmp
rorl
daa
pop
call
pop
cld
cld
nop
xchg
sbb
int
add
pop
or
pushf
dec
test
sub
cmp
push
mov
in
mov
stc
rcrl
lods
push
idiv
adcb
mov
cmp
push
mov
insl
test
dec
mov
mov
ret
mov
out
pop
pop
hlt
xchg
mov
jnp
or
pop
inc
sub
jmp
xchg
jb
popf
lret
popa
cltd
loopne
pop
adc
push
push
xchg
add
punpckhbw
mov
popf
or
push
pop
loope
rolb
out
cmpsb
dec
adc
dec
mov
enter
sbb
outsl
icebp
adc
sbb
dec
lcall
mov
add
scas
decl
jg
popf
lret
test
xor
cli
test
in
xor
stos
sub
jg
or
sub
dec
pop
cmp
sub
nop
jecxz
xor
cmp
fcmovnu
shrb
decl
mov
push
jnp
mov
push
jg
jmp
stc
stc
loop
cld
dec
mov
cltd
out
test
cld
cmp
pusha
xchg
cmpsb
aas
cmp
jno,pt
and
cmp
xchg
pop
xchg
mov
cmp
rorl
inc
xchg
jl
sub
jb
or
pop
push
mov
lret
sahf
inc
jmp
adc
sbb
aaa
scas
mov
or
mov
loop
aam
inc
mov
xor
cmpsb
xchg
imul
imul
sbb
fcoml
xchg
ret
int
ret
lods
pusha
mov
and
stos
lock
inc
daa
js
inc
shr
jae
cmp
pop
lahf
or
sbbl
or
inc
jae
xor
fnstcw
or
sbb
fistpll
or
mov
xor
cmpsb
mov
sbb
jmp
or
push
cld
pop
xchg
jne
hlt
xor
lods
sbb
loope
out
ds
xchg
popa
mov
cmpsl
and
sbb
mov
mov
repnz
popa
enter
sub
addr16
aas
jbe
add
insl
pop
cltd
fadds
hlt
or
mov
rol
cmc
adc
or
out
pop
jmp
lock
add
cwtl
lcall
mov
scas
mov
movsl
and
adc
jae
mov
negb
pop
mov
sub
lea
lods
sub
les
mov
pushf
pushf
sub
and
add
fmull
adc
cmp
test
fdivrs
fs
xchg
pop
pop
stos
ss
dec
xlat
adc
lahf
add
sbb
loopne
jmp
dec
dec
fs
inc
inc
mov
aam
nop
lret
aas
and
xchg
sub
jae
arpl
int
sub
mov
push
xor
jecxz
lcall
cmp
jbe
sar
jne
inc
inc
mov
inc
mov
sub
inc
jg
out
adc
cwtl
add
or
push
push
int
jg
adc
stc
cld
popf
xlat
insl
mov
jmp
sbb
mov
cmp
test
add
into
sbb
imul
mov
ficoml
outsb
xor
or
mov
mov
cmp
pop
push
push
jnp
ds
push
adc
lea
lret
fs
mov
and
sbb
fnstenv
movsl
jo
arpl
inc
push
aaa
cmc
jae
movsb
push
inc
add
fimuls
das
jle
and
fistl
sub
push
push
mov
lods
mov
arpl
mov
inc
jb
push
or
ds
push
lock
ret
pop
mov
sub
jb
orl
push
push
scas
fidivl
pop
xchg
cwtl
add
int3
sub
pusha
or
lds
xlat
push
enter
dec
mov
pop
mov
inc
add
adc
mov
dec
clc
mov
test
or
into
in
sub
xor
popf
dec
fildl
mov
lds
mov
xor
movsl
adc
adc
ljmp
popf
fiaddl
movaps
jl
and
fsubs
push
enter
dec
dec
mov
imul
and
sub
or
mov
lret
and
jbe
je
les
pop
add
xchg
or
rcl
cmp
mov
test
xchg
mov
xchg
lods
push
adc
push
mov
sub
pop
pop
or
out
cmp
and
add
pop
adc
gs
dec
loop
shrl
push
push
iret
lret
dec
nop
xchg
adc
lret
fldt
rorl
testb
and
pop
mov
cli
mov
in
mov
adc
pop
jno
scas
inc
ret
leave
mov
sub
inc
mov
fwait
arpl
mov
jb
push
dec
jnp
fstpt
sbb
mov
cmp
pusha
and
pop
mov
sbb
mov
sub
ss
and
enter
xor
fwait
daa
mov
mov
or
add
mov
pusha
adcl
pop
cmpsb
push
out
outsb
icebp
pop
cmc
sub
jle
sub
cmpsl
adc
daa
push
std
mov
js
int
cwtl
pop
out
xchg
dec
mov
adc
decl
rorl
xlat
inc
scas
xor
pop
roll
sub
jecxz
in
mov
sub
notb
mov
sub
and
repz
cmpsl
xchg
leave
ja
add
rclb
sti
adc
adc
daa
adc
xchg
jo
jp
jnp
scas
adc
into
stc
fisttpll
inc
xor
les
xchg
or
sub
subl
fmulp
pop
push
nop
movsl
das
push
int
dec
dec
and
push
sub
jge
jmp
sbb
das
out
cwtl
xchg
cmp
mov
push
pushf
xchg
mov
loop
clc
aas
push
ret
shlb
je
shl
dec
inc
shr
and
push
ljmp
pusha
push
stos
rorb
sub
nop
pop
mov
mov
ret
ljmp
or
fwait
pop
sbb
loopne
adc
xor
adc
out
fcmovne
xor
jo
or
iret
sbb
call
mov
add
mov
dec
add
pusha
adc
popa
sbb
hlt
cmpsb
mov
scas
jb
je
sbbb
xor
shll
mov
rclb
fbld
bound
mov
icebp
adc
add
aas
data16
test
and
adcl
mov
sub
mov
jo
pop
dec
cmp
and
mov
cltd
cmpsl
inc
mov
mov
dec
xchg
push
xchg
mov
jae
cwtl
nop
and
stos
sbb
test
sub
jl
adc
jbe
xchg
and
inc
dec
push
stos
lock
imul
decl
fwait
pop
push
loope
and
mov
mov
mov
jg
pop
mov
add
xchg
or
mov
adc
add
shlb
je
subl
push
push
jo
mov
inc
lea
je,pt
nop
lods
push
in
lret
popa
push
mov
les
fwait
add
shr
mov
cmp
lret
mov
sahf
pop
dec
aam
ret
push
call
ja
bound
mov
xor
aas
cmpsb
dec
dec
xchg
lret
bound
popf
iret
movsb
pop
cmpsb
jge
movsb
sahf
mov
inc
cmp
into
mov
scas
push
repz
in
sbb
shlb
enter
and
cmp
pop
mov
je
mov
mov
mov
nop
shrb
loop
adc
in
aas
jbe
scas
and
lds
and
lods
xchg
cmp
out
push
stc
sbb
repz
movsb
push
adc
repz
dec
and
fs
lcall
dec
sub
scas
sub
sbb
stos
mov
insb
add
ljmp
std
cmp
or
mov
xor
int3
in
in
cwtl
and
fsubrl
cli
repz
inc
cmp
orb
in
mov
clc
inc
jmp
dec
loope
imul
stos
mov
mov
sbb
mov
add
ds
popf
xor
call
add
push
imulb
jl
leave
push
or
lds
sub
xchg
lock
inc
add
imul
xchg
test
incl
jno
divb
loope
and
xchg
aam
xlat
xchg
lock
sbb
pop
mov
xor
dec
lock
mov
adcl
push
pop
rclb
lret
lret
or
loop
xchg
dec
push
movsl
pop
and
fists
mov
cltd
push
insb
loopne
popf
out
jo
cs
adc
push
outsb
pop
mov
mov
xchg
sti
out
xchg
sar
jecxz
xchg
outsl
pop
stos
xchg
loopne
jmp
add
or
mov
gs
add
jmp
sbb
in
mov
push
pop
insb
xor
pop
inc
and
and
jg
sbb
dec
hlt
cmp
je
leave
mov
mov
pop
jbe
cmp
mov
outsb
cwtl
mov
subl
mov
jmp
pop
stos
pop
out
mov
sbb
addr16
push
subl
mov
mov
addl
or
mov
mov
aas
and
xor
mov
enter
cltd
loopne
dec
lret
pop
xlat
subb
push
mov
ret
addr16
xor
xor
clc
outsb
mov
addr16
push
adc
addr16
add
lods
dec
add
fcoml
or
stos
testb
xchg
adc
pop
jb
xor
add
aas
or
xchg
insl
lret
rcrl
inc
in
rdpmc
push
sbb
das
mov
mov
sarb
pop
scas
or
out
out
sbb
sub
arpl
and
lcall
call
sub
cld
cwtl
dec
pop
movsl
pop
lahf
mov
mov
push
push
loopne
mov
les
cltd
jb,pn
and
pop
leave
icebp
cmp
push
mov
lods
aad
dec
sbb
outsb
and
pop
in
jg
jns
andb
rolb
push
fidivrs
shll
xchg
shlb
xor
lcall
xor
sbb
pop
jo
mov
mov
and
adc
jecxz
mov
jp
mov
call
call
in
int
jp
movsb
inc
test
add
mov
addr16
or
mov
jp
xor
testl
call
loope
xor
sbb
cltd
push
dec
mov
pop
sub
ret
sub
movsb
dec
push
inc
xchg
scas
sub
movsl
adc
out
orb
fmul
nop
into
inc
pop
pop
insl
sbb
cld
mov
xchg
fimuls
sub
sbb
jbe
mov
icebp
int3
push
pop
insl
les
int3
cli
test
mov
inc
ljmp
test
gs
mov
test
sarl
sub
stos
and
dec
adc
cmp
jns
pop
aam
mov
mov
jmp
cltd
dec
inc
fstl
and
jne
addr16
pop
insb
fucomp
or
sbb
cld
out
inc
inc
fwait
out
push
aam
and
jnp
jmp
negb
cltd
scas
dec
pop
lods
mov
arpl
ss
pop
mov
jnp
sub
cmpsb
clc
pop
loopne
andb
inc
out
cmp
int3
lcall
fsubs
mov
xchg
push
lods
cmp
stos
or
push
nop
sub
sbb
push
fbstp
inc
addr16
inc
ljmp
sub
rcl
fsubrs
xchg
call
dec
push
mov
adc
fistpll
repnz
pop
mov
xchg
pop
dec
xchg
cwtl
mov
loope
mov
cmp
cmp
dec
inc
rcl
test
sub
add
add
xchg
std
rcrb
outsl
imul
jecxz
scas
dec
push
clc
cwtl
or
push
push
in
push
fnsave
out
dec
in
roll
push
jmp
mov
es
popa
pop
mov
jae
jb
test
xchg
jle
sub
jecxz
push
data16
lret
call
adc
push
cltd
jbe
std
push
stos
mov
call
outsl
sbb
cld
ficoms
cli
sub
cmp
mov
mov
pop
push
push
mov
or
lods
xchg
cmc
test
popf
push
repz
xorl
xor
fdivrs
in
add
sbb
add
push
imul
idivl
jge
dec
pop
ss
stc
je
lea
andb
dec
mov
ret
pop
fisubrl
push
shll
jmp
lret
fimull
and
loope
lods
xchg
in
cld
out
mov
shl
push
and
push
sti
test
cmovp
sbb
or
xchg
aas
lcall
fbstp
repz
cltd
js
aaa
nop
fucomp
divb
lock
orb
sub
add
lea
das
pusha
push
pop
stc
xchg
push
cwtl
xor
push
dec
jo
pop
adc
dec
jnp
mov
cpuid
int
inc
aad
xor
bound
xor
mov
insb
and
jb
les
inc
out
push
or
lcall
hlt
in
test
or
and
sub
xor
mov
fcmove
mov
xchg
xor
leave
push
pop
cmp
in
aas
ret
aaa
test
cmp
dec
sub
orl
test
xchg
int3
cmp
pop
gs
inc
je
add
out
jnp
xchg
adc
fidivrs
pop
mov
inc
aad
setg
or
jo
leave
jle
data16
sbb
cltd
gs
out
cwtl
fldt
enter
aad
icebp
cmc
cmp
mov
ficoms
andb
leave
ljmp
mov
lahf
test
mov
add
add
leave
jecxz
push
or
inc
scas
out
ret
clc
les
cmc
aaa
jle
scas
sbb
icebp
orb
std
cmpsl
adc
inc
test
sub
iret
cwtl
test
pusha
in
push
movsl
hlt
lds
jmp
sbb
add
pop
sbb
cmp
inc
pop
bound
pushf
mov
xchg
insl
jno
adc
xor
push
rolb
pandn
test
outsb
popa
ret
cwtl
add
xchg
jae
mov
fmull
mov
sahf
sub
es
pop
cmp
ds
cmc
inc
imul
mov
imull
ss
mov
int3
stc
enter
fucom
mov
jns
ljmp
int3
scas
daa
ret
and
aaa
test
sbbl
out
int
mov
push
enter
or
push
or
ss
fs
in
mov
xchg
and
cltd
test
adc
dec
cs
mov
sbb
lock
stos
in
pop
cmp
out
mov
fildll
push
jecxz
lret
add
test
inc
insl
fistps
into
sbb
fs
mov
jle
das
es
jae
call
xorl
dec
jecxz
lcall
cltd
mov
xor
and
mov
dec
or
outsl
sarb
in
and
dec
mov
push
push
gs
lret
jecxz
testb
mov
int
jbe
cmpsb
scas
pop
and
push
js
inc
sub
xor
lahf
int3
out
and
ret
inc
fnstcw
sarl
mov
jg
sub
jne
xchg
scas
push
mov
cli
xlat
subl
pop
xor
add
xchg
pop
flds
xor
mov
out
lret
pop
push
pusha
lds
mov
enter
lods
jecxz
mov
loop
fs
fsubs
push
pushl
dec
cli
test
push
testb
imul
es
xor
out
in
popfw
inc
lahf
iret
sbb
and
or
mov
xchg
filds
mov
fsubrs
mov
sub
daa
scas
add
jno
jl
fs
jae
mov
int3
sub
pushf
dec
dec
outsb
frstor
and
cltd
std
mov
icebp
and
adc
pop
and
lods
fimuls
clc
arpl
scas
push
adc
mov
adc
xor
or
shll
inc
imul
les
adc
jns
push
sbb
repnz
das
icebp
mov
jecxz
add
in
pop
sub
insb
lds
lock
lcall
cmpsb
xchg
mov
mov
fstpl
xchg
push
xor
sbb
pushf
addr16
pop
imul
lret
sti
sub
mov
ss
cwtl
adc
imul
popf
and
jns
stos
xor
inc
xchg
inc
dec
jecxz
inc
lea
push
mov
icebp
push
add
lock
imul
sub
push
cld
cmc
push
lret
adc
cmp
adc
or
or
dec
adc
xor
into
dec
lret
xchg
pop
jmp
mov
iret
or
lea
hlt
pop
popa
insb
pop
out
insl
inc
and
xor
loope
je
les
add
add
popf
sahf
insb
jle
or
xchg
adcl
fisttps
and
cli
int3
popf
pop
sub
hlt
mov
cmpsb
lret
add
pop
sbb
stc
mov
xlat
sub
mov
aas
loop
cwtl
xchg
jmp
cmc
mov
repz
lcall
sub
repz
or
hlt
add
cmp
xlat
arpl
fiadds
pop
jmp
cmpsl
gs
in
fwait
cwtl
mov
fidivrl
xor
sub
cmpsl
dec
pushl
sarb
cmp
push
test
leave
aaa
gs
xchg
sbb
push
xlat
mov
in
sbb
sub
cmpsl
int
js
sub
sbb
fldenv
loopne
repnz
lret
pop
outsb
mov
push
adc
mov
rclb
pop
ret
cli
out
mov
cld
add
pop
in
bound
cmpsb
lds
sub
shlb
loop
push
jg
lret
lea
stos
dec
mov
pop
in
cld
jno
lcall
add
stos
ret
pushl
std
xor
adc
dec
adc
xchg
mov
xor
add
push
pop
pop
xor
pop
shll
dec
jb
mov
mov
dec
loopne
loopne
xorb
dec
xor
mov
mov
push
push
in
dec
popl
fcomps
cld
pushf
cmpsb
sbb
shrl
mov
xchg
dec
ret
sbb
cmp
sub
jge
dec
adc
mov
or
test
sub
nop
xor
aas
sbb
cmc
rorb
or
dec
shlb
jp
fldcw
add
outsb
sub
add
bound
mov
fsub
shl
mov
dec
sbb
out
mov
push
es
lods
into
xchg
shlb
pop
gs
mov
out
xor
ljmp
add
push
andb
xlat
push
push
lock
popf
lcall
jle
sti
inc
inc
mov
lods
aam
adc
xor
xor
add
mov
pop
fs
add
pop
or
cli
sub
sbb
dec
jae
cmpb
in
lahf
mov
xor
stos
test
pop
xchg
dec
jo
xchg
in
jns
pop
lret
scas
mov
pop
push
add
sbb
sub
jns
mov
add
sub
dec
loopne
dec
inc
les
or
aas
cmpsl
mov
outsb
fdivs
aam
cs
jg
and
dec
add
loop
xchg
fisttpl
dec
gs
aaa
adc
divb
aad
push
sbb
add
jb
iret
out
andl
xchg
pop
lea
ss
pop
jmp
mov
dec
add
out
add
pop
pop
adcb
lcall
push
pop
mov
int
cld
xchg
je
pop
negb
push
pop
mov
mov
xchg
pop
cmp
pushl
xchg
out
cmp
mov
push
js
cmpsb
lods
xchg
mov
imul
lds
jns
aas
in
imul
push
dec
enter
cld
pop
and
add
push
repnz
dec
insl
test
mov
or
inc
add
add
jbe
addl
dec
loopne
mov
dec
sbb
je
out
out
pop
aad
and
in
mov
lahf
push
cmp
jbe
call
mov
mov
lods
icebp
lds
fsubl
or
gs
incb
dec
ss
sub
lret
insl
leave
pusha
mov
sahf
mov
jno
addr16
and
jmp
lock
std
cmpsl
xchg
mov
repnz
aaa
pop
je
push
lret
inc
xchg
sub
daa
fadd
cmp
xchg
and
pop
sbb
and
leave
xchg
mov
dec
push
sbb
cltd
ds
fcompl
out
pushf
fists
int
xchg
mov
and
test
into
and
loope
hlt
into
or
ja
lea
xor
in
push
cmp
scas
int3
std
lods
imul
push
xchg
orl
inc
shrb
inc
xchg
rorb
jae
mov
lods
pushf
leave
repnz
lock
xor
sub
jp
push
xor
push
in
stos
pop
roll
pop
in
mov
fidivrl
xor
jp
add
dec
pop
das
cmp
cld
sarl
in
bound
or
dec
pop
jo
jmp
pop
in
dec
test
jb
leave
aas
xchg
mov
fdivrl
out
mov
neg
cwtl
pop
add
push
pop
jbe
cmpsb
mov
clc
pop
mov
rorb
mov
and
jb
test
pop
popa
add
push
adc
roll
xor
scas
sub
sub
icebp
mov
dec
and
dec
outsl
lcall
fdivs
imul
jl
dec
xlat
cmc
repnz
dec
or
and
or
mov
cmc
push
mov
jb
xchg
adc
cmp
push
push
and
mov
and
imul
adcb
and
and
lea
outsl
popf
fwait
xchg
pop
and
outsl
add
lea
ja
aas
icebp
mov
aas
sub
ljmp
mov
paddsb
jno
inc
ljmp
cld
cmpsb
shr
fs
xchg
dec
jp
or
out
ficoms
adc
icebp
fcmove
adc
or
fldt
mov
and
pop
cmpsb
cmpsb
lock
sub
sub
out
ds
into
out
jecxz
mov
enter
inc
sub
dec
or
cli
aam
lock
and
test
cmp
mov
rcrl
jbe
mov
std
mov
jle
loopne
xchg
leave
gs
sub
mov
mov
cmpsb
sbb
in
popf
mov
sub
testb
aaa
inc
gs
mov
push
or
bound
add
sub
sub
aam
sbb
cs
sti
scas
mov
add
xchg
pop
cltd
jne
dec
jo
sbb
aam
arpl
inc
lret
jb
jge
pop
jecxz
mov
scas
mov
xorl
div
out
fldcw
add
sarb
xor
pop
scas
repnz
in
push
dec
inc
mov
cmp
enter
es
sub
add
test
repnz
or
loope
in
add
nop
adc
mov
into
daa
mov
pop
loope
or
in
ljmp
ficomps
inc
fsubl
or
js
xchg
mov
cli
sbb
sub
inc
mov
lock
std
or
mov
adc
lods
push
push
pop
pushf
out
push
cli
push
push
sub
add
repz
xchg
repnz
sbb
lds
shl
xor
sahf
xor
cmpsl
pop
xchg
and
nop
pop
lods
notl
jle
or
jne
stos
xchg
std
dec
dec
xor
arpl
mov
fcoms
jnp
jno
pushf
fnsave
in
lahf
inc
test
xor
rcr
push
sar
outsl
lahf
sbb
sahf
pop
ljmp
fdivs
xor
and
repz
lcall
jb
test
mov
pop
mov
mov
xor
jbe
cltd
loopne
adc
es
xor
test
cmpl
stos
pop
out
cmp
inc
add
mov
adc
pop
out
stos
or
xor
movsl
mov
fstps
cmp
push
bound
js
mov
out
adc
imul
stos
mov
jmp
shl
pushl
repnz
dec
jbe
shl
outsl
jmp
cltd
test
mov
ja
sub
or
lret
lcall
dec
sub
inc
aad
mov
mov
scas
sahf
shll
shrb
cmp
mov
pusha
aam
jb
pop
test
jecxz
gs
adc
sbb
sub
cmpsb
push
sbb
pop
pop
or
mov
jmp
pusha
divb
xor
mov
push
fisubrs
ds
mov
orl
push
ljmp
push
xchg
mov
lods
pushf
sbb
xor
lcall
shrb
test
fcmovnu
pop
inc
xchg
icebp
sub
and
cli
out
cmc
stc
roll
faddl
jns
adc
mov
dec
and
or
and
xorb
les
popa
add
xchg
jmp
dec
andb
inc
insb
sbb
push
outsl
outsb
push
hlt
scas
repnz
cmp
mov
hlt
or
and
mov
jns
sub
cmp
outsl
cltd
je
xorb
adc
lcall
rcl
xlat
xor
hlt
push
lret
aad
pusha
sub
push
jg
mov
cmpsl
dec
push
mulb
cmpsb
dec
cmp
fxch
mov
movb
adc
fs
adc
outsb
cltd
xor
push
cs
loope
push
xor
or
inc
mov
mov
adc
repnz
out
mov
icebp
adc
pop
pop
pop
mov
sti
jb
gs
sarb
push
repz
stc
xchg
ja
cmpsl
lahf
adc
cmpsl
bound
sbb
fmuls
jb
mov
scas
jg
dec
xchg
popf
scas
xor
jge
shrb
mov
inc
add
sbb
pop
popf
cmp
movsl
jle
ret
pop
push
xor
in
inc
scas
adc
lds
adc
mov
push
cltd
adc
lds
pop
hlt
negl
fs
xchg
sub
xor
out
dec
cmp
dec
movsb
cmpsb
out
pusha
mov
or
sbb
clc
nop
test
push
stos
inc
add
aas
nop
jle
xchg
call
xchg
jl
out
adc
mov
notb
cmpsl
dec
les
je
cmpl
call
dec
mov
xor
mov
movsb
aad
xorl
xchg
add
rcl
xor
push
mov
push
test
das
leave
mov
insl
dec
popf
xor
sub
jbe
xchg
xchg
stos
jmp
mov
push
loop
xchg
mov
dec
in
subl
inc
leave
loop
int
in
daa
sti
xchg
and
pop
repz
adc
sbb
ja
xchg
xchg
push
pop
adc
fsubrs
push
setae
dec
adc
pop
xchg
arpl
aam
je
insb
fdiv
cmp
fwait
push
jle
mov
arpl
mov
inc
push
jmp
sbb
cltd
xor
shrb
cmp
jmp
pop
std
loopne
and
and
out
lock
mov
js
push
sbb
xchg
pop
cli
arpl
mov
or
pop
movsb
loopne
mov
insl
out
into
std
pushf
sbb
cli
popa
cltd
addr16
dec
idiv
repnz
pop
icebp
ret
inc
mov
fiadds
sub
sahf
pop
pop
pop
shll
mov
adc
pop
test
sub
and
jecxz
out
inc
jnp
daa
lods
sbb
adc
test
cmp
dec
xchg
daa
ja
int
negl
pushf
adc
lock
in
and
pushw
mov
leave
fildl
sub
pusha
stc
call
mov
addr16
dec
mov
push
stos
or
lea
pop
push
iret
out
cmp
push
add
xor
rcrb
fsubr
pop
ficompl
enter
sbb
fcoml
rorl
mov
insl
in
pushw
lock
dec
mov
das
notl
push
mov
mov
mov
pusha
popa
je
std
mov
pop
test
push
dec
enter
mov
addr16
xor
sbb
add
iret
or
xor
mov
adc
mov
jge
inc
lahf
jo
mov
data16
stos
cli
mov
mov
in
sub
push
mov
ds
sbb
adc
lret
lea
inc
daa
movb
ja
imul
out
jp
fstp
loopne
push
insb
incl
mov
jle
cmp
jae
movsb
fs
insl
xor
movsl
sbb
cmp
jmp
ret
mov
push
jmp
outsb
sub
add
mov
adc
xlat
mov
mov
mov
inc
gs
pop
test
pop
mov
and
jl
and
lret
shrb
insb
add
add
dec
cmp
int
and
push
in
rol
mov
or
cmp
mov
cmp
call
mov
pop
lock
mov
bound
jo
pop
xchg
test
insl
or
push
repz
lahf
in
pop
cwtl
mov
dec
dec
cmp
imul
in
jle
loope
fbld
mov
insb
xchg
pop
cmp
push
int3
dec
pop
popf
inc
add
add
out
inc
jne
pop
jecxz
sub
notb
sbb
sub
stos
xchg
and
dec
nop
lret
mov
mov
lret
dec
pop
insl
sbb
fwait
and
mov
cmpsb
cmpsb
loope
ficoms
mov
jl
and
aaa
xor
inc
jle
add
adc
mov
mov
ds
mov
and
mov
or
fsubs
cld
outsl
sub
and
pusha
aaa
mov
inc
leave
js
push
push
hlt
lds
push
add
in
xlat
mov
lea
ss
mov
jns
inc
dec
sub
ss
xchg
rcl
ficompl
mov
shrl
mov
and
lahf
lods
arpl
into
sahf
mov
movsb
stc
lret
mov
fimuls
lock
jmp
fisttpl
mov
mov
and
pop
aad
cld
addr16
mov
es
aad
mov
xchg
loopne
fstps
push
xchg
dec
push
jb
cmc
dec
mov
aad
imul
inc
and
aam
nop
cmp
and
pop
xchg
cmp
hlt
xor
fisubl
xchg
popa
add
jp
jmp
cmp
dec
rcrl
cs
add
ficompl
xchg
aad
cmpsl
push
mov
xchg
xorb
inc
loope
into
push
cmpsl
andl
test
sub
mov
and
pop
xchg
sbb
xchg
jae
mov
scas
mov
sbb
mov
mov
push
scas
pop
rcrb
lods
fistps
sbb
sarl
es
js
mov
dec
and
arpl
fdivl
xchg
or
aam
rclb
dec
or
pop
push
cmp
push
call
jo
pop
sub
xchg
xor
xorl
add
mov
insl
cmpsl
je
push
pushf
test
cmpsb
out
pop
repnz
dec
rdtsc
lret
imul
aam
insl
or
and
ret
stc
call
jae
loop
sbb
xchg
repz
in
in
inc
adc
icebp
push
in
and
orl
cmp
cs
sub
add
pop
sub
dec
loope
add
jecxz
sub
fists
xchg
dec
push
jl
addr16
jae
scas
jns
adc
pop
mov
cli
mov
sub
jle
test
sub
js
out
pop
mov
jns
mov
in
ljmp
mov
das
aad
adc
sub
in
cld
mov
faddl
inc
addb
fisttps
je
sub
rorb
and
repz
out
aad
or
rep
push
pop
push
jl
pop
xor
rorl
adc
lods
cmp
loop
sbb
sbb
shrl
dec
or
and
mov
aas
fucomp
enter
mov
xchg
daa
jmp
jo
and
fmull
dec
inc
cmp
add
mov
jg
scas
addb
add
test
frstor
addl
aad
sub
fwait
lods
in
test
xchg
push
push
jecxz
sub
fnstsw
and
mov
lods
or
add
or
cmp
adc
mov
inc
pop
inc
mov
jne
mov
loope
xchg
mov
mov
cmpb
pop
push
mov
leave
add
adc
sbbl
repz
testb
mov
dec
mov
ja
mov
push
push
cmc
pop
mov
pop
test
comiss
push
rol
push
and
add
in
outsl
sub
sti
dec
iret
or
cmpsl
cwtl
shll
cmp
mov
push
lcall
push
mull
jne
out
mov
es
movsb
out
scas
lret
mov
out
inc
mov
push
dec
pop
mov
jnp
push
lea
popf
arpl
les
and
out
xor
mov
sub
pop
outsb
aaa
pushf
sbbl
int
popa
xchg
or
stc
sbb
aas
lock
idivb
pop
ds
xor
xchg
addr16
movsb
in
inc
or
pushf
test
pop
je
shlb
sub
fsubl
lea
mov
push
mov
nop
pushf
mov
mov
jle
push
sti
xchg
rcl
inc
sarl
sti
aas
repnz
hlt
jle
add
lods
and
or
enter
cwtl
popf
outsb
cs
jnp
mov
mov
cmc
scas
jns
pop
inc
cld
ret
shlb
and
mov
add
push
cmp
mov
or
ret
push
cli
into
dec
or
test
dec
sbb
outsl
loopne
loope
adc
cltd
stos
mov
pop
popa
and
or
push
cmc
std
cld
int3
mov
popa
jno
dec
jo
inc
pop
jmp
lds
fistpl
inc
adc
hlt
in
adcb
dec
pop
pop
pop
lods
sbb
jo
push
sbb
rol
xchg
in
xchg
cmp
aad
imul
xchg
mov
rclb
adc
pop
jne
call
cmp
imul
mov
push
and
jecxz
ret
xchg
sub
push
mov
jecxz
sahf
jno
push
add
xchg
movsb
cs
and
mov
sub
out
pop
inc
inc
adc
sbb
mov
fs
sub
pop
xchg
xor
lea
push
mov
aam
push
or
imul
dec
lret
out
ss
push
xor
push
cmp
loop
adc
jo
jecxz
sbb
mov
sbbb
jp
outsb
sub
fldl
sar
test
jecxz
adc
mov
or
int3
insl
outsb
jecxz
data16
hlt
jno
push
cmpb
aas
mov
inc
imul
adc
mov
call
sahf
inc
jo
jbe
xchg
push
loope
dec
add
aad
shll
push
mov
add
je
and
sbb
popa
jge
pusha
inc
jge
xchg
int
cmpsl
add
outsl
inc
pop
ljmp
adc
and
dec
sarb
out
jmp
mov
mov
mov
std
push
in
sbb
sbb
mulb
mov
mov
xchg
test
jno
cmpsb
aad
or
adc
add
addr16
push
xor
sbb
inc
and
popa
fdivl
addr16
adc
adc
popa
cmpsl
lcall
pop
jo
adc
fs
adc
lods
arpl
mov
push
jle
test
lret
or
rclb
dec
stos
pop
das
fwait
scas
pop
jl
mov
xchg
fucomp
rorl
mov
ret
in
mov
dec
jnp
sbbl
fmuls
mov
mov
push
mov
lods
xchg
mov
aam
dec
xchg
add
cld
sub
jg
aaa
leave
repnz
mov
push
cmp
or
mov
push
gs
sbb
in
inc
scas
pminub
sbbl
sub
out
call
and
inc
push
sbb
ror
xchg
jle
aam
js
push
jmp
clc
fisubs
mov
into
subps
test
and
mov
mov
add
and
or
mov
mov
jge
jp
jne
add
pop
xor
pop
mov
cmp
jno
pop
test
in
test
sti
sbb
sete
jecxz
push
mov
add
push
fisttpl
pop
das
pusha
add
imul
imul
xchg
mov
xor
xor
es
imul
out
push
aam
shlb
inc
xor
jae
shlb
test
mov
lods
cmp
adc
and
leave
pop
cmp
ret
inc
push
or
or
rcrl
sub
pushf
imul
and
and
dec
cmp
and
movsl
or
notl
or
fxch
add
mov
ds
mov
scas
mov
mov
sbb
dec
mov
mov
push
inc
push
jns
cmpsl
push
dec
cmp
lods
or
fs
stos
xchg
dec
add
adc
call
adc
add
inc
adc
rcrb
daa
adc
sub
rorl
jge
lret
sub
or
in
sbb
or
dec
mov
aad
pop
mov
mov
std
inc
dec
xchg
lret
inc
addr16
adc
xchg
pushf
adc
jmp
decb
xchg
sbb
or
bound
in
mov
fnstenv
xchg
shlb
fsubs
mov
pop
mov
loop
stos
mov
sub
imul
and
test
loop
cmp
cmpsl
lock
and
pop
sbb
icebp
jmp
cmp
jge
mov
jp
adc
or
xor
mov
pop
cmp
scas
fsubrl
fwait
fsubr
loop
lds
pusha
loope
lods
adc
or
mov
cli
pushf
lea
add
movsl
mov
frstor
fsubr
cwtl
scas
fsubrs
dec
jl
aad
lret
inc
dec
mov
mov
jb
xor
repnz
xchg
jmp
add
cmc
push
mov
and
stc
xor
loopne
data16
cld
add
clc
leave
cmpsb
mull
jb
shll
das
pop
cmp
loope
gs
push
mov
pop
push
mov
in
movsb
not
iret
and
cmpsl
es
push
xchg
dec
out
in
sub
negb
jno
mov
xlat
jmp
jb
mov
lcall
pop
sbb
sar
ret
fwait
mov
fwait
arpl
test
lods
jecxz
movsl
lods
scas
clc
xchg
pop
adcl
imul
push
out
mov
and
les
push
mov
addr16
mov
sbbb
cmp
leave
push
push
movsb
aaa
cmpsb
enter
mov
stos
loope
in
mov
jmp
scas
mov
stos
inc
or
imul
lods
push
jae
fbld
xchg
adc
push
pop
into
and
sbb
jno
test
leave
gs
stos
clc
xchg
test
sub
push
into
push
and
pop
mov
and
test
call
cwtl
xor
adc
add
mov
pop
jb
mov
repnz
aam
cmp
sbb
cmpb
out
adc
negw
xor
scas
testl
or
cltd
lock
inc
mov
in
cmp
inc
inc
mov
incl
inc
cmc
adc
jp
mov
icebp
test
fsts
pop
stos
dec
fildll
mov
xor
jo
in
xlat
outsb
jg
inc
inc
push
cs
mov
sarb
inc
imul
jo
popf
jl
xchg
and
sub
sub
push
bound
mov
sub
inc
jbe
sbb
lods
fistl
and
mov
cwtl
lret
jl
sub
mov
jnp
testb
dec
jnp
dec
xor
mov
test
sysenter
sub
loope
mov
mov
aam
mov
jns
repz
xor
pop
inc
push
add
xor
js
jg
dec
ds
push
fldt
je
mov
mov
jnp
shlb
pop
push
adc
sub
ror
sbb
loope
shr
mov
dec
aaa
pop
mov
sahf
mov
sbb
shr
cwtl
pop
and
fs
fdiv
jb
sub
xlat
dec
xchg
sbb
scas
push
cmpsl
sub
out
shlb
cmp
and
fnstsw
cmp
std
dec
scas
cmpsl
xor
xchg
mov
inc
cld
idivl
roll
aaa
idivb
add
call
loop
ret
push
out
mov
jecxz
cmp
std
lods
outsb
push
xor
or
repz
pop
pusha
loopne
ja
adc
std
add
mov
ja
push
outsl
popf
mov
dec
dec
push
cmc
jbe
adc
mov
dec
repz
pop
pusha
aam
out
lods
cltd
adc
jle
adc
lret
xor
adc
insl
sbbb
hlt
jl
or
jne
lea
sbb
pop
jle
add
in
sbb
push
cmp
movsb
xchg
jle
mov
insb
xchg
inc
mov
js
push
cmp
xchg
fcomps
ret
enter
mov
jl
loope
inc
js
push
mov
mov
mov
mov
push
mov
fs
xor
adc
arpl
pushf
fcomps
sahf
xor
sub
xchg
xchg
enter
js
in
out
xlat
pop
int
pop
scas
and
out
xchg
adc
lret
insl
mov
jmp
lods
mov
mov
fiadds
lds
mov
xchg
jnp
cmp
xchg
cmp
cmp
push
lods
add
fcoms
jnp
out
inc
cmp
push
push
pop
cmp
sahf
mov
jmp
push
mov
pop
jl
add
loope
mov
insl
aaa
push
or
gs
pushf
fnstcw
jl
or
pop
xchg
test
add
shll
jl
cmp
idivb
in
mov
adc
out
pushf
and
shlb
sti
lods
mov
add
in
mov
inc
nop
inc
xor
xor
xlat
push
int3
mov
stos
mov
data16
inc
and
cmpsl
sbb
in
rcll
xor
mov
fisubrs
imul
xchg
shr
icebp
scas
imul
jae
pop
xor
adc
mov
sbb
xchg
jp
in
aad
pop
aad
or
dec
jmp
je
push
mov
shlb
or
call
popf
aaa
fmulp
ja
aad
sbb
mov
test
ficoml
int3
sbb
adc
je
pop
stos
xor
adc
test
popa
inc
cld
aaa
lods
ret
fisubrs
shufps
das
push
fimull
jecxz
mov
repnz
clc
add
je
clc
call
and
lds
inc
daa
leave
mov
cmpsb
xchg
fildl
out
xor
push
clc
aas
leave
sahf
stc
popa
imul
add
cmp
leave
and
xchg
cmc
jmp
sbb
pop
add
shlb
popf
pop
lahf
cmc
in
pop
dec
jb
inc
xor
or
sarl
xchg
scas
pop
dec
icebp
fisubl
divl
ljmp
fs
ret
jle
adcb
jg
inc
xor
popa
cmpsl
inc
or
jnp
pop
pop
adc
jns
dec
pushf
adc
push
mov
ret
nop
div
mov
fimuls
nop
push
push
pop
mov
stos
outsb
in
jbe
test
outsl
incl
inc
or
scas
pop
push
or
inc
cmp
sahf
dec
aaa
pushf
daa
inc
push
jmp
add
pop
sbb
mov
mov
sbb
in
test
in
daa
cmpsl
cli
xchg
int3
mov
jecxz
or
int
mov
adc
and
and
push
mov
pop
mov
or
mov
popa
ljmp
add
mov
sbb
xor
add
out
add
int3
in
pop
push
and
jmp
in
mov
mov
xorb
jmp
inc
inc
je
out
jnp
jns
cld
sbb
mov
mov
ret
pop
jmp
js
rol
arpl
leave
out
scas
and
add
adc
xchg
xor
insl
inc
addr16
loopne
scas
subl
imul
lods
rolb
jl
dec
dec
sbb
andb
je
cmc
sbb
fcom
insb
xchg
or
and
test
int3
mov
sbbl
dec
mov
adc
repnz
sahf
mov
or
or
fstpt
jl
xor
pop
add
jg
push
pop
add
lcall
sbb
cmp
orb
imul
xlat
aaa
dec
xchg
scas
and
mov
fs
test
mov
cmp
cmp
pop
xor
add
jo
add
cs
fists
mov
outsl
fs
xchg
xlat
mov
outsl
push
cmpsb
fs
mov
push
cs
adc
shrb
out
sbb
mov
and
push
xchg
js
adc
into
sub
test
hlt
out
fildl
stos
cmp
data16
aas
mov
mov
icebp
push
push
popf
aaa
dec
mov
push
fdivrl
pop
into
inc
pop
ds
pop
ja
or
xor
enter
fs
aas
mov
xchg
push
pop
cmc
mov
hlt
ret
cmpl
rolb
adc
push
xorl
mov
mov
gs
inc
dec
aad
xor
mov
leave
cs
es
outsl
sub
sbb
cmc
pop
fs
out
mov
aad
and
push
mov
out
sbb
out
leave
adc
insb
movsb
movsl
pop
dec
enter
xchg
xor
fildl
jnp
dec
sarl
ds
out
daa
pop
inc
xor
xlat
cmpsl
push
and
jmp
test
push
dec
jns
and
mov
mov
rorb
in
stos
lret
jns
jbe
aas
stc
ds
xchg
adc
xchg
gs
rorl
out
cmpsl
lock
push
rcll
lods
jg
sub
sub
stos
pop
mov
mov
popf
mov
fs
push
dec
push
leave
mov
iret
mulb
or
or
push
xor
mov
cmpb
pop
pop
xor
push
inc
gs
mov
test
push
bound
in
or
jno
rcrb
pop
mov
mov
push
mov
xor
xchg
push
mov
sub
pop
setnp
mov
testl
pop
in
stos
push
sub
mov
mov
jle
mov
add
std
aas
pop
add
inc
ds
dec
jmp
mov
call
movsb
mov
dec
out
jge
ss
cmpsl
je
sbb
adc
lea
das
adc
xor
sti
dec
xchg
xchg
ljmp
sti
shrb
rcrl
test
or
into
test
in
fmul
cmp
pop
adc
gs
inc
inc
mov
push
push
lcall
mov
adc
xor
mov
jmp
push
lcall
ja
sahf
sbb
das
dec
imul
sbb
mov
psubsw
call
rcrl
iret
add
ret
test
push
jmp
xlat
jle
dec
jo
ja
cmp
cmc
xchg
or
mov
cmpsl
push
repz
sub
xchg
cmp
movsl
xchg
pop
xchg
or
mov
xchg
outsl
push
test
add
les
fs
leave
inc
shll
pop
imul
xchg
or
pop
cmp
outsb
int3
jbe
or
nop
sahf
pop
jne
movsb
fadds
sub
fisttps
xchg
or
xor
or
mov
and
hlt
sbb
adc
mov
xchg
push
xchg
xlat
movl
cmc
scas
xor
out
mov
inc
xor
jp
cli
pop
sbb
sti
scas
sub
and
jp
sbb
pop
incb
popa
push
mov
jmp
lds
in
les
push
xor
mov
mov
imul
pand
jnp
outsb
add
stos
push
sarb
fs
test
neg
aas
lcall
xor
pusha
clc
push
adc
xor
sbb
jmp
adc
out
lods
int
js
in
cmp
loopne
dec
shrl
jbe
mov
sbb
lds
and
mov
inc
repz
mov
xor
dec
inc
std
out
arpl
sub
out
mov
inc
insb
inc
rcrb
mov
and
movsl
cmc
pop
ret
jno
movsb
ds
cmp
lods
imul
mov
inc
xlat
sbb
sbb
mov
mov
add
cmp
std
jge
mov
add
sub
je
out
jo
fdivp
pop
jne
jecxz
push
testb
pop
xor
movsl
pop
jns
cwtl
jp
ss
popa
jge
cmp
in
pop
inc
lods
add
mov
test
fadd
xchg
insb
js
jne
push
lds
add
jge
pop
pop
mov
ret
mov
jmp
mov
adc
pop
fbld
jne
cmp
inc
add
xchg
stos
and
in
or
les
repz
or
inc
daa
fcmovnb
mov
aaa
mov
insb
out
sub
push
test
push
lret
rclb
push
mov
loop
mov
lods
test
data16
pop
push
ret
mov
movsb
sbb
xchg
sub
push
rorb
inc
cmpsb
aad
fsubrs
jbe
push
adc
dec
fnstenv
shrl
je
xlat
push
filds
inc
push
mov
lds
cmp
xor
xor
pop
jmp
sbb
pop
addl
push
ret
out
cmp
faddl
jo
push
xor
mov
pop
pop
cltd
jbe
gs
mov
clc
scas
mov
mov
dec
out
fsubrs
mov
sbbl
jbe
mov
pushf
lahf
icebp
inc
test
je
roll
xor
pusha
inc
imul
mov
push
mov
lock
ret
lret
add
out
lahf
test
scas
nop
adc
add
add
pop
jge
pop
in
insb
jl
mov
adc
nop
fcompl
mov
adc
sub
mov
push
iret
aad
shrl
mov
pop
pop
icebp
sbb
aam
aad
push
outsb
push
add
rcl
add
fwait
testl
mov
rclb
or
fistps
xchg
jmp
sbb
imul
xor
nop
cld
fnstcw
push
dec
jo
mov
dec
jae
add
sahf
inc
int
ja
inc
sbb
fidivrl
add
shrb
addl
jno
lcall
xor
dec
push
sbb
adc
sbb
lret
aaa
adc
jle
dec
out
or
jecxz
xor
enter
gs
add
push
ja
mov
jno
xor
cld
xlat
out
dec
or
sub
jp
inc
jg
popa
das
pop
das
xchg
push
mov
xlat
inc
negb
dec
and
sbb
fnstcw
add
clc
scas
movsb
imul
sub
cmp
lahf
arpl
adc
fsubp
mov
bound
pop
mov
lods
fdiv
push
fisubrs
inc
stos
fisttps
adc
add
ljmp
dec
insl
sbb
ss
lahf
test
ljmp
jne
clc
in
sub
dec
and
imul
aas
xchg
sahf
sub
lret
popa
push
or
mov
jae
inc
pop
repnz
pop
or
or
ljmp
cmpsl
fidivs
dec
dec
mov
mov
push
or
stc
and
not
outsl
popf
rol
arpl
dec
addr16
pop
cld
je
lock
inc
dec
add
xor
sbb
xor
rep
dec
xor
xchg
loope
jno
cmp
shrl
push
xor
cld
int3
and
jnp
cmp
das
push
mov
int3
sub
xchg
loop
cmp
dec
pop
sub
int
cmp
inc
out
cmp
cmpsl
mov
jmp
and
fsubrl
cltd
lock
sbb
loopne
repnz
push
ja
mov
test
pop
lahf
xor
add
cmp
adc
lret
mov
xor
mov
mov
inc
xor
and
sub
rclb
daa
cld
test
ficompl
pop
call
scas
and
gs
cs
mov
mov
mov
cltd
lds
lock
dec
or
or
clc
xchg
lcall
xchg
outsb
or
or
sti
mov
popf
ficompl
cmp
adc
or
imul
loopne
mov
or
enter
xchg
sub
std
sub
sbb
adc
or
sub
push
cmp
jle
test
mov
call
mov
out
mov
push
stos
std
movsl
int
mov
add
lahf
add
or
mov
out
hlt
mov
xchg
xchg
jns
adc
mov
push
clc
adc
fcompl
les
ss
into
adc
in
in
inc
and
lret
or
mov
mov
push
ret
pop
pop
mov
sub
test
add
ret
dec
cli
into
scas
movsl
jp
lret
imul
sub
ljmp
mov
movsl
cmpsb
mov
repz
adc
xor
sar
push
je
js
add
mov
nop
pop
lods
out
xor
lds
daa
int3
jnp
ljmp
test
mov
insb
or
mov
add
mov
out
scas
pop
inc
push
rorl
outsb
add
imul
out
stos
inc
or
cltd
mov
ficoms
ud2
pop
ja
pop
popa
push
cmpsl
scas
sub
ss
aam
std
bswap
pusha
xor
sahf
es
cmpb
sbb
inc
inc
sub
ja
sbb
cld
push
fs
sub
xor
cmp
sub
lea
sti
je
sti
adc
or
jl
pop
mov
add
stos
sub
cmpsb
xor
ja
jecxz,pt
xor
mov
mov
repnz
sub
xchg
aad
adc
outsb
mov
pop
sahf
pusha
into
jae
into
call
add
hlt
jge
inc
shlb
xchg
in
cs
fstps
adc
mov
test
push
bound
int
mov
stos
js
ja
cmp
sbb
or
enter
std
int
xor
lcall
mov
xor
cmp
loope
mov
xor
call
push
sti
xchg
xor
mov
push
cmp
push
xchg
into
jg
or
mov
lock
dec
dec
fs
les
lods
outsb
imul
rol
jns
je
js
mov
jmp
mov
jns
jge
inc
mov
cld
push
and
repnz
test
hlt
pushf
data16
xor
test
sti
xor
shll
test
pop
pop
pusha
cli
rorb
movsb
out
pop
push
and
fcomi
inc
lret
mov
das
aaa
ss
mov
lods
in
out
rcrl
push
push
cmp
aam
aaa
mov
rorb
dec
js
push
push
dec
sbb
sbb
mov
nop
pop
jl
test
fidivs
push
dec
jno
je
cmpl
imull
nop
xchg
std
cld
call
test
inc
xchg
ljmp
lods
mov
test
shr
or
pop
xchg
aad
fcomps
cmp
xor
xchg
ja
test
mov
int3
xchg
cmc
leave
daa
jo
jne
ss
bswap
shrl
or
cltd
les
pop
lock
stc
or
adc
inc
add
clc
jbe
test
xor
arpl
arpl
xor
nop
xor
push
jl
addl
dec
xor
sahf
jge
mov
mov
es
int
dec
push
add
push
dec
out
mov
fdivrl
enter
into
cmp
jne
icebp
stos
inc
popa
adc
mov
or
add
sub
pusha
add
mov
cmc
jl
mov
dec
sub
sbb
mov
int3
jne
into
mov
push
ret
mov
inc
xchg
popa
stc
in
jge
sub
imul
insb
jge
pop
out
cmp
cli
cmpsb
ljmp
mov
cltd
pop
divl
jbe
fsts
mov
out
pop
sahf
aas
sbb
clc
lea
mov
pusha
pop
pushl
jmp
outsl
jbe
lcall
lods
mov
test
scas
leave
cli
xchg
mov
js
pop
add
jno
sbb
test
pop
mov
test
and
outsb
and
jge
xlat
or
and
mov
xor
sub
lcall
insb
in
and
push
aaa
sbb
lods
lods
jecxz
sub
pop
lahf
xchg
pushf
enter
rorb
aaa
test
xor
loope
lods
psraw
repnz
pop
xor
outsl
sbb
lret
shlb
jmp
push
dec
in
xchg
jne
popa
sti
fdivrl
test
jecxz
pop
sub
mov
inc
cli
sbb
jnp
push
push
das
adc
jle
cmp
dec
add
xchg
pop
cmp
fstpl
ja
xchg
xchg
dec
repnz
mov
adc
sub
dec
adc
cmp
sbb
xchg
inc
and
lea
dec
lea
stos
repnz
out
xchg
inc
xor
pusha
pop
addr16
sti
shll
in
mov
lcall
stc
sub
int
loope
outsl
adc
push
std
scas
mov
pop
mov
jp
mov
jno
sbb
dec
cwtl
loopne
add
ss
out
dec
clc
pushf
xchg
inc
mov
cs
outsb
inc
push
mov
push
push
ret
pop
fsubrs
mov
loope
push
pop
aas
in
ljmp
int
sbb
fstl
adc
ds
add
cmp
add
aas
fcomps
xlat
icebp
pusha
sbb
lret
pop
lret
jbe
and
push
mov
int
outsl
insl
or
mov
insl
test
add
sbb
xchg
dec
and
daa
fbstp
stc
sbb
and
hlt
or
push
popa
adc
cmpsl
insl
lock
dec
push
lods
std
mov
mov
xor
pop
leave
fadds
inc
pop
push
popf
addr16
cwtl
fistl
cmp
nop
lcall
pop
pop
in
cmp
and
ds
lret
sti
pop
pop
ljmp
outsb
cmp
add
push
xchg
imul
aaa
fmuls
inc
sti
cmp
adc
pop
xchg
aaa
fimull
pop
xchg
sub
jg
scas
push
dec
cmpl
in
inc
lock
repnz
clc
add
xor
fistpl
dec
mov
add
int3
enter
xor
imul
mov
xlat
mov
xchg
sar
push
or
faddl
xor
es
xlat
arpl
flds
fildll
xor
dec
aas
pop
push
and
fs
jae
push
xor
mov
fwait
and
aas
jle
mov
cmp
add
dec
jmp
lcall
out
push
mov
test
clc
push
in
mov
mov
xchg
stc
ret
in
adc
pop
xor
fsubrp
push
xor
insl
bound
or
xor
scas
sbb
enter
test
gs
adc
adc
cmpsb
inc
jae
mov
jo
iret
mov
sahf
out
inc
xchg
push
xchg
mov
pop
cmc
into
and
ds
pop
fidivrs
mov
stos
mov
inc
rolb
fisubl
insl
xlat
lret
arpl
mov
xor
daa
gs
call
push
push
mov
pushf
in
jle
inc
adc
movsb
jo
out
jp
adc
mov
jno
mov
call
add
jmp
test
movsb
sub
add
adc
leave
dec
mov
mov
mov
mov
fisttpll
mov
cltd
ss
jmp
sahf
call
mov
and
es
cmp
test
inc
orb
int
lods
ljmp
loope
in
jbe
or
jecxz
xor
inc
and
ja
adc
pop
filds
inc
test
dec
sbb
mov
addr16
loope
sub
inc
cwtl
aad
loopne
rolb
dec
xor
mov
fstl
lcall
sbb
push
ds
test
lahf
insl
fwait
pop
roll
add
sar
jle
jge
test
incl
adcl
lahf
push
iret
jbe
xor
mov
cmpsl
mov
inc
movb
jmp
lret
jno
jno
xor
test
inc
pop
pushf
scas
fimull
pop
loop
or
iret
sub
in
mov
inc
jno
xor
into
outsl
sahf
xor
out
mov
movsl
mov
jae
repz
dec
sub
jp
jo
aas
jle
jns
cmp
mov
andl
inc
push
jo
sub
stc
gs
xor
pop
dec
xchg
pop
lods
push
adc
sub
out
jae
jb
lret
push
jo
sbb
sbb
xchg
pusha
outsb
inc
cmp
jg
jae
jecxz
stc
mov
add
mov
lahf
add
lds
ja
mov
hlt
jo
loope
add
enter
aaa
das
fs
or
fwait
dec
sbb
xlat
bound
std
fwait
repnz
xor
jmp
pop
jo
stos
cmp
iret
ret
les
mov
loopne
sub
imul
mov
mov
outsl
imul
jb
fcoms
dec
jl
andb
mov
adc
and
lods
dec
fwait
outsl
inc
mov
cmp
pop
push
mov
dec
sbbb
jns
fcompl
jbe
jmp
push
out
pop
fwait
or
ja
addl
xlat
in
mulb
dec
jno
cmp
orl
xchg
cwtl
cmp
cwtl
xor
xor
rclb
test
push
bound
movswl
lcall
aas
adc
fs
pop
and
xchg
ss
sub
add
andb
xchg
sub
cltd
mov
or
push
xchg
hlt
sub
cmp
jns
or
xor
mov
push
inc
mov
loopne
mov
cmp
enter
loope
andb
daa
mov
cmp
fcompl
fildll
mov
or
in
jp
mov
aas
sysexit
ret
fstpl
in
xor
xchg
xchg
insl
and
jnp
cwtl
lods
fnstenv
add
mov
adc
hlt
pop
fcoms
stc
fdivrs
std
add
loope
add
push
or
les
mov
fcomip
clc
loopne
sbb
dec
into
movsl
arpl
fsubl
out
jmp
mov
sub
mov
stos
aad
lcall
cmpsb
jb
lods
pop
adcl
xor
out
fsubs
adc
sub
fs
sbb
test
lcall
xchg
pop
adc
adc
arpl
daa
stos
xor
test
or
and
xor
adc
in
adc
xchg
inc
xchg
test
cmp
lods
cmp
mov
pop
outsb
int
test
pop
dec
mov
fs
lods
pusha
pop
test
push
pop
add
scas
adcl
ja
icebp
jmp
or
pop
out
neg
fldcw
pop
stc
aad
fnstsw
or
jo,pt
out
loopne
add
pop
dec
iret
xchg
or
cmp
jns
push
xor
fucomip
outsl
adc
fmull
inc
sbb
call
or
idivl
out
dec
das
call
mov
imul
inc
jo
mov
xchg
shl
data16
jae
add
in
push
xorb
sub
test
mov
mov
fsubr
and
xor
repz
repz
xor
jns
lea
xchg
mov
out
cmc
and
iret
and
pop
imul
lgs
dec
ret
test
je
cmp
mov
loopne
movsl
out
mov
imul
jo
mov
mov
inc
ljmp
js
std
subb
pop
xor
pushf
sbb
fwait
outsb
dec
mov
xlat
test
mov
shll
mov
ja
mov
mov
rolb
cmpsb
mov
jne
sbb
loope
stos
jmp
stos
push
push
cmc
lahf
sbb
jo
mov
jmp
bound
in
stos
movsl
mov
out
inc
pop
aas
cltd
mov
scas
test
xor
push
mov
cmp
cltd
ret
in
and
aad
int3
js
das
xor
hlt
addr16
inc
sbbl
push
sbb
ja
es
jne
out
cli
int
icebp
push
data16
insl
inc
sbb
sbb
jp
loop
xchg
push
sahf
fwait
mov
loopne
notl
xchg
adc
jbe
adc
sub
imul
lods
pop
jmp
je
cmp
int3
hlt
jge
rcrb
inc
testb
aad
cwtl
mov
or
inc
jb
inc
aas
mov
loope
subl
jae
enter
dec
push
daa
sbb
mov
inc
orb
pop
xchg
mov
mov
addl
adcl
roll
shrb
inc
out
movsl
cmp
jg
or
push
or
jmp
push
jecxz
flds
xchg
xchg
push
sub
jae
fistpl
repz
pop
bnd
jecxz,pt
or
shrl
test
fs
cwtl
mov
and
ss
fwait
adc
stc
shlb
dec
mov
pop
push
in
mov
loopne
mov
xor
jp
push
mov
stos
or
aas
std
sbb
mov
test
loop
out
outsl
mov
push
dec
jg
fucomi
inc
outsl
add
add
and
xchg
lods
sarl
add
push
inc
xchg
addr16
loop
and
in
adc
movsl
lods
mov
aad
adc
add
sbb
insl
push
push
dec
nop
insl
nop
aas
jb
pop
pop
outsl
fisttpll
loop
call
push
out
stos
push
cmp
or
aas
add
pop
sbb
imul
inc
sbb
mov
fstps
sbb
mov
leave
je
jecxz
pop
jl
cmpsb
mov
neg
pushf
sub
or
int
jnp
out
fistps
in
xchg
movsb
cmpsb
clc
loope
add
stos
div
out
jns
adc
dec
push
lods
adc
xor
xor
leave
push
loop
loope
test
sub
push
fildll
ret
jl
jp
push
or
dec
dec
cwtl
fwait
dec
lods
bound
jbe
gs
inc
cmc
mov
mov
add
adc
adc
ret
xchg
and
push
xchg
ljmp
in
sbb
xchg
adc
push
ljmp
inc
xlat
aad
arpl
pop
xchg
daa
popa
rclb
shll
cmp
and
mov
sub
dec
inc
jg
loope
aad
or
stc
pop
pop
test
xchg
and
mov
outsb
xchg
add
sub
jmp
test
gs
mov
sub
int
mov
cmpsl
mov
aaa
cwtl
pop
test
out
or
jg
out
shll
cmpsl
rcll
inc
daa
imulb
inc
scas
iret
xor
stos
sarb
cwtl
mov
addr16
push
xchg
aas
or
popl
in
dec
add
fcmovne
xor
movsl
scas
arpl
verr
movsl
imul
jno
pushf
push
fwait
movb
enter
dec
sub
je
movsb
jecxz
loop
cmpsb
in
push
test
fcompl
cbtw
and
or
imul
cmp
jns
out
add
test
in
pop
mov
adc
lcall
pop
jle
cmp
push
cmp
adc
loopne
xor
cli
mov
or
lret
push
inc
outsb
jecxz
and
mov
sti
cmc
fxch
xor
jmp
pop
shr
jne
lret
int3
scas
testl
push
add
xchg
lea
lahf
cmp
mov
lcall
incl
cmp
adcl
pop
fnsave
or
jle
test
lret
inc
mov
push
scas
dec
push
movsl
cli
jnp
cmp
test
push
pop
sbb
adc
fs
push
ret
in
mov
neg
xchg
pop
sbb
cld
iret
add
cmp
aaa
xorl
mov
decb
das
pop
outsl
lea
xchg
fisubrl
pop
jmp
push
ss
fwait
add
stc
rcr
outsl
lods
ret
sub
xchg
mov
mov
lock
xor
out
cs
inc
or
sarl
rcr
mov
mov
int
cmp
aaa
stos
rclb
test
loope
data16
in
cwtl
lcall
fmull
or
pop
popa
sahf
lret
jl
push
in
mov
out
push
xor
sahf
jp
stos
ja
mov
pop
clc
test
das
icebp
shlb
jl
movsl
fidivrs
cmp
dec
clc
mov
aas
cld
xor
into
add
aam
inc
xchg
subb
sbb
mov
and
loopne
add
imul
and
cmp
xchg
cmpsl
lahf
jne
mov
sub
iret
mov
mov
out
data16
clc
mov
xchg
loop
jmp
div
aad
je
mov
mov
stos
lcall
notb
pushf
fcomps
pop
jecxz
orb
mov
cmp
lods
dec
push
daa
jnp
dec
cmp
jnp
mov
enter
in
out
mov
ljmp
mov
lret
inc
add
adc
xor
xchg
add
sub
lret
lret
imul
out
cld
addr16
test
stc
pop
add
mov
movsl
add
stc
mov
jae
sub
leave
loop
adc
ret
popf
sahf
push
mov
xor
subl
enter
out
lea
push
push
ret
fmul
xor
mov
push
push
std
fcoms
push
push
std
jg
push
xchg
outsl
rcrb
test
stos
mov
cmc
cmp
aaa
push
add
or
daa
push
adc
js,pt
subl
lahf
adc
out
into
jbe
mov
dec
and
pop
ret
sbb
and
inc
sbbl
add
aaa
xchg
cmp
push
das
fwait
rorb
sub
push
lahf
lcall
incl
sub
and
adc
aad
fiadds
pop
jl
mov
fsubrs
mov
mov
aam
or
iret
jmp
push
outsb
mul
icebp
xchg
xor
repz
cmp
mov
lea
outsl
sbb
xlat
lret
ljmp
arpl
hlt
or
popa
and
inc
mov
test
inc
lods
mov
lret
mov
jp
enter
shrb
mov
lret
fisubs
pop
jae
fwait
and
xchg
jbe
jmp
std
dec
mov
mov
repz
push
aas
inc
lcall
push
mov
outsb
push
outsl
bound
sbb
cli
inc
test
jecxz
out
jecxz
inc
or
pushf
stos
test
cmp
sub
lcall
add
lcall
pushf
icebp
mov
inc
mov
cmp
sbb
insl
stos
out
aam
fcoml
loopne
nop
push
mov
and
sbb
cltd
push
cs
xlat
sbb
xchg
daa
jecxz
xchg
xchg
xchg
pop
add
out
adc
cmp
push
or
clc
dec
xchg
scas
xchg
repz
mov
xlat
push
sub
xlat
lods
mov
jmp
mov
pushf
cmpsb
dec
adc
dec
popl
insb
nop
mov
rol
cmp
mov
jns
dec
bound
cmpb
pop
fcompl
fisubs
or
out
pop
movsb
cld
push
xor
outsb
pop
pushf
lds
inc
cltd
addr16
je
mov
or
jg
push
int3
aaa
icebp
out
jne
loop
dec
ljmp
cli
adc
and
jno
add
pop
mov
jae
loop
and
pushf
rolb
xchg
das
xor
clc
insl
jl
ja
mov
or
adc
mov
aaa
jmp
daa
test
rorb
mov
inc
arpl
push
int
mov
xlat
mov
push
shl
imul
inc
test
xchg
fwait
adc
sbbl
xlat
mov
imul
sub
into
mov
adc
fs
mov
cld
jmp
insb
in
pop
pop
sub
sbb
push
aas
roll
add
push
mov
jbe
hlt
sbb
cmp
mov
mov
push
fld
sbb
mov
sbb
mov
cltd
sbb
hlt
mov
push
inc
sub
dec
sub
je
xchg
xor
divb
mov
pcmpeqb
aad
push
or
mov
rcll
jb
popf
pop
roll
xchg
adc
jp
ret
into
sbb
arpl
push
stos
loope
jne
pusha
xor
jo
in
xor
fwait
mov
sbb
cmp
testl
add
mov
test
adc
sub
mov
push
inc
ret
clc
sbb
xor
lock
frstor
jle
push
push
clc
shr
xor
sub
sbb
pop
cs
test
xchg
and
popl
mov
mov
sub
scas
or
lret
shlb
pop
dec
adc
movsb
add
and
lods
pushf
jae
and
ja
scas
imul
in
popf
xor
icebp
adc
sub
je
cmp
out
dec
add
shlb
movl
push
clc
mov
cmpl
xor
subl
lea
test
aaa
push
push
or
int
xor
inc
jne
sub
adc
adc
push
aas
outsl
add
test
ds
dec
cmp
or
aas
jno
mov
adcb
ss
mov
or
push
pop
xchg
xor
cmp
data16
mov
dec
dec
loopne
adc
dec
in
push
push
cmp
cs
inc
fidivl
jl
cltd
mov
mov
ficoml
notrack
fsubrs
ds
fxam
lods
jno
mov
cld
repnz
int3
jle
lcall
rorl
cwtl
rclb
in
adc
inc
or
add
pop
stos
ss
hlt
loopne
xor
repz
lods
adc
jae
and
jne
iret
jp
add
mov
xlat
xchg
xchg
shll
test
sti
xchg
jmp
lock
push
adc
shlb
and
cmp
pop
pusha
es
cld
nop
shl
pop
movsl
mov
popa
inc
test
jg
in
and
insl
daa
incb
and
dec
stos
pop
sbb
ds
shll
sbb
cmpsl
sbb
or
movsb
movsl
pushl
adc
fidivrs
movsb
push
divb
cli
push
jb
popa
lods
add
imul
sub
jecxz
inc
mov
hlt
xor
mov
pop
inc
into
sbb
sub
andl
arpl
out
jb
xchg
add
call
test
add
iret
into
jbe
lret
stos
lcall
push
rcrb
xlat
dec
int3
lods
lods
mov
in
frstor
insb
push
int3
xchg
cs
filds
mov
sbb
xchg
popf
lea
scas
mov
stos
test
push
cltd
mov
push
dec
adc
jns
daa
mov
or
shll
sbb
sbb
mov
cmpb
xchg
push
loop
aas
sub
xchg
pop
sbb
xor
pop
movl
jnp
filds
dec
into
pop
mov
adc
iret
mov
loop
adc
stos
xchg
and
xor
aam
cmp
mov
and
lods
sarl
shl
in
dec
ds
sbb
daa
aam
leave
push
xchg
bound
pop
xchg
cmc
xchg
fdivl
xor
sbb
inc
stos
cmp
or
adc
cmp
loopne
lcall
sbb
push
imul
out
xor
dec
jne
in
scas
addb
xorl
xor
and
sbb
jne
lcall
mov
add
push
lds
add
xchg
jle
bnd
dec
adc
fbld
lea
jne
mov
push
mov
das
xchg
testb
aaa
outsb
jmp
sarb
cmp
mov
iret
arpl
mov
adc
rcrl
mov
mov
or
pop
mov
push
cli
clc
mov
sahf
notb
loopne
fnsave
icebp
fldcw
out
xor
shl
xor
jno
je
adcl
dec
xchg
push
pop
dec
push
dec
dec
cmp
imul
and
aas
fstpt
and
mov
mov
push
fs
adc
shlb
cmpl
dec
jbe
lcall
mov
in
sub
test
jbe
jp
add
xor
mulps
repz
mov
pusha
mov
mov
xchg
jnp
sub
sbb
push
into
outsl
repnz
inc
xchg
enter
mov
pop
add
pop
adc
mov
ss
jmp
jle
dec
sub
lock
mov
xchg
mov
mov
adc
xor
jno
push
loop
loop
dec
loope
add
xor
test
mov
mov
not
jg
push
sbb
jle
inc
mov
mov
loope
mov
outsl
cmp
rcl
mov
cmpb
loope
stos
das
add
imull
pushf
adc
pop
add
pop
rolb
mov
jmp
rorb
and
fildll
mov
xchg
mov
adc
shrb
out
pop
cld
cmpsl
add
loop
jnp
outsb
lcall
mov
daa
jnp
dec
fisubs
sbb
daa
xchg
lods
lret
test
rorl
dec
jle
addb
lock
fstpt
inc
aas
pop
divl
xchg
fwait
xor
lods
add
push
decb
movsb
rclb
popa
outsl
pusha
stc
adc
sub
popa
push
mov
sub
mov
pop
insb
add
inc
enter
popf
push
call
cld
jne
sbb
push
lock
call
lcall
dec
frstor
gs
cmp
inc
cmp
insb
in
and
push
inc
xor
jo
loop
cmp
lods
pop
sahf
js
jno
lret
mov
xor
lock
xchg
cwtl
xchg
xor
les
punpckhwd
mov
int
dec
movl
neg
or
movl
xor
in
negb
int3
repnz
jb
push
icebp
inc
adc
sub
jno
roll
add
decb
mov
aad
push
mov
mov
xor
sahf
jo
fwait
xchg
jne
rcl
jmp
xchg
cmpb
mov
inc
pop
mov
mov
mov
or
jae
stos
dec
add
lcall
jne
sahf
jmp
imul
fcmove
jmp
mov
add
imul
and
xchg
jno
jecxz
test
out
mov
cmp
mov
dec
push
mov
aad
cmp
scas
jno
cwtl
xchg
jno
adc
mov
dec
repnz
add
sub
dec
push
cmp
lret
jge
cmpsb
sub
sbb
mov
les
jg
adc
loopne
ss
cmc
insl
mov
repz
jle
mov
insb
sub
and
add
push
pop
iret
xor
mov
add
dec
rorl
clc
lahf
out
loopne
push
std
sbb
nop
or
or
bound
jae
cli
out
in
push
out
scas
std
mov
test
cltd
std
jge
and
aam
add
stc
adcl
jae
or
test
shll
mov
out
scas
or
push
adc
int3
stos
lret
adc
cmpsl
mov
repz
push
push
insb
lds
bound
jno
sub
loope
aad
lock
out
dec
cmp
mov
das
xchg
dec
and
add
fs
sti
call
dec
cmova
xor
add
or
xor
shll
add
iret
or
mov
push
stos
aas
add
cwtl
cmp
push
adc
popf
sbb
or
sub
xchg
sub
out
add
test
mov
jle
fs
adc
sti
add
fidivs
xchg
sub
pop
mov
push
jae
cmc
inc
in
addr16
ficomps
scas
imul
dec
add
sbb
mov
sbb
psubq
mov
dec
sub
aaa
pop
adc
imul
sub
shrl
cmp
push
or
mov
stc
or
cmp
jae
out
add
and
lea
stos
imul
cmp
mov
dec
inc
lock
inc
addr16
dec
jbe
mov
mov
test
mov
inc
mov
mov
das
jmp
cmpsb
fmull
push
data16
int
dec
pop
lock
data16
jmp
ds
sub
mov
mov
test
in
mov
popf
movsl
mov
mov
add
add
jg
test
je
adc
cli
insb
xchg
lcall
jnp
inc
loope
scas
in
test
imul
sub
cld
cld
dec
xchg
add
out
cmp
jmp
xorl
lds
adc
mov
leave
scas
mov
lret
mov
loop
lret
sarb
out
xlat
into
cmp
push
orl
loope
shlb
movsb
fisubrs
arpl
xchg
cmpl
fdivrp
int3
mov
fbld
mov
es
add
test
rclb
xor
movnti
lock
fimull
dec
lods
fisubrs
out
in
loopne
push
add
pop
sbb
rolb
fs
mov
mov
push
fimull
dec
dec
scas
push
popf
stc
out
jne
dec
sbbl
jb
adc
inc
push
pop
jne
fidivrs
dec
test
imulb
push
mov
popa
lret
lahf
push
repnz
lea
mov
and
lods
repz
mov
pop
and
xor
test
pop
stos
sbb
popa
xchg
ja
test
pop
jno
add
jg
sub
testb
or
sahf
ja
push
add
inc
mov
dec
sbb
in
pop
and
xchg
nop
xchg
cmpsb
xor
stos
adc
mov
test
in
popf
mov
fsubrp
xor
jbe
in
and
test
push
inc
push
and
clc
rorb
out
push
sahf
inc
les
sbb
lds
mov
mov
sti
mov
pop
push
test
jne
and
mov
stc
xor
je
inc
cmp
or
lods
stos
xchg
int3
add
dec
and
push
dec
in
mov
stc
ljmp
shl
cmpsl
jno
dec
cmp
into
push
jl
test
jae
pop
add
outsb
jge
or
imul
and
int3
jp
inc
jbe
test
test
js
pusha
outsb
aad
mov
inc
aas
lods
add
sub
jle
imul
jl
push
shl
popf
push
fisubl
mov
lret
pushl
lret
add
es
loop
test
inc
sbb
cmp
xchg
adcb
movsb
pop
aam
stos
inc
mov
cli
xchg
mov
push
lret
pop
jg
push
jae
pusha
hlt
mov
and
test
adc
mov
das
cmp
xchg
dec
or
push
je
sub
mov
roll
inc
lret
add
aaa
rorl
jne
push
repnz
xlat
mov
add
lcall
push
cmp
inc
sub
fcmove
lds
enter
sub
push
jle
test
lret
fldenv
or
and
mov
and
pop
push
arpl
outsb
insl
push
jae
scas
das
mov
jge
nop
xchg
and
push
out
jecxz
xor
mov
and
js
mov
jb
addl
jmp
dec
ja
test
insb
je
sbb
cmp
jl
loopne
dec
iret
mov
mov
add
sbb
shll
xor
cmc
pop
mov
mov
add
pop
jge
xchg
imul
cwtl
pop
stos
dec
imul
cmpsl
orb
xor
mov
pushl
push
inc
mov
lods
jnp
add
xor
cmpsb
imul
mov
shr
insl
movsl
push
mov
das
ret
adc
pop
nop
je
cmpsb
cmp
jae
outsl
push
xor
sbb
adc
dec
pusha
movsl
mov
and
shll
sbb
xor
movsl
fldenv
adc
orl
ljmp
lcall
decl
xchg
frstor
xor
adc
aaa
add
pop
xchg
lret
cmp
pop
add
fildll
test
jo
hlt
aaa
daa
mov
jle
in
stos
adc
in
push
popa
fsubrl
jnp
out
inc
xlat
add
hlt
cmpl
rcll
sub
pusha
jns
xchg
repnz
push
xchg
fimull
mov
cmc
or
mov
and
xlat
sbb
push
add
stc
pop
sub
pop
dec
fcoml
cmp
dec
ror
int3
xor
nop
sub
cmp
mov
rcr
es
xor
push
and
xor
sahf
mov
inc
jnp
nop
in
jno
scas
shl
jne
scas
mov
push
out
jp
insb
pushf
insl
fucomi
xor
stos
jmp
sbb
sub
mov
out
stos
ljmp
dec
repnz
in
sbb
mov
adcb
les
inc
mov
jns
ficomps
xchg
xchg
mov
add
dec
sub
fs
cmpsb
lock
jp
xor
sbb
movsl
inc
sub
add
or
and
mov
loopne
idivl
clc
cmp
jmp
sahf
pop
dec
imul
or
in
lret
scas
ja
adc
cltd
insl
mov
inc
sbb
repnz
lahf
sahf
xchg
or
jne
mov
pushf
jne
popf
xorl
sahf
mov
dec
jnp
mov
fisubl
add
jmp
push
ja
mov
shr
push
aaa
dec
mull
add
cmp
int
sub
xchg
and
lcall
mov
sbb
xor
add
popa
rcl
cmp
cmp
pop
xchg
fwait
out
mov
xlat
imul
mov
pop
shr
pop
adc
xchg
mov
jg
jbe
xchg
mov
and
pop
dec
fisttpl
in
jbe
push
lds
push
mov
mov
fwait
and
xchg
test
stc
ss
mov
xlat
inc
mov
nop
mov
pusha
dec
xchg
mov
cs
rorl
adc
adc
mov
fldenv
pop
adc
push
adc
or
add
jo
popl
insb
int
add
repnz
test
sub
mov
adc
das
bswap
cmp
jge
fnstcw
mov
push
imul
test
jbe
xchg
movsl
aaa
test
add
daa
cmpsl
push
popa
push
aad
mov
and
call
scas
push
xor
or
mov
or
fidivs
pop
xlat
or
jecxz
push
push
push
lcall
jge
sbb
aad
mov
mov
lds
or
and
xor
icebp
lds
int3
test
inc
push
inc
movsb
xor
mov
pop
outsl
andb
xlat
and
push
je
js
std
mov
xchg
addr16
adc
xchg
leave
mov
adc
or
push
adc
sub
rcrb
xor
cmp
shrl
movb
insb
sub
popf
rcrl
scas
in
or
push
cs
stos
iret
imul
dec
jno
mov
sub
xchg
out
fcompl
nop
jo
out
dec
jg
pop
js
mov
filds
or
cltd
fdivl
and
stos
jp
mov
inc
push
cmpsb
push
mull
mov
enter
mov
popa
call
mov
xchg
popf
cmp
iret
cmpl
xchg
icebp
out
or
dec
roll
js
int3
out
popa
adc
and
adc
or
outsl
aaa
dec
lahf
push
lahf
and
imull
push
adc
mov
out
sbb
dec
lock
or
adc
adc
hlt
jmp
jg
add
cmp
stos
repz
pushf
cld
jns
cli
aam
fildl
jbe
dec
push
imul
or
fmuls
movsb
adc
fisttpll
pop
lods
jb
or
sarl
ret
sbb
xchg
pusha
push
lahf
jge
divl
mov
xchg
outsb
fldenv
iret
aad
dec
pop
mov
add
jp
cwtl
stos
jns
jbe
rcr
pop
jnp
out
dec
jne
xchg
pushf
cltd
loop
test
push
fcompl
mov
push
add
add
cmp
imul
in
jp
pop
stos
push
sub
cs
popf
out
aas
imul
xor
test
fidivrs
add
mov
lahf
repnz
mov
fstps
pop
int3
sub
inc
inc
sub
pop
or
jae
adc
xchg
inc
in
lcall
insl
inc
movsl
mov
xchg
mov
dec
test
cmp
jbe
arpl
mov
jb
outsb
dec
movsl
movl
mov
jno
out
jecxz
mov
mov
xor
fisubs
cli
outsl
icebp
adc
into
inc
push
fdivrs
and
call
jmp
and
pop
lock
insl
mov
fwait
jnp
repnz
pop
mov
add
pop
imul
push
lds
or
push
push
cmp
ret
jmp
out
enter
lds
ljmp
das
fidivrs
sbb
jmp
into
popa
movsb
cmpsl
inc
clc
jecxz
inc
jle
fmull
mov
out
pop
aas
cmc
daa
ret
jecxz
mov
dec
sbb
xchg
sbb
sub
xchg
cmp
dec
xchg
call
into
in
out
xorb
jbe
sti
mov
add
lock
sub
std
dec
push
xchg
dec
fimuls
pop
mov
mov
mov
in
lds
push
nop
jno
mov
inc
notb
hlt
mov
sbbl
aam
rclb
cwtl
push
loopne
xor
mov
adc
andl
in
out
sbb
push
xchg
push
shrl
mov
cmpsl
adc
jbe
jns
aad
movsb
add
adc
inc
xchg
pop
mov
fsub
cmp
push
leave
push
cmp
push
jo
fwait
push
mov
mov
fld
cmc
aad
mov
loope
aas
add
add
mov
lods
rorb
les
movsl
push
inc
sbb
mov
enter
and
dec
js
inc
test
inc
xor
clc
sub
jl
fs
nop
aad
shl
pop
ret
cmp
aam
mov
scas
xchg
jl
incl
sub
pushf
dec
inc
pushf
jne
int
sbbl
adc
subl
add
adc
iret
ja
sub
repnz
xchg
sbbl
dec
inc
scas
das
and
cmp
dec
push
push
xor
mov
out
out
mov
movsl
jo
mov
add
push
imul
push
andnps
or
jg
insb
jge
popa
sti
scas
dec
adc
inc
cwtl
dec
xor
push
sarl
mov
dec
inc
push
insb
cmp
into
lahf
cmp
xchg
lods
inc
leave
scas
mov
mov
iret
lods
jne
inc
jns
daa
in
fsubl
xchg
mov
dec
mov
cmp
mov
push
and
jmp
xchg
xchg
inc
aad
add
decl
pop
loop
pop
pop
jmp
fsubl
out
mov
stos
aaa
sbb
repz
stos
cld
or
inc
movsb
je
lds
dec
pop
inc
or
scas
jp
shrl
cli
rorl
mov
mov
xor
in
or
mov
popf
aam
cmp
xor
lahf
imul
shrl
loope
mov
sbb
sbbl
xor
dec
lock
and
mov
aas
gs
inc
add
xor
pop
jl
mov
jp
or
out
jae
push
push
into
cwtl
xchg
mov
ljmp
test
addr16
add
push
pop
scas
imul
push
inc
mov
call
xchg
outsl
adc
xorb
mov
sub
rolb
inc
mov
and
es
sbb
shlb
push
dec
adc
faddp
cmova
mov
inc
sub
fs
push
pop
scas
imul
cmc
sbb
inc
mov
aam
pop
mov
sub
sub
test
or
mov
xor
in
popf
push
sbb
cmpl
dec
movsb
pop
gs
sbb
cmp
test
shll
femms
sbb
sub
jne
jge
or
or
inc
popf
add
cmp
out
enter
dec
fadds
inc
mov
xor
ljmp
outsl
jmp
leave
mov
pop
xchg
lret
and
or
jne
test
add
push
inc
mov
cltd
test
mov
call
xor
ss
fistl
pop
sub
sbb
and
pusha
mov
stc
lock
add
pop
xchg
ljmp
shlb
dec
adc
fidivl
pusha
int
out
test
adc
jmp
imul
mov
push
mov
outsb
mov
rsm
add
mov
inc
call
imul
cmpsb
pop
jge
mov
pop
mov
cmpsl
mov
leave
std
and
jg
jae
cli
adc
loopne
push
aas
fs
popa
adc
push
adc
inc
ds
cmp
lret
outsb
jp
lods
push
imul
inc
mov
add
imul
dec
stc
clc
sti
test
mov
jl
or
xor
test
pop
outsl
lods
push
pop
pop
test
mov
punpckhwd
mov
inc
mov
lds
addr16
push
repz
ja
ds
fisttps
and
dec
push
mov
aam
fidivs
xchg
inc
inc
push
xchg
in
sub
pop
stos
jae
mov
dec
xchg
fldcw
aad
fcoms
jb
and
fwait
jl
addr16
imul
js
and
jo
int
jns
arpl
or
pop
mov
sahf
push
es
mov
jl
fsubp
fwait
mov
sub
or
cmc
sub
adc
in
mov
lahf
lds
jmp
jmp
dec
scas
mov
mov
das
cmp
mov
outsl
cmpl
movsb
data16
cmp
adc
or
addr16
mov
fstps
out
and
into
test
test
ficoml
out
inc
mov
loopne
lcall
test
insb
or
cs
or
mov
sub
xchg
pop
inc
lret
jnp
cwtl
mov
xchg
or
cli
rcr
fidivrl
mov
hlt
cwtl
popa
mov
data16
pop
repnz
sbb
lcall
lret
std
mov
jno
mov
xchg
push
jmp
mov
xabort
in
pop
push
daa
add
je
fnsave
push
pop
outsl
fbld
leave
fisttps
mov
notb
xor
rolb
sub
icebp
outsb
pushl
adc
fdivr
adc
gs
out
xchg
lcall
shr
aad
inc
arpl
outsb
insb
repz
out
sbb
cmc
out
and
push
cli
fs
arpl
xchg
mov
gs
xor
cmp
xchg
pop
data16
xchg
outsb
jo
std
cmc
mov
aad
in
movsb
in
mov
jbe
out
loope
jp
out
aad
mov
push
jb
adc
or
test
nop
push
sub
pop
cmp
movsb
mov
stos
sahf
imul
pusha
add
fstpl
push
sub
jmp
cmpsb
jecxz
loop
add
xor
pop
add
jmp
loop
sbb
adc
int3
sub
xchg
jmp
ss
cwtl
leave
int3
xchg
jg
iret
mov
mov
lret
push
adc
dec
xlat
stos
xor
dec
mov
lods
scas
repnz
add
add
ret
outsb
enter
fistpl
xor
xor
icebp
mov
mov
inc
sti
sub
inc
adc
mov
mov
icebp
xchg
xor
addr16
push
inc
mov
cli
sub
push
or
jae
aaa
sub
lahf
jmp
mov
xchg
jg
push
adc
loope
sar
add
std
mov
in
arpl
icebp
mov
cs
cmp
aaa
gs
dec
into
push
inc
fisubl
xchg
ljmp
xchg
pop
xlat
int
lods
cmp
cld
arpl
sahf
aam
bound
cmp
sbb
clc
cmp
pop
sbb
mov
subb
std
mov
jns
cltd
ror
sub
ds
popf
ja
shll
ret
repz
rcrl
sub
clc
mov
arpl
push
lea
mov
or
insl
jbe
cmp
sbb
aas
jmp
insl
inc
call
es
cmpsb
fistpll
jp
add
mov
shll
cmp
jbe
aad
inc
adc
pop
push
or
mov
xor
stos
enter
insb
fucomip
dec
mov
ljmp
cmpsb
or
dec
xchg
adc
mov
pop
xchg
addl
fisttps
incb
ret
sahf
sti
sub
mov
aad
or
cmc
push
aam
push
incb
or
pmuludq
rcll
popa
inc
jle
repnz
jle
xchg
fadds
jmp
mov
hlt
mov
xchg
inc
fnstsw
aas
imul
xlat
es
mov
and
mov
aam
xchg
pushf
fldcw
sub
and
inc
cmp
mov
push
sahf
jp
pop
bound
loope
shl
add
dec
xchg
shl
mov
add
sub
add
gs
dec
mov
shll
push
add
es
ljmp
dec
leave
sub
mov
push
or
les
jns
scas
jae
fistpll
scas
lret
stos
jbe
pop
xor
or
in
push
rcll
rcr
mov
test
gs
lock
cltd
adc
lods
sub
je
addb
call
out
mov
sbb
adc
loopne
rcr
adc
lret
push
mov
cmc
mov
ljmp
fmuls
mov
pop
jbe
aam
pop
sbb
iret
out
jge
sbb
pop
sub
fwait
mov
sbb
cmc
lock
lea
scas
jne
ss
pop
movsb
cmp
jb
lea
and
mov
mulb
les
clc
shrb
out
inc
cltd
mov
jle
mov
es
inc
mov
es
fbld
mov
sub
stc
jecxz
mov
popf
ss
sbb
or
jle
mov
je
rcr
popf
std
les
fidivrs
push
sbb
push
jl
sub
fstpl
pusha
xor
inc
jo
iret
inc
adc
test
inc
pop
inc
jns
xchg
rcll
mov
dec
gs
and
sbb
xor
stc
shl
loopne
cmp
movl
jmp
cmp
loopne
cmc
mov
pop
arpl
shlb
adcb
fcomps
in
cmp
push
sub
xchg
stos
aas
cld
iret
jg
or
adc
aas
xchg
je
repnz
lds
cmp
push
and
cmp
cmpsl
or
or
ja
call
mov
sub
mov
or
lods
iret
stc
inc
in
stos
test
sti
sbb
in
push
sub
mov
pop
mov
push
cli
sub
jnp
xor
xor
mov
out
aad
pusha
sarb
fistpll
mov
mov
dec
and
push
ds
hlt
xchg
call
shlb
push
stos
in
pushf
dec
mov
aas
dec
imul
aas
lahf
pushf
outsb
addr16
xor
fdiv
sbb
mov
fidivrs
loopne
or
push
push
push
pop
paddb
bound
lcall
lahf
xchg
repz
jmp
imul
add
inc
jae
psadbw
push
mov
add
inc
pop
add
push
cmp
sub
movsl
lods
fldlg2
dec
push
int3
lret
fiadds
fdivs
arpl
incb
inc
cwtl
cmp
dec
arpl
stos
xchg
lahf
ds
ret
lock
xor
inc
in
or
repz
jecxz
dec
inc
jge
imull
xor
jecxz
fdiv
xor
push
or
jl
enter
int
mov
adc
push
mov
sub
lock
mov
xor
rolb
loop
js
sub
movl
push
push
insb
push
dec
fldcw
dec
scas
cmp
test
push
jno
lahf
fnstcw
faddl
mov
test
push
lds
lahf
adc
push
andl
jbe
cmp
ret
dec
sbb
add
in
mov
mull
sub
das
adc
jne
push
mov
pop
cmpsl
push
add
push
mov
fnstenv
sahf
aas
ret
div
mov
ret
xchg
clc
add
inc
shlb
pop
xor
std
mov
insb
xor
sub
cmpb
inc
cwtl
mull
lds
mov
je
jb
mov
mov
add
loope
int3
call
shll
xor
add
lock
mov
dec
mov
leave
inc
lret
insb
jle
and
or
movsl
xchg
adc
mov
add
daa
mov
and
xchg
movsb
dec
pop
mov
cmp
insb
jecxz
imul
and
sub
or
mov
icebp
mov
aaa
arpl
sub
inc
push
dec
fwait
dec
adc
and
push
xor
shl
fildll
lahf
std
aam
xchg
shrl
pop
dec
sarl
xchg
and
shlb
or
stos
outsl
sub
pusha
inc
mov
cmp
imul
daa
and
std
jo
rclb
fbld
jmp
xchg
or
inc
xchg
outsl
das
aaa
pop
xor
mov
fldcw
sbb
xchg
push
arpl
cmp
inc
adc
jge
imul
dec
or
sbb
inc
sbb
cmp
jge
jecxz
mov
adc
xor
fsubrl
insl
scas
loope
mov
xchg
lock
clc
xchg
jge
inc
fidivl
jecxz
test
push
test
xchg
repnz
mov
cli
dec
test
scas
test
push
mov
mov
leave
add
lret
sbbb
aad
sbb
sub
aam
jmp
adc
sub
add
and
lds
scas
or
xor
enter
aaa
adc
pop
mov
call
popa
lahf
fs
cmp
out
jmp
sbb
inc
mov
add
mov
and
aas
mov
pushf
xchg
or
inc
cmc
loop
pusha
mov
pop
movsb
ljmp
outsb
insl
add
add
movsl
xchg
and
or
gs
rcll
sbb
pop
mov
roll
push
mov
inc
xor
push
test
and
pop
outsb
xchg
jmp
sahf
add
xchg
pop
adc
aad
rclb
sbb
sbb
std
insb
adc
cmc
add
jp
dec
or
and
mov
mov
in
sub
adc
loop
das
rclb
mov
out
xchg
fwait
shrl
ficoms
or
inc
lods
jnp
int3
xor
lock
sbb
data16
lea
jno
pusha
mov
xlat
into
daa
ficompl
mov
adc
arpl
cmp
dec
sub
in
push
or
scas
xchg
sbb
orl
out
insb
adc
mov
lret
sub
jecxz
push
cmp
lret
adc
sub
arpl
pushf
sbb
sub
leave
inc
mov
pop
test
cmc
ficomps
mov
scas
jge
stos
push
pushf
je
xor
mov
clc
or
pop
pop
adc
lds
pop
inc
clc
sub
scas
test
cmp
cmp
xchg
sbb
cli
out
sbb
or
add
sbb
cmc
movsb
jmp
mul
es
and
push
jecxz
sub
out
add
test
pop
clc
cltd
daa
ficomps
cmpsb
and
pop
xor
mov
adc
xchg
and
scas
add
inc
movsl
mov
pop
jle
notl
and
add
xchg
xchg
pop
jb
inc
adc
inc
ja
inc
inc
fstps
sub
inc
jnp
cmpsl
pop
addl
push
xchg
jb
jne
xchg
mov
pusha
push
fsubl
imul
push
scas
repz
jge
add
shrb
jae
cmpb
mov
jno
jnp
cmp
mov
and
scas
or
pop
cmpsl
fisubrl
cmpsb
ljmp
adc
pop
inc
fsts
in
pop
xbegin
test
push
test
lods
push
jmp
xor
int
aam
aad
inc
jno
fadds
mov
fnstcw
mov
mov
jmp
out
pop
ds
sahf
imul
xchg
dec
xchg
adc
xchg
ret
call
fs
mov
je
push
jbe
add
mov
popf
xor
jle
add
movsb
imul
mov
out
add
xchg
sub
pop
mov
mov
inc
sti
cmp
push
pop
or
pop
popl
std
dec
push
hlt
outsb
push
dec
enter
aam
lret
int
mov
repz
mov
lods
xchg
lods
pushf
das
sub
pop
mov
sub
andl
int
push
mov
xor
pop
hlt
push
sbb
mov
scas
pop
call
daa
in
or
test
int3
inc
inc
movl
js
dec
pop
loope
daa
call
lcall
or
nop
pop
adc
cli
dec
jg
call
mov
xchg
testb
mov
jae
pushf
imul
xor
sbb
iret
jge
mov
dec
mov
or
mov
pop
vmulps
pop
cmp
ljmp
imul
push
imul
adc
fwait
jle
leave
xor
scas
sbb
jno
mov
jle
pop
cmp
mov
in
adc
in
jbe
and
fdivs
inc
cmpsb
sti
pop
push
lds
sti
cmc
push
fimuls
sub
pop
rorb
sub
lods
cmp
scas
xchg
hlt
adc
push
mov
pop
je
dec
push
daa
cwtl
or
mov
test
in
arpl
fwait
lods
pusha
sub
xchg
xor
nop
cmp
in
cld
jae
push
loope
mov
test
nop
nop
cmpsl
or
movsb
rcl
mov
mov
xor
pop
cmpl
xchg
mov
inc
add
enter
push
cmp
subb
adc
xchg
movsl
add
mov
subb
out
jecxz
cld
cmp
sub
gs
ja
pop
sbb
or
lods
imul
int3
cwtl
xchg
scas
push
fmuls
adc
stos
cltd
and
cld
xlat
mov
adc
dec
pop
iret
pusha
fildl
xor
bound
pop
rcr
dec
mov
jno
add
dec
es
into
clc
jae
loopne
xlat
out
cmp
in
rcll
pop
jge
cmc
sbb
xor
mov
lock
gs
inc
dec
xchg
dec
outsb
and
xchg
and
or
xor
lret
jne
pop
ficoml
adc
pop
iret
inc
pop
stos
hlt
outsl
lea
rolb
xor
cmp
repnz
lcall
xchg
cmpsb
add
push
jle
cmovle
xchg
and
incb
aas
push
mov
movlps
inc
loope
jne
and
data16
pop
imul
xor
cwtl
jns
rcll
and
xchg
pushf
adc
pop
and
out
pop
sbb
xchg
outsl
mov
out
loopne
repz
sahf
push
adc
mov
jmp
pop
mov
xor
mov
rcll
outsb
push
pop
cwtl
sahf
or
cmpxchg8b
rol
sbb
mov
mov
jae
mov
jmp
test
jae
dec
jl
push
xor
push
jmp
mov
and
add
xchg
pop
pushf
inc
lahf
decl
mov
jmp
pop
lret
mov
sub
ret
mov
mov
fsubrp
or
add
shlb
cmp
sbb
adc
inc
popf
xor
jecxz
pop
pop
jmp
pushl
lea
ret
jmp
sahf
out
mov
xchg
or
scas
xor
mov
mov
adc
jp
std
xchg
mov
mov
pop
fisubrs
repz
pop
in
cltd
mov
jge
mov
push
jb
dec
fwait
stos
push
lods
pop
adcb
mov
loop
int3
jb
loope
ret
dec
jo
stos
jae
outsl
sbb
data16
bound
popf
rorl
fwait
stos
xchg
in
dec
push
movsb
jge
dec
ds
rorb
jno,pt
outsl
ror
cwtl
jg
daa
cltd
dec
ja
jecxz
xor
aad
fidivrs
jne
enter
imul
add
sbb
shlb
fadd
sub
mov
dec
jnp
pop
push
push
into
add
int
out
lock
cmp
xlat
sub
pop
cs
mov
aaa
jmp
xchg
xchg
add
mov
add
out
jecxz
xchg
ficomps
std
scas
gs
push
pop
add
jae
ret
pushf
jo
lock
xor
jne
ljmp
shrl
mov
gs
call
add
mov
lcall
push
adc
lds
dec
dec
dec
add
sub
lea
lock
mov
sbb
mov
dec
mov
orl
int
js
data16
iret
js
sbb
xchg
pop
cld
subb
test
cld
ret
xchg
fcmovnbe
and
mov
rcrl
mov
pop
adc
add
hlt
popa
pop
pop
pop
stc
mov
loopne
roll
andl
xor
sub
mov
push
add
jecxz
pop
lret
into
adc
addr16
cli
add
lock
or
lret
repz
sbb
stc
mov
repnz
mov
outsl
sbb
add
and
push
dec
neg
mov
pop
mov
jmp
cmp
sahf
jp
jge
or
movsb
sub
dec
add
mov
or
dec
sub
xchg
fsubs
js
xor
loope
aad
mov
jp
mov
or
mov
pop
mov
sysret
pop
mov
in
aas
mov
cmp
sub
mov
enter
test
popa
test
in
negb
pop
jle
add
push
pop
sahf
cs
sub
jl
out
push
mov
test
or
mov
mov
xor
idivb
lret
test
lods
sub
adc
frstor
cmpsb
jns
inc
jp
cmc
pushf
xor
repnz
pop
out
add
sub
pop
add
sahf
xor
aam
jge
xchg
inc
dec
jmp
mov
sti
lret
xor
sub
mov
mov
mov
ret
lock
leave
lds
mov
xchg
push
js
fildl
aam
mov
mov
outsl
mov
mov
or
xchg
notb
ljmp
inc
insb
popa
adc
xchg
sbb
or
push
and
test
fists
sbb
xchg
push
mov
sub
out
hlt
adc
cmpb
fbstp
cmp
lea
inc
test
cmp
xorb
add
repnz
jne
insl
testb
stos
adc
jmp
sub
push
les
mov
imul
dec
adc
pop
test
es
inc
jmp
pop
popf
mov
jb
push
stos
popf
pop
add
adc
push
aam
daa
notb
les
stos
sar
int3
cmp
add
and
push
mov
movsb
push
push
loope
pushf
iret
mov
dec
les
rep
lock
call
in
loop
cmp
int
pusha
outsl
or
and
rcr
lods
mov
sub
mov
or
subl
mov
add
pop
sahf
in
sahf
scas
scas
pushf
imull
mov
jnp
jns
pop
cltd
push
adc
das
sub
sbb
push
subl
inc
pop
sbbl
push
aas
pop
mov
lahf
ret
notb
jno
popw
insl
mov
imul
lods
sub
mov
sub
and
inc
cmp
jno
sbbl
or
test
push
scas
in
pop
sbb
cmc
xor
sub
int
movl
dec
sbb
aad
in
and
enter
ret
push
aas
xchg
mov
adc
idivl
testb
je
mov
push
jl
lock
cmpsb
mov
imul
lods
ja
out
aad
pop
and
mov
int
je
in
dec
or
fwait
push
xchg
xchg
dec
push
xchg
jle
dec
movsb
lods
adc
aad
sub
sbb
add
mov
add
xor
sbb
adcb
jns
mov
std
push
dec
push
or
and
adc
xor
jns
loope
add
or
and
cmp
mov
adcl
rcll
xchg
aam
mov
repz
call
mov
pusha
xor
add
mov
sbb
mov
mov
ret
xchg
fcoms
mov
inc
jge
clc
mov
pop
in
mov
repnz
xchg
std
fisttpll
popa
or
sub
addr16
mov
enter
cld
jg
or
push
push
jge
stos
push
pop
adc
or
xor
iret
shll
dec
dec
cmp
inc
cmp
adc
dec
dec
xchg
jmp
pop
mov
gs
mov
negb
mov
pop
shr
mov
sub
popf
xchg
cmp
jp
xor
push
leave
scas
clc
push
xchg
nop
js
aas
add
pop
xor
jecxz
or
pop
xor
mov
pusha
pop
cmp
add
inc
pop
cmp
into
scas
call
dec
clc
out
insb
and
popf
pop
test
inc
lods
inc
vcvtps2dq
popf
adc
xlat
ret
jo
push
mov
xchg
adc
mov
out
dec
add
rcrb
outsl
test
pop
sti
call
lret
xor
xchg
loop
cmpsl
lock
or
jae
xor
bound
clc
or
cwtl
pop
xchg
xchg
es
es
pop
aam
inc
pushf
lods
mov
call
int3
mov
cld
stos
iret
in
or
cmp
mov
xor
outsb
push
int3
mov
adc
lret
xor
cmp
pop
mov
and
pop
cmp
loopne
rcrb
in
mov
inc
mov
sahf
sbb
cli
dec
popa
loop
arpl
cmp
add
jge
ss
mov
mov
testl
mov
pusha
mov
les
stos
mov
ljmp
fst
push
int
dec
xlat
pusha
or
div
sbb
or
cmpsb
cmc
ror
jb
push
arpl
adc
adc
xchg
js
adc
dec
lcall
sahf
out
xchg
rol
movsl
int
xchg
lret
mov
out
je
outsl
or
inc
lods
and
leave
mov
xlat
pop
add
and
xorl
jo
mov
aas
mov
mov
push
mov
stos
fs
inc
sub
and
sub
sahf
fisubrs
or
jno
bound
sbb
movzbl
cld
ja
das
cmpsl
adc
mov
cmpsb
and
dec
xchg
out
int3
subl
divb
out
lods
push
loopne
or
ss
push
data16
push
mov
std
xchg
arpl
rcr
adc
cmc
lds
mov
iret
jmp
pop
jns
lahf
inc
mov
mov
int3
xchg
fnstenv
inc
js
pop
lret
mov
mov
sbb
pop
fucomi
loop
xchg
shlb
cmc
inc
and
aaa
in
mov
jb
dec
rol
or
xchg
insl
aaa
fs
xchg
cmp
lret
or
mov
jnp
dec
sti
and
fstl
push
mov
sub
repz
sbb
pop
mov
les
sbb
rorb
sub
sub
pusha
sub
xchg
xchg
repnz
inc
push
shlb
push
mov
inc
xchg
rcll
stos
inc
data16
and
pop
test
insb
out
jge
aas
sahf
scas
inc
mov
adc
add
in
push
sbb
add
dec
dec
shll
mov
sahf
xlat
pop
movsb
xchg
fildll
iret
sub
addl
mov
adc
mov
sbb
mov
ljmp
xchg
dec
mov
jmp
or
sbb
mov
xchg
popf
out
and
arpl
add
sbb
or
outsl
call
push
test
sti
lea
ss
xor
in
mov
mov
inc
and
xchg
xor
pusha
and
test
sbb
jge
jl
fstp
cmp
cmp
dec
adc
mull
les
sbb
mov
xchg
jl
inc
pop
aaa
in
loopne
sub
ja
gs
test
idiv
and
or
pop
or
push
push
in
sbb
cwtl
mov
lods
or
aas
lods
mov
imul
mov
adc
inc
dec
mov
or
lret
or
jae
mov
incl
scas
cmp
fldcw
and
sbb
jp
imul
clc
std
add
popf
add
dec
push
adc
loopne
fnsave
popf
dec
dec
popf
nop
aam
test
sbb
dec
ficompl
pop
cmpsb
les
dec
pop
movb
dec
dec
xchg
in
or
test
ror
sbb
int3
mov
jnp
fildll
pop
inc
into
dec
stos
std
lcall
fcomps
or
bound
leave
jp
sub
int3
cmp
fmuls
add
cld
xorb
cmpsb
insl
ss
mov
vmptrld
movsl
fdivr
xor
jl
xchg
imul
jp
add
cltd
mov
jle
pop
push
mov
jns
cmpsb
xor
loope
add
mov
mov
cmp
push
in
aad
into
adcb
pushf
mov
jno
jmp
cmp
clc
jp
nop
push
nop
inc
mov
inc
icebp
sub
mov
mov
pushf
loop
cmpsb
jle
jns
adc
mull
jp
pop
inc
outsb
and
add
popa
pop
popa
gs
jbe
mov
adc
and
pop
movswl
xor
cmp
pop
rclb
adc
cltd
mov
xchg
dec
inc
pop
xchg
add
roll
je
pop
mov
test
rcr
pop
negl
sarb
pop
or
add
adc
push
into
sbb
mov
xchg
stos
lds
mov
mov
mov
not
add
mov
fiaddl
pop
cmpsl
icebp
push
repnz
in
jo
cmpsb
jne
xchg
cmp
seta
repz
or
fldt
or
adc
inc
xchg
loopne
adc
lods
movsb
scas
test
cmp
jne
int3
pop
mov
sub
mov
leave
mov
mov
daa
iret
mov
in
dec
pop
sub
inc
dec
cmp
hlt
in
push
fsubrs
int
or
xor
push
adc
in
dec
daa
inc
je
rorb
xchg
push
jecxz
sub
adc
sub
mov
jbe
cmpsb
push
dec
sub
mov
jne
or
jl
mov
sub
xchg
xlat
xchg
dec
cmp
stos
icebp
dec
sub
pop
mov
aas
xchg
mov
cmp
data16
xchg
xchg
roll
lcall
ds
popa
in
fistpll
test
in
int3
iret
xchg
mov
pop
inc
mov
and
sub
sbb
cmp
dec
inc
cmp
das
mov
iret
in
bound
jae
or
ja
addb
sarl
bound
in
mov
xchg
movsb
jecxz
sub
and
pop
sbb
inc
shll
rcrl
test
pusha
js
push
fldenv
sub
loopw
jns
rorb
aam
inc
xor
scas
out
jp
jnp
pop
and
xlat
jge
push
cmp
into
mov
jecxz
ret
jno
in
mov
in
dec
and
pop
jno
fwait
iret
pop
inc
gs
dec
sub
cld
loop
mov
jp
pop
and
sub
out
inc
das
cmpsl
inc
pushf
jl
out
or
sub
cmp
ret
subl
ficoml
mov
fwait
mov
jp
sbb
mov
pop
std
inc
arpl
sarb
cmp
test
lahf
xor
sbb
mov
and
add
pop
fwait
adc
push
mov
imul
outsl
clc
pop
and
int
cmp
call
xchg
not
inc
jle
lret
cmp
rcrb
stos
pop
fisttps
das
fadds
in
fstpt
incl
iret
dec
push
mov
rcrb
repz
fisttpll
imul
js
jb
testb
stos
int
adc
arpl
imul
std
lret
ds
add
xchg
jmp
and
sar
push
test
inc
xchg
adc
in
add
cwtl
movsl
divl
push
movsb
push
dec
repz
dec
push
sahf
xor
ret
push
mov
fidivs
cli
subb
scas
ljmp
dec
repz
in
sub
mov
jge
mov
cmp
pusha
or
jne
insb
xchg
mov
xchg
stos
rorb
rcrl
pop
fisubs
test
fsubrp
in
ret
out
pop
enter
inc
dec
jge
cmp
add
and
xorl
repnz
xchg
xchg
xor
lods
bound
push
shrb
mov
sahf
aaa
dec
in
hlt
mov
push
mov
cmpl
insl
push
fld
cmp
adc
std
movsb
pop
push
mov
pusha
lds
dec
mov
rcr
adc
mov
adc
mov
jns
mov
js
mov
add
fucom
push
movsl
push
fsts
rcll
pop
dec
fadd
mov
dec
sub
les
and
xor
jns,pn
je
adcb
mov
inc
adc
inc
cmpb
lcall
xchg
test
clc
popa
push
out
push
inc
pusha
add
push
mov
xchg
je
xchg
insb
add
and
add
pop
pop
push
sub
pop
mov
es
push
addl
sub
js
mov
mov
mov
xor
mov
xchg
data16
psadbw
addb
jno
ss
xchg
fwait
adc
pop
xor
lcall
dec
sub
insb
xchg
int3
sbb
int3
enter
xor
lock
adc
add
xor
repnz
inc
adc
pushf
jmp
push
sbb
js
std
enter
fs
or
movsl
jo
adc
sub
daa
sub
fcmovnbe
test
mov
xchg
lds
fnstenv
loope
cmc
test
lock
mov
ds
and
je
imul
lret
fbstp
add
ficoml
adc
iret
mov
mov
sub
insl
imul
cmp
mov
test
push
iret
addr16
out
ffree
mov
mov
xchg
add
jmp
je
sub
pop
leave
add
jb
out
lret
int3
pusha
cld
imul
xlat
std
xchg
sti
jo
sbb
cmc
xor
cmp
sub
mov
xor
outsl
es
cmp
shl
int
cmp
loope
ret
add
out
out
daa
lahf
popf
movsb
sub
xchg
fiadds
mov
push
push
lcall
push
fwait
arpl
push
or
popf
dec
mov
jmp
cmp
out
jp
xchg
addr16
push
clc
and
orb
rorl
fstpl
jge
pop
imull
pop
xor
daa
pop
push
mov
cmp
dec
sti
cmpsb
mov
xor
movsb
cmp
cmpl
insl
ret
jle
push
outsb
fmull
mov
push
cmc
jl
jno
mov
scas
test
lea
adc
and
dec
dec
jmp
jmp
dec
fdivl
xlat
push
fdivrs
mov
sbb
xchg
cmp
sub
xor
jns
push
sbb
notl
cmp
mov
and
push
lds
mov
add
pop
jmp
xor
xchg
data16
in
and
sbb
ljmp
and
stc
sub
fiaddl
adc
in
jo
add
daa
popa
inc
and
mov
push
sub
test
mov
pop
aas
push
add
pop
inc
jge
aas
sub
sahf
dec
inc
cmp
push
arpl
cmc
daa
call
ss
cmpsl
test
dec
outsl
scas
push
fs
loopne
cmp
lea
cmp
jbe
jne
inc
xchg
cltd
ja
dec
push
xor
lahf
inc
aam
mov
sarl
call
jb
cmpsb
jnp
adc
inc
shll
and
sbb
into
es
sub
lea
mov
iret
xchg
lahf
or
mov
das
add
sub
mov
xchg
test
iret
dec
push
cmp
outsb
sbbl
or
mov
xor
leave
stos
xchg
mov
sub
jp
sub
push
das
inc
cmp
daa
jle
cwtl
lock
test
fnstsw
inc
popa
and
dec
enter
fists
or
dec
dec
fmull
adc
nop
add
add
movsb
sti
or
and
sahf
fsubl
jle
mov
cmp
ss
mov
fidivrl
cld
leave
xchg
dec
mov
rorl
scas
shr
fidivl
inc
cld
cmp
hlt
xor
es
cmc
fs
push
jne
mov
in
jo
cmp
mov
enter
lods
or
lret
std
pop
decb
mov
xor
in
mov
js
daa
jne
push
data16
loopne
push
shll
movsb
mov
scas
fldenv
fcomps
data16
rcrl
cmp
icebp
fisubl
testb
sahf
add
xchg
loopne
mov
jmp
inc
mov
decb
out
test
add
xor
lock
in
cmp
arpl
jle
lret
pop
outsl
stc
mov
decl
inc
or
pop
pop
fsubs
imull
sub
ret
mov
mov
je
mov
and
push
out
or
pop
popf
pop
inc
cmc
sbb
pop
xchg
or
insl
outsl
or
test
lret
loop
call
sbb
into
frstor
mov
mov
and
add
inc
hlt
insb
mov
daa
frstor
outsl
lret
gs
ss
or
ja
push
bnd
movsb
adc
or
lods
adc
pop
out
stc
mov
xor
scas
cmp
lret
jg
pop
loope
test
pop
insl
mov
loop
enter
pop
cwtl
push
and
adc
sbb
out
cmp
pop
jo
lods
xchg
js
bnd
pop
inc
es
mov
leave
gs
xchg
add
push
inc
repz
hlt
stos
mov
in
mov
mov
add
push
data16
push
mov
in
mov
rorl
mov
mov
dec
jecxz
mov
or
or
imul
pop
nop
mov
mov
sub
popa
inc
sub
cli
jg
movsb
shlb
hlt
jnp
dec
andl
sub
js
or
push
inc
add
mov
xchg
fldt
stos
mov
dec
mov
dec
jp
dec
push
pop
pop
inc
push
inc
jae
jg
ljmp
inc
jg
mov
cmp
sub
out
pop
lcall
dec
cwtl
mov
loope
add
std
sbb
inc
inc
jo
cmpsl
lock
leave
inc
sti
arpl
mov
mov
data16
rcrl
mov
mov
rcl
or
push
hlt
movsl
xchg
inc
cwtl
jae
out
lods
push
lods
outsl
sub
inc
xor
dec
call
pusha
decl
xlat
mov
mov
add
fucom
inc
fwait
push
inc
mov
les
mov
jmp
ret
push
or
loop
movsl
lods
mov
imul
mov
lods
fldt
adc
xchg
dec
lret
xlat
cmc
add
test
push
ds
pop
dec
inc
jl,pn
mov
push
fdivrl
mov
jl
data16
or
in
mov
jo
iret
sub
and
adc
push
pop
sbbl
cmp
lret
loop
pop
lds
xchg
fstps
push
mov
cmpsl
and
adc
ljmp
inc
jbe
fstl
add
idiv
jg
push
jmp
xor
mov
out
mov
repnz
mov
mov
adc
daa
out
mov
cmp
cmp
addb
movsl
aad
stos
and
dec
xor
cld
lret
jmp
cmpsb
xchg
cmp
hlt
mov
jg
jbe
sbb
les
jmp
outsl
dec
jb
dec
and
movsb
or
stos
pop
ds
mov
scas
sbb
dec
sbb
cmc
add
add
pop
mov
mov
mov
mov
and
mov
lea
or
inc
adc
std
xor
pop
cmp
add
test
imul
mov
xorb
cmp
mov
xor
jle
lock
aam
mov
adc
loope
push
mov
push
add
pop
sbb
adc
addr16
scas
cmpsb
jl
xor
test
mov
or
les
cmp
push
push
jnp
loop
call
sbb
daa
shlb
push
dec
addl
sbb
loope
icebp
xchg
icebp
push
js
and
push
ljmp
push
adc
push
fs
or
and
push
pushf
gs
sbb
xlat
sub
jbe
xor
fsubrl
adc
push
cmp
loopne
imul
hlt
inc
popf
dec
fists
dec
pop
negb
lods
cmp
hlt
adc
adc
into
jb
dec
xor
test
and
sbb
jns
xchg
scas
inc
pop
enter
adc
hlt
adc
aad
imul
fwait
sbb
insl
xor
inc
mov
mov
aad
inc
dec
jle
loop
push
push
das
jecxz
pop
mov
pop
cmp
adc
lcall
mov
fistpll
dec
pop
adc
jbe
add
scas
jb
mov
mov
mov
add
jmp
inc
add
aaa
cmp
aas
jg
adc
sub
sbb
xor
and
enter
movsb
test
pushf
dec
pop
into
sbb
dec
push
inc
movsl
pop
or
pop
fistl
cmp
cmpsl
popa
jae
pop
call
push
xchg
test
in
push
fnstcw
imulb
fstpl
xchg
push
imul
or
inc
frstor
jno
add
and
out
sti
gs
test
adc
ds
adcl
cli
test
fidivl
jle
loop,pt
div
sti
mov
clc
push
shlb
scas
jnp
mov
inc
add
xchg
jl
mov
lock
mov
fildll
add
das
xchg
mov
sbb
mov
ja
negb
inc
sahf
icebp
push
scas
in
mov
cmp
out
stc
shr
test
cmp
scas
xor
fisubrs
jns
fwait
scas
dec
sbb
xchg
sub
mov
push
xor
movsl
cmp
add
push
fdivs
push
cmc
pop
pop
xor
jbe
out
jmp
int
adc
add
scas
test
fs
mov
ss
or
pop
test
cmp
mov
push
pop
loope
lods
psadbw
jbe
inc
sbb
dec
pop
movsb
xchg
repz
dec
cmpl
sub
xor
mov
jnp
dec
cmpsb
xchg
aad
mov
dec
addr16
addr16
in
sarb
mov
into
push
test
int
js
jb
cmp
dec
mov
sbb
add
in
pushf
into
pop
sbb
in
push
out
pop
mov
push
shll
clc
jnp
mov
lcall
ljmp
jp
outsl
mov
mov
push
add
pop
outsl
insb
into
xor
out
fs
iret
pop
popf
cmpsb
hlt
lds
mov
push
cli
jle
cmpsb
arpl
cmp
aaa
inc
xchg
ja
sub
jbe
mov
dec
pusha
mov
pop
stos
mov
jle
sub
stos
fidivl
testl
mov
scas
mov
pop
cmpsb
jae
sbb
bound
aad
into
int3
adc
adc
mov
add
test
lods
in
pop
sub
repnz
jo
xchg
call
lret
sub
clc
jl
xor
cs
enter
cltd
xchg
in
stos
mov
mov
in
cli
jecxz
push
or
outsb
daa
mov
faddl
jg
and
ja
push
call
mov
leave
inc
sbbl
add
data16
push
or
mov
adc
repz
or
dec
pushf
test
adc
or
jbe
out
jl
xchg
cmp
in
stos
adc
cmp
add
mov
int3
sub
push
inc
xchg
inc
test
jmp
mov
push
js
mov
popf
subl
or
insl
sbb
test
sbb
cmp
in
stos
dec
nop
and
les
xor
iret
rolb
outsb
scas
or
adc
in
int3
sbb
icebp
and
insb
pop
jne
or
xor
mov
and
mov
adc
dec
and
lahf
or
sub
mov
iret
cmp
mov
adc
fwait
sbb
add
clc
iret
adc
xchg
loop
inc
ds
scas
mov
and
add
in
and
rcr
mov
xchg
loopne
outsl
fisttps
pop
xor
mov
dec
jb
sbb
test
lret
std
fnstsw
push
or
stos
psrld
ja
mov
cmpsl
cmc
sub
rclb
xchg
sti
gs
sub
or
clc
fwait
or
cmpsb
sarl
adc
xor
xor
jb
lcall
shl
pusha
out
cld
ja
mov
cmp
fscale
imul
push
call
fs
mov
add
jmp
xchg
sti
das
mov
in
cmp
jle
pop
pop
clc
mov
mov
pop
imul
mov
xor
or
push
sub
pop
cmp
daa
shl
mov
xchg
inc
xor
cld
dec
jae
lret
adc
jne
loopne
cmpsb
sub
push
jge
jecxz
mov
add
in
cmovnp
repnz
arpl
jl
mov
inc
add
shll
shll
shlb
gs
lock
and
adc
outsb
jo
push
iretw
test
sub
lock
adc
xchg
cmp
pop
mov
aam
sbb
movsl
bound
add
dec
lret
shrb
bsf
xchg
clc
adc
or
inc
sbb
sti
movntps
rolb
arpl
cmp
dec
dec
and
pop
jbe
xor
pushf
push
into
imulb
lock
int
loop
jb
rolb
sub
jle
pop
mov
dec
sti
and
aaa
jne
sub
movsb
shll
lds
inc
mov
dec
shrl
in
cld
adc
les
cltd
inc
into
out
loopne
int
test
in
aaa
out
mov
cmp
mov
and
mov
adc
pcmpeqw
pop
mov
shl
je
imul
cmp
pop
jne
jno
jecxz
jp
add
cmp
cwtl
lret
cmp
jb
or
sbb
pop
or
sahf
pop
jle
add
fidivl
stc
or
pop
cmp
aaa
xor
ljmp
test
test
mov
inc
push
bound
mov
loopne
fmuls
xchg
cmpsb
repz
cmp
push
daa
mov
loop
je
inc
lods
lods
fcmovne
cmp
cmp
dec
mov
push
fsubs
push
in
push
push
sbb
mov
sub
shlb
pushf
mov
sbb
ljmp
cmp
push
push
in
xchg
lret
aad
mov
adc
enter
testb
imul
cs
dec
lods
ja
pop
icebp
sub
sbb
daa
xor
jne
mov
sub
clc
jbe
jbe
add
movsl
add
inc
mov
mov
sahf
ljmp
or
imul
mov
dec
jg
mov
or
jae
ss
hlt
mov
inc
addr16
js
or
cmpsl
sub
push
mov
jns
fxch
insb
scas
jnp
leave
out
lods
in
and
fnstenv
lods
add
or
shlb
sub
js
sbb
adc
repz
dec
lret
shrb
sbbl
call
add
xchg
les
and
in
add
inc
fisubrl
mov
addr16
inc
addb
mov
and
adc
lea
xchg
pop
xor
sub
add
dec
jno
mov
dec
dec
xlat
mov
mov
jns
and
cmp
xor
add
bound
cmp
and
xchg
ds
pusha
mov
popf
lds
mov
insl
adc
jae
add
scas
nop
cmp
test
andl
test
sub
fidivs
outsl
mov
xchg
ds
xor
add
and
cmp
mov
ffree
pop
xor
add
dec
pusha
or
lea
jb
sub
out
add
xor
push
mov
mov
push
fstpt
jecxz
insl
mov
sub
bound
xor
dec
and
xchg
sbb
sarb
jecxz
fwait
add
idivl
jl
call
adc
xlat
scas
nop
dec
dec
aad
adc
mov
shlb
fsubs
jo
xor
repnz
add
fwait
cmpsb
sti
and
ficoms
mov
int3
out
mov
ja
jge
push
test
test
iret
mov
pop
lea
mov
mov
dec
das
iret
xor
loope
int3
sahf
aam
adc
enter
adc
flds
pushl
xchg
sbbl
shl
add
dec
or
lcall
xor
add
cmp
or
xchg
or
mov
jne
aaa
sbb
jp
pop
cwtl
push
bound
mov
add
data16
dec
jge
adc
clc
push
mov
lret
int3
mov
pop
mov
negl
rolb
jbe
and
fistpl
dec
gs
lret
sbb
out
cltd
jbe
mov
cwtl
popf
or
nop
mov
aaa
out
cmp
push
sub
mov
adc
and
mov
lea
popf
mov
mov
mov
adc
xchg
jne
adc
fstpl
mov
inc
pop
mov
scas
sbbb
filds
and
xorl
push
in
into
idivb
hlt
lods
add
insl
ss
push
adc
jne
lcall
loopne
fsubr
sbb
arpl
pop
shlb
add
popf
adc
out
pop
sub
cmpl
and
daa
je
lret
mov
jmp
loope
lcall
lahf
add
fldenv
mov
sbb
xlat
jmp
sub
push
das
mov
cmp
jp
jb
insb
push
lret
ret
xor
outsb
xlat
mov
in
cld
xor
mov
pop
or
int
push
sub
dec
test
lahf
repz
jmp
mov
lret
repnz
stc
es
mov
mov
imul
mov
sub
jp
pop
movsl
lret
clc
jg
mov
mov
fdivrs
mov
fists
rorl
mov
mov
jns
cs
pop
sub
popf
notl
pop
gs
mov
push
mov
jae
jecxz
jns
jp
clc
in
ffree
cmp
mov
dec
pushf
or
mov
pop
shrl
loope
shll
inc
mov
sbb
dec
mov
imul
out
mov
mov
adc
shrl
or
mov
or
cmp
scas
jg
push
out
mov
mov
xchg
pop
mov
imul
js
mov
loope
int3
add
xchg
cwtl
ss
jmp
dec
cmpsb
int
xor
adc
es
jns
ja
jg
inc
mov
adc
nop
xor
push
sahf
mov
or
mov
ret
bound
orl
sub
in
lret
push
gs
mulb
les
int3
sbbl
ret
mov
pop
mov
jns
jns
adc
xchg
out
add
stc
push
cmpsb
pop
std
stc
mov
push
dec
push
cltd
stos
aaa
jge
lods
pushf
jb
mov
dec
xor
ret
mov
adc
push
inc
inc
or
lret
sub
js
cmp
fbld
fisubrs
push
lret
jmp
ljmp
jbe
nop
lods
jno
orl
and
push
lock
aam
xorl
inc
in
loop
dec
lock
outsl
or
inc
dec
jae
jmp
scas
mov
imull
mov
sbb
adc
stos
aas
inc
repnz
jmp
test
mov
add
jnp
pushl
das
xchg
push
outsl
nop
movsl
push
iret
cmc
cmp
popa
pop
jo
shll
xor
pop
test
loope
cmp
ret
xchg
lret
sarl
adc
imul
popa
pop
outsl
push
and
fwait
orl
in
mov
mov
mov
ds
jns
fldl
inc
iret
test
call
mov
jb
dec
sahf
xor
loop
shl
aam
push
cmpsb
imul
push
sbb
ja
inc
add
cld
aad
std
aas
adc
ret
add
arpl
outsl
test
pop
outsl
js
inc
mov
je
cmp
mov
cwtl
dec
in
movsl
cmc
movsb
or
ret
js
xor
shl
data16
push
das
jg
or
pop
bswap
ret
aad
mov
and
cmp
imul
sbb
addr16
sbb
xor
clc
jg
sbb
jne
decb
add
sub
mov
or
ss
clc
enter
mov
mov
repnz
and
adc
inc
imul
or
add
int
loopne
jbe
inc
in
cmp
roll
clc
inc
enter
ficompl
dec
adc
xor
in
and
std
or
and
loope
test
and
loop
insb
push
stos
inc
xchg
loopne
jle
pop
inc
mov
pop
inc
lahf
loopne
incb
aaa
imul
test
jne
xchg
mov
add
inc
ret
dec
mov
and
ss
push
adc
xor
lcall
cltd
xor
frstor
jne
rcll
test
stos
pop
jl
push
cmp
cmp
lret
push
jne
adc
shrl
mov
data16
sbb
lods
adc
sahf
ret
outsb
inc
jo
ljmp
ret
enter
and
dec
fwait
cmc
mov
cmpsb
mov
scas
loope
fs
out
rcl
xchg
ret
orb
pop
testl
arpl
add
xor
or
push
sub
inc
cld
cld
adc
dec
mov
mov
or
adc
push
call
mov
ret
xor
iret
xchg
cs
fs
sbb
int3
in
andb
mov
adcb
jmp
test
lods
arpl
push
mov
or
xchg
ret
push
popf
cwtl
inc
out
imul
sub
push
fsts
push
in
hlt
add
or
xchg
mov
scas
and
in
out
test
daa
pop
rorb
mov
push
inc
mov
mov
mov
mov
fwait
mov
mov
pop
sub
andl
adc
out
mov
loope
mov
push
add
movsb
jnp
iret
add
ror
pusha
dec
xchg
pop
ljmp
add
jb
sub
into
mov
cwtl
mov
sub
inc
lea
outsl
xor
test
lods
out
jb
sub
inc
add
int
pop
inc
in
fsubl
psubusw
mov
call
cmc
mov
out
or
orb
repnz
mov
cltd
imul
sahf
jns
ljmp
fisttpll
mov
push
jecxz
xlat
inc
movsl
addr16
mov
or
mov
jl
dec
loop
ret
sti
in
dec
pop
in
inc
clc
add
and
sbb
sub
bnd
add
stos
pop
lret
xor
mov
out
out
std
int
addl
add
in
dec
in
aad
iret
mov
loop
add
fmul
insb
icebp
nop
hlt
jns
or
and
push
pop
cmp
push
and
jmp
int
iret
xor
test
or
popf
loopne
adc
push
dec
xor
sub
dec
sub
dec
jbe
fcompl
add
xor
jbe
pop
add
adc
fs
push
sarb
xlat
inc
fstpl
pop
fldl
js
pop
ja
jns
enter
ja
aad
add
add
add
cmp
mov
movsb
push
pop
cli
cwtl
mov
popf
iret
pop
ret
scas
and
adc
mov
dec
into
sub
lds
dec
daa
mov
filds
int
pop
push
scas
xchg
stc
std
in
xor
stc
mov
negb
mov
out
add
sub
dec
mov
insb
ljmp
lret
fisttpll
sbb
jne
dec
outsl
xor
jle
fidivrl
pop
adc
pop
imul
dec
sbb
push
mov
pop
mov
adc
dec
add
cmp
xor
movsb
push
sbb
out
ljmp
movsb
xor
rcrl
lods
sub
in
push
cmpsl
dec
xor
popf
xchg
test
imul
and
outsb
pop
sbb
mov
add
enter
shlb
push
and
nop
testb
pushf
loopne
cmpsl
test
push
and
or
mov
enter
pop
out
pop
mov
jl
jl
dec
push
adc
lock
insb
inc
jns
fs
push
lds
sarb
fsub
pop
icebp
ss
sub
or
clc
gs
cmp
pop
test
or
icebp
lods
dec
cmp
mov
fcoms
mov
pop
mov
leave
jne
filds
cmpsl
lods
pop
jns
push
mov
sti
dec
aam
jp
in
jmp
cmp
adc
cmpb
jne
enter
or
jno
push
mov
push
mov
or
rorl
push
sub
pushf
int3
add
push
repnz
clc
cmp
andb
movl
lret
ret
out
sahf
movsl
push
mulb
sahf
mov
mov
xchg
loope
jle
push
xchg
xchg
sub
lahf
add
xchg
mov
push
mov
bound
out
sbb
push
cwtl
mov
and
sub
mov
push
dec
cmp
pushf
mov
jg
test
lret
stos
adc
cmp
test
push
jl
adc
dec
push
or
aas
xchg
cmp
cmp
shll
jmp
scas
xor
js
and
inc
iret
or
lcall
fisttpll
sub
xchg
jnp
mov
addl
cmp
xlat
cwtl
cld
hlt
jb
jb
dec
mov
dec
jmp
stc
aam
int3
mov
and
push
and
mov
cmpsb
mov
scas
nop
sarl
mov
mov
mov
pop
push
fcoml
inc
or
loopne
imul
jb
test
push
push
loopne
ljmp
icebp
xlat
push
std
cmp
out
mov
repz
inc
test
mov
or
outsl
aad
and
in
sub
outsb
stc
stos
add
loop
call
scas
out
pop
jmp
or
sub
cmp
pop
xor
out
jbe
dec
call
nop
pop
ret
xor
outsb
notl
mov
mov
mov
mov
lods
lods
jle
int
mov
inc
les
leave
push
pushf
les
ror
mov
or
jo
push
mov
mov
mov
sbb
sahf
push
call
cmp
int3
insb
xchg
add
jnp
ja
lods
mov
scas
das
push
stos
jb
fcmovb
xchg
cmp
sub
cmp
sbb
xor
pop
je
mov
adcb
ja
mov
mov
jb
roll
cld
stc
lods
lret
sbb
and
pop
bnd
stos
xor
stos
pop
jns
xor
pop
inc
in
lea
repz
outsb
mov
mov
inc
dec
or
jo
mov
test
repz
call
aaa
xor
adc
std
inc
push
xchg
cwtl
add
pusha
pop
mov
out
decb
call
push
inc
scas
shlb
or
mov
loope
mov
xchg
push
add
push
lret
push
xchg
add
ficoms
pushf
xor
jecxz
push
aam
jge
loop
test
jne
sbb
stos
jecxz
in
aaa
mov
pop
push
aam
shrb
jae
fsubl
rol
out
jl
out
pop
or
and
mov
sub
int
push
adcb
mov
push
and
arpl
adc
xchg
lods
iret
shlb
xor
xor
popf
cltd
sub
or
in
lret
xor
scas
out
push
pop
rcll
mov
push
scas
mov
adc
lods
daa
enter
and
jne
sub
jge
mov
sbb
mov
dec
movsb
in
adc
cmp
push
xchg
cmp
xchg
or
pop
push
ret
jmpw
cmp
adc
mov
push
and
movsb
scas
iret
aad
mov
stc
push
dec
adc
pop
pop
aam
iret
push
push
insb
xchg
xor
xchg
stos
call
cs
xchg
cld
add
call
in
add
sub
je
scas
inc
repz
fsts
mov
les
adc
pop
add
pop
inc
fsub
mov
jns
adc
icebp
pop
sbb
divb
inc
xor
and
pushf
loop
lahf
pop
sbb
loopne
daa
mov
lcall
leave
lods
dec
sbb
shll
lcall
xchg
add
sahf
and
cmpb
aaa
cld
or
mov
in
aam
sub
mov
mov
ja
cld
lods
ja
das
push
into
fsubr
sti
imul
rcll
clc
push
rolb
or
mov
call
popf
mov
scas
dec
jp
sbb
mov
and
fmull
imul
sub
adc
lods
int
add
sub
leave
hlt
cmp
loope
mov
nop
fwait
ja
or
fiaddl
arpl
insl
aad
mov
sbb
sbb
not
pop
xchg
mov
scas
out
xchg
lock
pop
hlt
shll
loop
sub
cmp
jmp
push
popl
dec
mov
or
repz
fnclex
repz
in
int3
aad
mov
call
sub
lea
scas
jl
test
sbb
dec
xor
dec
xchg
jbe
xor
sbb
lahf
pop
ret
gs
push
hlt
rcll
mov
jo
hlt
fsubp
inc
movsb
mul
popf
icebp
sub
jl
fs
loop
inc
clc
sar
repnz
push
cmpsl
sbb
call
xchg
cmp
mov
bts
addr16
nop
insl
xchg
pop
xchg
ja
mov
and
dec
jg
jp
insl
adc
xchg
sbb
jnp
negb
xchg
mov
insl
jbe
dec
mov
test
fwait
mov
test
mov
cld
cltd
cmp
movlhps
push
cld
loop
adc
loopne
and
cmpsl
cmp
mov
add
pusha
insb
int3
les
fisttpl
cwtl
rorl
js
mov
xchg
pop
icebp
inc
mov
sahf
test
cwtl
daa
inc
je
mov
mov
push
pop
lret
pusha
outsl
ret
aad
mov
ret
cltd
pop
adc
mov
mov
jne
je
sbb
jo
decb
inc
ror
jnp
cmpsl
ds
clc
fwait
jne
pop
xor
cmp
ss
push
outsl
mov
lods
punpckhwd
mov
sbb
inc
rorb
nop
out
cmp
pop
xlat
or
mov
mov
push
jge
cmp
dec
ret
pop
mov
sbbl
xchg
jmp
shlb
ret
clc
sub
repz
or
clc
sub
movl
inc
push
stc
dec
jmp
push
and
push
cmc
jg
outsb
psubsb
andl
loopne
insl
jp
mov
mov
insb
clc
cs
outsb
daa
xchg
rcr
shrl
je
fisubrl
jb
int3
movsb
sarl
jl
das
in
out
js
test
cltd
call
xchg
jb
pop
adc
aas
pop
xchg
scas
push
lret
dec
lahf
gs
out
out
add
add
and
cld
inc
jmp
pop
or
xchg
dec
mov
dec
sbb
sbb
sub
cmp
popf
std
and
push
ret
test
fwait
loope
mov
mov
inc
mov
or
xor
popf
dec
jecxz
outsl
mov
add
sbb
mov
roll
or
je
fcoms
or
imul
mov
xor
frstor
aam
stos
fidivrl
push
add
sbb
int
ss
xchg
lret
pop
rorb
xor
pusha
and
movsl
in
jmp
aas
aaa
inc
stc
xchg
fwait
cmpsl
movsb
xor
aaa
aam
mov
pop
mov
lock
xchg
cmp
in
lods
in
mov
sub
push
nop
mov
pusha
push
inc
scas
stc
mov
pop
mov
jmp
dec
xchg
cmpsl
mov
fisubrs
pushf
cmp
in
xchg
dec
fcoms
into
sub
leave
mov
mov
rorl
jle
out
inc
mov
push
add
jne
mov
xchg
mull
cmpsl
sbb
cmp
xor
mov
sbb
insb
test
sub
data16
inc
push
adc
icebp
mov
lds
mov
loop
aam
pop
lea
out
stc
xor
adcl
pop
test
mov
lds
sbb
enter
leave
je
lret
lods
mov
cmp
cmpsb
pop
scas
mov
mov
or
push
lret
test
mov
rorl
shl
out
mov
frstor
sub
sub
jbe
sub
jmp
loope
stos
stc
xor
xor
mov
fld
xor
sub
subb
jg
xorb
xchg
adcl
adc
out
add
xlat
out
pcmpgtb
in
les
test
daa
sbb
mov
fsub
adc
xchg
fiadds
pop
out
vunpckhps
adc
into
data16
stos
add
int
adc
jmp
and
dec
mov
mov
ljmp
jmp
cmp
lods
lock
jbe
cltd
mov
testl
mov
sub
and
mov
push
outsb
dec
push
xlat
cmp
push
sub
leave
sar
pop
aam
mov
lahf
mov
mov
dec
cmpsb
mov
test
test
iret
sti
xor
mov
lret
cmovns
loope
add
fnstenv
inc
ret
adcb
mov
push
cli
and
lcall
lods
lahf
and
cmpsl
mov
mov
lods
into
push
jge
or
add
jb
lret
xor
call
leave
adc
push
inc
push
es
jl
mov
fldt
bound
or
pop
inc
jl
shl
mov
dec
add
add
cltd
xchg
dec
inc
xchg
adc
add
pop
call
cmp
pop
ljmp
icebp
cmp
mov
inc
jnp
fbstp
mov
jl
xchg
push
adc
push
stc
mov
push
insb
sbb
pop
in
push
push
shll
mov
xorb
xorl
pop
pop
jle
outsb
pop
stc
mulb
xlat
pop
sar
ljmp
adc
pop
pop
mov
movsl
cmp
or
mov
mov
jne
lret
std
imul
dec
push
cmpb
xchg
or
shufps
lods
jno
pop
lods
dec
or
push
shl
movsb
inc
pop
cli
lahf
adc
aam
hlt
inc
std
adc
mov
mov
add
cli
adc
mov
or
lret
dec
lods
add
pop
dec
lods
stos
mov
sarb
btr
jne
lock
inc
adcb
or
aaa
dec
repz
add
adc
popf
fucom
sbb
fistpl
dec
fs
adcl
push
push
jo
mov
stos
jo
arpl
nop
pop
pop
dec
fld
push
ds
dec
or
aas
shl
xchg
adc
xor
cmpsl
push
or
pop
mov
aad
pop
push
push
in
dec
add
jnp
nop
sub
sbb
test
stos
cmp
or
xchg
mov
inc
inc
sbb
cmp
lds
mov
or
jp
mov
lods
insb
js
fcomp
dec
scas
fucomip
outsl
loop
ret
mov
ret
idivb
mov
cs
inc
jp
add
pop
or
scas
push
rclb
push
cmpsb
or
push
aad
cmp
lea
hlt
xlat
add
idivl
dec
lods
push
and
and
mov
mov
mov
aad
stos
pop
mov
popf
cld
pop
popa
ret
pop
and
fsubs
ret
call
mov
mov
and
popa
in
mov
pushf
ljmp
xor
dec
icebp
shll
imul
lret
js
scas
ret
aaa
inc
out
dec
sub
dec
aam
mov
sub
insl
mov
xchg
pushl
xor
mov
imul
sub
lock
sbb
inc
test
popa
pop
jae
lods
push
arpl
cltd
mov
xchg
mov
mov
sbb
add
scas
and
jno
xorl
data16
jmp
adc
aad
imul
xchg
hlt
ss
adc
pop
mov
inc
repnz
cmpl
insb
cmpb
sbb
cmp
das
mov
fcoms
enter
push
xchg
imul
repz
sub
inc
lock
lahf
cs
popa
jnp
in
push
stos
push
ficoms
dec
mov
pop
sub
cmpsb
inc
dec
cwtl
pushl
cmp
xor
outsb
sub
cmp
lods
and
nop
and
stos
ja
int3
pop
rcrl
jno
sub
sub
cld
inc
mov
mov
lea
mov
xchg
jp
mov
fwait
insl
xchg
orb
dec
mov
negb
mov
mov
cmp
pop
lock
cs
mov
mov
fcmovb
cmpb
jle
add
cmova
jg
fiaddl
xchg
fnstsw
ljmp
cwtl
ret
outsb
adc
test
push
xor
mov
test
cltd
sbb
les
rclb
js
test
pop
sti
jb
sbb
xchg
sar
fcomp
xor
fdiv
sub
outsl
in
mov
mov
pop
lods
xchg
ljmp
add
testb
add
pusha
xchg
outsl
inc
int
call
dec
pop
lds
sarl
mov
push
cmp
add
popf
inc
inc
adc
mov
call
pop
pop
xchg
inc
fcomps
inc
nop
addb
mov
stc
push
jns
inc
mov
jecxz
movsb
xchg
push
leave
add
push
mov
or
cmp
cs
push
mov
out
push
or
out
pusha
add
push
dec
push
pop
xor
dec
jae
xchg
mov
sti
mov
scas
or
inc
or
movsl
leave
inc
je
movsb
dec
mov
cs
sbb
psrad
shl
hlt
lods
call
arpl
hlt
push
and
dec
adc
push
mov
jmp
lock
imul
or
std
cmp
push
das
push
or
sbb
sub
lret
cmp
ljmp
adc
jnp
lds
sti
shl
push
adc
inc
ret
or
push
lea
aad
pop
xchg
add
sub
mov
or
and
ljmp
mov
pop
cmp
mov
mov
sbb
test
leave
call
xor
sbb
cmp
xchg
cmp
pushf
sub
adcl
cmpb
inc
rcrb
inc
call
sti
pop
mov
xor
fdivrl
mov
in
xchg
mov
add
inc
fs
aaa
fwait
adc
js
int3
pop
mov
outsl
cltd
mov
in
mov
jg
loop
xor
dec
iret
add
mov
call
jmp
adc
scas
arpl
mov
mov
cmpsb
inc
pop
repnz
fadd
out
negl
mov
add
inc
mov
jl
push
repnz
sub
mov
inc
adc
sub
mov
repnz
add
add
push
leave
outsb
xchg
cmp
mull
xchg
push
js
add
lock
ret
movsb
pop
cmp
jns
cmpsb
stos
cmp
jecxz
sbb
mov
insb
xchg
cmp
mov
mov
push
xchg
jl,pn
and
cmpsl
loopne
cmpsb
lret
js
sarl
insb
and
lods
imul
pop
xor
xchg
dec
lret
mov
jno
stc
mov
mov
cmpl
mov
adc
xchg
xchg
mov
cmp
fisubrl
xchg
pop
mov
pop
pop
jge
push
sbb
cmp
xchg
jmp
stos
scas
sub
xlat
enter
sbb
sbb
add
lea
imul
imul
enter
cmp
fadd
inc
popf
fiadds
cmpsl
outsl
cmpsb
adc
cmp
inc
pop
test
dec
cs
arpl
inc
push
stos
clc
dec
out
push
out
mov
scas
xor
adc
adcl
mov
xor
pop
and
out
jb
pusha
push
cmp
push
inc
outsl
aam
push
out
jno
and
xor
xchg
add
js
add
pop
lcall
outsb
js
xchg
les
repz
cld
add
test
push
dec
data16
sub
and
out
fsubrp
adc
fldl
out
ficoms
mov
loope
jae
xor
mov
outsb
scas
lahf
in
jle
pop
std
jno
dec
dec
stc
sbb
cmc
xor
sahf
xchg
cmp
push
add
idivl
dec
jnp
loopne,pt
mov
sub
clc
mov
mov
adc
data16
push
xor
pop
loop
xchg
iret
cmp
jmp
aam
inc
inc
nop
push
dec
push
jecxz
xchg
xchg
sti
dec
in
mov
mov
imul
lcall
pushf
int3
cwtd
or
loopne
or
sti
mov
jnp
popf
lret
mov
sbb
out
dec
adc
mov
adc
iret
mov
mov
sub
idiv
lahf
leave
sarb
adc
pushl
stos
jo
jns
or
xchg
and
jge
push
add
mov
jb
adc
push
adc
and
mov
clc
jne
and
insl
mov
in
rcll
mov
shr
stos
mov
xchg
int3
push
push
adc
inc
pushf
xchg
push
jno
mov
stc
sahf
push
xor
std
out
es
mov
inc
jle
pushf
jns
mov
mov
in
xchg
incl
jne
xor
xor
pop
or
lret
int3
scas
stos
jne
push
mov
cli
inc
lock
pop
sub
and
add
notl
adc
jo
cmp
cmc
leave
iret
pop
out
fmuls
sbb
push
push
mov
push
test
inc
pop
cmpsb
ret
add
pop
add
mov
hlt
sub
or
mov
pop
jo
lahf
cmp
sbb
mov
jne
sbb
xchg
scas
dec
shlb
out
clc
mov
ljmp
outsl
push
cmp
xor
int3
sbb
hlt
push
vmovlps
xor
mov
cmc
sbb
ror
stos
in
pushl
mov
out
and
sub
push
cs
es
cwtl
push
jnp
jbe
pop
arpl
jno
xchg
pop
ds
pop
pop
mov
data16
cmc
jno
xchg
push
xor
mov
xchg
cmpsl
pusha
movsl
add
push
cmp
repz
xchg
inc
dec
and
sti
jno
xor
les
add
push
leave
imul
in
in
push
dec
push
dec
rorl
xchg
jmp
imul
xor
imul
pop
sbb
fists
push
xor
icebp
roll
mov
mov
add
scas
cmp
fcoml
ja
push
mov
ja
in
bound
jecxz
xor
popa
or
and
xor
sbb
mov
movaps
jmp
rcrb
outsl
cmpsb
stos
mov
sti
cmp
cwtl
sub
bound
dec
fucomip
mov
sbb
sub
shll
shr
cmpsb
idiv
icebp
movsl
xor
int
push
scas
ret
ja
cli
cmp
jl
inc
jno
enter
xor
jmp
mov
inc
popf
rcr
leave
loope
xchg
mov
loope
insl
out
clc
addr16
xlat
rcrl
cwtl
inc
adc
mov
aas
sub
adc
mov
mov
push
lods
call
mov
je
int3
arpl
das
cmpsb
and
nop
sbb
mov
lret
loope
call
in
jb
mov
add
rclb
enter
insb
pushf
lds
sarb
sbb
loope
add
ret
jbe
popa
testb
push
out
sarb
mov
xor
mov
xchg
fdivr
stc
xor
cmp
jge
push
or
push
xor
dec
mov
lods
imul
divl
test
mov
enter
cmp
push
or
mov
inc
std
std
xchg
dec
cmpsl
rcr
dec
movsb
leave
or
inc
lahf
scas
std
out
jmp
into
xchg
sbb
fcmovnbe
shlb
add
scas
fcoms
push
add
jle
adc
jg
cltd
subb
scas
cld
cmpsl
dec
faddl
mov
cld
mov
lahf
or
lea
cltd
addl
jnp
subb
cld
stc
inc
xchg
xor
ja
adc
out
jecxz
or
add
sbb
mov
jge
fistpll
scas
push
out
mov
cmp
imul
lock
aas
fcomi
adc
push
movsb
icebp
inc
push
mov
ficoml
cmp
pop
stc
insb
cltd
aam
lock
dec
push
jp
enter
pop
xor
mov
fistpll
popf
sbb
push
add
repz
stos
mov
test
leave
outsb
js
push
push
loope
sub
les
pop
dec
popa
sbb
in
int3
clc
cmp
mov
js
bound
imul
cld
sbb
test
cli
pop
xor
mov
sub
mov
fidivrs
fbstp
lahf
mov
inc
pop
iret
add
std
cmp
mov
mov
pop
sbb
enter
clc
decb
sbb
mov
pop
jmp
add
jo
add
test
inc
adc
cmpsl
movsb
fisubrl
mov
insl
xchg
push
aaa
or
or
bound
cmp
insl
push
into
ret
frstor
add
pop
adcl
into
stc
int3
iret
xchg
mov
add
cmpsb
add
and
scas
lahf
je
sbb
adc
cli
enter
inc
adc
iret
xchg
call
cmp
daa
lock
mov
xchg
or
mov
jnp
sbb
or
add
test
rcrl
test
or
cld
pop
inc
add
outsb
and
je
jbe,pt
jmp
decl
pop
xchg
mov
rcrl
jnp
out
jbe
clc
out
xchg
push
xchg
and
inc
mov
dec
mov
or
outsl
daa
call
push
push
pop
push
sub
cmp
mov
xchg
mov
sub
mov
divl
xor
sub
cs
push
mov
push
addr16
adc
sub
test
stc
fistpl
pop
adc
bnd
js
cs
inc
pop
dec
call
mov
mov
mov
and
inc
cli
pop
sti
lea
fdivl
shll
sbb
xor
decb
ljmp
xor
push
cmp
or
mov
subb
test
cmpsl
adc
adc
adc
popa
loopne
xchg
adc
sarl
mov
lahf
fimull
inc
sub
add
jne
push
adc
inc
repnz
bound
lods
pop
in
inc
inc
cmpsb
push
test
fistpll
cmp
mov
test
mov
mov
hlt
or
clc
or
add
xchg
xchg
inc
mov
add
sub
es
push
xchg
test
fstpl
iret
add
sub
jne
out
xchg
ret
inc
sbb
pusha
js
xchg
xchg
adc
inc
movsl
fwait
cmpsb
xor
sbb
popf
xchg
clc
int3
scas
sbb
fisubs
and
ljmp
in
enter
lock
loop
gs
sub
dec
mov
mov
fstpt
sar
mov
add
out
xor
or
mov
push
shll
xor
add
cmpsb
mov
fcmovnb
mov
xor
inc
jmp
stos
jne
pop
mov
dec
into
cmp
es
adc
sbb
pusha
or
pop
adc
fisubrl
cwtl
add
lods
fsubl
jns
and
enter
and
das
ror
loope
push
int
fdivr
or
movsl
test
and
aam
test
jne
pop
jle
cmpsl
sub
leave
movd
dec
and
fs
int3
push
je
cmp
push
mov
lret
mov
mov
pop
and
push
and
jmp
mov
lret
mov
mov
aaa
subl
incl
movsl
les
cmp
enter
insl
scas
arpl
stc
scas
iret
sub
ljmp
jbe
fistpll
or
and
jl
sbb
dec
sbb
pop
repz
pop
inc
push
xor
dec
add
in
rcl
stos
popa
rcrl
cmp
filds
mov
cmp
roll
inc
lock
fistpll
mov
aad
bound
sti
mov
mov
adc
test
push
sbb
add
or
push
lahf
jb
repnz
add
sub
aaa
jbe
imulb
fwait
cmp
xorb
ja
add
fisttps
bound
insb
loope
dec
push
jmp
and
mov
lock
arpl
jl
xlat
movsl
imul
or
push
or
ret
imul
sarl
in
andb
xchg
sbb
sub
out
mull
int
rcll
mov
loop
sbb
nop
lock
movsl
or
adc
adc
loope
and
out
add
xor
cwtl
cmp
mov
inc
jmp
stc
lret
addl
roll
in
add
jae
adc
fcmove
imul
sub
clc
test
push
movsl
xchg
sub
mov
jne
mov
cmp
inc
mov
add
jno
aad
mov
push
mov
push
mov
dec
mulb
mov
mov
ds
out
adc
dec
push
mov
inc
mov
adc
scas
adc
or
daa
mov
mov
jne
jecxz
xor
cwtl
and
fucom
sbb
sbb
in
sbb
jg
in
xchg
add
mov
subb
push
lahf
out
push
shlb
add
mov
jle
cmp
adc
xchg
loope
xor
cli
xor
or
mov
popa
iret
xor
dec
sub
sbb
sbb
and
xchg
enter
adc
adc
mov
rcrl
sbb
sbb
push
rcll
lcall
mov
mov
sub
dec
cs
popf
rcl
sub
jecxz
ljmp
out
mov
cmp
mov
push
jp
in
iret
mov
mov
fcoml
out
xchg
mov
jnp
repz
stos
mov
fdivl
inc
mov
mov
sarl
ja
lahf
in
popf
mov
or
repnz
push
sub
push
mov
sbb
dec
scas
push
std
inc
lock
sbb
or
or
jns
xchg
mov
or
scas
and
dec
push
mov
sub
adc
int3
mov
jp
pop
das
jo
pusha
pop
mov
fbld
mov
mov
push
pop
adc
sub
mov
sti
jl,pt
mov
inc
cmpsl
pop
xchg
sti
fldenv
or
loope
aaa
and
cmpb
pop
orb
aad
dec
pop
jne
sub
lea
jecxz
adc
pushw
movsb
cmpsb
and
mov
insb
sbb
pop
push
gs
mov
dec
jb
jp
sub
insb
push
sbb
ljmp
mov
mov
leave
test
push
sub
incl
rcl
scas
repz
sub
dec
les
cmpsl
pop
jp
cmpsb
and
popf
test
xchg
fiaddl
mul
push
rclb
cltd
jge
add
test
test
xor
cmp
lret
sbb
adc
int3
cltd
fcompl
inc
scas
adc
mov
sub
add
xor
lcall
jge
aaa
cmpsl
xchg
dec
adc
xchg
out
mov
cmpsb
mov
lcall
inc
mov
cmp
cmc
dec
movsb
int3
lcall
pop
mov
rcrl
mov
lds
mov
daa
aad
into
cmp
xor
cmp
adc
inc
js
sbb
aad
cmp
js
mov
repnz
jne
lcall
mov
and
sub
sahf
aaa
adc
pop
dec
ret
mov
add
push
incb
stc
mov
aad
xchg
xor
add
daa
push
aaa
bound
pop
icebp
inc
mov
mov
stos
shr
xor
jnp
cmp
scas
int
cli
outsb
lahf
mov
pushf
cmp
jb
mov
scas
push
dec
mov
cmp
xor
rclb
ret
jecxz
mov
jl
and
mov
dec
mov
fsubl
out
fisubrl
xchg
out
test
xor
mov
lock
inc
loop
and
adc
fldl
mov
or
out
jge
jecxz
xor
dec
pop
xchg
mov
add
aas
cld
ret
xchg
aaa
jp
mov
push
mov
add
test
mov
pushf
ss
jp
sbb
adc
mov
inc
or
adc
pop
jl
xchg
dec
mov
repnz
add
pop
xchg
lret
cld
sub
jb
arpl
loopne
ret
ss
xchg
out
mov
mov
lcall
push
addr16
ret
ja
fsts
lock
inc
ret
jmp
add
sub
in
shl
sbb
idivb
sbb
ror
xorb
xor
call
loopne
std
loopne
in
sahf
ds
insb
mov
cmp
and
loope
cmp
lods
out
clts
adc
insb
aad
cpuid
adc
lods
push
push
fwait
dec
movsl
cld
push
popf
ror
and
cli
mov
incl
add
adc
adc
out
pop
outsb
and
ljmp
jl
icebp
xor
mov
daa
mov
pop
outsl
mov
jmp
ljmp
xorl
pop
mov
popf
sbb
pop
out
push
push
mov
adc
cld
in
test
pop
dec
inc
add
clc
orl
or
outsb
lahf
pushl
inc
adc
std
adc
and
fldt
and
ret
xor
cmp
in
or
dec
sub
dec
mov
ljmp
movhps
popf
or
cmp
dec
pop
in
daa
or
out
push
dec
or
sub
icebp
cmpsl
sbb
and
cmc
shll
adc
add
jecxz
arpl
insl
jnp
jp
out
aas
xchg
mov
in
xor
push
shll
lds
mov
neg
enter
sub
push
pop
jns
outsb
fbstp
adc
mov
xchg
lcall
in
push
psubsw
negb
mov
movsb
arpl
push
xchg
sub
scas
mov
cmc
loopne
xor
sbb
xorl
mov
add
mov
push
xchg
push
mov
popf
adc
add
xchg
add
jbe
xor
ljmp
cmp
pusha
popa
pop
cmp
xor
addb
mov
cmp
adc
arpl
psubsb
in
mov
rorb
movsl
and
test
sub
inc
popa
popa
add
xor
movsl
mov
movsl
ret
fisubl
fwait
daa
jge
faddl
sar
and
adcl
mov
push
hlt
fs
push
scas
xchg
fcomi
mov
aam
repnz
dec
sbb
jle
icebp
dec
rolb
fst
cmp
pusha
loope
lret
test
jecxz
ljmp
mov
in
into
dec
adc
xor
dec
in
push
xchg
inc
jns
add
fsub
jl
or
dec
das
xor
pop
sub
je
jecxz
push
cmc
repz
push
add
int
dec
jb
lea
mov
hlt
xchg
test
or
subl
ja
aas
in
dec
mov
jne
call
mov
pop
sbb
inc
pushf
add
cmp
xor
pushf
xor
inc
adc
dec
iret
arpl
cld
xchg
or
loopne
adcl
pop
mov
jle
into
or
add
dec
fidivs
test
fs
mul
outsb
std
mov
sub
or
ret
pop
lods
dec
pop
aad
int3
fwait
fmull
inc
xlat
pop
icebp
leave
cmp
ss
sarb
or
cmpsb
fucom
int3
push
adc
mov
push
lods
out
mov
mov
das
addb
jb
gs
inc
inc
shl
pop
jmp
aas
fs
std
mov
mov
inc
enter
cmp
jecxz
or
notb
jbe
clc
pusha
add
adc
sbb
mov
add
xor
add
jns
or
xchg
mov
adc
push
mov
adc
lods
cmp
in
cmp
test
addr16
es
cmpsl
test
xchg
and
shl
pusha
xlat
sub
cld
add
sbb
fistl
orb
jecxz
aaa
adc
push
mov
mov
aas
rol
mov
mov
xchg
xorb
dec
cwtl
movsl
stc
sti
add
jge
sbb
lods
xor
fisttps
cmp
loop
or
sub
mov
add
ret
loopne
jne
or
sbb
cmpl
sbb
stos
inc
js
mov
add
lods
stos
jnp
fldenv
scas
xchg
push
cmpl
pop
pop
mov
xor
adc
add
scas
push
mov
mov
lret
aas
mov
inc
dec
fsubr
outsl
scas
notl
hlt
loopne
mov
mov
cmp
lcall
movsl
test
sub
nop
ljmp
add
aam
dec
sarl
pop
push
lret
inc
movsl
ficoml
loopne
imul
mov
cmpb
popf
repz
cs
stos
pop
pop
and
or
adc
jo
and
fdivs
and
test
inc
icebp
fiadds
mov
cmpsb
scas
adc
pop
cltd
into
pop
sub
jl
adcb
insb
adc
inc
mov
sub
repnz
adc
jp
lahf
aad
fwait
sub
cmp
pop
in
test
je
hlt
add
fistl
push
sahf
cmpsb
ret
jg
jnp
rcrb
test
jg
aad
adc
mov
icebp
xor
pop
movntps
loopne
aaa
inc
in
arpl
sbb
fcomps
dec
mov
insl
mov
inc
fldenv
fcomps
jmp
insl
add
fldt
mov
pop
popa
leave
pop
test
xchg
add
cmp
lret
mov
out
push
outsb
fwait
in
mov
inc
lcall
jge
push
das
dec
aas
nop
mov
add
mov
or
push
int3
add
test
jno
leave
les
out
enter
pop
mov
pop
fcmove
mov
push
pop
ja
imul
jp
push
call
cmp
adc
sar
jg
scas
icebp
mov
xchg
mov
xlat
jmp
nop
fmuls
jge
add
adc
pop
int3
aam
data16
int
xchg
fsubrl
test
mov
fwait
jge
mov
jne
or
rcrb
dec
cmpsl
mov
cs
js
push
int
cmpsl
fadds
mov
imul
mov
lods
push
test
and
cli
add
out
xchg
adc
inc
bound
mov
mov
mov
sbb
mov
popf
cs
mov
cmpsb
adc
and
popa
sti
xorb
fs
rcrl
daa
adc
test
lods
and
jae
movsl
loop
add
movsl
sbb
dec
call
out
add
and
sub
clc
movb
mov
and
lcall
or
mov
xchg
dec
pusha
dec
iret
cltd
aaa
pop
in
loope
arpl
int3
inc
jnp
add
add
dec
mov
fsubrp
lock
je
call
xchg
inc
lods
pop
xchg
mov
pop
icebp
and
sbb
lock
sub
iret
xchg
mov
int3
daa
ja
ss
les
fcmovbe
adc
sbb
test
lock
sbb
test
cmp
push
jge
sub
sub
in
bound
outsl
jns
adc
mov
xchg
and
aas
orb
mov
sti
or
cli
in
adc
push
stos
xor
jecxz
pop
mov
cmpsl
rol
push
push
mov
stos
add
push
push
das
cwtl
jge
sti
ja
jp
jecxz
xchg
enter
scas
xchg
cmpsl
mov
jmp
nop
int3
fsubrs
cmp
testl
add
xor
dec
xchg
lret
cmp
iret
mov
aas
cmp
jmp
subb
popa
sti
scas
sbb
sbb
adc
cltd
ret
mov
insb
inc
mov
addr16
mov
cs
mov
test
xchg
cs
ss
dec
push
mov
add
xchg
dec
call
dec
inc
dec
sarl
xchg
jo
inc
movsb
loopne
push
xchg
mov
insb
out
and
cwtl
pop
outsl
or
lcall
lods
aaa
fsubs
xor
ljmp
jle
push
jl
ljmp
fwait
out
jg
mull
les
bound
loope
movsl
xor
push
ret
and
dec
inc
andl
pop
daa
outsb
mov
sbb
dec
rorl
mov
sbb
cmp
pop
xorl
out
mov
push
add
sbb
jnp
xorl
xchg
inc
jbe
fistpl
jp
inc
imul
mov
push
jbe
mov
gs
pop
xor
cs
movl
iret
mov
add
in
into
loope
gs
or
push
sbb
inc
cmp
ljmp
push
mull
dec
in
dec
pop
loopne
mov
push
arpl
or
mov
adc
fcoml
sbb
mov
daa
mov
leave
add
addr16
xchg
push
sub
pop
or
movsl
fistpl
sub
dec
mov
outsl
int
cmp
mov
or
xchg
orl
mov
add
jp
insb
movsb
push
xchg
xchg
xchg
jmp
dec
xchg
add
mov
inc
inc
adc
xor
fsubrs
frstor
inc
mov
cmp
shrl
pushf
adc
insb
xlat
lods
fiaddl
ret
mov
rcrb
sahf
mov
stc
push
in
shl
pop
adc
or
pop
mov
jge
in
cmp
jnp
fstps
sub
jp
cmp
sbb
push
adc
sbb
ljmp
fsubrl
in
insb
push
push
aam
es
pop
and
xor
nop
mov
sub
mov
ja
jecxz
sarl
pop
icebp
scas
push
sub
jl
bound
adcb
mov
lea
xor
xchg
jnp
mov
and
push
pushf
hlt
pushf
mov
pop
dec
sub
sub
or
rclb
std
lods
push
xor
loope
loope
mov
sub
adc
cltd
mov
pop
mov
aam
mov
popa
test
xor
lods
pop
pop
aad
push
mov
nop
pop
mov
ss
push
mov
jl
into
jnp
cmp
pop
dec
xor
mov
jb
dec
cmp
loopne
cmpsb
pop
bound
imul
clc
add
and
mov
lea
loop
fistps
fsubrs
jnp
fidivrs
outsl
int3
jmp
aaa
fwait
xor
jmp
add
test
outsb
daa
inc
jb
and
mov
icebp
mov
std
test
movsb
jle
hlt
fsubr
adc
xor
scas
sub
cmp
jle
jle
stos
mov
rdtsc
adc
ljmp
pushl
sbb
sub
mov
rcrb
pop
adc
mov
xor
add
stos
ficoms
mov
xchg
or
mov
cmp
sahf
in
lods
rorl
xor
gs
fmull
and
lds
test
jne
fcmovbe
test
insl
int3
pushf
push
mulb
pusha
or
dec
insl
xchg
bound
xchg
add
sahf
sbb
cmp
lret
icebp
clc
inc
xor
push
add
cmpsl
xchg
mov
outsb
push
adc
mov
arpl
test
push
out
lret
sbb
add
pop
lret
xchg
adc
out
fsubp
jecxz
add
testl
aaa
sbb
je
cld
or
mov
test
mov
int3
xchg
add
lahf
cmp
outsl
ljmp
pop
int3
fmulp
sbb
fimuls
in
jo
icebp
lahf
stos
or
mov
rcrb
push
into
add
jge
shrl
cmp
mov
je
pusha
insb
lret
push
or
dec
dec
inc
fcompl
xlat
es
out
int
dec
movsl
mov
and
mov
std
sar
scas
mov
arpl
or
cmp
mov
lock
stos
dec
mov
cmc
call
pop
pop
mov
enter
mov
sub
add
fstpt
les
xchg
insb
sub
pop
aas
jg
mov
mov
icebp
push
loopne
or
jp
test
xchg
popa
idivl
lods
leave
out
je
movsb
rorl
pop
cmpb
sub
sub
cmp
push
lahf
adc
mov
sti
pop
or
pop
shr
call
nop
into
ret
mov
in
fwait
xor
mov
ror
daa
jbe
les
and
mov
test
daa
mov
jge
repz
jg
ja
sbb
je
cmc
pop
outsb
out
ljmp
out
test
icebp
xchg
inc
shlb
push
lahf
add
stos
or
mov
push
xchg
mov
pop
mov
mov
sbb
test
fisttpll
popl
icebp
dec
orl
push
add
shrb
in
and
gs
jnp
adc
mov
pop
mov
insl
xchg
std
es
ret
lods
les
pop
cmp
pushl
int3
jb
das
imul
jb
daa
aad
scas
sbb
xchg
mov
test
pop
ja
mov
xorps
adc
xchg
xchg
es
imul
repz
js
and
into
and
pop
out
mov
mov
sbbl
into
out
sub
jae
xchg
js
fcomip
hlt
sbb
ljmp
jb
cwtl
in
out
mov
pop
clc
testl
repnz
or
xchg
push
pop
xchg
out
maxps
test
sbb
adc
insb
movsb
lods
mov
lcall
or
add
mov
ljmp
popa
push
and
mov
add
and
mov
fwait
mov
das
jle
scas
mov
fsubs
push
ficomps
jo
nop
jg
in
mov
push
push
es
outsl
sahf
jnp
insb
jae
or
adc
pop
hlt
xchg
cmpsl
clc
inc
lea
push
enter
inc
sub
out
daa
dec
and
push
in
leave
add
adc
pop
mov
sub
dec
adcl
scas
call
mov
stc
cmp
cwtl
cmp
adc
pusha
jge
test
sbb
jns
stc
out
and
insb
jecxz
aam
in
cli
mov
cmp
and
jne
add
pop
pop
xchg
mov
std
repnz
jl
mov
inc
cmpsl
jmp
out
inc
mov
aam
loopne
mov
call
rcr
jno
pop
mov
pop
cmp
fadd
ds
xor
jo
xchg
push
ret
jne
clc
sbb
inc
and
push
jmp
sbb
cmc
out
mov
mov
addl
int3
xor
stos
sahf
sbb
loopne
gs
and
cmp
nop
in
cmp
sbb
push
xor
cwtl
rol
faddl
jne
or
sbb
aas
pusha
cld
les
cli
outsl
into
packuswb
mov
fcmovb
add
pop
icebp
fstl
test
shlb
add
inc
jmp
aad
pop
mov
mov
lods
sub
daa
fs
aam
and
aad
inc
in
mov
cmp
dec
lahf
mov
add
aad
pop
cmc
aam
xchg
mov
movsb
in
popf
jle
test
mov
adc
scas
fnsave
jb
or
xor
dec
or
and
inc
cmpsl
ror
sbb
xchg
cmp
popl
sub
movsl
add
lcall
out
jge
lds
sti
imul
adc
ljmp
aaa
inc
push
aas
mov
jmp
out
and
je
imul
mov
les
loopne
add
stos
push
jecxz
scas
pop
lret
xchg
sbb
or
sub
mov
aaa
dec
or
scas
sti
or
mov
jecxz
pushf
pop
pop
dec
xchg
cmp
adc
add
mov
sub
pop
ret
add
jo
add
and
pop
sbb
jecxz
cwtl
and
in
gs
lahf
dec
push
orl
jns
jecxz
ljmp
notb
cwtl
mov
and
mov
jo
cmp
add
sarb
mul
xor
aad
mov
out
push
or
aas
lds
lret
inc
in
xor
adc
shll
mov
pushf
imul
shll
movsb
pop
pushl
outsl
mov
pop
push
rcrl
jp
sub
imull
pop
jl
cmp
movsb
jecxz
inc
cld
fdiv
aaa
sbb
fisubrl
fisubrs
rol
push
xor
pop
adc
adc
jmp
pushf
fs
adc
je
xlat
xchg
mov
mov
je
aaa
mov
mov
mov
xchg
sub
arpl
test
lods
rorl
std
shll
cwtl
mov
dec
les
stos
aad
xchg
sbb
fwait
je
adc
add
jecxz
cld
sub
in
mov
pop
adc
in
or
shr
inc
mov
mov
add
inc
icebp
mov
cmpsl
push
mov
adc
mov
inc
popa
add
sahf
add
movsb
pop
dec
push
push
adc
rorl
xchg
adc
les
add
sbbb
jle
cmp
sub
popa
jbe
push
shlb
es
popa
and
and
pop
mov
out
cmp
mov
pop
std
das
and
into
jle
data16
fiaddl
inc
sbb
pop
aas
in
lock
xchg
orl
mov
cltd
lock
pop
push
push
push
sub
push
cmp
adc
push
cs
mov
loope
cltd
stos
testl
mov
add
mov
test
lea
fs
jl
fisubrs
js
adc
into
out
cli
aas
mov
clc
into
dec
adc
push
rcr
mov
je
movsb
push
fdivl
sub
aam
push
push
out
fildl
add
sbb
inc
es
mov
sahf
lret
sbb
lcall
je
cmp
mov
es
xchg
push
bound
xor
or
negb
into
call
fidivrs
fsubr
jmp
mov
adc
ret
cmp
icebp
pop
gs
repnz
repnz
ficompl
pop
or
subb
mov
stos
mov
mov
andb
and
lret
xchg
jp
cmp
push
out
mov
fs
mov
jnp
loop
push
lock
mov
and
int
in
cmp
les
icebp
cwtl
nop
xchg
xchg
popf
cmp
lods
movsl
icebp
cmp
adc
mov
mov
loopne
lret
into
mov
sbb
mov
pop
jns
xchg
cmp
cmp
push
cmp
or
sub
mov
push
fcmovb
imul
inc
sbb
xor
xor
pop
repz
dec
mov
repz
lahf
adc
pop
add
sub
loope
out
push
or
adc
cmp
xor
push
mov
fnsave
push
mov
loop
dec
inc
mov
ds
fldenv
pop
test
dec
push
jno
sbb
jne
out
sub
lret
jb
mov
loopne
shll
jmp
pusha
shll
out
aaa
sub
es
add
pop
ljmp
fisttpl
mov
jae
or
lret
dec
cli
shrb
inc
iret
or
lea
outsl
sub
test
out
loopne
fmul
fisubrl
negl
and
xchg
mov
sti
mov
xabort
mov
pop
sub
repz
orb
or
loopne
int3
push
inc
pop
add
int
repz
test
punpckhwd
lret
push
loope
adcl
mov
push
mov
fwait
add
sbb
dec
mov
cmpsb
pop
cli
jg
push
jp
inc
mov
jno
lret
nop
fmull
cwtl
inc
mov
pop
stos
fdivrl
int3
or
push
push
jge
js
sub
imull
aas
or
sub
popa
mov
push
stos
test
mov
inc
aas
movsb
repnz
dec
jle
or
jge
jb
icebp
adc
rol
dec
xor
dec
add
add
movsl
pop
jo
lock
jl
cmpsl
mov
sub
lcall
aas
pop
mov
pop
sbb
push
aam
cmp
sub
js
out
shrl
sbb
pop
insb
and
pop
test
mov
dec
pop
push
inc
into
pop
stos
jp
mov
mov
lods
fbstp
clc
jge
test
pop
push
jns
xchg
xchg
xchg
int3
scas
lock
dec
ljmp
cld
sbb
inc
bound
jl
fucomp
lock
push
test
sub
sbb
sub
inc
sahf
je
fs
pop
addr16
cltd
mov
mov
fmulp
jb
mov
out
xchg
dec
repnz
sti
mov
out
pusha
add
and
jo
ret
pop
mov
xchg
cld
movsb
in
mov
hlt
iret
cld
movsl
pushf
lods
pop
lret
scas
xchg
lods
pop
das
dec
adc
cmpsl
inc
sub
mov
jno
push
jbe
xchg
and
xchg
ss
ret
cli
sub
inc
pop
mov
inc
loopew
mov
or
bound
sahf
insb
push
add
add
xlat
mov
and
shlb
pop
jne
aaa
jbe
orb
in
sbb
dec
mov
loope
jmp
in
cmpsb
adc
pop
out
sub
cmpl
fistpll
xchg
into
jo
and
stos
daa
sub
pop
sbbl
into
xchg
test
in
enter
xchg
icebp
push
pop
mov
leave
insl
les
movsb
xchg
std
out
xchg
cmpl
lcall
fst
lods
imul
pop
and
sbb
mov
aam
hlt
scas
bnd
test
jle
inc
insl
xchg
cs
jle
jae
adc
xor
dec
ret
xor
adc
and
mov
xor
xchg
cmpsb
repnz
popf
dec
sub
xor
add
loop
mov
data16
xor
fsubs
mov
jns
out
mov
ljmp
scas
add
lods
push
xchg
jg
mov
je
fwait
sub
imul
jmp
cs
movsb
repz
addr16
inc
cltd
fiaddl
mov
inc
lret
out
sbb
andl
dec
inc
stos
xchg
popa
mov
xchg
insl
fistl
subl
pop
setg
mov
mov
xchg
mov
inc
push
das
xchg
xchg
es
mov
sbb
aad
push
jo
in
jle
push
movb
xchg
out
inc
jno
sub
fucomip
repnz
and
pop
push
popa
adc
ret
je
test
mov
mov
je
mov
js
and
lock
xor
or
pop
lea
jle
subl
iret
decl
loopne
clc
sub
and
adc
test
jecxz
sub
sub
dec
dec
fsubrp
push
or
mov
dec
pop
arpl
lds
jecxz
or
xor
lahf
jno
mov
or
imul
mov
es
pop
psubusb
subl
pop
xor
and
lods
and
daa
jecxz
inc
movsb
lret
test
testl
push
bound
mov
in
jge
jbe
mov
cmp
out
cmp
aam
xor
cld
and
cmp
mov
or
dec
rcrl
shll
icebp
or
rcrl
push
pop
dec
imul
cltd
mov
xor
inc
jbe
shlb
push
rcrl
lahf
cmpsl
nop
sbb
sbb
or
add
inc
jne
mov
int
fisubl
add
mov
data16
sbbb
out
int
push
sub
bound
jp
fs
pop
out
dec
sbb
xchg
cs
adc
and
mov
xor
cmp
data16
cmp
into
mov
jl
fcoml
pushf
pop
xchg
sub
popf
mov
int3
mov
enter
stc
bound
xchg
pop
push
xchg
testl
arpl
into
out
cli
pop
mov
lret
mov
fisubs
lods
sbb
mov
jg
add
add
dec
mov
cmp
pop
adc
or
adc
mov
rolb
add
aas
dec
scas
cwtl
insb
xorl
adc
cltd
imul
mov
adcb
lret
cmp
es
xor
xacquire
movsb
xchg
mov
lea
sahf
stc
or
maskmovq
imull
sbb
xchg
sbb
add
mov
enter
addr16
imul
jmp
pop
push
sub
ficoml
fs
pop
lds
repz
and
cmp
scas
mov
test
ret
inc
add
mov
daa
jg
cmpsb
ss
scas
test
jg
xor
mov
scas
dec
ret
test
jge
orl
cmp
popf
inc
cli
mov
push
push
xor
pop
xchg
movups
jne
in
clc
cmp
jae
pop
adc
std
cli
xor
adc
cmpb
mov
adc
add
dec
mov
arpl
adc
into
lret
xchg
xchg
movsb
int
cltd
push
adc
ja
pushf
mov
mov
stos
mov
and
mov
push
jp
and
fs
dec
pop
or
les
add
xor
out
mov
jb
dec
movsb
jae
jecxz
mov
and
cmc
or
leave
adc
repz
call
loope
ja
fs
cmpsl
js
mov
xor
xchg
sbb
hlt
xor
push
lret
jne
movsb
xorl
mov
insl
jb
data16
mov
adcb
pushf
int
ljmp
jp
outsl
jle
shl
ret
adc
inc
fidivl
push
sub
cmp
fdivp
mov
pop
scas
loopne
lcall
lret
mov
pushf
or
mov
dec
push
insl
aad
dec
jmp
pop
push
push
or
test
push
lods
adc
push
inc
jp
cli
pop
adc
mov
push
jge
xorl
xor
xchg
test
or
out
imul
fmuls
push
jp
jnp
out
mov
fwait
stos
jecxz
les
xor
push
ljmp
and
xchg
inc
clc
js
imul
or
jge
out
je
loope
fildll
hlt
out
mov
mov
adc
js
sbb
dec
pusha
insb
add
adc
mov
xchg
and
cld
jae
outsb
gs
xor
mov
popf
push
fsts
xchg
cltd
aaa
pop
xor
add
shlb
dec
aam
or
dec
or
fsubs
inc
jmp
loopne
hlt
jnp
xor
pop
cmp
xlat
cli
ljmp
push
xchg
test
neg
adc
xchg
and
cs
movsb
call
stos
mov
pop
adc
cmp
dec
inc
and
addr16
dec
mov
mov
pushl
cmpsb
repz
push
jnp
mov
decl
xlat
and
lods
mov
ljmp
push
push
jns
pop
sbb
add
mov
cmp
ret
arpl
outsb
daa
stos
mov
jbe
push
pop
mov
fwait
add
sarb
inc
cmp
mov
inc
sti
inc
enter
mov
ds
sbb
in
mov
lret
dec
lcall
lahf
into
mov
outsb
add
popf
adc
rorb
mov
pop
call
add
test
ds
adc
iret
inc
pop
push
jle
jp
ss
jecxz
dec
xchg
mov
and
loop
cmp
cmpl
xchg
gs
int
push
or
imul
cli
adc
mov
mov
mov
fmull
jle
fcomps
rcrb
mov
dec
add
jle
int
ljmp
sub
jmp
adc
outsl
sbb
jecxz
fildl
fisttpll
cld
into
sbb
adcb
mov
add
stos
dec
xchg
hlt
cmp
push
jnp
sbb
iret
out
lds
xchg
push
push
js
loope
pop
cli
mov
mov
inc
and
jecxz
test
xor
xlat
insl
leave
outsb
inc
lods
jns
std
push
mov
add
and
dec
sbb
adc
fcomps
mov
adc
sbb
popa
call
inc
dec
pop
adc
add
dec
cmc
pop
aas
gs
outsb
mov
aaa
xor
mov
adc
insl
cltd
pop
aad
sbb
or
inc
xchg
aad
sbb
sub
sbb
dec
ja
adc
aas
jno
sub
mov
mov
pop
pop
push
push
sbb
lahf
imul
in
pushf
jne
mov
xchg
sbb
adc
push
test
ret
scas
push
cmp
sbb
mov
data16
bound
inc
inc
test
jbe
pop
aaa
scas
jg
cmpb
insl
sarb
sti
and
fwait
pop
in
sbb
or
cs
aaa
shll
mov
repz
and
mov
cmpsl
or
jecxz
cmp
call
rcr
xor
and
inc
leave
sub
sbb
lret
cmp
mov
ficomps
jl
lods
loop
fnstenv
xchg
hlt
js
add
js
lods
cld
addr16
loop
int
test
fdivs
jle
lds
fiadds
lret
pop
pop
lcall
and
imul
mov
sar
int3
jmp
icebp
xchg
orl
roll
fidivrl
decb
mov
jl
pusha
cmpsb
enter
mov
jnp
int
xor
sbb
mov
jle
or
or
stos
push
xchg
push
data16
jns
xor
mov
and
cwtl
push
sbb
push
jg
sahf
jno
addl
sbbb
jmp
jle
popf
or
adc
outsb
dec
push
lcall
mov
lahf
jg
xchg
mov
in
xchg
lahf
aam
popa
jne
mov
je
outsb
inc
sub
in
aaa
push
cmp
shll
imull
xchg
jle
out
inc
and
inc
lea
mov
outsl
mov
repnz
fwait
out
adc
push
insb
sub
pop
clc
mov
lret
call
iret
mov
sub
and
movsl
rolb
push
sti
mov
rol
cmp
xchg
mov
push
roll
fistpll
add
mov
lcall
mov
jle
movsb
or
cmc
jmp
add
insb
clc
jl
adc
movsl
fs
arpl
loopne
dec
sti
inc
xchg
and
mov
out
push
iret
clc
add
cmpsb
loope
jl
xor
cmp
mov
fidivrs
das
aam
rorl
cli
lock
and
and
daa
rclb
and
add
imul
pop
jnp
inc
jl
pop
xchg
push
loop
sub
xor
or
sub
dec
je
mov
xor
mulb
dec
ret
rsqrtps
movsl
mov
test
lea
pop
scas
inc
ret
pop
ljmp
add
insl
imul
mov
jp
xor
push
cs
xchg
lods
and
aas
cmp
loopne
shl
xor
xchg
push
cmp
and
into
add
push
js
int3
mov
pop
and
test
mov
cwtl
pop
jb,pt
ja
push
jle
inc
rcrb
insb
jmp
xchg
cltd
sub
es
dec
aam
pushf
sub
test
lahf
frstor
cmc
in
or
xchg
mov
push
push
push
ror
ljmp
jle
inc
push
cli
push
mov
nop
adc
mov
xchg
sbb
ret
rorb
cli
aad
scas
sahf
adc
iret
stc
xchg
adc
mov
xor
jge
fisttpll
lds
adc
in
ja
sbb
mov
pop
incl
dec
add
mov
sub
xchg
sub
mov
mov
mov
pushf
pop
xor
inc
cmpsb
insb
cmp
lret
inc
shlb
lret
mov
mov
lds
addr16
dec
sub
mov
outsl
sbb
jno
push
sbb
leave
add
push
sub
outsb
aaa
mov
fadds
ret
popf
cli
push
push
sbb
adc
mov
gs
fildll
lret
pusha
add
sub
adc
add
fldt
loope
mov
fwait
pop
pop
out
sub
pop
add
mov
int3
arpl
jle
aas
add
mov
inc
mov
fwait
mov
leave
adc
mov
push
pop
popl
pop
nop
dec
in
iret
xchg
test
adc
mov
lret
push
mov
mov
fcomi
cmp
push
aas
je
pusha
fstp
fs
sti
mov
out
dec
cli
je
sub
test
cld
xchg
fwait
lock
cmp
jmp
test
jmp
cmp
loopew
aad
xchg
daa
jmp
dec
aas
popa
jne
mov
ja
ljmp
and
xor
insl
daa
in
cmpsl
xchg
mov
lea
in
aaa
inc
mov
mov
mov
sub
adc
cmp
mov
or
adc
inc
adc
dec
xchg
and
mov
xchg
outsl
aam
dec
xchg
rep
popa
test
push
mov
push
stc
ss
xor
mov
push
imulb
dec
movsl
outsl
ss
div
ja
push
mov
les
sbb
inc
push
mov
insb
ds
aas
jne
xchg
mov
inc
cltd
xchg
dec
sahf
popa
popl
lds
inc
fxch
outsl
mov
inc
or
rcll
lahf
mov
test
sub
pop
mov
mov
pop
int3
pop
mov
stos
mov
xchg
in
std
xor
dec
movsb
pop
imul
lahf
das
es
orl
insl
jle
aam
inc
insb
bnd
xchg
movsb
pop
or
rclb
mov
sub
or
inc
insb
pop
inc
je
ss
jae
mov
jo
jmp
jmp
call
or
cmp
pop
int3
aaa
in
dec
sub
or
cmp
cmpsb
cmp
adc
add
insl
les
scas
push
in
and
incb
aam
lock
test
adcl
sub
test
outsb
mov
push
sub
jle
incb
inc
ret
mov
mov
push
jg
stos
push
inc
jg
push
mov
mov
aas
mov
pop
adc
push
je
sti
xchg
testl
iret
dec
and
ret
cli
jg
add
xorb
jae
adc
pop
jmp
mov
add
mov
pop
bound
dec
adc
leave
nop
push
push
jle
icebp
pop
mov
shrl
aad
mov
and
mov
mov
lods
or
push
push
imul
mov
jecxz
pop
sub
or
ja
in
jp
cld
jl
lock
jmp
iret
mov
ljmp
jle
fwait
pop
mov
enter
sub
stos
or
jo
nop
data16
cmp
fs
mov
lret
lahf
cltd
inc
flds
adc
imul
enter
lds
sbb
push
cltd
ret
push
xor
icebp
test
jg
inc
xchg
mov
mov
mov
jbe
mov
popa
xchg
dec
add
out
pushf
fucomi
dec
mov
lret
lock
popa
daa
sbbl
mov
pop
int3
roll
ja
dec
aaa
inc
dec
jnp
mov
sbb
xchg
push
ret
movl
or
pushf
mov
lahf
adc
cmp
pop
mov
cmp
shlb
cs
xchg
test
cmpsb
mov
dec
mov
outsl
cwtl
lock
aas
popf
inc
pop
push
pop
out
mov
jns
dec
xchg
or
sbb
mov
mov
jp
mov
test
add
lods
stos
std
insb
mov
inc
stc
sbb
push
mov
xchg
daa
adc
pop
jno
lret
push
add
in
inc
es
dec
xchg
out
in
cli
notb
sbbl
sbb
addr16
mov
aam
add
mov
in
roll
mov
sbb
cmc
cwtl
sti
nop
xor
cmp
js
fcomip
mov
dec
jno
sti
push
shlb
ja
jmp
mov
loope
or
lcall
pop
data16
adc
test
mov
insl
loopne
or
outsb
cmpsl
adc
imul
inc
movsl
and
xchg
and
test
lods
push
adc
test
icebp
enter
or
mov
xchg
cltd
shll
jle
xor
das
jo
mov
xlat
mov
sbb
push
sub
inc
out
fwait
mov
and
pop
adc
aaa
push
xchg
je
stos
dec
jne
mov
lahf
mov
add
inc
pop
jo
mov
adc
inc
cmc
mov
incb
mov
sbb
sub
mov
inc
clc
xor
rorb
push
sbb
inc
aas
push
aam
fnstcw
xlat
sti
xchg
add
in
aas
addr16
sbb
push
stos
cmp
repnz
jl
les
pop
loope
pusha
call
mov
mov
pushf
mov
aas
inc
jmp
pop
xor
sbb
testl
or
int
dec
mov
cs
call
sti
mov
add
and
mov
mov
push
jno
adc
and
imul
inc
sub
pop
cmp
in
addr16
mov
lods
cld
loop
mov
gs
sub
sti
or
sub
test
mov
mov
in
dec
jbe
cld
push
jmp
jb
adc
btc
fidivs
inc
push
aad
inc
movsl
cld
pop
cwtl
mov
aas
lcall
aas
and
ffreep
fdivr
sub
mov
mov
lock
inc
nop
mov
and
adc
and
jmp
aas
test
flds
and
push
add
loope
mov
push
popf
je
sub
movsl
xchg
or
lahf
xchg
cli
or
pop
dec
xchg
dec
rorl
push
in
and
pop
cmpl
jg
mov
mov
nop
mov
sarl
and
out
or
xor
movsb
nop
aas
lcall
fs
or
mov
aas
and
lret
adc
cmp
dec
mov
xchg
mov
dec
sub
ljmp
xor
mov
mov
test
inc
loope
push
jge
js
cld
shl
push
push
pop
add
mov
pop
dec
rcll
ret
repnz
icebp
and
push
sahf
lcall
pop
xlat
push
enter
mov
movsl
movsb
out
push
mov
dec
cmp
push
setge
shl
cltd
ret
or
push
stos
or
pusha
mov
imul
jg
add
xor
cltd
add
xchg
lret
add
xchg
add
sahf
stos
in
sahf
xor
cmp
das
inc
xor
movsb
pop
mov
push
das
sbb
pop
das
std
push
mov
add
and
inc
pop
cltd
push
mov
adc
ss
int3
jns
scas
pop
out
or
adc
in
test
cmp
inc
repz
add
inc
and
sub
cmp
mov
or
aaa
cwtl
jl
mov
fistpl
stos
xor
cmc
movsl
cmp
insb
subb
addr16
fistpll
mov
or
clc
lret
fistps
inc
xor
xchg
cmp
adc
add
adc
inc
lock
adc
sub
pop
cmp
cmp
dec
xor
dec
mov
mov
add
divb
xchg
xor
or
call
icebp
pop
pop
int3
pop
mov
das
pop
mov
popf
not
dec
push
data16
xor
cli
mov
push
pop
ret
ljmp
out
cs
pop
sbb
fadd
jg
mov
fistl
in
sub
shrb
les
ja
mov
loop
mov
sbb
or
jmp
xchg
loopne
cmc
inc
lret
lahf
sub
push
addr16
into
insb
jl
test
cmp
pop
sub
lahf
movsl
xor
jl
add
add
outsb
mov
lock
jo
clc
aas
pop
or
xchg
inc
pop
jnp
fldenv
dec
and
divl
fcoms
mulb
inc
repnz
mov
cli
divl
fwait
sub
xchg
jno
mov
out
insl
xchg
inc
arpl
dec
std
loop,pn
xchg
dec
popa
int3
das
xor
add
push
imulb
mov
ljmp
clc
adc
inc
jge
pop
ja
testb
aam
push
sub
adc
sbb
adc
xor
dec
sbb
pop
mov
pop
inc
xchg
xchg
cmc
lods
out
inc
fildll
sbb
sbb
xchg
xor
ss
jns
movhps
push
loop
ja
ja
insl
jge
lock
sbb
mov
adc
fistpll
xchg
and
imul
mov
adc
cmp
adc
into
popa
gs
dec
scas
cmpb
cmp
or
jb
pop
int3
xor
add
xor
cmpsl
scas
fdivrs
pop
leave
jge
jnp
sarl
fwait
pop
cwtl
pusha
pusha
mov
and
lea
mov
jne
jb
jo
dec
aaa
mov
movsb
cmc
mov
sti
add
mov
mov
sbbb
mov
mov
movsl
ss
mov
sbb
mov
or
daa
jl
cmpsb
mov
mov
and
icebp
pop
addr16
add
add
daa
loopne
out
data16
frstor
dec
icebp
and
inc
enter
out
mov
mov
loop
inc
lods
es
jo
xchg
xor
out
mov
push
lret
jne
push
sub
cmp
addr16
sti
enter
ret
mov
xchg
pop
pusha
push
xor
adc
jmp
xlat
sub
pop
neg
mov
ds
icebp
out
stos
movb
ljmp
mov
out
repnz
into
icebp
pop
jb
pushf
add
fiaddl
xchg
jecxz
sub
into
mov
sbb
into
leave
clc
ror
mov
xor
lds
insl
fsts
add
pop
cmc
mov
adc
mov
inc
add
js
stos
inc
js
pop
out
nop
push
xchg
push
adc
aaa
push
ficomps
in
push
push
fists
fldt
cmp
mov
mov
mov
push
xchg
inc
dec
inc
aaa
push
repz
addl
jnp
add
xchg
aad
mov
cltd
push
ror
sbb
movsb
ret
cld
loopne
fistpll
and
xchg
ja
andb
shlb
add
addb
jb
sub
inc
sahf
cmpl
mov
imulb
add
sub
fwait
add
ficomps
pop
jo
lahf
leave
mov
xchg
mov
xchg
add
vaddpd
imulb
pop
add
imul
test
xor
insb
sub
dec
push
int
stos
pop
movsl
call
icebp
mov
into
stos
mov
fsub
xor
sub
repnz
mov
dec
arpl
fwait
out
pushf
push
inc
add
or
xchg
mov
clc
daa
inc
fcomps
pop
xchg
adc
test
mov
sub
in
mov
stos
adc
cmp
stos
sub
ds
loop
push
mov
lea
sbb
or
inc
jecxz
cwtl
push
dec
dec
dec
inc
push
sub
fs
fsts
mov
mov
mov
je
std
sbb
sbb
outsl
adc
pop
imul
nop
test
mov
jge
cmpsl
insl
rcll
pop
push
loopne
hlt
add
add
dec
sub
addb
clts
dec
add
dec
imul
jns
jne
pop
mov
xchg
int3
cmp
cmp
loop
stc
jle
mov
adc
or
testb
xchg
imul
jg
cs
aas
pop
and
popf
and
pushf
push
add
icebp
in
add
jb
pop
add
test
mov
sub
movsb
sub
xchg
loope
inc
pop
mov
jmp
call
mov
repnz
in
adc
out
mov
jae
cmp
xchg
iret
or
mov
dec
popa
and
push
out
push
aam
divl
sub
lods
aas
int
sub
xor
mov
sbb
sub
movsl
push
stos
in
les
jb
adc
stc
push
mov
or
fadd
dec
pop
fcmovu
add
xchg
lahf
jmp
jae
and
movb
inc
and
cmp
mov
or
inc
pop
mov
inc
xor
insl
in
dec
inc
cmp
imul
sub
mov
pop
in
cmp
sub
lock
aaa
xor
std
pop
test
jecxz
pop
cmp
sbb
dec
sbb
or
mov
sbb
loop
pop
ja
cs
xchg
fdivs
dec
dec
cmp
out
xchg
inc
mov
xchg
add
rcr
js
ljmp
mov
cmp
or
adc
and
mov
loope
lods
or
xchg
mov
adc
lret
sub
adc
popf
fnstsw
pop
or
xchg
mov
push
stos
pushf
jle
lahf
into
out
push
pop
xor
jmp
ret
sub
mov
sub
jl
add
xor
fisubs
sbb
sti
and
imul
jp
or
inc
and
cmpsb
or
cmpl
rol
lock
call
push
addr16
pop
test
repnz
aam
pop
js
iret
sbb
popa
andl
andl
push
fldt
adcb
faddp
inc
sbb
arpl
fdivp
cltd
adcl
loope
push
mov
dec
pop
ret
mov
xchg
or
fcoml
push
stos
test
movsl
mov
mov
sub
pop
mov
mov
jge
jecxz
shlb
and
sbb
std
pusha
mov
jmp
sbb
mov
lret
aas
mov
dec
sbb
push
sub
mov
adc
lods
lahf
insb
mov
xor
in
push
test
aam
push
push
dec
mov
ret
scas
mov
jp
dec
mov
mov
push
push
sbb
nop
lods
outsb
jns
les
stc
xor
jno
mov
std
inc
gs
or
cltd
push
push
mulb
mov
pushf
pop
mov
ss
fmuls
nop
clc
sbb
sub
cmp
and
push
cmp
shll
call
add
and
pushf
icebp
nop
outsb
in
or
mov
pop
andl
sbb
mov
pop
xchg
jle
icebp
scas
or
pop
and
rorb
cli
fwait
or
xor
pop
xor
sub
push
lret
arpl
pop
pusha
in
fidivl
data16
fildl
popf
pop
mov
push
sub
push
movsl
arpl
and
pop
push
add
lea
sub
sub
loop
pop
fldenv
cmp
mov
adc
lods
or
sbb
pop
and
xchg
xlat
shlb
xchg
mov
ror
test
es
jg
andl
push
mov
mov
mov
mov
daa
add
xor
inc
mov
test
adc
repz
lahf
pusha
test
mov
ja
fidivl
stos
imul
mov
addl
subl
insl
push
sti
lods
sub
lds
cmp
jno
daa
js
mov
cltd
mov
popa
stc
repnz
sbb
lcall
lea
outsl
ljmp
rclb
fistps
push
mov
dec
push
push
mov
pushf
jnp
testb
mov
push
dec
cmp
mov
inc
sbb
push
ss
jns
jecxz
mov
imulb
sbb
ret
xor
cli
jo
loope
test
fisttps
in
filds
cmp
dec
jmp
cld
mov
xchg
jmp
out
sub
shrb
pop
arpl
mov
fsubs
scas
mov
leave
lahf
aad
pop
inc
jb
in
cmpsb
rcr
stc
shl
je
push
lea
sbbb
movsl
outsl
pop
cli
xchg
push
into
les
ljmp
jecxz
sub
push
les
out
inc
dec
mov
jne
xchg
push
pop
mov
stos
add
cmpsb
mov
push
lock
mov
ret
in
xor
mov
lea
in
test
inc
sub
sub
stos
int3
fisubrl
mov
in
add
pushf
in
cmpsl
cmp
repnz
or
mov
mov
inc
or
dec
fnsave
inc
dec
loope
sub
mov
pop
add
lods
mov
xchg
inc
shll
fidivl
mov
mov
xchg
sti
loopne
dec
in
lock
lock
lret
lret
aas
cs
scas
ret
lret
mov
shrb
cs
stos
jge
adc
pushf
sti
cmp
lcall
test
imul
ss
push
test
sar
xlat
pop
movsl
sbb
pop
insb
mov
lea
arpl
sbb
xchg
inc
add
jno
ss
cmp
sub
lods
fsub
add
or
pusha
shlb
xor
ret
addb
lcall
or
test
mov
xchg
movsb
sbb
pop
jno
call
out
jl
daa
adc
mov
jbe
out
pop
data16
mov
inc
pop
jp
mov
pop
add
cltd
fistpll
test
mov
mov
inc
outsl
inc
pop
ljmp
test
dec
xchg
cmp
ds
add
push
jne
and
inc
or
ljmp
fs
xchg
push
xchg
push
mov
iret
ror
loope
xor
sbb
dec
add
out
out
mov
jg
push
mov
clc
imul
fsubs
shlb
inc
testl
test
lods
or
loop
popa
dec
sub
cmp
dec
add
dec
ja
mov
cmc
mov
test
adc
push
sbb
push
adc
pop
insb
sbb
js
pop
dec
aas
int3
sbb
mov
in
hlt
nop
mov
add
xor
cmp
cs
sub
xor
sahf
cli
stos
mov
je
and
sub
loop
adc
fs
jns
pop
test
in
xor
fbstp
andb
push
dec
adc
add
inc
dec
pop
pop
xor
adcl
dec
cmpsb
movsl
inc
pop
jnp
aam
loopne
xchg
jnp
xchg
and
movsb
dec
incl
mov
mov
es
daa
and
popa
xchg
sbb
inc
sub
mov
cmp
dec
push
lar
pop
mov
fistps
add
repnz
outsb
push
pop
mov
or
xor
add
das
push
jl
sbb
mov
jae
add
nop
mov
scas
mov
sub
pushf
decb
es
jnp
fildl
dec
jbe
or
in
pop
call
cli
mov
loope
shrl
add
adc
test
xor
ret
ja
lcall
jne
mov
fstpt
and
sbb
insl
add
insl
push
inc
dec
enter
and
mov
and
jl
pop
repz
pop
out
mov
out
arpl
outsb
sub
jg
inc
pop
mov
xor
pop
icebp
jge
pop
hlt
push
and
xorl
add
enter
inc
mov
dec
clc
lods
pop
clc
pop
mov
sbb
xor
ret
stos
lret
in
dec
sti
inc
test
mov
pop
lahf
xor
sbb
jns
je
xchg
pop
pop
shl
jb
popf
js
xor
in
out
or
and
or
fsubs
jl
imul
and
andb
icebp
jle
data16
push
aad
or
in
xchg
sbb
clc
jp
dec
test
and
movsb
rcll
sub
int3
jbe
out
inc
add
pushf
ret
pop
add
jbe
sub
add
out
sub
scas
test
cld
pop
inc
inc
aas
sarl
lods
repnz
dec
sbb
popf
dec
mov
mov
dec
cmp
jg
jmp
adc
and
ljmp
inc
ja
sub
outsl
push
lret
gs
inc
ljmp
cmp
roll
rclb
or
dec
lahf
jns
cs
arpl
push
aam
push
nop
and
orb
sti
mov
packsswb
test
and
mov
lds
aam
ja
fnstenv
notb
fadds
sti
and
jne
mov
out
sbb
addr16
jns
aaa
repz
clc
icebp
xor
jmp
lea
test
mov
daa
jbe
sub
mov
sub
sbb
test
or
mov
popf
lock
or
jnp
ljmp
sub
je
stos
sub
mov
cmp
push
mov
xchg
mov
mov
adc
pushf
andl
sbb
out
xlat
dec
cltd
cmp
push
dec
loop
xlat
lahf
push
or
dec
cmc
jmp
gs
inc
inc
pop
idivb
das
loop
pop
dec
aaa
sub
test
sbb
fcompl
loope
cs
fsubrl
fisubs
adc
sub
and
mov
notb
mov
add
movsb
sbb
adc
xor
or
out
push
cmpb
aam
pop
xchg
test
mov
inc
add
jne
popa
and
mov
test
add
sbb
lcall
fiaddl
fwait
add
push
sbb
hlt
cmc
outsl
mov
and
push
push
fstp
and
adc
sub
push
js
cmp
mov
les
ret
loop
mov
xor
shlb
les
jmp
ficompl
movzwl
dec
pop
sahf
push
fbld
inc
aaa
jo
lods
aaa
stc
push
notb
out
xor
jmp
fmull
mov
and
add
push
dec
add
xchg
and
roll
sbb
push
ja
sahf
int3
clc
test
inc
sub
fcoms
push
lock
popf
inc
jno
enter
int3
jmp
lea
stc
fidivs
mov
lss
stos
test
inc
pop
pop
pushf
push
shll
in
add
insl
fisubs
divb
jno
int3
fs
in
mov
add
es
pusha
sub
adc
pop
mov
stos
push
int
lahf
push
sbb
rolb
mov
test
das
xchg
xchg
xor
cltd
inc
fdivrs
add
xchg
xchg
cmpb
xor
add
mov
mov
jg,pn
jl
sarl
or
sub
push
rcll
fcoms
and
outsb
data16
mov
loop
stos
mov
push
bndldx
test
or
cwtl
push
arpl
lods
std
test
xchg
add
and
les
mov
aas
pop
int3
into
and
sub
fists
fbstp
jecxz
mov
push
mov
aas
and
or
inc
jle
dec
shl
in
mov
add
outsb
cmp
sti
xchg
cltd
or
dec
pop
add
fldcw
scas
pop
xchg
fsubp
mov
and
sub
jnp
fcomps
xchg
out
subb
add
fs
dec
push
lods
mov
inc
ret
pop
dec
adc
cld
mov
fmuls
xchg
into
xor
pop
mov
cmp
xchg
sti
mov
shl
dec
jns
pop
insb
loope
pop
movb
insb
lea
iret
aas
fimull
insl
and
cmp
out
les
fisubs
push
outsb
jne
and
and
scas
addl
call
pop
sub
das
push
mov
testl
out
fwait
push
xchg
mov
jmp
pop
std
insb
in
cmp
aam
adc
scas
or
lea
sbb
sbb
ret
pop
dec
stos
jbe
sub
fsub
jns
int3
lahf
pop
push
rclb
popa
dec
and
mov
jns
xchg
xchg
mov
xor
jle
imul
sbb
mov
aas
aam
dec
cmpsl
add
add
push
int3
jbe
xlat
sbbb
adc
add
mov
data16
fs
fwait
lds
dec
add
divl
scas
or
or
and
nop
iret
mov
mov
mov
mov
std
ret
xchg
cli
sbb
mov
mov
xchg
xchg
test
sub
lcall
mov
jmp
mov
jecxz
xor
sub
fcmovne
lahf
ret
sbbb
sbbb
cld
in
mov
mov
sbb
jle
fldcw
jle
repnz
aas
stos
sbb
jmp
subb
push
mov
lods
mov
cltd
js
sar
leave
arpl
jb
mov
cwtl
test
add
xchg
callw
sbb
mov
movsl
push
jbe
gs
and
addb
mov
cli
xchg
in
jg
push
or
orb
ss
xor
orl
adc
outsl
repnz
lret
jecxz
mov
rcll
ljmp
jp
outsl
std
mov
dec
inc
and
and
into
pop
adc
outsl
inc
push
jnp
xchg
add
ljmp
mov
dec
aam
ja
insl
jge
fistps
pop
in
jns
out
jmp
addr16
das
add
pusha
movb
bound
outsb
xchg
mov
inc
push
add
jb
ret
out
cmpsl
mov
in
push
mov
cmpsb
pushf
xor
mov
cld
xchg
pushf
ds
in
mov
xchg
mov
fwait
xorb
push
out
push
sbb
pop
push
push
cltd
shll
jo
mov
movsb
mov
loop
arpl
fst
lret
js
mov
andb
or
out
push
pop
dec
mov
notb
lea
ficomps
xchg
out
and
rorl
add
xor
das
and
repz
stos
inc
or
adc
xchg
icebp
inc
mov
fiaddl
test
testl
pop
push
or
mov
arpl
loop
loopne
dec
jb
xlat
loop,pn
adc
push
or
mov
hlt
dec
lcall
cmp
nop
push
jne
loope
stc
adc
in
sub
xlat
xchg
or
sub
jge
in
jmp
pop
mov
mov
sbb
xlat
fstpl
push
jne
sub
push
xchg
mov
xor
mov
cmc
js
jb
xor
test
lret
shrl
xor
fdivrp
jle
dec
adc
pop
out
mov
xor
dec
mov
int
bound
dec
inc
cs
pop
das
dec
add
fisubrs
add
and
dec
or
icebp
sti
in
xor
mov
pop
dec
pop
jge
sub
cmp
xchg
ljmp
sbb
jns
xor
bound
pop
mov
cmpsl
cmp
inc
lcall
fwait
adc
imul
cli
scas
fdivs
push
jbe
rcll
stos
pop
repnz
mov
mov
repnz
mov
icebp
or
lcall
sbb
lret
addr16
push
xchg
aam
jmp
or
mov
or
cmp
clc
pop
in
bnd
into
pop
aam
ficoml
ficoml
aad
dec
add
repz
jbe
mov
cld
xchg
jns
cmp
out
test
cld
aad
test
cmp
and
dec
cltd
fldt
mov
lcall
aaa
pop
add
ret
lock
fildl
dec
sbb
lcall
mov
jmp
xor
mov
xor
adc
xchg
cmp
icebp
xchg
sub
jmp
mov
cs
pushl
shlb
sbb
addl
aaa
dec
mov
add
aas
push
sbb
pop
lcall
add
fidivs
inc
mov
push
jae
xchg
insb
adc
andl
xchg
icebp
insb
test
cmp
mov
dec
jle
push
clc
push
xchg
cmp
push
stc
add
rcrb
das
repz
add
into
dec
ja
pop
push
fs
mov
icebp
pop
fmuls
in
rcrl
cld
jle
outsl
bound
sub
xchg
ret
sub
arpl
xlat
test
cmc
mov
enter
mov
cmpsb
dec
push
jecxz
xor
pop
lods
cmpsl
sbb
and
xor
das
jp
mov
cmp
imulb
pop
jns
adc
mov
jbe
mov
xor
int3
adc
mov
imul
shll
cwtl
inc
xchg
in
cmpsl
inc
xor
cmp
dec
bound
cmpxchg
dec
jbe
subps
cltd
cmc
xor
adcl
cmpsb
hlt
push
sbb
adc
mov
ret
rcrb
mov
test
mov
push
push
sub
adc
or
scas
xor
mov
mov
pop
push
cli
cltd
mov
mov
dec
ja
add
pop
enter
mov
aad
mov
sbb
or
inc
pop
inc
imul
add
mov
and
add
popa
out
shrl
enter
mov
or
jno
cmp
out
insl
mov
and
in
push
pop
imul
pop
loope
sbb
push
lods
ret
lcall
jecxz
inc
jbe
mul
stc
xchg
pop
fnsave
dec
adc
mov
and
sub
jle
ds
add
xchg
jb
pop
xchg
xchg
lret
and
and
test
sub
add
dec
pop
xchg
sub
out
fcmovu
popa
mov
outsl
pop
xor
and
inc
mov
lahf
imul
fcmove
sti
mov
lret
cmc
xchg
ret
xor
push
ret
xchg
inc
aas
sbb
or
outsl
or
mov
in
and
push
mov
push
jne
int3
push
mov
ret
mov
cmpsb
in
mov
lret
mov
scas
lods
outsl
sub
outsl
cmp
out
cs
popw
mov
arpl
adc
or
add
jae
jno
in
clc
incl
mov
xchg
jnp
add
mov
lock
lret
or
loopne
push
das
fs
mov
push
inc
lods
add
aad
stos
insl
jg
mov
hlt
jo
sarl
jle
xor
cmp
jb
push
sub
adc
mov
cmpsb
fildl
imul
lock
sub
ds
out
mov
adcb
cmpsb
cmp
push
xor
pop
movsb
jno
xor
jecxz
xlat
jne
adcl
cli
xchg
in
int3
aas
xor
sub
addb
push
dec
ficoml
push
and
push
into
daa
jno
push
mov
rcl
mov
popa
cs
arpl
jle
jb
stos
xlat
sub
inc
dec
aaa
adc
xor
jns
inc
sti
and
adc
push
addr16
mov
mov
and
xor
les
rcll
sbb
push
roll
mov
or
push
cmp
cmp
mov
adc
and
repnz
ret
pop
adc
push
and
push
ljmp
bound
mov
rclb
jne
in
mov
js
and
icebp
and
sbb
int
jns
xor
mov
in
in
and
sbb
movsb
in
inc
outsl
repz
pop
mov
lret
xorl
fidivrl
std
pop
pop
hlt
dec
sub
jmp
adc
sahf
jae
jb
xchg
or
sub
lods
out
cmp
fisubs
and
fsubl
lock
into
scas
and
pop
xor
mov
out
cld
outsl
dec
daa
add
push
in
icebp
test
mov
aas
fdivrl
int
into
popa
and
mov
pop
std
iret
jo
repnz
loop
add
rorb
stos
mov
inc
call
stos
cmpsl
arpl
lods
inc
nop
cmp
xor
outsl
lret
les
cmpsb
sbb
mov
adc
lahf
jl
pushf
sarb
shlb
adc
mov
sbb
lahf
je
adc
mov
and
cmp
repz
push
mov
jecxz
lahf
int3
fwait
adc
mov
and
stos
sbb
xor
stos
int3
sbb
mov
jmp
lret
push
fldcw
mov
lds
push
adc
add
dec
outsb
stos
mov
and
mov
add
jae
xchg
jmp
mov
push
clc
inc
push
stos
cmp
pop
sub
xchg
pop
jge
clc
rclb
aad
shl
stc
jno
or
sti
mov
cmp
lret
dec
int3
or
les
xor
sbb
sub
divb
jae
cmpb
sbb
mov
mov
rorl
mov
fs
add
andl
in
xor
enter
dec
xchg
push
cwtl
fwait
popf
inc
cmp
mov
cmc
pop
lock
out
les
out
push
cmp
aam
push
dec
push
or
out
fs
dec
jp
nop
iret
arpl
mov
in
inc
insl
loopne
popf
mov
xor
or
pop
pop
sub
int
xchg
jle
mov
shr
push
ret
inc
fxch
pop
data16
mov
frstor
jg
out
nop
cli
fwait
sub
mov
sti
pop
leave
xchg
cmp
leave
mov
lret
pop
mov
lods
std
je
test
cmp
push
sub
xchg
je
pop
push
sbbb
cmpl
xchg
xor
jecxz
loop
dec
jecxz
and
enter
mov
ret
cmp
sarl
mull
sub
pop
pop
xchg
mov
jg
push
jmp
push
mov
jae
movsb
lock
ret
inc
ret
clc
mov
fwait
mov
jmp
jle
xchg
stos
jo
mov
in
xor
mov
test
cltd
arpl
in
hlt
cmc
les
lea
pop
sarb
pusha
xor
out
push
inc
dec
mov
out
idiv
loopne
mov
sbb
test
xor
adc
ds
cmpsl
inc
mov
lret
aam
add
stc
in
pop
inc
out
push
jb
dec
out
or
mov
not
dec
push
push
jo
in
xchg
sub
nop
inc
sbb
mov
jge
mov
in
cmp
dec
cs
inc
shl
cmp
pop
mov
ja
jo
out
scas
mov
xor
push
sub
ret
xchg
jae
push
movsb
adc
mov
add
lods
push
into
sub
mov
sbb
or
add
mov
insb
add
fisubrl
inc
mov
aam
aaa
mov
jno
lret
jmp
icebp
fisubs
or
adc
mov
dec
mov
xorb
push
and
mov
cmp
push
mov
lret
scas
add
mov
add
dec
mov
movsl
mov
xor
je
push
sarl
add
dec
mov
push
icebp
cmp
out
lods
incb
enter
lret
lods
mov
in
push
data16
dec
push
push
add
pusha
das
mov
clc
sahf
pop
test
std
stc
mov
iret
movsl
adc
dec
adc
xchg
lret
dec
mov
cmp
jle
out
jp
movsl
icebp
mov
clc
out
lds
pop
daa
jbe
xchg
jbe
ljmp
push
and
dec
movsb
sub
ja
imul
movsl
ljmp
lds
sub
add
inc
add
sbb
je
leave
scas
jo
add
cmp
jns
imul
mov
dec
test
cmpsl
rcrl
xchg
mov
push
popa
test
fstpl
bound
mov
mov
addl
stos
call
out
or
filds
adc
insb
cmp
and
pop
mov
cwtl
sti
xchg
push
dec
push
sub
mov
and
dec
ljmp
inc
aad
test
lods
jne,pn
jnp
sarb
and
mov
xor
outsb
pop
pushf
sbb
push
inc
dec
sbb
insl
jge
negl
sub
jp
mov
jb
cmp
rorl
and
mov
adc
or
xchg
jne
dec
or
or
negb
stos
push
sbb
inc
stc
sbb
lfs
and
xor
fiadds
fcoml
ret
sbb
or
movsb
ss
or
inc
mov
jb
pop
push
insl
faddp
mov
repz
cmp
push
add
call
xlat
into
leave
cmc
pop
data16
push
or
lahf
addr16
push
and
xchg
push
lods
popaw
sub
mov
repz
in
daa
mov
xlat
push
aad
out
or
pop
xchg
pop
jnp
mov
jnp
cmp
and
inc
cli
dec
xor
xor
sub
imul
test
adc
sub
rcrb
inc
das
pop
adc
subl
fwait
cs
push
mov
adc
jno
lds
scas
sub
or
bound
in
notb
jecxz
xchg
add
pop
inc
dec
jno
pop
pop
call
pop
shlb
mov
into
leave
jnp
push
imul
lods
pop
push
push
icebp
cli
xchg
sbb
les
inc
aam
add
or
sub
inc
jp
movl
xor
in
push
imul
mov
sbb
push
mov
jg
lret
xchg
mov
stos
dec
fnstcw
jg
lret
xchg
mov
pop
aad
xor
fsin
or
xor
xchg
pop
or
cmp
lcall
push
add
leave
cmp
jne
xchg
add
cmc
ss
pop
ljmp
pop
add
in
mov
in
movsb
xchg
fwait
pop
shrb
push
push
or
cli
jecxz
inc
mov
xor
cwtl
cmpsl
in
xor
pop
popa
movsb
mov
aad
mull
or
in
mov
std
loope
xor
jb
andb
jnp
jne
popa
outsb
cmp
fdivrl
orb
fiadds
nop
fisttpll
and
pop
ljmp
mov
call
leave
jno
sub
lcall
jge
xor
cmp
or
jg
dec
shrl
test
and
push
cli
stos
mov
lahf
pop
in
mov
subl
sti
pop
mov
dec
jno
adc
in
sbb
add
cmc
push
cli
gs
push
enter
insb
cltd
in
arpl
pop
mov
test
sub
mov
subl
lret
outsb
pushf
imulb
pop
call
push
daa
push
inc
in
inc
inc
bound
fsubl
mov
dec
xor
ret
in
or
add
cmp
mov
adc
repnz
push
test
mov
dec
push
out
vmwrite
mov
pop
jne
jecxz
cwtl
xor
add
imul
xchg
mov
cmp
adc
test
adc
mov
inc
push
into
sbb
push
ficompl
pop
test
or
icebp
dec
imulb
scas
push
pop
out
cmp
xor
mov
push
dec
pop
cmpsb
cmp
mov
sarb
testl
ss
rol
add
in
fidivs
add
cmpsb
rcll
add
mov
or
call
inc
adc
je
push
inc
inc
shlb
jo
dec
insb
pushl
xor
adc
je
push
pop
aam
jmp
test
inc
movsb
lds
movsl
mov
jmp
rcrb
dec
adc
push
mov
or
and
aas
inc
shrl
pop
adc
mov
add
sub
aam
push
inc
outsl
lcall
mov
sub
mov
add
cwtl
mov
jns
fdiv
cmc
pop
cmp
sub
loope
xor
sub
dec
mov
add
inc
and
push
imul
test
or
aam
test
add
or
lea
sarl
std
test
jno
insl
in
lds
ljmp
decb
adc
pcmpeqw
or
fwait
in
mov
in
jmp
pushf
stos
loope
sub
mov
push
jg
lods
ret
adcl
and
dec
push
mov
pop
outsb
fwait
pop
testl
ja
xchg
adc
pop
mov
adc
adc
imul
int3
pop
dec
lods
add
pusha
xchg
push
push
fidivs
or
mov
outsl
ret
loop
xor
clc
cmp
mov
sub
mov
mov
imul
dec
dec
mov
sahf
and
flds
push
pop
icebp
das
fnstsw
in
or
in
outsl
mov
out
int3
outsl
iret
and
orps
loop
je
push
add
std
xor
fldt
fisubs
mov
pop
mov
jbe
scas
cmp
imul
push
in
int3
ficoms
repz
and
sarl
scas
fbstp
jae
xchg
repz
cld
cmp
mov
push
not
mov
retw
push
rclb
xchg
popa
out
adc
xchg
sarl
xor
cmc
mov
mov
imul
mov
faddp
cmpsb
clc
push
add
ds
vpsrlw
or
leave
adc
les
rcr
or
and
xlat
sbb
mov
add
and
inc
aad
dec
jo
daa
cmp
dec
jmp
scas
xor
out
cmpsl
in
xchg
mov
popa
mov
or
add
ds
call
xor
mov
imul
mov
push
push
lock
jl
jb
xor
mov
xlat
ret
fnstsw
aam
fdivl
loop
test
daa
xchg
and
sub
add
inc
into
mov
and
popa
je
repnz
mov
dec
pusha
mov
movsb
movsb
sbb
in
or
push
xchg
pop
test
call
xchg
addr16
insl
add
subb
lahf
out
mov
add
xchg
lret
xor
cld
repnz
pop
dec
ret
pop
popa
lock
out
fwait
rcl
dec
cmpl
daa
sub
pop
sub
jae
orb
mov
je
out
mov
popa
mov
jecxz
in
cs
lahf
sub
and
scas
pop
into
sub
lret
sahf
outsl
jecxz
push
sbb
xor
lock
fcmovbe
out
lods
inc
mov
scas
pop
or
cwtl
test
lock
call
fwait
pop
adc
dec
jbe
and
bound
push
lods
xchg
xchg
pusha
adcb
les
push
sub
fstl
leave
fwait
sub
test
inc
dec
push
mov
imul
sub
pop
ds
iret
xlat
rclb
or
aad
pop
pusha
mov
iret
test
rorl
ror
pop
jecxz
movsb
popf
test
sbb
jge
add
jmp
iret
imul
lret
loopne
aas
push
rclb
jbe
jge
pop
addl
xlat
inc
push
cmc
leave
add
lret
mov
nop
mov
mov
sub
lcall
sub
sbb
sbb
orb
mov
aaa
add
push
ret
icebp
imul
shlb
imul
dec
jae
jbe
adc
add
stc
or
shrb
pop
inc
aam
lcall
addr16
jne
vpslld
iret
lds
cmp
sub
inc
inc
xchg
jo
lock
adc
inc
enter
inc
lds
or
pop
lods
fdivrp
jle
xlat
cmp
inc
mov
fsubl
jp
je
inc
mov
xchg
rorl
daa
out
xchg
push
insb
cmp
bound
lret
out
lea
fldenv
add
sub
adc
add
aas
aas
sbbb
and
ret
or
popa
addr16
inc
cmp
jg
add
shlb
dec
ret
dec
icebp
cmp
sahf
pop
cwtl
call
adc
clc
das
rclb
push
js
cmp
sub
dec
ret
xchg
mov
xlat
push
testl
mov
pop
scas
bound
icebp
subl
inc
out
push
outsb
repz
nop
cltd
cmpsl
jbe
push
jo
xchg
popf
test
fadds
pop
cmp
adc
shll
jp
add
dec
push
jecxz
lods
lea
les
add
cmp
jp
jmp
in
sbb
cmp
inc
out
hlt
lock
mov
xchg
stc
sti
rclb
in
pop
into
lds
loope
mov
sbb
xchg
xchg
movsb
je
xchg
std
addr16
xchg
mulb
aaa
jmp
mov
push
pop
into
push
sarl
mov
insb
sub
fdiv
jns
jecxz
inc
test
cld
int3
push
push
test
stos
sub
xor
cld
inc
fwait
mov
jbe
mull
xchg
jnp
std
adc
lahf
lahf
cli
andb
fsub
subb
fnstenv
sbb
cmp
dec
sahf
lahf
lret
fs
pop
cli
leave
sbb
sahf
in
push
lods
nop
cmp
popa
jb
std
cs
pushf
push
mov
inc
adc
bound
mov
pop
dec
push
xor
xchg
sahf
fbstp
ss
iret
or
jns
cmp
jb
jne
lds
repz
xchg
push
pop
mov
lret
aam
mov
outsl
rorl
mov
inc
xor
mov
sub
cmp
repz
leave
add
ss
pop
nop
jnp
das
cs
loop
fmuls
outsl
pusha
imul
scas
push
scas
mov
adc
daa
lret
add
fmull
sbb
fstps
loop
inc
jns
test
ret
and
ret
loopne
mov
sub
jge
shr
lret
addr16
jne
xlat
and
popf
fildll
sti
cmc
aas
and
mov
jo
cmp
cmp
cmp
sbb
pop
mov
sub
dec
adc
pop
jbe
int
stc
sbb
ss
in
sbb
int3
add
or
pop
lea
jbe
clc
and
sbb
jbe
jae,pn
sub
mov
xor
pop
push
or
mov
loopne
pusha
clc
cmc
jbe
xlat
mov
lods
inc
pop
mov
lret
pop
lods
jecxz
jecxz
pop
mov
fcoml
stos
xchg
scas
loope
sbb
popl
mov
dec
inc
not
mov
int3
gs
or
xor
inc
push
jl
and
mov
stos
add
andb
sub
or
xchg
fwait
movsb
stos
push
dec
add
fdivrp
and
jnp
xchg
adc
pop
xor
xor
ret
and
mov
and
mov
lods
or
in
push
mov
sbb
push
jne
inc
cmc
jnp
out
xor
push
lcall
popa
add
push
fnstcw
or
out
push
leave
imul
call
push
dec
in
or
jne
fldenv
jae
mov
or
jo
mov
mov
push
xorl
push
and
mov
inc
jno
pushf
add
inc
xchg
mov
ret
push
add
sbb
adc
add
int
xchg
inc
idiv
call
push
test
adc
dec
jae
enter
test
and
inc
test
inc
push
push
shr
ss
sub
push
adc
xchg
sbb
loope
in
ja
push
pop
js
mov
inc
imul
xchg
cli
xor
mov
jle
mov
or
pop
pusha
shll
loopne
aaa
jns
and
aas
mov
cmp
inc
loope
or
push
data16
xor
adc
cmp
rcrl
pushf
and
int
xchg
into
mov
int3
scas
push
lahf
in
pop
push
fstpt
dec
pop
inc
adc
xchg
xchg
js
ljmp
loop
mov
movsl
cmc
call
stos
mov
lcall
pop
cli
test
pop
pop
andl
ret
nop
les
inc
outsl
adc
jo
sti
xbegin
jo
cmp
fimull
outsl
sub
cltd
sar
inc
loopne
sti
pushf
adc
mov
xchg
sbb
stc
bound
popa
or
inc
jmp
dec
jp
mov
xchg
sbb
sbb
xor
push
lahf
or
inc
sub
ljmp
mov
outsl
lcall
dec
push
sub
in
testl
adc
adc
subl
mov
pop
pop
inc
and
or
pop
pmaxsw
mov
jbe
addr16
sahf
vmwrite
insb
inc
mov
test
std
mov
cld
add
sub
mov
test
popf
xchg
xor
cmp
jecxz
xor
bound
call
negl
arpl
sub
fadds
pop
sbb
shl
cmpsl
js
pop
inc
jle
inc
stc
shll
inc
sbb
xor
movsl
ret
pop
xor
fists
push
jl
cmp
cs
mov
aaa
or
jle
mov
js
xchg
pop
repnz
dec
and
sahf
stos
lahf
sbb
in
and
pop
or
nop
stc
inc
sarb
jp
out
ljmp
mov
mov
sub
add
les
mov
shlb
fdivrl
mov
rclb
clc
daa
dec
ja
bound
repnz
loope
pop
xchg
jmp
mov
loope
adc
cmp
or
xchg
push
ljmp
test
mov
andl
pop
inc
cld
test
fimuls
mov
stos
mov
mov
xchg
daa
jo
xchg
push
pop
mov
faddl
or
push
pop
sbb
dec
sbb
adcl
je
idivl
inc
repnz
out
inc
fs
loopne
test
add
mov
lret
mov
cmp
jge
test
mov
sbb
sarl
cmp
cmp
jmp
sarb
pop
fimull
out
out
and
push
sub
movsl
pop
cmpsl
push
imul
ror
cld
aaa
add
js
test
insl
xchg
jg
call
insb
adc
inc
dec
or
dec
inc
ljmp
lds
mov
push
mov
pop
and
mov
or
and
int3
popa
fsubrp
int3
jmp
mov
shll
mov
or
in
std
push
jns
inc
popf
sub
daa
insl
les
xor
jle
fcmovnbe
inc
adc
fiadds
pop
push
xchg
cmp
mov
xchg
nop
inc
jae
ja
sarl
in
push
mov
popf
iret
imull
or
jne
std
or
jp
dec
sub
xchg
mov
mov
imul
xchg
in
jns
pop
shrl
push
repz
pop
pusha
jae
js
xchg
dec
add
loopne
outsb
mov
mov
das
lock
xchg
xchg
mov
rcrl
data16
push
out
les
inc
mov
popf
mov
sti
push
add
ret
out
cmp
add
mov
jno
add
aaa
jle
xchg
icebp
xchg
push
test
mov
or
add
pop
jnp
loop
pop
test
movl
icebp
cmp
cmp
outsl
mov
push
pushf
ja
inc
es
mov
and
movsb
ljmp
lds
mov
inc
shrb
add
subl
cmp
xchg
adc
pop
daa
fimuls
mov
add
outsb
pop
and
decb
sbb
in
mov
nop
nop
xchg
and
sub
mov
ror
aam
or
pop
repz
adc
stc
ljmp
popf
aaa
movsl
inc
stos
repz
or
and
lret
and
or
int
daa
fsub
jge
inc
stos
testl
repnz
test
out
pop
xor
mov
push
ret
es
dec
andb
lods
mov
pop
ss
testb
rcl
les
lcall
mov
xchg
xchg
je
test
cld
imul
roll
xchg
mov
dec
ljmp
vpor
sti
mov
mov
pop
adc
cmp
dec
cld
xlat
subl
pop
pushf
push
cmpsb
movsb
gs
push
sub
and
rorb
jbe
mov
popf
repz
xor
inc
les
imul
ficoml
out
hlt
pop
fsubl
rcrl
sahf
rol
mov
mov
push
insl
jecxz
sbb
jmp
mov
mov
or
divb
rcrl
pop
sbb
adc
loope
stc
xor
xor
xor
popa
jge
mov
jge
mov
lods
mov
dec
push
inc
fwait
xor
mov
fadd
push
jle
xchg
mov
or
outsb
or
jl
and
cmp
pop
lahf
cld
push
push
lret
dec
jmp
lret
roll
out
test
ret
or
test
movsl
sbb
mov
cmpsb
xchg
jle
jecxz
pop
jo
and
cmc
nop
or
or
dec
xchg
jae
jl
popf
add
andb
mov
add
loope
fbld
cltd
dec
mov
push
sbb
xlat
xlat
push
sbb
xor
add
xchg
sbb
add
nop
xor
pop
rcll
and
sbb
out
out
js
cltd
sub
jnp
cmpsb
pop
xor
jne
cs
mov
and
jg
fisttps
outsb
gs
pop
and
js
lret
lds
popf
hlt
int
jo
push
push
test
cmpsb
ficomps
loope
mov
cwtl
nop
out
inc
into
push
sbbl
sub
popf
ljmp
or
pop
xchg
aam
pusha
shl
push
add
and
js
inc
into
dec
cmc
cltd
mov
xor
pop
xor
popa
out
fst
jmp
insb
xor
fwait
sbbb
cmc
push
push
imull
into
mov
fwait
mov
sub
adc
gs
cmp
push
das
xor
jg
jmp
push
adc
roll
cmp
in
push
mov
in
int3
sub
insb
or
sbb
jle
int3
or
lahf
jmp
and
push
cli
push
test
mov
sub
loopne
push
pop
fwait
neg
data16
mov
xor
aad
dec
shl
xchg
clc
pop
dec
ret
or
mov
push
mov
add
or
xor
adc
inc
jecxz
cld
pushf
aad
xchg
es
pop
pushf
lcall
and
xchg
bound
mov
sbb
pop
popa
call
xchg
test
popa
sahf
test
rcrb
push
xorb
adc
jp
adc
pop
pop
lahf
jnp
mov
inc
jle
jmp
mov
testb
or
or
dec
insl
movsl
std
lret
xchg
loopne
incb
xchg
btr
mov
pusha
mov
ss
jbe
jge
mov
sub
repz
in
mov
dec
inc
iret
xor
insb
jae
jb
jg
mov
xchg
sub
mov
imul
xor
xchg
mov
inc
mov
inc
push
jp
inc
jmp
mov
jecxz
lods
push
repnz
test
mov
and
dec
mov
out
xor
add
sbb
cli
mov
xlat
inc
adc
out
dec
movsl
inc
lea
icebp
data16
jl
mov
xchg
icebp
stos
rorb
lods
ljmp
pusha
sbb
in
sub
mov
fisubrl
gs
lock
daa
xchg
into
xchg
je
push
push
xor
outsb
xchg
add
sbb
iret
nop
clc
faddl
xor
lcall
mov
insb
adc
loopne
outsl
fpatan
in
dec
jne
bound
shlb
add
adc
cmp
in
sbb
cmp
shll
mov
js
addr16
sbb
cmp
and
inc
jle
loope
fimuls
pop
jmp
pop
scas
cwtl
popa
dec
sub
dec
lods
and
adc
lock
cmp
sub
roll
pop
or
dec
repnz
int3
push
xor
add
es
dec
js
pop
into
pop
dec
es
js
ret
outsl
ljmp
xchg
pop
lret
popf
push
xor
pop
mov
or
ret
mov
sbb
jecxz
cmp
stos
mov
scas
repnz
orb
or
aad
ds
xor
shr
xchg
jne
mov
mov
push
jl
mov
push
jnp
daa
mov
jp
test
push
push
shl
cmp
mov
or
push
scas
mov
aam
and
stos
stos
jmp
dec
fs
xchg
mov
jne
xor
scas
xchg
cmc
fistl
addr16
inc
mov
in
dec
aam
adc
xchg
mov
xor
xchg
push
nop
lcall
outsb
cmpsb
jmp
xchg
inc
in
imul
add
sahf
mov
jo
cld
je
xor
or
cmp
or
add
out
sub
outsl
hlt
mov
push
nop
je
cmp
push
es
nop
hlt
dec
out
jno
leave
into
inc
sbb
xchg
lret
mov
fucomi
rolb
mov
sub
ja
pushf
xchg
sbb
mov
lret
out
xlat
nop
sub
or
jle
xor
jns
pop
stos
js
pop
mov
and
fcom
imul
cmp
rcrl
mov
lea
add
jle
jb
or
addb
cld
cld
fadds
pop
shlb
push
pop
xor
mov
push
fbstp
dec
pop
mov
push
mov
cs
sub
pushf
and
sub
aaa
jo
xchg
addb
lods
pop
cwtl
es
in
nop
xchg
in
out
out
add
mov
rcrl
add
mov
popf
insb
call
pop
fimuls
push
aam
lds
mov
adc
sbb
fsubrs
es
lods
lods
cmpsl
rcrl
pop
adc
insl
xor
xor
adc
mov
js
sbb
sbb
add
xor
jae
dec
in
ret
adc
dec
clc
jge
lods
cwtl
andl
mov
add
or
jo
icebp
sahf
xor
mov
lahf
test
and
mov
std
repz
sbb
mov
fs
frstor
stc
xor
dec
int3
aas
add
arpl
mov
bound
push
cmp
gs
push
push
jl
pushf
mov
scas
cli
out
or
andb
mov
sub
mov
push
push
or
add
pop
rcrl
xchg
and
lret
imul
mov
or
sub
sbb
pusha
dec
test
sub
xchg
leave
add
rolb
lds
jns
cmp
rclb
in
adc
in
loope
lock
dec
or
jbe
or
ss
or
jno
dec
jne
ret
mov
hlt
and
xchg
dec
jp
lods
imul
lahf
jnp
arpl
adc
inc
movsl
lahf
push
cmpsl
in
sbbb
pop
cs
sub
sub
push
orb
mov
xor
inc
mov
push
sbb
in
sbb
test
test
ret
js
lcall
and
xor
add
mov
fimull
cmc
push
push
stos
sbb
lods
sbb
lds
lret
pop
mov
std
repnz
inc
jmp
sbb
lods
stc
lods
js
cmp
je
iret
stos
dec
push
dec
xchg
add
cmp
ret
mov
pop
and
push
xchg
imul
testl
inc
cmc
cmp
stos
loopne
outsb
sub
loop
das
jl
gs
pushl
repnz
sbb
leave
mov
jae
sub
mul
rol
hlt
sub
fildl
cltd
shll
fwait
adc
pop
test
ljmp
in
cld
outsb
orb
les
xchg
push
test
and
add
push
jmp
ret
dec
adc
arpl
sti
cmpsb
push
imul
call
pop
roll
aad
jns
sbb
fsts
sub
sub
shlb
mov
push
jo
add
imul
nop
into
js
mov
lcall
das
inc
pop
scas
ds
push
fmuls
testb
mov
mov
push
adc
inc
xlat
xchg
pop
dec
sbb
mov
test
sbb
adc
outsb
and
fldcw
loopne
pop
stos
or
fbstp
lea
push
jb
repz
test
push
adc
fdivrl
fstpl
and
sub
push
cltd
ds
stc
cli
imul
xor
loop
inc
lret
jle
cmpsb
or
pop
ret
icebp
lods
cltd
jp,pt
shr
jp
mov
jge
mov
sbb
push
hlt
dec
cld
xchg
jne
mov
or
jmp
or
push
mov
clc
cwtl
sbb
xor
stc
xchg
push
sub
arpl
inc
sub
cmp
fistl
imul
dec
cld
daa
mov
sbbb
push
sub
notb
cmp
divl
out
jmp
ffree
mov
sub
mov
or
mov
fldenv
push
aam
sahf
rclb
mov
push
or
leave
orl
ret
mov
aas
dec
add
or
repz
sub
lcall
cmc
bound
adc
push
xor
xchg
arpl
add
add
mov
cwtl
in
mov
add
mov
and
dec
rclb
cmp
shld
dec
clc
adc
sbb
aad
push
and
shlb
cmp
push
adc
pop
xor
xor
add
sbb
scas
xor
push
push
and
push
add
ja
ret
and
jl
inc
mov
mov
xor
jge
sbb
dec
pop
sbb
xchg
mov
scas
pop
push
movsb
cmpsb
mov
movl
subl
cmpsb
xor
mov
add
jno
xchg
push
mov
dec
mov
outsl
ret
pushf
cmpsl
xchg
or
ret
out
andb
jmp
stc
and
mov
mov
cmp
or
pusha
movb
mov
leave
xor
imul
jp
lods
and
mov
push
mov
jo
dec
and
rcrb
hlt
sahf
add
xchg
rolb
jmp
lds
and
repnz
sub
rcll
add
adc
jmp
dec
mov
jae
or
inc
or
scas
sbb
or
fiaddl
sub
pop
mov
push
push
xchg
dec
add
aam
es
pop
ret
pop
mov
incl
stos
in
pop
push
imul
iret
dec
mov
push
dec
dec
adc
lock
out
int3
inc
jmp
pop
sbb
push
lods
mov
addl
out
and
adc
mov
das
in
lds
push
bound
mov
mov
jle
pop
mov
push
test
lret
popl
jo
push
incb
fistl
stos
hlt
jns
xchg
movb
scas
adc
jnp
mov
jb
in
dec
stc
sarb
adc
push
cmp
fidivl
sub
mov
jge
int3
ds
push
jg
cs
sub
pusha
mov
inc
sbb
jne
je
loope
cmp
xor
mov
adc
sbb
inc
inc
lret
or
sbb
mov
pop
mov
dec
pop
ja
push
mov
shlb
jle
in
fisttps
loope
out
cmc
sarb
scas
aad
clc
mov
xor
out
and
arpl
cmpsb
fdivrl
mov
sbb
jns
fdivrl
jne
scas
mov
xlat
pop
dec
and
sti
pop
aad
sbb
mov
xor
enter
jmp
out
cmpsb
fidivrs
jp
scas
or
mov
je
push
adc
push
mov
pop
xchg
shll
dec
int
lret
inc
xor
pop
cli
scas
fidivs
jne
jnp
adc
test
push
pop
adc
mov
loopne
add
int3
pop
xchg
outsb
push
data16
sbb
sahf
in
in
loopne
push
push
ret
inc
mulps
mov
pusha
popa
mov
mov
adc
sbb
fcmovbe
inc
adc
jns
jnp
xlat
and
sub
jb
addr16
aad
adc
loopne
repnz
shr
dec
call
xchg
loope
adc
jl
outsl
or
sarb
mov
fxch
out
push
rolb
adc
leave
test
mov
imul
pop
data16
jmp
es
rcrb
jns
int
or
sti
lcall
repnz
sbb
js
popf
addl
pusha
lret
es
inc
pop
fistl
jecxz
xchg
and
out
popl
inc
jl
mov
je
sahf
es
jl
jp
and
push
push
add
in
and
pop
lods
xchg
or
loopne
cmp
mov
fdivl
push
test
roll
xchg
or
out
cmp
sub
mov
in
inc
loop
mov
xchg
arpl
lods
dec
in
repz
push
jnp
xchg
stos
sub
jmp
mov
add
lods
sub
xchg
adc
sbb
rcll
cld
cmc
xchg
pop
aas
mov
push
add
push
in
pop
repz
xor
inc
jle
lods
cmp
xchg
xchg
lods
add
insl
imul
aas
inc
arpl
push
test
fildll
aam
cmp
clc
add
in
pop
sbb
xchg
notb
dec
jle
pop
enter
mov
adc
test
das
dec
inc
int
jae
mov
mov
sbb
fwait
pop
cmc
in
mov
xchg
dec
idivb
or
nop
xor
push
and
movsb
imul
push
test
ret
push
dec
adc
cmp
push
or
pop
aad
inc
vorps
out
fucomp
and
pop
mov
pop
mov
ret
ret
xchg
jp
rorl
cmp
jge
adc
ljmp
dec
aaa
sub
lcall
mov
mov
dec
jo
movsl
or
movsb
test
cmp
jnp
jnp
jge
push
push
roll
dec
cli
pop
mov
mov
pop
popf
push
adc
out
or
mov
xchg
fiaddl
std
test
outsl
dec
aam
je
pop
sub
or
fldt
and
cmpsl
fldl2t
mov
fdivl
push
in
lea
fisubl
cmc
sub
adc
sub
test
sbb
cmpsb
mov
dec
sub
or
out
movsl
jl
add
xor
pop
adc
cmp
bnd
adc
pop
xchg
push
dec
lcall
js
addl
sbb
movsb
sar
mov
fdivrl
lock
fisttps
fbstp
ljmp
mov
dec
and
mov
mov
cltd
int
add
mov
ret
adc
pop
add
xlat
fcmovu
sti
sbb
and
ja
jno
cmp
scas
or
jo
xchg
adc
jmp
ficompl
insb
inc
icebp
and
push
insb
inc
into
dec
pop
cmpl
out
sbb
sahf
aas
divps
testl
enter
or
pop
gs
ds
push
cmpsb
and
cmp
jmp
rcr
aam
cmp
dec
lds
fdivl
pop
push
mov
fcompl
test
cmc
pop
movsb
sbb
ljmp
dec
cmpsl
cltd
cmp
push
or
inc
arpl
fstpt
pop
cmpb
add
mov
std
sub
mov
xchg
and
add
mov
movsl
push
mov
mov
popf
cmc
mov
mov
int
dec
mov
cmp
inc
hlt
jmp
pop
jg
das
xchg
orw
xchg
push
test
inc
inc
ds
loopne
cmp
pop
xchg
fcmovnb
xor
mov
aam
xor
lret
out
mov
xchg
or
call
mov
xchg
fiadds
je
leave
sub
ljmp
into
mov
adc
stos
dec
movsl
cmp
cmp
out
jns
movsb
std
push
mov
lcall
mov
xchg
sbb
xor
fisubrl
cmp
pop
push
mov
or
adc
or
sbb
ljmp
jp
pop
in
scas
xchg
pop
sbb
shlb
mov
sub
or
outsl
add
int
add
insb
or
das
push
xchg
das
and
in
cwtl
mov
not
push
mov
imul
mov
sub
dec
jg
fyl2x
leave
and
popf
xchg
lds
mov
lahf
lret
in
adc
xor
adc
popf
sub
push
shl
push
and
or
mov
je
jb
push
cltd
repz
inc
jmp
mov
test
imul
test
xor
std
outsb
aad
repz
mov
cs
pop
mov
fsubrl
or
in
hlt
mov
inc
cmp
sbb
test
inc
dec
insb
xchg
int
lret
js
out
rorl
out
mov
cmp
cli
cmp
mov
andb
mov
pop
add
imul
outsb
icebp
shll
imul
jl
xchg
or
sub
add
into
and
mov
imul
cmp
loopne
icebp
clc
mov
mov
imul
sub
pop
test
pop
cwtl
ss
xor
dec
mov
loope
ret
cmpsb
insb
and
lock
rcll
pop
sahf
data16
xchg
out
mov
mov
inc
mov
jb
cmpsb
sbbl
out
mov
jmp
fwait
mov
push
notb
movaps
sub
push
ret
mov
inc
dec
mov
mov
push
inc
dec
push
fcoml
lcall
stos
test
addl
add
aas
or
xchg
xchg
and
test
pusha
cmc
sbb
call
icebp
inc
lahf
cwtl
sub
clc
lahf
mov
cli
xor
push
mov
out
fsubrs
scas
xchg
pop
daa
cld
cmp
push
leave
push
jo
mov
adc
or
rcl
ljmp
hlt
clc
and
jb
loop
xchg
fistl
mov
rcrl
inc
test
ljmp
dec
les
xchg
loop
push
push
and
ds
push
adc
jl
dec
inc
popa
or
jmp
mull
addl
xor
in
ja
vunpcklpd
es
cli
out
or
dec
sti
test
test
mov
daa
xchg
and
sbb
xchg
jae
ljmp
cmp
or
dec
int
lods
es
xor
jge
or
in
inc
mov
mov
push
sbb
mov
in
push
in
or
xor
call
dec
fwait
xor
ja
dec
js
dec
dec
loope
fnstenv
sbb
imull
icebp
mov
xor
cmpsl
dec
xchg
jo
and
inc
inc
adc
rcl
mov
lods
push
dec
sbb
mov
pop
dec
mov
or
push
add
xchg
mov
daa
aas
add
aam
mov
mov
mov
aad
adc
jns
add
cmp
cmp
mov
data16
mov
jns
sub
adc
adc
arpl
sub
mov
mov
sahf
repnz
inc
cmpsb
and
or
mov
sub
cmpsl
xor
rorb
sbb
pop
aad
adc
cmp
adc
call
ljmp
dec
xchg
push
mov
repz
cs
and
lret
or
fcomi
daa
sub
and
cmpsl
jbe
jns
jmp
mov
xor
pop
xor
sbb
sub
inc
cwtl
sahf
xchg
and
sbb
sub
mov
test
int
insb
add
les
bound
xchg
lcall
ret
inc
mov
or
push
adc
roll
xor
pusha
cmp
in
and
cltd
out
popa
pop
sub
stc
adc
adc
std
lock
mov
imul
inc
pop
leave
jge
test
outsl
loopne
movsl
xor
sbb
dec
lea
mov
mov
inc
pop
mov
and
sbb
addl
inc
lods
hlt
mov
inc
rcrl
pushl
inc
mov
mov
add
insb
xchg
jge
outsl
mov
dec
call
stos
sub
or
mov
andl
mov
jl
xor
add
lret
stos
dec
loope
into
sub
mov
mov
push
imul
push
in
lods
pop
sbb
xchg
and
popa
push
vpmuludq
xor
push
cli
xchg
stos
jb
pop
fldt
sarl
cli
jge
and
loop
or
in
and
jge
inc
andb
sbb
insl
ret
pop
aaa
arpl
aas
insb
lods
jno
push
ss
adc
jp
dec
orl
scas
int
shr
mov
pop
lcall
insl
sub
cmp
push
jae
sbb
and
lret
xchg
and
loopne
jl
xchg
push
pop
aas
inc
jle
mov
push
sti
xor
inc
das
jge
xor
pop
adc
lods
and
sbb
negb
mov
cltd
pop
pop
dec
scas
scas
scas
xor
loop
iret
jae
clc
stos
inc
dec
test
cwtl
inc
push
mov
mov
aas
mov
and
mov
xchg
mov
xchg
pushf
addr16
adc
movsb
dec
jl
add
push
outsl
sbb
call
pop
xor
mov
xchg
ljmp
mov
aam
xor
dec
push
push
imul
aas
pop
push
add
sbb
sbb
push
cmc
fnstcw
xor
dec
fidivrs
pusha
insb
dec
ret
push
push
push
pop
xchg
pop
mov
call
xor
repnz
adc
cmpb
jae
jp
lret
pop
cli
arpl
xchg
mov
cmp
jno
test
lods
mov
movsb
adc
sub
ja
lea
out
cli
inc
imul
shrb
lahf
outsl
push
pmullw
sbb
stc
push
mov
jmp
sahf
xlat
lret
or
xor
add
rcrb
clc
jg
jle
test
pop
sbb
incl
imul
or
in
xor
lahf
in
sbb
js
jae
cmp
xor
mov
jns
mov
and
jb
and
fdiv
mov
mov
xchg
and
subb
xor
or
pop
popf
sbb
nop
push
and
leave
push
fdivs
popf
das
popa
enter
inc
pop
mov
or
push
inc
leave
cmpsb
sbb
xor
fisubl
jmp
xchg
and
scas
jae
cmp
xchg
mov
and
push
sub
test
fcmovnbe
xor
xchg
dec
sahf
test
push
mov
insl
xor
sbb
imul
jno
popa
repz
pop
pop
repnz
mov
dec
lcall
outsb
xor
mov
leave
inc
push
add
insb
xchg
jns
arpl
sti
outsl
test
dec
or
jecxz
inc
loope
bnd
push
in
ja
shlb
xlat
mov
add
cmp
sub
cmp
les
int3
mov
cmp
mov
int3
or
clc
out
push
repz
add
addr16
mov
fidivs
pop
fnstcw
pop
dec
push
sbbl
les
mov
dec
mov
scas
add
mov
push
loop
and
scas
sbb
pop
ds
cli
add
xlat
pop
add
jb
insl
add
mov
ret
push
repz
push
icebp
push
adc
xchg
xor
or
das
and
push
inc
sub
ret
sbb
rclb
pusha
out
outsl
or
xchg
ds
stc
sbb
hlt
sub
repnz
out
cld
insl
xor
std
int3
push
inc
mov
cmp
add
sbb
adc
or
in
jl
scas
aaa
pop
mov
xor
shlb
pop
or
sbb
movsl
and
shrl
test
cmp
lret
aam
aad
xchg
sbb
rcll
jecxz
inc
adc
les
sbb
add
mov
jmp
push
lahf
pop
xchg
cmp
jns
sub
push
mov
jecxz
lea
mov
dec
sbb
aad
xchg
fistl
fmulp
dec
inc
mov
lcall
cmp
pop
xor
repnz
cwtl
shr
mov
ss
sbb
imul
lahf
jle
jns
les
fidivrl
aad
std
inc
test
sbb
aas
out
std
push
push
movsb
fisubrl
mov
and
gs
mov
pop
jne
arpl
adc
in
out
mov
mov
scas
repnz
inc
bound
out
sbb
cmp
add
arpl
push
push
adc
jno
mov
call
dec
or
fistps
jnp
fucomp
inc
je
push
or
cltd
sbb
adc
bound
test
mov
add
rcll
stc
ss
andl
cmc
cmpsb
cmpsb
cs
add
out
or
rdpmc
jb
fldcw
cmpsb
sbb
stos
jmp
fcmovu
fs
and
outsb
push
pop
jmp
jge
dec
icebp
int3
xor
sbb
enter
scas
adc
outsb
xor
adc
movsb
cwtl
xor
sbb
test
jns
mov
sbb
popf
mov
sub
push
movsl
pop
push
and
cmp
mov
push
dec
fdivs
dec
lock
in
cmpl
sub
test
mov
iret
movsb
cmp
fldl
mov
arpl
xchg
inc
mov
mov
push
sub
push
enter
jbe
adc
popa
push
and
in
inc
mov
or
aam
movb
subl
or
cltd
mov
cmpsl
rol
fisttpl
in
cmp
adc
xor
mov
xchg
push
repnz
icebp
push
test
das
stos
arpl
jo
jae
clc
aas
xchg
not
out
leave
sbb
add
push
adc
ret
add
add
jg
add
add
and
and
add
lock
loop
cmp
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
or
inc
mov
arpl
adc
and
or
test
push
shlb
mov
inc
adc
push
jecxz
mov
mov
pop
div
into
jo
xor
cmp
loope
sub
push
int3
sbb
jge
push
mov
push
in
push
xchg
js
sub
or
xchg
pop
jns
mov
xchg
mov
dec
pop
sti
jno
sahf
mov
jns
insb
or
xchg
mov
or
dec
push
aam
pop
idiv
cmp
popf
xor
and
mov
dec
daa
fsubrs
and
jae
lret
lret
mov
fmull
dec
adc
sbb
pusha
pushf
add
lods
adc
ja
adc
mov
jl
sbb
xorl
xor
hlt
test
sbbb
sarb
gs
xor
mov
popa
test
mov
pop
xor
dec
into
push
int3
xchg
test
nop
jl
mov
lea
fisubrs
mov
cmp
sti
stc
sub
notl
jbe
ljmp
das
scas
addl
jne
sub
xchg
into
dec
rorl
cwtl
clc
leave
out
push
jmp
mul
call
hlt
xchg
mov
sbb
dec
popa
jo
adc
mov
filds
repz
and
adc
dec
pop
mov
rcl
jo
adc
nop
in
lods
test
sub
out
fdiv
sub
cmc
mov
cli
enter
sbb
lea
sarl
mov
shlb
out
lahf
sbb
int3
pop
sti
jno
adc
fs
sub
cs
lock
test
or
mov
xchg
adc
add
mov
movsl
mov
lretw
clc
js
sub
jbe
out
jp
inc
icebp
sbb
fmull
mov
adc
mov
in
mov
add
ss
sub
adc
int3
mov
mov
adc
inc
subl
fisubrl
mov
mov
mov
xchg
test
jmp
loop
lretw
idiv
and
sub
mov
mov
sti
sub
adc
aaa
jp
cmp
sub
inc
xor
orb
cmp
xorb
add
inc
mov
cltd
das
je
jns
cmp
mov
xor
sub
add
in
cltd
jbe
mov
inc
scas
mov
push
jno
hlt
jecxz
test
inc
ss
xchg
dec
movsl
sbb
in
mov
xchg
sbb
mov
fistpll
mov
iret
hlt
mov
mov
enter
and
imul
iret
aas
or
subb
popf
fimull
aam
jo
iret
inc
ret
lcall
mov
clc
mov
xchg
add
pop
lcall
push
jle
loope
xchg
into
cmp
jcxz
lretw
lock
adc
sbb
fsubrl
into
sti
inc
mov
jne,pn
shlb
das
divl
lods
inc
dec
repnz
mov
cmp
repnz
jecxz
inc
xor
sub
bound
cltd
mov
cmpsl
mov
dec
push
add
pusha
xchg
out
inc
pop
push
sti
data16
cltd
clc
subb
cmc
sub
mov
pop
xchg
sti
jno
ror
or
cltd
sbbb
jo
xor
mov
adc
cltd
dec
push
inc
shl
das
stc
or
push
loop
fsts
scas
push
dec
jge
sbb
dec
dec
call
push
mov
fidivrs
hlt
and
orb
mov
ss
cmpl
sbb
mov
lcall
out
xorb
stos
into
inc
xchg
into
cli
add
sahf
clc
imul
repnz
cmpsl
das
in
enter
rcr
stc
dec
xlat
or
das
stc
or
push
fisttpll
out
movsl
test
jnp
inc
cmp
xor
pushf
lahf
sub
adc
adc
loopne
mov
div
or
adcl
pop
mov
filds
sahf
scas
xchg
sbb
inc
int
adc
test
hlt
daa
lods
inc
add
adc
mov
jle
pop
mov
enter
ljmp
data16
jg
subl
dec
cs
adc
mov
cmp
xchg
and
mov
sbb
mov
roll
xor
xor
in
test
inc
dec
cmc
aam
adc
xchg
cmp
mov
and
clc
imul
inc
jp
push
inc
jecxz
or
push
addl
cmp
pop
ja
sti
jno
sahf
add
sbb
dec
sub
notb
pop
clc
repz
std
sub
lods
push
daa
popf
repnz
mov
aam
cmpsb
mov
jno
xor
fcmovnu
or
pcmpgtw
jle
sbb
add
notl
mov
inc
cmp
xchg
xchg
pop
out
adc
dec
add
jl
fcoml
mov
loopne
mov
mov
pop
mov
xchg
push
push
mov
push
scas
gs
adc
ret
sbb
push
aas
mov
in
mov
xor
add
cltd
mov
loopne
movsb
sbb
or
popa
sub
test
mov
add
jne
cmpsl
lret
jno
fisubs
test
test
lret
sbb
or
sub
dec
add
push
xchg
cmp
ds
sbb
pop
jl
imul
sub
ret
xor
lahf
sbb
or
push
cli
push
nop
test
fcomi
pop
mov
xor
cmp
push
sarb
gs
inc
ret
xor
jo
gs
mov
icebp
xchg
mov
mov
or
pop
sbb
dec
cmpl
rclb
push
jmp
cli
out
mov
cmpsb
inc
xorl
mov
test
mov
mov
mov
sbb
cltd
mov
lcall
jle
push
stos
out
repz
repz
aas
mov
xorl
outsl
jbe
jae
popa
test
cs
test
mov
and
push
jae
dec
adc
push
cmp
mov
test
xchg
adc
iret
jae
scas
sbb
mov
mov
dec
mov
adc
repnz
push
andb
lret
jge
and
sub
stc
cmp
pop
dec
push
std
dec
dec
sbb
scas
lea
fdivp
bnd
sahf
push
nop
clc
mov
mov
add
xor
pushf
mov
iret
mov
lcall
adc
dec
ret
sbb
jge
pop
ret
xor
test
push
data16
out
adc
sub
jmp
sub
pop
out
movb
adc
imul
adc
and
out
mov
ja
test
sub
xchg
sti
mov
out
call
popa
mov
adc
inc
sub
sbb
xchg
shll
push
scas
xor
fimuls
sub
sub
lret
jge
dec
cmc
or
fwait
sub
xchg
sti
daa
arpl
or
push
rorl
push
mov
xor
sbb
fwait
adc
dec
ret
mov
xchg
push
or
push
inc
enter
popf
sub
push
xor
in
test
lahf
shlb
inc
out
dec
push
add
outsl
mov
in
or
cwtl
sbb
xor
dec
dec
outsl
dec
iret
pusha
ret
xor
mov
mov
test
orl
pop
cld
xlat
ss
cli
sbb
cltd
scas
mul
or
xor
adc
cmpsl
cmpsl
sub
sti
sbb
xchg
mov
aam
loop
stc
cmpl
xchg
out
push
xchg
out
ret
sbb
pusha
ljmp
cwtl
outsl
or
daa
pop
leave
jge
xchg
ja
stc
sbb
sbb
push
jg
jno
adc
out
cmp
loop
pop
mov
out
cmp
in
fisttpl
and
jno
jno
mul
push
std
xchg
mov
ljmp
fsubs
clc
cmp
sub
or
test
xor
cmp
xchg
sbb
and
add
cmc
movsb
movsl
popa
pusha
clc
aaa
jns
xchg
aaa
lods
nop
les
pop
xor
adc
xchg
dec
push
mov
add
dec
mov
mov
lods
jno
or
test
les
sbb
pop
test
fstl
sbb
rolb
jg
stos
mov
adc
sarb
add
pop
dec
enter
dec
dec
xlat
cmp
out
cmp
test
scas
pushf
lret
sub
cmpsb
jg
fwait
add
cli
fs
scas
out
fs
cwtl
sub
ljmp
rcl
dec
fldcw
sbb
int
adc
dec
add
lret
std
adc
leave
or
mov
xchg
dec
sbb
roll
mov
pop
das
mul
pop
pushf
fs
jge
push
pop
sar
out
rol
push
and
cli
mov
dec
add
inc
jp
data16
movsb
push
repz
push
or
sbb
dec
inc
xchg
fwait
cmpsl
fcomps
push
je
adc
xor
adc
sbb
inc
aas
stos
das
xchg
sti
jno
adc
jns
mov
jae
adc
std
loopne
fld
pop
out
cmc
push
inc
mov
inc
xor
ds
inc
stos
xor
cmp
push
enter
sbbl
xchg
cmp
push
int3
xchg
ja
mov
fdivrl
les
xor
lret
testb
popa
cmc
push
lretw
mov
xor
test
mov
dec
testb
adc
popa
iret
xor
push
dec
push
bound
adc
or
xchg
or
clc
sahf
push
aam
nop
xchg
pop
mov
test
daa
jne
mul
popa
sub
into
sub
sbb
sarb
arpl
dec
inc
inc
or
popa
adc
cmpsl
push
fisttpll
mov
mov
or
rorb
cwtl
push
dec
imul
adc
lretw
jge
dec
cs
ret
out
mov
popf
mov
and
shl
xchg
jecxz
xchg
adc
or
je
sub
and
loop
sbb
fstpt
pushf
xchg
xchg
aaa
xchg
add
xchg
pop
test
clc
pop
xor
add
scas
mov
ret
clc
xchg
mov
mov
sub
xor
in
xor
sbb
int3
icebp
rcr
xchg
mov
adc
push
sub
aas
cwtl
cmp
insl
adc
adc
incb
popa
pop
data16
jge
sbb
sahf
pop
add
push
mov
adc
mov
testl
dec
xor
xor
xchg
xor
or
aam
push
fistps
pop
lret
jge
sbb
fimull
inc
aad
dec
jne
and
andl
sub
in
mov
xor
aaa
push
cmpsb
xchg
cli
mov
push
xor
test
sub
xor
xchg
or
jg
sub
inc
pop
int3
xchg
les
mov
mov
sti
jecxz
push
and
push
std
sbb
lcall
adc
add
cld
dec
test
popa
sub
jge
sbb
jp
scas
leave
push
jmp
xchg
sti
push
xor
gs
cltd
das
mul
fildll
fsubr
push
cmp
mov
int3
xchg
sbb
xor
inc
mov
cltd
xor
xor
cmp
cmp
xchg
add
push
jns
sbb
ja
ja
jg
mov
ja
outsb
lods
push
jg
add
sti
xchg
jg
xor
std
add
outsb
es
std
mov
xor
mov
sub
filds
jg
loop
jno
inc
pushl
add
jg
cmp
sbb
data16
call
mov
decl
into
xor
cmp
jg
jg
add
push
xor
imulb
jg
jae
arpl
jbe
lods
xor
add
mov
dec
jnp
jg
mov
add
mov
xor
cmp
jnp
sub
xor
cmp
inc
mov
jg,pt
add
decl
sbb
cltd
jg
jg
jg
std
cmp
cltd
jg
jg
add
imul
jg
push
decl
jg
jmp
outsb
push
jmp
add
jg
jg
mov
ds
add
jg
xchg
xor
sbb
xor
jg
and
adc
jnp
add
cmp
sbbb
cmpb
ficomps
fnstsw
pop
jnp
leave
jnp
add
ja
jnp
inc
add
or
and
das
add
arpl
add
add
sub
add
add
inc
add
jnp
jo
and
push
movsl
push
sub
data16
mov
add
jnp
out
ficomps
jg
xchg
add
data16
sbb
or
add
addr16
add
fbld
imul
dec
fbstp
pop
shl
xchg
jo
fistpll
xor
jnp
fnstsw
fbstp
lahf
lcall
ja
xor
xchg
ja
mov
outsl
add
jae
ja
fbstp
mov
xchg
subb
ljmp
outsl
lds
jmp
xchg
cwtl
xor
filds
fistpll
fbstp
ja
fists
inc
or
filds
bound
test
outsl
cmpsb
jg
pop
adc
pushf
add
jo
negw
push
adc
mov
jle
jbe
test
test
pop
cmp
fimull
ud0
imul
arpl
je
sbb
loopne
test
pop
dec
xor
ljmp
cmp
cmp
xor
or
rclb
push
and
add
imul
data16
stc
sub
or
bound
jp
push
bound
adc
and
xchg
lret
jg
sbb
cmp
aad
rclb
push
outsl
add
incl
pop
js
pop
push
dec
sbb
ljmp
xor
test
pushl
add
jg
adc
jg
arpl
add
jg
lods
xorb
jg
incl
jg
add
jg
pushl
xor
jg
xor
jmp
add
add
add
inc
call
jg
xor
incl
fdivr
lcall
jg
incl
pop
xor
cmp
add
xor
jg
mov
add
add
cmpb
decl
jg
jg
ja
cmp
xor
add
pushl
jg
jne
arpl
add
pusha
inc
add
jg
decl
add
jg
incl
mov
jg
je
lcall
add
xor
std
add
pushl
add
add
jg
imul
add
inc
adc
add
pop
adc
adc
inc
lock
lock
add
adc
lock
imul
add
imul
pop
pop
add
add
add
lock
lock
inc
inc
inc
pop
pop
adc
imul
inc
adc
lock
lock
inc
imul
lock
pop
adc
stos
inc
sub
push
add
push
cmp
jmp
push
test
pop
push
or
pop
dec
sbb
add
or
adc
sbb
cmc
dec
push
push
inc
dec
lret
test
movsl
cmpsb
dec
into
and
cmp
out
add
push
or
ret
hlt
out
inc
jae
addr16
jnp
adc
sbb
jle
adc
jns
jnp
inc
adc
xchg
xor
xchg
cmp
add
dec
incl
xchg
mov
add
das
ja
push
ja
cwtl
cwtl
adc
jg
mov
jae
inc
lahf
std
xor
add
ja
ds
xor
add
fs
cmp
out
mov
mov
push
lods
ljmp
jnp
xchg
sbb
pop
and
dec
loope
fwait
pop
cli
push
xor
xor
stos
aas
or
sbb
jmp
mov
dec
mov
ljmp
cmc
pop
cmp
lcall
cmpsb
out
jmp
rcrb
cmp
or
in
loopne
std
repnz
xchg
sub
pop
andl
jbe
dec
sbb
mov
cmp
xchg
jge
xchg
dec
sbb
outsl
pusha
lcall
pop
xor
push
cmp
ficoms
sar
aaa
pop
xchg
fsubrl
sbb
pop
add
jnp
notb
adc
jle
inc
add
dec
fidivs
push
pusha
or
sbb
add
insb
ret
jb
jbe
fdivrl
push
push
notl
repz
loope
inc
cmp
fldl
out
shrl
cmp
push
into
mov
int3
push
test
mov
in
les
addr16
mov
xor
in
or
icebp
mov
lcall
cld
fisubs
or
mov
sub
fists
mov
shrl
cmp
push
cmp
mov
mov
stc
ja
lret
cwtl
push
mov
lret
aas
lea
cs
mov
ret
outsb
add
sub
daa
push
cmp
add
sub
mov
aam
xchg
push
cwtl
je
xlat
xchg
roll
xor
addl
push
pop
sub
jnp
repnz
pop
fldl
and
jns
ss
xchg
xchg
or
pop
jns
mov
pop
popa
adc
daa
rol
pusha
fidivs
mov
movsl
mov
out
pop
and
inc
leave
cmc
lods
test
add
pop
mov
pop
out
inc
or
xor
jmp
sub
in
test
iret
repz
cld
out
cwtl
testb
fidivrs
jecxz
xor
adc
inc
mov
mov
add
ljmp
mov
repnz
stos
test
aad
pushf
cli
mov
xor
jb
popl
mov
pop
pop
ja
lahf
xor
jp
lret
je
idivl
push
repz
pop
jg
subl
mov
pop
fisubrl
mov
xor
aaa
sub
or
sbb
fiadds
adcb
xchg
and
pusha
lods
xor
mov
adc
inc
add
sbb
sub
movsb
or
popa
jg
add
mov
icebp
xchg
push
jmp
add
popa
sub
and
cli
pushf
mov
in
pop
mov
jo
mov
out
jnp
lret
lods
dec
add
cli
jno
pop
cmpsb
out
sbb
imul
hlt
sbb
jo
std
iret
ja
fstps
andl
cmp
push
leave
and
ror
xchg
add
xchg
dec
enter
call
stos
fbld
mov
imul
mov
sub
or
shr
pop
sbb
xchg
dec
pop
inc
fiadds
cmpsl
es
es
popa
loope
leave
jb
add
ror
sub
cmp
mov
mov
repz
repz
ret
mov
gs
in
mov
adc
mov
jae
das
mov
pop
rcr
xchg
pop
scas
push
imul
sbb
fwait
add
xchg
repnz
pop
inc
clc
or
push
outsl
and
arpl
push
add
mov
imull
in
test
push
mov
shrl
ret
call
rorb
and
stc
movsl
aaa
and
mov
mov
loopne
es
mov
xchg
fsubl
dec
leave
lret
nop
xorb
dec
mov
sub
les
xor
push
mov
xor
push
push
add
movsb
adc
mov
or
mov
loopne
and
xchg
adc
pop
jl
and
lock
xor
push
xchg
dec
popl
or
push
setb
out
and
push
orl
mov
mov
int3
jecxz
outsl
sbb
lret
jge
cmp
xchg
out
mov
les
cmp
push
or
push
xchg
mov
add
sub
mov
int3
adc
jno
frstor
mov
add
loope
clc
jae
in
fsubp
sub
sbb
sbb
ljmp
sub
scas
pop
frstor
cld
stc
outsl
les
and
mov
mov
fs
inc
and
dec
sbb
push
mov
lods
int
or
jl
fs
jae
add
mov
push
xchg
mov
aas
mov
inc
les
push
lahf
outsl
xor
mov
mov
push
cmp
into
bnd
mov
or
push
or
or
popf
lret
xchg
test
sub
jle
into
dec
rcr
inc
or
test
or
add
sti
out
aad
xchg
jl
mov
add
xchg
fnstsw
mov
sbb
ret
popf
adc
mov
push
pusha
stc
and
mov
cld
fcmovne
shll
fisttps
ldmxcsr
scas
xchg
mov
pushf
dec
xor
dec
inc
out
cmp
leave
push
subl
pop
cwtl
inc
or
mov
movsl
xchg
xorb
mov
sbb
icebp
push
sar
mov
pushl
leave
xor
jg
mov
pop
inc
shll
inc
ficompl
lahf
lock
mov
pop
xchg
test
cmpsl
xchg
testl
imul
arpl
pop
cmp
call
push
add
test
mov
scas
push
jo
rorb
cmp
dec
ficoml
pop
inc
sub
jbe
rcr
xlat
subl
cmp
fwait
cmp
adc
jno
iret
pop
repz
ret
push
shrl
xchg
loope
jecxz
sbb
or
ret
imul
adc
adc
mov
aaa
pop
xor
enter
cmp
jle
jecxz
shrl
xchg
fildl
sti
dec
mov
dec
stos
fsubrs
sti
adc
jae
clc
dec
or
dec
adc
jle
dec
leave
xlat
loope
lods
cmp
sub
mov
lcall
dec
out
dec
push
into
sbb
dec
xor
adc
call
or
add
xor
fisttpll
xchg
add
insb
pop
gs
inc
out
dec
movsb
aaa
lret
push
rcl
cmp
dec
xor
push
adc
aam
rorl
mov
pop
jp
mov
jbe
es
cmpsb
cmp
jns
orl
jnp
pop
or
shlb
int3
jne
enter
mov
sub
fbld
popf
mov
sar
popa
cs
shlb
mov
mov
imul
popf
sbb
pop
jo
je
or
repnz
out
aas
sbb
test
sub
or
mov
mov
imul
dec
sahf
sarl
add
imull
mov
lods
test
lock
jbe
jbe
sbb
pop
stos
mov
imul
inc
stos
dec
pusha
shll
mov
sbb
fnstcw
mov
daa
or
es
dec
icebp
sbb
or
stos
cmp
es
test
jno
mov
jle
out
pop
loope
jae
sbb
or
xor
ret
mov
pop
insl
fwait
push
lahf
inc
rcrb
mov
or
in
mov
dec
lahf
mov
in
mov
lret
dec
mov
cmp
jno
mov
mov
ljmp
cwtl
jp
mov
xchg
jo
lcall
sti
or
dec
inc
pxor
int3
repnz
add
cmpsb
addr16
pop
jmp
add
or
mov
add
mov
or
jo
lock
imul
bound
sahf
jae
cmpsl
sti
cmc
outsb
outsl
dec
fnsave
cmp
clc
inc
imul
dec
fstpt
push
mov
mov
clc
cltd
xchg
je,pt
push
ss
popa
inc
lahf
or
xlat
cmp
nop
push
jl
fimuls
test
mov
pop
mov
lea
mov
add
test
fisttpl
pop
out
xor
pop
mov
xchg
mov
std
bound
scas
mov
xlat
add
bound
pop
movsb
hlt
add
inc
add
add
ficompl
cmpsl
dec
sbb
lods
fs
orl
pop
lret
mov
addb
or
addl
mov
into
and
in
mov
sub
mov
push
insl
cmp
hlt
pushf
std
and
lock
out
sbb
repnz
leave
lock
sbb
mov
dec
aaa
inc
les
push
push
mov
imul
pop
pop
es
ss
out
sahf
aad
repz
aam
pushl
daa
ss
lock
mov
pop
loope
adc
es
xchg
mov
dec
and
loopne
pop
das
push
and
add
das
fists
mov
push
adc
mov
xor
inc
clc
lods
xchg
leave
jp
mov
mov
rcr
cmp
cmp
enter
sub
sbb
ljmp
and
push
mov
popf
xchg
lahf
nop
mov
enter
rclb
push
adc
js
loop
addr16
movsb
jecxz
pop
dec
iret
jbe
sub
addl
pushf
daa
int3
jnp
mov
inc
jno
fisubs
lcall
in
testb
mov
stos
push
in
jp
sub
imul
fwait
jmp
add
aaa
sub
inc
pop
mov
push
add
fsubr
push
add
mov
outsb
dec
js
and
popa
push
jbe
hlt
lock
inc
shll
mov
mov
cld
xor
sub
and
aad
xchg
je
popf
and
pop
pop
or
js
cmp
imul
mov
push
aad
xchg
cmp
mov
inc
fmul
xchg
or
testb
pop
lds
int3
pop
pop
aaa
jmp
xchg
cli
les
popf
dec
lahf
xchg
dec
paddw
cmp
xlat
int3
and
test
push
lods
and
push
rol
add
xor
pop
call
cmpl
lock
mov
xchg
into
xor
fnstsw
out
or
roll
pop
pushf
mov
movsb
adc
jns
popf
xlat
into
ljmp
push
mov
ret
sub
pop
sbb
nop
movhps
xchg
cltd
stos
cli
cmpb
adc
cmp
loope
test
or
in
mov
sub
lea
js
pop
cltd
bound
pop
scas
and
stc
and
lahf
cmpsb
mov
cmp
roll
adc
enter
jns
ret
push
hlt
lods
xor
dec
sbb
stc
sbbl
cmp
mov
ficoml
and
xchg
pop
cmp
jmp
add
and
adc
pop
push
add
rclb
dec
sbb
pop
inc
mov
mov
xchg
add
rorl
jl
pop
lret
fcmovnbe
repz
mov
inc
daa
sub
ds
inc
push
test
mov
xchg
pop
movsl
out
pop
pop
loope
cmp
lock
inc
mov
test
xor
mov
and
mov
repz
sub
push
push
pop
int
insl
push
aas
inc
adc
int3
bswap
mov
iret
rcr
push
adc
add
fistpl
rolb
imul
fcomps
into
sub
dec
mov
ljmp
imul
xchg
std
xor
das
js
cmc
faddl
mov
lret
xchg
nop
inc
scas
mov
hlt
push
fs
loop
in
insl
push
adcl
mov
iret
std
leave
lods
cmpsl
das
sub
mov
fwait
inc
das
mov
or
dec
bound
xchg
jecxz
push
jp
ret
pop
mov
cmp
cmp
mov
test
shlb
loopne
mov
cmp
outsl
jle
mov
test
ds
sahf
add
jle
fwait
push
push
jl
or
jae
sarb
pop
enter
adc
movsb
mov
or
insl
ret
clc
repnz
sub
dec
out
cwtl
xor
call
shrl
mov
mov
jg
or
xor
cmp
mov
dec
jb
in
add
ficompl
jb
or
sti
pop
jmp
xchg
cs
insl
jbe
loopne
rcrb
movsb
dec
jp
in
lea
push
sbb
xlat
lret
iret
ss
add
in
gs
jno
jg
cmp
int3
das
push
enter
movsb
aas
mov
xchg
mov
dec
lea
out
dec
sbb
sti
stos
add
jle
cmp
push
lahf
int
faddp
mov
loop
aam
pop
cli
cld
adc
or
cltd
mov
xchg
dec
sbb
adc
and
fsubrl
push
and
pop
and
and
push
fs
stc
dec
lret
addb
add
fcomps
jmp
adc
xchg
std
cmpsl
sub
imul
add
adc
xchg
dec
shlb
dec
sbb
in
sbb
mov
rcrb
pop
pop
shll
inc
test
sti
pop
lea
push
and
dec
and
cs
jne
mov
ffreep
sub
sbb
rolb
pop
icebp
pusha
mov
push
or
nop
sbb
les
sbb
adcl
mov
push
pop
lahf
push
outsb
jnp
or
ss
out
lds
cltd
arpl
inc
push
jbe
je
push
mov
test
dec
mov
stos
jo
mov
dec
mov
sbb
fnstenv
icebp
sub
std
push
ret
adc
loopne
movl
mov
adc
cmp
add
lahf
idivl
pop
jbe
adc
out
mov
sbb
or
xchg
daa
push
fldcw
mov
ds
je
inc
imul
add
sub
addr16
pop
jo
mov
jb
inc
in
push
adc
or
lahf
mov
sti
enter
enter
ds
jl
sbb
push
lock
and
cwtl
add
inc
mov
mov
fldenv
mov
ret
lcall
jb
bound
cmp
inc
mov
push
mov
lods
pushf
mov
int
adc
mov
sti
or
sti
add
cmpb
stos
mov
inc
fistpll
cmpps
outsl
inc
scas
push
in
shll
cmp
shlb
repz
cs
aad
sub
outsl
add
and
pop
xor
jo
mov
mov
mov
push
push
push
js
jo
adc
xchg
xchg
push
xlat
mov
test
xor
test
and
pusha
jb
fnstsw
jmp
jecxz
push
jne
sarb
xlat
push
or
add
or
and
cltd
mov
icebp
in
or
sbb
mov
iret
pusha
mov
push
pop
fisubrs
adc
mov
inc
lds
fisubrs
addl
aam
inc
adc
and
jge
daa
into
stos
nop
sbb
leave
sub
lahf
pusha
and
sbb
push
add
fwait
adc
insl
fwait
gs
in
stc
loopne
subl
loope
sub
imul
jp
sbb
hlt
adc
mov
pushf
ljmp
clc
mov
cmpsl
mov
inc
xor
mov
fistl
pop
inc
inc
clc
xchg
mov
push
pop
mov
pop
jno
pushf
into
pop
andl
xor
add
mov
xchg
jne
push
incb
mov
out
add
xor
lea
mov
mov
test
in
mov
cmpsb
jne
jnp
icebp
jmp
cmp
lea
out
ret
lret
pop
int3
test
adc
or
push
int3
andb
int
aas
pop
xchg
mov
or
das
inc
lret
mov
loop
dec
cmc
cltd
out
mov
pushf
scas
inc
cmp
lahf
gs
jp
add
pushf
xor
icebp
aam
jp
cmp
icebp
loopne
test
xchg
leave
in
add
push
add
sti
ds
adc
or
repnz
test
pusha
mov
lea
cmp
fnstenv
jns
jg
int3
jg
jmp
repnz
jmp
jecxz
dec
pusha
mov
fdivl
stos
xchg
pop
sub
mov
hlt
sti
setb
push
cwtl
bound
out
push
fimull
inc
out
outsb
mov
mov
das
sub
xor
mov
pop
dec
dec
cli
test
jmp
add
enter
test
je
lds
movsb
pop
pop
push
push
jmp
lea
add
jecxz
cmp
js
jp
movsl
push
cld
cmpsl
pushf
imul
dec
mov
int3
sub
inc
mov
gs
xor
add
or
pushf
mov
scas
inc
and
pop
inc
in
seto
addr16
inc
in
inc
xor
popa
adc
icebp
xor
test
clc
push
mov
pop
jbe
xchg
adc
dec
mov
sub
aam
mov
xchg
subb
outsl
lods
pusha
push
dec
dec
xchg
sub
ret
fstpt
mov
inc
dec
xchg
sub
mov
lret
aam
into
pusha
cmp
not
push
mov
in
repnz
and
cmp
xchg
fistpl
es
clc
mov
push
push
int
adc
inc
ja
dec
push
pop
lea
push
cltd
mov
adc
add
push
or
mov
popa
lds
je
xchg
movsl
xchg
pop
pop
imul
jmp
adc
push
mov
fwait
sub
arpl
push
mov
xchg
mov
jmp
cmpsb
mov
movsl
arpl
cwtl
cld
fmul
stos
and
mov
outsb
imul
insb
fwait
xchg
sbb
xchg
stc
push
mov
or
loop
icebp
movsl
fucomi
mov
repz
adc
add
mov
leave
adc
or
mov
jne
xlat
loope
adc
pop
js,pn
js
ret
or
mov
aad
lods
pop
ds
test
aaa
adc
in
call
idivb
ds
scas
mov
lahf
or
add
movsb
adc
or
adc
js
or
cmp
into
mov
xor
xchg
cs
lret
lods
pop
jge
leave
pop
movsb
jnp
sub
jmp
pop
jmp
inc
mov
add
cltd
aad
jae
fisubrs
cwtl
push
mov
outsb
cli
aas
or
scas
sbb
adc
idiv
into
pushf
push
pop
popf
sbb
cmp
repz
mov
jp
inc
fnstenv
xchg
ret
pop
xor
mov
arpl
leave
aad
sbbb
adc
jnp
jmp
das
xor
xlat
add
cld
push
movsb
pop
xchg
in
aaa
or
gs
ficoml
out
mov
mov
push
pop
xchg
insl
rcrl
jmp
bound
int3
dec
inc
xchg
out
and
cmpsb
mov
mov
jmp
or
and
inc
fdivr
push
repz
shlb
rorl
xchg
push
sub
pop
out
push
push
xchg
adc
imul
xor
sbb
xchg
insl
repz
ja
adc
fcmovnbe
push
pop
jae
xor
in
ja
leave
js
das
cwtl
fadds
sbbb
movsb
test
je
shrl
xchg
lods
ja
sbb
mov
cmp
sbb
stos
push
movsb
mov
movsb
mov
ret
sbbl
rcrl
lds
dec
inc
scas
stos
lret
cltd
sub
lret
pop
inc
shlb
in
jle
push
push
sbb
adc
pop
dec
sahf
push
daa
mov
push
mov
add
xchg
and
sub
stos
add
jb
jl
andb
lock
lods
icebp
shlb
push
push
enter
call
and
or
mov
push
roll
push
ljmp
xor
call
mov
jecxz
bts
mov
or
xchg
cwtl
ljmp
sbbb
xor
xor
mov
mov
lods
dec
js
stos
movsb
sti
push
jnp
push
out
out
std
imul
nop
ret
adc
popf
cltd
mov
mov
orb
xlat
loope
mov
push
sub
js
arpl
insl
mov
adc
push
lea
and
add
imul
ret
cli
push
iret
xor
fwait
std
mov
xchg
xchg
cmp
xor
rep
cmp
gs
insl
int3
jb
cli
je
sub
xchg
mov
mov
notb
call
inc
cmpsb
iret
cli
lea
bnd
mov
lds
jno
in
sbbb
lahf
cmp
xchg
scas
shlb
sarl
pusha
rorl
enter
bound
int3
jns
mov
cmp
push
cmp
pushf
dec
pop
xor
imul
pop
mov
jo
iret
add
mov
pop
xchg
push
ffree
jae
in
jecxz
std
sub
movsb
imul
sub
cld
xchg
mov
or
mov
jl
stos
dec
add
cmp
mov
adcb
fs
ja
push
mov
or
loope
sub
dec
repz
inc
cwtl
jle
mov
out
xchg
dec
jle
loop
push
push
fstpt
call
test
scas
add
gs
imul
jns
and
xor
rcrb
into
adc
mov
xlat
ss
jle
mov
int3
sub
sahf
imul
sub
sahf
adc
pop
xor
out
pop
sub
mov
sbb
push
addl
adc
stc
outsb
mov
test
add
xchg
std
cwtl
repnz
int
ss
add
scas
in
rolb
loope
xchg
out
fsts
je
jno
pop
in
xor
outsb
sub
xchg
cmp
pop
outsl
lcall
fidivrl
popa
shl
inc
sub
push
push
sub
dec
add
push
outsl
or
cmp
pop
outsl
sahf
stos
stos
mov
xchg
mov
stos
push
xchg
mov
cwtl
sub
add
fnstsw
shlb
insb
jo
pop
icebp
cmpsb
mov
pop
or
call
cld
mov
xor
or
daa
int3
lcall
inc
clc
add
pop
dec
fbstp
jno
shl
and
insl
adc
sbb
not
or
jb
mov
dec
sub
arpl
xor
jno
outsl
loop
rorb
xor
js
fabs
pop
rolb
ja
es
jne
dec
inc
mov
jnp
jne
or
shrl
pop
scas
push
insb
aaa
jne
test
add
push
xchg
insb
jg
mov
int3
shll
movb
xchg
xor
pop
cmpl
jne
in
pop
fwait
repz
mov
test
mov
roll
jo
lcall
in
xor
gs
mov
fisttpl
and
lock
jns
inc
mov
mov
scas
push
or
mov
leave
popa
negb
out
insl
mov
loop
cmp
pop
mov
ret
cmpsl
std
adc
inc
fmul
adcl
std
std
jb
pop
push
and
sub
mov
add
xchg
or
push
mov
mov
std
xchg
jecxz
and
bound
mov
add
fs
push
cmpsb
xor
int
dec
fisubrl
mov
xor
cli
cmp
xlat
push
mov
aaa
mov
pop
cmp
out
jp
aas
sarl
mov
and
or
negl
inc
sti
orl
ja
lret
xchg
insb
and
scas
ficoml
mov
sbb
push
or
lcall
adc
mov
and
add
std
jnp
data16
xor
addr16
loopne
daa
js
or
push
sti
xchg
decl
inc
cld
lods
add
cmpb
test
loop
push
insl
cmp
sub
divl
mov
and
adc
pop
movsbl
rcr
test
lret
or
jle
mov
in
or
sbb
mov
push
subl
push
enter
mov
mov
xchg
mov
pop
arpl
xchg
pushf
mov
adc
push
sarb
sub
push
call
sbb
aas
sub
scas
add
mov
and
fs
mov
sbb
cli
daa
jmp
aas
mov
les
pop
stos
scas
mov
or
movsb
fbld
mov
idivb
insb
pop
adc
push
add
inc
ret
incb
mov
in
leave
xchg
mov
fidivl
xchg
test
sub
std
insb
pop
imul
xchg
fcom
popf
fldt
inc
mov
mov
movsb
fwait
cmp
mov
aaa
sbb
jle
outsl
das
mov
push
cmp
dec
xor
bound
cmp
sbbl
call
pusha
mov
jno
das
push
addr16
add
jl
xor
popf
xchg
cld
jg
mov
in
push
clc
pop
sar
loopne
push
and
gs
mov
arpl
out
cmp
loope
testb
inc
xchg
ljmp
in
test
ljmp
xchg
daa
push
sub
int3
int
add
testl
cmp
out
fnsave
cmp
dec
ja
inc
pusha
mov
in
mov
pop
mov
add
in
mov
dec
dec
xor
sub
mov
lret
popa
push
stos
mov
dec
nop
int
mov
push
test
dec
mov
xor
aas
out
loope
add
ds
bound
mov
rcll
pushf
or
adc
ja
or
inc
xor
and
ret
mov
add
jbe
mov
cmp
pop
xchg
repz
inc
pop
outsb
sarb
iret
pop
jne
or
fnstsw
jp
sbb
rcr
add
pop
inc
xchg
out
sub
cmp
mov
dec
ja
jecxz
rolb
test
orb
cmpsl
push
push
add
sarb
mov
mov
aaa
out
or
sti
cmp
inc
xlat
xorb
inc
sub
mov
leave
nop
mov
or
xor
popf
cmp
gs
in
mov
fwait
xchg
out
std
int3
loopne
ret
sub
cli
mov
shl
leave
jle
enter
xor
pushf
shll
lock
mov
dec
mov
lods
add
inc
mov
xchg
xor
popa
out
jnp
addl
cmpsl
jl
pop
lock
pushf
lea
sub
push
fwait
loopne
sub
mov
dec
pop
in
repnz
fstpt
divb
push
pop
aaa
fildl
or
inc
jae
adc
sbb
mov
lcall
out
mov
push
out
shll
js
xchg
mov
fnstenv
out
dec
mov
or
ret
mov
inc
mov
pop
mov
add
fcomps
jnp
loopne
mov
mov
push
sub
push
adc
sarb
ljmp
push
mov
outsb
mov
add
dec
loop
mov
adc
pop
out
jmp
je
repnz
jns
add
lods
enter
jmp
xor
in
mov
fwait
cmp
sub
inc
add
push
push
rcrb
orl
mov
sbb
jns
add
dec
cmp
mov
dec
movsb
jo
gs
adc
cmp
hlt
daa
lods
push
in
shll
sahf
cmp
pusha
shrb
test
leave
add
stos
xor
scas
add
movsl
loope
mov
outsb
add
jecxz
sub
lret
shrb
vcvtsi2ssl
add
or
stc
and
lds
cmpb
or
test
jno
xorl
add
fdivrs
outsb
push
adc
add
mov
movsb
adc
sbb
xchg
ljmp
jbe
mov
push
push
sbbl
sarl
dec
sub
jbe
xchg
mulb
sbb
inc
lret
fadds
mov
mov
mov
pushf
sbb
popa
into
mov
rol
lret
sub
cmp
loope
ret
cmpb
cmp
flds
add
imull
push
rep
add
fs
in
ret
icebp
adc
mov
pop
sbb
loope
repz
insb
ds
cmp
outsb
mov
andb
pop
lahf
mov
fwait
test
cs
push
push
and
leave
in
fnstsw
ja
ja
sub
mov
xchg
aas
je
cmpsb
out
add
xor
movsl
adc
push
cld
in
cmp
add
push
int
mov
inc
inc
add
imul
inc
cmp
mov
les
loope
xchg
std
dec
cwtl
enter
mov
cmpb
popf
roll
cmpsl
shr
divl
pushf
mov
xchg
insb
add
shll
mov
cwtl
in
mov
and
cmp
push
outsl
mov
sub
push
mov
jnp
inc
push
imul
xor
lea
xchg
aas
out
mov
das
icebp
inc
sahf
rol
jns
fs
lods
nop
pop
mov
test
std
add
mov
jp
inc
pop
and
push
loope
jg
push
sub
daa
lret
daa
mov
fdivrl
push
inc
cmp
xor
sub
or
jae
adc
cmp
lods
push
mov
call
sbbb
bt
jb
inc
pop
leave
mov
out
mov
loop
sti
push
jne
insb
out
cli
add
shrl
lret
cmpsl
jecxz
loopne
icebp
iret
out
cmp
mov
mov
dec
add
inc
pushf
mov
xor
js
and
fsts
lods
icebp
add
sbb
scas
xor
jecxz
or
scas
pop
ret
out
insl
movsl
dec
out
or
dec
pop
pop
mov
ss
pop
mov
cs
cmp
mov
adc
out
push
mov
cli
aad
scas
inc
shrl
pop
sbb
xchg
pop
nop
cmp
mov
loopne
scas
sbb
call
ja
pop
movsl
cmp
test
cmp
mov
lret
inc
lods
sti
stos
mov
sbb
pop
adc
das
stos
not
mov
je
addr16
cmp
push
push
xor
sbb
sub
sub
sbb
xor
pusha
movsb
call
fmul
mov
push
sahf
cmp
and
test
loope
mov
add
cmpps
mov
mov
xchg
xchg
mov
cltd
out
or
xor
mov
push
clc
popa
xorb
test
shll
or
sub
sbb
call
pop
es
cmpl
data16
mov
pop
je
dec
lock
cmp
popa
dec
dec
pop
cwtl
mov
mov
xchg
mov
nop
movsl
shll
out
rorl
add
xchg
ss
pusha
test
fldt
xchg
inc
inc
xchg
cltd
xchg
or
int3
mov
sub
sarl
sub
fbstp
sub
jecxz
repnz
hlt
mov
sarl
push
xlat
mov
int
xchg
mov
and
cmp
adc
mov
ret
dec
test
loopne
mov
push
xor
into
push
rorb
add
push
cs
push
pusha
aas
repz
sub
jb
stos
sub
pop
scas
mov
cli
enter
fsincos
jae
shr
mov
mov
and
lret
mov
cli
lds
leave
mov
cmc
roll
out
mov
aam
dec
sbb
mov
das
xor
and
out
pop
lret
decb
and
mov
fwait
or
jle
add
cld
ret
fs
pop
test
cmpsb
xor
pop
test
push
and
shl
out
mov
pop
jmp
mov
repz
and
adc
sarb
daa
push
bound
shlb
xchg
xchg
aaa
sbb
xchg
add
loope
jnp
xor
repnz
in
sub
fisubrl
xor
mov
testb
pop
dec
mov
lods
les
clc
sbb
arpl
xor
into
das
push
daa
jnp
movsb
add
mov
nop
ret
inc
fnstcw
je
into
mov
nop
movl
pop
jo
out
sahf
pop
int3
xor
cmp
frstor
and
sub
pop
iret
cmpsb
fidivl
or
pop
adc
out
bnd
adc
dec
xor
xchg
mov
pop
pop
sub
dec
lcall
sub
call
pop
jmp
pop
jnp
pushf
mov
push
idivb
enter
pop
fidivl
leave
pop
in
add
xor
sbb
sub
movsb
sahf
out
xor
adc
popa
add
jo
inc
xor
xor
daa
mov
jae
test
mov
stos
sub
imul
rol
shrb
daa
xchg
out
fwait
mov
push
jno
scas
push
ret
cmp
inc
or
lret
mov
mov
int3
add
stos
mov
xor
or
rolb
sbb
mov
xor
fcmovne
xchg
and
mov
sbb
and
aas
ja
mov
aad
xchg
sbb
pop
icebp
push
push
jnp
jmp
xchg
xchg
mov
dec
sarb
icebp
jb
add
cwtl
ja
sub
or
pop
xchg
mov
aam
xchg
push
mov
pop
movsl
xchg
sahf
imul
aaa
xor
xchg
call
inc
fiaddl
shr
aad
js
mov
pop
mov
dec
pop
or
jecxz
in
push
sahf
pop
addl
data16
mov
sbb
inc
stc
jno
insb
popf
call
mov
jo
jp
int3
es
gs
clc
lahf
pop
les
sti
mov
jmp
adcl
sbb
and
enter
fdivs
ret
pop
or
addl
clc
mulb
mov
mov
aas
cltd
adc
movsb
add
mov
cltd
test
push
or
cmp
js
into
sbb
ret
push
mov
xchg
nop
inc
inc
sbb
xchg
ret
jns
addl
mov
in
ror
adc
and
jmp
insl
add
daa
or
fstps
inc
xchg
fcmovnbe
and
test
cld
movsl
movsb
fiadds
add
in
mov
sub
les
sbb
stc
icebp
xchg
or
bound
jmp
repnz
std
jp
cwtd
dec
mov
xor
int
xor
pop
call
ret
push
subb
hlt
fimuls
popf
in
or
inc
data16
xchg
adc
mov
jo
je
cmp
sub
test
mov
aas
jecxz
es
mov
cmp
lods
push
cmc
pop
iret
mov
scas
inc
daa
add
gs
dec
push
mov
pop
or
mov
mov
adc
mov
aas
cltd
sub
mov
es
cmp
sbb
xchg
sarb
push
push
daa
pop
jae
jno
insl
bound
dec
sbb
mov
push
stos
push
jbe
roll
cmpb
sbb
and
fwait
xor
daa
pop
jb
imul
mov
push
fbld
bound
vorpd
sub
test
mov
int
sub
ss
mov
or
mov
xlat
loop
cmp
jno
lds
aas
pop
jl
mov
add
test
jge
xor
aas
cmp
lcall
jg
sub
add
push
xchg
sarb
dec
sbb
cltd
shrl
daa
push
dec
orl
int3
je
ja
lock
and
dec
daa
mov
or
jno
sbb
lcall
outsb
mov
int3
hlt
mov
xor
das
jo
shl
movsb
push
push
add
ret
in
imul
push
sub
insb
sar
jb
jecxz
xchg
stos
int
cmp
out
sbb
out
loop
cmp
mov
sarb
faddl
push
stc
pop
ss
mov
xchg
xor
add
das
shll
rcll
xchg
les
or
int3
mov
push
xor
sbb
lods
scas
pop
xchg
inc
sub
inc
sub
dec
repz
cmpsl
push
and
pop
mov
cmp
jmp
adc
enter
xor
sub
pop
mov
xor
std
fstpl
add
stos
fistpl
movb
outsl
sub
jbe
or
xor
and
mov
jp
xor
sti
adc
ljmp
dec
out
cmp
out
push
xorl
mov
cmpsl
in
fnstsw
test
data16
jle
aas
sub
pop
scas
cmpl
das
call
xor
cmc
cli
and
xor
xchg
xor
scas
lret
or
dec
cmpsb
test
add
sbb
push
pop
clc
xor
out
and
ja
pop
subl
jl
shlb
mov
cmp
push
cmp
ja
mov
daa
inc
nop
daa
insl
in
xlat
sbb
popl
inc
dec
xchg
push
sti
hlt
sub
inc
icebp
mov
pushf
jmp
in
lret
xor
push
dec
int3
dec
adc
dec
jns
cmp
inc
xlat
and
popf
cmp
jp
lock
bound
xor
ret
push
jns
pop
push
add
iret
cmp
pop
sarb
es
jno
test
popa
mov
aaa
inc
mov
into
mov
loopne
movsl
in
push
decl
repz
sti
je
sti
das
cld
pop
in
dec
jbe
jne
jne
loope
jmp
rcrb
fcom
jmp
jns
lahf
fwait
mov
cmc
sub
loope
add
mov
cltd
out
lods
std
stos
pop
lock
lahf
jmp
fstpl
cmp
stc
insl
ljmp
pop
cltd
cmp
lods
sbb
pop
mov
push
mov
mov
xchg
test
loop
mov
push
mov
je
out
testl
out
jae
add
push
mov
fs
loop
dec
mov
scas
push
push
out
stos
mov
lret
call
neg
or
mov
roll
fcomps
or
xchg
outsb
fistl
shrb
cmpsb
imulb
mov
shlb
imul
push
push
hlt
xchg
sahf
mulb
dec
push
jp
push
js
stos
push
sbb
adc
and
fneni(8087
inc
jecxz
int3
mov
push
nop
aas
and
or
jl
movsb
repz
nop
push
mov
cld
add
xchg
test
pcmpgtd
cltd
push
data16
sub
pushfw
xchg
repnz
gs
xchg
mov
pop
lock
sub
ds
add
inc
rclb
dec
sub
fcoml
in
ja
cwtl
popf
test
sbb
ss
cmp
mov
jb
push
xor
sub
cmp
mov
shrl
les
adc
xchg
stos
movsl
outsb
pop
stc
imul
fldl
push
mov
mov
mov
das
xor
aad
fiaddl
call
pop
call
cwtl
nop
call
outsl
scas
mov
adc
xor
out
cmp
pushfw
push
sub
xor
fsubrl
xchg
popf
mov
rorl
adc
fistpll
dec
aaa
repnz
jle
imul
inc
mov
out
loopne
test
inc
insl
outsb
rcrb
fcoml
iret
js
insb
call
outsl
mov
mov
clc
dec
pop
mov
mov
mov
jecxz
idiv
sbb
popa
fimuls
pop
lea
sub
movd
cwtl
mov
inc
inc
and
dec
inc
jo
test
in
insb
aas
mov
sahf
mov
imul
or
lea
int
sub
movsl
jecxz
mov
jecxz
adc
pushaw
mov
arpl
mov
js
dec
testb
add
xor
cld
mov
bound
cmc
mov
imull
jmp
xor
pop
fistl
iret
lods
js
sbb
cmp
push
dec
jb
lds
cltd
pop
movsl
cs
out
out
subl
inc
dec
leave
inc
xchg
add
mov
inc
and
outsl
ja
mov
mov
lret
test
std
cmp
inc
fcmove
xchg
xchg
mov
inc
pop
aas
xchg
in
hlt
add
jne
push
adc
xchg
adc
jb
iret
rcll
add
add
push
pop
xchg
pop
stc
mov
bound
int
push
xchg
jne
arpl
icebp
fiadds
adc
inc
aaa
outsb
std
les
out
std
and
stos
fnstsw
add
jecxz
push
jns
shll
ljmp
cmpsl
jge
mov
mov
pop
int
ljmp
outsl
jnp
jmp
out
shll
and
dec
jl
cmp
lock
xchg
incb
xlat
mov
test
cmp
or
in
xor
arpl
xorl
les
xor
repnz
add
not
adc
ljmp
mov
jae
pop
cmp
cld
jb
push
adc
testl
sub
test
fwait
jp
or
xchg
adc
xor
add
bound
push
and
jbe
lds
fdivs
loopne
adc
push
aad
push
push
lea
mov
pop
clc
mov
stc
insl
push
lods
add
sub
jl
out
fldt
push
mov
pop
jl
jae
mov
scas
mov
add
cmp
add
dec
rol
xor
cmp
add
negl
ss
mov
jmp
cmp
jmp
dec
adc
xchg
pop
aam
dec
sbb
imull
arpl
pop
lds
mov
das
or
pop
mov
push
ret
fs
in
inc
sub
xor
out
popf
pop
call
mov
stos
mov
arpl
push
pop
xchg
jo
jns
and
test
inc
xorl
arpl
and
push
pop
mov
lret
loopne
arpl
jnp
mov
stos
jb
cmpsl
lods
xor
aad
shll
loope
sti
pop
std
outsb
jno
and
jl
cmp
movsl
popl
mov
push
shr
push
std
pop
mov
fld
fidivl
inc
out
dec
mov
shr
adc
in
mov
mov
and
xchg
mov
mov
loopne
mov
clc
add
lock
and
mov
mov
aas
shlb
push
clc
bound
stc
pop
pop
cmp
lds
mov
add
xchg
xchg
fcompl
test
xchg
call
std
into
cmpb
sbb
movsl
push
stos
cmpsl
dec
mov
in
nop
lahf
dec
ds
inc
scas
pop
out
lahf
scas
imull
data16
sbb
orl
js
out
nop
xchg
int3
call
sbb
loope
insb
mov
add
push
add
cli
test
mov
push
flds
daa
mov
mov
lret
arpl
fs
decb
mov
ret
fucom
loop
jecxz
movsb
jbe
shrb
loope
out
pop
dec
and
fisttpll
lcall
ss
loop
add
push
test
into
dec
mov
adc
xchg
shlb
pop
cmp
outsb
loopne
xchg
lock
out
sub
jle
icebp
je
in
jg
rep
pop
mov
fs
arpl
and
shlb
inc
repnz
es
pop
inc
adc
pop
std
pushf
decl
aas
iret
cltd
xor
imul
leave
push
aad
mov
rorb
add
daa
jl
ss
cmp
outsb
dec
mov
adc
call
leave
mov
sub
jae
int
mov
cmp
sub
push
jge
ficompl
jne
sbb
xor
lods
sarb
out
and
aas
adcl
or
xor
cmpsb
pop
sbb
clc
jae
xchg
mov
mov
push
mov
pop
and
daa
push
push
insb
movsb
ds
call
sbb
xchg
sub
popf
mov
or
frstor
fcom
adcb
or
mov
test
sbb
cmc
push
daa
hlt
pusha
dec
data16
xor
push
or
roll
je
lret
loop
and
jp
mov
daa
push
out
xchg
adc
nop
jns
jno
and
into
dec
xor
enter
stc
into
int3
scas
out
mov
mov
push
mov
cmc
jp
pop
xchg
andb
lret
jnp
in
or
mov
out
imull
mov
fiadds
jno
or
jg
ljmp
arpl
xor
test
jle
add
pop
shl
inc
mov
or
out
push
jae
lcall
adc
jp
mov
push
leave
xchg
stos
out
jo
pop
pop
notl
add
push
loope
popf
jbe
or
enter
and
mov
sbb
inc
mov
or
in
es
push
out
push
outsl
shlb
sub
mov
pop
ficoms
xor
xchg
sub
aas
orb
out
stos
dec
lret
aas
rorl
inc
adc
inc
add
cwtl
push
sahf
mov
push
dec
cli
xchg
mov
sbb
sub
xchg
dec
xchg
cmpsb
sbb
ss
add
scas
in
adc
fnstcw
pop
enter
popf
ds
add
in
loopne
stc
mov
imul
cmpsl
mov
pusha
adc
rcr
cmp
ret
ss
dec
scas
les
jl
pop
iret
push
lock
call
sar
add
xor
jge
or
in
cmp
sub
sbb
mov
out
push
into
push
push
jbe
mov
je
mov
and
adc
mov
cmp
adc
je
push
mov
inc
dec
enter
or
jl
add
sti
jbe
xchg
repnz
adc
dec
pop
jno
sub
test
leave
dec
in
cwtl
and
jno
xchg
mov
cmp
xchg
andl
aaa
jns
push
jae
aas
clc
repz
jp
insl
ja
cmp
mov
inc
aas
leave
xchg
aaa
jnp
in
lcall
xchg
mov
dec
or
aad
neg
sbb
xor
mov
clc
xor
scas
pop
les
jbe
dec
jno
push
out
or
popf
into
inc
and
in
push
inc
outsl
ficoms
ljmp
or
adc
or
faddp
xor
lret
jl
aas
cltd
cwtl
sbb
sub
aad
popf
je
jl
and
fs
test
lret
sub
mov
out
push
pop
pushf
inc
pop
jae
leave
xchg
sub
sbb
dec
iret
fidivrs
insb
bound
movb
loopne
cli
shr
lock
je
es
test
sbb
adc
cmp
mov
add
daa
or
xor
jp
cmp
mov
cltd
and
fldcw
aad
pop
ret
jnp,pn
adc
fldenv
jge
mov
stc
in
cmp
or
fwait
push
lds
xor
sub
aaa
pushl
sub
imul
repz
sub
cmp
mull
push
inc
mov
ljmp
sbb
and
data16
adc
pavgw
ljmp
sub
stos
popa
daa
je
sbb
xor
leave
jmp
and
xor
js
in
sub
cmp
mov
push
outsb
sahf
in
cmc
ret
mov
pop
jmp
cmpsl
xor
fimuls
dec
mov
xchg
idivb
push
pushf
flds
loop
cmp
inc
push
negl
sbb
mov
jne
mov
aam
insb
pop
cmpsl
lods
fldl2e
sti
repnz
jbe
mov
inc
in
dec
sti
int3
orl
mov
jb
add
or
aad
or
outsb
lahf
push
stos
fsubl
add
jge
or
inc
sahf
andl
mov
enter
and
outsl
fimull
outsl
loopne
jo
push
ljmp
icebp
jns
pushf
mov
push
arpl
xor
mov
shlb
icebp
push
icebp
xchg
lods
lret
xor
test
arpl
lods
cmp
dec
imul
es
dec
pop
pop
les
ret
aam
jbe
add
outsb
xor
mov
mov
and
mov
cmc
adc
rcrl
mov
add
sub
xorl
sub
and
add
stos
jmp
sti
xor
nop
inc
or
outsb
js
sbb
jge
xor
xor
sub
es
aam
push
push
cmpsb
xorl
adc
dec
cmp
into
mov
enter
mov
pop
cld
pusha
inc
pop
jg
sub
sti
lret
test
cmp
insb
dec
adcl
pushl
dec
mov
pcmpgtw
movsb
add
jne
cmp
lods
inc
push
lret
hlt
in
sub
jno
sbb
rorl
loopne
lds
addb
imul
and
bound
lea
add
adc
pop
repnz
stos
jle
adc
aaa
ret
outsl
xor
clc
dec
xlat
mov
jo
jne
xorb
pop
ret
shlb
cs
mov
fisubs
mov
push
ja
ret
inc
push
aaa
mov
push
fbld
inc
lods
fcomps
cmp
inc
jecxz,pt
inc
cmp
mov
int3
adc
jge
mov
and
and
inc
pop
xor
inc
xor
hlt
into
pushf
jle
jae
mov
sub
mov
jg
jae
aas
jns
pop
test
xchg
dec
out
gs
ljmp
out
testl
mov
adc
andb
pop
fwait
mov
lcall
cmpl
outsl
aaa
leave
adc
dec
shl
push
loope
loop
mov
inc
stos
push
outsl
cmp
adc
clc
je
cmp
dec
cld
inc
jl
shl
fists
dec
movsl
pop
xor
lock
in
mov
dec
cwtl
insb
insl
loop
cmp
lcall
add
stos
mov
fwait
stos
inc
fmul
cli
neg
adc
sbb
xchg
sub
lods
lcall
loope
imul
push
lahf
bnd
or
bound
mov
xchg
and
push
loope
pusha
xor
jg
add
push
shll
sub
mov
insb
ljmp
outsl
mov
mov
mov
add
or
add
rorl
ljmp
ror
mov
aad
cli
mov
fnstsw
mov
cmp
mov
aas
jnp
pop
cmp
lcall
stc
and
lret
ljmp
idivb
pop
nop
incb
insl
push
popf
adc
pop
fbld
jl
dec
fstpl
and
sbb
cmpsl
sbb
mov
xor
cmpsb
pop
lea
ret
jns
sahf
ja
sbb
mov
call
jl
and
ret
add
pop
jp
clc
or
and
mov
sub
mov
xor
mov
loope
cld
mov
xchg
sarl
adc
mov
sahf
or
or
insb
add
popa
xor
mov
ss
popa
popf
and
push
outsl
pop
mov
mov
jg
or
or
mov
stos
mov
xchg
jnp
je
cwtl
pop
repnz
xchg
and
xor
pop
test
add
mov
cmp
sbb
mov
adc
sbb
jo
dec
xor
cmp
xlat
mov
into
icebp
mov
jecxz
push
adc
mov
dec
lcall
sahf
leave
adc
mov
sbb
xor
and
sub
fcomip
pop
sbb
or
ret
lret
dec
xlat
mov
and
lea
cmc
sub
jns
cmp
sub
mov
imul
cmp
jmp
cmp
pusha
or
xchg
cs
cli
aad
out
imul
pop
sbb
jp
pop
loop
adc
mov
or
mov
mov
test
and
lds
mov
adc
or
push
mov
fcompl
inc
push
add
push
mov
ret
ret
mov
cmpsl
and
std
aam
subb
pop
pop
into
cmp
inc
pop
sbb
or
orl
gs
jle
or
pop
int
mov
cwtl
xlat
pop
pop
fs
movsl
shr
push
dec
lods
push
stc
in
aaa
ds
fcmovnb
loop
lods
int3
push
dec
pop
and
and
push
xlat
inc
test
jle
mov
dec
mov
or
ret
xchg
mov
ja
ss
cmp
sbb
dec
fwait
lcall
movsl
mov
aam
out
push
jmp
add
addr16
mov
lcall
lahf
push
sbb
movsb
arpl
push
mov
lcall
mov
or
in
or
mov
dec
insl
in
adc
adc
cmp
test
push
xor
xlat
ret
outsb
push
push
fwait
cs
inc
sub
ret
inc
jge
jmp
and
ss
pop
in
fcoml
lret
cmp
inc
mov
cwtl
jbe
cltd
and
aam
sub
mov
dec
movsb
sbb
dec
mov
or
je
jp
popa
cmp
mov
mul
push
addl
jno
lret
push
inc
mov
pop
pop
fists
out
cltd
xor
aaa
faddp
dec
mov
fstpl
pushl
and
loopne
xchg
ds
mov
mov
cmc
push
ret
daa
mov
movsb
fdivrl
sub
shrb
icebp
movsb
push
mov
jge
jns
mov
add
and
imul
loop
add
out
xchg
push
push
sub
pop
pop
popl
pop
lret
fidivrs
cmp
popf
cld
and
faddp
xchg
std
jg
and
pusha
mov
xchg
pop
ds
inc
out
mov
insl
aad
mov
repz
sub
or
lods
fs
gs
arpl
push
aas
into
ljmp
push
cmpsb
mov
repz
fnstcw
mov
xchg
imul
call
ror
std
and
icebp
imul
inc
adc
sub
sbb
jl
lods
jo
push
in
or
je
and
jnp
ss
dec
shl
int3
in
stos
or
add
fdivrl
repz
out
je
lcall
psubq
pop
fbstp
mov
lahf
shrb
lret
loop,pt
int3
sbb
jb
and
int3
jle
xchg
sbb
inc
hlt
sub
cmpb
xchg
xchg
mov
bound
ss
pop
adcl
jb
cmp
jl
loop
push
mov
test
scas
nop
sti
jnp
mov
cmc
mov
sbb
add
int
sbb
fstps
ss
add
dec
or
sbb
or
dec
stos
dec
nop
adc
pop
sbb
jne
ret
ds
test
mov
in
and
mov
icebp
outsb
adc
mov
mov
lods
xchg
js
mov
push
or
lds
inc
pushf
push
fcmovu
hlt
std
pop
arpl
sbb
cs
cmp
xchg
push
add
dec
dec
pop
loop
xchg
lcall
add
ljmp
addr16
fcmovnbe
shll
out
sub
xor
test
push
add
cwtl
dec
rcrl
lock
push
sub
push
adc
pop
xchg
scas
sub
or
push
xchg
loopne
xlat
and
mov
adc
pop
popf
nop
push
xchg
mov
lahf
pop
jmp
das
mov
xchg
setle
inc
and
aad
jns
lret
cmp
mov
rolb
loopne
scas
aam
movb
mov
int3
outsl
aaa
orb
push
es
fdivs
jg
sub
push
or
imul
and
mov
jecxz
and
pusha
inc
jae
jne
jno
pop
lahf
rorb
and
movsb
pusha
jge
pop
int
xor
divb
add
rcrl
shll
jle
jne
push
dec
subb
push
inc
in
call
cld
cld
mov
add
jbe
insb
lret
mov
rorl
sahf
bound
cmp
xor
jno
add
frstor
mov
mov
test
dec
push
xor
push
lret
adc
aas
mov
add
xchg
loop
mov
sub
jle
aad
sbb
outsl
hlt
call
inc
cmp
add
dec
jge
or
je
xchg
arpl
rcrl
popf
sahf
lea
mov
ror
or
xchg
xor
or
gs
adc
loop
jge
cltd
leave
fcompl
cmpsl
lods
sarl
fsubrs
mov
and
jl
int
sub
mov
xchg
pop
pop
fldt
sti
mov
or
jns
mov
stc
mov
bound
add
cs
jns
pushf
fidivl
mov
aad
ds
aam
sti
mov
sub
ret
adc
mov
dec
inc
sbb
jle
sub
mov
sbb
loope
jne
orb
sbb
add
ret
sar
mov
nop
adc
and
stc
sub
xchg
sbb
inc
jne
ret
cmp
cltd
mov
dec
aas
cwtl
daa
sub
jl
dec
sbb
mov
sbb
sahf
and
ja
sub
pop
xor
ficoms
test
call
ja
mov
lret
dec
std
fsubs
shrl
rorl
add
subl
xor
jg
push
pop
cs
or
cwtl
add
or
scas
ret
xlat
dec
inc
add
mov
adc
ja
out
inc
sub
call
sub
ret
dec
scas
sub
popf
adc
mov
sbb
jl
and
icebp
movsl
or
or
push
mov
xor
out
ja
das
ss
negl
push
adc
adc
repnz
shrb
or
inc
ret
jno
pop
add
pop
popa
adc
mov
mov
into
jnp
cmp
arpl
xor
push
jne
jle
in
pop
lea
and
ljmp
js
push
shl
ds
movsb
adc
sbb
xor
inc
lret
jb
ret
out
mov
sbb
jnp
pop
adc
pushf
inc
and
jns
mov
add
xor
pushf
push
pop
or
fmull
cmp
cmpl
cmp
scas
popa
pusha
push
jle
addr16
mov
cmp
mov
mov
fwait
in
lods
ljmp
inc
pop
jecxz
pop
adc
and
aaa
scas
xor
or
mov
and
scas
push
test
fidivrl
cwtl
int3
jo
pusha
lcall
mov
icebp
mov
call
pop
adc
sbb
dec
ror
lret
fwait
add
adc
inc
xchg
inc
iret
mov
in
jnp
add
add
or
insl
mov
nop
lds
pop
lcall
movsl
sarl
and
jl
push
and
xlat
test
pop
cwtl
lcall
lahf
mov
xor
fisubrl
hlt
add
dec
movb
shlb
push
ja
scas
sub
mull
les
push
xchg
jmp
dec
les
inc
std
add
jmp
xchg
push
jb
imul
lret
test
adc
imul
cmp
enter
and
dec
jmp
jmp
adc
sbbl
add
adc
lods
and
ret
sti
xor
or
add
incl
lea
add
adc
test
mov
lods
push
stos
cld
push
or
and
inc
sub
pop
bound
stos
or
xor
negb
outsl
adc
sub
roll
faddl
mov
cwtl
stos
cs
mov
loope
mov
imul
out
ret
jecxz
pop
setae
movsb
xor
add
lret
add
in
jno
mov
jne
add
or
and
and
mov
cmpsb
imul
or
and
shld
push
repz
xchg
cli
mov
adc
add
sbb
stos
push
cmp
mov
sub
pop
add
mov
enter
inc
lea
add
scas
push
ds
sbb
lret
rorb
mov
dec
not
dec
add
mov
arpl
pop
jnp
pop
xor
jo
jno
out
cmp
ficompl
scas
or
xor
scas
xchg
or
push
sub
es
push
mov
fcomip
fidivrl
push
nop
cmp
test
mov
add
and
push
mov
push
fdivrs
xchg
jnp
adc
loope
divb
mov
adc
and
xor
scas
jae
imul
pop
int
fcompl
or
sub
pop
mov
pop
or
movsl
sub
add
pop
sub
jne
or
or
in
sub
jecxz
test
push
xor
xchg
lret
xlat
ret
ljmp
aad
bound
repz
outsb
add
push
jne
push
insb
aas
cltd
int
xchg
fimuls
vpacksswb
mov
and
into
mov
push
jo
nop
add
dec
nop
inc
or
in
sbb
jecxz
mov
jge
mov
add
or
imul
xor
mov
cmpsl
aaa
jge
cmp
pop
inc
sbb
scas
out
pushf
or
xor
sbb
mov
popa
arpl
sub
xchg
inc
sti
fwait
inc
push
sub
and
into
cmp
ja
mov
sbb
int3
leave
fadds
ds
lea
shl
mov
or
in
es
ja
rolb
andl
dec
sub
jno
dec
imul
scas
gs
mov
sbb
push
addr16
ss
stc
dec
test
shlb
xchg
in
lcall
int3
faddl
ljmp
jg
popaw
mov
jmp
lds
mov
imul
cs
cmp
cmpsl
xor
mov
adc
push
outsb
inc
clc
stos
mov
out
mov
int3
push
dec
push
mov
sub
mov
pusha
fisubl
adc
idivb
dec
sti
out
cmpsl
or
fldcw
neg
ftst
jno
xchg
mov
iret
sub
mov
sar
xchg
jge
icebp
lret
inc
lock
into
shll
push
xor
andl
out
ret
arpl
lods
and
pop
pop
sbb
push
in
xchg
push
repnz
jnp
lahf
popf
dec
pop
mov
dec
mov
shl
sbb
jne
jl
adc
jno
push
jl
adc
cmp
jno
or
popa
lret
add
xchg
sub
scas
jp
cmpsb
bound
pop
loop
fstpt
lret
lret
xor
stos
shll
jno
jl
push
mov
cld
jb
stc
gs
cmp
mov
adc
test
add
ffreep
stc
push
mov
mov
das
test
mov
dec
outsb
mov
jle
popf
cmp
xchg
mov
nop
lret
sub
push
ljmp
sbb
das
leave
push
xchg
mov
loope
push
mov
call
xor
mov
pop
arpl
xor
cli
enter
lock
lds
xchg
das
bound
insl
inc
cmpsl
xchg
sbb
and
and
pushf
clc
jmp
cmp
pop
dec
lods
xor
sbb
cmc
inc
mov
jnp
push
jl
repnz
insl
push
ss
jge
adc
mov
xchg
or
lock
call
loopne
loope
lahf
pusha
cld
jmp
loopne
mov
dec
dec
jg
mov
aas
stos
je
aam
cwtl
sub
adc
mov
cli
mov
fs
imul
dec
mov
imul
stc
je
outsb
std
push
dec
mov
rcr
pusha
and
insb
xchg
and
rcr
cmp
or
jl
jl
push
add
ljmp
pop
call
lods
hlt
cmpsb
sarl
test
add
int
sbb
and
idiv
or
jo
inc
push
push
fdivrp
mov
jnp
testb
push
mov
pop
in
add
jo
or
adc
decl
xlat
pop
xor
test
sub
gs
icebp
sub
push
call
jb
add
shl
inc
xchg
stos
sbb
fwait
cmc
insl
mov
std
out
fildll
sbb
push
aaa
mov
xchg
leave
cmpsl
xor
xlat
js
mov
daa
lods
into
mov
inc
jp
xchg
repz
mov
pop
repnz
pop
or
and
lods
lret
out
jmp
rclb
pop
movsl
out
cmp
sbb
mov
test
inc
and
push
movsl
push
push
lahf
lds
fmulp
push
nop
aas
shl
cmc
push
int
ljmp
mov
dec
xor
cmpsl
pop
pusha
adc
scas
add
wrmsr
outsl
inc
test
mov
out
out
cwtl
movl
cltd
dec
mov
pop
int3
push
mov
adc
cltd
push
xchg
test
lock
gs
mov
nop
stos
idivb
dec
aas
jae
into
lret
xor
dec
jbe
jo
or
bound
sbb
sbb
lahf
and
dec
xchg
jle
mov
add
fiaddl
adcb
dec
sbb
test
dec
lahf
jmp
daa
call
add
imul
cmc
or
sbb
repnz
cmpsb
dec
into
mov
daa
pop
jge
rcl
fdivr
xchg
xchg
push
cltd
mov
dec
add
fdivr
pop
das
sbb
adc
cmp
out
aaa
outsl
lea
jp
icebp
xchg
fxch
add
dec
mov
jbe
inc
or
test
dec
rcll
add
xor
xchg
dec
iret
mov
lds
adc
cmp
xor
shlb
sarl
push
mov
test
lcall
inc
adc
jle
xchg
dec
inc
xchg
loop
iret
pop
mov
xchg
sahf
loopne
pushf
je
or
mov
test
push
and
jge
jbe
push
xor
sub
jne
insb
and
fsub
add
xor
pop
mov
fists
loop
lcall
paddusb
icebp
pop
jne
out
adc
push
dec
or
and
pop
jo
pop
push
aaa
inc
std
shlb
test
leave
lds
fs
and
cmpsl
idivl
jbe
add
hlt
jle
mov
adc
sbb
pop
imul
inc
nop
mov
jl
or
jmp
add
mov
pop
leave
outsb
inc
lret
jnp
js
jne
lock
sbb
mov
out
pop
jbe
pop
mul
jle
jmp
popl
mov
outsb
xor
pop
xlat
shr
mov
xor
cmp
mov
rcrl
xor
outsl
int
ds
cmp
mov
addl
cli
shrl
pop
sub
aad
icebp
subl
ds
push
jle
pop
es
roll
xchg
mov
add
mov
xor
data16
or
cwtl
subl
pop
inc
mov
repz
pop
mov
mov
adc
mov
sbb
and
mov
add
lret
in
lret
jno
and
loop
lret
sub
lock
and
add
xor
dec
sub
pop
in
les
cld
pop
sub
das
or
stos
nop
pusha
out
xor
ds
icebp
ss
ds
mov
xchg
cmp
fs
sbbl
push
decl
adc
dec
out
call
test
and
push
dec
dec
out
push
stos
and
sub
lahf
sub
ja
sub
or
hlt
mov
clc
sbb
lods
xor
loop
in
and
xchg
es
stos
test
or
pop
xorl
lahf
rorb
jg
nop
sub
and
push
int
fisttpl
adc
leave
mov
adc
daa
fsubs
pop
sti
out
adc
cmc
dec
in
popa
mov
cltd
mov
fs
mov
cmp
cmp
aad
aas
shlb
das
mov
mov
divl
add
lea
adc
nop
sub
mov
adc
dec
or
add
mov
in
mov
daa
cmp
addr16
fs
mov
mov
movsb
movsb
daa
xchg
fmuls
push
aad
xchg
cmp
inc
add
push
fldt
aas
dec
pop
adc
push
adc
or
xor
jle
mov
xchg
and
fs
inc
pop
mov
popf
test
and
fcoms
pop
icebp
aad
sub
mov
movsb
test
push
inc
repz
cmp
popf
jae
or
pop
lcall
lcall
add
or
data16
fwait
int3
not
mov
inc
sub
andl
jmp
cmp
test
adc
cwtl
or
lds
sahf
mov
int3
bound
pop
popa
ret
inc
inc
pop
mul
shlb
fiadds
testb
cmpsl
push
ds
jge
adc
jno
outsl
rclb
cmpsb
scas
mov
sub
cmovge
ss
xchg
iret
aas
dec
cltd
out
into
push
out
xchg
jmp
adc
cmc
adc
push
jg
pop
pop
adc
inc
xchg
and
and
sbb
mov
pusha
mov
inc
push
lret
pop
mov
stos
xor
daa
sbb
lret
scas
dec
cmpsl
cld
push
jbe
xchg
aam
lea
mov
gs
sbb
adc
mov
cmpsb
add
ss
roll
jl
addr16
adc
dec
nopl
lods
insb
pushf
ror
std
or
iret
lea
cli
adc
scas
pop
xor
ret
mov
addr16
sub
adc
inc
in
inc
xlat
pop
cltd
sbb
push
dec
xchg
arpl
das
into
jnp
std
fwait
mov
fisttps
push
imul
add
dec
jmp
jl
loop
scas
mov
pop
repnz
adc
shr
xchg
test
add
push
mov
shll
repnz
sahf
and
jl
cmp
lock
fimull
xor
js
fimuls
add
movsl
fildl
sti
push
mov
dec
jo
mov
or
and
and
lahf
sub
pop
int
add
js
cmp
es
das
mov
jle
or
add
je
jno
ljmp
fsts
cmp
mov
pop
fbld
div
popa
scas
out
js
rol
xlat
leave
cmp
daa
inc
jno
pop
pop
inc
sub
adc
nop
xor
stos
pop
shl
pusha
mov
fcoml
test
mov
insl
xor
mov
loop
add
jnp
mov
lret
mov
push
outsl
xchg
gs
inc
cs
mov
lahf
aas
or
rorl
sbb
add
push
pop
sbb
je
shll
loopne
stc
pop
rolb
nop
lods
scas
lea
or
cmp
daa
cld
jb
add
insl
inc
jp
lret
pop
dec
fstpt
mov
cmp
test
jne
mov
sub
subb
xchg
inc
pop
rclb
stc
adc
imul
stc
push
rorb
sub
jl
pop
mov
cli
cmp
pushl
jg
xchg
pop
test
rorl
ss
pusha
popf
negb
enter
sahf
in
mov
cld
sbb
out
lret
push
add
lahf
fldenv
stos
orl
sub
sahf
stc
push
lock
jle
lea
jcxz
or
push
stc
shlb
cmpsb
push
push
int
test
in
fimull
ljmp
sub
das
enter
call
or
test
clc
fwait
and
jecxz
add
shr
sahf
jno
inc
inc
cmp
or
lcall
and
push
jne
dec
arpl
insl
inc
dec
xchg
cmp
loop
call
xor
out
cmpsb
push
nop
push
pop
mov
loope
mov
fimull
mov
jg
jle
loope
sbb
cwtl
fcoml
mov
les
loope
push
lock
lret
add
out
and
outsb
sub
popa
jg
sarb
inc
push
pop
scas
rcl
inc
pop
ss
inc
inc
stc
insl
push
mov
or
int
xchg
data16
arpl
gs
fmuls
inc
mov
sbb
mov
xlat
aas
push
mov
xchg
push
gs
rcll
add
stos
test
icebp
enter
mov
adc
sub
jae
cltd
sub
sub
jno
mov
shll
xchg
shrb
and
sub
xchg
pop
divl
add
dec
lods
xlat
mov
in
negb
lret
adc
add
push
mov
jl
push
inc
sbb
jae
rolb
inc
mov
fwait
ret
movsl
enter
mov
scas
fnstcw
jp
sar
cmpsb
andl
aas
cli
std
pop
or
jne
pop
xchg
xchg
adc
push
push
ja
and
pop
ret
and
inc
imul
dec
sub
dec
cmc
cmp
mov
cmp
xchg
imul
jb
adc
xor
outsl
mov
xor
xor
adc
mov
cmp
rolb
xchg
cmpsb
repnz
or
movsb
mov
hlt
jle
inc
inc
clc
or
out
fildl
enter
cld
push
bound
sub
adc
inc
iret
adc
in
test
into
dec
jnp
filds
ja
push
mov
shlb
cmpsb
mov
sbb
out
and
cmp
ljmp
pop
and
jbe
add
aad
xlat
lret
mov
clc
andl
js
bound
cmp
mov
cmp
ret
push
iret
test
jbe
gs
push
andl
mov
flds
gs
pusha
sub
push
ja
pop
pop
jb
adc
rcl
ror
notb
clc
push
push
enter
jbe
push
mov
pop
push
outsb
gs
test
jne
mov
mov
out
xlat
xor
enter
lret
add
push
xor
sub
mov
mov
mov
in
ss
or
outsb
test
cltd
inc
mov
rcll
insb
xchg
enter
loopne
mov
lret
mov
cmp
divb
mov
addb
jb
adc
popf
mov
xchg
push
mov
cltd
hlt
popf
pop
fdivrs
inc
push
pop
clc
mov
lods
ret
xor
jb
push
xor
bound
inc
lret
ljmp
das
in
sub
mov
adc
jnp
mov
mov
sbb
leave
jecxz
in
or
fidivl
movsb
or
add
mov
push
push
inc
loop
in
lods
movsl
lret
or
pop
xchg
mov
lods
mov
lods
fistpll
pushf
and
fs
popf
int
dec
mov
divb
rol
inc
dec
xor
sbb
xor
test
mov
xor
add
les
stos
in
jp
out
adc
adcb
sub
dec
pop
adc
xchg
inc
dec
shrb
mov
inc
add
mov
repnz
jl
adc
cmpsb
fnstenv
cs
loopne
sub
sub
jmp
cmpl
decb
jmp
sbb
addr16
lret
sbb
push
or
mov
popf
jno
pop
cli
enter
ljmp
lret
inc
mov
iret
pop
xor
sbb
out
adc
xchg
sub
fadd
sti
push
mov
mov
outsb
add
mov
insb
out
test
jae
mov
es
adc
sbb
inc
mov
sbb
insl
imul
dec
repz
or
dec
mov
ja
pop
aam
mov
int
mov
cltd
ljmp
int
in
stos
enter
mov
daa
jbe
dec
ret
cmpsl
jp
push
scas
inc
loopne
repnz
xchg
xor
ljmp
gs
insb
pusha
leave
test
jg
mov
mov
inc
aam
subl
lds
xor
rcll
mov
je
cwtl
inc
fcomi
inc
push
in
or
dec
jnp
adc
mov
fldcw
jns
dec
rolb
cmp
nop
ror
inc
sbb
ret
out
iret
popa
insl
xor
loope
mov
in
fimull
sar
je
sbb
adcb
mov
mov
pushl
pop
jnp
jecxz
je
sbb
leave
xchg
ja
mov
jle
and
lret
jle
lds
push
sub
mov
mov
clc
gs
mov
dec
andl
lret
in
data16
and
pcmpgtd
mov
and
enter
sub
arpl
or
xor
loopne
cmp
cltd
outsl
inc
das
sbb
iret
mov
add
cmc
das
aaa
fldcw
xchg
aam
out
call
or
orl
mov
scas
sbb
dec
loope
xchg
sub
cs
lret
pop
jg
fnstenv
or
mov
cmp
aaa
adc
or
pop
sub
cmc
iret
pop
test
scas
sub
je
mov
add
out
jecxz
in
mov
and
fcomip
ja
ja
insl
cltd
xor
mov
lods
jecxz
test
mov
repnz
es
pop
les
sarl
fimuls
push
mov
pushf
add
scas
ja
popa
ljmp
dec
pusha
bound
dec
mov
pop
out
mov
outsl
or
icebp
or
insl
pop
mov
into
sbb
outsl
ficompl
pop
jmp
jns
pop
jl
leave
decl
push
inc
out
cmp
pop
mov
or
push
xor
js
add
test
stc
outsb
test
in
sub
test
lods
subb
ret
and
xchg
fildl
add
lea
mov
inc
inc
jb
sub
test
sub
sub
push
inc
or
fmuls
inc
fs
jbe
inc
and
lods
and
sub
dec
ljmp
mov
arpl
ret
test
cmp
cmpsb
inc
jbe
xor
jecxz
cmp
out
dec
push
cmpl
or
daa
das
add
jo
mov
fdivrl
jmp
xor
pop
fidivrl
adc
je
mov
and
or
cmpsb
insl
lock
mov
sub
popf
mov
sahf
add
xor
lods
rcr
jb
stc
das
xchg
mov
fistpll
dec
out
sub
cmp
mov
cmpsl
lret
pop
stos
stos
sbb
icebp
add
mov
pop
ja
dec
popa
or
adc
mov
arpl
aas
sti
cmp
fst
arpl
mov
aas
inc
adc
or
out
push
mov
or
xchg
lock
add
mov
leave
sarl
mov
cmp
dec
repz
dec
shrb
mov
mov
dec
sbb
sahf
jmp
cmp
xchg
and
add
repnz
cmpsb
and
add
rcrl
sahf
ljmp
leave
pop
in
cmpsb
sub
rcr
addr16
fmul
push
mov
jb
into
mov
push
insl
jp
pop
pop
test
dec
test
jmp
add
push
xchg
cmp
es
out
pop
test
or
aaa
pop
push
mov
outsb
icebp
add
xor
cmp
push
xchg
cld
push
je
das
sub
xchg
and
mov
adc
cmp
xor
mov
push
stos
aaa
add
mov
ror
ret
mov
xchg
mov
repnz
jg
sti
pop
ret
arpl
arpl
popf
mov
cmpsb
add
aaa
mov
xor
mulb
dec
repz
hlt
ret
test
jmp
adc
or
mov
inc
mov
cs
inc
mov
cmp
push
movl
pop
xchg
shll
adcb
adc
lock
daa
icebp
icebp
dec
sbb
mov
mov
test
push
pop
jle
iret
stos
sub
movl
inc
sar
and
fildll
jp
xchg
scas
pop
mov
push
sub
cltd
or
cli
data16
mov
mov
cwtl
scas
or
jp
sbb
sti
iret
test
push
push
mov
aas
sbb
scas
push
jne
imul
sbb
push
cmpsl
cmp
aaa
xor
std
adc
ret
xchg
xor
insb
xchg
mov
cs
xor
cmpsb
mov
mov
jge
jae
add
call
out
lret
mov
out
insb
mov
mov
dec
imul
inc
xor
lcall
xor
inc
mov
xchg
mov
or
push
in
addb
repz
das
loope
push
fisttpll
inc
and
adc
adcb
or
dec
lods
add
mov
inc
scas
aas
iret
test
in
xchg
xor
out
jmp
or
test
jbe
and
sub
sarb
jbe
outsl
ret
sbbb
dec
push
or
cmpl
mov
test
pop
adc
cmpsl
imul
into
push
jns
mov
sbb
jl
out
gs
inc
data16
dec
pop
pop
push
das
dec
lods
push
adc
test
out
ja
push
cmp
add
mov
out
lock
icebp
push
mov
mov
in
cmpsb
aam
jb
mov
je
pop
aas
dec
push
inc
xchg
loope
jnp
repz
sbb
mov
imul
in
loope
mov
pop
cs
mov
push
adc
mov
jmp
aam
ds
repnz
mov
and
cli
add
mov
scas
mov
stos
aad
sbb
and
inc
push
lahf
fidivs
mov
adc
pop
push
inc
outsl
mov
gs
push
sahf
divb
jg
sbb
cwtl
inc
push
lea
sysexit
loope
mov
jecxz
int
cld
shr
cs
lret
jp
das
js
or
popf
sub
clc
jae
scas
jecxz
push
in
pop
cmp
in
inc
mov
arpl
adc
adc
jl
pop
incl
mov
into
scas
cmp
xchg
cmp
stos
imul
test
push
out
push
test
cmp
push
lret
sbb
push
adc
cmp
inc
addr16
scas
popa
jge
ljmp
pop
pop
mov
push
fstpt
or
push
sbbb
leave
mov
xor
mov
fisubrs
movsb
cmpsb
inc
xlat
fdivl
pop
shlb
add
mov
in
jle
jno
pop
jae
and
lods
inc
xlat
mov
scas
fidivrs
pop
cmp
cmpsl
into
sub
add
mov
nop
mov
sbb
in
push
sarb
sub
mov
mov
add
mov
adc
jo
hlt
adc
jne
inc
and
cmp
fwait
mov
push
cld
mov
call
sbb
sub
or
sbb
cmc
add
je
popf
sub
xchg
mov
or
push
pop
repz
mov
rcl
jbe
xchg
sub
popf
mov
out
xchg
ret
sbb
sbb
ss
xor
cmp
xchg
and
fwait
mov
popf
jecxz
je
xchg
ja
mov
jge
lahf
dec
cli
sub
inc
pop
insb
inc
loop
lahf
jo
xchg
enter
adc
cmp
add
test
or
xchg
pop
insl
push
adc
xor
and
das
xor
je
xor
ret
push
iret
lret
push
add
aad
sahf
fst
pushf
mull
js
add
xor
js
mov
mov
loope
lahf
and
xlat
pop
into
es
jecxz
jp
inc
sub
test
addr16
insb
mov
dec
cmpsl
cmp
lret
fnstcw
pop
shrl
or
and
jl
popf
rorl
je
mov
fstpt
test
scas
xor
pop
jae
pop
dec
jno
lods
mov
call
or
dec
fnstsw
jle
mov
shl
loope
push
scas
insb
pop
test
push
xor
cmp
dec
clc
data16
mov
int
xchg
push
sbb
push
mov
pop
push
mov
dec
push
sub
ja
and
cmp
dec
fwait
dec
loop
jb
jbe
test
divl
dec
add
mov
xchg
movsl
push
ds
call
inc
and
pop
sbb
gs
sub
mov
inc
loop
ljmp
loop
leave
xchg
scas
test
mov
cmp
jmp
rol
test
mov
fs
pop
inc
mov
xor
jecxz
aam
js
pop
stos
ljmp
dec
iret
nop
xlat
dec
pop
clc
roll
jle
js
gs
scas
cmp
pop
mov
jne
xchg
xchg
xchg
mov
sti
dec
and
pusha
lcall
jns
mov
mov
gs
shll
push
pop
add
jl
adc
popa
les
lahf
xchg
xchg
movsb
or
inc
cltd
jno
test
imul
jmp
or
mov
data16
lock
jg
ficoml
xor
adc
and
imul
cwtl
pop
mov
push
sub
outsb
xor
and
mov
loope
imul
push
adc
mov
dec
cmp
jle
xchg
cmp
push
fcmovne
or
mov
mov
rcll
inc
decl
hlt
push
sbb
xchg
adc
sti
sub
push
xor
rcrb
adc
jmp
jle
movsb
jg
test
cmc
pop
pop
js
dec
mov
sbb
mov
in
or
cmp
jg
int3
lock
dec
adc
inc
xor
negl
mov
adc
mov
fsubrp
jo
dec
cmp
adc
test
rorl
sahf
xchg
bound
sub
movsl
into
iret
mov
mov
movsb
test
adc
out
imul
mov
movsl
ja
stos
rcr
lret
mov
pusha
inc
adc
mov
je
push
outsb
mov
sub
push
popa
mov
cmp
aad
xchg
repnz
fdivrp
push
popl
jmp
dec
addr16
pop
mov
lret
inc
or
add
fadd
adc
cld
and
andb
xchg
push
push
aaa
sarb
jg
std
or
subb
int3
jns
mov
orb
addr16
pop
hlt
push
daa
dec
jmp
pushf
loope
mov
xlat
sahf
lds
int3
pushf
stos
jnp
push
add
fs
push
aam
ret
aas
fiadds
aam
jns
in
lods
lods
aaa
sub
leave
and
lods
es
or
inc
push
pop
dec
add
mov
out
inc
mov
xchg
scas
push
lods
insl
xchg
push
xchg
or
mov
xor
xor
jo
incl
dec
sti
popl
sub
and
fildl
test
pop
jg
xchg
sub
aaa
xor
out
inc
push
cmp
push
stos
icebp
cmp
and
sbb
push
std
and
out
inc
addl
cmp
cs
test
out
orb
cmp
dec
push
mov
loope
dec
and
aas
push
xchg
popl
xchg
shl
mov
ss
adc
sbb
aas
ljmp
imul
inc
flds
sub
test
and
mov
fmull
cmpsb
jecxz
add
push
pop
mov
inc
popa
imul
lcallw
mov
popf
loope
out
inc
cwtl
push
leave
adc
ror
mov
and
jmpw
pop
and
adc
cwtl
xchg
or
xchg
push
xchg
jp
adc
fnstsw
cmp
xchg
mov
xchg
sbb
int3
jne
lods
inc
outsl
pop
pop
loopne
pushf
push
or
lahf
xor
fstl
push
cs
fwait
in
adc
pop
push
mov
cld
push
mov
jae
or
jp
inc
in
les
mov
or
push
js
lahf
rclb
mov
jmp
push
pop
mov
pop
pop
test
subb
fiaddl
push
jns
rorl
pop
js
jl
iret
sbb
dec
push
incl
out
add
xchg
out
inc
das
daa
push
pop
rorl
insb
scas
lods
pop
inc
loopne
xchg
test
mov
movsl
sbb
lcall
inc
jns
or
add
imul
insb
mul
lods
dec
ret
jmp
stc
push
pushf
imul
sub
test
xchg
je
dec
mov
es
mov
popf
adc
lahf
ret
sahf
repz
cltd
int
mov
pop
cmp
mov
popa
lea
hlt
or
push
inc
mov
jbe
scas
and
mov
jo
or
rcll
jp
adc
cmc
add
and
cs
idiv
push
jns
insl
pusha
or
add
adc
pop
lods
repz
lcall
fstpl
adc
jg
lock
outsl
fsubp
sbbl
mov
sti
or
inc
outsl
cmc
je
lods
test
int
jmp
inc
fs
daa
pop
mov
push
sti
dec
and
add
daa
fmull
ret
inc
je
or
popf
jp
pop
jmp
out
jnp
cmp
mov
add
in
clc
push
pop
inc
sub
dec
aaa
pop
xchg
xchg
and
or
das
enter
sbb
aas
mov
hlt
adc
cmp
ljmp
pop
cmp
cmp
and
jbe
inc
clc
rcrb
push
hlt
mov
inc
pop
push
insl
lods
adc
adc
mov
inc
in
sub
std
mov
sub
or
xchg
repz
xchg
and
sbb
xor
sbbl
sbb
inc
psrad
repnz
movsl
cmp
frstor
pop
mov
push
cwtl
or
insb
jns
dec
jo
fidivs
sub
add
mov
das
add
xchg
adc
mov
mov
cmp
dec
add
stos
in
test
jle
fsubs
push
add
push
adc
and
and
inc
mov
and
pop
sbb
or
aam
fistpl
push
mov
loopne
mov
xchg
ret
dec
and
xchg
fmulp
inc
or
jno
pop
jbe
lea
sbb
popa
pop
fs
cltd
xor
or
int
test
jo
lret
mov
mov
push
push
fisubrs
pop
jne
add
cmp
in
xor
aaa
es
push
fwait
insl
mov
scas
add
mov
aaa
lret
les
out
cwtl
inc
insb
sub
lret
clc
mov
sbb
mov
shrl
fistps
imul
bnd
sbb
or
push
jmp
jns
aas
aam
adc
negl
fs
sahf
jge
insl
adc
lret
mov
int
into
dec
or
cmp
rcrb
push
cltd
sub
dec
add
jle
push
into
inc
mov
pop
int3
cmp
mov
xchg
dec
pop
negl
rclb
in
mov
mov
xchg
iret
add
punpckhdq
xchg
inc
jl,pn
sar
jp
or
cmp
mov
in
fiadds
xor
aad
mov
je
lret
adc
insb
std
out
outsb
pop
mov
test
loope
push
jmp
test
jg
and
movsb
or
stos
lea
cli
add
xor
or
nop
xchg
ror
dec
add
arpl
insl
add
shlb
cmc
jmp
stc
or
cld
jbe
mov
rorb
aaa
pop
cs
cmp
in
stos
sarb
out
stos
push
int
repz
inc
outsb
repz
push
les
out
in
mov
push
mov
popf
test
adcl
xchg
add
xor
pop
aad
cmp
rorb
lret
cmp
outsl
test
lods
mov
outsb
add
and
and
iret
inc
add
pusha
xchg
imul
add
rclb
xor
lods
ja
mov
inc
mov
dec
push
insb
and
push
outsl
push
pushf
xor
push
inc
int3
sub
xchg
ss
pop
daa
jb
add
push
dec
imul
insl
mov
cs
orb
imul
jmp
mov
add
push
inc
mov
sbb
mov
mov
das
cmp
pushw
es
test
jnp
sbb
adc
test
add
push
xor
pop
iret
inc
scas
lods
dec
xchg
mov
fidivrs
shl
xor
add
and
add
or
pop
or
push
js
in
xor
pushf
cmp
jae
iret
xor
pop
jnp
orb
push
add
lock
call
adc
clc
xchg
jmp
mov
pop
xchg
insb
xor
mov
mov
loopne
ljmp
mov
pop
inc
movsl
push
fcoml
in
cli
add
fsubl
in
ljmp
push
xchg
insb
sub
iret
cltd
lods
jne
cmp
lea
xchg
js
and
decl
sbb
and
outsb
pop
movsb
add
int3
jnp
inc
inc
and
inc
sbb
in
add
jae
popl
fidivrs
pop
cmc
push
js
enter
jae
add
mov
xor
enter
sub
out
pop
ret
sbb
jge
ljmp
dec
outsl
sar
movsb
call
loop
fwait
aam
fxch
outsl
int
popa
in
out
cmp
sub
sbb
iret
jg
push
cmp
sbb
push
push
mov
xlat
out
cmp
mov
xor
lds
xchg
jge
in
mov
xchg
cmpsb
cltd
pusha
divb
push
inc
fwait
push
cld
adc
rcrb
sahf
cmc
dec
popa
inc
push
fnstsw
jp
jmp
fstps
xor
in
sub
cltd
pop
addr16
movsb
in
mov
add
dec
clc
dec
mov
pop
sti
and
std
leave
iret
outsb
shlb
cmpb
test
pop
jnp
pop
cli
arpl
cmp
dec
lods
fs
xor
shll
out
inc
jns
aas
sub
adc
inc
clc
aaa
aas
aam
popl
sbb
fwait
cmc
jg
imul
inc
insb
in
outsb
aas
push
sbb
faddp
add
mov
push
push
mov
mov
je
mov
cmp
jb
das
cmp
sbb
mov
or
leave
enter
lret
testl
mov
es
jne
cli
idivb
in
js
dec
pop
mov
outsl
loopne
int3
js
jmp
sbb
mov
mov
cmp
sbb
cmp
push
fwait
xor
ret
and
movsb
add
movsl
adc
sub
lods
stc
push
testb
iret
mov
test
out
mov
pop
add
out
jbe
out
std
call
cmpsl
insl
push
jecxz
ljmp
js
fwait
pusha
fdivrs
rorb
subb
in
rorb
add
xlat
int
inc
or
test
cmpsb
outsb
adc
jmp
cld
out
mov
in
pushl
cmp
or
or
dec
call
cltd
adc
nop
sub
mov
or
fisttpl
data16
cmp
test
and
push
pop
inc
mov
test
inc
add
and
adc
idivl
lods
sahf
push
ja
out
mov
add
dec
sub
addr16
lods
jo
jecxz
push
out
cmp
cmp
adc
inc
sub
fisttpll
jbe
pop
dec
stos
cmpsl
jbe
jbe
test
or
inc
call
into
out
sub
cltd
shl
inc
or
stos
xor
sahf
scas
daa
jae
incl
ret
inc
jg
cli
pop
or
xchg
jmp
adc
and
sub
adc
test
sbb
sub
das
pop
xchg
xchg
aaa
or
or
loope
inc
cli
dec
mov
cmp
mov
outsb
mov
int
ljmp
scas
ljmp
pop
mov
sbb
out
lods
pop
inc
sbb
jecxz
enter
xorb
xchg
jmp
jne
sub
xor
fmulp
shrl
mov
aaa
jmp
adc
mov
sbb
xor
mov
jae
ss
adc
mov
cltd
xchg
shrb
sbb
sahf
push
popa
popa
mov
out
dec
mov
in
and
or
add
iret
jl
pop
mov
cmp
sub
pop
mov
and
mov
in
dec
push
movsl
inc
cmp
nop
add
or
jecxz
lret
addb
shll
ja
sbbl
dec
add
jge
xor
add
inc
pop
movsb
shr
add
push
xchg
mov
sub
cmp
adc
push
push
sub
sbb
push
scas
imul
insb
mov
int
mov
mov
sbb
test
push
inc
fisubrs
loopne
push
mov
dec
push
mov
adcb
popa
cli
jae
roll
iret
out
push
decl
mov
hlt
rcrb
pop
add
pop
dec
sub
xchg
dec
popa
je
or
mov
jecxz
cmp
fidivl
xchg
loopne
or
xor
test
and
rcr
xchg
xchg
sub
lret
push
sbb
test
mov
mov
scas
cmp
fistl
les
scas
dec
add
leave
mov
je
cmp
xchg
js
pop
popf
pop
or
xor
scas
xorl
outsl
pop
or
dec
xchg
sbb
out
inc
fstpt
rsqrtps
adc
je
mov
push
cmp
mov
cmp
lea
into
lcall
dec
insb
je
push
lds
sub
cmp
cmc
scas
je
sbbb
xor
stos
mov
les
xchg
mov
ljmp
lret
sarb
lods
out
rcr
rcl
or
flds
mov
xor
dec
and
jg
or
mov
mov
mov
int3
icebp
xor
cmp
dec
sbb
inc
jne
and
xchg
orl
mov
cli
into
jb
ds
aad
sub
repnz
pop
mov
xchg
dec
adc
aas
cltd
fcmovnbe
out
xchg
pushf
in
mov
rol
inc
lret
int
nop
add
stos
mov
push
lret
xchg
dec
pop
jno
in
lds
les
sti
xchg
pop
movlhps
les
aad
adc
sub
int
fisubrl
cmpsb
cmp
lea
push
cmc
mov
cld
ljmp
push
mov
dec
int3
mov
int3
into
pop
xchg
sub
ljmp
icebp
pop
mov
addr16
arpl
push
ret
js
cld
adc
push
push
cmp
and
or
into
mov
sbb
bound
sub
fdivrs
cld
in
test
mov
and
push
mov
push
xor
mov
jp
sbb
addr16
cli
adc
jl
cmp
sub
mov
lret
sub
lock
outsl
fsubrl
sbb
mov
rcrl
and
pop
mov
mov
lods
les
xchg
addb
sbb
stc
scas
push
lret
dec
xor
jae
pushf
daa
cld
xor
mov
cmp
push
xchg
dec
loop
pop
addr16
adc
test
inc
push
xchg
jns
jmp
dec
out
jg
data16
daa
popf
pop
xchg
js
pop
data16
int
fidivs
and
mov
mov
pop
sub
aam
les
cli
ficompl
inc
pop
and
out
cmc
sbb
out
in
sbb
xor
lods
mov
into
test
out
gs
enter
cmpsb
inc
aad
mov
scas
mov
xchg
arpl
data16
xor
pop
je
sbb
subl
ret
push
hlt
push
add
jmp
adc
test
fldenv
pop
imul
add
cmc
leave
xchg
shlb
jns
xor
mov
sbb
call
xor
filds
sti
cmpsl
popf
fcmovbe
mov
icebp
xchg
iret
mov
and
je
and
xor
dec
xchg
test
clc
add
dec
stos
out
cmp
inc
add
push
aas
dec
in
jl
xchg
aas
dec
or
add
mov
mov
out
leave
xchg
sbb
add
ljmp
lret
in
mov
bound
jecxz
ret
cmp
cmc
sbb
dec
jg
pop
pop
or
std
push
inc
mov
loopne
ret
bound
sub
dec
or
pop
imul
loope
lds
test
and
mov
push
popa
dec
jb
xor
xorl
sub
pop
and
and
fidivl
out
cmp
in
enter
add
dec
xchg
lret
lahf
and
das
mov
sbb
fdivrs
add
int3
loopne
pop
fcomip
cmp
test
jo
push
fnstcw
into
insl
dec
icebp
sbb
int3
cld
xchg
gs
pop
in
mov
movsb
cmp
aaa
jno
push
ficomps
mov
jo,pn
jns
pop
xchg
jg
xchg
jae
xorl
mov
out
jge
mov
pusha
in
inc
or
ret
adc
stos
or
adc
mov
dec
lret
jge
loope
push
leave
jg
shl
aam
fs
or
into
push
les
sbb
movsb
pop
pop
movsb
les
mov
negl
xor
sbb
aam
mov
subl
sub
nop
insb
rclb
scas
loop
dec
lock
ja
mov
test
mov
int3
push
andl
dec
push
inc
addr16
movsl
xchg
nop
test
jp
into
lcall
sbb
daa
pop
xchg
int
or
inc
adc
xor
mov
stos
lahf
hlt
cltd
or
or
inc
idivl
cmp
xor
nop
es
jae
jg
out
icebp
mov
pop
repz
adc
add
push
and
or
jo
es
cltd
mov
jl
pop
leave
test
out
add
mov
sarl
push
mov
scas
or
cmp
mov
stos
leave
aam
push
daa
aas
mov
jo
notb
dec
mov
fwait
imulb
addl
mov
xchg
or
inc
gs
jno
push
mov
into
pop
mov
enter
int3
jne
fldcw
adc
inc
in
xchg
pop
inc
icebp
scas
jmp
cmp
insb
or
mov
lret
pop
imul
and
add
insl
adc
imul
xorb
add
cmp
jo
in
mov
pop
fs
cmp
and
or
mov
cmpsl
jmp
rcrb
sbb
fiadds
adc
jmp
or
and
pop
mov
iret
jg
ret
repnz
fstpl
lods
dec
cmp
push
push
xor
mov
pop
iret
jle
fcoml
fs
aam
fstpt
ret
sbb
subl
outsb
mov
pop
mov
and
sbb
mov
dec
mov
call
int3
jge
adc
int
pop
sub
cs
aam
xchg
push
push
push
push
shrb
cltd
pop
lea
pop
insb
mov
lds
push
add
jo
lds
adc
xchg
imul
fsubrl
scas
mov
push
aam
cs
ss
cmpsl
stos
out
out
or
cld
push
push
fbld
fsub
cmp
mov
jo
dec
test
mov
xchg
mov
stos
outsl
jle
outsb
jmp
cmc
enter
lds
pop
dec
sub
xor
rcrl
cmp
push
pop
or
fiaddl
in
testl
mov
leave
ljmp
mov
sub
and
pop
shld
dec
into
jmp
sahf
imul
loopne
xchg
xchg
dec
popf
scas
lret
and
xor
ja,pn
push
das
dec
xor
inc
or
icebp
fwait
mov
outsl
js
ds
xchg
mov
inc
mov
sete
hlt
nop
xor
mov
icebp
cmpsb
pop
jge
mov
push
mov
xor
mov
lcall
dec
bound
sub
aas
das
mov
cltd
inc
lock
dec
push
pushf
fxch
add
pop
xchg
scas
and
sub
clc
jge
subb
mov
fwait
adc
jb
psubusw
dec
inc
or
aas
jl
shlb
jle
fistpl
inc
in
mov
in
lock
fldt
jmp
mulb
mov
sbb
scas
add
repnz
jl
scas
add
add
insb
mov
mov
cmp
xor
sbbl
jl
and
sbb
push
xchg
push
inc
sbb
mov
adc
mov
inc
mov
xor
cmp
inc
in
inc
stos
fisttpll
dec
ret
sub
cmp
adc
fsubrp
out
adc
sbb
std
in
dec
cmp
test
or
add
xor
in
pop
int3
mov
jp
ja
in
mov
loope
in
mov
fcomps
mov
cmp
repnz
add
pop
pop
stos
bound
adc
add
pop
push
push
push
sub
pop
push
mov
adc
xor
lock
enter
push
outsl
insb
and
sub
aaa
cmpl
inc
fldcw
or
iret
es
dec
push
mov
faddp
xor
xchg
pop
notb
insb
int3
inc
divl
dec
std
dec
pop
push
ja
addl
out
mov
xchg
xchg
aad
lds
rcrl
cmpsl
mov
lock
jns
sti
ljmp
fistpl
xchg
bound
mov
or
mov
jge
dec
cmpsl
pop
sub
cmp
xchg
or
inc
inc
outsl
ret
lcall
adc
push
repnz
mov
fisubs
jmp
fcmovbe
outsb
aad
out
test
lods
cmp
jmp
dec
mov
orl
sub
lods
sbb
sub
fnstsw
push
cmpsl
xchg
add
addl
test
clc
ja
mov
jae
shlb
mov
add
and
mov
add
imul
adc
out
sbb
dec
and
es
cld
ds
les
es
or
and
jns
rclb
test
jp
imul
popf
and
inc
push
pop
jmp
lret
mov
jl
mov
rcll
adc
xor
mov
push
add
cwtl
cli
push
lea
xchg
je
and
push
xchg
xlat
pop
js
cmp
mov
mov
mov
int3
pusha
dec
cli
adc
movsl
mov
aam
jne
test
jb
cmpsl
push
inc
mov
mov
dec
cmp
inc
ret
lock
jg
sub
xchg
mov
xchg
pop
or
repz
push
popf
cmp
sbb
fnstenv
cmp
xor
mov
xlat
imul
mov
cmc
pop
pop
xchg
sti
rcl
cwtl
lods
or
add
mov
or
mov
xchg
sub
mov
add
cwtl
pop
insb
dec
push
add
addb
jnp
bound
mov
aad
decb
inc
cmpsb
xchg
push
iret
push
pop
jbe
or
scas
sbb
sub
adc
mul
cmpsl
jne
mov
hlt
ljmp
iret
sbb
pop
cmp
mov
inc
mov
rcll
mov
dec
sbb
sti
pop
test
push
jp
aas
add
ja
icebp
add
xor
icebp
shlb
dec
cmp
cmpsl
inc
loop
jl
sarb
xchg
push
leave
and
idivb
mov
xor
std
jmp
enter
inc
rcr
call
fists
out
enter
sub
inc
call
push
xchg
out
cmp
out
incl
xor
in
push
sbb
lahf
loope
das
cmc
lock
enter
sub
sti
push
cs
out
mov
imul
push
or
dec
ja
into
fisubs
loopne
mov
cmp
ror
add
insl
jne
shlb
leave
push
sub
dec
negb
xchg
cltd
std
fmul
xchg
aas
dec
mov
fdivs
push
ljmp
ljmp
mov
and
loop
enter
loop
fcmovnu
lahf
add
mov
cmpl
mov
out
jno
pop
nop
clc
pop
xor
dec
push
mov
loope
pop
mov
or
jmp
mov
sbb
fs
clc
sbb
or
and
lret
adc
adcl
cmp
rclb
dec
sbb
bound
cmpb
inc
jp
sarb
aam
incl
adc
mov
in
and
push
inc
loope
cmp
and
or
cmc
lock
loopne
loope
xor
mov
data16
iret
jp
stos
mov
in
iret
scas
loop
in
mov
mov
test
sahf
lds
jle
fs
mov
jl
das
js
test
jns
aaa
aaa
test
cmp
lods
ficomps
je
testb
jae
or
aam
cmp
or
je
rcll
add
pop
mov
mov
stos
dec
mov
xchg
ljmp
ja
mov
cmp
js
adc
or
jo
inc
jecxz
push
mov
sbb
mov
fmul
jae
mov
inc
mov
clc
repnz
jp
hlt
mov
dec
add
loopne
jge
xchg
push
insl
jmp
jne
push
shll
ljmp
or
sbb
loopne
ror
push
pop
ljmp
mov
fsubrs
mov
pop
in
jp
adc
adc
push
pushf
adc
push
aas
call
dec
pop
mov
cltd
out
push
imul
loop
enter
push
rclb
mov
and
mov
xchg
cmp
sbbl
sbb
mov
xchg
dec
dec
jno
lret
jo
push
jge
jecxz
jbe
lods
xchg
mov
add
in
test
sub
mov
jmp
jns
popa
sbbb
inc
lahf
mov
xor
lds
out
loop
adc
jge,pn
das
add
cmp
lea
dec
mov
xchg
pop
loopne
xlat
and
rcl
cmp
jmp
add
cli
movsl
outsb
xchg
cmpsl
mov
xchg
ret
dec
les
pop
push
sbb
mov
mov
inc
subb
jecxz
mov
push
and
jmp
xchg
shlb
daa
push
sub
cmpsb
arpl
and
ret
xor
enter
xor
and
inc
cmpsl
test
out
push
pushl
push
test
lea
je
lods
cmpsb
lods
sub
fst
xor
shll
jnp
push
fnstenv
stos
cs
xchg
test
rol
sub
xchg
add
xchg
sbb
push
lds
mov
mov
cmp
xchg
sbb
inc
cwtl
imul
adc
inc
incb
andnps
aam
add
enter
pop
lods
mov
adc
inc
lret
test
mov
mov
mov
pop
pop
push
sub
mov
mov
jo
push
cld
cmp
imul
adc
out
push
in
gs
in
sbb
jp
pusha
inc
aas
cmp
dec
push
insb
out
sbb
jecxz
add
adc
inc
xlat
cmp
adc
testb
das
pop
in
mov
sbb
jle
and
jbe
push
nop
mov
cmpsb
in
xchg
pop
mov
imul
xor
push
jo
inc
xor
stos
adc
inc
outsl
dec
sub
sbb
jecxz
xlat
ret
icebp
or
mov
es
mov
xchg
aaa
cmpsl
inc
mov
scas
cwtl
dec
bound
jb
insl
lds
mov
jb
stos
std
add
jbe
notl
out
sarb
and
stos
mov
loopnew
push
cwtl
ja
out
xchg
pop
xlat
dec
cmp
in
divb
inc
lods
jge
scas
jne
hlt
or
inc
cmpsl
add
or
jo
bound
xor
shl
add
mov
inc
dec
shrl
orb
clc
push
sti
sbb
sbb
mov
cli
jns
out
lods
in
adc
and
mov
jnp
jmp
lret
sbbb
jl
lea
imull
xor
aas
cli
leave
pushf
sub
and
jns
aam
jmp
xchg
pop
rclb
inc
mov
jo
add
sahf
push
add
sbb
loopnew
fldenv
dec
add
stos
mov
les
or
mov
cmp
imul
mov
imul
jns
in
sbb
jmp
cmp
mov
xorb
push
sahf
cld
aas
xor
cmp
test
cmp
inc
je
or
imulb
out
adc
into
inc
sti
jle
cld
xor
mov
sub
test
mov
add
push
scas
stos
insl
jge
and
fmulp
lock
ds
rcrb
push
cmp
lock
mov
aas
push
fidivrl
push
sbb
push
cmp
add
sbb
add
xor
mov
jo
jae
jl
push
xchg
jg
fadds
retw
outsl
lcall
fdivs
jns
test
inc
jle
jb
mov
out
orb
out
orb
fdivrs
lcall
mov
sahf
dec
in
test
push
enter
adc
mov
cmp
jno
je
mov
jnp
sbb
push
mov
jp
or
cmp
int
jle
inc
xchg
xchg
inc
test
push
mov
shr
or
pusha
lret
dec
or
sti
push
xchg
xor
adc
push
xchg
mov
adcl
stc
jmp
aas
stos
and
inc
ds
testl
pop
xor
lods
xor
cmpsb
push
mov
out
push
push
mov
jns
in
push
in
hlt
loop
lret
sub
mov
sbb
movsl
mov
in
gs
scas
sub
or
ret
cmpsl
repnz
inc
add
idivl
aad
popa
push
pop
je
movsl
je
icebp
dec
les
mov
call
jg
into
pop
sbb
sub
and
jnp
mov
call
and
outsl
inc
dec
and
add
add
mov
xchg
mov
mov
je
arpl
pop
rcrb
jo
mov
scas
movsl
fiaddl
aaa
ss
pusha
xchg
xlat
es
xchg
mov
divb
mul
mov
mov
sub
cmc
testl
jne
aam
shrl
push
push
xor
pop
adc
int
gs
rol
sub
jp
xchg
mov
jno
xorl
imull
sahf
push
pop
cmc
repz
incb
jo
jecxz
inc
ficoms
insb
sbb
adc
adc
mov
dec
rolb
mov
arpl
jp
sub
adcl
stos
xchg
fisttpll
repz
mov
rcl
push
xchg
leave
loopne
sbb
mov
dec
jecxz
adc
mov
stc
roll
int
lods
shrl
cmp
xchg
sub
sbb
mov
add
xor
sahf
loop
movsl
sbb
ds
filds
icebp
add
popa
loope
mov
xor
hlt
fisttps
mov
sbb
jno
lods
sub
mov
pop
adc
std
imul
inc
in
inc
aad
dec
jno
cmp
sbb
pusha
dec
inc
ds
stc
inc
sub
mov
adc
xlat
xchg
mov
sbb
add
gs
rorb
cmp
movsl
pop
inc
sub
mov
push
sub
and
mov
mov
mov
shll
add
es
xchg
xchg
pop
push
arpl
adc
adc
pop
aas
in
push
std
insb
rcll
mov
imull
ret
lret
sbb
jne
sti
mov
int3
inc
leave
inc
jp
mov
dec
pushf
push
dec
sbb
rorb
test
jae
loop
sarb
nop
mov
mov
stos
dec
dec
push
cltd
mov
outsb
imul
and
add
mov
das
jnp
mov
test
inc
out
cmp
or
push
add
js
lret
pusha
sub
push
fistpll
sahf
sbb
adc
fcmovnu
daa
js
in
pop
cmp
ror
leave
push
inc
cmp
adc
rcll
push
lods
cli
clc
jmp
and
repz
push
jb
fucomi
sbb
lahf
sbb
push
adc
mov
das
mov
ja
dec
loop
cmp
xlat
push
pop
add
inc
inc
xor
pop
call
inc
or
popa
jge
mov
test
aad
enter
jge
pop
jmp
mov
stos
aam
out
push
mov
cmpsl
pop
out
lret
mov
or
inc
mov
fdivp
div
and
dec
inc
sti
into
enter
sbb
arpl
les
push
cltd
cmp
dec
decl
pop
pop
sahf
cmpb
mov
in
cmp
data16
ljmp
loopne
sbb
int3
cmp
inc
iret
mov
xchg
and
sbb
mov
sub
movsb
xchg
sub
cmp
in
push
mov
jbe
loopne
ljmp
rcll
or
hlt
lods
test
scas
notl
inc
lret
push
sbbl
jns
test
and
add
xrelease
mov
push
jg
jns
fmuls
jne
push
fnstsw
sbb
je
call
lahf
cmp
fstpl
mov
pop
jecxz
push
sbb
sub
mov
cmp
or
sti
testb
leave
mov
imul
push
mov
ret
lea
pop
stos
loope
adc
lds
insl
xor
ja
pop
sbb
mov
sbb
dec
js
repnz
mov
nop
mov
xchg
mov
add
outsb
cmpsb
dec
cmp
or
iret
ds
aam
in
mov
aam
jle
adc
push
inc
sarb
orb
sti
adc
cwtl
inc
imul
ja
pop
and
sbb
dec
imul
imul
and
push
adc
pop
mov
repz
sub
mov
je
pop
inc
add
fcomps
lret
xor
or
out
shrl
or
ret
push
lahf
xchg
push
sbb
mov
scas
test
and
pop
jmp
mov
xor
stos
test
jge
mov
push
jb,pt
sub
push
mov
sbb
lcall
mov
xlat
cmp
mov
push
mov
es
rcll
call
xchg
bound
inc
in
xor
xor
jecxz
pop
rorl
out
mov
test
mov
cmp
jnp
lods
sti
ficompl
or
or
push
xor
add
jnp
mov
das
ret
cmp
inc
inc
std
iret
lods
inc
mov
xor
call
roll
repnz
sbb
adcb
pop
add
inc
xlat
xchg
fstpt
sub
lock
stc
sub
xchg
jne
mov
xlat
push
push
xchg
test
xchg
mov
ljmp
sub
insb
xchg
sahf
inc
jg
push
add
aaa
jg
or
push
in
sbb
sahf
mov
push
pop
loopne
xor
sbb
into
dec
mov
jle
xor
lods
mov
push
add
sub
js
mov
cmp
and
sti
cwtl
and
outsb
ret
and
lahf
adc
dec
xchg
sbb
sahf
movsb
inc
mov
sub
out
popa
cmp
test
mov
imul
fdivrl
outsb
out
cwtl
pop
int
test
dec
dec
lret
jecxz
test
mov
dec
imul
es
add
mov
ds
or
insl
sub
stc
lahf
sbb
jae
mov
jae
scas
lock
jo
into
and
mov
mov
popa
mov
or
ljmp
cmp
out
outsb
xchg
push
cwtl
pop
mov
mov
dec
ret
sbb
inc
aam
test
stos
push
lcall
mov
out
dec
sahf
push
addb
mov
popf
aaa
dec
mov
sahf
mov
cs
int3
fldenv
aas
pushf
loop
xchg
mov
xchg
sub
xchg
nop
repz
outsl
adc
sahf
dec
jne
cmp
ds
addb
sub
jae
xchg
imul
ss
dec
repnz
test
shrl
dec
jl
push
xor
pop
sbb
incl
ja
test
ljmp
js
cmp
stc
nop
pop
pop
popf
loop
fldenv
les
movb
dec
aas
fwait
std
xor
mov
aaa
mov
xchg
cmp
ss
ficoml
cmp
or
sub
inc
mulb
mov
nop
and
push
int3
pop
push
mov
and
sub
lock
and
lods
push
cmp
mov
mov
lea
dec
int
lea
aad
out
jns
cwtl
push
loop
mov
xor
cmp
pop
in
cmc
adc
push
add
mov
aaa
loopne
lcall
dec
mov
dec
inc
push
and
add
lcall
mov
jb
fdivrl
jge
pop
stc
cmp
adc
lea
cmc
subl
int
lret
aaa
dec
cmp
jbe
adc
add
adc
out
mov
inc
xchg
pusha
mov
mov
sub
loope
imul
adc
ret
cmp
stos
nop
aas
movl
push
stos
movsl
lock
push
insb
mov
push
pop
pop
insb
out
pusha
sub
sarb
outsb
lret
mov
add
ja
pop
jnp
jnp
mov
dec
pop
mov
lock
cmp
mov
inc
mov
pop
rcll
out
mov
xlat
xor
add
test
jae
mov
push
test
inc
jb
or
mov
ss
jno
addr16
and
xor
mov
push
jo
dec
jne
push
aad
mov
xor
imul
cmp
out
fldl
cmpsl
pop
xchg
es
dec
push
cli
in
cs
cmp
outsb
mov
push
add
popa
aam
adc
repnz
sbb
mov
dec
inc
fcomp
xorl
sbb
pop
dec
call
in
xor
dec
lods
xchg
aas
inc
pushf
cmc
sahf
lret
clc
pop
ret
inc
dec
sbb
arpl
and
stc
mov
inc
sti
fiaddl
add
or
in
int3
xor
pop
pop
insl
mov
sarb
test
jmp
shl
lret
mov
jp
sbbl
jbe
jmp
sbb
sub
jns
in
lods
or
add
adc
mov
addr16
out
and
sub
sahf
popf
cld
xchg
xchg
imul
mov
inc
mov
mov
scas
jb
add
pop
cs
mov
mov
add
mov
push
ret
arpl
imul
sub
mov
fbld
fbstp
xor
mov
xchg
clc
cmp
xchg
imul
pop
inc
or
jg
cmp
movsl
inc
stos
jno
scas
cs
fistps
xor
xor
out
icebp
ret
mov
inc
or
pop
dec
and
pop
xchg
mov
rclb
xor
xchg
xchg
clc
pop
add
fimuls
jb
fmull
mov
jbe
rcrl
mov
cmp
push
jbe
hlt
movsl
cmp
xchg
sti
mov
scas
scas
sti
and
push
xor
and
xchg
movsb
test
shl
push
pop
addl
cmp
push
outsl
into
mov
aam
jge
add
subl
adc
pop
mov
sub
mov
aaa
mov
add
ds
sub
addb
fstpt
inc
cmc
sbb
arpl
adc
arpl
ljmp
int
and
jmp
in
iret
mov
mov
out
subb
ss
out
lock
je
jo
sub
and
ds
aas
call
sub
inc
xor
shl
jmp
sbb
and
lods
cmp
push
lahf
pop
dec
pusha
jmp
mov
xchg
inc
pusha
and
xor
out
pop
push
out
adc
aaa
shll
in
lcall
pop
loop
mov
je
std
mov
or
or
mov
jo
andl
mov
cs
insl
loopne
mov
jle
mov
push
fucomp
sar
sbb
jne
pop
ds
sub
into
fwait
lea
pusha
test
enter
pop
ja
add
xor
pop
cmp
int
out
and
rclb
test
push
mov
and
pop
push
ljmp
setns
xor
add
adc
cmp
pushf
xor
or
or
das
xchg
xor
mov
fcomps
and
cmp
mov
cmp
jge
xchg
lahf
add
or
gs
fbld
je
mov
movsl
dec
in
mov
dec
movsb
out
in
cmp
daa
nop
fistpl
popf
lock
mov
push
test
push
xor
int3
xor
add
test
cmp
sbb
mov
jae
xor
adcl
pop
add
xchg
fwait
push
mov
push
sub
js
mov
mov
lds
test
pop
imul
lcall
jnp
inc
dec
repz
lahf
mov
cmc
iret
push
mov
mov
inc
cmp
aaa
xchg
stos
mov
jb
pushf
pop
cmc
inc
adc
fists
fwait
sub
cmpb
lret
leave
mov
int3
setbe
aaa
xchg
pusha
pushl
outsl
add
sahf
dec
repz
arpl
xor
push
outsl
loope
aad
and
cmp
add
call
xor
int
mov
sbb
loope
push
xchg
ret
xor
lahf
mov
arpl
data16
pusha
xor
outsb
and
xchg
mov
fdivr
or
loopne
pop
faddl
xchg
add
sbb
negl
inc
lods
jnp
aad
rclb
lcall
sbbb
or
push
xor
push
jle
jg
xor
jo
aas
leave
mov
push
xchg
aam
test
dec
inc
sbb
or
aaa
jbe
imul
inc
jle
adc
add
sbb
cmp
out
mov
movsb
xchg
rol
addl
jge
push
pop
pusha
sub
in
push
std
or
ja
fucomp
or
inc
push
fwait
movl
inc
test
pop
into
mov
scas
out
mov
stos
or
mov
int3
lea
fnstcw
pop
xchg
lock
and
repnz
stos
inc
outsb
test
out
pop
pushf
imul
lds
sub
fsubrl
inc
loopne
out
adc
arpl
mov
loop
std
pop
addr16
push
mov
les
jnp
ret
add
sub
lods
lahf
jo
stos
pop
cmpl
scas
jge
addb
jbe
insl
jmp
sti
jl
rcll
aam
adc
mov
fdivl
xchg
mov
dec
iret
fimuls
inc
aad
adc
add
xchg
pop
mov
add
or
bound
and
xchg
insl
stos
or
out
push
inc
call
cmp
add
ret
pop
mov
stos
pop
mov
out
mov
and
arpl
xchg
out
adc
jmp
inc
ds
dec
imul
xchg
jmp
repz
sbb
sbb
fwait
inc
mov
mov
les
pop
jmp
or
mov
ror
sbb
pop
sbb
iret
popa
jle
adc
div
adc
fwait
clc
mov
data16
lahf
lahf
gs
xor
outsb
sahf
mov
push
out
inc
or
aad
imul
inc
dec
test
fists
inc
pop
add
lret
xor
push
das
push
pop
cs
inc
jmp
icebp
das
mov
adc
push
movsb
fcoml
xor
pop
iret
dec
cwtl
hlt
xor
jle
mov
push
aaa
fs
sbb
add
inc
mov
jmp
int3
jl
je
hlt
xor
pop
and
sbb
sbbb
sbb
dec
mov
push
ret
pop
jp
repz
daa
stc
push
cmp
sbb
scas
fcos
dec
inc
inc
mov
insb
mov
insb
adc
ds
cmc
jecxz
jae
pop
sahf
jnp
or
jp
sub
insl
and
pop
or
lret
fwait
mov
testl
inc
in
dec
push
jle
pop
and
pop
nop
jnp
out
dec
adc
lock
dec
ret
xchg
jne
cs
cmpsb
int
mov
addr16
mov
popa
mov
xor
test
hlt
mov
lods
pusha
dec
xchg
dec
in
fnstcw
xor
dec
repz
js
cmp
bound
ss
jnp
test
xor
hlt
inc
cmpsl
xlat
xchg
leave
ja
pop
sub
lcall
or
repnz
cmpsb
lds
lahf
sub
bnd
ret
outsb
sub
and
dec
test
sub
xorb
or
inc
aaa
dec
data16
mov
and
subl
out
divb
lcall
incl
jp
pop
jo
sub
xor
shll
sbb
mov
mov
push
cmpsl
ffreep
jecxz
mov
in
sub
into
out
loope
lret
and
jno
push
bnd
jbe
rcr
inc
push
sub
push
repnz
outsb
pop
xorb
mov
pushf
test
shll
lret
cmpsb
clc
mov
punpcklbw
out
push
sti
jmp
add
pushf
and
cmp
fistpll
push
in
mov
stos
push
mov
mov
xchg
push
dec
mov
mulb
ret
repz
imul
stc
sub
repnz
xlat
mov
das
and
jl
loop
enter
mov
pusha
or
push
and
arpl
xchg
inc
div
sarl
ror
sbb
cmp
inc
jg
jbe
add
or
pop
push
mov
jb
jbe
sub
out
aad
jge
fcom
int3
fdivs
pop
or
call
repnz
out
add
sub
filds
xchg
shrd
cs
fwait
adc
add
dec
mov
and
stos
leave
cwtl
sahf
xchg
enter
inc
xor
mov
xor
int
imul
jmp
add
mov
xchg
repz
jp
jne
pop
push
data16
mov
test
xlat
xor
xchg
jp
push
stc
inc
aad
fcmovnb
std
add
outsl
fcompl
jnp
mov
dec
sbb
js
mov
mov
push
adc
decb
mov
push
xor
mov
adc
mov
test
sbb
int3
sbb
mov
mov
add
adc
and
sub
shl
add
sub
in
push
aad
sti
add
push
shlb
mov
movsb
cwtl
add
sub
mov
lret
xchg
pushf
mov
jl
aas
push
push
out
repz
loope
rolb
test
jecxz
fcomps
sbb
sahf
lds
mov
sbb
mov
jo
xchg
out
stos
ljmp
stc
inc
push
push
xchg
mov
and
jno
pop
jae
jmp
push
mov
mov
cltd
inc
jnp
xlat
push
add
mov
xchg
std
lock
ss
sub
inc
fcomi
mov
sbb
arpl
sub
or
and
push
and
and
add
aam
add
inc
cmp
push
pop
xor
jnp
lods
test
lcall
int
lea
xchg
xorps
loopne
lods
mov
inc
dec
loope
xlat
cmp
les
lret
and
dec
xor
push
xor
popa
insl
bound
mov
sub
pop
mov
jbe
mov
pop
dec
sub
mov
mov
aam
enter
popa
bound
sbb
lahf
neg
mov
dec
cmpsl
in
adc
scas
jae
cmp
cmp
imul
lret
sahf
adc
push
cltd
or
or
in
stos
aad
ret
shlb
mov
sub
or
dec
or
or
je
and
loop
pop
lock
shll
add
rol
dec
jnp
cld
xchg
mov
pushf
ret
xor
lods
test
jge
jno
xchg
jge
pop
or
dec
cmpb
dec
add
pop
fstpt
sbb
aas
je
bound
sbb
ror
or
dec
push
clc
call
fistps
incl
jp
test
push
pusha
push
popa
iret
shlb
outsl
mov
sbb
jno
push
sub
push
lret
sbb
cmpsb
mov
add
xlat
push
orb
out
sbb
jo
fiadds
mov
pop
test
enter
repz
roll
ja
mov
cs
iret
cmp
sub
mov
rorb
pop
in
mov
ret
imul
addb
cmc
sub
dec
fiaddl
ds
mov
pop
popf
nop
pop
in
imul
push
xchg
loopne
jae
push
jno
jno
mov
jmp
mov
inc
push
dec
rep
mov
mov
mov
shll
stos
mov
adc
bound
xchg
iret
xchg
xor
adcl
inc
mov
mov
adc
ljmp
and
pop
pop
outsl
pop
lock
mov
jae
jg
data16
dec
add
pop
loope
out
mov
es
mov
cld
dec
out
mov
pop
imul
and
ljmp
les
sbb
dec
rcrl
xchg
mov
loop
xchg
sub
pop
sub
mov
lret
jns
mov
lret
pop
ss
icebp
aam
pop
cmc
cli
inc
and
pop
jns
inc
cmp
aas
lock
cmp
mov
dec
or
jb
xor
jmp
sub
sbb
jb
in
out
and
add
popa
call
adc
test
dec
ffree
cmc
xlat
push
fnsave
sahf
insl
fld
adc
add
lahf
or
push
pop
ss
add
in
mov
pop
mov
je
jnp
push
inc
testb
jmp
das
ja
cwtl
xor
aam
and
outsb
jmp
cwtl
sbb
data16
inc
lods
add
mov
std
mov
repnz
ljmp
add
pop
mov
pop
or
xor
jl
mov
add
les
mov
push
das
out
aaa
jg
outsl
push
inc
cld
sub
in
pop
jg
dec
or
add
sub
mov
xchg
rcrb
mov
inc
jg
jg
inc
pop
movsl
cwtl
out
jecxz
inc
pop
pop
jmp
pushl
repz
cwtl
shrb
je
out
je
rclb
xchg
mov
shll
std
call
inc
ret
pop
cwtl
cli
repnz
add
test
aaa
inc
adcb
mov
popa
shl
xchg
push
add
dec
jp
dec
mov
pop
mov
dec
sbb
imulb
ret
jns
mov
das
aaa
sbb
fisubl
adc
xchg
xchg
xchg
and
fstpl
mov
adc
jle
mov
add
into
jmp
jo
or
std
pop
adc
add
dec
ret
imul
ds
pop
shrl
lods
test
inc
mov
imul
lea
mov
ljmp
mov
inc
mov
popa
mov
lods
and
mov
lds
das
sub
popa
std
into
mov
pop
xor
test
aas
cmp
les
dec
and
jg
movsl
xor
push
mov
fisttps
sti
xchg
nop
gs
cmp
das
adc
or
mov
lcall
and
xchg
std
daa
lret
cli
mov
and
or
xor
push
xchg
ret
sbb
adc
add
mov
cmp
fldenv
and
xchg
sar
mov
repnz
adc
jge
popa
adcb
xchg
sbb
loope
testl
pop
movsl
popf
stos
repz
cmp
add
cmp
stos
cmp
xchg
into
mov
shl
dec
cli
cmp
lret
pop
mov
xor
mov
into
or
adcb
sahf
sbb
and
mov
jl
outsb
xchg
test
mov
or
ljmp
adc
scas
dec
cmp
mov
sti
mov
leave
cmp
out
sub
add
adc
sbb
call
or
xchg
inc
push
call
ret
push
jne
jae
mov
add
adc
sbbb
test
push
mov
or
push
adc
pop
out
xchg
das
das
cmc
iret
rcll
mov
mov
iret
lahf
pop
not
mov
and
sti
xorl
and
out
ljmp
cmp
leave
sub
cli
pop
mov
cmp
js
jecxz
and
push
xor
insl
loopne
or
lret
add
or
cmp
daa
test
dec
stos
push
stc
clc
outsb
in
sbb
dec
cmpsl
nop
xchg
mov
xchg
and
push
mov
xchg
sub
pop
rclw
outsb
movsl
nop
ret
loop
pop
aas
in
xor
cli
sbb
pop
or
je
pop
scas
vcmpsd
cltd
and
aas
jmp
mov
mov
mov
jnp
aad
stc
shrb
add
int
mov
fwait
out
add
xchg
ss
jno
cld
mov
jle
test
out
loop
adc
in
xchg
or
insb
pcmpeqb
push
mov
setg
rolb
iret
pop
leave
sub
das
stos
add
popf
roll
test
inc
xchg
js
je
dec
mov
mov
mov
mov
cmp
pusha
xchg
out
jno
adc
rcrb
and
pop
jbe
mov
aad
jbe
rorb
adc
xchg
int3
loope
sbb
repz
mov
cmp
jo
xchg
lds
fstps
pop
scas
jbe
cltd
movsl
lods
fs
mov
in
sarb
jns
insb
pop
sbb
xchg
pop
adc
ja
mov
int3
jns
mov
jo
nop
shlb
or
jo
mov
push
ss
mov
push
add
sub
test
mov
notb
xchg
in
inc
sub
sub
lods
outsb
jno
jge
std
pop
xor
mov
xchg
pop
cmp
hlt
flds
shll
mov
in
clc
sbb
aam
aad
add
push
loopne
in
xchg
lock
mov
hlt
lods
leave
inc
addb
pop
enter
lret
movsb
mov
aas
shl
mov
push
loopne
incb
aas
sarl
or
lods
out
or
dec
sbb
roll
ja
imul
lods
pop
js
push
daa
push
jle
outsb
les
sbb
push
scas
mov
pop
outsb
in
popa
in
xchg
fstpl
cmp
mov
xchg
and
je
or
xchg
mov
lahf
dec
push
add
sub
int3
addl
adc
stos
sbb
pop
lods
pop
or
push
mov
cli
aad
inc
or
data16
out
leave
push
dec
das
push
push
lock
cmp
lods
adc
push
scas
pushl
ret
stos
pushf
ljmp
and
jnp
mov
repnz
loopne
call
pcmpgtb
cmp
sub
in
inc
dec
movsl
and
mov
jmp
shlb
mov
jnp
mov
mov
aas
inc
jnp
fdecstp
sub
jge
cmp
xchg
bound
leave
inc
cmp
xorl
jmp
dec
idivb
insb
inc
xchg
xchg
mov
test
mov
mov
arpl
mov
fbld
into
cmp
add
outsl
push
pop
mov
js
pushw
mov
outsb
pop
sub
clc
jg
pop
in
or
rcrb
jnp
imul
jmp
clc
pop
test
std
adc
sub
lea
cld
loopne
ficomps
pop
je
pushf
aad
xor
mov
mov
adc
push
add
popa
or
xchg
das
dec
mov
scas
test
cmp
lods
in
jp
mov
pop
xor
mov
mov
jge
push
arpl
lcall
add
fildll
mov
inc
lret
enter
ret
je
inc
lahf
xchg
add
adc
or
add
aad
popl
rorl
lods
lods
out
ljmp
inc
repz
cmp
stc
call
ja
mov
insl
mov
jo
xchg
xor
arpl
insl
xchg
fcmovnb
loope
std
jo
cld
jne
stos
sbb
data16
out
das
mov
or
adc
adc
pop
mov
mov
lods
cmpsb
ficomps
xlat
cmp
fs
ret
add
repnz
inc
out
mov
call
loopne
insb
outsb
stc
test
jmp
jle,pn
push
les
adc
cmpsl
adc
testl
sahf
arpl
es
cwtl
xor
cmp
mov
pop
mov
push
pop
push
scas
jp
pop
lret
dec
and
fmull
inc
xor
rorb
jne
sub
imul
and
sbb
jl
cmc
mov
into
aam
inc
in
shrl
mov
sarb
dec
in
out
cld
test
add
mov
mov
and
xchg
sub
xchg
mov
scas
and
sub
insl
jle
pusha
or
lods
push
inc
jge
int
sub
xchg
adc
js
into
dec
sbb
jb
into
xor
sub
mov
adc
lret
orl
in
xchg
xchg
adc
xchg
in
mov
jecxz
jo
in
push
dec
popf
or
iret
adc
pop
psubw
lret
push
cltd
inc
sub
lods
pushf
sbb
stos
pusha
sub
mov
jno
xor
or
fmuls
out
loope
fcmovbe
adc
mov
mov
in
call
jecxz
inc
mov
xchg
fistl
js
dec
dec
daa
mov
jmp
imul
and
cld
xchg
stos
int
repnz
push
push
jg
fwait
push
add
lds
addl
jnp
jle
jecxz
mov
jb
xchg
in
mov
hlt
enter
mov
pushf
push
lret
insb
repz
in
add
and
ret
rcrl
aaa
loope
cmc
std
out
les
jge
sbb
fadd
xor
mov
lahf
jbe
pusha
mov
cmpsl
push
mov
and
cmp
xchg
imul
arpl
push
add
rorb
inc
adc
jecxz
shl
cltd
orl
xchg
rol
stos
out
cltd
mov
repnz
cmp
int3
movsb
dec
and
jo
cmp
or
mov
jg
push
jb
es
jge
clc
cli
aas
add
pop
inc
arpl
das
xchg
mov
mov
and
inc
xor
sub
pop
xor
std
and
xchg
cwtl
dec
and
and
sahf
and
adcl
pop
adc
cwtl
sbb
push
sti
or
dec
int3
pop
lock
sub
pushw
add
fisubrs
jle
nop
loopne
popf
jmp
das
pop
mov
mov
addr16
and
loope
and
cmp
test
loop
mov
mov
out
cmp
xor
je
ja
xor
gs
push
out
cmc
rclb
mov
jnp
cmc
inc
loope
fwait
mov
outsl
lods
pop
push
ss
pop
stos
jne
jno
imul
or
xchg
rcrb
fidivs
mov
ficoml
call
fstl
add
loope
xlat
js
into
int3
sub
int3
cld
mov
pop
mov
jnp
push
dec
outsb
cmp
and
xor
hlt
repnz
mov
push
add
add
js
ret
and
jnp
fidivl
in
xchg
sarb
addr16
jle
std
push
ss
inc
dec
mov
pop
insb
lock
dec
jae
mov
lcall
dec
adc
or
js
push
or
inc
add
add
sbb
fidivs
fucomip
jb
dec
adc
mov
adc
in
or
inc
push
jnp
daa
repz
test
sbb
or
mov
gs
fnsave
stc
ret
xchg
cld
sub
xchg
xor
aam
loopne
xchg
bound
insl
outsl
pop
mov
jnp
daa
movsb
mov
sub
in
mov
stos
and
mov
out
outsl
ja
push
call
int
fistpl
adc
loopne
fisubs
inc
xor
pop
adc
and
xchg
xor
inc
inc
ljmp
test
shl
lock
stos
mov
mov
sbb
mov
push
or
pop
subl
pop
mov
inc
adc
xchg
add
lods
pushf
jp
sarl
sub
dec
push
or
fwait
lock
pusha
mov
mov
jnp
mov
cmp
xchg
pop
lock
mov
arpl
push
jle
sub
pop
push
movsl
dec
jae
adc
mov
ret
movsl
push
in
ffreep
xorl
movsl
xchg
mov
xchg
cmpsl
mov
pop
sbb
scas
mov
jle
dec
xchg
lock
cmp
addb
pop
and
cmp
push
std
lea
mov
add
adc
pop
and
lahf
loopne
ja
jmp
test
es
sbb
jp
cli
push
jp
into
lcall
aad
jl
fisttps
in
xchg
sbb
fcoml
inc
stos
xchg
les
imul
mov
gs
sub
dec
iret
cmc
xor
jmp
push
pop
hlt
leave
jne
push
fcmovne
sar
cmp
repnz
rcll
sub
push
push
mov
lret
in
sbb
xlat
sti
xchg
xlat
add
adc
jnp
push
jle
mov
mov
jmp
mov
cmp
mov
mov
pop
cmp
call
imul
aad
jne
dec
fsts
jo
xor
or
xor
and
pop
inc
inc
sti
imulb
adcb
scas
jmp
out
add
stos
inc
add
mov
cmpsl
mov
cmpsl
cmc
or
cs
sbb
add
cmp
repz
cli
xlat
bound
sub
add
out
aad
pop
std
xchg
and
cs
insl
sub
je
mov
xchg
inc
mov
push
fbld
mov
imul
stc
sti
pusha
xor
xchg
inc
shll
add
sub
test
aas
daa
cmc
mov
incl
leave
inc
shl
ret
in
jp
push
pop
bound
shr
lods
aam
inc
jo
xor
xor
stos
int
adc
lahf
rol
add
loop
jae
clc
ja
dec
push
ret
or
dec
jecxz
out
add
mov
addb
pop
pop
incb
shlb
jge
push
dec
test
inc
les
ret
or
hlt
je
test
jns
pusha
test
push
xor
mov
xor
xchg
cmc
dec
into
push
cmp
into
dec
inc
sahf
push
test
xor
clc
subl
mov
mov
push
cmp
lahf
data16
ret
jg
inc
cmp
push
mov
cmp
int3
cmc
pop
outsl
inc
lret
adc
dec
push
icebp
sbb
pop
dec
mov
or
test
mov
jns
test
jle
jne
ja
adc
fnstcw
ret
mov
adc
fs
or
add
xchg
sub
xchg
xchg
mov
scas
mov
cmc
push
psubusw
movsl
sti
movsb
fwait
or
cmp
js
std
adc
sbb
cltd
and
sbb
outsb
loopne
jbe
xlat
xchg
cmp
imul
and
xor
cmp
das
outsl
adc
adc
pop
jo
dec
add
arpl
mov
fucom
ss
mov
daa
sbb
aas
movsl
nop
ret
cmp
mov
fsubr
jo
xchg
std
dec
push
scas
jno
cmp
out
movsb
push
xchg
fxch
aas
roll
inc
pop
lahf
cmpb
jl
sbb
push
push
fildl
clc
pop
and
jmp
mov
add
add
shll
and
xor
jno
adc
fs
adcb
push
sub
adc
ss
inc
aad
sub
dec
stos
pusha
stos
loope
push
xchg
push
stos
pop
cmp
loop
xor
popw
into
pop
movl
add
ds
sub
imul
push
ljmp
sbb
notl
sub
pop
pop
jbe
out
int
pop
inc
push
les
cmp
cmp
adc
sbb
in
or
scas
inc
aaa
add
cmpsb
jmp
inc
jbe
fistpl
ljmp
std
es
and
call
dec
prefetch
or
rol
sub
int3
stc
fsubs
mov
insl
or
sahf
insb
xchg
sub
push
lea
pop
icebp
pop
mov
sub
push
jb
lock
jmp
ret
or
shll
testl
nop
lods
add
pop
cs
out
mov
sbb
mov
sub
pop
inc
addr16
mov
xor
mov
or
lods
outsl
fbld
sbb
add
test
das
dec
xor
jmp
pop
movsb
push
rclb
call
in
dec
mov
scas
and
fwait
repz
cmp
xor
test
inc
push
loopne
jmp
or
mov
mov
xchg
inc
sbb
push
sbb
lock
push
out
mov
xchg
out
jp
push
inc
pop
lahf
das
outsb
or
leave
dec
stc
mov
out
shrb
or
outsl
mov
sub
stos
push
mov
jb
stos
iret
sub
fs
mov
rcrl
js
push
pop
insl
ret
add
xor
mov
adc
push
cmp
cmp
cmp
aad
dec
clc
jo
push
loop
sbb
and
inc
mov
fistpl
faddl
jl
pop
mov
push
addr16
pop
call
lea
adc
push
jg
test
push
lock
call
stos
fistps
repz
test
xchg
dec
shrb
sbb
push
push
mov
inc
insb
mov
ljmp
std
and
adc
mov
xor
stos
in
jmp
mov
and
incb
lahf
lea
pop
xchg
mov
inc
pop
loope
vmovq
mov
roll
inc
cld
in
add
rolb
pop
icebp
cmova
mov
push
sbb
cmp
fdiv
inc
mov
sbb
xchg
dec
jb
mov
or
pop
and
mov
cmp
mov
mov
lret
outsl
jg
es
ds
push
loop
lods
mov
cld
mov
outsl
and
jecxz
out
out
bnd
outsl
stos
cmp
adc
mov
dec
mov
dec
ficompl
mov
cmp
aaa
clc
test
mov
fwait
jmp
cwtl
inc
jo
xor
dec
add
jns
movsl
pop
mov
sub
imul
scas
cmp
dec
mov
out
cwtl
mov
fadds
js
xchg
ljmp
incl
movsl
leave
cmc
scas
jmp
mov
sub
aad
arpl
push
dec
je,pn
or
jbe
pop
jmp
push
xor
dec
scas
push
push
nop
push
push
mov
daa
mov
in
add
mov
clc
ret
sub
outsl
sub
adc
add
imul
sub
push
fiaddl
ret
mov
int3
mov
jp,pn
repz
fwait
je
aad
sbb
mov
pusha
test
dec
dec
dec
jg
or
xchg
or
mov
test
jae
xor
mov
outsb
wrmsr
enter
dec
test
incl
pop
push
pop
cli
in
fisubl
bound
dec
repz
cmpb
push
mov
scas
mov
scas
push
repnz
xchg
sub
enter
lds
or
loop
fwait
cmp
lods
in
push
push
scas
mov
cmp
inc
add
xor
adc
mov
fistps
aad
sar
push
mov
or
mov
add
aaa
adcl
aas
sbb
enter
aas
aaa
xchg
rcll
mov
sbb
push
es
das
lea
xchg
stc
pop
clc
inc
push
add
sub
mov
lock
iret
adc
xor
jns
fstpt
mov
sub
test
add
xchg
ljmp
fucom
xor
cmpsl
stos
pop
sbb
repz
repz
jbe
mov
cmp
jo
into
fbstp
dec
fdivrl
jp
xor
jl
pop
pxor
cmpsl
jle
idivl
adc
loope
jns
inc
and
jno
cld
push
sbb
push
lcall
mov
cmp
hlt
cltd
push
clc
jecxz
call
jecxz
outsl
in
outsb
push
dec
or
mov
or
sbb
cmp
sahf
jmp
lcall
push
pop
jno
ja
sti
adc
xor
iret
cmp
dec
xor
ret
adc
pushf
adc
mov
loope
movsl
rcl
hlt
in
inc
pop
adc
push
daa
scas
inc
and
mov
loope
sub
mov
ret
js
dec
mov
xor
sbb
popf
cli
mov
adc
jae
xor
pushf
int3
xor
icebp
xchg
and
je
insb
xchg
xor
mov
sub
aad
xor
lock
jecxz
into
in
cs
sahf
lahf
jnp
pushl
pop
lahf
jmp
jne
repnz
xchg
loope
mov
clc
inc
mov
jge
ja
testl
xchg
cmpsl
ds
mov
lds
jne
push
adc
jp
mov
fwait
pop
and
adc
pusha
xchg
push
mov
push
mov
fnstsw
sti
adc
imul
loopne
fldt
sbb
dec
loop
loope
test
addl
cmpsl
ljmp
and
insb
mov
bound
dec
cmc
movsl
pop
push
jbe
inc
mov
or
mov
adc
data16
inc
inc
stc
aad
pop
out
add
mov
aas
call
inc
lods
push
lea
xor
insb
add
cmpsl
push
outsl
es
imul
push
inc
movsb
sub
sub
test
ljmp
inc
test
push
xchg
shr
xchg
inc
dec
test
ja
xor
cmc
bound
sub
das
inc
push
sti
cld
inc
lods
shl
inc
mov
scas
rcll
loope
popf
mov
xchg
fucomi
dec
lods
xchg
scas
lcall
gs
aam
enter
fidivrs
enter
inc
mov
push
test
dec
jmp
inc
cld
testl
test
or
clc
push
xchg
lods
les
push
xchg
push
inc
and
orb
fxch
in
jne
jns
fadds
adc
xchg
stos
in
ret
fcoms
rclb
popa
adcl
repz
push
jo
scas
hlt
int
orl
pop
ljmp
mov
icebp
aam
cmpsl
pop
mov
out
fs
mov
in
pop
sbb
scas
stc
stos
cmpsl
push
lcall
xor
shlb
outsb
and
ret
nop
insb
in
pop
shlb
mov
sub
inc
xchg
cmp
insl
xchg
dec
mov
push
push
imul
inc
sbb
bound
xlat
add
push
cli
dec
mov
addr16
pop
or
mov
adc
jbe
loopne
xchg
in
jno
mov
add
xchg
fisubrs
xor
pushf
pop
lahf
adc
or
hlt
out
ror
nop
adc
and
bound
stos
lds
mov
push
pop
shrl
aas
sub
fsubrs
push
xor
xor
jl
cs
ss
adc
in
jnp
in
jge
or
movsl
roll
push
aam
xor
aaa
mov
or
xor
add
cmp
pop
movsl
mov
jmp
dec
pusha
xor
hlt
sbb
addr16
mov
jae
jo
loopne
xchg
out
xor
pop
repz
inc
lods
data16
adc
pop
xchg
inc
mov
xor
push
subb
rolb
loope
cmp
jb
leave
jp
mov
push
xchg
out
lock
mov
or
jle
ss
call
je
xor
pop
es
jl
lahf
mov
pop
pop
andb
xchg
lret
xchg
in
jp
mov
mov
sbb
and
or
movsb
lcall
push
push
pushf
insb
mov
sbb
faddp
in
in
add
sahf
outsl
arpl
mov
fnstenv
js
in
pushf
adc
pop
arpl
sbb
sbb
sbb
out
stos
jns
arpl
mov
fucomi
dec
xor
int3
jge
xor
cli
or
mov
mov
leave
mov
mov
xchg
cltd
jmp
fdivrl
pop
mov
cwtl
test
add
es
mov
mov
fmuls
scas
pop
dec
or
pop
lret
pop
cmp
jne
fs
adc
test
insl
in
jl
xorl
bnd
loope
popa
xor
add
cmc
xchg
lcall
mov
mov
mov
mov
in
ret
rorl
shlb
push
mov
fists
fsts
aad
imul
xorps
stos
push
subl
and
outsb
pop
mov
insl
sahf
push
push
leave
sahf
loopne
inc
and
hlt
mov
adc
mov
fiaddl
sbb
pusha
sbb
hlt
mov
xchg
push
and
xor
xchg
rcl
sbb
sub
xor
mov
stos
js
sarl
rorb
cld
imul
test
mov
inc
pop
fnsave
aaa
andl
loopne
adc
lahf
lds
mov
outsl
mov
cwtl
adc
call
push
and
pop
cs
test
cltd
cmp
or
aaa
push
push
dec
mov
mov
pop
cmp
ror
inc
sub
out
or
outsb
ret
dec
daa
aad
dec
clc
gs
in
ret
sub
mov
jmp
cmp
push
addr16
push
fs
mov
test
push
push
inc
pop
xor
inc
and
xchg
mov
adc
mov
xchg
lods
bound
je
xor
nop
inc
mov
dec
adc
jo
stos
jge
and
pop
mov
aad
addl
stos
shll
in
lret
je
in
cmc
out
pop
pop
and
lods
enter
lods
das
sub
lods
cld
ror
mov
imul
imul
sbb
lods
stos
inc
dec
adc
mov
jne
push
xchg
jne
xchg
jl
ds
sub
mov
out
out
push
or
outsl
out
dec
rclb
mov
pop
and
fildl
sub
xor
aaa
pop
dec
loop
jnp
mov
lods
ss
movsb
jne
jo
in
push
sbb
inc
inc
inc
push
cltd
mov
jnp
mov
lock
and
addr16
cmp
xchg
add
pop
add
mov
scas
dec
scas
or
ret
ficoml
push
sbb
cmpsb
jne
push
icebp
or
jne
jnp
jo
mov
mov
dec
xlat
lret
push
xchg
rcrb
inc
and
test
pop
aas
add
in
pop
cmp
cmpsl
rolb
es
sub
pop
test
leave
decb
dec
jno
mov
jmp
xchg
test
add
cs
adc
jp
push
push
jle
pop
repz
jl
jnp
test
dec
pop
out
jno
dec
xchg
bound
lahf
xor
mov
or
ja
sub
adc
sub
jle
dec
pop
adc
daa
xor
xor
enter
in
faddl
into
loop
sti
es
jp
push
push
push
sub
and
jno
xlat
stos
jns
cli
xchg
lret
cmp
cmp
lahf
or
push
inc
movups
push
test
mov
push
xchg
mov
or
mov
mov
and
jb
cmp
es
repnz
in
fucomp
push
cmp
push
stc
add
shll
mov
push
ss
push
loop
enter
stos
inc
test
arpl
jl
xor
xchg
sbb
pusha
cwtl
adc
stos
or
xor
mov
icebp
xchg
and
sahf
dec
test
scas
pop
jb
pop
aad
stos
add
loope
jae
int3
iret
xchg
add
pop
xor
or
stos
inc
push
test
fs
sti
adc
and
adc
or
push
mov
std
pop
add
pop
jae
int3
pop
or
pop
decb
sub
pop
or
insl
sahf
loop
mov
rcrb
nop
rol
xchg
pop
in
adc
dec
sbb
sub
adc
scas
jae
cmp
mov
sub
out
xchg
mov
outsl
insb
push
icebp
cs
sub
jne
mov
js
mov
jb
stc
jne
xlat
sti
sub
std
dec
pop
jle
outsb
ret
fildll
inc
mov
or
xchg
mov
lock
pop
xor
mov
add
jno
dec
lock
popa
outsb
push
call
loopne
stos
push
fwait
les
dec
shr
test
cmpsb
lret
shrb
cmc
and
jmp
cmp
cmp
test
rorb
jns
sub
jl
shlb
adc
cmp
mov
stc
mov
aas
adc
pop
aaa
je
pusha
outsb
adc
jp
cmp
std
xor
sub
stc
mov
hlt
pop
enter
cmp
into
je
inc
iret
mov
xor
aas
xor
cmovp
aas
test
dec
iret
xchg
dec
scas
das
mov
mov
sub
lea
cmp
loope
outsb
popa
and
pop
int3
loopne
dec
xchg
cmp
jnp,pt
xchg
xchg
mov
jns
cmp
dec
mov
sarb
bound
les
sbb
mov
push
sbb
pop
into
pop
push
fwait
aam
idivb
xchg
and
aas
push
mov
mov
mov
and
lods
mov
jnp
dec
push
cs
nop
fisttpl
fs
mov
inc
inc
xchg
insl
pop
xor
adc
imul
mov
mov
jl
adc
mov
test
out
dec
push
and
loopne
jne
xchg
nop
js
push
pop
movb
sarb
andl
mov
push
push
jne,pt
data16
clc
das
pop
sbb
sbb
or
ret
pop
int3
or
insb
jno
push
stos
inc
hlt
pop
push
sub
faddl
sti
and
mov
pop
sbb
pop
jbe
adc
insb
push
and
jae
mov
aas
adc
mov
push
cwtl
repnz
and
pop
or
stos
test
cmp
ficoms
andb
and
fisttpll
testb
jp
mov
push
out
les
out
add
xchg
lods
fcmovnb
out
pop
jbe
and
out
call
mov
repnz
xchg
inc
pop
stc
pop
jle
enter
jns
in
pop
mov
push
cltd
jbe
cmpsb
mov
or
mov
insl
or
sub
fst
and
pushl
ljmp
push
push
les
roll
inc
pop
ficoms
mov
aaa
pop
xor
js
mov
cltd
sbb
ret
or
jne
scas
in
and
mov
dec
lret
iret
dec
movsl
bound
cmp
movl
enter
stos
push
jecxz
stos
xor
inc
lods
xchg
jbe
mov
test
out
xor
jbe
sub
std
xchg
or
fistpl
daa
xor
loopne
pop
and
fmulp
lahf
pop
jmp
sbb
pop
ja
shl
xlat
mov
push
sub
fsubr
mov
cmpsb
pop
pop
jmp
mov
ja
jg
jg
push
add
or
fisttpl
inc
jg
mov
ds
popa
out
mov
xchg
cld
add
inc
movsl
pop
icebp
adc
add
pop
push
inc
outsb
cmp
test
cmpsl
sbb
out
adc
out
xchg
movsl
or
loope
repnz
out
test
call
jg
sti
inc
dec
pop
pop
test
and
insb
arpl
sbb
fnsave
add
fadds
pop
push
sbb
jns
lods
push
xor
les
pop
arpl
decl
ja
push
sbb
out
mov
outsl
pop
pop
mov
ficompl
inc
inc
adc
aam
sarb
cmp
jg
adc
mov
lret
in
inc
pop
das
inc
sub
jae
std
pop
or
pop
jbe
pusha
inc
test
cmp
test
cmp
mov
mov
pop
adc
std
jle
and
sbb
subb
add
lahf
sub
fldcw
inc
push
in
fcompl
scas
sbb
int
fsubrs
jle
jo
mov
dec
arpl
push
in
out
push
test
nop
loopne
imul
mov
mov
xchg
sbb
push
aaa
mov
xchg
adc
clc
cld
sub
and
xor
shr
popa
dec
jle
loope
cmp
lods
mov
bnd
cld
jl
cmp
into
ret
adc
sbb
daa
cmp
mov
outsb
xor
cmpb
or
xor
into
sbb
ds
jmp
call
xchg
test
mov
in
repz
insl
fdivrp
fisubs
pushf
cld
ret
call
or
jo
fisubrs
or
push
cmc
dec
clc
repz
xchg
lret
cmc
sub
bound
adcb
cmc
xchg
mov
cmpb
fidivrs
inc
loop
sbb
xor
jecxz
xchg
add
and
ds
cld
test
push
pop
fisubs
fisttps
and
jg
inc
js
cmc
inc
shll
lods
sbb
clc
pop
add
pop
pop
pop
arpl
cmp
jno
sbb
rcl
std
cld
push
imul
enter
or
xchg
xchg
mov
inc
and
in
ja
test
rclb
push
push
xor
call
mov
add
push
adc
mov
jl
ficomps
push
sbb
dec
into
loope
stos
mov
nop
bound
lea
or
jp
movsl
xor
insl
cli
aaa
xchg
xlat
add
xor
xlat
xchg
mov
mov
xor
js
or
cmp
mov
mov
pushl
enter
rcr
icebp
sbb
dec
dec
push
xchg
jmp
jo
inc
add
js
or
out
sub
mov
call
adc
inc
sbb
inc
popf
scas
and
mov
mov
stos
or
inc
mov
push
jmp
imul
aad
int
sarl
stc
mov
jl
jmp
ljmp
aas
cli
div
imul
ss
mov
xchg
push
hlt
xor
in
dec
or
jmp
push
loop
scas
test
lret
aas
mov
lret
xor
adc
jle
cmpsl
mov
push
enter
lea
and
push
adc
add
jle
xor
xchg
popf
mov
jg
or
je
or
hlt
cmpsb
mov
int3
xchg
stos
divps
stos
imul
jmp
push
je
hlt
scas
aad
jg
push
divb
sub
sub
pusha
ljmp
js
dec
or
or
clc
adc
add
aas
mov
jmp
movsb
mov
sbb
add
jno
stos
scas
pusha
fistpl
dec
mov
test
xor
mov
pop
int
mov
dec
pop
jbe
cmp
adc
add
dec
pop
sbbl
jbe
xor
lahf
int
jnp
aas
sbb
jbe
andl
add
lret
dec
and
lahf
cmp
mov
jl
cmp
add
dec
or
cmp
pop
add
inc
movsl
push
and
lret
add
xchg
leave
loopne
cltd
sub
in
sub
or
in
movsl
test
inc
sarl
cmpsb
lret
cmp
push
dec
cmp
sti
pusha
adc
inc
in
cmpsb
pusha
loop
xchg
inc
lahf
nop
dec
or
pusha
cmp
pop
xor
and
icebp
mov
out
repz
pop
or
pop
faddl
jbe
enter
mov
cmp
lret
dec
sub
scas
lock
cltd
xchg
repz
mov
jnp
pop
sub
jbe
add
sub
mov
loope
sub
in
lds
sub
loop
push
sub
and
cmpsb
push
std
popa
mov
and
enter
outsl
icebp
aam
filds
jge
imul
cmp
add
arpl
xor
lea
fsub
aam
ss
dec
scas
leave
sbb
stos
bound
aas
add
push
sti
or
jns
cmp
xchg
push
mov
stc
pushf
dec
push
and
jge
icebp
inc
sbb
push
ds
loop
push
add
adc
inc
ret
mov
call
sti
mov
cltd
pop
xor
loop
jns
sbb
sbb
adcb
je
dec
aad
stc
inc
in
stos
lret
xchg
xor
addb
adc
mov
cs
cltd
int
ljmp
fnsave
mov
and
pusha
sub
lods
scas
inc
mov
in
mov
lock
loop
test
scas
push
loope
sbb
addr16
and
push
dec
and
sahf
in
pop
sbb
pop
mov
and
loope
in
in
mov
mov
add
shll
jno
push
mov
pop
sub
nop
popf
sbb
cmpsb
ror
imul
negl
or
ja
or
cmc
ds
bound
int
jne
pop
arpl
aad
fidivrs
aam
sbb
xchg
outsb
mov
cmp
movsb
jae
lahf
xor
fnsave
je
jb
sbb
xorl
lock
popa
sbb
stos
jmp
push
lock
nop
xchg
fwait
int3
sub
cmpl
xchg
sbb
aam
jp
or
rcrl
add
stc
cmp
sbb
jnp
iret
push
xchg
jle,pn
in
adc
orb
jne
sahf
mov
xchg
add
int
sbb
hlt
out
out
inc
nop
aad
push
cmovp
popf
insl
add
xlat
inc
dec
adc
inc
push
adc
lahf
jmp
nop
rcll
lods
bound
push
sbb
clc
aam
mov
push
mov
xchg
xchg
aas
rcr
cvtps2pd
insb
adc
loop
testl
mov
cs
and
test
shrl
call
outsb
mov
lret
pop
aaa
sbb
je
add
pop
imul
pop
mov
push
mov
sbb
decb
mov
cmp
xchg
sarl
repz
and
loop
or
fadds
out
or
cmp
dec
adc
popf
push
rcrb
fstpt
pusha
cs
movsb
cmp
jle
pop
fcmovnbe
int3
xchg
stc
std
xchg
testl
add
xchg
or
aas
pop
adc
sub
jae
xchg
jecxz
push
adc
push
iret
xor
xchg
sbb
jle
shrb
jp
aad
cmp
out
mov
sbb
xchg
xlat
int
push
mov
cmp
arpl
stos
mov
adc
mov
iret
mov
cmp
add
and
cmc
sub
jge
ret
je
in
mov
mov
loope
les
test
loopne
add
popf
sbb
mov
add
fsts
sbb
test
outsb
jae
scas
cs
sahf
inc
and
adc
sbb
arpl
or
jp
rolb
jecxz
sub
or
sbbb
mov
adc
cmpsb
mov
inc
cmpl
test
loopne
sbb
cmp
fistpl
jno
loope
xchg
cmovl
dec
lret
outsl
popf
sbb
jns
jp
or
sti
push
push
push
outsl
movb
adc
jmp
xchg
gs
lds
jbe
imul
test
adc
xchg
clc
push
jnp
pop
mov
mov
popf
push
push
les
cli
push
or
jp
jmp
hlt
lcall
sbb
popa
es
sbb
call
fadd
scas
fwait
loopne
je
fdivs
mov
mov
stc
or
jmp
rcrl
push
push
lcall
xor
adc
jns
test
cmpsb
adc
scas
xor
in
push
fsub
cmp
sub
sar
inc
icebp
jbe
repz
shlb
xchg
xchg
repnz
fsts
sub
lds
cmc
mov
fs
jle
cltd
js
push
test
ljmp
shr
shr
mov
fcomi
loopne
xchg
gs
push
sbb
mov
push
cmp
es
push
add
xchg
insb
pop
and
inc
adc
divb
insl
aad
mov
cwtl
fnsave
and
out
out
and
add
adc
int
sbb
adc
xlat
jmp
lock
jl
add
in
out
test
cmp
mov
ss
movsl
adc
mov
call
das
mov
pop
jne
cmp
imul
sub
jle
xor
clc
scas
push
stc
movsl
xchg
jmp
push
aas
adc
jge
cmp
or
sbb
push
shl
adc
mov
inc
pop
dec
dec
in
push
in
sub
insb
les
sbb
xor
test
aam
xchg
call
jge
stos
push
frstor
cmp
out
add
stos
dec
mov
insl
cmp
outsl
adc
aad
mov
in
daa
jp
fsts
sbb
add
push
inc
mov
mov
xor
pop
fs
cmp
xlat
out
aam
fidivrl
adc
popa
push
fs
xor
xchg
and
cmpl
jnp
or
loopne
leave
and
jmp
js
inc
inc
adc
pop
fst
int
scas
dec
cmp
push
pop
cmp
sbb
adc
imul
cmpsb
mulb
arpl
add
andl
repz
lcall
fdivs
in
ja
dec
test
int
pop
add
xchg
insb
mov
push
xchg
push
ret
dec
lret
mov
sarb
hlt
daa
enter
sub
repnz
aas
lret
lods
rcrb
inc
testb
arpl
test
mov
out
sbb
incb
mov
inc
adc
inc
mov
cli
imul
and
pop
lods
popf
arpl
out
leave
insl
lds
adc
aad
cmpsb
fnstsw
sbb
cli
mov
fmull
out
addr16
in
jae
in
enter
sti
fdivrs
add
push
cmp
mov
test
stos
xchg
mov
imul
xor
sbb
es
stos
aas
aas
out
push
ljmp
inc
dec
data16
and
call
lock
aaa
test
adc
push
ffree
add
fistl
xchg
xor
dec
cmpsb
and
sarl
popa
inc
sbb
push
ret
inc
or
loop
imul
jno
ror
add
mov
fldt
scas
push
test
xorl
xor
push
mov
sahf
fildll
ljmp
lds
add
lcall
lcall
ds
mov
lods
leave
cmp
sti
dec
inc
ja
es
mov
lds
andl
lock
fcmovnbe
iret
push
in
add
movsb
push
lds
cmp
xor
or
ja
pop
mov
loop
lods
rclb
shlb
enter
jle
mov
loopne
adc
sahf
xorb
or
xor
fcmove
dec
pusha
clc
mov
stos
aad
jecxz
sbb
movsb
sub
repz
cmp
out
into
lds
mov
icebp
aas
mov
in
xchg
leave
inc
mov
pop
gs
mov
pushf
cmpsb
aam
repnz
lahf
jge
mov
mov
jae
pusha
cmp
inc
mov
out
push
mov
adc
sbb
mov
ja
jne
nop
pop
and
div
jo
pop
jne
xchg
hlt
inc
inc
loopne
fidivrl
xchg
sub
cmp
adc
jo
bound
insl
mov
testb
mov
andl
cmp
mov
out
mov
xchg
mov
adc
xor
lods
push
into
mov
insl
lods
sub
pop
jb
lahf
mov
pop
adc
jge
test
data16
cmp
and
push
in
xchg
add
pop
movsb
cld
aam
negl
cmp
mov
mov
aaa
sub
arpl
pop
dec
testl
ficomps
or
pop
jno
sub
cli
jnp
pushf
es
jmp
and
lcall
or
sub
mov
xor
fcmovb
dec
xchg
jae
cmp
jns
outsl
mov
aas
sbb
dec
test
mov
xlat
into
or
xchg
fstl
hlt
push
popa
das
jge
mov
or
push
int3
imul
ljmp
mov
jae
in
pop
mov
mov
xor
add
inc
push
sti
ds
pop
jl
mov
inc
repz
loop
pusha
mov
and
int3
mov
add
xor
js
movsb
jno
cmp
scas
test
xchg
dec
das
repz
inc
data16
inc
pop
sbb
sbb
loopnew
jg
xor
mov
xor
xcrypt-ofb
cmpsl
out
loopne
fildl
pusha
repz
mov
mov
jl
mov
cmp
subb
mov
xchg
push
das
cld
imul
scas
rolb
mov
dec
xchg
jno
sub
push
dec
cli
aas
dec
cmp
cmp
xlat
xchg
sarl
mov
dec
jbe
or
jl
adc
add
sub
lret
xchg
and
cmp
sub
and
fistpl
adc
in
arpl
jbe
mov
stos
push
or
add
push
xor
add
iret
mov
mov
jae
hlt
mov
and
cmp
imul
je
int
jno
stc
cwtl
pop
jg
fcmovu
xchg
dec
xor
mov
mov
nop
pop
jp
fadds
pop
es
mov
sbb
adc
sub
mov
push
addr16
dec
int3
fs
mov
jecxz
xor
into
or
cmp
enter
push
or
sbb
add
mov
dec
mov
xchg
push
cmp
out
in
test
push
in
arpl
inc
pushf
sub
inc
in
dec
or
pop
dec
and
leave
xchg
out
xchg
pop
dec
add
iret
dec
adc
jae
sub
icebp
popa
fldcw
je
mov
mov
mov
es
add
mov
jmp
mov
loopne
xchg
repnz
push
and
inc
xchg
jl
sub
cmp
jbe
repnz
cmp
sbb
mov
inc
mov
xor
in
popa
gs
call
shl
push
adc
inc
out
mov
fwait
outsb
cmp
jmp
adc
cs
inc
lds
add
push
gs
aaa
fldenv
jmp
sbb
icebp
xchg
and
inc
lds
fs
testb
sub
notb
xchg
mov
inc
push
fidivrs
pop
loop
in
jae
into
lods
test
inc
adc
push
lea
lea
add
mov
push
sarb
and
xchg
daa
cmp
iret
call
es
stos
call
or
scas
and
rcl
xchg
or
push
rcr
pop
cmp
nop
cmp
into
xor
cmp
xorl
into
pusha
sbb
popa
push
data16
inc
dec
sti
jle
clc
pop
mov
push
jmp
out
aad
js
gs
mov
into
pop
popf
cmp
ljmp
xlat
loopne
inc
or
int3
movsb
movsl
xchg
out
scas
in
push
imul
push
or
xchg
js
pop
adc
divb
outsb
mov
mov
xchg
fbstp
insl
repz
mov
cld
nop
mov
out
jp
shlb
sub
push
cmp
dec
call
dec
sahf
jns
ret
or
and
call
xchg
xchg
data16
cmp
ret
mov
popf
fadds
jl
test
and
sbb
mov
push
rolb
negl
pop
push
cmpsl
incl
push
dec
hlt
and
dec
inc
xchg
in
outsb
cmp
gs
mov
iret
hlt
sub
dec
fsubl
jne
mov
iret
or
rolb
pop
lods
outsl
divl
fwait
mov
xor
inc
notl
lods
imul
loopne
pop
adc
ficoms
adc
decb
adc
sub
cmp
mov
int
mov
mov
imul
fnstsw
nop
push
adc
data16
mov
jmp
inc
adc
addl
mov
dec
ss
hlt
orl
popa
xchg
shll
movsl
popa
push
lock
inc
sahf
sub
adcb
movsb
mov
sbb
pop
fidivl
mov
sti
jp
or
test
stos
pop
out
into
jl
push
xchg
jns
insb
sub
xlat
pop
xchg
insb
test
mov
stos
idivl
or
fistpll
xchg
inc
jg
add
loop
inc
sarl
aam
push
je
gs
mov
xchg
jb
dec
sahf
sbb
flds
pop
int
xor
mov
int
adc
mov
adc
jp
mov
arpl
and
push
pusha
aam
aad
push
mov
into
rcrl
pop
movsl
dec
filds
mov
clc
mov
push
push
push
dec
mov
ss
and
xor
pop
les
popf
movsb
or
adc
or
xor
test
cmp
mov
sub
or
rcr
incl
mov
xchg
imul
mov
mov
mov
xor
xor
in
scas
or
clc
pushf
dec
cltd
dec
out
fsubs
mov
jno
insl
call
mov
mov
cli
test
out
mov
icebp
rcr
fsubs
or
filds
xchg
loope
fcomps
mov
fbld
test
push
adc
lret
je
imul
xchg
mov
xchg
add
mov
lcall
sbbb
lds
imul
clc
ret
mov
or
jae
popa
sbb
jnp
scas
mov
pop
mov
mov
dec
iret
scas
add
xor
mov
in
out
cmpsl
mov
popa
cmp
cmp
testl
insl
cwtl
mov
neg
decl
sbb
aad
mov
or
cs
inc
loope
test
cmp
lcall
cbtw
mov
sti
jecxz
lea
adc
minps
adc
add
inc
mov
in
inc
cmp
push
out
rcl
jmp
ret
mov
sub
mov
xor
int3
ret
pop
jb
scas
out
add
push
enter
fsts
inc
mov
shrb
mov
into
idivb
out
push
ret
add
xchg
dec
lods
inc
mov
roll
std
mov
fs
cmc
repz
std
jecxz
addr16
inc
sbb
push
mull
cmpsb
xchg
dec
outsl
inc
xor
mov
jmp
pop
and
xlat
lods
jno
push
cmc
cld
pop
pushl
mov
out
pop
mov
sbb
add
dec
xlat
jl
add
mov
xor
mull
add
mov
movsl
adc
xchg
inc
push
xor
mov
addr16
js
sbb
cld
js
shl
into
jae
daa
fdivrl
pop
mov
div
push
pop
mov
fsubl
rcl
fxch
jb
shl
movsb
pop
inc
mov
jge
ret
jns
lret
dec
sbb
xor
popf
xor
rcrl
lods
push
adc
cs
pop
or
cmp
or
jl
or
mov
xorb
jnp
movsb
dec
rcrl
loope
sub
data16
addr16
dec
aam
push
sub
insl
imul
jo
aad
add
sub
in
outsl
xor
addr16
xchg
mov
xchg
push
mov
add
pop
mov
or
cmp
ljmp
das
push
or
pop
loop
mov
insl
fs
movsbl
sahf
and
push
mov
push
ret
shll
xor
dec
jl
push
cmp
or
jp
jnp
rcrb
push
dec
mov
lods
fildl
xchg
ror
mov
fcomps
testb
xchg
cld
xchg
add
xchg
repz
pop
xchg
lock
cmp
rcl
stc
inc
mov
push
sti
test
add
sub
fnstenv
mov
into
fwait
lods
fsubp
or
and
cs
pandn
cltd
addl
clc
pop
mov
outsb
fwait
adc
dec
popl
xchg
lock
es
sbb
sbb
xor
outsb
cld
xchg
into
loopne
sub
in
inc
fs
sub
mov
and
jecxz
in
jne
aas
add
push
mov
lcall
add
cs
sti
mov
mov
cmp
icebp
cli
inc
out
jmp
ret
sahf
adc
pop
ss
dec
fcomp
pusha
xor
sub
cmc
jge
loop
fs
pusha
cmp
rcll
sbb
lcall
lahf
inc
dec
mov
cmp
xor
xor
lret
in
sbb
mov
adc
and
stos
fmuls
hlt
dec
dec
mov
push
test
movsb
xor
and
jge
movsl
xchg
jno
enter
jns
add
mov
arpl
adc
cmp
and
dec
xchg
pop
lods
out
mov
cmp
inc
insb
arpl
xlat
iret
cmp
andl
in
and
test
out
push
in
lock
popa
pop
aam
pop
pop
rcll
jl
cmc
inc
xchg
bound
and
add
flds
push
lea
adc
ss
xchg
mov
loope
fs
or
imul
loope
mov
push
repz
push
push
mov
stos
push
push
out
aas
mov
push
mov
push
int3
fsubs
push
xchg
out
fdivr
js
mov
dec
and
sbb
stos
scas
iret
inc
lods
push
mov
stos
in
negb
in
inc
sub
fcoml
mov
popw
add
das
cmpsl
rol
pop
movsl
add
fsub
mov
in
mov
mov
mov
push
cmpsl
and
imul
or
jp
sarl
mov
cmp
mov
mov
dec
lods
mov
pop
call
and
cld
cmpsl
jne
adc
mov
test
pop
cmpsl
std
outsl
insb
mov
adc
sahf
in
scas
stos
sub
add
aas
push
aas
add
pop
cmp
mov
pop
repnz
cmp
or
daa
jle
popa
xchg
divb
lock
arpl
dec
sbb
jle
lcall
cld
fs
fsts
sar
lret
cmp
sbb
lds
mov
popa
jb
cli
outsb
mov
pop
and
cmp
mov
pop
push
leave
mov
inc
cmp
cli
xor
cmp
mov
sub
or
xchg
xchg
das
test
cltd
dec
push
jno
add
sub
test
push
mov
add
in
dec
jg
iret
xlat
loop
or
cmpl
flds
and
jmp
rcrl
sub
xchg
dec
xchg
dec
mov
xor
loopne
mov
or
add
test
ret
xor
jo
or
sbbb
arpl
imul
mov
insl
sbb
pop
cmp
mov
into
cmp
xchg
mov
aad
pop
mov
dec
adc
sbb
call
dec
dec
jl
push
cli
lahf
mov
in
imul
subps
cli
mov
idivl
inc
test
ss
insb
dec
movsb
pop
lds
xorb
cmp
sbb
sti
cmp
aaa
repz
inc
push
fidivl
inc
sbb
mov
and
fs
sbb
cmpsb
pop
insl
sti
cld
mov
int
adc
mov
fistps
push
stc
cmpsl
adc
iret
dec
xchg
lret
repz
jmp
mov
loope
out
repnz
inc
xor
push
jl
adc
adcb
flds
fcmove
jo
mov
sbb
dec
push
add
in
ja
jp
and
ja
xchg
pop
andb
fcmovnu
mov
cmc
test
lret
repz
mov
insl
fldl
mov
loopne
mov
dec
cmp
push
mov
fs
xchg
jb
xchg
xor
sub
mov
push
div
add
lahf
ds
lahf
aam
stos
ret
fdivs
pop
fs
mov
cmpsb
cmpsl
xor
push
test
add
mov
test
int
jmp
lods
imul
mov
ret
xor
push
outsb
adc
cmp
out
jp
mov
sub
cld
repz
add
pop
sub
cs
mov
jb
dec
stc
aaa
mov
add
mov
mov
mul
adc
pushf
lods
xorb
jmp
fcompl
mov
daa
notb
pop
pop
add
frstor
sub
jb
insl
mov
in
or
inc
mov
sbb
lock
pop
cmp
nop
jp
testb
push
lds
imul
push
stos
mov
popa
mov
xchg
lds
jbe
mov
iret
stos
cmpsl
shl
ret
out
scas
fnstenv
out
mov
popf
loopne
lds
clc
add
add
jge
push
dec
imul
int3
dec
push
ffree
mov
lret
cmpsb
jo
scas
cmc
adc
inc
pop
push
jnp
les
js
lods
mov
arpl
aaa
mov
lahf
adc
inc
mov
lahf
inc
cmp
add
sub
push
shrl
fwait
sub
testb
mov
push
xchg
pushf
sub
mov
add
and
mov
fistl
lcall
mov
repz
pop
mov
adc
sub
fsubrs
test
adc
orl
lods
xchg
in
int3
in
lds
mov
fdivr
or
cld
mov
and
push
int
push
adcb
xor
sti
pop
popf
aas
or
les
adcb
xchg
test
and
sbb
pop
sbb
adc
push
popa
or
loop
rcrl
in
daa
xchg
nop
cmpsl
mov
daa
mov
ret
xor
mov
fdivl
fs
pop
insb
mov
and
iret
cs
jle
ja
cmp
test
push
inc
inc
mov
mov
ss
push
sbb
and
jle
sarb
les
xor
or
outsb
sub
leave
xor
ficompl
xchg
and
fs
jmp
jl
sbb
adc
inc
mov
scas
xor
jo
and
leave
jbe
pushf
scas
shlb
enter
and
rolb
gs
lds
popa
xlat
mov
mov
imul
sahf
xor
mov
outsl
push
lret
cmc
dec
mov
xchg
mov
cli
mov
out
jae
lods
push
pop
decl
enter
decl
lret
and
in
jl
pop
mov
mov
lds
aaa
repz
jge
adc
xchg
xchg
pop
xchg
cwtl
xor
pop
cmp
fwait
adc
lods
mov
pop
sbb
ds
stos
hlt
inc
fwait
in
mov
push
faddl
mov
push
xchg
cmp
popf
inc
mov
int
lea
xchg
mov
frstor
cmp
inc
push
add
bound
cmpsl
xchg
sub
pop
xchg
rclb
xchg
pushl
pop
sbb
or
lea
adc
sub
sub
icebp
scas
loopne
into
xor
imul
ret
push
jmp
mov
rcl
jp
or
push
cmp
sub
rclb
jbe
dec
mov
mov
cmp
mov
aaa
mov
cmpsb
push
ljmp
add
movsl
cmp
out
int
cld
mov
inc
sub
jae
cld
lret
mov
pop
cld
jno
je
daa
xchg
testl
popa
test
inc
adc
mov
jbe
insl
sbb
inc
into
ret
pusha
out
dec
cmpsl
adc
jmp
and
sbb
sub
sub
xor
jns
mov
je
xor
test
or
xchg
cmp
ret
das
push
cmp
sbb
push
int
mov
insb
pop
pop
shrb
mov
lret
xor
mov
in
sbb
xor
pop
lret
jne
sub
mov
dec
xor
das
jecxz
bound
lcall
dec
inc
inc
push
and
dec
jb
mov
rcll
inc
pop
fnstenv
loop
xorl
inc
jecxz
or
shr
mov
pop
inc
mov
fisubs
in
cmpsl
mov
jmp
push
dec
lock
icebp
dec
jne
in
xor
mov
lods
and
outsl
fwait
inc
push
add
cmp
fcomps
movsl
mov
lret
inc
xchg
dec
loop
jecxz
jb
les
mov
push
cmpsb
bound
fs
fldl
inc
jp
mov
adc
lods
fidivs
pushf
lds
xlat
pop
lret
sbb
mov
add
pop
cmpsl
pop
or
iret
mov
add
gs
shll
mov
fisttps
lret
xor
push
push
pushf
mov
out
mov
in
test
cmp
inc
call
popa
mov
mov
xor
leave
test
fadds
je
aam
push
jne
jp
jp
pause
push
pop
sub
out
les
mov
in
xchg
and
mov
leave
xchg
cli
into
pop
pop
push
ret
jge
push
xor
mov
lock
dec
ss
push
push
outsl
nop
xor
or
icebp
sub
lcall
push
testl
mov
pop
cmp
adc
inc
out
cwtl
dec
mov
pop
out
jp
icebp
lea
imul
ret
push
das
or
xor
jns
shll
je
in
sub
in
xchg
stos
fimuls
rol
cs
and
imul
mov
lahf
xor
cli
je
mov
adc
or
dec
dec
in
sbb
sbb
dec
test
imul
pop
sub
dec
repnz
mov
call
cmpsb
call
inc
sbb
push
sub
sbb
and
negb
mov
lds
out
pop
std
xchg
bswap
aad
ss
mov
xchg
mov
add
es
pusha
cmp
inc
mov
lret
jb
and
mov
jge
or
xchg
daa
imul
out
push
sub
sbb
mov
orl
mov
adc
das
movsl
dec
jo
mov
cmc
mov
mov
push
roll
pop
sub
jns
jnp
jge
icebp
adc
cmp
in
lahf
mov
push
arpl
mov
xchg
or
mov
pop
pushf
mov
ret
xor
push
mov
gs
hlt
sub
jl
mov
or
stos
mov
push
cltd
push
pop
loopne
bound
mov
lods
push
lahf
and
jo,pn
cld
sahf
sub
lock
inc
mov
mov
cwtl
add
jbe
scas
mov
add
icebp
jne
ljmp
jmp
fsubp
movsl
insl
rorb
mov
mov
call
add
add
xchg
jge
aam
mov
pop
lcall
mov
fs
xchg
arpl
flds
cltd
lock
aam
mov
xchg
mov
fs
xchg
xchg
mov
mov
ret
test
add
mov
gs
mov
mov
mov
cmpsb
mov
mov
loope
push
ret
mov
ret
inc
sub
lret
aad
jae
data16
xchg
inc
clc
mov
data16
dec
nop
in
adc
repz
into
movsb
test
push
dec
orb
ja
fwait
hlt
sub
lds
das
andl
mov
arpl
xor
adc
xchg
mov
inc
iret
insl
jecxz
or
out
int3
mov
and
or
dec
mov
sti
push
fs
imul
dec
data16
jo
mov
mulb
mov
adc
jge
ds
fs
and
lret
lods
jb
pusha
cmp
sub
test
ss
pop
scas
fsubs
repnz
dec
lcall
or
mov
aam
pop
outsb
inc
mov
xor
xchg
lahf
adc
pop
mov
je
sbbb
dec
icebp
jb
rcl
pop
cmp
ficomps
dec
xor
push
add
lods
daa
and
pop
lret
cmp
addr16
clc
xlat
fwait
xchg
push
mov
and
pop
pusha
repnz
fucomi
enter
dec
cmp
add
mov
lcall
or
add
and
lds
xor
push
mov
test
mov
mov
in
add
shlb
pop
stos
nop
jmp
push
ljmp
sub
stos
mov
cs
mov
jae
pop
popa
shrl
movsl
push
dec
adc
test
and
add
negb
push
mov
xchg
repnz
push
icebp
repz
imul
mov
fdivr
dec
adc
jnp
addr16
int
and
stos
lds
jge
add
inc
xor
gs
inc
imulb
pop
jle
lds
subl
clc
and
js
frstor
das
mov
or
out
pop
fldcw
jnp
aas
inc
sub
cmp
and
inc
add
cmpsb
sbb
push
cmpsb
adc
gs
pusha
pop
mov
cmpsl
divl
push
fstpl
mov
addb
push
sbb
sbb
sbb
push
rclb
dec
mov
jae
adc
fisubrl
loopne
nop
mov
mov
cmp
jge
inc
dec
adc
js
xor
inc
push
or
in
lods
jae
imul
fisubrl
jge
inc
test
rcrl
sarb
xchg
out
cmp
lods
daa
adcl
sub
stos
inc
iret
std
xor
stos
mov
std
aam
cmp
inc
cmp
pop
jge
sub
sbb
xchg
jns
pop
pop
int3
into
ror
clc
lcall
sbb
adc
aam
mov
adc
lds
int
sub
mov
andb
repz
cli
jbe
sbb
loope
fs
mov
ret
fstpt
mov
or
sahf
mov
or
inc
dec
cmp
sbb
and
add
popf
and
mov
test
jle
jnp
xchg
cli
subl
and
xor
mov
adc
loope
xchg
shrb
lds
mov
test
cmc
cmp
push
cmp
stos
pop
mov
stos
mov
mov
and
ret
xchg
insb
sub
sbbb
pop
addb
jno
and
cld
sbb
mov
adc
mov
ret
frstor
inc
addl
lcall
fcomip
and
rolb
std
mov
cmp
call
jo
sbb
pop
pop
sub
testl
xchg
and
mov
jl
mov
jns
push
xchg
je
orb
test
aad
dec
mov
or
push
std
ljmp
inc
movsl
push
sub
nop
in
mov
and
fisubs
jno
adc
sub
inc
into
data16
into
stos
idiv
mov
and
aaa
adc
out
sti
enter
in
or
push
shlb
push
xchg
add
outsl
jno
in
mov
cs
sbb
ds
cmp
fs
cltd
lcall
push
cmp
in
mov
sbb
adc
inc
jo
jne
test
pop
mov
fildll
cwtl
add
sub
ja
popf
cmp
push
pop
test
push
push
sbb
cmpsl
imul
add
and
mov
adc
call
fs
hlt
pop
cltd
arpl
popf
cmp
xor
xchg
add
repz
paddd
xchg
sbb
enter
shlb
sub
popf
scas
jge
ds
or
dec
and
cmp
mov
mov
push
cmp
paddsw
sbb
push
cmpsl
sbb
and
in
out
and
shr
test
mov
xor
inc
push
jmp
xchg
into
filds
es
aam
cwtl
pop
clc
jae
dec
lret
add
jb
add
jl
sbb
imul
inc
lea
adc
xchg
lods
stc
cmp
xor
xor
sub
xor
inc
vcvtss2sd
pop
out
sbb
jecxz
add
frstor
jne
jle
mov
pushf
pop
xor
lock
sub
inc
and
xchg
sarb
jae
xor
js
xor
mov
cmp
dec
ficomps
lcall
cmpsl
gs
fdivrl
jmp
loopne
notl
xchg
in
xchg
stos
cmp
sub
idivl
ret
sti
popl
je
ljmp
dec
jp
add
cli
adc
xor
ret
cltd
jle
pop
stc
lret
xchg
sub
sbb
mov
int
jecxz
cwtl
or
rol
test
mov
jb
adc
xor
fstps
aaa
pop
xor
ds
fadd
shlb
add
pop
fsin
pop
cmp
jg
mov
pop
leave
mov
xchg
or
repnz
aad
add
je
jnp
xchg
shlb
lret
imul
addr16
js
mov
in
cwtl
add
clc
adc
add
xor
mov
jecxz
and
inc
fxch
inc
xor
xor
xor
mov
adc
or
insl
jge
xchg
cmpsb
shr
clc
pop
arpl
adc
into
jmp
dec
add
sbb
cmp
dec
xor
jnp
adc
int
mov
loopne
pop
push
fwait
pavgw
xchg
sub
jp
mov
lahf
adc
ss
jmp
adc
xor
pop
pusha
insb
mov
out
or
inc
ljmp
testl
mov
out
insl
sub
cmc
adc
cli
fnstcw
movq
rdtsc
pop
addr16
dec
mov
add
mov
mov
add
add
mov
repnz
dec
mov
adc
jbe
daa
pop
movsl
fucom
mov
sub
xchg
adc
mov
mov
mov
imul
add
fstpt
sbb
sub
cs
js
mov
cs
repnz
or
decb
data16
mov
lahf
lods
jmp
out
ficompl
gs
mov
push
ljmp
enter
mov
shrl
mov
pop
xor
hlt
push
leave
popf
negb
aas
sub
sbb
or
dec
nop
stos
sahf
jno
push
mov
mov
rcrl
mov
xchg
dec
fcomps
mov
jnp
cmc
int
ret
add
pusha
arpl
and
fistl
xor
rcrl
and
sbb
adc
push
xchg
sbb
inc
fnstcw
repnz
aam
scas
into
mov
mov
stos
in
adc
xor
fmulp
rcrb
scas
pushl
pop
sub
data16
xor
xchg
pop
push
ret
jge
add
int
out
sbb
jno
lock
fdivrp
clc
adc
push
push
dec
in
inc
je
ljmp
cld
bound
mov
jno
dec
nop
and
outsl
inc
inc
cltd
loop
daa
vshufps
loopne
or
add
lahf
cltd
movsb
adc
push
mov
mov
push
inc
mov
cmpl
dec
outsl
arpl
insl
loopne
lahf
lcall
pop
xchg
ficoms
outsl
xchg
add
cmc
adc
mov
repz
sub
inc
or
xchg
mov
call
testb
clc
cmp
push
adc
ret
jg
out
loopne
mov
or
sub
add
into
daa
push
orl
insb
pop
jecxz
fimuls
jg
inc
sbb
sbb
lods
rcrb
and
xchg
xor
std
popf
scas
aas
mov
or
mov
cld
mov
jo
fisubrs
adc
sub
stos
sub
adc
std
mov
xor
pop
push
rolb
add
adc
lea
xor
lahf
sbb
sahf
sbb
enter
adc
loopne
and
xchg
push
jg
sbbb
in
sarb
lahf
out
jecxz
insl
adc
xor
dec
add
ljmp
push
inc
cmpsl
pop
bound
or
jp
push
sub
push
loope
mov
xchg
inc
push
clc
out
lahf
stos
or
rcrl
mov
ret
fidivl
push
popa
mov
jno
ficoml
jo
int3
in
pop
rclb
inc
xchg
adc
imul
jmp
xchg
mov
adc
push
cltd
xor
popf
pop
mov
xchg
or
and
adc
stos
xor
pushf
icebp
mov
cmc
dec
mov
lea
jl
mov
mov
flds
pop
movsl
xchg
push
les
sbb
mov
daa
popf
xor
push
sub
mov
sbb
mov
mov
aad
push
fidivrs
pusha
test
dec
mov
lock
shl
mov
mov
es
popf
scas
or
decb
punpckhbw
add
sbb
mov
push
pushf
cmp
jae
cmp
test
lcall
xor
ljmp
mov
movsb
fnstcw
std
cli
scas
stos
cli
mov
popa
lods
sub
inc
cmp
pop
test
inc
adc
nop
sub
mov
aad
sub
pop
mov
out
mov
mov
add
aam
gs
mov
mov
pop
or
stos
repnz
lcall
imul
into
addr16
test
or
out
cmp
inc
daa
repnz
add
fcmove
aad
bound
cmp
push
pusha
nop
and
dec
mov
inc
jle
or
pop
movsl
lea
out
mov
dec
jle
dec
adc
jecxz
or
adc
test
repnz
push
test
aam
push
sub
lcall
aas
or
ret
push
push
cli
push
fadds
add
xchg
jne
adc
lods
jp
je
sub
insl
movzbl
imul
outsb
rcll
mov
adc
mov
cmp
out
loopne
je
or
or
pop
sub
cmpsb
mov
out
insb
mov
pop
scas
mov
hlt
cltd
cmc
out
push
adc
or
into
ficompl
insl
mov
xchg
or
and
sbb
add
dec
loop
push
sub
dec
xchg
ss
adc
sub
stos
xor
out
arpl
stos
imul
clc
jo
push
pusha
fbstp
outsb
fsubr
mov
xor
add
stc
dec
cltd
aad
adc
xchg
int
mov
cmc
repnz
xor
add
aam
out
pop
sbb
sti
rcll
out
cmp
cld
mov
mov
insl
fbld
dec
jae
xchg
push
fwait
sub
add
lret
sbb
repnz
dec
ljmp
sub
push
test
push
sbb
mov
and
or
mov
push
inc
mov
xchg
or
ss
adc
in
dec
mov
jae
xchg
ja
inc
aam
aam
mov
push
cmp
popl
sahf
gs
jo
cmp
adc
sbb
js
arpl
jle
in
xor
test
mov
xchg
xchg
jle
rclb
xor
fcoml
xchg
mov
jge
jmp
sahf
call
fmull
add
mov
outsb
imul
negl
mov
xchg
not
outsb
inc
mov
jno
xchg
int3
fimuls
adc
inc
xchg
xchg
sub
out
pop
xchg
mov
dec
popf
and
and
ficoml
pop
lcall
in
imul
mov
pop
into
jnp
or
dec
aam
xchg
rcrb
dec
mov
mov
addr16
int
pop
push
pop
mov
jg
sti
pop
cmp
imul
mov
xor
jecxz
xor
mov
ljmp
and
sub
and
mov
out
outsl
stos
add
fcom
sahf
aas
rol
in
jns
outsl
pop
xlat
add
mov
sarb
and
mov
sub
pop
push
cmpsl
push
pcmpgtb
xchg
loop
repnz
sbb
jge
mov
pop
xchg
pop
stc
sub
int3
inc
pop
fcoms
ror
cmp
add
insl
lods
cmp
clc
int3
inc
xchg
fidivs
scas
loopne
jne
inc
inc
out
sbbl
std
pop
pop
cld
stc
out
jbe
hlt
bound
dec
add
frstor
aad
mov
scas
movsl
mov
adc
cmc
push
sub
xchg
sub
adc
mov
ret
pop
mov
mov
test
test
sahf
sbb
xor
xor
sbb
ss
push
nop
in
or
ss
lea
push
mull
or
lahf
fidivrl
loope
mov
into
jo
mov
out
jne
add
add
lods
in
shr
sbb
mov
sti
jnp
push
xor
cmpsl
xchg
daa
scas
lret
and
pusha
add
fnstcw
or
test
mov
gs
push
pop
cli
stos
js
mov
mov
movsl
daa
jl
jno
leave
mov
dec
nop
and
test
hlt
mov
xchg
popf
je
inc
pop
test
xchg
frstor
mov
int
dec
js
out
jmp
dec
sar
lret
sbb
cmpsb
mov
call
popa
sarl
call
xchg
movsb
in
and
call
ljmp
imul
pop
lcall
negb
push
repnz
fcomps
aas
mov
mov
mov
mov
repz
sbb
pop
out
sar
clc
push
fwait
dec
push
push
add
daa
in
sbb
mov
arpl
pop
ja
adc
push
cmpsb
push
mov
lock
inc
and
adc
xchg
pusha
loopne
push
mov
mov
dec
fwait
or
and
loopne
stc
jbe
and
pop
lcall
sbb
sub
js
enter
mov
imul
and
dec
cli
dec
je
add
push
adc
sub
movsl
xor
sub
or
mov
cmp
mov
lahf
or
xchg
test
fstl
out
pusha
lcall
repnz
insl
jne
in
hlt
pop
cld
mov
gs
mov
mov
repnz
repz
xchg
dec
gs
clc
shrb
sbb
pushf
pop
pop
popf
push
mov
nop
out
push
in
pop
xor
lret
outsl
pop
push
fistps
or
jmp
pop
fildl
mov
aam
sbb
push
add
xor
cmc
sbb
cmp
das
push
out
test
cmc
add
cmc
jp
inc
test
cmp
test
lock
dec
movsl
imul
ja
mov
int3
xchg
outsb
pushf
iret
rcrl
repnz
or
mov
jge
shrb
adc
mov
adc
sub
mov
gs
mov
loopne
out
fmuls
xchg
in
jp
pusha
repnz
mov
adc
mov
fisttps
push
push
aas
insl
js
mov
jge
add
xor
push
in
sbb
cmpsb
mov
pop
les
hlt
mov
psubd
jp
addr16
and
inc
lea
dec
enter
pop
lcall
sbb
add
and
jo
sar
cmc
inc
ret
jns
pop
and
and
push
adc
push
dec
dec
dec
inc
fistpll
push
cli
pop
sbb
mov
cmp
push
pop
add
mov
sarl
aad
rolb
jl
insl
fmull
dec
inc
mov
dec
sub
addr16
in
subb
add
add
cmp
pop
jecxz
scas
aam
inc
popa
in
ljmp
aaa
insb
imul
mov
mov
pop
hlt
mov
inc
shlb
xchg
mov
pop
adc
xchg
dec
pusha
loope
daa
pop
cmp
add
rorl
ljmp
scas
daa
ficomps
sbb
movsl
push
or
pop
pusha
leave
imul
sahf
ret
mov
push
lea
add
mov
insb
outsl
mov
adc
jb
jmp
cwtl
xor
cltd
shll
into
xchg
or
xor
hlt
cmp
jp,pn
fsubrp
mov
stos
popf
data16
lret
repnz
dec
aaa
sub
dec
cmp
jecxz
pop
fwait
dec
pop
pop
sub
xchg
stos
popf
js
sbb
outsl
shlb
sbb
dec
subb
fimull
stos
movsb
inc
in
sbb
sbb
dec
and
jne
sbb
jge
scas
pusha
fs
mov
into
mov
inc
scas
mov
cltd
or
push
mov
push
xchg
in
push
nop
lahf
es
int
mov
pop
loopne
mov
ljmp
dec
hlt
sbbb
fcmovbe
inc
dec
pop
cld
call
jo
add
fs
adc
fimull
fwait
lret
sub
sub
decl
cmpsl
arpl
cmpb
mov
int3
clc
fcoms
sbb
aas
xor
cli
xchg
jle
mov
xchg
lret
in
jle
ss
sub
or
pop
js
repnz
aas
mov
mov
aad
mov
add
movsb
fidivrs
xchg
out
jg
cli
lret
push
popa
stos
psraw
aaa
fimuls
rclb
scas
mov
fldcw
dec
adc
mov
jge
out
out
or
or
or
mov
mov
fiadds
sub
in
xchg
jno
repz
xchg
sbb
xor
aad
andl
mov
ljmp
cmp
sub
push
enter
xor
sbb
shll
jns
out
mov
adc
sub
in
ljmp
add
or
orl
dec
xchg
int
aaa
stos
push
stos
adc
xor
fwait
hlt
cmp
pushf
push
sub
inc
lcall
jno
add
imul
out
pop
or
cmpsb
hlt
stos
xchg
out
or
mov
stos
or
repz
dec
inc
bswap
add
jmp
cmp
mov
dec
jle
adc
cmp
fldl
inc
inc
lahf
sub
dec
ja
mov
arpl
es
xchg
into
cs
in
hlt
push
xchg
loope
outsl
outsl
lods
fnstsw
out
test
mov
sub
xor
adc
stc
mov
inc
stos
jbe
inc
xchg
fs
push
xchg
cmpsl
pop
add
xor
out
ja
scas
xchg
stos
xchg
hlt
in
push
jmp
movsl
pop
lea
sub
imul
sbb
roll
rcll
xchg
scas
pushf
sbb
pop
jne
in
fisttpll
mov
in
push
inc
cmp
inc
cmc
xchg
repnz
inc
jb
xor
pop
pop
mov
in
hlt
aad
cmp
mov
sbbl
or
imul
cmp
push
aam
push
add
fisttpll
xor
fwait
xchg
ljmp
and
popf
jp
adc
pop
xchg
xor
int
cmc
fs
out
adc
aas
in
dec
inc
push
mov
cmp
enter
mov
test
mov
xchg
jmp
adc
mov
mov
push
jno
push
cli
mov
or
or
xchg
rorl
sbb
push
incb
jl
push
mov
inc
inc
push
push
jb
xlat
dec
jge
sbb
xchg
into
mov
add
in
cmc
cltd
scas
add
add
push
mov
and
outsb
add
dec
imul
mov
dec
push
fsts
xchg
cmp
incl
insl
cmp
imul
inc
inc
nop
add
addr16
sub
jns
xchg
jmp
xor
test
sbb
mov
jnp
imul
mov
dec
add
test
sbb
pop
inc
ret
sub
jg
push
mov
imul
xor
adc
ja
cld
sbb
ret
add
or
push
and
popa
out
add
push
or
jmp
movsb
jbe
call
jg,pt
push
mov
outsl
mov
imul
mov
dec
mov
mov
xor
cmp
jnp
push
jmp
dec
inc
mov
or
pop
xor
insl
add
ljmp
or
dec
das
pop
push
nop
sbb
cmp
scas
or
gs
lds
sub
xor
scas
daa
jl
ss
loope
subl
or
loope
int3
subl
add
lcall
notl
cmp
jecxz
pop
inc
repnz
outsl
inc
pop
sub
sub
xor
shl
push
cmp
enter
jb
sbb
adc
test
shl
mov
pop
xchg
jnp
sub
lock
rcrb
inc
jmp
aaa
in
ljmp
lods
jae
xchg
cmpsb
sub
lea
adc
dec
ret
out
mov
adc
flds
lcall
cltd
cmpl
push
es
mov
sbb
cmp
mov
fildl
mov
imul
int
je
inc
jb
inc
or
mov
repnz
mov
test
jb
pop
es
or
dec
sbb
aas
fidivrl
mov
outsl
sub
enter
mov
pop
ds
into
call
aaa
xorb
mov
push
xor
adc
addl
mov
sub
frndint
leave
aas
or
ljmp
mov
out
cmp
pop
sar
jmp
ret
pop
or
adc
mov
outsl
sahf
lods
jmp
xchg
push
shr
cmc
sub
push
insl
les
pop
pusha
test
clc
fsubrs
mov
adc
jb
lahf
loopne
inc
cmpsb
data16
jge
mov
inc
ljmp
adc
jbe
jecxz
mov
mov
outsb
mov
pop
pop
cmpsl
mov
adc
neg
loop
and
lret
ret
rcrl
adc
dec
cwtl
pop
add
jo
xchg
xor
or
int3
stos
inc
jp
sbb
fadd
stos
or
gs
aas
xchg
mulb
xchg
call
out
xchg
rcrb
cltd
inc
int
and
mov
jbe
ljmp
xlat
out
jecxz
mov
xor
mov
push
mov
inc
cld
and
adc
fst
mov
xor
iret
std
mov
xchg
test
sub
addr16
popf
loopne
xor
sbb
cmpsb
sbbb
mov
movl
movsl
lds
pop
mov
add
cmp
sahf
bound
mov
jg
dec
mov
sub
pop
inc
dec
icebp
nop
mov
or
xor
xor
sub
sub
fdivrs
sbb
jp
push
xadd
lret
iret
xor
sub
into
or
xor
dec
cmp
in
jge
es
dec
xor
packssdw
push
in
lock
testb
lods
inc
das
inc
xchg
xor
ljmp
mov
sbb
sar
mov
adc
inc
jmp
mov
mov
rol
test
aam
push
insb
pop
push
add
ja
and
add
loop
test
repnz
cmp
inc
scas
jg
cltd
push
cld
jno
xchg
push
pop
cmp
and
pop
jmp
call
lea
call
in
push
lret
lds
dec
xor
lods
into
and
xor
les
and
aam
jecxz
xor
jnp
add
adc
xchg
pop
add
testb
jp
xchg
rcl
xor
aas
pop
out
clc
fldt
mov
cmp
sbb
mov
add
clc
in
test
repz
push
pusha
les
lahf
iret
push
add
stos
insb
popf
test
inc
push
dec
cmpsb
nop
add
jo
sub
mov
int3
lds
insl
stos
or
xchg
jns
adc
cmp
pop
adcl
or
outsl
push
inc
or
in
cmp
push
xlat
xchg
inc
pushf
jns
int3
in
push
out
popa
ja
das
or
and
jo
test
sbb
cmpsl
lock
pop
lods
and
push
cmp
xchg
jb
add
or
iret
mov
mov
xchg
pop
mov
out
push
mov
in
cmovl
sbb
pop
xchg
jg
jmp
sbb
add
fidivrl
call
daa
int
aam
mov
pop
scas
dec
push
jne
hlt
sarb
mov
frstor
call
and
enter
pusha
inc
push
pop
push
repz
dec
addl
mov
inc
xchg
aas
mov
add
pop
into
lahf
dec
aam
loopne
or
lock
dec
push
into
sub
rclw
mov
mov
push
sbb
insb
mov
ss
shl
inc
scas
sti
cltd
gs
and
movsl
xchg
pop
xchg
jo
stos
and
shrl
dec
dec
inc
std
imul
js
inc
gs
mov
out
mov
adc
jge
addr16
outsl
pop
pop
jo
add
daa
mov
ret
insl
inc
mov
inc
aaa
pop
sbb
jb
jmp
fs
xchg
orb
pushf
push
or
cmc
test
sub
inc
outsb
jmp
sub
inc
jle
pop
mov
xorl
fnstsw
mov
shlb
xchg
and
mov
xchg
mov
cli
mov
cwtl
pop
pop
dec
fistpl
xchg
cmp
pushf
pop
jbe
sbb
cmpsb
sti
xlat
jp
loope
inc
lea
push
push
sbb
mov
cmc
cmp
movsb
adc
out
nop
loopne
add
subw
adc
mov
fildll
lds
or
adc
arpl
cmp
mov
and
push
push
call
loop
jle
push
mov
push
insb
mov
sbb
dec
add
movsl
adc
jb
mov
or
push
sbb
add
test
cmp
xchg
inc
js
fcompl
arpl
dec
jle
ficoml
lods
sbb
xchg
dec
daa
dec
lcall
push
out
jp
sub
sub
lret
fs
xlat
hlt
arpl
mov
cld
or
cmp
push
cmpsb
sbb
aam
cmovnp
sub
sbb
adc
js
dec
andl
sti
sahf
jmp
cmp
push
mov
cmc
mov
xor
fcomps
out
repnz
or
sbb
test
je
xchg
push
rorb
xor
adc
mov
sbb
rorb
push
mov
push
push
mov
icebp
data16
loope
xchg
ret
xlat
addl
sub
mov
rclb
xchg
xor
popa
insl
andb
cmp
insb
pop
popa
mov
xor
cli
xchg
lcall
flds
loopne
gs
push
mov
insl
mov
push
sti
stos
inc
push
mov
and
xchg
xchg
out
sub
movsl
ja
cmp
mov
lds
xorl
popf
mov
test
aas
mov
mov
out
inc
test
push
mov
out
xchg
inc
push
inc
std
les
je
pop
pop
dec
into
mov
sahf
inc
loop
fbstp
pop
daa
ror
hlt
call
pop
push
ja
xchg
mov
pop
nop
lea
and
sbb
dec
popa
jle
mov
jb
mov
das
xchg
cmp
loopne
sti
in
scas
xchg
lea
cmp
dec
ss
lods
push
lret
mov
inc
mov
push
mov
decl
enter
out
js
test
gs
repnz
add
mov
xor
push
rcrl
mov
dec
push
cld
push
lds
and
pop
sahf
sub
aad
adc
push
into
outsb
xor
lods
push
or
sub
cmp
inc
mov
imul
nop
jnp
and
cmpsb
or
xor
lods
dec
cmp
shlb
stos
adc
sbb
cmpsl
mov
and
outsl
and
cli
addr16
sub
sbb
into
or
jno
mov
aam
mov
insb
push
rcrl
inc
add
adc
xchg
and
jecxz
dec
xchg
or
mov
pop
ja
mov
mov
out
test
pusha
enter
rcr
and
or
cmp
stos
and
divl
cs
dec
das
adc
fdivrs
mov
jno
dec
mov
aad
push
dec
jecxz
or
mov
mov
jbe
clc
mov
jnp
sub
cwtl
cmp
jo
adc
inc
hlt
stos
jmp
xor
or
jge
mov
shll
mov
push
push
int3
inc
aaa
dec
aam
and
pop
in
insb
repnz
stos
jno
scas
fsts
dec
stc
dec
pusha
pushf
repnz
xchg
mov
fmulp
xchg
mov
sbb
imull
bnd
mov
aaa
jno
aad
loop
jg
cmpsb
jnp
in
sbb
inc
test
ljmp
add
in
in
dec
cmc
jp
aas
es
cmp
xor
mov
push
movsl
mov
push
pop
add
add
mov
mov
and
xor
mov
dec
xor
lahf
xchg
xor
ja
jmp
inc
lret
mov
pop
add
stc
fstpl
ja
sub
inc
shll
in
and
outsl
nop
orl
orb
sti
into
outsl
scas
lea
mov
jbe
gs
push
add
push
repz
dec
mov
dec
mov
xchg
mov
jmp
imul
inc
mov
mov
cmp
lret
sti
test
sbb
lods
arpl
or
popf
sub
xor
int
jno
test
ss
sub
sbbb
mov
hlt
push
jmp
or
lea
mov
or
sbb
icebp
imul
cmpsb
mov
mov
call
out
cmc
sti
or
dec
pop
push
sub
int
mov
lods
mov
outsb
sahf
and
mov
mov
bound
push
mov
movsl
hlt
jp
sub
dec
ja
xchg
sarb
int3
test
mov
sub
pushf
pop
jo
fsubrl
insl
fildl
ficompl
push
ljmp
pop
mov
lods
iret
mov
cmp
cmpsl
daa
jo
imul
test
movsl
loope
mov
pop
push
push
mov
lds
outsl
in
movsl
enter
inc
jae
mov
pop
mov
xor
test
xlat
das
mov
or
es
call
or
mov
xchg
hlt
lds
or
cmp
pop
push
lret
std
mov
ljmp
push
xchg
test
pop
pop
shrb
xchg
dec
mov
outsl
shrb
adc
jb
pop
jbe
sbb
xchg
pop
adc
stos
or
adc
add
xlat
in
push
mov
pop
mov
mov
or
mov
mov
mov
bswap
aas
cs
popa
add
sub
daa
xchg
mov
mov
jg
cmp
in
scas
jp
mov
jge
fbstp
xor
mov
rcrl
mov
cmp
xchg
dec
nop
push
mov
es
cmc
push
push
or
divl
bound
mov
mov
and
out
cmp
inc
add
leave
push
cmpsl
mov
sbb
test
mov
stos
mov
jle
mov
or
scas
mov
scas
add
xchg
test
into
mov
mov
and
add
hlt
and
sti
jg
dec
orl
stos
push
cmp
ss
scas
sub
lcall
aad
or
sub
out
popa
mov
jno
scas
dec
dec
pop
jns
pushf
and
cmp
daa
mov
sti
in
add
push
enter
scas
jmp
movsl
pop
lods
fists
adc
popa
fxch
repz
pop
or
push
sub
cmc
orl
in
call
rorl
es
cmp
pop
shl
fwait
jg
mov
cltd
arpl
mov
jne
push
mov
aam
incb
mov
mov
ret
cmp
ja
pop
cmpsb
in
ds
fwait
arpl
mov
ljmp
test
pop
inc
ja
jp
xchg
mov
add
push
add
cmp
mov
pop
add
xchg
xlat
popa
out
xchg
cmp
clc
out
mov
fwait
in
xchg
dec
jmp
pop
xrelease
adc
scas
mov
jmp
or
dec
or
bound
xorb
es
lcall
inc
xlat
push
inc
dec
in
lock
push
and
rorb
lea
cmp
jge
push
or
cs
and
jo
repz
das
xor
xorb
cli
fsubl
or
in
lahf
lea
cmpsl
cli
sub
pop
push
addr16
f2xm1
clc
push
add
out
daa
push
repnz
sbb
lcall
adc
xchg
fisubrl
outsb
ret
jo
das
dec
pop
xor
or
mov
and
xlat
dec
push
movsl
roll
popf
jae
push
pushf
sub
ret
jbe
popf
lret
pusha
pop
dec
inc
call
xor
daa
arpl
je
ds
mov
movsl
xchg
insb
mov
fmul
mov
cmc
aam
les
and
inc
push
push
push
or
or
sub
stos
lcall
in
sbb
jae
imul
jl
cmp
xchg
dec
jae
andl
ja
mov
ja
inc
inc
inc
mov
pop
out
dec
out
sub
or
stos
jne
pop
mov
ljmp
sub
sahf
ss
incb
push
sar
add
lahf
sub
lea
mov
pop
rorl
fmull
sub
repnz
pop
rcrl
rolb
and
adc
inc
into
dec
stos
stc
add
and
lods
addl
insl
and
xor
sub
push
scas
adc
mov
cmp
fisubl
sti
cmp
movsb
lahf
jb
mov
cmp
sbb
xchg
int
mov
mov
xor
outsb
xchg
jnp
lret
je
in
push
movsl
mov
aam
or
sub
repnz
inc
adcb
dec
mov
push
mov
jmp
aaa
std
pusha
cmp
and
fnsave
push
cmp
in
flds
insb
add
sbb
xchg
mov
int3
roll
add
jp
xchg
mov
mov
and
inc
cmp
shll
inc
mov
dec
out
fwait
shl
dec
les
cld
mov
out
or
in
cmc
inc
xchg
dec
lds
lret
cmpsb
mov
ds
add
add
es
sub
push
jns
inc
fwait
add
jne
jae
test
rol
dec
jl
arpl
xor
dec
or
mov
lret
pop
arpl
nop
insl
out
loop
divl
xor
dec
adc
mov
sbb
dec
add
lods
hlt
test
ret
mov
or
test
jl
or
fsubl
call
inc
cmc
mov
mov
das
jl
mov
cmp
pop
pop
and
insl
pop
inc
shrb
iret
inc
cs
rol
in
loop
push
dec
jne
pop
mov
test
dec
outsl
in
adc
or
dec
fdivl
andl
bound
aaa
mov
xchg
mov
adc
aas
testb
lea
mov
push
pushf
loope
insl
dec
das
icebp
decl
daa
int
push
pop
inc
and
and
push
mov
fcoml
add
jbe
lock
adc
add
ret
pop
pop
xchg
pop
popf
jns
mov
mov
test
int3
lds
xor
lahf
jecxz
lock
mov
scas
dec
cli
mov
jp
outsb
addl
cmc
std
jecxz
xchg
out
int
xor
shll
das
rolb
fwait
jmp
inc
xor
push
mov
add
insl
jg
dec
mov
inc
dec
addr16
inc
ret
fucomp
dec
push
xchg
add
insl
stos
jmp
inc
push
xor
dec
xor
fstps
mov
repz
lret
ja
pop
lret
mov
mov
je
mov
dec
xchg
jbe
cmpsl
test
or
ds
dec
out
cmpsl
inc
adc
andb
loopne
leave
jb
dec
imul
data16
sub
std
jg
adc
mov
mov
cs
fs
out
test
cmp
adc
push
mov
inc
and
in
imul
dec
pop
xchg
jb
popa
adc
push
lods
dec
ret
pop
ja
add
xchg
sbb
and
aam
mov
mov
shlb
movsl
les
aam
sbb
les
scas
fmulp
mov
in
inc
xchg
xor
in
mov
in
sar
roll
jp
dec
xchg
xor
sbb
pop
or
lods
and
sbb
inc
and
cwtl
into
loop
shrl
push
adc
sub
iret
dec
mov
frstor
leave
out
push
repnz
add
lcall
mov
jo
sbb
lods
in
xor
lret
cmp
mov
jnp
ljmp
xchg
fwait
pop
push
out
inc
jo
rorb
push
repnz
push
pusha
inc
cmp
pop
dec
push
rcll
cmpsl
add
pushf
push
leavew
in
and
inc
or
arpl
pusha
xchg
repz
jo
leave
mov
push
lcall
pmaxsw
cmp
pop
xor
les
arpl
dec
call
jnp
imul
jle
and
adcb
and
shl
fistps
test
inc
inc
and
cmp
mov
lret
in
lds
rcrl
mov
lahf
xor
mov
in
jno
divl
fimull
jl
jg
or
lret
mov
and
push
cmp
loopne
mov
dec
pushf
mov
popf
mov
pop
out
sbb
fs
push
or
lcall
mov
adc
and
dec
inc
mov
mov
fnstsw
and
xor
fsubs
lea
loope
inc
insl
loop
sbb
add
dec
fcomps
fcmovnb
mov
xchg
cmp
or
fsubp
jl
fsubrs
in
dec
pusha
je
in
sahf
fs
lods
cmp
dec
or
fidivl
fists
movsl
mov
mov
call
inc
fucomi
push
popa
mov
add
push
clc
xchg
push
das
mov
jmp
jmp
sbb
jl
jmp
push
cld
push
aad
pusha
jnp
dec
lds
daa
mov
fcoml
jl
mov
adc
aaa
or
pop
and
cld
movsl
inc
data16
xchg
jno
dec
pop
aas
adc
test
push
mov
es
out
pushf
inc
mov
test
mov
or
cmc
jle
fdivrl
fstps
pop
sarb
mov
sbb
outsl
daa
xchg
pop
or
fs
cwtl
mov
cwtl
mov
mov
enter
inc
xor
in
xchg
push
jl
icebp
inc
mov
insb
fdivs
cltd
lods
sub
out
mov
cmp
jmp
enter
push
adc
scas
add
adc
jo
fsubr
testb
mov
fldl
and
ficoms
mov
data16
pop
xor
pusha
pop
push
cmpl
rcrb
sub
and
hlt
pop
adc
mov
insl
or
push
test
or
out
jmp
lods
dec
adc
in
rclb
test
adc
adc
adc
stos
pop
xor
cmpsl
jge
mov
inc
sub
sbb
xchg
push
dec
dec
out
lahf
xorl
cmpsl
mov
sbb
leave
shl
jbe
popf
pop
dec
mov
loop
in
cltd
mov
add
lret
loop
pop
xor
inc
add
jno
sbb
mov
mov
push
out
adc
jb
faddl
jp
aad
jnp
out
repz
mov
fisubs
scas
enter
cmp
call
push
sti
add
or
mov
cmp
adc
int
out
out
pop
ret
lods
lret
mov
jns
pusha
jae
adc
shl
mov
movsb
pusha
mov
or
repz
jmp
mov
push
out
lcall
adc
pop
mov
mov
adc
imul
test
loope
in
mov
cmc
shll
call
push
dec
jl
pop
mov
jne
adc
stos
jge
or
out
push
stos
adc
sbb
movsl
lcall
repnz
cmp
lret
push
adc
and
mov
sbb
sub
add
fcoms
jg
add
in
xchg
add
cmpb
sub
cmpsb
popa
pusha
jbe
jmp
shr
fisttps
push
in
imul
fucomip
push
lret
and
faddl
stos
pop
mov
mov
adcl
xor
or
sub
and
mov
lahf
and
push
jo
and
pushf
aad
mov
int
push
inc
mov
mov
inc
clc
add
mov
pop
mov
notb
add
add
cld
cwtl
push
sub
lea
push
sbb
clc
pop
lods
pcmpeqb
sahf
mov
push
add
in
lcall
cmp
rcrb
cmpl
xor
mov
nop
insb
jne
xchg
mov
jmp
faddp
push
adc
repz
popa
gs
cmpsb
push
sub
push
stos
out
aad
fucomp
sti
lret
push
jo
adcl
iret
mov
inc
sbb
lds
cmp
jno
jns
dec
repnz
and
lret
jp
jo
mov
les
ss
adc
jo
push
lcall
jne
jns
ds
in
push
adc
outsl
mov
jnp
xchg
adc
bound
mov
cmova
cltd
or
mov
jg
subl
inc
jne
fidivs
cmpsb
push
mov
mov
cmp
in
inc
sub
push
cld
icebp
aas
mov
pushf
pop
pop
lock
inc
jmp
rorl
pop
xchg
cmpsl
test
stc
dec
mov
mov
jmp
mov
jnp
xchg
gs
xor
imul
call
pop
push
adc
xor
inc
movsl
cmp
pop
mov
cli
sub
jmp
and
pushf
add
popa
lcall
inc
jae
cld
insl
mov
cld
pusha
into
adc
inc
lods
adc
mov
push
add
scas
mov
fs
repz
dec
adc
pop
mov
sbb
push
jge
ss
and
and
lds
inc
mov
dec
and
mov
mov
popf
xchg
stc
pop
jmp
xchg
out
jbe
fdivr
mov
mov
lret
sub
inc
mov
mov
cmp
mov
stos
dec
push
decl
push
pop
inc
cltd
scas
aad
jmp
imul
loopne
mov
leave
or
movsb
jno
in
push
mov
pop
cmpl
or
sub
xchg
fists
into
pusha
jmp
test
sti
lds
add
xor
jmp
jae
shrl
dec
jae
jp
inc
and
pop
cwtl
push
mov
out
add
mov
ret
inc
call
mov
pop
push
jle
or
movsl
cli
push
mov
mov
cmp
cmp
mov
les
arpl
mov
ficompl
mov
jmp
clc
je
adc
outsb
pop
xor
push
negb
out
js
sarl
jns
adc
rolb
dec
sahf
push
rolb
je
xchg
call
xchg
sahf
rorb
pop
out
loop
jmp
dec
cmpsb
sub
jmp
call
push
mov
lods
dec
and
add
lcall
or
stos
in
and
addb
andl
pushf
in
fisubl
mov
sub
lods
popf
movsl
and
daa
pop
repnz
out
jg
ljmp
inc
dec
in
nop
jg
shlb
daa
les
jge
push
sub
jl
push
lahf
and
sti
jno
xchg
push
push
out
pop
orb
xor
stos
inc
jo
push
inc
fdivs
fmuls
fcmovbe
out
lea
sub
dec
mov
cmpb
fmuls
in
lds
mov
inc
dec
cmp
sbb
sbb
inc
xor
gs
mov
jp
xchg
icebp
mov
mov
cli
mov
mov
ret
and
sub
mov
or
mov
stos
inc
popf
inc
ljmp
ds
add
in
pop
or
rcll
fcmovu
mov
push
fdivr
mov
sbb
loope
lds
sub
sbb
stos
jmp
jne
inc
or
adc
mov
jne
xlat
add
push
fwait
cmp
fs
nop
mov
imul
stos
pop
push
dec
inc
bound
pop
xchg
mov
loopne
sbb
enter
and
sbb
fwait
sar
bound
add
loopne
inc
fs
out
and
add
in
jmp
xchg
adc
dec
les
mov
fldcw
or
rclb
sub
dec
popf
bound
xor
lret
push
iret
adc
push
dec
jp
in
orb
test
bnd
fucomip
ja
negb
sub
push
mov
mov
mov
out
addl
xchg
data16
mov
call
mov
mov
icebp
pop
jl
roll
push
test
aam
mov
pop
addr16
nop
pushf
jle
iret
imulb
adc
bound
jae
sbb
dec
push
or
repnz
es
lret
insl
aad
or
push
or
js
imul
and
pop
cmp
mov
lock
xor
stc
insl
js
push
fsubs
lahf
sbb
lcall
and
in
mov
scas
mov
dec
shll
mov
jmp
pop
or
add
mov
in
push
popf
cwtl
mov
cwtl
sub
adc
insb
mov
ret
popf
sbb
sub
mov
pop
push
pop
bound
test
sarl
jae
int3
dec
loop
enter
std
std
shrl
shlb
ss
pop
sti
int
lods
inc
outsl
popf
mov
testb
cs
mov
scas
ja
fsubrp
sub
add
aam
lcall
or
out
nop
xor
cmp
dec
pop
add
aad
or
sbb
mov
xor
in
movl
sub
sbb
not
inc
aad
push
add
je
cmp
jle
and
cmp
addl
adc
cmc
cmp
mov
sbb
scas
stos
add
adc
shll
or
ret
outsl
pusha
mov
mov
cmc
inc
imul
adc
popf
push
add
loopne
push
pop
ss
mov
rol
sarl
dec
mov
je
je
je
dec
mov
push
mov
dec
pop
sahf
call
cs
cmp
cmp
inc
dec
mov
sbb
mov
jae
jb
out
in
in
xor
push
out
cmpsb
mov
dec
mov
mov
daa
cmp
push
add
push
mov
shrb
xchg
gs
xor
xchg
dec
cmpsl
and
adcb
xchg
lret
pop
pop
add
xor
icebp
pop
or
std
stc
fldpi
xor
cld
pusha
andl
cli
dec
loop
cltd
in
fidivs
movsb
cli
call
sar
test
mov
lret
sbbl
out
js
js
mov
mov
hlt
mov
xchg
push
mov
cmp
jg
jl
pop
dec
fcmovne
pop
loop
cwtl
mov
fimuls
pushf
mov
inc
ret
iret
cmp
cltd
jl
jno
adc
cmc
jle
jmp
sbb
mov
stos
sbb
hlt
lock
int
adc
addb
jmp
rol
iret
hlt
dec
xchg
xchg
push
jno
into
jmp
mov
sub
sbb
out
adc
popf
xchg
idivl
pop
mov
jno
loope
lcall
lahf
dec
sbb
cmp
mov
aam
ret
sub
aas
pop
shlb
inc
insb
jnp
adc
pop
fcom
sub
movsb
testb
adc
xchg
xor
pop
fdivs
ss
enter
push
push
sbb
pop
mov
call
dec
inc
adc
add
sahf
data16
sbb
lods
xor
mov
test
repz
stos
mov
sbb
fsts
lret
dec
adc
and
fcmovu
mov
iret
adc
cmc
clc
aam
inc
and
inc
pop
inc
cwtl
test
lret
lahf
pop
clc
dec
sbb
dec
in
test
testb
push
push
into
aam
pop
mov
daa
mov
imul
jp
pop
repnz
push
pop
pop
dec
cli
inc
or
or
fcom
cs
xchg
fisubl
mov
sub
test
xor
and
scas
pop
push
xor
sbb
mov
cmp
inc
pop
fisttps
addl
out
rep
pop
mov
mov
adc
sbbl
sub
lret
je
xor
pop
xor
inc
pop
out
cli
or
mov
outsl
cmp
and
inc
clc
jl
fisubs
dec
or
cmp
jl
push
mov
in
insl
jp
mov
inc
test
nop
fnstsw
loopne
pushf
bound
rorb
fcmove
aam
dec
xchg
cmp
fdivrl
sahf
push
jl
cmp
push
or
mov
and
jnp
pop
bound
dec
mov
pop
outsl
xchg
sbbl
in
xor
mov
jae
mov
mov
stos
in
pop
repnz
cmpsb
into
insb
out
or
inc
daa
stc
or
cmp
fiadds
je
sbb
mov
cmc
mov
xor
xor
add
push
mov
cmp
rcll
and
in
imul
mov
xor
add
jg
pop
das
cld
fcompl
fxch
inc
and
mov
mov
pop
fisubl
or
adc
inc
fwait
cmp
mov
dec
push
ret
xchg
push
adc
cmc
add
dec
sub
cwtl
adc
add
mov
or
sub
imul
lock
loopne
adc
mov
push
jecxz
xor
cmp
rol
dec
cs
cmpsb
daa
incl
daa
mov
dec
jg
xchg
and
jecxz
mov
mov
cli
xor
xor
xchg
sub
stc
sub
mov
mov
add
outsl
xchg
xor
sub
pop
dec
jno
jbe
adc
sahf
data16
std
shl
in
into
popf
jno
into
flds
sahf
push
xchg
bound
outsb
xor
xchg
fcoms
pop
push
pusha
ljmp
or
xlat
pop
sbb
xchg
ss
fwait
out
mov
push
or
ja
shll
in
or
test
rclb
inc
fists
cld
pop
sbbl
mov
or
and
inc
pop
jnp
stc
aas
push
repz
xchg
and
in
xor
dec
sbb
add
cs
or
insb
xlat
icebp
aaa
jmp
or
add
and
push
sarl
pop
les
movsl
jb
pop
rorb
jp
movsl
xchg
aam
jbe
adc
adc
ss
dec
or
das
jge
and
xor
dec
mov
call
int
adcl
mov
pop
mov
cmp
jecxz
into
mov
rolb
dec
hlt
clc
cmp
jp
and
add
xor
inc
movb
stos
iret
subb
mov
bound
cmpsb
cmpsl
adc
ds
andb
daa
cmp
mov
jle
fcompl
mov
jp
sbb
iret
or
std
sahf
adcb
cwtl
test
adc
xor
out
loopne
loope
mov
or
ss
icebp
add
sub
out
enter
jp
mov
mov
mov
xor
mov
adc
rolb
sub
stos
xlat
jne
orb
or
cmp
xchg
out
push
jne
inc
setno
cld
mov
jl
jmp
mov
jb
pushf
push
cmp
out
aam
pop
add
cmp
sub
mov
loope
loopne
gs
adc
jmp
aas
jbe
cmpb
add
xchg
jno
cld
scas
lcall
inc
add
pop
xor
jp
xor
imull
jge
addr16
movsb
jge
mov
and
das
ret
inc
xchg
js
xor
adc
xor
jno
loop
push
es
jg
call
mov
mov
lock
andl
es
fsubs
sub
push
push
out
out
popf
test
jg
lea
inc
mov
jg
sbb
xchg
cmp
rcll
sbb
fmull
jae
mov
gs
and
xchg
cltd
pop
addr16
add
xor
stos
push
rorb
popf
and
push
leave
aad
imul
jmp
xor
xor
ja
shrb
into
xchg
lret
incb
aas
ret
test
ret
jecxz
push
sbb
adc
sbb
xor
push
push
and
push
sbb
sbb
aaa
jge
inc
outsl
pop
mov
mov
call
iret
roll
movsb
ret
test
jmp
out
nop
mov
enter
rclb
test
lods
sysret
rolb
scas
push
mov
ja
movsl
roll
dec
pop
ret
loopne
and
and
add
push
loope
mov
stos
rcrb
mov
movsb
xchg
movsb
xchg
repnz
daa
push
mov
je
popa
ljmp
mov
leave
shl
dec
stos
mov
adc
sub
inc
pusha
lret
jnp
gs
fcmovu
inc
mov
shrl
bound
add
cltd
xchg
push
xchg
pop
add
push
xor
mov
adc
cmc
roll
sub
jne
jae
and
hlt
in
lcall
push
in
scas
xchg
xor
adcb
inc
push
lods
lcall
mov
jl
mov
test
outsb
push
mulb
mov
push
adc
jg
jo
xchg
sti
sbb
sub
and
cmp
cmp
int
jl
mov
pop
jge
adc
sbb
xchg
call
push
out
fistpl
cwtl
push
paddsb
jnp
in
mov
adc
scas
dec
adc
out
int
fisttpl
loope
sti
xchg
aas
xor
loopew
push
pop
inc
popf
cmc
cmp
pushf
je
ss
notl
add
push
test
icebp
cmpl
lret
lock
stc
test
or
aaa
pop
into
orl
jp
sub
adc
and
jae
push
add
cli
add
push
and
xor
stc
int
dec
bswap
inc
arpl
mov
lcall
cmp
je
idivl
push
fldl
mov
or
add
mov
call
jmp
sahf
push
hlt
aam
cmp
fisubl
pop
xchg
mov
test
pop
shl
xor
rorl
mov
jbe
push
lea
jmp
jo
out
aas
xorl
inc
add
lock
mov
fs
cld
pop
iret
push
sbb
movsb
out
ret
sahf
push
ret
sbb
scas
out
jge
gs
jmp
or
mov
pop
dec
fdivs
testb
jnp
dec
aas
xor
cmp
jle
push
xchg
scas
mov
push
inc
inc
xorb
repz
pop
popa
cmp
dec
xor
push
dec
jb
push
arpl
xchg
jg
dec
stos
pop
sub
mov
sub
dec
out
push
call
or
mov
jnp
dec
mov
mov
xchg
enter
loope
jg
xor
lcall
cltd
pop
cmpsl
mov
into
fdivl
xor
enter
fsubrp
int3
ss
xchg
pushl
and
nop
jge
rcr
inc
xchg
push
out
fmuls
mov
cmp
cmpsl
push
test
mov
add
mov
jne
mov
aad
mov
or
das
enter
out
cmovnp
ja
dec
cs
jecxz
mov
jl
push
in
or
adc
inc
mov
hlt
xchg
data16
sbb
or
sbb
cmp
push
cmp
push
xchg
mov
pop
outsl
mov
pop
mov
adc
fnstcw
rorl
push
in
add
shrl
adc
add
in
outsl
push
mov
cli
movsl
shrb
xor
xchg
jge
lcall
cwtl
scas
jp
xchg
mov
subl
inc
mov
outsl
lods
mov
aad
xchg
loopne
sahf
mov
inc
clc
movsl
js
int3
and
inc
fadds
adc
sbb
add
gs
cli
pop
lods
cmpsb
mov
jecxz
sti
into
into
push
fcmovnbe
lret
sarb
cmc
xor
mov
cmp
mov
jae
xorl
ljmp
repnz
pop
inc
das
or
insb
mov
and
mov
push
sarb
test
outsl
lds
lods
addb
jmp
mov
lret
mov
cmp
xor
mov
loopne
sbbl
sub
pusha
xchg
push
pop
test
adc
lds
dec
sbbb
pop
push
pop
adc
lea
push
mov
daa
mov
cli
mov
mov
mov
inc
xor
or
aaa
testl
ret
imul
es
cmp
arpl
roll
fildl
mov
jg
lds
daa
loopne
in
dec
or
sbb
jp
aad
lret
lret
fdivr
pop
inc
xor
int3
scas
xchg
sub
fsub
push
adc
cmp
xlat
xor
mov
xchg
fidivrl
repnz
in
xchg
shlb
pop
sahf
jo
ljmp
mov
jg
inc
inc
out
out
out
jno
jl
fdivl
xorb
push
sub
jp
aas
adc
mov
lcall
dec
dec
push
jge
imul
lahf
lea
jle
or
adc
loope
push
cmpb
nop
fimull
out
push
xchg
fnstcw
cmp
dec
inc
fcoml
dec
inc
xor
int3
fldcw
jbe
jb
pop
cmp
xor
sbb
dec
stos
xchg
inc
sbb
push
repz
lret
dec
xchg
adc
aad
outsb
insl
enter
idivb
push
push
mov
cmpsl
lods
out
mov
popl
cmp
in
adc
xchg
sbb
mov
test
push
bound
in
push
mov
xchg
add
js
ret
mov
jle
cltd
push
dec
xor
into
dec
xchg
inc
push
ds
ret
pop
push
pop
lods
add
xchg
scas
cmp
dec
out
pop
pop
repz
push
pop
mov
jae
pop
fstl
in
movsl
stos
scas
sbb
dec
jecxz
push
lea
ret
movsw
sub
cmp
push
cltd
mov
aad
sbb
sbbl
sbb
arpl
mov
mov
inc
and
into
movsl
cwtl
cltd
push
sti
inc
jo
notb
fwait
and
jmp
movsl
cmp
pop
sarb
add
add
pop
ljmp
mov
es
out
jg
xor
mov
mov
pop
inc
int3
jmp
cmp
shrl
scas
imul
cli
mov
divl
test
cmpsb
mov
dec
leave
lcall
or
dec
sahf
addb
and
cmp
jp
push
int3
adc
xor
pusha
or
push
int3
clc
cmp
pop
sbb
and
dec
mov
mov
daa
push
sbbb
xchg
int3
xor
fmull
lock
ss
push
hlt
dec
mov
aaa
stos
mov
gs
mov
aad
in
mov
and
inc
or
sti
decb
push
or
inc
mov
push
cld
cli
push
aas
shlb
cmp
pop
sarl
pop
scas
xchg
fwait
push
leave
push
popa
mov
dec
hlt
mov
cld
add
mov
jl
mov
aas
and
bound
or
xor
mov
xchg
ljmp
repz
push
stc
test
bound
movsl
push
mov
mov
add
lcall
sbb
ds
xchg
pop
xchg
ds
jnp
je
jne
jno
loop
jl
scas
fcmovbe
stos
out
xlat
lret
das
les
dec
inc
fidivrl
sti
or
notl
pop
out
das
ror
mov
cwtl
mov
fs
test
leave
lret
fcoml
lahf
push
pop
jb
xlat
pop
mov
fcompl
jmp
mov
movb
dec
xor
push
and
ja
or
arpl
test
into
xchg
int
sbb
fwait
jns
sti
mov
popf
rclb
add
xchg
fcmovnb
push
cld
mov
icebp
xchg
mov
fs
push
mov
xchg
cmc
in
imul
jmp
stos
hlt
testl
out
push
push
rdpmc
fwait
adc
xor
push
cmp
in
gs
dec
hlt
push
ret
subl
lods
into
mov
ja
orb
and
or
lret
mov
aam
call
fnstenv
xchg
gs
in
andl
fldenv
mov
xchg
test
push
aaa
ljmp
sbb
shll
ret
xor
dec
cld
inc
adc
fdivr
inc
lahf
insb
push
adc
jge
fdivr
lea
push
mov
cli
inc
imul
mov
mov
pop
pop
adc
in
pusha
xchg
loop
mov
sub
sub
jno
stos
aad
ss
push
insb
into
outsl
out
subb
cmpsl
xor
and
xlat
jns
lahf
data16
lea
ljmp
sti
push
les
rcrb
cld
add
in
stos
push
ljmp
mov
ja
bound
and
adc
testb
shll
pop
subb
cld
sub
lahf
iret
stos
fcmove
lahf
pop
inc
cmp
jae
scas
sahf
lds
xor
int
cwtl
iret
xchg
jae
sbb
jae
aas
loope
hlt
shl
ret
sub
mov
sub
leave
dec
dec
ja
add
adc
push
adc
rcll
add
test
imull
and
dec
jecxz
les
fisttpll
addl
dec
jg
cwtl
sub
push
rolw
adc
scas
and
insb
scas
inc
std
pop
mov
sbb
dec
incl
adc
cmp
lahf
xor
xchg
or
subl
mov
mov
cltd
xor
xchg
data16
rcll
movw
in
dec
pop
dec
out
insl
sbb
call
jle
push
fsubrl
test
dec
xor
sti
inc
xor
mov
push
iret
movsl
outsl
cltd
mov
push
and
sarb
dec
mov
inc
xor
mov
loopne
jae
stos
adcb
and
test
addr16
and
jecxz
cltd
push
fdivl
push
shll
pop
push
pop
dec
jge
jne
mov
pop
dec
xorb
dec
imul
mov
pop
mov
mov
xor
push
sub
add
push
mov
es
out
cmp
fwait
rcrb
xor
jle
icebp
popa
inc
sbb
xchg
in
movb
push
repnz
movsl
sti
inc
mov
xchg
mov
cmc
movsb
ljmp
adcb
lcall
movzbl
pop
xchg
mov
mov
or
xor
neg
cli
or
movsb
repz
fwait
in
and
mov
xor
mov
push
ret
adc
pusha
jae
popa
jo
cltd
leave
jg
ret
fsub
mov
aaa
dec
add
movsb
cmpsl
fdivs
out
call
mov
xchg
mov
jno
cli
pop
jl
ret
sub
pop
cwtl
cmc
pop
add
sahf
add
mov
lods
lods
fadds
xor
iret
addl
fcoms
gs
jns
outsl
xor
mov
and
and
cltd
inc
mov
mov
dec
cli
dec
mov
or
ss
dec
mov
jl
sahf
pushf
out
sar
push
inc
rorb
in
jns
cmpl
mov
fmulp
lret
and
sarb
loope
push
xor
xchg
pop
sub
notl
imul
push
gs
out
data16
push
movsb
push
sub
mov
xchg
mov
fsubrs
sub
sub
cmpsb
imul
nop
fsubp
push
jecxz
fldl2e
lea
inc
lcall
ss
add
xor
jp
jae
cmp
dec
mov
push
push
mov
icebp
mov
pop
dec
cltd
jne
jo
cmpsb
icebp
cltd
enter
inc
or
aad
adc
push
in
mov
cwtl
sub
add
stos
fistpll
cld
lds
mov
jmp
popw
lcall
lret
fisubrs
and
test
stos
dec
ret
jge
mov
cmc
lds
mov
sub
ljmp
dec
jl
insl
aam
dec
pop
sub
and
nop
ja
mov
std
out
xor
dec
adc
lods
daa
xor
dec
mov
jmp
ljmp
and
lcall
mov
and
dec
adc
ret
push
xchg
mov
mov
insl
insl
shrl
ljmp
sbb
xchg
imul
je
ficoml
inc
and
es
pop
push
rcrb
and
lea
add
push
push
loopne
int
outsl
lret
inc
inc
in
lea
jl
pop
sti
adc
outsb
cs
add
mov
inc
clc
xchg
test
js
sbb
pop
adc
jecxz
and
int
mov
jns
popf
xchg
mov
sub
jne
mov
dec
jmp
stc
dec
sti
inc
or
aas
add
addl
mov
lods
mov
xchg
jo
out
xor
ljmp
pop
push
adc
int
push
cwtl
xor
dec
mov
out
sbb
cmc
cmp
lcall
push
leave
outsl
add
aad
add
and
adc
mov
inc
xchg
imulb
std
imul
mov
mov
sbb
or
push
sub
sti
pop
pop
xchg
mov
dec
add
out
stos
xor
jge
movsl
or
andb
rol
iret
mov
fimull
jecxz
cmp
repz
rcr
and
roll
ret
mov
jns
mov
xor
mov
js
add
loopne
push
arpl
jg
or
scas
mov
aad
jp
test
cld
xchg
dec
cltd
test
lret
or
repnz
gs
cmpb
shlb
loop
sub
cmp
jns
pop
sub
jne
dec
lea
incl
xor
pop
inc
sbb
orl
mov
push
repz
andl
imul
testl
scas
insl
mov
call
int
xchg
add
stos
int3
movsb
cmp
movsl
mov
fwait
push
adc
arpl
repz
loop
or
enter
fcmove
dec
fnsave
fs
jge
mov
add
adc
sbb
das
pop
ret
outsl
or
jg,pn
mov
cwtl
dec
and
inc
popa
pop
lcall
insl
fnstenv
pop
nop
ds
sbb
jp
xchg
jb
push
pop
lret
cs
cmpb
cmp
rol
and
dec
xor
and
mov
shll
xor
push
loop
jae
pop
pop
and
outsb
cltd
mov
int
pop
push
out
lret
cmpsl
xor
das
xorl
mov
test
es
jae
mov
push
and
push
fcmovnb
xchg
mov
loop
push
dec
ret
push
mov
mov
add
mov
addb
xorl
dec
add
aas
stos
loopne
test
jae
xchg
push
add
xchg
inc
cmp
xor
xchg
pop
in
and
out
jge
or
test
sbb
xor
cltd
fstp
fisttpl
xchg
idivl
xor
mov
ljmp
add
fsubrs
fisubrl
insl
or
add
fwait
add
leave
xor
push
js
out
pop
adc
test
pusha
imul
mov
mov
lcall
jbe
cmpl
out
mov
push
fstp
testb
movsl
sub
lock
mov
cmp
adc
imul
mov
jl
and
xchg
cltd
xor
push
aam
xlat
xor
loopne
add
sub
lods
dec
inc
and
retw
insl
incl
mov
cmpl
jne
adc
pop
in
arpl
mov
xchg
xor
cmpsl
lcall
ret
fsubrl
shll
xor
cmpsl
inc
in
std
test
incl
je
xchg
pop
mov
scas
sbb
inc
or
icebp
or
pop
in
loopne
das
jecxz
iret
xchg
ljmp
jle
add
in
nop
push
cmp
sub
and
sbb
inc
sbb
test
mov
imul
and
test
leave
aad
icebp
push
inc
rolb
testb
adc
fidivrl
enter
pop
sbb
add
rorb
mov
fisttps
rclb
inc
pop
xor
lret
and
and
in
pop
push
jl
mov
aad
add
pop
insb
mov
in
sti
xlat
fistps
sub
add
stos
add
inc
push
xor
icebp
rcll
test
std
ss
filds
test
and
ficoms
jp
pop
movsb
mov
lea
icebp
imul
cmpsl
call
aas
leave
movsl
mov
dec
mov
add
xor
repnz
cmp
pop
je
pusha
subl
sub
stos
pop
cmc
rol
stc
shrl
push
or
imull
sti
and
in
cmp
xchg
cmp
jge
imulb
inc
push
sbb
xchg
lret
lock
fistps
jp
jo
imul
std
sub
in
push
or
sbb
sahf
xor
adc
xor
cwtl
dec
sbb
mov
mov
mov
inc
cltd
xor
movsb
stos
dec
int
push
aam
inc
xor
ret
pop
fidivrs
fnstcw
push
cltd
xchg
movsl
pop
add
shll
pop
cmp
test
jbe
xchg
sbb
popa
int
pushf
and
xor
sahf
addr16
or
test
dec
iret
stos
mov
push
mov
xchg
dec
icebp
nop
in
jp
addr16
mov
push
imul
test
stc
jae
test
aad
cmp
ja
es
or
push
call
orb
xlat
insb
mov
ret
outsb
inc
jnp
fucomip
xor
jb
fldl
jne
lds
jmp
outsb
push
out
jmp
push
lods
add
mov
int
movl
adc
out
jge
xor
dec
sub
in
into
in
gs
xchg
aas
push
gs
daa
sbb
popw
test
sbb
cmp
mov
dec
shll
and
mov
inc
ds
pop
pop
mov
cmpsl
jno
pop
lea
xchg
fwait
xchg
pop
ret
clc
test
mov
sarb
fsubp
mov
xchg
xchg
mov
mov
repnz
mov
xlat
push
sub
mov
mov
xchg
jmp
xchg
mov
mov
xchg
pop
jge
fisttpl
jp
hlt
adc
and
sbb
jmp
cmp
push
xchg
sbb
popf
mov
jle
and
push
mov
xor
es
mov
fdivr
pop
mov
jecxz
sub
scas
add
xchg
fwait
push
adc
mov
jg
cmp
js
and
lahf
ljmp
testb
cmpsl
outsl
sbb
mov
dec
dec
or
pop
jp
stc
xchg
adc
jp
loope
or
repz
pop
ljmp
pushf
and
repz
shlb
sahf
cmc
dec
xlat
mov
push
mov
fsubrs
xor
mov
lea
std
sub
xchg
and
push
push
sti
out
xor
push
bound
adc
in
adcl
push
adc
add
out
add
and
clc
movsb
fisubrl
rclb
fimuls
mov
inc
xor
mov
mov
addb
mov
enter
loop
fsubr
xor
shlb
cli
cs
icebp
out
arpl
mov
jae
into
inc
mov
mov
push
loope
das
loope
test
pop
or
lret
out
shlb
pop
fisttpl
lock
cmp
sub
sub
push
cmp
cmp
sub
jmp
or
jp
pop
and
mov
and
inc
or
andl
jl
outsl
cmp
pusha
lds
sbb
lds
pop
shlb
xor
test
stos
mov
lock
dec
inc
mov
data16
mov
mov
aad
test
ja
cmp
mov
xchg
lret
xchg
jb
scas
xchg
sbb
mov
pop
add
daa
sub
int3
outsb
add
aad
pop
fisttpl
je
dec
repnz
jge
fistl
std
fisttpl
jge
add
or
cmp
rcrl
lcall
xchg
dec
or
xchg
cmp
sbb
sahf
mov
xor
gs
cmpsl
sbb
fldenv
out
and
mov
fldcw
mov
or
jle
and
jmp
push
hlt
addl
jbe
inc
mov
out
xchg
push
sbb
xchg
or
insl
dec
shrb
aas
std
and
cmc
mov
pop
push
jle
pop
in
mov
aaa
loopne
push
dec
mov
jp
cmp
and
gs
xchg
fs
cltd
sub
mov
sti
sbb
cmc
stos
gs
cwtl
and
mov
sbb
mov
sub
jle
and
enter
insl
cmc
bound
test
aas
fidivrl
or
repz
add
and
and
cld
mov
mov
jge
mov
mov
adc
shr
dec
sbb
loopne
pop
xor
pop
cli
cmp
or
pop
inc
add
cmp
jbe
call
or
add
aam
scas
push
cld
movsl
fwait
or
pop
outsb
push
test
ret
inc
fs
lds
aaa
dec
leave
jo
dec
into
stc
jmp
pop
and
lods
ljmp
int
insl
xlat
sbb
xchg
lds
or
pop
cld
mov
xorb
push
aam
push
sub
mov
pusha
dec
insb
jmp
mov
rcll
scas
rcll
or
ret
pop
dec
pop
push
add
adc
sbb
fadds
sub
pushl
stc
inc
mov
mov
fsubrs
je
mov
xor
loopne
lods
adc
sub
paddsb
add
ss
mov
mov
in
mov
loop
ljmp
cmp
or
repz
xchg
mov
nop
cmpsl
ret
push
dec
jns
sbbb
mov
daa
inc
mov
insl
pop
push
and
push
xor
pop
icebp
xchg
int3
fmuls
std
cmpsl
rolb
mov
jbe
cs
or
test
imul
inc
fwait
and
out
decl
leave
add
mov
lods
cmp
jl
pop
adc
testb
shll
inc
jne
sbb
shlb
cmpsl
lods
ret
stc
fnsave
cmp
insb
cmp
fisubl
shrb
mov
insl
sbb
lea
or
cmp
mov
sbb
cld
clc
roll
cmp
in
hlt
outsb
add
cmp
std
outsb
cwtl
mov
addr16
gs
inc
xor
dec
bound
pop
es
cmp
cli
mov
mov
repz
adc
or
loop
adc
ret
and
mov
inc
sub
rorl
mov
inc
jne
mov
hlt
lret
aas
sub
mov
add
lcall
add
xchg
push
sarl
inc
inc
lods
pop
flds
push
push
out
iret
insb
outsb
cmpb
inc
and
push
rcr
insb
and
test
imul
jle
aas
xlat
rcll
loop
add
xchg
movsb
sub
cmp
pop
mov
mov
sub
pop
imul
repz
xchg
les
jb
cmp
cmp
stos
psubd
cs
and
push
inc
xor
xor
in
jle
mov
sub
mov
add
pop
bound
cmp
jecxz
inc
test
out
or
xor
sbb
lods
sub
inc
push
shlb
or
pop
mov
jne
or
data16
jl
cmp
jnp
rolb
aam
sbb
or
movsb
enter
outsl
xor
pop
clc
das
icebp
imul
inc
out
push
out
fs
sbb
mov
cmp
sbb
cmp
ror
push
ror
out
inc
insl
popf
xchg
lds
cmpsl
test
inc
insl
jecxz
mov
add
nop
arpl
out
ja
ss
sbb
xor
andps
in
and
mov
in
shll
lods
jno
ret
cwtl
stos
addl
daa
loopne
clc
mov
xor
test
push
dec
cli
hlt
inc
mov
jnp
stc
dec
movsl
mov
stos
pop
push
das
loopne
icebp
movsb
and
sub
out
decb
stos
lds
test
vaddps
outsl
cli
pop
and
test
jb
pop
inc
je
adc
popf
aam
jnp
mov
jno,pt
xchg
pop
push
jb
je
std
fistpl
clc
sbb
stc
fisubs
or
sub
filds
and
xchg
and
push
mov
xchg
xor
dec
mov
lcall
pusha
add
mov
rcrb
cmp
andb
nop
pop
lock
movsb
lods
repz
dec
sbb
adc
inc
inc
dec
out
ljmp
fimuls
fadd
call
cld
jnp
in
cmp
dec
dec
push
stos
xor
scas
push
iret
movlps
fldt
cwtl
pop
xchg
test
inc
push
jnp
lods
fdivl
push
dec
adc
shrl
pop
add
rcrb
stos
das
inc
test
lods
fnstcw
mov
jne
xor
or
out
cmpsb
pushf
pop
sbb
or
jb
xchg
mov
into
loope
sbb
div
pop
insl
std
and
stc
add
mov
ja
cmp
inc
dec
pop
inc
push
xor
sbb
mov
ficompl
incl
jo
fbstp
jmp
movsb
sub
test
scas
pop
das
cmp
in
out
outsb
jno
or
std
loope
gs
repnz
loope
js
xlat
mov
pop
fiadds
cmp
or
out
dec
and
cld
and
mov
mov
jge
insl
add
add
sbb
xchg
call
test
and
adc
out
repz
jns
xor
fsts
out
sbb
loope
mov
loope
inc
jb
lret
icebp
insb
mov
cltd
out
outsl
jecxz
pushf
es
jae
adc
or
rclb
pop
call
mov
js
push
lea
cmc
imul
inc
xor
in
std
sarl
nop
in
mov
push
dec
mov
lret
jbe
mov
fnstsw
adc
push
loop
adc
scas
shlb
jo
push
insl
repz
movsb
xchg
mov
mov
sub
stos
mov
lcall
push
or
in
mov
dec
fdivrp
mov
pop
cmp
mov
mov
fucomp
push
pusha
mov
pop
nop
mov
pop
push
pop
xor
test
aaa
xor
repnz
ja
mov
push
inc
aaa
add
sbb
mov
jnp
in
cmp
xor
adc
jle
mov
dec
or
adc
xor
scas
lret
clc
sarl
std
mov
mov
mov
sub
into
add
sub
lret
arpl
pop
mov
fs
cmp
dec
lea
sub
xor
and
push
lea
sbb
push
jge
clc
pushf
sub
pop
push
or
sub
addr16
push
shr
jp
sub
mov
es
lods
scas
mov
and
test
test
or
movsl
test
adc
lds
arpl
scas
mov
mov
lds
cmp
add
adc
pop
xchg
or
xchg
imul
inc
fwait
insl
mov
es
pop
outsb
clc
or
inc
sahf
jno
sub
or
push
xor
loop
repnz
fisttpll
jge
xor
adc
mov
mov
repnz
mov
mov
fldt
dec
pop
popa
cltd
shlb
sbb
pushf
lret
and
and
pop
mov
xor
mov
inc
jne
adc
mov
jns
test
mov
popa
or
dec
xchg
lods
outsl
mov
mull
imul
mov
mov
and
movsb
jne
adc
aaa
fwait
push
push
aaa
pop
cli
pushf
lret
in
rcrb
push
dec
stc
sbb
ja
add
pop
fisttpll
inc
pop
sbb
ss
pop
std
jge
mov
mov
push
cli
mov
fcoml
push
pop
in
fidivl
add
dec
fwait
push
aam
cltd
push
jno
lret
and
adc
or
mov
stos
adc
fildll
add
in
enter
bound
add
push
std
notb
decl
cmp
cmp
jmp
stc
cmp
mull
dec
fwait
adc
and
add
cmp
mov
sbbb
sbb
pop
mov
xchg
shl
clc
test
and
mov
lock
movsl
push
mov
mov
jl
fnstsw
mov
sub
pop
lods
push
xchg
dec
xor
ret
arpl
mov
add
push
ficoms
xchg
mov
push
cli
in
cmp
test
dec
push
adc
xlat
add
sub
jl
xchg
fprem
outsb
nop
jne
rolb
aam
adc
inc
inc
push
test
or
xchg
aas
pop
mov
mov
adc
ss
sarb
rolb
sbb
jno
jmp
jne
mov
cmp
repz
xor
ror
and
pushf
adc
pop
mov
pop
jns
jne
shll
lea
fs
psllw
out
dec
int3
sti
adc
and
mov
and
jo
push
lret
lods
scas
notl
add
ret
popa
mov
and
in
ss
int
or
jno
subb
rcrl
mov
jmp
lock
xor
repz
aaa
inc
jecxz
dec
cmp
aam
ret
das
push
mov
ss
and
or
insl
lahf
mov
and
and
test
push
push
inc
or
out
fidivrl
clc
sub
pop
or
arpl
int3
pop
and
pop
xor
mov
xlat
test
dec
sbb
mov
pushf
dec
add
test
aas
xchg
loop
jmp
ret
loope
mov
push
das
mov
push
ja
repz
mov
jns
push
mov
std
idivb
xchg
out
push
bound
xor
aas
mov
test
jns
add
aad
shll
or
testb
sbbb
imulb
or
xchg
aas
in
imul
popa
sbb
push
and
xchg
ss
outsb
cltd
enter
dec
jne
pop
lret
gs
jp
adc
xchg
dec
sbb
lock
or
lods
jne
jg,pt
xor
jmp
add
outsl
loopne
jno
pop
out
or
and
xchg
lock
loope
add
lods
imul
cs
rcll
mov
xor
in
push
mov
inc
mov
rclb
dec
jmp
repz
mov
push
in
in
cmpsl
mov
sahf
fimuls
aas
pushf
cmc
les
imul
xchg
pop
xchg
lods
add
mov
fists
ds
dec
test
cmp
jbe
sbb
shr
test
adc
ja
test
pop
shl
mov
cmc
loopne
cli
mull
pop
lock
dec
outsl
jns
test
scas
cmp
lea
nop
iret
std
loope
enter
xchg
movsl
fcomps
mov
nop
icebp
icebp
in
shll
ja
cli
or
cwtl
mov
dec
hlt
movsb
dec
aas
xchg
dec
push
call
lods
loopne
pushl
loopne
push
bound
cmc
mov
fdivs
mov
xchg
xchg
mov
std
xchg
je
nop
test
mov
cmc
xor
or
push
in
or
adc
and
xor
lret
dec
mov
push
in
cld
pusha
add
sbb
mov
imul
and
inc
pop
cmp
mov
mov
or
add
fs
cmp
outsb
mov
add
pop
in
pop
pop
xor
xor
in
imul
adc
inc
sti
gs
mov
adc
iret
stc
jmp
testb
repz
and
test
ret
imul
mov
fcmovbe
and
add
fisubrl
pop
jecxz,pt
sar
mov
insb
mov
sub
into
sbb
adc
cmpsl
stc
xor
mov
ljmp
or
mov
push
mov
test
sub
inc
xlat
out
clc
add
out
out
es
pop
adc
adc
pop
jns
mov
imul
div
mov
push
cmp
push
cltd
jbe
rcr
fwait
mov
aam
mov
mov
loope
out
jo
outsl
or
push
fdivs
mov
shll
add
hlt
jg
rcrl
mov
hlt
and
dec
pop
imul
lahf
xchg
mov
xlat
iret
mov
ljmp
insl
or
fwait
jmp
mov
mov
sub
inc
mov
and
sarl
fsubl
outsl
or
dec
pop
imul
mov
sub
cltd
mov
push
or
in
in
inc
cmp
adc
std
xchg
lret
dec
lods
mov
fsubl
subb
fstl
sarl
mulb
fimuls
pop
jecxz
fdivl
mov
jg
addl
clc
sbb
out
and
insl
xchg
iret
inc
push
movsb
sbbl
mov
adc
js
add
add
dec
jns
sbb
or
cmpsb
lret
aad
jo
fcmovnbe
pop
lret
sub
add
xor
xchg
xchg
jbe
inc
std
jecxz
or
fimuls
cmp
test
and
push
sti
imul
mov
cmp
pop
clc
out
aas
out
and
cmp
sub
push
or
iret
pusha
and
pop
lret
xchg
push
jmp
in
mov
jbe
imulb
push
mov
push
hlt
aad
shrb
aas
add
cmp
xchg
iret
cmp
pop
jl
scas
lcall
cmp
cltd
in
xor
jnp
push
jmp
and
xor
pop
mov
push
out
sti
cli
push
mov
push
sbb
scas
jl
icebp
rcrl
ds
ret
adc
shl
lret
lea
shl
or
and
dec
sahf
imul
pop
xchg
inc
aas
xor
lret
in
mov
add
sbb
cmpsl
rorl
daa
aaa
jge
mov
xchg
mov
orl
cmc
test
add
test
sub
mov
add
xor
xor
je
sti
mov
cld
xchg
and
rcll
add
adc
mov
and
in
dec
fmull
lahf
push
mov
cwtl
ss
rclb
test
pop
adc
adc
mov
or
sbb
pop
dec
test
shlb
inc
lds
dec
inc
lret
pop
inc
push
call
add
jno
sti
mov
iret
mov
stos
bound
imul
push
out
mov
clc
add
push
lret
imul
sahf
shrl
xchg
fmulp
or
pusha
push
sbb
sub
out
xchg
xchg
adc
dec
in
xor
int
fmull
cmpsl
push
xor
mov
push
andl
js
inc
jne
notl
movsb
jo
xor
scas
mov
mov
xchg
mov
hlt
incb
mov
mov
scas
push
xchg
in
arpl
mov
cmpl
pusha
scas
jbe
lcall
sub
xchg
jge
clc
push
pop
mov
sub
mov
xor
lret
and
jl
cmpsb
mov
imul
jbe
dec
pop
mov
imull
mov
testb
dec
outsl
insb
jbe
pusha
sub
pusha
movsb
stos
stos
mov
xchg
sbb
or
or
andl
repnz
roll
pop
xor
or
xor
lods
mov
push
inc
push
stc
push
inc
mov
fbld
filds
and
imul
sub
xchg
out
js
fcmovnbe
fs
das
in
rolb
push
lea
add
xor
imul
pop
nop
and
loop
mov
add
pop
push
jo
mov
sub
mov
push
inc
mov
dec
adc
outsl
jne
pop
je
mov
lock
rcr
inc
stos
or
mov
cmpsl
sub
xor
dec
ret
xchg
or
decl
ret
pop
lods
icebp
sbb
jb
jge
xchg
pop
xor
roll
test
rcl
jne
dec
psrld
mov
rorl
adc
adc
insl
xchg
rcl
mov
pop
sub
bound
clc
pusha
or
cmp
pusha
cmc
sahf
jecxz
xor
xor
adc
ljmp
fidivs
repnz
push
dec
cmp
stos
cmpsb
adcl
repz
loopne
dec
test
lret
je
repnz
add
jae
sub
cmp
mov
nop
mov
mov
adc
icebp
and
push
pop
popa
pusha
mov
xchg
into
pop
xor
sbb
das
and
xchg
scas
inc
cmp
int3
pop
cmpsl
xchg
lret
neg
or
inc
jmp
xor
pop
push
rorb
dec
mov
mov
hlt
shll
ror
adc
outsl
out
test
push
cli
jno
pop
add
jl
adc
bound
lea
loop
xchg
or
enter
adc
mov
imul
adc
ljmp
and
ss
mov
stos
cmpl
stc
dec
push
fcom
popa
inc
mov
xchg
or
cli
xor
fsubl
inc
sbb
mov
add
sub
or
jp
dec
popa
cmp
jb
stc
sub
shll
sub
adc
push
dec
inc
push
cmc
dec
enter
call
jecxz
lret
jno
push
mov
ret
in
add
sub
push
adc
pop
xor
dec
lea
pop
mov
inc
xchg
mov
pop
mov
lcall
out
sbb
sbbl
enter
add
ljmp
es
dec
lea
iret
inc
clc
ret
fadds
pop
ja
sbb
xorl
arpl
sahf
test
add
sub
xor
push
mov
pop
lret
add
pop
mov
out
clc
push
in
sub
test
add
jb
jo
aas
mull
mov
repz
dec
adc
psubusw
popf
adc
pop
mov
push
mov
cmp
outsl
ret
aad
lock
lds
push
cwtl
cmpsl
cli
mov
sub
jae
andl
jne
xor
cltd
jp
pop
clc
mov
inc
mov
movsb
add
addl
popa
add
mov
push
mov
inc
orb
xlat
fisttpl
xchg
push
or
ja
xor
push
scas
arpl
flds
repz
ds
ret
cltd
mov
or
adc
xchg
jns
sbb
pop
popf
call
jmp
mov
xor
fisttpl
stc
pop
or
gs
aam
jns
sbb
gs
aaa
lcall
cmp
pop
jmp
lds
lods
xor
sti
and
mov
adc
dec
and
xchg
pop
shrl
ss
test
push
fsub
cmp
data16
cmp
add
pusha
addl
test
in
lea
scas
aad
loopne
aaa
push
inc
mov
bound
test
incl
and
lahf
pusha
add
aaa
adc
mov
adcb
inc
lods
push
push
push
xchg
push
shr
daa
inc
out
in
addr16
cmp
add
int
dec
fscale
lret
testb
mov
inc
dec
ret
jbe
sub
and
mov
push
cli
xchg
into
arpl
call
rclb
pop
hlt
dec
xor
inc
imul
mull
jle
inc
call
leave
add
adc
sub
sbb
mov
dec
stos
int3
jae
sti
lret
pop
aaa
push
push
je
fcoml
cmc
sub
mul
mov
lahf
ljmp
in
adc
xor
lahf
and
test
inc
lcall
bnd
aas
lea
mov
lods
pusha
mov
in
jge
clc
xor
or
not
mov
movsb
mov
jle
inc
loopne
cmp
sbb
negl
leave
call
ret
int
fdivs
cmc
mov
xor
xchg
xlat
cmp
out
sahf
xchg
mov
jecxz
sub
ficompl
pop
imul
dec
mov
out
aaa
adc
into
and
add
xor
push
mov
xchg
xchg
jno
mov
adc
imul
lcall
dec
add
jl
adc
and
cli
push
rorl
shrb
int
scas
scas
inc
jb
int
mov
lret
add
subb
and
jno
add
repnz
bound
bound
addr16
push
movsb
jo
xor
xor
bound
pop
cld
je
jb
jmp
add
inc
cwtl
and
mov
and
in
mov
in
movsl
ds
fisttpll
out
sub
std
sub
cs
add
or
cmc
arpl
popl
jbe
addr16
or
push
and
push
js
into
sub
bound
jle
mov
adcb
int3
jge
cmp
mov
imul
or
add
add
mov
ljmp
xchg
bnd
mov
jecxz
jnp
imul
xor
add
pop
fldl
inc
jne
pop
sub
stc
and
in
cmp
mov
pusha
addr16
in
and
mov
int3
and
mulb
cwtl
sti
mov
cmp
enter
mov
mov
out
push
das
enter
xor
cmc
dec
das
inc
or
push
js
sbb
jge
scas
jp
loopne
or
fcoml
xor
xchg
push
xchg
je
aaa
sti
stos
adc
sbb
mov
jp
add
int3
in
cmp
xchg
pop
andl
xor
dec
shr
xchg
jnp
mov
sbb
int
dec
sahf
push
xchg
jmp
imul
jae
lea
in
jnp
sub
in
cmpsl
push
fcoms
cmp
pop
repz
push
add
cwtl
or
pop
mov
pop
es
mov
mov
enter
mov
mov
pusha
sbb
pop
sbb
rorl
rclb
push
dec
fbld
cmp
adc
add
mov
add
and
adc
jns
mov
insb
pop
jne
mov
scas
adc
lds
jmp
push
fldcw
inc
dec
dec
lods
fld
fdivrs
lret
mov
add
es
push
pop
imul
jecxz
or
rolb
adc
int
mov
inc
sub
aam
lea
xchg
push
and
pop
call
lds
ja
lods
je
mov
mov
sub
sti
es
popa
adc
aas
push
fmuls
es
sti
xchg
loope
jmp
or
roll
sahf
je
dec
add
mov
cwtl
xchg
lds
mov
add
cmp
pop
idivb
cwtl
jmp
rorl
mov
daa
mov
loope
pop
inc
lcall
aam
stos
insb
in
push
xor
dec
add
pop
loopne
jne
push
adc
add
lock
lods
mov
mov
and
inc
out
dec
jo
mov
inc
sbb
dec
cwtl
mov
ret
push
cld
arpl
test
popw
in
pop
outsl
or
ficoml
icebp
adc
jno
dec
fldl
mov
mov
xor
popa
adcb
aas
lahf
pop
mov
and
lea
adc
orl
sub
adc
mov
ja
into
pusha
sub
sub
dec
push
push
fwait
adc
ja
iret
aaa
jecxz
adc
movsl
sti
std
sub
jle
push
popa
bound
outsb
xchg
pop
push
push
icebp
dec
mov
divl
mov
daa
push
ds
movl
dec
sahf
ss
add
add
fadd
mov
enter
and
fstps
cs
pop
mov
xlat
xor
mov
pop
test
inc
fnstsw
push
and
dec
mov
aaa
xor
xorb
fldcw
ds
int
add
in
lods
and
dec
xor
dec
outsb
inc
or
jecxz
or
adc
xchg
mov
push
notb
out
icebp
lods
and
hlt
xor
imul
dec
pop
or
mov
in
pop
fisubs
lods
or
aad
push
dec
pusha
mov
pusha
es
jno
shlb
out
pop
popf
pop
aam
insl
in
enter
mov
out
or
mov
push
out
fistl
test
pop
add
ror
cltd
fisubrs
mov
xor
pop
inc
dec
rcll
icebp
ds
dec
inc
ficomps
push
mov
lcall
fisubl
fsubs
nop
pop
pop
jne
jmp
test
or
cmpsb
les
das
add
jne
mov
ds
jne
les
shr
or
sub
xor
adc
shll
js
dec
push
mov
pop
call
scas
movsb
or
inc
xor
or
push
rolb
pop
add
out
xchg
std
insl
lods
repnz
dec
dec
shll
jecxz
cmpsl
decl
sbb
shrb
ret
jle
andb
xchg
mov
add
aam
in
xchg
inc
adc
lret
fdivl
shrl
loope
mov
stc
sbb
fildl
neg
pop
aas
addr16
sub
clc
add
mov
lods
jnp
repz
ljmp
mov
jbe
repnz
js
push
or
add
jno
sbb
std
jle
jae
cmp
sahf
cld
inc
adc
push
xchg
add
idiv
push
push
iret
adc
in
push
sub
mov
adc
mov
adc
js
xchg
out
mov
mov
dec
loop
clc
stc
mov
add
pop
adc
xchg
adc
sub
xchg
adc
divb
repnz
das
xchg
jns
js
inc
or
jno
mov
jp
imul
cld
pushf
loop
push
mov
lods
loop
add
inc
outsl
or
dec
das
ficompl
mov
xchg
inc
lock
dec
mov
test
xor
jmp
push
cmpsl
push
xchg
push
stc
xor
adc
int3
repz
mov
outsl
mov
add
psrad
pop
cmp
adcl
jl
pop
clc
cld
nopl
ret
mov
fs
dec
mov
repnz
push
iret
lods
ret
mov
les
xchg
loop
jge
mov
cmp
lcall
cwtl
cmc
dec
mov
daa
mov
lods
cli
insl
divb
mov
xor
pop
xlat
loopne
stc
push
arpl
test
cmp
and
add
dec
mov
cs
popl
lea
mov
andl
js
adcb
pop
out
sbb
mov
fsubrl
jecxz
mov
adc
xor
repz
shr
sbb
js
inc
in
mov
and
stc
mov
mov
fwait
pop
sub
push
aad
popa
and
xchg
clc
cmpsl
mov
push
push
fdiv
in
push
ljmp
mov
test
push
and
jns
pop
pop
or
std
push
int3
sub
xor
pop
pop
ficoml
sahf
adc
xor
xchg
out
mov
cmp
sub
testl
push
push
xchg
jmp
cwtl
repnz
pop
fs
insb
mov
cmp
daa
in
jg
lock
adc
fcoml
mov
jns
roll
das
iret
xchg
cmpsb
pop
or
in
icebp
jge
push
cs
dec
xor
lock
lods
sub
clc
sbb
repz
adc
inc
into
cld
gs
jg
ss
vmovq
bound
cld
jmp
xchg
pop
inc
push
sub
mov
adc
test
lcall
fs
scas
sbb
or
enter
dec
pop
fimuls
rcl
mov
jnp
push
fdivrl
shll
jg
mov
add
lods
and
rol
adcl
push
dec
xchg
dec
lods
pop
adc
mov
jle
int
inc
aad
adc
jl
adc
dec
mov
mov
jge
push
loope
mov
inc
jge
je
pop
test
loopne
les
cmp
mov
jnp
lods
xor
decl
stos
fdivp
fcom
outsl
mov
push
popa
test
mov
andb
subl
lret
jmp
cmp
hlt
fst
loop
in
mov
stc
insl
shlb
cmpsl
rcll
js
test
or
adc
push
mov
shll
mov
dec
or
popa
sbb
adc
pop
sub
rcrl
lds
dec
lcall
call
and
mov
or
ss
add
and
dec
cmp
iret
mov
push
or
fwait
in
cmp
mov
sahf
push
int
push
in
dec
insl
jbe
inc
cld
fiadds
dec
out
shll
and
gs
int3
jmp
loope
insl
mov
mov
sub
dec
repnz
cltd
mov
les
dec
adc
or
inc
std
push
mov
hlt
les
sbb
mov
mov
push
out
pop
inc
xchg
push
lret
in
mov
dec
mov
in
out
push
pop
sbb
aas
jns
push
repz
in
inc
jne
cld
mov
ljmp
xor
pushf
xor
push
stos
xchg
sbb
fs
jmp
sub
lret
insl
call
in
push
andl
inc
jmp
pop
jb
inc
xchg
outsl
mov
lret
mov
adc
pushf
cmpsl
frstor
cmpsl
sub
jg
push
sbb
test
dec
mov
jmp
setne
sbb
adc
sbb
ja
dec
sub
mov
and
cmc
arpl
pop
adc
lret
ret
or
and
sbb
imulb
jns
in
pop
adc
call
mov
mov
fsubs
popa
cmp
sub
pop
pushf
out
lods
push
sub
orb
aad
and
pop
iret
and
outsb
les
repz
out
jmp
dec
jmp
sub
out
mov
divl
adc
xchg
aas
xor
mov
loop
lcall
scas
jle
mov
sub
pop
call
dec
gs
mov
out
mov
hlt
outsb
shlb
test
mov
daa
dec
iret
mov
out
push
incl
lcall
and
sbb
fistl
aad
or
imul
mov
dec
scas
or
pop
push
rorb
push
out
fldl
sub
scas
mov
dec
and
adcb
pusha
idiv
clc
mov
mov
cwtl
call
sbb
xchg
das
jne
ja
sbb
or
sub
cmpsb
cmp
and
lahf
int
in
mov
rclb
xchg
scas
and
ja
addr16
test
fcmove
ret
gs
jl
push
pop
dec
and
adc
add
es
mov
addr16
dec
int3
dec
jnp
rcll
pop
jmp
lods
push
mov
out
xor
ds
or
stc
lock
ss
mov
xchg
adc
inc
mov
or
xor
mov
xchg
cmpsb
stc
cs
jmp
out
lcall
xchg
scas
xchg
dec
imul
aaa
shl
jno
int3
test
jno
cltd
sar
or
pop
add
pop
popf
sbb
xchg
pop
into
fldt
mov
outsl
jl
adc
enter
pop
aas
lahf
clc
lret
xchg
ret
mov
push
sub
jmp
cmp
xor
pop
mov
std
mov
adc
shrl
fwait
out
cltd
or
aam
jg
sahf
push
dec
hlt
and
neg
jg
arpl
stos
inc
lds
cmp
push
add
ret
mov
xchg
push
ror
push
add
ja
cmp
inc
mov
dec
pop
and
adc
adc
push
sbb
or
popl
rol
mov
dec
js
out
repnz
fsubs
ds
repnz
lcall
lods
sahf
xchg
jp
pop
push
inc
mov
add
aad
xor
xchg
push
mov
test
pusha
orl
or
mov
add
std
dec
andl
jge
lret
or
pop
add
mov
inc
cmpsb
call
gs
into
imul
fsubrl
pop
icebp
push
xchg
popf
xchg
aaa
mov
jae
cltd
mov
mov
notb
imul
xchg
jle
xchg
movsl
adc
adc
push
testl
push
push
aam
jns
sub
addr16
pop
lcall
lods
jge
xchg
stc
stc
outsl
arpl
mov
push
notl
sbbb
xor
jns
mov
cli
inc
call
into
rclb
out
mov
or
pop
out
clc
add
adc
push
insb
cmp
cmc
add
data16
sarl
shlb
cld
cmp
add
fildl
ret
sub
jo
inc
push
mov
pop
clc
mov
and
fidivs
inc
adc
sbb
and
mov
aaa
pop
mov
mov
inc
jmp
sbb
movsl
cltd
push
pop
inc
xchg
lret
sahf
fcoms
and
bound
and
out
dec
push
jmp
inc
fldt
xor
push
ljmp
test
pusha
jmp
mov
xchg
es
sub
and
imul
mov
mov
bound
scas
mov
popa
dec
mov
dec
adc
sbb
data16
sub
daa
or
adc
pop
jecxz
jnp
mov
mov
mov
inc
movsl
or
xchg
iret
jno
inc
clc
mov
sub
movsb
lcall
inc
cmp
int
pop
ror
scas
mov
repnz
inc
or
push
dec
inc
sub
aad
test
std
cs
pop
not
ss
std
mov
in
inc
dec
or
push
jp
sub
push
cmpsb
dec
cli
or
popa
clc
gs
lret
popa
loope
xchg
les
lods
mov
fs
in
pop
push
das
inc
decl
lods
fsubrs
ja
cltd
jbe
xlat
push
test
fcmovne
cmp
inc
fwait
aaa
in
xchg
outsb
push
mov
mov
stc
shrl
push
xchg
das
enter
mov
fucomip
adc
and
xchg
sahf
nop
adc
sub
jge
lds
mov
pop
push
inc
cmp
imul
mov
add
je
add
jo
sub
push
enter
pop
in
test
inc
test
xor
or
and
fistps
loopne
mov
adc
jmp
sub
sbb
mov
pop
jp
in
in
lods
out
xchg
and
scas
add
pop
and
mov
sub
rep
sub
rcll
mov
mov
clc
cmp
xchg
jo
stos
sub
data16
jge
xchg
jns
call
mov
sub
pusha
dec
push
add
push
mov
cs
mov
adc
dec
mov
jg
out
fmuls
in
mov
imulb
imul
push
outsl
incl
dec
mov
mov
ret
jmp
insb
adc
pop
mov
jbe
pop
xorb
mov
fimuls
mov
or
inc
loopne
pop
in
push
or
cli
imul
mov
cld
ljmp
or
xor
aaa
aas
movsb
cmp
mov
fcmove
or
test
rcll
jnp
insl
push
cmp
add
rcr
fildll
cmp
push
and
lea
out
or
addb
ss
js
dec
jb
in
sub
inc
aas
rcl
fwait
rolb
add
hlt
push
pop
dec
dec
inc
mov
mov
sub
sti
ret
imul
pop
inc
sbb
dec
inc
add
add
ljmp
lods
roll
daa
movsl
xlat
out
sub
mov
push
sar
mov
mov
mov
popf
mov
fcmovne
in
jp
outsb
mov
add
xor
jp
mov
jecxz
add
out
mov
cmp
imul
movsl
or
ss
mov
insb
shlb
aaa
repz
iret
cs
test
ret
dec
popf
lret
dec
hlt
push
cmp
and
insb
test
add
push
cwtl
mov
xchg
cli
ja
aaa
mov
cmp
dec
xor
xchg
ljmp
sub
bound
out
sub
jl
xchg
loop
cld
xor
pop
lahf
dec
mov
rorb
xor
sahf
cmc
push
mov
js
hlt
add
in
mov
sahf
movsb
push
ret
sahf
add
nop
repnz
rol
add
cmp
jae
int3
pop
clc
xor
insl
add
ja
xor
out
enter
ret
jno
fiaddl
jg
lock
pop
fdivl
sahf
ja
imul
add
sarl
pop
or
data16
xchg
cmc
aad
inc
stos
arpl
push
daa
push
pop
sbb
jmp
lret
mov
cmpsb
lds
or
aam
lock
mov
ljmp
jp
fsts
pop
mov
test
or
add
dec
or
push
ret
fdivrl
pop
xchg
sub
or
outsl
push
aas
dec
in
test
dec
sub
mov
fstps
add
out
repnz
add
insb
jle
inc
push
sbb
addr16
or
jp
sarl
sub
cltd
ret
arpl
xor
out
push
mov
mov
sbb
in
rcll
ljmp
cmp
mov
insb
inc
xchg
jmp
sbb
xchg
scas
lret
outsb
cld
cmc
pop
popa
loope
mov
addr16
jg
jle
addr16
mov
mov
add
stc
rcl
in
and
aas
pop
dec
and
pop
dec
enter
jge
fbstp
mov
hlt
incb
psubsb
daa
push
out
movl
popa
in
call
xorb
ss
les
in
sti
pop
and
and
push
cmp
dec
xor
fcoml
push
out
adc
mov
and
cli
dec
xor
cld
test
pop
push
jmp
fidivrs
lcall
xlat
sub
add
repz
insb
stc
mov
std
cmp
sarb
shlb
jecxz
or
inc
lea
pop
adc
add
dec
mov
aas
mov
aas
cmpsb
mov
inc
jns
pop
cmp
pop
cmpb
mov
xchg
js
aas
cmp
loopne
sbb
xchg
push
push
in
imul
jmp
xchg
lret
scas
mov
pop
aam
add
inc
or
jmp
dec
test
xor
adc
mov
sbb
clc
sbb
pushf
rcrb
aas
aam
or
push
fildll
insb
inc
lret
add
pop
scas
lret
testl
cmp
sbb
inc
jle
xchg
pop
aaa
into
test
fwait
or
push
adc
lock
enter
decl
jg
pop
and
lock
jae
not
insl
xor
fildll
adc
dec
test
stos
mov
adc
push
dec
lret
adc
mov
loop
cmp
std
xchg
pop
sbb
not
inc
data16
les
fadd
inc
cmp
inc
mov
dec
std
outsl
je
add
out
fcmovbe
pop
inc
sub
fisubrl
rcll
arpl
xchg
pop
ss
sbb
or
ss
sbb
xchg
and
inc
and
jo
lcall
pop
cltd
ds
js
jae
fwait
xchg
gs
fisttpll
movsb
nop
mov
dec
outsb
cmp
filds
or
xor
int3
mov
sub
int
cmp
stos
xorb
xchg
xor
out
data16
push
mov
jb
cmpsb
push
insb
daa
xchg
lret
sbb
mov
jge
fnstsw
mov
pop
and
popf
leave
daa
fldcw
fwait
or
jecxz
sbb
xor
rcr
enter
mov
clc
div
sbb
and
test
cmp
ss
jne
sti
push
mov
data16
xchg
sbb
dec
movsl
mov
outsb
xchg
mov
and
movsb
lock
ljmp
aas
scas
mov
inc
xchg
inc
jmp
xor
out
cmpsl
jo
inc
jmp
cmpsl
imul
outsb
repz
add
dec
cs
lcall
ret
adc
mov
scas
test
int
pop
mov
mov
mov
pop
and
loop
xchg
push
adc
mov
shrb
pop
cmpb
push
add
and
jcxz
sub
push
add
test
in
xchg
xor
loop
mov
sub
adc
cmp
pop
xor
push
jle
xor
sbb
lahf
lds
mov
sub
fstpl
mov
pop
add
test
inc
push
push
out
cmpsl
loope
pop
add
jge
in
inc
cmp
or
dec
filds
cmc
ret
mov
push
add
xchg
in
mov
lahf
mov
dec
in
mov
mov
mov
lods
xchg
push
test
jns
lahf
push
mov
je
aad
sub
fsts
sub
repz
xor
pop
out
fbstp
dec
jecxz
test
mov
aam
mov
jnp
mov
xchg
pop
mov
mov
scas
or
arpl
fisttps
mov
movsb
aad
inc
mov
lea
in
test
pop
dec
cmp
aaa
sbb
and
push
dec
shll
lds
out
js
inc
int
sub
adc
xor
test
push
sahf
mov
sbb
jge
sbb
cs
cmp
pop
xor
rcl
aaa
cmp
outsl
movsb
lods
bound
inc
popf
and
xchg
sbb
add
cmpsb
jle
pop
add
mov
lahf
sbb
xor
or
pop
adc
test
mov
mov
lods
ficomps
jbe
jns
cmp
add
mov
pop
loope
cmp
ficoml
std
pop
sub
icebp
mov
push
xor
loop
push
loopne
loopne
mov
adc
inc
push
out
inc
xor
or
pop
sbb
lods
mov
xchg
push
mov
push
pushf
cld
mov
pop
popa
xor
cmc
fiaddl
rcll
sbb
inc
pop
movzwl
lods
pop
clc
xor
mov
mov
mov
js
mov
dec
enter
dec
push
nop
push
in
test
aas
inc
lea
leave
or
loope
aaa
sahf
dec
movsb
rcrl
push
jae
andl
incl
xchg
repz
shll
mov
jo
pop
inc
iret
xchg
fs
dec
loop
dec
jl
pop
cld
sub
sbb
sbb
mov
loope
adc
out
sbb
es
xchg
mov
fildl
lcall
inc
mov
gs
sarb
mov
divl
popa
insb
popf
push
xor
mov
add
push
dec
enter
sbb
push
mov
or
jns
mov
dec
popf
test
in
pop
jo
xor
mov
mov
xlat
pop
rcrb
call
imul
or
and
push
out
dec
sub
cmp
ds
cwtl
jns
or
aaa
push
mov
xlat
mov
lds
sahf
add
pop
or
push
std
aas
scas
daa
or
and
ret
fiaddl
mov
rorb
inc
sub
hlt
lods
lahf
lret
outsb
push
inc
jle
repz
add
adcl
test
cmc
test
int
jge
fstl
inc
mov
mov
inc
out
xchg
daa
pop
lea
inc
dec
cmp
sbb
mov
jnp
pop
add
movsl
jns
test
sbb
lret
das
inc
and
ja
int
xlat
jl
stos
xchg
rcl
add
xchg
or
imul
popa
in
dec
push
mov
cltd
xchg
aam
pop
jmp
lcall
cs
cwtl
sbb
mov
push
dec
push
rcl
out
lret
mov
pushf
daa
mov
jns
jecxz
fs
xchg
dec
pushf
je
jg
jae
imul
aam
dec
inc
cld
mov
push
sbb
insb
enter
mov
rorl
mov
outsl
pop
in
jg
pop
jge
out
push
test
imull
adc
data16
insb
fidivs
push
adc
ret
mov
cmpsb
ud1
aas
es
add
call
and
insb
loope
in
mov
dec
mov
add
aad
dec
out
iret
int3
xchg
and
or
xor
fs
xchg
pop
dec
cmp
dec
push
daa
int
push
cmp
stos
inc
leave
mov
mov
push
or
cmp
popa
enter
push
pop
sub
add
sysret
xor
sbb
sub
aad
push
push
addr16
pop
std
iret
out
xchg
xor
insb
stos
mov
xor
out
enter
je
adc
sbb
test
dec
ss
data16
movsl
scas
in
aas
std
aaa
daa
push
mov
mov
sub
dec
lods
dec
and
rolb
and
std
fwait
xor
lret
add
jae
lcall
fidivrs
and
mov
mov
int
mov
call
ds
lods
sbb
jbe
cmp
addl
sbb
sbb
lret
mov
inc
jne
jmp
pop
mov
adc
pop
jns
push
jns
in
ret
aam
sub
je
cmpsb
data16
xor
jnp
fs
out
push
fnstenv
ret
aaa
ja
mov
push
xchg
sahf
jae
sbb
mov
or
push
mov
rcll
aas
dec
int3
pusha
ss
jo
inc
pop
fnstcw
flds
xor
testl
or
sub
push
cmp
arpl
or
inc
push
inc
icebp
jno
out
sbb
cmpsl
fwait
jl
jp
fmull
lock
sbb
shl
cltd
pop
dec
pop
rclb
push
mov
pop
lret
aas
pop
xor
fnstsw
imul
push
adcl
mov
dec
rorb
sub
mov
out
mov
daa
into
pop
mov
mov
sub
or
jecxz
daa
stc
inc
xor
jl
aad
push
pop
jge
xor
or
jle
mov
ret
cmp
xor
pusha
shl
cmove
in
lcall
lcall
push
in
fdivrl
repnz
pop
int
and
fimull
xchg
stos
push
ds
insl
orl
push
jne
inc
imul
jno
rcll
test
jp
xchg
sarl
pop
jns
js
insl
out
fcoml
adc
push
pop
cmp
fwait
mov
enter
test
push
loope
mov
incb
jno
es
leave
imul
xlat
movsl
lret
fidivrs
and
out
rol
leave
inc
repz
bound
cli
mov
sbb
loope
inc
aam
jae
jl
in
orl
lret
loopne
ds
dec
cmp
jne
nop
mov
je
push
xorb
loop
test
mov
fnstcw
push
addr16
xchg
xchg
aaa
fsubrl
xor
loope
mov
lock
pop
fwait
adc
mov
test
lahf
sub
mov
pop
dec
adc
pop
test
idivl
mov
sub
dec
mov
mov
cmpsb
jno
dec
pushf
or
lods
mov
pop
xchg
mov
mov
xchg
push
cmpsb
repnz
or
inc
sbb
imul
cmp
cmp
insb
pusha
int
lods
inc
loopne
mov
sub
sbb
or
jge
and
mov
ljmp
xchg
subl
shlb
xor
pop
sarb
pop
xor
mov
inc
test
mov
push
es
xorl
mov
fcomps
inc
das
cmp
insb
out
jno
leave
ljmp
mov
xchg
sub
divb
ficompl
pop
and
cld
aas
pop
jp
je
ret
jp
dec
mov
ja
inc
mov
inc
mov
inc
das
mov
stc
leave
xor
lea
xchg
push
lret
and
lretw
mov
scas
xchg
add
mov
mov
cmp
push
loopne
stos
cmp
xor
addr16
mov
shll
dec
fsubrs
mov
pop
dec
movsl
xor
mov
insb
insl
mov
pop
jmp
adc
jae
int
sub
cmp
push
or
scas
push
ds
pusha
lods
out
cmpsb
test
cld
mov
mov
adc
stos
jmp
or
insb
sahf
daa
sbb
push
lahf
cld
sbb
loop
insl
out
jnp
xor
js
xor
xchg
pop
hlt
fiadds
xor
and
mov
aaa
pop
and
pop
fstps
inc
in
loop
push
jl
ljmp
xlat
test
sbb
xchg
sbbl
sbb
fs
clc
mov
and
loop
jnp
repnz
fdivl
enter
xchg
cmpsl
push
and
push
roll
mov
push
das
rorb
adc
mov
in
sub
mov
add
dec
xchg
scas
loope
add
popf
ds
fs
xchg
fdivrs
orl
cmp
inc
xlat
scas
cmp
daa
mov
js
mov
xor
mov
insb
mov
sub
adc
pusha
mov
out
mov
and
pop
lret
jno
pushl
dec
mov
lods
dec
pop
cli
xor
out
mov
mov
lret
loope
mov
mov
loopne
in
mov
lods
shll
cmp
xchg
xchg
jg
sbb
fisubrl
in
add
insb
icebp
or
push
jge
cmp
pop
sub
xor
and
xor
scas
dec
pop
mov
cltd
ret
sbb
and
push
mov
repz
daa
pop
shl
stos
xchg
xchg
add
fwait
popf
je
push
sub
scas
and
ljmp
adc
out
inc
int
scas
cmp
out
out
ret
call
dec
cmp
insb
sti
adc
cltd
cmp
sub
sub
call
ficomps
add
push
ror
aas
sub
in
loope
xor
loopne
adc
cmp
divb
das
aas
jl
pop
aaa
adc
mov
cmp
pusha
aaa
dec
movsb
xchg
mov
or
out
jae
pop
mov
imul
loopne
orb
sub
cmpsb
inc
push
push
xchg
inc
pop
rorl
adc
sbb
push
mov
xchg
lock
add
push
out
inc
dec
out
jne
ja
fmul
push
lods
cwtl
hlt
dec
and
jns
lret
push
mov
pop
fldcw
and
jns
add
pslld
shll
sub
mov
data16
andl
pop
in
aam
andl
jecxz
mov
xor
and
shll
mov
xor
stos
imul
and
test
xlat
data16
or
loope
adc
xchg
jmp
xor
bound
jmp
in
in
jbe
or
cmp
outsb
xchg
dec
pop
lds
int
call
loopne
xlat
mov
ja
jbe
test
lcall
sub
mov
cmpsb
xchg
repz
jge
je
loop
pop
stos
jle
nop
mov
lods
dec
sbb
mov
out
jb
popf
fisubs
sbb
out
push
or
mov
out
repnz
and
xchg
mulps
and
in
xor
xor
cmp
mov
ja
mov
inc
clc
push
faddp
xchg
cmpsb
test
fists
imul
mov
and
xchg
in
mov
xor
push
ficomps
test
stc
add
inc
xchg
xchg
cwtl
jne
cmp
add
dec
xlat
sbb
sti
loop
pop
jb
mov
js
add
mov
mov
mov
fcompl
mov
push
lahf
in
jge
jecxz
mov
in
mov
dec
std
mov
fsub
or
pusha
repz
jne
fiaddl
mov
cwtl
pop
push
sahf
ss
adc
not
xchg
out
loope
and
pushf
and
loop
sahf
dec
out
loop
sub
mov
adc
sti
fcompl
cmp
or
jns
or
jne
ficoml
repnz
sbb
lret
jo
pop
dec
add
es
sub
mov
adc
int3
movb
sbbb
mov
arpl
ss
jg
sub
sbb
mov
and
cmp
jp
xchg
pop
mov
scas
jns
ret
pop
jb
loope
inc
inc
into
add
inc
pop
jnp
push
xorl
xchg
in
cmp
inc
lods
fnstcw
insl
xchg
sbb
lcall
mov
mov
pop
sub
xchg
and
leave
inc
adc
cmpsl
dec
popf
lahf
repz
arpl
jg
inc
into
push
test
popa
push
jg
std
xchg
adc
inc
repz
aad
lret
adc
lret
int3
mov
in
pop
add
jmp
loopne
sbb
mov
jb
add
mov
daa
repz
lock
mov
sbbb
incl
out
icebp
into
call
jbe
pop
jns
xchg
popa
push
frstor
add
push
cmp
repnz
rorl
lcall
jae
xchg
jb
stc
dec
pop
sbb
lds
mov
mov
pop
lcall
xchg
daa
fdivl
insb
inc
sub
cltd
adc
seto
popfw
and
or
mov
fld1
push
outsb
add
mov
push
test
outsl
adcl
fadd
jb
sbb
xchg
mov
cmp
aaa
cmp
or
sub
imul
setne
stos
push
mov
fsubrs
inc
aam
add
clc
xor
sub
push
mov
andl
cmpsb
mov
mov
sub
xor
jg
lcall
loop
dec
mov
and
mov
xchg
inc
ja
xchg
jecxz
jae
push
dec
pop
fwait
jmp
imulb
xor
mov
push
or
dec
or
stos
scas
sub
cmc
pop
mov
xchg
lea
adc
pop
insl
mov
pop
pop
cmc
lea
cmpsl
cmovns
push
and
sub
aas
loopne
push
jp
mov
and
incl
or
rcrl
xchg
fidivrs
push
mov
and
jbe
jl
rep
pop
sbbl
js
xlat
in
mov
dec
sub
jnp
adc
adc
add
mov
xor
imul
xor
or
lcall
lds
lds
mov
in
jne
hlt
stos
or
add
pusha
clc
insl
aam
mov
outsl
sub
mov
xlat
call
scas
std
fists
ret
inc
inc
xor
out
sbb
push
sub
xchg
cmpsb
test
mov
jge
add
mov
mov
les
and
xor
pop
lahf
cli
das
push
mov
jmp
adc
dec
sub
fisubrs
sub
lock
int3
mov
fdivl
xchg
or
lea
pop
fnstcw
repnz
popf
dec
arpl
jle
adc
jae
mov
aas
and
inc
mov
popl
pop
ret
enter
ficompl
sub
dec
dec
aaa
jne
mov
xor
ficoml
aaa
scas
es
and
ret
or
call
popf
xchg
lods
insb
dec
adc
add
jnp
sbb
inc
mov
lahf
pop
or
jg
push
inc
sbb
add
push
sahf
mov
add
ljmp
movsl
xchg
or
push
bound
arpl
cmc
cmp
pop
loopne
fnstcw
or
mov
cltd
and
std
cmp
xor
roll
pmulhw
pop
mov
cmpsl
out
ffree
xchg
and
data16
push
ret
mov
repz
or
or
rcrb
or
jnp
xchg
sar
inc
xchg
jne
in
xchg
lds
addl
clc
sbb
in
sarb
pop
sub
and
mov
dec
xor
or
icebp
ljmp
inc
iret
cmp
adcb
xchg
push
pop
xor
mov
js
stos
or
mov
mov
add
pop
movsl
sbb
aas
sbb
shrl
repz
dec
pushf
jnp
loop
mov
mov
cmc
xor
shl
xchg
xor
bound
mov
add
sarb
adcl
inc
ja
push
outsb
or
sbb
adc
adc
imul
jge
aam
cld
pop
stc
cmp
test
imul
sbb
insl
push
and
push
sarl
cmp
pushf
movl
jg
adc
xor
mov
jg
sub
dec
add
sti
push
ds
dec
push
int3
cmpsb
push
out
mov
xchg
shll
imul
das
mov
inc
xor
cltd
mov
push
xlat
jbe
stos
negl
mov
inc
xor
notb
js
je
dec
mov
pop
shll
mov
popa
popa
mov
mov
or
outsl
cmp
ja
inc
mov
sub
pop
dec
pusha
pop
xchg
mov
sar
adcl
loope
inc
inc
dec
repz
mov
popa
lods
stc
jge
and
jl
push
leave
out
sub
fstp
pop
sub
fstps
fnsave
jp
add
push
sub
sbb
mov
ret
fs
pop
cli
addb
jo
in
lea
sbb
and
in
pop
mov
adc
sti
xor
cli
test
js
call
clc
mov
add
pop
jg
ds
push
add
into
mov
xchg
ror
and
sub
call
stc
sbb
bound
fisttps
add
push
xlat
xchg
xchg
mov
aaa
pop
stos
lea
and
cmpl
adc
shrb
es
dec
mov
imul
push
movsl
rorb
mov
xchg
ret
jo
cmp
cld
bound
pop
adc
xor
repz
fwait
cmpsl
lods
test
lods
cmovp
lcall
jge
or
pop
ret
int3
xor
fistps
inc
adc
sti
shlb
cmp
push
lock
jne
call
ja
outsb
bound
jge
add
adc
mov
lcall
in
jne
add
mov
repz
lret
xchg
movq
xchg
outsl
pop
add
mov
pusha
movsb
aas
adc
popf
jge
cmp
and
xchg
les
xchg
and
xchg
ja
pushf
sahf
dec
movsb
shrl
inc
jnp
or
iret
outsl
hlt
adc
jb
shlb
xchg
jp
in
into
cmc
adc
cwtl
dec
add
pop
adc
push
add
add
stos
andl
dec
mov
inc
cmp
fcoms
daa
fcmovu
mov
dec
push
mov
stos
pop
cwtl
jne
lock
pop
movsl
mov
pop
mov
push
popf
aaa
jne
sarl
add
push
jl
pop
cwtl
jle
mov
pop
iret
pop
test
pop
cmpl
lret
push
std
cmc
mov
fimuls
dec
fidivs
bound
mov
mov
xlat
lahf
mov
fnstenv
insb
xchg
inc
inc
shrb
fwait
loope
insb
jbe
cmovo
dec
pop
mov
mov
orl
add
popf
movsb
jne
js
sbb
ret
push
fsubl
loope
sti
cld
adc
inc
sti
mov
shll
jp
or
fsubrl
daa
add
jle
cmp
cwtl
dec
push
stos
xor
rorb
jo
inc
mov
add
pop
push
mov
fdivrs
fildl
mov
repnz
push
pop
fsubrl
pushf
lcall
rcr
push
int3
fiaddl
stos
outsb
out
rcrb
sbb
sub
int3
lea
je
mov
lods
xchg
or
cld
jmp
jo
lods
or
outsl
insb
sbb
idivl
push
mov
adc
add
xor
push
cmc
mov
jbe
movsb
jle
out
adc
xchg
popa
cmpsl
scas
cltd
stos
xchg
jl
daa
xchg
sbb
mov
ljmp
mov
fsubs
push
and
call
cmpsb
in
rcrb
and
mov
pop
sbb
sub
cltd
cmp
inc
cli
cmp
std
and
adc
fisubrs
pop
pop
or
dec
push
lret
xchg
cmp
rcll
adc
fscale
jmp
fdivrs
lea
or
xchg
or
std
jno
lret
test
xor
xchg
ja
rorb
or
std
xorb
adc
jecxz
nop
or
daa
popfw
mov
xchg
cmp
xchg
bound
add
xor
or
cld
loope
push
dec
mov
jno
mov
or
and
push
sar
je
push
decl
rcrl
in
add
inc
xor
and
jl
push
add
shrl
dec
mov
jne
out
das
mov
rol
xchg
pusha
sbb
or
fmuls
xchg
or
ror
push
mov
mov
cmp
xor
faddp
adc
and
cmp
inc
dec
imul
xchg
or
aad
std
in
lods
add
fwait
inc
sbb
fs
push
je
and
adc
repz
inc
cmp
xchg
xor
addl
sbb
jnp
ljmp
push
xchg
insl
pop
rcrl
mov
sub
rclb
pusha
mov
push
adc
lds
les
xor
pop
cmp
mov
mov
xchg
into
xchg
xor
insb
sbb
mov
xchg
adc
mov
mov
js
faddl
mov
xchg
lcall
loope
inc
rcr
test
pop
and
xor
mov
les
iret
adc
sub
les
mov
and
jbe
fs
hlt
testl
popa
lahf
loop
and
mov
dec
mov
pop
push
add
rclb
adc
aam
clc
add
mov
mov
movsl
dec
fidivrl
xchg
sarl
cmp
das
xchg
sub
xlat
mov
nop
sar
jno
sbb
xchg
jle
mov
lret
dec
sbb
inc
cmp
mov
pushf
std
nopl
cmp
push
xchg
popa
push
rol
fsubr
push
cld
orl
push
mov
adc
fiadds
mov
sbb
testl
lock
je
add
std
pop
sbb
mov
mov
pop
notl
mov
mov
adc
mov
fsubrs
lock
xchg
xchg
pop
adc
push
pop
imul
icebp
xlat
or
xor
shr
dec
out
imul
xchg
in
mov
xchg
mov
orl
adc
cmp
ret
adc
das
mov
std
inc
shrb
lahf
adc
cmp
adc
stos
adc
add
push
xor
pop
shll
push
ja
mov
fistpll
repnz
add
sub
fwait
jp
push
stos
jbe
inc
enter
mov
cltd
add
jl
clc
push
addr16
iret
adc
and
add
inc
sahf
lods
loop
mov
test
adc
call
rdtsc
cmp
aam
sbb
clc
mov
addr16
xchg
repz
adc
inc
pop
adc
ret
lods
aas
and
popf
movsl
mov
je
and
in
sarb
cmp
add
lret
lcall
xor
mov
pop
jne
insl
jmp
int3
loope
ljmp
push
push
jnp
and
mov
shrb
lods
imul
fisubl
push
inc
ret
cltd
mov
or
xchg
ret
imul
xor
xchg
lods
jecxz
mov
push
jnp
push
mov
jne
jl
lods
and
leave
mov
mov
jo
ret
adc
in
sbb
into
mov
mov
push
imul
sti
or
inc
or
push
jp
ds
jp
mov
xlat
dec
and
mov
mov
xchg
push
sub
or
in
pop
aam
xchg
out
or
or
leave
test
and
fisubl
pop
sub
and
mov
add
pop
inc
enter
xchg
xchg
and
stc
mov
cltd
mov
adc
cwtl
xlat
subl
xchg
hlt
ljmp
cmp
hlt
dec
gs
mov
xchg
rorl
push
popf
pop
jns
add
mov
push
test
add
lods
pop
xor
dec
push
mov
mov
cmp
xchg
rorb
pop
adc
add
ret
sub
jno
add
movsl
out
push
xchg
mov
xor
push
movsb
push
xor
enter
mov
mov
mov
loope
cmp
cltd
cmp
adc
mov
pop
pop
arpl
fwait
test
add
mov
add
test
push
les
lcall
cltd
mov
or
or
mov
mov
xor
or
xchg
mov
inc
and
scas
outsb
fwait
cmp
rcll
mov
mov
daa
aaa
or
leave
or
jle
push
push
popf
or
or
ret
jg
push
insb
outsb
sahf
or
aam
dec
mov
dec
insl
idivb
das
das
hlt
xchg
add
rep
pop
sbbb
xor
les
shll
das
mov
repnz
rclb
cltd
inc
adc
pusha
test
adc
in
pop
mov
dec
nop
push
cmp
jge
ja
test
repnz
pop
push
jb
xchg
adc
test
outsb
pop
sub
in
std
push
jecxz
adc
xchg
push
mov
xorb
leave
push
stc
sbbb
outsb
nop
mov
scas
xchg
cld
pop
clc
push
scas
mov
das
add
add
mov
sub
sbb
jecxz
ret
add
or
mov
and
int
cli
sbb
ret
sub
cmpl
cmp
jecxz
pusha
loop
hlt
andb
test
adc
mov
dec
out
pushf
callw
xchg
addr16
stos
or
push
xor
and
arpl
and
jecxz
test
mov
xor
or
aam
mov
sbb
push
xor
xchg
jl
aaa
jne
mov
pop
or
and
fld
mov
pusha
inc
xor
cmp
pushf
test
xchg
jge
jmp
stos
dec
mov
std
rol
push
sbb
mov
aas
and
mov
and
sub
mov
dec
or
push
add
inc
outsl
fadds
imul
sbb
jmp
lea
inc
ja
mov
mov
movsl
stos
push
adc
cmpsl
mov
out
jle
outsb
mov
iret
std
push
out
xchg
jg
xchg
adc
or
xor
scas
in
sub
cmp
std
repnz
mov
lea
bound
aam
inc
jp
mov
jecxz
inc
test
push
mov
dec
pop
testl
add
in
or
cmpsb
and
aas
sbb
sar
sarl
xchg
or
scas
xor
or
pop
subl
xlat
pop
test
cmp
popf
loope
mov
xor
jg
std
stos
jmp
stos
lds
iret
pop
push
popf
movsl
repnz
jl
inc
out
cli
je
mov
iret
arpl
inc
lcall
jge
sub
jl
lock
movsl
testl
outsl
les
push
push
fs
dec
push
int
adc
inc
add
test
aam
in
popf
lods
or
cs
data16
add
leave
lods
push
push
mov
jae
mov
and
xlat
sub
enter
jg
push
je
sbb
dec
in
in
mov
add
test
dec
outsb
adc
rolb
loope
fprem1
sahf
add
inc
pop
or
push
leave
into
jno
sub
or
dec
mov
mov
lcall
pop
dec
rcl
ljmp
or
loope
jb
pusha
icebp
mov
pop
les
fs
es
ja
test
aam
das
test
xchg
add
fcmovu
pop
shll
xchg
repz
inc
insb
jno
in
push
cwtl
cmp
cld
shll
cmp
jb
stos
jbe
leave
mov
mov
orb
enter
sti
adc
sub
test
or
pop
loop
mov
outsl
fcoms
in
add
jne
lock
ljmpw
push
dec
and
out
push
imul
adc
in
mov
xchg
dec
add
xor
xchg
ljmp
clc
lods
inc
jno
mov
and
sbb
test
jb
xor
adc
pop
fldl
mov
adc
call
cmc
pushf
ret
pop
sbb
sbb
mov
adc
sub
fs
pop
outsb
mov
ljmp
or
sub
mov
sarb
jl
add
enter
push
pop
sbb
and
xor
cmp
loopne
dec
lock
add
dec
lcall
push
jae
sbb
stos
lahf
scas
and
pop
sub
mov
jae
adc
cwtl
mov
lret
mov
cld
enter
movsl
lods
sub
mov
aas
xchg
jle
jle
lds
lahf
jnp
nop
inc
iret
fistpll
adc
daa
pop
jg
add
push
in
pop
cli
add
daa
shll
pop
cmp
inc
fs
out
jns
jecxz
mov
out
pop
pop
call
sahf
sbbl
add
fsubs
mov
push
mov
add
imul
out
incb
cmpsl
cmpsl
jp
dec
push
xchg
pushf
ss
inc
dec
sbb
xchg
stos
ja
mov
or
std
and
mov
lds
cmp
sub
roll
lods
out
adc
push
fistpll
or
mov
dec
cld
xchg
flds
sub
inc
xor
pop
sub
cmp
in
imul
ret
mov
inc
flds
adc
test
in
xchg
sub
adc
fmuls
pop
cwtl
adcl
jne
xchg
lret
mov
mov
cmp
scas
jo
jle
lahf
push
mov
out
dec
pop
fs
pop
push
repnz
sbb
xor
movsb
pop
loop
lods
sti
ret
inc
pop
cmp
adc
imul
in
test
scas
xchg
cmc
jl
fisttpll
add
pop
jg
in
stos
push
cld
jecxz
inc
mov
inc
bound
mov
pop
dec
push
and
mov
push
das
cmp
mov
pop
inc
imul
lcall
mov
and
movsl
jle
imul
pop
pop
lahf
nop
in
jg
lock
out
aad
ds
call
inc
mov
inc
fdivl
xor
xchg
int
jg
loop
in
jbe
or
push
imul
xchg
xchg
sbb
mov
leave
outsl
sub
aaa
std
mov
pop
inc
insb
lret
add
push
add
jne
aam
or
mov
mov
pop
jbe
loope
adc
repz
xchg
adc
xchg
add
pushf
xorb
jns
or
in
int3
or
jge
pop
fists
mov
lret
dec
add
cld
jl
fsubs
out
test
fdivrp
mov
out
jns
xor
sbb
test
ret
out
sbb
jb
test
push
xor
call
sbb
pop
push
sub
popf
int3
mov
xor
jmp
xor
insl
or
and
dec
mov
or
and
add
lds
out
inc
pop
adc
mov
mov
pop
stc
movsl
dec
jmp
call
sub
mov
stos
cmpsl
out
push
mov
pop
cmc
insl
xchg
jo
out
cmpsl
adcb
push
pop
xor
inc
js
add
shll
hlt
xor
cltd
inc
inc
lahf
sub
notl
pusha
sbb
jmp
jne
cld
daa
sbb
mov
ret
adc
popa
mov
dec
push
lods
aad
imulb
mov
lret
mov
test
std
or
sub
mov
mov
out
push
jno
and
daa
imul
dec
js
mov
lock
ret
or
div
inc
ret
push
jle
in
lret
ja
mov
cltd
lock
adc
int
insb
mov
stos
insl
shlb
dec
sub
data16
cld
add
inc
or
movsl
lods
dec
inc
xor
cltd
or
aad
mov
adc
sub
and
and
sbb
xchg
incl
and
and
jg
sbb
orl
data16
icebp
ret
movsb
adc
sbb
fldenv
sub
adc
arpl
addr16
jns
cmpsb
xor
or
mov
mov
ret
addr16
add
xlat
loop
fstps
pop
addb
pop
push
lea
std
inc
inc
popa
cmp
call
popf
lea
or
jnp
in
sbb
rorl
inc
add
ret
fcmovne
push
data16
daa
outsl
sbb
jns
push
ljmp
mov
frstor
pop
adc
xchg
jnp
leave
add
mov
test
pop
or
test
mov
loop
add
addr16
dec
cld
adc
cmovne
daa
mov
xor
test
ficoml
xchg
aam
and
cmpsb
test
bound
pop
lods
test
repz
jmp
daa
into
popf
sub
add
shlb
in
dec
rclb
jl
cmp
and
cmp
jnp
les
out
mov
les
rcr
or
mov
in
in
add
lcall
adc
push
jp
dec
inc
aad
dec
mov
mov
push
lcall
neg
sub
daa
xor
mov
mov
jne
xlat
shr
lea
jmp
mov
insl
xor
mov
stos
fcomip
fcomp
cli
xchg
push
std
ret
stc
mov
stos
ret
push
ret
scas
push
jae
pop
push
popa
cmp
repz
and
lret
xchg
or
jecxz
enter
sbb
mov
xor
dec
sbb
add
xor
ja
mov
fnstsw
insl
pushf
out
test
adc
stos
xchg
push
loope
fnstenv
xchg
xor
mov
pop
xor
lock
pop
adc
mov
sbb
lcall
mov
lods
xor
movsl
dec
sbb
lock
cmpsb
inc
inc
pop
out
xor
pop
adc
mov
mov
push
xchg
or
mov
cs
icebp
lret
inc
movsb
lock
sbb
cmpsl
mov
out
scas
in
xchg
or
fs
rorb
xchg
fcmovu
clc
push
push
sub
jge
insb
lds
outsl
pop
popf
sbb
stos
in
call
and
std
xchg
mov
cmp
aas
stc
cs
add
loope
pop
cltd
bound
sbb
enter
push
ljmp
push
push
or
inc
shl
sbb
pushf
pop
mov
mov
nop
mov
lret
lods
cmp
push
inc
sbb
xchg
in
imul
or
add
int
jmp
sbb
sbb
sub
mov
stc
addl
mov
xor
je
add
adc
mov
sub
cmpsl
jmp
push
repz
inc
mov
out
in
add
ret
cmp
cmp
mov
mov
push
inc
fwait
dec
lock
mov
lea
ret
cs
jmp
stos
adc
jmp
aaa
jo
mov
inc
xchg
ja
mov
mov
repnz
sbb
add
mov
pop
ret
and
push
movsl
enter
sarl
inc
mov
push
cwtl
and
cmp
fistpll
andb
fldl
arpl
jns
jbe
push
add
gs
mov
stos
add
jmp
xchg
inc
incb
clc
add
popf
subb
repz
mov
mov
sbb
popf
sub
mov
jmp
push
repnz
aaa
stc
call
lret
rclb
dec
fsubl
push
insl
loopne
negb
dec
aas
jecxz
les
arpl
leave
xchg
cmp
dec
mov
mov
push
clc
fnstsw
jno
testl
cs
dec
cld
adc
jl
jb
pop
imul
mov
out
mov
insb
pop
rorl
dec
sbbl
movsl
dec
inc
rorb
mov
or
sub
push
jne
or
stc
xchg
hlt
call
xchg
push
test
sub
pop
dec
mov
pop
xchg
pop
inc
add
lea
stc
ja
push
xchg
loopne
xor
mov
push
aad
pop
or
insb
shlb
sub
cwtl
jo
or
int3
or
mov
aam
mov
fiadds
fcoml
stc
je
xor
rcrb
push
fldcw
call
sub
inc
push
bswap
xchg
aaa
pop
xor
or
sarl
dec
out
js
cmp
jae
and
push
stc
add
out
sti
xchg
lock
add
pushl
xchg
out
sbb
outsl
dec
insl
inc
cmp
mov
outsl
ret
add
ss
adc
daa
stos
dec
addl
fadd
je
or
push
loop
nop
testb
mov
sub
imul
and
adc
jns
pop
and
lcall
lahf
aad
cltd
sub
dec
pop
and
add
test
cmp
outsl
addr16
in
xor
mull
and
inc
mov
mov
loop
add
dec
stos
jb
call
rorl
loopne
cltd
cwtl
lcall
push
fiadds
push
std
push
roll
sarl
jg
mov
jns
jno
inc
pop
rorb
bnd
push
inc
nop
adc
fwait
ljmp
fdivrp
sbb
les
mov
jl
jle
popa
mov
out
lcall
cmp
fsubs
arpl
mov
sti
cmp
and
ss
mov
lds
cmp
add
pop
add
sub
pop
lds
aam
mov
test
popf
iret
cmpsl
cmp
pop
lcall
push
dec
outsb
lea
into
push
int3
push
add
add
dec
inc
xor
in
sbb
fildl
xchg
push
pushl
sarl
aad
clc
lods
pop
dec
fcmovnbe
imul
test
in
les
push
and
dec
jl
loope
ficoml
add
jne
icebp
rcrl
jne
je
mov
push
xchg
pop
test
jecxz
cmp
rcrb
or
inc
jo
jne
movsw
gs
cmp
leave
mov
imul
lock
pushf
in
mov
movsl
idivb
xchg
xlat
or
aad
or
sbb
movsl
mov
rolb
ds
mov
mov
sbb
push
loop
add
arpl
mov
pop
inc
sbb
roll
push
or
jo
push
xchg
mov
pushf
dec
cmc
sbb
jne
mov
inc
push
pop
sbbb
mov
out
or
add
ffreep
es
push
mov
ja
mov
jmp
mov
sbbl
jb
call
add
and
in
xchg
aam
xchg
je
sbb
mov
push
sahf
rcl
jge
xorb
imul
out
sbb
in
test
clc
sti
mov
sti
fistl
decb
clc
sbb
or
jno
cmc
mov
arpl
mov
mov
aas
call
shlb
mov
int3
pop
dec
mov
lods
rcrl
leave
add
inc
test
mov
sbbl
scas
addr16
push
push
in
mov
lret
cli
or
lds
pop
cltd
in
xchg
sub
leave
jbe
jbe
loopne
sbb
adc
stc
dec
insl
inc
outsl
xor
js
mov
aas
or
stos
ljmp
cmp
inc
pop
jnp
ja
jmp
xchg
aad
shrl
adc
sub
push
jp
pop
push
inc
rclb
stos
out
out
movsl
and
call
sub
pop
cmpsb
jp
notb
stc
subb
cs
enter
xchg
dec
inc
dec
shlb
cli
mov
lods
pop
xchg
push
pushf
scas
dec
xor
nop
mov
lock
loope
mov
or
add
aad
jno
pop
pop
pushf
loop
push
in
insl
sub
add
dec
pop
push
jl
xor
dec
loop
adc
fmuls
mov
fwait
mov
mov
out
sbb
pop
xchg
pusha
call
int3
add
rclb
pop
cmpb
aaa
mov
clc
mov
adc
and
into
dec
out
fldt
pop
hlt
mov
ret
jl
and
frstor
pop
mov
movsb
pop
rclb
movsl
int3
xchg
xchg
or
push
mov
lahf
mov
sbb
bound
fcomp
jp
stos
inc
fdiv
lock
jge
add
dec
or
cmp
test
sbb
popf
inc
and
xchg
push
out
dec
push
lret
lea
aad
scas
push
ss
fimuls
inc
shlb
add
adc
dec
xor
scas
push
out
mov
jecxz
imul
std
jge
out
push
loope
hlt
movsb
std
and
loope
das
push
or
in
xchg
jo
adc
popa
add
fdivrs
mov
in
sbb
pop
pop
adcl
inc
cmpsb
adcb
cmp
push
mov
mov
cli
xchg
mov
cmp
rclb
adc
pop
ret
in
and
cmc
and
xlat
into
mov
aas
sub
sbb
iret
shr
stos
sti
mov
sbb
ss
xor
mov
or
daa
int3
jbe
in
jb
xchg
inc
dec
adc
and
adc
or
dec
mov
aaa
add
mov
sbbb
pop
jbe
aas
pop
insb
mov
cli
cmpsl
adc
push
fstpl
dec
out
xchg
xchg
adc
es
xchg
mov
mov
mov
adc
push
ret
shrl
fs
add
fildll
lds
inc
je
gs
in
ss
sub
aam
fiaddl
fnstsw
les
icebp
push
jo
push
sub
pop
jb
and
mov
push
dec
xchg
and
add
movsl
lret
mov
xor
movsl
mov
dec
inc
enter
cmc
xchg
pop
repz
xor
mov
mov
mov
in
test
pusha
imul
mov
mov
push
lods
cmpsl
push
rcll
dec
cs
xchg
outsb
or
mov
mov
cld
jmp
xor
in
es
daa
push
xor
push
mov
es
adc
aam
cld
outsl
in
jp
mov
ret
push
aad
stc
or
or
or
pop
jg
cmp
cmp
inc
mov
adc
xor
test
cmp
jns
push
mov
pop
fisttps
stos
lea
outsb
mov
cmp
stc
icebp
jp
lods
stos
popf
icebp
mov
and
xchg
cmp
nop
adc
popa
jns
dec
and
std
xorb
mov
dec
xor
mov
xchg
adc
xor
cmpsl
fs
cltd
xor
test
inc
cmp
loope
and
rcll
push
aas
mov
test
push
mov
scas
mov
fldcw
inc
clc
lods
aad
jge
add
sub
leave
iret
lea
stos
aad
sub
pusha
mov
xchg
add
pop
ja
setnp
mov
xchg
into
lods
rclb
dec
test
inc
sub
mov
sbbl
adc
push
cld
or
aas
scas
mov
and
mov
shlb
mov
lock
popl
pop
cltd
pushf
ss
out
pop
adc
cmp
enter
mov
loope
adcb
adc
dec
lret
psubsw
rclb
lahf
jg
add
das
mov
push
das
in
test
ss
sub
xor
cmc
jo
std
movlps
xchg
mov
outsl
subl
pushf
fcmovnb
cmp
push
js
jbe
push
test
push
fadd
push
repz
pop
xlat
and
sbb
mov
xor
pop
lcall
mov
jnp
test
in
lock
lcall
adc
cmpsl
into
mov
mov
mov
pop
lret
add
mov
jge
push
jae
rcrb
aad
scas
lods
jmp
adc
insb
sbb
icebp
fldt
test
mov
aad
add
dec
outsl
scas
dec
or
xchg
loopne
orl
jge
sahf
push
dec
in
adcl
push
xchg
pusha
mov
fwait
iret
repz
xor
xchg
dec
outsb
jbe
sub
scas
cwtl
mov
lock
les
xor
sub
in
or
faddl
loop
call
fldl
pop
insl
adc
add
jnp
jno
push
xor
jne
inc
inc
mov
xor
dec
dec
iret
mov
test
out
dec
mov
jnp
mov
add
adc
lock
xchg
inc
es
shl
xor
xor
sbb
xchg
in
and
rorl
loop
pop
adc
xchg
fisubrl
jg
sub
lea
cmc
leave
scas
dec
cmp
sahf
xor
sbb
stos
scas
mov
out
icebp
cmp
ret
out
xchg
pop
xchg
es
das
fdecstp
sbb
xchg
mov
les
pop
hlt
das
jnp
push
jb
xchg
ss
sbb
inc
mov
call
js
cmp
inc
sub
cvtdq2ps
subb
or
subb
cmc
and
pop
rcrl
and
mov
iret
push
pop
aas
add
jge
cmp
xor
jp
adc
inc
pop
xor
push
iret
mov
xchg
dec
mov
and
pop
push
popf
adc
inc
shrd
xor
pop
jns
hlt
les
dec
test
pushf
imul
xor
cmp
cld
fnstcw
aas
push
loop
cmp
mov
and
inc
pop
enter
and
scas
fistps
mov
jp
fisttps
insl
push
imul
mov
out
add
sub
pop
out
jns
mov
add
mov
xchg
xchg
cmp
push
in
and
popa
insl
cmc
outsb
adc
fstpl
sahf
mov
imul
mov
xor
scas
mov
lret
negl
xor
adc
addr16
dec
addb
jo
fnstenv
bswap
cmp
or
dec
inc
loope
mov
in
dec
and
sahf
jno
inc
rclb
or
testb
leave
inc
or
mov
dec
sub
pop
dec
and
mov
sahf
push
jge
incb
dec
push
or
cmp
addb
push
out
fwait
sbb
fwait
sarb
ret
lock
mov
outsl
test
mov
or
or
push
int
cmp
std
sub
fnstcw
mov
addb
test
ret
and
in
add
push
sub
pop
dec
repz
xchg
popl
push
dec
repnz
mov
pop
push
add
je
jl
mov
xchg
jl
ljmp
mov
push
or
ljmp
or
out
int3
orl
iret
clc
das
jg
push
or
stos
cmpsl
push
add
or
dec
hlt
js
pop
jecxz
xchg
ljmp
xor
jmp
inc
jg
data16
and
pop
push
mov
loop
dec
into
fisubrs
dec
jns
inc
adc
in
test
sbb
add
sbb
rclb
pop
jmp
sahf
pop
popa
ja
mov
mov
jbe
inc
jge
sub
jg
aaa
popf
ja
sbb
cmp
lock
addl
dec
lret
mov
push
mov
idivl
pop
mov
sbb
aam
mov
push
push
mov
jno
imul
repz
sub
sub
call
xchg
push
mov
pop
sbb
add
imul
xchg
xor
lahf
add
mov
cmp
ret
into
inc
sbb
cmp
aad
xor
les
dec
or
inc
arpl
jge
pusha
fisubs
mov
test
arpl
jle
push
shl
inc
lcall
cmp
out
cltd
cmp
xor
and
das
sqrtps
mov
xchg
xchg
inc
dec
or
jo
ja
adc
push
lcall
dec
adc
fidivrs
adc
lods
out
xor
iret
imul
cmc
bound
test
fsubr
add
mov
aad
add
xor
addb
mov
pop
dec
add
out
pop
and
leave
aad
pushf
mov
push
sbb
adc
xor
bound
mov
je
jo
jecxz
imul
jae
and
repnz
sub
lods
push
or
push
add
push
mov
bound
sarl
mov
adc
inc
jmp
sbb
pop
pop
subl
sub
rolb
jge
cmp
inc
aam
aas
adc
xchg
xor
mov
clc
ret
jne
fldl
pop
pop
decl
jmp
push
sub
loopne
push
inc
aam
mov
lods
stos
je
subl
das
jmp
fnstsw
xchg
aam
pop
stc
fwait
or
jb
dec
inc
xchg
rcl
jae
cs
or
add
jne
in
and
data16
repz
push
out
push
sahf
mov
pop
fsubrp
shrl
cmp
icebp
adc
data16
loopne
mov
loop
lea
in
push
bound
insl
outsl
in
ret
jne
scas
xor
mov
pushf
shl
inc
dec
mov
outsl
movsl
or
scas
lods
sbb
lcall
jo
into
pop
or
fwait
mov
das
int
fidivs
imul
mov
fstpl
or
mov
imul
mov
fidivrl
xchg
pop
test
or
cmpsb
mov
andb
xchg
int
out
jns
clc
cmp
les
push
mov
sbb
mov
inc
cmc
and
imul
int
sti
ret
add
cmc
cmpb
mov
fbstp
das
movsb
es
sub
adc
and
sbb
adc
pop
cltd
in
orb
subl
mov
iret
cmp
add
mov
inc
cmp
pop
mov
xchg
jge
test
test
pop
mul
mov
ret
push
sbb
jne
cmpsl
lock
dec
cmp
pop
pop
fstcw
dec
nop
mov
lods
mov
popf
ja
pop
inc
sti
orl
xor
pop
sti
jae
data16
aaa
nop
es
and
pop
mov
xor
cmp
xchg
aad
outsb
ss
adc
push
gs
xchg
das
jae
sbb
mov
aam
fcmovnbe
mov
test
repz
shlb
loop
sub
dec
mov
mov
push
scas
outsb
pop
inc
enter
rorl
pusha
inc
iret
gs
out
add
mov
and
sbb
xor
xchg
stos
ss
ficoms
insb
pop
arpl
lods
or
dec
inc
divl
aaa
mov
test
mov
xchg
or
fwait
aam
inc
pusha
jg
repz
mov
cld
fdivrp
inc
inc
inc
adc
insl
repz
ret
les
faddp
rorl
mov
mov
mov
add
out
cmc
scas
rolb
adc
sbb
inc
push
cmp
mov
mov
pop
mov
fistps
jmp
shrl
popa
push
adc
aaa
lds
rcll
popa
mov
pop
jl
cmp
pusha
ret
push
pop
pop
test
fisttpll
fcomip
mov
ja
sbb
adcl
loop
out
mov
vzeroall
insb
inc
faddl
push
adc
out
pusha
sbb
enter
jns
mov
mov
and
movsb
mov
and
jle
xchg
adc
lods
ret
lcall
push
test
loop
adc
xor
test
mov
dec
xchg
push
out
pop
inc
jo
sub
ret
lock
mov
pop
sub
sbb
sub
adc
jnp
or
mov
testl
lods
divl
insb
inc
cmp
int
ret
adc
inc
out
rorl
add
sbb
mov
push
xor
aam
push
insb
or
pop
mov
xor
std
aas
xchg
dec
loope
hlt
fsts
mov
orl
dec
push
test
cmp
fsts
mov
and
cli
pop
pop
push
call
push
jge
inc
cmp
mov
jno
pop
pop
push
shlb
out
andl
insl
lods
popa
lret
add
push
loop
xor
stc
and
loopne
scas
paddq
testl
sbb
out
pop
loopne
adc
jno
fiadds
icebp
call
push
inc
push
ror
inc
push
repz
ds
in
stos
inc
push
add
mov
test
xchg
and
repz
xchg
push
add
cmpsl
scas
adcl
mov
dec
addb
jnp
iret
adc
fistpll
xorb
sti
mov
or
add
scas
lods
scas
mov
outsb
mov
nop
iret
mov
nopl
mov
rcrl
cmp
lock
add
aam
sub
rorl
sbbl
outsb
push
std
stc
imul
ja
xchg
push
mov
lcall
ljmp
mov
add
jp
xchg
sbb
sub
add
nop
mov
inc
add
in
sti
nop
in
dec
pop
jo
add
sbb
int3
push
push
pop
jg
jo
cltd
or
fiaddl
aam
mov
jmp
dec
xchg
int
insb
jb
popa
in
arpl
pop
mov
fcoml
lret
out
rcrb
insl
pop
or
and
adc
mov
xor
sub
ffreep
push
pop
out
idiv
mov
outsb
sarb
mov
sub
into
mov
loopne
push
inc
push
and
stos
jbe
sbb
mov
mov
aam
push
xchg
sub
push
mov
add
lcall
mov
repnz
mov
stos
and
insl
pusha
jo
sarb
mov
ror
rol
xchg
repnz
in
int
daa
or
mov
aad
test
xor
lds
out
aas
jb
iret
pop
mov
aas
push
add
fcompl
jne
push
aam
push
retw
inc
xchg
stos
aaa
hlt
test
mov
push
and
mov
mov
mov
pusha
cmpsl
ss
leave
jmp
mov
cmp
add
pushf
loopne
cmp
xchg
out
xchg
or
pushf
out
lret
mov
outsl
ja
cli
lret
aam
in
lret
mov
jecxz
shl
int
frstor
scas
ud1
es
xor
leave
sub
js
and
mov
add
inc
lods
sbb
into
shlb
pushf
shlb
mov
pushf
sub
xchg
aam
xor
arpl
push
push
cmp
or
add
adc
or
pop
insl
push
xor
call
outsl
inc
inc
repnz
out
mov
push
or
jecxz
adc
test
mov
or
insb
add
test
data16
cmpsl
fcoms
add
mov
in
lods
js
push
test
aam
mov
test
addr16
cmpl
jnp
je
out
xchg
push
divl
mov
and
xlat
lea
cwtl
xchg
cmc
push
popf
xchg
cmp
pusha
in
lods
aad
jmp
sub
push
fmuls
clc
fcmovnu
jle
and
xchg
mov
push
inc
mov
shll
stos
xchg
add
sbb
loopne
scas
push
jns
adc
icebp
push
push
dec
sbb
arpl
sub
xlat
pop
and
pop
cmp
push
in
popf
int3
shr
fisubs
hlt
sahf
dec
addr16
pop
gs
shll
add
fildll
gs
inc
mov
mov
pop
inc
cwtl
sub
push
cmp
fsubrl
fmul
push
mov
jp
outsl
aam
dec
std
int3
xchg
push
popa
test
out
mov
jl
lret
loope
jno
mov
mov
jo
cwtl
loop
les
dec
out
mov
mov
popl
pop
adc
jmp
xchg
call
jecxz
inc
cmp
inc
xchg
push
loopne
jge
orl
test
dec
jp
aas
add
xor
test
mov
or
cltd
xor
dec
popa
jbe
insl
push
fdiv
jbe
pop
jge
fimull
and
sbb
popf
sub
adc
jb
pop
sbb
mov
shl
push
shlb
jb
mov
cmpl
sarl
cmc
push
xor
mov
lods
xor
andl
jge
jp
std
and
lods
mov
mov
inc
sub
mov
sub
mov
sub
fcomps
inc
enter
pop
loop
jo
mov
jbe
mov
pop
xor
icebp
lods
cltd
mov
xchg
sbb
mov
or
and
cs
or
cmp
lahf
push
pop
add
pop
sbb
or
dec
jp
add
outsb
adc
lea
mov
mov
sbb
sub
scas
hlt
jl
rcll
pop
mov
aam
aas
or
jno
ds
jnp
inc
fwait
cs
push
mov
xchg
mov
loopne
sub
xchg
inc
mov
int3
and
adc
and
dec
adc
add
mov
lret
fwait
arpl
or
inc
icebp
rclb
cmpsl
xor
jl
lods
and
das
jnp
lds
inc
in
in
cmc
shl
lock
mov
inc
andl
jns
mov
aas
in
mov
mov
add
inc
imul
inc
mov
dec
addr16
pusha
sub
pop
out
fidivs
mov
in
push
push
pop
in
add
cmpb
mov
js
xor
dec
add
imul
jg
movsl
sub
pop
pop
mov
out
mov
and
sub
or
jg
push
sub
test
cmp
pop
cwtl
push
xor
pop
inc
adc
ljmp
or
or
stos
push
in
add
sbb
inc
fildll
out
pop
xchg
xchg
sub
jne
mov
js
stc
outsl
cmp
inc
aad
sti
mov
cmc
mov
mov
cmp
xor
sahf
jns
push
push
adc
sub
mov
bound
leave
sub
sahf
inc
push
ss
or
xchg
dec
or
cld
sahf
add
add
das
pop
lods
int
mov
or
jbe
jo
subb
mov
mov
cmc
mov
out
mov
and
cld
xchg
scas
jp
adc
cmpsb
enter
mov
adc
iret
jb
rclb
lock
imul
jbe
insl
mov
pop
jmp
popf
repnz
testl
xchg
xor
add
daa
cmpsl
lret
jmp
mov
call
pusha
jo
sbb
sarb
loope
jge
popa
sbb
hlt
pop
ja
cmp
or
sbb
adc
outsb
dec
cmp
ja
pop
dec
lcall
jne
xchg
hlt
lea
push
les
call
adc
es
outsb
repz
lret
and
aam
shrb
pusha
sbb
mov
enter
xor
jns
fadd
dec
jge
icebp
dec
add
jle
cld
push
xchg
xchg
mov
stos
jp
ret
cmp
cld
pop
xchg
and
dec
cli
sbb
in
sbb
lret
sub
int3
cmpl
lret
or
outsb
xlat
cmpb
inc
pop
mov
popa
push
xor
push
mov
pop
sub
dec
aad
sub
and
out
jp
mov
dec
es
mov
sarb
out
pop
cmp
mov
xor
and
add
loop
shlb
push
or
cmp
mov
stc
pop
push
and
hlt
insl
rol
dec
fisttps
pop
push
mov
rolb
cs
jp
iret
xor
invd
adc
aaa
hlt
jo
fmuls
jg
push
mov
mov
push
dec
ss
xchg
inc
shll
jne
pop
push
outsl
and
clc
xchg
mov
mov
test
ss
imul
out
int
test
xor
inc
mov
or
icebp
inc
mov
fistl
inc
mov
dec
or
movsl
sbb
psubusw
cld
mov
mov
push
pusha
sub
jg
ffreep
lea
mov
stos
or
jbe
adcl
mov
pop
aas
iret
insl
fbstp
adcb
mov
mov
xor
addb
cmp
int3
pop
xchg
mov
shr
xor
xchg
push
aaa
jecxz
sub
out
loope
inc
sbb
fdivs
test
cmp
mov
pop
and
or
jp
aam
lcall
das
movsb
fsincos
ljmp
xchg
mov
dec
popa
fldenv
mov
sub
push
jmp
pusha
sub
mov
hlt
js
jle
xchg
sub
sub
push
mov
lret
in
or
sbb
cmp
xchg
scas
sbb
mov
pop
push
xchg
xlat
adc
je
ret
loopne
pop
mov
ja
push
cmpsb
rcr
adc
repnz
loope
mov
imul
lcall
fists
rcrb
in
sbb
jns
mov
and
add
xlat
sahf
push
jnp
mov
add
popf
xchg
mov
pop
push
test
mov
pop
dec
jl
fcoml
mov
insb
out
jmp
mov
scas
or
arpl
xchg
add
loopne
jp
adc
add
inc
scas
aam
lods
iret
pop
dec
add
mov
sub
insb
sar
xor
fs
adc
inc
inc
or
lods
or
jno
jl
lahf
scas
sub
repnz
lret
inc
inc
icebp
xorl
mov
jo
pusha
sub
in
ret
dec
icebp
add
inc
ret
mov
nop
test
cli
adc
inc
je
lret
rcr
xchg
cs
call
mov
ds
add
cmp
or
pop
lret
lods
inc
std
mov
mov
fbld
cmp
test
mov
sti
cmc
and
and
lahf
mov
mov
leave
jle
popa
inc
into
jp
cmp
mov
pop
or
repz
xchg
rorl
movsb
lds
es
fdivrs
jne
inc
out
add
jl
mov
and
adc
test
add
mov
or
fabs
test
lods
fdivrl
xchg
inc
divl
daa
mov
dec
lods
adc
popf
cmpsb
addr16
ja
pop
push
lret
xor
add
iret
mov
pop
pop
dec
sub
and
std
mov
jb
sbb
enter
xlat
sahf
mov
or
lret
inc
repnz
leave
fdivs
popa
xlat
popf
cmp
cltd
pop
lods
inc
fcompl
xchg
and
xor
mov
dec
test
or
sub
sbb
jle
jbe
or
xlat
xchg
in
dec
in
xor
dec
or
repnz
jle
adc
mov
pop
ret
dec
cltd
inc
lods
test
mov
add
sbb
sbb
movsb
mov
fwait
mov
outsl
mov
mov
push
push
pop
add
jmp
jnp
jb
jns
daa
push
xchg
call
mov
orb
push
jp
push
mov
insb
mov
push
xchg
mov
out
mov
pop
outsl
hlt
divb
out
shlb
xchg
cld
pop
nop
xor
nop
out
mov
mov
pop
xchg
or
pmuludq
jae
test
fwait
push
sub
fstl
mov
jnp
xchg
shll
jp
adc
sub
dec
adc
lock
filds
jnp
sbb
loopne
pop
adcl
and
testb
mov
jb
repnz
pop
js
cld
aas
lret
aas
mov
sub
pop
adc
xor
and
mov
sub
add
test
cwtl
pusha
push
pop
mov
add
jne
jnp
icebp
sub
movsb
mov
sbb
les
sbb
cwtl
cld
stos
sbb
inc
mov
rcll
nop
adc
jne
clc
lcall
jle
or
xchg
sub
int
lret
bound
sub
mov
and
cmpsl
or
sbb
pop
std
xor
add
les
jns
mov
ss
test
lods
decl
shrl
cld
adc
xchg
into
lcall
jl
shrb
fildll
jge
jecxz
pop
push
jp
insl
jecxz
ja
sbb
xchg
dec
adc
mov
into
xchg
mov
pop
mov
lret
scas
add
clc
xor
cmp
inc
adc
loope
sub
jge
sbb
or
aaa
xchg
jl
pop
adc
data16
cmpsb
add
adc
sub
mov
sbb
daa
aaa
repnz
mov
outsl
xchg
pop
es
test
mov
idiv
fnstenv
jmp
outsb
jp
jo
imul
sbb
sbb
or
idiv
jp
mov
pop
or
aam
cs
mov
aas
jns,pn
iret
jl
outsl
mov
test
jge
push
lahf
neg
or
or
sbb
outsl
mov
mov
test
in
push
and
adc
pop
in
jno
xor
mov
outsl
mov
jnp
xchg
in
enter
pop
lds
pushf
out
sub
sub
push
jmp
push
inc
insb
dec
pop
pushf
xchg
jae
jno
and
xchg
inc
cwtl
cld
ficoml
or
subps
stos
mov
int3
xor
lret
mov
mov
gs
imul
push
sub
pushf
push
jb
sub
sub
es
mov
popf
int3
lcall
jnp
push
xor
mov
jmp
jnp
loop
aaa
imul
shrl
int
mov
clc
xlat
jmp
rolb
jmp
mov
cmp
cwtl
ljmp
lahf
loope,pt
pop
or
inc
fimull
mov
push
xor
enter
add
call
fdivl
aad
or
out
dec
push
xor
mov
cmp
add
add
pop
add
call
or
inc
or
mov
pushf
pop
push
xor
addr16
in
cwtl
cmpsl
add
ds
les
add
xor
jle
mov
add
mov
rorl
and
cmp
push
jge
iret
add
mov
push
movsl
mov
jg
add
les
and
test
xlat
mov
scas
stc
inc
fwait
push
add
lods
bnd
jg
mov
adc
mov
dec
vpsubq
fimuls
jp
popa
xchg
mov
lods
addr16
insb
shll
dec
std
test
mov
inc
shl
incb
push
test
sub
cmc
inc
insl
xchg
sbb
jb
xchg
inc
movsb
push
cwtl
jg
xchg
cmpsb
jnp
jl
jnp,pt
push
fmull
out
mov
test
test
mov
push
and
jnp
dec
movb
in
rclb
jge
addr16
jnp
cwtl
sub
fnsave
pop
cmp
jnp
sbb
sbb
sub
mov
shl
and
test
or
or
ja
mov
aad
repnz
es
bound
xchg
xlat
adc
aad
mov
and
sub
adc
jg
gs
sbb
pop
mov
cltd
pop
pop
push
data16
xor
in
aaa
in
jnp,pn
negb
call
sub
inc
call
or
cmp
xor
cmpsl
mov
filds
fisttpl
sbb
push
mov
xchg
cmp
and
ret
adc
sbb
mov
pusha
adc
xchg
sbb
xchg
adc
pop
out
sub
jns
lahf
shll
test
cmp
ds
scas
stos
aam
dec
push
inc
mov
jmp
sub
jno
dec
push
inc
xchg
mov
sti
aam
jmp
aas
stc
adc
jecxz
mov
adcl
fldl2e
in
call
push
sbb
pop
dec
das
add
out
test
std
lods
test
sub
sub
sarb
mov
pop
dec
out
pusha
and
movsl
mov
pop
popf
mov
mov
xorb
pusha
sub
mov
mov
and
or
shl
cld
mov
scas
push
mov
adc
sahf
gs
call
fnsave
aas
aam
lea
adc
jl
sbb
push
jne
movsb
mov
adc
ds
or
inc
sti
adc
mov
pop
xor
das
inc
dec
loopne
or
outsb
sub
scas
xchg
dec
xchg
mov
mov
dec
cltd
repz
xor
loope
aam
mulb
ja
dec
aad
sbb
sub
adc
xor
xchg
test
xor
icebp
or
add
add
jae
aas
orl
xor
xchg
fisttpl
sub
jl
sub
into
jg
jmp
inc
arpl
loopne
cmpsb
lahf
mov
xor
push
aad
test
add
dec
and
xor
mov
inc
hlt
cwtl
pop
pusha
pop
mov
ljmp
xlat
sub
rcl
iret
dec
dec
das
out
orl
pop
cmp
xlat
sbb
stos
xor
cmp
popa
in
pop
gs
pop
lock
mov
aaa
pop
out
fldenv
repnz
sbb
pop
jmp
pushf
xor
dec
add
hlt
insl
jmp
jb
add
jle
jl
cwtl
jo
inc
mov
hlt
movsl
jnp
aam
in
stos
std
sub
inc
aam
lea
mov
pushf
dec
sub
addr16
shr
inc
pop
mov
rolb
movsl
xorb
push
lds
sbb
aaa
outsb
sub
xor
mul
data16
mov
loop
dec
ja
clc
cwtl
cwtl
mov
inc
stos
jmp
inc
outsb
sahf
or
adc
cmpsb
mov
and
pop
lock
insl
lret
imul
das
jne
in
ljmp
imul
in
and
xor
jg
push
lret
int3
jno
cmc
lock
jle
lcall
jno
xor
push
enter
gs
inc
pop
inc
sbb
jmp
mov
pusha
pop
scas
dec
push
scas
sbb
mov
mov
imul
push
addl
mov
popa
icebp
repnz
adc
gs
cld
lahf
jecxz
shr
or
inc
xor
xor
stos
in
pop
das
xor
mov
int
sub
lahf
loope
inc
lods
add
xchg
push
adc
mov
shlb
mov
and
sbb
xchg
or
xor
orb
adc
test
ret
add
bound
add
lock
xor
inc
mov
or
repz
das
push
dec
pop
out
int
arpl
fs
out
fcompl
jbe
inc
pushf
pop
mov
mov
xchg
in
sbb
sub
rcr
push
push
unpcklps
pop
or
insb
adc
inc
sub
mov
sub
mov
xor
sbb
sub
lahf
lods
xchg
insl
mov
popa
mov
add
inc
mov
mov
xchg
push
out
add
bound
adc
in
rcr
cmp
sub
mov
add
data16
imul
push
mov
mov
sti
push
aam
mov
push
test
pop
adc
adcb
cmp
fs
pop
jns
imull
push
and
mov
hlt
ljmp
shrb
mov
xchg
fists
inc
fmull
dec
pop
cs
sub
mov
cmpsb
pushf
leave
addr16
add
stos
mov
mov
dec
imul
out
pop
iret
ss
fbld
adc
mov
jl
flds
int
dec
fnsave
and
cmpsb
in
xor
lcall
or
adc
loopne
nop
mov
mov
push
ljmp
push
jge
ja
jb
adc
xchg
lock
dec
sahf
out
lods
and
or
cmpsb
inc
adc
xlat
aas
std
lock
dec
rcll
lahf
xchg
icebp
xchg
jbe
cld
jne
movsb
dec
lea
in
in
fcmovne
mov
dec
pop
lret
test
mov
rcl
divb
pushf
in
or
fwait
add
rorl
loopne
add
fmuls
jp
jle
in
leave
inc
or
mov
pop
xor
mov
lock
test
inc
push
lahf
ret
push
cltd
adc
pop
lret
sbb
mov
rcrl
cmpsb
or
cwtl
outsl
push
xlat
call
sub
sbb
or
sbb
add
lods
and
mov
icebp
dec
outsb
repz
inc
jmp
repnz
aaa
xchg
iret
iret
push
add
shlb
sti
enter
mov
add
test
imul
mov
aam
mov
movsb
nop
rclb
xor
bound
add
jbe
push
movsl
push
inc
push
shll
movsl
mov
cwtl
jbe
in
xchg
les
test
out
cmp
push
sbbl
xor
xor
jae
and
adc
icebp
mov
xchg
fistps
jecxz
ljmp
fisttps
lds
xchg
dec
lret
aam
push
inc
adc
shl
cmp
mov
out
call
xor
in
daa
fadd
nop
lock
pop
mov
lret
and
xchg
ds
das
aaa
mov
pop
push
test
les
mov
jb
pop
fstpl
sbb
das
sbb
in
bound
cmp
cltd
fldl
aad
and
les
xchg
adc
scas
jge
fsubs
jno
mov
js
jle
jmp
rclb
and
sar
lcall
test
mov
cli
push
in
les
pop
mov
and
pusha
fidivrs
dec
mov
lods
push
xor
ds
enter
jno
scas
mov
push
and
mov
xchg
out
add
out
dec
cli
sub
xor
xor
xor
notl
or
pop
loope
push
call
inc
mov
lods
enter
dec
xchg
popl
sub
sbb
add
or
pusha
jge
cmp
push
push
cmpsl
or
fidivs
fnstcw
aad
in
in
sub
imul
mov
das
add
popa
cmpsb
jecxz
fstps
es
cs
jnp
lods
or
add
xor
sbb
mov
inc
aam
jmp
mov
les
sub
movsl
cmp
mov
or
push
ret
outsl
mov
dec
dec
mov
adc
cmpsb
lods
xchg
ds
insl
call
into
mov
lret
aaa
dec
insb
mov
adc
and
jo
ret
or
test
or
addl
cmp
loope
xchg
in
inc
sub
mov
or
shll
or
xchg
int
fs
xchg
xchg
jle
inc
push
mov
sbb
jge
push
test
into
xor
jle
rcll
jecxz
cld
mov
out
xor
dec
adc
insb
mov
dec
inc
xchg
or
loopne
ret
mov
shlb
int3
sbb
bound
xor
mov
mov
dec
int3
cmp
dec
cmp
mov
nop
push
pop
mov
fmulp
jg
jge
xchg
les
mov
and
fdivrs
add
fdivrl
jnp
insb
orb
add
push
je
sub
or
cmpsl
mov
sbb
das
in
and
xchg
sub
sbb
fldenv
or
mov
jge
notl
dec
pushf
dec
mov
stc
test
mov
das
pop
jno
xor
stc
push
fwait
dec
out
jp
mov
jmp
adc
adc
mov
notl
pop
fdivrp
add
ljmp
leave
mov
nop
shl
inc
adc
mov
pop
mov
rcll
fwait
fwait
es
aaa
dec
sub
lods
mov
mov
fsubrl
das
hlt
lret
hlt
cli
inc
inc
add
lret
and
daa
lods
shll
or
int
addr16
xchg
xchg
and
and
jo
inc
cltd
xchg
xor
xchg
pusha
cmp
mov
sbb
cmc
adc
inc
shl
pop
mov
jbe
mov
dec
inc
or
ficoml
mov
test
in
xchg
ja
ljmp
or
loop
pusha
test
clc
pop
pop
jmp
int
jns
minps
jae
and
sub
xlat
aam
sti
or
or
xchg
jg
out
popa
iret
mov
lds
pusha
sbbl
das
jno
mull
popa
cmp
addr16
and
sti
nop
shll
push
pop
jp
mov
shll
dec
clc
je
pop
adc
call
loopne
ficoml
enter
sbb
mov
cli
test
stc
fwait
pop
xchg
out
hlt
jecxz
add
mov
and
jecxz
andb
lds
mov
call
adc
out
adc
repz
xchg
in
add
mov
mov
jg
fisttpll
cwtl
mov
push
push
imul
mov
insl
movsl
jnp
out
mov
int
out
and
jp
int3
xor
mov
aam
test
int3
pop
repnz
sub
jmp
ds
pop
dec
xchg
add
pop
add
sbb
inc
pop
addr16
xchg
data16
cs
and
test
enter
and
dec
cli
xor
dec
lret
mov
sub
jl
int
pop
xor
mov
jmp
xchg
jno
xor
stc
xor
pushf
mov
sti
xchg
faddl
in
mov
add
fmull
stos
mov
mov
inc
movsb
add
inc
cmpsb
adc
jo
jecxz
mov
xchg
jmp
in
hlt
lods
jmp
insl
jbe
mov
int
dec
xchg
dec
movsb
dec
mov
cmp
push
nop
mov
push
aas
inc
add
popf
lret
mov
xchg
js
mov
rorl
jp
repz
xlat
jns
daa
inc
aad
push
fs
jnp
sbb
das
mov
outsl
rcl
jno
push
pop
inc
and
repz
dec
imul
popf
into
aas
stos
sub
mov
adc
xchg
jae
pop
adc
push
iret
cmp
cmpl
sub
and
sub
incl
mov
pusha
inc
and
stos
jno
add
mov
push
cwtl
hlt
add
call
and
push
xchg
mov
rol
add
popa
mov
jns
cwtl
xor
or
jo
dec
sbb
mov
jmp
pop
mov
sub
sbb
add
push
in
into
out
dec
jbe
insl
xchg
sub
inc
pop
ljmp
or
fisubl
hlt
mov
jae
and
ds
ret
iret
fs
mov
scas
mov
enter
lcall
int3
pop
scas
sub
xchg
cmpsl
inc
imul
vmovmskpd
lds
mov
cmp
add
inc
adc
js
out
cld
fsubp
lcall
mov
cmp
mov
inc
sbb
icebp
leave
cwtl
add
jp
dec
dec
push
cltd
hlt
jno
hlt
pop
push
cmp
daa
adc
fildl
adc
pop
fbld
jb
xchg
inc
cmc
test
fucomi
jne
xor
into
es
xor
adcl
inc
stos
fucomip
push
ret
outsl
mov
sub
jb
dec
mov
mov
stc
pop
sub
xor
adc
jns
push
adc
imul
inc
out
push
movsb
sbb
js
fdivr
cmpsl
add
or
xor
jb
cltd
ss
lods
or
push
in
push
fstp
fstpt
jnp
push
or
idivb
js
sbb
xlat
add
and
rcrb
adc
insb
fistl
sub
adc
sub
dec
mov
shl
add
cli
repz
jge
inc
test
call
scas
cli
xchg
stos
pusha
cmc
dec
pop
add
xor
lods
test
out
lods
pop
outsb
dec
push
lods
or
lret
xor
in
add
jb
pushf
push
mov
sbb
pop
mov
sub
xchg
arpl
lds
stos
inc
jmp
pushl
cld
ficompl
bound
stos
pushf
mov
inc
mov
xchg
out
pop
dec
inc
sbb
loop
loope
lcall
fldl
mov
jnp
dec
dec
pop
loopne
test
sbb
jmp
outsl
xchg
add
imul
lock
shr
sbb
xchg
or
cmpsl
lret
es
xlat
inc
mov
imul
and
add
outsl
pop
inc
inc
pop
outsb
cmp
add
adc
xor
fs
jno
push
xor
mov
lret
mov
or
mov
ret
jecxz
ljmp
dec
xlat
cmp
jbe
es
scas
pop
mov
movsb
std
mov
or
int
xchg
sub
imul
pop
xchg
popa
add
clc
dec
sub
mov
mov
je
pop
lcall
mov
sbb
xor
push
fildl
add
sbb
fisttps
push
xchg
cld
lds
ja
mov
mov
fistl
dec
adc
out
lahf
or
insl
adc
scas
icebp
or
imul
fistps
popa
pop
aam
addr16
and
cmp
fcoml
pop
mov
imul
sar
add
mov
fdivrp
sbb
and
push
stc
jmp
jbe
mov
pop
gs
and
sub
xor
mov
les
imul
jo
arpl
fldl
addr16
push
add
testb
sub
cld
adc
cmp
or
mov
test
cwtl
sahf
xchg
adc
jno
mov
rcl
test
add
pop
pop
xor
pop
rcrb
mov
pushf
jns
lods
jg
ret
orb
and
pop
cli
shl
push
std
movsb
sahf
out
pop
jmp
int3
pop
das
jecxz
int
xor
mov
jns
loope,pt
imul
stos
insl
ret
inc
mov
xchg
popa
pop
mov
inc
mov
popf
sbb
cmp
lods
in
ds
fucom
loop
lret
pop
stos
in
aam
and
mov
push
cmp
push
dec
xchg
cmp
mov
lds
inc
inc
add
hlt
xchg
push
mov
jmp
clc
pop
addb
cs
jg
cmp
mov
in
pop
xchg
mov
add
outsl
mov
mov
mov
ljmp
pop
adc
xadd
arpl
idivl
xor
shrb
adc
lret
cwtl
sbb
jnp
jg
fldl
test
sbb
mov
jae
repnz
jmp
or
and
xor
adc
out
fs
pop
fadds
pop
push
adc
jo
mov
mov
fildl
sarb
decl
xor
and
xor
jg
jb
mov
xor
lret
das
mov
jle
mov
cld
xor
push
incb
sub
popf
js
mov
dec
rcr
mov
add
add
push
push
es
imul
mov
dec
popf
push
scas
subb
out
idivb
cli
les
imul
scas
dec
sbb
sub
cltd
inc
in
xor
loop
lea
gs
repnz
xchg
ljmp
into
mov
adc
add
pop
aam
adc
xchg
xor
sbb
pop
mov
mov
movsb
fisubs
mov
mov
addl
fdivrs
cmp
insl
add
pop
xor
imul
lret
js
xchg
loope
hlt
lds
pop
popa
cmp
icebp
adc
add
fiadds
fwait
cmp
insl
mov
fidivs
je
push
sti
xchg
lahf
std
iret
in
adc
and
add
mov
sbb
pop
fistps
lret
xchg
call
dec
cs
add
lods
mov
cmpsl
mov
int
cwtl
xchg
cltd
insl
add
fnstsw
pop
ror
mov
testl
or
pop
leave
ret
add
jle
pop
lds
mov
inc
sbb
push
add
dec
jne
jle
std
and
aas
lock
mov
lahf
mov
sub
js
cmp
and
sti
inc
movsb
mov
xchg
je
fldl
mov
inc
aas
and
add
xor
pop
bound
xchg
scas
das
hlt
gs
lret
jl
or
ljmp
outsl
das
lods
fldcw
push
test
fimuls
inc
movsb
push
xchg
cmc
mov
adc
loope
stos
inc
mov
adc
fwait
rolb
lcall
fwait
std
lock
xor
dec
sub
int
inc
jp
xchg
loopne
sbb
pop
push
push
and
or
pusha
movsl
cmp
lret
test
sub
shll
subl
loopne
cmp
mov
loop
bound
bound
xchg
mov
jecxz
into
into
push
fs
mov
cmpsb
dec
movsb
mov
push
imul
jnp
loopne
sub
mov
cmpsl
jae
push
hlt
mov
jb,pn
mov
nop
es
into
and
jb
and
pop
adc
in
pop
out
daa
scas
lock
pop
xchg
and
xchg
add
dec
outsl
ja
mov
repnz
dec
andl
dec
popa
notl
adc
in
or
cld
cmp
or
jns
insl
jp
xchg
fsubrl
out
and
mov
idivb
add
lock
rol
inc
aas
mov
cmp
pushf
dec
call
push
scas
inc
mov
mov
std
cld
and
sbb
nop
mov
mov
sbb
cli
add
sub
xor
movsb
lock
gs
mov
cmp
lods
subb
cmp
sub
ret
pop
fsubl
rcll
push
pop
int
jmp
dec
test
cli
xor
mov
adc
mov
push
xlat
je
pusha
mov
jmp
in
notb
mov
shrb
movsl
ja
mov
insl
inc
out
jp
mov
int
fs
negb
xchg
cmpsl
lods
out
push
xor
push
ficompl
dec
push
mov
xchg
les
leave
sbb
xchg
bound
add
push
es
popa
push
adc
gs
mov
inc
jo
fldl
xchg
loop
stos
inc
pop
jae
dec
imul
scas
sbb
ret
mov
les
jg
mov
push
mov
pop
in
shl
cli
sub
mov
inc
shlb
mov
inc
mov
jmp
clc
dec
or
inc
fldcw
mov
imul
push
bound
xor
sbb
jo
mov
adc
cmp
push
sub
cmp
in
stos
cmpsb
dec
idivl
out
adc
mov
cli
push
add
hlt
call
pop
gs
popa
mov
leave
or
imul
mov
sub
sahf
push
push
sbb
jge
push
loope
sub
aas
aam
xchg
sti
pop
mov
movsl
mov
in
inc
lods
adc
sbb
xchg
xlat
xlat
rclb
push
cli
push
mov
sub
stc
pushf
bnd
repnz
xchg
mov
out
into
dec
inc
sub
loopne
mov
inc
inc
rolb
and
es
cmc
adc
rol
mov
push
inc
sti
test
out
mov
mulb
rcr
popa
loopne
data16
outsl
std
fwait
sub
pop
adcl
orl
scas
cmp
jl
cmp
js
out
mov
aas
sub
xor
ss
lock
nop
mov
xchg
aam
inc
and
or
xchg
jmp
out
lods
cmp
xchg
fstps
adc
clc
adc
sub
push
or
jb
arpl
add
repnz
jbe
or
cld
sbb
push
fldt
pop
sbb
fidivs
xor
push
mov
and
adc
xor
test
and
mov
push
dec
mov
popf
outsb
pop
push
xor
xor
jne
adc
adc
popf
jg
fldenv
inc
out
pop
lods
int3
sub
imul
flds
and
jge
mov
mov
arpl
adc
mov
mov
sub
add
rol
scas
shr
sub
or
xor
push
sbbl
jp
xor
int3
dec
add
inc
outsb
adc
mov
jecxz
jmp
jle
push
mov
dec
mov
sbb
test
dec
pop
enter
fsubs
nop
inc
in
xchg
clc
fisttpll
pop
cmc
popl
repnz
push
fisttpll
imul
in
das
jle
inc
loope
mov
add
out
xchg
xlat
inc
cltd
fwait
adc
repnz
lret
test
jp
jg
test
mov
out
mov
dec
pop
push
jnp
fadds
mov
std
inc
je
add
addr16
cmc
in
outsl
cwtl
ds
fdivrs
inc
mov
scas
jno
lods
xorl
push
xchg
iret
rcll
out
lock
mov
mov
dec
loope
inc
sbb
stc
popa
lock
test
pop
xor
enter
xor
add
jecxz
pop
pusha
mov
adc
fnstsw
mov
outsb
jmp
jns
or
cs
shlb
cmp
mov
lods
repnz
and
lcall
pop
cmc
repz
sbb
and
mov
pop
mov
les
push
loop
mov
push
rcll
stos
xchg
loopne
push
ja
add
inc
inc
xchg
add
dec
push
aaa
gs
fisttpll
push
inc
cmp
ds
push
pop
aas
dec
xor
into
cmp
sub
cli
mov
jb
lods
add
or
scas
inc
add
movsb
pusha
jne
out
xor
mov
or
imul
pop
jle
cwtl
inc
push
mov
orb
test
dec
loopne
cmp
cwtl
loop
xchg
and
arpl
mov
cmp
outsb
cmp
out
in
sub
in
and
sbb
mov
fbld
out
aas
insb
daa
fidivs
push
stc
ret
pop
inc
pusha
fst
xor
lds
es
popa
mov
stos
js
repnz
rorl
rorl
leave
dec
fstpt
dec
js
in
lahf
jns
inc
in
out
lds
sub
je
dec
lods
cli
rcrl
cli
std
addb
in
mov
pop
push
cmp
pop
lock
leave
sbb
in
adc
adc
cmpsb
xchg
stc
push
mov
adc
cmp
xlat
inc
insl
imul
or
int
xor
movsb
pop
stos
dec
pop
iret
nop
xlat
add
mov
push
push
sub
lds
test
or
leave
rcl
jae
shlb
pusha
cltd
ljmp
mov
jno
dec
je
inc
sub
push
xchg
sahf
jb
push
xor
mov
aaa
icebp
test
test
jno
in
xchg
sub
shr
icebp
inc
imul
cld
ss
adc
add
lret
icebp
nop
repnz
lock
arpl
or
mov
push
jp
push
in
adc
jg
xor
push
sti
lds
pop
aas
sub
mov
mov
mov
negb
repz
testb
mov
daa
mov
ret
call
rorl
pop
sbb
cmpb
dec
xchg
jg
cwtl
pop
out
stos
and
push
sub
mov
call
stos
sti
pop
cmp
mov
aam
jae
psllw
movsl
add
adcl
adc
jl
or
bnd
xchg
or
ljmp
cmp
adcl
lcall
into
into
in
adc
mov
sub
add
dec
xchg
and
sbb
sub
cmc
and
aam
adc
xor
int
clc
dec
ja
gs
push
nop
ret
cmp
stos
inc
pop
xor
fsubs
mov
fadds
pop
inc
stc
push
imul
sahf
and
mov
push
pop
ficoms
sbb
and
pop
pop
pop
subl
dec
out
in
subl
mov
dec
or
add
or
or
push
mov
push
add
mov
cltd
xchg
cld
adc
sub
gs
adc
mov
jne
cmp
mov
cmp
into
sbb
lret
in
and
insl
mov
and
ffree
outsl
mov
jmp
sbb
push
mov
xor
dec
jae
dec
lcall
push
sbb
lret
jecxz
mov
mov
inc
jg
out
bound
nop
lahf
xor
adc
mov
sbb
in
test
scas
cmpsl
inc
inc
mov
and
bound
ljmp
mov
pusha
push
jbe
sti
mov
clc
xchg
pop
mov
jmp
pop
xor
pop
gs
add
or
cmpsb
xor
mov
lahf
shrb
cli
testb
pop
fmul
aad
rcrb
inc
es
mov
or
and
outsl
or
push
stos
shll
clc
xchg
inc
pusha
shrb
daa
mov
mov
cmp
fcoms
push
mov
imul
into
xor
sbb
cmp
jecxz
in
aas
sub
insb
lcall
in
int3
fisubrs
push
fcom
in
cmp
shlb
cli
dec
das
sbb
or
xchg
sub
or
mov
int3
cmpl
jecxz
xchg
arpl
lea
jg
ljmp
iret
sahf
and
jmp
addb
orl
inc
decl
mov
xor
dec
xchg
mov
aas
sub
mov
lcall
inc
add
movsl
and
iret
xchg
add
xchg
stc
xlat
jp
js
test
add
inc
jmp
addb
call
jae
inc
outsb
in
push
lea
jno
xlat
imul
in
mov
nop
mov
mov
sbb
fucomip
std
lret
gs
icebp
lret
leave
bound
adc
push
add
andb
cmp
mov
enter
sbb
xchg
inc
call
test
and
mov
xchg
sbb
aam
or
daa
mov
fisttpl
add
jo
cmc
stos
pop
mov
push
movsb
jne
pop
jl
mov
pushf
mov
pmulhuw
repnz
mov
mov
and
cs
push
inc
mov
pop
push
xchg
sbb
cmp
rcll
iret
mov
mov
test
or
repnz
dec
enter
sbb
data16
mov
outsl
inc
enter
dec
das
sub
test
cs
jmp
push
fwait
add
cmp
xorb
mov
jl
xchg
xchg
inc
add
fnstsw
cmpl
push
push
cmp
xchg
pop
xchg
sbb
add
decb
mov
popf
add
cmp
ja
xor
and
add
ret
inc
sub
enter
jno
xchg
lret
mov
popa
sti
aad
mov
dec
lea
out
repnz
push
ja
sub
es
sbb
insb
and
call
or
inc
sarl
push
jb
jg
push
paddusb
xchg
into
popa
and
push
jae
pop
cltd
movsb
push
push
dec
outsl
pusha
and
or
or
test
mov
xchg
test
or
xchg
cmpb
int
mov
xor
inc
fdivrl
sub
adc
mov
inc
and
fimuls
jo
pop
jnp
dec
or
mov
inc
mov
cmp
shrb
dec
and
and
stos
cvttps2pi
int
test
hlt
mov
iret
test
dec
cmp
lahf
dec
or
jns
mov
lock
test
in
leave
into
sahf
ret
inc
sbb
push
insl
lock
inc
aad
jno
sarl
incl
aas
pop
aas
pop
dec
loope
jp
cmp
xchg
push
mov
popf
or
push
push
ret
push
dec
push
mov
daa
and
or
aas
aaa
mov
jp
jp
pop
jno
jno
es
mov
enter
rcll
lods
data16
jle
fisubrl
add
out
pop
sub
lods
mov
jne
popf
dec
mov
and
xchg
scas
lock
in
adc
jno
dec
pop
or
xchg
cmp
push
scas
push
arpl
cmpsl
pop
push
test
mov
add
fldl
mov
rolb
xor
mov
in
sbb
mul
push
jbe
dec
push
rorb
mov
cmovbe
out
push
sbb
lahf
and
add
pop
pop
inc
sub
fld
xchg
xchg
dec
inc
lods
or
inc
ja
mov
and
jmp
mov
inc
repz
aaa
das
in
mov
xlat
or
nop
inc
data16
inc
or
pop
mov
sti
pop
in
nop
std
fsts
stos
cli
xor
mov
in
fcmovne
pusha
or
stos
cmp
mov
sub
cld
leave
fstps
xchg
outsb
pusha
lret
sub
pop
mov
mov
cmp
sbb
jns
pop
outsl
jns
cmp
sbb
test
pushf
lods
push
inc
aad
jo
mov
sub
std
das
push
sbb
mov
and
andb
test
xchg
mov
aas
dec
insb
and
inc
adc
adc
xorl
and
scas
test
jp
gs
jnp
pop
sub
adc
mov
inc
mov
xchg
inc
rcrb
push
pop
mov
inc
mov
leave
scas
dec
inc
das
inc
jne
inc
and
push
inc
or
xor
in
adc
sbb
es
stos
or
pop
outsb
mov
jmp
jmp
sti
push
nop
outsl
add
and
pop
dec
out
ret
int
mov
out
pop
sub
repnz
cltd
mov
xchg
daa
arpl
adc
adc
aas
mov
out
dec
jle
pop
dec
std
jg
xor
out
clc
aam
mov
lock
mov
jg
mov
mov
test
fs
mov
push
xor
sbb
fmulp
lahf
mov
iret
mov
push
add
sub
imul
adc
inc
lea
into
or
push
sbb
push
xor
add
dec
pop
dec
shll
jmp
add
push
mov
ret
scas
pop
jmp
stos
fdivr
call
ss
xor
cmp
into
mov
fs
pop
push
aaa
scas
add
sub
push
adc
add
pop
sbb
dec
stc
jecxz
cmc
xchg
mov
ret
insl
pop
insl
mov
test
mov
pop
mov
lcall
ljmp
dec
sub
leave
pop
icebp
cmc
loop
test
scas
lret
sahf
outsl
cmp
leave
inc
int
inc
push
lahf
arpl
rclb
sub
sbb
loopne
dec
adc
and
adc
mov
push
jl
out
dec
ds
mov
cmpsb
mov
xchg
push
divl
shl
hlt
inc
sbb
add
mov
mov
mov
mov
outsl
in
mov
addr16
jmp
adc
cmp
or
aaa
cmpsb
lods
dec
inc
cltd
cmp
xchg
int3
mov
xchg
in
push
fs
in
sub
mov
dec
ficomps
clc
ljmp
into
stos
gs
xchg
rcr
fs
rcr
cmp
test
push
push
pop
mov
push
cmp
std
push
ficompl
jp
mov
xchg
jge
aam
add
and
adc
nop
push
mov
ljmpw
mov
xor
fistpl
add
xor
cmp
jecxz
insl
hlt
gs
mov
or
rcl
jbe
pop
ja
fwait
jns
insb
test
in
sub
dec
jle
sbb
xchg
or
jo
adc
jnp
pop
dec
scas
push
mov
adc
xor
mov
adc
out
rcll
adcb
cmc
xchg
jp
xor
into
inc
xor
adc
cmovno
call
in
je
bnd
repnz
fwait
push
or
aas
rolb
fisttpl
sbb
fs
insb
dec
das
dec
rorl
lock
or
test
or
mov
jl
lds
xor
cmp
icebp
push
js
mov
mov
pop
jo
and
add
xor
test
aaa
nop
fbstp
dec
jge
cmpsb
test
lahf
test
and
dec
mov
jb
clc
or
pop
pop
out
jo
je
popl
sub
push
nop
loopne
enter
mov
inc
adcl
xor
movsl
mov
in
mov
aad
inc
push
adc
push
jne
test
mov
fwait
je
mov
or
movsl
ret
mov
sub
mov
adc
lahf
cwtl
mov
jge
adc
arpl
push
or
jne
pop
xchg
cmpl
cmpsl
xchg
mov
xchg
stos
lock
pop
loope
int
add
sahf
jg
jge
ficoml
push
pop
test
rcrl
leave
mov
jg
mov
out
push
dec
lock
sub
in
and
mov
add
sbb
inc
out
pop
aam
scas
dec
daa
sbb
jbe,pn
cmpsb
dec
scas
mov
out
roll
xchg
sbb
xchg
sub
pop
mov
lret
out
push
sub
mov
dec
sbb
xor
imul
ret
out
repnz
mov
pop
pop
gs
iret
or
cmp
mov
fldenv
les
or
fcmovnbe
aas
loope
sahf
mov
lds
mov
subl
add
push
shrl
sub
or
jnp
cmp
sbb
mov
lahf
sub
or
sbb
cmp
leave
push
mov
cmp
inc
loop
xchg
lcall
imul
xor
loopne
daa
movsl
dec
lret
lret
outsl
jbe
xor
dec
lcall
sar
pop
pop
sbbb
adc
mov
wbinvd
jo
mov
mov
out
push
and
lea
mov
loop
mov
adcl
fdivs
sbb
stos
out
lods
push
add
lds
push
and
bound
mov
nop
push
dec
and
xor
cltd
into
push
jne
and
jmp
mov
dec
mov
pop
out
jle
fucomp
sub
jl
jge
mov
mov
sbb
sbb
xor
mov
push
inc
add
push
pop
pop
pop
mov
mul
in
mov
push
sarl
ret
scas
cmpsl
inc
or
movsb
sub
or
in
scas
clc
shl
addr16
jp
and
ret
mov
and
xchg
mov
push
nop
rcrb
stos
fwait
ret
gs
cmpb
mov
sbb
xchg
pop
lock
jle
push
cs
das
mov
cld
sub
dec
and
into
out
xor
or
vmovntps
push
mov
or
adc
fs
mov
mov
int
dec
pop
mov
or
loop
hlt
mov
cmp
addb
loop
out
rorb
xchg
inc
jo
push
push
push
in
popa
adcl
pop
rcll
rcrl
shlb
sbb
mov
xor
pop
fisttpll
loop
cwtl
popf
cmp
add
pushf
sbb
jb
out
mov
jne
loope
inc
fucompp
fstl
add
imul
mov
and
xchg
add
or
js
iret
push
adc
sub
jl
popa
stos
inc
mov
and
sub
cli
popf
dec
repz
out
cltd
out
pop
xor
je
cmp
repnz
andb
iret
sbb
aam
xlat
stos
cmp
shr
setg
loopne
hlt
xchg
gs
movsl
fdivs
jnp
pop
sbb
aam
insl
mov
mov
and
cmp
cmp
adc
mov
mov
adcl
mov
iret
ja
je
sbb
lahf
daa
dec
cltd
mov
and
repnz
lock
inc
mov
cmp
mov
in
jnp
inc
push
imul
lea
add
xchg
outsb
mov
sbb
cmpsb
insb
fwait
cs
mov
xor
and
mov
jne
imul
call
iret
insb
cmc
lahf
aas
cmpb
dec
mov
cmp
cmp
stos
insb
jne
jecxz
aad
sub
sub
lahf
mov
jae
pushf
mov
scas
xchg
xor
sub
jno
fidivs
mov
rcrl
pushf
mov
inc
lea
int
outsb
stos
sub
out
inc
in
inc
aas
mov
jb
lret
xchg
js
mov
movsb
mov
fistpll
and
in
jge
xchg
push
cltd
adc
movsb
dec
fcompl
repz
push
adc
aad
mov
pop
push
push
sub
mov
stc
mov
sub
inc
cli
mov
imul
xchg
dec
push
decb
mov
dec
enter
or
dec
fistps
stc
jg
sub
lock
leave
outsb
lods
pop
mov
adc
inc
and
cmp
ljmp
cmp
sbb
mov
ljmp
stc
lahf
mov
and
dec
into
insl
aaa
pushf
mov
cmp
mov
mov
pusha
jbe
cld
sbb
lods
pushf
bound
loopne
or
pop
out
fldt
jbe
rcl
push
sbb
or
out
lret
fcoml
mov
cmp
mov
adc
out
add
fstpl
fmulp
hlt
jnp
cli
mov
sbb
pushf
fmull
inc
movsl
fldl
iret
rorb
lock
lds
jge
jbe
push
repz
inc
clc
push
decl
loop
call
inc
sub
jle
int3
xchg
jp
pushf
cmp
cli
push
jno
lods
mov
imul
sbb
enter
icebp
pop
repnz
xchg
fimuls
jp
mov
mov
inc
pop
xor
inc
xchg
dec
xchg
push
or
mov
sbbb
clc
jle
or
jns
or
and
jns
loopne
daa
cmp
out
cmpb
negl
jecxz
cltd
icebp
cmp
jne
shrw
popf
dec
std
stc
test
clc
js
pop
in
mov
jecxz
push
jae
outsb
loop
push
sbb
in
adc
bnd
pop
cmpsb
hlt
stos
int
xchg
in
incb
jns
push
inc
xchg
cmpsl
adc
repnz
ljmp
ret
out
cli
in
and
mov
fiadds
mov
stos
leave
adc
fsubrl
inc
std
aaa
mov
pushf
nop
mov
cmpsl
pop
adc
cwtl
and
nop
test
push
add
xor
jmp
add
out
jb
or
jnp
ds
lea
or
shrl
mov
pop
inc
mov
into
inc
js
xor
pop
xor
push
aam
and
jp
std
jl
mov
cmp
cmp
xor
xchg
test
lcall
jbe
bound
mov
fdiv
aas
outsb
lgs
std
xchg
sub
aad
pop
sbb
mov
jo
rorb
dec
stos
outsb
cld
push
out
jmp
cmc
jno,pn
gs
nop
adc
jl
or
rorl
or
imul
mov
pop
fwait
rorb
xlat
fs
add
push
bound
out
push
daa
cli
stos
or
cmp
lods
xchg
pop
lret
movsb
addr16
nop
fadds
shlb
xor
push
fucomi
dec
shll
jl
push
data16
movsb
stos
cmp
fimuls
push
xchg
xlat
push
xchg
sbb
mov
sub
mov
cmp
xchg
int3
or
add
mov
loopne
das
pcmpgtw
push
sbb
mov
xchg
fwait
int3
adc
mov
jb
or
pop
insb
xchg
stc
ds
mov
xchg
dec
cmp
sahf
aam
or
jnp
mov
jmp
jg
scas
mov
push
add
and
lret
add
jno
jne
in
jle
into
stc
add
pop
jnp
xlat
dec
xor
lret
std
push
lea
std
mov
hlt
ss
loopew
or
xor
lea
dec
xchg
clc
jb
leave
or
stos
mov
jno
ret
ja
and
imul
mov
push
xor
mov
movsl
mov
js
pop
scas
jno
cs
movsb
mov
or
into
push
das
not
xor
jo
or
adc
dec
out
push
sub
jnp
scas
jae
dec
mov
and
jge
std
xor
hlt
add
mov
cs
cwtl
lahf
sub
ja
and
mov
pop
jno
add
fnstcw
in
scas
loope
dec
cmpl
push
inc
and
or
rorl
mov
ljmp
jmp
movsb
int3
imul
add
xorb
sbbl
outsl
sbb
shll
rcll
jmp
fnsave
cmpsl
sbb
in
mov
ret
sub
push
cmp
add
push
lods
insb
jecxz
repnz
scas
ds
xchg
cld
loop
leave
dec
cmp
hlt
dec
std
inc
mov
add
mov
dec
pop
dec
repz
addr16
pop
dec
sub
xor
and
and
mov
iret
sub
std
add
movlhps
sub
or
shrl
cwtl
xchg
addb
into
push
adc
into
popf
adc
xor
fwait
data16
sbb
mov
mov
jae
daa
in
or
icebp
inc
and
pop
out
xor
imul
shlb
xchg
rcrb
push
cmp
jb
rep
sub
bound
scas
mov
jecxz
popa
push
push
iret
out
xchg
aaa
sbb
outsl
sbb
sbb
lods
add
test
cli
rcll
jle
gs
mov
mov
sbb
xor
lret
sbb
dec
ljmp
mov
xlat
les
xchg
in
popl
mov
cwtl
stc
push
cmp
movsb
popl
or
dec
shlw
xchg
cmp
insb
pop
jle
inc
fdivs
sbb
push
mov
pop
mov
pop
xor
popf
dec
pop
mov
shrb
lds
fiaddl
xor
rolb
mov
jge
loope
js
mov
jl
addr16
sbbl
rcr
push
jp
push
enter
fdivs
cwtl
jmp
xchg
sub
pop
mov
js
jno
insb
negb
dec
das
js
lahf
js
adc
jns
loop
and
xor
push
jp
retw
test
dec
mov
icebp
daa
mov
mov
pop
cs
push
pop
cmp
or
lds
xor
inc
sbb
les
leave
cmp
fxch
sbb
push
mov
jne
mov
inc
inc
mov
mov
adc
aam
into
inc
movsl
sbb
movsb
cmp
lds
test
fistl
addb
arpl
and
xchg
test
nop
sbb
and
cmp
repz
leave
sbb
rcrb
test
cld
cwtl
xchg
jnp
sub
push
cmp
mov
adc
hlt
mov
pop
ja
andl
jbe
enter
and
mov
pop
mov
push
add
inc
xor
push
jle
cld
push
or
cmp
push
clc
xchg
loopne
pop
andb
shl
int
stos
inc
test
mov
xchg
add
fsubrl
xor
test
push
arpl
dec
push
sbb
xchg
or
xchg
addr16
fcmove
mov
inc
aas
adc
into
xchg
jnp
or
outsb
hlt
outsb
sub
sbb
cwtl
mov
outsb
jmp
loopne
xor
dec
and
dec
mov
cmp
outsl
cmp
rclb
scas
inc
and
mov
cmp
lret
loop
fsubrl
outsb
ret
inc
sbb
and
dec
fstpl
daa
mov
stc
out
stc
jmp
ficompl
adc
pop
ret
int3
lods
mov
pop
cmp
add
sub
push
lahf
in
dec
adc
popf
jnp
jbe
mov
cmp
leave
int
sub
sbb
out
mov
ds
xchg
subb
fsub
neg
mov
shlb
lcall
lock
jle
mov
movsb
je
jg
gs
xchg
gs
lret
mov
add
rolb
lahf
cmp
cmpsl
es
push
xchg
inc
outsl
cmpl
nop
xchg
in
jo
dec
in
adc
dec
inc
lret
les
ds
hlt
movsb
mov
add
mov
inc
mov
mov
ds
repnz
aaa
and
push
add
in
push
pop
push
xor
add
out
leave
scas
rorb
jo
daa
sbb
cmp
mov
push
inc
sbb
sbb
in
push
add
dec
inc
xor
lods
jecxz
mov
jg
and
aas
cmp
scas
pop
mov
es
dec
fs
sub
add
test
or
xchg
or
mov
gs
movsl
push
ret
dec
push
xor
rcrl
lods
lods
les
push
sub
and
sub
mov
movsl
xor
push
mov
adc
sti
add
xor
sbb
inc
std
cmpsl
pop
sahf
or
lock
addl
outsl
add
stos
movsl
addr16
leave
pop
outsl
jae
xor
cld
es
das
stos
test
push
xor
jne
rorl
lds
divb
sbb
movsl
inc
xchg
jl
xchg
scas
sub
dec
ret
mov
ficompl
jecxz
std
push
movsl
xchg
xchg
pushf
dec
out
push
mov
adc
fs
ljmp
scas
add
scas
jbe
push
or
aas
push
mov
jne
dec
mov
xchg
loopne
fs
fcmovu
inc
cmp
adc
mov
nop
or
lods
xor
xor
push
shll
scas
dec
call
cmp
mulb
rcl
xchg
inc
or
cmp
test
cmp
rorl
cmpsl
dec
adc
jnp
pop
pop
pop
mov
pop
push
jno
mov
dec
pushf
dec
sbb
notb
mov
js
test
mov
jle
inc
sbb
or
cwtl
sub
cmp
adc
idivl
jne
pop
cmp
loopne
xlat
fwait
cmp
push
xor
jae
sahf
adc
xchg
adc
in
sti
lret
cli
mov
gs
adc
aaa
dec
lea
lea
fsubrp
adc
ficoms
fwait
sub
push
mov
mov
add
in
pop
leave
dec
mov
or
pop
push
mov
jg
fucomi
insl
pushf
lods
cmp
sbb
ds
adc
pop
cmpsb
call
into
gs
jbe
jp
imul
xlat
mov
mov
sti
cli
adc
lock
xor
xchg
add
xchg
pop
pop
lret
jo
mov
fcmove
cmp
in
sub
and
loope
scas
nop
pop
xchg
xchg
mov
aas
sbb
loopne
xlat
push
fwait
xchg
add
cli
bound
in
mov
lret
jno
jle
ljmp
in
popl
rorb
imul
lea
fbld
dec
cltd
cmp
push
jae
aaa
sbb
xor
adc
pop
inc
xlat
test
add
inc
out
pop
out
push
mov
sbb
sbb
lcall
aaa
leave
pop
je
ret
out
jge
push
shll
push
push
into
add
sub
cmp
adc
leave
lds
adcb
jp
std
mov
sbb
cmpsl
stc
mov
cmp
enter
je
pop
lea
adc
stos
fnstcw
or
mov
mov
inc
je
add
fnsave
sbb
jnp
jae
jae
std
push
mov
adc
fs
xchg
out
sbbl
stos
push
enter
and
test
ret
mov
loopne
mov
and
adc
stos
add
pop
sub
add
aaa
mov
into
sbb
lods
push
imul
pop
loopne
addl
fimull
mov
loope
inc
jb
hlt
fstpt
in
pop
insb
popf
nop
mov
inc
adc
mov
ja
dec
and
cld
or
adc
dec
jl
rclb
xor
aaa
sub
lahf
out
std
std
or
popa
add
testb
pop
sbb
cmp
hlt
sub
mov
stos
mov
dec
popa
dec
dec
push
or
jns
push
mov
inc
out
sub
mov
lcall
fwait
adcb
lds
push
cwtl
or
jge
aas
xchg
sbb
or
sbb
sub
sahf
pushf
dec
fildl
pop
and
fmuls
std
jno
push
movsl
insl
je
lock
push
scas
jbe
xor
fisttpll
imul
std
jl
rcrl
test
sbb
mov
sti
fisttpl
pop
push
cwtl
xchg
mov
sahf
push
push
adc
repnz
shrb
jbe
mov
loop
lods
mov
pop
movlps
aad
aas
jnp
fsubr
pop
popf
mov
lret
and
icebp
pop
mov
lds
test
sbb
jg
dec
xchg
dec
stc
jne
mov
mov
rolb
mov
sbb
or
mov
jns
cmp
push
cltd
mov
add
cmc
ljmp
mov
std
mov
xlat
cltd
cmpsb
xor
shlb
imul
movl
push
add
lcall
cmp
or
gs
inc
mov
dec
cs
adc
xor
filds
leave
inc
pop
pop
mov
or
test
lods
pushf
adc
mov
mov
daa
cmp
ret
sub
fsubrl
xchg
out
mov
adc
sahf
push
cmp
pushf
pop
mov
fnsave
pop
insl
adc
pop
lahf
and
and
sbbl
add
jb
cli
inc
inc
aas
xorl
jp
cs
mov
aam
cmp
mov
sub
push
adc
mov
fwait
pop
add
xchg
cmp
mov
das
out
lret
xlat
shlb
dec
hlt
int
fmull
cmp
cmp
aaa
jecxz
dec
pop
pop
pop
les
popa
pusha
sbb
mov
fdivrs
sub
scas
cmpsb
enter
cmp
mov
loop
fsubl
movsb
mov
pop
mov
jnp
lcall
cmc
push
insl
push
mov
mov
fnstenv
mov
mov
xchg
push
test
fistps
and
inc
and
mov
ljmp
xlat
movsb
xlat
ljmp
stos
insb
scas
into
fwait
test
sbb
ret
outsl
stos
sbb
movsb
stos
ret
pop
aaa
jg
stc
add
aad
pop
cmp
mov
js
pop
stos
inc
xchg
sbb
dec
mov
lods
not
div
pushf
rcrl
jno
and
mov
or
leave
xchg
mov
mov
popa
mov
ret
sub
sbbl
aaa
or
dec
sarl
int3
fiadds
cmp
fsubs
dec
dec
data16
cld
popa
push
test
push
jne
jne
rol
xor
es
add
adc
dec
and
cmp
mov
or
mov
pop
aad
fwait
jmp
jecxz
mov
pop
dec
jb
adc
into
lret
add
mov
in
adc
repnz
mov
sbb
mov
incl
cwtl
inc
outsl
divb
outsl
shl
enter
imul
mov
loop
add
pop
and
scas
les
or
fwait
aas
or
test
fidivrl
xchg
dec
or
push
inc
das
inc
sbb
mov
fwait
fs
sarb
dec
bound
sub
jg
xchg
outsb
adc
out
push
mov
pop
out
xchg
sbb
sbb
fsub
call
scas
repnz
loop
nop
or
lods
outsl
mov
xchg
fsub
sub
xor
sbb
add
aas
testl
hlt
jge
xchg
cmpsl
sbb
aad
pusha
addl
jmp
movsl
fs
cltd
aaa
cmp
sub
repnz
or
imul
dec
and
gs
inc
in
popa
rcl
xorb
popa
push
mov
sbbb
jl
sbb
sub
xlat
cmpsl
xor
mov
test
adc
sub
mov
push
ds
sub
lahf
mov
or
movsl
mov
add
sub
adc
das
sbb
inc
xor
mov
orb
mov
pop
dec
lea
scas
pop
lea
xchg
xchg
sbb
das
pop
dec
inc
jbe
cmc
lahf
mov
pusha
pop
out
dec
div
xchg
pop
ss
sub
loopne
ss
add
imul
or
ret
jae
xor
xor
cltd
sahf
jp
lds
pop
pop
mov
inc
xchg
add
ljmp
xchg
scas
mov
in
stc
insl
add
lret
inc
sbb
scas
fwait
stos
and
push
aam
pop
mov
or
jecxz
and
fnstcw
and
dec
push
mov
insl
inc
stos
pop
test
js
push
scas
mov
push
jecxz
mov
mov
adc
out
pop
inc
xchg
push
push
sahf
jbe
lds
dec
lahf
push
inc
push
scas
je
inc
xchg
out
sub
fcompl
ficompl
or
and
cwtl
jnp
in
sub
cmc
das
mull
jle
dec
mov
add
fmuls
xlat
out
sub
movsb
and
out
mov
jecxz
mov
les
pop
dec
pop
dec
inc
jns
popf
stos
js
mov
inc
psrlw
aas
cli
movsb
insl
sub
shl
bound
ss
add
cli
mov
idiv
test
mov
cmpsb
stos
ja
push
xor
shll
idivl
shrb
pop
jnp
sbb
ret
stos
jmp
jl
and
adc
fldenv
mov
fucom
or
xlat
pop
jo
jg
les
mov
orb
mov
push
mov
in
xchg
push
push
sub
ljmp
inc
sbb
or
jmp
jbe
push
add
fwait
inc
or
pop
push
pop
jmp
fucomi
lahf
popa
mov
jl
cmp
push
mov
xlat
jmp
and
sub
cmpsl
mov
pop
sub
hlt
aad
pop
mov
jae
mov
and
dec
mov
push
aad
mov
xchg
test
daa
cmpsb
mov
dec
push
lds
mov
sbb
daa
xchg
sbb
in
orl
ret
xchg
pop
sub
std
bound
movsl
aad
add
scas
repz
lds
add
jne
mov
daa
dec
pushl
lods
cltd
jg
js
aad
repz
sub
xlat
rorb
ljmp
mov
mov
add
pop
mov
out
ficompl
mov
lret
jmp
pop
scas
xchg
cs
addr16
orl
push
pop
stc
test
push
sub
iret
sub
sub
push
and
rcll
dec
xchg
adc
frstor
in
clc
sub
outsl
add
add
dec
hlt
mov
sub
das
fcomps
adc
out
sub
lret
cmp
stos
iret
adc
cltd
cltd
lahf
leave
mov
sub
lea
mov
movsb
mov
sbb
jge
imul
cmpsb
cmpsb
and
fs
and
jg
push
push
mov
lods
and
and
fcom
inc
call
xor
push
mov
cmc
addr16
ret
cmp
mov
pop
sarb
pop
or
stc
sbb
xor
aaa
cmp
clc
inc
pop
rorl
out
mov
add
mov
and
lock
xor
and
das
sub
scas
bound
js
orl
jmp
and
and
das
xor
xchg
xor
loopne
mov
add
jne
aad
cmp
decl
mov
aam
mov
out
stos
das
incb
das
mov
data16
repnz
jnp
insl
mov
jmp
sbb
movsl
pop
mov
pop
inc
xor
inc
sahf
cltd
in
push
mov
lock
dec
mov
push
adc
mov
cmp
dec
fcompl
xorb
mov
push
jb
aaa
lret
fwait
imul
jo
shl
jbe
pop
mov
mov
fs
sbb
cmp
cmp
pop
aad
inc
and
and
jnp
push
jecxz
mov
jecxz
xor
faddp
ret
cli
lret
in
xchg
gs
out
dec
cmp
cmp
mov
mov
jnp
jge
pop
popa
cmp
pop
shrl
test
xchg
outsl
mov
je
pop
nop
mov
dec
neg
mov
lcall
fsubr
lahf
jecxz
jp
lret
loope
xlat
test
add
push
aad
popf
shll
pop
ja
into
pop
mov
data16
stos
xorb
mov
push
fsubr
mov
adc
rorb
dec
cmp
mov
fwait
jl
lea
lcall
cmp
lret
add
jae
dec
inc
mov
and
pop
sub
pushl
sub
xchg
arpl
add
pushf
loopne
pop
adc
xor
pop
and
fidivrs
lea
push
push
mov
js
sbb
sub
xchg
stos
jecxz
bound
xlat
fisubs
push
add
addps
aaa
lret
js
mov
push
xchg
clc
out
lret
cmp
adc
cli
inc
push
mov
cld
lods
cmc
insb
fistps
dec
les
fists
rolb
jb
or
pop
out
adc
test
sbb
jb
and
stos
pop
add
xchg
imul
push
popf
push
xchg
sti
dec
or
mov
stos
aam
out
repz
or
mov
cmp
addb
push
sub
je
fstpl
pop
xchg
arpl
xchg
xlat
cs
icebp
push
sub
outsl
xor
sbb
jb
mov
inc
imul
fxch
out
jb
mull
popa
mov
lds
add
xchg
xchg
daa
cmpsl
loope
rclb
stos
dec
xchg
bound
fiaddl
inc
sar
and
scas
cltd
pop
dec
call
shll
shl
aaa
cs
pop
lea
dec
xorb
in
xchg
cmp
into
pusha
push
push
decl
das
pop
sub
pop
adc
sti
adcl
sbb
xchg
insb
push
pop
adc
pop
iret
pop
jecxz
jo
xchg
jo
dec
repz
xor
push
push
ret
fcom
das
mov
or
push
and
popa
cs
data16
cmpsb
pushl
mov
cmp
lea
mov
xor
aas
push
pop
pop
rcll
pusha
notb
fisubl
cmc
test
dec
popa
cmp
pop
clc
adc
jb
subb
repz
popa
xor
aaa
add
dec
jg
mov
and
arpl
fs
pop
push
pop
cwtl
repnz
lret
mov
rclb
fistpl
jmp
lret
andps
dec
arpl
int
push
and
mov
fnstenv
adc
cmp
test
mov
sub
sub
or
cmpsb
rcrb
test
jnp
push
fs
add
xor
out
jne
sub
xchg
cmpsl
insl
pop
movsl
xor
jno
orb
aas
loope
mov
cmp
shlb
das
int3
push
sbbb
pop
rcl
mov
and
bound
xchg
sahf
jge
fistpl
insl
add
or
in
jecxz
in
ds
push
fcoml
xchg
adc
outsl
jnp
inc
cmpsl
inc
rcrb
xor
stos
out
repz
fadds
pop
pop
ljmp
leave
movsl
inc
mov
pusha
or
mov
push
push
jp
jne
stos
call
pop
rclb
inc
mov
icebp
pop
sbb
mov
mov
repnz
adc
push
mov
push
add
mov
jns
sub
cmp
mov
stos
bound
sbb
call
or
jns
leave
xor
faddp
mov
out
rorl
stc
or
or
std
fsts
sahf
push
mov
fdivrs
mov
call
fsubrs
xchg
lret
popa
mov
mov
inc
fidivrl
lcall
fs
pop
outsb
sub
out
xor
sarb
cmpsb
sti
mov
fnop
ljmp
sub
jnp
fcomps
and
mov
ret
imul
roll
xorb
xor
jmp
test
loope
xchg
dec
inc
sub
arpl
cs
cmpl
movsb
pop
addr16
mov
jno
adc
roll
jnp
add
repz
sbb
lds
sti
in
arpl
or
mov
dec
pop
imul
daa
stos
movsb
cmpsb
mov
jp
adc
cli
add
xchg
lds
fs
or
jl
lea
push
data16
dec
mov
inc
or
rorb
fnstsw
cmp
inc
mov
push
into
add
mov
or
xchg
hlt
popl
add
adc
cs
loopne
push
sbb
push
testb
ret
mov
in
sarl
ds
xchg
ljmp
push
into
xchg
and
pop
punpcklbw
scas
push
mov
mov
dec
rcrl
xchg
jnp
cmp
stos
jg
or
jle
stos
push
add
dec
mov
mov
lods
mov
jle
stos
imul
sbbl
out
push
sysret
mov
sahf
cs
xchg
cmp
sar
daa
cmp
mov
fldenv
fwait
xor
lret
int3
ss
jbe
or
push
sti
aas
lods
jno
jge
sub
pusha
stos
pop
ss
sbbl
xchg
sub
sub
or
pop
call
scas
test
clc
or
push
aad
cmp
xor
into
cltd
aam
fisubl
cmp
mulps
xor
ja
decl
loope
loop
xchg
jne
add
aad
mov
adc
mov
js
std
shlb
adc
inc
xor
jb
iret
jno
dec
cmp
xor
sbb
jae
xor
fcoms
shll
aad
mov
xchg
mov
mov
jns
pop
dec
movsl
in
test
cmp
lahf
cli
mov
loope
rcll
out
out
xor
sahf
in
fadds
inc
mov
jge
hlt
jp
notl
idivb
mov
push
lock
leave
stc
aaa
movhps
jne
mov
sbb
lods
fmuls
push
xchg
aad
xchg
xor
inc
mov
movsb
dec
push
mov
sti
dec
lds
jae
mov
mov
inc
dec
inc
ljmp
insl
mov
inc
in
aas
in
jle
in
jno
adc
stc
ss
test
dec
js
std
mov
cmc
js
fs
or
push
and
mov
pop
push
adc
out
jnp
mov
or
mov
and
outsb
pmaddwd
sbb
cmp
popa
push
adc
mov
divl
inc
scas
mov
pusha
jp
lods
hlt
and
xor
and
cmpsb
into
cwtl
ds
and
mov
fucomip
dec
inc
mov
mov
xor
in
pop
sub
sub
mov
test
push
addr16
icebp
pop
testb
push
adc
sbb
test
insb
add
clc
lea
test
inc
and
push
les
mov
xchg
loope
pop
xor
gs
rsqrtps
ljmp
mov
fdivrl
add
fistl
in
lock
test
outsl
mov
enter
out
and
push
cwtl
sub
sbb
filds
ljmp
or
mov
mov
rcrl
jb
lods
aam
push
stos
sar
cmp
pop
push
addl
sti
jbe
sub
cmp
push
add
lcall
cmc
xlat
or
jo
push
insl
les
in
dec
ret
push
jl
dec
xor
stos
rcl
or
dec
or
js
into
int3
imul
jns
push
int
cld
daa
aaa
mov
mov
enter
popa
daa
call
pusha
mov
adc
mov
add
dec
dec
inc
rolb
mov
and
out
das
insb
mov
add
pop
out
addr16
jecxz
cmp
addr16
roll
sub
inc
sbb
fwait
mov
shlb
jmp
fidivrl
jo
adc
sub
imul
xchg
nop
lea
xchg
scas
jo
cmp
mov
out
movsb
jae
mov
sbb
pop
dec
in
dec
dec
sbb
cltd
jge
mov
inc
dec
push
xchg
scas
aas
stos
jo
insl
add
test
mov
push
adc
cmp
mov
dec
aas
call
pop
push
das
insb
xor
nop
push
mov
out
out
inc
pusha
push
mov
inc
stos
jp,pt
dec
nop
das
xchg
pop
stc
in
fnstenv
jge
mov
fisubrs
pop
xor
nop
jae
lods
mov
mov
cld
jl
pushf
sub
fmuls
and
or
jle
mov
jecxz
mov
mov
add
insl
cmp
test
stos
inc
mov
inc
popf
pusha
imul
mov
cmp
push
or
std
inc
pop
jno
inc
fcoms
xchg
hlt
pushf
jg
sub
xchg
ja
jbe
ja
xchg
in
ja
add
pusha
jne
in
out
fcompl
sbb
pop
inc
aam
es
sub
testl
rclb
cmp
sub
and
int3
adc
mov
insb
in
jp
test
fisttpll
shlb
xor
imul
or
xor
mov
js
xlat
adc
fcoml
aam
xchg
jnp
cli
cli
push
sbb
add
mov
mov
add
push
ret
out
popa
add
dec
mov
scas
fwait
adc
clc
andb
adc
jbe
jmp
and
movsb
test
int
mov
mov
in
jne
mov
jmp
cli
xchg
sub
and
cmpsl
push
push
jnp
xor
test
ja
sub
fisubl
and
push
out
sbb
insb
pop
push
xor
cmp
test
in
in
or
xor
out
pop
ret
das
mov
sti
rorb
xchg
ss
in
sbb
in
loop
stos
inc
nop
dec
lds
and
cmp
hlt
dec
fcomps
lods
dec
xor
and
sub
outsb
ror
mov
movsb
cmp
cmc
pop
mov
movsb
and
lock
das
inc
repz
add
out
ficoml
pop
cmp
pop
pop
pop
ss
push
sbb
pop
xchg
inc
out
cmp
mov
jle
pcmpeqw
shlb
scas
xchg
adc
push
cld
fisubrs
into
push
pop
shlb
xor
cli
fsubrs
dec
add
pusha
xchg
lock
or
fldenv
sub
sbb
bound
outsb
shrb
adc
test
ret
test
xlat
out
fldcw
mov
fwait
mov
add
pusha
jecxz
cmp
dec
outsl
and
xchg
mov
sbb
and
lods
sbb
jne
mov
sahf
and
pop
gs
out
mov
mov
and
or
loopne
jge
rorb
dec
push
in
leave
push
mov
inc
adc
movsb
and
pop
xchg
shll
sub
jne
stos
mov
xchg
mov
mov
out
leave
leave
pop
lret
add
leave
pop
push
xchg
sub
inc
dec
adc
or
dec
mov
fs
adc
pop
or
lds
pusha
mov
ljmp
rcll
sub
sarb
xor
mov
dec
mov
mov
mov
stc
pop
std
test
push
jo
fwait
icebp
daa
or
daa
xchg
dec
mov
adc
gs
sti
sar
mov
ret
mov
cmp
mov
jle
aam
je
or
adc
push
and
xor
ret
mulb
pushf
in
enter
iret
and
inc
popf
dec
loope
testb
data16
dec
hlt
push
cmp
pushf
jmp
jbe
std
xlat
mov
mov
in
push
cli
mov
dec
lcall
call
xor
jne
inc
cmp
fmul
inc
in
inc
lods
int
pop
ljmp
add
mov
xor
sbb
adc
jb
aaa
push
jne
in
movsb
and
jmp
dec
jae
dec
mov
jmp
adc
subl
rclb
cmpsb
adc
xor
mov
insl
lods
sarb
or
add
out
sahf
jne
jmp
adc
loop
insb
sbb
jg
hlt
in
orl
insl
xor
mov
cmc
and
fisttps
cmp
inc
iret
add
mov
pop
aam
daa
in
daa
aas
stos
aad
inc
enter
jbe
inc
xchg
sub
inc
fidivl
cmp
imul
xor
inc
lahf
or
leave
lods
adc
sahf
sbb
and
sub
sahf
add
test
xor
cmp
mov
jbe
ror
jnp
in
fptan
inc
xorl
in
loopne
xchg
cmc
mov
lock
sarl
mov
mov
js
dec
adc
lods
arpl
in
lods
stos
mov
mov
add
stos
mov
cwtl
and
arpl
xchg
sbbl
fiaddl
pop
test
or
test
push
mov
les
jmp
push
js
cmp
mov
jge
xchg
es
mov
jg
lcall
andl
pop
lods
insl
add
jg
sub
andl
addr16
mov
sub
push
jne
stc
xchg
jb
outsb
lods
popf
fsubrs
in
push
test
mov
sbb
xor
mov
add
in
inc
mov
movsl
and
loopne
fisubl
and
nop
jnp
jge
lods
rclb
cmp
mov
sti
inc
inc
dec
push
iretw
jb
into
sahf
aad
pop
fisubrl
xor
addr16
das
sti
xor
adc
out
mov
stos
dec
in
int
scas
pop
mov
mov
or
sub
pop
sbb
jae
xchg
ret
movl
lret
test
cmp
outsb
outsl
aas
mov
cmpl
sahf
xchg
dec
cwtl
pop
xchg
inc
insl
repnz
dec
dec
and
in
jne
sbb
or
and
imul
jae
sbb
push
lods
cwtl
push
sarl
insl
sbb
mov
inc
adc
inc
mov
ss
ja
repz
cmc
pop
mov
scas
jg
hlt
jno
andb
mov
jbe
jmp
pop
iret
jne
cs
push
mov
jns
test
sbb
mov
add
ds
iret
xor
lret
in
adc
leave
out
xchg
out
sbb
xchg
and
addr16
or
mov
adc
imul
mov
negl
push
shl
arpl
pop
inc
ds
inc
nop
outsl
xchg
adc
sarb
adc
xchg
lods
mov
stos
push
incl
inc
xor
scas
sub
test
es
sti
xorb
pop
xor
leave
inc
lods
xchg
and
push
lahf
adc
shlb
inc
push
jg
dec
daa
push
cmpl
adc
loop
sub
call
enter
ljmp
pop
subl
push
push
push
aaa
arpl
rep
push
dec
negb
popa
push
adc
push
lock
inc
fidivl
mov
mov
out
push
ds
mov
mov
mov
popa
aad
or
add
sub
mov
jae
mov
mov
scas
popa
cld
dec
and
ss
add
mov
push
scas
scas
jmp
ffree
lcall
data16
pusha
leave
scas
jbe
mov
xor
loop
insb
adc
in
dec
negb
jl
pop
add
leave
daa
in
push
ret
xor
mov
or
je
jmp
outsl
pop
mov
out
adc
lahf
pop
adc
cltd
dec
mov
add
jl
shlb
mov
lret
dec
sub
out
add
add
mov
mov
push
cmpsl
or
jg
fsts
cmc
pop
or
cmp
out
in
cld
inc
into
jne
cmp
and
andl
call
test
ja
xchg
pop
adc
xor
test
pop
iret
mov
xchg
inc
jecxz
mov
adc
lcall
ja
xor
imul
in
xchg
out
mov
lods
mov
ret
test
mov
inc
mov
pop
orl
pusha
sub
cmp
xor
pop
out
or
fwait
inc
cmc
or
gs
jl
and
ja
sahf
movsl
cmp
cmp
mov
dec
pop
dec
mov
dec
stos
cmpsb
out
pushf
dec
add
mov
pop
pop
inc
flds
stc
add
sub
push
loopne
stos
xchg
jb
jb
repnz
test
rorl
popa
ret
leave
pop
dec
mov
mov
add
lcall
jae
push
inc
xlat
push
ss
enter
fldcw
fwait
aas
sbb
mov
aad
loope
inc
out
negl
inc
push
stc
mov
jmp
xor
dec
loope
jge
push
test
rcrb
popa
movsl
cmp
dec
and
fcoml
scas
movsl
and
aam
fwait
jae
jbe
ss
ss
fldl
push
inc
aad
ret
sbb
or
leave
pushfw
adc
xchg
push
or
aam
add
mov
pop
movb
dec
pop
push
les
rorl
lods
clc
rcr
inc
mov
sbb
and
xor
rolb
xchg
pop
cld
xchg
sbb
jmp
jle
pop
push
outsb
push
daa
scas
lret
adc
in
jno
enter
lock
pop
inc
pop
xchg
xor
and
cmc
cwtl
fcmovu
jns
call
insl
arpl
cs
enter
aaa
push
gs
ret
inc
stc
jecxz
ja
jge
jge
repz
sbb
inc
int
imul
pop
mov
shrb
jb
add
and
stc
dec
dec
dec
idivb
push
out
inc
xlat
cmpsb
xchg
fs
mov
loopne
mov
les
cltd
insl
loop
dec
and
int3
ljmp
xor
jge,pt
lcall
pushf
xor
jno
mov
mov
sub
iret
inc
outsb
and
xchg
xor
dec
mull
push
mov
adc
sarb
pop
call
jle
push
xchg
out
insb
xchg
adc
jns
testl
mov
and
adc
or
and
and
cld
jmp
xor
test
stc
jb
sbb
dec
xor
pop
add
out
jmp
ljmp
js
add
inc
jecxz
jmp
sub
mov
jge
out
xchg
sbb
mov
mov
mov
int
loopne
add
mov
cli
mov
lahf
out
push
das
mov
pslld
sbbb
inc
mov
icebp
inc
fldcw
mov
sbb
outsb
pushf
push
shlb
les
outsb
pop
dec
mov
sbb
cmp
cmpsb
mov
jge
cmovp
adc
test
movsl
mov
sub
popf
fxch
push
fs
jnp
neg
or
bnd
shl
lods
aam
jnp
cwtl
xor
pop
mov
leave
jno
vaddsubps
cmpsl
pop
xor
imul
sbb
push
mov
out
lcall
pop
mov
mov
dec
dec
mov
pop
sub
andb
mov
js
imul
cltd
pop
inc
addb
xchg
enter
pop
inc
adc
mov
aam
sbb
xchg
in
jb
fsts
idivb
cmp
outsb
push
call
sbb
aaa
ljmp
lcall
les
push
sub
sti
xor
push
stc
add
dec
fistpll
mov
mov
dec
ret
arpl
lcall
fcmovb
aam
flds
mov
xor
and
xor
mov
pop
andl
or
jb
inc
sahf
cmp
mov
pop
mov
sahf
addr16
mov
cs
xor
jecxz
aas
jnp
cmpsb
ja
and
or
test
adc
push
lods
fstpl
cmp
in
jae
xor
rolb
inc
push
mov
lods
sub
xor
jmp
lea
fmuls
outsl
jle
mov
lock
xchg
hlt
xchg
rclb
imull
inc
mov
adcb
and
mov
insl
xchg
and
jns
arpl
or
insb
je
insl
jl
sbb
cltd
mov
mov
faddl
decb
stos
test
jae
jbe
xchg
cmp
loop
in
mov
add
xor
jae
test
cmc
adc
dec
cwtl
fiadds
jno
add
push
inc
nop
ja
fsubs
mov
leave
adc
xor
or
lds
mov
push
adc
xor
push
or
pop
pusha
popa
jmp
inc
loopne
or
add
mov
jp
test
adc
pop
add
pop
mov
pop
cmp
mov
stos
and
sub
pushf
or
jnp
pushf
xor
and
push
mov
xchg
push
in
push
lods
lret
nop
mov
inc
dec
negl
mov
mov
mov
in
adc
cld
or
add
mov
lods
loop
jno
sbb
cld
jl
insb
enter
out
ljmp
data16
popa
lret
xchg
sar
mov
xor
mov
push
subb
sbb
lea
dec
mov
jp
movb
xor
mov
ds
fdiv
call
cmp
or
add
lods
mov
mov
mov
out
or
pop
or
loop
in
arpl
push
xchg
dec
dec
scas
scas
inc
mov
popa
xor
mov
subl
dec
inc
add
in
jo
lods
mov
sahf
cmp
js
add
mov
mov
pop
jecxz
and
pusha
cmp
mov
in
aaa
mov
jbe
sbb
lret
test
jg
ret
push
negl
bound
dec
dec
cld
jmp
std
in
jmp
lret
adc
iret
lods
push
addb
mov
mov
nop
sbb
pop
or
pop
jnp
adc
lds
add
test
insb
dec
out
lods
stos
and
mov
ja
push
jne
mov
adc
mov
xchg
cmp
dec
loop
pop
adc
and
jae
sub
xorl
jbe
test
mov
das
rcl
lret
pop
ss
and
lods
push
and
jmp
xchg
ja
mov
cvtps2pd
dec
loope
push
mov
std
push
mov
push
mov
test
repnz
scas
in
add
pop
aas
lock
mov
lret
mov
add
sbb
das
adcl
push
mov
pop
mov
mov
sbb
fcomps
bound
cmpsb
pop
in
incb
nop
dec
dec
fwait
ret
push
push
test
mov
das
sub
lds
fists
call
xchg
or
out
xlat
push
mul
jns
sub
pop
loope,pn
cmc
fists
or
jle
sbb
in
sbb
sbb
fwait
add
ret
mov
push
sub
jg
push
or
movsb
add
xchg
lret
inc
dec
js
push
push
and
push
aam
pusha
add
mov
or
fcmovnu
jnp
jb
repz
bound
shl
mov
sbb
jge
cmpsl
mov
out
hlt
aad
mov
je
insb
push
or
scas
call
dec
or
daa
popf
or
std
mov
cmp
stos
sub
inc
addr16
mov
call
out
add
jo
cmp
jle
cli
cmp
jns
adc
ja
push
fsubl
xor
and
mov
mov
iret
mov
mov
out
test
sub
cmp
repz
push
and
repnz
mov
cmp
mov
add
push
adc
sbb
or
outsl
jno
cmpsb
jb
jno
enter
data16
scas
add
cmp
pop
sub
mov
out
or
loope
movsl
fsts
mov
mov
pushf
xchg
incb
lods
sbb
out
pop
repz
inc
pop
call
adc
mov
and
jo
jnp
sbb
mov
lcall
mov
dec
test
cwtl
out
add
and
mulb
adc
frstor
pusha
fs
jnp
mov
fs
fistl
test
pop
sub
dec
xchg
rcl
fnstcw
movsl
pop
adc
in
add
adc
lock
das
cmp
inc
jecxz
or
adc
dec
lahf
sti
mov
test
jg
pop
fcoml
popa
mov
pop
mov
sbb
lret
xchg
or
mov
out
adcb
sub
mov
hlt
jp
scas
clc
and
push
adc
insl
fsubrs
sub
inc
out
test
sbb
mov
push
push
inc
pop
push
add
ret
sarl
loopne
jns
sbb
sbb
pop
mov
jne
jb
bound
mov
pop
push
inc
lret
rcll
mov
pop
mov
stc
add
mov
inc
xchg
std
inc
ficompl
cmp
dec
xchg
jmp
gs
jmp
push
stos
mov
xlat
imull
int
js
outsl
cmpl
push
jb
lret
lret
add
stos
repz
vpmaxub
pop
and
xor
and
adc
and
mov
or
filds
jle
icebp
ja
jb
test
inc
mov
mov
pop
fildl
les
or
push
or
jne
ljmp
daa
xchg
addl
out
lods
jno
push
add
je
jb
sub
gs
xchg
push
aaa
dec
scas
push
or
outsl
orl
add
mov
sbb
nop
mov
and
mov
cld
push
or
mov
fs
sub
gs
xor
dec
outsb
cmp
sbb
pop
shld
in
mov
jnp
push
mov
lods
es
loope
jmp
push
push
xchg
mov
dec
inc
jge
pop
in
xchg
ljmp
or
sub
es
push
in
add
stos
push
lret
cmp
mov
mov
imul
pop
out
pop
xchg
rorl
pop
fsubs
add
adc
inc
pop
dec
pop
mov
pop
xlat
ja
xlat
arpl
cmp
jno
mov
dec
or
mov
lea
pop
jmp
or
sub
popa
loop
outsb
push
addr16
or
lods
adc
jns
scas
ljmp
push
or
mov
test
cmp
gs
bound
sub
xchg
sbb
int
sbb
out
test
hlt
test
jne
out
and
mull
dec
leave
cmp
shl
cmp
sbb
xor
mov
das
imul
mov
dec
add
inc
push
cmc
aas
push
lret
insl
dec
insl
scas
test
xorl
pop
in
sub
lret
sub
push
out
or
push
sahf
test
addr16
dec
in
sub
in
out
fucomi
inc
add
clc
lcall
mov
and
dec
mov
rep
cmp
mov
adc
cmp
inc
dec
cmp
sbb
insb
mov
popf
and
jl
inc
pop
jge
pop
mov
cmp
rdpmc
push
popa
dec
daa
or
inc
fstl
mov
dec
or
in
mov
sbb
adc
arpl
dec
xchg
inc
out
decb
jne
inc
cmovs
jmp
sub
icebp
hlt
mov
gs
and
inc
and
ds
insl
xor
jmp
lret
mov
hlt
fidivrl
and
es
cpuid
cld
push
imul
mov
add
lcall
repnz
jge
mov
out
xor
iret
adc
lock
aam
xor
xor
sbb
mov
sbb
add
rcr
sarl
mov
testl
fnstsw
pop
loop
mov
mov
scas
mov
mov
sbb
inc
mov
je
jge
pop
fs
jl
test
in
ljmp
xchg
mov
push
rorl
xchg
dec
or
nop
lods
aam
sub
iret
icebp
push
nopl
push
push
cld
lea
pusha
jbe
rorb
pushf
jbe
lds
mov
mov
mov
and
or
xchg
int
and
adc
cmpsl
cmovs
pop
cli
jecxz
fstps
pop
inc
js
xlat
jecxz
adc
sub
xchg
jp
ds
cmc
call
divb
inc
incl
push
cmpsl
ret
jl
pushf
xor
lock
mov
jo
cltd
push
notl
add
sub
push
cmpsl
add
aaa
jmp
inc
or
cli
popa
mov
xchg
and
jmp
mov
pop
mov
cmp
push
fldlg2
xchg
push
aas
sub
xchg
jmp
je
xchg
adc
ljmp
roll
jg
out
mov
dec
sbb
enter
xchg
push
lret
iret
daa
push
daa
or
lret
iret
pop
add
sbb
lret
iret
outsl
xchg
je
adc
jmp
mov
adc
scas
imul
sbb
repnz
mov
jne
lea
mov
mov
sub
mov
leave
mov
cwtl
xchg
sub
sub
push
icebp
stos
dec
adc
sbb
js
inc
jmp
insl
imul
mov
daa
imul
aas
or
mov
mov
adc
jmp
mov
aas
or
addb
and
or
das
stos
mov
dec
inc
mov
fstps
gs
ret
sub
push
push
mov
dec
jnp
loopne
sbb
icebp
cs
mov
rcrb
insl
scas
mov
cmc
pop
shll
in
rcrb
dec
mov
das
sbbl
push
icebp
lea
es
jae
fs
call
push
mov
clc
dec
mov
cwtl
inc
je
dec
push
mov
cmp
or
dec
bound
sub
lret
inc
imul
push
out
out
mov
add
xor
sub
fs
xchg
xlat
mov
popf
xchg
dec
mov
fsubl
mov
fcmove
movsl
xchg
push
and
cmp
addr16
pushf
inc
subb
or
and
outsb
cs
fsts
fwait
mov
dec
outsb
and
insb
or
sbbl
jbe
mov
int3
fs
cmp
push
mov
add
jno
mov
fisubs
movsl
stos
mov
cli
in
add
in
inc
daa
popf
xchg
push
add
mov
in
add
ljmp
pop
lret
jecxz
pop
add
stc
adc
ljmp
ljmp
jp
insl
in
add
sbb
int
cmp
cs
idivl
inc
add
sbb
lret
or
cld
in
rorl
fstpl
lods
mov
add
sar
ds
icebp
xchg
xchg
xor
mov
jg
xchg
cmpsb
sub
lcall
mov
and
fbld
xor
and
data16
jno
sub
push
int
jno
and
pop
add
jmp
mov
rorb
xchg
jp
insb
adc
xlat
jo
adc
push
lret
out
jb
ds
jmp
jmp
push
mov
jecxz
cmc
lock
pop
scas
shr
mov
lahf
mov
jmp
sbb
paddd
mov
add
and
insl
mov
pushf
fsubrs
movsl
stc
mov
push
scas
cmp
fcmovnbe
push
movhps
or
push
sbb
cmp
pop
ret
mov
mov
pop
adc
test
in
jmp
test
lret
dec
iret
popa
pop
aas
sub
inc
cmp
lret
dec
inc
mov
or
pop
inc
mov
xchg
fstps
jg
call
sbb
add
sbb
jmp
mov
dec
xchg
pop
mov
adc
cmp
or
cmpsl
pop
out
mov
mov
push
fcomps
mov
popa
sbb
mov
lock
add
outsb
sahf
cmp
xor
xchg
push
cltd
fisttpll
loopne
outsb
push
test
fidivs
jmp
pop
fstps
mov
push
cltd
lret
cmp
pop
insb
dec
scas
cmp
fisttpl
jbe
inc
cmp
stos
jle
push
insl
out
insl
mov
sarb
enter
and
ret
testl
mov
je
lock
xor
hlt
inc
out
xchg
push
mov
or
shll
pop
inc
dec
outsb
or
sub
push
aam
cmc
xchg
sub
movsb
xor
jl
cmp
xchg
add
jno
shl
fdiv
jg
fcmovb
pop
stos
push
call
in
mov
test
adc
adc
inc
add
incl
lods
ret
inc
add
repz
cs
icebp
imul
pop
and
loopne
or
imul
or
movsb
loopne
fimull
xor
pop
inc
dec
dec
or
in
data16
mov
inc
adc
and
shl
pop
dec
ljmp
xor
rcr
insb
adc
inc
ja
add
xor
inc
xor
mov
daa
mov
dec
inc
les
jnp
jne
inc
ss
push
pop
pop
xchg
dec
dec
div
ss
les
rclb
mov
imull
dec
and
stos
adc
push
frstor
aaa
test
ret
mov
push
rclb
push
mov
imul
cmpsb
mov
psubusw
scas
xor
push
adc
mov
sahf
pop
mov
mov
push
push
jo
and
dec
arpl
inc
inc
ss
jg
aam
ret
mov
sti
pop
xlat
push
mov
mov
inc
std
lods
jmp
pop
jp
sbb
xorb
les
enter
repz
push
repnz
push
out
js
mov
lret
mov
inc
popa
mov
sbb
fs
aad
mov
cld
xchg
call
push
scas
jle
add
add
xchg
adc
sub
movsb
popf
xor
pop
mov
fwait
sbb
push
out
psllq
and
inc
sbb
ret
ljmp
int
add
lret
imul
and
inc
lock
jp
or
imul
jmp
sti
add
ret
loopne
xor
hlt
adc
repnz
jp
out
jl
mov
mov
fisttpll
not
cli
push
stc
popf
or
add
cli
inc
inc
and
adcl
push
ss
jge
mov
call
data16
push
or
mov
adc
inc
xor
mov
dec
jl
stos
leave
nop
enter
pushf
mov
mov
adc
xor
daa
xchg
mov
sbb
xchg
into
aaa
sti
add
and
or
fstpl
wrmsr
sub
cmc
mov
jp
or
dec
nop
iret
data16
sti
mov
mov
jge
outsb
out
pusha
cmpsl
fnstenv
xchg
inc
inc
xlat
daa
int
adc
add
inc
mov
mov
sbb
adc
xor
in
sbb
sbb
int3
push
push
dec
xchg
cmc
mov
sahf
pop
in
pop
inc
xchg
sbb
fdivl
push
xchg
aas
aad
mov
sahf
fists
sub
inc
pop
test
mov
or
sbb
pop
or
std
lret
sbb
fs
int3
pop
push
das
or
and
pop
push
stos
fstps
xor
dec
negb
mov
xor
sbb
arpl
ss
xor
and
cmp
add
push
leave
xchg
and
mov
roll
addr16
repz
std
nop
pop
sub
ret
jle
add
mov
cmp
push
mov
pop
dec
cmp
enter
jmp
pop
lods
xor
cmpsb
mov
daa
gs
xchg
or
lret
cmp
cmp
pop
xchg
sti
into
repnz
or
jecxz
mov
shll
data16
fnstcw
stos
mov
es
mov
pop
sbb
cmpb
sub
adc
insl
loopne
dec
adc
pslld
xchg
movsb
or
popa
jno
mov
sub
movsb
mov
or
rorb
int3
rol
dec
mov
test
add
jecxz
jo
addr16
jmp
mov
ret
pop
mov
lea
pop
lea
cmpsb
outsb
enter
sub
mov
and
lods
es
aas
js
mov
ret
loop
out
jns
dec
int3
movsb
pushf
ja
cmpsl
jp
mov
fidivl
addr16
push
cli
sbbb
cmpl
pop
insb
shrl
push
orl
push
mov
scas
es
push
cmp
dec
adc
cwtl
neg
call
mov
jno
aaa
mov
adc
dec
incl
notb
cltd
mov
cmp
xchg
jl
pop
or
insl
mov
xor
jns
xor
jnp
mov
pop
fcmovnu
cs
popa
xchg
popa
jb
loope
dec
repnz
pop
outsb
and
out
jmp
sbb
sub
push
enter
popa
pop
add
push
inc
mov
fldcw
add
cvtps2pd
adc
xor
fsts
pop
or
cmc
inc
in
mov
jnp
pop
cmpsb
mov
mov
jg
cltd
repz
or
addr16
enter
mov
pop
inc
jmp
adc
out
stos
adcb
or
imul
inc
add
mov
test
outsb
xor
xor
add
sub
inc
shll
pop
cmpsl
xchg
xchg
pop
jbe
jae
add
insb
xchg
jmp
jns
jle
mov
lods
cmp
adc
jmp
adc
loop
lret
pop
lock
lods
cmpsl
imul
addr16
leave
rorl
sbb
pop
lahf
xor
mov
cs
xchg
ljmp
adc
mov
inc
gs
push
pop
fldenv
mov
cmp
js
mov
mov
mov
gs
push
lahf
movsb
inc
lret
inc
gs
int
xchg
mov
dec
cmp
mov
mov
pop
popa
dec
sub
sar
fs
lret
movsb
mov
or
push
les
fcoms
pushf
and
push
int
xlat
lcall
mov
int
mov
lods
xor
mov
add
mov
inc
pop
stos
sub
xchg
cld
or
jg
dec
inc
lock
mov
ret
mov
pop
mull
cmp
mov
xchg
push
sbb
ds
in
test
push
pop
in
cmp
pop
lods
mov
outsl
mov
xchg
adc
push
int
cmp
push
scas
out
sbb
leave
mov
sub
xchg
dec
jns
sbb
testb
aas
cmovs
cmc
loop
icebp
rcll
ss
xchg
pop
xchg
aaa
sub
jns
loopne
push
mov
adc
sub
or
and
ss
bound
popa
cmpsb
mov
mov
or
insb
dec
out
inc
pusha
mov
and
push
pushf
jns
fstpt
in
pushf
test
iret
jae
icebp
adcb
mov
sbb
inc
mov
jnp
jecxz
add
nop
fwait
repz
sbb
mov
loope
in
and
add
popa
push
repnz
imul
lahf
push
pop
pusha
mov
int
test
ret
sbb
xlat
shll
data16
loop
xchg
adc
loop
outsl
sbb
mul
arpl
sbb
dec
int
and
fbld
jle
insl
push
xor
jae
fisubrl
in
push
jbe
shlb
nop
mov
xor
sar
xchg
outsl
xor
mov
lods
es
ds
adc
int3
cld
int3
out
jo
jge
sbb
adc
jl
jecxz
cmpsl
insl
jbe
fsubrs
mov
loope
loopne
cs
insb
out
cli
mov
jne
in
sub
in
dec
dec
cmpsl
rcrl
das
jp
pushf
add
push
aam
dec
fsubr
adc
stos
sbb
jp
adc
fld
shrb
lds
movsl
pop
mov
popf
mov
rorb
jmp
lahf
sbb
insb
jle
sbb
mov
inc
xchg
mov
rolb
pushl
sbb
and
daa
xchg
aaa
dec
mov
movsb
popf
fwait
ds
sbb
adc
adc
jne
je
loope
jb
cmp
pop
push
jo
scas
jae
je
inc
hlt
jne
push
outsl
fcmove
xor
jnp
cwtl
dec
ss
daa
repnz
sub
sar
and
xchg
inc
mov
cmpsl
and
jb
jbe
rorl
push
push
xor
xchg
add
xor
stc
leave
sub
jns
adcb
icebp
cmc
and
sbb
mov
adc
dec
lds
pop
jbe
rcr
out
mov
adc
lea
mov
jle
fldcw
outsb
mov
push
dec
js
je
outsb
hlt
add
inc
in
lods
add
ret
loope
sbb
inc
std
dec
xor
in
push
jo
sub
mov
int3
jecxz
sbb
rep
jmp
popa
xchg
sbb
mov
into
cmp
adc
cltd
in
mov
jge
jbe
test
std
push
cmp
jns
dec
or
cld
ljmp
xchg
ljmp
inc
mov
int3
xchg
in
hlt
jae
lcall
mov
or
pusha
xchg
jl
sub
lahf
enter
mov
test
rolb
fwait
into
jne
jae
push
rclb
testl
add
ds
pop
sbb
insl
inc
sbb
adc
shlb
xchg
inc
cli
jmp
mov
push
inc
sbb
daa
push
cmp
arpl
fcompl
popa
mov
fwait
cmp
add
sti
adc
pop
mov
movl
addr16
sub
jo
push
unpckhps
cltd
jmp
les
loopne
bound
pop
or
aad
ret
gs
jbe
xchg
push
or
mov
xor
push
into
jecxz
jg
cwtl
pop
leave
xchg
mov
push
mov
xor
push
xor
lods
sar
fldln2
mov
lahf
jp
test
inc
stos
jecxz
mulb
addb
test
pop
in
leave
shll
fsts
test
fiaddl
scas
repnz
push
into
sbb
ja
or
sub
add
daa
shlb
or
into
xchg
repz
jl
mov
testb
xchg
sbb
cmp
ss
les
stc
fisttps
neg
mov
dec
fdiv
repnz
mov
mov
mov
or
lret
cmpl
push
jbe
lds
dec
shl
dec
out
xor
arpl
inc
xchg
xchg
ljmp
mov
leave
aad
je
and
or
push
adc
loopne
hlt
cmp
jno
lds
int
std
pop
cmp
mov
jne
and
or
popf
or
pop
push
pop
sbb
lret
and
pop
hlt
cmp
pushf
shlb
enter
cmp
addl
sub
and
mov
jnp
shr
and
push
dec
push
data16
fldenv
loop
sub
push
aaa
pushf
inc
lods
pop
push
mov
inc
add
std
or
push
int
fwait
dec
xchg
pop
jo
and
pop
jl
or
loop
test
sbb
imul
add
lods
jno
cmp
xor
sbb
repz
ret
fimull
sbb
clc
sar
sbb
ficomps
divb
movsb
add
mov
or
fisubs
test
sahf
shrb
rcl
mov
inc
and
xor
mulb
sub
lret
pop
stos
pop
sbb
xchg
mov
jp
xor
push
jp
pop
lea
lods
icebp
enter
mov
adc
xorb
xchg
pop
mov
xchg
xor
pop
dec
lods
clc
leave
loopne,pt
ror
or
div
inc
dec
or
or
cmp
arpl
mov
xchg
jb
push
fisubl
xchg
mov
inc
fsubrs
push
dec
addr16
cs
dec
sub
add
xchg
mulps
jge
push
in
pop
popa
mov
repz
dec
xchg
dec
out
push
mov
repnz
jle
clc
aam
lahf
outsl
pop
out
lret
adc
sbb
sahf
and
loope
pop
fs
lods
inc
repnz
push
cmc
xchg
mov
loope
lds
push
jo
scas
sbb
nop
xlat
subb
sahf
jb
hlt
mov
lods
pop
imul
cwtl
inc
pop
jmp
jl
or
and
cli
leave
bound
or
imul
ret
inc
in
notb
and
push
scas
fisttps
cmp
es
mov
add
dec
jae
jg
out
xor
push
mov
imul
rcll
cwtl
dec
sbb
push
pop
mov
mov
cld
loope
test
ficoml
cmp
test
sub
es
inc
or
aam
add
xchg
fs
ljmp
mov
xor
in
ljmp
popa
push
mov
scas
jae
divl
jno
popa
sub
push
icebp
or
out
or
sub
lret
mov
les
sub
pop
jmp
out
mov
mov
push
test
pop
lods
lahf
xchg
pop
jae
dec
ja,pt
pusha
sarl
push
fs
fcoms
adc
push
or
pop
cli
mov
outsb
lds
cmp
sub
out
jne
pop
sbb
dec
mov
jmp
cmp
jmp
std
nop
mov
cs
shl
in
les
rcrb
lods
je
xchg
mov
fisttpll
inc
mov
mov
pop
jb
popa
and
jl
push
scas
incb
and
ss
jecxz
add
out
and
loopne
test
outsb
jecxz
fisttps
or
jae
pop
push
nop
rcr
sbb
xor
adc
scas
int3
sub
jns
shlb
cltd
pop
mov
outsl
insb
imul
jle
xchg
or
xchg
faddp
push
sbb
mulb
inc
out
sbb
ss
test
mov
sub
fsubl
int3
das
cmp
dec
in
not
lods
lret
sub
adc
pop
sub
sub
lret
jbe
sub
in
jp
in
js
fisubrs
or
int3
mov
lods
test
dec
out
cmp
jl
movsb
subl
arpl
shrb
push
sbb
je
mov
or
add
stos
jo
lds
pop
nop
out
shrl
xchg
jmp
sbb
xchg
data16
mov
jmp
sub
repz
sub
ffreep
cmp
dec
or
jno
xor
sarb
cmp
mov
push
xor
lods
push
add
jb
mov
dec
and
xor
mov
cltd
daa
sahf
sahf
inc
subl
lock
and
mov
addr16
stc
mov
mov
push
mov
mov
jg
int3
mov
outsl
loop
call
inc
mov
inc
push
cmpsl
lret
popw
xor
mov
inc
add
pop
pop
mov
fldl
outsb
mov
loop
add
mov
lret
popa
sbb
pop
lahf
or
stos
push
sbb
xchg
or
in
ret
out
jnp
hlt
inc
shll
mov
and
popf
test
add
sbb
mov
dec
stos
or
xor
mov
pop
out
jne
popf
push
stos
xor
sub
jbe
outsl
dec
and
dec
xchg
mov
fnstcw
lret
fistpl
cmpsb
jg
mov
cmpsl
xor
loop
xor
enter
rcl
mov
movsb
dec
xchg
adc
lods
dec
sbb
andb
xor
in
and
mov
leave
xchg
cmp
pop
lahf
test
popf
stc
and
pop
lret
xchg
add
pop
aas
out
and
cmpl
insb
ret
test
std
into
or
popf
into
xchg
cmc
lds
pushl
add
loope
out
mov
sbb
cmp
adc
dec
shll
and
xorl
and
mov
ss
pop
inc
lock
inc
outsl
stos
adc
pop
cs
sbb
pop
pop
mov
fisubs
push
xchg
mov
shrb
sahf
scas
jns
inc
scas
stos
arpl
fldenv
mov
add
aas
sub
jge
stos
bound
cld
popa
ljmp
in
les
loope
xchg
cmp
xlat
mov
adc
shlb
repz
xlat
and
jge
inc
cli
clc
shlb
daa
sbb
mov
sub
sub
pop
xor
mov
ror
and
aas
fstp
mov
notl
sub
dec
addr16
mov
pop
xchg
icebp
or
out
je
insb
xchg
pop
xchg
push
inc
std
mov
inc
testl
outsl
inc
or
adc
xlat
loope
insl
adc
xchg
cmpb
sub
sub
jmp
sbb
pop
into
inc
and
out
mov
jg
jne
in
mov
lret
or
mov
les
fdivrs
cwtl
or
sti
mov
push
lea
mov
sbb
int3
cmc
sub
mov
inc
cmp
sub
xor
test
pop
jecxz
les
mov
scas
or
push
mov
xor
sbb
bswap
gs
xchg
std
inc
fisubl
mul
rol
mov
add
mov
outsl
pop
out
das
out
call
jg
add
imul
push
xor
fldl2t
cmp
pusha
lea
comiss
pop
orl
hlt
cmp
adc
pop
test
add
jge
enter
jns
adc
rorl
idivl
sub
xchg
and
xor
iret
adc
and
xor
push
push
cmp
pushf
or
cmp
jmp
imulb
aaa
xchg
dec
in
and
xchg
lahf
roll
sub
insl
and
mov
xlat
mov
push
js
cmp
dec
lods
movsb
fwait
inc
sub
mov
xor
adc
outsb
int
je
daa
mov
sbb
test
test
push
rorl
ret
push
adc
push
lret
add
and
add
outsb
mov
in
test
add
cs
jle
orb
sub
push
or
in
pop
jno
div
and
mov
ds
lcall
pop
ja
mov
rcrb
pop
jbe
jmp
iret
sub
xchg
push
fldl
ret
push
neg
or
addl
popa
mov
mov
mov
cmp
push
testl
xor
out
adc
mov
lock
inc
cs
int
enter
push
loop
xchg
add
jnp
inc
stos
jp
xlat
xor
sbb
ds
jge
push
push
inc
pop
dec
mov
dec
xor
call
mov
add
push
jo
test
or
mov
enter
jns
gs
xchg
pop
add
ja
jbe
outsb
test
std
sub
roll
or
ja
push
lods
cwtl
mov
lock
notb
xor
push
inc
mov
loopne
mov
fstpl
mov
lods
xchg
cli
cwtl
jbe
adc
test
lcall
dec
cld
jle
cmp
das
sbb
lods
loopne
cmp
xchg
das
lret
cmp
adc
xchg
fwait
sbb
cmp
rcl
pushf
or
sbb
xchg
xor
andl
cmc
adc
add
icebp
rorl
rcrl
push
in
test
mul
imul
adc
orb
inc
sub
movsb
dec
jno
cmpsb
shrl
cli
cmp
mov
loopne
testb
ss
lret
sbb
pop
std
inc
andl
mov
mov
sub
imul
imull
inc
pop
roll
xor
ljmp
mov
fld
incl
mov
xor
enter
lahf
je
rcr
rorb
outsb
push
test
aaa
pop
int
add
aad
aad
sub
int3
rcr
mov
dec
mov
insb
sub
push
xchg
icebp
sub
test
sub
fdivl
lcall
mov
xor
loopne
daa
pop
dec
mov
loope
pop
mov
mov
push
pushf
xchg
call
mov
adc
jne
call
and
je
adc
lahf
testb
push
aam
jns
test
rol
or
xor
xor
lret
mov
je
ds
mov
out
mov
std
mov
jp
divl
adc
mov
pop
popf
fs
cmp
incb
jo
decb
jecxz
clc
lds
fimull
aaa
popa
mov
or
icebp
sub
imul
mov
jg
loope
mov
or
ret
or
mov
in
cs
inc
fcmovb
adc
cwtl
shlb
sub
add
jb
jns
mov
xchg
sbb
repz
jns
dec
in
xchg
movsl
das
pop
imul
xchg
cld
xlat
int3
jo
aam
lods
jmp
movsb
lods
insl
cmp
mov
mov
push
inc
subb
loopne
pop
rcrl
xor
and
push
add
cmpl
int
call
lret
push
test
mov
addl
out
push
int
cmp
insl
mov
gs
mov
adc
dec
out
push
push
lock
lds
jne
mov
out
fsubl
sub
push
fldl
and
daa
sub
cmp
shll
push
lahf
push
cltd
inc
adc
add
dec
sub
push
mov
push
push
mov
movsl
stos
mov
push
imul
fisubs
mov
out
mov
xchg
xor
bound
jg
dec
mov
mov
in
outsb
dec
jmp
ffreep
sub
inc
cwtl
mov
and
imul
leave
faddp
mov
xchg
cltd
cmp
divb
ret
mov
testb
mov
mov
hlt
xchg
scas
push
inc
sbb
test
setl
imul
lds
cs
aam
mov
cmpsb
xchg
jb
fwait
xchg
fwait
adc
xchg
xchg
addl
mov
cs
imul
add
push
mov
and
out
mov
std
ss
dec
pusha
push
lds
leave
and
jb
jl
pop
and
iret
add
sub
pop
jb
mov
and
es
mov
sub
daa
cld
aas
jecxz
in
test
cmc
jnp
xchg
bound
cmp
repz
pop
mov
aas
in
push
jle
rorl
mov
jb
push
push
imul
mov
sub
movsl
icebp
lret
dec
loope
xchg
add
aaa
adc
jl
mov
inc
fs
mov
sub
gs
ret
insb
adcb
mov
test
xor
xchg
shlb
popa
or
xor
mov
xchg
sti
outsl
ja
test
mov
cs
shl
jmp
lods
dec
and
lcall
xchg
or
push
sub
movsl
jae
push
inc
mov
jne
repz
pushl
fstps
imul
sbbb
rcl
sub
xor
out
das
mov
pop
sbb
inc
cmp
mov
pop
xchg
divb
mov
jbe
push
addb
cmp
or
leave
out
and
mov
leave
xchg
cltd
push
test
cs
xor
mov
push
aad
cld
bnd
repz
jg
js
inc
mov
lds
and
add
cmpsb
jmp
and
fsubs
sub
imulb
enter
inc
int3
push
rcr
lock
cmp
push
ret
in
cmp
lods
mov
inc
xchg
pop
sub
and
shrl
and
ja
insb
iret
inc
pop
pushf
dec
pop
mov
pop
push
push
or
adc
sbb
and
lahf
push
shrl
adc
mov
add
mov
jge
dec
dec
pop
cmp
xor
push
jecxz
cmp
fdivrs
in
push
sub
push
test
or
movsb
and
cwtl
jnp
insb
xor
add
xchg
mov
push
cmp
inc
lcall
aaa
jno
sub
dec
jl
ds
out
scas
dec
icebp
sbbl
in
scas
pusha
lcall
ss
xchg
cmp
les
and
or
mov
rcrl
mov
jbe
loop
cmc
dec
lret
je
sub
push
insl
ja
bound
movsb
pop
xchg
lods
pop
and
inc
movsb
sbb
addb
mov
dec
fistpll
frstor
jo
xchg
jnp
shrl
shll
jnp
xor
cmp
cmp
icebp
jo
insl
adc
sub
mov
jmp
movsb
or
daa
call
js
xor
mov
andb
lds
call
sti
shlb
mov
lock
pop
push
or
lahf
inc
mov
xor
mov
shll
rorl
mov
popf
shr
iret
test
stos
xchg
mov
lret
int
push
dec
jne
mov
dec
mov
arpl
les
pop
ja
add
cli
pop
int
lret
fidivrl
sarl
or
addb
out
sub
lock
aam
xor
cltd
sub
xchg
fcmovne
jp
add
push
pop
push
and
mov
xchg
popa
syscall
fcompl
lods
sub
pop
fildl
mov
iret
jmp
mov
cs
loop
dec
push
scas
rolb
fs
mov
imul
mov
testb
out
scas
fnsave
sbb
hlt
jne
or
mov
xchg
insl
pop
xchg
mov
nop
dec
jne
mov
andb
xchg
mov
addr16
fs
inc
jnp
or
jmp
dec
cltd
pop
xchg
test
push
pop
pop
loopne
or
mov
mov
insb
sub
lds
inc
fcmovnbe
and
adc
addr16
mov
leave
test
xchg
into
repnz
fcompl
jmp
ja
ds
jecxz
xor
xchg
inc
jg
pop
ljmp
fisttpl
jecxz
mov
cs
sub
pop
scas
mov
ja
rorb
xchg
enter
sbbb
insb
shl
mov
jb
mov
mov
imul
test
loop
imul
dec
test
xor
int3
or
inc
pop
xor
pop
rcr
push
push
xchg
adc
pop
mov
pcmpeqb
fists
cltd
xchg
inc
dec
iret
scas
cmp
inc
inc
push
je
loope
push
das
std
cmp
sbb
push
jp
or
cmp
and
sahf
xor
rolb
sub
cltd
adc
movsb
and
push
iret
jl
cwtl
movl
mov
fadds
movsb
push
push
std
fistpll
fs
shll
xor
in
adc
add
mov
cwtl
lcall
pop
icebp
lea
das
inc
jg
cs
mov
mov
pop
lds
testb
ljmp
rcrl
mov
lods
insl
imul
mov
pop
lret
js
mov
subb
or
mov
and
imul
dec
repnz
cmpb
dec
seto
cmp
xor
rorb
fwait
cmp
pop
xor
xor
addr16
insb
dec
push
add
jae
movsb
xchg
and
bound
sbb
rcr
clc
test
hlt
xacquire
add
add
jecxz
out
test
inc
pop
jle
iret
repnz
xor
xor
jmp
xor
dec
pop
sbb
pop
mov
fwait
mov
mov
jb
mov
incb
jecxz
ret
sbb
clc
inc
add
repnz
pop
pop
pop
cmp
pushf
and
inc
push
das
mov
xor
imul
enter
loopne
pop
mov
into
sub
out
push
hlt
ret
xchg
or
orb
lcall
fcmovnu
unpcklps
cmp
dec
mov
lahf
mov
xchg
out
mov
pop
mov
jg
add
jo
lret
mov
and
insb
inc
inc
into
push
scas
xchg
or
mov
mov
fwait
cld
dec
mov
mov
je
pusha
out
sbb
sbb
leave
dec
cmp
lds
imul
pop
or
stos
cs
mov
shrb
fstl
and
subl
test
mov
adc
jp
lods
nop
sub
jnp
push
xchg
jge
pop
fcom
dec
sbb
mov
push
scas
je
out
std
fs
out
xchg
sbb
icebp
movsb
loopne
imul
shll
inc
xor
sub
mov
rol
cmp
and
pop
adc
rolb
cmp
push
aas
xchg
test
jae
xchg
inc
bound
dec
mov
xchg
stos
test
pop
cmc
dec
dec
add
rcrb
push
daa
dec
or
jnp
mov
jno
hlt
sbb
sub
out
aaa
call
jne
pop
or
push
lds
mov
loop
jbe
push
dec
xchg
imul
cmp
push
add
add
inc
test
clc
pop
jo
xor
rolb
fmull
enter
mov
push
jbe,pn
repz
popf
out
outsl
dec
in
divb
mov
fistpl
in
pop
sub
xor
je
test
lret
inc
jno
push
xchg
dec
and
mov
push
dec
or
cmp
mov
repz
hlt
xchg
jae
push
push
push
repnz
jo
insl
jnp
jo
mov
and
adc
xchg
dec
push
cmp
xor
ljmp
fs
sbb
testl
xor
pop
aaa
jae
ret
sub
insb
sbb
adc
mov
lcall
leave
push
sbb
shlb
sub
cs
in
cltd
xchg
rclb
jp
cmp
stos
andl
add
or
test
push
fistpl
cmp
inc
mov
jl
cmp
outsl
fsubs
fbld
fs
jnp
add
lock
and
test
into
adc
or
test
int3
cmc
es
or
add
xchg
jnp
add
jmp
mov
pop
pop
push
mov
test
ljmp
xchg
pop
mov
rcrb
arpl
and
std
or
out
sub
fldlg2
inc
outsb
aad
iret
mov
pusha
or
addl
fldenv
push
jg
imul
sbb
mov
adc
xchg
call
inc
push
sub
pop
fidivs
imul
add
mov
fwait
shrl
das
sub
das
aad
repnz
lahf
movsb
or
les
movl
and
mov
pop
es
add
roll
pop
jecxz
iret
out
sbb
push
aam
or
sub
or
dec
pushf
push
adc
cld
lods
repnz
fiadds
jmp
js
lock
vpsubq
mov
sub
mov
nop
add
jb
or
cli
adc
in
and
sub
lods
js
xchg
rcrl
nop
lret
shl
ja
inc
lock
daa
push
int
sub
fsubr
mov
lods
cli
sahf
mov
jg
xor
push
xchg
popf
jmp
idivl
and
int
or
xor
inc
inc
add
into
aaa
iret
std
mov
out
or
and
fstps
and
ror
mov
jbe
pop
or
add
xor
adc
sub
out
mov
loop
bt
mov
in
dec
pop
aaa
xchg
popf
mov
bound
js
rorb
mov
jle
call
mov
mov
xchg
adc
loop
fisubrs
into
mov
and
lds
es
scas
lahf
ss
mov
ret
imul
push
mov
cld
sbb
pop
adcb
jmp
test
lods
push
push
sbb
jg
push
sarl
insb
pop
jae
xor
shlb
inc
xchg
int
and
dec
les
aam
cmc
sbb
negb
aaa
mov
cmp
mull
ljmp
sbb
in
mov
sub
mov
xchg
ror
pop
jae
sub
xor
cs
xor
adc
ret
inc
inc
daa
xchg
and
shl
inc
mov
adc
ret
dec
pop
nop
daa
or
clc
inc
dec
cmp
xchg
repnz
lahf
call
jo
jp
fcmovnb
xchg
mov
movsb
aaa
push
or
mov
adc
sub
add
xchg
cmc
outsl
lret
push
arpl
dec
fdivl
xor
hlt
pusha
jno
cmc
adc
xor
cltd
stos
in
call
mov
hlt
cmp
outsb
push
test
ja
sbb
sub
push
inc
push
and
dec
enter
adc
push
bound
inc
add
jmp
and
inc
sbb
or
add
in
jns
ret
outsb
mov
arpl
pop
or
pop
ficomps
cmpsl
and
xchg
dec
push
addr16
xchg
add
in
in
xchg
aad
jmp
fwait
pop
push
xchg
xor
or
in
popf
ret
cmpsb
mov
inc
sbb
decl
fcomps
ret
push
int3
jge
mov
gs
push
fcomi
inc
daa
sub
scas
rclb
xchg
test
das
aas
pop
jb
pop
add
jg
outsb
lret
add
dec
pop
cwtl
fisubrs
les
jns
call
dec
adc
fs
inc
jb
xor
sbb
pop
sahf
mov
idiv
xchg
insb
std
out
or
addr16
fwait
jg
sarb
inc
ljmp
lock
inc
sub
mov
movb
test
sbb
cmpsl
call
outsb
dec
ficompl
loop
nop
mov
in
in
and
ret
bound
pop
xchg
mov
cmp
rcrl
pop
pusha
pop
call
push
dec
popa
fwait
pop
movsb
es
and
push
dec
sub
sbb
leave
and
out
cmc
shrl
cwtl
lea
push
mov
call
shrl
xor
stos
cli
mov
cmp
das
mov
mov
or
sahf
xor
mov
cmpsb
aaa
jge
enter
mov
fidivs
jne
sbb
push
lcall
xor
pop
xchg
inc
je
xchg
and
cmp
fs
pop
dec
movsl
sub
test
sti
in
scas
mov
push
mov
add
xchg
lea
pop
arpl
and
sbb
into
adc
int
sub
repz
xchg
enter
ret
mov
jge
mov
sti
cwtl
jb
mov
xchg
mov
cmp
jmp
mov
adc
adcb
xchg
shrb
add
insl
push
xchg
adc
cwtl
js
test
fistpl
inc
dec
lahf
mov
pop
adc
data16
push
adc
cli
push
jp
push
scas
nop
adc
ljmp
add
jae
cwtl
dec
sbb
mov
fbld
add
adc
inc
xor
adc
push
fnsave
cmpb
push
and
sub
out
js
push
ret
pop
xor
xor
mov
jle
and
add
sub
push
out
mov
cmp
nop
mov
fiaddl
lret
cs
movsb
in
jl
std
mov
sbb
xor
add
jecxz
pop
push
ljmp
jns
push
jno
fsubrl
out
push
out
sub
fcomip
scas
pop
dec
jnp
loope
pop
mov
push
mov
scas
push
aaa
and
call
mov
mov
xchg
xor
movb
ds
push
jb
xor
mov
xchg
lds
out
lcall
pushf
in
inc
scas
int
cmp
add
sub
ss
dec
add
inc
pop
push
ds
or
ja
call
ror
or
lcall
lds
xor
aaa
sbb
out
jecxz
jecxz
in
sbb
in
scas
aaa
sbb
in
and
push
sbb
mov
mov
gs
inc
sub
cmp
inc
sbb
xchg
mov
dec
pop
addl
and
xlat
aas
sbb
popf
push
fs
adc
cmpsb
in
mov
ss
or
popf
fldenv
xor
xchg
repnz
cltd
hlt
lahf
mov
test
or
inc
jb
or
insl
add
xlat
popf
rcrl
jb
fisttps
jmp
pop
cmp
test
cmp
jle
outsl
adc
fwait
or
es
scas
les
xor
inc
aaa
nop
xor
fsubp
cs
xor
inc
cmpl
or
bound
rcl
inc
ss
adc
addr16
push
mov
cmp
mov
sub
pop
test
repnz
mov
stos
mov
daa
push
lds
cmc
xchg
int
xchg
mov
xchg
les
fiadds
test
sahf
jb
mov
dec
sbb
notl
sbb
jb
lcall
int
push
hlt
imul
js
mov
cmp
fcomps
aas
pop
bswap
dec
sub
dec
test
cld
mov
dec
in
daa
lea
inc
test
test
lods
sub
arpl
mov
push
or
inc
adc
leave
mov
sbb
xor
jl
dec
pop
outsl
stos
mov
pushf
sub
leave
fistl
push
pop
repnz
mov
fdivs
sbb
add
push
rorb
or
int3
cmp
cmc
lods
icebp
hlt
fwait
jns
ds
jmp
test
jb
aam
push
push
mov
iret
js
push
mov
ror
xor
adc
jecxz
jmp
cmc
or
xchg
mov
lea
stos
dec
lcall
jbe
pop
lock
jg
ds
scas
sarl
xor
push
mov
cmpsl
je
cli
and
cmpl
sti
sbb
push
jg
bound
mov
insl
jbe
mov
nop
xor
xchg
fimuls
mov
sub
add
call
addb
outsl
fimull
jp
lret
mov
in
aas
out
iret
jge
pop
in
test
mov
mov
dec
js
dec
xor
fstp
outsb
mov
int3
dec
and
fwait
jle
mov
hlt
daa
stc
sbb
fstps
pusha
rol
push
mov
sub
mov
sub
dec
std
push
stos
addr16
adc
cwtl
push
cld
push
sar
cld
adc
inc
sbb
popf
leave
shl
mov
lret
lcall
xor
arpl
fwait
push
ss
mov
mov
iret
sbb
ja
outsb
push
inc
test
fsubrs
push
or
js
push
enter
out
sub
andl
mov
fldt
shll
xchg
mov
fistl
dec
loopne
std
and
inc
push
inc
push
mov
or
ret
js
inc
loop
dec
ret
iret
lret
outsl
pushf
mov
sub
nop
enter
cmpl
push
mov
test
jmp
add
jo
mov
or
pop
sub
adc
mov
out
outsl
es
data16
pop
adc
push
hlt
or
or
push
inc
pop
mov
jb
xor
imul
leave
cmc
test
pop
add
mov
dec
aad
mov
sbb
mov
rcl
ljmp
dec
int
out
mov
add
mov
dec
aaa
les
add
iret
sub
xor
xchg
mov
mov
out
ja
cltd
ss
les
mov
push
or
aam
push
cmpsl
cltd
lahf
pop
mov
pushf
lret
cmp
add
std
stos
out
mov
sti
jmp
cmpsl
test
out
ror
mov
xchg
add
cwtl
loopne
sub
sub
dec
jne
xor
test
loopne
sahf
fwait
sub
and
insb
jae
adc
in
push
shrl
jl
je
xchg
js
pop
and
cmp
mov
ja
fsubl
dec
out
repnz
cmp
orb
ss
jmp
or
sbb
sub
movsl
adc
rcrb
push
xchg
fidivl
in
push
call
push
mov
mov
jne
test
daa
mov
lcall
stc
or
shrl
adc
mov
test
mov
pop
leave
mov
add
push
test
loopne
mov
jb
push
sbb
push
ror
mov
rolb
mov
pop
mov
add
imul
adc
pop
out
xor
jp
or
test
dec
lcall
les
mov
push
mov
fnstsw
sahf
into
fldcw
std
xchg
push
fdivrl
mov
jmp
pop
test
push
mov
rolb
sub
pop
xchg
shll
mov
inc
outsb
mov
xor
pop
xor
stc
in
cltd
jp
pop
xor
roll
cli
sub
jmp
daa
leave
fidivs
test
xchg
xchg
sub
mov
or
pop
data16
addl
pop
pop
lods
ret
dec
dec
movsb
into
push
ss
sbb
sub
aam
mov
aad
popa
lods
sbb
test
adc
gs
jge
mov
movsb
mov
mov
adc
in
add
jne
inc
addr16
mov
push
pop
sub
testb
into
inc
out
mov
pop
lcall
sbb
outsl
into
sub
in
cs
inc
orb
xor
and
aad
repz
iret
mov
dec
add
pop
mov
adc
inc
imul
int3
mov
fs
std
add
aaa
out
jnp
je
shll
pop
arpl
adc
or
pop
fisttpll
xor
mov
daa
pop
adc
mov
cmp
mov
stc
inc
insl
mov
fists
imul
xchg
and
cwtl
xchg
mov
and
insb
jp
stos
sub
adc
or
cli
mov
daa
mov
ror
and
fnstsw
mov
ss
sbb
aas
icebp
into
shll
pop
fwait
les
popf
dec
loopne
bound
xor
repz
enter
inc
and
sbb
mov
or
shl
ret
jp
insb
aad
cmp
int
pusha
mov
mov
sub
cltd
and
xor
adc
sti
ret
sub
decl
mov
sti
cmp
cwtl
adc
add
dec
jno
pop
jp
and
adc
in
push
cltd
aad
loop
dec
aaa
lods
and
xor
pop
in
pop
xorb
in
sbb
arpl
sub
mov
pop
pop
iret
ficompl
out
mov
lods
cmp
mov
fsubrs
cmp
push
fmulp
or
stos
loopne
dec
jp
mov
outsb
or
call
xchg
outsb
inc
or
jecxz
jl
addl
bnd
sbb
outsb
sub
inc
add
xchg
into
scas
push
push
fwait
test
in
mov
or
mov
sbb
or
lret
cs
mov
mov
add
inc
das
inc
jle
mov
mov
shl
psllq
add
or
popf
testb
or
jp
repnz
push
out
jb
cmpsl
adc
pop
jmp
add
mov
stos
in
and
push
push
cmp
mov
adc
xor
testb
ljmp
mov
orl
loop
stos
xlat
inc
jg
jo
pushf
mov
and
cmpsl
mov
pop
and
mov
xorb
out
pop
push
mov
sub
popa
jae
cmpsl
mov
mov
adc
push
add
fxch
es
out
aam
xchg
xchg
outsb
push
cltd
mov
popa
repz
lcall
fstl
daa
idivl
sbb
add
testb
ficoml
xor
cmp
movsb
mov
shlb
xchg
bound
jae
dec
cld
repz
add
sbb
addb
inc
mov
sub
xor
test
or
pop
test
pop
cmc
xorl
mov
xor
pop
into
fs
das
repnz
xor
fidivrs
cmp
jmp
shrl
sub
fcomps
mov
nop
jb
mov
pop
mov
sub
in
mov
xor
sub
xor
test
sbb
mov
jmp
vpsubw
pop
sahf
mov
jmp
sbb
push
mov
arpl
out
sahf
jb
inc
pop
rep
cltd
mov
enter
lock
add
lret
out
cmpsl
xchg
jp
push
jg
aam
fnstenv
popa
jecxz
iret
inc
mov
mov
pushf
sti
mov
mov
mov
stc
ljmp
subl
mov
lods
jb
dec
out
and
push
jp
inc
je
dec
dec
insb
cmp
jmp
dec
negb
mov
mov
xor
jae
mov
push
nop
subb
xchg
repnz
out
neg
jp
rolb
filds
push
mov
pop
test
jno
and
enterw
mov
or
dec
fcomps
mov
xchg
ret
jg
cmp
push
shll
fwait
pop
test
rcr
adc
adcb
push
xor
jle
test
adcb
push
cwtl
pusha
aam
insl
mov
jmp
sub
or
cli
dec
lods
push
jle
lcall
jb
or
adc
ret
divl
cli
pop
jns
inc
jecxz
stos
sub
je
imull
imul
into
outsb
dec
iret
mov
mov
mov
popa
andb
pand
dec
sbb
xor
inc
shl
add
jb
ret
pop
jg
dec
sbb
hlt
cmp
inc
shll
push
mov
rcrb
cli
adc
in
add
ljmp
xchg
jb
jle
mov
aam
add
into
cmpsl
popa
in
jge
or
or
fwait
jl
pop
addb
leave
mov
jb
popf
addr16
fsub
sub
fwait
sbb
rorl
dec
pop
xor
xchg
shlb
stos
jbe
xchg
test
je
pop
orb
and
pop
out
jmp
mov
mov
std
mov
xchg
mov
lock
jns
mov
sbb
jp
or
push
int
push
push
jnp
movsb
mov
or
lahf
push
fadds
cmc
dec
movsb
ss
sti
xchg
push
push
cltd
or
nop
xchg
jb
inc
fdivs
sbb
mov
sub
scas
sub
lea
lods
push
jo
cltd
out
xchg
mov
ja
imul
xor
add
mov
leave
add
aas
push
lods
das
sti
jl
push
repnz
adc
or
cmp
shll
mov
sarb
rcrb
ret
jg
mov
dec
int
dec
xor
psubw
cwtl
das
xchg
call
bound
fiaddl
jnp
or
pop
test
stos
aam
js
cmp
mov
sarb
or
sub
fbstp
xlat
mov
or
faddl
andl
js
cltd
mov
pop
mov
sbb
cwtl
mull
js
jg
dec
test
mov
inc
daa
mov
xor
and
adc
imul
mov
es
xor
gs
lret
aam
scas
and
adc
pop
lock
inc
cmp
dec
xlat
mov
dec
imul
xor
dec
es
int
lods
mov
test
sbb
lods
sahf
inc
sub
xchg
lret
repz
and
sbb
or
inc
test
nop
cwtl
flds
push
push
pop
ret
lock
dec
xor
sbb
and
mov
daa
arpl
or
out
pop
int
std
mov
xlat
dec
gs
gs
fcoms
pop
mov
outsl
adc
lret
xchg
dec
pushf
pusha
jne
cwtl
mov
scas
fidivrl
out
adc
mov
cmp
andb
cmp
push
jmp
mov
mulb
repz
jmp
mov
or
aaa
adc
mov
mov
mov
xor
sub
or
outsb
push
or
xchg
ficompl
das
add
insl
add
mov
xor
ss
in
dec
lds
dec
sahf
mov
mov
adc
jno
loop
sbb
pop
inc
inc
push
jge
stc
lock
sbb
and
inc
test
dec
sbb
xchg
lahf
mov
int
jp
fldl
xor
dec
or
pop
loopne
ja
insl
imul
jbe
cld
and
adc
sub
xor
cs
xor
adc
mov
mov
out
maskmovq
testl
adc
cmpsl
cmp
mov
sub
int
mov
clc
and
mov
or
inc
push
insl
jp
mov
cmp
fwait
pusha
sbb
ss
pop
test
jno
mov
pushf
outsb
mov
lcall
sti
sbb
sbb
pop
cwtl
or
aad
xlat
mov
js
aad
shrb
jnp
fildl
bound
jmp
xchg
add
jg
test
loope
mov
mov
lods
push
xor
xchg
push
pop
push
test
sbb
lods
sbb
cmpsl
or
pop
mov
lahf
dec
mov
lock
mov
cmp
push
loop
xor
xchg
stos
notl
xor
notl
xor
xor
pop
lcall
xlat
lds
pop
sub
cmp
and
and
dec
inc
cmp
xor
jg
subb
std
lcall
xchg
outsl
cmp
inc
out
mov
ljmp
lret
iret
xor
push
insb
xchg
inc
inc
jno
outsl
inc
sub
xlat
sub
mov
sub
fcmovu
adc
ss
push
pop
outsb
mov
stos
cmp
int3
mov
add
adc
mov
leave
adc
add
ja
into
jnp
mov
jmp
push
add
lods
into
or
loopne
imull
shll
mov
enter
xchg
jecxz
mov
aam
push
inc
gs
pop
mov
or
jle
mov
test
push
and
sub
mov
jg
ss
gs
dec
sbb
hlt
and
std
dec
xchg
mov
cmpsb
lcall
add
mov
xor
pop
xor
loop
jno
mov
movsl
stos
rol
loope
adc
jb
outsb
fcmovnbe
add
test
pop
sbb
shlb
in
pop
pop
sahf
shll
sub
std
or
or
xchg
icebp
sbb
jg
pushf
mov
lahf
es
int
mov
cmpsl
mov
cwtl
pop
loop
push
imul
fwait
mov
test
jb
dec
andb
int3
sub
divl
adc
xchg
jb
inc
and
movsb
jb
incl
mov
xchg
sbb
popa
adc
sti
sub
in
xor
adc
add
inc
mov
rclb
mov
hlt
jb
clc
mov
or
pop
sti
mov
dec
lock
fs
ror
ss
int
mov
fcmovu
jecxz
inc
popa
push
shrl
mov
shrb
fiadds
test
mov
out
arpl
jb
jge
and
lret
push
mov
adc
out
xorb
lds
cmp
test
xchg
mov
sub
pop
shll
out
cmp
mov
dec
loopne
and
icebp
mov
inc
ja
mov
add
test
prefetch
or
push
push
pop
and
imul
rorl
jnp
sahf
inc
jle
jg
sub
push
int
xor
rclb
lds
ret
stos
subb
cmp
sbbl
popa
int3
loope
fidivs
push
add
cwtl
mov
dec
mull
mov
lods
xorl
leave
stos
data16
fidivrs
cwtl
insl
out
and
dec
lock
push
in
xchg
addr16
cmp
rcrl
dec
push
xchg
and
xchg
and
xchg
jo
or
out
jg
fiadds
mov
pop
aaa
mov
call
dec
cmp
cmp
int
pop
pop
add
faddp
fwait
or
nop
xchg
jns
outsl
mov
in
nop
mov
inc
mov
xchg
add
cmp
hlt
aas
orl
shrl
repnz
sahf
mov
cli
aas
movb
das
lock
in
lods
sub
sub
mov
int3
jmp
mov
aam
mov
outsl
lods
outsb
dec
mov
jmp
std
imul
les
ds
mov
or
call
int3
clc
inc
cli
cmp
mov
xchg
inc
sbbl
sub
in
out
dec
jne
cmpsb
imul
mov
jbe
mov
icebp
sbb
aam
fisttpl
imul
push
push
fidivs
sub
push
lea
or
shll
lods
mov
mull
pop
mov
sbb
mov
jnp
sti
dec
pop
lods
int
pop
dec
lea
mul
mulb
sub
out
sarl
sbb
ss
mov
mov
pop
sbb
cmp
mov
and
mul
pop
push
jae
xor
push
ljmp
xor
jle
pushf
mov
push
pop
jle
loop
or
sahf
sub
pop
or
xor
xchg
rcrl
jmp
dec
stos
rclb
in
sti
mov
out
lock
es
and
imul
in
dec
fwait
add
push
test
inc
pushf
fwait
jg
mov
call
dec
pop
mov
fs
test
adc
mov
push
add
je
push
mov
or
addr16
pop
cmc
aam
push
adc
mov
mov
add
push
insl
repz
inc
and
cli
xor
fmull
pop
aas
mov
jne
stc
cmp
das
dec
stc
pop
faddl
jo
imul
dec
pop
pop
popa
add
adc
inc
loop
clc
les
cmp
mov
xchg
add
mov
lea
jmp
lcall
into
aam
xlat
sti
pusha
stos
xchg
sub
aad
jb
enter
dec
push
lods
mov
call
mov
leave
sub
sbb
mov
lahf
pop
push
add
ss
add
ret
shrl
loope
movsb
out
ja
mov
xor
jp
jg
js
pop
cltd
mov
aaa
xor
repnz
popa
push
sbb
mov
adc
sbb
xchg
xchg
mov
adc
fstps
mov
and
sub
mov
push
add
data16
dec
jne
sub
dec
adc
mov
test
or
inc
inc
mov
loop
subb
and
xchg
jnp
popf
sbb
pop
mov
add
push
pop
call
mov
jmp
dec
inc
xchg
lret
and
ljmp
adc
imul
daa
xchg
xchg
pop
lds
inc
mov
inc
adc
push
xchg
ja
ljmp
out
test
aam
mov
shlb
pop
cmc
and
bound
cltd
and
sbb
inc
mov
xchg
ds
mov
mov
cmp
adc
inc
and
loopne
mov
mov
sub
test
mov
jge
mov
add
in
or
add
xor
and
mov
jmp
xchg
add
mov
push
xor
jge
and
movl
sti
in
pop
or
data16
je
dec
rcll
lods
gs
mov
lods
sbb
push
jo
out
int
lock
mov
pop
mov
aaa
pop
int
test
and
movsl
into
add
adc
inc
aad
or
fs
outsl
xor
ljmp
cmp
addr16
or
ret
sub
fstpl
xchg
rclb
scas
xor
cmpb
mov
jae
ret
lret
xchg
out
push
cmp
xchg
fadds
dec
cli
sbb
fidivl
repnz
imul
pop
or
nop
out
pop
test
test
jno
les
mov
outsb
pop
or
out
cmp
xor
hlt
sub
sbb
dec
mov
bound
adc
push
add
or
popa
test
jmp
jge
and
push
mov
scas
push
rcll
outsl
ds
push
insb
cli
cmpsl
out
add
mov
and
dec
sub
inc
test
rclb
jb
add
sbb
icebp
sub
repz
icebp
xchg
orps
add
xor
jns
mov
pusha
pop
inc
in
movsl
outsl
cmp
lcall
iret
cltd
fbstp
mul
lret
call
pop
and
xchg
loopne
arpl
push
adc
imul
cmc
lret
das
setnp
pop
cmp
pop
out
int
repz
fwait
aam
hlt
sub
adc
mov
dec
lahf
pop
pop
add
push
sub
stc
sti
lock
outsl
adc
mov
xchg
jg
out
push
and
jmp
push
test
adc
sbb
out
dec
adc
xchg
push
add
and
xor
pushf
pop
frstor
dec
add
fldl
add
jae
cmp
call
std
mov
test
mov
hlt
xchg
scas
or
scas
adc
jecxz
mov
dec
cmpsb
mov
stos
jne
arpl
mov
mov
mov
out
pinsrw
cmp
cltd
sbbb
in
sbb
push
cwtl
pop
and
int
int
dec
sub
cmpsl
stos
xor
mov
adc
std
aas
imul
cmp
orl
pop
sub
and
in
mov
dec
mov
repnz
call
xor
jnp
xor
nop
dec
fdivs
inc
xchg
cmpsl
add
jbe
xchg
stc
mov
and
add
addr16
push
cmp
icebp
mov
jne
dec
cld
add
aaa
push
sub
jns
fidivrs
cs
mov
mov
mulb
out
outsl
pop
lea
push
push
xor
pusha
cs
aaa
jmp
int
and
in
sbb
popf
sub
les
ret
cmp
sbbb
pop
mov
mov
mov
or
stos
fstp
out
mov
jecxz
cmp
cmp
push
jne
mov
dec
cmpsb
dec
lock
movsb
scas
push
cmp
fstl
xor
inc
imul
out
xchg
mov
lcall
aaa
xor
aaa
fnstsw
std
xchg
lea
jno
xorl
xchg
jge
mov
or
cmp
xor
adc
xor
fidivrl
es
sub
test
mov
xchg
lods
mov
push
jb
loope
jl
and
mov
push
xorps
sbb
pushf
std
pop
stos
lahf
addb
lods
and
clc
pop
arpl
mov
cs
lods
xor
mov
sbb
add
stc
cmp
add
adc
sub
dec
aam
push
int
sbb
jb
xlat
sub
pop
sbb
hlt
mov
and
xchg
and
hlt
outsb
jg
hlt
cs
and
mov
out
pop
popf
enter
pop
cmp
repz
cs
mov
push
sub
mov
shrb
insl
sbb
cmpsb
insl
push
lea
and
sbbb
inc
mov
dec
inc
fwait
pushf
mov
aaa
shl
sahf
loopne,pn
fnstenv
or
ss
inc
dec
and
fcomps
jb
mov
pop
jnp
mov
push
add
cmp
inc
sub
cmp
add
cmpsl
test
inc
lcall
into
insl
mov
xorl
jmp
adc
sbb
jg
sbb
rcrb
fdiv
adcb
into
clc
pop
jg
sarl
fwait
lds
cltd
add
push
pop
jbe
cmp
jb
fists
mov
sbb
in
jmp
in
nop
enter
loope
in
ret
cmpsl
cmp
int3
test
lea
push
popf
or
into
ss
adc
mov
icebp
daa
fxch
int3
fists
push
sub
xchg
jbe
mov
mov
leave
and
shlb
cmpb
mov
push
push
xchg
fimull
jmp
inc
loop
aad
xor
ds
stos
ret
ret
mov
mov
mov
outsl
inc
dec
mov
insb
mov
mov
adc
adc
fcomp
das
mov
or
clc
pop
adcl
mov
iret
enter
pop
xchg
fstps
fnsave
movsb
sub
cli
xchg
out
and
xrstor
add
cmp
stos
stos
hlt
mov
xchg
std
cmpsl
decl
fsubl
adc
lock
and
inc
sub
sbb
lea
push
xor
pop
jge
sub
enter
add
loopne
les
xchg
add
cmp
mov
xchg
cld
jecxz
cmp
jae
in
enter
xchg
dec
popa
mov
push
leave
pop
xchg
jmp
cmp
movsb
sbb
jnp
and
lcall
dec
xor
jae
push
mov
cld
mov
mov
push
add
fidivrl
loopne
mov
push
push
js
setb
push
mov
inc
add
sub
jg
insb
arpl
push
or
mov
cmpb
aaa
mov
call
adc
add
cmp
mov
xchg
sub
cmp
xchg
das
xchg
sbbl
lahf
outsl
divb
aam
adc
sbb
popa
add
jecxz
repnz
pusha
out
xor
push
adc
push
jg
mull
cmp
sub
inc
aam
test
push
test
jne
sub
or
xorb
cmc
dec
push
shlb
cmp
mov
test
sarb
faddl
pop
jmp
out
dec
cmp
push
xchg
jmp
jne
add
add
dec
pop
scas
fidivs
mov
cmp
sub
jle
sub
into
test
xor
mov
mov
mov
repz
rorl
add
dec
mov
pop
outsb
push
or
add
out
fistpll
out
sahf
jmp
cmp
mov
repnz
mov
cli
pop
sbb
xchg
cmp
and
movsb
xlat
dec
dec
js
add
mov
dec
ss
adc
or
pop
iret
cwtl
cmc
push
xchg
into
out
repnz
stos
jecxz
and
xchg
lret
stos
sti
fistpl
mov
cltd
inc
xlat
movsb
and
pop
pop
fidivrl
xor
cmpb
clc
push
dec
jnp
push
ja
mov
div
pop
addr16
xor
fsts
xchg
cltd
pop
pop
xor
int3
mov
jecxz,pn
sbb
jne
cmc
mov
std
push
notb
std
mov
aam
mov
jbe
pop
hlt
lods
test
xor
imul
xchg
xchg
push
cmp
divl
and
std
jl
stos
mov
inc
fistps
xchg
jns
jno
pop
nop
xchg
mov
daa
xorb
mov
pop
ljmp
mov
push
pushl
arpl
inc
into
leave
cltd
mov
dec
imull
or
ljmp
xlat
adc
adcb
inc
dec
aaa
xor
pusha
mov
xor
sbb
scas
mov
xchg
and
push
pop
in
cmpsb
popa
sbb
repnz
imulb
adcb
out
sub
bnd
out
pop
rcr
sbb
shlb
adc
imul
xchg
push
mov
mov
hlt
lret
push
or
out
or
lret
mov
stc
mov
mov
add
mov
hlt
cmpsb
daa
mov
test
pop
popa
leave
xchg
mov
push
cmp
repz
mov
std
push
jns
add
jg
bnd
mov
and
or
jb
fcmovbe
mov
add
sbb
les
int3
cli
xchg
and
iret
or
mov
fimuls
cmp
cmp
icebp
adc
insb
fs
cwtl
sub
sub
ds
aaa
and
push
xlat
cmpsb
cwtl
daa
jb
test
sub
sbb
inc
lcall
test
or
pop
outsb
mov
pop
and
adc
orl
xchg
pop
lock
dec
xor
push
or
fiaddl
or
cmp
arpl
stos
jne
adcb
mov
rclb
loope
pop
fiaddl
aad
lret
lret
ret
hlt
shll
xchg
sbb
cmpsl
loopne
xchg
pop
jmp
aad
adc
sbb
lds
mov
test
pop
mov
clc
ds
ss
xchg
add
loope
pop
pushf
daa
movlhps
jnp
adc
push
xchg
mov
outsl
icebp
sbb
mov
inc
xor
mov
gs
int3
xor
in
int
mov
mov
adc
pop
sahf
sbb
sbb
adc
lret
data16
inc
movsl
or
dec
push
fnsave
out
cmc
pop
loopne
scas
mov
lahf
rorl
xchg
fs
pop
lods
jge
or
dec
pop
cmp
int3
into
add
inc
outsl
test
cmp
mov
mov
es
les
fsubrp
addb
xlat
je
scas
jae,pt
inc
jg
stos
cmp
sbbl
push
ret
test
jp
jno
aaa
sti
mov
sbbb
jmp
add
jbe
or
push
mov
aaa
xchg
sarl
inc
ret
loope
or
inc
add
mov
mov
sbb
jge
mov
ret
lods
je
into
aad
jmp
lock
xchg
stos
pop
cmp
rorl
in
add
int3
jno
int3
pop
lods
inc
inc
je
dec
inc
pushf
cmp
mov
jge
xchg
hlt
adc
das
ljmp
lods
pop
push
jge
out
push
insb
fidivs
push
aas
dec
lock
mov
loop
in
daa
enter
int
cmp
hlt
cmp
dec
push
add
adc
mov
push
xor
ror
mov
je
insl
imul
outsl
in
ljmp
sti
sar
lret
sub
sahf
fisubl
bound
fwait
cmpsl
and
cs
sbb
shr
stc
subb
push
push
iret
fiaddl
div
fildl
dec
jecxz
or
lods
popa
and
xchg
aad
mov
mov
dec
loopne
add
sbb
jbe
addr16
imul
xor
lock
adc
daa
cmp
dec
les
and
int3
push
andl
xor
in
mov
xchg
dec
lock
lods
mov
test
or
cmp
mov
lcall
pop
push
jg
loope
push
out
loop
arpl
mov
out
mov
fidivrs
lods
out
dec
jnp
dec
and
mov
rolb
sti
cmpsl
daa
popa
xchg
jecxz
xchg
out
mull
repz
bound
inc
jl
add
cmp
mov
cld
push
add
mov
enter
jae
jp
push
mov
outsb
push
xorl
lea
mov
sbbb
out
pop
push
xchg
pop
or
pusha
xlat
inc
mov
jecxz
stos
loope
jge
test
pop
aad
cltd
data16
mov
push
aaa
stos
jb
pop
lods
mov
lahf
lea
xchg
mov
ficoml
lahf
jmp
or
loop
stos
test
cmpsl
rclb
mov
mov
inc
data16
insb
insb
jbe
or
mov
repnz
enter
ret
js
xchg
add
or
stc
pop
jns
int3
inc
imul
loopne
ljmp
adc
sub
inc
cmpsb
aaa
jle
sub
mov
push
sbb
mov
pop
push
stos
jecxz
and
inc
addb
pop
loop
xchg
out
mov
or
mov
andl
mov
pop
push
pop
aam
call
ret
or
in
cmp
xchg
aas
push
outsb
mov
call
mov
gs
cs
stos
stos
xchg
pop
fucomi
jp
daa
lcall
mov
add
cmpsl
mov
cld
hlt
lea
jl
test
mov
mov
movsl
dec
repnz
jecxz
mov
sarl
loopne,pt
out
cmp
add
popa
pushf
jb
repnz
rorl
pop
pop
movsl
jb
mov
adc
push
fs
mov
pop
mov
les
pop
jae
loopne
cmp
dec
jle
iret
cmp
mov
ret
add
into
jle
mov
shll
lahf
push
jne
int
pop
cmc
bnd
add
enter
jb
lahf
sub
sti
jmp
jnp
pop
push
pusha
inc
cmpsb
cwtl
xor
jl
mov
pop
xchg
inc
pop
mov
shl
daa
in
fwait
or
inc
mov
repz
jbe,pt
stc
dec
jb
mov
mov
mov
mov
inc
or
popa
jecxz
loop
adc
outsb
inc
pop
popf
mov
aas
adc
or
cmp
jnp
aas
jge
shl
xchg
in
inc
and
outsb
lods
inc
pop
ss
add
subb
and
sbb
mov
test
loopne
lods
jmp
jnp
mov
adc
cmp
loope
inc
push
imul
or
sub
push
sbb
inc
push
dec
jns
xchg
ret
mov
lret
push
shrl
in
or
pop
jnp
xor
or
sbb
mov
mov
adc
out
rolb
enter
xor
mov
inc
and
nop
cmp
push
pop
stc
cld
lock
push
jnp
mov
js
add
jnp
adc
imul
rorl
lock
out
pop
xlat
cmp
icebp
dec
cltd
sti
stos
mov
and
and
enter
dec
out
jno
fwait
mov
negl
ja
inc
mov
fs
stos
adcb
and
lea
dec
out
cmp
pextrw
sbb
repnz
adc
mov
sbb
lods
and
jmp
pop
ja
mov
pusha
cmp
sub
pop
or
mov
xor
jl
ret
jns
int3
lea
aas
scas
push
inc
lock
jnp
xor
ret
loope
inc
sahf
mov
test
xor
lods
xchg
mov
pop
add
jbe
mov
lcall
testl
cltd
and
sub
inc
push
mov
pop
push
xchg
xchg
xor
push
enter
mov
push
lret
pop
push
test
xlat
xor
mov
testb
sub
je
pop
mull
mov
rorb
cmp
cmp
bound
roll
mov
push
jge
fcompp
test
sub
fisubrs
dec
scas
xor
call
mov
ds
push
jae
xchg
pop
jne
neg
pop
dec
lea
fimull
outsl
dec
pop
pop
inc
xchg
sub
or
xor
fildll
pop
sbb
sbb
pop
jno
xchg
jne
xchg
or
int3
add
out
mov
xlat
loop
int3
lret
dec
aas
test
ljmp
shr
dec
push
mov
dec
push
add
cmp
pop
sbb
cld
leave
and
xor
sbb
xchg
fs
daa
dec
in
int3
jb
jae
xchg
mov
pop
int3
mov
lret
mov
lret
movsb
sti
fucomp
sbb
cvtps2pi
pop
dec
mov
jmp
test
push
adc
sub
popa
or
cmp
call
push
cmp
cmpsb
jle
pop
cmp
imul
adc
daa
dec
bound
mov
leave
cmp
cmpl
cli
notrack
xchg
cwtl
and
arpl
std
xor
adc
cmp
mov
pop
jno
sbb
adc
pop
shrl
push
test
ja
pop
mov
xlat
shrl
popf
add
adc
adc
xchg
popf
addr16
push
fadd
or
pop
imulb
inc
int
imul
inc
pop
jns
cmpsb
inc
dec
subb
or
adc
xor
push
xchg
xchg
daa
xchg
sub
cmc
xchg
outsl
sahf
in
insl
or
jl
inc
les
add
in
jne
xor
jecxz
xchg
std
push
dec
sub
in
divl
add
xor
and
lcall
xor
push
adc
jl
mov
rorb
es
xor
cmp
push
nop
pop
push
movsb
out
movsl
int3
filds
mov
notl
xor
sbb
mov
movsb
xchg
rol
ret
xorl
and
in
stos
andb
fbstp
mov
push
call
aad
lods
add
lret
mov
out
xor
lock
mov
lds
mov
cmpsl
jno
sub
arpl
or
pop
mov
ret
loope
into
push
sbb
and
int
test
fld
or
sbb
mul
add
imul
jmp
mov
dec
out
dec
push
mov
mov
sahf
add
test
inc
test
xor
pushl
dec
xor
dec
mov
mov
lret
jp
and
arpl
push
push
push
mov
mov
out
addb
mov
xchg
cmc
faddp
inc
shll
ret
std
hlt
push
sub
pop
xor
mov
cmpsb
stc
sub
mov
add
add
fcoml
adc
and
lods
adc
pop
sub
fwait
lods
pop
shrb
scas
mov
scas
mov
test
repz
lret
rcrl
lock
sub
xchg
cmpsl
ret
std
ficoms
dec
pop
mov
test
pop
repnz
mov
sbb
das
outsl
aas
xchg
or
lock
adc
push
cmpsb
adc
jmp
add
sub
jo
xchg
cmp
mov
pop
jbe
hlt
pushw
push
dec
ljmp
pusha
push
fstps
stos
push
insl
mov
fld
ss
imul
repz
mov
sbb
test
outsl
fmuls
fisubl
xor
arpl
pop
pop
pop
in
mov
push
mul
cmpb
out
rdmsr
or
add
in
push
test
xchg
mov
pop
or
jbe
push
cmp
outsb
and
incb
cmp
jecxz
mov
inc
rep
lret
inc
cwtl
xlat
test
push
cmpsl
inc
addr16
add
sbb
mov
test
inc
inc
ss
pop
mov
lock
pop
add
push
ret
hlt
movsb
cmp
pop
inc
xchg
aad
out
js
mov
movq
adc
rcl
add
es
les
xor
dec
or
les
mov
sub
ret
jl
mov
repz
out
add
sbb
add
mov
sbb
int
sahf
or
push
lret
rcrl
jle
aaa
jb
sub
mov
cmpsl
fiadds
xor
nop
stos
xor
push
inc
repz
pop
mov
add
inc
sbb
std
jbe
pop
pop
sti
in
mov
xchg
ficompl
mov
fxch
sub
aas
or
mov
mov
push
icebp
xor
inc
xchg
xlat
inc
pop
cmp
insl
adc
push
je
xchg
push
xor
push
fisubrl
clc
stos
push
lds
sti
hlt
push
outsb
aas
sbb
mov
xchg
mov
lahf
stc
dec
fbld
xor
cmp
pushf
gs
imull
add
pop
into
add
loop
lret
cltd
jmp
clc
jmp
gs
outsl
sub
test
mov
add
xor
jp
mov
or
push
repnz
or
outsl
shll
aam
adc
add
mov
fwait
jnp
xchg
pop
add
cmp
push
lcall
addl
in
fbld
clc
sbb
and
sub
jbe
mov
lea
mov
push
in
or
fistpl
mov
sbb
enter
pop
fdivrs
lcall
mov
out
int3
mov
movsl
inc
je
insb
or
dec
xlat
clc
std
add
stc
pop
lock
stc
call
dec
push
add
cltd
sbb
cmp
popa
xchg
push
test
repz
pop
or
sub
cmp
wbinvd
mov
xor
lcall
leave
pop
aaa
mov
inc
push
adc
and
popf
in
js
gs
cmpsl
ficomps
lret
mov
or
stos
cmpsl
push
dec
sbb
and
or
and
or
call
int
imul
add
aam
aaa
out
jb
test
mov
sbb
mov
vandpd
and
jb
nop
iret
nop
mov
pop
push
add
stos
mov
inc
sbb
or
hlt
leave
jb
adc
xor
loop
data16
or
loop
fiadds
xor
flds
sub
mov
jnp
scas
push
add
clc
loope
pop
push
outsb
leave
jge
pop
add
inc
inc
js
or
xor
mov
lods
cltd
cli
fsubl
testl
fbstp
int
or
fiadds
jl
dec
aad
mov
push
lds
shlb
repz
lcall
xchg
dec
in
inc
fisttpll
lods
jp
jnp
sahf
pushf
and
mov
mov
sarl
push
jmp
cmp
lret
fists
call
lock
ja
ret
xor
data16
pop
or
stos
mov
idivb
stos
movsl
stos
xchg
movsl
pop
addr16
adc
addr16
dec
mov
push
sbb
push
int3
jo
and
test
imull
xchg
or
sbbl
and
repz
cli
sti
shlb
divl
push
loopne
hlt
xchg
inc
dec
fisttpl
mov
ret
push
xor
mov
dec
fstl
bound
shl
mov
jno
add
jecxz
cmp
test
sarb
in
test
pusha
push
adc
inc
gs
call
roll
jno
cmp
rcrl
testb
roll
jmp
sahf
push
xchg
in
hlt
ss
nop
mov
push
sbb
es
xchg
incl
cld
dec
pop
gs
sbb
pop
movsb
subb
mov
xchg
push
rol
test
imul
or
out
leave
shlb
and
rep
popf
xlat
je
dec
cmpsb
adc
sbb
scas
mov
out
inc
and
dec
add
xchg
loope
adc
clc
jge
shll
mov
inc
xor
mov
lret
jp
lea
or
loop
fs
stos
sub
dec
jne
mov
outsb
cs
pusha
sbb
aam
xchg
mov
ds
sarb
sbb
dec
jmp
fwait
out
aad
fwait
cmp
mov
out
and
xlat
push
out
dec
mov
inc
push
xchg
insb
cmp
insl
pop
lahf
loope
add
add
repz
sub
cli
lret
fucomi
sbb
pushf
adc
outsl
dec
sub
je
adc
test
loop
lds
fnstsw
bound
movsl
fistps
lret
pop
lea
xor
xchg
arpl
lock
push
repnz
add
add
outsb
negb
push
je
jge
fwait
loope
decl
adc
mov
inc
xor
fsts
adc
jecxz
inc
sub
out
inc
fidivl
sbb
andl
cmp
push
test
xor
push
xchg
xor
fs
push
and
pop
addl
jno
jo
mov
imul
outsb
lea
lret
pop
xchg
add
scas
frstor
add
pop
add
or
mov
pop
mov
mov
xchg
jl
fsubrl
jge
sub
jl
cmp
int
pop
dec
xchg
jg
lods
push
int
pop
dec
push
shrl
mov
push
add
jl,pn
fnstsw
imul
into
jns
sarl
out
jl
adc
mov
xchg
jnp
cmc
repz
lea
xchg
out
inc
lret
in
es
lcall
data16
add
xor
cmp
add
lcall
movsb
cwtl
stos
mov
cmc
in
sbb
or
or
scas
push
xor
lds
mov
add
xlat
fucom
aad
jge
mov
mov
popa
sbb
data16
ret
or
ljmp
stos
push
mov
insl
in
into
stos
jmp
scas
pop
das
out
jg
in
dec
lahf
push
and
and
fisubrs
into
imul
pop
xor
dec
and
sub
cmp
loop
insl
cwtl
cmp
xor
mov
test
clc
sub
mov
je
loop
mov
sti
mov
jbe
aam
push
loopne
jg
cmp
call
dec
xchg
mov
scas
loopne
adc
imul
roll
pop
or
mov
hlt
xor
mov
pop
push
adc
pop
xchg
xlat
das
xlat
jbe
rcll
jbe
pop
inc
fucom
xor
mov
fstpl
lods
add
rorl
jno
int
insl
lods
xor
jp
sbb
sub
lock
sti
and
jmp
and
dec
sbb
and
das
in
jl
dec
sar
rcll
xchg
lret
les
xor
decl
loop
sub
test
push
and
popf
sahf
pop
fstps
std
paddw
pop
mov
xchg
inc
dec
adc
shlb
aam
in
repz
mov
imul
rorb
pop
cmp
lods
push
repz
xchg
pop
int3
mov
or
adc
loope
inc
mov
add
push
xchg
sub
insb
and
push
hlt
fsts
xor
cmp
jae
and
les
inc
mov
repz
mov
lcall
pop
fcomip
scas
jb
loop
pop
mov
mov
adc
xchg
push
cmpsb
or
in
or
test
roll
or
sti
sub
add
lds
daa
xor
sbb
ljmp
push
xlat
lret
loop
loopne
mov
mov
in
mov
xor
fmull
mov
push
pushw
mov
mov
subb
mov
rcr
adcb
movsb
aam
lea
adc
xchg
and
stos
push
jo
loop
daa
sahf
sbb
fildll
cmp
mov
mov
or
call
jne
jge
push
cmpsl
repnz
int3
push
jo
mov
pop
out
lcall
cmpsl
aaa
xor
mov
xor
insb
jg
stos
shl
and
cmp
enter
in
test
repnz
aam
mov
pop
pop
inc
sbb
arpl
jmp
icebp
mov
add
mov
aaa
jge
jmp
mov
mov
fstps
cmc
cmp
cld
adc
shrl
dec
adc
add
mov
push
sbb
mov
into
mov
mov
js
test
fsubrs
aam
popf
les
and
or
push
dec
push
pop
inc
movsb
push
into
dec
sub
mov
fsubs
lea
repz
mov
and
cwtl
pop
mov
inc
mov
and
fsts
fucom
psubsw
and
imul
out
inc
sub
cmp
jbe
cmpsb
stc
sbb
xor
cmp
int
pop
mov
in
add
mov
dec
and
insl
cmpsl
add
sbb
or
xor
addr16
pop
jge
fldcw
push
or
mov
inc
cmp
mov
call
es
inc
mov
jg
imul
sbb
imulb
sarb
xor
cmp
lods
fs
hlt
mov
inc
mov
mov
cmp
mov
test
orl
inc
ljmp
pop
xchg
movsb
mov
outsb
hlt
jno
cvtdq2ps
xor
xchg
jbe
out
shlb
pop
and
pop
das
and
sub
mov
ss
dec
mov
mov
pop
xor
in
adc
out
pushf
clc
and
int
add
mov
leave
mov
mov
cwtl
jae
lock
cwtl
mov
mov
mov
jmp
in
push
adc
mov
neg
fstps
mov
inc
xlat
leave
cld
nop
int
add
cmpsl
inc
and
sbb
push
sbb
add
jbe
mov
mov
in
mov
sarb
jg
pop
in
outsb
sti
dec
xchg
and
mov
mov
shll
in
dec
or
mov
sarl
ret
lods
lock
lea
inc
mov
imul
sbb
xor
daa
int3
jae
sbb
xor
shl
jb
dec
cmp
idivb
push
mov
mov
mov
or
push
sbb
adc
loopne
das
sbbb
xor
sub
ja
xor
mov
setae
shll
je
lret
orb
jbe
stos
dec
mov
lret
push
aam
mov
test
lret
int
jo
popf
stc
xchg
inc
rcl
in
jns
das
mov
mov
and
pop
mov
pop
shl
dec
mov
jmp
into
add
fwait
push
sbb
pop
add
mov
push
loope
xor
lahf
and
mov
mov
jbe
mov
int3
scas
lret
mov
aam
xor
mov
push
shlb
test
es
xor
xor
push
xor
es
fdivr
jo
pop
and
xor
cmpsl
or
lret
and
or
push
or
cmp
mov
in
and
in
mov
pop
sbb
inc
dec
lds
fsubl
pop
test
je
sub
mov
jp
data16
cli
sub
push
iret
dec
pop
scas
mov
insl
jae
jnp
xchg
pusha
arpl
mov
fistpl
in
mov
push
js
sahf
pushf
pop
dec
lcall
out
lock
push
scas
loop
into
mov
cmp
cwtl
mov
loopnew
enter
pop
into
hlt
jmp
scas
xor
addr16
popf
or
jb
fbstp
loop
lret
or
shlb
or
mov
add
inc
in
lea
sbbl
rclb
add
sub
cmpsb
jmp
cltd
push
sahf
lret
add
lret
pop
sub
push
fsubp
sub
xchg
or
testb
leave
xlat
adc
cmp
adc
sbb
mov
adc
js
pop
push
call
imul
push
loope
ret
jmp
mov
xchg
addr16
pusha
stos
adc
push
push
stc
mov
ljmp
jecxz
dec
lret
inc
mov
repnz
imul
outsb
clc
fcmovnbe
pop
add
jle
dec
dec
into
cmp
out
lock
jp
sbb
loope
mov
movsb
adc
add
mov
andb
movsl
faddl
push
sub
push
les
fld
repz
jae
in
push
loop
xchg
fistpll
cmp
shrb
adc
add
dec
jnp
sub
loopne
sbb
dec
sahf
lods
push
add
sbb
cli
iret
mov
lds
jb
inc
xlat
outsl
lods
popf
icebp
fs
cmp
xor
and
bound
inc
sub
in
sbb
jns
icebp
idivb
stos
sbb
add
mov
dec
jmp
jg
lods
loop
adc
cmc
outsl
xchg
adc
movsb
add
ljmp
jmp
push
jnp
into
iret
or
inc
divl
jb
mov
mov
push
mov
in
popf
jl
inc
fisttpl
dec
xchg
imul
add
test
popa
aaa
fistl
aas
test
jmp
mov
and
stos
in
and
fistps
xchg
jns
push
adc
stos
pop
aaa
and
dec
and
mov
sbb
mov
add
xchg
leave
add
shll
pop
addb
mov
and
adc
push
or
xchg
xchg
dec
lret
jecxz
mov
les
or
fs
mov
ja
adc
or
mov
scas
lea
ficompl
sub
aam
push
rol
mov
repz
dec
and
inc
lret
sbb
pop
push
pop
stc
inc
xchg
inc
lods
out
mov
mov
or
int
cmp
add
ret
inc
lock
mov
shll
inc
outsb
push
cmc
bound
jbe
out
js
ret
call
inc
and
or
push
sub
sub
cmpsb
or
popa
ja
cmp
stc
int
mov
push
mov
and
add
dec
gs
cmpsb
sbb
popf
and
decl
insl
mov
stos
bound
push
pop
int3
adc
mov
test
repnz
mov
sarl
test
mov
adc
inc
pop
jmp
sbb
mov
pop
sbb
mov
jp
push
mov
int3
stos
pop
les
xor
test
loopne
aad
jmp
int
daa
push
dec
jp
cs
test
in
out
or
fdivr
add
orl
fidivl
test
sarl
mov
ja
xchg
setbe
mov
cmpsl
js
jg
cs
inc
push
stc
loop
repnz
insl
insb
out
addr16
dec
push
mov
add
lret
std
les
xchg
out
fcoms
mov
jns
xchg
push
sbb
js
or
pop
cmp
loope
push
mov
add
mov
or
sbb
mov
fists
lahf
aam
pop
jge
push
ficoms
mov
mov
pop
insl
fbld
pop
mov
rol
out
mov
pop
add
rol
push
subl
mov
push
test
xchg
adc
inc
in
xchg
decl
ds
jge
cld
or
dec
push
mov
push
shrb
inc
mov
push
pop
jne
push
hlt
out
jbe
push
mov
lds
xchg
jmp
push
push
fisubrl
sub
addb
jo
jp
lods
sub
mov
stos
in
push
xchg
in
pop
into
stc
mov
loope
mov
lea
inc
sub
push
mov
out
pop
outsl
int3
add
and
xchg
test
and
add
mov
andb
stos
je
mov
xchg
dec
dec
jae
jb
jnp
push
int
mov
out
loopne
dec
sub
in
jmp
push
jmp
push
notb
push
lock
push
xor
push
ret
inc
scas
fiadds
xchg
incb
adc
or
fstp
roll
scas
pop
dec
cmp
outsl
out
cmp
or
ljmp
push
aad
mov
dec
and
dec
cmp
lods
lods
les
pushf
and
icebp
add
mov
and
sub
push
nop
std
push
pop
pop
or
or
jae
xor
pop
add
in
or
mov
dec
dec
adc
cmpsl
fistpl
call
or
shlb
add
dec
lahf
or
cmp
adc
mov
enter
ss
or
aas
mov
cmp
sbb
pop
scas
addb
int3
jae
add
test
shl
jmp
outsl
push
push
jbe
es
push
push
stos
clc
jno
hlt
inc
mov
dec
div
adc
add
mov
mov
repz
ljmp
in
test
loop
repnz
mov
or
leave
push
je
daa
in
jg
mov
jbe
xchg
or
outsl
inc
int
mov
ss
push
pop
or
pop
pop
jbe
aaa
sbbl
add
ror
stos
jno
xchg
inc
dec
pop
mov
negb
or
in
addb
and
adc
cmpsb
mov
push
in
call
pop
xor
cmp
jae
icebp
test
mov
mov
jns
mov
push
mov
ret
hlt
pop
nop
mov
sub
push
cmp
fstl
sub
data16
pop
mov
fstpl
inc
jne
xor
loope
clc
jge
lea
js
fmul
call
je
shll
or
int3
iret
mov
mov
add
notl
outsb
int3
aaa
scas
data16
sub
icebp
pop
mov
pop
stc
pop
ret
sahf
mov
cmpsb
data16
test
push
xchg
cmp
js
movsb
sbb
cmp
aaa
push
fsubl
jge
lret
pop
dec
mov
jns
loopne
loop
adc
rclb
sbb
add
sti
scas
cmpsl
int
sar
int3
cmpsb
ds
adc
fcoml
cmp
and
xor
mov
stc
test
paddw
mov
mov
mov
cs
paddd
xchg
inc
popa
mov
subb
sub
insb
mov
or
dec
iret
adc
rcll
andl
int3
aam
fstl
je
hlt
xorb
cli
pop
mov
mov
movsb
add
les
add
hlt
dec
push
jg
mov
popa
or
outsb
pop
cltd
scas
add
adc
test
mov
mov
inc
pop
in
addr16
cmp
add
sbb
mov
mov
push
mov
lods
sub
or
fdivp
jns
push
addr16
test
pushf
cmc
xchg
xor
fsubp
jle
cmp
inc
mov
or
outsl
jle
sti
or
jb
stc
mov
repz
aad
rcll
js
pop
test
push
xor
pop
sbb
lahf
jp
hlt
push
sbb
shll
jns
pop
adc
arpl
mov
jecxz
mov
jmp
clc
jb
arpl
aaa
bound
cmc
push
sbb
and
fdivr
aam
or
mov
cld
int
mov
sub
cmpsb
fs
mov
pushf
lcall
outsb
xor
cmpsl
arpl
push
imul
sub
iret
xchg
das
cmc
sarl
nop
jno,pt
out
js
inc
sbb
add
inc
fsubs
out
sar
jae
mov
imul
or
inc
inc
ljmp
add
arpl
inc
jo
sub
movsb
loopne
or
pop
sbb
push
pop
daa
je
adc
jl
movsl
adcb
mov
jb
stc
xor
aam
cmp
and
cmp
or
adc
or
test
stc
or
add
notl
jns
push
in
neg
repz
pop
xchg
scas
cmp
loope
push
or
loop
sbb
scas
hlt
ja
sbb
jo
pop
or
call
jnp
xchg
sbb
daa
leave
test
inc
pop
lret
xlat
in
or
sbb
dec
push
imul
and
cmp
cmp
movsb
mov
fistpl
mov
inc
inc
xchg
nop
mov
sbb
jno
aaa
out
addr16
repnz
daa
enter
xorl
int
or
mov
bound
mov
and
out
sbb
daa
pop
sbb
ljmp
dec
in
mov
dec
inc
imul
cltd
std
jns
push
ret
dec
push
xchg
andl
mov
pop
sti
mov
scas
push
mov
add
and
clc
push
aam
pop
inc
lret
insl
adc
push
and
aam
xchg
cmpsl
and
andl
ret
cmp
lods
repnz
aad
and
add
ret
aas
mov
cmpsb
les
inc
iret
or
lcall
xchg
lods
fcoml
xor
mov
popa
sbb
loop
cmc
or
icebp
add
int
mov
andl
xchg
imul
mov
test
cmp
inc
add
push
popa
dec
ficomps
add
cltd
mov
addr16
xchg
dec
adc
sbbb
inc
cmp
pushw
xor
sbb
jp
gs
push
sbb
lds
sbb
lahf
dec
mov
pop
pushf
mov
cmp
sbb
loopne
pop
add
mov
pushf
insl
ljmp
or
sub
or
das
push
test
loopne
cmp
mov
sbb
int3
sti
lods
lret
sahf
mov
jbe
dec
es
xlat
mov
xchg
pop
ja
push
push
xchg
mov
rol
jno
add
imul
push
popa
push
mov
ds
lea
dec
xchg
xchg
add
inc
cmp
shl
pop
jl
xlat
repnz
dec
pop
xchg
xchg
scas
push
and
lods
lahf
fists
idivb
cltd
ljmp
rcrl
xchg
lret
enter
pop
pop
push
loope
sti
pusha
sub
loope
lcall
inc
stc
data16
shrl
clc
jg
test
jns
in
std
xchg
aaa
adc
out
mov
inc
fildll
imull
mov
jge
ja
and
sbb
jo
sub
mov
shll
insb
cmovnp
es
xchg
add
orl
jns
mov
cmp
ret
jb
mov
push
test
dec
cli
repnz
cld
push
push
mov
les
jecxz
push
or
sub
insl
lret
jns
pop
fidivrs
loope
out
add
mov
push
loopne
push
and
mov
loope
push
in
mov
xor
inc
mov
and
dec
xor
das
mov
enter
jo
cmc
jge
les
test
in
enter
stc
jae
adc
xlat
insl
arpl
nop
inc
fsub
sub
lcall
ljmp
out
lcall
pop
fs
clc
xchg
sub
inc
sub
pusha
cs
lcall
or
daa
jp
pop
rolb
cltd
pusha
mov
aas
enter
cli
test
test
push
push
lods
daa
add
ja
dec
mov
insb
mov
orb
pop
and
lds
inc
fs
lods
test
mov
pop
push
out
dec
jmp
ja
sbb
out
push
fwait
decl
or
pop
fwait
clc
dec
ja
mov
mov
jge
fmul
jge
mov
pop
std
xchg
add
icebp
aam
out
xchg
int
jbe
out
nop
add
cmp
xor
cwtl
lods
in
pop
add
xchg
cmp
repz
xor
ljmp
sub
scas
arpl
pop
jae
jo
nop
or
and
jae
mov
pop
adc
mov
inc
popf
bound
and
aaa
ljmp
fs
and
dec
in
xor
sub
adc
cld
fcmovne
mov
call
adc
aaa
mov
outsb
lret
push
push
das
jns
loope
ja
fs
in
fwait
pop
fsts
call
push
int3
inc
or
shlb
test
pop
dec
inc
xchg
in
push
and
cmp
ja
int3
push
cmp
jle
pop
jne
add
inc
outsb
sub
xchg
and
xlat
add
adc
outsl
inc
xchg
ret
rol
sbb
cmovae
pop
sub
sub
and
mov
cwtl
cs
dec
pop
movsl
test
or
pop
cmc
loop
or
mov
push
cmpsl
jae
inc
cmp
iret
jae
cwtl
popa
sbb
idivb
lock
xchg
sub
adc
jecxz
into
push
call
call
dec
xor
dec
ja
add
inc
cltd
aam
sti
fmuls
xchg
mov
add
jbe
scas
lea
sbb
insl
pop
jno
xchg
mov
xchg
das
int
or
or
adc
or
sbb
jge
mov
cmp
dec
jb
cmc
push
enter
daa
iret
mov
je
out
cmp
test
or
jb
mov
outsb
insb
in
dec
pop
dec
xchg
sbb
movsl
gs
cmpsl
and
inc
push
mov
cmp
mov
pushf
mov
arpl
insl
sbb
stos
in
addl
adc
getsec
test
adc
popf
scas
into
xchg
or
xchg
adc
push
mov
push
mov
dec
and
xchg
in
sub
clc
adc
mov
mov
imul
cmp
dec
loop
sub
push
pop
xchg
dec
loopne
jns
or
je
andl
inc
insb
push
daa
xor
or
push
pop
mov
cmp
push
sbb
stos
sub
dec
inc
enter
cmpsl
je
call
jge
jo,pn
std
imul
nop
ja
and
scas
xor
or
sub
adc
pop
cltd
insl
pop
flds
sti
or
inc
push
mov
xlat
mov
jno
jmp
in
adc
icebp
and
imul
cmp
xchg
and
push
add
icebp
aam
out
ja
cmp
leave
adc
xchg
mov
adc
push
jmp
lcall
in
or
jmp
xchg
jbe
fcompl
jecxz
lods
lea
ljmp
mov
fldl
push
int3
xorl
adc
roll
sub
in
xchg
dec
mov
or
pusha
in
mov
outsl
push
mov
mov
jl
pop
jo
pop
push
sahf
out
jnp
pop
out
popf
inc
ret
add
call
mov
into
movsb
mov
xchg
push
push
popf
mov
jp
inc
cmpsb
in
aad
lcall
in
xchg
inc
orb
imul
es
pushf
push
mov
mov
rcl
fistl
movsb
adc
cmpsb
push
js
test
loopne
mov
dec
sarl
sub
incb
movsb
outsb
in
pop
sarl
addr16
adcl
xchg
incb
or
test
pop
adc
inc
add
rorl
fcomps
pop
in
and
sti
test
mov
mov
push
xchg
rorb
xchg
add
xchg
das
dec
bound
push
inc
xor
test
insl
add
push
add
aaa
popa
es
outsb
pop
ffree
int
inc
cmpsl
clc
or
imul
jno
and
imull
ss
idivb
dec
fdiv
add
adc
inc
inc
push
cmc
adc
rorb
xchg
cmc
push
push
or
jecxz
inc
sbb
adc
jg
outsl
jg
or
es
ja
pop
scas
imul
inc
stc
push
pop
dec
mov
xchg
xor
leave
fisubs
lds
sar
and
out
sbb
jno
outsb
xchg
mov
push
aas
in
into
sub
imul
mov
push
cmp
cmp
cmp
testb
int
fcmovnu
enter
int3
sbb
mov
adc
fcos
pop
pop
fimuls
dec
push
cmp
in
test
bound
pop
push
mov
mov
adc
or
xlat
cmp
dec
test
dec
fcom
mov
jmp
push
jne
outsl
xor
push
cli
lahf
das
lret
xchg
inc
cwtl
in
and
sbb
rcrb
iret
mov
out
mov
mov
mov
shrb
std
sahf
enter
mov
dec
xor
xchg
push
xor
stc
add
scas
push
xor
or
jg
sbb
lret
outsb
xor
dec
rol
cmp
jle
inc
jecxz
sbb
add
fs
roll
cmp
adc
cli
ret
adc
mov
in
and
pop
pop
mov
ret
mov
xchg
inc
pushf
ljmp
pop
cmp
add
rclb
movsl
cmpsb
fdivs
push
push
repz
add
pop
rorl
add
mov
inc
out
daa
xor
add
xor
cmp
adc
data16
jmp
xchg
imul
stc
sarl
sbb
lods
xor
lret
test
sub
adc
gs
mov
sub
bound
das
push
mov
testb
push
and
mov
scas
dec
sub
push
cmp
fwait
xlat
sbb
and
mov
add
mov
lods
inc
out
sub
fs
scas
mov
dec
or
push
fnstenv
icebp
sub
add
ljmp
mov
call
addb
mov
xor
shl
std
mov
rol
push
xchg
push
pushf
pop
inc
fistpl
cltd
mov
jp
mov
sbb
subb
pop
add
rorl
adc
ss
repz
ljmp
test
dec
push
enter
ljmp
add
outsb
cmp
std
repz
push
cli
lods
sar
shlb
repnz
in
pop
loope
ljmp
push
lods
inc
aas
push
sbb
repz
out
dec
aam
int3
sbb
lahf
push
and
mov
xor
xchg
add
xor
ret
and
shlb
sub
cmp
js
adc
dec
adc
sbb
push
pop
call
cld
bound
imul
insl
sub
test
dec
ljmp
jg
push
lcall
xchg
icebp
inc
pushf
cli
repz
xchg
sub
pop
loopne
js
aad
addr16
cmpl
sar
movsb
inc
push
inc
jg
popa
or
dec
dec
push
insb
aaa
xchg
adc
addr16
pop
rclb
lds
repnz
shlb
rorb
xor
xor
xchg
mov
cmc
ja
addl
add
call
out
sub
push
pop
addb
gs
loopne
jle
mov
inc
mov
hlt
ror
mov
add
xor
push
dec
inc
lret
repz
sbb
insl
ds
outsb
cld
imul
cmpsl
pop
sub
scas
push
mov
ret
rclb
sub
int3
adc
sub
mov
mov
cmc
bound
fnsave
pop
mov
inc
sbb
movsb
jg
int3
jb
jno
dec
out
sbbb
mov
adc
lsl
aas
push
jae
mov
xchg
cmp
test
mov
lea
sbb
inc
imul
into
inc
lahf
clc
test
cmp
and
and
cmpl
imul
sub
jg
inc
jae
movsl
jmp
ds
pop
adc
popf
gs
sbb
or
or
adc
mov
mov
out
negb
ss
mov
paddusw
mov
out
cmp
repz
jno
adc
divb
cmp
loopne
orb
jno
dec
mov
movsb
lea
mov
dec
push
gs
xchg
cmp
mov
pop
daa
inc
lds
push
imul
add
lcall
xor
and
sub
pop
int
mov
xor
int
cmp
or
lods
sahf
insb
push
js
in
or
cmp
cmpl
push
test
adc
insb
arpl
outsl
jbe,pt
and
lods
sti
imul
pop
adc
popa
push
add
sbb
loopne
add
repnz
push
loope
fs
or
ds
dec
xor
lcall
and
add
daa
out
dec
test
push
xchg
in
add
bound
cltd
jle
sub
shlb
inc
movaps
and
out
loopne
push
mov
add
aas
inc
jg
mov
dec
jl
jbe
push
aaa
push
pop
jnp
cli
xor
scas
mov
orb
pop
hlt
iret
push
jg
adc
jp
out
pop
out
mov
in
pop
push
xchg
cld
inc
add
sub
lcall
mov
jae
out
or
outsb
sub
into
fs
jae
mov
pop
mov
les
sbb
adc
push
mov
add
mov
repz
mov
fwait
jnp
dec
and
ss
lds
jp
and
xchg
sbb
dec
vpshufhw
xor
imul
pop
lock
push
subb
sub
or
or
mov
and
outsl
or
jge
pop
and
sbb
and
pop
fsubr
popf
insl
pop
xchg
jle
iret
out
ja
imull
cld
inc
test
pop
mov
mov
out
ret
pusha
mov
ljmp
outsb
jl
pop
jecxz
sahf
mov
adc
sub
mov
mov
pop
mov
cwtl
push
std
divb
sbb
inc
lcall
push
add
jp
xchg
clc
sub
outsl
sar
movsb
and
sbb
stos
pop
mov
insb
fnstsw
lock
and
daa
je
dec
or
adc
mov
jl
sbb
cmp
push
jecxz
add
insl
adc
in
gs
js
jae
mov
mov
jne
xchg
out
mov
ret
inc
shrb
popa
inc
push
jle
std
push
push
ret
inc
dec
mov
pop
out
cmp
mov
adc
jg
cmp
mov
add
mov
pop
in
out
dec
xor
cmpsb
pop
lock
jmp
aad
inc
mov
hlt
fsubs
pop
and
das
icebp
and
and
scas
cmp
and
ljmp
adc
pop
int
and
cmpsb
inc
adc
ja
inc
adc
data16
sub
movsl
sub
decb
or
sub
sbb
std
and
in
pop
rclb
push
ds
xchg
mov
and
sbb
popa
mov
xchg
stos
add
mov
fldt
int
and
lahf
mov
inc
xor
mov
mov
in
sub
dec
jmp
sbb
add
cld
cmp
push
sbb
push
in
loopne
rolb
push
add
and
jb,pt
out
cmc
pop
mov
jmp
sub
adcl
cmp
aaa
xchg
or
xlat
jno
out
cmp
jmp
out
test
cmp
jmp
lret
div
dec
inc
call
push
or
fwait
mov
mov
and
pop
xchg
mov
lods
xchg
jp
cli
mov
pusha
mov
jecxz
jb
outsl
ss
nop
mov
incb
push
lcall
test
je
addr16
shrb
add
loop
add
dec
and
mov
imul
aad
in
add
insl
ret
enterw
cmpsl
dec
nop
and
mov
inc
sarb
add
test
push
add
mov
jge
xor
aas
mov
cli
sbb
push
insl
xchg
cmp
fadd
shl
jge
sbb
xorb
adc
enter
sti
pop
pop
or
aaa
mov
xcrypt-cbc
cmpsl
xchg
mov
jo
adc
loop
aad
mov
and
and
sbb
xchg
sub
gs
push
sahf
inc
and
test
dec
rcll
push
loopne
fsts
mov
into
lea
loope
sbb
call
push
lods
inc
mov
and
sbb
sbb
arpl
movsl
not
lret
hlt
mov
mov
or
frndint
adc
clc
outsl
push
push
in
pop
xchg
rcr
pop
outsb
es
and
out
pop
mov
fiaddl
cmpsl
scas
out
push
push
iret
dec
mov
xlat
enter
mov
xor
js
pop
mov
scas
push
push
xchg
mov
jmp
rol
inc
movsl
xlat
xchg
xlat
lock
outsl
in
jns
mov
lods
rol
mov
mov
add
jecxz
cmpsb
mov
fimull
push
jp
jo
and
cltd
imul
adc
cmp
jle
pusha
and
push
jp
dec
xchg
adc
mov
sbb
cld
fcom
jne
mov
mov
cmp
and
cmc
iret
addr16
inc
or
ret
rorb
dec
and
mov
cmpsb
sti
push
pop
daa
push
mov
xor
cmp
mov
mov
add
adc
gs
inc
dec
aaa
adc
jae
sbb
mov
pop
lea
sbb
jb
arpl
and
add
fs
loop
sbb
jle
xchg
xchg
jecxz
out
clc
mov
cmp
sub
or
cli
mov
jbe
adc
add
push
mov
or
xlat
gs
stos
addr16
hlt
pushf
mov
mov
jle
pop
lret
xor
sarl
pop
lahf
xchg
aad
add
cmpsb
aam
adc
xchg
push
pop
movsb
xlat
hlt
ret
cmc
or
fstl
mov
jmp
cmp
notl
ret
in
fdivl
inc
les
call
fcoms
cld
subl
ret
pop
mov
push
xor
imul
lahf
test
xchg
xchg
jnp
pop
aaa
lret
hlt
outsl
mov
jge
ud2
iret
std
cmp
mov
aam
jmp
push
xchg
in
xchg
in
fadds
push
mov
xchg
and
fwait
add
and
cmc
lret
add
ss
jae
cmp
cmpsb
fbld
stos
daa
stc
stos
int
imul
jle
fcoml
inc
leave
hlt
test
dec
int
stos
mov
mov
fnsave
lods
inc
jmp
push
mov
xchg
call
push
jnp
adc
clc
movsb
leave
int
push
or
outsl
xor
push
fcom
mov
sti
xchg
sub
repz
movsl
dec
push
push
inc
aam
xor
lds
mov
jg
stos
sbb
or
stos
mov
cmp
add
popf
xchg
out
sbb
dec
push
enter
mov
cltd
and
mov
sub
cli
jbe
imul
adc
cmp
cmp
or
cmc
lds
pushl
or
loop
rcl
dec
shrl
push
push
sbb
xchg
lret
mov
cmpsb
dec
iret
add
movsb
lahf
in
std
testb
lret
bound
cmp
mov
ficompl
inc
lds
repnz
mov
mov
das
jge
inc
adc
pop
in
imul
cmc
in
sbb
mov
adc
jmp
test
xor
mov
repz
inc
aas
dec
xor
inc
negl
shlb
sub
push
add
shll
push
testl
clc
mov
pop
fsubl
sbb
pushf
lea
mov
jmp
rol
jg
xlat
xchg
mov
push
or
test
or
ret
jae
ret
lret
aas
mov
mov
pop
aad
out
lock
test
cmpsb
pop
cmp
dec
xor
jle
dec
xchg
lahf
add
pop
rorl
pop
ss
sarl
gs
inc
decb
stc
jns
dec
test
fdivs
xchg
leave
jg
lods
jns
js
jp
andl
mov
add
adcl
movd
mov
mov
scas
mov
adc
jl
in
push
mov
stos
mov
dec
mov
or
mov
push
xor
or
fists
cmp
sbb
xor
outsl
xchg
loopne
jl
ror
call
in
test
cs
pop
sbb
dec
notl
adc
pop
int3
cli
and
sahf
add
mov
mov
ds
je
mov
adc
dec
dec
inc
sbb
insb
aad
mov
int3
cs
js
adc
sbb
lea
icebp
orb
icebp
xchg
repz
in
je
js
push
sahf
push
adc
cmp
jns
xchg
sub
mov
and
jae
mov
lods
mov
int3
xor
push
popa
mov
cli
fs
cmpsb
cmpb
mov
dec
mov
xor
mov
jnp
xlat
fstps
mov
pop
jbe
push
movsb
imul
push
jle
pop
repz
pushf
mov
sbb
stos
sbbb
xchg
xchg
or
cmp
xchg
adc
dec
or
stc
mov
xor
mov
lock
out
leave
add
inc
daa
in
adc
sub
out
cli
popf
and
cmp
loopne
pop
rol
shlb
jg
movsl
cmp
test
outsb
mov
icebp
push
jae
jle
je
cwtl
inc
xorb
xchg
repnz
mov
and
out
mov
pop
fnstcw
push
inc
xchg
cltd
popa
xchg
mov
shrb
push
and
or
sub
mov
test
nop
or
dec
aad
ret
outsb
cli
inc
cmp
test
test
in
aas
or
pop
das
inc
icebp
in
or
inc
xchg
jle
cltd
and
sub
hlt
in
movsb
test
imul
mov
mov
in
or
or
push
lahf
jns
aaa
iret
js
enter
mov
loopne
jl
sbb
lods
xor
dec
jmp
test
xchg
xchg
fidivrl
scas
addr16
inc
push
add
inc
adc
nop
jecxz
js
sbb
sub
dec
shll
filds
cld
sub
ds
mov
mov
mov
jl
jp
pusha
insl
jp
jbe
in
rcll
push
ficompl
sub
aas
bound
int
push
pop
dec
cltd
int
adcb
mov
push
or
popl
popa
sbb
or
sbb
add
push
jae
jnp
std
enter
mov
mov
mov
cli
pop
lds
lret
inc
xor
push
adc
stc
std
push
pop
mov
jbe
loop
adc
gs
ds
xchg
sahf
into
sub
out
insl
mov
add
out
fisubrl
and
pop
loopne
push
popa
outsl
out
and
outsl
add
addl
mov
sbb
lea
jb
xor
shlb
jl
jle
lock
les
sbb
push
pop
loop
fdivs
sbb
cli
aam
pop
mov
icebp
cmpsl
out
push
or
out
sahf
daa
mov
sub
ret
bnd
shrb
imul
into
sub
cli
cmp
stc
idiv
dec
jbe
adc
xor
pop
les
ljmp
add
divb
cwtl
push
xchg
stos
push
and
std
int
push
xchg
xchg
push
add
xor
leave
xchg
pop
xchg
sub
out
mov
xchg
mov
orl
xorl
enter
mov
inc
mov
loop
or
repz
jp
mov
cli
loopne
xor
inc
movsl
adcb
scas
mov
loope
movsb
xor
fildll
popf
roll
inc
addr16
mov
movsb
adc
jbe
xchg
pop
cld
int3
adc
mov
mov
xor
out
pop
les
mov
cltd
int3
add
jle
cld
test
add
outsb
jnp
cmpsb
adc
cmp
int
fdivs
or
xor
jmp
fstpt
mov
insb
cmpsl
sarb
jl
lret
aaa
lock
mov
jg
mov
fidivl
add
mov
shlb
bound
inc
inc
pop
andb
mov
mov
mov
testb
cltd
in
repz
sub
xchg
sub
aam
pop
mov
and
cmc
fisubrs
loop
insb
or
rcl
xchg
ds
pop
pop
mov
repnz
mov
ds
cltd
jecxz
inc
insb
insb
aaa
mov
bound
scas
and
push
jp
pop
adc
sub
inc
lea
out
xchg
scas
int3
aad
pop
push
push
mov
es
mov
mov
pop
xchg
jnp
jl
cltd
mov
mov
popf
incl
dec
mov
sub
test
arpl
mov
or
sub
stos
std
add
lock
rorl
jl
enter
int
cwtl
sub
mov
ljmp
jnp
loopne
mov
out
into
cmpsb
ljmp
sub
jle
jp
push
mov
push
jge
stos
rcrl
cmp
jae
in
add
push
loopw
mov
mov
push
xor
loope
or
insb
and
test
sub
addr16
js
or
sub
push
in
mov
mov
mov
mov
leave
add
leave
dec
sbb
lock
jmp
scas
test
stos
shrl
pop
fldcw
fmulp
xchg
jle
mov
jo
sbb
fadds
repz
fbld
arpl
sbb
mov
jno
sbb
lcall
or
push
pop
paddusb
mov
ss
daa
inc
gs
dec
fldt
sbb
and
or
repnz
xor
loope
push
jmp
inc
add
icebp
bnd
or
clc
out
cld
test
xor
xchg
pop
jmp
pop
stos
xor
test
push
xchg
mov
jnp
data16
xchg
adcl
xchg
mov
lret
ljmp
es
xor
notl
add
push
xor
lods
mov
addb
ret
pop
xchg
jg
pop
das
iret
nop
into
js
ret
mov
sbb
or
gs
cmp
arpl
stc
add
rcpps
scas
pop
stos
xchg
js
ret
cmp
loope
repz
push
push
jns
or
push
call
dec
inc
ficoms
lret
push
test
jns
or
ret
push
jae
fisttpll
scas
xchg
jp
sub
inc
push
cmp
cmpsb
icebp
pop
xchg
call
jmp
les
inc
push
pop
shrb
mov
out
addl
prefetch
jg
mov
fs
mov
sbb
loop
adc
dec
fcmovnbe
inc
lcall
mov
inc
sbb
mov
popf
call
jo
fsub
popf
add
lcall
es
enter
into
cmp
cli
sub
hlt
sbb
mov
subl
xor
sub
jae
movsb
mov
or
fnstsw
bound
adc
push
imull
mov
cmpsl
jecxz
mov
das
shll
loop
cli
mov
push
add
sub
add
ds
mov
xchg
std
stos
enter
and
mov
xchg
add
scas
xor
jo
lahf
inc
addr16
or
and
jg
fs
mov
xor
popf
cmc
loopne
das
inc
xchg
cli
int3
push
mov
cs
sbb
fcmovnu
adc
pushf
ds
icebp
nop
call
sbb
push
jne
add
sub
push
push
or
mov
xchg
jmp
sub
inc
xor
test
pop
mov
pop
cli
mov
sahf
or
mov
in
inc
mov
add
pop
or
aam
xchg
lret
out
lahf
pop
lea
xor
lcall
arpl
jle
jne
out
push
sahf
test
mov
sub
shlb
mov
cs
pop
xchg
int
je
stos
and
xchg
test
add
jae
out
out
adc
dec
push
jmp
clc
pop
mov
sbb
ljmp
pop
les
xchg
dec
in
sub
pop
ret
fsubrs
cmc
aas
xor
adc
lds
lahf
loop
test
ss
pop
sbbl
xor
in
das
adcb
aaa
dec
adc
std
inc
test
or
pop
lret
mov
ret
js
scas
in
cmp
test
out
jne
push
push
std
je
cld
fidivrs
sahf
mov
adc
ds
mov
fsts
xor
hlt
pop
xorb
cmp
cld
int3
arpl
mov
jno
xor
lods
je
adcb
fbld
int3
inc
mov
jg
push
sub
cld
loopne
inc
rcr
cwtl
les
aad
adc
xchg
nop
jg
jno
xchg
xor
imul
mov
or
dec
sub
cmpsb
fistpl
cmp
scas
aam
mov
adc
xchg
cs
mov
jge
fldt
xchg
cmp
test
js
test
int
popl
inc
stc
jns
sub
arpl
dec
cltd
cmpl
scas
cltd
daa
adc
or
jb
repz
ss
iret
dec
push
int
jp
test
aam
mov
push
adc
pop
jmp
mov
inc
add
xchg
sahf
mov
sahf
dec
andl
cmpsl
aad
xor
movb
cmc
enter
xchg
add
push
inc
jg
mov
clc
fnstenv
pop
mov
dec
xor
jb
mov
ljmp
and
jl
repnz
or
scas
or
fcompl
notb
push
xchg
push
dec
into
mov
andb
fimuls
mov
jge
xlat
and
ss
sbb
xor
lahf
decl
cmpsl
sbb
test
sub
ret
scas
out
or
mov
xchg
sbb
fwait
xchg
int3
dec
into
daa
pmulhw
push
bsf
fnsave
je
push
push
movsl
es
dec
fistpll
jnp
inc
mov
push
push
and
in
push
xor
cmp
add
imul
out
ret
adc
cmpsb
mov
cwtl
daa
mov
aas
je
xchg
aad
stos
mov
inc
inc
repz
pop
sbb
xchg
mov
add
ja
jg
push
mov
add
push
pop
scas
in
arpl
inc
mov
lcall
push
out
lret
popa
imul
faddp
lcall
sahf
xchg
test
mov
mov
add
inc
ds
inc
repnz
add
adc
mov
xchg
rcll
daa
ljmp
jl
punpcklbw
cmp
push
out
loop
test
test
fcomps
orl
fcompl
mov
sti
repnz
out
push
into
ds
pop
push
mov
cmp
data16
xorl
adc
sbbl
cmpsl
push
mov
mov
ds
jmp
dec
adc
out
insb
mov
adc
jno
jl
addr16
xchg
xchg
jno
or
or
fsubs
fldenv
iret
sub
xor
movsl
insl
scas
adc
pop
lds
negb
push
bound
in
lds
jne
jb
repnz
das
ss
in
ds
mov
mov
repnz
jae
xor
pop
cli
fnstenv
add
clc
in
test
icebp
fwait
pop
or
sbb
mov
xor
or
das
xlat
in
jnp
xor
pop
push
xor
popf
popa
sub
ds
les
xchg
dec
cmp
or
jae
mov
out
jb
xor
imul
lea
mov
and
bswap
add
mov
inc
aas
fildll
test
lods
out
sahf
sbb
pop
or
and
arpl
xorb
test
inc
shll
xor
mov
xchg
imul
xor
int
adc
add
mov
int
shrl
mov
shlb
outsb
jle
xor
pop
or
je
stc
shl
push
pop
fsubrs
mov
add
or
in
add
sbb
gs
sahf
ja
adcl
int3
movl
test
xor
insb
in
push
nop
lcall
adcb
out
clc
xchg
mov
pop
fwait
hlt
pop
sub
test
push
daa
cmp
in
dec
pop
mov
mov
mov
lahf
int3
add
std
ja
out
leave
cmp
cwtl
mov
not
fisttpl
push
push
loopne
xchg
add
inc
sbb
push
inc
das
inc
adc
jmp
lcall
xor
dec
cmpsl
mov
sub
inc
daa
add
out
push
mov
push
sub
pop
test
or
jmp
lret
jmp
fninit
adc
sub
inc
jg
adc
lods
hlt
mov
aas
stc
out
out
or
jo
lock
mov
and
and
add
movb
inc
dec
aaa
and
cmp
mov
test
mov
or
adc
out
cmc
dec
fbstp
and
mov
jg
sub
rcrb
xchg
mov
pop
ja
sub
push
dec
call
lds
dec
lock
test
sub
insl
mov
push
mov
pop
addl
add
or
and
and
jnp
icebp
sbb
push
jb
ss
sub
ja
jmp
push
mulb
inc
jmp
jno
test
pop
test
mov
add
pushf
dec
pop
or
mov
scas
ljmp
or
inc
add
sbb
mov
mov
sub
loop
icebp
fstpl
lcall
sub
mov
push
fs
inc
dec
inc
movsl
xor
adc
jmp
lods
sub
ljmp
enter
lcall
dec
gs
mov
adc
arpl
clc
int3
movsb
sahf
adc
insl
jno
xor
pop
and
stos
xor
inc
pusha
ret
loope
lahf
jbe
push
lret
pushf
cmp
arpl
push
emms
mov
hlt
push
add
push
addl
popa
aas
popf
leave
ljmp
mov
cld
push
push
sub
frndint
ljmp
icebp
push
std
lcall
in
shll
cmp
inc
xchg
leave
lret
add
repnz
dec
inc
mov
add
jle
xchg
int3
fistpll
sub
loop
cs
shrb
repnz
mov
pop
or
or
cmp
loope
in
add
jno
mov
data16
divb
and
gs
pop
loopne
jg
int3
dec
jb
add
dec
mov
dec
push
jo
and
leave
shl
adcl
xchg
idivb
lret
imul
mov
lahf
sbb
loop
or
push
or
outsl
fmul
lods
xor
ljmp
sub
sub
inc
movsb
mov
mov
xchg
je
cmp
or
and
pslld
xchg
jl
sub
mov
xchg
push
xor
add
push
lcall
sub
scas
mov
push
lret
mov
fwait
add
push
mov
pop
pop
icebp
inc
cmpsl
rorl
sahf
fdivrl
out
hlt
aas
xchg
sub
jmp
fdivs
lock
adcl
incl
mov
push
imul
cmp
xchg
sub
cmp
enter
jo
std
mov
leave
ss
dec
xchg
xchg
dec
mov
add
or
dec
scas
cltd
dec
cltd
push
pop
pop
push
and
mov
stc
scas
pop
push
and
sahf
andb
repz
mov
rol
icebp
cmp
movl
jnp
dec
or
mov
popa
fwait
jno
andb
and
and
idivl
movsl
decl
enter
pop
cld
lds
or
mov
and
leave
outsb
jns
dec
mov
jmp
jge
and
pop
jno
sub
sub
sub
inc
add
mov
aas
jnp
add
inc
fdivs
ljmp
rorl
in
push
test
or
push
test
bound
push
mov
xorl
jbe
mov
add
inc
push
pop
fwait
imulb
pop
test
adc
cwtl
fs
neg
inc
and
xor
push
mov
or
mov
jbe
sub
xor
mov
in
repnz
enter
sbb
push
in
adc
les
ja
test
fnsave
into
cmp
add
nop
lahf
popf
and
aaa
push
lcall
inc
sub
lret
mov
mov
call
dec
pop
sbb
into
and
inc
cmp
cld
and
xor
mov
mov
mov
add
add
ds
push
hlt
pop
sbb
insl
adc
mov
pop
and
lret
sbb
cmc
int3
aas
pop
cmp
pop
fiadds
mov
xchg
aaa
mov
inc
outsl
test
and
in
stos
cli
xchg
rcrb
in
int
fcmovnu
inc
jecxz
lods
fstp
testl
jae
shrb
cmp
in
jbe
sub
call
and
sarb
sbb
mov
sub
dec
je
push
fwait
pop
pusha
jg
outsb
repz
shlb
push
cmp
add
sarb
nop
stc
test
adc
jge
outsb
push
add
aas
and
shrb
popf
mov
outsb
fisubl
in
mov
dec
loop
add
or
jne
addr16
xchg
jp
push
imul
push
cmp
xchg
mov
xchg
scas
jl
imul
push
adc
out
out
rolb
shrl
dec
xchg
dec
or
scas
gs
add
mov
popa
repnz
outsl
scas
sbb
gs
loope
mov
pushf
lahf
enter
inc
into
inc
jecxz
adc
dec
mov
das
dec
das
idivb
ret
pop
mov
sahf
jmp
mov
stc
dec
sub
push
jge
pop
sbb
dec
dec
dec
and
mov
sbb
sbb
mov
or
in
jle
aaa
ja
jge
jb
pop
lea
outsl
mov
inc
and
add
sbb
sub
mov
dec
mov
shll
jle
stc
jns
adc
mov
jae
mov
and
sbb
push
les
jg
out
sub
pop
hlt
or
xchg
sub
idivl
popa
pop
sbb
into
mov
sbb
or
subl
jp
ror
jno
pop
adc
fstpl
in
stos
mull
inc
add
xchg
sahf
gs
or
lea
fistl
mov
lock
xchg
dec
shll
out
jnp
adc
sbb
aad
movsl
scas
lds
xor
lds
sbb
loop
cmp
xchg
imul
and
in
add
outsb
jno
jae
test
and
rcr
lret
gs
xor
inc
cmpsl
cmp
xor
fs
nop/reserved
cmpsl
cmpsb
inc
fwait
cmp
adc
sub
repz
jns
rorb
call
mov
adc
mov
das
pop
mov
sbb
fisttps
jo
sub
inc
sbb
xor
notl
add
push
sbb
mov
test
fidivrl
outsl
iret
adc
xor
dec
inc
push
mov
sbb
lea
pop
mov
xor
ljmp
cmp
scas
pop
xor
jne
addr16
mov
cltd
adcb
stos
scas
sub
pop
sbb
cli
test
cmovle
fsubs
dec
pusha
outsl
and
addb
cltd
insl
mov
dec
jmp
push
mov
loope
push
popa
xor
dec
push
xchg
cwtl
mov
cmp
lds
pop
sbb
xchg
inc
stos
and
ja
ds
xlat
mov
or
sub
xchg
jp
and
imul
test
je
arpl
add
out
in
add
mov
js
mov
cld
pushf
in
div
jecxz
fwait
push
xchg
aad
xlat
test
sbb
or
xchg
enter
inc
jl
push
nop
test
mov
pop
push
dec
and
test
mov
faddl
data16
push
inc
aad
mov
inc
mov
mov
out
out
ficoml
cld
aad
cmp
ficomps
fimuls
adcb
mov
out
pop
xor
imul
lcall
xor
pusha
popa
cmpsl
xor
push
pusha
iret
sub
mov
push
mov
and
and
add
push
aam
repnz
push
mov
gs
jb
cmp
sbb
outsb
adc
lds
iret
fmuls
xchg
insl
and
inc
push
dec
push
jne
fsubl
ja
xchg
pop
mov
fildl
testl
inc
dec
test
lea
fdivr
stc
add
popa
rcll
pop
jp
and
xchg
mov
mov
mov
xchg
push
addr16
inc
test
push
xchg
sbb
lock
mov
and
in
xchg
cmpsb
ret
add
mov
pop
adc
sti
aas
push
imul
fwait
call
out
hlt
popa
mov
sti
dec
imul
jecxz
enter
scas
push
inc
lahf
jg
mov
pop
dec
mov
cmp
dec
sbb
inc
or
mov
mov
pop
in
push
or
inc
sbb
push
cli
jnp
mov
xor
test
mov
cmpsb
nop
outsl
stos
mov
xor
add
dec
and
insb
or
mov
call
push
lds
inc
aad
adc
mov
mov
and
xor
pop
in
imul
jns
or
or
ret
mov
flds
in
cmp
outsl
adc
or
push
cmpsl
mov
mov
outsl
fwait
mov
or
xchg
push
aaa
addr16
adcl
jne
cmp
ds
lea
aam
dec
inc
xor
and
leave
mov
cmpsl
out
cwtl
call
mov
and
adc
mov
sbb
cwtl
mov
movsl
mov
or
into
dec
mov
push
in
or
jmp
and
test
jo
loopne
andl
inc
pushf
add
imul
sbb
std
pop
push
add
sti
aam
mov
mov
cmp
mov
push
aad
push
scas
insl
stc
iret
insl
orb
stc
xor
jns
inc
cltd
mov
sbb
mov
mov
int3
repnz
push
insb
lds
out
fnstenv
and
sbb
add
push
push
push
xchg
push
jae
imul
mov
idiv
fistl
pop
cmpb
sti
leave
shlb
test
fiadds
scas
aas
dec
cld
dec
pcmpeqb
notl
jge
mov
xchg
lods
adcl
mov
scas
gs
addr16
cmp
test
and
push
or
scas
imull
fidivrs
aas
or
pop
push
pop
repz
xor
test
fnstenv
inc
popf
mov
rolb
shlb
cmp
addr16
movsb
jnp
pop
jnp
push
call
outsl
push
pop
adc
repz
cmp
mov
or
jb
pop
pop
dec
out
mov
icebp
cmpl
sub
push
repnz
mov
pusha
rcrb
inc
fimuls
cmp
add
stos
insb
fisubrl
test
mov
lret
xchg
stos
subl
outsl
mov
xchg
jns
fldenv
cmc
xlat
and
movb
lret
mov
xchg
add
mov
jb
in
cltd
xchg
dec
xchg
add
sbb
out
mov
mov
jnp
std
sub
dec
inc
add
jo
lret
in
lcall
push
rcrl
insl
push
mov
adc
sbb
push
dec
sub
test
js
outsl
lret
aam
movsl
mov
push
popa
hlt
mov
aaa
and
jmp
mov
mov
test
xchg
xchg
movsl
ja
int
js
nop
sarl
and
sahf
sub
pusha
cmp
jle
and
jns
fisubs
out
xchg
jnp
adc
aad
push
imul
jl
jae
jnp
sti
inc
dec
cs
cltd
and
and
xchg
shlb
xchg
cmp
fcomps
sub
jp
pop
fdivrs
adcb
stc
jmp
pop
out
fwait
inc
pop
leave
mov
xchg
add
sti
inc
push
mov
in
inc
or
pop
jb
shll
aam
or
jecxz
xchg
jne
mov
testb
movsl
out
cmp
cmpsb
sub
or
pushf
lcall
fisttpl
hlt
shll
sub
add
pop
popa
es
ds
roll
fistpl
pop
ljmp
lods
movsb
and
pop
push
jb
mov
inc
adc
jns
jp
xchg
test
cmp
push
push
sbbl
xchg
test
mov
mov
add
adc
sub
push
loope
push
mov
lock
in
lods
and
out
test
mov
lret
call
pop
movsl
rclb
ss
mov
mov
test
sbb
lods
aam
cmp
xor
mov
mov
push
or
xor
in
push
xchg
movsb
jle
js
addb
xor
adc
ret
dec
shlb
mov
sbb
mov
ss
dec
push
lret
mov
call
sahf
lcall
add
fisubl
mov
std
setge
nop
push
into
push
repz
mov
mov
fildll
clc
mov
xchg
int3
cmpl
inc
xor
lahf
mov
pop
push
mov
loopne
shld
ljmp
lcall
cmpsl
pop
testb
cmp
fsts
mov
xor
jb
ja
or
adc
out
cmp
adc
orb
push
or
les
or
movl
dec
imul
lret
adc
add
sbb
stos
pushl
mov
and
inc
dec
sbb
or
call
mov
add
fldenv
xchg
int
push
ret
inc
jp
loop
mov
xchg
fdivs
xchg
adc
ret
fs
mov
mov
xchg
and
sti
lods
mov
mov
in
xor
inc
sbb
adc
hlt
std
mov
sub
jp
xchg
jno
lcall
sub
shrb
inc
int
sub
inc
lds
pop
pop
stos
repnz
test
sti
imul
push
jns
stos
and
cmp
xchg
das
mov
cmpsl
and
lock
ljmp
mov
pop
sub
push
test
dec
mov
imul
notl
adc
cld
mov
pop
cmp
inc
call
push
jbe
lret
add
sti
aaa
and
push
xor
or
xor
fsubrp
xchg
mov
xor
mov
loopne
xchg
hlt
pop
aad
pop
cmp
cmpsb
pop
add
int3
jns
or
mov
mov
mov
mov
ret
jecxz
add
mov
xchg
cwtl
sbb
adc
or
int3
imul
out
movsl
out
push
outsl
loope
pop
pop
jnp
daa
call
imul
hlt
mov
fwait
cmp
inc
js
cmp
pop
jecxz
das
mov
hlt
pushf
inc
add
jge
loope
mov
push
cwtl
xorl
nop
stos
mov
xor
test
out
and
fwait
mov
inc
repnz
ljmp
icebp
add
add
pusha
pop
fidivrl
je
pop
mov
fwait
xor
jns
nop
dec
sahf
add
sbb
mov
xchg
adc
mov
aas
pop
cltd
add
jbe
aas
fprem
inc
aaa
xlat
shl
cmp
inc
sub
push
dec
jmp
or
roll
mov
push
ret
mov
add
mov
test
xchg
dec
and
mov
push
xchg
lock
cmc
ret
push
mov
lahf
cltd
jae
jo
int
or
and
add
mov
inc
arpl
into
test
lahf
orl
mov
outsb
enter
int3
mov
inc
je
xor
dec
mov
jl
lods
mov
in
xchg
inc
mov
pushf
and
and
push
sub
ja
mov
leave
cmpsl
icebp
adc
jno
or
mov
sub
test
or
popf
data16
dec
mov
jno
xchg
fstpl
inc
div
adc
mov
aaa
aas
pop
test
jbe
movlps
or
push
in
pusha
adc
pop
sbb
inc
mov
loop
mov
push
insl
imull
outsl
jle
xor
pushf
mov
shlb
and
imul
xchg
dec
add
mov
mov
jnp
dec
mov
push
fildll
cmpb
jne
les
mov
inc
aas
test
cmp
fldl
push
mov
mov
sbb
mov
cmovne
jno
in
aaa
pusha
je
outsb
mov
mov
or
loopne
jmp
adc
movsb
pop
cmp
test
js
mov
out
sub
out
push
bound
jp
fimull
test
push
stos
stos
rorl
mov
mov
lock
mov
lock
std
xor
push
out
cs
insl
aam
faddl
mov
push
fucomi
push
push
das
test
jmp
and
scas
aad
incb
into
cmp
sbb
ds
jo
add
sarb
scas
aas
outsb
push
dec
ret
or
mov
insb
std
mov
pop
jns
loope
dec
inc
lret
outsb
jg
out
mov
out
cld
cwtl
jae
test
inc
xchg
enter
jo
mov
and
xchg
cltd
push
add
sbb
mov
mov
adc
cltd
pop
sub
pop
sub
or
pop
push
inc
push
mov
push
pusha
lds
aas
mov
bound
dec
mov
das
xchg
mov
jbe
mov
mov
setb
mov
adc
test
repz
lret
sarl
aas
iret
outsl
int
and
mov
and
adcb
mov
push
cmc
mov
mov
mov
leave
test
in
xor
fisubl
pop
or
mov
shlb
mov
lods
rcl
ja
aaa
pop
fisttps
mov
loop
adc
xchg
cmp
nop
sub
int
or
lds
pop
xchg
and
clc
adc
gs
jecxz
dec
and
int
mov
cwtl
sub
push
int
mov
xor
mov
jg
inc
loopne
sbb
add
pop
adc
or
shrb
sub
or
negb
in
scas
aas
pop
adc
mov
inc
cmp
adc
mov
lahf
cmp
test
les
cmc
dec
sahf
jle
lods
mov
pop
jl
test
sarl
sbb
les
scas
mov
jg
inc
lahf
scas
insl
movups
sub
pop
pusha
sub
sub
push
mov
ja
mov
ja
mov
add
adc
lret
sub
cltd
dec
xchg
js
dec
or
cmc
jno
js
jmp
sbb
sbb
xchg
cli
pop
jmp
stc
dec
pop
and
add
push
or
sahf
cmp
repnz
mov
mov
js
ret
xor
outsl
test
xchg
aas
jp
cmp
and
jmp
mov
add
shlb
les
push
inc
cmp
aad
or
add
scas
sub
aas
adcb
xchg
mull
jmp
adc
xlat
push
xor
jg
cmpsl
int
fcompl
or
movsb
xchg
mov
orb
imul
enter
lods
mov
loope
stc
call
add
and
lea
or
adcb
sub
mov
lahf
xchg
push
mov
ja
cmp
aam
int
addr16
stos
imul
add
push
inc
andb
arpl
pop
and
test
shll
push
clc
inc
rorl
std
and
hlt
cmp
shll
sub
sarl
push
stos
roll
std
loop
jae
rorb
jle
dec
loope
stos
imul
fadd
jp
lea
mov
and
call
and
pop
mov
scas
int
fbld
cmp
fstps
roll
lea
jbe
sub
cmpsl
adc
or
mov
xchg
es
add
pop
roll
xor
fstpt
add
call
insl
or
jg
dec
push
test
dec
loop
mov
out
movsb
mov
lea
mov
xor
xchg
jb
popf
mov
lcall
ffreep
std
cmp
mov
xor
insb
ret
and
inc
fs
cmp
xor
movsl
pushl
pop
je
out
ja
lds
bound
in
faddl
sub
sahf
sbb
lret
or
lods
leave
in
mov
call
popa
scas
dec
ss
leave
lods
mov
int
fists
cmp
jbe
pop
jmp
aas
add
or
jp
test
push
push
cwtl
sarl
ret
jl
fisttps
das
pop
inc
xorb
mov
mov
sub
mov
push
fidivrs
mov
ja
or
or
aam
js
add
aad
sar
pop
mov
decl
enter
ss
mov
faddl
cmp
in
pop
mov
inc
insl
sub
or
jmp
jle
sbb
xchg
jecxz
cli
inc
ds
cmp
add
das
or
sub
sbb
ret
push
jae
lods
fdivrl
or
sub
mov
xchg
adc
imul
clc
mov
scas
pop
shrl
fstp
push
out
cmp
testl
cmpl
pop
xor
fimull
ss
pop
ret
mov
add
enter
or
or
push
test
sub
and
es
sti
fcmovnu
sub
cmpsl
and
adc
add
adc
xchg
pusha
test
dec
popf
dec
fs
push
pop
mov
sub
add
sbb
dec
xchg
loope
jl
fcoml
dec
mov
outsl
jae
push
repnz
adc
in
mov
insl
fimull
add
imul
push
in
fisttpll
push
jns
dec
cmp
addr16
dec
mov
add
je
stos
add
push
rolb
pop
lret
sub
push
loop
push
add
sbb
imulb
xchg
outsb
mov
push
jae
add
pop
sub
push
add
mov
loop
mov
and
arpl
fcoml
outsb
scas
mov
push
sarl
out
sti
adc
mov
cmc
dec
xor
js
imul
cmp
mov
push
jo
push
vpmacssdd
adc
sarb
cmp
es
push
mov
fdivrp
pop
ffree
cmp
mov
sub
outsl
push
xchg
test
pushf
je
cmp
mov
pop
dec
arpl
fsubr
notb
popa
scas
jg
jmp
add
je
jo
jmp
and
mov
push
cli
xor
push
jg
notl
push
mov
pushf
push
mov
push
subb
mov
or
mov
es
repz
add
dec
imul
jne
mov
mov
cmc
xchg
imul
push
add
fdivp
pop
orl
test
push
test
mov
pop
insb
push
test
pop
loope
jl
inc
repnz
aam
cmc
cmp
jae
add
sbb
mov
jmp
xchg
mov
inc
dec
test
out
das
jo
rcll
hlt
sub
pop
fistpll
adc
jae
and
jge
ds
mov
jle
popa
int
ror
nop
leave
mov
sub
sub
cmp
xchg
push
scas
fidivrs
jnp
lea
roll
cld
sti
ljmp
repz
xchg
xchg
mov
jae
sbb
pop
ds
dec
sarl
outsb
int
cmp
sub
aaa
stc
test
push
mov
mov
cld
xor
sbb
or
ffree
inc
imul
pop
mov
rorb
cmpsl
jp
mov
pushf
jb
inc
add
ds
sbb
int
lods
dec
mov
ss
les
out
mov
sbb
aam
pushf
pop
xor
cmc
test
leave
mov
ds
shll
add
int
lods
and
mov
dec
test
data16
xchg
push
dec
adc
xchg
adc
mov
inc
xor
cwtl
popa
push
lds
jle
lods
or
inc
sub
test
push
sahf
cld
aam
mov
in
add
cli
sbb
repz
pop
mov
xor
imul
in
or
std
and
repz
in
xchg
xchg
mov
dec
sbb
push
sbb
addr16
add
sub
dec
push
xlat
push
movsb
cmp
sbb
out
push
ret
inc
inc
or
stc
inc
pop
int3
or
cmpsl
movsb
sahf
or
pop
mul
add
adc
mov
enter
cltd
sbb
mov
fcomi
sub
call
pop
or
xchg
loope
nop
mov
mov
jp
push
xor
inc
sarl
into
stos
mov
ljmp
pushl
shll
sub
sbb
clc
lock
sub
bound
lret
lods
pop
and
xor
or
outsb
in
popf
pop
lods
es
movl
mov
sub
out
int3
cmp
icebp
push
adc
mov
test
push
pop
pop
pop
xchg
repz
fmuls
xor
jno
push
lds
jmp
mov
xor
scas
int3
stc
rol
mov
pop
push
icebp
mov
and
cmpsl
and
lea
mov
xlat
gs
lahf
dec
dec
pop
sarl
cmp
hlt
fsubr
orb
dec
add
mov
or
sub
sbb
aas
add
insl
nop
push
add
jo
fxtract
xchg
adc
lds
mov
sbb
in
sub
jae
jl
push
push
sbb
dec
imul
shll
out
ffreep
nop
dec
push
bound
push
jnp
xlat
push
xabort
add
pushf
cmp
aas
out
and
fstpl
inc
out
adc
mov
jmp
mov
lds
inc
mov
nop
xor
lret
mov
adc
xchg
adc
xlat
xchg
stos
jae
pop
cmp
sbb
add
push
sub
sub
addr16
or
add
sbb
lcall
pop
or
push
enter
enter
and
fwait
aam
lods
or
pop
ret
cmp
faddp
cmpsb
orl
imul
sahf
ret
imul
sbbl
imul
leave
nop
mov
cmp
ljmp
out
out
dec
mov
pop
cmpsb
push
jecxz
inc
jmp
outsl
sbb
push
xorb
es
cmp
push
jle
cmp
rcll
and
aas
add
dec
jb
pushf
dec
inc
adc
push
lds
pop
in
xlat
leave
in
xchg
xchg
push
jae
nop
push
mov
push
outsl
mov
fdiv
jmp
shrl
imul
fiadds
or
or
pop
inc
dec
pop
jo
repz
sbb
xchg
push
in
adc
jmp
or
lcall
cmp
mov
fsubl
scas
ret
pushf
sbb
ficoml
fwait
add
sbb
sar
call
add
or
mov
jbe
movsl
adc
hlt
xor
adc
xchg
inc
aas
cmpsb
lods
sahf
in
rorb
ficoms
mov
inc
aad
mov
push
adc
jmpw
inc
std
mov
in
inc
inc
mov
shll
mov
mov
push
or
jp
mov
sti
sbb
sar
pushf
push
jnp
push
fcompl
mov
loopne
push
mov
jl
int
jno
mov
and
or
cli
out
cmp
and
in
sbb
fimull
ret
add
sub
addr16
add
cmp
lret
movsb
ljmp
stos
mov
pop
cwtl
xor
inc
gs
push
mov
cmp
jne
xchg
fs
mov
jnp
lahf
sahf
mov
xchg
je
push
cmp
loopne
inc
cmc
daa
ret
or
pop
mov
pop
in
xchg
jb
pop
mov
and
push
jmp
jo
and
inc
loopne
loope
dec
int3
xchg
loopne
aad
stos
inc
cmc
add
imul
cmp
jg
cmpsl
or
push
mov
fisttpl
js
or
jb
mov
mov
mov
mov
push
cmpsb
push
dec
mov
jmp
cmp
sub
mov
cli
hlt
xchg
ror
mov
xor
dec
cmc
xchg
roll
stos
stos
hlt
in
push
test
dec
icebp
push
pop
push
mov
into
pop
das
outsb
add
sub
push
daa
and
sbb
fdivp
daa
lea
dec
push
cld
dec
aas
or
adc
mov
aaa
adc
fstl
inc
cmp
imul
scas
mov
inc
retw
inc
inc
loope
jle
loopne
xor
mov
or
mov
mov
cmp
adc
jl
pusha
jecxz
mov
imul
lds
xchg
xor
jle
enter
push
dec
out
fstl
or
mov
or
jo
jne
pop
gs
sbb
in
rclb
mov
push
cltd
xor
inc
loopne
pushf
je
fisubl
sub
outsb
mov
mov
adc
cld
call
ret
lods
jae
pop
dec
enter
dec
dec
dec
out
jns
inc
aas
inc
dec
aad
jns
pusha
sub
mov
es
in
jbe
gs
sub
out
xor
add
push
outsl
lds
pop
push
cmc
mov
mov
lcall
arpl
sti
mov
jmp
jl
nop
stos
sub
lcall
cmp
inc
inc
je
mov
movsb
sub
jnp
jecxz
inc
jnp
addr16
cmp
push
sbb
aad
mov
sbb
jne
jns
jo
std
xor
cli
cmp
jno
xorb
loop
pop
mov
xor
and
or
pop
popa
cmpsl
or
shlb
and
in
inc
xchg
shlb
decl
pop
cmp
mov
cltd
xorb
leave
mull
sub
push
iret
cltd
pusha
or
and
inc
adc
daa
outsl
sbb
mov
imul
shlb
pop
pop
add
or
pushf
inc
fcoml
jbe
mov
sub
fsubs
shrb
and
and
jge
ret
out
addl
ja
xchg
sbb
gs
inc
xor
lret
xor
or
out
mov
ret
data16
add
into
lods
mov
sub
mov
xchg
cmc
inc
decl
rorb
stc
iret
mov
repnz
dec
in
mov
inc
out
cmp
adc
test
call
mov
repnz
icebp
jns
inc
lds
mov
mov
jo
ffreep
loop
call
sbb
in
shll
fsubs
dec
mov
xchg
or
push
jne
rorb
in
and
xor
mov
cmp
jecxz
aam
pop
inc
inc
xor
xchg
mov
xor
and
stos
popa
mov
jmp
sti
repnz
stos
and
jne
in
shr
xor
mov
hlt
lea
test
inc
js
jno
mov
popa
fs
xchg
push
gs
movl
fadds
mov
cwtl
pop
ds
mov
mov
xchg
outsb
cmpl
mov
add
out
rorl
mov
fmuls
jae
ret
lret
out
mov
jecxz
jmp
dec
xchg
add
jo
dec
mov
jle
pop
and
push
dec
aad
push
and
ret
xor
out
or
loop
inc
hlt
sub
mov
bound
loop
mov
and
out
fucomi
call
adc
xchg
xor
jmp
jmp
dec
faddl
mov
or
test
rcrl
into
enter
mov
jno
lcall
int
int
sbb
pushf
or
aas
stc
and
mov
or
lcall
fsubl
mov
js
or
cltd
mov
inc
add
sbbb
stc
loopne
jge
add
or
add
xchg
push
cli
outsb
or
cld
test
mov
andps
push
inc
push
outsb
fs
jge
icebp
jge
and
and
cmp
mov
adc
fadd
stc
arpl
sbb
or
or
and
mov
jns
mov
pop
mov
and
xchg
scas
icebp
mov
dec
sub
cld
aam
adc
loopne
push
jmp
nop
ljmp
xor
cmp
mov
xchg
dec
jno
xchg
mov
bound
sbb
adc
mov
xchg
arpl
cmp
movsl
inc
mov
loopne
mov
jge
popf
adc
inc
sub
mov
scas
sbb
js
je
pushf
iret
out
push
outsb
ljmp
movsl
sub
sahf
cmpsl
pop
shrb
push
aas
into
inc
shrb
xchg
push
sti
ficompl
cmp
pop
cmp
jo
insl
out
push
das
inc
popf
push
mov
call
addr16
cmpsb
dec
or
jge
lcall
imul
neg
ror
cmp
test
call
mov
mov
fwait
add
xchg
push
mov
sub
or
sbb
jbe
push
out
and
in
push
sbb
mov
jecxz
fs
or
nop
scas
jbe
test
pop
sbb
into
mov
pushf
dec
add
inc
pop
xor
out
xor
add
arpl
fsubl
mov
fwait
or
adc
cmp
inc
mov
fcmovb
push
or
xchg
dec
ljmp
pop
inc
out
mov
test
cld
cltd
pusha
jmp
frstor
frstor
dec
mov
lahf
and
xor
stc
int
sub
xchg
jmp
push
jg
ret
sbb
mov
enter
mov
cs
mov
add
cmp
shr
mov
popf
pop
icebp
stos
jns
mov
imul
cmpsl
xor
mov
aad
ds
jge
dec
mov
cltd
xor
ljmp
outsb
lcall
vmwrite
std
inc
addr16
je
cli
xor
and
clc
into
out
or
je
mov
push
jmp
sahf
andl
jle
out
jecxz
cwtl
adc
pop
push
aad
xor
loope
into
negl
mov
or
mov
push
pop
cltd
fcmovbe
adc
cwtl
jae
out
and
mov
repnz
xorb
ffreep
xchg
mov
hlt
fdivrp
pop
jno
pop
adcb
aaa
or
push
jg
mov
mov
aaa
mov
test
test
std
addr16
dec
test
push
xor
jnp
jo
jle
inc
test
inc
pushf
pop
lcall
or
movsb
push
adcb
fwait
push
cli
dec
bound
inc
notb
fstl
stos
out
xchg
cmp
xor
jge
gs
or
inc
pop
dec
jecxz
mov
notl
movsl
jg
adc
sub
xchg
add
add
or
ret
ss
ret
cli
fdivrs
rorl
xorl
rolb
pop
sub
lret
aas
std
std
aaa
rcrl
aad
push
sub
sbb
fwait
in
out
popa
mov
lods
es
or
dec
mov
stos
sbbl
lcall
push
pushf
dec
cmp
sbb
lcall
jp
jbe
lcall
jnp
push
negb
call
je
div
cmp
popf
push
mov
xchg
mov
stos
jae
stos
int3
ror
add
push
dec
cmp
mov
pop
jnp
das
mov
pop
ds
loopne
insb
shll
daa
aas
mov
jg
scas
outsl
popf
and
mov
shl
push
ds
inc
imul
sahf
loopne
loopne
dec
xor
mov
or
push
cs
mov
inc
loop
adc
push
lahf
jns
pop
fdivrs
fldl
xlat
inc
das
jp
jge
sar
dec
dec
decl
in
popa
fnstsw
push
lahf
inc
and
data16
xchg
mov
jmp
push
aaa
and
jp
jbe
adc
fucomip
movsb
lods
test
sbb
in
mov
or
mov
std
mov
mov
add
sbb
mov
push
mov
xor
ds
mov
push
movaps
pop
fwait
ret
pop
lret
xlat
aaa
cmc
flds
dec
stc
loopne
pop
mov
sub
sbb
mov
icebp
add
push
orl
sbb
or
sub
cwtl
sub
push
outsb
ja
test
jecxz
enter
adc
push
arpl
hlt
call
cs
or
lds
mov
nop
out
xchg
jns
jl
les
je
xchg
outsb
sub
in
jne
leave
in
daa
aam
cmc
xor
xor
lods
outsb
mov
repnz
scas
mov
cmp
xor
loop
and
fs
roll
test
xchg
addr16
and
cwtl
addr16
aad
dec
sbb
cmpb
mov
mov
je
in
lcall
lret
loopne
mov
mov
addb
out
arpl
sahf
dec
ss
fnstsw
cltd
xlat
xor
fs
or
fs
xor
sub
shlb
lock
adc
mov
cltd
mov
sbb
sub
testb
pop
out
hlt
jb
das
add
in
popf
xlat
rep
xor
frstor
mov
jl
jb
mov
jl
add
add
lahf
xchg
mov
sub
lea
sbb
pushf
loope
out
add
jo
sub
pop
mov
adc
pop
ljmp
jns
xchg
add
adc
mov
jl
and
repnz
push
cwtl
mov
iret
add
leave
pop
adc
scas
in
push
mov
sbb
aam
xchg
sbb
out
xchg
xor
andl
dec
mov
xchg
insl
sarl
push
aad
xchg
push
jnp
shr
rcrb
mov
ss
xchg
pop
ret
add
out
ret
cmpsb
inc
adc
pop
pop
mov
mov
add
xchg
add
rol
push
popf
cld
mov
ss
inc
sub
xlat
popf
loop
loopne
outsb
pop
aad
inc
lea
imul
aas
xor
push
arpl
inc
js
vmaxpd
xchg
test
and
jo
shll
stc
in
push
ret
dec
sbb
mov
into
iret
inc
stc
push
stos
pop
lock
mov
sub
inc
sahf
bound
test
cmp
mov
stos
sbb
pop
shll
repz
jnp
lock
cmp
rcrl
pop
mov
mov
popf
sub
cli
fnstsw
out
sbb
roll
jne
lret
jne
cmpsl
int
call
sbb
dec
or
cmp
lcall
ja
jmp
xchg
push
mov
inc
dec
push
or
jns
inc
pop
into
sbb
lds
in
dec
adc
sub
aad
inc
or
jecxz
adc
fidivs
and
mov
mov
lret
sahf
les
sti
mov
cmpsb
xor
std
stc
cmpsb
jecxz
vmovshdup
ljmp
lcall
and
adcb
js
dec
sbb
loop
cmp
fwait
test
xlat
push
lahf
mov
adc
pop
stc
push
addb
gs
adc
xchg
push
into
push
jmp
push
mov
inc
xorb
pop
cwtl
stos
fs
stc
adc
test
les
bound
mov
fistpl
in
pop
cmp
dec
dec
sbb
repz
sbb
xchg
pop
hlt
mov
pushf
orl
jae
push
sbb
sarb
outsb
int
pop
xchg
cmpsb
leave
mov
xchg
int
xchg
or
out
mov
jno
mov
lcall
fsubs
or
fdiv
adc
icebp
test
divl
cld
jnp
ljmp
adc
xor
into
shlb
pop
lea
aas
popa
ss
mov
lock
lea
pop
pop
mov
push
packssdw
xor
mov
out
add
mov
pop
test
jb
lret
sbb
cmpsl
xchg
imul
xchg
es
rcl
cld
pop
dec
mov
dec
popa
hlt
clc
ljmp
sarb
int3
sub
cld
fs
insl
es
out
shrb
adc
ret
outsb
adc
mov
das
dec
dec
inc
icebp
mov
pop
cmp
xor
dec
mov
cmpsb
jp
or
out
call
adcb
test
and
jae
pop
cld
cmpsl
mov
pop
ret
jbe
lods
in
sbb
pop
and
pop
pop
aaa
inc
mov
cmpsl
inc
jb
adc
xor
ficomps
roll
in
mov
push
sub
mov
mov
sbb
popf
andb
and
jns
cli
inc
mov
mov
