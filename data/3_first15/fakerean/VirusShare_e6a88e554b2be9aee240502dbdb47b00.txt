add
add
jae
mov
mov
mov
shl
movl
sub
and
mov
mov
shr
movzbl
cmp
mov
jbe
lea
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
ja
test
jne
mov
shr
movzbl
add
shr
sub
mov
shr
test
mov
mov
jne
movl
jmp
cmp
ja
jmp
cmpl
je
mov
mov
add
subl
movl
jmp
test
jne
mov
shr
movzbl
mov
mov
movzbl
add
mov
shl
mov
mov
shr
sub
and
shr
add
mov
mov
mov
shr
movzbl
movzbl
add
cmp
ja
movzbl
mov
shr
sub
mov
jmp
sub
cmp
ja
mov
cmp
mov
ja
sub
add
mov
cmp
mov
jbe
mov
jmp
cmp
jb
mov
mov
shl
sub
sub
and
add
shr
add
jmp
cmpl
jne
movl
cmpl
jne
movl
movl
mov
mov
mov
mov
mov
daa
inc
add
sub
mov
mov
je
mov
mov
push
push
call
add
test
jne
mov
mov
sub
mov
sub
add
add
add
cmpl
je
test
je
cmpl
push
jne
mov
mov
sub
call
add
mov
mov
mov
mov
neg
sbb
and
cmp
je
xor
cmp
je
cmp
je
xor
add
add
add
test
mov
je
cmpl
je
mov
pop
pop
pop
pop
add
ret
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
push
mov
add
add
pop
cmp
decl
push
adc
mov
or
add
push
add
les
cmpl
mov
mov
mov
je
mov
jmp
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jae
jmp
cmpl
je
cmpl
je
cmpl
jne
cmp
jae
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
shr
mov
and
and
sub
cmp
mov
jne
movl
shr
mov
sub
jmp
mov
jmp
movl
movl
jmp
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
and
add
mov
shr
mov
and
mov
add
shr
mov
mov
and
add
shr
sub
cmpl
mov
mov
ja
cmpl
ja
movl
movl
mov
out
inc
add
cmp
jb
mov
jns
inc
add
scas
lahf
adc
mov
and
mov
mov
add
in
inc
add
add
pop
mov
jb
mov
cmp
sbb
inc
add
or
add
scas
lahf
adc
inc
push
jo
add
inc
push
out
xchg
add
insb
mov
mov
lea
push
push
lea
push
lea
push
mov
movl
call
add
test
mov
jne
mov
mov
xchg
clc
inc
add
add
pusha
cmp
ds
inc
add
sub
shl
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
ja
mov
shr
cmp
jae
mov
shr
movzbl
cmp
jb
movzbl
mov
test
mov
mov
addl
cmc
inc
add
mov
add
cmp
lods
push
inc
add
jmp
mov
add
test
xchg
xor
lea
lea
mov
mov
lea
push
push
mov
lea
push
lea
push
movl
call
add
test
jne
mov
lea
push
lea
push
mov
lea
push
mov
mov
lea
push
movl
call
add
test
mov
jne
cmpl
movl
je
movl
jmp
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jae
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
jbe
jmp
mov
cmp
je
cmp
movzbl
jne
lea
cmp
jb
shr
mov
and
add
mov
shr
mov
sub
add
mov
movl
mov
cmp
inc
add
pusha
mov
cmp
ja
cmpl
je
mov
mov
sub
inc
add
mov
addl
and
add
jne
jmp
movzbl
lea
cmp
jb
mov
dec
adc
test
je
movzwl
mov
and
add
shr
mov
mov
sub
jmp
lea
cmp
jae
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jb
shr
mov
and
add
mov
shr
mov
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jae
jmp
cmpl
jne
movl
jmp
mov
and
shr
sub
movl
mov
jmp
cmpl
jge
mov
mov
cmp
jne
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jae
jmp
mov
shr
mov
movzbl
mov
movzbl
add
mov
mov
shl
mov
sub
and
shr
mov
shr
add
mov
mov
mov
movzbl
mov
shr
movzbl
add
cmp
ja
movzbl
mov
shr
sub
add
jmp
jmp
lea
cmpl
je
mov
movzbl
mov
shl
mov
add
mov
add
movzbl
add
subl
mov
shl
mov
add
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
sub
je
sub
jne
cmpl
movl
movl
movl
movl
movl
jne
jmp
test
jne
jmp
cmp
jae
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
mov
jb
mov
sub
mov
add
add
test
je
cmpl
mov
jne
mov
mov
sub
push
mov
call
add
mov
mov
mov
mov
cmpl
mov
mov
mov
jne
and
mov
shl
add
xor
mov
shl
add
mov
shr
add
cmp
jne
xor
mov
xor
jmp
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
mov
jb
testb
jne
mov
test
movl
jne
testb
je
movzbl
shl
mov
shr
add
xor
mov
div
test
jne
mov
and
cmp
jne
mov
shr
mov
and
add
test
je
sub
cmp
ja
mov
shl
push
xor
xor
mov
call
mov
add
test
mov
mov
jne
mov
xor
mov
mov
xor
jmp
cmpl
je
jmp
movl
mov
jmp
add
sub
sub
jmp
lea
cmpl
je
movzbl
mov
shl
mov
subl
add
add
movzbl
add
mov
mov
shl
mov
add
mov
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
nop
push
cmc
push
adc
xorb
xchg
xorl
adc
xorl
inc
test
adc
test
adc
test
adc
xchg
adc
push
adc
xchg
adc
mov
adc
mov
adc
push
adc
push
adc
adc
push
adc
in
push
adc
in
push
adc
out
push
adc
out
push
adc
out
push
adc
adc
aaa
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmpl
je
cmpl
je
sub
push
mov
cmp
jae
sub
cmp
jbe
mov
mov
mov
add
push
sub
push
push
call
add
sub
jne
add
mov
mov
cmp
je
mov
cmp
jae
add
mov
pop
pop
pop
xor
pop
ret
mov
mov
shl
movl
movl
mov
jmp
mov
mov
mov
shl
mov
push
push
push
call
add
test
mov
jne
jmp
mov
mov
push
sub
push
push
call
mov
add
pop
mov
movl
pop
pop
xor
pop
ret
mov
mov
push
sub
push
push
call
mov
add
pop
mov
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
cmp
push
mov
mov
push
lea
jb
lea
mov
mov
lea
push
push
mov
call
mov
add
test
je
cmp
jne
mov
mov
sub
test
mov
je
mov
push
mov
call
add
cmp
mov
jne
lea
push
call
mov
add
cmp
jne
xor
pop
pop
pop
ret
mov
cmp
jne
jmp
xor
jmp
push
mov
cmpl
jne
cmpb
jne
lea
xor
call
push
movb
call
test
js
mov
test
je
call
test
js
mov
mov
mov
mov
push
call
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
test
je
mov
test
je
xor
mov
xor
mov
mov
mov
cmp
jne
cmp
je
push
mov
push
push
call
mov
mov
xor
cmp
jne
mov
mov
cmp
je
lea
mov
or
lock
dec
je
movl
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
cmp
ja
jmp
cmp
je
mov
mov
sub
mov
cmp
jae
lea
mov
test
je
mov
push
mov
add
push
push
call
add
mov
add
mov
mov
xor
mov
cmp
jb
mov
mov
cmp
je
call
jmp
lea
jmp
mov
jle
cmp
mov
cmp
popf
adc
adc
cld
push
adc
in
mov
call
test
js
push
pushl
mov
pushl
mov
pushl
mov
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
xor
pop
ret
cmpl
push
push
push
lea
je
mov
mov
cmpb
je
mov
push
mov
call
mov
mov
push
push
mov
push
call
test
js
mov
mov
mov
add
push
push
call
test
js
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
je
xor
cmp
je
mov
mov
cmp
jne
xor
pop
pop
add
ret
mov
push
mov
push
push
lea
push
push
push
push
push
lea
mov
call
test
js
mov
cmp
je
cmp
je
xor
mov
movl
lea
cmp
je
mov
cmp
jge
mov
mov
mov
cmp
mov
jne
cmp
mov
mov
jne
add
cmp
jge
cmp
jle
sub
mov
mov
js
lea
mov
sub
cmp
mov
mov
jge
lea
mov
mov
cmp
jl
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
addl
mov
jmp
lea
call
mov
cmp
jne
xor
pop
pop
pop
pop
add
ret
lea
call
mov
cmp
je
testl
je
push
call
add
pop
pop
pop
xor
pop
add
ret
push
mov
push
push
xor
cmp
je
cmp
je
push
push
mov
lea
mov
test
je
pushl
mov
xor
inc
mov
shl
lea
push
push
pushl
pushl
pushl
push
call
inc
add
cmp
jl
mov
pop
pop
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
je
test
push
push
je
sar
add
mov
lea
or
mov
pop
mov
pop
pop
pop
ret
mov
test
mov
je
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
pop
or
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
call
test
jne
add
mov
cmpb
je
mov
mov
cmovae
add
add
test
sbb
dec
and
push
or
jbe
add
add
add
mov
movzbl
add
add
xor
sub
je
sub
jne
mov
add
add
mov
mov
sub
mov
pop
pop
mov
pop
add
ret
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
add
call
cmp
jne
movl
mov
xor
test
mov
jne
mov
cmpb
mov
je
mov
lea
push
lea
push
push
call
testl
jne
cmpl
je
mov
movl
mov
call
mov
mov
xor
xor
cmp
je
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
mov
mov
mov
call
mov
lea
call
test
jne
mov
mov
cmpb
mov
jne
mov
cmpb
je
mov
mov
cmpl
je
mov
add
mov
mov
cmpb
jne
mov
mov
mov
mov
call
cmp
jne
xor
xor
lea
cmpl
je
mov
mov
mov
push
lea
push
call
mov
mov
mov
add
mov
add
cmp
jne
mov
mov
mov
add
add
add
mov
sub
mov
mov
sub
mov
mov
sub
mov
pop
sub
pop
sub
pop
mov
mov
pop
add
ret
mov
push
lea
mov
call
mov
mov
lea
push
mov
mov
push
lea
call
cmpl
je
mov
mov
cmpb
je
mov
test
jne
mov
add
mov
mov
lea
mov
cmp
je
mov
test
je
movl
mov
lea
push
push
push
call
add
cmpl
je
test
je
mov
add
mov
mov
jmp
mov
mov
push
lea
mov
call
inc
add
pushl
mov
pushl
mov
pushl
mov
push
call
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
push
push
pushl
mov
call
add
mov
xor
mov
test
jne
mov
push
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
pushl
call
test
pop
pop
je
mov
jmp
push
mov
sub
andl
push
mov
push
push
mov
movzbl
push
pushl
and
pushl
lea
push
xor
call
mov
pushl
mov
mov
mov
mov
mov
mov
mov
inc
rorb
mov
lea
mov
call
mov
andl
andl
mov
mov
lea
call
mov
lea
mov
mov
call
andl
test
je
movl
mov
mov
push
call
push
lea
push
lea
push
push
lea
push
pushl
push
call
mov
add
test
je
mov
test
je
testb
mov
je
mov
mov
mov
cmp
jne
mov
mov
lea
call
xor
mov
call
mov
lea
call
mov
test
je
mov
mov
mov
mov
test
je
lea
call
andl
andl
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
cmpw
jne
push
mov
mov
push
lea
push
push
call
cmpl
je
push
mov
cmpl
mov
mov
je
orl
lea
push
mov
call
push
mov
call
push
call
mov
pop
mov
call
mov
test
jne
pop
pop
leave
ret
push
mov
push
push
push
push
push
mov
push
call
mov
test
je
push
call
pop
movl
cmpl
je
push
call
test
pop
je
mov
andl
mov
mov
mov
mov
mov
movl
mov
mov
mov
push
call
test
je
mov
push
call
mov
mov
push
push
push
call
mov
mov
push
call
test
je
cmpl
je
push
call
pop
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
and
push
mov
addl
push
js
mov
mov
or
test
je
xor
pop
mov
pop
ret
mov
cmp
mov
jne
test
mov
jne
cmpb
je
test
jne
mov
push
push
mov
call
movb
xor
pop
mov
pop
ret
mov
call
xor
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
lea
mov
mov
call
test
jne
mov
mov
lea
push
push
mov
call
test
js
add
lea
push
mov
call
mov
mov
mov
push
pushl
push
push
mov
call
test
mov
js
call
cmpl
jne
mov
mov
call
mov
mov
mov
mov
mov
imul
imul
lea
call
mov
push
push
push
call
flds
mov
push
fstps
call
flds
imul
add
sbb
call
xor
cmp
jne
pushl
mov
mov
lea
mov
mov
call
lea
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
mov
cmp
je
mov
mov
mov
call
push
lea
mov
call
lea
push
push
call
mov
test
jne
pushl
andl
mov
lea
call
mov
mov
mov
push
push
call
test
jne
lea
mov
test
mov
jne
push
call
test
pop
je
movl
add
add
rorb
cmpsb
in
add
js
call
mov
test
je
mov
mov
push
pushl
call
cmpl
jne
xor
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
test
jne
mov
mov
pushl
mov
push
call
ret
mov
jmp
push
mov
push
push
mov
push
call
xor
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
leave
ret
mov
mov
mov
push
mov
mov
mov
add
mov
xor
pop
ret
int3
mov
mov
testb
mov
je
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shr
not
and
mov
testb
jne
xor
mov
testb
jne
mov
mov
mov
shr
and
mov
ret
push
mov
lea
pop
jmp
xor
mov
mov
shr
and
mov
ret
push
mov
cmp
je
push
mov
mov
xor
cmp
ja
pop
pop
ret
push
mov
push
test
mov
jne
cmpl
push
jne
xor
lea
call
mov
pop
leave
ret
mov
push
call
jmp
mov
push
lea
call
mov
lea
push
push
call
cmpl
je
jmp
push
mov
mov
sub
call
test
jne
mov
mov
call
leave
ret
push
mov
mov
mov
call
test
mov
je
mov
push
push
xor
call
cmp
je
push
lea
mov
call
lea
lea
mov
push
push
call
pushl
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
pop
lea
call
pop
jmp
push
mov
sub
mov
xor
mov
push
mov
push
lea
mov
xor
cmp
push
mov
jne
xor
cmp
mov
jg
mov
test
je
mov
push
push
call
mov
andl
lea
lea
push
lea
movb
mov
movl
call
call
push
push
push
call
mov
test
je
testl
jne
push
mov
call
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
jmp
mov
mov
mov
call
mov
lea
call
mov
test
je
mov
push
call
incl
cmp
jl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
push
mov
lea
mov
mov
lea
push
and
or
lea
push
push
movl
mov
call
mov
mov
add
cmp
jne
mov
xor
cmp
mov
movl
mov
ja
push
push
push
lea
mov
mov
mov
push
call
mov
cmp
je
testl
je
lea
cmp
jne
mov
pop
pop
pop
mov
pop
ret
lea
sub
mov
mov
push
mov
mov
sub
mov
call
cmpl
je
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
push
mov
call
test
js
mov
mov
mov
push
call
mov
xor
test
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
test
push
push
mov
je
cmpb
je
mov
cmpl
mov
jge
push
mov
call
add
lea
mov
movl
call
test
je
xor
mov
test
jne
test
jne
test
jne
mov
xor
push
xor
mov
mov
call
add
cmp
jne
push
lea
push
push
mov
call
mov
mov
add
mov
mov
push
lea
lea
mov
call
test
je
mov
test
je
testb
mov
mov
jne
cmp
je
call
push
push
push
push
call
mov
cmp
ja
mov
cmpl
jge
mov
test
je
lea
push
call
add
mov
cmpl
jne
mov
mov
push
call
add
test
je
mov
mov
mov
push
push
push
mov
call
lea
push
call
add
test
je
mov
mov
pop
pop
pop
pop
xor
call
add
ret
cmpl
jne
cmpl
jne
cmpl
jne
lea
push
push
call
add
test
je
cmpl
jae
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmpl
mov
jne
mov
mov
mov
call
test
mov
js
mov
jmp
cmpl
je
jmp
push
lea
sub
push
push
push
mov
xor
push
call
test
je
mov
pushl
lea
call
mov
cmp
pop
mov
lods
pop
inc
add
add
lea
mov
inc
push
mov
mov
mov
push
call
test
js
cmpl
je
mov
add
push
pop
push
mov
mov
mov
push
call
test
js
lea
mov
lea
mov
lea
mov
lea
mov
lea
xor
push
lea
push
movl
movl
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
lea
push
lea
push
mov
movl
movl
mov
call
mov
pop
pop
lea
push
push
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
jne
testb
jne
mov
jg
inc
add
call
cmpl
je
pushl
call
cmp
pop
je
mov
push
push
push
mov
call
test
je
mov
movw
pushl
mov
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
xor
lea
roll
pop
pop
pop
add
leave
ret
mov
push
push
call
jmp
testb
je
jmp
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
pushl
mov
pushl
call
neg
pop
sbb
pop
inc
ret
mov
decl
mov
je
ret
movl
push
movl
call
pop
xor
jmp
push
mov
push
xor
push
push
mov
mov
push
lea
pop
mov
movl
call
test
pop
je
cmpl
jne
pop
pop
mov
pop
ret
call
mov
jmp
pushl
mov
pushl
call
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
push
push
call
cmpb
jne
mov
mov
test
mov
jne
mov
mov
rcll
add
not
and
lea
cmp
ja
mov
xor
cmp
je
cmp
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
push
lea
push
call
add
mov
jmp
push
push
mov
mov
test
jne
mov
push
push
call
test
je
test
je
mov
push
call
pop
pop
ret
mov
mov
test
je
mov
mov
cmp
jae
mov
test
je
pushl
mov
pushl
push
call
ret
mov
jmp
xor
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
xor
push
call
test
je
mov
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
je
pushl
call
cmp
pop
je
mov
mov
call
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
mov
add
mov
call
mov
cmp
je
pushl
lea
call
lea
call
lea
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
pushl
call
test
pop
je
push
pushl
call
andl
pop
push
mov
lea
call
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
push
mov
sub
lea
cmpl
push
je
mov
mov
mov
xor
pop
leave
ret
push
mov
push
pushl
mov
call
pop
mov
lea
call
mov
mov
pushl
mov
push
call
test
pop
pop
pop
pop
jne
pushl
pushl
call
mov
pop
pop
jmp
push
mov
test
je
mov
push
mov
call
test
jne
mov
push
mov
call
test
jne
mov
mov
call
test
je
mov
pop
ret
mov
jmp
xor
pop
ret
push
push
push
mov
test
je
mov
mov
call
test
je
mov
call
mov
test
je
mov
mov
call
cmp
jb
mov
test
mov
jne
test
jne
pop
pop
pop
ret
pushl
call
pop
mov
call
mov
mov
jmp
push
mov
and
sub
push
mov
mov
mov
mov
push
xor
cmp
push
mov
je
mov
push
call
pushl
lea
push
mov
mov
mov
mov
push
lea
movb
call
mov
fwait
and
mov
push
pushl
lea
push
push
call
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
lea
call
pop
pop
xor
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
lea
call
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
mov
test
pop
jne
mov
test
jne
mov
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
mov
jmp
push
mov
push
push
push
push
mov
call
test
je
andl
push
mov
mov
add
cmp
je
xor
mov
cmp
mov
je
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
mov
mov
inc
cmp
jne
pop
cmpl
jbe
mov
mov
cmpb
je
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
cmpl
push
push
jle
cmpl
jle
mov
mov
mov
mov
mov
mov
push
lea
mov
mov
movl
call
mov
mov
lea
push
call
mov
mov
mov
add
call
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
call
fstpl
mov
fildl
mov
mov
push
fidivl
mov
fstpl
call
fstpl
mov
add
call
test
je
mov
mov
mov
jmp
mov
mov
cmp
je
movzwl
test
je
movswl
call
movzwl
cmp
jne
lea
push
lea
push
mov
push
mov
call
add
test
je
fildl
mov
mov
push
fidivl
mov
push
fstpl
mov
inc
add
fld1
fsts
add
fcomps
fnstsw
test
jnp
lea
flds
mov
fstps
sub
lea
fmuls
lea
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
push
mov
call
mov
mov
mov
mov
mov
add
mov
mov
push
lea
mov
mov
call
mov
mov
mov
test
jne
test
je
mov
mov
push
call
add
test
mov
jne
cmpl
jle
cmpl
jle
mov
lea
call
test
je
xor
lea
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
test
jne
mov
mov
mov
lea
mov
cmp
push
lea
jne
test
jne
xor
test
jne
mov
mov
and
or
jne
xor
test
mov
jne
xor
pop
pop
ret
mov
mov
mov
mov
pop
pop
ret
mov
jmp
push
mov
mov
mov
push
push
mov
push
add
mov
add
decl
inc
cli
push
add
cmp
add
cmp
je
push
call
cmp
pop
je
mov
orl
mov
pushl
mov
call
pushl
mov
push
mov
call
pop
pop
pop
pop
ret
push
mov
push
cmpb
jne
mov
test
movb
jbe
dec
mov
mov
push
lea
mov
push
mov
mov
mov
cmp
jb
mov
test
je
pushl
mov
dec
mov
call
jmp
push
mov
call
mov
pop
mov
movb
pop
leave
ret
movl
jmp
out
inc
add
incl
std
xor
push
push
mov
push
lea
push
mov
call
test
je
push
push
push
mov
call
test
jne
cmp
je
call
movl
xor
inc
pop
ret
xor
pop
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
test
mov
je
addl
lea
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
push
lea
push
movl
movl
movl
call
orb
cmp
jne
cmpl
je
mov
cmpl
jne
mov
call
test
je
push
mov
mov
call
test
je
mov
call
test
je
push
call
test
je
cmpl
jne
cmp
je
orb
push
call
test
je
add
pop
jne
cmpw
jne
mov
cmpl
jne
mov
movl
mov
add
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
test
je
addl
cmpl
je
mov
pop
pop
pop
mov
pop
ret
test
jne
mov
test
je
push
lea
call
cmp
je
lea
push
push
mov
call
add
test
je
push
push
lea
push
mov
call
test
mov
jne
lea
push
xor
call
test
je
push
mov
mov
call
test
jne
cmp
jne
push
push
push
mov
call
test
je
mov
push
lea
mov
call
test
jne
jmp
mov
call
test
jne
jmp
mov
call
jmp
push
push
lea
push
mov
call
push
push
lea
push
mov
mov
call
cmpl
jne
push
push
push
mov
mov
call
test
jne
cmp
je
push
mov
mov
call
test
je
mov
jmp
lea
cmp
ja
movzbl
jmp
nop
sbb
push
pop
adc
cmp
add
add
add
int3
int3
int3
push
mov
push
call
test
je
cmpl
jne
mov
cmp
jne
mov
pop
ret
orb
xor
pop
ret
push
mov
sub
push
mov
mov
mov
lea
push
call
mov
test
mov
je
andl
push
push
push
mov
add
call
mov
test
je
andl
mov
mov
lea
lea
mov
add
call
push
push
call
xor
cmp
jne
lea
mov
lea
call
push
call
test
pop
js
mov
pushl
mov
push
call
mov
cmp
mov
mov
je
mov
push
call
mov
cmp
je
cmp
jne
pushl
lea
push
call
lea
call
xor
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
call
inc
add
jge
push
mov
call
jmp
sbb
test
adc
mov
push
jge
push
call
test
pop
je
mov
andl
test
movl
add
je
mov
push
call
test
mov
mov
mov
mov
mov
jne
test
mov
je
mov
push
call
cmpl
je
mov
push
pushl
add
mov
push
call
mov
lea
call
mov
pop
pop
pop
ret
mov
push
call
jmp
mov
inc
add
xor
and
call
mov
ret
pushl
call
pushl
mov
push
call
ret
push
mov
sub
push
push
push
lea
call
lea
call
xor
xor
mov
mov
test
jle
xor
mov
or
push
push
mov
lea
push
call
test
je
inc
inc
cmp
jle
test
je
mov
xor
push
inc
call
test
jne
mov
call
test
je
cmp
jg
cmpl
jg
jne
lea
push
lea
push
call
mov
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
mov
add
movl
sub
mov
movl
mov
mov
lea
lea
push
mov
call
test
je
mov
mov
mov
add
cmp
je
cmpl
jne
mov
call
mov
mov
shr
lea
xor
mov
and
inc
shl
or
add
decl
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
inc
pop
pop
pop
leave
ret
mov
jmp
cmpl
je
cmpl
je
cmpl
jmp
dec
je
dec
jne
jmp
dec
je
dec
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
andl
test
jne
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
mov
push
push
call
test
pop
pop
mov
jne
push
call
pop
andl
lea
mov
mov
push
mov
lea
movl
movl
movb
call
mov
mov
mov
mov
lea
push
mov
mov
movl
call
dec
neg
sbb
inc
mov
je
mov
test
jne
cmpl
mov
je
testb
movl
jne
testb
je
jmp
lea
call
lea
call
jmp
push
mov
sub
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
mov
lea
movl
movl
mov
mov
mov
call
test
jne
pushl
lea
call
mov
cmp
je
mov
pushl
mov
pushl
push
call
mov
mov
push
pushl
pushl
push
call
lea
call
inc
add
call
inc
add
pop
leave
ret
mov
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
push
mov
movl
movl
cmpl
je
push
lea
push
call
pushl
call
pop
pop
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jmp
mov
mov
dec
mov
shl
add
add
call
test
jne
test
ja
mov
test
ja
mov
test
ja
mov
call
inc
add
rolb
pop
pop
leave
ret
mov
mov
mov
shl
mov
sub
lea
lea
mov
sub
sub
cmp
jne
decl
mov
mov
lea
mov
call
test
je
cmpl
jbe
jmp
mov
lea
push
mov
or
lock
dec
jne
lea
test
movl
je
push
push
lea
movl
xor
aam
mov
push
add
add
inc
sbb
adc
test
js
push
call
test
pop
je
mov
test
je
push
call
test
pop
je
push
call
pop
pop
pop
xor
pop
ret
push
call
pop
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
cmp
je
testb
push
mov
je
mov
mov
push
push
push
pushl
push
call
pop
lea
call
xor
pop
leave
ret
push
mov
testb
je
push
push
push
pushl
pushl
push
lea
push
call
mov
add
cmpb
je
xor
push
inc
call
mov
test
je
mov
test
jbe
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
push
mov
je
mov
mov
push
call
mov
test
mov
je
mov
push
mov
call
mov
test
mov
je
mov
mov
push
call
mov
cmpl
mov
je
mov
cmpl
je
cmpl
push
mov
je
cmpl
je
push
call
add
test
je
mov
mov
call
test
mov
je
add
mov
mov
mov
mov
add
push
push
push
call
mov
mov
mov
mov
add
xor
test
je
cmp
je
lea
cmp
je
mov
mov
cmp
jne
jmp
mov
mov
add
mov
test
mov
jne
test
je
add
mov
test
mov
je
addl
cmpl
je
cmp
je
cmpl
jne
mov
mov
cmp
jge
cmpl
jne
movl
mov
cmp
jge
cmpl
je
mov
mov
xor
mov
mov
call
test
mov
jne
mov
mov
mov
mov
mov
mov
test
je
lea
cmpl
je
cmpl
je
cmpl
jne
mov
call
mov
push
call
mov
mov
mov
addl
cmpl
je
test
je
mov
mov
push
call
test
je
mov
mov
push
call
lea
call
pop
pop
pop
xor
pop
add
ret
push
call
add
test
je
mov
call
mov
mov
test
mov
je
add
mov
test
mov
jne
test
mov
je
add
mov
test
mov
jne
add
mov
test
mov
je
call
jmp
xor
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
push
mov
xor
cmp
push
mov
mov
lea
push
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
call
lea
push
lea
push
mov
movl
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
cmp
mov
lea
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
mov
call
mov
lea
push
lea
mov
push
mov
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
mov
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
mov
lea
push
mov
mov
mov
push
push
call
cmp
je
mov
mov
std
incb
mov
je
mov
mov
call
push
mov
add
call
mov
cmp
mov
je
mov
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
push
push
push
push
xor
call
add
test
js
cmpw
jne
mov
mov
push
push
push
call
mov
lea
mov
mov
add
add
lea
mov
movl
movl
mov
mov
push
push
mov
call
push
mov
call
test
je
mov
lea
push
push
call
mov
add
test
je
mov
add
push
call
add
test
je
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
je
mov
mov
push
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
mov
call
add
test
jne
mov
push
call
add
jmp
mov
add
call
mov
jmp
push
mov
push
andl
push
push
push
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
shlb
adc
leave
add
adc
mov
mov
call
pop
mov
pop
ret
mov
test
je
mov
mov
mov
mov
mov
xor
ret
push
mov
sub
mov
andl
push
push
mov
lea
call
mov
test
je
mov
lea
push
lea
push
call
test
js
mov
test
je
mov
test
je
mov
mov
mov
mov
push
push
call
mov
add
xchg
stos
add
add
ret
imul
mov
push
ret
xchg
add
out
add
xchg
imul
icebp
push
fldt
into
add
add
jge
int
mov
mov
je
add
mov
test
filds
lods
jae
add
ljmp
mov
push
negl
mov
in
add
push
push
push
push
lea
push
push
push
push
push
push
call
in
add
add
mov
add
add
test
add
shlb
ljmp
fnsave
mov
add
out
pop
int3
pushf
mov
mov
cld
testb
add
pop
xchg
add
xor
imul
mov
add
xlat
add
popl
push
iret
add
jp
lea
cltd
leave
fisubs
add
and
movl
popl
push
push
lea
push
push
call
add
jns
add
mov
pop
test
add
add
add
mov
add
test
add
add
lds
mov
add
mulb
add
add
add
test
pop
mov
cld
add
lock
lret
add
arpl
push
push
push
push
push
push
push
call
add
add
mov
add
lahf
mov
mov
movl
mov
add
insb
cmpsl
ja
js
xchg
sahf
out
out
mov
std
mov
mov
jecxz
pop
add
flds
gs
add
test
add
add
xorl
add
jae
add
add
add
add
pop
add
add
data16
push
call
push
lea
push
push
push
push
push
push
call
xchg
pop
jb
divl
xchg
add
pusha
pusha
add
loop
jmp
mov
ret
jl
mov
jnp
mov
add
add
fwait
rolb
lcall
cmpb
cwtl
add
jae
add
stos
rcll
imul
add
cmc
jl
add
mov
arpl
call
push
push
push
push
push
push
lea
push
push
lea
push
push
call
jno
addb
faddl
pop
mov
jle
lcall
mov
add
mov
jns
add
mov
add
jae
loope
xlat
shlb
lock
std
std
add
fisubrs
add
neg
out
add
int
js
add
mov
sahf
pop
add
mov
add
add
push
mov
mov
add
fildl
push
hlt
lea
pop
call
push
lea
push
push
lea
push
lea
push
push
push
call
add
jle
push
add
add
test
je
ljmp
xchg
add
mov
add
in
add
mov
gs
push
data16
into
nop
pusha
add
add
scas
add
jo
xchg
les
add
add
testb
mov
add
pop
xlat
add
cld
lea
pop
jmp
ret
mov
push
lea
push
lea
push
push
call
test
iret
outsl
push
jge
add
push
push
add
add
add
bound
add
add
add
add
push
or
push
jae
add
add
jp
stos
fiadds
add
cmc
jnp
jbe
ret
jp
loop
add
cwtl
leave
add
scas
add
mov
add
push
add
add
nop
out
push
aad
jge
add
xchg
add
fmull
pop
in
add
add
push
push
lea
push
push
push
lea
push
push
lea
push
call
ror
add
imul
push
mov
insb
add
add
mov
add
movsb
xlat
cli
add
faddl
out
lds
jge
mov
rolb
cmc
in
mov
test
add
mov
aad
jnp
js
jne
push
ljmp
push
mov
mov
lea
pop
add
push
lea
push
lea
push
push
lea
push
push
push
call
mov
add
hlt
add
fiadds
add
jnp
in
jl
mov
add
add
add
add
add
add
pop
lods
cmpsb
add
add
lret
cwtl
iret
outsl
add
push
aam
xchg
lds
arpl
pop
mov
add
add
add
add
add
jnp
test
mov
add
lret
hlt
lea
pop
mov
push
push
lea
push
lea
push
push
push
call
popa
pop
push
addb
add
mov
add
fwait
mov
add
add
stc
add
lret
add
add
add
add
mov
xlat
pop
out
addl
call
mov
mov
mov
aad
add
je
add
add
add
fcmovnb
pop
xchg
add
push
add
aad
add
add
mov
in
add
test
add
add
add
movsl
add
add
add
pop
xor
push
push
push
lea
push
push
push
lea
push
push
call
lds
push
fs
lea
add
add
push
add
add
mov
arpl
add
mov
ret
jl
stos
bound
jb
add
xchg
lcall
add
outsl
mov
add
imul
roll
addr16
hlt
imul
add
outsl
add
mov
lea
pop
add
push
push
push
lea
push
push
push
push
push
lea
push
call
aad
mov
pop
add
nop
add
add
in
add
data16
lcall
loop
jno
add
add
cmpsl
xchg
cli
pop
xchg
stos
lds
mov
fyl2xp1
std
clc
js
cltd
add
jns
add
xchg
add
mov
add
cmc
push
add
fsubr
xchg
orl
sbbb
cmpsb
add
add
add
push
jle
add
add
mov
in
add
add
add
pop
add
push
push
push
call
mov
add
mov
mov
add
xchg
jb
out
add
add
call
mov
cltd
add
add
add
gs
jnp
push
hlt
add
add
add
add
add
add
mov
add
mov
add
add
jl
pop
xchg
mov
or
call
push
push
push
call
add
fiadds
arpl
add
mov
push
into
fdiv
add
fdivrl
add
push
add
cmc
add
lds
mov
push
add
add
add
out
add
repnz
xchg
xchg
mov
add
add
push
add
xchg
shll
xchg
xlat
add
loopne
mov
add
in
add
mov
lea
pop
mov
push
push
push
call
mov
mov
cltd
incb
adc
add
jl
jno
add
mov
add
jne
loopne
add
add
add
add
mov
in
rcll
add
add
add
add
add
add
fadds
add
popa
lods
flds
scas
add
mov
add
mov
add
mov
pop
xor
push
push
push
push
push
push
push
push
call
add
add
xchg
nop
movsl
jp
mov
add
out
add
loopne
add
add
pusha
mov
cwtl
jb
movb
int
fldl
push
ficomps
add
insb
mov
push
add
mov
mov
add
add
les
add
jge
add
add
lcall
jnp
mov
lcall
data16
les
mov
aam
dec
push
or
inc
add
not
sub
add
rol
ror
pop
dec
pop
push
push
push
call
xchg
push
imulb
add
add
int
add
sti
addb
add
add
add
mov
sbb
xchg
mov
push
add
stos
mov
mov
add
add
popf
add
add
lcall
lcall
jbe
add
add
lret
rol
add
add
lods
jnp
add
add
rcrl
mov
lea
pop
pushl
push
push
push
push
push
push
push
push
push
call
shr
mov
mov
pop
add
add
add
push
test
add
in
push
loop
jne
pop
mov
jnp
aad
mov
jl
jp
mov
gs
add
pop
xchg
test
add
add
add
add
movsl
push
call
outsl
fiaddl
xchg
mov
bound
call
push
push
push
push
lea
push
push
push
call
mov
lahf
int3
into
mov
jmp
add
rol
int3
outsl
pop
int
mov
add
add
add
add
lods
mov
add
push
clc
add
mov
mov
add
pop
jge
push
arpl
add
add
ja
imul
add
add
insb
mov
add
test
rcr
add
add
add
pop
add
pop
mov
movl
lea
push
lea
push
push
lea
push
call
scas
js
cwtl
add
pop
test
jno
aam
adcb
mov
push
push
jns
in
add
jbe
add
add
add
add
jge
add
jnp
add
mov
jne
add
movl
add
add
add
fsubrs
aam
bound
pop
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
xchg
out
jnp
stos
mov
fs
ja
add
add
cltd
jp
lret
mov
add
stos
xchg
leave
fld
add
add
data16
aam
imul
lods
add
xchg
add
out
add
push
add
xchg
icebp
outsl
xchg
stos
add
repnz
mov
mov
mov
fsubl
mov
pop
push
add
add
add
xchg
jecxz
mov
sub
jne
pushl
push
push
call
mov
mov
add
mov
add
lock
push
in
add
aam
fs
lds
add
hlt
loopne
add
fildl
mov
add
xchg
cmpsl
xchg
add
mov
out
rolb
je
add
mov
mov
ja
mov
add
mov
add
push
pusha
or
jne
add
pushl
push
lea
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
jmp
mov
cli
fadds
push
mov
push
add
flds
add
add
add
jae
leave
mov
mov
out
jl
add
add
nop
enter
add
fstpl
add
mov
mov
add
mov
jo
add
mov
lahf
fadds
mov
push
popa
out
add
lcall
and
pushl
call
push
push
sub
push
sub
add
dec
add
sub
lea
sub
xor
rol
ror
pop
shr
ror
sub
pop
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
add
mov
cmc
sahf
mov
repnz
jmp
sarb
xchg
add
cwtl
imul
orl
leave
xchg
mov
mov
addl
add
xlat
add
repnz
jae
xchg
lds
add
pusha
clc
add
add
add
mov
lea
pop
pushl
push
push
lea
push
push
lea
push
push
push
call
add
add
push
add
xchg
add
xchg
jecxz
add
push
jbe
add
add
add
jbe
imul
testl
out
add
add
add
loopne
out
xchg
mov
add
lcall
ljmp
js
mov
add
out
pop
in
push
push
pop
xchg
addr16
add
stos
jp
lcall
hlt
lea
pop
call
push
push
push
ror
push
or
inc
add
inc
rol
sub
sub
sub
shr
not
pop
lea
xor
shl
pop
push
push
push
lea
push
push
call
movb
imul
mov
jle
xchg
push
add
imul
add
filds
mov
pop
ret
add
cmc
add
push
nop
xchg
testl
cwtl
add
add
stos
add
sti
add
mov
push
in
add
add
outsl
into
push
pop
add
add
sahf
add
add
add
out
ja
pop
imul
xchg
fdivrl
xchg
adc
push
push
push
push
push
push
push
call
clc
add
xchg
add
mov
cmpsl
add
add
add
jnp
rcrb
add
test
insb
int
add
add
cmpsl
mov
fcmovne
test
add
add
mov
xchg
mov
adcb
add
rolb
jge
mov
add
mov
lea
pop
push
call
mov
push
push
push
push
push
lea
push
lea
push
push
push
call
add
xchg
les
pop
cmp
pop
add
push
add
mov
push
add
scas
push
repnz
mov
fldl
add
mov
add
add
xchg
testl
push
add
add
fwait
ja
popa
add
ret
mov
add
mov
data16
mov
les
push
push
push
call
jne
lods
add
popl
add
mov
add
mov
ret
loopne
jp
pop
mov
xchg
jp
cli
cwtl
lock
int
leave
flds
pusha
fbld
rolb
push
add
add
xchg
iret
add
aad
jo
mov
mov
add
repnz
mov
add
or
push
mov
add
push
push
push
call
icebp
add
add
ror
add
add
add
mov
jno
add
add
push
lods
addb
add
add
add
add
add
add
loopne
imul
add
int3
add
fstpl
xchg
pop
xchg
fwait
jne
arpl
mov
rolb
push
add
fistl
jmp
add
add
pop
add
push
push
lea
push
push
push
push
lea
push
call
jae
repnz
add
fbld
add
pop
mov
imul
jae
add
mov
data16
ret
xchg
mov
enter
mov
int
js
lds
pop
pop
add
add
in
test
jb
add
jns
add
add
mov
xchg
add
int3
add
icebp
add
iret
add
loop
add
add
push
mov
lea
pop
add
mov
push
push
lea
push
push
lea
push
push
call
mov
gs
sarb
testl
test
loop
fdiv
cltd
fisubl
loope
add
out
jae
cld
lds
xchg
out
add
add
jp
add
add
jns
add
fsubs
mov
xchg
xchg
push
add
add
add
mov
add
in
jno
add
mov
mov
call
loop
lods
lods
add
add
mov
lea
pop
xor
push
push
push
push
push
lea
push
call
scas
jp
stos
add
add
fwait
popl
add
add
add
movl
in
add
xchg
roll
popf
int
cwtl
add
mov
add
in
add
pop
add
add
lods
add
hlt
imul
add
lods
mov
add
mov
rolb
push
add
out
add
mov
cli
fiaddl
xchg
faddl
jp
jo
lcall
mov
lea
pop
add
push
push
push
push
push
push
lea
push
lea
push
call
test
jo
loop
out
clc
add
add
icebp
add
add
call
sti
ja
insb
add
lea
add
add
add
add
mov
add
enter
in
cld
add
add
add
aad
add
lea
scas
pop
jge
add
mov
add
je
add
les
jne
push
push
push
lea
push
lea
push
call
les
rcrb
jb
xchg
scas
add
push
gs
cld
iret
push
faddl
push
addl
add
push
lods
add
add
andl
add
mov
adc
xchg
repnz
shl
push
stos
scas
jne
outsl
into
mov
jl
xchg
add
add
test
sahf
add
addb
jl
add
add
cwtl
test
in
mov
lea
pop
push
push
push
push
push
call
movsl
add
jge
divb
cltd
add
cmpb
mov
add
stos
xchg
jns
add
lods
add
hlt
ja
add
ret
add
stc
rcl
pop
outsl
xlat
add
fucom
jns
testl
ficompl
jge
jle
lret
arpl
test
cld
lea
pop
mov
xor
push
push
push
push
call
rolb
xchg
int3
xchg
int3
lods
popf
loope
mov
add
mov
mov
xchg
sahf
add
fadds
xchg
push
add
add
push
out
mov
push
add
int3
add
in
stos
popf
add
lods
add
cwtl
jle
add
mov
add
push
add
jnp
fs
add
pop
xchg
xchg
leave
add
mov
xlat
add
add
add
add
hlt
sarb
test
movsl
push
add
test
in
mov
lea
pop
add
push
push
lea
push
push
push
call
xchg
imul
add
lret
xchg
add
ljmp
add
push
ret
outsl
add
xchg
je
mov
add
add
push
jne
lret
add
add
mov
add
mov
add
outsl
pushf
mov
add
leave
lds
bnd
push
add
in
out
push
outsl
xchg
jmp
iret
leave
add
add
aam
bound
pop
push
push
call
loope
add
jecxz
add
add
add
add
lods
add
xchg
push
add
mov
out
enter
mov
add
pusha
movsb
push
add
fdiv
add
sti
test
xorl
insb
add
add
add
add
add
jno
cmpsb
mov
lea
pop
mov
push
push
push
push
push
push
push
push
call
sahf
adcl
bound
cltd
cli
add
int3
lods
movsb
add
shl
in
add
stos
lcall
add
sahf
pop
popa
int3
pop
lods
add
lods
outsl
add
xchg
add
into
xchg
in
add
cmc
push
mov
add
add
push
test
pusha
add
add
ja
add
mov
add
add
jne
fisttpl
pop
xor
push
push
push
call
add
add
bound
add
xchg
pop
push
leave
jae
mov
mov
add
add
mov
xchg
mov
jns
loope
scas
add
jns
add
xchg
add
add
pusha
add
add
add
mov
addl
lret
push
add
xchg
pop
mov
add
push
lret
jb
aam
bound
add
push
push
push
lea
push
push
push
push
push
call
mov
pop
add
mov
roll
add
xchg
mov
stos
pop
pop
add
push
push
fsubs
out
out
mov
add
add
add
repnz
out
add
fistpl
pop
add
add
pop
add
call
add
lds
fistl
add
add
mov
bound
add
into
aam
add
fwait
add
add
xorb
mov
lea
pop
push
mov
push
push
push
push
push
push
lea
push
push
push
push
push
call
add
rolb
add
les
mov
jno
add
stos
imul
test
add
in
add
add
ficomps
add
add
add
add
pop
add
cli
out
rcll
add
add
mov
add
cmc
js
push
sar
imul
iret
scas
mov
sub
add
push
push
call
mov
jno
cltd
aad
cltd
jno
mov
add
fcoms
ljmp
push
pop
add
incb
lahf
mov
out
add
mul
add
add
xchg
fwait
add
jb
out
add
jb
leave
mov
jb
add
add
in
jo
rcr
mov
add
loope
sti
add
pop
add
push
push
push
push
call
in
pop
add
add
add
add
push
add
add
cmpsl
xchg
add
ret
test
out
pop
negl
mov
add
mov
jle
add
out
add
add
jnp
cmpsb
adc
out
add
mov
add
lahf
add
add
enter
stos
in
popf
add
fidivs
pop
andl
arpl
pop
sub
push
push
push
lea
push
push
push
lea
push
call
pop
add
mov
mov
cli
test
mov
js
mov
pop
mov
pop
add
movsl
add
add
add
add
pop
xchg
push
cwtl
pushf
pop
mov
mov
pop
mov
lds
faddl
mov
add
xlat
add
stos
cmpsl
rolb
add
jns
push
add
repnz
mov
test
fcmovnb
je
iret
xchg
hlt
add
mov
mov
addr16
pop
rep
pop
push
push
push
push
push
call
loopne
pop
add
cwtl
jae
scas
stos
add
into
lahf
in
pop
movsl
into
add
jo
les
divb
arpl
in
cmpsb
add
insb
add
add
add
jle
in
add
add
out
push
incb
ja
popa
mov
fwait
pop
incb
out
out
test
add
add
add
add
jp
orl
fiaddl
add
pop
mov
push
lea
push
lea
push
push
push
push
call
add
rol
cld
mov
add
aam
ja
xchg
mov
add
test
add
nop
jge
push
shlb
stc
add
mov
lds
popa
xorb
add
add
pop
lds
icebp
pop
add
add
add
std
add
loope
add
std
pusha
add
pop
mov
mov
lea
pop
add
add
add
push
lea
push
call
popl
pop
add
ficoms
lahf
shlb
jmp
sti
add
popa
mov
fldl
add
add
mov
icebp
push
add
add
jbe
mov
add
add
add
movsb
add
add
add
cmpsb
loopne
les
add
lock
flds
add
add
add
add
add
add
out
add
adc
add
cld
lea
pop
mov
push
push
push
push
lea
push
push
push
call
test
jnp
add
add
add
je
jb
add
lds
xlat
add
mov
add
add
rolb
aad
add
movsb
stc
jecxz
sbb
push
clc
add
fsts
stos
popf
xchg
add
add
xchg
xchg
fprem1
add
push
add
in
add
test
int
jae
movsb
jb
mov
mov
aam
bound
pop
xor
push
push
lea
push
call
lret
mov
jne
cwtl
add
add
mov
scas
mov
enter
push
push
lock
add
aam
push
add
subl
add
stos
add
jno
xchg
add
pusha
je
push
push
loop
pop
xchg
jb
add
jmp
add
mov
into
add
mov
lcall
lea
pop
add
push
push
push
push
push
call
shlb
mov
cltd
movsl
pop
out
outsl
lret
add
bnd
add
mov
xchg
je
mov
add
clc
add
add
mov
add
loope
pushf
out
xchg
add
pop
popf
mov
add
add
stos
mov
jl
add
mov
mov
lea
pop
mov
push
push
push
call
sahf
mov
add
jns
add
add
and
add
roll
mov
add
add
rorb
fadds
arpl
ljmp
add
add
pushf
ja
add
jge
repnz
jne
add
add
add
cmpsb
mov
out
push
popa
jp
int3
lds
add
jne
cmpsb
out
add
outsl
lea
pop
xor
push
push
push
push
lea
push
push
call
leave
add
add
add
pushf
add
fidivl
andb
mov
iret
scas
stos
add
lds
andb
cli
add
into
add
add
add
mov
add
add
add
data16
in
data16
add
add
add
data16
pop
push
add
fadds
insb
add
pusha
js
nop
mov
lea
pop
add
push
push
push
lea
push
push
push
push
call
fsubl
add
fistps
fnsave
mov
mov
lds
fs
push
out
add
popl
mov
add
add
add
xchg
add
add
xchg
addr16
add
cmpsb
leave
pop
push
lods
pusha
add
cmpl
lea
jnp
stos
xchg
xchg
sti
add
add
add
insb
add
mov
repnz
push
mov
lea
pop
mov
xor
push
lea
push
push
push
push
push
push
call
xchg
mov
add
ljmp
mov
add
add
add
push
cmc
add
add
add
mov
push
pop
int3
addr16
push
xchg
repnz
popl
xchg
add
int
push
mov
mov
push
jle
add
add
add
add
mov
add
std
ficomps
add
lods
push
add
add
add
mov
lea
pop
add
add
mov
push
push
inc
push
or
not
add
sub
dec
rol
sub
inc
add
pop
rol
inc
shr
sub
pop
push
lea
push
lea
push
push
push
lea
push
lea
push
call
add
jnp
add
test
fmul
out
out
aad
xchg
imul
sbbb
add
call
loop
imul
stos
std
add
mov
ja
add
addl
std
pop
push
add
push
add
xchg
add
xchg
push
ja
mov
mov
lods
cld
repnz
xorl
sbb
pushl
push
push
lea
push
lea
push
push
lea
push
call
testl
xchg
mov
incb
add
lea
cli
mov
out
out
jne
jp
push
loopne
gs
mov
add
jl
int
push
add
mov
mul
flds
mov
mov
add
mov
add
fiaddl
add
add
add
cmc
xchg
stos
mov
mov
pop
add
in
add
mov
mov
lea
pop
call
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
xchg
pop
add
xchg
imul
add
add
out
push
addl
add
pop
add
cmc
mov
xchg
mov
xchg
mulb
adcl
std
insb
testl
mov
lcall
not
lcall
int
pop
add
leave
in
jns
aam
bound
push
push
push
ror
push
sub
add
rol
inc
sub
sub
shl
pop
ror
sub
shl
pop
push
push
call
add
je
nop
cmpsb
popl
jno
pusha
xchg
testb
fs
push
lret
add
jl
mov
add
add
call
add
xchg
leave
pop
fwait
in
add
rcr
sti
add
lret
call
push
mov
add
add
sti
jae
lret
push
or
push
lea
push
lea
push
push
push
lea
push
call
jge
arpl
cmc
push
add
jge
add
faddl
cwtl
shlb
pop
add
add
test
in
rolb
add
add
repnz
cmpl
roll
ja
std
mov
mov
add
pop
mov
add
jns
add
pop
add
add
mov
test
add
mov
pusha
sbb
add
dec
push
call
icebp
mov
call
add
jge
in
iret
add
in
jmp
pop
xchg
add
add
add
int
add
add
add
cltd
add
nop
add
in
jns
in
shl
testb
clc
add
movsb
pop
ljmp
testl
out
pop
mov
add
pop
out
push
xchg
add
add
loop
add
lcall
pop
call
push
lea
push
push
push
push
lea
push
push
call
cld
nop
jmp
jb
pushf
arpl
add
out
ret
xchg
std
push
movsb
fcom
add
movsb
fdiv
pop
bnd
cmpsl
data16
add
bound
sti
add
out
add
out
push
out
test
int
fiaddl
add
add
mov
mov
add
add
shl
ret
lret
hlt
lea
pop
mov
push
lea
push
push
push
push
push
call
iret
add
add
lcall
sti
mov
cmc
testl
rolb
add
add
add
lds
push
mov
fmulp
add
add
clc
add
lcall
xchg
add
movsb
add
add
add
test
add
fs
lods
add
filds
add
ljmp
add
std
add
xchg
loopne
les
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
sbbb
add
enter
add
sti
add
scas
pop
lods
mov
xlat
jmp
add
leave
add
add
add
add
popf
add
lret
add
add
xlat
jbe
negb
pop
jl
mov
lret
int
jmp
add
push
imul
lods
pop
stc
add
ror
mov
lea
pop
push
mov
add
push
push
lea
push
push
push
push
push
push
push
lea
push
call
js
jle
scas
roll
stos
aam
ljmp
iret
add
add
test
pop
mov
js
fimuls
out
pop
scas
cli
rolb
add
push
add
push
mov
mov
addr16
add
mov
mov
add
fdiv
rclb
out
icebp
fwait
mov
scas
add
add
jno
add
mov
lea
pop
add
push
push
push
push
push
lea
push
push
push
push
call
push
add
add
add
lret
fdivl
fucomp
add
insb
jmp
add
cmpsb
add
notl
hlt
jecxz
out
je
add
push
xchg
add
jmp
jl
out
add
add
jnp
xchg
add
leave
addl
add
jae
push
pop
fucomp
xchg
push
or
lea
pop
add
push
lea
push
lea
push
lea
push
push
call
sti
out
add
add
mov
outsl
arpl
add
pop
hlt
mov
push
add
push
int
jp
addb
pop
pushf
pop
jb
std
push
add
sahf
add
shlb
icebp
add
add
in
pop
lret
push
add
lcall
icebp
out
pop
loope
jo
scas
add
add
xchg
mov
test
add
add
fmull
jae
xor
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
jnp
mov
add
add
nop
pushf
mov
add
mov
add
jb
pusha
clc
movsb
add
mov
add
add
add
add
fs
add
aad
lds
addr16
test
add
add
add
add
iret
testl
add
add
pop
add
push
mov
xor
push
push
push
lea
push
push
call
add
iret
add
rolb
add
add
filds
mov
add
add
sti
add
mov
add
stos
add
add
add
mov
push
add
add
mov
add
jmp
add
cld
incb
jb
add
movsl
add
filds
lods
add
jne
add
add
xlat
lods
add
push
add
pop
ret
lea
pop
add
pop
mov
push
push
push
call
aad
std
add
add
scas
les
jnp
stos
mov
ljmp
pop
lods
gs
add
add
stos
cmpsb
add
fadds
pop
ja
movsl
add
pop
je
mov
add
in
xchg
jb
shl
lret
add
loope
mov
in
add
xchg
stos
addr16
mov
lea
pop
xor
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
popl
icebp
lea
add
add
add
insb
loope
add
add
stc
sti
rcrb
add
rol
add
add
filds
jne
add
add
mov
add
add
add
jb
int
mov
add
test
test
add
out
iret
sahf
roll
test
mov
lea
pop
add
push
push
call
loopne
add
into
mov
iret
int
into
cmc
add
cli
outsl
mov
ljmp
popl
add
out
mov
pop
cwtl
testl
add
nop
add
add
add
shll
les
jne
add
test
out
rolb
add
xchg
add
pop
add
add
xlat
add
add
add
add
ja
int3
lea
pop
rep
push
sub
add
inc
pop
mov
xor
or
je
push
dec
not
rol
pop
mov
xor
push
lea
push
push
lea
push
call
les
add
add
movsb
test
push
nop
addb
add
out
xchg
test
lock
jp
rolb
xchg
xchg
imul
cmpsb
add
add
lcall
leave
scas
movsl
jo
pusha
add
add
add
mov
add
cmpsb
add
add
push
push
iret
add
mov
add
add
call
pusha
adc
push
sbb
jno
shl
sub
lea
pop
add
add
push
push
push
push
call
lret
push
rol
imul
push
add
add
add
pop
mov
push
scas
add
xchg
mov
fildl
stos
call
add
jp
add
add
jnp
mov
add
addb
test
popl
xchg
mov
add
mov
jge
xchg
jno
add
incb
add
xchg
adc
push
shr
pop
mov
push
push
push
call
push
mov
pop
add
add
jbe
add
je
add
add
mov
imul
add
add
add
add
add
add
jmp
add
add
shll
test
imul
repnz
movl
popf
enter
add
lea
pop
xor
push
push
lea
push
push
push
push
push
push
call
movsl
add
add
mov
lahf
add
fisubs
in
fildl
rcrb
imul
fstpt
xchg
add
jmp
pop
roll
mov
outsl
add
xchg
insb
pop
add
add
xchg
lahf
cmpsb
add
mov
nop
add
mov
in
fidivrs
in
addl
scas
add
add
add
add
add
nop
test
leave
mov
lea
pop
add
push
sub
pop
add
pop
push
inc
shr
rol
sub
pop
rep
push
push
lea
push
push
push
lea
push
push
push
push
call
jmp
add
xchg
cwtl
roll
stos
add
xchg
scas
add
jne
add
add
scas
in
jle
shll
add
add
add
add
pop
push
push
add
xchg
mov
add
cld
add
cmc
push
fwait
mov
lahf
notb
add
pop
pop
arpl
add
mov
lea
pop
mov
xor
push
rol
shl
inc
inc
pop
or
je
push
inc
shr
pop
mov
add
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
xchg
push
shrl
add
in
sbbl
mov
movl
add
mov
push
roll
nop
addb
nop
add
icebp
mov
jge
cmc
add
out
lret
add
add
mov
add
jno
stos
add
lock
add
mov
add
mov
lea
pop
add
push
pop
rep
pop
push
push
shl
push
sub
add
add
shl
ror
ror
sub
ror
not
pop
sub
ror
add
add
pop
push
shl
sub
pop
pop
push
sub
add
pop
mov
mov
push
push
lea
push
lea
push
push
call
nop
push
jp
add
add
add
add
add
add
icebp
add
shr
jb
add
add
xlat
ja
xchg
add
roll
xchg
imul
lods
jmp
stos
add
jecxz
add
add
add
lret
push
xchg
add
add
mov
int
out
jo
cld
lea
pop
mov
jmp
push
push
lea
push
push
lea
push
push
call
sbbb
icebp
mov
pop
js
add
add
add
add
push
add
fdivrl
fst
add
add
hlt
add
iret
data16
add
add
add
fisubl
add
in
data16
repnz
imul
icebp
imul
in
add
test
add
add
je
add
add
add
add
je
add
add
push
mov
lea
pop
mov
add
push
push
push
push
push
push
lea
push
push
push
call
mov
clc
add
add
add
add
in
add
add
add
mov
add
mov
add
shlb
jae
lods
jp
ljmp
mov
nop
add
mov
add
iret
add
add
mov
add
add
add
xchg
push
fwait
mov
add
add
je
fmull
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
xchg
loop
add
add
cmpsl
xchg
hlt
push
movsb
ja
add
je
out
mov
mov
lock
mov
jecxz
add
jns
add
xchg
pop
add
add
stos
cli
lcall
add
in
add
mov
add
add
jb
add
ljmp
mov
in
sahf
mov
add
add
mov
lea
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
xchg
add
mov
addr16
call
add
shlb
jmp
test
enter
add
popa
js
fists
pushf
add
loop
mov
add
int
lods
add
test
add
xchg
loope
add
add
arpl
push
push
lea
push
push
call
mov
add
pop
add
test
stos
je
data16
add
jae
pop
jo
add
add
mov
fwait
aam
idivl
add
imul
add
clc
nop
notl
lods
mov
imul
rclb
add
add
push
roll
stc
add
imulb
jbe
add
mov
lea
pop
mov
push
ror
add
add
pop
pop
push
push
call
add
add
jecxz
xlat
add
loop
jle
out
iret
test
mov
fildl
add
int3
add
pusha
mov
add
add
jecxz
jae
cld
cltd
jns
int
xchg
data16
add
fstpt
js
scas
add
mov
cltd
mov
mov
add
add
mov
add
pop
pop
push
pop
pop
pop
leave
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
roll
add
lahf
mov
add
in
add
xchg
lahf
ja
nop
cmpb
pop
add
add
jne
mov
add
push
add
mov
lock
gs
mov
jns
lcall
aam
lock
pusha
lret
arpl
lock
leave
add
js
aam
je
push
cltd
xchg
add
insb
jecxz
shrb
mov
add
iret
add
add
add
pop
scas
cltd
mov
add
fmull
or
push
push
push
push
push
call
jnp
add
test
jecxz
add
mov
push
loop
lods
lcall
add
add
add
mov
add
add
add
xchg
cltd
orb
mov
add
rorl
add
add
bound
mov
add
mov
add
jmp
lcall
xchg
add
mov
lea
pop
mov
push
ror
pop
add
push
push
push
call
aad
add
call
std
push
ljmp
add
pop
pop
js
shll
add
mov
cbtw
push
repnz
add
fstp
jp
cmc
fildl
mov
enter
js
add
add
pop
add
push
popa
roll
pop
add
add
movsl
sti
jae
test
add
clc
nop
jmp
ljmp
in
fmull
push
shr
pop
push
push
inc
pop
push
push
push
push
push
push
call
add
mov
add
xchg
add
add
test
add
add
outsl
int
scas
pop
add
fcmovu
test
xchg
mov
sti
jns
cltd
add
mov
outsl
mov
aad
add
mov
stos
fadds
movsb
add
add
movsb
addr16
outsl
in
add
addb
ret
aam
int3
lea
pop
push
push
shl
pop
movl
addl
push
push
push
push
push
call
mov
add
cmpsl
xchg
mov
testb
add
pop
add
jno
lret
mov
je
add
push
add
test
add
loopne
mov
add
add
je
pusha
mov
out
mov
add
add
add
xchg
add
fld
jmp
pusha
add
add
aam
bound
test
je
push
shl
sub
pop
mov
push
inc
pop
pop
pop
push
push
call
add
fiaddl
add
les
cld
mov
fucomi
jne
movsb
iret
mov
add
mov
add
pop
add
lret
add
pop
mov
nop
add
out
push
add
jge
add
shr
nop
rolb
mov
subb
add
add
pushf
mov
add
int
add
pushf
ja
rorl
or
push
push
push
push
push
lea
push
call
mov
add
add
in
mov
add
xchg
mov
add
decb
stc
add
add
lahf
std
sti
push
jl
faddl
jae
add
repnz
test
push
add
into
movsb
into
in
add
js
push
add
add
pop
add
xchg
shll
sbb
leave
push
rol
pop
ret
push
sub
pop
push
mov
push
shl
pop
add
push
push
push
push
push
push
push
push
lea
push
push
push
call
into
ror
jmp
test
add
add
bound
mov
negl
add
bound
push
cltd
add
les
lcall
push
mov
cmpb
add
jb
cwtl
add
add
into
fldl
stos
xchg
loop
add
add
pop
add
cltd
insb
in
clc
add
in
add
add
mov
lea
pop
push
push
push
not
shr
pop
testl
push
rol
shr
rol
pop
addl
push
push
push
push
push
push
push
push
call
mov
push
add
mov
mov
mov
add
add
add
rolb
mov
add
fs
mov
add
add
mov
add
xchg
jmp
js
cli
mov
stc
add
jnp
ret
add
lods
mov
pop
add
cmc
outsl
add
add
jecxz
out
fmul
repnz
in
mov
nop
enter
addr16
call
push
shl
add
dec
pop
mov
pushl
push
push
push
push
push
push
lea
push
push
call
add
mov
hlt
jmp
movsl
jle
add
add
ljmp
add
add
lret
add
jbe
rolb
roll
mov
add
ja
push
push
xchg
add
add
popf
add
add
iret
in
add
cld
add
mov
add
fwait
push
add
mov
int3
fwait
movsl
addb
aad
call
mov
add
push
add
int3
lea
pop
push
push
pop
call
cmpl
jne
pop
push
push
push
push
push
push
call
fdivp
lret
aad
pop
insb
add
add
add
into
add
add
push
test
xchg
rorb
xchg
pop
xchg
out
add
popa
mov
add
mov
pop
fdivr
xorb
add
add
add
leave
add
ja
add
jns
mov
flds
jl
movsb
add
add
add
pop
call
add
add
add
movsl
cltd
addb
mov
lea
pop
pop
push
push
call
mov
add
jno
add
jo
add
add
lea
add
fs
jno
negb
add
out
add
call
add
lock
jnp
xchg
loope
into
xchg
lcall
add
add
add
mov
mov
add
add
bound
rolb
leave
arpl
add
add
cwtl
mov
pop
jns
test
lahf
add
lods
mov
add
stos
outsl
mov
lea
pop
pop
pop
push
not
pop
leave
ret
push
xor
sub
pop
push
push
push
push
push
lea
push
call
cmpsl
mov
fmul
test
jb
icebp
mov
add
jo
add
add
add
add
add
add
add
add
cmpsb
add
fstl
fucomp
fs
add
fst
ret
xchg
add
add
lcall
add
jecxz
add
add
xchg
enter
aam
add
add
in
testb
mov
add
push
push
not
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
stos
roll
outsl
mov
lea
ret
lds
repnz
imul
gs
mov
add
pop
add
add
xchg
mov
add
add
in
add
add
mov
add
pusha
rcr
add
xchg
fcmovnbe
add
add
pop
rcrb
ljmp
add
bound
into
mov
std
mov
mov
lea
pop
movl
push
push
push
lea
push
push
call
add
add
pop
jp
mov
fidivs
add
add
add
add
mov
je
add
add
add
out
add
add
into
add
add
js
jle
addl
call
nop
add
add
mov
cltd
lods
movsb
call
jmp
xchg
add
push
fistps
call
mov
lea
pop
push
call
push
sub
pop
push
push
sub
dec
shr
pop
call
push
add
xor
pop
subl
push
pop
cmpl
jne
pop
pop
push
push
push
push
push
push
push
push
push
call
lcall
imul
cwtl
mov
pusha
jnp
xchg
lret
push
pop
lock
add
add
aam
add
add
xchg
test
shl
add
ret
cli
testb
insb
add
imul
push
add
stos
int3
mov
mov
add
add
test
hlt
lea
pop
pop
push
push
call
test
jno
add
add
jp
in
add
pop
add
add
cmp
add
push
add
lahf
lock
mov
test
popa
add
loop
jl
add
addb
add
lea
test
add
add
rclb
add
pop
test
add
mov
add
lea
pop
pop
push
push
lea
push
push
call
add
add
iret
addb
arpl
aam
add
jmp
xchg
pusha
incb
clc
jl
add
enter
add
add
scas
loopne
mov
jns
add
add
add
lods
add
pushf
rorb
mov
je
data16
ret
into
add
std
add
push
mov
add
roll
add
pop
leave
ret
push
push
inc
lea
pop
mov
add
push
add
pop
push
push
push
push
push
call
lods
pop
addr16
outsl
add
lret
roll
add
add
add
cmpsb
add
jb
scas
add
add
mov
stc
xchg
and
lods
imul
scas
ret
data16
jnp
testl
fadd
mov
mov
add
ljmp
les
add
mov
lea
pop
push
push
lea
push
push
call
int
mov
mov
add
lcall
push
scas
add
mov
jns
in
add
std
add
mov
popf
jbe
mov
pop
in
add
add
mov
scas
cmpsb
add
fidivrl
test
divl
add
push
add
ficoms
xlat
add
mov
lea
pop
mov
push
shr
pop
lea
push
xor
inc
pop
sub
mov
push
push
push
lea
push
push
lea
push
push
push
call
xchg
add
mov
leave
test
test
add
lds
popa
int
test
hlt
int3
clc
add
jmp
add
mov
fistpll
xchg
add
add
add
mov
pop
add
add
leave
mov
add
insb
mull
add
bound
xchg
add
add
add
pop
shr
add
mov
push
push
lea
push
call
in
push
in
add
cmc
push
xchg
fcmovu
add
popa
add
sti
pop
add
mov
add
add
pop
mov
jnp
mov
outsl
jbe
mov
mov
sti
add
push
add
je
add
mov
jge
xchg
add
add
add
add
arpl
out
fsubs
jecxz
mov
pop
add
mov
lea
pop
mov
add
add
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
mov
jno
add
add
add
out
lret
push
sti
roll
clc
add
jmp
mov
add
add
mov
pop
lea
add
mov
js
mov
add
jbe
xchg
add
add
data16
mov
cmpsb
movsl
add
nop
adcl
insb
nop
scas
jne
jns
mov
je
out
outsl
cld
out
add
mov
loopne
add
add
incb
mov
lea
pop
mov
push
lea
push
push
push
push
call
add
mov
xchg
add
lods
add
fldl
icebp
popf
add
add
add
xchg
add
add
mov
mov
add
mov
xchg
add
push
xchg
add
stos
lret
add
add
add
testb
push
int3
add
cmpsb
flds
xorb
add
loope
fs
incb
rolb
add
xchg
into
push
test
xchg
add
add
imul
add
mov
lea
pop
mov
push
add
add
inc
pop
cmp
jne
push
not
sub
pop
cmp
jne
push
push
push
lea
push
push
push
call
jle
add
negl
jmp
mov
push
add
add
add
enter
add
in
rolb
hlt
mov
add
add
cld
jbe
sahf
sti
jns
add
add
out
pop
push
data16
pop
add
test
and
mov
fadds
jecxz
add
in
data16
hlt
mov
add
mov
mov
add
xchg
mov
lea
pop
mov
push
add
dec
xor
pop
movl
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
add
cltd
xchg
bnd
add
roll
push
cwtl
add
popa
mov
add
add
mov
add
test
je
cld
mov
add
push
add
push
mov
xchg
xchg
mov
fiadds
aad
enter
add
add
shlb
cmpsl
jo
mov
and
jmp
mov
push
push
push
call
add
add
add
loope
add
pop
stc
add
add
add
fsubp
in
mov
leave
movsb
add
mov
mov
mov
scas
push
add
add
data16
rcll
mov
repnz
jae
add
bound
lds
add
add
add
ret
add
sti
out
xchg
mov
ret
add
mov
pop
mov
sub
jne
mov
push
push
lea
push
push
push
push
push
call
pusha
add
jecxz
add
add
push
add
add
add
add
add
add
ret
mov
movsl
popf
shl
mov
cltd
add
mov
mov
xchg
std
add
add
jno
rcrl
add
fldl
push
jbe
add
pusha
add
cli
push
add
data16
movl
jmp
push
push
push
push
call
fldt
jns
leave
jbe
add
out
add
incb
int
add
ljmp
add
mov
bound
test
loop
popf
add
lock
pop
add
jge
add
add
call
add
test
iret
popf
mov
rorb
add
in
pop
cmc
push
test
cld
mov
stc
add
mov
test
jno
loop
add
push
add
xlat
mov
lea
pop
mov
push
add
dec
pop
mov
cmp
jne
mov
push
push
lea
push
push
push
push
push
push
push
call
in
add
add
cmc
lods
lea
add
mov
pushf
jl
pop
out
andb
add
add
add
lahf
mov
js
add
mov
add
movsl
add
rcr
add
add
pop
add
add
sahf
js
add
in
add
mov
popf
add
and
movl
jmp
mov
push
push
push
push
push
push
push
lea
push
call
fstpl
add
add
add
add
add
add
int3
test
cwtl
mov
fwait
cmpsb
jbe
mov
fidivrs
shll
add
lock
icebp
stos
add
scas
loop
clc
add
lods
add
in
add
call
stos
enter
jp
mov
add
mov
lea
pop
cmpw
jne
push
push
push
push
push
call
xorl
add
mov
add
ret
jo
add
add
add
add
add
pop
outsl
shrb
add
icebp
test
fiaddl
add
add
shrb
stos
add
rolb
into
add
add
add
add
xchg
add
icebp
add
mov
pop
mov
push
push
push
push
push
push
push
push
push
call
pop
sarl
add
add
add
add
mov
add
add
cld
push
mov
add
hlt
test
call
loop
rorb
mov
mov
mov
popa
les
fidivl
stos
add
ror
jmp
rolb
addr16
movl
push
sub
pop
jmp
pushl
push
sub
shr
pop
pop
push
sub
sub
pop
mov
push
push
push
push
push
push
call
add
test
imul
add
lock
add
in
add
cltd
add
add
les
enter
add
stos
add
call
add
imul
mov
add
add
push
into
test
pop
lock
add
add
aad
int3
add
scas
add
nop
jno
ja
cwtl
push
push
xchg
movsb
add
add
hlt
lea
pop
mov
mov
push
push
shl
push
or
inc
add
sub
ror
sub
dec
pop
not
xor
shr
shl
pop
push
push
push
push
push
push
push
push
push
push
call
mov
mov
push
add
xchg
xlat
add
jl
add
add
add
add
add
jmp
pop
jns
mov
scas
imulb
push
mov
xchg
in
push
aad
pop
add
add
add
add
add
add
mov
les
outsl
push
jge
add
fwait
gs
add
add
int
cld
mov
add
hlt
lea
pop
push
push
shl
shl
pop
call
cmpl
je
push
push
lea
rol
shl
push
or
inc
add
rol
not
shr
sub
shr
xor
shl
pop
add
ror
pop
push
add
pop
push
call
push
push
call
mov
jb
mov
add
arpl
in
mov
pusha
shll
mov
add
mov
add
stos
mov
pop
add
add
fadd
add
ror
xchg
add
mov
push
jp
add
cmpb
mov
jge
pushf
add
add
add
rol
in
loopne
add
add
pop
add
pop
cmpl
je
push
push
shl
push
or
not
add
rol
sub
shl
sub
rol
pop
pop
push
shr
add
pop
push
call
cmpl
je
push
push
inc
add
push
push
pop
add
rol
add
sub
shr
dec
shr
lea
pop
shr
pop
push
push
push
push
lea
push
lea
push
push
call
add
add
add
add
jmp
pop
add
jne
jle
add
rclb
in
add
mov
add
sti
add
add
in
lahf
add
ja
imul
add
mov
add
mov
push
js
out
add
add
pop
stos
add
add
add
sbb
push
call
cmpl
je
push
push
dec
sub
ror
not
push
push
pop
add
sub
sub
sub
pop
shl
pop
push
push
push
push
push
push
push
push
call
add
lock
popa
imul
add
jno
add
int
cld
aad
add
pop
push
repnz
into
add
add
jmp
add
add
mov
clc
add
out
lods
add
add
push
mov
add
jp
add
add
pop
in
data16
popl
mov
add
mov
add
add
add
movsl
je
mov
lea
pop
push
push
add
pop
call
push
rol
add
pop
cmpl
je
push
push
inc
push
xor
add
not
shr
sub
inc
sub
shl
pop
shl
sub
lea
add
pop
push
ror
shl
pop
push
call
push
lea
sub
pop
cmpl
je
push
push
inc
lea
sub
push
and
add
rol
add
sub
xor
rol
xor
pop
ror
inc
not
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
add
ret
leave
add
add
lock
add
cwtl
add
jno
iret
pop
add
popf
push
add
cwtl
add
push
add
add
movl
imul
jb
pop
outsl
in
add
add
pop
movl
movsl
mov
add
cld
add
xchg
jno
mov
and
push
push
push
push
push
push
lea
push
push
push
lea
push
push
call
repnz
sti
jp
add
mov
movl
mov
add
jmp
addb
mov
pop
add
mov
icebp
iret
add
pop
add
jmp
jae
add
shll
add
test
mov
test
ljmp
add
add
add
pop
add
add
add
mov
sub
adc
add
push
dec
not
shl
sub
pop
cmpl
je
push
push
add
not
sub
not
push
xor
add
sub
sub
xor
rol
lea
pop
pop
push
push
push
push
push
push
lea
push
call
jmp
mov
add
add
fimull
add
loopne
call
add
add
add
add
lds
mov
jo
popa
add
jbe
add
ret
pop
in
cmc
jl
nop
add
add
add
sahf
add
sar
cwtl
pop
jecxz
push
add
push
pusha
sbb
push
push
not
not
pop
call
cmpl
je
push
push
sub
inc
not
push
sub
add
add
sub
not
pop
ror
ror
not
pop
push
push
push
lea
push
push
push
call
add
lods
enter
jmp
add
add
add
cmc
add
bound
xchg
test
jle
add
out
add
roll
add
push
mov
sahf
pop
add
cwtl
add
xlat
aad
push
add
nop
ret
push
add
test
mov
add
add
add
enter
add
add
xchg
add
pop
push
call
cmpl
je
push
push
add
inc
add
push
sub
add
not
dec
add
sub
xor
pop
add
not
pop
push
push
push
push
call
mov
add
insb
leave
lea
add
add
add
enter
imul
add
add
push
add
add
cwtl
ja
int3
add
add
add
test
push
pop
push
cmpsl
fisubs
movsb
int
mov
pop
add
outsl
add
out
int3
add
jne
int3
icebp
add
add
add
mov
hlt
mov
lea
pop
push
call
push
not
pop
cmpl
je
push
push
dec
sub
shr
push
sub
add
shl
shr
add
sub
add
ror
not
pop
inc
pop
push
push
push
push
push
call
fcomip
jmp
add
add
lahf
push
add
add
add
add
std
add
xchg
icebp
add
fsts
add
testl
add
out
loop
sahf
imul
mov
sahf
bound
cltd
pop
out
add
lcall
add
add
call
cwtl
mov
pop
mov
lea
pop
call
push
sub
rol
dec
ror
pop
cmpl
je
push
push
add
dec
push
or
not
add
sub
rol
sub
shl
sub
shr
pop
not
add
shr
pop
push
push
lea
push
push
lea
push
call
hlt
xchg
add
add
add
fildl
nop
lds
int
jo
les
std
add
arpl
add
push
push
add
add
movsl
pusha
out
int3
jo
jl
mov
call
add
xchg
in
add
pop
add
xchg
pushf
add
add
popa
add
cmpsb
mov
jns
mov
lea
pop
push
call
push
lea
push
push
call
pop
fadds
add
add
push
add
add
in
iret
add
cld
mov
out
and
jne
lahf
xchg
add
mov
add
add
mov
int
bound
xchg
add
fs
pusha
mov
pop
mov
fwait
add
add
mov
mov
mov
jl
imul
repnz
cmc
xchg
add
mov
lea
pop
cmpl
je
push
push
inc
sub
sub
push
and
add
inc
sub
sub
inc
rol
xor
pop
ror
pop
push
shl
pop
push
push
push
push
push
call
mov
sahf
lret
mov
mov
add
push
scas
cmpsl
ljmp
add
add
add
js
cmpsl
fildl
hlt
add
mov
add
hlt
movl
jge
lods
bound
add
movsl
mov
add
add
hlt
fwait
add
cmpl
push
fildl
out
and
add
push
push
mov
add
mov
pusha
adc
lods
xor
add
pop
ret
dec
add
add
lea
push
push
push
push
push
push
call
add
jp
jnp
add
add
add
in
lods
add
adc
ja
xchg
fstps
add
add
movl
jle
loop
add
mov
arpl
push
add
add
pop
addl
jge
add
addl
cmc
push
mov
arpl
mov
add
test
mov
andb
jp
loopne
mov
and
inc
adc
loop
pop
movl
push
lea
push
lea
push
push
push
push
lea
push
call
add
in
add
xlat
jbe
add
add
jmp
add
push
push
add
scas
mov
add
flds
mov
jl
out
pop
out
pop
add
popa
js
outsl
mov
mov
xchg
push
cwtl
add
add
add
arpl
add
jno
cli
add
add
pop
jbe
xchg
int
fdivrp
fstpl
add
sar
add
mov
pop
xchg
clc
fcomi
ljmp
scas
jns
rclb
add
les
addl
rcrb
rclb
push
push
call
nop
fs
add
add
add
cltd
mov
add
cmpsb
aad
add
mov
in
add
fiaddl
push
cmc
popa
mov
lock
add
enter
mov
pop
addb
add
cld
test
add
add
cltd
leave
add
mov
pop
add
add
scas
mov
test
add
mov
lea
pop
pop
push
push
push
push
lea
push
push
call
stos
cltd
mov
xchg
add
mov
mov
mov
add
ret
mov
mov
add
mov
add
ror
add
add
add
enter
add
mov
orb
aad
fidivrs
mov
shll
add
add
add
add
mov
xchg
add
add
pop
movb
mov
lea
pop
pop
pop
pop
push
push
push
push
push
call
mov
in
jecxz
rol
jle
add
push
sahf
add
add
leave
std
addl
add
add
jecxz
add
rolb
add
cmpl
out
mov
add
add
add
add
add
jns
add
stos
xchg
adc
leave
push
ror
sub
pop
ret
push
xor
pop
push
push
lea
lea
rol
pop
mov
push
rol
pop
add
push
shl
rol
pop
cmpl
jne
push
push
not
sub
shl
not
push
push
pop
add
ror
sub
sub
pop
add
xor
shr
pop
push
push
push
push
call
add
fdiv
loop
out
out
into
add
add
add
test
add
mov
popf
lret
jge
fcoml
jb
mov
jge
mov
ret
scas
test
add
add
add
add
nop
add
pop
mov
jo
cmpsb
test
add
jns
add
clc
add
std
add
cmc
lret
cltd
add
mov
lea
pop
pushl
call
push
lea
push
push
push
push
push
push
push
push
push
call
lods
cmc
cmc
lcall
cld
add
cwtl
cmc
add
mov
in
add
test
rclb
mov
pushf
add
jmp
pop
mov
add
add
sahf
add
add
fcoms
add
lret
add
add
add
ljmp
test
pusha
add
popa
sub
call
jmp
push
push
push
push
call
aam
shlb
mov
add
add
add
push
add
cmc
add
mov
jnp
xchg
add
xchg
rolb
imul
les
addb
xchg
add
add
imul
out
mov
add
iret
push
fcmovu
add
mov
add
stos
loop
pop
mov
mov
lea
pop
cmpl
je
push
dec
pop
cmpl
jne
push
lea
push
push
lea
push
push
call
jae
nop
push
mov
gs
fiaddl
add
mov
add
add
add
add
movl
pop
add
add
add
fiaddl
mov
xchg
out
push
mov
out
add
bnd
fldcw
push
xlat
pop
bound
add
add
add
add
add
fnstsw
add
add
in
add
hlt
lea
pop
leave
add
pop
push
xor
ror
pop
pop
push
xor
inc
pop
pop
pop
leave
push
lea
push
lea
push
push
call
jp
add
in
lret
push
mov
push
xchg
push
aam
xchg
mov
test
mov
or
shr
add
pop
add
mov
xlat
jge
mov
insb
mov
add
add
xorb
sti
mov
mov
mov
add
add
add
xchg
add
add
rol
add
jp
push
add
add
mov
add
add
mov
lea
pop
add
push
shr
rol
add
pop
ret
push
push
lea
push
push
push
call
ret
pop
mov
cmpsl
mov
mov
jo
add
xlat
add
mov
add
add
add
stos
add
xchg
add
hlt
lea
add
jnp
hlt
add
mov
add
test
add
imul
add
push
add
movsb
addr16
add
bound
add
push
add
incb
insb
addb
fmull
pop
push
add
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
andb
cli
add
mov
add
add
add
fsubrs
jb
jne
out
pusha
add
gs
add
mov
cmc
fstl
mov
cli
add
mov
lock
add
push
cli
add
cltd
push
js
add
mov
icebp
icebp
add
add
pop
cmpl
jne
push
push
inc
not
push
and
add
xor
lea
sub
pop
add
inc
sub
sub
pop
push
push
call
push
mov
ret
xchg
mov
add
mov
push
xchg
testb
add
rclb
clc
jno
add
ja
add
mov
js
addl
add
jle
ret
add
mov
add
in
imul
out
pushf
add
add
mov
add
jns
scas
lock
add
mov
lea
pop
pushl
push
push
push
push
lea
push
push
call
mov
add
push
mov
lea
add
mov
add
mov
lea
add
repnz
add
mov
fidivs
mov
add
imulb
xchg
incb
add
add
add
fcomps
mov
add
jge
cmpsl
add
add
les
in
in
aad
fstpt
mov
mov
mov
lea
pop
call
push
push
sub
lea
pop
call
jmp
cmpl
jne
push
inc
rol
pop
mov
push
xor
add
pop
mov
call
push
push
call
push
add
repnz
add
fildl
add
into
add
add
pop
jl
mov
add
add
add
enter
add
lcall
aam
leave
add
movsl
testw
scas
add
cltd
add
push
mov
cmpsl
xorl
sti
add
jge
div
jle
mov
out
stc
add
mov
pusha
or
push
push
lea
lea
push
xor
add
add
not
shl
sub
xor
rol
pop
not
add
ror
pop
push
xor
lea
pop
pushl
push
xor
sub
lea
pop
call
push
push
pop
call
push
push
not
dec
push
sub
add
sub
xor
sub
sub
pop
add
pop
push
shr
add
pop
pushl
call
push
push
push
push
push
lea
push
push
lea
push
push
push
call
mov
add
add
add
add
xchg
pop
ror
call
pushf
add
jmp
add
push
pop
hlt
jp
movsl
test
add
add
add
add
add
mov
add
int3
pop
add
add
std
lock
add
mov
pusha
sub
shrb
push
rorb
add
push
and
add
shl
dec
inc
sub
pop
sub
add
shl
not
pop
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
add
cmpsb
xchg
push
sahf
add
pop
add
movsb
add
imul
add
cltd
scas
add
mov
xchg
add
xchg
fcmovne
call
jo
add
pushf
gs
nop
scas
ja
lahf
add
add
mov
pop
add
mov
add
mov
mov
popf
ret
andb
pop
fiaddl
add
add
mov
lea
pop
pushl
push
push
push
lea
push
lea
push
push
push
push
call
div
jnp
lock
jge
add
add
add
in
add
out
pop
add
add
add
add
add
fnstsw
add
mov
add
add
mov
add
adcb
add
pop
add
add
mov
add
repnz
cltd
add
add
shl
cmpsb
add
pop
call
push
push
call
add
mov
lcall
xchg
ret
add
xchg
test
lahf
xchg
fists
push
add
arpl
add
push
pop
push
add
test
sar
add
add
sar
add
bound
add
fiadds
push
cmc
xchg
add
xchg
add
fucomi
fdivs
add
pop
call
push
push
lea
push
push
lea
push
call
ljmp
xchg
cltd
add
shlb
add
mov
iret
xchg
jmp
mov
mov
xchg
add
pop
out
lret
pop
add
mov
xorl
loope
push
lret
rorl
roll
add
shl
add
add
popf
add
out
scas
test
outsl
add
add
fwait
test
ret
mov
cmpsl
add
pop
lea
push
push
not
push
or
inc
add
lea
shr
sub
add
pop
lea
pop
push
xor
sub
add
pop
pushl
call
push
sub
sub
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
push
jl
pop
data16
pop
fldenv
jl
jmp
lret
mov
push
add
add
scas
addl
cmpsl
mov
add
add
fildl
in
jl
add
fwait
add
mov
add
addl
jbe
add
sti
pop
add
add
push
add
mov
gs
out
out
enter
fwait
loop
out
mov
lea
pop
call
push
push
rol
sub
dec
sub
push
and
add
sub
sub
sub
sub
pop
inc
xor
pop
pushl
push
push
push
push
push
lea
push
lea
push
push
call
add
pop
lcall
mov
in
sbb
add
add
fiadds
ja
push
nop
add
loopne
testb
push
pop
add
jno
add
mov
xchg
les
subl
add
ja
cmpsb
xchg
in
add
pop
std
fiadds
push
add
add
add
add
lahf
addb
jae
lock
jl
call
pusha
and
and
add
call
mov
push
push
add
sub
push
or
inc
add
add
inc
sub
shr
shl
lea
pop
rol
pop
push
sub
add
dec
pop
pushl
call
push
not
xor
pop
push
call
push
push
shr
lea
inc
push
push
pop
add
add
sub
rol
pop
add
pop
push
add
lea
lea
pop
pushl
push
xor
pop
call
push
push
push
call
pop
int
mov
add
add
sti
jp
call
mov
fisubrs
mov
add
incb
jbe
lahf
cmpsb
addl
add
ror
pushf
add
mov
in
test
pop
add
cmpsb
mov
push
mov
add
fstpl
add
enter
std
add
add
ret
bound
cmpl
mov
fmull
add
cld
push
sub
pop
call
push
push
not
push
and
add
not
add
sub
sub
sub
dec
pop
add
not
pop
push
push
lea
push
lea
push
push
call
add
add
mov
fcoms
imul
popa
mov
arpl
fnsave
add
add
jne
pusha
ljmp
int
add
lret
add
frstor
mov
xchg
loop
leave
add
mov
jno
fbstp
add
bound
add
add
add
add
cmpsb
lods
mov
add
add
lock
test
xchg
jae
mov
lea
pop
pushl
push
add
pop
call
push
push
shl
dec
inc
push
sub
add
lea
add
shl
shl
sub
rol
shl
not
sub
pop
shl
not
shr
pop
push
push
sub
inc
add
shl
push
or
inc
add
shr
lea
not
sub
sub
shl
add
inc
pop
dec
inc
not
xor
pop
push
lea
shl
pop
call
push
push
push
push
push
lea
push
call
call
mov
add
add
in
mov
fnsave
add
jecxz
in
arpl
shlb
out
add
sar
mov
add
sahf
xchg
add
mov
in
add
add
lcall
sahf
jmp
nop
fisubrs
add
add
mov
add
jno
movsl
filds
sbb
lahf
mov
lea
pop
pop
dec
jne
call
push
lea
pop
jmp
push
lea
push
push
push
lea
push
push
call
add
add
shlb
add
leave
add
add
sahf
hlt
mov
add
add
xchg
std
ret
leave
add
mov
cmpsl
lods
enter
pop
enter
fistps
pop
add
xchg
mov
loope
add
scas
pop
lds
add
sti
shl
mov
lea
pop
call
push
push
add
push
xor
add
xor
sub
sub
sub
xor
rol
pop
shr
sub
sub
pop
push
inc
ror
pop
pushl
push
inc
add
ror
pop
call
push
call
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
call
out
fwait
add
add
add
mov
in
mov
add
xlat
add
add
xchg
enter
cld
add
lods
mov
add
pushf
in
add
add
ja
repnz
mov
xchg
add
mov
add
jbe
add
add
nop
add
add
jne
add
add
pop
mov
lea
push
push
rol
xor
ror
push
push
pop
add
xor
xor
ror
sub
sub
not
xor
pop
dec
sub
pop
push
push
lea
push
push
call
pop
mov
mov
shlb
add
insb
sahf
pop
add
add
add
add
cmpsb
add
cltd
cmpsb
add
mov
add
add
add
xchg
loope
add
cwtl
sti
imul
neg
mov
add
std
lret
add
pop
mov
add
mov
pop
pushl
call
push
inc
add
pop
push
call
push
push
inc
push
sub
add
rol
sub
dec
pop
dec
add
pop
push
sub
inc
dec
pop
pushl
call
call
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
mov
add
pop
lds
add
add
mov
add
add
add
add
fninit
add
add
add
add
add
into
jmp
add
add
outsl
add
jnp
fwait
je
nop
add
mov
fnstsw
ljmp
pop
pop
xchg
sahf
add
in
shrb
lea
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
enter
add
lea
add
xchg
out
cld
jl
incb
in
xchg
stos
add
in
add
push
add
cld
fisttpl
testb
add
mov
mov
cli
sti
mul
add
add
mov
push
add
mov
pop
rolw
add
mov
add
add
roll
sbbl
push
mov
fstpt
mov
lea
pop
lea
push
push
add
inc
add
sub
push
or
inc
add
xor
xor
xor
sub
not
xor
not
pop
add
pop
pushl
push
lea
push
call
jp
add
mov
lods
fiaddl
xchg
add
mov
cmpb
push
add
std
mov
ja
mov
add
mov
mov
add
add
add
add
lea
push
addl
outsl
push
push
pushf
addb
add
pusha
lea
cld
fsub
popf
fiadds
movsl
addr16
mov
movsb
data16
popa
xchg
pop
add
add
mov
lea
pop
call
push
add
pop
lea
push
dec
ror
xor
pop
push
push
push
shl
sub
sub
inc
pop
push
pushl
push
push
not
push
or
not
add
add
add
add
sub
sub
rol
add
pop
dec
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
call
lea
loope
movsb
mov
shr
out
roll
add
sbbl
mov
jae
hlt
test
add
add
pusha
out
add
cmpl
add
jns
add
push
sarl
xchg
xchg
add
mov
fsub
testb
add
jmp
mov
lea
pop
push
push
shl
ror
pop
call
push
push
sub
sub
inc
push
or
inc
add
shr
sub
sub
pop
inc
shl
pop
push
push
call
stos
mov
add
lret
push
jno
pop
xor
add
mov
mov
mov
fidivrs
fisubrl
jno
mov
add
insb
je
roll
mov
xchg
add
add
addb
add
add
rorb
add
add
xchg
aad
jnp
les
jne
call
push
push
push
lea
push
push
push
lea
push
call
loope
add
add
lahf
add
add
push
add
enter
add
popa
add
xchg
mov
mov
call
add
aad
popl
add
add
add
stc
mov
movsb
xchg
pop
xchg
add
test
addl
mov
add
scas
push
add
ja
lea
into
pushf
testb
jmp
aam
mov
add
add
mov
lea
pop
push
push
lea
push
call
add
add
jge
jae
add
mov
fistl
add
mov
clc
clc
adcl
add
mov
add
push
cld
mulb
popf
mov
xchg
lods
popa
add
add
pop
add
push
mov
iret
add
add
clc
in
scas
add
testb
add
stc
movsb
add
mov
lea
pop
call
push
push
dec
sub
shr
push
push
pop
add
ror
sub
shr
pop
inc
xor
pop
push
sub
sub
pop
pushl
call
call
push
push
push
call
test
in
jnp
movb
stos
add
adc
jbe
repnz
bound
add
push
pushf
stos
add
adcl
out
pop
add
add
js
cmpsl
mov
add
fiadds
fisubrs
aad
shl
adcl
testb
push
test
rcll
mov
mov
shrb
lea
pop
jmp
pushl
mov
push
shr
sub
dec
add
pop
jmp
push
push
sub
dec
push
or
inc
add
shr
sub
sub
sub
shr
inc
pop
rol
sub
inc
add
pop
push
push
lea
push
push
push
push
push
push
push
push
call
addl
add
mov
add
add
add
mov
push
mov
jb
nop
into
add
movb
pop
push
add
mov
pushf
jmp
lods
add
add
add
mov
xchg
mov
scas
add
add
roll
xchg
jecxz
jnp
add
mov
pop
pop
add
mov
xchg
add
add
hlt
lea
pop
pushl
call
push
lea
pop
push
call
push
push
ror
inc
push
push
pop
add
shr
sub
sub
sub
sub
rol
pop
inc
ror
pop
push
lea
push
call
in
testl
xchg
jl
add
in
rolb
mov
stc
add
repnz
mov
mov
push
lret
add
add
xchg
lret
add
fs
into
add
pop
mov
jecxz
push
pop
xchg
push
fsub
add
add
push
pop
pop
add
rolb
into
add
jne
out
scas
into
add
lea
pop
pushl
call
push
push
call
cmpsb
add
xchg
add
jge
add
add
stc
add
lods
addr16
lcall
mov
add
mov
sahf
add
test
add
add
shll
std
cltd
push
push
test
add
je
stos
add
in
add
pop
jp
mov
push
add
push
add
xlat
ret
add
jmp
add
rcll
jecxz
mov
lea
pop
push
call
leave
push
xor
pop
add
push
push
call
fisubrl
mov
gs
fstps
pop
add
xchg
filds
add
push
in
mov
add
push
cld
add
enter
mov
push
nop
add
sahf
cwtl
aam
add
add
roll
add
ja
add
jle
loop
add
popa
add
add
fwait
add
lods
bound
in
add
add
sahf
icebp
mov
lea
pop
pop
pop
pop
push
shl
pop
pop
push
lea
push
push
call
jle
add
jo
add
lcall
add
add
fwait
add
pop
jb
add
loope
sti
add
add
add
ja
add
add
add
movsb
lea
jo
add
add
addr16
flds
add
add
jae
ficompl
add
pop
in
lods
add
pop
leave
add
ret
push
push
lea
push
push
push
push
lea
push
call
add
stos
add
in
add
fwait
push
add
mov
jns
out
mov
add
add
jmp
add
mov
mov
sbb
add
add
movsb
xlat
repnz
incb
add
mov
mov
sar
jo
add
jae
add
insb
out
out
clc
lea
add
je
pop
add
add
sti
pop
mov
lea
pop
leave
push
add
sub
pop
ret
push
mov
push
sub
dec
dec
shl
pop
cmpl
jne
push
push
push
lea
push
push
lea
push
push
push
call
movsb
xchg
cli
add
pop
add
add
subl
imul
filds
testl
push
add
pushw
fwait
add
lahf
out
add
scas
xchg
pop
arpl
add
aam
add
add
mov
fld
add
add
add
cmpsb
in
js
cwtl
mov
cmpsl
add
mov
lea
pop
mov
push
lea
push
lea
push
push
push
push
push
call
cmpsb
add
add
movsl
mov
ja
out
add
jp
xorb
lcall
add
in
stos
add
xchg
add
add
add
mov
mov
movsl
into
clc
pushf
fildl
mov
gs
js
mov
js
jle
add
xchg
xchg
add
add
mov
add
push
mov
jns
add
pusha
cli
add
xchg
add
xchg
in
xchg
roll
les
mov
add
push
push
push
push
push
call
movsl
pop
add
cmpsl
add
add
add
add
add
fwait
mov
aam
add
add
imul
push
add
mov
test
add
add
add
add
roll
cli
add
in
add
add
ljmp
add
mov
loop
scas
mov
add
adc
mov
and
xor
push
push
lea
push
push
push
call
mov
jmp
out
xchg
jmp
loope
jecxz
add
mov
push
add
enter
add
sti
sti
scas
out
mov
in
add
add
mov
movsb
pop
js
cltd
movb
jne
push
in
jb
add
mov
pop
stc
jecxz
xorl
push
js
neg
mov
add
pop
xor
push
push
push
lea
push
push
push
call
add
xchg
add
add
icebp
mov
rcrb
pop
mov
push
fs
add
jmp
xchg
add
add
ret
andb
jge
popf
jmp
hlt
imul
nop
fisubrl
loop
imul
testl
add
add
fimull
pop
add
push
push
call
addl
fdivrl
in
mov
stos
add
push
stc
cwtl
add
mov
add
add
push
icebp
add
out
add
loop
add
test
fs
add
mov
mov
lret
add
add
mov
cltd
add
add
mov
cmpl
lahf
xchg
add
insb
xchg
pop
add
mov
add
pop
lock
je
add
pop
xor
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
lock
add
sar
jae
add
add
jbe
add
pop
add
push
repnz
add
add
add
add
mov
add
rolb
fsts
jne
loop
add
xchg
lret
insb
lret
add
add
add
je
add
mov
fs
add
clc
mov
ja
mov
lea
pop
dec
sub
push
lea
push
lea
push
push
push
call
add
shrb
sub
add
leave
repnz
add
imul
int
fldl
mov
push
out
add
add
mov
add
pop
add
add
mov
imul
in
out
flds
data16
cli
add
add
into
add
add
rcrl
jl
cmpl
add
out
cld
mov
lea
pop
jmp
push
push
lea
push
push
push
push
push
push
push
call
add
lods
add
fs
mov
add
call
fucomp
test
add
les
push
test
push
add
add
jns
add
fdivl
fidivrs
rclb
add
out
pop
ret
rcl
add
xchg
push
rolb
addr16
insb
add
push
movsb
out
in
fwait
add
add
mov
lea
pop
sub
push
pop
pushl
push
sub
pop
pop
sub
push
add
pop
cmp
jne
mov
push
lea
pop
lea
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
add
popf
test
add
add
loopne
shll
fnsave
add
jne
sbbl
nop
in
xchg
mov
loopne
add
loope
add
hlt
mov
mov
repnz
jge
add
flds
repnz
add
cwtl
in
add
mov
lea
pop
sub
push
lea
push
call
push
add
rolb
mov
mov
add
test
rolb
add
add
testl
add
fcompl
add
mov
add
ja
add
pusha
add
add
xchg
push
xchg
add
lahf
les
add
ja
loopne
add
add
add
jns
add
nop
outsl
mov
lea
pop
mov
shr
push
push
push
call
loope
add
add
rolb
add
add
test
add
add
push
push
jle
loope
pop
add
mov
out
addr16
add
out
sar
jbe
add
leave
icebp
jp
rcrb
add
add
arpl
add
mov
jp
add
add
lahf
add
int3
lea
pop
add
sub
push
sub
rol
pop
pushl
pop
shr
push
push
push
lea
push
push
push
lea
push
push
call
add
add
add
add
mov
pusha
lret
xlat
add
loope
scas
rcl
mov
fidivl
mov
mov
ror
add
add
aam
addb
cltd
add
fiadds
add
cli
jge
add
xchg
push
add
add
add
mov
fidivs
add
mov
mov
lea
pop
and
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
leave
call
add
aam
lret
mov
mov
test
xchg
sahf
rcll
push
jecxz
jl
pushf
xchg
add
add
lea
mov
adcl
and
push
fsub
add
add
add
jne
stos
add
add
add
mov
test
add
add
mov
lea
pop
sub
cmp
jne
push
sub
rol
ror
pop
leave
ret
push
push
push
push
push
push
call
mov
add
popa
add
pushf
movsb
xchg
push
rolb
add
mov
mov
out
add
cltd
push
mov
aad
aam
push
repnz
movsb
hlt
leave
add
add
les
add
pusha
loop
add
loopne
add
add
pop
add
add
add
jnp
fs
addl
add
add
mov
lea
pop
push
mov
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
add
imul
mov
add
add
add
xor
stc
add
add
add
lock
divb
add
add
add
fcomi
cwtl
in
cwtl
add
ffree
add
ret
jae
jno
lds
scas
add
pop
pop
into
add
fiadds
jmp
rcr
sti
add
pop
add
push
push
push
lea
push
push
push
call
in
add
lcall
add
xchg
mov
push
add
out
jns
lea
add
loop
add
add
add
aam
add
movsl
rol
aad
mov
add
roll
add
in
mov
ja
mov
push
push
mov
add
fiadds
jp
xchg
add
js
xchg
mov
lea
pop
push
push
push
dec
shl
shl
xor
pop
push
push
push
xor
pop
push
push
add
sub
pop
mov
push
push
push
push
push
push
push
push
push
call
cmpsl
cmp
xorb
add
add
aad
pop
sahf
add
fcompl
cltd
add
xchg
out
mov
add
mov
out
shrl
add
in
add
mov
ret
add
enter
xchg
add
bound
add
add
mov
mov
lea
pop
lea
push
shr
add
pop
sub
mov
shr
push
push
lea
push
push
push
push
call
outsl
push
enter
js
movb
out
add
add
mov
loopne
add
lods
add
xchg
mov
add
add
ja
fiadds
fiadds
out
add
add
faddl
lahf
bound
add
scas
repnz
add
je
pop
jno
xchg
add
int3
loope
ret
cld
cli
notb
cld
lods
xchg
add
pop
mov
mov
sbb
ficoml
jg
sub
call
les
addl
add
lods
add
push
shlb
test
lods
std
imul
pop
aam
test
xchg
add
mov
mov
mov
adc
add
stc
add
add
out
into
add
stc
lods
mov
add
mov
push
xchg
push
mov
add
add
ja
jmp
push
je
add
mov
lea
pop
mov
push
ror
pop
add
mov
add
push
push
push
call
mov
add
push
add
add
nop
jbe
nop
add
pop
lret
add
add
add
mov
rcll
lret
add
lock
mov
enter
movsb
add
add
mov
add
add
add
out
lret
add
add
add
cli
add
incb
add
add
lea
pop
xor
push
sub
ror
xor
ror
pop
mov
and
push
lea
push
push
call
call
jl
push
pop
leave
add
xchg
add
add
add
add
test
pop
xchg
add
in
add
arpl
add
add
lods
test
push
icebp
jae
in
add
roll
gs
addb
add
rolb
add
cld
stos
test
mov
mov
lea
pop
call
push
push
push
push
push
push
push
push
call
add
add
add
add
out
add
test
add
add
jb
stc
fiaddl
xchg
mov
in
add
call
fucomp
lret
xchg
mov
add
popf
add
cli
cmpsl
add
fldl
push
add
lods
test
add
jecxz
repnz
add
add
mov
lea
pop
add
cmp
je
add
push
not
ror
sub
pop
cmpl
jne
xor
pop
push
not
shl
pop
pop
pop
push
push
push
push
push
push
push
call
outsl
add
jne
xchg
lret
add
popf
pop
add
loop
data16
add
add
fndisi(8087
add
mov
mov
nop
mov
xorb
cld
push
stos
cli
add
add
mov
add
mov
lcall
mov
add
mov
lock
add
in
xchg
add
add
add
jae
add
pop
mov
lea
pop
pop
push
shl
inc
pop
pop
push
push
push
push
push
push
push
push
push
call
in
add
jecxz
jbe
push
test
jo
mov
mov
icebp
pop
xchg
add
add
testb
scas
outsl
hlt
bound
jmp
mov
mov
shlb
cli
out
add
aam
out
jno
fimull
add
add
add
ret
ljmp
add
pop
call
mov
lea
pop
leave
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
push
test
add
add
add
fmulp
add
addb
add
lods
add
jnp
jp
pushf
mov
add
xchg
push
add
lcall
out
mov
jne
add
loopne
add
xchg
push
sbbb
add
loopne
add
add
bound
add
push
jo
add
add
mov
lea
pop
ret
push
push
push
push
push
lea
push
push
push
push
push
call
addb
cltd
xlat
add
mov
mov
js
mov
rcr
loopne
add
insb
jo
stos
push
addl
add
push
push
add
mov
add
std
jo
pop
add
add
mov
add
mov
add
xchg
fdivr
out
add
shl
sahf
add
sti
cltd
add
pop
in
fwait
add
add
add
xchg
lea
mov
lea
pop
mov
push
push
lea
push
push
push
push
push
call
add
add
push
mov
add
clc
add
mov
mov
mov
mov
xchg
sahf
add
in
mov
xchg
mull
add
js
add
jbe
pop
call
add
je
cmpsb
add
icebp
fstps
mov
shl
stos
add
insb
jnp
add
clc
loope
in
pop
hlt
add
pop
add
push
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
bnd
insb
cmc
stc
add
call
mov
add
pop
xlat
add
add
jns
insb
mov
push
add
out
out
lahf
pop
test
leave
add
add
stc
push
jbe
mov
stos
data16
xchg
add
add
add
cwtl
push
add
lahf
fadds
add
add
push
cmc
add
mov
lea
pop
pop
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
push
call
jp
shl
push
add
in
mov
mov
add
pop
lea
mov
loope
fiadds
add
call
popa
js
arpl
rolb
mov
push
fiaddl
add
pop
mov
push
ret
push
add
mov
push
filds
in
add
test
add
add
enter
nop
add
sub
call
push
xor
not
dec
pop
xor
push
push
push
push
push
push
lea
push
call
add
add
add
add
sti
fdivp
add
test
add
std
out
pop
fldl
add
push
iret
add
loope
addb
push
add
push
popf
xchg
int
add
xchg
faddl
scas
mov
faddl
add
clc
lea
mov
lea
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
call
add
jp
push
add
loop
popf
add
flds
pop
mov
add
scas
mov
add
add
je
stos
add
mov
jne
jle
add
mov
add
add
in
icebp
add
lds
push
add
insb
into
mov
add
add
add
add
add
mov
add
jo
pushf
incb
test
mov
lea
pop
pop
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
imul
add
add
mov
add
mov
ja
out
add
add
add
fmul
add
ja
lret
jl
fmul
enter
add
add
add
stc
loop
jb
jne
add
add
push
bound
rolb
add
add
jmp
add
stos
pushf
cmc
add
mov
add
add
pop
add
mov
lea
pop
pop
pop
leave
push
not
dec
ror
pop
ret
push
shl
shr
pop
push
push
ror
pop
mov
push
push
push
call
add
xlat
add
std
scas
jle
testb
add
stos
add
mov
push
lret
outsl
xchg
add
mov
add
ljmp
mov
insb
popf
add
add
add
push
mov
add
mov
sbbb
mov
aam
in
cld
lea
pop
add
push
add
add
add
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
cmc
xchg
pop
mov
stc
add
flds
fiaddl
jb
outsl
mul
push
push
mov
add
out
lds
add
jecxz
hlt
push
addl
pop
add
add
xchg
mov
add
ret
addl
add
xchg
js
lahf
imul
out
xchg
fldl
in
jmp
add
fmuls
mov
lea
pop
push
push
push
push
call
in
add
add
lds
out
data16
push
test
jle
ja
data16
popa
add
mov
add
xchg
sarl
add
int
shrb
push
jb
lahf
add
add
loop
scas
movl
sahf
add
xchg
add
stc
push
mov
add
into
mov
jb
mov
lea
pop
push
push
add
pop
mov
push
pop
push
not
shl
rol
pop
lea
sub
push
sub
shr
lea
xor
pop
mov
push
xor
add
pop
shr
push
push
push
push
lea
push
push
push
push
call
cmc
xchg
roll
add
lods
add
mov
mov
xchg
addb
divb
add
pop
mov
add
add
xchg
flds
add
test
test
add
jae
add
jo
add
jo
out
add
mov
add
mov
mov
movsb
lcall
cwtl
mov
add
fidivs
add
add
mov
add
popa
and
fimull
push
call
rclb
mov
les
shrb
outsl
add
add
pop
pop
mov
out
aad
jnp
add
fadds
add
add
mov
scas
std
mov
roll
mov
insb
jns
add
jb
imul
add
add
add
rolb
add
test
jbe
mov
cmpsl
repnz
aad
mov
lea
pop
add
pushl
popl
push
push
lea
push
push
push
call
xchg
movsb
add
std
push
mov
fs
sti
jns
add
add
add
scas
iret
mov
add
loopne
arpl
addb
mov
add
mov
add
add
pop
xchg
add
cld
add
add
jb
cwtl
aad
incb
add
mov
cmpsb
mov
clc
lods
add
mov
lret
xchg
mov
int3
lea
pop
mov
push
xor
pop
add
xor
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
aad
jecxz
mov
add
add
add
arpl
add
ljmp
imull
add
add
pop
popa
rolb
add
test
lock
jge
mul
popf
mov
add
mov
xchg
add
add
leave
pop
cmpsb
rol
mov
xlat
xchg
sbb
ljmp
add
add
fs
jp
jne
popf
add
add
arpl
arpl
mov
push
push
call
gs
arpl
lea
add
add
jae
mov
shl
not
add
jb
xchg
lahf
fcoms
jecxz
xchg
add
add
loop
xchg
jnp
cmpsb
lret
in
add
mov
push
loope
add
add
into
nop
add
push
xchg
add
cwtl
loop
add
push
call
jp
lea
pop
add
xor
call
push
pop
add
nop
nop
push
push
push
push
call
add
mov
add
fdivr
push
sarb
add
mov
adcl
xchg
xchg
xchg
scas
mov
add
mov
push
in
nop
mov
mov
stc
out
add
add
cmpsb
fiaddl
icebp
scas
add
pop
test
in
add
add
add
xchg
insb
cltd
mov
add
add
out
add
mov
lea
pop
cmp
je
push
lea
add
pop
nop
nop
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
popa
pop
aam
add
fsubs
jno
add
je
add
xorl
mov
loop
pop
add
enter
add
test
push
mov
cmpsb
jp
orl
add
fucompp
addr16
jbe
divl
xchg
push
jl
mov
lret
test
scas
add
add
cld
lea
pop
inc
nop
nop
push
push
call
add
mov
mov
les
xlat
test
scas
add
add
add
test
add
out
add
add
sti
add
outsl
int
add
add
mov
cmpsl
add
add
mov
andl
add
rcr
add
add
roll
jne
into
int3
stc
add
mov
lea
pop
cmp
jb
xor
jmp
push
lea
push
push
lea
push
push
push
lea
push
push
call
xlat
nop
cmc
flds
mov
add
pop
add
xchg
push
lcall
rcl
loopne
add
xchg
add
add
add
mov
fadds
mov
xchg
aam
mov
add
add
fs
sahf
add
pusha
movsb
add
fsts
in
lds
flds
pop
popa
add
add
inc
movsl
mov
lea
pop
mov
push
add
rol
sub
pop
add
push
push
lea
push
push
push
lea
push
push
lea
push
call
mov
push
jb
lods
add
mov
and
fdiv
mov
mov
add
test
add
popl
mov
mov
fdivp
add
popl
pop
call
add
jecxz
fiaddl
mov
rol
add
push
add
and
mov
jb
inc
sbb
xor
dec
inc
shr
pop
add
push
lea
pop
mov
xor
push
push
push
lea
push
lea
push
push
push
lea
push
call
mov
in
add
fs
add
jns
add
flds
add
jge
xlat
scas
mov
add
add
rolb
cmpsl
add
int3
fnstenv
hlt
shll
add
loop
mov
pusha
lret
push
mov
xchg
lods
lea
add
jbe
hlt
lea
pop
xor
shl
xor
push
lea
push
call
stc
xchg
loop
add
shll
add
add
lods
add
add
mov
sarb
flds
jmp
nop
add
push
imul
add
mov
add
push
cli
lods
pusha
adcl
add
add
mov
idivl
loope
mov
outsl
add
add
fldl
mov
popa
pop
imul
shl
push
not
pop
xor
shl
xor
push
push
call
add
clc
stos
add
jl
push
cld
add
xchg
fidivrs
add
repnz
test
mov
loopne
imul
nop
mov
pushf
lcall
add
mov
stos
add
add
jns
divb
add
add
clc
add
outsl
add
cmpsl
xchg
pop
mov
add
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
mov
xchg
scas
shll
jb
mov
add
loop
add
xchg
xchg
add
stos
add
add
pop
fldz
add
jne
add
add
add
mov
push
jae
add
add
add
add
add
in
jl
xlat
mov
pop
xchg
add
add
hlt
add
les
pop
pop
pop
pop
push
push
push
push
push
call
jge
add
push
aad
mov
movsb
add
mov
add
add
loope
add
xlat
add
add
nop
jecxz
xchg
jmp
enter
iret
push
insb
lcall
sarb
lret
mov
int3
insb
repnz
clc
loope
gs
add
cmpsl
insb
popa
add
repnz
mov
lea
pop
leave
push
dec
pop
ret
push
push
push
push
push
lea
push
push
lea
push
push
call
jne
add
pop
add
add
add
test
cwtl
insb
bound
add
add
add
add
outsl
out
ror
lods
test
loope
testl
add
add
add
ret
mov
clc
notl
lret
add
add
jecxz
add
add
add
jp
filds
mov
lea
pop
mov
push
not
lea
lea
pop
push
push
sub
shl
shr
not
pop
push
push
push
push
lea
push
lea
push
push
push
call
add
aam
xchg
add
ficoms
les
add
add
lods
pushf
add
add
add
add
xchg
out
pushf
jno
lods
mov
add
mov
mov
xchg
int
iret
xchg
rcl
mov
icebp
add
outsl
roll
fcomi
xchg
mov
add
mov
xchg
xchg
add
add
iret
add
leave
lods
enter
add
popa
sti
add
push
iret
push
add
xchg
fmull
mov
push
shr
inc
ror
pop
mov
push
dec
sub
add
ror
pop
mov
test
je
mov
push
lea
push
push
push
call
ja
add
add
mov
data16
out
jbe
clc
xchg
add
popa
add
hlt
mov
xchg
jno
add
fadds
jp
add
push
add
sbbl
add
xchg
add
add
pop
fsubl
add
add
add
add
mov
add
cmpsb
insb
xchg
add
xchg
in
lcall
add
add
pop
test
je
mov
push
ror
not
pop
mov
push
rol
pop
mov
inc
push
shr
pop
cmp
je
test
je
mov
push
shl
pop
inc
push
push
push
call
xlat
lds
push
pusha
add
fnstcw
aad
xchg
push
add
imul
add
iret
add
mov
add
out
add
ret
cmc
xchg
fwait
push
xchg
add
std
cwtl
mov
int
xchg
lret
imul
add
in
imul
in
out
in
out
jmp
jmp
cli
loopne
xchg
insb
add
or
cmp
je
test
jne
push
dec
xor
rol
inc
pop
xor
push
lea
ror
pop
pop
push
sub
rol
pop
pop
push
push
push
push
push
push
push
push
push
call
mov
mov
add
xchg
out
out
add
add
enter
push
call
popf
iret
add
shrl
jmp
fisubrs
add
negb
cld
add
add
sahf
rol
add
xchg
add
jne
add
jmp
jno
ljmp
mov
add
add
jne
incb
cld
xchg
push
in
add
mov
lea
pop
pop
pop
leave
push
push
call
mov
add
call
fsubr
mov
testl
popf
add
cltd
add
add
push
jge
add
add
add
add
into
add
cmc
add
mov
mov
roll
add
in
add
xchg
cld
pop
jne
int3
lea
pop
ret
mov
push
push
push
call
xchg
fidivs
add
lods
add
pop
add
add
in
mov
push
jp
add
in
jnp
jge
test
add
add
loope
enter
add
xchg
pop
repnz
hlt
pop
add
js
add
xchg
idivb
add
jp
push
loop
int
push
xlat
cmpsb
lret
hlt
lea
pop
inc
push
push
push
push
push
lea
push
push
lea
push
push
call
add
add
fildl
xchg
add
stc
shll
lahf
lahf
add
add
pop
popf
movl
scas
add
mov
adc
fadds
pop
into
mov
lahf
pushf
roll
add
add
enter
add
add
add
add
add
add
aam
bound
cmp
jne
lea
push
not
ror
pop
mov
test
je
mov
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
add
out
test
add
hlt
fstpl
repnz
mov
popf
add
movsl
add
push
addb
pop
add
rolb
sti
scas
xlat
add
jns
test
add
sti
pushf
add
js
add
filds
add
movsl
mov
mov
addb
ja
add
add
push
lock
orb
add
push
push
push
push
push
push
call
pusha
rcl
pop
pop
add
jne
push
add
add
pop
xchg
jge
lea
add
mov
movl
test
add
cmc
loopne
add
xchg
cwtl
roll
xchg
add
add
add
push
add
add
mov
rolb
xchg
lock
add
xchg
leave
jns
mov
add
add
imul
jle
mov
mov
lods
mov
mov
arpl
pop
cmp
jne
push
add
rol
pop
mov
test
je
push
not
ror
pop
mov
add
push
push
push
push
lea
push
push
lea
push
lea
push
call
xlat
roll
hlt
add
pop
jmp
shr
add
add
add
test
pop
data16
rcl
lock
add
add
scas
fistpll
cmc
mov
add
bound
test
add
icebp
js
jno
jbe
add
jne
add
add
add
cmpsl
pusha
hlt
lds
jns
add
lea
pop
cmp
je
jmp
xor
push
push
lea
push
push
push
push
call
in
push
add
jo
in
iret
add
jns
add
out
mov
fidivrl
popf
add
push
add
lods
jno
xchg
test
pop
add
xchg
add
lret
mov
movsb
add
lds
add
add
fiaddl
mov
add
add
popf
xchg
loope
add
in
add
movsb
out
add
add
std
in
add
add
add
cltd
add
leave
xchg
add
mov
lea
pop
pop
pop
push
lea
push
push
push
lea
push
call
fwait
add
mov
cmpsl
js
iret
add
mov
enter
xchg
loopne
test
add
add
add
push
fwait
sti
test
andl
add
scas
add
add
in
add
fcomps
jnp
mov
push
xchg
add
xchg
ficoms
add
add
les
pop
pop
pop
push
sub
sub
xor
pop
leave
ret
push
sub
sub
ror
xor
pop
lea
pop
push
add
ror
lea
dec
pop
pop
push
ror
xor
pop
pop
pop
leave
push
shr
shr
pop
ret
mov
pop
push
lea
push
push
call
add
add
jbe
push
add
data16
roll
mov
jecxz
add
add
clc
add
orb
movsl
hlt
push
rcl
add
add
outsl
push
add
loopne
mov
leave
add
add
popf
add
add
shr
mov
add
cmpsl
mov
mov
mov
add
jns
jns
nop
add
add
xchg
ja
cmc
test
mov
lea
pop
pop
push
add
add
pop
pop
push
dec
shr
pop
pop
push
lea
push
call
add
add
lods
outsl
fucomi
mov
pop
add
subl
add
xchg
add
add
mov
nop
pop
in
cmc
ljmp
scas
add
add
lret
push
xchg
mov
add
push
jno
add
mov
loop
movsb
test
mov
add
scas
mov
iret
scas
bound
cli
addl
mov
jmp
add
pop
pop
mov
lea
pop
leave
ret
push
push
push
push
lea
push
push
call
xchg
add
mov
xchg
cmc
push
add
add
clc
push
add
mov
fwait
out
add
jne
xchg
out
add
jl
jnp
add
add
push
sahf
add
add
mov
mov
add
add
add
add
js
mov
add
xchg
add
popf
push
push
add
mov
add
mov
in
cltd
add
pop
add
sbb
rolb
ljmp
push
push
lea
push
push
push
push
push
lea
push
call
add
push
xchg
add
pop
mov
pop
add
fiadds
pop
add
enter
mov
xchg
fcmovne
mov
add
add
cltd
add
add
add
mov
add
xchg
addr16
add
movb
push
test
xchg
std
push
xchg
add
filds
int3
mov
std
pushf
mov
cltd
ljmp
mov
lea
pop
inc
cmpb
jne
ret
adc
and
push
and
xchg
and
pop
and
adc
and
shlb
adc
and
mov
jno
push
cmp
adc
jno
add
add
mov
adc
stos
vunpcklps
mov
and
pop
leave
push
add
sti
mov
sahf
push
aad
lret
dec
loop
sbb
sub
mov
or
test
cmp
insb
push
push
enter
inc
dec
dec
jno
and
push
test
in
inc
xchg
mov
jecxz
push
adc
inc
sub
mov
out
and
and
and
cwtl
aaa
mov
xchg
mov
popa
lds
cltd
push
cmpsb
iret
js
jnp
fs
das
mov
mov
sub
je
jle
push
and
sarl
mov
jl
int
aas
subb
push
add
push
das
xchg
mov
aaa
push
scas
mov
nop
sbb
mov
xchg
fdiv
push
ret
sarl
fldl
adc
enter
stos
add
pop
mov
jl
xchg
mov
stos
xchg
test
pop
push
jno
push
jbe
sub
pop
addr16
sti
test
ret
out
jge
cltd
shrb
testl
and
outsl
sub
les
push
test
sub
pop
inc
lret
jge
mov
push
sbb
sub
ret
mov
cmp
out
and
in
data16
push
fidivrs
mov
adc
popf
mov
cmp
xlat
sub
lcall
add
xchg
sbb
adc
inc
outsl
dec
and
cli
lds
dec
inc
xchg
dec
push
imul
loop
loopne
ljmp
push
arpl
idiv
std
xchg
cltd
push
xor
fwait
mov
es
cmp
fdivs
dec
mov
push
lahf
mov
and
or
lcall
lock
dec
je
daa
add
sti
call
movsl
push
sbb
mov
mov
aam
add
lcall
ret
call
sti
popa
jnp
and
mov
stc
jg
mov
stc
test
add
add
sti
dec
lods
imul
xchg
negl
outsb
inc
jb
mov
jo
lret
pop
mov
xchg
xchg
imul
ret
or
repnz
jge
sub
jp
out
outsl
cmp
sbb
pop
mov
cmp
mov
cmp
cli
aad
or
mov
sbb
xchg
mov
lods
mov
adc
add
adc
scas
aas
icebp
adc
xchg
out
inc
jl
lret
sub
inc
imul
mov
aad
and
insl
adc
adc
sub
push
lea
xchg
jecxz
cmp
xor
bound
push
sbb
inc
popa
mov
xor
cmpsb
je
sahf
push
popl
inc
or
les
xchg
std
mov
inc
cmp
rorb
add
add
or
fwait
xchg
js
data16
mov
mov
nop
fcoms
inc
pop
fdivs
sbb
sbb
inc
aam
sbb
nop
lods
xchg
jae
sbb
fnstcw
jge
push
test
leave
call
pop
sub
es
sbb
stc
adc
and
adc
call
jne
add
and
pushl
add
cmp
fimuls
xor
shll
sub
xor
clc
out
jle
call
hlt
in
pop
shll
and
in
push
inc
push
xor
aam
xchg
push
lods
push
jo
rolb
insb
in
ss
loop
pop
iret
mov
adc
roll
push
and
mov
sbb
dec
dec
push
mov
loope
fdivrs
sbb
inc
xchg
lods
je
pop
lea
add
aas
and
cli
popf
dec
or
jle
adc
das
or
push
and
bound
mov
add
xor
and
outsl
sbb
push
lock
call
dec
dec
adc
or
nop
clc
mov
sub
bound
jge
xor
mov
inc
xchg
cs
mov
clc
push
push
pop
and
xor
fwait
daa
adc
testb
dec
pushf
icebp
mov
ss
sbbb
xchg
and
je
pop
adc
or
movsb
into
mov
xchg
ds
pop
inc
pop
movsl
lods
mov
aam
sbb
jp
xchg
pop
or
adc
push
repnz
out
cmp
jns
sbb
inc
iret
add
sbbl
mov
je
mov
add
mov
pop
cmp
or
cmpl
daa
fwait
sub
push
mov
lock
cltd
push
pop
sub
push
jge
loope
jmp
mov
sub
imul
movsb
aaa
add
push
in
sbb
sbb
push
mov
js
clc
mov
dec
jno
xchg
jne
loop
or
sti
insl
mov
imul
mov
lods
push
movsb
lds
addb
and
dec
rcrl
push
test
inc
mov
aas
push
ficoml
jl
jo
lahf
sar
cmp
es
mov
pop
leave
sub
mov
mov
xor
inc
shl
jns
aam
out
or
jp
mov
fiadds
psubsw
stos
mov
add
imul
or
notb
imul
xor
in
ret
adc
cwtl
sahf
pop
jle
dec
dec
ja
in
push
push
inc
in
xchg
mov
pop
adc
or
jo
inc
inc
sarb
aas
push
negb
mov
and
js
or
push
xchg
push
add
lret
push
js
ret
xor
mov
ffree
cwtl
imull
push
bound
inc
sub
in
adc
lods
fisubrl
dec
arpl
aad
ret
dec
add
mov
movsb
adc
decl
movsl
pop
lahf
dec
push
cld
stos
mov
dec
pop
sahf
mov
cmp
adc
push
jmp
xchg
loopne
or
pop
lret
xor
adc
daa
lahf
adc
dec
jb
sub
scas
cltd
or
jae
xchg
pop
test
test
inc
aas
mov
out
mov
adc
mov
imul
es
fwait
lods
jecxz
pop
sbb
jmp
lret
push
pop
push
std
rcrb
mov
jbe
lahf
lahf
sbb
ret
and
lods
sub
nop
rol
outsb
js
arpl
cli
or
fwait
jg
ljmp
mov
adc
pop
fnstsw
inc
out
jnp
out
add
mov
cmp
cmp
xor
shl
test
mov
mov
rcrl
popa
mov
and
mov
mov
mov
cmpsb
cmp
jbe
xor
xchg
addb
mov
movsb
imul
mov
push
call
data16
cmp
inc
push
xchg
mov
dec
and
lret
xor
mov
mov
stos
negb
outsl
mov
testl
sub
fisttpll
lea
test
in
pushf
test
mov
adc
lret
test
cpuid
add
into
xor
lcall
push
xlat
or
iret
arpl
ret
outsb
mov
push
sbb
pushf
stos
test
add
sub
pop
lock
mov
jle
movsb
jl
adc
add
mov
jne
push
adc
mov
inc
xchg
icebp
jl
mov
out
sub
xchg
dec
cli
es
je
call
cmp
sbb
cmpsb
bound
frstor
je
pop
stc
push
jle
push
pop
jne
in
in
mov
outsl
mov
adcb
pop
pop
inc
test
andb
arpl
inc
jnp
imul
dec
cmp
bound
arpl
jmp
mov
push
dec
out
mov
push
sarl
xchg
das
js
jnp
outsb
rorl
ds
xchg
fcomi
jns
lret
lods
fwait
out
push
or
fldl
iret
jmp
pop
xor
inc
imul
adc
jecxz
and
in
sbb
sub
xchg
aas
sbb
hlt
inc
adcl
test
pusha
push
jns
cmpl
xchg
jge
push
fwait
scas
in
inc
push
sub
push
mov
cwtl
lods
inc
sub
enter
dec
mov
mov
jge
popf
int
pop
jb
cmc
add
pop
cmp
sub
outsb
in
movsl
popf
js
push
ja
push
push
repz
mov
jnp
xchg
push
mov
sbb
out
pop
jnp
inc
and
outsb
xor
out
inc
pop
fdivrp
shrb
outsl
lcall
lods
stc
add
inc
dec
inc
xchg
outsl
dec
out
pop
loope
mov
int3
movsb
hlt
jp
sub
jns
dec
push
into
sbb
or
dec
sbb
push
outsl
mov
mov
das
push
inc
pop
jb
imul
sbb
gs
mov
mov
stos
movsb
roll
enter
rcll
nop
scas
pusha
fldcw
outsb
pop
stc
stc
test
arpl
push
and
inc
call
dec
sub
adc
or
icebp
sti
jp
scas
aad
or
cmp
lcall
fidivrl
inc
mov
dec
imul
xor
insb
daa
mov
dec
in
pusha
testb
jb
ja
add
add
cmp
loope
nop
adc
ret
sbb
daa
lahf
aas
in
xor
scas
mov
aas
fisttps
pop
repz
add
loope
cmp
mov
or
sub
cs
enter
cmc
sub
pop
test
sarl
loope
int
dec
lret
cmp
out
movsb
or
inc
seta
lret
cmpsl
lahf
mov
test
daa
cltd
mov
push
fstpt
neg
mov
add
gs
xchg
lahf
daa
mov
sbb
lods
pop
dec
or
push
adc
aas
jns,pn
in
and
sub
push
jp
xchg
mov
rcll
addl
cmpl
xchg
cmp
xlat
repnz
mov
mov
cmpsl
pop
cli
xchg
mov
movsl
mov
sub
lods
lahf
jbe
dec
jae
mov
fnstcw
push
imul
neg
lret
jo
cmc
aam
or
arpl
mov
subb
jb
dec
shrl
sbb
fcomp
movsb
mov
out
les
imul
cmp
ret
int
pop
leave
adc
sub
je
mov
mov
xchg
mov
outsl
mov
sbb
xor
jo
dec
push
enter
add
mov
out
stos
int3
add
lahf
das
dec
mov
mov
sub
dec
rcrb
mov
push
sub
dec
loopne
or
outsl
or
dec
jo
popf
jecxz
xchg
je
xchg
lret
mov
lahf
xchg
mov
lret
cmc
push
lock
and
call
int
lret
popa
mov
test
mov
mov
push
bnd
cmp
and
add
jle
pop
add
cmp
xchg
inc
cmpsl
pop
and
out
lahf
xor
repz
outsb
cld
and
fdivp
sub
lods
out
jmp
in
call
test
cs
lret
and
hlt
je
sbb
adc
shll
cltd
je
and
imul
sbb
repnz
pop
and
out
icebp
cwtl
and
inc
andl
dec
or
insl
xchg
push
adc
out
push
lods
cwtl
sti
add
inc
jne
jns
out
push
movsb
dec
cmp
dec
cmc
inc
xchg
add
or
cld
mov
in
xchg
fcmovb
mov
in
fiaddl
aam
hlt
repz
jp
jo
lods
mov
dec
mov
jne
sbb
mov
movsb
out
add
dec
mov
inc
push
shrb
dec
dec
mov
pop
sbb
clc
cs
or
bound
int3
mov
pop
test
scas
loope
sbb
dec
jno
pop
xchg
jge
jle
mov
xor
daa
or
inc
or
push
inc
sbb
cmp
fistps
fstl
sbb
pop
mov
push
popa
loop
push
hlt
mov
adc
pop
pop
nop
stos
aaa
or
sbb
sbb
or
scas
add
je
push
insb
xchg
mov
xor
jle
pop
xor
loop
test
mov
punpckldq
movsl
cmpsb
std
fwait
test
adc
or
cmp
add
lcall
xor
ret
inc
mov
rorb
xor
loop
filds
pop
lods
ror
int3
pop
jb
or
ja
sub
and
out
mov
out
scas
fs
mov
pusha
jmp
xchg
jb
cwtl
sahf
jl
in
sbb
test
pop
bswap
fstpt
xchg
rol
lods
lds
insl
mov
pusha
xor
lods
cmp
les
div
sub
cli
sahf
outsl
es
jne
xor
sub
pop
mov
inc
pop
fldenv
leave
cmp
int3
lds
fxam
mov
lcall
dec
movsl
sbb
sbb
sbb
dec
fcompl
subl
je
pop
sbb
jecxz
das
xor
and
cli
xchg
jns
and
adc
xor
inc
insl
and
lcall
lods
je
pop
jle
xor
push
movsl
inc
pusha
pusha
jp
jmp
testb
loopne
dec
icebp
paddsw
pusha
enter
scas
pop
inc
insb
clc
xor
adcb
scas
aam
std
xchg
hlt
movsb
shrl
sub
xchg
xor
bound
xchg
lods
lods
negb
popf
mov
push
ljmp
jbe
push
sbb
int3
shll
cmpsl
push
mov
sub
movsb
pop
mov
inc
inc
ljmp
push
jo
lcall
lret
jbe
test
sbb
sbb
sub
pop
into
push
dec
or
cltd
mov
sub
push
shll
pushf
mov
ret
push
add
outsb
add
and
stos
sbb
mov
or
lahf
insb
add
cmpsb
movsb
mov
or
loop
sub
inc
xor
cmpb
cmp
jg
adc
cmc
cmp
out
cmpsl
push
dec
jnp
push
pop
xor
fldlg2
lcall
push
mov
add
xchg
xchg
insl
lock
aam
or
xor
dec
jo
mov
add
in
sti
lods
inc
or
push
sbb
std
push
mov
add
ja
data16
daa
and
xlat
mov
cmp
mov
fdivs
dec
lcall
cld
popa
fists
dec
xchg
mov
rclb
or
insl
dec
rcll
lods
adc
sub
cmp
pop
aas
lods
push
mov
outsb
gs
cmc
or
rclb
jbe
sbb
mov
xor
and
mov
and
out
sub
cmp
cmp
cltd
ret
imul
enter
sbb
call
cmc
jmp
shll
test
mov
stos
adc
pop
rorl
lea
fsubrl
movsl
xrelease
icebp
dec
mov
xchg
inc
sub
aas
inc
in
mov
cmp
lds
int3
push
addb
lcall
flds
and
test
scas
mov
cmp
mov
test
mov
xchg
push
fsts
call
imul
pop
ret
in
ret
xchg
lret
ljmp
iret
out
mov
sub
sub
sub
aas
sub
aad
outsl
push
and
and
cmp
or
mov
push
pop
xchg
cld
inc
setle
push
sbb
leave
xor
mov
pop
jmp
add
pop
fbld
movsb
aad
ss
test
push
or
test
push
cmp
repz
adc
int
cmp
push
jecxz
xchg
fsts
mov
pop
fs
fidivrs
in
add
mov
hlt
fcomps
mov
std
out
sarl
dec
and
mov
out
cmc
push
loop
inc
mov
mov
jl
mov
call
pop
add
mov
mov
mov
xchg
mov
cvtdq2ps
flds
in
mov
or
mov
popa
add
pop
push
push
es
ficompl
loop
push
push
repnz
pop
stc
fwait
push
div
inc
test
mov
fs
jno
mov
std
subb
jae
das
inc
dec
daa
jge
mov
scas
pop
out
iret
hlt
dec
lret
icebp
and
movsl
mov
fdivl
mov
lods
in
and
data16
out
add
xchg
dec
add
ljmp
enter
data16
sbb
bound
shrb
inc
jb
inc
xchg
in
daa
push
xor
fwait
cmp
mov
daa
pop
jne
out
dec
test
sbb
gs
or
push
jne
popl
or
scas
leave
sar
add
push
jns
rclb
fsubrl
stos
fs
xchg
into
call
dec
xor
mov
and
xor
push
add
out
xchg
loopne
or
push
iret
aas
dec
xchg
stos
add
sbb
adc
setne
js
scas
and
ja
loope
leave
mov
mov
push
xor
jo
push
out
test
loope
mov
cmp
cli
fwait
cmpsl
jnp
popa
lock
pop
sbb
shlb
cmp
inc
imul
out
jmp
adc
out
jne
jo
lds
and
push
jle
cmp
mov
sub
scas
push
test
mov
gs
iret
jmp
sbb
push
inc
ds
push
mov
pusha
iret
jl
inc
mov
dec
cli
out
xchg
dec
push
in
mov
in
fs
inc
ja
mov
push
xorl
dec
popa
pop
push
sub
loope
in
xchg
lret
xorl
mov
jl
fs
lock
xchg
jge
cmpsb
aad
lods
adc
xchg
aad
popa
int3
inc
add
xchg
ds
jecxz
aaa
pushf
inc
ss
inc
inc
mov
mov
add
in
sbb
enter
xor
fidivrs
stos
in
sub
cmp
sub
std
std
les
lcall
leave
hlt
or
fldenv
nop
mov
hlt
into
out
popf
cmp
mov
or
imul
push
int3
shll
and
inc
sti
add
push
pushf
fs
fidivrl
les
push
mov
inc
fwait
xchg
into
jecxz
and
sbb
sub
loop
fs
sub
cwtl
pop
int
das
xchg
cmp
dec
mov
pop
sti
xchg
lret
cmp
loop
pop
add
lret
push
xor
or
push
popa
or
loopne
and
pop
cmp
or
mov
ljmp
lret
lds
dec
lock
jns
in
frstor
jnp
xchg
sub
out
adc
sahf
sbb
stos
mov
and
and
mov
xchg
xor
jne
pop
dec
xchg
in
mov
cmpsb
pop
lcall
rcrb
mov
cmp
and
aad
leave
hlt
inc
rolb
sub
cmp
inc
adc
xchg
or
cmpsb
jle
das
aad
out
jle
jo
loop
push
mov
inc
or
add
add
sbb
scas
push
stos
gs
xchg
jmp
dec
jns
mov
fnstenv
stos
test
dec
inc
jnp
fidivs
or
js
loopne
push
cltd
ret
jno
lret
xor
mov
xchg
xchg
push
in
sub
mov
push
xlat
and
sbb
outsb
pop
adc
mov
xlat
insb
adc
sbb
out
xchg
loop
cs
sub
std
push
fsqrt
cltd
lods
jle
adc
xchg
or
push
xchg
lds
xchg
adc
or
addr16
add
xor
fildll
or
mov
js
out
mov
push
xlat
sub
sub
add
imul
or
sub
sub
add
lock
aas
add
pop
sub
adc
sahf
xchg
es
and
aaa
rorb
fildl
arpl
popf
sbb
sbb
data16
int3
aas
fistl
lods
mov
rcrb
fst
in
pop
lods
sbb
movsl
aaa
sbb
mov
out
and
rol
and
mov
out
test
test
push
mov
movsb
xchg
sub
sbb
adc
and
lods
xor
jnp,pt
shr
cmpsb
in
sbb
mov
repz
in
xor
bswap
push
mov
or
inc
inc
lods
pop
data16
add
push
pusha
and
dec
aaa
repz
sub
in
inc
xor
push
sbb
cld
arpl
add
push
stc
dec
cltd
sbb
xlat
mov
mov
repnz
repz
loop
or
icebp
sbb
scas
hlt
add
fistpll
lret
push
out
add
fbstp
out
aaa
fnstcw
out
sahf
mov
xorl
rolb
icebp
pop
mov
jns
mov
mov
lds
jno
or
pop
jge
lcall
into
stos
push
lcall
jp
lock
and
notb
jo
iret
in
xchg
lods
or
lret
xor
ljmp
add
sbb
mov
into
subl
push
imul
and
dec
stos
outsb
int
pop
and
nop
inc
xchg
test
mov
data16
ss
mov
aas
fsubs
cmp
stos
mov
push
cmp
inc
mov
jno
testl
sub
inc
rol
out
fdivs
jbe
push
cli
loop
loop
fstl
push
imul
push
lods
popa
call
add
mov
leave
rcrb
mov
mov
jp
pusha
stc
lret
push
cltd
add
imul
jg
cli
mov
inc
pop
adc
jl
adc
sub
or
dec
imul
adc
inc
pop
bound
stc
hlt
scas
je
out
jecxz
into
rclb
test
popa
movsb
sbb
jae
out
scas
gs
jbe
pop
xor
leave
lds
pop
imul
das
rcrb
lret
test
jle
inc
movsl
js
inc
jb
jnp
sbb
adc
jle
fnstsw
test
or
lret
and
daa
iret
jae
sarb
clc
out
jg
push
lcall
notl
lock
xchg
lahf
mov
cmp
subl
addr16
xchg
daa
push
and
and
and
adc
mov
test
nop
divl
in
ret
dec
xorl
in
mov
mov
lods
mov
push
add
out
int3
fimuls
mov
mov
xlat
insl
in
es
jns
sub
jbe
mov
stos
test
test
iret
mov
insl
push
or
lret
add
sbb
arpl
cli
push
mov
xor
xchg
dec
test
es
push
cmc
push
leave
cwtl
iret
fldt
sub
sbb
lods
sbb
repnz
or
and
cmp
stos
stos
mov
dec
rcll
aas
jg
loopne
jne
in
cmp
xlat
enter
fucomi
rolb
stos
xchg
int
sub
hlt
iret
loope
outsl
dec
repnz
and
mov
mov
loope
push
pop
aad
inc
icebp
pop
push
jmp
test
icebp
push
hlt
in
fmuls
loop
call
pusha
mov
in
fnsave
mov
xchg
jl
loop
jl
ficoms
repnz
imul
inc
sub
mov
xlat
cmc
pop
xor
icebp
jl
and
fwait
mov
pushf
addb
cmc
movsl
xor
ljmp
cld
adc
das
nop
dec
dec
aas
cmc
jns
fbld
cld
mov
aas
push
fadd
outsb
dec
insb
insl
int3
xor
gs
lock
loop
out
iret
flds
inc
xor
cmpsl
sbb
or
cltd
imul
xor
cmpsb
movsl
clc
dec
cmp
fcmovnu
jns
mov
xor
mov
leave
movsl
and
cmp
push
inc
pop
jno
call
ds
out
mov
dec
fistl
insb
xor
aad
ror
shrl
lds
lahf
jl
xchg
loop
push
cmc
xor
dec
inc
into
addr16
xchg
pop
add
lret
mov
ret
clc
shlb
mov
inc
addr16
mov
jecxz
rol
add
push
in
mov
xchg
inc
ficomps
ret
fstl
mov
cmp
loopne
outsb
stos
sub
idivl
xor
mov
push
lock
ljmp
jne
mov
pop
inc
clc
mov
mov
jl
inc
dec
mov
xor
fabs
int3
mov
sub
xor
mov
sub
pushf
cmp
inc
or
dec
push
cmp
cmp
imul
lahf
and
cmp
out
cmp
imul
stos
adc
pop
jl
sarl
insl
fs
repz
jg
dec
clc
push
and
mov
out
fldcw
pop
xlat
sbb
inc
and
add
pop
adc
shlb
iret
mov
add
loop
cmp
lock
cmp
lods
jmp
ret
or
mov
jl
movsb
mov
add
or
pop
adc
gs
js
pop
sbb
mov
stc
pop
imul
mov
repz
or
jecxz
adc
loopne
pop
addb
loop
and
pop
adc
inc
lcall
outsl
aam
jg
std
xor
and
mov
cs
aas
int3
lock
xchg
shrb
dec
sub
lock
jp
fstl
jp
xor
sub
test
adc
daa
push
negb
and
fidivs
jae
push
mov
xchg
pop
outsb
insl
xchg
or
cltd
and
inc
icebp
or
jo
je
sub
xor
je
push
cmpsl
jbe
stos
add
iret
mul
call
leave
repz
scas
insl
sub
mov
add
lret
imulb
sub
mov
in
or
jo
jns
mov
xor
fisubrl
cmpb
adc
xorl
mov
fldl
cli
push
cwtl
ret
mov
or
mov
mov
dec
jno
int3
mov
pop
into
rorb
loopne
jae
or
ss
rcll
mov
jecxz
sarb
inc
js
jns
pushf
or
sti
inc
mov
sub
sbbb
lret
or
jp
jecxz
popa
adc
add
out
inc
notb
je
in
add
or
addr16
sub
add
xor
adc
xor
xchg
insb
test
mov
pushl
mov
notb
and
lcall
pop
mov
lods
xchg
mov
scas
sbb
outsl
cwtl
sbb
pop
popa
lahf
into
scas
xor
pop
pop
inc
icebp
shlb
lahf
push
jbe
inc
loop
das
dec
sub
std
xchg
pop
adc
dec
sti
jecxz
lret
or
pop
jmp
ljmp
sub
dec
mov
daa
push
xchg
je
mov
xlat
pop
lods
in
nop
push
aad
push
loopne
adc
sbb
in
in
push
fsqrt
mov
inc
adcb
pop
and
jg
data16
pushf
pop
in
ret
dec
jnp
aas
ja
lods
adc
mov
lret
mov
cld
adc
and
or
shl
mov
addr16
ffree
mov
stc
push
es
scas
iret
add
jecxz
or
adc
mov
out
dec
mov
jo
cmp
loop
dec
jae
into
xchg
aad
lcall
push
inc
aad
sbbl
cmc
push
xchg
out
mov
cmpsb
enter
xchg
inc
mov
testl
faddl
lds
jb
movsl
xor
cmp
mov
in
xchg
dec
clc
add
test
inc
pushf
jl
fisubrs
cmp
xchg
test
ret
mov
inc
std
inc
inc
sbb
lcall
rorb
je
mov
jb
fsubl
faddp
pushf
clc
scas
push
cmp
out
xorb
lea
xchg
sti
mov
ds
stc
aad
ds
xchg
adc
dec
sti
ror
out
adc
dec
fiaddl
mov
shlb
pop
mov
xor
xchg
xchg
mov
imul
loope
rcrb
mov
jl
jmp
push
popf
pop
dec
ss
std
xor
dec
cmp
dec
xlat
push
es
jp
int
jmp
repnz
call
mov
jbe
xor
mov
adc
ds
fst
les
push
cmpsl
psrad
adc
push
les
test
xchg
jmp
cli
and
lahf
pop
inc
bound
vucomisd
aam
ds
inc
lods
test
ficompl
outsb
loopne
sub
and
cmc
cmp
mov
ret
dec
mov
and
sbb
mov
imul
push
data16
xlat
xorl
test
arpl
xor
pop
mov
idiv
xchg
fnsave
pop
incb
xor
into
pop
stc
and
sarl
dec
scas
in
xor
outsl
movsb
jo
sub
in
insl
mov
frstor
jge
dec
negl
adc
sub
pop
jg
xlat
add
and
das
out
jle
sbb
lahf
xchg
mov
aam
jle
sub
sti
rorl
test
es
fwait
adc
pop
leave
fsubs
sbb
ljmp
xlat
mov
inc
icebp
sub
subb
mov
adc
pushf
arpl
dec
das
add
fsub
popf
mov
call
xrelease
shlb
fdivrp
jp
push
push
movb
lock
test
mov
sub
arpl
mov
mov
xchg
push
lret
jl
jae
add
in
fmul
jno
arpl
movsl
adc
test
push
cmp
pusha
std
push
pop
sbb
lods
cld
push
sub
adc
popa
and
dec
or
cmp
ror
incb
adc
pushl
movaps
inc
push
repz
sub
push
dec
in
je
cwtl
pop
add
pop
xchg
sub
adc
pusha
and
stc
pop
test
fadds
xor
call
add
adcl
cmp
and
jne
nop
shll
daa
jmp
xor
mov
mov
popa
push
and
mov
sbb
cmpsl
cmp
fstpt
cld
out
repnz
lods
add
pop
xchg
fldt
sbb
jecxz
aam
es
inc
and
cld
mov
xor
add
mov
or
in
sbb
icebp
pop
test
mov
add
sbb
std
insb
fidivrs
sub
ljmp
push
mov
sub
xchg
cmp
adc
loopne
jg
jb
pop
xlat
pop
sub
pop
mov
push
xor
lds
test
fxch
xor
jge
push
jmp
push
or
or
ret
ret
outsl
add
das
pop
xor
js
sahf
adc
push
sub
stos
scas
jnp
jb
popf
dec
push
fisttpl
mov
pop
leave
cmc
scas
inc
repz
aam
outsl
sub
cmpsb
fstpt
sub
adc
xlat
gs
pop
sub
inc
pop
in
sar
cmp
push
push
push
inc
jnp
rcr
push
ss
movsl
cmp
sub
lahf
lds
test
repnz
cmp
pusha
push
repnz
xchg
mov
shl
ja
je
mov
push
dec
adc
das
add
std
xor
sti
dec
inc
lock
out
pop
ljmp
xchg
movb
sub
arpl
cltd
pop
test
cmp
scas
jg
ds
and
ss
fwait
cwtl
cmp
inc
jo
xchg
dec
shlb
and
inc
cli
sub
xchg
pop
int
push
cmp
xchg
in
loop
xchg
fildl
push
dec
dec
and
sbb
lahf
mov
jmp
jl
out
pop
pop
fsubl
mov
movb
js
mov
lods
loopne
popf
ret
sti
dec
xor
pop
lea
add
push
pop
fisttps
mov
push
or
mov
or
jp
sbb
aaa
in
pop
sahf
jo
scas
loopne
dec
std
pusha
rorl
dec
ret
mov
aam
xor
push
mov
mov
fnstcw
push
add
cmp
mov
pop
xchg
pop
xchg
mov
lret
stc
clc
in
inc
mov
int
adc
scas
ljmp
aam
fcoms
mov
mov
xchg
scas
cwtl
loope
dec
ud0
mov
fsubr
pop
cmp
test
mov
nop
mov
xchg
push
jbe
in
test
mov
pop
pop
or
inc
cmp
jecxz
dec
mov
and
cmp
js
rcl
stos
cmp
xor
or
add
ret
lea
inc
sub
cltd
sub
nop
in
cmc
push
loope
stos
xor
popa
int
dec
cmpsb
cmp
fimuls
and
daa
jbe
loopne
and
jno
jns
loope
or
pop
xor
dec
ss
jae
xor
cmp
jp
cld
and
cld
cltd
fs
out
fldenv
ficoms
inc
dec
add
fs
popa
or
imul
sarl
add
fdiv
testl
adc
scas
loop
repnz
xor
add
dec
add
pusha
incb
adc
test
imul
dec
clc
jg
jnp
loope
or
add
sbb
fnstcw
cmpsl
mov
jbe
push
shl
int
scas
leave
push
ss
mov
insl
pushf
loop
lea
fs
rolb
loop
fstl
pushf
inc
insb
inc
adc
hlt
test
cmp
mov
rclb
repz
add
jmp
cli
lret
cli
xchg
inc
mov
fisttps
mov
sub
mov
mov
pop
cwtl
sbbb
jbe
push
pop
cwtl
push
jne
je
dec
int3
push
cmp
ljmp
or
and
pushf
fstps
push
sub
lahf
sbb
xor
pop
int3
dec
inc
fs
rorb
dec
test
mov
hlt
and
xchg
push
sahf
insl
sbb
mov
or
in
inc
ffree
iret
shlb
test
push
scas
or
dec
adc
pop
pop
pop
out
push
insl
aaa
dec
jge
cmp
pop
cld
rorb
cmpsb
stos
jp
rorb
add
int
cmpl
adc
dec
xchg
xchg
jmp
stc
dec
cmp
add
fbld
push
xlat
mov
outsl
inc
daa
add
pop
fsubl
lock
mov
loop
jae
imul
popa
std
pop
xor
lock
mov
and
test
dec
sbb
mov
rorb
cmp
lret
enter
flds
or
inc
sub
outsl
xchg
aad
rolb
dec
cwtl
inc
ret
fisttpl
xchg
rcr
aaa
jecxz
mov
aaa
xchg
cmp
ja
mov
inc
shrl
add
popa
cmp
vpcmpgtb
jp
fwait
popf
enter
pop
mov
andl
xor
cmp
add
push
push
adc
pushw
call
sbb
dec
xchg
xchg
sarb
mov
or
outsb
push
rcl
and
push
sbb
cmp
and
sub
cmpb
xchg
and
sbb
jbe
xchg
jl
xor
in
jno
loope
cmp
adc
dec
shll
out
cmpsb
dec
idivb
int
mov
enter
lret
cs
dec
mov
fiaddl
xor
dec
jne
rcr
stos
mov
js
push
loope
sbb
xor
pop
jbe
sub
bound
jns
mov
int3
cmpsl
inc
dec
in
leave
das
inc
shlb
sbb
jnp
mov
push
mov
sub
jno
xchg
and
jl
inc
pop
jmp
cs
hlt
mov
mov
popf
fstpl
call
stos
add
lds
pop
jmp
jnp
sti
jle
jb
pop
pop
test
mov
or
mov
es
xor
das
jge
pop
aad
in
jg
jo
sub
and
negl
cmpsb
sub
sbb
leave
cmp
aam
xchg
mov
into
mov
repnz
sbb
stc
cli
jmp
and
stc
xor
xchg
xchg
adc
shll
mov
ljmp
xchg
std
add
cmp
mov
cmp
sbb
adc
inc
jno
sbb
jns
xor
fldl
rsqrtps
lcall
stos
pop
test
stos
mov
lods
ss
test
fidivrs
xchg
pop
pop
inc
add
inc
xchg
popa
lock
inc
popa
mov
aam
lahf
or
cmp
shlb
push
sti
pusha
testl
jbe
adc
daa
jecxz
inc
and
mov
arpl
pop
imul
mov
out
cli
or
sbb
ret
popa
mov
add
cli
dec
inc
in
ja
push
and
fdivl
xor
and
je
jmp
cmp
mov
scas
inc
jbe
sub
andl
out
gs
jg
das
in
mov
bound
jnp
out
jmp
shll
scas
adcb
jecxz
jl
xchg
mov
sub
mov
pop
call
stos
xor
cmp
sbb
lcall
mov
scas
rclb
mov
cmpsl
sub
adc
outsl
into
out
xor
int
cmc
jne
repz
cwtl
shll
pop
lret
cmp
test
adc
das
push
sti
fisttps
loope
ja
or
push
xlat
movsb
sub
cmpsl
inc
add
or
xchg
push
lods
mov
dec
pop
xchg
fs
adc
adc
aad
jp
imul
loop
mov
mov
adc
jl
stc
stc
mov
jae
fisttpll
ss
adc
push
aam
lock
sti
adc
mov
xchg
pop
sub
inc
cmpsl
mov
insb
mov
and
sbb
clc
in
or
adc
jl
lock
std
sbb
dec
sbbl
push
xor
arpl
mov
fimull
mov
jae
jecxz
rcr
inc
dec
jmp
cmp
lahf
popf
jmp
arpl
fs
add
lods
inc
nop
lock
mov
cmp
xchg
rclb
dec
daa
mov
popa
cmp
sbb
push
push
xor
fs
dec
ljmp
push
mov
stos
push
mov
xor
push
iret
shr
pusha
xchg
fistpl
cmp
lret
add
stc
sbb
popl
xchg
cmp
push
add
imul
push
ret
dec
cmp
lock
cwtl
fstpt
int
fwait
inc
jnp
sub
push
mov
in
dec
dec
fbstp
cmp
lret
rcrb
cli
imul
mov
xlat
jmp
cli
outsb
mov
or
cwtl
test
sub
shr
shl
push
jb
jno
mov
sbb
adc
or
cmp
getsec
push
jl
mov
mov
add
bound
mov
dec
inc
iret
sub
xchg
xchg
pop
rcrb
mov
sbb
adc
in
inc
inc
nop
fs
push
lahf
mov
aad
cmp
jmp
inc
std
cmp
out
out
in
test
add
jae
nop
test
movsb
xor
pop
jo
out
sub
mov
cld
pop
dec
fs
mov
add
aaa
xor
in
mov
dec
stos
mov
xchg
cltd
mov
fimull
cltd
nop
iret
jo
mov
jl
dec
or
sub
dec
aad
push
inc
jge
add
std
int3
ja
cmp
sti
xor
sub
sbb
dec
out
outsb
lods
lods
or
lea
daa
fmulp
les
int
pop
dec
mov
mov
hlt
lds
adc
scas
pushf
jb
jnp
or
mov
dec
call
lods
add
xchg
add
mov
inc
and
into
aam
push
arpl
cmp
push
adc
or
in
inc
dec
push
or
lock
and
sbb
loope
mov
xor
ret
fdivp
xchg
data16
sbb
clc
sti
enter
test
adcl
test
cs
xchg
xor
dec
ret
js
mov
jecxz
lea
mov
inc
and
jb
fistl
sub
cmpb
mov
push
aam
outsl
mov
cs
sub
js
call
push
push
xchg
or
xchg
leave
fcmovne
push
fidivrs
out
add
push
xor
cmp
bswap
cmpsl
cmp
clc
mov
cmp
rcrb
and
push
std
in
clc
jecxz
mov
xchg
lret
cli
rclb
add
mov
out
sbb
stos
ret
call
xor
stos
std
fadds
movsb
push
cmpsb
sub
dec
addr16
mov
pop
jno
xlat
and
push
mov
cwtl
sahf
and
orl
jno
adc
adc
sub
inc
push
cli
sub
test
xor
dec
xchg
imul
rcll
out
outsb
jmp
enter
jg
mov
push
push
or
sti
nop
mov
and
leave
test
roll
ret
mov
das
les
inc
test
outsb
jbe
inc
ja
fwait
inc
out
lods
xchg
data16
je
sbb
inc
in
sub
call
pop
push
push
popa
mov
sbb
stos
shrl
xchg
push
cld
sbb
out
or
jecxz
sub
push
sbb
aas
incb
lds
movsb
and
mov
mov
pop
test
mov
xchg
xchg
arpl
pop
push
adc
sub
in
inc
fs
fs
lods
xor
push
pop
cmp
jmp
mov
stc
icebp
cli
sar
inc
add
mov
add
stos
and
add
jns
imul
pop
mov
inc
out
cmpsb
arpl
and
notb
xchg
xchg
sub
xchg
frstor
repz
xchg
or
imul
push
icebp
jecxz
pusha
movsl
clc
cmp
and
rcr
xchg
and
push
adc
jae
push
xchg
cmpsb
jo
push
sbb
ja
lcall
sbb
data16
ljmp
mov
mov
stc
mov
or
or
mov
movsl
or
adc
xlat
dec
jb
or
sti
dec
mov
dec
xchg
lret
adc
leave
ficompl
fdivs
mov
xchg
cwtl
popf
push
push
pop
int3
mov
inc
inc
daa
inc
repnz
pushw
sbb
aas
xchg
and
add
mov
lods
mov
mov
adc
dec
mov
adc
cmp
adc
jmp
loope
mov
push
push
and
pop
mov
pop
cmp
push
fiadds
mov
mov
inc
and
outsl
inc
push
in
loop
les
movsl
xor
cs
xchg
jmp
sbb
inc
jmp
sub
out
pop
pushf
loope
test
adc
ljmp
sub
adc
repz
mov
jae
add
sbb
es
dec
in
cmp
cmp
sbb
idivb
into
or
aam
sarl
and
lds
cld
pop
aaa
jmp
addr16
enter
xchg
xchg
cmp
mov
mov
lods
fbld
adc
adc
mov
and
pushf
ja
xchg
aaa
add
adc
mov
jno
cltd
xor
cmpsl
leave
cli
testl
es
mov
stc
mov
addr16
scas
mov
mov
mov
pop
test
and
outsl
adc
mov
std
dec
fwait
and
mov
mov
negb
lods
pop
loop
jle
inc
xor
cmpb
out
ss
lcall
lcall
nop
push
push
loop
aam
imul
repz
ja
add
mov
or
in
fs
add
jno
cld
pushf
imul
repz
int3
test
in
aaa
and
movsl
add
dec
mov
sbb
pop
sbb
or
ljmp
xchg
add
mov
xchg
inc
in
pop
mov
ss
dec
jg
mov
or
xor
inc
in
sbb
push
adc
rclb
lret
repz
jne
testl
hlt
repnz
mov
jge
scas
adc
and
or
je
jo
pop
ss
ja
bound
pop
fcompl
push
pop
jmp
clc
adc
or
lcall
test
into
dec
fistps
jmp
js
add
mov
mov
fcoms
mulb
push
push
jp
mov
adc
repnz
ret
xchg
mov
js
jnp
es
adc
xchg
cmp
clc
out
pop
jns
sub
testw
sti
lahf
and
pusha
arpl
test
or
ds
lahf
sub
mov
dec
aas
insb
dec
jb
in
fwait
cs
pop
cmpsl
fidivrl
insb
test
gs
testb
and
in
push
pop
ret
dec
jecxz
mov
push
repnz
mov
stc
inc
sbb
jg
das
fstpl
movsl
xlat
inc
lret
inc
inc
lea
inc
pop
xor
arpl
iret
sbb
mov
jle
movsb
enter
inc
inc
sub
add
push
xchg
mov
sbb
scas
lods
std
pop
sub
mov
pushf
or
orb
repz
scas
fs
aam
mov
mov
out
fisubs
adc
mov
and
lods
jno
inc
sub
dec
fs
add
lret
outsb
mov
jg
sbb
popa
inc
out
and
push
pop
mov
xchg
adc
cmp
dec
push
leave
jae
ror
in
orb
fbstp
pop
xchg
jno
inc
mov
fwait
jmp
outsb
push
mov
lods
hlt
xchg
ljmp
push
sahf
inc
call
pushl
cmp
imul
fs
fsub
lahf
into
cli
int
and
mov
fimull
inc
imul
fildll
sti
sarl
popa
inc
in
negl
je
cmp
xchg
jmp
rcpps
cmpsl
icebp
pop
lcall
push
xor
or
insb
jae
dec
ss
sub
inc
jo
out
dec
ljmp
lods
pop
pop
nop
push
je
push
xchg
mov
mov
lea
jg
pusha
jb
adc
mov
xor
ds
jl
outsb
push
dec
push
jno
in
jnp
inc
ffreep
mov
call
xlat
cli
inc
in
jge
fcompl
out
xchg
push
or
scas
loope
push
lret
popl
fmul
imulb
xchg
ret
fcmovbe
or
test
xor
xor
stos
lds
lea
push
adc
test
ror
iret
gs
cmpl
mov
add
ret
push
pop
scas
xor
push
pushf
xchg
pop
push
adcl
cmp
stos
int
cld
and
mov
and
int3
xchg
jp
adc
pop
dec
inc
lods
push
cwtl
xorb
adc
hlt
cmpsl
dec
jne
pop
lock
mov
pop
xchg
xchg
imul
cmp
xor
sbb
rorl
jmp
adc
sub
scas
mov
sub
loopne
orl
add
ljmp
xor
jmp
or
lret
nop
xchg
jg
je
push
inc
cmp
pusha
jmp
mov
call
scas
imul
xor
mov
inc
imul
adc
and
ja
aad
dec
cmp
roll
add
sbbw
pop
xor
xlat
push
repz
loopne
in
enter
clc
fdivl
insl
fucomp
mov
arpl
xor
dec
inc
mov
pop
jbe
dec
pop
pop
pop
sbb
pusha
xor
add
sbbb
cmovne
mov
sbb
mov
mov
test
daa
pop
push
add
cld
inc
inc
jle
call
inc
scas
sub
adc
in
addr16
xchg
repz
sub
daa
gs
lret
mov
shl
ret
les
aaa
rcrb
addl
mov
adc
int3
push
imul
mov
mov
jbe
popf
sub
push
xchg
sbb
xchg
fstl
loop
out
data16
mov
mov
lret
orb
sbb
in
xchg
xchg
and
push
lea
fs
int
pusha
push
mov
in
rcrl
xor
shl
imul
push
sub
inc
imul
daa
dec
mov
xchg
movsl
dec
mov
cmc
adc
pusha
std
adc
int3
sub
add
leave
push
fidivrl
imul
inc
jb
jno
std
lcall
adc
inc
arpl
repnz
sbb
subl
mov
loop
addl
cs
cld
sti
fimull
int3
mov
test
dec
jmp
mull
mov
jge
cmpsl
or
ficoml
pusha
jmp
mov
jp
mov
jle
xor
pop
jnp
repz
lods
cmp
pop
pop
dec
fistpl
das
scas
adc
mov
adc
aad
adc
jle
loopne
add
dec
mov
mov
mov
fwait
mov
add
outsl
lods
out
mov
cli
fidivrl
lcall
arpl
fistps
xchg
mov
adc
lea
adc
lods
inc
dec
sahf
pop
js
push
push
jo
and
add
fsts
mov
pop
ret
movsl
fs
cmp
dec
sahf
push
nop
loopne
cmp
inc
sbb
jg
cmp
jbe,pn
and
mov
and
xchg
or
xchg
and
push
ss
xchg
sub
call
dec
or
mov
lahf
cmp
sub
or
outsl
cmp
int3
icebp
jmp
dec
iret
or
xchg
adc
ficompl
mov
stc
movsb
jmp
cmp
mov
inc
mov
jl
dec
lret
daa
xlat
popa
movsb
out
sbb
fidivs
rorb
insl
repz
pop
jg
out
jnp
mov
xchg
daa
or
and
dec
pop
lret
adc
and
test
aaa
adc
sahf
loopne
cmpsb
xor
push
xchg
mov
push
fwait
fdivrl
sbb
push
sub
pop
lds
clc
popf
xor
in
cmp
addr16
cltd
sub
ret
imull
bound
jnp
loop
icebp
pop
fscale
adc
add
arpl
bound
xor
imul
int
inc
lods
out
pop
out
adcb
inc
xchg
imul
or
mov
or
sbb
sbb
sbb
aad
lret
push
enter
cmpl
pop
aaa
sbb
setb
lock
xor
aaa
cmp
dec
inc
xor
dec
cmp
mov
mov
cmp
xor
mov
and
cmpsb
test
xchg
ss
jmp
cmp
mov
adc
ljmp
push
xchg
iret
inc
clc
xchg
aam
hlt
jno
and
push
ja
jo
adc
jmp
mov
imul
push
jbe
stc
mov
int
fnsave
loope
imul
sbb
or
sub
shrb
nop
loopne
add
imul
out
and
xchg
sbb
dec
sbb
aad
add
mov
daa
pop
pop
mov
movsl
and
adc
dec
ret
movsb
outsb
sbb
les
sahf
cli
icebp
xchg
jo
push
cmc
push
repz
jmp
xchg
sbb
fbld
dec
pop
jl
stc
hlt
mov
icebp
scas
jbe
add
sbb
cmpsl
das
cld
fwait
bound
iret
sahf
mov
push
decb
inc
ljmp
ret
outsl
mov
shrl
fbstp
or
shlb
push
add
imul
addr16
mov
cmp
cmp
or
jmp
xor
push
out
mov
icebp
dec
push
testb
and
negb
add
cmp
and
out
jg
inc
fldt
ljmp
rcl
pop
xchg
fs
mov
add
sbb
jle
mov
mov
add
cmp
sub
popa
ds
adc
push
shlb
inc
stc
inc
pop
subb
shrb
add
jle
jno
subl
das
fdivs
in
jb
in
sub
push
add
push
scas
pop
lret
cmpsl
add
or
jne
sbb
stos
sub
cmp
xchg
mov
adc
sub
cmp
add
aas
fsubrp
push
push
pusha
aad
mov
cmpsl
sbb
push
xor
jecxz
xor
cmp
mov
sti
xorb
popf
pop
cmp
cld
clc
jp
mov
or
push
and
mov
jo
push
test
adc
dec
lret
mov
push
xchg
repz
dec
dec
call
inc
inc
call
mov
bnd
cmp
sti
mov
xorb
lret
jp
mov
lret
popf
add
addl
inc
inc
jle
test
cmp
dec
cmp
xchg
insl
lret
subl
xchg
imulb
and
dec
loop
scas
fcom
and
mov
mov
mov
cwtl
popf
popf
icebp
push
stos
jo
mov
jg
push
les
mov
cmpsb
pop
ds
sbb
imul
lcall
cmp
adc
add
ljmp
in
jns
xchg
je
mov
mov
idivb
mov
push
insl
mov
scas
leave
and
aad
sbb
add
or
arpl
xlat
xlat
arpl
enter
cmp
pusha
es
test
mov
shll
data16
mov
out
ljmp
stc
nop
sbb
test
inc
lcall
pop
sbb
lds
inc
insb
das
and
mov
lcall
or
mov
mov
sub
clc
cld
enter
mov
xor
xchg
push
roll
pop
cmp
shl
or
adc
rorl
sahf
mov
and
mov
xor
sub
push
dec
adc
add
push
das
testl
ss
adc
mov
les
hlt
dec
dec
jl
pop
ljmp
xor
daa
in
xchg
dec
mov
sub
cwtl
xlat
iret
fwait
jp
mov
fxch
pop
pop
ror
rol
or
adc
popf
loop
mov
imulb
or
test
add
test
call
je
testl
jns
mov
push
cltd
das
inc
in
xor
call
sti
lret
mov
xor
add
mov
loope
fcomps
add
fmul
sbb
sbbb
sahf
cmpsb
or
mov
adc
popa
mov
xchg
xchg
shlb
fwait
bound
ljmp
dec
aad
cmp
pop
pop
add
or
int
cwtl
cmc
mov
sbbb
aas
and
mov
add
xor
fldenv
rolb
imul
fmulp
pop
movsl
add
sbb
divl
pusha
push
mov
add
cmp
hlt
ja
cmp
mov
dec
outsb
dec
rcrb
enter
insb
adc
adc
test
xor
push
cmp
jno
cmpsl
sub
and
pop
adc
out
add
lea
fildl
insl
ret
jnp
enter
push
mov
cmp
enter
rorb
cmp
sub
mov
push
imul
hlt
mov
and
jg
jnp
pop
ss
pop
cmc
jae
mov
in
je
adcl
xor
pop
xor
stos
int
cltd
shl
push
push
cltd
mov
lods
xor
sub
in
test
add
mov
fmul
out
push
dec
js
or
jb
or
cwtl
outsl
scas
pop
testl
adc
pop
fimuls
jge
and
pop
ffreep
xchg
cli
aaa
and
cmp
ja
xchg
xor
dec
rcll
dec
jmp
dec
xchg
outsl
adc
inc
or
scas
jmp
push
lock
xor
mov
jmp
inc
xchg
mov
pop
inc
movsb
dec
xor
sahf
xor
rcl
cltd
stos
fcompl
push
outsb
adc
mov
ret
push
and
scas
xor
in
nop
bound
inc
out
call
or
push
mov
pop
add
adc
mov
das
imul
inc
outsl
loope
fwait
rorl
cltd
iret
mov
pop
cltd
lret
xchg
pop
and
jb
mov
mov
lret
xchg
jp
stc
inc
test
xchg
or
out
add
mov
add
stos
or
lods
scas
fwait
int
in
inc
mov
pop
mul
sbb
push
icebp
push
pop
jge
sbb
test
mov
stos
outsl
xchg
jns
mov
sub
xchg
push
push
lds
mov
mov
fnsave
pop
jmp
push
jo
push
push
addr16
ret
das
jge
leave
push
mov
cmpsb
jbe
mov
sbb
in
cmpb
mov
mov
or
test
cmp
xlat
pop
int3
jge
push
mov
fwait
popa
dec
outsl
cli
sbbb
mov
sar
rcrl
int3
cmp
aas
sub
jmp
icebp
or
mov
fdivrs
icebp
imull
lret
jns
int3
adc
xchg
jnp
xchg
sub
fwait
mov
mov
cmp
inc
jns
ret
mov
inc
xor
aad
lret
mov
imul
cmp
xchg
stc
in
add
xchg
xchg
sti
push
bound
cltd
lock
add
jp
lods
push
inc
xchg
fiaddl
pop
movzbl
ljmp
and
lock
mov
jno
fisttpll
jmp
gs
addr16
cli
inc
js
loope
out
lcall
fcomip
cmpsb
and
xor
outsb
sbbb
sarb
xchg
ret
and
mov
jb
push
jb
inc
pop
cmp
xlat
fwait
mov
push
fdivrs
int
or
iret
icebp
out
pop
xor
loop
jl
push
aas
lds
roll
push
push
and
add
sub
fsubrs
mov
nop
sahf
mov
mov
mov
les
int3
arpl
stc
inc
cmpsb
test
cld
out
sarb
and
pop
mov
pushf
imul
pop
mov
loop
test
jnp
and
push
dec
sbb
add
or
das
adc
popl
in
mov
jmp
jb
sbb
dec
cmp
adc
jb
mov
sub
cwtl
test
jmp
ret
mov
mov
xlat
les
xchg
inc
ror
cltd
stc
cmp
jno
sarl
mov
push
ds
xchg
mov
xor
mov
outsl
mov
pop
cltd
lahf
lock
not
mov
jecxz
fldenv
add
mov
insl
and
enter
pop
jmp
in
xchg
mov
mov
cmp
dec
gs
lds
arpl
push
lret
mov
jae
rorb
jge
and
mov
aaa
subb
pushf
mov
dec
mov
cmp
push
jle
test
into
mov
lcall
sbb
pop
js
mov
mov
aad
outsb
lea
inc
add
movsb
push
js
lret
loopne
mov
repz
jo
iret
jae
cmp
inc
or
xchg
jb
fwait
jg
test
mov
xchg
cmpsb
adc
add
xor
enter
out
stos
ret
andb
add
push
nop
fiaddl
add
sahf
fwait
xchg
stos
adc
cmp
lret
jbe
loop
pop
add
imul
push
sub
xchg
out
xchg
inc
jg
adc
mov
push
cld
dec
xor
cmp
ja
pop
test
adc
mov
in
jo
sub
into
push
movsl
push
mov
xchg
ret
insb
shlb
leave
xchg
faddl
cli
jne
xlat
jo
mov
and
adc
pop
xor
enter
xchg
pusha
rorb
nop
pop
gs
xor
jl
pusha
sbb
cmp
inc
dec
mov
jle
xchg
test
cmp
xor
fldenv
fnstsw
popa
push
inc
xchg
popa
call
testl
xchg
fbstp
push
inc
sahf
scas
ret
pusha
int3
mov
sub
fisubrl
shlb
in
add
xchg
mov
mov
mov
aad
sbb
loopne
aam
mov
inc
cmpl
jecxz
xor
sub
push
daa
ja
jns
inc
lret
cmp
sub
fstpt
imul
push
xor
divb
sbb
fs
xor
bound
in
push
loope
adc
sbb
jns
popa
jp
jb
mov
cmp
cld
cld
jecxz
or
lea
imul
cmp
cmp
or
add
adcb
xor
adc
and
das
mov
je
push
leave
mov
ds
push
lret
outsb
faddl
cmp
repnz
sbb
inc
dec
and
jle
jns
mov
pop
mov
xchg
mov
cmpsb
inc
cs
pop
inc
add
dec
fcmovnbe
sbb
adc
jnp
sbb
add
or
mov
jnp
push
adc
push
push
cli
mov
mov
jae
not
pop
outsb
adc
leave
mov
or
pushf
dec
adc
insl
mov
xlat
inc
mov
xor
out
xchg
mov
ret
aam
mov
iret
pop
push
shrl
pop
and
xchg
jl
lds
push
xchg
jbe
insl
mov
lahf
mov
repz
test
inc
push
fdivrs
mov
add
push
pop
or
leave
out
sbb
ja
and
push
test
loopne
mov
in
xchg
dec
fwait
rorb
les
mov
mov
mov
aas
sbb
mov
pop
or
rorb
mov
and
arpl
and
aam
out
pop
xchg
mov
aas
pop
sbb
pop
in
xchg
aam
mov
xor
mov
add
pop
add
in
cmpsb
or
fwait
out
sbbl
fcoms
shl
jns
sbb
sbb
dec
mov
jns
push
dec
push
ja
mov
cmp
cli
dec
int
xchg
or
sub
sbb
push
sarl
sbb
lea
mov
xor
mov
ret
dec
testl
mov
sub
jp
loope
cmp
fldl
cs
inc
pop
gs
addr16
shl
sbb
xchg
push
les
cmp
iret
cmp
cltd
ret
nop
scas
sbb
pop
je,pn
push
xchg
out
and
outsb
cltd
fmuls
xor
mov
rcrb
sbb
sahf
adc
shl
mov
mov
add
jge
cli
jmp
sbb
fadd
dec
push
jbe
cmpsl
fucomi
or
pop
push
int
sbb
cmp
adc
sub
add
sub
imul
xchg
fmul
test
xor
sbb
inc
psubw
dec
inc
xor
sbb
popf
imul
sub
iret
aad
clc
imul
push
pop
ret
stos
push
dec
pop
js
or
into
mov
cmc
push
dec
jno
lahf
xor
mov
mov
push
cltd
jmp
fsubp
test
jecxz
cmp
fadds
dec
dec
adc
outsl
xor
inc
mov
xchg
or
jbe
sbb
sub
stos
inc
orb
ror
loope
roll
cltd
scas
je
int
mov
test
test
test
lds
outsb
and
and
addr16
aas
popa
rcrb
jg
mov
adc
jmp
jle
mov
push
in
loopne
sbb
int
adc
in
js
fsts
iret
pop
lds
adc
sbb
xchg
imul
xchg
test
or
inc
fcomip
shl
lock
rcll
cmp
outsl
dec
add
inc
cmp
or
nop
jge
repz
movsb
inc
jmp
fdivs
mov
sti
lret
jbe
in
sarb
sar
xlat
jns
out
lcall
loopne
leave
frstor
and
add
lcall
and
cmp
sbb
aam
and
aam
inc
aad
int
xlat
cs
addr16
in
stc
aam
roll
mov
ret
lods
lahf
aas
lock
ja
and
xor
enter
and
xchg
cli
inc
mov
and
lcall
shrb
dec
inc
xchg
xor
xlat
mov
dec
inc
mov
and
mov
push
mov
xlat
inc
jnp
adc
ret
pop
push
out
lcall
inc
and
cwtl
inc
sub
add
cmp
sbb
mov
inc
inc
shlb
addr16
xchg
repz
push
lds
mov
and
int
pop
fsubl
inc
xchg
sbb
xchg
fadds
cmpsl
loope
dec
push
lahf
push
aaa
sbb
xchg
adc
pop
rcrl
and
inc
jnp
dec
cmpsb
in
or
hlt
cmp
mov
add
or
inc
sub
jne
cltd
jp
fisubrl
movb
fsubr
mov
out
push
outsl
loopw
add
xchg
and
fidivrs
loop
sbb
in
push
dec
iret
fcoml
inc
imul
pop
push
insb
add
mov
add
mov
jmp
mov
xchg
push
mov
shl
jb
mov
mov
out
sbb
lcall
mov
dec
cltd
add
flds
es
jnp
test
mov
xchg
repz
stos
scas
xor
push
fisttpll
into
fisttpl
sbb
imul
cwtl
push
ret
mov
les
sub
inc
and
addr16
dec
rorl
bound
or
aam
xor
and
repz
or
lahf
je
sbb
mov
fsubrl
outsb
and
cmp
mov
xchg
cs
mov
mov
jne
out
xchg
in
repz
mov
insl
adc
add
jmp
setp
sub
lret
test
mov
mov
cwtl
fdivp
outsb
daa
iret
adc
fcompl
sbb
stc
sub
mov
fdivs
cld
scas
ds
xchg
or
pop
js
mov
pop
sub
sbb
repnz
ret
fiadds
mov
mov
shll
in
out
cmp
lea
mov
cmp
mov
xchg
das
pop
popa
adc
adc
inc
mov
xchg
dec
xchg
add
pusha
mov
sub
jne
xor
and
ss
lahf
sti
mov
test
cld
dec
jbe
cmp
mov
testb
push
add
ret
cmp
out
mov
scas
cmpsb
sub
repnz
sub
push
pushf
add
out
fistl
dec
cli
jbe
and
outsl
jg
cmpsb
mov
adc
sub
xlat
xorl
bound
xorb
sahf
jnp
jg
mov
jns
dec
xor
rcrl
adc
out
ss
xor
andl
dec
pop
mov
stos
lcall
pop
dec
xchg
ret
pminsw
fwait
aaa
sub
or
scas
lret
sub
xchg
add
sub
inc
mov
inc
xor
jmp
xchg
lds
mov
adc
pop
cmpl
sub
push
int3
out
cmp
pop
out
push
mov
jne
dec
std
and
xchg
mov
mov
add
popa
jle
insb
add
shrl
fcomps
out
sbb
and
movsl
mov
sbb
inc
arpl
rcrb
aad
xor
adc
xchg
jne
loop
aas
xchg
or
mov
aas
push
xor
subb
dec
cltd
pop
movsb
sub
aas
in
and
jno
jne
je
push
add
aaa
cltd
add
out
xchg
mov
and
pusha
icebp
cmpsl
jmp
cmpsb
cltd
cmp
jle
add
jle
push
jbe
sbb
ljmp
insb
mov
sbb
pop
xor
rorb
aad
loope
add
popa
mov
in
xchg
push
xchg
int
cs
xchg
inc
in
push
push
mov
cmp
jb
je
test
jl
or
loopne
leave
adc
das
xlat
or
nop
popf
pop
push
dec
out
fiaddl
lds
pop
rclb
pop
mov
rorb
pusha
jbe
loopne
lock
movsb
fisubrs
xor
es
stos
add
xlat
aaa
and
les
push
call
push
jecxz
xor
pop
jns
test
jecxz
mov
mov
mov
mov
inc
jle
sbb
mov
data16
gs
inc
jmp
push
dec
test
js
popa
mov
sbb
xor
mov
cmp
mov
loopne
xchg
xor
cld
sbb
jno
or
or
lahf
inc
stos
stc
in
sti
aad
mov
push
pop
xor
or
scas
cld
cmpsl
jb
cld
inc
sahf
push
lret
out
xor
add
or
mov
ljmp
sbb
jbe
pop
xchg
inc
add
in
js
dec
push
push
xlat
or
or
mov
mov
sbb
push
add
test
movsb
jp
loop
mov
loop
dec
xchg
dec
jge
aam
pop
inc
mov
shlb
rol
and
mov
cmc
mov
dec
lods
pop
xchg
inc
pop
bnd
rep
outsl
or
aas
and
pop
fisubs
stc
in
and
test
mov
mov
ljmp
movsl
ficompl
mov
pushl
add
nop
or
test
push
dec
fdecstp
iret
bound
xlat
clc
int
lock
aas
clc
mov
out
aas
push
jl
xchg
lcall
in
sub
das
dec
gs
mov
dec
push
push
inc
aam
xor
xchg
jnp
nop
push
cld
arpl
test
xchg
mov
testl
std
and
lds
cmc
mov
mov
inc
je
repnz
out
mov
push
les
aad
or
and
cmp
movsl
mov
mov
arpl
push
or
jo
sbb
js
loope
push
insb
pop
sbb
loope
je
add
aaa
cmp
add
scas
stos
pmovmskb
adc
in
inc
cwtl
movsb
and
ret
xor
dec
aas
adc
sbb
push
mov
adc
imul
lock
adc
jl
mov
in
sub
push
adc
das
popa
mov
mov
cltd
xor
cmp
movsb
and
adc
aas
das
ret
cmp
mov
push
int3
jmp
xor
jns
fnstcw
nop
insb
push
icebp
imul
ret
jecxz
mov
ret
mov
cmp
les
jne
loopne
insb
outsl
adc
leave
verr
inc
cmp
mov
jnp
subb
std
cmp
adc
roll
add
js
loope
test
mov
jo
sub
xor
mov
fucom
dec
cmp
sub
cmp
push
clc
pushf
out
leave
push
rcrl
jns
inc
flds
or
xchg
xorl
lcall
shlb
pop
inc
dec
mov
dec
mov
data16
xor
pop
inc
movsl
dec
and
out
mov
and
push
shlb
mov
pushf
dec
in
lods
jns
pop
cli
in
orb
outsb
test
adc
filds
sahf
lret
sahf
rolb
sub
xor
ljmp
stos
test
push
imul
adcl
xchg
pushf
mov
lds
pop
repnz
pop
xchg
das
inc
sub
xchg
test
or
dec
outsl
ja
push
sub
inc
lahf
mov
filds
cs
pop
or
sbb
adc
jg
xchg
or
fcmovnbe
xchg
inc
ja
lret
and
mov
fwait
loop
mov
fmuls
cld
gs
jns
sub
repz
ret
jl
push
out
push
sbb
inc
xchg
pop
sub
sbb
mov
xchg
push
icebp
cmp
outsl
call
cmp
ljmp
inc
push
jge
data16
lds
aam
mov
and
insb
es
mov
add
cmp
add
cmp
shrl
lods
or
into
jle
lods
loope
cmp
push
xchg
jmp
int3
or
mov
mov
xor
jp,pn
xorb
mov
pushf
insb
or
xor
mov
pop
daa
scas
inc
jb
add
mov
popf
xchg
push
xor
test
sbb
dec
in
cltd
jne
test
mov
adc
pop
lods
cmp
jae
decb
sub
enter
xor
push
push
fdivrl
adc
repz
push
movsl
loop
sbb
inc
push
cld
cs
popa
inc
add
and
xor
mov
pushl
and
sbb
icebp
cmp
jns
imul
mov
mov
popa
mov
ret
hlt
mov
mov
pop
inc
es
into
dec
mov
add
mov
push
into
inc
jns
ficoml
mov
inc
mov
mov
sub
pop
dec
shl
ret
pop
xor
xchg
pop
xchg
insb
mov
and
test
pop
jb
adc
xchg
and
or
shll
fimull
add
bound
mov
and
ljmp
mov
dec
push
cs
out
in
push
push
sub
pop
push
js
sbb
inc
cmp
lock
xor
cmp
loope
jg
xchg
pusha
mov
ja
jmp
mov
or
xor
or
cmpsl
xor
adc
sbb
or
jmp
or
clc
xchg
xor
shrl
jns
or
rorb
das
in
movsb
mov
mov
xor
pop
fmuls
shlb
push
idivb
xor
jae
jmp
xchg
push
out
outsl
mov
jno
sbb
push
in
aad
add
jecxz
out
and
int3
jne
fsubrs
stc
es
xchg
pop
mov
gs
push
xchg
in
push
int
push
or
out
iret
mov
jbe
mov
test
insl
lods
sti
xor
and
sbb
sub
sub
cli
ja
mov
push
ds
cltd
out
sbb
insb
mov
int
push
inc
sub
inc
cmc
pop
out
fistpl
xor
testl
add
inc
xlat
mov
dec
sti
frstor
adc
and
insb
in
push
fsubrs
or
mov
dec
xor
sahf
mov
mov
inc
js
movl
sbb
cmpsl
xchg
orl
sub
inc
adc
rolb
aas
sub
mov
ljmp
xor
cmpsl
in
in
mov
stc
and
fsubrp
sbb
pop
jge
xor
mov
movsb
inc
fmull
jne
add
call
loope
mov
xchg
imul
mov
stc
cmp
mov
test
inc
and
add
gs
loopne
add
xchg
inc
loopne
ljmp
roll
cmpsl
mov
loopne
faddl
dec
sbb
enter
inc
sub
idiv
cmp
add
mov
cmp
cs
sbb
fnstcw
insl
sub
js
enter
xchg
adc
call
mov
fsubrs
xchg
idivb
adc
out
xor
mov
and
cmp
cmc
scas
into
pop
or
jg
xchg
pop
mov
andb
aaa
fildl
iret
jmp
rcll
jno
xlat
mov
lcall
push
adc
jae
clc
daa
not
and
cmp
fsubl
cmp
movsl
adc
cmpsb
repnz
sti
and
or
push
into
and
jle
insb
mov
mov
fcmovnu
cwtl
inc
fwait
ss
mov
cld
imull
lret
adc
insb
stc
stc
mov
call
sub
xchg
mov
cmpsl
add
sub
or
and
bound
stc
mov
xchg
fcompl
cmp
xchg
sbb
add
jbe
movb
rcll
pop
fwait
ljmp
movsl
loopne
bound
sar
fcmove
xchg
fidivrl
jbe
sub
mov
dec
lods
loopne
and
inc
mov
mov
mov
xchg
cmp
repz
gs
push
xchg
or
out
and
negb
and
sub
insl
fwait
lahf
jmp
data16
mov
flds
arpl
mov
xor
push
cld
adc
and
push
add
mov
mov
in
lcall
popa
ja
into
mov
xchg
sub
dec
aam
hlt
stos
sysret
push
sbb
sbb
icebp
or
or
int
adc
addr16
mov
xchg
stc
xchg
out
mov
mov
ja
adc
cmc
mov
mov
jmp
dec
mov
cmp
push
add
idivl
daa
pop
lahf
dec
lds
xchg
lods
jno
divl
fstl
je
imul
jae
sbb
movsl
daa
inc
push
pop
pop
inc
sub
xchg
out
sub
testl
adc
lock
shlb
rcr
mov
xchg
div
mov
xor
ror
cmp
fbld
je
sbb
mov
stos
mov
into
sbb
sub
addr16
rol
cmp
cld
push
out
scas
stos
xor
movsl
fdivs
stc
mov
xorl
and
aas
roll
sbb
mov
or
lods
sub
xchg
xchg
js
addr16
mov
std
aad
and
jne
movb
pushf
stos
sbbb
or
xchg
push
dec
cmp
ss
add
fisubl
popf
jnp
mov
cltd
aam
jbe
mov
xacquire
sub
adc
clc
clc
and
rcll
jge
pusha
cwtl
dec
lea
arpl
fdivl
into
and
fisttpl
fisubrs
xlat
mov
das
test
fisubs
shll
xorb
add
inc
add
shr
out
pop
sbb
into
sbb
add
or
xchg
and
leave
lret
mov
or
cmc
subl
repz
ds
loop
or
cmp
repnz
adc
inc
lahf
jbe
adc
movsl
and
pop
add
or
sbb
xchg
jecxz
adc
add
lods
sbb
shrl
mov
push
lea
mov
inc
pop
stos
fldl
pop
insb
or
sarb
xchg
push
pop
into
scas
nop
insb
or
push
daa
xchg
dec
in
jmp
inc
dec
push
and
lahf
sub
mov
mov
mov
pushf
push
dec
addl
jmp
and
sub
lods
lret
add
fs
jecxz
jb
and
or
imul
loopne
jb
lcall
lds
inc
repz
inc
sub
mov
stos
sub
pop
jge
ds
and
test
cmp
ret
push
adc
mov
cs
test
push
jg
push
testl
idivb
add
sub
flds
xchg
addr16
mov
sbb
in
xchg
hlt
push
popa
cmc
fidivl
push
das
aaa
rol
jmp
icebp
repz
lods
stos
jo
outsb
insl
aas
je
adc
movb
jg
adc
adc
scas
and
or
jl
andl
push
loop
inc
scas
lcall
pop
scas
gs
jo
loop
stos
stos
cmpsb
mov
mov
shrb
sti
lahf
je
test
lahf
ret
mov
or
cmp
filds
neg
stos
das
in
mov
aas
xchg
dec
push
clc
mov
popa
test
int
into
xor
sub
in
mov
pop
mov
dec
data16
je
aam
fcoms
nop
in
push
mov
dec
dec
adcb
cwtl
and
pop
inc
inc
loope
mov
nop
call
scas
cli
nop
fisubs
xlat
xor
or
xchg
xchg
pop
xor
ds
pop
dec
iret
test
enter
movsb
xchg
dec
lret
xorl
add
sbb
andl
jmp
hlt
mov
enter
xchg
or
cmp
ljmp
je,pn
out
js
xchg
insl
sub
repnz
cmp
or
mov
jnp
mov
in
xchg
and
inc
pop
and
dec
add
jmp
loopne
and
pushl
dec
mov
cmp
sahf
add
mov
xchg
lret
add
data16
mov
pop
out
scas
adc
xchg
jne
mov
xor
shlb
sahf
jp
cld
xor
mov
add
push
push
cld
out
stos
inc
cmp
fcoms
push
xor
cs
jmp
notb
cmp
mov
cwtl
adc
lahf
lds
call
not
inc
xor
jbe
je
adc
inc
popf
arpl
sub
dec
mov
pop
movsl
xchg
push
cs
inc
xchg
mov
push
cltd
or
loope
inc
repz
pop
ror
fs
pop
data16
dec
mov
mov
ss
or
mov
inc
in
dec
jle
cmp
test
mov
stc
fwait
xor
lods
mov
and
push
and
popa
mov
clc
leave
aam
into
inc
jne
faddl
shrb
xchg
jbe
movsb
sub
popa
int3
mov
and
nop
jnp
les
xchg
enter
push
or
push
leave
lods
and
push
ja
xchg
lret
and
imul
inc
es
imul
test
dec
push
test
push
add
mov
mov
and
or
inc
movsl
sub
push
popa
std
inc
enter
mov
xchg
ficompl
or
adc
mov
dec
xchg
xor
mov
insb
jb
repnz
cmpsb
add
xchg
sub
ljmp
negb
data16
mov
loopne
push
dec
outsb
sub
in
sub
sub
sub
add
jg
pop
icebp
aas
pop
fisttpl
push
inc
mov
jle
sub
lock
insb
mov
dec
sahf
pop
negb
and
mov
jmp
cmp
inc
lea
das
push
nop
cltd
cmp
enter
pushf
pop
adcb
int
insl
outsl
imul
mov
inc
cld
iret
in
and
lea
mov
or
and
outsl
jnp
push
jns
pop
sub
imul
xlat
push
xchg
arpl
pop
sbb
lods
push
pop
xor
mov
data16
push
sbb
fwait
adc
arpl
clc
sti
push
add
sub
push
outsl
mov
iret
sub
mov
rcll
outsl
daa
lret
imul
xor
sub
inc
hlt
sbb
mov
lret
aam
push
loope
push
mul
sbb
push
jae
lret
int3
xor
pop
pop
xchg
push
loope
adc
cwtl
pushf
inc
shrl
fisttpll
inc
andb
fcoms
inc
xchg
popa
jle
jns
mov
mov
mov
jecxz
out
sub
xchg
stos
xor
mov
and
or
fstp
loop
pop
mov
jecxz
add
push
hlt
lods
jb
cmpsl
cmp
mov
fildl
xchg
jg
aad
and
stc
scas
jmp
jo
jg
ret
dec
sbb
mov
dec
xor
mov
jbe
sbb
push
lock
jge
jmp
or
stc
adc
lds
jmp
test
sbb
ja
push
iret
cltd
inc
mov
lret
jp
mov
fcoml
imul
dec
xor
pop
call
std
or
mov
jmp
imulb
jns
je
loopne
jl
loope
or
cmp
sub
test
mov
pop
cmpsb
out
pop
icebp
jb
jmp
adc
xchg
nop
ficompl
dec
icebp
inc
gs
shrl
push
lock
pop
pop
stos
xorl
rcrl
pusha
sbbb
stc
or
mov
adc
add
out
adc
dec
dec
pop
and
or
fprem
or
outsl
aad
mov
mov
popf
es
xchg
shlb
or
inc
jne
in
scas
outsb
adc
xor
nop
hlt
jb
pop
bound
mov
hlt
aaa
xchg
mov
pusha
or
test
mov
in
sbb
movsb
jae
mov
orb
jnp
lods
ret
insb
jmp
dec
sbb
call
enter
imul
adc
adc
lret
movsl
dec
xchg
mov
jns
lcall
xchg
mov
push
dec
add
jp
aaa
fcomi
test
scas
mov
ss
test
add
jbe
push
outsb
add
divb
test
dec
outsl
mov
repnz
fwait
jle
scas
ljmp
cli
jecxz
mov
add
and
pop
push
enter
fwait
xchg
mov
dec
popf
cmc
cwtl
lea
idivw
push
jnp
mov
je
fisttps
bound
xor
mov
mov
and
aam
add
add
pop
gs
es
and
inc
leave
push
adc
aas
rcll
cmc
or
mov
jecxz
pop
inc
dec
mov
mov
popa
aad
aam
push
loopne
stc
pop
mov
adc
dec
insb
stos
into
and
xor
push
jns
sti
pop
mov
js
xchg
push
mov
fst
push
mov
mov
or
scas
or
outsl
xchg
inc
mov
jne
test
jb
jmp
insl
jle
pop
or
adc
fcoml
repz
push
setle
out
loop
gs
test
push
loope
xchg
pop
std
in
lods
xorl
les
inc
add
out
push
shlb
sbbb
push
cld
jo
xchg
dec
pop
repnz
in
lret
cmpsb
inc
inc
out
inc
mov
pushf
push
sbb
movsb
sbb
rorb
mov
xor
fstps
xor
out
lret
sbb
pop
jb
daa
sub
jb
ss
push
js
jno
inc
inc
pop
leave
mov
aad
stc
shl
xor
xchg
mov
pushf
repnz
es
mov
cmp
nop
mov
mov
sbbb
popa
test
jg
pop
sub
lret
fdivl
xchg
mov
lcall
xor
jg
ja
push
in
aad
sbb
pop
mov
dec
push
sbb
and
xchg
sub
rcrb
mov
fnsave
dec
xchg
adc
imul
syscall
dec
lcall
mov
lea
sti
jnp
dec
nop
data16
fildll
pop
sarl
xchg
movsl
jp
or
mov
xchg
fwait
add
cld
pop
jne
or
ljmp
pop
adc
add
pop
adc
add
dec
jo
int3
adc
and
and
ret
imul
xor
js
inc
mov
push
and
mov
fs
nop
repz
movsl
xor
cmpsb
xchg
movsl
mov
lcall
cmpb
popa
insl
popf
mov
shlb
add
jnp
test
rcrl
adc
dec
lds
popf
outsb
sub
push
out
sub
das
adc
sbb
xor
mov
xchg
lret
aaa
and
clc
pusha
xor
add
int3
xchg
js
sbb
lahf
dec
dec
rcr
flds
repnz
imul
mov
mov
inc
pop
jp
shl
pop
and
add
or
das
neg
stos
add
loopne
orl
rcl
adc
leave
add
dec
fidivs
and
jne
push
fcmovu
fistpl
mov
pop
aam
js
data16
pop
lock
cltd
sbb
sub
hlt
mov
js
icebp
mov
fistpl
xor
or
loope
or
mov
xchg
stc
cld
fidivl
jle
jle
jecxz
lret
cmp
ficompl
push
out
aam
jb
fstpl
add
and
or
mov
stos
call
mov
push
mov
sarb
int
scas
mov
jo
cmp
rcrl
out
sub
fmul
dec
pop
pop
mov
in
roll
fnstsw
inc
rorb
dec
inc
icebp
enter
out
mov
xchg
les
mov
or
and
insl
adc
mov
xchg
cmp
adc
add
loopne
aaa
adcl
cli
repz
pop
adc
inc
sub
sbb
add
stos
shll
jne
out
mov
sti
add
mov
mov
addr16
add
inc
out
or
dec
add
sbb
rclb
gs
add
xor
lods
stos
stc
cmp
imul
mov
inc
add
in
out
insl
fmul
xchg
sub
sahf
out
mov
sarl
mov
jg
push
hlt
shl
lods
stos
push
popa
sub
shl
xor
mov
cmp
ljmp
inc
pusha
dec
pop
mov
les
cld
add
add
dec
sub
mov
inc
not
pop
xchg
pop
dec
addr16
fcmovb
add
mov
sub
or
dec
rcl
repnz
stc
insb
cmp
xchg
inc
inc
fstp
jge
jl
push
push
fstl
add
ret
jbe
jnp
xlat
mov
push
xor
out
test
arpl
pop
and
mov
xor
test
inc
xchg
adc
out
or
sbb
cmp
cmp
data16
dec
leave
cli
cmp
test
xor
lret
lea
mov
lret
or
and
jmp
aam
cmp
data16
mov
es
fcoml
pop
lods
stos
inc
push
adc
ret
in
inc
pop
out
repnz
aam
enter
mov
movsl
pop
jle
mov
lret
push
popa
adc
xchg
sbb
mov
xchg
push
aam
sub
sub
shll
push
repnz
rcll
jb
decb
or
xor
stos
jae
and
fsubrs
stc
shrb
pop
cwtl
mov
jns
mov
xchg
mov
sbb
inc
xchg
xchg
mov
add
xchg
push
in
insl
ficompl
nop
mov
or
or
test
dec
mov
sub
loope
pop
inc
jecxz
mov
test
xchg
out
xlat
inc
push
or
pusha
pop
fidivs
in
fs
out
addr16
xchg
fsts
jl
cmc
cmc
lea
add
dec
cmpsl
lea
pop
loope
aas
jg
xchg
lea
inc
sub
insl
and
and
inc
shrb
adc
divl
sub
and
adc
mov
sbb
jo
sbb
shr
in
scas
ljmp
loopne
ja
add
adcl
cmpsb
cltd
adc
rcrb
mov
cmpsb
jno
das
call
and
mov
js
add
lahf
jo
mov
inc
lret
lret
sub
fcmovbe
and
cltd
rcrl
adc
daa
push
loope
imul
push
orb
sbb
xorl
pop
or
pushf
pop
cwtl
dec
fldl
push
sub
add
scas
ret
stos
sbb
fwait
in
rcl
fldl
stos
lret
mov
cld
sbb
dec
cld
xchg
pop
std
lret
inc
daa
fwait
pop
mov
int
aas
rorl
add
sub
adc
js
cwtl
int3
mov
inc
pushf
lahf
sbb
ror
push
testl
adc
movsb
and
setnp
jmp
test
fwait
daa
sbb
js
lahf
jl
mov
pushf
pop
in
sub
xchg
fldt
out
add
les
out
les
sbb
into
xlat
fucomip
dec
and
mov
push
jmp
cs
or
mov
jae
repz
and
or
sub
iret
je
mov
pop
mov
out
cmp
or
push
sahf
sub
icebp
jne
loop
pop
sahf
stos
int3
xchg
nop
dec
ret
push
out
push
test
fsub
negb
orb
stos
rcll
es
in
mov
shlb
sub
xchg
jmp
adc
cmpsb
call
std
call
int3
sub
mov
xchg
mov
mov
insb
and
mov
cmp
xchg
repz
test
jg
xorb
das
rclb
cld
int
push
cmpsb
push
push
fcomps
adc
sbb
mov
pop
cmp
push
ds
mov
fsubl
jae
cmp
add
pop
xchg
jge
sbb
nop
repnz
rcrl
pop
in
out
mov
sbb
outsl
mov
xchg
out
fisubrl
jnp
inc
lods
sbb
testb
mov
add
popf
inc
mov
jo
mov
pushf
add
aam
sbb
scas
dec
mov
mov
outsb
mov
daa
inc
xchg
xor
sbb
mov
or
and
dec
mov
ja
mov
scas
loop
in
filds
add
rclb
mov
imul
jl
movsb
cmc
cltd
jge,pt
sti
call
out
test
jne
jp
or
xor
movl
call
aam
scas
jae
jmp
pop
mov
insl
mov
lods
sub
jb
data16
ja
and
ds
cmc
les
pop
push
shlb
xchg
pushf
and
jp
add
pop
in
xchg
jmp
popa
mov
mov
outsb
clc
xlat
lods
or
jecxz
test
aam
rorb
pop
sbb
add
ss
sbb
ljmp
lock
jl
sub
pop
sub
push
push
lock
push
movsl
movsl
rcl
pop
out
push
dec
bound
pop
out
mov
out
and
mov
ds
add
aad
popf
sahf
xchg
andb
push
and
popf
in
repz
lods
jge
jb
xor
daa
jl
lcall
xchg
adc
inc
stos
lret
cmp
mov
xor
mov
adc
imul
dec
lods
ret
cwtl
or
jge
add
imul
or
xor
aas
xchg
test
bnd
rorb
pop
dec
xor
mov
outsb
insl
mov
xor
cmpsl
jge
roll
in
add
xchg
arpl
mov
xor
sbb
mov
xor
cmc
or
inc
fdivl
jg
hlt
imul
sub
rorb
stc
lods
shrl
and
and
sub
pop
sub
das
cli
jmp
push
test
loope
data16
repnz
xchg
popf
inc
mul
add
jo
loopne
movsb
shrl
int3
fucomp
dec
arpl
mov
lods
dec
imulb
jle
mov
rolb
adc
adc
xchg
jp
cmovs
or
rolb
cmpsb
ljmp
lock
mov
inc
nop
icebp
test
mov
into
shr
push
inc
pop
cmp
loop
scas
pushf
out
or
cmp
jg
movsb
jg
std
ja
stos
mov
out
outsb
sbbl
dec
fst
rol
lods
sbb
addr16
jge
push
mov
ja
jbe
push
cmc
mov
scas
rcrl
mov
ret
sbb
add
pop
loop
lret
push
pop
rorl
xchg
out
cmc
dec
inc
loop
outsb
andb
jno
repz
iret
fcom
push
sbb
xchg
arpl
xor
sbb
stos
fnstcw
push
fcmovnu
pusha
test
popf
ljmp
mov
xchg
cmpsl
mov
jecxz
inc
mov
pop
sbb
mov
xchg
dec
addr16
iret
or
sub
mov
push
aad
jl
jg
adc
adc
mov
les
repnz
mov
or
adc
fildl
lods
cmp
imul
push
punpckldq
push
mov
mov
jle
add
test
clc
jns
shr
ret
scas
in
ret
call
nop
push
cmpsb
cmp
cmpsb
dec
in
jl
xchg
fstl
mov
mov
sub
scas
push
negb
sbb
mov
dec
sbb
jl
xor
in
addr16
jmp
cmovge
out
jns
test
es
popf
inc
pop
sub
roll
mov
test
push
sub
jbe
sbb
cld
call
sbb
repz
dec
cmpsb
aaa
jae
ds
pushf
jge
xor
in
jne
loop
lahf
xor
jae
mov
pop
or
and
lcall
daa
pop
scas
jecxz
jo
in
in
jae
bound
sub
jns
or
xchg
mov
mov
add
dec
mov
mov
jno
test
ds
xchg
adc
adc
jle
sbb
mov
push
pusha
jne
mov
in
lahf
lahf
gs
dec
sbbb
push
lock
data16
pop
outsl
mov
inc
jno
sub
enter
mov
scas
stos
or
push
pop
mov
movsb
idivl
cld
inc
insb
mov
fiadds
lret
jmp
inc
rolb
ffree
cmp
dec
and
push
lods
mov
jp
sahf
push
outsb
push
jg
xor
sbb
icebp
pop
and
cs
sub
inc
int
fnstenv
divb
inc
dec
fwait
mov
nop
daa
mov
mov
inc
mov
aaa
xchg
sti
out
mov
xor
adc
loop
sbb
pop
rcrb
mov
lret
adc
dec
xor
pop
or
fstps
aad
cmp
sbb
sbb
icebp
pop
movsl
adc
xor
mov
add
and
clc
mov
stc
dec
aam
repnz
leave
std
mov
sbb
imul
lret
loope
stos
add
popf
jge
jle
dec
mov
scas
pop
mov
xchg
dec
fadd
iret
mov
cmc
in
fcomip
mov
inc
in
jae
fadds
xlat
sub
sar
rclb
push
pop
ret
jno
ret
and
jo
sbb
jecxz
test
push
add
push
stos
popf
in
cld
arpl
outsl
adc
jl
sbb
fstpl
xchg
or
mov
and
gs
cmc
cmp
pop
orb
fwait
push
or
stos
mov
clc
push
decb
fildll
fs
outsb
xor
repnz
push
stos
out
lret
push
bound
xchg
rep
stos
push
and
cli
cmp
xor
ljmp
mov
gs
add
addr16
insl
mov
mov
add
movsb
jge
cmp
xor
jno
orb
cmpsl
sub
scas
out
std
mov
push
xchg
lock
or
pushf
pusha
imul
jno
sbb
mov
ficoms
pop
and
or
je
das
xchg
and
dec
jge
mov
aam
lock
test
cmc
or
stos
sbb
cs
pop
mov
rolb
lcall
shl
mov
mov
lods
scas
les
xchg
push
mov
frstor
mov
pop
into
add
loop
push
and
inc
jecxz
popf
dec
xchg
es
cltd
test
ja
test
aad
adc
pop
xchg
jl
push
sbb
lahf
fidivrl
pop
out
xor
fs
aaa
cmp
sahf
xchg
cmpsl
ljmp
cmp
stos
jo
cmp
push
test
mov
jno
add
push
ljmp
pop
push
fisubs
shlb
rcrb
mov
push
cmpb
popf
ljmp
mov
xchg
xor
dec
add
inc
in
push
inc
shlb
js
sub
adc
add
lret
push
mov
pop
dec
sbb
les
std
xor
inc
sub
out
dec
jmp
pop
mov
je
hlt
pop
dec
lds
sbb
aam
shll
cmpsb
imul
dec
js,pt
jp
lods
data16
in
jl
mov
xchg
or
setnp
iret
mov
add
push
call
lds
push
sahf
xchg
loope
in
xor
loop
out
or
repnz
insl
rol
mov
mov
outsl
push
adc
and
dec
cmp
push
adc
cwtl
push
mov
add
loope
leave
sbb
out
cmpl
int3
mov
cmp
sub
lea
inc
aaa
jl
push
mov
xchg
pushf
stos
jmp
cmp
mov
pop
lahf
mov
cmp
ljmp
push
mov
push
mov
push
out
push
inc
in
movsb
sarb
cmp
push
fidivl
mov
sub
testb
jo
and
inc
jge
mov
movsl
pop
cmc
push
sub
mov
dec
mov
push
jg
pop
in
mov
jle
les
sbb
cmp
jle
rep
mov
je
iret
dec
mov
cmp
inc
ljmp
inc
in
add
cmp
add
sbb
hlt
mov
mov
sub
orl
loopne
ret
pop
aas
dec
xchg
sub
pop
push
scas
or
xchg
mov
jae
rcrl
or
jl
aad
mov
scas
mov
arpl
insb
mov
and
mov
or
scas
and
sbb
stos
sbb
in
dec
sbbl
sub
sarl
enter
mov
dec
dec
mov
stos
jle
hlt
outsl
lock
or
mov
imul
movsb
push
mov
mov
mov
mov
imul
or
lret
push
add
add
out
std
gs
int
test
ds
lahf
dec
jp
rcrb
fs
cmp
and
push
mov
stc
mov
mov
pop
lcall
dec
cmp
es
xorl
ja
mov
ret
add
jae
pop
xchg
shl
mov
mov
jae
in
rol
xchg
jne
lcall
stos
xchg
sarb
xor
ret
pop
test
adc
inc
add
xchg
push
push
pop
xchg
mov
insl
push
mov
sbb
cmp
cmp
push
mov
add
xchg
mov
movl
jae
jbe
mov
sub
xchg
xchg
mov
xchg
imul
mov
add
mov
ja
push
sbb
es
shld
or
int3
sbb
push
xchg
lret
or
fsts
xor
xor
push
xchg
push
ja
out
mov
xor
push
aad
mov
sbb
cld
xchg
hlt
xchg
or
xor
or
push
push
leave
jle
dec
sti
mov
mov
cmpsl
ljmp
pop
movsl
rol
inc
jmp
sarl
call
inc
jb
jmp
mov
push
cmp
rol
iret
out
lahf
inc
or
mov
testb
and
pop
pusha
xchg
shll
rcrl
xor
fs
fwait
mov
cmp
xchg
pop
sub
or
xchg
sub
imul
mov
jg
pop
pop
dec
mov
or
lret
and
in
cmpb
mov
fidivl
pop
mov
sub
and
or
mov
sbb
lret
or
mov
fwait
add
ficoml
aas
pop
lods
push
ret
repz
mov
add
lock
out
mov
mov
mov
nop
add
idivl
pop
inc
and
xchg
inc
or
push
add
sahf
or
mov
cmpsl
dec
xchg
por
les
and
adc
cmpsl
iret
jnp
cmpsl
mov
out
jns
push
jl
test
test
xor
shlb
ljmp
mov
add
mov
mov
cmpsl
je
outsl
scas
testl
add
sbb
mov
mov
and
cs
mov
inc
or
and
sar
pop
and
adc
push
pop
arpl
scas
bound
cmpsb
or
sub
lods
jl
and
dec
dec
cld
lret
pop
arpl
inc
call
cmp
in
out
pop
cmc
push
pop
test
jb
jmp
mov
outsl
mov
xlat
cmp
add
xchg
jecxz
cld
push
adc
push
push
jecxz
call
mov
sbb
cmp
pop
mov
xchg
inc
aad
aaa
shrb
dec
fadds
mov
loopne
in
lret
push
cmp
sti
in
lds
add
push
ret
es
jle
push
push
fldl
int
add
leave
aas
out
pop
push
xlat
mov
jl
sarl
imul
or
jg
test
push
stos
pop
sub
in
ss
mov
aas
push
call
in
pop
and
int3
int3
xchg
mov
inc
mov
je
out
js,pn
stc
pop
sub
inc
lcall
pop
add
inc
rclb
dec
data16
adc
stos
scas
repz
loop
je
sbb
roll
divb
cld
push
mov
rclb
sbb
mov
cli
scas
les
imull
adcl
adc
mov
jmp
rorl
mov
in
adc
and
jg
bound
bound
push
sbb
addr16
or
movsl
xchg
mov
ret
jge
lods
pop
gs
out
int
jmp
cmpsl
insl
xchg
ss
test
lods
fyl2x
xlat
lods
scas
mov
pop
xlat
inc
mov
push
es
cld
push
sub
cmp
adc
sbb
fwait
dec
and
mov
mov
pushf
out
xchg
ja
cmpsl
pusha
shl
mov
lock
daa
cmp
push
xchg
adc
push
lock
test
cmp
add
lods
pop
xchg
test
dec
dec
stos
iret
push
shrl
push
imul
push
mov
add
push
ret
cmp
inc
xor
and
push
cmp
push
test
in
jecxz
pop
mov
pop
je,pn
inc
lods
jp
mov
and
pushf
and
int
inc
pop
cmp
fmuls
cmp
sbb
jge
enter
lret
jne
movsb
adc
les
adc
les
xchg
jne
repz
pop
das
outsl
inc
mov
jecxz
add
mov
stos
sbb
mov
xor
hlt
ror
lds
lahf
adcb
cmp
adc
push
and
repnz
mov
xorb
shll
dec
sahf
or
add
ja
push
push
pop
popf
inc
loop
lahf
cmpsb
sbb
lods
mov
lock
and
mov
imul
push
gs
sbb
lock
jns
icebp
sbb
mov
fbld
ja
mov
arpl
outsb
mov
shl
or
repnz
fs
pusha
jg
sub
push
cmp
imul
and
test
or
roll
or
movsl
mov
sub
mov
cmc
in
fs
cmp
into
sti
xchg
fcomip
fbstp
stos
push
insb
aaa
push
lock
push
sahf
sub
adc
push
nop
adc
fs
js
xchg
pop
xchg
and
add
add
test
push
inc
lcall
dec
arpl
lods
roll
movsl
cltd
xchg
pop
dec
jae
cmp
aad
test
mov
fdivrp
or
pop
cs
clc
ds
fs
xchg
sbb
mov
popf
xchg
inc
and
sbb
movsb
leave
les
mov
push
inc
and
sub
in
and
test
and
push
jecxz
pop
cmc
cltd
jecxz
scas
mov
mov
imul
inc
loopne
pusha
cmp
ret
les
mov
adc
sub
jo
jne
arpl
pop
jecxz
addr16
loope
pop
xor
mov
loop
jle
mov
jb
pushf
call
jns
mov
add
dec
ret
xor
cmp
rorb
inc
pop
mov
popf
push
or
fcomps
insb
hlt
push
ja
jbe
repnz
cmp
in
xchg
add
push
push
mov
hlt
mov
aas
vmread
mov
pop
inc
xor
out
adc
pop
ficoms
movsl
add
add
and
sbb
ss
dec
fldt
mov
loop
mov
sahf
cmpsb
sub
dec
jg
rclb
and
xlat
jle
sti
aaa
jp
pop
jno
inc
dec
cmp
cmp
jae
dec
push
leave
popf
jl
shll
inc
pusha
cmp
mov
popf
mov
or
sbb
ret
cmp
mov
shll
push
int3
sar
or
dec
int
fldl
pushf
outsb
push
outsl
popf
scas
scas
xor
mov
rclb
mov
cmpsb
inc
cmp
insl
sub
lcall
mov
fildll
lret
jo
push
xchg
mov
js
ret
data16
scas
int3
xchg
aad
adc
punpcklwd
ficompl
xor
mov
push
adc
in
into
adcl
mov
jae
pop
dec
jbe
imul
inc
and
imul
inc
add
ljmp
lods
ljmp
cmp
dec
push
decb
loope
test
in
mov
iret
gs
lret
cli
lahf
rolb
mov
jmp
pop
cmp
add
lcall
mov
cmp
out
cmc
xor
bound
cwtl
ljmp
xor
push
ds
jmp
repz
out
fsubl
aaa
mov
jb
push
arpl
out
xchg
out
push
cmp
or
mov
push
fsub
push
jp
jmp
adc
fsubrs
mov
push
rorb
popf
loopne
xchg
out
lcall
mov
sbb
shlb
jae
stos
ja
in
lcall
dec
cmp
cmpsb
mov
or
loop
sub
daa
in
mov
mov
mov
mov
sarb
sbb
stc
sbbb
pop
mov
insb
sbb
enter
pop
mov
pushf
popa
testl
sahf
rclb
mov
mov
mov
or
push
clc
xchg
inc
scas
fsubr
jmp
xchg
in
fistps
add
xchg
jnp
mov
scas
pop
add
xchg
in
js
push
test
pushf
les
pop
and
sbb
fsubp
lret
popa
add
fs
in
jbe
sub
imul
add
lea
xchg
push
push
lcall
stos
adc
sbb
pop
push
jl
xor
test
fstps
mov
out
pop
inc
push
xorl
or
and
cmpl
outsb
testb
arpl
ret
rol
pop
mov
orl
insl
daa
gs
lret
xchg
cmpsb
inc
addl
fldt
mov
or
out
inc
into
mov
aam
scas
icebp
add
dec
dec
fistps
jb
in
cmp
push
push
xchg
mulb
enter
mov
gs
ficoml
sbb
add
out
loopne,pn
mov
adc
fcmovu
int3
jmp
cld
push
je
push
aaa
mov
outsb
cltd
sbb
into
fisttpl
push
popf
mov
and
adc
fadd
pop
jmp
pop
add
and
sub
and
or
pop
and
mul
scas
mov
fisubl
ficoml
sbb
pop
das
pop
sti
call
les
orb
aaa
xor
clc
daa
incb
mov
shlb
or
fldt
dec
out
ljmp
mov
js
sbb
rcrb
insl
ljmp
and
cmpsb
fisubl
test
cwtl
leave
mov
mov
xlat
push
cmpsb
jg
stos
mov
sbb
mov
jle
fs
sub
out
or
lock
or
pop
out
shrb
popf
pop
test
dec
jb
and
add
jns
dec
outsb
or
shrb
out
popf
int3
movsb
call
testb
adc
mov
int
sbb
aaa
test
and
aaa
pop
fidivrl
push
inc
cmpsb
sahf
mov
and
dec
jle
adc
mulb
xchg
fidivrl
jnp
das
jns
sarl
mov
pop
scas
jle
mov
push
inc
mov
sub
pop
int3
inc
leave
ret
sbb
pop
out
loope
xor
and
push
adc
and
out
jns
call
pop
pop
insb
mov
pop
pop
xor
cmpsl
mov
loope
pop
mov
enter
pusha
js
mov
mov
pushf
popw
sbb
cmp
cmp
dec
lds
push
dec
jbe
xor
xchg
jbe
lds
add
sbb
ret
aad
scas
inc
lods
mov
inc
in
jge
or
ja
cmpsl
mov
xchg
cmp
sbb
movsb
cmp
jne
push
nop
sarb
fs
insb
mov
and
push
in
shll
push
sub
lock
sbb
and
pop
adc
dec
pop
xchg
push
adc
jb
push
in
xchg
push
cmpsb
je
jo
and
test
fsubp
leave
xchg
dec
xor
not
inc
jmp
mov
test
dec
cmp
loop
inc
les
scas
push
mov
cmp
int3
test
cmpl
ljmp
adc
loop
ds
cmp
jns
lods
loop
cwtl
push
negl
call
add
outsb
cwtl
mov
cmp
loop
jmp
mov
mov
movsb
xchg
jmp
daa
xor
pop
lods
rcrb
xchg
cmc
ss
mov
push
hlt
mov
and
dec
outsb
pop
les
out
lods
xor
mov
sbb
stos
dec
and
fistpll
addr16
jae
mov
xchg
jne
and
aas
decb
jge
mov
ljmp
mov
pop
pop
adc
xor
xor
pop
repnz
xchg
lock
pusha
sbb
es
fidivs
xchg
fdivrp
mov
jl
or
rcll
lock
rolb
pop
lock
lock
xorb
or
dec
cmc
pop
xor
repnz
mov
je
cmp
cld
js
push
cli
inc
jne
lea
ja
stos
ret
jae
repnz
sahf
xchg
ja
sbb
loopne
pop
push
add
xchg
add
gs
lock
sbb
dec
adc
inc
insl
lods
std
or
pop
aas
dec
push
and
hlt
jbe
cmp
mov
jo
lahf
cs
imul
loop
sbb
adc
sar
cld
sbb
xchg
mov
and
in
inc
mov
mov
dec
push
cmp
or
cmp
insl
mov
xchg
lods
xchg
sub
flds
fsts
cwtl
xorb
dec
sti
and
adc
xor
scas
rolb
mov
jnp
pop
adc
mov
pusha
mov
in
or
bound
loop
cmpsb
xor
ret
lds
inc
loopne
fisubl
rcll
push
into
push
and
pop
shlb
fs
shll
popf
sbb
leave
fcompl
rclb
jne
fisubl
fists
lret
xchg
stos
mov
sbb
jmp
int
jnp
or
rorb
xchg
cmp
scas
sbb
aam
mov
mov
sub
and
mov
hlt
mull
rcr
pop
fwait
in
mov
push
sbb
or
ds
ret
js
push
sarl
js
lock
sub
jge
xor
adc
cmp
inc
loope
add
pushf
mov
insl
pusha
cli
adc
xchg
ret
test
cmp
mov
push
lret
mov
into
out
jno
dec
inc
je
cwtl
lds
push
stos
lods
jae
fcom
push
pop
std
out
imul
imul
xor
loope
lret
shrl
sbb
pop
out
loope
int
cwtl
bswap
ret
repz
test
push
add
out
lret
xchg
rdmsr
pop
out
mov
mov
jp
movsl
call
sub
pop
popa
cmp
or
dec
mov
push
lret
out
fldl
or
pop
sbb
push
rcrl
push
push
in
jp
notb
cmp
lcall
sub
pop
loopne
mov
or
outsl
je
mov
pushf
sbb
shlb
in
cwtl
jecxz
pop
xor
mov
mov
stos
lret
mov
ror
shl
imul
and
jb
sbb
js
lret
inc
sbb
rol
pop
add
mov
jmp
inc
xor
and
cmp
roll
popa
das
fstl
dec
mov
cmpsl
adc
xchg
jmp
dec
sbb
jge
cmp
insb
pop
mov
mov
repnz
sahf
pop
rcrl
insb
push
arpl
ljmp
cld
inc
inc
out
sub
sbb
pop
adc
push
jo
jnp
cmp
mov
xor
mov
cltd
inc
call
inc
pushf
mov
xchg
into
inc
jae
inc
popa
pop
add
xor
test
push
jb
scas
jno
int
inc
cmp
fcoms
dec
in
jb
adc
ljmp
je
out
bound
cwtl
fsub
jl
lods
xchg
fcompl
movsl
add
adc
clc
lcall
lea
cmpb
add
loopne
lock
jb
and
jns
add
xchg
cmpsl
clc
iret
adc
incl
addl
scas
cmc
fmulp
mov
mov
xchg
sbb
and
mov
rorb
fiaddl
gs
aad
sbb
call
mov
mov
push
sbb
or
push
std
arpl
cmp
xor
stos
push
insb
cs
roll
dec
push
add
clc
cmp
mov
pop
xor
sbb
jbe
sbb
xor
test
dec
mov
push
inc
sbb
mov
lahf
jecxz
and
movsb
xchg
enter
fdivrs
jecxz
daa
sub
or
loop
test
sub
sub
add
scas
sti
adc
mov
mov
jne
sub
pop
stos
and
inc
adc
loope
mov
roll
adc
loope
push
jo
leave
cmp
negl
mov
aam
mov
ss
movsb
stc
and
aaa
and
pop
dec
xor
subl
psraw
nop
sbb
pop
add
xor
insl
xor
scas
push
insb
movsb
add
push
add
cmp
jb
shlb
push
sti
popf
shll
sbb
fimull
sub
push
jmp
loopne
xchg
and
xchg
loope
cltd
sti
sti
lods
in
movsb
xchg
shrl
xor
adc
test
add
ret
jl
in
lret
data16
or
mov
iret
lahf
dec
add
in
lods
cmpsb
mov
dec
cli
insl
add
inc
pop
jae
push
ret
jg
loop
pop
xchg
fadds
cmc
xor
sub
sub
aad
fdivr
sbb
jl
out
ja
imul
stc
das
cli
dec
stos
mov
into
jae
jecxz
jg
jnp
mov
pusha
lds
shll
inc
dec
mov
xchg
shl
cmpl
pop
jno
adc
push
dec
jo
jno
mov
mov
je
mov
push
and
mov
cli
sub
jecxz
cmp
hlt
cmp
pushf
arpl
std
xchg
inc
push
leave
push
int3
cmp
insb
pop
pop
jl
test
js
cs
xchg
add
dec
xor
xchg
mov
scas
inc
inc
shr
scas
pop
leave
cwtl
imul
sub
pop
and
pop
push
inc
or
cld
sarb
mov
mov
pop
das
mov
aas
pop
xchg
jp
lds
bndstx
mov
sbb
add
pop
mov
rcrl
popf
or
inc
ret
repnz
das
pop
nop
ljmp
pop
mov
aad
insl
fists
xor
dec
into
ss
gs
je
mov
addr16
cmpsl
lods
sub
fdivl
mov
addl
iret
out
mov
jns
movsl
aas
stos
sbb
xchg
mov
filds
jg
jp
icebp
add
cld
pop
mov
mov
das
xchg
inc
lea
jl
sub
insb
push
jb
jne
js
aas
out
ljmp
cmp
fs
stos
mov
sub
jmp
jae
lahf
sub
subb
xor
push
xor
pop
or
addr16
jmp
cmp
fs
insl
ror
loopne
cmp
andl
sub
push
inc
adc
into
enter
lea
push
movhps
int
push
and
jge
jle
scas
out
je
add
mov
aas
xchg
pop
shlb
ds
xor
mov
jae
outsb
pop
test
lods
mov
inc
je
sub
add
pop
cli
pop
inc
dec
enter
aas
and
enter
mov
push
xchg
push
mov
lods
mul
outsl
pushf
sldt
cmc
insb
xor
cltd
mov
data16
addl
jge
mov
mov
cli
stos
sti
sbbl
mov
mov
mov
or
sti
outsb
les
adc
mov
jbe
mov
or
jne
in
mov
into
add
int3
loop
and
insb
mov
out
pop
pushf
sub
stos
sti
test
push
dec
mov
sbb
out
sub
arpl
sar
cmc
sti
jmp
aas
adc
scas
ret
out
cmpsl
rcrb
in
push
cmpb
in
insl
in
push
adc
mov
xchg
sahf
out
call
daa
inc
xor
es
arpl
ds
xchg
inc
sub
xchg
mov
scas
lret
mov
js
loop
lcall
daa
in
mov
and
aaa
inc
sub
notb
sub
push
enter
jecxz
lods
repnz
aaa
mov
pop
push
jmp
shlb
test
das
mov
xchg
fstpl
mov
lcall
sbb
push
mov
mov
fiadds
jae
out
push
in
jns
xchg
push
pop
xor
loopne
mov
cmp
jnp
xor
sbb
roll
cwtl
int3
fs
fidivl
cmpsl
xor
bound
jl
xor
lahf
sbb
sbb
mov
in
stos
or
xchg
or
in
movsl
mov
jecxz
clc
je
clc
lods
fnstsw
cmp
mov
xchg
pop
fnstenv
and
mov
icebp
iret
adc
and
mov
outsb
popf
cld
mov
lahf
jmp
clc
pop
dec
pop
add
andl
lret
sub
mov
pop
cmpb
or
dec
mov
or
jb
and
repnz
xchg
arpl
sub
pop
jecxz
outsb
jmp
cmp
jno
add
cmp
fnsave
loope
xor
out
icebp
ja
jbe
test
inc
and
nop
lds
and
scas
push
inc
rclb
or
push
movsl
js
les
mov
mov
pushw
fdivr
push
das
out
test
inc
lea
add
sbb
inc
mov
shrb
subb
ja
cmc
adc
pop
sub
lcall
pop
loope
pop
stos
data16
neg
sub
sbb
sti
xchg
cmp
cltd
pop
xchg
or
cli
out
mov
fstpl
testl
jge
and
in
mov
adc
mov
xor
ss
xchg
cs
cmp
sub
stos
and
outsl
mov
arpl
mov
fnstcw
clc
jmp
mov
inc
std
and
pop
daa
pusha
lods
lds
adc
inc
popa
daa
insl
sub
mov
gs
ljmp
scas
and
sbb
adc
sbb
out
call
inc
gs
sub
jge
cmp
inc
lret
xchg
aaa
stc
rcr
pop
jmp
and
push
jns
lods
and
dec
mov
dec
addr16
cmp
insl
jo
out
jnp
xor
xor
and
push
lea
insl
mov
adc
pop
xlat
test
insl
cmpsl
cmp
aaa
cs
xchg
arpl
movsl
aaa
mov
int
clc
sub
mov
sub
iret
pop
push
aaa
loop
int3
jp
pop
inc
push
in
add
xchg
sbb
push
lods
mov
xchg
fbstp
or
jg
mov
pushf
and
lds
cmp
mov
in
dec
add
mov
dec
shl
mov
push
mov
inc
imul
sub
dec
lds
ret
dec
shr
in
test
or
daa
cmp
movd
fs
aam
addl
sub
ud2
gs
aas
into
jo
jmp
fiaddl
int3
and
push
or
pop
movsl
mov
faddl
pop
shl
pop
aad
mov
shl
and
lea
ret
mov
jl
pop
loope
push
and
int
adc
inc
pop
xchg
push
mov
stos
jmp
sub
jno
xchg
sub
push
das
fldt
add
adc
outsb
fistpll
mov
mov
orb
lret
cmpsl
scas
and
jg
or
push
inc
push
cltd
adc
push
jb
lods
add
out
add
fcmovnbe
enter
scas
in
movups
xor
icebp
mov
inc
jae
cmp
icebp
dec
push
stos
je
sub
mov
test
lret
sub
pop
mov
mov
mov
sub
movsl
mov
std
mov
rcll
push
mov
and
mov
rcrb
mov
pop
mov
dec
out
je
orps
cmpsl
icebp
cli
int3
out
adc
inc
pop
inc
inc
outsl
adc
sbb
xchg
push
jp
dec
mov
or
pop
add
sbb
cmp
test
xchg
cmp
adc
stos
cmpsl
pop
es
ficoms
inc
dec
push
pop
loope
push
scas
jg
cmc
pop
out
mov
insb
jno
mov
cmpsb
cmp
mov
in
ret
push
fisubrs
lret
dec
mov
mov
mov
sbbl
sbb
scas
call
repnz
out
jmp
cmp
jbe
pop
cmp
icebp
pop
mov
jle
pop
dec
mov
mov
xchg
mov
insb
std
xchg
in
or
ret
mov
mov
xor
jb
push
mov
scas
mov
jp
jbe
enter
out
repnz
gs
or
repz
in
xor
test
mov
mov
xchg
add
fld
les
in
jp
sqrtps
xchg
out
xchg
repnz
and
faddp
mov
and
insl
mov
push
enter
arpl
fisttps
sub
inc
aad
data16
cld
std
cmovbe
push
std
push
ds
aaa
imul
dec
in
es
push
stc
sub
icebp
sub
mov
sub
testb
jne
in
adc
sbb
xchg
jbe
out
push
jp
fsubrl
inc
imul
jle
mov
jle
cmc
mov
inc
pop
mov
das
xor
icebp
xchg
fnstcw
imulb
int3
pop
cmp
mov
mov
and
xchg
pop
ja
js
dec
sbb
dec
sbb
or
xor
loopne
add
in
daa
jnp
xchg
sub
mov
fimuls
hlt
jle
ss
push
adc
lock
leave
cwtl
inc
aad
or
cmpsb
scas
das
div
lods
or
xchg
pusha
popf
dec
mov
out
imul
sub
imul
dec
imul
fdiv
and
cltd
int3
int
pop
mov
push
mov
imul
adc
xlat
shlb
clc
in
out
mov
movsb
xor
out
iret
lea
mov
dec
mov
iret
pop
inc
or
je
or
je
mov
imull
cwtl
cld
inc
popf
test
sbb
sub
sti
leave
cmp
mov
lret
sbb
adc
je
sbb
push
jl
stos
xor
sub
sub
mov
mov
jnp
jmp
enter
cmp
jo
out
jnp
xchg
sbb
pop
push
jmp
arpl
mov
int
ret
shl
test
push
aad
loope
stc
aad
fidivrs
mov
roll
add
lahf
sti
andb
inc
mov
int
aaa
lods
hlt
fisttps
scas
xlat
pop
sub
sbb
xor
mov
ror
arpl
cmp
cmp
xchg
lahf
sahf
movsl
in
lret
in
push
std
lock
pop
lea
std
pop
int3
cs
add
cwtl
fistl
jg
in
lcall
loopne
or
incb
int
and
loope
mov
sub
push
sbb
mov
pop
push
push
iret
and
aad
push
sub
repz
js
sub
cmp
pop
push
jnp
push
xchg
dec
call
cmp
push
arpl
xor
daa
adc
cmp
mov
add
cmp
adc
js
mov
rep
adcb
popf
test
imul
push
mov
test
lock
xor
lods
scas
rorb
aas
add
cmp
sahf
test
push
nop
jno
mov
or
inc
jns
gs
push
or
mov
ret
mov
push
call
push
lock
pusha
dec
cltd
inc
andl
mov
adc
jne
cltd
mov
jns
jmp
pusha
idivl
mov
push
in
cld
aaa
push
and
ds
add
jb
add
sub
shlb
mov
mov
popa
nop
pop
pop
repnz
call
pop
test
rclb
insb
js
inc
add
push
mov
cli
push
adc
stc
addr16
ds
imul
xor
iret
int
data16
pop
sub
fidivrl
arpl
inc
mov
loope
mov
out
mov
and
inc
add
push
mov
hlt
jnp
jo
popf
lods
lods
int3
test
adc
icebp
repz
aas
stos
loopne
pop
das
push
push
sub
push
jg
repnz
dec
leave
jl
push
jo
lea
add
mov
sbb
aaa
dec
add
nop
fadds
cmp
dec
lret
in
pop
sbb
lahf
stos
mov
push
dec
ficoml
es
imul
push
xor
outsb
jp
mov
test
cli
lret
add
jne
fs
xor
or
xor
pop
mov
jo
sbb
dec
lret
or
push
icebp
shll
fdivrl
adc
lock
stos
push
rcll
fadds
cld
push
sub
mov
push
lods
out
push
and
lods
bound
mov
subl
addr16
aam
inc
push
sbb
jbe
cmp
jnp
js
or
hlt
aad
lret
jp
cmp
jbe
inc
fwait
and
inc
stc
lret
mov
rcl
push
adcl
imul
add
or
movsl
cmpsl
jo
mov
ret
daa
cld
cld
xchg
xor
ss
stc
and
movsb
push
push
mov
in
xor
push
push
or
js
pusha
pop
imul
adc
mov
push
das
pop
rcrb
push
add
int3
fsubrs
into
adc
sub
jl
insb
sub
into
pop
mov
push
inc
ss
insl
adc
mov
mov
or
sub
repnz
xor
out
lds
jmp
jecxz
jmp
sti
rcrb
cmp
incb
ficomps
jg
aad
imul
scas
test
or
adc
sub
out
outsb
in
dec
inc
add
inc
subl
cmp
pop
push
aas
movsl
aaa
xchg
fcoml
fadd
loop
mov
in
mov
rcl
cmc
fs
or
add
mov
sub
test
xchg
sbbl
jns
insb
and
fmul
clc
in
or
pop
mov
and
mov
pop
cmp
test
les
rolb
outsb
mov
xchg
xor
add
pop
push
push
sub
das
fwait
jle
sbb
into
push
mov
sbb
xor
inc
dec
daa
out
imul
push
mov
ret
outsl
xor
loopne
xchg
js
or
dec
stos
ret
xchg
repz
test
push
jno
mov
xor
rolb
mov
cld
adc
mov
int3
jecxz
fucom
push
stos
loopne
out
mov
jb
cmc
jo
stos
or
pusha
inc
in
cmc
pop
test
sarl
dec
push
mov
pop
mov
test
out
into
push
cmc
sub
lret
and
push
js
ljmp
sbb
xchg
dec
mul
fistps
cmp
cmp
in
call
rorb
jle
stos
in
sbb
pop
into
adc
clc
add
and
sub
sbb
scas
fnstenv
fwait
and
aad
mov
add
push
adc
jno
xor
repz
sbb
lods
and
add
and
mov
rclb
sbb
ret
hlt
inc
std
arpl
pop
into
jbe
push
push
leave
outsb
mov
sbb
cmp
cmp
dec
inc
test
add
addb
cli
insl
lods
adc
jne
cwtl
into
mov
inc
inc
int
add
sub
sbb
into
sub
fimull
cli
lock
jl
adc
and
leave
jb
ljmp
test
jmp
pop
loope
cmpsb
imul
mov
mov
daa
xchg
xor
xchg
pushf
cmp
div
dec
inc
cmp
cmp
sub
xor
pop
cmp
sub
sub
aad
xchg
mov
lea
dec
mov
mov
sub
and
cli
xchg
cmpsb
jl
xor
cmp
insl
nop
and
xor
fisubl
mov
jbe
dec
imul
jmp
lods
push
inc
sbbl
push
jbe
in
mov
pop
cmpsb
outsb
mov
sub
rcrb
andb
jns,pn
jp
dec
inc
jp
mov
lods
cli
mov
sub
jb
and
pushf
lcall
rorb
lcall
mov
loop
insb
call
jae
mov
stos
lds
adc
sbb
push
out
cmp
xchg
add
leave
mov
stos
jns
clc
xchg
shlb
mov
enter
add
sbb
and
scas
cmp
gs
mov
pop
out
sub
adc
jae
das
xor
outsl
lea
cmpb
sbb
adc
rolb
push
ds
ss
stc
lret
pcmpeqd
cmp
mov
enter
movsb
push
mov
aam
cmc
dec
in
test
xlat
inc
out
xchg
mov
mov
mov
xor
mov
pop
ljmp
pop
test
sarl
stc
ficompl
xchg
sbb
leave
mov
pop
cmp
imul
mov
or
flds
xor
mov
jle
leave
testl
pop
jae
mov
ss
movsb
pmullw
add
push
stc
addl
dec
gs
repnz
pusha
int
sbb
push
dec
dec
sbb
aad
add
mov
sub
leave
pop
push
filds
sbb
ret
jo
inc
ja
cltd
push
or
mov
fdivs
adc
popa
mov
add
lock
in
lret
jg
jo
fcompl
jg
jmp
xor
shll
inc
dec
push
aam
dec
das
pop
pop
in
or
pusha
and
fdiv
repz
popf
mov
fildl
std
jbe
sbb
imul
sbb
and
nop
cmpsb
mov
jno
push
or
push
sbb
push
into
adc
and
pop
or
push
push
dec
inc
movsb
andb
cltd
push
incb
ror
mov
in
pop
xor
jge
rcrl
lock
mov
pop
jge
out
outsl
fdiv
jb
jo
mov
ss
int
fs
or
lods
test
repz
std
adc
test
sbb
add
cwtl
stc
repnz
lock
mov
sbb
das
test
cmp
and
data16
xor
or
push
cld
mov
sahf
jo
hlt
pop
inc
xor
shll
sbb
addr16
adc
lret
mov
mov
dec
lahf
mov
mov
cmp
sahf
sbb
imull
or
xchg
or
dec
and
test
pop
cs
movsb
jle
dec
fst
sbb
fbstp
push
cmp
mov
mov
sbb
dec
in
pushf
xlat
xchg
sbb
test
in
and
testl
sub
pop
push
jae
jnp
pop
push
js
lcall
loopne
fs
dec
in
je
sahf
iret
adc
adc
adc
movl
xchg
mov
fidivs
shll
sub
jmp
aam
adc
ljmp
imul
xchg
lahf
pop
push
push
pusha
push
int3
notb
cmp
in
inc
loop
int3
div
dec
cmp
and
cwtl
add
xor
adc
push
out
mov
pop
xchg
xor
rolb
sub
leave
mov
lods
sbbl
or
or
fs
push
mov
js
cld
inc
add
jno
cwtl
gs
divb
fs
aas
lcall
pop
push
loope
and
jno
pusha
in
and
mov
cwtl
sub
xorl
lret
push
fldenv
loopne
hlt
stc
inc
shlb
imul
dec
in
mov
jl
roll
fbstp
sbb
xchg
ja
cmp
hlt
aam
mov
mov
shll
stos
push
mov
pop
call
jge
insl
add
add
ss
mov
bound
pop
movsb
mov
and
clc
and
cmc
push
add
push
sub
sti
repnz
es
movsl
push
stos
mov
out
push
mov
mov
cmp
bound
mov
gs
imul
jae
xor
in
push
je
mov
shlb
daa
inc
arpl
mov
imul
lret
sahf
jo
jecxz
push
fadd
cmc
push
test
aas
pushf
jns
mov
adc
mov
jl
push
stc
mov
and
imul
sub
outsl
fwait
push
dec
pop
test
test
mov
add
jbe
mull
call
ds
jl
fisttps
adc
pop
rclb
mov
imul
mov
cmp
xchg
in
mov
fs
js
xchg
push
hlt
mov
inc
sbb
pop
pop
les
dec
xchg
popa
mov
or
sbb
enter
mov
arpl
sub
mov
loope
pop
iret
push
pop
add
pop
popa
sub
jne
mov
insl
adc
fistpl
dec
jge
dec
jno
jo
loop
xchg
mov
push
dec
roll
mov
lcall
mov
jp
push
adc
sbb
nop
insl
lock
and
js
jae
iret
fsubrs
mov
iret
imul
fwait
mov
mov
push
rol
loopne
nop
mov
clc
into
loopne
dec
mov
jnp
stos
scas
ds
mov
orl
into
fwait
xor
inc
test
and
sub
test
mov
stc
inc
in
xor
or
cmp
xor
mov
filds
xor
movsl
adc
negb
jbe
mov
mov
cmc
mov
loopne
ret
sbb
movsl
cmpsl
test
mov
or
rcll
in
hlt
sbb
cmp
ds
test
adc
lahf
bswap
pop
xchg
inc
mov
ret
aam
sub
and
int
push
sub
in
mov
ljmp
popf
pop
icebp
xchg
fcomps
out
xchg
sbb
mov
cmc
adc
jg
je
and
mov
or
lret
jne
fnsave
pop
mov
cmp
jmp
fwait
or
mov
cmpsl
xchg
enter
leave
fmull
and
or
cmc
cmp
xchg
push
xchg
ja
popw
cmp
mov
adc
pusha
cli
dec
sub
mov
dec
adc
pop
add
jge
sbb
jbe
sub
scas
ja
lods
andl
pop
loopne
xor
test
inc
mov
test
pop
data16
leave
and
push
push
jbe
shll
mov
dec
daa
lds
out
fnstenv
add
fdivs
dec
in
call
jbe
and
mov
xor
stos
mov
mov
adc
sub
adc
jb
out
and
inc
fwait
cmpsb
gs
pop
cmpsb
into
cli
or
jbe
loopne
lret
sahf
add
cmp
mov
cmp
insl
push
test
mov
cmp
push
sbb
pop
leave
add
jg
pusha
loope
inc
lcall
mov
and
mov
enter
out
mov
in
dec
lds
cmpsb
pop
xor
jb
or
xor
rcll
jp
mov
add
mov
add
inc
adc
mov
xor
xchg
add
test
xchg
xor
and
jecxz
add
subb
mov
test
mov
dec
jo
imulb
jecxz
push
jae
jne
into
jmp
dec
mov
shrb
adc
ret
arpl
sbb
xchg
imul
cmp
jl
xor
push
rol
ja
push
daa
xor
xor
add
push
inc
into
dec
sbb
pusha
and
pusha
int
or
sbb
push
shl
pop
mov
and
fisttps
pop
xor
lds
mov
inc
mov
push
sbb
mov
ljmp
lahf
xchg
jno
movsl
inc
or
hlt
pop
and
mov
mov
adc
inc
and
loopne
fsubr
mov
adc
stos
movsl
insl
mov
test
rcll
inc
movsb
inc
add
aaa
jl
pushl
test
sbb
sub
pusha
mov
arpl
iret
and
jno
inc
xchg
sti
mov
out
cmp
inc
cld
xor
cld
jb
jmp
sbb
add
sub
jmp
std
test
lea
sub
fs
cmpsb
pop
js
or
aaa
mov
enter
mov
js
mov
rcl
pop
push
outsb
std
push
lea
insb
push
inc
dec
dec
xchg
push
sbb
cmp
roll
pop
inc
or
jns
sub
jge
pop
mov
dec
pop
push
add
mov
decl
test
out
or
push
push
xor
testb
iret
loopne
dec
pop
leave
mov
cmc
punpckhwd
scas
jge
lret
cmc
cmpsl
mov
pop
dec
mov
test
mov
dec
lcall
in
xor
jg
std
rcll
rcrb
in
stc
cmp
lods
cmp
mov
mov
cmpsl
dec
dec
ljmp
mov
dec
mov
icebp
aam
insb
xchg
adc
xor
xorb
js
mov
mov
mov
or
daa
cmp
mov
test
out
mov
test
scas
and
mov
stc
mov
mov
push
insl
aas
xchg
sub
mov
and
add
dec
into
mov
jns
test
push
daa
mov
or
sbb
and
cwtl
inc
ds
dec
pop
sub
jp,pt
sbb
lods
and
push
inc
mov
icebp
addb
aas
loop
adc
mov
in
scas
xchg
in
outsb
mov
jge
arpl
add
push
js
iret
rcpps
inc
das
shl
xlat
dec
sub
addr16
jl
push
int3
push
lahf
lret
xor
dec
mov
mov
insb
mov
pop
pushf
test
sbb
cmp
cmc
sbb
test
mov
push
adc
xchg
xchg
out
and
ret
pop
jp
cmp
scas
sbbb
push
add
push
add
xor
pop
scas
and
jle
cld
add
mov
pushf
icebp
jb
and
adc
sub
ret
mov
neg
ja,pn
xchg
jb
stos
lret
sti
cli
sbb
jno
ss
outsl
popf
add
mov
or
lret
mov
fwait
dec
mov
stos
push
push
aas
jge
push
jecxz
sbb
not
jae
or
sbb
adc
jno
inc
mov
insl
and
cli
test
sbb
inc
xchg
negb
pop
in
repz
outsb
mov
push
testl
cltd
jbe
push
cltd
rorl
ja
mov
jbe
rolb
cli
xchg
mov
sbbb
daa
sub
lcall
aad
ja
lahf
ljmp
mov
xor
leave
fsts
movsl
lret
push
mov
movsl
fsubl
or
fwait
ret
andl
lcall
stos
pop
push
inc
pushfw
mov
and
shr
mov
out
pop
pop
and
arpl
aam
sahf
push
jge
out
imull
out
xor
jns
xchg
mov
pop
xor
or
add
adc
sahf
fs
clc
dec
lret
dec
push
jno
or
push
jns
mov
mov
cwtl
adc
daa
sbb
jno
sub
mov
out
pop
xor
and
mov
outsb
notl
fistpl
inc
rol
add
decb
mov
dec
mov
mov
sahf
and
pop
push
in
xchg
mov
call
sbb
in
mov
mov
jo
dec
scas
inc
das
incl
aas
mov
push
or
jl
lret
test
xor
mov
mov
sub
xchg
and
mov
js
dec
dec
inc
arpl
push
cwtl
jbe
inc
pop
add
dec
sbb
pop
scas
inc
stos
inc
into
xchg
mov
rcll
sbb
iret
mov
push
adc
sub
push
vpsllw
push
scas
mov
fwait
mov
stos
loopne
ds
push
dec
jl
dec
rolb
fwait
dec
xchg
shr
inc
xchg
insl
sub
and
inc
clc
daa
insl
sbb
stos
fisubl
cmp
fdivrl
push
adc
int3
push
outsl
dec
sbb
xor
les
sub
fucomi
data16
sti
cmp
add
mov
stc
imul
sbb
push
push
psrad
sbb
xchg
cltd
outsl
sub
out
movsl
popa
popf
dec
fsubrp
push
pop
xor
pop
mov
push
dec
fucomp
push
dec
fsts
xor
push
pop
push
repnz
and
sti
inc
add
jae
sub
andb
mov
das
mov
enter
stc
jecxz
add
sahf
xor
arpl
out
out
sub
fildll
push
push
mov
pop
and
jo
ja
xchg
jae
int3
ffreep
bound
dec
xchg
pop
and
push
scas
jo
pop
xor
subl
inc
push
ror
test
pop
aas
xor
xlat
inc
inc
sbb
lods
scas
mov
jae
inc
or
fwait
or
xchg
xorl
inc
ja
dec
and
jecxz
scas
xchg
lods
mov
mov
inc
inc
xchg
jge
jmp
mov
pushf
xor
mov
jp
insb
data16
dec
cld
stos
or
lret
sub
inc
dec
adc
or
jp
mov
mov
movsb
into
push
fs
nop
mov
pop
pushf
and
lods
cld
outsb
dec
lea
adc
sbb
scas
xchg
pop
test
adc
lret
mov
fsubrs
ret
cmp
nop
cwtl
scas
loopne
inc
stos
sub
inc
add
mov
sti
inc
xchg
mov
iret
stos
push
shrb
imul
pop
and
cmp
pop
cmc
cmp
outsl
js
or
mov
pop
test
in
cmp
sub
test
int
sti
pop
bound
imul
adc
inc
dec
mov
mov
lods
std
cli
testb
adc
movsb
push
aam
xchg
pop
inc
jno
jmp
mov
push
inc
ret
jl
jbe
mov
rcrl
bound
mov
push
xor
adc
mov
popf
xchg
mov
jb
lea
inc
sbb
fmuls
lahf
mov
les
aas
sub
or
xchg
pop
incl
mov
push
ja
add
das
xor
jns
xor
std
jne
add
push
pop
cmc
in
sarb
out
adc
ror
cs
lock
je
shl
jno
scas
cmp
jecxz
inc
adc
arpl
xor
push
out
pop
addl
and
mov
pop
mov
loope
push
cwtl
jmp
std
aas
les
out
cmp
cltd
dec
xchg
pusha
jecxz
pop
into
cmpsb
add
outsl
ja
int3
ror
mov
and
dec
repnz
xor
push
repz
stos
jp
xchg
aas
jp
adc
in
leave
inc
pop
jecxz
lock
or
js
pop
icebp
inc
incl
in
nop
jecxz
repnz
or
ret
mov
cmp
fcmovne
dec
jae
dec
popa
push
loope
lcall
enter
dec
loopne
cmp
cmp
cltd
js
in
mov
dec
sub
xchg
xchg
ret
repnz
lcall
cwtl
into
loope
xchg
fldenv
jae
cmp
mov
or
xchg
lods
lret
in
movsb
xchg
xchg
lds
inc
mov
xchg
push
mov
dec
leave
ljmp
cmp
sub
jae
outsl
jmp
das
sub
shll
insl
xchg
or
stc
popf
ja
jbe
push
dec
sub
es
in
repnz
lret
mov
mov
pop
or
fwait
sahf
jecxz
ss
pushf
jp
pop
imul
das
leave
pop
test
ja
sbb
cmpsl
repnz
mov
mov
xchg
or
test
lds
lock
shr
repnz
shr
sub
ud2
aaa
or
rcr
dec
push
adc
dec
fcoml
fiadds
mov
pushl
xorb
pop
nop
loop
fwait
mov
nop
ss
or
sub
leave
fnstcw
repnz
cmp
xchg
faddl
cmp
mov
cmc
pop
ret
nop
dec
mov
dec
pop
test
arpl
notb
adc
dec
xchg
mov
cmp
aas
cwtl
xchg
push
mov
mov
hlt
push
mov
aas
sbb
jmp
daa
out
xor
sub
stc
push
nop
repz
mov
nop
cmp
ljmp
xchg
dec
das
or
sub
dec
clc
aam
mov
ljmp
ds
les
pop
xor
mov
rclb
test
adc
cmp
or
pushf
sarb
in
jb
sbb
xor
pop
adc
loopne
adcl
sbbb
xlat
in
jp
fs
cs
insl
mov
mov
pop
xchg
fisttpll
adc
dec
push
ds
adc
fists
sbb
mov
pusha
js
sbb
sahf
xchg
inc
mov
in
xor
movaps
daa
adc
inc
sub
jle
daa
pop
pop
fucomp
call
or
dec
mov
lgs
rcrl
ds
mulb
pop
push
jbe
mov
inc
or
add
lds
jne
ret
xchg
test
cmp
dec
iret
push
and
inc
xor
pop
js
or
xor
data16
out
pop
xor
add
adc
inc
das
or
inc
mov
pop
ret
sub
iret
into
sarb
mov
addr16
sbb
xchg
scas
fstl
rcr
push
jno
testb
sahf
aam
sbb
aad
insl
mov
daa
mov
sub
inc
mov
bound
les
add
xor
or
dec
dec
mov
aam
push
sti
and
lret
push
stc
icebp
insb
daa
stc
inc
fistl
sbb
mov
xchg
test
ss
popa
pop
stos
mov
mov
repnz
sub
scas
orb
pop
sub
ficompl
inc
scas
pusha
aas
mulb
aas
js
jl
sub
pop
imul
push
mov
pusha
lcall
push
or
sub
cltd
mov
or
cmpsl
mov
or
jnp
icebp
fstpl
imul
test
xor
shlb
push
sub
pop
test
sbb
pusha
jle
shrl
mov
inc
dec
pop
rclb
jns
mov
int3
out
dec
pop
lock
ja
jbe
into
fcmovnbe
mov
data16
cmp
inc
jae
fwait
sbb
push
pusha
imul
pop
dec
sub
loope
cmp
fcoms
loope
inc
pop
movsl
repz
js
mov
jge
out
insl
pop
insb
or
sub
inc
subl
add
lea
hlt
subl
mov
mov
in
sar
jbe
add
fnstenv
jnp
push
movsb
cmp
xchg
repz
mov
xchg
cmp
or
adc
mov
push
jg
xor
pop
add
mov
sbb
xchg
xlat
cmp
xor
loop
data16
pusha
xlat
sub
cmp
repnz
sub
mov
bound
mov
lods
mov
cmp
ds
jo
mov
mov
or
pop
daa
sbb
add
xchg
cmp
pop
cmp
pop
ja
inc
stc
fwait
test
mov
sbb
incl
mov
mov
ficomps
movsb
mov
mov
sub
int3
fcompl
mov
sub
jle
imul
insb
scas
movsb
jo
mov
or
sbb
cmp
add
and
lcall
test
push
cmc
jmp
adc
cmc
stos
and
sub
je
mov
imul
lods
insb
mov
std
adc
mov
sbb
adc
push
pop
sti
lds
test
sub
dec
repnz
les
push
and
dec
pop
in
js
add
mov
repnz
push
insl
ret
mov
adc
ds
lds
dec
pop
push
fdivs
mov
xchg
std
pop
inc
or
sbb
insb
test
jge
cwtl
outsb
fstps
subl
dec
test
in
jo
inc
sub
fwait
dec
pusha
insl
aaa
xchg
add
cmpb
test
inc
xchg
in
stc
into
pop
imul
cmp
and
aas
sub
adc
fisubrs
je
dec
sub
nop
mov
cmpxchg
cli
lods
mov
pushl
sub
xor
popa
mov
jp
adc
sbb
jl
lods
push
loop
pusha
insb
aam
jl
xor
dec
add
cmpsl
jg
mov
loopne
or
mov
loope
add
inc
fcoml
add
adc
mov
xor
pop
and
mov
dec
stos
scas
je
ss
loope
push
xor
jle
jmp
stos
or
push
fsubs
inc
lods
bound
pop
mov
in
lret
mov
mov
xchg
pop
imul
pop
pop
in
xchg
ja
cmp
clc
lock
mov
push
ljmp
inc
loopne
and
add
mov
or
xchg
in
dec
es
pop
mov
js
inc
shll
stos
stc
mov
jecxz
cltd
enter
push
inc
add
je
or
xorb
incl
clc
lods
dec
js
popl
add
adcl
and
stc
adc
xchg
arpl
inc
dec
jae
mov
jb
sbb
cld
push
out
mov
or
push
dec
adc
xor
sub
fistps
fs
mov
ret
mov
jo
ss
mov
xchg
or
or
push
mov
and
inc
push
fmuls
sub
pop
lahf
fmulp
gs
repz
lock
adc
lcall
arpl
xchg
loopne
idivb
inc
push
movsl
cwtl
xchg
sbb
shrl
mov
or
out
jae
and
and
xchg
sub
flds
or
or
pop
es
stos
or
js
ja
mov
les
lret
pop
mov
dec
xchg
pop
mov
dec
cwtl
stos
ss
or
leave
call
fsubl
cmpsl
mov
xor
pop
inc
inc
nop
push
push
mov
pop
jle
lds
test
xchg
cld
in
pop
ss
adc
push
and
call
adc
call
cmp
lahf
and
push
add
jmp
movsb
out
mov
int3
xchg
mov
push
jbe
je
xor
stc
hlt
add
stc
pusha
mov
jmp
mov
int
jmp
cld
leave
adc
cmp
les
cmpsl
pop
fistps
xor
popf
int3
add
ja
rcll
mov
test
xchg
test
cmp
jle
jl
les
js
jl
in
addr16
in
jne
xor
not
inc
dec
jge
sub
mov
rclb
sbb
sti
out
xchg
pop
push
pop
pop
fildl
rorl
inc
addl
imul
ret
push
insl
sub
arpl
ss
out
pop
push
push
les
push
loope
cmp
jbe
or
shrl
jne
sbb
lods
lock
push
pop
stos
add
push
fstps
dec
int3
mov
mov
jge
dec
test
fnstsw
inc
inc
clc
xchg
mov
pusha
and
and
inc
xchg
popa
mov
adc
int
xchg
out
and
or
fldenv
jno
or
out
mov
mov
inc
push
cmc
mov
jle
mov
xor
xor
insb
jle
mov
xchg
mov
xchg
fisttpll
daa
ljmp
jns
dec
push
push
sbb
push
insb
add
cwtl
rclb
mov
fildl
sub
das
lea
cmp
inc
jno
imul
mov
and
rcrb
adc
cmpsl
enter
fidivrl
adc
sbb
push
push
cltd
jnp
push
hlt
sbb
xchg
dec
jmp
jbe
out
xchg
sub
insb
cmp
cwtl
inc
gs
adc
loope
mov
in
xor
mov
xchg
mov
xchg
mov
test
jne
xor
data16
ficoms
mov
add
shrb
push
xchg
adc
inc
cli
ficoml
add
xor
jle
ja
push
lret
or
push
cmp
bound
adc
cmp
sub
pop
jg
lret
call
sbb
sbbb
loope
inc
xchg
inc
ret
pop
xchg
inc
fldt
stc
sub
xor
bound
lret
inc
or
pusha
outsb
sarb
test
cmp
sbb
xor
dec
loopne
jbe
int3
movsb
popf
in
cmp
loop
and
mov
jecxz
leave
xchg
push
lret
pop
push
cmp
mov
pop
mov
scas
aas
fsub
mull
outsl
test
les
push
dec
jmp
scas
and
xchg
adc
repnz
xor
cmpsb
call
andb
repnz
and
xchg
outsb
addl
jecxz
lret
stc
inc
jno
push
fisubl
jne
cmpsl
enter
pop
xor
mov
fsubr
insl
stc
stos
xor
jecxz
movsl
sbb
mov
imul
jb
mov
dec
dec
mov
imul
ret
inc
in
bound
testl
xchg
test
ljmp
mov
xchg
pop
fmuls
lock
cmp
daa
pop
into
mov
das
ljmp
jne
jnp
imul
mov
fwait
pop
dec
adc
push
mov
sbb
or
adc
jns
outsb
leave
outsb
aas
xchg
sarb
popl
adc
inc
dec
jns
add
xchg
popa
mov
das
ss
repnz
pop
sbbl
and
xor
fdivs
and
pop
icebp
imulb
nop
sub
fs
cmpb
xchg
inc
jg
mov
push
xlat
pop
inc
xchg
jbe
rcl
pop
stc
xchg
loope
lds
inc
mov
jne
addr16
cmpb
add
jmp
pop
adc
mov
cli
inc
popf
test
pop
xchg
xor
mov
mov
and
xor
xchg
jb
adc
cmpsb
and
mov
mov
outsl
sbb
cld
es
mov
inc
jecxz
sub
insb
sub
or
adc
in
cltd
out
push
push
or
xor
xchg
out
aam
data16
and
sbb
fiadds
pop
iret
xchg
movsl
fnsave
jo
fidivl
mov
mov
lcall
xor
icebp
xchg
add
stc
push
cmp
test
shrl
out
popf
pop
or
fimuls
sbb
dec
jmp
push
inc
jo
inc
pop
sub
cmp
dec
mov
sti
cltd
sub
das
cld
test
jp
sub
fidivl
push
sbb
outsb
xor
push
pop
cli
cld
xchg
pop
int3
cmp
imul
out
push
data16
int
xchg
xchg
mov
and
xor
icebp
fs
stos
dec
inc
sub
add
xchg
pop
lret
push
adc
xchg
fnstsw
jmp
and
sti
cmp
cli
lods
dec
adc
cmovno
sbb
xlat
movsb
cmpb
jl
hlt
mov
push
popa
out
pop
int
mov
pop
jne
cmp
aas
inc
sub
aaa
dec
cvtpi2ps
icebp
xchg
xchg
fadd
sbb
jae
xor
repz
std
push
ljmp
pop
repz
test
xchg
mov
iret
mov
inc
pop
pop
xor
mov
dec
or
sbb
pop
jle
inc
or
adc
sbb
xor
clc
mov
shlb
mov
mov
push
xor
jo
xor
lods
adc
ss
push
sarl
mov
mov
mov
push
rorl
into
push
sti
lds
cmpsb
push
push
mov
jmp
fsubrp
and
ret
lods
mov
mov
fwait
pop
ds
sti
loop
add
push
jno
clc
test
in
orl
and
inc
loopne
adc
fdivs
jbe
hlt
rclb
mov
andb
jo
aas
mov
sub
inc
imull
xor
lret
subb
jecxz
cmpsl
adc
mov
clc
ret
mov
mov
mulb
and
les
call
mov
cmp
inc
test
dec
xor
xorb
xchg
popa
mov
adc
xor
je
xchg
xchg
mov
loopne
and
or
dec
ds
inc
and
inc
int3
mov
pop
pop
and
adc
fwait
push
jo
out
scas
add
ret
lret
inc
cwtl
or
repnz
scas
dec
jo
mov
je
push
aas
pop
sbb
test
int
lods
pushf
inc
leave
add
mov
jbe
sub
xor
sub
pop
push
pushf
adc
adc
push
add
ja
mov
pop
inc
push
fisubl
or
jne
ret
cmp
cli
icebp
cmp
mov
jge
jne
aas
icebp
sub
xchg
jo
adc
jp
stos
jle
pop
mov
loopne
mov
and
sti
shl
and
mov
fstpl
outsl
into
adc
imul
pop
add
stos
mov
mov
xchg
ja
pop
adc
shrb
and
movsl
jno
fisubl
adc
inc
add
push
jo
andl
stc
add
adc
cmp
fimuls
cmc
scas
sub
add
push
icebp
int
test
mov
out
push
pop
sbb
ds
xchg
popa
push
jmp
and
mov
nop
fsubl
mov
xor
jae
pop
adcl
cmp
add
xor
lds
movsl
icebp
out
rcrl
dec
arpl
decl
fldt
cmp
ret
cmc
daa
or
daa
lcall
pushf
imul
add
movsl
fs
add
cmp
fwait
dec
mov
es
or
ret
xchg
add
mov
xor
push
gs
int3
mov
mov
inc
loope
inc
push
add
fcomp
jl
sub
dec
fs
imul
test
dec
and
mov
jle
cmp
clc
or
imul
jle
xor
push
rcrl
lds
rcl
lea
imul
aam
into
aas
mov
pop
jo
lahf
jns
pushf
mov
mov
and
es
add
mov
jecxz
aas
hlt
sarl
inc
imul
ret
jge
imul
cld
bound
jnp
mov
insl
arpl
lods
push
in
test
in
mov
loop
rcrl
mov
push
bnd
test
ret
sbb
push
or
rorb
push
jl
iret
mov
push
pushl
nop
pop
out
enter
popf
add
pmaxub
test
mov
and
sarb
lret
adc
jbe
gs
xchg
lods
dec
xor
push
dec
insl
xchg
inc
repz
cmp
out
pop
mov
lods
cmp
bound
lea
and
vmulps
ss
in
into
icebp
outsl
sbb
fidivrs
push
out
mov
aam
sbb
mov
and
and
sub
push
scas
scas
adc
cld
and
adc
ror
and
sbb
mov
jne
dec
fmull
mov
inc
cs
stos
popa
insl
test
adc
mov
mov
jne,pt
int
lds
lret
clc
std
lock
in
pop
jle
mov
mov
inc
dec
mov
push
cmpsb
leave
fcoms
roll
pop
fcompl
sbb
nop
mov
and
jl
dec
ljmp
insl
inc
cwtl
nop
jbe
xchg
loop
bound
push
and
out
sub
or
sbb
lahf
or
bound
inc
cltd
inc
jmp
xchg
xchg
jbe
daa
insl
jae
int3
xchg
mov
push
outsb
push
pop
cmp
push
mov
push
xchg
iret
cltd
adc
outsb
test
ss
push
dec
cmp
push
push
fldcw
jecxz
movsb
sbb
mov
dec
js
xor
xor
push
push
mov
nop
int3
dec
pop
mov
nop
sti
jmp
push
push
icebp
clc
mov
adc
loopne
fdivrl
sbbb
jl
dec
push
inc
mov
mov
mov
test
adc
mov
outsb
jo
adc
sbb
cmp
loopne
dec
lods
mov
dec
mov
incb
lds
negl
push
mov
insl
repnz
add
sub
lods
fldcw
shll
shlb
inc
int
fbstp
dec
sub
aas
xchg
fisubrs
dec
in
xchg
out
push
lds
or
divl
gs
mov
fs
pop
bound
xor
or
lea
sub
cltd
sub
or
notl
inc
cld
sbb
adc
jo
xor
sub
pop
orl
mov
sbb
inc
adc
mov
push
pop
call
clc
jmp
push
cmpsb
push
cmp
mulb
aaa
fiaddl
xor
out
call
sti
stos
nop
mov
icebp
add
cmp
bswap
sbb
push
add
adc
mov
sbb
mul
addl
test
mov
jae
cmp
lock
mov
push
push
pop
xchg
cmp
xor
incb
outsl
jae
repnz
icebp
pop
outsl
arpl
sub
xchg
lock
sub
push
rorl
jb
xor
xchg
cld
inc
cltd
inc
mov
sub
fstpt
fnstcw
lods
pop
enter
insl
push
fistpll
push
das
push
push
or
lret
std
roll
xchg
xchg
call
xor
sbb
sbb
pop
jge
in
je
ficomps
cmp
pop
lds
push
mov
xor
mov
outsb
sbb
test
cmp
test
cmp
loopne
mov
xchg
mov
cmp
cmp
add
mov
inc
push
push
jns
inc
decl
es
lcall
je
xor
imul
mov
xchg
push
pop
dec
sub
out
ljmp
adc
push
inc
sub
jecxz
pop
insb
xor
js
movl
adc
movsb
jbe
mov
movsb
push
add
sbb
xor
sarl
xchg
xor
or
xchg
repz
adc
jns
cmpsb
cmp
sbb
xchg
data16
and
pusha
popa
adcl
int
loop
shlb
pushf
pop
jmp
mov
sbbb
in
loopne
add
xor
and
jbe
aaa
repz
mov
jecxz,pn
push
insl
lea
pop
mov
dec
add
xchg
iret
mov
imul
push
and
shrb
inc
push
push
iret
xchg
adc
mov
push
sub
sbb
cmpsb
jg
mov
mov
sbb
add
loop
add
jg
or
dec
js
inc
mov
stos
ret
jecxz
lahf
push
or
push
insl
pop
push
test
mov
ja
mov
jl
sbbl
pop
iret
into
push
sahf
xor
shr
loopne
lock
push
push
mov
fsubr
pop
mov
sub
push
push
inc
repz
pop
add
addl
xchg
cld
dec
add
sbb
push
pop
aaa
in
gs
mov
sub
fnstsw
lret
leave
inc
sub
cmp
mov
sub
pop
dec
bound
fmul
jge
smsw
out
nop
or
ret
push
dec
dec
ror
lret
adc
dec
mov
cmp
das
inc
xorb
cmp
or
sub
mov
sub
lret
arpl
or
and
mov
or
test
sbb
cmp
and
mov
mov
inc
sbbl
mov
jp
dec
outsb
stos
dec
push
jo
int
rcr
push
add
mov
push
add
into
test
mov
testb
mov
add
out
test
insl
xchg
ljmp
mov
fmuls
add
out
mov
dec
mov
mov
pop
mov
mov
rorb
dec
ds
stos
sub
aas
clc
mov
and
add
push
mov
das
xchg
cmc
das
cmp
and
out
pusha
imul
mov
adc
neg
cld
arpl
pop
out
push
xor
mov
jae
decl
push
xchg
cwtl
jle
inc
mov
mov
xchg
add
mov
hlt
sbb
cs
sbb
add
xor
jg
push
jns
inc
add
adc
sbb
mov
mov
mov
xor
push
inc
jne
iret
ss
incl
push
and
xchg
mov
jne
xchg
pusha
in
call
popa
add
mov
jns
or
ficomps
push
pop
dec
sbb
inc
and
lahf
push
sbb
loopne
pop
jp
or
in
mov
mov
cmp
jo
mov
push
gs
fwait
cmpsl
xchg
stos
loopne
dec
add
fucomp
fsubs
aas
mov
xor
movl
adc
jno
cmc
sarb
in
or
fxch
iret
mov
inc
adc
sti
mov
mov
xor
inc
cmpsl
sub
sub
xor
fbstp
adc
mov
jl
xor
adc
mull
mov
dec
ja
addb
stos
xchg
int
mov
jae
add
rcrl
inc
lods
stc
outsl
cmc
pop
clc
inc
pop
xchg
iret
dec
cmp
ret
daa
pop
fwait
into
pmuludq
jmp
inc
cmc
jae
aad
dec
mov
dec
mov
cmc
add
mov
dec
jp
test
mov
sahf
dec
fwait
mov
pop
mov
leave
fdivp
mov
inc
sub
cmp
and
jo
push
add
outsl
or
cmp
dec
jno
fucomi
out
xor
pop
inc
pop
lahf
lcall
mov
xchg
in
jbe
xchg
lahf
inc
bound
repz
in
dec
stc
sbb
enter
vpminsw
cmc
cmpsl
test
xchg
stos
out
jns
add
pop
cmp
ljmp
clc
mov
sub
in
jecxz
mov
cld
push
inc
jbe
mov
push
mov
leave
mov
jbe
les
stos
add
bound
mov
loop
xor
cli
xchg
lods
xor
idivl
cmpsb
push
push
enter
loope
flds
enter
cmp
mov
dec
jecxz
div
popa
adc
sahf
movsl
sbb
push
icebp
jmp
dec
mov
jecxz
cmpsl
mov
les
mov
mov
pop
xlat
mov
test
pushf
mov
lcall
daa
cld
cld
sub
cmp
xor
dec
jns
cmpsl
mov
lock
jecxz
add
ja
ret
bound
ja
push
sbb
dec
negb
xchg
dec
out
cmp
adc
push
or
inc
and
stc
cs
pop
sub
repnz
adc
sbb
sub
mov
stos
es
popf
inc
stos
rcl
or
sbb
xor
out
into
out
jl
cli
sub
inc
test
push
mov
mov
xchg
dec
sub
adcb
mov
call
push
in
pop
out
loope
shlb
push
mov
sub
mov
call
add
push
push
xchg
rcll
rclb
aaa
out
push
stos
and
loop
sti
dec
cli
adc
inc
popa
mov
addr16
or
jmp
cmp
jge
shll
ficomps
hlt
and
cmp
jmp
cmp
xchg
add
mov
das
fistps
inc
ds
int3
imul
inc
ljmp
out
test
test
std
inc
sbb
adc
loop
arpl
add
pushf
xor
mov
mov
fnsave
xor
add
ret
gs
mov
addr16
cmp
add
mov
add
cwtl
mov
les
mov
jo
lahf
fcoml
daa
icebp
dec
or
add
jmp
lea
lret
push
scas
cmpsb
nop
sbb
shrl
test
mov
movsl
aad
xor
leave
push
fwait
clc
add
rol
mov
add
mov
xor
in
and
pop
icebp
loope
jle
dec
pop
xor
mov
lahf
or
add
xchg
push
leave
mov
adc
fstl
or
xchg
aad
pop
ret
mov
xchg
loopne
mov
mov
pop
cmpsl
sbb
aaa
movsb
cmp
xlat
mov
pop
mov
cli
adc
sub
test
or
cltd
fs
outsb
lds
mov
inc
xchg
or
inc
aaa
or
lea
imull
mov
adc
jae
in
adc
sub
sbb
add
rdrand
inc
cmp
jne
push
mov
mov
sub
push
shl
pop
dec
mov
jg
idivb
lret
push
mov
adc
cmp
dec
inc
jne
pop
addl
stos
loopne
xchg
hlt
adcb
inc
xor
xchg
jae
cmp
gs
and
aaa
xchg
js
loope
arpl
mov
ficoml
dec
sub
inc
mov
into
cwtl
push
or
in
add
push
lret
inc
mov
mov
inc
jl
jge
pop
aas
test
outsl
not
ja
aad
int3
pop
inc
arpl
scas
mov
cmp
xchg
mov
cvttps2pi
rdtsc
scas
push
add
mov
das
outsl
repz
mov
mov
dec
add
iret
out
dec
sarl
mov
xchg
repnz
xor
cmp
cmp
lahf
in
lret
dec
push
or
daa
loopne
lea
xor
ljmp
xchg
int3
cmpsb
negb
adc
std
das
mov
aaa
adc
adc
cli
push
cmpsb
xchg
sti
in
lahf
add
cs
data16
rorl
ja
stos
inc
xchg
lcall
popl
pusha
push
pop
sbb
in
mov
cwtl
dec
test
pop
in
lahf
lcall
jmp
xchg
push
std
or
adc
cmp
sbb
mov
mov
in
je
stos
insl
xor
filds
out
pop
in
fisubs
xchg
loopne
cmp
cmp
mov
inc
mov
add
xor
push
stos
mov
int3
fisttps
cmp
push
aas
ret
stos
inc
adc
xchg
jne
push
sub
fimull
mov
cmpsb
sub
fcmovnbe
jecxz
stos
cmp
lcall
lret
imul
sar
ds
pop
and
mov
mov
bnd
outsl
fstl
pop
pop
cltd
mov
cmp
lcall
jecxz
push
jmp
jae
jne
mov
addr16
push
or
nop
and
mov
sub
xchg
sub
xchg
insl
lret
jnp
sub
lret
push
repnz
push
adc
cmpsl
mov
enter
mov
faddp
xchg
jbe
adc
lods
sub
lahf
cmp
imull
mov
sahf
mov
sub
ficomps
jo
cmp
push
adc
xor
push
fnsetpm(287
sbb
addr16
jecxz
jmp
and
pop
jne
loopne
ret
mov
dec
mov
cwtl
in
mov
mov
ret
test
lods
push
stos
jle
dec
lods
rolb
pop
sbb
add
add
cmp
leave
push
fldl
mov
movsl
call
mov
scas
in
sub
mov
shl
adc
sub
cmpsl
jecxz
pop
push
loope
or
push
icebp
dec
sahf
fs
rclb
push
jmp
push
push
andl
lret
mull
pop
in
or
sub
call
pop
push
in
or
cmp
push
dec
inc
push
dec
mov
adc
mov
push
es
mov
xchg
push
adc
push
ss
adc
arpl
sahf
sub
addr16
dec
xor
pop
xchg
andl
or
jo
andb
push
hlt
ja
pusha
rcr
or
loop
jne
adc
dec
imul
jns
loop
and
mov
fsubl
or
pop
loope
sbb
loop
leave
ret
or
jge
pop
repz
sub
fisubrs
ds
aad
sbb
lahf
jecxz
cld
daa
ret
repnz
add
sbb
cmp
lea
imulb
jnp
adc
aad
inc
sbb
mov
xor
or
mov
xchg
push
xor
lret
movsl
push
mov
add
sub
cmp
xchg
push
pop
add
dec
cmp
inc
jecxz
cmpl
jmp
btc
call
fwait
outsl
pop
insb
in
pop
cmp
ja
sub
movsb
dec
aas
adc
sbb
sbb
addr16
adc
in
cmp
imul
sub
lods
outsl
aam
xor
mov
pop
sti
lods
push
ret
insb
mov
out
int3
xor
adc
fstpt
mov
lcall
idiv
fistps
push
jle
mov
dec
loopne
loope
xchg
fmull
lock
cmpsb
daa
repnz
lods
push
adc
js
pusha
push
lcall
push
fistpll
rcr
mov
cmpsb
in
je
jne
icebp
ljmp
outsb
divb
sarl
sub
sub
mov
icebp
fistps
imul
push
retw
je
cli
pop
inc
icebp
sbbb
sbb
sbb
mov
fldcw
adc
sbb
mov
arpl
mov
xor
cltd
ljmp
xchg
lds
and
sarb
adc
dec
jnp
adc
pop
cmpsl
in
cld
and
xchg
mov
xchg
pop
inc
jne
xchg
gs
lods
dec
mov
dec
sbb
sub
enter
hlt
mov
loope
xchg
nop
nop
lret
jb
shlb
negb
and
mov
add
add
mov
ror
push
mov
xor
push
hlt
sub
cmp
fistpll
sbb
or
xor
ret
xchg
int3
out
lea
adc
adc
mov
dec
dec
pop
stc
mov
std
xor
int3
fwait
popa
push
lahf
jge
sub
pop
mov
dec
cmp
pop
pop
adc
fsubr
adc
and
mov
js
cli
sti
and
xchg
jle
insb
lock
xlat
push
aas
in
fidivrl
testb
cmp
jb
jmp
jmp
mov
jp
add
sbb
cmp
popa
sbb
lret
stos
outsl
cld
adc
mov
push
nop
leave
lret
pop
jecxz
adc
adc
xor
inc
repnz
sti
fcomps
cmp
fstl
pop
hlt
lods
pushf
add
mov
xchg
jnp
pop
pop
js
into
les
mov
inc
push
inc
outsl
cld
sub
subl
fiadds
in
cwtl
nop
push
int3
test
out
loope
addr16
aas
test
dec
dec
cltd
mov
inc
xorb
rorb
xchg
das
ret
pop
ret
sbb
dec
mov
int
xchg
ret
add
dec
mov
or
and
insb
jno
mov
adc
push
cmp
mov
jge
movsl
insb
xchg
repz
sbb
and
loop
xor
mov
and
dec
int
mov
cld
or
push
lahf
out
shl
adc
inc
pop
adc
cld
mov
sti
orl
add
add
les
cmp
jmp
and
loop
das
push
pop
lock
xor
pop
jns
cmp
xor
ss
add
in
jecxz
sbb
push
push
jl
jge
and
cmp
lret
test
mov
loop
loope
mov
inc
push
fisttps
inc
jecxz
jp
pusha
icebp
int3
mov
push
sub
fsubs
nop
inc
push
mov
in
lret
xchg
add
dec
dec
mov
insb
adc
sbb
lods
shll
int
and
cmp
xor
pop
fiaddl
loopne
mov
in
mov
fmuls
lods
fisttps
add
jne
xor
dec
shlb
mov
jmp
lods
rorb
popf
push
movsl
lret
imul
xor
and
xor
in
rolb
movsb
xchg
test
out
jge
cld
xchg
push
insb
loope
clc
and
mov
pop
ss
dec
imul
and
xor
out
rcrb
decb
loopne
xorb
ret
push
xchg
jmp
add
out
lods
aad
inc
popa
out
xorb
cmpsb
ss
pop
int3
xchg
repz
mov
pop
mov
jo
out
scas
cmc
pop
inc
daa
inc
pop
fsubrs
mov
ljmp
mov
dec
pop
pop
jb
pop
inc
jmp
sub
dec
sbb
cli
cwtl
adc
sahf
xor
icebp
lods
hlt
push
mov
jmp
inc
test
add
scas
vpsubb
xor
ror
in
pusha
mov
pop
lds
dec
cmp
in
std
lcall
dec
mov
movb
aam
les
cli
xor
hlt
pop
pusha
shr
cmp
sbb
das
das
mov
out
cli
jo
insl
pusha
and
mull
rclb
inc
push
sbb
lret
add
push
push
test
imul
sub
movsb
mov
adc
mov
jecxz
xchg
jle
sub
push
pop
xor
je
lcall
iret
popf
popa
adc
fildl
sbb
xor
scas
push
test
aaa
daa
jne
in
pop
scas
cmp
ret
andl
mov
cli
lock
stc
or
out
dec
inc
mov
adc
cmp
dec
jo
sbb
adcb
inc
adc
stos
stos
cmp
lds
jb
mov
push
pushf
xchg
sub
arpl
out
lods
push
jnp
mov
add
jb
les
cmp
sti
dec
repnz
xchg
cmp
push
sub
inc
pusha
or
iret
out
icebp
mov
cmp
jnp
push
sub
xchg
push
test
sahf
dec
push
movsl
pop
lods
mov
adc
xchg
addl
lea
cmpsl
inc
lods
xchg
or
mov
fmuls
inc
mov
movsb
out
jp
ss
jmp
jne
xchg
gs
add
cmp
pop
test
test
stc
xchg
cmp
in
out
mov
add
pop
mov
ljmp
popf
sub
stos
fdivp
pop
adc
cmpl
cltd
sbb
mov
and
sbb
xchg
jmp
xchg
inc
mov
inc
aad
cmp
sti
inc
dec
or
mov
imul
or
call
dec
das
xorl
cld
inc
xchg
in
out
fstpl
xchg
outsb
adc
xor
add
jle
cmp
enter
sub
jo
adc
lods
cmp
lods
addr16
fsubrl
push
add
loopne
push
shlb
xchg
and
testb
call
cmpsb
adc
fadds
jne
mov
dec
scas
fld
xlat
shrl
mov
ds
leave
jbe
pop
sub
inc
ss
cltd
mov
scas
clc
mov
aas
pop
into
mov
loop
aas
daa
aam
add
leave
out
inc
or
fcoml
mov
push
or
mov
mov
jb
lock
xchg
xor
ret
sbb
add
ljmp
fdivs
jmp
jns
repnz
xor
fwait
or
das
inc
out
sbb
xchg
dec
mov
mov
out
repnz
jae
xlat
pop
jmp
cmp
idivb
test
jp
fstl
pop
lods
jo
in
mov
mov
sub
sub
test
je
rclb
lods
jae
movups
and
inc
mov
insl
mov
loop
in
enter
xchg
in
mov
mov
repz
dec
push
xor
mov
jle
pop
iret
sub
mov
jb
cmpsb
gs
push
leave
push
xlat
ret
dec
js
fistpll
mov
int
inc
daa
js
mov
jae
xchg
in
xor
insb
std
xor
in
test
xchg
sub
test
jp
shl
push
jbe
pop
mov
std
dec
aam
cwtl
xor
dec
nop
fldcw
xchg
ja
das
and
dec
adc
aad
filds
cli
pushf
mov
push
neg
addr16
int
icebp
imul
mov
out
xchg
cmpb
xchg
push
iret
daa
inc
or
outsb
insb
divl
adc
jbe
add
mov
int3
add
aas
push
outsl
daa
das
addr16
push
dec
inc
incb
add
and
ja
xor
pop
jo
movsl
fdivl
push
jg
xchg
mov
jnp
adc
or
inc
xor
ficomps
mov
xor
sub
inc
insb
sbbl
xchg
sub
sub
jno
dec
sarl
fs
cmp
ds
push
jo
mov
call
mov
lea
outsb
lahf
sbb
ljmp
mov
jmp
xor
xlat
fdivrs
jg
push
push
in
in
jmp
cltd
mov
pop
xor
out
mov
add
mov
cmp
adc
push
jns
sub
mov
cs
mov
setns
or
lods
faddl
add
push
mov
pop
mov
jo
pop
adc
lods
lret
or
sub
mov
sbbb
daa
jecxz
adc
dec
xchg
and
push
sar
cmpsb
cmpsb
sbb
mov
sbb
dec
add
jg
pop
and
sarl
dec
or
adc
sti
and
cwtl
xor
and
mov
je
in
push
int
mov
fnstsw
or
push
ret
mov
pop
test
lods
sub
out
xchg
xor
or
fsubs
add
xchg
lds
push
or
lds
repz
hlt
xor
ret
ds
int
addb
sub
movsb
mov
clc
sub
sub
inc
lds
push
jne
dec
pop
cmp
xchg
in
stos
repz
mov
mov
mov
and
gs
insl
mov
push
add
xchg
rcrb
shrl
sub
mov
popa
sbb
add
pop
push
jg
imul
test
fisttpl
xchg
idivb
xchg
or
sub
test
scas
cmc
inc
dec
sbb
push
adc
xchg
push
shll
ja
fdivrl
lret
xchg
adc
ljmp
sbb
dec
mov
jnp
push
cltd
or
stos
sar
or
adc
lcall
ss
mov
loopne
push
fimull
outsb
adc
xor
pop
mov
aam
loope
sbb
sub
sub
in
inc
mov
rcrl
or
dec
mov
cmc
sbb
es
fldl
mov
ret
shrb
outsb
cmp
jmp
mov
mov
cmp
sbb
mov
stos
mov
jo
shll
sbb
das
outsl
repnz
dec
stos
mov
sbb
and
xor
push
daa
mov
movsb
dec
sbbb
fstp
dec
ret
in
movsb
les
bound
mov
imul
cmp
out
lock
pop
adc
stos
rcl
adc
cli
js
cltd
push
mov
pop
sbb
or
push
rorb
lods
lea
cmp
adcl
add
outsb
push
mov
xor
sbb
test
jb
add
in
cmpsl
push
fcmovnbe
push
lock
push
lahf
xchg
bound
mov
test
adc
push
cltd
push
movsb
insl
mov
in
jns
xor
dec
mov
jne
fldt
notb
push
shll
mov
in
daa
push
xor
dec
and
mov
test
pop
mov
stos
out
mov
jge
aad
jnp
cmp
dec
popa
and
fs
pop
loope
fisttpll
scas
cmp
ljmp
jle
push
inc
jg
sbb
and
dec
push
repz
jb
divb
stc
sbb
mov
or
ret
adc
jp
sub
ret
sbb
xchg
adc
popa
mov
lds
fcoms
les
cs
push
add
out
push
mov
js
fnstcw
js
data16
fsubr
dec
jmp
push
xchg
in
and
jns
out
mov
mov
enter
xchg
ret
xor
cmp
out
xor
jp
and
xlat
xchg
insl
mov
repnz
hlt
xor
inc
dec
call
jbe
sti
adc
lods
adcb
cld
push
lcall
std
xchg
fcomp
push
xor
shll
iret
daa
cltd
mov
mov
ljmp
push
shlb
xchg
in
shll
or
or
mov
inc
lret
arpl
xor
mov
lea
mov
jns
mov
in
insl
lret
add
cwtl
imulb
mov
pop
xchg
gs
xchg
gs
cmp
rclb
cmp
ret
pushf
je
movsb
pop
or
mov
add
ja
clc
xchg
rclb
mov
and
call
jne
xchg
mov
mov
cwtl
call
jne,pn
sub
push
cltd
mov
outsb
out
ds
les
adcl
jg
mov
cmp
ja
push
loope
movsb
out
pop
stc
mov
movsl
xor
dec
test
aam
and
jge
aaa
pop
cmpsl
pop
lea
pop
push
jo
mov
and
es
cld
adc
pop
mov
push
dec
sub
and
add
sub
les
add
xor
aam
cli
inc
or
pmuludq
adc
xchg
subb
out
das
fdivs
jg
mov
and
lods
in
ljmp
test
and
cmp
aam
lea
mov
arpl
fiaddl
mov
fucomi
sahf
test
daa
pushf
sbb
pushf
jbe
adc
fs
shld
sbb
add
insl
dec
mov
stos
sub
sub
iret
dec
push
jg
lahf
mov
jae
jg
jae
repnz
pop
loopne
add
ss
mov
shll
arpl
sub
mov
es
les
pushf
ja
mov
loop
lods
aaa
es
lods
mov
popa
push
and
adc
mov
cmp
and
fists
in
xchg
xchg
ja,pn
or
shlb
mov
daa
adc
or
loopne
pusha
add
mov
sub
outsl
and
inc
pop
push
test
jge
pop
adc
icebp
cmp
ret
ljmp
pop
dec
and
jb
int
mov
mov
scas
sbb
cmp
push
dec
fdivs
in
pop
inc
jl
ror
adc
push
ret
pop
mov
and
roll
add
dec
cmp
mov
and
cltd
cltd
into
lods
repnz
sti
popf
loope
mov
and
lods
mov
adc
out
sub
sbb
imul
mov
cmpsb
xor
jns
add
cmp
nop
inc
xorb
mov
sbb
dec
shlb
cmp
sub
repz
adc
gs
mov
or
test
xor
hlt
rcrl
dec
dec
jl
ja
lret
movsb
cwtl
pop
test
dec
aam
ja
ja
das
and
pop
xchg
jo
lods
adc
lcall
call
jno
cmpsl
xchg
sbb
pop
aas
in
fstl
sub
push
nop
cmpsl
jg
loopne
rcr
nop
inc
xchg
xor
and
jnp
fwait
movsb
jecxz
jmp
mov
jge
mov
xchg
mov
jecxz
mov
leave
or
in
mov
in
adc
into
jp
mov
sbb
xchg
xchg
int
xor
stc
adcl
mov
sub
pop
test
movsl
lods
scas
inc
jnp
jb
sub
jmp
mov
loope
mov
jmp
rolb
lock
sub
out
in
pop
xchg
cmp
shr
iret
adc
xchg
pop
call
sbb
out
shlb
cmc
and
and
pop
push
mov
pop
add
xchg
pop
sti
stc
push
inc
push
cwtl
nop
xor
jmp
mov
xor
push
xchg
int
push
jge
adc
push
repz
imul
in
mov
xchg
enter
sbb
mov
addr16
cltd
push
rorl
daa
jge
pop
jb
fildll
in
iret
lock
or
ja
jno
xor
xor
dec
mov
insb
and
jp
daa
pushf
outsl
jge
fwait
mov
inc
lea
ljmp
mov
rclb
mov
mov
hlt
rorb
dec
testb
and
add
mov
dec
loopne
and
fistl
jno
mov
lcall
jno
xchg
cmc
test
and
hlt
and
xlat
js
inc
lret
xchg
stc
clc
push
rcll
in
adc
cld
pop
in
inc
aam
adc
arpl
xchg
js
rcrl
xor
pop
fwait
mov
popa
out
scas
push
orb
mov
cmp
push
xor
lea
outsl
lock
fistpl
mov
loopne
push
loopne
lds
adc
xchg
add
or
push
leave
push
sbbb
dec
gs
bound
mov
mov
jp
adc
lret
in
mov
pop
in
mov
jg
scas
leave
cmp
pushf
ds
mov
sub
int
push
stos
iret
insl
cmp
xor
mov
std
and
dec
inc
adc
pop
mov
les
and
in
pop
sahf
push
cmc
in
inc
xor
cmc
imul
xchg
stos
mov
push
fadds
dec
divl
scas
int
lret
push
stos
dec
std
sbb
orl
sub
adcb
cmpl
shrb
lock
mov
scas
adc
inc
stc
adc
cltd
cld
daa
outsl
push
xor
xchg
sbb
pop
mov
xorl
pop
rorb
and
rcr
lods
mov
jne
loopne
je
out
mov
cld
pop
int
or
cmp
push
inc
sbb
mov
add
aam
push
xor
cmpsl
movsb
insl
fstps
push
and
imul
shrl
loope
xor
ljmp
popl
outsl
sbb
cli
cmpsb
xor
bound
inc
mov
xchg
dec
stos
int3
inc
dec
push
in
xor
jbe
cmp
lea
in
adc
fcomps
jae
sub
ss
pop
xor
cs
adc
fistpll
cld
fs
adc
mov
push
movsl
stos
test
adc
in
in
scas
cmp
test
or
ret
pop
cmp
movsb
insb
hlt
sub
xor
xor
mov
and
mov
mov
out
dec
ret
imul
sahf
cmpsb
outsl
add
cmp
leave
jno
int
xorl
ret
pcmpeqw
dec
in
cmc
rcr
pop
add
les
sub
or
aas
mov
repnz
scas
loope
idivl
add
cmp
xlat
push
in
push
mov
out
test
xor
pop
sub
in
inc
aas
xchg
shrl
cwtl
js
xlat
or
sbb
push
loope
popf
mull
xchg
insl
hlt
and
dec
hlt
ret
jno
add
fwait
and
rcll
adcl
iret
push
inc
pop
lcall
fcmovnbe
hlt
mov
adc
jecxz
jne
pop
jno
jns
lock
dec
sbb
int
mov
iret
dec
jo
mov
std
pslld
sbb
jp
adc
and
popf
cmpsb
mov
popa
sarl
loope
mov
mov
rorb
stos
sbb
rolb
push
or
jae
add
and
je
jge
sahf
lods
sahf
pusha
lret
or
push
js
adc
clc
mov
fs
das
mov
cmp
mov
dec
sub
xchg
test
test
test
nop
sub
loope
loopne
insl
sbb
push
inc
add
dec
dec
dec
push
jns
inc
outsl
push
fs
dec
outsl
sbb
add
add
mov
loopne
ret
xchg
leave
sbb
cmp
sub
aaa
mov
rclb
pop
sub
dec
push
popa
adc
loopne
sbb
ja
dec
out
lods
lods
aam
hlt
rol
inc
or
inc
popf
mov
out
cltd
add
pop
movsl
jmp
test
out
je
add
gs
fistpl
jns
add
sub
testb
fsubrp
movsl
adc
cmp
or
cmp
ja
mov
adc
push
pop
sub
decb
jle
ss
add
dec
clc
loopne
stos
pop
mov
ja
push
and
icebp
stc
icebp
push
and
mov
repnz
xchg
jecxz
repz
push
sub
jle
or
fiaddl
in
adc
sti
outsb
mov
pop
mov
not
mov
punpckhwd
pop
cmp
clc
cmp
scas
jecxz
pop
in
pop
cmpb
xlat
and
stc
test
in
mov
shl
mov
add
and
out
mov
xor
in
pop
aad
test
mov
jno
jne
popa
and
xor
push
call
jmp
dec
cmpsl
jbe
clc
nop
mov
add
jno
inc
movsl
lret
adc
imul
or
dec
lahf
pop
or
and
or
lahf
sub
mov
jle
mov
or
or
or
push
push
faddl
mov
push
inc
sbb
stos
adc
mov
mov
cli
push
inc
outsb
or
cli
fnstsw
dec
cmc
dec
pushf
add
mov
adcb
cli
mov
loopne
mov
and
or
or
bound
adc
or
aaa
mov
test
mov
call
sbb
rcrb
popf
stos
out
push
or
mov
or
lret
inc
clc
test
sbb
xor
push
mov
es
dec
out
aaa
sub
jmp
cmp
fcoml
or
and
jns
cmc
lods
push
dec
popf
dec
jl
lods
decb
movsl
mov
out
cmp
js
iret
cmp
inc
push
int3
lcall
dec
mov
adc
xchg
push
inc
push
jp
lods
movsl
xchg
pop
arpl
pop
push
sbb
sbb
insl
pop
sysret
scas
aam
mov
jmp
dec
jmp
ficoms
nop
int
jbe
inc
stos
and
adc
je
sti
or
imul
lods
cmp
fwait
cmp
inc
mov
pop
lea
mov
dec
loopne
loop
rorl
lods
push
cmpsl
int3
or
ret
into
inc
mov
ror
push
lahf
repz
enter
mov
lock
cmp
and
call
cmp
fsts
ficoml
outsl
scas
fists
adc
hlt
mov
jp
pop
out
add
stos
pop
repnz
test
shlb
pushl
shlb
add
cmp
xlat
or
mov
clc
loop
mov
and
push
mov
filds
push
leave
mov
shr
inc
push
mov
dec
and
mov
sbb
aas
sbb
int3
mov
out
fisttpl
mov
and
inc
jnp
xchg
cmp
mov
xchg
xchg
std
push
loope
mov
jb
pminsw
add
push
sub
add
je
imul
and
adc
xor
shrl
fsubrl
xor
lret
mov
movsl
and
mov
and
push
mov
sbb
inc
stos
and
add
mov
frstor
mov
lcall
add
in
dec
adc
adc
mull
jp
jne
adc
mov
ret
aas
dec
arpl
aaa
xchg
movb
mov
int3
mov
std
sub
dec
in
pusha
sbb
xor
add
add
mov
sti
or
adc
mov
adc
pop
xchg
lds
mov
mov
or
scas
and
push
ret
mov
inc
in
movsl
xor
in
ja
xor
mov
call
inc
fs
in
sbb
out
xor
dec
mov
or
scas
pop
jb
aaa
ret
push
dec
dec
mov
and
mov
inc
das
fcoms
lods
loop
shll
jg
sahf
cmp
pop
push
test
mov
fistps
icebp
pop
testl
lds
cmp
cwtl
frstor
mov
xchg
jne
or
and
stos
out
int
dec
mov
aad
dec
lock
cld
and
cld
cmp
pushf
outsb
mov
lock
push
inc
sti
sti
daa
pop
mov
ret
push
cmp
jns
aad
in
and
dec
test
movsl
sub
dec
stc
rolb
or
fs
cltd
mov
jnp
ljmp
repz
or
enter
mov
inc
sbb
jns
inc
das
cmpb
mov
and
push
hlt
dec
or
add
mov
scas
adc
insl
cltd
mov
push
push
movsl
xor
loopne
fistps
ds
aad
sbb
call
cmc
push
setl
xchg
xchg
jb
sub
adc
mov
idivb
popa
stos
fldcw
movsl
mov
mov
push
mov
lds
das
movsl
outsb
dec
aad
nop
push
aaa
lahf
dec
ficomps
ret
fsubrs
mov
loope
dec
mov
sub
xchg
nop
cmc
hlt
add
mov
pop
cmpsl
jb
js
mov
dec
into
sbb
lods
jnp
daa
sbb
pusha
mov
daa
mov
enter
ja
sub
aaa
leave
push
addr16
out
adc
pop
push
adc
sub
mov
les
mov
sahf
movsl
or
jbe
push
iret
dec
sub
sahf
pushf
and
addl
sbb
shll
adc
pop
push
mov
je,pn
add
push
repz
mov
and
mov
xchg
mov
pusha
ss
push
cmp
xlat
jle
inc
iret
mov
loop
jp
loopne
mov
loop
dec
cmp
imul
andl
and
enter
cmp
mov
cmp
add
ds
pushf
fstps
dec
cltd
nop
dec
inc
sub
fld
mov
xchg
subl
mov
testl
pop
cld
pop
sarl
out
jle
and
movsb
adc
daa
push
push
or
cmp
daa
fs
cmp
sbb
mov
dec
lods
ucomiss
dec
pusha
mov
jmp
dec
and
adc
orb
dec
insl
sbb
cmpsb
add
push
gs
ret
movsb
shrb
lret
mov
xor
jecxz
cmpsl
push
scas
xor
xor
sbb
pop
mov
cmp
add
lods
sub
push
mov
inc
xchg
cwtl
arpl
cmp
shlb
push
and
pop
lods
xor
sbb
loop
or
mov
mov
xlat
mov
pop
dec
cld
add
inc
lret
cld
fildll
sti
or
jnp
adc
loop
xchg
xor
xchg
jns
sarb
and
ja
push
in
xchg
ret
push
imul
pop
or
test
push
stos
dec
int
cmpsb
movsl
test
lock
dec
jnp
scas
xchg
jl
pop
and
cmpb
sub
mov
bound
sbb
push
mov
xchg
mov
push
enter
leave
and
js
xchg
add
jbe
xor
jp
xlat
lea
sub
inc
cmp
mov
mov
les
std
mov
xlat
pop
and
cmp
decb
popf
dec
iret
dec
test
sub
mov
sbb
push
das
add
mov
pop
and
push
fmull
pusha
add
mov
push
push
inc
insl
or
pop
adc
and
orl
sbb
cmc
pop
add
call
fiadds
negl
add
cmp
dec
les
cmp
scas
push
add
sbb
fdivr
mov
fnsave
out
pusha
sbb
iret
pop
loop
addr16
lcall
mov
shlb
push
pop
notb
outsb
jnp
cld
xchg
mov
sahf
lahf
pop
jmp
mov
int3
in
flds
mov
outsl
std
lods
inc
int
sub
in
mov
jne
push
cmp
hlt
sahf
xor
ret
cld
daa
addr16
repnz
lret
inc
inc
adc
adc
inc
lret
das
lock
add
xor
jne
data16
shlb
btr
rcrl
xchg
mov
lcall
jo
xchg
test
addb
lea
repz
pop
inc
cmpsb
jmp
jle
sahf
iret
cmc
lods
clc
jmp
into
push
mov
push
sbb
cmp
xchg
cmpb
scas
push
pop
dec
mov
mov
xchg
dec
dec
imul
stos
cmc
mov
lcall
fdivl
mov
sub
ret
fwait
push
pop
xchg
lea
mull
mov
push
outsl
sbb
fwait
scas
mov
test
xlat
iret
adc
or
lcall
clc
repz
inc
mov
fcmovnb
mov
stos
int3
mov
mov
out
jmp
inc
ljmp
jmp
pop
inc
mov
sarb
push
decb
mov
xchg
push
mov
sbb
pop
je
or
mov
inc
ds
cltd
inc
and
jbe
jbe
movsl
fldcw
sbb
xchg
fnsave
sti
inc
je
xchg
inc
addb
fwait
mov
fsubrs
mov
dec
cmp
daa
std
mov
jo
dec
pushl
push
adc
arpl
sbb
mov
jle
mov
pusha
lea
push
mov
xor
fdivrs
sbb
mov
jecxz
or
pushl
fsubrs
lock
fsts
popl
sbb
adc
das
mov
pop
punpckldq
mov
gs
dec
fs
and
insl
fstpt
out
xchg
xor
xchg
jo
push
add
add
aam
into
xorb
jb
sbb
add
lret
jnp
push
xor
sub
shr
or
fisttpll
push
jns
push
mov
imul
or
pop
or
xor
adc
popa
mov
repz
mov
aaa
adc
dec
cmpsl
leave
cmp
jp
push
push
xor
push
cmp
loope
repnz
mov
or
inc
mov
mov
loopne
cmpsl
sbb
loopne
pop
pop
movsl
stos
jne
lret
aaa
into
adc
jb
ret
inc
sbb
inc
int3
inc
sahf
inc
sbb
cmpsl
mov
cli
jns
pushf
test
xor
jno
sub
and
push
mov
iret
xchg
sub
mov
ss
clc
push
xor
xchg
sahf
xor
rcrl
mov
call
sbb
enter
fbld
lcall
push
shll
outsb
jmp
int3
mov
xchg
out
hlt
and
xchg
or
and
inc
pop
out
pusha
bound
test
inc
sar
adc
imul
inc
stos
pop
fwait
addr16
sub
jle
ror
cmpsb
loop
nop
rol
xchg
xor
mov
jecxz
xchg
add
pop
loopne
jae
mov
and
push
test
mov
jp
fsub
cli
fadd
jg
inc
fwait
xor
mov
flds
repz
cmpl
test
push
xchg
sub
pop
sub
lds
mov
jno
and
sub
in
ret
fwait
insl
inc
dec
xchg
mov
gs
aaa
decb
mov
xchg
add
xor
push
pop
mov
mov
mov
cmp
mov
mov
and
lahf
fldcw
repz
or
in
scas
pushf
sbb
gs
std
fsubl
dec
mov
lret
inc
loope
xor
shll
mov
jl
jge
xor
cmp
dec
enter
fistl
loop
loope
repz
mov
jb
sbb
and
mov
retw
mov
test
or
enter
arpl
std
add
or
mov
jmp
popf
add
inc
cmp
ljmp
sub
sti
lods
ljmp
pop
cld
bound
sbb
cltd
aaa
pop
or
jno
arpl
xchg
and
ror
mov
syscall
add
adc
cmpsb
cmp
or
push
les
lods
add
shl
sbb
rorb
clc
mov
mov
sub
ffree
cmpsl
xchg
cmp
inc
fildl
pop
jno
cwtl
push
pop
hlt
pop
icebp
xlat
pop
clc
incb
out
imul
push
je
test
inc
xor
sub
add
js
push
scas
mov
pop
adc
jne
out
adc
jo
insb
sti
or
fdiv
ret
fadd
mov
scas
jno
jge
jp
popf
outsl
mov
sbb
test
add
mov
daa
in
into
mov
ja
sub
jge
cmp
pop
mov
cmp
sub
push
orl
cs
sbb
add
nop
test
scas
dec
xchg
sbbl
or
insb
js
mov
das
clc
lods
insb
rorl
adc
pop
mov
pextrw
mov
clc
jbe
xlat
cmp
xlat
arpl
rorb
xor
fwait
rolb
lret
lret
notb
mov
inc
repz
scas
test
inc
jl
cmc
dec
mov
int3
dec
aas
cltd
xor
jne
mov
lret
aam
fadds
sahf
pop
mov
lahf
jbe
test
imul
pop
push
lds
cltd
lods
lret
pop
dec
mov
mov
push
push
call
jge
dec
pop
fstpt
and
insl
shrb
or
xor
movl
sbb
inc
test
addr16
jle
jbe
sub
mov
push
adc
and
sbb
int
repnz
lret
push
andb
pop
push
les
sti
fldenv
cmp
arpl
dec
jl
pop
ljmp
rcrb
adc
loopne
xor
test
dec
push
leave
sub
or
das
mov
std
adc
adc
lret
push
push
sti
dec
dec
or
xchg
andl
jb
mov
in
dec
pop
lea
imul
fcmovnbe
mov
les
jle
js
push
shl
gs
out
xchg
psrld
adc
sti
test
mov
sahf
out
stc
into
xor
mov
scas
call
stos
adc
mov
jge
fld
icebp
mov
cld
xor
clc
adc
cs
pop
sub
mov
dec
les
pop
int
xlat
push
jl
add
xor
jns
mov
aas
pushf
mov
push
mov
or
pop
mov
inc
sub
aas
sub
movsl
inc
mov
sbb
pop
outsl
cmp
jno
mov
pop
xor
inc
xor
fstl
inc
push
sub
mov
dec
dec
pop
in
fwait
mov
flds
mov
xor
mov
sbb
movsb
cmpsl
aaa
adc
lds
mov
cmpsl
push
fdivl
mov
icebp
sbb
jge
sbb
pop
push
or
dec
enter
lea
xor
les
or
xor
dec
or
loop
cmpsl
insb
push
mov
daa
push
mov
mov
or
jp
cmp
ja
xchg
fsubrl
mov
sahf
mov
inc
or
xor
adc
add
push
cmpsb
jno
sbb
aas
mov
push
pop
int
insb
in
and
cld
sub
xchg
jmp
push
jp
or
in
pushf
lea
mov
pop
xchg
in
ret
xchg
ret
scas
in
rol
scas
lret
adc
mov
jmp
fst
push
into
movsb
cmp
xchg
sub
cmpsb
div
and
dec
cs
icebp
push
xlat
nop
pushf
dec
and
sub
movsl
cmpsb
gs
fistpll
pop
xchg
push
xchg
mov
jecxz
or
mov
dec
outsl
mov
push
dec
mov
sub
sub
sub
popf
leave
fstpl
in
pop
xchg
push
xchg
loope
nop
daa
lret
xor
mov
adc
cmpsb
repz
mov
pop
xor
fnstenv
and
movsl
pop
and
ja
cmp
pusha
mov
sbb
xchg
ds
iret
sub
cmp
js
ljmp
loop
push
out
aaa
not
orb
enter
pop
lahf
cmp
lahf
sub
xor
js
pop
xchg
subb
fwait
je
shrb
jmp
and
mov
dec
popf
jae
into
push
cmp
stos
movsl
out
jno
add
xchg
aaa
cmp
sbb
loopne
in
js
add
fnstcw
daa
jns
in
fisttpll
ljmp
out
jae
jb
sub
inc
push
xchg
in
cmc
dec
scas
jb
push
popl
in
pop
jb
fidivs
mov
outsl
lret
fldl
jge
and
jg
das
fs
je
stc
jl
popa
pop
mov
shrl
lock
mov
int3
enter
mov
call
sbb
xchg
xchg
int
dec
xchg
cmp
bound
xchg
mov
pop
dec
scas
ja
shll
adc
mov
mov
subl
dec
movsl
sbb
ret
jne
fsubrs
pusha
and
aam
sub
incb
cmp
inc
pop
out
ss
jmp
cmp
mov
xorl
add
add
push
inc
out
mov
in
xchg
xor
lcall
imul
sub
inc
xor
or
aad
adc
insb
stc
ret
nop
pop
lret
inc
mov
xor
popa
sbb
daa
shll
mov
jmp
xchg
mov
or
push
fisttps
push
es
add
call
test
lods
xchg
pusha
xlat
pop
push
sub
mov
in
shr
pushf
repnz
or
rcll
loope
test
adc
lret
adc
mov
mov
lret
fsubr
pop
dec
cmpsl
cmp
add
stc
cmpsb
sbb
inc
lock
push
dec
repz
outsl
mov
imul
adc
push
adc
sbb
sbb
addb
js
dec
dec
add
das
mov
leave
add
mov
sarb
enter
fsubl
pop
jb
shrb
jp
xor
hlt
pop
mov
pop
or
cmp
mov
aad
sahf
pop
xor
rorb
mov
cltd
mov
outsl
lahf
push
or
js
push
cli
lods
out
cmp
std
popa
push
ret
out
mov
cli
int3
adc
dec
mov
dec
jg
lret
push
add
outsl
loope
mov
and
lcall
xchg
test
inc
iret
ljmp
icebp
sahf
pop
jg
adc
xlat
mov
and
jbe
cmp
jnp
cmpsl
ret
inc
ss
mov
cmp
xchg
testl
call
mov
in
fidivs
shlb
mov
lahf
push
mov
call
movsb
popa
push
dec
hlt
xchg
test
shl
add
scas
pusha
inc
in
dec
add
cltd
xor
push
xchg
mov
xchg
popa
out
and
les
cmpb
xor
push
push
lcall
ror
push
bound
sti
data16
sub
jle
mov
mov
ljmp
xlat
scas
jp
lods
jle
les
add
adc
xor
dec
ret
inc
add
pop
and
sbb
mov
movsbl
mov
push
inc
scas
arpl
movsl
push
shlb
fdivr
adc
insb
mov
mov
cmpsl
add
xchg
loop
push
mov
test
data16
inc
cmp
movsl
fiaddl
jg
movsb
rolb
cltd
stc
in
stc
jae
mov
or
sti
es
ficoms
scas
and
idivl
pop
or
add
icebp
inc
ss
adc
push
sbb
cwtl
cmp
clc
mov
adc
xor
call
lahf
pop
mov
les
mov
test
mov
mov
jl
test
aas
lcall
push
movb
mov
push
lods
xor
sub
pop
dec
out
add
mov
jae
jp
xor
pop
xchg
jnp
jp
jns
mov
mov
mov
pop
pop
add
scas
dec
fwait
into
aaa
les
movsb
daa
sahf
push
jno
out
cltd
push
push
adc
lcall
mov
stos
add
add
in
jne
push
movsb
push
scas
dec
in
fadd
inc
bound
push
xor
pop
pop
and
pop
inc
xchg
ss
xchg
sbb
test
mov
pop
mov
iret
xor
mov
ss
test
push
inc
hlt
push
jl
pop
sub
adcl
sti
stc
cld
push
jb
xlat
in
in
fildl
test
or
sub
or
rcl
jno
js
out
sbb
sbb
in
dec
xchg
push
popf
cltd
popf
sahf
pop
ljmp
jecxz
adc
mov
mov
ds
sbb
arpl
mov
pushf
sbb
mov
adc
jo
jecxz
call
scas
cwtl
lahf
jmp
dec
lcall
mov
inc
outsb
aam
inc
sub
and
and
inc
mov
pusha
arpl
lret
fistl
sub
push
stos
push
inc
mov
and
es
jecxz
mov
cmp
mov
xchg
cmpsl
add
xor
loope
jmp
jmp
push
out
dec
jo
mov
test
push
loope
in
in
sbb
xor
jno
bound
xlat
ljmp
xchg
sbb
cld
sbb
clc
sarb
push
fs
xor
jns
pop
push
jnp
push
loopne
aam
outsb
mov
negb
fnstcw
cli
mov
shlb
xchg
lret
xor
or
dec
jb
cvtdq2ps
cmc
jno
sbb
cmp
addr16
outsb
sbb
sub
push
rolb
or
into
lret
mov
push
xchg
shrb
aaa
jne
test
xor
xor
pop
aas
outsb
or
adc
pop
mov
mov
or
xchg
pop
stos
dec
pop
subl
insb
cmp
dec
and
loop
push
pop
cmpsl
xlat
pop
jl
add
xchg
mov
jne
test
sbb
xor
rcl
jne
add
jge
dec
into
sbb
aam
sub
stos
cltd
fs
nop
stc
loop
pop
mov
imulb
les
jne
jmp
and
push
into
jns
mov
xor
fimuls
mov
add
fnstsw
mov
push
icebp
pop
test
adc
bound
xchg
fnstenv
xchg
dec
pop
push
rol
movsb
loopne
addr16
add
aaa
pushf
mov
and
pop
cmp
pop
mov
fimull
data16
sub
data16
mov
pop
sarl
cmp
xor
cs
push
jo
popa
test
loope
adc
stos
xor
addr16
out
fwait
xor
sbb
sti
popl
movsb
inc
shrb
js
xchg
call
js
sbb
mov
rcl
pushl
or
mov
xlat
pop
sahf
aad
xchg
mov
sbb
lret
pop
jo
je
and
inc
addr16
adc
inc
xor
jo
movw
adc
cld
pop
dec
cmpsb
jp
jp
adc
cli
mov
lods
clc
es
out
js
loop
mov
data16
lret
mov
stos
xchg
inc
clc
leave
mov
out
out
lret
outsb
push
imul
pop
cltd
cmp
xor
jle
xlat
lds
jp
mov
stos
xchg
aaa
scas
mov
mov
mov
xchg
xor
daa
sbb
insb
lret
insb
loop
cmc
xor
ret
and
repnz
fnstenv
das
fidivrl
add
les
sub
imul
mov
or
ja
mov
jp
xchg
rorl
jbe
movsl
or
xlat
shrl
mov
lcall
ret
andl
mov
fcoml
jl
pop
rclb
imul
cmp
mov
and
int
pop
stc
xor
mov
imul
mov
pop
leave
xchg
enter
ja
dec
lret
mov
xor
pop
loopne
cmpsl
jge
add
jecxz
mov
jecxz
mov
add
mov
mov
ds
or
mov
jno
cmp
mov
in
or
add
push
mov
shl
mov
sbb
out
fdivrs
or
daa
push
jb
in
sub
cld
jmp
mov
aas
int
push
dec
pmullw
cs
sub
mov
pop
mov
popf
jmp
push
sub
sub
test
jo
int
dec
scas
or
bound
imull
sbb
jo
jne
pop
pusha
push
out
out
and
stc
test
into
inc
jle
add
lock
jl
out
sbb
mov
lret
test
or
mov
imul
jne
cmp
sub
outsb
aad
lods
test
ret
hlt
xor
loop
mov
sub
lock
cmc
mov
cmpb
sub
mov
lods
pop
cmpsb
push
dec
adc
add
lea
fisubrs
scas
sti
inc
ret
stc
js
jbe
jo
sub
shrd
sti
mov
mov
mov
cmpsb
stos
cltd
sbb
bound
sub
mov
cltd
cmc
int3
mov
lock
insl
addr16
mov
adc
sub
movsl
xlat
inc
push
jns
adc
daa
sarb
lods
sub
xchg
push
sbb
icebp
inc
jnp
in
dec
rcr
dec
jb
stc
adc
inc
add
cmc
xchg
cli
ret
xor
loop
mov
xchg
sahf
lea
add
jl
push
jle
std
mov
repnz
push
andps
lds
cld
les
dec
rcll
dec
sbbl
dec
fwait
hlt
lds
push
stc
out
test
stos
and
pusha
loope
push
inc
fmuls
mov
sbb
jae
cld
cli
insb
mov
xlat
mov
cld
loope
lcall
pop
cmpsb
pop
inc
jp
sbb
aam
cltd
fcomps
or
xchg
out
jae
mov
dec
jne
jp
and
rcrl
rcll
xor
jb
nop
sub
in
jns
mov
loop
pop
mov
mov
inc
xor
call
add
add
ds
push
outsb
pop
push
leave
adc
call
test
inc
insl
addr16
mov
xchg
and
lock
pop
mov
inc
sbb
sbb
cld
in
je
sub
dec
popf
jge
mov
lds
scas
cli
sbb
pop
mov
cmp
push
mov
dec
stc
cli
cwtl
fwait
mov
dec
sbb
cwtl
std
jne
shrb
xor
push
std
je
mov
dec
in
jp
jne
movsb
pushf
roll
movsb
xlat
mov
es
push
aam
mov
mov
stos
fmuls
mov
popf
arpl
jl
in
fwait
es
mov
mov
push
addr16
rol
dec
sbb
push
jo
or
das
mov
cmp
push
aam
mov
mov
sbb
negl
xchg
repnz
iret
enter
andl
dec
cli
xlat
test
xchg
pop
paddsw
nop
ds
mov
push
loopne
imul
lods
aam
enter
cmpsb
push
rclb
or
jb
and
imul
das
ljmp
and
xchg
call
dec
jne
lahf
fiadds
sub
jne
xchg
sub
jae
xor
bound
push
loop
mov
mov
js
mov
push
mov
mov
mov
or
mov
in
imull
mov
loop
add
addl
lcall
loope
mov
or
enter
xchg
mov
and
sub
mov
out
aaa
rcrl
xor
mov
mov
les
xchg
push
stos
mov
or
jo
mov
push
mov
cmpl
push
mov
xchg
inc
jb
pop
outsb
xchg
mov
sbb
cmp
sarl
pusha
test
push
or
mov
rol
xor
inc
cmpsb
aaa
dec
pop
lahf
push
xlat
jle
cmpsb
leave
xor
repnz
in
test
shrl
in
mov
ret
sbb
ret
xchg
pop
hlt
fsubrs
sub
cli
jno
gs
cmc
cmp
movsb
xchg
push
iret
ja
insl
outsl
outsl
sub
sbbl
imul
xor
adc
mov
jns
mov
cwtl
sbb
pop
dec
add
xchg
icebp
push
into
jmp
mov
mov
xchg
sbb
popa
roll
stos
add
shlb
cmpl
int
imul
leave
adc
jmp
add
imul
dec
mov
sbb
in
adc
dec
adc
cltd
xor
or
lret
aas
jmp
data16
pop
dec
xlat
stc
dec
enter
subl
scas
sbb
lea
lret
repz
cltd
jne
aam
push
lods
repz
dec
lea
shrl
jg
or
cmp
xlat
stc
add
fdiv
mov
clc
xor
fstps
push
mov
add
jl
clc
mov
andl
call
stos
xor
test
daa
push
inc
dec
int
into
gs
xor
xchg
lahf
mov
push
pop
and
loop
movsb
inc
pop
pop
dec
fwait
out
in
xor
scas
cmp
nop
pushf
add
data16
iret
cmpsb
adc
push
pop
or
std
cmp
jg
adc
fmulp
ss
adc
sub
test
xor
in
mov
dec
push
add
cmc
pop
ss
adc
loope
aas
mov
movmskps
sti
xor
push
jnp
fnstsw
inc
xchg
fistpll
xchg
or
mov
adc
sbb
pop
inc
cmp
inc
cmp
pop
sbb
add
inc
cld
lret
outsb
imul
mov
xor
mov
cli
sahf
call
insb
out
dec
mov
das
test
jle
adc
jg
mov
jnp
cmp
push
push
enter
and
fs
mov
jae
xchg
dec
idiv
out
shr
shrb
orl
stos
pop
test
mov
xchg
cmp
dec
sub
mov
sbb
mov
xor
push
iret
or
adc
cli
xor
sub
xor
mov
push
sbb
xor
add
shlb
dec
and
jmp
sub
sbb
jmp
push
jle
push
xor
dec
mov
pusha
mov
mov
and
ss
cli
minps
mov
popa
inc
inc
mov
cmpl
pop
out
jno
lock
repnz
xchg
push
cltd
dec
dec
add
mov
cmp
lods
in
pop
inc
xchg
in
bound
cmc
mov
xchg
lea
jl
mov
loopne
daa
pop
lods
stos
push
loope
jg
push
movsl
ljmp
ja
jecxz
adc
jl
mov
sbb
dec
sarl
imulb
icebp
out
jle
dec
stos
fildl
cmp
fnsetpm(287
mov
dec
iret
push
cmpsl
lods
jecxz
in
ds
in
enter
popf
jecxz
mov
shll
cmp
setnp
sub
jo
jmp
cmp
filds
idivl
adc
ss
add
in
fstpt
or
out
lret
add
push
adc
dec
jl
push
je
shll
or
icebp
sub
adcb
rcll
fimull
jmp
out
add
dec
rol
aas
push
lds
xchg
add
iret
into
daa
mov
cmc
ja
push
test
mov
lahf
xchg
dec
cmp
fwait
jns
lea
add
cmp
pop
xchg
hlt
hlt
and
iret
test
js
adc
mov
sub
mov
iret
or
ja
popa
or
adc
test
jnp
fldl
jbe
pop
xor
jb
dec
leave
test
add
dec
cmp
insl
fists
xchg
ss
dec
lret
mov
cli
fildl
sbbb
inc
test
mov
xchg
push
and
sbb
shlb
push
sbb
mov
inc
xchg
sub
icebp
data16
push
cmp
std
ds
repnz
xor
rclb
adc
push
xor
xchg
cmp
mov
insb
in
inc
out
out
out
mov
jl
and
cmpsb
repz
xor
dec
add
in
mov
mov
dec
lahf
mov
add
add
adc
fiaddl
jle
add
pop
or
xor
aam
lcall
cmp
repnz
mov
xchg
notl
mov
pop
enter
lock
out
jnp
and
aaa
add
push
xchg
pop
mov
cmp
lea
and
lret
dec
nop
xlat
pop
jbe
fidivl
cld
es
insb
test
push
movsl
adc
cwtl
xor
add
lcall
aam
dec
xchg
add
scas
roll
or
jo
sbb
frstor
and
mov
ror
sbb
stos
out
out
pop
add
inc
cmp
repz
pushf
xchg
in
sub
sub
xchg
and
mov
mov
push
aam
xchg
adc
pop
and
push
cli
sbb
lret
sub
jns
and
dec
movsl
push
sub
daa
xchg
mov
cld
push
lock
mov
add
mov
aaa
shrb
test
add
stos
mov
or
into
push
push
das
test
aam
out
negl
aaa
scas
shrb
test
aaa
jbe
dec
jne
sbb
jg
add
lds
test
shlb
scas
pop
xchg
sub
jne
xor
jb
aam
xchg
inc
scas
test
in
and
jbe
mov
mov
rcrb
pop
mov
ret
dec
add
fisttps
and
inc
sbb
xchg
insb
mov
aam
xchg
in
mov
xchg
adc
clc
pusha
xor
sub
mov
cmp
sub
pop
xor
sbb
pushf
fcompl
pusha
pop
pushf
add
sbb
lock
bound
pop
cmp
shrb
or
mov
adc
lds
jne
rorb
std
sbb
idivl
jo
mov
xlat
cmp
add
sub
or
roll
out
push
in
les
fildll
call
dec
and
xor
push
fs
idiv
mov
push
fisubl
imul
mov
test
cmp
mov
sub
mov
push
sarb
test
sbb
icebp
mov
cs
add
dec
add
xchg
pop
mov
xchg
xchg
pop
sub
xor
inc
and
jl
pop
cmp
dec
pop
or
pop
push
daa
sahf
into
or
icebp
jo
hlt
xchg
pop
mov
stos
cmpsb
or
ret
mov
fistpll
lea
or
imul
cld
int
pop
ds
stc
lds
pop
lock
popf
in
into
mov
mov
aam
jmp
es
jmp
popf
insb
fisubs
sar
push
and
xchg
lret
gs
sub
ljmp
in
pushl
and
mov
mov
adc
mov
add
mov
inc
popf
pop
sarl
sub
mov
inc
sub
cltd
and
stc
arpl
pop
icebp
push
pop
sub
cmpl
lret
mov
mov
xchg
mov
mov
cmpsl
push
and
jae
stos
inc
xor
adc
lods
mov
xor
push
add
lods
outsl
ficoms
ja
add
cmp
mov
test
shrb
or
call
and
sbb
cmpsl
sub
pop
pandn
dec
std
inc
das
aam
dec
adc
hlt
mov
nop
jmp
aad
out
mov
sub
jb
jecxz
jle
add
ljmp
in
call
stos
xchg
dec
test
xchg
jno
imul
mov
xor
sti
stos
dec
xlat
fneni(8087
xor
out
adc
mov
mov
dec
lea
inc
jge
iret
mov
adc
mov
nop
cwtl
out
push
mov
cltd
or
gs
or
sahf
add
fsubrl
int3
pop
push
cmpsl
jmp
sarl
imul
lea
jo
into
mov
pop
jbe
mov
mov
adc
rcll
sub
loope
js
in
pop
push
or
notb
pop
push
lods
ds
sarl
mov
add
mov
mov
or
mov
dec
mov
in
movsb
daa
lock
test
test
ss
mov
inc
movsb
jne
sbb
xchg
inc
push
cltd
mov
dec
iret
jg
stc
je
test
xor
mov
mov
je
and
adc
mov
mov
add
push
mov
aas
in
dec
mov
nop
mov
mov
scas
jae
mov
and
leave
jmp
or
pop
mov
dec
and
adc
jl
push
dec
mov
mov
inc
das
push
xchg
sub
stos
fwait
pusha
pushf
or
repz
inc
stc
or
mov
rclb
mov
mov
mov
es
popf
testl
stos
xor
mov
sub
insl
pand
pop
cmp
arpl
loopne
pushf
scas
stos
sub
cli
sbb
dec
xor
out
mov
cmp
jp
sbb
jnp
add
outsl
jle
mov
adc
pop
popa
pop
pop
xlat
jg
and
es
pop
pushf
or
data16
je
sub
lret
rorl
sub
xchg
test
mov
test
sti
xor
or
stc
push
fucomi
push
and
jecxz
orb
xchg
pop
xchg
mov
ss
stos
sub
es
sbb
xchg
inc
js
jno
mov
pop
mov
jnp
in
sub
dec
push
jno
inc
rorl
mov
mov
bt
mov
push
loopne
jns
sub
xchg
shlb
jno
xor
and
mov
jp
insb
in
andb
dec
xor
pop
xor
jae
faddp
sbb
mov
pusha
mov
mov
push
lret
scas
adc
adc
into
mov
or
scas
ds
push
es
fldt
lock
int3
xchg
stos
pop
out
les
mov
cwtl
mov
shrw
or
lret
mov
outsl
icebp
or
das
stc
inc
cmc
sbb
es
mov
adc
aaa
scas
int3
push
push
jb
mov
cmpsb
fidivrl
xchg
pusha
pop
pusha
outsl
outsb
inc
xchg
ss
mov
dec
clc
add
mov
push
ret
or
cmpsl
pop
test
xchg
ffree
arpl
pop
outsb
sbb
pop
stc
je
ds
stos
sahf
out
sub
popf
das
sti
xor
push
mov
flds
aad
outsl
lret
jmp
xchg
movsl
shlb
pop
outsb
incb
inc
jle
and
in
mov
push
pop
mov
cmpsl
sub
xchg
scas
jne
add
movsb
in
scas
nop
bnd
xor
inc
and
mov
outsb
int3
jae
ss
cmp
sub
ret
xorb
pop
xor
mov
mov
sbb
jns
adc
ja
enter
mov
adc
cmpsl
mov
add
sbb
mov
jmp
jne
jnp
push
dec
imul
mov
addr16
inc
push
mov
inc
sarb
fs
adc
mov
vmwrite
lods
or
stos
xchg
leave
pop
pop
js
lods
xor
xchg
dec
pop
xor
fsubp
dec
inc
mov
sbbb
ret
xchg
cwtl
test
xchg
aas
jae
out
fwait
adc
test
mov
pop
mov
mov
test
or
sbb
nop
cmp
cmc
and
mov
pop
nop
addl
les
in
adc
in
sbb
mov
jge
cmp
fistpll
mov
mov
xchg
xchg
cmpsl
or
movsl
fwait
jecxz
adc
arpl
popf
add
testb
ljmp
push
push
add
inc
mov
popa
cmc
je
pop
cmp
jg
sub
and
imul
push
inc
stos
sbb
push
inc
dec
xchg
les
jbe
sti
stos
xchg
wbinvd
rep
pusha
and
movsb
mov
sub
in
and
adc
mov
js
into
into
movsl
rorb
out
out
sbb
out
add
mov
cmpb
xor
pop
xchg
mov
bound
shrl
ret
dec
aad
repz
cld
xchg
xchg
and
inc
dec
inc
pop
fstp
sub
cltd
jmp
mov
in
pop
jg
sti
ret
std
and
jle
sub
xchg
test
xchg
dec
mov
scas
lods
loopne
lcall
adc
cmp
out
test
stc
mov
sbb
cmp
pop
lret
dec
fisttpll
pusha
aas
out
gs
imul
rsqrtps
cmp
outsb
inc
rcrl
jg
loopne
sbb
shrb
jl
movsl
rcll
mov
sahf
sti
add
sub
jmp
rcr
xchg
inc
push
ret
sti
xchg
lds
adc
add
mov
mov
jo
mov
push
sub
sahf
push
out
mov
dec
andb
xchg
add
fildl
cmp
call
div
sbbl
shrb
sbb
mov
sub
mov
pop
xchg
xor
stos
pop
lahf
xor
or
inc
xchg
xor
mov
push
push
mov
adc
sahf
push
popa
rolb
pop
and
and
and
cmp
aas
movsb
and
cwtl
cmpsl
mov
lcall
lahf
mov
outsb
ds
loopne
mov
add
push
adc
into
or
dec
cltd
mov
xchg
xor
clc
or
les
pop
add
mov
cmp
jns
xchg
mov
and
bound
stos
and
ret
push
cmpsl
push
or
jbe
sub
lods
fsts
xchg
xchg
jno
rolb
jnp
orb
jl
test
mov
cltd
sbb
shll
out
push
jno
and
or
inc
mov
in
sbb
imul
xchg
jae
or
and
xchg
cmpsb
clc
aaa
shrb
fwait
test
rcl
dec
cmp
add
test
mov
sahf
mov
mov
xor
jnp
adc
mov
dec
rcr
int3
shl
inc
cmp
aam
jns
adc
inc
loop
das
sahf
shrb
int
and
push
adc
mov
cmp
adcb
fsubrl
arpl
out
push
push
or
and
xchg
fists
sub
hlt
lahf
mov
jecxz
xchg
aaa
pop
movsl
jbe
sbb
inc
jmp
in
stc
add
mov
mov
sub
push
mov
push
sbb
insb
lea
dec
lds
in
pop
loopne
lret
rcl
adc
adc
mov
roll
mov
dec
push
iret
push
xchg
test
jp
jno
mov
es
add
sbb
mov
ds
into
cwtl
jle
out
mov
loope
fistpll
add
popa
js
cld
inc
aas
add
push
icebp
sbb
jp
cmp
mov
inc
push
and
aas
ret
cs
sub
inc
adc
add
xchg
popf
and
push
jne
dec
mov
roll
cmp
out
pusha
sub
adc
xchg
jno,pn
sub
add
pushf
or
lods
test
xor
pop
aaa
int3
inc
xchg
idivb
jl
sub
push
mov
out
mov
aam
mov
stc
xor
cwtl
test
lcall
and
cwtl
cmp
pop
lods
in
in
add
cs
mov
out
adc
jne
in
xchg
cmp
jge
push
mov
cmp
aam
lahf
sub
or
pusha
mull
jecxz
push
insb
in
jbe
cmp
and
mov
mov
es
dec
pusha
mov
mov
jp
mov
mov
and
push
jo
push
add
xchg
inc
add
subb
je
hlt
push
cmc
and
pop
test
xor
xor
lds
sub
jecxz
jecxz
out
xchg
shlb
adc
sbb
ficompl
lret
push
sub
mov
fwait
out
sahf
ljmp
hlt
jmp
andl
lret
push
jge
sbb
dec
pop
mov
adc
and
mov
fdiv
xor
add
inc
pop
cmp
sub
inc
pop
mov
push
jb
push
ss
pop
and
adc
out
mov
xor
xor
jmp
daa
cmp
stos
adc
xor
xchg
ret
or
sbb
mov
dec
push
ret
ljmp
data16
fistl
addr16
sbb
push
hlt
xor
add
push
fwait
and
jbe
sub
or
gs
dec
or
xchg
sahf
cmp
sbb
xchg
adc
fidivs
push
dec
or
mov
sub
rorb
addb
cmpsb
inc
jbe
int
sub
pop
jl
mov
adc
mov
data16
in
imul
inc
xor
jle
and
add
into
in
cmp
popf
jno
adc
pop
fcmovne
or
cmp
and
call
push
xchg
pop
mov
stos
bound
push
fmuls
ffree
jae
in
xchg
insl
cmc
fnsave
aaa
add
aaa
pushl
xchg
fldt
fildl
jge
aam
dec
add
cmp
mul
sub
xor
daa
fistpl
adc
subb
pop
xor
js
push
inc
jecxz
dec
dec
xchg
inc
add
xchg
pop
sarb
cli
pop
nop
mov
mov
xchg
call
and
push
out
in
mov
in
xchg
dec
mov
rolb
pop
cmc
fst
in
aad
ja
xchg
mov
jle
clc
mov
lds
adc
add
mov
sub
cmp
imul
int
shrb
pop
and
stc
xchg
mov
jnp
dec
loop
mov
sbb
sub
sti
js
popf
fiadds
mov
insb
repz
loopne
sahf
fstpl
movsl
jg
mov
dec
or
cmc
dec
xor
pop
fldt
popa
or
fildl
jge
push
jp
xor
stos
add
push
mov
mov
xor
call
ja
fistpl
and
mov
fdivs
cmp
jmp
sahf
mov
ret
xchg
dec
push
ljmp
adc
mov
xchg
push
jecxz
call
test
mov
pop
mov
lods
fsubs
cwtl
popa
jo
or
jmp
mov
sbb
jo
aaa
push
icebp
sub
mov
sbb
test
xlat
and
cmp
pushf
lret
scas
jae
in
or
sub
jl
mov
and
sbb
sbb
or
push
push
xchg
dec
scas
fwait
sub
fldl
sbb
clc
adcl
jecxz
pop
fdivrl
adc
cmc
inc
ljmp
sar
or
inc
pop
dec
inc
cmpsl
fbld
xor
mov
pop
dec
jno
mov
mov
fisubl
cmc
jge
int3
in
ds
sahf
loop
mov
lods
push
cmp
adc
push
mov
in
inc
or
add
mov
xacquire
fs
inc
in
sub
fmuls
cmp
mov
cltd
stc
sub
divl
xchg
lahf
mov
pop
roll
push
cmp
inc
inc
xor
push
clc
dec
or
mov
out
lock
push
aas
stos
lcall
ret
adc
stos
leave
pushf
out
adc
or
push
in
test
mov
into
push
and
outsb
stos
xor
pop
out
cmp
mov
xchg
inc
jnp
clc
ds
and
dec
xchg
pop
bound
mov
xchg
cmp
dec
std
xchg
inc
ret
sbb
ljmp
add
sub
leave
lds
jnp
xchg
sub
pop
scas
test
cmp
inc
mov
and
iret
repz
test
movl
fs
and
cmp
inc
repz
out
mov
ss
lds
sub
fucomip
mov
jge
xlat
cmpsl
stos
and
cli
and
sbb
addl
icebp
test
int
popa
and
ss
mov
xchg
mov
pushf
das
xchg
adc
xor
adc
pop
xor
popa
ljmp
dec
outsl
cwtl
mov
pop
mov
mov
jno
in
stc
jo
lods
sbb
loop
push
push
mov
jne
xorb
lds
sub
leave
push
dec
cwtl
call
sub
xor
pop
in
outsl
push
xor
in
fnstcw
adc
dec
mov
xor
mov
jno
sbb
pop
fidivrl
out
jae
pop
sbb
mov
xor
adc
inc
and
mov
and
jp,pn
jae
mov
inc
movsb
jmp
enter
or
repnz
into
jp
scas
xor
fs
mov
sbb
out
and
scas
fst
inc
mov
or
bound
and
mov
out
or
loop
and
adc
iret
repz
loopne
ss
or
mul
adc
and
dec
mov
xchg
clc
int
ja
out
ret
arpl
das
aam
dec
xchg
lods
cmp
stos
test
icebp
test
mov
push
rcrb
jae
nop
ret
xor
aam
repnz
addl
test
mov
sbbl
imul
mov
movsl
lods
cmpsl
jge
dec
addr16
pop
pop
aam
jmp
mov
je
cmp
frstor
or
add
pusha
imulb
pop
pop
and
out
stos
lret
test
adc
mov
subl
mov
fs
icebp
dec
cmc
sbb
xor
ror
jbe
push
mov
imul
lcall
mov
aam
mov
repnz
ja
fldcw
ss
mov
jle
inc
xor
pop
push
enter
test
pextrw
add
lock
jmp
and
fwait
pop
pop
cmp
adc
sub
push
jb
mov
icebp
or
pcmpgtd
rclb
sbb
fbstp
popf
mov
and
cld
push
pop
jns
test
dec
jns
test
pop
xor
push
mov
jge
loop
jl
ljmp
push
mov
fildll
movsl
mov
inc
dec
or
add
jge
sub
hlt
mov
sbb
int3
pop
cmp
xor
scas
std
out
ss
stc
out
add
push
push
push
xor
lock
jno
popa
xchg
mov
movsb
shll
lret
or
sbb
push
mov
inc
jmp
mov
and
dec
fldt
rcrb
pop
xchg
mov
mov
jmp
das
mov
enter
fs
sbb
in
fwait
inc
shll
cmp
pop
sbb
mov
popf
sbb
les
pop
scas
flds
out
pop
stos
pushf
add
push
int
repz
cmovae
xor
xchg
xchg
lret
ja
out
aaa
adcl
add
shrl
dec
dec
and
jb
inc
inc
aas
popa
fdivrl
pop
inc
xlat
dec
fmull
jge
call
xor
fxch
xor
jg
mov
ror
mov
sti
aad
shll
ss
lods
pop
jmp
js
lea
shll
cld
sub
or
cmpsb
icebp
ret
mov
ja
into
enter
mov
xchg
and
cwtl
push
or
aad
out
repz
inc
cwtl
sti
jb
ret
std
cmp
push
movsl
xchg
loop
iret
es
sti
popa
bnd
bound
pop
jae
dec
mov
dec
dec
add
add
or
inc
push
idivl
mov
dec
cmp
int3
movb
jno
aad
jbe
jp
rorl
scas
jno
addr16
rorl
shll
add
mov
push
imul
sti
xor
or
loopne
push
std
pusha
or
iret
nop
mov
repnz
sub
rcr
xor
je
mov
dec
sub
clc
lds
mov
mov
das
fdivr
push
mov
clc
aad
pop
mov
push
paddsb
lcall
orl
mov
jmp
and
stos
sub
subb
and
xchg
cmp
cmp
jmp
popf
stos
and
lods
push
dec
fstpt
ds
adc
out
sbb
add
mov
repz
ret
xlat
push
push
cwtl
mov
popf
and
cmp
ja
nop
fisubs
add
les
sbb
xchg
add
paddq
imul
adc
enter
inc
fisttpl
fldl
mov
int3
xlat
jnp
aad
xchg
push
ja
imul
fisttpll
imul
xchg
outsb
pop
mov
mov
push
xchg
lods
inc
inc
dec
adc
popf
jge
popf
mov
cmp
dec
sub
sbb
xchg
mov
adc
cmp
xchg
leave
out
shl
shlb
adc
add
orl
push
xchg
loopne
inc
jl
xor
gs
inc
pop
sahf
pop
push
sbb
jp
adc
push
pop
jno
mov
hlt
dec
jae
add
xor
sub
xor
sub
mov
ja
jecxz
push
jp
cmp
lret
andnps
shl
iret
lods
nop
jne
lods
mov
popa
divb
popa
jmp
pop
jg
mov
repz
loope
mov
xorl
fiadds
inc
sub
pop
fimuls
addr16
xchg
testl
fisubl
mov
xor
push
dec
sub
pop
in
adc
add
cmpsl
or
movsb
pop
mov
clc
lock
mov
pop
xor
mov
mov
mov
mov
fs
test
nop
jae
into
jmp
cmp
stos
mov
aam
notl
dec
notl
lcall
out
mov
cld
xchg
out
mov
test
aad
or
push
jg,pt
jnp
push
pop
imul
push
mov
xchg
xchg
loopne
add
rcll
push
out
dec
push
inc
test
aad
push
loop,pt
stos
xchg
or
mov
jl
mov
enter
xor
dec
xor
in
push
mov
sbb
add
out
xchg
pop
xchg
mov
sti
inc
lock
dec
xlat
xor
sbb
push
lahf
lds
outsl
leave
jge
aaa
push
jecxz
cmp
dec
jns
sbbl
push
xchg
mov
into
jge
movsl
call
sbb
movlps
aam
and
out
dec
pop
xchg
sub
orb
imulb
bound
jp
mov
pop
loopne
xchg
push
popw
in
out
adc
dec
jne
xchg
cmpsb
lds
es
addl
leave
and
in
or
and
inc
mov
movsl
pop
sbb
mov
lods
imul
in
pop
adc
mov
repnz
jbe
mov
cmpb
xchg
dec
test
or
mov
inc
lret
xor
or
enter
dec
xchg
cmpsl
xchg
ljmp
xor
dec
dec
jle
into
inc
pop
test
stos
and
push
inc
int3
pop
icebp
xchg
lock
cmp
mov
jo
cli
mov
inc
popa
xor
and
pop
cmp
mov
ljmp
mov
pop
imul
cmpsl
jb
jb
xor
push
mov
add
jg
es
xlat
ret
popa
out
inc
cs
cmp
fcoms
xor
pop
dec
mov
dec
add
cmp
pop
sbb
mov
lea
in
xchg
ret
data16
jle
inc
pop
bound
cmc
adc
sub
dec
mov
les
push
xor
int
getsec
pop
icebp
addr16
jbe
adc
jne,pn
clc
loop
sysexit
add
dec
mov
mov
add
mov
mov
nop
mov
rolb
mov
mov
mov
in
inc
addr16
push
push
xor
sti
xchg
push
shll
xchg
jle
push
fwait
call
and
lea
pusha
sub
out
divl
gs
ret
cmpsb
pusha
fildll
dec
subl
push
stos
push
jbe
dec
or
in
into
rorl
push
ss
push
mov
jbe
aaa
add
out
test
fdivr
pop
outsb
insl
dec
pushf
gs
mov
jg
adc
in
jle
incb
xchg
inc
or
xchg
ret
adc
clc
jmp
test
outsl
or
and
sbb
insb
inc
adc
or
mov
jnp
sahf
out
je
xor
jecxz
mov
nop
clc
pop
add
pop
stos
cmp
addr16
xchg
dec
sub
loope
imul
int3
out
int3
cmp
adc
pop
ror
mov
cs
in
add
push
sbb
pop
movsl
push
dec
mov
adc
repz
mov
and
call
xchg
dec
les
cmp
pop
xor
insl
or
loopne
mov
or
inc
std
jp
notl
int
jnp
cmp
and
scas
icebp
repnz
imull
push
inc
ret
lods
test
pushf
dec
aam
jecxz
js
or
sbbl
lea
dec
mov
add
jl
xchg
inc
aaa
rcr
test
imul
mov
sbb
mov
mov
cmp
icebp
mov
pop
mov
adc
fs
jg
push
xchg
add
lahf
inc
add
mov
icebp
or
push
mov
aad
pop
mov
and
cltd
sti
push
xchg
aad
sub
leave
jb
gs
fildll
movsl
mov
mov
dec
es
or
out
push
push
insl
je
subl
and
sarl
in
and
lea
mov
sbb
into
lods
ja
adc
dec
pop
sbb
ret
cmp
add
cs
enter
dec
stc
test
scas
pop
jecxz
lods
lock
jmp
mov
ss
jmp
pop
outsl
notb
jnp
stos
les
sahf
mov
out
lods
mov
add
sub
mov
aaa
inc
push
sbb
arpl
and
mov
cmp
sub
xchg
xor
data16
sub
or
aam
pop
aad
and
xchg
fdivr
push
xor
mov
or
mov
gs
push
andl
and
add
inc
or
pop
nop
clc
movsb
cld
dec
lods
dec
in
loope
xor
dec
arpl
mov
shl
stc
xorl
mov
sub
xor
push
mov
pop
mov
das
ja
cmpl
fmull
lock
cmp
jns
add
jae
pop
xor
ret
lahf
stos
aas
dec
mov
popf
dec
push
xchg
int
adc
xchg
pop
pusha
out
int3
lock
xor
mov
enter
rol
adc
les
sub
xchg
addb
xchg
outsb
mov
ror
xor
das
xchg
inc
mov
xor
ret
jp
ds
aas
xchg
loope
fsubrp
push
jo
icebp
sbb
xchg
sar
xor
aad
pop
hlt
movsl
aas
xor
or
into
imul
mov
aaa
jg
leave
jle
push
dec
mov
stos
addr16
hlt
inc
dec
jo
pop
push
sbb
jmp
fmul
lods
mov
std
mov
cmp
and
insb
stos
out
xchg
sbb
dec
popf
loop
jmp
scas
cmp
jge
mov
mov
cltd
push
std
sub
dec
mov
cmpsl
fstps
dec
cmp
push
dec
jno
daa
mov
fdivs
aam
dec
mov
popa
jl
push
mov
push
repz
call
mov
cmp
push
mov
imul
out
adc
pop
cmpsb
pop
adc
sub
push
out
dec
fistps
add
xorb
push
pop
cld
in
push
hlt
inc
fwait
shl
cltd
fdivl
dec
mov
jmp
roll
xchg
push
inc
sahf
pop
or
mov
xor
and
push
mov
pop
jp
stc
aas
jge
jbe
push
ret
outsb
inc
jmp
clc
shl
jle
inc
movsl
cs
push
cld
aaa
sbb
mov
popa
cmpsl
or
arpl
aaa
cmp
mov
mov
push
mov
sbb
or
scas
dec
push
test
add
cwtl
idivb
xor
test
daa
std
and
mov
stos
ss
mov
dec
adc
pusha
and
stos
push
or
pop
and
les
xchg
das
sbb
sbb
cld
scas
sub
pop
add
leave
mov
out
cmpsb
sub
mov
adc
out
ljmp
push
pop
test
push
loope
cwtl
scas
nop
jp
call
xchg
xlat
int3
sub
pushf
cmp
pop
imul
scas
push
pop
mov
mov
xor
jg
mov
es
jnp
int3
cmp
sub
jle
sbb
cmpb
es
mov
leave
fiadds
inc
aad
movsb
cmp
mov
js
mov
and
xor
push
negl
cltd
inc
sahf
outsl
js
and
mov
mov
int
or
cli
or
leave
mov
add
aaa
pop
xor
xlat
out
jbe
push
fs
nop
pop
rcrl
stos
cwtl
lods
aam
loop
fcomip
pop
jae
sbbl
into
lods
or
push
and
mov
clc
jmp
mov
ljmp
adc
add
xchg
jae
dec
pop
inc
movsl
jge
mov
stos
in
adc
test
and
cmpsb
add
push
jo
dec
mov
mov
ret
pop
inc
add
sahf
pop
pop
int
push
sub
push
mov
and
lock
xchg
pop
sbb
pop
mov
shlb
adcl
aas
pop
xchg
adc
jno
xchg
rol
add
decl
hlt
jns
pop
lods
test
iret
stos
lds
inc
rclb
js
xchg
call
cmp
pusha
sahf
push
and
nop
in
stos
push
cmp
test
dec
add
mov
inc
sarl
add
std
or
cmp
fisttpl
adc
mov
imul
push
mov
xchg
cwtl
lahf
add
ss
adc
lret
stos
daa
daa
outsb
in
pop
jb
aas
adc
mov
xchg
lock
cmp
mov
lods
stos
fdivrs
in
add
mov
push
jp
inc
mov
pop
mov
fnstcw
jno
ja
faddp
jo
jmp
enter
stos
mov
andl
out
push
inc
adc
xor
sti
mov
jle
loope
ds
xlat
ljmp
jmp
push
jmp
pop
mov
adcb
mov
pop
pusha
xor
in
mov
xchg
fisttpll
xlat
ds
inc
inc
adcl
fsubrp
mov
movsl
mov
test
insb
push
xchg
add
neg
mov
inc
addr16
sti
nop
inc
js
lea
cmpl
fimull
push
cmpsl
pusha
add
ljmp
cld
lret
sahf
fstpt
clc
mov
pop
add
test
es
loope
mov
add
add
mov
out
bound
add
cmp
stc
mov
cmp
mov
dec
aas
mov
mov
pop
sbb
add
jo
cmpsb
ret
mov
sub
loopne
jo
adc
adc
or
mull
mov
pop
icebp
mov
mov
and
ret
ret
dec
and
icebp
aam
movsb
inc
mov
jnp
shl
dec
push
push
cld
lahf
sub
out
push
mov
cmp
jae
lods
sahf
mov
nop
mov
out
cmp
nop
jbe
sub
ds
lret
jns
add
sub
dec
test
pop
mov
imul
ret
test
divb
fsubl
and
jecxz
xor
xor
stos
inc
xchg
outsb
and
dec
mov
mov
mov
pop
cmp
clc
sbb
jne,pn
fcomps
loop
xor
push
dec
dec
ret
mov
ret
cmp
push
push
and
push
add
push
sbb
mov
dec
sub
out
lods
aam
inc
sub
cmpsb
mov
xlat
int3
add
imul
ret
push
lea
pop
sub
ja
jecxz
cmp
sub
in
mov
add
and
add
push
add
dec
sbb
lahf
ret
push
int3
pop
jbe
mov
scas
push
scas
sbb
dec
xor
jne
pop
ffree
cmp
mov
pusha
jnp
fwait
das
add
sbb
mov
ret
icebp
gs
pushf
andl
fcoml
adc
test
and
pop
mov
jle
shrl
subl
in
inc
mov
cmp
shl
cli
test
and
cmp
imul
xor
add
sub
jg
xchg
mov
jae
movsb
inc
push
movsl
or
inc
pop
sbb
push
push
cmp
mov
add
mov
stos
in
test
push
jns
hlt
bound
push
cmp
data16
bound
les
jno
aas
dec
ja
roll
mov
aad
inc
inc
inc
sub
sbb
js
pop
and
sahf
adc
negb
mov
push
pusha
lret
into
lret
mov
mov
and
cmp
xchg
push
pusha
pop
pop
pushf
push
les
movsl
adc
sbb
pop
orb
cmp
mov
out
sbb
into
xchg
daa
test
jns
xor
sbbl
aas
in
lea
loopne
imul
mov
jae
xlat
cmp
in
mov
sub
sub
sub
mov
or
and
dec
ret
push
cmp
out
push
scas
add
push
fwait
mov
les
and
shlb
inc
and
xor
mov
jbe
shrb
imul
mov
or
mov
bound
arpl
push
push
cmpb
jne
ret
xchg
shll
ds
jle
mov
pop
xor
sub
cmp
movsb
sbb
stos
push
pop
mov
mov
test
ljmp
xchg
pop
inc
lods
fisttpl
cli
div
sarl
dec
xor
add
pop
aaa
inc
arpl
xchg
add
in
mov
pushf
shl
jnp
push
mov
in
ror
xchg
movsb
add
into
lea
and
jb
jg
mov
outsb
lods
ss
cmpsb
fwait
inc
rcrl
and
xchg
inc
xor
out
xor
mov
fs
dec
add
fs
ds
sti
jp
outsl
jle
sbb
outsb
test
icebp
adc
xchg
jns
cpuid
jge
xchg
adc
in
aaa
cwtl
lahf
mov
add
and
push
push
dec
pusha
dec
push
inc
lods
mov
std
or
mov
or
xor
cli
jo
push
xchg
xchg
pop
stos
popf
loope
push
icebp
mov
jp
cmp
push
ds
insb
xor
incb
ljmp
mov
stos
fidivl
scas
cmpb
and
xor
hlt
push
cmp
cmp
mov
sbb
call
inc
push
lods
push
mov
xchg
test
dec
xchg
test
sub
mov
repz
jns
nop
lcall
mov
jno
mov
push
sarl
mov
sub
loopne
or
stc
dec
mov
test
test
and
xchg
in
inc
inc
push
xchg
daa
arpl
ds
mov
xor
xlat
mov
lods
stc
iret
jne
mov
inc
stos
mov
add
dec
xlat
dec
inc
ds
gs
xchg
outsl
mov
gs
mov
cmp
aas
in
jge
add
ds
sbb
mov
fs
stos
aaa
sub
mov
add
adc
lock
imul
xchg
push
dec
daa
int3
rcr
je
sbbb
pop
clc
mov
aam
ret
fcomi
inc
and
pusha
mov
push
jmp
inc
mov
xchg
negb
xchg
adc
xor
fldenv
add
shrl
jnp
inc
loopne
or
mull
inc
cmpsb
push
inc
fldcw
lods
mov
call
mov
stos
sbb
and
adc
sahf
cmp
push
add
ja
push
fcoms
rclb
in
fyl2xp1
fsubrs
cs
mov
mov
lret
mov
mov
in
loop
and
fs
sti
jl
add
out
sti
xor
pop
cmp
cld
pushf
int3
xor
inc
scas
mov
push
popa
shl
fsubs
int3
insb
inc
and
mov
in
icebp
mov
scas
mov
fisttpll
jmp
cmp
jle
mov
mov
sub
stc
lods
adc
mov
lahf
jmp
sbb
mov
addr16
iret
nop
inc
xchg
cmp
push
inc
lret
int
lcall
and
call
cwtl
jbe
mov
pusha
xor
jae
fistl
xlat
xlat
pop
mov
and
mov
repz
ja
lea
add
in
mov
ret
test
adcb
aam
or
rclb
add
sbb
lahf
popa
mov
adc
cli
movsl
xchg
fsts
shll
sub
in
jmp
xchg
int3
push
cs
sub
rcrb
adc
outsl
call
shlb
mov
fcoml
jecxz
mov
push
aad
and
mov
jno
jne
repnz
mov
ss
cmp
fmull
mov
xor
pop
jae
adc
xchg
push
insl
push
ljmp
lahf
jbe
pusha
insb
mov
cmp
mov
mov
dec
and
adc
or
push
pop
movsb
popa
adc
xchg
or
gs
xchg
mov
cltd
adc
mov
ljmp
aaa
mov
mov
jo
shlb
cwtl
fadds
sub
sbb
inc
cltd
nop
pop
rorl
sarb
inc
or
cmp
bnd
add
jnp
dec
aas
sub
shlb
ds
jl
in
out
dec
scas
std
frstor
jle
lods
sti
sbb
loop
xchg
jno
and
rcll
std
mov
mov
das
fidivrl
and
shll
insb
mov
xchg
xchg
pop
insl
aaa
mov
aaa
pop
sarb
out
cltd
lods
sub
sub
xchg
rcrl
jo
notl
or
pusha
inc
dec
iret
add
push
ljmp
ss
jb
out
and
adc
out
pusha
mov
push
mov
mov
dec
dec
call
adc
scas
cld
mov
cld
in
dec
in
test
jl
sub
push
mov
mov
das
xor
sbb
repz
std
in
xor
inc
adc
and
sti
test
out
jp
jmp
and
es
jbe
ret
mov
push
pop
data16
gs
xlat
push
in
jae
sbb
xchg
ret
js
or
sahf
mov
les
xor
push
jecxz
mov
sub
cwtl
or
cmpsl
out
pop
das
or
sub
test
enter
rolb
lcall
dec
cmc
push
push
push
lahf
push
mov
sbb
cmp
lods
push
cs
jmp
iret
and
mov
xor
pushf
jb
pop
sub
enter
imul
shl
sbb
xchg
test
pop
mov
jmp
xor
lahf
xchg
sbb
in
jmp
push
lods
pushf
fstp
mov
push
test
stos
aad
mulps
xchg
cld
mov
faddl
test
fbld
mov
mov
cmp
add
fisubl
push
push
jae
add
fisubl
popf
mov
cltd
je
adc
je
jmp
lods
lahf
in
gs
xchg
inc
leave
sub
adc
inc
mov
adc
dec
jo
mov
cmp
outsl
dec
mov
pop
add
fidivrs
das
je
fidivl
inc
adc
jp
cmpsb
mov
inc
cld
es
mov
cmp
cs
inc
push
repnz
adc
lret
cs
jnp
mov
lods
test
cs
cmp
cmp
push
xor
jbe
jno
jne
in
test
int3
push
scas
mov
adc
out
daa
das
mull
or
mov
lods
jge
add
fwait
fs
xchg
cs
jne
test
or
shr
pop
ss
imul
lahf
cmpsl
mov
xor
test
jle
sub
mov
mov
jle
mov
lds
xchg
jbe
jle
mov
cmc
rolb
adc
hlt
jge
jne
mov
xchg
mov
fcomip
mov
jge
mov
sbb
xchg
pop
xor
mov
scas
cli
int
jl
ljmp
mov
inc
sahf
rclb
adc
aaa
push
mov
and
in
push
sub
jns
jmp
inc
int
xchg
xor
sub
cmp
mov
into
cld
mov
fsubp
xlat
in
mov
testl
mov
mov
mov
xchg
andl
xchg
mov
jb
cmpl
sahf
sbb
cmp
add
out
ret
loope
pop
pop
negb
sub
shr
inc
imul
adc
ljmp
xchg
jecxz
movsb
movsl
loopne
ss
cmp
and
lcall
xor
std
shlb
cmp
icebp
lock
jg
jle
lods
in
loope
or
out
cmpsl
lcall
inc
hlt
ds
push
nop
mov
shrb
cmp
sti
or
mov
lock
cmp
hlt
test
xchg
test
hlt
sar
repz
pushf
mov
mov
data16
rcrl
mov
pop
mov
jnp
xor
andb
subb
or
fstl
loopne
mov
mov
in
cmp
test
cmp
loopne
mov
sbb
mov
ja
in
cmp
dec
andb
ds
cmp
xlat
aaa
lret
orb
pop
movsb
insb
out
inc
sbb
xor
repnz
decl
sbb
cmp
aaa
sbb
sub
jae
pushf
jmp
movsl
in
sti
fdivrs
pop
mov
inc
addr16
jns
sbb
out
lcall
lods
adc
mov
rcr
sub
out
aam
loope
dec
cmc
divb
fnstcw
inc
mov
fsubrl
in
adc
rcll
sub
cwtl
mov
pusha
xor
cmpsl
fisttpll
inc
add
jmp
nop
and
inc
mov
inc
jecxz
add
jnp
xchg
stc
mov
pop
bound
test
dec
out
push
sub
in
xchg
inc
xchg
or
mov
mov
mov
aas
in
xchg
test
stos
jl
pop
std
mov
mov
and
in
add
insl
aas
addr16
or
push
pop
dec
test
mov
mov
push
inc
in
mul
mov
inc
sub
push
xchg
xor
data16
xchg
addr16
leave
je
pusha
xchg
sbb
and
jne
cs
jns
loop
mov
lods
xchg
add
add
push
or
aaa
mov
pop
das
lahf
or
pop
mov
js
je
sub
test
pop
inc
in
add
cld
jb
int
imul
lods
lcall
pop
aas
add
mov
inc
mov
mov
rcrb
les
mov
ret
std
cmp
mov
test
or
sbb
shl
xor
mov
lcall
cmp
int
xchg
inc
shll
shll
das
adc
xor
in
bound
pop
sbb
popf
mov
movsb
pushf
mov
lods
rcrl
adc
scas
gs
movsl
add
xchg
pop
add
sti
xchg
mov
xchg
aas
inc
out
add
and
jne
lret
sbb
and
pop
mov
push
rorb
scas
mov
dec
jno
add
ds
inc
in
add
adc
fisttpl
fidivl
imul
xchg
out
sbb
aas
rcrl
mov
sub
cmp
enter
rorb
stc
in
or
sbb
push
lcall
lea
inc
jbe
mov
aad
outsl
cli
sti
mov
imul
aad
in
outsl
sub
mov
pusha
adc
pop
cmc
and
gs
push
imul
orb
sub
in
pop
xchg
sub
popf
push
add
adc
icebp
nop
add
imul
push
cmc
dec
popf
xor
loop
cmp
fidivrl
mov
ds
hlt
jo
cwtl
jbe
aas
push
test
xor
mov
cltd
jae
xor
out
je
sbbb
notb
sbb
imul
push
rclb
call
fsubrp
push
jae
add
mov
dec
pop
lret
inc
ja
hlt
ret
mov
or
subb
lds
adc
ja
gs
xchg
xor
xchg
push
push
push
or
jmp
or
jge
jne
mov
addl
lret
jo
lds
xchg
inc
dec
mov
clc
cmp
pop
mov
jne
dec
pop
testl
jns
or
jb
repnz
es
mov
add
lahf
aam
push
push
xlat
xorb
adc
jns
je
not
pop
or
or
pop
cmc
pushf
lcall
loop
pop
xorb
stos
inc
mov
sbbl
adc
lods
inc
jle
icebp
mov
test
in
in
roll
repnz
push
sub
jle
mov
mov
push
into
test
call
in
dec
shll
push
push
test
lret
fisubs
dec
sub
inc
dec
jge
addr16
cmpsl
cld
mov
pop
xor
xchg
fcmovnbe
jecxz
inc
mov
cli
hlt
sub
ret
adc
scas
sub
bound
push
out
ljmp
push
jl
add
shrb
imul
js
xor
leave
int3
cld
stos
notb
cmp
fcoms
sub
aas
cmp
adc
pop
cli
or
xor
stos
repnz
aas
mov
gs
jbe
mov
cmc
push
add
sub
lds
js
cmp
cmp
arpl
ret
push
in
stos
xor
repz
adc
and
pop
mov
jb
loope
add
adc
sbb
jae
and
cmp
roll
loope
cmp
pusha
adc
push
imul
xchg
pop
cmp
out
pop
push
sahf
mov
or
negl
jg
imull
pop
cld
push
jg
popa
mov
fcomps
mov
mov
sub
xor
push
push
jmp
mov
std
sub
push
xchg
mov
jmp
and
cmc
push
cmpsl
sbb
out
movsb
xlat
xor
dec
filds
mov
mov
popa
movsl
lds
push
int3
leave
les
cmc
movl
pop
stc
test
das
in
in
movsb
cs
adc
fsts
xchg
push
jge
or
sti
dec
mov
jae
dec
sbbl
gs
ljmp
sar
lock
sti
ja
and
iret
or
push
sbb
cmp
rorb
cmc
mull
stos
xchg
test
fs
scas
stos
stos
inc
sbb
test
cmp
pop
mov
xor
imull
cld
aam
aaa
pop
stos
dec
xchg
daa
mov
pop
push
xchg
xorl
xor
xor
pusha
das
fsts
mov
push
cmp
xchg
and
mov
fdivs
rclb
jno
nop
cwtl
xlat
mov
cmp
jmp
les
mov
insl
mov
stos
push
hlt
adc
or
mov
out
jnp
fnstsw
test
and
push
push
pop
les
fcomi
push
mov
out
sub
mov
ds
jno
xor
pushf
and
mov
das
jne
aam
mov
loopne
rol
fisubl
movsb
in
add
add
test
sbbl
inc
daa
inc
fwait
xchg
ret
inc
scas
popa
inc
or
je
arpl
push
push
fdivrp
jmp
dec
pop
mov
mov
and
into
roll
movsb
stos
outsb
jne
or
mov
jge
ret
cmpsl
cmp
nop
lahf
or
dec
daa
sub
push
pop
cmpsb
repnz
adc
dec
shll
sub
clc
insl
xchg
or
sub
xchg
pop
mov
les
arpl
mov
jmp
mov
add
pop
aas
inc
dec
sbb
imul
jp
jb
sti
or
dec
jbe
cmpsb
jne
shlb
rcl
adc
stc
cmpsb
jne
jg
sbbb
js
clc
sti
inc
dec
test
adc
sbb
add
xchg
out
mov
jne
pop
mov
lcall
popa
dec
sbb
cs
repz
testb
lock
mov
mov
insb
popf
popf
mov
jbe
data16
popl
aaa
fisubrs
xor
imul
adc
xchg
ret
inc
je
adc
arpl
pop
insl
sbb
push
push
cmpsb
test
jmp
fisttps
sar
lahf
xchg
push
sbb
dec
test
or
push
adc
nop
jle
shlb
sbb
mov
dec
pushf
pop
push
or
stc
fiaddl
pushl
call
dec
cmp
in
inc
pop
or
dec
leave
xchg
sbb
push
mov
ret
or
negb
adc
xor
pop
jbe
push
fsubr
jno
adc
aaa
sbb
sub
mov
mov
adc
push
jb
test
xchg
fucomi
loopne
sub
ds
lea
sti
stc
jge
adc
jmp
stos
pop
add
neg
jge
rep
pop
mov
pop
rorb
incl
xor
rorb
mov
add
int3
dec
push
add
imull
dec
loop
es
push
cmpsb
lret
lret
loopne
inc
into
mov
or
mov
push
push
cli
or
sbb
adc
add
dec
jns
cmp
mov
fs
bound
xchg
cwtl
nop
mov
aam
lods
mov
add
rol
pop
jl
sub
push
hlt
sar
lods
sahf
jbe
test
add
jno
jp
jb
sbb
xchg
pop
orl
outsb
hlt
mov
movsb
mov
sub
mov
sbb
push
dec
mov
stc
cld
test
cwtl
insb
jne
mov
int3
mov
pop
mov
xor
sub
dec
or
flds
mov
into
mov
fprem1
imul
mov
insb
outsl
cmp
mov
je
js
mov
loopne
jle
daa
jnp
arpl
outsl
jg
mov
sbb
push
ficoml
xchg
push
mov
aaa
ljmp
pop
outsl
cmp
js
add
repz
mov
icebp
pop
leave
xchg
gs
movl
mov
daa
mov
mov
inc
xchg
cli
scas
inc
cwtl
xlat
lret
out
fsubs
jecxz
push
mov
int3
mov
jp
ss
subb
xor
sti
out
dec
pop
hlt
and
ret
pushf
dec
cwtl
cmp
or
outsb
lcall
cltd
and
mov
imul
dec
adc
je
out
add
lret
fidivrl
xchg
sub
jp
outsb
jnp
outsl
popf
call
mov
jno
test
stos
mov
insl
in
xchg
mov
sub
repz
hlt
aam
cmp
clc
shlb
in
clc
in
xchg
mov
sbb
cmpsl
push
enter
xor
pushl
cltd
push
ficoml
inc
or
mov
ss
pop
lcall
jo
sub
jl
pop
jbe
divb
mov
testb
data16
sub
fcomps
push
adc
or
testb
into
push
out
cmpsl
dec
mov
adc
or
mov
xchg
loope
ljmp
stos
xchg
push
dec
and
sti
sub
dec
push
jae
fs
jecxz
pop
mov
sub
sbb
pop
pop
movsb
jp
add
iret
imul
sahf
mov
add
shlb
repnz
or
mov
mov
xchg
xchg
xor
div
dec
push
xlat
mov
push
jnp
mov
outsl
addb
jne
dec
mov
out
cmp
outsb
lea
cmpsb
jns
insb
lods
xchg
fdivr
sub
pusha
pop
fnsave
aas
cmp
mov
xchg
cmp
inc
lods
sub
push
cmc
jae
lahf
dec
pop
js
add
or
sbb
movsb
shrb
add
mov
mov
jl
leave
aaa
cmp
adc
repz
push
jg
adc
add
jne
insl
pop
fnsave
aas
repnz
fiaddl
out
ror
add
sub
jbe
and
dec
repnz
ja
and
lods
mov
or
sub
push
dec
sbb
and
pushf
mov
lcall
mov
or
das
and
sbb
in
push
jbe
push
pop
movsb
fisubrs
push
inc
sbb
pop
push
and
loop
sti
shll
outsl
pop
xor
mov
test
dec
dec
insl
or
jle
mov
iret
xor
shrl
mov
sbb
insl
sub
lds
cli
adc
pop
push
xchg
lea
inc
pop
mov
sub
shrb
dec
xchg
dec
or
inc
movsb
inc
outsb
mov
jnp
fiadds
test
mov
xor
mov
fwait
mov
dec
mov
std
mov
and
lock
cld
push
mov
push
imul
xor
add
in
in
lahf
sbb
fisubrl
fdiv
imul
mov
ss
jae
sub
pop
jecxz
cmp
inc
sub
rorl
pop
jle
pop
mov
mov
inc
adc
sub
cld
and
je
outsb
bound
pop
ds
xchg
negb
pop
push
outsb
push
das
fwait
pushf
lret
movsb
nop
gs
std
test
pop
sub
arpl
dec
lock
stos
dec
enter
fs
sbb
stc
in
mov
scas
add
out
mov
movsb
jne
add
mov
sbb
push
out
ja
or
adc
push
loopne
stos
subl
pop
movsl
and
inc
cmp
cmp
mov
std
jne
nop
dec
push
xchg
movsb
xorb
xchg
movsl
or
sbb
pop
iret
adc
jns
mov
inc
jne
sub
imul
sbb
dec
jae
xchg
hlt
and
fnsave
jmp
and
mov
icebp
xchg
lcall
ret
fisubrl
jno
rclb
fs
loopne
inc
cmp
cmp
stc
arpl
jle
jae
shlb
mov
out
pop
pop
mov
cmc
insb
mov
cmp
fisubl
mov
xor
and
cwtl
mov
fnsave
mov
add
jns
aad
movsb
mov
adc
ret
sub
test
gs
push
popf
add
inc
neg
mov
jmp
ja
fnsave
xchg
lods
push
fdivrs
dec
xchg
cltd
cld
add
mov
pop
lret
mov
mov
and
mov
mov
daa
xchg
xchg
mov
movsb
xchg
in
dec
fs
lret
or
inc
jl
dec
jecxz
shr
adc
pop
add
aaa
test
cmc
fisubs
pop
jp
mov
rorl
cmp
cs
in
adc
sbb
insl
roll
mov
mov
cmpsb
fisubrs
add
popf
jne
fs
xlat
out
mov
cld
xor
lahf
test
xchg
xchg
push
cmp
sub
or
cmp
sbb
test
xchg
ret
notl
ret
jno
cwtl
incb
imul
xchg
lds
cmp
jb
push
test
xchg
push
sub
jbe
mov
sbb
xor
std
and
mov
data16
or
dec
lock
idivl
cli
pop
pusha
dec
call
ja
and
jmp
inc
rorb
out
ret
mov
and
sbb
jg
iret
int
push
add
out
gs
rcrb
mov
out
xor
add
mov
je
inc
test
push
pop
ret
pop
jb
int3
jb
stos
in
ret
lods
push
mov
lret
stc
cs
nop
mov
push
jge
out
mov
ljmp
int3
rcrl
int3
shll
ret
lcall
cmp
inc
frstor
pop
sahf
imull
movsl
iret
sahf
sbbl
add
dec
bswap
int
adc
xlat
test
xchg
clc
test
xor
xchg
cmp
test
je
jo
leave
stos
inc
in
push
popl
ficomps
sub
cmp
push
loope
or
pmullw
pusha
dec
mov
add
cli
stos
arpl
bound
cmp
mov
fsubrl
js
jp
idiv
fiadds
arpl
hlt
data16
push
jae
mov
ja
pop
mov
lahf
outsl
ja
jnp
jmp
leave
leave
mov
cmc
mov
fisubrs
repnz
mov
cmpsl
dec
push
inc
push
fiaddl
mov
std
or
fs
in
test
int
rcr
inc
mov
push
dec
xor
mov
xchg
push
push
clc
adc
arpl
mov
fcoms
sbb
add
sbb
xchg
les
inc
mov
sub
xchg
popf
inc
pop
jmp
dec
repz
adc
jl
pop
in
add
xchg
pop
xchg
ret
inc
xlat
or
popa
loopne
lock
movsl
or
popa
ret
sbb
jno
int3
test
hlt
xor
test
mov
lock
loope
testb
loop
fcompl
cmpsb
sbbb
insl
inc
mov
jbe
shll
test
dec
or
cli
inc
addr16
push
lods
or
std
xor
out
aas
cmpsl
arpl
leave
adcl
aam
sbb
mov
sti
sbb
pop
inc
outsb
xchg
or
scas
and
push
jnp
sti
arpl
das
add
pop
stos
jmp
pop
inc
test
jmp
sub
sub
xchg
xorl
xchg
xor
jbe
ss
jl
xchg
cmc
pop
lds
xchg
das
dec
in
out
jo
fisubs
dec
sar
scas
jg
das
popf
sbb
jno
jne
mov
cmp
lock
xchg
les
xchg
nop
in
sbb
adc
test
push
jo
jmp
xchg
sbb
jo
mov
mov
dec
lods
xchg
js
mov
and
pop
inc
and
sub
add
sub
xlat
loopne
lahf
cmc
fistl
xchg
pop
pop
and
mov
roll
lret
mov
stos
push
push
addr16
es
sub
push
es
mov
std
adc
into
sub
fwait
pop
mov
push
int3
sti
xor
sbb
cwtl
pushf
out
mov
push
cmp
jmp
cwtl
or
jecxz
fwait
mov
insb
xchg
mov
std
insl
mov
cmpsl
fiadds
mov
out
stos
ret
ljmp
outsb
push
jmp
scas
xchg
cmp
dec
sahf
push
inc
jno
pusha
addb
dec
ficomps
shrb
mov
and
mov
out
stc
jno
loop
jl
imul
jnp
jne
mov
jge
push
lods
dec
iret
pop
pop
sarb
sub
adc
inc
jge
icebp
dec
push
imulb
inc
mov
and
std
fisubrs
jns
sti
enter
xor
cli
dec
sbb
scas
into
pop
arpl
outsb
inc
add
mov
xchg
sti
push
movsl
in
popf
mov
jns
push
or
ficomps
lea
pop
aam
mov
jle
jo
sub
in
sbb
xor
jne
push
in
sarb
mov
xor
lea
or
sbb
rolb
mov
loopne
es
test
pop
cmp
adc
dec
inc
inc
fnstenv
jmp
cmp
ds
cmp
cld
insb
jg
jne
pop
cli
hlt
gs
push
xor
in
addl
push
pop
popf
mov
pop
movsb
inc
jo
divb
mov
adc
cmp
es
outsl
pushf
mov
lds
mov
or
bound
fstpl
je
add
test
or
insb
jle
mov
mov
out
adc
shrb
scas
mov
loopne
mov
mov
dec
cli
push
stos
pop
sbb
jge
dec
xchg
jle
popf
mov
test
out
mov
mov
mov
cmp
mov
adc
lods
lods
or
add
data16
cwtl
int3
mov
je
dec
push
shlb
out
rclb
add
add
movntq
repz
pop
dec
rcl
mov
fiaddl
sub
flds
push
ljmp
fdivrs
idivb
cmp
inc
xor
clc
dec
add
bound
xor
rclb
push
repz
out
adc
or
mov
push
loope
dec
sub
adc
jl
push
sarb
cmp
pop
ret
inc
sbb
xchg
mov
adcl
aaa
andb
xchg
mov
cltd
movsb
sbbl
cli
scas
adc
mov
decb
out
adc
out
in
lcall
js
dec
or
pop
mov
dec
fucomp
or
divb
mov
cmc
daa
inc
inc
sahf
push
mov
or
jno
int3
and
lret
sbb
xchg
pop
cmp
inc
cmp
out
adc
stos
jge
adc
jne
icebp
xchg
pushf
jae
push
cmpsb
jmp
outsb
push
mov
sub
lret
and
es
loop
icebp
pop
add
lods
fs
pop
fnsave
shr
popl
sti
inc
cwtl
mov
pushf
lds
sbb
bnd
mov
hlt
push
pop
mov
pop
stc
pop
scas
dec
adc
fwait
jne
out
xor
test
sbb
fmull
repnz
mov
mov
cs
jne
pushf
subb
lea
outsb
jg
cld
mov
cltd
ds
cs
popf
roll
xlat
data16
jb
lahf
jl
rcr
or
mov
lods
arpl
xor
repnz
daa
xchg
mov
push
pop
lock
cmp
das
jmp
mov
in
lret
out
jle
or
mov
dec
arpl
aam
pop
inc
sti
jnp
pop
push
or
outsl
or
jbe
inc
sub
shl
jge
sti
insl
pop
cmp
push
mov
xor
aaa
popa
mov
mov
js
or
mov
jp
popf
mov
mov
lds
out
fcoms
fists
js
sbb
daa
pop
sbb
fdiv
mov
sbb
shl
xor
out
popf
shll
push
pusha
mov
scas
push
xor
shll
push
in
lcall
push
jecxz
mov
jp
push
fsubs
aad
fstps
or
aaa
or
adc
inc
lods
mov
and
inc
sbb
or
repz
dec
mov
movb
inc
cmp
rolb
inc
and
pop
pop
or
inc
jnp
xor
movsl
sbb
cli
mov
and
mov
pop
in
mov
mov
in
shll
jae
ficomps
jbe
jbe
pushf
adc
jo
jne
jl
dec
inc
xchg
cltd
xchg
rclb
imul
lret
jbe
fisubrl
insb
jl
bound
jp
insb
mov
sti
mov
inc
stos
jge
fsubrp
lahf
sub
in
fisttpl
cmc
out
stc
negb
or
stos
test
adcb
jle
dec
ss
aam
popa
orl
push
test
insb
inc
mov
iret
sbb
pop
fldt
stc
decl
mov
out
jo
mov
xor
testb
into
lock
ret
cmp
xchg
loop
rcr
insl
enter
test
xor
fisubrs
sub
dec
xor
pop
push
dec
aad
das
lret
leave
scas
dec
fisubs
fs
push
xor
adc
mov
faddp
test
cwtl
xchg
movsb
movsl
add
imul
lds
scas
shlb
sub
loop
mov
fdivrs
jae
cs
push
sbb
push
dec
cmp
xchg
adc
gs
je
out
ljmp
lahf
cmp
out
add
pusha
add
mov
lock
cmp
shll
pop
popf
add
mov
dec
negb
jns
and
pushf
or
push
jmp
and
pop
cltd
mov
daa
int
shr
add
ljmp
or
inc
cmp
loop
rep
cmp
sub
test
mov
push
add
cmpsl
adcl
xor
clc
mov
mov
dec
dec
mov
mov
in
mov
addr16
cmpsl
pushf
movsb
punpckhbw
and
scas
or
movsl
jle
inc
jb
popf
sbb
outsl
cld
cmp
les
mov
sbb
stos
mov
cmpsl
inc
jns
in
lods
popa
aaa
inc
cmp
pushf
xchg
sbb
and
xchg
out
and
sub
and
jecxz
mov
cmpsb
cmpsl
sarl
pop
xchg
dec
shlb
jnp
out
fiadds
cmc
ror
enter
lret
or
flds
push
sbb
nop
shlb
fiaddl
mov
repz
les
jnp
pop
lods
loopne
hlt
lahf
or
das
dec
popf
gs
shll
ret
jo
stc
pop
popa
mov
mov
inc
or
dec
bndldx
aas
pop
aas
mov
push
dec
dec
lods
enter
mov
cmp
ret
stc
test
and
adcl
pop
dec
rol
inc
or
mov
jl
or
int3
dec
cmp
stos
ret
adc
ret
movsb
xchg
jl
and
lea
nop
std
and
and
addr16
jb
sbb
in
imul
fdivp
push
pop
mov
scas
push
xor
inc
xor
push
jb
sub
mov
fwait
out
push
sbb
jno
or
divl
cmp
out
mov
insb
sbb
iret
in
jge
hlt
inc
push
sub
bound
and
jg
cmc
cmc
xor
push
pop
out
add
arpl
scas
and
add
js
or
lahf
test
fdivp
sahf
jp
hlt
movsl
out
mov
inc
mov
aam
cmpsl
fstpl
mov
pusha
or
pop
lret
shlb
and
mov
jne
dec
cmp
lock
popa
outsb
pop
call
mov
push
or
mov
std
xor
inc
ds
push
je
jne
mov
sub
mov
xchg
jp
dec
lahf
pop
pop
lea
push
adc
pop
ss
icebp
inc
repz
aad
xchg
sbb
cmp
lret
sbb
aaa
jo
sub
adc
pushf
inc
lret
xchg
sub
outsl
mov
repz
add
and
repnz
mov
xor
enter
and
scas
dec
xchg
fistpll
mov
hlt
mov
cmp
push
xorb
adc
pop
pop
enter
xor
and
and
inc
aaa
fwait
xchg
inc
fildl
ret
fwait
pop
xlat
out
sub
push
movsl
sti
jnp
insl
or
cmp
push
aaa
mov
mov
and
negl
adc
or
push
int
inc
dec
iret
rcr
aas
xchg
test
inc
sbb
in
js
in
shll
ret
movsb
cmp
fdivrs
push
add
ja
and
aas
xchg
inc
cwtl
into
push
es
aad
dec
arpl
repnz
push
push
pop
lods
inc
xor
cli
jl
pushl
movl
pop
dec
pop
rclb
pop
movsl
xor
xlat
sub
push
out
jecxz
mov
fidivrs
mov
adc
cmp
aas
pop
pop
cmp
pop
adc
sbb
mov
cmp
into
mov
mov
mov
jnp
out
dec
or
xchg
mov
out
in
pop
rcrb
mov
repz
js
in
push
andb
mov
jns
inc
inc
loopne
ds
addr16
pop
dec
push
sub
leave
sahf
xor
add
pop
ds
popa
xor
insl
mov
sbbl
nop
push
xor
xchg
mov
loope
out
adc
cmp
pop
stc
lods
cmp
aam
dec
lret
arpl
gs
leave
scas
mull
ljmp
cmp
imul
stos
movsl
jecxz
xchg
imulb
sbb
mov
fldenv
rcrb
dec
test
mov
aad
pop
xor
imul
sbb
jne
inc
pop
into
push
xor
push
roll
cld
mov
xlat
pop
cwtl
jbe
jne
shlb
cmp
xchg
cmp
nop
mov
or
fs
lock
lods
sub
mov
push
movsl
push
ds
enter
out
push
sbb
repz
inc
out
mov
fldt
movsb
add
pop
sub
push
mov
das
dec
dec
jns
loop
sbb
das
sti
fldcw
lods
sbb
cs
repnz
and
decl
clc
lcall
jne
push
jo
mov
cmc
notl
addr16
fstpl
bound
or
pop
push
inc
or
lret
mov
js
dec
cld
data16
sahf
jp
adc
inc
decb
jg
fwait
out
enter
jne
sub
adc
sbb
mov
inc
add
jge
mov
imul
cmpsl
std
dec
inc
pop
std
leave
or
or
les
fwait
es
mov
hlt
ret
ja
dec
cltd
scas
push
add
xchg
pop
negl
inc
fdivs
test
sarb
cmp
fisubl
mov
ffree
push
xchg
adc
pop
and
addr16
pop
push
sub
nop
jp
xchg
loopne
dec
nop
push
fldl
pop
jne
in
imul
rcrb
mov
fisttpll
cmp
shll
sub
cli
jg
js
and
push
jne
rcll
push
sub
addr16
clc
nop
dec
push
out
xor
call
cmp
mov
call
test
jecxz
add
inc
data16
pop
loop
aaa
sti
or
mov
repnz
cltd
mov
les
xchg
int3
ds
pop
lcall
or
mov
dec
arpl
sbb
push
je
sahf
or
xchg
arpl
mov
push
gs
fidivs
push
push
cmc
jae
jno
pop
mov
nop
out
mov
push
jno
mov
pop
mov
mov
pop
test
call
jo
and
andl
mov
mov
call
mov
sbb
mov
push
adc
loope
inc
mov
das
sub
cmpl
shr
xchg
inc
lods
xor
lret
dec
popf
adcl
enter
aam
fistps
icebp
sbbb
ret
xchg
imul
lods
sahf
repz
loope
in
rcrb
fmul
cli
add
aaa
mov
sbb
mov
adc
out
arpl
cmc
mov
adc
testb
enter
add
cmc
dec
dec
mov
clc
cmpsb
cld
pop
push
push
ret
addr16
jae
mov
add
jns
call
add
jnp
rcl
scas
mov
sub
inc
loopne
decb
into
mov
jmp
loope
adc
addr16
xchg
add
dec
sub
aam
xor
ficomps
je
add
loop
mov
sahf
mov
imul
mov
adc
scas
daa
ljmp
sbb
xchg
xchg
arpl
push
adc
pop
jge
mov
std
in
lock
push
nop
addb
pushf
push
mov
xor
mul
push
insl
cmpb
and
jno
jno
jmp
sbb
dec
jb
mov
inc
cmp
xchg
push
mov
cvtps2pd
inc
mov
ret
dec
js,pt
cmpsb
clc
jbe
jnp
xor
ret
sbb
test
fidivrs
cmp
push
pusha
xchg
andb
rolb
cs
pop
insb
repz
jp
and
xchg
out
cwtl
xlat
cs
bound
sahf
nop
lods
dec
push
inc
mov
xor
pop
push
cmpb
mov
mov
adc
mov
xor
add
or
adc
aad
dec
js
int3
jecxz
mov
leave
aam
lock
and
jle
fildl
fimuls
mov
int3
add
xchg
loope
push
imul
push
testb
icebp
push
in
xor
insl
test
inc
jmp
inc
xchg
mov
incl
ljmp
mov
mov
mov
cli
rcl
cltd
call
lret
imul
lret
dec
js
je
stc
xor
jno
sub
hlt
cli
out
push
jb
mov
imul
daa
jecxz
jle
out
jmp
pop
adc
and
mov
xchg
out
into
jg
jae
outsb
insb
cmc
xlat
dec
and
in
and
stos
imul
into
mov
push
push
and
dec
push
mov
xor
into
sbb
orb
inc
push
and
cwtl
lret
out
leave
xor
into
out
cmpsl
mov
pop
aam
inc
in
and
icebp
inc
test
push
lret
outsb
test
pop
nop
or
push
jmp
jbe
ror
inc
inc
dec
xor
lahf
pop
push
and
inc
incb
cld
mov
sbb
mov
js
push
ds
adc
stc
scas
outsb
adc
cli
add
fisttpll
ret
ljmp
mov
dec
mull
pop
or
sti
jb
sbb
push
sub
adc
sti
or
sbb
out
imul
sub
fwait
adc
sub
push
adc
je
pop
xorl
sbb
dec
stos
push
lea
test
push
int
mov
mov
in
es
push
rcr
pop
sub
repz
js
outsb
mov
sbb
aad
pop
jbe
xlat
jmp
sar
xor
mov
pop
loop
mov
xor
into
sub
mov
lods
ljmp
aaa
add
inc
pusha
out
mov
and
mov
test
xchg
js
inc
addr16
pop
data16
inc
arpl
mov
lahf
ja
fdivrs
xchg
mov
repnz
cmp
jae
jbe
sti
or
ss
inc
sub
adc
rcrl
adcb
xor
push
jl
push
mov
sub
jbe
out
pop
push
leave
aam
sti
lcall
stos
mov
fisubrs
js
inc
movsl
mov
cmp
movups
cmpsl
and
mov
pop
mov
jnp
push
leave
push
pop
fsubrl
sub
in
cmp
fcmovnu
adc
test
lods
repz
add
fildll
mov
scas
lret
sub
xorps
stos
xchg
mov
rol
sub
std
xchg
add
pop
test
imul
outsl
es
imul
pop
arpl
scas
pop
cmp
pop
out
fld
xor
pop
push
inc
in
dec
sub
inc
ljmp
ja
loop
aaa
stc
cltd
lret
stos
rcl
sbb
loope
hlt
dec
sarl
push
out
or
loope
inc
gs
outsb
mov
into
adc
ficoml
jnp
xor
fisttps
mov
iret
pop
cmp
stc
ljmp
mov
dec
pop
iret
lret
or
push
adc
adc
mov
loope
ret
mov
int
lods
mov
add
sub
leave
lods
jns
inc
leave
fidivrs
repz
iret
popf
pop
jl
adc
insl
xor
push
aad
sti
scas
xchg
mov
inc
mov
dec
test
mov
and
mov
cs
fdivs
out
loope
mov
jb
shll
mov
sub
inc
rolb
ret
cs
push
fdivs
setno
mov
addr16
outsl
sub
sub
adc
loope
aad
push
pop
fildl
adc
fldcw
cld
mov
mov
ds
mov
mov
stos
push
call
mov
mulb
lahf
outsl
pushf
aad
dec
hlt
repnz
mov
into
outsb
mov
jle
xchg
mov
ljmp
add
xor
ret
adc
test
jl
idivb
cwtl
fmulp
out
aaa
xchg
gs
arpl
testb
ja
add
jecxz
cmp
push
cs
pushf
cmc
pop
pop
cwtl
pop
jp
sbb
std
pop
popf
lahf
in
in
out
pusha
push
rclb
sub
mov
loopne
add
sub
jl
lds
subl
push
daa
pop
testb
cmpsl
mov
xlat
pop
mov
mov
add
pop
mov
adc
lds
mov
and
cltd
dec
jp
outsb
arpl
scas
scas
jmp
adc
add
je
icebp
lahf
addl
xor
xor
cltd
popa
mov
outsb
mov
nop
aam
pop
cwtl
add
dec
and
xchg
mov
and
xor
push
mov
in
fldl
gs
inc
dec
sub
sbbl
sarb
dec
adc
fisubl
je
cli
adcl
jg
js
mov
xchg
lret
adcl
repnz
xor
cmp
lods
pop
inc
inc
lret
div
push
iret
jb
mov
shll
inc
cld
sbb
fcoml
ds
mov
push
imul
fbld
mov
mov
jo
cmp
push
insb
xor
imul
xchg
add
leave
sub
jg
shr
repz
or
dec
pop
mov
loopne
or
inc
out
jnp
pop
inc
cmp
ret
rcrl
addr16
xor
pop
sbb
dec
or
dec
loope
ret
movsl
inc
mov
rcrb
shr
add
push
ret
ss
push
outsb
pop
out
add
fisttpll
repz
sub
adc
testl
ds
add
sti
or
xchg
mov
notb
icebp
ja
lret
xor
cmpsb
test
lret
popf
sbb
jle
and
mov
push
call
dec
lods
jne
mov
fcoms
dec
jns
test
mov
cmp
repz
into
add
mov
cmp
sub
loope
daa
mov
addb
cmpsb
out
call
fimull
test
pop
mov
mov
push
dec
psubq
or
mov
dec
ljmp
daa
lea
aaa
lods
xlat
imull
or
jge
outsb
in
sub
mov
cmp
mov
lods
sub
xor
and
xchg
aad
jg
adc
jne
imul
cld
lods
imul
jns
in
mov
lret
lea
mov
dec
insl
and
mov
cmp
out
jb
xor
cmp
mov
clc
bound
push
inc
cmp
mov
jecxz
fnsave
dec
stos
xchg
scas
and
mov
cmp
iret
adc
xchg
or
sbb
cmp
es
adc
cmpsb
cmpsl
js
in
and
inc
outsb
fisttpl
imul
out
subb
jl
lret
push
dec
mov
cwtl
scas
in
jge,pn
in
pop
xchg
aas
or
addr16
sub
test
push
xor
mov
inc
sub
mov
jne
jp
lahf
jno
mov
inc
or
sbb
andb
mov
push
pusha
add
sub
daa
lock
in
push
les
dec
inc
insb
dec
inc
xchg
push
cmpsb
fwait
jns
mov
add
call
mov
movsb
or
xchg
inc
add
imul
loope
sti
fisubrs
lret
imul
xchg
inc
fwait
test
cmpsl
sbb
rcrl
cmp
pop
pop
loopne
and
ja
dec
xor
lret
loopne
dec
jae
xchg
int3
fnstsw
leave
test
testb
cmp
sbb
ss
xchg
lock
lock
and
mov
mov
enter
andl
fldt
jmp
sti
das
jo
adc
js
sbb
and
sbb
test
aad
xchg
xchg
in
lods
mov
mov
scas
fstp
jbe
add
dec
hlt
or
scas
pop
add
cmp
movsl
out
xor
xchg
and
in
into
filds
xchg
fisttpl
fisttps
jmp
jne
mov
in
or
stos
cmpsb
shlb
js
jmp
inc
out
dec
vunpckhpd
aad
ret
dec
mov
outsl
mov
cmp
sti
dec
pushf
rorl
dec
pop
cld
inc
shlb
cmp
and
cmpsl
adc
imul
call
lahf
fists
ret
js
jl
mov
push
xor
dec
adc
outsb
push
cmpb
jne
or
inc
cwtl
std
out
adc
add
jo
pop
cmp
lea
rorl
je
mov
jmp
lahf
scas
or
js
cmp
outsb
xchg
daa
inc
mov
cmpl
jae
mov
mov
pop
pop
or
inc
push
cmp
sub
nop
push
dec
jb
ja
pop
jecxz
xchg
sub
pushf
test
jg
scas
sub
out
sub
andl
cwtl
inc
mov
push
inc
fwait
je
pop
mov
push
and
jbe
aaa
scas
xorl
movsb
leave
adc
mov
cmp
repnz
ja
cmpsb
or
fsubrl
cmp
fs
test
test
adc
cmp
push
das
jp
addr16
dec
mov
clc
in
pop
jo
inc
ja
addb
jmp
mov
stos
xchg
mov
sarl
cmp
add
lret
and
cld
sub
lea
ret
jg
xchg
xchg
sti
outsl
daa
mov
dec
mov
js
aad
sbb
scas
pop
insl
loope
xor
sbb
shrb
ud2
jp
stos
cmp
imul
adc
fistpll
adc
int
pushf
push
mov
lahf
sbb
clc
mov
or
xchg
and
lods
int
inc
xor
int
paddq
loopne
repz
add
mov
popf
inc
filds
sarb
and
cmp
sbb
cmp
fdivs
pop
jecxz
loopnew
mov
fs
out
lret
into
and
mov
movsl
iret
icebp
lods
fsts
jns
jnp
int
test
daa
cmp
enter
and
stos
loope
jp
pop
cld
mov
test
je
jo
xor
push
lock
frstor
dec
cmovae
je
mov
xor
test
cli
ss
xor
dec
sbb
push
in
cmc
ret
or
in
jle
je
push
adc
pop
in
mov
test
bound
or
hlt
pop
pushf
or
aam
dec
adcl
movsb
clc
lahf
xor
cmp
out
addr16
mov
in
jns
inc
add
mov
cmp
cmp
popf
push
adc
test
stos
decb
jbe
dec
stos
push
mov
cmp
lcall
push
popf
pop
cmpsl
sbb
cmp
out
and
int
mov
cbtw
mov
jnp
push
test
aam
dec
arpl
test
rolb
jecxz
out
mov
dec
add
sub
std
xchg
mov
loopne
lret
fnsave
xchg
popa
insb
cmp
loopne
pop
fists
push
inc
mov
add
jmp
aad
sbb
lret
jecxz
push
lods
sbb
inc
xchg
ljmp
and
repnz
push
jmp
pop
loop
push
add
fdivl
cwtl
lock
sti
fcompl
mov
mov
movsb
add
xchg
das
insb
enter
das
dec
pop
arpl
fs
orl
adc
mov
enter
ljmp
mov
or
call
sbb
mov
jmp
pop
popf
push
loope
stc
jno
adc
fidivl
leave
or
dec
js
imul
andl
outsl
xchg
pop
cld
test
dec
mov
or
push
mov
aas
xor
lock
jecxz
fwait
mov
cltd
insl
fimuls
jl
adc
aaa
stc
push
jno
ss
xchg
cmp
cwtl
adc
push
or
mov
andb
addr16
inc
addr16
mov
into
loop
pop
leave
cmp
dec
mov
pop
inc
test
test
jmp
jmp
sbb
fwait
lods
aas
or
mov
sub
aas
fidivs
sub
adc
xlat
pop
addr16
mov
lret
lock
push
sti
outsl
add
cmp
pusha
rorb
std
stc
adc
in
or
push
int3
aad
stos
cwtl
call
ljmp
fnstcw
inc
lahf
jg
sbb
adc
les
lds
ficoms
cli
dec
insb
out
xchg
pop
push
adc
adc
popa
mov
into
clc
nop
add
cmp
out
das
insl
inc
sbb
enter
adc
aas
rolb
and
jnp
addr16
add
loopne
in
leave
and
sbb
data16
hlt
arpl
bound
pushf
fcoms
inc
push
xor
cmc
lcall
fldcw
es
xor
push
xchg
push
out
xchg
inc
fdivs
addl
push
out
push
cmp
cmpsb
bnd
xchg
testl
pop
bound
pop
inc
gs
ret
or
jecxz
sbb
jl
or
xchg
mulb
adc
in
inc
in
or
ja
mov
lods
inc
jbe
push
nop
mov
bound
imul
sti
and
nop
stc
xor
cmpsb
jle
jnp
adc
das
jne
in
mov
jb
cmp
jo
jge
sub
mov
add
sub
mov
cmp
sub
xor
mov
cwtl
sahf
and
popl
mov
ret
xchg
lock
sarl
jne
leave
xchg
and
mov
sbb
xchg
mov
aad
aad
pop
lret
cmp
xor
stos
adc
mov
push
sbb
dec
mov
bound
fcmovbe
and
mov
push
inc
pop
es
mov
xchg
ja
rcrl
stc
mov
jle
stc
push
outsb
sbb
xchg
cmpb
in
jp
lret
jae
les
shrl
xchg
enter
pop
xchg
mov
push
xchg
into
inc
aad
adc
inc
fwait
enter
subb
lock
add
or
adc
cmc
lock
adc
fsubrs
push
mov
pop
aas
addr16
ja
push
and
sbb
jno
ret
inc
push
test
stos
jne
sbb
mov
dec
sti
lock
lods
pop
mov
jns
outsl
subb
inc
mov
adc
ret
popf
adc
or
pop
xor
mov
in
inc
dec
ljmp
ljmp
push
addr16
adcb
out
sti
sbb
stos
aas
jno
mov
and
pusha
jle
sbb
cmp
paddd
jge
mov
mov
push
mov
sbb
ret
icebp
push
out
loopne
cmp
or
pop
inc
jb
ret
mov
sbb
fildl
movsl
stos
pop
stc
and
stc
cmpsb
sahf
bound
mov
mov
int
aaa
add
add
rcr
sbb
sub
test
test
fiaddl
lock
dec
push
leave
addr16
mov
sbb
pop
xchg
lahf
cmpb
mov
gs
popf
dec
xchg
and
fsubp
ja,pt
icebp
popa
cmp
pop
out
fcomps
xor
dec
lret
jb
pop
or
fdivl
pop
dec
or
add
cmp
adc
and
hlt
daa
js
aas
fidivs
push
jl
gs
dec
push
jp
stos
hlt
xor
sub
clc
pushf
or
pusha
jae
cmpsb
push
lahf
cld
mov
xor
stos
aam
xor
fadds
xchg
pop
mov
push
cmpsb
enter
rorl
pop
sbb
and
push
xor
test
pop
xchg
inc
data16
cmpsl
fcmovnb
inc
inc
cli
push
xor
dec
ret
xchg
jno
cmc
popa
lods
dec
add
add
fildll
cmc
lret
adc
dec
lods
bound
push
pusha
jbe
adc
lods
push
imul
or
xor
inc
gs
addb
movntq
out
daa
or
jo
stc
lcall
aas
mov
test
aaa
mov
add
test
ficomps
and
in
adc
add
xchg
inc
in
jae
sbb
seto
or
xor
movsb
push
cmc
dec
insl
dec
in
pop
data16
stc
add
negl
dec
sub
movl
pusha
xor
js
push
push
inc
pop
push
jae
xor
cmp
mov
out
mov
xchg
jne
test
ljmp
lea
test
xchg
xchg
sub
mov
ss
add
addr16
in
out
xor
mov
pop
xchg
dec
imul
adc
sub
out
sub
mov
cmp
lock
or
cmpsb
out
fists
test
cmp
adc
inc
insb
in
stos
imul
mov
insb
out
cmc
mov
repnz
int3
lock
in
lret
out
out
neg
cmpsl
jne
mov
push
sbb
bound
movsb
stos
inc
loopne
push
push
je
orb
rorb
lds
jecxz
fadds
mov
push
pop
and
jmp
imul
jl
jns
mov
and
push
sbb
mov
and
inc
or
hlt
insb
in
js
jbe
mov
popa
sub
fcoms
or
enter
cli
cmpsb
sub
cmp
adc
push
push
nop
push
lahf
iret
cmp
mov
test
pop
push
out
mov
ss
xor
jo
or
inc
xrelease
loope
cltd
loopne
shrl
adc
stos
sub
inc
lock
iret
imul
stos
or
mov
pop
fmul
mov
icebp
xchg
lahf
or
leave
push
add
leave
fisubrs
stc
mov
mov
pusha
sbb
std
out
dec
aam
sbb
ss
fimuls
loope
dec
ljmp
cmp
inc
adc
movsl
pop
ret
xor
adc
incl
pop
sbb
aas
xchg
cli
rorl
fsubl
sahf
shll
mov
mov
mov
shll
xchg
and
push
jl
rorl
in
dec
sbb
push
test
inc
mov
test
fs
pop
cmp
mov
adc
jns
mov
or
add
lea
inc
fidivrl
adc
sub
jg
inc
sub
rclb
mov
jno
testb
stos
shrb
ficompl
es
inc
je
sub
push
inc
push
add
outsl
mov
js
jle
or
mov
mov
lret
or
lsl
test
lahf
lahf
xor
add
jge
pushf
add
sub
loope
fiadds
ja
jmp
scas
cmp
popf
jp
lods
repnz
pop
daa
add
int3
cmc
stc
mov
xorb
and
push
nop
fwait
out
xor
mov
adc
test
cmp
aaa
aad
pusha
sbb
popf
mov
add
loopne
imull
hlt
xor
inc
xchg
add
out
int
mov
xchg
push
sbb
jmp
dec
popf
cmp
mov
aad
int
lahf
aas
or
dec
jp
ffree
sub
int3
clc
mov
mov
inc
add
inc
outsl
in
insl
jne
ss
and
jbe
outsb
sub
jecxz
popf
enter
ret
jp
jp
enter
ret
pop
mov
fldl2t
dec
or
push
jae
data16
dec
movsb
or
in
jnp
inc
je
int3
scas
sti
rcr
dec
inc
test
nop
mov
push
xlat
dec
push
or
xchg
mov
shl
xchg
rclb
in
js
mov
out
jb
mov
add
mov
xchg
enter
dec
repz
dec
ficomps
push
sub
add
sbb
je
mov
inc
adc
je
lahf
pop
outsb
add
and
es
mov
repz
mov
fwait
jecxz
mov
dec
dec
fs
inc
mov
xor
lea
sti
int
test
es
add
sub
dec
fs
xchg
stc
js
jns
das
jecxz
cmp
mov
in
ljmp
in
adc
jp
test
jno
fbstp
jg
add
sbb
sub
pop
addl
jnp
popa
adc
into
jno
sub
mov
xor
push
test
scas
imul
sahf
sysenter
push
leave
movsb
sbb
adc
mov
add
xor
fsubrs
adc
push
insb
cmpb
mov
inc
push
mov
cli
bnd
fisttpll
mov
cld
push
shl
xor
xorps
in
add
push
in
cmpsl
xchg
pop
jecxz
fcomps
jmp
cmp
nop
push
daa
pop
fcoms
mov
push
sub
fidivrs
scas
cmp
add
fmull
mov
push
pop
repnz
adcl
and
mov
cs
addr16
bound
movsl
jge
mov
in
jmp
push
popf
bound
dec
and
adc
data16
mov
add
push
sub
ss
pop
or
negb
jbe
movsb
std
add
mov
mov
inc
xchg
loopne
sub
fidivrs
imul
dec
jge
adcb
mov
test
mov
mov
fwait
mov
push
lea
and
in
es
dec
and
adc
inc
xchg
sbb
movsl
fdivl
scas
cltd
hlt
imul
ret
icebp
test
and
jae
iret
push
aad
mov
decb
mov
outsl
push
pushf
pop
sub
and
hlt
dec
mov
scas
push
mov
sahf
push
ss
outsl
and
add
mov
push
incb
outsl
pusha
mov
jp
xchg
pop
jg
in
xchg
in
std
add
test
pop
imul
adc
mov
push
ds
inc
sub
mov
test
fistl
xchg
mov
push
insl
mov
add
cmp
imul
pop
add
in
xor
ds
jge
icebp
add
mov
push
out
pusha
adc
shll
mov
inc
mov
or
add
aaa
inc
ds
test
cmp
and
imul
xor
cmc
in
add
xor
xor
mov
out
fdivs
adc
pusha
push
je
push
cli
xor
cmp
loopne
jmp
int
dec
cwtl
xchg
adc
aas
incb
pop
pop
lret
jg
sbb
inc
pushw
cli
in
call
jmp
movsb
lds
mov
mov
ljmp
fisttpl
sub
mov
stos
fs
jg
mov
jp
mov
pop
sbb
sub
xlat
pop
orl
sbb
xchg
push
xor
push
cmp
inc
push
sti
jecxz
stos
pop
dec
jnp
test
insb
lcall
jg
push
jg
dec
cld
jae
xchg
cmp
dec
mov
or
sub
jo
mov
or
subl
sbb
sub
cmc
jae
pop
jge
jmp
jb
dec
icebp
out
push
out
imul
sbb
out
pop
xor
pop
insb
adc
out
add
mov
sub
or
imul
shrb
in
inc
pop
inc
pcmpeqd
ror
mov
cwtl
push
cltd
lods
les
xchg
adc
rolb
pop
arpl
lods
dec
out
je
repnz
popa
lods
int3
xchg
adc
inc
xor
or
imul
pop
and
add
fdivl
cmp
test
fistl
jbe
fcom
lcall
adc
repz
inc
mov
jne
and
mov
enter
hlt
lds
sub
xchg
subb
jl
xchg
sbb
out
sub
dec
mov
jge
push
xor
add
adc
push
addr16
inc
fsubr
popa
mov
jbe
jp
sub
ret
aaa
sti
inc
andb
int3
dec
sub
data16
int
insb
pop
dec
xchg
mov
cltd
inc
cmp
push
dec
sub
xchg
or
lret
push
fdivrl
ss
out
in
out
xor
mov
mov
push
sahf
jp
mov
rcrl
fiaddl
or
xchg
scas
dec
sbb
sub
in
daa
cmc
adc
cmc
je
cld
dec
pop
cmpsb
aaa
aas
test
sbb
xor
xchg
aas
mov
test
dec
mov
pop
pop
sti
inc
in
or
jecxz
out
mov
xor
icebp
nop
sbb
aas
xchg
inc
into
leave
mov
dec
xchg
mov
jns
jle
add
pop
mov
lods
cltd
aas
mov
aam
sbb
cmp
pop
clc
mov
adc
lea
mov
sbbl
ret
into
insl
mov
cmpsb
dec
pop
sub
mov
push
iret
stos
ret
in
sub
mov
lret
add
test
orl
jae
adc
gs
mov
push
orb
not
ret
fdivr
jae
sub
insb
imul
fmull
in
into
imul
jnp
enter
inc
out
jo
push
adc
iret
sbbl
repz
test
dec
popa
cmp
sub
cs
leave
push
cmpsb
stc
subb
cs
sub
pop
jae
jo
lea
cmp
jg
sbb
mov
cld
lds
or
cmc
push
cmp
les
inc
or
and
mov
jl
lods
mov
mov
mov
repz
or
sbb
fidivl
bound
jmp
movsb
xchg
filds
mov
fwait
mov
push
jnp
or
push
sar
insl
mov
dec
pop
add
cld
cwtl
dec
clc
es
repnz
repz
ds
insb
es
js
xchg
mov
jo
outsb
add
sub
push
out
rcrb
out
mov
out
push
call
lret
gs
dec
unpcklps
add
test
push
mov
adc
shlb
lret
insb
jg
dec
mov
mov
xlat
jmp
movsl
cs
pop
push
mov
rcr
sti
pop
dec
adc
jo
pop
fisubl
sbb
mov
lods
aaa
lret
dec
stc
xor
fsubp
cmc
xor
loope
arpl
int
pop
mov
dec
and
jl
test
ja
mov
add
das
orb
subb
mov
cltd
ljmp
repz
pop
push
pop
sbb
sbb
mov
movsb
data16
lahf
lea
cmpsl
mov
cmp
pop
fcmovnbe
fucom
ret
repz
push
jbe
std
fcmove
inc
jns
inc
push
cmp
sub
push
push
cmp
fwait
mov
pusha
mov
xlat
inc
or
pop
pop
inc
pop
xchg
sahf
and
filds
jmp
orb
mov
push
mov
lods
imul
dec
rcrb
mov
imulb
or
int3
and
repnz
cmp
pop
lods
popa
cmp
add
popa
push
fldl
fwait
lahf
mov
data16
mov
out
mov
scas
jg
mov
dec
mov
cs
inc
sub
pop
sbb
je
fnstsw
shll
adc
push
jl
cld
sbb
iret
or
fs
test
lds
and
pusha
stc
sbb
cmp
ror
add
wrmsr
pop
cld
jns
imul
jae
xor
sti
inc
sub
xchg
int3
arpl
stos
jns
inc
or
xor
jg
mov
adc
scas
dec
popa
stc
test
adc
neg
les
outsl
mov
mov
pop
mov
adc
ljmp
and
mul
xchg
adc
lods
inc
outsl
sub
ror
outsl
xor
sub
dec
jecxz
ljmp
inc
int3
mov
mov
mov
adc
pop
in
add
add
sub
mov
stos
jo
jb
dec
popa
rol
clc
cmpl
adcl
fisttps
mov
adc
and
stos
dec
adc
dec
jo
psadbw
ja
jb,pt
in
or
or
mov
sahf
imul
mov
daa
push
popa
fmuls
xchg
xchg
rcl
push
stos
inc
dec
not
lahf
in
xchg
imul
or
pop
cmp
xchg
sub
pop
jecxz
inc
mov
and
sub
fwait
outsb
mov
mov
je
mov
sub
clc
dec
das
jmp
in
stc
xor
repnz
xchg
dec
dec
mov
lret
add
in
cmp
pusha
jnp
push
add
adc
push
push
dec
jl
aaa
fnstenv
xchg
xlat
icebp
inc
out
or
jge
decl
or
mov
mov
jmp
pop
pop
inc
push
adc
xor
lds
imul
pop
mov
and
sub
inc
les
pop
loop
cld
jg
xor
mov
mov
add
ja
inc
int
shll
imul
idivb
fildll
sbb
lods
jb
push
adc
test
stos
push
sub
lods
iret
mul
xchg
pop
xor
aaa
faddl
addb
sub
cmp
or
or
insl
dec
clc
mov
addr16
js
adcl
lahf
loope
aas
pop
jnp
insl
mov
mov
decl
jmp
pop
jecxz,pt
add
inc
mov
jae
int
jo
add
pushf
inc
inc
sti
cld
xlat
jnp
test
das
mov
aad
pop
dec
mov
push
fildll
push
cltd
cmc
xchg
jae
or
mov
into
int
pusha
xchg
push
pop
dec
sub
lea
xor
stos
cmc
add
mov
cwtl
aad
popf
sbb
xchg
mov
out
cmpsl
out
lods
stc
popa
jae
mov
rclb
cmp
mov
std
adc
xor
xchg
pop
out
loop
pop
clc
push
sahf
mov
xor
cmp
adc
jmp
push
mov
push
loope
jl
or
int3
add
jmp
or
mov
in
hlt
mov
jmp
push
push
sub
aam
cs
jnp
imul
xor
pushf
push
movsl
mov
sub
add
add
sbb
adc
jae
jecxz
sub
xor
sbb
add
sub
xchg
xchg
xchg
cwtl
inc
xchg
sbb
adc
fsubrl
mov
in
add
cmp
fsubs
das
mov
push
rolb
mov
xlat
pop
cmp
add
mov
dec
dec
hlt
mov
push
ljmp
cmp
push
pop
bound
jne
and
aas
pushf
negl
mov
pop
cli
stos
xchg
sbb
not
cmp
cmp
fwait
pop
cmc
pop
or
aad
packssdw
arpl
adc
insb
and
lods
fdivr
ds
mov
sub
jecxz
inc
mov
dec
pop
jnp
or
xor
and
es
jae
into
test
cli
mov
jge
test
gs
mov
jne
fldcw
fstpt
fidivrs
pop
push
mov
divb
ficoms
mov
sbb
shlb
inc
mov
call
in
mov
mov
lods
iret
and
mov
jb
xchg
cltd
adc
inc
in
in
in
xchg
mov
xor
adc
pop
les
popa
arpl
in
aas
rcll
subb
sbb
sbb
cmp
fs
xor
inc
push
int
xchg
inc
push
nop
mov
out
jl
mov
mov
into
cli
push
imul
lock
mov
xchg
psubsb
out
icebp
dec
jb
lahf
fbstp
pop
in
data16
inc
push
dec
add
add
lods
jnp
dec
hlt
cmpl
dec
sub
ljmp
andb
dec
pushf
jmp
inc
das
out
inc
cmpsl
mov
out
aam
mov
stos
outsl
mov
std
outsb
ret
insl
stos
pop
imul
idiv
lods
jo
xor
mov
divb
je
push
add
aas
mov
xor
pusha
ja
in
mov
dec
push
dec
mov
mov
loop
mov
xchg
xchg
jecxz
in
xor
dec
mov
mov
andl
and
lret
jne
jno
fistpll
int3
and
add
shrl
pop
cmp
mov
mov
mov
or
cmpsl
insl
xchg
add
leave
gs
fsubl
fadd
inc
lea
jg
push
ljmp
jmp
sbbb
test
test
faddl
lret
cmp
aad
cmpsb
fnstenv
pop
mov
iret
cmp
popf
pop
mov
dec
scas
jnp
or
outsl
shr
adc
adc
pop
adc
divl
in
fidivl
in
add
xchg
sti
lds
jb
push
jle
sti
dec
pop
sub
mov
lahf
push
dec
sti
sbbb
mov
aaa
cmpsb
lods
je
sub
rorl
sahf
or
or
mov
sub
pop
xchg
gs
stc
mov
popa
je
into
adc
push
pushf
stos
and
lea
rcr
or
or
push
out
push
pushf
lock
or
push
lock
ret
or
popf
pushf
les
test
pop
inc
jae
or
fwait
dec
rol
inc
movsl
fbstp
mov
mov
xchg
rcll
lods
les
mov
into
pop
rorb
cmp
lock
out
dec
sahf
scas
push
fcomps
je
pop
cld
mov
sbb
xchg
adc
push
add
mov
rcrb
mov
lock
stc
mov
mov
ljmp
mov
cwtl
xor
subl
jg
sub
js
andl
xchg
mov
ds
fidivrs
imul
lock
lods
xchg
adc
out
leave
insl
mov
add
sub
xor
shr
sub
aaa
fsts
jbe
mov
stos
push
inc
mulb
cli
dec
cwtl
sbb
pop
push
xorb
mov
lret
inc
lea
mov
daa
sarb
stos
mov
push
popf
imul
enter
mov
clc
sbb
in
mov
fldenv
push
xchg
xchg
sbb
lcall
mov
cltd
sbb
faddl
out
adc
pop
decb
sub
fimuls
shrb
mov
add
stos
jp
sbb
sub
hlt
add
rcr
push
and
push
mov
insb
test
dec
ja
inc
insb
lea
mov
mov
xor
jp
pop
jl
dec
stos
fldl
fwait
xor
jmp
push
mov
sub
push
cmp
jb
loopne
leave
dec
cmc
or
and
arpl
addr16
cld
outsb
mov
fiadds
lods
and
xchg
mov
push
pop
xlat
out
sub
pop
imulb
xor
pusha
xchg
mov
outsl
aaa
adc
call
ja
test
jge
mov
sahf
inc
stc
jmp
fistps
cmpsl
xchg
fnstenv
aam
push
pop
in
dec
pop
imul
and
sub
aaa
push
stc
bound
cmpsl
mov
cwtl
fdivrl
arpl
push
and
imul
jo,pt
mov
mov
sti
mov
mov
fldt
mov
movsb
push
std
outsb
lods
dec
push
fistps
xor
sub
ret
jae
divb
mov
popf
xchg
lret
je
inc
pop
popf
into
lret
out
std
push
sub
outsl
xchg
outsb
inc
pop
jns
xlat
inc
pop
inc
repz
pop
movsb
ljmp
mov
das
sub
fmuls
or
and
vmovntps
mov
mov
xor
xchg
inc
mov
das
lea
gs
mov
loopne
push
xchg
or
push
cs
rorl
adc
adc
or
jns
enter
xchg
gs
mov
jne
scas
jp
adcb
mov
pop
jns
fwait
outsb
fbstp
adc
scas
jge
icebp
rorb
fs
aam
adc
mov
push
scas
lods
mov
gs
int3
ds
sbb
test
out
jle
add
repnz
fcoms
filds
les
ret
xchg
das
xchg
scas
mov
mov
push
jecxz
cmpb
sbb
sub
cmp
sbb
pop
imul
sbb
int
daa
xchg
push
mov
inc
loop
jnp
idivb
cmp
cmpsb
push
mov
cmp
adc
sub
sbb
jne
mov
xchg
rcr
jp
sbbl
sbb
mov
in
fstps
mov
adc
inc
inc
inc
xor
sub
push
es
xchg
pop
mov
adcl
mov
pop
xlat
cmpb
subl
push
int
mov
xor
int3
ja
pop
dec
and
popf
loopne
xchg
xor
ja
add
cmp
jecxz
cmc
jo
cmp
xor
mov
pop
pop
in
test
jbe
add
cmp
gs
movsb
mov
insb
imul
sbb
cmp
push
dec
pop
and
xor
test
add
add
adc
ret
mov
aam
nop
into
dec
test
xchg
xor
and
sbb
daa
pop
gs
fists
jb
jnp
jae
shl
mov
and
sub
fsubr
inc
jmp
test
sarb
andl
lock
outsl
daa
dec
ljmp
insb
inc
sbb
push
idivl
or
or
sub
sbb
jae
mov
xchg
popf
xor
in
add
loope
movsb
xchg
movsb
out
ss
pop
daa
pshufw
push
popf
nop
and
push
ljmp
xchg
mov
push
or
jge
push
in
mov
mov
push
out
fsubrs
mov
sar
pop
xor
je
repnz
loopne
mov
adc
gs
scas
call
dec
add
cmp
inc
cmp
cli
mov
inc
sbb
insb
test
jge
inc
adc
popf
dec
inc
repnz
xchg
outsl
jnp
add
push
mov
leave
xor
dec
inc
sub
xor
scas
xorl
pop
mov
mov
leave
daa
xchg
test
fistps
fwait
xchg
pop
rorb
adc
jnp
popf
scas
xchg
out
fistpl
and
shl
xor
hlt
sahf
pusha
mov
mov
loopne
stos
push
cmc
outsl
or
or
jg
sub
lret
dec
lret
ss
and
jmp
inc
mov
xchg
pusha
rcl
pop
cmp
add
movsb
push
fstpt
in
and
xor
in
out
cld
adc
orb
push
push
movsl
fsub
daa
sbb
pop
jge
jb
ret
adc
mov
pop
dec
in
addr16
data16
sub
mov
mov
mov
lods
fmuls
cmp
or
ds
rcrl
cmp
pop
adc
xchg
das
add
inc
insl
inc
cltd
mov
jle
xchg
or
add
shrb
mov
sub
aas
add
add
push
jle
cltd
ds
gs
negb
or
aad
dec
cltd
out
sahf
mov
enter
jbe
pushf
xchg
jne
cmpsl
jb
hlt
jno
mov
jnp
pop
dec
cmp
xchg
jmp
inc
nop
andb
into
mov
cmp
xor
sahf
adc
mov
push
mov
lds
sbb
mov
fprem
push
or
xchg
push
cmpsl
fs
push
outsb
xor
sti
data16
mov
jne
loopne
sarl
push
out
rclb
adc
in
push
shrb
push
in
jecxz
mov
mov
xor
pop
aas
ret
xchg
push
movsl
cmpsl
pusha
out
jmp
aad
shlb
insb
in
push
jmp
ret
cmp
pop
jno
iret
push
setae
ja
xlat
jae
or
xor
add
mov
sarb
push
jne
enter
sub
sbb
jp
pushf
jg
lcall
mov
xlat
repz
pusha
xor
paddsb
movsb
data16
pop
sbb
cmp
ljmp
pop
repnz
xor
int3
inc
lret
movsb
in
dec
mov
adc
cli
jmp
std
mov
clc
inc
movsl
cmpsb
xorl
push
xor
pop
inc
loop
adc
lock
push
xor
out
fs
or
cltd
cs
inc
insl
daa
mov
mov
cmp
jecxz
or
cmp
xor
push
jb
lds
pusha
xchg
dec
adc
push
cwtl
jecxz
push
hlt
xor
xor
rclb
sbb
ret
in
imul
imul
js
adc
mov
inc
mov
fsubrl
arpl
and
mov
test
gs
and
dec
or
xlat
into
mov
jne
pop
pop
push
xchg
scas
ss
push
subb
mov
test
push
xlat
inc
and
dec
cmc
dec
stos
outsl
out
sub
stos
mov
mov
test
add
shl
in
add
jmp
jmp
jge
mov
mov
jb
aaa
push
jmp
and
xchg
mov
ret
int
rolb
sbb
inc
imul
adc
sbb
add
loop
jae
addr16
jbe
and
mov
jmp
jnp
hlt
jae
cwtl
int3
sub
cmp
dec
pop
xor
inc
repnz
lret
add
inc
add
idivb
pop
lea
mov
icebp
movsb
test
cmp
inc
insl
sbbb
sbb
xor
sbb
in
arpl
jp
out
push
push
lods
sti
adc
popf
sub
and
test
xchg
push
dec
dec
jmp
cmpsl
mul
ret
mov
fadds
xchg
jecxz
jb
jmp
mov
mov
in
adc
adc
sub
aam
xchg
popa
inc
cmpsl
roll
stc
dec
cld
jne
mov
les
jle
sbb
pushf
lahf
iret
lods
imul
loopne
jns
xchg
loope
leave
fldt
xor
gs
xchg
mov
xchg
adc
stc
jp
xchg
outsb
mov
fwait
push
mov
cmpsb
mov
add
inc
and
shll
and
fisttps
lahf
push
dec
leave
ss
fidivl
push
pop
bound
xor
and
inc
pop
mov
jno
and
sbb
into
jl
or
inc
imul
mov
jno
lret
pop
mov
in
movb
ja
out
inc
es
hlt
scas
test
jmp
lods
sbb
jle
cmp
push
ficoms
xor
pop
out
jecxz
pop
in
lahf
pop
sbb
cmp
imul
dec
jns
mov
push
adc
xor
xchg
addl
xor
mov
cld
jmp
xchg
xchg
int3
mov
mov
movsl
pop
dec
bound
cmp
es
into
adc
lock
push
xchg
aam
popa
jp
jbe
jbe
sub
push
pop
mov
addr16
shrb
mov
lock
insl
mov
mov
mov
mov
mov
in
movsl
jp
mov
push
xchg
xchg
aas
push
ret
pusha
jno
and
sbb
aaa
popf
shll
pop
shl
xor
and
rcll
loopne
cmp
fwait
movsl
ret
add
rorb
xchg
pusha
mov
gs
or
dec
fisttpll
dec
shrb
jns
sub
into
xorl
push
adc
push
sbb
sub
pop
mov
fs
insb
test
ljmp
mov
mov
cld
or
subb
lea
xor
es
add
adc
out
fisttpll
pop
xor
ret
mov
popa
hlt
sub
lea
lret
inc
and
nop
arpl
xchg
mov
cmp
mov
std
xor
out
fisubrs
in
dec
mov
mov
mov
lock
das
mov
dec
repnz
push
movsl
std
mov
adc
mov
ljmp
lret
adc
sub
dec
mov
mov
test
xorb
inc
push
aad
cltd
push
outsl
or
lret
inc
popa
xchg
inc
scas
mov
pushf
out
pop
movsb
mov
repz
adc
push
gs
lcall
stos
stc
adc
stc
push
bound
pop
xor
test
sub
es
jl
dec
sarb
inc
mov
rcll
lcall
xor
adc
jmp
sub
cld
mov
mov
icebp
sahf
or
jecxz
je
in
mov
jb
fstl
adc
pop
mov
mov
pop
adc
dec
jecxz
jae
fwait
xchg
pop
leave
xchg
fsubrl
inc
pop
jb
negb
adc
outsl
jle
pop
nop
stos
addr16
cmp
filds
push
addl
jecxz
lret
scas
insb
adc
out
add
sbb
inc
xor
out
mov
push
mov
xor
in
pushf
lds
scas
jo
daa
pop
cmpsb
out
aas
mov
es
adc
mov
out
in
adc
push
xlat
std
lret
ret
fidivrs
imul
iret
hlt
sbb
pop
mov
sub
cmp
xchg
cmp
ds
out
mov
fcmovu
sahf
jnp
sub
cmp
or
sub
cmp
xchg
not
sbb
lock
mov
xor
inc
lds
shlb
sarl
xor
jb
cld
scas
sub
stos
sbb
ja
insl
stos
popa
das
sarl
popa
sub
movsb
xlat
fldln2
movsl
xchg
shld
sahf
lret
pop
pushf
insl
xor
or
mov
test
adc
sarl
jmp
jo
push
rep
popf
or
or
ret
and
lock
je
mov
aas
mov
ss
ljmp
xchg
out
cmp
das
idivl
stc
dec
xchg
stos
push
int3
pop
inc
fldl
mov
xchg
adc
sub
aas
adc
cmp
mov
push
jge
cmp
leave
mov
test
sarb
adc
mov
push
mov
inc
pmulhuw
dec
push
xchg
imul
push
fimull
rcrb
sti
aas
icebp
dec
cmp
fidivl
leave
stos
scas
dec
fs
lahf
jp
cltd
stos
pop
ljmp
insb
cmp
fs
cs
pop
insb
push
dec
iret
inc
mov
outsl
or
inc
dec
clc
add
sub
push
adc
add
test
je
jns
stos
xor
pop
mov
pop
inc
pop
jnp
fmull
sahf
fisubrl
pushl
rcr
rcrl
fbstp
imul
cmpsl
inc
test
iret
hlt
push
sub
sub
xchg
fcomps
dec
div
cltd
sbbb
lock
mov
cmp
push
out
fs
mov
outsb
int
mov
xlat
adc
lret
jle
test
adc
lahf
sbb
mov
xor
stos
cmp
enter
sub
int
out
mov
lds
xor
mov
pop
or
leave
dec
xchg
sub
fstpl
sbb
dec
iret
jb
lds
mov
aaa
lods
add
ss
push
aad
jne
mov
popa
xlat
ret
enter
push
push
add
dec
loope
repz
cld
add
dec
lret
lods
jae
in
and
testb
iret
cmc
add
mov
mov
fnstenv
cli
stc
fnstenv
ja
xchg
cmp
sub
pop
movsb
das
push
loop
dec
xchg
orl
loopew
sbb
test
das
mov
outsb
mov
je
fistl
sti
lahf
sbb
xlat
cmpsl
jge
mov
fwait
adc
in
mov
ja
testl
pop
repz
pop
fsubr
or
clc
repz
sub
xchg
xchg
add
ficoml
jecxz
push
clc
jne
nop
lahf
je
pop
fldcw
test
in
fwait
jle
adc
mov
jo
fucomip
ret
ret
insl
cmpb
lcall
jno
mov
adc
clc
pop
mov
pop
pop
push
test
lea
enter
dec
inc
mov
xchg
ss
sub
pop
mov
cmpsl
push
mov
clc
jbe
pop
push
sub
leave
xchg
cmp
xchg
movsl
scas
sbb
mov
dec
cld
stos
jbe
mov
std
and
xchg
pop
shl
les
push
jo
inc
mov
js
imull
jg
inc
inc
mov
loope
xor
test
lahf
xor
xor
pop
push
dec
ficoms
out
testl
fdiv
cmp
sti
les
adc
dec
imul
andl
in
rcr
lock
repnz
out
mov
fdiv
fs
mov
rcr
sub
adc
pusha
add
mov
minps
subl
pop
dec
movsl
cmp
push
sub
xchg
movsb
pop
mov
popf
pop
aaa
inc
xor
icebp
cmp
ss
pmuludq
push
test
xor
cmpsb
imul
xchg
scas
nop
add
mov
xor
pop
xchg
or
and
loopne
lds
pop
or
sbb
test
push
repnz
cwtl
in
mov
pop
sbb
int3
adc
pop
xchg
sbb
add
add
adc
ja
and
push
int3
out
in
sub
outsl
add
push
sub
shl
inc
aam
mov
ret
outsb
and
add
cmp
mov
bound
into
mov
pushf
rorb
and
popf
iret
pop
and
sbb
stos
mov
shll
or
dec
pcmpeqb
mov
std
xor
mov
jecxz
mov
gs
and
or
and
rcr
leave
mov
pop
jns
sti
gs
popa
into
mov
xchg
xchg
or
lret
sahf
mov
xchg
push
and
dec
adc
mov
mov
dec
xorb
in
dec
jp
add
push
popf
push
jbe
fnsave
sbb
add
push
pop
sbb
daa
push
fisubrs
and
cmpsb
mov
mov
xchg
cmp
ret
inc
mov
pop
xchg
sub
mov
ret
xchg
ret
fildl
clc
xchg
or
sub
sub
in
arpl
xchg
pop
test
gs
jns
jge
dec
aam
cmpxchg
xchg
adc
add
mov
dec
mov
outsl
jbe
xor
pop
pop
add
ficoml
xchg
jg
shll
cltd
adc
adc
pusha
js
data16
pop
sbbb
mov
cltd
and
and
inc
int3
sbb
sub
fbstp
stos
pop
enter
fdiv
nop
outsl
sti
in
insl
ret
jo
sub
lahf
loop
sbb
enter
inc
outsb
cltd
shrb
shll
dec
rcrl
mov
add
ja
inc
add
jp
add
popa
orb
addr16
dec
mov
sbb
test
jo
dec
push
jb
fsubrl
jbe
pop
lret
mov
rorl
add
mov
pop
xor
xchg
fs
jbe
test
daa
inc
jo
cli
jmp
fsts
adc
and
mov
andl
sub
fsubl
xor
idiv
xor
cmc
fnstsw
out
popa
cs
or
or
aaa
mov
xchg
jecxz
jo
scas
out
icebp
sub
imul
js
pushf
nop
add
xor
xchg
fcmovu
pop
adc
call
stc
sub
mov
aaa
inc
and
add
jnp
sub
add
mov
addr16
mov
push
in
in
notb
sub
sub
nop
jbe
cltd
dec
pop
sub
jge
pusha
cmp
movsb
or
mov
and
out
add
enter
aam
into
stc
adc
sbb
std
test
rcrl
inc
and
jmp
subb
repnz
les
mov
lsl
adc
loopne
cli
sbbb
shr
mov
inc
add
xchg
in
arpl
aas
sub
jae
adc
in
ds
ja
mov
pop
sub
lods
sub
daa
xchg
sub
bnd
lcall
je
out
cmpsl
js
mov
fcomps
test
jns
mov
movsb
sarl
dec
shll
xchg
cmc
jnp
mov
cmpsl
dec
xor
inc
cmc
mov
mov
in
test
mov
addr16
mov
xor
pop
fldcw
insl
push
in
bound
mov
insl
add
mov
xchg
mov
and
stc
and
xchg
popa
fcoml
fimuls
add
pop
mov
mov
fcomp
mov
iret
mov
lds
es
lods
repnz
pusha
inc
xor
rorb
rorb
je
or
fdivrp
mov
dec
mov
jg
mov
into
dec
cmp
pusha
test
dec
mov
jb
icebp
and
and
mov
push
in
xor
pop
dec
and
pop
push
into
mov
test
rorl
setl
inc
test
mov
in
aam
cmp
out
cmc
sbb
sti
add
pop
stc
int3
lods
mov
push
mov
shlb
xchg
fwait
mov
sbb
or
pop
mov
fiaddl
push
xchg
test
or
lret
call
mov
addr16
xchg
es
in
stc
push
test
ss
or
lock
pushf
pop
jmp
movsb
jg
xchg
loop
and
call
cltd
inc
adc
cmp
lahf
jne
in
lret
mov
shlb
imull
clc
mov
enter
mov
clc
sti
mov
js
push
fwait
jne
sbb
cmc
andl
add
int3
test
outsl
xor
jge
inc
adc
popl
bound
sub
or
sub
scas
movsl
adc
addr16
or
push
or
imull
insb
scas
xchg
or
and
sub
cwtl
jns
aad
xor
dec
fs
mov
daa
or
or
in
jle
outsb
outsl
jecxz
or
mov
in
jnp
push
jge
cs
adc
mov
adc
add
push
fidivl
add
test
shlb
jp
xchg
push
std
leave
adc
inc
dec
js
mov
repnz
inc
xchg
mov
sub
jbe
dec
in
adc
pop
loopne
sbb
pop
pop
or
push
push
inc
adc
sub
mov
cld
pop
cwtl
mov
sub
xor
sub
and
lahf
or
scas
add
or
push
loopne
out
stc
mov
shl
jmp
sbb
test
sbb
int
push
mov
test
movsb
dec
cltd
les
test
mov
outsl
in
sub
fstpl
mov
sbb
or
push
and
pop
sbbl
jl
pusha
adc
jg
roll
adc
mov
jno
stos
pop
xor
pop
data16
or
outsb
in
jecxz
cmpsl
out
sar
adc
jnp
xor
sub
pop
testl
aaa
jnp
or
jno
push
push
mov
mov
mov
jg
or
mov
mov
fstl
testb
fs
push
mov
sub
sub
hlt
mov
push
icebp
cmc
add
adc
es
loope
dec
cmp
push
js
out
add
fs
es
insb
rolb
in
imul
icebp
sub
int3
clc
mov
xchg
pop
stos
js
enter
dec
push
mov
repz
cld
cmp
pushf
mov
pop
or
jnp
jnp
xchg
movsl
pop
mov
xlat
pop
mov
xchg
js
scas
adcl
inc
les
sbb
iret
int
ss
push
test
inc
ret
out
inc
insl
sub
mov
ficomps
rol
or
sub
sub
dec
cmp
icebp
fiaddl
aad
or
icebp
cli
pop
outsb
adc
shll
xchg
outsl
aad
jge
inc
mov
pop
inc
int
sbb
push
inc
cwtl
or
aam
lret
jp
sub
imul
xor
ja
ljmp
cmpsl
adcl
jl
and
xor
outsb
cmpsb
pusha
cmpsb
jle
mov
and
ja
pop
movsl
imul
loopne
cmpxchg
add
jl
sbb
adc
push
pop
push
xchg
and
icebp
in
adc
pop
add
jp
arpl
pop
or
jge
insl
stc
repnz
mov
fcmovnu
sub
cli
jge
je
jb
jns
ret
xor
add
out
bound
imul
lea
push
lods
xchg
leave
cmp
jno
mov
jg
mov
jne
out
sti
in
insl
mov
inc
rol
inc
jne
and
pop
in
insl
add
sbb
xor
dec
in
lret
xor
pop
loope
stc
std
sbb
andb
adc
out
adc
or
or
scas
push
mov
out
jbe
subl
xchg
or
out
fildl
and
mov
push
das
inc
add
xor
js
pusha
movsl
pop
clc
xchg
ret
or
daa
mov
cmp
std
mov
movsl
ret
jl
jne
mov
repnz
adc
push
pop
inc
add
fs
jmp
fistpll
pop
in
mov
outsl
cmc
jp
mov
cmpsb
push
or
cwtl
or
jns
into
mov
into
loope
xchg
test
mov
fstl
add
out
and
cmpsb
lea
jmp
xchg
test
sub
repnz
mov
jmp
mov
mov
icebp
fisubs
popa
scas
sub
jb
sti
or
push
xchg
insl
sub
pcmpgtw
in
pmaxsw
xor
mov
inc
pop
arpl
ss
dec
jp
jl
push
stc
fwait
nop
aas
nop
ja
inc
inc
mov
mov
lcall
push
jne
add
sbb
fstl
mov
cltd
jo
add
push
mov
cmp
notb
xchg
xchg
sub
popf
push
jbe
fs
xlat
test
sbb
mov
or
mov
add
jae
enter
inc
jmp
std
test
pop
out
push
jp
iret
add
pop
aad
fs
lea
mov
mov
xchg
mov
pop
cmc
iret
pop
sahf
inc
sub
aad
push
pop
xor
fidivrl
out
sub
pop
enter
dec
aaa
mov
bound
sub
and
js
dec
jmp
jnp
pusha
leave
adc
sbb
jle
orb
insb
cmc
jmp
stc
inc
sbb
xor
cmp
aaa
imul
call
rep
lods
sub
movsb
inc
lods
cwtl
fcmovbe
lods
sub
sbb
ret
add
mov
shlb
arpl
out
fsub
inc
cmp
xchg
mov
das
inc
clc
mov
fs
push
inc
and
pop
rcl
imul
cmpb
lock
mov
fdiv
outsb
decl
rcll
pop
cmp
fldenv
push
stos
enter
punpcklwd
add
pop
mov
dec
add
pushf
pop
or
mov
inc
add
inc
adc
lret
xchg
sbb
repnz
mov
cmp
repnz
call
xor
sbb
add
mov
sub
int
cmpsl
out
adc
xor
mov
aas
lea
pop
sbb
rorl
movsb
rcll
mov
push
xchg
push
and
jno
jo
loope
sub
pusha
imul
xor
push
pop
xchg
add
pop
jbe
aad
jp
push
xor
ljmp
pop
mov
inc
cmc
scas
and
outsb
push
adc
test
test
mov
and
lods
daa
xchg
sbb
fildll
xchg
aas
sub
jns
repz
push
push
lret
arpl
push
bound
jno
loope
add
in
inc
dec
mov
mov
xchg
adc
push
sbb
or
pop
lea
sub
pop
std
enter
sbb
sbb
lds
pop
inc
mov
fdivs
xchg
test
mov
stos
decl
mov
imul
das
adc
je
rolb
out
jg
mov
dec
cmp
pop
cmp
nop
ljmp
xchg
mov
mov
adc
mov
mov
dec
or
or
inc
fbld
jmp
mov
sub
orb
pop
push
sarb
mov
sub
sbb
cmp
and
sbb
fisubrl
sarb
jo
ja
popa
add
test
lds
cmp
rclb
cs
inc
testb
pop
stc
sti
dec
push
mov
mov
or
or
dec
add
cwtl
dec
mov
pop
xchg
outsl
les
cmpsb
fcomi
cvtpi2ps
or
jmp
repz
jle
cld
jg
sub
call
xchg
jge
push
add
pop
insl
jns
scas
nop
or
pop
rcr
inc
fisubl
xchg
js
jp
jbe
cmp
pop
in
lods
insb
jmp
popa
fyl2xp1
bound
imul
push
leave
push
aas
xorb
mov
inc
scas
out
xchg
shll
mov
push
push
cmpsb
dec
repnz
pop
cmp
dec
jg
add
sub
subl
or
add
lret
int
ret
add
mov
ficompl
daa
adc
addr16
js
push
sbb
in
adc
int
mov
push
jecxz
cmc
jns
or
add
fisubrs
pushf
sbb
sbb
ds
push
cmpsb
push
sbb
push
inc
pop
out
shrl
hlt
lea
mov
inc
mov
aaa
movsl
push
push
xor
rcrb
mov
std
aam
and
fistl
xchg
xchg
xchg
in
mov
gs
repz
ljmp
adc
cmp
je
sub
xlat
rclb
adc
cmpsl
cltd
lea
or
das
bound
adc
inc
adc
cld
mov
insb
cmp
lods
test
lahf
mov
rep
jb
arpl
ds
std
and
jl
jg
xor
jae
xor
pop
leave
roll
arpl
repz
mov
jne
push
pushf
je
mov
movsl
cld
adc
insl
daa
icebp
mov
or
das
inc
call
cs
jecxz
es
pop
insb
je
das
mov
jmp
popf
push
std
add
or
out
out
ljmp
in
push
dec
aad
push
dec
xchg
mov
and
cwtl
repnz
rolb
insl
mov
orb
pop
dec
repz
hlt
push
outsl
add
cltd
mov
cli
xor
jp
jns
cmp
je
mov
loop
jmp
test
gs
movsb
jge
pop
scas
leave
cwtl
ds
mov
outsl
add
stos
leave
adc
sub
out
pop
xchg
xor
push
movsb
movsl
pop
into
sbb
mov
leave
inc
popf
shrl
out
ss
loopne
hlt
gs
push
inc
jle
loopne
jecxz
idiv
pusha
cmp
push
jb
jmp
pop
scas
dec
mov
push
mov
jo
in
adcb
insb
xchg
test
xchg
xchg
ret
or
gs
adc
shlb
in
das
shll
push
xchg
imul
rcll
lret
xlat
out
inc
daa
dec
int
xor
lahf
pop
add
mov
xchg
dec
test
and
mov
pop
jo
pop
push
adc
push
movsl
std
rcr
dec
aad
mov
loop
mull
mov
adc
pop
test
std
pop
push
inc
movsl
add
add
mov
xchg
scas
xchg
sub
fsubrs
lret
or
cmp
addr16
das
jb
sub
mov
into
dec
xor
data16
fsave
repz
ljmp
xchg
out
xor
outsl
ret
xchg
inc
loope
ljmp
andl
sbb
loopne
into
leave
xor
jl
sbb
lods
xchg
ficomps
cld
bound
pop
mov
int
sbb
pushf
mov
nop
xor
stos
lds
ret
repz
test
xor
mov
mov
sub
pop
movsl
pop
adc
iret
cwtl
imul
adc
sub
inc
sar
inc
ljmp
push
push
lret
mov
bound
jl
arpl
in
lds
jno
push
dec
adc
imulb
pop
fimuls
data16
repz
out
pop
pop
aas
hlt
mov
addr16
cli
and
rcr
xor
repz
sub
mov
outsl
aam
cmpsb
out
idivb
xor
jge
ret
insl
cmp
cmp
fisubrl
pinsrw
adc
clc
bnd
xor
inc
clc
int
sti
leave
hlt
and
mov
or
jne
cmp
mov
popa
je
outsb
adc
pop
push
daa
rcrl
dec
lock
cld
andl
sub
sbb
add
push
test
jg
fs
insl
xor
and
push
xor
das
adc
ret
dec
mov
insb
cltd
aas
ret
das
jo
test
inc
add
outsb
arpl
inc
jg,pt
cmpsl
add
es
mov
jp
mov
scas
mov
lea
sub
cmp
mov
lds
aaa
pop
xor
xor
divl
hlt
lcall
scas
pop
pop
out
cwtl
dec
stc
fldl2t
mov
out
xchg
adc
mov
cmp
dec
mov
movsb
sbb
xor
lods
cmpsl
jo
add
sbbb
mov
pushl
cs
int3
cld
fstpt
das
hlt
mov
jle
lods
mov
push
push
std
add
add
in
fucomp
lock
sbb
enter
inc
mov
or
cmpsb
pop
mov
or
dec
clc
fadds
or
fisubl
ret
test
into
arpl
and
add
jg
mov
in
jae
adc
or
lmsw
pop
jmp
leave
and
sbbb
push
ret
mov
push
sbb
out
stos
out
dec
iret
fsubs
adc
mov
xor
sbb
into
pop
dec
enter
ljmp
dec
scas
imull
ficomps
sbb
cmp
movsl
movsl
out
mov
repz
or
in
sbb
push
add
sar
and
lods
or
mov
and
daa
adc
in
add
mov
push
mov
cmp
pop
icebp
adc
mov
sub
and
lods
lret
cld
xchg
push
cmpsl
jg
push
dec
push
sti
in
incl
test
add
and
pop
sub
fwait
movsl
cmp
xor
jno
and
iretw
das
adc
xlat
push
push
shrb
mov
xlat
cmpsl
jmp
mov
shl
sub
mov
repnz
xchg
in
into
popf
jne
and
pusha
or
lahf
add
ljmp
xchg
mov
daa
dec
sbb
xchg
enter
jl
xchg
lock
enter
arpl
add
mov
stc
lds
mov
sub
xor
jmp
push
pop
fsub
xchg
jmp
push
and
inc
pop
popf
xchg
lcall
lea
sub
mov
bound
pop
lret
inc
ljmp
daa
pop
adcl
xor
push
jno
adc
into
testb
lret
push
mov
dec
es
inc
xchg
jmp
imul
mov
add
adc
xchg
sub
pop
sarl
mov
std
push
and
sbb
push
add
fisubl
cltd
rcrb
repnz
jl
or
int3
xor
fdivr
loopne
xchg
lods
sbb
icebp
fstl
rcrl
cmp
sub
std
pop
or
dec
push
inc
lds
lahf
enter
jae
cs
inc
out
shrl
mov
mov
mov
out
pop
int
fucom
or
stos
cltd
mov
outsl
and
shlb
inc
sbb
inc
jmp
popf
mov
idiv
repnz
pop
ljmp
pop
mov
sbbb
mov
sub
xchg
sub
sti
xor
fsubl
mov
popf
mov
and
pop
mov
mov
cwtl
mov
mov
jnp,pn
ds
dec
cs
outsl
je
ffree
into
jg
je
out
scas
sbb
push
ljmp
sti
movsl
cli
pop
pop
lods
sti
ljmp
jp
jmp
sub
dec
pop
mov
cmp
mov
cmc
out
inc
popf
adcb
mov
mov
cs
lock
inc
pop
outsl
pop
sub
lahf
cmpb
jmp
push
inc
and
lods
push
pop
cs
xchg
in
push
subb
mov
ljmp
pop
lods
out
daa
push
adc
jbe
cmpsl
sarb
cmp
jecxz
pop
insl
pop
into
sub
xchg
inc
pop
aas
ja
pop
mov
lock
jge
fidivrs
mov
pushf
jae
sbb
insl
dec
inc
jbe,pt
sub
jns
dec
pop
stos
pop
add
rep
jge
pop
imul
mov
in
pop
xchg
sti
inc
sbb
push
xchg
js
sub
rol
dec
cmp
lods
loop
mov
dec
inc
in
ficoms
add
enter
jo
or
jns
fxtract
out
popf
jae
adc
add
hlt
ja
mov
inc
push
mov
xchg
in
adcb
shrl
hlt
inc
out
popf
cld
xchg
jmp
ss
rcrl
mov
pop
add
insl
fwait
push
icebp
dec
pushf
bound
loop
jae
outsb
xor
fadd
xchg
int
or
rclb
icebp
repnz
mov
mov
ss
inc
fcomps
imulb
jbe
fwait
push
jns
and
pop
iret
inc
mov
inc
xor
lods
fdivrp
mov
mov
xchg
mov
out
daa
fbld
and
ret
push
stos
xor
xchg
or
mov
cwtl
push
addr16
js
mov
xlat
sar
pop
lret
push
test
cmp
mov
mov
mov
pop
jnp
jle
stc
scas
mov
loop
cmc
test
movsb
mov
loop
jecxz
jbe
fsts
jl
jb
push
sbb
inc
lcall
ret
subb
fstp
movsl
cmp
rcll
jns
rorb
stc
push
mov
xrelease
dec
sbb
cmp
pop
test
push
iret
mov
cmc
pop
shll
xchg
pop
mov
add
mov
out
xchg
add
imul
pop
xchg
int3
ret
dec
sbb
sahf
inc
pminub
ret
lock
mov
std
pusha
cli
sub
mov
in
or
outsb
fs
sub
loop
dec
or
lahf
ficoms
dec
dec
ss
add
mov
lret
and
mov
xlat
dec
pop
loop
xchg
pop
test
sub
in
cmpsb
repz
inc
aad
clc
fbld
add
sub
test
or
mov
loope
jbe
fldcw
out
lods
sub
cmp
insb
inc
cmpsw
arpl
push
jmp
pop
js
jmp
enter
sbb
jmp
add
dec
dec
jb
cmpsb
in
jbe
pusha
stc
push
stc
imul
xlat
clc
sub
fwait
arpl
aaa
jg
add
mov
sti
xor
lods
sbb
mov
roll
and
fisttps
movsb
mov
ja
mov
cwtl
sub
xchg
and
daa
fbld
xchg
fisubl
nop
fisttps
test
popf
and
inc
jb
stc
iret
into
imul
iret
lahf
mov
test
pop
cwtl
fdivrp
aaa
daa
or
inc
insl
les
dec
dec
std
stos
imul
push
xor
call
xchg
push
mov
cmc
arpl
jmp
xchg
cmove
add
ds
out
aas
imul
fwait
nop
aas
mov
sub
out
pop
inc
xor
popl
paddq
mov
add
mov
push
ds
push
aas
loop
push
xchg
int
cmpsb
jle
jle
mov
test
fstl
jle
xor
repnz
sub
out
test
ja
jmp
movsl
mov
iret
jp
jecxz
ljmp
addr16
clc
ret
mov
ret
stc
fwait
mov
aad
call
add
in
inc
std
mov
push
xor
es
fwait
push
mov
sbb
pop
mov
cmpsb
dec
mov
lret
mov
xor
dec
xor
lret
ret
in
enter
xor
dec
into
and
xchg
mov
add
push
sub
js
shll
adc
sub
xchg
xchg
push
sar
sti
pop
jne
aad
mov
mov
mov
scas
in
leave
cmp
lds
nop
in
cmp
in
div
repz
push
fs
pop
dec
in
ljmp
ficomps
mov
xchg
jae
inc
cmp
jns
jge,pn
sbb
scas
mov
inc
out
xor
loop
inc
imul
sub
or
pop
cmpsb
jmp
sbb
add
mov
lea
jns
gs
jb
pop
jmp
mov
fiaddl
jmp
or
jno
push
out
clc
or
cli
jno
cmpl
pop
pop
movsl
stos
outsl
test
stos
push
push
mov
xchg
es
pop
sub
add
aam
fwait
rorb
nop
mov
push
mov
imul
xor
jecxz
or
xchg
adc
jnp
sub
ds
jnp
cmp
pop
and
dec
loope
and
pusha
test
pop
sub
fwait
jl
sahf
mov
push
bound
adc
sub
cwtl
imul
jne
addb
enter
inc
cwtl
hlt
pushf
call
fnstsw
mulb
xchg
aas
mov
push
xor
aas
ljmp
jl
sbb
dec
xchg
push
adc
inc
mov
stc
and
mov
jbe
cmp
cli
mov
scas
or
fidivl
cmp
push
loope
sbb
jo
call
lahf
aam
push
xchg
or
mov
orl
ret
pushf
movsb
fldl
jmp
call
add
adc
shll
scas
inc
jne
xchg
in
xor
vmovmskps
jge
pop
pop
insl
and
subb
repz
jb
into
sub
adc
inc
jnp
xor
punpckldq
out
push
loop
ror
xlat
push
leave
lret
stc
mov
fsubr
push
push
outsb
sbb
xor
nop
xchg
pushl
push
sbb
test
int
push
pop
stos
call
push
cmp
int
mov
sbb
lcall
or
insl
popa
mov
movsl
or
sbb
pop
cmpsl
sub
add
adc
xchg
sbbl
lods
lret
bound
sub
add
not
add
je
ret
orb
fs
stc
mov
pop
mov
mov
mov
mov
jge
jmp
or
cltd
mov
adc
mov
and
in
repz
jae
mov
subb
push
xor
xchg
xlat
sahf
das
push
add
dec
das
pop
es
jge
inc
leave
or
cmpl
xor
enter
in
popl
mov
xor
iret
inc
xor
idivb
js
sti
js
dec
xchg
lret
add
ss
lock
xorl
mov
mov
jae
sahf
movsb
lea
loop
popa
push
or
outsb
adc
xchg
fsubrl
stc
stos
sub
cmpsb
push
sub
dec
cld
stos
xor
sub
stos
mov
aam
mov
ficoml
mov
movsb
mov
test
jg
lods
jo
ficomps
int
mov
add
shlb
jnp
test
and
inc
lret
inc
jae
sub
and
or
inc
lcall
or
pop
adc
dec
xor
shll
lahf
mov
pusha
cmp
repnz
xor
in
pop
popa
cmpsb
pushf
arpl
adc
imul
or
sahf
push
out
repnz
fnstcw
pop
jbe
inc
cwtl
adc
ja
ret
cmp
mov
xchg
fadds
sbb
scas
mov
mov
stos
repz
imul
add
out
cwtl
lahf
pop
shrb
pop
stos
sub
int
into
arpl
leave
in
je
outsl
xlat
imul
test
cmp
mov
or
subb
cmp
jbe
lahf
dec
xchg
jbe
dec
lea
sub
loop
adc
cli
dec
jl
fucomi
scas
pusha
mov
jns
xor
inc
adc
xor
int3
sub
rolb
sub
mov
mov
sbb
inc
fcomps
jge
xchg
insl
cmpsb
pop
adc
repz
and
in
imul
decl
ja
adc
ja
scas
xchg
sarb
xlat
aam
mov
int3
ret
popl
sarl
xor
adc
push
popf
xchg
sub
jge
hlt
call
popa
dec
add
or
in
imul
or
in
mov
jns
divl
jp
incb
pop
mov
jo
push
pop
in
xor
inc
or
adc
mulb
aam
rclb
pop
cmp
or
lret
xchg
iret
and
cmp
jecxz
add
inc
mov
loopne
mov
push
adc
fsub
cmp
push
outsl
aas
and
test
stc
push
cmp
push
outsb
fs
xchg
int3
push
mov
dec
shll
mov
mov
lret
ja
xor
rorl
push
sbb
ret
cmpsl
dec
je
push
jo
sub
pop
clc
xchg
arpl
push
pop
insl
ja
inc
pusha
mov
push
xor
push
sbb
and
jns
mov
cmp
mov
xchg
pop
jae
lds
out
repnz
and
pop
cmp
xlat
inc
jo
mov
outsl
mov
es
fcoms
jb
pop
mov
jb
jnp
add
mov
xlat
xchg
dec
dec
sahf
or
pop
mov
pop
pop
inc
dec
jl
ljmp
ljmp
mov
mov
gs
xchg
pop
pop
insb
jns
sbb
andl
push
leave
dec
cmp
dec
cli
mov
and
clc
or
sbb
cmp
ds
es
loop
mov
das
add
mov
inc
outsb
pop
cmpsl
mov
xchg
out
addl
mov
sbb
repnz
xchg
nop
dec
add
pop
xchg
pop
adc
sub
std
add
xor
push
inc
mov
popa
out
insb
mov
adc
pop
mov
scas
xchg
dec
jmp
ljmp
jmp
sbbl
inc
shr
clc
push
adc
inc
fmulp
pop
rclb
mull
cmpsl
inc
and
mov
stos
jmp
mov
sub
popa
and
xchg
mov
push
push
fwait
mov
lods
adc
sub
push
popf
inc
sti
pop
rol
loope
add
int
pushf
fldpi
pop
xchg
mov
push
mov
mov
inc
xchg
std
sar
popf
icebp
add
dec
xchg
mov
push
stos
sbb
and
cmp
fsts
stos
shlb
pop
inc
imul
outsb
sub
adc
dec
stos
xor
cld
outsb
pusha
push
scas
push
jnp
xor
sub
and
daa
das
fists
xchg
mov
lcall
inc
movsb
dec
mov
ss
jae
mov
cmpsb
out
xchg
and
mov
inc
in
pop
sti
fnstsw
adc
and
inc
aam
xor
mov
rorl
insl
adc
testl
sbb
jnp
insl
outsl
js
jno
xor
cmp
out
push
pusha
and
xchg
test
je
in
cwtl
adc
idivb
adc
xorl
adc
sbb
scas
ljmp
hlt
pop
outsb
das
inc
arpl
or
xchg
cmp
popa
bound
imul
pusha
pop
adc
mov
outsl
fnstsw
sub
jle
mov
push
fstl
or
fwait
ss
test
xor
inc
inc
repz
pop
aas
and
aad
pop
push
pop
nop
mov
das
nop
push
pop
or
push
fbstp
out
push
pop
insl
push
mov
bound
inc
sub
out
push
pusha
sarb
jmp
sub
xchg
pusha
and
cmp
lods
jo
dec
int
je
adc
das
lcall
and
and
push
addr16
shrl
idivl
lahf
xchg
jp
sub
or
test
test
push
cwtl
xchg
in
ljmp
xchg
sbb
sti
xchg
ja
sub
cmp
jns
cltd
movsb
or
cs
pushf
in
cmp
xchg
sbb
mov
mov
das
push
popa
stos
mov
pop
rcrl
lea
scas
xchg
repnz
and
push
add
sbb
int
rclb
mov
push
and
cld
stc
scas
sub
adc
ja
aas
xchg
cmpl
cmpsb
fistps
fs
mov
cli
sahf
fsts
push
jbe
fwait
icebp
inc
lea
stc
fistl
adc
dec
lcall
dec
sub
adc
pop
or
pop
in
fisubs
ret
add
leave
cld
divl
scas
pushf
lea
sti
dec
mov
dec
inc
jp
daa
iret
mov
adc
pop
and
je
scas
pop
mov
inc
inc
cmp
cmp
insb
xchg
xchg
or
add
sbb
adc
test
xchg
dec
and
inc
sbb
cmp
push
daa
xchg
mov
inc
push
movsl
cmp
pop
mov
adc
imul
shlb
daa
cmp
pop
mov
add
jae
add
loopne
pop
dec
gs
aaa
mov
scas
pop
mov
lds
inc
mov
push
xchg
into
inc
jns
xor
or
gs
inc
outsb
adc
mov
pop
jg
cwtl
push
sbb
pop
ror
scas
les
pop
int
push
mov
nop
cmp
xchg
hlt
xchg
or
into
fldt
or
mov
xchg
repnz
addr16
stc
negl
jnp
fsubrs
subb
and
int3
or
or
xchg
sbb
test
push
cmp
push
xor
pop
stos
lea
jb
into
lock
daa
cmp
outsl
gs
mov
cwtl
mov
inc
inc
repnz
test
inc
inc
mov
mov
inc
std
cli
in
jl
out
lcall
iret
mov
dec
sbb
loopne
cmp
in
mov
push
adc
movsl
orb
mov
daa
xor
lcall
leave
mov
dec
bswap
fcmovbe
out
sti
sub
push
cmp
dec
fsubl
lcall
mov
lds
xor
orb
xlat
scas
xchg
xor
inc
movsb
mov
scas
sub
sub
subl
sub
add
mov
pop
out
out
jge
mov
mov
cmp
add
incl
je
in
test
repnz
mov
dec
jns
mov
bnd
sbb
cld
outsb
mov
jo
push
ret
jmp
js
arpl
or
arpl
fs
dec
mov
cmp
pop
or
xor
inc
movsl
push
outsb
popa
xor
aaa
rclb
dec
cwtl
test
mov
pop
push
inc
sbb
push
clc
lods
xchg
lods
xchg
xchg
ss
ds
nop
and
jmp
loopne
xlat
enter
pop
mov
insl
mov
push
jp,pt
fdivs
mov
insl
sbb
pusha
jo
loope
xor
add
popa
fwait
mov
cs
jnp
lea
fbld
jns
cld
push
je
or
loop
adc
mov
mov
filds
pop
std
stc
in
mov
rolb
mov
adc
repnz
popf
int
ret
ss
sub
pop
inc
pop
push
mov
lods
leave
insl
mov
mov
xor
sti
dec
sbb
mov
mov
enter
repz
ret
inc
jbe
imul
leave
ljmp
aad
sbbb
adcb
sbb
daa
cmp
sbb
outsl
jnp
popa
mov
xor
add
dec
mov
xchg
xor
cmp
pop
movsl
lds
jne
lods
add
bound
pop
imul
outsl
or
mov
shll
out
push
adc
test
and
sub
push
or
jbe
insl
sbb
lods
push
push
out
aas
xor
add
cmpsl
incl
push
out
or
mov
jmp
push
inc
pusha
sbbb
test
mov
incl
clc
push
add
mov
xor
ss
sub
fnstcw
mov
call
int
adc
jbe
cmc
add
mov
jbe
scas
setae
fstpl
xchg
fmull
shl
call
cmc
mov
ficoms
out
inc
inc
add
jmp
prefetch
out
or
test
into
pop
imul
mov
aas
mov
hlt
push
ds
inc
mov
sbb
push
sub
cld
push
ss
cmpsb
cmc
and
dec
ss
pop
pop
xchg
and
pop
aad
lds
xchg
mov
sbbb
sbb
jle
int3
test
push
aad
cmp
adc
pop
jbe
icebp
sahf
and
add
xchg
push
cli
inc
mov
fs
push
daa
dec
push
push
rorb
aas
outsb
cwtl
push
mov
iret
fsubrs
or
sub
aas
popf
jle
shr
push
hlt
ret
scas
adc
xchg
cmp
jle
dec
aam
test
fwait
out
jno
pop
mov
pop
popf
out
dec
dec
pop
dec
lods
movsl
and
sub
insb
outsl
cmp
mov
adc
imul
add
insl
std
movntq
in
aas
jnp
sub
or
daa
push
mov
pop
sub
sahf
adc
and
dec
inc
scas
dec
and
jg
cmp
out
ds
stc
push
inc
xor
mov
and
xchg
lret
data16
ret
cmp
into
rclb
and
das
inc
test
test
in
adc
loop
daa
inc
outsb
xorl
adc
mov
mov
sub
and
mov
fwait
mulb
orb
mov
stos
xchg
cmpsb
pop
in
mov
sbb
ret
jns
fsubrl
add
hlt
pop
mov
adc
lods
cld
push
das
add
fadd
and
sub
mov
dec
mov
pop
inc
je
push
ss
pop
sub
pop
repnz
pop
ja
jle
repnz
call
icebp
aad
imul
xor
xchg
loope
mov
adc
sbb
and
mov
orl
mov
into
push
xor
in
pop
add
lahf
fwait
mov
inc
insl
sbb
fadds
cmpxchg
sub
sbb
xor
and
push
lods
mov
xchg
bound
inc
cld
ffree
sbb
or
stos
test
test
pop
mov
sbb
sahf
xor
outsl
inc
imul
dec
inc
or
push
push
jb
xor
adc
mov
pop
sbb
xchg
mov
movsl
push
jle
es
addr16
out
jl
leave
xor
js
mov
mov
shrb
loope
pop
idivb
mov
jb
stos
inc
imul
or
rcrl
add
xlat
dec
sub
fidivl
in
jl
pushf
int3
imul
or
pop
mov
and
mov
or
jle
in
pop
ljmp
adc
into
push
jo
pop
xchg
es
addr16
out
ss
xlat
jle
jae
shr
inc
rorl
fdiv
or
loopne
sbb
add
adc
sub
dec
dec
loop
fsubp
cwtl
mov
pop
push
sub
mov
push
mov
fwait
lds
pop
data16
jl
pop
and
pop
std
fst
mov
ja
lret
cmp
xchg
xor
mov
and
les
rcrl
lods
bound
sbb
nop
pop
nop
cmpsb
icebp
add
dec
adc
push
push
mov
cmp
push
out
sti
pushf
lahf
gs
pop
xor
xchg
xchg
loop
ljmp
cld
add
test
insl
or
ljmp
in
dec
aam
mov
mov
and
add
mov
lret
cwtl
lret
push
jo
inc
out
test
sbb
inc
and
or
hlt
push
ss
push
cld
out
xor
mov
adc
pop
pushf
push
addr16
mov
lahf
cld
adc
loopne
xchg
int
rcr
hlt
pop
jne
jb
rol
jle
data16
xor
ja
inc
jns
fs
mov
jmp
test
fistpll
outsb
sub
sti
sbb
cli
push
adc
and
sarl
out
ficompl
in
jne
std
jl
xchg
xchg
mov
lock
lods
and
inc
add
in
jae
and
sbb
cli
sahf
push
sub
incl
jne
cmp
adc
xlat
pop
pushf
int
in
dec
push
mov
push
jge
or
popaw
add
pop
bound
pop
adc
add
lods
outsl
pop
sbb
sbb
clc
mov
lret
shrb
fsts
iret
sbb
loope
push
jbe
ret
aam
aad
movsb
adc
bound
fists
adc
fidivrs
fsts
enter
sti
add
xchg
pop
jae
xor
notl
bound
aad
test
sub
repnz
jp
stc
pop
and
cld
std
outsl
es
pop
stos
push
ret
cmp
aad
or
sarl
iret
nop
dec
lea
stos
cmp
sbb
push
pop
dec
jne
xchg
ret
sbb
adcb
cmp
es
dec
iret
pop
repnz
pop
cmp
shrb
aad
ret
pusha
jno
xchg
lahf
jnp
adc
jo
gs
fistps
cmpsl
pushf
xlat
mov
xor
arpl
xchg
ret
ja
add
loopne
andb
pop
andb
jbe
mov
adc
popf
push
fwait
jae
xchg
stos
mov
fdivs
enter
push
mov
push
hlt
test
sub
mov
adc
insl
mov
pusha
jg
pop
xor
cmp
stos
les
jbe
xchg
pop
push
div
popa
mov
call
push
cmpsl
je
sbb
or
shrl
aam
mov
outsb
adc
shl
testb
ds
mov
insb
mov
insb
movsl
fnstcw
mov
lcall
pop
push
pop
clc
enter
movsb
cmp
lahf
mov
mov
add
sub
leave
sahf
out
push
pop
scas
leave
pop
clc
sbb
je
adc
dec
rcrb
mov
lcall
ficoml
dec
pop
or
fsub
into
data16
push
push
mov
repz
xchg
pop
jecxz
test
cmp
jmp
ret
xchg
popf
add
add
movsb
or
movsb
push
fs
insb
push
add
sbb
cs
testl
cs
inc
lods
loopne
daa
dec
mov
xchg
or
cltd
sub
push
adc
dec
icebp
scas
insb
fidivrl
xchg
jne
mov
or
mov
pop
outsb
in
adc
call
add
in
push
std
sbb
jle
cmp
or
ljmp
mov
mov
aaa
movsl
or
in
daa
lret
popa
push
dec
mov
add
ljmp
xchg
xor
dec
jmp
cmpsb
push
jnp
adc
jbe
mov
add
xor
das
scas
dec
mov
or
fcompl
push
mov
gs
mov
mov
xor
mov
dec
lods
xor
repnz
inc
mov
xor
jg
mov
in
out
out
sbb
call
xor
mov
hlt
adc
mov
pop
xor
cmpsb
add
stc
mov
mov
push
push
xchg
out
arpl
test
mov
add
push
ret
sub
push
imul
daa
sbb
adc
mov
push
dec
sub
jns
sahf
jbe
push
ljmp
outsl
test
fisttpll
cltd
in
pop
in
and
sub
push
add
dec
imul
mov
loop
inc
push
and
jmp
sbb
ret
push
sub
inc
push
mov
rclb
or
leave
je
jo
xchg
jmp
jno
cld
push
sbb
xor
jmp
push
add
mov
fsubrs
add
and
arpl
addb
sbb
inc
std
jmp
mov
pop
xchg
push
push
jp
jmp
fimull
push
dec
pop
xchg
mov
mov
test
jb
mov
pop
xchg
movsb
xchg
es
je
jp
nop
test
clc
xlat
or
mov
js
cmpsb
jge
cmp
xchg
jae
jp
repz
and
and
mov
outsb
call
mov
loop
mov
faddl
sub
fdiv
je
shl
pop
mov
mov
push
ljmp
jb
mov
sub
adc
ret
push
xchg
dec
add
idivl
orb
inc
dec
cmpsl
ret
xor
in
in
lods
mov
pop
jp
cmc
inc
cmc
pop
jmp
out
mov
push
inc
cmpsb
mov
bound
inc
jno
out
ljmp
fs
fsubrs
aas
pusha
or
mov
xchg
mov
xor
adc
ret
ja
loopne
and
mov
mov
and
cwtl
pushf
std
and
das
sbb
mov
mov
orl
es
fsubrs
cmp
and
mov
rcr
adcl
jg
jne
mov
push
enter
mov
dec
and
mov
fisubl
push
test
mov
int
mov
sub
mov
pushf
jecxz
jp
out
movsl
fcomps
adc
sub
xchg
cmp
stos
cmp
or
loop
jne
add
mov
loope
mov
xor
into
xorb
xchg
xchg
cmc
jmp
popf
sbb
sbb
sub
scas
mov
addr16
push
sub
jne
or
cli
sub
inc
add
xchg
aam
and
push
pop
mov
in
jae
push
adc
sub
mov
sbb
loope
aam
inc
or
inc
stos
push
sti
andb
ds
outsl
cmc
or
lea
data16
adcb
fdivr
mov
lock
imul
scas
mov
adc
test
sub
lds
mov
out
inc
xor
pop
adc
hlt
cmpsl
cltd
rol
movsl
and
xchg
xchg
and
mov
out
adc
retw
jbe
in
aam
bound
xchg
cmpb
int3
not
jecxz
mov
xor
insl
insl
mov
mov
pushf
pop
movsl
push
jae
push
movsb
pop
xchg
out
inc
ret
or
ljmp
outsb
mov
pusha
stos
inc
mov
push
pusha
jl
inc
popa
test
mov
mov
fcomps
push
jmp
xchg
push
popf
mov
loopne
lret
lea
test
inc
xlat
mov
mov
es
pusha
std
fwait
js,pt
add
dec
outsl
negl
sarb
or
xchg
ret
jecxz
daa
mov
mov
cltd
xchg
or
xor
or
adc
sub
and
pop
jb
in
xchg
xor
xorb
mov
adc
jbe
clc
or
shll
cmp
and
push
js
pop
mov
mov
js
sub
xlat
cmp
test
rclb
dec
mov
je
xor
out
aam
out
xchg
push
insb
xchg
pop
adcl
inc
pop
mov
inc
xor
idivl
jmp
addl
test
cmc
pop
mov
out
sbb
test
push
sahf
stos
in
imul
fistl
adc
or
or
imul
inc
mov
test
mov
jmp
pop
ljmp
fnstsw
xor
rolb
int
sub
inc
or
xor
sbb
nop
mov
ds
stc
mov
dec
and
sbb
shr
insl
cs
out
scas
adc
inc
inc
or
add
adc
fnstsw
jno
pop
and
push
sbb
add
mov
and
rolb
test
sub
enter
adc
cmpsl
jnp
loop
mov
sub
rol
jno
in
jg
clc
push
inc
daa
sti
sbb
push
mov
movsl
jecxz
fcmovu
repnz
and
pushw
mov
or
imul
push
movl
enter
outsl
clc
paddw
mov
repz
xchg
dec
lahf
push
loop
rorl
pop
pop
jo
jae
in
mov
jge
popf
rolb
lds
aam
mov
pop
jecxz
ljmp
arpl
cmpsb
sbb
mov
cmp
imul
jbe
dec
popa
fs
mov
pushf
dec
inc
and
out
fs
mov
aaa
pop
int3
hlt
cmp
filds
pop
xor
jmp
popa
xchg
cmp
push
lods
inc
push
shrb
mov
xor
fwait
inc
clc
xor
xchg
std
mov
jge
xchg
dec
movsb
push
leave
jmp
loop
mov
push
nop
jl
sbb
pop
scas
xor
pushf
cmp
mov
sub
adc
jg
call
mov
scas
sub
dec
mov
inc
push
mov
sub
movsl
adc
fdivrl
jo
lods
and
loop
push
iret
inc
in
scas
int
jno
scas
mov
jmp
push
xlat
jp
insl
dec
sbb
mov
xchg
adc
mov
mov
loopne
iret
int3
loopne
jae
iret
insl
and
icebp
mov
popf
sbb
rcrb
dec
xchg
popf
rcrl
enter
test
cwtl
push
xor
adc
and
test
fists
imul
push
cmp
pushf
mov
fldt
repz
push
jae
incb
inc
pushf
mov
cli
es
jae
cltd
push
std
dec
push
mov
push
or
inc
imul
and
test
inc
fs
push
repz
adc
int
addr16
dec
ds
fisttps
add
aas
jnp
jb
mov
mov
lret
popf
sbb
shlb
shrl
push
ret
pop
jbe
int3
pop
les
ja
test
test
sub
cld
andl
adc
cmc
aam
push
fst
loopne
loopne
mov
mov
push
hlt
lock
dec
lcall
jle
mov
mov
mov
cmp
cltd
mov
iret
sti
ret
pop
int
ret
mov
sub
adc
jg
pop
push
nop
stos
push
mov
push
rcll
and
jge
inc
popf
rorl
popa
sub
jmp
mov
popf
insl
scas
andl
lret
jae
add
add
test
in
xchg
inc
sbb
dec
mov
xor
mov
xor
or
cmc
jg
sub
clc
xor
leave
rcr
adc
or
or
mov
int3
int
xchg
test
mov
mov
inc
sarb
xlat
pushf
arpl
test
test
movsl
dec
into
shrl
sbb
inc
test
scas
jg
cli
mov
jge
mov
outsb
mov
shrb
push
cltd
and
ja
rorl
enter
das
or
push
mov
sbb
das
out
push
jecxz
push
ror
in
push
add
shll
fcmovu
push
loope
or
and
jnp
les
ffreep
sbb
adc
pop
push
mul
mov
hlt
dec
int
dec
pop
pop
dec
mov
ss
int
pop
dec
and
leavew
xchg
movl
fnstenv
cwtl
orb
or
mov
in
xor
psadbw
dec
test
jo
inc
jne
or
sub
repz
pop
sub
stos
inc
mov
jnp
stos
jg
xchg
dec
jl
fmull
and
dec
push
xchg
adc
xchg
cwtl
fs
pop
mov
into
xlat
test
arpl
xchg
adc
mov
push
scas
add
cmp
icebp
cld
inc
mov
cmp
jecxz
inc
lret
jmp
insl
cmp
clc
faddp
and
scas
notb
lods
cli
mov
push
pop
dec
outsb
jae
mov
ret
inc
int
into
or
lret
cmp
xorb
jne
jmp
push
std
in
dec
pop
add
or
inc
xchg
push
pop
jae
add
inc
inc
mov
dec
adc
pop
adc
or
mov
sbb
push
dec
xor
sbb
mov
sub
fldt
shrb
andb
sbb
add
mov
and
mov
cwtl
sbb
aaa
call
mov
stc
test
aam
xchg
or
cmp
aas
sbb
sbb
and
fldl
clc
and
xor
and
and
daa
inc
cs
adc
shrb
xchg
insl
fs
test
daa
cli
lahf
aas
scas
adc
cmc
mov
enter
sarl
dec
adc
jmp
mov
pushf
shlb
ljmp
in
lret
in
loope
stc
loope
push
js
pmulhuw
xor
pop
mov
clc
dec
dec
mov
jmp
mov
dec
mov
push
lds
pop
lret
movsb
mov
test
insb
sbb
jo
notb
adc
daa
mov
cs
cmp
xchg
incb
mov
mov
in
mov
mov
or
push
cltd
out
jle
mov
outsl
sub
hlt
jp
adc
xchg
int3
mov
jmp
push
and
pop
adc
mov
out
btc
mov
leave
pop
test
stc
sub
pop
addl
insl
xchg
hlt
loop
sbb
sub
add
sub
inc
mov
in
test
xor
aam
ret
cmc
or
push
movsb
insb
outsb
mov
lahf
mulb
xlat
leave
jns
pop
jno
das
add
cmpb
fucom
dec
aad
inc
inc
push
mov
adc
mull
add
cmp
or
outsl
pop
sarb
aas
pushf
cmp
scas
mov
add
jge
sahf
mov
ret
aad
sahf
std
jp
sti
xchg
add
pop
outsl
fcompl
in
add
fsubr
push
sti
cmc
cwtl
dec
adc
inc
ret
or
negl
fs
imul
dec
mov
adc
mov
pop
mov
mov
hlt
xorl
orps
hlt
pop
mov
jg
add
ja
sub
cmp
pop
push
xchg
or
int
mov
and
mov
xchg
lods
icebp
out
insb
push
shr
test
lock
arpl
add
pop
shll
mov
into
inc
notb
mov
dec
xchg
cmp
adc
outsb
fisubrs
sub
mov
data16
add
push
pop
inc
loopne
scas
test
mov
test
push
lock
fstpl
lea
mov
cli
mov
sbb
addr16
ficoml
push
push
push
addr16
pop
insl
sbb
push
and
shlb
gs
stos
lret
sbb
add
jmp
lahf
or
cli
cli
mov
xchg
aas
xor
pop
iret
lds
imul
adc
popl
call
adc
test
pusha
mov
ret
iret
ss
out
sbb
xchg
mov
inc
pop
arpl
and
into
jecxz
lret
dec
or
sahf
lock
sub
cmpsb
inc
mov
pushf
jg
push
sub
paddq
mov
loopne
mov
fistl
add
mov
push
cmc
imul
pop
push
sub
jno
ret
xchg
or
xchg
sbb
test
inc
dec
addl
std
sub
mov
sbb
mov
mov
stc
stos
rcrb
test
notb
js
test
xlat
inc
sub
aad
mov
inc
aas
leave
adc
jo
mov
and
xor
popa
push
mov
aaa
cmp
xlat
call
decl
fidivrs
decl
mov
sub
inc
cmpsl
mov
xor
xchg
cld
dec
xchg
push
mov
js
subb
imul
and
pop
mov
sti
cld
loopne
aaa
and
out
int3
repnz
es
ss
aas
jle,pt
mov
ljmp
mov
stc
cmp
fnstsw
clc
jae
dec
ds
push
mov
dec
es
aam
mov
imul
sbb
dec
lds
or
fistps
xorl
mov
daa
inc
adc
andl
sti
dec
xchg
inc
std
mov
stos
lcall
scas
add
daa
shl
outsb
stos
bnd
lods
lcall
cmp
into
pop
lret
sbb
cmp
fucomi
lods
push
fsubrl
jnp
not
mov
mov
daa
cmp
mov
pop
popa
ror
mov
fdivr
dec
mov
xchg
pusha
xor
mov
mov
adc
arpl
das
icebp
gs
bound
std
rclb
push
sub
jae
sub
push
pop
add
adcl
push
push
jb
add
lret
add
clc
ja
fdivl
out
cmp
jne
test
xlat
add
cmc
cmp
jae
jg
sub
prefetcht0
mov
inc
fwait
pop
aas
push
daa
push
imul
std
xchg
andl
xchg
mov
mov
iret
sub
call
fdivs
enter
push
push
push
push
in
sbb
push
sahf
push
repz
repnz
xor
shrl
ljmp
add
jl
das
cmp
data16
jg
inc
decb
cmp
mov
mov
imul
ficoml
mov
lock
dec
or
inc
xchg
mov
cmp
or
push
divl
cmpsl
push
test
sbb
cltd
push
xor
or
mov
out
sub
xor
push
and
inc
push
jnp
dec
movsb
inc
mov
mov
adc
aam
xlat
andb
pop
xchg
cld
mov
adc
cmp
mov
push
ret
in
jnp
sub
sub
lds
pop
test
int
pop
and
orl
and
sub
pop
mov
enter
nop
out
dec
aam
or
inc
cwtl
fisubl
aaa
sub
inc
cmp
pop
cmc
mov
insb
add
loopne
adcb
fiaddl
push
inc
pop
test
push
lahf
and
je
fstl
dec
cmp
mov
sbb
mov
push
cmp
jmp
std
int
dec
lcall
mov
xchg
inc
or
xor
lret
mov
mov
insb
inc
enter
sbb
mov
add
popf
lock
sub
ja
xchg
mov
inc
lock
stos
jne
mov
sub
or
sub
mov
cmpsb
cmpsl
mov
sub
lods
xchg
and
adc
and
mov
push
mov
test
fsubrs
gs
in
cmc
data16
adc
mov
pop
jno
push
adc
fwait
adc
fstps
xor
sti
xchg
std
push
or
xchg
lds
inc
sub
mov
mov
and
mov
push
xchg
push
mov
cld
addb
dec
sysenter
lods
jno
in
lret
adc
sbb
pop
cli
xchg
scas
bound
or
out
xor
xchg
dec
orl
mov
arpl
data16
dec
js
pop
push
popa
outsb
mov
nop
cmpsb
inc
mov
es
sub
mov
jns
fadds
mov
addr16
adc
icebp
test
test
and
inc
hlt
or
push
push
sahf
dec
mov
mov
pop
adc
mov
sub
mov
cmp
fidivrl
aaa
mov
mov
inc
mov
mov
cltd
dec
xchg
sbb
mov
push
mov
add
pop
xchg
daa
lods
cmp
pop
push
in
pushf
push
jmp
popf
jecxz
popa
jnp
fwait
cltd
mov
outsl
pop
je
or
cmp
movsb
mov
xor
adc
ja
push
add
add
popa
cmp
pop
and
idiv
jns
or
sub
sbb
push
in
addl
mov
mov
sub
mov
enter
and
out
shrb
cmp
jno
popf
inc
jl
add
xor
sbb
pushf
in
push
push
pushf
out
scas
stos
add
std
xchg
push
push
mov
jne
fdivs
jecxz
push
push
adc
js
xchg
arpl
sub
cwtl
xchg
jge
stos
push
hlt
movsb
push
inc
outsl
lcall
sbb
sbb
aam
int
lret
int
pop
jae
jl
mov
mov
sti
add
push
or
push
or
ljmp
mov
cld
insl
jl
int3
aad
mov
mov
mov
push
mov
lret
aas
ret
pop
pop
out
shrb
sub
loope
sahf
out
inc
js
dec
mov
pop
mov
mov
shlb
add
mov
xor
nop
faddp
jmp
enter
or
mov
mov
cmpsb
imul
test
scas
jg
loopne
iret
add
test
insl
ud1
and
cwtl
outsb
xor
fcmovu
pop
loop
jae
adc
stos
push
jle
jle
clc
cmp
data16
out
inc
jns
imul
mov
and
mov
dec
push
loop
jns
adc
xchg
pop
test
stos
jecxz
cmc
fcoml
mov
push
add
loop
pop
mov
jle
pusha
inc
inc
sbb
and
enter
push
pop
mov
cli
inc
ds
push
pop
and
mov
mov
add
pop
iret
pop
leave
pop
test
insl
adc
adc
push
sbb
sub
addr16
cmp
daa
xchg
cli
inc
mov
sub
and
mov
les
stos
fstl
and
jl
movsl
enter
ffreep
jl
xor
dec
dec
outsl
mov
inc
push
xlat
into
pop
lock
dec
sbb
and
loopne
xchg
mull
fwait
pop
jg
xchg
outsb
mov
daa
xchg
mov
xchg
lcall
inc
or
inc
xor
jns
mov
dec
dec
xchg
push
mov
mov
add
xor
xchg
sub
mov
mov
call
test
cmp
mov
mov
cmp
icebp
mov
dec
repz
gs
sbb
push
rcrl
dec
xchg
dec
ds
add
add
cmpsl
ror
push
mov
shr
sbbl
test
and
jp
dec
insl
adc
pusha
cmp
je
loop
das
shr
cmc
pop
sbb
jb
ret
or
aam
mov
shll
pop
cli
mov
fstpl
jae
mov
xchg
aaa
xchg
cltd
bound
mov
jg
sbb
jb
mov
shr
lods
lcall
add
dec
xchg
jg
add
in
dec
cmp
out
bound
jae
repnz
cmp
mov
adc
out
and
mov
incb
pop
mov
sbb
in
pop
jno
sbb
fcoms
test
ror
adcb
stos
shlb
jp
call
icebp
dec
jecxz
add
mov
inc
inc
sbb
xchg
and
jb
test
add
imul
mov
pop
mov
dec
or
dec
xchg
imul
icebp
adc
repz
inc
mov
test
or
or
divl
je
pushl
mov
add
inc
mov
push
dec
adc
sahf
or
insb
jb
popf
ret
imul
push
sbb
in
xor
sahf
pop
popa
loope
insb
mov
cmp
cmc
adc
xchg
repz
pop
push
sbb
ljmp
cmp
xchg
adc
push
add
movsb
loopne
int3
inc
mov
lods
or
movsb
inc
pop
dec
jmp
outsl
jmp
test
dec
lock
loop
loop
mov
mov
hlt
ret
repnz
outsb
imul
adc
pop
jge
mov
into
in
add
imul
xchg
push
dec
lcall
xchg
xor
repnz
cltd
mov
pop
push
das
in
dec
ret
add
xor
add
pop
xchg
add
pop
add
negl
cmp
sti
lahf
mov
pop
cmc
mov
and
push
lods
jo
mov
shl
fmulp
push
sub
jp
pop
push
out
les
sbb
movsb
adc
push
mov
push
repnz
and
repz
push
ja
movsl
cmc
fnsave
and
fs
xor
loopne
in
xchg
sub
add
aam
in
cmp
std
jnp
fldcw
push
sahf
insb
nop
test
cmovne
sub
sub
cli
mov
ja
adc
das
dec
push
add
lret
dec
add
popa
decl
and
or
repnz
xor
test
add
xchg
add
cmp
add
mov
adc
jne
sahf
sbb
das
sbb
add
push
test
iret
sbb
dec
lret
stc
test
roll
xlat
jle
les
jmp
ret
loop
popa
fwait
mov
aam
cwtl
inc
lock
push
mov
xchg
jae
adc
fisubrl
push
cmp
xor
outsl
lret
jl
xor
sbb
inc
cld
pop
rolb
sub
fstpt
xchg
adc
pop
add
dec
push
jno
add
push
xor
int
in
xor
or
stos
push
sarb
pop
fildll
icebp
push
xor
jbe
shl
add
mov
inc
dec
inc
decb
cmc
aad
sti
pop
pop
cld
xor
jo
ret
mov
push
and
cld
sub
jg
jecxz
mov
xchg
mov
mov
sbb
cmpsl
idivl
popa
mov
xor
adc
pop
sbb
jns
lds
inc
push
mov
mov
dec
mov
and
out
lret
outsl
clc
jae
inc
jmp
jmp
aam
lahf
int
mov
movsb
sbb
shrl
bound
jo
lret
ljmp
std
jmp
push
add
outsb
lds
mov
repz
js
push
xchg
push
ljmp
adc
in
push
lcall
mov
fidivs
call
sbb
sub
pop
lret
mov
in
lods
sub
xor
sbb
in
inc
add
sub
xchg
les
mov
lock
push
sbb
into
hlt
and
jno
add
js
jns
lahf
es
fimull
xor
popa
dec
add
rcr
pushf
fwait
hlt
inc
add
cmovbe
pop
arpl
mov
rcl
dec
xchg
sarl
leave
jbe
mov
mov
jl
sub
addr16
call
and
jmp
sub
les
sbbb
out
imul
lods
mov
lock
jle
fld
popa
pop
test
sbb
aam
jg
data16
push
push
in
rcrb
cwtl
jmp
dec
xchg
outsb
bound
ret
popf
movsb
pop
je
orl
sub
dec
sar
add
push
add
stos
aam
xlat
push
xchg
pop
sbb
ds
stc
fucom
jp
sahf
add
dec
std
lds
orb
iret
stc
mov
mov
jo
test
test
imul
mov
push
popf
cmp
sub
repz
outsb
pop
icebp
stos
cmp
enter
pop
cmpsl
popa
ret
shrl
fistl
pop
scas
dec
out
push
int
lcall
dec
out
mov
dec
lret
gs
js
dec
cmp
xchg
ds
das
jp
jl
imull
adc
in
js
jmp
testb
xor
stos
pop
pop
push
jecxz
jl
adc
