push
out
jp
mov
and
pop
jae
clc
pop
fwait
and
pop
fwait
lock
pop
fwait
popa
and
push
or
lea
test
mov
sti
adc
ror
sub
xchg
sbb
sub
out
fnsave
scas
dec
adc
sbb
sub
mov
and
adc
push
push
or
filds
pop
into
stos
adc
cmp
xor
jb
xchg
stos
stos
push
adc
je
jl
mov
sub
push
repnz
sub
sub
ret
xchg
and
pop
push
push
push
aad
push
ficoml
rcll
mov
pop
push
xor
push
xchg
sub
decb
out
sahf
js
je
popf
xor
push
dec
fsub
sar
sub
adc
cli
sbb
jecxz
sub
and
pop
fwait
cli
fwait
xor
add
out
fadds
filds
sbb
and
xor
filds
popa
fisubrs
mov
addr16
dec
pop
pop
sar
jb
cwtl
jecxz
sbb
cmp
xchg
pop
and
or
xchg
enter
fbstp
fistps
and
or
arpl
sbb
fistps
sub
push
icebp
mov
and
pop
sbb
add
mov
cli
mov
xor
dec
stc
push
arpl
xor
sub
push
cmpsl
fs
add
sbb
pusha
stc
stos
aas
stos
lods
push
adc
rcl
xor
sbb
and
imul
test
pushf
and
pop
push
stos
jp
popa
pushf
push
and
insb
stos
test
and
jbe
mov
mov
rcl
fdivrs
mov
adc
idivl
jb
and
rcr
and
xchg
fs
scas
loope
roll
stos
mov
add
mov
fmull
mov
cwtl
mov
movsl
sub
andl
cmpb
aas
int3
mov
mov
sub
rclb
adc
rcll
out
shlb
inc
in
rolb
addr16
int
fsubrp
mov
cmpsl
sub
addr16
jecxz
scas
popa
fsts
int3
push
imul
gs
cmc
pop
lea
adc
xchg
outsl
push
xor
jbe
rcl
int
ficomps
loopne
ret
lret
xchg
xor
faddl
shlb
xchg
inc
in
pop
movsb
mov
rclb
cmpsb
inc
call
push
lods
mov
cltd
adc
mov
xchg
cmp
movsb
rep
scas
and
jge
add
pop
or
out
pop
push
xchg
rcll
lret
pushf
into
pop
cmp
imul
in
sarb
jns
mov
adc
rolb
ret
mov
add
xor
cs
out
adc
inc
out
xchg
and
iret
test
int
and
pop
cmp
js
sub
cmc
shrl
cmp
int
fisubrl
loop
sarb
sub
rcl
xor
mov
roll
into
loop
add
roll
mov
popa
push
add
roll
rclb
sbb
cmp
in
rcl
insl
daa
cmpsl
shrl
cli
jge
add
pushf
push
and
adc
dec
inc
cmp
inc
in
shr
inc
xchg
rcl
xor
lahf
aam
mov
lods
inc
pop
sbbl
int
stc
and
out
add
ds
lods
cmp
mov
add
cs
scas
cmc
outsb
gs
cmc
pop
lea
adc
xchg
outsl
push
and
arpl
and
mov
mov
rorb
pop
and
in
roll
rclb
enter
in
mov
call
jmp
pushf
mov
rcll
xchg
mov
scas
sbb
mov
pop
and
push
in
pop
lods
mov
xor
lgs
push
sub
xchg
sarl
rcll
ljmp
sub
ljmp
rcl
mov
in
mov
insl
cmp
xchg
mov
adc
ret
roll
sub
mov
xlat
xchg
rorl
daa
rolb
addb
xlat
push
xchg
jge
rcr
ret
push
rcl
inc
addr16
and
inc
mov
subb
in
sub
ret
adc
fxch
cltd
es
mov
pushf
in
int
xchg
loop
flds
out
fdivp
cmpsl
aam
icebp
lahf
pop
xor
lret
scas
flds
ficomps
in
xchg
jle
rcrl
mov
icebp
sbb
pop
jns
or
pop
scas
dec
movsb
lds
sarb
in
jne
mov
pop
outsb
push
push
xor
mov
cmp
addr16
roll
xor
inc
in
rorl
sbb
xchg
pushf
mov
testl
mov
scas
sub
cs
cld
pop
loop
sbb
movsb
dec
out
scas
fldpi
out
movsl
pop
jecxz
and
xlat
rolb
in
xchg
adc
cmpb
jl
cs
outsl
adc
lods
dec
pop
test
flds
out
cli
adc
jecxz
mov
in
mov
roll
shlb
inc
pop
jb
inc
in
pop
out
inc
xchg
ficompl
call
cmp
popa
inc
jg
jmp
jnp
jbe
mov
clc
ljmp
outsl
jb
inc
in
rcll
in
rcl
jge
mov
roll
xor
inc
in
shll
loop
adc
mov
insl
cmp
sub
adc
inc
fcompl
inc
pop
jmp
inc
in
pop
xchg
rcl
inc
in
rcrb
addr16
adc
rcl
xor
pop
cmpsl
dec
out
movsl
push
inc
fsts
xor
rcll
in
sub
mov
pop
mov
jbe
rcl
int
ficomps
loopne
cltd
pop
addr16
jg
lret
addr16
push
hlt
cmpsl
and
sbb
pop
mov
aad
and
sarb
push
leave
cmp
adc
jmp
dec
popf
sub
rolb
cs
pop
mov
push
sub
repnz
lock
in
sahf
adc
mov
xor
mov
daa
adcl
xor
mov
jmp
test
xchg
or
mov
push
mov
inc
hlt
mov
es
popa
push
push
fstp
and
pop
push
or
sbb
push
pop
push
or
je
push
cs
pop
mov
cmc
in
mov
out
inc
mov
mov
addl
sbb
mov
pop
or
fiadds
hlt
xlat
push
mov
lret
jge
mov
fld
in
ljmp
out
xor
shll
cwtl
jbe
push
mov
fsubp
rcrb
popf
xchg
rcrl
push
fsub
jae
stc
shlb
repz
xor
popa
jg
mov
repnz
inc
mov
mov
int3
outsb
repz
scas
rcrl
jmp
jne
or
orl
mov
jne
jb
aad
push
shrl
mov
sarb
add
fnstenv
jmp
push
popa
aad
mov
adc
int
fsubp
xchg
xchg
rcll
data16
addl
mov
mov
pop
nop
ror
xorl
push
lods
dec
xlat
cmpsl
sarl
ljmp
lds
int
in
push
xchg
aam
sahf
outsl
cmpsl
push
mov
mov
xor
jecxz
pop
addl
rorl
jge
lods
ljmp
mov
cli
mov
add
xchg
out
int
mov
cmp
je
pop
dec
ljmp
dec
jecxz
mov
xchg
loope
jg
inc
fs
pop
rclb
push
mov
adc
test
cmc
inc
jl
nop
xor
fmuls
stc
das
cli
ret
daa
loop
stos
fs
nop
loope
aad
adc
sub
mov
dec
jns
adc
jno
xchg
pop
adc
adc
jl
in
mov
xor
xor
scas
and
xchg
xor
test
loop
push
test
adc
push
ds
adc
cltd
loop
sbb
test
stos
inc
push
lds
aas
rorb
aam
repz
fldl
call
fstpt
xor
and
fidivl
push
dec
int
aaa
push
mov
stos
flds
lcall
jnp
add
sub
loop
xchg
in
xchg
push
and
jecxz
mov
mov
and
hlt
div
adc
pop
int3
sub
xchg
jb
mov
push
mov
adc
mov
lahf
adc
rcl
mov
push
push
mov
aad
inc
fidivrs
and
or
lahf
sub
jle
repnz
adc
js
xchg
ljmp
call
dec
fimull
sbb
ror
mov
sbb
loop
aam
push
aam
or
fildl
in
mov
addr16
mov
fistps
push
cmp
inc
xchg
push
in
int
jne
out
lret
rorb
fnstsw
lods
bound
into
pusha
sub
test
int3
push
pop
push
hlt
inc
xor
fldenv
lret
and
fiadds
dec
mov
jg
aam
addr16
add
in
gs
dec
loopne
stc
push
mov
test
push
and
mov
adc
add
dec
subb
aam
add
rcrb
adc
out
nop
pop
dec
lret
repz
mov
fisubrl
sub
mov
xchg
mov
iret
cmp
pushf
fcoml
stos
ret
in
ror
pushf
jns
mov
fstp
fldenv
mov
pop
dec
mov
fs
dec
jmp
arpl
pop
push
jae
cmp
ret
ds
sbb
aam
mov
mov
pop
push
shll
ret
or
xor
outsb
dec
and
lods
cli
and
xchg
mov
add
xchg
fs
aam
sbb
jns
sbb
push
cmc
test
push
incb
push
mov
pop
fisubl
scas
movsb
repnz
cld
jp
and
repnz
dec
pop
out
jbe
cmc
cld
or
scas
dec
lock
xchg
pop
leave
lret
inc
gs
and
jb
pop
cmpsl
clc
cmp
outsl
pop
rcll
push
pop
or
and
fs
mov
jb
add
mov
loope
jge
mov
dec
fsubrl
push
gs
fwait
pushf
xor
leave
mov
es
xchg
clc
dec
mov
cmp
les
or
int
sete
lret
mov
fnsave
testl
mov
rolb
pop
loope
mov
xchg
movsl
enter
aaa
scas
bound
aaa
stc
ljmp
or
and
pop
mov
or
sti
mov
xchg
fmulp
fdivs
in
shll
int
imul
mov
cld
repz
jb
outsb
cmp
ja
outsl
outsb
add
outsb
pop
push
mov
mov
push
outsl
mov
ljmp
pop
mov
es
inc
out
fs
mov
icebp
leave
jb
adc
xchg
inc
cwtl
rcll
into
addl
and
sub
pop
test
jne
mov
out
arpl
sahf
push
int3
in
jecxz
xchg
data16
cli
xchg
data16
inc
mov
je
sub
test
fcoml
or
ror
adc
lahf
cmpsb
pop
jmp
and
jecxz
push
pop
sbb
movsb
fildl
out
and
xchg
inc
sub
lret
imul
int
adc
jmp
cs
fnstsw
ss
xor
dec
inc
gs
divb
loop
gs
mov
xchg
rcll
mov
je
mov
outsl
lods
jecxz
fcoml
push
xchg
dec
inc
pop
pop
adc
cs
lret
loopne
sub
jp
out
movsl
dec
jge
adc
repnz
push
leave
leave
or
lret
fsubrs
push
pop
out
xlat
inc
cmp
and
test
cmpsl
xchg
idivb
xchg
jmp
mov
pop
sahf
and
pop
sub
cwtl
int
ljmp
jle
jo
adc
add
ret
inc
out
test
ss
push
fimuls
pop
and
inc
add
outsl
out
es
imul
pop
dec
and
xchg
pop
xchg
adc
cmc
add
lods
scas
imul
imul
sbb
arpl
iret
rol
test
sbb
ret
lds
shlb
pop
ret
cmp
xchg
ja
fisttps
jne
dec
mov
adc
cmp
int3
add
sbb
fsubrs
push
push
push
push
cmp
pop
outsb
add
adc
loopne
cmp
scas
xor
or
mov
mov
ss
repnz
ret
mov
or
dec
xor
mull
cs
sub
test
int
adcb
or
add
and
test
hlt
xchg
jo
js
pop
aam
cltd
cmp
ljmp
jb
add
scas
fwait
pop
jb
fcmovnu
add
or
push
inc
outsl
push
mov
jo
sbb
jg
and
std
xor
cmp
fdivl
mov
add
pop
sub
push
pop
out
cmpsb
fnstcw
pop
and
imul
adc
jg
pop
insl
jne
sahf
arpl
repz
pop
dec
in
ss
outsb
cmp
add
pop
sbb
jne
mov
inc
lds
aad
fidivrs
push
fcmovbe
mov
shrl
mov
push
mov
adc
sub
js
or
pop
xlat
out
pop
lock
scas
outsb
and
imul
sbb
and
xchg
and
adc
js
cmpsl
fisttpl
clc
cmpsl
fsubs
inc
or
loopne
dec
movsl
repz
and
loope
cmovae
fisubrl
pop
rclb
push
xchg
add
fldcw
sbb
xor
jne
and
cmp
movsb
scas
in
cltd
js
sbb
cld
mov
data16
nop
add
rclb
lret
std
xor
pusha
adc
daa
leave
dec
icebp
pop
push
fistpll
imul
mov
mov
mov
pop
stos
clc
xor
xchg
dec
mov
in
xchg
add
rcrb
sti
push
push
hlt
cs
pop
addr16
js
clc
repz
mov
dec
icebp
xor
fxam
dec
dec
int
push
ds
add
jbe
inc
mov
xchg
pop
mov
sbb
out
xchg
in
fwait
sbb
and
cmc
push
lds
cmp
adc
jne
movsb
push
into
mov
call
and
push
stos
dec
adc
fisttps
lock
push
out
divb
mov
loopne
push
test
out
jecxz
jl
test
bound
pusha
aad
loop
lcall
or
test
dec
aaa
adc
addr16
fsubs
loop
jo
push
mov
popa
sarl
mov
and
repnz
mov
lods
outsb
or
mov
jmp
pop
inc
out
int3
in
sbb
lret
cmp
aaa
neg
push
jmp
hlt
ja
arpl
cmp
pop
mov
data16
push
lahf
mov
insb
mov
adc
and
jnp
gs
sarb
xchg
mov
cld
pop
and
lahf
pop
out
xor
int
ficomps
sahf
rorb
sub
jcxz
mov
ljmp
push
push
cs
cli
pusha
mov
dec
mov
roll
inc
adc
lds
or
testb
or
js
sbb
fsubp
push
push
andb
jne
xchg
xchg
push
mov
jmp
popl
push
cs
sub
inc
int3
test
inc
mov
ljmp
scas
fmuls
cmc
sahf
inc
fdivs
add
xor
movsb
pushf
repnz
and
fidivl
or
sarb
or
sub
sbb
lods
and
cmp
and
mov
jl
sbb
lret
mov
dec
dec
or
xlat
pop
and
dec
sub
push
mov
into
subb
sahf
rclb
jecxz
sarl
mov
pop
into
mov
cltd
fcmovu
ret
jmp
cli
loopne
dec
xchg
popf
stos
add
sbb
push
fstpl
mov
and
jbe
notb
xchg
popa
aaa
imul
fwait
dec
stos
cwtl
mov
mov
cmpsb
mov
cmp
fnstenv
call
mov
lods
aam
imul
inc
add
outsl
mov
xchg
dec
imul
push
lods
leave
jmp
dec
push
lea
pop
dec
add
aaa
xlat
push
cs
inc
adc
xor
xor
xor
ljmp
aad
jp
sbb
push
sbb
test
fwait
ret
rcrw
imul
dec
outsb
push
sahf
xchg
sti
aam
xchg
adc
in
sub
jbe
cltd
jg
fisttps
push
fs
dec
popl
pop
cld
pop
scas
je
mov
push
add
jbe
test
sub
xor
inc
sub
gs
filds
push
ret
or
movsl
add
movsl
mov
and
lret
leave
fiadds
pop
mov
inc
cmp
in
xor
les
nop
test
in
push
or
andb
dec
ds
ret
mov
test
dec
je
xor
fdivl
xacquire
icebp
mov
cmp
mov
out
daa
repnz
adc
inc
out
sarb
sub
xor
pop
xchg
rcll
or
movsl
cwtl
fcompl
xor
rorl
xchg
insl
stos
repnz
mov
outsb
cmp
adc
mov
lret
pop
jge
lret
test
add
cmovo
and
or
sbb
xchg
mov
cmp
shrb
adc
fcmovu
testb
add
aam
ficoms
jno
jae
cmp
flds
ret
sbb
cmpsl
jno
fistpll
movsl
pop
jmp
ljmp
add
xchg
popf
adc
je
pushf
add
pusha
stos
mov
jmp
push
dec
gs
aad
and
xchg
jecxz
sti
sub
mov
mov
dec
add
inc
add
lcall
rcr
lods
mov
cli
arpl
out
repnz
push
pop
xor
orb
rclb
cmpsl
push
sar
repz
aaa
xchg
jecxz
aaa
call
call
push
sbb
cli
adc
fdivrs
push
add
cwtl
xlat
add
shll
cli
pushf
frstor
mov
ffreep
fnstsw
mov
mov
mov
cmp
daa
icebp
iret
mov
call
ret
out
pop
add
or
push
scas
insl
pop
xor
adc
rcl
mov
out
dec
and
test
and
cmp
sub
fdivp
iret
hlt
mov
xchg
or
in
cmp
ret
ret
test
cmpsb
dec
lds
pop
pushfw
idivl
mov
lret
sbbb
enter
sub
sub
inc
inc
pmulhuw
push
push
daa
jb
sbb
das
jecxz
movsb
dec
xchg
add
test
fs
xchg
mov
addr16
movsb
mov
mov
dec
adc
inc
lahf
push
shrl
or
xor
dec
xor
xchg
movsb
mov
sub
jb
cmc
dec
add
xor
in
ret
mov
add
pop
addr16
lahf
mov
test
fdivrl
jmp
mov
or
xlat
popl
xchg
std
mov
mov
call
push
gs
cmp
jge
pop
mov
cli
xlat
inc
hlt
sbbl
aad
in
dec
or
jne
lock
pop
cmp
ror
add
and
rorl
pop
mov
pop
xchg
mov
loop
push
pushf
add
adc
dec
je
dec
rcrl
pop
in
fistpl
cmpsl
scas
bound
test
cli
xchg
movsb
out
ret
ret
scas
adc
scas
ret
push
add
test
xchg
mov
jmpw
cwtl
mov
mov
int3
ljmp
pop
jbe
and
hlt
mov
pop
icebp
rcrl
push
lret
insl
das
insl
adc
jecxz
mov
xchg
stos
xor
jmp
jno
mov
cmp
int3
or
data16
xor
popa
mov
sbb
ret
push
mov
aam
bound
data16
or
pop
push
ret
jl
imul
and
cmp
or
cltd
xchg
scas
lock
xor
inc
push
ss
sub
xchg
inc
cwtl
push
lret
insl
xor
stos
inc
test
dec
inc
dec
test
sbb
mov
sub
cltd
fwait
xor
sahf
enter
fisubl
or
xchg
out
cmp
leave
ljmp
sbb
aas
or
xchg
test
push
adcb
dec
insl
test
or
fcmovb
scas
shll
out
sbb
mov
sti
int
into
and
jbe
adc
bound
test
add
push
test
mov
in
cld
adc
test
add
mov
sub
xor
jl
daa
das
fs
xor
ljmp
push
add
xor
xor
mov
lahf
out
push
inc
out
mov
adc
pop
stc
add
push
cli
clc
test
add
ljmp
call
fdivr
pop
mov
push
test
fdivl
push
adc
jp
xchg
sub
push
addr16
sub
movsl
sub
aaa
aaa
adc
in
adc
xchg
dec
add
movsb
mov
xor
or
ss
push
imull
lret
scas
mov
pop
sbb
shrl
mov
into
dec
pop
das
add
stos
pop
mov
push
pop
push
add
ret
xchg
lret
inc
repz
cmp
sbb
and
inc
xor
push
mov
mov
jp
jp
add
loopne
imul
shll
loopne
pusha
adc
fstl
into
repz
in
cwtl
int
rorl
xchg
jp
ret
dec
iret
adc
pop
mov
sub
add
loopne
pop
rcrl
push
gs
push
ret
add
cmpsb
jb
cmp
sub
sub
js
int
fsubr
xor
mov
jp
adc
movsl
push
jmp
out
jecxz
adc
lea
mov
repnz
mov
js
fstp
sbb
cmp
js
in
shll
sbb
push
lret
inc
stc
mov
xlat
dec
fiaddl
xchg
inc
test
neg
adc
jne
jmp
mov
or
inc
mov
test
mov
pop
xchg
fwait
popf
push
sub
and
pop
out
adc
fistpl
adc
negl
add
pop
addr16
xchg
xor
jbe
lret
call
shl
jb
mov
shlb
js
push
aam
mov
pop
sahf
lcall
andb
jg
pop
adc
fcomip
jecxz
out
jae
cmp
enter
inc
js
hlt
sub
xchg
sbb
add
jecxz
xchg
jno
jle
rcll
push
or
imul
cmc
ljmp
popa
adc
add
add
jl
adcb
push
nop
sti
popf
adc
push
jle
and
xchg
aad
sub
imul
popa
jns
jno
mov
add
in
mov
test
pop
sub
nop
sbb
std
xchg
lret
push
scas
gs
xchg
cmp
cltd
stos
mov
fimull
mov
mov
xor
repz
mov
xchg
lods
push
insb
aam
inc
jge
subb
pop
push
rcl
jns
popa
ss
cmp
and
insl
fstps
and
es
sbb
in
cmp
fs
adc
mov
in
aad
mov
sbb
outsl
pop
sub
stos
mov
push
xor
dec
sub
and
dec
inc
mov
mov
fcomps
add
fiaddl
mov
in
xor
inc
inc
mov
in
stc
push
out
out
add
clc
and
ss
testl
push
cmpsb
arpl
loopne
flds
rol
mov
cmp
xchg
xchg
mov
jno
ljmp
adc
movsl
push
push
mov
cs
fsubs
scas
bnd
out
loop
rorl
movsb
divl
pop
fisttpl
lea
add
and
adc
mov
bound
leave
push
fcom
cmp
pushf
shll
pop
sub
fists
jl
adc
sbb
xor
loope
insb
push
sbb
js
pop
mov
into
rolb
inc
shr
xchg
ret
lock
add
or
pop
push
push
dec
inc
clc
mov
fsubrs
out
xchg
test
inc
bound
jb
xchg
in
mull
in
in
lods
in
lret
mov
pop
push
cmpsl
cltd
sti
inc
mov
aaa
pop
outsl
in
les
sti
outsb
mov
xchg
lds
mov
sub
ret
mov
sbb
ret
outsl
sbb
push
rorl
xchg
push
js
push
push
or
xchg
adc
xchg
icebp
xchg
mov
and
jecxz
in
xchg
out
mov
xchg
push
popa
lods
dec
inc
lahf
jg
sbb
xchg
inc
mov
mov
pop
adc
and
test
sbb
sbb
mov
mov
movsl
jmp
stos
or
cwtl
setnp
mov
lea
mov
stos
adc
js
mov
adc
frstor
js
inc
push
jmp
dec
xorb
out
fisubrl
cmp
xchg
cli
repz
repz
pop
or
in
in
loop
rcrl
jmp
push
fadds
ret
pushf
jo
adc
mov
xchg
test
adc
pop
rcrb
shlb
mov
fisubs
sub
adc
jmp
das
ret
mov
fildll
aaa
icebp
pop
call
loopne
push
dec
adc
adc
pushf
jno
xor
je
cmpsl
scas
dec
gs
sbb
cmp
stos
ficomps
mov
movsl
pop
stos
push
into
add
gs
push
out
xchg
dec
inc
xchg
jle
and
scas
mov
xor
out
push
fs
push
jo
push
adc
push
insl
inc
push
push
and
sub
out
gs
ret
out
test
sarl
push
or
pusha
sub
dec
divb
push
mov
inc
enter
stos
jo
pop
aad
movsb
bound
cmpl
lea
aad
lret
and
add
or
add
and
inc
popa
push
sbb
add
sbb
enter
xchg
add
out
subb
lahf
into
popa
into
ret
inc
lock
push
mov
cmp
mov
hlt
sbb
je
cld
shr
or
inc
push
inc
xchg
xchg
add
rorl
imull
jne
iret
ljmp
adc
out
inc
adc
mov
lods
js
or
inc
lds
clc
insb
push
nop
cwtl
popa
ljmp
cmp
test
jmp
add
in
or
loopne
pop
mov
rcll
mov
orl
mov
push
in
stc
cwtl
inc
cmp
and
jne
in
ret
dec
mov
mov
xor
cmp
dec
leave
int3
int3
dec
outsb
jne
es
fldln2
leave
mov
xchg
adc
push
int3
int3
je
out
or
mov
test
jae
xchg
jb
push
jno
movsl
xor
lods
push
sbb
push
cmp
or
xchg
cs
xchg
cmp
inc
sub
jns
sbb
loopne
push
inc
mov
inc
stos
rolb
push
cld
cmp
movsb
xor
jg
inc
pop
or
sbb
push
fadds
mov
mov
movsb
push
xchg
aam
jnp
stc
stos
jl
jnp
cmpsb
mov
cmpsl
ret
fadds
adc
repz
mov
sub
es
xchg
test
out
mov
xchg
xlat
or
les
out
adc
int
fnstsw
push
inc
in
inc
pop
mov
mov
outsb
and
jne
sub
jae
pop
outsb
lods
loop
dec
aaa
clc
leave
add
or
push
mov
xchg
mov
pop
insb
mov
adc
cmp
loop
xor
data16
adc
adc
das
insl
and
movsl
es
orb
pusha
sbb
in
test
cmp
pop
out
pop
in
jnp
fsubrl
xor
jmp
fdivp
mov
mov
pop
adc
push
pause
cmc
push
addr16
in
push
addr16
and
mov
insl
xlat
loop
aam
cli
adcl
repnz
or
xchg
push
test
xor
out
ret
enter
imul
in
cmpsl
sbb
lcall
hlt
or
mov
mov
pop
test
clc
insb
lods
dec
cmpsl
in
dec
in
aas
jo
adc
dec
push
mov
or
test
dec
int3
testb
adc
add
mov
mov
por
mov
mov
cmp
shlb
ss
xchg
sub
add
mov
jg
mov
sbb
push
add
fs
cmp
lds
enter
rcll
add
mov
xlat
sub
add
pop
loope
push
cli
cmp
cmpsb
mov
loope
xchg
push
jmp
xchg
xchg
movsb
std
lret
mov
int3
inc
scas
fld
add
aas
and
xlat
pop
inc
sbb
and
sub
jle
lods
xor
jmp
sbb
out
mov
punpcklwd
fldl
clc
ss
sbb
shrl
lds
xchg
imul
adc
mov
call
dec
hlt
mov
flds
out
push
jle
jmp
or
shlb
push
out
push
push
fistps
jmp
pop
add
shl
je
dec
bound
push
pop
inc
cmc
push
adc
cwtl
mov
jno
sbb
lds
outsl
push
test
js
aam
add
sub
fnstsw
dec
inc
in
in
xchg
sti
loope
rcll
int
xor
fs
iret
cmpsl
in
in
std
je
icebp
test
inc
inc
cltd
dec
arpl
rolb
lods
jbe
and
jno
movsl
aam
push
movsl
mov
mov
xor
inc
daa
cmpsl
repz
nop
vdivss
aaa
or
addb
jns
adc
insl
mov
data16
inc
push
enter
and
mov
push
mov
sub
shl
es
xlat
add
outsl
inc
jbe
mov
mov
popa
test
repnz
xor
cmp
jae
rol
sbb
mov
pop
aam
pusha
lods
adc
sbb
cltd
mov
cmp
test
bound
and
fisubl
jecxz
inc
dec
mov
adc
mov
fnsave
lds
sbb
pop
lret
mov
hlt
cli
out
icebp
lret
mov
fs
icebp
ret
mov
ljmp
in
dec
mov
adc
lret
jns
mov
mov
sti
pop
or
sbb
sub
ret
push
mov
xor
or
pop
push
loopne
adc
leave
jb
adc
shll
lods
cmpl
ficoms
mov
cld
lret
and
jmp
fadds
loop
loopne
std
lcall
call
pop
aam
xor
dec
mov
inc
arpl
loope
push
clc
call
mov
adc
lret
test
loope
shrb
inc
sbb
nop
mov
xchg
pop
iret
fdivrs
mov
aam
idiv
jno
mov
and
inc
push
xchg
mov
dec
jbe
sbb
sub
sub
mov
mov
mov
sbb
sbb
and
in
lahf
inc
push
lods
out
pushf
jmp
cmp
inc
pop
outsb
sarb
inc
pop
xlat
sub
cld
pop
jecxz
or
or
add
repnz
mov
je
add
and
cmp
jmp
arpl
mov
sub
test
mov
lods
mov
cmpsl
ret
scas
adc
xchg
mov
fistpl
mov
data16
popa
les
cmp
jbe
mov
addb
pop
cmp
scas
dec
lret
fcompl
mov
out
cmp
or
into
dec
pop
imul
pushf
sub
dec
outsb
lods
das
or
dec
or
cli
mov
and
inc
and
dec
outsl
dec
jle
mov
push
dec
lds
mov
das
shrl
int
dec
outsl
ljmp
scas
popa
mov
pop
pop
int
icebp
inc
gs
jb
dec
push
jl
ss
push
jg
popf
inc
add
add
fcomi
jnp
jl
lahf
addr16
sti
fsubl
sbb
sbb
cmp
sub
mov
dec
repz
aad
mov
xchg
fwait
repz
shll
cmp
push
out
ficoms
dec
rcll
loope
adc
fbld
push
mov
into
jmp
scas
sub
lods
test
add
push
popf
imul
pop
pusha
test
jmp
push
pop
inc
outsb
loop
push
xchg
xchg
sahf
sarb
ds
and
sbb
icebp
int3
add
pop
lret
cmp
shll
cltd
call
xor
push
mov
pop
lods
lds
push
out
lahf
popa
mov
pop
shll
or
mov
xchg
inc
xor
fidivrl
and
in
shrb
mov
and
pop
mov
cs
pop
pop
in
sbbb
sbb
mov
cmp
fwait
inc
std
into
aas
mov
push
adc
scas
hlt
outsl
dec
call
cmpsl
push
mov
mov
lods
and
sbb
lods
xchg
dec
imul
or
mov
test
sub
xor
ficomps
xchg
test
jge
je
jo
aad
mov
lods
daa
mov
dec
sub
fs
cmpsb
popf
mov
data16
xchg
lods
icebp
bnd
rorb
sub
insb
xchg
insl
xchg
jp
test
popf
adc
mov
addb
movsb
add
ljmp
or
sbb
sub
cmpsl
sti
add
xor
lods
fsubr
cmpsl
xlat
and
adc
inc
iret
leave
add
cmpsb
popf
xchg
sub
in
push
sahf
dec
push
js
push
cld
into
push
movsl
lahf
mov
lea
aaa
ror
inc
mov
sahf
clc
push
cmp
push
std
mov
cld
filds
xor
pop
xchg
lcall
out
fnstcw
inc
push
shl
dec
jne
fwait
mul
sbb
xor
dec
push
cli
inc
stos
mov
sbb
lcall
arpl
mov
sarl
push
sub
jle
xchg
sti
jecxz
shll
mov
out
cmp
sbb
in
pop
cmp
cmp
test
sbb
movsbl
and
sub
inc
in
sub
mov
xor
jo
insl
outsl
std
ss
fwait
sbb
mov
cmpsb
adcl
fdiv
mov
arpl
pop
sbb
mov
mov
cmp
and
test
dec
and
dec
push
xchg
sub
pop
outsl
push
jle
jb
xchg
insb
hlt
mov
push
repz
mov
push
mov
xchg
dec
outsl
ja
pop
in
sub
xchg
rol
lret
hlt
mov
mov
and
xchg
dec
sub
lcall
jo
cmp
mov
pop
shll
inc
cmpsb
punpckhbw
pushf
in
negb
iret
int
out
jb
jl
mov
call
shll
faddp
call
adc
mov
test
jo
add
push
push
mov
and
push
fimuls
mov
dec
lock
aam
cmpsb
cwtl
arpl
jbe
cwtl
jbe
lahf
popa
movsw
ficompl
mov
mov
fwait
sub
add
leave
jno
jo
pop
negb
cmp
cmpsl
ret
add
sbb
sbb
aas
dec
or
fildll
push
cld
cmp
and
adc
movsl
lret
xchg
out
into
xchg
cmc
and
in
pop
testl
in
xlat
lahf
cmpsb
ret
sbb
aam
dec
pop
popa
mov
inc
mov
inc
out
xor
xlat
bound
xor
adc
ret
test
rclb
lahf
jl
das
out
addr16
and
aam
insb
sbb
xchg
mov
mov
dec
clc
pop
adc
xchg
inc
roll
ret
daa
pop
scas
ds
mov
inc
orl
mov
rcrb
push
or
lahf
fs
push
in
mov
filds
mov
xchg
dec
mov
stos
dec
jo
add
imul
aaa
jg
mov
mov
mov
jbe
lahf
xchg
cmc
sub
cmp
dec
jecxz
loop
add
je,pt
outsb
fbstp
push
data16
add
insl
pushw
lds
jnp
cltd
jo
sahf
xchg
sub
aam
adc
xchg
lea
lds
push
gs
push
pop
ret
movsb
sub
leave
inc
cltd
in
enter
int
rcrl
cmp
loop
push
mov
adc
xchg
imul
aam
pop
aaa
pop
jae
push
ret
cmpsb
jle
mov
lahf
das
jne
lds
mov
fisubs
xchg
xchg
xchg
loope
and
push
mov
mov
lea
inc
test
push
scas
pushf
dec
pop
mov
jbe
roll
insb
or
dec
jno
xchg
adc
inc
data16
push
mov
stc
cltd
xchg
outsl
outsb
sub
mov
aaa
filds
lahf
jl
es
sbb
mov
jns
add
pushl
inc
jmp
dec
mov
jae
xchg
or
shll
and
mov
cmp
and
inc
mov
mov
xchg
adc
nop
xchg
mov
or
cmp
or
imul
cmp
push
jnp
shlb
je
aam
cmc
add
stos
shr
test
fwait
xchg
outsl
push
and
stc
mov
repnz
daa
dec
js
push
ds
addb
inc
cmp
inc
adc
sub
mov
aaa
mov
xor
push
addr16
scas
adc
dec
pop
or
jns
and
rclb
dec
fstpl
cwtl
adcb
fprem
pop
and
adc
push
cmovo
rol
adc
and
sti
into
pop
ffree
movsl
push
cmc
pop
and
mov
pop
pop
lcall
out
mov
adc
push
push
pop
loopne
aam
loope
cmc
xor
sub
loope
jle
or
jns
pop
mov
cmp
xor
adc
adc
imul
dec
xchg
push
andb
pop
out
sti
out
pop
sub
jmp
mov
jno
mov
adc
and
dec
jo
dec
push
cwtl
scas
adc
aad
dec
shr
jl
fldl
loopne
lcall
mov
push
sub
mov
mov
cmp
inc
cmc
cltd
cmp
mov
outsl
shrb
pop
lea
ljmp
imul
add
add
dec
in
mov
scas
mov
jle
lcall
in
or
out
mov
jp
scas
dec
fidivrl
sub
add
mov
xchg
movsb
test
aaa
xchg
xor
inc
cli
push
pop
mov
sub
dec
push
xor
mov
aaa
xor
sub
inc
enter
clc
fsubrl
pop
test
mov
ds
stos
jge
cld
pop
jbe
add
jnp
adc
mov
out
sub
fiaddl
sahf
cmp
fs
scas
nop
fwait
cmp
dec
push
fildll
dec
push
push
add
ret
in
mov
lds
add
mov
pop
cs
inc
lock
adc
mov
fistl
out
daa
add
aam
push
lret
add
jns
and
cld
push
pop
test
push
std
es
push
mov
lds
push
mov
push
sti
and
ficompl
xor
cmp
pop
sub
cmc
xchg
push
shrl
sub
inc
jge
inc
andb
hlt
inc
and
shrl
icebp
xchg
in
sbbb
mov
js
aam
subl
or
jo
jge
adc
pushf
aad
xchg
into
push
insl
jle
xor
loopne
or
mov
add
pop
mov
gs
shll
jno
mov
mov
sbb
inc
addr16
push
fwait
lds
cmp
add
nop
shll
orb
pop
mov
push
shl
je
mov
rcrb
aam
jg
cmp
cmpsl
outsl
scas
and
lret
mov
nop
test
clc
cmpsb
aad
mov
or
pop
xchg
aad
push
inc
and
test
mov
jnp
mov
jmp
fimull
stos
out
cmp
push
mov
sub
sub
add
sahf
xchg
addb
lock
cwtl
mov
test
xchg
push
leave
mov
adc
xor
sbb
cmc
into
sub
stc
hlt
xlat
jecxz
std
movsl
xchg
aas
jp
ja
lock
imul
sbb
mov
xchg
aaa
sti
pop
hlt
mov
pop
inc
int
dec
xor
xchg
cmp
je
mov
popa
push
and
subb
jmp
dec
bound
mov
sub
out
jne
int
pop
push
xor
repnz
push
addr16
lret
ljmp
jne
push
mov
inc
pop
xchg
push
cmp
pop
cmp
push
lret
dec
mov
jle
cmc
adc
int
ret
iret
fisttpl
daa
lcall
lock
xchg
inc
or
testl
shll
in
fdiv
cs
ss
and
mov
xchg
data16
mov
jp
jmp
icebp
mov
mov
dec
or
js
dec
sub
movsl
les
xchg
out
sub
pop
test
dec
xchg
ret
lahf
mov
repnz
test
sbb
bound
test
cltd
push
cmp
pushf
mov
inc
lods
push
adc
ret
mov
imul
loope
pop
movl
pop
add
and
mov
and
xor
mov
ljmp
push
sub
fnsave
cmpsl
fstl
outsb
fistpll
stos
cmp
mov
xchg
mov
and
xchg
jo
loope
lds
sbb
nop
mov
lods
inc
int
sbb
lret
movsl
cmp
mov
inc
inc
fwait
add
jne
aam
xchg
and
cmp
fcomps
inc
and
sbb
addl
xor
pop
xchg
cmp
push
adc
dec
test
sub
cwtl
ret
sub
and
mov
mov
int
xchg
lock
and
cmc
iretw
into
push
iret
mov
adc
push
inc
jle
jne
push
negb
push
cli
call
and
push
mov
fdivp
mov
push
dec
add
add
and
jg
ds
je
lds
add
es
call
call
mov
sbb
and
sub
pusha
aam
add
jno
xor
int
outsb
pop
int3
and
cmp
ds
adc
roll
mov
pushf
pop
xlat
or
push
iret
lret
xchg
add
xchg
cwtl
or
jecxz
push
arpl
test
sbb
fsubrs
inc
cmpb
lods
out
dec
add
je
aas
fisubrs
in
cmpsb
mov
pusha
mov
repnz
xor
andl
jns
xor
cmpsl
cltd
inc
mov
inc
outsl
mov
jae
mov
jmp
jo
mov
inc
add
incl
arpl
mov
cmp
lahf
ds
stc
sbb
es
sbb
lea
mov
mov
and
jecxz
leave
pushf
testb
push
add
jge
aaa
in
add
lret
mul
cmp
call
xchg
movsb
xor
lds
inc
je
xchg
xor
jae
leave
test
add
sbb
cltd
jae
rorb
pop
cmp
inc
cmp
add
scas
inc
sahf
imul
iret
cld
cs
pop
xchg
icebp
jmp
cltd
jne
push
data16
cmp
movsb
lds
mov
jno
sub
hlt
arpl
sbb
and
mov
jbe
scas
push
add
pop
xor
dec
outsl
mov
popa
lea
push
jecxz
mov
xor
repnz
fcom
jg
mov
in
jmp
add
gs
in
out
cmp
sbbl
in
cmp
inc
movsl
push
xchg
fisubl
lahf
sbb
mov
pop
rcr
push
pop
and
xchg
jae
sar
popa
push
xchg
insb
cltd
cmpsb
leave
add
iret
sub
in
fbld
push
pop
mov
outsb
inc
mov
xlat
and
xor
sti
sbb
adc
stc
mov
leave
lcall
xor
into
andl
out
inc
test
pop
push
xchg
sub
addb
xor
lods
pop
xchg
orb
es
jg
int
push
in
outsb
xchg
in
mov
fdivrs
push
pop
lock
enter
outsb
sti
ret
add
or
ret
add
fucomip
call
idivl
xlat
mov
dec
pop
cli
rcrb
loope
rcr
xchg
mov
aas
test
adc
pushf
test
popf
into
push
push
mov
je
loopew
push
or
das
mov
or
out
movsb
adc
shll
leave
ljmp
xchg
pop
cld
xchg
gs
dec
es
mov
cmp
xchg
jge
sbb
leave
push
mov
or
out
or
movsb
mov
imulb
sub
push
pop
fdiv
or
mov
cmpsl
pop
push
loopne
repz
je
xorb
test
movsl
fmull
mov
mov
cmp
jne
xchg
call
cmp
mov
popa
mov
scas
add
mov
stos
mov
lret
loop
fisttps
icebp
mov
call
fldenv
and
in
mov
sbb
push
lods
jecxz
pop
jle
adc
xlat
fbstp
addr16
xorb
lods
pop
ficoml
fcmovbe
stos
std
dec
call
sub
push
sti
jmp
ja
rclb
adc
mov
fcmovnb
dec
loopne
xchg
xor
pop
add
sahf
cmc
cmp
jmp
jmp
out
dec
insb
xor
int
dec
xchg
nop
jb
mov
or
sbbl
subl
jle
movsl
mov
sbb
push
and
lcall
cld
lods
add
mov
adc
dec
pusha
push
scas
ds
sahf
sti
pop
ret
jmp
hlt
popf
sub
test
les
xor
mov
rorl
jmp
sti
sarl
mov
out
push
and
lods
push
pushf
pop
shlb
enter
pop
push
fstl
jbe
adc
insl
lds
dec
ficoml
inc
push
fisubs
iret
les
push
jmp
imul
jno
push
ljmp
sub
movsb
mov
ret
js
iret
jmp
push
xchg
adc
mov
mov
push
pop
pop
adc
xlat
push
insb
adc
dec
dec
mov
jno
fnstenv
inc
loope
pop
and
jge
loopne
repz
push
lret
adc
push
ficomps
enter
push
add
xor
add
and
lock
pop
outsb
aad
dec
xor
lds
call
sti
icebp
gs
negb
outsb
loope
loope
shlb
push
mov
mov
and
lret
sbbl
mov
inc
ss
movsl
push
in
lcall
pop
cltd
jle
mov
push
push
mov
je
jecxz
push
out
divb
inc
lock
dec
in
je
idivb
push
lret
sbb
jl
sbb
push
inc
pop
jmp
loopne
rorb
repnz
adc
fwait
sbb
fs
and
mov
imul
frstor
xor
pop
dec
sahf
fisubrs
aam
addr16
dec
out
nop
movsb
add
fstl
es
mov
daa
jle
nop
movsb
adc
adc
jle
ret
push
cmp
pop
mov
mov
pop
repz
sub
lods
dec
notl
push
and
popa
out
stos
shl
out
stos
cmp
mov
jmp
jb
xchg
outsl
push
or
adc
mov
mov
rolb
adc
shl
popf
aad
fnsave
js
xchg
xchg
mov
push
repz
pop
cs
lret
pop
inc
cltd
sub
ret
loopne
shlb
xchg
shr
xor
xchg
sbb
stc
xchg
cmp
rep
std
mov
mov
and
popaw
in
push
and
push
aad
inc
xor
push
add
int3
outsb
pop
subl
std
mov
mov
movsb
sbb
xchg
inc
int
inc
stos
jno
adc
mov
and
jl
mov
es
lds
stc
int3
into
jb
insl
cwtl
sti
fcomi
clts
xor
or
add
dec
pusha
inc
das
jne
mov
jbe
ret
fisttps
pop
lock
test
arpl
es
sbb
mov
cmc
ljmp
push
jmp
jo
inc
es
out
or
ret
cmp
imul
jecxz
sub
cmpsl
push
jl
in
cmp
mov
repnz
pop
xchg
inc
cwtl
xor
and
fnstsw
jge
inc
bound
ret
xchg
push
pusha
ljmp
out
mov
and
flds
mov
sti
out
mov
add
dec
daa
lret
in
ja
shr
dec
adc
and
push
mov
xchg
sub
mov
pushf
fdivs
sarl
addb
or
and
cld
jne
xchg
and
add
dec
dec
jmp
cmp
xchg
mov
out
adc
or
cmp
push
or
std
hlt
sbbb
pop
cltd
sarb
testb
mov
sub
adc
pushf
xchg
out
adc
lods
and
dec
jge
dec
aas
push
and
mov
jo
add
mov
mov
xchg
push
je
pop
dec
cmp
jmp
pop
or
rclb
pop
lds
add
cmp
stc
adc
push
xchg
inc
cs
leave
inc
sbb
jne
sbb
push
movsl
lds
mov
xchg
sub
loop
aaa
test
repnz
xchg
lods
outsl
shll
mov
repz
mov
dec
jle
rorl
jnp
daa
adcb
nop
and
mov
cmp
popf
bsf
or
push
mov
mov
mov
stos
adc
lock
jbe
sub
mov
dec
xor
or
jno
or
scas
mov
loopne
gs
mov
jp
js
or
and
adc
push
lods
fistl
mov
lock
fcos
adc
fnstenv
push
or
push
out
lret
loope
adc
rclb
cmp
int
adc
lcall
loope
push
rcll
adc
in
aad
popa
xchg
adc
popf
fcomi
movb
sub
xor
imul
shll
lods
or
add
sbb
cmpsl
mov
pushf
mov
aas
xchg
mov
cmp
push
addr16
add
cmpsb
cwtl
adc
outsb
out
sbb
nop
adc
inc
rcrb
and
push
scas
frstor
jle
shrl
mov
adc
movl
clc
sbb
lret
insl
cltd
mov
lea
adc
jp
fstpt
nop
and
test
sbb
cmp
testl
jp
insl
adc
out
repnz
mov
mov
loop
and
stos
dec
imul
cwtl
mull
jae
aam
mov
push
add
cmp
mov
clc
jmp
inc
or
lret
add
adc
enter
test
pushf
mov
aad
inc
ja
in
mov
dec
or
fisubs
inc
inc
jmp
stc
daa
cmp
out
xor
scas
xchg
std
sti
loopne
mov
pop
xor
mov
cmp
ret
fcoml
sub
fldl
in
push
pop
adc
cmp
std
leave
fisubrs
imul
clc
mov
ret
out
fidivs
sbb
cmpsl
jne
dec
jmp
test
pop
push
in
sbb
movsl
dec
mov
mov
js
rcrl
jmp
rcrb
cltd
enter
fsubl
inc
leave
stc
dec
xchg
shrb
jmp
inc
out
push
out
sub
or
addr16
dec
mov
xchg
push
je
adc
dec
out
negb
sbb
and
add
push
pop
cmpsl
xor
das
test
xor
cmpsl
push
ret
push
ds
push
pop
es
xor
inc
outsb
xchg
stc
xor
fldt
dec
lcall
iret
fcoml
adc
xor
pop
pop
dec
lods
inc
mov
aad
test
ret
out
xorl
rcrl
mov
cmp
sub
xchg
pop
mov
test
je
ret
mov
cmpsb
mov
xchg
jl
movsb
push
les
addr16
mov
into
je
add
cmc
or
lcall
in
xchg
jg
sub
and
xlat
sbb
xor
in
hlt
inc
addl
push
fs
cltd
inc
mov
mov
jl
dec
inc
outsb
pop
xor
shrb
push
mov
repnz
rcll
adc
pop
pop
xor
pusha
js
div
jmp
jbe
fisubs
ficoml
arpl
jne
jmp
lds
out
push
jno
outsb
add
cmc
cmpsb
jecxz
mov
dec
mov
mov
nop
cld
out
adc
ret
loope
cltd
jb
stos
cmpsb
add
xchg
inc
jg
stc
inc
xor
pop
inc
imul
gs
out
xchg
js
mov
pop
popf
addl
xor
jns
xor
ljmp
popa
pop
mov
mov
loop
ret
pop
insb
xchg
int
sarl
sbb
push
mov
mov
ds
fwait
enter
mov
lret
outsl
mov
mov
stc
es
or
mov
pop
iret
fldl
dec
xchg
lock
sub
pop
cmp
xchg
mov
mov
add
push
add
stc
leave
mov
cmp
inc
lcall
test
pop
sub
xor
push
cmp
jne
insb
cmp
or
cmc
repnz
jp
test
cli
into
add
sahf
pop
xchg
push
cmpsl
add
mov
ljmp
in
cld
imul
xchg
cs
ss
xchg
leave
into
adc
adc
jge
fsubl
lea
lock
push
test
jg
push
lcall
sbb
movsl
dec
adc
imul
and
adc
inc
sub
sbb
mov
pop
cltd
rcll
push
shll
pushf
xchg
fimuls
aam
push
sub
push
adc
popa
pushf
fstps
aam
lods
jge
adc
xchg
jmp
xchg
sahf
scas
movsl
xchg
cwtl
test
adc
test
dec
ljmp
stos
and
push
inc
loope
rcrb
adc
xchg
mov
add
enter
xchg
mov
aaa
cmc
push
testl
lods
add
or
stos
loope
nop
gs
sbb
aam
mov
mov
push
scas
popw
mov
out
sbb
out
cmpsb
ret
xchg
jge
shll
mov
pop
and
pop
cli
xor
pop
stc
sub
mov
sbb
pop
rcrb
scas
es
ja
lret
cmpsb
dec
push
fucomi
iret
mov
rorl
jge
jb
les
test
out
lea
pop
mov
shlb
mov
loope
mov
xchg
sbb
test
sub
jnp
cltd
les
mov
les
adc
dec
imul
add
sub
pushf
movsb
pop
cltd
ja
sub
leave
int3
scas
lds
cmpsl
ret
push
dec
or
sub
cmp
cwtl
xor
sahf
dec
dec
pop
push
xchg
jg
cmpsl
jecxz
pushf
cmpsl
aad
rorl
bound
lret
dec
inc
or
push
jmp
inc
pop
movsl
jg
jns
mov
sub
mov
push
in
push
lods
into
or
iret
mov
decl
clc
rolb
dec
inc
xchg
cmp
cltd
int
add
lret
xchg
mov
add
mov
mov
cmp
data16
filds
test
xor
dec
cltd
int3
pop
sarl
jae
xchg
sti
adc
jle
js
mov
xchg
iret
push
mov
cli
or
cmpsl
iret
js
or
xchg
mov
out
jmp
lret
cli
cmp
adc
jns
mov
adc
or
repz
repz
ret
arpl
jns
stos
addb
les
sub
sarb
pushl
push
int3
cs
adc
xchg
adc
popf
int3
jmp
mov
jecxz
mov
lods
mov
out
rcr
outsb
adc
insl
hlt
push
fwait
xor
inc
inc
dec
xchg
scas
sbb
sub
ss
out
pop
or
sbb
cld
aam
pop
cmp
repnz
mov
stc
mov
fisttps
add
xlat
push
fadds
pop
mov
aad
aam
push
jp
mov
cmp
adc
jecxz
mov
out
add
mov
inc
sub
repnz
call
daa
push
ficoml
icebp
adc
cmp
cmp
into
fxch
inc
scas
pop
mov
fwait
mov
jmp
int
int
test
out
pusha
call
pushf
sarb
mov
mov
rcll
pop
insl
cmp
aam
cmpsl
stos
fcmove
jmp
dec
mov
outsl
das
push
xchg
addb
decb
ret
aad
adc
push
inc
and
in
mov
jp
into
loop
push
and
fmulp
push
nop
pop
push
fcompl
adc
out
loope
pop
dec
test
fisttpll
leave
data16
shrb
pop
inc
sub
push
sbb
sahf
lds
nop
sub
adc
movsb
stos
ret
inc
mov
ret
xor
sub
and
jnp
popa
or
arpl
jge
mov
stc
xchg
lods
aam
scas
test
ja
sti
adc
aas
int3
fwait
movsl
xlat
movsl
cmpsb
int3
adc
xchg
jnp
dec
lcall
std
push
pop
movsb
pop
dec
pop
ret
loop
notb
dec
dec
cwtl
push
loopne
mov
add
inc
movsb
pop
mov
jg
push
jnp
and
and
lcall
ret
xlat
adc
mov
sub
cwtl
inc
jge
fisubs
cmp
ss
jbe
es
cmp
repz
ffree
int3
push
or
stc
sbb
and
xchg
mov
inc
pusha
setnp
shl
sbb
xor
xchg
rolb
mov
xchg
sbb
xor
je
sbb
sub
and
inc
lods
xchg
add
or
pop
test
mov
bound
std
loope
in
or
pop
test
stc
testl
das
clc
sahf
aad
jae
rorl
test
cli
mov
bound
inc
in
lods
and
mov
jo
push
loope
rclb
dec
sub
sbb
lock
dec
mov
lahf
xlat
test
popf
mov
inc
cmc
loope
loop
jo
loopne
nop
mov
push
jp
fwait
pmulhw
inc
inc
add
or
jo
rorb
popa
gs
scas
cwtl
xchg
into
int
mov
ret
inc
addr16
dec
cs
clc
cwtl
repnz
dec
or
cli
scas
dec
pusha
dec
adcb
sbb
arpl
stos
or
jecxz
inc
adc
popa
rol
sbb
dec
cmp
or
adc
fwait
sbb
fistpl
mov
pop
push
ret
push
cmp
imul
push
fidivs
pop
mov
lds
test
dec
andb
inc
out
lahf
mov
mov
lahf
ret
or
leave
std
dec
jg
add
mov
jecxz
in
aad
inc
add
push
mov
mov
shrb
mov
scas
push
sarb
adcb
sub
xchg
xor
lret
ret
cmp
push
push
push
aad
push
pop
fnsave
enter
int3
fisubrs
int3
lods
dec
lods
cs
lds
cltd
sub
mov
arpl
jmp
xchg
jge
pushf
pop
addl
outsl
adc
add
ja
out
xorl
jns
cmp
fsubp
jnp
mov
clc
xchg
and
sbb
aad
xor
mov
sahf
push
jnp,pn
mov
stos
xchg
add
mov
lods
adc
and
or
aam
daa
aad
mov
xor
xor
xchg
jne
addl
fidivl
cltd
es
adc
inc
test
pop
fs
dec
mov
loopne
shrb
lock
push
ret
test
stc
popa
stc
enter
les
and
lds
lock
repnz
pusha
lds
mov
pop
push
out
sbb
lret
movsb
into
stc
les
add
push
popf
pop
pushf
stc
mov
mov
xor
xchg
rclb
sub
lods
pop
outsl
sub
stc
out
mov
inc
sub
cltd
mov
in
pop
xchg
cmp
xor
cmpl
mov
aad
push
add
push
into
popa
cmpsl
xchg
mov
cmp
and
fwait
rorb
push
rcr
fnsave
mov
pop
adc
ret
push
rorb
and
aam
lds
negb
sbb
mov
adc
aaa
xchg
les
mov
xchg
out
pop
dec
pop
push
loop
or
es
mov
pop
out
and
fcmovu
test
and
inc
xchg
aam
jl
sbb
and
lret
clc
outsl
push
fcmovb
push
int3
lock
push
int3
cld
repnz
dec
push
out
jno
movsb
ret
subl
in
movsb
bound
jno
add
cltd
inc
scas
jbe
fbstp
jp
mov
sbb
xchg
and
mov
in
lret
lock
out
xchg
in
fadd
push
loop
inc
fs
stc
ret
mov
rcrl
stos
cld
cmpl
testb
sar
scas
jg
xchg
aaa
cmc
repz
mov
cs
add
jno
sbbb
push
sahf
cld
inc
push
jge
cmpsb
pusha
xchg
sar
ss
sarb
or
dec
out
dec
roll
xchg
ljmp
adc
clc
add
daa
add
inc
out
and
shlb
lock
daa
sub
outsl
sbb
fwait
dec
mov
add
in
movsb
ja
scas
xor
clc
xchg
orl
mov
pusha
push
inc
fdivrp
lock
jo
lock
xor
in
fstl
stos
pop
or
cmp
and
dec
les
in
in
cmp
sub
jge
sub
rclb
stos
lds
arpl
mov
call
shr
inc
xchg
int
pop
xchg
push
xchg
mov
push
cwtl
cmc
pop
shlb
pushf
sbbl
xchg
adc
int
or
pop
mov
jecxz
pusha
pushf
adc
mov
inc
out
cmpsl
push
ficoms
js
push
test
xor
aas
iret
clc
cvtps2pd
jge
sarl
lret
inc
ret
mov
xchg
xlat
roll
adc
bound
addr16
push
pop
clc
js
das
ljmp
adc
cmc
sbbl
cmpsl
mov
adc
aad
push
lahf
pop
add
cli
pop
ret
jno
mov
std
lahf
outsb
popa
xchg
cmp
dec
mov
lds
mov
imul
mov
into
iret
fstps
push
imul
jge
dec
inc
jmp
add
add
fists
mov
jo,pt
in
imul
xchg
mov
adc
rolb
mov
stc
mov
out
mov
nop
mov
or
fildl
imul
out
add
jo
sbb
sbb
imul
pop
addr16
cwtl
and
jge
shrl
fbld
mov
sub
add
pop
clc
push
xchg
nop
lea
repnz
es
sbb
adc
cltd
lahf
aad
dec
dec
daa
jbe
add
in
sti
xor
xchg
xor
shlb
jbe
ds
pop
in
jecxz
push
popa
cmp
jbe
rorb
xchg
sbb
jae
fcomps
add
pop
dec
stos
sub
shll
add
jae
rorb
cmp
sub
pop
sbb
fs
pop
cmp
adcl
jg
ljmp
sti
nop
push
mov
mov
adc
mov
mov
mov
in
fldt
mov
add
test
ret
xchg
fs
xlat
out
imul
push
test
subb
cmpsl
pop
sarl
add
fcmovnu
mov
loope
popa
lods
xor
lret
mov
xor
sarl
add
mov
jge
cld
les
pop
mov
mov
bound
jno
xchg
int
jnp
jo
arpl
dec
rorl
movsb
add
jae
aad
dec
jecxz
adc
sub
xor
cld
ficomps
cmp
rol
hlt
imul
add
push
mov
mov
pop
shrb
adc
nop
xchg
scas
jb
push
pop
adcl
test
fstpl
inc
inc
cmc
movsb
fsubr
lea
rcl
ror
test
cmpl
shr
mov
ljmp
add
jmp
push
test
pop
imul
out
push
cld
fisttpl
cld
fs
push
pop
mov
push
and
push
loopne
fs
adc
xchg
push
jecxz
adc
sub
jmp
jnp
cmp
mov
notl
stos
ror
adc
or
mov
add
hlt
fidivl
std
js
pop
mov
inc
hlt
stc
das
add
fs
pop
push
int
and
push
test
or
ja
xor
std
pop
icebp
add
mov
push
aaa
mov
xchg
add
inc
out
enter
xor
cltd
push
iret
fsts
loop
mov
dec
xchg
pop
es
or
cmp
dec
jbe
jnp
jle
int3
or
lods
xchg
pop
in
push
or
aam
dec
hlt
cmpsb
adc
push
mov
repnz
nop
xchg
sbb
xlat
int
icebp
mov
inc
push
incl
sbb
leave
in
inc
fdiv
mov
dec
pop
outsb
or
std
lods
imul
xor
fsubl
scas
pop
push
xor
pop
xchg
aam
jle
fldt
mov
rolb
pushf
call
push
inc
out
pop
fstpt
fs
dec
sub
loop
in
xor
jmp
inc
mov
fstpl
enter
dec
adc
fyl2xp1
sbb
push
jmp
out
push
or
orl
pop
xchg
test
mov
push
cs
inc
lcall
push
hlt
inc
push
pushf
push
adc
idiv
mov
jo
adc
xor
sub
pop
fxch
inc
lock
loopne
mov
push
ljmp
push
ljmp
jge
lret
movsb
push
int
lcall
aam
push
pop
ficompl
xlat
ja
adc
sti
sub
aad
lods
xchg
pop
repnz
sub
sbb
shrl
push
jns
test
hlt
daa
test
xor
pop
xchg
push
cmp
cwtl
xchg
mov
push
cmp
xor
push
xor
subb
insl
cltd
cmpsb
fimull
jo
test
xchg
cmpsb
mov
cmp
or
iret
stc
and
ret
xchg
inc
es
push
nop
add
je
rcrb
mov
pop
lret
bound
xchg
mov
scas
xlat
or
lahf
jmp
xchg
mov
pop
and
push
xchg
mov
pop
xor
dec
out
sub
js
inc
adcl
pop
inc
add
mov
cld
orl
inc
ret
cmpsb
jmp
inc
push
nop
adc
icebp
subl
push
lret
cmp
or
ret
cli
inc
popf
addr16
fwait
add
or
stc
push
sub
sbb
pop
addr16
stc
fcmovne
ret
mov
xor
dec
aas
or
sub
sub
mov
cmc
xchg
dec
cmpsb
stos
push
mov
aam
pushf
add
cmpsl
mov
mov
xor
fcmovnb
push
in
jge
imul
pop
in
in
rcl
dec
or
jne
mov
jae
push
pop
insl
cli
icebp
std
mov
pop
and
cmpl
cmp
jle
push
mov
pop
in
nop
addb
pop
add
cmp
ficoml
push
jno
xor
movsb
push
lds
idivb
cltd
into
insl
int
aas
or
faddl
adc
ret
add
test
leave
xchg
xchg
jmp
or
inc
test
out
lahf
inc
sti
outsl
cmc
arpl
push
aas
insb
in
test
pop
test
cmpl
push
xor
in
adc
cmpsb
test
mov
pop
push
cld
mov
in
ret
mov
or
xor
sub
lahf
mov
jp
js
add
adc
test
inc
jmp
jns
adc
and
daa
gs
push
and
jo
mov
push
lret
jb
dec
movsb
negb
gs
mov
push
les
gs
cld
xchg
stc
xor
xchg
pop
sub
adcl
addr16
mov
xchg
cmpsb
mov
nop
push
test
loope
cwtl
mov
jb
shl
stc
push
dec
push
xorl
inc
mulb
xor
gs
loopne
jg
fs
cmp
mov
xchg
xchg
movsl
int
push
mov
inc
gs
std
or
pop
mov
stc
or
movsl
or
dec
cld
icebp
mov
sbb
mov
orb
frstor
rcll
outsl
in
add
pop
pop
pop
cltd
dec
inc
adc
imul
pop
cwtl
stos
or
push
jg
in
cmc
pop
mov
and
cwtl
jl
gs
mov
lret
cmp
jg
mov
mov
hlt
cwtl
pop
sbb
push
jns
and
push
std
xchg
jns
stos
shll
pop
in
cli
out
jge
popf
lret
int3
int3
out
out
xchg
pusha
or
hlt
inc
push
jmp
jno
adc
inc
and
sub
mov
andb
outsb
popa
nop
push
jmp
add
mov
nop
dec
test
mov
xor
xchg
mov
cli
or
ret
xchg
sub
fstpl
sbb
or
mov
outsl
push
icebp
int
in
aam
push
cmp
cltd
xor
cmc
inc
lods
cli
push
out
pop
sbb
xor
int3
popa
popa
fwait
lret
dec
jecxz
std
icebp
cmp
push
pop
fsubl
iret
pop
shlb
xchg
dec
fmull
scas
aam
xor
sub
arpl
sbbb
jae,pt
dec
test
push
cmp
xchg
repnz
pop
icebp
adc
imull
jmp
dec
es
scas
or
filds
or
push
test
or
sbb
dec
and
test
sti
mov
sub
subl
lret
pop
and
mov
pop
add
dec
int3
rcll
imul
push
call
out
xor
pop
xchg
call
stc
lahf
flds
push
fidivl
cli
or
dec
cmp
xlat
inc
push
int
test
jae
pusha
hlt
adc
aaa
jnp
jb
dec
jbe
aam
popa
jle
lret
mov
out
shll
or
in
lret
mov
incb
inc
fldenv
pop
sub
jns
aam
popa
push
movl
idivb
in
pushf
call
in
xchg
mov
sub
push
aaa
mov
mov
cmp
xchg
sti
nop
sbb
lods
insb
scas
push
push
out
lcall
sub
mov
imul
or
pop
dec
filds
ljmp
cmp
xchg
stos
out
xor
pop
add
mov
xor
jl
bound
dec
sahf
fsubs
mov
movsl
clc
dec
cltd
mov
xor
push
or
outsl
stos
push
mov
mov
or
adc
pushf
shlb
mov
outsb
push
cltd
es
rclb
dec
mov
xor
dec
rcll
fistl
xlat
rcrl
fiadds
leave
ret
sub
xchg
loope
aad
movsb
pop
push
repz
jns
xor
bound
jbe
and
mov
xor
and
nop
xchg
cltd
sub
rcl
iret
mov
leave
push
popf
jnp
jne
push
xchg
into
or
das
xor
push
daa
push
adc
inc
ret
in
xor
into
in
mov
sbb
aam
sbb
mov
clc
cltd
mov
ja
data16
fs
ljmp
scas
out
icebp
adc
mov
jmp
insb
mov
mov
mov
inc
icebp
je
cmc
mov
mov
adc
cltd
jp
lahf
cli
dec
lahf
out
cltd
sbb
mov
lcall
sub
incl
pop
xchg
pop
scas
push
mov
cwtl
push
jp
enter
mov
add
sti
imul
inc
shl
sahf
leave
sbbl
xor
fcomps
sub
lahf
pop
rolb
loopne
rclb
mov
lcall
lods
loop
pop
dec
lock
divl
dec
or
xor
aaa
add
js
rcrl
add
aam
pop
cmpsl
fists
xchg
std
enter
or
mov
xchg
dec
sbb
mov
mov
sub
cmpsl
std
push
inc
mov
outsb
test
fadds
ja
repz
ss
sbb
push
dec
test
xchg
push
or
divl
ret
les
cwtl
sbb
jecxz
mov
push
scas
and
cmp
and
push
dec
add
addr16
mov
std
bound
cli
push
jnp
mov
fisubs
or
aad
outsb
xchg
fmull
idiv
jge
leave
mov
mov
and
pop
fs
movsl
jb
adcl
hlt
xchg
push
out
in
imul
out
pusha
pop
insb
sub
loope
jge
cltd
sub
pop
pusha
imul
jge
aam
inc
mov
in
push
js
or
xchg
add
lcall
and
out
and
negl
adc
mov
and
cmp
loopne
mov
popf
inc
mov
mov
test
out
fsubs
jl
std
mov
jg
mov
and
pop
lock
icebp
xor
rcll
mov
es
cltd
xchg
mov
ret
dec
mov
and
inc
cmpsb
in
in
fmuls
les
lcall
mov
out
inc
sbb
xchg
out
cmp
mov
fwait
push
in
lea
add
sbb
hlt
adc
sarb
and
mov
jmp
cltd
mov
push
loopne
push
pop
push
push
stc
lock
adc
jg
rep
cwtl
aaa
and
negl
fstpt
dec
dec
ficoms
push
pop
sub
ret
sar
inc
pop
cmpsl
mov
mov
outsl
insb
push
int3
cwtl
ffree
push
test
mov
xchg
mov
in
leave
cmpsl
jge
or
mov
into
pop
inc
les
sub
jo
add
cmp
rolb
mov
ret
test
rclb
inc
mov
cmp
mov
and
jnp
adc
pop
in
sbb
lods
mov
cld
lods
stos
stos
lds
ret
jp
adcb
xchg
lds
test
repz
pop
mov
xlat
inc
add
lods
dec
add
sahf
pop
cmp
lret
cmpsl
xor
mov
int3
loop
mov
ret
xchg
xor
imul
call
adc
xchg
sahf
mov
push
aad
xchg
cmp
sub
sbb
outsb
outsb
ret
pop
push
fnstenv
inc
or
sbbb
imull
pop
cs
sub
cmpsb
rorl
add
xor
xchg
push
mov
out
out
movl
fnsave
movsl
fildll
mov
mov
jle
xchg
sbb
arpl
pop
ja
cmpsb
push
push
xor
loopne
jp
shl
rcl
les
loopne
ret
fs
rol
inc
in
cmpsl
iret
dec
pop
adcb
xchg
int
lds
sbb
inc
adc
iret
push
pop
arpl
cmpsl
jne
lock
or
subl
xchg
or
add
inc
inc
rcrl
lods
inc
sub
rorl
mov
mov
cmp
mov
mov
adc
inc
pop
push
lcall
gs
loope
cmp
ffree
xor
rol
ficoms
cmpb
insl
shrb
xchg
cmp
nop
popa
mov
xchg
test
aam
jle
rcrl
fmuls
jno
and
xchg
mov
inc
push
cmp
or
aam
jmp
out
leave
notb
aas
adc
push
aas
fisubs
pop
movsl
fnsave
in
fwait
call
mov
nop
aad
or
mov
adc
sub
je
add
sbb
setg
aad
rorb
cmc
adc
sub
ds
arpl
ljmp
lock
cmp
lahf
mov
adc
int
subl
call
adc
add
popa
xor
adc
aas
gs
nop
mov
rcll
stos
sahf
int3
sbb
and
aaa
test
push
push
scas
movsl
mov
sbb
dec
lea
ja
loope
insl
dec
pop
push
xor
out
fistps
call
mov
xor
in
push
and
mov
movsl
mov
cs
mov
arpl
fldcw
in
mov
in
pop
cs
in
xchg
dec
ror
add
dec
jno
dec
xor
es
inc
adc
or
lock
pop
cmp
pop
jmp
push
movsl
jmp
ret
pop
adc
push
and
cltd
mov
fistl
xor
mov
repz
mov
push
and
jmp
pop
insl
sub
andb
inc
push
ffree
cmpsl
dec
into
ljmp
rolb
movsl
outsb
loope
push
outsb
push
xlat
xor
xor
mov
test
scas
test
mov
loopne
cmp
pop
int3
push
into
push
lcall
cmpb
sbb
add
scas
push
into
out
hlt
scas
cmp
adcb
fldcw
xchg
fcompl
cltd
arpl
pop
jne
or
mov
shrl
cltd
fdivrl
js
inc
gs
aam
lret
xchg
xchg
rclb
sbb
add
cmp
out
mov
inc
shr
pop
push
mov
mov
jno
rol
insb
insl
loopne
loope
mov
repz
xor
push
iret
lock
adc
mov
adc
xor
adc
push
rol
pop
call
or
push
stos
repnz
loopne
mov
or
mov
outsl
push
out
xor
mov
popa
add
fisttpl
push
sub
dec
sub
mov
test
scas
add
sbb
sahf
bound
pxor
int
aad
adc
pop
cmpsl
xchg
fcmovnb
dec
jmp
pop
or
jp
mov
outsl
xchg
push
int3
aam
dec
adc
cmpsb
adc
pop
xchg
aam
pop
mov
ds
mov
fisttps
cmp
sbb
push
jnp
sbb
xchg
in
add
clc
cmp
test
jnp
loop
fmull
xlat
subb
jb
ds
sub
pop
jo
repz
stos
loopne
sbb
negl
scas
mov
or
fimuls
test
and
ss
add
call
test
sarl
fisubs
lods
inc
xchg
and
fmul
mov
fdivl
movsb
gs
dec
or
fdivp
cmp
aam
sub
icebp
or
aad
out
jmp
imul
popa
cmp
or
out
pop
rorl
lock
push
push
add
fyl2x
lahf
sub
movsl
xchg
movsb
stc
outsb
ljmp
int3
lods
cmpsl
decb
mov
loope
dec
repnz
pop
xor
imul
lret
ficoms
daa
dec
rcl
dec
xchg
shll
pop
fsub
stos
xlat
push
lret
call
nop
test
adc
std
data16
jle
into
xchg
repnz
sbb
mov
jl
les
push
push
in
xchg
push
lods
cmpsb
lahf
inc
push
xlat
push
bound
sub
movsl
mov
clc
sbb
mov
ffreep
and
test
icebp
test
sahf
adc
test
cmpsb
in
xchg
mov
mov
push
add
jns
lock
mov
jmp
mov
xchg
in
dec
mov
mov
outsb
icebp
mov
or
sub
pop
jg
mov
push
sub
lods
jns
jg
inc
cs
mov
inc
pop
cld
sbb
push
add
aad
pop
xor
dec
loop
sub
dec
lock
out
mov
enter
sbb
xchg
push
out
sar
jmp
vcmpss
cmp
push
xlat
lcall
sbb
pop
out
pop
dec
cmp
lods
push
lcall
int
or
jmp
xchg
and
ret
jnp
mov
cmpsl
ret
stos
clc
cmpl
add
cli
lahf
dec
pop
test
inc
aas
pop
movsb
fwait
iret
lret
fimull
jl
jmp
les
lock
enter
mov
decl
push
jbe
data16
sahf
xchg
adc
lcall
xlat
add
xor
jle
mov
mov
sbb
sbb
pop
outsl
outsb
push
xchg
push
ret
sbb
pop
cmpb
in
xchg
push
jecxz
pop
cmc
js
idivb
shll
les
jnp,pt
xchg
cs
shrb
cmp
mov
daa
add
pop
movsl
dec
cmp
adc
lods
fs
add
push
lcall
scas
rclb
andb
pop
xchg
xchg
int3
loope
leave
xor
sarb
lods
cmp
bound
aas
or
sbb
xor
mov
mov
or
push
add
rorb
lret
ret
les
jp
sarl
push
das
cmp
cmpsl
out
lods
lea
xor
je
ret
add
add
jnp
lcall
cmpsl
cmpsl
jmp
aam
mov
popa
jo
aam
pop
loope
int3
mov
and
jnp
ss
xchg
jl
das
push
outsb
ret
addl
mov
dec
sub
stos
clc
sti
mov
imul
mov
fdiv
fs
jno
lret
lahf
push
pop
bound
pop
mov
push
hlt
mov
push
cmpsb
jo
push
sub
mov
mov
int3
cs
lret
cli
scas
push
push
xor
adc
sahf
fcoms
jg
cmp
dec
int
mov
lahf
fiadds
in
cli
nop
push
mov
shl
mov
jge
push
push
movsb
mov
lcall
les
jne
dec
bound
cmp
ret
dec
dec
outsb
dec
and
add
inc
hlt
dec
jmp
fstps
add
addr16
cmp
cli
mov
dec
scas
sub
int
fiaddl
sub
sbb
lds
mov
rcrl
mov
jg
lds
filds
inc
cmp
enter
lret
mov
cmp
cmp
out
pop
add
push
fsubrl
push
ja
out
add
xor
push
lret
in
mov
adc
and
xor
in
lea
lock
in
mov
dec
pop
sub
sub
fdiv
aad
or
shrl
out
sahf
arpl
sbb
mov
repnz
jnp
fbld
sarb
dec
out
inc
clc
mov
enter
lcall
decb
inc
bound
fstp
cltd
leave
xor
jb
roll
lret
mov
dec
call
insb
imul
cli
out
fistl
lret
or
negl
out
scas
or
adc
outsb
sbb
mov
jge
cmp
dec
test
or
je
adc
jae
inc
fwait
sub
leave
xchg
loope
test
mov
aaa
push
or
mov
movsl
adc
add
enter
cwtl
leave
pop
shrl
icebp
push
loop
mov
lock
faddl
push
int3
insb
add
cmp
aad
mov
inc
fimull
mov
hlt
mov
lods
xchg
in
out
pop
ret
dec
mov
pop
or
adc
mov
inc
ret
out
dec
pusha
xor
in
jno
movsb
fdiv
out
mov
pop
shlb
ret
push
adc
in
pop
push
pop
ret
repnz
mov
pop
add
jb
scas
push
cmp
cmpsb
sahf
push
out
sub
mov
int3
std
xchg
mov
imul
sarb
lods
dec
dec
mov
ds
into
mov
mov
movsl
adc
pop
sahf
lods
jae
mov
loopne
xor
ret
fsub
fsubrl
jmp
cmp
push
into
loop
mov
push
repnz
loopne
dec
jbe
pop
push
nop
inc
mov
mov
and
rorl
ss
gs
cli
enter
jge
repz
sub
frstor
push
dec
mulb
sub
xor
xor
lock
lcall
subb
mov
xor
mov
xor
insl
frstpm(287
push
cmpsb
inc
mov
cwtl
xchg
pop
fisubs
ret
hlt
enter
jge
repz
aam
add
in
fcomps
push
call
pop
into
inc
rol
stos
or
or
lcall
push
pop
push
nop
cmc
jb
hlt
inc
pop
into
fsubp
stos
xor
bound
xor
test
cmp
and
fnstcw
jge
repz
push
jp
inc
add
fldt
cld
fisubl
push
push
lret
cs
xchg
lcall
gs
and
fdivr
inc
sbb
inc
scas
fs
mov
ja
fistl
push
mov
inc
mov
gs
repnz
jge
repz
push
popa
pop
movsl
in
push
push
cwtl
jmp
jecxz
in
cmc
inc
movsb
fildl
into
ficoms
push
in
insl
loop
add
sbb
or
cld
fdivl
je
ret
jmp
mov
pop
scas
push
testb
mov
add
lret
inc
xlat
mov
gs
cs
add
and
repnz
push
rolb
fs
mov
call
mov
popf
xlat
lock
add
cs
iret
rclb
push
lcall
jle
mov
in
cltd
jbe
into
repz
movsl
scas
stc
lea
cltd
fsubp
xchg
movsl
out
gs
adc
call
repz
test
and
int3
pop
fldt
xchg
xchg
add
cwtl
lcall
addl
mov
mov
mov
mov
test
mov
xor
fwait
stos
test
loopne
in
fucomi
sarl
std
andb
pop
inc
call
push
mov
dec
inc
pushl
xlat
cmp
push
jno
sbb
and
mov
stos
or
pop
push
inc
dec
fs
xchg
imul
adc
jbe
int3
xchg
cmp
lods
sar
mov
lret
sahf
fcmovu
ljmp
pop
add
pop
jecxz
out
stos
inc
fsubp
call
push
jb
fwait
xchg
addr16
es
xor
sahf
cmc
pop
mov
pusha
fs
sub
repnz
xor
stc
mov
imul
xor
movsb
out
movsb
out
xor
push
iret
xchg
inc
jle
xchg
jo
das
int
je
sti
fdivs
in
pop
inc
mov
ret
into
dec
xchg
icebp
lds
ret
sub
push
cltd
fistpll
repz
pop
aad
push
outsl
push
cmp
xor
push
enter
jge
repz
rcl
push
mov
aas
push
lret
jb
jnp
sbbl
sub
fcomps
jo
iret
incl
cmp
in
repnz
inc
ret
gs
adc
and
lahf
cld
or
dec
ret
lods
dec
push
pop
cmp
aad
mov
in
popf
dec
test
adc
sub
xchg
pop
ret
lahf
push
fscale
test
push
loope
jns
jne
xchg
shrl
int
js
pusha
lret
gs
sbb
pusha
mov
std
fldz
and
fcmovne
inc
lcall
jno
les
xchg
xchg
or
shlb
ret
imul
xchg
add
fidivrl
out
repnz
hlt
or
and
rorl
ja
dec
dec
fisttpl
inc
pusha
arpl
push
pusha
dec
mov
xchg
outsb
inc
sarb
ljmp
outsl
fildll
cltd
sbb
adc
lods
cld
loopne
shl
fistpl
mov
mov
push
test
out
jle
loop
pop
dec
js
test
fld
stos
mov
in
push
xchg
repz
mov
shl
sbb
fstl
xchg
and
sbb
push
pusha
push
int
out
cltd
js
sub
and
dec
fadds
shr
push
testl
cli
xchg
inc
pop
icebp
int3
test
sbb
aam
mov
filds
xchg
les
fsts
iret
rorl
in
lcall
lds
jnp
roll
shl
xchg
popa
out
ret
push
rcrl
sbb
clc
push
shr
jge
shll
mov
cmpsb
icebp
out
notb
jp
iret
pop
scas
inc
mov
ficoml
ret
push
fs
inc
negl
shl
jo
in
jmp
push
push
es
lret
mov
gs
ret
pop
inc
push
push
out
add
sbb
mov
test
hlt
mov
test
mov
add
loope
pusha
lods
inc
lds
push
cmc
rcl
pop
and
in
in
sub
sbb
add
or
xchg
or
push
cld
test
push
nop
add
les
fwait
push
clc
mov
in
imul
stos
popa
cltd
loop
sbb
outsl
fs
mov
lds
cmpl
int3
cmp
jp
cmpsl
mov
shlb
cmp
cli
and
cwtl
inc
jp
inc
and
movsb
ss
push
cs
sub
mov
adc
xchg
mov
lds
and
das
bound
pop
lea
inc
mov
mov
xchg
movntq
pushf
push
sahf
or
int3
out
sub
test
mov
xor
cli
subl
and
ret
sub
adc
xor
rcrb
cmpsb
lahf
dec
movsb
xor
mov
rcll
test
mov
lret
or
mov
push
shlb
into
fcmovne
shlb
stos
ljmp
mov
pop
cmc
mov
push
adc
gs
add
dec
mov
lock
popf
mov
lret
or
push
sub
mov
sub
cltd
adc
jg
fdivl
shlb
js
mov
rcll
fwait
into
ljmp
xchg
cwtl
cmpsl
cs
stos
lcall
test
xchg
or
nop
incl
fs
ja
call
jbe
mov
ss
imul
pop
movsl
xor
xchg
andl
lods
sub
jecxz
mov
add
pushf
and
rol
rcll
test
enter
mov
popa
seto
pop
push
loope
sbb
fwait
push
xchg
dec
jnp
sub
mov
xor
loop
push
orl
lock
inc
cmc
cltd
into
loop
push
lahf
mov
test
cmp
mov
sbb
in
cmp
ss
dec
stc
add
cmpb
loop
mov
dec
mov
icebp
add
clc
mov
sub
sbbl
push
into
pop
in
mov
add
xchg
loopne
popa
lret
rcrl
mov
rcrb
sbb
insl
cltd
in
test
scas
lret
fs
dec
mov
ljmp
sar
bound
or
mov
repz
mov
in
shrl
push
loop
xchg
sub
mov
or
lock
ds
outsl
lahf
dec
mov
iret
pop
jl
xchg
pop
mov
fadds
andb
int3
dec
mov
daa
push
cmp
cmp
ret
add
sar
jp
testl
adc
mov
mov
mov
and
cli
ja
es
mov
add
ljmp
mov
sti
test
pop
test
mov
movsl
mov
outsb
sti
icebp
addr16
mov
dec
ret
and
inc
and
add
ror
dec
or
pop
jl
pop
or
xor
lods
in
mov
movsl
mov
cmpsb
or
fnstcw
jl
adc
repz
add
push
daa
out
xor
pop
xor
inc
mov
mov
lea
out
out
sbb
push
cmpsb
and
mov
xor
stc
sbb
xor
or
pusha
test
int
mul
push
mov
sub
jnp
inc
jne
pusha
adc
pop
sbb
jl
mov
cmp
cmpsb
lret
test
mov
ficomps
out
mov
inc
dec
and
inc
adcl
movsl
cmpsl
xchg
dec
jb
cwtl
push
bound
mov
clc
mov
into
xchg
add
cld
mov
enter
sbb
imull
inc
xchg
xor
pop
dec
loopne
xor
pop
inc
push
adc
dec
test
jl
and
cld
cs
inc
test
mov
xor
ss
popf
std
shlb
cmp
cmp
dec
test
mov
cmp
jnp
test
loope
int3
mov
out
pop
shll
lahf
mov
clc
sbb
ficoml
mov
cmpb
call
lock
mov
loop
scas
hlt
sub
pop
les
mov
jns
pop
loope
dec
test
mov
or
cmpsl
sub
sbbb
mov
cmp
js
add
pusha
out
add
roll
or
loop
or
int3
shlb
int3
pop
mov
scas
lock
push
inc
arpl
dec
cltd
data16
cmc
push
add
cmpb
adcl
or
push
or
push
aam
movsb
hlt
jno
mov
aad
rcrl
rclb
roll
lret
fsubs
dec
push
xorl
or
xor
out
arpl
jbe
faddl
xchg
xchg
fdivp
jmp
movsl
inc
les
lahf
jecxz,pt
sahf
arpl
push
sub
sub
clc
inc
test
lock
mov
loop
sub
mov
push
mov
jne
push
jle
fldenv
push
mov
dec
out
cltd
mov
mov
or
cli
sbbb
inc
pop
or
inc
aam
roll
popf
pushf
mov
add
test
xchg
adc
gs
int
mov
bnd
push
mov
cmc
lods
sub
mov
push
inc
mov
mov
repnz
xor
mov
adc
sub
dec
outsl
fiadds
inc
push
mov
test
iret
repnz
and
out
sbb
fcompl
mov
lods
mov
adc
cmp
pop
adc
decb
mov
and
dec
ja
mov
push
shlb
mov
xchg
push
jbe
jo
fcomi
mov
mov
pushf
sbb
into
xchg
outsb
push
push
nop
ja
out
into
mov
testl
fcoms
rorl
dec
rorb
jge
mov
in
movl
fldl
sbbl
inc
fsubrl
es
mov
movl
adc
push
das
xchg
inc
repz
nop
aam
enter
mov
jns
inc
in
rclb
cld
mov
cld
inc
push
ret
jl
call
jmp
adc
mov
xor
aam
mov
mov
mul
jbe
xchg
inc
inc
ret
lea
cmpsb
jp
shrl
push
insb
and
add
adc
dec
es
inc
jmp
jb
loopne
test
sbb
bound
or
add
push
roll
jns
stc
fs
pop
dec
inc
cmp
push
mov
aas
shll
ss
push
sbb
sbb
rcrb
ret
push
cmp
mov
adc
fildl
mov
popf
dec
and
loope
in
xlat
push
ss
clc
loopne
adc
pmaxsw
dec
cmp
lea
and
jae
mov
push
dec
pop
pop
mov
outsl
jmp
fistpl
jo
lcall
mul
jae
mov
setl
lahf
and
fadd
ror
fcoml
pushf
cli
pop
aas
push
negl
pcmpeqb
mov
jne
xchg
stc
and
pushf
imul
rolb
fnstenv
cmpsb
mov
xchg
jo
and
pop
mov
incl
xchg
cmp
mov
ud1
push
data16
movb
pop
mov
dec
pop
inc
fwait
repz
movsl
pushf
insb
inc
and
push
lcall
mov
inc
mov
test
or
jg
sub
adc
dec
clc
rcrb
into
ljmp
sti
dec
scas
sub
push
xchg
or
sbbl
xor
pop
aaa
icebp
sti
lret
xor
ficomps
or
orl
pop
int
and
jno
test
mov
lods
mov
sub
jns
xchg
mov
add
xor
dec
mov
ds
roll
sub
sbb
mov
adc
xor
dec
sbb
inc
add
fldl2e
sbb
pop
dec
push
dec
fwait
repz
dec
mov
jns
stc
sbb
mov
and
adc
xor
mov
xor
out
outsb
and
jecxz
cmpsb
xchg
outsb
arpl
jno
adc
and
add
or
cmp
jb
or
lock
leave
call
push
popf
dec
pop
pop
leave
mov
push
dec
sbb
add
adc
mov
outsb
pop
inc
add
push
orb
clc
mov
xchg
cmp
push
xor
fwait
mov
ja
hlt
int3
jp
daa
pop
push
call
xor
leave
mov
xor
xchg
xchg
jmp
ljmp
in
mov
movsl
int
add
pushf
test
loope
clc
cmpsl
cwtl
test
in
inc
ja
aad
mov
pop
inc
mov
push
xlat
fldt
sub
mov
repnz
repnz
ds
or
mov
mov
sub
test
dec
aaa
xorb
fidivl
hlt
loope
adc
mov
in
push
es
push
push
adc
xor
sbb
cmpsl
je
jns,pt
add
push
aaa
mov
fwait
rcrl
lods
scas
out
push
inc
sbb
cs
jb
popa
cmp
add
test
mov
add
out
cmp
adc
push
int3
lock
smsw
clc
jp
and
mov
cmp
rcrl
lods
bound
add
push
add
repz
int3
inc
inc
sbb
dec
lahf
xchg
testl
cs
xchg
mov
in
sub
call
mov
push
add
inc
jns
ja
out
fwait
xchg
adc
xchg
mov
mov
push
fiadds
and
dec
rclb
rcrl
ret
fs
and
lret
loope
mov
and
sahf
sbb
inc
mov
out
ret
repz
fsubs
mov
and
mov
mov
or
pop
sbb
push
in
fimull
movsl
lret
add
xchg
mov
ret
cmp
fcompl
dec
dec
test
jmp
dec
xchg
push
sbb
xchg
fmull
loopne
lock
cwtl
mov
xor
iret
lahf
fdivrl
mov
jg
loop
dec
lcall
sbb
mull
sub
mov
cmp
clc
xor
outsl
nop
mov
gs
mov
test
rcrb
mov
in
adc
mov
fld1
daa
pop
cwtl
mov
out
cwtl
lahf
adc
mov
out
sahf
or
cltd
or
nop
lock
pop
popf
xchg
jp
icebp
out
sti
rolb
ror
xlat
std
xchg
mov
insl
lods
rorl
add
push
xchg
xchg
push
and
sub
inc
fdivrp
fcmove
out
lock
popf
inc
cmp
jno
ret
push
pop
popf
aad
pop
dec
cmp
fsubrs
add
js
test
iret
xchg
and
fbld
loopne
outsl
fdivr
mov
add
and
shlb
cs
pop
mov
fldenv
lea
ds
pop
xchg
in
mov
push
outsl
push
xchg
pop
lahf
ljmp
cli
mov
ljmp
jp
gs
or
mov
xchg
cwtl
cwtl
aad
jo
push
scas
ljmp
pusha
xchg
ret
xchg
inc
dec
pop
xlat
push
push
neg
push
cmp
shll
dec
lods
ror
iret
push
shlb
cmp
mov
call
jecxz
and
test
data16
shrb
pop
leave
ja
cmc
loope
insb
pop
cltd
cmp
shll
test
aad
ds
lock
and
and
jmp
cmp
jbe
push
jmp
sbb
iret
mov
mov
inc
jle
je
push
sub
push
cmp
pusha
fs
dec
mov
rolb
sbb
lcall
rol
xchg
inc
mov
notb
fs
mov
dec
jb
mov
sub
xor
shl
dec
fcoms
mov
sub
fcmovbe
mov
shl
jmp
push
xchg
xchg
mov
into
adc
mov
adc
lods
xchg
scas
push
sub
into
in
lods
add
jl
sub
jns
mov
pop
cmp
inc
imul
mov
imul
push
cwtl
xchg
mov
mov
mov
inc
inc
ret
lods
movsl
dec
cmpsl
loop
fnstcw
int
xor
es
lock
add
xchg
inc
push
fucomip
cli
lods
pop
sbb
int
xor
addr16
mov
push
dec
mov
into
test
hlt
in
jle
jb
mov
int
xor
shr
push
lock
int
rolb
into
icebp
jb
xchg
addb
xor
js
mov
fs
aam
xchg
cwtl
stos
xchg
mov
xor
jmp
mov
repnz
add
add
fisubrs
xor
les
fists
pop
in
adc
jne
subl
enter
xchg
mov
inc
in
mov
jmp
mov
add
pop
add
xchg
outsl
mov
sti
fldl
lret
pop
std
mov
mov
fucomp
add
out
imul
scas
sub
cld
pop
repnz
clc
dec
lock
push
fidivrs
clc
cltd
and
xchg
mov
shl
rcll
rcrb
aaa
je
mov
fcmovnb
mov
fimuls
push
stos
popa
hlt
mov
pop
sbb
pop
hlt
xchg
test
lcall
clc
cmpsb
dec
hlt
add
and
je
stos
out
dec
adc
jo
movsb
pop
sbb
mov
inc
xor
mov
cltd
pushf
out
daa
outsl
lret
mov
aas
test
jp
mov
inc
sbb
pop
div
sbb
push
push
jnp
bound
xchg
inc
cmp
or
sub
gs
out
lret
addb
lcall
push
inc
loope
shll
je
xchg
dec
mov
xchg
cld
out
out
daa
adc
xor
sbb
in
jbe
or
ret
addl
inc
lods
sbb
jmp
and
addr16
cld
jp
xchg
fistl
push
adc
pop
jbe
js
in
xchg
js
inc
pop
cmp
pop
pop
loopne
xchg
ret
inc
lcall
push
sbb
pop
dec
inc
xchg
out
test
in
out
sbb
xchg
call
mov
test
loop
jg
loop
sahf
jns
leave
repnz
ror
jecxz
add
push
mov
sub
mov
and
add
or
and
leave
and
or
push
and
xor
ret
push
push
xor
xor
push
lea
inc
add
dec
push
add
call
xor
or
and
jmp
sub
or
ret
sub
push
dec
xor
push
or
and
push
mov
or
push
mov
or
push
and
and
inc
call
dec
add
mov
or
add
xor
mov
mov
sub
and
xchg
shr
lods
or
or
sub
xor
sub
sub
mov
dec
jne
pop
xor
pop
pop
inc
or
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
