push
push
call
andl
push
push
call
pop
pop
movl
jmp
xor
inc
ret
mov
movl
xor
inc
call
ret
push
mov
push
push
push
push
xor
sub
mov
mov
mov
mov
and
jns
dec
or
inc
cmp
jne
cmpl
jbe
mov
imul
lea
mov
xor
jmp
test
jne
cmpl
ja
mov
xor
lea
mov
sub
mov
addl
and
rol
add
inc
cmpl
jb
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
sub
push
push
call
cmpl
jge
push
call
mov
mov
push
call
mov
push
push
call
cmp
jne
movl
jmp
mov
xor
mov
pushl
mov
mov
call
pop
cmp
je
lea
jmp
call
test
je
push
push
push
call
mov
mov
imul
mov
mov
and
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
push
call
mov
mov
push
call
leave
ret
int3
int3
int3
sti
push
je
neg
jmp
push
push
push
push
push
in
push
sub
jnp
jo
push
movsb
pop
xchg
pop
inc
inc
aad
loopne
mov
fdivl
cmpsl
xor
lock
sub
dec
out
aad
stos
scas
mov
imul
in
pop
and
fadds
adc
addl
je
xchg
mov
cmp
or
push
in
fsubl
faddl
fdivl
fwait
incb
jg
add
push
scas
and
sbb
test
shll
mov
xorb
aam
and
xor
cmpb
rcrl
fnstenv
aaa
or
int
std
and
fdivs
xchg
or
xor
lea
in
xchg
ja
into
int
inc
enter
out
popa
movsl
dec
aas
adc
stc
xor
rcr
mov
dec
mov
sbb
push
xchg
pushf
sbb
mov
fs
lds
rcrl
inc
and
lds
gs
mov
aaa
pop
outsl
cmpsl
pop
dec
nop
bound
pop
aaa
jecxz
sbbb
jmp
add
mov
sub
loope
add
in
sbb
push
movsl
int
inc
lods
fsubrs
in
jmp
sub
push
out
scas
sbbl
out
sub
sub
pushl
sbb
jle
xchg
insl
xchg
cmpsl
mov
cwtl
insb
mov
and
pop
dec
mov
jns
or
xor
in
in
dec
sbb
out
cld
jne
mov
pusha
jmp
and
dec
push
mov
mov
gs
mov
and
inc
push
pop
and
xor
lea
mov
and
mov
inc
inc
push
fdivs
repnz
cmp
adc
mov
mov
and
fstl
or
iret
mov
imul
mov
xor
inc
fisubrl
cmp
jne
frndint
pop
jge
fsubs
clc
sub
int3
mov
push
aam
sbb
pop
mov
xchg
xchg
sbb
mov
cmp
je
sub
fldpi
xor
jg
and
insb
daa
leave
std
out
pop
or
xchg
shlb
inc
popf
das
loop
fsts
popa
mov
gs
pop
xchg
xchg
test
pop
inc
test
mov
test
lret
add
icebp
fs
push
mov
in
push
jle
and
in
push
loope
sub
sbb
mov
pop
push
out
sub
cltd
sti
inc
in
into
mov
faddl
out
adc
in
lret
test
fisubs
push
mov
dec
mov
sbb
ret
sbb
das
orl
inc
into
movsb
mov
jecxz
cwtl
insb
jg
pop
pop
mov
mov
clc
add
leave
sahf
popf
adc
xchg
xchg
add
and
sbb
cli
lcall
insl
mov
pop
pushf
inc
pop
mull
jle
mov
mov
xor
sbb
jo
test
xor
test
cmpl
cwtl
dec
mov
push
out
out
pusha
inc
inc
sar
scas
mov
in
dec
stos
popa
aam
mov
sub
stos
cmp
adc
dec
lods
adc
add
outsl
rcll
cli
pop
mov
sti
and
dec
xchg
add
add
mov
popa
movsl
pop
push
cmp
mov
jg
sub
int3
cli
jge
mov
out
fsub
cltd
imul
out
aas
neg
jmp
sbb
in
sbb
lds
fisubs
lods
jne
cli
xor
stos
jmp
push
loop
cltd
ja
pop
iret
mov
xchg
jge
pop
jge
xor
pop
fcmovb
fs
sbbb
xchg
lock
test
decl
jecxz
adc
jnp
mov
movsl
sub
and
insb
push
inc
icebp
outsb
lock
push
testb
xchg
test
xchg
sbb
pop
pop
mov
fnstsw
out
daa
fdivl
xchg
mov
ljmp
arpl
lret
and
xor
sub
jo
and
jmp
dec
jnp
push
out
bnd
loop
dec
out
and
call
lahf
adcl
leave
add
push
mov
in
stc
pop
adc
out
bound
jno
push
cld
lret
inc
pop
ret
cs
push
ljmp
xlat
in
mov
jmp
xor
hlt
fs
cmp
outsl
jne
inc
icebp
adc
mov
loop
lahf
outsl
lods
sub
sub
sbb
pop
adc
pop
outsb
pushf
pop
cmp
pop
inc
int
loopne
js
or
dec
or
sahf
mov
test
repnz
fsubs
jge
mov
nop
pop
lcall
mov
mov
cmpsl
mov
and
faddl
jbe
cmp
jns
andl
loope
add
mov
mov
mov
push
mov
lds
aaa
cmp
add
call
or
pop
cltd
xchg
add
adc
notb
pop
loopne
push
or
imul
mov
iret
das
adc
fisttps
in
xchg
xchg
andb
popa
ret
std
adc
mov
mov
mov
pop
adc
dec
mov
xor
inc
out
sub
jne,pn
hlt
inc
adc
flds
pop
and
jp
xor
sbb
les
and
xor
movsb
int3
sbb
lods
ficoml
js
inc
add
lds
mov
loope
iret
xchg
cmp
sub
pop
ret
xchg
rorb
xchg
push
das
and
mov
xchg
push
loope
popf
add
bound
mov
dec
enter
xor
dec
cs
mov
push
sub
fists
sbb
mov
addr16
js
shll
insb
hlt
fmuls
insb
call
jecxz
push
or
xchg
repnz
mov
xorb
fnstenv
jmp
sbbb
out
into
adc
sbbw
pop
pop
inc
push
sbb
mov
inc
or
and
ret
xor
mov
mov
icebp
sub
mov
scas
and
push
push
je
dec
mov
inc
pop
push
bound
jmp
pop
sub
xor
cmp
adc
mov
xchg
inc
add
lcall
adc
mov
mov
sbb
and
xlat
pop
xor
jl
andl
frstor
and
fs
sub
in
push
push
clc
mov
mov
xor
test
fadd
or
dec
xchg
rorb
xor
scas
fimuls
fsubrl
push
adc
lret
clc
or
leave
out
mov
nop
stc
cmp
into
xchg
mov
out
fnstcw
nop
mov
mov
mov
lock
jne
mov
rcrl
test
aaa
mov
in
adcb
ret
jecxz
dec
in
das
cmp
shll
mov
arpl
inc
inc
cwtl
push
repnz
cmpsb
daa
cmp
int3
cmp
pop
aam
out
in
testl
rorl
jg
dec
loope
out
sub
icebp
fnstcw
ja
sahf
loop
ljmp
jno
pop
clc
push
sub
roll
or
out
adc
push
das
lcall
lret
aad
lahf
xor
push
out
daa
jl
nop
sbb
push
or
mov
mov
int
pushf
inc
sub
mov
fs
dec
push
cmp
je
jns
das
xchg
xchg
mov
dec
leave
insl
repnz
out
mov
shr
out
mov
push
pop
mov
lahf
imul
shrl
into
mov
sub
loopne
insb
lock
in
leave
and
xor
jo
gs
mov
dec
or
sbb
iret
sbb
push
subb
mov
inc
xlat
xor
jno
push
ret
xchg
add
out
mov
adc
lret
enter
outsb
mov
jns
pop
mov
sbb
mov
incl
mov
mov
pop
jo
push
gs
int3
push
push
push
xchg
sub
sub
jmp
push
add
jne
mov
repnz
mov
xchg
hlt
pop
and
and
es
aas
sarb
pop
lahf
pop
nop
jl
sub
orl
jge
mov
in
jne
shrl
mov
loopne
sub
mov
in
jmp
cld
mov
movsb
dec
and
inc
xor
arpl
mov
ret
inc
push
shl
cmp
cmp
or
imul
inc
mov
out
mov
data16
incb
or
inc
inc
repnz
hlt
push
jbe
xor
in
fs
test
rcl
mov
push
adc
and
test
xchg
pop
sti
pusha
enter
nop
inc
cwtl
das
jg
xor
fiadds
imul
bound
cmc
loopne
fs
xchg
sub
xor
xchg
or
xchg
addr16
cmp
dec
fists
push
fidivrl
or
dec
out
icebp
or
push
in
dec
push
and
cli
sub
jp
and
in
subb
scas
sub
mov
popf
push
out
mov
mov
in
add
and
push
mov
sbb
jns
cwtl
push
mov
adc
and
dec
xor
jl
loopne
test
sub
push
mov
lods
popf
std
pop
cmp
add
popf
enter
pop
bound
pushf
ss
loope
cld
int3
clc
inc
jl
pop
inc
sarb
xor
ret
pop
fcoms
add
xchg
stos
je
mov
lret
sbb
shlb
jbe
push
mov
sub
and
insb
and
test
mov
jnp
int
stc
fwait
shl
es
stos
cmp
mov
dec
mov
push
pop
and
sub
cmp
outsb
mov
push
aad
push
push
mov
in
jo
icebp
or
loop
jg
scas
cmp
loop
lcall
subl
pop
mov
jne
nop
mov
dec
sub
mov
pusha
mov
push
lock
pop
scas
es
cld
mov
inc
cmc
pop
out
shr
jns
xchg
mov
push
fldl
shld
popf
pop
jne
ds
leave
pop
pop
and
inc
mov
cmp
shll
int3
inc
stos
mov
or
and
adc
jne
pop
pop
outsl
mov
fistpl
xor
pop
cmp
data16
cmc
mov
pop
test
je
xor
out
pop
add
ds
fstp
adc
push
cmpsl
lcall
out
daa
xchg
iret
and
insl
dec
ja
fistpll
ljmp
mulb
dec
push
cmc
aaa
cwtl
mov
es
sbbl
or
es
fwait
inc
popf
aam
mov
mov
pop
mov
push
xorl
xchg
stos
push
xor
push
andb
push
rcl
lea
add
loop
enter
lcall
out
mov
mov
cs
or
xlat
push
mov
sti
jb
sub
insb
push
jmp
negb
pop
pop
call
mov
push
rclb
cmp
mov
loop
push
shll
and
ficomps
sbb
jg
dec
aam
add
mov
loop
fwait
mov
xchg
int
fstps
jle
mov
mov
sti
sbb
dec
and
push
dec
cmpsl
shlb
push
outsb
hlt
inc
mov
sbb
cwtl
inc
pop
sub
shll
push
cmpl
aas
test
xchg
xchg
addr16
xchg
mov
xchg
out
gs
pop
clc
bound
sti
jns
ss
xchg
int3
insl
sahf
xchg
mov
push
icebp
sarb
outsl
push
repz
jecxz
mov
clc
add
xor
nop
sbb
inc
or
adc
push
aas
rcrb
xchg
xor
and
call
add
leave
or
sub
xchg
xchg
push
je
xor
fchs
push
push
stc
pop
xor
leave
lret
pop
mov
inc
call
xchg
das
ret
ljmp
stc
or
cmc
std
pop
pop
lds
mov
cmp
pop
cmp
and
add
xchg
sub
addr16
add
dec
inc
ljmp
sub
fistpl
jecxz
js
jno
or
fcmovu
add
out
stc
test
cld
jnp
pop
lds
popf
xor
cmp
cmpsl
out
pop
add
leave
jecxz
pop
dec
int3
inc
or
test
jge
inc
mov
xor
mov
mov
jmp
or
dec
inc
xlat
and
xchg
xchg
fisubs
in
push
lock
idivl
pop
bound
add
xor
or
dec
pop
pop
icebp
adc
ret
or
mov
xchg
es
sub
adc
and
xorb
or
int3
bound
lock
lret
or
mov
out
clc
test
subb
mov
mov
mov
int3
cltd
pop
popf
sub
repnz
mov
jne
adc
idivl
jno
dec
aaa
in
pop
jne
ficoms
lods
popa
mov
inc
jne
dec
jge
push
popf
loopne
add
or
inc
pop
add
add
loopne
inc
lahf
sub
mov
or
scas
in
ds
iret
cs
loopne
push
cmp
in
mov
loop
or
mov
inc
pop
nop
push
mov
mov
push
sbb
jae
jo
test
cmp
int
sbb
jns
fmul
jl
notb
popa
js
inc
test
fists
cltd
stos
clc
sti
dec
or
jge
sbb
icebp
xchg
xor
lret
lock
movsl
js
out
out
mov
add
jbe
lods
push
pop
fsubl
push
cs
mov
mov
leave
call
adc
imull
jl
fadds
pop
jae
cmpsl
mov
lret
jle
out
aaa
xor
pop
push
stos
pop
adc
mov
jbe
call
addr16
cmp
stos
test
xor
pop
fcompl
dec
push
cltd
and
add
js
imul
mov
mov
lcall
cmpsl
test
cld
pop
cwtl
iret
aas
mov
mov
test
jo
imul
sbb
push
sub
xor
mov
nop
mov
int3
mov
outsb
push
xor
push
dec
mov
call
adc
sub
sti
xchg
dec
outsb
loopne
sbb
mov
movsb
popa
jns
imul
roll
cmp
mov
xchg
or
push
popf
orb
iret
sahf
jo
push
sub
ljmp
jb
ret
movsl
push
js
jae
mov
ds
push
vorpd
and
jb
jbe
fxam
xlat
iret
ucomiss
lret
fstps
mov
sub
sahf
arpl
cmc
adc
mov
adc
rcll
mov
adc
scas
lods
out
sbb
repnz
lcall
fidivrs
hlt
into
xor
xchg
xchg
lods
stos
mov
stos
push
cmp
push
pop
add
push
sub
mov
mov
xorb
int
and
adc
dec
sbb
inc
or
dec
sbb
cmp
outsb
enter
push
push
rcr
jge
sbb
cmc
ficomps
add
mov
lret
out
out
fwait
sub
sti
shrb
mov
add
mov
mov
add
push
mov
lods
scas
sbb
xchg
ljmp
mov
xlat
pop
ss
jge
dec
cmp
xchg
sti
int
ja
inc
pop
pusha
xor
in
mov
inc
xchg
cwtl
lds
add
pusha
xor
clc
ljmp
xor
adc
cli
cmp
icebp
mov
jmp
es
push
popa
push
ds
daa
xchg
xor
ja
pop
push
inc
dec
push
orl
mov
mov
je
repz
push
pop
mov
testb
and
sub
mov
iret
sub
andb
cmp
mov
jmp
cwtl
dec
dec
cmpb
leave
lahf
fistpl
aad
push
jecxz
adc
sub
sbb
outsb
jo
add
mov
bound
add
push
push
ja
repz
movsb
in
daa
sbbb
popf
cmpsl
fadd
dec
sbb
push
sub
cmc
sub
pop
mov
ret
xchg
or
sbb
out
out
xchg
sti
and
sub
cltd
jne
mov
stc
data16
movsl
xor
les
arpl
sbb
mov
push
add
or
push
mov
jae
cmpsb
cmp
or
mov
lret
pop
pop
adc
daa
aaa
repnz
dec
out
leave
mov
stos
lahf
add
outsl
inc
into
jecxz
mov
sub
fs
pop
fnstsw
lahf
imul
jle
jb
lock
mov
pusha
decb
and
push
cmpsb
shll
pop
jbe
xchg
insl
mov
sbb
jg
pop
das
das
mov
mov
ret
jb
sub
cld
push
jp
sbb
ljmp
pop
sbb
pop
out
mov
inc
push
xchg
lods
stos
daa
imul
adc
aas
jns
daa
add
pop
out
sub
jecxz
sbb
jmp
jmp
sub
test
push
aas
fisttpl
push
xlat
mul
hlt
fdivrs
dec
sub
and
cwtl
call
nop
mov
daa
out
inc
cs
xor
cs
mov
mov
mov
dec
das
xlat
cmp
ror
or
dec
mov
sub
addr16
or
mov
xlat
pop
add
fs
cli
sbb
push
inc
lahf
mov
bound
push
fidivrl
fsubrl
mov
pop
push
daa
sbb
push
fs
lds
call
cmp
sub
mov
inc
push
aam
sbb
popa
loopne
xor
lds
dec
pop
dec
arpl
push
loope
movsb
mov
addb
inc
imul
outsb
insl
imul
popa
sbb
les
mov
sbb
stc
repnz
sti
xchg
sbbb
and
xchg
mov
sbb
mov
mov
xchg
mov
mov
test
shlb
rcrl
adc
ss
cmp
addl
popf
pushl
pop
shll
jg
push
int3
popf
leave
push
int
pushf
xchg
rorl
pop
je
dec
lret
jnp
cmp
fwait
inc
movsb
inc
mov
loope
inc
inc
outsl
imul
mov
push
cmp
or
xchg
fcom
insl
cmp
scas
ss
add
push
dec
or
mov
lods
add
push
cmc
xchg
fisubrl
shlb
push
lock
nop
mov
xchg
pop
sbb
add
sub
insl
jmp
jno
fisubs
cli
mov
fucomp
sub
jecxz
xor
push
jno
mov
mov
adc
cli
imul
ja
sub
gs
inc
sbb
insb
cmp
sub
ret
push
inc
loop
jns
in
mov
loope
push
movsl
mov
add
scas
push
xchg
scas
xor
fs
sub
aam
enter
inc
repnz
push
inc
sar
mov
outsb
aaa
and
inc
sub
and
sahf
aaa
scas
xor
cmc
test
shlb
mov
adc
push
fwait
loopne
dec
xor
div
rcll
mov
cld
in
xor
push
stos
clc
call
fists
xor
add
shll
sbb
lea
xchg
hlt
rorb
jp
lret
sbb
dec
pop
push
mov
andb
aas
scas
pop
push
jne
dec
in
ja
jl
pop
add
aad
jecxz
popa
test
cmc
adc
cmp
rcl
xor
dec
aas
jg
sbb
data16
in
dec
ljmp
pop
repz
or
bound
jae
jl
cmp
xor
mov
xchg
sbb
dec
insl
ret
aad
cmpsw
jne
push
rolb
comiss
mov
xchg
sbb
out
shll
pusha
adc
arpl
sub
cmc
mov
cmpsb
stos
sub
cli
lods
pop
fcomps
popf
mov
lds
pusha
jne
sbb
das
scas
fs
sub
push
idivl
rclb
nop
mov
aas
xchg
sub
cmp
dec
insl
mov
ret
mov
mov
jnp
je
xchg
adc
clc
mov
in
fnstcw
mov
icebp
xchg
cmc
lret
outsl
push
data16
mov
inc
cmc
jb
dec
setne
mov
jae
repnz
sub
test
test
mov
mov
push
or
push
push
fs
pop
mov
xchg
mov
xor
addl
push
sub
sub
jecxz
mov
icebp
pusha
jmp
xchg
loopne
lret
int3
add
addl
xchg
fildll
inc
push
lret
mov
or
or
bound
out
loope
push
xchg
mov
fcmovnbe
jns
jmp
xor
clc
js
jmp
sub
pop
cmp
mov
jg
push
xor
es
lea
sub
pop
popa
push
sub
pop
lds
fs
adc
cwtl
dec
xor
adcb
xor
push
or
push
les
add
mov
sbb
xchg
push
icebp
sub
xchg
sbb
ret
dec
xchg
jl
in
dec
aam
add
outsb
fistpl
call
lret
scas
fwait
imulb
inc
hlt
xor
add
data16
enter
xchg
xor
add
shr
pop
mov
rcrl
xchg
out
pusha
jmp
mov
xchg
and
or
stos
push
cmp
dec
in
sbb
push
mov
push
adc
mov
inc
inc
gs
stos
in
xchg
popf
inc
imul
add
sbb
rcrl
cltd
sahf
test
out
mov
loope
lods
das
scas
imul
jmp
ret
int3
add
jecxz
sbb
addl
mov
fcmove
rcl
outsb
sbb
shll
push
test
xor
inc
out
loop
xor
mov
cmp
imul
inc
repz
inc
int
pop
and
mov
mov
loope
adc
test
cmpsb
cmp
xor
out
add
loope
lods
outsl
lea
push
lock
dec
mov
dec
pop
out
inc
and
shl
aad
jp
testl
js
mov
mov
pop
cmp
cmp
jl
sbb
xchg
scas
mov
sbbl
inc
mov
inc
dec
mov
mov
js
adc
ss
stos
in
mov
push
popf
fsubs
cmp
shrb
sbb
mov
sbb
shr
loope
jmp
into
rcpps
sarl
movsl
dec
jp
dec
insl
fnstcw
cmp
outsl
or
jo
jnp
inc
lea
cmp
mov
lcall
in
ret
aad
mov
mov
repnz
push
xchg
xchg
mov
testl
stos
mov
pop
jo
stos
adc
cmp
jae
adc
mov
popa
mov
int
inc
aaa
dec
or
or
or
cmpsl
pop
fwait
sarb
ret
outsb
ds
pop
sahf
jmp
gs
in
test
add
cmp
cmp
pop
dec
adc
cmp
mov
push
xor
ficomps
inc
mov
addr16
adc
aad
inc
or
repz
xlat
or
dec
daa
push
add
jmp
xchg
pop
aas
fisubrs
cltd
xor
push
mov
fiaddl
jo
mov
out
imul
outsl
mov
int3
jnp
dec
xchg
pop
and
or
out
ljmp
cmpsb
dec
adc
push
jg
popa
push
mov
sahf
and
ljmp
pop
or
cmp
and
mov
sbb
sbb
fsubrl
xchg
adc
inc
adc
dec
add
jb
mov
leave
mov
xor
lcall
mov
push
xor
call
mov
outsb
js
jg
mov
jnp
iret
in
shl
and
dec
cld
test
data16
sub
and
dec
test
jle
daa
repz
mov
mov
cs
test
jmp
stos
or
inc
mov
jno
jmp
sub
gs
cmp
push
out
repz
inc
out
in
mov
outsb
jae
mov
mov
rcll
inc
push
mov
fsubs
cmp
lds
jmp
ficomps
insb
cltd
cmp
xor
leave
popf
mov
or
sbb
mov
out
jo
sub
sbb
cmc
dec
movsb
inc
xchg
das
jbe
xor
push
pop
imul
add
xor
adc
cltd
rorb
jo
sbb
mov
push
fs
add
shl
and
and
fwait
pop
xor
sbb
lcall
mov
xor
icebp
out
fsts
sarl
sub
cmp
lock
xchg
jne
js
sbb
xchg
and
push
jmp
scas
jp
std
mov
mov
shlb
and
sub
sbbl
js
and
lret
cmp
test
imul
mov
xchg
mov
into
push
inc
jb
inc
pop
inc
fucomi
test
sub
bnd
adc
jns
fisubrl
sbb
xor
lods
outsl
cli
fcompl
nop
scas
jg
imul
fwait
test
loop
xlat
sub
mov
mov
xchg
xchg
add
inc
imul
xor
mov
icebp
or
push
ss
inc
pop
rcr
and
jp
add
jge
pop
fildll
shrb
and
les
cmp
rcll
xor
cmp
outsl
decb
and
jo
nop
je
sbbl
sub
cmp
cmc
inc
cmpsl
sub
jp
push
jmp
out
aad
ret
daa
test
ret
jne
push
add
enter
adc
rcrl
out
cmp
cwtl
mov
addr16
inc
rdtsc
fisubs
in
push
sbb
cli
sub
xor
mov
aaa
push
lods
push
xchg
lods
dec
adcl
jecxz
lret
sahf
ret
loopne
scas
fcmovbe
shll
dec
add
js
cmp
fists
dec
xor
int3
push
xchg
je
xchg
in
xor
mov
cld
jge
lods
movsb
popf
add
mov
fidivrs
and
in
arpl
mov
std
mov
and
fwait
int3
push
push
xorl
subb
push
dec
push
add
sub
push
cwtl
jae
int
mov
data16
lret
sbb
jne
pop
push
into
cltd
mov
dec
adc
fiadds
rorb
leave
das
insb
cmp
lahf
sbb
mov
sub
or
pop
mov
mov
icebp
cmp
test
outsl
loope
mov
lods
enter
ljmp
cmp
test
pop
push
or
push
sarb
jae
repz
sarb
dec
jecxz
mov
icebp
aas
bound
inc
dec
lods
push
push
shrb
stos
push
fstpt
add
or
dec
cwtl
xor
call
mov
int3
lcall
jo
or
and
lret
pushf
js
bound
lea
mov
shl
je
lea
xor
dec
push
mov
push
or
jne
jp
rol
xlat
int
icebp
add
sbb
jle
adc
dec
lcall
inc
mov
lahf
mov
jge
stos
ds
xchg
xlat
insb
mov
test
enter
mov
inc
ret
mov
shlb
add
fildl
or
and
xor
add
fs
add
push
lcall
cmc
mov
out
clc
sarl
rcr
leave
mov
inc
outsb
sbb
shrb
xor
jo
rclb
and
jbe
jge
loopne
cli
outsl
dec
mov
fimuls
xchg
jne
shl
popa
pop
push
xor
aaa
movsb
and
cmc
adc
mov
pop
jle
ds
mov
loopne
add
shlb
mov
mov
mov
push
imul
in
and
mov
and
andl
pop
test
nop
cmp
loopne
add
xor
icebp
js
leave
and
and
sbb
ss
adc
ret
dec
mov
adc
sbb
jge
sub
pop
add
and
inc
rclb
jae
cmp
add
mov
cmp
fwait
sahf
andl
jne
in
xor
xchg
mov
pop
or
and
inc
dec
pop
movsl
test
fdivrs
pop
inc
mov
xchg
jbe
xchg
push
in
cmp
in
fcmovne
shll
hlt
cmc
mov
scas
xchg
inc
mov
stos
add
ja
mov
popf
in
fdiv
test
sbb
pop
mov
mov
push
es
js
mov
fldl
add
push
shl
outsb
cmp
lcall
inc
hlt
push
cmp
cmp
or
mov
push
stos
add
push
cmp
push
xchg
dec
mov
outsl
sbb
rclb
imul
and
inc
xor
lret
test
test
into
mov
popf
sbb
repz
inc
cmpsl
mov
add
push
jg
out
icebp
inc
push
cwtl
incb
pop
inc
cmp
inc
outsl
outsl
lds
leave
pop
pop
sti
mov
sub
xor
mov
daa
jo
lea
adc
or
sbb
je
dec
insb
out
dec
dec
dec
mov
mov
xchg
adc
jae
adc
cmc
push
jae
and
ficoms
jmp
arpl
dec
lods
sti
pop
inc
cmc
aam
sahf
jg
lret
arpl
ret
sub
xchg
xor
data16
mov
movsl
jns
xchg
push
mov
sbb
mov
mov
dec
sub
icebp
decb
daa
test
inc
dec
jno
movsl
hlt
aaa
inc
movsb
push
imul
inc
dec
rsm
imul
pop
js
scas
fistl
adc
sahf
lods
aam
add
mov
sbb
aam
ror
cmp
adc
mov
test
in
mov
aaa
ljmp
and
sbb
les
or
jo
cs
fisttpll
mov
je
out
jnp
ret
fstpt
jmp
mov
adc
test
pop
sub
in
jae
and
scas
mov
addl
inc
aas
xchg
mulb
push
jb
mov
dec
sbb
enter
int
ret
and
inc
mov
push
scas
mov
push
stos
sub
das
jbe
dec
lods
push
sub
lods
inc
lcall
inc
mov
sbb
fsubr
pop
pop
xor
jg
dec
or
icebp
lds
leave
xor
loop
test
add
adc
in
leave
lock
xchg
loop
ss
movsl
mov
pop
jle
xor
inc
pushf
mov
icebp
outsb
pop
mov
xor
out
adc
pop
adc
fnstsw
ss
ds
adc
mov
data16
cwtl
sbb
xchg
and
sbb
push
les
lret
loop
push
jae
cli
shl
and
lcall
in
ljmp
mov
jg
mov
add
ret
mov
rcl
popf
leave
push
data16
cmp
and
mov
mov
cmp
dec
xor
mov
test
or
jb
inc
jae
ss
dec
inc
mov
bound
adc
mov
mov
adc
and
inc
jne
and
int3
sbb
in
jg
add
into
mov
adc
aas
cmpsl
cmpsl
aaa
aas
int
mov
jb
test
in
add
mov
repnz
xchg
cltd
push
adc
pop
or
inc
ficoml
sarl
cmc
cmp
inc
into
test
loop
sub
sub
orb
dec
bound
aaa
mov
xor
xlat
push
icebp
mov
mov
push
inc
orb
sti
aam
pop
ret
movsl
fs
xor
jecxz
mov
sbb
push
push
sbb
xchg
scas
cmp
cli
ret
pop
js
or
into
cmc
push
fistpll
loope
test
inc
popa
adcb
push
xor
movsl
mov
adc
in
cmp
dec
inc
xchg
adc
daa
loope
jo
insb
js
mov
mov
fwait
cmc
fiadds
imul
loopne
loopne
aad
mov
rcll
arpl
cld
clc
mov
loopne
jle
add
dec
fisubrs
imul
ret
mov
je
add
sbb
pop
push
xchg
sub
outsb
lret
xchg
sbbl
stc
cmp
cld
push
sbb
push
add
sahf
pop
rclb
xchg
cmp
outsb
push
sub
or
pop
nop
enter
cmp
cltd
stos
add
add
pushf
test
jno
cmpsb
sti
lea
stos
dec
jmp
sahf
cli
loope
fsts
push
or
xchg
or
inc
aad
imul
jbe
scas
imul
dec
fnstsw
call
and
dec
mov
popa
push
jae
push
test
test
inc
xchg
adc
inc
bound
nop
mov
outsb
cld
or
adc
add
adc
mov
cmp
push
adc
xchg
hlt
mov
icebp
insb
add
fimuls
loop
pop
repz
lret
xchg
pop
mov
adc
mov
push
hlt
pop
cmpsl
mov
cwtl
inc
repnz
push
fcom
sbb
and
add
fldl
inc
mov
in
inc
cmp
ss
xchg
in
stc
lods
call
nop
mov
sbb
faddl
in
pop
pop
pop
push
mov
mov
rorl
xchg
mov
js
xchg
mov
push
ljmp
xor
shlb
dec
xor
mov
cmpsl
lods
xor
mov
push
nop
je
mov
test
rcl
addr16
xor
pop
push
cltd
aaa
mov
fistps
cltd
fdivr
add
and
mov
hlt
lods
loop
mov
cmc
push
lcall
jg,pt
arpl
mov
bound
ja
frndint
insb
in
gs
adc
push
cmp
jae
adc
sub
icebp
addb
hlt
lods
jae
cwtl
pop
stos
sbb
dec
ss
aaa
push
mov
push
adc
cmp
sahf
mov
xor
movsl
aad
push
addr16
fdivl
mov
in
jmp
sti
sbb
pop
cltd
add
addr16
xchg
pop
cmpsb
lods
jmp
mov
or
int
pop
inc
xor
xor
xchg
std
test
mov
std
scas
lret
jae
lret
inc
cs
or
ret
xlat
sub
jecxz
adc
stos
push
cmp
xchg
je
int
pop
sti
das
loop
push
lds
jae
xacquire
es
cmp
dec
dec
pop
jnp
adc
imulb
or
aam
test
xlat
arpl
sbb
scas
cltd
and
mov
mov
and
jmp
rol
xchg
add
sbb
adc
fisttpll
adc
cwtl
stos
movsl
cwtl
xor
xchg
sbb
movsb
mov
xor
fsubrl
test
flds
sub
cmp
scas
imul
movlps
idivl
mulps
lcall
lods
movsl
cwtl
jbe
pop
addl
mov
addps
jecxz
mov
jns
cmp
mov
xor
insl
jg
bound
nop
dec
push
rclb
sub
pop
mov
stos
inc
pop
jae
orl
mov
cmp
test
les
xchg
adcb
jle
sub
and
lahf
mov
mov
add
and
dec
mov
subl
gs
mov
sub
popf
nop
mov
mov
int3
mov
pop
popf
add
adcl
add
or
mov
xor
stos
data16
test
mov
stc
adc
cmp
mov
out
xchg
fisubl
cmp
mov
loop
int3
mov
psubsw
mov
xchg
cmpsl
cmp
in
cmpsb
or
rep
dec
test
lret
dec
shlb
fcomp
mov
repnz
pop
inc
jle
pop
jg
adcl
popf
aad
lahf
dec
sbb
mov
jecxz
incb
jnp
aas
out
nop
gs
mov
add
pusha
popf
xchg
inc
xchg
inc
inc
lods
xor
cmpb
icebp
pop
xchg
aas
lods
iret
cmc
push
test
ret
mov
adc
ret
push
jno
cmp
or
clc
mov
pop
jmp
loop
jp
pop
int
sahf
push
addr16
sbb
mov
cmp
pushf
or
mov
sub
xchg
les
jb
shll
out
xor
cld
in
enter
hlt
push
pop
inc
push
mov
xor
cvtps2pi
inc
lahf
je
mov
push
imull
test
or
gs
aas
add
dec
lock
rcrl
in
ret
enter
repz
loope
paddsw
arpl
mov
xchg
arpl
inc
xchg
repnz
xor
dec
xor
fistl
stos
shlb
jg
xor
cmpsb
xchg
repnz
lcall
jns
imul
ret
or
pop
xchg
mov
pushf
or
and
shll
sbb
divl
xchg
lcall
sahf
pop
sahf
js
xchg
sbb
mov
fsubl
mov
mov
cmp
xchg
xor
das
and
xchg
adc
mov
xchg
in
mov
or
xchg
ljmp
or
sti
inc
sbb
out
stc
filds
jecxz
insb
stc
jne
xor
scas
push
movsl
mov
adc
mov
loop
cwtl
outsl
inc
lret
dec
lret
xchg
dec
jmp
pop
loop
sub
pop
jmp
pop
xchg
add
add
add
scas
inc
mov
dec
cmpsb
pop
shrl
insl
pop
sbb
push
and
lret
mov
adc
jbe
imul
add
fsubrs
mov
ljmp
pusha
sub
scas
cmp
sub
adc
lahf
aas
pop
addl
mov
and
fisubrs
out
add
add
lods
pop
cmp
inc
bound
sub
pop
cltd
or
lock
dec
jnp
push
stc
pop
movb
int3
xchg
adc
jp
fucomip
dec
pop
or
xchg
cmpsb
lret
sbb
fbld
dec
add
ret
fnstenv
sbb
or
dec
push
mov
mov
sub
xor
roll
bound
adc
xchg
or
adcl
cld
popa
sti
incb
pushf
xchg
daa
in
outsb
gs
xchg
xchg
arpl
in
dec
jl
push
push
push
or
ljmp
or
cli
adc
ljmp
into
xchg
inc
lock
nop
popa
ds
mov
ljmp
lcall
outsl
add
gs
xor
mov
lea
mov
mov
mov
mov
pop
push
bound
inc
pop
add
dec
in
sahf
ret
out
pop
loopne
jg
pop
pop
cmpsb
mov
test
pop
jne
mov
bound
insb
dec
inc
mov
mov
iret
mov
jp
xchg
lret
and
lret
clc
and
movsl
inc
inc
adc
xor
cli
xchg
pusha
inc
mov
dec
sbbb
and
jl
sti
cwtl
and
xchg
mov
push
push
mov
inc
hlt
out
fidivs
adc
jle
hlt
lods
mov
cli
cmp
mov
shrl
mov
pop
pop
cltd
stos
in
pop
push
lret
inc
mov
in
jle
xchg
out
push
pushl
into
test
fwait
imul
inc
jae
sahf
push
ljmp
out
cli
test
testb
lret
jecxz
inc
rorl
inc
jne
fcompl
in
imul
sub
push
xchg
pop
add
pmulhuw
outsb
shll
xchg
and
ss
add
insb
push
xchg
xor
icebp
ret
loopne
les
pop
scas
aad
and
jg
push
cmc
js
das
push
clc
dec
fnstcw
cmp
jmp
in
daa
jmp
test
loop
mov
adc
rclb
daa
xchg
mov
sub
pop
push
fstpt
lahf
ja
test
enter
cmpsl
popl
loope
nop
mov
pushf
sti
pusha
mov
cltd
lret
outsl
mov
lret
sbb
push
insb
mov
ret
mov
pop
jp
arpl
add
jp
ds
pop
xchg
sub
pop
ror
jb
push
insl
test
cmp
mov
jbe
dec
or
js
lahf
push
mov
and
inc
jno
sbb
push
js
mov
arpl
lret
cmp
or
fs
fs
sarb
imul
popa
lret
xor
jmp
sbb
daa
mov
inc
cmp
adcl
leave
mov
orb
lds
lret
inc
movsl
xchg
loop
push
xchg
and
fisubrl
pop
mul
push
mov
and
loop
test
dec
outsl
dec
je
sti
push
and
lcall
ljmp
movsl
sub
lret
mov
adc
jno
pop
mov
or
outsb
aas
inc
sub
xor
xchg
or
push
ds
mov
loopne
push
cs
test
jl
out
lret
test
in
mov
bound
subl
jns
push
dec
push
popa
xor
pusha
mov
andb
sbbl
mov
in
jo
add
jl
lea
mov
scas
mov
pushf
rcrl
lds
add
je
mov
and
inc
dec
pop
fnstcw
loope
fidivrs
adcl
fisttpl
push
andb
xchg
xchg
aas
jb
adc
or
jo
imul
es
lret
imul
pop
and
mov
inc
inc
xchg
adc
adc
int
xor
stc
shl
icebp
or
pop
mov
inc
push
mov
movaps
or
cmpsl
mov
loopne
xchg
adc
insb
pop
xor
repnz
xchg
or
lret
insl
stc
lret
and
mov
mov
rcr
int
lcall
xor
into
loope
pop
inc
pop
pop
lret
shll
sub
jo
sub
push
in
je
popf
movsl
push
push
jmp
std
jmp
fwait
pusha
mov
out
sub
push
mov
das
sbb
sbb
mov
addl
dec
jae
cltd
mov
mov
xchg
jge
repnz
out
popf
es
sbb
sbb
jnp,pn
cmpsb
andl
lahf
cli
xor
cli
xchg
jp
clc
xchg
daa
mov
popf
jno
mov
add
out
pop
aaa
jmp
outsb
cmp
push
pop
mov
inc
adc
dec
push
loope
push
adcb
pushf
push
pop
fsubl
cmpsb
jae
xor
loope
and
out
inc
or
shlb
push
cmpsb
jl
sahf
movsb
xchg
test
lods
rolb
fwait
mov
stos
sub
lock
fmul
out
sti
loop
ljmp
push
and
or
xchg
xor
iret
sub
mov
mov
xchg
js
mov
mov
dec
push
pop
dec
inc
dec
push
push
les
pop
push
sbb
mov
push
arpl
push
adc
fstpl
in
xor
push
mov
pushf
or
dec
lahf
pop
imul
sbb
mov
sti
lods
das
push
fs
ds
pop
sub
cmp
les
into
shll
jg
xlat
xlat
jo
add
fists
dec
inc
inc
xor
push
scas
add
mov
jbe
push
mov
push
push
sbb
test
fnstenv
test
push
push
and
cmp
dec
or
or
mov
aad
pop
scas
inc
jg
movsb
pop
push
sahf
popa
mov
mov
arpl
popa
dec
xchg
jle
push
sbb
cli
int
dec
sub
jbe
sbb
mov
lods
and
cmpsb
cmpsb
sar
push
or
push
mov
cmpsl
sub
pop
mov
jae
cmpsl
jnp
and
push
add
jns
pop
inc
mov
cmp
push
mov
sub
adc
inc
inc
cli
cli
adc
test
ret
mov
push
jl
stos
mov
loop
and
mov
push
movsl
xor
and
mov
xor
test
and
add
sarl
mov
movsb
push
ret
test
lock
add
ljmp
jecxz
sbbb
mov
xor
xchg
push
mov
data16
fld
xor
sbbb
push
sbb
push
cmpsb
xor
jns
pop
adc
cmp
jo
adc
fstl
mov
add
jle
outsb
fcoms
push
push
popl
mov
and
ja
sarl
decb
dec
ja
mov
addr16
scas
xchg
mov
arpl
daa
mov
ds
xlat
int
aad
xor
mov
cmp
in
cs
inc
xor
xor
mov
mov
push
push
pop
fnstenv
movsb
push
mov
outsb
aas
dec
and
scas
std
sbb
or
into
sub
ds
nop
inc
pop
data16
es
adc
js
mov
jne
cwtl
xor
repnz
jo
stc
and
imul
add
push
pop
out
jo
scas
mov
popf
lds
inc
ret
shl
clc
aad
sbb
cltd
adc
hlt
cmp
sahf
inc
testl
mov
loopne
scas
push
std
dec
xchg
xor
xlat
ja
add
push
sahf
imul
scas
popf
xchg
adc
dec
mov
loope
pop
sahf
pop
cmp
adc
mov
mov
mov
les
inc
jnp
cmp
movb
xchg
ja
hlt
jecxz
mov
lods
add
icebp
testl
pushf
mov
push
lods
cli
pop
and
decl
sub
mov
mov
imul
std
test
das
fs
in
lods
push
lret
ds
or
cmp
sahf
jge
pushf
rcll
mov
push
aam
aad
gs
dec
ss
pop
inc
dec
mov
mov
iret
mov
jl
clc
add
dec
in
leavew
mov
xchg
cmp
push
imulb
adc
mov
shr
pushl
pop
sti
xlat
fisttpl
mov
test
imul
rorb
or
xchg
popa
popf
jg
rorb
pop
add
ret
xlat
or
outsl
jmp
xchg
cmp
fldenv
idiv
leave
das
fidivrs
or
mov
arpl
and
nop
push
xchg
sbb
popa
add
iret
and
dec
dec
lahf
sahf
jbe
xor
shrl
ret
insl
out
pop
shll
cld
pushf
xor
or
aaa
icebp
lahf
jecxz
adc
mov
lea
push
xor
lret
mov
cmc
enter
jecxz
scas
incb
das
inc
aad
pushf
nop
dec
sahf
push
cmp
dec
lds
mov
out
icebp
mov
pop
cmp
jne
push
outsb
adc
cltd
jae
pop
pop
arpl
sub
pop
mov
xor
in
iret
sbb
cltd
add
ds
pop
fucomp
mov
xchg
xchg
xchg
sub
jmp
aas
dec
cmpsb
repz
xchg
fwait
inc
sub
jl
dec
aas
sahf
adc
xchg
mov
lahf
push
pop
jbe
adc
je
fwait
inc
repnz
jbe
pop
loopne
scas
mov
mov
mov
pop
push
dec
pop
xchg
scas
cmp
dec
mov
stos
xchg
jbe
mov
gs
loope
xchg
and
sahf
gs
inc
push
js
insb
in
add
and
jb
xor
scas
lret
out
popf
aad
pop
mov
xchg
jne
mov
in
sbb
adcl
and
mov
clc
lock
mov
loope
pop
jmp
rorl
sbb
and
xor
pop
sbb
ss
les
mov
outsl
cwtl
xchg
adc
push
rcrl
inc
mov
push
fists
fdivs
cmpsb
lods
push
xchg
adc
adc
inc
out
repz
inc
cmp
test
xchg
mov
leave
xchg
ljmp
pop
test
lock
push
in
mov
xchg
cmp
sbb
dec
xor
int3
or
xchg
push
sub
and
int3
sbb
dec
xor
incl
stos
enter
pop
xchg
adc
jecxz
pop
or
push
mov
testl
sub
aas
mov
repz
flds
push
pop
sbb
dec
add
enter
in
push
and
scas
test
sbb
nop
iret
pop
sub
mov
push
mov
lret
loop
inc
push
js
cmpsl
test
xor
xor
leave
mov
mov
cmp
sub
pushf
push
cmp
jecxz
mov
inc
pop
adc
mov
vpshufd
int
inc
dec
mov
mov
test
idiv
mov
loop
ret
testl
lods
testb
test
aas
pop
int3
std
dec
sub
mov
cmc
dec
lahf
xchg
fistpl
fdivs
clc
cmp
pop
push
ljmp
arpl
mov
cmp
outsb
aaa
jnp
push
cwtl
dec
dec
pop
xchg
ret
and
icebp
out
stos
flds
mov
and
mov
stos
cmp
push
sahf
mov
sbbl
nop
ret
lret
xor
int
dec
sub
out
xor
cmp
es
xchg
ljmp
dec
pop
dec
je
pop
cwtl
fimuls
outsl
mov
sub
and
and
or
add
aaa
lcall
xor
sub
cmp
dec
mov
push
ljmp
jno
jp
loop
mov
jg,pt
shrb
mov
data16
divl
fwait
stc
loope
shrl
pop
out
pushf
mov
or
jne
adc
push
xchg
jp
hlt
nop
xor
mov
mov
cld
in
mov
fwait
insb
or
pusha
cmp
jno
pop
xchg
mov
xlat
das
mov
aad
dec
int3
adcl
iret
loop
scas
push
xor
sbb
xor
outsl
push
fxch
repnz
aas
add
call
mov
mov
movsb
scas
nop
pop
jle
movsl
dec
sbb
jle
leave
stos
or
out
jae
hlt
sbb
rclb
pop
enter
mov
and
scas
jl
test
ds
aaa
push
add
inc
or
iret
pop
lahf
pop
pop
xchg
cmc
ja
pop
icebp
mov
jge
add
dec
or
push
and
adc
ret
test
mov
into
cmp
dec
data16
mov
out
les
add
stc
add
inc
sbb
sbb
add
enter
aaa
or
xchg
xchg
movsb
push
xor
in
imul
inc
daa
addb
push
dec
and
outsl
cmp
lret
xlat
shlb
out
ja
and
mov
ja
in
xchg
les
test
adc
mov
pop
pop
mov
and
enter
inc
dec
arpl
and
mov
int3
or
jg
loopne
repz
stos
lcall
dec
clc
push
add
scas
orb
in
sbb
push
dec
rolb
mov
mov
mov
scas
inc
lods
addb
es
popf
xchg
js
xor
icebp
mov
pop
cmp
mov
cli
fwait
push
pop
insl
xor
pop
hlt
lcall
out
or
pusha
stos
jnp
add
mov
pop
or
mov
fs
jo
and
ret
pop
mov
xchg
or
adc
mull
fs
ja
dec
sbb
pop
out
xorb
pop
push
ljmp
stos
jmp
push
inc
enter
cmp
lahf
xchg
aam
jmp
push
add
mov
pshufw
icebp
pop
dec
pop
sub
mov
add
push
imul
fists
fmuls
cmpsb
add
push
adcb
mov
and
cld
mov
call
xchg
cwtl
in
out
add
xchg
call
sbb
fiaddl
jmp
xor
push
int3
cmp
mov
adc
popf
inc
dec
sti
mov
fs
enter
mov
aaa
cli
pop
pop
add
jno
sbb
dec
aaa
cmp
sbb
lret
dec
dec
mov
pop
jno
fiadds
push
inc
ficomps
sbb
ret
push
and
inc
add
test
add
push
xchg
ss
sub
sbb
pop
cmpsb
jmp
push
jle
mov
in
ds
mov
dec
or
or
shl
jmp
icebp
leave
lods
inc
aam
iret
cltd
xchg
lahf
pop
sub
jo
movsl
and
cmp
ljmp
or
rorl
loope
ficoml
lret
cmp
jl
lret
cmp
insb
sub
mov
push
ja
jmp
into
pushf
inc
outsb
mov
icebp
dec
cmc
sti
pop
or
jns
mov
in
adc
mov
scas
out
rcl
mov
lret
cli
or
loopne
insb
jns
dec
sbb
sbb
xchg
adc
mov
pop
pop
pop
and
fistps
in
faddl
dec
dec
dec
icebp
ret
xchg
push
and
lret
inc
cs
jo
jbe
xor
pop
lock
adc
jno
cmpl
insb
jmp
mov
inc
dec
shll
push
fs
jmp
je
jge
je
adc
mov
into
cmovg
pop
cmp
ret
and
out
pop
rol
push
leave
test
jnp
aam
jno
jbe
scas
fdivrs
jno
inc
dec
mov
mov
rclb
enter
fcoml
imul
dec
cs
mov
push
lret
lea
or
scas
xchg
xchg
mov
inc
fs
mov
sub
fdivrl
in
dec
jns
sub
scas
cli
xor
inc
mov
cmp
inc
ljmp
das
imul
movsb
iret
xchg
and
push
shl
or
scas
push
cli
jecxz
and
mov
sbb
sub
mov
dec
and
insl
pusha
add
xchg
mov
sbb
sbb
jno
ret
out
addr16
cmp
aaa
lds
xor
pop
fidivrl
jmp
inc
repz
push
jl
jle
jl
push
jo
f2xm1
outsb
inc
add
xchg
push
xor
inc
cwtl
lods
out
pushf
daa
jle
pop
fdivrs
add
add
sbb
out
cmp
cmp
icebp
subl
mov
adc
cmp
xor
aad
das
mov
fidivrs
sub
jg
adc
pop
arpl
icebp
xchg
ret
in
stc
sub
mov
in
mov
cmpsl
inc
das
xor
push
clc
in
call
mov
cmp
cld
jne
stc
data16
xlat
pop
jns
or
ret
hlt
cmpsb
rcll
sub
rorl
aaa
and
or
in
cmpsb
mov
sti
and
pop
and
inc
insl
mov
or
inc
inc
push
xchg
les
cmp
insl
testl
shl
jp
icebp
jg
mov
pop
pushf
into
ret
lea
lods
loopne
nop
jmp
sti
movsb
or
adc
addr16
pop
icebp
or
add
push
cmp
inc
stos
scas
pop
dec
push
mov
lcall
pop
mov
pop
call
mov
mov
out
leave
xor
popf
stos
sub
lret
imul
dec
jmp
mov
rorl
cld
outsb
scas
adc
add
jbe
icebp
adc
lahf
inc
mov
sbb
add
cmp
push
pop
mov
jmp
inc
testb
push
roll
mov
lods
pop
push
xor
filds
inc
movaps
js
imul
lret
add
xchg
movsb
and
push
inc
insl
test
fisttps
out
cmp
ret
or
xrelease
sarb
and
lds
ljmp
mov
mov
test
mov
test
testl
adc
loope
dec
into
pop
mov
outsl
jge
rcll
sub
or
orl
ds
test
orl
add
inc
fucomi
ficoms
out
jmp
or
cmc
inc
and
mov
inc
cmp
testb
cli
mov
aas
nop
fadds
mov
cmp
jg
mov
lret
daa
cmp
cmpsb
outsb
add
or
push
loopne
add
push
mov
inc
inc
inc
out
aam
popa
int3
cmp
out
leave
bound
fisttpll
push
pop
movl
aaa
sbb
mov
inc
pop
popa
sub
add
xor
mulb
lea
shrl
dec
iret
xchg
data16
push
out
sub
aam
pop
test
jle
in
jns
adc
xor
xchg
xor
lods
xchg
xchg
pop
xor
cli
sti
lcall
add
cmp
dec
out
test
push
cld
rol
repnz
mov
nop
push
jecxz
test
bound
lods
push
add
xlat
dec
and
enter
std
into
aam
cld
push
insl
adc
repz
mov
pushf
pop
cmp
les
xchg
jle
lahf
pop
gs
mov
jg
and
cmp
mov
sbb
pop
xor
xchg
jg
adc
and
pusha
loop
xchg
inc
scas
test
inc
mov
ss
mov
dec
arpl
ror
and
and
mov
mov
xor
in
pop
xor
pusha
inc
dec
and
cmp
addr16
lock
adc
jmp
lock
shll
dec
rcr
mov
dec
xchg
out
shlb
push
lock
dec
fmuls
iret
arpl
out
sbb
lea
inc
and
sub
es
mov
sbb
and
insl
sbb
cmpsb
sbb
lcall
arpl
movsb
or
adc
pop
outsb
call
lods
jne
push
jnp
xor
jge
adc
jne
inc
pop
and
and
inc
inc
fistl
pop
jmp
jo
stos
cs
lods
aas
test
and
das
push
sub
sbb
scas
pop
stc
jno
test
orl
ret
jo
je
addb
and
push
cli
ret
inc
xor
add
xchg
mov
jmp
jecxz
lahf
test
sbb
inc
dec
pop
push
iret
negb
mov
daa
xchg
sbb
dec
push
add
cwtl
movsb
cmp
push
insb
daa
imul
outsl
sub
xchg
loop
add
push
pop
addr16
sub
movsl
adc
or
jb
add
sub
loope
mov
call
fidivl
add
ret
and
xor
add
cld
cmp
jl
adc
cmp
pop
dec
pushf
dec
xchg
lret
movsb
mov
mov
insl
in
adc
rolb
hlt
aas
xor
aaa
inc
loope
orb
xchg
adcb
xor
pop
xchg
mov
dec
jmp
mov
int3
mov
out
push
mov
mov
fisttpll
in
fists
ss
xchg
pop
pop
and
or
fwait
push
push
add
adc
clc
outsb
dec
push
adc
or
mov
clc
out
add
adc
mov
stos
xchg
cmp
pop
add
addb
loopne
mov
push
sbb
loop
cmp
cli
pop
lods
jmp
xchg
mov
sbb
xchg
lcall
stos
xchg
pushf
fs
xchg
or
loop
outsl
adc
enter
jmp
add
sub
mull
int
inc
xor
push
bound
adc
adc
add
outsl
push
icebp
pusha
sub
cld
jge
xchg
icebp
inc
iret
lock
pop
gs
cmp
jno
shrl
test
pop
mov
sti
cmpsl
pop
add
test
inc
in
aam
inc
push
mov
xchg
call
push
test
ret
pusha
scas
dec
rorb
lock
jns
cmp
das
sarb
stos
or
xlat
xchg
lods
inc
loope
sbb
and
int
jb
dec
or
aam
xor
adc
mov
sub
and
pop
sbb
in
mov
jg
xor
and
cld
xor
ds
jb
in
mov
or
outsb
xchg
jecxz
inc
push
stos
pop
rorb
or
inc
xchg
push
inc
inc
pop
cmpsb
ljmp
jecxz
icebp
xchg
enter
imul
and
out
mov
adcb
or
ret
js
ljmp
loop
adc
cmp
sbb
push
cwtl
mov
mov
mov
sub
pop
mov
int3
ds
mov
jge
mov
gs
call
push
cli
or
sbb
test
push
and
cmp
call
mov
mov
enter
int
gs
xchg
add
aad
lret
jmp
js
das
stos
shll
push
cmp
cmp
pop
add
inc
inc
dec
mov
movsb
adc
jmp
and
scas
daa
or
inc
jle
movsb
aam
lahf
vmread
mov
mov
pop
test
mov
pop
aam
outsl
jne
call
push
in
test
cmp
jecxz
or
sahf
mov
ret
outsb
push
fisubl
cmp
sub
cmp
inc
and
push
adc
mov
adc
inc
mov
adcl
addr16
or
sbb
add
test
movsb
push
add
test
aaa
add
xchg
lret
or
add
sahf
mov
push
sbb
cmc
test
xlat
imul
mov
arpl
ss
or
inc
sbb
dec
sub
add
sub
cmc
mov
fsin
xchg
inc
js
inc
mov
inc
cmpsb
jp
insl
aas
enter
popa
popa
cmc
add
test
pop
mov
aam
and
sub
jo
das
sub
iret
dec
jg
negl
jg
fcom
and
mov
add
and
frstor
add
fs
push
jns
ds
stos
out
ja
sar
lahf
xchg
into
sub
imulb
add
out
jnp
jb
adc
hlt
fwait
push
or
and
and
push
popf
and
adc
lret
ret
cmp
and
outsb
hlt
jo
sub
int
cmp
gs
fcoml
push
cmc
push
xor
or
jnp
mul
mov
add
cli
nop
push
pop
adc
cmp
sub
xchg
push
stos
fdiv
lods
sbb
mov
test
sbb
mov
push
add
inc
xchg
leave
dec
imul
nop
mov
fucomip
insl
push
cmp
data16
xor
rcrb
push
xchg
or
jnp
mov
xlat
mov
push
into
cld
inc
xchg
pop
bound
pop
cld
fidivrs
mov
jle
or
cli
sub
mov
ja
and
pop
mov
adc
sbb
das
pop
in
enter
xor
int3
dec
jbe
mov
fsubr
dec
add
ret
push
testb
out
ss
pushf
outsb
add
xchg
cmpsb
inc
jnp
cwtl
cmp
and
xchg
pop
stos
stc
ds
add
imul
cmp
lea
les
rolb
push
or
add
subb
pop
shll
lcall
push
or
dec
inc
cmp
sbbb
xchg
sub
aaa
stos
lahf
xchg
cs
rcrl
xchg
inc
mov
add
lods
test
jle
xchg
xor
imul
pop
jns
out
adc
sub
sbb
xchg
clc
ficoms
xchg
mov
dec
adc
js
xlat
in
sub
cmp
lods
dec
xor
std
ret
lahf
sub
jmp
sbb
lock
or
cmp
mov
mov
loopne
mov
cs
or
imul
repnz
inc
xchg
int3
imulb
sbb
movsl
cmpb
mov
lods
pusha
shl
sbb
fldcw
inc
pop
loop
repz
sub
cmp
stc
neg
push
jb
sub
hlt
hlt
adc
pop
sub
push
insb
cli
out
jnp
add
mov
mov
addr16
imul
push
rcrb
cmp
fistps
insl
jge
pop
cmp
nop
out
lret
cld
or
test
ret
cmpsl
ret
shrl
ja
pop
and
je
or
in
aam
call
rcrl
cmpsl
mov
std
cmp
inc
mov
rolb
test
push
data16
mov
test
cwtl
cmp
inc
and
jmp
lea
or
daa
aam
pop
cltd
ljmp
jp
lods
fildl
test
dec
mov
xchg
and
rcl
mov
movsb
add
fiadds
lods
stos
push
scas
pop
xor
sbb
test
jge
mov
gs
shll
cltd
nop
mov
push
jbe
or
je
xchg
ja
sub
mov
xchg
cmc
pop
nop
shlb
dec
push
sbb
jp
dec
adc
mov
je
mov
vpcmpgtd
out
xchg
xchg
mov
and
mov
daa
imul
stos
pop
dec
pop
sbb
mov
rcl
pop
xor
mov
ss
fnstenv
mov
jge
jge
push
sub
scas
pop
mov
ret
mov
lods
sub
imul
add
insb
inc
inc
inc
int3
aad
fsts
ljmp
sbb
xor
cmp
cmp
sub
dec
adc
dec
rclb
xor
cld
std
dec
roll
int3
scas
pop
icebp
icebp
inc
stos
lock
fnstcw
out
push
rcrb
xor
xchg
jbe
mov
mov
fdivl
cmpsl
mov
jecxz
add
fnstcw
sub
mov
js
sahf
push
fidivl
adc
jb
jmp
roll
outsl
ljmp
dec
jns
xchg
mov
mov
xor
xor
rcl
les
xor
lret
push
sub
mov
xchg
std
fwait
mov
xchg
hlt
test
jle
xor
testb
mov
jno
add
aaa
mov
push
jp
or
movb
jns
pop
rcrl
mov
notl
hlt
push
push
mov
mov
sbb
jmp
jmp
aam
push
pop
adc
push
push
aam
push
in
pop
loop
movsb
inc
addr16
mov
aas
lods
stos
in
out
pop
dec
xor
adc
sbb
mov
adc
movsl
call
icebp
scas
andps
sbb
ret
or
push
jp
das
jp
loopne
pop
push
xor
ss
dec
mov
fldcw
mov
jmp
mov
push
mov
pusha
xchg
je
sbb
fstl
mov
cld
dec
test
and
aam
add
test
jge
test
iret
sub
fnstcw
mov
lret
cmp
in
repz
dec
int
addr16
pop
mov
je
adc
dec
cmp
pop
insl
loope
xchg
and
cld
or
mov
scas
inc
pop
mov
aaa
jne
dec
xor
mov
pop
test
aam
cmp
mov
or
shlb
sbb
sub
enter
lret
scas
jae
es
jg
adc
fwait
mov
inc
jl
hlt
push
in
ror
jmp
fwait
inc
dec
lretw
ret
nop
das
push
push
and
or
pop
xchg
ljmp
cld
cmpb
xchg
sbb
scas
add
cwtl
lds
repnz
jg
ja
mov
or
jp
sbb
xor
mov
aam
fwait
clc
test
xor
in
jb
mov
fwait
jg
jo
out
push
adc
adc
repz
jno
pop
mov
scas
push
adc
adc
jbe
ficomps
jnp
jbe
dec
lcall
je
mov
cmp
decl
add
or
jge
ja
push
dec
imul
jp
imul
xchg
push
xor
rolb
inc
sub
push
or
in
or
shlb
push
adc
add
fidivrl
sbb
sbbl
sbb
jo
add
pushf
mov
push
xor
dec
jp
fs
outsb
call
ret
dec
push
sub
mov
cmpsl
rorb
mov
add
shrb
int3
sbb
pop
inc
xor
push
pop
cmp
out
sbb
inc
xchg
sysenter
leave
or
push
mov
pop
lods
or
lods
fwait
out
pushf
test
sub
int
pop
aas
int3
das
sbb
ret
ljmp
and
fsts
repz
adc
jns
fldcw
and
gs
test
jp
fdivl
mov
xor
inc
arpl
test
ds
fldt
xchg
faddl
add
xchg
sbb
loope
add
shl
xor
test
xchg
movsb
jae
pop
lcall
nop
pop
dec
ss
inc
lock
and
js
iret
or
inc
xor
popa
jl
xchg
mov
pcmpgtw
cmp
nop
mov
popa
dec
scas
mov
inc
dec
in
or
dec
cmp
cmp
test
add
stos
rorb
cld
filds
xchg
dec
cmpsl
adc
xor
shl
mov
subl
js
adc
ja
stc
inc
gs
push
xor
xor
push
ds
ja
push
fcmovbe
mov
imul
or
push
pop
fisttpl
clc
jecxz
pop
xchg
add
out
cmp
inc
jle
push
outsl
push
inc
repz
and
rcll
repnz
adc
js
lods
and
add
imul
jae
jp
or
push
rcl
lods
mov
out
xchg
ffree
pop
test
adc
mov
inc
pop
jnp
flds
int
xchg
and
push
sarb
push
mov
js
mov
pop
in
std
lcall
xchg
cltd
scas
pop
mov
pop
push
cmp
mov
out
repz
testl
call
sbb
loop
rcll
mov
sbb
xchg
clc
sbb
cmpxchg
inc
fs
out
jnp
sahf
add
mov
stc
push
decb
mov
mov
jns
inc
adc
enter
sub
push
mov
dec
leave
lods
movsb
mov
mov
mov
xor
fbstp
sub
inc
sub
sbb
xchg
scas
test
fsubrs
cmp
pop
sti
jle
jge
call
mov
sbb
lock
xchg
add
xchg
jge
pop
cmpsb
xchg
sbb
xchg
nop
inc
pop
sbb
inc
inc
or
ja
xor
sbb
mov
xchg
loope
sbb
shl
or
roll
les
ret
dec
inc
jge
push
outsb
cmp
adc
mov
inc
push
or
pop
call
jmp
lods
push
icebp
add
jge
mov
ret
sub
std
mov
mov
test
enter
jp
xchg
add
out
cltd
fwait
dec
imul
pop
push
mov
popa
roll
jae
dec
pushw
fsubs
pop
movsb
fdivs
mov
cli
mov
pop
fidivrs
es
ret
mov
push
in
scas
out
mov
aad
push
sbb
arpl
pop
pop
cmp
push
add
mov
popa
pop
fbld
or
std
ljmp
push
std
adc
add
dec
push
test
push
mov
in
jbe
cmp
and
js
and
and
hlt
or
xor
fucomp
inc
adc
lods
sub
mov
iret
dec
sbb
das
int3
sbb
ds
jnp
mov
testb
imul
sbb
or
popf
lahf
gs
xor
subb
in
jb
xchg
sbb
mov
mov
jne
outsl
xor
add
or
xor
adc
jmp
or
orb
fcomi
or
out
mov
call
ret
ss
and
in
hlt
or
lret
mov
test
dec
sbb
add
dec
out
push
mov
je
outsl
std
out
pop
mov
scas
sub
dec
cld
inc
sub
mov
out
stos
andl
test
mov
insb
jae
arpl
je
push
xlat
mov
fcom
dec
sahf
mov
pop
push
cmpl
mov
cs
jb
sahf
inc
ja
in
push
and
fistpl
mov
retw
scas
cmp
ds
cli
add
int
stos
subl
mov
pop
adc
in
cld
cmp
jnp
lods
pop
mov
jns
inc
cli
xchg
cmp
pop
pop
mov
clc
inc
iret
les
lahf
iret
dec
push
mov
mov
nop
inc
fnstsw
or
add
nop
sbb
mov
jmp
movsl
sbb
mull
adc
lcall
ret
pop
aaa
jne
add
icebp
divb
dec
pop
xchg
cmp
push
cmp
adc
addr16
push
or
add
dec
mov
pusha
push
push
sub
loope
out
inc
or
dec
pop
int3
lret
lahf
rcrb
test
xor
and
lock
mov
je,pn
sub
xchg
add
sub
cmp
inc
in
sub
add
push
nop
fistl
into
ret
sbb
es
movsb
stos
pushf
and
lret
push
push
mov
rcr
ss
sbb
bound
mov
mov
loopne
dec
fstpt
test
sub
cmp
int
lea
sub
and
les
movsl
xchg
cmp
add
jns
clc
lods
in
pop
lock
mov
pop
cltd
mov
out
lahf
aas
mov
sub
les
jno
aad
xchg
jl
sub
pop
or
scas
sbb
daa
sbb
mov
js
sbb
pop
xchg
mov
lret
nop
ret
mov
xchg
out
pop
clc
flds
out
xor
rcl
negb
dec
push
mov
sub
popa
mov
clc
mov
std
and
divl
pusha
push
arpl
jmp
mov
cwtl
aam
push
and
das
out
inc
mov
mov
mov
sbb
es
cmp
jp
dec
sbb
bound
std
jne
xor
or
mov
dec
popf
lods
inc
sub
and
movsb
ficomps
fcomps
je
sub
leave
inc
dec
movsl
push
mov
push
into
cltd
fdivrl
mov
jbe
insb
enter
jle
repnz
inc
push
dec
pop
and
insl
xchg
fsubs
arpl
cld
mov
inc
ss
repnz
sbb
imulb
adc
xor
sub
jge
das
into
in
mov
pop
and
mov
and
mov
inc
pop
pusha
das
push
cmpsl
test
je
push
ja
mov
bnd
jns
fdivl
xchg
aam
enter
addr16
testb
xchg
mov
in
pushf
ret
mov
adc
lds
mov
sti
or
adc
inc
cs
lods
lcall
dec
mov
sub
jns
mov
out
adc
push
add
mov
mov
dec
mov
enter
mov
sbb
loope
out
jge
lcall
in
stos
testb
push
fsubl
std
in
mov
mov
lret
inc
mov
jmp
sub
fsubrl
shrb
fwait
stos
clc
out
nop
sarl
push
and
mov
incl
in
dec
hlt
sub
test
inc
mov
out
lds
sub
mov
cmpsl
push
jg
cmp
cmp
cmpsb
sti
xchg
test
in
imul
or
pop
jbe
mov
loopne
jl
aaa
pcmpeqb
mov
pop
enter
imul
movsl
lods
lock
cmp
cmp
dec
jno
mov
mov
cs
pop
pop
cld
sbb
sub
push
sbbl
nop
or
xorl
jmp
add
test
shrb
jb
fcoms
shrl
pop
pop
out
out
jle
lahf
xor
fstp
mov
lds
or
inc
fdivrl
popf
out
mov
ds
jb
cmpsl
popa
into
adc
mov
loop,pn
aas
call
add
aam
fsts
ljmp
outsb
xor
movsl
push
mov
fs
pop
loop
or
js
or
imul
cltd
pop
ss
inc
or
push
jmp
pushf
aaa
sbb
sub
push
cmpb
pushf
jecxz
xchg
mov
pop
notb
adc
xor
sub
in
pop
or
outsb
and
adcl
push
sub
fnstenv
subb
mov
ret
inc
addr16
arpl
xchg
rcr
shll
gs
add
xchg
xor
pop
sbb
mov
psubq
mov
mov
sub
loopne
mov
addr16
adc
mov
dec
les
sub
arpl
lret
hlt
pushf
int
aas
cmp
mov
push
jae
add
arpl
mov
and
or
xchg
mov
movsl
and
lea
out
jb
movsb
or
andb
lods
gs
inc
and
loopne
mov
jns
pop
cli
lea
mov
cmp
xchg
insb
loop
and
adc
pop
imul
sahf
and
mov
add
fdiv
and
mov
sub
mov
fnstenv
out
fistps
pusha
in
call
fldcw
push
xchg
sbb
push
sbb
dec
ret
xchg
lock
mov
sahf
pop
adc
or
push
sub
dec
add
push
mov
std
pusha
sub
lcall
lahf
xor
push
mov
adc
pop
cwtl
push
or
inc
in
leave
stos
ss
inc
or
mov
dec
mov
in
icebp
pop
xor
dec
inc
jmp
scas
lahf
cmc
or
sbb
xor
adc
mov
or
sub
jle
jmp
pop
xchg
adc
mov
mov
and
lahf
in
and
mov
mov
fwait
push
fldt
stos
dec
mov
pop
and
xchg
push
xor
push
xchg
mov
popa
push
ja
xor
pop
add
lea
push
out
iret
push
sub
lahf
outsb
mov
mov
mov
cmp
lea
cmc
test
mov
dec
std
and
aam
mov
push
cli
scas
pop
and
sbb
in
out
mov
sbb
addl
pop
add
movsb
mov
or
int3
pop
pop
xchg
imull
rcrl
push
test
sbb
hlt
inc
cmovge
xchg
popf
and
push
add
pop
out
add
cli
sub
inc
xchg
jno
popa
pop
adc
lods
jge
add
or
inc
sub
sbb
je
pop
mov
test
sti
and
sbb
or
jecxz
and
fs
inc
cltd
movsl
cmp
repz
cmpsl
fnsave
inc
jns
jle
loop
gs
insb
stc
push
jb
pusha
pop
testb
add
adc
lret
icebp
fcmovnbe
imul
sbb
pop
jmp
jg
xchg
mov
repnz
cmp
aas
push
jmp
or
push
mov
movsb
mov
add
xor
push
xchg
sarl
sbb
aas
daa
lods
lahf
sub
loopne
cmc
jp
dec
xchg
shlb
and
mov
push
pop
push
mov
push
cmp
pop
andb
lret
xchg
test
stos
cmp
pop
ret
movsb
dec
pop
fbstp
push
mov
das
and
push
loope
mov
xchg
cwtl
stc
mov
lret
imul
xor
stos
add
sub
mov
push
repnz
cli
out
or
push
pusha
mov
insl
xchg
pop
out
ds
bound
lds
pusha
cld
cwtl
lret
mov
movsl
jle
mov
jp
nop
out
or
xchg
dec
incl
lods
push
sub
cmp
jmp
pusha
adc
inc
pop
aaa
cwtl
pop
insb
shll
or
ljmp
xor
or
add
dec
mov
int
mov
inc
add
shll
dec
push
or
enter
sahf
jno
fs
subb
hlt
push
pop
jl
sub
dec
sahf
mov
add
mov
loope
dec
mov
test
icebp
pop
rol
push
add
inc
lods
lret
scas
pop
mov
sub
and
xor
add
jmp
push
lock
pop
or
cld
and
stos
jmp
outsb
xorb
push
dec
in
cwtl
mov
sub
shll
inc
jnp
adc
and
fldt
sub
mov
push
adc
cmp
push
jns
cmpsb
aas
cmc
insl
mov
leave
mov
not
movsb
enter
enter
popa
sub
or
arpl
neg
adcl
stc
mov
pop
lea
scas
movsl
xor
push
enter
ja
out
mov
shll
bound
loope
xchg
shrl
mov
cmp
pop
sub
sub
enter
xchg
sbb
mov
out
xor
js
lea
in
cmpsl
and
inc
add
pop
popa
jge
aaa
add
jne
aam
push
cwtl
in
add
hlt
sub
or
push
int3
pop
mov
out
incb
loopne
adc
pop
sub
sbb
push
popf
mov
jne
sub
sbb
test
mov
aas
insb
dec
push
dec
fisubrs
mov
stos
jbe
mov
idivb
mov
xchg
daa
cmp
outsl
cmp
clc
std
pop
cmc
int
and
testl
push
inc
xchg
cli
pop
sub
xor
lods
sti
push
or
addb
adc
pop
rclb
lcall
mov
mov
int
cmp
bound
lcall
push
div
mov
jo
sub
cmp
cmp
mov
mov
fmuls
aad
sub
out
mov
xor
mov
test
in
roll
sub
cs
testl
pop
fistpl
notb
pop
sbb
inc
and
jp
mov
call
lods
xchg
or
dec
les
aam
push
sub
sub
out
inc
stc
test
bound
xchg
movsl
jp
in
out
cmp
repz
mov
insb
imul
cmp
inc
fimull
gs
xor
fmuls
push
js
jb
data16
jmp
cld
and
sbb
insl
sbbl
adc
and
enter
outsl
mov
mov
leave
testl
xchg
or
es
lods
nop
lcall
mov
lea
lock
ds
pop
or
jno
addb
mov
push
in
fs
out
testl
fisttpll
vcvttpd2dq
movsl
push
dec
mov
push
pop
adc
rcr
jne
and
sbb
or
jge
and
into
xor
sub
adc
xchg
or
je
mov
out
adc
mov
ret
jge
out
shlb
adc
jae
cmpb
fs
jp
outsl
fisubs
movsl
mov
pop
push
lea
pop
add
ret
push
push
stos
adc
push
push
ret
inc
mov
test
daa
pop
and
sahf
mov
mov
jle
or
xchg
xor
aas
xor
inc
loope
cmpsl
test
push
adc
test
rorl
imul
dec
cmp
mov
xor
scas
dec
mov
push
xor
lods
sbb
rol
in
push
shll
sub
sbb
xchg
jp
push
lock
mov
addr16
sub
dec
sbb
orb
loop
loopne
add
aaa
dec
out
push
stos
shll
jno
xor
add
clc
std
shll
mov
add
mov
and
or
dec
or
cmp
mov
out
cld
imul
enter
cmpsl
sbb
mov
out
outsl
pop
xor
shl
mov
and
pop
lods
sbb
mov
push
lds
pop
sub
cmp
xor
lea
lods
mov
repz
mov
das
push
mov
and
lcall
xchg
jmp
and
xchg
cmp
mov
sarb
ss
andb
andl
ljmp
or
jge
lar
adc
in
push
lret
mov
add
xchg
dec
xor
cmpsl
or
cmp
in
cmp
xchg
mulb
xchg
fcmovu
cmp
inc
cli
rsm
lahf
mov
inc
cmp
mov
push
cvtps2pd
js
mov
aad
cld
aam
mov
sub
adc
leave
mov
pop
sbb
cwtl
addr16
jmp
bound
add
cmpsb
out
ja
and
cmp
xchg
cmp
mov
popl
leave
xor
test
jns
ret
inc
and
int3
dec
mov
pop
mov
jl
imul
xlat
mov
jge
sub
adc
xor
jmp
sbb
or
scas
out
cmp
inc
push
lods
xchg
iret
shlb
xor
mov
mov
fildl
icebp
lret
dec
push
int3
xor
pop
jbe
dec
sbb
inc
mov
out
mov
lods
lds
fistl
out
mov
arpl
enter
cmp
cmpsl
sub
adc
js
dec
movsb
pop
lds
or
and
dec
adc
mov
rorl
leave
mov
or
mov
fsubp
inc
and
ljmp
or
jmp
inc
dec
sub
fidivrs
mov
xchg
push
dec
in
inc
test
call
out
enter
dec
pop
popa
sub
adc
out
xlat
incb
das
lods
mov
std
mov
sub
stos
inc
lahf
and
loopne
movsb
loop
gs
sbb
fcmovbe
or
in
xor
mov
sbb
int3
rep
ds
jb
fwait
cwtl
add
out
add
pusha
cmp
clc
inc
xlat
xchg
bnd
add
fwait
pop
mov
mov
pop
push
out
and
jno
mov
test
dec
popa
jle
cmp
ret
and
adc
into
andl
add
or
ret
sbb
jae
adc
or
mov
push
inc
cmpsb
aas
int3
push
pop
mov
and
clc
lods
push
shll
test
mov
addr16
mov
bnd
pop
lahf
mov
push
out
fs
push
pusha
push
in
push
repz
dec
imul
fcoml
dec
out
cmp
hlt
scas
or
inc
pushf
jne
xchg
jbe
popa
adc
inc
call
dec
xor
test
loop
dec
lea
mov
in
sub
cmp
in
jb
push
push
mov
or
xor
jno
dec
xchg
push
lret
or
dec
mov
dec
loope
add
add
pop
push
cmp
mov
ljmp
mov
or
popf
test
idivb
and
push
clc
loope
sbbb
push
add
stc
sbb
mov
xchg
rcr
jb
dec
sub
push
je
jp
mov
sbb
into
mov
ret
lcall
lods
nop
push
cmc
push
mov
inc
fisubs
arpl
icebp
popl
mov
arpl
gs
mov
jae
dec
arpl
adc
call
out
aaa
dec
mov
loopne
jae
loop
cmp
push
adc
cwtl
ja
in
daa
inc
mov
int3
es
loopne
mov
cltd
rcll
lcall
js
rcrl
mov
cmpb
dec
lods
jl
adc
jb
stos
adc
daa
dec
dec
rcrl
pusha
lret
test
inc
std
add
jl
cmp
jg
push
jae
cld
lods
adc
mov
movsl
adc
ja
imul
lea
call
or
je
mov
mov
push
pop
out
adc
fdivrp
push
int3
jl,pt
cltd
out
dec
push
and
js
outsb
adc
les
mov
cmp
scas
pop
adc
popf
adc
pop
into
push
movsl
jg
and
stos
das
adc
rorl
rcr
mov
or
fs
inc
and
fcomp
xchg
adc
aam
lds
lea
in
mov
and
and
out
arpl
int3
jle
scas
rcl
cmp
mov
dec
mov
and
arpl
or
jno
mov
orl
cmp
mov
pop
arpl
xchg
sarb
adc
inc
cmp
and
hlt
je
push
inc
out
aam
cmp
adc
aad
add
inc
dec
daa
retw
inc
fildl
addr16
fdivrp
push
inc
movsl
push
dec
sbb
scas
cmc
and
outsl
movsb
stc
hlt
outsl
add
push
jmp
jno
add
xor
mov
adc
jl
inc
test
mov
jo
or
call
inc
faddp
or
mov
xchg
nop
mov
sbb
xchg
cmpsl
or
jae
test
js
mov
cmp
and
xchg
jae
adc
and
sub
outsl
pop
sbb
xor
and
jge
jbe
jns
add
jno
and
fsts
lock
mov
jmp
daa
int3
dec
sbb
sbb
cmp
xchg
mov
fs
aas
mov
mov
loop
inc
stc
movsb
adc
adc
mov
mov
arpl
xlat
pop
pop
mov
adc
lret
pushf
aaa
cwtl
dec
addr16
sbb
mov
push
or
mov
xchg
nop
and
cli
mov
jle
inc
cli
adc
or
bound
xchg
iret
or
xchg
jne
cwtl
loop
push
out
cmp
mov
in
addr16
pushf
lret
popa
test
mov
xlat
xchg
ficoms
sub
sub
data16
cwtl
shlb
adc
sbb
dec
push
in
test
mov
adc
cmp
jno
xchg
fldcw
inc
jle
mov
sub
inc
mov
xchg
imull
cs
adcb
je
mov
nop
cmpsl
ficoml
jb
movsb
inc
fisubrl
int
push
imul
add
mov
roll
inc
decb
stos
xchg
mov
scas
cltd
mov
xchg
sqrtps
jns
pop
fldl
call
and
outsl
lock
call
cld
nop
incb
inc
pusha
insl
push
jo
or
cwtl
mov
nop
mov
mov
insl
xchg
and
sbb
je
loopne
fs
mov
add
jo
xor
sub
pop
call
movsb
pop
sub
mov
xor
xor
arpl
std
mov
or
xchg
push
dec
inc
pop
cmp
pop
mov
ss
out
orb
lods
lcall
inc
jmp
fwait
push
xor
inc
dec
xor
scas
sub
mov
out
sahf
das
mov
adc
sbb
es
pop
cltd
cmpsb
insb
fimuls
mov
cmp
adc
arpl
mov
fwait
push
sti
sub
pop
mov
ds
xchg
cmc
cli
dec
cld
dec
push
loope
adc
int
jnp
out
mov
loopne
repnz
loop
xchg
into
int3
dec
inc
push
arpl
fsubrl
add
xchg
jno
ficomps
pcmpgtw
jg
mov
push
pop
nop
fwait
mov
cmp
jae
dec
mov
pop
leave
xchg
or
inc
pop
mov
and
mov
into
cmp
and
shlb
mov
and
xor
sbb
or
shrb
shl
push
je
cld
movsl
jmp
add
in
push
push
loopne
push
fisttpll
xor
pop
enter
popa
daa
outsl
or
push
and
push
sub
sub
xorl
scas
sub
cltd
icebp
iret
dec
dec
pop
mov
stc
jnp
aam
shrl
imul
nop
lret
hlt
fnsave
pop
jns
leave
gs
and
sbb
mov
jmp
ja
mov
lods
push
and
fldl
fwait
pop
or
test
inc
sarb
inc
mov
mov
add
or
and
mov
fildl
adc
cld
out
mov
and
test
enter
gs
movsb
int
xchg
adc
pop
out
cmc
mov
push
lret
and
adc
and
push
mov
enter
jns
and
add
and
dec
jnp
and
pop
fidivrs
mov
xchg
sub
shlb
sub
xchg
xor
pusha
or
std
xchg
jne
cmc
mov
rolb
fistpl
mov
mov
mov
and
cmc
je
int
mov
dec
cmc
mov
subb
jne
jo
and
fwait
mov
and
adc
loop
lret
out
jo
scas
adc
dec
arpl
cld
inc
pop
in
jae
pop
mov
ds
push
enter
or
jae
addr16
outsl
add
loope
dec
xor
nop
mov
xchg
orb
cmpsb
adcb
push
adc
adc
push
adc
scas
jo
jo
mov
xor
mov
out
fistl
dec
push
and
push
or
add
mov
pop
mov
repnz
roll
cltd
pop
mov
jg
dec
cmp
mov
mov
popf
int
fimull
dec
jmp
sbb
mov
xchg
push
jne
ret
mov
iret
jg
imul
xchg
mov
add
pop
mov
jo
sbb
add
and
dec
loop
lods
gs
xchg
fdivrl
test
sub
test
loop
xor
pop
dec
or
or
add
pop
fwait
cli
mov
xchg
in
dec
inc
push
mov
dec
mov
jg
scas
sarb
xchg
jecxz
aam
pop
lods
pop
inc
xorb
mov
and
mov
pushf
cltd
shll
mov
adcl
sub
dec
inc
fisubl
xor
andl
xchg
mov
les
push
mov
arpl
insb
addr16
loopne
movsl
shrb
dec
inc
popf
pop
add
xor
arpl
and
mov
test
inc
scas
add
outsb
xor
mov
rcrb
dec
push
shrb
add
in
mov
loope
movsl
loope
inc
je
daa
push
mov
pop
xchg
lock
xlat
inc
jecxz
lret
jns
add
loopne
sub
popf
shll
scas
in
repnz
push
push
cmp
jl
or
push
jmp
dec
or
jmp
addr16
xchg
int3
lahf
mov
push
in
inc
mov
mov
xor
mov
sub
pop
jae
xchg
mov
stos
shrb
mov
sahf
testb
pop
mov
add
movsl
insl
fs
inc
pop
movsl
inc
adc
sub
adc
dec
sahf
movsl
mov
mov
enter
add
imul
sbb
inc
je
adc
fdivr
mov
sub
addr16
inc
aas
inc
pop
daa
cli
fcmovnb
pop
test
pop
fisubl
loop
cmpsb
sub
jbe
out
sbb
es
or
jecxz
ja
rolb
out
inc
into
dec
sub
sub
jle
shlb
push
dec
outsl
ja
pop
test
xchg
push
xorl
mov
mov
sub
xor
hlt
add
or
decb
popa
data16
dec
cmp
adc
adc
jecxz
adc
sbb
mov
sbb
or
xchg
aas
out
sbb
cltd
cwtl
imul
iret
mov
mov
imul
pop
sbb
sub
jnp
mov
popa
shll
leave
lret
xor
insl
jle
cli
and
cmp
dec
sbb
filds
fisubrs
mov
pop
sbb
iret
pop
jae
ret
bound
sbbw
rorl
add
xchg
cmp
mov
and
les
fucomp
mov
fdivs
push
xchg
mov
pushf
icebp
cltd
ret
icebp
sbb
adc
sbb
xchg
jb
xor
insb
fs
jp
das
cwtl
pop
mov
xchg
ja
sbb
ss
loopne
adc
push
dec
cmp
pop
mov
imul
int
fcmovne
stos
cmp
lret
xor
mov
inc
testl
dec
das
lret
cwtl
pop
adc
jo
rol
adc
dec
adc
cmp
ss
cmc
xlat
or
subb
les
lods
aam
stos
xor
add
bound
push
or
or
add
cld
fsubl
jns
pushf
ss
fcmove
jmp
inc
push
mov
xchg
and
gs
ret
pop
xor
jp
sbb
divl
scas
jge
dec
push
and
repz
int3
jp
popf
aam
add
addr16
stc
mov
imul
ret
xchg
or
sub
cltd
pop
stc
adc
clc
fidivrl
into
aaa
jb
xor
and
xchg
outsl
fsubl
dec
mov
jne
jb
jg
and
dec
fsubl
stos
xor
mov
ja
iret
sbb
cmp
lods
repnz
sbb
aaa
inc
push
orb
fdivl
or
adc
aaa
jo
xchg
and
and
fdivs
add
idivw
hlt
stos
mov
and
jo
jne
mov
push
in
and
pusha
sbb
iret
mov
add
pusha
fcmovnb
shll
sub
punpckhbw
test
jge
jg
mov
mov
enter
push
lahf
jle
daa
aam
xchg
scas
lcall
adc
add
xor
jae
outsb
push
xor
mov
gs
cmp
and
pop
sub
mov
imul
mov
pop
out
fidivs
dec
fistps
push
pop
jne
mov
mov
push
jbe
sbb
scas
sub
push
test
xchg
push
or
sub
cli
and
js
in
jb
rorb
jg
dec
xchg
mov
cmp
inc
ja
dec
inc
pop
push
lods
or
out
sub
call
inc
pop
int
xor
cmp
cmpsb
push
imul
push
jmp
and
lock
jl
jae
xor
fidivrl
addr16
mov
jnp
inc
pop
lds
push
imull
movsb
and
inc
cmpsb
aaa
inc
mov
push
stos
fwait
arpl
add
negl
ficoml
jp
mov
mov
sbb
sbb
lea
cs
push
cli
rorl
sbb
std
sub
xor
outsl
cwtl
sub
mov
mov
hlt
and
aaa
sbb
sbb
jbe
cmp
cmpsb
imul
mov
xchg
adc
sub
leave
xchg
mov
int
nop
push
push
add
dec
sarb
push
jmp
add
scas
ds
mov
orb
mov
gs
scas
movsl
jno
clc
mov
aad
add
pop
inc
fsts
sub
pop
push
leave
inc
xor
xor
jmp
cs
daa
repz
gs
cltd
inc
popa
pop
mov
ds
jnp
push
inc
mov
jecxz
sbb
inc
out
xchg
pushf
jns
cs
mov
and
xor
mov
mov
mov
add
sbb
push
ret
adc
adc
les
xchg
in
mov
mov
mov
cmpsb
adc
out
fisubs
jge
outsl
rclb
push
jp
xchg
ds
push
and
stos
pop
cmc
mov
jmp
xchg
push
in
das
ficompl
std
xchg
mov
sahf
pop
mov
adc
push
push
addr16
or
out
push
nop
ja
push
stc
sbb
cmp
fcmovbe
out
fildll
fsubl
call
lods
mov
aad
fdivs
jecxz
repz
movsl
and
rep
shlb
mov
mov
mov
sbb
subl
out
rolb
adc
out
inc
xchg
fwait
xchg
mov
cmc
xchg
test
cltd
adc
test
xlat
gs
adc
ret
sub
sub
cmc
xor
ret
ficoml
xchg
in
into
stc
aam
push
push
inc
adc
int3
pusha
cmp
repnz
std
jge
fidivrs
cs
jo
mov
mov
cmp
cltd
pop
add
pop
mov
adc
pop
or
test
lock
push
lock
mov
cmpsb
movhps
gs
adc
jb
xor
ds
leave
in
adc
shll
pusha
adc
jp,pn
push
test
pop
mov
and
add
nop
shll
pusha
loope
sbb
push
ficoml
mov
mov
adc
inc
lock
sbb
sub
repz
mov
cmp
bound
mov
notl
jnp
mov
xchg
roll
mov
iret
mov
cmp
jle
inc
pushf
lret
enter
jg
imul
test
inc
mov
add
mov
clc
movsl
mov
mov
and
mov
pop
jle
aas
jbe
adc
add
bound
mov
call
mov
add
popa
mov
push
mov
push
mov
sbb
sbb
rcr
mov
mov
mov
jp
cmp
rcrl
xor
aaa
shl
sti
shlb
aad
mov
clc
dec
sbb
dec
and
loop
cvtdq2ps
dec
mov
pop
les
jno
les
rorb
in
loopne
popa
or
mov
jns
pop
dec
outsl
cmp
lcall
add
ljmp
lock
out
daa
and
dec
cwtl
mov
inc
shlb
and
jecxz
dec
and
dec
popf
inc
loope
sub
cmp
mov
xchg
divb
fisubs
and
push
cmc
sbb
sub
push
sarb
es
mov
je
push
shrb
pop
cli
xchg
push
sahf
jmp
xchg
add
lret
cwtl
addr16
aad
ss
sahf
out
pop
cmpsl
scas
movsb
sti
loope
add
xchg
dec
repz
mov
out
jecxz
aaa
mov
bound
inc
xchg
add
and
add
mov
mov
fxrstor
adc
pop
outsl
mov
cwtl
and
mov
xchg
add
sub
cld
pop
xor
fcomps
mov
sub
mov
xlat
mov
int
leave
xchg
dec
out
daa
push
icebp
sub
mov
jo
cmpsb
test
add
rorl
xchg
leave
mov
or
je
cmp
lods
add
xor
lret
adc
jo
fnstenv
ret
and
inc
inc
leave
dec
sbb
movb
sub
mov
out
clc
cmpl
out
mov
std
bound
mov
scas
xchg
adc
pop
xchg
push
test
fsubr
addr16
faddl
cmp
ror
imul
out
je
or
xchg
mov
js
mov
lcall
xor
jge
imul
adc
es
adc
fsubs
mov
inc
popa
cmp
jmp
sahf
scas
xchg
lcall
push
and
rcrl
lods
cmp
int3
inc
and
jb
jno
and
ja
push
lahf
and
and
in
push
and
loope
cs
es
fwait
sub
fs
in
xlat
or
xor
in
adc
mov
cs
dec
ja
iret
lock
pop
cmp
add
mov
rorl
sbb
mov
cmp
and
jl
pop
sub
sbb
xchg
rorb
jne
inc
push
test
jmp
scas
sbb
test
pusha
push
rorl
mov
adc
and
xchg
adc
sub
or
or
stos
inc
sbb
inc
inc
pop
xor
mov
pop
mov
rcrb
aad
addb
add
dec
fs
mulb
jno
std
std
adc
xchg
sub
lea
jno
bound
sbb
mov
lret
scas
mov
jno
push
jle
les
mov
jo
sarb
or
outsl
jp
inc
push
icebp
and
adc
rcl
xchg
inc
and
cmpsb
sarl
push
int
and
out
jo
and
cmpsb
shll
sub
cmp
xchg
not
xchg
flds
mov
add
jns
pushf
aas
notb
mov
inc
mov
mov
adc
jne
aas
sub
mov
sbb
outsl
fsubs
xchg
popa
mov
jl
pop
outsl
popa
sub
sub
test
mov
mov
roll
xor
mov
jne
cmpsl
jle
mov
andb
jns
fld
mov
bound
cmp
mul
pop
addr16
pop
pop
rclb
xor
cmc
in
jge
sbb
adc
in
adc
fists
mov
test
pop
mov
lret
sbb
pop
nop
scas
scas
sub
ljmp
and
hlt
repnz
adc
pop
add
test
aaa
stos
dec
daa
icebp
inc
aas
inc
lock
adc
mov
lcall
insb
sti
fwait
gs
add
divl
call
cmp
faddl
inc
xchg
push
pop
iret
cmpsb
xchg
sub
xchg
xchg
pop
and
popf
ljmp
cmp
and
pop
cmp
pop
mov
jge
adc
mov
mov
in
int3
inc
sbb
pusha
jp
pop
push
in
xlat
nop
push
out
sahf
mov
iret
cmpsl
mov
xor
stos
jb
in
stc
pop
mov
xchg
add
cmpsl
push
mov
es
sbb
ret
push
dec
lea
push
mov
cmpsb
aaa
fdivrl
int
ds
test
push
mov
in
and
or
mov
loop
add
add
and
dec
out
ss
std
das
inc
xchg
out
movsl
xchg
dec
cmpsl
add
add
bound
jo
jl
or
pop
add
roll
iret
cmp
mov
dec
cmc
push
xchg
pop
jo
popa
ss
mov
pop
cmc
add
mov
pop
xchg
aaa
hlt
xor
add
pop
mov
and
test
ret
cmc
adc
addr16
aad
icebp
cmpsl
mov
jl
and
xor
jo
cwtl
dec
jle
xchg
push
xchg
out
mov
in
cmp
xor
mov
jecxz
push
push
xchg
sahf
mov
lods
rclb
jne
fwait
jg
shll
aad
inc
xor
dec
js
jecxz
cmp
imul
push
cmpsb
arpl
les
cmp
push
inc
push
dec
std
pop
xchg
lahf
lret
iret
std
shlb
leave
and
js
jne
and
cmp
fcompl
push
sub
dec
cld
and
adc
imul
test
shl
xor
fst
xchg
mov
mov
dec
sub
mov
mov
mov
arpl
por
in
mov
adc
and
or
lock
ret
push
cmp
shl
jle
je
outsl
push
cmp
dec
sub
movsl
out
jnp
hlt
lods
sub
cld
mov
xor
inc
mov
jmp
gs
mov
inc
cli
test
loop
repnz
mov
fnsave
mov
cmp
sub
dec
mov
pushf
and
or
dec
and
fimull
sub
icebp
pusha
mov
sub
jl
pop
lahf
loopne
inc
sbb
fstpt
aaa
movsb
cmpsl
mov
sbb
lock
pop
cmp
inc
adc
mov
add
xor
lods
jo
sub
cmpsl
fcompl
jns
cmc
pop
addr16
or
mov
in
mov
mov
in
xor
shrl
lods
pushf
add
jp
add
test
dec
lret
jbe
add
jo
out
fdivl
mov
jb
jle
dec
addr16
loope
pop
dec
mov
jns
mov
cwtl
into
push
out
adc
sub
jg
mov
push
repnz
pop
and
xor
rolb
ljmp
jo
cmp
push
icebp
loopne
inc
add
cwtl
sub
inc
in
inc
jns
mov
inc
out
xchg
lahf
mov
sbb
fisttps
inc
xchg
adc
out
pop
shll
lds
std
mov
divb
xor
sbb
inc
or
mov
mov
xchg
pop
stos
lock
pop
cmp
int3
and
pop
sti
pusha
xor
pop
ds
push
mov
and
push
dec
loop
rolb
mov
cli
dec
xor
in
mov
das
adc
pop
fldl
repnz
mov
mov
jne
les
dec
mov
sub
movsb
adc
stos
pop
lahf
pop
or
adc
mov
mov
mov
cmp
mov
xor
fidivl
push
mov
hlt
lcall
rorb
pop
mov
std
jne
clc
repnz
cmp
adc
dec
push
xchg
adc
sbb
xor
adc
xchg
push
frstor
outsb
push
test
stc
pusha
scas
ret
test
add
cmpb
out
lock
cmp
dec
jp
stos
jl
rol
fs
xor
fwait
shrl
sahf
in
loopne
popf
xor
mov
dec
in
inc
lods
mov
mov
or
cmpsb
aam
enter
jl
and
mov
jnp
inc
movsl
pop
add
xlat
xchg
stos
negb
pop
add
adc
inc
xlat
shlb
adc
cmp
lahf
jne
dec
or
or
int
pop
nopl
mov
pop
popa
inc
dec
les
xchg
adc
mov
aaa
cwtl
aaa
add
rcrl
inc
dec
xchg
sarl
pop
jno
dec
insb
aas
shll
les
idivb
into
ds
xchg
sub
dec
sbb
and
ljmp
mov
sbb
pop
add
in
fistl
gs
jae
or
loope
popa
in
loop
cmpsb
icebp
add
ret
mov
xchg
inc
sub
add
scas
sub
push
insb
cmpsl
insl
add
sbb
imul
and
dec
pop
cld
cmpsl
and
stos
add
xor
dec
cmpsb
jae
nop
cmp
dec
stos
daa
push
push
mov
and
inc
push
mov
xchg
fidivrl
mov
mov
stos
fsub
or
add
mov
popa
cvttps2pi
rclb
jae
lock
cmp
xchg
add
fldt
pushf
inc
and
lds
jno
lods
mov
add
fildll
fdivl
pop
pop
out
pop
xlat
mov
sbb
mov
mov
push
jl
sti
cltd
adc
loopne
jge
mov
xorl
pusha
arpl
mov
xchg
cmp
inc
test
enter
das
jmp
pop
cld
jl,pn
xchg
jp
cwtl
adc
pushf
aad
in
pop
roll
push
inc
int
pop
push
out
jle
mov
sbb
es
xlat
push
add
mov
cmp
int
insb
pop
xchg
aaa
popf
xlat
inc
shlb
cmp
loopne
cmp
nop
sub
shrb
jae
jmp
jbe
inc
test
mov
cld
xor
loopne
mov
mov
mov
sub
xchg
add
sbb
lret
lea
test
add
in
xchg
xor
jno
in
mov
fistpl
lahf
push
dec
movsb
mov
cwtl
push
pop
in
cmpb
and
lcall
mov
aas
jg
or
add
scas
test
lea
les
xchg
ss
dec
add
cltd
icebp
jne
push
xor
jne
inc
lds
or
andps
push
sti
sub
jmp
jbe
push
jae
aad
scas
pushf
jle
cld
mov
jg
pop
insb
mov
mov
dec
fistpl
int3
fucomi
inc
cmp
out
lahf
or
inc
pop
cmpsl
sub
xchg
sub
xor
dec
lds
jp
fdivl
fwait
mov
or
cmp
insl
add
cmp
inc
cmp
popf
repnz
xlat
push
fbld
inc
push
jno
sub
jns
das
add
inc
cld
into
insb
shufps
push
sub
int3
popf
popa
addl
push
js
xchg
je
mov
jne
cwtl
test
mov
nop
movsl
push
cmc
pop
test
mov
cmpsl
clc
clc
inc
fnstcw
imul
mov
cmc
mov
adc
xlat
cltd
and
xchg
pop
pop
aas
ret
pushf
jle
insl
add
out
mov
push
les
js
ljmp
les
out
jb
das
mov
aad
push
in
insb
dec
cmp
into
xchg
rcll
cmp
repnz
sbb
les
cld
andl
pop
adc
cmp
cmc
mov
or
hlt
pop
or
movsb
aam
sbb
inc
and
fsub
lret
and
fdivrp
and
xchg
or
loope
lock
jae
jl
subl
jl
enter
nop
jnp
add
rcrl
scas
fiaddl
jae
cmp
mov
fsubrl
sbb
fdivl
call
outsl
in
pusha
push
pop
xchg
fs
xchg
mov
fidivs
mov
mov
sbb
inc
jbe
std
test
sahf
or
sbb
popa
lock
das
sar
test
repz
sbb
or
pop
clc
mov
add
xchg
aaa
outsl
adc
fadd
mov
add
mov
pop
sub
ret
clc
leave
into
out
outsb
xchg
xor
lea
cmp
jo
shr
ret
vmread
lds
das
test
arpl
ja
insb
data16
cmc
ds
sbb
jne
dec
iret
mov
fists
jne
fsubrs
ror
mov
pop
in
shll
bound
lock
jmp
fnstsw
test
push
mov
dec
sahf
lock
dec
mov
lds
test
mov
inc
ret
pop
ja
add
pop
adc
sbb
in
mov
pop
pop
cmpsb
mov
mov
lcall
fldcw
fstp
test
imul
flds
std
cltd
call
out
je
mov
dec
and
pushf
push
sub
pop
push
cmp
enter
fucomi
pop
and
add
push
mov
dec
lods
push
xchg
jnp
orb
dec
lea
pushf
cmp
test
xchg
cmp
inc
in
movsl
in
scas
dec
es
repnz
mov
jbe
ljmp
and
fistpl
jns
xorb
movsl
aam
and
jnp
rol
loopne
pop
out
xor
push
adc
test
pushf
mov
mov
fstpl
movsb
dec
in
insb
je
cltd
mov
addl
arpl
and
mul
movsb
add
mov
pushf
lea
mov
push
lcall
cltd
repz
stos
jne
inc
jmp
lock
pop
mov
xchg
adc
mov
cmpsb
add
loop
jae
pop
imull
leave
pop
loope
insl
add
jp
push
and
pop
xchg
daa
ror
loope
mov
push
data16
push
mov
sti
add
xchg
dec
add
lods
mul
inc
jmp
cmp
cmp
push
cmp
ss
imul
ret
fsubs
jmp
popf
dec
test
adcb
pop
orl
and
mov
in
lds
inc
add
mull
ljmp
mov
cmc
xor
fnstenv
xor
mov
mov
gs
mov
adc
ds
stos
int3
xchg
mov
jmp
pop
out
fnstcw
imul
xor
mov
int3
pop
incl
les
out
sar
cmp
pop
nop
cmp
inc
or
jg
popa
fisubl
xor
xchg
fsubs
or
pop
add
mov
jae
inc
fmulp
and
mov
in
mov
mov
jp
lock
out
mov
mov
test
and
push
cmp
sbb
push
push
ret
cmp
incl
movsb
mov
mov
pop
dec
mov
mov
cld
clc
cli
adc
jg
jo
sbb
cmc
lock
pop
jne
cld
lods
cmp
xor
pop
fcoml
repnz
int
xchg
movsb
sarl
sbb
jl
pop
neg
daa
mov
cs
lods
sbb
xorb
pushl
and
movl
stos
mov
inc
je
jp
mov
xor
pop
movsl
push
repz
add
pop
ret
insb
or
in
cmc
subl
enter
mov
int3
xchg
xchg
inc
mov
js
clc
jb
push
mov
mov
cli
mov
mov
push
int
inc
sbbl
sub
pop
inc
push
mov
icebp
add
addr16
sahf
mul
mov
or
cli
push
pop
inc
jo
xor
jo
pop
jns
aaa
cs
aam
sub
sti
aam
xchg
and
mov
sbb
jle
ds
mov
jmp
jmp
call
stos
pop
pop
loope
arpl
push
mov
jg
fsubs
loop
cld
pusha
dec
cvtpi2ps
rcr
push
mov
iret
popf
das
xchg
fnsave
icebp
mov
shlb
jbe
pop
filds
leave
loope
in
mul
push
insb
dec
pop
pop
inc
add
cmp
jg
nop
cmpsl
mov
shl
mov
inc
dec
push
movl
inc
push
sbb
cmp
add
mov
xor
ss
shr
inc
pop
stos
leave
idiv
lods
xchg
adc
sbb
mov
mov
mov
dec
lods
pop
add
ja
xlat
jecxz
gs
in
lret
stos
fwait
dec
cld
test
movsl
mov
stos
push
push
xchg
in
out
popa
clc
aam
push
les
sbb
fwait
sbb
push
repz
pop
adc
test
mov
sarb
cmp
pop
inc
jo
pop
cmpsl
push
lods
sub
pop
iret
add
outsb
pushf
and
data16
outsl
mov
add
lods
or
and
stos
inc
push
stos
push
adc
mov
mov
enter
fsubs
add
xchg
je
and
mov
push
cli
nop
movb
lods
mov
ret
stos
sarl
jns
aas
lcall
sub
cmp
jmp
out
lods
scas
pusha
lock
out
adc
cmpsl
and
sbb
test
adc
cmp
pop
mov
inc
jbe
xchg
inc
data16
lods
mov
mov
fstl
push
movsb
adcb
jnp
cmc
push
iret
roll
popf
sbb
fstl
mov
mov
js
push
inc
jmp
mov
jecxz
lock
dec
cmpsb
ljmp
sbb
sarl
sub
xor
test
hlt
les
mov
pop
es
mov
stos
and
aam
ret
ret
shrl
hlt
add
insl
insb
aas
dec
sub
in
jno
xorl
fcoms
jecxz
je
nop
jmp
fcompl
jl
add
ss
cld
jno
pop
subb
cwtl
lds
cltd
mov
or
cwtl
cmp
mov
sub
orps
insl
and
repnz
adc
xchg
je
dec
shll
fcomip
lock
pop
insl
icebp
add
or
rolb
cmp
push
sbb
inc
je
push
ja
lods
xor
cs
adc
jl
mov
std
hlt
cli
clc
add
sub
mov
mov
lea
pop
xchg
mov
loop
je
and
cmpsb
lcall
popl
push
cmp
push
ficoml
jle
pop
cmp
fsubrs
sub
mov
icebp
or
dec
dec
xor
rcrb
xchg
es
pop
sbb
sbb
shrl
adc
arpl
es
xor
adc
call
cmp
dec
mov
adc
sub
jno
mov
jo
add
sbb
test
or
dec
pop
subb
xor
cmp
mov
pand
mov
push
mov
dec
xchg
mov
push
faddl
dec
test
sub
jl
daa
addl
mov
arpl
xchg
mov
push
or
adc
pop
xchg
imul
push
cmpsb
fs
sbb
mov
jno
mov
daa
es
aaa
mov
into
add
nop
sbb
adc
jo
sub
je
pop
cmp
jle
sbb
mov
sub
scas
paddsw
xor
push
mov
hlt
jl
rclb
hlt
inc
cmp
dec
mov
repnz
lea
icebp
xor
inc
pop
xchg
jge
into
push
arpl
cmp
xor
jle
xchg
cli
jbe
out
sbb
fwait
aad
dec
lcall
sbb
int
mov
negl
in
mov
mov
and
sub
adcb
mov
push
push
rclb
pusha
inc
fs
aad
pop
insb
or
push
fadds
jns
sbb
shll
shlb
pop
ret
cltd
lahf
or
lret
bound
outsb
adc
leave
add
xor
mov
jae
and
xchg
pop
popf
gs
pop
rcr
sub
push
iret
out
sbb
add
leave
es
lods
fimuls
enter
fcmovu
jo
lret
shr
lcall
push
call
in
dec
inc
or
in
xor
inc
or
shll
pop
and
je
insl
ret
nop
movsb
xchg
cs
sbb
pop
jmp
add
dec
fs
mov
adc
add
xor
int
cmp
pop
imul
push
jle
cmp
stos
adc
sti
test
in
sbb
inc
enter
xor
in
arpl
mov
inc
cltd
jmp
cmpsl
sbb
sahf
jae
dec
jne
adc
mov
xor
pop
dec
nop
adc
es
adc
mov
in
in
ljmp
and
call
lods
aad
lahf
sub
push
pop
pop
fwait
incb
jl
xor
inc
rorb
dec
ljmp
add
pop
popf
fdivrl
jge
rcrb
mov
pop
xor
lods
insb
shll
adcb
sbb
ret
xlat
sbb
stos
sbb
fcoml
mov
push
fisubrl
pop
mov
push
push
sbb
test
mov
sbb
int
ljmp
sub
sbb
mov
imul
aas
daa
xor
pop
pop
sbb
daa
cmp
inc
lahf
ret
fsubs
in
jecxz
ret
dec
sub
xor
xchg
sti
fs
xor
inc
stos
loopne
sti
add
popf
adc
and
adc
gs
mov
in
and
inc
cmp
mov
fistps
loop
ss
and
mov
into
mov
jne,pn
outsl
inc
pop
mov
mov
push
movl
ja
sbb
sub
add
cmpsb
loop
cmp
mov
hlt
push
orl
pop
cmp
sub
aas
ss
shrb
pop
mov
xor
or
mov
sbb
in
cwtl
mov
pop
stos
jnp
out
xlat
or
es
mov
sbb
rcrb
mov
push
and
popf
loope
bound
push
sarl
cmp
std
outsb
js
call
inc
pushf
incb
std
pop
popf
cmp
jbe
out
incb
add
pop
add
dec
dec
roll
bound
jmp
testl
inc
mov
aam
ljmp
popf
or
mov
mov
cmp
movsb
cmpsb
mov
mov
xor
dec
jae
mov
in
fmuls
mov
pop
popa
test
lea
cmp
cmpsb
pop
bound
cld
out
hlt
out
sbb
inc
push
or
movsb
and
jp
sbb
shlb
popa
pusha
push
stos
mov
insb
xor
rol
test
push
fmuls
aam
or
fstl
outsb
leave
jbe
sbb
xchg
aas
push
gs
and
pop
js
xchg
or
mov
data16
xchg
arpl
lahf
repz
mov
ret
adc
js
aam
mov
adc
sub
cltd
push
lods
dec
add
out
mov
movsl
sub
jne
adc
and
mov
jecxz
xlat
cmpsb
shll
jl
xchg
test
lods
call
loopne
stc
lea
sub
inc
sbb
add
in
je
add
mov
arpl
push
cltd
hlt
jl
loop
mov
push
movl
fisttps
mov
push
cmc
stos
mov
adc
cmp
inc
pop
mov
mov
push
stos
insl
ja
add
pop
jb
push
and
xchg
inc
jno
cmp
stc
cmp
inc
xchg
cmpsb
cmpl
push
ret
push
jo
iret
or
repz
xor
ret
sub
cmp
divl
adc
je
stos
mov
cmp
daa
cli
rclb
cmp
or
jmp
inc
and
int3
fisubs
shlb
fsubp
scas
and
adc
daa
dec
mov
ljmp
inc
aam
push
data16
mov
mov
loop
aas
lret
out
xchg
imul
inc
scas
inc
ret
mov
sub
fisttpl
sub
push
xor
ja
into
sbb
out
push
mov
outsl
pop
popf
or
scas
mov
cmp
sbb
and
imul
or
bound
lret
in
je
ja
mov
jo
mov
jecxz
and
aaa
inc
and
inc
rorb
push
xchg
lds
push
lds
cmp
and
jns
pop
std
pop
pop
xlat
pop
cmp
sarb
and
sbb
sbb
scas
mov
xchg
jmp
add
in
sub
negb
xchg
mov
pop
pusha
cmp
cmpb
daa
xor
pop
cld
dec
sbb
cld
add
dec
cltd
mov
jb
fmuls
leave
and
mov
push
push
clc
int
insl
imul
movsl
xchg
jne
sub
xchg
lahf
fwait
std
sbb
xor
adc
mov
cltd
cmp
aas
mov
xchg
enter
push
jnp
jnp
adc
cld
stos
imul
scas
or
fsubr
insb
add
pop
lahf
sub
rorb
xor
or
sub
pop
rclb
test
rclb
clc
sbb
add
fcmovne
fidivs
jmp
jns
jg
xchg
pop
jb
repnz
dec
stos
inc
and
lock
pushf
cmp
add
in
add
add
into
pop
xor
jb
sub
push
jecxz
daa
xor
insb
cwtl
or
fiaddl
jbe
int3
repz
mov
mov
push
pop
scas
test
xchg
inc
mov
jbe
aas
mov
add
xchg
in
jnp
mov
int3
mov
sub
pop
out
icebp
ja
enter
cld
cmp
js
test
mov
pusha
inc
xchg
push
test
jbe
js
in
cli
arpl
inc
dec
mov
pusha
cmpsb
adc
mov
adcl
loope
xchg
sub
cmp
roll
mov
mov
outsl
out
and
cvtps2pi
sbb
sarl
dec
add
jnp
lods
popf
dec
fldt
loop
pop
or
push
or
nop
jg
dec
lahf
mov
inc
push
sub
lea
mov
shr
lret
movsl
ret
dec
xchg
pop
mov
cmpsb
fs
xchg
mov
stos
xor
pop
push
mov
in
cltd
adcb
xor
xor
xor
adc
cmp
pop
shrl
or
into
es
cmpsb
or
imul
or
jnp
cmp
dec
leave
imul
add
pop
xchg
or
pop
jo
mov
pop
or
jge
mov
cmp
das
aas
xchg
loop
data16
std
inc
xor
mov
adc
jle
mov
rclb
pusha
cli
movsb
pusha
daa
xorl
rcl
addr16
cmp
pop
add
in
jb
push
pop
jmp
xor
ret
lret
test
and
bound
inc
jae
mul
loopne
rclb
push
pop
hlt
sbb
jno
lods
sub
pop
adc
sbbb
mov
cmp
leave
std
andb
sub
mov
outsb
int3
hlt
pop
mov
rcl
xor
repz
mov
stos
xchg
movsl
lahf
or
xor
sub
xor
or
ss
mov
mov
test
pop
dec
popf
mov
cmp
stos
mov
push
test
popf
aas
mov
bndldx
ss
movsl
push
fs
aaa
push
mov
xlat
movsl
jo
and
mov
insb
push
out
aam
mov
jg
add
dec
xchg
mov
pop
loop
xor
mov
xlat
xchg
mov
pop
sub
ficoms
int3
lds
mov
adc
je
orb
and
pusha
ds
cltd
mov
xor
iret
pusha
imul
repz
int3
xchg
xchg
out
inc
repz
lock
in
pushf
mov
inc
jg
add
push
sub
inc
int
push
push
push
xchg
or
rorl
dec
cmpsl
jg
sbb
cmp
pop
scas
iret
fwait
and
in
mov
xor
sub
hlt
in
xor
jge
xchg
loopne
movsl
cmp
test
jns
repz
leave
adc
or
pusha
add
es
cmp
sbb
in
sbb
pop
or
loope
popf
add
xchg
push
inc
pop
vmovmskps
sub
push
xchg
jo
andl
dec
roll
add
mov
int3
mov
jp
sub
mov
orb
sub
mov
push
mov
and
sbb
rcl
push
enter
stos
cli
mov
mov
mov
orl
data16
jecxz
test
push
push
lods
outsb
jle
fcomi
sbb
xchg
cltd
and
push
adc
loope
cwtl
pop
out
push
sub
gs
scas
sub
and
mov
jae
xchg
push
jge
icebp
dec
cmpsl
push
dec
sbb
push
scas
ljmp
pop
cmp
addr16
xor
sub
sub
bound
cmp
les
xchg
mov
jge
xor
jle
int3
pop
jb
pop
out
pop
js
out
xchg
xor
and
jb
fcmovb
cmp
add
aaa
and
fnstenv
mov
movsl
faddl
sbb
sbb
push
inc
push
call
mov
add
test
ja
stos
out
aam
cmp
jg
pop
push
inc
int
mov
dec
lods
sti
icebp
and
and
xor
fldt
aas
mov
imul
les
jnp
in
xor
adc
jbe
bound
popa
sahf
test
push
add
xor
mov
lods
dec
and
jg
addr16
shrl
push
insb
mov
in
mov
leave
jp
insb
ljmp
jl
lea
scas
dec
lret
cs
mov
jae
in
or
negb
or
ror
jnp
daa
popa
test
movsb
pop
insl
xor
add
fbstp
repz
push
mov
cld
cmp
jmp
outsl
das
mov
adcb
notl
add
mov
rcrl
adc
inc
je
out
daa
push
ds
lret
pop
jge
daa
rcll
xchg
push
jle
add
and
sbb
cmpb
popf
fwait
int3
pop
push
xchg
xor
lds
std
cmpsb
or
popa
adc
mov
push
mov
daa
lods
pop
pop
loope
into
push
jl
movsb
xchg
aad
ja
stos
adc
push
mov
divb
sbb
xor
cmp
gs
push
movb
adc
imul
pushf
imul
dec
pop
cmp
imul
jle
jp
add
push
jne
cmp
mov
add
or
fadd
mov
test
stc
mov
cmpsb
test
or
jae
in
mov
jae
andb
in
es
fdivl
mov
sbb
cmp
inc
push
push
xor
inc
xor
pushf
mov
pop
push
faddl
lods
std
inc
pop
scas
sarb
ss
hlt
sbb
imul
adc
dec
push
xchg
pop
ja
jecxz
sub
add
dec
outsb
or
lret
dec
arpl
jbe
negb
cltd
call
xorb
int3
or
jle
and
in
xlat
push
cmp
adc
add
fwait
mov
in
fmuls
adc
cltd
mov
addr16
add
or
dec
xchg
mov
les
adcl
test
stc
lcall
push
das
movsl
add
push
cmpsl
sub
or
pop
insl
inc
sbb
add
push
fstpt
cmp
sti
xor
lea
xor
idiv
and
loope
cltd
dec
fwait
movsb
and
jecxz
adc
loope
lods
es
aas
iret
cmc
adc
je
jge
or
data16
stos
or
adc
push
push
clc
lea
xchg
mov
rcrl
mov
push
pushf
adc
pop
sub
dec
shll
hlt
inc
cmp
loop
or
adc
mov
cmp
mov
cs
cli
push
stos
cmpsb
adc
lahf
aad
xor
je
cmp
xchg
dec
sub
dec
jnp
insl
fstl
mov
inc
dec
das
scas
push
xchg
pop
mov
xor
out
pop
insl
jmp
sbb
subb
in
pop
bound
icebp
lahf
xchg
cmpsl
or
mov
addb
and
repnz
add
adc
xchg
add
mov
pusha
xchg
lods
jmp
pop
sahf
fdivs
aad
je
enter
mov
fimuls
je
jno
movsb
and
decl
pop
push
jge
sub
cmp
test
sti
shll
ljmp
adc
bound
jmp
jp
inc
movsl
loop
jle
and
xor
test
scas
mov
aad
or
mov
popa
cli
xor
push
outsb
pop
push
and
sbb
mov
jo
stos
mov
dec
push
xchg
shrl
inc
lret
dec
rcrl
stc
jnp
pop
test
adc
je
push
fs
push
xchg
sahf
pushf
sub
divb
mov
mov
jae
popa
out
mov
or
and
add
push
cmc
aas
adc
xor
push
scas
xor
imul
stos
and
xchg
xlat
ret
shll
inc
jp
add
test
and
jae
xchg
and
stc
xchg
iret
call
cmp
xchg
adc
cmp
inc
dec
add
arpl
xchg
hlt
sub
pop
pop
gs
shlb
nop
mov
mov
push
lcall
push
jmp
fnstcw
inc
or
std
faddl
andb
pop
pusha
jg
rclb
mov
and
xor
push
lock
cs
adc
pop
mov
jne
xchg
nop
or
mov
add
xor
rolb
dec
push
mov
inc
js
je
das
leave
mov
jge
sbb
and
add
push
mov
stos
icebp
fs
rcll
icebp
mov
js
lea
jle
inc
adc
pop
inc
mov
stos
add
push
xchg
out
xchg
into
pop
outsb
mov
pushf
js
push
negl
data16
sub
inc
jbe
adc
xor
iret
cmp
add
mov
addl
and
jo
mov
jg
xor
push
out
dec
les
out
mov
aad
inc
outsl
int
cwtl
sub
mov
rolb
andb
test
lsl
es
and
enter
jecxz
and
pop
loop
js
maxps
shll
pop
cmp
or
xorb
imul
jns
sub
mov
and
inc
jge
loop
and
test
loopne
out
cmovge
out
fmull
imul
cs
xchg
pop
leave
mov
sti
loopne
add
js
aas
shlb
mov
mov
mov
inc
mov
ror
fbld
jp
addps
loope
sbbb
mov
mov
test
dec
ljmp
jnp
pop
mov
dec
insb
and
lahf
adc
or
sarl
es
out
fsubl
enter
pop
cmp
mov
pop
sbb
je
mov
fcompl
sub
add
lret
es
xlat
ret
jno
inc
in
in
dec
and
lds
mov
push
leave
mov
push
cmp
insb
shrb
mov
push
cmpb
mov
cltd
pop
repnz
sbb
sti
sub
sbb
inc
mov
mov
in
adc
inc
outsb
inc
pop
cmc
mov
inc
cmp
outsb
ja
rolb
arpl
push
cmp
and
imul
mov
add
pop
jbe
push
adc
clc
mov
cmp
cmpsb
test
test
sub
aaa
fildl
mov
mov
rcll
icebp
data16
adc
jl
lods
cs
vmovq
loope
cmp
fnsave
xor
jmp
mov
jg
push
leave
pop
cld
jmp
inc
or
and
jmp
daa
movl
loopne
and
jbe
in
nop
lea
push
pop
pop
or
out
daa
movsb
test
test
mov
push
pop
pop
rcl
shl
inc
dec
pop
sbb
or
jmp
addr16
int3
jbe
mov
out
decb
int3
fcoml
lods
push
xor
cmpsl
add
int3
sub
pushf
in
push
add
rcrb
sub
and
arpl
loopne
enter
sbb
gs
push
xchg
test
je
or
int3
xchg
movsb
xor
and
dec
dec
mov
or
jae
lret
or
lahf
sub
mov
frstor
pop
fsubs
incl
test
sbb
lods
adc
xorl
mov
push
gs
movsb
and
cmp
push
xchg
mov
loop
mov
inc
movsb
fsubl
int
int
adc
xchg
xor
pop
mov
pop
or
mov
movsb
test
add
xchg
and
cmp
aad
push
push
sub
cmp
cmpsl
aas
xor
sti
and
gs
mov
repz
popf
xor
jnp
sub
cmp
enter
aam
pop
lds
idiv
mov
cmpsl
test
jae
pop
cmp
push
pop
loop
popa
data16
stos
cwtl
dec
inc
stos
das
pop
loopne
out
imul
mov
inc
mov
jle
push
mov
popa
xchg
xor
inc
das
stc
or
jg
scas
pop
sbb
inc
mov
fists
xchg
popa
cmpsb
mov
imul
cwtl
fdivl
mov
xor
in
push
gs
sub
dec
push
add
push
inc
shlb
hlt
push
popa
or
sahf
movsl
jne
pop
insl
movsl
adc
lods
in
stc
cs
rorl
and
mov
sbb
scas
shll
or
pop
inc
les
sbb
add
mov
add
add
outsl
cld
sbbl
hlt
clc
std
xchg
xchg
dec
gs
daa
jns
push
sbb
mov
call
push
xor
imul
dec
xchg
mov
test
or
jp
inc
pop
mov
mov
lods
cmp
lahf
cmp
cld
mov
js
push
ret
xor
xor
imul
xor
mov
and
jmp
jecxz
enter
push
dec
pop
push
roll
ds
push
ficoms
lods
xchg
sti
aam
dec
sub
adc
movsb
xchg
jb
jmp
cmpsl
or
mov
push
pop
dec
stc
and
sbb
rcll
int
sbb
dec
jmp
and
iret
sbb
mov
add
sbb
sub
orl
mov
cltd
clc
es
add
sahf
xchg
mov
aaa
setbe
mov
mov
movsb
jecxz
add
int
add
imul
cmp
adc
xchg
pop
mov
mov
ljmp
leave
dec
insl
ret
mov
js
les
call
pop
xchg
insl
sbb
mov
and
sbb
dec
mov
ret
sub
xor
push
inc
dec
push
pushf
popf
xchg
ljmp
sub
out
sbb
lock
mov
xor
xchg
lock
mov
sub
dec
pop
sub
test
jg
cli
test
aaa
stc
stos
xchg
or
jb
es
jecxz
repnz
mov
scas
dec
xor
stos
cmp
scas
push
hlt
mov
adc
pop
sub
stc
jno
rcrl
test
inc
push
mov
lea
push
mov
adcl
sahf
shrb
jle
sbb
insl
inc
pop
lar
xor
dec
xor
pushf
mov
mov
or
ss
dec
imulb
enter
insl
orps
lods
jns
sbb
cli
lods
pop
push
insl
repz
pop
decl
mov
insb
xor
push
sbb
out
popf
push
in
xor
scas
jnp
and
sbb
adc
push
push
pop
pop
add
iret
pop
mov
cmp
xor
mov
add
jo
inc
add
and
call
js
call
mov
cmp
mov
add
pushw
psrlq
xor
rorb
jmp
inc
insl
notl
movsb
ljmp
insl
lret
sub
add
hlt
addr16
pop
adc
scas
into
and
lds
sbb
push
add
jo
into
xor
mov
imul
ds
dec
arpl
popa
fidivl
xor
dec
sub
xchg
xor
mov
xor
aaa
or
add
sub
mov
xor
ffree
xor
ret
inc
cmp
fcmovnbe
xlat
xchg
sub
mov
add
dec
jg
addr16
jb
ret
add
in
jecxz
xlat
sbbb
mov
fildll
nop
dec
xchg
pop
dec
cmp
decl
jl
jo
adc
les
in
lret
cs
jnp
mov
pop
insb
mov
xor
int3
jne
adc
sbb
mov
push
jb
dec
fnstcw
movsl
je
fnsave
add
mov
popf
int3
cmpb
and
ljmpw
sbb
into
and
pop
jl
push
test
dec
mov
inc
ss
jmp
mov
or
jge
inc
mov
push
push
mov
adc
test
mov
or
mov
sbb
pop
mov
lret
mov
pop
iret
fcos
cli
sub
pop
insb
push
mov
pop
lock
xor
jl
fwait
or
dec
and
jbe
movd
stc
dec
sbb
adc
scas
pop
repnz
ret
xor
and
inc
mov
fistpll
enter
js
stos
adc
mov
rcl
ret
inc
fnstcw
add
stos
cwtl
test
xor
push
fidivrl
int3
and
les
add
out
arpl
subb
sbb
push
xchg
sbb
std
sbb
inc
lcall
sahf
pop
cmpsl
sub
and
xchg
pop
cmp
inc
add
icebp
jg
fmull
scas
dec
mov
iret
dec
push
cmp
mov
sbb
xor
xchg
rcll
mov
push
rdtsc
pop
lds
sub
aas
arpl
and
shll
outsl
or
jl
jb
cmp
cmp
adc
subb
dec
mov
test
cmp
push
jb
push
dec
incl
or
lds
or
mov
insb
dec
dec
loopne
cwtl
insb
mov
dec
subb
mov
test
ret
leave
mov
jp
and
mov
or
fbstp
or
sbb
rcrb
or
lds
xchg
mov
jecxz
fisttps
outsl
jnp
push
and
mov
push
out
mov
adc
mov
popf
cmp
sub
mov
mov
jmp
in
inc
jnp
push
dec
pushf
mov
test
aaa
enter
in
adc
inc
clc
mov
sbb
and
push
dec
je
xlat
ror
mov
pop
mov
sti
push
inc
outsl
mov
sarb
cmpsl
sbb
sub
and
psubd
mov
outsl
sbb
xchg
rcl
loope
jp
aas
mov
cmp
mov
dec
and
daa
pop
out
mov
add
lcall
add
es
sbb
cmpsl
jne
je
add
dec
and
jno
repz
stos
inc
mov
icebp
pop
bound
enter
or
fistl
jae
cmp
cmp
xchg
scas
pop
mov
mov
cmpsb
adc
lock
sbb
xor
jecxz
fwait
int
jo
adc
or
in
sbb
jb
adc
jne
cs
fnstcw
repnz
loopne
dec
mov
dec
xchg
popf
iret
push
mov
ret
pop
cld
test
inc
mov
push
sahf
add
aas
lods
movsb
sbb
mull
leave
xchg
fnsave
lock
xchg
xor
enter
lret
test
mov
cmpb
add
adc
sbb
rolb
ljmp
nop
add
sbb
jge
xchg
movsb
pop
scas
fidivl
loop
cmpsb
pop
adc
sahf
andb
lods
popf
nop
mov
sbb
test
sti
lret
inc
jge
popf
jg
jge
jae
nop
pop
push
ud1
out
mulb
mov
jnp
push
shlb
mov
push
cmp
sbb
mov
push
es
mov
push
push
cli
xor
sub
cmp
cmp
jmp
lock
pop
dec
lea
jne
jne
sub
mov
lahf
jno
cltd
insl
jb
push
push
into
and
lret
push
cmpsl
xor
jae
lock
lret
sbb
fbstp
sahf
pop
dec
dec
incl
test
sub
xor
stc
adc
push
adc
addr16
nop
lcall
cmp
adc
xor
jl
std
rolb
stc
cmp
nop
dec
cld
mov
cltd
xor
sbbl
xor
fsts
jbe
in
ret
stc
or
adc
test
dec
lcall
dec
sbb
pop
ljmp
scas
xchg
add
fcomp
mov
aaa
sbb
pop
dec
mov
cli
dec
jge,pn
mov
inc
xor
sub
shll
decb
sbb
jmp
cmc
aam
or
xchg
icebp
jg
push
test
and
rolb
fdiv
mov
loop
inc
and
mov
icebp
push
dec
push
insl
or
pop
out
pop
mov
pop
and
cmp
fiaddl
dec
push
orb
pop
push
ret
test
add
scas
mov
adc
or
xchg
sbb
or
push
fisttpl
xor
sub
mov
into
call
fadd
pop
add
mov
repnz
aad
dec
push
notl
fs
pop
adc
and
and
jge
add
xor
sbbl
icebp
pop
mov
xchg
sbb
jp
fcomps
imul
mov
xor
repnz
pop
lahf
xor
enter
insb
push
cmp
jnp
push
dec
jno
sbb
inc
pop
jb
inc
fmuls
test
pop
mov
pusha
mov
cmp
jecxz
mov
xor
pmullw
lods
sbbl
or
pop
stos
call
dec
jg
into
mov
mov
mov
movq
addps
lcall
dec
repnz
orl
push
inc
lret
arpl
out
and
rcll
stos
test
ret
and
in
test
mov
jl
mov
cmc
in
nop
repz
and
inc
sbb
sbb
inc
jno
shlb
mov
stc
jl
ror
pop
inc
add
push
cs
loopne
dec
cmpps
or
shll
jb
ret
movsb
sub
sub
or
bound
out
scas
gs
in
clc
mov
adc
xor
std
jg
xor
outsl
in
lret
inc
push
ljmp
push
cmpl
cmpsl
jo
inc
mov
call
pop
jbe
push
cmp
lods
arpl
pop
insb
push
inc
pushf
mov
test
pop
clc
jbe
popa
pop
add
xchg
mov
adc
push
std
std
mov
mov
movsl
pushl
inc
mov
cs
popa
or
cmc
push
icebp
push
out
cwtl
out
out
xor
das
repz
rolb
aad
jle
stos
xlat
add
ja
sub
ss
mov
pop
jae
cmp
stc
outsb
movsl
mov
cli
arpl
sti
std
pop
imul
pop
dec
add
insb
cmp
outsl
and
sub
add
fsub
add
out
imul
imul
addb
inc
mov
pop
add
pop
sub
repnz
call
push
seto
xor
mov
dec
les
adc
lods
or
xor
add
dec
add
pop
cmp
jl
mov
xchg
mov
or
enter
inc
std
jns
push
sub
popa
leave
decl
negl
xchg
push
addb
pop
jns
pop
add
and
inc
jg
mov
shll
mov
pop
sub
jl
or
mov
mov
push
ja
lods
and
sbb
lods
and
idivl
push
sti
in
or
cmp
xor
lret
push
xchg
pop
pop
stos
xor
xor
push
int3
push
mov
sbb
mov
mov
data16
in
in
data16
lcall
setge
pop
or
shlb
jl
in
ljmp
aad
xchg
mov
shrb
call
fidivrl
lods
dec
in
iret
jmp
ljmp
push
mov
inc
into
imull
jmp
movsl
pop
shlb
mov
xlat
mov
mov
push
fadd
and
mov
cld
repz
dec
dec
hlt
push
push
lret
and
mov
std
pop
push
sahf
xchg
xchg
pop
cmp
or
jmp
pop
nop
mov
jmp
xchg
subb
aas
or
jne
cmpsb
loope
lea
jp
jne
loop
stos
mov
scas
xchg
lods
nop
push
arpl
sub
popf
fcoml
arpl
es
imulb
cli
dec
adc
into
cmp
faddl
jno
xchg
aad
mov
and
fsubrs
or
mov
or
adc
call
fimull
sub
cmp
mov
and
jbe
test
lahf
sahf
rorb
cltd
cmpsl
pop
rcll
in
std
mov
dec
jno
cwtl
in
shll
mov
sbb
pop
sbb
dec
in
scas
sbb
insb
int
cld
popf
out
mov
mov
sub
push
pop
adc
inc
and
sarb
inc
insb
cmp
test
lahf
ss
insl
add
push
sarb
and
jmp
dec
cmp
cwtl
sbb
pop
jno
test
or
mov
stc
cmp
adc
dec
xor
into
and
loope
push
add
ficomps
add
mov
adc
push
in
rcrb
movsb
repnz
cmp
sbb
out
rcll
push
xchg
sub
mov
mov
aad
mov
xor
adc
mov
ss
sub
les
mov
cmc
mov
icebp
fld
cmp
mov
xor
ja
sub
in
movsb
mov
adc
xchg
fisubrs
mov
inc
faddl
in
jge
pop
pop
xchg
pop
add
fstpt
cmp
js
icebp
daa
xor
push
and
push
and
jle
inc
pop
rorb
je
sbb
mov
lock
data16
adc
sbb
ret
popf
out
xor
call
mov
stos
and
push
mov
push
movsb
rcl
pop
outsb
or
mov
in
pop
push
int
push
mov
cmp
xchg
cli
popa
adc
stos
movsl
or
cmpsl
gs
rclb
jecxz
hlt
mov
adc
dec
cmpsl
cmp
dec
mov
psrlq
adc
test
inc
add
inc
push
fwait
cmpb
test
add
inc
sub
loope
mov
inc
jle
fisttps
js
pusha
dec
outsb
test
scas
push
insb
pop
pop
decl
push
sbb
sahf
or
or
cli
cmc
test
xorb
mov
sbb
or
xchg
push
push
repnz
daa
push
and
pop
mov
cmp
xchg
out
loope
or
test
sbb
xor
ficoml
xchg
xchg
loope
push
sahf
cwtl
jmp
add
cmpsb
mov
idivb
add
push
add
addb
fistl
xor
test
pop
shrb
add
shrl
inc
mov
pop
leave
lret
sbb
pop
push
inc
test
dec
push
push
push
jle
xchg
movsl
call
dec
pop
mov
bnd
jae
test
das
fstpl
cld
add
out
sbb
inc
mov
or
push
lds
mov
inc
mov
sub
pop
bound
popf
xchg
cmp
dec
push
je
or
je
popa
iret
je
stos
xlat
dec
xchg
aaa
sbb
pop
xor
sarb
cmp
aaa
xchg
and
xchg
ds
push
insb
sbb
sub
fisttpll
and
iret
add
sbb
rcr
icebp
sbb
jae
dec
mov
jp
lcall
or
in
sbb
mov
push
xor
cmp
and
pusha
shll
mov
es
jle
jmp
imul
cmc
mov
add
xor
push
cmpsl
rcrb
int3
insl
pushf
fbld
mov
dec
add
aad
std
aaa
std
inc
mov
ret
or
push
cmp
cmpsb
ret
fstps
arpl
mov
inc
add
jecxz
fcomip
dec
cmp
mov
test
clc
or
enter
inc
repz
push
dec
jp
movsb
into
cwtl
mov
xor
das
xchg
jp
cmp
mov
in
add
in
add
lock
cld
xchg
ja
adc
idiv
mov
inc
test
out
cmc
and
stc
insl
mov
mov
add
dec
add
dec
mov
push
testl
nop
and
out
adc
lock
xchg
mov
aas
loope
sub
cmpl
dec
mov
add
add
repnz
icebp
and
sbb
pop
enter
xchg
xchg
cwtl
lret
cmp
xor
pop
orb
clc
cs
inc
dec
dec
inc
dec
cli
loope
inc
inc
jmp
mov
out
adc
cli
fxtract
sub
fcmovnb
lods
icebp
mov
pop
fidivl
orb
push
xchg
dec
inc
xor
ja
inc
lds
or
adc
aas
test
xchg
jno
in
mov
xchg
fadds
jecxz
xchg
fisubl
int3
sarb
pop
std
add
push
sub
js
and
ss
push
mov
push
xchg
mov
icebp
out
pop
pop
nop
or
xor
inc
jne
jl
fsubrs
into
push
mov
imul
mov
cmp
xchg
inc
ljmp
movsb
arpl
pusha
push
push
mov
fucomip
aam
adc
bound
jns
insl
orb
rcr
dec
push
dec
xchg
pushf
jbe
or
lret
fmuls
shl
clc
and
mov
pushf
adc
fiaddl
cmp
or
sti
push
mov
iret
sub
out
cmp
jbe
sub
dec
hlt
nop
cli
test
ja
sub
lds
clc
out
xlat
rcrl
push
outsl
js
jmp
mov
shrl
ret
bound
out
jb
jl
jmp
outsl
out
and
add
cmp
mov
xchg
popa
sbb
arpl
xor
inc
js
out
js
inc
out
mov
in
cmpsb
into
sub
add
mov
cwtl
pop
push
nop
xchg
pushf
mov
sbb
in
data16
ja
in
push
inc
mov
jns
clc
xor
inc
notl
mov
mov
xchg
mov
hlt
adc
cwtl
ret
lock
lcall
enter
stc
mov
orl
push
sti
scas
test
fsubrl
fbstp
push
pushf
pop
sbb
adc
mov
rorb
push
loop
aas
leave
mov
cmp
lods
movsl
repz
lds
lea
cltd
bound
test
mov
sub
daa
adc
adc
ret
rcl
mov
out
imul
inc
cwtl
mov
fildll
std
js
mov
ljmp
out
pop
jne
insb
dec
push
mov
pop
inc
lea
mov
pop
outsl
cmp
bnd
ficoms
mov
dec
insl
mov
popa
test
fsubl
mov
pop
adc
leave
movl
stos
ljmp
dec
inc
into
jl
negl
inc
lock
sub
push
cmp
jo
xchg
xchg
fwait
outsl
inc
push
leave
push
std
xor
je
or
xchg
bound
and
jbe
loope
mov
stos
dec
or
mov
adc
xor
rcl
cmpsl
rcl
dec
push
adc
add
pop
pop
sbb
or
mov
popf
push
push
sub
inc
int
sub
jp
in
loopne
js
add
ljmp
jp
cmpb
fcomp
mov
scas
xchg
xchg
add
add
ret
outsb
xor
jnp
movsb
xchg
jl
lcall
jne
mov
jae
rorl
into
in
add
sub
rcrb
xorl
mov
mov
lahf
ror
movsb
pop
dec
push
mov
xchg
loope
and
xchg
movsb
repnz
jnp
ljmp
mov
pop
jns
mov
xchg
sub
pushf
imul
push
mov
mov
and
cld
xor
cmp
fldcw
outsl
fucom
cmp
push
rcl
shrl
mov
pop
or
popf
jns
sub
lods
adc
xor
pop
or
push
cmp
or
arpl
ds
mov
jne
insb
pop
push
cltd
xor
ljmp
test
test
xchg
dec
xor
cs
jecxz
jno
cmpsb
mov
xchg
or
je
xor
outsb
ljmp
aam
enter
and
shll
sub
scas
pop
scas
jb
test
addb
mov
ja
pop
xchg
daa
idivb
cltd
xor
fiaddl
mov
push
aad
mov
pushf
mov
pop
mov
and
pusha
lcall
adc
pop
insb
scas
push
push
subl
out
mov
ljmp
test
mov
xchg
xchg
mov
dec
stos
lret
adc
mov
out
jnp
stos
inc
inc
xchg
rcrl
loopne
push
jo,pt
int
movsl
cmp
push
and
lods
mov
and
sub
mov
add
inc
mov
pop
mov
mov
sbb
and
or
ds
in
sub
scas
mov
sarl
aad
out
pushf
add
in
jmp
call
sbb
xchg
fstpt
imul
rcll
xchg
and
lret
pushf
push
push
adc
dec
ret
sbb
nop
stos
addl
cmp
sti
inc
fidivrl
push
jns
xchg
repnz
ret
add
shll
cmc
mov
ficoml
inc
mov
mov
xor
nop
adc
jge
mov
add
mov
in
ja
popf
mov
adcl
adc
nop
ja
fisubs
jnp
mov
movzwl
fildl
dec
lahf
jae
hlt
dec
into
pop
lret
in
inc
sub
mov
in
cmp
sti
sbb
dec
sub
adc
jmp
or
in
jnp
mov
mov
xchg
sbb
movsb
pusha
cmp
fcmovnu
push
sti
cmp
mov
out
jle
push
ja
les
mov
gs
enter
rcr
lret
test
fstl
mov
lret
add
pop
lods
pop
mov
in
inc
or
loopne
lcall
pop
mov
cmp
xor
push
cmpsb
jae
pop
mov
out
pop
outsb
push
popa
xchg
mov
dec
inc
mov
jg
cs
push
add
js
fildll
fists
inc
loopne
fwait
clc
sub
xchg
push
mov
cmc
mov
insl
test
arpl
enter
and
adc
jne
adc
pop
fnstcw
fidivrl
lcall
pop
cltd
repnz
and
or
insl
movsb
mov
adc
mov
xchg
orb
int3
dec
rcrb
movsl
in
push
ja
adc
rclb
mov
cmpsl
test
dec
ror
sahf
cli
roll
into
insl
and
lcall
xor
test
in
cmpl
adc
iret
cmp
popf
aaa
xchg
insl
add
pop
push
daa
mov
mov
lret
ja
cmp
out
push
sub
fbstp
and
shl
mov
fnstsw
add
xor
pop
push
loope
sti
insb
cltd
sub
rolb
movsb
call
data16
stos
mov
jg
cmpsb
out
adc
scas
gs
imul
inc
cmp
aas
movsl
push
mov
pop
jge
add
rorb
outsb
adc
cwtl
sub
dec
inc
sub
nop
dec
movsl
dec
test
mov
mov
xchg
sahf
and
inc
fsubs
push
jb
rcl
rolb
jg
dec
xchg
xchg
add
in
lds
jae
jnp
mov
les
lods
or
cwtl
fs
xchg
test
pop
je
ret
or
xchg
jge
or
leave
xchg
loopne
aas
and
cmpb
ror
or
jge
xor
test
mov
cmp
jl
cmpsb
out
leave
sbb
gs
mov
pop
stos
aam
negl
xor
sub
mov
icebp
scas
push
add
test
add
aam
or
aas
in
and
or
mov
jl
adc
add
shr
pop
and
mov
and
sbb
fstpt
sub
xor
mov
cmc
aad
pop
inc
mov
fiaddl
inc
out
cmp
aam
call
sti
push
pop
push
pushf
fidivrl
fdivrs
sub
adc
push
fldl
or
lea
stos
pop
sub
or
arpl
repnz
lcall
xchg
mov
fs
cmp
xchg
movsb
in
push
stos
test
mov
movsl
mov
mov
lea
jno
f2xm1
dec
add
mov
push
pop
or
push
lock
cmpb
sbb
movsl
xchg
insl
pop
push
test
mov
int3
out
mov
ljmp
push
adc
jmp
movsl
shll
lea
push
andb
dec
jns
mov
rolb
xor
dec
cmp
in
mov
xchg
and
dec
xchg
pusha
aam
mov
movsl
dec
cmp
xchg
lock
cs
rorb
sbb
ljmp
popa
ret
flds
jnp
push
movsb
jae
push
scas
mov
sub
push
mov
shl
int
mov
pop
fistpl
loop
andl
loopne
mov
mov
subb
jnp
or
out
outsb
test
mov
xor
jbe
in
fst
fdivr
loop
adc
jno
adc
test
jge
in
xor
jo
jp
push
or
pop
adc
in
ds
jo
cli
in
pop
lcall
jne
mov
mov
push
ret
dec
dec
inc
popf
push
sbb
and
loop
cmpsb
dec
push
addr16
xor
fmull
jl
in
or
pop
mov
mov
pmaddwd
or
adc
push
or
in
mov
iret
push
push
cli
push
and
sub
out
jo
lcall
add
and
add
test
lods
into
popf
in
cltd
or
popa
lods
mov
test
and
jns
cltd
js
jns
pinsrw
mov
shll
enter
mov
cmc
aam
fisubrl
push
das
mov
adc
sub
pusha
mov
jge
test
fiaddl
push
push
fldt
and
sub
push
shr
jg
pop
sbbl
enter
test
data16
in
arpl
jge
mov
mov
sub
add
cmp
xor
and
mov
xor
inc
loop
jmp
ret
mov
pop
testb
cmpl
mov
xor
stc
push
mov
or
je
hlt
and
dec
mov
mov
and
push
ret
data16
lret
mov
sahf
loop
jno
cmp
inc
add
mov
sbbl
dec
rcr
lods
cwtl
push
pop
mov
cmc
scas
inc
pop
xor
aad
xchg
aad
mov
popf
sbb
or
lret
imulb
adc
xchg
in
ficomps
int3
sub
iret
scas
pop
xchg
in
imul
jnp
mov
pop
arpl
jae
mov
mov
jl
out
push
aaa
icebp
out
arpl
jb
ja
cmp
leave
iret
inc
push
xor
test
mov
test
or
inc
cmp
stos
or
es
sub
sbb
mov
cmp
sahf
jo
inc
pop
lods
lods
cmp
fmuls
adc
mov
add
xchg
lret
mov
mov
hlt
jle
out
dec
imul
imul
repnz
adc
outsl
movb
jmp
cmp
push
inc
inc
jmp
xchg
and
in
sbb
sbb
cmp
mov
adc
test
or
pop
add
dec
mov
push
push
int
in
mov
pop
push
scas
pushf
imul
ss
ds
gs
sub
xchg
and
lret
sbb
xchg
or
mov
dec
mov
fdivrl
mov
add
xor
std
cli
xchg
in
adc
xchg
mov
shll
out
in
pop
and
jmp
outsb
iret
push
inc
mov
nop
sbb
lcall
dec
pop
mov
test
shlb
clc
mov
sbb
aad
cli
pop
bound
mov
call
mov
iret
clc
cmp
stos
into
fst
pop
orl
mov
js
add
in
xchg
mov
call
iret
or
push
lods
xor
shll
mov
jns
add
mov
scas
mov
mov
ss
push
pop
push
sub
insl
gs
xorb
xchg
gs
inc
rep
jbe
lcall
rcll
pop
pop
clc
jp
push
push
adc
aad
cmp
sbb
or
fidivl
push
mov
icebp
repnz
xor
xchg
sahf
sub
scas
in
mov
dec
lock
iret
xorb
cmpsl
out
jecxz
daa
sbb
fs
adc
add
push
ficompl
ret
pusha
lods
lods
icebp
sub
add
in
test
add
std
insl
mov
sub
leave
movsl
pop
mov
mov
lock
add
mov
ljmp
cmc
pop
div
adc
out
nop
lcall
lock
test
fstps
shlb
jp
ds
sbb
movsb
jge
sbb
lods
inc
adc
adc
aas
push
push
movsb
xor
idiv
ljmp
sarb
or
jo
sbb
fwait
jge
cli
into
test
xor
pushf
pop
or
fwait
and
cli
mov
lret
push
adc
jg
cmp
jbe
addr16
add
jo
rcrb
adc
cmp
adc
je
loopne
jp
push
sti
jb
cmp
push
jg
mov
mov
in
aad
pusha
jns
fwait
sbb
je
mull
fcoml
shrl
dec
jne
inc
jmp
and
jg
lds
shll
push
add
push
cmp
inc
xchg
lret
subb
cltd
fcomip
inc
push
icebp
dec
push
push
dec
xorb
sbb
lret
cmpsl
leave
dec
push
es
inc
icebp
xor
or
outsl
pop
aad
bound
ja
xor
or
inc
jbe
add
xor
in
pusha
dec
scas
rcll
mov
daa
and
inc
dec
adc
push
inc
xor
lods
sub
adc
mov
xchg
ljmp
push
mov
div
add
mov
dec
dec
test
into
test
cmp
cs
inc
adc
jle
lret
jbe
test
je
nop
fs
or
imul
add
dec
scas
mov
das
lds
lea
jmp
adc
and
dec
fiaddl
push
imul
mov
fwait
or
mov
mov
xchg
cld
in
ljmp
lds
sub
popa
pop
ss
adc
pusha
ror
and
dec
dec
dec
mov
inc
rcrb
sub
jb
push
ret
dec
pop
pop
in
push
push
cmp
shll
dec
jae
jns
mov
ljmp
scas
mov
rcrl
xor
dec
mov
or
movsl
cmp
sub
rcrl
fwait
pop
lret
aaa
adc
out
jmp
outsb
sub
call
add
push
sbb
pop
inc
fmuls
ss
insb
repnz
jle
imul
in
js
test
sub
scas
enter
jnp
outsb
lds
test
fcoml
jmp
adcb
hlt
mov
mov
or
fnstsw
mov
outsb
jne
and
outsl
dec
stos
pop
pop
dec
xchg
test
aaa
in
xchg
cmpsl
rclb
int3
jecxz
orl
pusha
cmp
lahf
push
adc
push
xchg
mov
xchg
cmc
repz
movsb
xchg
sbb
data16
mov
push
je
jnp
lock
xor
loopne
mov
js
sbb
cmp
push
xchg
add
ja
sbb
sub
push
mov
rorl
ret
or
lods
cli
cmp
mov
in
sahf
adc
mov
push
enter
jae
in
sbb
inc
into
cmc
mov
push
or
add
mov
xchg
and
and
les
jne
and
jl
bound
jbe
xor
push
sbb
aaa
push
test
mov
fldl
aam
ficompl
jnp
cwtl
lods
fcoms
jne
add
mov
sbb
mov
shll
sbb
cli
push
mov
gs
fldl
inc
xchg
jle
add
mov
and
outsb
xchg
mov
cwtl
in
push
hlt
adc
sbb
inc
dec
scas
adc
out
adc
mov
mov
push
popf
pushf
sti
jns,pt
add
fildl
lahf
adc
imul
cmpsb
hlt
jns
shl
push
into
fistpl
mov
jb
push
sub
or
ja
andb
test
push
xchg
lcall
ss
pop
sbb
dec
cmp
mov
mov
pop
push
sahf
or
fisubl
nop
fwait
jl
repz
pop
scas
dec
cltd
pop
out
cwtl
scas
sub
adc
and
push
adc
repz
and
loop
mov
push
std
inc
ja
cs
sub
add
sbb
jmp
push
pop
fsubl
rorl
out
ljmp
and
xchg
ficoms
xor
jge
and
pusha
popa
repz
push
xlat
xor
stc
push
jle
inc
jmp
inc
and
inc
roll
pop
nop
jbe
in
jmp
insb
pop
les
pop
lcall
add
sbb
mov
mov
andps
imul
dec
pop
adc
lods
push
aam
inc
lret
lret
movsl
mov
fprem
hlt
xchg
cwtl
pop
jmp
mov
sahf
add
add
xchg
and
mul
jbe
hlt
rorb
arpl
pop
pop
data16
pop
or
cmp
xchg
mov
mov
pop
subl
dec
rclb
push
in
mov
sti
xchg
shlb
pusha
add
movsl
aad
adc
nop
mov
ret
cltd
hlt
mov
cmp
sub
leave
popf
insl
and
jp
push
jne
cmp
fisubs
lret
mov
sub
rorb
dec
mov
neg
mov
cltd
dec
or
int
std
gs
push
lock
subb
leave
aas
in
jmp
fs
jno
arpl
insl
xor
jg
iret
pushf
daa
mov
add
cmpsb
mov
mov
pop
out
test
fwait
popa
ljmp
inc
jmp
shrl
sbb
in
scas
lahf
aaa
sbb
clc
orb
fsubrs
leave
sahf
icebp
dec
push
mov
mov
sbbb
loop
and
or
arpl
sarl
cmp
xor
add
fcoml
inc
push
mov
push
daa
dec
push
outsb
subb
cli
ret
int3
das
or
adc
lock
jl
adcb
adc
into
sbb
cmp
stos
aaa
pusha
enter
adc
mov
push
into
stos
jno
xchg
aaa
pushf
dec
mov
mov
stc
sub
or
ret
and
test
xchg
ds
pop
xchg
cwtl
adc
sahf
add
hlt
shrb
sbb
pop
iret
dec
push
scas
popa
mov
push
xchg
les
addl
clc
fistpl
mov
or
lret
mov
rolb
out
adc
sub
ds
lods
inc
push
daa
repz
aaa
mov
lahf
mov
stos
iret
add
mov
aam
jnp
sbbb
jp
insl
inc
mov
mov
add
and
pop
lahf
fs
hlt
mov
pop
ret
movsl
std
stos
jo
iret
pop
xchg
jmp
add
fistpl
fwait
cld
jmp
sub
movsb
sbb
test
push
jae
std
pop
cmp
add
inc
inc
add
arpl
adc
add
stos
ret
xor
jae
outsb
and
addb
outsb
inc
bound
gs
imul
inc
and
fcomps
xchg
xlat
inc
xchg
shll
mov
leave
jle
je
jae
repnz
sbb
xor
pop
nop
push
xchg
lcall
lret
mov
in
lea
add
add
pop
sbb
mov
jmp
rcrl
testl
cli
mov
inc
es
into
bound
ss
push
mov
adc
push
push
rol
lea
mov
cmp
mov
pop
int3
movsl
sbb
popf
xchg
aad
push
push
pushl
push
stc
fimull
out
clc
inc
mov
aad
scas
xchg
outsl
cwtl
cmp
adc
cmp
sub
pop
adc
push
es
xchg
dec
sahf
add
inc
test
mov
push
mov
les
int3
pop
fimuls
outsl
in
mov
xchg
fcompl
cwtl
leave
aam
in
test
xchg
and
mov
test
out
setne
clc
je
movsl
xchg
int
xchg
mov
aaa
mov
fwait
ss
js
sub
jne
insb
ljmp
inc
cmp
in
jl
adc
jbe
xor
xor
fildl
sti
scas
dec
lahf
pushf
jno
rcll
popa
int3
adc
bound
ljmp
sub
stc
sub
jmp
push
loop
call
xchg
int
cmpsb
lods
jnp
sub
in
xchg
out
mov
jge
cmp
or
pop
dec
xchg
fsubrl
push
xor
insb
and
sub
mov
ret
iret
jge
aad
stos
jne
pop
lcall
ljmp
outsl
in
jae
push
fcmovb
mov
ficoml
cs
insl
push
and
mov
std
iret
sub
fistps
mov
out
xor
xchg
movsb
ja
xor
shll
mov
pop
add
test
sbb
pop
sub
mov
repnz
mov
out
in
aas
sub
xchg
mov
fisubl
pop
add
inc
sti
stos
out
scas
and
add
leave
imul
or
dec
popa
cmp
xchg
movsl
insl
fwait
stos
xchg
xor
loop
cmp
mov
xor
dec
insb
loop
and
inc
mov
xchg
adc
pop
arpl
and
lahf
sbb
xlat
lret
mov
xor
cmc
clc
dec
cli
jl
sub
jecxz
fistpll
hlt
jnp
lret
mov
in
mov
out
inc
icebp
fisubrl
dec
imull
mov
inc
or
fidivl
lds
fxtract
psubsb
mov
adc
push
jecxz
aaa
data16
pop
mov
lahf
gs
out
ret
add
pop
lock
adc
sbb
add
and
adc
not
cmp
int
inc
xchg
xor
or
adc
adc
jecxz
insb
sbb
call
imul
aas
mov
jne
add
fsts
mov
insb
cmp
cmpsb
and
inc
and
jge
xchg
xor
ss
mov
sub
testl
popf
jb
pop
rcrl
popf
inc
adcb
bound
sub
jle
shll
jne
xchg
jbe
outsb
dec
or
adc
fldcw
cmpsb
sub
mov
mov
aad
ret
out
inc
sbb
fs
rolb
mov
stc
push
push
cmpsb
scas
lods
xchg
in
add
mov
call
jno
cmp
xchg
rcrb
mov
aad
insb
arpl
dec
cltd
adcb
ds
sbb
rep
mov
pop
fwait
nop
pop
pop
inc
and
ljmp
call
inc
clc
icebp
arpl
insl
jae
cmpsb
push
insl
jno
sbb
pop
inc
cmp
cmc
mov
loope
imul
push
jle
fcmovb
pop
pop
bound
cmp
push
les
inc
push
xchg
xor
pop
push
jg
adc
nop
ret
add
scas
shrl
push
arpl
popa
inc
sbbl
xor
lahf
pop
push
loop
xchg
jb
enter
mov
pop
fisttpll
jmp
fildll
adc
rcrb
lock
out
push
outsb
jle
jns
out
ds
mov
mov
cli
dec
and
lods
or
fists
cld
cmpsl
pop
lcall
pop
icebp
loop
xor
cmpsl
jae
mov
jg
mov
and
inc
mov
clc
mov
test
pop
ss
pop
and
sahf
gs
pop
int
sbb
push
loope
cmp
int3
inc
in
jne
fs
test
inc
xchg
pusha
push
push
loope
dec
addl
int3
sbb
lock
mov
xor
sub
jb
popa
call
daa
pop
std
add
loope,pn
push
cs
lea
mov
add
loopne
fstl
lret
mov
outsb
shr
ret
out
out
xor
aaa
outsb
je
insl
dec
jmp
daa
mov
fisubl
popf
sbb
xor
add
pop
pop
dec
dec
push
jae
scas
or
xorb
xlat
movsb
aad
sub
xchg
pop
icebp
lret
test
push
iret
stos
orb
nop
adc
dec
push
sub
jecxz
sbb
mov
add
xchg
add
js
pop
std
sub
mov
mov
mov
cmc
pushf
add
out
mov
sahf
push
jp
inc
ret
inc
add
jge
adc
stos
cmp
adc
cmpl
call
and
pop
cld
jb
jle
jbe
fs
xor
cmp
nop
or
mov
ret
daa
add
sahf
shrb
and
mov
hlt
pop
push
mov
rorl
fwait
adc
add
mov
into
jno
test
ficomps
test
xor
dec
jb
iret
test
jne
ja
pop
repnz
dec
stc
aam
push
gs
test
test
push
ss
subb
rcll
shll
adc
inc
int
xchg
mov
push
lahf
jmp
stos
jno
das
pop
enter
mov
lods
add
push
mov
test
fdivs
sbb
mov
xor
cmp
jmp
fnstcw
xlat
xor
xchg
popa
enter
mov
xchg
sbb
jp
sbb
push
call
sbb
mov
xlat
mov
negl
cmp
jle
mov
inc
pop
jmp
mov
arpl
or
popf
enter
push
ror
and
mov
mov
popa
jmp
movb
push
insl
insl
lret
imul
xchg
add
lret
mov
inc
mov
inc
and
mov
mov
fmulp
cmp
std
xor
hlt
cltd
or
push
push
popf
pushf
jns
repnz
sub
inc
in
lcall
leave
stos
sbbb
cltd
stc
gs
push
lods
jl
sub
std
in
flds
lods
pop
mov
mov
pusha
push
cmp
cmp
push
xchg
call
ss
ljmp
pop
xchg
xchg
jo
cmp
out
pop
lret
add
int3
pop
pop
pop
testl
mov
jg,pn
lds
mov
out
sbb
and
mov
cmp
pop
dec
mov
inc
push
pop
push
mov
sahf
std
mov
cmp
pop
xor
icebp
sub
aam
sbb
lds
and
cmp
push
aad
movsb
lcall
jns
cwtl
jmp
leave
sub
or
add
insb
mov
xchg
lcall
icebp
test
push
call
idivb
out
roll
shll
mov
aam
or
fs
add
push
jg
pop
push
lret
add
jecxz
or
ljmp
cmp
scas
jge
xchg
sahf
xchg
fcoms
mov
inc
mov
lahf
pop
jle
in
jle
jge
push
fisubs
imul
add
inc
mov
push
cli
xor
or
fwait
dec
fs
in
push
xchg
inc
repnz
aam
into
ret
mov
call
test
push
lea
push
mov
inc
roll
mov
popf
jnp
in
addr16
mov
into
mov
jbe
mov
out
push
mov
daa
and
xchg
add
jo
jecxz
rolw
je
inc
and
ja
inc
adc
in
dec
fwait
aam
shrl
aad
push
dec
pop
push
mov
out
fistpll
and
dec
pop
hlt
push
jnp
lods
rorb
sti
adc
out
repnz
mov
add
les
fdivrl
fwait
les
cmp
xchg
leave
call
sarl
jae
mov
xor
cmp
xor
adc
repnz
lcall
idivb
icebp
sbb
movsb
in
dec
in
les
adc
daa
mov
or
stos
fucomi
add
js
inc
icebp
mov
mov
out
cmpsb
dec
sahf
in
test
push
mov
xor
push
xchg
lock
ja
sub
mov
cmp
add
adc
aas
lds
mov
cmp
mov
jl
mov
dec
lods
xchg
push
sub
sub
lcall
insb
js
add
jmp
lcall
xchg
cwtl
dec
je
or
sbb
mov
stos
mov
lods
push
cmpl
jecxz
cmpsl
mov
mov
insb
pop
mov
jo
stc
push
outsl
notl
aam
mov
inc
ret
scas
popf
roll
mov
int
cmpsb
aaa
into
sbb
aaa
push
inc
adc
sub
addl
call
sub
mov
or
push
popa
dec
pop
les
push
lret
sbb
adc
adc
dec
idivl
fwait
test
mov
push
out
popf
or
popf
sub
adc
popa
data16
inc
inc
xor
xchg
cmpsb
mov
data16
sub
mov
shlb
mov
pop
mov
sbb
and
xor
out
mov
jp
int3
jl
jmp
nop
jmp
fsubl
sbb
push
leave
pusha
clc
enter
dec
mov
add
cmp
xchg
cld
popa
repnz
inc
outsb
sub
and
rol
adc
jbe
dec
cmp
pop
jo
pop
outsl
loope
rcll
jle
xchg
jns
test
insl
scas
in
dec
ja
fists
insl
mov
pop
iret
jecxz
daa
mov
addb
xchg
ret
mov
xor
xlat
mov
clc
xor
pop
add
ret
loopne
scas
int3
xlat
xadd
add
dec
push
sub
out
lret
in
setbe
pop
ja
divps
xchg
or
cli
sti
cmp
insb
jne
test
push
push
mov
sbb
enter
or
aam
outsl
adc
jge
lcall
dec
push
mov
inc
xor
mov
lret
jbe
jle
mov
mov
jne
or
popf
push
cmp
push
sar
outsl
fcoms
add
xchg
ss
call
and
xchg
mov
push
sahf
in
rclb
iret
push
xchg
push
in
sub
shll
hlt
inc
adc
mov
sub
fiadds
and
adc
loope
xchg
pop
in
mov
inc
fcomi
mov
out
lcall
xorl
sti
es
out
sub
sbb
ljmp
jp
pusha
test
push
inc
scas
lcall
mov
imul
cli
hlt
xor
xchg
inc
outsl
push
lods
lcall
xlat
in
in
mov
push
mov
lret
rorl
ficompl
imul
pop
inc
mov
aaa
aaa
adc
cmpsl
cltd
sbb
fiadds
sti
jg
jmp
imul
repz
loopne
sbbl
mov
sbb
inc
pop
pop
sti
ror
adc
jne
mov
int
or
sbb
fwait
mov
out
scas
repz
mov
es
push
hlt
mov
pop
push
mov
push
loop
into
psubq
add
das
sub
sbb
mov
lcall
enter
les
push
jmp
dec
inc
or
icebp
push
fldcw
pop
mov
mov
sarl
pop
push
hlt
inc
and
and
sahf
negl
mov
add
scas
jg
loope
jbe
pop
lss
loopne
loop
andb
dec
es
insl
xor
or
xor
ljmp
int
lcall
das
out
cltd
mov
adc
sub
mov
pushl
lcall
push
push
or
daa
jae
add
jns
sbb
rorb
ds
loopne
stc
lret
lock
insb
lret
sub
inc
sub
add
das
rol
arpl
xor
adc
push
sbbl
jnp
mov
cld
loope
mov
mov
in
mov
dec
jmp
insl
inc
shrb
int
cli
ds
cmp
dec
and
push
jp
jo
xchg
movsl
fidivs
daa
clc
subl
mov
outsl
jns
fdivrl
js
add
mov
jne
daa
jns
loop
movsl
pop
cmp
fstpl
pop
cli
sbb
dec
leave
iret
jmp
in
sahf
cmp
mov
xchg
cmc
mov
mov
push
addr16
push
xchg
movsl
fbstp
pop
sahf
xor
adc
mov
fs
push
inc
imul
push
sub
cmpl
pop
jae
and
std
mov
xchg
fs
pop
inc
mov
mov
mov
push
push
mov
nop
lahf
das
lea
cli
movsb
add
adc
jno
outsl
pop
mov
pop
xor
ljmp
mov
cmp
hlt
loope
add
pop
pop
fsubp
mov
stos
add
loope
lahf
ja
and
lods
adc
xor
rorl
xchg
push
sbb
fmulp
mov
pop
pop
ja
sub
ds
scas
ja
cmp
cmp
fs
xor
adc
les
pop
inc
and
inc
lea
jo
pop
mov
pop
decl
shl
pop
jecxz
add
ret
cmpb
mov
inc
jnp
xchg
into
cmpsb
pop
negb
mov
into
sub
popa
inc
cmp
sbb
out
repnz
cmp
mov
mov
sbb
mov
xor
xchg
icebp
or
mov
mov
push
mov
and
repz
mov
movsl
fwait
or
pop
fisttpl
fdivrp
fadd
outsl
push
and
inc
imul
ficoms
aam
or
add
jmp
test
shlb
or
enterw
and
notl
xchg
push
mov
mov
mov
testb
loop
xchg
pusha
push
sub
imul
scas
or
pop
aaa
mov
xchg
pop
jne
push
mov
or
lock
scas
pop
xchg
movsl
inc
add
push
ret
mov
adc
lahf
add
push
ja
popf
scas
sarb
lods
or
sahf
movsb
inc
add
xor
popf
mov
int
in
lret
adc
stos
cmp
cmp
adc
in
fprem1
sbb
jne
push
push
test
imul
dec
lods
jl
fisubrs
xchg
inc
add
or
jge
std
jecxz
mov
clc
shll
stc
push
test
inc
mov
hlt
int
mov
out
stos
mov
dec
mov
pop
cs
mov
in
adc
lret
or
out
sbb
mov
jmp
hlt
push
xlat
add
adc
loopne
outsb
or
ds
mov
push
out
push
stos
push
push
sub
push
dec
add
inc
push
inc
stos
push
mov
mov
sub
fcmovb
insb
jne
cmp
jbe
cs
lret
mov
fisttpl
mov
nop
mov
add
rorl
mov
pushw
lret
mov
rorl
or
pop
addr16
push
add
dec
adc
jbe
adc
rclb
jmp
insl
imul
jnp
sub
in
dec
stos
jne
cmpsb
inc
rolb
mov
out
or
adc
push
lret
and
jp
jmp
fdivl
pop
or
and
call
sbb
mov
and
iret
push
push
icebp
sbb
push
push
mov
sahf
lock
inc
sub
fcoms
divb
scas
nop
sahf
inc
jnp
mov
jns
mov
jg
sub
jmpw
out
imul
xor
js
in
mov
mov
mov
xchg
jne
clc
xchg
jle
jl
xchg
sahf
cmpsb
dec
push
ret
in
xlat
mov
dec
sbb
inc
aaa
cli
sarl
enter
dec
imul
stos
hlt
pop
fwait
fs
incb
sub
sbb
mov
cmp
push
es
lock
dec
insl
fwait
mov
int3
push
pusha
je
inc
xor
sahf
clc
add
ret
mov
cmp
scas
mov
aaa
pusha
iret
fisubrs
cld
or
scas
xor
xchg
add
cs
push
test
cmpsb
out
cmp
jge
inc
clc
out
mov
in
ds
gs
and
ret
nop
mov
fcmovnb
sbb
aad
push
jno
lods
shl
aad
cmpsb
push
mov
xor
pop
adc
or
div
or
mov
push
or
cmp
shrb
std
lret
in
sbb
out
mov
lret
sub
ret
mov
lods
pop
xor
jbe
loope
loop
test
test
cmpsb
aam
mov
adc
mov
and
cmpsb
sbb
dec
repnz
inc
jge
or
fnstsw
les
dec
les
stc
pop
bound
mov
cmp
xorb
fdivr
mov
xor
arpl
pop
sahf
cmp
outsb
inc
int
push
gs
lcall
movsb
push
insb
xor
add
fimuls
inc
jmp
adc
jb
leave
or
sub
or
addr16
in
add
xchg
mov
and
and
mov
mov
into
out
in
mov
mov
out
test
push
es
mov
lret
and
and
sbb
stos
fwait
movsb
pop
cltd
adc
jno
shl
push
xchg
lcall
andb
xchg
or
ds
rorl
in
or
sub
push
lods
test
scas
shll
lahf
jbe
xchg
jb
push
add
pop
push
sub
jge
xor
dec
pushf
bound
push
adc
push
enter
imul
ljmp
sub
repnz
shlb
mov
add
inc
scas
push
popf
daa
xchg
les
sub
aaa
ss
xor
shll
outsb
pop
cmp
lock
lock
sti
jno
imul
enter
loopne
sub
in
les
mov
cmp
out
in
mov
lods
fsubrs
fbld
jbe
outsl
sub
shrl
or
fistpl
push
or
je
xchg
fsubrp
jecxz
sub
inc
dec
lahf
xchg
add
rcrb
mov
xchg
vmread
and
in
sub
scas
lret
jo
sbb
mov
mov
jae
push
push
mov
mov
jns
xor
and
sbb
lahf
dec
xor
inc
xchg
add
cmp
dec
sbb
adc
in
add
enter
jne
bnd
ds
mov
repnz
or
std
outsb
repz
fisubrl
and
xor
mov
in
outsb
dec
jg
fldenv
add
inc
sub
mov
mov
rcll
pop
xchg
fsub
xchg
push
xor
sub
and
dec
push
leave
and
outsb
mov
es
mov
sbb
mov
mov
sbb
int
mull
cld
sbb
into
jle
mov
inc
push
sahf
in
xor
mov
mov
addb
mov
rorl
add
jo
mov
imul
sub
lea
cltd
xchg
jmp
xor
sti
data16
adc
adc
leave
into
popf
xchg
push
cld
std
mov
lds
shrb
jae
mov
pop
lahf
sti
add
push
adc
xor
xchg
cmp
inc
in
lods
sub
js
and
push
jg
pop
loopne
clc
lret
mov
mov
add
call
enter
rcrl
or
ljmp
cmp
pushl
fnstcw
mov
dec
leave
adc
sub
repz
add
sbb
repnz
cli
sbb
leave
adc
addr16
xchg
popa
fdivrl
add
ficompl
mul
test
rcr
sbb
xchg
icebp
jbe
dec
push
mov
test
call
mov
outsl
mov
xchg
je
push
aas
add
pushf
jnp
push
lret
mov
out
popf
add
and
imul
and
or
jp
test
adc
ret
sbb
jae
cltd
add
stos
cmp
out
sahf
xchg
push
jmp
push
jo
or
js
test
sbb
mov
aaa
mov
bound
mov
add
dec
lods
dec
out
or
leave
sub
xlat
int3
ja
mov
jne
lcall
push
dec
jns
es
push
add
sbb
mov
or
lods
or
fstps
cwtl
mov
push
xlat
inc
cltd
fidivl
push
cli
mov
lcall
leave
add
dec
addb
negl
dec
sub
inc
std
lret
es
mov
popf
push
jle
or
dec
mov
cmp
jne
lret
int3
sbbl
inc
mov
xchg
fs
gs
leave
mov
xchg
xchg
adc
test
dec
pop
dec
push
push
xchg
test
cmpsl
ret
stos
pop
movsl
sub
xor
pop
js
mov
dec
jo
fistl
and
mov
xchg
mov
dec
dec
xchg
add
cmc
mov
mov
loopne
ja
adc
sub
lods
mov
mov
mov
add
add
or
pop
jnp
clc
pop
xor
gs
imul
ljmp
cmc
in
cmp
cmp
mov
pop
inc
push
add
shlb
scas
icebp
pop
cmp
xchg
mov
xor
loope
addr16
sahf
and
cmp
sbbl
loop
mov
push
adc
and
insl
movsb
inc
ret
mov
sbb
mull
in
mov
cmpsl
xor
sub
adc
mov
inc
mov
cmc
sub
mov
jnp
call
jbe
test
mov
subl
adc
push
lret
push
push
xchg
adc
add
or
movsl
das
testb
jmp
pop
pop
out
call
lods
push
fidivrl
rclb
jo
outsl
jp
sub
and
aam
test
mov
shlb
lods
xchg
ja
test
xchg
je
aaa
or
cmp
or
cmpsl
and
scas
adc
test
xorl
test
mov
sub
cmp
pop
int3
lea
aas
vmovsldup
xor
movsb
or
inc
sarl
lock
push
stos
inc
and
xlat
cli
push
mov
mov
adc
test
or
out
dec
notb
sarb
mov
aaa
mov
bound
or
bound
jbe
in
nop
movsb
je
popf
loop
jbe
lds
push
dec
pop
sti
js
cld
lods
cmpsb
clc
jno
into
insl
pop
mov
xchg
mov
and
in
mov
cmpsb
nop
lret
pop
repz
adc
mov
jns
pop
lds
inc
jg
lock
ja
xchg
push
negb
enter
mov
jnp
mov
jecxz
cs
sub
loopne
push
in
add
xchg
add
iret
xor
push
dec
mov
out
cmp
pop
out
or
push
push
ret
jb
sbb
cmp
jb
nop
lcall
mov
sti
je
mov
or
sahf
mov
mov
adcl
fwait
call
rorl
dec
data16
or
inc
fs
xchg
sbb
mov
xchg
and
sbb
add
push
and
jl
imul
mov
in
jmp
jne
cltd
cmp
xchg
popa
cld
mov
mov
cmp
ljmp
out
push
es
ret
pop
push
sahf
push
push
mul
inc
popf
fcoml
push
rcll
mov
fs
les
jno
mov
jo
mov
aas
jl
sbb
dec
sbb
jae
and
adc
sub
mov
in
lock
pop
fadd
lret
aam
pop
sbb
sub
cmp
dec
pop
push
cmp
sub
iret
popa
sti
xchg
cmpsb
subl
fsubs
mov
lahf
xor
outsb
add
stc
add
cmpsl
lock
insl
dec
stos
fs
cs
add
orl
sub
jno
push
jbe
outsb
push
fmul
add
lock
int3
mov
and
mov
sbb
sarb
dec
sbb
daa
in
mov
les
outsl
mov
or
lea
and
pusha
or
mov
cmpsb
push
fsubl
cmpsb
cmc
call
cmpsb
insb
sbb
lea
adc
arpl
stos
call
sarb
push
xor
and
or
jbe
and
lods
jne
pop
stc
adc
and
mov
adc
mov
jmp
cltd
out
mov
mov
ljmp
shrl
push
mov
push
hlt
test
aas
mov
sbbl
sub
repz
sub
movsl
clc
sub
cwtl
mov
adc
mov
movsb
sbb
dec
push
cltd
fists
jne
push
xor
push
or
push
dec
jl
ficoml
cmp
jb
shll
push
adc
or
mov
ja
push
add
ss
lds
add
in
push
les
enter
cmc
das
arpl
lods
add
int3
outsl
int3
lods
cmpsb
das
adc
scas
mov
and
rcr
inc
cmp
pushf
mov
pop
andl
mov
out
dec
popa
inc
pop
lods
fstl
mov
inc
insl
mov
mov
clc
pop
hlt
daa
adc
or
cld
pop
repnz
cmp
bound
int
jo
roll
push
stos
loop
mov
lret
push
stc
cmp
sub
jmp
adc
pextrw
mov
fs
daa
sub
lods
pop
aad
push
pop
int3
dec
jo
aad
sbb
loope
shrb
inc
adc
cmp
outsb
or
mov
mov
pop
cs
test
ret
ja
mov
push
sahf
js
sbbb
pop
cwtl
out
and
pop
fisttpl
push
ja
shlb
fs
insl
addr16
add
push
icebp
lds
pop
int3
adc
sbb
dec
jbe
xor
push
cli
ss
stc
and
popf
subl
xorb
aas
addr16
imul
dec
cld
cli
sbb
pusha
cli
or
sbb
test
mov
xor
out
pop
data16
mov
mov
outsl
push
pop
ficomps
add
adc
xchg
inc
movsb
ret
std
jne
dec
push
out
popa
fwait
dec
push
jl
fimull
xchg
outsl
inc
out
mov
adc
inc
lea
xchg
jae
cmp
imul
sar
or
subb
mov
dec
mov
jl
mov
push
aad
pop
xor
pop
aas
sub
cs
mov
mov
stos
mov
test
arpl
pop
mov
jne
inc
stos
pusha
pop
sub
decb
ljmp
shr
imul
outsb
clc
pop
rclb
sub
movsb
cmp
jnp
push
shlb
icebp
cmp
add
test
outsl
lds
dec
xchg
mov
push
dec
loope
sub
sub
jg
cmp
pop
or
cmp
mov
lock
xor
add
xchg
std
sub
test
out
and
test
mov
mov
bound
mov
jge
cld
clc
or
inc
mov
xchg
mov
push
inc
inc
aaa
and
in
mov
add
xchg
out
mov
mov
js
loope
push
popa
jg
pop
jns
aad
out
std
cmp
xor
xchg
xor
pop
sbb
xlat
push
sbb
inc
enter
or
lea
pusha
inc
pop
jae
psllw
test
pop
mov
xchg
ds
pop
call
adc
imul
cltd
mov
lods
adc
xchg
call
pop
push
sbb
sahf
jmp
jno
js
lcall
mov
in
add
pushf
movsb
ss
rol
daa
add
cltd
mov
mov
pop
out
hlt
pop
mov
cmp
in
inc
sbb
mov
xchg
cmp
outsb
hlt
lods
js
inc
push
xchg
mov
test
mov
push
scas
je
sbb
testb
xchg
mov
out
pop
adc
loop
xchg
inc
lods
cwtl
addl
and
push
enter
sti
mov
std
and
sbbb
clc
dec
repnz
and
or
cmp
rcll
out
adc
jae
inc
daa
repnz
in
pop
jae
jbe
loop
lock
dec
cmc
sbb
fldt
bound
cmp
icebp
push
popa
mov
push
xchg
mull
ljmp
out
sti
xlat
mov
mov
xchg
dec
xchg
fwait
sbb
mov
out
mov
popa
insb
xor
and
test
xor
add
in
gs
lahf
mov
fcoms
fcmovnbe
mov
push
mov
iret
jns
adc
iret
mov
push
neg
mov
fwait
and
cmpsl
pushf
ja
and
js
dec
es
in
ret
fisttps
arpl
scas
push
and
inc
pushf
mov
pop
into
xor
js
js
orb
inc
leave
and
inc
mov
lds
sub
adc
xor
push
and
jmp
dec
cmp
bound
call
sarb
pop
dec
add
sahf
mov
lock
dec
push
and
js
mov
lret
fisttpl
cmp
xor
mov
sti
mov
fucomp
jns
mov
mov
add
xchg
int3
rcrl
popf
lret
mov
inc
jno
jecxz
push
push
sub
jnp
iret
mov
and
lret
ficoms
push
fidivrl
or
push
bound
inc
or
outsb
inc
dec
cmp
cs
xchg
add
mov
andl
mov
js
das
dec
pushf
dec
adc
hlt
pop
popa
jmp
testb
je
cli
lods
fwait
sti
adc
push
xchg
sbb
cmp
push
insl
push
test
lea
rclb
movsl
sarl
jmp
movsb
out
shr
ficompl
pop
je
rcrb
iret
arpl
xchg
cmp
ret
fldl
addl
push
push
mov
repnz
js
sub
test
out
hlt
mov
clc
ret
fisubrl
push
mov
pop
sbb
roll
nop
daa
fwait
sub
xor
mov
stc
mov
inc
cmc
lock
sub
xlat
stos
cmpsl
inc
mov
jmp
sub
into
mov
jnp
orl
pop
push
or
jmp
outsl
out
out
fsubl
stc
sahf
cli
ret
jl
filds
mov
push
inc
mov
fmuls
xor
in
ja
mov
cmp
lret
lods
mov
mov
sub
xchg
lret
sub
sahf
mov
mov
xor
pop
std
aas
pop
roll
aam
in
rolb
xchg
pop
rorb
jns
stc
pop
sbb
jp
sub
xchg
sbb
aaa
pop
push
pop
mov
loopne
fwait
mov
int3
outsl
out
mov
data16
clc
sbb
add
dec
or
mov
mov
pop
outsl
ss
push
sub
fdivr
test
or
dec
jmp
in
bnd
out
fidivrs
mov
xchg
mov
xchg
daa
mov
outsl
nop
ljmp
and
std
ret
or
sbb
and
pushf
xor
fcoml
lods
cs
mov
xorl
or
or
adc
add
pushl
pop
mov
test
adc
dec
inc
nop
pop
inc
sub
movsb
mov
loope
and
push
imul
ss
daa
lret
sahf
push
sbb
into
xor
pop
stc
fadds
fldenv
insb
push
dec
lret
cs
inc
lds
test
sbb
sub
push
dec
andb
sub
xchg
push
adc
xchg
call
out
adc
in
adc
ljmp
dec
fstpt
push
js
dec
and
inc
and
jno
mov
movsl
aas
sbb
mov
pop
das
or
ret
xchg
xchg
inc
lods
inc
test
jne
jmp
xchg
push
in
dec
arpl
arpl
mov
cmpl
bound
sbb
icebp
push
ret
inc
pop
repnz
jecxz
xchg
dec
leave
ss
mov
mov
dec
inc
push
aaa
jge
fcomp
adc
imul
pop
lret
sbb
andb
or
mov
or
adc
idivb
add
shl
add
cmp
imul
fwait
sub
lret
filds
sub
mov
outsb
enter
aaa
and
cs
pop
bnd
mov
stc
sbb
mov
xchg
loope
xchg
test
xchg
xchg
leave
adc
or
fmul
ficompl
sbb
push
dec
sub
cwtl
mov
push
pop
push
mov
fwait
xor
adc
xor
dec
pop
movsb
or
decl
cmp
jb
mov
add
shrl
cmp
pop
cmc
roll
ss
pushf
mulb
in
cmp
in
xor
or
jo
add
arpl
inc
stc
sbb
mov
out
mov
pop
dec
int
and
mov
ljmp
addl
gs
rorb
jl
cmpl
hlt
movsb
or
gs
loopne
aad
jae
dec
mov
mov
fmuls
mov
fcomps
adc
stos
mov
mov
push
cld
xor
mov
dec
mov
jge
in
mov
pop
add
std
cmp
ja
jnp
je
ficompl
sub
jmp
sub
out
nop
xchg
in
jne
xchg
xlat
inc
mov
lcall
lods
lret
jnp
mov
loope
inc
repnz
push
dec
std
call
ficoml
push
into
cmpsb
xchg
xor
fs
ds
data16
push
imul
jle
pop
mov
inc
aaa
lcall
add
imul
insb
inc
or
mov
inc
fs
add
popa
mov
das
shrl
and
mov
mov
and
lahf
out
mov
or
sbb
cmp
aam
sub
mov
lods
mov
mov
arpl
insl
stos
dec
mov
lds
loope
adc
je
ja
inc
xor
xchg
xor
addr16
xor
dec
enter
lds
arpl
scas
dec
subl
pop
popa
xor
gs
add
mov
mov
cmpb
dec
or
mov
ljmp
mov
movsl
stos
and
xchg
mov
push
mov
shrb
adc
mov
dec
jp
xor
rcrb
jo
jmp
lret
mov
sar
push
pop
sahf
ret
mov
das
pop
add
leave
xor
inc
and
inc
xor
sahf
pop
jg
push
jg
movsb
mov
mov
jne
dec
dec
aaa
iret
lds
xchg
xchg
or
imul
test
xchg
pop
sarw
ljmp
and
push
push
push
clc
ret
ja
rolb
or
pusha
out
cld
pushf
roll
int
mov
sub
imul
sbb
cmp
out
push
jle
daa
xor
or
inc
loopne
dec
and
adc
xlat
add
adc
rol
xchg
inc
add
roll
inc
or
sbb
imul
call
sbb
add
push
pop
clc
aad
repnz
add
dec
mov
rcrb
lcall
outsb
or
iret
aaa
cmp
and
sub
outsl
mov
xchg
pop
scas
scas
lods
fsts
dec
in
push
xchg
clc
or
adc
mov
add
add
shl
push
arpl
mov
out
dec
es
or
pop
rol
adc
push
scas
pcmpeqw
push
jno
movsb
movsl
sub
and
testb
insl
mov
bound
lods
outsb
js
lcall
inc
cmp
jmp
sbb
ret
mov
testb
negb
cmp
dec
pushf
fsubrl
std
dec
inc
pop
pop
fstpt
add
mov
out
xor
dec
push
inc
xchg
lods
mov
lods
inc
adc
nop
ret
imul
cmp
aad
xchg
scas
pop
mov
subw
mov
mov
push
mov
mov
pop
sbb
mov
jne
stos
pop
scas
cltd
push
in
cmpb
xchg
arpl
andl
arpl
cmp
jmp
cmp
xchg
sti
pop
cld
jmp
mov
clc
loope
mov
sub
int
pushf
jecxz
in
pop
out
enter
mov
mov
lods
nop
xlat
mov
sub
popf
or
mov
cmp
xchg
pusha
imul
and
cmp
xor
je
mov
jmp
popa
aad
addl
xchg
imul
pop
mov
jmp
test
fisubrl
add
rol
outsb
in
mov
rcr
add
test
rcr
sbb
movsl
movsl
pop
xlat
into
jbe
daa
popf
dec
push
addl
mov
std
jp
enter
and
mov
aaa
jo
clc
mov
lret
xor
iret
roll
iret
scas
sub
mov
sub
xlat
sbbl
or
sbb
fs
jo
out
mov
fisubl
jae
mov
pop
cmpsb
imul
sbb
mov
mov
mov
imul
xor
jge
rclb
xchg
jns
add
add
mov
lret
dec
push
pop
cmpb
and
rcll
pop
pop
cmc
out
ds
add
lret
add
data16
and
filds
ret
cmp
cmp
out
int3
lds
lcall
or
and
test
pop
ljmp
mov
sbb
cld
adc
lods
in
imul
cmp
fucom
rorl
popa
xchg
mov
js
fldl
das
and
sbb
orb
dec
adc
jp
paddusw
sahf
call
scas
bnd
mov
and
fsubs
inc
addl
movsl
imul
push
ret
les
xor
sbb
push
lea
in
xchg
and
pushf
jle
scas
pop
ljmp
pop
and
jge
push
and
cwtl
aaa
mov
rcl
push
iret
xchg
pop
lret
in
cmpsb
mov
xchg
lods
xchg
test
add
inc
fsubrs
sub
mov
push
jae
pop
and
xor
cld
js
add
lcall
xchg
pop
jo
out
int
shrl
add
sahf
sar
dec
lock
dec
dec
mov
and
inc
sub
pop
lahf
xor
xorb
js
push
popf
pop
stos
test
les
mov
adc
push
bound
cs
jg
sahf
testb
dec
inc
mov
aaa
jge
sbbl
stos
push
jns
and
or
mov
pop
jecxz
pop
lcall
push
lods
lods
rclb
ja
adc
lcall
std
les
stos
xor
dec
nop
push
add
add
cltd
fnstcw
add
stc
out
sub
mov
es
loop
movsb
outsb
test
mov
lds
aam
sub
sub
or
lods
and
pop
cmp
sbbb
iret
sahf
xlat
daa
or
out
mov
outsl
out
jns
sbb
bswap
xchg
xchg
sbb
mov
lds
ret
fwait
and
insb
lods
and
xlat
inc
mov
or
das
adc
in
insl
idivb
jl
push
inc
mov
popf
or
lea
mov
xor
mov
leave
push
pop
int3
adc
sete
jge
scas
lcall
icebp
aas
loopne
cmpsb
insb
xor
outsb
jnp
cwtl
scas
lds
mov
pop
mov
lea
gs
mov
loop
jne
push
sbb
pop
sub
dec
mov
cmp
jecxz
in
xchg
xor
add
sub
cs
cld
jbe
data16
dec
into
pop
xchg
mul
repz
fdivs
sbb
dec
imul
lods
fs
mov
in
push
inc
nop
xor
cmpl
inc
loop
repnz
clc
mov
mov
mov
mov
mov
outsl
jb
or
aas
push
ja
jo
push
aam
mov
inc
sbb
push
inc
xor
push
sti
mull
pop
mov
lock
lsl
adc
out
aas
sarl
xchg
inc
movsl
outsl
mov
popa
popf
inc
add
inc
insl
nop
jns
out
popf
aas
adc
lret
mov
mov
sbb
jmp
and
mov
dec
pusha
int
ficoms
aas
jmp
mov
nop
jp
imul
call
add
lret
fnstsw
inc
popa
icebp
clc
imul
imul
pop
stos
lods
pop
jne
inc
seto
loop
cmp
leave
rcl
jae
sub
arpl
repz
ret
xchg
fisubl
pop
fidivs
jp
push
push
sar
cli
and
ja
mov
mov
and
cmp
enter
fisubrs
jg
sbb
xorb
cmova
popf
movsl
sti
rcl
in
in
or
les
dec
push
adc
sbb
xchg
into
adc
fildl
mov
and
or
or
push
lods
sub
movl
ljmp
in
jbe
mov
inc
cmp
xchg
outsb
je
jge
cmc
insb
aaa
inc
sbb
daa
test
mov
leave
xor
xor
and
lcall
dec
sub
sub
or
cmpsl
repnz
loopne,pt
inc
mov
lcall
or
jp
xchg
inc
cmp
mov
movsl
ljmp
xor
lods
inc
ja
xor
adc
fstpt
mov
fstl
mov
outsl
or
mov
cmp
pop
jmp
loop
cmp
int
pop
or
jl
ret
adc
push
out
or
aaa
loop
movsl
jo
popa
add
jmp
pop
jmp
jae
lds
jecxz
sbb
cmpb
mov
or
adc
cmp
lahf
inc
iret
in
les
shlb
and
insl
or
decb
aad
sbb
sbb
sbb
xor
jmp
stos
jae
mov
outsl
scas
loopne
stos
data16
cli
lret
push
jae
popf
addr16
nop
lea
rolb
sbb
xchg
mov
ror
aam
mov
addr16
pusha
dec
pop
into
sub
jmp
stos
mov
arpl
and
sahf
dec
adc
xchg
testb
cmp
sub
frstor
cmp
push
pop
cmp
fsts
push
cli
imul
gs
sti
pop
les
xor
fnstcw
ja
int3
addps
cmp
addl
jl
gs
sahf
push
dec
dec
fdivrs
or
out
iret
cmp
js
or
push
shl
int3
dec
out
add
adc
mov
leave
test
mov
xlat
jle
fs
adc
add
gs
xor
lret
sub
mov
mov
and
aad
add
imull
ret
mov
jle
loop
add
cmpsb
stos
inc
hlt
jo
test
or
cmp
hlt
xor
push
es
cmpsl
push
push
jl
push
inc
sub
inc
push
mov
add
ret
loope
sbb
add
fsub
fiaddl
and
stos
sub
mov
mov
insl
sbbb
jne
scas
mov
push
add
lds
mov
fmuls
outsb
jecxz
add
xchg
in
adc
xor
add
or
add
and
repnz
test
adc
add
push
lods
push
jle
push
scas
js
mov
pop
push
into
jmp
inc
or
popl
daa
imul
es
cmp
mov
pop
lret
cli
jns
xor
mov
mov
push
jne
mov
fiaddl
mov
out
pop
push
int
mov
cmpsl
daa
cmpsl
pop
push
out
inc
jno,pt
pop
flds
fstpl
mov
push
loop
popf
stc
adcl
cmc
je
cmp
push
push
push
pop
popf
data16
jmp
out
xor
gs
test
stc
inc
dec
sarl
jo
movntps
push
mov
sahf
xchg
int3
add
xchg
cwtl
mov
cmp
pop
loope
repnz
stc
popf
mov
notb
test
les
popl
scas
lock
mov
shll
push
cmpsb
xchg
add
mov
xchg
loopne
popf
lret
jae
dec
push
cmp
popl
jle
push
addb
ljmp
outsb
stos
dec
xor
cmp
ss
cmp
sub
mov
push
mov
jmp
lcall
mov
lret
push
or
mov
dec
imul
cmpsb
sub
ret
xchg
fldenv
cmp
mov
clc
test
outsl
cmp
push
test
lcall
insl
bound
adc
stos
jl,pt
dec
add
jecxz
loope
push
cld
out
ss
pop
mov
dec
pop
or
nop
mov
adc
sbb
fwait
hlt
fs
enter
bound
sub
inc
push
lea
push
aaa
jmp
fs
repz
cmp
push
cli
pop
mov
xchg
and
aad
jo
push
sub
dec
daa
into
inc
adc
into
imul
inc
push
fwait
daa
add
pop
push
lds
hlt
rcrb
push
out
test
push
inc
inc
add
sub
pop
cmpsl
repnz
add
sub
into
sub
jo
ss
shll
ret
adc
pop
rol
pop
loopne
or
repz
mov
rcr
aam
cmpsb
imul
mov
outsl
push
lahf
mov
cltd
cli
cmc
stos
xorb
movsb
test
or
das
mov
jp
sub
mov
lods
mov
mov
add
or
cli
in
sub
inc
pop
xor
cmp
lods
push
fcoml
faddl
or
out
sbb
lcall
popa
mov
rorb
cs
jp
popf
jns
sub
clc
sbb
push
mov
sub
aam
lahf
loope
xchg
mov
insb
out
pop
inc
adc
ret
xchg
or
out
xor
pop
jl
cld
dec
sub
add
cmpsl
aaa
outsl
inc
jmp
popf
cli
testb
push
pop
icebp
addl
add
xor
or
jmp
inc
cmp
js
cli
in
xchg
pop
xchg
stos
mov
xor
push
add
cmp
ja
inc
jmp
xor
fld
sbb
orl
or
xchg
add
iret
mov
pop
or
jb
push
and
fwait
xor
inc
out
xlat
xor
dec
test
jae
inc
data16
sbb
pop
sti
decl
dec
lret
push
mov
or
push
sahf
cmpb
cmp
push
xchg
daa
int
js
icebp
rorb
push
adc
and
sub
aad
inc
roll
imul
rclb
adc
lods
lahf
mov
xchg
mov
sub
add
stc
xorl
mov
imul
fstps
int3
mov
inc
or
or
xchg
and
jge
div
inc
sbb
mov
loop
jno
jmp
or
sahf
js
mov
xor
mov
aad
fsubrs
addps
add
scas
pop
and
jle
ljmp
xor
push
adcl
mov
mov
fs
int3
add
ljmp
popf
inc
std
inc
rol
pop
cmc
or
test
mov
jns
fisubrl
fsts
insl
add
inc
cwtl
pop
sbb
xlat
add
mov
sub
leave
push
mov
inc
das
mov
outsb
enter
xchg
fwait
mov
pop
js
adc
fdivp
adc
mov
in
fistpl
jno
jno
lret
mov
loop
inc
es
cltd
leave
cltd
add
push
mov
mov
push
ret
stos
test
jmp
and
and
push
adc
mov
mov
jp
repz
cmp
je
inc
xchg
push
ret
pushf
xchg
loopne
push
adc
fwait
lods
push
push
test
mov
jae
pushf
scas
loopne
and
into
and
pop
add
je
ror
lcall
rclb
fwait
mov
stc
shlb
sub
pushf
jle
mov
mov
les
xor
ret
sahf
mov
cmc
icebp
or
in
cmp
jmp
cmc
inc
ficoml
mov
addr16
ja
shl
filds
dec
popa
sbb
cmp
mov
mov
inc
js
fistps
adc
mov
mov
cmc
shr
pop
and
aad
mov
ss
mov
ljmp
gs
xor
and
int3
outsl
call
mov
pushf
sub
gs
xchg
xchg
pop
mov
inc
lods
je
pop
stos
xlat
jns
andl
mov
adc
cmp
testb
sub
fsts
mov
mov
es
pop
mov
popf
or
add
test
in
push
cmpsb
mov
daa
xchg
repz
movsb
sub
dec
or
jecxz
jp
scas
mov
mov
pop
add
subb
repnz
sbb
push
mov
sbb
pop
sub
sub
xor
xor
in
into
inc
dec
repnz
mov
push
clc
fs
inc
in
sbb
inc
mov
sbb
int
mov
inc
inc
mov
mov
sbb
shrd
xor
xor
out
nop
ss
sahf
and
mov
lea
xor
outsb
mov
inc
mov
jmp
xchg
dec
dec
out
jle
xchg
sahf
and
mov
jae
or
sarl
out
jmp
faddl
in
add
repz
pop
test
jno
data16
or
outsb
mov
popa
out
pop
cmp
lcall
mov
and
or
lret
in
shl
test
bound
pop
stos
xlat
adc
mov
cmp
pusha
pusha
iret
push
add
lds
mov
mov
jb
cmp
xlat
sub
lods
lcall
loop
pmulhw
sbb
cmp
movsl
sbb
pop
jae
out
sar
inc
in
push
shlb
push
call
xchg
mov
dec
add
sbb
xor
into
movzwl
insb
hlt
loopne
cmpsl
stc
test
pop
add
xchg
daa
mov
outsb
jo
dec
xchg
sbb
popa
jne
scas
repz
fldt
popf
ljmp
repnz
in
fistpl
inc
aam
pop
fiadds
xchg
in
xchg
adc
sarl
xchg
push
jne
arpl
dec
push
pop
shl
mov
xchg
sub
dec
mov
jnp
mov
mov
mov
pop
xchg
stc
add
lret
mov
lahf
outsl
push
loope
incl
inc
cmp
loope
jno
roll
insb
flds
dec
inc
lea
pop
and
aas
and
sbbb
sub
mov
add
cmp
outsl
loopne
dec
adc
fsubrs
adc
andl
loope
push
xchg
test
pop
inc
adc
sti
mov
imul
mov
and
add
sub
push
xchg
lcall
nop
mov
fisubrs
loop
das
pushf
and
sbb
gs
cmp
dec
arpl
stos
xchg
fdivp
and
and
add
les
fisttpll
aad
pushf
lock
cmp
and
mov
out
sbb
add
fsubl
notl
mov
cmp
lods
loope
or
call
cmp
push
aas
cmp
clc
ret
jbe
stos
fidivl
xor
cld
push
sbb
push
les
lock
lds
nop
lea
push
out
shr
inc
sbb
sti
scas
call
pusha
mov
arpl
dec
sbb
or
lahf
ds
xchg
add
sarl
adc
jae
pop
mov
add
add
es
jnp
or
sub
cmp
insl
jnp
out
dec
push
icebp
push
stc
mov
pop
repnz
sbb
nop
mov
out
or
cmpsl
lea
or
inc
cwtl
insl
pop
dec
push
loope
xchg
std
sahf
mov
or
sahf
frstor
mov
xchg
shrl
sbb
xor
rcll
shll
repz
sbb
jmp
or
ret
int
lods
mov
mov
scas
dec
or
jle
jge
lcall
and
mov
leave
push
divb
ljmp
std
ja
dec
frstor
je
into
xchg
test
pop
pop
mov
dec
xor
out
lods
cmp
test
mov
inc
jbe
or
dec
cmp
stos
lcall
iret
leave
pop
popa
es
fidivrl
ja
das
xorb
sahf
daa
push
addr16
or
fdivs
or
call
cmp
pop
jne
test
data16
cmc
add
stc
sub
fld
mov
mov
mov
shll
xchg
arpl
lahf
adc
add
or
icebp
mov
dec
adc
fdivrs
mov
ljmp
arpl
mov
pop
cmc
inc
popf
call
test
arpl
lods
cmp
fxch
outsl
jnp
test
or
mulb
rol
fldl
mov
in
ja
rorl
sbb
xor
mov
lock
enter
xor
test
shlb
inc
push
xchg
orb
das
loop
jg
inc
sbb
xlat
xchg
loope
mov
and
mov
add
cmp
xchg
sub
aam
cmp
bound
in
jne
test
sbb
lret
cmp
leave
std
mov
xor
bswap
jg
push
pop
sti
add
jno
dec
inc
sub
fneni(8087
mov
or
outsl
cmpsl
push
inc
sbb
js
out
cld
sub
gs
xchg
and
sub
push
mov
loope
mov
mov
jno
adc
cmpsl
repz
aam
push
xor
ficoml
and
rcr
mov
das
sbb
popf
pusha
out
cs
jbe
imul
sbb
xor
and
enter
adc
sbb
jbe
push
xor
sub
sbb
or
sub
dec
mov
cltd
and
outsb
add
adc
scas
rcl
sahf
mov
xor
inc
jbe
je
jge
jle
or
iret
jp
hlt
cmpsb
push
push
dec
cmpl
jl
out
inc
popa
repz
jne
imull
in
pop
or
xor
cmp
or
emms
or
jo
lcall
pusha
out
stos
push
insl
inc
fsubrs
mov
loopne
rcl
jne
out
aaa
jae
movsb
dec
inc
jecxz
addb
lea
xor
pop
shlb
push
lahf
mov
scas
mov
sub
sbb
icebp
jp
add
loope
in
xchg
cmc
stos
dec
mov
pushf
jp
popa
and
movsl
loope
mov
mov
in
out
daa
sbb
jecxz
push
out
iret
cli
cmc
aas
jne
mov
jo
adc
jnp
in
cmpsb
icebp
cwtl
nop
inc
inc
push
or
pop
orb
subl
out
enter
dec
adc
mov
mov
rcrb
loope
fwait
xchg
imul
pop
pop
mov
sbb
insb
fdivl
fcompl
mov
scas
pop
xchg
mov
test
outsb
cmp
and
cmp
imul
fidivl
daa
sub
aam
inc
xchg
dec
lea
pop
fdivs
fs
jne
mov
push
out
pop
jno
sub
stos
fs
icebp
xorb
into
pusha
sbb
mov
mov
push
das
mov
jmp
ss
sbb
push
cmp
insl
mov
xlat
call
shr
mov
push
dec
pop
dec
test
xor
push
iret
bound
cmp
mov
loopne
fcoml
add
iret
pop
inc
ljmp
jne
lret
arpl
stos
xchg
jmp
cltd
mov
jp
add
bnd
and
int3
lret
push
negb
sti
sbb
call
je
gs
fnstenv
scas
ja
and
push
adc
aam
int
jno
mov
and
jl
jne
cmpl
fimull
jecxz
pop
lds
xchg
xor
xor
scas
cmp
push
mov
jmp
mov
shll
imul
xor
mov
mov
bound
jae
hlt
call
loop
into
call
mov
fidivrs
mov
adc
xor
scas
pop
cmpl
xor
jb
adc
and
xchg
mov
jmp
daa
jmp
std
xor
jecxz
enter
add
aas
and
pushf
adc
add
sbb
repz
mov
inc
pop
scas
pop
leave
mov
cmp
jecxz
dec
mov
mov
xchg
push
inc
cmp
ret
dec
cmp
cs
or
call
das
pop
xor
sbb
loopne
fidivl
inc
push
push
loop
cmp
rcl
sahf
shlb
cmpsl
dec
mov
mov
xor
add
rolb
data16
daa
sbb
and
iret
test
jl
push
xchg
pop
clc
mov
push
cmp
ret
pop
cltd
imul
or
incl
jbe
xchg
sub
mov
inc
outsb
fimull
or
test
inc
cmp
xor
inc
inc
jo
add
pop
add
pop
clc
adc
lock
mov
dec
cmp
jno
in
mov
push
push
addr16
add
and
push
push
dec
movsl
loop
mov
cmp
push
test
mov
insb
jo
xor
adc
sbb
out
mov
push
pushf
jne
xchg
fidivrs
rcrl
pop
shll
or
cmp
ficoms
fimuls
fsubl
sub
jmp
js
sub
jecxz
mov
bound
xor
jb
sbb
mov
xor
jmp
sub
loope
lahf
push
lret
cli
in
inc
push
pop
mov
xor
mov
or
mov
aaa
in
test
mov
mov
push
and
out
test
and
sbb
test
mov
out
scas
test
pop
xchg
mov
adcb
popa
adc
movsl
icebp
push
adcl
sbb
xor
dec
lcall
push
xor
mov
push
lcall
pushf
inc
xlat
fsubr
loopne
and
ret
or
out
or
aad
pop
xchg
ret
fwait
jle
add
notb
inc
sub
enter
ret
mov
in
inc
pop
es
and
pop
pop
fsubrl
push
cmpsb
push
out
mov
pop
mov
fs
fstl
cmpsl
sbb
sti
xor
fucomi
inc
sbb
jnp
adc
daa
addr16
add
dec
cmp
cwtl
je
arpl
sbb
mov
xor
jl
pop
mov
insb
cmp
lcall
mov
out
testb
mov
add
outsl
inc
pop
cmc
not
sub
clc
cmp
pop
movsb
cmp
cmp
dec
dec
clc
mov
dec
stc
push
xor
push
xor
and
lea
arpl
dec
mov
fsubs
inc
scas
or
dec
mov
xor
fldenv
cld
xor
pop
inc
cmp
repz
ljmp
adc
xlat
bound
add
xchg
cmp
cmc
inc
inc
rolb
mov
out
add
jmp
or
sbb
pop
or
lret
mov
mov
scas
cmp
dec
dec
jo
push
out
mov
das
pop
pop
sub
divps
push
out
ret
aaa
pop
jle
repz
cwtl
and
mov
pop
push
adc
sub
hlt
jmp
or
push
sarb
xor
mov
fnstcw
and
scas
shll
pop
lcall
pusha
ret
cltd
xchg
jnp
sbb
xchg
dec
rcrl
jae
push
cmp
push
mov
std
pop
loope
into
sbb
sbb
xchg
mov
dec
jp
mov
sbb
mov
fsubrp
jo
pop
inc
mov
mov
push
push
fcompl
jmp
sarb
stc
mov
arpl
push
pop
scas
jne
int3
inc
fs
xor
fildll
out
aad
cli
sbb
test
adcl
mov
jnp
pop
push
pusha
mov
push
out
enter
cmp
add
scas
inc
jne
xchg
loope
cmp
mov
mov
mov
movsl
jne
sub
loope
into
jne
or
jp
mov
mulb
jge
sub
mov
xchg
xchg
xchg
fst
sbb
cmp
dec
outsl
fildll
iret
test
adc
jns
shll
lods
ret
shl
mov
lods
stos
out
cmpb
mov
out
or
addr16
cmpb
test
xchg
mov
sub
xor
pop
in
movd
push
cli
dec
jno
push
pop
adc
cwtl
xchg
adc
add
subl
lcall
cs
add
ds
and
int
movsb
pop
lcall
arpl
xor
call
push
sti
add
ret
jo
pop
cmp
adc
mov
xor
nop
push
test
loope
aad
insl
out
bound
sub
sbb
adc
imul
jae
popf
sbb
cmp
fcomps
adc
jl
cmc
lahf
iret
xor
cmpsb
mov
call
dec
mov
shll
sbb
jge
out
int
jo
mov
push
mov
test
out
mov
xor
out
stos
fcmovnb
jbe
or
mov
fcoml
lock
lock
mov
sub
loopne
or
movsb
adc
xchg
mov
add
in
jmp
xor
in
xor
shrl
sbb
iret
outsl
dec
pop
loope
xlat
push
sarb
faddp
adc
les
popl
in
xor
test
pop
ficoml
shrl
rclb
mov
push
adc
add
les
dec
ljmp
jne
clc
data16
and
fstl
lds
inc
jmp
xchg
jmp
push
or
bound
test
push
dec
out
aas
push
lds
and
loope
ljmp
xor
pushf
popf
inc
shll
jno
xlat
dec
xor
sub
pop
sbb
cmpsb
call
cmp
and
jne
nop
xor
mov
lret
add
sbb
lret
add
divl
das
sbb
loopne
sahf
repz
cmp
and
sbb
add
cmp
fmul
lret
movsb
jb
push
cmpsl
stc
mov
iret
lret
mov
mov
xorb
or
js
xchg
aaa
mov
cmp
add
mov
mov
mov
scas
enter
inc
push
dec
push
push
aad
xchg
mov
aad
xchg
cmp
pop
add
jne
and
cld
push
leave
jge,pn
inc
fwait
pusha
nop
cmp
call
push
jne
scas
cmp
lret
int
push
icebp
fisubrs
mov
sbb
push
push
inc
movsl
lcall
popf
movntq
out
popw
jbe
in
inc
mov
sub
stos
push
mov
insb
pop
test
shll
xchg
push
test
push
or
mov
test
fisubs
xchg
negl
dec
or
ja
sahf
into
insb
rorl
cmp
mov
mov
cld
into
mov
xchg
outsl
push
imul
mov
dec
sub
sub
popf
xchg
hlt
jo
mov
pop
pop
adc
inc
in
mov
lret
lods
mov
or
adc
or
mov
out
inc
call
loopne
test
mov
push
call
inc
inc
sbb
popf
jmp
sub
jno
dec
dec
xor
mov
xchg
dec
lret
clc
sbb
pusha
add
pusha
or
decl
jmp
xor
mov
inc
push
jo
aam
jns
fisttps
mov
mov
jo
mov
cmp
sub
xchg
lret
filds
mov
mov
pop
fs
test
or
adc
lahf
pop
mov
sub
je
fldl
cmp
roll
sbb
and
into
fisubs
pop
sbb
pop
cmpsb
jno
cwtl
push
dec
mov
ret
and
ds
inc
adc
mov
sub
mov
sbb
sub
test
das
les
arpl
loope
lock
fcompl
dec
cmc
inc
subl
push
cmp
fldcw
addl
mov
dec
not
xor
aas
in
push
mov
rcl
dec
mov
xlat
test
das
shlb
cmp
pop
imul
out
out
or
xchg
jge
enter
jbe
lret
frstor
loop
dec
hlt
mov
mov
pop
rol
nop
mov
in
jecxz
inc
fidivrl
ficomps
push
dec
push
cmp
jae
pop
je
aas
in
mov
cmp
adc
clc
sbb
or
mov
test
dec
shrb
inc
lods
mov
loope
in
out
mov
jge
xor
adc
bound
mov
dec
and
cli
add
fs
pop
aaa
dec
fidivrl
mov
or
lds
sub
add
and
add
mov
icebp
push
mov
jns
mov
add
xor
or
or
int
push
and
cbtw
mov
nop
stos
popa
imul
repnz
or
mov
out
ffree
stos
jno
hlt
mov
ljmp
cmp
mov
mov
imul
fnstenv
aad
lods
in
test
mov
lock
jnp
mov
mov
mov
xor
xor
add
inc
jle
ss
dec
lret
js
jo
push
movsl
cmp
std
and
pop
and
push
outsl
test
out
push
cmp
jge
jp
push
aas
and
ror
aas
lock
lds
jmp
jle
adc
decb
mov
in
xchg
add
push
test
iret
and
nopl
dec
pushf
add
and
fs
scas
cmp
add
cli
cmpsb
jmp
arpl
push
cmpsb
and
pop
push
insl
ja
sub
add
jae
je
cmp
push
mov
add
pushl
sahf
push
adc
in
xchg
jne
or
jb
dec
or
out
cmpsb
or
dec
or
pop
jne
hlt
xchg
pushf
sub
frstor
rolb
xchg
xchg
mov
jl
pop
inc
add
mov
pop
mov
lret
and
and
call
jmp
outsb
sti
cmp
outsb
insl
int3
aas
mov
cli
mov
or
sub
loop
adc
mov
lea
or
xchg
std
dec
mov
ljmp
pop
mul
pusha
xchg
int
cld
daa
lcall
cmp
cmp
pop
mov
fnstenv
and
gs
pop
insl
imul
mov
and
sahf
and
pop
or
int3
or
or
into
out
ds
mov
mov
fstl
and
stc
jb
pop
mov
sbb
xchg
mov
push
xchg
adc
sub
mov
xchg
xchg
add
pop
inc
cmp
mov
pop
cltd
in
loope
xchg
aas
ss
adc
or
ja
adc
sarl
push
and
mov
bswap
int
insl
enter
fldt
sbb
sti
fdivs
dec
jmp
sub
xor
idivl
xchg
adc
test
notl
movsb
push
ret
popf
iret
push
sub
xchg
sbb
stos
add
mov
add
test
and
inc
mov
inc
adc
in
push
mov
and
pop
imul
in
or
stos
inc
bound
mov
inc
lock
aad
rolb
xor
and
subb
ret
leave
movl
add
popa
cmp
in
push
ja
lcall
xchg
add
xor
xor
xchg
xor
repnz
jno
in
into
adc
xchg
xchg
mov
mov
outsb
cmp
add
aas
adc
stc
test
test
stos
add
mov
mov
push
cmp
jns
ret
jg
mov
add
add
pushf
xchg
aas
lea
or
sbb
std
jbe
ret
and
aad
push
mov
fstps
cmc
push
jns
outsl
push
push
fmull
mov
mov
xchg
and
call
jo
adc
cmpsb
and
mov
in
es
jb
lret
test
subb
xchg
push
pop
data16
int3
inc
mov
insl
mov
lea
bound
lods
xchg
xchg
sahf
xchg
sahf
add
ds
pop
mov
popa
out
push
inc
insl
mov
je
mov
loope
xor
adc
push
sbb
in
jg
les
test
xor
test
data16
popa
orl
hlt
rcll
aad
push
in
ljmp
and
sbb
or
fistps
fidivrs
jg
push
push
enter
xor
mov
scas
inc
pushf
fwait
jo
inc
xor
loop
cld
mov
cmp
sbb
sbb
pop
mov
xlat
sti
jge
add
cmpl
fnstsw
lret
pop
push
inc
fcomps
push
pop
jno
dec
pop
or
cmp
lret
pop
add
sbb
lret
jg
cmpsb
add
push
xor
jb
cmpsl
hlt
add
push
dec
and
cli
out
in
push
scas
cmpsl
sahf
jp
dec
sub
pop
mov
jns
dec
arpl
xchg
adc
es
add
sbb
mov
std
jo
and
into
adc
mov
into
xchg
fsubrl
imul
and
and
sub
mov
fmull
std
call
sub
fldt
jbe
scas
leave
clc
bound
cmp
in
and
ja
xor
in
inc
fs
and
jnp
fwait
cwtl
aam
pop
add
mov
test
mov
or
fwait
xchg
jo
fcmovnu
adc
dec
or
xor
mov
aam
lock
xor
and
add
jge
sub
push
pop
out
or
add
repnz
fstpl
repz
fwait
in
mov
add
lret
adc
mov
cmpsl
fs
popa
or
sub
insl
dec
test
inc
add
loope
adc
repnz
dec
push
xchg
icebp
xor
mov
adc
jne
cmpsl
fcom
dec
scas
daa
inc
std
inc
je
pop
mov
loopne
cmp
out
push
and
xor
aaa
data16
mov
iret
in
leave
ds
cmp
mov
gs
imul
popa
outsb
adc
imul
mov
aam
mov
mov
cmpsl
mov
xor
pop
xchg
xor
sahf
or
mov
and
xor
dec
or
add
adc
ret
mov
xchg
adc
push
insb
lret
ds
aaa
inc
iret
leave
sbb
sub
sbb
rcrl
insb
imul
addr16
sbbl
fs
add
fsubs
mov
sarl
jne
lods
data16
imul
and
mov
add
push
in
fwait
sub
cmp
scas
cltd
jmp
jle
inc
test
shr
and
xor
or
cmp
or
and
ror
ds
mov
arpl
int3
aaa
jo
inc
repz
adc
sub
cmp
push
dec
dec
mov
jg
fwait
rcll
or
daa
shll
adc
arpl
adc
pusha
mov
add
jns
xlat
fsubrs
mov
or
jl
in
pop
push
decl
push
addb
sarl
ljmp
mov
xorl
sub
arpl
loope
lds
cli
and
aad
aas
adc
test
adc
rorb
cmp
pushf
ja
mov
ljmp
adc
add
inc
pop
xor
xor
inc
and
les
jp
loop
ret
out
push
mov
leave
adc
xchg
js
negb
push
ror
and
push
orl
pop
dec
mov
cmp
jb
and
or
xchg
sarl
nop
mulb
icebp
nopl
sbb
es
inc
fnstenv
mov
stos
sbb
and
cmp
jmp
lcall
insl
pop
mov
push
push
push
xchg
or
push
outsb
sub
outsb
or
pop
out
dec
or
dec
sbb
cmpsb
mov
imul
or
pusha
roll
cltd
xchg
hlt
pop
sahf
push
and
jmp
stos
and
push
insl
outsl
add
pop
adc
jl
xchg
add
lahf
mov
mov
pop
imul
dec
mov
dec
insb
test
dec
and
popa
xor
das
pop
push
arpl
mov
sbb
inc
xchg
mov
ror
outsb
cli
jg
jp
stos
push
adc
sbbb
std
mov
shll
inc
out
test
mov
test
add
push
sbbl
movsb
and
insl
dec
aam
sub
aad
mov
call
adc
in
adc
in
lret
shlb
orb
movsb
cmpsb
sub
push
xor
test
sbb
adcb
int
push
push
dec
pusha
push
push
and
dec
sbb
jle
push
dec
lock
call
shll
test
pop
xor
jg
test
lahf
sub
lds
std
inc
mov
or
push
push
sbb
jp
inc
pushf
pop
pop
jae
ljmp
aam
test
or
shlb
sbb
mov
inc
jmp
fs
and
mov
out
push
xor
xlat
test
sbb
pop
ds
push
sub
out
ss
mov
pushf
es
negb
mov
dec
add
les
xchg
insl
jmp
dec
lea
lea
or
lea
mov
adc
dec
scas
mov
mov
jns
push
ret
xchg
jno
mov
movsl
adc
mov
cs
and
lock
xor
cmpsb
int
shlb
call
adc
jmp
jg
loop
push
iret
cmp
push
ret
jg
xor
popf
mov
cmp
roll
xchg
fdivp
jge,pt
pop
xchg
fs
inc
adc
icebp
aad
mov
mov
outsl
add
into
and
mov
ret
cld
cwtl
mov
add
movsb
lret
sub
cmpsl
fldt
js
stos
inc
insl
bound
mov
xchg
pushf
andl
das
sbb
test
out
xchg
xchg
repz
add
fistl
mov
es
repnz
xchg
xchg
sbb
or
dec
cmp
inc
mov
inc
clc
out
notb
mov
rclb
js
push
sub
sub
movsb
lcall
dec
addr16
lahf
mov
scas
hlt
subb
and
or
jg
xlat
or
mov
call
imul
pushf
lret
xchg
sub
inc
adc
xchg
jo
or
push
stos
xchg
ss
mov
movsb
mov
mul
aad
mov
inc
adc
roll
lods
cmpsb
pusha
jno
in
in
nop
in
dec
mov
mov
fwait
repz
in
cmp
mov
adc
sbb
jg
ret
fwait
jne
xor
cmp
outsl
adc
movsl
ror
inc
loopne
testb
into
jns
shlb
addr16
push
jns
es
outsb
imul
inc
test
push
outsl
add
test
dec
ret
inc
mov
stos
adc
lret
push
push
fwait
lock
leave
cli
fs
pop
fisubl
sti
mov
movsl
pop
xchg
mov
jecxz
xchg
and
in
scas
cmc
jbe
jno
ss
pop
rclb
add
mov
sub
es
push
push
add
xor
xchg
add
ljmp
mov
jne
dec
movsl
fistpl
call
das
mov
add
sbb
push
sbb
nop
pushf
pop
aas
fdivrs
cmp
inc
int3
cmp
aad
fwait
xchg
push
xor
lret
mov
mov
movsl
pop
gs
fnstcw
jne
xchg
or
sbb
mov
fisubrs
jecxz
adc
pushf
sahf
xor
add
test
ret
sub
jbe
xchg
int
ss
inc
cmc
pop
int
adc
icebp
sti
sahf
and
or
jmp
arpl
popf
pop
cmc
sbbb
imul
dec
xor
dec
leave
adc
jnp
jae
int
je
lahf
pop
sbb
cwtl
decb
jns
xchg
lcall
mov
sbb
xlat
orb
imul
mov
cwtl
inc
jne
movsl
stos
inc
xor
mov
clc
les
fs
sarl
in
adcb
lahf
cmc
jp
sub
xchg
clc
cltd
mov
and
inc
fmuls
mov
ss
repz
stos
sbb
push
mov
push
ds
push
xor
loopne
cld
clc
fldenv
and
push
or
cmp
fnstenv
repz
fnstsw
or
jo
pusha
dec
add
js
add
push
and
repnz
test
rcl
cmpb
loop
mov
jl
outsb
int3
fldl
push
jl
mov
xchg
ja
push
scas
jne
lods
mov
sbb
pop
add
xor
dec
push
dec
mov
scas
pop
lods
mov
xor
mov
scas
sarb
cmp
mov
jnp
fdivs
stc
pop
pop
cmp
add
xor
jmp
dec
mov
cmpsb
push
data16
dec
ds
insb
cwtl
jmp
addl
mov
movsb
jnp
mov
sub
inc
insl
sub
jbe
cs
xchg
pop
add
lds
xchg
jg
jl
fists
test
push
pop
test
xor
jb
jns
inc
out
enter
cmp
mov
pop
dec
xlat
dec
xchg
or
add
pop
or
pop
dec
incb
ja
sbb
add
lods
ja
inc
fsubrs
add
call
and
xchg
into
mov
sbb
xchg
mov
mov
push
int
mov
cmp
in
jnp
cmp
add
and
sbb
mov
popa
cmpsl
lods
sub
mov
js
pop
cmp
shrl
call
sbb
sub
pop
sub
in
fcmovnu
push
ds
mov
sbb
outsl
xchg
in
loope
jl
xchg
and
aam
out
inc
cmp
fwait
popa
fsts
push
push
jo
jmp
shrl
dec
fnstsw
stc
inc
ret
pop
in
inc
pop
add
fildll
mov
mov
add
imul
popa
bound
xor
nop
jno
adc
push
push
push
sub
jo
je
leave
sbb
or
push
bnd
xchg
mov
mov
mov
gs
adcb
fwait
and
ret
mov
inc
sbb
mov
push
subb
bnd
or
push
cmp
aam
jl
cwtl
fsubl
inc
adc
stos
inc
pop
orl
jbe
out
les
mov
mov
xor
cmp
xchg
or
add
mov
sbb
movb
cwtl
and
insb
cmp
fsubrs
cmp
lret
xchg
hlt
outsl
lods
dec
sub
or
je
jo
sti
cltd
nop
sub
xchg
jl
je
mov
adc
ds
ss
mov
call
xor
mov
rolb
sahf
cmc
divl
call
or
jp
mov
lea
icebp
pop
ljmp
in
sub
icebp
adc
mov
shll
pushf
sahf
or
inc
les
inc
pop
pop
cmc
cmpsl
push
and
in
cs
shll
jle
outsl
pop
dec
adc
lahf
stc
and
loop
out
es
es
push
mov
push
pop
cmpsl
lret
inc
jmp
push
and
adc
cltd
out
call
or
nop
jo
call
sub
in
fldenv
xchg
xlat
test
lahf
lds
pop
sahf
cmc
mov
shll
cmp
out
or
dec
lahf
lods
int
stos
mov
lds
sahf
fcompl
lcall
mov
add
xor
inc
cs
outsb
push
add
sbb
clc
aaa
je
ficoms
fmull
xchg
fisubrs
iret
dec
xchg
add
and
sbb
and
sti
fwait
outsb
sub
aaa
mov
sub
pop
test
test
rcrl
gs
and
jne
or
stos
add
inc
pop
sbb
sub
sbb
ja
mov
das
jne
mov
cli
cwtl
cmp
hlt
sbb
inc
mov
test
data16
popf
jge
xor
mov
test
inc
sbb
push
lahf
mov
imul
add
mov
gs
pop
push
fildl
jnp
loopne
cmp
add
gs
xor
icebp
stc
pop
scas
inc
add
and
sbb
ret
inc
jns
dec
in
and
adc
lds
repz
icebp
jmp
mov
jge
push
iret
lea
add
pop
roll
and
stc
xchg
adc
lret
rolb
mov
imul
fs
testb
xor
lock
aaa
loopne
and
roll
cmc
ss
in
xor
rorb
jmp
xor
mov
or
pop
and
push
mov
sbb
testl
test
addl
jnp
mov
add
inc
inc
out
xchg
lds
ja
mov
pop
adc
loop
shlb
loop
jne
cmpsb
jecxz
in
pop
std
adc
add
mov
or
icebp
int
adc
jns
fisttps
dec
sub
inc
cmc
loope
clc
cmp
pop
push
push
out
xor
lods
or
pop
pop
mov
mov
test
push
push
aas
into
addr16
rorb
or
loopne
lods
pop
ds
mov
dec
adc
mov
arpl
aaa
and
mov
pop
xchg
jnp
inc
sbb
cmp
mov
xchg
adc
and
decl
icebp
lcall
mov
and
sbb
pop
push
std
lcall
into
insl
push
or
pop
and
mov
cmpsb
mov
jecxz
lcall
nop
clc
mov
mov
adc
or
xor
js
sbb
lock
xor
add
xchg
push
adc
mov
lods
jg
test
lahf
fwait
inc
popf
xchg
mov
mov
mov
aas
adc
mov
out
pop
push
into
push
pop
jle
fnstenv
mov
or
sub
icebp
gs
push
aas
outsl
into
fucomi
or
pop
inc
push
std
xchg
sbb
lret
mov
in
push
inc
enter
in
mov
mov
adc
sbb
mov
push
jle
jae
dec
fcomi
or
int
pmulhuw
divl
push
pop
adc
adc
mov
shr
and
mov
jns
inc
jp
aam
clc
notl
dec
or
lahf
mov
out
xor
xchg
fdiv
clc
sub
xchg
insl
jmp
sbb
xchg
dec
mov
mov
fsubrl
daa
lea
jno
movl
and
icebp
fwait
mov
pusha
xchg
in
cmpsl
test
bound
inc
lcall
sbb
add
xlat
fdivs
stos
xchg
je
cltd
inc
roll
xchg
inc
stos
aam
adc
sahf
mov
in
mov
add
jno
popf
xor
xor
jbe
xchg
test
rdtsc
mov
mov
jle
fwait
mov
pop
pop
je
cwtl
fst
jbe
dec
mov
in
add
adc
jp
cmpsb
push
hlt
or
pop
jnp
add
cmc
jne
cli
rorb
lahf
jmp
leave
test
repz
xlat
jge
ret
jmp
ret
dec
cmp
pop
jo
out
lds
hlt
mov
dec
xchg
rclb
push
xorl
mov
decb
imulb
add
sar
scas
inc
dec
cmc
lcall
dec
push
sub
push
test
adc
in
pushf
aas
mov
inc
and
pop
mov
sti
pop
add
pop
sti
adc
decl
stos
mov
xor
roll
out
loope
push
dec
xchg
imul
xchg
shlb
arpl
ds
sti
jge
out
fstpl
fimuls
stc
push
sar
sub
iret
inc
jbe
lock
xchg
ss
in
ret
imul
xchg
and
mov
push
idivl
push
or
dec
mov
and
std
xchg
xlat
lods
int
mov
adcb
xchg
int3
xchg
add
notl
pusha
pop
shlb
mov
mov
pusha
push
dec
test
in
jae
bound
push
clc
idiv
push
mov
pop
sbb
add
shrb
pop
xor
xchg
push
mov
dec
negb
cmp
mov
push
add
xchg
scas
sub
insl
leave
xchg
repnz
mov
fwait
xchg
add
dec
push
fwait
sahf
lods
addb
pop
pop
mov
jg
sbb
pop
pop
dec
jnp
dec
lock
bound
mov
sub
dec
cmp
movsl
push
cld
pop
out
mov
hlt
aaa
push
dec
cmp
and
in
pop
cmpsl
icebp
gs
bnd
aam
cmp
pop
and
lcall
fptan
ja
ds
imul
ss
es
lret
sub
xor
sbb
mov
adc
imul
fisubrl
and
gs
std
mov
cmpsl
dec
jo
imul
jo
mov
adc
adc
jp
jns
xor
push
sub
cmpsl
adc
daa
shl
cmp
arpl
jle
cwtl
leave
loope
cli
ja
inc
adc
xchg
lret
mov
push
jne
xchg
add
aad
xor
and
jb
lret
jae
and
test
loope
pop
inc
cmpsl
xor
ja
adc
inc
jne
nop
inc
push
sub
sbb
shrl
pop
mov
popa
cmp
adc
cli
pop
mov
pop
lea
rcrb
mov
cmc
lret
push
inc
xor
nop
fwait
ljmp
into
test
pop
cmp
mov
sbb
cli
add
pop
lods
call
sbb
bound
stos
pop
adc
fstl
push
ret
ror
xor
scas
mov
adc
ss
cmp
xchg
nop
ja
push
push
xor
xchg
push
and
lahf
push
xlat
push
xchg
ds
into
es
std
or
pop
mov
stc
cmpsl
or
sahf
jg
icebp
adc
jo
sarb
sbb
or
lahf
jge
dec
in
ftst
shrb
lahf
jb
xchg
push
xchg
in
pop
cmp
xchg
ja
dec
cmp
inc
sbb
icebp
lea
xchg
std
int3
inc
xor
cmpsb
scas
push
push
lods
fucom
or
mov
movsb
sbb
lcall
and
pop
fadds
dec
rorl
stc
and
dec
push
movsb
adc
xor
sbb
nop
mov
loopne
cmc
aaa
js
adc
lds
dec
test
mov
int3
fstl
sbb
adc
mov
aad
pop
mov
gs
lods
sbb
mov
pop
out
or
and
icebp
div
adc
jae
sub
dec
shr
frstor
sub
std
pop
ljmp
movsl
test
ret
add
xchg
add
je
clc
fwait
xchg
sub
push
lods
iret
push
pop
dec
out
test
movb
sub
sbb
loopne
cmpsl
jmp
test
test
xchg
popf
xchg
aam
lret
cli
xorl
negb
negb
mov
pop
mov
shrl
xor
mov
xorl
sbb
icebp
in
fcmovb
enter
dec
arpl
dec
cmp
in
push
mov
into
sbb
add
test
jp
dec
outsb
xor
cwtl
push
ljmp
pop
cmpsb
xchg
jbe
cmpsb
cwtl
in
out
and
lock
pop
mov
jno
sahf
jp
pop
fimull
addr16
js
sub
popa
les
xor
add
mov
mov
addl
mov
add
pop
aaa
cmp
mov
or
mov
popa
js
jae
ljmp
mov
hlt
xchg
and
xor
add
popa
or
sbb
pop
fisttpll
dec
outsl
fdivs
test
jo
sbb
jb
xchg
ljmp
fdivp
loopne
xor
inc
clc
push
cld
sarl
les
push
and
sbb
fstl
cmc
fwait
mov
xchg
push
fisttps
das
sbb
pop
cmp
stos
and
mov
pusha
imul
jno
inc
inc
mov
dec
bnd
data16
loope
ret
inc
dec
gs
adc
or
btc
fisubl
test
mov
es
clc
and
push
test
or
dec
cld
loop
int3
popa
push
push
imul
xor
jmp
lahf
xchg
push
sbb
lods
jnp
movb
stc
cmp
ret
jne
test
stos
outsl
mov
lahf
push
test
mov
mov
cmp
setnp
cmpsb
xchg
ret
pop
cmp
xchg
dec
add
adc
adc
jns
xchg
test
or
jg
stc
mov
addl
jo
sbb
fisttpll
dec
mov
out
fdivr
mov
call
je
push
and
sbb
jmp
ret
rcrb
outsb
jne
jg
aam
daa
mov
shlb
hlt
sti
adc
or
jbe
ss
sub
xor
loopne
scas
inc
lret
xor
aaa
mov
ds
jno
pop
clc
adc
aaa
ffreep
scas
cmp
fcompl
pop
and
or
pop
and
leave
enter
fnstsw
lods
lahf
cmp
mov
rcr
inc
sub
lods
xor
in
jbe
jae
sub
lret
pop
inc
inc
aas
mov
hlt
mov
xor
lret
push
cli
pop
xor
adc
xor
aaa
pushf
std
adc
jne
dec
sub
mov
imul
in
jns
ret
clc
bnd
out
mov
or
in
fwait
cmpsb
fldt
dec
xchg
cmpb
les
and
mov
sub
addr16
mov
jnp
js
push
jl
add
daa
nop
cld
adc
sahf
xor
inc
mov
cli
repz
dec
xor
imul
jge
stc
stos
inc
fadd
bound
clc
jnp
orb
cmp
dec
xadd
aas
push
jbe
xchg
bound
push
cltd
aaa
dec
test
outsl
add
scas
dec
xchg
int3
mov
xchg
jmp
pop
or
scas
mov
icebp
sub
dec
adc
lcall
leave
icebp
pusha
shr
lret
push
mov
cmp
out
sub
sub
push
idivl
rcr
push
fnstenv
aas
scas
insb
ljmp
sub
rclb
jbe
cmc
xchg
cltd
loope
jbe
or
adc
out
push
sbb
stc
cmp
stos
pop
mov
adc
ficompl
pop
pop
add
into
das
xor
sbb
push
or
adc
lret
mov
insl
sbb
cmp
cmp
sbb
mov
lcall
mov
aas
xor
ds
in
pxor
out
xor
aam
leave
arpl
jmp
movsb
mov
loopne
dec
mov
xchg
pop
pop
add
in
push
repnz
push
fs
lret
or
pop
hlt
hlt
push
xchg
adc
add
test
adc
les
xchg
and
adcl
outsl
dec
jge
jle
sbb
adc
dec
std
movsl
mov
call
andl
inc
notb
mov
popf
xor
scas
stc
or
adc
dec
fimuls
mov
out
xor
pop
pop
mov
xchg
sbb
cltd
lock
cmpsl
das
in
xchg
mov
mov
loope
mov
ss
or
roll
push
and
mov
jae
push
ret
lcall
sub
xor
mov
and
imul
out
push
cmp
sbb
dec
pop
out
xlat
gs
loopne
lods
inc
stc
lret
negb
outsl
stc
add
push
popf
insb
les
push
inc
or
pop
push
xor
jg
enter
push
push
adc
push
les
inc
mov
je
and
dec
in
dec
das
rorl
jle
jp
data16
inc
loop
xor
jmp
test
push
jmp
out
scas
adc
in
xchg
cmc
daa
push
aad
aam
scas
cs
or
xchg
cld
std
dec
mov
xchg
cmp
loopne
xlat
pop
push
and
movsl
push
cmpsl
sbb
mov
outsl
mov
jne
aas
mov
shr
mul
test
rcll
out
test
mov
sbb
mov
xor
icebp
or
push
push
push
push
daa
add
or
pop
fsubl
pop
outsl
fwait
xor
mov
xor
cltd
fstpl
jnp
pop
sub
call
movsl
loop
jns
in
xchg
pop
pop
push
sub
aaa
pop
xor
lahf
adc
inc
jl
mov
dec
call
dec
xor
dec
add
push
fmull
mov
jmp
cmpsl
push
pushf
and
xor
aas
cmpb
jecxz
and
pusha
jg
outsl
lahf
stos
sbb
lods
faddl
daa
pushf
inc
pop
mov
movsb
push
outsl
jge
shrl
cmp
aam
xchg
imul
stc
sub
loop
popa
cli
pop
mov
das
xchg
lds
orl
loop
xchg
dec
and
pop
es
orl
xchg
ret
insb
in
je
out
inc
divb
mov
js
filds
xor
mov
aam
fcmovu
cs
cli
clc
inc
dec
ljmp
lahf
xchg
movsb
pop
cmp
sahf
sahf
mov
cmp
outsb
cmp
test
outsb
lods
xchg
mov
sbb
and
mov
data16
cmpsb
push
mov
xchg
mov
or
sbb
nop
mov
fcmovb
inc
in
js
mov
push
lock
in
mov
mov
mov
addb
push
sub
jbe
pushf
mov
nop
fistpll
and
sbb
mov
sub
sbb
insb
xchg
pop
fwait
clc
lcall
pop
adcb
and
pop
daa
xchg
lret
sub
xor
inc
and
out
mov
xor
aas
lds
sbb
out
adc
test
mov
data16
sbb
mov
test
ret
in
fnstenv
pop
push
in
sub
dec
aas
stos
enter
mov
mov
pop
loopne
repnz
and
xchg
push
fnsave
popa
imul
and
into
jno
add
aaa
cltd
imulb
sub
iret
mov
je
stos
pusha
push
idivl
cmpl
xlat
xor
push
and
enter
xchg
mov
mov
lods
mov
mov
call
or
rclb
mulb
add
pusha
into
and
mov
aas
scas
pushf
insl
fisttpll
add
mov
test
lock
cwtl
and
outsb
sub
mov
addr16
add
add
adc
daa
xchg
sbb
imul
insl
enter
dec
pop
jmp
jne
popa
movsb
repz
push
andb
inc
sub
pop
xchg
popf
test
jae
xchg
movsl
into
out
aas
clc
cmp
stc
mov
pop
cmp
and
lds
mov
and
ss
push
pusha
lcall
jae
sub
imul
xor
test
bound
mov
fwait
enter
outsb
sarl
pop
mov
pop
mov
popa
push
xchg
sbb
cwtl
mov
xor
or
pop
mov
aaa
add
orl
push
fstpl
or
mov
aas
xchg
adc
mov
mov
fsubs
fcmovnb
pop
cmovb
ja
sbb
popa
iret
call
add
push
push
mov
in
sub
sarb
or
cmp
xchg
mov
ds
mov
xchg
jg
std
pop
aad
fucomp
add
ljmp
repz
push
inc
jge
xor
aam
xor
aas
cmpsb
dec
add
fdivrl
lahf
sub
iret
adc
aas
lret
mov
loop
arpl
jg
in
cmp
sbb
mov
xchg
mov
int3
adc
inc
xchg
push
push
arpl
xchg
jns
mov
jmp
fidivs
inc
or
ss
fidivs
mov
add
cld
or
mov
cld
imul
adc
jno
adc
xchg
xor
pop
rcrl
arpl
shlb
aad
sbb
add
inc
insb
jns
or
sbb
mov
dec
sub
add
jmp
mov
ss
dec
mov
push
cmp
sub
nop
decl
dec
out
sti
dec
mov
mov
cmpsl
push
xlat
mov
fistps
pop
cmp
stc
sub
inc
lret
mov
mov
adc
repz
push
mov
mov
jns
ja
push
divb
or
les
popf
inc
cltd
hlt
add
pop
test
push
out
jg
andb
push
mov
jmp
push
lea
dec
bound
rcrl
inc
mov
ljmp
mov
int
or
arpl
fmuls
arpl
jo
test
adc
dec
jle
pop
cli
out
in
in
xchg
cmp
sbb
jmp
sub
mov
inc
aaa
pop
js
mov
scas
scas
xchg
push
sub
adc
add
cld
adc
sahf
add
fucomi
test
add
lcall
lea
sub
flds
and
jl
je
std
mov
adc
pop
add
mov
or
inc
mov
mov
rorl
or
setno
loopne
enter
call
adc
cmp
sub
fimull
inc
imul
in
adc
mov
jno
xlat
dec
nop
jle
sub
mov
int
xor
in
pop
and
leave
jno
or
lock
add
mov
call
xchg
rorl
adc
fwait
or
int
jecxz
cmp
jp
pop
lret
mov
fisttps
scas
dec
imul
mov
shll
xchg
negb
inc
jg
sti
ds
sbb
xchg
sub
add
fldenv
je
xchg
mul
vpminub
lcall
shrb
xchg
sti
fs
fmul
fcoml
lods
or
lods
mov
rcl
pop
jo
push
in
dec
pop
mov
mov
arpl
cmpsl
jg
incl
xor
push
fisubl
mov
jbe
jbe
dec
stos
cmpsl
and
and
sbb
push
in
inc
pop
inc
aad
loopne
lods
mov
stc
hlt
dec
das
push
xor
shll
mov
dec
js
xchg
shll
mov
shl
xchg
sbb
jmp
int
cmp
addb
pop
push
inc
arpl
ljmp
stos
xchg
adc
lret
xchg
jae
mov
popf
or
cmp
push
mov
gs
clc
mov
fs
in
xor
insb
mov
sbb
lock
xor
jne
adc
inc
mov
xchg
ljmp
mov
or
dec
push
xchg
leave
dec
and
lea
inc
popa
je
call
mov
xor
rcr
push
fidivrl
mov
push
sbb
insl
xchg
cmpsl
es
fs
add
mov
iret
cwtl
and
jns
jns
lods
cmpsl
fstl
mov
mov
mov
cmpsl
mov
adc
pop
cmp
pop
pop
sub
xchg
lock
mov
pop
je
adc
mov
sub
sub
inc
inc
mov
inc
xchg
movsl
sbb
outsl
stc
mov
adc
cmp
pusha
das
in
pop
inc
mov
out
les
jg
iret
int3
xchg
clc
cmp
out
aam
push
das
mov
dec
test
xor
mov
mov
sbb
sbb
fst
xlat
loopne
sbb
xchg
lods
xor
inc
xchg
push
xbegin
adc
ss
popa
stos
adc
decl
hlt
aas
dec
mov
lret
iret
mov
adc
loope
mov
jo
dec
inc
inc
loope
lcall
leave
push
in
adc
movw
inc
jns
into
es
pop
daa
pop
enter
mov
rolb
mov
je
mov
and
sbb
push
enter
add
rcll
and
add
in
cmp
mov
lods
mov
or
sub
out
subl
lahf
or
into
xor
add
push
or
cmp
ret
addl
outsb
jmp
jmp
out
push
add
xchg
mov
iret
daa
jle
mov
loope
jo
mov
mov
sahf
mov
xor
mov
in
bound
cmp
sahf
mov
dec
add
shl
inc
addb
mov
adc
pop
cmp
sub
add
mov
push
repz
ja
vpsrlq
mov
mov
dec
ja
nop
mov
nop
jo
fidivrl
push
roll
jle
push
xor
js
push
out
fadd
sbb
imul
lret
outsl
sbb
rcll
jg
and
cs
scas
aas
loopne
in
push
lret
or
add
push
jl
mov
and
add
lret
shrl
sbb
cltd
pop
xchg
pop
daa
or
cmc
add
push
hlt
xor
mov
cltd
mov
or
insl
push
sbb
andb
outsb
jle
xchg
xchg
cwtl
cmp
dec
xchg
pop
adc
jge
lds
mov
lock
jns
cmpb
cmc
sbb
pop
xchg
cs
lcall
dec
rolb
testl
arpl
enter
insb
lahf
f2xm1
fldl
movlps
mov
inc
pop
es
popa
adc
imul
jle
repz
sbb
add
call
push
xchg
inc
mov
data16
sbb
shlb
pop
popf
or
add
lods
in
call
in
or
push
call
mov
sti
pop
insl
movsl
add
dec
cmp
out
sbb
fisttpl
mov
xchg
add
aaa
stos
ror
test
lds
je
xchg
fistps
cmp
xchg
lods
subb
jmp
xchg
adc
cmpsl
cmp
add
mov
js
or
pop
fdivrl
pop
loope
orl
dec
mov
lds
lods
mov
xor
es
mov
jp,pt
xor
mov
inc
stos
insb
add
enter
push
add
icebp
imul
jo
sub
iret
jmp
mov
popa
pop
sbbb
test
jae
mov
sbb
fstps
jno
mov
mov
sbb
sarb
xchg
cmp
ljmp
lret
jb
and
add
mov
popf
mov
or
xor
mov
pop
dec
push
arpl
add
enter
xor
je
sbb
cmp
insb
and
mov
dec
ds
pop
push
subl
xor
scas
add
jne
out
mov
pop
insl
shll
enter
fidivrl
inc
mov
cmpsl
and
rcl
mov
int3
pop
xchg
mov
ret
imul
pushl
inc
out
rcrl
xchg
imul
call
in
sub
daa
xor
call
dec
inc
inc
jnp
xchg
andb
into
inc
lcall
popf
mov
xchg
mov
jne
add
adc
test
or
sub
and
adc
mov
cmp
repnz
and
cltd
jmp
je
jecxz
jp
and
mov
test
cmp
scas
jge
cmp
js
and
and
dec
add
xchg
add
cld
xchg
cltd
scas
or
jo
loop
xor
mov
jns
es
sub
nop
push
scas
pop
pop
outsl
or
addr16
andb
mov
mull
addr16
icebp
fwait
stc
movnti
addr16
jnp
and
or
dec
scas
test
jge
lret
and
dec
and
pusha
in
xor
cmp
mov
into
xchg
jge
lahf
push
adc
inc
dec
mov
push
xchg
and
leave
lcall
or
mov
addr16
push
ljmp
inc
bswap
cmc
test
cmp
pop
and
test
add
xchg
repz
cmp
sbb
add
loopne
dec
cmp
aam
dec
mov
xchg
imul
scas
xor
add
xchg
jl
ss
pushf
pop
xchg
arpl
fisttpl
cmpb
cmp
mov
mov
xchg
mov
in
mov
test
adc
adc
push
push
xor
cmp
shlb
pop
pop
mov
out
dec
mov
push
icebp
je
ja
adc
pop
xchg
hlt
jle
lret
cmp
in
lock
repz
dec
aaa
mov
leave
xchg
add
in
mov
mov
add
stos
mov
imul
sbb
mov
pop
and
jnp
punpcklbw
outsl
cmovnp
cmp
jne
insl
xchg
pop
cmp
xchg
lods
shrl
cmp
mov
cwtl
int
aam
out
mov
adc
add
test
cmp
mov
sbb
push
xor
stc
mov
jmp
and
dec
in
xor
call
inc
mov
pop
mov
icebp
insb
jge
sbb
xchg
aaa
inc
scas
imul
lds
jge
jmp
or
mov
dec
fnstenv
imul
mov
popf
fldl
jg
mov
outsl
in
mov
dec
int
lea
mov
fwait
enter
push
dec
lods
push
push
xchg
pop
adc
and
daa
or
insl
or
leave
pop
movb
fwait
jmp
lcall
jnp
cmp
mov
pop
add
push
loopne
movsl
sbb
cvtpi2ps
pop
mov
inc
jnp
in
hlt
push
test
mul
test
dec
dec
test
xchg
mov
fs
sub
mov
inc
stos
in
sbb
adc
iret
pop
out
ficoml
jnp
dec
sbb
insb
les
pop
orl
scas
mov
and
in
add
pop
sub
loopne
sub
shll
loopne
dec
lret
mov
adcl
jne
cmpsl
rorl
mov
sbb
outsb
inc
daa
sbb
adc
push
adc
leave
loope
arpl
pusha
shlb
call
inc
ss
push
sub
push
movsl
pushf
jl
ret
add
sbb
or
jle
and
mov
mov
inc
dec
and
and
outsb
sbb
repnz
repz
cmp
pusha
mov
mov
loopne
sub
pop
sub
mov
mov
stc
adc
sub
dec
xchg
inc
lods
lahf
fsubr
inc
les
lret
aas
mov
sub
imul
fimull
pop
sbb
mov
add
clc
cmpsl
or
dec
jmp
dec
sub
mov
pop
fldl
test
xchg
sbb
in
je
mov
inc
jle
int
scas
icebp
mov
fmull
js
mov
orb
pop
inc
fs
or
aam
cmp
push
push
mov
adcb
adc
leave
or
pop
mov
mov
rolb
jno
pop
inc
pop
dec
pusha
dec
add
imul
out
maskmovq
divl
mov
jle
xorb
add
or
mov
inc
les
mov
xorl
mov
icebp
jle
add
lea
adc
ss
adc
ljmp
pop
sbb
insb
sub
jl
add
jle
popa
cwtl
fxtract
push
cmpsl
cmp
cmp
jecxz
push
pop
xchg
add
lret
push
arpl
in
xchg
adc
les
aaa
rcrb
mov
call
jecxz
addr16
xor
push
rorl
lcall
and
pop
pop
adc
es
idiv
test
ret
sarb
xchg
and
add
adc
loopne
lret
sub
or
subb
pusha
iret
xchg
lds
in
shrl
lret
faddp
jo
push
inc
addr16
enter
mov
xchg
xchg
in
sti
repnz
repnz
push
sbb
fnstcw
or
and
out
push
dec
pop
cmp
mov
repnz
cmp
inc
shrl
sub
mov
es
push
fistpl
jmp
xor
int
aas
fistps
jp
pop
add
adc
pop
aas
cmpsb
dec
lods
mov
pop
push
pop
loope
ret
adc
jmp
xor
xchg
test
jle
cwtl
sub
jnp
int3
xor
outsl
mov
add
decl
lds
inc
clc
fcoms
fstpl
and
lret
gs
jle
inc
loopne
mov
inc
insb
sar
add
xor
or
sbb
bound
mov
test
xchg
cmp
adc
xor
mov
xchg
mov
adc
jg
cmpsb
or
shrw
dec
cmc
pusha
jl
sbbb
mov
add
jnp
inc
cmp
mov
decb
jb
fldt
adc
lret
sub
pop
ja
cmpsb
adc
stos
dec
jecxz
frstpm(287
cmpsb
into
lret
std
movsl
in
push
mov
mov
imul
shrb
mov
pop
push
gs
pushf
lock
inc
stc
cmp
jns
shlb
xlat
cmp
jecxz
js
xchg
adc
adc
adc
stos
and
mov
les
pop
les
fs
or
and
dec
out
or
mov
shll
dec
gs
shlb
adc
repnz
mov
push
jae
cmp
pop
outsb
or
cmc
dec
sbb
mov
lods
push
cwtl
mov
inc
inc
fadds
aad
xor
sbb
aam
test
or
mov
xchg
inc
test
jne
enter
inc
sbb
lahf
jo
lods
popa
push
cs
es
out
or
in
or
outsl
pop
jae
clc
iret
cld
sbb
dec
pand
lods
add
test
or
add
rcll
mov
mov
ja
aam
loope
lcall
jl
sub
clc
lods
test
or
jnp
or
pop
lods
lock
out
jo
cmp
jmp
aaa
push
jmp
in
fidivs
xor
push
setl
or
pop
inc
xor
popa
jl
lcall
add
xchg
in
loopne
shrl
pop
push
jge
jne
and
and
mov
sbb
lea
inc
mov
dec
enter
sbb
pop
add
xor
imul
jbe
test
pop
sub
sub
and
mov
call
push
lock
mov
fildl
adc
lahf
cmp
sub
je
xchg
jle
testl
test
fistl
fcomps
pop
shll
pop
push
push
push
popl
jg
out
mov
xchg
cmp
cmpsl
adc
enter
mov
in
inc
fnsave
aaa
mov
dec
les
test
fistpl
jge
notl
outsl
ret
or
stos
insb
fistps
add
das
push
in
adc
jg
push
cwtl
inc
popf
xchg
lods
iret
push
fimull
sbb
lret
mov
lahf
inc
loopne
fldt
aaa
les
jl
fisubl
cwtl
imul
or
pusha
fstpl
mov
shrl
push
mov
xchg
sarl
icebp
xor
jle
and
mov
flds
push
xor
sub
adc
pop
add
dec
jae
lahf
push
rcl
dec
cmp
fs
dec
mov
lret
adc
mov
fisttps
jae
in
pop
cmpsb
push
jns
std
sbb
call
test
mov
or
dec
mov
push
ret
xchg
add
push
icebp
fcomp
jp
pop
add
jp
xchg
ret
sub
mov
rcll
pushf
into
inc
jbe
rcl
enter
sbb
js
in
dec
inc
shrb
xchg
dec
lahf
mov
inc
bound
out
jmp
jne
jmp
imul
and
or
leave
movsb
cmc
mov
loope
cwtl
cmc
ja
mov
xor
test
outsl
xor
jnp
push
push
inc
fisttps
dec
mov
ja
sbb
sub
adc
imul
inc
mov
mov
dec
xchg
aam
add
jae
xlat
insb
push
adc
jnp
jl
out
or
lock
push
sti
xor
mov
icebp
jecxz
xchg
cs
mov
cmp
daa
or
push
daa
xor
stos
scas
jmp
enter
or
cwtl
add
lods
je
clc
add
divps
jge
sub
rolb
dec
in
mov
add
dec
stos
mov
mov
mov
mov
push
cmpsl
xor
push
cmc
jns
ret
sub
div
jmp
or
icebp
mov
push
xchg
scas
inc
or
pop
ja
fwait
lret
dec
in
pop
int3
cld
rcrb
mov
cmp
push
out
mov
jmp
rclb
pushf
pop
daa
jg
mov
aaa
adc
pop
add
fs
gs
sbb
cmp
aas
xor
jns
xchg
pop
insb
mov
pop
or
mov
mov
int3
les
gs
push
in
das
mov
dec
jl
dec
movsb
push
ja
cwtl
insb
fcmove
and
cmp
fsubrs
stos
cmpsb
push
es
aas
leave
daa
in
mov
dec
pop
lahf
cltd
mov
mov
pop
andl
in
push
movsl
xor
mov
xchg
in
cs
add
bound
dec
mov
xchg
scas
cli
sbb
add
fdivs
pop
push
rolb
mov
cmp
push
imul
mov
es
movsl
popa
jbe
jne
inc
or
shr
shll
cmp
sub
mov
in
stos
sbb
orl
mov
and
cmp
add
xor
and
mov
test
out
xchg
pop
das
cs
xchg
cs
mov
pop
or
inc
push
dec
mov
sub
mov
mov
in
jecxz
in
xchg
cwtl
mov
jmp
iret
orb
mov
test
mov
les
je
cmp
sub
jmp
push
adc
dec
push
jnp
jae
mov
popa
addr16
enter
popf
xchg
repz
mov
rcl
dec
xchg
fisttps
pop
inc
or
rorb
push
push
xor
adc
cwtl
insl
popf
adc
call
jmp
ljmp
add
cmpsb
jno
out
sbb
pushf
sub
mov
adcb
repz
xchg
aad
popa
loope
and
sbb
push
scas
hlt
push
mov
sub
adc
movsl
or
lods
mov
or
je
ret
or
into
enter
jle
in
lock
pop
push
cmpsl
ss
xor
mov
mov
ja
pop
or
mov
pop
test
clc
cltd
adc
dec
inc
cmp
add
and
fiaddl
sti
pushf
js
sub
or
ret
or
test
or
cmc
pop
or
bound
aam
in
test
scas
mov
sarl
shrb
popf
pop
rol
mov
pop
and
ret
pop
mov
push
xor
push
jmp
mov
jecxz
dec
loop
mov
sbb
add
shr
rolb
lods
stc
xchg
pushf
cmp
pop
stos
daa
das
fdivs
inc
mov
xor
or
add
mov
push
ja
xchg
pop
add
popf
cltd
and
icebp
pop
lcall
fs
jns
stc
rcrb
and
test
dec
inc
dec
and
jae
adc
sbb
mov
push
cmp
jl
push
mov
adc
arpl
lcall
fidivs
pop
call
sbb
cld
pop
jge
push
or
lret
dec
mov
out
shlb
movsb
mov
mov
inc
adc
xchg
lret
cld
jne
push
inc
xchg
in
into
lods
sbb
out
ljmp
xchg
xorb
insb
mov
push
lcall
and
ds
mov
loope
inc
rclb
iret
mov
sub
dec
jmp
subl
xlat
gs
push
fidivrl
test
jecxz
and
mov
movsl
sub
cmp
jo
testb
lods
lds
cmp
dec
or
pusha
lret
sub
ljmp
lahf
dec
popa
xor
pushl
dec
cmc
jo
bound
mov
addb
mov
imul
stos
pop
outsb
xor
in
stc
hlt
aaa
xor
loop
xchg
push
xchg
in
adc
jnp
xchg
dec
loopne
sti
xchg
inc
xlat
cmp
push
pushf
or
and
cwtl
push
std
pusha
cmpsl
jae
jecxz
or
popa
call
mov
ret
or
cmpsl
push
jge
inc
jns
mov
icebp
insb
sbb
sbb
xor
nop
inc
inc
pop
fisubl
jle
jl
and
mov
sbb
dec
adc
das
loopne
and
cwtl
out
add
pop
or
push
mov
je
ja
inc
xor
test
fdivrs
dec
sub
adc
pusha
fdivr
jne
jl
add
xchg
out
js
pop
jo
int
inc
mov
xchg
or
push
mov
jnp
sar
or
mov
subl
push
aad
or
xchg
pop
nop
sbb
cmp
and
or
shlb
pop
inc
and
jns
dec
xlat
push
addps
faddl
repz
aad
int
in
out
lcall
pushf
push
cmp
into
mov
test
or
xchg
inc
sbb
jmp
shrb
lret
xchg
aaa
out
push
mov
and
dec
or
sub
divb
lahf
imul
into
mov
lock
std
xchg
aas
cs
scas
bsf
in
test
popa
ja
in
mov
push
add
jge
xchg
mov
movsb
pop
mov
test
mov
lahf
jmp
ret
pop
outsl
add
cmp
rol
test
jle
pop
jo
mov
dec
push
insl
xchg
dec
cld
push
addr16
push
out
dec
or
fs
jg
push
setp
xchg
push
cltd
and
jge
lret
test
adc
adc
shrb
cs
ja
push
loop
cltd
push
arpl
mov
mov
cmc
mov
mov
adc
addb
sub
xchg
pop
faddl
mov
fmuls
mov
and
pop
dec
dec
and
inc
sub
arpl
pop
out
int3
fwait
add
mov
test
or
insl
push
lret
fucom
push
je
dec
push
imul
je
les
cmp
push
xchg
das
cmpsb
cmp
xor
aam
jne
dec
scas
add
push
int3
dec
int
push
mov
and
pop
xor
inc
add
jmp
jbe
popa
dec
dec
out
cmp
stc
fwait
push
cwtl
ljmp
and
push
mov
popa
into
push
loopne
hlt
lods
xor
sub
shl
pop
repnz
pop
sbb
test
insb
inc
xchg
clts
outsl
jl
mov
mov
std
xor
jmp
mov
mov
imul
xor
or
ja
mov
dec
lds
popl
fstps
cld
jo
repnz
xchg
sbb
adc
jb
mov
jns
cmp
test
inc
aam
hlt
into
sub
ret
scas
sbb
inc
mov
insb
or
mov
mov
es
cmp
or
push
addr16
cmp
insl
imul
sub
popa
pop
inc
push
pop
jmp
xchg
jae
out
lcall
mov
ds
imul
mov
add
mov
fs
ds
adc
inc
add
data16
out
call
mov
divl
negb
dec
xchg
adc
mov
push
cmp
cmpsb
clc
aam
cltd
adc
inc
aaa
popa
imul
mov
push
aas
mov
out
scas
std
add
mov
in
popa
push
imul
fnstenv
dec
out
enter
ret
jbe
test
jg
mov
jmp
btc
int
scas
mov
nop
aas
in
mov
test
fidivl
xor
dec
outsb
sahf
xor
iret
add
les
add
adc
aaa
leave
lea
cmp
gs
push
inc
arpl
scas
jmp
add
xchg
xchg
pushw
pop
jne
and
sub
mov
loope
ja
mov
imul
daa
mov
push
jne
insb
testb
push
cmp
cmp
gs
ljmp
fmulp
dec
mov
mov
fldl
pop
andb
sub
fldenv
loop
push
inc
aad
dec
test
inc
outsl
or
or
and
cmp
dec
imul
inc
add
insl
mov
push
sub
fiaddl
data16
adc
xchg
in
add
ret
mov
pushf
out
arpl
jl
jne
leave
xchg
je
lock
sub
inc
cmp
push
loop
loop
lock
loope
enter
loope
shll
cmp
or
mov
jnp
add
aad
sub
inc
repz
xchg
pop
cmc
fwait
push
mov
nop
arpl
es
push
xchg
aas
daa
mov
dec
mov
pushf
test
push
aaa
aas
aad
add
in
and
jmp
xor
addb
pop
fcomip
cli
mov
rcrl
insl
add
lret
and
xchg
mov
subl
pop
cwtl
cmpsb
fdivrl
sbb
and
jnp
and
push
pop
cs
mov
movsb
enter
or
jo
and
xor
xchg
pop
and
ds
sbb
repnz
std
fs
lret
and
jl
pushf
mov
inc
mov
push
popa
mov
or
xor
adc
and
enter
pop
fdivl
gs
and
mov
in
into
mov
and
out
add
jne
xor
fs
push
rcll
mov
sbb
mov
out
jno
jbe
in
addr16
xor
dec
mov
cmp
add
es
bound
std
and
jle
sbb
adc
jg
mov
cmp
pusha
sub
inc
clc
addr16
shll
les
inc
push
repz
add
cmp
in
xlat
imul
sub
shr
cmpl
lahf
cmpb
xchg
cmp
adc
lods
pop
sbb
inc
insb
mov
cltd
jo
inc
sub
sbb
sub
or
fldt
movb
xchg
pushf
dec
cmp
jne
ds
jbe
pop
mov
lds
xor
enter
cli
pop
out
sbb
arpl
xor
fsqrt
pop
mov
aad
out
xor
mov
mov
mov
js
aad
loopne
cmp
push
mov
mov
push
inc
dec
dec
jae
mov
and
jmp
mov
aaa
mov
mov
xlat
and
and
mov
or
fwait
mov
sub
out
jmp
std
xchg
gs
sbb
and
and
or
mov
outsb
sahf
mov
ror
xchg
test
mov
or
pop
hlt
jp
add
sub
mov
mov
fwait
cmp
push
mov
enter
aad
aaa
shrb
loopne
pop
add
in
xor
daa
rol
ficoml
inc
cmp
pop
mov
xchg
mov
cmp
cwtl
mov
addr16
adc
push
inc
sbb
inc
add
xor
outsb
jmp
arpl
mov
rorb
mov
adc
mov
test
lods
and
xlat
lds
sbb
mov
pop
je
mov
pop
xor
aaa
rol
pop
arpl
sti
dec
mov
imul
or
cmp
mov
cmpsl
pop
inc
ficompl
lret
aas
imul
popa
inc
lret
push
rolb
test
out
arpl
inc
add
flds
cmp
lods
mov
dec
cmp
mov
xchg
and
mov
scas
jge
mov
in
test
mov
insb
shrl
dec
mov
push
or
sbbl
pushf
xchg
cmp
lods
and
call
or
test
pop
jmp
push
fcom
adc
push
lret
xor
mov
loop
lock
lods
xlat
jbe
idivl
outsb
in
fisttpll
leave
dec
sub
mov
push
push
bound
jmp
jmp
orb
jb
xorb
mov
sahf
sbb
arpl
addr16
fs
lock
out
or
dec
lock
adc
ss
inc
xchg
cmp
je
jo
sbb
std
iret
sbb
notb
or
pop
xor
ljmp
mov
insl
sub
xlat
dec
cwtl
push
adc
push
inc
mov
in
lock
out
cmp
pop
dec
not
push
mov
dec
aaa
daa
pop
adc
cmp
lea
sbb
push
cmp
jb
pop
mov
xchg
popf
push
xor
insl
mov
mov
or
mov
or
and
aas
std
pop
sub
mov
frstor
sub
das
bound
lods
xor
xchg
pop
sub
in
shlb
push
pop
dec
mov
mov
mulb
mov
aas
in
cmc
lds
in
mov
popa
filds
push
or
call
es
movsb
loop
pop
loopne
push
sbb
pop
mov
push
jl
dec
or
and
pop
dec
rcll
rolb
mov
mov
push
mov
repz
mov
jbe
jne
inc
fildl
call
nop
fwait
xor
mov
push
cmp
mov
stos
jl
test
test
mov
mov
cmp
fildll
push
roll
lock
gs
and
dec
pop
rcrb
mov
jle
dec
das
sub
ds
mov
imul
mov
xchg
mov
jge
cs
jb
loopne
repz
popf
insb
jmp
push
adcb
cwtl
and
push
mov
xor
rorb
pop
loope
into
in
test
adc
or
outsb
pop
aaa
loopnew
scas
fimull
gs
jge
dec
mov
clc
jnp
sbb
adc
scas
pop
jno
inc
repnz
push
or
xchg
pop
gs
loopne
sub
push
xchg
call
jno
pop
in
mov
mov
cld
out
and
mov
sub
or
adc
xor
xlat
dec
mov
aaa
or
scas
mov
imul
lahf
dec
jmp
out
mov
sbb
rcr
sub
inc
fisubl
scas
jle
paddd
or
inc
mov
in
pop
mov
cmp
inc
pop
and
pmaxub
or
rolb
push
rorb
into
shlb
out
add
leave
mov
sbb
fistl
aas
cmp
inc
and
inc
fcomps
mov
int
push
mov
sti
push
jg
les
mov
in
xchg
shrb
mov
add
ja
cmp
ljmp
jmp
adc
sbb
adc
pop
fs
lret
xchg
pusha
mov
push
loope
rorb
jmp
push
sub
sbb
and
in
xor
test
std
jp
movsl
ss
xor
jno
mov
push
aad
mov
jae
mov
stos
aaa
cwtl
mov
mov
jb
jb
arpl
popf
sub
std
pusha
lea
aam
imul
pop
cltd
pop
sub
and
aas
inc
mov
aaa
outsl
and
roll
jle
mov
std
dec
mulb
mov
push
dec
xchg
and
pop
xchg
sbb
pextrw
and
mov
dec
and
loope
mov
and
fisubrl
xor
xor
jl
fimull
mov
mov
jle
stc
nop
xor
jmp
xchg
test
push
sbb
ret
pop
mov
xor
psubb
loope
cmpsl
inc
ljmp
mov
xorb
inc
xor
enter
mov
inc
movsb
into
sti
xchg
ret
sbb
aaa
ret
push
dec
adc
sub
pop
pop
lcall
xchg
xchg
add
cs
add
test
fidivrl
push
bound
mov
jecxz
cmp
out
stos
in
cltd
jb
out
lods
mov
dec
loope
lret
jmp
add
inc
xchg
clc
pop
pop
adc
add
pushf
cmp
inc
into
mov
mov
and
add
jb
fucom
cwtl
jge
cmpsl
inc
add
dec
jl
movsl
call
adc
int
adc
imul
fwait
jge
sahf
xchg
inc
mov
repz
pop
mov
in
pop
jns
popf
test
add
cmpsl
pop
mov
mov
xor
dec
fists
cmp
xchg
out
and
pop
imul
fsub
testl
lahf
test
ljmp
test
push
outsl
mov
mov
movsb
xchg
cs
push
push
mov
adc
mov
ret
sbb
push
cmpsl
dec
mov
xor
cld
pop
fsts
mov
or
out
lods
mov
and
jnp
push
add
sahf
mov
lock
add
clc
dec
aam
int
es
cmpsl
sbb
sub
ret
xor
out
xor
pop
dec
ljmp
dec
ds
push
es
lahf
fwait
call
mov
push
jecxz
lahf
testb
insb
gs
leave
imul
inc
hlt
mov
cmp
add
push
adc
push
mov
int
cmp
jno
and
rcrl
in
push
test
lock
mov
adc
mov
bound
xchg
hlt
xchg
mov
imul
push
add
stos
mov
or
fs
push
fidivs
sub
push
scas
dec
mov
xlat
pusha
sbb
insl
pop
loop
test
cmp
push
cmp
and
sub
inc
xchg
rcrl
inc
fwait
pushf
push
aam
and
popf
sub
clc
pop
icebp
pusha
mov
xor
jb
std
shlb
inc
and
cmc
cmp
pop
push
movsl
xchg
dec
push
cltd
jbe
loop
shl
adc
ss
jge
stc
jnp
popf
loope
jecxz
xor
lret
xchg
andb
sub
scas
out
call
dec
sub
inc
sbb
call
inc
call
test
testl
insb
cwtl
in
divl
sbb
int3
xchg
add
hlt
adc
push
jmp
shrb
adc
inc
loop
adc
jo
pop
cmp
test
push
add
inc
xchg
lods
rcr
jns
xor
icebp
ret
clc
xchg
dec
xor
outsb
scas
mov
lcall
mov
dec
imul
mov
mov
xchg
mov
xchg
shl
mov
pop
popa
cmp
divb
cmp
out
gs
cmp
in
imul
stc
mov
enter
loop
fbld
mov
push
mov
pop
push
mov
or
mov
ss
jle
and
mov
xor
cmp
pusha
mov
fwait
cmp
lahf
xchg
mov
xor
lret
jecxz
out
mov
mov
testl
add
lods
mov
stc
stc
stos
inc
and
inc
lahf
ret
call
sahf
or
xor
dec
adc
dec
pop
push
cmp
iret
xor
sub
xchg
clc
xor
mov
out
sbb
or
icebp
aad
sbb
lret
sub
sbbl
jnp
fcom
push
out
out
sub
out
fisubrl
aas
push
pop
push
xchg
lods
xchg
add
pop
xor
js
pop
daa
mov
xchg
push
push
lods
mov
lock
sub
cmp
loope
stc
insl
dec
or
repnz
ret
aaa
push
jae
sub
shrb
push
in
sbb
ja
test
pushf
rorb
mov
outsb
dec
add
add
jl,pn
mov
xor
and
cmpsb
je
mov
aam
jo
push
scas
lds
xchg
incb
and
ret
scas
jle
pushf
stos
pop
pop
test
inc
roll
pop
jne
mov
mov
jge
pushf
mov
pop
das
xchg
cmp
in
jmp
clc
add
mov
imul
test
std
cmpsw
or
xchg
scas
sub
add
in
jg
out
gs
aam
lock
popa
fsts
dec
rcr
loopne
arpl
dec
push
ret
icebp
pop
push
push
xor
hlt
pop
aam
pop
out
push
add
mov
addr16
xchg
imul
xchg
mov
inc
add
int
lods
loopne
mov
mov
cmc
ret
jg
pop
test
mov
or
lea
inc
xor
mov
aas
outsl
mov
mov
mov
std
and
rcl
out
cmp
ljmp
fsubrl
je
decb
in
cs
inc
ds
xchg
jo
rolb
into
jbe
mov
call
cmp
pusha
shll
int3
std
push
fcompl
in
push
addr16
inc
mov
mov
rcl
mov
and
je
add
lods
movsb
xorl
js
mov
repz
pop
int3
dec
dec
lods
mov
rorl
mov
or
xor
nop
enter
movsb
gs
inc
mov
pop
orl
xchg
and
inc
pop
in
loop
fimull
mov
loopne
loop
sub
jecxz
addl
pop
adc
or
pop
mov
xor
cs
mov
sub
lea
sub
aad
imull
cmp
push
jp
sbb
cli
imul
or
xor
pop
mov
and
cli
pop
push
xorl
push
add
shlb
loope
ror
dec
mov
xor
lock
imul
xor
inc
cmp
lret
int3
sub
nop
es
adc
lcall
inc
xchg
or
imul
arpl
fdivp
cwtl
push
test
scas
iret
std
xor
jl
fldt
push
cmp
and
nop
arpl
or
pop
mov
add
dec
inc
mov
mov
jle
sbb
jecxz
adc
andl
enter
mov
and
pop
fiaddl
add
mov
pop
adc
add
add
push
inc
jl
and
jp
adc
xchg
lock
test
mov
pop
and
rolb
movsl
lods
sub
fstps
in
movsb
push
jns
ja
sarb
jbe
jne
addr16
clc
mov
ja
aam
fs
test
addb
cli
xor
rclb
das
jp
aaa
mov
pushf
rep
lea
movsl
push
add
sub
push
sub
rcrl
cltd
xchg
inc
jle
cld
add
pop
lahf
adc
cmp
sbb
push
pop
xchg
push
add
pop
daa
clc
sub
mov
es
xchg
ss
arpl
hlt
mov
jo
mov
jb
sub
dec
xor
or
push
test
or
inc
call
adc
aaa
cmp
sub
lods
pop
jg
push
sahf
add
jecxz
bound
push
pop
xor
jecxz
call
ds
cltd
or
or
in
xor
ret
clc
xchg
inc
sub
enter
push
or
add
push
stc
and
mov
xor
sar
cmpsb
xchg
loop
pop
hlt
insl
out
mov
js
scas
and
dec
adc
inc
mov
repnz
xor
aas
xor
arpl
test
or
push
or
lea
mov
fwait
xchg
cmp
je
mov
cmc
add
std
xorb
aad
xor
add
fdecstp
sarl
mov
mov
or
fs
fs
outsl
xor
test
test
add
push
push
jmp
rolb
fisubl
insb
pop
sarl
cmpl
clc
ja
lea
pop
pop
repz
daa
add
incb
or
js
inc
mov
add
jp
jp
stc
fdiv
mov
mov
mov
add
loopne
fcompl
push
inc
lret
cli
cld
ja
jg
pop
jl
cwtl
dec
in
and
outsb
jo
je,pn
adcb
pop
rcl
sbb
data16
and
clc
in
mov
mov
xchg
xor
out
mov
pop
dec
fucomip
pop
daa
sbbb
hlt
or
mov
in
outsb
dec
mov
or
das
cmp
fcmove
stos
xor
xorl
hlt
xor
inc
test
bound
adc
and
inc
xor
cli
call
cmpsb
add
fcomi
xchg
pusha
fsubrp
push
jns
nop
bound
pop
mov
xchg
push
or
xchg
xchg
push
repnz
push
addb
cmp
out
movsl
and
icebp
mov
adc
or
jns
rclb
dec
xor
pop
cmp
or
scas
sbb
jge
nop
inc
lret
add
push
mulb
ret
mov
movsl
mov
mov
fstpt
in
xor
insb
mov
sbb
rcrb
push
cmp
mov
cmp
and
dec
dec
and
jne
sub
outsl
stos
jns
std
jp
inc
pop
pop
jae
pop
mov
insl
cmp
jmp
out
lcall
orb
std
push
inc
or
push
jno
xor
popf
clc
jb
and
mov
jmp
scas
aas
cmpsl
sbb
mov
xor
mov
adc
out
push
jmp
ss
mov
inc
add
add
mov
les
push
jo
sbb
inc
nop
test
push
and
int3
inc
outsb
pop
nop
aam
jns
mov
aaa
movsl
les
push
pop
ret
xor
or
jg
mov
jmp
cmp
iret
lods
inc
sti
xor
dec
lds
clc
lds
inc
inc
loop
cmp
add
and
shlb
sbb
fwait
sarl
pop
jge
scas
sub
les
mov
inc
push
mov
mov
pop
cmp
clc
sbb
lock
pop
mov
aam
mov
movw
fwait
ds
mov
lahf
test
add
mov
push
fldt
mov
jo
jne
call
xor
sbb
fstpt
jae
cld
pop
insb
test
test
adc
fildll
sub
jbe
push
div
push
jne
mov
jp
xchg
pop
addb
call
adc
sahf
xchg
stos
dec
lahf
stos
mov
in
and
scas
push
mov
xor
xor
jl
mov
mov
mov
les
or
sbb
mov
jle
push
push
stos
stos
mov
sbb
js
mov
mov
or
jo
out
adc
mov
add
pop
stos
fistpll
mov
dec
cmp
bound
push
mov
jmp
push
mov
hlt
xchg
pop
mov
hlt
lcall
lods
shlb
icebp
test
int
mov
inc
mov
and
repz
xor
lods
jmp
inc
stos
xchg
cmpsb
xchg
dec
dec
pop
push
dec
and
cmp
or
mov
cmpsl
xchg
xchg
rcll
insl
repz
aad
xchg
mov
push
xor
icebp
rolb
pop
gs
inc
fsubrl
lret
xlat
jmp
ja
fwait
iret
cmpsl
mov
sbb
inc
in
fucomi
lods
in
clc
inc
jge
push
imull
and
jle
or
dec
lcall
mov
ja
mov
add
imul
cmpb
push
inc
cmp
outsb
daa
fwait
lcall
call
outsb
sub
jmp
mov
movsb
dec
jg
dec
xchg
lcall
adc
shrl
jl
out
adc
pop
add
stos
jne
add
push
arpl
hlt
fists
cmp
adcb
fmuls
dec
jne
push
pop
jle
adc
je
mov
lea
fildl
mov
mov
xor
cltd
sbb
pop
and
sub
inc
sub
add
cmpsb
ret
push
cmpl
cwtl
lock
lret
xor
add
dec
lods
jb
imul
push
fs
call
mov
loop
xor
dec
pop
xorl
push
adc
aad
jecxz
xchg
and
and
sub
scas
mov
mov
mov
push
sbb
xor
call
jle
lcall
movl
mov
cs
and
insl
sub
mov
ja
mov
lret
arpl
aas
mov
ss
cmc
xor
push
pop
sbb
aas
ja
repz
in
push
cmp
push
rclb
pop
sbb
lods
sub
inc
jp
imul
xor
add
hlt
xchg
in
test
push
stos
xor
stos
sbb
sub
jb
add
fwait
jg
push
stos
sbb
jl
pusha
push
notl
mov
inc
mov
mov
ljmp
ds
cwtl
or
and
jl
sbb
rcrl
sbb
push
call
lds
adc
or
xor
xor
testl
cli
sti
dec
xchg
xor
inc
popf
idivb
sbb
and
sub
je
and
aas
xor
mov
jecxz
mov
cltd
cmpsb
jnp
dec
inc
mov
dec
push
cwtl
lock
xchg
cltd
adc
pop
xor
inc
add
aad
push
ror
arpl
jnp
aas
add
rorb
pop
jnp
sbb
inc
out
xor
stos
xor
xchg
pop
stos
sti
push
dec
xchg
or
inc
add
fwait
push
inc
stos
and
aaa
mov
xchg
add
jno
jle
std
adcl
xchg
push
pop
loop
andb
lods
cmp
sub
faddp
movsl
loop
fcom
push
cld
je
mov
in
or
insl
mov
dec
inc
popa
mov
hlt
cmp
xor
popa
ds
cmp
jg
into
push
andl
sbb
and
mov
stos
call
pop
ffree
repnz
movsl
mov
imul
cmp
aam
clc
push
push
fistpl
inc
test
jmp
mov
sub
stos
fadd
xlat
loop
stos
pop
jbe
lods
inc
dec
cmp
jo
adc
aas
dec
or
daa
test
add
gs
or
pusha
sub
push
dec
push
push
imul
cld
ja
loopne
xchg
sbb
mov
hlt
xor
addr16
add
xor
setg
xchg
inc
push
sbb
sub
xor
pop
in
sub
mov
adc
jne,pn
pushf
fstpl
mov
outsb
test
mov
and
sub
out
imul
mov
lcall
dec
cmovns
add
jp
aam
punpcklwd
lahf
xor
cwtl
sahf
enter
xor
mov
je
movsb
aad
das
adc
push
adc
xchg
mov
icebp
xor
pop
add
cli
sbb
pop
mov
push
pop
inc
xor
jge
xchg
leave
enter
fdivrl
pop
vpextrw
lods
mov
pop
adc
clc
jge
or
imul
scas
push
daa
jnp
in
pop
ret
jb
jp
cmp
add
jne
js
sub
or
aaa
dec
movsb
fstl
lret
js
aad
or
das
loope
das
shrl
int3
add
xchg
subl
lea
out
push
js
lds
mov
fsubs
icebp
and
daa
fst
fucomi
cmc
and
dec
xchg
pop
bound
xor
decl
lds
jmp
pop
ljmp
jo
stos
bswap
jno
nop
loope
in
daa
mov
sahf
data16
push
jmp
call
lret
das
les
pop
cmpsl
and
mov
xor
icebp
xchg
nop
jnp
jno
push
xor
fbld
lahf
push
ret
and
mov
iret
sub
jae
ret
stos
fistpll
pop
daa
sbb
mov
adc
adc
sbb
inc
outsb
sarl
and
mov
push
movsb
jne
add
notb
xor
push
pop
jmp
and
inc
mov
aas
mov
dec
sbb
setb
mov
pushf
sbb
aam
movsb
sti
bound
and
xor
jmp
aaa
mov
jns
push
fnclex
divb
notl
jmp
les
pop
mov
sub
lock
inc
aam
ljmp
fwait
and
aam
mov
outsb
ds
pushf
cwtl
movsb
push
mov
hlt
mov
enter
xchg
or
mov
hlt
mov
ds
cmpsb
pop
push
ficoms
fstpl
xchg
out
add
lahf
jne
rcll
ret
mov
in
stc
sub
shll
mov
imul
int3
stos
mov
mov
insb
cmc
aas
pop
cmp
test
fsin
inc
mov
fstpt
insb
mov
xor
xor
ljmp
sub
jg
clc
inc
add
adc
cli
and
std
aaa
mov
xlat
shrb
cmp
dec
adc
mov
cmp
add
xchg
push
adc
outsl
cld
ljmp
icebp
pop
push
adc
mov
inc
repnz
sub
repz
push
loope
ljmp
xchg
nop
ss
jae
lret
dec
add
or
inc
fisubrl
push
ljmp
and
cs
nop
sub
stc
pop
sti
lahf
cmp
daa
sbb
fwait
mov
add
ja
mov
lret
shr
outsl
inc
pop
loopne
mov
sahf
and
repnz
stos
jno
cmp
jns
nop
lds
aad
clc
sub
ds
sub
pop
xchg
mov
add
push
iret
pop
xchg
clc
push
cltd
test
jmp
inc
dec
jmp
and
add
and
push
in
ljmp
dec
sbb
sbb
jl
icebp
push
push
fists
loope
sub
cmp
jg
lea
lret
popa
rorb
ret
enter
or
push
xor
mov
daa
lds
test
pop
sarl
ds
sub
loope
loop
popf
stos
adc
push
enter
pop
popl
mov
in
mov
adc
icebp
test
dec
lcall
add
push
jp
adc
es
adc
sub
ss
sub
mov
shrb
jmp
and
sbb
inc
mov
or
adc
in
mov
xchg
arpl
sbb
clc
iret
jb
pop
mov
mov
inc
shl
add
dec
adc
lds
add
loop
fwait
dec
jmp
imul
test
dec
std
into
and
fadds
in
test
es
adc
adc
ror
add
pop
dec
push
call
cmp
movsl
mov
jmp
cs
cmp
push
sub
ja
loopne
movsb
pop
test
ret
dec
add
cmp
loope
testb
pop
dec
out
xchg
pop
add
inc
leave
xor
mov
loopne
clc
push
or
xlat
movsl
mov
push
fldt
or
jmp
pushf
lret
rcr
scas
test
jg
loop
inc
push
loop
add
scas
in
jmp
inc
push
fiaddl
inc
pop
mov
inc
mov
add
mov
mov
xor
test
setge
jne
adc
das
dec
inc
jg
ljmp
in
loop
jl
cltd
mov
mov
pandn
jno
and
mov
jmp
out
les
popa
push
idivl
bnd
ds
out
jae
popl
xor
xlat
mov
pop
inc
fisttpll
in
xchg
lods
or
mov
popf
inc
ds
stos
enter
leave
ror
cld
push
or
test
pop
ret
js
and
clc
mov
push
in
mov
pop
rorb
js
sub
pop
or
push
cs
mov
mov
adc
cmp
int3
cmpsb
popa
in
jg
adcb
out
xor
add
lahf
xchg
jmp
sahf
xchg
xchg
mov
dec
push
in
push
lahf
sbb
and
call
popl
mov
ds
xchg
incl
mov
mov
inc
sarl
jb
mov
fisttpll
lret
mov
std
mov
mov
mov
inc
movsb
cmp
dec
xor
mov
jl
in
xor
adc
cld
lcall
arpl
imul
inc
cwtl
sbbb
cmc
xchg
daa
jl
xor
popaw
sub
jb
add
in
mov
pop
cmpsb
stc
or
scas
aad
mov
es
jne
mov
je
xor
jecxz
add
sub
addr16
push
jb
mov
stos
push
fwait
sbb
jp
mov
sbb
add
pusha
add
sbb
int3
lea
das
lret
xor
inc
sbb
popa
dec
add
jno
pop
mov
lea
mov
cmpsl
movsb
push
sub
adc
ja
jo
sarb
xchg
shr
stc
rorl
jp
xchg
fmuls
mov
stos
aaa
mov
sub
cmp
dec
stc
jno
dec
loop
lret
or
sub
sbb
jp
sub
add
xchg
mov
add
xchg
inc
pop
pop
nop
sub
fucomi
imull
pop
lcall
add
hlt
arpl
jl
dec
outsb
mov
xchg
inc
rcrb
sbb
arpl
movsb
out
or
movsb
in
add
sbb
test
lock
pop
dec
xchg
push
cmp
xchg
sarb
or
fisttpl
repnz
outsl
mov
cltd
jge
cmpsl
inc
jo
nop
ss
adc
push
mov
xor
pushf
jg
mov
aam
mov
sub
sub
andb
cmp
inc
xorl
dec
ds
sti
cwtl
popa
mull
adc
cmc
in
sbb
in
aad
cmp
nop
pop
adc
lods
js
daa
pop
push
or
outsb
cld
lea
adc
out
int
sbb
in
loop
and
cmp
cltd
jg
pop
inc
adc
scas
mov
test
jo
mov
rorb
add
call
jmp
push
loopne
and
enter
mov
shl
or
xor
jno
xorb
aad
mov
mov
stc
xor
bound
sbb
ret
mov
sub
and
pop
xchg
cld
jo
and
mov
pushf
repz
xchg
out
dec
mov
je
ja
add
sbb
sti
push
mov
sahf
insl
loope
adc
je
mov
dec
push
fidivrs
mov
dec
cmp
sbb
mov
jae
sti
icebp
nop
xchg
sbb
sub
test
rclb
adc
inc
out
add
dec
out
popa
or
out
push
xchg
lret
mov
nop
clc
lods
xchg
repnz
dec
cmpsl
jns
call
inc
cmc
and
sarl
aam
sti
sub
out
push
and
dec
cmpsl
int
xor
adc
inc
xchg
out
movsl
mov
mov
add
add
aas
pop
movsl
stc
rcr
push
pop
int3
inc
push
lret
push
adc
sbb
push
and
std
jo
pop
push
movsb
xor
xchg
into
cs
out
cli
jmp
adc
mov
jl
icebp
dec
aam
lret
loop
fcomps
mov
out
repnz
lahf
add
icebp
add
push
xchg
fadd
sub
stos
les
in
mov
mov
sti
out
insb
nop
stos
or
mov
fwait
ret
jb
xchg
jae
aam
leave
sbb
mov
xchg
mov
loop
inc
adc
dec
pop
push
sbb
xchg
sbb
or
adc
xorb
imul
icebp
lahf
or
push
push
sub
frstor
out
xor
mov
sbb
imul
popf
mov
xchg
lods
xchg
push
fists
out
out
or
pop
imul
outsb
and
out
jl
xchg
cmp
mov
xchg
jmp
push
and
push
aad
test
and
in
dec
inc
adc
jne
jbe
ja
dec
test
fidivrs
les
xor
popf
cmp
mov
icebp
inc
aam
lea
add
push
imul
jbe
or
notb
popa
sbb
mov
rolb
fisubl
jns
in
js
lds
in
ret
xchg
mov
rorl
adc
mov
pop
lea
xchg
push
pop
imull
nop
lcall
lcall
cmp
ja
js
in
jl
arpl
cmp
mov
sti
test
shlb
dec
scas
jne
daa
ret
push
mov
add
mov
sub
hlt
outsl
push
mov
stos
loop
mov
mov
ficoml
lret
add
jae
push
leave
sub
sub
adc
sub
sbb
notb
into
push
and
scas
shll
aaa
mov
mov
jnp
push
xor
in
ret
stos
xchg
push
dec
dec
popa
mov
cltd
push
or
sub
test
push
outsb
int3
sbb
xchg
xchg
fbld
hlt
shrl
sahf
fldcw
test
aas
inc
cli
and
fildll
mov
push
popa
repnz
in
push
sub
scas
shlb
cld
cwtl
shlb
add
mov
out
pop
sbb
in
inc
orb
add
adc
in
mov
jne
mov
imul
push
aaa
dec
add
sbb
sbb
cmp
adc
sar
cli
or
dec
jmp
pushf
in
mov
jp
pop
movsb
xchg
push
mov
orl
inc
imul
mov
xor
das
xchg
inc
cmp
sub
popa
mov
add
outsb
jne
imul
sub
add
xchg
jb
into
je
int3
xchg
scas
jl
aaa
or
push
aam
add
pop
adc
mov
shl
dec
imul
sub
or
mov
xor
clc
fldl
dec
jge
fucomi
repz
sbb
test
mov
es
jns
dec
arpl
cmp
mov
inc
mov
cmp
xor
cmp
mov
mov
xchg
dec
sahf
inc
test
cmpsl
and
mov
popf
add
push
adc
sbb
and
idivb
rolb
mov
mov
jo
fucomp
inc
mov
inc
and
sub
adc
in
cmpsl
push
shrl
fisubl
cmpsl
sarl
and
push
cld
sbb
mov
je
xor
cltd
aas
add
mov
hlt
push
insb
jo
cli
mov
pop
sbb
rcll
adc
pop
fisttps
dec
cs
js
cmc
fdivl
addr16
and
lea
mov
neg
test
cltd
outsl
out
adc
sbb
jno,pt
mov
and
or
jb
lahf
push
sahf
mov
pushf
dec
mov
jl
into
loop
lahf
test
and
adc
das
loopne
push
or
out
push
cltd
call
negb
lret
outsb
xlat
mov
jge
repz
jge
push
mov
int3
jp
addl
lods
stos
lcall
cmp
popa
and
cwtl
mov
mov
inc
mov
stos
dec
cmp
jno
fidivl
repnz
mov
repz
add
ja
sbb
cmp
push
repz
mov
sub
pop
or
nop
inc
adc
out
xlat
mov
jb
push
mov
mov
adc
pop
dec
fwait
lds
sbb
and
orb
push
aad
out
fwait
repnz
dec
loope
adc
xchg
or
sbb
pop
pop
push
sub
inc
push
daa
std
mov
cmc
xor
lods
mov
inc
or
into
pushf
xchg
sbb
filds
fistl
test
inc
inc
ret
data16
mov
jl
dec
dec
std
adc
pop
fwait
pop
push
adc
fwait
jns
dec
lret
add
cmpsb
pop
mov
iret
std
mov
push
fnsave
jle
loopne
call
lahf
movsl
mov
push
pusha
imul
xlat
jecxz
and
xchg
xchg
and
call
arpl
or
jns
scas
jnp
andb
loope
ss
sub
push
or
pcmpeqd
dec
or
cwtl
insl
rolb
dec
repz
push
mov
jmp
in
adc
ja
ja
shll
adc
xchg
sub
ds
icebp
out
xor
pop
loopne
repnz
insl
fdivs
insl
ja
sbb
cmp
cmp
cs
xchg
pop
movsb
push
jp
mov
fcomps
enter
test
cwtl
adc
xor
lea
push
or
addr16
and
jmp
lret
fsubrs
mov
imul
fbstp
pop
push
addr16
test
sbb
cmp
pusha
push
or
sub
jb
mov
addb
pop
xchg
cmp
jp
mov
dec
insb
push
test
stos
cmp
sub
and
mov
mov
pop
sarb
push
xchg
xor
cmp
mov
xchg
cltd
lahf
aaa
xchg
push
jecxz
fcoms
ds
ret
pop
cwtl
cmp
mov
pop
cmp
cli
cli
repz
mov
xchg
xor
mov
jmp
push
jg
int3
pop
pop
pop
add
loop
cld
adc
jecxz
xor
mov
and
in
xor
dec
jb
xor
add
push
aad
xchg
insb
inc
sub
jg
mov
scas
imull
adc
push
pushf
sub
ret
and
lret
inc
and
iret
inc
mov
das
int
rcll
lahf
mov
jmp
imul
jo
mov
cld
ja
xchg
xchg
ljmp
adc
mov
ret
lock
xchg
inc
mov
icebp
inc
lahf
aas
push
jae
rcrb
sbb
int
lods
jo
and
xchg
xchg
push
xchg
aas
inc
push
xor
xor
dec
cwtl
jp
call
adc
xchg
xor
dec
fdivs
rcll
cmpsl
sbb
arpl
outsb
adc
mov
fwait
jp
nop
lds
pushf
ja
mov
mov
add
mov
mov
push
adc
xor
gs
mov
xchg
js
sbb
pop
fs
stos
test
sbb
jnp
and
outsl
xor
repnz
ret
jo
fisubrs
and
xchg
testl
mov
jle
fs
and
dec
pop
js
sub
mov
mov
push
fs
mov
cmpsl
in
pop
sub
jb
jae
and
cmp
sbb
leave
fnstsw
outsl
stc
xor
fbstp
sub
push
push
int
sar
addr16
out
sbb
or
jecxz
cmp
stos
ljmp
push
push
mov
out
jecxz
rcl
add
add
insb
cs
pop
frstor
mov
lods
sub
sbb
loopne
mov
dec
add
mov
repz
cmc
inc
sbb
push
xchg
popa
jmp
push
repz
jae
leave
push
xchg
notb
add
pop
jae
jns
dec
std
mov
cs
xchg
sub
out
in
dec
jmp
mov
dec
push
rorl
sub
loopne
mov
repz
adc
sub
and
or
cld
inc
leave
sbb
inc
outsl
jae
dec
iret
fimull
inc
outsb
mov
sbb
daa
fdivrl
or
int3
add
int3
xor
std
scas
adc
fadds
mov
gs
pusha
fs
lock
gs
jp
jge
jne
movsb
cmp
jno
decl
insl
fildl
xchg
rclb
xorb
test
out
pop
mov
xor
jg
lea
push
imul
fs
jnp
add
stc
fdivrl
add
mov
or
imul
movsb
mov
stc
imul
pop
add
add
jge
fisubs
cmp
and
sub
in
mov
sbb
pushf
rep
or
mov
cmpsl
jns
sbb
sub
scas
pop
incb
dec
inc
add
inc
lcall
xchg
lcall
mov
loopne
mov
test
xchg
and
mov
pop
xchg
sub
jge
outsb
mov
test
les
or
push
and
icebp
inc
testl
mov
sbb
sti
into
dec
push
loopne
sbb
int
mov
mov
push
cltd
ljmp
fisttpll
je
sub
sbb
lods
pusha
sbb
out
fcmovne
mov
pop
xadd
xor
fstl
cmp
movl
call
cmpsb
adc
loopne
dec
inc
jne
jo
xor
stos
cmp
jecxz
dec
rol
pop
jg
das
push
sub
dec
dec
mov
fnstsw
test
cmp
push
jo
or
xchg
rolb
pusha
adc
jae
sti
jmp
fs
mov
les
sbb
xchg
nop
clc
loopne
outsb
cwtl
jb
insl
adc
cld
ds
dec
inc
adc
push
or
pop
fwait
call
xchg
iret
outsl
dec
out
mov
vmwrite
sub
add
cld
lcall
test
pop
dec
mov
and
sahf
or
xchg
xchg
fiadds
cmp
mov
push
pop
adc
dec
sbb
push
mov
sarl
push
xchg
mov
push
orl
pop
jge
movb
sbb
pop
lods
clc
jle
shll
in
mov
mov
cmp
cmc
dec
sub
inc
jl
dec
mov
lret
in
and
lcall
cli
sub
push
imul
out
aad
sub
mov
loop
call
pushf
aas
mov
push
repz
add
stc
popf
popa
enter
inc
cmp
repnz
mov
inc
stos
mov
fwait
xchg
xchg
pop
jns
jne
mov
sub
mov
iret
outsl
out
cli
shll
neg
test
cltd
test
or
and
adc
loope
test
xor
jecxz
dec
xchg
add
test
xor
lea
mov
mov
lret
aam
lods
push
aad
fs
inc
jecxz
adc
stos
cmp
jg
lcall
ljmp
push
mov
cmp
mov
xor
stos
jge
mov
inc
outsl
or
sbb
insb
adc
cli
int3
mov
xor
scas
sbb
iret
test
jb
jb
out
mov
sbb
fs
test
cmpsb
lods
cmp
scas
or
jno
sbb
daa
adcl
add
ficoms
pop
outsl
rcpss
or
dec
test
push
roll
popf
ja
push
pop
sub
pop
mov
push
jne
push
jge
xor
jmp
xchg
cmpsb
xchg
mov
pop
mov
test
pop
push
adc
sub
push
outsb
lahf
and
xchg
pop
es
pop
aas
xchg
mov
lods
ljmp
fidivrs
das
fidivrs
mov
cwtl
out
inc
sahf
sbb
push
push
inc
and
int3
aad
rcrl
xor
loope
lcall
sub
inc
jg
hlt
orl
insb
mov
insl
inc
add
jmp
mov
les
adc
xor
add
dec
out
outsb
fidivl
insl
mov
pop
push
add
mov
jle
stc
ret
sub
adc
mov
pop
loop
mov
notb
inc
hlt
and
imul
cmp
xchg
out
push
ljmp
jecxz
mov
mov
mov
xor
inc
push
mov
xor
push
inc
js
stos
sbb
dec
lea
cmc
pop
xor
and
mov
loopne
push
les
xor
dec
aad
xorl
fisttpll
nop
jnp
xor
mov
gs
fwait
mov
adc
ret
test
push
push
push
fstl
lret
sbb
sbb
loopne
cmpsl
sub
inc
mov
mov
and
mov
mov
dec
addl
test
add
push
mov
mov
dec
fstl
add
mov
icebp
push
loopne
push
arpl
mov
notl
pop
xor
flds
pop
sub
pop
data16
out
enter
push
shlb
dec
sub
roll
pop
enter
fistl
scas
sbbl
adc
pop
mov
fdiv
int
testb
cmpsl
sub
jmp
xchg
jp
lret
popf
jb
arpl
mov
outsl
lahf
imul
fdivr
cmp
daa
pop
push
mov
sub
sarb
push
inc
inc
lods
je
pop
lea
aaa
pusha
test
sub
imul
outsb
movsb
jno
hlt
js
adc
clc
add
mul
movsl
in
rclb
jmp
xlat
jl
xor
daa
sbb
rclb
shll
popa
jbe
cmp
mov
jp
sarb
mov
iret
dec
aaa
adc
clc
jb
xchg
lret
xchg
jmp
sub
add
add
shlb
pop
xchg
addr16
push
test
pop
cmp
std
stos
mov
cmp
enter
ds
lret
jge
mov
out
loope
add
add
loop
scas
loopne
in
mov
dec
loopne
mov
push
xor
and
push
xchg
nop
sbb
push
xchg
sti
mov
pop
mov
test
inc
es
std
jns
dec
out
mov
insl
add
fcmovb
inc
orb
daa
ss
jns
lcall
cmpsl
mov
dec
dec
fsubs
mov
daa
hlt
insl
or
xor
in
shll
lahf
lahf
or
and
dec
fiaddl
jecxz
jecxz
jo
ret
int
and
testl
sbb
push
outsb
stc
fwait
pusha
xor
imul
xor
scas
adc
outsl
push
and
or
jbe
sbbl
cmp
mov
inc
and
cmp
lahf
scas
push
scas
pop
insb
daa
fildl
sub
enter
fsubrl
pop
fwait
cmc
arpl
xor
sbb
cmpl
cmpl
in
and
rorl
xchg
sbb
lea
rclb
popf
adc
mov
adc
sbb
in
mov
add
add
add
leave
shll
sahf
xchg
sub
int
lahf
cli
push
stos
rolb
push
lahf
popf
sti
stos
jbe
int
icebp
xor
sbb
fcmove
lcall
hlt
cmc
push
or
xchg
shll
and
out
lods
mov
or
adc
sbbl
ja
adc
and
in
pop
sbb
aaa
pop
roll
xchg
inc
and
ret
call
and
xor
sub
shlb
pop
or
emms
out
inc
pop
std
sub
clc
jne
sub
inc
adc
mull
arpl
mov
decb
lds
mov
sub
pushf
sub
lret
stos
aad
es
aaa
adc
xor
dec
sub
subl
arpl
mov
insb
mov
das
test
cmp
cmpsl
mov
popf
test
xor
repnz
cmc
xchg
dec
subb
push
mov
lods
dec
and
jmp
insl
cmp
add
mov
scas
or
les
movsb
daa
in
ja
inc
stos
cli
adc
inc
pop
pop
push
and
xchg
inc
ljmp
sub
lea
mov
daa
adc
xchg
xchg
dec
sbb
cmpsb
mov
sbb
cli
mov
movsl
lcall
xchg
in
aas
fdivr
sti
adcl
inc
pushf
leave
into
cmc
test
andnps
sub
nop
mov
ja
jnp
fcoml
jecxz
in
fisubrs
das
sbbb
sbbb
sti
repnz
ljmp
scas
rclb
mov
outsb
stc
leave
or
jb
sbb
in
pop
daa
push
js
movsb
pop
lcall
test
inc
clc
popl
lds
adc
pop
add
bound
movsb
out
xchg
dec
pusha
lahf
cmp
push
pop
stos
ror
inc
fdivrl
mov
scas
sub
mov
fsts
push
or
fistpl
pop
fmull
mov
fs
ja
test
sub
out
frstor
out
xor
mov
scas
inc
nop
rorb
hlt
decl
push
push
in
jae
cmpsb
test
push
push
add
cmp
enter
inc
gs
xchg
cmp
cmp
shll
jne
movsl
jb
gs
stos
enter
repz
cwtl
sar
test
jno
sbb
jmp
cmp
sub
ror
ficomps
fnstcw
mov
pop
fsubrp
pop
sub
in
neg
xor
jne
pusha
rcrl
fdivr
push
loop
push
pop
sahf
lahf
dec
ror
lret
clc
iret
push
imul
push
cld
mov
add
in
sub
and
add
xor
mov
sub
lret
push
pop
inc
arpl
mov
and
test
push
or
out
adc
adc
daa
insb
mov
sbb
das
jmp
push
orl
or
and
jg
xor
and
test
ret
cli
ja
popa
and
inc
dec
imul
shlb
popf
shrb
push
aaa
adc
inc
push
dec
sbb
inc
jl
jle
test
fldl
leave
xchg
inc
cmp
or
xchg
cmpsl
scas
mov
stos
das
cmp
loop
mov
rolb
jg
dec
xor
pop
sbb
addl
add
out
push
inc
and
jb
mov
ss
add
adcb
dec
sbb
lret
imul
xchg
mov
sbb
adc
je
jae
jnp
out
into
sub
faddl
pop
inc
cltd
shrl
addr16
push
and
aad
fdivrl
popa
out
js
sbb
lret
mov
shr
sti
leave
jecxz
push
and
cmp
cwtl
loop
sub
inc
aam
cmp
fucomp
bound
push
mov
sbb
loope
pop
mov
jns
dec
xchg
imulb
test
iret
lret
mov
or
stos
loop
sub
mov
aas
test
out
adc
test
xchg
xlat
xchg
mov
pop
push
dec
sub
pop
fimuls
fucomip
cmp
sbb
mov
fld
mov
mov
mov
mov
pop
test
enter
test
in
lods
call
ficompl
jge
or
mov
sti
push
dec
or
repnz
add
js
sbb
sub
adc
ss
push
subl
cmp
xor
leave
sti
in
xchg
stc
lcall
fs
push
outsl
cmpsl
in
dec
push
add
cmp
inc
sbbb
xchg
ret
adc
sub
ret
mov
mov
mov
sti
insb
shrb
std
sbb
sub
mov
mov
addr16
sahf
out
mov
insb
xchg
push
sbb
ficoml
fucomip
mov
cmp
pop
cs
adc
mov
in
outsl
shrb
push
xchg
jg
repnz
cmp
ljmp
dec
xchg
push
in
push
mov
rcr
lock
sub
xchg
mov
mov
mov
add
inc
cmp
loopne
and
jns
aad
loopne
das
loop
and
lret
add
pop
inc
cmp
push
xchg
dec
scas
add
in
int
push
les
mov
dec
dec
int3
pop
loopne
out
mov
adc
and
shl
fwait
call
stos
sub
dec
sarb
xor
ljmp
test
jmp
jbe
xor
fistps
lock
mov
cltd
inc
outsb
popa
mov
ljmp
lret
cmc
add
out
sub
mov
ret
imul
inc
je
js
cmp
dec
xor
pop
add
sbb
mov
jnp
lret
mov
clc
aaa
push
pop
loope
push
imul
sub
rol
and
xchg
adc
cmp
mov
inc
fidivs
das
sub
dec
ss
pop
pusha
mov
push
dec
popf
call
dec
sahf
adcb
xchg
and
push
sahf
addb
pop
adc
adc
test
cmp
sub
lods
orl
sub
into
jp
sub
or
fbld
mov
imul
cmp
mov
orl
fisttpll
push
lods
loopne
mov
sarl
mov
xor
out
pushf
in
loop
imul
out
or
outsl
xor
js
pop
cwtl
shrb
sub
imul
loope
mov
xchg
adcl
js
inc
push
je
aam
mov
movsb
push
cmc
lret
and
or
stos
cmp
out
or
xor
fisubl
mov
lcall
jecxz
and
outsb
mov
fmuls
add
xchg
push
xchg
xchg
pop
cmpsl
mov
sub
push
out
push
or
inc
sub
cmc
pop
add
movsb
inc
fsubs
movsb
mov
mull
dec
rorb
hlt
xchg
or
adc
pop
rcrl
rclb
xor
dec
jno
inc
pop
xor
stos
mov
lcall
mov
xchg
sbb
dec
lods
addr16
inc
cmp
push
or
push
xchg
mov
sub
popf
pop
jmp
or
outsb
pop
xchg
roll
jp
aas
cmp
aad
push
sub
push
mov
pop
pop
or
or
in
cmp
sbbl
loope
push
mov
push
inc
in
xor
repz
das
jae
arpl
inc
dec
cmpsb
mov
in
andb
es
or
or
sbb
mov
mov
subl
xchg
ja
int
mov
loopne
fdivrl
int3
ud1
xchg
loop
stos
cmp
jno
and
iretw
and
outsl
pop
lods
inc
mov
nop
repz
jp
dec
sub
inc
adc
gs
fst
cmpsb
jmp
mov
cwtl
mov
cltd
push
enter
test
mov
fs
rcl
mov
test
jo
movl
dec
pop
aaa
add
xlat
cmp
pop
scas
lods
in
dec
bound
loope
cmp
test
add
sbb
and
aaa
leave
aas
idivl
in
callw
stos
mov
inc
mov
and
xor
ljmp
push
imul
cmpl
leave
jmp
mov
xor
mov
push
fidivrl
inc
mov
xchg
dec
adc
rcl
dec
ds
cwtl
addr16
pusha
int
inc
or
lcall
mov
outsl
add
lods
cwtl
je
fisubl
xchg
or
cmp
adc
or
std
cld
push
add
xchg
decb
adc
push
loope
xor
lret
cld
sub
mov
call
inc
int3
inc
mov
mov
mov
xchg
es
std
xchg
push
jmp
test
aas
ret
cmp
loop
dec
aam
das
mov
lods
jnp
roll
jnp
mov
adc
scas
ljmp
cmpsl
sbb
js
fs
ror
and
push
mov
stos
push
lahf
dec
inc
jg
dec
out
addr16
sti
dec
mov
das
xchg
dec
popa
jae
xor
dec
loope
lret
push
xor
test
dec
fdivrs
xchg
push
sbb
xor
mulb
dec
ret
jae,pt
sbb
insl
mov
pushf
xor
dec
cmp
mov
ss
out
repz
pop
inc
fcoml
pop
pop
jl
nop
pop
imul
outsl
pop
and
lcall
pop
shll
cld
js
mov
adc
gs
jb
push
leave
lahf
popf
adcl
shrl
jg
sub
inc
jno
sbb
fs
movsb
decl
fwait
lahf
dec
lcall
dec
fidivl
pop
xchg
in
das
sub
push
adc
fdivrl
jae
das
bound
pop
insl
xchg
dec
adc
dec
inc
int
cld
push
xchg
pusha
push
loopne
mov
xor
fadd
pop
ss
sbb
jb
inc
pop
inc
int3
push
cmpsb
out
lret
sbb
mov
sub
stos
sub
xchg
jno
insl
mov
mov
daa
enter
xor
mov
fldl
lods
arpl
sbb
inc
and
popf
mov
jb
sar
popf
add
or
jecxz
jae
sti
cmp
scas
dec
test
xchg
push
in
pop
sbb
mov
fwait
push
sti
push
loope
sub
loopne
fidivrl
jb
pop
pop
mov
mov
fistps
cmp
cmp
mov
push
loopne
int3
jo
xor
clc
in
push
lret
jo
ss
pop
push
out
and
nop
cltd
mov
outsb
jne
push
lcall
andb
mov
push
in
in
add
adc
clc
icebp
cmp
in
jb
daa
xor
in
mov
test
and
jmp
mov
add
das
and
nop
push
les
cmp
pop
pop
cld
aaa
jg
mov
dec
dec
jg
sahf
gs
xor
or
pop
into
jae
or
push
lds
out
addr16
dec
mov
in
imul
and
outsb
fdivrs
std
shrb
add
cmp
jnp
dec
das
cwtl
pop
call
lret
fdivl
push
sti
daa
popf
cli
pop
xlat
testb
or
std
adc
xlat
mov
mov
in
test
push
mov
inc
int3
cld
jge
jb
or
sub
imull
inc
mov
add
lock
insb
cmp
test
addr16
jnp
sbb
mov
xchg
and
mov
imull
xchg
jns
jnp
or
jge
xchg
sarl
fucomip
movsl
lahf
add
gs
mov
or
cld
lods
rcrl
mov
mov
iret
cmc
push
mov
xor
pushf
add
imul
ss
or
movsb
push
xor
push
push
jo
iret
pusha
or
push
sub
outsl
adc
jno
inc
xchg
dec
mov
not
add
addr16
push
mov
mov
movsl
mov
jp
adcl
inc
push
loope
or
or
out
cmp
adc
jo
mov
xchg
push
test
pop
push
inc
in
mov
xchg
push
fildl
sahf
cs
inc
sbb
jmp
mov
push
les
mov
dec
shll
cmpsb
add
outsl
stc
or
sub
jnp
rcrb
or
mov
aam
scas
idivb
push
xchg
es
dec
or
mov
push
addr16
cmp
dec
repnz
ds
xor
cmc
jecxz
fcmove
jecxz
dec
inc
jbe
xor
test
mov
mov
fnstcw
mov
idivb
cmp
sbb
mov
inc
or
jecxz
in
push
jecxz
frstor
pusha
xlat
sbbb
xor
mov
es
sub
mov
cmp
cmpsb
les
and
dec
or
mov
dec
xor
in
stc
stos
in
cwtl
cld
adc
pop
fsubl
mov
int3
xchg
pop
and
pop
push
das
imul
and
daa
into
pushl
out
jns,pn
data16
sbb
call
adc
rcrl
jl
push
stos
xchg
dec
inc
sti
popf
cmpsl
mov
pop
push
out
testb
in
sti
cwtl
push
lods
and
jge
test
cs
in
and
push
adc
nop
movsl
nop
dec
mov
insl
xchg
mov
pop
jns
jp
push
test
push
sbb
cmc
xchg
lahf
notl
out
mov
lds
push
pop
add
adc
mov
repnz
inc
jo
cmc
movsb
mov
mov
or
inc
mov
push
mov
jns
mov
fisttps
dec
xor
es
mov
cmp
loope,pt
xchg
add
add
sahf
push
push
jmp
mov
inc
inc
jno
dec
in
mov
cmc
inc
int3
xchg
pop
push
shld
into
out
sbb
fisttpl
push
mov
ljmp
pop
pop
movsb
jg
xor
es
enter
jnp
jae
sub
jecxz
popf
push
mov
lahf
gs
mov
aaa
repz
mov
cmp
mov
inc
jb
mov
jns
in
xor
push
scas
pop
sbb
stos
loope
jns
xor
jnp
enter
cmp
das
insl
mov
cwtl
sbb
gs
adc
out
dec
rol
mov
loop
test
icebp
dec
ss
and
jo
pop
xchg
mov
movsb
jae
xor
inc
test
aas
lahf
aad
repz
sub
pop
lods
pop
push
test
lret
adc
inc
pop
sbb
in
lahf
lea
cltd
cmp
test
jecxz
dec
pop
shlb
fisttpll
shll
shl
fwait
add
mov
je
inc
push
mov
add
xor
pop
pop
test
js
add
sub
add
lods
cmp
sbb
insb
in
scas
cwtl
jno
aad
pop
adc
mov
fists
in
outsb
and
mov
loopne
mov
orl
pop
cmpsb
cmc
imul
cmp
or
ja
call
or
outsl
bound
dec
stos
mov
mov
add
movsb
mov
outsb
dec
jns
test
mov
pop
stc
je
mov
pop
push
add
aad
xchg
into
es
outsl
jl
cmp
ret
sbb
add
mov
add
arpl
jnp
mov
loopne
jno
dec
je
rcl
fcoms
fldenv
addr16
shll
push
inc
jl
in
out
sub
push
push
push
jne
fldcw
adc
add
jmp
jecxz
bnd
jno
ja
push
push
pop
aam
loop
mov
ljmp
push
in
cmpsl
test
test
rcr
rcr
xor
orl
jnp
shrb
sbb
push
sbb
incb
subl
js
pop
mov
mov
les
adcl
data16
pop
or
rclb
icebp
or
fldt
cmpsb
dec
sbb
push
xchg
add
cmp
jb
sub
mov
cmc
aam
dec
int
pop
mov
loopne
push
jp
out
icebp
cmp
jne
cwtl
lahf
xchg
inc
jne
je
jge
scas
subl
add
mov
fisubs
push
xor
imul
inc
fs
sub
cmp
fadds
sbb
sub
adc
mov
insb
sub
stc
mov
outsb
jle
sbb
pop
lods
mov
cmp
mov
sub
pop
sbb
mov
repnz
or
adc
mov
cmpsb
sub
sbb
repnz
adc
rol
adc
push
and
mov
and
push
shlb
xchg
xor
xor
mov
mov
inc
mov
jne
lret
out
mov
sahf
push
fsubrl
stos
fists
add
xchg
sub
int
std
push
jo
lcall
push
insl
jnp
daa
cld
mov
fiadds
jg
test
stos
dec
jne
xlat
out
insb
insl
andb
or
xchg
mov
cltd
cltd
gs
inc
shll
fimull
lods
pop
push
repz
insb
rcll
sbb
dec
leave
dec
out
or
dec
jo
xchg
outsb
mov
fidivrs
sbb
outsl
inc
ret
add
aad
xchg
jp
iret
mov
cld
cmp
and
pop
adc
fcoml
jecxz
ss
in
ljmp
out
rcrb
xchg
cmp
sbb
fs
out
cwtl
mov
mov
pop
adc
int
mov
add
mov
jl
add
push
pop
push
loop
jno
stc
xor
adc
jmp
stos
call
mov
fwait
or
xchg
pop
ror
and
je
dec
adc
outsb
jle
scas
sub
popa
xlat
sbb
cmp
xor
pop
fcomp
dec
mov
nop
jno
jle
xor
jp
js
xchg
push
add
mov
stos
xlat
pop
mov
ret
xchg
inc
pop
lods
mov
push
loope
in
mov
jmp
push
sub
sub
dec
cmp
test
cli
inc
mov
sbb
and
std
ss
enter
sbb
aas
std
adc
dec
xor
xor
jno
repz
pusha
lods
dec
sub
and
sub
add
inc
pop
add
jns
mov
repnz
mov
inc
mov
daa
jecxz
pop
cmp
enter
out
int3
hlt
fldt
inc
inc
jg
das
inc
sahf
mov
push
scas
inc
xchg
sbb
aas
mov
jb
add
xor
ret
cmc
in
mov
fnsave
xchg
add
push
xchg
pop
xor
rcr
idivb
dec
pop
cs
out
xchg
xor
or
and
dec
cmp
loope
imul
xorl
xor
sti
data16
push
cltd
xor
imul
mov
jp
sub
adc
xor
lods
int3
inc
popf
sar
rcrb
ret
fs
loop
shlb
jle
or
out
mov
pop
arpl
mov
or
cmp
fsts
repz
fisttps
nop
cmp
inc
push
js
xchg
movsl
xor
push
xor
mov
cmp
push
inc
add
mov
cmpb
xor
xlat
mov
add
mov
push
mov
pop
cltd
outsb
clc
mov
pop
add
lock
les
mov
pop
andb
lret
pop
in
push
xchg
add
bound
imull
subb
mov
and
sub
fsubr
adc
ror
fistl
stos
xchg
ds
dec
cld
xchg
push
lcall
add
in
jmp
jb
xor
shll
and
faddl
and
mov
jae
and
cmc
js
aad
aas
mov
add
addr16
out
dec
and
xor
jns
pop
cmp
lock
into
cmp
add
push
xor
gs
push
xor
jecxz
in
mov
add
jbe
mov
jge
add
vpsrlw
arpl
and
mov
jg
jecxz
int3
jno
sbb
and
ljmp
pop
addr16
sub
ficoml
ljmp
test
fs
iret
xor
adc
movsl
rcll
cli
fwait
adc
mov
push
push
sbb
lret
xchg
pop
inc
and
jo
enter
das
stc
push
jmp
pop
insb
int3
icebp
jg
and
cmp
arpl
and
test
outsl
fwait
xor
add
push
mov
shrl
xchg
jne
xor
and
push
mov
dec
and
add
inc
mov
add
dec
inc
xchg
or
nop
inc
mov
std
cmp
xchg
shll
push
nop
call
enter
mov
or
ljmp
xchg
pop
mov
pop
popf
roll
mov
mov
sahf
dec
pop
aas
or
jmp
ljmp
rcr
movsb
jns
sahf
adc
fldl
shr
fsubs
jne
jmp
jnp
dec
out
and
leave
jnp
jno
out
adc
ret
mov
es
sub
ret
dec
mov
mov
xchg
lods
fimull
lods
ffree
fcompl
fld
and
push
std
pusha
jnp
push
stos
imul
sbbl
iret
and
xor
pop
std
sbb
je
xlat
addr16
or
lcall
mov
xchg
fs
xchg
xchg
test
pop
ja
scas
ja
pop
inc
mov
loopne
sbb
es
cmpsl
mov
dec
into
add
add
jle
repnz
xor
jmp
push
in
fildll
xchg
fldcw
push
sub
fsubrs
pop
mov
dec
pushf
xor
xchg
pusha
xchg
sti
cmp
fstpt
mov
add
lcall
cmp
unpckhps
jg
jne
push
lds
jge
lahf
xchg
or
imul
stos
sbb
sbb
aas
into
fadd
xor
cmpsb
and
push
inc
stos
mov
fists
sub
mov
mov
ret
inc
mov
add
jg
test
cmp
jbe
pop
aas
popa
stos
add
mov
sub
or
insb
adc
jno
ds
aam
mov
scas
std
dec
test
sahf
dec
xor
lret
pop
repnz
jmp
jo
inc
xchg
jecxz
inc
jg
inc
jbe
and
adc
jb
sbb
mov
ret
jge
sub
in
iret
xor
sahf
jle
xorb
mov
arpl
mov
adc
push
and
jne
pusha
fimuls
leave
insb
xchg
test
ss
pop
loopne
clc
addb
imul
jae
dec
cmp
insb
jge
cmpsl
out
dec
lods
fwait
mov
mov
jge
imul
adc
and
loope
roll
and
inc
rorl
je
out
into
dec
cmp
sahf
and
xchg
push
mov
ljmp
pusha
pop
stos
out
mov
aaa
inc
ficoml
enter
xchg
pop
rcll
xchg
outsb
add
pop
pop
or
cmp
pop
mov
xor
icebp
mov
dec
mov
add
out
pop
insb
inc
add
pop
mov
pop
ja
cmpsb
cmpsl
jecxz
sbb
inc
cmp
inc
cmc
mov
cmp
push
or
xor
icebp
stc
jbe
es
or
out
shrb
stos
mov
inc
inc
jns
rcr
and
shll
in
stos
sahf
mov
push
lahf
mov
lds
jmp
push
push
add
insl
rolb
iret
dec
pop
cmpsb
sbb
jmp
rep
mov
mov
xchg
popf
dec
xor
mov
jbe
inc
add
sub
pusha
push
mov
and
ljmp
pusha
das
call
xchg
mov
imul
rorb
int
stos
insl
rcl
daa
push
imul
mov
jle
xor
insl
push
mov
push
xchg
jmp
and
sub
or
ja
inc
movsl
jae
in
imul
adc
shrb
cmp
cmp
mov
xor
mov
popa
fidivs
sub
mov
in
pop
push
mov
pop
outsb
push
mov
aas
jg
fcomps
repnz
mov
pop
bound
mov
jecxz
mov
push
xor
cmpsb
adc
inc
pop
loope
dec
test
inc
xchg
dec
sub
clts
adc
aas
inc
fs
dec
jbe
mov
stos
push
pop
add
cltd
aas
sbb
xchg
xchg
xchg
gs
out
rcl
stos
pushf
cld
pop
adc
add
outsl
cld
xor
test
and
pop
shlb
push
test
sub
and
std
lret
mov
or
push
fwait
adc
xor
xchg
sub
push
pop
mov
jnp
mov
jo
sub
mov
pop
sub
fs
fisubrl
sarl
inc
imul
into
aas
sbb
decl
outsl
and
pop
jne
mov
movsl
cmp
jo
pop
dec
sub
push
std
push
fisubl
cmp
out
cmp
push
loopne
dec
outsb
dec
mov
or
mov
sub
out
je
xchg
int
fldt
insb
rol
mov
and
sub
or
movsl
push
fcompl
push
sbb
adc
test
les
loop
fidivs
jp
mov
out
cwtl
loopne
cmp
pop
mov
cmpsb
dec
push
popa
insb
loopne
fdivp
rclb
hlt
or
out
xor
pop
adc
adc
pop
jb
xchg
lret
mov
mov
pop
pop
and
hlt
inc
aas
aad
popa
fdivrs
in
in
fisubrs
ljmp
popf
mov
pop
fimull
and
icebp
cmp
fidivrs
mov
xchg
iret
mov
insl
in
pop
mov
sbb
ret
and
fwait
jmp
add
jne
push
add
sbb
push
repz
inc
sub
leave
mov
dec
inc
imul
loop
and
scas
hlt
testb
or
icebp
jae
movsl
dec
pop
sub
xchg
cmpsl
push
push
ljmp
or
or
rcl
sub
mov
cltd
loopne
xchg
xchg
jl
out
insb
loope
lret
test
aas
mov
push
mov
cwtl
sbb
fcom
lock
mov
jmp
mov
ret
pop
inc
mov
add
lahf
or
add
xchg
dec
in
sub
aaa
test
fwait
jbe
mov
out
mov
in
inc
stc
lods
pop
dec
fcom
enter
jnp
insb
rclb
adc
or
push
push
les
cmp
push
inc
int3
daa
xor
and
hlt
in
aad
out
xchg
dec
push
call
adc
jle
repz
dec
cmpb
rcrl
xchg
clc
movsl
fldt
and
daa
xor
xchg
pop
pop
test
jecxz
and
pushf
xor
xchg
loop
xchg
mov
clc
cmc
jmp
push
cmp
dec
daa
ficoml
je
mov
sti
or
fs
jmp
dec
in
xor
lret
mov
scas
ret
cmp
clc
sub
out
aad
cltd
shl
and
inc
shll
adc
xor
push
stos
std
and
dec
xchg
std
sub
popf
inc
pop
outsb
inc
add
push
out
data16
dec
aad
mov
icebp
addl
xor
xor
mov
data16
arpl
out
mov
jl
and
enter
sub
nop
cmp
in
jns
mov
jno
xchg
gs
into
cmpsl
jo
add
push
sahf
or
sbb
mov
fcom
sbb
dec
cwtl
cmpsb
dec
add
jmp
icebp
push
pop
int3
xor
ret
dec
jo
and
sarb
pop
pop
jmp
jb
fcomi
mov
mov
or
xlat
fsubs
mov
hlt
xor
push
lret
roll
push
push
enter
sub
adc
mov
ret
hlt
dec
push
movsb
push
ret
sti
int3
stc
imul
xchg
dec
into
jae
cmp
jge
mov
fdivrs
dec
xchg
imul
pushf
push
push
lods
in
sbb
inc
movsl
fstps
lock
mov
push
xor
adcb
prefetchw
or
mov
pushf
aam
add
push
dec
gs
mov
cmc
pop
jmp
fisttps
loop
cmp
and
or
imul
push
mov
outsb
popa
les
imul
loopne
push
adc
add
mov
movsb
or
jb
jge
test
jb
xor
int
ret
fsubr
mov
fldl
adc
data16
push
ret
jnp
loope
insl
loope
mov
xlat
pop
mov
imul
dec
shlb
imul
pop
sbb
add
adc
ret
cmp
sub
xchg
mov
loope
dec
sub
shll
mov
ret
iret
cmpsl
mov
fsts
xchg
push
rcrl
push
jle
and
pop
jb
add
inc
xlat
sbbb
xor
fists
pop
jp
xor
push
or
cmpsl
jmp
add
jne
rcl
mov
pop
orb
jae
mov
jecxz
jno
bound
xchg
inc
lds
js
xor
pop
cmc
imul
push
inc
xchg
icebp
in
mov
xlat
sbb
cli
push
les
dec
jle
call
push
dec
out
imul
hlt
stc
call
or
int3
pushf
add
and
ret
aad
pusha
cmpl
push
add
sbb
inc
sarl
or
sub
sbb
call
mov
int
cmpsl
add
jae
aaa
and
rcll
jnp
shll
js
push
lods
adc
rcrl
enter
push
sbb
pushf
divb
scas
xor
int
icebp
mov
data16
test
xor
or
dec
sub
inc
sub
xor
push
jae
insb
lea
lret
jo
hlt
mov
jp
sub
jle
push
pushf
mov
je
test
adc
push
and
push
mov
psrld
mov
fcomps
push
hlt
ss
outsb
rcll
and
inc
sarl
in
push
adc
pop
cltd
push
pop
cmpsl
in
pushl
xchg
pop
aad
andl
stc
inc
ss
movsb
cmpsl
testb
fwait
add
inc
addl
imul
shll
icebp
xchg
mov
stos
mov
pusha
adc
in
sbbl
sahf
cmp
xchg
orb
test
dec
rcr
sbb
mov
shll
or
mov
mov
mov
cmpsl
sahf
push
mov
or
mov
mov
sub
jb
sub
popf
icebp
cli
xchg
mov
out
aaa
jp
out
jno
icebp
xchg
fs
cltd
subb
xchg
xchg
lods
xor
adc
xchg
je
dec
test
push
dec
pusha
in
push
mov
mov
pop
test
pop
xor
pop
jmp
testl
in
inc
loopne
cs
mov
or
or
cltd
jle
mov
test
in
mov
imul
pop
bound
inc
push
cmpsl
pop
xor
inc
push
mov
dec
loopne
outsl
and
or
mov
aas
adc
xchg
cmpsl
fisubl
js
mov
rorb
cmp
sub
xor
sti
mov
daa
push
xchg
lcall
xor
push
popf
shlb
add
fldenv
add
pop
cli
mov
jecxz
and
lods
lret
or
fldenv
add
mulb
jl
xchg
sub
add
int
bound
add
pop
pop
ret
das
push
sub
jo
and
add
mov
loopne
data16
test
jge
repnz
cmp
push
jp
lret
or
dec
jns
mov
fcoml
mov
jp
mov
push
aam
dec
shll
inc
push
or
dec
sub
pop
ja
addb
andl
fcoms
and
popf
std
mov
pop
adc
dec
rorb
sbb
imul
jae
aaa
test
xor
lea
aaa
call
out
jnp
imul
fwait
les
nop
mov
in
xor
jp
or
in
jo
test
push
loope
or
xor
scas
push
lock
in
pop
sub
pop
lds
in
cmp
das
lret
or
jmp
mov
add
jg
sbb
scas
outsl
jb
aad
fistpll
ror
dec
cmp
adc
sarl
lea
jmp
adc
call
mov
fsubrl
dec
push
push
insb
xor
pop
aad
pop
mov
testb
ss
fdiv
xchg
jnp
lret
neg
and
push
jle
sbb
jg
cltd
dec
mov
shr
ss
fstl
mov
xchg
cli
test
xchg
call
mov
xchg
out
pop
dec
mov
loope
and
mov
leave
adcl
jnp
sti
adc
push
push
andl
mov
out
lea
les
loopne
and
jmp
loope
inc
cld
xor
inc
or
or
sti
push
adc
push
adc
cmp
push
fimuls
sbb
insb
and
shl
add
xor
ja
and
es
sub
ljmp
push
fdivs
mov
pop
clc
stos
xchg
xor
mov
outsb
dec
test
shrl
cmp
sbb
psllq
loope
dec
jp
pop
xor
xchg
and
push
push
or
xchg
frstor
idivb
cmp
adc
int
push
add
mov
sub
lods
or
loopne
lea
pop
stc
cwtl
push
mov
stc
cmp
mov
cmpsl
xor
xlat
cmc
mov
jne
mov
cmc
cmp
lods
sub
mov
dec
adc
cmpsb
nop
cmp
sub
push
cld
pop
pusha
dec
filds
mov
mov
dec
popf
adc
stc
popa
and
jbe
shl
out
das
or
jae
cmp
jecxz
sbb
mov
stos
data16
fcmovne
and
push
aad
gs
adc
arpl
pcmpeqd
in
lods
faddp
test
inc
inc
and
insl
out
mov
nop
sbb
sub
insb
lret
sbb
stos
pop
mov
push
popf
into
iret
pop
movsl
lods
fsts
stc
ds
and
dec
shl
push
filds
inc
bound
inc
xor
repnz
cmpsb
js
xor
add
mov
test
sarl
jmp
xchg
cmp
stc
cld
rclb
add
inc
jge
mov
xchg
or
sub
outsl
pushf
fwait
lds
cmp
nop
sub
and
lock
test
subb
pusha
xor
mov
out
vsqrtps
ret
mov
push
sbb
mov
push
push
add
testl
mov
cmp
dec
adc
xchg
mov
add
jbe
dec
orl
pop
xor
jo
mov
dec
in
jg
dec
mov
pusha
cs
jnp
das
rcrb
pop
movsl
add
jmp
loop
jp
or
lahf
jno
aam
cmp
icebp
sbb
jb
inc
lret
mov
rcr
sub
sbb
push
enter
dec
add
outsl
or
cmpsb
mov
xchg
popl
inc
jb
ljmp
and
nop
pop
cmc
pop
push
mov
enter
pop
lcall
arpl
cli
mov
int3
test
and
cmp
rcrl
popf
mov
lahf
sbb
in
mov
mov
dec
mov
imul
push
lock
fildll
rcrb
push
push
cmp
adc
jmp
push
lcall
xor
xor
push
pop
loop
inc
in
pop
rorl
mov
enter
push
shrb
sub
pushf
dec
pop
sbb
fbstp
jl
add
addr16
insl
jo
sbb
dec
inc
sub
sub
sub
gs
adc
push
cmp
aaa
dec
scas
inc
movsb
jg
outsl
mov
push
jl
arpl
adc
lods
popa
lret
out
pop
push
fmull
push
dec
lock
jle
out
cmp
mov
inc
dec
sahf
jmp
push
adc
pop
js
in
and
icebp
iret
pusha
ret
jp
lret
mov
repz
add
lea
mov
xor
clc
popf
outsb
scas
std
popf
bound
or
jne
sub
add
add
add
adc
mov
jae
jae
cmc
dec
ss
adc
cmp
stos
push
jp
aas
frstor
sbb
jge
push
push
push
and
pop
adc
adc
fwait
dec
xchg
js
es
mov
mov
pop
pop
fdiv
mov
cmpl
xor
push
jge
dec
dec
loope
addb
push
mov
add
sahf
sub
push
pop
mov
pop
inc
pop
cmp
push
add
inc
jecxz
pushf
icebp
movsl
pop
mov
pop
clc
jno
cli
inc
add
pop
adc
int3
aam
pop
shll
popa
jl
dec
pop
add
in
loop
xor
int
pushf
in
add
mov
jl
jle
lods
xchg
push
je
cmp
insl
dec
shrb
jne
test
fidivs
cmp
call
mov
jle
pop
aas
out
sub
or
xor
fstp
sbb
sti
xlat
lret
push
add
mov
sbb
and
aaa
inc
inc
add
adc
lret
es
mov
scas
in
and
adc
into
xchg
pop
das
stos
mov
in
mov
push
xchg
adc
inc
arpl
into
rolb
mov
cmpsl
imul
les
mov
xchg
decb
lcall
dec
add
add
jbe
cs
jnp
push
mov
xchg
je
dec
repz
ret
lea
rolb
pusha
adc
fdivrl
xchg
in
imul
cli
dec
xor
sbb
imul
mov
std
mov
mov
notb
jae
push
imul
jle
push
arpl
imul
rol
jne
jne
fs
rcr
fiadds
leave
scas
adc
stc
cmp
xor
xor
cmp
cmp
jae
jne
gs
mov
enter
and
sbb
ljmp
nop
sbb
fisttpl
or
mov
and
xchg
imul
jge
aas
imul
or
adc
mov
roll
stos
scas
sub
push
std
xchg
lea
loop
jmp
mov
sub
outsl
inc
push
add
lahf
lods
sahf
aad
cmp
sub
mov
int
mov
push
int
enter
movsl
xor
fstpt
pop
xor
adc
jge
jmp
mov
xor
out
enter
sub
mov
dec
add
add
dec
mov
push
out
addl
dec
push
xor
inc
mov
cmp
xlat
enter
daa
mov
pop
mov
bound
dec
lcall
shl
lods
cmp
adc
and
jecxz
or
cmpsl
cmp
xchg
xchg
push
adc
mov
sbb
pop
mov
insl
mov
inc
sub
inc
out
dec
nop
cmpsb
popa
jge
fiadds
fsubs
stc
scas
jne
int3
std
scas
push
mov
and
pop
xchg
rorb
jno
leave
jle
shl
test
test
pop
roll
pop
imul
dec
add
push
rorl
bound
adc
or
push
mov
jo
iret
push
orb
push
in
adc
sbb
xchg
mov
xor
cld
test
rcrb
movsl
mov
cmovns
pop
in
fcoms
adc
cmpsb
cld
lock
test
mov
cmpsl
ds
dec
xchg
xchg
adc
push
aas
jo
das
inc
int3
sti
sub
cmp
push
ja
ds
pop
andl
jb
mov
call
dec
sub
fcmovbe
xor
xchg
xchg
aaa
pop
mov
aad
or
and
test
mov
insl
test
pop
inc
sub
in
mov
jnp
adc
adc
shll
arpl
cld
jb
mov
jo
xor
or
inc
popa
jno
mov
jns
pop
mov
mov
call
cmpsl
imul
jns
jne
cmp
push
jle
mov
cmp
lcall
stc
push
or
sbb
mov
sarb
lds
dec
mov
jbe
push
and
xchg
bound
shlb
pop
xor
notb
jle
in
popa
imul
jecxz
jg
into
lods
pusha
jmp
jmp
jmp
pop
cmp
push
adc
fnstcw
push
inc
loop
cmp
rorl
insb
subb
pushf
popf
fdivrl
in
lods
push
xlat
cli
ret
jmp
dec
inc
inc
pop
sbb
mov
sti
addl
ds
add
cmc
es
movsl
add
test
jmp
xor
scas
xchg
mov
mov
jmp
loop
cmp
jmp
popa
cmp
jmp
dec
cmpsl
in
push
loope
jnp
cmp
mov
in
fidivrl
xchg
mov
xchg
and
xchg
pop
lcall
repnz
fcmove
out
setb
jl
stc
xchg
leave
inc
push
sbbl
loopne
push
ds
and
cltd
je
pushf
sti
aas
repz
fcompl
sub
cmp
cmp
inc
rorb
lds
sbb
scas
shlb
jle
idivl
lcall
mov
shl
push
dec
subb
push
push
add
scas
imul
xor
ficompl
and
int
add
mov
jg
or
scas
cmc
pop
js
imul
fbstp
xchg
test
cmp
cmp
lahf
fstpl
or
fsub
dec
dec
ja
push
popa
fisubrs
xchg
scas
xchg
insl
cld
cmp
lret
ret
adc
ss
or
je
sahf
or
mov
dec
mov
popa
sbb
ljmp
pop
xchg
ret
hlt
mov
loope
lds
mov
lcall
or
or
scas
movsl
adc
gs
sahf
stos
mov
enter
imulb
xchg
js
jno
pushf
push
imull
sub
ljmp
inc
push
js
insb
aaa
pusha
or
scas
push
and
gs
sbb
rorb
loop
popf
xchg
fwait
mov
jo
fs
xchg
hlt
ss
adc
sub
push
mov
test
and
xchg
xor
fwait
xlat
dec
jecxz
sub
fmul
cld
pusha
xor
rolb
scas
xor
test
xrelease
call
je
xor
dec
mul
loop
xchg
data16
add
cmp
pop
in
push
scas
xchg
les
push
vsubsd
loop
adc
pop
fsubrs
sbb
lock
and
sahf
xor
mov
pcmpgtd
xchg
out
in
sbb
pop
movsb
int
mov
addb
dec
xchg
push
inc
psubq
js
ja
sti
xchg
leave
loop
es
sub
push
jmp
rorb
in
xchg
outsl
pop
push
inc
mov
ret
popf
mov
test
mov
push
insl
jnp
pop
mov
pop
push
out
fnstcw
test
sbb
lcall
cwtl
test
arpl
jl
adc
cmpsl
sbb
call
repnz
and
or
add
and
rol
int
push
in
inc
dec
andb
sbb
aaa
push
push
adc
in
add
mov
fdivrs
pop
arpl
jb
cmp
enter
addr16
dec
push
test
add
push
sbb
pusha
xchg
mov
in
or
jb
xchg
push
iret
inc
shlb
sub
icebp
into
or
mov
mov
cli
dec
and
xor
push
es
loope
fnsave
clc
pop
rcrl
fsts
pop
test
adc
scas
inc
aad
les
enter
inc
mov
int3
xchg
lds
fbld
aam
xchg
adc
pop
fadd
jg
jp
sub
mov
incl
cli
cwtl
clc
fmull
mov
je
lds
out
hlt
jle
call
xor
sbb
dec
fisubl
jne
mov
insl
ficoml
pop
pop
test
imul
jg
mov
adc
outsl
fpatan
out
fcmovu
and
mov
ss
mov
rcll
mov
gs
mov
sti
in
mov
and
mov
fldcw
push
or
push
imul
fs
in
xor
or
push
mov
lods
xor
mov
sub
pop
fnstcw
sbb
xor
cmpsb
jbe
mov
xchg
test
sahf
addr16
jl
sub
pop
jne
xchg
and
jno
adc
mov
ficoms
test
call
mov
movsl
xchg
xor
daa
scas
mov
test
outsb
das
cmp
popl
dec
push
leave
data16
push
popa
cmpl
movb
xchg
ds
add
cwtl
sbb
lret
ja
sbb
sub
mov
and
push
test
xchg
popa
imul
mov
pusha
ds
sbb
push
xor
pop
ret
adc
fmul
ds
loopne
shrb
fisubl
jb
stos
pop
adcl
pop
lods
lds
pusha
movsl
jl
fldl
adc
dec
aad
pop
xor
jle
lods
push
mov
out
mov
dec
push
push
jae
lock
cltd
dec
fsubp
test
jecxz
ja
faddl
lret
jbe
sbb
jb
bound
outsb
cmpsl
subl
and
bound
jb
mov
fsubrl
mov
dec
mov
cmp
testl
sub
mov
ss
mov
in
sub
call
jmp
add
jecxz
test
icebp
pusha
sahf
jle
mov
pop
mov
hlt
jge
stos
cld
dec
or
and
arpl
popa
fwait
inc
fimull
lods
xlat
popf
sbb
movsb
popf
inc
shlb
stos
loopne
mov
sub
sbb
inc
aam
mov
int
mov
out
test
es
ret
push
pop
pop
and
out
jp
loope
xor
mov
push
push
jns
mov
sub
lahf
loope
jo
les
and
push
dec
add
mov
cmpsl
fs
hlt
in
dec
out
sub
cwtl
js
push
xlat
adcl
mov
push
repnz
push
jnp
cltd
lret
cmpsl
cmp
insl
xchg
jg
mov
fs
out
popa
testb
pusha
les
cld
sub
cmpsl
mov
jge
fcoms
push
dec
push
or
xor
push
and
push
add
ds
subb
cmp
inc
xchg
call
mov
and
shll
mov
leave
sahf
mov
adc
psubw
cmp
enter
test
sbb
pop
ficoms
mov
mov
dec
fwait
cltd
jbe
push
iret
dec
in
adc
adc
mov
or
inc
icebp
sahf
mov
nop
mov
adc
popf
xchg
cmp
xchg
push
lods
xor
cld
into
addb
aad
les
push
mov
scas
add
mov
stos
or
stc
and
cmc
sub
mov
data16
xlat
jne
mov
inc
xchg
pop
popf
cmp
mov
int
clc
loope
xor
and
mov
mov
arpl
mov
xlat
repnz
dec
and
or
test
mov
stos
cltd
loope
pop
lods
negb
and
adcb
sbb
mov
insb
cmp
and
xor
fwait
sti
dec
push
jmp
loopne
inc
sbb
ror
fbld
ss
pop
or
data16
popa
xor
stc
mov
test
and
xchg
popf
repz
adc
jmp
je
les
clc
fidivl
push
sbb
adc
call
mov
sub
xor
out
push
push
pop
rcl
mov
xchg
and
shrl
mov
std
sub
pushf
xor
add
or
cwtl
mov
pop
xchg
lock
out
lea
test
xlat
pop
adc
xchg
addr16
fldcw
out
pop
mov
nop
pop
xor
lcall
add
cli
fidivl
sub
cmp
mov
cmp
negb
dec
sbb
ljmp
repz
fistl
pushf
mov
or
cmp
addr16
pushf
outsb
and
stc
test
jge
leave
punpckhwd
mov
ret
cmp
adc
bound
loopne
div
pop
xchg
inc
dec
stos
jno
jl
addr16
and
cmp
cs
xor
bound
popa
fidivrl
scas
rcl
in
cmp
add
test
adc
sti
mov
pusha
lock
cmc
popa
or
pop
jmp
mull
and
js
shrl
rcrl
mov
push
fcomi
and
out
dec
mov
std
jecxz
cmp
fstl
mov
fdivs
jb
call
scas
xor
addl
out
daa
add
xchg
rorl
aas
adc
sub
rclb
adc
ja
xchg
lods
push
add
push
pop
bound
push
aam
fdiv
xchg
in
and
adc
lret
stc
or
les
arpl
jae
out
mov
mov
int3
rep
les
add
stc
mov
int3
inc
hlt
into
cmp
push
out
mov
push
add
lret
cmpsl
mov
mov
mov
sub
movsb
xor
cltd
push
mov
adc
mov
fs
les
addb
mov
jecxz
scas
invd
cli
push
xchg
js
jg
push
outsb
mov
in
sub
or
ret
sub
daa
or
jne
arpl
stos
sub
int3
xor
out
pushf
daa
cmp
testb
outsl
push
and
lea
mov
clc
movsl
fcomip
cmp
fwait
dec
adc
repnz
cmp
cltd
fldenv
jb
ret
int3
sahf
test
sub
inc
push
mov
ja
xchg
std
mov
and
stc
xchg
pop
mov
mov
aam
fsts
and
pop
scas
sbb
test
fidivrs
mov
lret
mov
fcomi
iret
call
sarl
dec
out
add
mov
vunpckhps
xchg
lock
inc
push
push
cmpsl
xor
pop
cli
cmp
xchg
xchg
outsb
sub
mov
jns
push
fcmovnb
test
lods
fs
xor
xor
int
je
orb
mov
addr16
cwtl
fld
leave
mov
into
dec
xchg
div
xor
shll
jnp
insb
cmp
ljmp
repz
imul
dec
je
loopne
sub
or
in
lret
jb
jne
adc
into
push
cmc
testb
cltd
sarb
jo
mov
lods
sbb
adc
int3
fimuls
jg
push
mov
aaa
jae
enter
insb
or
mov
cmpsl
mov
xor
lahf
mov
popa
pushl
int
xor
dec
jmp
lods
sarb
int
mov
mov
dec
xchg
jne
data16
mov
cmp
pop
sub
mov
test
dec
test
repz
push
mov
sub
cmp
xor
imul
ljmp
or
aam
cmp
pop
out
jb
mov
push
nop
aad
loop
inc
sbb
push
sub
or
int
les
push
lret
adc
test
and
push
andl
mov
mov
mov
jae
dec
add
and
scas
or
mov
fs
shrl
dec
aad
lock
dec
ss
test
sbb
pop
ljmp
inc
or
cmpsl
xor
out
into
jae
pop
sub
lods
jbe
xor
cmp
cmp
rorl
outsb
orb
push
je
adc
inc
xorl
ss
cmpsb
jbe
scas
pop
push
mov
add
push
mov
popl
hlt
and
lahf
int3
cli
inc
sbb
jne
negl
pop
outsl
sbb
lea
sub
jns
sti
ja
lods
movsb
jg
push
push
jbe
sbb
int
inc
mov
mov
xchg
push
mov
cmpsb
inc
xor
loopne
rol
ss
sbb
aas
xor
inc
xchg
sub
cmp
xchg
mov
push
sbb
leave
jle
cmpsl
jge
rcrl
leave
add
add
push
fnstenv
sbb
pop
daa
pop
lret
and
lock
or
adc
mov
xchg
lcall
les
clc
mov
sar
adc
push
push
lahf
sub
and
pop
mov
xchg
insb
mull
les
adc
filds
dec
dec
mov
fs
xor
cld
stos
repnz
cmpsl
mov
mov
push
popf
pop
pop
and
sub
cmpsl
adc
jp
mov
jns
pop
push
inc
mov
jmp
loop
inc
addr16
push
pop
sub
shlb
inc
push
or
or
popf
fcoml
or
adc
mov
add
lods
fdivl
sbb
popl
cmp
sbb
fsub
test
ja
in
out
cmpsl
jmp
fdivrl
mov
or
cmpsb
xor
push
gs
movaps
mov
xlat
and
sub
ds
xchg
sub
jno
std
loope
cmp
lods
lods
push
mov
cmpsb
add
dec
inc
push
gs
sbb
lahf
lock
sub
mov
adc
lods
iret
mov
dec
pop
mov
jecxz
pop
popa
add
test
pop
jo
test
cmp
outsl
in
fcmovne
outsb
xchg
test
test
rcl
and
cmp
pusha
mov
jge
xchg
sub
and
and
dec
xchg
jecxz
sarb
cmpsl
sbb
outsl
pop
or
ljmp
mull
es
mulb
and
cwtl
sti
push
xor
xor
xchg
outsl
test
in
push
rcrl
cmp
ret
sbbb
inc
mov
jl
jno
outsb
push
std
xor
jo
jle
sbb
push
clc
push
out
mov
aas
mull
test
xchg
inc
push
or
pusha
dec
inc
dec
push
push
fdivl
in
in
inc
or
call
mov
push
xchg
mov
in
pop
fnsave
sub
jnp
call
mov
mov
aam
pushf
nop
cmp
in
inc
cmp
xchg
out
xchg
stos
or
add
stos
adc
sbb
xor
rorb
or
lret
add
xor
and
push
add
mov
push
cmc
pop
fwait
pop
rcrl
inc
mov
xor
stc
xchg
pop
fs
cmc
lahf
lods
xchg
pop
ret
ja
push
testl
les
movsb
ficompl
and
imul
jp
ret
leave
psllq
xor
ficoml
rorl
push
pusha
mov
xchg
push
xor
xchg
pop
mov
fmul
sub
xchg
dec
in
out
test
cltd
xchg
lods
jmp
pop
pop
adc
adc
inc
mov
in
mov
pop
xchg
push
lock
inc
push
sarb
xchg
fadds
daa
mov
fimuls
cmp
ror
jo
pop
in
mov
jecxz
daa
gs
test
mov
pop
mov
femms
out
imul
mov
dec
cmpsb
data16
aam
stos
cs
outsb
clc
arpl
and
icebp
sbb
rclb
std
inc
mov
cmpsb
inc
sbb
mov
pop
and
loopne
inc
push
add
sbb
cli
push
lret
inc
rorl
lods
pop
mov
push
andb
mov
stos
or
jae
mov
push
lods
pop
mov
in
fdivs
fstl
sub
inc
xchg
test
sbb
inc
testb
sbb
push
pop
push
inc
jns
mov
je
out
roll
sub
pop
ja
push
aaa
jnp
je
mov
repz
jo
cltd
lods
mov
sahf
in
cmp
ftst
loop
sub
sarl
add
jge
loop
inc
inc
outsb
ret
jecxz
xor
push
sbb
imul
pop
clc
cmp
pop
fcomp
push
aaa
push
sbb
lock
jo
mov
lret
mov
sarb
xor
int3
fbld
stos
into
sub
jae
pop
inc
push
sub
pop
pop
stc
dec
cwtl
mov
sbb
dec
dec
loope
shlb
mov
cwtl
fnsave
sbb
sbb
fldl2e
enter
mov
fcmovu
mov
pop
xchg
mov
xor
or
popa
cmp
xor
xor
repnz
imul
mov
sbb
mov
adc
test
xchg
push
and
or
xor
pushf
and
mov
mov
fimuls
ljmp
fistps
aam
das
jae
push
mov
and
outsb
rclb
repz
icebp
inc
jp
xchg
call
lret
cmp
jge
push
dec
dec
cmp
out
out
lcall
jo
xor
push
scas
push
xchg
jle
cs
roll
or
and
lcall
push
dec
add
test
mov
sbb
and
mov
roll
mov
dec
das
and
pop
cmp
cwtl
cmp
cmp
rcrl
xor
xor
push
xor
lret
pop
jp
sub
in
rcr
in
andl
lcall
out
clc
je
cmpsb
push
stos
pop
out
mov
mov
mov
mov
and
leave
and
sub
in
adc
inc
cld
or
das
mov
sub
cmc
repz
pop
xchg
sarb
inc
add
mov
divl
sbb
jbe
mov
inc
jp
push
ffreep
fmull
testb
int
jo
aad
pop
push
mov
js
sbb
fldt
xchg
ret
adc
in
mov
jo
jmp
das
push
sbb
stos
xlat
pop
mov
insb
dec
and
test
or
repz
sub
idiv
ljmp
int3
add
stos
push
scas
pushf
mov
xor
cltd
ret
adc
bound
stos
and
xlat
xor
icebp
sarl
pop
pop
aaa
scas
repnz
mov
xor
cltd
leave
jnp
sub
push
icebp
cwtl
sahf
pop
aas
xor
rcl
sbb
andl
mov
cmc
scas
mov
adc
inc
aad
sbb
lods
and
dec
in
imul
xorb
lret
and
jne
xchg
push
ja
jae
sbb
fdivrs
inc
gs
dec
xchg
out
pause
sbb
rorl
pusha
orb
lds
add
fdivr
adc
mov
fs
test
leave
ja
jns
cmp
push
mov
mov
xchg
mov
int3
mov
pop
mov
ret
sub
jno
adc
jp
je
inc
inc
lret
aad
das
rcrb
push
sub
iret
movsl
add
js
leave
andl
repz
dec
cmp
cwtl
jmp
inc
cmp
adc
add
xchg
mov
inc
sbb
adcb
lock
sbb
jnp
daa
or
lea
in
divb
lods
xchg
sbb
sub
xlat
pop
and
inc
cmp
into
cltd
dec
fwait
das
out
dec
and
jae
out
dec
stc
test
sbb
mov
inc
mov
push
mov
add
cmp
jecxz
add
fisttpll
repnz
jg
push
push
orb
outsl
loop
je
xchg
lret
test
cs
mov
jmp
fidivrl
out
sarl
mov
in
daa
std
addr16
cmc
xchg
dec
jbe
out
inc
inc
cs
aam
push
je
pop
dec
je
sub
lods
or
add
cltd
inc
push
popa
cltd
add
inc
mov
mov
aam
out
jnp
cmp
aaa
lahf
outsb
xor
mov
testl
movsl
pop
leave
into
iret
std
add
int3
ljmp
fsts
mov
mov
cmp
test
sub
icebp
pop
sbb
stc
xchg
sbb
add
imul
stos
cmpl
cmp
out
inc
jne
cli
gs
fisttps
mov
dec
repnz
mov
dec
sub
gs
cs
mov
inc
sub
add
fwait
sbb
push
js
sub
clc
mov
jb
jbe
pop
jmp
inc
nop
xor
and
xor
mov
fldcw
sbb
cwtl
out
jnp
mov
nop
mov
out
and
dec
or
mov
jo
push
sub
xchg
xchg
sub
fiadds
jge
xchg
add
pushf
inc
cmp
loope
inc
xor
leave
push
mov
add
sbb
mov
in
or
insb
xchg
jo
add
xchg
lods
fdivrs
push
pop
clc
fwait
or
dec
hlt
loopne
pop
sbbb
xor
inc
insb
pop
mov
clc
ret
adc
jge
adc
sub
mov
xchg
add
test
xor
fcmovb
frstor
arpl
jno
iret
pop
mov
mov
in
push
stc
dec
les
fisubrl
jno
and
mov
cmp
adc
or
push
nop
ret
aaa
pop
lods
push
dec
adc
jno
out
add
cmp
sbb
adc
dec
add
xor
mov
jecxz
and
into
repnz
in
or
js
cmpsl
mov
addb
push
push
sahf
call
mov
push
sub
or
test
subb
sbb
jno
push
aam
in
xlat
imul
push
lock
mov
rcl
xchg
sbb
add
adc
jo
scas
xchg
dec
aaa
mov
dec
sbb
cli
pop
xor
adc
sbb
es
jmp
mov
pop
mov
sub
xchg
sarl
bnd
jg
or
pop
stos
sub
jmp
out
call
fs
cmp
ds
dec
bound
imul
sub
shll
cmp
test
loop
and
je
mov
cli
hlt
leave
insl
push
in
imul
iret
xor
jbe
jge
movsl
adc
jmp
test
add
movb
pop
gs
fmull
js
adc
fisubrl
sub
clc
mov
repnz
arpl
lcall
add
sbb
mov
or
push
mov
adc
ret
xor
xchg
adc
insl
push
mov
pop
in
dec
pop
xchg
cs
loopne
loopne
or
mov
fstps
and
add
outsb
scas
dec
lcall
mov
adc
push
add
jb
or
enter
popf
imul
movsb
or
jns
sbb
xor
pushf
push
pop
add
arpl
fisubrl
lods
arpl
push
shll
fiaddl
or
inc
test
xchg
jecxz
repz
into
sbb
mov
outsb
insb
push
push
or
mov
loopne
fcompl
jns
aas
cmp
jmp
push
lret
add
add
dec
xchg
arpl
int3
imul
or
dec
jns
sub
fimull
xor
inc
jbe
fldenv
mov
adc
push
enter
mov
add
sub
sti
add
pop
push
push
stos
movsb
arpl
rcll
sarl
js
and
sub
addr16
pop
enter
in
mov
movsl
cli
or
dec
sbb
sbb
lret
movsb
fucomp
and
mov
aaa
xor
sbb
push
or
cmp
mov
xchg
jno
inc
stos
jbe
shl
and
jle
movsl
push
mov
sbb
repnz
fistps
jmp
mov
and
push
xchg
push
mov
popf
out
insl
or
push
pusha
and
pop
pop
sbb
es
sub
stos
inc
xchg
ret
cmp
xor
mov
mov
fadds
shll
add
fwait
test
mov
cltd
sub
outsb
cmp
jp
addr16
mov
adc
adc
adc
push
push
dec
or
repz
xlat
nop
jae
inc
cmp
pop
sub
jg
es
add
and
dec
repz
in
mov
addr16
push
iret
into
sub
pop
xor
lcall
or
shl
aas
fucom
push
movsb
adc
push
or
mov
inc
mov
test
ljmp
fildl
data16
adc
dec
stos
pop
mov
ret
push
mov
daa
xlat
xor
insb
in
adc
enter
inc
shlb
lret
inc
in
lock
pusha
push
xchg
cs
imul
lcall
imul
fsubrl
jb
inc
sti
insb
shll
push
arpl
cli
xor
inc
fsts
pop
sbb
mov
decl
xchg
pop
fwait
add
stos
lea
lods
repz
inc
outsb
mov
add
fcomps
sbb
in
cld
sbb
pop
ja,pt
sbb
testb
push
xorl
pushf
and
outsl
cli
and
sbb
cmp
sub
pop
push
sub
gs
aaa
dec
aad
mov
shlb
sbb
mov
or
mov
inc
out
decb
mov
cmp
or
test
push
mov
add
jbe
subb
or
and
inc
mov
icebp
jne
dec
lods
rolb
cs
addr16
xor
fsubr
lock
nop
xlat
cmp
and
repnz
mov
les
cli
and
bound
lahf
add
mov
ds
jae
jae
adcb
fs
cmpsb
push
fbld
sub
xlat
add
dec
sbb
cmp
adc
adc
sbb
mov
mov
push
xor
mov
lods
test
sub
mov
into
int3
out
jb
mov
in
sub
cmp
lahf
mov
xchg
mov
inc
xchg
mov
xor
push
xlat
pop
ret
mov
sbb
movsb
cltd
popa
and
adc
imul
mov
pop
adc
jae
mov
pop
or
call
and
arpl
test
in
in
out
dec
adc
push
mov
sbb
cmpsb
jl
sub
and
mov
mov
out
fistpl
sub
adc
cmpsb
aam
sub
xor
mov
adc
fld
xor
lods
inc
dec
add
mov
lret
dec
insl
stc
mov
out
arpl
push
shlb
sbb
or
xchg
ljmp
insb
ja
out
sbb
aad
xor
je
dec
and
jo
cmp
add
sbb
std
imul
adcb
and
pop
ss
pop
pop
xor
push
xor
int
loope
sub
cltd
dec
pop
adc
jmp
add
ret
aad
fadd
sub
outsl
mov
jle
hlt
popf
adc
insb
mov
mov
in
sub
mov
jo
das
mov
gs
mov
adc
arpl
pop
lcall
jge
lds
mov
push
std
adcl
xchg
dec
xchg
xchg
mov
pop
mov
incb
repz
jno
test
insb
addb
faddl
aaa
sub
ret
mov
pop
rclb
insw
xchg
or
fcmovnb
jp
roll
out
sbb
test
mov
mov
popf
and
ret
xchg
sub
orb
fstpl
scas
xor
lcall
dec
clc
cmpsb
test
cmp
cmpsl
rcrb
mov
jl
jno
mov
lahf
adc
int3
out
das
shrl
in
cmc
scas
xchg
lcall
leave
cwtl
stos
push
sahf
inc
ret
div
jnp
sbb
frstor
mov
mov
mov
jmp
mov
in
jnp
js
adc
pop
movsl
mov
dec
push
ja
cmovg
clc
inc
in
pop
fwait
mov
xor
sub
stos
in
jmp
lods
aaa
jmp
popf
cmp
cmp
aaa
shr
repnz
jmp
call
mov
aam
adc
cmp
aam
arpl
push
popa
sub
adc
pop
pop
movsb
data16
or
mov
shl
mov
stos
std
or
fs
es
nop
pusha
fs
push
in
xor
or
daa
repz
xor
leave
add
add
iret
pop
int
aas
jp
out
lods
es
mov
aaa
sub
fnstcw
bound
or
sub
inc
lds
repz
pop
imul
adc
mov
fwait
addb
jbe
xor
jle
nop
popf
add
pusha
movsl
imull
and
dec
pop
xchg
xchg
pusha
push
sub
int
ss
repz
pop
mov
je
xor
mov
rorb
jg
jle
cld
xor
nop
imul
add
iret
add
ja
xlat
xor
xlat
roll
or
aam
or
dec
push
adc
lcall
and
js
cmpsl
jnp,pn
stc
imul
push
insl
or
inc
inc
outsl
push
sti
push
fstps
dec
out
cmp
cmpsb
in
gs
lds
test
xor
inc
clc
das
pop
je
jae
mov
xchg
shll
jae
pop
repnz
cmp
stos
leave
xchg
xchg
sub
and
lock
add
out
and
add
sbb
aas
dec
sbb
gs
mov
mov
ljmp
lods
add
xor
push
pop
fcompl
jb
out
out
outsb
jnp
mov
push
mov
cmp
and
lahf
adc
movsb
pushf
cmp
mov
dec
mov
jo
ret
outsb
sarl
nop
fcmove
clc
dec
and
ret
or
jb
jae
and
jne
add
in
idivb
xchg
aaa
or
and
cmp
or
daa
fnstenv
or
adc
rorb
lahf
sahf
cld
aas
sbb
xor
push
mov
sub
dec
mov
pop
inc
jne
mov
out
lds
xchg
out
subb
inc
jmp
mov
push
cmp
mov
sbb
add
mov
adc
push
pop
clc
pusha
cmc
movsl
xchg
cmp
pop
and
fnstcw
in
inc
cmp
mov
pushf
adc
pop
and
cmp
pop
add
sub
and
inc
xchg
test
loop
mov
adc
adc
cli
ficoms
andb
adc
mov
push
add
ds
jb
fidivs
hlt
push
std
movsb
and
fistl
cmp
ss
push
push
in
in
aaa
repz
or
push
out
movsl
cmpsb
cmp
fs
pop
push
mov
cmpl
sahf
aas
pop
mov
loopne
push
ss
mov
loope
mov
scas
push
ret
shlb
out
rcll
fidivs
in
and
sbb
sbb
std
orb
cmp
lea
movsb
ret
add
movsl
xchg
push
mov
add
cmpb
dec
sub
mov
pop
mov
loopne
jg
xchg
and
pusha
xchg
push
pop
clc
inc
mov
mov
add
jmp
mov
dec
and
aas
jl
inc
clc
data16
add
rolb
dec
incl
insb
js
outsb
mov
loop
das
push
rol
dec
pushw
cmp
stos
fsts
popf
test
pop
fs
jns
mov
cmp
dec
mov
insb
lahf
push
int3
mov
fcmovb
shrb
push
or
int
sahf
movl
shl
movsb
pop
pop
outsb
mov
mov
dec
cmp
arpl
cmp
mov
out
sbb
cmp
imul
pop
or
aad
fndisi(8087
lods
dec
xor
xor
cwtl
push
push
mov
fbld
xchg
int3
enter
outsl
push
xchg
push
imul
fs
std
jne
xor
popa
add
mov
sbb
jb
jge
sub
dec
into
dec
inc
inc
xor
pop
popf
push
enter
addl
sar
outsl
pop
mov
int
or
test
xor
arpl
xor
lea
push
xchg
stos
mov
stos
ljmp
repz
mov
or
pop
mov
psrld
push
fnsave
jge
ret
dec
sub
enter
fiaddl
jmp
push
xor
sub
test
inc
mov
pushf
fwait
stos
andl
imul
call
adc
iret
push
add
adc
mov
ljmp
les
cld
ficompl
cmpsl
sbb
mov
xchg
rclb
cmp
cmp
xchg
adc
cmp
inc
lahf
add
xchg
je
mov
jmp
xchg
adc
inc
enter
mov
shrl
mov
fisttpll
in
push
xlat
mov
push
and
inc
ficompl
addr16
add
ds
incl
cmp
out
jne
out
adc
jmp
adc
lret
mov
out
sbb
shlb
jae
arpl
dec
shl
in
add
xchg
mov
popa
mov
mov
or
xchg
push
cmc
out
and
out
nop
sub
sub
mov
icebp
cmp
push
ja
in
mov
sbb
stos
jp
neg
outsb
jae
jmp
lahf
cmpsl
mov
cmp
repnz
pop
adc
jne
shrl
pop
mov
cmpl
jle
mov
test
cmp
sahf
ret
adc
insb
pop
mov
lods
pop
or
pop
loope
hlt
push
aad
inc
je
lock
icebp
xor
or
lock
andb
pop
jno
bound
repz
aaa
and
or
popf
jge
incb
xchg
jne
xor
imul
cmc
js
mov
clc
mov
bound
pop
or
sarl
cmpb
sbb
ret
icebp
add
icebp
sti
aam
out
sahf
lock
je
jno
xchg
adcb
int
out
jns
hlt
jnp
cld
mov
or
mov
fists
shll
pop
fwait
lret
jbe
inc
cmpsb
rcll
pop
xor
sub
lea
inc
cmpsl
sub
test
cmpsl
cmc
mov
sub
ret
cli
jle
xchg
or
mov
aaa
les
sub
and
and
sbb
push
aam
movsl
fisttps
daa
mov
cmp
cmp
lds
and
repz
neg
lret
xor
lods
jg
xchg
flds
jno
mov
hlt
and
xchg
dec
mov
fcompl
pusha
xchg
mov
and
insl
xchg
push
imul
push
inc
mov
outsb
popf
adc
lret
add
mov
shrl
notl
cmp
mov
sub
pop
dec
mov
cmp
repz
dec
inc
mov
mov
insb
inc
ror
mov
mov
fadds
fcmovnu
int3
imul
cli
push
hlt
movsb
xchg
sbb
mov
iret
movsl
add
jge
jp
outsl
daa
iret
ja
test
repnz
mov
mov
imul
jle
lods
movb
out
cmp
jnp
and
push
dec
aaa
and
adc
mov
and
dec
or
mov
pop
dec
sti
loopne
mov
push
pushf
push
ret
mov
scas
jbe
mov
adc
mov
mov
aaa
mov
stos
push
mov
stos
rcr
sbb
mov
repz
in
mov
jge
clc
inc
and
jmp
jp
loopne
out
or
pop
xor
jns
int
mov
mov
jmp
push
cli
inc
and
or
jo
fistpl
push
jp
in
mov
xchg
xchg
jmp
into
rorb
fdiv
fistpl
into
shlb
jb
cmpsl
xchg
ds
fimuls
rorl
mov
xchg
repnz
mov
push
stos
and
shl
mov
mov
mov
shll
jecxz
fistpll
xchg
inc
mov
xlat
stos
sbb
movsl
repnz
cmp
in
gs
icebp
aam
shrb
pop
stos
pop
aaa
mov
jbe
sbb
lds
mov
add
xor
pop
add
insb
push
aam
adc
into
fwait
cs
rolb
call
mov
cmp
mov
pop
cmp
scas
xor
stc
lcall
pop
or
dec
mov
cmc
sbb
scas
pop
cld
aas
xor
insl
dec
jmp
repnz
mov
mov
rcrl
mov
cmp
pop
mov
push
cmp
lea
jmp
inc
or
mov
dec
cs
sub
pusha
lret
sub
dec
test
xchg
jae
mov
xchg
cltd
mov
mov
sub
mov
add
cmpsb
dec
pop
mov
and
sbb
pop
sbb
pop
mov
icebp
mov
mov
xor
negb
ficomps
add
test
movsb
mov
insl
push
sub
pop
repnz
outsb
pop
cmp
fwait
jnp
push
js
mov
rcrb
adc
jns
leave
cmp
addb
mov
cli
rclb
fistpl
sbb
pop
mov
push
mov
mov
inc
dec
or
mov
fidivs
sub
xor
imul
sub
mov
mov
cmp
iret
bnd
mov
dec
sbb
fnsave
sbb
dec
add
mov
jbe
and
bound
jmp
adc
push
jae
or
pusha
mov
xor
mov
insl
sbb
lcall
sub
pop
cmp
mov
xlat
inc
cltd
lahf
push
xchg
sarl
sarl
shlb
lods
fcmovnb
cmp
jnp
subl
mov
pop
mov
int3
arpl
and
pop
je
rorl
scas
cmp
aam
sub
rclb
push
movsb
inc
sub
add
ret
pop
fs
pop
dec
scas
lods
aas
sarl
je
adc
in
xor
pop
ljmp
jmp
mov
cmp
nop
fwait
jmp
jmp
jns
js
cmp
les
test
pop
inc
jbe
aaa
or
pusha
fldl
xchg
jne
sarb
or
pushf
clc
or
aad
lcall
mov
sub
jl
mov
test
cmc
divb
cmpsl
sbb
inc
dec
pop
int3
adc
dec
fsubrs
push
or
stos
popf
push
dec
lods
xchg
inc
xchg
fisttpl
push
mov
test
xor
and
jbe
pop
mov
cld
in
mov
scas
pushf
push
sbb
fwait
pop
xchg
xchg
jae
ret
cmpsb
mov
cmp
sbb
xchg
aam
inc
push
jne
lret
bound
lcall
test
xor
incb
push
pop
aad
imul
xor
mov
out
push
pop
rcrb
pushf
add
cmp
ja
jbe
insb
xor
jo
and
mov
movsl
xor
dec
and
sub
aad
inc
xchg
jo
xor
sub
jae
std
mov
pop
xor
hlt
add
and
call
mov
xor
mov
inc
pushf
jg
dec
xchg
stos
jp
lcall
dec
cmpsl
cmc
xchg
xchg
cmpsl
push
test
jmp
mov
pushf
sbb
fwait
jae
addr16
xchg
sbb
rcrl
fsubr
push
mov
pop
xchg
test
sub
or
pushf
mov
loopne
mov
or
adc
ds
rorb
arpl
pop
sti
mov
xor
imul
lds
or
jp
sti
cmp
push
lahf
aaa
std
lret
fists
bound
xchg
jo
rcrb
mov
pop
jb
pop
mov
loopne
rclb
cltd
mov
pop
negl
test
sbb
mov
lcall
mov
push
decl
nop
repnz
inc
xlat
sbb
popa
mov
mov
xchg
leave
add
cmp
arpl
and
out
loopne
jae
push
xchg
sahf
push
js
add
and
jno
flds
scas
jnp
sub
stos
or
lods
mov
mov
jp
out
insl
lock
lock
addr16
add
scas
test
push
iret
movsl
cmpl
cmp
mov
fmul
mov
add
xor
and
jnp
ror
pop
sbb
pop
mov
xor
xchg
test
dec
ja
bound
push
adc
add
mov
push
jb
sbb
scas
ret
movsl
adc
xor
cld
jmp
mov
lods
mov
jle
fs
push
sub
cltd
mov
stos
push
sbb
outsb
outsl
dec
cmpsb
pop
mov
sbb
xchg
sbb
push
ljmp
int
xor
mov
stos
push
faddl
mov
pop
arpl
push
fidivl
jbe
or
imul
xor
mov
mov
cmp
ja
dec
pop
das
in
mov
mov
cld
mov
mov
mov
sub
cltd
jne
inc
cmpsb
and
stc
insb
sub
test
jbe
jp
hlt
fsubr
xchg
fimuls
jne
mov
leave
outsb
push
adc
dec
and
sahf
jge
and
fs
pop
test
mov
test
sub
iret
inc
cmpsb
out
push
iret
inc
icebp
lods
int3
out
stos
fnstenv
and
sub
arpl
rcrl
in
aam
into
xchg
mov
scas
pop
inc
in
mov
movsb
rcrb
xor
lods
sub
repnz
pop
sar
mov
adc
or
mov
sbb
or
sub
sahf
push
cmp
lret
es
sub
insb
inc
and
sub
imul
pusha
xor
and
and
pop
dec
test
or
jno
ret
in
mov
add
addl
add
daa
fwait
cli
addr16
mov
jge
je
mov
repz
into
sbb
in
addr16
loop
and
pop
nop
xchg
push
cmc
dec
and
test
dec
cltd
mov
ret
jnp
andb
push
mov
iret
cmp
loopne
imul
or
inc
xor
and
pop
pand
movsb
setns
adc
and
iret
xchg
filds
and
scas
test
inc
test
xchg
negl
icebp
jnp
push
mov
jle
mov
pusha
add
mov
test
cmp
push
jmp
or
fs
cmp
mov
or
sub
jge
mov
outsb
lea
test
das
adc
sbb
xor
aas
adc
bound
mov
insb
and
cmp
and
ja
push
mov
insb
iret
mov
push
popf
test
mov
clc
les
cmp
insl
sbb
ljmp
pop
and
xchg
jbe
stos
mov
inc
xor
xor
pop
and
push
stc
jbe
leave
icebp
sub
cwtl
loopne
jnp
pop
ret
das
test
cmpsl
xor
sub
push
pop
sbb
js
xchg
sbb
mov
add
int3
lods
jno
adc
push
cwtl
mov
pop
pop
les
add
sub
loop
push
adc
dec
sbb
fldenv
adc
arpl
add
sub
out
inc
ja
enter
adc
push
mov
fsubr
sub
inc
fdivs
push
mov
test
imul
jne
pop
in
fstl
incl
lea
pop
test
jp
or
pop
repnz
push
aad
jb
push
xor
in
and
lds
imul
or
or
mov
pop
xlat
add
data16
lret
mov
cmp
add
out
jge
mov
outsl
pop
fsubs
mov
lcall
lds
ljmp
mov
push
out
inc
shrb
jmp
jmp
movsb
dec
addr16
fbstp
cmp
ds
and
stos
fidivrl
xor
sub
loope
imul
les
inc
cmp
xchg
repz
cmp
in
mov
mov
or
xor
mov
sbb
xchg
jbe
mov
adc
cmp
mov
cmp
mov
mov
mov
sub
xor
jecxz
dec
adcl
aam
imul
in
aam
or
sti
nop
fdecstp
fxch
sahf
sbb
imul
shl
sub
fldcw
mov
xchg
es
test
and
arpl
mov
dec
aam
push
je
fdivrl
push
imul
test
mov
sub
pop
xchg
jp
mov
cmp
mov
xor
loop
popf
sub
push
xor
mov
push
lret
mov
push
inc
push
ss
push
pop
fisttps
push
cltd
push
jl
popf
mov
cld
pop
outsb
and
jnp
mov
aam
mov
push
bound
mov
xor
cmp
mov
cmp
rcll
in
andb
jecxz
ss
cmp
les
add
inc
jns
int
imul
push
or
hlt
jmp
push
test
lea
mov
mov
xchg
adc
jae
sahf
sbb
xor
in
jno
adc
jo
insl
stos
test
lret
adc
cltd
stos
popf
sub
int
popa
icebp
or
test
stc
sbb
jg
test
jnp
jo
das
loope
dec
fwait
ss
push
nop
test
stc
xorl
mov
sbb
push
outsl
fisubl
cmpsb
iret
in
stos
sub
stos
mov
out
movsb
xchg
scas
mov
cmp
cwtl
inc
scas
insl
jne
vpcomub
adc
call
xor
cwtl
arpl
shll
fidivs
and
push
rol
or
xchg
dec
add
test
xchg
in
insl
fdivr
push
dec
clc
pop
lahf
cmpsb
enter
jle
insb
push
adc
mov
xchg
into
loopne
dec
push
pop
or
inc
ficoms
mov
or
push
cltd
shlb
cmp
mov
sbb
mov
or
test
test
push
sbb
adc
rorl
rcr
mov
idiv
fs
aaa
xorb
dec
outsl
aaa
stc
adc
inc
stos
inc
mov
or
jns
xchg
into
push
cmc
xorl
jle
jle
adc
xor
clts
jno
jne
popa
fwait
mov
sub
popl
or
mov
jb
adc
xlat
iret
out
push
dec
mov
dec
ja
mov
xchg
icebp
dec
add
mov
lds
mov
and
jle
push
pop
mov
data16
cmp
icebp
add
jnp
jmp
push
out
cltd
push
inc
insb
test
mov
mov
mov
add
mov
push
out
sbb
add
push
cwtl
inc
add
test
int3
int3
cmc
roll
jge
mov
cmp
adc
movsl
add
lods
sub
add
out
sbb
stc
cmp
iret
pop
rcl
rcrl
int
loope
in
mov
pop
into
cmp
xchg
int
cmp
mov
or
push
out
or
cmp
add
dec
and
add
test
jge
dec
stc
negl
cmp
and
in
daa
mov
push
pop
jecxz
dec
iret
mov
jmp
mov
sbb
sarb
sub
xchg
pushf
jnp
mov
add
jno
sarb
xchg
fildll
mov
imul
repnz
movsb
repz
sub
and
roll
push
xchg
fadds
test
sub
add
insb
sbb
mov
or
sbb
mov
shrb
fcmove
dec
mov
lock
repnz
adc
dec
sub
pop
cmc
add
or
or
xchg
aad
int3
dec
mov
mov
jae
jmp
lds
rclb
cmp
lahf
pushf
loopne
sub
test
jl
jae
faddl
push
das
in
rorl
or
mov
dec
xchg
outsl
jb
sub
xchg
testb
mov
daa
mov
push
jge
jae
mov
pop
mov
mov
loope
mov
push
sbbb
cwtl
sub
test
arpl
adc
or
shlb
xor
and
mov
or
add
pop
xchg
cmp
fwait
lds
jge
ret
adc
xor
into
daa
cld
dec
daa
xor
cld
subl
mov
add
mov
cs
hlt
mov
leave
cltd
aam
lret
mull
fsts
adc
stc
rolb
pop
push
or
cmpb
adc
movsl
mov
fwait
jmp
jecxz
sti
jmp
mov
in
mov
aam
outsb
das
or
add
sub
xor
push
pop
out
jp
push
popf
adcl
mov
shl
cs
arpl
iret
movsb
mov
mov
popf
lds
bound
adc
out
lds
inc
inc
jne
add
push
jne
and
jmp
mov
ror
add
divb
movsb
shlb
jmp
aas
js
xchg
sbb
push
jns
pop
inc
mov
cmp
sahf
test
loopne
mov
or
pop
enter
xchg
daa
jmp
mov
imul
punpckhwd
sbb
or
es
lahf
xor
aaa
mov
mov
pop
lahf
mov
or
and
adc
mov
mov
mov
or
jmp
not
adc
out
cmpsb
mov
test
inc
mov
dec
inc
mov
cmp
mov
and
xchg
pop
dec
lret
inc
cmp
jecxz
jbe
mov
add
and
cld
or
fildl
aam
int
aas
push
xchg
mov
push
movb
inc
ret
cltd
mov
xor
and
mov
add
bound
add
ds
push
mov
mov
imul
or
in
je
aas
inc
ss
ljmp
ds
xchg
inc
jle
mov
mov
sbbb
mov
ds
fimuls
jae
cmp
xor
aaa
shrl
ficomps
int3
test
jp
mov
stc
dec
pop
aam
mov
dec
mov
in
lret
inc
cs
lock
push
fiadds
call
cmp
add
std
out
sahf
les
push
lahf
add
movsb
push
rcrl
xchg
xor
push
ja
dec
test
jb
lcall
add
sbb
xchg
and
adc
movsb
das
les
add
aad
fwait
jne
imul
fstl
adc
push
jp
dec
mov
mov
sub
sub
xchg
xor
popf
inc
cmpsl
daa
xor
mov
push
das
mov
mov
bound
in
les
loope
int3
or
sar
hlt
mov
nop
mov
mov
xchg
imul
jp
cwtl
pop
add
mov
mov
xchg
pop
stc
mov
aam
mov
jg
sbb
repz
lods
cmpsl
xor
andl
push
adc
add
dec
ffree
and
fwait
push
je
ljmp
and
fcmovb
push
sahf
mov
adc
jl
inc
lds
and
inc
cli
out
cmp
popa
push
out
vcvtss2si
jmp
mov
aam
in
push
jae
in
in
mov
xchg
add
stos
jae
jle
mov
int
adc
and
mov
xchg
outsl
xchg
popf
push
popa
xorl
pop
pop
call
adc
in
and
mov
out
dec
jge
xchg
scas
push
aad
loopne
xor
lods
lcall
jecxz
and
cmp
ljmp
jge
int3
inc
cmc
sub
mov
mov
mov
jmp
jp
jmp
jl
xlat
jb
hlt
dec
outsl
push
pop
mul
das
xchg
mov
ljmp
pop
and
sbb
inc
pop
jno
add
push
sti
scas
aam
pushf
shll
add
jnp
out
mov
in
or
push
mov
js
fdivl
push
fsubs
nop
jmp
andl
jmp
out
test
mov
jmp
mov
repnz
loop
add
or
loop
cwtl
aas
mov
outsl
adc
hlt
mov
imul
in
adc
adc
imul
stos
sbb
pop
mov
popf
loop
cmp
add
add
push
lret
imul
pop
jl
out
adc
out
mov
aaa
shlb
aad
push
fistpl
dec
repnz
adc
dec
shl
or
into
mov
addr16
sbb
enter
addr16
pop
cmp
xor
dec
and
dec
xorb
loope
les
aam
ret
pop
mov
cmp
movsl
mov
in
or
scas
push
xchg
mov
out
jne
dec
cmp
mov
cmp
jg
and
test
and
xchg
mov
add
mov
mov
fmull
mov
or
sub
or
mov
and
lcall
sarl
imul
pushl
icebp
mov
or
popa
mov
mov
adc
testl
pop
dec
dec
adc
test
enter
sub
sbb
jne
fwait
and
arpl
rolb
adc
add
lods
push
sbb
pop
jge
rorl
adc
lods
enter
sub
mov
js
stos
jmp
add
hlt
jecxz
iret
mov
and
mov
je
test
stc
inc
xorl
jno
cmp
lock
sub
frstor
call
inc
xchg
or
testl
mov
and
jp
das
aam
fcomip
or
adc
mov
cltd
jg
xor
cmc
mov
jo
outsl
testl
dec
sub
mov
pop
data16
in
add
cmp
adc
cmp
ljmp
frstor
popa
xor
flds
movsb
enter
push
jb
lcall
inc
cmp
push
arpl
or
roll
cmp
sti
xor
mov
fldenv
nop
push
ds
add
or
add
cmp
ja
test
adc
jb
adc
jbe
xchg
nop
jecxz
inc
pushf
stos
dec
pushf
pop
inc
adc
push
fcmovnbe
int
mov
adc
jmp
outsb
test
inc
ret
xor
adc
xchg
arpl
imul
or
int
pop
xchg
push
je
sub
push
mov
mov
fdivrl
test
scas
mov
add
mov
or
mov
sub
dec
loope
mov
sub
rorb
scas
mov
aaa
sar
push
mov
mov
inc
js,pt
test
or
in
mov
mov
dec
cwtl
jae
mov
jae
repz
sahf
mov
cmp
jge
aas
cmp
mov
push
pop
inc
xor
comiss
test
lcall
insl
xchg
subl
mov
js,pn
xchg
aas
and
je
fdivrs
fisttpll
mov
data16
push
xchg
dec
repnz
sub
call
jo
push
ja
lret
mov
xor
sub
hlt
pop
inc
lock
jl
dec
aam
insb
repz
jb
xlat
pop
dec
cmp
jno
pop
les
out
es
cmp
sub
outsb
add
lea
push
loope
aas
xchg
sahf
lock
inc
xor
pop
stos
lret
mov
test
adc
mov
outsl
mov
push
cmp
sbb
pop
les
xor
mov
js
jno
fsts
cmp
sbb
outsl
dec
push
loope
ret
jno
jbe
arpl
add
fisttpl
dec
mov
pop
mov
or
pop
fndisi(8087
jecxz
cmp
ss
dec
ret
cld
xchg
sbb
insl
pop
out
adc
enter
shll
or
imul
push
mov
jl
push
xchg
ret
inc
out
int
into
stc
jne
push
ret
adc
gs
or
sbb
mov
sbb
lods
cli
push
pop
out
lea
jl
ret
and
lcall
xor
cmp
clc
fdivp
aas
sub
inc
pushl
outsb
int3
ret
cmp
or
mov
inc
inc
xchg
pop
jbe
sbb
jle
dec
stc
je
out
mov
jbe
int
aam
lods
decl
clc
aaa
dec
pop
sub
out
fidivrl
inc
xchg
pop
add
mov
xor
sbb
clc
dec
js
push
pop
daa
sub
mov
mov
inc
sub
push
loopne
fimull
or
push
popa
pop
and
pop
test
mov
roll
add
inc
nop
mov
pop
es
pushf
mov
popa
pop
mov
aam
sub
arpl
jle
mov
cmpsb
pop
mov
sub
adc
loopne
icebp
lcall
add
lret
subl
test
lock
stc
cmp
call
mov
cltd
pop
and
mov
pop
cmp
ret
push
scas
inc
jmp
xor
dec
test
xchg
shlb
dec
cmp
pop
jg
fwait
stos
call
push
cld
dec
shll
cmpsl
inc
jae
lcall
sub
loope
into
xor
sbb
popf
mov
mov
and
push
cmp
adc
pop
add
aad
push
mov
addb
shl
jno
mov
add
insl
adc
aas
mov
inc
mov
jbe
cmp
lcall
adc
pop
dec
clc
lcall
sbb
mov
inc
mov
movsb
push
pop
shlb
scas
pop
xchg
jg
lcall
int
mov
outsl
fistl
outsb
addb
jle,pt
push
pop
lahf
mov
xchg
pop
popf
inc
scas
jns
stc
in
stc
dec
ljmp
mov
fisttps
test
loopne
or
aad
rcrl
pop
lock
pop
push
add
pop
std
cld
xchg
mov
pop
fists
adc
xchg
add
mov
mov
test
lcall
add
push
mov
daa
add
orl
gs
jp
std
or
pop
fnstsw
lahf
cmp
cmc
dec
or
shl
cld
lret
mov
adc
sbb
enter
sbb
loopne
mov
lock
bound
ja
jno
pop
ret
jmp
jmp
fdivl
std
jnp
and
dec
xchg
adc
and
movsl
sarl
clc
push
icebp
adc
cmp
test
mov
mov
sti
int
sbbl
mov
jae
adc
sahf
sub
push
inc
cmp
iret
mov
in
movsl
pop
mov
int
mov
stc
test
inc
mov
addb
xchg
push
mov
mov
or
mov
popa
mov
dec
loopne
xchg
mov
mov
adc
sbbb
lret
add
stc
cli
and
and
pusha
pushf
lcall
clc
test
or
mov
jmp
xchg
popf
and
jmp
pop
jecxz
push
lcall
xor
cmp
add
outsb
xchg
or
jb
mov
popf
sub
fdivrl
jnp
add
xor
jne
mov
cltd
lods
or
xchg
push
push
mov
in
shrb
scas
pusha
add
inc
nop
inc
push
fwait
jge
in
and
in
xor
dec
add
cmpsb
sbb
sub
jb
jge
xchg
out
adc
dec
lods
pop
shl
mov
and
jb
jle
mov
cltd
std
les
add
rclb
nop
mov
pop
ret
dec
shll
mov
je
fisubs
dec
shll
xchg
push
fwait
adc
mov
sub
cmc
stos
and
mov
cs
movsb
dec
std
xchg
rorl
jp
dec
xor
icebp
inc
mov
shl
jmp
dec
test
ud1
xchg
in
add
ret
cmovge
xchg
lret
out
inc
mov
fdivs
jg
jp
jle
xchg
in
mov
xor
add
iret
test
push
and
outsl
add
repz
test
jb
in
dec
push
xor
clc
outsb
movsb
xor
les
lcall
add
test
pop
ljmp
lret
jno,pt
scas
xchg
pop
shll
outsl
sub
sub
add
cmc
and
cmp
aaa
lods
jne
inc
nop
sahf
pop
arpl
cmp
jno
add
and
jp
lds
and
test
and
test
xchg
inc
dec
sbb
cmpsb
push
xchg
int3
rol
xlat
and
dec
dec
pop
pop
ret
cmp
enter
lahf
dec
dec
dec
pusha
mov
repnz
cmp
xchg
push
in
xchg
xor
xchg
punpcklwd
cs
pop
dec
jne
cmp
push
sarb
frstor
les
jns
andl
xchg
lar
sub
mov
fwait
test
xchg
ja
mov
jnp
mov
xchg
lcall
add
cs
pop
pushf
xchg
sub
adc
inc
or
push
ss
aaa
idivl
fsin
sub
sub
stos
icebp
lods
pop
les
stc
xchg
cli
shr
dec
xchg
out
hlt
fdivl
icebp
stc
xchg
mov
push
imul
bound
sub
sbb
add
je
or
cmp
push
pop
and
iret
and
dec
cltd
repz
popa
xchg
fwait
shlb
push
xchg
lea
ja
mov
stc
fsubp
push
xor
lcall
jb
insb
mov
inc
test
mov
jae
popf
xorl
mov
mov
jle
mov
dec
sub
rol
mov
adcl
ds
stos
pop
jb
cmp
aas
xchg
es
add
xor
inc
cmp
addr16
lret
jne
iret
das
xchg
pop
addr16
dec
pop
mov
aas
stos
cmp
rolb
xor
shlb
mov
imul
stc
das
inc
lcall
fisttpl
mov
daa
or
mov
mov
mov
js
and
adc
aaa
aas
loop
js
jge
xlat
lods
nop
rcl
ds
stc
shrb
sbb
dec
pop
add
pop
adc
and
mov
movsl
call
pop
movsb
push
test
cwtl
push
push
jmp
jno
mov
rcll
dec
pop
mov
fbld
enter
ljmp
mov
dec
ret
fildll
mov
loope
loop
inc
enter
and
ja
ret
push
fistl
js
jns
push
fiadds
sahf
cmc
mov
fildll
int3
mov
inc
cmc
in
scas
xchg
hlt
jmp
or
in
adc
cmp
dec
outsl
shl
and
lds
jo
and
cmp
neg
sub
sbb
call
inc
mov
out
lret
push
push
sahf
ficomps
xorb
ret
fiadds
jno
mov
push
into
or
pop
and
or
mov
ja
int
sub
fs
pushf
push
or
fwait
inc
arpl
push
popa
xor
fcompl
iret
mov
sahf
or
dec
pusha
cmp
xor
mov
mov
ret
mov
addr16
mov
mov
jecxz
sbbb
popa
xor
mov
pop
jne
pop
add
jns
pop
lods
pop
sahf
lea
fistps
repnz
or
fstpl
mov
xor
sbb
ljmp
push
adc
push
sbb
loopne
scas
loopne
notb
add
mov
jne
arpl
arpl
rep
mov
sub
popf
leave
dec
sub
fimuls
xor
xor
shll
iret
push
jno
mov
mov
enter
adc
stos
test
test
pop
insb
inc
sub
adc
js
loope
jb
pop
shlb
jnp
sbb
cmp
xchg
push
and
sub
mov
into
mov
or
inc
in
xchg
aas
stos
shr
push
ret
insl
mov
es
loop,pn
out
or
notl
jl
orb
push
add
jecxz
or
mov
decl
fisttpll
sub
mov
or
cli
adc
jle
jp
negl
jecxz
add
rcr
mov
in
shrl
cmp
subb
inc
add
jl
nop
xchg
push
dec
pop
xchg
mov
test
jo
aam
cmpsb
stos
fs
mov
dec
pop
sub
sub
testl
int
jg
pop
dec
movsb
add
xchg
scas
inc
cli
xor
sti
push
xor
or
xchg
bound
loop
aad
sbb
adc
mov
push
push
or
mov
std
fs
mov
sub
mov
sub
stc
sub
lcall
push
sbb
or
sub
lahf
repz
sub
enter
mov
repz
cmpsl
scas
inc
xor
cltd
sbb
mov
popa
rcll
jecxz
mov
or
push
lea
jecxz
pop
mov
dec
aas
sahf
pop
ja
out
mov
out
cmp
pop
mov
cltd
push
ss
cmp
rcrl
aas
xchg
mul
clc
sti
fildll
mov
xchg
lods
inc
xor
xchg
enter
lahf
push
incb
dec
into
addl
and
ss
mov
test
or
jbe
xor
hlt
pop
xor
and
and
mov
jecxz
xchg
outsb
inc
mov
lcall
test
imul
pop
testl
and
lahf
and
out
fs
push
push
push
mov
xchg
dec
imul
xor
xchg
jmp
xor
adc
dec
mov
loopne
movsl
cwtl
and
lods
sbb
sarl
and
pop
or
shll
push
loopne
rorl
sbb
out
lock
xchg
hlt
or
lcall
add
fcompl
xor
xchg
icebp
mov
movsb
push
dec
mov
jb
int
sahf
inc
mov
shrl
test
fadd
dec
mov
cmc
mov
push
aaa
mov
adc
mov
sbb
cmp
lods
sbb
jmp
jne
test
cld
lods
sbb
mov
or
adc
add
leave
inc
jnp
je
xchg
mov
cmpsb
cmpsb
out
sbb
loope
ret
idivb
sti
insb
dec
xchg
cmp
inc
mov
mov
sub
add
shr
mov
mull
add
cs
cli
in
fdivrs
inc
push
or
ja
jmp
push
cmp
in
out
adc
ds
sarb
lock
xor
mov
sahf
push
repz
les
fcomip
jecxz
cmpsl
mov
sub
fsubrp
dec
cmp
adc
ja
xor
dec
mov
or
stos
mov
sahf
bound
inc
and
push
ds
mov
adcb
rclb
add
cli
ss
lahf
and
mov
sbb
pop
push
xchg
mov
in
insb
repnz
inc
aam
rep
lret
mov
mov
push
sbb
push
mov
and
repz
and
lods
sbb
repnz
test
dec
gs
aad
adc
mov
fistl
sti
push
dec
fmul
push
je
dec
pop
add
imul
mov
dec
inc
and
std
out
mov
sub
mov
iret
xchg
mov
out
push
push
stc
dec
leave
mov
inc
lea
push
xchg
sub
sub
sub
mov
scas
popa
cmp
jg
imul
int
clc
hlt
fmull
test
sub
mov
stos
adc
jne
data16
cmove
cmp
dec
mov
jmp
add
outsl
dec
pop
xchg
test
jae
push
cltd
xchg
add
mov
pushf
fs
xor
or
test
pushf
inc
mov
lea
je
sub
dec
adc
lods
and
sub
stos
push
push
jl,pn
cmp
cli
dec
add
sarb
aam
scas
or
cmp
arpl
xor
movsl
xor
sbb
fisttps
std
xor
rol
aad
mov
mov
je
sub
mov
test
push
shrl
lret
add
cwtl
push
mov
movsb
gs
psrad
cmpsl
fcoms
idivb
xor
ljmp
daa
jp
mov
push
dec
push
lcall
insb
adc
divb
push
jno
pop
test
adc
cmp
les
sahf
cmc
mov
das
jl
push
xor
mov
pop
xchg
sbb
pop
clc
loopne
push
inc
subl
push
or
in
sub
lret
xor
jp
leave
aad
pop
sub
rcl
js
test
xchg
test
roll
lods
xor
push
loope
push
mov
imul
das
push
and
jl
mov
ja
pop
orb
mov
cltd
pop
xor
aaa
xchg
iret
xor
leave
xor
movsb
dec
addr16
fsts
pop
mov
insb
cli
sub
mov
call
push
jmp
cmpsb
lret
add
dec
xor
aam
popf
bound
shrb
insl
fldl
cmp
add
pop
jo
rolb
mov
jmp
ret
out
mov
pop
aad
sbb
test
sahf
inc
push
daa
leave
movsl
les
fwait
lcall
rorb
dec
jp
inc
or
bound
mov
sahf
loope
mov
fs
imul
and
ljmp
or
xor
ficoml
pavgw
stc
mov
rorb
adc
movsl
push
dec
or
sbb
out
sbb
cmp
popf
cld
push
les
sbb
lahf
jmp
dec
call
cli
into
dec
push
setb
jb
outsl
ss
shl
loop
mov
repz
xchg
out
ja
popf
dec
push
xchg
mull
cmp
dec
lea
or
pop
xchg
in
add
popf
lcall
add
outsb
aam
dec
int3
inc
or
mov
or
xchg
mov
lret
push
adc
mov
test
jg
fwait
mov
fsubrl
sbb
cmp
add
insb
push
ljmp
inc
jnp
in
xor
lret
mov
inc
in
cmpsl
inc
and
push
xor
cltd
mov
inc
or
repnz
sarl
mov
es
mov
xchg
clc
fstpl
scas
push
mov
xchg
out
adcb
orl
fistps
add
jg
cld
jecxz
rclb
xor
loop
add
jle
xchg
mov
cltd
cmp
jno
loope
flds
push
outsb
mov
out
icebp
dec
icebp
mov
xchg
cld
inc
jmp
dec
cli
aad
leave
rolb
add
mov
lcall
ja
xchg
add
and
jae
mov
jg
ja
jg
ljmp
js
test
fs
nop
ret
cmp
add
dec
lret
daa
inc
adc
dec
xchg
adc
aaa
aad
xlat
sbb
sub
enter
ljmp
jmp
xchg
xchg
push
aaa
leave
std
das
fsts
inc
sti
ljmp
aad
cmp
mov
test
adc
push
sub
jno
cmpsl
jno
rep
daa
pop
pop
xchg
stos
jmp
std
subl
sarb
sub
cltd
cmpl
add
ds
outsl
sbb
jnp
jns
mov
mov
mov
pop
repz
inc
xchg
ds
or
and
sub
inc
ret
push
sbb
outsb
stc
mov
insb
xor
out
mov
push
jno
rorb
xchg
test
dec
sbb
lret
js
dec
push
cli
jo
fdivs
in
add
cmp
shlb
push
test
popf
outsb
lcall
daa
adc
lock
pop
iret
enter
loopne
ds
push
js
ret
mov
dec
scas
inc
xor
push
and
paddd
jno
lahf
jmp
shll
push
mov
test
jmp
addr16
adc
and
popf
lods
cmp
jecxz
inc
xchg
cmp
pop
jmp
mov
mov
loopne
popa
dec
dec
cwtl
stc
imul
scas
sbb
mov
xor
xor
cltd
aad
ljmp
pop
mov
call
mul
addb
mov
pop
ja
adc
mov
int
jle
mov
xchg
xorb
mov
popa
pusha
cmpsl
test
shlb
sbb
lret
push
aas
movsl
sbbb
fbstp
cli
ret
sbb
sub
cld
lret
and
fisubs
loopnew
jae
sbb
les
mov
ds
sbb
cmpsl
stos
jle
stc
sub
sbb
add
mov
or
mov
or
int
jle
inc
xchg
xor
xchg
lcall
xor
das
stc
std
sbb
ror
fwait
adc
ss
jbe
jl
mov
adc
or
jl
jmp
or
push
jnp
scas
filds
scas
push
push
inc
lock
xchg
pop
jae
push
sbb
push
or
jnp
repz
popa
pop
xchg
movsl
sub
pushf
fs
or
push
adc
xor
cld
in
stos
jo
inc
test
inc
aad
push
jecxz
in
fisubs
inc
insb
pop
dec
outsl
std
aaa
dec
cltd
mov
jno
enter
xchg
dec
rcl
cmpxchg8b
into
jecxz
stos
mov
mov
xchg
sbb
adc
stos
add
lret
or
jbe
add
pop
jne
mov
cmp
push
lahf
cmp
leave
dec
scas
fadd
cmp
mov
les
or
push
sub
stos
jge
add
xor
xchg
aaa
jno
add
push
mov
and
aaa
enter
pop
sbb
xor
xchg
rolb
lret
cmpsb
sub
out
sbb
pop
and
add
repz
sbb
ja
xor
les
js
pop
stos
gs
mov
or
scas
xor
jp
add
aas
mov
push
inc
inc
mov
repnz
and
pusha
dec
mov
repz
test
push
fwait
lcall
incb
xchg
adc
dec
adc
ljmp
xor
mov
stos
push
ret
cld
std
js
rorb
test
js
insl
mov
loope
push
negl
gs
mov
iret
iret
jb
or
cmp
imul
pop
pushf
mov
and
inc
jecxz
jl
push
lret
pusha
xchg
stos
fdivl
mov
pop
fnsave
stos
pop
xchg
shrb
add
and
mov
mov
cli
pop
mov
into
bound
push
into
je
test
fsubr
lock
movsl
cmc
cmp
nop
imul
mov
outsl
jmp
xor
pop
add
inc
cmpsb
fstl
sarb
lret
add
lock
imul
xchg
scas
cmpsl
xor
scas
sbb
and
pop
push
fidivrl
mov
notl
jbe
pop
xor
popa
mov
cmp
sbb
mov
ljmp
lcall
mov
das
or
mov
push
jp
xchg
ja
mov
imul
test
pusha
ja
nop
push
push
data16
insl
pop
inc
mov
push
push
pop
iret
adc
mov
inc
mov
mov
add
xchg
mov
jecxz
mov
sub
les
adc
negl
xor
gs
fnstenv
ss
sbb
push
popa
sbb
add
outsl
into
daa
add
ret
call
iret
loope
xchg
adc
call
into
cmp
mov
incl
mov
cmpsb
aaa
jge
popf
ffreep
or
sahf
movsl
mov
jb
xor
js
int3
lock
adc
in
mov
imul
add
iret
cmpsl
loope
xor
mov
lea
icebp
dec
shlb
jo
out
shll
xor
sub
repnz
movsb
mov
and
inc
shlb
xor
inc
or
and
hlt
or
jg
jp
mov
lret
cmpsl
fistpll
cmp
mov
xchg
leave
xor
sub
xchg
popa
push
jbe
outsl
add
sub
and
in
loope
movsb
adc
iret
adc
ror
cmpsl
cmpsb
push
lcall
shl
nop
daa
fcompl
scas
lcall
imul
mov
call
lock
jne
adc
nop
mov
popa
cli
mov
out
mov
cmp
pop
cmp
lcall
adc
int
pop
int
push
test
std
mov
jb
pop
xor
arpl
lods
add
pushf
xlat
daa
xor
repnz
loope
ret
cmp
and
icebp
mov
mov
repnz
jae
cld
push
iret
mov
cwtl
out
in
adc
and
aas
push
lea
sub
pop
loop
mov
ss
int
les
xor
mov
sbb
adc
mov
ret
in
idivb
xchg
sahf
pop
js
sbb
jl
loopne
stos
xor
mov
iret
and
inc
fs
pop
mov
scas
sub
shlb
sub
in
xor
jns
pop
das
repz
addr16
pop
sbb
aaa
lret
movsl
mov
jne
out
sbb
movsl
aad
cli
fisttpl
bound
inc
in
mov
dec
mov
mov
push
mov
mov
fdiv
xorl
ja
lock
aam
daa
sti
mov
std
and
shlb
mov
ds
inc
loope
sub
cmpb
into
pop
push
test
push
je
iret
enter
mov
movsl
faddp
es
mov
mov
dec
jb
or
scas
xchg
aaa
xchg
xorb
xchg
xor
and
sub
mov
or
xchg
mov
int3
or
jmp
jbe
inc
loope
pop
add
lods
call
push
icebp
in
cmp
scas
pop
cld
repnz
dec
add
inc
inc
mov
sub
es
stos
js
cmp
mov
popa
lret
xchg
test
adc
mov
sub
lea
or
sbb
inc
cmc
outsb
mov
data16
rorl
add
call
cwtl
rcll
or
xchg
nop
insl
bound
push
icebp
add
add
add
mov
mov
scas
cmp
xchg
mov
inc
sub
lcall
jo
add
ja
inc
or
xlat
arpl
jmp
sahf
adc
inc
hlt
das
sub
sbb
mov
and
cmp
add
fmuls
out
cmp
push
addr16
es
mov
movsl
jno
mov
and
add
xchg
cmp
jmp
xor
xlat
push
xchg
inc
pop
mov
fdivs
lods
dec
inc
ret
scas
add
cmpl
add
cmp
add
insl
shll
call
imul
in
insb
jns
dec
sbb
xor
mov
mov
sub
movsl
push
arpl
cmp
addr16
adc
popf
jg
add
lods
mov
ja
xchg
inc
push
dec
fisubs
pop
cwtl
mov
sti
sub
pop
cs
mov
jae
jl
stos
dec
push
enter
fistl
nop
inc
add
jmp
or
adc
les
loopne
sbb
movsl
lret
sbb
add
inc
in
insb
outsb
ljmp
fisttpl
dec
cmpsl
push
add
xor
loopne
fmuls
jne
adc
loop
mov
lcall
pop
mov
call
cs
and
pop
pop
inc
xor
cld
leave
sub
repnz
jecxz,pn
fcomi
outsl
sub
int
cmp
push
daa
mov
rorl
das
fstpl
add
inc
jbe
sub
cmp
fadd
iret
aaa
inc
insb
cmp
mov
mov
mov
jl
cmp
jb
xchg
jb
div
xor
pop
popf
add
leave
pop
push
sbb
shlb
push
cmp
lahf
or
iret
xor
rclb
sbb
xchg
add
subb
dec
push
scas
daa
testl
mov
in
mov
xchg
xchg
into
pushf
out
not
xlat
sbb
adc
sub
in
xor
sub
cmc
shll
rcll
xchg
mov
sub
stos
aaa
fwait
js
sbb
sub
mov
push
stos
mov
and
sub
adc
mov
jl
mov
jmp
aad
pop
inc
mov
jnp
add
pop
and
fdiv
ss
cmp
jo
pop
jbe
cmp
xor
ret
ret
push
mov
int3
push
dec
inc
test
in
aaa
lea
jo
mov
push
stos
gs
test
jl
dec
int
lock
out
ret
cmp
xor
shrb
scas
js
out
jge
sbb
out
jmp
add
push
addb
nop
fucom
and
dec
in
jl
pop
dec
push
je
std
dec
jp
insl
les
jecxz
fcoml
outsb
lods
out
pop
call
lods
sub
adc
jge
loopne
inc
lock
ffreep
leave
mov
and
xchg
add
mov
js
xchg
sub
mov
mov
dec
push
out
xor
ss
frstor
icebp
jmp
fwait
pop
sar
insb
arpl
js
add
imul
lret
mov
push
pop
loopne
sub
sti
into
mov
stos
sbb
fadds
sbb
mov
jge
repnz
mov
sahf
inc
dec
pusha
xchg
cmp
movsb
loope
sbb
sbb
xor
mov
mov
addr16
clc
outsb
lds
mov
int
adc
imul
push
or
xor
ds
xchg
iret
add
adcl
leave
mov
sub
push
lock
shlb
inc
mov
pop
fmuls
mov
in
loop
imul
pop
idivl
jb
fdiv
xchg
add
dec
lods
sub
std
xor
pop
mov
sbb
rol
loopne
add
lahf
push
out
pusha
pop
xlat
push
shll
cmp
and
gs
outsb
push
push
lahf
lret
pop
add
lods
xor
ljmp
jle
jo
int
push
inc
in
mov
xchg
dec
jno
and
mov
inc
add
aad
std
es
mov
nop
nop
inc
mov
daa
hlt
or
xchg
adc
jnp
pop
inc
and
lock
fdiv
in
pusha
and
andl
inc
cmp
cmp
sub
cmovge
test
inc
add
cmp
shll
pop
sbb
push
jae
or
xchg
enter
and
jg
les
inc
push
repnz
dec
add
dec
or
dec
push
mov
cs
fs
ljmp
mov
mov
xor
push
les
je
cmp
mov
mov
pop
aaa
ss
rolb
std
mov
fldl2t
sahf
cmp
lea
aas
je
mov
cwtl
dec
lahf
adc
fldt
icebp
dec
xor
push
or
adc
rcll
xchg
push
in
xor
xor
cmp
push
mov
cld
sbb
mov
sub
jns
jns
lea
in
or
movsl
jg
pop
pop
popa
sub
or
test
cltd
loop
loop
push
cli
inc
divl
and
fwait
test
xlat
stc
sbbb
xchg
aas
fldt
jne
mov
fwait
jnp
test
sub
inc
stos
push
out
fstpl
stc
jge
xorl
aas
add
test
in
ret
repnz
push
cs
cli
jl
mov
jg
adc
subl
shll
adc
jb
enter
xchg
movsl
repz
mov
sbb
inc
ja
adc
gs
les
sbb
rcl
sbb
aas
jno
loop
lcall
pop
dec
lds
sbb
out
xchg
inc
sbb
mov
imul
push
mov
seta
push
mov
lods
xchg
imul
aas
lret
aaa
xchg
adc
xlat
shl
mov
int
jl
ficoml
or
je
push
fisubrl
dec
xchg
cmp
mov
addb
push
sub
out
leave
dec
mov
mov
push
std
adc
jge
outsl
je
push
xchg
inc
lea
and
pop
adc
scas
loopne
jb
push
jae
popa
push
loop
xor
adc
clc
mov
cmpsl
mov
inc
mov
addr16
add
add
dec
sbb
push
xor
test
in
jne
mov
jbe
xchg
test
iret
jno
cwtl
lock
xchg
cltd
aaa
insb
and
sub
dec
out
orl
leave
push
or
mov
or
popw
push
push
xchg
lahf
sbb
divb
dec
mov
and
mov
sub
jnp
sbb
or
and
mov
call
adcb
shrb
std
lods
and
popa
in
in
xor
jb
pop
imull
lcall
push
push
mov
outsl
pop
cmc
ljmp
fisttpll
mov
mov
scas
pop
lods
adc
cmovns
popf
mov
push
je
fisttpl
dec
ss
or
push
mov
leave
or
sub
inc
in
or
pop
mov
imul
xchg
mov
xor
jle
xchg
mov
push
repz
out
scas
xchg
shrl
mov
push
mov
sub
mov
rcll
xchg
or
sbb
sti
dec
fwait
push
jae
subb
sbb
mov
je
xor
lods
and
mov
xor
sub
mov
repz
daa
or
out
call
and
sub
xorl
iret
addr16
mov
in
lahf
rclb
cs
roll
mov
push
cli
std
mov
fcomps
ret
fidivrs
ficoml
mov
and
sub
inc
lds
mov
mov
loope
add
or
rcrb
add
inc
mov
xchg
adc
scas
dec
fisttpl
mov
idivl
jae
jne
inc
in
or
push
in
xlat
jg
xor
add
aas
inc
push
das
arpl
cmp
shrl
add
clc
sub
lret
fs
ret
jle
inc
aad
sub
xchg
es
stos
pop
mov
xchg
mov
jmp
mov
fildl
aad
ljmp
subl
outsl
dec
dec
push
jge
pop
dec
int
and
rcrb
xchg
data16
mov
test
pop
ror
mov
int3
ret
daa
sub
cld
test
inc
in
fidivrl
dec
enter
mov
dec
pop
jae
push
cmc
add
outsl
add
or
out
dec
push
mov
pop
inc
push
iret
dec
dec
mov
cmpsb
xchg
shll
mov
rcrb
repnz
pop
clc
imul
rcr
fnstsw
cmp
sbb
outsl
mov
out
sbb
es
pop
loop
sub
imul
sub
jo
jae
imul
jnp
int
sbb
add
std
shrb
push
out
or
pop
mov
inc
lea
scas
sub
ja
mov
sbb
das
sub
fdiv
add
sub
sbb
sub
mov
push
pusha
adc
out
dec
insl
mov
leave
xlat
mov
or
in
lcall
ret
mov
fstpt
xchg
push
dec
inc
mov
icebp
pop
mov
ss
push
or
leave
pop
bound
fs
ljmp
mov
ret
adc
sti
pop
adc
in
testl
movsl
sbbl
in
sub
andl
cs
imulb
sbb
sbb
jecxz
adc
pushf
mov
repz
mov
int3
add
inc
stc
jecxz
pop
rcll
push
xor
and
in
das
in
xor
cltd
mov
movsb
mov
sbb
cmp
or
sbbl
test
pop
shrl
xchg
clc
loope
xor
push
cmp
decb
mov
sbb
inc
mov
sub
stc
nop
test
push
cmp
xchg
pushf
xor
stc
dec
mov
into
scas
push
test
mov
shr
mov
lahf
imul
aam
js
scas
jmp
mov
or
adc
lret
cmpsl
les
scas
shrb
pop
or
std
sub
pop
mov
add
pop
js
xchg
xor
xchg
cmp
scas
aad
xor
addb
fdivrs
dec
roll
xor
andb
sti
xor
int
push
jo
pop
out
adc
cs
pop
xchg
ljmp
sbb
xchg
push
cltd
mov
mov
push
insb
dec
push
into
or
divb
pop
stos
inc
cmp
adc
or
clc
dec
inc
stc
test
lods
pushf
sbb
cmp
sbb
xchg
movsl
pop
mov
xchg
mov
sbb
cmpsl
xlat
jne
or
movsb
or
or
xchg
sub
jb
inc
inc
std
cmp
push
mov
sub
or
sbb
inc
or
lods
sbb
mov
dec
mov
out
add
fcmovbe
lea
lods
cmp
push
dec
or
rcr
stos
pop
aas
loop
loop
roll
leave
popa
gs
stos
in
arpl
mov
lock
aad
fisttpll
and
add
or
xchg
fstpt
jp
jnp
push
or
incl
sti
sub
das
push
adcl
push
add
xchg
ficomps
cmpsl
pop
test
xchg
nop
push
jnp
inc
shlb
xchg
and
and
mov
fstpl
mov
xor
mov
mov
mov
mov
mov
push
mov
push
add
pop
push
insb
adc
flds
test
xor
pop
addr16
and
jge
addl
stos
sub
bound
and
pusha
das
sbb
dec
sbb
cmpsw
icebp
sti
cltd
push
and
rolb
xor
mov
dec
dec
mov
push
sbb
lahf
das
test
pusha
jle
mov
or
xor
adc
pop
test
lods
aad
sbb
test
les
movsl
in
push
cwtl
in
sub
jno
pop
mov
scas
sti
add
jg
jg
push
daa
and
hlt
pop
push
out
mov
sbbb
sbb
xor
jp
es
hlt
or
negb
loop
push
cmc
out
subb
jnp
lods
cmp
add
loopne
mov
movsb
jae
push
roll
mov
negb
dec
mov
xlat
dec
jecxz
cmp
imul
fistps
jg
and
xorl
mov
pushf
sub
dec
inc
inc
out
imul
loop
push
ljmp
xorl
aas
fcmovb
cmp
jae
sub
jo
jg
xchg
dec
pop
xchg
int
mov
insb
adc
outsb
mov
sbb
negl
out
roll
sbb
inc
mov
das
dec
int
pop
daa
pop
arpl
push
cld
inc
subb
fwait
stos
rcrl
xchg
and
cmpsl
sub
push
push
sbb
lock
aaa
dec
jecxz
fadd
bound
jmp
pop
xchg
or
push
daa
rcll
imul
addr16
xor
jecxz
ret
imul
dec
fisttpl
sarb
inc
popf
out
pop
addb
dec
repz
mov
clc
loop
xor
cmp
add
leave
push
arpl
gs
inc
push
movsl
inc
xor
das
in
and
stos
pop
movlps
jbe
push
adcl
pand
dec
cmp
sbb
pop
adc
adc
adc
dec
ds
shll
add
and
daa
loop
mov
mov
xchg
sbb
ret
mov
mov
cmp
adc
jne
push
add
jno
sbb
shr
xchg
xor
push
in
jp
mov
push
insb
test
cmpsb
stos
xchg
or
mov
pop
int
lods
dec
sti
imul
enter
iret
or
sub
dec
or
dec
sub
es
mov
sbb
inc
rorb
inc
movsl
push
xchg
es
sbb
xchg
add
enter
mov
push
aam
sub
lods
jnp
cld
mov
cwtl
sbb
enter
out
xor
dec
div
loope
lcall
addb
jns
je
and
sarl
loope
jno
mov
pop
pop
popf
mov
pop
push
and
and
shll
int3
addr16
psraw
or
push
call
add
xchg
cmpl
iret
sbb
pop
sbb
stos
daa
inc
std
ljmp
cmp
push
pop
je
jl
mov
dec
orl
dec
popa
out
inc
les
dec
outsb
cmp
imul
out
lods
popf
adc
ja
pop
xchg
jmp
cmpb
jl
inc
xor
addr16
mov
cwtl
movaps
bound
dec
or
stos
mov
jae
pop
jecxz
fadds
je
aad
pop
cmp
test
mov
mov
xchg
lret
cmp
aad
inc
sbb
cmp
mov
sub
pusha
cltd
and
insb
test
push
cmp
jno
mov
xor
inc
pushf
inc
repnz
int
stos
inc
arpl
mov
mov
lock
outsb
aas
lcall
nop
push
test
das
loopne
aad
loop
shrl
fistpl
xchg
test
and
cs
pop
push
daa
jmp
add
popf
xchg
jnp
inc
jle
lock
int
pop
in
add
cwtl
mov
push
lods
xor
popa
mov
lods
ss
pusha
jns
push
adc
cmp
add
cmpsl
adc
ljmp
add
fimuls
adc
test
push
mov
cltd
xor
rorl
jb
sahf
cmpsl
sub
mov
sub
xchg
xchg
mov
in
por
push
mov
dec
rclb
out
and
lods
jle
and
push
je
jae
add
out
addb
sbb
cmpsb
mov
jnp
or
xchg
sarl
mov
cli
aaa
sub
fists
test
scas
add
inc
inc
test
mov
xor
jo
mov
sahf
cwtl
daa
adc
or
adc
aam
jo
push
xor
rcrb
subl
pop
pop
inc
mov
mov
mov
xor
cmp
xor
mov
jb
xlat
push
mov
sub
cmp
jg
scas
cmp
cwtl
add
inc
ljmp
mov
cld
or
inc
mov
jmp
pop
mov
xchg
repz
pop
xchg
rol
andb
aad
adc
or
push
fnstsw
ret
fists
aaa
inc
pop
push
test
inc
add
push
dec
in
mov
sbb
popf
mov
sbb
hlt
out
out
jp
inc
cli
and
push
fwait
sbb
and
add
xlat
cmp
je
jmp
fs
pop
inc
dec
jg
stos
lret
or
test
mov
movb
dec
sbb
dec
mov
push
push
xor
orl
add
in
mov
mov
jns
cwtl
xchg
xorb
imul
mov
aaa
fcoml
or
pop
inc
xor
fidivrs
sbb
int
repnz
leave
nop
mov
cli
cmp
inc
lock
cmp
jp
es
out
pop
adc
insl
xor
mov
in
inc
sub
jecxz
popf
sub
inc
aad
je
lcall
or
xchg
jno
push
inc
inc
or
cs
or
add
or
dec
sbb
out
fwait
stos
iret
xlat
or
cmpsb
movsl
xor
jo
in
xchg
lods
fidivrs
movl
pop
dec
pop
mov
fstps
adc
gs
jl
divl
add
test
adc
test
jb
and
les
sbbb
testb
andl
repz
incl
dec
shrb
sbb
pop
aaa
jl
inc
inc
push
inc
mov
in
and
lock
cmpsl
jmp
fistl
sarl
pop
add
iret
mov
push
mov
xor
or
fmul
fistpl
or
adc
xchg
push
test
dec
mov
jo
mov
sbb
gs
jmp
mov
sbb
test
shlb
pop
mov
xor
xchg
ljmp
insl
add
ret
lret
xor
arpl
jo
lcall
int3
movsl
dec
sub
jecxz
adc
push
insb
mov
mov
hlt
je
in
jecxz
movsb
jmp
lret
pop
rep
push
mov
ja
mov
mov
rol
cmp
stc
insb
pop
xlat
push
lock
push
mov
jbe
adc
xor
mov
sbb
shr
push
imul
adc
hlt
cltd
lret
mov
xchg
out
jmp
loope
cmc
push
pop
lods
aaa
imull
or
aaa
pop
aam
mov
mov
faddl
push
cwtl
rcll
push
frstor
cmp
xor
dec
xor
jg
cli
dec
jbe
pop
ljmp
jmp
jne
xchg
xacquire
dec
pop
xor
mov
mov
ss
es
fsubs
add
in
iret
xchg
rcrl
inc
dec
imul
in
mov
decb
popf
and
xor
subb
add
xor
sbb
add
fwait
jp
push
aas
and
mov
and
adc
cli
mov
dec
cld
or
jo
cltd
test
inc
cmp
test
and
fistps
fs
mov
inc
es
gs
in
and
xchg
popa
xlat
shlb
mov
lcall
sahf
inc
jp
int3
xor
cs
inc
jno
fimull
daa
cmp
repz
cmc
xchg
fcoms
dec
adc
fbld
add
fwait
nop
sbb
sti
or
jne,pn
and
cmp
ss
sub
jle
sarl
insl
mov
mov
lahf
fstl
mov
lcall
dec
leave
je
mov
and
in
test
adc
cmp
mov
pop
mov
aad
pop
xchg
das
aad
cmp
xchg
in
lret
mov
push
xor
call
insl
sub
adc
xchg
add
addl
test
mov
xlat
aaa
pop
je
xchg
push
xor
repz
push
andb
cld
shl
into
mov
dec
popa
push
loope
subb
xchg
enter
xor
repz
push
inc
push
dec
xor
in
adc
mov
inc
call
xor
pop
int
inc
push
addb
in
jge
rol
sub
and
push
xchg
dec
js
je
daa
je
xor
fsubr
int3
sbb
xchg
jnp
xor
cmp
jmp
inc
loopne
mov
mov
out
sahf
test
icebp
pushf
cli
mov
out
mov
jae
jae
inc
pop
pop
cmc
ja
dec
hlt
add
xor
cltd
mov
pop
insb
cli
push
xor
mov
dec
or
aam
push
lahf
dec
pushaw
pop
cmp
movsb
xor
enter
paddw
out
sbb
incb
and
sbb
or
and
test
mov
or
pop
or
add
clc
mov
mov
js
adc
mov
dec
cs
fadd
lcall
lds
sub
jb
mov
dec
inc
psubw
xchg
lods
aas
cmpsl
or
inc
lret
call
dec
inc
jns
push
xor
adc
or
push
jg
inc
add
jns
jno
or
jl
aad
jne
fbld
add
adc
dec
call
repz
cmp
fbstp
pop
fstpt
jo
sbb
rclb
push
dec
adc
xor
xchg
adc
xor
xchg
rcll
movsb
pop
cmp
cmp
out
ret
jecxz
xlat
frstor
stos
mov
pop
imul
dec
jbe
cmp
lock
pop
pusha
lret
lock
ss
loopne
xor
pop
sbb
sub
ja
icebp
jg
aam
sub
cmp
cld
xchg
rcll
jmp
push
inc
dec
loop
and
push
push
cmpsl
incl
ret
pop
pop
dec
mov
jno
dec
inc
enter
jmp
addr16
das
mov
inc
stos
add
sbb
stos
sahf
cmp
and
or
dec
aaa
cmovnp
pop
jp
mov
call
dec
leave
jns
lods
xchg
inc
bound
xchg
jo
push
fistpll
ret
push
push
and
jbe
pop
mov
rclb
fisubrs
adc
adc
adc
loope
jb,pt
aam
add
xchg
pop
mov
adc
or
nop
movsb
aaa
js
jmp
icebp
adc
sbb
jne
shl
xchg
jno
arpl
dec
mov
ja
cmp
sub
mov
xorb
xor
push
xor
inc
filds
in
jno
and
outsl
mov
jl
mov
leave
push
mov
mov
dec
daa
decl
fiaddl
pop
xor
jno
ret
mov
or
dec
jae
jbe
in
daa
push
dec
call
sbb
add
push
pop
inc
fildll
sbbl
fstpt
orl
mov
xchg
jae
or
leave
or
notb
cmp
in
jo
lret
cmc
shl
ja
add
push
aas
stos
loope
mov
cmc
jo
mov
xor
or
xchg
and
dec
mov
shll
mov
pop
jno
rcrl
and
pop
sub
sbb
adc
jb
sarb
data16
xor
rolb
jge
inc
data16
jbe
or
pop
gs
in
mov
xchg
xlat
adc
mov
adc
mov
aas
dec
loop
cmc
and
add
dec
mov
test
cli
push
add
adc
xor
add
arpl
lret
test
cmp
clc
mulb
cwtl
or
push
out
xchg
cli
mov
pop
dec
sub
jge
adc
jl
in
cmpsl
mov
jnp
mov
cli
pop
cli
and
sub
and
jmp
xchg
pusha
jb
popf
fstps
pop
out
dec
lret
stc
fcoms
imul
inc
ljmp
nop
add
sub
out
jne
cmp
jo
push
add
stc
in
jg
std
jle
adc
jbe
loope
ja
out
and
push
push
add
and
add
js
ds
sub
pop
or
cmc
sbb
call
inc
movsl
lds
xchg
adc
incl
xchg
add
adc
or
jno
adc
dec
xor
outsl
mov
mov
push
test
xchg
lods
test
mov
sarb
xchg
xchg
enter
mov
mov
aam
sti
negb
insl
or
push
push
jge
out
aad
push
iret
leave
cmpsl
sub
inc
sbb
popa
and
mov
lods
in
pop
dec
xchg
jmp
cmp
mov
sub
sub
ljmp
sub
jle
and
xchg
or
mov
adc
or
fsubp
stc
ds
pop
add
hlt
sub
mov
xor
fsubrl
hlt
dec
insl
arpl
cmp
or
pushw
sti
cmc
fidivrs
jmp
lods
add
jns
stos
int
ja
jbe
cmp
pop
inc
mov
xlat
and
adc
mov
jecxz
orb
sbb
cmp
addr16
roll
outsl
icebp
jg
hlt
adc
dec
pop
popf
pop
push
adcb
daa
iret
mov
add
mov
cmc
mov
cltd
insb
dec
imull
push
cmp
adc
ja
mov
cld
jle
lahf
lds
ds
lcall
test
dec
cmp
jl
inc
xchg
mov
cmp
outsl
in
fs
push
fisubs
idiv
pop
movsb
push
push
lea
xor
ret
mov
adc
xchg
mov
aas
inc
bound
xchg
lcall
cmpl
movsl
fwait
mov
stos
pushf
iret
bound
jnp
pop
das
andl
in
cmp
mov
cmc
jge
stos
adc
pop
out
test
icebp
or
out
cmc
or
pop
hlt
or
push
pushf
aad
mov
xchg
je
or
cmpsl
jmp
icebp
jmp
rcrl
cmp
xchg
ja
and
xchg
dec
aaa
inc
add
push
das
mov
out
testb
stos
xchg
arpl
aad
les
imul
fnstsw
popa
jmp
sbb
loop
xchg
scas
add
jns
imul
cmp
loop
lcall
lds
jbe
xchg
mov
ret
stos
adcl
dec
add
add
add
sub
push
adc
rorl
fstps
imul
jae
mov
and
loope
rolb
mov
rclb
outsb
fstpt
dec
fdivrs
cmp
sub
inc
fwait
cs
popf
mov
arpl
sbb
sbbb
xor
enter
notl
cwtl
mov
punpckhbw
or
rcr
xchg
and
das
adc
mov
aas
repnz
push
popf
ret
or
ror
lret
sub
push
imul
daa
movsl
mov
xchg
mov
sbb
or
mov
enter
fstpt
lods
push
xor
out
rcr
push
std
sub
xchg
inc
les
into
rcl
jle
jle
out
push
std
mov
stos
cmpb
mov
in
add
inc
adc
sbb
sub
mov
push
or
adc
xchg
in
rorb
dec
add
push
mov
pop
das
pop
ficompl
xchg
xchg
mov
outsl
pop
sbb
sbb
inc
mov
hlt
xor
imul
je
mov
fimull
push
and
rcll
cmp
loope
frstor
int
mov
inc
shl
lea
inc
or
lods
loopne
sarl
loop
insb
add
in
out
or
test
fisttpll
in
cmpsb
cmp
subl
lods
lods
outsb
fsubs
sbb
sub
jge
xchg
mov
loope
mov
jecxz
rcll
adc
inc
mov
movsl
inc
xchg
and
insb
shrb
inc
jg
and
orb
pop
cli
decb
dec
sbb
push
movsb
cs
lea
push
jae
sub
es
js
push
cmpsl
stc
jo
sub
jge
mov
out
mov
dec
aam
fsubp
or
stos
jp
dec
dec
lret
or
sub
dec
cltd
mov
lcall
push
push
mov
jg
sahf
dec
bswap
or
sbb
jne
xchg
xchg
pop
out
lahf
das
ss
or
push
sbb
or
movsb
mov
js
scas
repnz
stc
or
shl
adc
xor
and
pushf
movsl
loopne
clc
daa
push
flds
sub
mov
adc
lock
stc
lods
pop
mov
push
lds
fwait
xor
and
adc
jne
push
xor
out
scas
in
ret
in
ljmp
insl
add
jge
clc
call
pop
ret
nop
nop
scas
xlat
xchg
xchg
mull
mov
movl
mov
xor
pop
rcr
in
xchg
cmp
dec
add
fdivs
es
inc
push
out
cmp
arpl
mov
xor
dec
pop
push
mov
in
ja
ds
ficoms
push
gs
mov
xor
mov
xor
lock
bound
pop
testl
xchg
sub
jecxz
mov
add
int
ret
inc
fistps
pop
hlt
add
cmp
pushf
xor
insl
jb
je
lret
add
xchg
xlat
daa
sti
xorl
xor
add
mov
jge
scas
sub
stc
clc
jne
jbe
fldcw
mov
rorl
push
xor
add
lret
or
mov
and
sbb
pop
pushf
xor
xchg
xchg
sbb
mov
lret
mul
ret
or
cmp
cmc
bound
aam
sub
inc
ds
pop
sbb
cmp
xor
insb
jns
jp
jo
mov
push
lret
gs
mov
sub
mov
cmc
in
sub
pop
mov
xlat
cmp
fcmovnbe
jbe
notb
sub
stos
sti
xchg
mov
and
lret
aad
in
shrb
fisttps
jbe
test
lea
jne
sub
dec
cmp
jge
ret
xchg
push
rcll
push
jbe
pop
pusha
flds
mov
jp
pop
int3
mov
or
cmp
and
xchg
mov
cmp
stc
movsb
popf
cmp
inc
cltd
inc
xchg
stc
out
out
inc
mov
and
cmp
fs
clc
mov
outsb
jp
dec
add
xlat
mov
sbb
idivl
mov
ds
pop
insl
xchg
lcall
test
clc
dec
lahf
jo
dec
lret
or
mov
mov
test
push
fisubrl
sbb
inc
mov
rclb
push
or
les
cmp
mov
outsl
out
loopne,pt
and
popf
or
lret
ja
dec
mov
push
or
je
lahf
sub
test
lret
cmc
xlat
cmc
xor
sub
shlb
xor
and
icebp
rcl
cmp
ss
fs
add
movsl
sub
or
mov
mov
sub
pop
xchg
sbb
xor
mov
repnz
into
pop
arpl
cli
dec
push
jne
jle
pop
pop
es
icebp
rcrl
ja
es
jo
cs
xor
hlt
dec
dec
js
lcall
inc
rolb
test
sbbb
gs
sub
aam
mov
sbb
lret
push
sbb
dec
fstpt
out
into
cs
sub
xor
stos
add
pop
ja
cltd
pop
mov
adc
pop
add
mov
push
sbb
push
xor
repnz
mov
mov
nop
jo
ficompl
cmc
adc
sub
fcomps
outsl
push
ss
les
cmp
mov
loop
imul
sbb
push
test
jecxz
pusha
push
and
fsubrl
fldcw
inc
stos
mov
lahf
mov
dec
lods
mov
add
mov
pop
aas
jb,pn
or
pop
xchg
in
push
idivl
fbld
fcomi
mov
test
pop
mov
mov
imul
adcl
lret
orb
xchg
mov
sub
pop
in
xlat
ja
jns
and
outsl
addr16
fisttps
jl
jns
mov
xor
shlb
mov
pop
and
xchg
sub
xlat
cmpsl
hlt
in
push
and
fimuls
dec
arpl
adc
test
mov
test
dec
inc
or
mov
aas
loopne
sbb
jbe
sub
iret
rcrb
or
js
cli
cmp
jns
mov
pop
pop
mov
cwtl
sbb
int3
stos
jecxz
es
fwait
mov
xchg
dec
push
xchg
data16
lcall
jecxz
xchg
push
adc
add
xorl
pop
cmp
decb
pop
repz
cltd
xor
orl
test
aas
adc
dec
test
movsb
jle
cmpsb
stc
ja
or
dec
sbb
popa
bound
repz
outsl
jns
adc
fs
cs
stos
sti
add
ljmp
mov
cmp
pop
push
mov
ss
lock
cmpsb
mov
mov
fcomp
jle
dec
xlat
or
orb
loope
xchg
cld
fimuls
mov
jae
xor
nop
pop
mov
push
ds
mov
daa
not
or
xchg
jg
scas
add
insb
inc
mov
cmc
mov
data16
stc
fcompl
cmp
popf
cmpb
mov
jns
stos
negb
add
fcomps
sahf
mov
cmp
test
inc
and
dec
cli
jle
test
inc
out
sti
stc
inc
inc
ret
popa
subb
scas
jle
cmp
out
or
xor
ret
rcl
mov
pop
cmpsl
adc
push
mov
mov
adc
cmp
jbe
es
xchg
div
daa
cld
mov
mov
int3
inc
mov
jecxz
push
mov
popf
cltd
fcmovu
push
jae
ficoms
sbb
dec
jne,pt
movsl
lds
or
adc
insb
push
stos
sub
mov
sub
jmp
dec
inc
in
loop
mov
sti
push
pusha
mov
dec
mov
fldl
roll
shll
pusha
out
movsb
loope
jl
push
mov
xchg
pop
pop
sub
or
sub
inc
in
push
sbb
enter
pop
dec
xor
mov
push
adc
mov
push
jp
add
popa
shrl
mov
movsb
sbb
cld
push
int3
cmp
rol
inc
add
pop
in
jb
out
jns
jp
fwait
sahf
xchg
popf
je
icebp
mov
scas
dec
sub
popa
pop
cmpsl
test
ja
clc
sbb
cmpsl
stos
cmp
in
push
pop
push
jns
push
inc
xchg
js
push
stos
movsl
insb
push
and
repnz
mov
iret
pushf
jae
out
das
inc
sbb
mov
adc
fidivrs
pop
pop
mov
lret
dec
xor
xchg
mov
mov
outsb
sub
ja
out
jne
adc
stos
mov
push
and
cmpsl
das
or
xchg
pop
filds
pop
xor
pop
clts
bound
xchg
push
out
xchg
cltd
push
adc
arpl
mov
out
into
into
or
cltd
test
or
xchg
jle
cmp
mov
and
mov
sub
and
adc
and
xchg
mov
js
pop
fildll
mov
insb
xor
test
jl
cmc
mov
push
mov
bound
rorb
and
sub
adc
jno
call
icebp
mov
push
lret
in
int3
iret
cmpsb
insb
aas
loopne
repz
stc
push
mov
sub
stc
les
lret
fwait
xchg
sbb
cmc
cmp
or
loope
test
test
mov
jae
xchg
or
gs
sar
nop
push
push
mov
or
rcll
push
cmp
mov
out
lret
xchg
mov
pop
jo
in
dec
mov
mov
pop
pop
mov
push
stos
mov
push
adc
push
jo
push
cld
and
mov
cmp
shll
push
jnp
fcmovnbe
jp
jbe
loope
jns
fmuls
outsb
ficoml
xor
ja
aaa
jmp
cmp
stc
push
cmp
arpl
jmp
lcall
xchg
ret
push
push
pop
cmpsl
xor
ljmpw
fdiv
and
jbe
es
sarl
clc
iret
xor
lcall
jne
pop
and
jmp
jns
push
pop
jmp
adc
and
jno
jns
js
mov
pop
enter
pmaddwd
out
outsl
inc
test
clc
push
push
ficomps
pop
or
inc
aaa
je
adc
cld
jge
pop
push
push
pop
push
test
xchg
andl
jp
or
push
cmp
jecxz
ds
out
gs
test
jge
mov
pop
fcoms
add
cmpsl
push
dec
mov
mov
jne
dec
xchg
pop
jecxz
or
jns
out
repnz
mov
mov
js
addb
mov
inc
cmpsl
loope
ret
mov
int
scas
dec
inc
loop
or
xchg
int
hlt
mov
jno
ret
pop
mov
int
or
push
mov
fs
lods
repnz
xchg
das
inc
leave
push
add
cmp
ds
add
xchg
dec
pusha
leave
xchg
fcomps
leave
jg
lcall
aad
dec
cmp
and
pop
fstps
xor
and
insl
fcomps
push
xor
or
pushf
or
repnz
test
xchg
jne
stc
xchg
jbe
add
mov
pop
es
push
xor
mov
fldt
mov
mov
fcoml
ja
call
pop
inc
push
inc
xchg
fstps
xchg
test
ljmp
fsubr
insb
ljmp
cld
add
gs
push
lock
push
cli
push
jg
popf
and
pop
ficoms
mov
cmp
mov
mov
sub
push
test
push
fildll
insl
mov
inc
arpl
in
loope
push
xchg
jge
daa
mov
aaa
pushf
push
arpl
test
sbb
fildll
mov
cmp
popf
pop
gs
outsl
pop
push
hlt
pop
mov
aas
sub
stos
add
ds
push
aas
dec
pushf
sbb
xor
mov
sbb
stc
popf
pop
clc
add
adc
inc
sub
mov
incb
loopne
fidivl
repnz
push
push
adc
lds
inc
mov
or
negb
cmpsb
adc
push
jne
jbe
push
lods
lret
jb
lahf
xor
pop
mov
sbb
lret
inc
aad
loop
sub
push
insl
iret
pushl
jae
mov
jmp
jle
push
lea
stos
jnp
cld
and
outsb
enter
in
mov
mov
sub
insl
icebp
int3
pop
pop
inc
test
mov
and
or
addr16
aam
add
jle
mov
into
dec
push
xor
stc
lods
jae
add
adc
sub
sub
mov
and
and
loop
arpl
mov
imul
mov
mov
jbe
test
xchg
adc
andl
mov
test
mov
xchg
xchg
xor
or
in
sub
fdivl
push
repz
sti
clc
sub
push
rclb
sub
test
nop
inc
adc
xchg
and
cmp
inc
idiv
cs
xchg
cmp
les
in
aas
rcrb
in
cmp
pop
rcl
out
mov
ds
adc
mov
jbe
fidivrs
add
mov
addr16
dec
test
fildl
jnp
mov
ja
scas
push
xlat
mov
cmp
adc
cli
or
push
mov
insl
mov
push
mov
cmc
fidivrl
fimuls
jle
int
inc
stos
mov
inc
dec
repnz
jo
in
push
mov
mov
pop
loope
sub
out
sub
jno
dec
or
std
scas
xlat
xchg
jp
or
flds
lods
or
sub
and
xchg
push
pop
fldcw
cmp
cmp
insl
xchg
rol
outsb
out
lahf
mov
push
pop
mov
icebp
ljmp
pop
js
cmp
xor
sub
pop
adc
into
stc
pop
cmp
ret
cld
jecxz
movsb
into
and
fnstenv
fiaddl
lods
mov
sbb
jmp
das
ret
lods
pop
dec
dec
adc
or
dec
mov
or
push
lods
loopne
or
ret
push
popf
push
sub
dec
sub
push
dec
in
push
xlat
xlat
imull
sbb
daa
xorl
jbe
hlt
or
mov
sahf
negl
aas
add
std
jnp
xor
fsts
nop
nop
mov
jne
scas
cmp
xchg
fnstenv
sub
sub
aas
scas
mov
clc
aam
cmp
jmp
scas
xor
lcall
int
int3
bound
loope
xor
or
jle
jmp
xlat
inc
dec
cmp
shll
jge
les
cli
dec
sbb
daa
jae
push
pop
fwait
fistpl
adc
lea
dec
dec
adcl
mov
cmpsb
add
fnsave
xchg
je
das
nop
mov
faddl
pop
jb
inc
aas
mov
mov
sub
add
mov
cmp
shlb
inc
and
fistl
jne
lret
data16
add
sbb
cmp
and
mul
outsb
inc
insl
repnz
addr16
scas
rorb
push
xchg
pop
clc
cmpsb
jle
inc
push
cmp
pop
lock
lock
xchg
mov
jp
int
pop
and
das
fdivs
aad
mov
cmp
sbb
jne
mov
out
mov
loopne
cmp
mov
jb
cld
pop
pop
cli
inc
jle
jno
mov
xchg
arpl
pop
sbb
hlt
mov
fcoml
add
cmp
xchg
mov
or
mov
idivl
add
mov
cmp
xor
xchg
xor
adc
fsubl
gs
push
sub
pop
pop
xor
popa
sbb
lea
xchg
xchg
cmpsl
add
rolb
popf
pop
mov
jb
int
iret
into
sub
pop
dec
or
cld
pop
push
cmp
adc
imul
cwtl
cmc
out
aam
cmpsb
and
inc
aaa
xchg
mov
icebp
stos
sub
repnz
sarl
sub
push
aaa
pop
in
xchg
js
cltd
fs
jnp
add
pop
or
mov
out
sbb
addr16
rcll
out
adc
popa
mov
or
pop
xlat
pop
pop
cmpsl
aad
xor
add
push
fs
sub
test
dec
push
xchg
or
icebp
jg
ret
sub
repnz
imul
lods
lret
dec
inc
roll
nop
cli
add
cld
add
dec
lds
fists
testl
in
aaa
out
ror
or
lahf
lock
sub
adc
cmp
shrl
rclb
insl
in
dec
idivl
push
xor
mov
testl
sub
int
or
pushf
lea
ret
call
pop
push
jle
mov
movsl
cmp
mov
pusha
orl
ja
scas
mov
arpl
or
ljmp
pop
ret
cltd
xchg
imul
mov
jle
ficoms
dec
fwait
pop
sub
cmpsl
fwait
test
scas
loop
xchg
mov
shr
testl
in
test
aam
mov
fs
mov
inc
pop
leave
popf
or
or
xchg
mov
int3
lods
hlt
cmpsl
dec
shrl
mov
lret
pop
mov
stc
sbb
sbb
add
inc
mov
sbb
mov
xor
lods
das
lods
test
mov
in
pop
iret
xor
movsl
cld
sub
cmpsl
mov
adc
loope
mov
test
xor
jecxz
mov
pusha
fwait
adc
mov
icebp
loopne
lock
cmpsl
cli
mov
int
pop
sarb
jmp
jp
push
fcmovnbe
mov
mov
xchg
lahf
int
imul
xchg
or
and
jge
xchg
jge
push
stc
push
and
mov
ljmp
lea
mov
loopne
lahf
jae
aas
fnstsw
pop
es
adc
cmp
mov
loop
jns
stos
mov
cmp
stos
or
jbe
sbb
push
adc
mov
sbb
sbb
cmp
stc
xor
popf
dec
push
pop
add
in
mov
test
pop
push
push
or
fsts
fs
cmc
cmp
lock
or
xchg
jne
sub
mov
add
pop
mov
orps
jge
mov
mov
ret
adc
mov
mov
push
shll
sub
adc
mov
and
rorb
cmpb
movzwl
jmp
daa
jp
jnp
pop
mull
xchg
inc
stc
mov
inc
out
clc
outsl
dec
mov
lods
mov
mov
in
pushf
or
push
xor
jmp
xchg
lcall
mov
rorb
cltd
lret
jl
cmpsb
cld
jb
out
loop
push
enter
jecxz
gs
ss
mov
dec
out
jae
dec
jecxz
add
sub
pop
cmp
or
loop
mov
add
inc
push
outsl
addr16
iret
pop
cwtl
popa
daa
pop
addl
jg
mov
cmp
jo
push
jb
mov
pminub
mov
loopne
fnstsw
push
pop
xchg
les
mov
sbb
push
mov
jecxz
add
pop
in
jb
mov
mov
lret
fiadds
daa
cmpsb
and
popa
cld
or
mov
cltd
daa
cs
int3
pop
and
cmp
ficompl
dec
daa
or
inc
pop
lds
jae
jle
sbb
fimull
or
into
and
mov
sbb
sti
fidivrl
mov
mov
sub
ljmp
sbb
inc
jmp
jmp
add
pushf
cwtl
xchg
push
and
cmpl
jae
pop
sub
add
sub
cmpsb
inc
test
jge
rcrl
fnstenv
and
and
mov
cmpsl
xchg
push
fstpl
inc
or
mov
mov
sbb
mov
inc
lcall
inc
mov
xchg
int3
rclb
push
xor
repz
and
in
mov
adc
mov
mov
in
mov
jne
call
jns
lds
xor
sub
fs
push
aam
xchg
xor
cmc
lret
mov
hlt
stos
in
jo
dec
cmpb
or
daa
xor
cmp
popa
adc
in
data16
jge
pusha
mov
bound
fwait
push
rorb
std
decl
or
arpl
pop
sub
xchg
cmpsl
sbb
arpl
push
call
fnstsw
imul
mov
movsb
lahf
jnp
adc
xchg
sub
add
outsb
jae
les
mov
mov
fs
xchg
sti
pop
out
mov
ds
jns
daa
add
jl
hlt
push
insl
test
cs
dec
dec
jo
jmp
push
mov
sub
jne
inc
xchg
ja
mov
icebp
imul
push
shlb
adc
test
pop
mov
mov
dec
xchg
dec
int
loope
loope
stos
and
inc
jmp
and
jo
fwait
imul
stos
pop
sar
movsl
xorl
jae
add
in
xor
adcb
sti
lock
lock
ds
push
outsl
cs
daa
loopne
fdivrl
xchg
ljmp
bound
mov
arpl
mov
aad
clc
mov
lcall
jg
cwtl
lds
jl
aas
ss
adc
mov
bound
ja
xchg
cmp
insb
mov
add
add
mov
cmp
or
push
out
aad
mov
sti
jns
xchg
int
push
cmpb
add
mov
mov
mov
fdivrp
nop
mov
adcl
sti
pushf
xchg
stos
stc
decl
push
mov
mov
lahf
add
mov
je
pushf
shrb
in
mov
sbb
xor
sahf
mov
imul
pusha
cmp
cmp
je
jmp
add
test
in
add
inc
and
add
test
or
push
out
out
mov
je
mov
sub
and
or
fsubp
insl
scas
jbe
mov
stos
lret
xor
loopne
fsubs
xchg
sbb
jmp
ret
in
imul
sbb
rolb
xchg
loopne
sub
dec
pop
ds
xchg
or
sub
push
add
cmpsl
stc
lods
add
out
bound
sbb
hlt
jno
sbb
icebp
lcall
jmp
rcrl
sbb
xchg
mov
add
pop
bound
push
mov
dec
adc
pop
jnp
mov
add
sub
xlat
mov
add
pop
jnp
dec
mov
rolb
push
push
imul
movsl
addr16
mov
push
sbb
lods
jecxz
punpcklwd
fld
int3
xchg
rcrb
or
fisubl
sbb
jae
fstp
sahf
mov
fadds
lret
mov
adc
fidivs
cmp
xor
test
adc
push
icebp
out
sub
inc
es
rclb
out
test
iret
jne
es
pop
aaa
sarb
loop
mov
mov
scas
mov
add
dec
push
inc
nopl
icebp
inc
test
icebp
sbbb
push
add
sub
inc
je
push
ss
fisubrl
jl
ljmp
test
push
mov
loop
xchg
loopne
or
inc
xchg
scas
dec
gs
rcrl
roll
mov
leave
fmul
pmuludq
mov
and
shl
xchg
stos
xchg
je
lock
popf
mov
fs
and
jl
inc
mov
mov
mov
pusha
xor
jmp
or
pop
mov
sub
inc
cwtl
sub
ret
daa
inc
push
cmp
cmp
mov
cmp
pushf
cmpsb
ja
jno
iret
dec
dec
ss
lret
xchg
pop
mov
out
std
xchg
xor
in
pushf
jno
shll
lcall
js
mov
rep
add
jge
leave
gs
rcr
data16
div
jmp
cltd
mov
movsl
cmp
jg
movsb
mov
out
and
call
test
xchg
xor
shrb
or
call
mov
in
repz
xor
stos
jmp
cmc
cli
jbe
aaa
lret
sahf
in
test
idivb
out
jne
adc
sahf
daa
mov
ja
test
es
call
mov
and
xchg
decb
xadd
sar
push
cmpsl
push
jp
push
mov
sbb
adc
outsl
jmp
pop
cmp
cmp
shrw
je
adc
repnz
andb
sub
xchg
lret
ds
test
and
nop
pop
stos
mov
sub
dec
dec
jae
test
and
jns
pop
inc
js
fucom
mov
stos
mov
fs
push
adc
insl
lock
push
imul
cmp
in
out
and
out
movsb
push
jb
and
cld
rcll
std
push
dec
add
in
out
push
and
pop
adcb
inc
fiaddl
mov
idivb
xchg
sub
pushf
sbbl
or
cmp
add
fidivrl
mov
pop
inc
aad
arpl
lcall
sub
fwait
out
cmpsb
push
mov
mov
mov
fstl
addr16
mov
mov
mov
mov
fistps
push
out
in
andb
loope
pushf
xor
data16
out
sub
mov
or
scas
jg
jo
mov
pop
mov
sbb
enter
xlat
dec
fucomi
dec
push
jecxz
mov
in
dec
or
jno
subl
xlat
cltd
lahf
mov
ja
mov
xchg
push
and
and
inc
mov
xchg
mov
pop
xor
pop
aad
arpl
mov
and
adc
and
lahf
adc
movsl
clc
ret
sti
fdivrl
icebp
push
and
sbb
outsb
cwtl
mov
inc
fisttpl
test
xchg
mov
into
cmovg
push
add
cmp
out
sti
repz
mov
jmp
or
pop
push
ljmp
in
rorl
dec
lds
jae
xor
in
jl
lahf
rolb
inc
sahf
cmp
push
jg
mov
js
dec
mov
cltd
add
push
mov
into
mov
jge
dec
inc
mov
sarl
xchg
jno
cmp
mov
rcrl
pop
sub
sub
lock
sar
push
sbb
lret
xor
sbb
dec
mov
sbb
pop
sarb
mov
adc
sbb
out
cld
cmp
out
pop
lret
inc
mov
mov
dec
mov
insl
sub
scas
stos
stc
cmp
sub
cmp
repnz
rolb
xlat
xlat
ret
stos
cmpsb
ds
fidivrs
les
cmp
xchg
imul
cmpsl
cmc
mulb
imul
push
seto
loope
insl
xor
shll
test
cmp
inc
jo
jl
xlat
mov
lods
xchg
aad
je
in
outsb
xor
sub
das
and
push
pop
jl
ja
jp
mov
mov
repz
cli
mov
insl
xor
cmpsb
mov
lret
aam
add
mov
ret
leave
filds
sbb
xor
daa
test
jae
lret
cwtl
mov
pop
mov
mov
inc
rorl
pop
icebp
sbb
out
push
or
dec
lock
jne
xchg
push
mov
jge
cmp
in
mov
mov
mov
sbb
sarb
jbe
in
mov
enter
fisubrs
pop
cmp
lcall
icebp
test
pop
int
xor
icebp
mov
in
icebp
cmp
std
and
inc
sbb
jge
nop
clc
bound
cwtl
arpl
xor
and
adc
sbb
sbb
out
cmc
add
test
push
cmpsb
pop
inc
shlb
sbbl
idivl
es
xor
je
and
out
mov
dec
add
mov
pop
gs
jnp
bswap
mov
pop
in
sub
mov
mov
pop
push
lcall
imul
xchg
std
testb
lahf
xorl
and
cmp
mov
call
jnp
je
dec
int
subb
repnz
insb
mov
jg
outsl
inc
xchg
cmp
rcrl
aaa
gs
push
sub
mov
in
aaa
fs
outsl
jmp
cmp
fdivl
fcoms
movsb
mov
cmpsl
jae
pop
bound
push
or
lds
cmp
sahf
jecxz
pop
jg
repnz
add
xor
in
pusha
cmpsb
and
out
jecxz
cwtl
scas
out
shlb
adc
mov
jp
sub
cmp
sahf
mov
and
rcrl
push
sub
push
fcmovb
incl
scas
loopne
pusha
pop
stos
xor
lods
pop
xor
sbb
js
inc
dec
or
out
and
popa
xchg
sub
cli
jle
sti
lret
or
adc
jno
pushf
decl
mov
fistpll
add
nop
pop
in
jp
cld
aad
mov
js
add
stos
pushf
inc
dec
dec
xor
push
gs
add
jnp
dec
shlb
xchg
xchg
enter
xchg
dec
and
and
mov
add
cmp
jmp
rorl
pop
pop
mov
mov
cmpsl
popa
cmp
push
xor
stos
pop
jge
ret
and
lock
xor
aad
mov
pop
jae
push
xchg
xchg
aaa
mov
or
imul
and
jbe
mov
pop
div
test
inc
and
sbb
lret
and
mov
pop
jae
xchg
xlat
orb
mov
insl
data16
sti
push
sbb
imul
push
mov
lods
inc
mov
jmp
xchg
popf
aam
and
ss
pop
cld
out
jecxz
repz
rorb
cmp
fs
mov
jne
jle
aas
and
mov
mov
mov
adc
jno
imulb
cmp
dec
cli
pop
and
sbb
inc
mov
push
pusha
ret
xor
sub
repz
sub
arpl
fnsave
inc
movsl
push
xchg
icebp
mov
add
repz
movl
inc
adcb
aam
cs
lods
adc
sbb
out
idivb
jecxz
mov
push
test
cmp
aam
pop
push
fists
stos
jns
repnz
xor
xor
pop
cmpsl
loop
sbb
les
or
xchg
cmp
push
mov
popf
jl
and
test
jo
mov
stos
jno
cmpsb
mov
jecxz
imul
inc
test
sub
add
lret
shr
xchg
sarl
arpl
out
adc
lods
mov
xchg
xchg
cmp
mov
outsb
das
sti
lods
sub
mov
xor
pop
les
ret
shrb
inc
mov
insb
dec
arpl
adc
shlb
jge
insl
loope
mov
push
pop
xorl
xor
sbb
xor
pmaddwd
adc
scas
es
shll
lcall
mov
mov
push
mov
aaa
es
and
test
mov
js
ret
bound
cmc
cmpsb
ljmp
lods
loop
mov
into
jno
shlb
push
dec
sub
push
aaa
fiaddl
push
xor
pop
pushf
cmpsl
addb
pushf
xor
and
jno
jae
nop
mov
jo
jo
add
and
pop
jecxz
je
add
xchg
in
ja
and
hlt
int
adc
push
mov
xor
sbb
out
dec
in
dec
mov
add
out
jle
pop
mov
add
inc
adc
or
mov
xchg
mov
pusha
mov
sub
daa
aam
mov
pop
enter
or
xor
mov
mov
in
aad
xchg
aas
pop
test
dec
fbstp
ljmp
push
fcmovb
movsb
xchg
loop
pop
fdivrl
cmp
fldt
js
in
shll
aas
shl
insb
push
adc
mov
sbb
dec
sbb
lahf
pop
adc
out
pop
std
icebp
dec
or
lock
cmpsl
mov
cmpsl
cmpsl
ja
push
adc
push
mov
sbb
inc
hlt
fldcw
inc
pushf
out
enter
xchg
sub
repnz
push
push
or
mov
adc
jmp
sti
jo
fildl
insl
sub
aad
scas
xor
fildl
sub
pop
mov
lret
pushf
sub
xor
push
mov
cmpsl
fs
lret
dec
pop
adc
in
loope
adc
clc
stos
xchg
out
das
stos
and
xor
int3
mov
add
cmpl
int3
lock
popa
outsl
arpl
outsl
xorb
xor
jg
cmp
fsubr
jbe
xchg
sbb
add
mov
mov
jmp
mov
cs
std
repz
lcall
je
pop
out
inc
or
adc
add
adc
imul
dec
push
dec
and
jmp
xor
xchg
decb
sbb
fsubrl
cmp
mov
daa
popf
jae
sbb
stos
xor
loopne
rorl
lea
data16
movb
mov
mov
fstps
mov
test
das
mov
lods
push
dec
leave
sub
xor
push
xchg
mov
jbe
adc
adcl
int
dec
cmp
inc
rorl
fcmovbe
sti
add
sub
loope
mov
lds
cmp
inc
mov
xor
dec
pop
pop
sar
mov
dec
fcompl
xor
cmp
mov
mov
or
scas
cmp
jno
outsl
push
inc
jp
outsb
push
cltd
mov
fisubrs
popf
push
dec
mov
cmpsl
sub
mov
jae
jle
popa
call
xorb
cmp
mov
movsl
aas
clc
sub
push
shl
das
jb
push
xor
sub
sub
cld
dec
and
jl
jne
push
sbb
dec
loop
mov
add
dec
xchg
in
lahf
sbb
cmp
jmp
cmpsl
xchg
cmp
stos
movsl
cs
ljmp
lds
push
js
add
pushf
cmpsb
lret
pop
test
adc
mov
push
xchg
lods
fisttpl
mov
faddl
lahf
lcall
lods
jmp
pushl
add
movsb
addr16
mov
test
dec
stc
fwait
xchg
jmp
jns
stos
inc
dec
and
push
add
cmp
bound
or
in
nop
adc
jbe
int
mov
xchg
out
dec
lret
xor
arpl
ja
mov
push
mov
das
pusha
icebp
loope
test
out
jb
lock
test
pop
dec
or
or
pop
rcrb
jl
mov
pushf
pusha
test
subl
mov
rcll
push
into
dec
xchg
sbbl
push
out
insl
aas
clc
xchg
insl
imul
lret
jmp
aas
or
dec
imul
sbb
mov
cwtl
or
mov
ja
dec
sbb
pop
mov
add
sbb
mov
out
cmp
cmpsl
sti
mov
mov
pop
pop
pop
mov
jmp
insb
sbb
sbb
and
fnstsw
jl
bound
xchg
or
mov
arpl
mov
mov
icebp
dec
out
add
sbb
or
shll
insl
mov
mov
pushf
mov
js
cmpsb
movsl
mov
lahf
push
inc
dec
xchg
mov
or
pop
sbb
aas
pop
pop
mov
leave
cmc
mov
cmp
lahf
leave
pop
mov
sbb
sar
xchg
sub
mov
mov
scas
xchg
aam
aaa
jbe
pop
aaa
push
inc
lcall
lods
pusha
or
in
pop
stos
sub
sbb
orb
mov
and
enter
cmp
push
movsl
in
xchg
mov
add
or
push
rcll
lock
or
sub
dec
pop
cmp
out
jo
sub
stos
in
adc
pop
jecxz
out
dec
inc
repnz
cmc
pop
push
hlt
fsub
xor
sub
rol
int
jae
pop
shufps
gs
adc
push
or
push
nop
popf
imul
fisttpll
push
jo
out
mov
popf
fbstp
or
in
lahf
add
sti
xchg
dec
mov
jmp
lcall
je
movb
mov
fwait
movsl
mov
call
pop
fisttpll
cmp
decb
mov
xor
sbb
and
aam
mov
add
inc
inc
and
ficoms
xlat
out
movsb
push
cwtl
inc
push
dec
lods
not
inc
adc
sti
pop
mov
rol
push
je
dec
xor
sti
xor
sbb
nop
sti
bound
in
jnp
sbb
shlb
push
mov
fs
repnz
inc
mov
pop
outsb
push
les
addr16
hlt
ss
or
lds
pusha
aaa
aam
aad
movsb
cmp
cmpsb
dec
mov
mov
outsl
push
xor
pop
test
push
adc
cmp
add
movsb
lgs
shl
stos
shr
push
aam
aaa
cmp
sub
loop
mov
mov
xor
lahf
sbb
push
add
arpl
xchg
mov
pop
roll
jg
aam
subb
inc
aaa
enter
push
stos
dec
lcall
cmp
cmp
inc
and
push
mov
and
mov
xchg
lcall
push
ret
xor
cmp
or
ret
inc
and
xchg
mov
sbbl
shrl
scas
test
cmp
out
and
xchg
xor
pop
mov
lea
int3
arpl
push
mov
imul
fisttpl
pop
test
jmp
cmc
stos
mov
add
xlat
hlt
mov
lret
jo
int
insl
in
pop
je
repnz
test
test
xchg
xchg
in
idivb
mov
jmp
cwtl
push
ret
adc
arpl
int3
xchg
in
and
outsb
mov
cwtl
fnsave
mov
and
dec
cmp
ret
xchg
scas
or
push
mov
mov
rol
mov
push
add
icebp
mov
adc
xchg
rorb
addr16
stos
fadd
scas
int3
add
mov
dec
or
sti
iret
hlt
mov
add
adc
xchg
lcall
sbb
insb
stos
ror
lock
iret
cmc
adc
xchg
cmpsb
ret
xchg
popf
and
cmp
cltd
jle
bound
fidivl
inc
jg
cmpsb
out
dec
and
lahf
xchg
push
mov
dec
shr
mov
push
lea
push
ret
ja
loopne
lea
dec
cld
mov
dec
sarb
pop
in
lds
out
pop
call
add
jge
inc
and
ficoml
jp
aad
cwtl
cmp
ret
arpl
jbe
mov
imul
mov
lret
roll
dec
frstor
cli
out
sbb
jno
popf
xor
push
out
out
lahf
or
popf
dec
pop
dec
mov
int3
inc
aad
mov
sbb
dec
add
daa
mov
cmp
xor
and
insl
inc
xchg
imul
and
leave
shrb
orl
lea
daa
push
out
fsubrs
push
add
sbb
pop
add
ss
in
mov
sub
mov
push
ljmp
xchg
or
test
mov
in
push
inc
bound
cmp
aaa
popf
mov
addr16
cwtl
mov
pop
xlat
filds
cld
inc
xchg
mov
push
icebp
and
jg
add
das
sub
sbb
push
mov
outsb
push
xchg
push
add
lods
xchg
aaa
mov
jb
test
xor
scas
je
imul
pop
push
cli
outsb
pop
aaa
cmp
sbb
dec
cld
stc
in
pop
lds
push
pop
das
int3
test
mov
mov
int
push
jmp
enter
ja
add
mov
inc
mov
dec
or
wrmsr
mov
insl
dec
sub
xor
outsb
sbb
jmp
sub
adc
fiaddl
es
add
mov
mov
and
movsl
rcrl
pushl
stos
adcl
loope
dec
enter
test
ja
aaa
cltd
loope
lea
inc
inc
or
cmp
add
xchg
mov
mov
sub
fnsave
es
mov
iret
jle
xor
pop
jg
js
adc
or
pop
mov
loopne
push
scas
repnz
fisttpl
xchg
jg
pusha
inc
enter
leave
es
xchg
insl
sub
mov
mov
mov
xchg
cltd
inc
xchg
test
arpl
fstpt
fidivl
mov
ljmp
xor
out
movsl
lcall
mulb
mov
test
jp
and
cmp
mov
push
pusha
dec
or
lret
popa
dec
sbb
mov
adc
cmp
mov
mov
cmpb
fs
and
mov
sbb
rcll
mov
jle
in
inc
mov
out
sarl
rcr
add
movsl
xchg
mov
xorl
outsb
mov
mov
cltd
mov
cs
cmp
hlt
scas
mov
divb
push
popf
sbb
xor
mov
testl
push
push
jns
sbb
mov
popf
sbb
xor
fnstenv
mov
popf
xor
je
neg
mov
loope
dec
mov
imul
inc
add
int3
std
mov
sub
cmpl
mov
mov
fdivrl
in
adc
outsl
jg
data16
mov
gs
mov
icebp
or
mov
jbe
aas
fsubrs
and
adc
or
mov
les
jbe
lcall
adc
out
xchg
jge
sar
decl
in
xchg
mov
xlat
lds
loopne
repz
xchg
in
outsl
sub
pop
mov
lds
aas
outsl
fwait
pop
sahf
addr16
aam
inc
stos
gs
sub
mov
sub
add
fisubrs
test
cmpsl
pushf
mov
push
outsl
outsl
fsubl
decb
out
dec
lret
or
test
ret
inc
popa
xchg
imul
dec
incb
add
icebp
xchg
in
fidivl
aas
cmp
outsl
push
dec
dec
and
push
loope
mov
push
sbb
or
xor
mov
add
pop
or
sub
scas
popa
cmp
push
out
sub
jecxz
fsubrl
js
shl
inc
jg
mov
movb
sub
jmp
sti
mov
or
loop
rcrl
stos
repnz
je
mov
ret
es
nop
cmp
hlt
lea
push
call
mov
cltd
xchg
cmp
pop
sbb
pop
mov
imul
inc
or
sbbb
xor
dec
outsb
jge
push
push
adc
pushl
mov
cmp
clc
mov
mov
insl
movsb
sbb
adc
push
push
add
xchg
xchg
push
cld
jno
or
mov
mov
and
bound
clc
and
mov
lods
lods
push
clc
inc
push
rorb
mov
jbe
int
ds
pop
sbb
jo
inc
jbe
mov
pop
mov
data16
push
jae
mov
outsb
test
loop
xchg
mov
mov
cmp
push
jae
sbb
lahf
into
call
repnz
dec
aam
dec
sub
sbb
push
mov
dec
roll
mov
push
movsb
inc
sti
or
loop
xchg
jbe
mov
and
sbb
dec
cmc
fnstcw
fcomps
add
jp
mov
andb
adc
adc
repz
cmp
sub
jae
cmp
mov
fsubr
sbb
test
push
in
push
sub
jne
inc
pop
pusha
fmuls
push
pusha
sahf
rolb
loop
data16
stos
mov
jp
mov
mov
add
xor
aas
mov
or
mov
jecxz
nop
ss
adc
leave
xchg
dec
inc
int3
imul
cmpsl
insl
xor
xchg
adc
pop
cmpsl
cld
push
xor
sbb
fisttpll
or
icebp
add
stos
insl
popa
lock
cmpsb
jl
mov
mov
xchg
gs
or
stos
pop
lock
push
lods
push
popf
cmpsl
xchg
adc
test
adc
sub
pop
popa
negb
mov
cwtl
cli
xor
lods
jns
mov
jns
repz
shlb
arpl
mov
dec
stc
adc
add
add
imul
push
std
testl
push
mov
cmp
pushf
leave
pop
lods
cmp
xchg
pop
xchg
loopne
mov
loopne
mov
cmpsl
adc
dec
shlb
push
or
push
xor
jo
jmp
add
xchg
cmpsb
add
loopne
sbb
xor
fs
int3
mov
sub
mov
mov
or
out
icebp
xor
cmp
push
mov
sub
out
mov
sar
hlt
imul
pushf
dec
fildll
push
ljmp
add
loope
add
cwtl
add
mov
insl
insb
pop
adc
xor
add
mov
je
mov
jne
std
push
push
mov
push
add
sbb
fwait
mov
fwait
outsb
lods
jl
mov
flds
mov
testl
gs
jge
mov
fisubl
cmpsb
ss
int
push
das
dec
es
mov
loop
jmp
adc
mov
fninit
cmpsb
mov
cs
std
mov
mov
pop
rclb
enter
orl
xor
cmp
jp
cltd
clc
xchg
adc
repz
imul
jno
mov
adc
push
aaa
gs
ret
dec
jno
mov
sbb
loop
js
mov
movsl
xchg
jge
ret
mov
jl
test
and
xchg
xchg
lds
fstpl
cmc
adc
fmuls
and
test
mov
fnstenv
sub
addr16
call
pop
jns
movsl
mov
xchg
push
lret
adc
out
dec
mov
xchg
push
in
and
cs
lret
insb
lret
mov
rolb
and
inc
or
mov
insb
lods
lods
mov
fdivrl
stos
mov
xchg
sbb
imul
bound
mov
mov
jmp
mov
mov
lret
push
repnz
sub
test
aaa
xchg
dec
sbb
ja
pop
es
fs
or
inc
dec
push
stc
fwait
mov
mov
enter
sbb
inc
arpl
mov
add
lods
sti
jnp
push
ret
mov
std
hlt
repz
xor
and
faddl
mov
out
cmp
ds
movsb
and
xchg
sub
incb
in
jge
sbb
mov
hlt
int3
mov
pushf
call
lods
ds
jnp
aaa
cli
cltd
dec
call
adc
lret
pop
add
shrb
jno
mov
add
imul
mov
pop
sbb
test
or
pop
rorl
and
pop
mov
inc
and
movsl
jo
jle
push
fcomps
inc
das
popf
mov
pop
adc
stos
int3
dec
movsl
xchg
mov
dec
repnz
loope
sbb
inc
inc
or
jne
xchg
mov
push
jbe
push
imul
cmp
xor
add
mov
fwait
cmp
dec
jo
lcall
popl
xchg
call
cs
jbe
adc
popf
jns
sahf
in
or
scas
ret
jb
mov
aad
and
mov
ja
dec
out
fisubs
add
lahf
jo
hlt
pop
call
xchg
adc
clc
add
inc
or
mov
fcomps
out
xor
push
mov
sub
push
iret
xor
pop
lret
xor
push
inc
rcrl
pop
nop
imul
dec
sbb
jmp
sbb
shll
dec
in
in
mov
mov
fdiv
adc
aas
inc
imul
cs
ss
xchg
stc
ret
add
jb
and
sahf
jmp
mov
xor
or
push
jb
add
out
sub
xchg
mov
mov
inc
cs
cmp
pop
cmc
mov
fcoml
filds
testb
and
test
add
dec
test
enter
outsb
mov
push
and
cmp
lock
scas
mov
int3
or
dec
add
dec
or
sbb
and
mov
lretw
scas
testb
mov
xchg
enter
mov
stos
in
push
notl
or
jle
inc
in
push
lret
jp
add
pop
add
int
sub
shr
mov
aam
repz
dec
daa
ljmp
adc
js
pop
stc
mov
pop
inc
inc
mov
mov
or
out
pop
sarl
sub
mov
jbe
mov
clc
popf
add
add
and
cmp
cwtl
push
test
and
mov
cmp
jmp
sub
repnz
sub
sbb
clc
cmc
test
jo
loopne
out
and
stos
rcll
mov
add
ret
ret
push
cs
fldl
test
mov
mov
jne
out
daa
mov
pusha
cmp
push
inc
out
insl
sub
movsl
jb
pop
outsb
hlt
dec
pop
pop
movsb
xchg
push
shl
dec
jmp
out
in
jmp
hlt
add
sub
sub
lcall
push
inc
shl
and
fmuls
adc
lret
sahf
sub
ja
or
sti
loope
mov
xor
fprem1
or
push
add
pop
cmp
mov
sub
inc
lods
lcall
popf
cmpsl
pop
xchg
mov
addr16
adc
cli
add
decb
mov
jo
pop
int3
loope
xchg
loop
sub
shrl
mov
push
mov
iret
int
cmp
pop
lahf
outsl
idiv
push
mov
jo
push
and
mov
rclb
stos
cmpsb
mov
sbb
xchg
jo
and
es
fucomi
mov
and
ljmp
sarl
xor
add
mov
xor
ljmp
jmp
xchg
sub
sbb
jae
mov
jns
sbb
push
inc
adc
jmp
test
fnstsw
and
std
sbb
test
adc
and
out
iret
inc
sub
outsb
ds
lds
roll
iret
aas
sbb
data16
and
addl
aas
jge
imul
pop
lock
arpl
xor
movsl
sub
in
mov
sub
test
add
shl
add
mov
call
je
shl
faddp
fistps
cmp
das
xchg
popa
mov
std
push
sbbl
add
xchg
sbb
sub
lret
mov
add
xchg
ror
bound
loop
xor
movl
xchg
jge
out
test
jl
and
and
lds
in
in
or
xchg
cmp
lds
mov
mov
sub
out
out
mov
dec
adc
mov
out
shll
mov
adc
stc
mov
push
sbb
inc
js
sub
loopne
inc
fsubrl
xor
mul
push
iret
lock
ds
movups
inc
and
test
mov
adcl
test
sbb
inc
cltd
cmc
stc
fistpll
mov
je
ja
inc
jecxz
or
ljmp
xor
test
aas
ret
mov
add
aam
add
icebp
cmpsl
mov
xchg
insb
popf
lea
mov
sub
pop
sub
sbbb
jge
ret
or
mov
out
pop
cli
mov
pop
jbe
cmpsb
xchg
leave
andb
test
data16
clc
mov
aad
mov
xlat
push
pop
stos
test
xlat
cmpsb
mov
cmp
cmp
pop
push
adc
ss
mov
or
push
xchg
xor
sub
cmp
and
mov
lret
jmp
sbb
out
jmp
loopne
in
ljmp
jno
push
out
mov
shlb
push
mov
out
mov
bound
pop
int
jae
call
loopne
or
cltd
jl
adc
add
push
push
xchg
inc
int
mov
lds
lcall
cmp
jns
das
dec
in
std
int3
pusha
dec
cmpsb
test
lds
add
outsb
sbb
add
mov
movsl
mov
sti
pop
outsl
or
push
xor
xchg
mov
pop
inc
mov
mov
gs
fsts
fimuls
cmpl
fsubrs
fistpl
mov
cmpsb
add
xchg
inc
jae
pop
mov
and
mov
xchg
sub
mov
rolb
ds
aam
sub
dec
rcrl
cwtl
mov
in
xor
loopne
xchg
loopne
fadds
push
mov
jl
inc
dec
pop
mov
enter
and
or
fists
std
cmp
arpl
jmp
aad
jg
fsts
adc
add
movsb
inc
cli
cli
out
shll
and
movsb
lcall
imul
inc
icebp
ret
xor
mov
push
inc
outsb
pop
xor
das
add
sbb
fsubr
aam
adc
in
call
sub
sbb
push
sbb
xor
jns
sub
sbb
out
loopne
jmp
int3
test
xlat
seta
pushf
fisttps
movl
enter
fldln2
mov
movsl
pusha
rorl
mov
pusha
mov
lods
fstl
clc
xchg
ja
xor
in
cmp
sahf
add
pop
lods
addr16
fsubrs
adc
icebp
in
test
xor
inc
jno
scas
in
shl
pop
jbe
pop
xchg
es
bound
mov
test
cld
xchg
mov
insl
fs
dec
adc
cmc
insb
stos
shrl
arpl
inc
mov
xor
adcl
fcomps
repz
adc
jl
lret
and
negb
in
add
xor
adc
orl
or
pop
pop
jno
fdivrs
pop
mov
ss
test
mov
cs
js
inc
icebp
mov
sub
or
jl
mov
inc
es
or
sbb
call
inc
or
xor
dec
inc
jns
xor
cltd
lahf
insl
rorb
rorl
mov
sbbb
dec
imul
add
cli
femms
inc
lds
xchg
add
pop
cmp
scas
jle
packuswb
shl
stc
dec
add
out
stos
hlt
js
cs
scas
lea
call
lret
lahf
pop
mov
mov
push
iret
inc
sbb
shl
add
iret
push
xchg
lods
pop
jmp
jns
inc
push
cld
or
lcall
das
in
int3
jno
mov
mov
ret
xchg
push
and
shll
and
or
mov
inc
mov
icebp
bound
mov
nop
sbb
lret
scas
add
cld
adc
mov
iret
cltd
idivl
lock
or
push
lahf
lock
rorb
sahf
xor
and
shll
cs
outsl
xor
into
out
xlat
fdivl
repz
inc
cmp
sti
imul
ss
inc
mov
les
xorb
jge
loopne
hlt
sub
and
nop
iret
nop
add
xor
xor
aad
xchg
or
mov
lea
ficomps
fidivrs
xchg
sahf
and
mov
xor
jge
test
insb
add
out
cmpl
lock
mov
pop
es
add
cmpsl
out
jp
pop
xchg
movsb
hlt
lea
jl
lcall
lock
push
mov
xor
adc
shr
fadd
sahf
ds
sub
cmp
xor
jle
loop
into
cmp
dec
or
sub
shll
cs
inc
dec
gs
push
fucomi
popa
jge
shll
inc
or
cs
mov
ret
imul
push
fwait
xor
jg
add
mov
popf
int
cmp
fsts
xlat
iret
daa
pop
lods
mov
push
test
mov
pop
out
and
inc
bound
push
xchg
lahf
adc
inc
pop
mov
sbb
and
fcom
out
sbb
into
cmp
addl
nop
addr16
jge
and
and
lock
dec
jb
inc
sbb
repz
jge
push
shlb
sahf
lods
mov
fidivs
mov
notb
sub
in
js
jb
fwait
out
insb
dec
xchg
in
cmp
enter
mov
imul
xor
fwait
int
add
sub
call
xorl
adc
push
into
in
stc
cmpsl
push
test
jmp
cmp
dec
ljmp
aas
sbb
aaa
std
int3
mov
sbb
cs
jns
jg
add
aam
mov
fimuls
lcall
sub
ficoms
mov
push
fxch
inc
les
bound
lea
xor
leave
lea
xchg
fdivrl
jae
push
addr16
fstpl
dec
inc
sahf
jnp
ret
mov
inc
imul
adc
sti
aam
rcll
xchg
inc
out
pop
xorl
sbbl
mov
enter
mov
push
in
js
jnp
adc
int3
mov
out
mov
lock
inc
outsl
movsl
adc
jg
sbb
js
roll
xchg
cwtl
cld
popa
sbb
jnp
arpl
orl
add
movsb
dec
xchg
mov
cld
add
xor
mov
ret
mov
testl
repz
pop
sbb
mov
mov
push
and
ljmp
or
cmp
movsl
pop
pop
jg
xor
jle
cltd
movsl
unpckhps
sbb
xchg
xchg
or
scas
sbb
movsb
lahf
mov
cltd
or
xchg
outsl
shrb
loopne
xor
push
cmp
xor
sub
loop
lahf
div
aam
xor
mov
jmp
cltd
add
arpl
mov
jns
sub
sbb
mov
add
fwait
jecxz
inc
inc
arpl
push
mov
jb
push
ds
int
lcall
inc
sbb
orb
jmp
imulb
sub
loopne
add
test
pop
sbb
cwtl
and
cmp
repz
into
mov
dec
lock
xor
xchg
push
pop
lcall
xchg
or
cltd
inc
loop
mov
rcrl
sub
nop
or
daa
ficomps
fidivs
mov
bound
mov
mov
loope
ljmp
mov
jmp
ds
or
adc
pop
cmp
test
push
fs
xchg
cltd
das
popf
dec
mov
in
inc
mov
jmp
jmp
test
out
lea
iret
xorl
mov
rcrl
repz
fwait
push
fidivrs
sub
testl
and
cmpsb
loope
pushf
pusha
lods
movsb
rcrb
imul
gs
push
ds
push
xor
fidivrs
arpl
rep
dec
sbb
add
es
fwait
inc
in
aad
and
and
ret
inc
push
jmp
xor
call
sbb
daa
sbb
pushf
jnp
push
int3
outsb
jnp
enter
stc
pusha
adc
mov
lret
inc
movsl
fstpl
jp
out
int
out
cltd
push
lret
mov
js
adc
mov
lahf
pop
sub
test
adc
cmp
ljmp
sbb
jmp
iret
fs
add
bound
adc
popf
pop
shl
inc
repnz
mov
sbb
mov
int3
inc
push
mov
jmp
mov
mov
lahf
mov
mov
adc
pop
mov
scas
dec
mov
push
sub
or
mov
jo
pop
jg
dec
pushf
or
in
arpl
dec
push
sub
je
in
adc
xchg
dec
mov
xchg
mov
or
lea
scas
sbb
inc
aad
lret
push
bound
jbe
std
popa
adc
enter
dec
xchg
ljmp
cmc
add
adc
sbb
mov
es
and
push
inc
or
aam
pop
pop
xchg
mov
xor
xor
mov
test
mov
outsl
test
pusha
mov
jg
es
pop
outsb
out
inc
sub
mov
and
xchg
lea
and
cmc
jp
fiaddl
fmulp
xor
mov
inc
sub
cs
adc
cwtl
outsl
mov
aam
xchg
out
int3
inc
decb
mov
ret
pusha
jns
mov
ja
clc
fisubl
mov
and
mov
cmc
dec
popa
mov
cld
mov
dec
and
cwtl
inc
rol
sbbb
mull
ja
pop
jge
or
call
dec
jnp
stos
fwait
not
cmpsl
lods
jp
stc
fldl
sbb
dec
jp
pushl
push
dec
xchg
hlt
push
cltd
cmp
shr
jmp
add
adc
or
push
sbb
sub
lods
in
jns
xor
rcll
push
mov
dec
pushf
mov
sub
gs
push
xchg
xor
inc
pop
xchg
adc
sub
add
es
lahf
xchg
das
cmp
push
into
xchg
cmpsl
mov
aam
arpl
inc
push
int
out
ss
pop
test
jg
mov
push
push
adc
inc
int3
testl
inc
sub
push
fcmove
loope
in
adcb
dec
fisubs
in
cltd
rcrb
lods
jge
xor
inc
add
ljmp
loop
lret
mov
clc
sbb
insb
dec
mul
bound
xchg
mov
loopne
add
and
jg
das
jb
dec
in
adc
push
out
xchg
mov
jae
stos
lea
push
xchg
sbb
mov
adcl
cltd
test
adc
cmpsb
adc
or
movsl
shlb
test
stos
mov
cmp
in
pop
cmp
test
arpl
dec
std
pop
inc
ret
sbb
xor
or
add
jno
stos
sub
push
push
add
dec
outsl
fs
sub
call
out
sbb
ror
stos
push
mov
shll
dec
cmpb
and
cmpb
mov
or
addr16
xchg
inc
mov
jg
addb
shll
into
inc
pop
ds
inc
test
int3
or
sbb
or
repnz
iret
jae
orb
xchg
sbbb
sbb
pushf
and
push
sahf
xor
lds
xorl
das
mov
out
nop
push
jo
inc
es
push
loopnew
mov
adc
sub
sbb
xchg
add
call
mov
lahf
add
push
add
imul
xchg
ljmp
out
jne
inc
xor
xor
xchg
xlat
xor
rclb
in
pop
lock
lods
lea
jns
push
cli
xchg
fbstp
xchg
ja
dec
repnz
sarb
pusha
mov
adc
push
pop
mov
sti
push
lret
mov
dec
enter
lds
sbb
arpl
in
aas
pushf
shl
inc
leave
arpl
xchg
push
sbb
fimuls
cmc
cmc
add
mov
or
pop
ss
stos
inc
push
in
inc
negl
xchg
jbe
mov
shr
mov
inc
insb
cli
ds
outsl
arpl
andb
xchg
mov
cli
cltd
adc
mov
sti
xlat
mov
mov
push
and
dec
xor
sub
jmp
sub
shll
push
cmpsl
movsb
dec
outsb
push
and
lock
xchg
cltd
hlt
repnz
ficoms
aas
push
notl
or
cmp
in
repz
fimuls
jno
mov
push
sbb
lds
xchg
sub
jnp
mov
adc
push
jb
mov
add
mov
addr16
sbb
xchg
xchg
jno
mov
bound
xlat
sbb
bndstx
ret
cmp
add
ss
adc
sbb
jae
hlt
shll
leave
mov
lahf
dec
dec
sbb
jb
mov
int
fs
xor
stc
aam
mov
stc
iret
mov
add
loope
fucom
fcoml
mov
loopne
sarb
sub
inc
pop
and
icebp
rcrb
pop
cmpsl
or
adcl
xchg
cmp
jns
add
push
pop
sub
daa
inc
push
ss
mov
xorl
xor
mov
sub
data16
int
jnp
iret
jecxz
mov
test
xor
mov
shlb
xor
mov
xchg
push
mov
mov
lea
iret
sbb
xchg
xchg
pop
rorb
pop
fwait
adc
and
add
sub
ss
repz
cmp
popa
stos
cs
int
cmp
adc
insl
and
pop
test
lcall
iret
ret
add
scas
fcoml
sahf
xchg
aam
xchg
insl
adc
adc
imul
push
mov
cs
loope
push
scas
ret
xchg
jg
call
push
mov
mov
leave
mov
enter
xchg
dec
push
jmp
lret
jo
call
test
cmp
rcll
test
xorl
jne
mov
dec
in
pop
add
mov
pop
test
mov
jae
dec
push
add
push
mov
hlt
scas
mul
data16
pushf
cmp
lret
mov
or
out
es
rorl
jnp
xor
leave
dec
adc
insb
cmp
xor
ret
mov
sahf
scas
or
jg,pn
int
pop
and
fs
imul
enter
jae
sub
dec
mov
jp
xchg
or
mov
pop
add
mov
or
or
mov
mov
dec
fwait
lods
and
in
push
sti
or
add
aam
and
imul
rcl
mov
push
pop
rcl
or
dec
mov
subb
sub
xor
imul
out
xchg
mov
or
aaa
faddp
push
pop
push
addr16
je
loop
notl
sub
push
pop
fsts
sbb
sbb
mov
adc
lahf
insb
add
repnz
stos
sbb
pop
fisubrs
ret
pop
adc
sub
setl
dec
fildl
lea
pop
xorl
fsubs
add
jmp
xchg
xchg
adc
inc
mov
outsb
dec
cld
and
lock
add
and
lahf
out
in
pop
adcb
mov
add
jmp
mov
sub
daa
nop
clc
adc
mov
adc
mov
cmp
adcb
call
es
test
pop
lcall
int
pop
push
pop
adc
push
sub
leave
fs
iret
mov
inc
hlt
insb
outsb
in
sbbl
or
jmp
data16
dec
sub
fsubp
mov
add
sahf
stos
jno
or
or
add
and
dec
or
jno
xor
dec
stos
jo
imul
dec
movb
cld
jno
mov
or
inc
jl
push
stos
cmp
inc
leave
mov
xlat
add
mov
mov
jne
testb
xor
add
add
fadd
clc
test
fbstp
lcall
and
imul
rol
and
sbb
sub
scas
shll
clc
dec
fwait
pop
stos
cmp
into
pop
xlat
add
jb
arpl
cltd
xchg
into
sbb
das
mull
jae
or
push
cmpsl
xchg
jae
jne
scas
and
jno
jae
clc
mov
and
adc
in
orb
out
add
into
scas
sti
mov
mov
cs
add
adc
cmpsb
or
into
inc
repnz
outsl
pusha
je
mov
lahf
in
insb
out
sub
pop
out
iret
ror
jns
mov
loop
or
out
in
fisttpll
sub
pop
lcall
inc
jo
out
push
or
jne
push
mov
xor
lea
jg
pop
push
jb
stc
adcl
xlat
and
clc
test
push
pop
out
push
mov
cltd
les
pop
pop
lock
std
es
outsb
cmp
pop
pop
sub
scas
fwait
mov
mov
add
mov
add
lods
ret
ljmp
add
mov
out
daa
xor
mov
cmpsl
push
or
mov
mov
cmp
or
xchg
inc
inc
jge
jmp
push
mov
sti
or
test
jg
sbb
dec
xchg
mov
sbb
mov
loope
out
xchg
xor
js
jle
dec
and
mov
xor
adc
mov
lret
add
sub
inc
clc
sub
sbb
xchg
add
add
stos
or
adc
jmp
jmp
mov
into
icebp
adc
das
lret
lea
xchg
dec
xchg
dec
mov
jae
jg
das
add
lds
xor
jmp
xchg
test
pop
jg
sub
jns
dec
sbb
mov
scas
aas
inc
imul
xlat
pop
dec
mov
mulb
inc
aas
push
je
movsb
iret
out
push
ss
or
and
int3
push
lods
in
aam
cmc
adc
and
add
inc
pop
xor
xchg
mov
shlb
inc
rol
lea
push
das
rcr
mov
mov
push
js
aad
aad
xchg
push
xchg
loope
mov
cmp
inc
fwait
js
loope
xchg
xor
and
pop
pop
push
cmp
dec
pusha
cmp
fnstcw
lret
xor
jg
sub
fiaddl
jle
adc
jle
dec
jne
pop
cmc
xchg
mov
ljmp
in
push
jno
jns
frstor
outsl
repz
dec
jno
loop
dec
cmp
pop
test
cltd
xor
mov
aaa
lahf
in
mov
sbb
xor
test
cltd
ljmp
lods
ret
test
adcb
push
fdivs
adc
std
xchg
sti
in
push
stos
rclb
pop
popf
mov
shrb
shll
push
dec
es
add
cmp
out
es
loopne
push
sub
aas
and
outsl
jmp
xor
add
jmp
imul
inc
add
pop
inc
lahf
ljmp
xchg
and
pusha
xor
gs
pop
cmpsb
icebp
inc
xlat
hlt
or
test
shlb
fcompl
mov
or
pop
pop
int3
loopne
std
jecxz
rclb
aam
in
sub
xor
fidivrs
aaa
imul
xorl
js
xlat
fiadds
adc
push
sti
pop
cmp
cmp
mov
xor
xor
jnp
mov
adc
pushf
outsb
data16
sub
ds
and
push
arpl
into
push
jle
sbb
mov
outsb
je
sahf
cmp
mov
dec
in
in
arpl
jae
and
lret
adc
loopne
push
mov
lods
cmp
loopne
xor
pop
in
jmp
pop
sahf
jo
bound
push
fldt
push
aas
cmp
mov
loope
push
or
adc
jo
sbb
inc
xor
pop
in
pop
jns
ficoml
jl
in
xchg
xor
jl
sbb
cmp
repz
aam
cs
mov
mov
ds
in
popa
lea
dec
sbb
xor
mov
and
push
inc
jbe
jns
pop
out
pop
add
add
add
imul
cwtl
jnp
shlb
push
add
pop
inc
lock
sub
or
and
out
repnz
pop
out
pop
outsl
aad
push
lds
js
and
jo
cmp
jge
movsb
out
push
imul
cli
jne
adc
mov
pop
sbb
inc
jo
aad
aaa
inc
mov
aad
jns
jne
sub
aam
ret
lret
xor
push
jno
jno
inc
test
cmpsb
push
gs
xor
idivl
ret
std
jle
push
fnsave
hlt
push
xor
loopne
mov
insb
adc
cmp
xchg
pop
call
sbb
lret
cmp
jp
jno
xor
ret
mov
movsb
add
dec
push
lret
jp
pop
or
sbb
sbb
daa
in
pop
outsl
sbb
dec
xchg
mov
fidivrl
or
mov
daa
ret
inc
push
mov
add
add
xlat
mov
mov
mov
mov
dec
decb
cmpsl
stos
outsl
out
lret
xlat
scas
stc
lcall
jns
sub
inc
mov
in
sbb
stos
rolb
sbb
arpl
loope
pop
call
xchg
pop
push
out
mov
or
sbb
sbb
cmp
jo
push
jge
cmp
je
cmp
roll
or
mov
out
jle
lds
mov
lods
frstor
aad
je
loopne
mov
pop
mulb
pop
and
pop
push
test
cmp
or
adc
jge
xlat
fdivr
add
mov
cwtl
insl
mov
dec
mov
sub
test
es
scas
jns
inc
pushf
and
cmp
push
xchg
movsl
ret
pop
adc
cmp
push
cmc
jle
push
pop
dec
push
inc
jp
mov
inc
lret
xor
mov
fistps
and
cmp
out
mov
pop
push
icebp
sbb
loop
push
pop
lea
add
movsb
push
mov
xor
jne
and
int
aaa
cltd
mov
xchg
sti
out
mov
iret
sbb
sbb
lods
cmp
mov
add
dec
cmpsb
repnz
xchg
mov
mov
lret
test
aaa
or
cmc
cld
shl
sub
push
cmc
push
cmp
and
mov
lret
repz
data16
pop
ret
nop
outsb
nop
jp
add
popa
mov
jle
pop
inc
ss
rep
sub
test
js
mov
sub
adc
dec
pusha
and
xchg
inc
inc
shll
loopne
mov
repz
popa
lahf
xor
outsl
cltd
lret
push
idivl
insb
inc
jae
loopne
scas
ret
hlt
cmp
pop
jne
add
cmpb
rol
cmp
adc
cmp
and
dec
adc
sbb
rcrl
sbb
jge
xchg
xor
mov
stos
push
aas
jns
or
aas
add
fcoms
mov
push
or
mov
fcmovb
lods
ss
lock
cmp
hlt
and
cmpsb
jnp
movsb
jg
mov
cmp
cld
test
popa
jnp
xchg
xlat
cmp
adc
sub
push
sub
push
push
mov
mov
mov
dec
repz
orl
cmpsb
sti
imul
push
push
cwtl
in
aaa
mov
and
add
dec
push
js
xor
lcall
scas
sbb
dec
lods
mov
ljmp
mov
int3
mov
imul
fsubrs
dec
clc
aam
add
mov
xchg
stos
lahf
lcall
adc
sbb
pop
cmp
xchg
imulb
xor
dec
and
movsl
lret
sub
or
lcall
loopne
mov
test
jg
inc
push
lret
mov
pcmpeqb
into
mov
xchg
xor
mov
ds
jo
mov
push
icebp
mov
cmp
leave
add
str
mov
jns
hlt
cmp
cmp
jne
sti
inc
jmp
pop
sub
pop
jecxz
mov
dec
dec
mov
pusha
jno
pop
sbb
cltd
mov
ror
pop
aam
addr16
dec
sbb
sub
lret
push
dec
jp
jle
rclb
adc
mov
aam
test
lcall
in
or
cmp
lods
and
lss
jle
ds
jmp
cmp
jle
je
or
jcxz
addr16
and
sbb
push
js
ljmp
jmp
xchg
push
test
data16
cmp
scas
jge
dec
repz
imul
sub
mov
dec
mov
add
in
sub
lret
xchg
les
outsl
popf
fsub
add
xchg
xchg
and
iret
out
push
mov
outsb
or
dec
int
jno
xor
lcall
in
inc
std
cmp
dec
shlb
mov
mov
dec
ror
movsb
loope
iret
pop
out
pop
add
call
push
cmc
test
lods
push
xor
fbstp
adc
test
push
sub
in
adc
push
lret
jecxz
sub
pop
ds
push
mov
jno
pop
ljmp
adc
sbb
inc
mov
loope
pusha
cmpsb
jns
cltd
fldenv
lock
incl
jnp
dec
insb
lock
stos
sub
mov
lret
cli
inc
ds
mov
inc
popf
fcmovne
add
mov
pop
addr16
adc
add
ret
es
mov
cmpsl
push
int
jmp
mov
shrb
push
enter
outsb
or
cltd
adc
aad
inc
hlt
pop
es
jbe
adc
and
sbb
sar
mov
js
mov
dec
scas
pop
pop
jmp
mov
jnp
dec
sbb
ret
andl
xor
cld
push
das
pop
jbe
test
imul
push
cmp
pushf
sbb
add
jp
hlt
and
loopne
test
jne
add
dec
addr16
sub
leave
jmp
pop
adc
call
xor
push
xchg
int
fdivs
nop
push
push
sbb
adc
ja
jg
scas
adc
aaa
popf
dec
loope
push
and
rclb
lahf
ljmp
inc
sbbb
push
loop
dec
les
sbb
out
push
cmp
inc
pop
jmp
push
test
bound
insb
add
outsl
push
or
or
or
pop
xor
mov
sub
xchg
pusha
pop
sub
mov
dec
jecxz
or
jl
cs
mov
das
aas
and
mov
movsb
and
pop
push
mov
iret
sub
xchg
aam
outsl
jp
into
outsb
jl
popf
out
xor
mov
mov
xcrypt-ofb
cmpsl
out
xchg
mov
rcr
insl
mov
push
imul
mov
and
cmp
fwait
imul
pop
popa
pop
fs
jecxz
bound
leave
iret
push
idivl
cld
in
cmpsb
cs
inc
orl
jns
pop
outsl
jne
daa
arpl
loop
std
rcl
dec
and
xor
pop
cs
cmc
sbb
lods
adc
dec
cmp
int3
cld
xor
mov
sub
movsb
ja
or
sub
int3
lcall
mov
xchg
hlt
dec
or
into
sbb
push
ret
stos
shl
es
cmp
pop
mov
call
call
daa
jmp
adc
in
adc
sbb
dec
das
xchg
xor
inc
mov
adc
lods
add
and
mov
adc
pop
mov
dec
pusha
aas
or
jb
inc
in
pusha
cmp
imul
movsb
xchg
mov
and
lret
mov
xchg
add
push
in
paddb
lahf
add
ret
lcall
ds
in
add
sbb
cmpsb
test
cmpsb
or
lret
push
add
addr16
push
pop
bound
mov
dec
nop
test
sbb
inc
loop
mov
dec
cmovno
mov
cld
pop
nop
repz
mov
ds
stc
add
iret
cs
mov
outsl
or
cmp
inc
ds
jb
subl
lock
nop
mov
into
adc
fistps
std
mov
sbb
cli
jnp
sbb
or
dec
sub
cmpsb
cmpb
cmpsl
paddd
inc
std
xor
push
pop
popf
jle
rorb
and
jl
dec
mov
decb
cmp
cmp
mov
inc
testb
jbe
pushf
das
sub
mov
stos
notb
mov
jo
xchg
push
in
mov
in
sub
xchg
icebp
push
cmc
dec
inc
testb
out
xor
push
bndldx
sub
xor
inc
cmp
fcomp
popa
sti
sbb
push
sbb
adc
ja
and
mov
adc
xchg
jmp
shlb
outsl
xchg
movsl
into
test
enter
into
iret
add
jmp
inc
push
adc
insb
mov
dec
dec
sub
jno
sub
jmp
pop
je
or
pop
and
add
xlat
mov
inc
pop
fcom
jmp
outsl
fdivl
pop
cli
xor
test
mov
xor
push
orl
into
js
or
std
adc
and
jo
call
ja
mov
aaa
cld
bnd
in
jge
nop
hlt
adc
data16
fnstenv
lods
jle
mov
push
iret
sbb
in
pop
pushf
call
mov
or
ljmp
inc
popa
push
cmc
aad
xchg
mov
push
aam
jno
mov
sub
jl
rclb
notl
add
iret
xchg
mov
sahf
pop
aam
aam
stos
cmp
xor
test
in
or
movsb
jns
popa
sti
shrb
inc
or
adc
lods
loopne
sub
arpl
js
fidivl
mov
mov
test
xchg
test
mov
bound
jmp
out
outsl
aam
sub
hlt
fstl
sub
jmp
notl
adc
inc
adc
xor
jnp
fiaddl
mov
xchg
jb
lods
dec
lock
sbb
or
mov
call
or
hlt
jb,pt
mov
aad
mov
mov
out
data16
bound
pop
sbb
jno
mov
fiadds
adcw
loop
insb
test
jb
test
inc
jp
dec
jns
cmc
jmp
cld
lods
cltd
sub
mov
and
cwtl
jecxz
cmp
pop
sbb
add
mov
xchg
jg
ds
mov
test
lcall
data16
mov
and
push
stos
movsb
sti
sub
push
fisubrl
inc
or
movsb
adc
ljmp
shr
and
push
scas
fildll
dec
and
insl
inc
and
pop
std
jo
scas
sbbl
data16
xor
mov
out
add
arpl
je
and
shll
je
sub
andb
push
test
movsb
loope
push
outsl
aaa
xor
xchg
sub
pop
xor
inc
push
inc
or
pop
fists
adc
push
lods
fadds
and
push
or
lods
adc
push
lock
mov
les
out
push
inc
push
cwtl
inc
pop
leave
icebp
xor
pop
mov
xchg
jb
or
sub
jnp
into
and
jp
adc
mov
sbb
xor
out
cmp
lock
sti
xor
loop
add
repz
jb
repnz
gs
xchg
add
jns
and
movsb
mov
jmp
stc
fstl
fwait
int3
xor
mov
sti
in
dec
push
sub
sbb
inc
mov
pop
sbb
inc
insl
mov
adc
push
mov
pop
fldl
adc
jns
mov
or
ret
clc
adc
shlb
icebp
xchg
sbb
fs
xor
in
ss
rorl
adcb
jecxz
arpl
pop
jmp
mov
int
or
cmpsb
push
push
cmp
aad
xor
hlt
enter
ficompl
jl
dec
add
mov
cli
jecxz
cwtl
test
or
bnd
or
and
std
loope
sbb
push
and
aam
add
dec
test
into
ret
push
scas
cltd
pusha
imul
out
or
call
mov
or
mov
or
and
gs
mov
imul
pop
sbb
int3
mov
inc
arpl
push
add
adc
out
stos
pop
int3
dec
xchg
jo
mov
push
loopne
push
or
mov
jo
jmp
ljmp
ja
inc
pop
sbb
test
adc
pop
out
stc
les
push
push
inc
cmp
in
pop
js
lods
enter
leave
das
sbb
jp
shlb
mov
cld
and
call
movsb
stos
or
popf
movsl
addr16
imul
dec
xchg
inc
aad
dec
movsb
arpl
shll
fimull
mov
sbb
jno
lcall
js
push
icebp
cmp
push
outsb
xchg
pushf
and
ret
lea
mov
das
arpl
mov
xor
fidivrl
mov
into
push
lods
cld
in
xchg
lret
adc
ljmp
negb
loop
push
lcall
inc
jo
and
xor
add
std
adc
shll
shl
add
fidivl
rolb
out
or
cmpb
sub
bndstx
mov
lds
out
leave
add
out
aam
ljmp
mov
dec
sub
jl
lret
mov
cmpsb
inc
xchg
jp
xchg
pusha
clc
outsb
jne
or
cmp
lods
negl
inc
iret
fstl
mov
inc
sbb
fcompl
test
mov
jno
adc
push
sahf
adc
or
aad
pop
mov
sti
lret
dec
sub
pop
cmp
xchg
sub
add
or
jno
xchg
lcall
push
ss
out
das
or
mov
outsb
cmp
xor
cwtl
push
or
inc
cli
xchg
add
xor
fstpt
sti
mov
daa
sbb
out
in
testl
adc
movsb
or
sub
cs
cld
lea
add
push
lcall
imul
and
mov
in
in
in
shrb
lock
aas
push
sbb
pop
mov
mov
lahf
in
je
mov
sub
aaa
pushf
fdivrl
nop
repz
sub
lahf
xchg
or
jl
rcll
inc
pop
cmp
mov
cltd
testl
mov
cmp
jno
sbb
and
dec
aad
es
mov
iret
push
inc
loop
leave
hlt
repnz
imul
jle
shlb
mov
or
rcrl
scas
lret
fbstp
fwait
dec
jle
lea
jne
cmp
mov
push
imul
mov
mov
cmpsb
sbb
push
es
enter
fdivrp
dec
cmp
mov
ret
or
and
add
xchg
cmp
pop
pop
inc
iret
daa
push
push
and
adc
loope
and
mov
inc
insl
mov
xorb
sti
xchg
arpl
lcall
pop
jo
mov
add
popf
loopne
pop
and
cs
repnz
or
cltd
xor
sub
sub
shll
push
adc
je
andb
das
push
in
push
mov
inc
sub
sub
ds
loope
loope
aam
cmp
jge
xchg
sahf
xchg
and
rcll
jle
mov
add
mov
or
lret
rcrb
jbe
cmp
ret
inc
loop
and
test
ja
and
dec
xchg
out
pop
cld
bnd
and
xor
arpl
xchg
dec
mull
mov
pop
jecxz
dec
push
nop
inc
xchg
dec
xchg
sub
mov
add
or
sti
cld
test
cmpl
add
lret
lods
test
and
xor
lods
sub
xchg
xchg
scas
dec
js
dec
mov
stos
roll
aad
push
sbb
mov
int3
arpl
lods
and
sub
pop
mov
xchg
std
movl
xor
add
jnp
call
sbb
mov
ds
add
inc
inc
repnz
int
mov
cmc
sbb
ss
cmpl
sub
insl
ljmp
aam
test
inc
jns
clc
fmuls
xchg
test
out
jae
adc
stc
adc
mov
cmp
ds
mov
mov
fsts
sub
loopne
or
pop
bound
pop
dec
add
fwait
cmpsl
jne
jecxz
push
pop
sarb
ja
out
in
cmp
in
pop
xlat
das
mov
les
shll
ret
inc
sbb
fmull
mov
jbe
cmpsl
ljmp
cmpsb
fstl
fadd
pushf
xor
jg
call
dec
inc
popf
cwtl
inc
enter
add
adc
pop
jo
cmpb
inc
and
jp
dec
mov
jnp
xchg
dec
shll
push
jge
addl
rorl
out
stos
lds
xchg
add
popa
adc
xchg
in
sti
jno
mov
imul
pop
dec
pop
pusha
mov
imul
call
mov
ret
sbb
adcb
cltd
mov
or
ljmp
adc
mov
cmc
nop
imul
and
inc
xor
arpl
lcall
rorl
jae
lret
or
dec
ss
ficompl
roll
mov
iret
outsl
sbb
cli
adc
jo
cltd
jle
int3
frstor
rcll
mov
jns
pushf
xchg
cmpsl
and
mov
js
js
loopne
sbb
push
cmp
daa
std
out
push
lock
int3
jmp
dec
pop
sub
push
dec
imul
pop
gs
mov
or
push
negb
jl
ss
and
xor
nop
xchg
inc
scas
xor
pop
data16
imul
bound
mov
ja
jne
repnz
xor
xchg
cmp
adc
xchg
sahf
push
ret
adc
sub
pop
lock
aas
cli
jl
icebp
out
ret
mov
jp
adc
jmp
inc
sbb
or
sti
les
in
cmpsl
cs
mov
out
or
inc
or
mov
sub
movsl
cmc
dec
sti
push
aaa
cmp
mov
xor
daa
addr16
pushf
fwait
xor
les
es
cli
lods
leave
cli
xchg
ljmp
lret
imul
aad
out
and
rcrb
dec
outsl
and
subb
data16
xor
in
jo
mov
cmp
dec
sbb
sbb
xor
insb
lret
adc
popa
xchg
mov
cmp
jmp
xor
sub
stc
lahf
jnp
negl
pusha
add
inc
movb
adc
ret
aaa
push
mov
pop
push
clc
sub
into
jp
lahf
mov
mov
shll
sbb
jg
push
push
pop
mov
jl
pop
outsb
hlt
sub
pop
shll
lcall
push
cltd
add
sbb
cmc
sbb
xchg
je
clc
out
push
adc
sub
cwtl
xor
aam
js
dec
mov
xchg
dec
cwtl
jnp
neg
mov
inc
mov
push
dec
std
sub
mov
repz
xor
or
inc
jg
mov
jno
add
cmpsb
push
jg
dec
pop
adc
or
xor
fcomps
lret
sti
or
push
leave
jmp
fisubrl
sub
orb
std
mov
mov
or
mov
adc
leave
aas
aam
sahf
fildll
sbb
xchg
test
mov
mov
cmp
cmp
repz
fsubs
lcall
inc
std
lahf
rcrb
nop
add
loop
ret
nop
test
loopne
outsb
out
mov
or
cld
cs
adc
lret
test
cmpsb
adc
sbb
xor
push
or
sub
mov
cld
call
xor
cmc
push
cld
pushf
fmul
jl
mov
mul
popf
or
insb
in
dec
push
xchg
cmp
lock
dec
xchg
movsl
cmp
loope
call
ds
inc
push
xlat
in
lret
iret
int3
cs
scas
jno
mov
cmc
pusha
pop
loope
jnp
xchg
imul
and
cmp
jne
hlt
call
sti
xchg
jne
dec
dec
adc
dec
popf
xchg
cltd
cmp
pop
divl
rcrb
sbb
aas
xor
push
or
punpckhdq
adc
inc
sub
je
xor
xchg
xchg
and
inc
in
and
aaa
jo
shlb
jnp
inc
call
lods
push
sub
gs
jge
into
mov
loop
faddp
or
dec
adc
outsl
lods
nop
incb
ds
or
rorl
jge
xchg
sbb
xor
aad
mov
mov
dec
jecxz
pop
sub
add
daa
xor
dec
std
cs
jno
mov
stos
popa
out
mov
mov
js
jne
loope
pusha
sub
ss
out
mov
or
and
dec
push
out
cmp
stos
loop
lret
or
fsubp
mov
dec
lods
cld
or
mov
pop
daa
inc
dec
inc
lock
iret
popf
add
mov
mov
rolb
lea
stos
cmp
das
and
stc
int
lret
imul
dec
adc
and
cmp
xchg
jl
dec
nop
inc
lret
movsl
and
fs
jl
xchg
jl
bound
jae
sub
xchg
push
stos
movsl
sbb
das
sbb
addl
bound
ret
bound
adc
pusha
adc
push
adc
pop
push
cmp
pop
or
jmp
stos
pushf
xchg
mov
dec
push
pop
cmp
push
cmp
fisttps
enter
and
in
test
adc
xchg
push
xchg
sbbl
ja
sub
sub
mov
les
fldl
push
std
sti
push
jp
sub
sub
jg
jecxz
push
mov
cltd
idiv
fildl
xchg
movsl
jg
insl
cwtl
and
outsb
test
mov
jo
sub
add
push
outsl
adc
lds
mov
dec
mov
jns
dec
xchg
cmp
lret
ficomps
lods
jb
insl
cmp
jle
sub
xchg
inc
repz
das
sub
je
imul
call
mov
adc
ret
pop
iret
pushf
loop
outsb
cmp
and
cmp
stos
cmp
inc
sub
lcall
or
in
shlb
mov
addr16
outsl
arpl
push
adc
jae
int
sub
cs
pop
inc
xchg
push
ds
mov
mov
addr16
mov
or
lret
movsb
scas
sub
xchg
addr16
je
pop
mov
pop
jge
icebp
mov
ret
sub
in
xchg
pop
dec
out
clc
jns
add
rclb
aad
insl
mov
mov
rcrl
insl
xor
xchg
hlt
push
loop
dec
jg
ljmp
test
push
stc
fdivs
adc
in
cmc
mov
push
ret
addb
scas
xor
test
out
mov
daa
fst
bound
fldenv
shll
lcall
sbb
lods
rclb
cltd
lods
adc
nop
pop
and
test
cmc
adc
and
xor
mov
jle
mov
mov
enter
jmp
movsl
cmp
sbb
fldpi
adc
shll
adc
xchg
cmc
or
imul
inc
lea
mov
insb
jecxz
jnp
gs
jle
repnz
xchg
int
lahf
addl
sub
addr16
pop
push
xchg
fidivs
inc
addr16
jl
test
sbb
clc
mov
mov
jle
stos
test
shlb
mov
pop
insb
xchg
icebp
mov
rclb
and
in
aad
sarl
push
jl
fmull
pusha
cli
mov
adc
fwait
cmp
or
xacquire
int3
push
shlb
mov
rorl
sub
into
or
test
or
jge
adc
lret
adc
jno
aas
loope
xor
push
jb
mov
call
pop
ss
or
lret
nop
push
xchg
bound
inc
mov
or
push
dec
ret
pushf
int
or
inc
mulb
lcall
add
adc
fidivs
inc
cmp
dec
jns
out
mov
sub
or
jle
in
fdiv
cltd
pop
test
sbb
insb
inc
xchg
adc
jmp
pop
jae
ja
dec
push
adc
ds
aad
arpl
in
imul
lods
insl
int3
popf
cmp
xor
icebp
and
mov
lock
sub
negl
mov
mov
lock
adc
arpl
sarl
clc
push
iret
das
outsl
add
lret
ret
cld
lods
cmp
add
mov
cmp
push
xchg
push
jo
int3
xchg
push
out
or
sub
inc
lods
rorl
out
inc
sub
aaa
mov
insb
push
or
xchg
pop
sbb
int3
jg
add
lcall
shl
cmp
scas
dec
lcall
sbb
movsb
test
daa
inc
cmpsb
add
add
scas
pop
test
nop
and
pushl
out
imul
jecxz
fcmovbe
fldl
shl
pop
sub
or
pop
rorl
dec
in
fistpl
sbb
xchg
xchg
adc
mov
add
inc
xchg
pop
test
push
add
pusha
cmp
xchg
adc
inc
rcl
fisubrs
or
roll
outsb
cmc
sbb
subl
shlb
das
rcrb
jle
aaa
xchg
lea
popa
mov
mov
test
mov
es
sub
and
pop
pusha
xchg
pop
sti
pop
repnz
add
icebp
xchg
and
outsb
xor
add
lea
push
lock
adc
dec
mov
sub
jp
into
inc
fstpl
push
pop
jo
fdiv
in
pop
fwait
or
mov
roll
mov
and
les
xchg
dec
cs
push
int
ss
lea
jno
in
cli
add
push
or
dec
stos
cmp
movq
dec
inc
mov
push
popa
aam
mov
and
mov
xorb
jmp
imul
add
or
xchg
lods
pop
mov
adc
cmc
dec
repnz
imul
dec
call
orps
and
jge
inc
jnp
sub
sub
jp
push
pop
das
pop
push
inc
jl
or
fdivs
lahf
sub
jno
xor
sbb
ror
mov
test
cmp
stc
pusha
fisubrs
jns
call
in
daa
int
jns
outsl
cmp
fldl2t
jecxz
mov
mov
mov
cmp
xchg
xchg
fcmovne
cmp
daa
andb
and
cwtl
sub
sub
mov
jp
pop
aad
xchg
out
out
mov
mov
adc
xchg
lock
ja
and
fisubrl
lret
inc
inc
pop
mov
arpl
sahf
lds
mov
mov
xchg
adcb
mov
mov
inc
mov
test
sub
pusha
repnz
xchg
mov
outsl
dec
pop
lret
xchg
leave
adc
test
stos
push
jmp
and
es
js
stos
repnz
bound
mov
mov
inc
orb
sbb
and
inc
xchg
repz
ja
ljmp
dec
hlt
mov
xchg
lea
sbb
sub
dec
lea
shrb
pop
pop
cmpsl
xchg
testl
fsub
xor
xchg
push
test
out
scas
inc
and
lea
mov
xor
inc
ja
sbb
mov
add
nop
xchg
push
or
cltd
pop
call
aam
cmp
test
icebp
mov
test
in
rcll
enter
scas
pop
xor
and
shrb
adc
cli
push
clc
cltd
mov
sub
mov
mov
pop
mov
sbb
loopne
jecxz
inc
and
jge
js
jbe
xor
adc
das
movsl
fs
xor
cmp
mov
loop
std
adc
xor
lret
ds
fmuls
test
insl
and
sbb
fisttpl
pushf
lods
xchg
sub
jo
dec
mov
aaa
int
in
rcl
add
mov
and
shlb
mov
enter
or
cmpsb
or
imul
dec
int3
mov
dec
leave
push
fwait
scas
test
xor
mov
lods
aad
mov
add
out
leave
or
jns
mov
lods
and
lcall
lods
andb
sahf
daa
sub
aad
push
sub
add
int
fs
gs
test
or
ss
adc
or
enter
and
jb
popf
cmp
mov
inc
fldt
jge
sbb
xor
inc
rcrb
jmp
jmp
sbb
les
rcll
xchg
lret
jbe
add
push
cmp
sub
and
sbb
outsl
fsubr
ss
scas
ret
xor
sbbl
wbinvd
aas
pop
loopne
adc
and
lods
jl
inc
mov
pushf
insl
push
add
ret
pusha
mov
mov
out
mov
cmp
jnp
mov
cmp
ljmp
mov
or
xchg
xchg
mov
xchg
sbb
stos
icebp
fcompl
aad
mov
int
xchg
sub
mov
and
rolb
mov
mov
push
xchg
dec
test
mov
xor
scas
cmp
clc
xlat
aam
aad
rorb
jns
xor
cmp
jo
cmp
xchg
xchg
lret
in
sub
sbb
push
push
mov
mov
sbb
or
addr16
aas
cmp
test
lock
xchg
insb
test
push
push
scas
mov
dec
xor
add
imul
sub
push
std
cmp
mov
into
jbe
je
cli
repnz
xor
pop
out
stc
push
xor
in
push
shll
test
sbb
push
gs
and
mov
xchg
inc
xor
inc
or
test
outsl
pop
adcb
xor
push
rcll
xchg
jae
ljmp
inc
jne
mov
imul
push
movsb
in
std
add
mov
dec
ja
outsb
jo
popf
inc
shlb
fdivr
mov
in
mov
mov
cld
fisttpl
push
add
addl
pop
pop
sub
or
mov
daa
ljmp
adc
popf
cmp
js
test
inc
mov
fidivrs
cmp
sub
xor
adc
inc
xchg
push
ds
push
fwait
pop
or
repz
inc
clc
and
push
shll
call
dec
sbb
aas
inc
repz
pop
test
mov
jg
jp
cs
push
cli
nop
fcmovb
push
aaa
pop
pop
mov
add
cmp
xor
imul
cld
idiv
pop
das
clc
push
or
sbb
push
add
or
nop
into
imul
mov
inc
cmpsb
addb
add
mov
mov
mov
ret
add
das
pop
sub
xchg
dec
mov
dec
adc
es
es
inc
loope
mov
insb
sahf
sub
mov
xchg
sub
call
or
pushf
out
ret
mov
sbb
pop
xchg
or
push
in
jl
push
mov
cmpsb
movsw
clc
inc
mov
stos
mov
imul
sbb
push
xor
shlb
jge
xchg
enterw
out
and
subl
psllw
adc
call
fcomps
cmp
pop
cmp
xchg
int3
mov
scas
das
dec
cmp
sbb
test
fildl
cmpsb
jns
insl
inc
xor
push
insb
pop
add
push
cmp
stos
pop
jbe
cmp
xchg
addr16
sahf
ficomps
lret
fidivl
imul
mov
add
adc
mov
mov
mov
dec
mov
mov
mov
dec
mov
stc
ss
jnp
sahf
and
mov
xchg
jo
cmpsl
and
push
mov
cmp
mov
fsubrs
dec
dec
test
mov
call
dec
ret
push
add
outsl
test
aam
sti
add
aam
dec
sub
adc
add
adc
sbb
mov
fsubs
mov
bound
pop
andl
pop
fwait
inc
pop
lods
scas
mov
dec
adcl
jns
mov
xchg
leave
in
push
hlt
sub
xchg
fwait
cmpsl
push
mov
xchg
in
pop
fwait
push
test
xchg
and
push
push
jae
lret
pop
je
scas
adc
out
cmc
inc
sub
aas
mov
xchg
inc
repnz
jmp
outsb
or
mov
fdivs
mov
addr16
lcall
das
dec
sub
repz
lret
jbe
add
xchg
cli
shlb
add
lock
stc
push
add
roll
cmpsl
dec
dec
pop
sbb
push
rcrl
jnp
movsl
adc
scas
icebp
xor
and
mov
adc
pop
sbb
stc
push
xor
addr16
and
in
sahf
dec
add
in
rorb
div
sub
jge
imul
leave
mov
int3
adc
mov
or
or
testb
mov
cmp
dec
xchg
addr16
pop
push
loop
ljmpw
lods
or
shlb
adc
and
push
rcl
pop
mov
jns
pop
xchg
shrl
sbb
incl
mov
int3
push
or
mov
mov
imul
repz
scas
scas
mov
pop
pop
xchg
sbb
bound
popf
js
subl
push
inc
cmp
mov
inc
pop
movsl
add
shrl
inc
push
in
bound
ja
stc
das
mov
imul
jmp
out
cltd
fimuls
sti
push
jge
scas
ret
xchg
or
xchg
xchg
xor
imul
mov
cmpsb
lds
in
pop
push
shrb
add
or
loopne
pop
loope
mov
int
sbb
jecxz
xchg
aam
les
lock
push
pop
in
push
mov
mov
mov
push
push
movsb
mov
pop
testb
leave
xchg
iret
loope
je
inc
xor
jmp
aam
sbbb
mov
bts
shlb
fisttps
popf
and
call
or
cltd
cmp
mov
mov
test
dec
jbe
insl
or
add
dec
mov
lret
pop
mov
sub
divl
je
movl
ljmp
hlt
data16
mov
jl
inc
sub
or
das
sub
jp
inc
in
add
cmp
pop
or
test
leave
popa
push
mov
jnp
pause
push
lods
cmp
outsl
in
adc
xchg
daa
add
adc
xor
jno
or
mov
inc
pop
sbb
cmp
repnz
daa
in
addr16
lea
fisubs
lods
and
sub
ret
or
ds
iret
mov
dec
fwait
arpl
scas
ret
int
in
jmp
or
push
in
int3
pop
sbb
nop
xchg
sub
fdivrs
jo
psraw
fcom
imulb
jo
icebp
popa
je
loop
daa
sub
add
lods
mov
mov
lods
gs
push
cpuid
cmp
inc
lds
jb
xchg
shl
inc
jl
filds
fildl
call
in
clc
ds
cmp
out
in
and
push
icebp
je
jge
xorl
pusha
and
mulb
in
adc
je
mov
pop
or
mov
andl
fdivr
xchg
mov
out
push
add
loope
sub
arpl
add
fiadds
in
mov
xchg
adc
leave
aam
push
lret
sbb
push
push
fists
scas
out
xchg
out
aam
cmp
js
outsl
gs
orb
jle
inc
lahf
push
mov
xchg
cmpsl
push
sar
addps
in
pop
orl
jecxz
inc
adc
push
adc
fcoml
adc
dec
rcrl
mov
mov
cmp
adc
add
imul
add
pusha
jo
movswl
jnp
jne
mov
jno
jb
fmull
cmp
daa
in
ficomps
mov
mov
leave
aad
mov
mov
cmp
inc
inc
dec
adc
cmp
xlat
mov
xchg
pop
cmpl
jle
sub
lret
bound
push
out
ds
mov
sbb
dec
into
aas
loop
fstl
jecxz
fldl
jle
fwait
mov
jmp
push
arpl
in
out
and
mov
xchg
lea
fs
dec
lret
mov
movsb
lea
mov
xor
mov
add
rclb
or
std
push
push
mov
ret
out
adc
inc
fidivl
add
cmp
push
icebp
arpl
decl
in
fcmovnu
push
jmp
sti
sti
popa
push
xchg
outsl
shufps
jmp
mov
stc
mov
adcb
xor
jmp
dec
jle
andl
mov
mov
xchg
es
xchg
dec
xchg
sbb
cmc
sbb
and
lea
mov
shrl
cmp
add
in
addr16
addl
ja
in
arpl
ret
or
mov
int
mov
add
inc
fs
repnz
lahf
dec
ja
ret
stc
je
ja
mov
push
jno
push
aaa
aam
aad
jne
xchg
shrl
es
mov
sbb
loopne
in
cli
push
pop
mov
loope
push
inc
addb
jg
push
je
xchg
sbb
and
fs
and
or
ja
cwtl
aam
adc
lcall
fildll
fnstcw
fisttpll
hlt
imul
and
bound
mov
aaa
push
fistl
orb
push
jno
insb
outsb
or
aam
adc
push
jmp
jo
hlt
pop
push
jno
shr
popf
mov
mov
rclb
dec
or
pop
dec
mov
adc
and
addr16
or
xchg
cmp
or
pop
repnz
sub
fsts
mov
lock
das
add
xlat
dec
pop
fwait
sti
out
sbb
push
sarb
cli
cmp
mov
movsb
jl
push
cltd
or
fcomps
adc
faddl
or
movsl
add
xchg
cmp
mov
sbb
call
jno
xchg
mov
jnp
leave
push
jno
jo
lret
fucomi
sbb
cltd
dec
sub
sbb
fwait
add
fists
xlat
pop
mov
insl
adc
mov
adc
out
xchg
outsl
xchg
int3
call
pop
shl
idivl
adc
data16
inc
jbe
cs
iret
mov
sti
mov
pop
pop
push
jle
test
mov
test
mov
popf
icebp
jge
add
mov
mov
and
hlt
mov
clc
out
jno
mov
lods
jge
mov
test
push
lods
xchg
movsl
ret
mov
xchg
pop
stc
push
in
adcb
cmpsb
test
jns
dec
cmpsb
aaa
push
add
pop
mov
adc
push
jns
sar
loope
pop
cmp
jge
push
sbb
xor
adc
mov
jb
cmpsb
clc
jle
arpl
fildll
add
jnp
int
jmp
pop
jns
imul
and
daa
inc
shl
push
sub
out
ret
push
incl
sbb
int
jnp
mov
je
cmp
xchg
sub
cmp
jno
inc
and
xor
jl
je
sbb
mov
cli
popa
jno
sub
cwtl
ficompl
dec
lea
cmp
shrb
out
sub
lret
mov
arpl
je
sub
push
or
mov
in
dec
ss
xor
mov
pop
sbb
xor
rcll
add
rclb
inc
in
aaa
and
mov
scas
aaa
ret
lret
sbb
xchg
cltd
sarl
jbe
outsl
mov
or
pop
out
mov
lods
out
ja
cmp
or
cld
enter
push
mov
test
push
pushf
jecxz
and
test
sarb
call
jnp
aas
int3
cmpsb
xor
cmp
mov
aad
sub
lret
sbb
loopne,pt
ljmp
repnz
aaa
pop
stos
push
out
bound
jbe
sahf
hlt
mov
popf
cld
or
cmpsl
pop
insb
mov
out
cs
sbb
and
outsb
adc
fwait
sbb
sbb
pop
lea
jno
pop
and
stc
rol
cli
xor
add
enter
addr16
outsb
das
or
or
das
pop
ret
sub
cmp
and
mov
push
adc
cli
ljmp
mov
ljmp
and
mov
loopne
jno
test
rclb
sbb
mov
mov
inc
or
stc
xor
lahf
jmp
into
ret
cmp
jno
push
cmpsb
ja
pop
inc
into
test
cmp
cld
dec
mov
mov
mov
push
xchg
int3
dec
into
xor
push
out
or
add
rcll
xor
add
mov
ja
sbb
and
jno
push
lds
mov
add
lods
icebp
mov
jne
jnp
and
xlat
out
sub
xchg
mov
shl
bound
xor
sbb
pop
mov
pop
es
adc
mov
fisubl
test
inc
xchg
out
int
xchg
movsl
push
je
xor
enter
jns
sahf
push
push
dec
dec
pop
scas
pmaddwd
and
call
dec
pop
jg
test
popf
lds
stos
das
push
enter
jmp
cmp
fidivl
bound
ljmp
add
dec
mov
sarl
scas
cmpsl
lock
add
movsl
insb
xor
lahf
mov
cmpsl
ficomps
pop
adc
dec
jno
lret
jnp
add
sub
movsb
inc
mov
xor
mov
es
mov
out
aad
cmp
mov
ud0
fimuls
or
cmp
add
aad
mov
jb
insl
in
pop
stos
push
aaa
js
mov
mov
jne
cmp
orl
es
mov
dec
add
imul
adc
cmpsb
lea
outsb
repz
jns
mov
jmp
jns
and
hlt
enter
sbb
loope
xchg
inc
pop
dec
mov
lahf
lds
mov
push
and
push
fisubl
pushf
xor
and
cmpsb
arpl
aas
xor
scas
mov
mov
fisubrs
and
aad
scas
cltd
push
leave
icebp
xor
pop
jb
jecxz
mov
cmc
lcall
pop
gs
ja
addr16
call
and
mov
es
aam
cmp
insb
or
fs
setge
ss
dec
addl
cmpsb
mov
fsubrl
cmpsl
xor
mov
sbb
insb
jle
dec
mov
push
inc
pop
mov
sbb
lret
loop
das
addr16
rorl
insb
stc
mov
jo
mov
dec
pop
or
push
xor
aas
xchg
xchg
mov
push
mov
daa
adc
lea
jo
mov
mov
cmpsb
ds
movsb
and
dec
add
hlt
lock
out
in
jne
and
dec
loop
dec
and
mov
das
inc
mov
pop
push
add
out
mov
pop
mov
xor
mov
pop
out
mov
cld
int3
dec
jae
stos
add
inc
dec
orb
xchg
lahf
cld
scas
je
jae
pop
call
les
adc
movsb
or
mov
ss
out
popf
lret
into
loopne
cmp
or
sub
jb
mov
cmp
scas
or
ret
jnp
lret
pop
cmp
cs
mov
add
sub
lods
or
dec
lock
out
cmp
adc
mov
sahf
test
push
cmp
mov
push
imul
xchg
mov
cs
and
xchg
out
loope
add
dec
pushf
pop
cmpl
cltd
cmp
fistpll
shlb
test
dec
mov
aaa
andl
pushf
jnp
ret
jge
and
add
and
sub
mov
imulb
pop
sahf
fwait
arpl
mov
stos
imul
inc
jae
xchg
pop
pop
sub
and
adc
or
xchg
sbb
dec
pop
out
data16
dec
sub
push
in
cmpsl
dec
rorl
xchg
shrl
mov
imul
aas
in
inc
adc
into
aam
push
int3
push
scas
mov
adc
xor
dec
adc
xchg
inc
imul
je
push
mov
outsb
mov
inc
ds
cmpsl
mov
das
mov
dec
insl
insb
xchg
mov
dec
scas
jmp
popa
loope
mov
sub
jne
jg
sahf
mov
xchg
adc
inc
pop
push
mov
mov
mov
add
clc
xchg
call
add
dec
jl
add
or
push
shlb
add
mov
ret
xchg
pop
dec
push
inc
pushf
out
imul
sub
stc
insb
je
in
fbld
jecxz
xor
aad
fmuls
test
in
outsb
jno
ja
sub
mov
fldt
cld
aas
xchg
mov
add
pop
add
mov
mov
xchg
pop
ret
mov
stc
call
add
nop
mov
adc
scas
scas
lret
mov
sbb
or
inc
mov
out
or
mov
ja
jge
out
push
xchg
push
lahf
mov
data16
add
and
stc
fstpt
mov
lret
es
push
mov
movsl
pusha
mov
sub
and
inc
mov
push
lock
fsubrl
dec
or
xor
jbe
int3
call
pop
mov
xor
jae,pn
sbb
xchg
adc
xor
fstpl
stc
or
mov
sbb
xchg
dec
push
or
scas
adcl
std
popf
push
enter
movsl
cld
xchg
rcrb
dec
jp
mov
orl
mov
scas
in
jle
adc
cld
out
xor
in
pop
xlat
mov
mov
idivb
sub
enter
push
in
or
push
mov
push
pop
imul
sub
xchg
fmull
outsl
xor
out
push
into
adc
jno
js
adc
adc
or
cmp
sub
mov
xchg
rcrb
xor
in
jg
cli
psubusb
sub
scas
nop
loop
or
out
dec
cld
pop
push
pop
fimuls
les
and
ljmp
sub
lret
sub
test
ss
sbb
insb
shlb
fwait
jae
cmc
dec
adc
push
cltd
mov
mov
pop
dec
and
ret
fcmovnu
call
cmpsb
inc
xchg
cltd
sbbl
cltd
aad
int3
sub
jo
stc
sub
imul
aaa
pop
cmp
add
and
roll
dec
fsubrp
adc
jae
outsb
enter
jmp
xor
clc
adc
dec
ret
ljmp
repnz
pop
and
mov
pop
adc
ss
sbb
vmptrld
adc
insb
lods
add
xor
add
xor
hlt
and
jp
xor
mov
outsb
mov
mov
jbe
hlt
adc
hlt
lock
lret
dec
lret
inc
jae
add
dec
repz
mov
loop
lods
xchg
jb
subl
adc
lret
mov
xor
and
sarl
into
mov
scas
gs
cwtl
or
les
push
cmp
rcll
sarb
jns
or
out
pop
lods
sub
mov
das
dec
fsubr
repz
in
add
and
pop
movb
mov
dec
stc
out
push
jmp
cs
cwtl
push
mov
scas
int3
or
mov
cmp
jle
sub
les
mov
cmp
push
dec
bound
hlt
mov
xchg
lahf
insl
inc
insl
lods
mov
push
mov
jecxz
iret
lods
ja
rcr
sbb
sub
in
push
sbb
add
insl
cltd
clc
shl
scas
aas
jmp
loopne
daa
sbb
dec
xchg
sbb
test
loop
jae
add
outsl
test
cmc
mov
xchg
cmpsb
popa
jle
mov
dec
test
sub
es
lret
shrb
jmp
shlb
clc
xchg
ret
push
inc
or
jae
jle
pop
cld
cmpl
mov
mov
out
popf
aas
js
insl
mov
sbb
xchg
push
fmuls
add
or
dec
xor
int
jg
ja
mov
insl
data16
sti
fisubrl
popa
add
ja
mov
mov
dec
xchg
sarb
push
lret
test
ficoml
sarb
sbb
insb
fidivrs
sub
pop
mov
mov
or
mov
call
xchg
in
jne
into
outsb
shll
int
xor
stos
inc
add
inc
test
dec
dec
sbb
push
adc
push
mov
ja
push
push
mov
dec
xchg
and
out
mov
cmp
push
fst
pop
lds
je
les
mov
outsb
and
push
xor
fldl
adc
addr16
xchg
gs
inc
mov
repnz
out
stos
test
sub
add
sub
cmpsb
mov
fnstenv
test
push
pop
icebp
rcll
adc
call
mov
rolb
inc
ret
fidivrs
add
pusha
aaa
bound
arpl
mov
popa
mov
jne
add
scas
xchg
bound
mov
fs
andl
loope
xchg
pop
insl
sub
pop
in
loopne
mov
popw
xchg
cmp
out
enter
jmp
aam
aaa
lea
dec
rcrb
mov
sub
mov
dec
out
push
adc
inc
jmp
sbb
mov
xchg
icebp
pop
cli
sahf
sub
pop
xlat
adc
lcall
and
pop
leave
stos
fs
je
pop
or
dec
push
scas
scas
icebp
jg
out
inc
push
jnp
sbb
mov
inc
addl
repnz
push
lock
cmp
adc
xor
push
sbb
sbb
test
data16
xchg
add
test
or
pop
mov
shrd
jl
repnz
and
js
pop
jle
dec
push
rorb
iret
test
pop
sbb
jo
xor
push
cmc
scas
mov
lds
sub
ja
push
aam
sub
call
or
mov
cli
test
mov
sbb
jmp
and
sbb
xchg
xor
mov
gs
fnstenv
add
les
xchg
xor
ss
adc
sbbb
mov
and
aad
mov
or
jl
cmc
call
cmp
cmp
xor
ds
nop
jecxz
ljmp
jg
or
or
adc
fists
inc
mov
out
pop
xchg
insb
mov
cli
push
xchg
xchg
lods
adc
xchg
in
sub
mov
xchg
xchg
movsl
rcll
dec
pop
inc
movsb
mov
out
insl
sub
sub
jbe
mov
out
test
inc
fmull
fs
inc
loopne
sbbl
daa
cmp
xchg
or
ss
dec
mov
shlb
push
dec
cmp
sbb
xlat
aas
aam
test
mov
imul
jb
sbb
ljmp
and
sbbl
push
or
xchg
mov
icebp
sbb
jo
push
loope
es
insb
stos
mov
xchg
out
ret
or
lock
into
pop
push
dec
popf
mov
and
adc
mov
pop
fisubl
push
stc
inc
mov
outsl
sub
rcrb
jnp
mov
xchg
movsl
and
adc
jno
aam
inc
pop
push
jmp
inc
or
insl
inc
adc
push
and
dec
push
imul
enter
ret
pop
pusha
adc
pop
fmul
fld1
les
xchg
cs
add
out
xor
call
popa
and
inc
out
jns
mov
or
push
sbb
push
ret
faddl
into
sti
lret
cwtl
xchg
jne
mov
scas
or
xchg
test
push
sbb
xor
out
push
test
movsb
mov
out
jne
sub
lcall
adc
pop
ror
data16
mov
push
fwait
mov
jb
push
std
push
std
movsb
es
push
cs
ss
imul
lock
icebp
enter
leave
mov
dec
test
jmp
je
loop
mov
iret
lret
add
cli
and
aas
cmpsl
xchg
push
arpl
fmull
rcrb
dec
sub
icebp
or
insb
lret
imul
dec
enter
and
pop
xor
and
arpl
sub
mov
shl
ret
ss
dec
pop
mov
inc
mov
cmp
mov
push
stc
popf
pushf
and
punpckldq
dec
lret
test
xor
cmp
mov
jg
call
cmpsl
popa
lock
adc
sbb
fstpt
inc
int
mov
shll
and
xchg
cmpsl
push
jno
xor
scas
mov
fstpl
mov
dec
add
jnp
jecxz
mov
jbe
rorb
fisubs
mov
icebp
repnz
adc
call
push
popf
iret
cld
xchg
adc
pop
mov
call
fisubrs
or
xchg
orl
sbb
mov
cmc
out
sub
imul
jl
push
sbb
movsb
and
dec
es
les
movsb
call
psllw
aaa
imulb
sub
cmpsb
mov
push
inc
add
mov
push
mov
adc
outsl
pop
mov
xor
clc
pop
mov
outsb
xchg
adc
add
sbb
int
decw
call
lods
jmp
inc
mov
dec
inc
cs
into
add
xchg
popa
xchg
and
jo
adc
mov
adc
inc
test
cmpsl
sbb
pop
add
mov
and
sbbb
xchg
pop
fists
lods
cmpsb
movsb
insb
sbbl
mov
mov
mov
mov
dec
pop
xchg
test
push
jp
xchg
push
sub
out
jg
inc
jno
stc
lret
mov
lahf
scas
in
inc
mov
std
lahf
int3
cmp
shlb
push
or
push
xor
movsb
inc
sub
int3
movsl
cli
pop
popf
scas
dec
ret
ja
mov
js
lock
test
arpl
or
xor
dec
lcall
pop
ljmp
mov
or
mov
add
push
pop
ret
in
push
xchg
pop
adc
adcl
je
aas
jg
sub
les
insl
daa
or
roll
fiaddl
arpl
rcl
insl
je
mov
movsb
stc
or
push
mov
jg
divb
scas
aas
fisubs
sbb
add
pop
cmpsb
arpl
jmp
test
cs
out
je
add
mov
cmp
pop
and
enter
je
aam
sub
mov
int3
scas
loope
fs
lods
lcall
sub
or
in
fbstp
aad
pop
repz
mov
lahf
jae
jmp
fxtract
je
xchg
push
aad
fstpt
int
into
cmpsb
mov
inc
inc
cmp
fwait
jo
jmp
das
xchg
cli
or
push
rcl
out
popa
pushf
and
ljmp
jae
inc
cmpsl
int
pop
pop
xchg
sar
push
cwtl
in
pusha
pop
xor
mov
frstor
out
xor
out
mov
clc
incl
mov
rcl
dec
sahf
shll
faddp
ljmp
ljmp
shl
cmp
jnp
cmc
jnp
jnp
loope
mov
dec
dec
adc
fcoms
xor
icebp
ror
push
jp
push
xchg
adc
jnp
sbb
mov
pop
dec
in
arpl
push
imul
lods
lods
outsl
dec
add
pop
or
mov
xor
iret
jnp
inc
decl
add
xchg
mov
mov
adc
aad
decb
add
lock
notl
or
sti
sti
pop
inc
cltd
mov
dec
es
adc
aad
loop
jne
imul
ja
adc
push
add
or
data16
or
repz
test
repnz
mov
jl
cltd
fidivl
rolb
jbe
popl
popa
sbb
mov
pop
sbb
mov
iret
lret
ljmp
lds
cmp
subb
aaa
out
sub
stos
xchg
das
mov
adc
dec
add
sbb
and
mov
scas
add
cwtl
push
pop
push
ja
fstps
gs
mov
lods
or
pop
sub
pusha
shrl
jmp
int3
movsl
ja
lock
jne
jl
dec
movsl
daa
push
daa
xchg
adc
push
pop
jne
test
pop
xadd
out
cmp
and
push
scas
pop
mov
daa
lea
cmp
sbb
aas
loopne
int3
add
mov
shrl
sahf
icebp
push
xchg
or
ret
std
mov
dec
insb
into
mov
sub
div
push
repnz
inc
xchg
mov
fwait
adc
mov
cmpsl
mov
lds
pushaw
out
and
push
push
mov
dec
or
sub
jmp
pop
popf
icebp
std
stc
jae
fwait
xchg
or
loop
imul
xchg
xchg
insb
hlt
in
mov
add
cli
pop
mov
sub
inc
or
adc
xchg
je
and
and
mov
inc
int3
or
and
inc
xchg
jne
in
or
pop
cmp
fistps
call
mov
add
push
stc
pop
add
push
aaa
jnp
negb
jp
fdivrs
push
icebp
gs
sbb
or
xor
add
jmp
xor
sbb
xchg
in
cmp
push
or
movsl
jns
push
jg
notb
enter
or
sahf
addr16
jns
push
add
push
sbb
jae
and
fs
jno
dec
push
out
mov
fistpl
inc
sub
aaa
inc
xor
pop
or
sub
adc
into
popf
fsincos
je
bound
mov
fucomip
inc
push
pop
jecxz
mov
ljmp
dec
adc
cmpsl
mov
sahf
sub
clc
and
sub
mov
mov
or
cltd
hlt
pop
loop
mov
inc
sbb
push
outsl
jp
mov
sbb
iret
int
cli
gs
cli
insl
fildl
ret
enter
ljmp
jle
lds
mov
push
cmc
sub
mov
fs
jmp
cmpsb
dec
push
xor
lahf
loop
mov
xchg
hlt
popf
xchg
push
ss
or
adc
pop
daa
stos
rcll
cmp
popf
ljmp
dec
xlat
sub
cmp
xchg
in
pop
adc
int
xchg
sub
bound
xchg
xor
testb
addb
fisubrs
ds
std
out
mov
mov
fdivrs
loopne
inc
jp
fs
aas
fisttpll
inc
xor
sub
fs
pop
dec
pop
adc
mov
jnp
lods
dec
test
sbb
jp
sbb
adc
pushf
imul
ret
push
fs
mov
cs
movsl
insl
fwait
insb
cli
pop
pop
inc
jno
and
push
jnp
adc
mov
adc
mov
push
sbb
out
das
pusha
call
inc
adc
mov
and
xchg
inc
loop
sbb
addl
ret
adc
or
gs
xchg
clc
xchg
imul
sti
int3
aas
cltd
push
jp
dec
out
pushf
inc
cmp
adc
sahf
xor
push
cmpsl
xchg
sub
lret
add
gs
cmp
pop
dec
cmpb
jmp
adc
data16
or
mov
in
bound
ret
sub
ljmp
shll
push
jnp
mov
add
arpl
mov
pop
and
lock
lds
mov
sbb
inc
jle
mov
insb
add
add
mov
jae
push
mov
shl
pusha
sub
ret
sub
jae
outsl
loope
mov
mov
mov
icebp
sbb
and
imul
sbb
scas
push
in
scas
loopne
arpl
pop
daa
adc
popa
or
sub
mov
xor
pop
mov
mov
mov
lret
in
fidivs
test
jmp
jae
ljmp
dec
push
pop
je
sub
inc
clc
xor
mov
outsl
mov
cmp
je
mov
push
fsubs
push
out
jecxz
inc
add
nop
jecxz
jge
iret
mov
sbb
scas
ss
pop
inc
sbbb
mov
lret
aam
adc
jo
lcall
push
cld
xchg
cltd
lret
xor
stc
inc
xor
sarb
push
pushf
push
pop
pop
dec
jecxz
cwtl
test
push
push
jae
jne
or
push
push
jne
cmp
push
hlt
in
pop
inc
adc
or
xor
repz
mov
rcll
ds
mov
jne
lcall
aaa
xor
cmpsb
sub
or
jno
jmp
addr16
roll
fs
jae
inc
jg
lea
bound
in
scas
xchg
and
xor
addb
pusha
mov
lock
cmp
pop
cwtl
push
dec
sbb
pop
add
sti
jb
push
jmp
dec
lods
inc
movsl
lds
in
mov
xlat
loope
ja
mov
xor
push
push
add
inc
ret
jge
aad
jle
in
add
sbb
sarb
pop
pusha
adc
pop
inc
sahf
or
mov
mov
inc
or
push
aas
inc
and
lcall
pop
outsb
sbb
movsl
mov
into
mov
add
jmp
out
ja
lahf
sub
orb
stos
inc
inc
pushl
ret
dec
xchg
mov
or
call
ja
adc
jno
in
push
fdivrs
scas
add
out
scas
pop
sbb
pop
mov
cmp
inc
pop
adc
jo
or
xlat
mov
lret
sbb
pop
mov
dec
dec
addl
sbbb
jo
std
je
scas
mov
push
mov
iret
loopne
ret
sti
les
fs
add
rcll
ja
mov
adc
xchg
scas
add
cmp
push
xchg
sbb
mov
mov
cli
popa
jge
sti
xor
dec
mov
cmc
mov
cs
mov
mov
pop
jecxz
daa
jg
pop
cli
scas
push
scas
mov
pop
jns
scas
cltd
xor
add
and
stos
mov
mov
fdivr
xchg
fwait
add
inc
popa
mov
inc
adc
sub
shrl
sub
add
imul
jae
cmpl
lret
xbegin
pop
xor
shr
bnd
jmp
cmp
ss
js
dec
sub
cmc
jne
add
ret
cwtl
sub
push
mov
int
and
mov
pop
dec
sbb
mov
dec
xchg
lea
jae
add
push
sbb
dec
iret
mov
dec
pushf
sbb
fdivrl
and
add
imul
packsswb
icebp
or
adc
xchg
movsl
inc
sbb
sub
aas
jne
std
mov
mov
jp
sti
cld
ret
inc
dec
shlb
mov
add
fcmovnbe
inc
mov
pop
and
rorb
in
rcl
jmp
test
iret
inc
jp
or
cwtl
ret
popa
push
jb
hlt
roll
in
cmpsb
lods
rorl
std
subl
repnz
adc
sbb
sbb
cmp
inc
js
push
rolb
push
pop
pop
sbb
xchg
dec
sbb
sbb
jo
lods
test
push
fldenv
bound
xchg
ljmp
jnp
sbb
ja
clc
imul
loop
jb
cmc
add
loope
es
divl
fcmove
sahf
lods
dec
loopne
popf
test
sub
popf
mov
inc
aam
xor
enter
jbe
dec
repz
pop
push
xor
ds
mov
mov
clc
push
orl
std
rolb
sbb
scas
jp
xor
mov
dec
scas
xchg
dec
push
out
clc
sub
insl
rcrl
out
cmp
inc
es
jae
incl
pop
ss
rclb
cmc
stos
daa
dec
jmp
pop
or
fdivl
test
sub
push
cld
clc
xchg
sub
and
inc
lret
dec
cmp
out
add
ret
lods
leave
ja
mov
mov
adc
mov
inc
fcmovu
sub
add
sub
adc
push
jecxz
rcrb
shl
jne
cmp
stos
rclb
lret
cmp
imul
sub
adc
mov
lret
aaa
push
mov
insb
push
mov
gs
mov
and
and
out
xor
mov
push
clc
or
out
ficomps
add
mov
dec
in
mov
dec
inc
rcll
sbb
popa
add
mov
fdivr
cmp
pusha
fs
inc
xor
ja
bnd
sahf
popf
jmp
jmp
xchg
mov
xlat
popf
push
and
andb
lds
lret
stos
addr16
pop
ja
xor
cmpsb
pop
mov
addr16
inc
mov
mov
aam
test
pop
mov
cwtl
fisttps
xchg
fstl
xchg
fwait
mov
aad
bnd
repnz
mov
pop
push
jb
test
cmpsl
add
cmpsl
in
movsl
jl
push
jg
push
aad
mov
mov
aam
in
or
sbb
jnp
mov
ret
and
imul
mov
daa
xchg
pop
xchg
inc
sar
shll
repnz
inc
mov
mov
iret
dec
ret
add
xchg
lret
xchg
mov
xor
stc
sub
and
outsl
or
into
cld
push
call
rcr
mov
add
xchg
xor
add
iret
mov
mov
ljmp
fisttpl
jge
mov
hlt
add
es
and
mov
jae
cmp
ja
and
aas
and
stos
adc
cmpsb
addr16
roll
jmp
sbb
imul
sbb
push
pop
jne
push
pop
repz
mov
outsl
call
pmaxsw
ret
subb
mov
xchg
test
push
aas
jno
mov
bound
dec
xor
mov
test
and
cmp
mov
enter
cli
pop
adc
cmp
sub
push
cwtl
das
xor
jl
pop
mov
repz
mov
push
loope
jae
pmulhuw
sub
xchg
cmpl
jecxz
sbb
xchg
xor
push
in
hlt
inc
orl
adc
adc
call
imul
imulb
adcl
push
stos
mov
outsb
or
mov
sarb
dec
mov
stos
sub
cmpsl
inc
and
adc
mov
ret
pushf
xor
and
add
or
das
scas
add
mov
push
rep
in
rcll
fldl
data16
scas
loopne
ret
fs
leave
pop
add
dec
cmp
fcos
push
ds
mov
stos
mov
dec
fisttpl
sub
xchg
mov
mov
lahf
insl
inc
push
push
add
movsb
mov
push
push
not
dec
dec
mov
mov
mov
push
loop
push
rcrb
out
cs
cs
ret
ficompl
or
shlb
sub
gs
and
dec
push
push
adc
jae
and
mov
jp
bound
xor
pop
adc
jo
pop
or
xchg
or
fcmovb
cmp
jne
xchg
or
pop
test
je
jae
test
jnp
nop
cmp
add
fwait
push
pop
test
fwait
xchg
and
or
in
xor
cmp
jmp
insl
xor
sbb
stos
test
xchg
pop
rcrb
ret
and
addr16
ret
fnstenv
icebp
cmp
fists
call
mov
je
fs
inc
inc
ja
pop
sbb
lretw
sub
sub
je
pop
xchg
mov
inc
sub
xlat
pop
pop
jo
xor
aaa
mov
loop
in
into
mov
test
sub
gs
ret
mov
jp
mov
hlt
es
jle
add
jns
sarb
mov
scas
scas
jge
xchg
test
nop
dec
outsl
jg
xchg
xchg
or
loopne
cli
push
adc
xor
mov
mov
fnstenv
adc
roll
cmpsb
xor
jnp
vrcpps
aas
bound
pop
mov
mov
popa
adc
outsb
or
int
sbb
jnp
inc
xor
outsl
pop
adc
mov
mov
movsb
push
or
push
dec
pop
cs
lods
jg
loopne
push
add
push
xorb
pop
js
hlt
outsb
sti
cmc
mov
mov
mov
arpl
inc
cltd
into
or
xor
push
mov
test
jmp
in
mov
or
int3
movsl
jnp
test
sub
xchg
fcmovne
add
incl
inc
xchg
cmp
fadds
or
xchg
loop
orb
push
pop
bound
ss
sahf
jae
mov
jbe
push
loop
inc
ret
and
push
or
push
lock
and
rcll
ja
mov
sub
sti
mov
cmp
leave
cmp
aad
lods
in
shrb
mov
cmp
cmp
aam
jp
test
adc
lahf
inc
push
faddl
loop
dec
push
bound
cltd
shl
dec
bound
mov
adcb
xchg
test
scas
cmp
movsl
add
or
sub
pusha
or
xor
pop
push
push
dec
popf
sbb
repnz
lock
jp
jmp
inc
mov
aas
sbb
out
cli
add
dec
fstpl
push
dec
jne
xchg
push
mov
inc
dec
pop
jo
aas
mov
xchg
pusha
repnz
in
ljmp
adc
shl
pop
orl
cs
loope
sbb
jmp
lahf
rol
ficomps
lret
fistps
test
or
sub
add
xor
xlat
jg
inc
into
out
movsb
sahf
mov
push
mov
icebp
pop
mov
sbb
shlb
sbb
pop
cmc
js
mov
mov
jae
lods
stos
jns
adc
or
xchg
int3
push
pop
int3
sbbl
add
or
test
xchg
lock
outsl
fsubrs
jg
sbb
mov
mov
rcl
int3
push
push
das
loopw
add
mov
dec
mov
int
push
outsb
push
insb
and
lahf
add
movsl
xchg
jp
out
stc
mov
ffree
mov
pop
mov
add
shlb
stc
aam
mov
push
and
pop
movsl
cmp
lea
adc
mov
xor
jp
lcall
repnz
push
sub
push
mov
lret
stc
daa
or
loope
inc
jmp
sub
sub
mov
andl
fisubrs
jae
add
cmp
xor
ret
popf
jmp
lock
cmp
popa
adc
inc
leave
insl
fistl
call
or
repnz
or
int3
adcl
test
mov
pusha
jmp
lcall
outsl
jl
pop
xchg
dec
stos
movsb
sub
cmpsb
out
test
xor
lret
pusha
dec
xchg
add
inc
clc
fwait
mov
mov
fsubs
lret
inc
repz
call
cmp
jb
lea
mov
mov
lock
cmp
imul
cli
inc
adc
out
std
test
jl
stc
jmp
negb
mov
jae
jmp
mov
cltd
push
rcll
or
lock
cs
incb
and
sbb
pop
jo
pusha
call
mov
adc
hlt
pop
sbb
xchg
cmc
clc
lods
adc
push
xchg
xor
cmpsl
push
cmpsb
mov
ljmp
add
and
outsb
cld
and
lods
push
add
aaa
pop
flds
cmpsl
pop
xchg
rcrb
dec
jo
xchg
cld
jb
or
loope
mov
jmp
jl
vunpcklpd
pop
jo
leave
jmp
jmp
mov
adc
pop
rol
nop
sbb
and
adc
mov
xchg
push
jno
aas
mov
aad
xchg
clc
lds
dec
xchg
inc
adc
in
jmp
jns
add
ret
mov
dec
ss
negl
pop
pop
scas
std
addr16
imull
in
mov
scas
out
or
cli
inc
mov
and
orb
adc
or
cmpxchg
and
inc
in
inc
dec
neg
mov
std
and
or
pop
in
fwait
clc
dec
fstl
and
test
in
call
inc
lret
mov
sbb
mov
fwait
adc
xchg
cltd
testb
fimuls
js
out
js
out
sbb
cmp
test
sub
and
imul
enter
mov
out
pop
das
aaa
sbb
or
xchg
push
pushf
rolb
jg
xchg
hlt
mov
xchg
push
clc
push
mov
jge
jl
inc
fldt
push
ds
imul
dec
loopne
es
out
jg
add
push
es
sbb
ret
pop
pop
mov
in
sbb
pop
xchg
pop
inc
mov
icebp
xchg
bound
inc
xchg
jbe
rcl
cltd
mov
lock
lcall
int
sbb
test
imul
mov
push
jns
aas
and
out
mov
js
aam
jecxz
cmp
dec
sub
imul
or
xchg
xchg
sbb
push
lahf
sub
dec
shll
sbb
popf
enter
push
lahf
cs
std
push
imul
sub
inc
fisubl
in
out
imul
jge
sbb
movsb
fiadds
lret
xor
lahf
inc
push
mov
push
or
push
pusha
jle
inc
cmp
fmulp
add
sub
dec
cmpsb
inc
and
ljmp
ret
or
push
dec
xchg
loopne
cmp
cmp
mov
mov
in
gs
popa
scas
andb
push
repnz
dec
shll
pusha
cmc
scas
jp
add
cmp
adc
sub
int
mull
push
mov
or
scas
divb
fisubl
lods
mov
ss
inc
jne
aad
and
subl
ficomps
push
test
fidivs
xorb
pop
push
lock
adc
movsl
adc
out
fidivl
adc
jnp
mov
sbb
jmp
or
jbe
mov
rclb
mov
cmpsl
mov
mov
fidivrl
shl
jb
xchg
cmp
adc
mov
movsb
xor
pop
mov
nop
or
push
outsl
js
push
add
test
stos
insb
notb
cmc
stos
xchg
add
scas
dec
pop
mov
rolb
fsubrs
lods
pop
cmp
pop
add
sub
mov
sub
sarb
fidivs
pop
insb
pop
dec
sub
jo
aam
mov
cmp
pop
nop
xorb
jp
inc
repz
inc
adc
lret
pusha
rcl
adc
stos
aas
cmp
push
lea
outsl
jg
imul
outsl
cmc
pop
mov
aam
and
mov
shl
sub
cmp
adc
les
into
xor
dec
imul
mov
in
std
ror
loopne
out
inc
adc
xchg
push
push
dec
iret
push
jecxz
and
xor
jge
xor
push
std
adc
sbb
cmpsb
sbb
iret
xorb
sub
in
subb
cmp
inc
jecxz
data16
mov
cwtl
lods
push
jg
xchg
rolb
mov
mov
imul
add
mov
pop
out
lret
dec
or
or
push
inc
mov
add
inc
sub
and
daa
aas
lahf
sbb
nop
inc
cmc
jg
mov
fcomp
pop
pop
fcmovnu
mov
addr16
sbb
cltd
cmpsb
imul
rorb
fsubrs
imul
xor
sbb
icebp
test
mov
or
mov
dec
xchg
xlat
out
arpl
xor
inc
sbb
movsl
pusha
imul
lcall
xchg
shrb
lret
sub
cltd
rcll
xchg
xchg
mov
fstp
rcr
sti
dec
add
sbb
dec
or
push
int
arpl
int3
xchg
outsb
test
pop
lret
adc
aad
sub
loop
or
int
out
leave
out
jbe
nop
lcall
mov
test
adc
sar
fs
je
pop
push
adc
fmull
ret
xchg
pop
jne
in
sub
push
or
pop
sub
lock
cwtl
sub
sub
mov
pop
and
in
test
idivl
mov
jno
in
ret
mov
xor
adc
clc
pop
xor
jns
ror
in
insl
div
stos
mov
test
out
cmc
cld
popa
fwait
cmc
mov
popa
mov
stc
nop
push
xor
pushf
xor
cmpsl
jle
out
sahf
jne
testb
pop
cmp
lea
lods
movzbl
addl
enter
insb
mov
jle
aaa
lret
pop
lods
sub
les
sub
insb
xabort
fadds
and
jmp
fnstcw
in
dec
loop
sti
or
sbb
icebp
jmp
repz
mov
out
mov
adcb
imul
jp
scas
in
mov
aas
add
mov
xchg
arpl
test
mov
into
mov
sub
repz
pop
push
rol
mov
rcl
stos
hlt
or
ret
daa
int
cltd
hlt
enter
out
icebp
add
xorb
inc
mov
or
repz
lahf
jne
and
mov
ret
lret
scas
js
cwtl
push
cmpsl
sub
mov
lea
in
xchg
and
pop
or
cmp
or
lods
fistpll
sbb
cmp
in
pop
sbb
pop
int
sbb
movsb
insb
les
and
bound
or
aaa
sti
into
or
imul
iret
testl
addr16
adc
cwtl
mov
sub
mov
pusha
dec
inc
in
inc
ret
iret
and
add
gs
repz
add
fcompl
jl
xchg
or
sbbl
call
stc
dec
insl
add
dec
into
mov
cmpsl
rcr
rcll
mov
add
cltd
iret
nopl
and
mov
mov
ljmp
loop
cmc
shlb
ljmp
jbe
xchg
insl
push
js
fmuls
repnz
or
xchg
fstps
cmp
fnstsw
adc
adc
ror
aaa
sbb
cmp
fsubr
mov
ja
cmpsl
or
in
mov
scas
mov
push
sbbb
mov
je
pop
jb
je
pusha
inc
lret
mov
repz
xor
pop
inc
jns
adc
ds
push
push
test
mov
lods
popl
popa
ljmp
sbb
lcall
xchg
add
inc
pop
dec
pop
mov
outsl
lds
xchg
out
sub
jns
mov
loop
into
mov
lcall
xorb
insb
movsl
jno
cmp
lods
ret
adc
lcall
sub
xchg
push
mov
sub
jnp
push
xlat
add
divb
dec
jbe
xchg
or
mov
xchg
out
mov
jb
sbb
roll
cmpsl
dec
loope
pushf
dec
filds
test
rorl
movsb
mov
jmp
xor
stos
or
inc
dec
mov
ja
daa
ds
in
mov
inc
mov
pusha
xor
jo
jns
test
mov
sbb
and
mov
sub
jmp
test
sahf
sbb
adc
gs
shr
lods
cmp
lods
mov
push
mov
or
mov
add
jge
int3
and
aam
cld
add
fisubrl
mov
sub
out
sarb
icebp
sbb
lahf
mov
mov
dec
pop
test
inc
adc
or
aam
xor
movsb
add
push
insb
mov
dec
cltd
outsl
dec
mov
in
mov
mov
xchg
mov
lahf
cwtl
add
or
pop
adc
lods
xchg
int
int
sub
cmp
imul
out
and
outsl
jb
clc
push
pop
mov
in
adc
dec
mov
jo
enter
rorb
aaa
cli
sbb
or
sbb
pusha
outsl
cli
int3
sub
aam
dec
inc
insb
add
and
xchg
ss
xchg
popa
or
fwait
and
sbb
mov
stos
cs
mov
dec
sbbl
mov
mov
pop
imul
std
mov
pop
xchg
cld
inc
mov
or
ficompl
jp
mov
and
jbe
sbb
movsl
fcmovnbe
xchg
les
jge
ljmp
jg
loopne
das
mov
scas
mov
testl
jae
bound
jl
cmpsb
ja
dec
out
loopne
lret
stc
mov
call
ss
sbb
mov
xor
jns
xor
popa
mov
inc
inc
fldcw
js
out
sbb
test
outsl
or
cmpsl
push
data16
push
cmc
push
sbb
and
fidivl
sbb
clc
adcb
xadd
lods
movsb
cmc
insl
mov
pop
mov
xchg
cltd
fidivs
sub
jp
inc
mov
dec
push
sbb
xor
iret
lock
sbb
xor
cmp
hlt
rcll
das
loopne
loopne
mov
int3
clc
mov
fistl
pop
and
push
or
xchg
cmc
cmp
push
into
dec
xor
xchg
psubq
das
sub
push
mov
sbb
repz
sub
mov
xchg
movsl
mov
mov
and
popl
add
or
and
ret
inc
rolb
inc
push
add
cld
sub
mov
notb
jns
mov
cmp
enter
maxps
sbb
push
mov
add
push
jns
mov
pop
xchg
sub
mov
cltd
mov
js
call
ja
add
adc
pop
add
lahf
dec
out
addl
push
push
mov
data16
xchg
mov
jne
xor
pop
lods
decl
mov
pop
cmp
stc
jl
sub
dec
stos
mov
lahf
pop
sarl
pop
fwait
sti
add
in
jmp
sbb
pop
push
das
inc
je
lods
mov
sahf
push
int3
inc
push
mov
stos
aaa
shrl
push
std
mov
gs
mov
jns
mov
pop
and
lret
fimuls
mov
outsb
mov
faddp
push
and
jge
stos
mov
mov
mov
jbe
mov
aam
push
pop
repnz
xchg
push
repz
test
fs
addr16
xorl
push
inc
and
das
lods
pop
outsb
out
cli
pop
jmp
push
out
fcmovbe
fwait
shrb
test
sub
stos
sub
mov
xor
dec
adc
ret
inc
outsb
and
ds
js
sahf
outsb
sub
dec
data16
decb
adc
xchg
and
xchg
pop
cmc
inc
sub
lret
pop
or
test
push
sub
xchg
aad
aad
repnz
aaa
add
xchg
inc
dec
mov
add
mov
cmpsl
int3
gs
cs
sub
push
push
sbb
adc
pop
xchg
xor
into
inc
pop
mov
outsl
xor
cltd
mov
xor
ffreep
add
nop
into
jmp
inc
pop
pop
jle
pop
in
mov
loope
popa
testb
cwtl
sub
bound
jbe
inc
add
bound
ret
cmp
push
adc
push
leave
pusha
dec
popf
sub
pop
or
cwtl
aad
movsl
aas
inc
mov
pop
mov
xorb
in
mov
fnsave
push
jae
stos
push
add
mov
ffreep
jbe
test
in
xchg
jge
mov
mov
push
cli
pop
mov
jmp
int
push
imul
std
data16
jecxz
rorl
cmp
mov
aam
or
xlat
and
xor
pop
pop
jns
rorb
in
dec
inc
add
outsb
and
cmp
out
cmp
dec
loopne
xor
push
loop
xor
mov
scas
jge
nop
dec
imul
cmpsb
test
jmp
jne
mov
icebp
in
into
ret
cli
pop
mov
jp
popf
mov
out
jecxz
sub
je
scas
aad
mov
lock
mov
sbb
add
sbb
cmp
clc
rcll
sbb
push
int
arpl
jb
mov
into
int3
pop
jno
lahf
shll
jb
pop
mov
inc
sub
imul
mov
insb
fsubrl
iret
movl
xor
movsl
add
rolb
enter
test
mov
and
pop
and
push
jg
or
xor
or
leave
mov
mov
ja
sbb
test
add
sbb
mov
cld
daa
sbb
cmp
add
or
add
sbb
cs
and
fimull
jge
lods
pop
jecxz
sub
out
xchg
mov
fsts
mov
int
xlat
das
les
cmp
fdivrs
and
andl
shl
in
pop
jno
out
sub
jae
inc
lds
inc
xorb
or
cs
push
mov
sub
mov
inc
cli
outsl
and
mov
lret
or
add
cmc
lea
push
sub
ljmp
and
out
rclb
adc
add
in
es
inc
sysexit
ds
or
cmpsl
dec
shlb
stos
and
mov
addr16
mov
dec
mov
iret
jge
lds
ret
dec
push
mov
lods
movsl
jae
insl
add
ds
mov
mov
inc
mov
ss
cmp
jae
je
test
dec
inc
sbb
stc
es
outsb
adc
jge
xchg
xchg
test
jl
and
outsl
sub
cld
es
sbb
add
repz
aas
aam
jae
rcrb
iret
mov
cwtl
lods
sub
pop
cld
xchg
cmpsb
and
mov
into
lea
pop
inc
jl
xor
jecxz
jo
roll
add
clc
aaa
dec
outsb
and
xchg
adc
pop
ljmp
push
cmc
dec
clc
aaa
ret
cld
mov
mull
fld
cmp
push
ret
lret
sub
sbb
outsb
movsb
lcall
leave
jae
cmc
xlat
dec
mov
gs
ret
add
dec
xor
cs
data16
test
mov
xor
jno
andl
or
push
jmp
cld
ficomps
xchg
icebp
adc
xchg
pop
int3
vandnps
sbb
push
fsubs
lods
mov
push
ja
mov
shrl
mov
mov
mov
mov
mov
rcrb
enter
int3
mov
insl
inc
cld
push
jecxz
dec
add
out
pop
rcrl
inc
pop
push
inc
xor
lret
pop
out
sbb
repnz
push
sub
xor
mov
jbe
daa
push
inc
xchg
xchg
mov
mov
outsl
iret
add
icebp
andl
jns
clc
ret
outsb
pop
xchg
mov
andb
mov
movsb
adc
ss
push
mov
pusha
lea
cmpsb
pop
xchg
push
fsubrs
mov
es
sub
scas
xor
xor
cmp
xchg
lds
loop
fmull
inc
push
xor
cmc
and
sub
pop
adc
rcrl
add
mov
and
arpl
insb
or
cmpsl
mov
cmpsb
or
cld
lret
lods
das
iret
jecxz
xchg
jb
cltd
data16
repnz
jecxz
sbb
jmp
loopne
mov
movsb
bound
xor
std
sub
or
je
and
fidivs
xor
and
sbb
add
or
decl
fldt
negb
add
imull
std
daa
dec
add
shrb
notl
cmp
pop
sub
cmpsb
insb
outsb
mov
fsubp
pop
dec
sbb
loop
cmpsb
mov
and
test
pusha
cltd
rorl
mov
aaa
add
out
mov
gs
into
add
scas
fisubrs
setns
sbb
sub
pop
jo
es
in
sbb
ror
daa
scas
jno
into
xor
aaa
xchg
mov
dec
mov
cli
pop
fisttpll
dec
ds
fs
fiaddl
stos
adc
push
stos
jle
fcomps
rolb
lds
xchg
out
mov
insl
pop
mov
test
jbe
daa
mov
inc
mov
fwait
add
sti
mov
insb
add
jmp
movsl
lcall
lock
inc
xor
mov
pop
mov
fldt
cmp
xchg
mov
push
je
adc
jg
inc
adc
sub
call
mov
push
je
fisubrs
std
inc
sbb
lods
xor
ficoms
xor
push
push
es
fildl
leave
out
mov
push
ret
or
or
mov
sub
jns
dec
mov
enter
jge
test
or
jb
push
sbb
fdivrs
xchg
outsl
xchg
jno
sbb
push
std
stc
sub
add
push
or
mov
decb
lods
filds
sbb
mov
je
mov
arpl
in
xchg
and
outsb
pop
dec
repz
and
dec
test
clc
rolb
addr16
shll
jle
dec
mov
mov
pop
mov
cmp
sahf
lods
in
ret
dec
popf
in
pop
popa
std
stc
jle
cwtl
mov
cmp
das
lret
insl
push
push
dec
sbb
ja
pop
mov
and
in
cmp
jbe
dec
mov
xor
mov
dec
sub
dec
mov
fucom
pop
mov
xchg
mov
add
cmp
lea
jnp
lahf
repnz
aaa
or
pop
mov
roll
cmp
sub
fs
mov
gs
pushf
popa
js
mov
dec
xchg
jne
push
jg
push
cmp
add
clc
push
insl
shrl
cmpsl
and
or
xchg
divb
cmp
xchg
mov
and
jl
pop
test
iret
rcrl
loope
cmpsl
mov
jle
sub
or
or
push
stos
mov
lds
pop
movl
jmp
push
sub
gs
not
push
cli
jns
fdivl
mov
daa
fcomps
sub
sahf
sub
ljmp
jb
jae
outsb
rcrb
test
mov
insl
inc
inc
mov
push
pusha
test
jne
xor
mov
inc
pop
cs
push
mov
pop
lcall
sahf
push
cmc
popf
addr16
and
or
in
mov
jb
das
adc
pop
ds
jne
and
xchg
mov
sbbl
pop
aam
ja
push
or
xchg
pop
pop
inc
cmpsb
cli
dec
lret
mov
inc
cmpsb
and
jo
cmp
in
inc
stos
sub
add
xor
negl
dec
roll
and
sbb
ja
sbb
pop
dec
inc
sbb
out
shlb
push
cmp
hlt
testb
dec
adcb
cmp
ret
shrl
pop
sbb
jge
ficoml
jle
imul
out
mov
jo
dec
xor
fs
int3
pusha
xchg
cmc
cli
push
push
and
sbb
loope
jnp
and
xchg
dec
push
sub
jle
ds
adcl
movsb
pop
pop
xchg
pop
xor
and
mov
adc
call
xchg
pop
clc
pop
adc
pusha
cli
dec
pop
cmpsl
sbb
xor
xor
jmp
or
ficomps
pop
push
push
jbe
stos
sarl
fcompl
sub
nop
test
xor
fwait
push
mov
xor
out
mov
or
in
mov
jne
daa
repnz
sbbb
jb
call
lret
cmp
dec
inc
shl
lods
je
or
popf
or
imul
and
xchg
movsb
mov
fidivrs
in
xor
ss
in
lcall
scas
leave
pushf
push
fidivl
mov
mov
sti
stos
enter
push
mov
mov
enter
or
cmpsb
es
in
mov
jge
pop
ljmp
movsb
clc
add
clc
test
adc
out
fadd
mov
xlat
addr16
xor
lcall
in
fcoml
fdivrl
pop
arpl
xlat
fsub
push
push
sbb
test
loop
scas
sarl
mov
jg
push
imul
dec
xchg
nop
shrb
push
int3
pop
jb
daa
xchg
frstor
dec
imul
pop
and
popa
arpl
push
jl
nop
adc
sub
adc
push
sbb
xchg
mov
push
adc
stc
cmpsb
sub
push
sbb
aas
add
pop
xchg
and
inc
inc
loop
addr16
dec
lock
xor
xchg
pop
inc
pop
jl
adc
cmc
int
pop
movsl
cmc
rorl
nop
cmp
cld
xchg
aad
je
fcomps
mov
sbbl
mov
cmpsb
test
or
pop
les
std
or
sbb
sub
inc
or
mov
stos
pop
xor
fidivrl
popf
shrb
push
daa
jb
jbe
lcall
mov
sub
push
adc
pop
jo
and
jp
cmp
jecxz
and
and
jmp
push
cli
pop
dec
int
inc
outsl
mov
fstpt
ja
mov
mov
ret
testl
cwtl
mov
lcall
daa
jmp
scas
jo
addr16
shrl
rcl
adc
cmp
loopne
cmpsl
pop
pop
and
adc
stos
mov
xor
pop
and
insl
dec
cli
sbb
push
pop
out
dec
das
pop
and
bnd
adc
mov
scas
repz
and
int3
shlb
xchg
push
dec
xchg
lret
leave
in
mov
sbb
mov
fcmovb
xorl
inc
mov
idivl
pushf
leavew
pop
sbb
add
cli
xchg
cmp
cli
inc
jmp
mov
push
in
enter
xlat
movsb
xchg
fbld
xor
push
iret
jno
test
imul
pop
sub
fdivrs
jecxz
add
mov
mov
clc
jb
mov
dec
lods
mov
pop
cmp
scas
movsb
cmp
and
adc
pusha
and
insw
andl
push
xchg
fwait
xchg
cmp
jle
mov
gs
sbb
std
jle
xor
adcb
gs
mov
popf
mov
popa
jp
pop
pop
push
pop
lea
or
fisubl
mov
daa
sbb
jno
rcl
cmp
dec
in
aam
out
mov
pusha
pop
cmp
pusha
lcall
add
daa
loop
inc
pop
pop
pop
mov
pop
mov
test
scas
lret
inc
fbstp
imul
sub
outsb
lahf
pop
lock
std
xchg
mov
repz
push
push
out
xor
xchg
jg
dec
push
jp
mov
push
cmp
cmp
sub
test
nop
fsts
icebp
jg
rorb
insl
add
arpl
cltd
scas
jmp
mov
add
ja
cmc
cs
pop
jno
je
add
jecxz
ja
cltd
xchg
mov
mov
inc
pop
xchg
mov
add
pop
mov
mov
jae
push
lahf
mov
mov
inc
jno
jg
and
mov
popf
shlb
pop
add
cltd
xor
stos
rolb
mov
into
jae
jmp
in
dec
repz
sub
rcl
lahf
mov
loope
loopne
gs
dec
push
out
es
xchg
xchg
cltd
daa
xchg
push
lret
or
mov
in
jbe
imul
mov
aam
cmp
pusha
in
mov
arpl
int3
mulb
out
push
push
std
es
fildll
xor
test
mov
mov
xchg
stc
xor
fisubs
lahf
mov
fs
dec
aad
sub
insb
add
jge
xchg
shll
add
cld
lret
cmp
cmpsl
mov
stc
sub
sub
mov
jo
out
mov
jp
adc
outsb
inc
and
ds
fistps
push
push
sbb
cmp
and
addr16
xorb
dec
nop
inc
inc
aaa
out
int
dec
xor
mov
cmp
or
rclb
mov
test
in
pop
test
shl
fs
dec
sub
dec
cmpxchg
out
and
mov
daa
jb
jno
fildl
inc
push
icebp
or
jge
cmpl
test
push
xor
clc
repnz
out
mov
add
lret
xchg
mov
dec
sbb
stc
adc
ja
dec
push
fldcw
jae
or
les
add
pushf
loopne
xor
out
cmp
in
pop
scas
test
pop
adc
loopne
jmp
pop
bound
sbb
cmp
jmp
xchg
and
cli
or
mov
jnp
mov
or
cmp
sbb
js
addl
cmpsl
xchg
mov
mov
sbb
sbb
add
pop
jp
and
xor
lods
insb
jecxz
cmp
xor
xchg
rolb
or
popf
mov
xor
xchg
cmp
and
gs
test
pop
mov
push
add
adc
and
cmpsb
into
or
jnp
sub
push
sub
sbb
inc
fldl
push
lret
sbb
sbb
and
mov
and
aad
fbstp
push
test
add
pop
popf
cld
pop
push
lods
pop
adc
pop
lahf
in
outsb
mov
aas
lds
dec
int
aas
rcr
cmc
jae
repz
fnsave
inc
fists
or
inc
mov
inc
popf
mov
or
ljmp
imul
mov
dec
xchg
lret
imul
je
pop
or
outsl
in
sub
adc
mov
cwtl
shrl
aad
push
test
or
ret
pop
xchg
enter
into
es
mov
lcall
pop
fsts
jae
cmpsb
sub
jl
mov
dec
sbb
mov
std
cmp
insb
pop
sbb
push
fisttps
dec
cwtl
lods
jae
adc
test
imul
stos
in
lds
dec
jns
insl
dec
xor
movb
mov
movsl
jge
pop
inc
adc
mov
stc
add
icebp
int
add
mov
mov
clc
lock
cmp
pop
pushf
xchg
test
rcrl
inc
cmc
cmpl
or
xor
push
jbe
mov
aas
xchg
sub
adc
push
add
add
aam
stc
scas
cmp
xchg
cmc
xchg
push
ss
mov
loopne
test
ljmp
cmpsl
sub
pop
ficomps
mov
pop
jmp
adc
and
sub
cmpsb
cmc
stos
xchg
fsts
fistpl
test
inc
out
icebp
mov
aas
lret
add
int3
push
sub
enter
xor
mov
les
pusha
pop
dec
push
add
negb
mov
cmp
pop
pop
adc
mov
and
shr
mov
mov
mov
lcall
popa
mov
out
add
add
or
mov
add
cmp
inc
lahf
rolb
test
aas
jmp
sub
push
jno
sbb
into
push
jp
adc
jp
rcrl
enter
sbb
pop
aaa
pop
dec
xor
fiaddl
push
adc
sbb
add
xor
aam
and
cmp
add
into
lods
pop
jmp
push
adc
cmpsb
add
xchg
sub
fdivrl
pop
fnstsw
xor
xchg
hlt
or
add
xor
mov
mov
test
rorb
cmc
nop
outsl
jge
in
scas
addb
cmpsl
out
cltd
es
cmp
inc
and
xchg
dec
std
pushf
fdiv
mov
lock
pop
mov
aaa
hlt
xchg
pop
inc
cs
pusha
out
loopne
in
call
cmp
jle
dec
adc
mov
mov
xchg
pop
or
bound
add
pop
mov
ret
or
mov
dec
bound
inc
and
dec
cmp
jnp
aaa
mov
aam
inc
es
or
and
or
cwtl
cmp
cmc
inc
cmpsl
roll
divb
cltd
pop
pop
iret
test
pop
js
fisubrs
xor
or
les
jg
js
sahf
int
aaa
testb
popf
cmp
push
aaa
filds
clc
mov
mov
jb
mov
sbb
cmp
and
out
pop
mov
fs
jbe
out
pop
jb
outsb
in
nop
cmpsb
imul
cmpsb
or
xor
idivl
sub
cwtl
and
mov
push
adc
scas
repz
mov
lcall
pusha
sub
rolb
mov
adc
sbb
and
push
cmpsb
pushf
inc
stc
xchg
mov
movsl
adcw
repz
cmc
sub
ss
cmp
testl
pop
or
dec
xchg
out
movb
mov
or
gs
fmul
int3
rolb
add
popf
sub
popa
cmp
enter
movsb
ds
out
daa
arpl
and
xor
sub
test
in
mov
out
lods
lret
rcrl
mov
adc
jno
fdivrl
je
stos
sbb
stos
or
mov
popa
addr16
pop
int3
lds
sarb
icebp
call
inc
gs
cmc
int
mov
pop
lret
enter
pusha
outsl
loop
mov
push
lea
out
add
outsl
bound
pushf
inc
xchg
mov
cmp
cmp
movsb
push
cld
inc
add
ss
mov
pop
sub
cmpsl
je
sub
push
outsl
insb
nop
std
cmp
sti
mov
xor
push
pop
pop
lods
adc
cmc
xchg
mov
dec
adcl
je
hlt
popa
addb
inc
sbb
sub
add
pop
mov
pop
mov
pusha
pushf
loope
mull
ljmp
push
stc
fnclex
xacquire
sbb
dec
aam
out
add
je
loope
jp
adc
and
mov
cld
cmc
mov
pop
repnz
cs
xchg
adc
imul
std
fcmove
jno
xchg
xor
subb
or
push
inc
das
cli
ret
fcmovu
xchg
icebp
addr16
pop
movsb
aas
pcmpeqb
cmp
jmp
daa
push
push
das
inc
sub
pushf
adc
xchg
add
or
push
adc
fwait
dec
xor
push
dec
inc
lea
xchg
mov
push
cmp
leave
aaa
mov
fcompl
push
or
rcll
shrl
int3
test
pop
insl
jl
stos
addr16
cmpsb
shl
ljmp
je
xor
mov
jnp
push
lahf
cmpsb
sub
mov
sub
imulb
or
jecxz
xchg
jecxz
pop
das
fcompl
inc
int
pop
mov
dec
sarb
repz
das
mov
and
inc
push
stc
ja
mov
sbb
in
repz
sub
mov
loopne
pushf
cmpsl
insb
add
pop
arpl
cmp
cli
mov
cmp
xchg
cmpsb
and
in
xchg
jl
sbb
dec
hlt
stc
fdivl
aaa
ss
jae
inc
adc
outsb
xorl
out
test
out
sti
fnsave
adc
lcall
inc
popa
bnd
faddl
jns
push
or
stc
pop
jnp
xchg
mov
cmpsb
sti
add
sar
into
mov
push
sbb
insl
shr
jae
mov
cmc
add
sbb
add
mov
cs
enter
add
inc
cli
jno
popl
fs
loope
nop
adc
popf
cmp
js
hlt
mov
pop
dec
mov
inc
fnstcw
jno
jb
pop
clc
sbb
cmc
cmp
idivb
sbb
in
xchg
stos
xchg
or
or
mov
fdivr
jns
cmp
add
xchg
mov
dec
push
xchg
and
sbb
cmc
in
push
ss
dec
arpl
push
hlt
and
sub
in
push
cli
ret
inc
addl
inc
pop
mov
add
jnp
loopne
mov
popf
xchg
or
mov
sarl
xor
pop
sub
adc
mov
add
imul
dec
and
lahf
mov
mov
sti
sahf
test
loope
push
in
pop
ficoms
push
sub
add
inc
sbb
faddl
movsl
ds
int3
mov
add
repz
and
mov
stos
mov
cwtl
jmp
mov
sbbl
and
push
arpl
decl
xchg
push
xor
or
dec
cmp
aad
je
out
xchg
fdivr
add
sub
imul
insb
and
push
add
xchg
adc
dec
loopne
adc
sub
jp
jl
xor
cld
jg
adc
push
out
aam
neg
call
lcall
jae
out
jg
sti
mov
fcmovne
sbb
cld
shlb
push
add
cmpsb
jmp
or
mov
and
add
dec
pop
shr
mov
rol
ret
push
xor
pop
jge
enter
rcll
divl
jbe
inc
mov
mov
push
into
jb
test
mov
xchg
jnp
rorb
jnp
fnstsw
les
dec
adc
jmp
push
inc
lahf
leave
adc
mov
jp
inc
adc
push
lods
loopne
and
jb
cmc
jo
sub
lock
ss
arpl
imul
xchg
and
xor
outsl
pop
popa
mov
mov
test
push
mov
lret
cld
pop
outsb
stc
out
fistps
adc
cltd
push
mov
sub
jnp
int
adcb
xor
xchg
js
sub
inc
mov
int3
arpl
dec
add
sub
das
adcl
mov
inc
jge
xor
mov
jne
lcall
jp
xlat
mov
add
mov
xor
and
pop
sub
out
inc
mov
push
ret
mov
pop
stos
mov
inc
filds
push
add
mov
mov
std
rcll
popa
or
imul
in
dec
std
mov
in
leave
mov
dec
jno
jnp
sti
call
xor
add
or
or
les
lret
xchg
or
jl
and
lret
aaa
call
rcr
popf
jno
std
jmp
movsb
or
push
mov
mov
jbe
inc
js
pop
xchg
shll
int
mov
sarl
jmp
mov
imull
hlt
xchg
repnz
dec
jae
sbb
cltd
mov
cmpsl
test
call
rorl
adc
scas
mov
aaa
lret
jo
adc
mov
in
data16
shlb
pop
mov
loope
push
and
jnp
std
inc
pop
ds
stos
adc
jge
or
loop
cld
xlat
cwtl
dec
dec
bound
sahf
mov
imul
and
lods
ret
xor
pop
jb
iret
int
hlt
loopne
and
pop
repz
andb
sub
fnstsw
pop
xor
dec
call
or
iret
mov
lret
push
je
cmc
and
fwait
add
inc
mov
aas
add
aas
pushl
jo
push
movsl
cs
in
lret
push
sub
cmpsb
cmp
and
xchg
add
xor
ljmp
cmp
adc
lret
add
repz
rdpmc
mov
push
adc
rcrl
jns
test
movsb
mov
or
add
dec
es
sbb
dec
insl
or
xchg
xchg
nop
ror
cli
lahf
fisubrl
xchg
dec
mov
inc
jbe
sahf
and
ja
out
das
jnp
out
ds
mov
inc
xchg
jbe
cmp
pop
lods
pushw
rorb
gs
xchg
rolb
lods
mov
rolb
lea
test
pusha
mov
pop
cmpsl
mov
push
rol
or
pop
mov
lods
dec
test
insl
mov
rcll
xor
ret
push
fwait
add
cmp
xor
push
jae
jl
dec
movsl
ja
dec
push
cmp
sub
sub
fs
fwait
cmp
inc
es
add
cvtdq2ps
lock
aam
fwait
sbb
cmpsl
fiaddl
into
loope
adc
aaa
std
popf
mov
mov
lods
jnp
jb
and
cld
aaa
into
aam
adc
idivl
mov
mov
enter
lods
aam
stos
xor
movsb
aas
xchg
mov
adc
jle
sahf
scas
insb
cmpb
mov
jbe
pop
pop
in
gs
jle
pusha
jecxz
imul
in
call
or
insl
or
push
xor
movsb
hlt
sarb
ljmp
mov
movsb
sti
rclb
sub
mov
add
mov
shll
addl
daa
push
cmp
push
push
mov
mov
push
lret
mov
repz
xlat
sub
movsl
cs
inc
fwait
sbb
pop
add
loope
lahf
xchg
cwtl
test
dec
hlt
mov
loope
mov
xchg
fwait
cltd
lcall
adc
mov
xor
in
test
cs
out
jo
or
jl
pop
mov
sbb
ljmp
fisttps
out
sub
cmp
shl
movsb
daa
test
xchg
or
cmpsl
jae
fcompl
cmpsl
inc
popl
loope
bnd
into
sbb
mov
popf
jbe
fwait
xor
mov
in
push
and
pop
dec
ret
cmpsl
not
pop
stos
test
adc
sbb
jns
out
repnz
jle
test
mov
movsl
stos
mov
inc
xchg
push
push
pop
and
les
stos
jmp
adc
fmuls
inc
xchg
sub
add
sub
pop
mov
mov
outsl
aaa
inc
in
push
data16
push
int3
ffreep
sbb
lret
cmpl
int
pop
idivb
mov
mov
cld
ficomps
mov
lods
dec
and
call
fimuls
jno
push
jle
cs
inc
adc
xchg
lds
andl
xchg
adcl
dec
push
les
cwtl
sub
pop
ja
xchg
sub
test
sbb
mov
push
push
or
movsl
rcrb
push
pushl
testl
xchg
and
or
movsl
inc
adc
push
cmc
mov
or
cmpsb
pushf
mov
sbb
mov
sbb
jmp
sub
lret
xchg
and
fistps
jmp
in
jmp
hlt
into
push
and
dec
inc
jns
fs
ds
dec
insb
cmp
rolb
lods
mov
adc
insl
mov
add
in
mov
icebp
jg
lret
jmp
or
test
adc
mov
or
and
cmp
mov
cltd
or
pop
nop
xor
negl
sub
dec
jmp
das
es
sbb
add
stos
or
shl
xchg
rclb
into
imul
stos
mov
jbe
daa
xchg
push
mov
outsl
sti
mov
cmp
shll
fmull
inc
lods
addl
mov
bound
pusha
xchg
adc
adc
adc
jbe
inc
sbb
gs
lds
fsubs
inc
js
mov
adc
orl
xor
push
movzbl
scas
roll
mov
stos
fdivr
push
adc
dec
cs
int
add
xchg
cmpsl
push
fdivl
jp
imul
movsb
mov
mov
cltd
sti
jmp
pop
daa
clc
mov
addb
ret
fadds
inc
andb
inc
push
js
dec
sar
mov
xor
insl
mov
mov
inc
or
push
paddb
rcrb
stos
mov
fsubrs
je
icebp
pusha
leave
mov
xchg
cmp
cmc
std
jae
lods
cld
insl
mov
call
mov
es
xchg
popf
shr
lods
or
pop
mov
xchg
and
dec
sbb
lock
add
jne
or
in
jne
jb
popf
xchg
mov
ret
cmp
pop
movsl
andb
out
mov
aas
into
sub
pop
lds
std
inc
iret
xchg
dec
insb
mov
cmp
sti
lret
movsb
sbb
sahf
adc
cmp
cld
and
jns
or
movsl
out
xor
push
out
push
xchg
fidivrs
iret
xchg
dec
shrb
movsl
jae
jb
xor
js
loopne
fnstcw
pop
nop
push
insb
imul
out
and
xor
repz
adc
repnz
fnstcw
fs
cli
pusha
les
vpsllq
mov
cld
and
lret
pop
mov
nop
pusha
push
addr16
out
cmp
sub
aam
test
mov
stos
fiadds
xor
arpl
jle
repz
pop
adc
shrl
mov
jecxz
outsl
xchg
push
mov
pop
mov
lret
sbb
jle
mov
jle
cmpsl
jbe
push
insl
test
hlt
sub
push
setle
icebp
loop
pop
or
inc
cli
in
mov
ret
or
decb
xchg
je
loop
out
psrlw
jae
push
fdivrl
mov
les
add
mov
dec
add
ds
push
inc
sub
or
int3
jne
push
add
cmp
sbb
fwait
test
cwtl
xchg
mov
push
and
dec
add
outsb
pop
shl
mov
cmpb
add
pop
sub
nop
pop
and
mov
adc
ss
stos
rorb
mov
and
ljmp
sarl
pushf
mov
fnstcw
mov
movsb
push
sub
adc
inc
and
xchg
adc
and
cmpsb
loope
enter
mov
fs
pop
pop
pop
out
xchg
cmpsl
push
test
or
jge
lods
loopne
fsubs
test
mov
mov
shlb
movsl
aam
jns
mov
cmc
lea
push
bnd
fcmovbe
sbb
mov
es
lret
cwtl
loopne
jp
inc
fsub
push
outsl
jmp
aad
sbb
sub
ja
sbb
rcr
ss
loop
sub
ret
push
add
rorb
mov
dec
cwtl
out
adc
iret
cmp
mov
cs
xchg
out
cmp
adc
loopne
and
dec
xchg
fsubrl
je
es
sahf
push
fsubr
xchg
mov
cmp
nop
jo
test
int3
test
repz
xchg
xor
pop
jae
outsb
mov
dec
mov
jle
hlt
js
lea
cmp
mov
out
inc
int3
jl
sbb
dec
xor
add
cmpsb
and
test
push
or
cltd
xchg
daa
leave
movsl
hlt
gs
mov
sub
hlt
jmp
or
ret
adc
add
imul
sub
cmpl
popf
cmpsl
mov
imul
or
rorl
pop
stc
test
rcl
fisubrl
test
jbe
jge
mov
xor
jo
test
popf
mov
mov
cmp
pusha
aad
pushf
mov
dec
xchg
cmp
mov
inc
mov
mov
xchg
aad
mov
movsb
icebp
frstor
rolb
roll
jle
mov
stc
pop
dec
mov
ljmp
stc
shrb
loopne
pusha
insb
mov
insb
jmp
xchg
jns
mov
rcr
out
mov
or
mov
enter
push
subl
xor
cmpsl
sub
cmpsb
repz
fsubp
cwtl
sbb
and
pop
je
jl
add
movsl
inc
xor
dec
jecxz
dec
out
dec
arpl
testl
call
cmc
and
lock
ret
mov
aam
icebp
iret
sub
add
push
xchg
mov
test
ljmp
sbb
pop
jbe
out
add
loope
jo
cmpsb
add
xchg
push
mov
push
mov
xor
xchg
jmp
test
adc
pop
sti
cmp
je
mov
adc
jl
fdivl
enter
movsb
stc
or
mov
sub
movsl
mov
push
push
pusha
js
xlat
pusha
pop
insl
popf
push
das
jp
mov
rcll
and
sahf
adc
mov
and
aas
fistpl
cmpsl
imul
lea
mov
mov
in
jo
stos
dec
sbb
mov
push
repnz
lods
or
pop
enter
sbb
ret
push
jp
cmp
daa
adc
mov
pop
jp
rcrb
fldcw
outsb
test
lods
aad
add
out
sub
popf
fisubs
push
pop
mov
mov
dec
dec
mov
fimuls
xor
cmc
cs
lahf
popa
inc
jne
js
arpl
test
and
lea
out
xchg
int3
push
in
and
lods
arpl
lock
ja
jns
xchg
jmp
mov
push
add
jno
inc
mov
popf
pop
inc
push
jge
rcl
jb
push
fimuls
or
rcl
fcomps
rorb
lret
sub
pop
rcll
sarb
jmp
pop
xor
into
lret
mov
inc
dec
cmp
or
cmp
repnz
jl
add
gs
ja
outsb
insl
xor
cmp
pop
andl
out
sub
popf
dec
adc
lods
fistpll
mov
out
test
ja
mov
mov
mov
pop
sub
or
mov
inc
jae
jns
andl
xchg
inc
notl
fwait
mov
mov
xor
add
jnp
inc
sub
clc
mov
pop
push
fnsetpm(287
nop
add
or
scas
sub
jmp
int
xchg
adcb
mov
pop
inc
inc
repz
pop
add
scas
push
jne
stc
ret
mov
lds
xchg
dec
and
popl
sbb
add
gs
stos
mov
adc
frstor
loope
sub
ljmp
jb
cmp
sub
mov
iret
mov
incb
adcb
pusha
loopne
push
mov
or
cmp
cmp
cwtl
aas
ror
pop
pop
dec
in
imul
and
jp
test
jbe
pop
test
push
adc
cld
xchg
dec
push
sub
rclb
addr16
pop
shll
and
dec
and
fldl
push
push
cmp
in
pushf
cwtl
mov
repz
mov
sahf
out
or
or
sub
aam
push
int3
pop
clc
clc
shl
mov
testb
jns
cltd
push
jecxz
sbb
icebp
movsl
dec
push
mov
jbe
addr16
mov
push
mov
ja
leave
xchg
pop
dec
push
inc
push
out
jmp
int3
test
loop
ss
stos
xlat
and
mov
pop
mov
ljmp
xchg
xchg
pop
dec
xlat
push
mov
jge
add
mov
jecxz
jae
icebp
stos
add
and
ljmp
cmpsl
fcmovnbe
add
ficoml
clc
scas
cmp
push
stos
mov
jns
popa
fstpt
iret
jl
add
popa
scas
out
cwtl
aam
shlb
or
outsb
push
clc
in
pop
stc
adc
jmp
jge
jle
xor
sti
xabort
test
cmp
icebp
cld
stos
push
xor
repnz
ja
mov
push
lahf
adc
adc
inc
mov
add
adc
lds
int
inc
and
lea
int
add
mov
adcb
test
push
aam
cs
call
xor
into
fidivs
push
mov
xchg
out
cmc
xor
pop
stos
cltd
add
inc
scas
push
nop
outsb
pop
mov
mov
pop
inc
jae
mov
ret
mov
push
xchg
sub
pop
movsl
add
mov
ljmp
mov
adc
push
cld
pop
ffreep
cmp
pop
xchg
aad
out
imul
adc
cmp
dec
inc
loop
cwtl
enter
fsts
mov
adc
mov
arpl
ss
or
in
outsb
cmpsl
cli
jnp
out
adc
xor
aas
fdivp
jg
and
sub
rclb
jle
jno
inc
or
adc
test
cwtl
add
push
lret
dec
daa
xor
les
xchg
repz
mov
and
mov
aaa
in
stc
xchg
xchg
sbb
cs
cli
inc
mov
pop
test
in
aas
das
mov
ds
cld
popa
inc
xor
or
bnd
ficompl
add
mov
push
dec
cmp
cmp
inc
nop
mov
sarb
bound
adc
jmp
jecxz
daa
add
add
dec
or
leave
adc
jne
lods
es
cs
mov
sub
shlb
lret
jno
jle
cmpsl
inc
push
sbb
rcll
push
dec
mov
mov
inc
insl
jnp
push
fnstsw
cmp
push
sub
and
fsts
out
push
inc
stos
movsb
repnz
xchg
test
dec
mov
pop
sbb
dec
cmp
movsl
push
xor
addb
testl
sbb
aam
fdiv
mov
lods
cmp
hlt
enter
lcall
cld
or
xchg
push
xchg
sub
lret
adc
sub
pop
and
pop
call
pop
add
mov
mov
lret
neg
faddl
movsb
jo
adc
add
push
out
sub
popf
cld
sbb
dec
jnp
mov
insl
mov
mov
xchg
cmp
xor
loopne
push
cmp
dec
loopne
pop
xchg
inc
inc
idivb
out
jg
and
xor
test
xchg
push
sbb
or
jmp
in
pop
fsub
xor
int
setne
ficomps
or
outsb
sbb
nop
mov
stos
mov
add
ss
mov
je
aaa
xchg
push
pusha
add
and
mov
test
not
cmp
cmp
cwtl
and
sahf
inc
mov
xor
inc
jmp
sbb
xchg
outsb
mov
pusha
in
adc
ljmp
jl
inc
cmp
int3
aad
inc
push
mov
and
mov
in
dec
push
and
lea
int
and
and
inc
mov
jnp
orl
lea
dec
mov
les
fmull
push
xchg
rsm
push
je
adc
mov
jno
sbb
pop
inc
dec
icebp
cmpsl
cld
ss
stos
movsl
xor
and
lock
adc
xchg
ljmp
fsub
adc
daa
in
mov
test
inc
push
inc
rclb
ljmp
lds
out
cmpsb
fucomi
ja
mov
xchg
mov
xchg
pushf
dec
addr16
mov
mov
inc
aaa
mov
mov
mov
adc
in
cld
pushf
adc
in
xor
cmp
jnp
xchg
je
sbb
xor
pop
out
nop
or
xchg
adc
jmp
xchg
gs
mov
repnz
sbb
sti
icebp
xlat
insl
into
iret
mov
xchg
dec
dec
add
add
cmp
aad
add
int
repnz
ss
pushf
in
ret
sbb
rcl
pop
push
ljmp
pop
sbb
xor
add
sbb
test
push
ljmp
mov
or
mov
les
mov
insb
stc
push
outsb
lock
mov
push
inc
add
notb
bound
nop
sub
cmpsb
xor
sub
aad
mov
shr
sbbl
insl
mov
es
add
pop
lods
jg
stos
jo
mov
popa
outsb
push
jle,pn
and
jecxz
stos
inc
call
and
jl
cmpsb
int
out
and
push
lds
add
mov
insb
cmp
nop
repz
or
lods
outsl
cs
mov
jg
movsl
adc
or
mov
xchg
outsl
ret
sti
pop
mov
xchg
jmp
xor
xchg
jo
and
fimuls
jge
je
or
mov
mov
jae
insl
mov
int
aaa
xor
pop
fiaddl
mov
adc
inc
pop
ds
mov
xor
mov
popl
cmp
cmp
lock
mov
insl
mov
outsl
dec
dec
cmp
scas
or
out
xorl
pop
ja
jle
test
call
and
jne
lret
jbe
pop
mov
negb
sbb
or
xor
and
aam
or
cmp
pop
jnp
loopne
test
popa
push
das
dec
push
aas
lret
adc
fistpl
mov
xor
adc
sbb
fs
cli
push
aaa
pushf
sub
pop
inc
xor
jmp
sub
cmp
sbb
push
clc
fucomip
pusha
xchg
loop
std
cmp
ret
push
pop
push
cli
jno
mov
popa
orb
mov
push
inc
sbb
mov
or
push
mov
dec
jle
mov
insl
or
loopne
pop
lods
mov
in
dec
push
xlat
bound
jo
xchg
add
or
mov
push
jne
sub
icebp
lds
sti
call
adc
imul
inc
push
lahf
push
push
repnz
in
int3
pop
cmp
lods
js
sub
pop
sub
mov
popf
popa
jp
subb
sarl
mov
push
jb
xchg
cs
mov
aam
cmpsb
mov
push
outsb
rcl
jl
pop
dec
les
stos
in
push
or
adc
adc
sub
rcll
adc
mov
jmp
pop
mov
add
cmp
push
orl
pop
add
jp
mov
dec
cltd
scas
ror
push
and
out
negb
test
pop
test
stos
jne
push
add
sub
clc
jmp
mov
adc
enter
dec
into
jecxz
out
ss
inc
inc
leave
ret
repnz
xor
mov
jecxz
aas
adc
inc
repz
sbb
ret
loope
jno
fistpll
sub
jb
adc
hlt
pop
iret
js
add
cmp
xchg
int
push
std
shrd
pop
ret
push
cmp
jnp
popf
out
adc
push
lods
push
out
les
jecxz
lret
insb
sar
fildll
fistpll
std
cmp
shl
mov
mov
or
adc
push
push
imul
aas
mov
dec
insl
rcr
xchg
popf
aaa
jmp
add
lahf
insl
aaa
dec
in
outsb
mov
push
and
cli
add
push
add
leave
push
insl
clc
pop
loope
or
daa
pop
jo
loopne
push
pushf
mov
sbb
adc
dec
cmp
sbb
stos
xlat
add
mov
pop
xor
mov
ret
mov
dec
loop
icebp
lods
ficomps
shl
push
sarl
push
sub
or
or
loope
dec
stos
xchg
dec
xchg
and
mov
cmp
xchg
test
cltd
outsl
or
inc
aas
dec
xor
xchg
jge
fldenv
outsl
cmp
pop
loopne
pop
leave
sub
mov
cld
outsl
add
adc
out
mov
sbb
in
out
adc
jbe
mov
jg
js
fmull
and
jp,pt
cmc
shlb
sub
and
mov
mov
fcmovnb
lods
xchg
int3
loopne
inc
inc
adc
test
cmp
sub
add
lods
into
inc
push
dec
sub
push
and
sbb
out
stos
or
xrelease
movsl
cli
sbb
gs
in
push
jb
push
outsl
jmp
xor
push
dec
fsubl
or
jne
or
pop
push
push
mov
sub
inc
jecxz
lret
adc
nop
mov
adc
mov
aam
inc
hlt
xchg
ljmp
xor
sbb
cmp
xchg
sbb
add
shll
hlt
cmpsb
leave
mov
aad
mov
call
sub
mov
push
ja
inc
mov
daa
fadds
dec
xchg
shlb
in
jg
aam
xor
addb
lcall
fidivs
jne
rcll
add
into
add
into
loopne
insl
orb
pop
xor
xor
mov
mov
mov
cmp
iret
dec
adc
xchg
out
ds
test
outsl
mov
in
pop
xchg
cmp
mov
jge
sub
sbb
push
mov
cmc
xor
push
repnz
xor
and
mov
jns
pop
add
dec
dec
lcall
mov
idivb
shlb
loop
and
push
cmp
mov
mov
rcll
cltd
xchg
pop
pop
insb
pop
fmuls
xchg
jmp
push
add
mov
or
xchg
leave
add
inc
insb
jl
ret
sti
popf
lfs
or
add
sbb
scas
dec
jmp
jg
inc
sbb
mov
xchg
idiv
jge
lcall
or
les
mov
and
push
xchg
push
jp
shrb
imull
sbb
stos
lret
sub
adc
fisubrs
add
sub
inc
xor
xchg
cmpsl
pop
mov
movsb
xchg
in
push
xor
hlt
xchg
jle
dec
jmp
jae
mov
pop
mov
sarb
fistps
dec
movsl
mov
int3
jno
hlt
out
movsl
pop
mov
cmpsb
mov
push
ds
int3
hlt
dec
add
mov
loope
jecxz
mov
nop
in
mov
mov
mov
das
ret
xorl
in
rcrb
scas
add
idivl
int
cmp
mov
cs
inc
mov
xchg
clc
adc
cmp
mov
and
pop
lahf
imul
xchg
inc
pop
loop
daa
xchg
pop
mov
jo
nop
fldl
sarl
sbb
ljmpw
lods
jl
sbb
mov
cmc
popa
clc
inc
pop
sbb
or
incb
xchg
mov
scas
jle
pushf
sbb
xchg
add
out
sbb
xchg
mov
or
cwtl
push
sub
sbb
xor
test
jb
dec
test
mov
mov
and
and
or
hlt
xor
fsubl
push
sbb
mov
in
daa
mov
pop
sarl
into
iret
mov
adc
aaa
jo
fcompl
xchg
dec
mov
sbb
out
pop
pop
jno
rcl
cs
adc
inc
inc
lcall
and
add
test
xchg
cli
ds
cmp
mov
iret
in
call
test
lret
dec
enter
loop
pop
lods
jmp
popf
pmulhuw
mov
stos
and
mov
idiv
ret
fwait
or
sub
outsb
leave
mov
xorl
cmp
cmp
xchg
cmp
cmp
adc
test
cli
mov
mov
subb
jmp
aam
scas
mov
jnp
cld
test
test
dec
jae
stos
lds
xor
repz
sahf
jae
out
xchg
das
insl
out
rclb
into
sub
xchg
fmuls
mov
xchg
jmp
lods
call
cmp
sub
scas
sbb
or
test
xor
loop
or
xchg
push
sub
push
mov
or
ds
cmp
sub
in
test
inc
out
dec
add
push
fidivrl
pop
add
xchg
or
jb
xchg
addr16
insl
push
adc
xchg
imul
ret
or
add
push
dec
and
adc
jmp
fdivrs
imul
scas
arpl
inc
out
inc
fnstenv
shlb
daa
xor
test
push
ja
insl
leave
movsb
mov
stos
andl
shlb
adc
inc
mov
hlt
dec
jne
sarl
sbb
fbstp
cmpsl
lahf
sbb
cli
cmp
leave
sbb
jo
nop
push
dec
mov
jae
mov
xchg
imul
gs
fucomip
std
cld
xchg
or
hlt
bound
inc
sbb
push
or
xor
inc
mov
imul
pop
mov
or
dec
pop
rcrl
scas
aas
or
popa
scas
es
xor
xchg
gs
rcll
xor
mov
movsl
cs
movsb
xchg
lods
mov
ret
dec
stos
push
insl
cmp
xchg
mov
outsl
xor
or
cmp
arpl
divl
out
gs
movb
in
js
jbe
addl
inc
mov
pushf
mov
ss
jge
jb
mov
add
cmp
mov
inc
xchg
aam
push
imul
jge
pop
or
mov
fimuls
or
xchg
loopne
mov
aam
outsl
lret
pop
xchg
mov
xchg
lock
cwtl
push
loop
aam
cmpsb
int
sub
shlb
fwait
stos
popf
xor
cltd
je
mov
mov
sub
ret
xchg
add
insl
je
inc
es
mov
imul
xchg
push
dec
xchg
into
fnstcw
cli
push
outsb
fdivrl
xor
mov
push
dec
inc
lcall
insl
mov
stos
mov
mov
xor
bound
pop
or
outsb
jae
testl
mov
enter
add
outsb
jle
jns
popf
mov
xchg
fwait
insb
loope
ss
mov
in
pushf
lret
xor
fimull
lret
hlt
push
mov
jbe
sbb
addl
adc
fs
incb
sub
jae
sub
into
jle
fdivl
into
jb
xchg
test
inc
or
mov
cmp
shlb
in
aad
mov
rcll
sahf
or
or
jle
fscale
dec
in
cli
mov
xchg
pop
mov
flds
movsb
jne
cmpsl
cmp
bsf
sarb
cmp
xchg
ljmp
repz
in
mov
mov
sbb
data16
add
jp
ret
xor
and
ja
add
jge
jmp
js
out
add
cmp
js
setb
rcrb
inc
fbstp
or
mov
popf
out
test
dec
sub
lock
icebp
test
loope
imul
and
cld
es
fnsave
out
lret
jp
cmpsb
jbe
stc
adc
sbb
icebp
out
jg
jecxz
adc
push
cli
mov
jbe
dec
cltd
fldenv
xchg
jno
or
cmp
out
sbb
sbb
enter
inc
add
gs
clc
adcb
cs
stos
pop
addr16
repnz
dec
xor
fwait
jmp
shl
mull
in
push
shr
orl
xchg
push
arpl
out
or
mov
leave
shl
sbb
in
cwtl
nop
jl
push
jns
out
mov
lea
adc
mov
lods
and
scas
jo
add
mov
push
adc
lahf
ja
sub
add
clc
push
pop
add
sub
inc
inc
push
mov
lret
lcall
inc
cmpsl
inc
out
xchg
inc
or
or
inc
jae
lock
push
or
popl
mov
loopne
cs
cmp
das
call
pop
xor
sub
movsb
jo
jnp
mov
adc
sub
jne
mov
jae
test
jp
idivb
add
jns
inc
rolb
insb
sub
add
iret
pop
inc
scas
or
cmp
dec
jg,pn
fdecstp
xor
sahf
pop
pop
adc
mov
shl
shll
jp
sbb
data16
inc
xchg
imul
mov
xor
loopne
inc
cs
sub
lock
or
mov
dec
sub
scas
add
dec
or
push
push
lock
and
pop
inc
adc
jne
dec
add
push
mov
push
jge
inc
leave
lods
push
std
pusha
pop
hlt
lea
iret
add
jne
out
int3
daa
pushf
adc
ror
jl
jb
ds
movsb
lods
and
pop
jle
and
xor
push
inc
int
jg
sti
mov
push
repz
lock
jl
std
dec
xor
pop
mov
sti
lea
xchg
fstpl
push
mov
or
and
sub
popf
adc
mov
movsl
sbb
out
or
cmp
pop
sbb
movsl
lahf
jno
or
lds
cli
pop
pop
das
cmpb
push
ficompl
jns
mov
xchg
repz
jmp
int
mov
sarl
ficompl
sub
cmp
lahf
mov
out
dec
lea
fidivrl
repz
addr16
and
add
and
loope
pop
xor
sub
add
fwait
lods
pusha
scas
inc
push
call
adc
mov
and
mov
and
icebp
in
jno
fdivr
mov
push
xchg
into
push
dec
scas
xchg
adc
mov
loop
and
and
cli
pop
adc
ss
test
sub
pop
dec
ds
lds
ret
test
seta
xchg
repnz
loop
and
add
add
imul
inc
xchg
push
testb
pusha
mov
mov
scas
inc
jg
icebp
rorl
in
xor
test
ss
xchg
mov
push
lods
jns
and
push
cltd
ret
clc
setle
nop
or
inc
outsl
repz
aad
mov
push
sub
and
jnp
jp
xchg
xor
lds
mov
js
sbb
push
lret
xchg
add
add
cltd
scas
adc
xchg
fs
push
add
aaa
les
pop
in
xor
in
repnz
outsl
in
mov
dec
ret
xor
arpl
jne
xorl
ja
iret
icebp
mov
cmp
mov
or
pop
xor
sar
lcall
push
sub
or
jmp
int3
fbstp
push
jl
xchg
loope
scas
outsl
btc
les
cmc
lock
inc
popa
cmp
and
add
stos
aas
es
push
inc
mov
or
jmp
das
jp
aam
popf
imul
and
push
sbb
lods
movsb
insb
in
jg
in
xchg
and
xchg
push
insb
sbb
pop
outsb
out
mov
rcrl
mov
int3
mov
jnp
ljmp
cltd
loop
int
sub
popf
sub
das
lret
jge
adc
or
xchg
inc
ds
mov
sbb
cmp
mov
mov
loopne
pslld
ja
cmpsb
and
lret
xchg
imul
scas
push
pusha
push
xlat
fidivs
dec
sub
je,pn
and
push
test
imul
jo
or
dec
cs
in
add
and
pop
gs
shlb
jmp
test
test
in
mov
add
lahf
fsts
test
and
xor
or
repz
push
add
jb
push
xchg
adc
jb
cltd
push
and
mov
adc
out
push
pmaxub
cmp
mov
xlat
in
in
add
push
je
ror
rcrb
mov
xlat
insl
arpl
pop
sbb
cld
pop
jns
cmp
mov
push
sub
sahf
xchg
in
imul
jnp
mov
xchg
into
sbb
mov
pusha
in
xchg
xchg
push
fnsave
lahf
xchg
mov
out
push
and
mov
add
jl
cmovg
lahf
imul
cmp
lahf
je
push
insb
inc
and
int
out
jno
movb
inc
loopne
xchg
out
dec
test
mov
pop
mov
lcall
addr16
inc
sti
ds
pop
sbb
test
in
cmp
data16
jns
mov
sahf
icebp
jne
dec
mov
mov
sbb
pop
jl
fidivrl
jnp
mov
fs
adc
and
mov
pop
aaa
jmp
cmp
into
mov
loopne
ljmp
push
adc
cltd
lret
loopne
jle
fstl
js
clc
out
dec
test
sbb
in
aas
sarb
mov
aaa
adc
mov
inc
rclb
push
loopne
xor
fwait
lret
outsl
push
and
cmp
mov
cmp
jecxz
imul
mov
lret
dec
bound
jle
jg
pop
mov
test
filds
mov
test
loop
arpl
jg
mov
ss
mov
or
mov
call
dec
js
out
repnz
or
sub
push
mov
xchg
pop
xchg
std
pop
aas
ss
ffree
ret
ljmp
inc
jne
sbb
aaa
mov
jge
mov
xor
jl
das
test
mov
pop
inc
pop
loope
mov
ja
cmc
out
xor
popf
add
les
add
test
lods
shll
cmpsl
scas
jl
fdivs
mov
adc
fwait
out
pop
rorb
sbb
xor
insl
mov
fcoms
add
mov
ds
mov
sbb
adc
mov
push
and
enter
vpshufhw
cmp
mov
lods
pop
call
js
shlb
push
xchg
rcrl
loopne
mov
rolb
in
pusha
adc
stc
sbb
mov
fs
sar
fcmovne
inc
cld
mov
jno,pt
leave
push
inc
pop
push
int
mov
dec
paddb
repnz
xor
inc
push
ljmp
cmp
iret
les
test
sub
ret
les
mov
mov
mov
cmp
leave
pop
lock
and
loopne
outsl
cmp
adc
xchg
nop
adc
xchg
or
cmp
imul
jecxz
sbbl
ds
mov
jns
mov
push
stc
or
push
xchg
cmpsb
ss
xchg
lahf
jbe
mov
inc
mov
ljmp
in
mov
xor
jo
add
xchg
sub
dec
insl
pop
std
fstpl
xchg
dec
dec
add
xchg
jl
jae
popl
and
push
outsb
in
scas
pop
lods
add
shll
dec
lret
dec
movsl
insb
hlt
cmpsl
sub
flds
daa
sbb
jg
jl
fidivrl
and
fs
or
fimull
hlt
insl
dec
sbb
cmp
fimull
icebp
fisttpl
repz
xchg
mov
out
movsl
dec
mov
adc
cltd
push
aaa
and
in
mov
mov
xor
in
stc
cmp
add
cltd
hlt
add
dec
std
lods
test
pop
subl
cwtl
push
test
icebp
xlat
jecxz
aas
cwtl
add
xchg
adc
in
mov
cltd
push
sbbb
mov
ja
pop
mov
aas
mov
inc
fwait
push
sub
int3
push
sub
mov
cmp
push
insb
fstpt
popa
push
repnz
shll
fld
push
out
fcmove
enter
outsb
sbb
sbb
fucom
stos
mov
ret
adc
cmpsb
adc
or
mov
mov
mov
and
lds
outsb
jbe
jo
mov
jnp
cmp
pop
std
jb
dec
mov
lods
cmpsb
jg
xor
gs
movsl
sti
mov
popa
mov
add
push
popa
dec
mov
pop
add
xorb
add
mov
add
insb
fildll
ficoms
pop
push
ja
aaa
out
pop
sti
mov
dec
les
scas
add
movsb
cmpsb
xor
insb
xorb
mov
cli
jp
pop
loop
das
jbe
pop
jnp
xor
mov
mov
inc
push
scas
cmp
fisubl
cmp
add
pop
add
fwait
cmc
xor
mov
shrl
sub
lret
mov
inc
rorl
fmulp
sub
and
push
cmc
in
pop
mov
sbb
clc
adc
cltd
lods
pop
lret
push
lahf
mov
add
or
xor
mov
rcrb
mov
jg
mov
mov
fbld
mov
out
mov
and
lahf
jno
repz
jecxz
xchg
in
rorl
pop
imul
cmpsb
pop
ret
mov
fbld
aad
cmp
inc
ffreep
in
cmp
push
leave
pop
out
shll
xchg
xchg
out
out
inc
pop
ljmp
sbb
xor
test
enter
mov
xor
mov
sbb
les
repz
push
xchg
push
inc
popl
xor
addr16
xor
scas
ja,pn
xor
shrb
ss
ds
xor
rcrb
and
pop
jno
and
out
cs
xchg
adc
cmp
or
iret
ja
test
sahf
adc
cmpsb
incl
fstps
lock
leave
dec
adc
inc
inc
sar
iret
repnz
add
lock
dec
test
xchg
sub
outsl
or
and
or
les
cmpsl
xchg
rcll
popl
inc
addr16
jmp
pop
xchg
pop
pushf
testl
fistpl
cltd
nop
and
loopne
sbb
jbe
push
or
repnz
or
dec
pop
push
cld
cmpsl
dec
fisttpll
cld
pop
stos
mov
mov
push
xor
sbb
or
in
adc
mov
sarb
push
aam
scas
inc
rol
push
dec
inc
pusha
cmpsb
jnp
mov
xor
ret
aad
clc
lods
mov
sub
imul
jo
fbld
icebp
aad
xor
jns
fwait
into
sub
mov
xchg
mov
jno
mov
xor
sub
scas
mov
xor
movsb
cmp
lret
sbb
cld
sbb
imul
mull
loop
cwtl
sub
pop
dec
xchg
lret
dec
and
jo
adc
call
xlat
adc
mov
adcl
cmpsl
push
jne
ss
sbb
fidivrl
dec
sub
jmp
add
xor
icebp
mov
mov
bound
add
xchg
push
inc
jae
fwait
xchg
push
testl
jl
pushf
pop
inc
mov
push
jb
jae
movsl
in
add
mov
mov
xchg
outsb
cltd
aam
xchg
xorb
and
loope
rcrl
jo
push
push
rorb
out
mov
loopne
cmp
inc
pop
sub
push
dec
inc
popa
shrb
add
jge
lock
sbb
in
mov
roll
mov
and
repnz
rcrl
int
push
bound
negb
jmp
push
lods
and
pop
sbb
cli
fwait
add
addr16
movsl
sahf
stc
cmpsl
test
std
mov
fsts
lock
and
cmpsb
pushf
aad
add
xor
repz
or
leave
xor
lret
xor
adcl
push
fists
or
inc
addr16
popf
add
mov
in
aas
scas
dec
mov
cmp
les
dec
xchg
imul
jle
push
adc
addr16
push
int3
mov
idivl
inc
xor
fdivrl
mov
stos
sahf
inc
sub
fucom
jmp
push
dec
fs
or
cs
mov
sub
loope
or
jmp
adc
jp
fnstenv
cltd
mov
inc
cmp
mov
lods
fcoms
loopne
adc
scas
or
sbb
sbb
sub
repnz
loope
mov
pop
jecxz
in
inc
in
stc
cltd
imul
ds
test
lcall
xchg
fiadds
sahf
pushf
mov
addr16
dec
rcll
pusha
inc
shl
out
push
xor
xor
notl
jno
scas
out
push
dec
push
inc
leave
shll
pop
iret
arpl
or
dec
or
das
decb
cmp
decb
xor
out
aam
jae
sarl
pop
inc
add
mov
mov
and
cmp
inc
fldl
out
dec
aaa
aaa
mov
lea
push
iret
fistps
dec
icebp
and
stos
popf
pop
sub
mov
push
je
cmpb
test
sahf
push
test
inc
fldz
lea
rclb
and
repnz
cltd
mov
int3
fdiv
gs
mov
cmp
push
jbe
mov
mov
add
test
mov
mov
push
fists
scas
xchg
jno
mov
push
stc
icebp
lcall
cmp
sbb
inc
inc
test
sti
imul
xchg
inc
mov
add
sbb
inc
andl
sar
out
shlb
adcb
shrl
pop
xchg
dec
add
cmp
mov
pop
mov
nop
cmovno
inc
int
cmp
lcall
js
out
inc
popf
insl
adc
push
adc
inc
xor
rorl
mov
pop
add
shrl
das
lods
mov
stos
push
or
insb
cltd
imul
jp
hlt
mov
add
testb
cmp
sub
cmc
pop
cmp
shlb
sub
mov
fists
fldenv
popa
add
mov
add
mov
inc
sbb
test
movsb
lods
popf
add
mov
cld
sub
and
mov
ret
add
push
insb
cmp
inc
cs
dec
shlb
jnp
mov
xlat
pop
or
mov
or
popf
sub
xlat
cmpsb
je
xorb
or
sub
icebp
or
fcompl
cmp
push
dec
bound
adc
je
shr
xchg
popf
xchg
mov
mov
movsl
jmp
or
lods
jmp
adc
inc
shrl
jp
notl
pop
mov
das
fmull
call
sub
push
or
shlw
icebp
mov
push
int
cmp
loop
mov
or
decb
adc
jge
xchg
pop
cmp
repz
pop
lcall
cmpsl
sub
ljmp
xchg
out
call
and
rcrl
adc
push
cmp
or
add
cmc
cmp
push
adc
inc
int
into
rcrl
ret
push
aam
mov
add
jns
in
mov
fdivl
clc
sub
pop
iret
hlt
mov
or
pop
push
mov
sahf
dec
arpl
ds
push
iret
lahf
repz
pushf
dec
stc
fscale
mov
addr16
cltd
pusha
dec
xchg
push
adc
in
aas
pop
mov
popl
jnp
ljmp
cltd
jns
mov
adc
out
jo
or
mov
mov
push
imul
sbb
icebp
shlb
inc
sub
data16
or
iret
sbb
repnz
es
icebp
hlt
and
ja
xchg
leave
adc
mov
mov
mov
jns,pt
adc
aaa
inc
xchg
lods
stos
mov
mov
or
mov
add
outsl
or
inc
sbbb
stos
cmp
or
xor
gs
gs
cli
push
shl
movswl
loop
push
sarl
dec
test
cmp
lret
jp
bound
and
xchg
lds
lds
mov
or
push
ret
aaa
subl
int
mov
inc
sbb
sbb
imul
lds
sahf
pop
das
js
mov
andl
scas
cmpsb
push
xchg
mov
dec
leave
imul
add
xor
test
xlat
shl
testb
jb
mov
jp
push
cmpsb
mov
xchg
imul
adc
and
sbb
dec
push
adc
cld
gs
lods
sbb
and
mov
lds
mov
rcl
xchg
xorb
or
into
inc
push
cltd
mov
aam
pop
mov
pop
idivb
iret
xchg
iret
test
cmp
popf
subb
push
cld
sbb
cltd
fisubrl
hlt
cmp
xor
mov
jo
insb
xchg
cmp
rcrl
insl
arpl
inc
sahf
or
mov
int
and
dec
bnd
in
mov
movsb
addl
ficoml
sbb
push
sbb
rol
cwtl
popf
sahf
cmp
jae
pop
scas
ret
xor
push
or
mov
sub
ret
insl
pop
mov
mov
out
mov
orl
rcl
lahf
pop
gs
clc
push
out
jmp
pop
mov
mov
push
test
adc
shlb
xlat
scas
adcb
out
add
add
xchg
test
mov
jo
cmpsb
aas
sub
into
or
mov
icebp
scas
and
lcall
mov
jl
in
mov
dec
sub
mov
shll
rcrl
cmc
push
xchg
in
fisubrs
mov
fdivrs
sub
add
pushf
scas
inc
push
pop
xor
ja
lea
out
jp
jb
or
push
and
fwait
les
mov
pop
adc
lahf
int
jmp
incb
jg
cmp
sbb
push
cwtl
aaa
adc
fadds
movb
and
das
mov
xor
sbb
xchg
push
mov
dec
jmp
fisttps
adc
stc
insl
jb
jg
cmp
mov
cmp
mov
add
jns
sub
and
inc
add
clc
cwtl
add
xorl
jno
xchg
inc
scas
and
dec
scas
pop
loop
sub
add
and
mov
les
rclb
subb
outsl
push
mov
rolb
mov
jecxz
cmp
stos
or
push
hlt
or
lds
stos
out
xor
pop
inc
lcall
cmp
loop
and
movsl
addr16
aam
int3
testl
shrl
dec
cld
cwtl
imul
addr16
sub
or
iret
mov
sub
pop
inc
mov
dec
lds
ljmp
in
popf
pop
mov
repz
push
sub
xchg
sub
mov
push
fnstenv
clc
sbb
dec
xchg
mov
xor
out
jle
int3
arpl
popa
sbb
jae
xor
adc
pop
lods
add
mov
cmc
mov
int3
mov
insb
aad
mov
push
xchg
call
mov
sub
mov
add
fs
cli
cli
cmp
jle
dec
xchg
or
mov
stos
cs
and
dec
jne
push
mov
jae
outsb
push
das
or
add
jp
outsb
cmpl
inc
test
sti
popa
dec
jl
xchg
movsl
dec
imul
pop
aad
add
lret
les
jg
leave
loopne
scas
mov
inc
mov
aas
sbb
sbb
shrl
cmp
sub
dec
js
aam
cwtl
sbb
dec
out
push
push
mov
pop
mov
xor
inc
xchg
and
or
jecxz
mov
dec
stos
ss
xchg
insb
sbb
lock
or
sbb
sbb
sbb
outsb
mov
call
pop
push
popf
cmp
sub
iret
sub
data16
mov
pop
lea
cmp
scas
in
mov
scas
jns
rcrl
pop
inc
add
gs
cmp
pop
lret
push
imull
sub
loopne
into
add
pushl
push
dec
pop
lcall
or
adc
dec
xchg
xchg
stos
outsb
movsl
dec
dec
sahf
cmp
aaa
popa
movsb
test
inc
xchg
ret
inc
pop
push
shlb
fs
push
xor
xlat
add
xchg
dec
test
add
sti
push
pop
sub
pop
pop
pop
and
sbb
addr16
jmp
jge
scas
mov
outsl
ficomps
lods
pop
mov
pop
xchg
inc
push
call
push
xchg
pop
inc
push
call
fwait
mov
cs
loopne
out
jne
add
add
sub
mov
push
fdivrp
mov
pop
push
cmp
jae
or
jmp
outsb
sbb
push
lcall
lds
arpl
mov
in
jnp
sbb
cli
jns
adc
sub
pushf
je
jecxz
jae
add
mov
inc
lock
icebp
jbe
lods
jbe
add
cmp
rolb
int3
out
push
icebp
fstpt
loop
mov
inc
pop
mov
std
cmp
std
mov
mov
push
jns
sbb
push
out
int
pushf
hlt
adc
stos
gs
stos
xor
xlat
mov
in
lahf
je
sbb
mov
push
cmc
adc
lods
lea
cmc
push
pop
mov
in
leave
icebp
ljmp
add
sbbl
sbb
sbb
inc
pop
insl
adc
das
repnz
sbb
cld
fidivrl
add
add
in
cmc
jecxz
add
and
push
jbe
cmpsb
in
insb
push
mov
xorl
xchg
push
iret
movsb
shll
and
enter
dec
and
cwtl
daa
push
pop
out
xor
lret
cmp
push
adc
adc
sti
xchg
repnz
adc
cmp
push
push
cmp
pop
test
add
sub
das
js
push
stos
xor
pop
kmovw
stos
fdivr
xchg
mov
xchg
inc
xchg
out
mov
imul
push
test
pop
mov
addr16
insb
cmp
and
roll
pop
std
jnp
push
aad
push
add
pop
aas
ds
cmp
sbb
lea
daa
mov
pushf
jno
inc
ret
push
imul
cmp
xchg
or
push
andl
mov
sub
lods
or
ss
cmpsb
out
xor
in
xchg
mov
xchg
adc
sub
mov
pop
popa
loop
fdivrl
dec
dec
pop
and
je
inc
imul
rcrb
or
sarl
push
jnp
js
sbb
sub
js
scas
pop
sub
dec
mov
sti
push
imul
and
mov
icebp
cs
push
sub
or
xlat
andb
inc
sbb
push
or
movsl
mov
pop
xor
pushf
int
js
rclb
lods
adc
add
xor
dec
mov
push
and
sbb
sbb
movsl
mov
out
xlat
mov
fisubs
rcl
pop
invd
stos
inc
add
enter
rorb
pop
inc
xor
pop
xorb
mov
or
jl
sub
sbb
sub
dec
inc
fwait
ja
loope
scas
dec
xchg
cli
popa
popf
xor
mov
rcrb
mov
out
cmp
or
xor
pop
lods
ljmp
lea
cmpsl
outsb
add
loopne
push
jno
adc
ds
push
xor
push
pop
push
mov
sbb
movsl
into
div
mov
inc
mov
ret
lcall
xchg
inc
imul
popa
subl
and
xor
cwtl
push
clc
adc
mov
popa
ss
test
pop
bound
mov
cmp
enter
push
xor
call
or
pusha
xchg
stc
and
sti
popa
mov
pop
nop
test
adc
out
fwait
xadd
or
jp
inc
dec
icebp
add
sarb
add
iret
mov
addr16
jae
lcall
jmp
fdivl
stos
les
inc
push
add
sbb
ficomps
mov
pop
rorb
lcall
jae
push
dec
dec
pop
icebp
cltd
mov
xchg
or
adc
push
movb
xchg
pop
adc
scas
int3
loopne
push
repnz
scas
jmp
iret
fstpt
fstpl
jmp
sub
push
mov
mov
imul
xchg
stos
jb
sub
xchg
lcall
and
or
mov
sbb
test
and
mov
fadds
sbb
data16
sub
mov
popa
mov
dec
sti
rclb
pop
out
adc
sarl
mov
ret
es
filds
cld
loope
pop
jae
je
sbb
cwtl
pop
imul
jge
int
and
pop
ljmp
mov
fcomp
mov
mov
push
mov
mov
mov
adc
sbb
iret
push
add
inc
sbb
mov
push
inc
xor
pushf
xchg
out
cld
ret
test
mov
movb
sbbl
push
adc
mov
ja
sbb
jl
push
stos
jno
cmp
sbb
int3
mov
cld
xchg
leave
in
fistpll
out
mov
mov
repnz
jo
pop
je
out
mov
xlat
pusha
push
test
sub
sbb
or
or
aad
lret
sub
xlat
rcrb
cwtl
imul
cmp
fisttpll
push
pop
pushf
in
lds
xor
adc
cld
jecxz
mov
jge
inc
adc
call
lret
std
gs
aad
int3
xor
stc
out
ds
pop
adc
lret
insl
dec
les
fldenv
scas
jne
sbb
sub
xchg
pop
sub
je
or
xchg
adc
pop
xor
pop
fwait
sbb
mov
testl
jb
ja
add
sub
sub
testb
adcb
ror
mov
ret
xchg
int
fdivs
push
push
or
je
fwait
sbb
pop
movsl
out
xchg
sub
movsb
js
jge
popa
aas
enter
test
mov
sub
jb
inc
and
ljmp
pop
sbb
dec
sub
add
pop
or
mov
ljmp
lcall
fcomps
fwait
sbb
dec
jne
testb
mov
mov
clc
fdivl
inc
ja
in
jbe
je
out
inc
pusha
xchg
cmp
int3
call
or
fcomp
xorw
dec
rorb
pop
cltd
pusha
jp
ret
push
into
imul
scas
xchg
push
sbb
outsl
out
and
in
mov
jb
pusha
out
in
fsubrp
cmc
pop
jno
adc
pushf
mov
jns
jnp
add
aaa
pop
jbe
imul
sub
cmpsl
in
jge
stos
push
out
aas
xlat
loopne
push
movsl
ds
push
daa
aaa
dec
push
xor
out
sti
aad
lahf
push
cwtl
dec
dec
push
stos
repnz
sub
stc
popl
inc
xchg
mov
add
mov
sar
mov
fmull
pop
fwait
mov
adc
xor
xchg
mov
jmp
add
push
scas
sub
mov
shl
lods
xlat
movsl
shlb
add
test
jnp
mov
mov
aad
das
pop
pop
addl
mov
mov
mov
ss
cmp
mov
mov
add
loope
xor
fwait
dec
dec
and
sti
lret
movsl
rcll
push
sub
mov
aaa
stos
popf
insb
adc
cmp
imul
xchg
lcall
outsl
dec
rol
push
mov
sub
add
in
xchg
les
and
lret
mov
mov
dec
test
addr16
outsl
xor
inc
cltd
lret
mov
jnp
mov
push
mov
xchg
pop
test
pop
inc
or
push
mov
mov
cwtl
dec
clc
std
mov
pop
push
adc
jmp
ret
dec
push
lds
mov
jge
or
pop
mov
sbb
ret
pop
adc
inc
pop
and
sbb
xchg
addb
jo
sub
jle
xor
insb
std
xchg
dec
jne
cld
xor
mov
je
pop
xchg
loop
test
mov
fsubrs
inc
je
in
xor
hlt
pop
push
mov
in
lock
xor
imul
pop
inc
pop
lcall
xlat
pop
lcall
or
lds
lahf
aaa
orl
iret
pop
sub
fidivl
xor
popf
xchg
scas
or
lea
aaa
pusha
data16
fistps
add
push
fstpl
dec
xor
addr16
cmp
out
cwtl
inc
stc
fsubl
add
dec
out
adc
aad
fistps
adc
xor
cmp
es
popf
or
xor
inc
in
rcll
cld
or
mov
std
lret
dec
mov
add
dec
ljmp
test
xchg
mov
fs
push
std
jmp
ret
push
cmp
fwait
mov
js
fidivrl
jecxz
mov
xchg
in
lea
repnz
and
fsts
xor
cmc
sti
dec
in
pop
xor
in
sahf
cmp
imul
lahf
pop
xchg
test
pusha
and
xor
sbb
mull
aad
sub
mov
aas
xchg
cwtl
ss
add
mov
adc
addr16
scas
repz
hlt
jnp
cmp
adc
push
movsb
cmp
inc
outsb
loope
mov
push
fisttps
in
jb
inc
adc
cmp
mov
andl
adc
jecxz
jmp
inc
stos
sbb
add
mov
jbe
dec
xchg
jmp
inc
lods
imul
or
clc
mov
add
jne
mov
or
daa
mov
push
mov
ja
jne
or
rol
cmp
sbb
outsl
and
les
shlb
dec
es
dec
ret
stc
jnp
cltd
mov
fistpl
bound
xor
cmpb
std
mov
fsts
sbb
imul
nop
adc
mov
lret
add
or
pop
cmpsl
pop
cmp
push
pop
in
xlat
push
mov
imul
dec
cmp
push
lahf
cltd
fsubs
je
xlat
pushf
pusha
jno
pop
movsb
sub
dec
fidivl
jnp
mov
cmpsb
or
mov
test
jg
clc
aad
pop
dec
add
sahf
test
push
cmp
xor
arpl
adc
mov
pop
repnz
xor
mov
or
mov
and
or
adc
lea
adc
mov
adc
in
xor
xchg
icebp
test
cmp
or
cmp
cld
mov
push
fsubrp
adc
jl
fwait
mov
out
cmp
lahf
sti
es
outsb
sbb
jo
dec
jns
pop
movsb
inc
mov
fidivrs
push
dec
aam
pop
add
pop
aad
xchg
xchg
adc
jmp
jno
mov
out
scas
es
xchg
xor
push
push
push
stos
das
rclb
cltd
cs
andl
push
inc
add
inc
cs
lock
sub
roll
lret
loop
fs
xchg
jecxz
nop
push
pop
fnstcw
rcrb
mov
aaa
rcrl
mov
fsubs
lea
cwtl
into
dec
aam
adc
jecxz
mov
fcoms
push
lahf
jae
xor
pop
cmpsb
jmp
mov
call
loop
call
xchg
int
adc
mov
sbb
adc
mov
adc
mov
and
sar
push
lock
lea
dec
ljmp
popf
xlat
xor
fcoml
dec
push
adc
cwtl
scas
xchg
push
scas
addr16
xor
scas
mov
or
mov
data16
push
jno
addb
lcallw
sarl
sub
into
dec
mov
insb
fdiv
mov
mov
mov
push
out
cs
fs
cmp
popa
and
dec
stos
movsl
cli
scas
gs
push
lods
mov
shrl
lcall
xchg
pusha
push
inc
cmp
add
ss
mov
mov
jge
lcall
data16
outsl
mov
mov
pop
and
fsubl
addr16
cli
mov
mov
dec
sub
or
inc
and
xchg
xor
popa
cmc
or
repnz
arpl
into
ror
adc
mov
ljmp
cwtl
jle
inc
jne
xor
jbe
push
stc
dec
lahf
cltd
in
dec
hlt
outsb
add
lock
or
inc
inc
jl
cmp
aam
sbb
sbb
xchg
cli
rcr
sbb
stc
or
dec
pop
insb
or
push
jns
dec
fdivrs
les
mov
lret
dec
sbb
ds
jl
int3
and
fiaddl
push
sbb
lcall
movsl
dec
jbe
mov
mov
clc
repnz
repz
fadds
cmc
scas
or
ror
push
popf
or
aam
or
xrelease
ss
pop
add
adc
out
aam
cs
mov
or
fucomi
outsl
fcoms
and
inc
call
shufps
mov
aam
sub
xor
movsb
lret
popa
adc
mov
clc
xchg
xchg
jmp
adcb
sub
sub
cwtl
or
xchg
mov
mov
leave
notb
or
and
int3
mov
inc
sub
in
or
xchg
outsl
jne
popf
hlt
mov
and
push
ret
fidivl
mov
push
mov
mov
dec
mov
daa
sbb
or
cwtl
mov
je
push
dec
mov
test
mov
or
mov
out
pop
je,pn
les
lahf
shl
push
mov
mov
outsb
xor
pop
push
test
dec
mov
cmp
mov
lods
or
mov
cmpsb
sarb
call
cmp
pcmpeqw
fimuls
dec
and
icebp
pop
outsl
ffreep
lcall
outsb
pop
int
inc
push
call
stos
push
xor
cmp
or
push
inc
inc
jle
scas
dec
xor
imul
lahf
cld
sarl
xchg
and
cmp
mov
movsb
jp
mov
repz
jge
incl
data16
cmc
push
and
or
dec
sub
fdivl
cli
sbb
mov
mov
imul
sarl
push
mov
sahf
mov
mov
mov
add
rolb
ja
and
icebp
cmc
cmc
mov
xor
mov
inc
popf
lretw
pop
jbe
mov
mov
or
and
jb
push
inc
in
sti
stos
adc
inc
out
pusha
add
sarb
rorl
jae
inc
nop
pop
mull
int3
xlat
in
iret
xchg
mov
inc
adc
data16
sub
push
js
mov
pop
or
inc
idiv
add
fbld
xchg
rcrl
fwait
lods
push
mov
lods
xor
sarl
ss
push
cmpsb
xchg
lods
xchg
mov
dec
clc
mov
adc
pop
adc
cld
cmp
aaa
sub
ja
pop
push
enter
xchg
mov
pop
mov
mov
hlt
xchg
scas
je
jo
movsb
ret
out
call
inc
jg
cmp
mov
mov
inc
aaa
inc
fwait
xchg
mov
and
xchg
sbbl
rcrl
out
xchg
inc
hlt
test
ja
inc
pushl
int
inc
mov
xchg
add
push
dec
cmc
fcompl
pop
xchg
jge
sub
dec
pop
enter
invd
sbb
ficoml
pop
mov
jecxz
cltd
js
pop
dec
outsl
lret
mov
mov
push
dec
inc
jg
js
aas
mov
inc
mov
movsl
enter
dec
icebp
test
lret
cmp
dec
and
pop
les
sahf
or
cld
ret
into
jne
les
in
lahf
or
movsl
inc
adc
cltd
pop
add
mov
dec
pop
xor
movsb
mov
repz
out
mov
loop
jne
mov
hlt
mov
stc
sarb
xchg
enter
inc
pop
fists
idivb
test
mov
push
roll
mov
adc
or
int3
addr16
pop
xchg
cld
mov
mov
mulb
ret
aas
pop
push
cs
xor
aaa
dec
pop
call
stos
jl
les
out
sbb
pop
jle
dec
std
sbb
mov
cli
xchg
push
popa
push
pop
or
and
hlt
sub
pusha
jae
sbb
mov
mov
mov
scas
or
ret
sbb
inc
mov
xor
imul
push
push
cmp
add
lcall
lea
mov
and
out
xor
adc
ds
mov
pop
push
out
adc
shrb
lock
jnp
mov
add
fnstcw
pop
xchg
add
fs
mov
loope
mov
sub
push
movl
mov
push
jmp
add
adc
das
jp
cli
scas
pop
inc
ljmp
dec
hlt
pusha
xchg
es
jl
arpl
call
call
xchg
arpl
rorb
jle
leave
xor
inc
and
sbb
fisubs
lods
test
faddp
inc
dec
jp
clc
pop
xor
xorl
mov
stos
jbe
mov
xor
imul
jge
mov
std
outsl
cs
jb
in
cmpsb
pop
add
dec
ret
pop
and
repz
xchg
cmp
sub
mov
insb
add
mov
out
popa
xor
xor
xchg
add
lods
push
incb
mov
pushf
mov
ja
call
scas
int
push
mov
enter
sub
sbb
sti
add
ljmp
add
sbb
inc
in
fldl
mulb
push
inc
xchg
adc
mov
dec
jecxz
jno
xor
inc
adc
dec
cmp
sbb
sbb
adc
loope
sti
add
cmp
testl
mov
lock
cmp
aas
pop
mov
pop
popf
movsb
cmp
outsb
lret
fidivl
cwtl
fistl
jns
test
push
push
popa
and
mov
cmp
jle
jne
sbb
xchg
ljmp
shlb
xchg
bound
lcall
mov
jne
sbb
push
xchg
or
jbe
and
sub
and
sub
sbb
xor
dec
mov
dec
aam
xchg
add
in
lret
je
rorl
pop
dec
push
cmp
jmp
pop
dec
or
jmp
stos
arpl
mov
fmuls
int3
mov
xchg
dec
cmp
icebp
jnp
add
cmp
push
inc
test
dec
push
outsb
imul
les
xchg
ljmp
xchg
xchg
stos
ds
inc
lods
cmp
sbb
pop
lock
push
ret
xchg
pop
out
mov
sub
push
or
sub
xchg
mov
sub
test
adc
les
jb
lea
adc
mov
mov
and
xor
cs
in
fdiv
rcr
ja
out
mov
inc
ja
sbb
in
repz
lods
mov
andb
cmp
push
lods
inc
or
sub
mov
sub
and
lret
fnstenv
sbb
loope
add
xor
pop
push
daa
decb
cmp
and
pop
and
std
aas
sub
cmp
jo
inc
mov
mov
push
mov
test
mov
std
lds
sub
fnsave
mov
out
mov
adc
mov
shr
and
xchg
lods
or
lea
inc
aam
sbb
lds
shrl
sbb
adc
adc
pop
pop
mov
mov
push
xor
scas
out
pushf
jg
rolb
iret
std
jno
sub
add
enter
pusha
rol
outsl
cmp
lock
or
and
mov
out
into
lahf
aad
pop
popa
lret
mov
sbb
add
mov
push
enter
dec
insl
insl
ret
pop
jp
ret
repz
jge
lods
add
loopne
add
push
iret
hlt
ja
scas
paddq
cmp
push
jb
jbe
ljmp
pop
jbe
imul
jmp
fdivrs
and
cwtl
inc
and
test
aad
lds
pop
pop
inc
sbb
jo
pop
test
inc
in
cmp
test
push
pop
dec
jle
mov
xor
or
ds
pop
mov
jge
add
xor
cmpsl
sub
ljmp
dec
pushf
movaps
movb
repz
int3
jns
repnz
test
inc
push
jns
or
outsl
ret
icebp
in
sub
jnp
pop
movsl
mov
icebp
sub
pusha
jg
icebp
push
pop
mov
fstps
add
push
stc
push
or
scas
or
imulw
repz
jge
pop
aaa
xchg
jmp
push
lods
jne
jns
cmp
test
pop
daa
sbb
cmc
lea
pop
iret
adc
inc
nop
outsb
lock
jne
xor
mov
je
lahf
pop
mov
mov
add
clc
or
test
push
sub
lcall
out
daa
subb
mov
daa
pop
mov
rcpps
pop
ja
mov
sbb
pop
pushf
pop
aaa
jbe
sub
sbbb
loope
lret
adc
sbb
cmc
aad
sbb
test
mov
push
and
ss
pop
push
push
pushf
xchg
xchg
mov
sbb
and
test
hlt
mov
cs
lahf
xor
dec
shlb
les
push
pusha
mov
sbb
add
jl
sbb
or
not
inc
jge
and
pop
jns
lret
xchg
sbb
push
in
fs
jl
add
or
je
sti
cmp
xchg
jns
into
das
add
cld
xorb
in
inc
or
inc
bound
pop
loope
pop
mov
leave
pop
shll
jge
cmp
push
lret
mov
sub
out
pop
movsb
push
xchg
sub
mov
in
test
and
lcall
ffreep
push
adc
andb
and
shl
cmp
mov
out
dec
fwait
sbb
sub
sub
cli
xchg
popf
pusha
jecxz
ds
mov
jmp
scas
pop
mov
jle
clc
loopne
je
dec
les
icebp
dec
jae
rolb
push
cs
mov
roll
std
add
stc
mov
sub
jno
inc
xor
xor
sbb
out
dec
addr16
in
and
and
lcall
stc
mov
push
ficompl
or
in
ds
and
push
in
dec
mov
sbb
push
mov
mov
jecxz
pop
push
rcr
sbbl
fwait
sar
fwait
xor
jp
or
pop
addr16
addb
dec
xchg
jno
inc
xchg
orl
xchg
pop
push
out
sub
adc
add
data16
jo
mov
pop
scas
mov
test
add
sub
xor
bnd
int3
jnp
or
cltd
mov
mov
repz
mov
xlat
inc
fsubl
xor
xchg
scas
orb
mov
add
push
mov
xlat
add
stc
push
nop
mov
pop
push
mov
sub
sbb
push
adc
jmp
mov
sbb
cmp
cwtl
mov
dec
mov
cmpsl
push
pusha
dec
inc
mov
mov
lahf
mov
hlt
xchg
add
and
into
mov
clc
sbb
push
mov
adc
subb
das
sbb
dec
sub
icebp
jnp
mov
add
int
push
pop
inc
nopl
rorb
test
sub
ror
shrb
enter
bnd
test
and
mov
xor
ds
stos
pusha
out
push
sbb
les
mov
mov
rolb
subl
cmp
xchg
sbb
dec
popf
jo
push
int
dec
int
inc
clc
js
sbb
cmpsl
ror
xor
into
shlb
and
adc
xor
sub
pop
dec
add
enter
inc
pop
int
cs
xchg
mov
sub
mov
adc
movsb
nop
int3
fs
sti
jno
jns
and
jns
lds
in
daa
jecxz
or
arpl
push
cmpsb
or
mov
scas
rorb
xor
pop
orl
add
aam
arpl
sahf
mov
shll
shl
out
jl
icebp
jb
icebp
lods
or
test
sbb
xorb
sub
mov
pop
andl
lods
and
adc
pop
int3
jbe
xchg
mov
dec
add
fs
movsb
or
lods
daa
jg
fisttpll
dec
jle
daa
js
xchg
cwtl
insb
dec
mov
inc
scas
enter
cmp
mov
sub
sti
cmpsl
ss
sub
stos
sub
jmp
push
mov
sti
jns
cmpsl
lea
and
mov
xlat
adc
xorl
or
stos
sti
sub
rep
jb
mov
inc
repnz
mov
adc
lds
sbb
cmp
ljmp
pop
and
stc
adc
cmp
outsb
ljmp
add
add
testl
call
dec
mov
xor
frstor
in
movd
pop
jb
sub
push
pop
adc
lahf
mov
divl
or
push
and
mov
dec
adc
dec
stos
mov
test
xchg
inc
andl
fcoml
lcall
jb
push
inc
aam
inc
jbe
repz
popa
scas
adc
ljmp
jp
lock
divl
add
jb
fiaddl
mov
jo
shrb
cmpsb
or
cltd
hlt
mov
divb
iret
jge
pop
or
mov
test
in
cmp
in
push
mov
push
cmc
jo
aas
lahf
ja
adcb
aam
adc
lock
dec
cmp
outsl
jnp
cmp
mov
xor
rep
mov
movsb
and
mov
dec
mov
daa
insb
mov
ror
repnz
mov
or
dec
jne
cmp
or
hlt
cmp
pop
dec
pop
adc
in
fwait
test
mov
sti
fsub
cltd
inc
mov
jno
loopne
addb
in
ss
jmp
pop
xchg
fidivrl
pop
gs
faddl
imul
inc
outsb
cld
cmpsl
inc
enter
dec
enter
lcall
sar
xchg
pop
cli
push
icebp
stc
lea
mov
mov
add
xchg
pop
test
dec
push
mov
and
shll
movsb
mov
stos
add
leave
sub
inc
sbb
clc
lock
jp
or
dec
out
clc
jae
data16
sub
inc
adc
jns
mov
int3
mov
adcl
xor
and
orb
lods
popa
fiadds
sti
gs
ljmp
es
ss
push
inc
mov
dec
movsl
inc
xchg
sub
adc
std
add
adc
xor
mov
sbb
sbb
xchg
pmuludq
sub
push
gs
lock
inc
insl
aas
int3
and
xchg
mov
jo
jns
dec
jle
scas
add
ss
sahf
mov
lahf
adc
cmpsl
mov
arpl
mov
cli
and
icebp
ret
pop
cmp
mov
das
cmp
in
in
fucomip
pop
mov
loopne
movsb
xchg
insl
sub
cli
push
ficoml
addb
mov
pop
add
or
daa
adcl
xchg
ss
das
imul
into
das
dec
and
pop
loopne
outsl
pushl
test
xchg
pop
jp
cmp
mov
cmp
es
xor
xchg
cmp
mov
dec
popf
movsl
push
jno
call
pushf
pop
ret
sub
dec
or
cmpsl
push
sbb
pop
test
adc
pop
sub
cmc
ror
rep
xchg
cld
xchg
mov
jns
adc
fwait
popf
in
or
add
mov
adc
add
or
xor
xchg
lods
clc
int3
and
xor
jb
lret
movb
pop
xchg
adc
lds
je
xor
rcr
sbb
xor
pop
jne
cmc
push
cmpsb
fidivrs
inc
popa
or
pushf
adc
mov
cld
aam
jae
push
inc
sub
xchg
jecxz
in
sbbl
fsubl
fsts
fiaddl
xor
xchg
mov
mov
mov
imul
push
sbb
push
add
in
jno
push
ds
movsbl
cmc
lds
lcall
shll
inc
push
cmp
jg
cmp
or
pop
xor
sub
fcomip
in
cwtl
fwait
pop
stc
inc
adc
dec
mov
sti
mov
dec
int
jle
dec
lret
cs
loopne
dec
idivl
stos
or
add
mov
dec
adc
stos
cltd
out
outsb
bound
xchg
or
insb
into
push
pushf
lret
push
loope
sbb
inc
dec
inc
scas
iret
fisubrs
in
int
dec
cs
pop
push
in
out
push
mov
pop
pop
and
jnp
xchg
shrl
push
or
imul
out
lods
shl
sbbl
into
push
fadd
push
outsb
mov
stos
sbb
add
lods
mov
push
adc
hlt
lahf
insb
push
adcb
pop
mov
push
jne
mov
leave
icebp
jmp
cmp
pop
add
mov
fldt
rorl
sbb
cmp
daa
dec
xchg
das
out
add
out
xchg
f2xm1
arpl
pop
ja
sbb
xor
movl
inc
and
jmp
sbb
scas
ss
lahf
mov
inc
push
cmc
jmp
and
xchg
outsb
adc
adc
adc
stc
or
ret
or
daa
dec
test
inc
ds
add
cs
sub
popa
nop
ja
test
aam
add
mov
pushf
rcrb
sbb
add
pop
push
aas
in
add
add
mov
out
rorb
in
leave
adc
xor
xchg
cwtl
sub
mov
mov
pop
gs
stc
loopne
scas
xchg
iret
jns
pshufw
xchg
mov
testl
cmp
sarl
js
insl
push
scas
cltd
repz
adc
adc
sarl
popa
shll
arpl
ja
loope
imul
scas
andl
ret
cld
add
jne
lret
sbb
and
mov
adc
cli
das
dec
pusha
das
jne
push
adc
xchg
mov
adc
xor
leave
insl
xchg
sbb
inc
sahf
icebp
mov
movl
xor
sbb
das
cmp
imul
cmp
pop
roll
std
cmp
cmp
in
sarb
mov
int3
fidivrl
pop
mov
aaa
fldcw
rol
jno
aad
and
xor
divl
push
test
jbe
mov
out
push
out
push
lock
ret
stos
cmp
test
movsl
add
push
xchg
jae
jle
out
loopne
gs
fildll
stc
fwait
xor
mov
jo
jecxz
rcll
fidivl
and
popa
pop
inc
mov
dec
mov
add
dec
xor
cmp
in
sbb
mov
insb
insb
sbb
stos
xor
sahf
jge
ret
dec
movsl
and
cmp
call
and
jge
adcb
jne
cmp
sub
lea
aad
out
mov
inc
js
inc
in
add
jge
push
pop
xor
jne
mov
out
mov
into
sub
out
add
js
outsb
add
scas
sets
mov
xchg
das
mov
test
sarb
xchg
dec
clc
in
cmpsb
fs
ss
add
xor
cwtl
das
and
cmp
int3
jne
rorb
test
div
stc
dec
jge
cwtl
bound
jno
add
sbb
mov
add
cmp
je
and
mov
testb
mov
shrb
mov
insl
add
aaa
int3
ret
cs
adc
mov
rolb
dec
add
ja
into
fidivrl
sbb
inc
sub
and
xor
aaa
fimuls
in
loope
lcall
inc
jge
movsl
jecxz
xchg
adc
xor
cmp
sbb
mov
jmp
test
daa
add
das
mov
jl
ss
pop
arpl
fnsave
push
aad
dec
cmp
jnp
fdivs
fsts
cmpsb
adc
xor
mov
js
adcb
imul
mov
pop
fstps
mov
out
inc
loop
in
pop
sbb
hlt
add
lods
sbb
jmp
loope
mov
cmc
aam
cmpsl
popf
call
jmp
xchg
daa
mov
sub
out
les
addr16
and
ret
inc
ret
sbb
mov
jns
call
lds
jno
test
mov
int3
inc
or
cmp
inc
jae
fsubs
fnstcw
adc
lcall
mov
mov
or
jo
lret
add
cmpsl
fs
or
xor
les
xor
ret
add
lret
jp
mov
xor
add
dec
mov
lods
ficoml
repz
fwait
push
lret
inc
pop
call
add
mov
lahf
dec
xchg
cltd
inc
pop
mov
nop
or
clc
xor
outsl
cmp
add
std
push
cmpsl
out
sbb
push
fisttps
sti
mov
mov
push
jbe
xchg
xchg
sub
jp
ret
cli
std
popa
cmpsl
cli
pushf
inc
rorl
sub
stc
test
ljmp
pop
std
stos
popa
popf
xchg
lahf
xchg
mov
jae
dec
jge
dec
dec
adc
dec
outsb
cmc
sbb
cwtl
fisubs
adc
cmp
add
mov
pop
inc
test
idivb
cli
cld
lret
mov
popa
sub
sub
mov
pop
mov
pop
mov
mov
in
adc
cld
orl
dec
mov
lock
mov
sub
and
lahf
movb
in
arpl
mov
shrb
inc
lock
xchg
add
cmp
shll
enter
jl
cld
sbb
mov
loopne
mov
inc
mov
mov
push
push
es
aad
push
mov
dec
xor
repnz
sbb
xorb
ret
les
and
lds
lock
stc
cmpsl
and
in
or
ss
mov
xchg
mov
xorl
andl
daa
mov
stos
or
dec
push
sbb
je
dec
subl
add
inc
enter
adc
jns
mov
push
push
jge
in
push
bound
sub
sub
pop
cs
test
add
mov
or
or
add
inc
es
jbe
pop
in
push
imul
adcl
ja
xor
jo
lcall
lock
in
mov
jnp
sub
xchg
xchg
push
adc
sbb
sbb
pop
repnz
mov
push
pop
movsb
outsl
iret
mov
loope
movsb
rcr
mov
in
pop
xchg
pop
push
gs
test
out
cld
xchg
in
ret
leave
insb
test
mov
mov
imul
loop
daa
in
xor
fistl
xchg
nop
ret
inc
push
cmp
fcomps
dec
xchg
imulb
bound
ljmp
pop
push
ja
leave
bound
sub
sahf
rcrb
in
jmp
lahf
insl
cmp
movsb
and
inc
mov
cmp
pop
enter
imul
js
pop
fidivl
jns
dec
mov
fisubl
jecxz
or
mov
mov
sub
sub
mov
jo
push
pusha
cli
mov
in
or
pop
jecxz
xchg
push
add
push
pop
in
popf
jo
pop
mov
aaa
stc
sub
outsb
clc
jno
add
stos
inc
sub
movswl
dec
inc
outsb
daa
mov
scas
mov
and
mov
into
pop
mov
gs
xor
push
sbb
fld1
jp
inc
fnsetpm(287
mov
and
mov
and
fdivr
sub
movsb
mov
fwait
push
stos
stos
aaa
ret
push
xchg
loopne
ret
inc
mov
lret
fists
adc
and
fucomi
fisttpl
adc
les
xchg
xchg
out
in
sub
mov
repnz
out
sarb
bound
and
rcll
inc
and
mov
mov
jecxz,pt
mov
fsub
jb
sub
lret
aaa
arpl
mov
lods
daa
pop
pop
cltd
xchg
sub
push
xor
imulb
push
int
jb
jae
push
pusha
in
and
fdivrs
sub
and
jae
cs
pop
stos
xchg
jb
mov
mov
mov
inc
pop
cli
pushf
jns
mov
jmpw
sti
jg
cwtl
aad
fcoml
xchg
pop
or
fdivrp
pop
out
cwtl
pushf
call
push
lods
lods
lods
retw
aam
mov
test
out
mov
rdpmc
jle
sbb
adc
ret
dec
push
out
pop
xchg
mov
ret
loop
pop
das
clc
lock
xchg
cli
xor
aam
mov
sub
push
xor
dec
jns
cli
fstl
test
sub
add
cltd
sub
lahf
loopne
lret
xchg
xchg
or
and
pop
lcall
test
jg
into
xor
gs
popf
adc
lods
xor
dec
jg
add
or
fwait
sub
xchg
xchg
loop
popa
push
daa
sub
jl
ret
call
fwait
push
insb
jno
aam
push
sub
inc
mov
aas
xor
inc
and
vpcomq
js
sti
sbb
nop
jmp
fwait
fs
cmpsl
in
sbb
imul
aam
pop
aad
push
push
jl
xchg
jl
popf
dec
or
xchg
les
sub
or
pushf
loopne
gs
jecxz
aas
and
push
cmpsl
arpl
mov
or
ficomps
cmp
pushf
push
popf
sub
mov
push
mov
jle
in
cltd
inc
mov
pop
xchg
in
lods
xor
xchg
std
cmp
xchg
and
sbb
cmp
or
mov
push
push
mulb
lock
aam
aas
ss
leave
and
mov
mov
mov
test
addl
sbb
mov
add
pmullw
push
jl
stos
mov
and
int
fistl
jb
sub
shl
or
xor
call
or
mov
jle
test
pushf
jge
mov
sbb
add
loopne,pn
adc
dec
lds
jecxz
mov
ret
mov
push
add
aad
mov
popf
jb
ja,pt
push
push
movsl
adc
test
js
lret
fxtract
sti
pushf
mov
add
dec
sti
divl
mov
ljmp
cmpsb
jb
lea
dec
fwait
add
pop
fcmovnu
int
mov
xor
bound
xchg
cli
cmp
fisubl
cltd
xor
cld
cmc
mov
push
int3
mov
and
je
aaa
adc
xchg
cltd
mov
test
in
sub
cmp
hlt
and
adc
jp
daa
and
dec
jge
ret
adc
movsb
xchg
movsb
stc
enter
jle
int3
fs
lcall
outsb
imul
mov
xor
testl
sbbl
outsl
out
lret
je
mov
lods
mov
mov
inc
xor
idiv
out
ss
dec
ret
mov
out
and
add
sbb
pop
push
pop
sub
iret
cmc
lds
stos
xchg
outsb
fcmove
fs
divl
and
call
aam
imul
mov
dec
fimuls
cmp
jl
push
das
pop
bnd
lods
and
mov
out
mov
jae
out
sub
test
jne
pop
les
movsl
jne
mov
xor
fstpt
jns
pop
repz
inc
mov
pop
cmp
pop
jno
gs
inc
imul
mov
test
push
insl
jo
insl
push
insb
fnstenv
popa
icebp
out
test
cs
lea
scas
fcompl
outsl
mov
pop
mov
std
dec
in
cmp
adc
or
pop
jle
add
mov
sbb
div
movsb
inc
pop
inc
cld
pusha
movsb
mov
stos
inc
jl
lods
inc
lods
clc
inc
clc
mov
xchg
mov
mov
or
loopne
lock
jl
cmp
jl
inc
outsb
xchg
xchg
mov
popa
mov
xlat
lods
test
xchg
hlt
decl
inc
jl
lock
mov
jmp
xchg
dec
out
pop
dec
dec
call
push
mov
jae
inc
sub
fsubs
es
sub
mov
jbe
lahf
jmp
insl
cmp
stos
stos
mov
in
in
jg,pt
es
in
pop
cs
sub
mov
mov
xor
mov
jp
mov
rcrb
pop
cli
les
adc
xor
shrb
dec
data16
repz
mov
dec
xchg
push
xchg
aaa
or
mov
add
fildl
sbb
jo
insb
ljmp
das
push
jmp
pop
leave
sahf
xor
les
push
cmpsb
fwait
mov
rcll
lahf
and
scas
movsb
out
and
mov
mov
mov
pop
pop
add
mov
inc
sti
cmpsl
sub
mov
sahf
push
sarl
cmp
sarb
or
out
test
push
repz
popa
inc
sbb
nop
rorb
addr16
or
mov
cmpsl
mov
in
fcmovnb
imul
xchg
imul
cwtl
cltd
adc
hlt
lcall
push
sbb
rol
fsub
sbb
cmp
push
mov
xchg
or
rcrl
mov
imul
cmp
out
jo
dec
mov
inc
cli
push
scas
lahf
dec
clc
loop
jecxz
sahf
cs
lahf
dec
xor
and
enter
mov
jp
push
inc
outsl
mov
xor
pop
test
sub
sub
nop
pop
mov
shr
pop
lcall
je
mov
xlat
jb
jmp
cmp
test
mov
addr16
fisubs
ss
fs
aam
push
test
mov
cmp
sbb
fbld
jmp
cwtl
es
std
xor
fistps
dec
repnz
inc
xor
inc
std
adc
adcb
mov
mov
xchg
rcrl
pop
add
inc
adc
insb
mov
iret
pop
add
sbb
sub
addr16
xor
stos
jns
scas
and
dec
mov
mov
push
shrb
scas
shlw
fs
insb
and
add
push
mov
movl
movsl
pop
push
xchg
xchg
cltd
adc
fisubrs
lds
iret
pop
push
xor
mov
lahf
into
ja
push
int
mov
lret
je
jbe
fisubrs
pushf
test
xorl
aaa
ljmp
ret
adcl
push
cmovae
xor
test
fldt
jg
push
mov
adc
sbb
mov
out
mov
lds
ja
xor
dec
scas
xor
adc
es
mov
test
int3
xor
mov
or
in
jmp
mov
dec
mov
sub
push
or
imul
loope
mov
and
ja
adc
jecxz
cmp
cmpsb
jmp
sub
xchg
pop
je
les
adc
or
mov
mov
iret
ja
stos
sbb
jae
insl
cltd
mov
jbe
imul
jecxz
in
jp
add
pop
daa
stos
push
fisubs
lahf
mov
loope
jne
out
mov
ret
lcall
push
jo
adc
sub
mov
mov
mov
rcl
adc
loop
pop
sbb
xor
xorl
lcall
and
insl
rolb
xchg
xor
negl
mov
jo
adc
repnz
dec
les
test
dec
inc
cmp
orl
mov
sarl
dec
lahf
movsl
rorb
inc
out
xlat
mov
push
sbb
lret
mov
xor
dec
add
std
push
add
fcomps
dec
inc
mov
mov
and
mov
adc
bound
movsb
push
xchg
adc
add
adc
and
xor
adc
add
jo
mov
lods
jae
add
push
lahf
mov
ss
ret
pushf
xchg
loope
sbb
ss
xchg
pop
xor
lahf
in
in
adc
test
adcb
jl
xchg
mov
cmp
cli
push
mov
pusha
cmp
adc
inc
mov
iret
fsubrl
fimuls
shll
mov
xchg
sahf
pop
in
scas
mov
out
leave
inc
mov
jmp
and
inc
rcr
or
loop
imul
add
or
inc
xchg
cltd
aas
push
popf
xchg
lea
enter
mov
ret
pop
jg
movsb
scas
pop
lret
in
bound
cmp
pusha
fstpl
stos
push
cltd
pop
cmpb
add
xchg
ds
stos
xor
jnp
in
ss
out
inc
adc
mov
aas
dec
cli
push
inc
sub
stos
out
inc
je
nop
sub
int
shl
pop
stos
and
dec
data16
fadds
push
push
in
dec
xchg
mov
jno
ret
jle
cmpsb
test
cmp
call
repz
pusha
lcall
in
test
jge
popa
loope
sarl
lock
adc
adc
mov
orb
in
call
imul
xchg
insl
scas
push
sahf
mov
jecxz
cmp
or
inc
sbb
fstl
pop
mov
dec
and
mov
stos
xor
test
cmp
cmp
inc
fsubs
sbb
ljmp
dec
sbb
dec
jg
sbb
shll
push
jg
xor
sub
out
sub
mov
inc
xor
push
push
daa
int
fcomps
inc
jge
inc
subb
mul
pop
push
xor
les
cmp
pop
jmp
inc
mov
inc
ret
das
pop
cs
mov
xchg
or
mov
cmp
movsb
outsl
arpl
ss
stos
into
jae
cld
or
dec
adcl
dec
aad
xchg
add
or
out
pop
loop
popa
xor
popa
cltd
movsb
xor
xchg
jne
ret
into
fistpll
fidivrs
add
or
sar
sub
xor
shr
insb
mov
scas
add
sub
repnz
jbe
fdivrs
movsb
sub
popf
mov
xchg
addr16
xchg
sbb
xor
stos
popa
add
push
int
add
ja
xchg
push
sbb
cli
ficompl
mov
adc
fcoml
mov
xor
imul
mov
jp
out
inc
fimull
adc
nop
sub
xchg
xor
int
out
cmp
cmp
push
xchg
lahf
pop
or
addl
insl
outsl
mov
or
popf
push
sbb
cli
dec
rclb
fstps
push
pusha
pop
rcrb
pop
in
inc
ljmp
and
subl
imul
fwait
mov
nop
xlat
in
xor
lods
ja
jl
pop
decb
lcall
or
outsl
pop
mov
pop
cmp
mov
out
outsl
ja
adc
test
sub
loope
jle
adc
andb
pop
out
and
xor
mov
mov
loopne
into
dec
outsb
arpl
pushf
push
rcr
cmp
push
sbb
jg
pop
sub
pop
xchg
rorl
xor
xchg
sti
xor
mov
add
adc
inc
fneni(8087
shll
or
out
loopne
cmpsb
stos
jp
xor
sub
andl
cmc
adc
pop
pop
sbb
inc
xchg
dec
xor
jne
xor
test
fdivs
sbb
adcl
sub
pop
inc
lods
xchg
fcomi
outsb
cmpb
pop
mov
stc
aaa
ds
fisubrl
je
push
adc
jb
cmp
outsl
push
xor
jp
xor
aaa
lods
push
lret
mov
movsl
adc
pusha
pop
mov
mov
addr16
inc
pop
or
shrb
jp
fsubl
out
jb
jl
cmp
negl
add
cmpsb
adc
popf
ret
or
mov
dec
sbb
or
sbb
cmp
jbe
test
xlat
or
or
test
lret
mov
in
in
jnp
mov
lahf
imul
jg
xor
xor
push
stos
xor
cmp
popa
fnstcw
cwtl
or
sbb
mov
push
nop
fadds
out
iret
jecxz
inc
xor
das
mov
add
inc
ljmp
mov
xchg
mov
or
bound
sub
or
aaa
lds
movsl
dec
jmp
pop
pop
mov
mov
jb
lahf
push
dec
xchg
mov
dec
or
testl
gs
movsb
jp
clc
out
inc
and
push
xchg
xor
mov
or
je
mov
idivl
fldenv
xchg
loope
test
rcll
repz
mov
or
cld
pop
mov
cmpsb
xchg
push
in
stos
testb
mov
cld
mov
xor
ret
ret
push
cmp
jge
xorl
addl
rolb
inc
or
stos
lock
push
adc
lret
mov
jnp
xchg
mov
pop
aas
in
add
cli
mov
add
loope
pusha
xchg
fwait
mov
cmp
inc
cmpsb
jno
into
xor
arpl
mov
xlat
fdivrp
jmp
repnz
add
popf
xchg
cld
ret
inc
jbe
pushw
inc
xchg
test
test
lds
cmp
andl
sbb
fidivs
or
sbb
hlt
xlat
int3
mov
push
jmp
mov
mov
inc
mov
jae
loope
addl
je
mov
addr16
mov
scas
outsb
push
pop
cmpsl
mov
ret
loop
dec
pop
dec
arpl
cmc
je
icebp
add
push
fsub
mov
int
inc
mov
ret
cmp
lahf
dec
sbb
ss
call
out
fwait
cmp
mov
ja
mov
jle
fsubs
cmp
mov
xchg
lahf
xor
fmuls
jb
add
jmp
test
in
fiadds
jbe
iret
popl
add
imul
sub
shll
daa
stc
outsl
or
cmp
xor
pop
xor
test
jg
bound
in
pop
int3
inc
fsubrs
pop
cltd
stos
decb
popa
lahf
add
fisubrl
int3
pop
popa
negb
mov
pop
or
pop
lock
add
in
cmp
pop
jge
call
call
jmp
ds
scas
fidivrs
or
dec
in
cmp
sbb
les
mov
jmp
or
mov
shrl
outsl
mov
ret
mov
repnz
xchg
leave
fistpl
mov
push
push
inc
jg
xlat
into
cmp
lds
mov
pop
mov
ljmp
fcomi
stos
mov
and
jmp
movsl
bnd
add
sbb
clc
cltd
cmpsl
fadd
sub
inc
inc
or
xorl
push
outsl
aad
pop
add
adc
lcall
mov
xor
pop
fwait
inc
jns
popf
pop
insl
pop
cmc
idivb
adc
repz
xchg
jmp
xchg
push
xor
xor
iret
rorl
or
iret
add
jl
xchg
mov
push
jmp
mov
ds
test
add
test
add
push
push
jae
mov
lcall
pop
mov
fxch
in
int3
fimuls
inc
in
insl
stos
gs
data16
stc
inc
cmp
dec
pop
or
mov
in
lcall
and
jbe
fwait
lods
and
in
xor
xor
clc
inc
add
movsl
movsl
cli
mov
fsubrp
sbb
sbb
ja
test
mov
dec
in
dec
cmpsl
add
movsl
mov
sbb
shlb
and
pop
sub
dec
ret
lock
nop
repz
call
mov
loope
mov
mov
lea
cmc
hlt
shlb
adc
jbe
xchg
cmpsb
aam
xchg
or
push
incl
lret
xor
xchg
mov
mov
xchg
shl
inc
fisubrs
push
rep
insl
dec
sbb
outsb
dec
xlat
jnp
cmpsb
sub
mov
test
outsl
rorb
jnp
imul
jle
test
bound
ror
xor
pop
xchg
lret
add
sbbl
sbb
jnp
push
sysenter
icebp
inc
push
push
jnp
dec
xchg
scas
cmp
or
movsl
xchg
rclb
ret
jne
rcr
int
push
mov
lods
push
jp
scas
cmp
pop
push
jns
out
cmp
ljmp
dec
aam
je
bnd
stos
and
repnz
jle
jg
addr16
cmp
popa
mov
mov
cmp
push
pop
fs
ret
fists
daa
xlat
mov
dec
insl
fidivrl
lds
pop
cmpsb
ds
and
clc
lcall
stos
cltd
cli
mov
adc
cmc
mov
in
mov
push
jae
hlt
lods
imull
adc
aad
and
sarl
jg
popa
sti
lock
cmpsb
or
clc
sub
add
adc
imul
dec
js
jnp
lret
mov
mov
pop
sti
vmaxsd
adc
mov
push
push
es
cwtl
es
fdivrl
push
in
cmc
sbb
pop
test
icebp
cwtl
imul
mul
pop
push
rclb
xor
mov
dec
mov
and
cmp
inc
in
loop
cmpsl
jmp
fdivl
mov
add
adc
mov
clc
push
xchg
or
fwait
rcll
adc
mov
jecxz
adc
mov
lcall
push
xor
sar
mov
add
fstpl
sahf
jp
inc
xlat
call
fcoms
cwtd
lahf
stc
ret
lea
addl
ret
aas
push
xor
mov
enter
push
repz
mov
jb
loop
push
insl
data16
iret
movsb
adc
push
scas
push
sub
cwtl
lock
and
cmp
jp
into
inc
stos
xor
pop
xchg
loop
ret
sar
out
out
xor
cli
sub
es
ret
shlb
dec
sub
cmpsb
and
xchg
push
adc
cld
push
mov
fs
cmp
add
jmp
pop
movsl
xor
aaa
mov
decl
clc
nop
imul
dec
fnstenv
jmp
and
mov
ret
push
add
or
adc
data16
push
in
andl
mov
dec
cmp
jb
mov
dec
and
subb
mov
int
and
repnz
arpl
mov
aam
sahf
or
mov
lret
lods
imulb
pop
pop
jge
mov
les
loopne
lahf
insl
bound
xlat
sbb
mov
cld
pop
testb
cmpsl
cmp
out
aas
jge
add
iret
mov
pop
sub
rolb
iret
int3
add
push
popa
mov
xchg
xorl
imulb
cmp
movsl
pushf
in
insb
roll
add
out
cmp
pop
jle
inc
push
scas
ss
fisubrs
inc
sbb
das
hlt
jl
and
ret
xchg
cmp
scas
sbb
clc
lock
dec
cmp
aas
scas
out
arpl
xchg
in
xlat
and
inc
ss
sbb
mov
shlb
jo
imul
pushf
ljmp
and
sbb
push
arpl
por
push
sub
lds
push
pop
xlat
cwtl
in
push
repz
mov
lock
pop
push
mov
pop
cmc
dec
loop
enter
pop
add
push
lret
shll
xchg
xor
lahf
push
in
pop
xchg
pop
adc
mov
pop
les
jns
push
inc
push
out
xchg
clc
inc
fnsave
sbb
or
lock
clc
xchg
mov
hlt
add
cmp
mov
lock
in
bound
arpl
inc
fisttps
push
pushf
fdivrp
jle
ror
xor
fldl
jno
xchg
aas
imulb
push
sarl
arpl
cmp
repnz
jae
shll
jnp
movsl
mov
sub
mov
std
xchg
adc
adc
adc
out
push
pop
dec
mov
mov
push
iret
gs
hlt
jecxz
xchg
mov
mov
pop
pop
mov
imul
mov
mov
push
push
cmc
cmpb
loop
xchg
mov
cld
and
aad
jo
ds
add
mov
push
and
mov
add
cmp
loop
or
dec
call
imul
rolb
leave
jno
cmp
xchg
mov
push
or
arpl
stc
xchg
jp
xlat
push
mov
mov
mov
mov
or
mov
test
push
dec
mov
lcall
xor
loopne
cmp
sub
jge
jb
push
loope
cmpsb
cli
ss
mov
xchg
ficomps
mov
add
cmpsl
call
fwait
ljmp
movsl
lods
push
or
sub
addr16
mov
cwtl
mov
stos
mov
mov
cld
cwtl
adc
lods
shlb
xchg
jb
lcall
ficompl
mov
jo
push
pop
xor
fsts
cld
scas
adc
cmpb
adc
loope
inc
in
cmp
sub
insl
add
adc
pop
and
and
mov
pop
es
mov
jge
mov
in
cmp
cld
or
loope
out
xor
outsl
in
mov
add
fimull
jge
mov
incl
and
fiaddl
sub
movsb
sub
stc
xchg
fwait
daa
fcomps
pop
sub
idivb
out
ja
sub
sub
leave
in
out
lds
mov
and
jl
sub
fs
adc
je
ja
adc
sar
xchg
xchg
add
add
cwtl
stos
inc
cli
sar
xor
adc
sub
dec
jle
xor
pop
xor
or
push
add
mov
pop
cmp
pushf
cltd
movsb
shlb
out
in
in
mov
cmp
inc
divl
inc
shlb
add
ret
fstp
pshufw
sbb
cmp
pop
lods
cli
add
jne
subb
mov
push
testb
add
shrb
jp
lods
rcrb
loope
or
push
notw
fsubrp
fs
in
pop
dec
xor
jne
xchg
push
push
xor
inc
std
imul
insl
xchg
xor
cmp
adc
movsl
jge
and
dec
lds
add
repz
lock
imul
dec
push
pop
aas
fsts
jl
push
jbe
jae
push
fmuls
mov
ljmp
mov
sbb
pop
sbb
aas
ja
enter
mov
pusha
jns
mov
dec
xchg
cmpsb
shl
popa
adc
dec
dec
rcr
call
loope
mov
shr
fldcw
mov
in
pop
and
mov
sub
mov
fcompl
cltd
fisubrl
or
mov
rorl
cmpl
add
xchg
cli
cmpb
lahf
inc
jle
mov
push
lods
jno
das
xorb
or
hlt
decb
decl
std
cmpsl
fwait
pushf
sahf
cmpb
sbb
push
mov
lods
shrb
sub
jbe
push
adc
cltd
out
mov
imul
sti
shlb
xchg
jo
dec
mov
and
cmp
aam
arpl
or
and
nop
dec
sub
jg
ljmp
and
add
inc
or
idiv
and
lret
repnz
hlt
push
icebp
adc
lahf
lods
iret
cld
jnp
pop
lods
nop
shll
add
sbb
mov
cli
stos
test
in
mov
or
or
inc
xchg
scas
cmp
test
fldenv
cmove
ret
ret
inc
and
aam
mov
stos
pop
clc
cwtl
addr16
test
fistpl
or
aaa
sti
rcll
cld
jbe
cmpsb
leave
filds
ror
std
out
xchg
lret
arpl
clc
dec
push
andl
jecxz
nop
inc
xchg
fmul
int3
inc
pop
ret
push
iret
clc
addr16
mov
hlt
dec
adc
cmp
jecxz
add
inc
in
xchg
leave
jbe
xlat
in
arpl
xchg
sbb
mov
fsubrs
push
addr16
fstl
daa
inc
mov
dec
inc
add
hlt
lcall
fwait
cmp
mov
adc
inc
aaa
cmc
psraw
fsub
inc
nop
iret
pop
das
or
jns
adc
ja
stc
mov
inc
stc
pop
push
sbb
pop
out
dec
add
mov
cmpsb
push
leave
ds
or
sub
lea
lret
sub
movsb
jns
clc
xchg
push
aad
outsb
mov
incb
sub
sahf
and
rorl
subb
sahf
and
pop
sti
inc
mov
movsl
adcl
mov
in
mov
pop
or
dec
or
and
pop
ja
sbb
lods
notl
cmp
jge
fdivl
jl
mov
or
adc
daa
push
sarl
jl
loopne
lcall
xchg
push
jge
pop
sar
mov
rcrl
xchg
push
jae
shlb
lcall
int
mov
push
imul
push
ss
scas
mov
sbb
push
lock
push
in
popa
push
or
notb
dec
or
es
sbb
ss
jno
xchg
out
add
inc
outsb
cli
or
sub
enter
dec
jp
and
rorb
cmpsb
mov
push
or
ljmp
fs
adc
mov
sbb
ljmp
mov
sahf
push
call
sarl
and
pop
test
jmp
jns
cmc
sub
sbb
or
adc
popa
ja
sub
fcmovnu
jo
aas
pop
cmp
add
hlt
mov
sbb
in
cmpsl
sbb
das
cld
in
mov
ffree
dec
ret
scas
fidivrs
lock
dec
sbb
sbbb
fists
pushf
pop
nop
nop
jecxz
insb
lods
push
movsb
jno
xor
dec
test
rolb
imul
push
imul
xorb
shlb
nop
pop
mov
adc
cmc
in
sub
ret
sbb
fnstcw
lds
mov
sub
and
and
notl
lret
clc
ret
sub
test
aaa
bound
xchg
inc
inc
pop
mov
test
jle
adc
cmpsl
add
in
mov
fwait
and
mov
cmp
push
imul
jmp
sbb
popl
xchg
jmpw
jecxz
sbbb
pop
xchg
dec
sahf
cmc
dec
lret
xorb
sbb
jno
je
shlb
addl
sti
das
push
stos
jl
jo
sub
sbb
or
cli
aas
inc
mov
sar
cmp
psrad
mov
gs
mov
imul
xor
mov
xchg
int
fidivs
and
adc
call
hlt
push
insl
call
pushf
or
mov
dec
pop
das
cmp
out
scas
enter
andb
fs
outsl
adc
inc
shrb
call
in
jmp
and
cmpl
int3
xchg
les
sub
das
mov
stos
ja
mov
push
lock
sbb
out
mov
jb
je
fdivr
fwait
adc
pushl
cmp
or
mov
mov
stos
mov
sbbb
bound
push
pop
mov
inc
mov
in
mov
add
dec
mov
movsl
mov
loop
sbb
sub
add
sub
mov
loope
sub
fisttpl
cmp
push
jecxz
cs
mov
pushf
addl
jle
xchg
mov
loop
clc
loopne
push
push
cwtl
inc
mov
mov
mov
icebp
fisubs
add
and
arpl
jbe
jmp
push
jnp
sub
shlb
out
ret
lock
les
xchg
push
or
sbb
insb
mov
and
add
mov
push
arpl
sbb
lods
xchg
in
sbbb
dec
xlat
pop
mov
dec
adc
pop
mov
mov
flds
push
mov
cs
aam
loopne
push
pop
pop
and
mov
jmp
or
jb
mov
add
pusha
xlat
mov
insl
jg,pn
leave
mov
jnp
adc
cmp
mov
movsl
sbb
xor
xchg
sbb
iret
and
inc
jae
xchg
jmp
jl
add
cmp
and
inc
or
sbb
or
sub
sub
aas
add
xchg
jo
test
sub
test
fpatan
out
ss
shlb
fsubl
pop
inc
sti
adc
pop
mov
imul
iret
stc
out
pusha
cmp
sbb
aaa
shlb
push
outsl
js
pop
mov
divb
or
push
sarb
insb
mov
mov
add
inc
icebp
rorb
scas
xchg
imul
cmp
ret
inc
stc
in
adc
dec
mov
sbb
lods
inc
and
add
xor
loopne
add
stc
pop
mov
lcall
data16
in
cmovs
loope
in
fwait
sbb
shlb
movsb
jne
dec
aam
pop
mov
xor
outsb
int3
xor
xorb
dec
inc
push
dec
pop
outsb
mov
jmp
add
aas
pop
mov
adc
pop
addr16
ret
fwait
subl
dec
jg
cmp
dec
add
mov
sbb
add
inc
std
cvtps2pi
imul
loop
inc
mov
sbb
scas
push
sbb
pop
insl
push
fstps
sub
xor
outsl
push
out
push
push
rcl
push
inc
adc
mov
movsb
stc
into
xchg
jne
sub
xor
jl
or
add
mov
pop
sti
ds
dec
jno
stos
push
add
sahf
push
xor
pop
fnstcw
dec
inc
sbb
negb
aam
jno,pn
dec
lock
stos
mov
ljmp
add
mov
ret
adc
mov
pushf
das
jle
push
test
cmp
mov
and
out
fistl
test
out
mov
dec
iret
push
inc
les
adc
push
xor
xlat
jnp
pop
pop
aaa
add
test
test
xlat
es
loopne
adc
dec
mov
pop
imulb
stc
mov
cmp
cltd
les
pop
xor
insb
jge
jecxz
or
push
stc
aam
outsl
xor
hlt
popa
test
mov
testb
inc
sub
pop
loop
repz
add
jmp
adc
xor
insb
jne
test
inc
popl
clc
add
loopne
jne
mov
test
repnz
leave
arpl
cmc
shlb
add
jns
shrb
test
stos
bound
js
pop
movsl
sbbb
lock
mov
test
dec
mov
dec
loopne
shlb
insl
mov
push
ret
sbbl
adc
jecxz
pop
leave
pop
mov
mov
divb
fnclex
shlb
sub
jmp
xchg
mov
subb
lds
sub
pop
jecxz
call
insb
fs
or
push
in
xchg
aam
xchg
pop
pop
mov
jmp
std
mov
mov
jns
mov
push
sub
push
shl
jp
push
movsb
inc
lcall
xchg
sbb
cli
lods
stos
inc
mov
jmp
data16
fs
lods
mov
jb
rorl
sub
pop
fsubl
fiadds
xchg
rcrb
js
add
and
cld
adc
andl
lahf
inc
addr16
in
cmp
lds
dec
inc
sub
adc
dec
jo
mov
xchg
cmp
mov
std
jl
mov
push
jo
add
adc
xchg
mov
popf
int
out
iret
loop
sub
cld
jae
add
sbb
lods
mov
sub
cmp
cwtl
jnp
nop
es
mov
mov
mov
scas
mov
add
andl
mov
dec
and
sub
mov
stos
outsb
in
dec
and
jmp
push
jge
push
int3
bound
bound
and
xchg
mov
dec
rcr
rcrl
scas
xor
scas
sbb
bound
pop
pop
pop
dec
enter
pop
push
in
jnp
dec
jl,pn
cmp
out
add
pop
insl
add
in
repnz
xchg
adc
inc
mov
pop
and
shlb
mov
repz
jl
mov
push
xor
inc
popf
fisttpl
and
jb
dec
mov
jmp
cmpsl
inc
adc
or
ja
push
fcoms
lods
jne
lret
or
std
pop
mov
sub
sti
add
sbb
dec
outsb
pushf
aaa
mov
inc
mov
aad
push
cmp
push
rorb
inc
jl
fwait
sbb
aas
dec
xchg
mov
fs
dec
lods
add
adc
dec
push
adc
xchg
aaa
mov
dec
ss
rcl
add
mov
mov
out
and
add
rolb
in
mov
mov
cmp
mov
ss
repnz
ret
push
mov
andb
jo
mov
sbb
mov
out
sahf
pop
out
dec
jmp
movsb
insb
and
push
ficomps
xor
mov
adc
sub
je
adcb
les
loopne
xchg
addr16
lea
icebp
push
xchg
cs
loop
notb
sarl
push
pop
push
insl
sbb
inc
jge
idivl
jno
push
lea
and
push
negb
pop
mov
hlt
notb
add
dec
and
mov
xchg
dec
sbb
cmp
lock
hlt
jle
cmp
lahf
lds
dec
aam
sbb
js
cmpsl
and
lcall
dec
push
fiadds
js
jg
inc
sbb
adc
shll
and
dec
mov
push
push
inc
inc
xor
sub
cld
mov
je
outsb
jle
push
adc
inc
cld
push
mov
push
pop
out
hlt
sbb
cmp
popf
shr
push
test
enter
adc
es
xchg
lret
shll
mov
cmp
movsl
in
xchg
push
jo
leave
fwait
and
fidivrl
pop
shlb
popa
mov
mov
mov
adc
in
sbb
sub
add
ret
mov
dec
fisubl
js
cs
les
loop
decl
jo
mov
mov
fs
push
jae
mov
in
in
xchg
jge
xlat
or
jnp
mov
mov
arpl
cltd
popa
cmp
xor
add
mov
bound
cmp
or
stos
out
shl
loope
test
lock
stc
fdiv
and
sbb
dec
mov
jb
scas
das
cmp
xchg
rcrl
xchg
or
mov
stc
xchg
fisttpll
insl
pop
jae
push
cmc
pmuludq
sahf
mov
push
mov
cmp
push
ss
in
mov
xchg
xchg
add
insl
push
mov
flds
jle
inc
pop
flds
jle
xor
loope
rorb
das
push
ds
mov
out
insb
ret
mov
add
out
bound
cmp
in
pop
push
xor
int
xchg
sbb
jnp
stos
fcoml
pop
inc
sbb
nop
mov
fnstcw
ret
mov
and
pop
bound
enter
lret
sub
adc
xor
dec
push
add
xchg
sub
adcl
adcl
mov
insb
dec
outsb
mov
cli
add
aam
repnz
jmp
andb
js
mov
out
jecxz
sbb
loop
xchg
jo
push
sahf
pop
cmp
pop
std
hlt
mov
push
pop
jno
lret
cld
insl
inc
pop
xchg
add
jl
adc
mov
push
and
pop
mov
aad
pop
cld
sti
push
mov
movsb
fstps
call
xchg
out
in
sub
inc
loopne
sbb
mov
push
adc
pop
iret
or
jecxz
or
mov
data16
adc
jmp
repz
insb
leave
add
and
xchg
cmpsl
mov
es
fcmovne
scas
cli
inc
movsl
mov
shll
xchg
push
mov
add
sbb
es
movzwl
enter
out
fcoms
icebp
and
mov
jns
sub
mov
jmp
mov
sahf
arpl
sbb
cmpsl
pop
popa
jp
test
stc
jg
or
jl
cltd
jle
sbb
orl
lahf
cmp
jle
xchg
mov
ss
and
push
mul
mov
test
push
test
loope
in
nop
out
pop
test
ret
pop
loopne
xor
jge
pushf
dec
stos
fwait
mov
aad
dec
arpl
mov
mov
lock
lods
xor
and
mov
push
inc
popa
mulb
gs
xchg
sbb
movsl
cmp
aad
pop
mov
push
adc
mov
fistpll
jmp
outsl
test
imul
push
or
or
and
xchg
mov
stc
lcall
mov
sub
out
arpl
pop
lods
push
dec
dec
ja
pusha
popa
adc
xor
out
sbb
loop
aam
sub
and
test
out
ss
inc
sub
xor
sub
jno
divl
adc
and
iret
jo
mov
mov
dec
mov
xlat
sbb
add
sub
movsl
sub
sub
fucom
jne
cmpb
inc
fildll
sbb
sahf
inc
xchg
aad
inc
mov
imul
or
xchg
in
loopne
stos
sub
aas
dec
jbe
inc
dec
subl
andl
rcl
pop
out
mov
or
rorl
sar
jmp
les
xchg
sub
push
outsb
pop
dec
jp
cld
ret
loop
sub
pop
mov
idivb
push
mov
push
xchg
cmpsb
and
jmp
dec
push
inc
cld
push
push
xor
cmp
inc
cmpsl
hlt
mov
or
jle
mov
adc
out
enter
enter
sbb
das
push
jno
aas
push
std
and
inc
out
dec
xchg
movsl
test
cmc
sbb
jmp
push
out
mov
sub
sahf
mov
mull
xor
jl
loope
out
stos
sub
pop
sub
out
lahf
add
jp
xor
xchg
xchg
xlat
jp
mov
sti
scas
nop
dec
push
mov
scas
int
or
mov
pop
das
xor
sbb
xchg
shl
sub
or
cli
push
adc
xchg
rolb
xchg
pop
cmpsb
adc
enter
stos
mov
stc
clc
inc
cmp
shlb
mov
fmull
gs
dec
inc
pop
gs
and
xchg
dec
jmp
xchg
out
lahf
jae
in
movsl
call
and
lea
fistl
add
push
dec
mov
inc
int
inc
imul
or
mov
loopne
inc
push
repnz
test
jecxz
jno
jp
and
insb
mov
or
bound
and
call
dec
mull
out
xor
inc
pop
xchg
jmp
outsl
jmp
or
sbb
adc
int3
ror
shrb
pushf
jmp
shrb
xor
clc
insl
stc
movsl
pop
pushf
mov
int3
mov
aas
out
pop
adc
in
inc
ljmp
in
cmp
mov
mov
pushf
dec
inc
imul
stos
repnz
adc
and
dec
fildl
xor
lds
xchg
xor
cmp
mov
cmovp
pop
jns
mov
test
fbld
or
sti
popa
pop
mov
cmp
and
sbb
xchg
cli
lahf
mov
mov
dec
sub
icebp
mov
daa
and
or
nop
test
mov
mov
add
lods
shrl
jns
push
jnp
testb
cmpsb
xchg
ret
push
sbb
push
pop
and
int3
popa
dec
movsb
add
lahf
mov
sub
test
cmp
int3
sub
pop
add
loope
jp
incl
cli
push
fbstp
push
cli
aad
inc
aad
scas
fbld
sbb
push
cmc
sub
gs
mov
cld
cli
cmp
out
testl
fcmovne
ret
loope
testl
testl
jae
jl
sbb
lods
push
add
jo
or
nop
push
sbb
jecxz
push
aad
int3
fisttpl
xor
inc
out
jb
mov
movsl
pop
aad
push
aam
mov
xchg
sahf
andps
lret
mov
sub
loope
or
push
jo
mov
je
cmp
out
or
fwait
jle
jecxz
sub
xor
or
test
hlt
cmpsl
in
mov
cmp
xor
add
mov
sbb
cmp
sbb
mov
sbb
jp
sbb
cmc
inc
das
lret
rsm
dec
sarb
lock
xor
add
andb
paddusw
or
mov
inc
popa
add
xchg
cmpsl
jo
jge
das
sub
lea
mov
movsl
dec
xlat
adc
xlat
jg
out
jp
inc
cmpsl
mov
fildl
daa
into
loope
cmp
pop
push
mov
or
movsb
rorl
or
test
mov
jmp
pop
add
pushf
hlt
jae
xchg
ret
pop
ss
scas
adcl
pop
into
sbb
sbb
dec
movsl
out
fadds
pop
cmp
loope
addl
jp
jl
or
jecxz
mov
inc
cmp
push
and
mov
xchg
cmp
xchg
inc
or
cmc
movsb
sbb
pop
cwtl
hlt
ffree
pop
flds
xchg
push
and
ret
insl
mov
cmp
mov
ffree
lea
mov
es
aad
pop
xor
inc
in
js
jecxz
movsb
std
mov
push
and
js
imul
cmpb
mov
dec
inc
jecxz
inc
scas
pop
mov
mov
das
rcl
jo
jmp
pop
dec
cli
xchg
daa
cwtl
jle
dec
add
push
in
mov
rcr
jne
insl
jno
push
pop
rcl
mov
bnd
out
mov
pop
push
aaa
lsl
add
and
ret
ds
mov
shrl
popf
add
jno
push
nop
pop
in
inc
mov
or
xlat
jp
out
or
xchg
subl
sbb
cli
sti
inc
push
loope
adc
sub
loopne
and
ds
add
cmpsb
scas
mov
jae
lahf
sbb
icebp
mov
sub
scas
data16
aas
inc
test
lcall
fiadds
cmp
mov
hlt
enter
adc
mov
gs
mov
pop
test
xchg
mov
push
orb
stos
pushf
pop
xchg
pop
mov
dec
test
adc
shlb
faddl
mov
sti
stos
add
ds
jp
rcll
or
pop
out
xor
ret
xor
repnz
jo
pop
icebp
mov
aaa
inc
mov
jg
xchg
out
mov
sbb
js
outsb
cmp
lock
xor
in
add
stc
inc
mov
xchg
roll
pop
add
push
pop
sub
mov
mov
or
xchg
pushw
pop
mov
mov
not
xchg
in
sub
add
es
xlat
fdivrs
cmp
cmpsb
les
imul
pop
jmp
mov
iret
jnp
insb
sbb
cmp
mov
out
cli
xor
adc
dec
mov
dec
push
jmp
sbb
mov
pop
stc
mov
and
sar
repnz
xchg
fistps
inc
mov
xor
shll
je
out
stos
nop
jge
jno
int
adc
adc
in
cmp
push
push
dec
mov
pop
jmp
inc
mov
enter
xchg
push
push
sbb
pop
xor
sti
push
notb
cmp
sub
popa
jle
or
sub
inc
lahf
sahf
jno
in
cld
pop
fsts
aad
push
sbb
popa
add
loopne
xchg
jle
dec
xchg
mov
inc
scas
enter
mov
and
push
dec
movsb
jl
xchg
cmpsb
and
xchg
xchg
xor
gs
mov
call
dec
xor
mov
mov
sti
fiadds
lret
je
xchg
lahf
add
cmp
pop
es
mov
notb
push
loope
mov
cmp
fwait
rsm
repz
mov
mov
in
push
inc
std
dec
ds
cmpsb
mov
repz
mov
push
lret
aaa
fcompl
xchg
nop
jo
and
aam
jmp
pop
adc
in
mov
mov
push
out
adc
test
test
push
mov
fmull
xor
leave
ljmp
sarl
sub
jae
inc
pop
xchg
test
xchg
sete
fimuls
lds
xchg
sub
data16
push
addr16
repz
inc
dec
das
adc
mov
jge
fwait
rolb
adc
sbb
scas
or
xchg
lret
into
mov
iret
out
cwtl
xchg
ja
lds
les
adc
rcr
cmp
cmp
and
dec
in
sub
pop
filds
and
inc
lea
jl
popf
adc
cmpsb
xchg
mov
inc
cmp
test
lock
or
adcb
sahf
popa
movsl
mov
pop
sbb
sub
and
out
movsb
mov
xor
or
mov
subb
insb
mov
mov
int
dec
mov
scas
pop
mov
xchg
shl
push
mov
pop
pop
in
inc
rcrb
push
cld
pop
cwtl
sbb
sbb
cmp
or
mov
jb
cltd
cwtl
fiaddl
std
or
cmp
adc
cmp
out
pop
push
push
mov
sub
test
lods
pop
test
adc
hlt
push
xor
sub
cmp
and
push
cli
jae
or
mov
push
je
popa
std
imul
add
xor
and
xchg
je
insl
mov
push
aaa
aaa
orl
xor
cmpsb
lret
js
hlt
nop
xor
inc
jno
push
jae
insl
test
mov
inc
fdiv
fs
iret
imul
in
mov
faddl
pushf
popf
dec
dec
dec
stos
pop
bound
lcall
test
jl
gs
lret
bound
or
fistps
iret
push
inc
cmp
jmp
sub
mov
daa
pop
subb
xor
push
lcall
mov
mov
hlt
cmc
mov
push
xchg
inc
jp
leave
stos
enter
dec
lds
dec
leave
adc
test
test
mov
adc
popa
sbb
cwtl
aaa
bound
sub
pop
fisttpl
test
lea
fwait
ret
test
add
inc
push
pushf
push
mov
sbb
fs
fimuls
xchg
stos
inc
dec
pusha
xor
cmpsl
push
push
mov
scas
dec
gs
fdivl
and
je
clc
dec
push
and
repz
cmc
cwtl
push
rorb
xor
jg
mov
cmp
xorl
pop
or
inc
arpl
loop
ficomps
push
add
jno
and
fadds
jno
ja
push
fsubrl
cmc
stc
psubsw
cmp
pop
inc
mov
xchg
movsb
shrl
pop
stc
jae
adc
into
xor
xchg
xor
dec
repnz
pop
leave
pop
lea
ljmp
inc
sbb
sbb
inc
add
push
push
or
mov
aad
mov
xchg
iret
filds
mov
mov
movsl
mov
test
adc
stos
inc
fidivrs
pop
gs
fwait
push
cmpsl
xor
adc
stos
sbbb
mov
dec
xor
lahf
jge
jbe
mov
fstps
cld
inc
cwtl
mov
mov
or
inc
divl
scas
sahf
or
sub
ja
cmp
mov
cmp
dec
rcr
es
mov
dec
test
pop
dec
iret
test
test
insl
xchg
or
cmpsl
fisubs
daa
inc
push
data16
adc
adc
and
testb
sbb
in
jp
aas
inc
mov
push
and
orl
js
loop
jle
iret
pop
rcll
ficomps
cmp
xchg
fwait
dec
loopne
push
adc
imul
mov
iret
push
mov
push
mov
pop
add
imul
fucomip
push
in
dec
cmp
cltd
and
inc
push
xchg
ja
dec
mov
xchg
ljmp
push
ret
pop
xor
adc
cmp
jg
rcrl
and
mov
xlat
mov
push
int
roll
stc
jmp
int
push
int3
lea
lods
adc
mov
movsl
pop
imul
test
inc
xchg
or
dec
and
shlb
xchg
ret
cmpsl
xor
lret
mov
inc
jmp
jg
push
dec
test
push
sbbb
lock
cmpsb
push
or
xor
sub
test
xchg
mov
mov
repnz
mov
aam
call
xchg
fisubrl
outsb
addr16
pushf
call
push
ljmp
add
push
jae
out
flds
scas
sahf
pushf
push
and
jne
mov
gs
shll
dec
inc
mov
icebp
mov
cmp
xchg
push
cmp
cmpsb
movsb
test
xor
sbbb
jmp
out
into
loopne
das
add
sub
arpl
sti
lcall
inc
push
pop
out
iret
lret
sti
dec
fstpl
jle
xchg
jmp
push
and
pop
sbb
jno
or
es
jno
test
inc
and
es
hlt
enter
xor
mov
add
shll
cmpsl
push
xchg
or
inc
scas
in
push
mov
mov
cld
adc
test
jmp
loope
pop
pop
stos
mov
sahf
cmpsb
xchg
cwtl
pop
fstl
aad
inc
push
dec
jp
scas
xchg
jno
or
inc
loope
push
pop
add
stos
jnp
pop
sub
ret
mov
pop
adc
mov
cmp
lods
lahf
ret
adc
cmpsl
das
mov
es
push
mov
fs
pop
and
cmpsb
pop
cli
cmpsl
jmp
cmpsb
xor
mov
mov
int3
sbb
scas
hlt
mov
or
bound
lods
mov
fwait
in
mov
pop
pop
mov
loope
xor
pop
cmpsl
mov
lock
adc
xchg
outsb
lods
xor
shll
fwait
into
xor
mov
adc
dec
popa
fcmovb
fcoms
adc
inc
call
xor
mov
lcall
js
popf
shrb
std
xor
int3
popf
or
leave
xor
loope
mov
mov
cmp
adc
lret
pop
and
fcoms
movsl
mov
jne
pop
stc
bound
fstp
std
mov
xchg
push
xchg
fldenv
fidivrs
lea
testl
cwtl
lods
mov
sbb
out
sub
add
es
mov
xchg
scas
push
and
push
mov
cmpsl
mov
inc
push
stc
or
loopne
sbb
xlat
mov
negb
and
loope
cltd
divl
cld
shll
ret
movsl
adc
daa
rclb
repnz
xlat
in
and
aad
fcmovnu
gs
xor
sbb
ds
inc
lods
xchg
pop
sti
cmp
daa
ret
subl
cmc
pop
in
nop
cmc
rcll
pop
dec
mov
testb
inc
mov
sub
mov
stos
rcr
ss
push
out
jg
dec
iret
mov
xor
enter
and
fmul
test
je
pop
mov
adc
mov
int3
fnstsw
mov
sbb
subl
adc
aas
nop
push
push
xchg
lods
test
pop
fstl
add
fs
jbe
fmull
loop
testl
adc
lods
loope
popa
jae
adc
repz
imull
sub
and
push
jle
and
stos
test
ret
mov
cli
xor
jbe
imul
mov
lea
push
jg
xchg
cs
jnp
add
cmp
lods
mov
jp
xor
rol
cmpsl
cmpxchg
mov
mov
mov
bound
push
push
cltd
lods
mov
add
and
cs
xchg
scas
pop
dec
fucomip
mov
ljmp
push
push
jo
mov
call
ja
mov
and
jbe
inc
xchg
sbb
mov
mov
fs
sti
sahf
pop
sub
jp
cmp
popa
mov
dec
mov
add
cmp
push
test
push
andb
push
mov
add
push
jnp
insl
sbb
pusha
jnp
mov
in
call
out
mov
lods
xchg
xor
fimull
mov
inc
push
mov
or
sub
inc
dec
or
fstl
orb
ss
test
sahf
out
jg
out
repnz
jae
arpl
test
test
sbb
mov
pop
sbb
enter
xchg
jb
jl
shr
scas
cmp
fisubl
stc
outsb
pop
inc
cld
sub
sub
push
xor
push
subl
ret
mov
mov
in
jge
add
sub
subb
dec
xchg
stos
adc
add
pushf
xor
and
mov
test
loope
mov
mov
daa
pop
je
es
loop
or
or
jge
mov
or
jne
jge
test
cmp
mov
fsts
cmp
stc
dec
push
inc
fwait
pop
sbb
stos
adcb
push
mov
inc
iret
adc
cltd
in
sub
cmc
icebp
push
in
push
mov
push
mov
jge
and
jae
adc
fidivs
push
dec
aaa
not
cmpsl
jmp
arpl
push
imul
mov
int
in
ss
adc
call
imul
loopne
leave
mov
pusha
inc
das
daa
jl
add
leave
movsl
pop
push
push
movsb
icebp
push
add
je
mov
movsl
and
add
in
cs
pop
xchg
jbe
xor
in
imul
jo
aaa
pop
je
mov
and
push
and
int
int3
stos
push
and
mov
fidivs
loopne
push
add
cld
es
mov
arpl
mov
pop
jo
cvtpi2ps
add
mov
fidivs
mov
cmpb
int
lcall
subl
mov
xor
out
inc
in
xchg
and
pushf
xchg
cwtl
aas
push
and
xor
xor
cmpsl
test
lock
xchg
fdivrs
add
cmp
or
xchg
jge
xchg
out
call
xor
xor
adc
cs
push
inc
ljmp
inc
in
lahf
fmul
xor
fistpll
leave
jl
aas
jne
ss
push
dec
shlb
inc
dec
xchg
rcrl
adc
out
push
push
or
hlt
sbb
out
lret
loop
jo
pop
xchg
xor
mov
shrl
pop
aad
cli
fdivr
movsb
daa
pop
cwtl
test
add
scas
jmp
adc
mov
test
or
mov
jg
push
cs
adc
inc
push
iret
and
adc
aad
pop
push
dec
lret
inc
mov
insl
sub
pop
or
jno
icebp
push
pop
int
jle
and
enter
jp
xchg
sub
add
lock
call
fcmovbe
lds
movsl
jg
sbb
gs
xor
lcall
rcr
and
insb
push
cmpsb
outsb
pop
mov
jne
icebp
fwait
icebp
dec
cmpsb
cld
xlat
ljmp
cmpsb
and
pop
jne
or
dec
inc
nop
iret
cwtl
mov
dec
rcrl
sti
pop
lahf
loope
je
jecxz
inc
inc
push
cli
fsubrl
dec
ljmp
mov
adc
mov
cld
or
data16
loop
sti
std
lret
aam
sbb
aas
jle
call
xchg
test
sub
sbb
pushf
jmp
pushf
adc
fdivrs
fcmovnu
les
ljmp
mov
notb
xchg
push
add
sub
sub
push
fs
jb
and
xchg
leave
ja
outsl
imul
aad
mov
outsl
xchg
mov
enter
xchg
pop
dec
int
cmp
push
jge
xor
add
xor
call
mov
add
sbb
outsl
out
out
ljmp
adc
push
cmp
xchg
orl
xorb
mov
pop
imul
sbb
adc
dec
sub
xchg
or
add
faddl
push
js
push
sahf
lret
imul
imul
push
jae
repnz
mov
adc
xor
mov
inc
cmpsb
cmovns
adc
dec
lret
loopne
leave
push
push
inc
test
fnsave
adc
mov
stos
int3
pushf
inc
stc
cmpsb
sub
jecxz
pop
xlat
adc
dec
int
out
repnz
sub
mov
jecxz
test
add
int
inc
cmpsl
shll
movsb
adc
inc
cmp
sbb
jmp
test
dec
sbb
mov
jae
outsb
add
aad
or
jmp
ja
pushf
lahf
adc
pop
int3
mov
push
jmp
inc
push
mov
repz
ss
fpatan
fmulp
out
or
repnz
xchg
filds
inc
neg
stos
jno
dec
push
cmp
flds
push
nop
pop
in
loope
outsl
sbb
aas
xor
je
adc
imul
sbb
or
scas
aad
repnz
sub
xor
jbe
stos
xor
pop
push
idivl
std
inc
xchg
outsl
nop
sbb
mov
dec
aam
mov
cmp
adc
pop
push
repz
xchg
add
arpl
data16
cltd
jnp
jae
sub
mov
imul
sbb
dec
mov
es
or
adc
xor
mov
jp
fwait
mov
xlat
repnz
adcl
test
popl
test
xchg
push
pop
repz
pop
add
mov
and
xchg
pop
shrl
inc
andl
mov
or
repz
sbb
add
cli
rclb
das
mov
pop
int
add
ret
daa
mov
sub
lock
jnp
adc
jne
mov
jecxz
notl
cmpsb
aad
cmp
xor
stos
sar
cmpsb
ljmp
cmc
pushf
ret
test
in
mov
iret
cld
adc
out
add
xor
jns
or
adc
enter
test
shrl
ret
leave
inc
rcrl
mulb
jno
mov
sub
pop
ret
aaa
lods
push
jno
iret
push
adc
and
subb
ds
inc
incl
inc
jb
add
std
outsl
and
lods
adc
jl
and
mov
push
mov
in
jl
js
mov
cmp
add
ss
mov
sbb
ret
leave
daa
mov
mov
and
jo
sbb
dec
test
cli
rcl
cmp
sbb
pop
ja
aam
popa
dec
or
pop
add
dec
lret
test
out
fisubrl
pop
xchg
insb
or
add
dec
adc
pop
xor
add
lds
inc
and
ljmp
inc
and
fidivs
aas
xchg
inc
mov
lods
mov
test
cwtl
jno
aad
xchg
lcall
scas
sarl
xchg
xlat
sub
mov
cmp
sbbl
sub
test
ret
inc
loope
loopne
into
pusha
xchg
xchg
mov
aam
adc
popf
shlb
and
jnp
xchg
jns
xchg
lcall
push
mov
testl
fcompl
xchg
mov
and
mov
adc
add
repz
fistl
ss
mov
push
aad
jnp
mov
lret
call
in
ss
add
notl
jl
fists
dec
xor
push
ret
std
addr16
sbb
push
sbbl
andb
xor
mov
out
lahf
jb
inc
fldl
insl
sub
aam
xor
adc
cmp
push
insl
jle
test
ljmp
fisttps
sub
jno
test
lret
ds
adc
and
sub
adc
inc
gs
push
xor
test
or
inc
bound
push
fisubrs
cld
adc
fs
pop
adc
jmp
jmp
or
enter
imul
in
lahf
leave
sub
push
fstl
testl
xor
daa
mov
add
sbb
mov
cwtl
lahf
xchg
mov
pop
and
mov
repnz
pop
mov
push
fcmovne
pop
or
pop
scas
test
out
pop
adc
pop
lcall
xor
iret
cmp
sahf
jae
mov
or
bound
lods
nop
xor
and
jecxz
pop
adc
jecxz
fwait
mov
into
cmc
rcll
adc
mov
mov
outsl
xchg
pushf
xchg
adc
sub
mov
fsts
mov
and
daa
mov
mov
hlt
imul
insl
sbb
repnz
repz
shll
sub
dec
fcomip
add
xchg
subl
push
inc
and
inc
jnp
fwait
add
dec
movsl
popf
push
jno
add
lahf
mov
movsb
inc
mov
mov
push
jbe
iret
and
jnp
lea
iret
push
or
jb
add
add
push
pop
int
fimull
push
scas
xchg
sub
pushl
or
and
out
mov
jl
cmpsl
push
mov
hlt
jl
dec
push
idiv
testb
sub
ss
cli
cmp
push
outsl
movsl
roll
push
mov
scas
movsl
jae
test
pop
adc
dec
adc
clc
push
mov
dec
ret
int
push
int
cmp
cld
stos
mov
push
mov
in
add
push
sbb
aam
mov
xor
push
jmp
mov
sahf
pop
push
scas
jl
sub
jb
and
addr16
pop
mov
sub
or
hlt
pop
sbbl
xchg
xchg
or
adc
into
dec
push
sbb
pop
mov
ja
mov
mov
sbb
call
xchg
cltd
ja
insb
cwtl
aaa
aas
rcrb
daa
rolb
cmp
sbb
xchg
sbb
fimull
add
cmc
jae
std
push
movsb
loop
aas
jae
mov
arpl
xor
sbb
pop
lret
in
cmp
imul
cltd
leave
les
int
movsl
pop
cli
sbb
and
push
and
xorl
or
lock
das
pop
xor
in
jmp
inc
call
or
push
xchg
lods
jg
minps
adc
aam
js
insb
hlt
xchg
ljmp
pop
lcall
push
pop
les
stos
fists
xchg
popa
cltd
js
jg
mov
cmp
sahf
out
cmp
mov
mov
xor
inc
cmp
cmpsb
sbb
xor
mov
test
outsl
adc
cmp
imul
clc
cmp
jns
mov
mov
test
mov
xchg
add
inc
dec
repnz
in
pop
lahf
xor
dec
xchg
pop
sbb
scas
xor
icebp
adc
cmpsl
adc
jnp
mov
inc
and
inc
jge
mov
cmp
cmp
arpl
rolb
mov
test
jg
imul
add
or
pop
shlb
fidivrl
or
mov
sub
imul
xchg
pop
js
je
pop
pop
and
jb
and
push
cmpsb
jnp
lods
out
jl
ds
xchg
fwait
scas
lahf
and
lahf
pop
adc
fdivr
inc
pop
pop
inc
pop
into
jnp
jmp
jb
inc
stc
or
out
mov
mov
lret
sub
into
iret
dec
fdivl
jbe
dec
inc
lret
stc
push
add
jb
sbb
inc
xor
push
push
leave
lahf
and
or
pop
mov
outsl
out
or
adc
fstps
sub
sub
push
or
cwtl
add
pop
lahf
mov
jle
jno
add
jbe
push
js
sub
movsl
sti
pop
and
sub
mov
jmp
mov
repnz
shrb
jecxz
dec
lea
cs
adc
lock
hlt
loopne
mov
ss
cmp
add
lea
xchg
xchg
mov
pusha
call
sub
dec
icebp
add
lret
or
push
shll
xchg
js
mov
add
xchg
xchg
repnz
repnz
mov
mov
ds
out
xchg
inc
add
ljmp
mov
mov
add
mov
fistps
xor
ret
cwtl
dec
lods
pusha
clc
xor
or
adcl
xor
mov
sbb
fsubs
loopne
popa
push
test
jbe
add
lahf
cwtl
imul
movd
inc
loope
add
clc
int
in
xchg
push
inc
dec
pushf
add
jmp
push
push
push
jmp
mulb
icebp
xchg
addr16
test
mov
dec
lods
jae
mov
mov
jae
sub
ja
das
fsubrl
mov
int
repz
push
ss
je
lcall
fwait
nop
or
out
dec
xchg
jae
sbb
adc
mov
dec
popf
fnstsw
sub
pop
xchg
add
xchg
mov
xchg
mov
idivb
pushf
mov
imul
insl
movsl
push
pop
rolb
movsb
xchg
in
cwtl
lea
pop
loop
xchg
cmpsb
test
mov
pop
lret
in
jecxz
repnz
inc
mov
lcall
fstl
or
dec
push
fistps
stos
cltd
and
mov
pop
sarb
mov
or
adc
jnp
mov
or
mov
lret
cmp
cli
into
shrl
stos
sahf
mov
fsubl
in
sub
decl
cs
ret
les
sbb
out
mov
xor
dec
fs
pop
mov
dec
scas
xor
or
call
xor
je
add
mov
adcl
xor
testb
inc
cmp
fnsave
lds
pop
push
gs
leave
adc
sub
mov
mov
mov
lods
xchg
jae
scas
punpckhdq
mov
pop
insl
adc
sbb
imul
inc
pop
inc
add
jo
cmc
jno
pop
add
adc
mov
icebp
outsb
inc
pushaw
lods
out
mov
adc
inc
sbb
adc
pop
mov
mov
jns
iret
arpl
cmc
add
and
lcall
popa
fmul
xlat
fs
scas
jae
mov
paddsb
jecxz
and
lret
jp
bnd
push
notl
mov
xlat
mov
push
adc
mov
jge
repnz
and
mov
aad
sub
dec
outsl
inc
push
sub
inc
mov
add
cs
cmp
sbb
into
mov
jne
std
gs
jno
jl
sbb
push
mov
sub
je
lea
sbb
into
out
xor
movsl
bound
out
xchg
lock
gs
repz
pop
inc
fsubs
xchg
mov
mov
rclb
shlb
or
jl
inc
dec
adc
loope
in
ss
add
shrb
mov
arpl
cmp
mov
call
mov
adc
jl
mov
int
stos
dec
dec
jge
mov
adc
aad
ja
into
out
jns
aam
icebp
xor
in
and
out
cmpsl
das
add
test
mov
loop,pn
mov
or
or
xchg
adc
arpl
js
popa
in
test
push
mov
popl
fst
cmpsb
xchg
inc
push
ss
in
mov
in
cld
mov
cmp
lods
xchg
and
into
int3
cmp
adc
test
aaa
notl
imul
bound
or
js
add
mov
fbld
mov
data16
test
inc
js
xchg
cmp
xchg
mov
fs
or
popa
ja
xor
outsb
adc
jbe
das
xchg
in
clc
sub
aam
sub
ljmp
push
outsb
das
mov
xchg
sbb
push
adc
fbstp
xor
in
imulb
fsubr
subl
int
adc
pop
xorb
stos
xchg
push
xchg
push
and
add
repz
xchg
cld
sub
xchg
add
sub
pusha
xchg
test
lods
xor
ret
lret
pop
out
cmp
dec
imul
mov
mov
pop
adc
loop
adc
ja
xchg
int
pop
ss
repnz
inc
cmpsl
cmp
mov
js
iret
imul
ret
pop
sub
pushf
repnz
stos
clc
rol
loop
sub
cld
sub
inc
aad
or
adcb
std
neg
lret
flds
mov
mov
mov
xlat
test
sbb
int
movb
mov
int3
test
jge
add
lret
pop
imulb
or
push
inc
jno
hlt
xor
dec
shlb
movsl
mov
mov
clc
and
lods
push
imul
jno
dec
mov
mov
push
jmp
pusha
in
sub
outsb
mov
cwtl
pusha
out
push
cmp
ret
test
jnp
adc
mov
sub
daa
jl
pusha
pop
repnz
mov
stc
pop
addr16
insb
mov
cwtl
dec
xchg
cmp
sub
imul
push
push
push
pop
mov
js
pop
cmp
inc
test
aas
xor
std
jg
repnz
pushf
out
add
or
xor
pop
xchg
mov
jno
inc
cmp
cmp
mov
xor
jbe
pusha
mov
sahf
mov
mov
dec
cmp
push
mov
mov
sbb
jnp
lahf
enter
inc
ror
pusha
and
mov
test
rolb
sarb
test
jns
mov
dec
add
jbe
stos
lret
movsl
ja
xchg
sti
std
in
shlb
fdivrl
iret
negb
stc
jle
ret
dec
jp
daa
out
iret
ds
xor
add
mov
lret
pop
lods
arpl
sub
out
or
push
xchg
sub
xor
sbb
inc
and
push
lcall
push
jno
sub
and
orb
orl
stc
adcl
lods
in
sub
add
mov
push
mov
imulb
mov
xchg
jbe
jae
jbe
sbb
jecxz
popf
dec
xor
frstor
rorl
fistl
in
jl
push
mov
mov
test
pusha
insb
mov
push
rorb
jmp
adc
hlt
push
adc
adc
lcall
rorl
push
pushf
dec
pusha
pushf
push
xor
mov
jns
inc
dec
in
sub
mov
rorl
pop
into
shrb
mov
adc
lock
add
jecxz
push
outsb
fs
push
mov
dec
jg
shrb
inc
pop
scas
scas
sbb
shlb
adc
dec
aaa
add
outsl
shr
push
ret
mov
or
mov
cwtl
jl
xor
aad
push
push
inc
icebp
xchg
pop
push
jbe
rolb
ljmp
pop
adc
and
push
cmp
adc
or
mov
and
push
leave
add
mov
xchg
and
sbb
sar
mov
xor
and
or
mov
and
das
lret
scas
nop
or
call
push
loopne
sub
mov
enter
dec
xchg
dec
iret
mov
icebp
adc
ja
int
loop
ficomps
inc
jl
rcrl
mov
inc
loop
and
cmc
fsubrp
and
push
shll
aam
ljmp
jns
stos
xlat
xor
cmpsb
stc
loop
repz
push
ss
adc
repz
adc
sbb
xchg
imul
mov
mov
clc
mov
inc
addb
xchg
inc
cmp
cmp
rcll
sbb
xor
mov
and
mov
cwtl
mov
in
sti
dec
daa
pusha
loopne
jbe
addr16
inc
sub
mov
inc
mov
inc
mov
arpl
xlat
sub
adc
gs
sub
imul
dec
push
subb
push
outsb
notb
mov
imul
hlt
mov
loope
das
jb
pushl
mov
push
orb
into
push
gs
pop
js
mov
stos
aam
pusha
push
test
pop
pop
dec
out
jecxz
xchg
scas
into
xchg
leave
test
mov
cmpsb
pop
inc
mov
mov
sub
clc
fisttpl
in
test
inc
inc
scas
aam
adc
jo
jle
shl
push
bound
add
and
jmp
dec
add
dec
cwtl
test
xor
dec
loope
jg
in
cmp
das
jnp
adc
or
push
xchg
jno
test
add
pop
cwtl
jne
adc
bnd
repz
pop
fwait
cli
xchg
sbb
jnp
pop
jle
ds
sub
adcl
mov
add
adc
xlat
mov
xlat
xchg
cs
movsb
psubq
and
inc
jne
jge
mov
mov
cmp
xchg
mov
daa
andb
stos
dec
and
pop
add
push
ljmp
aaa
jo
insb
test
jne
or
scas
dec
pop
test
aas
std
mov
and
out
sub
mov
pusha
mov
stos
cmp
push
add
mov
aaa
pop
push
sub
pop
daa
jnp
lods
loopne
push
jge
sub
mov
xchg
out
ror
cmp
imul
inc
mov
aas
push
inc
cs
xor
sahf
xchg
ds
pop
mov
mov
dec
add
insb
xchg
scas
dec
pop
fs
xlat
xchg
scas
cmpb
xor
int3
dec
xchg
xchg
jmp
aad
add
int3
mov
xchg
sbb
mov
bound
leave
arpl
int
xchg
sub
or
addr16
jecxz
add
fisubrs
mov
repz
idivl
sbb
ss
cwtl
out
adc
dec
push
jmp
in
flds
lret
mov
loopne
cmp
inc
adc
fcompl
push
cmp
adc
jp
cltd
clc
jbe
aad
pop
xor
js
pusha
lret
cmp
mov
xchg
fwait
fimull
ret
das
push
enter
lods
ficoml
adc
adc
jge
adc
dec
and
sarl
sbb
out
stc
cmpsb
push
inc
orb
cmc
aaa
sub
sub
test
int3
sbb
sbb
ja
xchg
cwtl
cmp
fildll
icebp
dec
mov
pop
movsl
xor
icebp
roll
stc
mov
pop
mov
sbb
out
push
inc
js
addr16
stos
sbb
ret
mov
push
fs
arpl
pop
push
inc
aas
out
jl
sub
enter
out
xor
jnp
lods
dec
lcall
popa
mov
pop
ja
pop
js
pop
sahf
jl,pn
dec
and
adc
or
mov
push
mov
ror
test
mov
sahf
push
insl
in
mov
test
addr16
adc
mov
jmp
lahf
pop
add
fwait
out
imul
pop
mov
xchg
int3
lods
dec
shl
dec
pop
imul
test
call
aaa
mov
hlt
inc
out
and
test
out
xor
sbb
data16
fsub
outsb
xchg
mov
inc
mov
out
or
adc
add
push
inc
ret
mov
and
xchg
adc
call
aam
adc
nop
fsts
cld
leave
xchg
inc
jbe
mov
cmpsb
lds
xorl
js
into
jbe
mov
push
imul
call
insl
outsb
mov
out
dec
xor
enter
ret
clc
sub
xchg
fwait
loopne
clc
pop
jmp
enter
clc
pop
jp
mov
lret
sub
shl
pop
mov
jl
stc
pushf
jnp
or
push
sbb
push
adc
inc
out
xchg
rclb
gs
inc
push
int3
leave
or
jns
stos
lcall
inc
sbb
xchg
adc
xchg
xorb
pop
in
scas
add
xchg
inc
mov
call
inc
sub
add
or
int
out
cmp
jo
pop
test
popf
fisubrs
pop
sbb
add
lahf
out
das
jle
xchg
js
add
jge
fildl
mov
sub
js
mull
sti
jne
xchg
fnsave
sbb
lods
fwait
hlt
pop
popf
mov
test
cld
out
cwtl
sub
icebp
mov
push
mov
mov
fsubrl
cmpsb
xchg
lds
and
nop
mov
movsl
mov
push
mov
sub
shlb
sbb
les
lock
add
pop
and
pop
addl
or
addl
into
lods
nop
pop
fnop
sbb
jb
xchg
add
jp
cmp
mov
aad
dec
jo
arpl
ret
clc
sub
popf
cmp
add
subb
add
bswap
xlat
sub
mov
clc
rcrl
push
and
dec
xchg
mov
dec
xor
fsts
stos
jmp
decb
push
lahf
and
or
or
and
push
xchg
mov
inc
mov
out
xchg
inc
sti
jecxz
jle
cmpb
in
nop
xchg
je
jae
aas
sarb
and
inc
jmp
ret
pop
xchg
xlat
inc
jbe
adc
push
mov
sbb
in
stos
mov
xor
fadds
test
sbbb
pop
cwtl
adc
pusha
inc
shl
pop
jp
lahf
ret
cli
data16
cld
mov
push
imul
call
dec
decb
jbe
dec
setne
push
cmpsb
aas
lock
lret
or
jle
xchg
iret
sahf
cmp
jg
pop
cwtl
inc
or
jb
push
cmpsb
sbb
xchg
mov
mov
jmp
inc
jmp
lret
addr16
movsl
aaa
push
iret
dec
sbb
add
ja
xor
cmp
addb
inc
pop
mov
lret
push
push
call
and
jmp
jmp
mov
rcrl
lcall
adc
and
ljmp
xchg
pop
dec
arpl
test
stos
mov
sbb
mov
jp
sbb
lea
pushf
cmpsl
push
cmpsl
aad
mull
push
popa
rcr
lea
mov
cmp
mov
clc
into
cmpsl
movsl
cmp
insb
mov
das
dec
push
mov
int3
mov
jbe
push
xchg
fxch
test
pop
scas
movsl
dec
mov
pop
add
jb
jle
sub
jnp
mov
cmp
ljmp
mov
xchg
xor
mov
sub
cmc
jne
gs
adc
mov
inc
or
inc
push
popa
inc
fidivl
add
gs
aaa
and
pop
fadd
mov
add
sbb
or
and
add
mov
jne
cmc
dec
sbb
dec
loop
popf
jl
jg
pushf
addr16
jmp
pop
dec
sar
jp
call
inc
jnp
in
adc
push
faddl
sub
adc
mov
xor
mov
lret
cltd
lahf
pop
mov
js
mov
int3
cmp
mov
ss
inc
outsl
jae
fidivl
mov
jmp
shrb
insl
xchg
fcompl
adc
pushw
jmp
test
push
cmp
sub
movsl
aaa
jb
sub
mov
repz
and
inc
hlt
nop
cs
sbbb
scas
movsl
in
adc
cs
sub
xor
or
sub
lret
xorb
inc
mov
pop
push
ja
es
lret
push
or
mov
push
loopne
insb
adc
scas
lret
push
sbb
adc
mov
and
movsl
xchg
fs
icebp
mov
clc
push
inc
sahf
sahf
cld
test
xchg
call
loope
insb
gs
cli
iret
push
cmp
pop
jl
insb
pop
dec
je
mov
stos
loop
xchg
add
pop
insl
fwait
push
fistpll
push
je
ljmp
ret
in
shll
aaa
xor
jns
cmp
xchg
aas
pop
dec
imul
lret
mov
out
rcpps
out
lods
sbb
adc
das
movsb
popa
mov
push
mov
fdivrs
out
inc
jmp
cli
mov
xor
dec
mov
jne
sub
inc
jle
sti
inc
repnz
or
outsl
rcll
xchg
call
xor
inc
jbe
mov
inc
mov
cli
jb
ss
shl
inc
add
ljmp
mov
jle
mov
add
aad
movsl
movsl
jp
push
jl
lahf
inc
jecxz
fucom
and
mov
mov
ja
jo
cmp
pushf
fwait
fs
pusha
add
mov
in
cmp
pop
out
xchg
testl
aad
push
jmp
and
pop
dec
cmp
jge
xor
int3
push
mov
jns
out
pusha
loope
push
mov
in
popf
jmp
push
sti
sub
lds
fdivrs
pop
jp
and
sub
inc
iret
nop
jbe
jo
pop
lret
iret
lret
push
iret
add
cmpsb
rclb
pop
jns
jno
mov
xchg
cmp
mov
xor
in
loope,pt
rclb
pop
xchg
xor
enter
nop
fsub
push
pop
mov
rcr
test
shlb
mov
stc
das
and
das
fimull
and
cmp
add
xlat
mov
xchg
inc
mov
enter
mov
add
out
loopne
or
je
iret
adc
adc
push
or
mov
mov
jne
cltd
ss
clc
test
cmp
cld
mov
push
add
aas
push
push
stc
pop
inc
movsl
pop
fcmovbe
push
jnp
cwtl
sub
testl
add
jl
push
mov
pop
pusha
adc
adc
dec
in
cmpsb
leave
mov
and
inc
dec
iret
mov
rolb
xchg
add
add
cmc
lret
xchg
popf
jle
xchg
or
sbb
cmp
mov
mov
push
xchg
push
pop
pop
outsl
sub
out
lcall
dec
subl
addr16
mov
mov
sbb
lcall
push
out
inc
xchg
rcr
cli
std
inc
xchg
cltd
add
sbbl
test
pop
rcr
mov
clc
xor
push
stos
mov
pop
in
sub
stc
lret
adc
scas
mov
ret
icebp
mov
pop
aad
out
bnd
cmpsb
rol
mov
sub
mov
lods
and
xor
dec
inc
movsb
jne
or
ljmp
adc
sahf
icebp
fistl
cmp
xchg
push
dec
sahf
mov
cmc
mov
push
dec
cmpsb
fimuls
dec
ljmp
mov
xchg
xchg
add
add
fcoms
in
ja
xor
enter
sbb
pop
inc
dec
xor
loop
mov
mov
and
imul
mov
jp
jmp
dec
push
and
adcl
fucomi
or
mov
inc
cltd
je
inc
jle,pn
lea
aad
or
test
push
mov
shl
jae
sbb
inc
ss
cmc
add
enter
dec
ljmp
negb
inc
pop
or
shll
aas
adc
andb
xor
add
loopne
call
test
sahf
enter
es
and
xadd
sbb
jecxz
mov
test
adc
cmpsl
jo
or
sub
shr
repnz
and
adc
or
test
repnz
lahf
jne
jno
leave
and
inc
sahf
ja
loop
push
lret
sbb
sub
pop
rcll
test
sbb
mov
xchg
cmc
push
push
or
ret
xchg
or
jmp
outsl
jno
add
testw
js
fwait
mov
imul
push
sub
sbb
lcall
scas
or
sbb
nop
mov
adc
and
jmp
inc
loop
movsb
push
or
adc
adc
dec
or
test
cltd
inc
add
inc
test
ds
cwtl
cs
out
not
in
pop
dec
mov
add
ret
out
aam
jae
negl
and
mov
adc
aaa
lods
stos
test
icebp
or
hlt
xor
cld
sbb
je
sub
cmpl
lahf
adc
adc
in
mov
cmp
fisubl
mov
cli
pop
mov
push
and
or
int
or
mov
stc
add
mov
xor
pop
xchg
cld
dec
and
mov
dec
dec
add
lcall
cmp
insb
ds
mov
sbb
mov
in
sbb
and
fs
mov
jg
out
xchg
aaa
ret
test
js
jle
imull
jge
sbb
jl
or
outsb
add
pop
inc
mov
inc
and
adc
sbb
jnp
dec
lcall
mov
inc
sub
push
adc
mov
scas
je
ror
mov
add
ljmp
push
and
jecxz
sub
adc
pop
cli
outsb
pop
gs
out
mov
mov
shrb
dec
pop
mov
add
js
cli
popa
xchg
movsb
repnz
mov
push
mov
stos
xchg
ljmp
std
mov
or
out
cwtl
inc
mov
mov
iret
sbb
sarb
ja
mov
push
pop
loopne
int
dec
adc
ja
enter
cmp
xchg
stc
div
inc
mov
stos
jae
dec
xor
sbb
push
popf
add
adc
stos
add
sbb
repnz
xor
mov
incl
sub
mov
xor
stc
dec
or
cmp
test
icebp
daa
stos
or
adc
repnz
lahf
fstpl
jle
das
adc
cld
jle
inc
sahf
mov
jl
out
push
dec
cmpsb
xchg
push
cli
lds
xor
mov
in
das
xor
or
repnz
sbb
data16
sub
push
or
mov
fucomp
cmp
and
jmp
jae
mov
cmp
and
addr16
and
enter
push
inc
adc
jns
jns
mov
pushf
orl
xchg
xor
adc
inc
cmp
insb
rcrb
mov
mov
cmpsl
cmp
sti
or
gs
fs
pushl
lods
jp
test
jg
inc
cmp
scas
adc
mov
aas
test
sahf
pop
pushf
or
leave
adc
and
dec
cwtl
decl
sbb
adc
jg
adc
cmpsb
xchg
sbb
sahf
sub
or
out
fisubl
xchg
mov
mov
out
out
leave
mov
cmpsb
or
cli
and
pop
jge
cmpsb
and
lret
jno
push
sahf
cmpb
lea
jmp
dec
jmp
mov
pop
xchg
stc
and
ds
mov
mov
adc
lds
mov
cmp
mov
adc
mov
pop
sub
or
dec
mov
bswap
cs
clc
test
roll
xor
inc
xchg
or
mov
data16
and
inc
push
test
xchg
lds
cmp
cmp
sub
daa
jp
mov
and
aaa
mov
xchg
pop
push
test
mov
push
cmp
xor
jo
js
fwait
adc
cmpsl
dec
xlat
shrl
xor
loop
mov
scas
pop
les
cmp
cmp
push
or
jnp
dec
iret
js
dec
cmp
lds
sti
shll
push
scas
sbb
dec
js
sbb
fcmovu
and
sbb
pop
jle
dec
xchg
stc
inc
jg
popf
xor
call
testb
bound
call
cltd
mov
adc
iret
xchg
pop
out
jge
subl
and
rorl
cmpsb
popa
xchg
movsb
cmpsl
arpl
add
or
js
jbe
or
cmpsb
insl
cmp
fsubs
sahf
xor
leave
mov
mov
addr16
imulb
dec
mov
push
rorl
mov
ficomps
movsl
mov
inc
and
out
dec
addb
add
addr16
jecxz
mov
adc
imul
mov
adc
arpl
sub
test
insl
into
pop
outsb
or
repnz
sbb
cmp
test
or
outsb
int
arpl
jns
dec
cs
cmp
xor
cmp
fiaddl
or
xor
cmp
push
or
sbb
xchg
jp
scas
mov
mov
mov
add
ror
inc
and
adc
sbb
adc
push
sahf
negb
pop
pop
in
jl
stos
jbe
mov
fdiv
push
jne
adc
add
fs
mov
mov
or
jle
adc
scas
dec
sbbl
cmpsb
sti
pop
xor
sub
push
add
xlat
jp
pop
aaa
xor
nop
mov
pop
cwtl
jbe
xchg
icebp
leave
mov
sbb
loop
das
aam
loopne
cmova
xchg
inc
cltd
int3
je
sarl
ss
je
nop
sbb
push
test
mov
int3
sti
dec
cwtl
or
mov
xchg
pop
inc
push
inc
push
sbbl
jg
dec
push
test
mov
cmpsl
test
adc
cwtl
jae
out
imulb
fsubl
mov
and
subl
jge
jbe
cmpsl
sahf
test
in
imul
frstor
mov
mov
lock
sti
lea
sbb
pop
aaa
pusha
sbb
into
out
out
pop
mov
cld
imul
fcmovu
xor
push
mov
ja
xchg
ds
adc
out
in
xor
push
aad
jl
or
or
hlt
mov
add
popa
sarb
dec
mov
dec
mul
pop
insb
and
mov
out
mov
call
int
test
mov
adc
mov
sbb
pop
mov
mov
cmpsb
pop
xorb
enter
out
not
rorl
adc
repnz
sbb
aad
cmp
pop
mov
jnp
std
xchg
dec
mov
divps
popf
push
orl
data16
negb
shl
lods
mov
xchg
scas
xchg
mov
sub
jecxz
xor
fwait
pop
in
pushf
clc
add
aaa
iret
add
jle
mov
out
jns
mov
or
mov
popa
arpl
cmp
push
inc
add
jo
call
xor
sahf
sbb
popa
aad
add
push
popf
add
cld
popa
lcall
sahf
xor
sub
call
jo
mov
lock
mov
stos
xor
ja
lock
and
cli
xlat
xchg
cs
jecxz
pop
adc
popf
aam
inc
imul
sbb
iret
inc
sub
inc
roll
dec
push
add
bound
dec
icebp
movsl
pop
lahf
and
out
in
add
add
add
movsl
jecxz
cld
fsin
sbb
es
fxch
ljmp
jl
out
adc
xchg
adc
sbb
adc
outsl
sub
mov
add
je
lods
outsl
fdivr
lods
mov
fs
dec
push
mov
lcall
popa
enter
in
sbb
sub
push
clc
jle
dec
cs
js
pop
mov
sub
leave
push
xchg
xchg
fmull
inc
out
lods
mov
in
add
dec
cmp
inc
cltd
stos
jnp
fwait
cmp
es
nop
sub
dec
sub
add
mov
pop
push
jecxz
das
movsb
mov
test
aaa
pop
or
fcmovnb
lret
sahf
pop
xchg
xor
movsl
lock
imul
xchg
lahf
xchg
and
add
scas
ljmp
xchg
add
data16
pop
dec
mov
adc
fstpl
mov
hlt
mov
hlt
pop
mov
call
shlb
and
inc
inc
lcall
int3
and
mov
push
push
adc
out
mov
xor
aaa
mov
repnz
cld
aad
mov
adc
jg
xchg
cmp
loopne
clc
ja
dec
shr
bswap
mov
icebp
add
in
jle
loop
enter
sub
sbb
sbb
mov
pop
sub
lcall
sbb
cmp
xor
jp
xor
wrmsr
roll
lret
cmpsb
cwtl
addb
mov
stc
adc
jecxz
adc
adc
push
movsl
pop
inc
mov
xor
cmc
rcrb
pop
push
scas
movsl
data16
and
movsb
sbb
push
mov
lds
hlt
lods
and
cli
xchg
jns
mov
pop
sbb
ret
adc
sub
fiaddl
lahf
int
add
leave
lods
mov
mov
loop
xchg
sub
mov
mov
popf
mov
xlat
add
add
mov
lock
lcall
into
mov
sarb
inc
lock
rol
pop
sbb
jecxz
rorl
addb
push
cmp
lds
test
jmp
xor
sbb
scas
out
and
mov
in
mov
jp
divb
or
mov
filds
pop
jne
ss
mov
mov
lods
cmp
fnstsw
mov
xlat
xlat
scas
enter
jmp
aas
mov
es
in
adc
xor
inc
aad
inc
mov
pop
add
test
sbb
ja
lods
fisttpll
aas
sbb
call
jnp
out
and
idivl
cmpsl
notb
add
into
or
les
scas
pushf
sbb
mov
loopne
sbb
std
xchg
inc
add
mov
lods
mov
test
out
lcall
adc
sbb
cwtl
and
or
or
or
cmp
cmp
inc
push
ficomps
inc
shlb
movsb
aam
loopne
daa
les
inc
lock
push
jo
cmp
cli
negb
push
mov
ja
mov
or
push
or
nop
dec
clc
mov
cmp
pop
add
inc
addr16
loop
fildll
cwtl
sub
in
jns
pusha
mov
push
push
je
pop
dec
lds
jnp
push
add
push
icebp
movl
adc
and
add
mov
aad
fstl
iret
fstpl
push
mov
xchg
push
dec
xchg
adc
inc
int3
pop
push
pusha
out
sbb
sbb
jg
test
push
and
jnp
sbb
test
sub
inc
pop
add
jl
dec
cmp
stos
adc
outsb
jo
add
pop
arpl
std
inc
pop
inc
and
cmpsl
add
xchg
mov
inc
push
xchg
inc
mov
fimull
inc
or
insb
xchg
fwait
lea
pop
pop
es
loop
jno
or
inc
adc
cli
inc
scas
dec
out
mov
and
test
int
mov
repz
mov
les
adc
pop
ret
call
bound
mov
ficomps
mov
mov
jnp
mov
cmc
mov
leave
adc
jmp
xchg
aas
push
icebp
inc
push
and
sub
dec
outsb
or
jo
xchg
mov
nop
cmpsb
popa
imul
in
mov
xor
dec
adc
xchg
lea
pop
movsl
add
out
inc
xor
scas
mov
jle
pop
adc
out
jae
sbb
mov
and
scas
mov
jge
xchg
iret
pop
rcrb
and
bound
movsb
xchg
cmp
popa
out
mov
repz
getsec
out
mov
xchg
jl
mov
callw
or
js
jecxz
stc
or
call
mov
das
mov
pop
mov
stc
gs
mov
and
pop
sbb
mov
out
aad
loop
leave
mov
or
push
cs
fwait
push
jp
ret
push
mov
lret
lret
jp
mov
js
dec
out
pusha
cmp
fstl
ffreep
stc
sahf
and
push
jmp
mov
imul
dec
or
fwait
cmc
and
and
adc
xor
or
test
or
jg
jae
push
arpl
xchg
jl
cld
ret
stos
arpl
shrl
xchg
ss
jbe
shll
xchg
cmp
int
pop
xor
inc
lahf
int
fldt
orb
das
sub
cli
cld
mov
lods
cmp
nop
mov
ds
and
xchg
mov
cmpsl
and
test
lret
inc
jb
or
push
xor
ret
or
dec
xchg
clc
mov
clc
jns
mov
or
sbb
jecxz
push
loop
imul
aaa
xchg
int
test
pop
mov
and
sbb
addr16
popf
xchg
jne
mov
aas
out
jo
pop
pop
lret
sti
arpl
add
or
fstpt
outsl
sbb
sti
out
xor
pop
add
int
inc
jb
scas
icebp
fwait
rclb
inc
dec
xor
jle
fwait
pop
cwtl
sti
clc
cmp
cli
fadds
push
ja
int3
and
daa
lock
stos
dec
lcall
mov
push
cltd
sbb
out
and
ja
or
mov
lcall
data16
sub
testl
pushf
add
movsl
mov
pop
inc
xchg
add
in
push
mov
gs
jg
xor
mov
add
inc
push
mull
imul
mov
test
sub
and
sbbb
add
js
lcall
sahf
cmpsl
sbb
pop
xor
pop
in
int3
and
aam
xor
cld
mov
js
lea
jbe
dec
or
pop
mov
add
hlt
jge
or
push
jnp
in
jbe
out
xchg
stc
xor
cmp
lret
out
into
xor
leave
sub
or
xor
add
jmp
js
or
pop
pop
in
loopne
push
jp
push
cmc
mov
cli
mov
movb
adc
sahf
sahf
movsb
ja
add
dec
lea
mov
das
xor
and
rcll
fninit
clc
test
mov
sub
jb
push
sub
mov
mov
mov
jno
decb
fnstsw
cltd
xchg
lea
push
sbb
add
inc
out
icebp
xlat
cmc
popa
loope
pop
adcl
jbe
push
sbb
and
mov
xchg
fidivrs
in
lahf
out
loop
aaa
mov
sahf
cpuid
pop
cmpsl
inc
pop
adc
adcb
inc
add
sbb
in
jl
arpl
inc
xor
movsb
jne
lret
sarl
popf
enter
icebp
call
sbb
cwtl
call
xchg
cmpsl
and
ss
xchg
inc
xchg
mov
das
arpl
inc
repnz
in
ret
ds
pop
mov
pop
out
jne
adc
rcl
fstpl
movsl
xchg
mov
imul
adc
fcomps
ret
je
mov
cmpsl
xchg
test
cmp
xchg
mov
iret
fwait
xor
inc
lock
inc
mov
and
jge
pusha
adc
cmp
inc
mov
xchg
loopne
fildl
xchg
push
lods
enter
out
dec
fwait
mov
jo
and
sub
scas
push
enter
lahf
cmpsb
cwtl
dec
loopne
or
test
leave
dec
add
inc
dec
sbb
lret
or
pushf
mov
in
pop
lahf
cmp
cli
sti
test
mov
ficoml
dec
or
mov
out
jbe
sub
rorb
push
xlat
add
jb
mov
xor
fwait
dec
pop
cmp
jl
shll
push
xchg
aad
jg
adc
add
imul
shlb
fimuls
sub
loopne
aam
stc
jno
xchg
popl
mov
adc
mov
aas
pop
ret
pop
inc
xor
mov
in
outsl
lods
in
fdiv
mov
je
mov
mov
scas
adc
and
mov
dec
mov
xlat
fcompl
lock
out
adc
stos
jl
push
leave
push
adc
and
fistpll
jl
cmp
arpl
aam
test
dec
xor
je
lret
and
test
daa
jns
hlt
xchg
pusha
ja
std
mov
cmp
xchg
mov
inc
gs
aad
fdivr
xchg
into
xor
jmp
lcall
popf
inc
pop
jae
sbb
sbb
and
faddl
inc
sbb
cmp
into
aam
jns
pop
and
sahf
dec
out
jns
xchg
cltd
and
push
mov
mov
pop
mov
push
adc
enter
push
dec
rol
insl
in
mov
and
sub
jno
imul
inc
aaa
lret
inc
in
sub
sbb
pop
ljmp
inc
or
add
fwait
cmp
mov
fiadds
pop
stc
es
cli
pushf
je
cmp
loope
insl
jbe
mov
ret
or
dec
fsubl
notb
outsl
scas
jae
test
push
out
push
out
sub
push
clc
loopne
sub
xor
push
sub
jg
loop
in
cmp
in
js
leave
fbld
push
scas
std
xchg
bound
push
enter
sbb
aam
in
stos
ret
outsb
xchg
mov
daa
aaa
cmp
pop
mov
sarb
mov
sti
and
inc
mov
mov
dec
and
adc
call
push
jmp
addb
mov
mov
or
pushf
outsl
xor
push
enter
js
dec
mulb
xchg
add
mov
sbb
pop
mov
addr16
add
ljmp
icebp
add
aad
push
out
xchg
cmpsb
mov
lods
jl
jge
std
test
ds
cmp
lock
jge
cmpsb
mov
mov
push
mov
nop
jl
ljmp
cltd
cmp
xchg
dec
mov
sub
sbb
pop
icebp
popf
sub
and
xchg
les
push
outsl
rcll
push
mov
cmp
repz
mov
or
fs
xchg
dec
rcrl
add
in
addl
mov
push
inc
std
sub
mov
jb
std
dec
mov
faddl
loop
inc
enter
sti
je
xor
cwtl
push
pop
sbb
gs
sti
mov
jne
pop
outsl
or
mov
in
xor
xchg
sub
and
lret
and
jnp
mov
jecxz
imulb
testl
xor
shl
xchg
aaa
cs
xor
mov
sbb
jmp
push
cli
sahf
cmpsb
mov
fdivrs
mov
add
sahf
out
arpl
fwait
mov
adc
jecxz
movsl
dec
push
jb
cmp
pop
mov
lock
test
jmp
leave
xchg
insl
mov
insl
mov
iret
xchg
and
pop
sbb
jl
mov
test
sub
adc
lds
gs
daa
lods
pop
addr16
stos
adc
push
adc
dec
jge
js
pop
fnsave
cli
daa
clc
loopne
addr16
mov
mov
gs
dec
out
movsl
xchg
loope
sti
pop
jmp
cmp
lahf
xor
jnp
jnp
sbb
ds
jge
push
pop
imul
mov
mov
ja
out
fidivl
imul
loope
cmp
cld
or
xor
mov
call
popa
cltd
mov
movsb
xor
stc
mov
scas
mov
xor
dec
mull
inc
mov
mov
pushf
adc
es
lret
mov
mov
pop
and
xor
push
cmpb
xlat
sbb
jbe
pop
test
push
dec
pop
dec
test
cmpsb
scas
sbb
clc
cltd
add
icebp
insb
pop
mov
clc
sub
mov
outsb
jge
mov
xor
cmp
jl
pop
js
dec
adc
and
sbb
mov
dec
dec
push
movsb
push
outsl
pop
mov
mov
inc
lea
in
cwtl
cmc
and
mov
dec
inc
cli
push
jle
sti
les
dec
cmp
push
pop
pop
xor
movsl
js
jmp
out
push
scas
mov
xlat
mov
mov
jne
dec
xchg
ds
out
jb
insl
lods
mov
push
cmp
nop
sti
push
lods
inc
jbe
pop
jmp
mov
aad
fldcw
jl
imul
sbb
mov
sub
repz
mov
insl
jp
inc
mov
outsl
cmp
jge
out
mov
in
inc
stos
into
inc
jns
shlb
stos
jmp
push
xchg
fiadds
pop
add
jne
imul
cmpsl
or
cmpsl
mov
adc
inc
mov
dec
iret
inc
cld
stos
ja
mov
filds
xchg
add
mov
inc
jmp
aaa
pop
xor
fidivrl
pop
decb
gs
jae
sbb
pop
mov
loop
jg
rolb
or
loope
lahf
cmpsb
decl
inc
jnp
jnp
ss
scas
sbb
stos
jbe
adc
dec
inc
push
orl
or
dec
jns
mov
mov
xor
xor
pop
jae
aad
pop
cmpsl
pop
sub
adc
jp
imul
and
mov
pop
and
fimull
lods
mov
push
frstor
pop
addr16
arpl
xchg
iret
inc
ret
fwait
dec
jns
repnz
dec
inc
push
movsb
stos
xor
mov
scas
pop
mov
mov
push
pushf
inc
push
mov
cmpsb
sbb
inc
fldcw
je
cmp
jle
mov
loop
enter
xchg
outsl
jae
mov
iret
mov
xchg
mov
imul
push
sarl
jg
test
mov
and
jno
dec
insb
cs
aas
xchg
jg
test
scas
shll
mov
movsl
shr
mov
shrl
data16
mov
nop
and
cmc
loopne
ret
push
pop
mov
dec
inc
jbe
rorb
int3
cs
add
mov
inc
lret
lods
mov
push
mov
push
imul
mov
dec
rorb
xchg
inc
jp
mov
ss
or
and
sub
mov
shl
jbe
das
sbb
lret
mov
hlt
rcll
cmp
inc
dec
sub
pop
subl
outsb
in
cmp
je
ds
push
out
sbb
sub
je
cld
pop
jg
mov
add
sub
mov
les
jge
vminpd
hlt
fwait
xchg
sbb
fwait
div
icebp
in
mov
pop
xor
rolb
adc
scas
fwait
mov
mov
cld
addr16
stos
xor
cmp
sbb
sub
sahf
xor
mov
pop
bound
adc
inc
mov
mov
mov
fdivrp
in
jne
add
in
sub
aam
lds
jnp
xor
pop
js
mov
addr16
mov
xchg
imul
xchg
lcall
ljmp
xchg
data16
ljmp
pop
and
std
ret
sbb
cmpsb
in
popa
adc
ret
stc
hlt
xchg
cwtl
or
inc
out
lret
xchg
sub
fsubl
test
mov
out
sbb
inc
aam
stc
add
push
int3
sahf
push
loope
out
and
push
mov
and
push
dec
pushf
repz
pusha
mov
cmpl
xor
and
adc
or
into
mov
sub
mov
dec
outsl
mov
ds
cmp
repz
dec
dec
scas
xchg
push
jmp
mov
mov
or
pop
cli
push
scas
xchg
outsb
fdivrs
out
popa
mull
into
aaa
repz
pop
and
les
movsb
mov
pop
dec
or
adc
sbb
sub
cld
mov
mov
xchg
jae
dec
int
pop
cwtl
jns
enter
sub
xchg
pop
push
pusha
or
jl
fucomip
inc
ficoml
cltd
rep
ret
roll
pop
push
fadd
mov
sub
mov
jae
xor
cmp
xchg
push
fcomp
mov
dec
out
push
push
push
and
push
loop
enter
dec
popf
or
add
sbb
pop
cmpsb
leave
fidivs
mov
push
push
jbe
inc
aas
jmp
into
out
inc
cmp
xor
adc
enter
mov
xchg
lret
jne
xchg
inc
lods
cmc
and
lds
xchg
mov
imul
mov
repnz
pushf
es
aam
js
mov
dec
dec
je
cmp
incl
incb
imul
pop
flds
mov
fnstcw
xchg
add
test
jne
pop
andl
in
fstpt
pop
daa
mov
inc
jns
test
jbe
sub
or
pop
cmpsb
loopne
adc
in
js
xchg
adc
cld
cmpsb
inc
push
divb
sub
in
cmp
fldt
fsubrs
in
xor
dec
and
pop
lret
jle
movsb
ret
sbbb
pop
inc
out
out
outsb
je
jmp
cmp
mov
repnz
orb
adc
data16
xchg
and
fisubl
xor
push
test
lret
sti
sti
cmc
adc
pusha
inc
lcall
sub
fldcw
cs
sub
cltd
push
pop
lea
repz
pop
insl
loop
cmp
fsub
xor
int
pop
aad
cmp
sub
sbb
int
and
std
sub
push
xor
mov
cmp
jg
jbe
inc
movsl
jns
idivl
les
icebp
out
roll
cmpsl
and
addr16
xor
mov
fstps
clc
je
movsl
clc
pop
movsl
xor
ret
adc
mov
pop
test
ret
lgs
or
das
cwtl
cmp
inc
dec
incl
sub
icebp
jge
incb
inc
sbb
pop
test
mov
sbb
pop
outsb
movsb
cltd
outsl
inc
call
out
enter
rol
inc
out
adcb
xchg
sarb
jg
pop
mov
jns
push
push
push
lds
sahf
mov
dec
add
stos
sbb
or
jecxz
aas
push
in
adc
push
js
lcall
cmp
cwtl
sti
fidivl
repz
mov
push
adc
and
jmp
mov
push
pushf
pop
lock
insb
lock
orl
hlt
data16
sub
mov
vandps
lock
leave
jae
xchg
cmp
inc
cmp
mov
daa
pop
jnp
sub
pop
popa
rorl
mov
shll
sti
mov
jae
inc
mov
or
xchg
adc
pop
push
and
notl
stos
mov
push
mov
aam
pop
cmpb
or
mov
sbb
pop
repz
roll
jge
push
das
neg
movsb
scas
add
xchg
cmp
scas
pushf
mov
bnd
outsl
dec
dec
gs
fildll
aam
data16
pop
scas
and
mov
jns
xor
lds
sub
mov
xchg
fs
jns
lret
ret
out
sbb
rcl
fisttpl
jl
cld
inc
arpl
jmp
sub
dec
clc
adc
push
inc
mov
andb
inc
loope
daa
int
xchg
or
negl
movsl
push
and
std
mov
cmc
ja
cli
int
mov
sub
push
cmpsb
xor
stc
mov
mov
push
inc
jmp
pop
in
mov
xor
mov
push
fwait
dec
mov
push
int
cltd
leave
mov
pop
jp
test
out
mov
and
lods
add
sbb
xchg
push
pop
and
cltd
pop
test
bound
fwait
mov
xchg
mov
jne
lea
stos
outsl
and
test
mov
mov
insl
cltd
jne
insl
sub
and
pop
movsl
ret
xchg
and
push
mov
or
push
clc
push
rclb
repnz
daa
xor
sub
add
mov
nop
xchg
lahf
pop
jns
push
sub
adc
mov
xlat
out
push
jl
push
ret
pop
idivb
cmp
std
outsl
adc
roll
mov
pop
and
bound
ret
and
mov
xor
inc
adc
repz
push
jns
loope
lods
test
adc
and
sub
jae
or
jmp
leave
jno
xchg
jecxz
rol
loopne
pop
cmpsb
cld
mov
in
aad
or
jns
pop
sub
int3
or
xchg
std
repz
mov
cld
jg
push
push
js
inc
xchg
mov
fadds
shlb
testl
sub
adc
adc
and
mov
and
subl
cmp
sub
add
fwait
mov
and
jbe
aam
add
cld
add
cwtl
adc
test
je
into
jo
xor
mov
mov
jne
pop
jbe
jmp
movsb
cmpb
xlat
push
ss
mov
mov
pushf
and
stos
mov
mov
in
mov
mov
jne
sbb
shll
or
mov
xlat
inc
int
cmp
rclw
sbbb
fsubrs
xchg
push
pop
lods
adc
stos
clc
test
mov
and
pop
cli
inc
or
testl
lret
lock
out
sbb
pop
xor
mov
mov
lds
daa
pop
sbb
inc
xor
fsubrl
icebp
jo
int
dec
and
xor
xlat
mov
jo
gs
dec
cli
add
clc
into
outsb
xchg
and
dec
ljmp
lret
adcl
js
and
cmp
dec
xchg
jo
adc
shl
or
inc
out
ja
rcrl
nop
xchg
xor
lea
jo
cmp
add
cwtl
xchg
inc
sbb
cmp
push
out
int
ss
mov
enter
mov
js
sub
shl
mov
push
and
adc
rorb
fs
in
sbb
xor
test
icebp
push
mov
movsb
mov
test
dec
outsl
fstpl
ret
cmpsl
inc
int3
xor
arpl
mov
cltd
mov
cmp
mov
divb
mov
fildll
mov
loop
pop
mov
add
lret
push
add
pusha
mov
xchg
cld
dec
outsl
sti
pusha
or
fisubrl
mov
mov
stc
and
scas
popf
lea
push
cmpsb
ss
dec
dec
cs
or
pop
mov
mov
sub
cmp
insl
cmp
push
mov
negb
or
bound
pushf
cwtl
push
xchg
sbb
sahf
mov
fwait
sti
jmp
out
mov
aad
inc
bound
cmp
inc
addr16
leave
loop
insb
in
inc
add
mov
xchg
aad
xor
or
pusha
xor
addb
xor
dec
add
pop
or
or
lods
xor
cmp
enter
inc
bound
jge
stos
in
add
mov
fcomps
dec
push
stos
and
lea
lret
enter
lcall
lock
ss
cmp
fs
cmc
sub
cli
imulb
pop
sbb
mov
xor
inc
mov
repz
inc
ljmp
imul
daa
mov
jae
cmp
push
iret
pop
lds
sub
cli
lea
test
ja
repnz
jmp
xor
xor
dec
mov
lret
nop
jp
test
mov
shrb
cmp
add
push
psubq
rclb
cmpb
sbb
aas
cmpsl
pop
stc
add
adc
jne
cmpl
aaa
fists
add
sahf
xor
or
ljmp
pop
dec
push
bound
movsb
loop
sti
ja
shr
add
outsl
mov
mov
cmp
movsl
flds
fldcw
mov
loope
in
pop
es
adc
repnz
aaa
cli
ds
std
cmp
or
xor
and
pop
lahf
lods
outsl
fcomi
aas
pop
fldt
push
add
xor
in
fimull
js
popa
add
mov
repz
sbb
mov
inc
inc
stos
inc
mov
xchg
pop
mov
inc
pop
icebp
sub
in
fnstenv
enter
imul
lods
addl
sbb
pop
add
inc
inc
sarl
data16
push
dec
and
xchg
inc
loop
repz
jns
mov
pop
lahf
xchg
js
and
lcall
xchg
out
xchg
add
cmpsl
out
pop
iret
rolb
dec
cwtl
lock
jl
repz
dec
push
cmp
outsl
lock
mulb
sub
jle
sub
push
test
push
popa
mov
pop
push
insb
mov
das
dec
aaa
cs
cmpsb
xchg
mov
out
push
movsl
mov
mov
jp
cmc
mov
enter
movsl
push
xlat
push
dec
subl
dec
cmp
mov
movsl
mov
jecxz
hlt
cld
out
inc
out
aad
cltd
xchg
mov
jle
cwtl
jmp
push
iret
push
jecxz
mov
fsts
and
mov
cmp
es
adc
dec
dec
xor
jmp
push
push
in
pusha
cli
pop
cmp
sub
shrl
popa
mov
cmpsb
push
push
mov
sbb
orb
jns
xorl
jo,pn
push
lcall
loope
pop
cmpl
xchg
xor
jb
ficompl
xor
add
sub
mov
mov
xchg
inc
arpl
scas
data16
roll
popf
push
jmp
ja
sahf
lds
ret
in
sub
ret
leave
cmp
and
add
dec
mov
cmp
popa
dec
fwait
push
fdivrs
lock
shl
test
aam
shlb
sub
xchg
imul
sbbb
dec
sbb
out
jle
mov
lds
fsubrs
jle
adc
add
push
jecxz
push
sbbb
cld
jnp
sbb
out
mov
pop
and
push
mov
inc
pop
mov
dec
out
pushf
out
movsl
call
push
cmp
push
sub
repz
fs
jnp
mov
add
popa
xor
pop
pusha
mov
sarb
popf
xchg
int
add
inc
bound
mov
mov
gs
adc
mov
mov
sbb
jge
or
jl
mov
enter
sbb
sub
jle
cmpsb
ss
popa
loope
sarb
xchg
std
bound
mov
mov
sbb
adc
inc
outsb
jo
cmp
mov
in
mov
fwait
lock
push
push
nop
mov
test
adc
int3
sbb
add
xchg
repnz
lea
jo
inc
sahf
fadd
mov
repnz
imul
push
insl
jl
mov
xchg
inc
jae
mov
aas
mov
mov
push
decb
in
testb
std
ret
lods
ljmp
push
jg
enter
mov
mov
into
int
xor
out
dec
bound
dec
cmc
or
cmc
fcompl
adc
or
xor
cltd
sahf
push
lods
les
sbb
shll
popa
fisubrs
or
add
jmp
cmp
in
jno
jb
adc
mov
cmp
inc
test
cld
mov
les
push
mov
fisubrl
leave
fsubs
cmp
stos
outsb
xchg
dec
xchg
int3
cmp
dec
lds
sbb
pop
cmp
xchg
pushf
ficompl
jg
dec
pop
inc
movsl
js
rcll
jge
not
push
fs
cmp
xchg
add
mov
es
pop
stos
in
mov
aaa
fcmovnb
dec
test
sti
mov
xor
cmp
incb
imul
and
in
mov
imul
push
cwtl
adc
packsswb
rcl
rcrb
pop
adc
sbb
in
sbb
orb
and
cltd
jns
out
xchg
aam
in
fucomip
dec
fbld
enter
ss
in
or
jle
repz
jge
mov
add
and
jnp
dec
inc
daa
mov
mov
xor
ja
inc
jae
xor
add
cld
push
push
inc
aas
jle
cmpl
push
daa
adc
loope
out
imul
lahf
nop
push
add
and
pop
loop
rcrb
jne
gs
mov
js
orl
das
mov
scas
ror
mov
adc
das
xchg
mov
adc
stos
dec
jb
data16
jb
sub
ficomps
fwait
push
inc
int3
fldl
adc
pop
les
fld
sub
repz
inc
add
push
lea
pusha
mov
ret
test
sub
lret
adc
add
mov
shr
imul
dec
pop
insb
and
imul
popf
cmp
pop
in
scas
inc
pop
lods
cmpsb
pop
push
fistl
pushf
cmpsl
mov
fsubrl
jnp
bswap
push
pop
sub
lahf
xchg
push
mov
mov
sub
and
scas
es
aam
in
mov
movsb
dec
popa
cmc
daa
fmuls
xchg
or
pusha
adcb
fscale
sbb
mov
loopne
dec
pop
mov
orl
dec
fs
outsl
pop
outsl
div
mov
decb
daa
xor
ret
sbb
icebp
xor
sub
sub
enter
dec
adc
rcl
repnz
sub
arpl
cmp
or
and
dec
mov
rcl
xor
xchg
lret
test
mov
ss
pop
lods
mov
test
out
mov
jle
add
lea
push
mov
and
cmpsl
outsb
adc
xor
xlat
fimuls
sbb
inc
push
outsl
add
lds
xor
int
ds
xlat
enter
xlat
add
mov
xor
mov
adcl
pop
dec
pusha
shr
lcall
gs
test
cmp
js
jecxz
pop
es
cmp
inc
emms
ror
pop
sub
iret
pop
cmp
leave
pop
mov
jb
and
sub
mov
bound
mov
pop
push
jb
mov
pop
movsb
mov
lcall
adc
push
fwait
jle
popa
pop
pusha
push
ret
lahf
addr16
jecxz
rcl
sbb
ret
jle
xor
icebp
outsl
mov
mov
jb
cmpsl
sahf
and
fs
fisubrl
in
pushf
aad
pop
sbb
pop
pushf
mov
inc
inc
adc
or
dec
xor
mov
std
loope
jns
cld
mov
testl
pop
test
xor
ja
jne
lret
addl
mov
xor
mov
lods
in
stos
sbb
movsb
ljmp
cli
push
push
fimuls
dec
add
mov
movsb
aaa
in
fucomp
outsb
loop
jge
sbb
mov
jge
ret
and
outsb
push
gs
cmp
cmp
mov
repz
sub
or
adc
mov
in
pushf
xchg
out
arpl
jb
ss
inc
aaa
jo
sahf
pop
sub
lret
out
add
cld
mov
adc
fildl
hlt
mov
in
sarb
inc
repz
or
stos
insb
mov
out
mov
or
test
jp
sbb
mov
fwait
stos
cmp
fldt
xchg
add
bnd
mov
fldt
pushf
pop
adc
ljmp
xchg
mov
jns
push
xchg
int
int
movsl
lret
int3
mov
inc
ljmp
adc
mov
fldcw
out
stc
lcallw
popa
push
aam
outsl
cli
add
lret
inc
sbb
push
mov
es
pop
ss
adc
imul
insb
lods
icebp
imul
xchg
xchg
dec
insb
jae
hlt
aam
jns
adc
jmp
jp
sub
ss
mov
shlb
pop
sarb
and
test
mov
rcrl
pop
push
jnp
aam
mov
ljmp
push
out
xchg
push
lret
lds
pop
xchg
les
xchg
aad
jmp
test
in
test
xchg
push
adc
clc
fisttpll
inc
pop
jge
jno
and
xor
mov
jo
pop
fsubrp
and
sarl
mov
lret
pop
stc
jno
mov
jae
stos
rcrb
xchg
rcr
lea
sbb
add
mov
or
inc
div
mov
dec
iret
push
push
mov
xchg
cmp
sub
lds
sbb
cmpl
push
sbb
jo
mov
into
repz
notb
imul
inc
xchg
pop
out
jg
fwait
and
adc
lahf
jb
stos
cmp
into
in
mov
xchg
jl
mov
addl
inc
mov
mov
and
sti
mov
scas
sbb
mov
stos
mov
popf
inc
jo
in
lret
loop
jp
fcoml
push
mov
das
sub
test
cmp
lock
add
les
lret
add
pop
mov
lret
std
xchg
decb
pop
inc
leave
addb
xchg
dec
fstpl
out
loopne
inc
or
add
adc
mov
adcl
fstpl
hlt
dec
test
xor
test
and
ds
inc
dec
imul
fsubs
dec
cwtl
inc
test
movswl
std
push
repz
dec
mov
sub
add
in
xorb
nop
or
stos
int3
out
push
cmp
dec
mov
aaa
adc
data16
add
stos
or
push
bound
cmp
movsl
je
arpl
or
insb
fsubs
jl
cmpsl
xchg
call
call
test
mov
sbb
sub
loopne
pusha
call
lods
mov
pop
mov
xlat
pop
mov
insl
adc
pop
jge
push
fiaddl
add
mov
je
mov
push
mov
sbb
push
mov
rcrb
loopne
xchg
add
lret
leave
aad
hlt
loope
xor
sbb
mov
push
jb
pop
lea
aas
push
stos
pop
xlat
aaa
push
add
push
jne
mov
out
outsl
movsb
sub
xchg
movsl
scas
jae
loopne
mov
jmp
xchg
shll
pop
aad
adc
mov
dec
add
imul
repnz
enter
stc
push
int3
out
mov
pop
jp
fnstcw
pop
add
jnp
xchg
out
mov
or
mov
outsl
inc
sub
iret
sbb
mov
into
int
scas
mov
call
outsb
and
xchg
mov
daa
scas
pusha
ret
jmp
jbe
je
sbb
shl
testb
sbb
sbb
pop
aad
dec
je
push
enter
pop
aam
in
sbb
dec
inc
fs
mov
lods
pop
xor
jg
clc
or
sbb
push
test
imul
dec
aam
icebp
xchg
pshufw
mov
mov
push
outsl
lcall
adc
cmp
cmc
xor
fstpl
bound
sbb
fildll
popa
je
jne
test
in
dec
test
jecxz
push
inc
cmpl
daa
subb
les
cmc
xchg
push
cmp
jmp
inc
mov
and
push
jmp
aad
jnp
sub
pop
xchg
cmp
aam
inc
clc
fs
ja
xor
int
or
sub
cmc
dec
push
repz
je
xchg
testb
rcrl
jmp
push
cmp
ljmp
in
sub
icebp
movsl
xorb
xor
jecxz
sub
xor
mov
add
stos
add
pop
daa
pop
cmp
dec
das
out
vmovlps
test
lock
dec
ss
jnp
xor
dec
mov
dec
xchg
inc
push
adc
mov
push
stos
pushf
vpminub
mov
xchg
mov
xor
sbb
xor
fucom
mov
cmc
jb
lcall
or
sbb
outsb
pop
imul
sub
mov
cmp
in
aas
xchg
loopne
adc
lods
clc
or
mov
pushf
cltd
push
test
ss
lea
push
xlat
mov
jb
inc
jno
les
add
jnp
stos
iret
into
repz
add
dec
and
push
add
arpl
or
popf
roll
fistl
arpl
pop
jg
sub
push
jne
scas
repz
pop
jle
daa
fimull
pop
xchg
jl
xor
fisttpll
lea
pop
scas
mov
pop
xor
lret
jae
inc
adc
sub
pop
insl
jecxz
fdiv
ss
xor
in
dec
popf
scas
sahf
imul
jne
cltd
inc
int3
push
xchg
jbe
jbe
or
aaa
stos
xchg
ljmp
inc
jbe
lea
cmp
fadds
push
cld
add
inc
inc
sub
add
xor
lods
sbb
jo
scas
out
cwtl
out
test
dec
add
mov
jecxz
inc
in
cmpb
or
ror
sub
lock
sarl
fldenv
mov
pop
cmp
push
xchg
lret
aad
js
pop
ret
repz
jle
xchg
inc
js
inc
pop
xor
pop
dec
sbb
and
jae
aad
sub
xchg
or
mov
imul
movsl
inc
jae
shr
lods
mov
pop
movsl
shlb
addr16
lock
add
fidivrs
dec
add
or
cmpsl
subl
cmp
bound
sahf
fsub
sbb
fnstenv
sbb
sbb
lcall
pop
pop
sbbb
pop
jno
sbb
ret
cmp
lret
dec
mov
or
inc
fadds
outsl
enter
ljmp
inc
mov
pusha
ret
scas
mov
dec
bound
mov
add
std
inc
aad
out
and
push
xchg
pop
loop
outsl
mov
dec
lods
add
xchg
mov
andb
aaa
xor
enter
dec
pop
sahf
in
xor
inc
push
pop
jbe
fidivl
inc
mov
imul
push
and
out
dec
mov
das
rcrl
ret
arpl
repnz
jbe,pt
mov
push
inc
mov
lods
inc
mov
mov
gs
xor
rcrl
test
inc
push
sub
mov
xchg
pusha
ret
dec
sub
adcl
xor
add
lahf
jns
or
pushf
pop
insb
dec
xor
cmp
mov
push
fcomp
cmp
xchg
sahf
xchg
and
jns
bound
cwtl
push
scas
sub
shrl
dec
sub
add
stc
imul
mov
or
rclb
jmp
repz
pop
bound
xchg
enter
jne
das
jnp
ljmp
decl
insl
sbbb
mov
clc
rclb
dec
mov
fsubrl
cmp
mov
sub
and
push
cltd
out
insb
xchg
andl
mul
fsubs
fcoml
ja
sub
mov
stos
push
mov
mov
add
mov
js
out
and
iret
xchg
and
filds
shlb
fcmovne
ret
movsb
bound
dec
pop
add
outsl
mov
in
dec
mov
and
adc
dec
mov
xchg
mov
inc
fdivl
jle
mov
pop
xchg
xor
xor
mov
pusha
fmuls
dec
jge
mov
cmpsl
lea
push
orb
fnstenv
rol
and
mov
adc
mov
fcompl
push
inc
and
arpl
add
movsb
jle
adc
mov
loope
rorl
or
mov
aas
test
mov
in
in
pop
mov
and
outsl
arpl
lock
mov
jmp
sbb
iret
adc
nop
fwait
sub
mov
push
mov
es
cld
adc
lock
mov
dec
ret
sub
or
pop
mov
mov
push
or
jne
adc
sub
push
scas
aaa
jmp
add
xor
lahf
cmp
dec
lret
mov
lret
dec
xchg
gs
sub
insl
sbb
cld
out
fisttpl
js
in
mov
xor
ja
xchg
movsl
pushf
sub
std
lret
jne
push
sbb
orl
psrad
loopne
dec
cmp
in
hlt
xchg
sarb
inc
fidivs
jmp
pop
xor
add
mov
and
fdivp
in
insl
jne
sbbl
iret
ss
pop
lods
inc
inc
mov
sub
pop
fs
jb
push
lock
add
stc
lods
call
cwtl
xchg
lds
jns
and
mov
or
or
out
mov
xlat
sub
cmp
faddl
repnz
sub
jg
push
test
sbb
scas
cmp
imul
mov
mov
xchg
mov
mov
testb
pop
xlat
pop
jle
stos
aas
gs
out
incb
nop
mov
add
sub
lahf
sahf
js
loopne
jp
cmp
popf
dec
lret
and
sbb
xchg
add
jmp
cmp
dec
xor
imul
js
cmp
jno
or
ja
es
lret
dec
inc
mov
rcl
pop
mov
fidivrl
mov
inc
scas
cmpb
pop
and
mov
push
mov
mov
lret
mov
fs
cmpsl
inc
iret
jecxz
rolb
shrl
leave
sbb
or
push
ss
pop
das
pushf
jnp
sub
aaa
dec
sub
aas
jne
idiv
fnsave
rcl
cs
push
sub
popa
pop
lea
jmp
ror
daa
filds
pop
fisubl
data16
out
or
sbb
mov
out
xchg
lret
lahf
sarb
mov
mov
mov
insl
lcall
frstor
mov
pavgw
mov
inc
andb
dec
sub
mov
or
fwait
daa
add
mov
jnp
xchg
jnp
or
in
shrl
test
xchg
sub
inc
or
xorb
jmp
fmull
inc
mov
daa
fisttps
aam
aaa
add
dec
mov
ret
inc
push
iret
js
xchg
pop
sbb
sub
out
mov
inc
rorb
in
inc
pushf
dec
adc
aad
mov
aad
adc
sbbl
mov
mov
mov
mov
stos
daa
sub
loop
pop
adc
hlt
outsb
sub
loop
xor
sbb
imul
jno
mov
sub
repnz
xchg
ss
adc
dec
incb
add
dec
fiadds
pop
jnp
lods
xor
push
sub
jmp
lret
mov
popl
decl
lods
and
mov
out
sub
in
clc
in
loopne
pop
xchg
add
repz
or
xor
addr16
mov
enter
xchg
inc
add
xchg
pop
push
jno
xor
dec
xor
test
pop
pushf
lds
mov
sarl
jno
mov
mov
mov
fdivl
rcrb
jno
push
mov
pop
pop
pusha
xchg
mov
mov
leave
cmp
test
and
cmp
bound
orl
bound
mov
and
test
cltd
es
pop
inc
rcrl
in
enter
sbb
imul
insb
mov
js
mov
bound
rclb
inc
push
fs
mov
inc
pop
ss
out
icebp
and
stos
scas
push
xlat
xor
xchg
adc
jmp
push
cltd
jecxz
pop
pusha
sbb
bound
jae
mov
mov
cmpsb
xchg
sti
loopne
fisttps
mov
adc
cltd
ds
cmpsb
shl
xchg
sbbl
sbb
cmp
dec
push
xchg
lret
inc
cs
mov
cltd
in
sti
out
ret
xchg
dec
sub
or
iret
and
mov
sti
and
xchg
fisubl
scas
lock
sub
mov
dec
fyl2x
xchg
loope
stc
stc
xchg
fldcw
and
xlat
dec
rorl
xlat
mov
cmpsl
outsl
ljmp
pop
dec
cmpsl
cwtl
in
scas
test
aas
mov
test
sub
sti
pop
cmp
shrl
in
imul
jno
or
jmp
aam
inc
out
lret
mov
repz
mov
addr16
pop
and
and
into
popa
inc
and
pop
shll
mov
add
es
xor
pop
pop
dec
fbstp
orl
pushf
lods
sbb
mov
sub
shlb
xchg
scas
fsubl
sbb
hlt
shlb
fsub
rorl
movsl
lods
faddl
fistps
pop
pop
nop
insb
test
xor
int3
fnop
xor
adc
pop
add
mov
inc
push
jne
cmpl
jns
and
fs
popf
jp
pop
popl
popf
mov
mov
mov
add
hlt
mov
mov
push
jnp
and
mov
jns
xchg
lcall
jg
loop
dec
inc
daa
in
push
nop
insb
inc
pushf
adc
sahf
and
in
xchg
adc
cltd
sar
stos
in
xchg
push
scas
mov
stos
repnz
pop
fsub
addl
jo
inc
cltd
sub
or
cmpsb
stc
pop
or
add
dec
push
aad
lock
and
mov
jl
int3
ret
fs
cmpsl
adc
xor
xchg
dec
pop
jnp
dec
dec
movsl
in
in
bound
dec
push
imul
repnz
jno
out
jb
nopl
mov
insl
mov
lods
fldt
xor
fwait
stos
add
stc
mov
or
or
pop
or
sub
adc
aas
ja
test
mov
sub
cs
in
dec
adc
frstor
fsubs
add
in
jbe
mov
gs
xchg
jno
call
aaa
adcb
mov
std
push
js
sbb
and
movl
mov
adc
xchg
test
push
gs
dec
rclb
mov
jmp
sbb
xor
or
addr16
test
pop
movhps
in
pop
popa
pop
lret
loopne
push
call
dec
enter
or
inc
leave
test
cmp
call
int3
mov
insl
xor
repnz
inc
movswl
push
add
mov
cmp
in
jle
xlat
ror
or
in
push
mov
push
fadds
pop
sbb
mov
xchg
sti
push
lods
imul
test
jg
mov
ret
pop
inc
push
lock
cltd
jl
aaa
inc
or
imul
push
cmp
jl
dec
out
xchg
push
pop
lods
add
lods
notb
stos
mov
movsl
and
and
pusha
or
lea
aam
leave
and
in
cmp
push
jecxz
popa
inc
mov
xchg
inc
dec
pusha
das
adc
imul
jecxz
sahf
or
or
aas
in
push
mov
pop
add
mov
int3
inc
fs
and
mov
loop
inc
push
cwtl
cltd
pop
xor
shrb
js
jmp
out
jle
and
stos
mov
mov
in
push
sarl
xchg
incb
dec
mov
adc
daa
dec
movsb
jb
dec
sbbl
inc
rorb
pop
rcll
add
mov
xchg
sbb
mov
fsubr
mov
jne
cmp
in
cmpsl
shll
bound
or
lret
sbb
out
inc
cs
push
lret
xor
xor
jno
jecxz
into
sbb
insb
mov
mov
inc
mov
mov
xchg
pop
test
pop
push
cmc
push
xor
sub
push
or
insl
outsl
testb
inc
adc
inc
and
mov
jg
jp
and
sahf
shl
rcl
push
jb
inc
mov
adc
fldenv
cwtd
fisttpll
sbb
jno
dec
push
bswap
push
sbb
ret
inc
cmp
fwait
cltd
mov
and
cli
int
jb
daa
ret
daa
xchg
mov
cmp
jno
sbb
in
xchg
jae
les
fadd
pop
aad
sub
outsb
test
jae
push
mov
xor
dec
push
fnstcw
lret
mov
add
inc
pop
stos
adc
std
sub
cmp
sbb
xor
outsl
push
ss
or
cmp
jg
insl
or
jge
dec
aaa
mov
push
xor
pop
sub
mov
movl
inc
mov
test
xor
popf
loop
sbb
ret
cmp
popa
les
mov
out
mov
insl
jp,pn
cmp
fmull
and
mov
jmp
sahf
aam
push
ret
sub
and
cmp
jne
test
in
sti
imul
cmp
out
adc
iret
js
sub
lahf
add
xor
loop,pn
add
push
dec
icebp
xchg
adc
inc
inc
sbb
mov
pushf
or
inc
ret
div
pop
cmpl
fstpl
test
xor
popf
sbb
repz
mov
adc
and
popa
pop
sub
and
adc
cs
shll
jecxz
sbb
jg
lahf
cs
cmc
gs
sbb
cmc
bnd
and
gs
xor
hlt
aas
push
mov
mov
ja
xchg
fsubs
imul
xlat
mov
fnstenv
les
or
sahf
push
add
jg
adc
addr16
ljmp
ret
fwait
fwait
adc
mov
pop
xlat
mov
shll
ficoms
repz
fmuls
outsl
sbb
popa
xor
xor
sbb
cmpsb
ljmp
hlt
push
pop
jge
std
aad
mov
add
movsb
cwtl
loop
sub
lds
movsb
jnp
out
inc
aad
out
lcall
mov
movsl
jo
arpl
je
movsl
mov
jle
and
inc
shll
lret
call
fbstp
enter
dec
ds
cmpb
lret
adc
daa
clc
inc
push
fnstsw
daa
inc
sahf
out
sbbl
pop
aaa
pop
je
sub
push
mov
imul
dec
inc
stos
dec
inc
xor
push
jecxz
cmpsb
or
lret
dec
movsb
xchg
into
pusha
jge
adc
sahf
sbb
add
sub
or
mov
add
mov
xor
or
imul
inc
and
daa
push
leave
sub
sub
and
inc
int
xlat
cs
ficomps
stos
dec
sub
mov
outsb
mov
lahf
scas
or
lods
ret
filds
test
cmp
dec
jecxz
nop
cmp
push
mov
and
or
in
add
jecxz
rcll
add
stos
mov
aaa
aad
jno
dec
jne
mov
imul
mov
sti
pop
stos
pop
js
enter
xor
dec
mov
out
sub
sbb
out
adc
arpl
add
xor
xchg
in
out
adc
xchg
psubusb
ljmpw
or
jb
insl
orb
in
mov
and
pop
gs
add
aas
and
mov
mov
fstl
aam
jmp
in
scas
and
icebp
mov
adc
or
cld
mov
lret
rolb
xor
push
out
jne
shrb
call
mov
push
jae
jns
fnstenv
ret
ret
push
mov
es
orb
nop
mov
add
mov
mov
add
pop
xchg
leave
mov
imul
xorl
or
fs
sbb
clc
and
stos
push
inc
or
pop
adc
push
jmp
pop
fstps
sti
fcomp
push
rcll
jns
adc
fists
jge
adc
sub
aaa
aas
dec
mov
sarl
movsb
jae
mov
imul
or
adc
add
mov
jno
idivl
jge
inc
int3
jge
and
pusha
mov
in
and
jne
or
mov
mov
sub
daa
mov
push
pop
mov
inc
in
jg
pop
sbb
stc
fxch
xor
icebp
sub
js
push
xchg
in
pop
mov
mov
pop
test
aad
and
fdivl
mov
adc
dec
insl
and
out
cli
icebp
push
inc
mov
ljmp
aaa
push
arpl
outsl
fcomp
fwait
add
cwtl
jbe
mov
insl
xchg
jg
rcr
mov
lret
dec
or
pop
xor
gs
lcall
pop
movsl
imul
dec
lods
imul
sbb
push
push
lcall
sub
pop
and
addr16
mov
jecxz
ficoms
jns
jp
xchg
stos
inc
mov
das
bound
in
std
xchg
bound
sub
and
mov
out
pusha
inc
dec
mov
cmp
cli
adc
jne
inc
loope
out
fs
sahf
mov
stos
decb
jo
cmpsb
mov
xchg
leave
push
sub
adc
jne
popa
inc
add
mov
jg
cmp
xchg
mov
dec
sub
dec
fwait
cmp
cld
insb
cli
dec
mov
rcrb
and
cwtl
out
cmp
add
adc
pop
scas
or
test
mov
fs
and
mov
mov
add
inc
cmp
jmp
xchg
mov
jae
sbb
fisubs
pop
sbb
jecxz
in
pop
xchg
repz
inc
sub
adc
xchg
mov
nop
xor
lea
jge
mov
xchg
mov
xchg
in
jmp
jnp
and
ret
ja
ds
mulb
nop
or
fisubs
mov
mov
inc
sti
cmpsl
outsl
push
sarb
sub
pop
push
adc
mov
mov
mov
xorl
jp
sub
shrl
adc
mov
idivl
mov
fwait
je
ds
mov
xchg
pop
outsb
jmp
push
mov
inc
jecxz
les
mov
push
out
mov
jge
movsb
or
mov
or
adc
pop
imul
sbbb
or
sbbl
mov
xchg
shlb
inc
xchg
movsb
ss
pop
mov
pop
in
mov
cmc
add
idivb
xorl
out
fdivp
lret
les
in
loop
fadds
aad
lds
cmp
sar
in
push
jno
hlt
bound
unpcklps
jecxz
mov
mov
adc
repnz
insb
mov
imul
clc
push
dec
jb
jnp
and
dec
inc
sub
mov
mov
add
xor
xchg
cmp
push
jne
pop
aad
lahf
popf
enter
cmp
insl
xchg
dec
add
sbb
xchg
fisttpll
mov
mov
leave
sub
inc
mov
inc
int
jmp
sahf
pop
pop
cmp
sbb
mov
mov
sub
xor
cmpsb
cmp
loopne
or
movsb
ret
push
xor
out
cmpl
adc
sbb
sub
das
dec
lret
dec
dec
jnp
mov
or
jne
or
or
lds
jp
int3
testl
push
inc
mov
mov
dec
nop
xor
jecxz
xchg
roll
xchg
ds
inc
repz
imul
and
es
dec
pusha
insl
jne
cmp
repnz
aas
icebp
rcl
xchg
fwait
fs
inc
xor
mov
arpl
jnp
sti
pop
push
es
xor
cltd
add
andb
jp
pushl
leave
cwtl
mov
sbb
fsubs
divl
push
cmp
jns
xor
je
adc
lock
mov
xchg
lcall
or
in
mov
mov
cmp
push
jmp
pop
lahf
loop
cmp
movsl
push
pop
jnp
cwtl
xchg
inc
mov
cmp
jns
sub
jns
xchg
test
stc
es
dec
push
cmpsl
daa
push
inc
mov
inc
sbb
stc
lods
fimuls
pop
or
hlt
jbe
mov
sub
pop
lcall
clc
lret
jmp
add
and
gs
imul
inc
cld
frstor
lret
sbb
pop
mov
jae
jnp
cltd
push
fsubl
lcall
sbb
sub
dec
adc
mov
ret
adc
out
je
sub
mov
xchg
pop
adc
addr16
inc
rcrb
sti
cwtl
mov
imul
cmp
shr
adc
mov
xchg
adc
imul
jne
push
pop
outsl
addl
cmp
jmp
roll
xchg
hlt
insb
stos
pop
sar
cld
shrl
mov
pop
out
lret
pushl
rcll
dec
jne
je
jbe
push
fadds
or
aaa
sbb
jo
push
push
lock
stos
sbb
xor
xchg
cs
pop
and
shll
testl
add
insl
cmp
mov
sub
dec
in
bound
movsl
cs
cltd
dec
sbb
scas
in
sub
dec
es
cwtl
fildl
mov
pop
stos
js
orb
xchg
xor
jae
movsb
out
sub
movsb
push
aaa
fs
shlb
lds
adc
fiaddl
movsl
outsl
jg
out
mov
ret
cmp
sahf
sub
test
push
icebp
in
cmp
add
inc
inc
fiadds
fwait
leave
mov
inc
repnz
dec
outsl
fistps
dec
sahf
cltd
cs
dec
jae
pop
sub
test
xor
repnz
mov
cmp
test
pop
sarb
jl
lods
mov
xor
ror
lods
push
jmp
in
push
fnstsw
cld
aam
jne
xor
sti
cltd
rol
sti
push
adc
popf
je
stc
inc
loopne
repz
dec
scas
pop
nop
or
xchg
test
add
cmp
icebp
jno
xchg
xlat
jns
push
mov
fldenv
add
fnsave
adc
cli
add
mulb
add
xchg
leave
mov
out
jg
mov
aad
addr16
orb
bnd
xor
test
xchg
das
ss
lods
dec
pop
lret
pop
lahf
test
out
adc
cld
push
insl
mov
shll
dec
sub
ret
out
adcb
in
xor
push
jo
jp
xor
mov
cmp
ss
xor
mov
mov
shrl
popa
movsl
or
inc
dec
lahf
push
ror
mov
fs
loopne
das
lods
idivl
stos
icebp
outsb
movsb
daa
js
test
hlt
gs
movsb
add
push
ret
dec
jmp
insl
cmp
xlat
mov
lods
shlb
mov
mov
push
and
nop
inc
out
inc
sbb
inc
push
jmp
or
mov
fisubrs
addr16
mov
prefetch
std
clc
jno
sti
pop
rcl
add
and
or
mov
jp
mov
ret
insl
outsl
pop
mov
xor
es
dec
mov
pop
aaa
mov
jb
clc
cli
nop
and
nop
jg
add
jae
mov
std
sbb
pop
cld
dec
dec
push
inc
jle
sbbl
mov
call
fs
jmp
sub
test
mov
and
scas
outsb
sbb
jecxz
lock
lea
std
ret
cmp
pop
mov
xchg
out
sbb
sbb
jp
stos
or
out
xchg
imul
mov
sbbl
fmull
xor
mov
bound
inc
nop
pop
outsb
jle
sub
push
add
jp
mov
push
orb
imul
pop
test
pop
push
and
jmp
or
lods
sahf
outsl
jnp
cltd
pop
mov
mov
sar
inc
sar
pusha
jge
cmp
cmp
pop
mov
pand
push
rcrl
adc
sbb
scas
shlb
jg
sbb
push
jge
shrb
in
xor
ds
roll
mov
je
xor
in
sub
jmp
jbe
xor
mov
fwait
inc
adc
adc
pusha
mov
dec
icebp
inc
jbe
pop
add
adc
xchg
aaa
leave
cwtl
and
jl
push
es
negl
mov
and
sub
push
stc
pop
jb
sarb
mov
mov
add
cli
pop
jae
and
dec
loop
cmp
pop
xchg
xor
mov
stos
fsubrl
mov
sub
or
cs
or
adc
ja
mov
and
jb
push
mov
out
stos
cmpsb
jbe
shll
push
push
mov
daa
sbb
xchg
shrb
cmpb
fldenv
cmp
mov
gs
inc
pop
idivb
pop
push
movsl
mov
dec
std
jnp
pop
and
mov
int
lods
push
sub
mov
dec
test
rcll
sbb
xchg
mov
mov
cmc
insl
jb
mov
mov
out
mov
and
fcoms
mov
pop
movhps
and
adc
xchg
test
andl
orb
mov
jae
mov
lret
dec
jbe
dec
pop
adc
add
xlat
dec
lock
jle
pushf
xor
repz
insb
out
and
ja
loop
pmaddwd
lock
dec
ljmp
cwtl
scas
movsl
into
pop
push
mov
sbb
cmp
mov
orl
pop
test
jecxz
aam
add
rcr
rclb
mov
js
ret
cmp
mov
test
xchg
add
xchg
ret
adc
mov
xchg
int
int3
mov
add
int
pusha
leave
or
dec
dec
lods
mov
mov
sarl
sbbl
xor
xorb
push
or
pusha
mov
mov
push
daa
test
xor
mov
jb
testb
mov
push
mov
cmp
mov
jmp
out
enter
lods
jbe
xchg
xor
mov
mov
movsb
jecxz
enter
adcb
xor
ret
out
mov
jo
dec
jge
lds
icebp
push
fildll
jb
dec
push
andb
jnp
repnz
mov
insb
lods
xchg
roll
aad
imul
pop
adc
jge
dec
fdivs
dec
dec
cmp
dec
cmpb
mov
jmp
mov
shr
push
rcrl
cmp
out
ja
or
push
xchg
mull
mov
mov
xchg
mov
ss
lret
test
mov
mov
jp
enter
inc
or
inc
cmc
mov
outsl
push
in
pop
mov
aaa
lds
leave
push
aas
in
sub
mov
jmp
add
xchg
ljmp
mov
sub
adc
mov
mov
ret
mov
dec
in
pop
mov
add
movsb
addr16
test
mov
mov
mov
outsb
iret
mov
sub
push
pop
mov
imul
stos
in
popa
shll
cmpsb
loope
daa
fwait
push
fsts
lret
repnz
xorl
test
mov
nop
or
pusha
shrl
or
orb
mov
fcomps
ud1
push
cmpsl
cmpsb
mov
aas
jge,pt
mov
aaa
pop
cmc
xor
roll
jle
into
out
call
repz
out
bound
int3
fs
sbb
fisttpl
lret
mov
out
js
loope
xor
cmp
mov
xchg
xor
out
xchg
cmp
ds
mov
into
jle
shrl
fisubs
dec
lea
notb
and
xchg
decb
addl
inc
call
adc
cwtl
rorl
add
fdivr
xchg
push
leave
jmp
or
jne
ret
cltd
rol
cwtl
mov
pop
cltd
cld
mov
fcmovne
push
mov
cmpb
mov
arpl
arpl
popf
in
or
daa
jecxz
mov
movsl
pop
pop
inc
outsl
jb
sub
mov
jp
in
adc
or
xor
js
jecxz
rcrb
adc
fwait
aaa
adc
pop
inc
jo
andb
sbb
push
xchg
fbld
jmp
xchg
adc
jae
in
mov
mov
mov
mov
pop
pop
add
xor
rolb
into
xchg
pushf
out
jge
push
std
ljmp
mov
nop
movsl
leave
in
and
scas
adc
rcrb
mov
sbb
enter
mov
fdivrl
cmp
add
mov
mov
movsb
mov
out
push
mov
xor
pop
push
cs
sub
jbe
in
fwait
cltd
addr16
shlb
sbb
aas
mov
rolb
or
fcompl
shll
daa
cmp
and
cli
jmp
mov
mov
adc
mov
push
dec
dec
jo
cmp
imul
aas
jge
inc
adc
mov
jmp
add
xchg
and
bound
and
xchg
cltd
xchg
gs
out
xor
and
inc
or
pop
mov
push
aas
jnp
rcll
push
fcmovnbe
mov
test
cmp
test
sub
mov
push
fs
ja
add
mulb
inc
sub
or
pop
cmpsl
mov
jo
fisttpl
sbb
je
xlat
jle
jo
pop
lds
mov
mov
dec
mov
rcrl
mov
mov
mov
orb
pop
adc
loopne
lcall
push
and
cmpsb
mov
pop
ss
pop
in
ja
mov
push
cld
inc
rorl
pop
sbbl
mov
jo
adc
int3
into
outsb
dec
lds
fiadds
cmp
or
mov
leave
sub
mov
call
into
dec
lret
sub
mov
aaa
imul
mov
je
and
cltd
imul
js
scas
sahf
repz
sbb
or
test
lret
pop
gs
pop
mov
dec
sub
ficoml
out
push
mov
mov
pop
sub
in
sbb
and
pop
add
and
stos
test
cs
nop
dec
inc
roll
popf
dec
loope
inc
std
sbb
sub
add
and
pop
loop
dec
hlt
jp
js
cmp
mov
add
in
push
sbb
int
mov
dec
ret
sbb
shrl
inc
cmpsl
lcall
dec
sqrtps
mov
sti
shrl
int3
aaa
and
and
scas
loop
push
aaa
loopne
mov
jl
cmpsl
pop
mov
and
push
mov
aas
cs
adc
stos
mov
xchg
mov
sbb
mov
pop
and
pop
mov
icebp
xchg
fldenv
mov
adc
ljmp
enter
int
add
test
fxch
xchg
dec
mov
sbb
mov
lret
int
fmuls
or
push
sub
test
jo
cmpsb
sti
aas
push
popf
mov
mov
cs
sbb
jmp
test
xor
jne
pop
xchg
mov
int3
and
jmp
lods
cmp
repz
and
inc
fcoms
xlat
xlat
in
lods
push
or
sahf
or
and
aaa
xchg
sbb
aaa
pusha
pop
stos
enter
nop
push
dec
sbb
sub
lahf
sub
push
dec
mov
inc
stos
mov
adc
dec
jnp
adc
xchg
or
push
push
outsb
lahf
popa
mov
lahf
adc
inc
mov
out
mov
adc
or
xchg
mov
push
enter
sub
pop
sub
leave
push
jmp
jnp
mov
sbb
and
insl
sub
rolb
pop
inc
adc
dec
movsl
movsb
inc
lods
loopne
enter
fwait
and
je
mov
mov
ljmp
aaa
in
inc
popa
mov
inc
icebp
sarl
loope
dec
fimull
mov
dec
mov
mov
lds
movsl
jl
xor
push
adc
dec
cmp
push
inc
outsb
push
test
jb
cmp
cli
mov
dec
jnp
daa
cld
and
dec
cmp
mov
lea
dec
ljmp
add
inc
repnz
repnz
xchg
dec
dec
push
cmp
outsl
daa
fsubr
sub
sbb
mov
das
push
add
ret
es
js
repnz
xchg
aas
or
sbb
cmpsb
test
xor
jno
jno
int
xor
cmc
iret
sarl
xor
stc
cli
xor
js
fcomi
push
and
test
test
lahf
testl
sub
pop
inc
push
mov
cmp
out
xor
data16
or
push
out
std
inc
and
cmpl
fisttps
inc
int
int
mov
movsl
or
lods
pop
push
cld
jl
rcrb
ljmp
cld
xchg
sbb
pop
dec
popa
pop
rcrl
cmp
adc
inc
add
stos
lret
mov
mov
mov
inc
js
pop
pop
pop
and
mov
popf
sub
or
mov
lret
adcb
fldl
ret
push
and
or
loope
lods
xchg
int
les
fwait
push
push
movsl
xchg
push
sbb
je
aas
mov
insl
fldenv
add
cld
bnd
inc
mov
jle
add
jns
addb
mov
adcb
enter
shlb
fmuls
sbb
xchg
sahf
push
xor
inc
mov
add
dec
and
iret
mov
insl
dec
add
xchg
xchg
stc
ja
out
popf
scas
ljmp
mov
filds
fisubrl
mov
inc
push
mov
or
jg
lret
sub
test
mov
cld
gs
inc
and
pop
sar
cmc
cwtl
jle
test
sub
jae
inc
cmc
mov
sbb
mov
clc
pop
push
xor
adc
ret
cmpsl
imul
mov
mov
loope
inc
and
test
nop
inc
fsubr
sbb
lret
cmpsl
roll
out
sbb
pop
mov
fwait
pop
mov
lret
int
jne
mov
fisubl
repz
push
push
lock
or
std
jle
mov
and
push
mov
mov
lcall
push
dec
inc
xchg
cmpsl
add
fidivrl
push
popa
dec
jecxz
inc
cmp
lods
jnp
or
sbbb
push
cmp
out
cmp
jno
or
das
push
add
pop
mov
add
lods
ds
ss
movsl
push
xchg
mov
pop
pusha
adc
add
mov
xlat
adc
sub
out
pushf
leave
dec
das
push
insb
leave
push
and
mov
test
lds
mull
or
and
and
mov
out
aad
mov
jns
mov
pop
mov
mov
push
out
inc
pusha
sbb
ljmp
aaa
fdivrs
or
add
cmp
pop
jnp
adc
xor
mov
loopne
ljmp
mov
mov
and
scas
movsb
imul
outsb
pusha
movsl
out
js
jb
lret
insl
or
rolb
push
stos
push
xchg
and
leave
jo
dec
jle,pt
imul
lds
les
mov
pop
xor
das
fdivrp
aam
das
repz
mov
mov
stc
mov
icebp
jl
cltd
dec
mov
fsubp
incb
xchg
push
xchg
mov
inc
lahf
jl
push
xor
or
movsl
arpl
sti
mov
mov
sbb
nop
push
add
sahf
stc
adc
adc
scas
popa
gs
mov
mov
ret
clc
sub
mov
test
add
mov
jg
pop
sub
lea
out
test
mov
in
movsl
or
pop
xor
out
cvttps2pi
call
outsb
mov
xor
inc
in
mov
pop
filds
cmp
insl
pop
and
mov
pop
rolb
mov
insb
jns
mov
stos
pop
lds
add
outsl
sub
inc
inc
xlat
mov
cmp
fstpl
sub
in
stos
sub
adc
cld
push
das
scas
xchg
jecxz
jg
ret
dec
sbb
movsb
mov
int
xchg
push
xor
mov
jl
add
add
in
and
and
arpl
arpl
bound
pop
cmp
dec
lds
repz
test
cmpsl
inc
movsb
add
test
iret
adc
fxch
andl
xlat
lcall
lea
pop
pop
pop
aas
icebp
adc
xchg
fwait
adc
pop
cmpsb
into
scas
sbb
add
adcl
cwtl
dec
out
lds
jmp
test
jle
imul
cmp
lcall
lods
aaa
and
or
inc
cltd
dec
js
and
insl
mov
dec
lods
out
hlt
mov
dec
lahf
jge
leave
stos
out
or
lock
pop
cmp
aad
and
mov
push
out
mov
fstp
cltd
cmp
cmpsl
loopne
ss
adc
mov
or
bound
aaa
dec
das
dec
fldenv
sub
xchg
xchg
mov
cmp
dec
mov
inc
mov
daa
inc
push
adc
aas
int
adc
inc
mov
mov
es
xor
jno
cmp
push
loopne
leave
add
aas
mov
mov
mov
testl
decb
xchg
or
jo
push
add
lods
mov
shll
adc
inc
jmp
pop
outsb
inc
jl
pop
scas
mov
fsub
cltd
testl
in
popa
outsb
lods
xor
adc
loopne
push
nop
inc
xor
xchg
mov
mov
xchg
or
das
stos
sbb
cli
and
lcall
xor
sbbb
mov
cltd
cmp
sbb
xchg
nop
jne
mov
add
inc
cmc
in
adc
add
sbb
dec
xchg
inc
xlat
mov
xor
ss
sahf
inc
pushf
xchg
fldcw
add
aam
xchg
sub
xchg
test
in
in
cld
out
sbb
fwait
setl
inc
adcb
mov
enter
sub
push
push
es
cmp
push
jns
ds
lcall
mov
dec
add
pop
js
mov
push
shll
push
jecxz
mov
jmp
inc
fimull
adc
xor
or
push
xor
xchg
xor
jg
insb
mov
jo
mov
inc
xchg
mov
pop
out
mov
ja
sti
add
xor
xor
dec
cs
pop
andb
int3
adc
pushf
sub
cmp
dec
fnstcw
and
int
lahf
in
fnstcw
pop
jns
mov
fstpt
xor
or
cmp
rol
pop
sbb
out
push
push
push
pushf
ss
or
lahf
mov
mov
mov
stc
cmpsl
test
xlat
add
aad
sub
ficoms
add
pop
fwait
pop
lods
mov
xchg
xlat
aas
adc
xchg
shlb
or
lret
std
lret
mov
daa
xor
lahf
xchg
cmp
notb
shlb
lret
and
sbb
cwtl
lret
mov
push
add
popf
inc
mov
xor
imul
test
sbb
push
imul
int
lret
stos
test
jl
and
shr
sbb
or
les
xchg
rol
dec
popa
les
test
icebp
jmp
out
push
push
push
adc
sub
test
outsb
jae
in
sub
fadd
inc
imulb
lds
mov
mov
mov
je
aam
jge
dec
arpl
add
fmul
addr16
jmp
xchg
xchg
lock
enter
or
xor
pop
and
dec
cmp
pop
adc
gs
xchg
aad
cltd
rorl
call
popf
push
scas
or
pop
jae
ljmp
repz
das
jmp
nop
dec
lea
cmp
out
icebp
lahf
jg
test
iret
inc
mov
stos
dec
pop
sahf
std
or
mov
insb
js
pop
mov
xor
adc
lahf
gs
inc
daa
cli
pop
mov
push
das
aas
inc
jl
lea
push
cltd
mov
push
jmp
xchg
loopne
fisttps
sbb
sbb
ror
inc
daa
cs
lcall
ds
adc
push
inc
shrb
cmp
sub
shr
xor
pop
nop
decl
in
dec
mov
stos
into
jmp
mov
cmp
icebp
imul
lods
jge
lahf
ja
or
inc
mov
and
or
fwait
xlat
fwait
icebp
cmpb
xchg
sahf
or
aad
sub
cmpb
lret
pop
pusha
jmp
mov
push
scas
jno
je
out
sub
call
pop
xchg
icebp
push
outsl
mov
es
dec
pushf
fcomps
push
add
std
arpl
or
xor
imul
repz
pop
mov
repnz
mov
test
into
test
out
xor
loopne
add
loope
out
dec
mul
ret
mov
lret
inc
inc
ja
pop
jmp
fwait
and
add
jg
sub
or
or
and
lock
in
inc
hlt
mov
and
je
inc
icebp
loopne
js
sbb
xchg
movsb
movsb
jb
mov
dec
sbb
cmpsb
jg
shlb
lret
int
pop
hlt
inc
fisttpl
mov
inc
mov
mov
incl
idivb
xor
shll
sub
test
mov
jle
sbb
lea
jns
mov
popf
push
sbb
cmp
inc
pop
loopne
fisubrs
adc
stc
jge
aas
int3
in
shlb
push
dec
xchg
xor
inc
inc
dec
cmp
push
daa
mov
jno
add
sbb
mov
aas
cmpsb
fwait
or
inc
aaa
and
ja
mov
pop
jl
mov
mov
or
imul
inc
imul
sub
adcl
mov
lcall
mov
mov
xchg
jl
sub
sub
stc
aad
mull
dec
mov
ret
imul
insl
daa
cmp
iret
sub
inc
cmpsb
movsb
inc
outsb
rcrl
mov
shrb
das
cmp
xchg
push
or
fstps
out
or
clc
jns
xchg
pop
mov
mov
cltd
pop
sahf
ds
inc
ljmp
inc
in
enter
xor
sbb
add
add
pop
inc
jae
or
adc
add
addl
ss
scas
lods
cmp
enter
repnz
ret
popf
dec
jl
cmc
popf
cld
xchg
sub
mov
sub
fnsave
jb
jecxz
scas
cmp
je
add
inc
ret
repnz
movsl
xchg
lea
mov
jle
xor
lahf
sti
fmull
mov
sbb
js
lret
fsubs
and
inc
pop
addr16
ret
shrb
mov
sbb
add
jnp
stc
divb
mov
nop
mov
scas
dec
fsubrs
inc
test
adc
rorl
cmp
int3
inc
out
rol
dec
add
cmp
nop
jne
bound
mov
cs
sub
outsb
out
aad
scas
cmp
mov
push
outsl
test
lods
bound
iret
fxch
cmc
test
int
adc
sbb
lahf
ror
fidivl
mov
ss
push
pop
stos
mov
push
ljmp
jo
push
jae
sbb
andb
push
add
mov
fbstp
fstl
sub
inc
sbb
insb
jmp
clc
ja
inc
in
sbb
jne
push
inc
aas
cltd
dec
pop
imul
cmpsb
insl
ja
cmpsl
sbb
loop
xlat
shl
mov
addr16
dec
mov
adcb
out
xchg
stos
int
mov
rorb
divl
or
movsb
cmp
add
test
push
in
xlat
into
in
cs
inc
mov
push
or
inc
orl
repnz
add
dec
testb
xchg
shlb
jbe
addr16
cld
xchg
push
mov
fs
xor
adc
jmp
push
xor
mov
inc
out
pop
jae
add
subl
mov
add
xchg
hlt
imul
jmp
sbb
pop
and
push
push
or
movsb
mov
out
inc
add
clc
outsl
inc
adc
or
add
pop
lahf
jl
jle
jle
dec
test
inc
mov
loop
es
outsl
push
mov
ret
fwait
jns
adc
inc
mov
or
jg
pop
xor
add
lds
jb
imul
mov
out
movsl
in
sub
dec
lcall
jle
les
in
push
pop
mov
or
mov
popf
in
xchg
stos
stc
loopne
scas
add
movsb
mov
mov
andb
jne
lods
inc
icebp
and
pop
sbbb
iret
mov
fcoms
repnz
fstpt
dec
out
pop
aam
lods
inc
xchg
add
in
in
jno
add
leave
mov
and
shrb
jecxz
int3
xchg
mov
mov
inc
xchg
les
push
dec
cld
xchg
sbb
mov
clc
call
lret
xchg
in
mov
add
fbstp
mov
jns
insb
insb
dec
outsl
in
std
dec
and
je
mov
mov
mov
fildll
ds
pop
push
mul
nop
sub
xchg
int3
sub
rorb
repz
in
add
sub
xchg
ficomps
jg
fidivs
push
fiadds
scas
jae
movsl
ret
hlt
mov
push
mov
addr16
adc
sub
mov
sti
pop
shrl
pop
cmpsb
jno
leave
ret
jne
push
adc
bound
add
and
pop
push
and
fstps
jg
popa
inc
xor
mov
cwtl
iret
mov
pop
rcl
ds
push
mov
dec
jnp
mov
xor
stos
iret
lahf
sub
imul
in
cmp
das
sub
subb
rclb
in
adc
xchg
push
mov
push
ficompl
nop
and
lock
shr
add
mov
mov
dec
fcompl
out
mov
jp
arpl
movlps
fstpt
xchg
pop
mov
inc
mov
test
jg
lea
or
add
sbb
into
hlt
jle
or
lret
inc
rcrl
cmp
pop
pushf
data16
xor
in
xor
sub
js
mov
test
mov
sub
cmp
daa
ljmp
xchg
push
loop
sahf
inc
dec
xor
push
aaa
ds
pop
sbb
rolb
mov
movsl
decb
movlps
mov
mov
scas
pop
popa
sbb
jl
int3
in
and
pop
test
movsb
sti
rorl
imul
ret
rclb
sbb
jne
repz
adcl
jne
cltd
pop
hlt
dec
out
mov
popf
inc
mov
add
loopne
mov
and
xchg
js
sti
add
insb
jmp
sub
addl
adc
ja
les
in
aad
aaa
ret
add
pop
cmp
imul
adcb
mov
out
dec
add
dec
shrb
test
test
adc
mov
gs
add
sahf
fadds
xchg
push
mov
int3
out
cs
adc
stos
orb
mov
mov
aad
sub
mov
enter
pop
sub
xchg
dec
js
out
stc
in
push
sub
cltd
repnz
sahf
push
lods
rclb
sbb
test
dec
movsl
dec
jg
mov
mov
inc
sub
ds
jmp
leave
jl
mov
cmpsb
in
mov
lcall
push
sbb
jl
loope
mov
scas
xor
es
ret
cmpsl
push
pop
push
add
inc
loope
xchg
cld
xor
cmpl
movsb
in
xor
xchg
jb
jp
jne
arpl
loope
pop
xor
mov
es
and
mov
mov
pushf
int
or
fwait
test
mov
jle
pop
inc
test
sub
fcoml
push
arpl
pop
sbb
outsb
inc
out
lds
es
ds
push
insb
mov
sub
mov
pop
xabort
add
sbb
shrb
lret
and
fldcw
aad
cmc
mov
push
sub
sar
fimuls
clc
pop
sub
cwtl
lret
xchg
add
pop
dec
or
jae
test
pop
mov
jg
std
xchg
filds
mov
test
cmp
cld
jecxz
xchg
push
test
mov
int
testb
pop
js
sub
rolb
pop
sbb
sub
push
pop
mov
in
mov
call
fadds
pop
leave
cmp
add
fsubr
push
mov
pop
pop
inc
in
or
jnp
lret
outsl
test
fidivs
mov
sbbl
cmc
jmp
movsl
stos
add
out
jo
cmpsb
xorl
sub
push
cmpsl
pop
int3
push
daa
mov
je
adc
cld
mov
out
xchg
add
cld
sub
ret
push
lret
fdiv
mov
add
add
mov
and
pop
mov
dec
jl
popa
xchg
or
mov
cmp
mov
dec
cmpsb
xchg
inc
cmpsb
jbe
push
xchg
cmp
stos
inc
hlt
test
pop
gs
mov
add
fwait
add
mov
mov
test
push
hlt
dec
ret
inc
rorl
cltd
fstpt
cmp
pop
pop
and
dec
adc
test
add
std
popf
dec
pop
adc
adc
jecxz
out
outsl
mov
adc
xor
inc
xchg
sbb
hlt
add
testl
or
cltd
push
sbb
xchg
pop
insb
sarb
xchg
or
cmp
dec
bound
nop
xlat
mov
dec
adc
js
xorb
das
mov
xchg
mov
lods
mov
push
jmp
addr16
jecxz
mov
loopne
in
push
adc
mov
rorl
sbb
mov
loopne
push
jne
lods
or
movsl
loopne
lock
lret
cmpb
jp
mov
and
or
fimull
push
icebp
push
fisttpl
dec
cli
jl
fsubl
cmp
fwait
cmp
cmp
and
pusha
push
or
add
or
mov
mov
rcll
push
js
jnp
mov
xchg
xchg
sbb
stos
out
test
pop
shll
inc
cmp
jge
ljmp
mov
sahf
out
adc
adc
inc
aas
mov
and
jl
jge
cmp
clc
inc
add
adc
call
jp
pop
or
push
jg
push
ljmp
fmuls
aad
lcall
fisubrs
mov
and
ret
sbb
mov
and
or
sbb
cs
repz
sahf
push
cmp
call
in
jb
fistps
dec
and
in
mov
mov
outsl
or
push
cmp
and
out
and
push
orl
das
sub
insl
jge
lret
mov
jbe
enter
insb
jne
cmp
inc
sbb
popf
mov
insl
imul
xlat
dec
sub
cmp
scas
out
inc
dec
mul
clc
inc
outsb
dec
rclb
cmpsl
cmc
sarb
je
lock
je
mov
ds
pusha
sarl
test
sbb
lods
iret
rcrb
jne
fwait
dec
mov
incl
pop
jnp
pop
sbb
dec
sub
fcompl
add
mov
inc
es
js
push
mov
or
cmpsb
lea
adc
cmc
pop
rorl
sub
pushf
loope
adc
jo
dec
mov
scas
pop
dec
jne
xchg
ds
enter
xchg
jb
lret
mov
cmp
outsb
or
or
movsb
push
aam
push
sarl
jle
mov
hlt
inc
cmp
cmp
stc
mov
pop
sbb
mov
pop
push
iret
fnstenv
inc
icebp
or
stos
lret
enter
sub
into
or
or
pop
sbb
lds
push
pusha
adc
jb
inc
vxorps
adc
flds
mov
hlt
rol
sarb
pop
pshufw
in
lret
xor
jns
xchg
pushf
lret
dec
pusha
adc
add
sti
pop
jae
cmp
xor
sahf
xchg
addl
sbb
mov
daa
test
dec
enter
je
add
add
jmp
jmp
push
lock
jmp
cmp
or
into
add
mov
dec
push
fldt
fdivs
mov
or
push
lahf
daa
or
lahf
add
and
mov
sub
shll
pop
in
mov
insl
dec
mov
hlt
sub
dec
sti
test
ret
fldl
mov
cmc
push
outsl
lds
mov
movsl
pop
fs
out
in
xchg
pop
dec
jbe
nop
scas
sbb
pop
fidivrs
add
xor
xchg
add
jge
out
xchg
cltd
aad
mov
iret
cmp
mov
loop
cmpsb
push
lret
xor
dec
adc
shll
outsl
push
loope
sub
dec
push
sbb
lock
dec
push
or
cs
ds
out
sub
lds
jne
mov
push
lcall
imul
data16
push
sub
cmp
gs
mov
icebp
xchg
jecxz
cmc
pop
xor
mov
shll
mov
mov
push
adc
subb
cmp
adc
sahf
lods
ds
cli
out
adc
pop
cmp
xor
adc
xor
jno
add
inc
add
int3
not
idiv
dec
or
push
cwtl
jmp
insl
or
cmc
sub
repnz
mov
popf
dec
xorb
std
pop
pop
cmc
mov
or
cmp
aad
inc
adc
cmpsl
scas
sbb
xor
cmp
popf
jnp
mov
std
sbb
sahf
lock
test
repz
add
mov
out
aas
jge
in
leave
fs
fs
cmpsl
popf
jbe
shlb
jp
cmp
lret
test
xchg
or
lcall
dec
xor
subl
enter
xchg
add
mov
cmp
inc
fwait
add
or
jge
fcompl
pop
outsb
aam
mov
test
inc
mov
fldt
std
mov
imul
cmp
stc
jne
scas
fiadds
lods
pop
into
xchg
sbb
jge
insl
out
xchg
dec
cld
dec
mov
sbb
sub
cltd
les
popa
jae
ss
pop
pop
push
sbb
out
xor
add
je
adc
push
mov
mov
mov
stc
loope
add
fsubr
mov
push
pop
fidivrl
mov
inc
sub
ja
aad
fildll
jne
cmc
push
xor
xor
push
call
mov
cli
bound
inc
add
shr
pushf
leave
mov
cmpb
sub
mov
int3
stos
mov
jne
movsl
test
insb
mov
inc
repz
daa
mov
dec
or
and
push
pop
popa
push
inc
mov
out
lcall
push
mov
cs
jne
jge
arpl
sti
push
jne
xchg
dec
or
stos
fadd
xchg
pop
jo
test
mov
inc
mov
dec
test
sbb
nop
pop
lcall
ja
iret
cmp
gs
fstp
fisttpl
jg
stos
sahf
aam
sbb
pop
jmp
push
imul
cwtl
jno
in
loope
cli
cmpsb
sarb
das
pop
loopne
leave
jge
aas
int3
jne
imul
movsb
js
xor
pop
fwait
jg
xor
fsub
sbb
sub
cmovns
out
call
push
in
dec
aad
cmp
jmp
repz
fwait
js
sub
pop
xor
jmp
mov
repnz
out
addr16
out
add
mov
cmpl
lahf
jns
dec
mov
inc
pop
pop
out
in
nop
aaa
push
mov
add
jns
and
ds
dec
inc
sbb
pop
lock
jne
lods
pushl
or
insl
loopne
mov
pop
sub
repnz
push
das
push
push
sbbb
push
sub
je
rorl
aas
outsl
pop
andb
out
ss
nop
mov
nop
icebp
pop
mov
stos
daa
mov
outsl
sbb
std
inc
mov
xlat
pushf
shll
xlat
cld
mov
and
js
inc
cmpsl
repz
call
mov
or
jl
lods
pop
and
aas
lock
pusha
das
sub
and
push
jo
out
or
mov
mov
and
cwtl
fsubrp
mov
add
lret
push
or
xchg
xor
jecxz
and
stos
int
int
xchg
inc
pop
rclb
ss
inc
xchg
jge
loop
negb
test
xchg
mov
pusha
test
sub
stc
lock
pop
ret
adc
mov
jmp
in
jo
push
xchg
out
and
popa
outsb
mov
xor
jp
sbbl
xchg
mov
cmpsl
mov
repnz
pop
push
cld
test
sub
fcmovnbe
xlat
test
sub
mov
sbb
dec
pop
fdivrs
mov
cmp
lcall
or
or
loop
movsl
insl
frstor
push
fwait
lods
jne
mov
cltd
inc
out
add
leave
add
mov
fst
add
adc
loope
jl
mov
jmp
xchg
or
jno
ljmp
nop
or
mov
jae
mov
aam
scas
aas
jmp
popf
imull
movhps
repz
jbe
jbe
aam
mov
mov
mov
mov
sbb
fstps
and
xor
push
subb
or
mov
test
pop
inc
popf
ret
and
inc
aam
or
dec
add
xor
mov
sbb
lcall
fidivrl
dec
mov
cmpsl
push
mov
cmp
push
inc
insb
jp
mov
fcmovnu
ljmp
fnstsw
inc
comiss
mov
cli
or
mulb
inc
mov
pop
out
pop
movsl
sub
imul
je
bound
ljmp
add
icebp
inc
aad
jp
push
mov
repnz
lea
xchg
inc
sub
loop
mov
cmp
pop
popa
orb
lea
lea
jp
pop
std
mov
pop
ljmp
push
in
xor
pusha
out
call
loopne
and
xchg
aaa
iret
fisubl
inc
cmp
fiadds
rorb
out
pop
imul
mov
shrl
icebp
test
sub
pop
mov
fbld
out
xchg
sbb
inc
sar
sub
jbe
mov
adc
test
fcmovnbe
jl
mov
and
pusha
dec
cld
sub
mov
outsl
std
cmc
and
daa
cltd
popf
das
ljmp
and
lcall
cmp
int3
out
fistps
stc
cs
mov
test
test
inc
enter
xlat
and
jmp
subl
imul
sub
repz
aas
add
out
cmpsb
adc
jmp
jno
lods
and
scas
cmp
fsub
loope
xchg
repnz
and
or
xor
stos
inc
outsl
aam
jb
fistpll
jb
push
sbb
dec
add
mov
sbb
add
jae
lcall
pusha
lods
adc
aad
adc
ds
push
into
negb
sbb
lcall
push
popl
dec
or
or
jl
add
pop
mov
xchg
xchg
stc
adcb
stos
jbe
test
inc
fs
int3
sub
fnstcw
jl
in
dec
popf
pop
cmp
inc
call
push
cmp
inc
xor
out
adc
sub
iret
je
lods
dec
fistpl
adc
stos
mov
xor
add
aaa
inc
cmp
mov
or
gs
and
lods
mov
shr
inc
outsb
addl
sahf
lods
push
sub
jl
jmp
jecxz
add
popa
cltd
dec
and
pusha
bound
mov
cmp
and
daa
pop
mov
pop
pop
push
xorl
stos
fcom
std
pop
pop
mov
jge
nop
je
shlb
push
lods
fdivrl
sbb
ror
or
dec
addl
push
adc
mov
std
ret
cmpsb
adc
jmp
sub
jb
mov
sahf
adc
fimull
lea
and
mov
imul
or
cld
movsb
enter
and
inc
and
fidivl
add
mov
mov
in
push
inc
std
and
mov
sub
pop
mov
jge
icebp
int3
clc
hlt
jge
jge
fucom
jae
inc
fsubrs
cs
jge
sub
testb
in
pusha
ret
outsl
or
cmp
jmp
cmp
jecxz
push
pop
inc
cmp
rclb
lock
std
xchg
iret
pop
out
pop
stos
ret
clc
bound
sub
fsubrs
pop
and
and
cmp
jecxz
frstors
adc
call
dec
pop
xor
inc
flds
cwtl
aad
cltd
push
mov
loopne
out
in
xchg
inc
mov
movsl
jle
imul
mov
sbb
int
shlb
pop
inc
call
or
scas
dec
xor
sbb
in
fs
add
rcl
jl
or
sbb
rorl
xor
adc
js
jae
xor
push
orb
add
push
push
ror
xchg
test
ret
lahf
lret
das
or
dec
mov
inc
push
mov
fldl
add
cmc
push
hlt
pop
pop
mov
inc
popf
and
daa
into
mull
cwtl
insb
xchg
lods
fcomps
aam
pop
and
lds
js
out
add
xchg
incb
int3
cmc
mov
or
ss
cmp
popa
icebp
adc
sub
pushf
jl
push
or
and
stc
test
pop
or
xchg
lret
mov
cs
mov
imul
jle
in
dec
inc
lds
pop
jp
fst
ret
sbb
xchg
sbb
mov
aad
ret
add
scas
data16
push
fdivs
addr16
mov
cmp
in
enter
xchg
testl
sub
sahf
mov
mov
outsb
add
sub
fwait
je
jae
popa
jae
sbbb
scas
int
xchg
daa
nop
xor
dec
xchg
call
push
outsb
lret
cld
fidivl
pushf
sar
adc
fisubl
pop
cwtl
push
or
loopne
fiadds
dec
push
std
ret
das
lods
aad
adc
pop
ror
jo
mov
es
push
jmp
adc
int
dec
scas
inc
fwait
nop
pop
jmp
xor
ret
add
fnstcw
or
popf
or
sbb
frstor
jae
and
adc
xchg
daa
push
shlb
xor
inc
in
inc
mov
scas
lahf
adc
loop
xchg
or
add
jl
pop
mov
mov
pushf
shll
pop
sub
cmc
fbstp
cltd
push
jns
inc
inc
xchg
add
sub
jge
jp
sub
inc
loop
xor
cld
lret
jnp
mov
sub
leave
rclb
jnp
jmp
xor
add
mov
mov
or
shll
nop
push
mov
insb
mov
aad
mov
pop
add
push
andl
sub
dec
cmpsb
dec
pop
and
or
pop
and
jecxz
cmp
and
mov
ret
std
in
scas
xor
mull
inc
outsb
cmp
pop
push
aad
mov
aas
mov
jg
mov
or
repz
adc
out
add
jns
mov
xchg
addr16
or
int3
pop
pusha
xor
inc
inc
iret
push
or
inc
cmp
imul
inc
jmp
inc
lcall
sub
lods
mov
jmp
push
nop
ljmp
push
adc
cmp
or
outsl
imul
dec
loope
pop
roll
call
xchg
out
clc
insl
cli
jl
add
std
mov
gs
add
sub
adc
or
dec
push
aad
jne
mov
and
pop
jmp
test
lock
pop
rorl
pop
or
loop
sbb
xchg
fnstcw
push
scas
ret
fcmovb
push
pop
shr
outsb
cld
adc
popf
in
push
mull
ljmp
mov
testl
shll
xchg
in
pop
sbb
lahf
xor
xchg
pushf
sub
stc
xor
xchg
pop
fldenv
fldl
inc
cmp
xchg
dec
mov
dec
es
scas
sahf
mov
mov
cmp
mov
arpl
fdivrs
mov
sbb
mov
cmp
cwtl
adc
pop
aaa
in
arpl
xchg
sbb
jne
jecxz
fsts
add
std
adc
movsb
jecxz
hlt
adc
add
and
jecxz
mov
inc
repz
mov
or
test
les
xor
sahf
mov
test
sbb
test
aaa
faddl
push
movl
je
fwait
xchg
inc
xor
mov
sub
inc
ss
icebp
data16
gs
mov
add
mov
sub
fucomi
xchg
inc
jo
sub
add
hlt
aaa
loop
popw
or
jo
adcl
addr16
sub
inc
imul
pushf
lock
test
fs
mov
xchg
pop
stos
sub
sbb
das
loopne
push
sub
popa
dec
cmpsl
mov
leave
add
lds
or
add
inc
cwtl
ficoml
push
dec
and
cmc
sbb
lret
or
aas
adc
mov
iret
fwait
xchg
jle
and
test
pusha
sub
xlat
sub
lret
push
repz
and
jnp
jge
scas
dec
mov
lods
testl
sub
mov
nop
and
dec
sahf
test
or
lahf
cmp
rcrb
clc
scas
fcmovnu
decl
dec
and
stc
sub
cmpsb
add
rcll
xor
jne
loop
pusha
xchg
js
je
dec
pop
movsb
ret
jne
inc
pop
popf
cltd
int3
xor
xchg
inc
push
enter
xor
cmp
cmp
xchg
lret
inc
and
sub
push
and
sti
and
jno
lods
scas
mov
shrb
iret
pop
shrb
cvtpi2ps
xor
stc
dec
mov
sbb
scas
xor
xor
roll
ja
lds
cmpsl
sub
je
dec
and
push
sub
leave
cli
and
mov
int
clc
pop
dec
mov
rcrb
push
pop
jno
xchg
dec
enter
push
pop
push
cmp
repnz
inc
int3
hlt
mov
stc
insl
gs
fwait
xor
jae
push
orps
lea
shlb
xor
pop
jge
push
jns
jge
adc
mov
mov
iret
aas
fistpl
dec
cmp
push
xchg
es
outsl
pop
loope
push
rclb
push
lret
rcl
leave
inc
out
out
iret
pop
clc
add
jo
setle
push
shlb
and
bnd
ret
pop
and
jg
adc
push
cmp
cmp
jbe
lock
or
pop
stos
pop
adc
mov
add
ss
imul
dec
out
es
cmp
cmp
popa
or
xchg
push
aad
lcall
jae
xchg
sub
add
pop
or
lahf
sbb
stos
bnd
mov
mov
ja
sbb
cmp
sbb
xorl
xchg
scas
inc
into
jmp
enter
es
ret
daa
and
mov
loope
sarb
in
jb
mov
movsw
xchg
sbbb
push
arpl
shlb
mov
jl
lea
lret
mov
sub
ret
jno
cmpsl
xor
ljmp
or
fisttpll
pop
cwtl
mov
cmc
aam
xorl
adc
jbe
sti
ret
push
mov
iret
or
mov
movsl
dec
mov
xor
subl
in
jo
sar
sub
cmc
fmul
dec
or
daa
pop
cld
test
cmp
pop
adc
pcmpgtb
mov
daa
dec
jae
das
mov
jbe
xchg
mov
sub
push
xor
fmull
test
stos
cmp
inc
mov
pop
sbb
movsl
jp
pop
fcomps
stos
jl,pt
push
mov
inc
jnp
inc
mov
sbb
es
movsl
aam
pop
push
jp
cld
leave
les
pop
ret
insl
add
cmp
push
fwait
xlat
fdivrs
ret
sti
fnstsw
stos
push
jne
cwtl
sarb
xor
in
push
mov
flds
fistps
and
pop
icebp
fprem1
mov
scas
stc
mov
gs
ret
out
test
lea
sbb
stc
mov
out
xor
lea
mov
xchg
imul
jle
cmp
inc
hlt
jo
daa
mov
lea
int3
jecxz
cwtl
movsl
jge
ss
lods
jbe
inc
xchg
dec
sub
leave
jmp
aas
mov
insl
push
sub
nop
jo
push
cld
and
jmp
xor
sub
cmp
pop
inc
dec
jbe
dec
lahf
xchg
push
fyl2x
fbld
jb
mov
rol
xchg
sub
insb
fildl
mov
mov
mov
pop
stos
adc
xor
fildl
lret
scas
add
lock
push
es
insl
pop
or
aad
imul
and
sbb
pop
ret
fxch
xlat
cmpsb
daa
jecxz,pn
std
push
jl
push
emms
lcall
hlt
cs
and
mov
fbstp
xor
or
mov
clc
xor
popa
inc
sub
stos
lods
repnz
and
sub
adc
jg
mov
and
xor
and
mull
sub
or
and
mov
mov
ljmp
repz
cs
call
adc
add
jb
pushl
jns
ljmp
xor
pop
scas
sti
pop
imul
loope
out
or
pusha
cmp
adc
out
xchg
insb
lods
add
sbb
mov
jae
inc
jne
iret
shrl
pop
cmp
loope
std
aas
mov
jle
imul
fimuls
in
and
popf
push
mov
aam
mov
push
mov
clc
mov
fstpl
sub
jns
popf
pusha
fdiv
lahf
jle
aaa
das
or
inc
jns
inc
imul
loop
dec
movsl
pop
cmp
and
push
adc
pop
loopne
clc
jecxz
popf
inc
aas
mov
cmp
mov
dec
mov
nop
dec
mov
jp
incl
lock
or
xchg
or
jge
xor
test
or
push
or
add
ret
in
xor
fsubrp
ror
jbe
xor
jbe
mov
xor
out
xchg
dec
dec
jmp
sbb
std
cwtl
or
mov
cmp
std
mov
dec
xor
fcomps
ds
inc
pop
mov
mov
cli
adc
or
sub
ret
and
clc
jbe
hlt
repnz
xor
mov
push
lret
xchg
add
imul
fs
shl
pop
loope
sub
pop
sahf
or
jbe
cmpsl
sbbl
fistpl
hlt
sub
clc
mov
mov
xor
pop
jns
rcrb
mov
xor
dec
cmp
dec
inc
ljmp
mov
pop
push
push
icebp
jecxz
outsl
out
xlat
xchg
sbb
pavgb
lcall
jno
sub
fsubs
inc
fs
vpaddsb
mov
int
lcall
jbe
cld
or
inc
js
jbe
cld
sub
jl
dec
out
rol
inc
les
jg
icebp
jge
addb
pop
shl
mov
pop
inc
push
mov
aaa
rorl
add
xchg
gs
sbb
jl
scas
or
mov
in
mov
pop
fsubrl
pop
add
ficompl
inc
mov
inc
inc
mov
mull
lea
dec
xor
adc
int
mov
sbb
push
ficoml
clc
ljmp
adc
sub
mov
cmp
jge
xchg
sbb
jp
filds
mov
cmpsb
cmpsl
push
insb
mov
jae
inc
adc
add
and
sbb
jecxz
addl
out
jp
pop
cmp
adc
cmpsl
mov
cmp
pusha
rol
xchg
and
shlb
push
fwait
lock
enter
insb
pop
cli
out
xchg
and
inc
pop
ja
sub
push
aaa
loopne
call
xchg
sbb
and
lock
jb
pop
rclb
ret
adcl
inc
push
mov
sahf
lds
cmp
pop
addb
xchg
cmp
fsubr
cmp
repz
dec
mov
jg
stos
imulb
sub
fisttps
push
cltd
dec
add
int3
sbb
pop
loop
xorb
fmul
andb
mov
in
dec
cltd
mov
jp
mov
jnp
mov
mov
jo
xor
in
sbb
sarb
fiadds
xchg
pop
push
cmpsl
adc
sub
sbb
pop
movsb
outsl
push
and
fldl
cld
jg
inc
sub
int3
add
incb
push
fldl
ret
jp
movsl
mov
push
arpl
mov
rcll
sahf
js
cli
fucomip
xor
fstpt
shll
push
sub
std
mov
mov
aas
adc
dec
mov
fcompl
dec
xchg
mov
nop
mov
and
cmp
xchg
push
shll
mov
dec
lods
xchg
cs
inc
scas
jb
xor
enter
aad
int3
mov
into
inc
stos
loopne
lea
jg
rclb
mov
mov
data16
cmpsl
lahf
out
stos
sbb
or
hlt
push
sub
aas
xor
aas
cmp
loopne
adc
ret
test
out
push
lret
jl
pop
popa
push
xchg
cld
dec
ja
adc
cmpsb
cld
mov
stc
lock
dec
cmpsl
ljmp
inc
andb
sbbl
push
jmp
mov
insl
push
int3
jge
or
adcb
push
sarb
add
xor
cltd
sub
aaa
mov
ud0
dec
mov
insb
sbb
jmp
js
and
insl
popf
stos
xor
push
sbb
fistl
es
mov
cmpsl
arpl
add
push
int3
subl
insl
imul
cwtl
jbe
cmpl
in
xchg
mov
sbb
push
jns
push
xor
xchg
xchg
shrl
jmp
aas
or
bnd
push
clc
int3
xchg
xchg
adc
mov
xchg
ja
roll
loopne
into
cmp
push
test
push
xor
adc
push
dec
push
stos
rcrl
push
push
lret
cmpsb
mov
test
sbb
mov
push
add
lds
enter
leave
pop
push
leave
inc
shr
jne
push
or
xor
je
jnp
fwait
sub
inc
push
repz
addr16
mov
outsb
imul
or
test
pop
clc
xchg
daa
push
xor
insl
mov
fwait
cmpl
push
adc
popf
movsl
pop
dec
jmp
shrb
cmp
or
mov
mov
cmp
mov
shll
cmp
xor
stos
jg
and
lea
pushf
imul
or
test
shll
inc
out
mov
pushf
je
adc
lret
pusha
cltd
jo
lods
adc
movsb
jo
les
repz
cmp
popf
xchg
xchg
sub
rorl
pop
insl
mov
adc
and
mov
pop
mov
mov
jb
pop
ja
aaa
add
clc
cli
mov
fs
cwtl
pop
xchg
jmp
test
push
leave
aam
inc
jl
inc
pop
mov
in
push
push
repz
dec
mov
cmc
mov
popf
stos
fcoml
dec
imul
adc
pusha
ljmp
sbb
clc
dec
add
push
sub
mov
xchg
ret
cmp
push
imul
cmp
scas
lcall
inc
jae
cs
outsb
ret
insl
jmp
sahf
mov
xor
push
insl
out
ds
cs
cmp
lds
fnsave
int3
shll
scas
dec
jne
outsb
rclb
xchg
sub
xorl
decb
pop
outsb
inc
lock
sar
fists
sahf
mov
aas
dec
shrl
add
sub
clc
sub
mov
stc
jmp
jo
cmp
push
xchg
add
jg
inc
inc
cmp
fnstenv
cli
jg
mov
pop
adc
fs
jl
push
xor
mov
enter
stos
outsb
inc
jno
stos
lods
stos
mov
mov
cld
test
call
mov
adc
pop
movb
sbb
mov
ja
jp
xor
mov
mov
sub
ret
jl
push
sar
loopne
dec
dec
cmp
push
cmc
loopne
lret
int3
sbb
cld
mov
or
call
in
aaa
dec
fnstsw
lret
ret
cmc
pop
xchg
movl
lods
rorl
mov
mov
jecxz
cltd
or
inc
add
xor
dec
mov
sahf
or
dec
enter
and
cmp
fdivrp
add
test
rorb
add
add
stos
shl
mov
push
imul
flds
sub
fprem1
rorl
pcmpgtw
ud0
inc
out
stos
dec
xor
and
mov
imul
mov
hlt
fidivl
push
shrb
nop
lret
mov
lcall
dec
sbb
nop
dec
and
fs
out
adc
mov
jnp
test
push
int3
pop
out
xorb
test
andl
insl
jl
std
push
icebp
push
add
xchg
adc
add
lret
xor
out
rcrb
in
lret
or
fdiv
and
scas
sub
outsb
mov
pop
stos
icebp
aaa
push
out
or
cmp
fldl
mov
and
inc
clc
sbb
and
lods
out
sbb
mov
lea
cmpsb
popf
inc
in
stos
mov
sub
or
movsl
shl
cmp
sub
cmp
int
enter
dec
inc
adc
inc
aad
and
jo
sub
sti
jge
mov
test
test
imull
xor
xchg
push
push
repz
arpl
push
push
movsb
lret
ds
sarb
cmpsb
and
test
adc
mov
sub
aaa
sti
xlat
or
fimull
push
fadds
adc
cs
inc
and
out
mov
mov
jge
push
dec
jnp
or
cs
movsb
nop
sbb
and
xchg
nop
mov
loopne
dec
pop
std
ffree
clc
icebp
arpl
inc
mov
pop
icebp
arpl
sub
fdivrp
iret
fnstcw
in
pop
fxch
add
or
push
outsb
imul
dec
in
cs
stos
in
ss
arpl
push
outsb
inc
add
xor
je
xchg
push
in
fs
fcomps
test
pushf
scas
cmc
xor
sbb
mov
das
call
pop
mov
pop
loop
inc
and
adc
sub
xchg
sub
out
lcall
add
xchg
mov
insb
btr
ja
pop
out
je
adc
cld
sbb
mov
cmp
and
fsubp
adcl
sbbl
out
xchg
or
ss
push
scas
stos
xchg
out
ret
cmp
iret
pop
cs
js
pop
push
push
mov
add
push
popf
jae
xor
mov
xor
xchg
popa
sbb
test
rcr
les
push
test
sbb
adc
xchg
xor
cmp
cmp
je
dec
dec
mov
sub
dec
addr16
fidivs
mov
jecxz
cltd
fs
std
xor
sbb
adc
pop
sbb
push
enter
rcrb
mov
scas
scas
sarl
mov
scas
fldt
push
cmp
push
dec
mov
dec
aad
lret
mov
or
in
push
add
pop
cmp
inc
cmpl
jne
lods
gs
or
inc
scas
sbb
ds
fadd
dec
cs
test
pcmpeqw
fidivrs
inc
nop
leave
xor
das
hlt
mov
shlb
push
sbb
pop
xor
shrb
insb
movsb
mov
pop
mov
insl
add
lret
mov
test
fistpll
mov
lret
xor
push
jo
nop
in
and
icebp
aam
dec
cmp
xchg
std
and
mov
mov
lds
mov
std
rol
sbb
test
ficoms
add
or
sbb
xchg
call
add
pop
xor
pop
imul
push
addr16
ja
mov
shrl
mov
pop
jne
jnp
out
add
ljmp
push
lods
lods
mov
aam
or
mov
notl
pop
xchg
lret
movsb
pop
movsb
pop
mov
and
pop
push
aam
paddusb
imul
push
add
pop
inc
dec
and
jb
out
push
stc
pop
rcrb
sarl
mov
push
jo
das
sub
adc
xlat
pop
sbb
jmp
icebp
jge
push
push
leave
cmpsl
pop
push
inc
dec
jg
pop
mov
mov
sub
adc
jbe
push
stc
inc
repz
mov
imulb
push
sbb
add
push
xor
mov
mov
push
dec
mov
cmpsb
sub
xor
cmpsl
enter
pushf
add
inc
pop
imul
mov
movsl
gs
unpckhps
mov
fcomps
push
xor
out
in
stc
push
fnstcw
cltd
loope,pn
adc
ret
push
xchg
fsub
mov
sub
aas
jmp
mov
enter
pop
xchg
xchg
xchg
jb
adc
mov
das
dec
inc
sub
inc
xor
dec
jns
hlt
pop
fwait
fwait
and
ja
nop
shrb
icebp
push
adc
dec
gs
adc
cld
inc
fidivs
es
stos
jp
or
ss
dec
lods
push
divb
outsl
jmp
mov
mov
lcall
popa
sub
or
push
push
in
or
pop
and
mov
mov
pusha
mov
push
mov
stos
and
and
jo
mov
pop
mov
dec
out
sbb
push
sbb
adc
fcomip
je
mov
push
arpl
outsl
mov
gs
and
mov
add
movsl
lcall
xor
inc
lcall
fbld
xor
and
dec
in
out
enter
xchg
repnz
daa
icebp
in
xor
mov
jp
and
dec
mov
cmp
imul
popf
mov
arpl
xlat
test
adc
jo
pop
cmpsb
call
inc
int
push
dec
jp
mov
dec
test
push
sub
push
and
dec
xchg
sbb
lcall
inc
in
das
lret
inc
in
inc
rsm
hlt
inc
mov
fwait
xchg
hlt
sti
mov
nop
xor
mov
xchg
scas
repnz
jmp
pop
imul
pop
sub
xchg
cld
dec
arpl
cmp
and
popf
pop
cmovnp
add
ret
mov
push
and
jae
add
push
ficoml
dec
pop
inc
and
adc
leave
fiadds
mov
repz
xchg
and
std
jns
aas
stos
pushf
int
and
addr16
iret
cs
adc
push
rorl
pop
orb
es
push
int
leave
pop
jo
cld
push
cwtl
push
push
scas
stos
lock
jo
popf
mov
xor
imulb
inc
out
inc
sub
cmp
shl
daa
test
in
iret
cmp
pop
divl
shl
adc
sbb
imul
sub
cmpsl
sub
test
fs
cmp
jg
in
std
jo
inc
jecxz
mov
and
sbb
inc
adc
push
sbb
lods
movsl
sti
jecxz
and
std
rolb
inc
leave
in
test
adc
gs
in
ffree
mov
flds
push
clc
lods
mov
pop
cmpl
lret
inc
cwtl
add
or
leave
mov
mov
sub
mov
and
push
cmpsb
cmp
mov
pusha
and
lahf
mov
jp
popf
mov
in
cmpsl
or
out
push
inc
sti
ret
inc
xor
push
fadds
pop
movsb
iret
mov
popf
dec
call
pop
jbe
pop
jecxz
dec
fists
inc
jmp
jbe
xor
in
inc
pop
cltd
xchg
out
arpl
stc
out
mov
js
lock
test
out
cmpl
and
pop
add
sbb
sub
lahf
jnp
out
mov
jo
call
pop
sti
test
cmp
add
ljmp
pop
inc
inc
mov
fsubrl
push
push
lock
addr16
imul
js
mov
ror
and
jne
push
jge
mov
jp
mov
pcmpgtd
mov
mov
pop
mov
mov
jae
push
enter
xor
jl
shll
ljmp
dec
js
into
dec
inc
xor
lret
cli
jle
insb
imul
int
adc
jo
add
fucomi
outsb
mov
scas
aas
mov
ljmp
jne
xor
and
fisubrs
fwait
cwtl
addr16
or
pusha
fs
xchg
fidivrs
popf
and
xchg
and
inc
mov
shr
jge
and
cmp
jno
push
or
and
clc
stos
xchg
aam
mov
xchg
lods
or
cmp
mov
int3
leave
jo
fldt
scas
inc
dec
inc
jb
js
cmp
add
stc
push
lret
outsb
jnp
pop
pop
mov
add
cmp
pop
lds
rcll
sti
clc
out
push
xchg
add
aam
mov
jbe
pop
mov
pop
and
dec
pop
out
inc
popf
mov
push
jmp
scas
sbb
cmp
push
push
es
inc
sbb
adc
pop
xchg
outsb
dec
cli
cld
ss
mov
popf
lahf
mov
pop
lret
mov
ret
and
inc
pop
inc
lock
xchg
pop
cmpsl
adc
xchg
sbb
mov
xchg
cmp
outsl
in
clc
popf
shll
ljmp
lods
sti
clc
enter
loop
cld
cs
push
test
addr16
rcrl
or
ret
xchg
flds
faddl
mov
lds
mov
mulb
mov
mov
pop
sub
adc
add
js
mov
push
pop
jae
dec
in
adc
adc
mov
call
add
cltd
jmp
or
movsb
sbb
xchg
mov
fsts
sar
mov
sbb
sub
out
nop
fstp
hlt
add
ss
aas
outsl
test
orl
xchg
stos
push
rcrl
fdivrl
xlat
shrl
cmp
lods
inc
into
xchg
mov
lock
lea
jnp
inc
cmpsl
sti
fisubs
pop
js
stc
rorl
xchg
or
nop
pop
push
sub
ret
jbe
add
jmp
push
test
jp
pushw
gs
sbb
cmp
addr16
std
mov
cmp
pop
or
aaa
or
aaa
mov
ja
shlb
in
jmp
and
stos
in
arpl
push
or
fs
sub
xlat
lea
enter
insb
rcll
into
add
setge
and
mov
loope
sub
mov
mov
push
negl
inc
fstpt
add
pop
push
xor
das
and
rcrw
dec
cmpl
xchg
jecxz
cltd
movsl
inc
icebp
clc
pusha
iret
sbb
mov
push
test
pushf
sub
jnp
or
sbb
dec
xor
pop
loop
jb
mov
ss
cmc
outsb
add
mov
sub
cs
adc
fidivs
or
sub
push
pushf
testb
adc
mov
push
mov
push
mov
mov
push
sub
xchg
insl
shlb
orb
test
xchg
lods
nop
out
inc
dec
push
or
adc
js
sarb
popf
mov
fidivrl
scas
mov
stos
repz
push
xchg
les
popa
mov
clc
jb
cmp
push
fldl
or
dec
in
das
xor
or
push
nop
jbe
sub
arpl
in
and
pop
addr16
mov
push
mov
ljmp
add
fcmovb
adc
jp
and
pop
into
sysret
push
pop
xor
rcr
jle
cs
je
in
pop
mov
cbtw
sub
xchg
dec
mov
fwait
test
adc
jmp
lds
mov
gs
jno
cmp
aam
mov
xchg
pop
jmp
xchg
sub
push
xchg
aas
pop
jp
push
mov
lcall
int
andl
loope
pop
dec
jo
neg
in
sub
push
lods
andl
sahf
xor
inc
or
xchg
jmp
jne
rclb
fwait
mov
sbb
lcall
or
arpl
ss
dec
lods
out
addb
inc
test
push
lret
fistpl
mov
sub
aad
lea
and
or
sbb
ret
xor
push
cmpsl
and
push
std
jp
or
or
mov
mov
repz
jp
stc
push
addps
outsb
shll
fs
push
hlt
xlat
arpl
dec
divb
ret
jmp
stc
sub
mov
decb
test
test
dec
loop
enter
pop
push
outsl
xchg
rcrb
mov
add
pop
mov
sub
or
ret
rorb
sbb
pop
mov
sahf
imul
mov
add
fs
dec
fsubrl
xor
je
cld
fisttps
pop
jmp
sbb
das
mov
jno
sbb
into
push
inc
cmpsl
mov
pop
stc
pop
and
sti
outsb
mov
mov
pop
push
jecxz
ds
inc
mov
inc
out
inc
inc
xor
sub
inc
and
movsl
xor
xor
pop
test
inc
sbb
mov
iret
icebp
cmp
xchg
inc
jmp
repz
std
adc
lea
inc
sbb
sarl
sub
push
fildl
sub
dec
stos
fnstcw
cmp
hlt
mov
add
outsl
or
mov
mov
inc
dec
into
mov
cmpsl
sbb
xor
add
dec
pop
dec
pop
daa
xchg
dec
nop
mov
fistl
or
and
xchg
sub
and
test
inc
imull
mov
xchg
mov
js
js
fmuls
shll
adc
jo
idiv
push
pop
mov
inc
call
lods
jno,pt
stos
jmp
mov
adc
int3
mov
cs
das
mov
cmpsb
ss
test
jns
mov
sub
repz
aam
xor
xor
imul
sub
cmp
pop
inc
jp
xor
fnstcw
imul
and
push
lds
sbb
loope
enter
and
ljmp
rcrb
fsts
out
inc
mov
das
xchg
cltd
ja
jbe
add
xlat
ficompl
mov
cmpsb
outsb
test
cmp
dec
sbb
jp
pop
incb
test
cwtl
dec
cmpsb
test
pop
nop
cs
adc
movsb
dec
adc
fsubl
inc
rorb
pop
jmp
pop
mov
and
or
iret
pop
xchg
add
icebp
popf
jno
add
sub
jns
inc
inc
iret
repz
sbb
out
popl
sub
inc
lret
jg
pop
lret
add
in
out
stc
sub
mov
add
fwait
xchg
mov
add
fidivrl
cmp
stos
push
push
insl
in
out
inc
cmpsb
push
mov
scas
daa
push
xor
jmp
iret
dec
add
mov
sub
xchg
imul
es
lock
push
push
jle
ljmp
dec
in
add
lock
mov
out
push
popf
idivb
xchg
jecxz
sub
add
fcoml
push
push
and
fs
xor
xor
sub
jmp
test
outsl
push
mov
int
sub
nop
insb
push
mov
pop
in
test
mov
out
gs
movsb
stos
fisttpl
push
lea
sarb
or
jmp
out
xchg
pop
sbb
push
xor
lret
test
mov
aaa
fistl
fcos
sbb
es
xor
aam
sub
mov
pop
std
dec
xor
push
shrl
jae
cld
imul
pushf
jmp
add
sub
pop
adc
mov
in
lret
pop
clc
push
test
adc
sti
fisubl
pop
sub
sahf
mov
xchg
mov
scas
and
jp
ret
jmp
rclb
xchg
sub
adc
xlat
fisubl
daa
xchg
cltd
sti
sbb
cmpsb
das
push
test
adcb
out
sbb
cmp
lcall
and
mov
addr16
xlat
div
pop
mov
jecxz
adc
ja
jl
pop
dec
add
scas
mov
cmpb
int3
dec
rcrb
pop
adc
mov
push
imul
pop
subl
adc
aad
push
aas
or
sub
cli
cmpsb
and
mov
outsb
xchg
dec
mov
mov
add
fmuls
add
dec
mov
mov
xor
dec
mov
inc
add
jbe
shl
scas
iret
in
push
cmp
leave
cmp
mov
cli
add
adc
add
inc
in
es
mov
pop
sbb
or
jne
pop
and
and
iret
iret
xor
cmp
push
cltd
xchg
rep
ds
or
je
stc
xlat
mov
sub
or
pop
jmp
cmpsl
xchg
and
adc
dec
mov
imul
and
inc
or
inc
mov
xchg
sbb
xor
mov
lret
imul
mov
je
dec
push
adc
popa
cmpsb
push
in
loopne
movsl
cmp
or
and
inc
cmp
mov
or
movl
repnz
pop
push
in
xchg
cmpsb
jp
mov
pop
sub
lret
pop
aaa
mov
mov
or
add
ljmp
rclb
or
or
jnp
push
xorb
call
adc
mov
xor
push
subl
xlat
jmp
sbb
push
sub
xchg
or
or
sbb
xchg
cmp
add
out
lock
fnstcw
clc
ret
add
xchg
fcompl
sbb
jecxz
cli
cli
jbe
pop
lret
outsl
and
lods
inc
orb
das
rorb
stos
adc
mov
movsb
lahf
mov
push
imul
fcompl
es
pop
adc
popa
mov
push
outsb
loop
xor
cltd
lods
lock
cmc
jge
sub
daa
into
hlt
jae
cmp
jb
popf
sbb
mov
shl
pop
test
daa
or
in
jl
outsb
xor
or
rorb
dec
pop
lret
ss
mov
lret
in
cmp
mov
in
aad
mov
fsubl
and
call
add
pop
pop
mov
orb
push
xor
jne
out
mov
inc
sarl
repz
dec
fs
push
sbb
scas
fs
in
les
loope
outsl
loope
out
cmp
nop
loop
into
inc
sti
cmc
aad
rcr
or
mov
add
out
cli
jle
and
lds
lods
mov
fimuls
dec
cmp
sub
inc
xor
pusha
adc
mov
push
lods
push
sahf
cld
adc
stc
js
mov
aas
aas
xor
lret
pop
imul
sub
or
imul
fs
sahf
push
jecxz
lods
jae
mov
jnp
inc
jmp
cmc
mov
fldcw
jae
jge
pop
add
cmpsb
test
xchg
mov
nop
dec
cwtl
insl
jge
jge
add
sahf
nop
ljmp
int3
cltd
test
cmp
daa
dec
lods
in
divb
sar
cmp
cmp
pop
lods
inc
jb
add
dec
das
jecxz
in
pop
mov
and
jecxz
push
into
xor
ds
add
mov
mov
lods
jb
lahf
dec
pop
push
dec
jp
aam
xchg
mov
dec
aad
mov
dec
out
pop
nop
imul
out
sti
pop
pop
ficomps
xchg
daa
xchg
xor
sbb
faddl
jae
insb
das
scas
icebp
mov
inc
jl
fwait
popf
fbstp
and
out
test
jo
js
lcall
stc
sarl
loope
xchg
testb
adc
jmp
jg
pop
shrl
cmp
push
scas
mov
push
rol
or
loope
xor
idivl
pushf
add
in
out
xchg
insl
mov
ljmp
push
mov
sbb
testb
sub
mov
cmpsb
add
sti
or
jnp
out
pop
pop
mov
into
sbb
adc
xorl
stos
mov
and
clc
add
cmp
iret
jmp
sarl
lret
add
or
out
xchg
xor
jl
pusha
insl
push
bnd
jns
inc
mov
aaa
imul
xchg
jnp
call
shll
and
mov
xchg
mov
out
repz
add
add
xor
sbb
xchg
jne
pop
adc
jno
fistpll
or
leave
into
insb
data16
dec
insb
or
sbb
adc
inc
aaa
cmp
int
cwtl
or
and
lea
pusha
in
or
cmp
iret
fdivr
cmc
loop
stos
jp
add
repz
cmpb
or
sub
jae
mov
mov
cmpsl
aaa
xlat
int
cmp
idivb
insl
jp
pop
or
data16
sbb
mov
or
push
nop
adc
call
pop
scas
and
jns
rolb
fcoml
add
cld
xchg
outsl
xchg
ret
jno
inc
hlt
sub
or
ss
jmp
push
sbb
sbb
test
xchg
xlat
cmpsb
xchg
lretw
pop
jl
or
in
and
ss
xor
lret
or
addr16
mov
jo
xor
and
adc
aam
adc
xlat
pop
leave
je
cli
aaa
jecxz
imul
mov
sbb
mov
or
rol
ret
push
push
pushf
movsb
and
lods
bound
test
sbb
inc
lods
cwtl
cld
dec
add
sub
data16
xchg
xor
arpl
xchg
or
sbb
aam
mov
popa
out
inc
out
xor
jo
or
xchg
dec
or
pop
or
mov
xchg
in
leave
call
and
cmp
inc
lods
cmp
and
sbb
cmpsl
jge
xchg
mov
xchg
xorb
dec
leave
enter
das
mov
push
dec
sub
and
sub
xor
pop
jns
dec
xchg
adcl
adc
mov
xor
ss
stos
mov
sub
and
mov
incb
jns
fildl
push
or
fs
mov
scas
xchg
push
popf
idiv
loopne
jae
push
mov
xchg
pop
cmpsb
cmpsb
iret
mov
hlt
cmp
inc
jmp
aad
orb
pop
cmp
adc
insb
inc
fmul
bound
sbb
push
ror
repnz
stos
dec
or
mov
outsb
out
cmp
jl
xor
in
xor
cmp
jge
in
jl
leave
jge
xchg
mov
in
pop
cld
lea
or
je
cmp
repnz
fwait
aaa
movsl
mov
clc
fwait
rorl
cli
adc
pop
cwtl
push
in
dec
je
rcrl
or
add
call
add
inc
popf
out
push
addr16
mov
add
jo
test
hlt
and
jecxz
lock
push
icebp
push
pop
fildll
bound
hlt
or
xchg
or
push
cmp
mov
fisubrl
mov
scas
adc
push
inc
mov
enter
add
mov
fwait
test
inc
cmpsb
mov
pop
or
fisubs
or
popa
cli
jb
dec
mov
adc
and
ret
pusha
mov
mov
mov
movsb
mov
sbbb
enter
push
xchg
xor
lods
outsb
repz
pop
mov
dec
xor
lret
jno
lods
and
shlb
lret
xchg
leave
sar
sbb
jns
lret
lret
push
cmp
jb
or
rcrb
dec
negl
xbegin
xor
imul
cmp
xchg
and
ds
and
outsl
pop
adc
mov
jp
movsb
and
dec
and
es
mov
adc
pop
mov
shl
push
notl
pushf
add
js
jae
leave
sahf
sbb
mov
loope
add
out
jne
insl
push
dec
and
xchg
push
loop
ds
lock
cld
jo
jns
shrl
cmp
rcll
rclb
iret
cli
pop
xchg
add
or
test
mov
bound
pop
and
push
mov
jle
out
mov
mov
add
add
cld
dec
in
mov
pop
jns
sarl
sub
ss
fsubrs
mov
cli
cld
jne
sar
push
push
lock
jp
mov
mov
dec
divb
push
push
cmpsl
xor
mov
aaa
or
mov
lret
pop
rclb
scas
lret
cmpsl
xorl
xor
xchg
scas
enter
add
jle
popa
repnz
or
fsubp
inc
int
movsb
shl
cmp
gs
mov
fsubrl
jg
adc
xor
or
lea
lea
mov
or
add
ret
inc
xlat
js
adcb
js
decb
fnstsw
fistpl
sahf
mov
gs
xor
lea
push
cltd
xchg
xchg
shrl
mov
arpl
adcl
fdivp
push
pop
lods
cmp
dec
push
in
inc
ja
mov
xor
jnp
add
sbb
fisubl
loopne
mov
fcomp
cmp
pop
fmul
xchg
dec
adc
subb
loopne
xchg
je
int
lea
xor
xor
lds
adc
add
mov
fsubs
mov
scas
or
cld
out
pop
lock
jae
sub
pop
mov
cltd
ljmp
nop
dec
sub
cli
mov
stos
xchg
mov
adc
cwtl
or
mov
imul
add
cmpb
dec
lods
lea
sbb
je
sub
js
jmp
and
adc
xchg
xchg
xor
pop
sub
sub
xchg
adc
sub
sub
xor
mov
adc
aad
sti
stc
or
aad
mov
addr16
pop
lret
pop
mov
cmp
mov
lds
xlat
ljmp
fnsave
pop
insb
imul
jmp
cmp
lret
lahf
sbb
push
xor
test
sbb
xor
and
or
push
leave
adc
and
jne
adc
inc
sbb
ss
ret
sub
dec
mov
scas
dec
pop
dec
gs
or
cmc
pop
mov
movsl
ja
dec
sbb
adc
sbb
push
sub
xchg
sahf
mov
mov
cmpsb
movsl
lods
loope
dec
push
and
aam
or
scas
xor
xor
es
jmp
mov
ret
in
fldcw
jae
push
lods
in
stos
pop
cmpb
push
jno
mov
nop
mov
mov
mov
dec
pop
bswap
ljmp
imul
and
aad
pusha
push
mov
js
fdivrl
js
and
outsb
xor
outsb
adc
into
rorb
inc
shl
adc
cmc
test
cmpsl
cltd
push
std
repz
test
sbb
pushf
movsl
and
pop
cwtl
lds
movsl
adc
fistpl
cmpsb
pop
jnp
sbb
fcoml
push
test
adc
xor
lahf
inc
dec
jns
sub
and
xchg
sub
cmp
int
adc
and
add
cmp
push
or
pop
lods
aas
in
ljmp
push
scas
jae
mov
pop
lahf
xchg
inc
sub
pop
pop
insl
sub
mull
fs
push
and
sub
insl
scas
dec
dec
xchg
mov
imul
xchg
jmp
das
in
or
adc
mov
inc
cmp
rcll
out
sub
ret
cmpl
xor
push
xchg
push
hlt
icebp
addl
mov
jns
cmp
cmp
bound
arpl
punpckldq
aaa
xchg
xor
or
or
pop
sbb
scas
aam
cmp
pusha
pop
lcall
jno
std
jle
fbld
pusha
div
cltd
dec
xor
out
stos
pushf
fdiv
lock
rclb
aad
test
rclb
push
xchg
inc
dec
xor
jns
insb
hlt
je
add
pushl
insl
cmc
cmp
mov
pop
xor
lods
xor
fsts
icebp
sub
jg
dec
shrb
in
xchg
xchg
push
fmull
mov
cmpsl
jae
pusha
movsb
movsb
inc
push
or
xchg
pushf
faddl
pop
adc
scas
jbe
add
iret
push
jo
jns
mov
xlat
push
xorl
int
jle
push
das
loop
and
loopne
add
mov
clc
aam
add
dec
nop
imul
je
xchg
dec
sub
stc
sbb
dec
jmp
mov
out
push
mov
pop
or
test
or
xor
in
jle
jo
pop
mov
out
xchg
sbb
inc
mov
adc
mov
sbb
sub
lcall
pop
pop
popl
cmp
inc
sti
in
sbb
stos
imul
fdivs
or
pop
jae
shrb
dec
lods
dec
pop
xchg
ret
mov
test
mov
shrl
lret
outsb
lods
push
cmp
xchg
xor
mov
inc
jns
cmp
push
push
test
mov
or
sbb
iret
popf
lods
lock
xchg
sbb
out
fs
inc
ret
adc
es
pop
roll
dec
inc
mov
ret
dec
in
notl
ret
sbb
das
fcmovb
stos
and
fwait
xchg
inc
lahf
aam
sub
cmp
push
inc
cmpsb
insb
mov
out
sbb
adc
inc
inc
int
ja
decl
or
and
in
lods
cmp
pusha
enter
scas
out
sbb
div
xchg
mov
fyl2xp1
testl
rcrb
repz
mov
and
aaa
push
mov
lret
dec
ja
dec
mov
cld
adc
imul
mov
add
shl
out
add
enter
add
mov
ljmp
inc
xor
dec
fdivrl
add
add
dec
mov
out
int
lea
xorb
push
shrl
mov
add
pop
scas
mov
xchg
je
dec
test
xor
add
loopne
xchg
adc
jle
into
outsl
pop
add
out
inc
xchg
ret
push
jmp
divb
push
popf
add
adc
into
dec
rcrb
cmp
cli
ret
das
jb
aaa
and
cmp
mov
aas
or
outsb
fstp
nop
mov
xchg
int
out
stos
testb
jbe
in
add
push
dec
adc
enter
addr16
insl
jp
lock
es
mov
push
cli
outsb
popf
mov
sub
das
push
int3
stc
cmpsl
lcall
jle
mov
pop
idivb
mov
les
sub
or
cmp
inc
sub
sub
add
rorb
jbe
pushl
xor
or
lret
insb
push
shlb
pop
or
cs
imul
lret
xchg
hlt
mov
mov
cvtps2pd
dec
mov
cmpsb
jbe
out
sbbl
imul
mov
xor
push
push
mov
scas
push
aaa
ds
push
push
enter
test
ret
xchg
js
roll
xchg
lods
cmp
neg
repz
mov
out
and
jmp
pushf
aas
adc
dec
cld
push
rorl
push
outsl
inc
ljmp
loop
cmp
stos
dec
popa
or
jo
sub
xor
jg
jne
out
mov
add
xorb
sub
loope
bound
in
and
push
mov
mov
mov
lea
leave
pushf
add
aaa
mov
sub
mov
gs
idivl
imulb
enter
xlat
mov
rcrl
xchg
adc
jb
xor
sub
fimuls
push
call
loopne
fwait
bnd
leave
pushf
or
mov
xchg
cs
mov
popf
xchg
lds
aas
mov
mov
fnstcw
xor
mov
push
inc
lret
cli
sub
cs
xor
xchg
and
or
movsl
pop
addl
jbe
aad
sbb
sbb
inc
push
jbe
cs
shll
js
repz
movsl
aas
mov
mov
and
addr16
sbb
pop
shll
and
push
jle
cld
adc
into
scas
sti
mov
push
push
inc
pop
movsl
push
push
cli
rcll
inc
insl
sub
adc
xchg
cmpl
sub
cmp
lret
imul
xor
aad
push
pop
pusha
ljmp
pop
sub
iret
mov
incl
jmp
or
cmpsl
sub
ret
testl
hlt
xchg
lods
cmp
cmp
jecxz
or
push
push
sahf
fs
dec
fs
mov
cltd
stos
shlb
cs
inc
mov
mov
adc
mov
pop
fcmovnb
push
jp
cmp
mov
cmpsl
addr16
adc
int
imul
test
push
xchg
mov
cmp
mov
sub
scas
lahf
vmovups
jnp
inc
sub
dec
into
pop
dec
pop
dec
mov
pop
lods
jg
lds
inc
or
pusha
imul
fcomi
rorl
int
lret
or
push
ret
inc
cld
sbb
inc
mov
test
mov
sbb
mov
insl
pusha
stos
leave
cmp
mov
xchg
fwait
xor
mov
mov
pop
sti
loop
sbb
xchg
icebp
sub
scas
mov
xchg
mov
shl
loop
push
ds
xlat
rcr
push
repnz
test
mov
loop
shll
dec
lods
dec
mov
mov
aaa
pop
dec
lods
xchg
js
out
mov
jmp
out
jmp
adc
xor
inc
adc
mov
xor
lock
out
adc
xor
xchg
mov
push
adc
or
and
ss
das
push
pop
push
pop
aas
xchg
dec
je
shlb
jmp
pop
add
mov
dec
lret
movsl
jl
mov
cs
mov
add
imul
jmp
pop
mov
adc
xchg
mov
sahf
add
dec
jo
lock
mov
cmpsb
mov
sbb
xor
inc
xchg
call
int3
pop
mov
cmp
in
out
jae
test
jno
cli
cwtl
mov
add
push
adc
pop
add
mov
enter
xor
add
lods
fisttps
xchg
adc
sub
dec
mov
add
or
call
fdiv
ss
rorb
mov
sbb
sbb
or
loope
fwait
cmp
dec
andb
lods
push
jp
inc
adc
je
or
das
mov
mov
out
and
mov
adc
jg
xrelease
pusha
mov
pusha
sbb
and
xchg
into
ljmpw
outsl
fimuls
test
xor
dec
mov
lret
sbb
sub
cmp
stos
jp
sub
xor
xlat
jb
sbb
mov
insb
test
cmpsb
cmp
mov
xor
xchg
repz
jno
sar
mov
xlat
pop
movsl
push
out
adc
fwait
mov
mov
fstp
mov
inc
dec
jo
jmp
and
jae
xchg
dec
cmp
stc
cli
jns
in
dec
jp
test
adc
mov
xlat
int3
jae
mov
insl
inc
add
dec
sbb
adc
ja
sti
jp
push
ljmp
enter
push
nop
inc
cmp
test
or
push
inc
out
js
das
pusha
jecxz
bound
mov
test
jge
xchg
inc
mov
sbb
aas
adc
push
insb
ljmp
push
push
inc
hlt
bound
xchg
inc
stos
add
sub
xchg
pminub
cmp
ss
inc
or
call
push
lahf
sub
dec
out
ss
pushf
test
mov
hlt
sbb
adc
mov
jne
push
in
test
xchg
or
push
adc
xchg
repnz
mov
pop
add
inc
mov
rorl
mov
jnp
lock
icebp
adc
dec
or
fwait
sbb
je
cmp
cmpsl
ljmp
lods
imul
les
mov
push
movsl
adc
sbb
pop
cmp
add
pop
ret
pop
cmp
mov
in
rorb
sub
lret
dec
and
rcll
xor
xchg
dec
pop
movups
mov
push
jmp
xor
pop
add
hlt
mov
icebp
add
imul
mov
sbb
xchg
ds
imul
popa
dec
cld
sub
ja
daa
mov
icebp
xor
mov
out
mov
dec
in
or
fld
ds
sbb
jns
mov
js
xor
dec
push
mov
pushf
and
xor
dec
in
in
mov
and
push
adc
jl
mov
add
jae
out
dec
outsb
jo
mov
or
fmul
push
test
data16
out
and
jae
push
push
sub
and
lahf
pop
popa
inc
pop
fidivrl
scas
pop
in
jne
aas
add
out
mov
push
pusha
daa
jmp
add
adcb
add
pop
adc
lock
pop
jg
mov
and
xchg
and
jmp
cmp
cmpsl
movl
bswap
xchg
sub
loope
daa
movsl
cmpsl
into
mov
int
fwait
mov
cmp
sarb
loope
gs
mov
dec
dec
popf
imul
in
outsb
jns
sahf
jae
and
aad
pop
mov
inc
pushf
nop
adc
dec
test
daa
mov
insb
pop
popa
cmpsb
mov
pushf
sahf
sbb
movsl
jge
inc
stos
repz
sbb
leave
xchg
pop
push
mov
mov
lds
cld
movsl
dec
test
arpl
cmc
jp
cmp
call
or
fnstenv
movb
repnz
or
cmc
in
mov
arpl
stos
loop
jb
dec
clc
add
mov
jge
cs
fnstenv
sbb
xchg
imul
mov
adc
popf
in
xchg
aas
adc
cli
adc
ss
mov
jecxz
cmp
iret
outsb
mov
add
fimull
adc
adc
mov
mov
sahf
sub
mov
insb
test
dec
jmp
nop
push
cld
ljmp
fcoms
pop
inc
mov
mov
sti
pushf
out
push
fmulp
mov
in
inc
add
js
push
ss
es
sbb
push
hlt
scas
out
ret
mov
stos
popl
stc
mov
outsb
mov
or
iret
push
or
call
push
movsl
popf
mov
pop
call
push
jg
push
and
into
jae
lret
mov
dec
incl
pop
mov
sbb
mov
dec
fwait
daa
pop
push
and
loop
adc
xor
enter
das
or
adc
sti
arpl
adc
mov
test
cmp
xchg
aaa
mov
add
sarl
out
fcomps
shll
xchg
stos
cmpsl
adc
movsb
and
dec
inc
fwait
add
loope
adc
es
pop
pop
push
test
cs
adcl
dec
pop
leave
push
out
sub
sbb
sbb
rcrb
in
push
xor
push
enter
in
cmpsl
xchg
jnp
push
mov
out
sarb
xlat
xor
xorb
mov
cmp
jb
aad
mov
ret
add
xor
jecxz
push
xchg
out
paddq
jno
daa
dec
not
mov
imul
rolb
cmp
lock
inc
pop
in
or
sbb
lods
shrl
adc
leave
pop
cmp
mov
cli
mov
xchg
xchg
pop
mov
popf
rorb
or
ds
inc
popl
movsb
jl
push
roll
xor
add
out
push
imul
into
fisttpl
xchg
pop
pop
cwtl
test
nop
lods
das
in
xchg
fwait
pop
jno
xchg
or
add
and
stos
mov
adc
shlb
xor
aaa
ja
nopl
xchg
lret
mov
mov
push
jmp
std
pop
xchg
add
in
pusha
das
push
sbb
rorl
pop
cmpsb
dec
push
aaa
ds
sub
mov
adc
out
add
les
mov
ja
cltd
lea
sbbl
clc
mov
jp
pop
mov
dec
jl
dec
shl
loopne
inc
or
push
pop
or
icebp
outsb
xchg
data16
ret
jne
loopne
leave
gs
mov
cmc
scas
mov
pop
fcompl
dec
out
mov
pop
mov
and
test
pop
jmp
cmp
enter
xchg
mov
shll
dec
test
shlb
fdivr
inc
jge
ja
push
mov
insb
sub
test
inc
and
jae
sbb
cmovae
shl
shll
mov
divl
mov
mov
js
movsb
add
lahf
int3
leave
roll
enter
ret
iret
inc
and
sbb
inc
int
adc
inc
adc
int
or
ret
mov
out
sbb
xor
pop
jg
add
dec
or
xchg
mov
daa
add
shrl
incl
pop
mov
sbb
outsl
mov
test
cmpsb
mov
ror
push
repnz
push
stos
fwait
movsl
jae
push
cltd
aas
shlb
outsb
cmp
and
iret
adc
rclb
sub
sub
mov
aad
xchg
mov
push
mov
data16
rolb
xchg
out
int
pop
mov
jmp
jmp
dec
js
insb
lds
aam
lret
jo
je
mov
out
push
pop
sub
insb
pop
sti
mov
nop
mov
ja
pop
jae
dec
hlt
mov
in
test
xlat
push
cltd
testl
dec
outsl
add
lret
testb
ffreep
movsb
faddp
dec
inc
mov
enter
jmp
sbb
aas
aad
add
movsl
pop
sbb
addb
filds
cli
dec
jo
orb
jg
aad
or
push
cld
fs
lahf
cmp
imul
ss
ja
outsb
xor
addb
mov
cmp
adc
in
xchg
popa
rcr
popf
adc
inc
rcr
push
es
push
iret
xor
push
adc
sbb
jno
push
movsb
cmp
nop
jb
and
push
inc
inc
std
xchg
pusha
cmp
mov
push
sti
xchg
sub
xlat
pop
mov
adc
add
enter
sub
addl
dec
jle
jno
rclb
test
or
add
and
jge
popf
mov
faddl
iret
aam
les
dec
stos
addr16
shrl
fcomi
sti
clc
lcall
rorl
sub
mov
or
movsb
lods
xchg
add
or
dec
pushf
or
cmpsl
push
inc
aas
int
testb
inc
iret
pushl
and
jle
inc
jo
add
push
jae
lea
fdivs
rclb
ljmp
int3
xchg
mov
stos
xchg
negb
mov
jp
in
je
outsb
aam
call
cmp
sub
nop
or
jo
xchg
xchg
mov
add
jns
and
in
lret
aad
sbb
xor
sti
rcrl
xorl
movsb
les
aas
fldenv
test
pop
mov
mov
inc
rorl
inc
ficoms
hlt
push
inc
jecxz
pop
sbb
int3
push
sbbb
adc
cmp
ss
inc
jno
mov
add
mov
xchg
xor
jle
hlt
dec
lret
jge
jp
insl
mov
notb
jmp
adc
ret
pop
push
shl
les
or
fnstenv
out
sub
rolb
mov
js
mov
push
dec
cmp
mov
add
mov
push
jno
mov
outsl
pop
divl
inc
cwtl
outsl
subb
ficoml
fstps
rorb
es
cld
arpl
bound
outsb
subl
sbb
dec
test
add
je
push
fisttpll
add
xchg
mov
std
mov
dec
pop
fsubrs
cmp
out
push
lock
adc
adc
in
daa
sub
rcl
hlt
addb
cld
push
mov
das
pop
cmp
out
adc
fdivrl
repz
fs
nop
mov
stos
lods
jb
mov
and
test
idivb
into
sub
mov
pmullw
jo
xchg
jmp
fdivrl
sbb
jp
loope
xor
in
mov
cwtl
out
mov
daa
cmc
xchg
ret
divl
xchg
dec
add
ret
pusha
cli
lcall
pusha
xchg
sbb
jo
or
or
xlat
push
inc
cltd
inc
jb
lock
fiaddl
ljmp
ja
jl
and
leave
dec
dec
pushf
jne
cmpb
adc
imull
jle
iret
cmp
mov
cltd
pop
out
cmc
mov
ja
aad
add
fisubrl
cmp
cmp
je
stc
lods
jno
out
and
cmp
sbb
sub
xchg
outsb
inc
ss
or
scas
adc
cmpsb
xor
in
cld
jge
adc
lret
inc
push
jbe
dec
addr16
xchg
dec
xor
les
adc
popf
shrl
jo
adc
adc
inc
jae
lea
cs
inc
xchg
fmul
or
js
jle
fcmovb
lret
outsb
fidivl
add
mov
call
pop
jle
incb
xor
mov
adc
cmpsb
xor
aam
fcmovu
jecxz
loope
ss
jae
fnstenv
dec
jbe
cltd
sub
jmp
not
add
xchg
mov
sub
in
js
pop
or
jecxz
lds
pop
dec
push
lea
scas
cmp
sub
adc
mov
fnsave
out
sub
pop
xor
or
rolb
mov
and
mov
jmp
mov
xlat
or
cmp
or
ljmp
and
repnz
lret
dec
shlb
mov
mov
idivl
push
or
inc
cmp
add
and
nop
mov
xor
cmp
xchg
xor
mov
jo
cmp
pop
push
loop
lcall
push
push
call
stos
fstpt
test
hlt
inc
sbb
xchg
inc
xchg
xchg
mov
mov
hlt
adc
out
inc
and
outsb
mov
jge
cmpsl
in
adc
pop
and
pop
xchg
arpl
xchg
cld
jne
mov
fnstenv
and
push
jl
insl
xchg
mov
inc
sub
test
adc
stc
sub
sbb
shrb
xchg
popaw
cmpsb
adc
cwtl
mov
icebp
in
mov
pop
lods
jnp
dec
pop
and
cli
stos
mov
pushf
out
mov
add
mov
data16
ret
cmp
and
mov
lret
in
and
sub
xchg
mov
add
cwtl
push
add
inc
lods
mov
pop
nop
cmpb
mov
aam
fnsave
ret
stc
or
add
adc
pop
jle
stc
hlt
pop
mov
not
negl
flds
jp
call
iret
aad
das
imull
mov
popa
das
add
mov
popf
flds
sbb
ljmp
cmpsl
movsl
jae
repnz
add
add
pop
pop
mov
inc
scas
fwait
enter
inc
inc
sub
inc
xchg
mov
mov
scas
sub
or
out
push
adc
mov
fwait
clc
outsl
enter
pop
sbb
jge
jno
in
dec
dec
fucom
xchg
scas
lret
xchg
mov
push
mov
inc
jmp
test
sub
jne
cmp
pop
orl
mov
cmp
dec
and
cmp
adc
out
aaa
out
repz
add
push
sub
jnp
fimull
push
mov
adcb
outsl
pop
push
clc
push
rolb
jmp
idivl
jge
adc
jge
jge
fistpll
inc
out
or
jg
xchg
mov
sbb
sahf
in
cmpsl
gs
and
daa
insl
jns
push
sbb
je
inc
jae
lds
jge
in
jns
fsubr
cmp
aad
jno
push
out
ret
xorl
jecxz
dec
scas
push
in
xor
push
inc
fstpl
pop
mov
fwait
addr16
mov
pop
imul
icebp
sti
mov
jae
add
jg
mov
enter
insb
das
jne
sub
add
in
mull
sbb
fsubrs
ret
bnd
icebp
add
xlat
lahf
xchg
test
call
ret
and
push
sahf
insl
aam
inc
leave
adc
cmp
fisubrs
or
cld
add
cmp
add
cld
push
call
popa
xchg
lret
pop
shlb
sti
stos
add
les
and
scas
fcoms
repnz
icebp
roll
pop
inc
fdivrp
dec
inc
xlat
sub
inc
ss
xor
xor
mov
popa
push
cmp
ror
pop
inc
es
into
cmc
sbb
mov
imul
fimull
cmpsl
jo
inc
ficoml
dec
movsb
in
fiaddl
push
sub
lock
add
push
add
and
sub
bound
std
lods
mov
ja
adc
in
mov
pop
lret
push
cmp
pusha
cmp
dec
addr16
aas
pop
lahf
outsl
cltd
xchg
out
out
and
inc
lds
imul
movsb
pop
hlt
inc
and
dec
mov
hlt
enter
push
pushf
inc
je
in
cmp
and
lock
inc
pop
imul
jmp
into
out
das
mov
js
or
call
inc
orl
inc
cmp
jp
lds
les
pop
push
jmp
test
cmp
push
shlb
sbb
pushf
leave
pop
dec
dec
mov
push
mov
pop
adc
ret
fdivs
fwait
cli
push
icebp
mov
sbb
lea
dec
lret
jmp
clc
jg
dec
test
cmp
inc
aam
jns
xor
inc
data16
dec
jle
push
push
into
cld
stos
mov
and
sub
test
inc
pop
fmul
aaa
insb
add
push
test
cmp
jmp
aaa
in
hlt
subl
mov
inc
out
outsb
jge
mov
sbb
and
repz
scas
xlat
dec
pop
pop
iret
jg
cmp
pop
fnstsw
sahf
rcr
mov
fsubs
ret
jno
insl
jge
mov
or
enterw
jp
leave
lahf
lcall
mov
push
xchg
daa
or
ja
dec
jns
popf
pusha
outsl
ja
pushf
jmp
shlb
dec
xrelease
inc
mov
jge
mov
inc
inc
and
pusha
cli
inc
out
pushf
lcall
fcoms
shl
pop
jo
jmp
dec
cmp
sub
in
and
insl
jge
jae
idivl
jmp
push
mov
adc
push
adc
pop
mov
xor
les
leave
sbb
fdivrl
pop
jecxz
call
sbb
pop
stos
scas
or
xor
pminub
or
cs
insb
push
call
mov
das
shrb
mov
sub
jmp
push
or
int3
test
imul
arpl
or
das
ficoms
xchg
or
aas
es
test
sti
mov
push
push
push
loop
iret
and
sarb
ljmp
mov
inc
lea
shll
pop
fisttps
cs
insb
orl
mov
and
imul
insl
ret
fisubrl
push
dec
sbb
jbe
test
clc
repnz
in
in
lret
inc
dec
sub
cmc
gs
sbb
lret
je
and
pushf
adc
ja
mov
jnp
test
andl
xchg
mov
mov
fdivl
ljmp
int3
scas
fisttpl
push
jp
enter
sub
push
jbe
push
movl
enter
and
xchg
imul
sti
fistpll
xchg
inc
stos
lods
lret
sarl
movsl
adc
sbb
fcoml
dec
mov
sbb
cs
lods
pop
das
xor
leave
ficoml
adc
imull
imul
and
pop
out
stos
shlb
xor
sbb
popl
movsb
pushf
scas
dec
dec
icebp
cmp
or
sub
xchg
subl
xor
mov
push
pusha
adc
int
sub
xor
cmp
push
cmc
in
loop
cmc
cmpb
cmpsl
notb
cmp
insb
mov
push
inc
mov
out
jmp
in
mov
shlb
repnz
mov
js
scas
iret
inc
or
bound
je
pop
inc
adc
xor
lock
pop
and
jle
leave
mov
mov
and
jge
dec
fmull
mov
sbb
or
mov
jle
outsb
inc
mov
xor
xchg
jle
inc
rol
xchg
stc
add
mov
shr
aas
jnp
pop
pop
inc
jl
aas
stos
ja
adc
adc
ja
loopne
jno
sti
pop
test
sbb
pop
pushf
call
jne
push
jecxz
push
pop
leave
inc
iret
inc
cld
adc
es
out
test
xchg
cwtl
sbb
mov
dec
les
pushf
xchg
adc
cmp
add
loopne
pushl
ss
cmc
lds
notl
jle
or
stos
popf
xchg
cmp
adc
ss
jo
dec
mov
test
mov
and
jbe
adc
inc
aaa
ja
mov
loope
clc
mov
push
enter
push
mov
sbb
fistpl
xchg
pop
cmpb
sbb
inc
out
rcr
adc
sub
mov
mov
fidivl
pop
loopne
or
fsubrl
cli
shll
jg
push
adc
loopne
jmp
ret
cmp
int3
in
sub
pushf
lods
lock
mov
pop
ret
mov
js
sbb
jno
mov
js
cmc
stos
fidivl
enter
fnstcw
xchg
out
movsb
sbb
push
stc
notl
test
inc
jmp
shlb
scas
cs
fwait
mov
xchg
sub
rorb
xchg
push
cwtl
sbb
lret
mov
dec
cmpsl
cwtl
xor
testl
jmp
into
mov
in
orb
jbe
ret
aam
push
leave
dec
movsb
mov
add
jl
mov
out
repnz
das
mov
jg
push
mov
jmp
leavew
xchg
mov
dec
mov
leave
dec
mov
in
mov
dec
sbb
sbb
hlt
jecxz
test
push
addb
lret
adc
testb
test
dec
mov
xchg
lret
mov
jo
adc
pusha
mov
test
enter
adc
das
pop
arpl
lret
pusha
cmpsb
mov
das
popf
mov
aaa
shrb
aaa
inc
sub
out
or
dec
jno
les
orl
mov
pop
jo
adc
outsb
adc
xor
sub
ror
outsb
mov
xchg
loope
push
sbb
xchg
outsl
xchg
gs
xlat
sbb
lcall
jp
jl
in
push
mov
mov
xor
clc
lret
xchg
lcall
inc
and
mov
mov
and
data16
fcompl
outsb
mov
fdivl
mov
rorb
aaa
sub
lcall
insb
mov
sarb
push
cmp
sub
sub
push
mov
subl
xor
jecxz
repz
xor
jle
sbb
int3
lret
jp
sub
add
popa
shll
jle
sub
out
dec
daa
xor
push
rcrb
jb
pop
loope
and
push
push
adc
mov
rolb
repnz
pushf
fadds
pop
add
test
mov
sti
dec
mov
xchg
ds
dec
jle
lds
pop
push
push
dec
in
add
fs
sbb
icebp
push
jg
and
add
mov
or
loopne
jl
cmp
es
lock
sub
push
mov
fsubs
sub
out
sbb
subb
push
pushf
push
fcmovnbe
ss
push
jp
call
jl
inc
adc
movsl
mov
add
lahf
sbb
jo
jmp
dec
or
leave
cmc
xchg
ds
jg
adc
jb
xchg
mov
mov
dec
push
loopne
popf
mov
adc
cmp
popf
icebp
pushf
call
jb
icebp
cmp
adc
shrl
out
aas
cmp
arpl
xchg
out
ja
xchg
orb
jp
loopne
cmp
mov
jg
mov
or
mov
mov
push
data16
mov
cli
pop
cmp
pusha
enter
mov
data16
or
xchg
jns
jmp
leave
imul
pushf
adc
movsl
data16
jmp
xchg
std
inc
fnsave
inc
sub
arpl
aad
in
sbb
add
pop
out
inc
ficomps
cwtl
arpl
or
out
and
pop
pop
int
add
push
cmp
cmpsb
pop
lock
push
mov
outsl
shl
sar
test
push
add
mov
adc
xchg
addr16
aaa
repnz
xchg
mov
mov
dec
sbb
xor
arpl
movsb
outsb
rolb
cmp
mov
or
orl
cmp
out
mov
test
jp
cs
lret
inc
daa
lock
jno
enter
lcall
repnz
adc
jl
imul
sahf
scas
nop
in
inc
andl
push
inc
cltd
fadd
adc
dec
shl
cmp
cmp
xchg
mov
adc
mov
and
xlat
jp
xchg
scas
stos
jns
test
push
movsb
into
pop
add
imul
test
xchg
mov
sarb
mov
inc
add
and
das
stc
push
stc
adc
mov
clc
test
inc
mov
mov
or
loop
std
xchg
mov
pop
sub
into
not
adc
push
and
pop
icebp
lret
mov
pop
jns
std
fstps
subb
adc
sbb
pop
jnp
and
mov
mov
sub
repz
push
cmp
negb
inc
cmpb
sbb
cmp
stos
jl
ds
and
bound
mov
jae
shlb
movl
xchg
dec
push
dec
cmpsb
xor
fiaddl
xor
cmp
adc
loopne
cwtl
ret
mov
cld
push
lods
ror
jb
es
cmp
adc
movsb
sub
imul
out
fmuls
push
fidivl
sar
out
and
ret
push
rclb
cmpsb
adc
mov
mov
push
mov
pop
packssdw
jg
daa
inc
fwait
push
lret
or
in
add
push
mov
aam
inc
sub
sbb
outsb
je
sub
push
xorl
xor
xchg
stos
scas
or
push
adc
bound
push
cmpsl
outsb
or
add
jne
fs
popa
roll
addr16
gs
mov
lahf
inc
push
loop
pop
add
jge
ret
stos
mov
and
sub
lea
test
pop
into
dec
hlt
repnz
sub
sbb
sar
gs
xor
dec
xor
jmp
jo
lods
xchg
xor
push
out
push
out
push
mov
pop
add
out
insl
add
aam
inc
pop
or
pop
add
addr16
ret
insl
dec
jmp
leave
xor
xchg
adc
lds
or
mov
xchg
sti
mov
jl
dec
xchg
xor
fcmovne
cmp
imull
dec
xchg
call
cmpsb
mov
or
test
lds
jmp
sbb
mov
adc
mov
or
or
jle
sbb
xchg
into
dec
imull
ret
jno
stos
add
daa
lret
dec
movsb
negl
jecxz
outsl
je
into
pop
xchg
enter
int3
sbb
sbb
mov
push
pop
cmp
popf
pop
aaa
sti
adc
push
je
jbe
push
sbb
lods
das
push
inc
pop
push
scas
add
mov
rolb
lcall
bound
repnz
mov
imul
push
call
fstpl
out
mov
adc
inc
out
sbb
lods
jp
xchg
inc
and
js
popa
jb
mov
xchg
les
sub
adc
test
aas
jp
lcall
cmp
xchg
push
ficompl
scas
std
mov
out
dec
pop
lods
pusha
xor
dec
clc
dec
cmp
shll
dec
pop
sub
pop
inc
fadds
adc
xchg
cmpsl
dec
idivb
sbbl
mov
mov
test
imul
mov
push
ds
cmpsb
mov
sub
shll
mov
xorl
enter
fwait
lret
pop
cmpsb
mov
pop
mov
ficoms
test
scas
out
sbb
sub
dec
das
leave
mov
fbld
jns
sub
movsb
mov
fwait
push
pop
mov
inc
dec
jl
dec
outsb
push
inc
mov
in
dec
jp
add
inc
les
xor
notb
movsl
mov
dec
mov
cmp
push
add
addr16
movsb
call
xchg
lods
jne
bound
call
inc
cmp
push
test
dec
jne
lock
inc
cltd
fsubrs
and
insb
and
sub
cmp
test
jmp
test
mov
pop
xchg
pop
ds
int3
pop
in
add
pushf
jbe,pt
add
bound
dec
mov
inc
mov
scas
pusha
mov
inc
int
jae
lods
nopl
aam
inc
jp
fs
push
dec
lea
pop
scas
xor
call
cmpsl
inc
lret
dec
pop
in
xchg
in
cmp
jge
or
cvtps2pi
xorb
inc
int
and
notl
inc
xchg
stos
mov
jbe
adc
pop
add
and
enter
push
inc
test
divb
lods
js
push
pop
jne
dec
pop
adc
pop
ror
jl
je
out
jp
jle
mov
mov
cmp
jg
pop
hlt
into
inc
aam
mulb
repnz
cmp
pop
out
div
sbb
sbb
ret
push
xchg
adc
lods
sbb
invd
mov
cmpsl
pushf
cmc
fstpl
les
mov
das
fs
int
add
and
jle
repz
imul
add
loope
inc
and
inc
mov
pop
pusha
xchg
mov
stos
test
mov
pop
dec
xor
add
addb
scas
or
insl
jg
bound
ljmp
xor
mov
mov
es
stos
xchg
push
pop
xchg
je
adc
push
dec
je
inc
movsb
dec
aad
add
sahf
cmp
and
popa
out
jge
clc
dec
inc
fisubrs
xor
pop
std
jg
ja
pop
jecxz
std
pop
or
mov
fucomip
loopne
cmp
popf
xor
adc
mov
cmp
dec
mov
cwtl
cli
std
pop
dec
loopne
adc
dec
adc
aaa
and
repz
inc
mov
push
jge
inc
or
cwtl
mov
and
aaa
jg
lds
out
add
sub
add
mov
pop
rcrb
push
adc
fldenv
push
xchg
and
jg
movsb
sbb
xor
jmp
test
je
inc
sbb
or
cmp
mov
stos
inc
xchg
mov
mov
inc
xlat
mov
repz
imulb
fld
sub
std
dec
out
scas
das
movsl
push
push
popa
sbb
inc
mov
inc
stc
out
notl
call
dec
or
jmp
fisubrl
js
in
shlb
jns
leave
roll
jecxz
cld
sub
push
stos
sbb
jnp
fnsave
clc
add
xor
rorb
jmp
pop
xlat
jmp
mov
cmp
pop
es
out
fadd
shl
movsl
push
cmpsl
shl
jl
xchg
mov
xchg
das
call
mov
xor
xchg
ret
nop
es
rorb
xor
or
movsl
sub
push
ja
lahf
icebp
add
stc
lods
mov
add
or
mov
int
int3
mov
out
in
cwtl
and
mov
mov
clc
jle
scas
sbb
orb
xchg
push
sub
cmp
inc
add
jbe
rcrl
jae
sbb
outsl
in
push
and
pop
testb
stos
fldt
xchg
dec
mov
or
add
cmp
imul
mov
ja
pusha
dec
mov
jg
mov
adc
imull
adc
pop
pop
xchg
jns
test
and
inc
les
lock
or
mov
ss
and
mov
mov
or
mov
call
mov
xor
cltd
xor
movsl
call
inc
lret
into
xchg
idiv
mov
xchg
in
dec
push
jnp
mov
and
fildll
and
jmp
dec
sbb
fnsave
fldt
int
movl
cwtl
js
insl
lods
out
mov
jp
sub
nop
imul
adc
xor
jno
xor
out
dec
pop
icebp
xchg
cmp
sub
pop
dec
arpl
and
dec
mov
xchg
inc
lods
cmp
cmpsb
int3
daa
lea
imul
fwait
clc
pushf
and
into
cmp
nop
iret
aam
or
stos
jbe
push
push
popa
iret
stos
lods
push
mov
dec
xor
mov
in
ret
ss
push
stc
inc
pop
test
push
call
les
stos
movsb
sahf
cld
int3
iret
push
push
je
adc
pop
push
dec
js
mov
xor
out
dec
popf
je
cmc
imulb
aas
push
sbb
aad
pusha
movsb
gs
cli
out
clc
and
mov
cmp
test
adc
cmp
push
repnz
into
sarb
dec
stos
movsl
aad
cmp
mov
aad
xchg
iret
je
pusha
lret
cmpsl
hlt
mov
jo
lds
pop
xor
mov
popa
scas
jae
sbb
in
lock
mov
push
dec
js
imul
repnz
dec
rcrb
std
pop
jl
mov
lea
mov
jo
push
cmp
sbb
imull
lret
push
shr
clc
jno
jb
testl
jg
sbb
stos
ljmp
sbb
adc
aad
cmp
mov
add
lea
mov
jp
aas
or
push
add
push
adc
jnp
bound
aas
jne
or
loopne
lret
sbb
push
popa
push
jae
sbb
lods
lahf
lock
adc
gs
push
cmp
mov
inc
data16
xchg
movsb
or
add
dec
movsl
pop
pop
cwtl
loope
and
and
hlt
add
mov
or
jmp
inc
or
cmp
adc
cmpsl
mov
or
mov
int3
cmp
outsl
ret
jnp
xchg
pop
sbb
xchg
add
or
jb
shl
mov
sahf
pop
lret
popa
sbbb
das
jg
mov
push
mov
sub
cmpsb
addr16
push
pusha
lret
aam
sbb
outsl
add
mov
pop
pop
xchg
in
and
in
pop
icebp
push
rcr
rcrb
xchg
addl
push
mov
rcrb
cmp
inc
inc
mov
inc
lea
sub
cld
xor
scas
cld
das
inc
mov
aam
cmp
insb
push
xchg
mov
sbb
pushf
push
jbe
mov
jnp
xchg
mov
mov
jge
cmp
addr16
or
jl
xchg
push
scas
int
push
pop
imul
scas
adc
cmp
daa
leave
mov
mov
mov
jns
dec
lock
cld
out
push
pushf
cltd
adc
adc
mov
adc
and
and
cmp
daa
test
sub
les
xrelease
sahf
cmpsl
sbb
mov
push
xor
gs
out
adc
loope
fwait
je
ds
cmpl
jne
neg
push
pop
cmp
jg
push
shlb
jmp
xchg
and
pop
les
push
xchg
sbb
inc
jno
jno
add
xor
cwtl
fs
lea
jg
mov
int
imul
xchg
dec
movsl
call
push
mov
stc
addr16
sahf
mov
lret
xor
add
lea
pop
xchg
aaa
mov
jo
xchg
xchg
pop
mov
push
xchg
push
in
mov
hlt
andl
in
jp
aad
orb
xlat
mov
mov
es
xor
inc
jne
int3
and
psubb
cmpsl
shlb
xchg
inc
pop
pop
test
cs
sti
loope
aaa
dec
movsb
mov
aas
ljmp
and
push
ds
call
adc
cld
jnp
scas
xchg
mov
into
ror
inc
xchg
fstl
loope
rclb
ds
clc
mov
insb
leave
pop
iret
jae
fdivrp
leave
cmc
jne
sbb
out
adc
pop
and
sub
gs
lods
mov
sbb
inc
push
sbb
mov
lods
push
or
mov
jo
mov
das
push
andb
add
movsl
mov
or
arpl
add
adc
or
xor
or
fdivrs
and
cmp
pop
sub
pushf
or
aaa
testb
push
in
lods
sub
dec
fisubrs
aaa
dec
mov
adc
cld
gs
sar
je
pushf
syscall
push
push
and
in
xchg
rclb
mov
dec
lods
imul
out
and
and
sbb
adc
out
ret
mov
stos
insb
jecxz
mov
xor
dec
cmc
push
es
lods
adc
and
xchg
cmp
fnsave
dec
repz
incb
mov
and
loop
jns
pop
mov
jl
add
or
push
inc
mov
ljmp
add
xor
mov
call
adc
xchg
mov
cmpsl
xor
ds
and
add
or
xor
xor
or
jno
xchg
fsubrl
test
jle
pop
out
add
xor
in
sub
xchg
pop
or
jne
insl
mov
inc
mov
and
pop
and
mov
negb
rorb
stos
adc
and
insl
cmp
xchg
scas
mov
sbb
and
int
mov
xor
pop
mov
andb
push
fnstenv
xchg
loop
in
in
shll
cmpsb
jl
lahf
pop
test
mov
pop
jns
aas
mov
pop
sub
xchg
loopne
insb
das
or
jle
sbb
repz
jbe
jbe
icebp
popf
out
out
es
jne
fcoms
and
syscall
imul
mov
test
hlt
push
xchg
push
cmc
jnp
pop
push
stos
or
or
push
fsts
dec
es
push
lods
inc
mov
inc
push
addr16
in
xorl
sbbb
or
enter
ljmp
scas
and
cmp
outsl
cmp
jmp
dec
ss
jg
lods
mov
or
ret
sub
xor
mov
nop
push
std
or
jno
push
xchg
iret
pop
sub
loop
push
adc
mov
jb
mov
enter
mov
mov
inc
mov
test
in
pop
cmp
cmc
mov
and
stos
mov
fmuls
cmpsl
and
mov
iret
stos
lcall
jmp
out
ss
push
inc
inc
add
pop
push
rcrl
mov
in
ds
adc
sub
mov
sbb
mov
jmp
jo
push
dec
bound
pop
xlat
jl
cmp
shr
xchg
into
mov
mov
js
movsb
lock
aaa
mov
ljmp
frstor
inc
mov
leave
mov
or
cli
sbb
add
incb
in
cmp
or
shlb
cmp
dec
aas
mov
cmp
fisubs
insb
cmp
nop
sbb
jae
pop
pushf
aaa
pop
add
pop
lahf
adc
pop
aam
cmp
popa
repz
fimull
xchg
in
mov
push
rcr
mov
cmc
ficomps
mov
imul
test
ret
pusha
xor
ss
cmp
in
xchg
lods
mov
cmp
mov
cmp
int3
arpl
out
out
aad
hlt
fiaddl
pop
pop
xor
cmp
out
push
scas
dec
xor
push
mov
daa
jb
jle
push
or
xor
mov
fldt
or
xor
bound
hlt
push
cmc
xor
in
repz
loopne
xor
shll
jge
fwait
xor
adc
test
mov
add
test
in
inc
sbb
jno
repz
sbb
pop
push
addr16
cmp
out
adcl
sub
jmp
jo
jg
fs
and
cwtl
mov
mov
push
xchg
mov
es
sbb
sbb
pop
repz
dec
out
add
aad
pushl
call
out
jnp
repnz
sbb
or
shlb
cmp
imul
or
dec
clc
cmp
sbb
adc
inc
adc
push
lds
push
shll
mov
stc
outsb
sbb
xor
cmp
xchg
cmp
jne
xor
xor
mov
mov
ror
jb
mov
and
inc
adc
jno
cmp
insb
push
xor
xchg
pop
or
insl
and
cmpsb
xor
sub
shrb
add
enter
lea
scas
mov
fldl
add
lret
std
shlb
das
dec
sbb
jnp
or
or
movsb
sub
loope
and
and
adc
mov
pop
cmpsb
enter
sbb
daa
push
xchg
aad
lock
aaa
add
ljmp
cmpsl
aaa
mov
outsl
fstpl
and
fs
inc
cmp
test
mulb
pop
add
cmp
bound
jp
push
push
mov
cwtl
cli
mov
inc
cmp
scas
jae
dec
in
adc
cwtl
push
iret
push
jnp
in
in
sbb
sub
das
mov
dec
or
loope
cmc
aaa
movsb
das
cmp
call
xchg
mov
jo
sub
je
fmull
hlt
xor
or
cmp
jo
jp
or
cs
adc
adc
rorb
mov
mov
push
and
mov
cmp
jp
push
loope
mov
and
jmp
mov
fs
repnz
sti
test
inc
cwtl
movl
jmp
enter
jb
xchg
test
fildll
adc
xor
push
cmpsl
sbb
jle
mov
daa
lock
ret
add
jp
je
arpl
emms
enter
jbe
pop
and
mov
xchg
jmp
fimull
mov
adcb
pop
push
imul
mov
sub
inc
dec
ja
inc
ficoms
jl
jno
inc
xchg
inc
cmp
inc
and
xchg
sub
xchg
mov
jecxz
mov
cmp
pop
push
dec
aaa
aaa
sub
ds
gs
repz
sub
mov
jg
xchg
addr16
cmp
xor
xchg
cmp
push
mov
jb
in
jnp
and
mov
int3
ret
mov
pop
pop
nop
nop
dec
pop
fisubs
sbb
fisubl
mov
cld
mov
sub
ficompl
out
lret
xchg
les
aam
jle
out
outsl
sub
jbe
push
sbb
test
sub
jl
xchg
mov
fistpll
inc
outsb
addb
push
jmp
test
fnstcw
cmc
je
mov
xor
mov
sub
fisttpll
in
fldcw
mov
ret
cmpsb
out
cmc
pop
sbb
movsb
mov
lds
icebp
mov
scas
out
int
jb
fsubs
fdivs
fistl
mov
in
lods
add
adc
cmp
loope
dec
and
leave
mov
adcb
fwait
dec
adc
push
push
mov
xchg
pusha
mov
adc
jecxz
fisttps
mov
jnp
sbb
mov
sub
cmpsb
sbb
aaa
cli
lods
je
bound
cltd
popa
jecxz
sbbl
push
or
jo
and
inc
mov
out
or
mov
into
mov
int
adc
cmc
daa
fldcw
add
shrl
shrl
into
dec
lret
rcll
push
sub
movsb
xorl
sub
sbb
mov
stos
inc
imulb
hlt
or
xor
in
sub
fwait
pop
cmpsl
sbb
mov
movsb
cmp
inc
ja
cld
das
ret
jmp
push
es
jp
xor
adc
stos
xor
inc
xor
inc
cmp
pop
es
dec
lds
push
jno
push
rcl
stos
rcll
push
iret
les
mov
gs
inc
sbbl
insb
pusha
shrb
lods
sbb
repz
dec
fwait
xchg
arpl
lods
mov
shlb
adc
shlb
mov
mov
jmp
repz
loopne
out
push
popf
shl
scas
inc
je
add
sti
ret
and
mov
xor
sub
or
add
fisubrs
adc
mov
xor
add
or
test
pop
xor
stos
fsubl
sub
cmpsl
mov
out
cmpl
stos
inc
cmc
pop
jg
fcmovne
scas
imul
into
js
aaa
insl
and
pop
mov
inc
mov
or
xor
addr16
xor
pusha
aam
fldenv
mov
es
out
sbb
jg
push
mov
xchg
cltd
dec
cmp
inc
dec
out
ret
inc
cmp
dec
pusha
movsl
js
ljmp
sar
pop
push
sbb
push
jl
mov
mov
addr16
cmpb
in
jl
movd
ljmp
ret
jns
jb
out
addr16
mov
jae
adc
sbbl
imul
pop
jle
cmpsb
lea
enter
pushf
out
dec
cmpsl
add
pop
ret
push
fisttpll
shrl
jmp
sub
mov
xchg
xor
aam
jbe
mov
xchg
mov
xor
daa
movsb
push
pop
call
dec
shll
push
test
bound
lcall
jno
div
xor
sbb
sbb
push
mov
clc
xlat
push
lcall
sub
push
sbb
jns
pop
and
adc
repz
sbb
xchg
or
cli
imul
aas
enter
jns
jbe
jne
lods
test
insl
pop
and
mov
iret
and
shl
imul
enter
jb
xor
negl
add
enter
cmpsl
push
mov
add
fstps
xchg
nop
jo
ja
pop
inc
jp
pop
push
add
int3
jne
xchg
adc
push
xchg
cwtl
push
lret
fnstsw
fwait
or
xchg
test
mov
pop
pop
xchg
push
test
mov
jno
sbb
lret
jo
push
test
lea
enter
sub
cltd
fistpl
add
pushf
dec
push
mov
outsb
ficomps
mov
xor
mov
test
pop
push
cltd
rcll
ja
cld
into
lret
out
test
orl
aad
mov
ja
in
lret
negl
out
inc
cmp
mov
sarl
les
andb
xor
mov
aaa
bound
popa
jo
cs
lcall
lcall
pushf
mov
dec
add
pop
hlt
pushf
mov
insl
shlb
mov
push
xor
pop
addr16
out
fsubs
inc
xor
push
or
fcomps
cmp
push
sbb
cmp
icebp
sub
lret
jae
aaa
pop
dec
clc
lods
mov
shll
sbb
lret
lock
lods
pop
adc
sti
sbb
mov
sbb
ret
repnz
sahf
test
or
loop
lea
mov
fwait
dec
lds
test
fbstp
out
inc
stos
fistl
test
jne
arpl
aad
cmp
add
repz
cwtl
push
icebp
insb
stos
imul
cmp
insb
icebp
mov
cmp
or
pop
sbb
imul
sbb
pop
cmp
mov
xchg
or
xor
xchg
ret
cmp
dec
push
sub
or
jno
into
outsl
lea
decl
cld
rorl
test
mov
lock
aaa
in
push
mov
icebp
cld
mov
inc
loope
cmp
out
orb
xor
mov
ds
cmpsl
jmp
or
pop
xor
dec
mov
cmp
pushf
call
mov
mov
lret
sbb
add
and
or
imul
sub
jae
mov
sub
adc
jmp
pop
xor
adc
mov
loop
cmc
mov
fidivrs
sbbl
or
add
sub
ret
xchg
and
stc
movsb
adc
cmp
sti
sub
lahf
cltd
push
movsb
xchg
jbe
push
pop
jae
jmp
jl
fucom
mov
notl
sti
mov
push
insb
movb
mov
jge
int3
imul
and
xor
cmpsb
movsb
lahf
mov
test
cwtl
and
cmp
push
mov
mov
adc
cli
imul
jne,pn
or
sbb
aam
inc
jo
mov
pop
xor
xor
mov
inc
sub
shrb
push
fstpt
push
xchg
mov
lret
or
lock
mov
cmp
dec
addr16
lea
imul
ja
ljmp
stos
jl
or
mul
jo
mov
lea
in
popa
push
mov
into
in
push
mov
jge
les
cs
das
jmp
or
fiaddl
add
imul
mov
mov
inc
xchg
or
sarl
inc
sub
jne
inc
sub
push
int
add
sbb
mov
sahf
ret
andl
mov
rdmsr
mov
fists
rcrb
push
pushf
pop
xor
xchg
ret
cmp
pextrw
insb
push
add
mov
lcall
xor
in
fcom
mov
mov
cmp
dec
xor
xchg
mov
add
notb
iret
jp
ret
stos
bound
add
pop
sub
bound
lahf
lret
out
jae
add
aaa
mov
loop
dec
mov
and
loopne
outsb
fwait
test
arpl
fcmovbe
or
jecxz
cmc
out
in
jecxz
mov
sub
sbb
add
cmpsb
dec
mov
testb
jb
fcmovu
cmp
int3
push
pushf
cmpsb
mov
xorl
push
lahf
pop
imul
nop
pop
sbb
sti
mov
mov
mov
and
dec
rol
movl
xchg
das
pop
ja
jecxz
dec
adc
add
lock
rcrb
cltd
adc
mov
xchg
and
mov
movsl
aaa
xchg
lahf
sub
mov
push
push
lahf
and
dec
mov
fnsave
imul
jecxz
inc
stc
xor
clc
movsl
adc
repz
inc
jne
sbb
inc
push
mov
unpcklps
repnz
clc
mov
sub
cli
pushf
adc
adc
arpl
int
or
pop
mov
mov
sub
ss
pop
jb
mov
mov
adc
push
aas
jecxz
lahf
dec
mov
adc
sub
es
shrb
pop
push
inc
rclb
mov
repz
fnstenv
mov
scas
aad
popa
or
shrb
adc
sbb
jp
sbb
pop
les
sbb
outsb
xor
sub
cmp
mov
sbb
dec
data16
push
sub
loop
aam
pusha
cltd
adc
add
addr16
lret
xor
inc
icebp
scas
cs
jecxz
sub
inc
fisubl
adc
idivl
sub
arpl
test
xchg
iret
test
subl
sbb
or
dec
test
or
cmp
aaa
cmp
int
cmpsl
mov
cld
mov
fcomps
inc
dec
push
popf
xchg
pop
nop
cmp
in
in
push
test
scas
dec
or
mov
test
ss
jno
int3
dec
dec
addb
jmp
jge
xchg
ret
arpl
adc
ds
push
xchg
iret
test
xorb
push
mov
xor
addr16
or
xor
addl
insl
test
xor
fisubrl
push
push
data16
sbb
mov
mov
and
dec
ficoml
lea
add
cmp
mov
daa
xchg
cmp
incb
sub
in
xlat
ja
int
ret
cmp
inc
dec
or
out
aad
xchg
sbb
dec
push
pushf
call
push
pusha
and
aaa
scas
in
add
or
dec
je
jnp
stos
adc
cli
in
imull
mov
je
das
inc
jb
mov
flds
jo
dec
push
mov
test
mov
cmpb
xchg
mov
aas
bound
xchg
cmp
cmpsl
and
fisubs
in
cmpsl
jle
mov
hlt
cmpsb
mov
cmp
loope
arpl
sub
mov
xchg
pop
out
pop
or
popf
mov
cmp
ss
push
arpl
out
mov
xchg
mov
cmp
arpl
pop
adc
in
ljmp
mov
push
fisubrl
cltd
aad
sbb
jnp
xchg
fdivl
mov
mov
mov
and
stos
test
adc
jae
lea
jbe
fucomip
pushf
ficompl
sti
aam
imul
addr16
scas
mov
faddp
out
inc
dec
dec
mov
sbb
adc
stc
pop
ret
and
bound
jg
insl
aaa
jp
out
lods
mov
push
push
pop
pop
or
and
mov
mov
je
popf
jmp
sti
xor
push
fs
pop
cs
mov
int
leave
scas
inc
pop
lods
sbb
xor
mov
inc
lods
loop
jmp
shll
cmpsl
or
pop
lock
mov
jmp
rclb
jno
push
repnz
mov
jge
push
cli
aaa
or
mov
xor
mov
in
jl
xor
inc
xchg
iret
fnsave
adc
cmpsb
push
ds
out
icebp
sub
out
dec
aad
sub
and
bound
push
out
loope
int3
jns
lods
dec
imul
int3
mov
adc
xor
out
xchg
push
jae
pop
lret
mov
lret
pop
cs
push
in
int
mov
gs
mov
cmp
nop
popf
outsb
mov
mov
rcrl
xor
push
data16
lret
sahf
es
push
out
inc
mov
jbe
gs
es
test
push
dec
add
or
sub
xchg
adc
mov
loopne
inc
ja
mov
sbb
adc
aas
pop
mov
cli
inc
ljmp
aas
insl
mov
cmp
filds
fiadds
call
dec
leave
shll
dec
aas
ja
inc
test
rorl
sbb
push
mov
jns
add
xchg
jle
mov
in
leave
dec
add
pop
pushf
sbb
fcmovnb
mov
test
mov
xchg
pop
xchg
pusha
add
sbb
scas
test
rol
xor
in
push
pop
xchg
ja
aam
pop
push
pop
pushf
popa
int3
mov
cld
lret
mov
sbb
mov
in
mov
test
mov
mov
mov
jae
and
or
jle
pusha
sbb
clc
push
xchg
sbb
push
mov
pop
inc
mov
pop
mov
sbb
es
imul
jb
jo
aam
in
ss
or
imul
cli
sbb
sub
outsl
fxch
testb
xchg
cmpsl
clc
cmp
add
sbb
cs
pop
cmc
cld
pop
lret
aas
jnp
xlat
jmp
mov
cmp
jle
fidivl
mov
inc
add
mov
fidivrl
fistl
jb
lods
mov
int3
stos
mov
call
mov
pop
andl
and
adc
std
inc
add
call
gs
lret
pop
insb
pop
xor
js
repz
mov
jne
mov
mov
dec
jmp
mov
add
bnd
sub
push
mov
mov
jne
or
in
jg
mov
fwait
aad
mov
jno
jecxz
popf
test
xchg
cld
xorl
push
mov
xchg
mov
lods
arpl
dec
add
jmp
pop
mov
or
sub
push
call
cld
mov
fs
call
xor
in
scas
xor
fdivl
mov
jbe
pushf
xchg
xor
sbb
and
inc
inc
push
cld
pop
lret
jle
adc
xor
mov
xchg
inc
and
das
fs
pusha
mov
add
push
test
ss
sub
mov
dec
mov
jg
test
push
repnz
push
lret
in
push
hlt
cmpsb
push
sti
lahf
movsb
mov
std
call
push
dec
ja
xchg
jecxz
rorl
or
push
mov
mov
jl
ret
sbb
fistl
inc
mov
or
sahf
fwait
cwtl
fldln2
jmp
jg
arpl
mov
xor
insb
orl
jno
movl
jg
cmovns
pop
or
push
push
out
out
sbb
adc
insl
popf
xor
sbb
call
pop
mov
or
ja
or
test
and
loop
dec
inc
fs
cmp
mov
pop
jbe
sub
xchg
adc
push
arpl
inc
cmpsl
flds
xlat
pusha
add
sbb
sub
xchg
pop
outsb
shrl
outsb
mov
les
fs
test
pop
sbbl
jae
js
and
or
adc
leave
push
mov
sub
sahf
shlb
aam
loopne
cli
movsl
mov
lods
fwait
mov
je
test
shl
sti
xchg
psrlq
stc
insb
mov
iret
pushf
cmp
add
add
inc
dec
push
ret
xor
cmp
inc
push
dec
jecxz
fistpl
shrl
xchg
mov
fdivs
mov
fwait
jbe
out
ret
sub
inc
mov
xor
sbb
lret
push
int
jo
sbb
icebp
out
and
rorb
xchg
nop
cmc
sub
divl
and
hlt
arpl
leave
mov
inc
add
push
pop
add
sbb
pop
sahf
dec
movsb
or
out
test
rcll
mov
mov
pop
stc
in
sub
pop
mov
ficomps
enter
pusha
mov
dec
and
add
cmp
cld
outsl
adc
lret
pushf
xchg
and
idivl
ss
repz
nop
mov
jl
inc
mov
notb
ret
vpshuflw
dec
or
stos
mov
jle
std
add
sub
rcrl
xor
mov
pop
aad
dec
bound
dec
mov
cmp
or
mov
scas
sbb
pop
inc
sub
push
dec
mov
fsubrl
add
rsm
xor
jns
je
ficomps
adc
pop
push
fsubr
scas
push
adc
pop
push
sub
rclb
xchg
or
cmpsb
sbb
js
gs
fdiv
movsl
pop
jmp
cs
fmull
and
cmp
and
mov
pusha
je
inc
bound
insb
lret
mov
pusha
cwtl
sbb
xchg
test
mov
iret
jnp
xchg
sub
jnp
push
lds
das
push
aaa
dec
stos
cltd
mov
sub
mov
testb
mov
lock
dec
cmp
and
and
je
inc
cmp
xchg
lret
popa
out
inc
jge
dec
insl
jg
out
mov
sbb
jle
test
enter
ret
fsubp
nop
inc
jmp
xchg
sub
cmc
add
sub
ja
dec
aam
add
int
push
or
arpl
mov
cmpsb
sub
xchg
je
jmp
ficoml
mov
mov
sub
mov
inc
mov
pusha
jle
pushf
cmp
or
sbbb
popa
or
cs
dec
xchg
xchg
dec
lahf
mov
pop
xchg
les
mov
scas
cmpsb
sub
es
lcall
fxch
add
xor
jne
call
ljmp
adc
xchg
sub
fnsetpm(287
xor
andb
mov
jl
loope
loope
fwait
xchg
mov
rcll
loop
stos
test
jle
dec
arpl
cmc
popa
pop
pushf
mov
scas
sahf
dec
stc
imul
loopne
cmpsl
lods
inc
push
cvtps2pi
mov
pushf
push
in
scas
shl
adc
sbb
inc
xchg
xchg
lea
enter
insl
inc
inc
in
jg
jno
loope
adc
push
jno
into
je
imul
dec
lds
inc
sub
rcrb
outsl
push
adc
cli
sub
add
xor
pslld
sti
push
dec
test
fidivl
pop
pop
mov
popa
xor
fs
xchg
mov
sub
mov
push
mov
cmp
mov
stos
dec
push
loop
adc
fidivl
aad
push
dec
mov
add
lods
add
and
adc
xchg
mov
iret
adc
lret
sbbl
pop
sub
mov
rcrb
into
xor
pop
lcall
add
sub
mov
push
xor
sub
mov
mov
push
int
sub
push
mov
loope
push
mov
cli
hlt
xor
and
pop
aam
outsb
push
xor
jb
lea
movsl
xor
sub
inc
sub
fcmovnbe
add
iret
ljmp
inc
es
xchg
aam
mov
sub
sbb
xchg
push
xchg
and
push
add
rcrl
xchg
jecxz
leave
pop
pusha
scas
push
out
les
aam
int3
xchg
pop
aam
mull
popf
push
cmpl
push
mov
dec
sti
lods
cmp
test
pop
xor
lods
cmp
ja
jne
lcall
daa
sbb
mov
push
movsb
xchg
adc
imul
xor
push
inc
js
les
fldenv
adcl
sbb
push
in
mov
mov
jnp
mov
lret
cmpsb
stos
fs
icebp
es
inc
je
push
and
mov
pop
pushf
ror
sub
and
mov
push
adc
adc
leave
xchg
push
jmp
aam
mov
gs
sub
add
mov
pop
repnz
cmc
out
pop
pop
xchg
lahf
repz
fdivrs
sbb
cmp
mov
neg
aaa
movsl
out
gs
sbb
popa
mov
rorl
dec
sbb
adc
xor
cmp
jg
cld
sub
stc
stos
loop
xchg
pop
std
jecxz
add
and
mov
jecxz
add
push
gs
xor
push
xchg
dec
pushf
ret
pop
inc
popa
insb
inc
mov
cmp
jle
pop
call
ror
mov
jle
mov
sub
jge
add
js
xchg
push
and
push
sbb
out
xor
inc
adc
std
jmp
mov
or
jge
pop
lahf
call
pusha
jle,pt
sahf
dec
adc
arpl
mov
stos
sbb
jb
loopne
xchg
jbe
pusha
jle
insl
inc
repz
dec
mov
add
and
push
push
sahf
in
aas
popf
sti
js
test
imul
push
or
push
stos
leave
fdiv
mov
jnp
xchg
mov
push
or
mov
xchg
arpl
imul
mov
inc
in
mov
xchg
mov
out
jnp
and
dec
sbb
fldcw
mov
inc
stc
loop
shl
loopne
mov
pop
sbb
bound
roll
jg
adc
incb
fisubs
fs
ss
loope
out
mov
pop
test
pop
inc
xchg
popf
or
cwtl
outsb
hlt
pop
dec
dec
fwait
rorb
outsl
stos
movsl
jbe
pop
sbb
jne
mov
push
test
cld
pop
jp
inc
bound
adc
xor
and
or
dec
push
inc
int
inc
sti
and
push
xchg
rcll
push
aas
imul
test
mov
mov
sbb
gs
or
je
xchg
sti
mov
push
inc
int3
or
imul
mov
mov
mov
cmp
mov
inc
dec
sbb
cmpsb
sbb
mov
ljmp
inc
xchg
mov
testl
imul
addr16
mov
xchg
jge
lds
ja
or
es
mov
push
push
or
push
movlps
test
or
out
out
fstpt
in
jbe
out
cmp
aas
das
xor
mov
pushf
cmpsl
sahf
mov
dec
imul
lods
xchg
mov
xchg
fs
xlat
push
lcall
lods
sti
andb
shll
sahf
adc
sti
or
xor
test
or
ds
js
adc
mov
ret
lods
fdivrl
call
inc
add
sbb
dec
out
adc
lds
xor
or
mov
inc
adc
test
into
aad
fwait
adc
shll
xchg
std
inc
rcrl
add
lcall
or
inc
add
mov
mov
in
out
cmp
xchg
jmp
xchg
jl
cmp
test
xor
pop
add
loope
clc
push
push
movups
jg
mov
mov
sbb
xor
add
sbb
sti
rcrb
cmp
popf
xor
cmpsb
push
xchg
xlat
add
pop
mov
jnp
pop
lds
loop
jecxz
ja
ljmp
xor
cmp
gs
xorl
out
repnz
shlb
mov
xchg
dec
mov
xor
push
jle
cmp
outsb
cmpsb
aaa
aaa
adc
xchg
loope
mov
stos
icebp
mov
jno
rclb
jmp
mov
dec
pop
inc
push
xor
xor
dec
pop
filds
cli
popf
push
sbb
das
mov
jecxz
add
xchg
pop
jae
inc
mull
gs
dec
int3
in
push
jne
xlat
fildl
or
lds
lcall
movsb
stos
insl
xor
loope
out
jecxz
xchg
loop
pushf
xchg
mov
in
int
out
daa
stos
repz
out
inc
pushf
mov
popa
add
pusha
sub
in
mov
sarb
push
add
insl
cmp
xor
cmp
adc
pop
lds
mov
jmp
inc
pop
pop
pusha
inc
dec
fcoml
mov
clc
xor
sbb
mov
or
inc
leave
sti
pusha
dec
push
push
pop
push
lahf
and
out
ds
cmp
pop
pop
jno
xor
mov
and
xchg
sbb
xor
pop
push
push
outsl
mov
sub
xchg
sbb
jmp
cltd
insl
and
xchg
aad
data16
in
cmpsl
inc
mov
xchg
movsl
fs
jmp
and
push
aam
inc
mov
ss
cs
popa
std
push
repz
mov
test
fs
adcb
mov
incb
lods
cmp
sub
add
add
pop
and
cmp
pusha
cmpsb
pop
ss
push
sbb
pop
lock
jno
inc
gs
fimuls
or
push
mov
mov
adcl
cmpb
cmpsb
fmuls
push
mov
xchg
movsl
aad
push
adc
jg
mov
xchg
mov
ffreep
add
push
jmp
pusha
repz
pop
outsb
out
in
or
insl
movsl
adcl
cli
pusha
dec
or
cld
pop
jmp
aas
popl
andl
fmull
shrl
ljmp
pop
sbb
ds
cmp
mov
jl
int3
mov
jmp
call
adc
ror
aaa
les
cmp
je
rorb
sub
dec
push
out
test
int
dec
aad
or
fsubrs
xchg
dec
or
aad
test
pop
jecxz
pushf
pushf
adc
sbb
int3
hlt
nop
clc
adc
push
jnp
push
push
mov
mov
gs
or
and
pop
mov
or
clc
lock
sub
aaa
mov
fldt
mov
mov
movsb
cmp
sbb
jecxz
add
dec
pop
scas
xchg
filds
or
shl
xor
loop
lea
outsb
ljmp
and
push
sahf
sbb
out
jmp
das
cltd
or
mov
es
call
aas
jne
pop
rcrb
fldcw
dec
iret
mov
xor
mov
push
jecxz
loop
add
and
leave
lret
mov
bound
dec
adcl
cmpsl
andl
xorb
stos
enter
hlt
cli
out
xlat
sub
mov
cld
mov
mov
ret
add
shl
js
daa
call
or
test
ljmp
je
mov
jmp
sub
cmp
cltd
es
mov
js
mov
sub
or
and
mov
xchg
in
inc
mov
cwtl
test
mov
pushf
loope
test
in
and
add
out
xchg
lds
das
jns
push
and
jge
loopne
movsl
sbb
cld
rorb
mov
dec
sub
xor
inc
pop
xchg
add
and
leave
xlat
repz
lret
mov
in
pusha
das
sub
push
es
jp
leave
jns
jns
adc
mov
dec
gs
inc
cmpsl
add
sub
mov
fwait
or
add
aaa
test
mov
enter
inc
mov
dec
dec
xor
mov
xchg
inc
or
xor
gs
cmp
dec
test
add
cwtl
das
mov
xchg
pop
or
sbb
or
mov
mov
ja
data16
test
into
inc
in
ljmp
ss
scas
cmp
pxor
les
shll
xchg
in
rclb
mov
sti
insb
push
jmp
push
aad
fsubl
in
clc
inc
lret
int
pop
int
adc
and
outsl
sbb
subl
daa
out
sbb
xor
lret
sub
push
mov
jmp
aam
dec
stos
sbb
xor
jne
adc
cld
push
jmp
jnp
jp
ljmp
push
mov
jae
and
stos
dec
cmp
lret
xchg
popf
xor
mov
insb
lods
push
or
xchg
imull
fldcw
jb
push
xor
ret
jecxz
lock
xchg
mov
sub
xchg
sbb
adc
adc
outsb
push
inc
mov
aam
cli
push
mov
mov
sbb
mov
test
dec
pop
jge
ret
test
xchg
fildl
and
out
ret
jmp
scas
mov
mov
adc
cmp
xlat
lds
or
mov
stos
adc
mov
pmaxub
cmp
adc
adc
or
imulb
mov
out
adc
faddp
and
jg
mov
fs
mov
or
shl
mov
and
xchg
mov
inc
xor
inc
adcb
adc
addr16
pop
dec
call
ja
dec
cli
jnp
int3
pop
xor
mov
pop
add
stos
lea
repz
shrb
ja
cwtl
mov
sti
mov
sub
je
and
pop
mov
movsl
mov
jl
dec
shr
loop
sbb
data16
cld
add
lds
mov
mov
adc
jge
fnstcw
sbb
jbe
push
or
pop
xchg
push
pop
mov
and
dec
aaa
lret
mov
cs
bound
add
lret
jmp
lret
insb
js
and
lock
rcrl
in
aad
push
mov
inc
xor
push
mov
sub
cmp
insb
loope
add
popf
mov
jg
and
out
xor
movsl
mov
and
adc
popa
icebp
cmp
pop
mov
pop
popf
adc
xor
lods
dec
xchg
scas
je
dec
leave
push
or
push
shl
cltd
test
ffreep
loopne
jns
fdiv
lcall
shrb
lret
js
fisubs
mov
or
cld
push
sarb
lret
aam
inc
stos
inc
in
jne
or
enter
add
movsl
add
xor
push
cmp
in
cli
and
or
inc
xor
or
mov
daa
xchg
fiadds
pop
fsubl
and
inc
pop
push
shll
adc
test
aas
in
push
dec
sti
push
jno
adc
mov
aas
ds
mov
es
and
or
and
xchg
sbb
stos
xlat
xchg
insb
sub
or
shll
pop
mov
pop
adc
loope
dec
movb
cltd
xor
xchg
cmc
cld
out
shrl
aad
add
andl
mov
xor
dec
push
lcall
clc
xor
pop
call
xchg
inc
pop
stos
mov
xor
dec
outsb
sub
cmp
push
aad
out
cmp
rorb
mov
out
cltd
add
sbb
push
enter
add
test
adc
xchg
stos
dec
dec
mov
dec
mov
jae
mov
je
mul
bound
ljmp
in
xchg
push
hlt
xchg
xlat
push
push
jne
rcll
push
jne
test
sub
sti
lds
push
orb
imul
mov
xor
xchg
xchg
cmp
xchg
fisubs
mov
sbb
pop
pushf
dec
cli
cld
in
fsubp
js
sbb
shl
mov
je
pop
mov
adc
mov
mov
decl
inc
es
cmc
inc
out
mov
iret
push
pop
ljmp
test
and
es
xor
cmp
sbb
popw
ljmp
test
push
out
or
jp
sub
sarl
adc
xchg
neg
lods
mov
sbb
stos
xchg
adc
cmp
int3
sarl
cs
fwait
and
lods
push
pusha
pushf
aam
loopne
aam
loopne
add
ffree
test
mov
jg
fimull
shl
or
jl
aam
inc
adc
jns
add
cmp
loope
gs
ljmp
outsl
enter
sub
and
mov
and
es
sub
xchg
mov
std
test
cmp
mov
aam
jns
jmp
inc
cwtl
add
sub
push
cmp
jecxz
mov
adc
cmp
test
pop
mov
sbb
sbb
fcoms
push
cmp
inc
mov
lret
dec
sti
lock
mov
arpl
rolb
or
pop
pop
stc
dec
jp
inc
mov
cmp
add
push
push
sar
push
cmp
jp
dec
daa
cltd
adc
lcall
shll
movl
outsb
aad
daa
xchg
adc
lret
jecxz
movzbl
aad
rcrl
loopne
xorl
jne
insb
lock
jl
jbe
mov
stos
adc
xchg
add
cmc
lods
sub
inc
and
mov
cwtl
dec
cmp
cmpsl
out
addr16
pop
jns
push
dec
fnstcw
sub
gs
jl
jmp
sub
sahf
pop
adc
pop
test
outsb
test
push
dec
pop
test
ljmp
mov
push
xchg
mov
jge
mov
mov
pop
push
add
cwtl
push
repz
inc
adc
add
ret
sbb
stos
jnp
int3
inc
int3
mov
lcall
fcoms
ja
scas
mov
jnp
mov
add
cwtl
in
xchg
fmul
jmp
pop
jbe
sbb
mov
xchg
mov
dec
or
xlat
push
pop
ficompl
cmpsl
dec
jecxz
in
or
mov
mov
shlb
push
push
int3
rorb
lret
repnz
jmp
adc
cmpsb
rcrl
lea
jp
out
ret
push
lret
xor
shll
repz
call
dec
xchg
mov
cmp
stos
jo
add
and
cwtl
inc
add
mov
adc
test
mov
scas
inc
lods
shr
adc
insl
std
out
rorl
int
nop
jg
outsl
stos
push
cld
xchg
lret
lods
cmp
pop
fists
push
adc
xor
ret
data16
add
and
movd
out
shl
int3
mov
push
loop
leave
lds
fwait
movsl
add
out
push
test
and
aas
add
inc
jb
and
mov
test
dec
bound
inc
xor
fldlg2
push
fdivs
mov
repz
pop
pop
add
jl
enter
and
out
cltd
gs
lcallw
inc
test
fnstenv
xlat
dec
or
mov
mov
jmp
and
pop
add
cmp
push
test
mov
xor
stos
fnclex
in
test
jo
arpl
cmp
jecxz
push
subb
sbb
mov
sbb
inc
cli
int3
cs
fmuls
jne
in
imul
xchg
out
or
xor
or
test
movsb
sub
dec
loope
clc
addps
sub
mov
xchg
fldenv
and
fs
xchg
icebp
out
leave
std
adc
scas
aam
mov
bnd
pop
aas
addr16
jnp
aam
add
cli
and
sbb
fstps
mov
add
dec
mov
test
jno
nop
mov
sub
les
dec
ss
cs
adc
in
mov
adcb
lcall
xchg
pop
jmp
bound
push
dec
sbb
sahf
adc
jns
push
hlt
js
mov
shlb
or
and
lods
out
mov
mov
cmp
mov
out
in
paddb
jbe
inc
bound
xchg
aaa
adc
insb
pop
loopne
sub
or
sbb
cmp
or
aas
mov
inc
inc
rorl
jns,pn
les
ds
cmpsb
mov
adc
jo
sti
pop
xchg
mov
out
call
loope
loope
test
in
jmp
sar
xor
add
xor
rcr
imul
ja
aas
mov
add
movsl
push
adc
shrb
pop
xlat
cmp
mull
xchg
and
fsubl
pop
fisubrl
pop
sbb
add
cltd
add
mov
ret
movsw
repz
out
jmp
imul
inc
inc
dec
push
addb
ja
rol
fbstp
mov
push
mov
in
out
inc
int3
loope
mov
mov
jmpw
test
mov
push
rorb
fisubrl
lret
and
cmp
ret
inc
cwtl
dec
fwait
call
cmp
push
mov
push
movl
xchg
in
inc
imul
and
adc
sub
incl
jb
or
scas
aam
lds
xor
out
push
pusha
fadds
aas
sbb
outsb
mov
test
cmp
rcrb
adc
push
xlat
fwait
adc
dec
arpl
scas
inc
test
fists
movsb
jo
adc
and
push
or
mov
jae
pop
popl
inc
sub
sahf
insl
decb
stos
sar
pop
shlb
cmp
inc
jmp
call
mov
mov
jge
cld
lret
dec
daa
std
inc
daa
jnp
lock
stos
cmp
rcrb
ja
popf
imul
lods
ljmp
icebp
test
sti
popf
aas
push
ljmp
push
and
sbb
jecxz
adc
jecxz
pxor
mov
fsts
out
adc
in
push
xor
cltd
jmp
sbb
lret
jle
shll
imul
sub
imull
daa
shld
imul
xchg
mov
in
movsb
and
xchg
inc
cld
dec
dec
clc
dec
or
ror
mov
push
pop
in
mov
bound
and
push
std
xchg
outsb
and
sahf
lret
adc
xchg
xor
push
push
jge
outsl
xchg
dec
popf
sbb
out
add
leave
lret
inc
inc
gs
out
jb
out
xchg
ss
pop
das
aas
ja
and
push
xchg
push
cmp
add
xor
gs
xchg
xor
fildll
movsl
pop
bound
sahf
cmp
out
mov
aas
lods
push
cmpsb
shlb
lcall
bnd
nop
cmp
int
rcrb
xchg
or
je
fmull
dec
push
push
aaa
dec
out
cmp
pop
jp
fiadds
jb
pop
test
adcb
popf
sub
fistpl
sbb
repnz
xchg
sbb
pop
in
jne
inc
adc
cwtl
cld
push
mov
icebp
je
jns
imul
xchg
mov
jb
sub
xor
fldlg2
ljmp
or
inc
mov
sbb
fldl
dec
in
sbb
or
data16
cmp
loopne
xor
mov
cltd
push
ljmp
mov
mov
int
xchg
push
cmp
stos
and
push
movl
or
jecxz
mov
loope
mov
mov
divl
mov
rcrb
push
xchg
rolb
sbb
pop
cli
lods
test
mov
xor
adc
adc
mov
push
dec
add
subl
add
mov
push
cmc
fs
mov
mov
dec
test
out
aad
jmp
dec
lahf
pop
mov
bound
cli
stc
or
mov
cmpb
sbb
sbb
je
jnp
clc
push
mov
test
out
cmp
or
inc
xchg
divl
les
pop
inc
jns
pop
dec
or
sbbb
outsb
jns
add
dec
ljmp
ljmp
inc
les
jo
shl
fstpt
sbb
repnz
xor
ret
negl
mov
lods
pop
int3
cmp
jb
mov
push
fisubrl
cmpsl
daa
mov
or
push
pop
dec
icebp
ret
sub
in
mov
ret
es
jmp
mov
lahf
out
jb
xlat
mov
adc
pop
inc
fisubrs
mov
data16
cmp
push
sub
sub
roll
gs
add
jne
jl
out
pop
push
push
lcall
cmp
mov
cmp
das
sbb
jp
xor
daa
push
xchg
xchg
sbb
and
push
jbe
cmp
pop
jb
inc
xchg
js
sbb
les
stos
mov
mov
and
ret
xchg
cmp
fxch
push
adc
sti
push
mov
loop
add
mull
sbbb
mov
fisttpl
mov
pop
je
pop
xor
aas
scas
lds
mov
sub
and
push
push
int
pop
popa
sbb
jnp
into
je
jg
push
jne
mov
aas
sub
mov
push
adc
je
xorl
pop
aam
fisubrl
addr16
lods
xchg
test
add
lahf
xor
or
movsl
and
sub
xchg
xor
lcall
push
or
repnz
cmp
out
or
icebp
leave
adc
sti
stos
cmp
add
ja
ret
or
pop
xchg
xor
and
sarb
insb
cwtl
cmp
push
mov
or
mov
or
and
mov
pop
in
sbb
mov
sbb
stos
cmp
mov
out
mov
outsb
xchg
arpl
shll
fs
sub
and
in
in
dec
aam
jnp
repnz
gs
testb
jp
adc
mov
in
jb
or
xor
dec
mov
mov
xor
repnz
dec
in
idiv
sbb
cmc
std
rorb
mov
aad
data16
add
add
dec
cmpsl
lret
mov
mov
inc
inc
leave
int
imul
inc
xor
cmp
rcll
push
xor
pop
adc
mov
jnp
insb
ret
pop
and
dec
jns
pop
shrb
mov
xor
stc
pushf
jb
loope
jae
jns
cli
std
popa
sbb
loopne
mov
pusha
cltd
sbb
pop
push
or
ja
sahf
add
movsb
lock
ss
out
pop
cmp
xchg
lret
scas
jg
icebp
pushl
or
and
ret
rcr
bound
jmp
jb
stc
ds
xchg
push
ret
cmpsb
xchg
jp
sahf
mov
xor
dec
jae
jle
xor
xor
rolb
sub
xor
push
xor
pop
sub
paddd
push
mov
add
lret
sub
pushf
push
push
xor
outsl
add
stos
ja
sub
movsl
xor
adc
xchg
pop
sub
je
out
dec
pop
mov
pop
mov
std
or
sahf
nop
aad
hlt
negb
popf
insb
dec
add
es
faddl
mov
xchg
cmc
icebp
mov
scas
mov
cltd
jae
jne
push
pop
push
testl
dec
in
sbb
fdivr
push
lds
sbb
sub
push
push
test
mov
cld
or
aaa
pop
hlt
inc
cmp
sbb
lock
or
pop
add
iret
cld
adc
or
sarb
cmpsb
dec
sub
fisttpll
fldenv
inc
sbb
stos
add
mov
xlat
inc
cmp
push
pop
jmp
std
inc
dec
fisttps
mov
push
icebp
imul
in
dec
adc
dec
mov
mov
adc
gs
out
insb
shrl
fistpl
add
xchg
cmc
cs
adcl
test
mov
mov
in
les
sarl
sub
das
adc
in
xor
mov
fs
dec
and
add
jae
fildl
push
inc
jl
cmp
dec
popa
and
inc
pop
and
mov
mov
in
lods
xor
mov
adc
mov
pop
mov
adc
jmp
fwait
pushl
jb
sbb
lods
daa
lcall
push
in
iret
sbb
hlt
imul
pop
or
pop
mov
out
dec
scas
or
test
pop
daa
sti
fistps
fldl
sbb
sbb
test
xor
in
dec
pop
fidivrl
push
outsl
les
sbb
mov
sub
movsl
pop
iret
pop
mov
cmpsl
pop
in
pop
inc
push
dec
mov
fidivl
pop
cmpsl
ljmp
int
jno
mov
sbbl
xlat
cmp
int3
int
add
and
and
mov
xor
mov
mov
aaa
sbb
jg
lret
stc
mov
push
adc
popf
jge
rol
push
shl
aam
rcl
jle
repnz
incb
cmp
pop
out
negl
adc
ss
aam
jne
mov
scas
jp
jnp
cmc
ljmp
test
inc
sti
sub
aaa
jmp
add
cmp
jl
sbb
popa
sub
int3
and
imul
push
mov
or
add
and
mov
fldt
fidivs
inc
loop
lea
fwait
dec
jo
fisubrl
sahf
mov
xor
imul
dec
add
pop
out
outsb
dec
nop
and
cmp
or
add
jns
dec
dec
push
mov
sub
pop
adc
int
incl
push
popa
or
xor
out
sahf
in
mov
jle
je
inc
mov
movsl
fstps
jno
cwtl
cmp
xlat
test
lcall
jg
xchg
push
or
div
or
jmp
lods
insl
push
adc
mov
add
lock
sub
sub
dec
outsb
repz
push
sub
in
dec
fwait
jp
cmc
lahf
in
cmpsl
lock
js
sub
jne
push
int3
clc
dec
lea
insl
call
adc
sahf
lods
outsb
jnp
pop
inc
adc
push
xchg
pop
cltd
xor
in
mov
mov
mov
and
fildl
jae
mov
pop
adc
fldl
mov
out
fwait
arpl
mov
adc
movsl
test
jno
popa
ds
sub
push
or
and
das
push
fucomp
jne
outsb
mov
ljmp
sub
mov
and
pop
mov
iret
aaa
es
push
and
rolb
repnz
mov
std
jmp
mov
test
or
sub
dec
jg
jmp
mov
inc
int3
loop
es
ds
popf
xchg
push
orl
sub
outsl
cmp
adc
mov
inc
dec
pop
mov
push
push
pop
or
jmp
or
ds
lea
scas
out
popa
out
xor
push
pop
and
push
in
outsl
dec
mov
lret
fwait
cmp
aad
adcl
fwait
jl
int
push
inc
mov
xor
out
popa
dec
cltd
lret
mov
pop
mov
push
test
lret
sub
out
sbb
mov
loope
fsubrl
push
mul
call
les
std
jge
dec
and
sbb
push
imul
clc
adc
jb
pop
cmp
sub
lods
mov
mov
mov
into
dec
sbb
into
pop
ret
ja
xor
add
sti
push
dec
add
mov
fidivs
dec
aas
mov
dec
mov
mov
arpl
pop
aad
xor
sbb
in
and
xchg
scas
xlat
call
xor
outsl
mov
loope
lea
inc
popa
mov
sub
ljmp
cmc
mov
adc
sbb
out
mull
std
cld
dec
int3
xor
hlt
ljmp
jbe
hlt
sub
sub
sbb
in
or
jae
ja
sub
inc
xchg
push
jb
mov
mov
call
or
sbb
je
fmuls
xor
push
das
adc
add
jnp
sub
sbb
xchg
and
into
subl
mov
jo
in
aad
lcall
xchg
loope
popf
jns
loopne
mov
pop
push
sahf
xor
lea
outsl
sub
test
sbb
shlb
repnz
pop
out
leave
dec
push
push
add
xor
hlt
insb
aad
push
out
pop
sti
stos
lea
jle
sbb
cmp
and
adc
xchg
int3
pop
fnstenv
sbbl
or
lods
out
stos
lods
push
insl
push
mov
out
movsb
clc
jge
xlat
addr16
mov
xor
test
jl
pop
adc
mov
cmp
outsb
sbb
in
fbld
orb
lods
popa
xor
adcb
insb
das
movsb
movsl
fwait
hlt
jbe,pn
cmp
fildll
or
cmpl
adc
addr16
pop
cmp
add
jge
jns
mov
out
mov
fstl
mov
roll
test
cmp
int
push
xchg
dec
in
pcmpeqb
bound
add
adcl
push
mov
daa
outsl
movsb
inc
fwait
rol
in
aam
push
jb
adc
mov
int
pop
mov
mov
fwait
stos
xchg
daa
ss
adc
push
push
add
insb
fldt
insb
popa
pop
out
mov
inc
scas
jl
jo
xchg
lods
sar
mov
movsl
out
cltd
and
mov
cli
cld
out
push
lcall
loope
cmc
adc
or
lret
jbe
sbb
mov
sbb
jle
sbb
pop
imul
into
cwtl
divl
lcall
or
into
fs
sbb
jb
pop
ss
js
lods
in
aas
arpl
xchg
push
stos
push
xor
mov
dec
arpl
pop
lods
mov
daa
lcall
in
lahf
arpl
cs
mov
sahf
xchg
scas
out
add
mov
add
cmp
stc
int3
pop
aas
and
sbb
mov
dec
sbb
rolb
enter
cmp
jg
dec
mov
xor
mov
push
sub
lds
dec
insl
loop
mov
mov
pop
and
mov
fbstp
sbb
sti
push
loopne
sahf
sbb
mov
jns
push
cmpsb
mov
call
sbb
lods
mov
xchg
stos
clc
daa
negl
xor
icebp
sarl
fs
cld
fisttps
pop
divl
mov
lret
test
xchg
jl
cmpsl
lret
fcoms
lock
jns
fistpl
loopne
movsb
cltd
fdivrs
inc
pop
aaa
popa
es
cmp
sbb
out
stos
insb
fildl
pop
rolb
sti
push
mov
mov
addb
fcompl
out
int3
jae
pop
jg
xorl
fwait
shlb
dec
sahf
pop
sbb
scas
iret
or
xor
or
enter
ljmp
out
cmp
push
xor
fists
jno
shrb
cwtl
pushf
and
rcrb
fstps
pop
xor
aas
mov
jo
cmc
xchg
dec
scas
loop
popf
enter
and
pop
pop
clc
mov
movsl
stc
adc
into
adc
outsl
inc
idivl
in
xor
orb
push
pop
test
les
outsb
lahf
pusha
into
pusha
in
xchg
addr16
repz
sub
mov
ret
int
arpl
xor
xchg
mov
fsubp
iret
xchg
cmp
mov
aad
push
dec
xor
jg
or
std
gs
in
jle
je
cmp
popa
in
jmp
std
fwait
jmp
mov
int
or
aas
rorl
mov
iret
pop
and
shr
xor
ja
adc
push
insb
inc
ds
sbb
movsb
add
jmp
inc
jae
int
flds
sarl
push
dec
rol
lcall
sar
jl
clc
lods
je
mov
and
sbb
pop
incb
push
dec
jp
out
lds
dec
fstpt
push
and
jmp
call
rcrl
mov
cli
add
push
mov
imul
push
cmp
mov
int
or
dec
push
xchg
mov
ficompl
into
or
adc
or
mov
xor
jle
lahf
jne
mov
xchg
and
push
lcall
jle
es
fucomi
dec
inc
sub
push
call
mov
mov
jl
das
fdiv
dec
jecxz
or
lock
xor
scas
out
inc
inc
or
inc
pop
xor
cmpsb
mov
xchg
jge
push
call
out
sub
movb
sub
push
std
shrl
int
mov
test
and
xor
clc
jno
outsb
push
dec
mov
sub
or
fisubl
xchg
fstpt
and
lret
int3
push
and
dec
mov
push
jge
test
push
shlb
pop
cmpl
lods
add
cmp
inc
std
xchg
sbb
add
loope
dec
and
aas
stos
inc
mov
js
loopne
lret
mov
imulb
int3
mov
mov
jmp
mov
cmpsl
xor
lock
cmc
ss
rclb
jne
cmp
cli
pop
std
cmp
inc
pop
cmpsl
sbb
sub
ljmp
push
push
lods
mov
and
stos
xchg
test
fsubrs
xchg
xchg
sub
sahf
xor
icebp
mov
mov
cmp
loop
fwait
cwtl
fcompp
arpl
push
cltd
fcom
push
inc
adc
imul
roll
adc
lock
addb
xor
pop
xor
cmc
data16
lods
xchg
loope
test
push
test
hlt
call
cli
mov
ret
idiv
and
xchg
pop
aam
add
test
fimuls
leave
cwtl
adc
dec
mov
add
js
lcall
mov
pop
lods
addr16
dec
popa
daa
cmp
es
nop
sbb
inc
xlat
xor
movl
mov
push
mov
stc
aaa
xor
xchg
fstpl
mov
sbb
mulb
ret
dec
cmc
repz
in
mov
adc
dec
mov
adc
in
jns
andl
push
lea
les
sbb
roll
pusha
jne
and
fs
and
xor
test
leave
mov
fldt
sub
sbb
sbb
jge
lods
js
cli
cmpsl
and
jp
loop
add
ds
xor
sbb
je
inc
add
add
sub
adc
andb
insb
aaa
adc
daa
ret
dec
std
negb
ret
into
je
push
enter
dec
out
jo
out
xchg
inc
mov
pusha
js
push
pop
iret
lods
jecxz
push
pop
cmpsl
sahf
test
sti
int3
adc
mov
fimuls
mov
jg
shll
pop
sbb
ret
push
leave
jo
inc
sbb
mov
mov
pop
push
inc
mov
xor
aad
idivb
dec
scas
adc
ja
and
jne
out
sti
out
cmp
mov
loop
sbb
pop
xor
sbb
sti
adc
ret
enter
xor
cmpsb
insb
pop
jg
int3
fwait
popf
xchg
pop
jns
jmp
roll
dec
jge
xchg
out
das
jecxz
and
jmp
lods
cmp
add
add
jmp
out
xor
add
test
incb
fnstsw
push
repnz
cld
imul
and
xchg
gs
mov
lret
dec
pop
rclb
rorl
jnp
adcl
pop
mov
cmc
in
sbb
pop
fwait
push
pop
jg
mov
and
mov
inc
jnp
mov
push
stos
fcomp
mov
aad
lock
push
ljmp
popf
shl
scas
and
xchg
fstps
sbb
inc
push
dec
dec
insb
ss
xchg
stc
clc
jmp
test
jge
cmpl
xor
lret
push
lods
cmp
es
repz
xchg
iret
xorb
pop
repz
dec
fildl
loope
xchg
push
inc
mov
mov
adc
mov
loope
push
push
mov
or
push
lcall
and
inc
enter
arpl
adc
jmp
insb
cmpsb
jmp
pop
test
mov
inc
jne
je
stos
cmp
mov
in
mov
ffree
movsb
xorl
add
popa
xchg
xor
jmp
pop
mov
and
and
cmp
enter
movsl
mov
add
out
arpl
mov
adc
mov
or
cs
js
aad
adc
out
dec
arpl
or
lods
mov
jmp
fcomps
dec
adc
xchg
out
adc
xor
sub
cs
mov
xchg
lods
push
das
adc
mov
into
shl
jno
mov
out
int
mov
mov
xorb
mov
lods
mov
add
rcrb
outsb
mov
or
cs
xchg
daa
mov
stc
xor
or
jp
sub
push
and
add
pop
jle
scas
sbb
xchg
jecxz
or
lret
enter
adcb
xor
aaa
xor
ja
mov
repz
lret
inc
fwait
imull
mov
out
div
pushf
push
jae
inc
pop
fsubrl
ret
jecxz
sbb
repnz
and
add
xchg
fstl
cmp
fcoms
rorb
mov
xor
sti
roll
ret
jns
cmpsl
testb
nop
and
mov
cwtl
lret
sub
cmpsl
pop
cltd
ljmp
gs
push
bound
bound
mov
mov
or
cmp
cwtl
pop
xorl
jecxz
xchg
out
push
mov
xor
gs
mov
pusha
outsl
mov
cmp
mov
sbb
aam
stc
or
aam
or
jmp
inc
add
mov
inc
into
jnp
popa
add
out
sbb
jae
xchg
out
out
xor
and
mov
fwait
loop
addr16
or
int3
cs
scas
inc
lods
lea
lahf
add
mov
mov
xchg
dec
mov
loopne
sbbl
mov
sarb
mov
dec
adc
push
or
pop
out
mov
adc
cmovs
sbbb
xchg
adc
add
outsl
push
xor
loopne
dec
sarb
jo
iret
add
rclb
jecxz
ficoml
test
pop
cmp
cmp
rcrl
jp
mov
inc
and
imul
mov
mov
cmp
loope
cmp
sbb
jmp
inc
push
and
push
cmp
ja
push
lret
dec
out
stc
out
push
mov
pop
mov
loopne
movsl
cmp
repz
adc
loop
mov
and
das
fs
sub
addb
pop
jge
stc
jl
sbb
xor
test
and
xchg
inc
pop
add
sahf
dec
js
ljmp
loope
out
bound
pop
inc
xorb
sahf
inc
push
mov
hlt
mov
aaa
out
inc
push
and
mov
mov
mov
cmp
lea
ja
or
cmp
lret
sbb
push
call
push
lea
fcmove
enter
icebp
cli
stos
mov
xor
addr16
std
inc
out
xlat
mov
mov
stos
ja
call
jl
aas
push
cmpsl
fcomps
jno
test
sub
push
or
addr16
sbb
push
iret
inc
cltd
cwtl
mov
inc
dec
mov
loopne
lods
cltd
gs
or
fs
scas
xchg
dec
or
mov
in
mov
pop
testb
dec
cmpsl
jne
out
int3
mov
gs
cmp
cltd
sbb
out
insl
pop
jne
add
pop
addb
and
int
sub
push
in
mov
push
sarb
mov
hlt
and
pop
in
push
cmp
repnz
and
cmp
push
aas
jle
adc
mov
insl
scas
dec
jg
lods
xchg
pop
mov
jecxz
ret
mov
or
mov
aam
dec
inc
ret
and
xor
or
cmp
ret
push
cmp
cwtl
lret
dec
fwait
in
jp
and
pop
or
cmp
jnp
or
inc
in
inc
outsl
cmpsl
les
daa
cwtl
aaa
mov
or
lods
xor
jle
jl
push
lret
shlb
out
ja
dec
inc
nop
mov
and
rcl
cmp
fs
sbb
test
lret
dec
jne
xchg
fisttpll
sbb
pop
jle
mov
test
test
push
addr16
push
out
imul
pop
cs
ds
rorb
fmuls
outsb
push
int3
test
lods
fisttpl
cmp
jnp
or
cmc
adc
cmp
repz
mov
mov
lahf
dec
cmpsb
out
dec
ja
aas
xchg
jmp
in
int
push
jle
mov
inc
flds
mov
cmp
jmp
gs
nop
aas
mov
xor
js
call
in
fbstp
xchg
loope
push
xor
decb
loop
clc
stc
stc
push
mov
lods
mov
mov
clc
lcall
dec
jb
adc
pop
pop
sbb
scas
lea
sbb
adc
sbb
mov
xor
cmp
movsb
pop
cwtl
daa
call
adc
aaa
sbb
mov
hlt
add
mov
divb
dec
fistps
out
add
test
popa
dec
dec
mov
dec
testb
aam
orl
sahf
enter
popa
rcl
lods
pop
es
cltd
inc
add
cmp
jo
aam
cli
call
dec
ret
push
sbb
lods
xor
data16
cmpsl
mov
repnz
xor
pop
pop
nop
arpl
sub
jnp
mov
into
pop
cli
movsl
lods
inc
cmp
fists
testl
fidivrl
int
lret
stos
sarb
cmp
jns
pop
daa
mov
out
test
push
inc
fs
inc
jo
sub
sub
jecxz
mov
mov
mov
cmp
adc
mov
and
push
pop
cli
cwtl
sbb
cmp
or
pop
inc
cmp
shll
sub
and
mov
mov
imul
jb
ret
dec
and
pop
scas
xchg
pop
dec
orb
push
sti
minps
fmuls
lahf
mov
movsl
insl
iret
push
scas
daa
mov
pop
ret
sbb
inc
sahf
loope
xchg
inc
sbb
sbb
push
mov
sbb
or
mov
scas
aam
push
mov
dec
mov
mov
adc
js
push
or
push
aas
loopne,pt
jo
aam
pop
cmp
cmpsl
aaa
rolb
mov
xor
jo
add
jp
jne
pusha
std
jle
ljmp
adc
push
and
aam
bound
xor
mov
ret
jno,pt
js
loop
insl
fnstsw
jle
out
push
dec
test
and
into
dec
loop
lcall
sbb
jge
pop
inc
inc
repz
imulb
adc
adc
movsl
dec
add
push
shll
rclb
ljmp
cmpsb
and
mov
xchg
jmp
push
inc
adc
gs
sbb
les
movsb
loopne
lods
fildl
xor
push
cmpsl
imul
mov
xorl
das
cmp
gs
mov
ljmp
popa
int
sarb
push
mov
out
test
int
xor
in
repnz
cmc
mov
jmp
idivl
mov
out
in
inc
insl
lods
sbbl
dec
leave
int3
aaa
add
fidivrl
jge
sbb
xor
insb
add
mov
xchg
fistpll
fstpt
mov
sti
cld
push
xor
dec
jle
sub
pop
out
xchg
jp
imul
add
mov
test
jmp
out
dec
push
jae
loop
push
mov
adc
repz
inc
xorl
mov
push
push
and
xchg
test
sub
adc
jle
sub
int
rolb
sbb
or
inc
aas
dec
mov
xor
cmpsl
jb
and
test
jg
xlat
xchg
aam
repz
xor
sahf
push
sbb
mov
fwait
cmpsl
cmp
popa
cmpl
or
mov
push
xchg
cmpsb
arpl
xchg
xor
xchg
xchg
sub
ss
inc
lods
test
jb
movsb
push
cld
jecxz
mov
lods
ljmp
orb
push
mov
jmp
dec
fwait
ja
movsb
push
idivl
loopne
imul
dec
lods
dec
popf
xorb
scas
out
mov
stc
add
das
xor
shll
ja
test
call
cmp
pusha
ss
fldt
cmp
pop
pushf
shr
loope
inc
outsl
dec
mov
add
test
fneni(8087
daa
ret
psraw
aad
stc
or
pop
fdivl
outsl
push
add
sbb
pushf
or
cmp
or
lock
xor
pop
sbb
out
mov
notl
lcall
cs
scas
or
icebp
aaa
lea
stos
mov
movsl
mov
mov
jne
sub
cmc
adc
inc
dec
iret
mov
cmp
aad
pop
push
jl
mov
enter
in
mov
ljmp
mov
inc
and
xor
xchg
and
mov
pop
or
add
push
cwtl
jmp
and
imul
aad
mov
mov
inc
mov
inc
dec
mov
imul
xor
push
jb
dec
jae
mov
repz
cmp
dec
imul
xor
and
push
mov
jne
add
clc
and
push
fwait
arpl
pop
dec
push
cmpsb
cli
sbbl
mov
int3
mov
jp
inc
cmp
stos
div
fmull
mov
sub
jl
cmpsb
jmp
je
xchg
add
cli
adc
jno
xor
subb
shrl
dec
lahf
in
ret
int3
cltd
adc
ss
sbb
fists
jbe
adc
sti
stc
pop
addr16
sbb
pop
adc
subb
bnd
stos
les
mov
cmp
jp
notb
mov
inc
scas
jbe
out
enter
shll
lods
shlb
cs
inc
adc
sti
sbb
insb
adc
mov
sbb
mov
sbb
adc
popf
sub
push
insl
xchg
jg
in
je
mov
pop
dec
icebp
popa
add
addr16
ljmp
jnp
loop
push
sub
mov
pusha
jp
test
leave
push
data16
lret
cmp
out
and
sub
rcrb
icebp
int3
add
push
flds
jns
mov
lods
enter
and
ret
fs
cmp
mov
inc
out
mov
push
or
ja
dec
fcompl
jns
data16
cmp
xchg
inc
mov
pop
pop
dec
std
cmc
jno
xchg
nop
popa
call
add
sbb
imull
jecxz
cwtl
ja
xor
lahf
notb
icebp
push
xchg
jge
cmovae
ljmp
ja
pop
push
and
mov
jle
sbbb
pop
shrl
xor
hlt
jbe
jne
sub
ficompl
loopne
inc
sub
out
push
fwait
cld
loopne
std
out
test
cmp
dec
jmp
or
dec
or
dec
insl
xor
fidivrl
shlb
push
pop
xorl
pushl
enter
incl
push
xchg
inc
add
test
movsb
mov
dec
rorl
movsb
and
inc
or
shlb
mov
aas
inc
scas
popa
fwait
jg
xlat
inc
scas
movsl
or
dec
cmp
sub
dec
repnz
in
and
pusha
fcmovnb
stos
sub
and
mov
sbb
inc
xchg
test
or
icebp
sub
clc
loopne
sbb
cmp
movsl
and
sbb
or
ljmp
or
pop
in
xor
mov
in
xor
cmp
jbe
mov
jb
fstpt
mov
insb
dec
dec
jge
popa
fsubrs
movsb
daa
add
js
out
sbb
andb
and
es
cmp
jne
push
pop
lret
negb
gs
enter
scas
fcoml
adc
adcb
or
adc
je
dec
out
cmp
jae
movsb
dec
adc
icebp
lcall
rorl
stc
ret
xchg
sbb
lcall
push
mov
jno
mov
jo
gs
and
movups
jbe
stos
jmp
jmp
insl
xchg
sbb
add
jns
adc
and
pop
lret
movl
pmuludq
and
ret
int3
sub
jge
sahf
cwtl
inc
out
xchg
fwait
push
aaa
lcall
sbb
xchg
in
lahf
shlb
enter
in
push
sahf
test
loope
sub
and
clc
stos
lea
jae
sbb
jnp
aad
lea
jmp
push
test
mov
pop
jb
jmp
test
or
outsl
xor
pop
scas
loopne
in
push
fistpl
cld
push
mov
cs
push
xchg
in
rcrl
add
loop
pusha
or
push
pop
add
jae
std
fisttpl
out
lahf
or
daa
rclb
cmp
and
bound
imul
pop
jmp
add
cmpsb
xor
cmp
sub
jne
and
jns
arpl
cmp
sub
sar
push
cmpsl
jl
movsb
jge
mov
jo
jle
jno
subl
xchg
int
sbb
out
mov
pop
call
mov
sbb
mov
fdivrp
rcrl
mov
jecxz
dec
mov
sub
push
roll
fxch
push
fstl
inc
data16
cmpsl
xor
lods
pop
push
xchg
lret
sarb
mov
aaa
loope
pop
lcall
add
popf
repz
or
js
fdivr
dec
jmp
sub
or
sbb
xchg
aam
hlt
sub
jns
or
sbb
mov
adc
dec
or
mov
push
or
push
adc
fmul
hlt
and
xor
mov
addr16
ret
mov
int
outsl
adc
rcll
outsb
dec
or
testb
scas
add
nop
mov
dec
ror
mov
jno
cmp
test
repz
mov
pop
inc
add
cld
push
icebp
push
jb
pop
cmp
pop
jb
mov
insb
mov
imul
aad
data16
jg
push
push
mov
push
jle
dec
mov
dec
jge
insb
cmp
jns
xchg
mov
jne
or
imul
in
xor
sbb
rclb
xchg
xchg
add
dec
outsb
mov
cmp
push
sahf
outsl
xchg
fadd
adc
addb
fisttpl
int
xchg
out
lret
ficompl
sub
icebp
xchg
xchg
mov
mov
pop
stc
bound
insb
mov
jns
or
jg
sbb
shlb
or
int3
into
test
fisttpll
add
or
ret
jl
dec
shl
imul
mov
and
call
sub
dec
cli
daa
xor
scas
cwtl
jnp
pushf
stos
movsb
aas
out
loop
ss
mov
les
jne
pushl
sbb
add
bound
int
test
addb
adc
imul
sbbb
icebp
aam
xlat
sub
push
xchg
jle
add
aas
sub
mov
push
push
pushf
adc
lds
call
sti
into
insl
insl
jae
or
dec
cmc
or
into
and
fildl
mov
lahf
cld
adc
mov
notb
test
sbb
cwtl
cmpsb
xchg
or
imull
nop
test
xor
cld
jbe
push
add
nop
stc
int
sub
pop
mov
mov
loope
or
int3
push
test
push
testb
sbb
inc
data16
push
test
jnp
push
movsl
dec
mov
mov
pop
sbb
fs
dec
xor
das
sbb
mov
sub
in
xchg
js
in
aam
shrl
pop
mov
dec
jl
push
add
fwait
mov
inc
dec
dec
mov
imulb
cmpsb
add
clc
clc
loop
xor
lcall
mov
mov
mov
leave
loopne
cmc
mov
pop
xor
jae
lahf
jo
mov
daa
jb
daa
jnp
fcmovnbe
jp
cmpsb
mov
movsb
dec
lock
xchg
and
scas
loope
in
pop
nop
int
inc
jae
ficompl
jns
lcall
xchg
push
pushl
lock
in
dec
sbb
out
movsl
mov
mov
sbb
inc
gs
call
jb
push
lcall
out
xchg
push
add
lock
mov
cmp
into
scas
ret
insl
andb
icebp
and
jl
or
dec
dec
in
push
notb
stc
adc
rcl
insl
add
scas
lret
adc
cmpsl
add
xchg
inc
push
adc
push
or
push
jl
push
jp
fidivrl
cli
mov
out
push
test
or
leave
xchg
or
xchg
cmp
and
loopne
adc
mov
daa
dec
jo
or
icebp
out
stos
cwtl
aad
shl
push
mov
xor
daa
sbb
outsl
dec
lds
mov
jne
pop
addr16
insl
adc
out
pop
and
out
movsl
dec
jp
ret
adc
cld
and
ss
lret
cli
iret
mov
data16
xchg
sbb
mov
test
divl
fsub
pushf
mov
pop
push
aam
lahf
lret
adc
or
pop
jle
push
das
loop
xchg
stos
push
xchg
loopne
stos
shrl
cld
aad
or
push
mov
pop
imul
cmpsl
pop
mov
out
pop
xor
xor
jnp
mov
mov
divl
mov
fwait
mov
arpl
popf
jmp
jns
jns
add
shlb
loopne
sti
scas
pop
and
scas
mov
sbbb
xchg
insl
sahf
pop
fcmovbe
mov
xchg
inc
into
sub
mov
loope
sub
test
sbb
imul
mov
pop
insl
mov
jl
popa
fdivrp
maxps
and
rol
stc
imul
test
inc
lds
les
jbe
leave
mov
daa
mov
cmpsl
es
ret
dec
jns
dec
andb
jmp
xor
mov
push
addr16
dec
rcll
leave
push
mov
inc
sub
out
lods
pop
mov
imul
xlat
repnz
xchg
and
adc
xchg
inc
fsubrs
rcrb
insl
pop
adc
sbb
and
test
push
popf
pusha
push
out
mov
push
out
shll
inc
mov
les
sti
fisttps
divl
adc
sbb
repz
dec
xor
push
popa
scas
xor
out
shll
add
adc
sarl
test
cs
sbb
adc
mov
popf
dec
xor
lret
jg
mov
inc
aam
aaa
mov
add
or
pop
sbb
mov
test
mov
or
mov
enter
mov
pop
xor
or
and
xor
outsb
repnz
push
int
das
gs
std
popa
es
rsm
and
ror
into
shrl
lds
into
cmp
xor
cmpsb
outsl
aas
inc
cmp
xchg
test
mov
std
push
in
loop
mov
mov
scas
push
mov
pop
sbb
ss
and
out
mov
in
cmp
xlat
or
add
inc
dec
je
add
pusha
outsb
mov
jno
cs
inc
cmpsl
dec
ss
hlt
xchg
inc
pushf
cs
int
movsl
jg
push
mov
sbb
and
mov
add
call
aad
inc
loop
ror
dec
xor
push
movsl
add
jbe
sub
pop
pushf
pop
mulb
xchg
xchg
jmp
rolb
cmp
or
sbb
test
mov
jp
test
push
sbb
sbbb
xchg
jecxz
das
dec
xor
add
in
insb
repz
sti
or
push
addb
xchg
call
loopne
and
jbe
xchg
cmp
loope
cli
mov
mov
ror
push
cmpsb
daa
push
or
xor
gs
jne
ds
rorl
push
cmp
call
out
push
scas
call
mov
addr16
dec
mov
and
push
and
pop
sti
mov
dec
push
test
mov
sbb
lock
add
aaa
xor
cmp
mov
mov
inc
adc
loope
out
pop
pop
inc
pop
sub
adc
mov
pop
mov
cltd
cmc
mov
pop
mov
lcall
mov
xor
mov
mov
addr16
inc
movl
mov
jns
int
pop
xchg
iret
ficomps
sbb
insl
xlat
sub
sub
addr16
dec
push
mov
sbb
and
aam
cmp
data16
push
call
sub
les
nop
addl
in
mov
jae
fstpt
sub
xor
xchg
mov
and
xor
in
ret
into
repnz
cwtl
fdivrl
xchg
jo
xor
or
je
sbb
das
mov
cmp
mov
sub
ja
stc
add
dec
xor
mov
sub
or
scas
sbb
in
mov
fdivrs
loop
or
push
xchg
sub
ret
xor
mov
jle
movsb
mov
arpl
mov
pop
pop
imul
insl
aas
sbb
xchg
jmp
imul
in
sbb
sbb
je
cld
mov
adc
add
jns
inc
add
lret
movsb
je
xchg
pop
enter
and
fwait
xchg
add
mull
pop
inc
in
imul
mov
mov
lcall
add
adc
ljmp
inc
inc
clc
sub
rclb
add
xor
and
out
shlb
enter
jae
xchg
add
test
jno
push
mov
enter
or
jae
ss
js
jno
xchg
imul
in
dec
pop
test
lods
fdivrl
divb
enter
ss
pop
sarb
mov
cs
decl
mov
pop
push
addr16
adc
add
mov
popf
jb
mov
mov
jp
cmpsb
and
jge
outsl
in
xchg
nop
test
cmc
pop
xchg
outsb
mov
call
loopne
fistl
xchg
test
dec
and
sar
inc
scas
push
dec
add
test
data16
mov
adc
mov
cmc
call
jns
dec
cmp
flds
sub
or
enter
and
inc
mov
dec
mov
stos
int3
js
rcl
idivb
jp
stc
cmpsb
sub
mov
test
test
out
jge
dec
loopne
push
inc
pop
pop
mov
pop
out
sub
arpl
sub
fstl
lock
push
es
mov
adc
adc
es
movl
mov
push
addr16
add
gs
in
xchg
fcmovu
imul
imul
ret
push
push
mov
xor
mov
hlt
xchg
hlt
sti
cld
mov
imul
loop
lods
jo
out
jl
mov
dec
mov
lret
xchg
jle
adc
mov
inc
adc
xor
jbe
les
mov
and
cmp
add
mov
xchg
imul
and
cmpsl
insl
jns
push
sti
loop
repnz
shl
cmp
and
cld
aaa
repz
in
je
loop
sbb
or
inc
int3
cmpsl
outsb
sbb
pop
stos
xor
dec
cmp
imul
or
sbb
mov
xor
push
stos
cmpsb
cmp
cmp
call
stos
push
push
sahf
adc
mov
and
daa
in
mov
fistps
cwtl
jnp
or
cmpsb
jb
in
test
and
mov
insl
popf
int
aam
push
nop
pop
sub
js
sbb
scas
fstps
sub
lret
inc
call
fidivl
js
sbb
test
cltd
add
outsl
dec
or
aam
iret
and
ds
cmp
sub
sub
scas
and
bound
xor
into
mov
lret
add
ror
lock
and
lea
push
mov
outsl
pop
mov
cmp
out
imul
or
ja
cmp
or
xchg
fnsave
scas
adc
inc
add
adc
jle
or
add
inc
call
xor
int
sarl
mov
jecxz
popf
and
jnp
jnp
push
sub
mov
xchg
mov
test
mov
xor
decl
popl
push
adc
xor
fcmovne
mov
push
sub
aad
xor
dec
pusha
inc
ljmp
mov
inc
aaa
out
flds
js
adc
rcrl
xor
cmpsb
lods
or
rcll
loopne
mov
cmp
dec
gs
dec
movsl
aaa
push
data16
mov
jo
bnd
stc
cmpsl
dec
mov
inc
jl
mov
imul
mov
mov
lcall
sub
loopne
xchg
pop
mov
cmp
or
iret
testl
dec
push
fprem
cld
xor
lahf
mov
or
cmp
jnp
out
fucomip
fsubs
jae
add
mov
inc
mov
push
cmp
mov
and
ss
pop
inc
or
movsb
test
enter
ret
inc
out
sarl
cmpl
jge
aas
mov
insb
insl
jno
ret
dec
cmp
fidivs
das
pusha
loope
and
rorb
adc
daa
leave
add
sub
mov
loopne
xor
sub
lahf
cmp
loop
xor
scas
mov
ficoml
loop
js
cmp
xor
mov
pop
mov
jno
or
mov
sub
sub
psllq
cmpsl
pushf
int
mov
sbb
shlb
test
cld
addr16
cs
es
xlat
movsl
cltd
pop
mov
sub
outsl
mov
int3
orb
mov
inc
loop
push
fst
jmp
lods
mov
ficompl
dec
out
aam
flds
mov
pop
jmp
call
lret
leave
sub
cmp
cmp
pop
xlat
fwait
pusha
mov
std
cmp
push
jbe
push
fsubrl
xchg
pusha
aaa
jmp
and
dec
mov
arpl
cld
and
out
push
aas
mov
mov
lods
xor
xchg
cmp
pop
das
push
in
std
dec
stos
or
and
in
movsb
xor
mov
jge
popf
push
mov
ss
inc
xor
pop
sbb
lret
or
lock
sub
inc
lods
jbe
jmp
scas
dec
xchg
add
or
das
mov
loopne
inc
aas
loopne
sbb
adc
mov
add
add
add
push
sti
cmpsb
gs
inc
xor
addr16
popa
enter
loop
mov
cli
loope
push
ljmp
jecxz
pop
shrb
outsl
cli
and
out
mov
pushf
and
pop
outsb
adc
aaa
lods
xchg
cmp
sub
test
xor
dec
push
repz
scas
arpl
or
mov
lahf
out
rcll
std
cmp
stos
in
outsb
pushf
js
lahf
rcl
mov
push
clc
cs
inc
cmp
popl
push
pop
clc
cmc
inc
or
jne
xor
sbb
inc
xchg
xchg
imul
push
hlt
sahf
add
and
std
mov
jmp
cmc
adc
sbb
aas
and
push
jecxz
mov
das
negl
mov
jns
insl
sti
dec
jne
fcoml
scas
repz
es
out
xchg
jp
cmp
fmul
push
push
mov
push
mov
or
and
mov
push
jge
fst
fstl
neg
xlat
push
mov
movsl
push
dec
repnz
cld
ret
push
aad
int
ss
cmp
mov
out
popf
mov
adcb
jns
adc
push
cwtl
mov
pop
mov
jl
cmp
pop
adc
and
sub
fisubs
sub
mov
arpl
adc
rcrb
sbb
shrl
int
sbb
dec
push
xchg
pop
mov
jbe
inc
cld
cmpl
lock
cmp
ljmp
cmpsb
cmpsl
cmpsb
dec
jmp
mov
xor
or
push
bound
enter
imul
lods
or
cmp
cli
testb
pusha
sbb
fldcw
jecxz
shl
test
jbe
and
mul
cmc
bound
sbb
ret
cmp
aaa
sbb
xor
lods
sti
mulb
hlt
scas
outsb
stos
pop
imul
scas
mov
mov
xchg
xchg
push
sbb
call
xchg
comiss
aam
push
mov
and
popf
add
in
xchg
inc
jmp
adc
pop
aaa
inc
aaa
cli
mov
push
mov
cld
push
add
les
jl
mov
dec
mov
pop
mov
cmp
pop
dec
ljmp
orb
aad
es
xorb
movsb
cmp
pop
loop
mov
test
test
ficomps
adc
cmpsl
arpl
dec
xchg
xor
push
and
push
dec
bound
pop
in
inc
xchg
aad
insl
cmp
adc
pop
je
inc
stos
mov
sub
test
push
rcll
pop
stos
xchg
xchg
pop
sbb
inc
adc
cmp
mov
dec
and
sub
loope
mov
in
add
movsl
js
jl
mov
xor
xchg
or
or
cli
lcall
sti
test
popa
clc
mov
inc
lea
cmpsl
js
mov
mov
popf
fsubrs
xor
insb
test
movsb
add
ss
pop
test
pop
add
out
sbb
sarb
lock
adc
mov
xlat
testb
pushf
pusha
imul
icebp
pop
push
dec
int3
jno
push
aad
insl
and
and
cmpsl
into
mov
inc
mov
pop
ljmp
rorl
je
mov
pop
push
inc
mov
sub
bound
push
adc
adc
lea
sahf
loopne
jge
pop
cmc
imul
sub
jb
pop
stc
mov
sbbb
cmp
divl
popa
popf
sbb
aad
mov
and
add
int3
xor
and
or
stc
roll
adc
in
out
daa
bound
imul
mov
fidivl
mov
in
mov
xchg
mov
push
cmpsl
mov
inc
push
das
test
cmc
lods
xor
adcl
das
xchg
inc
scas
test
pop
in
jns
adc
dec
inc
xchg
insl
pop
and
enter
popa
lods
lock
outsb
dec
lahf
leave
mov
iret
vpmulhuw
es
mov
or
neg
test
andb
inc
xchg
mov
movsb
lods
or
aam
popf
lahf
rorl
add
xor
addb
xchg
xor
inc
push
es
dec
push
ss
es
mov
pop
mov
cmp
fs
mov
inc
xchg
ss
push
das
aam
push
std
mov
jg
insb
lds
pop
add
arpl
daa
sub
sub
dec
jne
mov
imul
sti
push
sbb
jne
js
jge
lret
subl
fs
mov
imul
xor
inc
dec
cmp
clc
or
das
add
repnz
pop
pushf
dec
xchg
lea
jl
dec
pop
pop
outsb
imul
mov
push
repz
sub
ljmp
fsubs
sahf
arpl
int
sub
cwtl
adc
fbld
ja
mov
das
and
dec
sub
andl
cs
cmp
scas
or
aam
lahf
stc
xor
sahf
sahf
sbb
imul
adc
pop
insb
mov
mov
dec
bound
xor
pop
xchg
test
ljmp
nop
aas
mov
jns
mov
les
gs
movb
mov
popf
mov
xlat
repnz
fmull
xor
test
push
repz
inc
aas
ror
jnp
or
sub
xor
and
sahf
pop
mov
cmp
push
imul
iret
lods
insb
repnz
or
mov
gs
or
xchg
cmp
cltd
add
int3
je
arpl
loope
cmp
scas
dec
pop
das
data16
lods
imul
sub
sahf
popf
fnstcw
and
rcrl
pop
test
inc
mov
shlb
jp
add
sbb
xchg
sbb
in
mov
fs
pushl
add
test
mov
pop
add
jns
fcmovnu
jecxz
cwtl
adc
sub
jno
pop
jbe
fdivrs
adc
jne
jl
ret
cmp
xchg
push
jb
arpl
jns
adc
test
sbb
adc
xchg
adc
sar
loopne
push
dec
sub
pop
test
scas
loopne
push
sti
push
stos
jl
inc
int3
mov
test
xor
push
dec
mov
arpl
and
nop
or
mov
sbb
dec
pusha
sbb
push
es
fstl
xor
jl
enter
adc
aas
out
jae
hlt
cmp
sti
xlat
rcrl
nop
pop
fadds
std
jge
pop
xchg
inc
aas
add
mov
xchg
leave
dec
cmc
pop
add
ljmp
or
adc
adc
dec
mov
fdivs
pop
mov
fldt
jmp
je
fdivs
aam
mov
ja
push
fsubs
sub
aam
pop
and
xlat
add
in
mov
addr16
mov
dec
ret
mov
aam
xlat
shl
out
jbe
in
in
daa
add
add
sbb
rolb
cltd
and
pop
out
add
cmp
lret
js
mov
mov
sbb
mov
mov
sub
dec
jmp
fidivrl
adc
adcl
push
adcl
cmp
lods
mov
lcall
add
cmc
arpl
jg
movsb
xchg
lcall
loope
cs
fsubrl
pop
or
adc
mov
inc
lods
mov
out
outsb
in
in
ljmp
jecxz
imull
cmc
inc
ja
rcll
lea
outsl
pop
mov
mov
mov
popa
icebp
sub
movb
imul
dec
bound
cld
mov
leave
cwtl
in
ds
divl
push
cmpsl
mov
sub
jge
pop
ret
addr16
mov
in
push
scas
orl
movsl
imul
adc
mov
cmp
mov
fcomps
fsubr
addr16
test
adc
mov
cli
arpl
push
add
jb
stos
mov
in
and
cmp
and
and
jmp
pop
pop
xchg
dec
or
sti
push
mov
cmp
xchg
xchg
in
iret
dec
nop
mov
mov
xor
and
test
jnp
cld
push
int3
pop
bswap
xchg
mov
je
sarl
jmp
divl
push
xor
adc
clc
lret
xlat
popl
cmpsb
or
pop
outsb
into
inc
push
loopne
or
jb
jmp
adc
mov
jno
cli
mov
xchg
sbb
xchg
mov
in
shll
mov
pop
out
adc
and
dec
push
add
in
mov
test
dec
push
addr16
sub
insl
mov
clc
lret
mov
lahf
sbb
push
loope
pop
jecxz
mov
cmp
ss
pop
adc
jo
int3
pop
mov
dec
xor
popa
ja
cmp
movsb
xchg
rolb
pop
cmp
push
insb
fld
dec
aaa
xchg
data16
loope
jno
outsl
sbb
cwtl
pop
aas
xchg
stos
lea
push
mov
sub
jae
mov
aaa
scas
ljmp
arpl
rcrl
mov
cmp
jbe
in
roll
sbb
pop
xchg
hlt
inc
das
ret
and
jmp
jl
aam
rorb
fidivs
loop
sbb
xor
outsl
icebp
cltd
ja
inc
stos
adc
adc
insl
add
pop
mov
mov
shlb
rcrl
lds
sbb
loopne
int3
dec
and
test
sahf
dec
or
pop
imul
xor
inc
pop
mov
aad
mov
mov
jle
mov
sub
dec
or
fimuls
push
or
and
fs
jb
mov
jne
filds
jnp
cmpsl
mov
and
movsl
fbld
outsl
push
fwait
in
or
jae
mov
ss
outsb
stos
mov
or
hlt
out
test
jne
push
outsb
loope
sbb
sbb
and
mov
sbb
and
cmp
std
into
pop
rolb
cmp
dec
aaa
stos
push
inc
pop
pop
add
or
or
inc
mov
xchg
insl
jmp
add
and
mov
adc
in
std
movb
mov
test
lods
cld
dec
push
adc
test
cmp
ja
cld
fldl
sub
adc
dec
or
mov
arpl
and
je
out
clc
mov
insl
ljmp
nop
sub
ja
fdivl
sarl
add
push
lcall
cwtl
loope
lret
push
std
adc
pushl
xchg
ljmp
popa
pop
lcall
jbe
lcall
sbb
outsl
sbb
pop
pushl
pop
dec
test
pop
mov
loopne
push
xlat
sub
fstpt
test
imul
fidivl
popf
lea
pandn
cmp
xchg
je
lcall
sbb
ja
mov
test
insb
loop
dec
lods
fisubrl
push
mov
les
fs
and
xlat
popf
cmp
cmp
imul
mov
fildl
inc
loope
mov
outsl
into
repz
push
dec
mov
mov
push
mov
sub
pop
xor
and
repnz
repz
mov
fs
and
clc
fsubrs
lcall
adcl
data16
jo
outsb
xchg
jmp
dec
out
push
pop
add
mov
or
mov
stos
jne
push
pop
arpl
int
cmpsb
pop
cmp
movsl
sbb
push
aam
pop
mov
and
imul
push
int
or
push
in
mov
andb
scas
mov
push
outsl
stc
or
xchg
or
or
jp
xchg
rcr
ret
je
add
inc
in
int3
gs
mov
xchg
mov
and
imulb
and
fwait
mov
sub
fstpt
loope
dec
jnp
jg
cltd
pop
xchg
adc
cmp
or
movsl
outsl
lcall
stc
inc
sbb
rorb
repz
add
lods
test
dec
push
mov
push
or
stos
outsl
xor
lahf
loope
xor
in
call
in
jmp
or
sbb
xorb
call
out
mov
lods
or
repnz
mov
fstps
stc
cmpsb
jb
inc
mov
lods
mov
jne
jns
mov
sub
aad
sbb
sub
ret
or
mov
cmpsl
lock
roll
mov
jbe
imul
cmp
imul
sahf
inc
icebp
repz
test
iret
xor
pop
stos
repz
out
pop
mov
jecxz
xchg
xchg
xor
ja
xor
ja
or
xor
lret
jne
push
or
mov
dec
ja
fmuls
lods
hlt
lods
sbb
mov
scas
sub
hlt
dec
push
dec
adc
xchg
cld
fldcw
jae
mov
xor
or
lret
pusha
or
enter
xor
cmpsb
dec
inc
bound
testb
out
cmp
adc
nop
push
movsl
clc
imul
ret
arpl
stos
mov
jno
push
jle
xor
or
mov
mov
or
jp
mov
lock
cmp
mov
jp
in
fidivs
push
test
pop
mov
push
pop
outsb
or
and
mov
dec
inc
sub
bound
adc
pop
adc
lods
mov
bswap
dec
and
add
loop
xchg
sub
or
stos
test
xchg
xchg
out
fistpll
iret
xchg
mov
sbb
cltd
es
jle
mov
loope
adc
and
ficompl
out
adc
pop
and
loopne
adc
aad
lods
aas
stos
mov
push
lahf
idivb
mov
lahf
mov
adc
iret
push
andb
push
lret
sbb
call
les
xlat
mov
jno
jle
mov
das
cmp
repnz
lock
mov
inc
lret
sarl
enter
dec
data16
mov
sub
es
int3
aad
push
arpl
mov
pusha
out
push
adc
jnp
lock
adc
mov
pop
push
mov
pushf
push
pop
test
ficomps
ret
idivb
dec
popf
data16
int3
inc
jae
scas
sbb
mov
cmc
pusha
xchg
icebp
pop
jns
rorb
mov
mov
mov
push
xlat
stos
push
mov
scas
shll
pop
ljmp
outsl
push
nop
lret
or
jnp
cmp
and
dec
out
loopne
test
adc
mov
stc
lods
push
add
or
inc
lcall
add
daa
add
mov
pushf
lret
add
lock
cmpsb
movsl
inc
fwait
inc
mov
mov
scas
add
aam
daa
repnz
sti
adc
cmp
out
dec
roll
jno
pop
sub
movsl
negb
jmp
xor
xor
sub
outsb
dec
pusha
dec
or
pusha
jns
adc
jmp
fimuls
das
push
pop
insb
call
mov
push
aas
out
adc
xlat
out
cmp
addr16
popa
inc
cmpl
xor
aas
clc
sub
sub
rcrl
xlat
xorb
repz
pop
and
add
icebp
aaa
ss
loope
je
inc
lret
xchg
stos
icebp
cmc
xlat
fistl
push
push
pusha
cli
nop
dec
mov
ds
mov
adc
rorl
jecxz
in
pop
hlt
loop
push
insb
not
loope
lret
sub
xorb
xchg
lahf
std
fstps
mov
xchg
hlt
adc
jo
cs
daa
cmc
fisubs
es
sahf
in
add
lds
sbb
pop
sub
mov
or
rcl
outsb
loopne
mov
cli
bound
push
mov
cmpsb
or
addb
xchg
fsts
orb
out
ret
mov
cmc
push
mov
push
mulb
ret
sbb
popa
cltd
cwtl
out
decl
fisubrl
fs
push
jg
or
dec
inc
mov
sbb
ficompl
xor
leave
sar
mov
or
jb
ss
pop
fcoml
push
jne
leave
lahf
in
fwait
addr16
push
pop
nop
mov
xchg
push
out
sub
std
scas
movsb
test
shlb
dec
push
cmpsl
fidivl
mov
dec
inc
mov
test
dec
inc
lea
int3
dec
into
daa
dec
bound
cmp
adc
cmpsl
call
push
sahf
rolb
int
add
loopne
cwtl
sti
cld
je
xor
jmp
sub
clc
les
mov
adc
lahf
int3
hlt
test
add
bound
pop
fsubl
cmp
out
loopne
cwtl
and
ds
xor
mov
xor
lock
xchg
mov
push
les
sahf
lret
aam
pusha
and
and
les
inc
xchg
inc
and
pop
sbb
cmp
and
les
and
test
ja
stc
lret
pusha
mov
push
mov
shr
inc
xchg
aas
test
mov
sahf
or
pop
bound
xor
mov
fisttpll
test
repz
jg
loope
or
popf
sbb
leave
mov
das
or
lea
test
mov
add
imul
lahf
jmp
insb
jnp
xchg
rorl
incb
in
xchg
ret
push
xchg
xor
rclb
imul
aaa
add
je
in
fwait
xchg
out
test
push
jbe
cltd
and
mov
push
xchg
dec
out
mov
enter
clc
xor
adc
jl
adc
in
or
scas
fidivrl
xchg
outsl
xor
jbe
arpl
dec
push
jecxz
mov
adc
mov
add
aad
jb
xchg
xor
jmp
imul
sbb
push
pmaxsw
cmp
jl
sbb
into
pushf
lea
mov
dec
out
mov
inc
ds
out
mov
dec
mov
lods
pop
pop
mov
inc
or
popa
call
add
dec
scas
add
push
xor
fisttpll
inc
cmpsl
jbe
out
popf
xor
pop
jo
fstpl
mov
xchg
sbb
lds
jp
jno
out
into
add
andl
lock
es
jecxz
adc
fisttps
adc
and
sbb
push
ljmp
cmp
std
jnp
movsb
mov
jae
xchg
or
or
sbb
mov
arpl
scas
mov
cs
mov
sbb
arpl
push
fsubs
je
insb
inc
inc
into
dec
imul
fwait
push
int3
mov
inc
mov
mov
dec
mov
aam
xor
popa
push
lahf
js
jns
inc
mov
lret
inc
mov
lock
xorb
int
out
lods
jno
clc
cmp
inc
movl
mov
jns
popa
push
and
shlb
jle
fmull
imul
push
cli
push
mov
cwtl
lea
or
das
leave
sbb
dec
ljmp
mov
mov
cmpsl
bound
aaa
push
xor
pop
push
cmpsl
subb
fistpl
inc
imull
test
jl
pop
jmp
ljmp
loopne
test
pop
mov
movsl
lcall
or
cmpsl
shll
aam
lcall
cmp
daa
clc
mov
mov
lcall
and
leave
cmp
mov
sbbl
cli
roll
jecxz
cmovl
imul
pushl
popl
stos
lahf
fwait
mov
lahf
insb
movsb
or
inc
adc
jle
or
outsl
sub
orb
js
push
adc
shl
sbb
mov
cmp
mov
enter
add
fcompl
insb
add
dec
adc
adc
or
cmp
cli
mov
mov
dec
or
jmp
xchg
iret
sub
dec
faddl
xlat
adc
mov
test
in
inc
inc
xor
test
mov
leave
sbb
js
jo
fxch
cmp
clc
in
arpl
push
out
mov
subb
inc
rcrb
or
insl
adc
pushf
cmpsl
in
cmp
xorl
jmp
inc
push
mov
outsb
cmp
mov
xor
mov
les
push
shll
icebp
loop
cmp
inc
mov
xchg
hlt
ss
dec
cmpsl
je
inc
clc
into
cltd
fisubs
xchg
out
fisubs
hlt
push
or
ret
cmc
inc
clc
popa
test
xlat
js
inc
mov
test
in
or
cltd
test
loop
dec
bound
pop
pop
push
fsubrl
xchg
xor
and
sbb
aam
and
and
ljmp
and
sub
lret
pop
mov
or
sti
rol
arpl
in
in
in
mov
xlat
cmp
jge
or
add
push
push
mov
xor
popf
mov
loop
pop
lret
mov
setno
jmp
push
push
outsl
cld
lcall
call
and
push
movsl
pop
inc
mov
mov
pop
dec
inc
stos
popa
push
xorb
xor
addr16
movsb
xchg
andb
sbb
add
out
repz
js
mov
inc
test
fstpl
lcall
push
push
lahf
lret
or
leave
add
xor
imull
dec
fsub
je
mov
and
shrd
ss
bound
ss
xchg
ljmp
sti
add
rclb
std
push
or
push
mov
lret
mov
jnp
sub
and
push
mov
addb
int3
jl
jle
jnp
dec
pop
mov
rolb
mov
inc
xchg
pop
in
lock
dec
daa
mov
fdivrp
call
sub
push
push
add
or
cmp
sub
jge
dec
aaa
gs
adc
rcr
or
std
or
mov
out
aaa
and
ja
lock
scas
adc
outsb
js
inc
mov
xchg
aam
mov
shrb
into
repnz
or
push
out
scas
js
aas
fisttpl
filds
enter
push
push
pop
xor
xor
lock
je
in
sub
and
les
shll
testb
mov
jnp
sbb
clc
lret
or
les
xchg
bound
sahf
xchg
fs
adc
lcall
ret
sbb
xchg
mov
aam
sub
rorl
scas
int3
pop
jne
pop
dec
add
dec
das
cwtl
loope
jg
ja
aad
ds
add
or
dec
sub
rcrb
in
data16
ja
push
enter
shrb
dec
in
cmpsl
push
or
mov
mov
in
cmpsl
dec
jg
mov
fucomip
gs
xchg
dec
pop
or
rcll
pop
loope
popf
xchg
js
dec
stos
jbe
xor
insb
mov
je
arpl
inc
add
repz
enter
jge
loopne
jl
daa
cli
fwait
outsl
mulb
lods
sub
add
xor
xchg
dec
cmp
cmp
leave
jle
inc
out
mov
sar
and
mov
sarl
in
push
rcll
jg
insl
or
cli
lods
push
sahf
pop
mov
adc
adc
stc
dec
xchg
jmp
out
sub
adc
pop
das
aad
cmpb
xchg
movsl
lods
push
into
pushf
stos
push
add
sub
mov
out
addr16
test
rcrl
gs
out
pop
bound
cld
or
jo
jp
subb
bound
ja
add
fidivl
adc
das
call
rorb
jle
xor
ds
inc
xor
add
dec
or
cmp
in
mov
out
and
fnstsw
pop
pop
lret
sbb
lret
ja
push
mov
lcall
mov
dec
sbb
mov
jne
movsb
lea
sub
sub
mov
pop
pop
inc
inc
pop
adc
sub
cli
lea
imul
cmp
dec
ds
or
and
push
pusha
mov
loopne
aaa
lret
stc
scas
test
or
outsl
sbb
shrb
mov
insb
xchg
lret
or
inc
or
push
mov
push
jne
insb
pop
aad
push
pop
rcl
lahf
cmp
cld
pop
push
sub
leave
call
sub
mov
xor
xor
arpl
xor
mov
xchg
fcmovnbe
lret
shrl
sarl
xor
imulb
outsl
out
orb
es
out
or
stc
jae
rorb
inc
and
in
pop
dec
stos
mov
leave
cmpsb
sbb
cmp
lret
jecxz
jno
xchg
lcall
mov
rorl
pop
nop
mov
push
dec
pop
jle
inc
ljmp
pop
jae
fdivs
push
aaa
das
cmp
in
jg
mov
ret
sahf
dec
mov
xchg
sub
adc
into
mov
xor
aaa
pusha
cmp
test
fsts
xchg
test
cmp
jne
dec
pop
popf
out
out
cmpsb
loopne
leave
mov
mov
shrb
lret
popf
test
hlt
mov
jne
or
sbb
mov
cs
push
cmp
pop
aad
jb
jg
bound
adc
sbb
je
adc
popf
dec
movsl
in
lret
cld
mov
cmpsl
inc
fistpll
adc
or
adcb
incb
bound
jge
push
xor
out
xchg
xchg
xchg
inc
shl
cmc
dec
adcb
into
addl
dec
in
bswap
fdivrp
in
xchg
mov
adc
adc
outsl
adc
sub
cmp
std
add
sub
and
cwtl
jl
push
stc
xchg
pushf
imul
shll
jne
or
jne
gs
ffreep
in
cmp
scas
lcall
sub
repz
xor
test
xchg
and
jne
add
cmp
test
add
jae
out
jns
stc
repnz
xor
mov
and
out
dec
stos
cmp
push
test
movb
inc
cmp
xor
push
daa
mov
in
enter
lock
cltd
and
and
push
xor
repz
sbb
jo
jns
sub
xor
rorl
or
pop
lods
cmpb
xchg
repnz
sahf
mov
push
xor
int3
sub
cwtl
xor
in
or
jno
pop
negl
cmp
mov
sub
gs
ret
loope
xor
in
mov
push
ds
xchg
cmpl
push
push
pop
pop
cmp
negl
aam
adcb
pop
ffreep
jne
out
jae
inc
shlb
mov
jle
dec
jae
adc
jne
xchg
insl
test
mov
pushf
add
lds
out
mov
ds
adc
and
lea
rol
inc
inc
cli
inc
or
sub
cmp
cli
idivb
daa
clc
xor
ljmp
jbe
aas
xor
dec
out
dec
mov
out
andl
and
pop
add
aaa
ds
mov
mov
cmpsl
xchg
aad
push
pop
adc
jbe
sub
movb
shl
inc
clc
repnz
stos
adc
pop
testb
dec
push
add
cltd
mov
imul
cmpl
add
imulb
cld
push
lds
clc
shl
dec
push
cmp
adc
add
xchg
xchg
dec
imul
popa
jl
cmpb
lret
inc
mov
out
sub
inc
fimull
sbb
pop
cltd
icebp
or
leave
je
ss
pop
inc
mov
loopne
pop
sub
loopne
lds
lret
dec
mov
fstps
inc
les
faddp
or
sbb
add
xchg
jne
dec
js
out
jnp
or
subl
xor
dec
rcll
fstps
int3
xor
or
outsl
pop
xchg
iret
xor
mov
into
add
repnz
xor
and
dec
and
fxam
mov
hlt
insl
ss
ljmp
loope
je
dec
xchg
mov
push
push
mov
xor
inc
sub
leave
or
push
mov
dec
cltd
pop
cld
nop
sub
jp
leave
jae
and
push
ffreep
test
insb
ljmp
add
je
scas
pop
lret
jmp
rorl
jnp
les
xor
pop
loope
icebp
jmp
jle
iret
sub
mov
or
mov
sub
fwait
std
adc
jae
stos
repz
mov
xor
js
lret
inc
fsts
fstps
jecxz
mov
popa
jle
xchg
enter
pop
fnstsw
mov
jmp
push
jmp
push
mov
popa
pop
jae
lods
sub
or
fwait
pushl
jo
cmp
in
sbb
xchg
ljmp
addr16
dec
lock
jnp
mov
aam
in
sub
xchg
dec
iret
dec
aam
ret
pop
stos
or
sbb
xor
sti
in
imul
sub
ret
pusha
and
fisubrs
stc
hlt
push
stc
jmp
pop
xor
mov
rcrl
sub
in
andl
lret
mov
cmp
in
pusha
xorl
push
jmp
xor
sbb
push
hlt
mov
sbb
ja
jbe
loope
js
xor
dec
adc
in
cltd
fwait
rolb
call
decl
arpl
inc
inc
sub
sbb
lods
jle
inc
je
cmp
pop
lret
mov
xor
xchg
xor
dec
dec
shll
lret
add
mov
jns
div
xchg
mov
rcll
cmp
imul
pop
mov
pop
xlat
std
in
adc
loopne
sarb
jl
insl
pop
add
es
mov
xor
inc
jmp
leave
pop
sub
in
lock
inc
aam
in
sub
cmp
jecxz
dec
push
jle
mov
xchg
mov
mov
jne
mov
call
add
xor
and
leave
push
loopne
les
xchg
mov
jnp
or
lods
sbb
push
fstl
subb
pop
xor
adc
icebp
pushf
or
jl
add
mov
stos
jo
scas
sahf
inc
mov
and
mov
cmp
shl
push
dec
jno
dec
add
sbb
out
dec
out
dec
fmull
cmp
mov
aad
xlat
sub
mov
mov
stos
or
sbb
adc
testb
push
fisubrl
mov
jge
sbb
andb
hlt
jno
cmc
cmp
dec
fwait
sbb
or
cwtl
jmp
das
fisubl
ficomps
mov
cmp
push
xor
mov
dec
cmp
cmpsl
and
cmp
mov
jo
mov
inc
adc
scas
jl
lcall
inc
cmp
repnz
jne
arpl
and
and
loopne
cmp
insl
cli
cmp
loope
and
mov
icebp
cltd
push
jb
cmp
push
cmp
clc
xchg
xchg
repnz
push
repnz
shrb
and
mov
leave
test
lret
aad
xchg
lock
xchg
mov
push
sbb
jbe
xor
sti
sub
shll
out
mov
das
lea
adc
roll
cmp
pop
stos
and
mov
sbb
dec
imul
adc
daa
nop
ror
push
mov
hlt
leave
xor
nop
jl
jbe
add
cwtl
movsl
jns
repnz
mov
call
loope
test
rcll
cli
loopne
rcr
in
aas
mov
stos
popf
jno
dec
out
test
pushf
and
shll
sti
lahf
into
scas
mov
push
lods
test
loopne
push
and
out
lds
lret
xchg
stc
daa
mov
faddl
adc
xor
pop
std
loope
push
sbb
mov
or
sbb
mov
xor
lea
aaa
jle
scas
or
jno
or
sarb
mov
cmp
mov
sbb
or
pop
cmc
cmp
mov
outsb
push
imul
mov
dec
cmpsl
cltd
fiadds
push
or
sbb
cmp
shll
adc
sahf
cmp
jge
push
outsl
sarl
mov
fists
or
cld
fildll
faddl
cld
pop
out
negb
xchg
imul
sub
push
pusha
add
xchg
adc
mov
sub
rcl
les
call
popa
and
mov
pop
inc
or
dec
jg
add
into
xchg
pop
add
sti
jb
xor
sbb
fistpll
leave
sbb
ror
lahf
mov
mov
mov
outsb
pop
push
and
push
push
addr16
aad
xchg
jge
es
out
and
sbb
cli
jl
ljmp
pop
leave
cwtl
adc
xor
shl
adc
mov
sahf
jno
nop
dec
inc
jge
pop
mov
xor
sub
xor
cmpsb
out
dec
add
cwtl
sahf
xor
push
pop
or
cmpsb
xchg
repnz
mov
mov
and
add
sbb
lea
aaa
hlt
cs
je
xchg
push
lods
ret
add
sub
mov
xchg
dec
outsl
shrb
adc
jb
inc
pop
int3
xlat
pop
movsb
pop
xchg
inc
in
adc
icebp
or
xor
xchg
bound
movsb
pop
pushf
dec
mov
imul
movsl
mov
adc
xchg
xlat
jo
rcll
and
daa
int3
mov
jae
jnp
push
push
jne
bnd
lds
mov
jle
jg
lcall
sub
pop
fiadds
sbbl
scas
cmp
sbb
fcomps
into
and
aas
push
adcb
pop
pop
leave
pop
pusha
adc
xchg
mov
out
dec
int3
int3
jnp
mov
loope
jmp
inc
stc
jmp
jle
insl
iret
sub
adc
lods
jbe
or
xor
cld
in
pop
negl
push
jp
fbld
data16
xor
push
gs
pop
sahf
lods
mov
adc
lds
lds
pop
xchg
mov
xor
aad
mov
xor
jns
ja
roll
inc
inc
addr16
mov
or
push
dec
mov
dec
faddl
cmp
leave
push
sub
ficoml
int3
jns
loopne
push
ja
popl
lret
xor
lcall
int
sub
or
lock
cmpsl
jno
push
adc
dec
adc
and
and
and
leave
cmp
push
and
pop
in
sub
roll
cwtl
sbb
inc
push
outsl
or
or
mov
cwtl
dec
xchg
clc
jno
mov
mov
jge
mov
shlb
sahf
not
push
cmpsl
leave
mov
inc
sub
fimuls
frndint
int
cmp
push
xchg
xchg
pop
ret
mov
sbb
daa
insb
cmpsl
mov
jl
mov
xchg
enter
or
mov
popf
mov
jns
mov
divl
addl
loope
cmp
and
jbe
cmpb
push
cltd
xchg
ror
xchg
or
ss
push
jo
iret
mov
push
pop
nop
and
jbe
in
jmp
mov
roll
sbb
sti
ds
call
inc
jge
xchg
adc
lods
sbb
cs
into
jns
mov
xchg
dec
xchg
sbb
pop
aam
mov
icebp
jl
jl
adc
in
push
sub
rcll
ret
push
insl
inc
pop
frstor
pop
aam
movsb
xchg
out
cmp
mov
ljmp
sar
pop
pop
fstpt
mov
mov
scas
mov
dec
das
dec
cmpsb
loope
fs
ret
sub
xchg
fwait
mov
adc
adc
adcb
push
jp
cwtl
adc
adc
pusha
jnp
leave
fcomp
sbb
scas
not
xchg
in
or
stos
filds
jle
std
or
add
xor
out
les
icebp
adc
lcall
lods
testl
xor
pop
js
test
jno
aas
test
sub
dec
sbb
adc
fsubp
jo
insb
fimull
negl
int
andb
lods
out
xchg
ficoml
mov
mov
aam
in
dec
bound
mov
add
lock
sub
add
mov
rorb
push
sub
pop
shl
jp
cmc
push
adc
inc
jge
cmp
push
test
inc
jmp
mov
arpl
test
fcompl
push
decl
fs
lds
sysret
test
add
jae
fldenv
push
and
add
mov
mov
pop
je
andl
jl
rcrl
push
divl
add
gs
or
jge
hlt
jp
cmp
rol
repz
cmpsb
ja
ret
pop
imul
sub
popf
inc
rcrb
aas
adc
sti
dec
mov
or
push
dec
inc
xor
and
sar
push
scas
lahf
cwtl
push
ja
popa
es
out
imul
cs
sbb
sbb
gs
sub
roll
push
cmp
mov
inc
outsl
outsb
add
inc
jmp
or
inc
movsl
insl
jns
dec
dec
stos
sbb
icebp
mov
leave
filds
in
cwtl
mov
xor
shlb
dec
mov
jg
pop
or
jns
mov
dec
imul
lret
outsb
jecxz
mov
pop
jne
repnz
js
int3
cmpsb
add
fiaddl
mov
aam
pushf
mov
xchg
pop
insl
popf
push
pop
out
addb
push
rcll
andl
push
mov
test
adcb
repz
ljmp
dec
pop
jbe
adc
inc
cs
xchg
mov
xchg
dec
movq
mov
mov
push
mov
bound
aas
cmp
enter
das
fisubl
push
stos
sbb
test
in
pushf
push
mov
or
std
sbb
inc
inc
pop
cld
sti
lods
mull
dec
or
jl
aas
adc
jbe
jg
outsb
cmp
repz
or
scas
xor
mov
xor
xchg
adc
inc
pop
mov
repnz
pop
xor
test
mov
popf
push
mov
and
mov
or
push
arpl
inc
into
loope
cmp
lock
lcall
cltd
cmp
jo
repz
or
inc
in
mov
add
rolb
inc
push
insl
hlt
fisttpll
hlt
loop
xor
inc
adc
sbb
sbb
in
mov
inc
xor
ss
push
cmp
add
inc
lods
inc
mov
clc
pop
aam
pop
xor
call
lret
add
cwtl
mov
cmp
push
push
std
loopne
cmp
imul
push
scas
adc
push
in
gs
inc
fdivp
lret
cmp
push
dec
in
jae
xor
xchg
pop
mov
xchg
push
cmpsl
adc
inc
xor
js
lds
pop
xor
iret
outsl
mov
mov
aam
push
sub
ds
lds
fs
sbbb
jp
mov
cld
add
add
push
add
addb
pop
mov
fs
add
adc
in
sbb
adc
sbb
dec
or
insl
push
sbb
dec
andb
fldl
imul
sub
fisttpll
test
push
imul
mov
lock
mov
mov
arpl
inc
movsb
ss
pop
out
add
dec
fmuls
and
lahf
adc
xchg
mov
sbb
push
scas
popa
xchg
ds
and
xchg
subl
ss
sbb
mov
mov
jmp
inc
and
movsl
aad
xor
lods
adc
bound
fistpll
pop
in
add
scas
xchg
leave
jb
scas
out
pop
mov
rol
and
out
insl
sub
test
lahf
jmp
inc
fists
mov
fcmovb
sbb
or
inc
xchg
fisubrl
data16
add
cli
adc
xchg
or
insl
and
dec
mov
jnp
jg
je
in
out
sbbl
insl
popf
dec
mov
lds
scas
cmpsl
movsl
push
stc
sub
xorl
sbb
into
mov
leave
xchg
fldt
pop
movsb
add
insb
dec
nop
outsl
cs
pop
rcll
leave
in
nop
sbbl
pop
scas
adc
adc
ror
repz
rcl
lods
sbb
in
mov
ss
inc
xchg
or
loopne
xor
inc
jns
pop
dec
test
ds
stos
fnstsw
in
jle
inc
jb
mov
sub
dec
xor
scas
cmp
mov
cmp
mov
sbb
cmp
sub
pushf
mov
int3
or
pop
dec
sahf
xchg
jo
mov
movsb
dec
cmp
cmp
dec
mov
push
stos
dec
pop
sub
pop
xorb
pop
popf
in
mov
aas
rclb
jno
mov
out
pop
data16
roll
pop
scas
adc
xor
inc
jg
jl
push
pop
cs
jp
pushf
push
imul
test
js
in
and
test
jmp
int3
ja
and
inc
and
pusha
ss
mov
fcmovnbe
into
clc
gs
icebp
mov
cmp
mov
pop
je
insl
popf
fldcw
push
push
inc
xor
bound
pop
mov
fldt
pusha
inc
xchg
add
js
jae
and
add
mov
jmp
std
mov
mov
cmp
inc
dec
icebp
cmp
cwtl
rorl
jge
jg
xlat
and
adc
lcall
xchg
jp
iret
sub
shll
decb
xor
xchg
stos
int
sbb
popa
xor
jb
and
ret
or
add
lds
fcoml
pop
xchg
repz
xor
fsubrs
imul
cwtl
cwtl
push
lea
mov
push
les
into
and
dec
inc
dec
pop
add
js
jmp
test
push
jnp
sahf
jbe
nop
bnd
lds
mov
push
inc
out
inc
stos
cmp
jge
push
sub
and
ljmp
ljmp
pop
call
test
test
outsb
fidivl
push
dec
jmp
push
mov
call
sub
jns
push
adcb
and
jg
test
inc
aad
filds
add
idivb
stos
je
mov
xchg
cmp
push
ror
insl
lds
into
lahf
ljmp
lock
outsl
push
xor
int3
cmpsb
mov
jmp
aas
stos
inc
xor
and
out
pop
or
fisttpl
in
adc
cmpsl
cmc
dec
in
dec
insb
xor
mov
dec
repnz
lods
sbb
scas
sbb
push
jno
gs
or
enter
jge
decb
je
push
xor
lock
xor
push
addl
add
imul
mov
jb
fucomip
cltd
subl
cmp
pop
and
int
test
outsl
mov
jle
cmp
insb
fcmovnu
in
test
js
push
mov
xor
xor
dec
mov
insb
or
movsb
sahf
mov
insb
pop
pusha
sub
shll
add
negb
into
test
mov
mov
xor
call
jne
push
xchg
mov
jp
imul
orb
pusha
jecxz
sub
mov
nop
stos
xchg
lods
mov
mov
jae
orb
fadd
mov
xor
imul
push
mov
adc
xor
mov
sbb
lea
clc
das
das
aas
cltd
pop
and
lret
pop
lods
repnz
into
adc
addb
and
scas
jne
jp
mov
mov
repnz
pop
ljmp
jno
test
ret
into
loopne
xor
pop
push
fldcw
shll
loopne
push
in
loopne
or
dec
shr
mov
xlat
sbb
push
push
addr16
mov
xchg
out
pop
jnp
mov
aaa
lods
or
imul
sub
movsb
mov
push
js
push
push
add
testb
or
xchg
lahf
int
jl
push
stos
xchg
inc
push
fisttpll
std
insl
jo
out
or
fsubl
xchg
or
ljmp
pop
inc
jnp
xchg
shrl
ljmp
addl
ja
mov
mov
jmp
out
jmp
movsl
into
int3
shlb
and
mov
mov
jnp
xchg
dec
in
jae
mov
push
lret
pop
test
scas
dec
mov
fwait
cld
stos
test
pop
shl
scas
lock
dec
enter
imul
stos
xchg
mov
push
je
mov
dec
mov
sarb
addl
out
pop
cmovs
dec
inc
mov
adc
xchg
pop
inc
repnz
pop
cmp
movsl
adcl
fsubp
movsl
mov
sub
jge
out
sub
ret
jle
jbe
jbe
cmp
jmp
pop
jmp
push
push
inc
pop
jb
mov
cwtl
test
stos
hlt
jo
test
into
jp
iret
and
sub
loop
in
cmp
fwait
and
stos
and
sbb
mov
push
repnz
or
pop
xchg
cmpsl
loopne
push
jle
jae
jns
fwait
inc
iret
or
and
sbb
cmp
add
rcrl
xor
add
mov
fildll
enter
cmp
mov
inc
jae
out
jecxz
or
and
outsb
fdivrl
into
xor
fs
mov
scas
fidivs
sub
sub
add
int3
mov
insb
mov
repz
rclb
and
lahf
inc
mov
loop
sub
aas
aad
mov
lea
out
pop
cmp
in
push
cmp
add
sbb
lret
xchg
and
ret
dec
jno
outsl
js
das
call
mov
pop
push
push
add
xchg
icebp
push
jnp
cmp
cmc
loopne
aad
dec
push
scas
loopne
fwait
mov
jo
out
dec
bound
ret
imul
loopne
dec
xchg
or
insb
jbe
stos
cmp
dec
mov
mov
cmpsl
rorl
popa
fidivs
adc
mov
mov
sbb
pushf
fisubrs
jmp
out
insb
scas
in
xchg
ret
test
in
test
dec
add
mov
lret
jbe
push
and
jne
pop
fcoml
loop
outsl
mov
pop
outsl
int
lahf
add
mov
leave
xlat
adcl
xchg
orl
cmp
mov
lret
or
cmpsb
pop
hlt
rclb
shlb
iret
addl
xor
jp
leave
push
jns
jp
cmp
cmp
adc
sub
sbb
in
aas
cmp
je
rclb
xlat
stos
push
pop
fcoml
jno
data16
mov
push
cmpl
andl
out
mov
xchg
popf
add
loop
cmc
pop
dec
fldenv
sub
add
leave
aad
push
and
stos
stos
dec
clc
mov
cmpsb
pop
dec
hlt
out
ficoml
test
mov
sbb
not
mov
jg
dec
cmp
scas
stos
xor
inc
in
cmp
popf
les
in
cs
int3
jecxz
mov
inc
addr16
jne
sbb
std
jns
push
scas
inc
mov
push
pop
inc
imul
loop
push
aad
ds
stos
lahf
mov
push
aaa
mov
or
adc
pop
mov
outsb
dec
sti
pusha
xor
push
shll
xchg
sahf
fiaddl
into
out
ljmp
mov
imul
mov
xor
dec
shll
add
popl
mov
jecxz
xor
jne
scas
rorb
jle
dec
xchg
stos
sbb
mov
and
leave
out
mov
mull
or
push
scas
mov
mov
pop
or
fs
dec
insl
cmpsl
ret
test
cmpsl
inc
dec
or
nop
mov
add
push
xchg
inc
notb
inc
jg
pop
mov
inc
mov
inc
outsb
push
adc
cmp
sub
mov
xchg
adcl
lcall
in
add
xchg
cmp
and
sahf
xorl
fsubrp
xchg
gs
jns
iret
orl
sub
push
xchg
xor
insl
test
sub
lods
repz
das
outsb
sbb
lret
xor
in
adcb
sarb
adc
fbstp
fwait
bound
bound
inc
outsl
dec
jbe
push
sbb
stc
insb
rolb
jne
add
mov
xor
fsin
test
dec
dec
jmp
fwait
lret
mov
inc
popa
pop
cltd
scas
sub
jl
mov
outsb
or
repnz
pop
shll
cwtl
sarl
sbb
jle
mov
mov
or
jnp
test
in
push
ret
xor
stos
mov
loop
add
loop
loopne
mov
add
rcrl
cmp
hlt
mov
dec
fcomp
pop
pop
mov
dec
mov
mov
cmpb
lods
test
push
hlt
add
or
mov
mov
sbb
outsl
push
and
nop
xor
inc
sub
inc
out
movsb
mov
out
adc
xor
push
cld
fdivrl
outsb
jge
dec
mov
sbb
loopne
loope
subb
jmp
cmp
jp
mov
xor
pushf
add
lret
dec
adc
jmp
mov
movsb
cli
clc
cli
lods
adc
mov
adc
xor
sbb
scas
pop
mov
subl
xchg
jne
repnz
ljmp
negb
pop
aas
sub
imul
rorb
mov
xor
mov
mov
outsb
inc
test
int
jge
les
lret
xchg
fsubl
or
out
add
sahf
dec
fsubrs
mov
pop
test
cltd
aam
mov
sti
popa
sub
cmp
ficoml
out
mov
imul
inc
stos
aad
xorb
cmpb
inc
daa
nop
or
pop
ret
mov
hlt
stos
dec
dec
jg
lock
jl
lock
push
iret
sub
dec
leave
call
loope
and
push
mov
shlb
sbbl
pop
mov
dec
mov
xor
aam
outsl
aad
or
int
xchg
sub
sub
dec
jns
sarl
push
cltd
les
sahf
and
xor
lock
mov
jl
sub
mov
popa
xchg
int
andl
sub
adc
pop
sbb
jg
mov
aad
jmp
out
add
xchg
and
dec
mov
test
xchg
sub
movsb
and
jo
add
ljmp
xchg
std
test
fdivs
js
and
cmp
pop
shlb
push
sbb
jl
pop
inc
add
iret
fucom
or
dec
jle
scas
jnp
xor
popf
sti
inc
lahf
cmpsl
je
jb
jne
insb
mov
jne
adc
adc
data16
push
mov
pushf
jb
mov
in
xchg
je
cmpsb
gs
test
rolb
arpl
add
or
test
and
xor
hlt
pop
lock
xchg
sahf
push
mov
fistl
icebp
test
xchg
psllw
lret
sbb
mov
or
xlat
int3
fcoms
and
lods
cmp
jns
aad
repz
movsb
rorb
loop
xchg
popa
sub
push
cmp
cld
shll
inc
dec
jb
int
cwtl
aaa
mov
cwtl
mov
lock
mov
xchg
mov
mov
mov
pop
sti
push
addb
popf
dec
vpshaq
mov
pop
or
jb
or
mov
push
mov
jmp
stos
fwait
test
adc
popa
push
xor
push
popa
jp
into
push
ds
xchg
jns
test
cmp
aad
jl
mov
pop
arpl
ja
inc
jns
mov
mov
cli
insb
sti
aad
loop
sti
aad
ret
pop
and
and
pop
jmp
out
xchg
out
test
test
stc
mov
dec
cld
fldcw
cmpl
jecxz
mov
dec
push
pop
jns
icebp
cmpsb
lods
jns
arpl
inc
sub
push
fwait
mov
outsb
sahf
or
inc
insl
push
pop
loopne
into
jno
and
push
push
aas
xlat
mov
jecxz
push
mov
mov
mov
adc
jmp
pop
les
mov
xchg
mov
icebp
push
add
push
inc
repnz
in
popf
adcb
jae
cld
call
aam
popf
mov
les
fdivrs
pop
fstps
mov
cmpsl
fucomp
mov
xchg
jns
mov
adc
mov
aam
pop
push
outsl
test
mov
cmp
out
or
fsts
pusha
mov
ret
pop
shrb
andb
sbb
mov
fcoms
jnp
inc
mov
test
mov
inc
ror
adc
xchg
lcall
pop
cmc
pop
add
mov
push
xchg
pop
shrb
out
clc
dec
sub
adc
sbb
adc
iret
fwait
loope
mov
stos
sbb
xor
fsubrl
in
and
int3
fs
dec
cmp
bound
sbb
sub
xlat
or
in
enter
or
jg
out
push
sub
andb
mov
aam
sub
cmp
stc
mov
cmpsl
xchg
pop
add
push
jae
and
dec
loopne
push
inc
mov
mov
lods
pop
popf
add
inc
and
xorl
mov
cli
adc
inc
daa
mov
fmul
clc
xor
and
mov
push
popa
repz
cmp
inc
push
das
lods
lds
nop
std
imul
fdiv
dec
pop
loopne
xchg
test
mov
out
pop
jge
out
fdivrs
cmpl
dec
adc
and
adc
and
pop
repz
iret
lahf
inc
iret
pop
dec
jb
adc
jl
mov
xchg
aaa
mov
fs
mov
int3
mov
cltd
jmp
mul
inc
stos
outsb
add
into
ljmp
mov
inc
cmp
adc
xchg
dec
jge
call
pop
mov
lahf
dec
sub
fidivrl
daa
mov
push
shr
lahf
push
pop
and
xor
sub
cltd
mov
test
sbb
mov
inc
sbb
inc
mov
daa
jb
ja
mov
mov
dec
xor
push
pop
int3
aaa
insb
pusha
scas
cmp
inc
mov
stc
xor
sarl
jle
insb
addr16
xor
mov
scas
test
add
icebp
cmpsb
leave
push
inc
inc
repnz
shrb
xorl
cmp
or
adc
pop
pusha
cmp
mov
cmpsb
xchg
pop
out
aam
mov
out
mov
xchg
add
fcmovnbe
ss
mov
cmp
add
add
fbld
jle
into
mov
pop
or
xor
add
repz
pop
mov
pop
adc
push
lret
dec
pop
or
push
pop
test
mov
fidivl
out
mov
jns
pop
jbe
movsb
idivb
mov
lea
cmp
add
mov
outsl
mov
jmp
ret
xor
or
stc
dec
xor
insl
jnp
addr16
and
jg
out
mov
je
outsb
add
int3
imul
andps
mov
or
rcll
adc
add
xchg
mov
out
fwait
dec
bound
dec
scas
pop
js
aam
sbb
repnz
adc
dec
enter
jns
xlat
cltd
rcrb
push
imul
stos
jno
dec
imul
and
push
notl
and
push
and
push
mov
inc
jnp
ds
jne
push
rcr
mov
enter
rcr
aam
jb
jle
sub
mov
dec
leave
xchg
push
daa
pop
lds
cs
add
push
fisttpll
xor
cmp
std
xchg
js
in
bound
call
mov
aam
mov
fistpl
mov
pop
push
sbb
mov
pop
adc
pop
push
bound
xor
push
mov
testl
shll
or
and
add
scas
push
in
mov
repnz
addb
jl
mov
add
les
xor
mov
shlb
add
lds
leave
jno
in
aas
mov
sub
shrb
addr16
pcmpeqb
dec
pop
jne
adc
adc
sbb
xor
xor
in
stos
sub
sbb
xchg
ret
daa
push
push
sbb
data16
xchg
xchg
inc
pusha
out
sbb
loopne
dec
shlb
or
aas
pusha
shl
cli
xchg
insb
jno
add
int3
mov
scas
call
cmp
pop
loopne
inc
pop
mov
lea
sahf
out
push
mov
aas
fisttps
xor
xchg
js
xorb
sbb
add
or
xor
cwtl
mov
mov
pop
xchg
mov
xor
fbstp
push
xor
fstpt
gs
lret
dec
int3
shlb
cmpsb
push
nop
fwait
jmp
push
sbb
mov
aad
jb
adc
lock
pop
aas
mov
mov
push
mov
gs
push
leave
stos
jno
xchg
lcall
stos
scas
mov
push
add
pop
clc
and
jo
pop
data16
xchg
out
loope
mov
mov
dec
or
sub
in
mov
add
cmp
int3
mov
xor
addb
mov
xor
ficoms
jo
and
inc
cwtl
pusha
jg
int3
add
fcomp
xchg
adc
push
testl
push
dec
outsb
and
test
mov
aaa
mov
add
imull
outsl
loopne
jno
push
arpl
xchg
and
das
sahf
mov
sti
or
leave
lret
jnp
push
xor
sub
push
push
stos
jne
aad
cmp
push
adcb
sub
daa
or
in
mov
inc
dec
jns
cmp
cmpl
and
gs
pop
mov
lret
popf
jle
add
sub
dec
fisttpll
adc
insb
adc
and
sub
sbb
mov
mov
xor
jbe
jnp
inc
add
fisubrl
sahf
pop
dec
sbb
or
xchg
shl
cmp
pushf
jecxz
xor
movsl
push
pusha
or
mov
add
iret
add
dec
sbbl
rcll
adcl
mov
or
stc
xor
subb
out
push
adcl
repz
fstpl
out
insb
push
js
add
imul
add
sti
mov
rcl
in
pop
mov
scas
and
cmp
cmpb
sbb
bswap
fdivl
xchg
add
push
pop
lahf
arpl
xlat
mov
inc
xchg
ja
fldl
je
leave
xchg
add
dec
clc
mov
or
and
adc
sahf
inc
fsub
push
dec
lahf
lret
adc
clc
and
sbb
mov
cli
sbb
stos
sbb
dec
sub
aaa
add
add
cmp
cmp
insb
mov
jo
xchg
dec
test
pushf
mov
gs
andb
lahf
jbe
xor
ret
sbb
sub
outsb
push
out
cmp
stos
neg
inc
mov
mov
jae
cmp
mov
aad
je
insb
push
out
add
push
movsl
adcl
and
add
outsl
out
mov
mov
daa
cmp
jmp
xchg
sbb
movsl
dec
xor
lret
inc
es
scas
and
xor
xchg
lea
dec
xchg
and
sbb
xchg
movsl
inc
sbbl
int3
xor
pop
jmp
mov
popf
in
mov
cmpsb
mov
mov
ror
inc
ljmp
pop
xor
ficoml
aam
cld
jae
and
jp
adc
insl
xchg
hlt
pop
enter
fcomps
jnp
xor
into
or
inc
shll
dec
xlat
imul
sbb
ljmp
sbb
movsl
call
inc
mov
fwait
sbb
int
aas
addr16
enter
shr
mov
xor
sbb
fmuls
or
stos
fisttpl
xchg
inc
sbb
lds
sbb
jae
fcos
mov
mov
loope
jg
das
jne
rcrb
je
xor
or
into
add
cmp
or
imul
adc
jle
rcll
pop
xchg
lahf
mov
mov
out
repz
imul
mov
and
mov
cmp
jge
repnz
pop
inc
fnstenv
dec
out
jl
and
stos
shll
xor
or
lock
xchg
lds
aas
jecxz
mov
xlat
add
stos
xchg
jp
adc
add
add
lods
subb
cs
ds
add
push
or
loope
xor
xchg
daa
xor
divb
adc
mov
test
mov
jne
test
outsl
add
xorl
inc
xchg
sub
movsb
out
jno
push
clc
inc
xor
rcr
sbb
mov
ret
push
mov
daa
sbb
cmp
loop
xchg
jb
xchg
mov
aam
bound
out
inc
ret
loope
inc
cmp
subl
inc
jle
lock
push
adc
daa
les
pop
ljmp
mov
cmp
add
bound
dec
aas
enter
cmp
inc
xor
lret
lods
cwtl
outsl
sbb
dec
outsb
ljmp
aad
and
pop
xor
cwtl
cmp
mulb
sahf
sti
mov
rcll
mov
testl
cld
sbb
lahf
pop
adc
add
rclb
jp
dec
mov
pop
mov
stos
inc
jnp
into
sbb
pop
mov
or
sub
loop
cltd
or
arpl
test
mov
repnz
ficoms
rcl
adc
adc
mov
dec
push
sti
lds
mov
ss
mov
add
shrb
xchg
lea
in
pop
in
xchg
xchg
adc
movsb
inc
stc
mov
or
movsl
sub
cmp
sbb
ss
jl
jmp
add
inc
and
cmp
lock
add
jmp
xor
ds
add
or
insl
negb
loop
sub
sub
rorb
or
repnz
xchg
jbe
icebp
adcl
mov
rcr
sub
outsb
incb
vmwrite
cld
rcrb
mov
jecxz
push
lahf
aas
frstor
pop
and
inc
and
pop
inc
scas
mov
mov
out
and
inc
cmpb
negb
pop
xorl
inc
ja
xchg
adc
je
jecxz
in
pop
xchg
sub
push
jg
mov
jle
mov
jmp
pop
push
push
and
pop
int
fdivrl
mov
movl
cmpsb
add
insb
xchg
xchg
dec
mov
sbb
sahf
sub
clc
rclb
push
cld
cltd
push
push
pop
mov
mov
nop
and
cmp
mov
in
clc
jmp
push
push
ret
pop
loopne
adc
mov
mov
nop
xor
es
out
test
testl
sub
aad
call
icebp
and
mov
loope
fwait
mov
cmpl
andb
cmpsb
sub
mov
xchg
daa
pop
xor
int3
dec
sbb
add
lret
sahf
sbb
sbb
inc
dec
and
dec
jge
adc
sub
jge
xor
jae
jg
mov
ljmp
das
xchg
bound
testl
mov
sbb
cmpsl
cmp
mov
cmc
imul
out
mov
add
sti
test
rcrl
leave
xchg
jae
lahf
xlat
mov
hlt
je
rcll
aad
cwtl
loope
mov
mov
sbb
mov
andb
js
in
cwtl
mov
add
shl
push
pop
pop
popa
je
pop
outsl
cli
dec
mov
cli
pop
out
repnz
icebp
sbb
mov
jns
in
out
pop
call
and
add
cmp
cmp
and
out
inc
pop
adcb
popa
mov
inc
adc
jo
mov
orl
pusha
pop
imul
or
cli
inc
adc
push
cmp
daa
add
sub
add
cmp
rcrb
jne
jne
aas
stos
jge
xchg
adc
out
fcmovu
lcall
cmp
popf
fdecstp
jae
js
pop
arpl
je
fdivrs
pop
shrl
cmpsl
mov
push
push
mov
xlat
stos
call
bswap
adc
mov
push
jg
sbb
ljmp
pusha
jb
fadds
bound
cmp
xchg
xchg
sti
mov
movsb
movsb
lea
mov
and
dec
jge
fnstsw
jae
or
xchg
mov
jp
push
cs
cwtl
scas
mov
xor
outsb
adc
jmp
xchg
xchg
add
mov
sub
scas
or
nop
pop
aad
pop
js
cmc
in
lret
in
inc
xchg
push
push
out
shlb
lcall
sti
lds
ds
push
sbb
xchg
mov
in
push
clc
mov
mul
stos
mov
scas
mov
ljmp
push
mov
out
xchg
mov
ljmp
adc
push
movsb
test
push
or
and
pushf
faddl
inc
in
in
lods
sub
mov
out
mov
mov
out
mov
rclb
adc
xchg
movsl
xchg
jb
add
jecxz
jo
add
inc
inc
in
cmp
andb
xchg
xor
adc
and
test
pop
insb
push
dec
push
sbb
fs
jbe
sar
dec
and
push
call
mov
not
lahf
adc
push
sub
ror
mov
push
sti
ja
dec
loope
push
add
xchg
nop
sbbb
stc
jae
pop
cld
ss
ret
dec
enter
ja
or
pop
iret
xor
shll
jl
js
xchg
adc
sbb
jne
sub
dec
cmp
popf
sbb
dec
add
mov
adc
push
ljmp
cmc
pop
push
adcl
lret
pop
ljmp
fisubs
push
adc
icebp
dec
bound
cs
andl
fxam
outsb
add
insl
iret
push
fs
mov
insl
daa
mov
cmpsl
pop
sbb
insb
adc
mov
int
or
out
push
stc
in
jle
adc
add
mov
orl
rep
dec
mov
xchg
dec
scas
xchg
cmpsb
push
arpl
jno
mov
les
adc
sti
lods
mov
aas
xchg
inc
push
push
fcmovb
scas
cmp
ss
pop
out
icebp
ljmp
adc
ficomps
cs
fidivrs
fildll
mov
or
mov
leave
mov
adc
and
insl
adc
mov
aas
push
mov
bound
dec
dec
loopne
test
subb
mov
push
dec
dec
fisubs
push
in
jb
xorl
ret
lock
ss
addr16
jg
rcll
push
jae
pop
data16
repz
ficompl
scas
mov
rclb
pop
cmp
adc
cmp
jns
sbb
cmp
pop
loope
and
iret
outsb
mov
ret
sbb
cmpsb
add
jecxz
dec
mov
orb
jnp
and
dec
mov
xchg
cltd
lds
cs
mov
cmp
mov
pop
push
cmp
mov
sbb
pushl
sahf
in
jg
and
jmp
mov
mov
adc
bound
fiadds
cmp
jae
adc
sbb
mov
inc
xchg
je
mov
nop
lds
push
call
mov
testl
adc
cs
fs
mov
push
loope
stos
mov
int3
sarb
cmp
xchg
jae
adc
mov
xchg
in
sub
frndint
fs
mov
cmpsl
stc
cmp
loopne
lock
sub
push
add
pop
xchg
pop
mov
and
lea
in
clc
leave
xor
aam
xchg
xchg
mov
add
js
mov
scas
sub
add
mov
mov
cmp
jns
aaa
mov
mov
adc
scas
jl
test
jg
and
or
jle
adc
adc
or
jp
adc
test
in
fwait
mull
sub
pushf
inc
push
mov
es
pushf
inc
shlb
je
test
xor
push
adc
fbld
gs
add
bt
adc
cmpsl
cmc
lret
jmp
divb
ja
xchg
pop
xchg
inc
imul
cmp
ja
add
iret
test
xchg
mov
cmp
push
aas
xor
cmp
pop
xchg
add
lea
push
aam
loopne
sbb
sub
fwait
pop
lods
sti
adc
and
ljmp
mov
cmp
mov
dec
js
pop
push
inc
mov
jo
cld
orl
push
enter
dec
fisubs
shlb
pop
mov
fmulp
and
mov
cmpsl
jo
xor
data16
push
push
jp
movsl
mov
or
xlat
sar
sub
cmpsb
sbb
sbb
arpl
pop
xchg
in
lret
or
add
pop
aaa
cmp
mov
dec
sarl
pusha
insl
xor
dec
add
cmp
sbb
lock
sub
mov
sub
sbb
ds
lret
fdivrl
dec
bound
sahf
lret
lar
jecxz
std
fildll
cs
ljmp
mov
jmp
mov
icebp
fistps
adc
into
inc
gs
fdivs
lods
cltd
pop
or
adc
mov
movl
fistpl
sbb
lret
jle
jo
sti
sbb
das
sbb
rclb
push
stos
ds
icebp
mov
rolb
adc
sub
lods
dec
and
sbb
sbb
jge
fstpt
xor
cmpsb
mov
jo
pop
add
fadd
inc
dec
fdivl
sbb
and
push
xor
inc
ss
and
mov
pop
fs
mov
lods
stc
pop
mov
in
cmp
cmp
aam
and
xchg
bound
in
testb
jne
sbb
sbb
test
dec
push
push
rcrl
leave
test
stos
push
pop
xchg
pusha
mov
pop
mov
repnz
in
sub
xor
stos
lock
movsb
daa
jecxz
sarl
xchg
lret
xor
sbb
cmp
rclb
sub
test
fdivrs
stos
into
ficoml
mov
or
outsb
stos
loopne
les
sti
adc
xchg
jo
mov
lret
mov
xchg
jbe
invd
stc
sbb
jle
push
dec
loope
subl
xchg
lock
push
and
rcll
mov
cld
imul
fidivrs
dec
int3
subps
enter
dec
loop
sub
mov
pop
je
mov
pop
mov
cs
dec
push
nop
icebp
jg
les
add
data16
sub
rolb
mov
xlat
mov
nop
stc
cld
cmc
inc
push
insb
dec
xor
push
add
pushf
sub
bound
in
orl
out
loopne
pusha
gs
test
pop
and
mov
xchg
fs
fldl
sti
cmpsl
ds
or
std
cwtl
push
add
push
nop
xor
mov
jo
adc
das
cli
dec
call
jb
leave
movsb
sbb
adc
sub
cmpsb
ret
test
mov
aam
add
xchg
lret
add
mov
inc
mov
cs
sbb
lcall
or
xor
sub
adc
ljmp
jne
sbb
into
adcb
push
pop
or
jle
cmp
out
sbb
test
pop
cmp
inc
push
xchg
dec
cmp
leave
mov
jecxz
mov
inc
add
negb
in
add
aam
add
lock
or
xor
out
xor
adc
cmp
sbb
mov
cmpsl
inc
outsb
dec
pop
mov
rol
inc
faddl
out
xor
adc
ds
xchg
in
mov
sbb
sub
mov
push
pop
mov
ljmp
inc
or
bnd
cmpsb
cmp
pushf
xor
xlat
xor
fsubrs
mov
dec
das
pop
pushf
mov
dec
fdivrs
push
cld
dec
cmp
jnp
cmpsb
push
fcomi
fwait
adc
test
mov
out
mov
xchg
fsubrs
mov
or
lahf
imul
push
and
inc
jmp
pop
xor
inc
imul
popa
ss
fwait
testb
cwtl
jo
push
imul
movsb
add
lods
or
subb
cwtd
mov
or
les
enter
das
js
sbb
mov
ret
sub
mov
aas
call
loop
jnp
adc
test
cmp
repnz
movsl
dec
sub
in
andb
push
or
dec
push
fimuls
pop
sub
mov
mov
dec
inc
push
inc
cmpsl
jnp
mov
int3
std
aam
test
cmpsb
push
pop
cmp
mov
dec
popl
pop
imul
mov
xchg
imul
mov
andnps
pop
mov
imul
loop
push
mov
jo
test
into
push
mov
inc
dec
call
pop
xchg
mov
popa
mov
jbe
andb
push
add
fldcw
push
lock
out
and
sbb
push
xchg
and
push
inc
gs
pop
dec
aaa
mov
imul
push
dec
push
cs
test
loop
and
pop
xlat
pusha
fisttpl
gs
inc
cmpsb
lds
shll
ja
jbe
out
dec
movsl
mov
es
or
pusha
mov
jge
out
lahf
xlat
pop
xchg
ss
out
cmc
mov
cltd
sti
cmpsb
leave
movsl
mov
in
leave
pop
adc
dec
fdivr
lcall
sbb
fstp
iret
roll
in
adc
int3
xlat
and
call
xchg
push
xchg
in
lods
mov
out
xchg
xor
lcall
push
enter
mov
lret
fbstp
mov
aas
inc
dec
xchg
mov
add
js
dec
mov
mov
pushf
sub
cmc
fcomps
pop
imul
jns
sub
jp
pop
loop
push
cmp
je
xchg
push
push
fs
shl
xor
fcmovb
lcall
ljmp
test
ljmp
mov
std
mov
or
pushf
add
lret
or
mov
and
pop
fsubp
dec
lahf
inc
and
es
add
jmp
imul
xlat
or
lods
sub
mov
stos
mov
cwtl
xor
jmp
adc
out
pop
ret
rcr
aam
xchg
bnd
clc
xlat
xor
jnp
pop
repnz
mov
stos
adc
cwtl
fsub
aad
mov
lret
pop
pop
sbb
nop
push
pop
push
jnp
daa
mov
inc
inc
mov
mov
clc
aas
mov
mov
pop
jecxz
or
ja
lock
aas
mov
dec
xchg
mov
int3
xchg
adc
push
mov
je
out
and
int3
mov
sbb
pushf
bound
ja
sbbl
insl
aam
fwait
push
dec
mov
movsb
insb
mov
repnz
aas
aam
xchg
mov
jno,pn
out
mov
push
mov
add
jg
int
inc
push
data16
ss
data16
int3
sti
fdiv
cwtl
stos
cmp
int
mov
aam
mov
mov
jae
sbbl
rclb
add
aam
xchg
roll
xor
div
pop
test
testl
adc
push
pop
cmp
shl
or
les
cmpsl
dec
mov
lahf
mov
int3
jge
mov
popa
mov
jmp
rdtsc
lods
sbbl
shll
xchg
gs
ret
mov
sbb
fnstcw
xor
cmp
mov
testb
popf
sbb
dec
int3
repnz
mov
and
dec
shll
xor
and
sbb
jmp
mov
faddp
arpl
fmul
cwtl
push
fldenv
push
rorl
pop
jno
pop
int3
xchg
push
or
pop
pop
cli
inc
cld
pop
fimull
sub
add
call
mov
jecxz
add
push
rorl
loop
jae
mov
loopne
sub
in
push
cmpsl
push
and
push
xor
push
je
cmp
iret
pop
push
pop
mov
test
cmp
movsl
pop
push
cmp
push
into
lcall
cmp
mov
pusha
std
in
mov
stc
pop
xor
imul
addl
repnz
out
xor
andb
or
pop
int3
xor
or
pop
das
mul
repz
shll
data16
int
push
and
sub
cmp
in
jp
or
sbb
mov
mov
jge
and
add
xor
adc
daa
jp
mov
inc
and
aaa
xchg
lret
inc
pop
jle
jae
add
insb
sub
push
pop
cmp
pop
mov
iret
ds
test
cmp
add
stc
and
mov
pop
repnz
repnz
cmp
push
arpl
jno
add
xchg
mov
xor
cmp
push
ja
mov
lea
bound
push
js
test
sub
fidivrs
mov
pop
scas
in
lcall
push
ds
mov
inc
es
shl
jne
cmp
movsl
pop
rcrl
inc
outsl
fiadds
sub
pop
jge
cmpsl
lret
dec
aad
out
jne
les
sti
pop
dec
mov
mov
clc
fisttps
das
fistps
jbe
clc
add
cmp
xchg
dec
aas
insb
push
mov
add
push
mov
shr
xchg
jae
stos
push
push
inc
cwtl
mov
mov
mov
enterw
mov
inc
jmp
cmp
leave
stc
imul
adc
rolb
pop
add
mov
popl
mov
xlat
mov
daa
pop
cmc
sahf
cltd
jo
lahf
sarl
and
lahf
sbb
inc
sbb
xor
stc
jb
clc
and
jae
int
stc
push
mov
inc
xchg
cmp
je
lahf
pop
xchg
icebp
pop
outsb
or
mov
loopne
stc
lea
or
mov
fildl
enter
setp
push
jp
scas
fbstp
or
das
jb
jno
mov
jmp
popa
sub
xchg
cmp
sbb
jae
aaa
and
std
loop
ficoml
pop
psrad
ss
adc
push
and
sbb
adc
out
mov
int3
dec
notl
fcomps
add
add
jbe
ljmp
add
scas
mov
jae
orb
jp
dec
aam
sub
int3
pop
sbb
idivb
mov
dec
cltd
mov
and
fisubrl
inc
aas
lahf
push
mov
add
add
jmp
inc
incl
stos
xchg
dec
movsb
add
fimuls
popf
cmc
adc
mov
into
enter
cmp
aaa
pop
mov
outsl
and
fidivl
or
mov
loope
mov
or
addl
test
bound
lock
adc
fistpll
cmpsl
cs
and
cmp
test
mov
mov
adc
jge
xchg
pushf
mov
data16
test
pop
inc
adcl
loope
jecxz
jae
mov
lods
jl,pt
adc
out
aaa
lahf
push
out
subl
outsb
mov
and
sub
mov
push
push
pop
add
add
mov
pop
adc
insb
xchg
cli
test
pop
fdivrs
jmp
sbb
jle
popf
xchg
rcrl
je
aas
xor
mov
or
xlat
jno
lcall
xchg
inc
sbb
stos
ljmp
cmc
sbb
hlt
mov
popa
repnz
roll
push
jbe
cmpsl
stos
out
push
aad
sbb
in
fdivs
aas
or
movsb
adc
push
xor
xor
sbb
ljmp
cmp
cmp
jge
and
lea
repz
clc
jp
jecxz
mov
push
and
dec
sahf
inc
shr
or
push
inc
cmpsl
in
ss
mov
add
mov
add
outsb
insl
enter
cmp
dec
mov
lods
insb
imul
xchg
icebp
fnsave
je
sbb
mov
scas
iret
fsubrp
cmp
push
sub
jnp
jbe
mov
into
and
cmp
mov
jne
mov
push
popf
adc
push
hlt
mov
gs
or
inc
mov
test
les
jge
sub
cwtl
int
mov
mov
testb
add
stos
out
sub
cmp
adc
je
cmp
movsb
mov
and
xchg
ja
popa
movlps
lret
flds
mov
mov
mov
inc
add
lcall
inc
loope
mov
idivl
jp
testl
push
std
adc
loopne
adcb
pop
sub
enter
dec
sarl
popa
in
mov
leave
cltd
popa
mov
xlat
inc
lcall
out
fwait
pusha
add
and
xor
inc
cmp
cwtl
test
and
dec
rclb
adc
movsb
adc
cli
insb
add
pop
cmpsb
mov
sub
mov
inc
xorps
inc
and
outsb
dec
adc
push
sub
clc
loop
es
ret
xchg
push
sahf
cwtl
cmpsb
push
and
je
das
and
ficompl
das
aas
adc
fldenv
sbbl
repnz
jbe
mov
orl
rcrb
enter
out
cltd
mull
test
shrl
dec
xchg
push
adc
popa
aas
mov
les
xor
je
or
pop
jl
pushf
movsb
xchg
test
add
push
xchg
and
xor
sarl
lcall
or
cmp
gs
push
sub
adc
or
or
aam
aad
inc
mov
mov
lds
dec
inc
dec
cld
xlat
mov
inc
cmpsb
xchg
int
rcrl
mov
mov
cld
mov
dec
sub
les
lods
sub
push
out
sub
loop
sub
lcall
jae
lods
jge
test
lahf
mov
xlat
sti
push
icebp
jb
add
sub
mov
dec
cmp
jb
cmp
aad
aam
popa
imul
add
aam
mov
cltd
inc
imul
mov
ret
out
lret
repz
orl
shl
sub
in
aaa
aad
push
dec
out
sbbb
jl
hlt
inc
dec
xchg
outsb
jecxz
add
mov
ret
fstl
mov
xor
add
fwait
and
clc
push
sub
mov
mov
xchg
lds
mov
sub
in
je
xor
inc
out
adc
dec
movsl
jle
pop
xor
xor
pop
sbb
clc
fnsave
mov
aas
insb
cld
test
mov
fcmovnbe
jo
mov
or
or
or
mov
push
addr16
mov
jmp
lea
pusha
dec
aaa
push
outsb
cmp
push
dec
bound
jbe
sti
lret
or
icebp
sbb
xor
xor
call
leave
lods
or
shlb
jg
push
cmp
adc
or
jno
cmp
in
add
sub
fnstsw
pop
xor
aas
xor
mov
xchg
jne
lret
into
pop
scas
loopne
mov
insb
cmp
mov
out
and
push
frstor
mov
sub
xor
gs
lret
xor
jge
fldcw
addr16
push
cmp
test
paddb
push
pop
pop
test
cmpsl
mov
bnd
test
leave
xor
adc
jge
sahf
stc
out
repz
std
scas
pushw
enter
sbb
sbb
and
mov
and
lock
ja
mov
cmp
gs
xchg
adcb
fisttpl
pusha
jb
push
test
js
pop
push
inc
inc
pop
idivb
in
dec
rol
pop
mov
je
cltd
xor
dec
or
mov
cmp
repnz
fnstenv
and
cmpsb
imul
test
cmc
inc
stc
cli
mov
dec
jle
jg
add
mov
inc
insb
out
mov
movsl
fcompl
add
inc
xor
fs
divl
sti
adc
shlb
cld
ljmp
out
fiaddl
out
xchg
inc
adc
test
mov
jne
rcrl
aaa
fcmovnb
scas
lods
sarl
jo
hlt
cmp
ljmp
inc
sbb
cmpsl
imul
xor
push
shlb
je
in
add
push
jno
sbb
icebp
mov
js
gs
hlt
mov
lods
fimuls
out
sub
nop
shlb
push
xor
or
enter
xchg
mov
lret
mov
jae
fisubs
in
xor
idivl
fs
rorl
dec
jno
xchg
xor
cmc
pop
outsl
lods
call
add
lock
push
mov
xchg
cmp
iret
movsb
dec
arpl
lods
mov
xchg
push
das
movb
xor
fistps
insw
enter
aad
jecxz
dec
mov
mov
jl
pop
push
dec
fcmovnb
cmpsb
ret
les
mov
icebp
mov
insl
cmp
mov
in
mov
cmp
jl
jns
jecxz
aas
dec
in
push
dec
rolb
xor
jae
or
dec
stos
mov
stc
ljmp
ret
in
pop
je
and
push
or
jl
push
pop
mov
andb
jecxz
push
sub
xor
inc
test
xor
test
les
ds
loop
sbb
enter
popa
faddp
xchg
sub
push
aaa
jns
js
loopne
and
push
jae
test
lods
sbb
cltd
rclb
push
aad
mov
or
test
mov
out
icebp
inc
mov
mov
xor
scas
ss
call
popa
pushf
lock
cmp
rcrb
in
and
xor
mov
fisubrs
jnp
jmp
mov
popf
cli
fstl
lock
push
dec
inc
jno
sbb
popa
cmp
push
add
hlt
cltd
cmpsl
add
mov
adc
subb
pop
jg
dec
test
stc
cmpsb
sub
outsl
xor
dec
lcall
dec
xor
dec
outsb
jb
sbb
lds
adc
hlt
int3
insl
push
mov
fldenv
inc
dec
adc
sbb
xchg
sbbw
arpl
repz
or
cmp
pop
cmp
xchg
cmp
call
xlat
int3
jo
dec
dec
outsb
sub
loope
fistl
fldl
or
hlt
jl
and
orb
jle
jns
adc
xchg
fsubs
enter
mov
jle
cs
push
xor
test
push
and
dec
je
in
xchg
inc
sub
rorl
imul
repnz
divl
dec
inc
lcall
cmpb
cmp
lods
stos
stc
outsb
add
xor
push
jnp
fdivrs
js
sbb
mov
add
push
stos
imul
sbb
popf
jnp
ror
cltd
out
push
xor
sub
push
jecxz
mov
iret
pandn
ds
dec
sub
faddl
xchg
movb
mov
jnp
push
jns
in
xchg
popa
jns
pop
add
cmp
adc
mov
lret
decl
loopne
jae
mov
ss
nop
mov
mov
xchg
ss
mov
rorl
test
ja
pop
xchg
iret
cs
repnz
jle
leave
inc
cwtl
dec
mov
ljmp
jg
ret
ljmp
insb
mov
xchg
dec
fldcw
xor
cwtl
dec
or
jnp
push
pop
out
dec
leave
mov
cmp
addb
fnstenv
inc
in
fs
xor
adc
fbstp
sbb
test
ret
leave
adc
int3
fcomip
ljmp
and
sub
arpl
lcall
lahf
cmp
lea
xchg
call
leave
jmp
cmp
sbb
mov
cmp
inc
add
push
jnp
jg
inc
mov
mov
loope
es
add
inc
xor
mov
sti
mov
mov
addl
lretw
inc
popf
addr16
aam
shrb
fnstcw
les
inc
pop
bound
fdivrs
addr16
xchg
mov
mov
cmp
jl
sub
addr16
jae
jne
and
cwtl
mov
mov
sub
imul
lock
test
sub
and
daa
stc
pop
or
test
jnp
add
xor
sub
push
and
stos
xor
rclb
fxch
jo
sbb
rcr
rolb
ret
dec
fld
je
ret
test
rcr
adc
std
pusha
gs
aas
addr16
dec
leave
cmpsb
out
mov
mov
cmpsl
test
frstor
test
fldl
pop
mov
or
push
out
and
mov
cwtl
int3
cli
cmpb
push
testl
pop
push
js
sbb
ret
sub
daa
ret
in
mov
mov
movsl
xchg
inc
nop
mov
cs
int
int3
mov
jl
jnp
jl
loopne
je
cmc
push
subb
bound
or
lret
jecxz
es
test
mov
push
jp
sbb
mov
jecxz
jbe
out
xchg
leave
sbb
mov
hlt
add
in
std
or
mov
push
insb
orb
std
ret
push
mov
mov
jle
push
push
cld
cltd
sub
cltd
lcall
shl
aam
cmp
sub
mov
jns
nop
cs
sbb
ret
jb
add
cld
divl
adc
xchg
jg
dec
movsl
jns
dec
xchg
pop
ds
in
aad
subb
mov
pop
cmp
jecxz
adc
pop
dec
les
mov
xlat
or
notl
sahf
js
pusha
xchg
rcr
jle
test
pop
insb
adc
xor
mov
lds
add
scas
loop
pop
push
mov
cld
repnz
xor
mov
xor
push
lret
pushf
xchg
push
fsubrs
ficoml
mov
imul
int
jno
sub
fdivrl
mov
scas
fistps
mov
in
push
pop
adc
pop
rcrb
push
lcall
sbb
mov
cltd
fs
scas
dec
es
data16
insl
xorb
mov
daa
testb
push
lcall
mov
mov
jg
and
sbb
pushf
ficompl
xchg
cs
xchg
mov
xor
jle
dec
mov
popf
mov
scas
mov
outsb
into
push
arpl
jmp
gs
icebp
xor
pusha
fisttps
jno
inc
xor
in
xor
gs
or
mov
mov
imul
sbbb
pop
aam
push
jo
push
ret
imul
mov
adc
mov
mov
dec
cli
xchg
pop
dec
sub
adc
sti
stos
mov
leave
loopne
fistl
jb
mov
inc
mov
sbbb
enter
lcall
xchg
jecxz
cmpsb
adc
mov
mov
push
mov
jge
into
push
fwait
push
sbb
cmp
dec
hlt
scas
mov
out
negl
dec
nop
dec
into
adc
jl
movsl
bound
sbb
or
push
lea
imul
xchg
pop
lds
push
dec
xorb
loope
pop
in
mov
adc
cmp
xor
or
std
inc
add
mov
scas
in
mov
lods
icebp
out
pop
sbb
jg
jno
jo
lods
lods
mov
aas
add
icebp
ret
xchg
cmp
dec
mov
mov
aam
pop
push
or
pushf
xchg
mov
mov
cmp
orl
enter
scas
mov
ja
stos
dec
popf
adc
inc
and
arpl
mov
push
int3
cmp
in
push
std
mov
inc
push
xor
aad
repz
mov
push
inc
add
aad
stc
adc
fcoms
and
movsl
add
loop
pop
cmp
mov
xchg
out
mov
sbb
adc
outsl
scas
or
mov
pop
cmpsl
pop
jp
fcomps
lahf
push
jo
add
scas
outsb
nop
decl
mull
pop
push
xchg
mov
pop
int3
dec
loope
lcall
or
inc
out
push
js
popa
sbb
pusha
mov
outsl
mov
mov
pop
outsl
repnz
test
jmp
inc
andb
sbb
cmp
push
repz
cmp
mov
cmp
ffree
push
inc
arpl
and
jo
sub
adc
pop
orb
int
sub
mov
sub
shll
daa
cmp
fldt
loop
not
addr16
pop
cmp
scas
arpl
inc
dec
ret
mov
sti
pop
pusha
jnp
add
lret
add
xlat
push
or
xlat
aas
cltd
mov
xor
lods
mov
pop
daa
daa
pop
imul
sbb
push
shlb
jl
and
insb
into
fchs
xchg
clc
mov
das
pop
dec
cmp
daa
push
out
mov
mov
mov
jnp
mov
mov
and
mov
mov
xchg
loop
lods
repnz
push
repz
mov
insl
addr16
pop
rclb
lcall
rclb
mov
clc
ljmp
mov
in
inc
pop
fwait
rcll
aad
testb
or
pusha
xchg
outsb
or
icebp
ror
or
mov
fdivs
adc
jb
iret
jge
xchg
lea
and
aas
js
gs
cmp
xorl
cmp
iret
out
mov
xchg
data16
mov
cmp
or
fwait
in
sbb
adc
pop
sbb
mov
shlb
or
bound
into
jnp
leave
inc
jle
pusha
aas
xor
mov
pop
aas
add
mov
adc
sbb
arpl
and
js
scas
daa
lahf
xor
xchg
bswap
dec
jnp
or
mov
pop
cmp
push
xlat
scas
xor
fs
filds
hlt
loopne
lods
push
pop
push
fldt
and
pop
sub
cwtl
mul
jo
push
pop
outsb
in
int3
and
mov
mov
fists
fadds
and
scas
in
imul
xchg
sbb
out
ljmp
jne
jl
sub
xchg
pop
inc
dec
jns
ret
pop
gs
cmc
sbb
xchg
cmp
pop
jo
mov
or
xor
aaa
inc
push
jne
cld
push
jb
xlat
fimull
hlt
push
or
sbb
push
sub
jg
stos
outsb
cld
movsb
lds
into
lods
jbe
jl
or
or
mov
mov
or
or
mov
loop
mov
lock
jp
sbb
xchg
das
xor
xor
lahf
add
push
rolb
lret
mov
fwait
cmp
cmp
sub
jl
mov
gs
in
std
mov
mov
or
push
hlt
xor
jl
sbb
mov
aaa
lods
xchg
mov
or
lret
cli
test
and
pop
fwait
cmpsb
add
fisubrs
sub
dec
sti
inc
fwait
push
xchg
lods
mov
adc
and
gs
jbe
bound
icebp
lcall
mov
js
aas
mov
das
cmpsl
or
sbb
mov
pop
jno
push
xchg
xchg
pushf
mov
cwtl
cld
es
pop
xlat
sub
lea
adc
lret
dec
sahf
shr
jp
mov
daa
fidivrs
pop
shr
cmp
xchg
stc
mov
outsb
call
mov
dec
imul
adc
jnp
push
sub
lock
fiaddl
jo
cmpsb
sub
shrl
decl
imul
xchg
fildll
ret
xor
fs
addr16
xor
cmp
fsubl
push
movsb
shlb
fsubs
or
pop
movsb
mov
addl
add
add
add
cmp
xchg
mov
hlt
mov
stos
popa
into
outsl
cmp
and
jp
lea
test
sub
data16
push
and
pop
xchg
movsb
or
fs
daa
xor
jb
dec
push
rorl
sti
sub
fwait
push
lret
inc
dec
lea
jecxz
mov
mov
push
mov
push
dec
adc
mov
aad
push
fwait
cmp
mov
pop
mov
xchg
and
pop
gs
cmc
out
lret
into
and
test
notb
sbb
ljmp
fsubr
pushf
cmc
lods
test
push
and
iret
push
nop
inc
pusha
js
sub
nop
adc
icebp
lcall
ja
clc
add
fninit
mov
in
xor
iretw
and
imul
cmp
dec
lret
popa
aas
pop
out
xor
fucomp
and
pop
aam
inc
sahf
inc
add
andl
add
sub
jo
jle
sub
jg
mov
dec
jl
stc
daa
jbe
mov
dec
jecxz
mov
mov
test
ja
mov
fsts
mov
enter
sbb
dec
pop
xchg
ja
jno
sahf
xor
pop
imulb
xor
lret
or
inc
gs
jne
push
pop
inc
popa
js
rorl
ret
adc
xchg
jmp
rorb
jg
pusha
inc
inc
mov
roll
and
leave
cmp
xor
stos
mov
push
icebp
dec
push
pop
cwtl
test
adc
adc
fisttpl
inc
pop
cmp
or
icebp
mov
scas
repz
jo
hlt
je
sahf
sbb
mov
aad
dec
inc
fmul
mov
fidivs
mov
ss
fs
stos
ret
js
or
ja
xchg
mov
js
out
sbb
mov
sub
add
inc
cmp
out
adc
fsubl
sbb
push
loop
pop
notl
sub
inc
mov
aas
add
icebp
test
cmp
repz
jge
xchg
mov
adc
cltd
inc
adc
addl
cmp
fstpl
sahf
addr16
mov
inc
mov
fs
and
les
pop
and
int
sbb
cld
xchg
imul
shrb
jae
adc
out
andb
in
push
xchg
add
aam
cmp
dec
push
xlat
pop
outsl
test
loop
sahf
or
repz
out
cli
xor
jg
cmpsb
mov
fcoms
mov
shrb
xchg
ss
in
mov
cltd
cld
mov
shlb
ds
adc
sbbl
call
hlt
cmp
xchg
cs
mov
pushf
cli
xchg
dec
into
lds
stos
lahf
and
icebp
push
cmp
adc
lods
sub
iret
outsl
inc
fs
out
sbb
xchg
dec
inc
inc
fprem
insl
sbb
mov
gs
leave
fnstsw
aas
pop
inc
sbb
mov
std
ficomps
xchg
adc
add
das
mov
outsb
shlb
arpl
dec
daa
ret
xchg
loopne
orb
jl
int
out
lcall
jmp
inc
add
and
sbb
push
lea
mov
xor
push
push
addb
xchg
and
pop
mov
jno
mov
pop
inc
incl
sti
cli
mov
xchg
lret
fwait
xchg
das
sbb
addr16
test
scas
addr16
xchg
mov
lods
testb
push
add
mov
imul
jmp
jne
js
in
inc
das
xor
outsl
in
xchg
cmpsb
add
nop
movsb
dec
or
jne
inc
in
push
pop
xchg
mov
jae
and
nop
cmpsl
jno
xchg
ja
and
mov
or
dec
jmp
icebp
stos
addr16
insl
dec
add
insl
push
outsl
pop
cmpsb
mov
push
arpl
es
out
outsl
sbb
icebp
call
sub
aam
mov
leave
push
mov
lret
mov
js
push
push
in
mov
xor
dec
lods
xchg
jl
jl
shll
jnp
aaa
aad
stos
push
std
clc
mov
xchg
push
push
fisubl
cwtl
test
mov
aas
fidivrl
push
mov
out
cld
cmp
cs
and
mov
dec
pusha
loopne
and
jae
ljmp
xor
jg
pop
mov
or
std
or
and
lds
repz
out
push
out
icebp
pop
lret
mov
push
lock
or
push
jmp
mov
and
out
and
xorb
cltd
add
fmull
or
cmp
scas
pop
adc
cwtl
mov
sub
scas
jno
test
xor
aaa
add
ljmp
mov
test
mov
out
cmp
iret
pop
xlat
stos
push
inc
lret
jae
shll
pop
pop
jne
fs
push
push
arpl
inc
in
mov
add
lea
pop
cmp
lods
sbb
dec
jecxz
xor
fwait
imul
ja
xor
mov
push
lods
imul
cs
mov
call
loopne
das
mov
lods
out
bnd
dec
outsl
xchg
sub
jl
inc
outsl
fs
or
jns
xchg
stos
mov
pushf
xor
mov
push
fidivs
xchg
sbb
into
fwait
addr16
cltd
outsb
divb
mov
rorl
repnz
sub
xchg
push
ret
mov
jbe
mov
push
popf
or
pop
xchg
mov
repnz
in
shlb
movsb
and
test
lcall
fs
loope
fdivs
fldcw
lcall
cwtl
mov
mov
rorb
shrb
lret
jmp
fdivs
sub
lcall
inc
movsb
popa
aas
or
cmp
and
enter
iret
or
mov
mov
dec
mov
xor
sahf
hlt
movsb
in
adc
add
add
cwtl
loopne
lods
or
out
mov
cmp
cmp
xchg
cmp
lds
or
sahf
repz
sub
insl
cmp
movsl
sub
sub
push
and
xlat
xchg
movsb
or
lock
add
cmpsb
xor
orb
int3
mov
mov
sar
and
sar
pop
or
dec
sti
je
bound
jp
cmc
sub
lds
sub
or
int3
out
xorb
mov
add
idivl
notb
adcl
dec
sub
add
jl
mov
out
xor
cmp
into
xchg
or
arpl
xlat
mov
mov
dec
mov
add
add
arpl
lcall
cs
and
int
fs
call
xor
inc
test
and
cmp
xor
rolb
mov
movsb
mov
pop
lds
call
lret
and
in
in
push
sbb
xchg
sbb
push
dec
mull
roll
in
ret
cmpsl
loope
lret
shll
hlt
stc
mov
pop
cmp
in
mov
xor
sub
pushf
pop
pusha
sbb
in
out
xor
fsubs
out
out
mov
insl
aam
pop
cmpsl
loopne
loop
and
int
dec
or
test
lahf
dec
and
icebp
push
and
inc
inc
jae
aaa
inc
mov
arpl
out
cld
ds
pop
xor
loope
arpl
sub
mul
int3
mov
cmp
xchg
rcrl
sti
lock
xchg
xorb
shrb
orb
out
test
push
and
out
mov
add
inc
ficompl
push
and
fs
in
sub
lret
enter
mov
hlt
scas
and
mov
mov
lods
mov
pop
testl
je,pt
out
jmp
xlat
leave
loope
fcompl
rorl
or
ja
jmp
ja
mov
push
sub
imul
addl
daa
gs
insb
shll
leave
and
or
enter
push
xchg
mov
pusha
or
out
imul
push
sub
inc
add
out
jecxz
jmp
jae
dec
mov
sbb
cmc
lods
gs
icebp
xchg
sbb
lahf
or
subb
test
push
aam
mov
xor
subb
stos
movsl
fwait
dec
dec
mov
mov
fidivs
adc
lock
js
mov
xchg
repnz
dec
jb
lock
ljmp
shll
imul
xor
add
add
mov
icebp
xor
cli
mov
adc
jae
xchg
arpl
and
ror
sub
gs
xor
lea
jbe
cmp
cltd
int3
sbb
and
sbb
lock
jb
sbb
arpl
jns
jae
or
push
jg
xorb
mov
dec
out
jmp
mov
sbb
out
loopne
insl
loope
sti
jne
jo
insl
mov
int3
pop
mov
lret
idivl
das
test
mov
adc
andl
jb
adc
adc
cli
fcomps
push
push
lds
lods
lods
repz
mov
xchg
inc
sbb
imulb
dec
adc
out
cmc
fwait
loope
mov
sbb
adc
shr
call
jnp
pop
daa
xchg
add
ret
xor
lcall
imul
pop
jmp
xchg
aaa
stc
xchg
sbb
inc
xor
aad
jmp
add
adc
cmp
adcb
repz
or
and
out
cmp
movl
xchg
out
lods
lret
mov
jecxz
in
cmp
lahf
aas
inc
pop
mov
int3
pop
cmpsl
inc
cltd
movb
mov
add
repz
int3
push
or
negb
lds
outsb
in
jecxz
cmp
jmp
adc
addr16
ss
ret
aas
pop
std
js
mov
mov
sbb
add
pusha
testl
xchg
sbb
into
cmp
cltd
dec
int
mov
loopne
faddl
scas
mov
dec
pusha
adc
jge
mov
dec
pop
or
data16
add
mov
call
mov
orb
mov
icebp
xor
adc
loop
int3
adc
rcrl
dec
mov
mov
popf
mov
mul
js
or
dec
jbe
jp
outsl
in
jno
mov
or
cmp
jle
mov
sub
jne
pop
scas
ficoml
dec
cli
ja
pop
and
insl
mov
lods
pop
cmp
cwtl
add
adc
adc
inc
std
popf
xchg
jno
enter
mov
mov
push
push
lret
sti
mov
mov
pop
pop
test
fs
dec
push
xor
int3
ljmp
fwait
enter
sub
and
notl
or
pop
aaa
ljmp
ret
and
adc
loop
shl
test
adc
popl
shrl
rclb
pop
sbb
inc
daa
std
mov
jmp
pop
or
cmp
add
jmp
loope
add
inc
cmp
daa
dec
pop
or
mov
cmc
mov
out
sbb
xchg
push
bound
std
call
sarb
pop
popa
repnz
push
shll
ret
ds
ja
imul
repnz
sbb
nop
aaa
push
adc
xchg
mov
mov
mov
push
lcall
leave
outsb
xchg
outsb
movsl
mov
xchg
subb
jno
je
lods
test
adcl
loope
cmpl
rolb
jmp
stos
sbb
xchg
call
and
sub
fsts
mov
jae,pn
adcl
aaa
aaa
inc
incb
aaa
sub
cmp
fdivrs
fildl
movsl
or
mov
adc
test
lea
and
push
cltd
stc
dec
dec
jo
pop
push
loopne
push
xor
fnstcw
jle
mov
sbb
mov
data16
inc
icebp
inc
lcall
inc
dec
add
sub
loope
aam
addb
push
pusha
add
sahf
ss
lret
repnz
aas
mov
repz
sub
mov
sbb
push
and
add
cmpsb
fwait
pop
orl
xchg
xchg
out
daa
test
dec
fmul
sbb
push
decb
into
cltd
es
cli
mov
in
movsl
repnz
mov
xlat
je
xor
xchg
jge
rcrl
adcl
mov
push
std
enter
xlat
lods
test
add
movsb
idiv
gs
jae
mov
xchg
mov
aam
cs
shll
push
call
cmpsb
out
pop
dec
push
pop
ljmp
xchg
xchg
dec
aaa
pop
push
lds
and
xchg
mov
pop
xor
sub
add
push
xchg
repz
ja
in
pop
add
jecxz
inc
adc
jmp
sub
cld
dec
lret
inc
out
lahf
sub
ret
repnz
stos
mov
pop
cmp
popl
sbb
inc
nop
jno
adc
cs
jmp
jnp
mov
imul
adc
dec
test
shr
jno
add
mov
xor
xchg
je
mov
lcall
cmp
add
adc
ss
nop
xchg
dec
call
dec
inc
sub
adc
leave
pushl
hlt
mov
mov
add
ret
jne
xchg
mov
and
and
dec
pushf
fcompl
inc
inc
mov
mov
xchg
sub
daa
movsb
add
in
xchg
jns
adc
in
pop
inc
xor
fisttpl
fs
andb
adc
xor
sti
adc
cmp
xchg
cli
popa
or
lcall
push
dec
inc
shrl
adc
or
cmp
mov
mov
in
add
push
mov
jmp
mov
mov
pop
scas
xchg
stc
out
dec
ja
loop
cwtl
xor
test
clc
dec
or
or
enter
outsb
sub
add
subps
dec
popf
loop
push
aas
or
push
jnp
or
les
lret
push
out
ret
imul
arpl
or
sbb
inc
inc
push
and
adc
xor
cwtl
jmp
push
cmp
jbe
negb
add
xchg
and
dec
and
add
sbb
into
cltd
add
clc
jle
push
add
int
incl
sbb
ss
pusha
sub
xchg
ret
add
mov
insb
lock
movsb
fsts
cmp
call
pop
xchg
xchg
push
jbe
jl
mov
mov
cmp
in
insl
nop
iret
call
cmpsl
cltd
test
aaa
or
pop
pop
cmc
lcall
jae
xchg
icebp
out
popf
pop
loopne
adc
push
aam
and
mov
push
call
js
push
inc
addr16
repnz
mov
in
mov
lods
cmp
inc
jle
xchg
inc
outsb
inc
jns
test
sub
aas
dec
int3
mov
sub
ja
fstpl
push
loope
cmp
shr
daa
mov
repnz
cmp
repnz
adc
inc
or
repnz
jle
bnd
xchg
cmp
js
jp
push
cwtl
sub
in
dec
jg
dec
data16
sbb
outsb
lods
mov
call
daa
filds
loopne
jno
jecxz
aas
sub
lds
ds
in
pusha
loopne
mov
daa
pushf
inc
punpckhbw
je
pusha
ljmp
push
in
push
cli
lods
mov
xchg
lret
idiv
into
inc
xchg
pop
cld
sub
mov
dec
arpl
rcrl
sub
mov
inc
add
loopne
sub
jg
iret
aad
testb
or
jmp
iret
cmpsl
fcoms
popa
jle
mov
in
fscale
cmp
loope
mov
lock
mov
enter
filds
test
mov
push
inc
and
roll
add
add
inc
jmp
pop
xor
psubsw
loop
push
data16
cmpl
scas
cs
ret
xlat
fisubs
add
adc
xor
xchg
sbb
jmp
mov
sbb
lods
jbe
sub
mov
outsb
fldl
pop
fwait
push
aad
imul
mov
popa
fldl
out
xor
adcl
shll
outsl
cld
mov
dec
pop
lock
test
mov
js
aaa
jo
and
cltd
sub
call
arpl
test
xchg
hlt
inc
mov
inc
sarl
aam
mov
into
xchg
data16
cmpsl
and
imul
jne
dec
mov
fmull
sub
call
jae
fists
ret
fs
and
stos
into
rcrb
js
pusha
stos
faddl
push
or
push
fcoms
mov
xor
loop
leave
lock
and
lods
cmp
int3
lock
cmpsb
push
lahf
inc
andb
test
mov
scas
lret
fisubrs
pop
pop
mov
pushf
fnstcw
popf
xor
dec
out
xchg
cmp
mov
sub
into
mov
data16
imul
ds
hlt
jmp
je
jb
and
push
pop
movsl
cmp
inc
arpl
or
pop
xor
pop
or
je
call
scas
xchg
jno
mov
or
pop
inc
dec
outsl
xchg
cli
and
sub
inc
mov
pop
je
mov
inc
pushf
in
mov
push
stos
mov
leave
call
cltd
pop
sub
nop
sbb
fldl
push
fdivrs
mov
and
shrl
aam
inc
mov
test
scas
adc
repz
and
xchg
mov
je
push
jp
xchg
mov
mov
enter
pop
repz
lret
sub
push
fisttpll
add
inc
mov
adc
sets
cwtl
pusha
mov
int3
jmp
or
push
aad
jns
sub
aaa
xchg
sbb
test
into
add
xlat
lods
int
fs
scas
cmpsl
cmpsb
pop
and
sub
pushf
in
mov
mov
inc
xor
mov
out
scas
lods
movsl
in
sub
iret
adc
into
mov
ja
stos
movsl
lods
jecxz
jge
stos
add
lds
or
pop
lods
int3
subl
call
pinsrw
add
stos
lea
not
loope
adc
jecxz
xchg
sub
sub
sti
push
or
test
mov
sbb
cmp
dec
xlat
jge
repz
cmc
int
fwait
sub
andb
jb
jno
addb
cltd
adc
push
jl
fdivs
inc
stos
cmpsb
out
cmpb
sub
outsl
adc
cmp
sbbl
add
adc
inc
mov
adc
cs
bound
add
push
dec
lret
and
in
or
cs
iret
push
ret
xchg
out
cmp
add
std
das
adc
cli
mov
xchg
daa
xchg
dec
push
cwtl
mov
add
pop
mov
mov
pop
ret
add
push
jl
daa
mov
inc
xorl
mov
cmp
sub
jg
push
sbb
dec
cmp
jl
lods
cli
aaa
iret
and
xchg
push
sbbl
andb
mov
add
cmp
pushf
les
xchg
stos
dec
rclb
call
js
out
inc
pop
outsl
sahf
push
dec
fwait
hlt
fwait
push
pusha
in
ret
test
inc
mov
cs
push
aaa
fwait
mov
push
cmp
test
call
cs
lahf
loopne
repz
fbstp
or
push
mov
xor
sbb
jp
sub
mov
int
adc
aaa
arpl
out
out
mov
insb
xchg
lcall
and
or
stc
dec
inc
dec
insl
lods
sbb
or
pop
leave
shrl
xor
out
or
stos
and
loop
adc
adc
or
jmp
jl
dec
cmpsb
dec
movsl
inc
mov
dec
je
sub
pop
dec
in
lods
sub
ljmp
fst
adcb
add
sti
out
dec
xchg
sahf
jb
mov
popf
les
inc
das
pushf
mov
iret
sub
jecxz
out
in
data16
ja
pop
pop
mov
mov
add
pushf
lret
add
stos
ds
dec
fstps
test
orl
xor
ds
repz
dec
psubq
mov
cmp
mulb
pusha
insb
push
lahf
mov
mov
loope
mov
je
je
pop
adc
or
lret
gs
ds
mov
push
loop
inc
jo
mov
insl
cmp
mov
cmp
in
call
xchg
jmp
xchg
cmp
es
jae
push
dec
push
or
fcomps
jo
mov
inc
insl
scas
pop
jnp
inc
adc
std
in
lock
cmp
mov
add
movsl
lock
loope
test
dec
mov
and
sarb
lahf
movsb
sbb
scas
cmp
xchg
xchg
inc
shrb
in
cmpsl
push
imull
pop
popf
outsl
lret
hlt
xchg
shlb
pop
lods
jne
lock
movsb
pop
das
pop
sub
inc
decl
lock
mov
mov
add
dec
pop
subb
repz
call
push
pop
add
faddl
nop
insb
push
sub
and
mov
je
adc
stc
xor
dec
stc
nop
mov
cmpsl
add
pop
sbb
in
je
or
std
jge
andl
sub
mov
xchg
ds
jg
or
add
and
xlat
fistps
sarl
mov
lea
jnp
inc
jle
sbb
xor
test
mov
push
ds
pop
add
adc
and
bound
mov
lock
push
dec
adc
stc
sbb
sbb
jb
clc
inc
sub
jmp
dec
dec
loop
xchg
sbb
outsl
ljmp
push
jbe
mov
rolb
in
js
aad
xor
add
lock
ja
jnp
pop
pusha
xchg
cmc
mov
mov
sar
fstpl
lods
repz
scas
and
mov
cmp
pop
sbb
jp
dec
dec
lds
into
dec
movsl
and
inc
pop
dec
shrb
es
lahf
in
test
incb
xchg
int3
pop
jl
out
loopne
lahf
mov
push
adc
pop
jne
cs
mov
xor
sbb
push
mov
push
adc
jle
xchg
push
jmp
mov
mov
jmp
sarb
iret
in
out
das
push
int
mov
and
add
bound
sub
add
mov
inc
jae
scas
stos
fdiv
js
xor
or
ror
sub
push
pop
cmp
mov
xchg
aam
sub
push
jge,pn
sub
and
xchg
sarb
jmp
popw
lahf
sub
push
push
pop
call
jg
jge
fsubr
cmp
and
adc
imul
xlat
cmpsb
cmp
cltd
xchg
scas
and
adc
bound
mov
mov
xor
test
mov
lahf
jae
stos
or
les
and
inc
imul
add
test
data16
jge
jb
cwtl
mov
inc
sbb
mov
xor
incb
mov
and
lcall
and
jmp
sub
fstp
mov
lock
push
insb
sbb
pushf
lret
jmp
shrb
arpl
sub
push
mov
sub
outsb
xor
sub
jmp
stos
or
xchg
lea
mov
pop
fidivrs
push
es
push
adc
iret
scas
dec
xchg
xchg
fiaddl
mov
fisttpll
mov
enter
xor
lret
cs
mov
adcl
iret
sub
jbe
std
cmp
push
in
or
mov
push
mov
or
or
mov
adc
outsl
js
mov
and
jmp
jp
nop
sahf
dec
mov
mov
xchg
and
test
mov
into
icebp
daa
push
les
movsl
xorl
lahf
xchg
fsubs
mov
pop
ficomps
mov
inc
xchg
enter
jge
xor
cmpsl
mov
and
jnp
mov
outsl
in
push
iret
jmp
push
sub
adc
cwtl
testb
lret
dec
and
push
and
xorl
mov
aad
iret
pusha
fimuls
xchg
push
psraw
out
jle
mov
sti
andb
movsb
into
int
jecxz
xchg
je
cltd
add
shl
fldenv
cmp
sbb
test
adc
insb
cli
mov
push
je
mov
stos
xor
iret
loope
scas
insb
cmp
pushf
cmpsl
fisttpll
jne
in
fcomp
nop
gs
mov
mov
rolb
lret
push
jb
std
mov
mov
mov
pusha
push
jge
movsl
lahf
stos
jae
stc
nop
and
aam
sub
das
jo
fmulp
xchg
mov
jnp
out
in
pop
cld
cmpsl
fisubs
inc
sbb
pop
pop
mov
aas
jp
in
and
adc
addr16
insl
push
push
out
push
jns
loop
xor
bound
popa
jo
daa
andnps
ja
inc
cmp
mov
es
loopne
cld
aas
push
dec
mov
inc
mov
pop
enter
out
testl
mov
cmp
mov
dec
test
and
ljmp
sub
test
cmc
test
pop
add
sbb
cmp
or
mov
xor
add
aas
test
repz
xchg
sarb
out
xchg
scas
fcoms
sbb
movsl
push
xchg
inc
insl
test
pop
lock
mov
push
add
cs
add
ja
out
popf
mov
fidivs
inc
ret
jmp
cmp
mov
outsl
wrmsr
stos
push
xor
lock
and
cmc
mov
mov
test
jle
in
pop
out
popf
stc
sub
mov
clc
pop
mov
pusha
idivb
xor
stos
test
pop
sub
es
mov
ja
adc
xchg
fwait
aam
mov
test
inc
xor
cli
inc
push
mov
rol
sarb
mov
mov
and
sti
insl
sub
jle
push
pop
jbe
push
out
xor
repnz
jno
bnd
aaa
lds
sbb
push
pop
retw
leave
lods
sar
lret
sbb
mov
mov
inc
mov
and
lret
mov
xchg
add
pop
lods
cmpsl
pop
ror
or
push
scas
dec
movsl
pop
cli
and
xlat
nop
or
cs
les
push
dec
out
mov
movsl
add
pop
add
push
xor
pusha
jle
ret
xlat
mov
lret
push
inc
dec
mov
push
pushf
inc
or
cld
pushf
iret
jge
jb
sub
xchg
jg
adc
jno
lock
fucomp
pop
inc
pop
outsl
incl
sub
adc
icebp
out
ja
mov
inc
lcall
push
mov
sahf
lods
into
sub
pop
mov
jo
add
mov
test
call
xor
or
jge
mov
or
jnp
inc
jbe
mov
jns
xchg
push
push
jnp
lds
std
push
pop
sbb
xor
or
xor
and
adc
jne
xchg
push
loop
xchg
addr16
ljmp
rorl
adc
sbb
in
ret
and
dec
mov
add
jns
xchg
roll
popf
and
mov
test
fs
push
not
xor
js
mov
mov
pop
jo
or
jecxz
sub
rorb
retw
leave
or
shll
add
sub
enter
cltd
fisubs
push
popa
icebp
push
adc
mov
fists
push
jne
fsts
add
jns
orb
sbb
mov
int
jmp
enter
lea
stos
movsl
loop
hlt
pop
enter
cltd
aam
mov
xor
movsl
dec
push
mov
orb
add
sbb
out
mov
add
ret
xlat
outsb
sub
xchg
mov
notl
inc
addl
jl
int
clc
icebp
jg
adc
imul
adc
mov
shlb
cmp
mov
dec
jne
inc
arpl
add
pop
ja
inc
aam
sarl
aas
cmp
cwtl
dec
int3
and
xchg
inc
ja
sti
das
and
out
push
jl
jmp
or
jne
pop
int3
rcl
cmpsl
rclb
sub
sub
cwtl
sbb
mov
cmp
lahf
mov
fldenv
cmp
dec
xchg
aas
inc
outsb
in
ja
jno
push
push
dec
sbb
imul
pushf
mov
jl
lods
ja
xor
or
sbb
sbb
fiadds
xor
pop
or
push
rcr
sbbb
scas
addr16
data16
sbb
dec
mov
lcall
sub
push
jo
sub
xor
fisttpll
mov
movsb
xor
xchg
pusha
test
arpl
aaa
cmp
je
pop
mov
push
add
mov
xor
shlb
dec
jnp
adc
ja
testb
push
adc
mov
test
jge
fisttpl
lock
aas
cmp
rcrb
rol
ds
icebp
daa
dec
dec
cmp
or
mov
push
test
adc
mov
push
mov
out
scas
mov
fs
nop
sub
fistl
ret
test
idivl
sub
test
xor
in
ss
subl
insb
fmull
cmp
jl
and
dec
ret
popf
cld
pop
imul
or
int3
mov
sub
jge
and
push
add
in
push
cltd
cld
adc
pop
add
lcall
push
push
ror
pop
call
push
shlb
movsb
jl
repz
fistpl
stos
sbb
mov
add
mov
xchg
push
inc
fisttps
sub
jo
mov
jnp
pop
addr16
cltd
fistpl
lret
add
mov
insl
test
cmovbe
aam
add
call
inc
adc
cmp
insl
cmp
mov
xorb
aaa
mov
movsb
and
xor
inc
arpl
jg
dec
dec
xchg
repnz
sub
movsb
adc
movsl
and
adc
popa
mov
jmp
or
stos
dec
je
jp
mov
xchg
jnp
add
ret
pushf
loopne
pop
push
repz
cmp
pop
out
outsl
inc
sub
push
nop
out
dec
adc
out
mov
dec
fadds
rcl
aas
out
fwait
inc
loope
push
es
dec
leave
pusha
dec
sar
pop
jle
mov
dec
insb
cs
mov
insl
dec
mov
push
cli
movsw
ret
adc
sbb
gs
bound
adc
outsb
xchg
int
mov
push
dec
mov
pop
jmp
adc
out
cmpsl
pop
push
outsl
sar
jmp
inc
repz
lods
sbb
subb
pop
sbb
xor
movsb
jne
in
inc
dec
shr
mov
shll
inc
inc
cmp
sbb
popa
sbb
lea
mov
lea
inc
or
out
jmp
cltd
or
loop
inc
sbb
lock
cmp
and
add
mov
jmp
sbb
mov
iret
cwtl
imul
adc
clc
jbe
sub
shll
sbb
push
cmp
sub
xlat
mov
jnp
jb
or
icebp
stos
hlt
enter
sbb
cmp
mov
sub
pop
pop
push
sub
sbb
js
jo
push
addr16
clc
ret
jns
add
add
adcl
sti
dec
jg
es
mov
fists
or
jecxz
lahf
testl
sbb
aam
sub
scas
test
mov
add
pop
add
sarl
aaa
mov
aad
add
out
xchg
test
or
mov
cmc
mov
lahf
aam
ret
cmpsb
cmpl
jle
leave
mov
jecxz
xchg
iret
or
inc
sub
call
jno
add
clc
data16
outsl
inc
rolb
repz
stos
ret
loop
add
inc
fnstsw
mov
add
arpl
fmuls
inc
leave
sub
imul
pop
inc
mov
scas
lock
adcl
fadd
sub
add
sub
xchg
add
rcl
in
fisubl
xorl
xadd
mov
add
lods
loopne
enter
jg
jmp
cmpsb
pop
stos
fwait
mov
addr16
jge
sub
hlt
push
fcompl
cmp
xor
push
pop
in
lret
aas
jnp
pushf
insl
mov
or
dec
inc
sbb
mov
mov
xor
mov
hlt
mov
ja
xchg
xchg
sub
pop
fidivrs
scas
les
mov
dec
popa
inc
js
nop
mov
mov
pop
jge
sub
inc
or
aaa
rorl
pusha
or
es
gs
movsb
or
add
cld
gs
push
popa
xchg
add
xchg
jl
pop
mov
push
xchg
shrb
add
push
dec
lods
adc
aaa
mov
xchg
jnp
sbb
comiss
bnd
dec
mov
and
mov
mov
sub
ret
sbb
jno
clc
cmp
xor
insb
aaa
lods
cld
aaa
push
sub
or
shl
repz
cmpsl
repz
stc
out
pop
jbe
jg
lret
data16
sub
jge
sub
xchg
jns
cmp
or
xor
sub
icebp
adc
lret
jbe
pop
xor
hlt
push
rcrl
add
add
cmp
outsb
push
stc
sub
xchg
shrb
mov
mov
cli
mov
mov
cmc
sahf
push
shl
mov
shrl
sub
or
lcall
pop
outsl
mov
inc
xor
mov
icebp
mov
mov
push
mov
dec
sub
adc
sbb
lock
divl
add
sti
idivb
cmc
int
mov
mov
arpl
test
test
mov
mov
xchg
lock
ds
push
lret
outsb
outsb
add
inc
jl
inc
negb
jp
in
ror
mov
mov
sub
in
scas
sbb
mov
xchg
or
lcall
lods
ja
enter
lret
or
xchg
repz
xor
dec
int3
fwait
add
sub
insl
les
ret
iret
mov
jb
and
adc
mov
aaa
dec
in
mov
in
inc
mov
xchg
sub
inc
jp
dec
and
ret
addb
mull
ret
inc
es
subb
xor
xchg
and
hlt
inc
gs
ja
dec
test
stos
push
dec
pop
lock
test
popf
mov
push
adc
arpl
ljmp
cltd
pop
sub
sbb
mov
cs
mov
jp
lods
lahf
sub
and
jnp
lock
outsb
sub
fmull
lahf
pop
sbb
ds
lds
jge
stc
cmpsl
in
scas
dec
xchg
mov
mov
mov
rorb
cs
daa
iret
imul
jge
outsl
outsb
in
xor
out
xchg
mov
mov
repnz
mov
jp
xchg
dec
sti
pusha
sub
mov
mov
sub
adc
jge
push
insb
mov
and
pop
aas
insb
inc
adc
xchg
and
outsl
pop
clc
or
popa
jae
push
repz
cld
addr16
xchg
sti
cmp
es
mov
daa
push
loopne
pop
sub
and
repz
test
mov
inc
insb
lret
ja
movsl
or
inc
pop
add
testl
fsubrp
fstpl
adc
in
shll
int
dec
icebp
enter
cmp
dec
sbb
mov
in
insl
add
scas
xchg
int
sbbb
adc
popa
inc
xor
mov
in
adc
mov
and
faddl
stc
jo
in
fwait
and
mov
cmp
shlb
jl
test
into
xor
push
outsl
movsl
xor
in
mov
repnz
inc
xor
push
lret
mov
lret
repnz
add
insl
sbb
and
sbb
mov
adcl
inc
add
loopne
jae
adc
dec
cli
xchg
das
popa
sub
cmp
xchg
sarl
lcall
outsl
lcall
jmp
mov
dec
insb
data16
pusha
ss
aas
dec
movsb
jnp
xchg
es
out
sbb
mov
cli
mov
out
pop
outsb
call
pop
movsb
or
lds
scas
and
jmp
mov
test
push
pop
imul
push
xchg
cwtl
popaw
mov
mov
inc
sub
sahf
bound
cli
sbb
stos
inc
arpl
jnp
xor
dec
cmp
or
adc
loopne
adc
sbb
imul
fs
in
pop
insb
or
or
push
aaa
in
icebp
cli
lods
mov
mov
ret
adc
decb
jg
mov
fildl
xchg
fldt
fimull
in
mov
pop
shrb
sub
cmp
movsb
sarb
and
fisubrs
push
je
adc
cltd
in
xchg
insb
scas
fdivr
fdivl
lock
and
xor
iret
adc
inc
call
push
inc
push
cmp
cltd
jecxz
icebp
f2xm1
enter
sbb
ficoms
sub
sbb
imul
sub
pop
xor
aas
cld
in
mov
ret
push
mov
mov
jo
in
ss
or
nop
pusha
lods
xchg
sbb
add
icebp
push
movsl
movsb
mov
out
and
inc
ret
inc
pushl
rorl
cmp
add
lods
or
outsl
mov
cmp
out
sub
mov
mov
pop
xchg
scas
test
rol
shll
mov
cmp
pop
pop
fsubrp
pop
mov
mov
xor
pop
sbb
and
pop
in
js
arpl
push
cmp
inc
stc
and
inc
xchg
sbb
mov
mov
icebp
icebp
lea
jb
mov
scas
roll
data16
or
mov
push
stc
mov
test
pop
xor
xchg
ds
xlat
xor
je
pusha
add
js
ret
sub
and
add
inc
sbb
fistps
incl
inc
mov
insb
cld
pop
add
cmpsl
leave
xor
in
cli
cmp
jnp
sbb
or
adc
es
xchg
mov
int
add
ret
pusha
inc
scas
cmc
insl
cmp
aad
xchg
mov
pop
xor
sbb
push
xchg
pop
aas
jne
mov
ja
push
jno
inc
cwtl
mov
in
cmp
mov
cwtl
mov
push
cmp
add
mov
pop
mov
sub
inc
sbb
pusha
push
mov
adc
hlt
push
aam
cltd
pop
push
dec
daa
sub
mov
lods
in
mov
sub
inc
out
shll
inc
push
mov
adc
loopne
cs
cld
in
xor
mov
lods
inc
sub
shr
mov
aas
cmp
mov
enter
insl
mov
pop
mov
adc
push
es
mulb
jecxz
push
cmp
xchg
or
insb
xchg
cmp
call
shlb
pop
inc
pusha
sbb
inc
mov
aad
in
mov
cltd
adcb
adc
jnp
push
dec
jmp
mov
add
lock
cwtl
pop
jnp
and
adc
outsl
in
xlat
mov
and
rcl
sub
mov
jmp
movsb
ret
push
inc
add
and
mov
in
jnp
inc
sub
mov
aad
cmp
mov
in
stc
sbb
pusha
scas
adcl
and
mov
cmp
jg
sti
mov
in
imul
aas
cs
and
arpl
lret
ud2
sbb
mov
sbb
adc
mov
sub
pushf
inc
scas
jmp
lock
loop
rcrb
test
mov
xchg
xor
sub
add
sub
pop
test
adc
cli
es
xor
mov
out
lahf
shrl
mov
ss
dec
sarb
pushf
subl
outsb
sbb
jae
jae
push
or
ds
in
stos
and
sbb
sbb
mov
inc
jmp
movsl
sub
push
sub
frstor
xchg
fsubs
xchg
and
sbb
mov
mov
fsubl
std
mull
outsb
or
loopne
xchg
inc
lock
test
ja
xchg
push
fbld
add
aad
jnp
push
repz
cmp
repnz
sub
fdivrs
xchg
lcall
mov
int3
sti
push
cli
or
test
pop
xor
push
out
mov
xchg
inc
mov
xor
in
filds
jbe,pt
push
adc
je
dec
sub
push
mov
call
imul
and
mov
movsb
rcll
iret
pop
adc
cld
pop
shlb
jne
push
leave
push
adc
inc
stos
inc
cmc
outsb
in
daa
xchg
jp
lret
push
sti
pop
xchg
push
lds
pop
sub
xchg
jge
fistpl
addr16
lock
adc
xor
mov
mov
in
xor
sbbb
or
pushf
mul
in
andb
add
cmp
hlt
xor
stos
inc
mov
push
in
stos
lods
xor
incl
cmp
jo
xor
cltd
inc
xchg
dec
mov
mov
inc
jmp
xchg
add
movsb
or
dec
jbe
xchg
mov
test
mov
pop
pop
pop
shrl
mov
in
or
out
push
ds
add
in
cmp
pop
xor
inc
bound
fbstp
hlt
adc
jnp
es
test
arpl
fcoml
ret
dec
decb
jns
stos
xor
out
add
les
repnz
inc
jg
xorl
lcall
push
jns
mov
movsb
and
mov
imul
popf
ss
sbb
inc
jne
inc
sub
rcrb
fidivrs
arpl
sbb
cli
faddp
stc
xor
push
clc
dec
loop
mov
xchg
add
fsubr
push
rcll
jb
xchg
xor
rclb
xchg
fs
xchg
mov
xchg
dec
push
mov
xorb
in
imul
mov
push
add
ds
mov
lahf
dec
xor
push
adc
xchg
cmp
ss
mov
insl
insl
js
pop
jecxz
dec
jle
popa
loop
mov
loope
ja
jmp
fs
and
insb
std
aas
std
out
xor
shll
mov
mov
mov
stos
lea
mov
outsb
xor
ret
test
fistpl
insl
roll
ds
and
adc
pop
pop
adcl
inc
popa
jge
dec
cmp
aam
mov
and
int
dec
xchg
stos
nop
sbb
fiadds
xchg
xchg
add
push
pushf
add
int3
adc
into
add
cmp
xlat
jle
xor
pop
and
in
adc
outsb
mov
push
and
mov
lods
gs
or
or
outsb
cmpsb
in
jno
jo
fcomi
scas
sbb
sbbl
xchg
cmpsb
fisubrs
dec
inc
fistps
fs
push
inc
push
in
sbb
mov
outsb
jecxz
mov
and
push
cltd
jno
dec
adc
mov
jle
cltd
push
inc
popf
pop
jg
inc
jecxz
lds
or
cmp
xor
mov
and
jns
data16
cmp
shlb
add
dec
cmp
sbb
mov
mov
jae
pop
fidivl
loope
cwtl
mov
daa
add
mov
lret
inc
lock
shrb
xchg
jle
mov
sbb
test
or
fwait
mov
js
cmp
fsubrl
lret
insb
cwtl
push
add
sub
insl
fadds
pop
jns
sbb
call
xchg
test
mov
and
mov
xchg
aas
fs
xchg
xchg
lods
push
cld
mov
cli
stc
and
push
movsl
repnz
jp
inc
rol
mov
jo
fwait
or
pop
mov
bound
jno
jecxz
xor
enter
mov
push
mov
stc
pop
out
mov
add
ljmp
sub
jle
roll
cwtl
insl
xor
mov
punpcklwd
mov
sub
add
out
and
sbb
mov
ret
xchg
push
in
es
test
cmp
sbb
je
mov
xor
and
in
or
into
push
nop
cld
inc
xor
mov
adc
dec
fcmovnbe
sbb
in
test
dec
mov
pop
adc
ja
mov
es
clc
sub
and
lcall
int
cltd
xor
jb
mov
in
andl
rcrb
aam
cmp
dec
ret
jmp
popa
xor
dec
in
and
testl
imul
dec
mov
mov
andb
xchg
movl
cltd
nop
xor
mov
fwait
push
adc
mov
scas
int3
inc
dec
or
jnp
or
mov
and
adc
ja
ja
mov
out
sub
lods
aas
jno
repnz
push
xchg
imul
mov
daa
icebp
daa
jo
add
stos
or
movsl
mov
xlat
fisttpl
out
sub
inc
out
inc
je
jp
mov
pop
mov
imul
sbb
aam
in
jge
adc
out
push
pop
outsl
imul
int3
sub
lods
xchg
out
jge
mov
int
pop
adc
mov
adc
sub
daa
push
sub
das
xlat
inc
push
xchg
movsb
arpl
cmp
inc
pop
push
pop
lea
jp
dec
add
sub
rcr
sbb
cmp
sbb
and
dec
fwait
jge
aad
mov
loopne
sbb
xorl
test
int3
mov
push
xor
sbb
xchg
jb
cli
mov
jb
gs
lods
daa
into
pop
cmp
fldl
push
jno
sub
pop
ret
cmpsl
mov
adc
filds
std
mov
jb
adc
and
ss
cmp
push
xor
xchg
xchg
push
ret
imul
movsb
out
insl
scas
cwtl
xchg
cmp
add
mov
into
adc
inc
popa
cltd
push
mov
push
mov
mov
xorb
and
add
xchg
es
lods
push
dec
mov
jae
int
stos
xchg
cmc
jnp
lret
xchg
rcl
mov
jge
imul
pop
test
dec
les
push
enter
pop
insb
cmp
xchg
rcl
sub
cmc
inc
sub
lods
xor
and
dec
xor
test
decb
push
subb
adc
jmp
push
hlt
adc
adc
push
xchg
fldcw
inc
jno
mov
add
mov
mov
pop
mov
or
cmpsl
jle
push
xor
cmp
dec
add
jmp
lock
loopne
inc
insl
or
jp
sub
int3
icebp
pop
add
sub
test
rcrl
test
call
adc
cmp
nop
std
sbb
lahf
roll
mov
movsl
pop
xor
inc
add
jnp
xchg
mov
inc
jge
ja
add
in
insl
pop
and
fdivs
or
fldcw
lock
adc
in
inc
cwtl
mov
repnz
xor
movsb
ja
addr16
pop
pop
xchg
cmc
nop
mov
fsubrl
mov
or
out
std
xor
bt
imul
xor
push
mov
sub
ss
aam
dec
pop
adc
clc
mov
pushf
xchg
cmpsl
scas
sbb
sbb
scas
hlt
mov
pop
subw
mov
jnp
xchg
lea
mov
sarl
int
into
sub
into
test
popf
jo
inc
gs
xchg
cmp
mov
popa
mov
mov
dec
addb
shrb
sub
push
sbb
fs
rolb
clc
mov
and
dec
mov
and
aam
jle
fimull
mov
jae
adc
dec
sbb
out
sbb
sub
dec
mov
fwait
cmp
mov
cmc
cli
rorl
mov
or
cmp
fwait
add
in
lret
aaa
adc
cmp
add
cmp
xchg
mov
cmpsl
xchg
stc
popf
or
cmp
pushf
jecxz
fwait
imul
data16
pop
add
mov
push
into
fsubr
jo
leave
sub
clc
pop
repz
repnz
rcrb
testl
gs
sbb
movsl
subl
test
push
mov
scas
sti
mov
fidivl
or
jmp
mov
xchg
dec
push
push
xor
ss
aad
and
lret
mov
add
repz
cltd
inc
push
push
fstp
push
cmp
maskmovq
notl
in
test
fldcw
lds
and
add
mov
or
test
rorb
negl
outsl
cltd
or
popa
insl
mov
cmp
imul
jae
stc
div
jb
mov
add
std
adc
push
pusha
movsl
dec
shlb
cmp
ret
and
cwtl
outsl
fdivl
aam
repnz
xchg
adc
jo
sub
ss
scas
imul
or
push
add
or
add
mov
push
pop
mov
movhps
cmp
cmp
std
xchg
shlb
shrb
xchg
dec
into
jne
daa
inc
aad
enter
dec
inc
out
jae
jae
inc
adc
rorb
pop
dec
push
jge
insl
xchg
jnp,pt
cmp
push
jnp
ficomps
xlat
cltd
sahf
scas
push
add
dec
cli
add
sbbl
std
push
pop
sbb
push
in
and
into
aas
int
movsb
insb
mov
inc
and
or
icebp
rcr
sbb
add
jp
loopne
mov
and
xor
xchg
mov
sbb
dec
sahf
mov
add
popf
mov
or
arpl
ss
outsl
jb
xchg
fcomi
daa
pop
sub
std
push
mov
cmpsl
sbb
mov
pop
jbe
icebp
fldt
xchg
inc
in
fwait
jmp
cmpl
sub
rolb
cli
mov
insl
push
int
inc
push
pop
push
pop
jle
and
out
jl
std
les
mov
mov
leave
rorb
dec
add
mov
jl
loop
sub
adc
xchg
shl
xchg
cmpsl
push
cmpsb
add
scas
xchg
mov
lea
popf
jo
mov
lods
mov
and
cmc
jl
adc
bound
test
int3
pop
insl
fsubrl
repz
cs
push
push
and
gs
mov
lods
mov
outsl
cmp
mov
je
loopne
cltd
or
lahf
jne
jg
lds
pop
and
out
or
jmp
mov
cmc
call
xchg
jle
adc
dec
xchg
sub
cli
cwtl
pop
seta
mov
jle
lcall
push
call
mov
jae
pusha
js
stos
cwtl
dec
or
pop
dec
clc
and
jmp
js
je
jp
sti
imul
pop
sarl
jle
fs
lea
or
lods
outsl
adc
cli
fsubrl
or
jmp
add
mov
test
std
push
pop
cmp
cltd
cmp
add
and
adc
rcr
lcall
xchg
mov
lock
jge
cld
or
add
xchg
cs
cmp
push
in
push
inc
push
test
push
push
adc
clc
outsb
adc
movl
call
mov
test
rorl
add
ret
dec
iret
add
mov
aad
lds
sbb
dec
and
std
and
xor
out
bound
shll
mov
push
mov
and
adc
fwait
mov
lods
mov
mov
int3
mov
ss
popa
adc
test
outsl
jle
scas
in
mov
jbe
sarb
sub
sahf
out
stc
xchg
jnp
sbb
sub
mov
mov
jns
lods
mov
add
jl
xchg
xor
pop
lds
in
inc
lock
add
push
pop
mov
push
and
jle
fstpl
sbb
xchg
dec
fcoms
cmpsl
in
pop
sti
xchg
mov
ja
or
jge
sub
insb
pop
push
jo
pushf
scas
ljmp
ja
push
lret
outsb
mov
pusha
lahf
xchg
pop
fisubs
hlt
or
sahf
cmp
sar
pop
pop
scas
xchg
inc
or
ret
push
xchg
sti
popa
lret
shrl
xor
mov
lahf
adc
jge
mov
push
iret
cmp
cmp
dec
xchg
test
xchg
jno
mov
or
popa
call
jg
sbb
or
sub
in
leave
clc
pop
cltd
mov
loope
ja
div
insb
lods
push
cmpsl
nop
or
loope
lds
sub
mov
dec
jge
std
jecxz
divb
sti
cli
sbb
cmp
cmp
mov
in
cmp
mov
lds
ja
add
xchg
mov
xor
shrb
adcl
out
sbb
movsl
mov
cwtl
hlt
out
mov
pop
and
inc
je
cmp
cltd
mov
push
dec
dec
push
sub
push
popf
clc
sub
xor
and
xor
lcall
pop
repnz
cli
push
dec
mov
dec
fstps
repnz
sbb
mov
in
add
sub
int3
arpl
cmc
sub
xchg
adcl
adc
aas
mov
sbb
ds
jno
sub
das
ss
bnd
cmp
push
popl
xchg
mov
pushf
repnz
jo
mov
mov
outsl
jl
jle
or
jl
inc
pop
nop
ror
rcrb
les
les
mov
ja
jbe
sub
addr16
push
int3
int3
and
cli
push
test
inc
aas
test
lea
les
andb
pop
xchg
jl
test
jae
fists
push
stos
mov
mov
loopne
je
push
int
pop
movsb
icebp
sub
loopne
std
mov
and
lods
sub
adc
mov
jns
cmp
xchg
push
inc
push
push
mov
xchg
mov
mov
andl
or
cli
sbb
gs
fwait
xlat
rorb
mov
sub
push
roll
insl
push
lods
pushf
push
out
clc
mov
imul
into
jp
sub
data16
call
cltd
xchg
pop
inc
inc
fmuls
loopne
push
mov
rcll
lret
or
mov
mov
cmp
in
stos
inc
lea
sub
pop
aaa
pop
popa
jae
push
ss
xchg
mov
out
lcall
dec
sti
mov
mov
inc
pop
and
sbb
inc
jecxz
psubusb
jge
dec
jb
repz
cmpsb
cmp
add
adc
test
lahf
outsl
pop
mov
add
inc
jge
or
insl
cmp
or
xchg
pop
orb
pop
mov
sbb
inc
cmp
xor
adc
or
sbb
insb
ret
mov
xlat
dec
out
subl
mov
xor
pop
adc
jg
mov
add
pushl
loop
daa
daa
sub
fwait
and
sar
insl
sub
push
test
adc
ret
inc
xor
and
lahf
add
jno
popf
adc
adc
popa
cmp
nop
fucomi
pushl
scas
movsb
mov
or
xor
fs
pop
movl
paddsb
shrl
jns
push
movsl
fcoml
and
push
sub
hlt
jo,pt
fwait
hlt
movsb
dec
fcoms
adc
fdivrs
test
mov
jnp
push
mov
mov
sahf
push
mov
fdivrl
lea
and
mov
xchg
add
fnstsw
mov
imul
stos
imul
jno
fldcw
jno
loop
adc
push
jne
xchg
jg
add
dec
pop
inc
pop
sarb
addl
inc
and
sahf
roll
push
ret
jns
test
push
mov
dec
test
or
rcrl
dec
js
out
call
dec
mov
lcall
in
cs
repnz
sbb
adc
vpsubsb
addr16
adc
fstpt
in
dec
sub
jae
pop
scas
mov
mov
adc
rorl
mov
and
and
mov
cmp
lea
les
xorl
mov
lcall
daa
pop
add
loop
cmc
ljmp
push
cltd
or
pop
sub
jb
fdivr
pop
int3
push
and
inc
dec
mov
mov
fdiv
xchg
sbb
in
ss
loope
inc
in
push
jne
inc
push
shrl
mov
add
xchg
mov
stc
fwait
mov
cmp
jns
sub
in
jmp
imul
out
cmp
mov
inc
sub
jg
sbb
cmp
into
stc
jae
cmpsb
push
fdivrp
unpckhps
mov
adc
cmc
out
pusha
add
in
inc
xchg
daa
dec
sbbb
cli
test
inc
lock
clc
leave
jp
cwtl
dec
mov
pop
mov
cltd
or
cltd
in
mov
ss
aam
xchg
jnp
sub
cmc
mov
inc
movsl
adc
push
jl
jle
jb
cld
gs
test
popf
xor
scas
mov
dec
or
lea
xor
ss
xchg
lods
lahf
roll
lcall
and
stos
movsl
dec
push
add
leave
das
jle
inc
fcmovnbe
mov
sub
pop
dec
ror
into
popf
sub
pop
ja
jne
xor
xchg
xchg
fcomp
jmp
cmp
out
adc
es
js
and
push
inc
jp
sub
adc
mov
xor
es
sbb
jae
iret
dec
loop
adc
test
cmp
jp
mov
add
sarb
push
stc
aam
mull
pop
push
fdiv
out
jb
aad
mov
outsb
fmul
xchg
mov
out
push
pop
shrl
sbb
mov
and
js
pop
jge
sbb
inc
inc
pop
and
cmp
aad
fistl
sbb
inc
and
xorb
clc
shll
jmp
cwtl
cmp
mov
repnz
sub
scas
popf
popa
cwtl
iret
cltd
pop
xlat
mov
pop
out
aam
jecxz
mov
imul
sub
int3
imul
pop
std
xchg
sbb
push
xchg
jge
push
xor
int
mov
aas
and
xchg
pop
outsl
stc
dec
mov
outsb
sbb
fdivp
add
push
dec
add
loopne
mov
pop
mov
movsb
pop
push
mov
out
lret
dec
aaa
inc
mov
pop
loope
mov
push
push
outsb
push
imul
pop
mov
leave
sbb
je
adc
movsb
inc
lret
mov
ret
push
and
cmp
push
mov
mov
aas
test
ror
lret
jp
pop
jl
mov
out
cli
imulb
jae
xchg
mov
push
adc
les
fdivp
pushf
sbb
jge
pusha
shll
xor
mov
sub
mov
pop
fcoms
leave
das
mov
mov
cmp
dec
daa
outsl
dec
movsl
mov
jns
adc
jg
or
xchg
dec
mov
or
lret
add
dec
out
jle
nop
shlb
pop
movsl
nop
iret
sarl
insl
pop
mov
cmp
aas
dec
xor
xchg
fwait
mov
and
negl
inc
nop
aaa
pusha
fmull
xchg
mov
ret
clc
inc
add
adc
loopne
jle
aas
out
xor
pop
inc
pusha
lcall
mov
fucomip
add
xchg
insl
lods
roll
push
cmp
jns
sbb
mov
ret
xor
data16
addr16
mov
jmp
imul
mov
adc
call
sbb
jle
cmp
xor
add
push
and
mov
lods
jmp
sub
ret
sub
lods
popa
into
adc
and
xchg
pop
jne
repnz
aam
adc
sbb
pop
push
call
mov
xlat
cmp
mov
dec
and
sub
xchg
dec
lds
xchg
mov
lret
daa
loope
popa
jns
push
pop
and
sbb
and
aaa
es
and
lods
sub
les
fld
add
jne
in
cmp
lds
dec
jecxz
adc
cmp
add
add
sahf
mov
lahf
and
mov
or
mov
mov
xchg
dec
or
test
inc
fisttps
rcrl
cld
cld
pop
pop
jge
into
fs
xor
and
jle
mov
in
mov
adc
mov
ljmp
xchg
into
jecxz
xor
popf
adcb
pop
shlb
adc
lcall
fidivs
lcall
sbb
mov
inc
and
outsl
mov
fdiv
dec
adc
cmp
cmc
xchg
cmpsb
sub
mov
push
cmpsl
sub
xchg
js
and
pop
mov
and
add
outsl
idivl
mov
fistl
dec
rclb
or
or
fcomip
rolb
pop
pusha
bnd
mov
push
test
jp
cmp
sbb
push
cmpsb
mov
sbb
icebp
test
mov
xchg
sti
mov
jp
xor
imul
lret
cmp
sub
mov
inc
xor
sub
inc
jnp
inc
lods
push
push
sbb
in
jg
push
mov
or
and
add
xchg
xchg
repz
dec
mov
bound
sbb
push
sub
shlb
xchg
movsl
push
sbbb
cmp
pop
xor
arpl
lcall
add
fsubrs
mov
mov
shrb
imul
popf
jmp
xchg
adc
or
loop
std
fnsave
lods
mov
fcomps
xchg
repz
mov
push
faddl
or
in
mov
je
lock
sbb
mov
sub
shrb
mov
sbbl
andl
fistl
out
iret
in
xchg
scas
mov
cmp
in
rorl
fistps
rclb
jmp
fcoms
imul
push
push
xlat
movsb
lahf
mov
loop
nop
int3
sub
sub
pop
nop
movsl
int
mov
lret
push
cwtl
add
cwtl
sub
movsl
jmp
mov
xchg
mov
add
mov
jp
xchg
push
test
je
fs
nop
xor
js
sub
or
mov
pushf
xchg
in
jo
fisttps
test
mov
inc
out
lcall
pop
jnp
add
pushl
jne
hlt
push
sub
int3
gs
jge
int3
xlat
ret
jecxz
add
xchg
jg
mov
out
cmp
inc
cmp
faddp
mov
sbb
mov
sub
jo
insb
xchg
mov
lock
in
lahf
ss
mov
mov
xor
jl
jge
xchg
push
fstp
adc
xchg
push
std
lret
and
cmp
sbb
dec
icebp
cwtl
jle
out
js
test
dec
cmpsb
cmp
movsl
test
inc
ret
fidivrl
mov
cmc
and
push
sahf
cwtl
mov
negl
dec
enter
sahf
aam
mov
hlt
sbb
pop
inc
fmul
leave
leave
xor
and
pusha
or
sub
xchg
shlb
xor
pop
cmpl
jb
scas
sbb
ja
cmpsl
test
ret
sbb
lods
scas
xor
mov
rolb
xor
das
out
mov
inc
jle
sub
cs
pop
in
and
lds
sbb
add
mov
hlt
jg
sbb
jo
scas
xor
jmp
movsb
mov
xor
jo
mov
mov
int
cs
add
cli
pop
mov
xchg
and
mov
sbb
mov
fucomip
jge
jo
mov
add
lds
imul
push
xor
mov
mov
inc
cmp
testb
pop
lea
sbb
cli
xchg
lret
xor
xchg
aam
xchg
arpl
in
loopne
lret
xor
cmpb
dec
mov
push
hlt
enter
std
lret
out
mov
lret
push
inc
inc
icebp
xchg
push
sub
subl
out
out
int
gs
or
movsl
movsl
sub
sbb
pop
sahf
jae
enter
dec
push
pop
vpshufhw
mov
xor
jge
in
insb
or
cmpsb
lea
lods
mov
mov
clc
or
aas
add
inc
icebp
adc
xor
imull
arpl
push
or
scas
jmp
sub
mov
testl
aas
imul
lahf
aas
orl
fcoms
jno
bound
jne
jmp
stc
rorb
xchg
aaa
or
popf
push
add
daa
push
dec
mov
mov
daa
mov
cmp
adc
fisttpll
adc
test
lods
sub
jns
inc
mov
dec
xchg
or
shlb
mov
ja
pop
or
nop
cmp
push
cmp
subl
xor
push
int3
mov
ja
dec
jle
inc
pop
and
arpl
mov
dec
loope
lock
and
mov
iret
sub
xor
imul
out
int3
test
sti
mov
sbb
icebp
push
mov
in
mov
sbb
adc
call
rcll
imulb
cmpsl
scas
sbb
jne
or
sbb
dec
inc
mov
xchg
inc
push
lcall
hlt
fmul
mov
pop
insb
or
stc
mov
icebp
into
sub
jecxz
fnstenv
xlat
mov
inc
cld
or
es
sub
xor
mov
stos
imul
in
mov
jb
mov
movsl
icebp
push
movsl
push
lret
jecxz
je
mov
lea
and
mov
xchg
jns
fcompl
xchg
push
mov
aaa
jl
xchg
iret
xor
xchg
ljmp
xchg
add
cwtl
sub
add
mov
sbb
ficoml
lock
cld
dec
or
call
push
cmc
lds
sub
dec
xchg
adc
ljmp
dec
push
mov
scas
arpl
insb
xchg
stc
mov
mov
idivl
jb
das
outsl
adc
lret
scas
and
outsb
pop
add
dec
xchg
out
cld
mov
arpl
cmpl
lds
or
popf
push
sub
jns
sub
mov
dec
mov
cmp
and
out
ss
xorb
dec
jecxz
mov
add
bound
mov
xor
leave
dec
add
rorl
mov
adc
aas
les
adc
xchg
xchg
stos
xchg
inc
ja
negl
and
stc
xlat
xor
lea
sub
in
push
lock
leave
xchg
and
mov
leave
add
mov
jg
sub
xchg
or
jl
rolb
movsl
xchg
push
bound
outsl
push
jb
mov
add
popa
test
mov
and
pusha
shr
lds
out
into
xor
aam
push
xchg
int
std
add
push
fidivrl
sub
repnz
test
insb
add
adc
popa
sub
test
dec
mov
jae
and
das
cmpsw
and
mov
sbb
jne
fs
adc
xor
push
or
xor
adc
adc
xchg
mov
mul
sbb
mov
out
push
jmp
shlb
add
shlb
dec
fwait
lret
ror
jp
je
movsb
cmp
cli
stc
lret
je
jecxz
fxch
fldt
call
test
and
lds
lds
jnp
push
in
gs
pusha
sub
lcall
jl
sub
test
xchg
sub
mov
mov
cmp
mov
movsl
mov
inc
outsb
jle
shll
jb
out
and
mov
fnstsw
mov
sbb
or
sbb
ljmp
lea
sub
sbb
gs
popf
fxch
cmp
sbb
test
sub
mov
and
jp
pop
out
fdivrs
ja
in
out
adc
sub
mov
mov
mov
or
int
jp
lds
jne
in
push
shlb
fs
outsl
cmp
or
addr16
test
or
adc
jl
mov
sub
test
iret
push
int
in
pop
popf
shll
test
push
push
push
xor
mov
xchg
rcl
adc
cmc
push
xchg
xchg
cmp
pop
mov
jl
or
adc
sub
lret
mov
rolw
sbb
je
xchg
jae
into
out
and
lahf
jns
pop
outsb
aas
fimull
dec
pop
dec
add
repnz
jne
leave
daa
mov
push
and
lock
stc
shrb
inc
cmpsl
cld
mov
shr
cwtl
push
cmpsb
cmp
inc
mov
pop
mov
xchg
push
xchg
jbe
scas
mov
dec
dec
adc
xor
fwait
loopne
xorb
pop
addr16
nop
testl
stos
cld
cmp
and
xchg
inc
xor
arpl
add
pop
mov
xchg
les
mov
cltd
mov
sbb
mov
addr16
inc
add
fstp
fidivrs
fwait
imul
mov
cs
lods
loopne
inc
sbb
shl
and
insb
jne
xlat
sub
lcall
xor
add
aam
cmp
mov
push
rcl
xlat
repnz
sub
int
mov
add
jl
dec
dec
adc
inc
adc
pop
inc
and
movsb
push
dec
or
sarl
pop
fs
sbb
in
enter
imul
push
cmp
iret
adc
mov
mov
hlt
sub
adc
cmp
mov
dec
fmul
mov
or
add
je
jmp
lds
jl
push
imul
lcall
mov
xchg
fcmovnb
leave
or
sbbb
push
xchg
loope
pop
lahf
fcompl
jle
ret
cmp
cmp
rcrl
dec
mov
mov
imul
sub
sti
pop
aad
xchg
ret
ljmp
call
ljmp
int3
std
aaa
add
xor
imulb
jb
dec
jne
mov
inc
scas
push
inc
lods
rcll
imul
sub
ret
test
xor
xchg
ret
pop
push
repnz
cld
push
fcmovnu
push
adc
sarl
push
sub
enter
ljmp
add
jp
add
mov
mov
jle
mov
fimull
push
sub
fidivl
xchg
adc
xor
xchg
out
push
sti
cmp
mov
xchg
jecxz
jp
push
mov
fcmovnu
fisubs
sbb
push
lds
pop
inc
and
inc
pop
stos
int3
daa
and
mov
mov
xorl
mov
cmp
xchg
cli
xor
mov
xchg
push
sbb
add
arpl
addr16
ss
mov
test
fs
mov
shll
jno
cmp
popf
ret
pusha
sahf
mov
inc
adc
jbe
sbbb
fldt
ss
xor
sbb
or
inc
in
xor
into
shll
sbb
cmc
inc
enter
sub
pop
insl
jae
aas
movsb
jb
loope
aas
xor
or
movsb
xchg
movsl
leave
leave
cmp
cmp
addr16
icebp
fisttps
jmp
ficoms
nop
ss
bound
add
inc
xor
stos
mov
xchg
xchg
lds
sbb
pop
dec
les
fmulp
jno
sbb
add
fisubl
lea
mov
fsts
mov
imul
adc
pop
daa
cmc
sbb
sub
sbb
fs
jle
ljmp
fidivrl
mov
xchg
mov
in
mov
jmp
sbb
jmp
dec
pop
sub
mov
sar
mov
aaa
mov
rolb
dec
orl
out
lret
and
sbb
loopne
in
pop
mov
rclb
cmp
in
mov
cmp
into
adcl
add
loope
add
andb
dec
pop
inc
mov
ljmp
fwait
jg
mov
sbb
inc
cmpsb
push
nop
int3
outsl
or
xor
jo
fidivs
add
mov
lret
hlt
cwtl
push
or
adc
xchg
lods
jmp
xchg
adc
imul
and
pop
test
mov
mov
xchg
pop
imul
cld
je
pop
xor
and
lods
pop
outsb
xchg
loopne
dec
and
mov
and
and
xchg
ds
jmp
inc
adc
push
push
repz
pop
data16
sbb
popf
lcall
sub
je
cmp
xchg
adc
and
xor
test
inc
mov
mov
add
sti
and
pop
pop
inc
lods
mov
loope
cmp
std
loope
scas
and
repz
mov
push
push
lahf
adc
ljmp
mov
fmul
lea
add
xor
lret
jno
add
mov
dec
mov
push
and
mov
jl
stc
or
sub
mov
sarl
in
xor
cltd
mov
mov
pop
sub
ficoms
rorb
inc
mov
arpl
rorl
data16
mov
shlb
adc
sbb
lahf
pop
push
sbb
ret
inc
inc
or
adc
loope
mov
sbb
pusha
sbb
clc
les
ret
sub
ss
aaa
add
sbb
fwait
mov
sbb
xchg
div
repz
inc
icebp
inc
repz
mov
out
cmpsb
sub
loop
cmc
lods
jl
cmpb
test
push
clc
push
or
pop
lods
out
add
mov
fs
or
lea
fwait
movsb
insl
std
test
pop
divb
into
xor
cmp
loope
mov
dec
cld
cmc
xchg
xor
inc
xlat
mov
cmp
mov
dec
and
or
mov
and
jle
test
test
icebp
inc
push
cwtl
or
sahf
insb
into
mov
addb
ficoms
cli
nop
shl
hlt
push
cltd
rorl
mov
xchg
imul
cs
movsb
adc
cwtl
lods
sbb
mov
mulps
dec
mov
loope
sub
cmpsl
mov
lods
xchg
dec
mov
pop
adc
movsb
mov
pop
test
pop
int3
fmull
js
pop
pop
mov
fmull
movsl
in
clc
dec
and
add
pop
mov
push
out
movsb
dec
pop
mov
xor
mov
lods
out
add
mov
shl
mov
or
jp
or
mov
fsubs
stc
and
pop
rcl
xor
cld
aaa
cltd
movsl
addr16
fistps
push
xor
jnp
mov
push
jmp
and
push
movsl
sub
daa
add
mov
aam
sub
rcrl
test
sbb
push
mov
push
cmp
xlat
pop
jb
es
mov
pop
mov
dec
push
mov
lock
add
pop
cltd
add
pop
mov
mov
add
mov
and
sub
popf
jle
xchg
das
inc
stc
push
sbb
fnsave
jl
aad
and
jno
adc
out
adc
lock
fldl
sub
flds
pop
dec
mov
adc
mov
shll
lea
or
arpl
stos
mov
push
mov
pop
sub
mov
fbld
cmpl
cmp
lods
xchg
orl
rclb
fs
lcall
into
xor
daa
push
lea
movsb
jg
sbb
ss
xchg
aad
je
popf
addr16
cmp
les
test
sahf
cmp
and
pop
push
cwtl
mov
lcall
cs
adc
ds
popa
insb
stos
xor
jnp
jns
scas
push
popa
fdivs
inc
mov
jl
aad
pop
imul
inc
gs
xchg
mov
sbb
and
jecxz
and
dec
into
shlb
sub
data16
cmp
push
rcrl
cmp
mov
mov
jmp
ror
or
ljmp
xchg
lret
inc
insb
jp,pn
mov
mov
xor
or
push
mov
and
dec
jo
fiadds
push
mov
pop
mov
mov
xchg
or
in
xchg
cmpsl
lods
ja
or
lock
cmc
fsub
movsl
into
fsubl
jb
push
dec
leave
pop
cmpsb
stos
sub
out
outsl
sbb
cmpsb
lods
mov
xor
test
adc
testb
pop
jne
adc
in
cmp
std
or
repnz
into
jp
pop
mov
test
mov
pop
push
nop
xor
fwait
data16
cmp
pop
push
push
inc
pop
lods
int
sub
pop
sbb
mov
test
pop
pop
rcrl
or
stos
scas
fs
mov
or
mov
xchg
subl
repnz
shrb
xchg
sub
dec
and
leave
push
imul
pop
push
test
out
in
imul
cmp
aaa
pop
lods
add
dec
addb
push
in
ss
orl
mov
clc
lds
mov
mov
push
sarl
mov
shl
or
add
push
test
sbb
fimuls
mov
aas
ljmp
sbb
mov
lds
aad
dec
push
ret
xor
mov
orb
jne,pn
movl
in
adc
repz
jns
enter
movsl
movsl
mov
lods
cmp
mov
addr16
scas
push
mov
outsb
je
out
jbe
in
xchg
mov
dec
jl
pop
ss
inc
test
adcb
iret
jle
nop
js
dec
pop
scas
or
dec
dec
sbb
das
or
xchg
inc
adc
test
sub
dec
mov
imul
pop
movsb
stc
xchg
fiaddl
xlat
mov
push
pop
jecxz
das
xchg
mov
in
and
les
idivl
lcall
push
pushf
lds
and
dec
adc
xchg
pushf
cmp
stos
pop
int3
das
dec
in
mov
int
and
in
out
aam
es
mov
and
popf
mov
jecxz
xor
popf
jno
dec
mov
je
cli
adcl
or
movsl
add
out
jl
add
iret
dec
cmp
sbb
cmpsb
or
icebp
dec
jg
test
aaa
push
mov
insl
loope
inc
pop
fsubrs
mov
pop
js
sbb
push
cs
xchg
pop
cmp
pusha
mov
mov
fimull
fwait
xchg
or
pop
imul
pop
shlb
pop
push
mov
adc
inc
and
pop
pcmpeqb
lret
fmull
in
bound
in
aad
add
popa
andl
lds
std
lock
inc
add
mov
rcll
sbb
xchg
mov
out
xchg
stos
push
fidivrl
push
xchg
stc
pop
in
inc
jmp
mov
pop
mul
call
lods
and
flds
std
imul
mov
inc
jmp
jno
repnz
jnp
in
pop
fistl
push
mov
outsl
scas
pop
and
dec
inc
pop
cmp
mov
mov
cs
sti
gs
mov
fwait
dec
test
push
pop
dec
jmp
je
add
and
mov
dec
imul
cld
push
in
adc
scas
jmp
mov
aaa
jae
xor
inc
aaa
outsb
mov
enter
adc
cmp
xchg
xchg
iret
xor
ret
lahf
pop
fsts
mov
xor
aad
pop
cmp
icebp
loop
scas
ljmp
ret
mov
in
out
jb
insb
ror
je
xchg
push
scas
dec
add
jne
mulb
mov
or
push
out
jl
jl
push
mov
shrb
imull
sub
and
xor
xor
inc
pop
sahf
jno
cmc
or
test
cwtl
lahf
jp
dec
jno
push
jo
add
lea
and
xor
pop
jnp
rorl
ds
les
je
and
xchg
cwtl
pop
cmp
push
push
mov
push
sub
ret
and
fnstenv
or
test
mov
dec
jo
add
dec
rcrl
xor
mov
push
inc
fldt
cmp
sbb
adc
fldl
fisubrs
jge
mov
lods
xchg
xor
sarb
mov
cmp
shl
mov
addr16
outsb
xchg
movsl
push
push
pop
clc
mov
xchg
fwait
mov
lret
ljmp
iret
adc
xchg
dec
cmp
std
jmp
aam
fisubrs
push
jne
movsb
jle
xchg
lret
scas
aad
pop
jge
sub
aaa
add
pusha
mov
les
stc
fcoml
dec
and
pop
mov
pop
mov
inc
iret
ja
push
jl
data16
mul
xchg
insb
lock
test
mov
pop
pop
jmp
repnz
rolb
and
aas
push
cmc
daa
and
orl
dec
sbb
push
xlat
mov
mov
dec
mov
test
mov
lret
pop
adcl
pop
xchg
rorl
movsl
cmp
add
mov
sub
mov
mov
adc
xchg
mov
jnp
shlb
sub
mov
xchg
ffreep
fistpll
push
pop
jns
fimull
mov
sub
mov
loope
mov
cmp
cli
adc
pop
int
and
cmp
repz
cwtl
daa
jae
in
dec
shrb
pop
imul
dec
jg
mov
mov
cmpl
dec
insl
sub
cmpsb
lock
push
in
lret
mov
jo
stos
lret
or
sbb
push
mov
mov
hlt
js
scas
cmp
arpl
xchg
sti
jne
out
cmp
cmp
mov
and
hlt
pop
ja
inc
push
or
shr
push
add
sbbl
aaa
dec
lock
leave
mov
loope
outsl
mov
cmpsb
xchg
rol
or
sahf
xor
fdiv
pop
les
cmpsb
mov
mov
add
cwtl
fwait
xchg
sub
xor
dec
dec
push
aas
data16
out
iret
addb
popl
xchg
mov
out
aas
js
xchg
or
test
arpl
cwtl
std
popf
pop
push
push
sub
imul
ror
cld
stos
or
stos
add
jne
xchg
mov
sub
leave
faddp
enter
fildl
sub
jg
fldt
and
je
gs
cmc
leave
inc
loop
leave
xchg
popf
cltd
aaa
adc
lret
jo
rclb
das
lahf
mov
data16
add
dec
jns
aad
inc
pop
outsl
inc
dec
cmp
mov
iret
cmp
out
xrelease
clc
jp
pop
mov
cmp
or
rorl
inc
gs
push
jb
shl
jg
mov
outsl
xlat
test
mov
nop
or
fstps
fstp
jae
lods
jnp
adc
lock
je
lret
fdivl
imulb
pop
mov
sub
lods
movsl
jne
call
ds
sbb
mov
mov
mov
in
cli
popf
in
mov
jne
add
testb
loopne
xchg
cmp
ror
jmp
xor
or
loopne
icebp
mov
sub
or
arpl
cmpsb
insl
outsl
sbb
push
jge
in
inc
xlat
jae
insb
les
xlat
and
hlt
jge
push
sahf
cmpsl
fstp
push
dec
mov
cmp
cmp
fisttps
sbb
lret
push
mov
sbb
cwtl
std
fists
add
mov
aam
xchg
sbb
hlt
pushf
xchg
rol
sub
adc
fucomip
iret
test
imul
xor
lret
pop
cmpsl
push
test
pop
xor
cmpsl
and
jo
jp
sbb
cltd
pop
add
dec
jp
cmpsb
aam
hlt
jb
and
adc
pop
in
and
sahf
cmpb
arpl
pop
xchg
test
push
xchg
dec
sbb
dec
popf
pop
fdivl
xchg
jge
fmuls
int3
xlat
sub
or
xor
dec
mov
cmp
iret
xchg
and
cmp
inc
xchg
jp
inc
not
int3
jns
and
sahf
cmpb
js
mov
in
adc
dec
mov
jl
xchg
dec
mov
jbe
jecxz
rorl
cmp
inc
fidivrl
pop
out
push
mov
outsl
push
push
loop
inc
mov
push
mov
sbb
sbb
xor
popf
int
xchg
jo
cmp
clc
lock
loopne
mov
mov
je
mov
xor
dec
sbb
adc
jecxz
pop
pop
mov
inc
rolb
mov
or
mov
pop
nop
loope
cmpl
bound
cld
mov
imul
aaa
mov
push
xchg
pop
and
shrb
jecxz
or
sbb
jb
push
aad
pop
sti
adc
xor
xlat
lock
iret
jb
aad
test
fcomps
sbb
lret
fstpl
insb
aas
in
inc
ja
jmp
sub
nop
jp
mov
xchg
xchg
sbb
fisubrs
nop
daa
movsl
add
inc
dec
popa
sbb
mov
inc
dec
data16
or
xor
lods
jp
ror
xchg
xchg
shll
jmp
les
jmp
data16
fsub
adc
adcb
xor
fs
imul
cltd
or
lret
adc
sbb
mov
pop
leave
jg
addr16
and
outsl
mov
push
push
inc
jb
pop
mov
inc
or
rorl
sub
negl
outsb
mov
adc
cmp
test
imul
sub
add
xchg
mov
repz
imul
mov
push
jno
cmp
xchg
les
clc
scas
add
repnz
aam
xor
ss
xor
mov
mov
mov
into
and
in
mov
cmp
mov
popa
xchg
add
and
rorb
cmp
hlt
roll
pop
shll
repz
pop
add
dec
enter
inc
mov
dec
and
adc
incb
stc
stos
rorb
out
rcrl
adc
xor
inc
sub
add
jns
jmp
lea
bound
mov
mov
dec
out
pop
aas
lret
xor
add
cmp
test
fwait
cmpsl
dec
sbbl
pop
lahf
lret
mov
repnz
cwtl
je
and
mov
inc
pop
ficompl
mov
jecxz
idivl
mov
mov
fnstsw
xor
cld
fucomi
popf
mov
dec
or
iret
push
jle
jae
or
das
mov
mov
pop
mov
ja
adc
fldenv
pop
das
loop
stos
andb
sbb
loope
test
fiaddl
mov
imul
ds
xor
mov
scas
xor
pop
inc
in
pop
pmaxsw
sub
xchg
mov
sbb
pop
popf
das
sti
lea
jo
xchg
jecxz
pop
jae
scas
jnp
loop
repnz
jo
mov
mov
adc
movsl
add
test
mov
into
mov
lds
les
adc
mov
xor
inc
cli
int3
pop
xor
incb
sub
test
cmp
mov
inc
clc
emms
jl
in
xchg
aad
mov
cmp
iret
xchg
jne
inc
and
dec
adc
sbb
and
jo
jl
push
jno
ror
adcl
adc
fisubrs
stc
aas
incl
or
mov
sub
and
pop
mov
leave
insl
lret
xrstor
xor
pop
ja
jge
pop
mov
insb
jl
cmc
imull
mov
rcrl
pop
addb
cmc
pusha
popf
in
jns
jne
adc
mov
push
xchg
mov
pusha
iret
and
jno
cmp
adc
cmc
jae
and
mov
sbb
lds
lds
mov
mov
cltd
ror
out
add
cmpl
sbb
push
pop
cli
adc
xchg
add
lahf
fildll
ds
in
jb
push
lds
pop
idivb
mov
fs
xchg
adc
bswap
in
mov
loope
je
div
fs
push
adc
dec
push
jge
loopne
call
mov
lret
call
icebp
sub
jns
rcrb
out
inc
clc
leave
shrb
ja
mov
pop
loop
ljmp
push
jae
and
ret
mov
xchg
fnstsw
movsb
xchg
cmp
sub
les
iret
cmp
shll
add
push
dec
mov
sbb
push
stos
cwtl
or
aaa
cmp
xchg
dec
or
ja
imul
stos
or
ss
inc
imul
and
test
scas
cmp
in
mov
popf
bound
jl
scas
out
inc
mov
ljmp
in
out
and
dec
inc
jns
or
jp
dec
movsb
pusha
loopne
je
xor
arpl
movsb
jb
mov
popa
inc
stos
ss
lea
enter
xor
xchg
movsb
sub
jns
fistpl
add
rcrb
mov
xchg
ds
jp
mov
and
pop
js
xor
inc
push
xor
jb
ss
dec
adc
jmp
sbb
mov
outsl
fdivs
jl
cmp
in
enter
sub
push
cmp
adc
out
or
pop
rcrl
je
push
mov
divl
cmpsb
ja
mov
and
mov
mov
and
je
mov
arpl
fstps
sti
jge
mov
pop
cld
xor
insl
xchg
mov
xchg
mov
cli
xchg
push
lret
in
stos
sbb
inc
popf
popa
dec
dec
and
or
mov
push
inc
jecxz
mov
idivb
push
in
push
sbbb
or
mov
lock
leave
movsl
pop
sahf
mov
data16
cld
decb
sbb
cmp
xchg
mov
push
push
in
scas
pop
aad
nop
cmp
and
pop
inc
xor
sbb
jne
addr16
repnz
jg
pop
int3
aas
dec
xor
imul
pushf
xor
popa
lret
cmpsb
dec
out
push
push
pop
scas
pop
hlt
daa
popf
inc
push
jmp
test
std
mov
sub
push
loope
dec
test
fs
lret
mov
sub
xchg
lret
into
fwait
pop
xchg
jo
mov
aam
in
cltd
stos
jns
jno
xchg
mov
rclb
pop
add
dec
popa
push
and
mov
sub
das
mov
xchg
sub
call
cmp
dec
mov
add
inc
data16
int
pop
adc
into
pop
std
push
pop
push
pop
cld
adc
popf
pop
cld
dec
fnstcw
sub
push
leave
inc
push
adc
int
mov
jp
jg
filds
cmpsb
sbb
adc
pop
cmc
sub
roll
pop
add
inc
stos
mov
jp
repz
int
dec
and
push
scas
gs
add
adc
add
push
dec
jns
inc
adc
xor
mov
xor
mov
dec
imul
fistl
fistps
and
je
jno
xorb
adc
add
push
int3
mov
jo
push
cmp
adc
inc
roll
outsb
nop
xor
jae
and
arpl
or
fstl
rcl
ljmp
cmp
cmp
mov
es
incb
lret
xorb
push
cmpsl
ret
jne
inc
pop
je
inc
sbb
xchg
jae
dec
lock
mov
pop
mov
enter
test
jl
fwait
jmp
addb
les
mov
dec
mov
jl
out
xchg
pop
cmp
shrl
nop
fdivs
loop
and
inc
xor
mov
daa
mov
es
cld
ss
mov
pop
jmp
jae
loopne
xor
jbe
hlt
inc
add
jo
push
mov
data16
mov
ljmp
lret
idiv
cmpb
cmp
mov
outsl
stos
scas
and
sbb
cmc
cli
icebp
jne
sbb
scas
std
pop
adc
daa
loop
in
pop
or
mov
nop
sbb
outsb
xchg
dec
arpl
stos
mov
cmp
xchg
mov
dec
mov
or
mov
cmp
push
cmpsb
add
fistpll
jl
inc
lret
scas
data16
xchg
sbbl
jno
mov
sub
lods
or
call
and
push
push
mov
mov
not
mov
cwtl
or
jecxz
xchg
adc
mov
imul
mov
fistl
rcl
test
inc
push
lret
lods
xor
dec
les
dec
rcrl
push
sbb
stc
sbb
xchg
int
add
jmp
repnz
daa
xchg
test
and
mov
push
out
dec
cmc
loopne
pop
pop
dec
xor
aaa
subl
xchg
mov
adc
push
or
clc
int
jbe
lret
cltd
xor
repz
pop
cltd
scas
stc
daa
add
jle
mov
xchg
pop
out
sbb
pusha
inc
xchg
xor
rorl
and
int
xchg
outsl
jp
or
repz
fidivrs
pop
push
scas
mov
push
push
inc
aas
add
push
ficomps
or
add
cmp
in
sbb
or
adc
cs
pushf
aaa
loope
call
scas
aam
pop
dec
jne
out
f2xm1
pop
sub
lahf
mov
scas
stc
or
movsl
stc
inc
pop
mov
mov
and
ret
inc
inc
xchg
cmp
pop
mov
pop
movsb
mov
cwtl
ja
clc
xchg
stos
movsl
aaa
ret
push
mov
shll
mov
mov
dec
inc
mov
push
push
mov
rclb
xchg
jge
flds
mov
les
fsubs
pop
push
loope,pn
mov
fnsave
xchg
dec
sub
inc
fs
mov
je
repnz
mov
add
hlt
outsb
popf
push
pop
jge
sub
fcmove
loopne
cmp
bound
pop
sbb
daa
pop
xchg
fdivrp
inc
cmp
inc
ret
jmp
shll
adc
pop
push
bound
pop
mov
seto
icebp
mov
cmc
cli
scas
or
les
sbb
mov
jle
adc
mov
cmc
fldl
loope
inc
or
cmp
mov
xchg
sbb
inc
lods
std
fcoml
sbb
dec
jbe
pushf
cwtl
arpl
jae
cmp
fldenv
or
ja
lds
push
push
cmpb
mov
pop
lret
adc
daa
aas
adc
sbb
pop
sub
push
jae
mov
jno
mov
cld
dec
dec
cmpsb
lea
arpl
jecxz
inc
jle
movsl
js
in
fisttpl
jg
jp
outsl
xchg
and
stos
xchg
outsl
xor
aad
jo
lock
scas
negl
iret
stos
inc
in
icebp
jmp
and
xchg
jmp
jp
mov
lock
out
stos
cmp
lea
fistl
dec
xchg
cmp
bound
pop
jle
mov
xchg
lahf
dec
push
loope
lods
push
cs
fstl
cmp
mov
jmp
cmp
outsl
push
pop
divb
mov
cmp
add
cwtl
je
dec
xor
cmp
pop
and
and
mov
xchg
mov
popf
rorb
pop
sub
jge
or
inc
inc
jg
jge
pop
fucom
das
imul
ret
cmpsl
sub
pop
push
xor
mov
xchg
and
pop
sti
clc
push
dec
inc
pop
or
pop
ror
mov
xchg
fldenv
sbbl
mov
repz
sbb
leave
int3
fisubl
mov
cs
mov
lea
insl
mov
loope
mov
dec
sarl
dec
sbb
mov
sbb
ljmp
popf
shl
pop
jnp
test
add
daa
jmp
test
sub
pushf
stos
jge
add
loope
cld
add
adc
mov
adcl
je
dec
movsb
mov
out
call
mov
and
add
fildl
movsb
lods
roll
or
imul
and
pop
cmp
inc
mov
push
lock
and
pushf
cmpsl
ret
push
arpl
push
or
inc
leave
dec
jle
cld
mov
rcll
lock
iret
aaa
push
lods
xchg
addr16
dec
jl
out
shlb
and
cmc
jns
push
pop
and
jb
fs
jne
inc
jecxz
mov
push
mov
lcall
rolb
push
lret
dec
mov
pop
call
sbbb
pop
andl
pop
jne
loopne
cmp
nop
scas
sbb
aas
xor
pop
and
in
jns
mov
mov
push
fwait
cmpsl
fisttpl
inc
int3
jp
gs
sbb
lahf
xchg
aas
popa
fsubrl
fwait
add
push
pop
mov
dec
cmp
adc
shrb
scas
icebp
xchg
je
je
lds
lods
gs
jno
rorb
and
rolb
push
and
sub
push
push
daa
inc
scas
mov
mov
dec
push
xor
mov
push
out
xor
cmp
repnz
cli
pusha
jl
jmp
jmp
pop
inc
in
enter
jne
daa
jb
and
scas
rclb
stos
js
imul
mov
mov
scas
pushf
clc
jg
loopne
cltd
repnz
loope
nop
adc
inc
inc
enter
or
das
in
cmpsb
jg
les
dec
xchg
pop
xchg
shll
cmpsb
out
js
xor
or
xor
enter
fiaddl
sub
pop
cmp
lret
sub
pop
jg
mov
jl
in
cmpsb
shr
mov
in
enter
fstl
mov
mov
insl
cmp
out
xchg
inc
dec
scas
test
imul
mov
mov
mov
add
dec
or
fs
push
hlt
movsl
int
cmp
pop
jns
sbb
sub
sbb
fcompl
cmpsl
add
push
add
or
sbb
ret
push
jecxz
or
icebp
sbb
or
sbb
sub
push
dec
jecxz
stos
jnp
aas
jo
loop
pop
jo
xchg
push
mov
test
movsb
push
and
push
scas
inc
or
sbb
xor
stc
jecxz
pop
mov
scas
scas
xchg
rcrb
inc
mov
jno
xor
imul
xor
rclb
dec
sbb
ret
test
out
imull
je
xchg
jg
mov
sbb
js
sbb
fdivs
jmp
and
sbb
repnz
push
mov
and
cltd
cmp
cmc
dec
test
enter
and
adc
popa
pop
insl
fwait
push
test
sar
jne
push
pop
add
pop
mov
int
adc
adc
ret
xchg
popf
cmp
icebp
jge
mov
stos
ds
insb
dec
pushf
xchg
inc
sbb
xor
setno
mov
mov
sbb
test
cmp
push
mov
inc
jnp
pop
pushf
int
xchg
dec
jno
imul
push
push
adc
pop
sub
xchg
push
mov
mov
adc
jns
sbb
out
shlb
dec
push
add
jle
xchg
push
cmp
test
in
ds
pop
xchg
jbe
adc
push
and
lods
out
gs
pop
xchg
arpl
push
stos
xchg
hlt
pop
adc
mov
je
and
jle
out
or
add
add
inc
push
rorb
out
jne
sbb
jnp
negl
lret
adc
pop
fdivrs
add
mov
sahf
xor
out
xchg
xchg
adc
cs
adc
adc
lods
repnz
icebp
mov
cli
cmpsl
xor
and
push
or
push
xor
dec
imul
je
adc
cmp
andb
inc
div
enter
xor
xor
ss
andb
fwait
gs
out
inc
ffreep
movsl
nop
inc
repnz
sbb
dec
negl
icebp
ss
pop
jnp
push
jnp
popf
pop
pushf
add
mov
adc
in
jb
fnsave
clc
inc
popf
nop
leave
dec
adc
sub
mov
mov
movsb
adc
dec
pop
cmpb
aam
add
lretw
and
cld
mov
dec
and
bound
insl
adc
ret
cmc
xlat
dec
mov
das
test
cmp
dec
add
jmp
mov
mov
xchg
in
and
lcall
mov
orb
adc
or
inc
xor
jl
scas
sti
push
cmpl
xchg
iret
orl
fcomps
mov
xor
cs
xchg
aaa
xchg
fidivl
cwtl
sub
cld
cmpsb
scas
mov
sbb
sub
mov
inc
dec
jl
negb
inc
pop
push
clc
xor
movsl
or
call
inc
dec
sub
sti
rol
leave
je
repz
pop
cmp
xchg
pop
cmpsl
xor
add
xor
jnp
mov
mov
nop
movsb
pop
cmp
inc
jle
or
mov
imul
in
mov
movsl
and
repnz
and
dec
dec
pop
xor
mov
mov
mov
cmpsb
into
cmp
rcrb
fcoml
repz
xor
mov
push
jmp
jle
and
out
rcr
es
mul
fwait
mov
xchg
orl
pop
inc
dec
arpl
dec
add
or
sbb
lods
mov
dec
jno
inc
fs
pop
mov
push
mov
lcall
jns
jecxz
and
sti
sbb
inc
cmpsb
adc
inc
loope
out
xor
repnz
jae
xchg
negl
and
sahf
push
mov
pusha
lds
shll
es
cmpsb
add
ret
imull
sub
and
mov
adc
ret
push
cmp
repz
rdtsc
pop
icebp
sbb
jg
mov
test
push
lds
dec
leave
jp
adc
iret
mov
sub
jnp
out
jmp
jg
repnz
cld
ja
adc
rolb
pop
xchg
xor
mov
js
sbb
mov
rcrb
sub
xchg
dec
shrb
adc
cmp
pop
xor
mov
fcoms
in
xor
adcl
in
in
add
fidivrs
roll
adcb
add
mov
xor
jnp
pop
mov
test
outsb
add
scas
mov
fwait
mov
aas
xor
hlt
movsl
jns
lcall
and
or
mov
adc
mov
and
in
and
stos
dec
repnz
push
repnz
xchg
cmpl
pop
mov
mov
stos
dec
into
inc
jl
inc
loopne
jb
sbb
pop
ljmp
mov
jmp
push
inc
call
fdivl
adc
push
insl
test
cmp
jp
fimuls
test
mov
mov
jne
xchg
imul
and
cmp
aaa
popf
lahf
int
cmp
pop
movsl
jne
cltd
inc
nop
push
inc
outsb
out
jns
and
sbb
fwait
dec
jl
cltd
cmp
push
stos
sub
xchg
adc
inc
and
push
fdivl
pop
sub
aad
cmpl
stos
scas
mov
sbb
popa
pop
xchg
iret
int3
sbb
mov
lret
std
jle,pn
pop
fildl
xchg
in
or
loop
stos
push
outsb
aas
add
shrb
push
fmull
mov
push
ss
stc
cmp
jp
add
les
scas
pop
pop
pop
pop
nop
and
seta
addb
fs
sub
out
mov
repz
xchg
xor
add
sbb
xchg
mov
cmpsb
test
mov
mov
inc
add
pop
imul
xor
fisubrs
mov
mov
sbb
jmp
dec
ret
in
adc
jbe
mov
lds
mov
mov
sub
mov
fadds
lahf
xorb
jle
mov
test
jle
pop
jne
or
sahf
mov
xlat
adc
fdivs
cwtl
lock
icebp
dec
imul
data16
xorl
sbb
mov
adc
sbb
popf
or
mov
sub
icebp
xchg
and
add
insl
pop
dec
jb
add
outsl
rorb
bound
stc
cmp
icebp
and
test
nop
ds
popf
lock
insl
push
sub
inc
add
mov
adcl
mov
stos
inc
add
pusha
mov
fwait
cltd
in
sarb
loop
cmp
jbe
add
in
hlt
movsb
or
mov
add
or
movsl
push
dec
and
in
pop
inc
je
lcall
adc
adc
push
mov
sbb
lret
jbe
sbb
mov
push
push
pop
jae
inc
andl
iret
pop
cmp
cmp
cmp
or
xchg
test
into
adc
and
fidivl
jae
test
jmp
jl
or
repnz
enter
daa
into
xchg
pop
push
xor
addr16
dec
or
jbe
mov
sbb
inc
call
xchg
cmpsb
aad
lret
mov
adcb
mov
and
mov
sbb
and
sub
mov
js
xchg
mov
push
sbb
insl
add
xchg
hlt
add
loop
jae
add
xor
popa
xchg
std
dec
mov
sub
add
add
nop
mov
sbb
dec
imul
and
dec
cs
or
sub
cmpsb
dec
push
adc
cmpsl
pushf
fcmovb
xor
mov
or
clc
and
negb
les
mov
cs
sub
gs
dec
arpl
jbe
out
push
inc
mov
ja,pt
ljmp
add
jecxz
or
stos
or
int
into
arpl
das
leave
imul
mov
cmovge
sbb
mov
lcall
jl
lock
adc
js
les
sub
loopne
in
stos
loope
gs
push
push
out
fbstp
inc
pop
rcl
xor
sbb
stos
je
jbe
insb
mov
int
and
pop
xchg
pop
pushf
data16
lock
push
cmp
sbb
sbb
and
add
ret
repz
xlat
pop
jae
aas
pop
push
call
andl
mov
xor
outsb
clc
ljmp
mov
outsl
repz
cmpsl
aad
out
ja
mov
cmp
adc
jae
cmpsb
rolb
sub
fwait
mov
jmp
xor
movsb
adc
bound
pop
sbb
lock
mov
into
popa
mov
ror
popf
and
lahf
test
lods
icebp
xor
rorb
movsb
stos
fwait
xor
fisubrl
push
lcall
push
ret
ja
add
imul
pop
mov
sti
or
mov
xlat
jne
std
popa
clc
xor
or
outsl
aaa
das
xchg
es
adc
es
mov
adc
nop
out
cli
push
jge
push
out
sub
mov
xchg
pop
and
out
mov
lock
or
mov
out
scas
xchg
roll
push
imul
jne
xchg
aam
movsl
mov
inc
sub
imul
dec
outsl
or
in
cmc
popa
dec
std
mov
ja
mov
dec
fwait
push
cmp
in
test
mov
es
mov
mov
jns
or
or
push
xor
xchg
xor
loope
cs
sbb
pop
orl
lcall
push
or
xchg
xor
in
xchg
mov
mov
mov
push
cli
ret
fdivrl
fiaddl
jmp
imul
test
rclb
inc
inc
mov
leave
xchg
outsl
movsb
mov
loope
sub
andl
incb
sub
push
cmp
dec
add
pop
mov
aaa
repnz
add
xchg
icebp
fwait
adc
fsave
rcr
outsl
push
push
dec
sub
dec
mov
out
lcall
ljmp
inc
pusha
addl
xor
insl
daa
sti
fucomp
ret
jae
adc
inc
add
pop
lea
out
xchg
das
inc
mov
inc
sub
cmpsl
or
cli
mov
movsl
lods
push
adcb
pop
or
add
or
xor
mov
pushf
mov
xor
test
pop
dec
inc
out
jno
popl
jo
jb
iret
mov
jo
lret
lds
aas
dec
jns
and
fwait
idivb
test
mov
fsub
ss
adc
int3
push
hlt
cmpsl
pop
orl
xlat
in
loopne
mov
cmc
push
ret
mov
sbb
mov
mov
ljmp
and
mov
xor
adc
cmp
mov
ficoml
inc
lock
push
aam
int3
xchg
into
inc
jnp
icebp
iret
and
int
push
std
jmp
cmp
sbb
dec
roll
aas
dec
into
hlt
out
jns
mov
jle
dec
dec
and
pusha
push
shlw
lock
mov
cmpb
rorl
stc
outsl
mov
mov
xchg
jns
leave
and
loope
lods
repz
repnz
lcall
xchg
fwait
mov
jle
dec
fiadds
ljmp
jmp
int
dec
jge
jp
mov
fbstp
fsubp
xlat
push
int
cmc
data16
sbb
mov
xorl
cmc
inc
lret
adc
jb
jae
sub
jge
or
pop
repnz
push
mov
std
sar
loopne
pop
cld
xchg
sbb
or
jne
jmp
push
ss
sti
shlb
adc
dec
jo
dec
std
push
xor
in
xchg
mov
out
mov
rorb
int
cmc
adcl
outsb
shrb
scas
pop
roll
or
scas
mov
cltd
sbb
jp
or
sbb
test
data16
sub
cmc
add
push
mov
in
xor
xchg
xor
or
fcoml
lret
shlb
nop
xlat
or
in
test
lahf
je
xchg
stos
aaa
pop
jecxz
inc
sub
sbb
test
shlb
popf
stos
jno
mov
and
stos
int3
cmp
shl
mov
mov
je
mov
jl
jno
and
push
pop
sbb
xor
imul
pop
push
cmpsb
lea
jmp
add
mov
stos
push
insl
rcrb
jecxz
adc
aaa
sbb
stos
push
repz
rcrl
mov
adc
andl
sub
imul
mov
push
mov
inc
or
adc
clc
jmp
lret
or
mov
mov
stc
ret
cmp
sub
repz
mov
shufps
mov
add
mov
or
adc
push
and
movsl
mov
jns
leave
js
arpl
fucomip
mov
dec
push
fbld
arpl
or
inc
popf
xorb
popl
data16
xor
scas
jnp
rcl
gs
fldenv
pop
pusha
gs
inc
gs
push
out
cmp
adc
int
mov
lea
dec
xlat
sub
imul
push
loopew
filds
jnp
and
aam
mov
jecxz
cmpsl
add
stc
rorb
push
mov
push
sahf
data16
mov
jle
push
hlt
jnp
fs
and
mov
dec
cmp
cmp
sti
push
test
jecxz
pop
cld
push
xor
lcall
mov
xchg
ds
lods
mov
mov
sbb
fst
adc
hlt
xrelease
pop
out
and
adc
add
popf
lret
xor
pop
adc
mov
jg
adc
push
sbb
call
cld
loop
mov
scas
fildl
push
sbb
mov
rcr
add
out
xor
mov
mov
sub
inc
cmp
pop
andb
or
inc
and
sub
push
mov
cmp
mov
mov
bnd
xor
cwtl
inc
sbb
or
and
sarl
imull
jnp
sbb
mov
jbe
rcll
rorb
xchg
and
mov
sti
adc
mov
add
sahf
sbb
pop
lods
in
adc
loopne
jle
mov
jb
in
mov
pop
xchg
inc
out
imul
test
push
into
sub
xor
mov
les
pushf
or
and
push
pop
sbb
daa
popa
xchg
test
mov
xchg
jo
push
jp
test
js
jns
add
ret
xlat
add
fstpt
add
inc
or
push
jmp
and
mov
pop
fbld
enter
fwait
mov
xor
test
mov
xchg
dec
lds
mov
mov
cmpsl
subl
outsb
sbb
lods
pusha
sub
arpl
xchg
ja
insb
inc
cltd
nop
cmp
mov
call
ja
bound
fldenv
push
sbb
mov
push
ret
or
dec
fstps
movsl
insl
sub
in
sbb
adc
mov
sarb
push
mov
movsb
sbb
adc
and
and
xor
test
cmc
lcall
add
stos
pop
fucomi
and
cmp
jecxz
sbb
add
mov
addr16
into
inc
xchg
std
add
lret
jmp
sbb
mov
adc
clc
pop
out
sbb
sub
inc
out
bound
sbb
sub
daa
fs
insl
int
pop
mov
cmp
mov
mov
inc
test
lea
es
mov
xchg
inc
shll
sarb
cmp
adc
sub
xchg
mov
push
negb
fsubr
icebp
test
ret
or
adc
jge
adc
adc
xchg
xchg
pop
inc
stos
insl
cmp
shlb
out
add
push
sub
sahf
adc
mov
lahf
xor
lock
add
inc
lods
sub
lds
pop
imul
aam
fwait
add
cmp
bound
ficoms
cltd
jge
mov
mov
push
aam
jge
or
fbld
ja
popa
sbb
sub
loopne
lret
sub
push
sahf
test
lret
jns
std
stos
in
sbb
in
pop
adc
lock
mov
dec
sbb
mov
popaw
dec
stos
add
fimuls
lret
mov
enter
mov
and
mov
mov
add
cmp
add
flds
cltd
divb
and
fnstcw
push
adc
outsb
inc
adc
loop
jne
pop
xchg
xchg
xchg
adc
fidivrl
cmp
jno
inc
xchg
push
mov
cmc
scas
repnz
pop
rcrb
dec
shlb
cltd
xchg
popa
mov
fcompl
inc
scas
xchg
in
and
or
inc
nop
mov
mov
test
addb
pushf
lahf
jae
lret
cs
xchg
xchg
mov
push
inc
loopnew
or
adc
lea
fdivrl
jnp
cmp
rol
sbb
js
jl
mov
sbb
mov
shll
xor
cwtl
outsb
mov
loope
repnz
movsl
jne
and
daa
repz
xchg
mov
test
fdivrp
push
pop
jo
out
mov
es
scas
mov
push
add
rol
mov
nop
sub
lds
fisttpl
mov
out
adc
test
add
dec
jae
or
sbb
or
mov
adc
cmp
sub
dec
movsb
shll
das
loope
icebp
dec
cld
sub
lods
push
rcrl
xchg
sub
ficomps
aas
stos
rcll
xchg
jo
iret
ljmp
sub
call
das
sbb
push
adc
lcall
cmp
jnp
fisubrs
out
push
add
addr16
addl
insl
loope
loop
insb
mov
pushf
lods
dec
jge
lock
outsb
stos
jae
lcall
imul
inc
jmp
mov
jnp
in
push
mov
loope
lods
movsl
mov
push
mov
cmp
dec
rolb
popf
cmpsb
pop
adc
movsb
mov
or
addr16
int
xor
mov
jge
adc
mov
dec
cwtl
mov
out
pusha
mov
cmp
cltd
cld
mov
cmpb
ss
mov
in
and
lods
xor
xor
inc
lds
scas
mov
sbb
repnz
adc
les
push
stos
sub
sahf
loop
dec
div
stos
pop
mov
jne
cmp
lds
dec
fsubrs
xor
test
jo
sbb
and
fcoms
adc
pop
or
cltd
xlat
imul
sbb
adc
rcrl
repz
inc
mov
mov
and
cmc
js
jbe
adc
xchg
push
xchg
push
imul
pop
in
mov
jns
sbb
dec
fcomps
aas
js
rcrb
push
fildll
xor
jnp
and
and
das
mov
mov
or
push
bound
push
insl
fcomps
ljmp
fistpl
push
mov
xor
leave
pop
xorb
subb
adc
mov
cmp
in
sbb
stos
pop
push
xchg
sbb
cmp
cltd
adc
or
sahf
push
sti
sbb
inc
fidivrs
dec
push
dec
test
cmp
shl
jg
imul
mov
aaa
xor
mov
pop
mov
sbb
mov
rcrb
sub
push
lock
pop
mov
ds
shrb
dec
dec
mov
push
or
fistps
mov
mov
hlt
push
fcmovb
mov
cmp
pop
xchg
jle
imul
mov
adc
test
test
cmpsb
jne
cmp
jae
or
je
insb
in
jns
fldt
ljmp
imul
in
shlb
pop
icebp
call
mov
aam
ret
cmpsl
fcomps
lea
pop
lret
mov
jp
std
insl
pop
push
push
dec
xor
imulb
cwtl
pop
lret
subl
jmp
mov
clc
xor
inc
and
in
dec
mov
stos
inc
in
gs
arpl
cmp
and
out
adc
sti
in
rcl
xor
mov
dec
jnp
dec
mov
jae
mov
inc
les
jle
arpl
fisubs
mov
mov
pop
mov
ss
jne
jo
xor
pop
pop
loope
jb
pop
mov
or
addb
cmp
stos
dec
pop
dec
add
xor
dec
add
loopne
pushf
jno
and
cmp
in
test
loopne
or
in
mov
jbe
inc
xchg
push
jl
das
xor
cmc
rcrb
adcl
add
test
push
xchg
das
push
les
int3
sbb
or
xchg
jg
cmp
fcomps
adc
and
clc
cmpsl
mov
dec
movsl
dec
inc
call
fs
pop
mov
cmp
rorl
fcos
push
cmp
xor
mov
mov
pusha
ljmp
or
sub
popf
jb
jne
sbb
cli
popf
add
loop
fwait
sub
add
add
outsl
fnstenv
or
push
pop
lahf
sti
xor
insl
out
outsl
mov
outsb
gs
ljmp
mov
or
adc
xor
and
popf
shll
fcomps
xor
pushf
pop
mov
imul
jbe
rcr
xchg
out
mov
orb
pusha
jmp
aas
repnz
loopne
pop
pushf
icebp
mov
jecxz
cmc
sub
fwait
daa
or
fdivr
pop
das
or
addr16
lea
repz
xchg
cltd
mov
mov
inc
inc
nop
ret
fsubrl
mov
cwtl
add
fidivs
insl
mov
push
push
ja
add
inc
sbb
popf
adc
into
test
js
lcall
push
frstor
data16
fiadds
dec
sbb
xor
lock
jbe
sbb
add
out
enter
in
push
ret
aaa
pop
nop
fiadds
or
mov
sbb
popa
push
push
dec
rcr
pop
das
mov
das
cwtl
cmp
dec
push
adc
popa
mov
pop
cmpsb
mov
scas
pop
mov
cmpsl
aaa
jne
push
cmpsb
xor
sub
xchg
mov
mov
clc
mov
imul
repz
out
push
mov
xor
mov
mov
jno
push
push
adc
adc
mov
mov
adc
in
jmp
mov
xlat
push
mov
xor
mov
loop
sbb
and
xchg
sub
mov
adc
ja
push
in
sbb
lods
mov
daa
dec
pop
and
sbb
or
mov
nop
jp
adc
repz
xchg
mov
enter
push
inc
inc
or
insl
dec
in
cmp
ds
push
xor
jae
inc
ss
lret
inc
lock
xlat
shll
adcl
std
fistpll
sti
insb
xor
cmp
push
mov
loope
cmpsb
add
popf
addr16
fists
push
sbb
sub
scas
jg
stc
bound
int3
push
repz
inc
les
std
adc
jge
mov
out
sbb
mov
push
mov
mov
sbb
mov
test
push
xchg
add
shr
pop
iret
inc
scas
or
imul
jge
inc
add
dec
jae
fistpl
stos
shrl
push
pop
mov
int3
mov
inc
test
and
xlat
push
mov
sub
inc
jl
inc
xor
test
ret
dec
mov
cmpsl
loop
icebp
into
lods
repnz
add
dec
mov
pop
mov
iret
dec
movb
mov
add
sbbl
pop
cmp
push
and
mov
dec
pop
or
pop
push
pop
out
cmp
in
xor
and
jae
sub
outsl
ret
ja
and
inc
fistpl
nop
or
out
fcmovnb
aad
shll
daa
mov
je
xor
je
pushf
dec
stc
and
pop
in
fisttpl
cmpsl
jno
jns
iret
xchg
push
lods
movsl
inc
sub
push
mov
mov
mov
push
ss
push
adc
xchg
out
push
lahf
xchg
call
addr16
in
mov
pop
mov
mov
jne
mov
mov
jbe
outsl
stos
mov
repz
add
mov
pop
out
adc
add
push
repz
frstor
int3
xchg
cwtl
stos
out
hlt
fistl
xlat
cmp
xchg
mov
mov
xchg
lea
mov
scas
call
je
lock
aad
push
pop
loopne
push
cmpsb
aaa
add
test
test
dec
imul
dec
fistps
test
ja
mov
sbb
sbb
add
add
cld
pop
xor
jle
jge
int3
mov
sbb
xor
sbb
mov
addr16
mul
mov
repnz
pop
pop
fstpt
scas
out
pusha
sbb
xchg
or
jecxz
lret
cld
sub
push
test
sub
push
mov
mov
push
add
repz
inc
jnp
divl
shrb
add
popa
mov
sbb
xor
adc
and
xor
jmp
dec
in
fmuls
jo
fsub
insb
inc
cltd
js
pop
push
test
inc
pop
push
rorb
xor
js
lods
sbb
test
call
pop
sbb
fisubs
jge
sbbb
push
sbb
jbe
xchg
testl
popa
or
insb
xor
scas
and
mov
mov
rcll
stos
sub
mov
inc
jb
pop
and
sub
cltd
test
aam
xor
out
cld
gs
cltd
push
or
lods
mov
and
stos
sbb
cli
pop
or
frstor
stc
lret
ljmp
push
pop
loop
cmpsb
xchg
sbb
lea
mov
lret
aaa
cmp
shrl
mov
loop
and
sub
xor
push
mov
cli
pop
fcmovbe
add
push
fbld
cmp
lock
icebp
in
adc
js
jnp
jg
leave
es
xchg
jae
roll
push
and
popa
push
outsb
out
gs
outsl
out
jge
sbb
pusha
dec
cmpsl
orb
leave
repz
mov
jbe
stos
push
aad
jge
mov
sahf
ss
jnp
dec
dec
fdivrs
xchg
decb
lds
xchg
fwait
or
lahf
imul
ret
jne
jb
icebp
pop
cmp
subb
int3
popa
out
xor
iret
dec
and
adc
test
movsb
or
mov
jl
loop
push
dec
outsl
ss
inc
jb
in
push
cld
jns
notb
jae
enter
dec
dec
xor
jns
push
repnz
in
jmp
push
jmp
xchg
lahf
or
mov
and
leavew
fistl
das
scas
in
and
leave
mov
mov
and
lcall
in
pop
adc
inc
lods
cmc
mov
inc
jmp
outsb
and
adc
pop
mov
sbb
scas
xor
mov
adc
push
xlat
add
fidivs
mov
out
inc
call
imul
push
adc
mov
mov
lods
jge
jmp
xchg
inc
xor
mov
arpl
imul
push
std
dec
movups
ljmp
mov
xor
jle
jmp
test
imul
lahf
incl
mov
fidivs
adc
mov
add
popa
cmpsl
ret
sbb
mov
mov
mov
imul
gs
cmp
repz
jle
mov
fsub
sub
rolb
pop
add
scas
insb
or
mov
test
mov
sub
rcrb
cmp
js
in
ficomps
adc
or
add
jle
mov
bndstx
lret
andl
mov
xor
jl
cltd
sahf
inc
mov
mov
je
xchg
fistpll
xor
xchg
or
adc
mov
out
dec
dec
dec
aas
cmp
xor
jmp
cli
test
push
mov
mov
pushf
fwait
cmp
inc
jne
push
xchg
inc
lds
sbb
xor
loop
insl
in
mov
and
aam
mov
enter
jbe
pop
xlat
add
cltd
nop
outsl
aaa
movsl
pop
xchg
adc
js
adc
icebp
or
cli
outsl
sub
cmp
xchg
lret
jnp
hlt
adc
sar
out
add
jmp
mov
pushf
inc
fisubl
aam
xchg
xchg
add
adc
cmp
pusha
or
cmp
rorb
sub
cmpl
dec
les
cmp
fldl
lods
jle
jg
fnstcw
jmp
test
sub
inc
out
sub
lds
mov
cmp
mov
ret
push
and
out
xchg
popa
jns
insl
cmp
test
sbb
clc
push
lret
lock
xor
sbb
and
call
out
adc
outsb
mov
mov
test
jecxz
nop
arpl
dec
mov
aaa
andl
cmpsb
mov
lret
xor
pop
mov
aad
aaa
ror
out
mov
insb
fwait
xchg
ljmp
pusha
sbb
xchg
inc
std
pop
data16
fsubs
jle
mov
jae
fdivrl
aad
call
push
pop
outsb
daa
shr
gs
jmp
cmp
int3
pop
xor
xor
lahf
or
fcmovne
into
ljmp
in
lods
jl
add
mov
in
push
ljmp
inc
insl
push
jno
xchg
fsts
into
lea
mov
vpaddusb
daa
jnp
mov
jae,pt
in
call
and
mov
and
aas
inc
xchg
lret
cs
call
arpl
mov
mov
inc
mov
ss
lahf
stos
daa
lret
or
popa
mov
popf
out
mov
and
data16
popa
fsubrl
stos
test
mov
add
iret
lret
lcall
xor
daa
in
icebp
leave
movb
shll
mov
aad
sti
inc
in
aaa
cmp
mov
push
ret
test
sbb
das
jns
mov
insb
push
adcb
mov
xchg
sbb
test
fsubs
out
sub
jmp
jnp
pop
and
mov
outsb
xor
enter
ljmp
cs
mov
je
dec
imul
int3
sub
lods
xor
ret
mov
xchg
cmpsb
mov
pop
mov
inc
xchg
or
sub
fs
das
mov
or
mov
fdivr
fadds
ss
sub
out
jae
icebp
sbb
cmp
xor
pop
pushf
or
aam
dec
int
loope
jle
inc
push
rep
and
ss
fildll
outsl
xor
push
pop
imul
or
movsl
adc
call
mov
or
test
out
aas
pop
inc
movsb
inc
add
cmp
adc
add
jno
outsl
xor
sbb
pop
add
mov
push
bound
jle
inc
cmpsb
add
in
in
fstps
mulb
sbb
xor
pop
sub
leave
out
mov
add
xchg
outsb
jle
loope
push
aas
dec
xor
lods
insl
aam
fwait
inc
pop
fld
sub
out
sub
fnsave
cmc
call
in
std
pop
subl
dec
in
jae
mov
push
xchg
in
pop
add
xor
sahf
push
cli
rclb
lods
mov
jno
mov
mov
cmp
out
jecxz
in
fst
insb
xchg
xor
hlt
lock
sbbb
inc
cmp
fldcw
add
pop
dec
mov
sub
or
flds
mov
cmc
mov
mov
cmp
mov
insb
shlb
pop
xorl
test
adc
mov
push
or
push
xchg
add
pop
pop
pop
popf
push
jb
jmp
cmpl
pop
jne
dec
bswap
popa
jle
cmp
cli
stc
movsb
pushf
rcrb
mov
outsb
arpl
jmp
pop
int
jp
push
sti
sub
addr16
fimull
jle
push
and
or
call
push
mov
cltd
imul
lcall
jne
dec
dec
jle
and
call
pop
pop
orb
out
arpl
mov
hlt
gs
mov
push
mov
and
cmp
or
push
repz
fistl
push
adc
jne
mov
jp
test
lods
mov
cwtl
pop
dec
push
testl
call
xlat
pop
repnz
test
popa
sbb
test
scas
jno
in
xchg
jae
call
leave
lock
repnz
popf
add
loop
jecxz
push
xchg
xlat
cmp
push
sub
bound
popa
je
push
inc
jle
dec
clc
jno
test
sbb
mov
mov
int3
push
sti
sbb
cmp
push
aad
mov
adc
call
pop
inc
push
cld
xor
sbb
loopne
pusha
fs
shl
xor
jb
xchg
or
push
mov
in
sbb
in
and
jg
neg
sub
push
arpl
pop
jne
outsb
int
push
outsl
xor
push
xor
outsb
xchg
fidivs
xor
jno
lret
push
or
add
stc
pop
lret
scas
repnz
dec
adc
lcall
add
push
push
pop
repz
mov
push
mov
cmp
inc
lcall
sarb
lock
test
mov
jno
outsb
insl
adc
cmpsl
andb
cmpsl
cli
pop
dec
or
dec
es
lds
or
or
dec
lret
pop
les
cs
addr16
inc
leave
xchg
lods
andl
jo
pop
dec
jge
jge
fsubl
mov
pop
adc
jb
pop
xchg
add
inc
enter
sub
dec
sbbl
aaa
lea
out
cmpsl
roll
add
pop
or
aad
sub
sahf
and
and
jmp
xchg
mov
ret
fnstcw
jbe
ds
adc
lods
dec
lods
xchg
mov
push
nop
or
mov
lods
sti
inc
and
fstps
subl
inc
cld
sbb
xchg
xchg
fbstp
xor
fcmovnbe
je
adc
or
dec
xchg
hlt
enter
sub
add
mov
pop
mov
fs
lock
sbbl
adc
pop
loopne
ds
dec
adc
jle
mov
shll
dec
sbb
cs
stos
adc
mov
fsubl
inc
imul
mov
pop
into
mov
jns
test
es
ret
xchg
cltd
pop
or
js
add
inc
xor
call
mov
je
lret
xlat
pop
popa
jae
dec
dec
adc
mov
aas
and
sub
roll
int3
xchg
aad
pop
mov
dec
lahf
xchg
std
push
sbb
xor
mov
push
sbb
rorb
mov
jo
fcmovbe
mov
int3
ja
jmp
cmp
cli
icebp
out
sqrtps
fcomps
or
ss
push
jae
fs
cmp
add
jg
xchg
mov
incb
sub
dec
mov
inc
lds
mull
decl
test
jmp
stos
ss
and
xchg
js
imul
outsl
test
add
test
std
cltd
cwtl
push
test
cmp
andnps
mov
add
dec
mov
add
dec
lahf
out
rcrb
pop
push
insb
or
add
mov
cmp
or
mov
xchg
shlb
sub
outsb
lds
jle
fcoml
cwtl
jae
or
fs
idivb
icebp
ret
or
push
repz
mov
xor
mov
cli
es
hlt
xor
test
inc
and
push
jae
xor
jmp
jmp
icebp
adc
pop
sti
cwtl
inc
pop
cmp
iret
dec
cmp
std
rorb
jnp
nop
push
push
sbb
mov
pop
inc
enter
fs
dec
jle
sbb
je
fdivrp
roll
hlt
fildll
xor
adc
sbb
aas
push
mov
pop
jmp
xor
aaa
pop
xchg
bound
jb
jp
jo
or
fldenv
mov
insl
xchg
jl
mov
into
inc
jae
fdiv
inc
dec
das
xor
lcall
xchg
insb
or
subl
gs
popa
sahf
cmp
adc
mov
pop
fstps
xlat
sub
gs
cmpsb
cltd
xor
xchg
or
sbb
xchg
cli
sub
cmp
push
scas
push
sub
pop
clc
cli
add
jecxz
add
call
mov
fs
pop
dec
xchg
out
adc
ss
adcl
mov
jnp
addr16
loope
adc
xchg
xor
xor
xchg
je
mov
adc
dec
mov
sti
fbstp
inc
cmp
loope
jo
mov
dec
rcll
sqrtps
inc
js
push
mov
pop
and
aam
xor
fwait
cmpsl
loopne
imull
jbe
cli
rorl
jecxz
cmp
test
mov
dec
xchg
cmp
push
adc
leave
pop
push
lahf
scas
sub
mov
xor
ret
dec
fbld
xlat
ret
pop
scas
aad
in
in
cmpsb
je
sub
push
sti
adc
enter
sbb
adc
ficoms
lcall
nop
dec
arpl
and
pop
sbb
cmp
pop
pusha
cmp
mov
pop
test
xor
push
daa
dec
sub
shrl
shlb
pusha
mov
and
jne
movb
xor
sub
cmp
pop
or
xchg
scas
lcall
sahf
xlat
adc
add
shlb
push
sbb
daa
push
ret
bound
sbb
xor
jp
movsb
es
or
movsl
xor
rcr
in
push
and
cmp
adc
stc
call
incb
mov
xchg
dec
cmpsl
test
outsb
out
xchg
cli
negb
dec
cmc
jp
pslld
shr
lret
movsb
jno
dec
incl
xlat
sbbl
cli
int3
or
jb
jecxz
adcl
xor
es
mov
mov
and
ds
sub
inc
fidivs
lock
imul
mov
jg
jg
sbb
aas
loope
int3
stos
dec
xor
sub
stos
fisttpll
fisubl
jecxz
push
loopne
cmpsl
cwtl
jae
cli
cs
in
test
cmp
loope
test
jl
xchg
xchg
adc
subb
jae
in
lahf
xor
lahf
push
je
sbb
inc
jg
leave
shlb
xchg
lds
add
sub
dec
sarl
bound
and
imul
dec
or
roll
xor
scas
adc
rcll
lea
sar
inc
mov
mov
pop
shrl
pushf
repz
ljmp
sbb
add
lcall
or
pop
mov
jo
dec
lock
pop
xchg
addl
gs
pop
mov
stc
jmp
call
das
je
mov
loopne
add
out
mov
stc
inc
ret
xor
movsl
mov
push
pop
cvtpi2ps
xchg
aam
jae
xchg
test
pop
jb
in
xchg
and
cli
test
push
std
daa
aas
xor
arpl
push
adc
push
jns
mov
inc
mov
dec
incb
pop
call
adc
shll
xchg
or
or
je
cli
jge
push
iret
hlt
dec
push
das
shl
adc
xlat
icebp
add
and
jmp
in
lahf
lea
adc
fisubrl
fwait
adc
jb
into
out
sub
jl
shrl
sbbb
sti
xchg
pop
addr16
movsl
mov
cmc
mov
mov
and
in
lds
repz
fld
pop
inc
ss
ljmp
mov
fists
pop
stc
sbb
mov
ffreep
xor
push
dec
ja
mov
scas
jnp,pt
stos
and
lahf
lea
lods
mov
outsl
inc
insl
mov
lods
inc
dec
cmp
mov
sub
adc
fnstcw
out
xchg
les
mov
add
icebp
or
popf
rcl
dec
cmp
or
in
in
add
subl
push
rorl
fsubr
lss
push
mov
pop
shrb
inc
lock
jg
rcl
jle
out
das
pusha
pop
aam
mov
rcll
call
int
dec
sbbb
arpl
pop
jmp
test
rclb
popf
sti
insl
push
lds
syscall
sahf
loopne
andb
push
dec
jnp
push
insb
jne
and
pop
idivl
shll
sub
pop
sar
imul
iret
mov
out
or
sti
lret
out
mull
mov
fnstenv
push
lods
mov
pop
push
xchg
jns
add
mov
sahf
xchg
pop
mov
in
sub
push
sbb
imul
adc
sbb
lds
sbb
add
into
adc
fadds
add
mov
xor
jge
cld
fsts
dec
mov
jns
roll
dec
inc
jo
dec
pop
jnp
clc
xchg
cmpsl
scas
aad
add
push
loopne
int3
sahf
xlat
loopne
das
cmpsb
jns
lock
out
enter
push
xor
popa
mov
enter
push
pop
rcll
mov
pop
xchg
xchg
outsl
mov
out
lea
xor
xor
jg
inc
fcoms
jmp
jp
aad
repz
in
mov
call
fisubl
xor
sahf
inc
icebp
mov
ret
loopne
sbb
sbb
lret
repnz
test
fs
jge
popa
cld
mov
or
inc
push
and
adc
cmp
xchg
cmp
inc
push
sbb
push
js
lock
stc
xchg
pop
jo
movb
enter
and
ljmp
sbb
das
dec
pop
mov
pop
icebp
es
hlt
pop
sub
andb
in
xchg
mov
movsb
mov
fistl
mov
xchg
aaa
das
inc
pop
in
sbb
or
or
cmp
pop
mov
gs
jbe
dec
addr16
iret
pop
std
or
inc
jmp
xor
sbb
cmp
in
sbb
pop
pop
outsb
mov
mov
fwait
lds
clc
add
int3
leave
stos
mov
int3
loope
ljmp
cltd
jecxz
inc
push
mov
aad
push
dec
test
push
xchg
ret
jns
inc
inc
add
call
and
mov
out
idivb
negl
pop
add
les
sbb
cmpsb
push
and
xchg
cli
andl
xchg
call
mov
push
jp
iret
or
sbb
sti
cmp
inc
jae
mov
xchg
sub
pop
clc
pushf
cltd
rolb
cmp
out
dec
mov
test
sbb
scas
test
outsl
das
scas
negb
call
scas
xchg
mov
dec
fiadds
mov
or
and
lahf
stc
outsb
lods
lcall
sbb
cmpsb
sbb
mov
pavgb
jp
sbb
lahf
or
rcll
add
adc
cltd
or
pop
loop
push
pop
mov
icebp
xlat
mov
loop
movsl
ret
and
mov
popl
popf
test
lock
fdivrl
aad
xchg
nop
pop
cmp
cmp
mov
jnp
add
imul
stos
dec
into
xchg
mov
adc
jb
movups
int
or
popf
inc
jne
cmp
or
fwait
cli
leave
fnsave
cmp
scas
std
dec
dec
arpl
and
hlt
and
sub
adc
cmpsl
add
mov
insl
lahf
addr16
lahf
ret
dec
bound
add
add
test
adc
and
out
pop
inc
xor
push
mov
sbb
loop
in
mov
and
stos
scas
fisttps
out
test
div
sub
aaa
or
mov
je
pop
jge
push
into
rol
push
cs
sbb
outsb
je
mov
mov
sub
mov
jmp
pushf
xchg
jle
mov
aaa
push
jp
pop
sub
dec
call
popa
lret
shrb
pop
and
lret
sub
repz
mov
into
push
std
add
or
xor
repnz
jge
jecxz
divb
out
lods
mov
sub
xor
xor
cmp
pop
addr16
testb
pop
and
lea
jnp
pop
xor
adc
sbb
lds
pop
fidivs
outsl
movsb
or
inc
decl
int
shlb
sahf
fstpl
pop
sbb
mov
adcb
into
inc
lock
and
and
ss
or
adc
sbb
loope
loope
jno
push
push
push
ret
cmpl
insl
pop
ret
xchg
call
rorb
jno
mov
xchg
xor
ds
out
in
cmp
push
push
cmpsl
fisttpl
arpl
xchg
fs
xor
mov
sbb
mov
ret
jno
cmpsb
out
push
ss
mov
adc
xchg
in
data16
scas
rorb
jmp
stc
into
flds
fcmovne
add
mov
adcb
sbb
popa
test
aad
pop
dec
sub
in
test
mov
xchg
loopne
scas
cmp
imul
xchg
sbb
push
test
mov
xchg
daa
addr16
cmpsb
cmpsl
mov
inc
out
add
mov
dec
xor
cmp
xor
mov
shll
mov
insl
setnp
fsubp
mov
mov
leave
cltd
fsts
cmp
mov
adcl
test
aam
comiss
cltd
inc
data16
repz
cmp
adc
out
mov
push
sahf
sbb
mov
pop
shl
dec
push
dec
jns
daa
pop
imul
iret
jno
addr16
push
cwtl
push
stc
call
jb
sarl
cmp
cltd
pop
ds
cli
xchg
sub
pop
shr
ljmp
int3
insl
popa
sub
push
ret
in
testb
faddl
std
or
push
and
xchg
inc
inc
imul
lods
cmp
dec
adc
leave
arpl
cmp
out
xchg
insb
aam
ljmp
out
ds
mov
mov
mov
imul
cmp
int3
ss
ja
dec
scas
cli
ss
cmp
xchg
lods
add
pusha
sub
sarb
mov
loop
mov
scas
push
inc
leave
fsts
das
mov
jp
lods
sahf
pop
and
push
inc
jbe
orl
ljmp
aad
in
jge
sub
xor
ljmp
and
mov
cmp
jp
test
push
sbb
arpl
sbb
pop
ja
inc
xorb
stos
push
pop
add
les
mov
jbe
testb
dec
cmp
sbb
inc
xchg
stos
jl
xlat
out
dec
cmp
icebp
scas
dec
mov
repz
push
in
sub
cmp
fwait
notl
adc
add
fs
adc
ret
ror
or
add
lcall
mov
call
popf
pop
int
fldenv
cld
in
stc
lret
sbb
mov
lock
ret
xor
dec
jg
mov
insb
jb
jne
push
fistl
fiadds
shlb
push
imul
sbb
dec
or
pop
jno
loopne
loopne
adc
aas
ds
and
iret
mov
adc
call
mov
adc
daa
add
lret
jne
xchg
clc
mov
cmp
iret
repnz
jmp
cmp
clc
cmp
icebp
idivl
xchg
std
mov
shll
mov
sub
sbb
jl
inc
mov
pop
in
pop
je
jbe
xchg
add
addr16
add
inc
sbb
and
mov
xor
ficoml
cmpsl
jbe
cmp
fs
scas
adc
push
push
mov
sbb
adc
cmp
adc
int3
pop
mov
inc
mov
ficomps
mov
lds
add
pop
hlt
fptan
push
xchg
pop
mov
mov
add
xor
enter
out
lods
dec
push
aaa
jns
push
pop
xchg
lods
lea
pusha
mov
jno
and
jge
mov
out
or
movsl
aad
push
jbe
mov
ljmp
bound
dec
pop
fildll
pop
and
rcrb
aaa
movsb
adc
push
jns
inc
jae
and
jb
pop
in
pop
fwait
jg
xorb
xchg
push
or
lret
xorl
idivb
add
mov
xor
cs
xchg
scas
fcomps
sbb
pop
dec
dec
aam
imul
movsl
push
dec
jbe
mov
mov
fisttpll
sub
add
scas
inc
cltd
sbb
and
in
jbe
shlb
xchg
shlb
pop
xchg
cwtl
insb
xchg
jae
jmp
scas
add
jno
scas
jmp
push
ret
or
repnz
nop
sub
mov
repnz
xchg
repnz
dec
mov
test
xchg
mov
inc
mov
xor
pop
popf
and
mov
pop
fistps
xor
jg
pop
repnz
inc
mov
fisttpll
dec
nop
jo
inc
js
mov
mov
ds
sar
cmp
mov
mov
fwait
jbe
cmpsb
jno
jl
mov
add
jmp
sbb
adc
outsl
inc
jae
loopne
mov
add
add
popa
mov
or
xchg
push
or
lret
dec
push
adc
mov
out
jecxz
pop
sbb
std
xchg
add
std
sub
movsb
cmpsl
enter
xor
sub
cmp
call
into
adc
mov
ljmp
lret
cmpsl
cmp
mov
jb
fldenv
and
push
pop
lahf
inc
mov
popa
clc
lods
jae
sahf
xor
clc
divl
mov
in
lcall
aam
das
sub
sub
es
cwtl
mov
subb
sbb
cmp
cmp
cmp
repz
push
popa
sbb
or
movsl
lods
imul
gs
cmp
inc
pop
in
pop
push
fisubl
or
into
aas
adc
sub
in
dec
repz
jg
movsl
push
bndstx
add
je
lcall
inc
cs
mov
mov
in
lahf
mov
popaw
push
and
fcomps
cwtl
test
pop
or
out
fildll
idivb
mov
aam
xchg
fcomps
mov
add
and
pop
xchg
mov
stc
lock
dec
push
pop
xlat
add
out
adc
and
adc
pop
lcall
pop
int3
rclb
fwait
cld
add
pop
ss
out
push
cli
sub
mov
xchg
mov
movl
xchg
jle
mov
pop
inc
testb
jle
aam
mov
hlt
dec
enter
xchg
jmp
repnz
or
inc
std
pop
into
inc
mov
jecxz
lahf
mov
push
jle
push
sbb
cmc
int3
fiadds
int3
sbb
ja
aas
aam
and
aaa
sbb
fcmovne
push
clc
sbb
orl
adc
inc
icebp
cld
ljmp
test
stos
xchg
in
pop
or
cmp
jo
sub
fdivs
jecxz
ss
add
mov
dec
in
data16
jg
sahf
arpl
or
dec
out
fs
loope
dec
adc
das
data16
and
ljmp
sub
dec
jne
mov
shr
mov
pop
cmp
fcom
in
pop
mov
enter
sahf
jns
jmp
cmpb
es
jno
cwtl
inc
jb
inc
xor
push
xlat
mov
lock
mov
fcoms
fcoms
int3
mov
mov
push
movsl
push
jae
jae
jmp
das
mov
dec
mov
inc
push
sub
inc
xor
movl
sbb
bound
adc
and
xor
sub
mov
js
xor
mov
and
mov
cld
shlb
jge
test
lahf
jmp
jns
add
cmp
add
push
add
jmp
es
int3
mov
pop
xchg
out
pusha
mov
jb
xchg
dec
mov
mov
lahf
mov
nop
pop
clc
adcb
imul
dec
add
push
cld
pop
jle
mov
xlat
lret
fiadds
and
inc
cmpsb
pushf
or
test
into
stos
xchg
stos
sar
jo
and
sarb
cmpsl
test
scas
out
mov
outsl
mov
data16
mov
enter
sub
jno
xor
pusha
fs
mov
outsb
aas
stc
popa
arpl
mov
xor
fsubrs
cmc
sbb
fs
push
adc
dec
rcll
imul
fisubs
jnp
rol
ja
adc
pushf
inc
nop
xchg
mov
sub
aas
andl
push
pushf
jnp
repz
movsl
add
mov
pop
xchg
and
ret
pop
outsb
mov
lods
andl
inc
xchg
mov
xchg
push
and
test
scas
shl
pop
pushf
popf
xchg
jmp
mov
in
lds
daa
daa
push
cmp
insb
cld
lods
and
adc
cs
adc
aas
mov
inc
pop
push
in
insb
pop
cmp
pop
push
add
out
xchg
mov
clc
ret
ljmp
testl
mov
jne
xor
std
ret
incb
xor
fisttpl
into
pusha
lcall
xchg
and
ror
in
sbb
sbb
js
mov
pusha
pop
push
pop
lock
out
daa
ficomps
sbb
repz
lock
and
push
sti
stos
pop
mov
jnp
hlt
scas
mov
add
lds
xor
mov
dec
iret
xchg
js
call
inc
nop
scas
sbb
test
sbb
mov
int
out
addr16
jnp
mov
gs
cmp
pop
mov
clc
add
xlat
push
andl
popl
movsl
andl
sahf
add
xor
mov
mov
fwait
xlat
add
push
in
mov
mov
dec
push
js
call
sbb
subl
sub
in
adc
lock
sti
push
mov
pop
std
mov
shll
xchg
sub
les
jmp
xor
inc
test
bound
pop
mov
outsl
sub
xchg
pop
mov
add
sub
pop
loopne
js
inc
cld
dec
int3
xor
sbb
sub
int3
xlat
in
das
ljmp
lcall
jg
cmpsb
xchg
out
shlb
lock
std
out
cli
and
add
push
jae
add
and
and
push
incl
rorb
fisubl
rcll
inc
mov
dec
out
or
aaa
push
enter
addb
bound
and
repnz
enter
lods
imul
jo
dec
mov
stc
imul
aam
adc
int3
inc
and
rorl
cmpsb
movl
mov
dec
adc
dec
cmp
sbb
hlt
jg
mov
xchg
sub
lret
mov
loope
and
das
ss
bound
fidivrs
mov
inc
movsb
cld
add
dec
pop
cmp
fldt
fidivl
add
adc
rclb
sti
push
mov
mov
test
outsl
jns
mov
lahf
aas
les
int
or
jmp
xlat
mov
cmp
xor
lret
or
das
int3
shl
lcall
inc
sysret
mov
cmpsb
xchg
ja
adc
divb
repnz
insl
fs
push
push
stos
sub
pop
and
test
xchg
mov
fsubs
xor
ljmp
sub
movsl
cmp
out
clc
jns
lret
sbb
rcr
cli
cmc
and
fsts
jge
inc
in
mov
mov
lret
jnp
push
pop
mov
mov
xchg
pusha
push
lret
rcrb
adc
xor
scas
dec
add
or
mov
add
daa
arpl
jle
stc
dec
clc
pop
adc
jg
sbb
inc
sbbb
add
push
add
inc
int3
jae
jb
int3
mov
int
pusha
nop
and
pop
jge
and
push
sub
aas
dec
dec
outsl
jecxz
movsb
add
mov
or
mov
iret
or
mov
enter
arpl
dec
pop
xor
ja
sbb
adc
insb
ret
xor
xor
mov
mov
shlb
cmp
loopne
aaa
jb
sti
and
jge
lahf
out
adc
xor
mov
int3
xor
xor
cmp
movsl
mov
add
nop
mov
dec
add
xchg
fdivr
mov
fstpl
mov
sbb
int
jne
xchg
fsincos
pop
stos
sahf
xchg
push
mov
lods
xor
dec
es
cmp
lods
lods
push
inc
mov
frstor
add
out
fistps
test
pop
hlt
dec
xor
mov
push
idivl
int3
aad
adc
bound
lret
jecxz
out
mov
nop
mov
jbe
sbbb
repnz
xor
aad
push
pop
sbb
fstps
jmp
mov
std
sbb
sbbb
sbb
mov
sub
jg
fsts
out
andl
or
andl
fdiv
lahf
add
xchg
int3
sub
adc
data16
fyl2x
or
iret
mov
out
xlat
or
loopne
add
xchg
jge
testb
mov
jecxz
adc
mov
scas
xchg
ss
jle
movsl
mov
in
jne
push
jnp
pop
inc
mov
sahf
mov
stc
leave
ljmp
cwtl
lahf
test
ss
dec
add
xchg
clc
pop
pop
bound
imul
push
mov
jo
dec
ljmp
cmpsl
lfs
pop
and
divl
aam
pop
test
in
sbb
cmp
push
ret
cmpb
outsb
sbb
clc
scas
fiaddl
testb
xchg
int3
push
xor
mov
sbb
sti
cli
jecxz
xchg
ja
xor
push
and
jge
inc
pop
int
jno
sbb
mov
aam
inc
fisttps
cmp
int
jns
add
add
xchg
pop
xor
push
fcompl
xor
adc
popa
int3
mov
aaa
push
adc
in
shll
fsubl
mov
mov
es
loop
sub
push
push
orb
mov
mov
xchg
in
mov
mov
sub
pop
cmpsl
test
rorb
shlb
jle
mov
xor
xor
mov
loope
lods
fildl
xor
lret
lahf
mov
ja
mov
jge
or
in
cmp
ljmp
aad
cltd
mov
ret
aad
xlat
je
cmp
icebp
or
xor
lret
xor
fadd
or
fstps
test
fldl
sub
mov
inc
les
popa
add
scas
sbb
in
repnz
mov
adc
repz
sbb
push
pop
divl
lock
push
mov
int3
mov
mov
jl
dec
xchg
or
repnz
add
mov
popf
outsl
fcmovnu
in
adc
leave
pop
adc
cmp
sub
push
jmp
out
jl
dec
xor
psubusb
andb
sbb
xchg
mov
cmp
add
jbe
mov
clc
mov
jmp
ret
ja
lahf
sarb
xchg
insb
sub
sub
inc
les
test
xlat
out
or
nop
xchg
jmp
dec
nop
lock
cwtl
negb
mov
roll
in
mov
mov
fadds
mov
jae,pn
xchg
arpl
sub
or
xchg
mov
fnstcw
dec
icebp
pop
cmp
fwait
mov
jne
pop
lea
pop
out
pop
and
xchg
mov
mov
mov
cmpsl
cmp
mov
xor
incl
jmp
jae
mov
adc
addr16
addr16
pop
xchg
pop
cmpb
mov
push
mov
cmp
aam
fldt
shll
push
sbb
out
loope
out
lret
adc
lea
test
push
lcall
jno
mov
fdivs
mov
cmc
loope
jno
dec
inc
pushf
fsubs
cmpsb
cmpb
inc
test
cmp
dec
ds
mov
mov
lea
aas
inc
push
pop
pop
cmpsb
mov
and
cmpsb
adc
pop
mov
or
insl
cmpsb
cmpsl
adc
mov
jmp
jmp
push
jnp
cmp
mov
mov
push
enter
adc
in
fldenv
shlb
adc
push
ljmp
pop
add
cmp
sub
push
and
iret
popf
test
add
fsubl
call
imul
push
repz
lods
cld
inc
sub
mov
pop
jp
mov
cld
sti
popf
std
lods
mov
in
bound
and
mov
fsubr
xor
lcall
cmp
out
cwtl
je
push
jl
add
mov
add
mov
pop
jbe
stc
mov
insl
xor
arpl
cmp
cmpsb
mov
sti
stos
xor
mov
fdivs
xor
jo
add
or
es
icebp
push
xor
xchg
fs
or
inc
adc
and
pusha
sbb
int
hlt
pop
mov
mov
inc
push
mov
mov
mov
aas
notb
popf
mov
popf
jge
and
push
xlat
inc
adc
fisttpll
mov
shll
push
or
std
and
test
sub
loope
lahf
and
stos
ret
cwtl
pusha
push
in
cmp
cld
sbb
ljmp
sti
js
jg
push
and
push
xchg
mov
inc
scas
das
test
mov
frstor
sbb
mov
mov
sbb
aaa
iret
inc
into
push
mov
cmpsl
jp
std
push
pop
push
add
ret
adc
ret
and
stc
aam
dec
add
or
jl
push
fadds
cmp
fldt
sbb
outsl
pop
pop
push
je
scas
fsqrt
mov
pop
mov
addr16
cmp
push
jns
xor
fimull
push
jg
into
and
icebp
popa
mov
pusha
ss
mov
or
mov
mov
leave
xor
enter
and
pop
scas
adc
arpl
scas
lret
sbb
popf
inc
add
mov
out
push
add
pop
cwtl
fcomi
inc
mov
sbb
rorb
jns
push
mov
mov
inc
inc
push
aaa
xchg
or
cmp
sbb
dec
ret
add
add
pop
in
jmp
push
dec
shlb
repnz
dec
aaa
lock
cmp
hlt
mov
xor
adc
add
and
cmp
dec
add
inc
mov
mov
push
push
lods
hlt
inc
ret
mov
push
jmp
ds
jnp
xor
mov
and
jno
adc
mov
or
adc
xchg
mov
push
mov
sbb
and
jbe
fsubrs
shl
push
push
movsl
dec
fadd
addb
push
sbb
sbb
pushf
in
adc
stos
or
add
fisubs
xor
loop
repnz
push
cmp
lock
cmp
data16
fistpll
jl
or
sub
dec
ljmp
dec
inc
add
inc
mov
sbb
addr16
xor
lods
add
and
mov
sti
sub
ss
jle
push
rclb
test
call
jecxz
mov
cmp
ret
inc
insb
loopne
outsl
lods
adc
cmc
xchg
shufps
mov
jg
loop
js
and
cld
push
subb
scas
insb
enter
dec
jp
test
push
hlt
cmp
test
sbb
out
adc
push
and
pusha
or
jmp
ret
or
pop
movsb
sar
mov
cmp
adcl
aas
sahf
lcall
fisubrs
dec
pop
sti
dec
sbb
flds
jo
ret
std
jl
jmp
sbb
pusha
arpl
in
jns
test
stos
nop
cs
xor
push
int3
pop
lods
lods
daa
shl
mov
add
popf
and
sbb
jmp
testl
out
mov
mov
add
xor
or
in
dec
fucomip
adc
loop
jmp
adc
mov
out
mov
xchg
mov
test
test
fcmovu
xor
adc
rep
insl
jnp
pop
pop
push
xor
mov
ds
xchg
scas
mov
hlt
or
cmpb
lds
xchg
xchg
jae
jnp
xchg
shrb
push
push
fwait
mov
je
aaa
repz
ret
int
mov
and
sub
add
xchg
fstpl
or
fwait
inc
daa
push
fs
sub
jle
int
sub
arpl
xor
add
xchg
pop
outsl
lcall
pop
gs
out
sarb
push
xor
aad
out
sarl
icebp
lea
jbe
pushf
rcrl
repz
dec
mov
or
js
call
mov
fmuls
sbbl
push
sbb
iret
xchg
add
insl
ljmp
mov
push
dec
popa
lods
jae
push
lock
cmc
and
shrb
jnp
pushl
mov
rorl
mov
lcall
test
sahf
xchg
es
lock
mov
and
sub
mov
pop
movsb
mov
sub
sub
push
rcll
stos
jmp
adc
shll
push
cmp
scas
inc
sbb
mov
xor
addr16
iret
adc
inc
sub
adc
xchg
js
dec
sub
dec
add
ljmp
mov
mov
roll
add
jmp
add
mov
push
jg
pop
xor
add
stos
sbb
loopne
std
cli
mov
rclb
mov
adc
adcl
push
fmuls
subl
mov
pop
jle
cmpsl
pusha
mov
fstpt
popa
popa
loop
and
xor
lea
aad
mov
xchg
push
pop
adc
push
push
fmuls
pop
sub
push
ss
or
pop
push
push
add
pop
xor
int3
dec
mov
js
fnsave
fucompp
xor
sarb
or
daa
xchg
add
shlb
lret
fisttps
gs
pushf
dec
cmp
scas
cmc
jecxz
dec
pop
mov
xor
aas
or
nop
sbb
jg
or
sub
cltd
or
pop
dec
fisubs
jb
icebp
pushf
mov
push
xor
or
les
adc
idivb
jecxz
ret
pop
bound
sbb
mov
in
call
out
mov
mov
or
cmp
inc
adc
jmp
test
inc
aad
lcall
lods
rcrb
adc
adc
mov
xchg
or
jbe
adc
cmp
and
xchg
adc
xor
aas
adc
ficoms
popf
inc
lcall
dec
cmp
inc
subb
add
popf
sti
jl
imul
sub
int
jno
xor
loop
pop
gs
es
inc
xor
cwtl
in
addl
nop
add
pusha
cmc
rclb
or
dec
sub
push
fisttpl
sub
stc
pop
repnz
lods
xchg
clc
mov
fdivrl
xchg
or
je
add
dec
or
sbb
jl
adc
inc
push
sub
xchg
in
hlt
add
jae
cs
pop
adc
jl
add
cmpsb
add
inc
sarl
pushf
repz
mov
imul
aas
push
test
pop
pop
sub
in
stc
mov
outsb
xchg
setae
add
and
and
pop
push
outsl
sub
jae
jae
int3
sub
ds
insb
aas
lods
daa
mov
pop
js
jns
push
cmc
inc
addr16
es
ret
xor
movsl
mov
mov
inc
cwtl
sub
in
sbb
push
xchg
add
das
and
or
insl
add
sub
cmc
icebp
pushf
jne
adc
jo
scas
stc
xchg
fmull
push
sbb
inc
xchg
or
dec
and
imulb
push
mov
or
repnz
mov
sub
sub
jle
lods
fnsave
sbb
das
ret
push
inc
push
ret
jmp
das
sbb
loop
cmp
adc
jns
push
jns
push
loopne
fmuls
cltd
push
mov
psadbw
je
xchg
lods
xlat
jo
add
xchg
mov
inc
inc
out
stos
push
aaa
int3
movsb
cs
popf
leave
pushf
xchg
test
cmp
imul
jns
or
push
adc
pop
pop
cmp
imul
fbld
gs
clc
insb
xorl
inc
xor
pop
mov
push
aaa
adc
daa
ror
sub
shlb
xchg
outsb
dec
in
aam
loopne
mov
pop
dec
jg
pop
pop
sbb
mov
scas
sub
sbb
adc
cmp
add
or
dec
adc
movsl
call
pusha
push
aad
jp
in
push
mov
inc
popf
mov
sbb
cmp
loope
dec
cmpsl
push
mov
les
fidivrl
adc
dec
stc
stos
jge
cmp
xchg
fidivl
cmp
sub
jmp
mov
pop
dec
push
iret
das
sahf
dec
mov
inc
ret
loop
cltd
mov
dec
stos
inc
and
cmp
inc
jl
js
lret
int3
ds
cmpsl
lds
imul
pop
loop
movb
push
rcll
push
sbb
xchg
in
adc
mov
ret
shlb
xchg
sbb
sbbl
pop
and
jns
mov
sub
ficoml
mov
xchg
push
pushf
pop
and
mov
add
xor
mov
pmaxsw
jp
and
lds
or
cmp
mov
xchg
cltd
inc
in
cmp
fs
ret
into
test
subl
or
xchg
scas
mov
cmp
pop
mov
scas
xchg
mov
sti
jbe
mov
das
fstpl
fincstp
mov
sub
in
adc
push
fnstsw
or
shrl
mov
in
xor
mov
ljmp
or
xchg
out
movl
rorb
push
sarb
cmp
dec
imul
out
popl
sbbl
rcll
cmp
adc
jg
sub
sbb
sub
xchg
aaa
mov
mov
and
or
jl
ja
sub
push
bound
xor
lods
cs
push
roll
std
ss
test
movsb
mov
loope
sbb
cli
add
das
clc
push
ficompl
mov
scas
mov
rorb
stos
dec
insl
lods
and
aad
adcl
or
fidivl
jbe
sbb
movsb
xor
mov
xchg
mov
mov
xchg
push
dec
push
pop
shr
sahf
mov
xchg
mov
out
aam
cmpsb
push
movl
ds
mov
lret
scas
idivb
in
pop
mov
daa
sbb
mov
mov
je
mov
shl
jg
jnp
int3
pop
xchg
imul
into
mov
loopne
push
out
daa
arpl
movsb
sbb
push
or
in
adc
les
stos
lret
add
cmp
mov
xchg
push
fistpll
int
fsubrs
fucomp
in
mov
bound
xor
xchg
arpl
bswap
lea
or
shlb
clc
or
jns
inc
scas
xchg
xchg
sbb
adc
inc
je
xor
mov
pop
xor
jg
imul
cmpl
call
jbe
pop
in
rcr
push
jns
addb
push
rorl
jb
push
out
in
fists
or
inc
and
fidivrl
scas
dec
fldl
sub
add
stos
cmp
xorb
jecxz
and
sar
xor
inc
pop
xor
cmpsb
leave
imul
jno
push
sub
notl
adc
sbb
sub
hlt
cmpsb
les
sbb
gs
cmp
xor
pop
sti
cmpb
scas
iret
sub
arpl
jle
cmp
jbe
les
push
adc
push
les
pop
sarl
sbbb
or
or
push
inc
fstpl
inc
pop
out
hlt
stos
jge
fbstp
mov
adc
mov
leave
inc
in
mov
ds
js
hlt
mov
push
adc
imul
loop
sbb
fcmovb
pop
in
in
jne
adc
xor
mov
mov
lds
ret
enter
icebp
inc
adc
loop
mov
aam
add
inc
and
and
sbb
xlat
nop
jns
dec
inc
adc
insb
arpl
scas
int
and
cmpsl
jns
aam
dec
bound
sbb
nop
das
lods
dec
jns
pop
outsb
repnz
sub
in
and
sub
rcrl
fsubrs
into
xchg
jle
shrl
pop
cmpsb
jbe
mov
mov
sbb
jecxz
sub
and
stos
sub
sub
jecxz
mov
cli
pop
rclb
mov
dec
shlb
adc
rorl
repz
xchg
lea
xrelease
push
xchg
adc
das
jp
loopne
insl
mov
jp
jle
dec
inc
pop
dec
dec
xchg
clc
das
fldl
push
pusha
and
xchg
lret
jmp
jecxz
cmpsl
in
push
fmuls
js
fadd
sahf
movsl
sub
pop
icebp
add
dec
inc
cmp
repnz
push
mov
arpl
push
movsb
fisubs
lods
lds
mov
fnstcw
mov
xchg
loope
and
adc
cmp
mov
sbb
icebp
test
pop
lods
pop
add
imul
mov
sub
jbe
xchg
cli
sub
pushf
inc
mov
icebp
add
sub
or
jg
loop
scas
and
repz
add
jo
xorl
push
shll
in
call
ja
jp
dec
imul
mov
lods
or
aas
jmp
and
cmp
lea
and
cmp
iret
mov
jg
loope
int
cmc
std
fildl
insb
mov
scas
push
orb
push
inc
ss
cmp
lret
and
lret
jns
mov
fs
testb
mov
push
jge
adc
add
enter
push
mov
or
xor
pop
push
push
cmp
movsb
es
jp
inc
stos
aam
popa
or
mov
test
cli
xchg
into
add
test
outsl
jb
pop
in
or
stos
inc
or
outsb
stos
mov
inc
xchg
xlat
dec
loopne
pop
jecxz
fwait
mov
cmp
push
pop
test
push
pusha
in
shl
mov
sbb
test
inc
in
dec
mov
daa
pop
cltd
sbb
in
mov
cld
stc
mov
sbb
push
sub
inc
std
inc
or
pop
add
test
pop
cwtl
mov
add
or
dec
xlat
or
cmp
nop
hlt
mov
add
ficoms
popf
dec
scas
sbb
loop
inc
adc
or
ss
xlat
add
sbb
dec
and
pop
mov
lret
sbb
dec
roll
dec
mov
mov
je
loop
sbb
test
shll
push
popa
mov
aad
leave
iret
ret
insb
push
fisubs
cmp
dec
idivb
push
sub
lahf
sub
std
jp
push
movsl
loope
dec
std
loop
lret
mov
addr16
test
stos
mov
leave
mov
dec
in
add
mov
sbb
fs
mov
pop
jmp
push
xorb
xchg
inc
jbe
outsl
ret
outsl
and
sbbl
ret
xor
pushf
addl
mov
bound
inc
jge
aad
aaa
mov
or
pop
mov
pop
pop
mov
bound
mov
fdivp
aad
lret
xor
cli
mov
xorb
jecxz
mov
fisttps
push
or
push
les
test
push
insb
hlt
push
clc
inc
lcall
into
jle
lcall
fmuls
inc
imul
jl
int
add
fsub
addr16
xor
arpl
int3
mov
mov
sbb
mov
pop
and
ss
or
negb
or
fisubs
sbb
push
out
lds
xchg
test
and
jo
xchg
push
xchg
mov
rcll
inc
test
fistl
push
outsl
cld
sub
pop
cmc
aaa
and
scas
stos
cld
mov
adc
mov
andb
jne
pop
inc
movsb
stos
fists
mov
mov
imul
and
mov
shr
pop
push
fists
call
in
push
push
cmp
mov
stos
jge
int
sub
movsl
test
das
jl
xchg
out
cmp
xchg
es
arpl
inc
rcrl
push
pop
arpl
add
lahf
and
dec
mov
cmp
lahf
sete
sbb
mov
mov
xlat
xchg
inc
scas
ja
loope
scas
mov
fldcw
outsl
cs
rcll
es
dec
cmp
jp
adc
adc
and
cltd
fisttps
cwtl
outsl
leave
cmp
inc
lea
mov
or
push
aas
pop
mov
push
or
pusha
aaa
daa
dec
cltd
push
cld
ja
in
mov
subb
xchg
rcrb
ja
or
xchg
js
pop
push
icebp
movsl
insb
arpl
sbbb
add
inc
dec
nop
or
out
add
pushf
inc
aas
inc
cs
jne
fisttpll
xchg
shll
movb
es
xor
pop
sbb
out
dec
push
adc
scas
add
sbb
adc
faddl
inc
aam
shlb
lcall
insb
mov
xchg
pop
out
in
add
in
inc
or
arpl
xchg
notl
ret
add
outsl
insb
fisubrs
out
jns
stos
daa
xlat
sbb
push
xor
dec
repnz
fwait
in
imul
adc
jge
cwtl
xor
dec
sub
clc
jo
dec
out
jp
mov
cmp
and
fistps
loopne
div
cltd
cmp
lea
nop
std
pop
mov
jmp
mov
jmp
jle
xor
xchg
pushl
out
xchg
push
add
mulps
sub
fisttpll
pop
ds
dec
and
pop
sarl
jecxz
fwait
push
xchg
cli
mov
add
dec
outsb
pop
lods
cmp
adc
and
mov
push
or
cltd
mov
cmpsl
jmp
hlt
mov
notb
cmp
xchg
mov
jg
inc
cmp
jecxz
loope
xchg
xor
inc
xor
mov
xor
or
xchg
inc
pop
xchg
div
adcb
or
dec
mov
add
dec
rcrb
sub
add
repnz
jp
repz
inc
adc
sub
fsubs
xchg
mov
int
paddw
push
ds
std
aad
orb
out
popa
and
mov
das
into
jecxz
inc
hlt
push
nop
ret
sahf
push
pop
sub
lock
popa
fcomps
in
or
les
pushf
call
mov
out
push
sbbb
xchg
leave
mov
jp
add
and
or
or
and
stos
neg
mov
xor
sub
out
sti
fcomp
ret
call
jmp
dec
mov
sbb
and
das
test
adc
cs
xor
and
insb
loope
clc
cmp
dec
jno
jo
ret
bt
pop
or
lgs
sbb
loope
loopne
insl
or
stos
dec
push
mov
out
in
mov
icebp
icebp
jge
sbb
xor
sub
lods
sti
sub
lods
cmpsb
xor
and
jne
andl
mov
dec
and
incl
icebp
in
xor
ja
ja
or
jne
outsb
icebp
adc
pop
and
icebp
sub
sbb
dec
mov
loope
inc
out
add
stos
pop
stos
sbb
shrd
adc
jnp,pt
lods
cli
xor
pop
fidivrs
adc
push
xor
pop
lods
ds
jbe
mov
xchg
decl
aam
outsb
cltd
sub
fs
adc
inc
cmp
pop
stos
xchg
frstor
pop
add
hlt
adc
scas
pop
or
fsts
or
sbb
push
test
xchg
mov
xor
icebp
lahf
sahf
scas
fiaddl
sbb
jp
xor
or
push
lahf
inc
sbbb
jne
push
or
xor
aaa
xor
cmpb
add
pop
scas
cmc
cmc
aad
cmpsl
fiaddl
movsl
fists
les
dec
bound
fcmovbe
dec
aad
lahf
push
push
mov
jo
adc
les
out
popf
frstor
push
jnp
js
idiv
aaa
xor
pushf
ret
sub
out
loop
cmpsl
push
int3
jno
jge
insb
lock
sub
pop
js
push
aad
js
aaa
push
mov
xor
ss
sahf
push
sbb
pushf
orl
call
push
xchg
and
clc
push
adc
add
jbe
out
xlat
add
pushf
cwtl
nop
data16
popa
dec
cmp
fistps
mov
jnp
sub
dec
sbb
mov
outsl
or
ficomps
fsubp
push
jge
lret
popf
cmp
adc
hlt
mov
pop
dec
add
xchg
sbb
xor
dec
dec
repnz
pop
movsl
pop
mov
shll
lock
or
jge
xlat
add
popf
jge
push
aas
xor
push
xchg
addr16
push
inc
sahf
enter
bound
jnp
or
mov
movsb
inc
daa
je
adc
jb
lds
adc
out
test
pop
mov
out
mov
sar
sub
xchg
mov
sub
addb
mov
mov
adc
mov
sub
sub
jp
and
lock
lock
dec
addl
test
cmp
mov
cmp
test
jbe
add
mov
popa
sub
movsl
dec
add
out
push
je
filds
pop
push
jnp
push
xchg
aaa
sbb
adcl
cs
xchg
das
cmc
dec
mov
fwait
ucomiss
arpl
arpl
xchg
js
adc
inc
mov
or
hlt
mov
jnp
movsb
and
sbb
fsubp
xor
xchg
sub
and
cmp
jo
adc
mov
mov
cmpl
xor
stos
dec
sbb
push
or
push
mov
iret
inc
cmp
jns
mov
xor
jb
imul
or
mov
es
adc
jb
pushf
pop
sbb
pop
inc
dec
out
mov
push
add
fisttpl
xchg
dec
jp
or
or
cltd
mov
ja
pop
mov
push
cmp
ljmp
or
in
push
fs
jp
pushf
push
in
repnz
mov
xchg
stos
mov
icebp
or
push
lods
addb
std
lds
lods
xor
dec
test
xor
popa
ret
mov
and
mov
jmp
mov
enter
imul
or
xor
lret
mov
adc
cmc
rorb
movsb
sub
bnd
push
inc
add
xor
push
movsb
adc
add
in
ss
cli
fadd
rorb
sbb
mov
es
nop
sub
loop
rcll
pop
sbb
out
arpl
cmp
push
cmpsb
xchg
sub
pop
add
test
mov
xor
in
xor
cmp
pop
push
popa
push
pop
rcrb
push
dec
mov
lea
movsb
repnz
pop
cmp
sbb
sub
dec
fwait
sbbb
sbb
out
icebp
push
outsl
or
xchg
inc
sub
mov
mov
paddsw
add
cli
mov
aad
push
mov
aam
icebp
cmp
insl
jmp
sbb
hlt
cs
sub
mov
xchg
bnd
loopne
inc
jnp
cmc
in
cwtl
clc
cli
mov
out
leave
orl
stos
add
sbb
jnp
sbb
jl
shll
push
push
dec
jne
cmp
sub
orb
mov
sbb
pop
data16
outsb
popa
adc
add
movsb
xor
sub
jne
xor
scas
xchg
jmp
mov
out
jmp
dec
out
js
mov
mov
data16
lahf
popa
push
nop
inc
xor
cmp
out
add
fwait
xlat
int3
leave
ljmp
or
adc
scas
or
out
jmp
adc
cmpxchg
icebp
lret
lahf
pop
pop
rcrl
jl
push
mov
inc
aas
test
pop
push
pop
lods
popf
cmpsl
mov
cli
popa
dec
pop
push
pop
pushf
outsl
hlt
pop
shlb
pop
in
jb
dec
dec
xor
cmp
pop
cmp
fs
jle
xchg
mov
adcl
jle
xchg
adc
lea
scas
add
in
rol
gs
rolb
jle
push
sub
mov
negb
cs
jae
inc
and
or
lret
fcompl
mov
ss
cmpsb
jne
push
outsl
mov
out
push
jnp
addr16
lret
pop
xchg
insl
fucom
adc
jne
imul
call
sub
js
cmp
je
in
jae
pop
xchg
pop
mov
or
rcll
fwait
cwtl
outsl
fistpll
sbb
jle
xchg
popa
xor
fiadds
push
test
pop
jecxz
xor
cmp
cmpsl
sbb
pop
mov
jmp
inc
into
std
sbb
sub
or
push
mov
scas
fimuls
push
es
mov
das
mov
adc
cmp
pop
mov
nop
add
jno
gs
scas
push
in
test
and
dec
pop
je
dec
shrb
pop
les
fnsave
lret
jb
fisttpll
or
jmp
ds
mov
mov
movsl
cltd
adc
push
jns
shll
pop
xchg
int
add
push
sahf
sub
in
jmp
ljmp
adc
lahf
push
sbb
movl
arpl
push
xchg
jmp
test
jo
jp
push
test
jbe
iret
add
repz
movsb
pusha
mov
aam
push
add
test
rcr
pop
cltd
dec
insl
push
pop
xor
jle
gs
jne
adc
shlb
xchg
fnstsw
std
mov
jg
jp
test
jbe
hlt
mov
mov
mov
inc
sbb
fimull
out
loope
sbb
xor
and
inc
out
jg
dec
or
ja
out
mov
mov
add
rcll
pop
cld
jnp
insl
cmpsl
fwait
push
ljmp
adc
lds
pop
and
test
in
jne
push
sbb
rorl
adc
add
add
fprem1
fcomps
movsb
gs
js
rep
sub
ja
dec
testl
xlat
inc
popf
lcall
cmpsb
mov
test
jnp
sbb
lahf
fildll
pop
fstps
out
inc
out
pop
cmp
push
out
and
inc
xchg
out
shr
dec
xchg
inc
dec
push
in
jae
rolb
ror
mov
mov
lock
pop
dec
out
aas
inc
sub
scas
push
mov
cwtl
xor
mov
xchg
mov
adc
stos
jns
int
mov
les
pop
imul
sub
mov
shlb
jbe
lret
inc
jge
mov
cmp
int
pop
push
push
mov
cmpsl
cmp
push
enter
int3
push
popa
pop
mov
ss
test
int
subb
into
add
stc
cmc
arpl
mov
pop
and
sar
fadd
addw
roll
dec
loopne
pusha
and
lods
xor
mov
mov
add
sqrtps
mov
test
sbb
xor
movsl
lret
inc
cmp
or
aaa
test
addr16
cmp
push
add
popa
stos
sbb
push
incb
test
sahf
cwtl
sub
aas
xor
test
imul
or
add
movsb
add
push
inc
xor
hlt
cmp
xor
jecxz
cs
dec
or
sbbl
icebp
mov
pop
mov
jmp
ss
mov
loopne
fidivl
sahf
fnstcw
mov
xchg
sub
rorl
cmp
or
sub
xchg
sbb
push
fsubr
nop
notl
aad
jle
or
or
nop
push
pop
jns
sub
sub
out
out
repz
test
pop
pusha
xor
and
rcl
xor
fisubrs
rcl
xor
rolb
loop
lods
std
inc
inc
stos
mov
cmc
xchg
dec
and
push
jp
push
add
sti
push
pop
les
popa
mov
xlat
icebp
jne
xchg
popf
icebp
xchg
aas
jo
xchg
outsl
sub
es
rcr
push
pop
jae
xchg
lret
mov
repnz
mov
jbe
popf
test
iret
inc
inc
std
dec
jle
sbb
pop
sub
ja
daa
imul
cld
jb
das
and
ss
mov
dec
push
mov
out
aam
xchg
sti
jmp
adc
cli
sub
insl
jp
inc
push
jg
mov
xor
pop
lret
mov
add
xchg
mov
rorb
std
jne
je
test
cwtl
push
jo
repz
jnp
stos
insb
push
cmp
jns
aad
sbb
data16
xchg
mov
test
call
fmuls
and
jmp
mov
or
mov
pop
cltd
jp
ret
or
push
cmp
outsl
addr16
ss
dec
sbb
adc
dec
pop
cmp
pop
mov
sahf
stc
insl
ss
mov
jecxz
data16
test
sub
sbb
inc
mov
sahf
iret
loop
fstpt
push
push
das
ja
mov
cld
lods
or
insb
scas
cmp
mov
clc
sti
push
mov
gs
shlb
pop
flds
jp
cmpsl
in
xchg
dec
nop
push
mov
mov
stos
dec
std
inc
lahf
xor
ds
cmp
jb
jle
lret
clc
out
movsl
iret
bnd
leave
loopne
add
ja
mov
inc
sbb
daa
cmp
outsb
sbb
adc
les
mov
fcoml
incb
cmp
jb
arpl
in
push
push
inc
fbstp
repz
pop
call
les
pop
outsb
dec
cld
orb
lret
jo
rcrb
cmc
repnz
add
mov
push
mov
mov
dec
adc
inc
in
or
xor
pop
dec
pop
cmp
cli
fwait
aas
lock
into
mov
insl
out
sbb
dec
clc
adc
enter
cmp
jl
rorb
cli
cmpb
cmp
dec
insl
sub
inc
hlt
and
push
aam
mov
test
es
lds
es
jle
mov
sub
ss
inc
adc
mov
arpl
sub
lock
sub
mov
mov
or
dec
dec
cmp
jnp
nop
lds
sbb
jl
jo
stos
add
es
and
mov
cmpsb
push
adc
add
xor
stos
aam
push
push
data16
aas
inc
jmp
mov
add
into
nop
flds
fmulp
add
push
push
jle
add
out
and
push
sbb
xchg
movsb
xor
int3
sbb
mov
mov
add
aaa
hlt
pop
sbb
sub
adc
add
iret
dec
leave
je
sub
xchg
jae
sbb
add
xor
or
sub
lahf
pop
push
add
mov
ds
pop
call
movsl
push
adc
clc
and
inc
ljmp
sub
xor
je
sbb
adc
xchg
sahf
jne
pop
xchg
push
mov
mov
mov
cmp
add
adc
push
inc
ds
jg
mov
push
hlt
cmpsb
or
pop
jmp
sub
testl
sub
xlat
dec
fbld
jmpw
cld
imul
into
sbb
xor
sub
aaa
pop
pop
inc
or
in
push
das
test
fs
jp
jge
into
pushf
jno
dec
enter
xchg
test
ret
xchg
les
cmc
pusha
decl
pop
xor
fcoms
cmp
test
ret
lods
xchg
repz
sub
cmp
ret
push
insb
add
xchg
rcl
cmp
push
add
adc
mov
lods
push
loop
cld
pop
imul
sarl
mov
cmpsl
dec
jecxz
push
inc
int
cmp
xor
cmpsb
mov
cmovnp
pop
lcall
pop
jae
pushf
out
dec
stc
enter
sub
hlt
or
inc
push
mov
jmp
sbb
das
das
xchg
mov
xchg
pop
mov
lea
inc
jnp
cwtl
sub
mov
in
cs
sbb
mov
imul
or
mov
xchg
mov
test
outsb
mov
lock
xchg
and
pop
hlt
adc
js
lret
rolb
cmpsb
dec
scas
shll
clc
int3
cmp
inc
adc
fisttpll
stc
sar
mov
mov
xchg
push
mov
pusha
or
leave
push
pop
add
mov
dec
ds
adc
data16
ss
pushl
mov
hlt
cmpsl
dec
add
jecxz
push
adc
xorb
mov
xor
xor
leave
mov
and
mov
int
mov
lock
out
mov
add
or
push
mov
and
into
int
ret
inc
xor
adc
jns
mov
mov
popf
je
hlt
push
bound
push
fadds
inc
ljmp
xchg
sti
mov
lret
pushf
icebp
inc
xchg
xchg
out
movl
xor
and
xor
into
stos
cmp
push
and
xchg
ljmp
fwait
jle
leave
and
test
push
sub
pop
adc
int
in
das
xor
jmp
push
imul
lret
ljmp
js
pushf
roll
lcall
dec
mov
sbb
push
lahf
mov
xchg
mov
mov
subl
test
xor
sarb
sbb
shrl
cmp
scas
js
adc
int
hlt
jae
mov
addl
mov
sub
ds
cmc
and
inc
xor
fcoms
cmpsl
mov
push
jp
dec
mov
je
mov
gs
mov
and
lret
mov
bound
das
or
les
int
dec
imul
jg
mov
jmp
push
inc
adc
test
sbb
outsl
pop
in
popa
mov
loopne
in
cmp
sub
push
scas
adc
push
shl
fbstp
pop
push
cmp
mov
cmp
lock
mov
add
mov
js
jecxz
je
pop
ja
inc
adc
rcll
rcrb
mov
cltd
sbb
push
xchg
es
push
dec
fsubs
mov
faddl
rol
mov
sarl
adc
or
dec
mov
xchg
sbb
iret
xor
imul
shrb
mov
dec
xor
adc
pushf
jo
inc
mov
sub
cltd
xchg
add
lds
out
dec
movsl
sbb
jle
aaa
call
dec
faddl
dec
sahf
jmp
test
pop
jne
inc
mov
pop
and
out
es
mov
nop
in
cmp
in
clc
xor
xchg
pop
mov
and
or
mov
out
in
adc
dec
jmp
leave
xchg
cmp
dec
test
inc
in
fidivl
sub
push
sti
pushf
test
xchg
lods
mov
mov
cmp
dec
sahf
js
and
and
jp
out
fnstsw
out
dec
stc
lods
xchg
add
gs
pop
fstl
push
push
das
sbb
inc
popa
jmp
xchg
pop
adc
pop
fdivl
xor
iret
mov
pusha
adcb
and
jge
and
add
movsl
sub
pop
loop
mul
dec
daa
xor
aaa
push
popa
stc
out
mov
fwait
cmp
jb
adc
rcll
mov
pushf
mov
mulb
pop
test
jae
add
inc
adc
int
cmpsb
sti
sub
inc
cli
popf
jg
sbb
call
dec
dec
push
in
mov
mov
add
adc
loop
jp
dec
and
xchg
test
in
adc
mov
or
insb
sahf
jo
popf
das
dec
pop
fnstenv
cwtl
or
leave
daa
inc
movsl
imul
mov
lret
bswap
ret
dec
xchg
mov
aad
or
pop
aaa
sbb
mov
xor
rorb
cltd
das
mov
fdivs
in
push
dec
call
iret
push
xor
ljmp
pop
dec
add
mov
and
add
adc
pusha
sahf
sub
js
or
iret
jmp
out
fadds
leave
push
xor
inc
fcompl
mov
cmc
inc
loopne
mov
aam
insl
in
jne
fwait
adc
pop
and
xchg
fbld
lahf
jae
mov
jb
adc
icebp
ja
or
push
push
inc
test
pop
cmp
dec
sbb
popf
cwtl
jp
pop
outsb
mov
std
mov
and
push
leave
movsl
mov
das
xchg
fbld
inc
bound
cld
ret
insb
sbb
aas
adc
loopne
mov
shlb
popa
adc
gs
and
push
es
repz
xor
or
mov
sahf
stc
cmp
sti
ret
add
shrb
sub
xchg
inc
imul
stc
dec
push
es
and
bound
sub
push
mov
lea
dec
push
in
dec
xchg
jge
xor
xor
fistl
inc
movsb
pop
jl
into
push
push
rolb
inc
movsb
lods
cmp
mov
in
gs
outsl
mov
aam
ret
ficomps
cmp
ficoml
js
imul
clc
rolb
fcoml
hlt
and
inc
cmp
xor
adc
cld
push
lock
movsl
pop
or
add
mov
jg
lret
in
imul
inc
push
mov
and
rorb
add
add
sbb
cli
dec
jne
loope
jo
lahf
fcoms
fwait
mov
push
sbb
lods
daa
xor
rcll
test
repnz
psubusb
or
xchg
add
mov
stos
arpl
leave
push
inc
lods
mov
mov
xchg
leave
xor
stos
testb
jl
or
mov
jecxz
pop
fildl
scas
int3
mov
cld
inc
mov
adc
add
hlt
data16
into
xchg
out
push
repnz
adc
ficompl
loop
lds
outsl
in
or
psadbw
dec
rolb
cmp
push
pop
clc
xchg
jne
das
in
inc
dec
ret
sti
push
sub
ret
add
and
sti
js
out
jo
cmp
add
mov
mov
mov
xchg
sbb
mov
xor
shl
js
call
mov
cmpsl
xor
aam
jne
inc
sbb
test
nop
cmp
dec
jo
sub
stos
sub
sub
aad
rorb
push
push
sahf
mov
out
push
mov
sub
sub
test
leave
data16
mov
fwait
in
adc
sbb
insl
pop
dec
stc
pushf
ret
cld
mov
jmp
xchg
fwait
ret
mov
xchg
mov
in
sub
leave
js
icebp
fidivs
xor
cs
ret
cmc
out
or
data16
xchg
iret
dec
push
shrl
fisttpll
lret
pop
xchg
push
inc
adc
ret
fmulp
lret
mov
imul
iret
sub
inc
in
sub
sbb
aaa
lods
xlat
pop
cmp
bound
mov
insb
cmp
shlb
sbb
fucom
push
pop
pop
call
jmp
mov
xchg
push
or
pop
int
shll
loope
lret
pop
xchg
xchg
push
cmp
aad
and
push
mov
insl
mov
or
inc
add
in
divl
pop
jb
mov
mov
jb
push
and
dec
pusha
idivl
adc
xlat
sbb
dec
dec
out
sbb
pop
add
adc
stos
jp
stos
pushf
cs
orb
jns
das
mov
pop
imul
mov
leave
int
mov
popf
sbb
mov
sub
pusha
cmp
jmp
cs
pusha
nop
pop
jge
mov
xchg
mov
adc
stos
test
pop
and
call
insl
push
mov
lahf
hlt
dec
mov
push
and
bound
jbe
mov
or
int
loope
bound
xchg
mov
movsb
inc
xchg
push
lea
dec
into
inc
adcb
mov
idivl
shlb
pop
inc
mov
out
std
sbb
sbb
dec
sub
inc
adc
lret
xlat
jns
jg
adcl
loop
hlt
lret
loopne
nop
and
jp
insl
push
adc
insl
fistps
mov
stos
pop
aaa
popa
cmp
xor
fisttpl
scas
outsl
cli
xchg
add
aaa
and
popf
sub
add
cmc
popa
pop
test
jb
ret
rcll
add
jecxz
xor
repz
cmp
dec
lods
pop
sub
fwait
lea
xor
out
mov
popf
aas
and
fstpl
or
mov
mov
subb
xchg
out
int3
cmpsb
or
shlb
testl
clc
mov
js
and
stos
mov
repz
mov
add
inc
adc
adc
pop
in
jns
sar
cmpsl
adc
bound
lods
pop
in
repnz
rcll
lret
mov
lods
insl
int3
jbe
test
pushf
frstor
cwtl
test
xchg
add
rcrl
add
je
mov
pop
fcmove
and
outsb
cmp
adc
out
mov
cmp
inc
sub
movsb
arpl
loop
adc
cmp
jge
jae
enter
lods
mov
adc
pop
lods
test
dec
daa
arpl
das
sub
mov
shrb
sub
mov
push
hlt
cs
xor
pop
xchg
je
pop
xor
test
jno
test
jmp
mov
pop
hlt
jne
icebp
and
cmp
jnp
ds
mov
aam
arpl
call
cwtl
xchg
pop
sub
pop
lret
daa
cmp
movsl
inc
aam
cld
mov
mov
inc
cmp
sbb
lock
movsl
inc
inc
jecxz
data16
lret
std
pop
inc
xchg
xor
bound
mov
lds
shl
dec
pushf
mov
sbbl
cmp
push
mov
insl
call
and
xchg
jb
cld
data16
dec
cmp
sbb
js
ljmp
dec
iret
arpl
incl
inc
lea
jecxz
enter
in
arpl
push
in
pop
aaa
fnstenv
jl
stc
daa
out
xchg
mov
mov
out
xchg
sbb
in
scas
push
dec
out
dec
cld
mov
fnstsw
imul
icebp
dec
lret
mov
gs
test
daa
xchg
js
push
inc
xchg
stc
cmp
insb
push
mov
mov
jle
dec
aam
iret
jp
xor
imul
or
in
test
in
inc
pop
inc
dec
mov
and
insb
cs
repz
mov
cmc
leave
test
orl
lods
dec
ret
lcall
inc
mov
mov
cmp
mov
pop
or
mov
std
xchg
adc
jbe
and
rcr
popf
adc
and
adc
xchg
and
popa
push
lret
inc
rcll
jae
or
cmp
lea
xor
hlt
cli
insb
sbb
push
lods
inc
sub
push
out
xor
push
pusha
icebp
xor
es
adc
jg
xchg
mov
add
lock
dec
xchg
and
mov
push
jl
ret
cltd
stc
popl
stos
sbb
sub
add
add
jns
ret
pop
mov
pushf
in
sbb
push
sbb
in
scas
stc
push
mov
rcll
fldcw
shll
add
cltd
dec
lods
call
mov
sbb
testl
xchg
stos
xchg
and
pop
loopne
jp
into
fadds
jp
sub
sbb
jg
mov
adc
pushf
movsl
xchg
xor
mov
push
mov
add
push
push
jnp
jb
test
dec
add
jno
and
call
sahf
aad
loopne
test
aad
rcrl
fcoml
add
dec
in
sti
xchg
jo
lcall
xor
mov
mov
push
add
pop
pusha
lock
insl
or
in
xor
push
subb
movsb
out
cmp
ret
mov
push
ja
insb
and
fs
repz
lods
arpl
fists
rcll
gs
sub
call
mov
shl
pop
ja
cs
icebp
outsb
shrb
jmp
dec
scas
sub
xor
pop
add
ror
mov
and
mov
jmp
pshufw
mov
icebp
pop
and
inc
push
jbe
mov
dec
mov
fnsave
subb
dec
sbb
dec
jmp
sti
cmpsl
cltd
into
mov
sub
sti
mov
mov
xchg
dec
sbb
ss
iret
daa
and
cmpsb
pusha
inc
dec
sub
sbb
sti
lock
les
mov
movsb
and
push
jne
test
test
pop
push
add
sar
cmp
imull
call
iret
stos
jns
fimuls
pop
jne
xchg
stos
movsl
jmp
movsb
sti
and
sti
cld
sbb
sub
mov
xor
hlt
ffree
gs
pop
pop
lret
cmp
sub
incl
or
shlb
sbb
jle
mov
mov
test
call
jl
mov
jmp
es
outsb
stc
sub
imul
add
aad
cmp
sub
dec
test
js
insb
mov
test
imull
push
loopne
loop
mov
rcll
xchg
lock
xchg
leave
jae
jae
popl
xchg
dec
push
dec
pusha
fimull
dec
sbb
mov
pop
pop
push
fucom
adc
rcrb
roll
pop
ss
xlat
iret
out
shlb
add
mov
sbb
sub
jnp
cmp
dec
pop
dec
mull
inc
mov
jno
in
mov
mov
pop
lret
sub
cmp
repz
xchg
and
out
xor
rorb
movsl
sub
js
dec
orl
movsl
arpl
lret
inc
lods
add
push
in
pop
add
xchg
fidivl
lea
lret
push
gs
daa
movl
call
pop
adc
push
fidivl
push
adc
sbb
imul
push
sahf
sbb
push
cmc
and
movb
js
inc
inc
sahf
pushf
sbb
sbb
sbb
int
jnp
iret
jbe
adc
out
mov
push
repz
jae
pop
dec
in
inc
push
inc
ljmp
cld
inc
pusha
mov
push
pop
cmc
and
jecxz
shrb
add
cwtl
jns
and
clc
out
xor
mov
sbb
nop
lods
mov
add
mov
push
insl
sub
jno
rclb
lds
dec
in
xorl
mov
jmp
bound
dec
jl
mov
add
fwait
and
cli
sti
roll
inc
jle
mov
test
test
insb
mov
jne
add
int
mov
add
push
jle
sti
in
lret
cmpsl
hlt
es
hlt
ret
and
gs
add
mov
mov
in
mov
xchg
decl
inc
mov
mov
fdivrl
jmp
dec
jmp
xor
add
mov
jp
scas
mov
sbb
jg
mov
fcoms
add
jl
sub
jb
cld
test
jp
cmc
ljmp
mov
js
jnp
push
in
mov
inc
dec
adc
sub
xchg
in
loopne
pop
add
inc
dec
pop
xlat
add
test
fincstp
and
pop
dec
pop
jbe
sbb
pop
and
mov
jnp
push
repnz
dec
and
xchg
push
cmp
popa
scas
fwait
mov
cmc
stc
andb
stc
and
mov
lock
rcr
jmp
cmp
arpl
inc
and
mov
push
adc
jl
ja
mov
das
mov
xchg
aas
cmc
add
inc
fidivl
inc
jnp
cmp
pop
subl
cmpsl
out
imul
mov
adc
in
mov
pusha
xchg
inc
xchg
loopne
inc
aam
jge
mov
outsl
lods
mov
in
iret
jmp
ljmp
aad
out
mov
mov
test
popa
imul
inc
or
sub
sbb
or
xor
sub
jns
cld
dec
lahf
inc
jge
jae
jns
hlt
sbb
lock
std
in
test
mov
icebp
leave
sub
pop
push
xor
lock
data16
leave
fs
into
adc
pop
mov
jbe
jl
bound
pop
test
inc
jge
xlat
es
push
fnstenv
add
cltd
jnp
mov
jno
mov
add
push
push
shrl
xor
lahf
push
pop
mov
popf
in
aam
push
mov
sbb
imul
jp
adc
push
jp
push
push
push
neg
ja
sub
mov
push
mov
push
ret
xchg
mov
sbb
test
fisubrs
xchg
mov
sbb
jg
out
push
sbb
aas
sbb
mov
and
aaa
push
xor
mov
mov
and
test
mov
cmp
jecxz
adc
pop
adc
arpl
std
je
inc
cltd
inc
into
lcall
mov
gs
fiaddl
negl
lahf
loop
icebp
rcrb
cwtl
fldenv
adc
ret
mov
sbb
push
fs
push
daa
jo
jno
imul
mov
out
xchg
in
pushf
cmp
imul
add
icebp
cmp
fadds
mov
push
addr16
in
ds
lahf
mov
outsl
sti
jno
pushf
cvtps2pd
and
hlt
fldcw
mov
push
add
test
adc
subl
cmpb
sbb
fs
lea
movsl
pop
jle
and
lret
insb
test
stc
xchg
xchg
fstpt
movsl
fimuls
sub
aam
ds
xchg
adc
addr16
mov
adc
mov
rcl
or
addr16
push
adc
ljmp
mov
aad
jg
pop
lahf
and
mov
mov
xchg
nop
sub
das
addr16
add
aaa
loop
xchg
stc
out
cli
fs
inc
adc
mov
or
adc
test
addr16
mov
rcll
add
popf
das
insb
push
adc
cmp
in
stos
push
lcall
sub
mov
jge
stos
fistpll
or
lret
fstpl
in
mov
adc
inc
cmpsb
ljmp
cmp
out
je
mov
pop
sbb
xchg
xorl
sub
sub
hlt
mov
clc
pop
push
sub
setne
decb
inc
pop
xor
mov
add
inc
sub
jp
mov
add
mov
pop
popa
mov
jnp
js
and
lods
sbb
mov
xlat
aaa
ds
nop
pusha
or
inc
mov
test
loop
call
jl
and
fcompl
inc
sbb
push
mov
cmp
cmp
stos
out
rcr
fcmovne
shll
aaa
mov
xlat
inc
inc
lcall
and
arpl
mov
ljmp
inc
shlb
pop
dec
nop
int
aad
ret
push
cwtl
test
cmpsb
cmpsl
cli
mov
std
sbb
sub
adc
dec
mov
dec
and
cmp
ss
sahf
andb
xlat
inc
adc
addr16
aad
jae
inc
push
dec
xlat
andl
icebp
fdivl
leave
sub
adc
xor
xchg
test
pop
faddl
cmc
sbb
xchg
loope
mov
sbb
mov
xchg
adc
xchg
and
addr16
imulb
adc
mov
repnz
fimull
push
fwait
repnz
dec
aas
lret
les
cmc
mov
es
test
cs
lock
lods
rorl
movsl
shrb
mov
add
xchg
push
mov
ret
push
cmp
jge
shr
test
jnp
jle
mov
enter
stos
clc
pop
mov
pop
call
dec
xchg
outsb
xor
push
ds
aam
or
sbb
xor
mov
xchg
sbb
mov
push
lret
jg
test
into
pop
nop
mov
fnsave
cmp
ror
push
sub
arpl
sub
and
xor
inc
mov
in
mov
comiss
mov
push
lods
dec
leave
jo
lods
mov
mov
stos
pop
pop
mov
inc
and
mov
outsl
xor
imul
insb
mov
fimuls
mov
aaa
and
sahf
inc
push
jne
dec
mov
sub
inc
sbbl
mov
adc
andl
xchg
arpl
fldenv
shlb
or
ljmp
xor
mov
adc
push
je
outsl
or
push
push
xchg
imull
lahf
jns
jmp
cmp
es
xchg
dec
hlt
pop
inc
xchg
pop
hlt
adc
mov
jns
dec
rol
daa
xchg
inc
pop
cmpl
nop
inc
ficoms
inc
dec
std
cmp
xor
push
movsb
test
pop
dec
and
and
repnz
mov
or
or
scas
cld
fwait
movsl
mov
jmp
clc
fidivs
mov
aaa
inc
adc
sbb
popa
cs
int3
movsl
shl
pop
loope
xchg
adc
or
enter
or
enter
aas
popa
aad
jle
ljmp
pop
loope
sbb
push
fisubrs
add
fistps
jno
in
pushl
scas
pop
mov
dec
lret
cli
les
pop
jns
pop
xlat
sbb
call
add
jl
mov
push
xchg
jmp
jb
rcr
loope
lods
xchg
fisubrs
scas
mov
leave
mov
into
ret
lds
pop
mov
jbe
notb
push
add
cmp
scas
dec
dec
mov
fistpl
outsl
sub
sub
lret
in
mov
frstor
or
mov
cmp
es
sub
arpl
push
xor
les
adc
lds
out
mov
das
scas
into
sbb
cs
or
xchg
add
cld
in
jg
cmp
lods
pop
imul
adc
or
scas
jae
inc
scas
jecxz
bound
push
shlb
in
icebp
lods
les
jmp
jmp
lret
adc
cmc
les
inc
call
arpl
xor
mov
mull
push
sbb
imul
rorb
leave
or
mov
inc
jp
nop
pop
xchg
loope
cmp
call
out
xlat
js
aam
pop
pop
push
cli
push
pop
and
je
xchg
mov
inc
movb
pmullw
jmp
mov
sbb
mov
or
xor
and
out
leave
lds
xor
mov
das
or
rclb
cmpsl
lcall
enter
adc
mov
inc
mov
xlat
roll
xorb
adc
rorl
sbb
leave
sub
cmp
shrl
sbb
mov
xchg
enter
push
jge
or
dec
mov
lods
jl
pushl
stos
dec
repz
mov
xor
xchg
in
movsb
fwait
adc
push
iret
mov
lea
sahf
jge
test
outsl
mov
or
test
push
stc
stc
sbbl
push
icebp
or
and
stos
jmp
cld
jge
adc
sbb
adc
arpl
mov
movq
push
fwait
movsl
popf
mov
adc
sbb
rorb
mov
cmp
push
inc
ror
cmc
popf
xor
push
daa
lret
pop
push
jne
jle
mov
mov
adc
rcl
cmp
inc
xor
or
pop
jp
push
fsubrl
arpl
cld
insb
adc
in
push
inc
inc
aas
hlt
lods
call
stc
mov
mov
cltd
das
xor
pop
inc
cmp
inc
or
jmp
test
mov
adc
in
fcmovu
in
or
stos
inc
and
lahf
jmp
scas
movsb
adc
nop
mov
or
jmp
outsb
scas
adc
lds
adc
stos
mov
mov
add
jb
jbe
mov
lods
int3
jns
xor
cmp
stos
leave
pop
test
gs
sub
dec
pop
rcl
outsb
push
sub
mov
add
out
js
mov
mov
mov
adc
scas
jmp
imul
inc
icebp
cmp
mov
and
repz
mov
mov
cmpsl
xor
fsubp
rcl
jmp
dec
xor
in
shr
pop
ss
xor
xchg
xor
jno
les
aas
push
mov
ret
or
mov
faddl
xchg
mov
addb
add
movsb
in
pop
cmp
out
jb
cmp
pop
inc
sbb
clc
movsl
add
pusha
push
mov
and
cld
int
lds
add
add
and
mov
jge
mov
into
cs
mov
outsl
iret
out
pop
in
mov
push
xchg
sub
loope
dec
stc
clc
js
mov
push
push
imul
jbe
push
push
xor
popf
fldt
or
or
lods
scas
pop
rcl
popa
jns
push
popf
pushf
dec
mov
aaa
mov
bound
mov
inc
imul
test
mov
outsl
dec
test
mulb
jmp
subb
push
ret
lock
jo
lea
ss
lea
divl
xor
cmpl
fsubrl
addb
sahf
movl
inc
dec
adc
repnz
lahf
in
or
icebp
roll
repz
xchg
mov
sub
adc
pop
inc
dec
push
outsl
cs
jle
or
or
rcrb
into
mov
call
or
xor
fnstsw
or
fcmovu
lock
std
loopne
xchg
xchg
sub
mov
or
mov
sbb
jle
imul
mov
mov
xchg
jnp
or
or
mov
aas
inc
loopnew
into
xor
push
enter
mov
sarb
sub
fcmovnbe
mov
nop
add
or
jo
adc
xor
xorb
data16
clc
sbb
outsl
xchg
pop
cmp
cld
pop
cmp
mov
or
inc
sub
addr16
nop
add
push
lds
pop
mov
mov
xlat
mov
outsb
sbb
std
in
stos
push
hlt
xchg
addr16
loopne
dec
outsl
add
test
aam
xchg
cmp
lock
push
jle
sub
inc
dec
scas
or
pop
cmp
mov
shlb
outsl
aad
add
jp
dec
in
add
xchg
popa
inc
dec
or
xchg
insl
addl
sbb
out
into
jne
pop
and
cmc
cmpsb
es
mov
ret
push
sti
xchg
inc
stos
mov
imul
aad
sbb
sbb
lods
inc
iret
lods
sahf
ja
fstl
mov
mov
rcrl
xchg
out
mov
fwait
jl
call
pop
mov
pop
add
pop
pop
loopne
aas
jge
call
cmp
ret
xor
mov
pop
xchg
pop
les
sub
push
cmp
add
and
lods
insb
xchg
leave
dec
mov
lea
mov
fldt
and
fsubrl
pop
pop
les
push
ret
adc
ja
and
cmp
das
cmp
mov
insl
xor
adc
xlat
adc
leave
push
imul
test
fimuls
das
jge
mov
mov
xchg
jge
xor
add
xor
iret
cmp
inc
jne
popa
fs
adc
dec
sarb
sub
lret
mov
sbb
jne
or
rcrl
and
xor
or
jmp
mov
xchg
push
pop
andb
aaa
and
mov
in
push
push
es
lods
bound
push
shll
mov
addb
repnz
mov
inc
mov
into
sti
and
or
mov
insb
popf
aad
push
xor
jo
aaa
xchg
dec
adc
test
sub
ljmp
jmp
ror
mov
roll
pop
add
fidivrl
add
std
test
fidivrs
out
dec
jmp
xor
inc
testl
stos
cmp
push
cmc
mov
push
cmp
sub
inc
and
orl
mov
ljmp
bsf
mov
bound
mov
sbb
xchg
push
or
ret
sbb
mov
pop
pop
mov
clc
mov
jnp
arpl
inc
leave
cli
sbb
les
jno
std
test
pop
addr16
lods
sbb
and
inc
add
popa
jle
or
fidivrl
fs
in
sbb
push
cwtl
imul
mov
in
jg
and
in
fsubrs
sbb
inc
cmp
jne
sub
push
loope
js
jge
fsubl
cmpsl
pusha
outsl
xchg
and
es
gs
add
mov
xchg
cmp
stos
xor
add
or
pop
int3
gs
xlat
dec
adc
in
lds
mov
into
xchg
or
cli
adc
gs
push
sahf
ja
push
jnp
sbb
pop
aaa
cmc
mov
and
int
sbb
cmp
mov
mov
sti
and
test
stc
fcompl
lods
sub
notl
mov
mov
decb
jno
add
scas
cltd
mov
sub
imul
mov
test
mov
mov
jae
push
icebp
mov
inc
or
leave
ds
and
jge
mov
scas
insl
add
cmpsb
fmull
enter
rorb
icebp
add
and
inc
xchg
out
push
mov
cwtl
stos
and
xor
push
out
sbb
push
fisttpl
sbb
and
loopne
or
stos
push
lahf
lret
mov
sbb
sahf
xor
add
mov
inc
adc
lea
pop
test
pop
faddl
jg
mov
ss
and
call
inc
mov
stos
dec
scas
cwtl
addr16
inc
xor
add
cmp
sbb
lds
shrb
jle
add
shr
scas
jmp
cmp
sub
mov
div
push
imulb
popa
mov
test
lcall
adc
test
aaa
mov
add
ljmp
sbb
cmp
or
mov
jge
jle
inc
outsl
mov
pop
repnz
mov
dec
mov
adc
and
adc
adc
or
xor
shll
dec
cld
out
cmp
pushf
lcall
or
sub
pop
andb
sbb
stos
pop
ficomps
mov
cmp
lcall
xchg
pusha
pushf
enter
fisttpll
pop
or
divl
dec
mov
mov
mov
push
cmp
sbb
loopne
outsl
jo
outsb
test
lock
dec
mov
mov
jmp
pushf
mov
xor
cmp
inc
aam
and
std
adc
loopne
add
bswap
sub
mov
cli
ret
pop
fs
xchg
pop
sarb
cmc
jns
sbb
into
mov
push
and
je
repnz
icebp
rcr
repnz
dec
push
mov
mov
inc
cmp
sbb
das
sub
popf
cmc
fs
int
sbb
sub
mov
cltd
rorl
out
mov
mov
ja
mov
cmp
fcoms
pop
sub
pop
adcb
push
cmp
ret
pushf
push
xchg
pop
dec
xchg
jecxz
fnstcw
cmp
xchg
in
lea
dec
leave
repz
inc
dec
adc
mov
and
fnstcw
out
sub
push
and
insb
sub
xor
es
or
lret
inc
xor
mov
xor
mov
sti
out
out
fmul
mov
jbe
or
mov
scas
xor
jg
jno
lret
adc
xor
inc
sbb
xchg
or
mov
shlb
push
add
pop
stc
xor
or
push
cld
imul
ret
push
dec
push
push
mov
mov
mov
fwait
and
inc
cmp
sub
lret
mov
mov
pop
dec
jg
dec
push
addr16
cmp
push
xor
cmp
xchg
repnz
mov
andb
and
shll
icebp
mov
adc
insb
movsl
xchg
ror
push
cmp
out
lock
sbb
add
test
test
shl
cmc
lret
subb
rep
mov
fdivrl
insl
add
or
xchg
mov
cld
loop
pop
std
popf
lds
enter
mov
inc
jmp
add
xor
bound
mov
in
push
shll
mov
inc
lds
clc
lea
movsl
pusha
mov
and
jl
xchg
xchg
push
lcall
iret
xor
add
in
push
pusha
push
les
in
xchg
xor
push
mov
clc
enter
shrl
subb
adc
jecxz
pushf
cmpsl
mov
adc
push
push
or
jecxz
sbb
jo
mov
lods
xchg
ret
cmp
dec
pop
mov
xor
shrb
sub
mov
adc
lret
xor
xlat
imul
xor
mov
pop
in
pop
xor
mov
sbb
mov
in
inc
xchg
xchg
repnz
and
decl
mov
rcl
rorb
das
or
mov
add
add
ss
push
int
and
sub
aam
hlt
or
shl
pop
inc
sbb
dec
ret
iret
cmp
mov
pop
sahf
and
pop
aaa
adc
sbbb
loop
add
cmpsb
adc
pop
ds
mov
pop
sbb
mov
pusha
and
fs
xor
mov
xor
pop
add
jae
popa
mov
ret
data16
sub
inc
and
std
lret
mov
xlat
cmp
inc
dec
dec
movsb
imul
xor
pop
insb
std
lds
fimull
mov
dec
mov
cs
xchg
fimull
int3
sahf
mov
push
cmp
gs
dec
jge
mov
mov
sbb
iret
and
and
hlt
shrl
jp
sbb
sarl
mov
mov
inc
and
add
push
or
add
adcb
mov
aam
push
cmc
icebp
test
rorl
push
pop
jb
jecxz
mov
sub
and
jne
lret
adc
mov
xchg
cmp
pop
adc
movsb
mov
or
jmp
jle
out
pusha
cld
jnp
cmpsb
bound
push
sub
cmc
sub
jge
xor
mov
jns
data16
mov
clc
pop
lret
cmp
add
lcall
es
test
daa
aam
lahf
sub
fcompl
test
cmp
sub
and
outsb
mov
fsubl
lret
loop
enter
and
ret
push
fwait
xlat
lahf
pop
inc
ljmp
cmpsb
jne
fstpt
add
mov
rol
aaa
das
stos
xor
jl
stc
cli
mov
adc
bound
pop
dec
int
inc
xchg
cltd
aad
jecxz
and
aaa
add
mov
lcall
mov
jp
mov
test
outsl
out
xchg
sub
rorb
mov
push
push
orb
xchg
pop
add
outsl
xor
mov
dec
xor
and
stc
daa
call
ret
bound
xchg
add
rolb
jnp
sbb
out
push
sub
shrl
sbb
scas
xchg
mov
push
pop
sbb
sti
push
xchg
stos
imul
pop
cwtl
or
xchg
mov
inc
pop
mov
push
cmpsl
sti
pushf
ret
stos
mov
sub
adc
ja
mov
int
sbb
push
fdivrl
icebp
or
js
int
pop
aaa
cmp
inc
scas
cmp
mov
and
bound
aam
stc
mov
test
shrl
pop
xor
arpl
punpckhbw
mov
fs
das
and
pop
push
pop
nop
cs
fdivrl
in
lea
aaa
add
jb
test
jbe
cmpsl
mov
inc
fs
int
push
mov
sub
mov
xchg
xchg
xlat
pusha
icebp
lcall
dec
idivb
cs
adc
jne
in
mov
xchg
jl
sub
ja
gs
roll
or
inc
mov
mov
or
pusha
sbb
pop
pop
push
mov
sub
xchg
dec
push
addr16
pop
fstpt
dec
clc
add
adc
dec
aad
stos
mov
ret
in
into
pusha
je
repnz
jle
mov
mov
movl
xor
inc
es
jecxz
imul
xor
arpl
sbb
sbb
data16
cld
fildll
cwtl
inc
xor
sar
jle
ret
sbb
mov
jg
cmp
and
dec
lock
push
pop
inc
in
push
mov
enter
shlb
push
or
cmpsl
cmp
lret
and
sub
jmp
jmp
push
pop
xchg
test
pop
nop
push
ret
jne
test
or
adc
sahf
cwtl
cli
inc
cmc
adc
out
addr16
mov
cmc
sti
test
std
nop
cmp
aam
mov
mov
mov
and
mov
dec
rorb
mov
shl
outsb
xchg
cmpsb
pop
inc
jg
cld
adc
popf
mov
dec
xlat
add
and
out
pushf
mov
fcoml
ds
imul
mov
repnz
xchg
xor
lods
inc
jnp
or
push
inc
or
sarb
adc
mov
outsb
in
or
mov
cmp
outsb
cld
xor
inc
js
popa
xchg
fstl
cmp
xchg
repz
xchg
sub
sbb
fildll
shll
leave
xor
sbb
ret
xor
dec
or
popa
rclb
push
jnp
outsb
daa
add
loopne
add
add
popf
push
jp
pop
cmp
push
icebp
pop
adc
adc
dec
scas
pop
xor
out
sub
dec
ret
sbb
out
cmc
jae
xchg
nop
jmp
je
add
inc
push
mov
adc
inc
divl
movsb
xchg
dec
ret
test
adc
cmpsl
test
in
mov
lahf
adc
scas
jne
scas
mov
pop
jo
mov
or
orl
in
jle
test
or
cmp
cmp
loope
xlat
dec
xchg
cmpb
icebp
sub
ljmp
pop
dec
div
mov
mov
xchg
mov
sarl
mov
nop
mov
jg
xchg
dec
fucomp
push
cmp
pop
mov
insb
incb
insb
inc
jl
fs
sbb
daa
loopne
aas
in
sbb
mov
and
hlt
jae
imul
inc
mov
out
lret
jno
jnp
mov
sbb
and
sbb
enter
add
fdivl
popf
mov
sbb
sbb
jecxz
and
std
cmp
jne
mov
in
dec
or
fst
sub
push
dec
imul
xrelease
mov
outsb
cmc
jp
mov
cmc
movups
cmp
ror
in
sbb
inc
pop
pop
xchg
imul
dec
stos
xchg
xor
lods
loop
aad
daa
call
inc
adc
cmp
orl
sbb
mov
dec
mov
mov
xchg
addb
push
lods
ja
cs
imul
mov
or
inc
cld
movl
or
mov
jae
push
aas
xchg
and
cmp
cwtl
loop
leave
test
push
and
push
stc
mov
jmp
lock
xlat
lret
pop
mov
mov
jne
int
lods
movsb
clc
repnz
cmp
jb
sahf
add
fidivrl
push
data16
dec
push
andl
pop
add
pop
hlt
cmp
inc
push
xchg
jge
in
sub
cs
dec
mov
or
cmp
test
stc
push
and
cmp
jnp
sub
pushf
mov
out
and
jge
popf
inc
xchg
jge
call
adc
mov
rorl
imul
hlt
mov
fstpl
xchg
dec
in
push
jmp
fsubr
lret
push
pushf
fcompl
sub
xor
xor
addl
std
inc
fidivrs
mov
mov
mov
les
mov
sub
aam
es
lret
xchg
cmc
int
test
and
iret
mov
jae
rorl
xchg
sbbl
push
arpl
xor
in
dec
mov
repz
cmp
sbb
std
pop
sbb
das
jno
add
loop
push
sahf
sbb
cli
cmp
jge
rorb
jne
fimull
ret
out
pop
xor
fists
sub
notb
push
adcb
push
stos
shlb
sahf
movlps
inc
sub
cs
lret
in
filds
cmp
hlt
xor
pslld
ret
bound
pop
xchg
sub
xor
mov
cs
push
les
clc
cltd
mov
mov
dec
fidivl
js
aad
std
mov
aas
ror
mov
xor
lret
inc
fdivl
or
dec
jb
push
clc
mov
inc
stos
xor
jp
insb
sub
mov
popf
push
push
dec
mov
clc
adcl
sti
jecxz
pop
stc
in
fs
mov
or
mov
sub
pop
pop
bound
popa
negl
rcr
jp
aaa
stos
xorb
lret
pushf
pop
shll
sbb
xor
notb
dec
mov
addb
addr16
cld
inc
xchg
mov
aam
push
mov
push
into
pop
loop
xchg
lahf
mov
mov
push
out
mov
jbe
or
nop
imul
dec
push
push
jns
mov
daa
inc
aad
cmpsb
cmpsl
fwait
dec
lods
sbb
mov
fsts
and
push
subl
repnz
icebp
addr16
les
xor
lea
popf
or
and
bound
push
adc
push
xchg
mov
or
insl
jge
mov
lcall
mov
push
iret
in
dec
push
sahf
aaa
add
int
aad
mov
sbb
pop
inc
cmp
lcall
mov
aaa
out
daa
xchg
sahf
mov
ret
daa
ljmp
pop
xor
inc
add
shr
mov
push
and
call
push
shrl
mov
fadds
orb
sub
fisubrl
pusha
outsb
push
fwait
xchg
jae
mov
das
mov
fstpt
out
icebp
das
movsb
out
inc
sbb
jle
push
roll
cmp
or
dec
dec
mov
inc
sarb
aad
mov
cmp
rclb
sbb
xor
mov
xchg
lahf
push
testl
dec
out
pop
imul
xor
repz
movsb
iret
loop
pop
jge
sbb
ljmp
fs
popf
sub
push
xchg
sbb
sub
and
fldlg2
xlat
sub
dec
incl
mov
decb
lock
test
or
sub
push
push
lcall
test
inc
sbb
mov
xor
inc
inc
bound
push
decb
sbb
aaa
cmp
cmp
inc
sbb
sbb
std
cmc
xchg
jns
out
ret
dec
repz
or
lods
cltd
mov
mov
scas
xchg
fsubs
adc
outsb
in
mov
mov
popa
roll
movsb
shll
pop
ljmp
lds
sub
push
xchg
in
gs
dec
aas
out
test
in
xchg
add
xchg
lret
je
mov
pop
mov
jno,pn
arpl
repz
mov
test
int
lds
cs
gs
and
std
js
icebp
fadds
shl
xor
fnsave
xchg
jg
adc
jge
or
stos
xchg
ja
rclb
sbb
jp
in
gs
push
push
and
enter
lods
mov
rcll
cmpsb
pop
lret
rorl
mov
jmp
scas
dec
and
xchg
mov
faddp
movsl
jae
repz
in
xor
sbb
ljmp
mov
lret
inc
cmc
lahf
sbb
jne
jo
mov
mov
inc
arpl
dec
in
movsb
fimull
leave
es
lret
das
lahf
sub
insl
dec
sub
fs
sbb
je
repnz
xchg
cli
xchg
push
sbb
movsl
rcrb
cmp
inc
shlb
xor
lea
push
jmp
movb
loopne
pop
nop
fimuls
cli
push
xor
cmp
rcr
addr16
enter
cmc
dec
ds
sub
xchg
pop
movsl
lock
fcoml
adc
lock
pop
or
add
popa
test
mov
xor
sub
push
loopne
aaa
dec
insb
mov
push
mov
enter
jne
test
sbbl
mov
subl
and
pusha
cmp
xor
push
xor
push
or
inc
dec
shrl
dec
cmpsb
ljmp
sub
ss
mov
nop
nop
insl
xchg
mov
xor
rorb
inc
insl
xchg
dec
push
add
xor
lret
inc
or
gs
enter
push
leave
test
or
jbe
xchg
xchg
out
arpl
jno,pn
test
test
imul
in
pop
mov
lret
xchg
jp
shll
vcmppd
mov
dec
rcrb
mov
popa
mov
push
dec
repz
iret
sub
sub
pop
jmp
daa
mov
push
sbb
das
inc
movsb
popa
adc
jb
adc
xchg
cmp
mov
testb
subb
xor
ljmp
mov
mov
and
enter
nop
cltd
sub
or
clc
dec
gs
fildl
hlt
mov
je
xor
sub
xchg
rep
es
imul
negb
mov
das
or
clc
jns
sbb
ss
inc
mov
xor
jmp
inc
inc
cmp
fdivrl
mov
aaa
popa
int3
stc
cmp
sub
out
sub
lcall
jmp
js
fdiv
cmc
testl
jg
scas
pusha
in
dec
daa
push
jle
shll
cmp
test
lret
inc
sub
test
pushf
cmp
adcl
xorl
push
ret
cmc
xchg
inc
xchg
or
ljmp
scas
rolb
mov
fnstenv
test
adcl
imul
mov
out
lea
fwait
cmc
mov
sbb
pop
inc
ret
pop
lods
int3
ss
push
dec
ja
mov
jmp
sub
les
cmpsb
in
dec
jmp
sbbl
push
bound
hlt
inc
add
lods
scas
test
cmp
sbb
jl
stc
add
adc
mov
out
movsl
or
sub
imul
sbbl
lea
jo
sub
int
aas
repz
mov
sub
inc
mov
mov
adc
es
popa
or
daa
mov
outsl
testl
inc
mov
inc
shrb
mov
jo
movsb
inc
push
jo
and
outsl
adc
push
sbb
add
inc
add
adc
lock
xchg
mov
das
xchg
aad
or
rorb
pop
xor
inc
dec
xor
push
pop
mov
dec
scas
mov
pop
adc
ss
dec
arpl
rcrb
sbbl
rcll
out
call
jo
xor
ret
jge
xor
out
and
dec
or
loope
xor
and
je
pop
cmp
shrl
jge
loopne
mov
add
jg
dec
jb
xchg
xchg
and
icebp
xor
popa
mov
imul
pop
sbb
int3
sub
les
icebp
ljmp
fstl
inc
scas
mov
push
mov
je
cltd
jge
insb
icebp
sti
xor
sub
dec
and
add
test
in
dec
adc
ret
or
mov
mov
push
arpl
out
js
aaa
jge
movsb
add
stos
repnz
xchg
rcll
xor
andb
jmp
dec
inc
ja
fiaddl
lods
dec
and
cmp
xchg
push
jbe
test
popf
sbb
mov
pop
adcb
cmpsb
dec
iret
push
mov
movsb
das
lahf
popa
daa
mov
mov
cmp
dec
mov
sbb
bound
sahf
xlat
and
cld
loopne
jle
icebp
popa
and
out
dec
stos
mov
jae
pop
iret
inc
aaa
mov
mov
shl
fcompl
out
stos
aam
lret
xlat
shrl
ja
xor
cmpsl
aas
ja
sub
inc
inc
mov
outsl
sub
pop
ss
push
lret
lret
cli
cmp
mov
or
inc
add
push
cmp
addr16
mov
imul
les
hlt
pop
push
cltd
sub
stos
push
popa
icebp
shlb
ljmp
mov
mov
jl
cwtl
push
pop
adc
movsl
lea
pop
or
ret
jmp
xor
cwtl
lahf
jp
pop
sbb
jo
mov
xlat
dec
xchg
rorl
push
xlat
idivl
cltd
and
mov
lahf
push
ds
and
orl
movsb
mov
pop
push
test
out
sbb
push
xchg
push
test
inc
mov
xor
push
adc
dec
sarl
arpl
jo
push
mov
aad
int
inc
sbb
mov
addr16
fstpt
cltd
jb
jecxz
stos
sub
jl
pop
lret
dec
test
hlt
cmp
shl
xor
nop
mov
jns
adc
mov
push
pop
adc
call
jmp
in
pop
scas
jmp
dec
popf
das
cmpsb
xchg
xchg
and
and
rcrb
cmp
popf
sub
cld
xchg
rcl
pop
outsb
xor
mov
xlat
negb
pop
in
test
cmp
sbb
jecxz
loop
jo
sub
cmpsb
mov
popa
fcmovne
lahf
addr16
je
mov
leave
out
ret
pushl
mov
lret
out
insb
add
adc
jmp
cmp
xor
and
fucomp
mov
adc
into
push
out
jne
cmpsl
cmc
mov
dec
mov
fs
jmp
lret
pop
dec
push
nop
add
mov
sbb
arpl
sub
pop
aad
mov
ret
outsl
sub
xchg
cs
cmp
inc
xor
adc
and
fsubp
test
jle
dec
loopne
push
pusha
adc
cld
das
movsl
insl
fsubr
or
cmp
ret
jno
andl
mov
inc
mov
add
push
sbb
mov
xor
push
iret
ret
adc
mov
push
decl
stos
hlt
sub
and
or
ret
fnsave
inc
jno
add
cmp
popf
sbb
adc
jno
inc
mov
pop
idivb
das
inc
mov
out
pop
xchg
lahf
sub
and
sub
fucomi
sbb
or
sbbl
dec
xchg
cmp
push
xor
loop
sbbb
push
push
test
cmp
stos
cmp
popa
jae
add
pop
jl
adc
outsl
xchg
xchg
sbb
aaa
jnp
push
or
cmpsl
pop
dec
mov
ja
mov
sbb
jecxz
call
jbe
loopne
ljmp
dec
insl
imul
inc
roll
cmp
mov
xor
fisubrl
int
pop
push
pop
dec
jbe
add
movsl
fistpll
call
jnp
test
lea
sbb
pop
lods
jbe
aas
roll
adc
out
cmp
mov
fidivrs
cmp
pop
in
mov
push
ja
sbb
lahf
jo
and
outsb
mov
pop
jb
and
fldl
jmp
pop
push
xchg
sub
mov
xor
movsl
inc
or
sub
movsl
lods
pop
mov
adc
sbb
int
and
test
hlt
or
out
cmc
fmull
jno
faddl
xor
xor
mov
sbb
ljmp
ds
enter
and
xor
sbb
out
mov
mov
mov
mov
jbe
je
mov
bound
or
add
mov
stos
orb
push
out
pop
out
ret
loopne
inc
or
xor
les
mov
aad
and
push
xor
jb
iret
or
or
in
ret
cmp
lcall
mov
in
mov
and
cmpsb
out
adc
sub
mov
push
orl
scas
das
cmp
sahf
sub
pop
test
ja
push
pop
mov
push
jnp
pop
ret
mov
sub
pusha
ds
and
adc
outsb
rolb
and
lret
xchg
jmp
push
or
cwtl
frstor
roll
aaa
sub
sarl
aad
fnstsw
mov
add
fcmovb
pop
or
xor
out
hlt
push
mov
repnz
push
icebp
lret
ret
mov
push
cmpsb
xlat
xchg
out
movsl
mov
push
push
das
lock
xor
dec
cmpsb
mov
add
push
call
stos
mov
add
mov
pop
lea
sub
out
xchg
cli
mov
repz
fsubrp
xlat
lret
popf
cli
in
pushf
pop
cltd
enter
repz
inc
sub
jmp
mov
adc
or
pop
pusha
insl
mov
std
stc
xchg
leave
inc
jae
lock
roll
sub
sbb
cltd
pop
fldcw
aaa
lea
inc
enter
cld
cmc
or
frstor
xchg
ret
pop
lock
test
daa
add
cmp
ljmp
int
in
inc
mov
std
or
lods
lods
adc
add
pop
lods
jbe
sub
mov
cli
test
cld
push
fdivrl
out
mov
stos
loope
cmp
hlt
movsb
out
cs
pop
sahf
push
xor
mov
les
inc
in
pop
mov
mov
push
pushf
fcmovnbe
mov
movsl
cmp
mov
cs
pop
push
sub
sbb
xor
loope
inc
fadds
out
jno
ja
ljmp
ret
scas
or
and
pop
cmp
and
adc
icebp
aam
stc
sbb
in
cld
sub
out
hlt
dec
dec
add
test
push
push
testb
hlt
mov
cmp
shll
adc
xchg
jo
mov
xor
jle
cmpsl
dec
pop
bound
sbb
mov
cmc
jg
ret
push
outsl
lds
jne
fistpl
imul
add
and
mov
cld
loop
in
js
loope
mulb
test
mov
xchg
xchg
inc
das
fldl
fwait
sbb
faddl
xchg
mov
outsb
ret
sbb
rcrl
push
or
pop
or
pop
xchg
jb
test
scas
cmpsl
lret
mov
inc
cmpsl
fmull
repz
cmp
jp
shl
xor
gs
ja
xchg
sbb
int
hlt
add
jecxz
cmp
test
mov
test
aas
sahf
jb
sub
add
sub
or
stc
jns
ja
jge
fistps
push
cmpsl
ror
xor
scas
adc
lods
push
aaa
sbb
push
fisubrs
fs
mov
push
incl
xchg
pushf
pusha
ds
xchg
jmp
jne
xchg
jmp
adc
cs
adc
sbbl
mov
dec
rol
xor
shrl
in
push
pop
sbb
push
pop
xchg
pop
add
or
mov
ds
cld
mov
ret
or
icebp
rcl
or
je
mov
test
fsubrs
pop
data16
mov
loop
push
cmp
or
inc
jbe
xchg
pop
pusha
add
mov
cmpsb
fisttpll
xor
add
xchg
ret
jmp
inc
in
leave
repz
mov
roll
push
jecxz
loop
movsb
int
jnp
push
lret
es
cwtl
push
mov
rclb
add
out
fwait
out
cmp
rol
push
call
fsubs
sub
jmp
adc
jmp
or
mov
and
mov
in
adc
out
test
xor
mov
lods
orl
lcall
cs
xchg
iret
lahf
jmp
orb
dec
testb
add
cmp
aaa
mov
mov
pop
lcall
cmp
xchg
sbb
inc
dec
aas
aad
add
mov
lds
pop
pop
inc
add
adc
inc
fidivl
stc
sub
lods
aas
call
pop
jmp
push
and
repz
xor
fdivrs
inc
repnz
lea
dec
mov
inc
scas
pop
push
pop
ret
fneni(8087
lret
add
data16
xchg
xchg
sbb
loopne
push
ss
in
sub
mov
mov
ja
jecxz
or
insl
sub
jo
lock
add
inc
xchg
test
leave
or
mov
scas
cltd
fmuls
and
les
mov
and
pop
jnp
xor
or
sub
pop
and
pop
ljmp
push
or
pop
es
adc
lret
jns
push
dec
ljmp
xor
and
std
out
jge
jg
sbb
sbb
out
add
mov
push
mov
jp
adc
outsb
mov
mov
scas
cmp
rorl
xchg
xor
cwtl
fcom
mov
mov
popf
pop
insl
rcl
enter
movsl
add
fbld
dec
psrld
cwtl
mov
xchg
lds
adc
daa
and
mov
add
pusha
fildll
pop
inc
mov
xchg
test
scas
xor
add
mov
mov
pop
loopne
add
pop
mov
mov
xchg
popa
icebp
sbb
fldt
cltd
aas
add
fcoml
popf
stos
mov
rcrl
filds
je
lahf
in
mov
inc
in
add
int3
mov
push
cmpsb
dec
ja
pop
mov
xor
mov
cmc
pop
mov
lea
jl
loop
xlat
subl
adcb
addr16
lahf
mov
or
xor
pop
cmp
xor
and
je
outsb
xchg
test
jbe
imul
fsubrl
ret
imulb
ja
pop
adc
in
pusha
inc
push
je
mov
or
add
mov
ret
sub
inc
mov
lret
jg
popa
sarl
nop
test
mov
cmp
dec
jne
adc
hlt
lock
mov
imul
test
mov
in
jge
sbb
mov
das
inc
or
cwtl
push
cli
mov
mov
ljmp
xchg
mov
xchg
xor
and
sbb
sbb
shlb
movsl
lret
add
movsb
scas
sbb
mov
call
xchg
push
sbb
shlb
mov
les
mov
dec
sbb
in
inc
mov
dec
jle
inc
push
jp
adc
fwait
dec
insb
cmp
or
cmpsl
rorb
gs
sub
fidivl
sub
jo
mov
outsl
inc
fiaddl
clc
rorb
mov
cli
cmp
lea
js
push
push
arpl
js
fs
dec
jno
subl
and
xor
mov
cmpsl
add
cmpsl
popf
iret
push
mov
mov
add
out
mov
sub
cltd
movsb
add
fsts
push
xchg
adc
xlat
insb
fmull
push
mov
fldt
dec
xor
movl
cwtl
jg
shrl
and
loopne
adcb
arpl
imull
dec
cmpsl
dec
fistpl
iret
or
movsl
out
mov
xor
data16
ret
add
xor
out
xor
out
xchg
jl
cmp
mov
or
daa
pop
add
movsb
push
add
aad
sub
dec
jbe
pop
jo
loop
clc
lahf
in
mov
fisttps
pop
push
mov
jecxz
imul
push
mov
cwtl
nop
xor
stos
pop
sbb
addr16
push
mov
subb
sub
jo
arpl
and
repnz
pop
or
or
xor
xor
dec
pop
or
in
sub
loopne
push
fdivl
fisubs
jmp
jo
stos
fwait
js
and
and
ds
pop
scas
out
loope
pop
or
cmpsb
test
sbb
jae
sbb
jns
jle
ss
icebp
std
mov
loop
imulb
adc
in
add
xchg
pop
jne
sbb
pop
lds
push
adc
pusha
je
movsl
aad
daa
dec
jle
mov
pop
jns
cld
iret
movsl
push
xchg
sbb
popf
scas
adc
mov
mov
push
mov
lret
loope
pop
les
data16
loop
jae
rorl
mov
ret
xchg
xor
cld
cmpsb
xlat
ret
std
loope
push
push
xor
mov
mov
and
outsb
aas
mov
cmp
mov
xchg
push
in
ja
dec
outsb
mov
addr16
sub
xor
repnz
data16
xor
lret
add
movsb
and
or
xor
std
sti
test
stos
call
add
adc
xchg
sbb
rol
and
mov
in
mov
jno
scas
sbb
or
insl
mov
faddl
lahf
push
push
mov
fisubl
insb
mov
fdivr
or
jmp
dec
frstor
pushw
push
cmpsb
push
xchg
popa
jbe
jb
stos
fwait
jmp
sti
jne
out
mov
and
or
and
xchg
xor
cmpsb
sbb
xor
xor
and
adc
inc
rcrl
dec
inc
and
test
int
push
pop
dec
ja
mov
jmp
jne
xchg
inc
and
mov
decb
or
movsb
outsb
out
dec
lret
aad
xchg
jle
jne
cli
mov
or
loope
loop
in
scas
lock
mov
or
pop
and
and
adc
xchg
rcl
repz
mov
jecxz
addl
nop/reserved
fdivr
sub
lea
jns
cmpb
in
mov
push
cmovs
add
dec
stos
pushf
inc
out
je
dec
loopne
push
mov
adc
out
mov
daa
sarb
ljmp
sbb
jo
mov
out
or
fwait
mov
jle
call
loope
add
dec
es
cmp
out
cmpsl
push
pop
and
jmp
cmp
cli
and
in
jg
es
dec
and
iret
movb
or
and
fadds
xor
xor
pop
mov
std
imul
push
mov
xchg
test
enter
sub
lahf
jmp
xchg
movsb
cs
test
lret
mov
aam
or
testb
push
loop
dec
dec
cmp
add
xchg
cmpsb
mov
aas
cmp
sbb
aaa
andl
gs
dec
out
sbbb
or
pushl
repz
adcl
add
outsl
mov
push
or
xchg
cmpb
mov
and
pop
imul
or
mov
mov
xchg
ja
push
rcrl
out
out
and
mov
test
or
sub
adc
hlt
jb
pusha
movsb
mov
jmp
dec
sbb
sbb
inc
shl
repz
lods
movsl
scas
sbb
inc
add
arpl
sar
lahf
fs
shll
adc
push
push
and
test
out
fdivl
sbb
add
insl
movsb
jns
jns
pop
inc
movd
xor
pop
sub
fucomip
add
repnz
sub
dec
push
les
and
icebp
ljmp
xchg
rdtsc
ror
sub
jge
push
pop
aad
rorl
scas
jmp
and
fnclex
mov
and
clc
cld
jae
nop
fistl
inc
push
pop
push
pop
sub
dec
loop
movsb
pop
and
sbb
sub
loop
cli
sub
pop
push
aas
xchg
sbb
movsl
mov
repz
jl
xchg
test
aam
jmp
fcmovb
pop
and
js
mov
sbb
rorb
test
sbb
je
sub
clc
inc
test
dec
outsl
out
jbe
in
push
jg
pop
mov
mov
push
inc
cs
lods
inc
arpl
icebp
add
pop
decb
lret
loopne
ja
sahf
push
xor
jnp
cwtl
mov
adc
pop
fdivr
push
insl
call
cmpsl
jl
lea
outsb
cmp
js
daa
out
add
popf
jb
gs
inc
sub
daa
lock
mulb
sbb
push
in
orb
jecxz
inc
enter
mov
pop
xor
fmull
jnp
sarl
dec
loopne
mov
popa
mov
loopne
push
stc
mov
in
test
xor
adc
inc
xchg
mov
fistl
fsubrs
cmp
out
daa
call
sbbl
sbb
xchg
cmp
stos
xchg
lcall
sbb
pusha
inc
mov
cmp
dec
nop
jno
add
xchg
movsw
push
adc
xchg
hlt
filds
cmpsb
loope
and
lahf
mov
gs
jo
cld
aam
mov
rorl
mov
jbe
cmpsl
sub
test
insb
iret
xor
mov
pop
pop
adc
mov
lods
outsl
jmp
ficompl
scas
out
fdivrl
dec
aam
jo
jae
adc
in
fwait
movsb
or
iret
sahf
push
inc
and
cmp
test
daa
outsb
jl
sub
dec
sbb
sub
rcr
sbbb
dec
pop
cmp
pop
cmpsb
xor
sub
mov
adc
popf
outsl
mov
inc
jle
scas
insl
jo
repz
repz
xchg
jnp
lods
inc
lods
fwait
aas
push
enter
jge
bnd
cwtl
cmp
inc
in
push
push
mov
pop
add
lea
fsubr
sbb
push
pop
dec
ljmp
hlt
pop
addr16
mov
sti
cmpb
push
inc
mov
outsb
in
pop
cmp
mov
in
movsb
mov
aas
push
xchg
sub
adc
dec
push
test
das
imulb
jle
jno
xor
rclb
es
sar
shrl
xor
test
inc
mov
sbb
loop
pop
fnstenv
mov
and
adc
jb
jbe
sub
jno
pop
xchg
adc
gs
push
pop
jmp
mov
outsl
lea
outsl
in
das
lret
rorb
sahf
push
int3
rol
movb
sbb
in
inc
lcall
cltd
sahf
movb
nop
orb
inc
xchg
push
jecxz
mov
mov
cli
xor
dec
cmpsb
sub
push
test
movsb
sbb
dec
push
mov
xchg
add
jno
aad
loope
fidivrs
faddl
mov
pop
fisubs
jle
movsb
cmp
shl
stos
mov
inc
or
jmp
outsl
and
test
lcall
cld
jo
les
mov
cli
sbb
mov
clc
jnp
ud2
cli
xchg
in
sbb
adc
nop
scas
or
xchg
add
and
daa
xor
arpl
mov
outsl
dec
pop
mov
adc
lcall
add
inc
ss
ror
jbe
imul
pop
inc
pushf
mov
jo
scas
mov
dec
lahf
subb
add
nop
fists
add
movb
int
mov
lret
test
mov
mov
lods
adc
imul
or
xchg
xchg
and
xchg
push
sub
imul
fistps
inc
lods
cmp
dec
lret
cltd
dec
sbb
add
hlt
test
cmp
push
jne
xchg
int3
mov
insb
add
mov
gs
sub
mov
in
push
fwait
inc
jae
jle
push
pushf
xor
sub
push
cmp
scas
push
out
push
cld
leave
in
xchg
addr16
mov
jp
push
jbe
push
mov
xor
ret
mov
mov
dec
cli
lods
rorl
sub
mov
inc
pop
and
dec
fsubp
or
aas
inc
push
pop
push
pop
jle
push
rcll
sbb
mov
es
repnz
pop
sahf
mov
icebp
and
ljmp
push
cmp
btr
dec
cld
cmp
push
scas
mov
in
sub
inc
cmp
mov
fmul
and
insb
xchg
js
aad
add
or
cmp
cs
sub
add
mov
add
not
or
add
ljmp
push
adc
cmp
aam
dec
addr16
out
push
xor
addr16
lcall
jb
jae
xchg
xchg
adc
jo
sarl
test
iret
jae
lods
pop
xor
or
call
push
inc
test
jl
mov
ret
lret
mov
mov
fidivrs
push
stos
cmp
add
jo
fdivp
mov
cmpsl
cmp
lea
adc
cmp
outsb
addr16
push
sub
jne
out
aad
push
inc
xchg
scas
mov
into
out
cmpsl
insb
add
fidivs
push
fnstcw
mov
pop
shl
test
adc
lods
jbe
fwait
vorps
xchg
fs
push
push
fwait
mov
fidivl
inc
lret
mov
xor
divb
leave
fwait
cmpsb
or
fistpl
js
xlat
adc
stos
pop
sub
sti
push
ja
cli
push
xor
rolb
sub
seto
fstl
add
pop
xor
movsb
cld
leave
xor
nop
fcoms
mov
cs
sbb
repnz
imul
fildll
push
adc
std
pop
cmp
mov
mov
fucom
sahf
inc
int3
mov
test
loope
dec
or
xchg
in
adc
lret
in
lcall
push
sahf
insb
xor
inc
mov
xor
xchg
lods
fst
sahf
dec
addr16
shrb
movsl
pop
movsl
movsb
repz
aam
imul
mov
mov
je
cld
or
cmp
mov
mov
loop
loope
push
fidivrl
add
xchg
and
mov
cmp
fxch
js
out
push
or
add
mov
dec
or
test
lret
xchg
sub
mov
subl
iret
clc
out
push
jae
sbb
mov
lahf
mov
mov
adcb
pop
sarl
les
pop
insb
cmp
mov
test
test
repnz
xor
sub
not
jne
pop
xor
jb
pop
fcompl
testb
pop
in
ds
mov
pop
jmp
ss
movsb
dec
adcb
scas
enter
mov
das
push
xchg
pop
xchg
adc
repnz
adc
div
mov
mov
jge
sub
jo
test
mov
inc
sbb
and
push
jne
mov
mov
je
cmpsl
popa
add
loopne
mov
orb
fidivrs
xchg
push
imul
popa
push
jge
cwtl
xor
xchg
das
scas
int
fwait
adc
clc
mov
sub
jae
ljmp
scas
loope
fsincos
sbb
inc
xchg
fwait
repnz
jmp
or
sub
sub
je
pop
fistpll
or
pop
pop
inc
or
addr16
popf
testl
cmc
cmp
stos
xor
pushf
stc
aaa
stos
pushf
jmp
xchg
loope
pop
sbb
and
cmp
sbb
fwait
cli
loopne
out
pop
cmp
add
loop
add
test
lods
pop
and
ljmp
frstor
push
mov
or
inc
gs
lock
adc
mov
lahf
pop
jne
cmp
sub
test
xchg
sub
mov
loope
shr
inc
aad
aaa
cmp
cld
or
xchg
ret
idivl
jo
clc
sub
inc
cmp
arpl
cli
push
shlb
movsl
fcomp
push
sub
jae
pop
mov
jp
xchg
or
or
imul
hlt
or
lea
shlb
dec
stos
adc
lahf
insb
js
push
in
push
add
push
pop
jg
in
loop
and
adc
imul
cmp
inc
fisttpl
cwtl
imul
lahf
add
fsubrl
jmp
mov
loope
xlat
or
aas
cmp
add
pop
rcr
jo
es
mov
add
cs
sub
rolb
adc
loopne
cmp
cmp
push
push
cmpsl
push
or
addr16
or
adc
mov
repz
pop
pop
mov
out
push
lcall
into
jbe
sub
mov
cli
xchg
cmp
rclb
lret
popa
cmp
mov
pop
sub
adc
sub
pop
mov
mov
in
jg
mov
sbb
push
push
pushf
in
xor
loopne
sub
test
inc
in
xchg
int3
div
test
mov
std
jne
mov
jnp
mov
and
sbb
fimull
xchg
jmp
leave
dec
shl
adc
or
cltd
stos
push
aaa
pushf
in
mov
out
pop
jnp
pop
stos
stc
je
ret
scas
jne
shlb
sbb
lret
add
in
jae
xor
pusha
loop
pop
xor
stos
cwtl
mov
add
pop
sti
or
imul
out
stc
push
push
imul
jns
call
mov
lods
add
inc
sbb
pop
mov
out
and
stos
or
loope
push
and
pop
add
jg
dec
mov
add
dec
xor
jae
inc
outsl
andl
pop
sbb
xor
iret
ret
andl
fistpll
loope
aaa
movsl
xchg
lcall
jl
lea
jmp
push
jp
push
sbb
push
inc
dec
test
dec
push
jg
jno
jnp
inc
xchg
mov
mov
fldcw
fcmovnb
ljmp
ja
or
inc
adc
and
mov
and
sbb
es
test
xchg
fdivrl
adc
das
xor
push
ret
mov
je
push
shr
dec
xchg
add
jb
mov
xor
pop
pusha
and
addr16
fcoml
fmul
xchg
adcl
into
test
stc
add
lret
aaa
jmp
dec
das
pop
mov
pop
movsb
add
cmpsl
lahf
dec
ret
in
mov
hlt
push
cmp
gs
lods
lods
or
aaa
xor
push
jp
xor
mov
movsl
and
mov
or
pop
lods
dec
add
push
call
xor
int3
shlb
je
push
adc
repz
stos
flds
dec
dec
out
aad
aas
xchg
pop
pop
inc
inc
insl
mov
mov
repnz
adc
rcll
adc
out
xchg
mov
roll
lret
xchg
arpl
aas
lret
mov
daa
pop
out
xchg
push
add
mov
leave
cmovge
or
loopne
cmp
notl
push
push
mov
fidivl
dec
pop
push
add
and
rcl
mov
lret
scas
loope
cltd
jmp
je
and
in
xchg
ss
xchg
jb
push
or
xchg
push
jmp
jmp
adc
shrb
rcll
mov
jo
stc
sbb
cmp
pop
test
dec
add
lods
dec
cmpsl
fidivs
int
inc
jb
stc
jl
sub
xchg
mov
ffreep
inc
xchg
sbb
clc
ljmp
fwait
call
xchg
push
xlat
scas
add
mov
mov
out
test
data16
popf
jmp
mov
jb
mov
mov
dec
inc
out
test
jno
pop
loopne
popa
cmp
outsb
fucomip
imul
pop
nop
leave
mov
lret
mov
pop
sbb
arpl
add
xchg
in
mov
pop
and
mov
xchg
and
cwtl
xor
mov
cli
sbb
mov
arpl
movsb
pop
or
nop
in
mov
shl
inc
mov
lret
xor
pop
xor
out
adc
sbb
cmp
sub
push
fs
stos
cmc
cmpsl
clc
pop
jo
fmull
scas
mov
in
mov
mov
inc
jns
jg
sub
in
dec
dec
jp
loope
inc
enter
dec
xchg
outsl
ljmp
icebp
sbb
insl
pop
fidivrl
mov
pop
xor
add
test
add
inc
push
and
cmp
jne
iret
xchg
sbbb
imul
push
test
pop
in
or
outsb
pop
test
rorl
test
push
imul
or
mov
xchg
stc
or
loope
mov
mov
rcrl
or
and
pop
lock
dec
sbb
mov
push
mov
enter
mov
test
lahf
xchg
pop
test
sbb
dec
cmp
pusha
loop
lret
repnz
jmp
dec
push
add
jns
in
push
dec
or
fcmovnb
pop
jecxz
xchg
adc
daa
add
push
cmc
sub
mov
in
mov
mov
and
and
clc
mov
imul
pop
dec
inc
insb
insb
stos
arpl
cltd
or
insl
imull
push
adc
xchg
je
sub
enter
in
mov
jmp
aam
or
mov
cld
pop
outsl
sbb
mov
mov
ja
cld
pushf
xorb
add
lods
pop
bound
stos
ret
pop
mov
movsb
adc
sub
js
or
ret
and
lcall
icebp
sub
rol
jae
lret
cwtl
mov
sbb
push
dec
ljmp
mov
out
hlt
fs
jmp
jp
mov
pop
test
or
in
pop
imull
int3
inc
inc
jg
adc
jecxz
fldcw
lock
or
fs
repz
aam
aaa
in
sub
cli
jb
cmpl
fisttpl
in
shll
aaa
mov
es
mov
xchg
sub
adc
scas
stos
xchg
push
pop
inc
sub
mov
mov
adc
mov
fistps
adcl
inc
popf
mulps
push
in
inc
das
xchg
jnp
testl
clc
inc
xchg
push
mov
mov
inc
jge
mov
pop
mov
dec
push
clc
fdivrs
mov
aaa
fcoms
cli
iret
aam
sub
push
jnp
sub
dec
lds
sub
mov
mov
push
jbe
xchg
clc
push
xor
andl
cmp
in
inc
pop
stc
shll
popf
sub
mov
call
inc
lea
xor
popf
sbb
scas
and
inc
mov
push
nop
dec
pop
mov
jle
out
or
mov
mov
loopne
out
aaa
dec
pusha
fs
insb
fistps
sarl
push
out
or
cmpsl
loope
and
push
jge
mov
je
mov
ficoms
cmc
movsb
cli
xchg
mov
push
and
cltd
hlt
sbb
popa
xchg
stos
jo
fdiv
or
in
sbbl
inc
mov
mov
popl
dec
adc
mov
in
out
xor
jle
loope
inc
cmpsl
icebp
adcb
pop
xor
push
int3
lahf
lcall
jg
mov
xchg
push
cmpsl
stos
inc
aad
ret
xor
cmc
pop
sbb
mov
lcall
dec
mov
cmp
sub
jne
and
dec
imul
les
or
xchg
xor
cmp
loopne
adc
xor
int3
xorb
in
stos
mov
inc
mov
cmp
dec
std
inc
sbb
data16
and
pop
repnz
jmp
mov
mov
out
add
cld
sbb
xor
push
xchg
add
stc
push
and
jnp
sbb
sbb
stos
adc
sub
fistl
mov
xor
dec
mov
mov
mov
ror
and
mov
sti
xor
movhps
mov
fldcw
icebp
jmp
cld
popa
pop
fidivl
cltd
adc
aas
mov
shrb
faddl
xchg
sub
movsb
dec
mov
push
pop
mov
mov
adc
ss
or
mov
out
aaa
xchg
mov
mov
inc
fcmovbe
lods
fiadds
sbb
pop
xor
or
and
xchg
out
sbb
cltd
out
push
cmpsl
ss
out
and
xor
lods
es
dec
cmpb
ret
pop
mov
jge
call
je
dec
fsts
adc
iret
ret
pop
idivl
rcrb
jno
jb
inc
mov
enter
lcall
adc
cwtl
sti
out
add
mov
test
push
pusha
inc
push
test
sub
divb
cmp
shlb
out
sub
and
xchg
je
xor
pop
sbb
xor
dec
push
imul
loop
shrb
out
mov
and
test
mov
int
jne
mov
inc
pop
jne
and
and
lock
push
popf
pusha
push
mov
xchg
imul
sbb
aam
fsub
iret
lret
fs
xor
aad
lret
fadd
pop
cmpsb
sub
pop
xchg
lods
int3
lock
outsl
mov
ljmp
stos
aaa
rclb
stos
lods
dec
jne
mov
sub
push
ds
fwait
shrl
pusha
push
cmp
std
xor
dec
sbb
jl
ja
push
mov
test
das
dec
fdivr
cmpsl
pusha
repnz
adc
les
out
adc
mov
mov
clc
mov
ror
xchg
and
inc
pusha
mov
mov
in
cmp
into
cmpsb
fwait
dec
jnp
jge
xor
sub
inc
jb
pop
fmul
popf
sti
imul
xchg
ja
orb
jno
or
mov
push
out
scas
sub
or
dec
lret
adc
jns
jbe
rol
push
lcall
pop
out
imul
or
test
add
daa
insl
xchg
leave
jg
jnp
loop
movsl
es
pop
out
cmc
pop
add
addl
add
inc
push
jae,pn
jno
mov
push
fcoms
sbb
sbb
lods
inc
mov
pop
sbb
xor
adc
pop
leave
xchg
aad
adc
loope
mov
jl
adc
fwait
and
daa
sbb
or
mov
push
cmp
jnp
xchg
jge
stos
push
cmp
mov
fisubrl
and
bound
daa
add
xchg
sbb
pop
mov
ljmp
pop
pop
mov
lahf
ss
in
cmc
pop
inc
cmp
jl
jo
lahf
cmp
fsubr
add
push
xlat
repz
pop
inc
movsl
ds
mov
sbb
adc
pushf
in
clc
enter
xorl
pusha
xchg
dec
scas
and
xchg
sarb
xor
jl
inc
outsl
daa
movsl
and
xor
pop
lcall
mov
xor
add
addl
sub
sbb
or
bound
clc
insl
ret
mov
test
mov
es
jb
aad
lods
mov
jno
mov
sbb
imul
push
mov
addr16
or
dec
add
add
pusha
stos
cwtl
xor
sbb
inc
jne
push
dec
cltd
inc
or
push
in
pop
iret
cmp
mov
js
mov
dec
mulb
mov
sbb
popf
ljmp
inc
dec
jae
lea
mov
scas
out
out
pusha
cltd
inc
and
push
repz
or
lahf
mov
jo
dec
xchg
jno
loope
xor
call
mov
add
jno
push
sbb
inc
or
xlat
push
push
aam
xchg
std
mov
pop
jns
or
out
in
xchg
adc
mov
movsb
dec
push
lahf
sub
ret
fistpl
add
ds
pop
ret
imul
movsb
xchg
mov
cmp
push
inc
int
add
mov
repz
inc
cltd
icebp
pop
shlb
jp
sub
xchg
sahf
inc
add
xorl
mov
test
fldenv
subl
insb
lcall
pop
jbe
xorb
adc
ja
nop
mov
dec
ja
sub
jns
dec
fadds
mov
sahf
push
xlat
sahf
js
push
insb
sub
or
cmp
daa
xchg
bnd
jo
mov
jecxz
jb
mov
loop
xor
ret
xchg
add
xor
outsb
int
dec
loop
test
push
xchg
icebp
insl
mov
mov
pop
fcmovb
mov
outsl
dec
out
gs
mov
popf
fists
inc
cmpsl
loopne
imul
in
xchg
hlt
insl
sbb
popf
jecxz
or
insb
pusha
cmp
mov
sbb
inc
hlt
popa
or
mov
sahf
aam
xor
add
dec
push
fisttps
sbb
mov
shl
cld
and
inc
cmc
int3
push
push
jnp
cmpsl
ja
lret
fidivrs
into
sahf
pop
jp
iret
cli
mov
arpl
push
out
xchg
insb
in
mov
aam
mov
sub
add
xor
jg
push
inc
and
notl
mov
mov
jge
push
sbb
push
or
xchg
sub
mov
add
fptan
imul
pop
or
nop
sub
push
cli
push
dec
enter
mov
lods
mulb
dec
xor
and
int
imul
fwait
sub
ret
fistpll
mov
loopne
fwait
push
in
stc
iret
or
push
mov
in
sub
jno
subl
mov
or
xor
mov
into
inc
jae
sub
lods
dec
icebp
lret
add
xor
jmp
mov
pop
outsl
dec
sbb
and
mov
lods
mov
or
xlat
or
mov
nop
ficomps
add
imul
pop
int
and
cmp
mov
sbb
push
jbe
inc
push
sbb
stc
test
fs
addb
rorb
jno
test
mov
push
test
xor
push
ret
add
test
xchg
mov
cmpsl
enter
dec
add
and
mov
sbb
jne
je
pop
inc
push
inc
fisubrs
pushf
orb
stos
out
iret
addb
scas
iret
cli
add
and
inc
or
idivl
callw
sub
cmc
dec
lahf
adc
out
push
xchg
jb
cmpb
insb
out
push
cs
sub
xchg
test
fisubl
ret
loopne
sub
sbb
dec
cmpsb
ds
mov
call
test
stos
push
sbb
iret
outsl
or
sub
jne
pushl
push
mov
inc
add
xchg
loope
mov
rorl
mov
pushf
xchg
jns
in
xchg
push
push
fucomi
pop
push
sahf
dec
dec
xrelease
xchg
sbb
cld
adc
aaa
out
mov
sub
fcmovnb
cli
dec
cmp
test
dec
sbb
xchg
pop
stos
push
xlat
lock
push
mov
clc
lds
insb
aaa
cld
cmp
or
out
orl
repz
xchg
adc
jle
fdivr
push
sub
fbld
lock
faddl
in
dec
sbb
dec
mulb
arpl
xchg
mov
cltd
fiaddl
push
lods
cmp
lret
lds
jmp
call
dec
stc
mov
divb
fwait
dec
jbe
or
jae
sbbb
mov
out
jmp
mov
fdivs
fmull
lock
lcall
add
jb
loopne
cmp
inc
mov
imul
js
jns
push
pusha
push
mov
add
loop
dec
faddp
fs
fnstenv
ss
sub
push
xor
jecxz
cmpsl
mov
push
call
dec
cld
sti
mov
push
mov
xor
outsb
imul
fs
int
adc
adc
xchg
fisubl
sub
inc
dec
scas
popa
pop
mov
in
xchg
cli
or
dec
xchg
jg
pop
jge
fnstenv
test
mov
jmp
mov
negl
adc
xor
test
divb
jl
iret
dec
cmpsl
fiaddl
les
mov
mov
mov
dec
jl
imul
add
das
mov
jb
push
xchg
mov
mov
cli
cmpsb
fists
push
and
or
mov
xchg
or
icebp
pop
fiaddl
scas
into
in
add
mov
in
data16
cmc
out
inc
lret
add
sbbl
cld
pop
cmp
xchg
sub
mov
jg
add
adc
and
iret
cmp
out
sbb
push
lock
aam
cmpl
outsl
xlat
mov
push
cltd
inc
jns
and
or
iret
icebp
cld
rcl
inc
cmp
mov
sub
pop
mov
mov
xlat
out
push
imul
int
stc
cmc
fcompl
jbe,pn
dec
sbb
inc
lds
loopne
aas
out
addps
ret
lds
cmp
hlt
push
rorb
push
les
mov
cmp
lods
lds
mov
adc
jo
loopne
scas
jae
push
jl
jo
insb
pop
dec
or
cmpsb
push
jp
insl
outsl
cmc
xor
jb
xlat
sbb
addr16
lea
or
cli
cmc
subl
cmp
pop
scas
and
cmpl
aad
ljmp
jne
xor
push
mov
mov
mov
push
dec
jge
das
into
mov
js
movsb
or
test
dec
movsb
imul
hlt
add
loop
jecxz
pop
icebp
or
arpl
fistpll
mov
pop
pop
sbb
push
jnp
repnz
xor
pop
std
out
jb
imul
pushw
mov
sub
xchg
daa
cli
popf
jmp
dec
sbb
adc
xchg
cs
sbb
movsl
push
iret
cmp
cltd
sub
xor
in
cmp
clc
pop
cmc
sub
xor
pop
cmp
inc
out
mov
iret
hlt
int
jmp
stos
cmc
into
gs
and
fcmovnb
cmp
mov
popa
loop
hlt
jnp
rclb
pop
fistps
pop
stc
leave
test
out
scas
jo
test
xchg
cmc
fwait
push
into
cmp
push
ja
fcmovb
test
loop
jecxz
xor
and
test
fmuls
and
dec
xlat
or
mov
adc
into
pop
nop
push
sbbb
push
xor
sbb
inc
sbb
loop
loope
mov
cwtl
inc
ret
fstpt
xor
in
dec
cld
mov
mov
mov
andb
xor
sub
dec
popa
xorb
mov
add
fadd
icebp
push
jb
xchg
lcall
jo
inc
push
shr
mov
dec
es
pop
xor
cmp
mov
js
sti
cmp
jg
lds
and
add
push
adc
push
mov
push
push
icebp
cmp
imul
pop
or
pop
enter
mov
scas
push
inc
adc
push
cmpsb
shrb
sub
or
mov
pop
mov
adc
daa
push
xor
fcompl
ja
test
ljmp
add
adc
movsb
mov
mov
aaa
daa
jge
fldcw
jbe
cli
loope
inc
mov
xchg
fs
ret
jne
add
in
in
push
add
fwait
insl
and
cmpsl
cmp
aaa
push
jne
mov
sbb
jne
pop
mov
mov
js
mov
mov
aam
xchg
push
xlat
rcll
jmp
pop
or
and
add
pop
jle
icebp
cld
clc
mov
iret
dec
jecxz
xchg
mov
pushf
mov
andb
cld
or
std
mov
xor
mov
data16
in
mov
rorl
mov
int3
fwait
xchg
and
mov
mov
cmc
dec
lret
push
es
push
arpl
pop
sbb
mov
mov
cltd
adc
mov
mov
inc
dec
cmp
sbb
push
push
and
pop
fxch
lods
cld
loopne
mov
adc
cmpsb
int3
cltd
adc
mov
into
mov
arpl
cmc
into
add
xchg
rorl
mov
inc
jns
cmpb
mov
mov
xor
xor
mov
push
test
leave
cmp
and
mov
sbb
dec
das
insl
pop
aad
xorb
mov
test
cmp
lods
cmp
xchg
or
jp
stos
popf
mov
shl
fsubrl
mov
cmc
push
inc
in
shl
data16
mov
idivb
mov
adc
js
imulw
mov
inc
call
or
push
mov
int3
outsl
push
ret
mov
xor
jae
mov
add
mov
xchg
pushf
push
sbb
repnz
dec
push
sub
sub
fmul
xchg
insl
pop
outsb
inc
mov
xchg
out
add
or
push
xorl
mov
in
mov
cmp
mov
or
scas
outsb
dec
pop
pop
nop
js
clc
arpl
cwtl
jmp
lea
mov
inc
fwait
dec
pop
fld
and
das
in
out
pushf
jo
bnd
insl
jge
mov
mov
enter
sub
lahf
scas
cmpsb
das
sub
cs
shlb
sarl
mov
shrb
sub
push
inc
nopl
sbb
lcall
push
ds
cmpsb
cmp
aaa
jno
cltd
adc
orl
cltd
pop
out
outsb
pop
in
das
ss
xchg
jbe
ret
mov
jl
add
rcrb
ret
jae
jo
pop
stos
and
sub
and
pop
rorb
fsub
int3
push
imul
aas
dec
orb
inc
pop
push
pop
ds
adc
mov
test
fnstcw
add
add
jmp
sbb
movsl
and
mov
test
add
fmuls
bound
sbb
xor
xor
repz
cmp
jb
pop
mov
jp
pop
out
inc
ret
inc
mov
in
and
das
shlb
pop
cmp
outsb
xor
lock
decl
push
add
add
mov
mov
xchg
cmp
cmp
dec
rcrl
inc
fistpll
mov
cs
aaa
mov
xor
or
lahf
xor
sub
mov
mov
pop
adc
cli
into
push
outsb
sbb
cs
inc
test
mov
cmp
aaa
movsl
test
clc
push
lds
push
mov
jno
es
rcll
pop
pusha
sti
testl
dec
cmp
fmull
inc
ja
inc
addr16
sbb
lods
shl
push
push
jg
data16
xchg
sub
dec
aam
xchg
insb
inc
daa
cmc
pop
fldcw
sub
pop
inc
xchg
pop
add
jns
fsts
push
out
js
fidivrl
mov
addr16
jge
jb
push
aaa
jae
cmp
xorb
popa
aas
or
mov
fwait
xor
aad
lock
jl
jne
arpl
sbb
jnp
jno
repnz
int3
xor
sahf
les
xchg
sbb
dec
aam
imul
fcomi
test
jbe
fs
aam
data16
sbb
lds
pop
cmp
push
pusha
jnp
pusha
loope
lea
lods
adc
adc
jmp
pop
sbbb
inc
lahf
aad
lds
ficompl
mov
loop
fistl
mov
sti
inc
insl
add
dec
in
add
subps
xor
mov
je
shrl
sub
mov
aaa
pop
lret
mov
mov
mov
mov
subb
ret
add
sbb
adc
mov
ljmp
xchg
jbe
pop
les
xor
pop
mov
jne
testb
cmpb
gs
inc
scas
shll
xlat
mov
ja
bound
mov
popa
jb
pop
xor
jle
imul
push
in
int
inc
insl
ds
test
push
inc
xor
fwait
pop
push
pop
pusha
cmpsb
mov
cmpsl
test
inc
in
aaa
xchg
mov
shrb
sub
mov
push
xor
push
out
xchg
ficoml
or
or
inc
sub
mov
cmpsb
pop
and
rcrb
repz
nop
sbb
pop
sbb
add
mov
scas
int
dec
cmp
int
sbb
cli
dec
loopne
push
inc
mov
movsl
fxch
fld
fldcw
loope
adc
mov
mov
pop
rclb
iret
adc
xor
and
shrb
inc
sbb
or
jo
and
test
test
xchg
cli
hlt
aaa
dec
sub
iret
add
jnp
lcall
shrl
sbb
xchg
test
js
cmpsb
and
fstpt
cmpb
inc
sub
adcb
add
inc
push
ja
loopne
mov
push
fs
xor
mov
sub
mov
sti
sbb
or
jns
cmpb
repnz
jae
repnz
divb
sub
xchg
or
jp
test
stos
mov
out
lea
xchg
sahf
scas
insl
insb
andb
xchg
lahf
stos
mov
dec
jo
mov
jmp
rcrl
and
pop
cltd
hlt
dec
pusha
pop
dec
cmpsb
std
add
dec
in
add
rclb
sub
bound
stc
xorb
stos
and
mov
leave
subb
mov
inc
adc
pushf
inc
movsb
jle
mov
inc
sbbl
and
inc
or
rcrl
data16
pop
sub
xlat
mov
and
shll
sub
out
andl
enter
nop
inc
out
ret
mov
xchg
pop
add
add
inc
mov
mov
jnp
or
adc
pop
sbb
aad
out
push
scas
jge
push
aam
mov
mov
ljmp
sbb
loope
inc
add
lcall
add
inc
lds
mov
dec
push
cmpsl
sbb
push
cwtl
sbb
dec
or
loope
jo
inc
sbb
adc
pop
fistl
fcmovnu
dec
lods
stos
leave
or
scas
test
mov
out
add
testb
push
clc
pop
adc
sbb
int3
cltd
mov
imul
sub
xchg
mov
dec
in
add
pushf
jmp
clc
mov
and
fisubl
sbb
outsl
inc
rcrb
xchg
push
mov
push
push
and
orb
ret
popa
inc
js
mov
inc
je
stos
icebp
mov
lock
je
pop
popf
inc
shl
into
test
sbbl
imul
mov
cmp
outsl
jle
outsb
stos
cs
push
repnz
jae
lret
push
shrl
xchg
jnp
sub
incl
mov
sahf
cmc
hlt
dec
fisttpll
clc
push
push
shlb
mov
pushf
xor
mov
nop
adc
sub
nop
mov
lret
and
and
push
push
aad
xchg
xor
dec
lret
xchg
cmp
or
dec
cmc
pop
cmp
lcall
arpl
dec
and
sub
fs
push
enter
adc
push
rcll
shrd
loopne
fisubrs
aas
aas
pop
popf
in
ret
psubusb
adc
mov
enter
out
mov
and
loop
imul
add
push
and
or
dec
mov
add
popf
int3
test
and
and
icebp
aaa
in
repnz
inc
sub
cmc
add
mov
mov
mov
inc
pop
cs
aaa
mov
and
mov
jmp
sbb
inc
dec
ret
or
xlat
in
cmc
pusha
xchg
mull
cmc
fs
out
lahf
sbb
das
jmp
inc
ljmp
mov
fsub
pop
out
fnstenv
popa
mov
push
gs
fsubp
sbb
mov
cltd
add
add
fidivrl
lods
pop
lock
jb
mov
mov
mov
in
push
pop
out
jmp
cmp
xchg
push
and
int3
fadds
mov
inc
insb
dec
xorb
cmp
cmp
inc
mov
lea
fsubrl
aaa
lds
dec
cs
cmpsb
jge
inc
nop
pop
xchg
fwait
dec
xor
les
push
and
call
repz
imul
or
push
cmpsb
xor
in
movsl
push
popl
scas
push
imul
in
sarb
sbb
or
mov
in
cld
ret
popf
cld
add
addr16
cmp
les
push
xlat
or
decb
int3
push
cli
mov
lock
call
sub
ss
aaa
xor
mov
sarl
xchg
mov
mov
mov
loopne
fcompl
pop
cwtl
fldcw
dec
cmp
fwait
xor
jmp
jne
dec
mov
loop
aad
mov
inc
mov
or
cmpb
xorl
mov
mov
cmovns
popa
cld
push
lahf
xor
and
inc
push
inc
movb
jnp
cmp
roll
pop
ljmp
push
pop
iret
xor
cltd
lahf
sti
lret
or
in
add
push
int3
xchg
xchg
nop
pop
lds
loop
and
rcr
loope
repz
std
jmp
decb
and
mov
enter
cmp
mov
sub
popf
lods
lcall
xchg
pop
fsubr
aad
inc
mov
or
fsubrp
jnp
xor
jle
add
in
test
bound
xchg
cmp
test
int
mov
xchg
scas
lods
fsubp
mov
cmpsl
add
inc
das
lea
cmpps
loop
outsb
lods
pop
rcrb
fldl
ds
inc
xor
mov
inc
insb
dec
fildll
insl
lret
notb
hlt
pop
adc
pusha
cmp
jge
out
sub
cmpsb
push
popf
adc
xor
rorl
sbb
sub
jbe
xlat
jbe
scas
pushf
xchg
daa
inc
sub
std
aam
in
cmpsl
sti
cmp
shlb
cmp
xor
adc
fwait
jno
daa
repz
mov
push
xchg
cmp
mov
sub
gs
daa
sub
cli
xor
pushf
das
sbb
aam
popf
fmuls
cmp
shlb
or
mov
pusha
xor
ja
pop
decl
fildll
repnz
xchg
add
jmp
xor
push
mov
xchg
xchg
ror
xlat
insl
xchg
adc
sub
mov
add
inc
lret
xor
push
popa
xor
movl
mov
inc
xor
sub
test
stos
jmp
jbe
leave
idivl
sbb
fcmovnu
test
gs
xchg
dec
sbb
hlt
rorb
das
scas
mov
sbb
fcompl
cltd
fistl
push
lret
nop
jmp
aad
bound
jp
adc
imul
xchg
dec
xchg
xor
and
cmp
ds
xchg
inc
popa
je
and
add
pop
ja
xchg
xchg
mov
inc
shll
mov
bound
dec
aas
lcall
lcall
mov
call
test
and
mov
jb
pop
ret
push
push
subb
mov
mov
jg
ret
mov
loopne
es
mov
mov
in
mov
cmp
daa
sbb
out
xchg
sub
rcrb
shlb
sahf
or
mov
xor
cmp
bound
cmp
stos
sub
xchg
cwtl
iret
xchg
data16
mov
shl
xchg
sub
and
push
mov
int3
dec
std
sub
stos
jbe
jmp
inc
arpl
aad
insb
imul
mov
jo
add
test
push
inc
sub
aam
cmp
pop
cwtl
push
cwtl
fsts
sub
mov
repz
popf
cld
mov
mov
sbb
push
fwait
sbb
xchg
xor
xor
jno
inc
addr16
xor
inc
push
inc
push
xor
mov
jl
and
push
push
enter
jb
mov
fsubrl
mov
xchg
adc
ret
sbb
or
mov
jg
cmpb
jns
adc
push
addr16
inc
sub
movsl
or
adc
push
aaa
or
push
les
repnz
mov
pop
adc
repnz
or
push
inc
out
mov
inc
adc
cmc
pop
and
mov
pop
sbb
fsubrs
cmpb
cld
jb
jp
out
or
cmp
movsb
mov
test
sahf
sub
mov
xchg
or
mov
pushw
xlat
js
dec
mov
sbb
test
iret
sahf
cs
testb
mov
test
pushf
jecxz
push
mov
and
add
xor
inc
sub
int
inc
jle
pusha
sbb
subb
ret
ja
cld
mov
adc
mov
imul
pop
ljmp
push
lods
imull
lods
dec
adc
arpl
fildll
lret
repnz
dec
mov
gs
movnti
sub
cmp
out
fiaddl
int3
daa
bound
ds
pushf
lea
adc
xorl
pop
pop
cld
fucomip
push
mov
xchg
inc
test
cmp
xor
dec
daa
leave
push
movsb
imul
lock
lahf
cmp
adc
addb
and
dec
iret
dec
mov
lret
or
imul
push
repz
adc
addr16
jno
mov
cmp
add
sbb
add
adc
cmp
rorl
cld
cltd
es
push
jle
pop
inc
movsb
cmp
jb
lds
repz
inc
mov
movsb
icebp
call
cmpb
cmp
clc
add
shll
fsubl
mov
adc
aad
insl
mov
jns
adc
daa
sarl
xor
xchg
pushf
les
xchg
sbb
cli
pop
mov
inc
mov
inc
in
xor
ss
mov
rorl
xlat
push
sarl
jmp
sub
sbb
mov
mov
jle
push
sbb
jnp
mov
int
add
and
inc
xor
scas
stc
outsl
sub
ljmp
pop
lds
imul
push
cmpb
pop
push
ljmp
pop
push
sahf
lods
or
jbe
and
cmpsl
pusha
test
sub
push
cmp
les
shrb
mov
call
xchg
or
insl
push
mov
jmp
adc
mov
add
jp
jnp
dec
mov
outsl
cmp
cmc
jno
loopne
aaa
jmp
mov
jge
add
fsubrs
xchg
xchg
aas
add
sub
mov
aas
lahf
aam
fstl
xchg
or
mov
push
pusha
dec
jo
jle
je
fstl
inc
xchg
push
sbb
mov
jge
sti
add
jae
mov
pop
or
or
insl
mov
imul
push
sub
xor
movsl
and
jne
jns
push
xor
mov
add
rorb
mov
inc
test
fs
out
jecxz
test
lea
add
js
stc
inc
pop
adc
cltd
dec
dec
push
dec
adc
fadds
lcall
fiaddl
call
xchg
loope
test
xor
cmc
aas
sbb
inc
test
addr16
mov
int
loope
or
jb
or
aaa
xchg
ret
dec
fldl
adcb
repz
rep
mov
adc
shrb
push
stos
adc
repz
test
lods
dec
dec
adc
jb
cmpsl
popf
mov
pop
mov
icebp
add
clc
fstl
sti
pop
scas
push
call
push
push
mov
in
pop
inc
xor
adc
inc
leave
stos
jecxz
call
rol
mul
add
in
jb
cmp
jge
out
or
pop
sbb
ss
pop
iret
icebp
int3
jno
pop
adc
into
dec
xor
push
mov
aam
pop
or
dec
dec
addb
lods
jl
ds
and
iret
cmpl
cmp
inc
mov
cltd
mov
jmp
push
lret
pop
cmc
xchg
outsl
jno
addr16
pushf
cli
mov
in
xor
scas
mov
aas
aas
imul
mov
or
rorb
rol
pop
out
inc
add
cmp
xchg
or
mov
pop
xchg
das
in
sub
xor
test
cmp
or
lods
cmpsl
add
fldcw
repnz
test
aas
xor
inc
std
mov
cmp
jmp
subl
sub
test
int3
in
mov
xlat
sarl
loop
loopne
adc
xchg
imul
push
lock
pop
jmp
xchg
fiaddl
xor
and
fildl
or
adc
jb
hlt
cmp
out
cmpsl
cmp
dec
cmc
mov
shrb
out
das
ret
dec
aas
imul
sub
fmul
push
outsb
jle
imul
ficomps
sti
and
jg
sbb
sub
nop
aaa
ret
sub
test
adc
xlat
cmp
stc
sub
inc
jge
add
inc
ds
aad
in
enter
cmp
ds
lock
into
ret
aaa
or
movsl
xor
pushf
add
pop
xlat
pushf
inc
pop
jmp
and
jle
pop
test
xlat
mov
xchg
and
cbtw
nop
cmp
and
add
fdivr
imul
or
xor
push
xor
add
push
xchg
sbb
cmp
shr
lds
add
inc
pop
lea
or
mov
mov
pop
imul
ja
sbb
sbb
mov
cli
jnp
popa
mov
icebp
inc
icebp
push
rcrl
or
insb
and
aaa
popa
sbb
push
and
je
xchg
aam
cltd
and
xor
pushf
xor
jo
sub
gs
cmp
and
xlat
adc
sbb
and
and
outsl
lret
cmp
fistps
jae
pop
insb
lret
repz
dec
shl
and
xor
adc
stc
xchg
mov
out
cmp
jb
xchg
pop
movsl
push
sahf
cmp
ror
push
and
mov
test
test
cmp
jmp
push
adc
mov
sbb
out
jne
daa
inc
roll
mov
cmp
cmp
movsl
lds
fsubl
mov
fists
shlb
ret
fwait
jmp
jo
ret
xchg
add
pop
call
xor
pop
push
mov
fistpll
addr16
jo
jg
pop
loop
mov
pushl
jo
stc
xchg
and
movsb
subb
mov
cmp
mov
cmc
inc
sti
addr16
sbb
scas
mov
xchg
sbb
mov
pop
rclb
mov
pop
and
sahf
xchg
in
pusha
mov
push
add
push
daa
scas
cli
adcb
mov
sub
or
jbe
pop
mov
jle
jmp
mull
add
sbb
notl
sub
or
pop
dec
xor
in
js
adc
movsb
mov
sahf
sub
in
push
pop
pop
ror
sub
mov
adc
notb
or
mov
lods
test
cmp
mov
addb
jno
data16
push
mov
sbb
or
loopne
mov
ja
jge
jo
aas
pop
inc
out
stos
sbb
dec
pop
loop
cltd
and
mov
out
lret
jo
in
xlat
xchg
mov
xlat
aas
xchg
jne
mov
jno
ss
lret
pop
pusha
aad
sbb
out
data16
movsb
lcall
mov
inc
pop
inc
pop
sbb
das
jbe
out
out
std
cmp
cmp
mov
pop
sbb
dec
lret
sub
pop
mov
mov
cmpsb
iret
push
dec
sub
int
mov
push
pop
xor
sub
das
mov
mov
sar
adc
mulb
mov
call
into
inc
or
cvtdq2ps
notb
mov
push
lods
into
scas
dec
jo
dec
adc
xor
pop
mov
cwtl
push
mov
mov
lock
mov
sbb
push
and
sub
mov
enter
mov
in
sub
add
mov
push
jb
jg
and
push
mov
test
adc
fildl
jp
mov
sub
shl
addb
outsb
push
std
repz
push
adc
sub
out
repz
inc
in
push
outsl
jne
dec
clc
lods
leave
jae
inc
mov
mov
cltd
push
pushf
push
xchg
mov
cltd
outsl
sarb
je
shrl
pop
xchg
cld
mov
push
aaa
testl
stos
iret
sub
aad
or
jl
sbb
pop
xchg
stc
arpl
movsl
pop
pop
mov
xlat
mov
or
sarl
clc
and
jp
fsts
pop
stos
mov
popf
lock
loope
fiaddl
mov
bound
dec
scas
inc
ljmp
fwait
insb
lea
mov
out
in
xor
adc
mov
cmp
rclb
or
mov
dec
insl
cmp
pop
pop
lods
or
fidivl
push
movsb
negl
mov
cmp
sahf
test
jno
icebp
and
jb
push
enter
mov
filds
call
sbb
jae
xchg
mov
out
dec
mov
mov
sbb
lds
lea
ror
ljmp
dec
add
out
mov
xor
es
call
dec
mov
lock
and
jbe
lret
mov
shr
xor
das
sbb
pop
roll
or
aam
sub
dec
mov
aaa
rorl
jne
push
sarb
stos
negl
cmp
lcall
icebp
xlat
fsubs
mov
fnstcw
mov
push
add
imul
jnp
xor
pop
xchg
sbb
mov
push
xchg
xor
stos
push
shld
jge
sub
mov
mov
insl
or
and
decl
and
cmc
pop
xchg
mul
popf
xchg
inc
imul
aaa
push
orb
xchg
pusha
dec
sbb
mov
aad
adc
dec
jae
cmpsl
lock
jbe
out
add
movsl
mov
fnstenv
clc
and
sbb
adc
aas
sbb
dec
mov
pusha
inc
xor
and
divb
dec
adc
in
mov
in
mov
adc
lahf
sarl
pop
inc
leave
mov
mov
iret
jnp
cli
jecxz
addr16
imul
and
jge
push
push
mov
adc
mov
bound
mov
bound
jbe
iret
stc
ret
inc
adc
ljmp
test
jae
std
lret
mov
dec
push
push
or
ds
sbb
aad
in
rcrl
jbe
add
pop
xchg
out
jbe
push
jne
repz
popf
js
dec
jl
and
ret
into
sub
pop
mov
mov
das
pop
popa
iret
aaa
daa
out
inc
or
jbe
movsb
bound
xchg
dec
adc
pop
stos
cmpb
rorb
adcb
cmpl
data16
jmp
popf
xchg
push
ljmp
pop
data16
int3
push
add
mov
daa
mov
cs
aad
mov
ret
add
aad
insb
jb
test
add
xchg
push
add
jmp
stos
lahf
popf
adc
dec
clc
xor
shlb
jle
mov
insb
mov
imul
es
cmp
in
mov
movsb
fisubs
mov
in
pop
jmp
push
cld
scas
mov
sbb
es
sahf
cmp
push
mov
add
adc
xor
cmp
scas
test
push
mov
inc
ret
out
les
cmp
cs
cmp
fnclex
mov
mov
pop
inc
js
push
pushf
push
cmp
movsl
mov
dec
sub
pop
sub
inc
es
add
je
xor
jg
xchg
mov
in
test
inc
jge
xor
or
and
adc
mov
les
rcl
dec
aaa
hlt
inc
dec
loopne
dec
or
inc
and
subl
data16
outsw
lret
jecxz
dec
pop
mov
jmp
mov
push
adc
pop
push
loop
fcompl
mov
push
mov
adc
jno
je
sub
pop
sub
adc
lock
out
dec
and
cmc
push
iret
xchg
int3
cmp
sbb
mov
or
dec
dec
sbb
mov
cltd
movl
scas
mov
sub
call
jge
sub
inc
dec
nop
mov
pop
clc
out
stc
enter
inc
lock
cld
xor
fbstp
adc
pop
add
inc
mov
lahf
dec
jmp
or
shrb
enter
mov
jle
fs
or
push
les
fldenv
adcl
gs
adc
aaa
nop
rol
push
mov
pop
cmp
adc
cwtl
insb
adc
lods
sbb
and
popa
ljmp
mov
pop
loop
rolb
cmp
cwtl
push
lods
fimuls
cmp
inc
inc
and
dec
xchg
or
popa
punpcklbw
mov
adc
xchg
inc
add
jbe
sub
adc
mov
dec
rorb
xchg
popf
movsl
lret
fstps
add
xchg
mov
cmp
mov
mov
sti
pop
pop
push
cmp
pushf
cld
and
hlt
pop
rol
aas
out
jmp
bound
pop
lret
adc
xor
mov
andl
push
ss
mov
and
flds
fcmovnb
inc
aad
jae
aas
xor
push
in
mov
stos
iret
xchg
test
test
pop
aam
test
out
std
out
lea
adc
inc
mov
outsb
cwtl
cmc
out
out
aas
sub
mov
call
and
fwait
in
outsl
scas
mov
cld
add
shll
lahf
sbb
stc
lret
aam
bound
popa
pop
aas
iret
push
push
dec
mov
mov
into
mov
pop
icebp
adc
mov
repz
addb
mov
push
sbb
out
fsub
mov
jecxz
int
add
daa
push
aad
adc
into
ja
jecxz
shl
pop
cmp
inc
test
idivb
jp
popa
mov
xor
lds
js
bnd
in
xchg
adc
leave
adc
das
lea
pop
push
in
jo
cmc
sub
into
mov
out
push
xor
mov
fwait
mov
lret
jmp
jo
mov
les
and
mov
es
and
aaa
sub
std
sub
ror
inc
shrl
sbb
lret
fists
lahf
inc
es
push
das
je
jbe
and
rclb
xchg
cmp
sarb
xor
push
jns
pushf
shrb
jae
push
sbb
pop
fs
pop
into
rorb
clc
aam
sbb
xchg
stc
xchg
jmp
sahf
xor
dec
in
mov
orb
mov
loopne
rolb
cmp
sbb
dec
push
test
pop
cmp
adc
ja
ja
jne
ficoms
pushf
mov
sbb
imul
and
mov
pop
js
or
add
test
mov
decl
repz
xchg
arpl
shr
out
inc
and
mov
bound
clc
lds
xchg
das
stos
sub
mov
and
pop
xchg
jae
and
stos
cmc
pop
cltd
jecxz
lcall
pop
and
aam
fcom
or
in
add
fs
repz
nop
push
jne
pop
arpl
xlat
adc
roll
xchg
rcl
inc
data16
idivl
insl
rcr
or
aaa
dec
mov
push
or
dec
inc
pushf
mov
mov
mov
loope
ret
aam
mov
inc
pop
or
dec
mov
call
dec
out
outsl
push
adc
std
xor
push
xor
in
popa
pop
xchg
sbb
pop
mov
inc
or
les
dec
inc
cmpsb
jecxz
jmp
xchg
sarb
lret
dec
or
jecxz
pop
jecxz
out
inc
out
sub
repnz
pop
add
lret
sub
mov
scas
mov
lahf
andl
pop
data16
inc
mov
cmp
adc
jb
outsl
pushf
mov
jbe
icebp
jno
loopne
push
std
outsl
dec
sbb
fwait
lcall
bound
cli
mov
jne
push
rorb
inc
scas
lds
and
in
fcoml
lea
negb
sub
inc
jmp
sbbb
std
movsb
inc
aam
dec
inc
gs
sahf
lret
pushf
jno
je
daa
add
inc
adc
push
dec
xor
inc
ja
sub
clc
xor
decl
insl
stos
ja
xlat
add
std
xor
les
jg
adc
cmp
fnsave
testl
dec
xchg
imul
xchg
in
jge
mov
mov
push
orb
shlb
out
adc
push
push
cmp
mov
mov
push
mov
sub
mov
and
inc
cld
add
and
mov
cmp
loopne
ljmp
inc
jns
sahf
fcompl
in
push
jg
mov
mov
decl
cmp
xchg
in
cmpsl
js
sbb
or
test
mov
out
pop
or
jbe
and
xchg
fisubrs
adc
sbb
mov
xor
mov
sub
mov
sub
sahf
arpl
cmp
adc
xor
mulb
dec
clc
ja
sbb
push
xchg
adc
inc
subl
call
loopne
outsb
aas
int3
mov
cmp
and
lock
push
and
leave
pop
xor
xor
orb
or
movsl
rclb
addb
mov
pop
dec
jmp
fistl
jne
push
les
mov
mov
or
gs
aaa
sbb
add
ficomps
dec
add
mov
out
sbb
es
pop
adc
pop
outsl
adc
icebp
xchg
cwtl
add
pop
nop
stc
sub
push
mov
sbb
ljmp
dec
enter
add
sbb
fmuls
or
and
sub
les
addr16
push
in
jo
sbb
insl
lahf
popf
popl
add
adc
mov
std
cmp
cmc
and
or
popa
std
ljmp
xchg
xchg
inc
sti
mov
sub
popa
cmp
mov
adc
and
adc
ds
hlt
mov
lock
lcall
pop
out
arpl
loope
sbb
ret
jl
mov
jbe
cmp
cmp
xlat
stc
mov
sti
js
fs
xor
rolb
xor
push
push
lods
cmp
add
cli
add
xchg
dec
ret
cwtl
fwait
xchg
out
cwtl
xor
cli
cmpsb
cmpsl
pop
mov
inc
dec
mov
sarb
jp
dec
ds
push
pop
pop
arpl
fdivrp
jg
cmc
add
fwait
fidivrs
idivb
dec
ret
lea
ficomps
imul
fisubrs
mov
jge
jl
xchg
jle
adc
and
jae
pop
sub
pop
cmp
fsubs
push
outsb
cs
sbb
in
call
shll
mov
jecxz
cmp
mov
dec
and
cmp
xchg
xchg
or
cmp
add
fnstsw
arpl
dec
jo
scas
es
aas
rorb
push
mov
xchg
sub
sub
sub
dec
push
into
adc
out
into
into
and
mov
iret
fs
andl
cli
mov
mov
adc
ljmp
out
out
cltd
inc
xchg
mov
or
mov
push
mov
mov
insl
sbb
sahf
and
inc
inc
sbb
ret
xchg
ljmp
pop
movsb
negl
out
jp
xor
xchg
lret
xor
divl
lahf
mov
pop
mov
je
xchg
pop
adc
inc
movsb
in
xor
cltd
or
cli
inc
add
mov
xchg
pop
sbb
mov
push
xor
insb
imul
adc
mov
jns
pop
test
inc
loopne
jae
mov
jmp
jb
inc
fs
mov
xchg
into
cmp
scas
ljmp
cmpsb
shlb
mov
call
sti
icebp
call
insb
iret
arpl
mov
aad
and
sub
jae
pop
mov
push
pop
shll
cmp
test
lret
cmp
sti
out
in
xor
out
mov
aaa
adc
mov
push
cmpsb
or
lret
enter
mov
xchg
lret
int3
mov
xlat
mov
and
or
cmpb
ss
popl
mov
dec
xor
dec
cmpb
dec
scas
jge
lcall
scas
loopne
cltd
loope
jmp
scas
push
hlt
pop
or
stc
outsl
bound
mov
xor
roll
fdivrs
sub
mov
adc
xchg
cwtl
gs
dec
mul
jge
sbb
daa
icebp
es
movsl
cmp
push
pop
cmpsl
pop
add
stc
mov
adc
jns
sahf
iret
addb
xor
lock
add
cltd
mov
out
mov
mov
pop
cmc
shl
lahf
jbe
fldl
loopne
mov
lahf
mov
int3
hlt
jle
lea
outsl
pop
outsb
leave
fistl
fs
push
into
xchg
pop
and
jmp
push
jnp
pop
jae
fucomi
pusha
fs
mov
and
pop
xchg
or
adc
mov
mov
sub
movsl
xchg
js
push
inc
push
dec
adc
mov
aas
insb
insl
adc
and
mov
fsts
ja
leave
movsl
push
dec
mov
mov
ja
mov
shll
pushf
xchg
adc
daa
rcll
movsb
push
dec
mov
push
imul
pop
xor
cld
adc
repz
sbb
test
push
cli
stos
lods
mov
or
add
test
xchg
sbb
test
mov
jge
icebp
das
in
pushf
lods
add
pop
enter
mov
sbb
daa
fwait
test
js
mov
inc
or
rcrl
and
jmp
mov
adc
xchg
std
pusha
scas
pop
adc
fs
push
push
dec
adcl
lods
jecxz
and
jns
js
das
lods
pop
cmc
sbb
pop
jg
jle
xchg
das
das
jne
cmp
outsb
mov
push
and
repz
iret
ror
mov
je
int
cmp
adc
repnz
es
jo
into
call
or
loopne
cwtl
gs
xor
mov
pushf
mov
inc
cmc
leave
push
mov
jmp
scas
shrb
xchg
popa
adc
rcrb
push
lds
repz
cmp
pop
push
lcall
out
add
jmp
inc
pop
inc
xchg
out
imul
lret
pop
outsb
mov
es
mov
jge
jmp
in
jne
fwait
cmp
cmc
divl
push
fistl
addb
sbb
and
repz
jne
emms
mov
push
sub
fs
out
roll
jl
adc
xchg
lods
nop
inc
jmp
scas
fistpll
stc
test
jl
xchg
push
adc
lcall
xchg
cmp
shr
adc
cmp
xor
pop
mov
mov
sub
rclb
push
xlat
push
jecxz
add
cmp
dec
adc
shr
fidivrs
and
and
and
push
call
cmpsl
in
sbb
test
stos
sub
test
pop
sub
movsb
int3
daa
pop
aam
lret
sti
test
inc
cmp
cs
mov
mov
and
sub
out
lahf
clc
nop
add
ja
faddp
out
jbe
nop
and
fidivrl
popf
icebp
rclb
popf
push
adc
hlt
and
mov
nop
pop
jp
mov
xchg
enter
jne
and
shrl
inc
xchg
sahf
dec
sbb
and
fidivl
cltd
data16
xor
lcall
shrb
mov
pop
je
mov
daa
pop
negl
cmp
dec
push
mov
inc
test
test
fcompl
mov
and
and
add
cmp
sub
adc
cld
jmp
dec
mov
pop
xor
imul
push
test
mov
outsl
cltd
or
xor
shll
push
lret
push
pop
push
les
pop
arpl
sub
xlat
pop
arpl
ror
sbb
repnz
xchg
test
insb
pop
and
mov
xlat
sub
or
jbe
jns
jns
adc
fsubrs
cmp
outsl
std
scas
popl
xor
clc
cmp
mov
inc
jnp
mov
and
jecxz
rol
inc
mov
jmp
test
xchg
or
xchg
cltd
push
push
sti
sub
in
adc
fs
jge
cld
fwait
andb
mov
adc
test
cli
mov
pop
jge
das
repnz
sti
cli
push
cltd
and
les
pop
xlat
mov
cmp
fimull
popa
out
iret
pusha
lock
pop
sbb
sub
or
pop
lret
mov
push
outsl
rorb
jmp
jne
push
sbb
adc
push
mov
in
pushl
cli
add
jne
lret
push
cwtl
push
les
jb
out
dec
cmpsb
lea
outsl
lods
and
iret
sbb
push
insb
mov
push
mov
mov
shll
movsl
mov
mov
rorl
and
xor
cmp
fsubrs
iret
lcall
mov
ja
mov
jl
sbb
mov
cwtl
cmp
dec
testl
jp
hlt
jns
jns
adc
scas
cmp
fimull
aas
dec
idivb
lret
add
das
adc
lcall
adc
mov
stc
jg
dec
or
lret
dec
sbb
jns
loope
jmp
fmul
sti
push
push
pop
in
xchg
pop
sbb
xchg
sahf
mov
addb
cmpsl
int
push
out
fadd
pop
sub
or
and
mov
movsb
fists
hlt
jne
out
push
mov
orl
in
cmp
sbb
test
ficomps
xor
xor
outsl
into
xchg
fcomps
push
xchg
sti
mov
sub
mov
stc
jae
jnp
cs
popa
mov
cmp
add
stc
loopne
xor
xchg
inc
xor
cmp
in
inc
icebp
add
ja
out
or
iret
cmp
lock
jge
dec
mov
jo
cwtl
dec
outsl
cmp
adcl
decb
push
jecxz
shlb
push
cmp
dec
scas
pushf
js
test
adc
add
sub
ss
add
imul
and
cwtl
jne
adc
xlat
mov
popa
int3
cmc
or
push
xor
jg
adc
pop
xchg
aam
push
push
sub
fcmovne
shl
push
popa
jb
lret
pushf
xor
push
and
and
push
sub
jo
and
mov
scas
adc
dec
gs
mov
push
cmp
lcall
imul
pop
inc
mov
cld
sub
pusha
je
lret
hlt
popf
testl
arpl
inc
lods
cmc
sub
push
mov
jmp
or
xchg
ret
sti
or
jl
pop
mov
pop
shll
xorl
out
cmp
pop
cmp
or
pop
jbe
xchg
jmp
mov
cmp
adc
xchg
push
bound
add
cmp
lret
adc
inc
ss
scas
add
in
ret
std
dec
shl
ret
fldcw
and
or
mov
jae
mov
xor
cltd
pop
dec
std
js
cmp
sarl
pop
sbb
dec
dec
adc
cmp
pop
testl
xchg
andl
mov
out
int
inc
imul
push
stc
rol
mov
orl
inc
clc
xchg
mov
nop
push
mov
pushf
js
xchg
inc
xchg
sar
jl
cmc
xor
sub
inc
fcompl
add
inc
out
daa
data16
ss
and
test
icebp
in
popa
mov
push
faddp
jp
cmp
sbb
xchg
dec
jo
sub
xor
and
lock
push
cmp
das
hlt
xchg
into
iret
data16
pop
test
inc
inc
mov
shll
mov
adc
incl
rorl
mov
ret
mov
out
imul
mov
mov
pop
bound
mov
lcall
lock
test
pop
test
sub
or
or
pusha
sbb
or
scas
cmp
lock
ret
popa
inc
pop
dec
xor
mov
inc
sub
push
sarl
or
insl
lea
add
icebp
sarl
in
les
fdivrs
lret
lcall
imul
cmp
iret
push
cld
jo
outsb
jp
cmp
fdivl
inc
pushf
pop
pop
rol
mov
test
or
in
inc
xchg
jp
add
pop
fs
icebp
sub
mov
ret
test
dec
inc
xchg
cmp
imul
xchg
and
or
pusha
cmp
inc
int3
adc
test
les
push
xor
push
push
mov
cmpsl
push
movsb
add
mov
jo
dec
push
dec
inc
jp
mov
fwait
insb
and
push
add
sbb
ffreep
push
push
lret
loop
dec
lea
sbb
pop
mov
scas
sub
adc
push
jl
add
inc
or
mov
bound
xor
lret
scas
hlt
jo
lods
adc
jno
out
pop
lods
je
mov
pusha
push
and
imul
xchg
and
rol
fcomps
and
loopne
jbe
or
rolb
loop
lret
rol
xchg
add
push
and
sarb
loop
mov
lahf
movsb
pop
outsb
add
movsl
mov
out
pop
cmp
xor
dec
cmp
cmp
mov
mov
sahf
or
lahf
inc
ret
dec
and
lods
inc
dec
movsl
lods
mov
sub
or
sbb
ljmp
and
sbb
aam
sub
subb
dec
fcoms
popf
popf
clc
xchg
dec
movsb
xchg
shrb
lds
out
imul
iret
data16
sub
js
sbb
pop
movsl
push
mov
jl
pop
loop
sbbb
popf
and
lock
imul
mov
cmpsl
les
inc
cmpsb
mov
stos
aas
pop
or
adc
xor
mov
lcall
pusha
cmp
xor
scas
mov
test
xchg
int
mov
pop
cmpl
jl
lret
insb
dec
adc
nop
push
mov
inc
pop
jg
in
test
cmpsb
mov
gs
push
cmp
cmpsl
xor
daa
out
scas
out
movsl
jle
jne
mov
cmp
sbb
inc
xchg
jae
mov
imul
pop
jge
pop
jbe
push
push
cmp
ja
cmp
mov
movsb
jae
scas
xchg
jge
test
pop
shrl
test
and
jns
rorl
stos
jbe
add
shl
xor
xor
adc
xchg
in
push
sub
cmp
jge
and
and
test
inc
push
pop
or
loope
jmp
std
iret
cwtl
mov
adcb
push
and
lods
xchg
fs
dec
inc
aam
hlt
pop
pop
jb
sarl
lock
out
sbb
movlps
sbb
gs
ret
pop
xor
jae
and
add
mov
loope
mov
and
xchg
inc
add
adc
and
xchg
jmp
imul
test
jle
roll
dec
or
or
rorb
cmovnp
mov
ret
mov
sub
xor
imul
pusha
push
in
into
jae
xchg
and
sub
lcall
adc
fsubrp
mov
fwait
jb
int
adc
cmpb
mov
sti
adc
addl
out
or
jbe
ret
jle
add
push
sub
sbb
int
into
loop,pt
pop
lgs
pop
mov
mov
and
cld
sub
mov
jnp
inc
mov
push
lods
negb
scas
dec
sbb
adc
jmp
dec
sub
cltd
lahf
shrb
sti
add
imul
bound
outsl
sbb
push
jns
ljmp
cli
int
clc
into
movaps
jl
adc
ffreep
jne
int3
jno
es
je
mov
dec
cmp
jp
mov
mov
aaa
jl
in
pop
fwait
or
xchg
xor
add
lods
mov
dec
test
fs
loope
loope
std
arpl
push
outsl
or
mov
sub
sub
mov
js
mov
or
push
fldenv
stos
enter
xchg
repnz
ficompl
ja
xchg
das
sarl
mov
bound
xchg
bound
scas
sbb
mov
pop
sarl
add
mov
sbb
cwtl
ss
idivb
mov
jecxz
mov
and
sub
clc
lods
les
mov
mov
jmp
xor
mov
insb
or
mov
hlt
lds
push
or
test
in
lock
add
push
adc
jbe
pop
fildll
fwait
cs
adc
xor
mov
and
and
push
inc
mov
mov
sub
push
jg
sahf
mov
insl
dec
push
inc
loope
jo
mov
jle
insb
sub
movsb
ds
jne
mov
dec
jge
je
lahf
xor
sub
jp
scas
xorl
shlb
jb
cmp
sub
addr16
adc
test
mov
mov
xor
fiadds
lret
sub
outsl
cmp
je
addb
outsb
out
fmuls
imul
aaa
dec
xchg
loopne
adc
adc
imulb
jg
pop
lods
loope
dec
xchg
sbb
jo
lock
inc
jp
lock
lcall
vmaskmovdqu
loope
push
ret
xor
mov
inc
xor
push
mov
or
xor
scas
mov
mulb
mov
pop
xorl
mov
xlat
loope
pop
stos
lahf
mov
cmpb
icebp
jle
movsl
shlb
stc
ret
dec
pop
mov
mov
flds
ljmp
sti
push
stos
mov
lcall
sub
in
sbb
subb
in
adc
mov
pop
fwait
pop
ja
push
mov
sti
jg
pop
loopne
lahf
pop
into
daa
add
or
ficoms
rcll
push
push
ja
rcrb
pop
xchg
loopne
and
dec
cmc
xchg
insl
ss
ss
or
out
sbb
pushf
decl
mov
out
cmpsb
cmp
mov
sub
mov
sarl
adc
mov
add
pop
enter
lret
add
leave
cmpsl
outsl
xchg
rol
aad
hlt
cmp
sbb
xor
jno
pop
mov
sub
add
and
imul
sbb
jge
inc
xor
aam
stc
aad
mov
ja
or
inc
inc
jle
xor
push
pop
pop
mov
int3
movl
mov
xor
les
jmp
or
adc
push
pop
mov
and
mov
ret
cmpsl
mov
or
and
loope
mov
scas
rolb
aas
movsb
das
addr16
dec
loop
mov
dec
ljmp
outsb
mov
cmp
add
int3
xchg
add
push
jb
pusha
jmp
xchg
leave
pop
lock
xor
adc
jnp
mov
jb
mov
push
loopne
jmp
es
sbb
jp
fs
aas
push
aas
and
sbb
jmp
cmc
mov
pushf
mov
adc
call
cli
cmp
xchg
ja
inc
gs
pop
notb
xchg
decl
stc
subb
mov
ret
dec
sbb
jmp
lods
push
mov
pushf
subb
fisubrs
inc
int3
data16
mov
in
jp
movzwl
mov
outsb
jno
fs
jg
mov
mov
test
sub
fsubrs
mov
nop
jge
loop
sub
jnp
cmp
push
dec
rol
cmp
sti
aam
xchg
leave
jo
inc
push
fisttpl
dec
add
ss
mov
roll
push
cmpsl
popf
sarl
adc
shll
xor
arpl
mov
mov
dec
dec
out
add
popf
sub
into
mov
mov
mov
or
andb
je
xorl
sahf
push
hlt
push
dec
mov
insb
aaa
pusha
add
iret
xor
push
cmpsl
sub
pop
fcomps
lea
arpl
pop
cmp
push
and
sbb
cmp
cmp
pop
mov
aam
dec
fcomps
cmp
out
frstpm(287
push
std
aas
je
mov
xchg
dec
sbb
add
jne
loop
sub
out
insl
repz
mov
lret
xor
lret
sbb
sbb
mov
pop
xchg
sbb
call
incb
pop
in
rclb
sti
lock
clc
test
dec
movb
pusha
mov
call
adc
jmp
inc
lea
stos
test
in
or
jbe
push
lcall
push
xor
dec
push
imul
inc
daa
pop
movsl
inc
mov
arpl
out
icebp
jp
mov
dec
jecxz
fbstp
mov
xlat
adc
fistl
fldenv
pusha
sub
sbb
jg
mov
dec
lahf
push
jno
inc
add
or
popa
fisubl
nop
rorb
xor
mov
in
mov
hlt
inc
call
addr16
inc
lods
arpl
leave
sbb
sbb
ss
jecxz
lret
mov
sti
rorl
out
pop
loop
ljmp
mov
or
nop
jno
xchg
sbb
xchg
and
mov
cmp
rclb
jecxz
out
test
jmp
outsl
mov
sbb
lods
mov
nop
jg
sub
sti
jle
jl
out
daa
adc
pop
cmp
rorb
xchg
out
mov
movsl
fidivrs
lcall
xor
fdiv
aad
es
cmp
cmpsb
and
add
das
dec
loopne
js
aam
mov
dec
shl
test
loop
and
jo
frstor
xor
jp
aaa
and
mov
in
imul
dec
daa
jo
aaa
adc
jnp
fisttpll
xchg
ficoml
jns
add
hlt
aad
and
dec
mov
cmpl
movsl
into
in
pop
ffreep
popa
xor
inc
call
mull
mov
clc
pop
push
sub
jecxz
leave
sbbb
cltd
pop
rorb
xchg
sub
shlb
aaa
fdivp
xchg
aas
pop
sub
xor
cs
pop
jb
jae
cmpl
outsb
mov
bound
adc
sbb
insb
int3
repnz
xor
sbb
fwait
xor
add
lods
inc
inc
das
mov
jno
jp
and
dec
in
cmp
test
rorb
daa
loopne
stc
aad
pop
scas
pop
ret
arpl
xor
std
pop
cmp
xor
jnp
cmp
jge
js
push
popa
loop
adcl
cwtl
ja
push
inc
or
add
xor
pushf
lret
push
flds
leave
sub
sub
cli
jle
scas
out
mov
in
std
fwait
mov
jbe
lds
fs
ds
lea
fwait
icebp
in
mov
push
movsb
popa
mov
dec
jbe
xor
jmp
aaa
jne
out
cltd
mov
pop
mov
jmp
enter
cmp
inc
je
and
mov
fdivs
pusha
mov
dec
pop
les
add
in
es
ja
fbld
mov
jmp
pop
xor
or
add
insb
gs
pop
adc
out
mov
push
jne
dec
push
cmpb
jo
sub
push
push
arpl
clc
stos
jg
add
outsb
test
in
inc
xchg
mov
dec
cmc
popa
rcll
add
es
in
xor
femms
push
movsl
dec
sarl
fdivs
jno
jo
mov
sub
popa
sbb
xchg
add
shlb
push
ja
leave
sti
xchg
movsl
into
xor
lret
dec
lea
push
jl
insl
add
mov
pop
add
xchg
mov
push
sbb
adc
imul
pop
jge
int3
push
push
dec
adc
adc
mov
jg
andb
xor
dec
jg
addr16
je
inc
sub
popa
sbb
jmp
mov
pop
movsb
mov
and
pop
lods
xor
unpckhps
and
jp
in
addr16
fnstcw
ljmp
bound
mov
cwtl
mov
pop
mov
rorb
in
sbb
ret
inc
xchg
push
xor
cmp
push
pushf
push
adc
pop
cwtl
mov
cmp
das
dec
inc
cltd
and
inc
out
movl
pop
adc
push
push
dec
ficomps
xchg
xor
imul
or
or
or
fcom
pop
xchg
cmpsb
adc
testl
push
incl
orb
rcll
test
mov
mov
pop
add
or
nop
xchg
xchg
and
push
sbb
and
and
mov
lods
pop
ss
jno
insl
pop
pusha
imul
jnp
imul
inc
loope
test
push
pop
or
mul
push
out
sub
push
mov
dec
mov
in
sbb
inc
inc
cmp
sub
and
out
sbb
sbb
jo
add
jae
std
jge
loopne
or
repz
xlat
dec
paddd
cmpsl
aad
pop
ja
add
ret
dec
jno
cwtl
add
cmc
add
mov
adc
lret
sbb
fisubrs
test
pop
dec
dec
inc
mov
insl
jmp
xchg
cmp
mov
or
xorb
imul
dec
cmp
repnz
mov
int
mov
push
shl
jne
lcall
mov
xchg
xchg
sbb
shrl
imul
into
adc
rol
or
dec
jbe
sub
js
push
enter
push
pop
lock
xchg
jle
xchg
in
push
push
mov
lret
outsw
sti
mov
lcall
fwait
dec
and
push
outsl
adc
sub
fwait
mov
rcrb
push
addr16
shll
xchg
aaa
inc
xchg
xchg
inc
scas
xchg
push
mov
jbe
mov
cs
out
adcl
fsubrl
mov
adc
push
cmp
xchg
cmp
fldcw
jmp
shll
pop
pop
add
dec
fistps
test
sbbl
ljmp
clc
add
mov
cmpsl
std
lock
repz
lods
in
arpl
sub
and
ds
sub
add
xchg
int3
cmpsb
jp
push
dec
jne
push
jne
pop
inc
loope
push
int
loop
es
xor
mov
int3
cmp
repz
jecxz
scas
pop
sbb
mov
lods
pop
scas
cli
shlb
dec
adc
mov
fimull
add
shr
flds
popf
pop
insl
clc
xchg
bound
ret
dec
mov
rcrl
stc
js
std
cwtl
shrb
lea
adc
rcll
xorl
pop
fsubr
jmp
push
cmp
or
push
cld
test
xchg
shll
mov
pop
push
sub
fldt
cltd
test
loop
cs
daa
jb
xor
ret
mov
mov
scas
jge
enter
andb
sub
add
insl
popa
mov
sub
incl
adc
loope
mov
sbb
cwtl
jns
ret
inc
out
xchg
cmp
dec
or
stos
or
pop
push
push
xor
or
sub
clc
mov
jmp
pop
hlt
pop
jmp
mov
xchg
hlt
cmp
iret
lcall
and
jns
push
imul
ficomps
inc
and
add
imul
gs
and
dec
cmp
or
mov
scas
rorl
mov
daa
lods
int
pusha
jp
inc
jnp
ror
jo
arpl
jb
clc
testb
push
outsl
rcll
in
dec
scas
cwtl
loop
cmpsl
and
dec
aas
cmp
clc
aaa
dec
push
sbb
push
mov
and
lods
mov
lock
imul
aam
pusha
fdivp
push
lret
inc
sti
bound
std
xchg
aad
mov
sub
inc
sbb
add
or
jge
imul
fcomi
psubusw
jnp
mov
in
mov
in
mov
enter
test
rorl
pusha
cmpb
mov
mov
or
stc
xchg
test
jle
cmpsl
sbb
and
adc
frstor
scas
cmc
push
aas
or
sbb
push
outsb
std
roll
out
lret
or
jbe
mov
push
ret
ljmp
xchg
imul
and
sub
inc
sub
dec
xchg
mov
push
cmp
mov
shr
pushf
adc
jnp
lods
repz
lods
add
mov
sub
xchg
in
inc
xor
xlat
aam
dec
xchg
push
movsb
dec
inc
adc
mov
pop
or
fldcw
pop
into
arpl
int3
rcr
mov
sbb
adcl
int3
and
push
rcrl
cmpsb
xchg
lret
test
arpl
lret
js
inc
and
mov
movsl
gs
cmc
cmp
lea
adc
cmp
decb
sbb
shlb
xor
and
mov
or
hlt
call
xchg
lret
imul
inc
dec
inc
es
ja
insl
mov
dec
stos
test
xchg
mov
es
push
gs
movb
and
repz
xor
and
mov
push
dec
dec
ror
rorb
lea
dec
cwtl
inc
cmp
pop
jbe
mov
mov
jne
and
jl
cmp
fadd
aaa
mov
mov
insb
stos
lods
mov
or
leave
bound
mov
ror
and
test
into
add
mov
in
jno
mov
lret
adc
mov
pop
or
shll
add
mov
cmpsl
sbb
push
sub
push
jecxz
push
call
das
adc
test
ja
in
jmp
dec
bswap
cmpsl
aam
xchg
shrl
mov
xchg
adc
andb
insb
add
push
mov
add
jno
mov
cmp
cmpsb
sahf
iret
mov
imul
test
sub
sub
mov
aaa
rcll
push
pop
adc
push
sti
outsl
add
adc
mov
xchg
push
mov
lcall
repz
sbb
fldt
bound
mov
adc
ret
adc
shl
out
in
sti
dec
mov
pop
mov
scas
hlt
imul
inc
rcrl
es
pop
lods
adc
jecxz
push
push
adc
lods
inc
xor
in
add
dec
xchg
pop
mov
jno
add
cmp
or
test
cwtl
out
pop
mov
inc
ffreep
xchg
pusha
sbb
push
sti
mov
or
inc
cmp
fmul
push
test
add
mov
orl
jp
push
fists
cwtl
cs
push
repz
xchg
sti
cmpsl
sub
add
nopl
sub
pop
and
ds
xor
imul
insl
in
cmp
rcrb
js
popf
icebp
mov
out
je
loop
or
xchg
adc
inc
cmp
mov
les
aaa
in
popa
notb
adc
mov
aam
rcrl
and
push
inc
stos
or
add
and
mov
jge
fsubr
mov
hlt
dec
fisubs
push
lds
in
adc
fimull
pop
xor
fistl
push
and
pop
mov
into
push
ret
pop
xlat
cmp
imul
clc
call
or
add
scas
xlat
ret
adc
mov
mov
bound
mov
enter
mov
push
movsl
add
xor
enter
pop
pushf
ss
iret
pop
and
mov
aaa
rcll
sub
ds
push
push
or
push
ljmp
mov
iretw
aaa
ret
les
lcall
dec
in
pop
loopne
test
xchg
int
xlat
or
inc
ja
mov
aad
xor
xchg
adc
sub
jp
movsl
movsb
int
lods
aad
mov
std
adc
shrl
test
mov
out
ret
or
push
in
xor
ret
loope
push
sub
leave
lret
shl
xor
in
mov
inc
icebp
out
insb
mov
push
aaa
mov
outsl
sub
popa
add
fcoms
jge
jle
cltd
hlt
fisttpll
orb
cmp
lret
outsl
hlt
push
bound
inc
xchg
test
cld
jl
into
lock
adc
add
mov
mov
cmp
inc
sbb
push
pop
lods
dec
filds
out
or
sbbl
push
push
ss
nop
rorb
cmp
jnp
pop
imul
pop
mov
out
imul
lret
mov
push
xor
cmpb
add
xor
sub
and
test
ja
push
ss
das
loope
out
cmp
subl
mov
rcl
add
loopne
shlb
push
mov
movsb
cmp
fsubp
lret
aas
and
dec
outsl
xchg
test
sbb
sub
and
sub
out
lods
jne
cmp
add
xor
cmp
je
mov
mov
outsb
dec
aas
pop
xor
pop
mov
je
std
mov
pop
test
daa
mov
jg
fdivl
or
jno
adc
push
mov
mov
dec
add
mov
inc
xorb
dec
xchg
aaa
nop
adc
sub
add
orl
or
lods
or
mov
addl
lahf
clc
loope
mov
cmp
cmp
sbb
ljmp
push
mov
repz
addb
xlat
push
scas
int
call
or
cmp
out
decl
je
mov
notl
or
fdivl
mov
mov
adcb
int
and
cmpsb
and
add
mov
pop
mov
lahf
pop
add
fs
ja
pop
out
scas
mov
inc
xchg
jae
mov
les
fdivl
lcall
nop
cmp
fiadds
xor
adc
test
aam
cmpsb
push
aam
inc
inc
xor
mov
std
dec
sbb
add
push
push
hlt
jmp
push
cmpsb
cwtl
mov
or
sub
mov
push
and
stc
or
or
cwtl
cwtl
inc
mov
addr16
inc
outsl
test
js
or
jb
push
or
jmp
pop
daa
enter
mov
sahf
jge
arpl
pop
mov
testl
and
or
dec
addr16
mov
pop
dec
add
sub
ja
out
add
inc
ret
jnp
and
ret
ret
test
push
push
enter
ret
push
movsb
and
stc
fldl
push
jns
shlb
sbb
push
je
push
bound
out
dec
mov
lahf
lds
js
test
or
lods
inc
ffree
or
sbb
icebp
or
ret
jbe
bound
mov
test
ljmp
fst
jle
or
jecxz
mov
sarb
jle
add
jp
in
ret
clc
rorl
insl
clc
or
sub
pop
sbb
into
mov
jl
mov
inc
cmc
loope
xchg
cmp
dec
mov
movsb
cltd
push
sahf
lcall
shl
xor
sbb
loopne
xlat
xchg
cmp
mov
test
ficoml
and
idivl
repnz
jmp
xor
imul
imul
jns
sub
mov
and
lock
or
aam
jecxz
outsb
in
enter
cld
sub
shrb
vmovsd
movsl
xchg
lret
loopne
adc
sub
mov
addr16
lcall
cwtl
iret
mov
pushf
mov
lea
shll
mov
sbb
push
jnp
and
cmc
add
or
lcall
jmp
dec
cmp
mov
shll
mov
mov
inc
push
or
sbbl
jmp
ljmp
negl
add
imul
cmp
out
mov
pop
adc
inc
adc
movsb
addr16
rcr
scas
sbbb
mov
mov
movsl
mov
scas
arpl
dec
pop
or
and
mov
cmp
pusha
enter
or
mov
adc
sbb
test
nop
cltd
test
std
mov
mov
fdivs
mov
jl
push
and
add
sbb
add
pop
add
aam
sub
xor
dec
xchg
xchg
or
jle
movl
ja
loop
cmpsl
sub
outsl
in
inc
test
xor
lahf
xchg
aam
aad
ret
pop
add
fbld
loop
scas
sub
xor
cli
scas
lock
sbb
cmpsl
pushf
xchg
loope
jmp
mov
rcrl
xlat
add
cmp
adc
lock
cmp
sub
pop
xor
xchg
sub
in
mov
inc
es
fstl
outsb
xor
clc
add
mov
jecxz
pop
push
cmc
mov
mov
and
into
fldt
sbb
mov
ja
dec
insl
sahf
mov
xor
imul
xchg
repnz
jb
sbb
jno
push
jnp
shll
fwait
out
int3
das
iret
stos
inc
pop
pop
ret
out
mov
sbbb
mov
mov
mov
push
jge
in
sbbl
mov
sub
cmp
xor
add
jp
int
loopne
imul
sbb
jbe
pop
test
mov
std
test
dec
stos
pusha
jnp
mov
xchg
call
mov
movsl
xchg
mov
stos
dec
in
ds
pop
sub
pop
pop
add
mov
movsl
adc
fwait
push
sbb
push
adc
adc
enter
icebp
xchg
xor
sbb
pop
aam
test
cs
mov
mov
outsb
jge
iret
imul
xchg
cmp
xchg
test
fists
sbb
jp
and
push
cmp
out
clc
mov
test
pop
loop
sti
popa
loopne
mov
or
mov
pop
pop
mov
add
scas
mov
call
leave
xor
enter
cmp
sbbl
mov
repnz
lds
sbbl
cld
outsl
mov
rcll
imul
test
adc
cs
cmp
roll
in
stos
adc
outsl
mov
xor
xchg
mov
inc
mul
test
lret
sub
andb
push
scas
cmp
sub
and
bound
fistl
or
and
adc
inc
push
in
push
shlb
pop
loopne
jnp
cmp
xchg
sbb
out
shl
xchg
mov
mov
xchg
lods
add
xchg
or
xchg
loope
imul
repz
add
sti
mov
xchg
jo
scas
arpl
jmp
loope
jg
ret
mov
dec
scas
repz
outsb
sbbb
xchg
enter
daa
push
les
mov
outsb
mov
pusha
inc
pop
frstor
ret
xor
je
or
sub
into
mov
iret
rcr
ud2
sub
adc
gs
and
out
or
mov
outsl
out
mov
pop
loopne
pusha
and
ret
pop
ljmp
ret
cmpsl
insb
inc
jo
imul
loop
jmp
xchg
mov
cld
sti
in
lods
cmc
adc
ret
xchg
insl
mov
mov
fsubrs
incl
sbb
cltd
repnz
outsl
mov
addb
sbb
cmpsb
leave
pop
cmpsl
cwtl
mov
lds
pop
jns
and
out
pushf
lds
add
scas
add
jae
inc
sbb
push
test
daa
push
movsl
push
fldcw
sbb
iret
hlt
ds
mov
sub
mov
in
pushf
inc
cmovg
jo
mov
call
jnp
fdivs
fs
flds
aas
lock
mov
das
xchg
mov
pop
mov
into
lds
mov
imul
pmaddwd
xchg
lea
addr16
sarl
sbb
xor
shrl
pop
fdivrl
mov
add
icebp
jecxz
insb
in
sub
xlat
adc
jmp
fists
mov
xor
or
mov
sub
adc
xchg
push
or
add
cmc
xchg
mov
inc
mov
lock
lcall
cmpsb
and
in
jns
jecxz
outsl
or
sub
push
popf
xchg
loop
cmc
push
fmull
fdivl
cld
push
xchg
in
in
jecxz
lret
inc
repnz
call
ja
xor
pop
push
add
out
mov
ljmp
xchg
int
and
cwtl
std
sub
dec
mov
js
xchg
mov
xchg
aas
inc
mov
dec
cmpsb
lret
jne
xchg
iret
push
nop
outsl
jne
aas
adc
test
mov
sbb
ja
xchg
stos
cwtl
mov
jmp
mov
sbb
popf
sti
pop
lcall
push
add
mov
sub
in
push
sub
test
loop
add
sahf
popa
xor
sbb
aas
cmp
mov
xchg
fstps
cwtl
adc
adc
jb
fwait
and
pusha
arpl
inc
fstpl
cld
idivl
push
sbb
imul
test
inc
roll
sbb
lahf
mov
int
push
in
dec
cli
test
pop
fnstsw
gs
es
sub
cmp
dec
fldt
rolb
pop
mov
cltd
push
orb
or
cmp
add
dec
push
insb
xlat
pop
aad
pop
cmp
add
dec
xchg
cli
addl
dec
dec
sub
sar
test
mov
sbb
das
pop
icebp
push
rcll
lock
jl
mov
pop
rcr
dec
cmp
test
mull
xchg
xor
push
jmp
sbb
cli
pop
fs
int
pop
push
fcmovne
sbb
fsub
jne
cmp
adc
push
dec
add
sti
shlb
sbb
fcomps
aaa
jnp
aam
adc
adc
movsl
test
dec
outsl
pop
pop
mov
sbb
inc
xor
fscale
test
add
and
icebp
ja
iret
jp
add
dec
mov
mov
or
push
aas
mov
pop
in
repnz
dec
sbb
test
sub
sub
test
jl
inc
xchg
iret
repz
cmpsl
fwait
sar
adc
xchg
and
shrl
lret
clc
and
outsb
pop
fsubp
pop
sub
dec
lret
pop
lock
and
pop
push
adc
xor
and
mov
gs
xchg
fimull
adcl
pop
cs
mov
fstpt
jl
mov
mov
int3
mov
and
xchg
inc
or
test
jnp
enter
popa
fs
out
out
fsub
fisubs
les
dec
sub
adc
js
pop
inc
sub
sub
xchg
lret
pop
test
sub
mov
in
dec
pop
inc
scas
jnp
jo
jno
pop
inc
inc
fs
pop
jnp
jl
pop
xlat
dec
movsl
xchg
not
loop
sti
testb
ds
dec
xor
add
scas
inc
call
stos
and
add
sbb
test
out
scas
jecxz
jne
repz
popa
dec
pop
cld
insl
fsubl
inc
add
and
inc
aad
lock
arpl
sahf
imul
push
sbb
xchg
repnz
not
fstl
or
mov
insb
push
mov
xchg
or
scas
adcl
arpl
inc
ds
jnp
mov
mov
sub
dec
mov
mov
aaa
pop
or
lret
xor
pop
jle
stos
arpl
pop
or
loopne
push
xchg
sub
pop
xchg
pop
push
out
test
je
push
pushl
out
test
pushf
sbb
cmc
sub
lods
cwtl
add
out
cwtl
xor
cmpb
push
add
addb
imul
push
sub
pop
notb
jns
jo
dec
pop
idiv
clc
jnp
xchg
popf
push
mov
xor
jge
xor
or
or
cli
fisubrl
psllw
mov
test
xchg
jo
jne
mov
scas
and
jae
sbb
dec
stos
sahf
cmpsb
jle
pop
and
push
inc
movsl
xchg
ds
fsts
imul
out
xchg
aaa
icebp
cs
push
xchg
xchg
lds
add
sbb
test
cmc
pop
pop
aam
inc
jl
xchg
aad
or
xchg
data16
mov
std
lods
jp
out
mov
hlt
in
and
jne
inc
mov
xchg
adc
idiv
mov
call
into
nop
sub
nop
dec
dec
sub
push
lcall
and
sub
and
mov
cld
sti
and
rcll
pop
dec
sbbb
imul
dec
cld
mov
insb
scas
lds
and
pop
mov
aam
add
mov
xchg
pop
nop
dec
add
pop
test
add
sti
pop
xchg
dec
ficomps
sub
jmp
or
lods
dec
test
aas
pop
outsl
inc
cmp
test
ret
les
out
subl
jae
adc
xchg
cmc
das
cmpsl
sbb
mov
sbb
cmpsb
xor
and
in
cwtl
je
mov
das
ret
in
and
or
xor
mov
or
test
jno
hlt
orl
lret
push
outsl
stc
xorb
ja
or
fisubrs
jno
ds
dec
cmpsl
pop
push
mov
pop
cmc
xlat
fisubl
add
and
mov
sbb
add
lret
cmpsb
sub
call
lock
xor
add
das
add
xchg
push
inc
push
sub
out
or
sub
hlt
stc
aaa
movsl
lcall
cli
movsb
lods
insb
arpl
xchg
movsl
js
cld
pushw
push
loop
std
loopne
repnz
fdiv
cmpsl
dec
aad
int3
cmp
test
adc
and
and
lea
mov
pmuludq
dec
stos
dec
inc
mov
mov
je
xchg
popa
jno
push
cmp
pop
xor
outsl
repz
cmp
xchg
add
pop
cmpsl
adc
pusha
hlt
jno
iret
ds
lret
stc
xchg
mov
out
xor
mov
mov
in
fsubs
dec
out
add
aad
mov
jno
inc
mov
dec
adc
insl
inc
sbb
dec
and
ja
xchg
sahf
and
xchg
inc
rcl
fmul
pop
mov
negb
daa
add
dec
jbe
lods
fiaddl
lds
push
sub
enter
insb
add
shll
cs
fsubrl
sbb
cmp
mov
inc
das
mov
insb
sub
inc
sbb
jae
bnd
dec
cltd
and
adc
fldl
and
mov
xchg
ud0
or
hlt
std
mov
lahf
icebp
inc
mov
pop
test
clc
out
movsb
xor
outsl
ror
popw
push
iret
popa
lock
or
pusha
sub
adc
scas
out
fists
not
or
jmp
addr16
mov
cli
push
popf
mov
imul
xchg
andb
pop
sub
jp
call
test
cmc
lods
lods
mov
imul
jmp
mov
xchg
or
mov
sbb
arpl
idiv
fwait
xor
lods
cmpxchg
lret
xchg
in
sbb
cltd
enter
mov
in
push
push
and
inc
std
mov
dec
xor
fsub
xlat
jbe
test
out
stc
push
lcall
lods
aad
fstpt
fldt
xchg
dec
scas
subl
nop
mov
mov
scas
push
bound
xchg
mov
jne
lret
ret
shlb
or
xchg
mov
daa
adc
pop
mov
mov
cltd
movsb
das
outsb
lock
outsl
popl
sti
and
in
imul
add
push
addr16
xchg
inc
sti
inc
fwait
fwait
push
in
outsl
test
dec
repz
dec
cmp
insb
js
loopne
jg
notb
std
dec
cltd
sbb
or
mov
dec
scas
imul
dec
ljmp
mov
sub
dec
add
aaa
ss
xor
push
pushf
add
arpl
mov
or
mov
dec
mov
sub
and
xor
sbb
jge
fs
or
loopne
ret
insl
test
pop
test
pop
xchg
sub
lods
sarb
sbb
add
pop
cmc
scas
jno
mov
mov
movsb
test
dec
mov
mov
out
cmp
xchg
lret
jge
cmp
enter
and
mov
push
xlat
popa
shlb
rclb
outsl
scas
int3
xchg
mov
sub
inc
mov
sti
jns
dec
enter
inc
mov
xor
fcompl
and
setns
insl
idivb
and
nop
or
testl
addr16
or
test
rcr
out
mov
adcb
or
stos
xor
ja
fwait
add
lcall
dec
mov
loope
push
push
add
inc
rcr
add
add
test
add
dec
into
stos
sahf
sub
fistpl
inc
jo
cld
xor
xlat
push
cld
push
aas
repz
xorl
stos
mov
push
inc
adc
jo
cwtl
adc
adc
hlt
fwait
lcall
cmpsb
mov
lods
addr16
aam
lods
mov
adc
icebp
lret
xchg
mov
fldl
push
enter
inc
jae
adc
repz
js
fists
outsb
sbb
jp
ds
pop
stos
fiaddl
pusha
pop
pop
in
dec
xchg
push
icebp
fisubrl
movsl
jg
mov
sub
sub
adc
gs
push
repnz
jbe
das
clc
fwait
mov
mov
pop
xchg
mov
sbb
lret
loopne
fimuls
sub
rcl
repnz
fisttps
mov
ja
cmp
mov
sti
jnp
sbb
mov
in
or
mov
cwtl
pop
lods
aaa
lds
xlat
cmp
and
sub
jg
mov
adc
push
test
push
pop
add
das
xor
addr16
xor
adc
stos
mov
dec
dec
lahf
inc
in
int
xchg
jg
sub
daa
xor
call
and
push
mov
pop
fsubs
fcomps
cli
xor
add
subb
lods
dec
ficoml
cld
jns
int
mov
adc
jg
imul
xchg
sti
in
test
scas
outsl
test
lock
imul
inc
cmpsb
out
fadd
cmp
fists
adc
add
inc
mov
inc
fimuls
cmpl
ret
in
repz
adc
pop
inc
inc
mov
mov
rcrb
jno
ficomps
sbb
adc
jle
out
mov
push
and
sbb
cmp
mov
aas
ret
push
cwtl
cwtl
aad
jne
xchg
fmuls
dec
push
sub
push
mov
pop
adc
scas
mov
rolb
add
daa
out
dec
xorl
adc
out
decl
leave
pusha
mov
int
and
sbb
push
pop
inc
xor
jo
xchg
xchg
sub
jp
fsubp
or
xchg
push
push
mov
orl
xchg
push
mov
daa
aad
lret
addr16
jg
into
popf
repz
xchg
ret
daa
int
xor
xchg
rorl
add
jo
sub
mov
js
xchg
or
push
push
push
push
inc
outsl
mov
loopne
push
xchg
and
pop
or
fs
dec
sub
inc
adcb
das
stc
call
out
pop
out
mov
stos
mov
fwait
xlat
xchg
sbb
mov
scas
mov
mov
out
jp
std
idivl
addr16
cs
test
mov
sbb
mov
iret
andl
xchg
inc
sub
pop
sbb
in
mov
dec
sbb
das
pop
int3
mov
gs
sbb
mov
or
mov
xchg
xchg
das
and
das
cli
cwtl
into
test
fsubr
cld
shrl
mov
pop
icebp
adc
lret
sub
mov
in
aam
xor
mov
dec
sbb
mov
imul
repnz
mov
pop
sahf
enter
add
adcb
push
mov
sub
shlb
xchg
sbb
mov
in
mov
push
clc
jle
aas
out
push
xchg
and
loop
adcl
jne
fdivs
dec
aam
das
lods
or
cld
repz
inc
or
xchg
cli
loope
shlb
inc
mov
cs
pop
or
out
mov
cmpb
add
and
cmp
rorb
xor
out
pop
arpl
adc
rcl
test
cmp
ljmp
jl
pushf
lods
sahf
mov
cmp
cmp
fcmove
jns
incb
adc
lds
sarl
enter
and
in
in
sub
jp
inc
dec
and
lock
xor
dec
push
enter
push
adc
rcll
mov
outsb
adc
lret
sub
in
cli
push
test
adc
jge
pop
mov
jbe
mov
lock
std
fidivl
mov
fidivrl
inc
es
adc
dec
xor
roll
xlat
addr16
dec
inc
into
mov
mov
aaa
mov
sti
lods
cmpb
and
in
mov
mov
mov
adc
loopne
mov
and
mov
add
push
jmp
mov
xor
test
daa
test
mov
stos
adc
mov
xchg
std
jne
pop
push
adc
sub
mov
fisttpl
out
aam
push
outsb
or
imul
imul
inc
mov
pushl
add
pop
stos
lcall
scas
xchg
roll
inc
and
mov
mov
push
mov
mov
insb
dec
sbb
into
jno
pop
test
mov
inc
mov
inc
loope
lahf
jbe
xor
pop
inc
and
iret
xchg
or
fistpll
aas
xor
sarl
lret
push
repz
in
es
xor
jns,pn
dec
ss
lret
mov
pop
fstpt
lock
inc
add
ret
fs
and
in
push
dec
add
cmp
shl
mov
divl
loop
push
sbb
jo
cmp
mov
push
jns
mov
jle
mov
rep
inc
stc
pop
test
ds
mov
pop
out
jmp
leave
and
in
test
enter
xchg
pop
rclb
shl
ret
fistps
mov
int3
and
pushf
sarb
mov
or
int3
sub
adc
in
and
and
xor
jle
adc
and
xchg
fs
jecxz
sarl
pushf
lahf
xor
xchg
inc
fidivs
imul
jecxz
cli
mov
inc
xlat
cmp
sub
inc
notb
iret
insl
ja
cmpb
cmp
ss
fldt
mov
rol
lods
mov
repnz
clc
mov
int3
push
iret
add
test
lcall
arpl
mov
enter
daa
inc
mov
jge
loop
cmp
or
inc
shrl
cli
mov
lahf
popf
lahf
hlt
and
sub
es
add
adc
int
cltd
dec
negb
xchg
rcrb
mov
jo
aad
outsl
inc
icebp
sub
repz
daa
sbb
mov
hlt
ss
ljmp
outsl
sbb
test
cwtl
xor
add
adc
in
fmulp
adc
jg
test
xchg
lea
xor
dec
aas
push
jnp
daa
sbb
cmc
push
inc
mov
pop
pop
mov
or
sahf
ret
sub
popf
loope
in
mov
mov
xchg
sbbb
mov
push
jns
mov
fbld
out
sbb
les
sbb
test
dec
mov
push
mov
enter
add
xlat
scas
lods
or
cmpsb
insb
pop
cld
stc
inc
sbb
xchg
xchg
shlb
xchg
push
mov
push
add
mov
sahf
sub
in
pop
pop
mov
push
inc
ficoml
and
fmuls
or
pop
fs
adc
cltd
call
cmpsb
cmp
adc
iret
or
lcall
or
push
leave
imull
mov
push
les
or
and
xor
shll
push
or
cmp
cmpl
lcall
adc
adc
jns
sub
push
fstl
mov
lods
iret
xor
in
lock
cmp
adc
fiaddl
xor
sahf
cmc
jae
shlb
out
cmp
std
loop
js
pop
out
mov
ret
fistl
aad
jbe
hlt
aas
sbb
ret
pop
sbb
mov
add
lfs
mov
and
mov
xor
jmp
add
and
int3
rol
jp
out
cld
mov
or
shrb
xor
pop
out
fldl2t
and
pop
xchg
imul
push
jbe
je
dec
shll
stos
popa
cmp
mov
cmp
mov
xchg
dec
jp
dec
rcl
xor
cmovp
mov
cmp
dec
and
shlb
dec
push
loopne
sub
inc
jecxz
jae
jbe
test
sbbb
xchg
cmp
mov
pop
inc
push
stc
fistl
mov
stc
sti
or
mov
cmp
fstl
lea
cmpps
pusha
test
outsl
jo
mov
push
push
in
sbb
push
pop
pop
clc
fsubp
cs
and
mov
sub
jmp
or
pop
cmpsl
sub
rcrb
iret
movsb
aas
test
fmuls
ret
mov
arpl
adc
add
dec
jecxz
sub
xchg
mul
jge
pop
pop
mov
push
dec
dec
jbe
ds
mov
loopne
xchg
or
sbb
jbe
jbe
cld
cli
mov
adc
push
in
div
std
jns
mov
xor
fdivp
sbb
lods
or
test
aaa
sub
dec
inc
movsw
sbb
xchg
sahf
lock
xchg
lret
pop
mov
add
je
in
cmc
adc
psubb
lahf
fists
jle
fistpll
stc
movsb
mov
and
rclb
cld
rorl
push
mov
int3
ss
insb
pusha
lea
into
lret
or
outsl
and
test
pop
in
dec
xchg
jne
sbb
rorb
out
mov
fldcw
stc
pop
or
add
adcb
adc
je
adc
insb
cmpsb
inc
and
cs
push
out
xor
xor
jg
mov
stc
sbb
cld
cmp
sbb
xorl
lods
push
push
int
outsl
loope
adc
mov
or
jno
push
xchg
fadds
cmpsb
add
js
add
xor
jnp
ss
inc
pop
out
xchg
cmpsb
cmpsl
xchg
popf
nop
mov
repnz
cltd
repnz
test
lret
lret
pusha
push
push
pop
dec
scas
add
xchg
mov
cli
and
xlat
mov
mov
or
lods
push
ret
inc
int
mov
jne
jbe
rorb
enter
mov
xchg
arpl
ss
sbb
pop
mov
cs
movsb
fdivl
xlat
pushf
inc
add
icebp
clc
sub
in
and
sub
mov
push
das
and
aaa
sbbl
fistpll
sub
inc
scas
insl
mov
push
mov
push
cmc
push
jbe
mov
aam
fsubs
adc
xchg
aas
fldcw
sbb
fwait
pusha
sti
outsb
ret
fwait
add
loope
pop
jp
cmpsl
fadd
mov
xchg
lea
pop
jp
cmp
adc
cmp
dec
push
aas
repz
dec
mov
test
cmp
sbb
mov
lret
xorb
xchg
rolb
loopne
movsb
pop
mov
loope
xchg
push
jns
xor
adc
xor
dec
mov
sbb
dec
push
xchg
jno
int3
dec
or
in
cmc
xchg
dec
das
leave
jge
cmp
mov
sbb
xlat
rcll
addr16
add
cs
push
jns
cli
andl
clc
cmp
xchg
testl
jo
xor
xchg
rol
jne
or
into
xchg
jns
jns
aam
push
mov
ret
xchg
cmp
std
out
movb
mov
je
dec
pop
sub
xor
mov
test
inc
aad
and
fimuls
fcompl
dec
fildl
jge
mov
xor
loope
fsubrl
mov
addr16
test
aam
jbe
das
shrl
push
mov
pushf
sub
and
add
loop
stos
mov
shlb
out
ret
mov
ret
pop
xor
jecxz
jnp
xor
daa
push
fiadds
jg
fistl
shll
xor
repnz
enter
dec
cmpsl
cmp
hlt
mov
loop
push
mov
test
lret
lods
or
add
fcoms
push
jle
inc
adc
lea
mov
xchg
pop
test
ret
mov
fidivrl
push
push
or
xchg
jnp
adc
in
xor
hlt
push
lcall
and
inc
daa
mov
push
icebp
inc
dec
sub
add
xor
hlt
or
aaa
test
or
test
cltd
sarb
into
icebp
insl
insl
cltd
testl
push
outsb
xchg
push
cld
xchg
or
loop
sub
ljmp
adc
sbbl
dec
leave
lret
xchg
jmp
xchg
and
cmp
icebp
xlat
adc
mov
sub
test
push
hlt
jnp
inc
dec
mov
mov
sbb
mov
add
push
ftst
and
fcomps
sbb
xlat
lahf
mov
pop
cmp
sbb
fldl
stc
mov
pusha
movsl
popf
rolb
mov
aas
push
inc
dec
push
sti
cmpsl
mov
mov
mov
lret
imul
push
call
movsb
push
bound
dec
cmp
inc
fnstcw
movl
notl
das
jae
cmpsb
lcall
mov
js
xchg
es
jmp
outsb
jg
scas
xchg
mov
insl
lock
std
sub
sahf
mov
mov
daa
jne
aad
mov
xor
es
je
inc
add
xchg
xchg
jmp
mul
orl
loopne
sub
push
pop
adc
inc
outsl
jp
sbb
mov
mov
leave
xchg
scas
lahf
dec
sbb
mov
xchg
jb
mov
rcll
ds
and
test
adc
jns
mov
pop
sub
xchg
es
popf
adc
jo
adcl
arpl
mov
and
in
nop
sahf
and
ja
jle
outsl
int
std
xchg
push
in
push
divl
into
pop
stc
inc
inc
ss
mov
out
mov
push
dec
ffree
mov
jmp
fisttpl
sbb
dec
dec
je
jmp
mov
sti
push
popf
or
shlb
cmc
ljmp
clc
sbb
xor
pop
mov
hlt
lret
scas
movsl
cwtl
mov
pop
orl
sub
cmp
push
lret
cmpsb
and
mov
push
aaa
cmp
pop
sbb
cmovg
lds
or
mov
mov
jb
scas
fstl
mov
aas
repz
push
and
pop
ds
fadd
xor
lret
mov
xor
xor
out
aas
lock
fwait
and
fidivrs
or
leave
sbb
pop
mov
test
and
cltd
stc
fstpt
inc
aam
andl
dec
ss
leave
mov
inc
pop
or
add
or
movsl
xchg
ficompl
dec
iretw
xchg
bound
adc
inc
pushf
inc
cmpsb
mov
es
std
pusha
jns
jg
insb
push
and
mov
and
stc
stc
cli
cld
sahf
mulb
xchg
out
fstpl
or
stc
mov
xchg
movsb
jecxz
adc
mov
mov
ja
lret
push
dec
repnz
lds
iret
cltd
cmp
sub
ret
subb
pop
adc
imul
cmc
scas
rcrb
mov
and
cld
jo
jae
cmpsb
dec
fmull
movsb
incl
xor
outsb
xorb
xchg
mov
mov
inc
mov
test
sbb
mov
jg
cmp
push
call
popa
mov
push
sbb
dec
xchg
push
fwait
inc
mov
outsb
mov
movsl
cmp
mov
lea
je
outsl
dec
repnz
push
xchg
cmpl
jbe
sub
cmp
sub
mov
sub
lcall
outsl
sbb
add
and
psrlq
adc
rolb
xor
nop
push
fidivrl
and
stc
push
sarl
sub
cmpsb
mov
cmp
insl
sti
and
sbb
jmp
in
cmpsb
lret
pushf
and
jg
xor
outsb
es
pop
add
std
xorb
fisubl
mov
sbb
mov
aaa
inc
mov
js
out
out
jmp
dec
or
mov
mov
sub
add
stos
popa
scas
jns
out
mov
lahf
aas
pop
push
int
in
xor
cmpsb
into
ljmp
lret
shrl
repnz
push
xor
jbe
mov
test
in
ljmp
adcl
push
mov
push
stc
pop
roll
sub
rcrb
repnz
outsb
mov
aad
cmp
xchg
insl
inc
mov
push
dec
loop
dec
inc
jle
push
add
shll
fisttps
cwtl
and
push
push
mov
jo
test
fisubs
into
les
push
call
sti
aad
inc
stc
mov
in
dec
mov
cmpsl
std
jg
push
push
xchg
sub
out
adc
cmpsb
in
jb
pop
adc
mov
int3
jecxz
inc
push
xchg
mov
mov
xchg
es
cmp
push
sub
pop
mov
sbb
hlt
pop
mov
aam
lds
add
stos
push
ret
aaa
cmc
jl
mov
enter
out
or
lcall
add
lds
or
push
andl
aaa
pop
jp
push
cmpl
lahf
jecxz
pop
push
into
dec
jae
adc
jb
adc
lods
fcoms
cmovge
popa
das
xchg
inc
out
push
sbb
popa
js
outsl
mov
out
dec
sub
divl
add
inc
gs
and
outsb
scas
inc
cmpsb
pop
xlat
add
dec
cld
xchg
jbe
cmpsl
or
cs
or
sahf
jns
add
adc
pop
jecxz
xlat
jecxz
fsubrp
cmp
icebp
jne
jno
mov
testb
jge
imul
push
cmp
stc
jecxz
push
fdivrl
int3
mov
mov
sub
and
subb
aad
loopne
scas
aam
jge
adc
push
xchg
out
scas
ret
jo
mov
in
dec
jnp
scas
lret
fcmovnu
mov
ja
and
sub
pop
and
mov
lea
push
shrb
fimuls
es
add
xchg
test
sub
fadd
push
fdivl
adc
xchg
adc
les
inc
in
adc
adc
clc
xchg
out
andl
test
rcrb
addr16
rcrb
orb
mov
ss
lea
imul
xor
cld
push
aas
ret
jp
clc
jle
sub
xchg
dec
aas
cpuid
adc
mov
inc
ret
xchg
cmp
aas
ret
into
test
xchg
enter
pop
cmpps
jp
push
lea
bound
stos
sahf
dec
xchg
and
popa
aad
fisubrl
inc
lret
std
inc
pop
push
daa
sbb
mov
rcl
mov
mov
dec
out
mov
xlat
into
xor
xor
enter
adc
dec
test
cld
ja
testb
pop
out
loopne
hlt
push
fwait
add
out
ficoms
mov
cltd
filds
gs
mov
mul
jl
jno
test
or
and
scas
mov
jae
lea
mov
scas
test
loope
add
xchg
or
adc
push
dec
add
or
dec
mov
mov
dec
push
popf
adc
xlat
std
pop
and
jmp
jno
in
sbb
movsb
cmp
push
ret
sbb
xchg
mov
or
jb
sub
cmp
jecxz
inc
mov
aad
pop
leave
movsl
xchg
sbb
and
inc
xchg
adc
mov
pop
icebp
jb
inc
mov
mov
sub
repnz
mov
mov
cmp
data16
pop
subb
push
mov
imul
icebp
and
jno
push
push
pop
dec
into
in
and
addb
push
in
outsl
push
sub
mov
pop
pop
mov
inc
xchg
fiaddl
dec
inc
or
mov
add
xor
cmp
and
push
out
aaa
dec
jl
mov
sbb
and
mov
cmpsl
adc
popa
xchg
add
cmp
insl
mov
outsb
negb
inc
push
ds
rorb
shr
sbb
adc
leave
cmp
loope
rolb
cmp
sbb
xchg
cmpl
sbb
out
sti
xchg
sarl
adc
inc
fld
inc
fadd
xchg
fcompl
incl
out
cmpsb
std
pop
stc
mov
add
fmul
popa
jl
dec
mov
add
andb
out
dec
add
aad
movb
daa
fwait
mov
push
sbb
ljmp
push
fwait
sti
ss
std
jo
mov
pop
jno
pop
fdivrp
in
xlat
xchg
loope
and
push
ss
jb
and
mov
mov
add
out
cmp
shlb
adc
xchg
sbb
dec
xchg
cmp
ljmp
add
aad
xor
cmp
jo
lcall
add
gs
test
pop
push
push
clc
jl
das
int3
inc
cli
adc
fsts
pop
jns
in
jae
add
hlt
xchg
and
xor
cwtl
lahf
aaa
imul
gs
fiaddl
mov
lcall
adc
lret
repz
dec
out
pop
addr16
inc
int3
in
mov
add
sbb
in
std
sbb
pop
outsl
inc
jb
sbb
and
mov
mov
mov
mov
lcall
lcall
jbe
sbb
shll
sarl
lds
dec
stc
xchg
repnz
pop
sub
sub
mov
mov
cwtl
xchg
insb
out
popa
or
shll
fs
andl
mov
jnp
lret
inc
in
dec
clc
enter
add
orl
jbe
push
outsb
xor
in
scas
xchg
ljmp
mov
sub
cltd
into
adc
fnstcw
pusha
xchg
push
notb
movb
jecxz
or
and
mov
orb
jbe
int3
incb
xlat
pop
lods
mov
lcall
cmp
mov
sub
cmp
jmp
mov
mov
daa
pop
jbe,pt
fcompp
lds
pop
cmc
add
fxam
out
and
cld
sub
jmp
and
fdivrs
repnz
lahf
mov
stc
dec
movsl
sbb
mov
pop
push
les
insl
xorl
movl
xchg
xchg
out
stos
jb
xchg
jecxz
mov
xchg
mov
jg
jb
sbb
lock
ja
or
enter
inc
rcr
sti
jecxz
mov
mov
pop
icebp
inc
or
add
loop
pushf
pop
pop
imul
mov
cmp
xchg
adc
int
or
add
mov
int3
or
stos
xor
ret
ds
lods
mov
pop
mov
enter
xor
mov
jnp
inc
fwait
loop
sub
fists
cmp
ds
mov
cmp
sub
aam
popf
insb
or
out
mov
jb
pop
xchg
push
cmc
jno
and
popf
mov
call
and
jnp
in
out
jb
pop
jns
jno
mov
loop
inc
jnp
inc
or
iret
dec
and
sti
jo
fists
clc
xor
aad
mov
push
and
aas
negb
sbb
inc
mov
add
loop
sub
decb
pushf
test
mov
push
add
inc
xor
xor
push
loopne
ljmp
popa
ja
pop
cmp
push
jne
cmp
and
or
clc
mov
sub
push
in
in
out
dec
cmpsl
pop
sub
add
arpl
add
iret
shl
in
mov
and
repnz
pushf
sub
fwait
jl
sub
mov
leave
sub
add
push
incb
sub
ss
sarl
cli
arpl
or
jbe
insl
fsub
cmpsl
mov
popa
ss
rcr
sbb
push
mov
ja
repnz
pop
pop
imul
dec
jb
pop
lods
mov
xchg
cld
cmp
cmc
add
xor
add
bound
loope
retw
sbb
aaa
mov
pop
in
imulb
test
cmp
dec
add
mov
sbb
insl
nop
mov
lret
and
loope
lcall
xor
jns
enter
ss
dec
mov
test
pop
mov
imul
jno
aas
daa
sbb
push
mov
xchg
popl
jbe
sbb
adc
insb
aad
push
jmp
leave
mov
test
jp
add
jmp
test
loope
fnsave
push
mov
sbb
bnd
jg
ja
cmp
in
pop
aad
fisttps
test
push
sbb
mov
daa
adc
std
int
push
stc
xor
arpl
inc
lea
enter
mov
rclb
or
mov
pop
lock
mov
mov
dec
cmp
in
add
sarl
ret
pop
mov
mov
fimuls
lods
lret
cli
pop
or
loopne
repnz
dec
cmp
loopne
xchg
push
adc
and
das
sarb
loop
dec
or
dec
rorl
arpl
movsb
sbb
jmp
mov
insb
and
popa
aad
adc
and
mov
imul
adc
inc
and
add
scas
shrb
adc
sub
cmp
mov
pop
push
push
call
lret
movsl
adc
xlat
xor
xlat
inc
mov
aam
into
sbb
fsts
push
aaa
push
test
sub
in
fwait
dec
imul
push
mov
ds
loop
filds
scas
imul
rclb
sub
ret
sahf
outsl
cmp
in
mov
xor
inc
inc
mov
push
push
push
jge
sbb
cmpsb
fisttpl
mov
dec
dec
lea
outsl
add
pop
repnz
add
inc
imul
xchg
mov
xor
leave
push
cmp
cmp
test
mov
xor
or
arpl
fistl
or
xor
add
inc
sub
shll
les
push
lds
push
mov
stc
sbb
jae
push
inc
out
pop
movq
pop
inc
xor
xchg
insl
mov
out
cmp
push
ja
jle
jle
stos
pop
in
rcll
xor
push
imull
mov
aam
nop
pushf
xchg
pop
sahf
popf
jae
and
add
in
xchg
jge
mov
sahf
loop
add
in
jecxz
pop
sbb
inc
pop
ja
pop
sub
imul
mov
data16
mov
or
pop
jnp
pop
or
lcall
xchg
mov
call
push
pop
adc
push
into
ret
ljmp
mov
aad
xlat
cmc
ljmp
mov
dec
hlt
aaa
nop
jle
test
sar
adc
mov
pop
add
incb
imul
or
pop
adcb
into
jns
movsl
ret
cltd
mov
sub
push
subl
jnp
scas
add
std
mov
in
xchg
mov
sub
movsl
xor
mov
jb
inc
and
popf
xchg
ss
dec
pop
test
lds
mov
inc
loopne
hlt
mov
pop
inc
xchg
ss
push
adc
call
pusha
sbb
jp,pt
les
pop
loop
sbb
sbb
mov
out
xor
sub
mov
jecxz
hlt
xor
stc
xchg
mov
sbb
push
ss
lea
aam
jnp
adc
nop
push
and
mov
jb
test
mov
pop
nop
push
je
ljmp
adc
sub
inc
lods
xlat
dec
jo
and
xor
mov
add
cwtl
xchg
push
cmp
sahf
inc
arpl
jp
sbb
loop
or
jl
mov
or
sbb
jb
in
das
aas
insb
xor
or
or
jecxz
cmp
cmpsl
add
xchg
insl
fisubs
enter
xchg
je
push
cld
and
xorb
popf
mov
int3
mov
imul
cs
sub
lods
xchg
lcall
push
xor
mov
dec
push
push
cltd
icebp
into
pop
inc
pop
jnp
shrl
ret
ret
pop
lahf
jecxz
cmp
xchg
inc
mov
es
mulb
pop
ret
pop
xor
jbe
outsb
jbe
xor
cmp
repz
mov
pop
jbe
in
dec
jge
mov
sub
fists
push
push
xchg
and
mov
hlt
pusha
inc
mov
inc
or
fdivrl
jbe
xlat
stc
xor
sub
movsb
jno
incb
dec
push
inc
fidivs
mov
incl
out
jbe
add
fcomp
and
cmpsl
cmpsl
lcall
xlat
push
pop
add
popa
inc
xor
sub
test
daa
sub
pop
sti
repz
out
prefetch
aaa
stos
mov
dec
pop
mov
sahf
pop
rcrl
sahf
notl
pop
cmp
xchg
or
out
cli
sbb
imul
cmp
inc
shll
xchg
mov
sbb
test
cmp
andb
mov
js
lret
mov
insl
loope
leave
fisttpl
popf
out
xchg
outsw
push
mov
xorb
add
insb
push
push
mov
bound
mov
cltd
mov
or
ss
or
jge
insb
out
imul
mov
pop
adc
dec
addr16
rcl
or
jl
cltd
cmp
pop
je
xchg
xchg
sbb
and
jb
dec
ljmp
adc
mov
cmp
cmp
jbe
repnz
jmp
test
sbb
cmp
es
lahf
sti
mov
and
lcall
xchg
shll
cs
mov
out
fsubp
jns
xor
dec
fwait
in
xor
inc
fldl
cmpb
dec
repz
dec
stos
rolb
aas
lock
sub
cmp
push
js
cmp
mov
add
dec
das
add
leave
test
stos
je
popa
inc
jb
sub
dec
push
shrb
pop
jb
repz
ds
add
nop
jns
dec
xor
xchg
rorb
cs
shrb
in
lcall
push
rol
inc
in
in
add
sub
add
aad
and
cmpsl
lret
and
sti
insl
fnstenv
push
lcall
pop
inc
jns
push
cmc
jnp
mov
sti
dec
mov
out
das
jle
adc
insl
je
jmp
mov
mov
shlb
sbb
fwait
loope
mov
in
push
out
fisubrl
dec
insl
lods
xchg
test
movsl
loope
testb
jle
cmp
sub
xor
and
cmc
dec
std
inc
jae
push
sahf
dec
outsb
test
and
push
loopne
cmpsl
sub
sbb
inc
cmpsl
push
push
xor
jae
mov
loop
lds
xchg
cmpsl
mov
negl
mov
in
mov
cmp
cmpl
sahf
out
aas
mov
mov
mov
inc
push
sbb
pusha
ja
pop
jp
test
sub
dec
stos
jecxz
popf
imul
scas
xchg
xchg
pop
call
push
out
pop
int3
dec
mov
pop
movsb
shrb
xor
pusha
xor
outsl
xchg
or
and
push
nop
dec
outsb
push
lea
aaa
push
jmp
sbb
sub
inc
jle
in
js
push
lds
out
add
cmpsb
or
gs
call
loope
or
xchg
push
mov
hlt
aaa
hlt
out
in
lahf
aam
hlt
ficompl
mov
rolw
and
ret
in
dec
inc
dec
ja
outsb
sar
ja
adc
mov
pop
into
push
pop
cli
clc
arpl
cmp
xor
lods
push
notb
mov
ret
cmc
jp
pop
js
testl
loope
xchg
lods
cmp
inc
loope
pop
int
or
leave
sti
in
ret
out
or
pavgw
mov
dec
sub
mov
add
or
xchg
shld
cld
xor
pop
lock
insb
ret
add
lret
sub
mov
cmc
arpl
les
xchg
pop
xchg
jne
jl
movsl
jns
iret
sub
int3
insl
std
dec
lea
test
cmc
dec
test
mov
lock
sbb
or
mov
jmp
lea
and
outsb
das
sbb
into
loope
dec
out
out
subb
cli
sarl
inc
mov
mov
pop
add
insb
test
jmp
push
or
lret
and
mov
rolb
xor
cmc
int
inc
jl
fcompl
out
lock
clc
sub
fwait
int
data16
jns
stc
or
inc
xlat
sbb
in
popa
lcall
loopne
push
and
pop
jno
bound
subl
xor
or
out
daa
or
dec
std
imul
push
dec
mov
out
lds
inc
ljmp
mov
ret
dec
movsl
lahf
into
push
pop
scas
xchg
aam
xor
test
xorb
pop
push
or
dec
pop
testl
es
sbb
jmp
loop
test
and
xchg
sahf
enter
std
testb
xchg
xchg
test
loopne
aas
add
aaa
xchg
dec
adc
dec
jp
push
xchg
out
ja
imul
das
cmp
and
and
jbe
aas
mov
mov
xor
add
les
shl
fnstcw
js
test
pop
clc
in
sbb
fisttpl
push
enter
and
daa
loop
ret
cwtl
loope
xchg
sbb
es
inc
shll
or
or
aam
push
mov
mov
push
adc
das
imul
sub
pushf
ret
or
stc
test
pusha
aam
dec
dec
in
in
pop
or
ds
lds
cwtl
scas
andl
push
adc
ja
hlt
pop
cwtl
xchg
add
lods
cmp
in
cli
push
jo
sets
pop
mov
jbe
prefetcht2
out
xchg
and
scas
pop
cmp
push
test
jp
mov
lea
push
test
inc
sub
inc
and
push
push
lods
mov
ds
imul
out
or
mov
outsl
push
xchg
sub
inc
iret
imul
push
pop
adc
mov
jno
mov
add
scas
sbb
sub
data16
pop
dec
jo
loop
lahf
cmp
in
cmpsl
cmc
incl
ljmp
mov
loopne
into
sub
fistl
mov
cli
fsubr
js
xchg
cli
das
pushf
and
sbb
or
lea
inc
ja
jecxz
lds
xor
in
or
sub
lret
loop
pop
hlt
ds
cmp
mov
paddq
out
loop
mov
loopne
mov
push
hlt
or
mov
jl
in
fcomi
jo
loope
fisubrl
mov
and
push
std
mov
mov
lea
stos
out
mov
mov
shl
push
adc
mov
xlat
inc
call
jecxz
mov
sub
mov
into
mov
sahf
mov
stc
setg
xorb
mov
or
sbb
daa
call
jl
dec
movsl
inc
cs
dec
dec
pop
add
jl
mov
repz
lock
xchg
jnp
fisttpll
mov
ret
sbb
mov
mov
pop
or
popa
movsb
mov
int3
jno
shll
xchg
jmp
scas
pusha
mov
jns
push
mov
mov
cli
roll
jp
arpl
loopne
aaa
sbb
push
cmp
lcall
ds
mov
or
loopne
hlt
mov
lods
lods
sti
xor
sub
je
xor
scas
sub
fdivl
cmp
lock
mov
dec
aad
std
jle
in
mov
dec
pop
or
jmp
add
test
jae
mov
hlt
jl
sbb
shl
add
xor
cmp
in
shr
pop
arpl
push
pop
cmc
or
xor
inc
cmp
mov
xlat
test
xor
or
out
xor
ljmp
jecxz
jns
xlat
movsl
cmpsl
jmp
mov
jl
xor
ja
push
mov
lcall
adc
shlb
jmp
popf
push
or
jb
fucomip
mov
xchg
shll
lcall
mov
sbb
sbb
out
xchg
xchg
out
hlt
sti
cmp
pop
imul
cmp
jno
jl
jne
sub
xrelease
dec
outsb
jb
in
imul
cmp
mov
shrb
inc
loop
test
inc
push
xchg
loop
nop
jg
push
jae
out
rcrl
xchg
jne
push
inc
or
leave
xor
push
jp
jo
jae
push
icebp
mov
and
or
pop
cmp
ret
inc
addr16
jp
sbb
fidivrl
dec
push
enter
cltd
pop
fisttpll
popa
fisubs
arpl
ficoms
xlat
daa
push
outsl
mov
push
lds
in
es
jmp
dec
add
cmpsl
test
add
mov
and
jo
shrl
addr16
cmpsb
pop
outsb
and
jns
or
daa
sub
push
hlt
fbstp
adc
add
pop
lods
fisubl
xchg
sbb
mov
xor
je
mov
dec
es
loopne
cmc
jle
xorb
stos
lods
inc
aam
dec
popa
aam
cli
cld
or
mov
sar
dec
xor
mov
inc
rcl
shlb
ljmp
lods
jmp
cltd
mov
ss
lds
sbb
inc
jns
mov
clc
jp
xor
sub
or
and
loope
jae
sti
mov
daa
or
cltd
dec
insl
pop
or
jle
cmpsb
leave
sub
push
sahf
das
test
pop
xchg
push
mov
xor
inc
mov
or
jg
xor
pop
in
sbb
jne
inc
and
mov
insl
aaa
jnp
jge
inc
aaa
pop
and
dec
cltd
cmpl
and
rol
imul
cmpsb
sahf
push
pop
cltd
pop
lds
lret
es
jo
imulb
push
test
icebp
pop
in
sbb
sbb
sub
cmp
jbe
xor
or
and
hlt
test
mov
pop
mov
popa
lret
push
fwait
xor
xchg
sub
mov
adc
mov
fs
ja
push
inc
int3
mov
aaa
xor
xlat
jnp
movsl
enter
and
fstps
xchg
in
lock
add
xchg
xchg
sub
or
mov
jmp
cwtl
fwait
pop
adc
in
fisubl
insb
leave
sbb
mov
inc
mov
ja
gs
ss
mov
push
pop
inc
pop
add
arpl
lock
fsubrl
iret
add
xchg
sbb
out
nop
add
cmp
pop
dec
sub
xorl
arpl
or
xlat
shlb
icebp
fldt
add
clc
xor
pop
pop
mov
call
push
adc
jae
mov
cmc
test
nop
pop
scas
pop
cli
push
insl
mov
and
negl
int3
lds
into
mov
jb
xchg
adc
rorb
push
cmpsb
inc
std
mov
or
popa
xor
jmp
lea
mov
xor
rolb
mov
test
dec
leave
sbb
lret
rorl
daa
ja
mov
inc
jecxz
rcrb
shrl
mov
xor
cmp
fistl
push
mov
popl
xor
add
xchg
ret
jnp
or
ret
fistl
xchg
fidivrl
mov
push
mov
dec
or
xchg
mov
sub
xchg
stos
loopne
fisubs
lock
sbb
shr
inc
jbe
std
mov
xchg
add
mov
cmp
sbb
push
lock
cmp
fdivrl
fbld
pop
or
pusha
mov
xchg
xor
loope
enter
lret
dec
add
push
jecxz
mov
aas
loop
xor
and
sbb
jmp
test
and
lds
mov
out
icebp
mov
lock
icebp
fadd
enter
addr16
hlt
nop
lock
inc
push
in
mov
mov
pop
push
push
push
xor
scas
or
std
dec
cmp
xor
xor
cmp
xor
rclb
mov
imul
sbb
shll
push
test
inc
loopne
mov
push
inc
mov
not
mov
aaa
pop
les
sbb
mov
dec
jo
cltd
inc
jnp
mov
xchg
or
inc
xchg
ja
mov
adc
ljmp
adcl
xlat
fs
orb
mov
js
idivb
pop
cmp
xchg
mov
icebp
add
and
pop
popf
imul
data16
imul
push
cli
es
push
lds
fwait
dec
sub
xor
lock
xchg
adc
jnp
das
out
inc
movl
push
cmpsl
xor
je
outsb
fldl
out
sub
mov
in
sbb
mulb
push
repz
into
sbb
adc
nop
ja
clc
jmp
add
das
cmp
daa
std
lock
cmp
mov
dec
cmp
adc
in
lret
xlat
jb
lret
popa
addl
push
xchg
fisubs
fisubrs
ret
mov
push
xchg
push
into
or
add
mov
cmpsl
insl
mov
cmpb
mov
inc
stc
or
outsl
stos
push
lods
adc
mov
outsb
mov
xchg
pop
inc
ss
sbb
adc
das
jns
cmp
push
mov
or
adc
ja
inc
test
or
shrb
and
or
mov
sbb
adc
popa
ja
cmpsl
loop
adc
pushf
fcomps
addb
push
std
push
movsb
loope
inc
lret
stos
xchg
stc
cwtl
mov
adcl
fmuls
mov
mulb
inc
loopne
sub
mov
dec
mov
lods
aam
sub
xor
mov
aam
in
sti
lcall
insl
adc
bound
adc
jecxz
aad
out
aas
and
push
inc
xor
in
mov
aad
lock
lret
das
stos
mov
and
ret
adc
ds
push
movsb
aaa
fistpll
add
or
call
lods
pop
mov
xor
push
cmp
pop
mov
mov
out
mov
pop
data16
jae
das
dec
repnz
cmp
mov
daa
add
test
fistl
sub
xor
roll
scas
sti
in
movsl
jb
mov
les
push
jne
push
cmpsl
pop
aam
xchg
xchg
fisttps
push
and
dec
insb
sbb
cli
push
into
xor
insl
adc
test
fbstp
mov
dec
scas
faddl
jbe
pop
pop
jge
ret
mov
sbb
in
sbbb
jle
mov
xchg
cmp
xor
xor
aad
lds
or
jb
cmpsl
mov
adc
outsb
or
lock
ret
movsl
test
or
xor
jns
sbb
roll
mov
cld
in
das
jne
xchg
jne
pusha
sbb
clc
repz
mov
or
xor
dec
pop
adc
out
sbb
jmp
ljmp
jno
adc
xor
call
inc
jp
lret
cmc
out
je
rcrl
cltd
arpl
pushf
ret
and
int3
neg
sub
idivl
or
roll
in
pop
xchg
mov
or
pusha
sbb
movsl
sbb
xor
push
xorl
incl
aad
notb
jp
adcl
es
insl
sbb
mov
data16
sub
mov
push
dec
add
adc
lods
and
scas
cmp
out
pop
daa
call
mov
scas
dec
ja
jl
jo
xor
push
in
out
loop
or
push
jmp
push
mov
outsb
outsb
inc
pop
mov
scas
xchg
je
dec
inc
xorl
cmpsl
out
icebp
loopne
es
fcoml
outsb
push
gs
or
lods
jle
jge
bound
notl
popa
icebp
jno
aam
pushf
xor
ja
xor
nop
jno
jns
sbb
imull
in
sbbl
cmp
shlb
test
dec
and
or
mov
pop
adc
leave
aas
test
in
sbb
lcall
cltd
sbb
jecxz
mov
jbe
adc
mov
add
pop
jmp
pop
and
shlb
lds
int
or
xchg
adc
inc
nop
mov
aas
sub
insl
out
out
add
inc
mov
popa
xchg
sbb
mov
xor
movb
pop
mov
out
inc
pusha
lcall
cltd
leave
add
push
add
or
cs
lods
push
or
popf
dec
adc
xchg
nop
es
inc
add
xchg
or
call
movl
popf
movsl
xor
rcr
and
std
mov
pop
fcoml
add
or
sbb
dec
inc
xchg
int
push
test
in
fldcw
jne
insl
aaa
xchg
into
sbb
addl
loop
ret
xor
xchg
dec
ret
sbb
daa
xchg
lods
sbb
push
pop
inc
mov
fwait
push
stos
mov
leave
ret
outsl
push
adc
scas
mov
js
push
mov
out
cli
mov
aaa
pop
push
or
or
xchg
push
decb
adc
repnz
jg
jbe
je
les
cmp
push
pop
ja
sub
or
lods
jo
adc
pop
cmpsl
cs
adc
vpaddd
sti
adc
push
cld
xchg
add
and
dec
xchg
jb
dec
mov
add
in
stc
mov
inc
or
push
outsb
fsubrs
pop
xchg
mov
je
mov
divb
cli
pop
xchg
out
das
outsb
rol
leave
idiv
mov
lahf
sti
enter
mov
mov
or
inc
xchg
aas
pop
pop
jle
sbbb
xchg
mov
xchg
imul
leave
negb
mov
mov
xchg
mov
mov
mov
ret
icebp
jl
jne
dec
lret
or
add
int3
pop
sti
fmull
sbb
add
into
and
adc
addr16
cltd
mov
push
mov
inc
test
xchg
jb
dec
sbb
shll
adc
mov
cwtl
adc
into
sub
lret
jb
or
xchg
cwtl
mov
jnp
inc
in
mov
add
rorl
mov
cwtl
sbb
cmp
out
push
std
sbb
push
xor
xchg
shlb
mov
testb
pop
cli
mov
mov
mov
mov
lahf
imul
and
fldenv
dec
mov
mov
xor
or
jg
and
sahf
das
movsb
push
mov
mov
push
pop
pop
negl
adcb
insl
pop
les
pop
xchg
and
orl
mov
sub
xor
pop
mov
popf
int
scas
dec
cmp
mov
pop
mov
or
lret
inc
jp
add
sub
nop
es
sarl
sahf
lcall
mov
adc
out
stc
push
shll
enter
shll
mov
xor
pop
cli
sar
js
jmp
dec
jne
pop
jmp
call
into
sub
xlat
mov
outsb
xor
xor
xor
push
xor
das
rcrl
xor
dec
loopne
sbb
jp
add
psubsw
xchg
movsb
punpckhdq
aad
out
call
inc
cmp
mov
mov
pop
xor
add
enter
sub
data16
out
cmpsl
mov
fimuls
mov
lcall
repnz
lock
bound
pop
jne
mov
out
ss
dec
outsl
mov
dec
xor
aaa
push
jge
sbb
fmulp
outsl
je
xchg
lret
adc
add
loopne
mov
jno
out
gs
and
push
lods
jns
push
mov
cmp
out
mov
js
aas
sbbl
mov
mov
mov
ljmp
mov
pop
mov
sub
mov
loopne
shll
inc
lahf
lahf
jle
in
jno
add
inc
call
cmpl
shrb
xchg
test
pop
rorb
mov
icebp
dec
dec
ds
leave
lcall
cmp
mov
fwait
sbb
mov
dec
fsubs
mov
shlb
fstpl
test
pop
test
cmp
and
test
cmp
lret
jecxz
adc
mov
mov
lea
mov
ret
xchg
out
imul
test
ficompl
pop
out
cmp
movsb
bound
add
mov
push
addl
mov
test
out
inc
mov
cmpsl
cmpsl
les
pusha
push
aaa
mov
jns
lods
bound
mov
out
lret
loop
pop
sub
mov
sub
lods
sbb
dec
fwait
das
add
test
fwait
dec
adc
pop
scas
jns
sub
push
and
adc
or
pop
out
adc
lock
xor
insl
insb
sarb
push
imul
jb
jp
incl
adc
pop
add
in
movsl
push
das
inc
in
iret
or
mov
shl
cmc
mov
shll
pop
inc
jno
mov
push
pop
loop
cmp
add
xchg
sti
cmpsl
fnsave
mov
mov
mov
lods
adc
fwait
gs
jo
pop
je
mov
shll
es
jge
mov
mov
cmp
mov
jae
dec
jmp
dec
push
or
std
cmpsb
outsl
popf
mov
jg
pop
cmp
xor
popf
pusha
movl
sbb
lret
jns
mov
xchg
adc
mov
cmp
leave
xlat
clc
negl
fs
xchg
dec
inc
mov
dec
pop
xchg
cli
and
imul
es
adc
bound
dec
adc
repnz
sahf
jbe
int3
aaa
jp
sahf
dec
inc
cs
in
inc
out
sub
xchg
mov
cmp
loop
test
and
repz
cmp
incl
lcall
jmp
and
adc
fiadds
mov
xchg
roll
les
aas
adc
ss
inc
bound
lcall
bound
sub
push
add
cmp
lds
test
pusha
jo
aam
es
mov
dec
cmc
add
sbb
cmp
mov
mov
jmp
popf
andb
mov
loope
mov
xchg
addr16
cmp
shrb
sahf
xchg
push
sbb
xchg
jns
and
lret
out
pop
jle
xor
add
rorl
push
cmp
test
sbb
mov
push
mov
and
fs
or
movsl
dec
push
jnp
push
adc
in
xchg
ret
sub
dec
ss
and
dec
inc
daa
xchg
jbe
stc
insl
push
loope
das
dec
pop
push
cmpsl
and
insb
push
mov
mov
pop
pop
jno
or
cmp
jne
adc
loop
inc
push
jae
aad
repnz
sub
and
cmp
and
inc
push
fbld
xor
pushf
and
fistpll
jns
mov
push
je
jecxz
int3
and
push
inc
inc
fistpl
movsl
jb
js
cmp
sbbb
and
addr16
push
imul
mov
and
inc
imul
repz
mov
fs
nop
xor
pushf
fstps
jecxz
xor
rcrb
mov
mov
pop
cld
mov
jle
loop
lock
js,pt
mulb
inc
shll
ret
bsf
es
je
push
cmp
pop
aam
sarb
mov
cmpsb
mov
ds
or
and
mov
fidivrs
cli
inc
repz
or
lcall
pop
es
ret
out
cld
jmp
lds
gs
in
cmp
test
xor
add
sbbb
dec
fisubl
aaa
fcmovnu
aas
xor
sub
mov
iret
xlat
enter
fcomip
enter
ret
push
pop
ja
lods
dec
ljmp
cmp
and
pop
lret
das
insl
mov
lea
dec
loopne
xchg
cli
ret
jae
mul
imul
addr16
push
sbbl
fistps
jno
imul
push
jecxz
mov
repnz
xor
stos
rclb
mov
jmp
stos
xchg
stos
and
sub
leave
cmpsb
addl
fchs
pop
rcrl
and
adc
jns
add
xchg
cltd
mov
xchg
inc
jecxz
push
xchg
inc
fwait
push
lcall
ss
mov
and
lods
dec
cmp
jmp
lds
cwtl
fbld
shlb
push
fwait
pop
adc
lcall
mov
pop
sbb
nop
sub
push
mov
mov
dec
cmc
dec
mov
repz
ja
movsl
fwait
out
jge
sbb
push
fcoml
or
lret
mov
fbld
fisttps
add
aas
pop
or
repnz
out
sarl
or
scas
cmpsl
add
scas
mov
xor
sub
sub
inc
mov
sub
mov
jne
jno,pt
jl
arpl
dec
mov
mov
insl
icebp
divb
xchg
cmp
scas
cmpsl
jg
lds
loop
aas
arpl
pop
jb
or
sbb
stc
fsubs
jb
je
add
inc
xchg
shrb
aam
xchg
sbb
cmc
loop
ss
push
loopne
inc
cltd
pop
xor
loope
stos
pmullw
xor
mov
sbbl
rcl
iret
arpl
jo
pop
ror
inc
pop
or
je
jle
scas
sub
xor
jo
mov
fidivrl
and
cmp
xchg
and
iret
mov
in
movsb
cltd
fnstsw
pop
daa
idivb
mov
popa
mov
jb
mov
lcall
xchg
in
dec
jp
mov
fst
mov
or
aaa
xor
orl
mov
js
push
lea
loope
out
test
inc
cwtl
xchg
mov
daa
fsub
jge
lahf
rorb
pushf
outsl
lds
jge
std
mov
call
mov
bound
cli
popf
xorb
mov
fstl
sbb
repz
mov
and
sbb
loopne
in
push
inc
insl
lret
outsl
jae
js
leave
repz
imul
aam
sub
lea
cmpsl
xchg
and
loopne
cmc
mov
jae
cs
popa
loop
in
push
xor
mov
lret
push
add
xor
out
jecxz
or
dec
lods
xchg
mov
adc
push
adc
in
push
lock
push
dec
inc
push
push
push
pop
jae
inc
jl
mov
xlat
out
mov
inc
aas
pushf
sbb
mov
cmp
mov
cmp
pop
mov
fsubs
test
add
ss
jae
mov
data16
and
and
mov
lods
cli
cmp
pop
into
inc
sti
sahf
pop
setno
imul
mov
ss
lods
pop
scas
jp
sub
sub
fbld
stc
pop
sub
leave
push
stos
jge
sub
inc
mov
dec
fwait
or
inc
xor
cmpsb
adc
mov
aam
stos
imul
adc
ficompl
pop
loope
mov
gs
pop
ds
lock
mov
adc
jl
movsb
pop
call
imull
inc
and
mov
inc
cmc
in
inc
outsl
mov
xchg
mov
xchg
imul
ljmp
test
dec
test
inc
cld
imul
js
and
clc
mov
sti
or
add
insl
push
addr16
xor
xchg
jecxz
cmp
mov
shll
loope
adc
jbe
stos
loop
pop
popa
sub
mov
lcall
xor
mov
out
cmp
push
pusha
mov
cmp
mov
push
fimull
stos
mov
dec
xchg
sbb
mov
int3
aas
mov
push
xor
outsb
adc
adc
mov
loope
mov
sub
movl
cmp
sbb
cltd
divl
in
jg
mov
jae
rcrl
test
lret
push
cmp
xchg
dec
into
stos
lret
orb
inc
shr
addr16
cmp
xchg
rcrb
push
mov
outsl
jg
push
dec
pop
clc
xchg
mov
mov
cmp
sahf
mov
inc
std
sbb
pop
lcall
cmp
test
adc
cmp
insb
aaa
push
and
xor
leave
sbb
add
dec
les
push
pop
mov
adc
lods
add
jmp
rclb
jae
mov
fcomip
ss
ljmp
scas
mov
cmp
stos
xchg
cmp
dec
jg
inc
lgs
andb
jg
push
mov
add
lret
stos
jmp
movsl
fstpt
daa
fcompl
shrb
dec
das
push
nop
mov
fbstp
stos
inc
sub
inc
pop
mov
es
int3
push
add
rol
aam
lcall
mov
incb
test
sti
cli
js
push
gs
mov
dec
popa
lds
mov
loopne
sbb
cwtl
das
push
pop
xchg
jae
out
pop
incl
shlb
xlat
test
pop
jp
mov
dec
xor
cld
aam
push
fwait
sub
adc
test
jp
dec
stos
sbb
sub
in
pop
dec
sub
lock
sub
add
shll
push
and
jbe
cmp
xor
in
sub
inc
cmp
mov
dec
fs
jno
mov
sar
lret
pop
xchg
adc
out
in
push
pop
add
dec
rep
cmpsl
jp
xchg
fxtract
scas
fisttpl
mov
and
cmpsl
subb
cmpsb
cwtl
inc
adc
fwait
add
and
inc
jbe
lret
fdivrs
rcll
mov
push
sbb
or
mov
lahf
inc
je
jb
adc
or
fcoml
adc
sub
cli
adc
inc
pop
push
clc
shrb
jge
push
mov
mov
jne
sbb
push
sub
xchg
xchg
jg
jmp
cs
insl
lahf
into
lea
stos
lods
fdivrl
lock
sub
or
cmp
mov
outsl
inc
test
sbb
push
cmp
sub
mov
pop
scas
cld
push
dec
fbstp
sar
inc
outsl
data16
sub
sahf
jmp
repnz
mov
test
fidivrs
int
adc
add
pop
nop
push
shr
mov
push
and
pusha
adc
aam
sub
jae
incl
lret
loopne
push
insb
mov
add
xchg
push
movsb
pop
pop
or
sub
or
add
adc
shlb
sbb
test
or
push
pop
push
add
push
mov
pop
dec
in
push
xor
xor
aam
subl
add
push
movsl
mov
add
dec
cwtl
sbb
jns
cmp
pop
push
jmp
push
sub
jo
repz
pop
and
fstps
jb
rolb
or
push
add
cmp
daa
cli
pusha
repz
mov
sahf
mov
in
mov
and
scas
pop
fs
cli
fmulp
orl
and
pushf
mov
les
mov
imul
xchg
orl
loope
repz
dec
pop
lret
mov
loop
test
insl
sarl
jbe
lods
dec
mov
out
jb
loop
outsl
idivl
xor
in
int
in
fwait
pop
and
jg
mov
imul
das
sbb
clc
jg
jno
xchg
jo
into
dec
xchg
les
ja
fcmovu
lock
xchg
mov
jp
fnsave
and
mov
jp
xorl
xor
inc
xchg
push
gs
fidivrl
lods
aaa
les
ret
jl
test
sbb
int
dec
and
movb
popf
aad
pop
in
icebp
sbb
mov
lock
into
jge
and
in
fisubl
test
pusha
je
mov
out
cs
lods
jae
es
fists
pop
stos
popa
push
movntq
out
mov
test
stos
dec
lock
mov
pusha
xchg
adc
stc
inc
fcoms
pop
sub
add
mov
test
push
data16
pop
cmpb
into
clc
and
out
push
pop
inc
jno
adc
rorl
outsl
jecxz
movsl
xor
or
and
mov
insb
mov
test
out
mov
adc
mov
adc
out
dec
into
mov
aas
xlat
xchg
sbbl
fwait
xchg
jl
xor
jb
cltd
mov
mov
lods
inc
cmp
out
jno,pt
or
push
push
movsl
int3
xor
gs
popa
repz
clc
mov
push
int3
xor
jg
test
mov
rorb
daa
mov
push
mov
lcall
es
xchg
or
pop
mov
int
xchg
jle
push
in
pop
outsb
mov
push
inc
fadds
frstor
xchg
dec
arpl
mov
inc
cmp
pop
out
lds
xchg
insb
mov
mov
aas
xor
add
int3
inc
xor
inc
pushf
adc
sbb
int
inc
cmp
pop
xor
sbb
push
push
lea
andb
enter
jns
fcomps
sti
sub
out
add
stos
inc
out
in
push
iret
shrb
cld
jno
cmpb
shr
push
or
xchg
dec
out
pop
add
inc
outsb
mov
ror
jne
add
jle
adc
ret
mov
push
push
push
jbe
mov
in
cltd
jnp
or
shlb
mov
cli
or
stos
scas
movsl
repnz
dec
lods
xchg
add
rolb
pop
pop
test
popf
pop
inc
out
dec
popf
xlat
aad
int
inc
jle
aad
dec
xchg
js
pushf
aam
push
adc
pushf
xor
jmp
lret
movsl
xchg
jle
mov
insb
into
enter
lds
dec
jmp
push
cmpsl
mov
mov
sub
push
cs
sub
jge
sub
andl
xchg
repnz
push
pop
inc
les
outsb
fcompl
mov
adc
std
je
or
mov
repnz
sahf
fs
jl
mov
ss
pop
fs
pop
ficomps
iret
gs
clc
mov
xchg
es
insl
fisttpll
es
daa
jno
mov
and
in
int
and
xor
xor
jb
pop
lock
mov
inc
fwait
mov
push
adc
inc
aad
shr
dec
insl
outsb
out
iret
adcb
xor
jae
inc
push
jp
out
pop
ret
das
cmpsb
jmp
repnz
es
sub
xcrypt-ecb
cmpsl
or
pop
pop
xchg
mov
inc
xor
mov
xor
mov
pop
int3
test
int
loopne
jmp
testb
pop
jno
sub
adc
jb
push
fs
jbe
and
dec
push
lock
or
fisubrl
xor
test
lret
test
in
xor
rcrb
mov
jmp
mov
xlat
sbb
fisubs
out
shl
cmpsb
dec
aaa
pop
jbe
add
mov
xchg
shrl
mov
xor
or
adc
xor
mov
fadds
ds
and
stos
icebp
mov
test
les
and
stc
sbb
or
mov
jae
clc
daa
sub
push
adc
lahf
inc
jb
bound
sub
jle
and
aam
aaa
outsl
ljmp
adc
loope
out
and
lock
mov
aad
or
jg
int3
pop
sub
mov
cmp
insl
xor
movsl
dec
lods
mov
pop
std
pop
repnz
inc
int
lods
add
mov
xchg
aas
pop
and
inc
int
pop
mov
adc
mov
mov
add
into
add
sti
pop
inc
xchg
pushf
cmpsl
jae
push
in
mov
push
loopne
push
adc
dec
mov
insl
pop
mov
jbe
adc
orl
inc
cmp
shll
sbb
cmp
insb
mov
pop
outsl
jnp
add
out
in
push
inc
pop
xlat
je
adcl
testb
or
aam
xchg
std
stos
les
dec
out
push
mov
mov
xor
loopne
pop
negl
adcl
jnp
fwait
mov
dec
fwait
les
sub
xchg
into
or
jnp
jl
mov
pusha
pop
xchg
dec
xchg
xor
jnp
xchg
cltd
mov
adc
sbb
mov
enter
mov
push
icebp
faddl
mov
icebp
jo
mov
enter
in
xchg
mov
popa
mov
add
cltd
push
xchg
je
je
cmp
ja
jecxz
leave
sub
cmp
xchg
sbb
mov
pop
mov
xchg
ud1
pop
fwait
jno
inc
out
sbb
lea
sub
ret
push
xor
mov
ficompl
and
cmp
testl
les
push
inc
mov
pop
or
sub
xor
les
incb
pop
cs
pop
jecxz
test
adc
mov
push
fstpl
cs
mov
aad
mov
cmp
inc
cmp
pop
fmuls
pop
es
aas
into
inc
test
out
add
ds
mov
nop
test
add
aas
cmp
inc
inc
paddusb
adc
push
jne
xor
jecxz
jbe
push
or
xchg
mov
push
mov
arpl
jns
fsubs
inc
pop
jns
idiv
xor
jbe
ret
sub
and
pop
mov
adc
call
and
dec
push
decb
sbb
insl
mov
xchg
xor
xchg
inc
pop
adc
pusha
jl
dec
sub
fistpl
jmp
cld
cmp
scas
ret
pop
push
test
in
arpl
imul
push
ret
fwait
mov
mov
dec
sti
push
std
ds
xlat
xchg
fnstenv
mov
loope
add
jg
push
xor
push
out
call
xor
subl
xchg
cs
xlat
push
push
xor
cli
dec
pop
jbe
inc
mov
rclb
pop
sti
leave
jmp
insb
dec
dec
scas
call
out
sbbl
fldenv
out
pop
hlt
xchg
mov
scas
xchg
out
lods
lock
jmp
int
nop
inc
fdivl
aaa
cmpsl
sub
push
push
cs
lret
rcpps
dec
test
and
and
push
insl
imul
xchg
jg
sbb
mov
dec
lcall
and
fcomp
andb
jne
add
inc
ret
fcomp
push
push
mov
aas
dec
mov
ds
sub
in
lret
push
dec
inc
sbb
adc
jecxz
jle
call
jne
pop
mov
mov
cld
and
sbb
notl
add
je
dec
xchg
add
fcomip
shlb
jmp
out
dec
sub
outsb
gs
imul
imul
or
pop
aad
jge
jl
addr16
xchg
cmc
mov
xor
std
dec
pop
out
mov
cmp
or
lcall
loope
xor
cs
jno
xchg
mov
jmp
xor
cld
lret
and
pop
mov
lcall
out
mov
sbbl
lods
sbb
cmpsl
or
mov
pop
sti
push
icebp
fdivs
fwait
neg
jno
cltd
fsts
scas
xchg
mov
imul
lea
dec
sub
aaa
pop
mov
popl
sbb
jle
jp
xor
mov
nop
mov
test
dec
push
aam
test
jecxz
rcrl
gs
inc
adc
inc
cmp
rorl
addb
add
rorl
jl
xlat
push
pop
shll
or
scas
fwait
mov
push
mov
jne
out
roll
or
push
cmovle
push
pop
fmulp
cmp
aad
cmp
fcompl
shl
mov
fldl
shr
add
mov
outsl
ficomps
sbb
jle
insl
mov
inc
jns
fnstsw
adc
push
hlt
in
inc
stos
addr16
mov
cmp
mov
mov
or
cmp
lcall
sbb
loopne
inc
cmp
sub
mov
aam
fisttpl
lea
xor
pop
enter
xchg
push
cmpsl
inc
mov
pusha
cld
insl
ss
stc
push
mov
out
int3
scas
adcl
push
sub
test
cmp
test
test
test
popa
dec
push
pop
in
mov
lret
and
jecxz
cmpsb
gs
and
outsb
dec
rorl
push
dec
ljmp
xchg
subl
fs
jl
bound
test
lret
sbb
cmp
xchg
repz
arpl
popa
jmp
out
jl
push
or
fldcw
jbe
cmp
fsub
fsubrs
and
jl
add
inc
je
loop
fnstenv
call
aaa
push
inc
pop
out
imulb
adc
outsb
sti
loope
pushw
lds
jo
push
mov
insl
outsb
pop
push
daa
pusha
xor
push
fiadds
jnp
jnp
rcl
sbb
leave
push
int3
cli
push
mov
test
rcrb
adc
in
fwait
xor
fdivrs
pop
push
jne,pt
sar
push
sub
andl
sbb
jp
mov
lahf
pop
fidivrs
sahf
shll
xchg
jne
jmp
mov
xchg
shll
xchg
mov
and
xchg
out
mov
or
iret
push
cmpl
mov
scas
push
jb
loopne
popa
sahf
das
dec
mov
outsl
ret
and
adc
xchg
mov
adc
pushf
push
inc
insb
test
in
mov
mov
pminub
mov
push
js
sub
dec
fdivrl
idivl
jbe
adc
js
out
xor
cmpsb
mov
jns
sbb
xchg
popf
add
push
inc
mov
jge
pop
setp
aad
sbb
mov
jle
mov
sub
sbb
shll
dec
int
enter
or
add
mov
ja
int
push
ret
inc
xor
filds
adc
dec
lds
cmpsb
and
jecxz
imul
pop
outsb
pop
or
cwtl
mov
test
je
push
imul
push
divb
lcall
pushf
adc
sbb
push
sti
gs
js
stos
push
xor
hlt
popf
pop
mov
push
out
data16
xor
cmc
xchg
daa
mov
push
ljmp
out
mov
xchg
dec
push
ret
dec
test
add
in
push
pop
testb
inc
jne
int
outsl
leave
imul
mov
pop
out
and
or
fistps
xor
movsb
jg
mov
inc
adc
jg
sbb
imul
sbb
mov
jecxz
add
mov
xchg
lds
mov
add
rol
int3
xor
rolb
movsl
repz
cmp
mov
xchg
mov
jns
cmp
sbb
pmulhuw
xchg
xor
jno
jne
or
les
adc
xchg
cmpsl
dec
es
test
int
mov
scas
mov
add
mov
adc
adc
mov
notb
test
ljmp
jmp
add
jp
das
ret
in
popa
mov
push
into
dec
sub
xor
xchg
adc
jg
rol
js
mov
add
xchg
xor
add
data16
xorl
pop
jge
ret
jge
add
adc
jbe
insl
add
sbb
mov
das
pop
cmp
xchg
mov
into
pushf
enter
pop
add
add
xchg
loope
dec
cmp
xchg
pop
leave
das
in
sub
in
call
icebp
aaa
enter
pop
xor
out
leave
test
push
mov
insb
or
push
jp
mov
mov
jae
aad
jo
rol
jae
inc
shl
aam
test
test
fidivs
pop
loop
lds
cmc
pop
jo
mov
mov
imul
ja
jecxz
shrl
mov
pop
pop
mov
xor
aas
sahf
insl
xlat
inc
ss
lea
or
inc
out
dec
add
sub
fwait
cld
lea
mov
xchg
xchg
gs
das
mov
xchg
lret
stc
pop
insl
arpl
mov
fldcw
fildll
gs
xchg
std
jp
stc
nop
sbb
imul
add
sti
inc
adc
mov
pushl
dec
into
call
xchg
imul
js
call
or
and
jecxz
lock
sub
js
pop
orps
sub
out
cli
je
xchg
das
loopne
push
int
jae
sub
stos
sbb
adc
sar
push
dec
pop
sbb
mov
icebp
xchg
cmp
fwait
jae
lret
sbb
int3
cmp
mov
xchg
repnz
dec
cmp
cmp
outsb
xchg
lret
or
xlat
cmc
rorb
cmpsb
mov
jno
fcomp
dec
inc
xor
inc
in
aas
fbstp
push
int3
lds
pop
sbb
mov
inc
mov
sahf
and
sub
icebp
sub
adc
leave
dec
add
adc
add
xchg
cmp
cmp
mov
ss
xchg
leave
xchg
js
add
cmp
fwait
je
mov
sbb
test
inc
jae
xlat
cmp
dec
mov
xchg
cmp
enter
std
pop
jecxz
push
mov
stc
jno
push
and
add
sbb
roll
das
xchg
add
test
dec
and
adc
cli
jle
push
ds
roll
std
xor
jl
icebp
pushf
rcrb
enter
and
sub
idivl
lods
lods
mov
pop
dec
pop
stc
dec
cmp
jp
orb
js
dec
icebp
stc
out
test
loop
push
xor
popf
mov
insl
push
mov
xchg
out
jl
inc
loopne
push
cmpsb
pushf
test
mov
je
stos
inc
sahf
imul
mov
and
stos
sti
lea
cmp
adc
mov
pop
dec
in
xchg
xchg
inc
or
jmp
mov
mov
jb
mov
inc
inc
jns
add
xchg
jo
add
or
adc
pop
add
pop
imul
addr16
out
pop
cmpl
cld
inc
nop
fdivrs
ss
pop
mov
repnz
mov
xor
xchg
imul
mov
push
inc
hlt
in
nop
jb
insb
or
int
mov
std
push
arpl
mov
mov
and
mov
out
cmp
or
xor
dec
add
and
push
mov
in
push
lret
push
aam
mov
in
push
dec
mov
out
fwait
inc
lea
jae
push
jae
lcall
sub
push
sbb
push
sti
out
dec
dec
leave
xchg
cmpsl
lds
pop
sbbb
adc
pslld
repnz
nop
fisubs
add
add
sub
xchg
add
lret
and
popa
inc
ficoml
aam
decl
mov
mov
mov
dec
frstor
mov
test
lret
xor
insb
test
adc
in
mov
sbb
es
push
scas
fs
ret
cltd
jno
pop
push
adc
gs
test
fxtract
jne
aam
sarb
jmp
xchg
or
movsb
pop
test
cmp
add
mov
jl
or
push
arpl
xor
outsl
dec
sub
mov
dec
daa
jp
or
adc
fwait
dec
mov
iret
mov
push
jne
pop
jno
rolb
jo
push
mov
adc
addr16
popa
push
mov
mov
dec
jl
push
xor
fldcw
addl
je
and
or
adc
outsb
stos
fisubrs
push
nop
and
fidivs
xchg
repz
inc
es
or
xor
cwtl
dec
xor
in
pushf
cmp
pop
mov
xor
or
iret
cmp
jo
cs
mov
jae
cltd
inc
pop
mov
push
pop
mov
add
negb
xor
jge
adc
enter
jno
mov
adc
fcoms
sub
and
mov
int
xchg
les
sbb
je
iret
mov
loop
xor
cltd
ficompl
mov
lods
or
popl
in
roll
xor
imul
push
aam
aaa
adc
pop
lahf
inc
pusha
inc
mov
and
fstpl
jbe
lea
jle
imul
rcrb
inc
in
lea
jb
out
outsl
pop
mov
mov
adc
mov
jp
shl
xor
lret
cmp
fcompl
je
mov
out
bound
push
mov
jno
sub
jns
push
or
outsb
repz
sbb
out
loop
test
mov
adc
cs
movsl
imul
lahf
jecxz
jp
addr16
jmp
dec
ss
rcl
xchg
cmp
and
mov
data16
aaa
push
std
adc
outsb
ret
dec
cltd
hlt
mov
iret
lcall
dec
mov
out
push
ds
insl
out
add
or
push
insb
mov
sub
fcomi
fidivrs
jp
sub
jb
int3
push
jo
jnp
loope
or
sub
push
cld
sub
xchg
cmpsb
mov
enter
pop
scas
aas
stos
mov
push
orl
rorl
or
and
std
ret
dec
sbb
ss
or
pop
imul
or
fisubrs
xchg
xchg
xorb
cmp
or
sub
jb
sbb
sub
test
adcl
mov
push
push
repnz
ja
cmc
cmp
rorl
mov
sbb
or
daa
addb
xor
push
jnp
inc
pop
fimull
pop
push
sub
pop
adc
dec
pop
push
fisttpl
inc
loope
push
bound
daa
ja
test
out
xor
push
add
mov
in
mov
clc
cmpsl
int3
mov
jne
cmp
sahf
add
lods
scas
push
or
test
lret
rcrl
leave
call
mov
js
add
sbb
mov
test
test
in
mov
xor
mov
aaa
pop
jp
int3
jle
xchg
bound
out
mov
in
sub
mov
pop
pop
ret
iret
pop
xor
sub
xor
cltd
repz
adc
fwait
je
insw
mov
inc
jno
or
xor
aaa
outsb
aaa
inc
jns
xor
mov
mov
sti
ljmp
sbb
pop
arpl
or
xchg
cmp
and
xor
dec
push
mov
inc
cmp
pop
add
mov
pop
je
aam
aas
mov
stc
mov
shlb
shl
add
xor
leave
inc
movsl
xchg
ret
xor
sahf
leave
add
pop
push
mov
cmpsl
popf
sub
es
pop
jge
fwait
dec
mov
add
mov
adc
sarl
pop
jbe
pop
stc
sbb
scas
xor
popl
adc
jecxz
add
xchg
push
cmp
mov
sbbl
mov
mov
and
loop
xchg
arpl
adc
push
cmp
inc
bound
minps
pop
pop
test
mov
stos
test
imul
es
mov
fwait
lods
fwait
mov
decl
or
jno
out
dec
push
enter
xor
std
push
mov
add
imul
sahf
movsl
mov
in
ret
jg
jno
xor
dec
adc
and
mov
adc
sub
dec
or
cld
fistps
xor
dec
lods
repz
sub
jne
pop
adc
pop
push
scas
insb
mov
dec
push
aaa
ljmp
js
jmp
fcmovb
cwtl
dec
outsb
sub
gs
and
setb
outsl
dec
xlat
and
jl
mov
add
or
adc
mov
push
je
xchg
out
gs
mov
in
cmp
and
hlt
inc
cmp
cltd
into
fidivl
sub
addr16
mov
pop
outsb
jmp
cli
and
cld
lret
das
out
or
enter
xor
fucomip
pop
and
addr16
mov
sti
pop
sub
xor
add
fmull
into
imul
ja
fwait
inc
mov
mov
add
push
mov
icebp
repz
push
push
sbb
subb
leave
dec
fiadds
add
aam
inc
pop
repnz
cmp
pop
jb
pop
sbb
or
mov
jmp
xchg
sub
jb
mov
mov
in
xchg
mov
mov
dec
push
cmp
rolb
data16
add
lock
data16
mov
lods
out
fldl2e
es
xchg
test
dec
dec
testb
imul
daa
in
cmpsb
push
sbb
sbb
jmp
lcall
pop
int
cwtl
shll
inc
sub
add
inc
jecxz
push
loop
xor
mov
pop
pop
mov
mov
insl
les
xchg
aas
jno
xor
aad
and
mov
mov
xchg
pop
push
cld
mov
incl
push
jno
jno
in
sub
les
push
xor
mov
ret
cli
rcrb
mov
pop
ja
js
fcoms
mov
jb
in
outsb
iret
repz
shlb
in
and
xchg
sbbl
call
outsl
push
sti
mov
lods
lock
inc
jno
cld
testl
sbb
add
dec
pop
pop
clc
sbb
mov
pop
mov
je
pop
push
mov
xchg
mov
ficoml
jbe
es
int
mov
or
push
xor
fucom
fstp
mov
push
mov
fiaddl
push
lret
test
mov
cmp
sub
lods
or
cmp
stc
ror
imul
lahf
inc
adc
out
adc
mov
scas
xchg
cmp
call
nop
adcb
push
sbb
cmp
lds
cmp
insl
ljmp
in
mov
push
out
shrl
pop
js
in
test
add
and
inc
stc
lret
inc
push
mov
repz
xor
leave
pop
push
jns
fsubrl
dec
int
adc
cmp
or
adc
mov
pusha
jg
hlt
dec
pop
xlat
mov
pusha
outsb
mov
pop
cmp
xchg
cmc
cmp
mov
cmc
mov
sub
orl
test
mov
inc
cltd
or
in
ja
xchg
popa
sbb
movsl
mov
imul
sbb
mov
jns,pn
stos
lcall
es
movsl
popa
xchg
pop
leave
sbb
mov
xlat
stos
pushf
xor
jmp
push
mov
in
add
inc
mov
dec
xor
clc
add
divl
mov
aad
sbb
inc
ja,pt
stos
lods
pusha
cwtl
inc
js
cli
mov
and
hlt
dec
jo
jecxz
fldenv
insl
in
xor
popa
subb
xor
popa
outsb
aam
jle
lahf
repz
mov
stos
pop
repnz
pop
push
dec
dec
mov
push
xchg
sbb
rcrl
cmpb
lock
in
sbb
imul
or
outsb
xchg
mov
fldt
pop
repnz
lock
das
lock
sub
mov
push
popf
sub
outsb
int3
ljmp
xchg
mov
lods
inc
jg
insb
pusha
sbb
mov
aas
out
push
mov
and
mov
pushf
pusha
aaa
inc
cld
fists
fldt
xor
push
sahf
imul
dec
sub
push
xchg
insl
add
mov
jnp
and
ljmp
sub
jge
sub
cmp
xchg
xor
out
fldenv
in
xor
loop
adc
cltd
mov
jo
cmp
inc
addr16
mov
sub
mov
fnstenv
pop
cwtl
sbb
or
outsl
xorl
push
sub
xchg
ja
orl
cs
cmp
sub
mov
add
addr16
mov
sahf
mov
sbb
mov
scas
mov
lahf
push
dec
xor
sbb
inc
sbb
or
sub
aad
pusha
out
sub
sub
add
or
mov
sbb
jp
cltd
cmpl
clc
sbbb
adc
in
faddl
test
adc
sub
stc
mov
push
popf
lcall
mov
lock
xchg
xor
divb
jo
dec
lret
sti
sti
mov
sbb
push
test
push
jmp
push
fnstcw
and
lock
popf
or
or
popf
ret
int
sub
mov
mov
ljmp
xchg
jbe
out
stos
hlt
push
xchg
cmp
jmp
mov
fcoml
insl
clc
jbe
les
mov
out
xor
orl
in
mov
inc
mov
sahf
xchg
fstpl
mov
jmp
cmpl
pop
pop
in
lods
sub
aaa
jle
setl
std
adc
fistpll
inc
dec
test
mov
dec
push
pop
std
xor
push
dec
jnp
xchg
mov
andb
das
lock
notb
mov
inc
outsl
shrl
xchg
xchg
push
rolb
mov
push
gs
dec
je
cmp
inc
pop
test
fdivs
add
imul
inc
dec
push
insb
adc
and
addr16
push
jno
lock
mov
repnz
bound
xlat
shrb
xchg
mov
jge
xor
loop,pt
push
mov
loopne
mov
push
sbb
sub
jo
mov
fsubs
icebp
mov
add
inc
pop
or
push
mov
lods
xchg
xor
pusha
in
sbb
rorb
xor
push
aas
xor
movsl
add
in
or
flds
push
cli
pop
xchg
or
gs
lcall
cmp
repz
and
test
jb
rcr
fisubrs
cli
lret
popf
pop
inc
gs
inc
cmp
test
stos
mov
dec
cmp
mov
mov
xchg
jno
or
cli
aam
fcmovnb
and
add
mov
sub
icebp
das
adc
dec
mov
ret
psubw
jge
lods
lds
shrb
jmp
xchg
inc
mov
stos
loop
push
mul
data16
aaa
cld
jp
shl
orb
dec
sbb
or
pop
nop
test
cmp
je
adc
pop
and
arpl
xchg
sub
lock
fisubrl
cmpl
loopne
mov
xor
test
and
sbb
test
dec
mov
aad
mov
int3
xlat
loopne
aad
xor
sbb
add
pop
fldcw
mov
das
lcall
sbbb
mov
cs
pushf
lods
add
push
jmp
rorb
hlt
cld
mov
jnp
scas
loopne
mov
repnz
mov
jmp
fsubs
dec
and
lock
sbb
add
scas
mov
fsubs
adc
xchg
in
xchg
mov
cld
clc
push
mov
pushf
pop
push
imul
sti
test
fcmovnu
pushf
and
lret
faddp
in
mov
jp
sbb
jnp
sbbb
sub
fistpl
mov
sub
xchg
dec
cld
pop
insl
push
aam
push
cs
scas
pop
sub
fistpl
faddp
aad
mov
or
fildll
imul
dec
lock
jp
or
pop
cmp
mov
jb
pop
outsl
pop
jno
cmp
scas
xlat
out
pushf
mov
iret
insb
es
add
out
call
or
repnz
xchg
jg
ds
dec
in
jmp
ss
cmpl
repnz
iret
jns
xor
cld
pop
and
fwait
mov
pandn
xchg
push
notb
in
mov
bound
call
xor
fsubr
loopne
loope
sub
push
jg
leave
push
das
cs
mov
fnstcw
into
add
aaa
lea
outsl
lods
add
cmp
push
fbld
ljmp
jno
into
out
fldt
inc
sbb
aas
push
add
push
stc
mov
out
clc
popa
pushf
cmp
xchg
or
push
pop
push
mov
in
mov
imulb
jbe
pushf
pop
cld
add
into
sub
test
sahf
fucomi
xor
mov
push
mov
fsubrl
xor
ja
fisubl
push
xor
xchg
dec
inc
mov
nop
out
jecxz
sub
aad
outsl
int3
mov
test
stos
fs
ret
pop
fwait
stos
push
pusha
jle
xorb
mov
jo
pop
loopne
jnp
aaa
pop
or
cmp
cwtl
insl
nop
aaa
cwtl
push
scas
negl
cli
inc
pushf
mov
xchg
xchg
sbb
fldt
xchg
iret
rolb
xchg
dec
sub
out
cltd
jecxz
bound
arpl
mov
mov
push
repz
andb
and
ficoms
xor
in
dec
out
es
xor
sahf
xchg
les
add
xchg
mov
mov
push
xchg
shlb
adc
movsl
sub
mov
hlt
jns
loopne
pop
cwtl
push
insb
mov
or
inc
ja
loope
fcmovnu
fsubr
popa
inc
out
fcmove
insl
cmp
shll
scas
add
push
xor
cmp
push
loopne
push
test
pop
iret
lock
insl
ror
mov
aad
fwait
cmp
and
cmp
ficompl
add
push
rcl
mov
mov
mov
enter
popaw
nop
nopl
mov
decb
scas
je
iret
enter
je
xchg
dec
mov
push
fildll
add
jp
xchg
lds
pop
mov
push
mov
pop
sbb
fmull
lret
mov
cld
mov
fstpt
cmp
in
repnz
xor
outsl
rcr
cmc
lret
mov
outsb
mov
dec
sti
scas
jnp
pop
pop
and
mov
lret
js
mov
sbb
out
pop
lcall
stc
cs
ss
jg
or
mov
out
adc
jl
les
mov
xchg
js
mov
ljmp
stc
shufps
jo
and
mov
and
mov
xor
fcomps
and
and
and
mov
xlat
clc
add
cmp
das
dec
and
or
fildl
insl
cmp
test
cs
adc
ret
add
mov
lock
loope
data16
add
mov
sub
test
adc
imul
idivb
movsb
jns
or
popa
ffree
outsl
pop
cld
ljmp
or
dec
or
push
sti
in
sub
xchg
jnp
mov
leave
sbb
mov
pop
xor
push
cs
jle
sub
enter
push
sbb
dec
xor
rol
loope
stos
inc
movq
dec
cld
inc
fistpll
in
cmp
xchg
lahf
int3
fistl
roll
fisubrs
shl
bound
outsl
popa
push
inc
in
add
test
push
arpl
enterw
mov
leave
repz
imulb
out
mov
jno
pushf
sbb
fcoml
loope
sbb
cbtw
push
xor
clc
ret
sub
dec
neg
out
sub
and
adc
int
sub
mov
lock
pop
sub
stos
call
lret
sub
cmp
out
int
int3
in
jmp
mov
add
in
mov
rorl
add
xor
ror
jmp
ret
popa
xlat
push
xchg
mov
daa
sar
adcl
and
cmp
mov
jb
ss
adc
icebp
mov
js
fstpl
push
mov
sub
xor
mov
enter
add
ljmp
cmp
or
add
cmp
mov
and
in
leave
addr16
addr16
ret
add
test
pop
cmpsb
mov
dec
cmpl
sbb
cmp
daa
xchg
sbb
pop
adc
bound
cmc
pop
add
in
jge
sbb
push
nop
iret
lock
or
js
mov
adc
cmp
in
dec
mov
lock
or
sbb
xor
pop
shrb
jbe
sbb
cli
rclb
pop
call
cltd
out
ja
jmp
pop
sbb
popf
cltd
stos
jle
sbb
cmpsl
jp
fwait
into
outsl
pop
dec
mov
cmp
lods
in
aam
cmp
mov
lods
xor
adc
loop
insb
int
mov
icebp
push
into
pop
dec
iret
lds
clc
sbb
jb
mov
or
mov
inc
adc
std
lds
xlat
adc
push
lahf
hlt
xchg
push
xchg
xor
ljmp
and
push
cld
mov
dec
test
hlt
pop
and
js
inc
lock
in
int3
push
jns
mov
add
xor
jo
jnp
jno
mov
mov
sbb
pop
in
push
int
addl
add
push
int
mov
sbb
cmp
mov
dec
mov
add
pop
loopne
out
sub
sbb
stos
xlat
cwtl
add
mov
lds
or
and
cmp
ret
mov
rcll
lds
mov
rorl
sbb
push
loop
rcrb
imul
add
aaa
test
popa
mov
pop
das
stos
cmpsb
imul
or
out
mov
cmc
lret
jle
cwtl
sub
pop
gs
fdivr
aam
sbb
daa
lret
shr
inc
add
and
jns
cwtl
mov
in
jno
adc
xor
jecxz
mov
lret
xor
add
call
movsl
xchg
scas
sbb
sbb
out
sub
adc
dec
mov
shlb
adc
stos
mov
mov
and
sbb
fldl
jp
stos
mov
addr16
mov
das
daa
sahf
lock
adcb
cld
clc
sti
int
aas
frstor
mov
sbb
daa
jb
push
add
or
repz
or
mov
pop
ljmp
add
xor
movsl
stos
test
sbb
add
fstpt
xchg
pop
in
sbb
dec
scas
test
mov
pop
incb
mov
or
push
mov
imul
cmc
ret
cmp
cmp
fdivrs
fisubl
aad
gs
stos
je
std
lods
jne
jo
adc
data16
std
push
sub
loop
test
cmp
sub
mov
or
ret
cmp
push
mov
incl
mov
jae
push
push
push
add
scas
push
ja
stos
adc
aaa
out
in
std
leave
testl
fs
pop
cwtl
int
pop
mov
ffree
add
mov
sub
pop
push
repz
es
add
mov
jmp
xor
mov
adc
mov
repz
sub
cmp
jnp
in
add
pop
xor
add
jge
jle
adc
adc
loope
rorl
adc
push
out
leave
divl
sub
adc
jg,pn
mov
sti
mov
dec
das
ja
mov
or
xor
mov
xchg
sbbb
aas
int
jo
lcall
pop
pop
inc
adc
jae
mov
out
push
xchg
in
imul
push
mov
sarl
fbld
cmp
das
jecxz
stc
mov
out
pusha
xchg
test
mov
xor
popf
fimull
xchg
cltd
es
jmp
call
adc
sub
inc
lods
test
mov
and
add
das
adc
and
mov
jle
dec
mov
pop
insb
out
mov
daa
add
lods
inc
inc
insb
fsts
push
add
and
adc
jg
imul
sub
inc
enter
dec
jg
jmp
cwtl
inc
stos
in
cmc
in
jo
test
pop
sub
shlb
cmp
fmuls
imul
cmpsl
pop
mov
jge
push
mov
or
dec
bound
fwait
xchg
mov
cmp
out
dec
push
xchg
mov
mov
xor
stos
outsb
xor
jns
inc
mov
lea
push
xor
bound
dec
push
aad
adc
movsl
test
mov
push
in
std
out
adc
dec
mov
insl
xchg
psubusb
push
insb
dec
push
cmc
loop
stc
call
loopne
jns
pop
fstpt
mov
adc
shr
push
aam
mov
lock
cmp
mov
mov
insl
das
dec
mov
fsubrs
cmp
pop
test
push
pushf
fisubrs
or
inc
mulps
in
inc
mov
cmp
jo
out
lds
xor
jmp
inc
xchg
and
sub
scas
sub
out
and
inc
leave
mov
aas
mov
je
movsl
jecxz
xchg
and
loop
cmpsb
add
sub
push
push
aam
cmp
jp
imul
loopne
adc
push
push
arpl
sub
shll
clc
sbb
push
fdivs
and
int
dec
out
mov
sti
xor
rorl
mov
jbe
push
add
imul
in
cmpsb
fldt
sbb
pop
pop
xchg
adc
jns
mov
jae
dec
add
mov
fs
cmpb
sahf
push
inc
fimuls
mov
loop
mov
inc
mov
cli
push
cltd
loop
sbb
outsl
push
aaa
mov
pop
fadds
pop
pop
cmp
test
addr16
into
je
popf
clc
pushf
pmaddwd
dec
sahf
js
repnz
lock
insb
mov
jmp
jne
pop
cltd
mov
xchg
lcall
jb
ljmp
sbb
aas
mov
fistpl
insl
cmp
adc
jl
sub
mov
es
jmp
mov
in
xchg
aas
enter
fimull
enter
pop
mov
jno
repz
lretw
cs
adc
aaa
lret
jo
xchg
fdivrs
xchg
popa
clc
push
dec
dec
mov
iret
sbb
push
add
or
cmpb
and
hlt
leave
into
in
push
and
rorb
test
jp
jae
mov
inc
pop
hlt
inc
or
imul
sahf
mov
aas
inc
mov
movb
cmpb
fs
mov
add
mov
je
push
mov
cmp
insb
jl
fmul
sbb
repnz
incl
andl
loopne
rorb
and
cltd
push
mov
dec
cmp
push
xchg
inc
xchg
fidivl
pop
pop
mov
mov
sub
sub
mov
fldenv
mov
out
loop
fidivl
das
inc
ds
cmpsl
or
mov
movsb
xorb
jg
or
pop
mov
sub
pop
mov
in
loope
mov
stos
popl
sub
pop
arpl
sub
jl
jbe
and
into
push
fidivrl
into
in
mov
push
jo
push
shrb
ss
jg
lcall
adc
and
test
clc
lahf
hlt
and
mov
fists
cmp
dec
cmpsl
pop
cwtl
cmp
push
mov
iret
repz
lock
js
xchg
and
sub
mov
jae
test
cmp
mov
pop
xor
iret
insl
int3
sub
sahf
jnp
cmp
jecxz
cld
sub
or
out
jecxz
jge
arpl
loop
dec
add
sub
jmp
ficoml
or
call
jno
subb
pop
pop
int3
jp
scas
xchg
xor
cmp
push
jge
push
sti
in
cwtl
sarb
rclb
mov
imul
mov
std
arpl
mov
mov
sbb
dec
mov
pusha
pushf
xchg
pop
roll
xchg
dec
movsb
cs
lret
adc
or
push
dec
or
inc
and
add
arpl
into
mov
mov
aaa
inc
or
gs
mov
xchg
xor
aam
idivb
fdivr
sbb
jmp
push
popf
bound
jo
in
cmp
mov
mov
lret
jae
aad
add
cmp
or
xchg
pop
daa
ljmp
jl
ror
call
in
cltd
sbb
xchg
mov
and
aaa
adc
lahf
dec
and
aaa
test
aas
scas
loope
bound
lahf
dec
addl
or
xchg
jbe
ss
mov
mov
loop
dec
sub
mov
clc
loope
sbb
test
or
idivl
addb
or
xor
mov
xchg
sbb
mov
or
mov
sahf
lods
inc
sbb
sub
jl
test
xor
mov
shr
push
test
mov
int3
xchg
sbb
pop
push
lahf
pop
leave
scas
xor
pop
mulb
mov
cmp
pushf
inc
into
test
sahf
mov
jg
mov
fbld
ds
adc
mov
xor
inc
in
iret
out
movsb
ds
and
test
mov
notb
xchg
add
sub
outsl
enter
js
aaa
add
test
ret
fs
dec
mov
cmp
idivl
dec
fiaddl
rorb
ljmp
adc
pusha
cmp
cmc
enter
cld
js
mov
mov
lods
arpl
ss
jecxz
dec
mov
pop
ror
stc
cld
pop
mov
js
mov
int3
jle
jb
xor
and
mov
dec
xchg
movsl
xor
jo
into
stc
push
int3
insl
clc
jmp
outsl
sahf
aaa
mov
dec
adc
sub
aad
insb
sbb
test
scas
or
int3
jp
push
stos
xchg
in
rorb
mov
cmp
push
xlat
mov
jge
dec
push
std
dec
fidivl
or
add
jl
loope
push
inc
cmp
int3
mov
call
fsubrs
mov
test
inc
mov
xor
movsl
inc
outsl
andl
mov
xor
xor
data16
enter
aam
sub
push
shll
cmp
and
aad
jecxz
add
out
jnp
in
sbb
and
test
repnz
dec
xor
daa
mov
test
mov
ret
push
adc
mov
andl
mov
mov
pop
or
mov
sub
add
and
pop
sti
aam
addr16
bound
cmp
mov
inc
test
cmp
jb
loope
jb
push
push
sbb
lret
sarb
and
inc
scas
dec
sub
lock
sti
fxch
mov
xchg
push
movsb
shrb
cli
dec
jne
cld
fsub
out
push
lds
in
imul
loope
fsubrl
stos
loop
hlt
jecxz
mov
jno
cmc
mull
aad
mov
cs
sbb
inc
aas
jae
push
negl
push
neg
outsl
mov
or
rorb
loopne
and
mov
into
xchg
mov
andb
pop
mov
jg
mov
enter
movsb
xor
filds
sbb
mov
repnz
push
fisttpl
xor
cwtl
sbb
lcall
sub
xor
mov
pop
mov
xchg
mov
es
out
fsubrp
rclb
add
test
int
add
leave
sub
mov
sbb
jae
and
mov
cmp
fstl
cwtl
inc
jge
add
or
and
ret
popa
mov
aas
out
enter
inc
pusha
out
mov
fsubrs
mov
jmp
mov
test
lods
fiaddl
add
pop
pushl
sbb
jo
mov
xchg
mulb
mull
jae
aam
push
jg
fdivrp
sub
in
icebp
lods
js
sarl
cmp
inc
lock
shr
jge
jae
push
in
arpl
mov
lods
scas
dec
fidivl
jns
scas
int
inc
adc
sbb
aam
sbb
popa
dec
aaa
fs
cltd
xor
jg
add
mov
push
mov
pusha
or
pop
push
xlat
jp
sbb
test
int3
lret
lret
mov
dec
mov
rclb
arpl
inc
jg
daa
adc
faddp
push
lea
hlt
push
xor
xor
lods
int3
sbb
rcrl
addr16
mov
int
rcll
gs
mov
hlt
lods
popf
dec
xchg
idiv
pop
cmp
add
insl
pavgw
insl
shlb
fmuls
insb
repz
pusha
mov
mov
popa
out
fsub
push
adc
pop
mov
cli
imul
push
outsl
push
push
shlb
xor
pop
push
out
loopne
adcl
js
pushf
cmp
xor
fisttps
add
sahf
cli
mov
dec
push
loop
push
sarb
pop
es
mov
adc
inc
filds
pop
adc
rorb
fiadds
popf
inc
adc
pop
inc
xchg
hlt
jne
insl
sahf
sahf
les
and
cmp
hlt
jmp
adc
int
xchg
fisubl
lods
mov
mov
out
sarl
pushf
sub
pushf
and
push
pop
flds
repz
loope
repz
cmpsb
addr16
jmp
and
push
lods
mov
mov
adc
mov
xchg
stos
or
fisubs
and
mov
js
xor
dec
gs
xchg
cld
mov
adc
cmp
repnz
jae
add
mov
lea
jbe
sbb
mov
xchg
cmp
lret
jp
stos
inc
clc
scas
mov
test
out
cmp
xchg
mov
fcoms
mov
icebp
sarl
sub
push
movsl
sub
pop
in
arpl
ror
ss
cmpsl
aam
notb
jno
mov
cmp
movb
sbb
loop
bound
lret
adc
bound
push
jbe
pop
lret
xlat
jbe
adc
cmpsb
nop
xchg
add
push
mov
loop
xor
jmp
jp
push
sub
call
shl
pop
jge
mov
out
jp
or
aaa
loope
leave
cld
scas
jle
adc
popf
fcmovnb
jl
filds
sti
rcll
iret
ret
jnp
ljmp
outsl
mov
inc
scas
jecxz
mov
lock
xchg
les
pop
fnstenv
pop
add
insb
xor
xchg
mov
xor
negb
cmp
shrb
mov
dec
scas
push
fistpll
jb
or
scas
cmp
mov
xchg
sbb
subb
sbb
push
dec
cltd
mov
jg
and
push
adc
push
mov
push
adc
dec
push
cmp
jp
jmp
lods
in
sbb
jmp
pushf
dec
jno
in
clc
test
add
int
cmpsl
push
dec
adc
into
mov
xor
mov
rolb
xchg
and
adc
pop
insl
les
das
mov
sar
fnsave
clc
mov
mov
and
jl
ror
je
cmpb
orl
jle
gs
sub
or
movsl
cmp
ss
push
stos
inc
pop
out
add
ror
mov
push
cmpsb
cld
push
je
sub
push
addr16
insb
and
subl
add
cmp
xchg
and
pusha
fdivrl
imul
subb
mov
shl
add
call
mov
add
push
push
dec
sbb
sbb
inc
cmp
cwtl
pop
dec
jo
add
sbb
ljmp
mov
sub
add
das
popf
lods
scas
or
and
xchg
pusha
mov
out
popa
enter
push
pop
cmpsl
mov
xchg
inc
rsqrtps
mov
scas
popl
cmp
das
mov
imull
mov
fiadds
sbb
sbb
mov
adc
or
mov
inc
mov
cltd
xlat
jl
dec
cwtl
or
add
out
mov
test
add
sahf
int3
in
ja
mov
xchg
cmove
pop
mov
add
andb
mov
outsl
scas
push
dec
xor
mov
in
fldt
subl
daa
or
into
pushf
ret
mov
das
push
in
and
dec
movsl
sub
outsb
sahf
lods
jne
stos
ret
push
imul
insl
lahf
jle
outsb
sub
sti
out
dec
jmp
jge
adc
sbb
mov
sbb
jle
in
mov
xor
mov
xchg
cmp
sarl
pop
adc
es
scas
sbb
sub
sbb
dec
js
mulps
bound
aam
cmp
mov
scas
mov
insb
repnz
cmp
out
insb
push
sbb
sub
mov
loopne
in
mov
clc
fistl
cmc
dec
mov
mov
and
popa
pop
shlb
fwait
jne
cld
subb
ss
in
or
fldl
loopne
ds
fimuls
and
lea
push
inc
je
ret
cmp
mov
aad
adc
lahf
xor
pusha
pop
fidivrs
insl
adc
xchg
loopne
xchg
and
insb
bound
ljmp
inc
mov
movsb
inc
cwtl
cltd
sub
testb
jns
inc
jp
aam
fstl
jmp
xchg
test
mov
mov
pop
mov
push
fsubrs
jae
push
xlat
js
cmpsb
add
int
and
pop
mov
jle
sub
fucomp
test
dec
mov
mov
iret
jge
iret
out
loope
enter
push
ss
stos
dec
xor
clc
add
es
sbb
mov
ror
jl
xchg
repz
arpl
lahf
in
fwait
and
iret
xor
rcrl
mov
ja
mov
sbb
sub
jnp
test
idiv
arpl
sbb
pop
test
test
loopne
cld
sub
inc
jle
clc
mov
adc
daa
mov
sbb
fdivl
mov
leave
jp
out
xchg
jg
sub
xchg
xor
adc
pop
xchg
les
pop
lcall
into
bound
mov
movsb
dec
repnz
and
mov
lea
cli
cmp
xor
sbb
ficompl
pop
pop
imul
dec
pop
sbb
and
push
lcall
push
aas
lcall
idiv
mov
setp
jecxz
mov
daa
insb
pop
lcall
mov
jmp
adc
test
orb
movsl
scas
arpl
ficompl
scas
and
jbe
adc
mov
push
jmp
dec
aam
dec
cmpsl
cmp
scas
mov
insb
inc
das
mov
aas
or
and
pop
mov
in
or
test
sbb
lods
and
or
xchg
iret
jl
pop
inc
stos
inc
es
fnstenv
mulb
jnp
fstp
insb
xor
sarl
jle
test
dec
dec
xchg
fldl
mov
and
inc
lds
xor
sbb
sub
xchg
push
mov
xchg
loopne
jmp
test
mov
inc
pusha
imul
jecxz
inc
sbb
mov
scas
push
and
push
out
add
fwait
ja
cltd
mov
popf
xor
imul
xorl
jo
add
test
repnz
add
fsubs
outsb
lds
inc
dec
and
xchg
xchg
xor
cmp
sti
outsl
std
test
sbb
adc
adc
stc
mov
push
dec
pxor
inc
inc
pusha
icebp
shll
mov
lcall
popa
pop
cmp
ljmp
aaa
adc
icebp
adcl
pop
outsb
in
sbbb
mov
jmp
incb
dec
fwait
dec
je
add
pop
lret
and
xor
addr16
mov
mov
mov
cld
rcrb
fdivrl
daa
mov
or
dec
aam
nop
lods
daa
push
mov
clc
loopne
mov
in
mov
sub
sbb
mov
scas
push
in
lods
shl
out
sub
rcrb
xlat
jg
ret
push
push
pop
mov
lcall
in
jle
hlt
int3
movsb
insl
jnp
aas
out
mov
popa
jmp
mov
jb
inc
xor
cmpl
lret
stos
lea
adc
dec
xor
mov
push
and
out
jp
add
mov
mov
decl
imul
lret
movsb
in
cmp
aas
mov
inc
out
popa
into
cwtl
fnstsw
jno
xor
fistpl
mov
cli
xchg
dec
or
mov
dec
shl
xchg
sbb
jp
jg
fsubp
hlt
out
leave
xor
lcall
inc
rorl
fistps
pop
inc
ja
test
add
inc
cltd
add
mov
ret
jecxz
sub
ror
mov
add
rorl
mov
dec
hlt
fmulp
or
loop
xorb
clc
stos
lods
xor
xor
es
sub
adc
in
xor
mov
repz
bound
incl
jl
insl
add
add
leave
or
dec
cmp
mov
xchg
outsl
or
jne
js
scas
shrb
pusha
sub
mov
xchg
mov
dec
mov
xchg
mov
mov
out
nop
sbb
ljmp
bound
add
sub
and
cli
lods
inc
pop
jl
stos
jle
ljmp
cli
dec
loop
scas
push
nop
add
mov
inc
cmp
and
movl
dec
push
and
test
stos
int
cmp
jb
roll
out
push
pusha
mov
aam
push
rcrl
xor
cmc
sub
ja
andb
test
mov
or
cwtl
add
adc
mov
inc
sarl
or
xchg
es
enter
jp
daa
mov
push
lea
xor
int3
add
aas
pusha
sbb
icebp
mov
xchg
push
push
cld
pop
and
loope
sbb
and
or
mov
cmp
mov
int3
outsb
daa
ds
les
cmp
popf
rcrl
cmp
push
rclb
dec
leave
mov
xor
xor
and
cmp
xchg
dec
mov
inc
inc
sub
adc
xchg
out
jl
mov
pop
loopne
mov
mov
push
pop
jb
mov
push
pop
loope
mov
adcb
add
add
out
fistpl
and
cltd
js
ss
daa
and
push
mov
test
test
push
push
ja
pop
xchg
sti
loopne
xlat
test
sbb
dec
mov
js
xor
jecxz
movsl
pushf
sarl
jb
cmp
push
outsl
jne
cmpsb
aam
push
lret
call
dec
dec
and
dec
add
shl
or
cwtl
lret
roll
shl
out
push
bound
pop
sub
pop
cmp
jg
fstps
mov
ds
cmpsl
lock
stos
mov
mov
ffreep
cld
pop
mov
xchg
leave
aas
xor
jae
cmp
jmp
pop
add
xrelease
pop
jnp
sbb
jle
pop
ret
cmp
mov
xor
or
inc
pop
arpl
pop
popa
cmp
lods
xchg
scas
mov
lods
pop
aad
dec
sub
xchg
sbb
sub
and
dec
and
sarb
mov
mov
push
cmp
addr16
adc
push
loope
test
lcall
mov
into
pop
nop
dec
push
push
mov
dec
test
mov
ja
mov
mov
jecxz
aad
cmp
test
in
mov
fcmove
dec
cmp
sub
inc
pusha
movsb
mov
and
mov
or
xor
fs
pop
dec
dec
loopne
cwtl
stos
push
cmovae
mov
inc
hlt
jmp
out
rcl
test
ret
adc
in
xor
pop
cs
data16
clc
xchg
add
pusha
push
movsb
xor
mov
sahf
cwtl
push
jge
or
sub
sahf
fwait
pop
stos
gs
sub
popf
jns
movsb
fcmovnu
fs
mov
frstor
jge
mov
ficoml
int
inc
add
aaa
aas
sbb
or
ds
sahf
jns
iret
nop
fs
or
adc
cwtl
sub
iret
sub
or
insb
aad
cmpsl
aas
dec
sub
push
ret
fimuls
jg
xlat
push
mov
pushf
xor
pop
mov
cs
sub
push
jecxz
jne
mov
dec
pop
subl
ret
scas
aaa
insl
pop
adc
fcomip
mov
int
fdivr
mov
sub
xor
fistpl
adc
mov
push
sub
xlat
push
ficoml
dec
sbb
push
dec
pop
jns
inc
push
jmp
cmpsl
push
add
jo
outsl
outsb
cmpl
ss
imulb
popa
pop
jecxz
jne
outsb
jae
mov
cltd
in
into
bound
adc
shlb
cmp
or
movsb
xchg
and
sti
adc
mov
cmc
adc
mov
pop
ror
push
push
mov
lods
mov
xchg
cld
loopne
flds
xor
cmpsl
mov
cwtl
sahf
and
bound
in
push
stos
insl
or
jg
std
sub
adc
in
jae
int3
pop
js
lret
pop
lods
sub
mov
cld
xchg
scas
dec
mov
dec
xor
das
addl
mov
dec
add
xorl
mov
shrl
push
jmp
in
push
rclb
pop
mov
pop
sbb
arpl
xor
fs
sub
inc
push
jne
sub
cltd
inc
cs
pushf
sub
insl
push
xchg
js
div
imul
push
loope
push
pop
sbb
test
inc
out
sub
inc
fs
outsl
sub
sarl
add
out
stc
imul
pushf
cmpsl
mov
arpl
jno
sbb
jno
add
hlt
xor
inc
push
sub
iret
xor
fs
sub
fimuls
dec
lods
pop
fildl
outsb
push
out
mov
jmp
loop
sbb
pop
sbb
dec
popf
aaa
shll
push
in
xor
mov
imul
dec
push
xchg
out
stos
pop
imul
jo
lds
pop
shl
xchg
bound
mov
xchg
jns
jecxz
jecxz
out
loop
lock
xchg
add
int3
aas
mov
seta
xchg
and
outsl
mov
paddw
insb
es
or
cmp
xchg
mov
jle
push
das
lock
jne
nop
outsl
dec
or
es
mov
cmp
movsl
push
imull
mov
mov
push
fildl
addps
jae
ret
divl
mov
adc
push
cmp
jge
fsts
jl
push
fdivrs
sbb
and
loope
mov
mov
pop
mov
gs
loop
movb
test
pop
lds
cmpsl
jnp
enter
jle
cmp
aas
mov
and
push
in
xchg
pop
aad
or
data16
push
add
pop
mov
in
dec
mov
push
fisubs
xchg
sti
push
jp
pop
add
test
aad
enter
and
mov
pop
sub
ret
in
test
or
pop
mov
out
mov
add
or
or
xchg
cs
sarl
sbb
sub
adc
cmp
or
xchg
in
mov
je
xor
fsubrl
pop
mov
mov
push
mov
or
pop
dec
mov
push
ja
push
or
sbb
mov
mov
cmc
rcr
pop
test
xor
or
pop
sub
jle
mov
pop
addr16
jp
and
js
fcomi
ss
fwait
scas
xor
cmc
add
adc
cmpb
jnp
insb
push
pop
sbb
sbb
mov
cmpsl
jecxz
inc
in
pop
xlat
in
subb
push
inc
mov
dec
mov
sub
pop
mov
mov
idiv
push
sub
jne
push
pop
gs
les
jb
cmc
insl
mov
lret
test
push
nop
ljmp
js
inc
xor
rcrl
sahf
sarb
ja
jg
dec
jo
cli
cld
aaa
push
fsts
mov
iret
push
fwait
push
insb
and
mov
mov
cmp
and
sti
fs
je
cli
or
mov
add
inc
xor
sub
jbe
addl
pop
lock
js
orl
lret
es
adc
add
xchg
gs
jo
std
inc
insb
js
jbe
das
push
inc
cli
fildll
sub
push
mov
add
pop
add
jnp
sbb
scas
jb
mov
fidivs
ljmp
loope
xchg
cmovp
add
push
or
call
jo
xchg
rclb
xchg
cltd
jnp
or
sbb
add
gs
add
loop
out
les
cmp
gs
or
lods
mov
data16
in
dec
jnp
jno
push
or
out
rclb
loope
cmp
jno
icebp
data16
pusha
lods
xchg
mov
mov
loop
outsl
sahf
jb
push
xorl
sub
push
jg
ds
mov
mov
mov
mov
xor
jmp
mov
lds
mov
les
or
sbb
xor
mov
out
xchg
sarl
repnz
mov
test
jecxz
mov
mov
loope
jge
jo
out
mov
les
push
dec
outsl
dec
mov
add
pop
xchg
loope
lods
inc
adc
leave
push
push
cmp
ret
inc
lods
add
mov
and
sub
mov
pop
test
fs
mov
aaa
ljmp
movsl
adc
xchg
scas
sub
or
inc
loop
xchg
sbb
iret
push
mov
inc
pushf
lahf
mov
in
mov
in
mov
rorb
mov
enter
pusha
sub
jns
jne
loope
mov
adc
push
into
xor
lods
lret
xchg
lret
or
fstps
mov
test
xlat
jmp
rorl
aas
out
lods
jp
sub
call
lds
ss
int
fcoml
push
cmc
or
int
xor
test
daa
and
cltd
hlt
jge
ljmp
push
clc
pusha
dec
and
mov
fmuls
push
pop
jns
jb
dec
push
fists
cmovns
push
movsl
pop
pop
icebp
mov
inc
scas
pop
push
js
dec
imul
das
sub
push
outsb
pop
loop
pop
iret
cmp
sub
pop
push
push
dec
push
xchg
push
pushf
mov
lahf
adc
sbb
stc
aam
lea
sar
cmc
push
jle
cli
jmp
hlt
fdivrs
push
push
je
outsl
shrb
mov
jmp
lahf
in
and
or
stc
out
pushf
aaa
outsl
mov
loop
dec
mov
shll
xlat
sub
mov
test
or
jo
dec
jmp
and
jae
sub
fisttpll
jae
loopne
sti
xor
lahf
cmp
sbb
subps
mov
inc
cltd
jle
nop
xor
cmpsb
mov
pop
sub
or
sti
fbld
xchg
jp
rcll
xchg
xchg
sbb
inc
or
in
cld
mov
xchg
pop
iret
aaa
xchg
pusha
das
xchg
xchg
int3
fs
cs
in
jns
out
push
and
cmp
add
outsb
jae
mov
fcmove
sti
mov
lahf
push
arpl
jmp
in
mov
and
sti
subl
and
test
scas
inc
loop
in
cmp
bts
pushl
pop
shll
pop
add
cmp
adc
and
xchg
test
in
add
out
bound
loopne
xor
mov
and
ljmp
adc
cmpsb
push
mov
ljmp
jne
sahf
mov
push
mov
test
shr
push
pop
dec
dec
push
add
mov
jle
or
adc
lret
jg
xor
dec
repz
scas
sbb
stos
dec
lret
ror
movsb
or
push
sub
mov
xor
push
mov
pop
cmp
jno
jmp
push
bound
add
mov
mov
aaa
mov
inc
daa
push
bound
jne
insb
icebp
adc
xchg
lds
mov
outsl
addr16
pushf
jnp
xlat
xor
sub
jae
out
leave
mov
mov
mov
sbb
fnsave
lret
stos
rcr
push
ror
ljmp
imul
pop
or
sahf
xor
cmp
add
inc
jne
stos
sbb
call
pop
std
push
push
dec
loope
mov
aad
in
fsubrl
daa
cmp
popf
ss
test
shll
sub
jl
clc
pop
stos
mov
pop
ret
push
inc
pop
and
jns
add
inc
pushl
jno
mov
out
and
cwtl
rcll
shrl
xor
cwtl
dec
mov
mov
mov
xor
aad
or
cpuid
repz
cld
fimull
dec
mov
stc
iret
imulb
sub
add
ret
test
inc
mov
push
sbbb
or
or
outsl
jg
cltd
cmp
nop
or
xchg
mov
cmp
mov
dec
negb
pop
push
pop
inc
cld
and
push
hlt
leave
xor
into
loopne
mov
or
stc
inc
cmp
inc
push
pop
rorl
jge
xor
jmp
add
pop
lcall
mov
fwait
rclb
pop
hlt
shll
dec
repnz
push
in
frndint
rorl
mov
out
push
mov
sbb
mull
test
cmc
rolb
clc
inc
aas
in
pop
inc
into
xchg
cmpb
adc
imul
xor
mov
and
lret
adc
cmp
mov
shlb
mov
int3
std
vpsllw
ds
add
fiadds
cmp
cmpsb
push
mov
xchg
aaa
push
cld
inc
and
popf
aaa
out
cmp
test
xchg
cmp
mov
loop
pop
fdivrl
adcb
and
dec
sub
fisubs
sub
out
adc
sahf
push
scas
pop
nop
jl
stos
daa
jle
mov
cmovs
psubd
mov
cld
in
sarb
div
adc
dec
gs
and
sbb
test
movsl
mov
ds
xchg
cltd
repz
mov
dec
fs
fcompl
cld
adc
aaa
in
nop
int
mov
jle
stos
jmp
adc
jne
add
cmpsb
bound
add
sbb
popa
or
xor
add
xchg
rcr
mov
xor
pop
stos
cmp
insb
out
xor
mov
rcl
rorb
aaa
push
pop
inc
test
outsl
dec
popa
dec
adc
push
cmp
mov
sbb
js
in
out
in
or
ss
adc
fmuls
cmp
pminub
sbb
mov
fcoml
leave
lret
jae
or
xchg
add
stos
cmp
inc
push
or
cmpsl
stc
sbb
lcall
push
addl
fadd
mov
das
bound
scas
ret
and
push
dec
sti
mov
pop
in
out
inc
push
pushf
pop
xor
shll
stos
stc
sub
adc
fisubrs
add
rolb
cli
pop
cmpsl
dec
scas
xlat
or
add
sbb
or
adc
xor
sbb
scas
ja
pop
clc
mov
imul
sub
imul
sub
leave
add
dec
into
fldt
mov
sub
leave
pop
add
orb
nop
pop
cmp
mov
jns
mov
push
mov
mov
add
dec
cmpsb
stos
pushf
in
repnz
loope
into
mov
xchg
cmpsl
cmp
cmp
push
xchg
sbb
inc
out
or
cmp
cld
iret
fwait
xor
pop
imul
idivb
loope
fnstenv
pop
movsb
sbb
adc
lea
cmp
fcmovne
test
adc
daa
xchg
sbb
cli
mov
ja
stos
or
or
shl
shrl
lds
cmp
aam
jmp
pop
lea
aas
sub
or
enter
fs
sub
xchg
pop
and
mov
xchg
mov
ja
popf
movsl
outsb
or
and
and
mov
outsb
out
cltd
cmp
mov
inc
jl
es
cmp
sub
ret
movsl
mov
test
sub
insb
xor
mov
mov
fdivrs
cmp
ja
adc
or
xchg
pop
dec
inc
mov
scas
and
push
pop
inc
js
add
addb
gs
push
jno
and
cmp
rcll
arpl
imulb
andl
mov
loopne
cmp
mov
and
clc
mov
outsl
dec
popa
xchg
jno
and
lods
xchg
push
push
das
push
sbb
dec
rcrl
xchg
xor
imul
mov
nop
js
xlat
dec
cld
jmp
and
inc
mov
aad
loopne
imul
les
dec
clc
imul
aas
ja
or
fstl
mov
jle
daa
adc
subb
add
mov
es
aam
dec
pop
bound
xor
mov
cmp
mov
sarl
test
cmp
add
add
add
pop
adc
cmpsb
dec
mov
jle
ss
xchg
popf
push
adc
adc
mov
std
stos
into
mov
adc
add
inc
cwtl
dec
enter
mov
lret
dec
xchg
jnp
aad
add
std
pop
popa
jg
sbb
fdivl
dec
jo
loope
dec
sahf
popa
xor
outsb
sub
lcall
pop
push
out
add
xchg
stc
fwait
cwtl
dec
enter
fistpl
mov
xor
leave
out
push
pusha
xchg
pop
out
fistps
pushf
aad
je
mov
pusha
das
ljmp
jae
sahf
jne
icebp
adc
mov
push
jg
xor
or
notl
jbe
repz
movsl
ds
lock
xor
sub
mov
out
adc
pop
out
inc
push
pop
and
push
inc
pop
fistl
add
add
jno
jbe
es
adc
enter
push
jle
mov
pop
icebp
or
mov
sbb
sbb
push
int
xlat
adc
jae
add
or
dec
dec
mov
push
pop
or
inc
xchg
sub
cmpsl
ret
xorb
lea
leave
ds
cmp
and
xor
xor
mov
fadds
xor
sub
shll
out
sbb
pop
imul
into
push
push
lahf
cmp
xchg
add
add
pop
pop
mov
adc
xor
enter
iret
aas
jb
mov
pop
lcall
insb
out
jns
negl
cmp
sti
mov
leave
stos
push
aaa
in
mov
sbb
inc
add
in
cmp
hlt
cmpb
xchg
mov
or
fwait
iret
xor
pop
in
adc
sbb
add
lcall
pop
xchg
mov
jae
lods
xor
pushf
lds
sbb
cmp
flds
je
pop
mov
loopne
sbb
sahf
jnp
out
push
inc
or
mov
mov
scas
cmp
ficompl
fdivl
xor
push
jl
inc
stos
jecxz
dec
ds
add
xchg
lods
or
sub
loope
pop
mov
fistpll
jmp
pushf
mov
mov
pop
pop
push
and
push
xor
push
lahf
ret
dec
movsb
xor
pop
int
sub
xchg
push
fcompp
sbb
in
sub
push
hlt
add
fsubrl
pop
dec
xchg
int
push
pushf
cs
pop
fnstcw
sub
insl
scas
inc
hlt
outsl
dec
mov
shl
aas
fldcw
mov
sbbl
mov
imul
dec
sbb
rol
mov
mov
pop
jns
xchg
loopne
lretw
mov
or
je
popf
pushf
dec
xor
push
jns
xor
scas
cmpsb
pop
pusha
mov
dec
ss
hlt
cmp
xchg
or
insb
imul
testl
sbb
and
int3
mov
dec
pop
insb
push
jecxz
std
test
out
ret
and
imul
daa
sbb
sub
lods
xlat
dec
sbb
addl
insb
xor
mov
jle
adc
dec
jae
pusha
sbb
js
mov
inc
inc
sub
scas
mov
movsb
dec
insl
sub
leave
pop
icebp
pop
scas
mov
imul
xchg
inc
add
das
cmp
pusha
jge
loopne
js
add
add
repnz
push
inc
mov
insl
stc
movsb
fs
xchg
jns
ja
lretw
pop
lcall
or
movsb
inc
out
insb
roll
loop
dec
sub
mov
rol
int
xor
cmpsl
cmp
lcall
push
ror
nop
lock
out
aad
fxch
ss
shll
shlb
mov
das
pop
xor
and
arpl
dec
dec
ret
mov
stos
push
pop
cli
xchg
push
cmp
jns
xor
cmpsl
mov
push
inc
stos
jl
sbb
idivl
cmpsl
jns
sbb
fcomps
push
in
pusha
js
das
sub
shll
rorb
sub
addr16
das
pop
cs
inc
add
push
and
ret
inc
sbb
pop
std
js
daa
dec
jno
and
cmp
inc
test
sti
ret
push
pop
shll
das
nop
add
test
pop
lret
scas
cmovb
mov
push
pop
fwait
shll
jo
adc
lods
xchg
ret
shrb
daa
push
mov
pop
les
xchg
or
imul
addb
ss
xchg
addr16
lods
xchg
mov
jne
mov
inc
lret
out
add
inc
mov
call
mov
loopne
or
int
and
push
add
les
das
jae
mov
out
pop
es
out
mov
test
fst
jle
mov
and
ret
and
push
or
fwait
divb
xlat
movsl
scas
lret
jecxz
fmuls
mov
and
into
xor
sub
mov
imul
sub
out
addl
je
mov
lea
lods
jmp
js
mov
test
add
jg
mov
sbb
pop
sbb
and
jl
imul
aas
or
mov
jne
enter
call
lock
rol
add
push
lock
dec
ljmp
sub
push
ror
pushf
jecxz
sbb
ucomiss
popa
jle
xchg
add
ret
and
ret
pop
or
lret
cltd
mov
divl
push
popl
xchg
sbb
dec
aaa
insb
xchg
scas
mov
push
push
loopne
sub
jmp
push
dec
inc
add
aad
pop
or
test
cli
dec
mov
xor
sub
aas
lods
dec
outsb
xor
mov
pop
jmp
imul
pop
hlt
pop
pushl
pusha
dec
push
xor
sbb
mov
xor
loope
out
movsb
xor
cmc
sbb
cmp
push
jb
mov
mov
sti
mov
or
mov
ss
mov
hlt
cmp
inc
cmc
adc
pop
mov
mov
cmp
cmpsl
mov
bnd
push
dec
aas
pop
xchg
pop
jmp
sti
ljmp
in
testl
mov
add
xchg
pop
dec
or
or
dec
movsb
and
lret
add
and
cltd
out
stos
xchg
int3
ss
push
shrb
jmp
mov
xor
nop
and
cmc
mov
popl
fisubs
popa
aas
mov
sub
lds
cwtl
iret
clc
stos
jle
xlat
cmc
jnp
cmc
fsubl
xchg
fists
das
inc
jno
sbb
xchg
dec
dec
sub
in
xor
mov
leave
pop
sbb
jl
pop
rcrb
lds
movsl
out
hlt
jbe
sbb
sar
and
xchg
clc
es
movsb
add
sbb
movsb
mov
mov
mov
pop
add
repnz
pop
ljmp
das
xlat
out
sti
aas
inc
inc
add
ret
xor
push
or
adc
inc
lea
or
clc
push
cmp
jno
inc
nop
fidivs
mov
add
fsubrl
mov
mov
scas
mov
jbe
mov
mov
ret
inc
sub
inc
test
jb
or
xchg
in
clc
out
jae
push
or
fs
mov
or
sbb
cmp
fildll
jno
pop
and
sbb
pop
mov
ss
adc
mov
dec
mov
icebp
mov
iret
fnstsw
aas
adc
jae
push
insb
push
out
jge
lods
stos
aas
es
aad
mov
into
sub
fsubrl
dec
xor
mov
out
out
jmp
outsb
jnp
mov
xchg
out
mov
sub
cmp
adc
fnop
jp
jnp
mov
mov
sub
int3
ljmp
daa
pop
mov
or
sarl
test
mov
sbb
sbb
pop
mov
fs
repz
push
jmp
jno
push
lcall
mov
cmp
sub
out
jmp
push
lahf
xchg
orl
mov
add
adc
jg
jl
in
call
arpl
jle
adc
pop
jmp
ljmp
into
pusha
jg
mov
and
sub
push
dec
cld
xor
into
pop
or
xchg
jmp
outsl
in
shrl
or
jle
iret
pop
and
cli
shr
sbb
and
sbb
jge
mov
in
or
inc
hlt
fwait
lea
jg
imull
movsb
jg
pop
push
pop
loope
shlb
sub
sbb
mov
mov
inc
cmp
popf
stos
xor
mov
dec
xlat
ja
lock
and
int
int3
flds
inc
addl
or
mov
lret
loope
test
push
mov
mov
test
mov
pop
fs
lret
xlat
popf
ss
and
cmp
cmp
fdivs
loop
lret
sahf
jl
dec
and
into
gs
mov
testl
mov
out
mov
push
pop
test
cvtps2pd
out
mov
loop
stos
mov
imul
inc
or
sub
mov
popa
pop
cmpsl
rorl
lea
ror
adc
push
out
fnstsw
movsl
lret
js
mov
jnp
sub
sarb
sar
xchg
pop
scas
mov
pusha
imul
jl
dec
pop
cmp
lock
xchg
and
mov
out
cs
movsl
push
out
xor
pop
cmp
cmp
loopne
add
mov
fnstcw
lods
inc
push
pop
dec
stos
les
adc
xchg
cmpb
mov
test
pop
ret
inc
jne
or
or
pop
in
gs
adc
xchg
pop
scas
pop
pop
sahf
scas
imul
xchg
sub
jbe
lea
mov
stc
test
iret
cld
mov
mov
sbb
fldl
shl
dec
outsl
adc
lock
mov
or
pop
jmp
mov
lcall
lret
xor
fcmovnu
cmpsb
outsb
sbb
add
and
jno
push
out
dec
fwait
jmp
sahf
xchg
out
pop
cmp
dec
and
loopne
mov
in
and
int
call
add
test
xor
enter
mov
xchg
xchg
fidivs
out
mov
jb
arpl
sbb
sbb
es
adc
cwtl
pop
and
subl
sbb
popa
movsb
push
mov
push
push
fistps
jmp
adc
les
lea
inc
bound
dec
adc
test
sbb
or
std
mov
fmull
fistpl
pushf
sbb
mov
jl
aam
mov
and
cmp
sub
mov
mov
fcomp
addr16
mov
fsubr
xchg
xchg
das
test
ja
or
mov
push
mov
sbb
lods
adc
and
ret
mov
jp
mov
enter
cmp
xchg
fwait
out
repz
lods
jge
cmp
jno
or
mov
arpl
insl
lea
mov
inc
xchg
imul
sbb
push
fdivrs
out
ss
pop
pop
mov
pushf
outsb
ljmp
mov
daa
lds
adc
es
jno
sbb
jecxz
or
outsb
roll
push
add
add
inc
cmp
ret
push
push
addr16
fists
dec
adc
adc
sub
sub
lods
int3
loopne
sub
dec
cli
imull
inc
testl
es
cmc
adc
add
mov
jp
ljmp
xchg
lret
xchg
ret
sub
jne
push
ret
mov
enter
inc
add
mov
and
iret
push
adc
xor
dec
daa
sub
outsb
jg
das
andl
and
gs
bound
fiadds
out
mov
lret
inc
rclb
ret
adc
in
sub
mov
xor
pop
bound
in
aas
and
nop
xchg
aam
mov
pop
stos
push
xchg
dec
les
dec
xchg
loopne
shrl
push
int
or
sub
arpl
inc
sbb
mov
and
dec
enter
lret
add
pop
jae
daa
mov
mov
shlb
stos
iret
outsl
dec
pop
adc
or
or
popl
xor
ret
scas
xor
mov
psubd
cmpsb
mov
jle
out
js
std
jns
push
pop
cmovs
shll
divl
add
stc
xor
aaa
jg
mov
mov
popf
push
mov
push
xor
sub
adc
in
in
rcrb
mull
sbb
lret
mov
adc
lcall
cmpsb
inc
jg
cmpl
pop
cltd
xor
pop
lahf
jns
and
aaa
cmp
nop
icebp
faddl
insl
and
psubq
idivb
and
xchg
loope
scas
dec
bound
jae
or
call
dec
or
mov
sbb
divl
sub
mov
mov
imul
xor
ds
sub
das
int
ret
fsubl
int3
repnz
pop
dec
repnz
ljmp
out
out
or
pop
xorb
fisubrs
out
xchg
cmpl
xor
cmc
and
arpl
mov
mov
mov
xchg
lds
mov
push
cmp
xchg
jle
add
or
out
insb
sub
mov
loopne
lret
and
mov
jns
add
ds
sbb
add
mov
and
add
test
pop
addl
jmp
fdivrl
movsl
sub
and
cmp
inc
out
sub
jge
aad
fildl
fwait
pop
pop
mov
push
incl
ss
iret
stos
adc
jp
mov
shl
add
xchg
fmuls
arpl
faddl
into
daa
inc
add
and
aam
fsub
push
repnz
and
jg
jo
popa
dec
xchg
mov
mov
push
or
adc
lahf
or
nop
int3
dec
out
jne,pn
inc
cmp
push
add
jecxz
sub
int3
xchg
jle
inc
xor
sbb
xchg
mov
xor
cmc
pop
sbb
sub
mov
xor
insl
xchg
clc
mov
adc
and
xchg
gs
rcrl
sub
lcall
jp
xor
jns
mov
dec
jo
xor
adcb
sbb
lahf
lods
lcall
push
mov
insl
sti
test
push
push
fucom
cmp
subb
xor
or
std
into
and
mov
mov
or
jmp
or
dec
lret
mov
insb
cmp
mov
mov
adc
lock
ret
xchg
jb
mov
jae
test
aad
jns
xchg
subl
in
icebp
inc
mov
cs
cmpl
jge
ret
adc
inc
push
jae
hlt
loopne
mov
sub
dec
out
fsubs
leave
test
or
test
hlt
adc
mov
jae
addl
and
call
into
cmp
scas
hlt
insb
xlat
xlat
and
pop
lds
mov
push
sti
arpl
test
sbb
cwtl
xchg
push
dec
orl
xor
cld
ud0
js
clc
and
sub
or
and
sar
add
xor
sub
add
inc
ljmpw
insl
insl
pop
in
inc
fidivrl
inc
lret
inc
out
nop
inc
fdivrl
dec
aaa
mov
dec
dec
lret
pop
inc
push
jge
fcoms
in
leave
push
cmp
mov
orl
fsubp
repz
iret
push
fyl2x
mov
sbb
sahf
add
lods
xor
cs
outsb
cmpsl
jo
loop
inc
push
stos
push
xor
out
imul
push
cli
lods
cs
inc
ja
or
fiadds
sbb
sahf
cmc
mov
je
push
mov
dec
inc
sbb
fbld
out
pop
repnz
sbb
ficoml
into
cmc
pushf
stos
mov
inc
ficoml
stc
aam
xchg
mov
ljmp
xor
clc
inc
mov
imul
in
cli
mov
pop
add
test
gs
into
mov
mov
dec
test
and
or
adc
ja
sub
in
mov
mov
jmp
adc
dec
mov
loopne
xor
call
test
daa
daa
les
lds
test
pop
pop
movsl
mov
push
mov
and
inc
jmp
push
in
jno
ficoml
sbb
js
pop
ljmp
pop
aas
adc
cli
pop
aad
sti
jno
lahf
or
daa
sbbl
imul
lock
fisubl
mov
pop
rolw
jmp
in
sbb
inc
jl
in
and
sti
and
lahf
or
mov
jl
pop
rcl
aam
sub
out
cli
inc
cltd
xor
xchg
sbb
insb
shl
loop
pop
sub
repz
xchg
adc
dec
bound
pop
ja
add
jns
inc
imul
cmp
jbe
and
pop
mov
jecxz
push
shrb
mov
jns
cltd
test
mov
pop
inc
arpl
mov
ljmp
das
aas
scas
adc
mov
xor
jmp
fwait
stc
les
aaa
xchg
or
aas
aas
cmp
fwait
inc
popa
lcall
data16
in
pushf
xchg
vmaxss
sar
xlat
imul
lahf
pop
adc
mov
xor
popf
sub
xchg
clc
test
stc
sbb
mov
lods
jecxz
daa
push
ljmp
iret
scas
add
push
jo
pop
std
sahf
in
scas
mov
mov
push
inc
cltd
xchg
mov
push
rorb
aas
ljmp
xor
mov
clc
sbb
movsb
stos
in
mov
mov
pop
mul
mov
sbbl
lret
cmc
sarl
push
xor
cmpsb
push
pop
pusha
jg
push
rorb
cmp
ja
sub
stc
andl
aam
lods
nop
inc
and
cli
jnp
lods
or
rcrb
sub
xchg
mov
mov
add
fsubrs
push
mov
mov
adc
dec
lods
cmp
cmp
pushf
sub
dec
aas
mov
pop
inc
jmp
add
mov
xchg
mov
pop
or
mov
xchg
or
fidivrs
pop
rorl
xchg
cmpsb
ret
lcall
ja
jmp
cld
shll
adc
pop
lcall
iret
mov
inc
pushf
mov
jo
loopne
jnp
lahf
fldcw
adc
jo
jmp
test
aam
mov
mov
adc
jg
fcomip
scas
pop
dec
stos
js
jp
cmp
push
test
push
mov
add
mov
cmp
cmp
inc
adc
jg
mov
out
or
ljmp
roll
fadd
out
and
insl
sbb
addr16
pushf
call
insl
sbb
jmp
pop
lret
popa
insl
mov
in
mov
cmc
adc
sbb
sbb
mov
nop
dec
stos
pushf
jb
sbb
cmpsb
into
mov
dec
nop
bound
xor
leave
sub
neg
or
jl
andl
sub
pop
rcrl
gs
movsl
movsl
bound
rcr
mov
loopne
fsubrl
inc
pop
xchg
test
jnp
sub
or
mov
dec
sbb
inc
or
loopne
xor
in
pmovmskb
ds
cmp
test
cmp
cmc
mov
add
incl
inc
fbstp
or
push
aas
scas
iret
int3
lods
mov
test
mov
aaa
xchg
add
in
pop
fdiv
enter
testb
mov
loopne
add
scas
sub
pop
mov
xchg
add
imul
push
into
cmp
adc
or
push
dec
outsb
xlat
cmp
addr16
cs
cli
lcall
mov
and
daa
in
mov
addr16
inc
mov
cmp
out
cwtl
lds
fstpt
pop
in
test
repz
mov
es
mov
ficoml
mov
ljmp
xor
dec
rcll
data16
and
test
jb
shlb
xchg
fwait
orl
movsb
bound
inc
push
push
loopne
stos
scas
jns
jg
arpl
or
jnp
movsl
pop
add
cmp
jmp
mov
bound
push
sub
xchg
nop
lret
sbb
inc
cmc
mov
cmc
stc
sarl
cmpsb
popa
lods
sarl
loopne
inc
mov
dec
sub
invd
or
inc
in
shll
and
xchg
or
arpl
push
lcall
xor
mov
mov
pushf
enter
and
or
xchg
into
mov
lds
outsb
test
notl
mov
mov
mov
mov
shrl
sbb
das
ret
cmp
into
fistpll
jae
push
and
and
ja
sarb
and
clc
outsl
lret
lea
dec
xchg
popf
adcb
cmp
lods
call
mov
and
orb
testl
add
add
mov
sbb
xchg
dec
ds
idivb
xchg
sub
add
sub
push
scas
mov
inc
mov
mov
sbb
add
call
mov
out
cwtl
xchg
movsl
mov
out
sub
sbb
push
ds
mov
sbb
ret
out
pusha
adc
out
and
into
fisubl
adc
test
iret
or
sub
xor
subl
enter
sbb
ret
inc
xor
dec
sbb
inc
scas
inc
lcall
mov
add
mov
test
push
fcomps
mov
subl
mov
test
and
fdivl
pop
imul
dec
cmpsl
push
stc
mov
pop
mov
sub
repnz
add
popa
dec
aas
cmp
popf
fildll
push
push
lcall
jae
dec
inc
fs
and
xchg
mov
nop
hlt
daa
cmp
sub
sbb
sti
push
ficompl
pushf
jmp
in
inc
xchg
es
in
mov
mov
sub
out
stos
ja
fsubp
out
leave
sub
xchg
pusha
enterw
push
scas
add
xchg
stos
mov
pop
pushf
xor
repz
iret
pop
lea
add
sub
push
push
arpl
xchg
adc
push
icebp
push
test
jmp
sub
xor
in
js
lods
mov
add
mov
cli
jne
dec
pop
dec
xchg
xor
xor
xchg
and
inc
push
mov
push
ss
fisubs
dec
aas
icebp
sbb
mov
mov
adc
inc
pop
mov
jno
enter
popf
cmp
mov
jecxz
jo
or
adc
ja
push
ret
inc
clc
lock
dec
xchg
inc
leave
cmp
cmp
adc
bound
adc
push
pop
pop
dec
cmpsb
rorb
sub
push
loope
loopne
ja
xchg
inc
rcl
and
or
and
sub
pusha
in
in
ja
push
iret
mov
fs
xchg
lds
fwait
scas
or
ret
hlt
and
xchg
or
or
jae
dec
popf
leave
push
cld
mov
cmp
movsb
pop
sbb
aam
into
mov
pop
add
mov
jne
std
or
inc
fwait
add
dec
dec
popa
int
jmp
cmpsb
sub
and
mov
mov
push
inc
jbe
icebp
fidivrs
mov
add
out
xchg
jp
mov
imul
jnp
jl
lods
xchg
addr16
xchg
sub
pop
aas
and
xor
mov
ljmp
test
xchg
adc
xor
jl
mov
hlt
pop
ss
ret
push
popf
divl
pop
xchg
inc
and
adc
cmp
ret
je
outsb
mov
lahf
mov
push
rdtsc
mov
cwtl
call
and
addr16
out
lods
sub
gs
movsl
pop
xchg
pop
xlat
mov
sub
lock
pushl
repz
xor
sahf
lods
pop
xor
jmp
or
sbbl
jecxz
add
out
ret
xchg
shr
loope
add
xchg
mov
push
mov
mov
push
popa
mov
popf
scas
cmp
not
cmp
push
adc
movsl
pop
in
js
cwtl
pop
fcmovnbe
test
test
addr16
mov
das
cmp
shl
mov
incl
scas
push
or
xor
xor
lea
punpcklwd
in
fisubl
fiaddl
mov
add
xchg
sarl
pop
inc
and
enter
adc
sbb
jg
dec
das
int3
cmc
cltd
mov
pop
add
ss
shll
ret
and
cmp
movsl
xchg
into
ljmp
scas
mov
lret
dec
push
pop
daa
int
test
aad
decb
sub
jne
lods
in
mov
cmp
sub
lahf
push
popf
test
popa
cs
outsl
cwtl
mov
xorl
fnstcw
bound
mov
in
xchg
jp
xchg
add
xchg
mov
jb
call
fldt
je
xchg
loope
and
mov
xchg
pusha
xchg
jle
dec
mov
hlt
and
jle
adc
inc
mov
push
push
and
sub
sbb
jnp
cmp
or
pop
std
lret
out
push
out
mov
sti
aaa
jno
sub
inc
inc
les
fdivrl
cmp
ja
mov
sbb
addl
cld
push
shlb
out
insb
loop
faddl
mov
jp
add
pusha
jmp
flds
sbb
leave
flds
xchg
sub
mov
daa
jp
jle
push
add
sub
cmpl
and
mov
or
fnstcw
aad
cmp
ja
push
rcrb
inc
clc
xor
imul
sbb
and
repnz
cmp
sbb
ja
xchg
jne
inc
dec
movsb
outsb
mov
xchg
test
icebp
bnd
pop
inc
jge
movsb
xchg
sub
or
jl
mov
or
ljmp
adc
cmp
mov
sbb
inc
inc
jbe
jae
push
adcb
mov
adcl
fists
push
sbb
mov
mov
sbb
mov
mov
cmpsl
xorl
dec
lret
and
popa
xadd
xchg
mov
mov
outsl
adc
jb
sti
jg
outsb
push
cli
jo
lret
fwait
call
dec
icebp
ss
scas
or
and
mul
push
pop
cwtl
and
jge
jg
and
insb
push
xchg
xchg
les
es
lahf
push
xchg
and
in
aaa
int3
push
xor
jb
mov
mov
fsub
insl
sub
test
xchg
mov
cmp
clc
inc
adc
and
or
xchg
lahf
fnstsw
sbbl
dec
cmp
inc
cmp
fnstsw
aas
jmp
js
fldl
mov
jmp
mov
xor
jge
xchg
rep
lods
inc
jno
out
lea
sub
loopw
pop
add
dec
lods
sub
movl
leave
mov
fwait
add
fadds
push
cmp
addb
loop
fs
push
sub
cmpsb
push
je
adc
inc
lret
cmpsl
lods
jb
and
jmp
and
adc
sahf
mov
xor
inc
mov
sbb
adc
sahf
das
mulb
imul
jo
xchg
push
cmp
mov
mov
xchg
mov
aaa
jmp
bnd
loopne
cmp
or
lea
lea
cmpsl
push
inc
push
mov
xchg
daa
loope
arpl
pop
inc
sub
cmpsb
imul
insb
test
cmp
mov
push
inc
jp
int
adcl
push
push
push
jecxz
sub
in
sar
dec
mov
jb
mov
adc
orb
es
push
ret
pop
mov
stc
mov
fdivrl
and
push
fs
jo
mov
sti
stos
sbb
add
push
out
xor
dec
pop
notb
push
jp
sub
out
push
inc
or
push
movsl
push
xor
xchg
stos
ja
arpl
fsubrs
push
cmpb
adc
inc
aam
inc
sbb
fsubp
jns
shll
xor
inc
jmp
inc
repz
sbbl
mov
fnstsw
mov
add
cmpsb
push
xlat
or
mov
int
aad
mov
and
cltd
sti
insb
jl
push
push
loope
mov
popa
out
dec
loop
out
mov
jl
repnz
pop
aam
sbb
pop
rorb
mov
or
mov
stos
mov
push
test
push
cmp
inc
in
int
enter
dec
movsb
adc
aam
mov
ret
in
or
cs
movsb
push
pop
and
xchg
push
xchg
and
mov
lret
cmp
xor
cmpsb
fimuls
jmp
ss
jns
xchg
jg
pop
das
mov
das
inc
sub
inc
clc
jge
cli
subl
inc
scas
in
enter
cli
xchg
xor
int
out
pop
dec
lret
jp
out
mov
xchg
dec
push
ds
movsb
lods
dec
nop
inc
xchg
xor
cmpsb
mov
xor
push
adc
inc
lret
mov
xchg
jmp
cmpsb
push
ficoml
xor
out
int
jns
xchg
add
aas
pusha
mov
ret
sbb
in
and
out
mov
add
imul
cli
mov
lods
push
pop
lock
dec
test
push
ljmp
jne
jge
xor
js
or
adc
sbb
jg
test
and
pop
ja
ja
jl
add
dec
mov
mov
loope
dec
mov
shll
xor
bound
mov
inc
or
ret
pop
push
pusha
push
scas
or
sarb
ljmp
sbb
pop
mov
mov
lret
pushf
ss
aaa
mov
orb
xor
shlb
and
cwtl
pop
cwtl
out
dec
lret
shl
fmuls
xchg
pop
xchg
mov
inc
cmp
ljmp
incb
hlt
cmpsb
and
daa
lcall
sub
test
sbb
xor
es
inc
xor
mov
xchg
das
imul
insb
pop
iret
enter
mov
fsubrl
mov
xchg
dec
lea
fs
mov
cld
outsb
mov
sahf
jmp
int3
xor
loop
xlat
mov
inc
mov
adc
sbb
xor
mov
push
test
pop
pop
inc
sub
jae
pushf
sbb
ja
shrb
cld
sub
aam
imulb
jmp
test
dec
leave
dec
rolb
xchg
add
push
fadds
mov
ljmp
xchg
adc
int3
ja
jno
sub
imul
enter
xor
mov
xchg
mov
mov
out
mov
js
test
lea
aaa
lods
repnz
das
dec
outsb
jl
mov
mov
xchg
add
incb
xchg
mov
sti
inc
nop
das
cmpsb
ljmp
scas
ret
dec
insb
mov
dec
rcll
ss
add
jbe
fistl
cli
mov
aaa
ljmp
sbb
jbe
xchg
popa
push
push
aaa
sbb
inc
mov
mov
pusha
xchg
and
dec
mov
push
enter
decl
cmp
shll
sub
rorl
sub
fisttpll
jnp
cmp
mov
jne
fwait
inc
push
mov
push
fwait
sub
cmpsl
cmp
lods
clc
jns
insb
rolb
pop
loopne
popf
mov
fcompl
push
xchg
mov
add
inc
sub
stos
shrb
add
call
mov
data16
xor
es
inc
cli
xchg
push
ljmp
xchg
mov
iret
out
xor
into
or
xchg
inc
dec
or
inc
sti
fcomps
movsb
or
out
mov
cmp
mov
jae
lods
jne
je
dec
call
test
cmpb
je
jmp
popa
insb
xchg
adc
push
pop
and
or
mov
in
lea
mov
fistps
loope
dec
mov
in
popa
xor
test
imul
add
push
inc
fnsave
ficoml
jb
cmpsl
out
test
mov
mov
mov
pop
ja
das
sub
dec
sbb
jns
pop
pop
or
call
cmp
xchg
ret
cwtl
adc
mov
mov
sahf
aam
nop
inc
xor
pusha
or
mov
sub
xor
inc
idivl
jno
jo
cmp
movsb
movsb
pushf
xor
push
cmp
sub
adc
je
scas
fmull
out
or
shlb
in
fsubl
dec
clc
cmp
or
xor
dec
fs
or
mov
cmp
dec
ljmp
btr
popa
or
gs
sahf
sbb
jns
add
mov
push
jp
test
ds
pop
insb
dec
cmp
dec
xchg
sbb
psubusw
dec
cmpl
ljmp
add
lret
jle
jmp
xor
into
lret
sahf
sbb
jecxz
sbb
xchg
and
and
test
js
jbe
nop
ds
push
lcall
adc
out
push
mov
add
or
mov
xchg
mov
clc
into
imul
stos
fs
mov
into
jns
iret
inc
fs
ret
adc
xchg
lret
sub
and
sbb
mov
fcoms
pushf
test
mov
rolb
cmp
popa
scas
test
shl
mov
iret
mov
inc
cmp
mov
jle
hlt
in
fs
mov
aas
clc
add
push
movsl
add
fwait
out
pop
and
sub
sub
xchg
ss
jns
icebp
push
mov
sbb
mov
adc
cpuid
bound
jge
xchg
inc
pop
push
adc
xor
mov
rorl
sti
icebp
push
jbe
stc
lock
cmp
fadd
pop
mov
jge
lret
sbb
push
mov
inc
mull
jne
pop
call
daa
out
jb
mov
lds
sub
aad
cs
jae
sub
add
sti
cmp
adc
mov
fmuls
aas
pop
add
dec
add
repz
mov
shlb
icebp
xchg
adc
xchg
mov
pusha
repz
rorl
stos
or
inc
mov
stc
int
lret
pop
xor
test
lcall
sbb
ret
or
add
xor
xchg
test
push
cs
mov
sbb
pop
mov
ds
lea
lret
addr16
lret
nop
jge
or
push
ficoms
inc
rcl
mov
adc
mov
cmpb
mov
imul
mov
cli
in
lods
inc
and
adc
pusha
sahf
push
adc
sub
xchg
jg
cmp
mov
cmpsl
pop
or
imul
stos
cs
add
std
pushf
pop
ds
sbb
rclb
rclb
adcb
stc
sub
push
sbb
fbstp
int3
ljmp
jle
add
stc
aaa
dec
popf
jecxz
popa
fs
add
push
sub
les
xor
or
test
add
fnstcw
push
mov
adc
xchg
fstps
xchg
in
and
daa
mov
mov
sub
add
shrl
iret
push
ljmp
lock
inc
fcmovbe
lock
and
mov
rcrl
leave
clc
mov
fsubr
xor
add
lods
adcb
push
lahf
sub
loop
or
push
cmpsb
push
lods
xchg
jmp
lcall
fimull
arpl
cmp
push
pushl
xchg
pop
lock
pop
lea
mov
rcrl
or
pop
pop
int3
sub
or
jae
cwtl
push
jecxz
xchg
stos
and
cmpsb
icebp
mov
dec
icebp
fistps
add
sarl
pop
addr16
jmp
sub
and
inc
fwait
xorps
call
mov
xor
orl
fisttps
jecxz
fisubrs
jnp
test
and
pop
add
cmp
dec
jne
fildl
lahf
int
pop
ficompl
les
hlt
add
xor
pop
popf
iret
cmp
mov
xor
push
ljmp
out
and
stc
jg
push
enter
cmp
fucompp
imulb
and
mov
mov
imul
mov
xchg
cmp
adcl
dec
mov
mov
scas
and
fsubrs
mov
push
and
mov
test
js
testb
and
and
pop
lods
out
imul
jb
lock
in
cmp
jne
or
ss
gs
dec
add
out
push
mov
add
je
jb
mov
je,pn
lahf
fnstenv
ds
mov
std
dec
call
adc
fiadds
imul
into
repnz
addr16
repz
cmp
loopne
outsl
mov
add
xchg
cli
sub
sub
sub
test
dec
daa
mov
mov
mov
jmp
aas
arpl
xchg
xor
outsl
outsl
xor
add
jl
dec
popa
pop
sub
stc
xor
rcr
and
insl
aad
xlat
mov
inc
gs
aam
call
aas
shl
lea
test
dec
sbb
cmp
mov
pushf
fimull
rorb
gs
pop
das
push
addl
and
push
jno
inc
sub
movsb
fiaddl
sbb
cmp
adc
sbbl
sbb
pop
mov
push
or
jp
rorl
aad
int3
bound
fninit
in
insl
stos
jp
or
mov
push
xchg
xor
ljmp
sbb
popa
push
cmp
push
push
out
shrl
lods
cwtl
add
add
add
test
mov
aam
pop
pop
push
das
ja
adc
lret
pop
in
subl
insb
sub
fsubrl
push
sub
xchg
jb
loope
aad
sbb
dec
dec
jae
inc
fistl
les
sbb
add
roll
add
and
inc
inc
fldcw
pop
bound
pop
xchg
out
jns
in
das
and
add
pop
aam
scas
mov
push
movsb
lock
cltd
aaa
push
andl
int3
inc
cld
mov
int
adc
and
clc
mov
mov
or
dec
add
cmp
rorl
out
sbb
mov
cltd
shrl
sub
push
popf
jl
ds
out
lret
cmpl
stc
jb
push
mov
sub
aam
push
into
or
scas
fs
cmp
addr16
fildl
out
sbb
aas
push
daa
mov
arpl
cmp
lar
jnp
mov
mov
sub
out
jbe
xchg
cli
fcom
adc
push
adc
push
stos
loopne
mov
mov
notb
jmp
popa
mov
in
stos
sbb
out
in
cs
cmp
pop
inc
hlt
xor
mov
push
dec
mov
fidivrl
mov
pop
fimull
mov
lcall
jp
fs
cs
mov
adc
sbb
mov
jge
pusha
mov
push
xor
jbe
and
cltd
mov
int
addb
jbe
inc
sbb
push
cmp
and
dec
imul
lods
shr
pop
pop
jbe
sub
lcall
sbb
mov
cmpsl
lcall
adc
xlat
adc
fwait
mov
sbb
or
gs
dec
cltd
std
mov
xor
shll
pop
enter
pop
add
leave
inc
stc
cmp
daa
imul
adc
dec
lods
cmp
fnstsw
ljmp
or
ret
std
orl
call
sub
fcompl
mov
inc
adc
push
js
enter
mov
cwtl
scas
and
int3
dec
ljmp
fsts
and
popf
notb
mov
sahf
aad
or
shl
sub
repz
call
loop
test
and
stos
hlt
jl
push
mov
jbe
xchg
push
jbe
out
bound
jno
inc
add
cli
xorl
sub
sbb
or
ds
jae
xor
add
sub
or
sbb
test
jl
outsl
stos
int
xchg
inc
inc
jnp
jo
sub
fidivl
test
fwait
add
stc
insb
xchg
lahf
xorl
cmpb
add
lret
adc
jmp
stc
xor
fsubl
or
cli
mov
leave
sbb
mov
call
push
mov
jecxz
pusha
and
in
cli
cmp
jecxz
xchg
loopne
mov
mov
cmp
lods
bound
lret
mov
pop
pop
mov
ror
iret
rcl
les
pushf
dec
outsl
or
add
sbb
inc
hlt
inc
jo
movsb
outsl
sbb
loop
aas
mov
std
test
repnz
pop
fdivrs
pushf
mov
jne
adc
pushf
out
es
mov
lret
xor
cmp
aam
lcall
xchg
ret
call
jecxz
outsb
out
insl
xlat
sub
test
adc
add
fwait
dec
mov
or
cmpsl
negl
scas
xor
inc
in
cmpsb
jb
mov
insb
mov
or
repnz
mov
adc
xor
jnp
pop
or
cld
decb
outsl
jmp
xchg
add
pop
inc
jge
mov
pop
scas
and
adc
inc
nop
out
mov
inc
xchg
in
test
je
data16
jb
in
jns
mov
movzbl
out
imul
jae
stc
lret
hlt
je
cmp
mov
xchg
shlb
stos
mov
mov
jl
in
insl
les
adc
push
inc
ss
push
imul
mov
daa
xor
enter
pusha
orb
push
add
lods
dec
xor
outsl
mov
push
in
mov
push
push
jle
push
adc
jbe
and
lret
test
add
cli
repz
lcall
bound
mov
xor
lcall
cmpsb
xabort
add
xlat
test
adc
fsubs
adc
movsb
out
in
jl
and
cmp
jb
pop
cmp
push
push
add
scas
cs
jb
mov
icebp
mov
sbb
dec
and
and
into
rclb
adc
xor
xchg
fmulp
cld
lods
push
jge
outsb
sub
xor
adc
mov
jl
outsb
daa
out
xchg
inc
xor
dec
xchg
mov
adc
pop
mov
cmc
aas
xchg
aad
push
jne
sti
std
cld
daa
mov
fdiv
jb
or
in
cltd
xor
add
cld
sbb
adc
pop
pop
subb
lods
movsb
lods
push
xor
xor
sub
in
orps
inc
rclb
out
test
fldcw
adc
adc
fstps
adc
cmpsb
xorl
testb
mov
stos
fldl
inc
pop
ret
into
push
lds
xor
fxch
adc
mov
js
jo
add
inc
aaa
cli
mov
pop
sub
push
add
mov
jle
fwait
loop
sbb
mov
pop
pusha
adc
mov
test
pop
test
popf
dec
es
nop
push
mov
fisubl
stos
and
push
inc
mov
sub
subb
ss
loopne
push
adc
cmp
rcll
mov
jo
push
xchg
cmpsb
addl
dec
mov
add
hlt
ljmp
das
in
sti
subb
sahf
aad
je
test
push
into
mov
adc
ljmp
pushf
xor
mov
ret
inc
subb
mov
ljmp
movsl
dec
and
add
mov
mov
fwait
test
fsts
add
cmp
add
sbb
cmp
test
inc
ret
inc
adc
repz
push
mov
outsb
dec
ss
test
jno
leave
mov
fimull
jo
add
add
mov
fbld
sub
icebp
pop
imul
and
jge
sti
stos
sbb
fdivp
xchg
fs
sbb
fcmovb
jae
mov
xor
out
pusha
roll
dec
add
roll
fucomi
cwtl
out
cld
mov
pop
mov
insb
adc
movsl
mov
dec
call
add
xor
fcomip
insl
mov
pop
js
or
cmpsl
push
insb
fcoml
loope
movsl
mov
loope
aas
push
aam
popa
in
adc
mov
insl
add
mov
in
rcrb
xor
adc
push
jle
fwait
mov
push
push
ja
mov
lods
sbb
pop
jo
pop
inc
ds
popa
notb
cmp
repz
jp
loopne
adc
push
loope
mov
xchg
xchg
or
add
inc
sub
inc
or
int3
shll
mov
aaa
adc
xlat
incl
pop
inc
inc
mov
or
or
or
lahf
adc
cmp
jo
mov
ret
popa
decb
sbb
lds
pop
jle
cwtl
inc
setnp
push
push
xchg
fisubl
cmp
lods
ja
scas
mov
fistpll
pop
sbb
mov
inc
xchg
push
fidivs
and
lret
mov
cld
cmpsl
jb
rclb
fisttps
push
mov
dec
lods
xchg
out
pop
adcb
fimull
bound
add
xchg
icebp
mov
jb
add
dec
imul
and
es
add
mov
iret
mov
cmc
testl
pop
lds
inc
hlt
jns
sti
icebp
adc
xchg
jns
fmuls
inc
push
es
xor
test
fisttpll
pop
fsubl
cmp
aaa
fistpl
cmp
xor
lea
rorb
outsb
push
or
xor
leave
popa
cmp
jle,pt
adc
ret
mov
hlt
jecxz
adc
clc
fwait
add
mov
pop
jp
arpl
aas
cmp
adc
push
xchg
and
add
push
pop
aam
mov
xchg
push
into
or
and
add
or
mov
cmp
or
mov
dec
dec
outsb
ds
pop
scas
fiaddl
cmp
add
call
movsl
xor
testl
add
lret
fwait
push
in
das
shrb
ds
rol
out
clc
xchg
clc
cmpsl
fistps
cwtl
clc
and
insl
lea
shl
dec
into
mov
test
xlat
pop
repnz
adc
pusha
inc
insb
mov
mov
cmpsl
out
popa
into
data16
inc
inc
xchg
repz
sbb
dec
jp
sbb
mov
xor
loopne
pusha
das
dec
jb
pop
dec
or
adc
mov
push
cltd
jbe
xor
xchg
mov
xor
call
das
loope
pop
aad
fmull
pop
ret
sub
push
or
aas
adc
in
pop
movsb
inc
jmp
call
inc
fwait
addb
xorl
xchg
fidivrl
jbe
mov
mov
pop
pusha
les
mov
sbb
insb
stos
push
das
jge
lods
xchg
mov
les
cmp
pushf
mov
xor
add
rcll
syscall
mov
int
testl
push
aaa
movsb
add
push
push
push
mov
dec
mov
adc
fistpll
shlb
nop
push
mov
gs
dec
or
lret
xchg
cs
mov
imul
pop
sbb
push
mov
cltd
xor
dec
loopne
cs
add
sti
adc
pop
aaa
add
iret
jbe
add
cmp
mov
les
jmp
in
dec
cmc
shrl
lods
stos
inc
xchg
sbb
int
jmp
outsl
cmp
xchg
cmpsl
cld
sub
or
jno
mov
xchg
jl
adc
gs
or
imull
and
int3
sub
dec
lahf
and
dec
out
adc
and
jo
popa
les
lret
cmp
xchg
repnz
cmc
scas
enter
push
cld
jl
sarl
push
arpl
or
mov
rorb
pop
push
out
jne
loope
push
aas
popf
jg
cmp
push
mov
add
stos
mov
ss
repnz
xor
lcall
mov
fldenv
dec
stos
inc
loopne
jnp
stos
ja
fs
ljmp
adc
adc
mov
xchg
cmp
pop
mov
push
fnstcw
dec
pop
rorl
cmp
add
fwait
inc
push
lret
mov
jmp
mov
pop
lods
push
inc
dec
push
std
cmpsb
jae
icebp
int3
and
sub
outsl
stos
daa
fisttps
iret
nop
ja
ret
out
mov
lahf
loope
xchg
or
cmpsl
ss
cmpsl
sbb
pop
jo
loope
and
pop
loop
daa
ret
cmpsb
xlat
stc
mov
out
or
cmpsb
call
cwtl
push
xor
mov
jne
or
jne
mov
pop
fsubrl
cmp
mov
add
push
cwtl
push
mov
bound
dec
sbb
fisubs
jo
pusha
cmp
idiv
or
pop
dec
pusha
pop
xchg
shlb
dec
mov
jmp
fmul
push
bound
je
cmpsl
cs
clc
xor
lods
ljmp
subl
psraw
jno
xcrypt-cbc
cmpsl
push
push
addr16
inc
movsb
push
sbb
xchg
decl
pop
sbb
test
sub
mov
lret
orb
xchg
mov
cld
sahf
rol
fsubs
orb
addr16
pop
push
and
mov
jo
add
sub
dec
call
sub
sbbl
ljmp
mov
ljmp
sub
sbb
popf
inc
jns
dec
sub
mov
gs
inc
cmp
out
mov
imulb
add
mov
adcl
dec
lea
fyl2xp1
jne
and
jp
cmp
popa
xchg
cmp
scas
xchg
in
jnp
mov
jns
call
mov
inc
push
daa
and
cmp
xor
imul
rcrb
fisubs
xchg
cs
jno
add
dec
push
push
addr16
in
inc
movl
addb
aam
shll
jecxz
ficomps
ss
xchg
hlt
into
pop
scas
xor
es
xchg
push
jp
pop
dec
mov
jle
fisubs
fs
stc
insl
push
push
mov
sub
and
adc
aam
ja
adc
ret
lcall
sarl
pop
jnp
out
dec
cmp
cmp
clc
pop
std
jo
loop
jnp
cmc
pusha
xchg
imul
gs
pop
dec
push
sub
and
mov
leave
mov
xor
arpl
fnstsw
mov
add
loop
loop
mov
push
fnsave
sarb
lods
push
mov
mov
test
into
ja
sbb
pop
mov
jle
mov
lods
xchg
ljmp
fildl
and
dec
and
cmp
clc
aaa
jns
stos
jo
jge
divl
jo
mov
or
sbb
shlb
sbb
loopne
movd
cli
push
lock
sbb
xor
pop
lcall
dec
push
mov
push
out
lods
out
mov
lahf
mov
cltd
xchg
aas
xchg
sbb
test
jbe
cmpsb
icebp
xchg
jno
iret
cs
jns
sub
pop
pop
sub
and
or
and
jge
mov
push
into
popa
dec
jne
mov
roll
dec
add
daa
xor
cld
sub
iretw
stos
arpl
out
ljmp
loop
mov
push
or
or
cmp
jge
inc
imulb
icebp
popf
xorb
fisubs
dec
pop
sbb
inc
adc
xchg
dec
or
dec
lret
dec
mov
fiadds
stc
sbb
in
pusha
mov
push
lahf
imul
orl
xlat
xlat
mov
outsb
mov
dec
xor
pop
decb
lods
aam
pusha
insb
leave
in
jb
mov
inc
fs
ljmp
rorl
xor
loopne
mov
negb
pop
push
clc
jno
stc
fldln2
dec
sbb
xor
jecxz
popa
sub
add
nop
xchg
pushf
cmc
test
jmp
or
add
sub
ret
loopne
or
pop
add
imul
mov
pushf
adc
add
add
decb
adc
shll
aaa
dec
sbb
sbb
pop
or
into
pushf
shr
mov
jns
push
lret
clc
xor
mov
sbb
aas
jl
push
sub
out
push
and
mov
pop
or
adc
jb
and
ja
mov
fdiv
call
std
jns
int3
jb
addr16
pop
sbb
mov
sub
mov
sahf
xor
lds
movsl
movsl
adc
shll
out
jno
ficompl
dec
test
mov
sbb
mov
gs
aaa
ljmp
mov
rol
xchg
sarb
dec
xchg
mov
sbb
out
shlb
mov
jge
repnz
pop
mov
andb
nop
dec
fisubl
and
add
inc
ds
das
cs
and
sub
sti
fimuls
push
testb
jecxz
fisttps
mov
xchg
add
test
and
es
pop
xchg
insl
addr16
sbb
aad
test
adc
ja
or
inc
pop
arpl
and
sbb
in
outsb
rclb
and
mov
jg
and
in
xor
push
lret
int
jb
push
inc
inc
mov
mov
sbb
jg
mov
das
xor
lds
fs
test
xchg
inc
and
pusha
pop
push
add
clc
adc
dec
sbbb
std
loop
inc
rcll
repz
out
arpl
xchg
das
xchg
gs
mov
test
insl
sub
jns
mov
or
scas
add
push
cltd
jne
dec
cwtl
jle
jns
fldt
cmp
mov
xchg
lods
cmpsb
cwtl
cld
fidivs
lock
pop
push
or
mov
jb
shl
jl
adc
push
mov
and
in
mov
sbb
sub
jae
orb
das
shlb
and
lahf
adcl
lds
mov
lret
mov
add
out
loopne
int
push
and
ffreep
cmpsb
rcrb
adc
sub
movsb
lea
jnp
cmp
stc
pushf
lcall
mov
adc
aas
loop
jge
and
lret
leave
jmp
and
mov
jmp
inc
lock
add
sbb
aaa
push
addl
ljmp
hlt
xchg
and
fldt
mov
sahf
pop
cmpsb
aas
test
jbe
les
or
mov
cld
ret
ret
into
adc
push
leave
dec
dec
repz
xor
adc
sti
jns
enter
mov
cld
rorb
test
fwait
subl
repnz
sub
dec
lock
add
sub
or
test
sbb
sub
loopne
adc
jb
mov
xchg
fwait
xor
push
mov
and
stc
testl
dec
mov
pop
movsb
add
unpckhps
inc
lahf
inc
sbb
adc
outsl
stos
mov
xlat
jg
adc
ss
mov
das
inc
outsb
cmpsl
loopne
aas
loop
push
std
lods
in
push
pop
shrl
loopne
xlat
in
pop
repz
roll
and
sarb
mov
mov
pop
adc
xchg
push
out
push
sbb
adc
das
sub
pop
cmpsl
add
mov
decb
push
test
lods
push
push
adc
mov
into
popa
repz
jne
pop
aad
inc
xor
sub
fs
dec
sub
fdivrl
cld
sub
jns
daa
dec
mov
push
test
dec
jb
jmp
mov
notl
push
dec
adc
add
fisttps
pop
cmp
fildl
push
mov
cmpsl
repnz
xchg
imulb
je
cmp
in
hlt
jbe
mov
lea
mov
push
mov
jle
mov
aas
arpl
sarl
mov
push
mov
jl
sub
add
push
xor
mov
js
fsts
outsb
or
push
out
or
mov
insl
mov
mov
ror
cld
mov
mov
or
icebp
outsb
push
imul
out
xor
jp
xchg
push
inc
xor
push
ret
je
arpl
xchg
ss
jbe
push
into
in
sahf
ljmp
adc
iret
int3
jg
jle
sbb
push
out
or
outsl
sub
in
cmp
fisubrl
ds
fldt
push
testb
in
mov
jnp
cmc
lcall
jo
lea
into
fisttpl
dec
adc
imul
or
pusha
cmp
out
mov
sbb
data16
jp
add
sbb
rorl
fdivrs
push
jne
jecxz
stc
push
adc
divb
mov
pop
mov
mov
fisubrl
inc
mov
cmc
dec
je
jbe
xchg
or
xchg
arpl
lds
dec
mov
dec
xchg
and
daa
mov
lcall
sahf
pop
xchg
into
fmuls
in
insb
pop
xor
xor
mov
into
std
je
inc
mov
xor
xor
push
scas
repz
movsb
mov
out
andl
mov
mov
add
xchg
push
int
stc
jge
adc
xchg
daa
psrad
rcrl
mov
subb
loope
pop
in
popf
lods
or
mov
or
push
cltd
xchg
push
xor
and
nop
pop
into
lahf
outsb
inc
cmp
aam
ljmp
shl
roll
lahf
adc
cs
or
jb
mov
mov
xor
shlb
int3
fsubl
leave
mov
pusha
rcll
mov
jp
mov
call
adc
mov
add
mov
adcb
xor
lds
sahf
pop
pusha
sbb
pop
pusha
hlt
sbb
jae
mov
popf
fwait
lahf
xchg
jnp
js
lock
mov
les
mov
lods
nop
fdivp
popf
nop
ljmp
out
aas
into
pop
icebp
add
mov
inc
out
pop
test
adc
cmpsl
lahf
lret
mov
hlt
scas
ror
lods
jbe
add
mov
mov
mov
lock
lock
test
push
dec
and
repz
adc
add
nop
xor
andl
xchg
dec
sub
dec
push
repz
cltd
mov
jl
jg
fsubr
sarl
cs
inc
dec
test
test
dec
int
dec
icebp
inc
popf
xchg
sub
in
js
mov
enter
and
fstpl
out
ljmp
js
xlat
cltd
or
cli
jb
enter
adc
sbb
repnz
aaa
mov
std
aas
aas
into
inc
popf
or
int3
inc
mov
cmpsl
mov
cld
adc
and
mov
ds
fwait
orb
xchg
gs
pop
enter
adc
jo
cs
push
scas
xor
fcompl
in
xchg
jnp
add
rcll
mov
and
or
fdivr
iret
xchg
sub
mull
xchg
jno
mov
sti
outsb
fisubs
sub
out
xchg
aaa
dec
nop
pop
ficoms
fdiv
shll
in
push
leave
js
aas
xchg
jge
cmp
fcompl
xlat
out
cli
sahf
subl
aas
movsb
push
jbe
xchg
ss
inc
push
adc
mov
add
cmp
mov
mov
jns
rcr
and
mov
insb
test
fsubr
cmpsl
loop
lret
shl
mov
cmp
bound
dec
in
inc
inc
and
and
inc
dec
sbb
add
adc
jp
add
lret
mov
dec
dec
lea
sbb
pop
lahf
adc
leave
cmp
and
mov
push
cmp
fucomp
sti
mov
dec
pop
movsl
adc
jmp
imul
lahf
test
lcall
lahf
ror
cmpsb
jae
mov
imul
mov
scas
mov
xor
paddw
mov
clc
fidivs
adcl
xchg
cwtl
jb
sbb
inc
bound
fcoml
les
or
mov
imul
imul
into
pop
sbb
mov
cmp
fildll
mov
pop
or
pop
test
dec
and
insl
jno
test
push
xor
faddp
lods
aas
shlb
fistpl
fisubrs
in
sbb
lds
lcall
xor
jns
popa
jmp
clc
clc
gs
inc
je
jnp
in
sti
fcoms
adcl
or
aam
push
call
sbb
adc
xchg
pop
subl
cmp
stos
addl
cmpsl
mov
jmp
push
lret
and
jb
scas
outsl
mov
inc
inc
xchg
cmp
add
push
mov
add
fstps
and
pop
out
lret
movsb
or
or
cmpsb
das
mov
adc
dec
fs
dec
scas
xchg
ss
or
int3
mov
mov
imulb
sbb
xchg
mov
repnz
loop
dec
aad
inc
pop
sbb
lret
jne
cmp
shl
cmpsb
in
and
out
addr16
aad
test
cli
pop
pop
pop
fs
push
sub
out
mov
dec
mov
clc
pop
bt
int3
mov
scas
mov
loope
push
mov
mov
cld
sahf
lods
rcll
pushf
inc
and
les
add
jmp
cmp
hlt
push
out
xchg
pop
jg
lea
xchg
inc
test
push
cwtl
notb
sub
je
out
cmpb
loop
xor
sbb
push
adc
cmp
jp
mov
jnp
sub
or
cli
pop
femms
insb
cmp
or
stc
clc
add
daa
test
cld
lret
orb
mov
cmc
arpl
mov
ret
ds
mov
and
ss
push
daa
lcall
inc
adc
mov
rcrb
ret
fs
adc
add
movb
lds
icebp
push
int3
mov
ficoms
cmp
add
or
lret
out
pop
inc
jecxz
in
and
mov
icebp
lahf
lcall
adc
sbb
xlat
mov
fmuls
jnp
loop
jno
jno
aas
jnp
pop
xor
sbbl
jbe
fildl
rorb
mov
jne
add
inc
lods
inc
ds
add
std
jmp
push
sub
sbb
outsb
bound
idiv
repnz
mov
or
pop
daa
bound
mov
out
xor
shll
movsb
mov
add
cmc
or
movsb
popf
xor
pop
and
pop
mov
push
and
std
cld
mov
je
lea
or
outsb
in
sbb
cs
data16
xchg
pop
decb
negl
fs
mov
xchg
aad
xor
ret
mov
mov
inc
inc
xchg
push
movsl
push
ja
sbb
push
fwait
push
imul
es
pop
ds
inc
pop
add
ficomps
cvtps2pi
fmuls
mov
xchg
pop
adc
inc
xorb
and
or
pop
mov
and
scas
push
int
stc
pop
sbb
mov
jmp
add
mov
insl
pfadd
cmp
or
mov
push
xchg
and
shl
cmpsl
and
stc
inc
in
and
dec
jmp
rep
xchg
jbe
es
aaa
sub
adcb
pop
cmp
rcr
mov
divb
cmp
pop
or
push
and
data16
pmulhw
cmp
sbb
loopne
rclb
add
mov
xor
bound
or
in
mov
in
call
rcrb
adc
push
je
repz
bound
xor
inc
lcall
pop
imull
sub
xchg
lea
mov
push
repnz
xor
outsl
xchg
xchg
sub
je
popa
sti
mov
mov
clc
xchg
mov
sbb
add
mov
fcmovb
fcoml
xchg
push
pop
lahf
mov
dec
sbb
dec
or
lods
scas
pop
mov
fsincos
inc
push
scas
into
jle
mov
lcall
mov
xchg
push
xor
aas
cmpsb
rclb
iret
inc
xchg
xchg
int
into
sub
push
sbb
xor
test
or
mov
outsl
xchg
mov
add
int3
iret
addr16
data16
imul
or
sar
dec
sbb
loopne
sti
insl
inc
arpl
push
push
out
mov
add
cmp
pop
out
out
sub
push
aad
cmpsl
mov
outsb
movsb
in
lret
jg
iret
jmp
aas
adc
popf
add
cmp
xchg
sahf
jle
and
xor
loope
push
cmp
xor
cld
push
add
lcall
lock
inc
dec
popa
dec
xchg
dec
daa
cmp
cmpsb
dec
sbb
in
mov
imul
xor
das
mov
lret
xchg
inc
cli
mov
xchg
addr16
popl
jo
mov
and
pop
stos
int3
xchg
dec
push
sarl
mov
pop
cld
cwtl
popa
inc
push
xor
in
mov
dec
addr16
sbb
in
cli
add
mov
movsb
or
shll
lret
cli
fistl
sti
jno
cmp
add
push
jae
or
pop
das
repnz
jle
mov
in
or
mov
push
or
lcall
jecxz
outsb
or
repz
popa
scas
jb
mov
pop
push
xor
lahf
push
jle
mov
ja
and
sbb
arpl
dec
stos
jl
lcall
jno
sbb
stos
jge
ficomps
jecxz
ja
cwtl
fadds
insl
dec
inc
sub
adc
cmpsb
insl
dec
mov
in
stc
mov
lds
mov
mov
sub
adc
popf
push
cwtl
mov
xor
pop
xlat
insb
xchg
push
fstpl
mov
test
cwtl
adc
insb
jb
imul
xchg
mov
lret
lods
adc
sub
cmp
mov
in
imul
pop
fldl
stos
mov
add
adc
add
mov
add
lahf
sti
pop
jo
test
adc
inc
or
push
jbe
pop
sbb
or
jne
jb
test
jp
mov
inc
lods
test
fwait
or
int3
cmp
or
xchg
xor
in
gs
popa
test
das
loop
xchg
push
outsl
cmc
sti
loopne
mov
inc
je
add
push
xor
push
cmp
push
dec
and
cs
jo
mov
loop
mov
cmpl
adc
aaa
jo
shlb
jnp
sub
xor
pop
das
xchg
outsl
sub
jbe
into
aaa
ret
out
jne
cmp
sbb
xacquire
adc
pop
dec
scas
test
lock
sbb
xor
mov
inc
inc
jb
mov
pusha
xchg
add
mov
jge
inc
xchg
jbe
jmp
pop
insl
test
rolb
fmuls
imul
jnp
inc
xor
pop
and
or
or
lds
mov
insl
adc
cmp
jg
add
pop
int
sti
dec
mov
nop
fs
cld
imul
fnstenv
loope
push
xchg
add
cld
pop
aas
enter
lods
and
mulb
or
je
pushf
adc
outsl
add
mov
imul
cmpsl
mov
inc
jg
fistps
lcall
sbb
loope
scas
push
mov
imul
xor
dec
mov
mov
ret
or
mov
xlat
popl
imul
push
jae
or
add
sbb
pop
push
inc
pop
mov
xor
out
outsl
shr
fisttpl
jmp
inc
dec
cmp
and
das
xor
movsl
fwait
cli
mov
sbb
loop
insb
sub
cs
mov
bound
sbb
or
jno
push
mov
mov
das
xor
ss
pushf
clc
lcall
inc
mov
int3
adc
fcompl
arpl
cmpl
mov
sbb
jns
mov
or
out
scas
sub
int3
rcll
cmp
daa
fistpll
or
stos
dec
int3
stos
dec
pop
mov
dec
call
pop
and
pop
lahf
or
mov
jbe
jbe
add
fisttps
xchg
lock
adc
out
mov
sub
mov
out
mov
sarb
stos
push
arpl
movl
or
adc
mov
fcompl
sub
xor
mov
push
enter
sti
pop
jnp
jl
or
mov
es
push
xor
shl
mov
cmp
mov
adc
pop
rcrb
push
push
mov
lea
push
insl
mov
popa
lahf
or
add
subb
stc
adc
mov
mov
sahf
cld
jbe
xlat
int
mov
arpl
sub
sbb
test
mov
rcll
inc
dec
inc
jo
add
imul
xchg
rcr
or
sub
sbb
mov
ret
mov
jnp
push
fistps
aam
gs
repz
out
sbb
xchg
cmpsb
cld
mov
dec
scas
mov
or
mov
inc
outsb
popa
inc
cmc
cmp
adc
push
lret
mov
lock
popa
stos
xchg
movsb
repz
dec
dec
adc
mov
and
stos
js
leave
js
push
mov
bt
stos
adc
mov
ret
xor
jns
in
popa
scas
inc
and
addb
testl
cmp
dec
lahf
inc
lahf
adc
cmp
jno
mov
dec
cmpsb
nop
sbb
mov
xor
push
enter
movsb
idiv
ror
adc
ret
jl
jae
cltd
in
pop
adc
or
lods
shlb
sub
xlat
adcb
push
fildll
mov
stc
adc
dec
cmpsb
or
cli
bound
mov
outsl
js
ja
xchg
push
xor
adc
movsb
dec
mov
and
lret
push
std
cmpsl
jg
inc
ss
mov
xor
lret
pop
add
rcl
jg
cmp
push
cwtl
popf
jmp
mov
cmp
addr16
aas
sub
mov
cmc
jo
sahf
jbe
pop
lcall
leave
sub
xor
mov
sub
inc
sub
cmp
pop
and
dec
cmp
aas
add
cltd
into
ja
movsl
lcall
sbb
ja
jecxz
int3
adc
jmp
push
jecxz
popw
lea
push
or
inc
push
push
loopne
and
ja
mov
mov
and
test
loopne
push
mov
xor
insb
pop
push
inc
je
cld
add
mov
scas
and
mov
push
leave
les
test
loope
mov
nop
in
leave
sub
pop
jmp
movsb
push
dec
lcall
leave
mov
cs
mov
es
and
repz
imull
or
out
xor
inc
xor
push
jb
add
mov
and
inc
rcrl
mov
outsb
mov
push
outsl
adc
sub
inc
mov
mov
cld
mov
sarl
adc
fcmovnbe
lods
mov
mov
repz
leave
push
add
je
add
adc
pushf
lds
xchg
int
lret
cmp
cmpsb
jbe
mov
xchg
fwait
push
aaa
xor
jge
or
mov
aaa
stos
out
add
sahf
adc
mov
jecxz
sarl
cmp
repnz
mov
lret
outsl
test
sub
add
loope
push
dec
cmp
bound
mov
ja
cmpsl
push
leave
adc
pop
je
addr16
out
push
lcall
xor
sbb
fwait
xor
pop
fisttpll
sarl
add
arpl
testb
cmp
in
js
les
mov
loopne
arpl
sahf
cmp
mov
mov
or
sahf
nop
mov
jmp
push
mov
aaa
fwait
subb
and
add
xchg
aam
mov
inc
scas
xchg
jae
std
aas
pusha
mov
adcb
addr16
hlt
dec
outsl
xchg
stos
sub
repnz
and
inc
es
mov
pop
adc
mov
push
add
add
mov
stos
loope
stos
xchg
xchg
sbb
cmpsl
pop
imul
aad
push
mul
push
add
test
and
inc
mov
adc
dec
mov
cltd
or
out
mov
clc
jbe
xchg
mov
mov
lds
das
orb
mov
inc
insb
addr16
or
into
movsb
mov
xchg
add
mov
test
push
into
out
aaa
mov
lock
xor
inc
cmp
je
scas
jecxz
ret
lahf
cld
scas
movsl
imul
in
jle
push
cmc
jmp
add
sub
repz
or
rcrb
test
push
jge
mulb
add
les
test
es
mov
xchg
imul
sbb
sahf
or
mov
adc
fcomp
cs
aaa
sbb
test
sti
ds
xlat
add
pop
xlat
or
and
sbb
leave
pop
pop
push
and
rcr
mov
add
pop
sti
xchg
add
adc
mov
fdivrl
jle
mov
sub
fstp
and
and
cmpsb
inc
rolb
inc
cwtl
lods
dec
xchg
popa
bound
faddl
sbb
aam
cmpsl
mov
mov
icebp
xchg
pop
lret
sbbl
push
outsb
push
cltd
and
inc
cs
cmp
xor
mov
jmp
jbe
pop
mov
push
call
or
mov
js
in
jo
add
les
mov
xor
jmp
js
cmp
and
outsb
push
scas
xchg
mov
out
hlt
pop
mov
pusha
fcmovne
lea
add
ss
inc
scas
mov
aam
nop
push
push
dec
push
std
jge
and
mov
and
jno
loope
fwait
push
push
in
fs
rclb
add
mov
negl
js
das
sbb
xor
fisubrl
fs
xchg
sbb
jbe
inc
jg
enter
xor
shl
rolb
dec
sti
es
dec
sbb
mov
jg
adc
push
push
frstor
inc
imul
test
shr
push
xor
mov
cwtl
in
dec
xor
push
mov
or
imul
nop
es
sub
xor
add
jmp
cli
ret
stos
jecxz
jmp
in
leave
xor
inc
pusha
jle
mov
or
jns
and
mov
fisttps
repnz
ret
xor
mov
cmp
mov
add
xchg
inc
adc
add
incl
pop
push
call
inc
or
in
xor
xchg
inc
fmull
and
xor
les
int3
lcall
int
dec
add
cli
stos
sbb
jo
lods
sti
les
push
cmp
sbb
pop
scas
lahf
dec
inc
and
stos
lea
add
mov
sbbl
jbe
andb
or
lahf
in
cld
aad
daa
lds
mov
inc
cmp
sarb
jl
mov
xor
inc
nop
mov
jg
leave
add
mov
xchg
iret
cmp
vandpd
jb
and
idivl
and
sti
hlt
dec
addr16
or
testl
imul
shlb
repnz
jp
mov
mov
xor
jns
pusha
sub
dec
add
es
or
cli
xchg
sbb
push
xorb
push
imul
das
loopne
fldenv
cmpsl
outsb
inc
dec
aaa
bound
mov
sub
sub
push
mov
stos
test
outsb
incl
jb
and
jb
jns
mov
cmp
inc
out
addr16
xor
add
add
mul
scas
mov
inc
repnz
data16
leave
push
mov
rolb
loop
adc
lods
lea
bound
jns
cmp
sbb
adc
sbb
aas
mov
jl
notl
sbb
loopne
mov
insb
cmpsl
fninit
into
ljmp
jo
push
push
jbe,pt
fstpt
mov
sub
inc
cld
dec
xor
adcb
aad
xchg
and
scas
push
repz
into
loop
fs
and
outsl
nop
xchg
rcr
mov
mov
fdivr
add
xlat
fidivrs
xchg
repz
and
add
or
adc
insb
pop
xor
andl
jnp
pop
lock
iret
pop
stos
mov
mov
mov
daa
bound
mov
push
ret
ss
clc
mov
cli
int
jo
lods
pusha
aas
out
scas
cltd
ds
test
mov
sbb
shl
push
jg
je
or
jle
sbb
fsubrp
pushf
inc
lods
sub
jp
jae
xor
outsl
mov
sbbb
mov
and
loopne
pop
ret
sub
lds
sub
mov
cmp
xchg
in
sub
lea
xchg
out
jecxz
pop
xchg
cmpsb
lds
ljmp
adc
dec
dec
jp
push
clc
mov
mov
jmp
add
mov
std
das
repnz
mov
fdivrs
and
and
ret
xor
inc
enter
pusha
mov
fisubl
dec
cli
mov
ficompl
xchg
jb
cs
or
jp
cmp
mov
shr
mov
outsb
cmc
push
nop
jmp
aaa
jb
push
shlb
push
jle
imul
cmp
xchg
je
fstps
mov
iret
outsb
fidivrs
cltd
loop
adc
cld
cmp
cs
iret
into
scas
in
jns
inc
rcr
testl
mov
pusha
adc
sbb
bound
pop
test
stos
and
shll
mov
movsl
fisubrs
cmp
push
adc
xchg
les
push
mov
push
icebp
aaa
dec
pop
test
add
xchg
dec
daa
popf
jg
push
xchg
sub
jl
mov
jbe
mov
mov
addr16
adc
scas
ret
divl
insb
iret
test
cmp
dec
js
pop
push
lahf
repnz
shrl
icebp
dec
jb
adc
and
mov
cmp
xor
hlt
scas
data16
loop
mov
lret
pop
fmul
stos
mov
repz
daa
sarb
out
dec
mov
sbb
outsl
and
jne
dec
add
push
test
inc
inc
mov
sub
adc
adc
sbb
scas
add
or
cmc
or
jbe
ret
xlat
push
call
xchg
fistl
jb
inc
inc
push
pusha
into
lea
int3
sbb
mov
adc
add
sub
fs
xor
mov
fs
test
inc
xchg
rol
adc
lahf
popf
cli
pop
shr
test
lds
std
fsubrl
jge
test
xchg
repz
lret
insb
dec
xor
in
js
stos
inc
cs
and
mov
xchg
sar
mov
cmp
dec
pushf
mov
inc
mov
shrl
in
cmp
push
xchg
ja
add
aaa
pop
out
mov
lods
mov
pop
int
lea
mov
pop
add
arpl
imul
int
mov
xchg
mov
jge
xlat
xor
movsb
adc
adc
cmp
and
mov
aam
add
pop
or
jae
sbb
icebp
fdivrs
lds
mov
mov
cmp
pop
into
jle
adc
cmp
xchg
int3
das
sbb
out
out
and
push
xor
or
pusha
lods
pop
in
sbb
in
fs
ficoml
jo
ljmp
ja
sarl
push
fnsave
mov
into
push
inc
mov
sahf
xor
in
dec
pop
adc
ret
stos
sbbl
adcl
loope
inc
rorl
fxch
cmp
addr16
sahf
nop
data16
dec
or
add
call
scas
pop
in
pop
shrl
dec
and
cmpsb
lcall
push
out
cmc
hlt
pusha
mov
pushf
pop
fmul
xorb
add
and
shrb
in
outsl
cmp
dec
cmp
mull
pop
sub
gs
inc
xor
cld
sahf
mov
orb
pop
aad
adc
and
shrl
jne
rol
cmc
sub
rolb
mov
pop
push
add
iret
pop
ror
inc
cwtl
dec
push
mov
push
or
test
mov
jg
jp
out
insb
cmpsb
inc
sbb
cmp
pop
sub
nop
inc
inc
and
jp
ds
mov
pushf
mov
imul
xor
repnz
movsl
bound
push
xchg
xchg
movsb
push
rorl
inc
stc
adc
xchg
push
pushf
pushf
and
mov
cld
pop
mov
fsub
lds
lods
or
xor
test
ljmp
mov
inc
pop
sbb
js
jl
sub
adc
pushf
clts
push
insb
fdivrl
jbe
pusha
jmp
mov
dec
pop
mov
or
inc
xor
test
add
pop
cs
jo
in
dec
add
inc
mov
dec
stos
pop
fadds
adc
pusha
add
xchg
cmc
xchg
testb
xor
and
sbb
mov
xor
xor
push
and
inc
xchg
xor
pusha
jp
daa
pop
in
add
ljmp
sti
and
rcrl
sahf
cmp
dec
and
mov
jle
jns
in
mov
sub
pop
sbb
add
fs
cmpsl
icebp
jle
dec
xor
inc
lahf
mov
push
decb
mov
arpl
das
cmc
sbb
hlt
adc
pop
in
jb
and
in
pop
jp
rorl
lahf
daa
int3
out
add
push
push
mov
insb
xchg
nop
xchg
mov
sahf
gs
sub
pusha
jge
pusha
xbegin
inc
pop
rsm
jno
ficompl
stos
inc
aaa
decl
iret
jp
mov
xchg
mov
mov
sahf
mov
cmp
xlat
dec
fnstenv
rcr
cwtl
outsb
and
push
repnz
lods
mov
and
cmp
fcomp
pop
dec
enter
div
mov
and
fsubrl
pop
mov
pusha
outsb
filds
push
lods
cmp
ret
aam
outsb
mov
xchg
aaa
xchg
leave
mov
pop
stc
xor
xchg
nop
inc
push
push
xorl
or
pop
lods
addr16
xlat
pop
js
inc
insl
push
xchg
ret
pop
add
sti
mov
jae
jns
sbb
mov
lods
mov
je
cs
sub
cmp
adc
cmc
adc
mov
push
cmp
mov
icebp
jmp
and
rcrl
adc
lods
ret
and
jmp
outsl
movsb
rorl
pusha
adc
std
sbb
movsb
jg
aaa
add
cld
mov
pop
fstpt
pushf
shll
sbb
lret
fidivl
mov
int
cmpsb
push
push
xor
std
stos
pusha
jmp
mov
mulb
inc
dec
mov
or
adc
xlat
sub
jne
mov
sbb
sbb
adc
and
mov
jns
jmp
adc
sbb
sub
fnstsw
inc
les
mov
test
data16
xchg
mov
cmp
pop
sbb
xchg
enter
cmpsb
or
cmpsb
lret
sub
les
cmp
push
mov
jnp
push
fcompl
push
enter
or
cmp
daa
jo
add
shll
ret
and
add
add
mov
sbb
cmp
lods
out
loope
in
mov
rolb
movsb
adc
movsb
push
rcrb
aaa
mov
aam
andl
es
inc
shl
jecxz
fsubl
mov
mov
add
and
repnz
enter
sbb
lahf
lret
add
das
test
iret
sbb
aam
pop
stc
das
cmpb
xchg
xchg
scas
scas
cmp
aaa
push
sbb
out
ficomps
xor
mov
jbe
or
pop
aaa
std
out
xor
mov
inc
add
cmpsl
lret
jp
lahf
cmp
cmp
pushf
xor
adc
sbb
jno
cmp
out
push
idivl
jb
pop
ds
lea
dec
imul
daa
jge
lret
shll
movb
add
lods
sbb
int3
cmp
in
in
jp
and
imul
sub
lcall
js
mov
arpl
imul
in
inc
jge
mov
imulb
and
out
xchg
inc
jae
add
add
stos
xchg
dec
fprem
into
mov
je
ja
in
lock
loopne
sub
call
push
das
xchg
in
mov
shrl
insb
imull
jge
mov
in
icebp
outsb
xchg
popa
stos
jp
xchg
roll
out
xchg
insl
das
cmp
and
xchg
dec
repz
jo
dec
or
fcoms
xchg
insb
loope
cwtl
xor
cmp
jae
insb
inc
xchg
mov
inc
pop
push
push
out
mov
mov
or
addl
push
jg
arpl
mov
test
test
pop
cmp
inc
mov
xor
mov
adc
pop
ret
das
nop
lods
cmp
out
loop
mov
ja
ret
cmp
mov
addb
inc
out
dec
mov
mov
inc
dec
push
add
or
mov
into
jg
in
movsl
push
jge
push
xor
sub
cmc
iret
or
sub
cmp
hlt
pop
inc
stos
cmp
aaa
dec
loop
cmpsl
outsl
pop
mov
cmc
adc
mov
andl
je
icebp
push
out
jb
sbb
call
out
sbb
aad
test
or
adc
lahf
xchg
clc
shlb
sbb
imul
sbb
jl
in
aas
sub
sbb
and
andl
jnp
dec
aas
mov
or
add
xchg
adc
cmpsb
mov
repz
ljmp
cmp
das
in
mov
pop
stc
inc
adc
inc
clc
js
sbbb
enter
ss
test
dec
and
rolb
clc
popf
mov
and
arpl
mull
aas
jno
mov
xlat
pusha
mov
frstor
pop
cmp
mov
iret
mov
cmp
into
sub
jae
out
and
mov
addb
push
lods
call
sub
lds
cmp
push
movsb
out
jbe
les
notb
inc
daa
and
rolb
gs
ljmp
mov
loop
adc
jno
imul
xchg
add
aam
mov
fmul
mov
cmp
hlt
cmp
push
jo
fwait
sub
stos
imul
loop
jmp
imul
insl
idivb
test
inc
fstp
dec
sar
aam
aad
les
xlat
pop
arpl
jnp
test
jns
adc
mov
and
pop
sub
fldcw
fnsave
cmp
fildl
sahf
arpl
cmp
lahf
scas
sar
lds
fnstenv
icebp
push
leave
sub
fdiv
push
stc
push
xor
pushl
inc
test
dec
repnz
icebp
mov
push
pusha
hlt
mov
mov
dec
scas
sub
dec
lcall
xchg
cli
pop
in
bound
std
int3
stos
mov
cwtl
jg
loopne
xor
add
lock
jmp
movsl
test
out
jge
iret
adc
inc
ss
scas
or
rolb
jae
adc
add
subb
jne
xor
xor
faddl
cmpsl
in
lahf
daa
aas
xchg
jecxz
jo,pt
lods
hlt
mov
clc
aas
jg
adc
pop
mov
arpl
or
popf
cmc
sub
sbb
mov
sbb
sub
cltd
ss
icebp
daa
insb
inc
jo
push
jae
std
mov
das
fidivrs
push
push
cmc
inc
mov
out
sub
xchg
pop
inc
and
dec
repz
adc
fidivrl
xor
xor
testb
outsl
sbb
lcall
divl
call
pushf
loope
xor
jge
xchg
addr16
jne
ljmp
insb
adc
sbb
shr
jne
movl
aas
sar
pushf
in
dec
add
adc
mov
push
or
jbe
popa
push
mov
xchg
imul
and
mov
xor
add
push
cltd
mov
sarl
push
adc
and
sub
sub
scas
mov
xchg
inc
cmp
iret
out
lahf
pop
cmp
iret
out
jo
adc
dec
mov
or
inc
fldcw
mov
pop
lcall
inc
mov
or
rclb
push
aad
les
dec
xor
pop
les
add
rcrb
es
and
in
sbb
xchg
call
xchg
mov
dec
mov
les
fists
push
inc
lds
aam
cmp
fcomps
daa
movsl
mov
mov
inc
dec
or
out
mov
arpl
aaa
and
rcll
popa
cwtl
inc
sbb
fimull
dec
jle
dec
imul
inc
andl
inc
inc
loope
clc
das
sub
cmp
orl
lret
ja
lds
sub
ss
or
cltd
sub
rcrl
and
test
stc
ljmp
fxch
bound
adc
rcr
shl
cmp
aas
mov
iret
sti
rol
fwait
xchg
sbb
stos
stos
adc
jle
add
sbb
sbb
enter
or
les
mov
ds
std
xor
loopne
push
lods
xor
xchg
popf
call
enter
push
ret
shlb
jg
mov
mov
inc
lods
in
ss
sbb
mov
mov
jno
icebp
xor
addr16
pop
fmuls
outsl
mov
sub
xor
jle
inc
bound
stos
fsubrs
fdivs
out
xor
and
jl
pop
or
iret
lods
mov
pop
cli
repz
popf
fldt
lods
jecxz
lcall
scas
bswap
jae
aas
into
movb
pop
testb
addr16
or
and
aas
jo
push
adc
insb
mov
cmpsl
sub
mov
movl
divl
cmp
push
push
adc
mov
fwait
cmp
popa
notb
adc
es
jl
jp
cmp
out
adc
shrb
sbb
xchg
out
push
popa
ret
inc
mov
out
mov
jl
jecxz
pop
inc
aam
popf
xor
cmp
lods
popa
movsb
cs
inc
test
pushf
sti
adc
sbb
addr16
shll
mov
sub
mov
pusha
das
and
gs
sbb
mov
repnz
inc
cmp
loope
push
jecxz
adc
arpl
addl
adcl
push
push
jno
or
out
sbb
sbb
call
inc
jl
mov
jl
xlat
rorb
push
cs
insl
xchg
or
loop
pop
insl
ja
sub
xchg
loope
add
mov
insb
jp
imul
adc
pop
dec
imul
and
daa
cwtl
adc
push
inc
push
xchg
mov
fs
gs
pop
pop
sbb
and
stos
loop
sbb
mov
out
pop
pop
das
mov
and
mov
xor
mov
mov
xchg
jp
loop
adc
lods
inc
xor
shr
xor
ja
bound
push
popa
push
jg
icebp
pusha
or
xor
jg
pop
cmp
and
dec
inc
out
xor
adc
loopne
push
repz
xchg
sahf
les
into
stos
test
dec
insl
add
arpl
lea
lods
xchg
ljmp
out
mov
roll
jp
cli
and
arpl
in
push
stc
stos
in
xchg
pop
dec
imul
cmp
inc
stos
add
pop
jp
das
cltd
jle
jbe
sbb
shll
add
adc
mov
xchg
xor
popa
incl
mov
pop
add
popf
movsb
jl
push
cmpsb
insl
jo
mov
aad
loop
jg
sub
mov
mov
popa
adc
lahf
cld
push
popf
cltd
fiadds
test
sbb
aaa
rcrb
push
daa
push
add
xchg
or
push
mov
stos
ret
sbb
cs
leave
out
mov
push
jo
jno
mov
mov
ret
std
arpl
fbstp
outsl
push
mov
loope
into
pop
jl
in
lret
mov
dec
cmp
jne
nop
sub
imul
mov
adc
xlat
xchg
inc
mov
cmpsb
mov
test
push
dec
pushf
in
inc
sahf
fwait
jecxz
pop
sbb
aaa
xchg
cli
out
mov
xchg
and
repnz
sbb
sub
mov
or
cwtl
cmc
xor
loopne
inc
into
mov
xchg
cwtl
mov
rcrb
gs
das
mov
enter
test
mov
add
adc
pop
enter
xchg
mov
jle
cltd
divl
shl
outsl
fstps
jae
cmpb
jb
mov
js
push
in
rcll
push
cmc
xchg
dec
hlt
cltd
out
arpl
or
in
adc
iret
or
out
jp
or
cmp
lods
add
mov
dec
or
cmp
cmp
jno
mov
insl
clc
sub
std
das
sub
imulb
inc
andb
push
mov
push
add
mov
cs
into
jge
inc
push
add
push
pop
pop
push
xor
dec
outsl
lods
imul
mov
inc
clc
sbb
aaa
lods
push
mov
lea
call
mov
in
mov
xor
nop
test
add
adc
cli
sahf
mov
movsl
rcrl
in
push
int
popa
xchg
enter
and
cld
mov
testb
sub
fwait
js
repnz
push
mov
ljmp
pop
fwait
test
out
jb
out
mov
fstp
test
add
push
ret
lret
popa
mov
sbb
push
pop
jbe
jns
adc
mov
dec
loopne
into
call
shr
les
sub
mov
cli
add
popa
sbb
add
les
aaa
daa
push
fsubl
sarl
stos
or
and
adcb
push
dec
mov
std
mov
inc
pop
repz
fcomps
sahf
mov
pushf
xor
pop
ret
pop
insb
test
push
and
ret
xchg
sub
daa
jns
pop
jp
pushf
push
cmp
mov
mov
in
jge
cmpsb
xor
scas
mov
ljmp
pop
rorb
pop
and
lods
adc
popa
mov
mov
push
cmpsl
add
push
test
push
pusha
xor
loop
mov
cmp
data16
lahf
lret
sub
sbb
shlb
shll
ss
adc
cmovae
idivl
cltd
mov
sbb
out
int
dec
aas
cltd
inc
and
add
es
divb
jl
add
jne
cvtps2pi
hlt
imul
adc
arpl
sti
bound
test
or
xchg
movsb
jae
aam
inc
in
rorb
sub
adcb
jle
xor
les
out
cmpl
add
cld
lods
pop
sar
sbb
popf
fisttpl
lea
mov
jns
adc
xchg
shl
shlb
and
nop
nop
push
mov
xor
bound
push
adc
test
xchg
xchg
mov
cwtl
arpl
jbe
addl
data16
popa
movsl
andl
fildll
add
inc
repnz
sub
in
lds
fcomps
mov
adc
push
dec
shl
pop
scas
pushf
ljmp
stc
clc
nop
stos
jno
xchg
sti
out
xchg
call
or
out
cltd
pop
push
test
xchg
inc
cmp
cmp
popa
imul
pop
adc
inc
cmp
mov
jg
push
sarl
dec
aad
stos
subb
jo
jo
test
or
xchg
pop
push
jp
hlt
mov
in
push
push
pop
push
adc
cli
sbb
mov
ja
jmp
bnd
jae
jl
cmp
cmp
jle
adc
repnz
pop
cmp
jb
jle
xchg
arpl
cmp
shrl
mov
sub
push
iret
jle
outsl
jb
aad
lods
inc
inc
out
jmp
ret
incl
pop
mov
pusha
ret
mov
out
repnz
xor
sub
push
fsubr
cmp
mov
imul
mov
push
dec
add
fwait
jg
arpl
imul
das
orb
mov
aad
es
fistpll
cmp
out
fisubl
mov
dec
xor
loopne
adc
xchg
jge
push
xor
mov
add
inc
xchg
repnz
pop
mov
push
xor
aas
imul
pop
cld
mov
xor
mov
aad
xor
xor
jle
out
adc
mov
push
inc
sbb
mov
cs
rorb
xchg
xor
outsb
imulb
mov
lea
rorl
fidivs
loopne
xchg
std
ret
xor
sbb
int
adc
push
sbb
cmp
out
fistps
addl
push
dec
out
and
or
pop
mov
sahf
xchg
cmp
push
popf
cmp
mov
movsb
push
adc
push
lock
mov
mov
inc
mov
leave
jecxz
shll
sbb
cmp
inc
repz
inc
mov
push
imull
loopne
xchg
int3
loopne
pop
lahf
repz
das
test
pop
push
jbe
outsb
das
stos
fs
nop
jne
outsl
ret
sbb
sub
in
test
outsl
out
inc
gs
loope
stc
addr16
daa
xor
sbb
imul
mov
cs
stc
or
fwait
xchg
inc
dec
xchg
xchg
pop
hlt
flds
dec
push
outsl
nop
push
or
mov
mov
popf
push
mov
sahf
dec
insb
pushf
mov
ss
rorl
cmp
xor
addr16
inc
fcmovne
int
movsb
leave
inc
fmuls
push
cld
xor
add
xor
jmp
int
cli
je
sbb
fistpll
jno
out
jmp
inc
and
or
adc
subb
and
dec
stos
mov
enter
mov
mov
or
pop
jp
add
pusha
mov
ljmp
iret
ja
scas
stc
sub
push
addr16
dec
lret
inc
mov
cli
mov
add
mov
inc
mov
xchg
jno
jnp
inc
sbb
cmp
cmpsl
jp
inc
ja
xchg
push
test
mov
add
xchg
mov
aam
push
fs
mov
scas
inc
scas
mov
adc
ror
add
pop
jg
js
pop
aaa
pop
sarb
shrl
push
iret
bound
push
scas
add
push
sbb
dec
int3
out
gs
in
dec
test
ret
push
movsb
repnz
cli
cld
scas
pop
add
fs
mov
movsb
and
lds
inc
or
jae
insl
fcom
mov
cltd
decl
mov
push
mov
adcl
scas
add
xchg
lods
xor
dec
subl
out
imul
pusha
in
cmp
popf
rcll
lock
push
lret
adc
xchg
xchg
sbb
dec
jae
jl
aam
jp
sbb
xor
mov
sub
add
insl
xlat
psrld
xchg
push
lds
ret
loope
jo
pop
push
popa
mov
or
aam
negl
int3
mov
mull
cmc
cmp
les
outsl
or
ss
aam
ljmp
neg
mov
and
aas
mov
push
jns
cli
fadds
mov
mov
in
lds
push
test
inc
in
aam
jg
cwtl
icebp
jp
xor
mov
aaa
xor
cmp
push
and
icebp
stc
insb
sbb
xchg
mov
mov
inc
rcr
outsl
sub
adc
loop
addr16
sti
jae
subl
lds
aaa
ret
loope
sub
loopne
inc
fnstcw
jle
std
cmp
cmp
mov
popf
jnp
mov
out
add
aad
cld
dec
das
mov
rclb
jo
lcall
push
sbb
loope,pn
cmp
pop
stos
leave
push
xchg
stc
mov
sub
xchg
bound
or
mov
ljmp
push
dec
aad
or
ja
call
movsb
cmc
and
xor
ss
inc
or
push
ret
ljmp
mov
cld
ss
xor
add
jno
les
add
out
sbb
daa
pop
sub
pop
cli
mov
jns
scas
addr16
outsl
bound
and
outsl
xlat
fidivrs
sub
xchg
mov
in
inc
repnz
dec
sbb
xor
fsubs
imul
outsl
jb
sar
cmp
sbb
ficoms
inc
std
scas
aad
sub
sarl
cmp
xchg
ret
int3
add
push
dec
jge
bound
repz
push
sbb
adc
cmp
daa
adc
outsb
inc
inc
pop
aas
popa
mov
out
jo
jno
mov
ja
lock
pop
es
enter
js
es
sbb
pop
xchg
lock
or
insb
push
cmc
lahf
sbb
std
mov
in
add
fstl
aam
xchg
dec
sub
mov
cmp
adc
mov
jle
sbb
cltd
sbb
xlat
xor
aam
mov
aad
pushl
loope
mov
mov
shll
adc
xchg
dec
pop
loope
stos
or
aad
js
add
into
movsl
hlt
jbe
pop
out
std
xchg
iret
loope
push
pushf
aaa
incl
icebp
dec
sbbl
pop
xchg
hlt
jmp
sub
test
lahf
mov
mov
pop
push
testb
fdivs
je
sti
sub
enter
cmp
punpckhdq
dec
scas
int
insb
stos
xchg
push
sbb
js
aad
pop
fldenv
push
div
adc
add
push
daa
push
out
mov
lds
cmp
dec
sbb
jns
popa
push
fwait
jbe
sbb
dec
int
hlt
dec
xor
sub
aad
cmpsl
nop
add
xchg
lea
pop
push
inc
loop
mov
push
jl
cmp
cmp
or
add
xor
and
notl
xor
push
push
popa
mov
out
shrl
jp
clc
push
test
stos
loop
popf
mov
nop
scas
shld
cwtl
fidivrl
sbb
push
dec
lret
or
andb
and
lods
enter
sbbl
dec
shll
sbb
mov
std
movsb
addb
mov
mov
daa
roll
mov
addr16
push
inc
pop
mov
fidivrl
ret
mov
nop
popa
jge
dec
cmp
jmp
jecxz
jo
addb
pop
scas
xorb
lods
out
inc
mov
popf
cltd
imul
mov
inc
xchg
or
sub
pusha
xchg
jge
add
push
jmp
fildl
cli
hlt
outsb
xchg
push
adc
out
call
pop
dec
in
inc
sub
arpl
daa
pop
in
loopne
call
and
add
xchg
jecxz
scas
adc
push
adc
bound
outsb
jno
mov
pop
mov
sub
sar
shl
arpl
mov
push
xor
fnstsw
xchg
jae
icebp
lock
stos
mov
add
test
xchg
fcomp
xor
sub
jecxz
jge
movl
sub
xor
cmpsb
xchg
inc
imul
ds
xor
mov
dec
mov
pop
push
movsb
adc
std
aas
mov
lcall
xchg
cwtl
pop
sbb
mov
sub
xchg
fnstenv
movsb
out
cmp
jge
scas
fisttps
mov
arpl
daa
addr16
adc
test
pop
mov
add
popa
jmp
pand
jmp
xor
push
push
lds
popf
inc
loope
mov
or
push
lret
je
cmpsb
or
nop
inc
pop
inc
sbb
push
orl
mov
mov
flds
push
sub
jno
xor
cs
jnp
flds
insb
jl
pop
jns
push
cmp
push
mov
and
insb
sub
sti
scas
push
scas
jns
xchg
push
cltd
xchg
lods
test
pop
mov
lcall
pop
cmp
jno
cmpsl
jns
pop
jmp
lds
scas
sbb
and
orb
inc
adc
sbb
and
push
pop
test
cs
jae,pt
mov
dec
and
mov
movsl
cmp
pop
sub
push
pop
ja
jg
mov
sarb
repnz
ja
jnp
andl
inc
xor
mov
lds
pop
cltd
mov
push
loope
sub
xchg
xlat
ss
sbb
scas
lret
add
iret
jns
or
and
cs
cmc
int
or
push
jecxz
clc
or
or
adc
std
movsb
or
jl
push
jae
push
xor
mov
test
xchg
mov
fidivrl
enter
decl
insl
imul
sub
mov
sbb
lea
xchg
pop
jae
add
pop
inc
xor
outsb
je
ret
jl
ret
and
in
loopne
mov
shl
scas
mov
mov
sbb
popa
push
aaa
ds
aaa
sbb
push
sarb
aam
pop
test
lcall
ret
iret
fsincos
mull
xlat
sub
mov
push
adc
ja
mov
and
fildll
in
adc
xor
in
sbb
movsb
mov
lods
xchg
pop
in
lcall
testb
dec
into
popa
outsl
inc
jmp
out
dec
fs
fisttpl
test
out
jae
lea
mov
push
andl
xor
lret
daa
dec
popa
fs
lret
mov
xor
es
xor
pop
inc
cmp
xchg
and
addr16
ds
inc
mov
jo
ja
cmp
push
or
xor
xchg
into
or
push
divl
lds
push
shr
mov
jns
xchg
fwait
bound
call
xchg
pushf
push
icebp
push
mov
push
cmp
add
dec
imulb
mov
inc
jno
mov
lock
les
mov
daa
push
adc
add
std
inc
sbb
out
and
sbb
and
outsl
popl
bound
int
je
inc
pop
loope
ss
bound
mov
xchg
daa
clc
int
xor
imul
mov
mov
xlat
cmpsb
or
outsb
int
std
lcall
mov
inc
outsl
scas
push
int3
dec
inc
xchg
sbb
adc
mov
sbb
fisubrl
std
xor
mov
ds
xchg
or
outsl
nop
push
sub
popf
push
imul
push
int3
int3
or
xor
pop
sub
fcomip
loop
or
and
ja
in
xor
popf
lcall
arpl
cmc
inc
inc
dec
call
push
cld
cmpsb
rcrb
in
scas
cltd
adc
mov
xchg
imul
push
outsl
push
xlat
and
sub
shr
movsl
push
lahf
sbb
xchg
dec
pushf
fadd
outsl
mov
test
rcll
jnp
pushf
popf
in
inc
stc
cld
xor
or
jnp
adc
shr
inc
sub
out
cmp
jne
mov
sub
stos
adc
mov
inc
mov
sarb
xchg
mov
sbb
push
mov
cmp
and
ss
dec
pop
or
fsubl
mov
mov
lods
mov
sub
add
jns
pop
xchg
shlb
mov
out
add
nop
jns
mov
and
jge
sbb
cmpsl
sub
push
mov
test
arpl
cmc
dec
insl
jle
scas
pusha
stc
adc
xor
aam
das
xchg
shrb
xchg
movsl
sti
or
movsb
push
mov
adc
scas
push
mov
dec
sahf
xor
xchg
cmc
jb
cmp
test
mov
xchg
jl
dec
pop
inc
cs
and
mov
inc
mov
xchg
push
cltd
leave
pop
out
out
dec
jo
insb
stc
push
jbe
jecxz
xchg
stos
loopne
repnz
mov
mov
les
dec
pop
mov
movsb
mov
inc
repnz
jecxz
inc
mov
xchg
std
movsb
xor
and
xchg
subb
mov
jle
cmp
stos
pop
xlat
and
jnp
fisubrl
rcr
cs
sar
leave
mov
daa
stos
bound
repz
decl
inc
fsubs
rcrl
and
aam
cmpsl
fbld
jno
push
push
sarl
das
nop
dec
sbb
dec
sbb
pop
addb
fistps
cs
add
jmp
mov
sub
add
push
scas
mov
pop
shl
pop
jmp
inc
jl
cmc
jne
jno
xchg
adc
popa
push
push
push
popa
bound
mov
out
sarl
pop
mov
lock
lea
lret
icebp
hlt
jbe
add
jb
push
cmp
fsubrp
gs
or
mov
addb
and
ljmp
insb
addb
adc
add
es
push
xchg
xchg
fsubr
sti
mov
lods
or
sahf
or
cmp
adcb
hlt
ficompl
out
mov
push
pop
xchg
sub
jle
push
lea
insb
jno
cmpsl
jbe
subb
cltd
pop
icebp
fistl
pushf
imul
out
out
std
sbb
jno
xrstors
sbb
push
inc
or
addl
cmpsl
shl
pushf
icebp
loope
daa
imul
mov
adc
add
movsb
icebp
scas
jle
mov
push
in
mov
int3
iret
sbb
cs
inc
popa
cmp
sarb
ficoml
mov
dec
xor
mov
into
gs
adc
xlat
scas
hlt
or
xchg
push
out
sti
and
inc
push
clc
dec
pop
push
sbb
and
es
mov
rolb
data16
dec
out
daa
mov
adc
mov
adc
add
or
and
xchg
subl
je
inc
inc
xor
push
sbb
loopne
jmp
or
in
add
pop
mov
and
xchg
mov
lret
fisubrs
adc
add
in
cli
xor
cmp
inc
xor
stos
adc
push
push
js
adc
add
and
shrb
jae
imul
cli
ficoms
add
idiv
xor
dec
adc
repnz
mov
mov
loopne
and
pop
dec
push
out
mulb
aas
sbb
imul
xchg
pop
loope
int
sbb
loope
in
cs
push
adc
mov
cwtl
xor
inc
in
mov
pop
test
pop
std
sbb
orb
sarl
jb
pop
fdivr
fistpl
inc
xlat
test
or
mov
shlb
pop
ss
mov
xor
xchg
pop
xchg
push
push
imul
das
std
in
and
pop
xchg
push
cmp
dec
mov
xor
xor
push
cli
iret
movsl
push
into
leave
ljmp
out
adc
xchg
xchg
loopne
dec
push
pop
push
test
loop
cmp
jecxz
in
stc
adc
andl
inc
fs
inc
push
xor
cli
cltd
pop
jp
add
push
sbb
xchg
mov
aad
out
lret
pop
sub
and
sahf
fsubrs
test
adc
mov
push
add
jno
sub
xor
inc
lahf
rclb
fs
adc
mov
std
cmpsl
cmp
fcoml
and
loopne
gs
aam
setne
ljmp
sub
addr16
mov
xor
pop
pop
fldenv
popa
fisttps
ds
rclb
cmp
inc
mov
cltd
pop
lods
dec
mov
xor
loop
aas
mov
add
and
xchg
nop
sbb
dec
sbb
lock
jb
inc
int3
stos
mov
rorl
mov
clc
xchg
fisttps
inc
adc
mov
ljmp
dec
mov
aas
add
or
mov
out
cmp
jbe
adc
push
imul
add
xchg
cmc
xchg
xor
dec
fnstcw
push
xchg
test
xchg
bnd
jp
jno
pop
and
nop
xchg
xchg
and
or
push
xlat
inc
adc
ret
int3
cmpsl
movsb
gs
scas
mov
mov
movsb
aad
xor
les
xor
filds
dec
fdivrs
setne
repz
arpl
cmp
xlat
jle
fdivs
pop
sub
in
add
out
mov
in
fnstenv
push
or
inc
mov
fs
or
hlt
push
repz
pusha
cmpsb
jno
mov
ret
push
jns
or
dec
rol
mov
xor
jae
inc
sub
or
push
xor
ja
dec
rcll
mov
adc
or
or
out
test
jne
inc
pop
fadds
and
nop
sbb
xor
ss
dec
test
cli
jl
pop
jl
sbb
add
mov
fdivrp
mov
jg
mov
jne
mov
jmp
inc
or
or
test
pushl
mov
das
test
sbb
cmpsl
pop
ficoms
outsb
sub
ficoml
in
fdivr
insb
adc
rol
daa
push
arpl
xchg
fmulp
rcrl
xor
test
or
arpl
js
pop
mov
xchg
adc
stos
adc
cmp
mov
jmp
stc
mov
ja
sub
cld
lea
popf
xor
lods
pop
stos
les
mov
rcrb
add
pop
sub
push
mov
popa
inc
push
adc
sbb
and
mov
je
fcmovnb
and
inc
aaa
sub
inc
cltd
call
lcall
in
cli
addb
jae
sub
sbb
outsb
test
nop
push
cmpsb
out
mov
mov
sub
inc
mov
idivl
add
divl
mov
sbb
gs
jo
mov
pop
enter
xor
lahf
cs
cmp
pop
pusha
int
popf
popa
loopne
lret
mov
cltd
xchg
jge
mov
in
jp
scas
das
mov
mull
testl
xor
or
out
jae
cs
mov
enter
les
jns
sbb
nop
sub
add
sub
cmpl
add
mov
jmp
lds
insb
mov
push
nop
ss
and
inc
popl
or
pop
cmpsb
repz
push
loopne
and
sub
push
cmc
les
xchg
inc
push
pop
jp
mov
loop
int
scas
and
imul
pushf
inc
cmpsb
xchg
loop
mov
mov
lods
or
call
and
push
rorb
out
cmp
test
and
bound
pop
mov
stos
cmp
jl
test
std
jbe
int3
sub
std
cmp
mov
cmp
rclb
ret
ss
jmp
mov
rolb
jne
pop
jp
fcoml
out
xchg
pop
pusha
push
into
rcrb
push
push
ja
xchg
imul
jne
daa
xor
cld
jg
xchg
popf
call
pop
lret
xchg
call
jge
addr16
lret
cmp
xchg
push
dec
mov
push
xchg
loop
lcall
sti
and
data16
mov
or
std
mov
inc
add
rol
mov
or
push
repz
jl
add
push
xor
cltd
jo
add
inc
cld
mov
sub
imull
push
test
idivb
jns
mov
inc
rolb
frstor
movsl
push
pop
orb
xor
icebp
xchg
repz
adc
lods
fldenv
pusha
xchg
insb
xor
sbb
aad
ss
mov
lret
out
adc
inc
enter
adc
in
adc
stos
or
imul
push
push
mov
add
repnz
idivl
ds
cs
cmp
xor
sub
mov
movsb
dec
mov
adcl
popf
insb
add
cmpl
jae,pn
ret
fcomps
mov
add
out
pop
inc
sub
mov
ljmp
fidivrs
icebp
inc
fisubs
xor
jp
mov
cwtl
stos
jg
lods
pop
and
aad
mov
fstp
daa
xchg
mov
cwtl
sbb
idiv
xchg
sbb
fwait
push
mov
cwtl
cld
xlat
mov
jb
cmp
and
arpl
test
xchg
add
mov
or
pop
call
jecxz
push
pop
mov
iret
pop
roll
dec
sub
add
arpl
rcrl
pusha
fwait
and
push
xchg
dec
or
cmpsl
arpl
mov
adc
dec
push
ljmp
popa
repz
les
fsubr
lock
testb
std
mov
sbb
push
addr16
mov
fstl
mov
xchg
and
or
in
cli
lods
inc
push
xor
imul
jmp
or
jns
cmp
jns
adc
scas
fistl
inc
mov
sbbb
push
insl
mov
scas
movsl
push
movsl
xchg
xor
adc
pop
or
mov
push
fnstcw
filds
sbb
jp
dec
enter
imul
sub
add
mov
pop
popf
loop
cmpb
xchg
sub
adc
jmp
jb
add
jo
dec
mov
cld
or
dec
inc
lret
or
cmp
mov
cmp
push
xchg
scas
cmpsl
jo
lods
or
mov
rcrb
inc
push
push
inc
mov
xchg
pop
pop
cltd
mov
lahf
xlat
pop
jle
insl
push
add
fsubr
mov
movsl
fnstsw
or
add
jg
ret
popf
pushl
push
bt
jmp
cmp
in
sub
sbbb
sub
jecxz
jnp
in
js
test
shl
push
or
mov
negb
dec
insb
dec
negb
icebp
dec
ja
test
arpl
add
loop
xchg
adc
aad
sbb
notb
xchg
hlt
xchg
sub
jne
insl
icebp
rcrl
sbb
dec
or
jo
cmp
pop
mov
mov
or
xor
cltd
scas
lods
lods
ss
scas
jnp
into
xor
je
sbb
sub
push
test
dec
lods
or
iret
push
or
fs
rolb
mov
jae
scas
jbe
lods
je
inc
adc
xor
pop
push
out
rcrl
add
ds
inc
fisttpll
in
xchg
sti
cld
int
cli
sbb
mov
int3
int
jae
enter
call
mov
xor
faddl
adc
sti
inc
adc
mov
push
outsl
adc
mov
and
les
sub
mov
jg
call
inc
bound
int
inc
xor
mov
sbbb
dec
fxch
sub
cld
xor
pop
add
addb
xor
loope
test
ret
inc
out
xor
add
inc
pop
sahf
imul
fwait
adc
xor
cs
mov
loop
dec
pop
jb
fisubrl
pop
jno
add
andb
out
mov
mov
jmp
iret
ret
adcb
out
pushf
sbb
mov
std
push
push
mov
popa
push
jge
push
rcll
aas
mov
jmp
lahf
cmp
or
inc
mov
pop
xchg
icebp
rclb
es
xor
das
jmpw
jg
out
push
inc
outsl
ret
mov
stos
xor
sbb
hlt
sub
int
or
mov
dec
bnd
rcrb
mov
int
sub
adc
jnp
ljmp
mov
rcrl
mov
imul
jbe
bound
leave
fldcw
jle
loopne
pop
outsl
or
subl
test
sbb
push
popf
pushf
mov
cmp
outsb
inc
lods
loop
addr16
xchg
lcall
cli
add
adc
rorb
or
add
aam
pop
in
shl
insb
xor
push
ret
push
xchg
mov
movsl
xor
scas
rcrl
adc
xchg
fistpl
insl
mov
and
dec
leave
jmp
fcmovbe
sti
add
in
xor
mov
lds
cwtl
jno
scas
and
les
add
mov
xchg
lds
and
push
in
adc
or
stos
imulb
adc
insl
loop
or
lcall
lret
ret
sbb
push
jnp
lock
sub
adcb
sbb
xor
pop
loope
sbb
inc
mov
int3
adc
stos
test
aas
pop
push
mov
enter
dec
cmp
sub
and
mov
cmc
icebp
and
nop
mov
cmp
or
in
pop
pop
xor
sbb
ja
sub
jp
mov
lds
push
xchg
adc
test
jg
xor
xor
inc
push
jae
imul
push
mov
push
scas
popf
push
pop
mov
pop
call
pop
sti
xor
pop
mov
lcall
xor
fdivrs
mov
xor
pop
arpl
dec
dec
ds
test
insb
std
xchg
jl
inc
iret
dec
or
inc
jne
mov
sarl
ja
rolb
idiv
aad
pop
mov
scas
loop
sbb
pop
test
pop
das
cmp
popf
je
mov
push
sbb
and
cwtl
inc
cmp
dec
mov
out
je
mov
add
data16
ja
lret
pop
test
push
pop
mov
loop,pn
out
je
leave
test
inc
jb
iret
fldenv
sub
jns
jle
fisubrs
pop
dec
pop
in
fistl
dec
jno,pt
shlb
jg
je
push
and
iret
fwait
mov
mov
bound
cmp
and
popa
out
and
push
xchg
or
es
lcall
and
mov
inc
ljmp
cmp
mov
xor
into
mov
lret
shr
cmpsl
in
mov
add
ficompl
sbb
cmpsl
or
inc
mov
pop
sub
inc
lret
aad
lret
js
int3
cltd
mov
int
in
adcb
mov
in
pop
int
mov
and
das
faddl
xor
bound
mov
jb
lret
adc
mull
or
mov
inc
dec
ret
jp
push
pushf
mov
fnstsw
add
xchg
lret
mov
ss
pop
popaw
jmp
hlt
enter
icebp
popf
or
lods
pop
lea
ljmp
add
mov
push
xor
adc
dec
out
mov
cmp
shrl
mov
xor
in
es
pop
lret
dec
mov
cmc
out
sahf
dec
dec
outsl
xchg
addr16
xchg
aam
mov
xchg
jl
adc
das
jp
aam
cld
mov
xchg
std
dec
jle
push
ja
je
stos
stc
fbstp
jle
cmp
icebp
imul
sahf
iret
cltd
es
test
dec
out
jo
lret
inc
loope
rorl
push
aas
sti
fbld
jns
cli
nop
xchg
mov
ret
aaa
ror
xchg
aas
inc
and
movsl
call
mov
ret
in
int
stos
test
jp
aad
xor
sub
sbb
jb
sub
daa
lods
in
cmpl
popf
repnz
pop
mov
pop
andl
mov
rcll
test
je
jle
inc
xor
cmc
ljmp
xor
inc
scas
int
les
mov
cmp
shlb
mov
in
mov
or
repz
fistpll
mov
rcr
dec
push
daa
xor
xchg
sarl
mov
push
flds
xor
stos
das
cmp
repnz
pop
jge
ret
hlt
xchg
in
aaa
adc
push
out
pushf
jo
and
mul
scas
xchg
cld
mov
imul
ljmp
jo
add
pop
movsb
cltd
int
ljmp
xlat
es
push
out
dec
add
stc
mov
or
cwtl
out
mov
es
xchg
call
sub
inc
dec
push
jbe,pt
pop
and
jae
push
pop
mov
mov
dec
xchg
test
cwtl
mov
inc
int3
les
mov
inc
add
fs
dec
sbb
mov
mov
sti
cmc
data16
rcrb
jnp
dec
call
jns
test
jno
dec
jns
pop
sub
stos
loope
lods
sub
adc
push
aam
pop
push
or
mov
mov
fdivrl
call
adc
add
les
les
pop
sbb
movsb
jp
pop
push
mov
addr16
jp
insl
test
cwtl
xchg
xchg
adc
dec
mov
enter
lods
push
test
mov
cmpsl
push
stos
out
leave
dec
lcall
ret
or
jle
add
scas
jp
and
jle
xor
inc
xor
push
and
bnd
test
sbb
enter
add
mov
push
aam
push
insb
ljmp
arpl
sti
and
aad
out
pop
xchg
inc
cmpb
fistps
aas
js
icebp
aas
sbb
rolb
repnz
mov
mov
jl
mov
mov
movsl
pusha
xor
jno
sub
pushfw
cmp
pusha
idiv
xor
lods
sub
sbb
test
nop
xchg
jns
push
xchg
inc
clc
out
imul
dec
pop
pusha
pop
inc
aad
pop
mov
incl
mov
or
or
mov
add
fadds
xchg
test
outsb
jne
mov
mov
cld
pop
mov
mov
cmpl
fisubrs
add
pop
xchg
inc
inc
adc
cltd
movb
clc
xchg
test
pop
fisubrl
xlat
inc
mov
pop
inc
sti
rcrl
xor
outsl
push
repz
xchg
mov
lret
pop
sti
sarl
push
xchg
push
scas
sbb
rcll
dec
adc
enter
ret
les
or
add
mov
rclb
sub
push
sahf
mov
rol
aaa
or
xor
jbe
push
cli
and
and
ja
shll
mov
js
stos
xor
xchg
pop
xchg
and
mov
or
divl
loop
push
enter
xchg
shl
mov
push
fcoml
dec
sbb
push
mov
aam
pop
sbb
out
je
je
je
and
mov
mov
shl
pop
and
mov
pop
fs
cs
mov
push
mov
cmp
and
cmp
lret
imul
xor
mov
shrb
lahf
xor
xlat
mov
aad
lret
and
arpl
lods
fs
popa
fmuls
int3
stc
inc
and
jge
mov
inc
jne
aaa
lea
dec
scas
inc
dec
sub
fcom
add
outsl
inc
inc
push
stos
enter
add
icebp
or
mov
test
inc
push
inc
stos
mov
xlat
cmp
add
dec
test
sbb
roll
xor
imul
stos
inc
sbb
int3
imul
adc
in
jae
addr16
cmp
test
adc
sub
scas
out
int3
out
in
fiadds
sbb
andb
jmp
inc
sub
cli
xor
push
or
mov
or
out
lret
pop
fidivs
push
enter
loop
lods
fstpl
and
push
fcoms
xor
jbe
fwait
lahf
sbb
or
pushf
sbb
mov
dec
and
xchg
jge
shl
mov
icebp
adc
rcrl
idivb
jbe
cmpb
mov
jmp
xor
and
repnz
jg
pop
orl
add
or
pop
add
jge
ret
pop
fisubrs
mov
fidivl
xor
adc
pop
mov
push
xor
pop
rcl
in
mov
push
sbb
dec
out
sub
sub
lret
jl
dec
addr16
sub
push
out
dec
popa
dec
mov
fistps
pusha
out
mov
mov
xchg
aam
icebp
and
xchg
mov
inc
addr16
mov
lds
std
lret
insb
loop
cltd
sbb
sarb
ret
sub
xor
pusha
jo
not
icebp
sahf
pop
jg
std
shll
ljmp
pop
inc
push
jo
xor
negb
loopne
loopne
fwait
dec
neg
lea
dec
jmp
mov
test
push
xor
push
xchg
in
test
jns
aad
andl
aaa
mov
mov
into
bound
xchg
out
ss
ja
jo
imul
subl
cmp
data16
mov
scas
out
jae
fsubrl
addr16
pushf
divl
pushf
and
shrl
dec
clc
inc
int
out
pushf
enter
push
out
cmp
ds
sbbl
push
sbb
push
test
mov
fnstenv
sub
loop
gs
punpcklwd
jb
sub
es
in
in
cli
stc
adc
jecxz
dec
push
and
lods
mov
outsl
shlb
js
mov
jmp
mov
pop
sbb
mov
fnstsw
lret
and
call
lret
std
aas
je
xchg
jl
fidivrl
aad
jbe
xchg
sbb
push
mov
and
xor
add
clc
aad
decl
and
xchg
popf
mov
ret
push
sbb
inc
inc
cmp
sbb
in
out
mov
stos
adc
mov
stos
orb
pop
mov
adc
fstps
or
jno
xchg
shr
inc
lcall
push
pop
push
xlat
xchg
or
add
pusha
pop
lea
push
insb
add
jg
insb
or
xor
add
xchg
leave
pop
icebp
scas
cmc
rolb
pop
xchg
and
lea
decl
inc
and
insb
movsl
cld
adc
pop
xchg
rolb
addr16
insl
mov
orb
or
mov
mov
mov
mov
cli
add
stos
orl
stc
jmp
lods
push
aam
xchg
clc
iret
in
cmpsl
add
es
mov
outsl
xor
jle
aaa
mov
dec
stos
inc
mov
push
in
scas
and
push
test
daa
mov
pop
add
inc
mov
dec
out
adc
pop
scas
enter
sub
sbb
insb
push
jmp
jbe
sbbb
lcall
scas
out
scas
inc
popf
jns
inc
stc
std
inc
lods
push
jecxz
stos
add
in
push
bound
mov
cltd
ss
fcmovu
hlt
fisttpll
aam
rcrl
pop
jne
pop
xchg
adc
jb
dec
cltd
out
or
adc
mov
cmp
push
insb
xchg
addb
xor
mov
mov
mov
lea
add
push
hlt
mov
aas
jmp
orl
or
dec
icebp
dec
jnp
lea
push
sub
loope
je
jp
shrl
sbb
push
xchg
add
or
movsb
and
dec
test
popa
mov
sbb
xchg
std
ja
mov
inc
cmp
jecxz
lret
sbb
sbb
mov
sahf
sbb
jno
sub
icebp
loope
lret
add
sbb
sbb
ret
fwait
rcl
push
push
xor
cmp
das
insb
arpl
ljmp
fists
mov
andb
dec
adc
insl
outsl
add
push
pcmpeqb
mov
cmp
shrl
scas
in
xor
leave
dec
push
idiv
pop
mov
mov
and
iret
add
shlb
inc
or
leave
push
sbb
push
cmp
sti
pop
sbb
or
into
aaa
bts
rcrl
loope
les
xor
mov
jge
jb
push
mov
sahf
stc
jg
mov
xor
mov
cli
shrb
push
jo
sub
in
lea
mov
push
aaa
cmp
jbe
cmp
mov
mov
inc
jb
sub
xor
add
addr16
shufps
aaa
pop
mov
cwtl
pop
or
sub
push
xor
pop
fcomps
push
mov
out
xchg
inc
andb
mov
jl
cmp
mov
inc
pop
loopne
clc
push
or
cmp
pop
cli
xchg
and
lahf
lods
fsubrl
add
cli
mov
enter
aas
in
or
std
rcrl
gs
rcrl
xor
add
ja
cltd
lods
pushf
clc
and
nop
jge
and
sub
and
cltd
pop
test
mov
imul
mov
pushf
push
push
pop
popf
xchg
les
insl
enter
push
std
scas
and
icebp
mov
jbe
or
cmp
pusha
mov
test
orl
sub
nop
push
inc
mov
stos
add
fstl
or
xchg
mov
imul
push
movsb
mov
or
shl
stos
xor
and
fs
xlat
cwtl
out
xchg
inc
mov
cmpsl
lock
mulb
xchg
dec
jnp
sub
xor
push
mov
inc
test
push
ret
out
dec
inc
add
xchg
xchg
pop
adc
loope
shlb
cwtl
lock
mov
sbb
and
sahf
adc
inc
ja,pt
jno
jb
fwait
insl
push
mov
dec
dec
cs
shl
xor
cmp
ja
lret
jae
xor
dec
pop
pop
xchg
arpl
mov
sub
leave
lcall
mov
andb
aad
movsl
movsl
ss
outsb
push
xchg
fsts
mov
fidivs
nop
std
pop
int3
incb
lds
mov
or
fisttpll
cmpsb
cmpsl
mov
ss
jns
push
lods
adc
add
xchg
add
sub
cmpsl
jns
jns
shlb
cmp
dec
daa
pop
fsubs
stos
aam
ds
jne
add
pop
mov
dec
ret
fnstenv
outsl
add
shl
add
adc
xchg
bound
sbb
xchg
mov
insb
sub
enter
jp
iret
leave
faddp
ret
cmp
xor
mov
iret
nop
xor
mov
jecxz
es
cwtl
popa
jae
pop
and
outsl
mov
push
mov
mov
or
adc
mov
shll
and
dec
mov
mov
and
push
mov
xor
mov
repnz
stos
sbb
mov
xchg
cli
push
repnz
pmullw
mov
out
mov
mov
shlb
mov
mov
jg
cvttps2pi
fwait
roll
shrl
out
jno
mov
cmpsb
mov
adc
in
xchg
push
aas
adc
push
nop
add
pop
xlat
and
gs
test
cmp
dec
inc
cld
aad
das
cld
mov
pop
aaa
fisubrs
sbb
cs
test
cmp
jo
push
adc
or
dec
push
pop
pusha
jno
cmp
fcoml
xchg
push
out
out
sub
sbb
mov
or
ss
sti
mov
in
dec
icebp
dec
lock
push
ss
jbe
loope
dec
sub
mov
sbb
je
cs
or
jecxz
sub
adc
lret
lcall
push
or
push
insl
add
in
les
xchg
adcb
dec
leave
inc
sbb
xchg
sbb
sahf
push
ficompl
cmpsl
imul
ljmp
xor
jmp
mov
mov
dec
xchg
lahf
push
sbb
mov
jo
out
roll
lret
jmp
xchg
sbb
dec
cmp
adc
push
outsl
pop
or
push
add
sub
add
lea
jb
inc
cmp
mov
pushf
fbstp
imul
int3
adc
add
cmpsb
fidivl
aaa
inc
jp
dec
leave
fs
sub
mov
mov
push
ret
repz
lods
sti
pop
or
pop
fs
push
jge
inc
jb
mov
pmaxub
xor
mov
loope
push
js
and
xchg
or
inc
int3
inc
mov
or
and
sub
adc
sub
cmp
pop
sub
inc
in
int
push
addr16
cmp
iret
repnz
sbb
jmp
jl
xchg
iret
faddl
xor
xchg
sub
sub
mov
cmp
inc
xchg
fdivl
aas
sti
nop
ja
aam
jnp
movsl
mov
mov
hlt
jp
jl
inc
imul
sbb
mov
mov
xor
scas
xor
jmp
movsb
mov
sub
inc
sub
outsb
fisubrs
lods
lcall
push
add
rcrb
scas
mov
in
ret
nop
and
add
repz
sub
mov
int3
cmp
mov
xor
js
scas
mov
mov
push
inc
xchg
dec
insb
pop
repnz
movsb
push
lret
xlat
sti
cmpsl
jbe
lret
daa
push
jg
push
cs
cmp
cmpsb
and
lret
ret
sub
mov
xchg
cmp
add
pop
adc
pop
fisttpl
sub
test
xor
lods
or
into
and
adc
cwtl
sbb
and
scas
ret
std
add
mull
and
xchg
dec
cld
fbld
stos
or
fidivs
aas
mov
jp
xchg
sub
push
or
lea
ss
mov
mov
adc
xchg
lds
sub
test
test
add
mull
nop
pop
aam
std
inc
mov
jl
out
mov
leave
pusha
jecxz
and
pop
dec
jb
pusha
cmp
addl
push
adc
cmp
or
lcall
ja
pop
xorb
insb
jb
ja
or
or
sub
push
bound
push
pop
push
jle
aas
shll
vmwrite
pop
xchg
nop
in
xchg
mov
pop
cld
mov
movsl
push
lcall
pop
fwait
mov
mov
xchg
xbegin
sbb
mov
insb
mov
jl
jmp
lea
or
sar
cs
push
test
ljmp
cs
out
dec
adc
stos
or
dec
xchg
shlb
pushfw
test
mov
xchg
pop
dec
dec
jmp
xchg
test
sub
add
inc
shlb
mov
outsb
pop
insb
adc
xchg
xchg
adc
lret
lea
das
insb
ja
inc
add
inc
rorb
xchg
clc
loopne
mov
cmp
xor
xor
pop
jmp
sbb
jnp
pop
mov
movsb
add
cli
cs
loopne
cmp
fsub
outsb
movsl
mov
dec
inc
mov
out
jg
or
push
lcall
mov
int
lods
int
cltd
cmpsb
add
sub
and
mov
mov
jmp
sub
mov
add
repnz
test
cwtl
cs
fiaddl
mov
sub
pop
inc
rcr
or
push
pop
xchg
jnp
fcomp
cmpsl
movsb
mov
imul
repz
fimuls
popf
rolb
add
push
lods
insl
pop
in
dec
add
pop
mov
mov
mov
in
jne
cmp
adc
push
stos
jae
dec
pop
aad
inc
cmc
add
inc
jo
cwtl
push
dec
jmp
xchg
popa
fisubrl
pop
cs
imul
out
notb
and
insl
jno
inc
loop
sarl
fimull
sbb
data16
inc
sbb
pop
aam
popa
dec
fistl
dec
inc
mov
jne
push
js
lods
mov
adc
into
xor
xor
add
pop
add
pop
jbe
and
xchg
sti
or
mov
nop
cmp
sub
cmp
mov
pop
imulb
add
lods
imul
int
in
mov
aas
lock
add
push
in
mov
fwait
les
sub
pop
pop
mov
or
iret
lock
or
mov
push
cs
outsb
xor
cmp
jo
sar
inc
popf
popa
cmp
xchg
movsb
push
into
push
jecxz
mov
outsl
push
fstpt
les
sub
push
out
pop
mov
pop
das
and
js
bound
insl
fdivrs
jp
push
outsl
mov
lea
rorb
mov
stc
mov
adc
cld
test
bound
mov
mov
fdivrs
xor
push
jmp
adc
movsl
dec
sbb
mov
xchg
pop
jns
push
lock
jge
cmp
cmp
cltd
repnz
cld
jbe
stc
lret
xchg
jle
popa
das
movsb
shl
jb
scas
ret
dec
or
into
add
sub
and
adc
mov
lock
or
mov
and
cli
popa
hlt
lahf
inc
sbb
rorl
not
leave
nop
lahf
lods
inc
pop
cmp
cmp
push
mov
jmp
mov
ret
gs
pop
sbb
mov
push
test
fsubr
movsl
or
outsb
and
loopne
and
cld
lods
bound
repz
out
mov
fsubrs
xor
fistps
xchg
inc
pop
enter
adc
jno
inc
inc
jmp
lret
or
les
dec
jno
mov
xor
cwtl
add
dec
add
add
cmp
cmp
inc
data16
inc
lret
sbb
add
pop
xchg
sbb
push
jle
enter
sub
pushf
clc
scas
jg
mov
cmp
std
rorb
popf
movsb
mov
sub
cmp
mov
movsl
loop
test
sbb
lcall
xor
xchg
aas
cli
stos
xlat
ds
pop
adc
imul
mov
mov
xor
and
roll
fsubrs
dec
ret
push
push
xor
dec
js
in
adc
in
aam
sub
cltd
roll
sbb
daa
rcll
push
mov
outsb
xor
mov
xor
jl
leave
add
arpl
and
in
push
icebp
xorl
xchg
inc
push
push
xchg
call
imul
aam
sub
push
das
dec
push
mov
lds
out
test
mov
dec
clc
dec
gs
in
hlt
aaa
int
in
xchg
push
dec
outsb
and
mov
mov
out
jecxz
dec
cmp
lcall
adc
scas
jno
cmp
add
mov
push
cmp
stos
jne
fwait
add
imul
dec
xchg
mov
sub
add
rorl
dec
outsb
inc
clc
mov
daa
ja
sub
inc
shr
comiss
in
mov
mov
sub
outsl
dec
push
cmp
inc
shl
mov
dec
in
mov
out
xor
mov
xchg
ja
out
jb
imul
test
bound
push
sbb
mov
cmp
clc
jnp
jnp
mov
shlb
xchg
loopne
push
xor
inc
cld
fnstcw
aam
cs
mov
rcl
or
dec
bound
jnp
pusha
aad
out
jnp
gs
jge
jmp
cmp
mov
mov
mulb
cmp
jno
dec
sti
scas
push
or
jmp
push
lea
rcrb
xchg
pop
mov
xchg
fadd
jle
xchg
mov
adc
xchg
in
xchg
aam
push
cli
sahf
jo
xor
testl
pop
cwtl
aam
push
mov
mov
leave
push
icebp
je
ss
in
out
push
push
and
xchg
pop
nop
lahf
pop
or
xchg
sbb
scas
cs
aaa
testl
dec
add
pusha
shr
add
and
dec
sti
push
in
mov
sbb
adc
aam
dec
leave
cs
jne,pt
mov
pop
jo
incb
jl
xor
outsb
sbb
jp
jne
inc
bound
push
add
or
xor
popa
int
dec
bound
dec
js
mov
addr16
pop
mov
pop
xchg
ret
das
push
sahf
jnp
mov
or
mov
fimuls
sbb
pop
out
jmp
ret
mov
cwtl
aam
lret
jmp
cmp
daa
add
fsub
movb
sub
jmp
mov
icebp
inc
enter
lcall
stos
in
out
inc
insb
popa
es
cmp
std
test
add
push
jmp
and
lea
or
int
mov
or
xchg
mov
cltd
test
fimuls
aas
fwait
or
sar
xor
fists
pop
push
sbb
data16
sub
jae
add
sbb
or
dec
jl
es
mov
mov
pop
inc
xor
sbb
push
xor
and
lods
out
dec
and
sbbb
jae
xchg
imul
mov
adc
lret
xchg
mov
in
jge
inc
imul
int3
mov
add
outsb
adc
and
dec
xchg
mov
daa
adc
loope
hlt
movb
xor
push
xchg
xor
fisubs
lret
cmp
decl
scas
das
push
addb
ffreep
inc
jo
jg
jmp
push
movnti
inc
and
jb
mov
dec
jecxz
data16
add
mov
sahf
mov
push
cmp
popa
xlat
sahf
sub
sbb
inc
out
mov
and
ds
repnz
es
out
lret
iret
push
sbb
xchg
mov
repnz
loope
and
aaa
cmp
inc
push
int
lods
cmpsb
jg
pop
adc
mov
sbb
xchg
pop
aad
test
xor
sbb
sbb
les
inc
int
push
mov
jne
mov
icebp
xlat
sub
pop
test
popa
repz
or
insl
push
hlt
xchg
scas
enter
sbb
int3
xlat
sahf
mov
cmpsl
test
call
push
popa
in
aas
test
mov
in
iret
mov
jl
ljmp
in
mov
and
fistl
sti
cmp
xchg
stos
lret
xchg
cmpsl
addr16
js
loope
adc
add
adc
jbe
xor
lahf
adc
stc
hlt
out
fwait
hlt
pop
fistpl
or
scas
aaa
push
aaa
orl
inc
data16
mov
xlat
cmpsb
and
test
ljmp
adc
xchg
test
cmpsb
dec
adc
mov
ljmp
outsl
xor
hlt
in
test
xorl
adc
stos
repz
aaa
push
std
jo
icebp
sahf
das
sub
lret
push
push
dec
pop
or
and
and
cli
shl
sub
or
add
add
adc
inc
vphsubwd
add
mov
repz
lock
push
or
push
adc
in
loop
jo
cmp
mov
push
mov
shrb
mov
sub
loope
mov
es
in
jbe
ret
pop
pop
pop
xor
adc
enter
addr16
or
jne
cltd
inc
movsl
aas
imul
aam
not
inc
sbb
push
jmp
hlt
int
fstp
scas
xchg
xchg
inc
or
out
jnp
imul
sbb
stos
inc
xlat
movsb
jecxz
aaa
ficoms
ds
sbb
add
or
xchg
fisubl
mov
fisttpl
inc
leave
dec
add
dec
xor
jg
test
add
lahf
jg
or
sbb
lahf
xchg
xor
cmpsb
es
xor
sub
sbb
out
xchg
sub
xor
jne
subb
fidivs
shr
pushf
lds
stc
inc
mov
mov
loopne
repz
aaa
adc
fists
shl
call
pop
sbb
dec
mov
test
lret
jmp
vpaddw
sbb
fbld
xorb
bnd
mov
push
fcoml
leave
xchg
enter
int
push
rorb
sbb
pop
imul
fwait
push
pop
adc
dec
push
int3
arpl
and
push
lcall
adc
mov
loop
cmp
test
rcr
sarl
pop
mov
sub
jle
mov
pushf
sti
push
daa
lahf
lret
imul
mov
dec
loopne
dec
cmp
push
jnp
out
ds
mov
arpl
or
push
cmp
fs
fsts
xlat
mov
ret
out
xor
mov
loope
add
lret
mov
push
movsb
repz
add
outsl
mov
xchg
fstpl
cmpl
and
push
mov
pop
loopne
cmp
int
sbb
rcr
jle
cmp
dec
push
jle
sti
adc
xchg
mov
sarb
loope
push
add
lcall
movsb
xor
mov
push
pushf
or
mov
in
int3
subb
rcl
out
jl
out
or
pop
mov
sub
daa
cmpsl
aaa
outsl
rclb
cwtl
repz
or
rolb
lahf
mov
mov
arpl
mov
fdivs
push
mov
push
adc
ljmp
scas
pop
or
into
cmpsl
push
shlb
or
adc
inc
sub
xchg
lea
out
sub
je
in
jg
mov
cmpsl
jle
pop
adc
mov
push
pop
push
std
sbb
push
mov
es
fisttpl
jbe
jmp
lods
out
add
pextrw
add
xchg
jecxz
jmp
mov
orl
decl
adc
mov
nop
aad
ljmp
addr16
sub
pushl
push
sarl
ljmp
jbe
cli
adc
aaa
mov
js
xor
dec
call
pushf
adcl
pop
insb
loopne
or
rclb
test
and
imul
stc
popa
push
jge
shrl
push
pop
jne
mov
mov
outsb
sbb
ja
sbb
loop
mov
fldenv
xchg
popa
repz
mov
cmpsl
pop
cmp
xchg
insl
mov
sbb
pop
xchg
dec
cld
nop
lcall
jb
sbb
mov
sti
adc
push
int
and
test
hlt
inc
into
movsl
xor
scas
pop
in
mov
loop
in
pushf
jb
pop
cmpl
sub
test
or
jmp
push
inc
mov
mov
dec
cmp
lods
stos
add
mov
aaa
call
addb
add
push
pop
or
stos
cmc
inc
into
mov
mov
xlat
lcall
in
xchg
shll
fimull
mov
aad
imul
ret
rorl
xchg
lcall
iret
push
mov
mov
jge
jle
jg
jnp
cwtl
aad
insb
pusha
pop
jo
mov
in
jmp
fists
cmp
out
pop
xor
movsb
cmp
jmp
lret
gs
xchg
insb
lret
mov
mov
mov
lock
sub
fs
std
xor
dec
scas
jle
jbe
mov
jp
lret
popa
mov
sbb
lcall
add
xchg
out
ficompl
inc
lods
mov
jg
fmull
lods
mov
jb
mov
mov
jae
push
fwait
push
lahf
adcb
cmp
lods
fsts
sub
or
jp
lret
fwait
push
out
clc
cwtl
push
sub
test
jnp
lcall
adc
stos
das
leave
fsubs
cli
in
test
ret
out
out
cmpl
dec
pop
or
aas
and
inc
sbb
add
dec
aam
dec
lock
and
mov
mov
cmp
loop
inc
or
je
lea
enter
mov
adc
mov
add
adc
sar
into
jno
dec
inc
ds
jno
orl
outsl
mov
or
jbe
mov
stos
and
iret
adc
fsubs
xor
out
daa
andl
sub
and
dec
sbb
mov
js
inc
mov
add
bound
add
push
mov
lea
cmp
shrl
arpl
rcrl
push
lahf
mov
mov
fwait
push
hlt
divl
and
sub
popa
adc
fmul
test
sub
aad
iret
xor
adc
mov
jo
jns
push
pop
lcall
ss
out
int
cmp
daa
xchg
adc
jnp
loopne
xor
jb
test
shrb
xor
lock
xlat
or
cmpsl
jge
leave
lea
ja
les
lahf
jae
add
xchg
pop
sub
xor
pop
jmp
out
pop
sub
mov
testb
sti
inc
sub
push
andb
in
xor
and
stos
mov
enter
mov
inc
xchg
iret
dec
pop
ja
pavgw
lds
rcll
cmpsl
adc
shll
and
das
fnstsw
mov
add
pop
mov
push
mov
sti
pop
mov
shrl
paddd
inc
dec
addr16
stos
xor
jg
std
xor
push
cli
imul
inc
hlt
mov
imul
iret
out
ret
push
add
sahf
jo
dec
mov
xor
leave
add
adc
push
lret
sarb
imul
cmp
xor
loop
xchg
cmp
cli
or
mov
mov
sub
sbb
push
lret
and
pop
add
out
add
std
lock
and
pop
lock
cmp
pushf
push
push
add
int
out
cld
lods
fcompl
lret
sub
and
test
adc
pop
loop
mov
lods
sub
rcl
out
not
adc
mov
push
movb
cwtl
add
cs
lods
movsb
add
daa
cwtl
cld
jmp
movsl
adc
outsb
push
shll
imul
pop
fs
push
lods
int3
imul
jmp
test
leave
sub
dec
inc
xor
jecxz
jbe
loope
int
sub
lret
jns
push
aam
stos
xor
mov
dec
xchg
in
mov
push
fisttpl
and
adc
popa
pop
jnp
stos
inc
popf
xor
jne
mov
lods
out
mov
xchg
int
sub
mov
outsl
push
test
mov
lret
pop
js
es
out
cmp
movsb
testl
jns
xor
insb
rep
clc
outsl
cmp
mov
mov
test
lret
add
sub
cs
loope
jle
cli
push
sbb
xor
cmp
aas
jo
and
iret
cld
ja
mov
lcall
inc
mov
mov
popf
and
cmp
jns
xorl
mov
xchg
lret
and
jge
xchg
xlat
xchg
xchg
dec
pop
push
popa
mov
fcoms
mov
xor
xor
out
ret
decl
jae
inc
push
lret
inc
jnp
test
dec
jbe
pop
pop
sbb
cmp
push
mov
test
stos
fidivl
dec
inc
sub
testb
jns
sub
shll
filds
fmulp
fidivrs
push
sbb
shr
mov
xlat
enter
enter
movsb
adc
cmp
xchg
int3
pop
dec
mov
jge
outsl
push
shrb
sete
sbb
test
mov
clc
adc
repz
and
leave
jl
xchg
xor
pop
sub
popf
xchg
mov
mov
in
xor
iret
enter
dec
cld
push
inc
call
mov
ljmp
cli
xchg
insl
es
lret
pop
mov
mov
xlat
adc
outsb
add
jle
call
aad
pop
int
and
das
xchg
cmc
repz
fldenv
add
push
and
outsb
inc
mov
movaps
mov
jl
stos
sti
jle
xlat
sbb
fldl
adcb
lret
push
jmp
inc
movb
je
adc
ja
aam
pop
push
loope,pt
cmp
adc
mov
xchg
cltd
lds
dec
inc
inc
cld
sbb
in
mov
call
aad
mov
cld
fcompl
xchg
fadd
inc
rcr
inc
mov
cmp
or
pop
pop
rcll
mov
repnz
testb
cmp
dec
rcrl
lret
imul
lcall
fstps
ficompl
pop
je
cli
mov
add
or
dec
sub
daa
pop
pusha
xor
iret
xor
ljmp
mov
inc
shlb
jne
lods
daa
out
sub
into
pop
ret
movsb
adc
sysret
ljmp
shll
mov
fcmovne
or
cmpsb
sub
xor
jnp
sub
mov
divb
pop
cmp
and
dec
xlat
adc
cld
leave
mov
mov
outsb
push
xchg
push
leave
mov
cwtl
dec
add
decb
jmp
popa
jp
scas
dec
push
cli
loop
cli
xlat
js
or
jecxz
cld
jg
ret
mov
sub
daa
mov
popl
out
in
je
push
jecxz
jecxz
mov
test
shll
test
shlb
and
daa
xchg
inc
std
jns
les
les
enter
sub
mov
jne
fldcw
rclb
pop
out
xor
sbb
sbb
in
add
sub
jl
cltd
xor
insl
aas
stos
mov
scas
inc
or
mov
out
ss
loop
cmc
adc
xchg
mov
push
or
test
ljmp
cmpsl
or
repnz
sub
mov
test
repz
loopne
loop
dec
jmp
movsb
mov
dec
jecxz
fwait
popf
popa
scas
dec
inc
inc
iret
or
sbb
jo
shr
and
xor
cwtl
clc
adc
add
sub
sub
jnp
xor
inc
insl
push
cmc
imul
scas
aad
ja
mov
adc
frstor
rcll
mov
mov
jo
xchg
in
nop
ljmp
xchg
cs
xor
test
xor
mov
lock
and
outsb
jns
daa
movsl
pop
je
mov
shrb
loope
xorl
jb
std
es
pop
mov
add
push
add
ds
lock
dec
rorl
cmpsb
push
stos
loope
push
lahf
call
mov
sbb
push
and
adc
movsb
aas
jl
data16
fs
sub
daa
mov
and
xlat
insb
jns
pop
and
hlt
pop
jl
or
mov
cmp
rorb
xchg
push
pop
mov
std
sub
sbb
cli
fwait
dec
insb
xchg
icebp
push
pop
popa
popa
pusha
jne
sub
mov
pop
fisubl
in
mov
inc
es
pop
arpl
es
aas
cmp
nop
lahf
repz
aas
sbb
mov
sub
test
pop
dec
pop
loope
push
mov
ret
mov
aad
sub
or
mov
inc
mov
int3
mov
scas
xlat
add
push
dec
xor
mov
mov
jg
xchg
xchg
je
jle
ss
jns
cmpsl
mov
xlat
insl
sbb
sbb
pushf
dec
lret
mov
xchg
cmpsb
je
cmp
popa
inc
fwait
xchg
xor
jge
sahf
push
push
mov
jecxz
jo
fcoms
lahf
es
mov
fdivrl
mov
daa
xchg
mov
movntq
stos
lret
push
shlb
xor
sub
fisubrs
cs
sbb
stos
jg
jmp
mov
mov
jmp
repz
mov
stos
jle
cmp
sbb
mov
and
adc
movsb
cmp
popf
jbe
xchg
mov
cmp
aas
inc
test
cmpsb
jnp
shl
ret
mov
sub
xor
sbb
pusha
scas
sbb
pop
mov
stos
call
pop
or
adc
dec
insl
inc
je
fimull
aam
insl
lock
cs
cld
stos
dec
jge
sbb
lds
or
mov
test
int3
int3
push
xor
stc
cmpsl
in
xchg
xchg
xchg
pop
subb
push
hlt
or
lret
cmp
jl
addr16
push
jae
sub
mov
inc
fidivrl
je
sbb
out
add
adc
data16
sbbb
repnz
xor
sub
aaa
insl
xor
cmp
add
sub
aaa
addr16
cmpsl
shlb
icebp
aas
adc
aaa
inc
repnz
mov
mov
push
ret
sbb
insl
rcr
pop
xor
cmpsl
pop
insb
dec
paddb
dec
stos
sub
jb
cmp
shl
addl
cmpsb
or
mov
dec
dec
pop
popa
sbb
addb
lret
jge
mov
lret
pop
xchg
xor
mov
andb
jnp
out
in
dec
adc
repnz
push
imul
cmp
scas
aaa
pop
divb
and
adc
ret
inc
leave
cmp
sbb
xchg
lcall
cmpsb
nop
mov
es
pusha
rcll
mov
icebp
add
pushf
fmul
add
jge
int
adc
cmp
dec
cmp
popl
jae
lods
mov
ja
cwtl
xor
and
arpl
pusha
inc
ds
leave
pop
daa
xchg
jbe
scas
mov
push
test
and
repnz
aam
cli
pop
mov
ret
sub
mov
fimull
xor
mov
ljmp
xchg
pushf
out
mov
push
cmp
imul
dec
outsb
push
test
repz
shll
iret
jno
xorl
push
mov
imul
insb
pop
xchg
jecxz
mov
xchg
fst
lret
es
jae
fcmovnbe
test
int
cli
and
in
stos
incb
add
cmp
cli
pop
mov
xchg
jb
pop
into
mov
mov
ss
lds
pop
push
dec
mov
xchg
and
ljmp
jl
inc
aas
mov
pop
ja
aaa
and
cld
lcall
aad
sarl
insl
mov
push
push
pop
pop
push
xchg
dec
lcall
loopne
xor
fst
push
or
and
mov
cwtl
pop
outsl
getsec
mov
dec
and
push
in
rclb
mov
xchg
xor
jg
push
cmp
or
in
cmp
xor
mov
push
into
xchg
fcomip
shll
push
inc
out
rcll
js
das
fnclex
idivb
xor
cmp
loopne
js
mov
popf
pop
pop
xlat
mov
scas
std
inc
sbb
js
lods
movsb
in
adc
sbb
aam
add
xor
neg
lods
lcall
xchg
mov
out
jg
sub
add
mov
addr16
scas
outsl
cwtl
cmc
push
add
mov
jle
xor
and
data16
pushf
test
dec
xorb
jp
ret
iret
dec
daa
fcmovnu
mov
aam
pop
insb
xchg
ss
add
dec
xchg
mov
dec
fsubl
inc
arpl
ss
pop
insl
ja
adc
mov
and
sbb
ljmp
pop
cmp
scas
mov
mov
sub
les
fstl
xchg
xor
and
nop
cmp
xor
push
xor
mov
or
add
ret
adc
shl
sbb
cmp
add
mov
mov
inc
shr
stc
shl
dec
cs
repz
sub
std
shl
adc
and
insl
insl
arpl
aad
pop
sub
xlat
arpl
shrb
mov
mov
imul
jns
stos
shll
lahf
sbbb
into
adc
cltd
cltd
push
add
rcrb
fnstsw
xchg
rolb
adcb
adc
shrb
lahf
cmpsl
imul
out
add
aaa
mov
lea
call
xchg
fsubl
sti
jle
or
inc
sbb
rcl
cmp
test
mov
push
loopne
xlat
pop
in
cmc
inc
jp
add
lock
in
lea
adc
push
add
aam
sub
push
imul
jmp
mov
ja
push
adc
xor
inc
or
mov
fstpt
and
stos
cwtl
lds
cmc
ret
jg
out
pusha
adc
inc
mov
in
mov
cltd
push
pop
shrb
cli
mov
cmp
clc
add
jne
jns
dec
dec
and
add
jb
cwtl
mov
dec
into
aaa
repnz
call
int3
popa
popf
dec
push
shrl
enter
push
xchg
les
filds
sbb
push
pop
jmp
mov
ret
pop
mov
or
cmc
testl
push
mov
or
fldt
adc
xchg
sarl
pop
mov
sub
xlat
pop
aas
dec
jns
aas
cld
lahf
xchg
push
jbe
out
repnz
mov
rol
pop
bound
cli
iret
aas
dec
es
les
imul
lahf
add
jno
lea
idivl
in
mov
xchg
nop
pop
mov
sub
xchg
into
int
xor
pop
mov
adc
mov
loopne
or
hlt
outsb
fdivrp
daa
inc
rcrl
push
push
cmp
mov
mov
dec
xchg
adc
out
jmp
jb
in
in
xchg
or
nop
sbb
shlb
dec
xchg
shll
loope
adc
and
adc
int
xor
mov
test
inc
pop
inc
dec
stc
mov
push
gs
scas
mov
or
idiv
rorl
cmp
pop
mov
xchg
int3
sub
or
fsubs
out
mov
mov
stos
or
lret
dec
lods
sbb
pop
sahf
js
inc
shlb
outsb
jbe
adc
movsb
or
push
mov
jae
or
push
mov
sub
xchg
push
es
movsl
cmp
push
add
dec
loop
xchg
dec
test
leave
push
push
sbb
cmp
and
or
and
push
push
mov
cmp
mov
pop
xor
adc
pop
fldenv
aam
enter
fiaddl
rorb
pop
inc
mov
lahf
shrl
adc
nop
sbbl
mov
jle
inc
and
mov
jns
jae
jmp
mov
or
lcall
jge
jmp
lea
dec
cltd
sbb
jb
pop
pop
scas
cmp
dec
ret
dec
sbb
pop
imul
lock
enter
and
mov
ret
dec
lret
xor
sti
in
sbb
shlb
dec
jnp
iret
dec
mov
insl
adc
xor
mov
cmc
lods
xor
xchg
mov
cmp
sbb
fcoml
pop
xor
mov
xor
xchg
lods
cwtl
ja
cmpsb
cmp
xchg
jo
inc
cmp
xchg
outsb
scas
jns
xchg
ja
mov
mov
shlb
imul
add
mov
lcall
dec
sbb
frstor
mov
enter
sahf
pop
sbb
jnp
popf
add
push
mov
lds
js
cmp
mov
cwtl
int3
sti
movsb
fs
inc
xor
outsl
mov
out
mov
push
add
lret
mov
sub
fisubs
mov
imul
lds
fcomip
cmp
xor
mov
repz
andl
data16
or
sbb
jmp
pop
pop
add
push
sti
out
sub
shlb
fcomp
aaa
out
sbb
jae
dec
jb
mov
pop
dec
test
mov
adc
repz
adc
mov
add
mov
cmp
sbb
fisubs
imul
shrb
insl
xor
mov
sbb
push
je
xorb
jbe
stos
data16
lds
inc
ljmp
xchg
xor
adc
mov
daa
inc
push
test
loop
lret
std
cltd
int3
xor
pusha
adc
and
test
nop
sub
inc
movsb
insl
out
arpl
and
and
xchg
lods
cmc
aad
repnz
mov
inc
ficoms
push
xchg
fisttpl
cmp
and
pop
nop
ljmp
into
cmp
loope
fidivs
cmp
sub
push
test
sbb
inc
mov
cmpsl
int
xchg
ror
jecxz
mov
outsl
nop
or
cmp
movsb
push
adc
mov
mov
mov
mov
cmp
ds
andb
jp
and
arpl
mov
sbb
jge
jecxz
ljmp
adc
out
testb
dec
addr16
sub
aad
xorl
loop
push
mov
icebp
mov
xchg
xchg
lret
call
pop
out
xor
addr16
lock
lds
js
dec
fsubl
rclb
mov
ret
mov
andl
sub
or
out
test
cmp
xor
push
daa
lods
arpl
stos
push
fnstenv
xor
sub
ret
push
pop
inc
enter
inc
mov
mov
imul
cmp
xchg
mov
inc
repz
out
inc
xor
mov
mov
ret
or
mov
jecxz
shl
cmc
dec
jno
push
jnp
fdiv
xchg
pop
sbb
sbb
ljmp
filds
inc
mov
mov
test
pop
sahf
mov
popa
addb
push
jno
pushf
dec
add
mov
jle,pn
and
push
lret
xor
shrl
cld
hlt
dec
roll
aaa
movsb
or
xchg
mov
mov
push
add
cmc
xchg
fimuls
leave
xchg
nop
rorl
fimuls
out
push
mov
divl
rcrl
push
jl
test
sbb
outsb
xchg
xor
stos
adc
add
push
movsb
or
loopne
and
and
outsb
cltd
jns
sbb
std
pop
pop
mov
push
xor
push
dec
and
mov
sti
cmc
pop
dec
sub
jb
inc
dec
adc
stos
fcmovne
sub
jb
pusha
cmpsl
nop
fcoms
hlt
jmp
lea
xchg
inc
cmpsl
leave
lret
das
pop
addr16
adc
xor
add
push
xor
addr16
sub
dec
jg
or
sbb
aaa
sub
outsb
sub
mov
or
dec
daa
loop
mov
sti
pop
mov
adc
push
adcb
jmp
cli
aad
ret
sbb
push
pushf
hlt
mov
sub
inc
orl
popa
jbe
mov
fcmovnb
nop
sbb
sub
push
pop
mov
rorl
jl
sarl
inc
mov
sbb
int3
pop
les
lock
mov
cmp
mov
out
mov
pop
and
inc
jecxz
mov
insl
fs
mov
mov
test
pop
fcmovu
lods
add
fxch
push
hlt
pop
mov
inc
jbe
mov
push
sbb
jp
movsb
lahf
mov
clc
arpl
adc
dec
clc
or
xchg
jbe
shr
test
xor
dec
pop
jno
jge
sub
repz
call
inc
sahf
pusha
mov
ss
push
rorb
cmp
push
and
not
lcall
mov
gs
lcall
rorl
pop
outsl
adc
or
loopne
inc
push
repz
lahf
sbb
or
inc
test
cld
es
jae
jno
es
inc
jg
shrb
outsl
and
arpl
pop
adc
lcall
mov
sar
fs
push
call
push
dec
hlt
push
cli
mov
stos
decl
inc
out
add
cmpsb
movsl
popa
adc
or
fistl
pop
stos
mov
jbe
sarb
mov
ja
pushf
and
inc
mov
dec
jno
sub
inc
cwtl
sahf
addr16
dec
pop
aad
fisttps
mov
sub
inc
sti
inc
add
dec
out
xchg
stos
outsl
sti
mov
cs
or
jecxz
push
jo
fisttps
cmp
add
shl
addr16
out
push
sub
addr16
mov
adc
mov
rorl
leave
shr
jb
sbb
add
jb
leave
repnz
push
scas
sbb
mov
ret
jg
je
xchg
or
pop
test
pushf
jecxz
mov
pop
or
cli
outsb
lahf
repnz
popf
push
imul
adc
into
xor
xchg
nop
out
das
out
dec
rorl
ret
xlat
add
jg
pop
movl
mov
clc
lds
mov
xor
mov
in
into
in
cmp
sub
push
jno
negb
dec
loope
dec
hlt
sbbl
jmp
inc
push
outsl
and
scas
add
xchg
xchg
xor
jecxz
adc
mov
push
xor
out
xchg
jg
sub
push
das
fadds
add
jno
mov
enter
ds
sub
add
pushf
jge
xchg
mov
out
xchg
cmc
aad
enter
loopne
xchg
xor
mov
aam
jb
xlat
pop
das
jge
mov
sub
mov
lcallw
les
lods
xchg
pop
lahf
std
and
sub
in
pause
sub
push
push
dec
mov
add
in
mov
cmp
xor
fwait
loopne
arpl
lods
sbb
cmp
pushf
sbb
dec
and
and
rclb
cmp
xchg
xor
cmc
fildll
cli
adcb
mov
dec
inc
push
mov
dec
cmc
loopne,pt
fidivrs
dec
loopne
mull
ja
icebp
xor
inc
push
je
cs
lcall
mov
rolb
sub
push
gs
adc
mov
das
fwait
dec
jno
fsubrp
js
push
lods
fs
nop
or
cli
push
mov
rcrl
enter
adc
scas
push
nop
mov
xchg
jmp
popf
pop
outsl
dec
dec
cmpsb
shrb
ror
test
mov
test
push
in
mov
jae
mov
ret
sub
ret
dec
popa
fwait
cmp
adc
pop
lret
loop
aas
test
dec
adc
ja
insl
rorb
xchg
jmp
mov
adc
test
lods
outsl
ffreep
in
and
ds
inc
mov
fwait
sub
cmpsl
sbb
and
mov
cmp
xlat
sub
mov
or
push
pushf
pop
xlat
pop
adc
int
ficompl
and
mov
add
jno
lods
and
pusha
fisubrs
add
pop
xchg
mov
lea
push
push
rcrl
sbb
mov
cmp
movsb
loop
inc
jns
and
cmpsl
mov
xor
sub
jl
sub
in
or
add
mov
mov
cmp
in
push
lods
fs
cmpsb
sbb
adc
pop
adc
push
gs
mov
xor
push
xor
adc
ja
shll
ljmp
pop
hlt
sub
jge
mov
xchg
getsec
cmpsb
lcall
mov
adc
cmp
clc
jbe
shlb
out
xor
into
xor
int
xor
pop
pop
repnz
mov
lret
dec
pop
inc
inc
movsl
push
sti
orl
test
cmovbe
sysexit
movsb
or
aaa
jecxz
pop
addb
test
hlt
adc
repz
mov
outsb
cmpb
gs
loope
or
insl
push
jl
aas
push
mov
nop
sti
repz
lret
push
sbb
sub
adc
xor
cmc
push
xlat
push
push
ds
fmull
and
dec
mov
mov
repnz
sbb
and
pop
xor
jnp
adc
test
insb
pop
into
jo
and
into
cmp
inc
and
xchg
jge
pop
incl
data16
std
xor
movsl
enter
jg
loop
aad
sub
pop
loop
cmp
mov
xlat
popa
adc
xchg
mov
mov
adc
das
lcall
sbb
mov
out
or
cwtl
cmpsl
push
mov
dec
xchg
imulb
inc
mov
push
mov
mov
xchg
inc
in
xchg
jmp
repnz
icebp
mov
mov
ja
add
sub
lock
push
sbb
add
sub
dec
jns
lds
out
leave
jns
pop
mov
pop
sbb
icebp
jae
repnz
idivb
daa
aas
icebp
es
mov
jge
sbb
repz
imul
lcall
orb
sub
test
out
movsl
clc
fwait
les
mov
jle
mov
inc
in
cld
repnz
mov
inc
shlb
xor
loope
add
movsb
popl
ljmp
or
or
mov
out
sub
jp
negl
int3
dec
push
xor
imul
sbb
cmp
inc
int
push
mov
jmp
push
add
lahf
adc
outsl
or
jle
call
cmpl
pop
jnp
xchg
add
push
pmuludq
divl
icebp
gs
xchg
test
mov
push
pop
push
fmull
dec
fwait
lahf
jg
dec
loop
cwtl
xchg
mov
mov
xchg
cmc
and
dec
pop
insl
aas
sbb
cmp
xor
dec
or
into
xchg
test
and
std
and
xchg
je
mov
pusha
or
adc
in
sahf
mov
jg
cmp
add
int
sti
ficompl
sub
icebp
xchg
adc
fists
add
add
int3
xchg
mov
sbb
cmp
arpl
jne
fwait
mov
addr16
pop
adc
push
and
fistpl
rclb
xchg
sbb
rcrl
add
push
mov
outsl
jns
adc
test
nop
shrl
movsl
mov
gs
adc
movsb
xor
hlt
mov
aam
add
adc
cmc
or
sub
sbb
outsl
sbb
mov
mov
fldt
sbb
mov
dec
push
jmp
icebp
mov
out
add
inc
pop
dec
or
push
jmp
adc
cmpl
adc
stos
push
stos
movsb
pushf
mov
push
rcll
sub
ja
xor
rorl
xchg
push
hlt
mov
sti
jmp
enter
add
mov
std
cli
dec
call
push
into
in
mov
add
push
inc
push
call
shll
jne
je
mov
push
push
jge
test
adc
arpl
add
subl
mov
icebp
or
ret
daa
ja
ja
inc
lret
hlt
cli
jbe
in
repnz
lret
xchg
push
pop
dec
pop
shr
stos
adc
sahf
jg
cmc
add
lret
scas
push
add
dec
call
out
xchg
cmp
or
je
and
push
mov
dec
adc
stc
jmp
fimull
stos
jg
outsl
ja
pop
mov
mov
shlb
jle
push
inc
rcrl
xor
repnz
push
xchg
mov
iret
xor
in
test
loopne
lcall
dec
addb
xor
mov
out
pop
mov
dec
outsb
imul
aam
scas
mov
xor
scas
enter
test
pop
jle
pusha
mov
inc
lahf
sbb
in
and
sti
mov
cmpsb
push
fistps
out
push
mov
jns
jae
das
jl
jns
xchg
cmp
sbb
sbb
fnsave
cwtl
mov
mov
add
mov
fld1
cmp
ljmp
rcr
or
addr16
aas
bound
das
xor
mov
xchg
lahf
pop
fnstenv
testl
and
inc
in
pop
addl
xchg
imul
cmp
js
xchg
es
pop
in
out
jns
xlat
add
cmpsb
daa
test
mov
mov
inc
ljmp
aaa
fcmove
cltd
shll
inc
lret
cmpsl
push
fcomp
call
shr
sbb
mov
dec
pop
sbb
fwait
bound
lea
adc
insb
push
pop
les
int3
lock
mov
rclb
ja
push
adc
sbb
pop
jge
sub
pop
xchg
and
mov
insl
out
fistl
lods
adc
pop
mov
shlb
hlt
pop
inc
add
in
icebp
sub
shl
add
gs
pop
or
sbb
aas
out
sub
pop
xor
mov
push
inc
xor
mov
cmpsb
and
pop
xchg
sub
or
fiaddl
xchg
jg
int3
int3
mov
ljmp
scas
shrl
jg
mov
dec
pop
mov
add
fisubl
pop
imul
push
push
loope
jl
mov
cltd
int3
aaa
xor
insb
insl
lods
leave
jbe
or
shl
dec
cli
aad
in
sbb
int
test
jecxz
scas
mov
imul
sub
or
adc
jp
lret
mov
mov
xchg
psubd
jl
inc
int
xor
cmpsb
lods
call
xorb
aad
enter
sbb
dec
adc
je
dec
jl
sub
out
push
out
mov
filds
sarb
mov
push
xor
sub
loopne
mov
pop
cld
mov
mov
loopne
xor
je
sbb
inc
lods
or
fsubrs
and
jmp
rcrb
sbb
pop
insb
jle
jmp
and
movb
jmp
in
dec
mov
dec
mov
stos
xlat
mov
jg
out
frstor
adc
add
xchg
or
jne
dec
dec
pop
mov
movsb
dec
inc
mov
pop
sub
cmc
aas
addb
cmpsl
xor
int
aaa
lret
std
adc
sahf
ljmp
mov
loopne
shl
push
push
lds
call
daa
andb
mov
dec
inc
push
jmp
dec
movsl
stos
fs
sbb
and
imul
push
ret
fistpll
fdiv
sbb
push
imul
pop
jecxz
rorb
decb
inc
in
fsts
push
loopne
adc
or
outsb
repz
xor
leave
pop
xchg
pop
les
inc
jne
dec
add
clc
mov
clc
add
mov
scas
mov
cmp
add
xlat
xchg
fiaddl
call
cld
sarl
cmp
jl
or
adc
inc
gs
pop
inc
outsl
sbb
stos
or
mov
loope
xor
outsl
pop
adc
jo
add
insl
mov
std
fs
aaa
and
and
dec
out
imul
jo
ss
and
push
scas
add
jae
dec
outsl
sarl
icebp
mov
fldenv
fldcw
add
dec
adc
inc
pop
fistps
sti
pop
dec
repnz
pop
test
and
fwait
cmc
xchg
arpl
inc
lahf
push
push
dec
add
aam
inc
sub
gs
mov
sub
pusha
sti
mov
pop
aaa
xchg
push
fdivp
mov
dec
into
int3
sub
negb
jbe
jno
xchg
cmovle
push
and
std
inc
das
ret
and
adc
lahf
jnp
inc
sbb
lret
stc
outsb
icebp
cmpsb
testl
pusha
push
orb
jns
iret
xchg
pop
sarb
shll
mov
std
push
mov
out
arpl
rolb
mov
push
cmpsl
ja
inc
sarl
cmpsb
std
jle
push
and
js
sbb
popf
fists
stos
lahf
and
inc
ret
jge
js
inc
xor
dec
outsb
cmc
sbb
cwtl
add
push
fdivr
jnp
fyl2x
push
sub
in
pop
js
jmp
bound
xor
add
inc
mov
out
sub
push
leave
movsb
out
loop
adc
sub
sub
mov
xchg
mov
sub
add
jg
lods
mov
jbe
loop
inc
fistps
xchg
pop
aaa
mov
iret
xor
mov
sbbl
not
inc
jbe
jmp
out
adc
add
cmp
sbb
ja
or
cmpsb
testl
mov
mov
hlt
fsubl
lret
addr16
push
in
in
mov
adc
loope
mov
shl
mov
aad
xchg
cmp
mov
cwtl
es
sti
push
insb
iret
sub
rcrl
rol
xlat
mov
jle
mov
fwait
add
sub
inc
push
addr16
or
and
lock
mov
mov
lret
dec
dec
mov
movsl
in
ret
adc
fbstp
or
push
mov
les
xchg
jecxz
jmp
or
xor
loop
das
pop
push
dec
xor
out
and
xchg
cmp
fwait
pop
jg
inc
outsl
xchg
push
notl
sbbl
scas
push
jne
adc
loopne
mov
mov
dec
inc
or
inc
xchg
test
add
add
incl
mov
ret
in
push
aaa
xor
fcoms
scas
jg
xor
dec
lea
pop
shrl
lods
bound
pop
jg
mov
xor
pop
pop
xlat
mov
xchg
jae
ficoms
ret
push
adcb
pop
sub
lcall
sub
inc
xchg
dec
xor
stc
fmuls
cmp
cli
and
jge
out
loopne
rclb
jecxz
inc
lret
jnp
aam
dec
cli
push
and
mov
inc
pop
mov
mov
sbb
pusha
push
cmc
inc
xchg
push
cmpl
sbb
iret
cmp
add
dec
ja
into
lahf
stc
jp
fdivrs
and
sarl
outsl
xor
test
dec
std
push
insl
ss
xor
or
loopne
mov
pop
lret
rcr
out
xor
and
cmp
mov
xor
xor
mov
push
ret
push
pusha
mov
add
pop
lock
fcmovb
dec
pop
pop
fiadds
incl
adc
and
xor
mov
test
das
mov
repnz
test
je
xor
repz
fidivrl
hlt
repnz
lds
test
out
lret
rcrb
sbb
cmp
mov
es
ljmp
add
fcoml
scas
xchg
mov
das
jmp
push
jmp
add
mov
dec
adc
lods
aas
fwait
cmp
loope
adc
mov
scas
and
xor
mov
in
add
scas
std
jmp
sbb
in
jecxz
fsts
cmp
cmp
cwtl
ret
fwait
mov
std
sub
data16
jle
test
mov
adc
ret
iret
adc
mov
in
insl
xlat
subb
jmp
mov
std
dec
rcl
repnz
and
mov
xchg
insb
mov
xchg
gs
dec
clc
or
adc
adc
incb
mov
mov
and
jne
fidivrs
jmp
stos
sbb
xchg
jmp
add
mov
je
sub
lret
fildll
cmpsl
hlt
push
and
cvtdq2ps
out
jge
in
sti
data16
push
lods
xchg
fdiv
shlb
les
sbb
mov
cmp
into
pop
jo
add
test
inc
loop
mov
cs
push
out
push
gs
jp
push
add
pushf
jg
xor
mov
rorb
fidivl
faddl
adc
jmp
sub
dec
mov
clc
mov
inc
fildl
in
jmp
imul
test
push
add
mov
adc
xor
lds
les
adc
aas
daa
dec
push
cltd
jo
aad
mov
cmp
test
addr16
test
fldcw
popf
pop
xchg
mov
hlt
dec
nop
das
sahf
subb
cltd
inc
and
sbb
xlat
xchg
bound
xchg
pop
stc
add
outsl
jle
int
fidivs
fwait
push
loope
daa
jne
pop
mov
ja
mov
or
or
js
dec
xor
push
insb
lcall
stc
pop
scas
shlb
jns
jns
xor
imul
shlb
adc
or
enter
xchg
into
xchg
cmp
enter
ja
jo
stc
pop
pop
mov
mov
cmc
inc
ret
mov
cmp
sub
imul
test
xchg
or
addr16
xchg
inc
jne
or
aas
cmpsb
dec
loope
mov
inc
jp
adc
data16
outsl
jecxz
sbbl
mov
imul
pop
popf
push
xor
inc
fnclex
adcl
cld
iret
iret
clc
push
and
daa
scas
push
push
addr16
or
lods
cmp
mov
arpl
adc
pop
repz
xchg
int3
dec
sbb
mov
adc
outsb
popa
or
aaa
lds
jl
or
sub
pop
pop
out
mov
mov
ficompl
loop
call
jmp
xor
jg
adc
sub
mov
jecxz
outsl
test
add
fmull
inc
mov
push
or
sbb
mov
jg
popf
mov
sbb
pop
add
js
mov
pop
dec
imul
insb
cmp
js
dec
xchg
xchg
sti
push
mov
xor
mov
insl
dec
ret
cli
repnz
mov
pop
test
aas
mov
in
in
jne
cmp
mov
ss
ret
mov
scas
call
dec
fldcw
xor
push
je
mov
or
call
dec
insl
ss
or
mov
ds
imul
adc
mov
adc
add
mov
xchg
sbb
es
or
mov
cmpsb
push
in
fisubl
push
mov
adc
rolb
test
xlat
stc
inc
in
sbb
xor
and
inc
pop
add
roll
xor
ss
sarl
xchg
cltd
iret
adc
mov
fildl
aaa
mov
lret
sbb
jp
test
push
ds
scas
dec
sbb
test
adc
dec
movsl
cmpsb
xor
je
sub
ljmp
jmp
xchg
dec
rorb
movsb
movsb
push
ficompl
add
adc
test
cld
dec
fisttpl
sub
pop
add
inc
sbb
inc
mov
jge
inc
inc
sbb
xorb
es
jp
int
jo
push
mov
loopne
enter
sub
in
fwait
sub
mov
rolb
in
test
addr16
fistl
inc
sbb
lds
sbb
clc
fisubl
pop
push
es
push
add
cld
jge
cmp
jp
pop
inc
mov
nop
cmpsl
cmp
call
dec
hlt
xor
mov
jb
adc
jl
popf
sub
pop
and
fldl
jle
jg
jecxz
cmp
jnp
pop
dec
outsl
and
insl
xchg
repz
dec
cmpsb
fwait
hlt
jmp
mov
sub
imul
test
inc
jo
stc
inc
clc
sbb
cmp
das
cmp
mov
cld
cmp
add
xor
jno
lods
xchg
xor
jg
test
clc
push
add
cmp
rclb
add
aad
fwait
notl
jno
pop
in
pop
imulb
fmull
mov
lds
sbb
bswap
adc
pop
and
lods
dec
sub
mov
jne
jp
sub
js
addl
jae
stc
enter
adc
and
cwtl
imul
popa
sti
xor
sbb
rorb
dec
or
xor
cmpsb
insl
adc
out
out
xor
add
lret
add
xlat
adc
push
mov
dec
pop
mov
mov
xchg
ja
imul
fs
mov
dec
roll
insl
test
jns
test
fistpll
push
pop
fbld
dec
insl
inc
xchg
les
daa
or
pop
and
xchg
filds
fmul
sbb
js
lret
fiadds
inc
sbbl
inc
test
mov
sub
xchg
mov
mov
jb
xor
inc
stos
push
test
pop
jmp
add
push
mov
inc
popa
mov
sbb
bound
ljmp
mov
repnz
jb
adc
call
mov
dec
xchg
out
inc
or
push
jp
stos
sub
push
rclb
or
ja
xor
mov
out
int3
mov
sahf
inc
outsl
cs
sbb
popa
lods
mov
add
mov
sub
cmpsl
adc
dec
xchg
ds
fwait
loopne
div
fsubrl
sbb
push
ljmp
sub
dec
adcl
in
add
ret
test
fcompl
call
lea
addr16
or
int
jo
pushf
popa
in
int
dec
mov
pop
aaa
popf
dec
lds
repz
push
add
jo
scas
incb
rol
test
scas
call
and
mov
subl
push
fs
xor
push
enter
push
orl
jae
bound
sub
mov
add
jnp
data16
or
cmp
push
or
mov
into
dec
push
or
imul
add
loope
cmc
hlt
sti
dec
sub
cld
xor
mov
insl
mov
pop
arpl
adc
lcall
mov
nop
push
adc
fsub
sahf
or
pop
leave
mov
ret
out
fiaddl
jo
ret
mov
mov
int
sub
aaa
mov
popf
sub
movsl
aaa
rcrb
cwtl
pop
mov
das
ja
shrb
and
dec
ss
popa
cmp
movsb
pusha
jb,pn
test
xchg
jge
sub
mov
shlb
cmpsl
pop
xchg
out
loopne
push
test
idivb
ss
mov
enter
je
testl
in
imul
mov
or
fnstcw
mov
push
push
lods
mov
mov
or
pushw
dec
movsb
insl
and
push
or
js
int3
mov
adc
jbe
mov
mov
pusha
std
jno
dec
mov
ret
pop
data16
push
repz
cwtl
mov
mov
push
or
mov
mov
xchg
xchg
in
inc
sahf
adcb
jne
sub
inc
int
add
or
popa
nop
xlat
and
ss
xor
loop
movb
test
test
arpl
fwait
sbb
pop
test
fstps
out
nop
push
shlb
pusha
cmp
ljmp
jecxz
pop
mov
sbbl
arpl
lods
in
inc
mov
jmp
jmp
ss
mov
jb
sub
inc
cmp
jg
add
xor
xchg
cld
fdivrs
inc
lahf
pop
xorb
and
cmpsb
mov
jmp
mov
xchg
scas
addl
out
pop
pop
mov
loopew
lods
in
jae
sub
cs
pop
xor
jb
fsubr
push
out
cmpsb
add
int3
scas
shl
mov
fistps
adc
aaa
push
cmc
mov
call
ja
lret
mov
lock
fs
pop
orb
xor
push
sbb
das
fsubr
sub
sub
jns
out
fcom
xor
subl
adc
dec
mov
mov
loope
adc
cld
insl
mov
popa
sbb
aaa
lods
inc
push
cmp
jbe
addb
and
out
add
dec
lods
in
mov
fs
and
xlat
out
mov
jecxz
stos
iret
sub
mov
and
gs
xor
test
cmpb
shlb
inc
pop
xchg
in
pop
rcl
cmp
mov
hlt
lds
mov
cs
call
inc
sub
test
les
mov
das
out
add
aas
and
lds
cltd
stos
ss
mov
jns
mov
jecxz
es
stos
adc
lret
subb
push
imul
aam
dec
negb
dec
and
repnz
sbb
stc
xchg
jb
mov
jns
dec
out
dec
test
ja
adc
xchg
stc
lock
adc
test
jne
pop
and
pop
pop
mov
or
scas
fwait
test
pop
lcall
cmp
mov
dec
xchg
dec
add
gs
out
mov
rcr
icebp
adc
push
pop
das
test
popa
jo
adc
mov
pop
cmp
repz
ret
cld
add
ljmp
cmp
pop
cld
cs
hlt
jne
daa
push
jno
mov
or
jp
shl
pusha
jne
or
add
mov
mov
aad
sbb
je
or
xchg
jp
mov
sub
inc
lret
or
fsts
push
ficompl
adc
sbb
and
ljmp
push
test
jge
pop
sub
mov
sahf
je
xor
popa
loop
xor
fcomi
insl
hlt
decl
out
xchg
xor
int3
mov
lahf
insb
scas
or
imul
mov
divb
pop
or
out
repnz
cmp
jl
imul
add
sub
in
cs
cmc
or
gs
xlat
add
inc
sub
pop
jbe
daa
mov
shlb
pop
std
mov
jns
enter
jo
pop
or
add
out
fcmovnbe
mov
inc
jns
pop
addr16
into
mov
and
pusha
add
fwait
cltd
call
dec
imul
pop
cmpsb
jge
mov
inc
outsb
addr16
mov
inc
dec
rolb
test
mov
inc
inc
fsubr
pushl
stos
inc
fstpl
inc
pop
test
repz
inc
leave
test
pop
movl
xchg
mov
sub
sti
stos
stos
cmp
fsubs
xor
imul
aaa
jmp
inc
add
sbb
mov
inc
push
add
mov
ret
xor
jnp
push
ja
fucomp
pop
jecxz
sbb
enter
test
xorl
jnp
jno
xor
fwait
push
fsubs
inc
pusha
xor
dec
fnstcw
out
mov
push
ficompl
adc
addb
adc
jno
push
xchg
push
sub
or
pop
dec
xor
mov
std
lahf
mov
sbb
xchg
add
and
rorl
adc
and
stc
adc
loopne
outsb
stc
int
jecxz
push
or
cmp
inc
mov
jae
jo
gs
outsl
jge
in
xchg
xchg
jge
int
cltd
bound
xor
lret
sub
or
jle
imul
mov
fdiv
insl
lds
and
xor
stos
xor
cmpsl
dec
imul
push
dec
mov
loope
mov
push
test
les
add
lds
les
inc
imul
pop
arpl
xor
in
push
popa
xchg
pushl
sub
adc
pushf
outsl
repz
xchg
fcmovne
push
wrmsr
outsl
test
sahf
adc
or
or
or
fwait
in
decl
mov
repnz
fldcw
xchg
jb
mov
lret
gs
out
cmc
andl
or
pop
out
rclb
cmpl
xchg
pop
mov
fsubl
push
mov
in
aas
call
jns
jmp
rorl
mov
sub
sub
add
sbb
into
in
lahf
jno
push
movsb
xor
std
je
stos
repz
in
ret
data16
or
jl
mov
mov
arpl
push
mov
cmp
cld
jno
or
and
dec
frstor
mov
sub
lea
cmp
sub
mov
mov
cmpsl
push
loop
hlt
xchg
in
shrb
mov
gs
popf
imul
cmp
sbb
push
pusha
into
sub
mov
stos
aad
sub
mov
dec
xchg
lock
aas
lahf
jmp
lcall
xadd
cmp
stc
pop
mov
inc
std
shl
sub
call
pop
pop
inc
push
scas
rorl
inc
outsb
cmc
adc
test
ficoml
lcall
flds
das
lods
fstpt
mov
jbe
pop
fsubr
xor
mov
dec
add
push
aam
mov
push
sti
pop
pop
in
clc
mov
and
popf
add
xchg
subb
mov
test
sbb
js
stc
xchg
or
pop
mov
addr16
iret
pop
mov
jmp
xchg
ja
xchg
pop
lcall
push
xchg
adc
xchg
adc
loope
mov
mov
leave
enter
cltd
and
cltd
rcll
xor
cltd
or
mov
lds
or
lahf
ljmp
sub
aaa
rcrb
cli
fnstcw
adcb
mov
hlt
xor
mov
mov
in
fwait
mov
mov
das
adc
add
add
add
pushl
shrb
mov
add
lods
dec
mov
or
jle
mov
xchg
inc
xor
shl
mov
xchg
shll
js
xchg
cmpsl
shl
mov
movsl
leave
fwait
mov
push
into
pop
out
mov
cmp
mov
inc
dec
pop
jae
fmulp
xor
adc
test
jle
arpl
push
aaa
mov
pop
pop
xor
lret
cvtps2pi
sarb
inc
adc
or
ljmp
inc
xchg
jb
aam
lret
sub
mov
xlat
mov
add
cwtl
sahf
sarl
loopne
xor
rclb
xchg
and
xchg
cwtl
xchg
nop
xchg
cmp
test
daa
cld
push
call
aas
lods
push
jbe
xchg
push
dec
icebp
lcall
pop
rol
loopne
xchg
popa
out
push
call
xchg
sub
sar
ds
sub
loop
fdivrs
mov
push
pushf
arpl
jge
shrl
stos
or
jns
dec
daa
mov
icebp
jge
mov
jae
es
pop
into
or
or
seta
mov
mov
js
and
aas
adc
scas
sub
loope
pop
push
enter
cltd
out
xorb
cmp
imul
adc
or
mov
mov
out
stos
inc
jnp
mov
scas
mov
jbe
lea
xchg
sub
inc
push
dec
je
loop
lea
pop
add
popa
push
adc
out
cmpsl
repz
pusha
add
stos
je
es
iret
dec
push
lcall
cmpsl
sub
mov
jecxz
push
mov
lock
fimuls
inc
add
rcrb
xor
push
fidivrl
movsb
les
dec
lahf
xchg
call
mov
or
shll
mov
fs
sub
fnstcw
cmp
rorl
subl
xchg
clc
clc
push
negb
inc
testl
xchg
add
pushf
dec
negb
sbb
xchg
push
pop
cs
pop
test
cmp
mov
adc
cmpb
call
pop
mov
cmp
fisubrl
fdivl
and
push
push
and
dec
push
sub
mov
ret
sub
incl
mov
mov
dec
mov
add
out
add
push
sub
iret
mov
and
mov
stc
xor
mov
sub
pop
sub
xchg
push
mov
adcl
cld
inc
pop
or
cltd
push
insb
add
les
scas
mov
movsb
add
lods
and
out
imul
cmp
mov
sarb
pop
pop
pop
cmp
and
mov
test
sti
pushf
sbb
fistpll
sub
repnz
dec
xchg
test
iret
popf
fdivs
add
shrl
jbe
loope
mov
mov
jge
lea
sbb
aaa
jecxz
pop
mov
sub
jecxz
das
fcoml
jmp
in
outsl
sub
xor
xor
gs
or
lods
jo
pop
jge
sub
imul
fildll
sub
xor
sub
push
mov
lds
or
icebp
adc
pop
push
ds
imul
dec
out
loop
xchg
outsb
and
bound
shl
cmpsb
mov
xchg
in
cld
and
jecxz
daa
dec
scas
test
je
jae
out
pop
scas
mov
add
mov
mov
shl
add
jge
jp
pop
cmp
outsb
fiaddl
sub
add
jge
les
push
lcall
popf
mov
repnz
mov
mov
pop
scas
movsb
push
jnp
fwait
cltd
mov
popf
pop
and
mov
pop
jg
mov
stos
insl
enter
cli
test
jne
add
xchg
je
add
lahf
rorb
adc
test
nop
pusha
cmpb
in
lcall
shlb
mov
inc
pop
dec
lock
adc
pop
sub
js
imul
inc
inc
mov
jo
dec
dec
dec
das
call
fbld
adc
cmpl
enter
ret
sub
repz
scas
pop
aad
inc
outsl
xor
sbb
shlb
daa
ljmp
int
rcl
cmpl
and
loopne
pop
lcall
sahf
sahf
mov
iret
scas
pop
testl
lock
or
std
repz
mov
rcrl
shl
ret
rep
decb
adc
scas
xchg
mov
or
mov
in
push
add
stos
leave
shrb
shl
mov
jbe
ret
jmp
adc
imul
dec
ret
xchg
ds
jmp
xlat
repnz
jmp
mov
mov
js
insl
or
ret
or
xor
mov
and
sbb
mov
xor
cmpsb
jnp
xor
mov
jno
pop
out
ljmp
mov
cmp
fcmove
push
mov
add
sti
test
sbb
scas
dec
cmpsl
mov
sub
jg
shll
jp
ja
sub
push
ljmp
lods
mov
add
rclb
orl
bnd
jg
popf
adc
pop
and
sub
test
daa
mov
jl
cmp
push
mov
les
inc
pop
mov
cmp
loop
xchg
ret
gs
sub
sbb
mov
or
xchg
dec
dec
sub
std
jne
ret
jno
mov
cmp
dec
sub
outsl
das
stos
mov
push
and
out
inc
sub
out
push
adcb
outsb
rol
jg
sbb
push
aas
lcall
jo
or
mov
lock
into
mov
loope
push
lcall
aaa
inc
push
or
push
mov
mov
scas
sbb
cs
bound
sti
or
pop
mov
arpl
ljmp
pop
sbb
jle
testb
cmp
add
lods
pop
add
fwait
mov
mov
cmpsb
xchg
dec
aad
lods
movsb
sbb
cmp
inc
lahf
add
ljmp
orl
out
cmc
dec
sub
mov
jbe
fcoms
push
movsb
test
add
adc
jb
pop
fdivrp
cmc
jmp
popf
cmp
shrb
cmp
xor
inc
xor
out
cmpsb
bound
dec
sbb
outsl
fcmovnu
lahf
sarb
les
jle
mov
stc
mov
bnd
push
add
daa
sub
hlt
ss
sub
jge
push
ret
jl
shlb
aad
and
sbb
dec
sbb
aad
lea
fcmovne
push
aas
dec
pushf
or
and
popf
push
lret
lret
inc
cld
cmpl
dec
mov
jb
out
pop
jp
lock
cld
imul
mov
fdivs
push
add
in
sub
and
mov
pop
mov
lea
add
dec
in
into
adc
inc
outsl
fisubrl
sub
pop
xchg
or
mov
dec
cmp
test
enter
sti
sub
rclb
push
xchg
subl
pop
cmp
pop
jns
enter
jbe
add
pushf
dec
mov
out
and
sbb
in
in
int3
jecxz
xor
shlb
orb
ror
inc
popa
pop
shl
rorb
mov
stc
add
dec
lcall
sbb
jmp
test
jp
pop
cltd
mov
pop
das
adc
or
lock
addr16
mov
fwait
adc
push
cli
mov
push
and
aas
repz
std
sbb
aaa
std
jle
lcall
mov
icebp
dec
repnz
cld
and
cltd
jo
adc
fiaddl
cmp
leave
ret
push
inc
lock
push
call
or
jecxz
xchg
pop
inc
orl
fnsave
stos
test
testl
gs
sub
push
xchg
in
adc
movsb
push
in
cmp
and
pusha
cmp
pop
jnp
mov
std
pop
push
or
ljmp
push
jl
mov
lret
inc
pop
mov
push
lea
and
mov
xchg
repz
mov
push
daa
negl
adc
mov
rclb
out
adc
test
adc
roll
ds
loopne
jns
int3
lea
ja
inc
shlb
jae
loope
or
sub
xchg
les
xchg
jns
add
mov
dec
loope
cld
inc
pop
cmpl
xchg
inc
imul
xor
rorb
dec
fistps
test
rcl
inc
mov
nop
movsb
in
scas
xchg
flds
imul
inc
mov
jae
mov
negl
sbb
je
xor
dec
sbb
xchg
cmp
mov
bound
daa
lods
xlat
pop
ret
aam
pushf
cmp
scas
jmp
jmp
dec
pushf
sub
es
loope
popa
and
add
pop
mov
cmp
js
popf
or
cmovle
movsl
or
aaa
lcall
dec
jg
cmp
je
jge
test
iret
push
pop
nop
jl
xchg
push
and
and
push
inc
cmp
aaa
arpl
lds
push
jo
dec
xchg
sbb
pop
mov
loope
loope
rcl
out
dec
push
loop
out
add
and
mov
or
or
push
stos
xor
pop
mov
mov
mov
hlt
push
ljmp
push
hlt
cmp
xor
ficoms
sbb
xlat
mov
mov
and
movsb
es
jb
cmc
mov
les
fs
outsb
into
ror
fs
movsl
out
jp
fcompl
jge
jmp
mov
outsb
push
sbb
dec
popa
movsl
xchg
jne
xor
rcll
js
mov
mov
sar
fsubl
dec
jmp
outsl
rcrb
sub
jb
cmp
pop
nop
cmpsl
js
mov
jns
jl
fnstenv
mov
ffreep
push
loop
fsubl
pop
jle
add
js
mov
leave
mov
lea
test
ficoml
dec
add
pusha
shr
call
ja
out
aaa
pop
cmp
inc
aas
insb
in
push
stc
xchg
lock
test
inc
neg
inc
inc
jmp
mov
pop
std
push
out
inc
push
les
nop
fldt
stc
in
mov
stc
xor
adc
cmpsl
adc
decb
rclb
daa
cmp
sbb
adc
cs
adc
cli
xchg
in
sbb
mov
sub
mov
cmpsl
test
sub
inc
rcrb
mov
fisttpll
pushf
push
and
jmp
sarl
mov
in
lock
jmp
arpl
loop
sarl
adc
lret
xorl
sub
sbb
cmp
mov
pop
imul
shll
pop
enter
dec
mov
fsubrs
inc
cmp
cmp
leave
mov
mov
imul
pop
mov
stc
mov
ret
out
cld
rclb
imull
cmp
inc
pop
je
outsl
jg
push
add
aam
mov
pusha
lds
notb
iret
pusha
fwait
mov
lock
test
jle
mov
sub
in
lea
icebp
mov
and
xlat
xor
xor
lods
das
jmp
adc
sbb
pusha
lcall
mov
jecxz
xor
leave
movsb
cmpsl
sbb
imul
push
repz
popf
cmpsb
leave
xchg
mov
bound
lret
adc
or
jb
call
or
sbb
push
fs
dec
or
cli
inc
mov
adc
ds
mov
rcll
pop
add
add
pop
jecxz
repz
les
pop
xor
and
jg
mov
add
cmp
push
addb
ret
rorb
jb
rep
jecxz
mov
aad
add
fs
or
pop
mov
imul
jno
ja
mov
aas
cltd
add
mov
add
xchg
jecxz
push
inc
test
push
pop
in
fmul
pusha
imul
test
jb
sbb
lcall
popf
call
pop
add
pop
adc
daa
jp
je
inc
or
and
cwtl
loop
ljmp
imul
inc
jmp
pop
scas
jns
addb
leave
xor
addr16
dec
js
cmpsl
inc
stos
sahf
clc
mov
sti
push
cmp
lock
mov
lds
or
or
rclb
in
sbb
inc
test
pop
mov
sbb
add
jecxz
jo
push
cli
lahf
and
push
sub
and
mov
icebp
dec
in
mov
fwait
xchg
ffreep
xchg
scas
xor
lods
mov
lods
dec
mov
pusha
movsl
bound
cmp
inc
int
jge
xor
fcmovbe
loopne
sub
enter
sub
das
pop
mov
sbb
cmpsl
sub
lock
fsubr
pop
cmp
adc
sbb
lcall
cmp
popf
ret
out
insl
out
inc
iret
add
jl,pt
pop
push
pop
cmpb
mov
add
and
mov
xchg
lock
lock
insl
rcrb
xor
insb
mov
or
out
insl
aad
insb
push
movsb
outsb
movsl
sub
mov
jle
jnp
xchg
inc
xor
dec
bound
int
gs
dec
or
loop
in
insb
xor
pop
jno
mov
sbb
nopl
mov
and
jnp
inc
inc
imul
add
ljmp
out
outsb
scas
inc
shrl
jg
repnz
popf
jo
sub
pop
pop
repnz
sub
mov
call
push
inc
out
cli
in
imul
and
add
sub
nop
outsl
shr
push
pop
imul
xchg
add
jmp
lret
les
push
push
and
and
imul
xchg
cwtl
in
sub
push
leave
push
nop
jecxz
lret
imul
es
jecxz
stc
repnz
xchg
out
imul
sub
out
iret
test
ja
mov
gs
sbb
js
movsb
adc
adc
pop
ret
mov
sahf
jae
jbe
int3
mov
add
fbstp
and
dec
xchg
xchg
push
pop
outsb
xor
in
movl
jle
das
and
jecxz
push
loopne
xchg
testb
adc
sub
and
jle
pop
into
xchg
inc
mov
sbb
fbld
ss
call
sub
loop
mov
lods
sub
mov
dec
loope
lret
sbb
stc
leave
lahf
es
in
test
push
in
mov
stc
cmpsl
add
fs
push
inc
push
mov
add
xchg
adc
push
insl
sub
and
fldenv
mov
cmpsl
mov
fcoml
xchg
ljmp
in
and
mov
into
pop
fs
jecxz
test
lea
lcall
test
movsb
or
push
mov
dec
mov
call
jae
sbb
pop
sbb
push
dec
mov
jno
cmp
xor
mov
pop
mov
cmp
int3
jmp
jnp
pop
sarl
push
or
add
pop
mov
sub
mov
repnz
jo
mov
sbb
cmp
inc
jecxz
adc
insb
add
push
lret
cmp
cmp
fs
add
pop
jae
mov
movsl
addr16
lahf
neg
mov
lods
and
and
fprem
xor
dec
repz
sti
int
pop
test
fwait
inc
insb
ljmp
popf
cmp
mov
jmp
add
lods
aad
in
enter
adc
stc
dec
jb
mov
and
jb
call
lock
cmp
fsubrl
mov
test
push
push
hlt
jg
cmpsb
rolb
cmp
sub
sahf
mov
dec
inc
adc
pushf
and
cmpl
ficoms
mov
and
sbb
add
scas
push
mov
adc
mov
adc
cwtl
nop
adc
inc
lret
imull
inc
into
mov
es
shr
dec
es
outsb
div
pop
adc
leave
mov
xor
jns
add
and
arpl
imul
dec
mov
ffree
stos
sbb
lahf
mov
sbb
fwait
or
xchg
sub
stos
xor
mov
clc
pushf
push
sub
inc
fsubp
imul
pusha
dec
mov
int
stc
ret
adc
rorl
fistps
add
outsl
inc
mov
mov
mov
rep
sbb
icebp
mov
sbb
fisubrs
pop
lret
lea
es
stos
ljmp
mov
sti
sbb
mov
cmc
cmc
cmpsb
dec
mov
stos
xchg
ds
lods
mov
je
js
out
ret
test
test
pop
sbb
das
xor
adc
pop
and
nop
aad
aaa
arpl
ja
jmp
rol
jmp
aam
push
mov
jne
push
lock
push
xchg
pushf
push
dec
lret
inc
xor
fdivrl
push
push
imul
push
dec
enter
stos
add
xchg
lods
jle
push
aad
or
imul
nop
ja
cmp
clc
jnp
xor
data16
pusha
pop
mov
lahf
xor
sub
mov
lock
push
jg
loope
aam
inc
adc
push
test
cs
fidivrl
sbbl
pop
pop
mov
push
daa
lods
push
scas
aas
sbb
insb
in
jl
xlat
cmp
aaa
add
shlb
cmp
clc
pop
jecxz
add
xchg
jl
fbstp
inc
adc
mov
xor
test
push
negl
out
pop
fidivl
pop
lea
in
mov
movsb
mov
gs
pop
push
icebp
lahf
xchg
inc
xor
addb
jle
or
pop
sbb
and
xchg
cmpsb
pop
cmp
mov
dec
rcl
sbb
test
cmp
repz
and
repnz
sbb
ffreep
add
jp
enter
leave
aaa
jno
inc
pop
jl
jle,pn
repz
rcrl
je
insl
push
ret
push
movsb
mov
or
out
dec
xchg
push
mov
addb
inc
pop
xor
adc
xor
scas
sub
and
mov
ja
cmp
mov
dec
jecxz
cmc
xchg
push
sub
push
mov
cmc
xor
hlt
xchg
add
sbb
clc
cmp
jmp
call
aas
xchg
mov
jecxz
les
daa
jmp
pop
jbe
movsb
cld
sbb
stc
sub
stc
cld
mul
idivb
push
add
std
scas
sub
shrb
mov
sbb
cmp
negb
subl
or
xchg
pop
cmpsb
movsl
add
xchg
sbb
jo
cli
xchg
hlt
fadd
aad
or
mov
outsb
lcall
movsb
cmp
test
sbbl
inc
push
pop
sub
push
hlt
mov
pop
jecxz
mov
push
mov
sahf
fidivl
aam
scas
subb
jl
lods
call
lahf
dec
mov
jmp
call
lcall
loope
sti
iret
fdivs
inc
rorl
adc
xor
mov
add
xor
adc
lret
jge
mov
aad
dec
cmp
add
mov
push
mov
lahf
cmp
add
sub
shl
jl
sbb
rolb
outsl
hlt
out
daa
sbbb
aas
jns
rcl
xor
rcll
lret
movsl
popa
daa
xchg
pop
popa
adc
dec
pop
dec
xor
in
sub
jp
pop
xor
adcb
ljmp
push
cmp
dec
push
outsl
mov
pop
xor
jno
cli
push
cmp
cmpsl
or
xorb
mov
adc
mov
sub
data16
out
sbb
dec
clc
or
mov
iret
popa
xchg
inc
sbb
std
and
adc
pop
sbb
lret
add
cmc
inc
pop
dec
and
mov
in
inc
filds
mov
pop
or
rcl
call
or
cmp
sub
pop
mov
mov
mov
aas
scas
xchg
mov
ret
movsl
je
leave
hlt
xlat
adc
in
fstl
pop
cltd
testl
stos
xchg
mov
int
ret
pop
dec
iret
pop
in
add
jecxz
cmp
cmp
jo
out
outsb
sub
push
repnz
mov
shll
mov
lods
jbe
int3
out
insb
adc
xchg
and
ret
jno
jmp
sbb
mov
test
xor
xor
mov
les
stc
cs
and
jecxz
add
popa
jne
or
fidivrl
fldcw
ds
lret
adc
movsl
add
jp
adc
cmp
pop
in
inc
and
cs
es
adc
push
push
addr16
mov
add
xchg
out
pop
push
mov
xlat
daa
xchg
pop
outsb
inc
inc
and
xlat
push
inc
mov
fmul
outsl
popa
add
mov
cmc
iret
mov
popa
dec
pop
xchg
pop
sub
ss
in
negl
es
xchg
cld
fildl
jle
scas
popf
loopne
std
push
stos
jmp
pop
cmpsb
ret
outsb
movsb
push
popf
add
cmp
adc
enter
mov
cs
daa
ja
loopne
leave
xchg
cli
loop
mov
sti
jns
jmp
xor
out
xor
mov
ret
pop
dec
daa
icebp
daa
icebp
cmc
in
or
rcrl
fbstp
pop
push
push
mov
cmp
popf
mov
gs
pop
out
push
jmp
loope
add
mov
inc
lods
lods
cmp
dec
sbb
inc
test
push
cmp
jge
loope
jle
aad
push
cltd
mulb
sub
pop
scas
ds
mov
dec
add
aas
lret
jmp
and
fwait
pushl
pop
sarl
xor
jl
int3
sbb
ds
mov
xor
add
xor
push
loope
loop
or
jmp
insl
pop
pop
jno
in
jge
mov
pop
popa
ret
sub
notl
jne
shrl
sbb
or
jle
pop
int
push
xchg
ret
mov
mov
test
leave
mov
mov
sbb
xchg
mov
in
push
imul
shll
jge
fsubr
mov
cmp
fiadds
xlat
dec
push
push
adc
in
into
cld
cld
movsl
jmp
fisubl
push
dec
and
xor
mov
jl
adc
mov
outsl
sbbb
negl
fimull
fistl
xlat
mov
mov
mov
sbb
xor
cmpsl
scas
es
jno
cmp
call
inc
mov
jns
outsl
xchg
sub
aad
jnp
cwtl
hlt
aas
int
add
jns
xor
std
xchg
cmp
iret
or
mov
or
fimuls
ja
lds
loopne
mov
xchg
nop
bound
popf
popa
adc
push
pop
xchg
leave
pop
xlat
jbe
jns
cmp
sbb
xchg
mov
pop
cwtl
fistpll
mov
adc
sub
jle
dec
insl
sbb
add
movsl
push
arpl
push
sahf
shrl
xchg
inc
mov
fistl
daa
jg
icebp
nop
xchg
and
xlat
fnstcw
dec
inc
sbb
and
push
mov
cmc
cld
ds
mov
xlat
enter
imul
and
mov
xor
popa
sbb
dec
test
pop
mov
pop
inc
aaa
sbb
cmp
jmp
aaa
inc
add
sub
mov
cmpsl
iret
jge
addl
and
and
cmc
stos
mov
fstps
pop
dec
add
cli
cwtl
add
movsb
mov
fdivrs
mov
xchg
jecxz
mov
cwtl
test
jmp
jne
out
addb
insb
imul
stc
addb
dec
mov
out
add
mov
stc
jle
inc
add
push
lea
inc
and
es
push
loope
cmc
pop
std
test
repnz
fistps
fcomp
mov
outsl
mov
jecxz
mov
pop
jmp
mov
test
scas
cli
xchg
dec
sahf
test
incb
xor
adc
loopne
fwait
ret
test
mov
add
stos
ds
push
or
xchg
bound
and
xchg
pop
mov
and
or
jmp
mov
sub
imul
add
xchg
mov
mov
subl
call
xor
pop
cmpl
adc
xchg
das
push
pop
push
mov
sbb
ja
add
cmpsb
jns
push
jb
js
push
pop
adc
movsb
rorb
testb
test
ret
jbe
cmpsl
xchg
adc
adc
or
jne
data16
jge
gs
cmp
mov
test
xchg
pop
ss
mov
pop
mov
jbe
mov
pop
dec
fbld
inc
pop
loope
xchg
sbb
sbb
mov
roll
rcrb
sbb
pop
popa
or
add
add
idivb
or
pop
mov
inc
movsl
js
xchg
pop
daa
sar
lods
js
jge
pop
sub
add
shrl
scas
aam
xchg
fwait
mov
das
sbb
lretw
xchg
mov
sarb
xor
sbbb
pop
cmpsl
sbb
sahf
push
sbb
test
ds
fwait
mov
test
mov
lods
in
adc
push
mov
jno
dec
movsl
xor
insb
aad
cmpsl
pop
adcl
mov
cwtl
and
inc
aaa
pusha
adc
iret
mov
pusha
sti
jno
lahf
or
test
divl
es
dec
loopne
lock
push
mov
popf
das
dec
ret
dec
pop
icebp
repz
jne
xor
mov
scas
jle
pop
sbbb
cmpsb
add
jne
dec
push
or
es
cmc
pusha
jno
cmp
fwait
pop
ljmp
adcl
fwait
loopne
lret
pop
xchg
xchg
iret
push
leave
push
pop
int3
lret
cmp
add
cmp
cmc
dec
mov
leave
push
push
out
mov
mov
xchg
xor
or
adc
ficoml
jbe
loope
ret
mov
xchg
fstl
jge
call
pop
mov
andb
cmpsl
cmpb
push
lea
add
pop
jo
inc
cli
cmc
inc
ljmp
pop
icebp
repz
sub
stos
cmpsb
shrl
xor
pushf
icebp
sub
jne
scas
jg
and
xchg
add
scas
mov
in
mov
xor
leave
subl
addr16
ljmp
mov
bound
mov
sbb
sbb
xor
push
cltd
jl
and
push
sbb
bsr
pop
fdivl
push
lahf
add
sbb
fadds
mov
push
pop
jmp
xor
repnz
jno
xchg
push
cmpb
div
dec
mov
scas
xlat
mov
mov
mov
add
jmp
nop
cmpsb
cmp
and
jp
and
adc
outsl
xor
mov
ss
ja
mov
add
jmp
test
fdivrs
push
xor
cwtl
sub
lret
pop
mov
daa
jbe
jno
fwait
mov
adc
js
sub
fs
pushf
data16
jmp
mov
imul
lret
addl
dec
ss
or
aam
push
xor
xor
add
test
mov
and
and
xor
inc
lods
sub
outsb
sub
and
dec
cmpsl
aam
imul
mov
inc
cmp
fwait
jle
mov
inc
negb
psubusb
mov
ret
mov
lds
dec
dec
aaa
pop
sti
cmp
insl
and
test
add
cltd
lods
in
mov
dec
inc
pop
fs
inc
xorb
cmp
push
negl
repnz
mov
andps
out
cmp
loop
in
mov
pop
lods
mov
fadds
cwtl
jb
cmp
or
loop
xor
jno
mov
lods
pop
mov
inc
enter
cmp
sbb
pop
lods
mov
sarb
sbb
loopne
cltd
enter
pop
add
or
sub
inc
ds
daa
jp
sub
inc
out
sub
sub
es
dec
push
xchg
shll
ffreep
pushf
repnz
clc
out
shl
pop
xchg
sub
addr16
jg
dec
mov
shl
mov
pop
out
incb
ds
das
test
ror
sbb
out
stc
out
dec
and
cmpsb
or
adc
mov
jg
cmp
mov
mov
movsb
ret
test
shr
clc
xchg
andb
jne
dec
fnstenv
daa
mov
pop
call
fadds
out
and
sbb
ja
mov
jbe
fstl
jg
rcrb
lcall
and
in
scas
and
push
push
loope
mov
cltd
adc
ficomps
lcall
repz
lahf
sbbb
pop
sbb
pop
sub
sub
jne
fadd
lock
adc
push
xchg
mov
cmp
shrl
and
adc
xor
stos
pop
cli
pop
movsl
shll
out
push
sahf
popa
enter
inc
clc
cld
aam
or
fisubrs
test
je
nop
cmp
jge
ret
jmp
push
cmp
sti
fsubrs
push
pop
lret
push
fdivr
js
bound
data16
aaa
clc
adc
fisubs
gs
cmpsl
mov
rorl
jecxz
loope
lret
fwait
and
xor
or
pop
sub
cltd
cs
add
jl
dec
aas
out
cli
lret
jbe
and
repz
mov
adc
daa
dec
mov
sub
adc
and
push
jbe
bound
sar
cli
jp
pop
jae
hlt
push
dec
xor
sub
sub
xlat
adc
xor
or
cmpsb
jns
mov
mov
les
jae
or
mulb
outsl
mov
cmpl
lcall
insl
aad
pop
jmp
sbb
and
shlb
push
popf
setbe
mov
push
lcall
aad
nop
outsb
nop
dec
lods
scas
insl
scas
mov
jge
mov
xor
in
sbb
lds
adc
mov
ret
mov
dec
push
adc
jbe
js
add
or
test
aad
iret
mov
push
jmp
jl
xchg
int
shll
outsb
push
negb
lock
into
pop
pop
xor
rclb
fstpl
sbbb
lods
push
or
ret
pop
fildll
lds
push
pop
mov
cmpsl
mov
jb
adc
fadds
sbb
jbe
cmp
jnp
incb
inc
jno
push
mov
loop
repz
mov
mov
addb
icebp
out
cmp
push
mov
jg
in
pop
sub
jne
inc
push
mov
push
jns
lcall
outsl
inc
add
sbb
jno
adc
push
test
inc
adc
out
lretw
gs
sti
push
stc
xchg
push
popf
xchg
int
imul
or
pop
mov
jb
pop
xor
sti
pop
filds
mov
cltd
aad
cmp
add
jecxz
clc
and
or
pop
inc
cmp
bound
jno
icebp
out
fsubrs
cwtl
inc
int
and
out
push
pop
mov
jne
cmp
out
jnp
jns
daa
mov
or
or
and
sub
mov
rolb
push
int
push
or
dec
cmp
sarl
mov
outsb
cwtl
pop
mulb
pop
outsb
aam
push
xchg
jg
and
mov
sub
push
mov
mov
stc
inc
push
cmc
xchg
mov
push
mov
ret
sub
in
jnp
push
cmp
push
mov
xchg
and
mov
test
jge
mov
ret
mov
stos
sub
jae
fwait
rorb
xor
popa
das
add
call
jno
iret
popa
or
es
push
mov
adc
enter
sub
test
cltd
or
pop
fs
fs
sub
pop
xchg
pop
movsb
imul
mov
clc
sarb
push
pop
fdivs
repnz
xchg
xor
movsl
add
dec
iret
xchg
push
push
pop
mov
and
fnstcw
fsqrt
mov
inc
imul
js
test
pop
shrl
aad
jle
xchg
scas
pop
jl
not
test
jno
dec
inc
cld
orb
xor
xchg
jge
lret
sub
out
loope
xor
pop
sbbl
gs
and
dec
cli
xchg
out
and
outsb
xor
mov
push
jbe
cmp
mov
cmp
stc
mov
pop
test
loop
pop
outsb
adc
out
mov
add
bound
ds
cmp
cltd
jmp
ss
int3
mov
pop
dec
mov
ss
add
cmpsb
aam
cmp
mov
inc
push
jg
xor
cmp
adcb
loopne
cltd
loop
in
xchg
rcrb
lods
push
outsl
stos
ljmp
test
sub
cmpsb
das
enter
dec
lret
xchg
push
pusha
inc
stc
mov
inc
scas
add
aam
and
cs
pushf
or
fisttps
in
test
ljmp
imul
push
pushf
xor
int
mov
inc
and
dec
sub
mov
push
adc
aaa
push
pop
repnz
push
mov
sub
add
and
call
adc
idivb
xor
loop
lods
xor
aam
call
dec
ds
and
inc
sub
repnz
andl
xor
insl
adc
pop
xor
lds
pop
in
push
enter
jmp
fiaddl
inc
ja
fdivrs
and
inc
out
add
pop
inc
jbe
or
sub
jge
jne
pop
mov
pop
scas
ret
inc
orb
je
jmp
adc
lea
jecxz
mov
scas
mov
loopne
lea
les
pop
dec
add
xchg
jle
adc
jmp
and
or
push
movsl
or
stc
imul
mov
sub
imul
jecxz
cltd
in
dec
rolb
sbb
je
inc
mov
pop
or
loop
push
dec
test
inc
push
mov
cmp
lods
jle
scas
sahf
add
in
outsb
mov
xchg
in
and
aas
inc
xor
mov
gs
mov
jle
cmpsl
xor
sti
sub
arpl
add
push
adc
repz
adc
add
lock
fistpl
xchg
ret
inc
shll
test
addb
decl
pop
add
lret
nop
dec
dec
xchg
int3
mov
test
and
lods
rcr
add
fwait
hlt
aad
cld
cmpl
mov
mov
in
iret
inc
movsl
jbe
aam
push
call
imul
mov
aas
and
mov
jno
sub
sti
jne
les
mov
sbb
lcall
xorl
adc
outsb
aam
daa
je
fimull
out
cmp
jp
popa
imul
cmp
test
sbb
sbb
sbb
lret
xor
pop
push
inc
push
addl
int
dec
rcr
adc
ja
sarl
dec
sub
add
jno
mov
xchg
push
int3
pop
push
fadd
xchg
dec
lahf
and
dec
sbb
xchg
mov
mov
add
add
add
fstpl
ljmp
je
imul
rclb
xchg
pushf
and
leave
aad
lahf
mov
add
std
jge
push
xor
insb
mov
pop
ds
jecxz
imul
lods
loope
sbb
outsb
jmp
xchg
test
jle
cs
jp
pop
xchg
pop
jge
dec
cmp
mov
arpl
pusha
out
mov
add
jmp
dec
adc
xor
xchg
outsb
inc
fsubl
add
and
shll
or
ja
jge
mov
pop
cmp
ljmp
out
cwtl
cmp
out
mov
mov
dec
dec
aam
xor
jb
or
jnp
jle
push
jmp
jmp
adc
icebp
imul
out
fiadds
cmc
or
dec
jno
mov
or
enter
push
aad
push
jae
int
xor
in
aam
cmp
or
xchg
sub
xor
jb
add
flds
cli
scas
jp
mov
movsl
rep
mov
jp
scas
cmp
xchg
cli
stos
xorb
lods
mov
push
loope
outsb
loop
cmp
js
mov
mov
cmpsb
test
data16
in
jbe
push
inc
cmc
mov
push
iret
add
pop
gs
mov
sti
sbb
jle
add
jg
and
mov
push
add
lahf
pop
mov
mov
ret
jb
cmp
jmp
scas
stc
pop
nop
cwtl
adc
je
gs
cmc
cmpsb
and
test
ret
stc
mov
adc
mov
push
inc
lcall
dec
push
cmp
xor
add
ds
xlat
sbb
fucomi
imul
loop
dec
cmp
lods
lcall
sbb
and
push
faddl
jg
pop
outsl
lock
xorb
sbb
imul
aad
into
pop
sbb
mov
push
xlat
bound
daa
jecxz
cmp
mov
mov
cmp
cli
stc
aas
and
lret
dec
cmp
jo
outsb
adc
mov
mov
ret
add
xor
sub
sub
lods
insl
and
cmpsb
fisubrs
pop
jg
outsl
push
mov
jle
push
fsubrl
aaa
and
and
adc
scas
add
xor
xorb
push
mov
add
std
cmp
dec
push
mov
test
hlt
insl
fucomp
adc
xchg
mul
sub
stc
push
stc
mov
inc
imul
mov
scas
mov
jg
ud2
cld
push
inc
xor
ljmp
dec
iret
mov
imul
inc
jl
and
test
cmp
lea
add
lock
mulb
mov
fs
cmp
fs
in
xchg
mov
mov
test
sub
mov
cmpsb
fcmovbe
insl
mov
aas
push
into
cli
mov
movsl
jne
pop
xchg
jp
mov
imul
outsl
jne
test
popf
cmpl
push
stc
pop
sub
adc
pop
adc
loop
mov
les
mov
sbb
insl
or
xchg
mov
jge
popf
and
stos
ret
cld
sub
pop
xor
dec
outsb
and
out
out
je
lods
jecxz
fimull
shlb
subl
mov
xchg
dec
inc
bound
imul
push
and
push
cli
aas
bound
inc
mov
bsf
jp
mov
pop
sub
add
cwtl
jbe
ljmp
iret
adc
nop
jo
out
and
push
fmull
leave
adc
movsl
scas
loopne
cld
jnp
dec
test
inc
push
push
sbb
push
lea
sub
mov
test
or
mov
xchg
push
and
or
fstpl
cmpsl
outsl
cmp
into
jb
dec
mov
jl
push
pop
clc
push
bound
add
sub
aam
xchg
mov
addr16
ljmp
inc
mov
mov
repz
cmp
cmp
jmp
flds
fists
dec
or
ljmp
sbb
imul
mov
imulb
and
movsb
sub
jge
xchg
faddp
mov
ja
cmp
je
aaa
enter
adc
adc
fwait
nop
mov
ret
stos
sub
or
test
gs
push
or
sub
push
popa
or
add
hlt
adc
mov
insb
mulb
popf
mov
cltd
and
iret
enter
or
es
pop
push
inc
or
fldt
push
and
and
dec
aas
mov
dec
mov
cmpl
jg
rorl
inc
jne
into
jl
aaa
les
in
add
mov
xchg
push
pop
sub
dec
in
or
sbb
cld
mov
cmp
lret
ret
mov
pusha
cmpsl
cmp
jno
dec
bnd
lods
pop
push
hlt
scas
rclb
xchg
pop
add
lods
and
mov
psllw
jmp
or
xchg
dec
xor
adc
xor
aad
sub
and
fisttpl
cltd
jp
mov
adc
cld
xor
jle
incb
int
addl
outsb
lods
pop
sbb
mov
lret
xchg
or
fdivr
push
adc
mov
insb
and
addr16
dec
xor
and
pop
and
jns
int3
std
add
das
pusha
repz
in
add
pcmpeqw
pop
sub
jnp
lea
jle
or
mov
jecxz
in
roll
mov
out
jae
ret
popf
loopne
xor
cltd
and
rol
test
or
xor
ret
popf
sbb
adc
xchg
or
mov
aaa
add
xchg
int
stc
gs
xor
lea
sbb
movsl
xor
shll
jb
jp
popa
inc
and
out
push
in
cld
add
daa
lret
test
shrl
pop
ja
into
and
inc
dec
loop
push
ret
nop
cwtl
add
lods
popa
adc
jno
dec
out
sub
adc
add
jno
repz
insl
sarl
popf
fldl
sti
add
adc
lods
pop
ja
mov
les
rcrb
das
jge
fwait
inc
mov
icebp
bound
push
hlt
sub
imul
addb
lret
add
jp
int
push
push
inc
mov
lods
mov
in
cmp
mov
cmp
xor
pusha
fiadds
fucomi
lods
imul
push
jmp
add
sub
lods
mov
decl
scas
ds
and
inc
jae
mov
aam
mov
mov
cmp
je
mov
cli
es
imul
jo
cmpsb
or
les
enter
push
nop
cmp
into
fadds
jae
testb
xchg
inc
xlat
xchg
divb
movsb
clc
mov
addr16
pop
test
faddl
ret
add
fmul
popf
into
push
adc
adc
sbb
mov
or
sbb
cs
mov
xchg
ja
scas
jmp
adc
mov
xor
shll
addb
out
pop
push
jnp
pop
sub
push
icebp
adc
ret
inc
iret
push
cmp
inc
push
shl
push
adc
lods
push
mov
inc
xchg
popa
mov
jle
out
xor
fwait
inc
and
or
aad
or
rcrb
push
push
repz
hlt
sub
insb
rclb
aam
lock
in
jl
aad
in
push
xor
inc
push
ficoml
ja
lds
jno
aam
stos
or
cmp
enter
add
mov
imul
ja
lret
pop
mov
fildll
push
flds
and
xor
loop
jbe
ds
ljmp
cmp
pusha
cmp
mov
gs
dec
xchg
sbb
stos
cld
mov
add
adc
jge
add
cmpb
pop
or
outsl
jnp
and
inc
je
xchg
xor
or
jmp
addr16
xorb
cmp
hlt
push
jb
xorl
repnz
xor
mov
sub
int3
ss
in
cs
cltd
pop
test
sub
sbb
jns
mov
sbb
mov
call
in
in
push
pop
fiaddl
mov
add
pop
xor
add
insl
pushf
mov
lahf
dec
adc
lcall
add
push
js
addb
sub
pop
pop
xor
inc
inc
loop
enter
mov
sub
call
mov
sub
or
add
das
sbb
sub
and
rorl
sbb
sbb
shrb
sbb
xchg
cmp
add
inc
sbb
mov
into
lret
cmpb
popl
and
sub
je
pushf
inc
repnz
xor
in
xlat
or
xchg
mov
gs
fwait
clc
xchg
iret
add
adc
loop
out
jp
mov
jmp
fdivr
sub
mov
js
cmpsb
mov
outsl
jnp
arpl
cmc
mov
ljmp
mov
loope
test
adc
iret
sbb
inc
in
out
bound
aas
xchg
or
mov
xlat
push
mov
sahf
dec
mov
jb
fs
in
aad
pushf
imul
sub
cltd
shlb
jecxz
dec
rcrl
mov
push
loopne
je
xchg
inc
aaa
push
jnp
ja
pop
sti
lcall
push
orb
scas
xlat
test
push
ss
test
aad
je
arpl
adc
xchg
xor
add
mov
inc
add
xchg
pop
pop
or
pop
mov
test
repz
scas
sbb
jl
inc
fdivl
push
adc
fisubs
std
loopne
test
in
test
xor
sub
int
cltd
ja
xchg
cmpb
das
repz
mov
je
jg
loop
push
sbbl
cmp
ret
pop
push
loope
int3
or
xor
bound
sbb
ror
adc
push
sbb
icebp
jne
addr16
sbb
jbe
jp
mov
push
fidivrs
mov
lret
test
cwtl
jle
movb
sbb
dec
cli
inc
les
stos
iret
adc
fnstcw
mov
or
fwait
int3
popf
lea
js
xor
lcall
jp
lahf
loope
cmp
mov
sarl
lea
xor
cmc
mov
add
outsl
add
repz
shrw
outsb
push
adc
sub
test
push
ss
mov
shrb
and
jo
notb
adc
or
popa
xchg
f2xm1
jns
jg
dec
pop
add
and
mov
ret
test
mov
fs
add
fnstenv
cli
je
into
sub
push
jnp
fwait
das
sbb
jne
xor
ficomps
cmc
js
mov
push
scas
inc
int
fldl
test
xor
fcoms
hlt
hlt
push
xchg
xor
pop
add
pushf
and
sub
orl
mov
enter
daa
cwtd
stos
cs
sbb
adc
add
frstor
stc
pop
decb
push
sbb
cmpb
es
dec
and
or
in
fldt
inc
add
ret
repz
adc
arpl
imul
dec
dec
and
repz
cmpsb
and
lods
ret
pop
repnz
cmp
rorb
gs
jbe
shrb
xor
fs
or
cwtl
jb
cmpsb
stos
mov
ja
mov
mov
test
lahf
xorb
loope
inc
jae
jmp
scas
xor
fisubs
in
mov
lods
mov
pop
jns
add
lahf
jbe
movsl
and
fwait
mov
out
test
pop
xchg
nop
add
das
nop
popa
inc
out
neg
pop
mov
clc
cmp
fidivrl
xor
cmp
adc
cmp
inc
popf
stos
lods
and
ja
addr16
cmp
sar
ja
adc
mov
aad
xchg
gs
mov
rcll
pusha
jae
into
dec
adc
xchg
sub
stos
mov
push
ficoml
inc
iret
push
movsb
sbb
dec
jnp
push
imul
add
adc
mov
lret
jo
bound
cwtl
xchg
sub
in
jg
dec
pop
mov
xor
adc
sub
adc
inc
outsl
lds
jo
xchg
in
call
push
xchg
or
pop
mov
test
sub
dec
call
in
lock
and
in
leave
lock
bound
scas
push
push
fcom
jge
je
xchg
cltd
xor
sbb
fimuls
fildll
clc
std
push
inc
sbb
dec
fwait
mov
bswap
xlat
push
pop
loop
fwait
cmpl
data16
int
jns
xor
jmp
inc
and
call
shlb
loope
imull
xor
in
scas
fldenv
fs
and
adc
inc
add
ds
mov
rolb
lret
dec
ljmp
or
adc
out
rcl
inc
jle
repz
and
es
inc
in
testl
loopne
fsts
jecxz
pop
jae
pop
lock
popa
lods
mov
test
enter
mov
add
jecxz
or
cmc
mov
adc
sbb
test
jecxz
andb
test
stos
or
pop
clc
cmpsb
and
icebp
ljmp
or
mov
loop
lahf
fwait
cmp
push
xchg
ret
jmp
mov
das
imul
pushf
jmp
cmpsb
mov
lahf
add
inc
jge
cld
inc
xchg
sbb
adc
push
xlat
xor
lahf
cmp
mov
stc
xor
sahf
int3
adc
test
dec
adc
rcrb
push
adc
popf
xchg
aam
aaa
dec
sbb
pop
jns
sti
daa
mov
je
inc
push
cmpsb
mov
inc
cltd
or
push
cmp
xor
xchg
pusha
inc
cli
sub
push
lods
jecxz
xchg
int3
cmp
and
mov
lods
dec
xor
adc
dec
xor
mov
rcrl
hlt
test
fwait
xchg
sub
repnz
and
cli
jno
add
aad
stos
push
popf
int
fldl
ljmp
orl
xor
ss
outsb
ds
push
dec
jb
je
xchg
cli
sbb
addr16
push
cli
sarl
cmp
cmp
inc
cmp
stos
or
sbb
movb
rorl
roll
jle
inc
shll
push
es
mov
and
push
inc
pop
sub
or
divb
gs
cmp
lds
mov
sahf
test
xlat
jb
pusha
inc
fwait
test
xchg
sbb
repz
mov
cltd
jbe
into
push
fldenv
push
movsb
xor
cmpsb
sbb
jg
xchg
jecxz
xchg
ret
inc
inc
sub
mov
sahf
jmp
sub
dec
popl
dec
add
into
arpl
mov
rclb
fs
hlt
test
mov
aas
decl
mov
scas
addl
in
add
jae
leave
cmp
push
pop
lret
in
inc
in
cmp
hlt
sub
movsb
sub
mov
call
mov
aaa
fsubs
mov
repnz
dec
sbb
fsubrs
cli
scas
js
cs
sub
push
fsts
pop
enter
dec
stc
jo
js
rolb
in
xchg
in
add
jb
outsb
mov
xchg
dec
mov
sbb
xchg
xor
mov
mov
mov
dec
imul
jl
fcmovnbe
ret
xchg
lods
loope
mov
and
mov
mov
dec
xchg
xor
sbb
or
fstps
subl
or
ja
jl
xchg
addb
add
adc
fpatan
cmp
mov
daa
out
ret
push
xor
shrb
sahf
push
xor
cs
pop
and
flds
pop
leave
cmp
aaa
dec
mov
insl
andl
adc
push
movsl
ja
in
jo
mov
or
xor
lods
inc
fs
lret
jp
inc
popf
jg
jmp
sbb
sbb
pop
out
mov
mov
and
andb
mov
push
aad
ret
and
fs
int3
stc
xor
sbb
sub
mov
dec
push
push
sbb
insb
xchg
adc
repnz
mov
jns
sub
scas
fsubrs
xor
inc
add
ret
mov
ret
sub
jne
jg
in
and
add
mov
jl
loop
sub
popf
loope
pop
outsb
xor
cli
jp
repnz
int
cld
push
sahf
dec
test
adcb
pushf
aaa
scas
popf
xor
gs
in
xchg
xchg
xchg
mov
loope
int
stos
lods
xor
add
mov
mov
xchg
lods
push
cwtl
mov
enter
inc
ds
pop
inc
nop
mov
sbb
and
or
mov
fiadds
jno
and
scas
or
in
rclb
cmc
mov
sbb
jmp
ja
insl
sahf
sbb
pusha
aas
movsl
fwait
mov
lcall
movsb
mov
lret
jl
xorl
stos
or
imul
and
or
mov
dec
push
sub
repz
aad
insl
mov
or
lock
add
rcll
add
or
mov
fcmovnb
enter
cmp
push
rcll
mov
arpl
movsl
or
lahf
test
movsl
sub
jo
cmp
mov
mov
pop
push
mov
in
decl
sub
aaa
sti
inc
lcall
add
jo
mov
or
loopne
cmp
mov
cld
mov
cmp
in
sub
pop
jle
lea
mov
in
test
add
jge
push
inc
inc
imul
push
xor
mov
lds
test
jne
jne
mov
in
loop
test
rorl
xor
cld
inc
lods
or
out
les
loop
inc
or
nop
call
pusha
xor
xchg
pop
jno,pt
mov
adc
imul
jge
aad
stc
arpl
ja
mov
fwait
or
fisubl
jns
dec
push
insb
hlt
xchg
cmpsl
pop
imul
xlat
push
mov
push
adc
aad
cli
gs
xorl
pop
adc
inc
insl
in
lret
sub
sbb
into
jae
lods
movaps
addb
dec
jle
pop
sbb
xlat
xchg
xchg
fpatan
jo
scas
xor
mov
adc
jp
out
jmp
jnp
inc
test
scas
mov
sbb
in
adc
fisttpl
lahf
ljmp
push
aaa
out
dec
and
int
and
fucomip
cmp
inc
ss
lcall
lea
outsb
stos
out
sahf
out
imul
xchg
fdivr
pushf
in
mov
lods
lea
adc
andb
pop
add
enter
jle
addr16
mov
dec
sub
push
movsl
xor
xor
cmpsl
push
pop
adc
sub
loopne
daa
clc
clc
fwait
sub
gs
icebp
test
xor
rdpmc
arpl
in
scas
mov
lret
test
dec
adc
sbb
jno
sbb
xor
call
test
sti
fisubs
mov
sub
out
push
add
push
in
sub
shll
add
or
or
push
and
dec
lds
pusha
test
jmp
ljmp
shr
js
cmp
pop
and
sub
lcall
scas
popa
pop
dec
bound
fldl
imul
sub
push
push
outsl
dec
jns
dec
dec
lock
cmc
push
adc
sbb
xchg
imul
out
dec
jl
mov
mov
or
dec
in
ds
xchg
mov
mov
fiadds
insl
bound
insb
xchg
push
or
push
sbb
aam
mov
icebp
and
pop
and
aad
test
mov
mov
mov
sub
mov
int
pop
lods
arpl
lcall
es
push
sti
icebp
cli
mov
or
and
rolb
inc
movsl
test
fistps
pop
lea
sahf
pmovmskb
out
out
fidivl
mov
test
sub
gs
lret
or
fldenv
insb
dec
popa
cmp
sbb
cltd
adc
and
inc
sub
cld
cs
out
loopne
jno
jb
aam
mov
jae
mov
pop
fnstcw
push
in
cli
data16
or
std
sub
sub
movsb
outsb
test
pop
and
sbb
pop
sbb
pop
icebp
pusha
in
pop
pusha
and
popf
mov
and
loope
jp
mov
cli
inc
push
pop
and
xlat
fwait
pop
sbb
int3
iret
das
cli
outsb
mov
inc
iret
and
xchg
shrl
mov
mov
sub
scas
push
cmp
jecxz
adc
test
mov
data16
es
movsb
push
outsb
add
sub
sbb
shlb
in
lret
xor
mov
mov
mov
fsubrl
xchg
dec
inc
adc
mov
shll
push
sbb
inc
and
fdiv
dec
orb
repnz
call
sub
pop
out
call
pop
mov
push
test
cmc
jmp
aas
mov
movsl
add
cmovae
cmp
pop
adc
lea
out
sbb
sti
and
xor
jns
push
push
cli
stos
sub
int3
out
shlb
fidivl
pop
jle
int
ret
notl
ljmp
stos
mov
fisubrs
fistpll
push
shlb
imul
out
mov
xor
mov
jno
or
xor
call
dec
pop
bound
lret
pop
lods
lret
push
fmull
loopne
cmp
adc
outsl
lcall
jnp
lcall
shl
fildll
jecxz
sbbb
vpor
pushf
loope
out
std
dec
stos
lods
sub
test
test
jae
scas
ljmp
in
inc
cmp
popl
push
jecxz
jne
mov
and
jnp
adc
cmp
dec
sahf
and
and
lret
inc
mov
inc
jae
and
jne
add
andl
rclb
pop
inc
rclb
sub
or
dec
mov
dec
and
jmp
pop
cld
in
adc
daa
jne
ljmp
call
mov
xor
xchg
test
sbb
cltd
xor
and
adc
das
call
push
xor
dec
or
and
hlt
xor
push
inc
sbb
js
sbb
lods
es
and
loopne
insl
cltd
cbtw
and
push
sub
mov
inc
subb
jle
mov
mov
mov
pop
cwtl
ja
lcall
pop
cwtl
cmp
setle
mov
es
subl
and
mov
inc
inc
xor
add
lret
mov
jnp
aas
cmpsl
pop
dec
icebp
ljmp
or
rorb
push
pop
xor
sti
ret
dec
iret
loopne
aad
jl
dec
rolb
shll
loope
cmp
mov
imul
or
mov
push
testb
aam
and
in
dec
mov
xchg
movsb
imul
pop
inc
pusha
mov
sub
push
aaa
hlt
mov
dec
cmp
inc
adc
xor
lods
pop
out
sub
repz
cmp
jg
adc
popa
xor
fidivrs
jns
data16
roll
popf
testl
das
fistpl
push
fistpll
xor
inc
scas
mov
repz
nop
clc
loopne
leave
dec
mov
notb
adc
bound
jmp
ja
ficoms
out
icebp
fidivrl
push
adc
add
inc
cmp
mov
mov
add
mov
test
push
push
xchg
push
mov
xor
daa
ficomps
sbbb
ja
sahf
pop
enter
pop
outsb
mov
add
mov
xor
and
ja
movsb
rclb
rcll
and
fmuls
ss
and
xor
div
sbb
xorb
fcmovnb
mov
scas
sti
or
or
sub
cli
repnz
add
dec
pop
push
test
rcll
enter
add
fsubrs
pop
fcomi
nop
cmp
outsb
ss
mov
cmp
scas
xchg
jnp
add
outsl
mov
imul
sbbb
pop
popa
pushf
jle
scas
push
mov
pushl
sub
xor
je
iret
mov
mov
inc
pop
arpl
shlb
lret
mov
iret
sarl
insl
stos
imul
or
push
rclb
frstor
or
xchg
fs
adc
das
dec
mov
jle
push
repnz
es
mov
sbb
adc
mov
fwait
es
loop
addl
push
shl
push
sahf
inc
outsb
loope
xor
mov
in
dec
jnp
xchg
pusha
pop
cmp
jmp
jl
add
and
out
mov
ja
cmp
lcall
inc
test
popa
or
ret
cmp
es
hlt
mov
pushf
or
mov
ficoms
cmp
mov
add
fidivl
in
and
imul
inc
pop
scas
xchg
cmp
jecxz
hlt
int
pop
mov
pop
ja
mov
addr16
lods
cmpsb
xor
ja
jne
sub
jnp
inc
das
in
jge
lods
ja
jl
mov
aam
in
and
cmpsb
imul
sub
fsub
mov
mov
push
test
push
xchg
dec
sbb
dec
mov
cmp
pusha
dec
daa
cmp
xchg
cli
shlb
mov
add
mov
or
outsl
das
cmpl
adc
pop
test
jnp
xchg
adc
insl
test
jle
lahf
aam
stos
pop
clc
mov
dec
stos
test
sub
ljmp
pop
add
mov
push
dec
fldl
fmul
lahf
clc
xor
push
dec
hlt
lret
inc
nop
add
fnstcw
lods
dec
ficomps
push
add
call
mov
test
jp
xor
pop
je
inc
imul
mov
shr
mov
sbb
jp
pushf
xchg
jb
dec
dec
test
add
ret
mov
into
dec
fldl
not
mov
std
xorb
sbb
jbe
lods
out
jae
in
mov
sbb
into
ror
daa
cmp
fadds
xor
mov
mov
call
xchg
sub
xlat
lds
sbb
movsl
outsb
clc
loope
adc
xorl
lahf
adc
cwtl
stc
into
pop
add
mov
lods
adc
hlt
fildll
and
sub
lret
add
mov
ror
adc
xchg
sahf
mov
xor
pop
mov
mov
xchg
sbb
lret
les
sub
mov
jl
pushl
pop
jnp
divl
ja
adc
mov
fcoms
lods
mov
sbb
jge
fcoms
loop
xchg
sub
cmp
xchg
add
pop
ja
mov
daa
je
lret
in
shll
jno
jg
lahf
test
xchg
insl
shl
xor
imul
or
aad
dec
mov
pop
jle
xchg
sbb
xor
out
adc
xor
into
xor
dec
scas
scas
dec
test
imul
xor
sub
jmp
enter
sbb
jb
adc
shrb
pop
dec
shlb
fld1
and
test
and
or
pop
jae
inc
lret
xchg
mov
sti
in
fcmovnbe
mov
cmpl
add
int3
ljmp
and
ret
scas
jecxz
push
jmp
push
into
pushl
ret
adc
dec
inc
inc
add
xchg
xchg
push
into
data16
mov
call
mov
orb
rcr
xchg
mov
out
rep
int3
cmp
jnp
sbb
add
aas
sub
std
mov
dec
dec
in
movsl
stc
cmp
mov
call
xchg
jo
idivb
xlat
shlb
mov
test
shl
bound
popf
sub
stos
mov
jle
mov
scas
add
sti
scas
es
inc
or
out
pop
xchg
mov
sbb
mov
sti
inc
xor
clc
lds
subb
jge
dec
push
mov
ret
leave
dec
clc
push
or
dec
sub
mov
adcl
ja
loopne
fmul
loop
push
and
or
adc
arpl
fsubrp
adc
pop
sbb
or
cmp
in
lahf
icebp
sti
jns
les
pop
and
pop
push
jno
aad
push
xchg
and
sbb
andl
cmp
dec
adc
cmp
ds
or
std
cmp
fsub
roll
movzwl
in
and
notl
arpl
add
fwait
dec
jecxz
sbb
std
or
fcmovne
jne
mov
stc
pusha
pop
cmp
adc
mov
ret
or
insl
and
ret
push
xchg
mov
push
pop
pop
push
scas
shrb
cli
stos
cwtl
xchg
mov
shr
cwtl
mov
push
mov
bound
in
and
loopne
sbb
push
inc
fiaddl
xor
into
inc
fnstcw
fistl
sub
loope
xchg
lret
cmpsb
sub
mov
in
movl
cmpsb
loopne
or
inc
and
xor
add
popf
jbe
lahf
push
or
or
neg
and
stos
jno
cmp
adc
testl
arpl
call
insb
aam
xchg
loopne
xchg
sbb
shrb
pop
pop
inc
adc
push
add
xor
xchg
pop
in
or
enter
xchg
pop
sbb
fdivrs
dec
int
and
pushf
sarb
test
push
sub
xor
fwait
ds
adc
xor
test
dec
xorl
pop
aas
push
test
add
les
pop
jns
in
adc
pop
sbb
pop
ret
mov
inc
xor
jp
shlb
insl
sub
push
or
nop
in
sahf
ds
test
and
in
jbe
xor
test
pop
sbb
lret
xor
and
out
sub
pushf
loope
dec
lcall
mov
scas
ss
ljmp
iret
in
or
data16
pop
mov
push
pop
popf
push
xor
jno
fldenv
sarl
sbb
or
fcomps
jge
inc
lcall
xchg
out
push
int
insb
jo
stos
cwtl
mov
orl
or
mov
sti
sbb
mov
shlb
jle
in
cli
dec
lock
xlat
mov
decb
xchg
fildl
cmpsl
jb
xchg
adc
pushf
inc
push
and
cmp
jb
rol
push
jne
and
enter
in
add
mov
xchg
mov
and
mov
imul
mov
into
repnz
pop
popf
mov
cmp
into
or
scas
dec
xor
sbb
cmpsb
mov
jnp
adc
xchg
ss
nop
enter
pop
test
pop
mov
xchg
lcall
push
or
daa
add
rol
mov
ret
sbb
push
cli
negl
lods
fstpt
pop
xchg
add
loop
leave
adc
mov
rol
test
dec
fcoms
sbb
js
sarl
out
pop
push
or
fs
jle
fidivrl
add
stos
sbbb
adc
call
and
into
dec
mov
add
hlt
inc
pop
mov
fstpl
andb
ljmp
iret
loope
add
add
repnz
jno
or
dec
adc
inc
mov
hlt
dec
mov
inc
in
cmc
testl
rcrb
fcoml
insb
add
and
jbe
inc
push
or
xor
adc
mov
lcall
adc
clc
lahf
outsl
je
out
jmp
arpl
sti
scas
push
lea
ret
adc
xlat
inc
insb
addr16
push
or
cmp
mov
cmp
xchg
adc
addr16
inc
dec
or
or
cmc
cmp
pop
hlt
mov
push
in
xor
pop
mov
xor
xchg
outsl
xor
mov
cli
push
jle
cmc
insl
fidivrl
lret
imul
or
pop
adc
popa
mov
xchg
mov
sub
das
inc
or
pushf
push
mov
in
xor
add
insl
fisubs
adc
jp
les
add
test
loope
loop
bound
test
mov
stos
int3
and
jl
fldt
leave
xchg
data16
bound
fbstp
xchg
jp
das
fcmovbe
and
cmp
aas
and
push
xor
mov
outsb
jge
push
lahf
adc
movsb
jg
sbb
icebp
hlt
push
push
pop
push
in
lods
sbb
push
in
js
add
sub
shll
mov
aaa
cmp
fisubrs
fsts
mov
add
inc
bound
or
loopne
cmc
arpl
les
dec
xorl
shrl
sub
jno
mov
or
test
push
mov
mov
repnz
sbb
mov
inc
xor
adc
sbb
cmpsl
andl
fwait
out
mov
cmpsl
add
loope
mov
xor
inc
daa
pop
arpl
loope
dec
mov
adc
call
dec
jbe
pusha
loopne
pusha
fidivl
mov
and
out
push
fwait
adc
lock
inc
insl
jo
es
sarb
push
push
pop
hlt
mov
out
loop
xor
pop
inc
jp
mov
mov
or
mov
outsl
daa
bound
inc
pop
jl
aas
and
xchg
xchg
lret
repz
jo
loopne
sbb
pusha
inc
pop
imul
loope
pop
je
insb
lods
or
lock
hlt
or
or
jo
push
pop
sbb
bnd
ja
test
jne
loope
cli
xchg
mov
adc
cmpsb
or
test
pop
mov
das
jecxz
xor
mov
add
lea
jmp
sbb
push
loope
pusha
mov
mov
mov
xor
jno
mov
loopne
adc
test
mov
sbb
aas
pop
pop
sbb
icebp
fdiv
data16
loop
xor
sub
mov
sbb
inc
jle
sub
in
int
cmpsb
xchg
data16
in
cmpb
jge
sbb
gs
mov
or
hlt
sub
cmp
addr16
push
inc
out
mov
inc
pop
leave
popf
inc
sarb
sbb
pop
sarl
add
and
xchg
jne
mov
adc
sbb
sbb
cmpsb
inc
insb
mov
pop
stc
test
sbb
or
push
imul
loop
loopne
rcr
cmp
daa
in
ret
xorb
stc
mov
dec
fs
sbb
fidivl
cmp
movsb
xchg
pop
test
loop
jmp
mov
mov
cwtl
test
subb
and
mov
fwait
test
cmp
test
dec
mov
cmp
pop
sahf
insb
xchg
into
sbb
xchg
pop
scas
and
pop
cli
inc
add
add
mov
int
mov
jns
insl
imul
sbb
or
out
cmpsl
sbb
xchg
std
int3
scas
add
xchg
out
ds
cs
mov
jle
cmp
mov
repnz
sub
mov
push
or
jne
cmp
rcl
bound
xchg
aad
les
lret
sub
scas
add
xlat
repz
or
subl
ret
jmp
xchg
lds
xor
aam
xchg
dec
loope
mov
clc
fistps
pop
xchg
mov
repnz
mov
popa
cmp
mov
sbb
push
testl
arpl
cs
fisttps
adc
cwtl
dec
or
jae
pop
gs
jns
push
test
sahf
rolb
lock
sub
mov
jl
pop
inc
rcrl
mov
cs
push
and
leave
dec
lea
inc
lret
lret
xor
cld
fimull
mov
repz
mov
int
int3
cmp
movsl
std
daa
sahf
push
rcl
pushf
fldl
xchg
pop
push
jnp
popf
push
add
or
lahf
xchg
jle
dec
pusha
push
add
daa
or
mov
or
xor
aas
cltd
xchg
lret
cmp
mov
mov
jae
mov
btc
mov
add
addl
xor
add
out
push
sbb
leave
cmpsb
mov
inc
dec
test
lds
rclb
jne
scas
ret
aas
sbb
frstor
movsb
aam
popf
xor
sub
cmp
mov
mov
adc
lahf
jecxz
lea
push
inc
dec
repnz
push
iretw
add
lcall
cmp
xlat
xchg
mov
push
rclb
rolb
lret
test
lds
das
mov
js
jg
xchg
lods
ljmp
repz
roll
push
mov
lds
enter
mov
dec
out
stc
sub
ljmp
jae
jge
mov
xchg
movsl
cli
sub
inc
loope
inc
sbb
fldcw
test
jb
mov
pop
out
out
push
mov
icebp
stos
xchg
xchg
cmp
lods
pop
sbb
or
ret
xchg
jnp
psubb
je
cmpsb
ja
add
jle
lcall
sbb
std
push
lcall
jnp
pop
push
inc
add
mov
std
loop
movsb
fs
dec
push
in
xchg
and
lock
iret
mov
nop
hlt
mov
xor
loope
out
pop
sub
xchg
nop
xchg
mov
cmpsb
sbb
loopne
push
and
jle
inc
mov
cli
inc
je
mov
push
mov
push
or
stc
fwait
jo
and
imul
sbb
or
push
shrl
pop
mov
jg
mov
pushf
or
test
int3
pop
out
nop
je
pusha
std
dec
mov
fs
sbb
jmp
movsb
xchg
jo
fxch
mov
movsl
cmc
inc
ja
xor
sub
jg
xlat
add
mov
test
icebp
and
push
inc
imul
in
movl
add
adc
outsb
pop
cmp
pop
dec
fsts
cmpsl
push
xor
pop
xchg
into
dec
rcrl
fs
jge
push
cmp
mov
xchg
out
outsl
into
rclb
cmpsb
jne
idiv
mov
pop
add
jnp
inc
pop
decl
ficomps
and
insl
mov
and
cmp
mov
xor
enter
pop
sub
or
fsubrs
mov
mov
das
js
add
call
dec
rorb
xor
xchg
push
imul
adc
or
icebp
jno
push
fcmovnb
mov
adc
cmp
ss
push
sub
or
sub
pop
out
addr16
sbb
test
add
jns
ficoml
insb
sub
jmp
test
mov
adcl
and
decl
xor
push
int
inc
inc
or
into
or
adc
or
jnp
inc
inc
cmp
les
int
in
in
into
cwtl
lods
test
sub
iret
dec
mov
daa
xor
pop
paddsb
in
stos
lock
dec
cli
aaa
mov
cld
pop
cmc
xorl
seta
pop
dec
stos
adc
jl
sub
gs
out
or
in
push
cmpl
or
sbb
dec
sub
pop
mov
idivl
fs
aaa
outsl
cmc
popf
dec
filds
ret
dec
mov
enter
cwtl
jns
xor
xchg
stos
ret
shrb
cmp
mov
cltd
lock
lods
in
stc
and
frstor
shll
sub
sub
pop
adc
xor
dec
dec
std
and
sbbl
and
push
lock
adc
dec
sbbl
and
and
or
xchg
popf
adc
std
insl
aaa
pop
xor
leave
scas
aad
mov
pusha
lea
cmc
pushl
pusha
adc
inc
outsb
jo
dec
scas
jge
lahf
repnz
or
dec
mov
pop
push
add
jns
sbb
and
xor
std
sbb
and
fidivrs
mov
xchg
pop
mov
dec
jmp
xor
pop
loop
sub
ret
pop
test
repz
in
mov
loope
sbb
andl
or
dec
nop
mov
fs
jno
push
and
sub
mov
test
xor
orl
jp
jmp
mov
outsl
test
aaa
mov
jb
js
push
stos
iret
les
push
insb
xchg
cmp
adc
stos
popf
pop
jg
xchg
pushf
aam
int3
and
scas
imul
fs
mov
sub
stc
ret
xchg
lahf
mov
movsl
cltd
loope
ss
or
xor
loop
mov
cmp
lret
loopne
dec
cmp
mov
fistps
inc
jecxz
dec
adc
mov
in
fldt
fisubrs
sbb
mov
imul
loope
jne
rcrb
inc
push
mov
in
in
or
and
enter
and
ljmp
rolb
imul
add
fldenv
subl
mov
scas
xlat
sbb
add
mov
jmp
push
into
push
fsubrs
jge
scas
sbb
outsb
jecxz
mov
sub
and
out
lret
leave
stos
stos
jecxz
jp
stos
adc
je
out
sub
cwtl
es
mov
push
sbb
inc
addr16
hlt
mov
test
in
sahf
xchg
sbb
pop
mov
mov
push
rclb
ja
add
fstpt
call
dec
lret
mov
push
mov
sbb
push
imull
repz
gs
pushl
cmp
aad
jg
fisttps
mov
jns
cs
xor
scas
outsl
int
and
and
push
popa
or
scas
xor
jge
pop
addr16
mov
push
adc
cs
call
push
gs
shll
mov
add
pop
dec
lds
or
sahf
clc
push
xchg
add
jb
add
lret
pop
jl
les
pop
xor
and
push
xchg
pop
sbb
fiadds
lret
mov
pop
xchg
pop
nop
imulb
out
push
mov
add
or
inc
jge
or
addb
out
lret
adc
out
push
mov
out
std
shl
push
repnz
fistpl
dec
ss
stos
cmp
dec
popf
scas
adc
mov
or
aad
mov
bound
jb
cwtl
sub
pushf
fsubl
xchg
xchg
lret
std
in
mov
mov
imul
imul
std
pop
pusha
xchg
lods
shlb
rcl
test
mov
sub
or
outsl
or
aad
pop
cmp
add
insb
inc
push
jns
cs
inc
sub
icebp
andl
adcl
sarb
xchg
sub
mov
cmc
in
scas
xor
in
or
sub
insb
xchg
xor
mul
bound
xchg
out
sbb
mov
notb
ja
cmp
lods
out
and
sub
ss
and
arpl
cmp
add
mov
or
xlat
jb
int3
loop
insb
aaa
adc
cmp
in
loopne
or
pusha
popf
dec
jnp
inc
imul
xchg
arpl
add
add
nop
xchg
lods
inc
mov
ljmp
mov
or
out
add
sbb
sbb
xor
in
or
ss
add
cs
xchg
mov
push
outsl
dec
shl
or
scas
and
ss
xchg
mov
jle
jnp
arpl
adc
dec
lcall
pop
out
mov
mov
mov
inc
lret
push
add
dec
or
mov
sbb
popa
jne
fidivl
jae
in
mov
cwtl
mov
aas
sub
std
shll
test
je
push
cli
mov
sbb
pop
cmp
loopne
sub
cmp
lock
sahf
in
xchg
imulb
fsubrs
mov
mov
mov
sahf
mov
xor
lods
into
inc
aad
aas
sbb
and
push
pop
push
sub
mov
jge
fists
jnp
lods
flds
rcrb
add
int3
mov
mov
in
lock
cmc
clc
mov
fs
mov
mov
stc
adc
mov
jae
ljmp
fdivp
mov
shl
add
fisubs
push
popa
push
data16
loope
cli
fistpl
xor
mov
push
cmp
stc
ss
or
nop
xor
pop
pop
mov
outsb
xor
and
push
pop
or
pusha
sbb
ja
loopne
push
push
insl
lcall
mov
in
jmp
scas
pop
gs
add
imul
fsts
add
lds
sub
cmp
ds
push
bnd
popf
or
cmp
adc
add
push
nop
xchg
jo
adc
out
dec
jecxz
mov
popa
fdivs
dec
inc
sub
inc
cltd
pop
aaa
cmpsl
jg
pop
iret
sub
xchg
jmp
bndstx
and
or
test
in
xchg
lcall
xchg
test
jne
adc
lcall
fdivrp
add
pop
jne
js
push
dec
jp
sarb
pop
adc
push
mov
pop
jg
lock
lods
push
push
popa
cltd
inc
mov
stc
add
or
mov
hlt
pop
popa
outsl
mov
push
xor
jbe
mov
and
mov
les
in
mov
cmpsb
pop
cmpsl
stc
xor
scas
movsb
repz
iret
pop
mov
fnstenv
inc
inc
mov
sbb
xchg
add
outsl
jbe
out
or
xchg
push
sub
cwtl
cmp
hlt
pop
into
shl
mov
imul
test
mov
mov
stc
or
mov
int3
cmpsl
pushf
push
test
cmp
iret
loopne
rcrl
int
mov
movsb
inc
and
jmp
cmpsl
xor
cmp
dec
adc
stc
cmp
add
iret
popf
add
sub
loopne
xacquire
imul
sub
fldl
xchg
cs
pop
ret
int3
divb
les
inc
mov
dec
adc
mov
iret
adc
dec
loope
dec
cltd
and
xor
jb
xlat
push
icebp
inc
vmwrite
push
push
cld
mov
inc
add
inc
pop
mov
mov
push
movsb
popa
pop
pop
inc
pop
je
sub
sub
movsb
jl
adc
fwait
or
pop
movsl
sti
test
daa
jnp
adcb
imul
push
pop
xchg
pop
ret
pextrw
mov
jg
mov
pop
std
and
dec
lock
jge
jmp
ret
lret
pop
inc
sbb
adc
mov
mov
fiaddl
cld
sbb
pop
sti
loopne
jmp
sbb
cmp
rorb
jbe
xor
push
jp
pop
adc
testl
pop
push
push
test
gs
gs
adc
push
test
inc
pushf
stos
dec
rcll
fidivrl
adc
ds
mov
xor
iret
mov
push
mov
enter
pop
out
rcrl
fstp
cmp
xor
popf
push
mov
jbe
addr16
dec
mov
aad
ficomps
mov
jmp
push
sbb
jecxz
or
stos
and
leave
or
mov
hlt
in
mov
ficoms
mov
movsl
jecxz
or
clc
aam
push
mov
call
out
movsb
push
cli
and
popa
repz
or
push
xor
mov
addr16
push
push
cli
cmp
lea
daa
stc
je
cld
pushf
pop
jns
test
and
or
flds
add
xchg
xchg
fs
mov
mov
jp
inc
xchg
daa
xor
mov
push
icebp
push
and
and
mov
int
sbb
ffreep
xchg
pop
movsb
adc
hlt
shlb
and
add
push
jle
add
mov
dec
sub
cmp
dec
cld
jb
stos
xchg
rolb
movsl
push
rcl
mov
leave
dec
loopne
adc
fiaddl
xchg
xchg
mov
cmp
xor
rcrl
scas
rcll
ror
fildl
or
fcoms
int3
mov
es
sbb
add
pop
lock
les
pop
out
or
dec
add
les
jmp
or
jns
paddsw
inc
and
fsub
sbb
cli
je
ret
cmpsl
push
subl
cmp
popf
push
inc
pop
adc
pop
push
int3
push
in
dec
rol
test
das
insb
std
movsl
outsb
arpl
fimull
fists
movsl
sub
or
int
int3
leave
pushf
dec
pop
pop
dec
movsl
mov
out
pop
neg
cwtl
hlt
int
xchg
dec
cmpsl
cmc
push
sti
mov
xchg
pusha
out
std
inc
jne
xchg
test
shrl
scas
mov
xor
fsubr
sub
pop
push
cmp
cmpsb
sti
dec
lock
sbbl
xor
xor
loopne
or
movsl
pop
cmpsl
mov
mov
sbb
add
mov
gs
call
ja
ds
test
push
or
test
cmovne
jne
inc
lds
cmp
jle
mov
inc
inc
xchg
cmp
dec
int3
sub
jbe
jle
test
inc
js
out
leave
and
add
inc
mov
sub
xchg
add
movsb
push
sub
arpl
sub
addl
test
into
ret
or
rorl
dec
jns
pop
pop
addr16
adc
cli
cmpsl
ficompl
hlt
shlb
dec
daa
jmp
xchg
andb
daa
push
out
lret
add
push
mov
test
out
std
dec
and
out
addr16
xchg
lock
adc
mov
adcl
iret
stos
jb
jle
jecxz
cmp
add
addl
out
sub
lds
sbb
sbb
sub
ret
and
adc
mov
imul
or
sbb
fsubrs
xor
lret
and
cmpsb
dec
jg
stc
sbb
mov
data16
test
cmp
andb
push
fldl
popf
hlt
or
in
psubusb
movsl
push
fsts
jnp
into
aam
and
inc
push
cli
add
scas
mov
jl
insb
test
loope
enter
sti
loope
pop
or
xlat
mov
adc
scas
jmp
test
loope
fdivr
out
pop
loope
and
in
fisttps
cmp
cltd
daa
mov
clc
nop
push
neg
add
xchg
mov
call
mov
mov
pop
adc
push
data16
lods
inc
popa
and
add
mov
mov
or
cld
ffreep
jae
sub
cmpb
mov
lods
test
test
xchg
sti
or
push
jle
sbb
push
mov
repz
mov
and
aam
pushf
fstpl
mov
mov
sbb
aaa
push
test
dec
mov
mov
sbb
ror
push
in
cmp
inc
dec
pop
inc
roll
and
hlt
addr16
mov
enter
fistpl
test
lea
jne
or
dec
push
inc
or
inc
cltd
mov
pop
std
addr16
and
mov
das
push
sbbb
adc
repnz
xchg
adc
inc
faddp
loopne
cli
sahf
xchg
pop
out
outsl
ja
mov
cmp
mov
dec
fsts
push
dec
enter
ss
pop
xor
repnz
inc
and
cs
rorb
xchg
sbb
lods
pushf
aam
lcall
mov
loop
cmp
je
lods
and
cmp
pusha
shlb
lcall
jle
sbb
mov
rorb
call
or
subb
jmp
loopne
mov
pop
lods
aam
ret
cmc
mov
adc
cwtl
xor
push
out
out
sbb
mov
jl
push
jl
sub
sti
sub
mov
lcall
jmp
pop
add
loop
inc
dec
test
aad
cli
xor
and
ds
mov
mov
pop
and
rcl
jo
out
push
cli
mov
pop
jo
push
xchg
dec
jae
movsl
and
lret
mov
pop
test
cld
lods
int
xchg
test
out
inc
or
jb
push
sub
push
sbb
mov
leave
mov
icebp
aam
pop
test
movsb
jae
dec
pusha
popf
jae
pop
movsl
lret
out
jmp
fstpt
pop
pop
es
inc
stc
test
xor
aad
add
mov
mov
push
inc
movsb
pop
sub
arpl
insl
inc
add
cmp
and
mov
shl
vpshaq
addr16
bound
jmp
pushf
lret
mov
test
loope
and
popf
movsb
adc
mov
pop
in
and
xchg
jmp
std
loopne
bnd
lret
adc
fbstp
xchg
push
rolb
aas
fs
jnp
cltd
out
and
int3
and
mov
stos
fwait
das
mov
jmp
push
pop
call
sahf
cltd
dec
mov
fwait
cmp
scas
out
clc
jns
rorl
add
call
movsl
mov
shrl
mov
aas
popa
add
inc
jnp
pop
fs
lock
sti
and
sbb
pop
les
ss
dec
xor
pop
ja
pop
sub
dec
fisttps
rclb
xchg
adcb
lds
add
cmp
fs
clc
pop
xchg
and
inc
popa
pusha
sbb
mov
bound
adc
lods
mov
imul
cmc
leave
mov
in
pusha
aas
in
pop
jnp
sbb
bswap
mov
mov
dec
sahf
dec
loopne
mov
xor
lods
in
lods
je
cmpsb
push
push
jae
xchg
out
ss
mov
arpl
mov
jae
jge
mov
addr16
rep
imul
or
mov
pop
sbb
cwtl
inc
test
xchg
call
mov
dec
pop
lcall
ja
leave
jne
sbb
ret
jns
scas
cmc
xor
repnz
push
sbb
popa
js
in
or
jo
cmp
fs
enter
lret
addb
repz
adc
xchg
sti
push
xor
mov
push
lret
cmp
into
lods
sti
jbe
mov
xor
mov
cwtl
out
push
hlt
fs
out
es
and
subb
inc
fbld
add
push
imul
mov
fwait
mov
and
subb
mov
and
mov
iret
mov
mov
xchg
add
enter
xor
push
mov
jbe
out
popa
mov
cmp
lea
stos
rorb
mov
aas
push
pusha
cltd
aad
aaa
lds
jne
movsb
scas
jle
ljmp
xchg
cmpsl
pop
or
sti
aas
or
inc
xor
std
xor
mov
lods
push
popa
cmp
test
hlt
pop
xchg
xchg
or
into
push
inc
fwait
sbb
loope
ja
data16
push
pop
jmp
notb
or
ds
test
mov
dec
inc
lds
push
dec
enter
mov
push
jns
push
scas
dec
cmp
mov
mov
sbb
adcl
aas
or
xchg
xchg
out
adc
adc
inc
out
or
jb
mov
insl
lret
rcrl
push
test
adc
sub
hlt
movsl
adc
dec
dec
mov
mov
retw
sub
pop
inc
scas
loope
xchg
insl
in
sbb
xor
es
sub
add
push
pop
mov
jbe
mov
cltd
cmp
jge
inc
xchg
jns
mov
loope
adc
inc
inc
and
jmp
jo
dec
mov
imul
icebp
imul
push
insl
addr16
daa
arpl
aaa
pusha
lock
movsb
loopne
aaa
mov
imul
cmp
jne
outsb
sbb
mov
scas
aas
das
jmp
arpl
xchg
jnp
jnp,pt
subb
popl
pushf
mov
orb
xor
cmp
cmp
stos
pop
lahf
mov
ret
mov
in
sub
xor
lcall
subl
data16
xlat
mov
lods
cmpl
out
mov
pushf
sub
mov
pop
popf
and
xor
lock
dec
test
jmp
xchg
movsl
xor
jg
mov
jnp
loopne
into
bound
jmp
jne
std
push
adc
sbb
hlt
sbb
outsb
in
insb
cmp
mov
in
adc
faddl
sti
xchg
mov
xchg
ret
aam
dec
xlat
cmp
sbb
dec
sub
dec
add
mov
decl
and
xchg
and
mov
mov
out
pop
cmp
sbbb
ja
jg
imull
mov
insb
jae
mov
enter
sub
imul
push
ds
das
into
jnp
cmc
repnz
or
call
in
inc
data16
data16
inc
out
cli
or
icebp
cltd
xchg
xchg
sub
pop
push
cmp
lret
int
repnz
inc
inc
push
or
in
int
lret
dec
jbe
jne
xchg
jbe
stc
out
stc
xor
xchg
xor
ljmp
sbb
pop
in
and
pop
inc
sub
insl
mov
out
in
jle,pn
test
dec
iret
pop
cmp
add
fstpt
pop
test
jl
jo
xchg
or
je
mov
aad
pop
pop
fildl
inc
cli
xor
inc
inc
pop
dec
rcr
lea
dec
js
ljmp
xlat
or
loope
xchg
testb
notb
dec
mov
mov
jo
loope
out
orl
shr
adc
jecxz
push
stc
rolb
pop
mov
push
sbb
das
outsb
inc
jae
push
mov
sub
mov
mov
notl
cmp
xchg
loop
fsubrs
pop
repz
adc
xor
mov
andl
xor
rcr
xchg
ret
fndisi(8087
mov
aaa
in
popf
loope
pop
mov
xchg
hlt
orl
sbbl
mov
dec
mov
cmp
adc
jmp
and
stc
jns
fbld
adc
clc
ret
jg
repz
jns
xorl
xchg
sbbb
mov
or
sbb
push
fcmovnbe
xchg
xlat
mov
mov
jmp
add
fstpl
cmp
pop
daa
rorl
add
in
dec
mov
insb
lock
push
push
jnp
sbb
rorb
add
add
jp
bound
popa
jae
add
cwtl
inc
xor
xor
ljmp
fucomip
jp
repnz
xor
sbb
or
call
xchg
subb
lret
aaa
fnclex
and
insl
outsb
sti
push
jb,pt
test
sbb
mov
cmp
mov
push
cli
xchg
leave
mov
push
ss
mov
inc
insb
or
imul
cli
subl
clc
push
fbstp
mov
rorb
call
xorb
mov
int
ret
pop
push
pop
les
movsb
xor
adc
mov
push
cmp
cmp
push
pop
out
mov
sahf
ret
sub
or
mov
xchg
sbb
movsl
xchg
fdivrs
sub
sub
insb
dec
xchg
aad
adc
push
mov
jl
lcall
iret
ret
pop
icebp
test
add
pop
js
cli
mov
stc
mov
dec
lea
pop
imul
fisttpll
in
sbb
arpl
pushf
sub
xchg
mov
add
test
mov
cwtl
xchg
negb
lahf
ja
mov
outsl
aad
mov
into
mov
jle
int3
xor
cmp
dec
pop
jmp
push
data16
xor
mov
jp
sub
push
aad
inc
add
cmc
faddl
loope
mov
sbb
inc
dec
and
mov
repz
std
or
ret
jmp
popa
cmp
sbb
sbb
and
jb
popa
fsubl
ljmp
repz
mov
ss
push
sbb
mov
stc
cwtl
push
cmp
sbb
or
mov
xor
addl
mov
sub
ljmp
andb
adc
push
adc
mov
mov
add
inc
and
in
lods
lret
fcomip
sbb
dec
mov
fdivl
mov
xor
dec
stos
js
mov
mov
jo
fiadds
cmpsb
loopne
arpl
mov
sarl
insb
and
sub
pop
adc
and
fistpl
outsb
js
mov
or
xchg
dec
imul
pop
and
jnp
clc
test
jge
xorb
sub
scas
xor
pushf
sub
daa
add
inc
in
mov
iret
dec
shlb
test
in
fwait
cld
mov
and
sbb
adc
aam
lock
xchg
into
aas
iret
dec
mov
xchg
or
dec
xor
sub
adc
outsb
popl
push
loopne
enter
mov
or
cmpsb
push
or
ljmp
and
cmp
dec
fsubs
cmc
mov
lea
mov
sbb
or
rcll
inc
and
aaa
mov
int
mov
jl
cltd
mov
sti
jmp
and
pusha
dec
rolb
mov
aas
cwtl
out
adc
les
test
dec
mov
jbe
ds
and
pop
cmc
adc
add
rcll
pop
fsubrs
add
push
mov
push
push
add
add
inc
ror
aaa
rolb
push
mov
aas
pop
dec
sbb
fistpll
gs
lret
push
addr16
mov
add
clc
xchg
sbb
xchg
add
cmpsb
idivb
insl
int
mov
mov
int
inc
jnp
xchg
cmp
out
repz
jle
cmp
stos
xchg
sbbb
mov
mov
mov
cmpb
xchg
mov
xor
and
imul
addl
push
hlt
xchg
iret
aad
add
int3
mov
inc
rcl
ffreep
mov
xchg
jp
idiv
cs
adcl
mov
and
hlt
daa
int
inc
mov
push
sbb
test
in
cmp
pop
das
cmp
jge
ret
jmp
test
add
inc
pop
shrb
dec
push
nop
pop
xorb
addl
icebp
mov
hlt
xchg
mov
arpl
ret
jo
adc
push
xchg
fsubrl
or
sbb
das
je
das
cmpb
stc
stos
cmp
out
or
je
insb
jno
incl
push
jnp
cli
hlt
xor
mov
or
mov
cmp
pusha
aam
mov
mov
std
lods
loope
sbb
clc
mov
imul
mov
jle
insl
fldt
fsubl
and
cld
in
sbb
pop
out
mov
lcall
iret
xor
push
push
xchg
outsb
leave
xor
adc
mov
test
ja
and
daa
fwait
imul
jne
fisttpl
cwtl
mov
and
ss
xchg
add
push
xchg
int3
mov
push
rcrb
pushf
mov
in
pushf
enter
pop
or
flds
and
jne
add
data16
ret
fs
cmpsl
and
mov
pop
test
int3
test
xorl
push
or
dec
dec
ss
popf
push
pop
xor
push
repnz
cwtl
mov
add
pop
push
jg
lret
outsb
push
call
fcompl
pop
mov
pushf
aaa
pusha
out
enter
stos
aaa
adc
dec
sub
icebp
jb
inc
jge
cmp
adc
jo
inc
mov
insb
add
rol
mov
inc
outsl
aaa
mov
cli
popa
push
cmp
cli
std
out
inc
push
jns
sbb
jno
lock
ret
adc
ss
xchg
stos
cli
pop
mov
pop
daa
or
mov
cli
and
fisttps
inc
lea
xchg
adc
mov
cmpsb
aam
pop
rcrb
mov
xchg
adc
in
dec
js
xchg
iret
js
mov
aas
nop
sbb
pop
lds
aam
fcmovne
inc
xor
adc
xor
dec
adc
shlb
and
ljmp
sbb
aas
stc
cli
pop
xchg
xchg
ja
test
into
inc
dec
rcll
xor
fsubrp
lock
add
ja
cmpsl
add
loopne
push
adc
mov
jecxz
lock
and
shl
inc
mov
xchg
jns
pushl
mov
push
and
add
adc
scas
mov
ret
cs
add
shlb
cmp
pop
lods
ds
aam
or
int3
xchg
adc
sarl
sbb
fdivl
das
add
aas
jne
leave
pop
mov
or
pop
out
and
mov
cmp
scas
xchg
jnp
adc
scas
imul
fldenv
lcall
jb
je
pop
test
stos
out
imul
stc
pop
and
xchg
es
cmp
and
sbb
ret
add
lds
xchg
cli
sbb
mov
std
mov
lods
xchg
cmp
sbb
lds
jp
sub
sbb
lods
popf
jge
negb
cltd
imul
test
adc
int3
mov
mov
mov
mov
int
test
mov
adc
xchg
sbb
lahf
out
sbb
int
stos
test
sbb
dec
inc
scas
cltd
adc
push
rclb
push
jle
jg
adc
mull
mov
mov
in
mov
jl
jle
cmp
jl
addl
xor
adc
fdivs
ret
lea
inc
leave
clc
dec
pop
inc
push
stc
loope
adc
fidivs
xor
daa
stos
arpl
add
sbb
orb
xchg
test
jne
ret
mov
mov
leave
mov
mov
rorl
fcoms
cmp
jle
sbb
adc
rol
mov
pop
inc
mov
in
pop
enter
jecxz
sub
pop
sub
jecxz
sub
mov
sub
pop
repz
mov
mov
cmp
fcmovne
movsb
mov
cltd
test
sbb
lods
sbb
or
cmp
fisttpll
cmpb
dec
xchg
sbb
out
sahf
in
pop
movsb
je
xor
inc
imul
pop
mov
jle
mov
fcomp
lea
jge
stos
sbb
or
out
outsl
mov
xchg
jecxz
sub
sbb
jp
insb
loop
test
mov
jmp
dec
cli
cmp
mov
lcall
movsb
push
test
mov
inc
into
and
dec
jmp
mov
pushl
pusha
out
push
shll
sbb
mov
jnp
movsl
cwtl
jns
ret
lret
in
inc
lcall
jnp
mov
into
cmpsb
lods
mov
lods
add
push
out
xchg
xor
sub
push
addl
and
les
and
loop
cs
bound
pusha
aas
int
xchg
data16
fadds
sub
inc
push
adc
cmp
push
les
out
cmp
or
icebp
ljmp
insb
and
adc
dec
lds
repnz
jns
lea
jle
cmpl
mov
bound
mov
add
fcomp
sbb
ret
hlt
mov
xor
mov
popf
add
sbb
cmc
sbb
xor
xchg
pop
sbb
sub
movsb
mov
dec
jno
xchg
cmp
adc
xchg
mov
push
adc
daa
cmp
jne
lds
test
adc
dec
pop
mov
pop
and
inc
repnz
clc
dec
popf
inc
push
ss
jle
add
je
fnstsw
popa
push
cltd
sbb
cwtl
pop
pop
push
mov
xchg
sarb
insl
cmpsw
add
xchg
mov
das
add
in
scas
adc
cmp
lds
mov
push
fildl
sbbb
sbb
repz
daa
ja
adcb
lret
xchg
xchg
stos
out
movsb
iret
fwait
inc
or
push
sub
mov
xchg
int3
jecxz
out
jge
dec
ror
mov
sbb
or
mov
and
je
dec
add
adcb
ret
cltd
or
es
clc
jbe
mov
lret
jne
sbb
sub
and
rorl
popf
ret
fidivs
add
orl
mov
mov
cmp
hlt
repz
and
out
in
cli
pop
pop
adc
clc
dec
iret
pop
xor
sbb
fs
das
test
cmpsl
xor
adc
jmp
add
mov
and
shl
xchg
xchg
fcompl
shrb
pop
test
adc
pop
mov
mov
cmpsl
fldenv
xchg
or
push
inc
call
jecxz
cmpsl
ss
popf
pop
xor
loopne
jne
mov
stc
sbb
pop
sbb
sub
jae
out
pop
push
frstor
mov
jge
lea
and
adc
stc
fldt
mov
and
out
lds
add
iret
lar
jno
fidivs
adcl
stc
in
outsb
je
ror
fucomp
inc
enter
movd
notb
inc
pop
pop
outsb
in
inc
or
addl
daa
mov
insl
shrb
lods
cmp
sub
fsubl
mov
shll
and
cmp
mov
iret
pop
add
imul
adc
jns
or
push
add
sbb
into
addr16
sbb
mov
outsb
xchg
xor
dec
push
das
mov
loopne
scas
jp
or
add
or
lods
push
out
stc
and
push
les
test
mov
pop
pop
add
and
add
xchg
sub
int
or
les
xor
cmp
xchg
xchg
rcrl
lcall
fwait
lods
inc
lock
push
pop
mov
sti
test
mov
les
dec
popf
dec
sub
jne
add
jl
xchg
test
sbb
xchg
push
pushf
in
into
dec
mov
in
fwait
pushw
jb
and
out
jne
add
sub
xor
mov
dec
call
jmp
and
inc
sbb
subl
mov
or
xchg
rcrb
jle
jp
push
lahf
gs
data16
fists
ljmp
adc
sub
jae
add
enter
test
mov
pop
test
push
pop
shrl
popa
hlt
loope
dec
push
dec
push
in
add
or
xor
mov
jno
lcall
lods
lahf
mov
testb
cmp
or
std
rolb
and
add
mov
mov
mov
xchg
pop
jnp
data16
push
push
in
sti
push
add
and
ljmp
push
in
popl
mov
jns
xor
adc
inc
inc
push
nop
enter
push
lods
jbe
push
pop
into
jnp
mov
mov
arpl
scas
and
add
lcall
xor
dec
lret
sub
scas
push
xor
xchg
jae
push
mov
push
in
jp
lcall
mov
mov
add
pop
adc
or
mov
mov
aad
sub
pop
repnz
mov
and
fisttpl
fwait
inc
add
sub
pop
das
clc
hlt
xchg
cmp
std
mov
popa
jo
xor
pop
mov
sub
push
mov
lcall
jp
test
das
xor
sahf
adc
orl
push
jl
aaa
xchg
adc
out
in
rorb
xor
cmp
ljmp
pop
gs
inc
inc
adc
push
push
mov
scas
jae
daa
rcrb
std
jl
inc
xor
data16
jne
jg
lods
fimuls
mov
pop
jle
daa
xchg
ljmp
pop
push
out
or
lret
aam
in
jnp
xchg
cmp
movsb
jb
mov
out
mov
cs
and
jbe
je
inc
in
xchg
adc
outsl
pusha
add
cmp
xor
lret
mov
pushf
iret
ret
add
mov
negb
cs
inc
mov
addr16
push
incl
jae
and
icebp
jge
adc
push
adc
push
fbstp
cmp
mov
pop
jno
mov
sbbl
mov
dec
jecxz
push
dec
fimull
xchg
jae
jo
adc
add
aas
out
and
outsb
mov
dec
sarl
cli
es
les
sub
pusha
loopne
outsb
inc
dec
in
sub
loope
mov
clc
roll
sub
scas
mov
cmp
xchg
loopne
fadd
xchg
inc
lds
fnsave
mov
and
inc
cmp
jns
setae
dec
ljmp
and
pushf
ss
das
nop
jnp,pn
ds
cmp
inc
mov
mov
insb
push
std
mov
scas
or
leave
repnz
push
push
in
xchg
push
mov
sub
ljmp
cmp
clc
inc
or
in
add
and
outsb
mov
xlat
xchg
into
repnz
int
xchg
jae
roll
pusha
sbb
outsl
rorb
aas
sarb
out
xchg
push
js
pop
leave
mov
movsb
jno
pop
in
jnp
fdivs
adc
repz
insl
pushf
inc
fidivs
scas
nop
sub
adc
adc
sub
mov
outsl
or
ret
cltd
in
xor
inc
pop
cmpsb
mov
cmp
xchg
sbb
cmp
sarl
cwtl
stos
jns
pop
xchg
mov
enter
xor
fnstsw
call
jp
add
jb
and
es
rcl
xor
aam
in
hlt
dec
dec
xor
ret
stos
mov
lret
sub
pop
js
xchg
jne
xor
dec
inc
and
incb
and
cmp
ret
pop
add
mov
insb
in
clc
jnp
int
push
adc
xlat
sbb
adc
jg
data16
pop
sahf
das
mov
mov
dec
fwait
data16
enter
xor
pop
addb
aas
mov
jbe
loopne
adc
aas
sbb
flds
pop
push
loop
std
icebp
dec
aad
testl
jns
mov
pop
divb
ret
popa
divl
push
lahf
add
aas
cmp
out
and
add
and
pushf
out
popl
add
push
cmp
sahf
fisubs
popf
cmpsl
push
in
cmp
add
xchg
and
insb
dec
lahf
loope
test
push
cmc
ret
stos
or
adc
mov
push
and
or
dec
imul
fimull
fsubrl
or
movb
push
lods
sbb
aad
in
fwait
pop
jmp
insb
sti
push
jae
lock
inc
jecxz
inc
xor
clc
or
ja
and
dec
in
imul
ret
js
lds
leave
in
jb
leave
ret
sbb
cli
out
scas
pusha
pop
outsl
jne
mov
cmp
pop
sbb
jle
xor
push
dec
inc
les
inc
aaa
and
xlat
sbb
push
mov
dec
sahf
call
and
repz
or
cmc
leave
mov
dec
loope
pop
sub
sub
and
insb
and
jp
in
inc
push
sub
xchg
arpl
jnp
mov
dec
jge
mov
out
sub
pop
stos
xchg
inc
push
cld
in
jg
mov
cmpsl
cli
sar
and
mov
sbb
mov
cltd
lret
lods
add
cmp
scas
repz
ljmp
adc
jnp
outsb
sub
dec
sub
mov
sub
jae
sar
jecxz
add
sbbb
lcall
imul
jmp
xchg
xchg
cmpsb
iret
mov
push
xor
fcomps
int3
cmpsl
ror
stos
mov
mov
sub
or
aaa
shrb
inc
pushf
sub
pop
adc
inc
imul
inc
push
add
sbb
mov
into
mov
test
ret
dec
popa
int
insb
dec
mov
push
mov
mov
add
cmpsb
lret
jbe
push
lock
adc
es
rcrb
cmp
xlat
jecxz
addb
sbb
imul
addb
out
and
rorb
push
adc
incb
loope
adc
lahf
jp
mov
sub
insb
sbb
fwait
scas
inc
add
sub
adc
sub
data16
cld
mov
loop
movsb
adc
icebp
add
inc
jne
popa
xchg
xchg
xchg
push
dec
jl
xlat
retw
adc
pop
xchg
pop
dec
mov
fstpt
ljmp
or
out
pop
lea
outsb
out
js
out
pop
mov
in
or
in
push
mov
push
rolb
out
jl
aas
jle
adcl
insb
xchg
sarb
test
pushf
sub
add
loop
cmpsb
std
out
and
mov
adc
pusha
testb
sub
pop
mov
rorl
mov
cltd
cmc
test
xor
xchg
fs
jecxz
incl
movsl
jo
or
xor
les
int
scas
into
std
inc
jp
jg
pusha
inc
in
sub
fnstenv
popf
xor
in
mov
dec
mov
bound
pop
mov
inc
fdivs
cld
push
mov
leave
lret
dec
and
pop
jge
sbb
inc
xor
addr16
mov
add
jb
fisubrs
cmp
cmp
jmp
orl
jne
scas
mov
dec
dec
inc
cmp
sbb
hlt
imul
inc
aas
push
lea
xchg
push
push
xor
push
cmc
scas
mov
enter
lds
imul
cmp
pushf
mov
clc
mov
dec
fistpll
mov
jecxz
jo
mov
dec
and
xchg
xlat
lods
push
movl
outsl
out
mov
mov
and
jmp
add
mov
imul
and
addr16
jmp
testb
test
pop
dec
inc
dec
mov
aas
adc
pop
sub
loope
and
ja
ljmp
inc
mov
pushf
inc
scas
add
or
xor
mov
dec
fcmovu
psubw
inc
enter
jecxz
repnz
iret
pop
dec
push
repz
pop
mov
in
ss
cltd
sbb
add
pop
lods
mov
fimull
repz
push
pop
stc
adc
repz
es
les
sahf
push
mov
inc
sbb
sub
ret
push
jecxz
dec
jne
dec
and
in
adc
xchg
inc
hlt
lods
sub
dec
cwtl
leave
sbbl
imul
adc
rclb
adc
cmp
sbb
lds
icebp
jb
rcr
or
aas
cmc
and
cmovp
es
mov
mov
out
insb
in
xchg
fcoml
decl
movsb
push
in
icebp
cmp
jnp
mov
enter
stos
in
xor
lods
mov
cmpsb
into
lock
add
in
loope
push
stos
aam
out
mov
notl
lods
hlt
xchg
cltd
sbb
stos
lcall
movb
lret
cltd
cwtl
xor
int3
or
lret
popa
popf
jl
rclb
ret
or
lock
pop
mov
adcb
mov
cmp
inc
pop
dec
dec
xor
xlat
or
movsb
hlt
fwait
in
out
adc
pop
cli
sub
jns
pop
add
sub
movsb
xchg
mul
add
or
mov
shrb
test
adc
add
jae
pusha
push
dec
adcl
add
mov
test
lahf
out
fcomp
movsb
into
scas
mov
jns
jl
push
into
xor
cs
fwait
add
sbb
leave
xor
xor
or
jg
mov
adc
or
mov
imul
adc
xor
mov
loopne
jne
in
scas
ret
mov
push
xor
ret
or
loope
dec
cmp
mov
and
xor
push
add
nop
andl
and
addr16
push
add
js
fsub
push
pop
pop
mov
or
cmp
pop
jo
shlb
pop
mov
in
lret
aaa
fsubr
mov
mov
mov
adc
inc
pop
loopne
pop
cmovnp
sti
jg
inc
ret
dec
arpl
rorb
sbb
dec
pop
pop
add
inc
adc
add
cmc
jns
ja
pusha
push
loop
mov
dec
popa
and
insl
mov
jns
shlb
xchg
sub
int3
into
or
inc
enter
mov
mov
cmc
jb
flds
xchg
dec
adc
cmpsb
push
mov
or
sbb
out
ljmp
mov
and
adc
push
aaa
sub
mov
pushf
inc
cltd
notb
repnz
jge
pop
in
in
aaa
shlb
mull
mov
pop
push
cmp
or
andl
or
lock
cmp
popa
outsl
add
popa
mov
lahf
scas
mov
push
lcall
push
dec
addl
test
mov
xor
push
sti
mov
in
push
aad
cli
xchg
out
sub
aas
inc
xor
pop
roll
popa
in
xchg
daa
jno
sub
inc
loop
sub
mov
fisubs
sbbl
mov
cwtl
xchg
xchg
imul
frstor
jmp
mov
bound
dec
movsl
inc
shlb
subl
insb
jmp
and
mov
add
adc
pop
push
icebp
and
fs
jnp
inc
loope
stc
jecxz
shlb
dec
popa
icebp
lods
out
into
push
loope
icebp
dec
jmp
jge
pop
sbb
stos
les
add
adc
bound
sbbl
hlt
mov
xchg
lods
sti
inc
frstor
push
push
xchg
pop
jecxz
stc
enter
or
cwtl
ret
pop
bound
or
out
xchg
jne
in
fnstenv
push
in
popf
dec
in
mov
dec
ffree
lds
call
xchg
ds
loope
aam
xor
into
les
fnstcw
fsubl
or
and
in
mov
mov
pop
ljmp
pop
adc
ret
cmc
outsb
in
js
dec
sbb
lea
mov
rcl
pop
orb
cltd
sub
dec
jmp
dec
add
test
or
subl
xchg
aad
mov
int3
cmp
and
scas
push
lods
xor
jbe
pop
mov
aas
jne,pt
mov
and
mov
pop
ljmp
dec
mov
mov
mov
cli
cmp
xor
jne
lods
and
popa
nop
adcl
sbbl
inc
shll
filds
lock
mov
or
or
xorl
mov
push
push
mov
fistpl
loopne
lahf
sub
insl
inc
jnp
dec
roll
mov
mov
in
push
scas
cltd
ljmp
fwait
adcl
ss
clc
inc
sub
mov
mov
xchg
out
xor
cmp
dec
fists
mov
loop
lods
add
repnz
or
mov
aam
into
loope
sub
stos
ljmp
enter
nop
pop
push
in
das
incb
int
xchg
movsb
jno
push
stos
shll
and
push
mov
inc
popa
arpl
out
sbb
movsl
add
sahf
mov
fidivrs
repz
fnstcw
cwtl
or
sub
jle
mov
xor
ljmp
cmovae
jp
mov
jo
push
test
fld
rcrb
insl
shl
add
or
out
pop
mov
test
mov
cmp
repnz
enter
lret
lret
sub
pop
push
xchg
test
stos
std
hlt
movsl
ja
or
cmpsb
or
les
mov
or
mov
mov
flds
jbe
add
imul
dec
subl
or
fldl
push
mov
dec
out
mov
push
mov
test
pop
push
dec
call
jnp
insl
sub
jmp
into
mov
aas
or
mov
cmp
imul
cmp
xor
add
faddp
sub
std
shll
js
dec
xor
adc
test
fstpl
add
aad
jae
pop
addr16
cmpsl
pushl
sbb
shll
and
jp
flds
adc
add
xchg
lcall
pop
outsl
or
notl
xchg
ficomps
adc
cvtpi2ps
imul
mov
ljmp
mov
jae
jnp
pop
cli
in
ja
rolb
xor
imull
dec
dec
ljmp
and
push
push
mov
ja
inc
xor
mov
lea
lret
ret
and
rcll
mov
loopne
lahf
and
ss
imul
repnz
push
mov
cwtl
inc
xor
pop
les
xchg
out
fwait
cs
cmp
add
cmpsb
mov
je
test
adc
push
imul
pusha
jbe
outsb
add
call
sub
sbb
fs
adc
and
mov
psadbw
xadd
mov
cmp
jno
xchg
add
fwait
dec
in
les
adc
mov
mov
push
mov
rol
ds
sub
imul
in
sbb
movsb
mov
aam
imul
popf
test
lcall
dec
leave
jno
push
cmp
add
add
out
cmp
sbb
ss
gs
cmp
out
adc
adc
fidivs
popf
mov
cmp
adc
decl
cmp
add
xchg
lds
add
and
clc
ljmp
xor
test
jae
xchg
ss
cmpsb
sbb
jb
mov
adc
jmp
test
jg
dec
shrl
imul
fwait
jo
cwtl
out
ljmp
lahf
cwtl
sbb
pusha
jae
and
fsubr
bound
adc
add
add
pop
jns
aam
adc
jp
daa
dec
mov
arpl
ljmp
pop
mov
rcrb
or
pop
sbb
xlat
gs
jl
jle
cmp
mov
dec
xchg
subb
incl
mov
lods
sbb
outsb
pusha
insl
xchg
movsl
adc
dec
dec
sar
popf
pop
fs
enter
xor
adc
icebp
push
push
test
adc
test
hlt
mov
lcall
popf
dec
test
inc
mov
add
mov
movsb
adc
clc
cmp
movsb
cwtl
mov
rcrl
ja
sub
dec
cwtl
out
xchg
and
arpl
orl
mov
xorl
pop
out
dec
and
fildl
cli
mov
ret
xchg
jnp
or
mov
mov
mov
sbb
or
add
std
int3
mov
inc
add
sbb
ds
add
addr16
cltd
pxor
xchg
shlb
scas
jo
movsl
and
jmp
sbb
imul
pop
cwtl
imul
xchg
cmc
rcl
push
aad
cld
xor
push
mov
stc
push
cmpsl
std
and
fsubrl
xchg
adc
xorb
repz
sub
shl
cld
sub
loop
dec
xchg
push
imul
pop
adc
xor
dec
das
mov
loopne
pop
fdivrl
jmp
mov
je
jno
out
das
movsb
sbb
mov
movsb
nop
or
cmpl
iret
and
imul
insl
or
inc
pop
dec
adc
movsl
lahf
add
dec
push
mov
jge
gs
push
xor
call
xor
sub
pop
call
mov
insb
cmp
inc
cmp
sbb
ja
pop
push
and
orb
cmp
add
adc
scas
mov
add
sub
push
into
scas
fs
pushw
lcall
push
pop
ret
pusha
xor
mov
in
stos
dec
mov
dec
cs
mov
stc
xchg
cmpsl
ret
ja
mov
daa
repz
cltd
adc
pop
dec
leave
js
inc
pop
adc
push
or
add
add
movsb
insl
push
dec
xor
jno
arpl
ss
int
sub
push
out
outsb
pop
mov
rcr
cli
aas
scas
adc
repz
push
xor
fs
jmp
clc
int3
popa
or
inc
jge
mov
lods
lcall
cmp
push
xchg
cli
mov
sbb
ja
jo
clc
xor
add
outsl
pop
adc
jle
popf
fadds
flds
push
sbb
push
leave
push
sbb
fiadds
cltd
scas
lahf
xchg
adc
pop
les
mov
hlt
push
notl
cmpsb
das
aaa
cmp
xlat
sub
pop
inc
cmp
xor
cltd
sbb
add
pop
pop
pop
aas
dec
push
mov
bnd
shl
in
inc
addl
clc
xor
nop
inc
mov
xchg
push
mov
xchg
jge
scas
imull
fcomip
jg
mov
popa
out
inc
pop
push
sub
aas
push
sub
out
mov
mov
adc
jg
filds
pop
gs
movsl
in
insb
cmp
jbe
cmp
aas
lods
push
dec
pop
test
pop
mov
ja
mov
aad
lds
sub
pop
push
daa
pop
xchg
imul
mov
es
push
rol
imul
shrb
fcmovbe
mov
lods
ss
out
dec
sti
daa
sub
xor
movsl
xorb
shr
mov
les
xor
inc
jmp
push
and
test
xchg
add
cmpsl
sbb
adc
testl
xchg
jg
xor
mov
aas
aad
leave
push
and
adc
adc
aad
icebp
in
outsb
pop
xor
adc
xor
cmp
shll
jnp
push
jo
mov
scas
xor
out
fdivr
jo
gs
outsl
es
xchg
xor
and
add
mov
jb
mov
js
icebp
adc
in
lds
sub
orb
loop
xorl
sarl
test
push
add
jle
xor
pop
mov
mov
push
mov
iret
push
loope
pop
jb
jbe
jbe
cmp
pop
push
push
cli
rep
jae
or
les
jo
cmp
mov
inc
cmp
inc
ret
fcompl
jbe
sbb
and
xor
loope
mov
jns
shll
push
test
aam
xchg
and
loopne
loop
adc
push
lods
xchg
fs
xchg
adc
gs
insb
cmpsb
push
adc
decb
inc
das
lret
sub
mov
jb
sub
and
inc
cmp
int3
push
nop
sub
pop
pop
jbe,pt
dec
pop
jp
nop
repz
jle
inc
shlb
pop
cmpsl
or
fldl
mov
mov
and
mov
icebp
cld
sbb
jle
or
sbb
ds
push
cmp
lock
js
push
inc
clc
sub
insl
inc
jnp
bound
stc
addb
shl
mov
data16
mov
ss
repnz
adc
sti
rclb
loopne
mov
sbb
lock
xor
fisubrs
shrl
pop
jns
mov
pop
ljmp
in
dec
aad
jnp
fistpl
mov
adc
mov
pop
repnz
imulb
inc
mov
call
lret
and
or
dec
test
inc
pop
xor
sub
sub
pop
fst
jmp
jmp
push
push
out
test
cmpsb
inc
mov
mov
dec
jp
pop
lock
js
fs
shlb
push
data16
sbb
sub
sub
out
or
js
jae
ljmp
xchg
sbb
push
popa
cld
iret
adc
push
aad
popa
sti
add
arpl
adc
or
ds
adc
aas
arpl
inc
or
js
sbb
inc
xor
and
rcrb
adc
out
ret
js
bound
ret
or
loopne
jbe
faddp
leave
push
shrl
call
xchg
popa
jecxz
das
sub
push
lcall
or
mov
gs
add
and
leave
xchg
cmp
pop
add
jns
pop
xchg
pop
push
xchg
in
push
xor
mov
mov
rcrb
hlt
cmp
rorl
sub
ljmp
std
scas
shl
inc
jl
pop
adc
xlat
popl
fisubrs
es
push
xor
jbe
mov
dec
mov
aas
les
mov
jle
in
or
and
sti
out
in
inc
loop
arpl
stos
adc
pop
lret
mov
cmpsl
in
push
xchg
mov
test
out
dec
test
xchg
call
inc
aad
stc
mov
xchg
adc
bound
test
fwait
adc
and
pop
jg
mov
andb
fcoms
cmp
js
push
outsl
insb
ljmp
push
push
test
sub
fcoms
xchg
xchg
cmpsb
or
xor
xchg
test
jb
jae
cltd
mov
sti
dec
push
mov
push
jns
mov
adc
inc
out
fldt
psllq
in
dec
out
cmp
pop
aam
mov
shrl
sbb
std
rclb
imul
les
xor
adc
fisttpl
inc
out
pop
lcall
mov
stc
fisubrs
pop
repz
addl
xor
sbb
jo
lock
inc
int
data16
push
xor
or
addr16
loope
lret
add
clc
repz
push
jg
mov
adc
inc
mov
test
bt
out
dec
in
aam
mov
imul
push
sub
in
int3
cmp
adc
mov
cmpsl
aam
scas
pusha
out
aas
fimuls
cmp
cltd
push
dec
inc
cmp
outsl
inc
out
cmc
jne
stc
xchg
add
test
in
fistpll
bound
lahf
js
and
mov
loop
rorb
cmpsb
or
lds
push
fadds
jbe
cli
sub
cmp
adc
pop
addr16
jbe
pmullw
repz
dec
int
and
and
sbb
aad
add
repnz
aad
mov
mov
insl
les
add
jecxz
xor
inc
sbb
in
lock
inc
cmpsb
add
jge
sub
mov
jmp
dec
xchg
fs
ja
andb
sub
xlat
outsl
imul
call
div
insl
ret
sub
aad
adc
cmpsl
insl
or
add
cmp
lret
imul
loop
les
lahf
xlat
movsb
cmp
repz
fdivl
add
ret
pop
jmp
jle
ret
shl
mov
pusha
icebp
scas
repz
insl
adcb
push
or
leave
stos
js
mov
shl
movsbl
adc
mov
cmp
addr16
std
nop
cwtl
adc
das
jne
adc
add
addl
xor
dec
mov
lock
pop
insl
adc
mov
xlat
aas
ds
mov
nop
int
and
pop
lds
jns
mov
inc
jae
jb
adc
insl
sahf
mov
mov
or
inc
cld
cmc
popf
push
xchg
mov
clc
outsl
lds
sbbl
inc
inc
jg
mov
int3
jecxz
ret
jb
jno
mov
testl
xor
push
mov
pop
push
cld
aas
mov
fiadds
inc
aaa
push
bound
xor
in
dec
pop
sbb
cmp
pop
out
das
adcb
ja
clc
int3
mov
push
cmp
sti
iret
jnp
cmp
xchg
jbe
fcmove
test
loope
rcrl
cli
clc
or
jmp
push
push
dec
push
in
in
sbb
adc
lret
cmpsl
mov
adc
add
into
mov
iret
rclb
jb
sub
out
popf
es
jmp
sbbb
or
mov
out
js
into
inc
jbe
imulb
sbb
pop
and
mov
fadds
ficomps
lea
je
jmp
push
inc
fidivs
hlt
pop
out
js
cld
hlt
add
sti
or
cs
mov
movsb
mov
cmp
loop
leave
mov
push
mov
shr
jmp
inc
or
aam
mov
jae
idivb
outsl
xchg
rcrb
mov
fcompl
or
pop
sub
sub
sar
in
or
gs
loope
leave
lock
sub
inc
xlat
ljmp
idivb
fcomp
scas
outsl
push
sbb
mov
cmp
jmp
fwait
mov
sub
pop
cld
fs
inc
xor
dec
scas
mov
js
outsl
push
adc
mov
lahf
sbb
sahf
and
in
rorl
movsb
dec
dec
sub
add
pop
cld
mov
lods
daa
adc
shrb
add
pop
cmpb
mov
sbb
jns
cltd
cld
aas
lcall
pop
hlt
test
sbb
aaa
sbb
pop
adc
enter
ss
adc
loop
xchg
test
jno
out
dec
jp
ja
dec
roll
xchg
mov
push
mov
xor
mulps
fsubrp
pop
rcll
sahf
loope
mov
adc
sti
add
test
dec
pop
push
cmpsl
jle
test
mov
dec
loope
sub
ret
insb
push
mov
xchg
and
out
dec
add
jnp
lret
dec
push
aad
lret
sarl
int3
cltd
mov
xor
xchg
and
dec
sbb
mov
in
test
pop
mov
add
in
xchg
ficoml
mov
fwait
test
clc
pop
cmp
adc
roll
icebp
dec
mov
push
mov
cmpsl
jae
cld
fdivr
pop
add
mov
repz
add
cmpb
lock
cmpsb
lock
push
lret
test
adc
jge
pushf
sbb
sub
out
shrb
mov
pop
xchg
out
add
adc
out
fldcw
jecxz
xchg
cld
add
cmp
fstl
leave
lds
mov
adc
in
or
mov
push
int
test
faddl
outsl
push
pop
repz
mov
ds
loop
nop
add
call
sbb
jle
inc
andb
popa
pop
cltd
jo
xor
cld
sbb
fnsave
in
aas
mov
pop
cmp
aaa
sbb
fimull
xchg
dec
cltd
pusha
ds
les
rcrl
mov
mov
pushf
and
shlb
scas
in
mov
jno
jae
sbb
mov
sbb
inc
push
lret
and
nop
and
mov
daa
orl
pop
jge
mov
jb
dec
test
sub
int3
notb
xchg
xchg
push
adc
sbb
es
inc
in
cli
int3
aas
je
roll
push
sbb
push
pop
sub
jge
outsb
je
jo
inc
or
pop
xchg
dec
xchg
xor
and
xor
js
loope
sbb
mov
lea
sbb
cmc
jl
lcall
or
nop
inc
xor
and
jge
ret
xor
negl
xchg
or
xchg
sub
cmp
mov
fisubrl
jmp
aad
xlat
mov
sbb
insb
mov
sub
adc
or
mov
fiadds
sub
push
lret
push
xor
ror
loopne
lods
adc
dec
sub
fsubrl
les
mov
dec
pop
out
std
xchg
mov
sub
cltd
and
cmp
cmpl
push
enter
lds
cmpsl
shrl
loope
mov
jae
adc
popf
inc
xchg
stc
lds
insl
mov
cmp
pop
mov
pop
xorb
arpl
clc
dec
xor
mov
cmp
rorl
sbb
emms
dec
subl
sbbl
lds
dec
and
sub
push
jno
or
xchg
test
int
push
out
std
cmpl
jg
mov
push
push
sub
in
clc
shr
xchg
lods
jnp
loopne
add
cmp
xor
out
hlt
movsl
mov
adc
faddl
xchg
jmp
das
shrl
test
xor
je,pt
out
xchg
test
mov
adc
fisttps
push
divb
repz
mov
sbb
jecxz
jo
mov
dec
outsb
mov
dec
pop
je
inc
cltd
or
cli
ja
std
mov
add
xor
sar
jne
push
movsl
dec
repnz
fldl
push
cmc
mov
mov
dec
test
add
add
repnz
nop
xor
in
cmc
push
push
adc
mov
jmp
xor
mov
dec
js
jns
in
pop
repnz
fs
cmp
je
mov
punpckhdq
jae
push
ljmp
jno
push
les
sbb
cmp
inc
sbb
xor
ds
lock
or
pop
scas
pop
movsl
mov
test
divb
popa
dec
or
sbb
pop
dec
test
and
loop
xchg
rcrb
sub
ljmp
sbbl
mov
icebp
dec
imul
andb
mov
and
adc
sub
clc
push
inc
sbb
xchg
clc
ret
frstor
lret
dec
mov
movsb
test
mov
xchg
jecxz
ss
xchg
jnp
je
xchg
xchg
daa
xor
dec
push
mov
adc
in
sub
loope
clc
les
stos
or
enter
jns
fsub
push
ja
sbb
popa
insl
outsl
mov
or
sub
scas
cmpsl
loopne
dec
sbb
and
jo
jp
movswl
sbb
ds
xchg
cmpsb
push
adc
jbe
std
lods
mov
lret
mov
sbb
adc
cmp
ljmp
mov
lahf
sarb
jecxz
hlt
and
or
outsb
jle
xor
and
outsb
je
int3
lret
ss
push
mov
add
insl
mov
mov
jmp
adc
cmpsb
inc
inc
xchg
sub
dec
adc
mov
xchg
pop
fsubp
cmp
push
dec
xor
and
ret
rcll
mov
fcmove
jp
aam
fldt
mov
jno
rcr
lods
movsl
inc
jle
int
xor
out
dec
xchg
jnp
or
loopne
and
cmc
leave
jo
into
repz
and
push
mulb
imul
pop
ja
add
jae
add
adc
shrl
xchg
mov
cmpl
stc
es
scas
pushf
jne
mov
mov
enter
xor
jge
xchg
mov
icebp
lea
movhps
f2xm1
test
push
jb
testb
in
lret
enter
xor
fisttpl
and
les
lret
std
inc
xor
das
jne
sub
pop
maskmovq
sti
std
and
es
xchg
sti
cmp
mov
jge
sub
jmp
jle
ret
aaa
push
dec
in
sar
push
sti
fbstp
cmpsl
notb
stos
jle
pop
xchg
push
xchg
and
or
lods
dec
pop
xchg
outsl
xchg
or
into
add
lret
das
cmp
cld
repnz
ret
and
js
sub
into
mov
es
adc
test
lret
xor
and
mov
add
fwait
sub
stc
cmp
add
dec
pusha
mov
arpl
dec
into
clc
or
cmp
cmp
mov
js
add
icebp
in
sti
mov
dec
sub
dec
push
ret
adc
cmp
aaa
addr16
cli
movsl
inc
and
mov
sti
sub
jns
mov
mov
clc
xchg
aam
daa
jb
sub
out
out
ljmp
and
mov
mov
xorb
add
sti
jp
daa
test
dec
pop
lods
fbld
fs
aam
shll
fdivrl
fcmovnu
mov
xor
sbb
insb
add
pop
les
jmp
testb
xchg
push
sbb
inc
out
push
sub
sbb
push
stos
dec
jp
imul
pop
or
std
mov
es
push
push
push
rcrb
inc
fwait
int3
jb
push
jg
and
in
cmpsl
push
lea
sub
test
fdivs
sub
lahf
mov
jg
or
dec
imul
push
mov
inc
inc
test
sbb
fmuls
ja
sub
pop
je
hlt
add
scas
nop
or
mov
enter
cmpb
xchg
cs
add
xchg
dec
sarl
pushf
movsb
test
sbb
call
stc
nop
push
or
xor
xor
mov
pop
insl
je
xor
arpl
out
test
cmp
pop
xor
test
sbb
dec
adc
sbb
xchg
sbb
pop
js
inc
inc
jg
call
or
aam
pop
outsl
scas
push
ds
popa
mull
jg
jl
add
pop
sub
stc
pop
in
push
xchg
fistl
push
push
sti
xchg
loop
xchg
or
dec
mov
inc
jbe
outsl
cmp
xchg
sub
ret
out
jle
push
shlb
push
push
subl
fisubs
call
mov
ret
sbb
or
and
out
push
jge
sub
jb
cmp
push
inc
movsl
mov
and
imul
outsb
daa
cmc
ja
out
push
xchg
shrl
mov
icebp
insl
ds
xchg
and
aas
push
xor
xor
or
mov
push
lock
push
cmp
mov
test
mov
icebp
cld
xor
jmp
or
pop
xchg
pop
imul
inc
std
xchg
js
sub
dec
jmp
sbb
sbb
ds
adcb
cmpsl
lret
add
adc
xchg
aaa
jle
pop
jbe
jae
add
fisttps
rcrl
loopne
mov
test
cli
call
dec
imul
gs
lods
pop
adc
xor
jecxz
repnz
dec
sbb
sbb
cmp
pushf
icebp
outsl
shr
aad
push
std
push
dec
cltd
xor
add
pop
cmc
in
sub
mov
adc
aaa
testb
jae
das
add
out
xchg
outsl
divl
add
pushw
add
and
repz
jnp
clc
and
lea
mov
dec
lea
pop
add
jnp
aaa
mov
cmp
sub
out
adc
xlat
mov
adc
add
imul
sbb
adc
popf
addr16
fdivrl
xchg
cmpsb
test
fwait
xor
fdiv
aam
daa
mov
inc
jno
das
movsl
pop
xor
xchg
ljmp
in
and
stos
xor
cmp
jb
push
add
fwait
inc
imul
xchg
std
das
mov
push
jg
pop
push
out
or
lock
dec
inc
inc
je
cmpsb
aas
repz
mov
push
ret
dec
scas
test
daa
ds
push
jne
cmp
jmp
loopne
push
adc
sub
inc
xlat
into
dec
test
int3
mov
add
dec
jae
pusha
pushf
imul
jge
mov
int3
cmpb
sahf
cmc
out
add
aam
mov
inc
push
cmp
sbb
test
sti
xchg
scas
es
sub
jecxz
mov
std
cmp
or
dec
fcmovne
push
aam
sbb
mov
pushf
pop
inc
lea
std
mov
xchg
xor
mov
cmp
and
fistpll
sub
and
xor
mov
loop
mov
rol
dec
fidivl
mov
xor
shl
cwtl
fists
and
lds
mov
push
push
jle
push
shl
pushf
loopne
xchg
add
shll
loop
fwait
push
cmp
dec
ss
pop
adc
xchg
loop
ret
xchg
cmp
enter
dec
lods
repnz
arpl
dec
fildl
xor
jb
js
dec
jecxz
mov
pop
xchg
shld
pop
push
aam
pusha
insl
and
arpl
add
mov
movsl
push
aas
enter
adc
int
push
cli
iret
mov
pop
mov
ds
jae
and
icebp
mov
aaa
xchg
fsubl
pusha
ljmp
lret
ror
jno
xchg
int3
aas
lods
and
xlat
in
push
adc
shl
mov
ja
inc
popf
je
lcall
sub
mov
inc
jnp
jge
inc
sbb
sbbl
and
or
xor
add
lar
ja
or
cmp
out
mov
lods
add
dec
mov
iret
js
jl
jbe
test
out
mov
pop
sbb
mov
int3
cld
dec
pop
mov
adc
mov
pushf
sarl
enter
dec
inc
enter
scas
in
in
cmpsl
cld
stos
je
je
test
stos
ret
push
jl
pop
lcall
mov
inc
xor
ret
add
mov
cmp
pop
pushf
ret
notl
nop
fsubrs
sub
ret
fnsave
stos
add
inc
insl
cmp
adc
jle
mov
in
inc
dec
scas
pop
xchg
dec
mov
adc
sbb
scas
or
out
es
cmc
mov
jnp
cs
inc
xchg
lods
mov
lock
inc
repnz
pop
pop
adc
insb
inc
daa
xchg
outsl
shrb
imul
xlat
insl
pop
push
fldcw
pushf
dec
or
mov
arpl
test
mov
popl
sbb
sbb
out
adc
mov
ds
test
jl
sbb
shr
or
mov
int
inc
ret
push
push
jle
xor
add
insl
dec
lret
fistpll
aad
scas
sti
sub
ret
xchg
aam
mov
test
cmp
mov
pop
ficompl
mov
lods
lds
jb
imul
stc
loope
sbb
push
adc
sahf
xlat
mov
pop
pop
decl
push
jns
clc
ret
mov
jo
push
out
mov
or
mov
add
aam
fistps
mov
mov
mov
out
pop
lods
mov
in
or
rclb
in
xchg
mov
dec
dec
push
pop
or
bound
sbb
jge
sub
sbb
gs
xchg
or
dec
mov
stc
mov
idivl
mov
xchg
hlt
sub
out
rolb
fwait
inc
rclb
ss
sarb
faddl
test
xorl
iret
jae
mov
insl
pop
repz
or
enter
nop
mov
nop
arpl
lret
dec
addr16
loopne
push
cmp
fs
test
pushf
push
pop
neg
fists
mov
add
iret
mov
repz
lods
jbe
xor
in
add
sbb
repnz
lcall
idivb
fcom
dec
jne
push
aaa
jne
cmpl
imul
adc
stos
jl
and
adc
in
cmpsl
cmp
and
mov
add
jp
fisttpl
aas
xchg
sub
hlt
fstps
test
add
pop
cmp
imul
xchg
xor
fs
push
push
popf
lcall
fwait
add
push
pop
add
sbb
push
sub
fists
pushf
cmp
push
or
andb
fistpl
or
xchg
mov
mov
xchg
and
ds
sbb
xor
cmp
scas
fidivs
pop
lret
pusha
and
mov
int
and
or
inc
hlt
fsts
add
les
pop
sahf
add
ja
jns
push
mov
hlt
sarl
cmc
movl
cld
nop
jae
inc
pop
sbb
push
stos
dec
je
and
xchg
decb
mov
sbb
or
data16
dec
sub
push
test
mov
xlat
js
in
popa
in
and
mov
les
cmpsl
cmp
push
scas
pop
push
cmp
ds
jae
xchg
imul
jb
mov
or
aad
push
push
es
cwtl
in
mov
push
cpuid
shll
or
scas
pop
jmp
ja
cli
xchg
cs
outsb
push
adc
insb
xchg
scas
sbb
test
test
dec
mov
inc
xchg
fistpll
xor
negb
or
xchg
in
jl
push
mov
and
inc
sti
ret
and
es
jbe
scas
add
ficomps
and
out
or
pusha
adc
xchg
add
aas
rol
xchg
lea
cmp
cmp
loope
dec
mov
cmpsb
outsl
or
or
shlb
mov
adc
rolb
mov
inc
lea
push
je
stos
fdivrl
pop
adc
testl
test
ret
in
out
cmp
and
jle
in
test
imul
mov
fld
cmp
xor
mov
push
sub
imul
ret
mov
in
lds
fstpt
lock
pop
xchg
lahf
cmp
mov
cli
test
xor
mov
inc
mov
xchg
mov
andl
pop
pop
cs
mov
rcr
in
bound
sub
add
cmpsl
movsl
mov
add
arpl
mov
pop
insb
pop
test
add
insb
dec
and
int
out
mov
js
stc
nop
leave
add
sbb
pop
jo
mov
mov
rcll
sub
jns
mov
jecxz
and
sti
sbb
mov
js
jne
inc
fdivrs
push
scas
cmc
dec
call
push
ret
pop
push
xchg
imul
sahf
stos
ds
dec
sbb
add
mov
test
ds
sahf
testl
dec
les
sub
xchg
push
test
lods
fwait
adc
and
mov
cmp
cld
or
mov
xchg
and
out
pop
xor
sbb
lret
xchg
enter
insl
or
or
push
or
movsl
aam
gs
sbb
negb
jno
inc
adc
outsl
scas
outsb
sbbl
mov
out
cmp
inc
and
or
ds
add
jge
clc
das
fisttpl
cwtl
js
shrl
sbb
test
pop
xorb
pop
xchg
push
sub
jno
icebp
jle
loopne
sbb
and
dec
sub
pop
ret
pop
jle
mov
popf
push
adc
out
mov
jle
ret
add
popa
push
sbb
cwtl
popf
mov
sbb
imul
xchg
push
addl
in
push
int
outsb
sti
jl
lea
hlt
xor
je
mov
pushf
pusha
outsb
dec
gs
cs
adc
lcall
shrl
aad
fcoms
pop
add
dec
adc
loopne
push
xchg
mov
dec
jae
test
jne
bound
popf
dec
xor
xor
push
and
pop
cmp
cmp
leave
xor
add
gs
cmc
jbe
in
mov
push
cltd
imul
cli
or
scas
pop
sbb
das
mov
in
lods
faddl
add
iret
repnz
pop
dec
cltd
dec
ret
mov
xor
insb
pop
orl
push
xor
in
mov
mov
rol
ss
lret
rcr
jnp
and
dec
mov
in
cmp
inc
stos
dec
pop
and
dec
loopne
xor
sub
cmp
clc
pop
leave
jbe
dec
adc
rcr
lds
rdtsc
push
out
mov
push
dec
adc
cmp
stos
mov
adc
insb
hlt
jo
lea
pop
loop
rcr
sbbb
cmp
in
inc
xchg
cwtl
sub
mov
jecxz
cmp
and
arpl
and
imul
inc
mov
sbb
pushf
fstpt
sbb
mov
jg
loopne
cmpsb
js
mov
mov
or
jne
lds
xchg
xor
shr
js
push
and
ds
xor
mov
mov
push
int
fnstcw
sub
iret
add
ficoms
das
les
jle
test
mov
inc
loopne
sar
cld
sarl
adc
mov
js
ficoml
andl
cmc
mulb
xchg
lds
cmpsl
andb
inc
stc
pop
aas
sbb
es
mov
fidivrs
mov
pop
mov
fwait
dec
ficomps
inc
push
loop
jmp
add
fsub
inc
xorb
inc
sub
xchg
fists
add
das
cwtl
popa
cltd
ljmp
cmp
jle
clc
inc
and
rolb
mov
je
jecxz
push
ror
leave
movsl
shl
mov
add
rorl
jp
and
mov
adc
fisubs
movsl
jle
in
fdivs
mov
xlat
jmp
out
inc
movsl
xorl
jl
out
pushf
inc
mov
adc
bound
ss
insl
rolb
movsb
xchg
xchg
sub
enter
push
mov
ss
xor
pop
jecxz
dec
mov
mov
lret
cmp
pushf
lcall
cs
pusha
push
aaa
cmp
cmpl
repz
sti
lock
aam
xlat
ficomps
insb
jp
cmpsb
popa
fistpll
and
cmp
sbb
inc
out
fnstenv
jno
lcall
std
cmp
cmc
outsb
mov
hlt
rcll
sub
mov
out
mov
mov
jae
sbb
dec
lods
fwait
cltd
mov
je
jbe
pop
jp
scas
dec
jb
cmc
js
movsb
dec
cltd
xor
fistps
dec
jns
out
lds
push
jns
push
leave
push
push
adc
into
jp
sub
ret
loopne
mov
push
sbb
pop
pop
mov
inc
negb
or
dec
push
pop
inc
or
out
adc
idivl
xor
js
iret
sbb
sahf
rcrl
mov
xor
iret
jge
outsl
lds
cmpsl
lea
adc
xchg
jecxz
mov
mov
jmp
xchg
mov
inc
add
js
repnz
pop
sub
fwait
inc
cmpsb
push
lods
xchg
and
cmpsb
shl
das
inc
mov
sbbl
push
lcall
ljmp
dec
pop
pop
adc
outsl
fisubs
mov
testl
rol
push
aas
mov
or
mov
fidivs
xchg
pop
lcall
inc
cli
dec
mov
andl
cld
sub
mov
js
popa
cmp
cmc
jbe
mov
fnstcw
mov
gs
mov
popf
shrl
pop
hlt
imul
lods
pop
sub
mov
mov
push
daa
cltd
inc
add
sbb
and
inc
scas
test
rol
inc
mov
stos
out
negb
mov
xchg
jecxz
add
mov
inc
pop
lods
xchg
xor
push
cli
lods
int3
outsb
xchg
js
subb
or
rcrl
add
and
mov
or
xchg
shrl
sub
mov
sahf
and
lahf
gs
and
in
inc
pop
push
jns
rcrb
test
outsl
push
dec
xchg
sub
push
out
jnp
xor
leave
cmp
mov
jnp
dec
jo
mov
shll
adc
cmp
dec
out
jge
mov
das
jns
cmp
and
js,pt
not
push
inc
out
loop
mov
sbb
dec
mov
xorl
bound
jmp
mov
sbb
bound
xchg
dec
cltd
rol
in
push
dec
adc
push
and
lods
inc
daa
ja
mov
sbb
mov
mov
mov
inc
xor
aas
lods
lcall
ljmp
popf
sub
or
dec
or
int
or
adc
lret
rcll
decb
daa
inc
sub
xlat
in
pop
add
dec
jnp
dec
arpl
push
rep
sbb
mov
sbb
test
movsl
ss
jg
ds
stos
mov
shrl
adc
sbb
mov
mov
fucom
xor
mov
push
lock
push
int
out
xchg
jmp
xchg
mov
cmp
and
pop
xor
sub
sub
mov
fmull
cmp
call
lahf
push
cmp
cmpsl
cmp
sbb
lret
mov
addr16
and
out
mov
loop
les
fdivp
inc
pop
enter
sub
popf
sbb
mov
and
or
add
fsts
ljmp
iret
or
push
out
adc
stos
and
jb
jne
insl
adc
push
cld
icebp
out
mov
mov
sbb
and
pop
xchg
mov
mull
xchg
jnp
cmp
and
cwtl
scas
dec
cmp
imul
push
mov
xor
push
push
inc
ja
jae
dec
stc
in
jmp
pop
push
ja
jne
int3
or
inc
ret
les
mov
in
outsb
xchg
dec
mov
push
sbb
dec
inc
ds
push
scas
iret
xor
sub
push
sub
add
fcomp
movsb
cmpsl
insl
and
fbld
fucomp
jp
dec
adc
push
mov
mov
incl
xchg
sar
test
push
inc
dec
jae
int
jnp
mov
sti
arpl
push
inc
pop
adcl
cli
add
mov
jo
xchg
leave
mov
mov
add
jmp
fdivl
pop
das
jno
subb
add
xchg
roll
clc
or
leave
sbb
inc
lods
add
lock
or
mov
jge
cs
fcomps
cmp
enter
mov
movsb
mov
hlt
xchg
aaa
add
cmpsb
xor
out
jg
shrb
adc
pop
int
jge
dec
inc
fcom
sub
mov
adc
push
pushf
inc
lahf
icebp
mov
and
and
arpl
inc
sbb
sbb
sbb
mov
stc
mov
ljmp
mov
push
ljmp
loopne
cli
sub
inc
clc
imul
cmp
int
cmpb
and
mov
xor
jmp
jg
fldt
adc
cltd
rol
xchg
les
into
stc
mov
scas
movsl
loop
hlt
jmp
jl
int
es
enter
std
xchg
int3
push
and
aas
leave
add
loopne
mov
ret
mov
stos
mov
js
xchg
adc
sbb
in
add
je
jnp
nop
mov
daa
mov
push
mov
xor
shrb
pop
fists
sub
gs
inc
xchg
push
pusha
push
lods
mov
xchg
lock
cmp
push
xchg
push
mov
insl
lods
cltd
xchg
in
sbbb
xor
out
dec
jae
xor
scas
fsts
addl
sub
out
pusha
sub
loopne
adc
lods
cmp
stc
mov
pusha
addr16
shll
push
mov
in
inc
mov
push
lods
fwait
push
dec
sahf
mov
add
xchg
push
mov
nop
cmp
sbb
es
pop
rclb
sbb
mov
mov
in
idiv
ss
jl
mov
mov
fimuls
out
push
jbe
negb
out
xchg
push
imul
outsb
fimuls
dec
mov
fcmovnu
or
leave
adc
leave
arpl
sbb
pop
scas
mov
gs
out
test
filds
imul
sub
mov
out
mov
jg
sub
aad
cli
jbe
push
push
mov
test
add
incb
sbb
ja
fsts
mov
cmp
xor
ds
xor
dec
mov
lret
inc
addr16
push
shl
xchg
scas
sbb
stos
adc
lds
dec
sbb
push
je
pop
lahf
in
icebp
cmpsb
sub
jb
sbb
cltd
push
out
inc
fcmovu
adc
out
hlt
fstpt
sub
jle
push
gs
dec
inc
jns
dec
lahf
repnz
das
fcomp
jmp
sub
lret
ret
push
popa
sub
xchg
in
arpl
and
lea
outsl
icebp
mov
xchg
mov
add
cmp
call
fisttps
mov
stos
xor
hlt
js
lcall
push
mov
add
std
mov
data16
movsb
jecxz
xor
push
insb
lods
ss
addl
notb
and
lret
add
lret
ljmp
ss
ljmp
jecxz
or
jbe
aaa
jnp
aaa
test
out
push
push
mov
ret
xchg
fsubs
xor
ds
pop
pop
push
aas
sarb
xchg
ljmp
jmp
and
pop
stos
xchg
inc
out
dec
lock
mov
idivl
repnz
inc
insb
xchg
lret
rclb
inc
push
enter
xchg
cli
jmp
test
add
dec
std
jecxz
ds
popf
in
shl
fistpll
test
leave
xor
or
insl
popa
dec
outsl
out
movaps
mov
std
cld
cmpsb
lds
sbb
pop
out
mov
pop
dec
ret
call
adc
jnp
lock
mov
mov
test
lahf
push
aam
data16
dec
daa
mov
mov
shll
jl
cwtl
cmpsb
sbb
mov
inc
daa
iret
pop
fsubp
xlat
bound
push
icebp
jne
xchg
push
stos
push
inc
inc
add
cmp
mov
push
insb
lret
mov
sub
or
fisttpll
jo
imul
push
sub
inc
outsb
adc
inc
lahf
test
in
popa
movl
sbb
cs
and
mov
sarl
xor
stc
stos
sub
mov
push
aas
int
push
mov
lods
adc
cltd
popa
and
xor
sub
push
cli
pop
push
mov
jns
mov
push
int
pop
test
popf
lahf
sbb
clc
imul
fwait
xchg
jnp
sbb
in
test
enter
out
cli
inc
pop
es
jmp
loope
cmp
push
mov
inc
jl
jbe
adc
cld
jb
pop
addr16
xor
popa
clc
lods
or
adc
std
and
fs
test
cmpsl
and
int
and
and
dec
pop
je
or
adc
add
sbb
mov
lcall
inc
inc
push
std
les
jo
roll
test
hlt
xchg
mov
nop
push
movsb
adc
mov
daa
inc
mov
lahf
xchg
stos
testb
lcall
into
push
inc
dec
mov
cmp
mov
hlt
popa
pop
cmpsb
enter
jns
inc
cmp
inc
pushf
xor
out
insb
sbb
loope
enter
mov
fs
dec
icebp
stos
push
push
dec
push
inc
aaa
dec
sbb
ss
inc
mov
nop
sti
add
sbb
push
into
push
sub
into
xchg
and
jmp
add
std
inc
cmp
addr16
sbb
xchg
cli
jecxz
pushf
jle
or
sti
mov
ret
adc
repnz
cmovae
outsb
adc
inc
js
inc
sub
jnp
or
repnz
mov
sub
inc
repnz
stc
jbe
push
cli
mov
es
lds
stc
jge
subb
sub
xor
insl
cmp
insb
cld
clc
dec
jmp
pusha
call
ljmp
test
ret
xchg
into
dec
push
push
and
orl
inc
clc
push
clc
fistl
jnp
inc
xchg
jecxz
xchg
dec
mov
cltd
fidivrl
bound
mov
xlat
pop
pop
cli
movsb
aas
in
or
add
test
repz
jp
or
fimuls
mov
lret
cmp
fstps
test
pusha
and
sahf
addr16
in
out
das
inc
shlb
outsb
mov
imul
jo
loopne
dec
lcall
imul
adc
testb
subl
xchg
sti
pushl
mov
aam
sar
sbb
sub
enter
daa
sub
dec
mov
rcrl
movl
inc
and
pop
pop
lcall
in
stos
jecxz
ljmp
mov
and
nop
lret
stos
adc
mov
mov
fdivrp
jae
out
out
pop
sbb
dec
les
lcall
mov
js
xchg
push
repz
mov
int3
push
jo
cmpsb
enter
das
icebp
pop
cmpsb
xor
out
pop
push
inc
popf
sub
adc
mov
sub
stos
sahf
xchg
push
mov
mov
mov
xorb
xor
xlat
cmp
ficoms
insl
in
xorl
pop
pop
mov
ret
pusha
inc
pop
pop
repz
test
jnp
jb
loop
negl
pop
dec
jl
push
js
icebp
daa
sub
adc
jnp
jo
xor
xchg
cmp
add
test
jecxz
push
pushf
cmp
pop
pop
mov
pop
lret
push
push
dec
not
cmp
mov
mov
ja
leave
mov
mov
sbb
clc
inc
fcmovnbe
test
shr
add
dec
cmpsl
test
int
mov
and
sbb
cwtl
pusha
roll
sbb
mov
shlb
loopne
jl
pushf
aam
cs
xor
rcrl
cmp
out
repnz
push
aas
dec
pop
shl
mul
push
insl
arpl
insl
lods
push
stos
ds
sbb
scas
into
pop
push
jl
jp
mov
ja
cltd
js
call
ss
pop
das
ja
sub
fdivrl
insb
adc
movl
jb
pop
mov
mov
jnp
loop
hlt
jae
adc
scas
iret
outsl
jecxz
out
inc
in
in
adc
cmp
push
mov
loop
repz
fs
and
cwtl
cs
mov
or
dec
dec
push
dec
jns
sbb
shll
scas
jns
add
ret
adc
out
out
xchg
xor
mov
cmp
lods
shr
sbb
mov
inc
and
sub
push
iret
lock
pushf
push
stos
lahf
fcomps
arpl
cs
stos
enter
or
jae
jo
xchg
rcl
dec
and
fadds
sbb
outsl
mov
fnstcw
or
pop
mov
notl
scas
pop
add
mov
inc
add
cltd
and
es
mov
mov
jp
dec
sub
add
addr16
fcoml
les
imul
xor
testb
mov
outsb
movsl
loopne
in
jae
aam
pop
adc
dec
movsl
popw
hlt
sarl
aas
pop
or
jo
rcll
pop
cmp
loope
xor
insb
lahf
stos
mov
out
repnz
stos
gs
cmp
pusha
xchg
jns
xor
xor
pusha
mov
inc
xchg
fsubl
adc
adc
push
lret
sbb
adc
push
push
bnd
pop
mov
sub
cli
jb
push
jecxz
in
mov
mov
addr16
mov
lods
cld
and
jb
xlat
xchg
mov
dec
out
cmp
pop
pop
fsubl
add
js
xchg
mov
mov
call
mov
loop
orb
cmpsb
inc
push
xor
test
lret
lcall
add
push
mov
lahf
ljmp
fistps
and
mov
cmp
movsb
jmp
mov
dec
repnz
gs
icebp
fstp
in
fs
lea
test
mov
popf
fsubrp
push
xlat
leave
add
nop
cmpl
and
mov
jno
adc
pop
and
push
je
mov
cmp
icebp
pop
rsm
in
cmc
xor
mov
ret
mov
mov
xlat
pushf
push
sbb
dec
xor
push
or
adc
pop
std
fs
stc
lcall
or
hlt
dec
dec
and
jle
cld
dec
adc
push
in
clc
dec
aad
push
jo
lcall
clc
or
sarl
test
aas
pop
iret
and
dec
pop
jle
or
adc
idivl
pop
hlt
xchg
pop
imul
xor
cmc
fs
ficoms
or
jecxz
push
ljmp
into
mov
aad
iret
int3
fiadds
ret
inc
subb
bound
notl
add
dec
fistpl
jnp
imulb
insb
ds
sti
and
aaa
pop
sti
scas
jge
sbb
fdivrs
and
and
push
stc
ficomps
pop
loopne
imul
das
mov
push
xchg
xor
xchg
push
add
dec
cld
lret
fcoms
pop
ror
gs
ret
cmp
pop
sbb
xor
mov
scas
sbb
inc
mov
xchg
sbb
stos
pop
mov
sub
in
out
cmp
data16
sahf
push
and
rcrb
pop
lds
adc
jg
sub
push
fimuls
xchg
scas
mov
jl
xchg
or
inc
mov
add
aam
mov
out
rcr
aas
into
scas
scas
loope
aas
les
and
or
addl
pop
xor
sti
dec
lock
popf
fisubl
aam
rolb
iret
sbb
xchg
cld
cmc
add
adc
cmp
inc
jno
in
sub
lock
sar
jo
pushf
testl
in
and
lds
stos
lock
xor
jne
mov
sbb
add
add
and
cwtl
mov
sub
testb
mov
mov
mov
and
ds
add
push
push
mov
xchg
outsl
xchg
xchg
pusha
mov
movsb
adc
ss
std
cmpsb
movsl
in
mov
xchg
cltd
or
sub
ljmp
jbe
add
shrb
lcall
and
mov
mov
xchg
jbe
push
add
dec
cmp
push
inc
cmp
ss
js
ret
pushf
ror
popa
ja
loop
pop
aad
lret
push
fildl
imul
push
daa
gs
out
popa
out
jns
addb
js
jl
clc
ds
jl
push
xabort
shlb
lcall
or
pop
cmp
dec
push
mov
aad
jl
cs
adc
icebp
enter
cmpsb
push
int3
xor
xor
and
lea
call
rcll
call
sub
lds
push
or
sarl
cmp
pop
fst
cwtl
mov
mov
xorl
pop
cld
leave
jg
pop
sub
negb
and
les
mov
addr16
pop
sbb
add
sbb
cmp
pop
dec
jb
mov
push
into
pop
sub
repnz
fwait
xor
iret
xor
mov
add
xor
adc
ffree
dec
dec
pop
inc
mov
data16
cmpsb
rcrb
sbb
shr
push
jb
xchg
pushf
cli
clc
imul
aas
inc
dec
cmp
mov
hlt
xchg
xlat
sub
push
jmp
or
sub
lods
movsb
incl
xchg
sti
dec
mov
call
aaa
mov
jns
cmp
xor
inc
repz
loop
pop
test
sub
add
fstpl
inc
or
xchg
iret
outsb
push
mov
jge
jecxz
and
cmp
fwait
stos
mov
push
in
mov
daa
or
dec
test
xor
cmpl
test
lahf
loope
pop
add
sbb
mov
xorl
fldenv
push
out
ja
sub
mov
hlt
xchg
loop
mov
int
sbb
fsubrs
dec
mov
jecxz
loop
es
jle
fiadds
jmp
adc
or
gs
aad
dec
or
mov
clc
aaa
loope
std
mov
aaa
and
enter
inc
adc
dec
outsb
or
in
or
or
aas
mov
ja
and
int3
imul
mov
shrb
pop
sub
dec
outsb
jg
and
xor
mov
pop
jmp
xchg
xor
inc
sub
dec
jmp
lods
inc
daa
adc
notl
test
out
mov
lods
in
push
inc
incb
mov
std
out
jp
jmp
fsubrl
ss
mov
clc
sti
mov
test
test
cmp
mov
loopne
test
fbstp
adc
dec
fsubr
outsb
movsl
aas
cmp
add
jns
bound
jle
lret
scas
jno
lcall
lret
loopne
adc
movsb
shl
loope
sub
in
xchg
dec
int
push
mov
pop
repnz
cmpsl
dec
adc
inc
xlat
stos
das
mov
xchg
aam
mov
sbb
jo
popf
jno
push
mov
mov
add
xchg
hlt
jecxz
push
lcall
loope
sbb
int
pop
imul
out
stos
data16
push
push
mov
insb
sub
call
push
insl
sahf
dec
sub
inc
mov
subl
xor
lahf
addr16
adc
movl
mov
iret
push
movsl
xchg
sub
jp
jo
fs
std
xchg
and
scas
aaa
or
leave
jmp
pop
iret
cmp
js
mov
dec
ret
cmc
rorl
mov
fwait
jl
jl
sbb
jle
imul
ficomps
or
lea
stc
loope
lods
mov
aaa
mov
aaa
sar
cmp
dec
xchg
addb
push
fildll
xchg
adc
popa
enter
sub
xor
xchg
mov
and
es
or
cmp
stc
inc
push
movaps
xor
es
int3
jbe
dec
stos
sbb
es
sub
sub
push
lahf
shlb
movsb
cmpsb
xchg
mov
or
repz
sub
jle
xor
test
xlat
jge
mov
repnz
mov
or
dec
cld
push
cmc
aam
in
mov
enter
and
loope
push
mov
xor
movsl
pop
xor
mov
and
in
cmpsb
or
inc
mov
cs
inc
aad
fdivrs
cwtl
loopne
mov
jb
icebp
cwtl
js
pusha
push
rcll
add
rclb
pop
in
fs
inc
in
daa
cli
sbb
push
inc
mov
jb
mov
mov
ss
repnz
add
push
insb
adc
insb
adc
stos
pop
fwait
loope
popa
mov
inc
cmp
ret
or
scas
std
sub
cmp
mov
dec
cmp
mov
addr16
int3
shl
in
cmp
xor
les
xchg
cmc
inc
inc
mov
jecxz
mov
pusha
pop
imul
adc
outsl
leave
mov
xchg
out
xor
dec
mov
stc
dec
jle
ror
aam
insb
push
in
mov
mov
mov
mov
or
aaa
sub
adc
rcrl
pop
testb
sub
add
push
xchg
flds
out
and
dec
mov
push
rclb
pop
mov
dec
push
or
rorl
lods
lret
movsb
stos
int
or
add
fldenv
push
xor
sub
add
fwait
test
aas
cli
icebp
mov
xchg
lock
jae
nop
cs
lods
fst
push
dec
and
ds
and
ret
sbb
test
movsb
xchg
aaa
loopne
xor
stos
add
fisubl
shll
test
jge
cmpsl
enter
leave
cmpsl
push
xchg
jle
xor
repz
sti
in
les
cld
cld
pop
testb
shlb
stos
dec
sahf
push
pop
cmp
dec
addr16
stos
sbb
clc
or
fs
mov
sbb
std
test
lcall
fwait
jbe
xor
inc
sub
lods
push
test
pop
fidivs
int3
decl
xlat
ss
ja
inc
out
jmp
pushf
xor
add
loope
out
adc
jl
inc
scas
inc
popf
bound
loop,pt
loope
sub
sub
xchg
cmp
sti
rolb
stos
loopne
add
mov
cmpsb
stos
sub
jne
fwait
mov
les
lea
sbb
dec
scas
aas
mov
jne
sub
rcrl
orb
fcoml
mov
pushf
add
shrl
sbb
jp
ljmp
mov
cmpsb
inc
xchg
cmpsl
std
adc
cwtl
lcall
push
cmp
cltd
arpl
scas
sub
sbb
ja
mov
sub
mov
pop
inc
xchg
push
xor
ja
fisttpl
lea
xchg
rol
mov
divl
insl
ljmp
aaa
icebp
fdiv
jle
mov
sub
inc
xor
icebp
pop
aad
pop
mov
cltd
pop
out
outsb
daa
je
add
rorl
movsl
or
andl
cwtl
jb
out
cs
dec
mov
repnz
jnp
sbb
mov
mov
or
and
into
push
pop
jae
lea
push
push
pop
addr16
and
dec
out
push
hlt
inc
push
das
mov
xor
test
xchg
lret
adc
rep
test
movl
aad
in
ret
mov
dec
push
and
inc
outsl
ret
push
adc
jecxz
jp
popa
jl
add
add
aas
imul
push
shlb
sti
ficomps
mov
stc
lods
out
pop
lods
mov
cmp
movsb
xlat
inc
sbb
lock
jl
fistps
orl
data16
inc
push
mov
dec
loope
sub
icebp
jno
fnstcw
mov
pop
sub
mov
xchg
out
and
add
mov
push
push
sahf
outsl
aas
cmp
sub
add
mov
pop
xlat
insb
xor
pop
pop
outsl
push
loopne
pop
inc
cmp
cwtl
mov
rolb
inc
sub
push
mov
outsl
add
sbb
movsl
sbb
int3
jg
jmp
sub
adc
imul
pop
push
enter
test
leave
cmp
rcll
sbb
lods
iret
add
push
sub
mov
push
into
lahf
pop
lret
mov
jne
xchg
cld
aas
cmp
mov
in
inc
mov
inc
push
dec
scas
cmp
dec
jl
scas
out
inc
scas
aad
mov
pop
sub
sahf
in
out
mov
cmp
dec
mov
pop
add
gs
incl
popa
add
loop
xlat
sub
imul
adc
pop
int
mov
loop
and
mov
cmp
xor
ds
sub
pop
mov
add
cld
hlt
lods
and
and
enter
repnz
jno
add
cmp
shr
lods
loope
out
lret
xchg
cmc
xor
sbb
jge
mov
adc
mov
adc
addl
inc
push
in
xor
xor
push
jb
fcmovnbe
addb
xchg
iret
insl
inc
popf
outsl
daa
nop
out
mov
adc
mov
std
push
xlat
fisubrs
adc
and
jns
sbb
ret
and
pop
or
daa
and
or
lret
aam
dec
inc
aaa
xor
call
or
mov
rolb
cmp
adc
cltd
mov
cmpsl
jns
incl
in
pop
jo
movsl
or
popf
jae
mov
jl
xchg
adc
dec
jge
rcrl
mov
push
loop
andb
add
mov
sbb
cmp
jae
cmp
in
cmp
loope
jne
aas
xchg
mov
push
hlt
ret
call
sub
test
jno
fwait
sti
sbbb
xchg
pushf
into
imul
mov
mov
adc
push
jge
icebp
pusha
in
xchg
xor
inc
sub
xchg
mov
rcl
xchg
loopne
mov
iret
rclb
pop
pop
outsl
and
sbb
inc
popf
jl
call
mov
and
shlb
lods
js
in
pushf
cmc
orb
jns
cld
popf
mov
sub
xchg
fsts
mov
cmpsl
mov
adc
dec
fnstenv
xchg
out
hlt
out
out
negl
test
fldt
or
inc
push
sub
cmp
shrl
mov
leave
addl
or
lods
aad
xchg
pop
inc
xchg
outsb
pop
int3
push
fsub
scas
notb
sbb
mov
orb
test
jne
sbb
inc
adc
mov
lock
clc
les
loop
push
pop
push
ret
je
jb
lds
sbb
jecxz
xor
adc
mov
mov
pop
mov
aas
pop
jnp
dec
jo
fimuls
into
fimull
push
clc
lods
adc
jge
movsl
pop
xchg
lock
aam
or
sbb
pop
shrb
mov
test
ljmp
in
and
xlat
mov
loop
sbb
shrl
mov
sbb
jp
imul
ds
push
dec
lea
sub
push
std
or
lcallw
xor
loope
fiaddl
push
push
xor
pushl
mov
xor
sub
bnd
pop
in
stos
aam
dec
cmpsl
pushf
jb
sbb
push
fistpl
push
fwait
mov
sub
into
dec
out
nop
push
aaa
mov
pop
adc
dec
cmpsb
and
fcompl
dec
jo
inc
jp
movsb
push
xchg
jne
dec
xchg
in
dec
nop
inc
repnz
adc
imul
int3
les
frstor
fidivs
add
jo
mov
std
dec
push
das
mov
in
inc
popf
cld
bnd
push
push
aas
rol
push
cli
test
push
mov
aaa
and
orb
aaa
mov
push
sbbl
mov
mov
jg
add
mov
jmp
pusha
jle
loop
adcb
cmp
call
add
mov
rolb
cmp
xchg
jno
roll
sub
pop
loope
and
pop
and
ss
jl
xor
sarl
imul
mov
stos
test
lahf
cmp
addr16
clc
push
dec
adc
push
mov
push
aam
and
fs
hlt
sub
mov
inc
mov
enter
or
ds
lea
add
hlt
pop
lret
sub
call
iret
pushf
and
movsl
imul
xchg
insl
pop
test
xchg
xor
sti
ds
xchg
rol
subb
push
daa
jmp
out
imul
xchg
scas
mov
xchg
pop
cmp
dec
add
in
push
xchg
cmp
movsb
or
jno
xchg
data16
daa
loopne
fisttpll
xor
xor
jbe
test
sahf
inc
shl
inc
adc
sub
in
add
sub
rclb
cmp
insl
mov
push
mov
push
jle
mov
rorb
inc
sub
out
roll
push
inc
xchg
jo
in
aas
xchg
cmpsb
fcmovnb
fsubrl
xlat
mov
lret
sub
aaa
fcompl
fsubrl
outsb
pop
fsubl
pop
dec
test
outsl
test
cmc
push
pop
inc
mov
sbb
enter
and
mov
mov
out
mov
xor
cmp
aad
inc
cltd
nop
gs
aam
or
push
pop
enter
aas
dec
add
pop
jle
xor
push
lods
add
cmp
cwtl
and
xchg
ss
or
sbb
xchg
and
insb
cmp
sti
mov
xor
sub
pop
fmul
cmc
scas
cld
pusha
cwtl
xchg
fstl
adc
int3
lahf
lahf
push
adc
add
addr16
das
fs
ja
push
roll
mov
testb
orb
xor
jnp
adc
inc
out
add
icebp
lret
ficomps
push
mov
hlt
sub
sbb
clc
cmp
inc
push
inc
or
adc
xor
int3
shll
dec
lret
clc
push
pop
and
xorb
fsubp
sub
push
bound
jne
lret
cmp
lods
mov
fildl
sub
jle
jbe
js
or
clc
push
fnsave
fs
scas
lods
dec
call
aam
loopne
popa
js
popf
das
cmp
and
pusha
test
or
push
dec
mov
adc
nop
mov
lcall
rorb
mov
mov
shlb
xchg
movsb
mov
out
mov
xchg
addr16
loop
xchg
xchg
dec
push
ret
dec
sub
mov
pop
pop
imull
mov
outsb
mov
mov
sub
add
and
in
cmp
shrb
fidivl
mov
sbb
mov
sub
imulb
aaa
cmp
test
sbb
ret
or
or
cmp
push
sub
push
aad
sbb
fucom
fs
cs
cmp
xor
jmp
inc
mov
mov
xchg
pushf
int
inc
iret
push
js
xchg
fmull
mov
mov
sub
lcall
int3
and
pop
cmp
lds
lret
sub
xor
sub
lock
adc
dec
insl
add
in
out
inc
jne
lods
aas
adc
in
addr16
lret
sub
cmc
mov
lods
xlat
pop
sti
and
xchg
xchg
jbe
dec
sub
add
filds
in
pusha
mov
xchg
enter
adc
xchg
push
rorl
mov
ss
outsb
push
cmpsb
adc
push
roll
add
sub
test
sbb
cmp
pop
add
cli
ret
test
je
sahf
add
sbb
adc
fisttpll
in
mov
jge
or
call
data16
cli
sti
jbe
xchg
repz
inc
fwait
out
pop
add
jne
test
je
pop
mov
mov
fidivs
ds
mov
repnz
push
jle
out
mov
repz
mov
daa
fsubrl
xor
pop
pop
lock
loop
lds
mov
aaa
mov
mov
push
adc
dec
inc
imul
in
filds
push
mov
mov
inc
mov
clc
cmc
push
or
outsl
stos
or
shl
repnz
loope
pushl
and
leave
mov
xchg
sbb
xor
into
aaa
cltd
sub
mov
stos
mov
fnstsw
shlb
adc
out
icebp
pcmpgtw
xchg
cmp
inc
inc
cld
in
mov
mov
out
dec
xchg
pop
dec
mov
jnp
mov
sbb
push
mov
add
mov
fsincos
xor
sub
les
mov
fwait
push
push
sub
scas
movsl
cltd
sub
mov
mov
or
and
xchg
adc
in
dec
lahf
adc
lcall
cmp
xor
jns
mov
out
pop
test
cmp
outsb
stos
leave
mov
mov
cmp
sbb
or
inc
shlb
lods
cli
fcmovnu
scas
gs
insl
mov
sarb
popf
push
daa
fisubl
xlat
sahf
orb
pop
imul
mov
imul
out
inc
les
add
jo
sbb
sub
cmp
loopne
jno
fisubrs
mov
jb
addr16
in
out
mov
pushf
or
adc
je
pop
imul
mov
cmp
mov
pop
jecxz
dec
xor
cmpb
fsubs
or
out
inc
cs
mov
jns
lods
inc
mov
js
in
movsl
or
and
adc
push
sbb
xchg
std
cmp
xchg
cmpsl
inc
pop
xlat
imul
pop
jbe
outsb
gs
push
popa
adc
mov
scas
mov
dec
mov
mov
hlt
int
jo
arpl
clc
insl
mov
cmp
inc
dec
cld
and
push
mov
pop
dec
fs
lret
imul
jmp
ss
pop
jo
lock
test
fdiv
xchg
daa
dec
lods
ss
ror
and
clc
or
mov
add
and
adc
adc
aam
jl
and
or
sahf
shrb
outsb
rolb
inc
jg
dec
int
mov
rcr
test
cmpb
dec
mov
bound
push
adc
int
lods
mov
dec
movsb
outsb
shrb
pusha
cmp
mov
or
add
or
jmp
add
mov
inc
add
dec
or
imul
or
hlt
inc
fs
loopne
lock
mov
enter
pop
outsb
dec
loope
push
inc
xchg
and
js
adc
inc
imul
mov
rcll
mov
insl
lret
nop
out
outsb
dec
jl
imul
gs
xor
in
pop
mov
ds
or
loope
ffreep
add
cmp
das
je
data16
dec
pushf
lahf
arpl
bound
mov
mov
cli
insb
xor
push
ljmp
xchg
jecxz
push
int
mov
loope
insb
add
cld
je
ror
mov
fnstcw
stos
adc
dec
jne
sti
int3
out
sbb
mov
pop
fdivrl
aaa
frstor
in
repz
sub
test
sbb
aam
sub
add
aaa
pop
into
fcoms
inc
add
push
mov
or
xchg
xlat
adc
loop
ret
js
push
shll
cmp
jmp
cmp
inc
mov
insb
das
pop
pop
or
jecxz
jmp
rorb
or
orl
jae
bsr
lret
mov
push
push
and
fwait
lret
add
rcrl
shll
arpl
fldenv
push
cmp
and
es
vpsrld
aam
pushf
pop
mov
lret
clc
cld
scas
or
sub
lret
inc
add
ds
add
leave
pop
fsubrp
lods
mov
sbb
mov
test
xchg
repz
lahf
or
push
jo
test
mov
cwtl
push
and
pop
nop
popf
pop
jne
in
jo
ret
jne
add
jmp
out
cmp
cmpsb
fwait
in
loop
xor
lahf
pop
daa
in
loop
sbb
and
nop
mov
mov
cmp
mov
cmpsl
pop
or
loope
mov
popf
sbb
inc
std
sub
mov
hlt
fisttpll
jle
divl
mov
arpl
xchg
movsl
lahf
les
cmp
mov
sbb
sub
pushf
pop
push
dec
loopne
sbb
popa
pop
lds
push
adc
repz
les
sub
dec
mov
stos
clc
loop
repz
scas
or
or
sbb
adcb
lret
and
aas
sbb
rcl
imul
loopne
aam
scas
mov
push
xchg
popf
addr16
std
scas
imul
hlt
ss
sub
es
popf
test
jbe
adc
mov
inc
inc
mov
mov
push
mov
fnstenv
inc
push
sbb
sub
cmp
icebp
ja
cli
leave
das
addl
cmp
pusha
mov
push
cs
mov
xorb
outsl
jmp
mov
iret
inc
rcrb
outsl
in
nop
push
fisubl
mov
add
inc
mov
aad
push
sub
insb
sub
js
mov
aad
mov
rclb
sbb
push
test
inc
jge
inc
jmp
mov
mov
fmul
mov
adc
add
in
mov
push
pop
insb
sbb
push
imul
sub
sub
mov
sbbl
xchg
call
out
sbb
jno
xchg
shlb
or
mov
jmp
clc
jnp
mov
call
adc
pushf
dec
dec
aaa
pop
movsl
dec
mov
mov
pop
xor
ret
aaa
ss
in
pop
sub
mov
cmp
addr16
aam
ret
mov
lret
jb
fisttps
mov
enter
lret
mov
jle
add
xor
incb
xchg
pop
or
add
pop
rcll
add
mov
push
test
fcomp
xor
hlt
ret
hlt
ljmp
xor
inc
pop
mov
xlat
out
xlat
jp
sbb
repnz
loopne
inc
adc
dec
pop
mov
subl
cmp
add
cmp
dec
fadd
mov
xchg
mov
inc
sarl
out
sahf
xchg
mov
add
xor
xor
std
lock
pushf
xchg
movsl
mov
pop
mov
add
dec
push
gs
cmc
and
mov
add
insl
mov
cmp
jmp
lock
mov
aas
dec
xchg
rorb
mov
aam
lods
lcall
cmp
xlat
mov
stc
cmp
mov
repnz
xor
outsl
hlt
repnz
push
or
lea
imul
push
stc
rcrb
pop
out
inc
mov
xchg
sub
mov
mov
add
scas
dec
and
jl
in
shrl
sahf
out
sbb
ja
in
ds
pop
movsb
fiaddl
imul
pop
or
jg
xlat
jecxz
jl
xchg
test
js
lea
jecxz
out
jp
mov
push
pop
jns
dec
push
out
xor
dec
xor
or
or
fldenv
mov
cmpsl
data16
shrb
or
sarb
cmp
lret
xlat
repnz
pop
sti
outsl
fwait
jo
mov
jle
mov
xor
mov
cmp
sbb
xchg
das
ds
das
jmp
pop
cli
push
jmp
sar
sub
adc
fcmovnu
sarl
popf
pop
ss
stos
test
scas
adc
lret
loopne
push
test
sbb
test
jmp
jecxz
or
mov
sti
dec
ja
dec
loop
cmp
frstor
mov
sbb
fwait
aaa
jge
in
cld
scas
add
addr16
or
pop
cwtl
cmp
mov
dec
cmp
or
lea
cmp
dec
jne
test
out
jle
sub
inc
aad
lea
negl
cmp
mov
leave
scas
push
jae
dec
ja
adc
movsl
mov
daa
jge
fisttpll
push
aam
push
in
push
jmp
lahf
mov
fildll
fisubl
cli
insl
insb
decl
lods
xchg
jnp
jle
fbld
popa
test
inc
bound
lods
rcll
shl
bound
js
pop
xchg
push
lea
mov
push
jp
pop
mov
mov
dec
jns
xor
cs
mov
mov
dec
mov
mov
fcomi
insb
jg
loop
dec
adc
arpl
imul
test
outsl
mov
js
sbb
ss
cltd
jnp
nop
and
dec
mov
pushl
pushl
pusha
pop
cmp
insl
jb
inc
push
add
ja
scas
and
xlat
stos
cltd
or
or
push
mov
lret
and
out
inc
sub
xchg
jne
imul
push
pop
xor
rolb
int
pushf
test
push
rclb
or
jle
adcb
dec
xchg
jae
mov
mov
fsubs
dec
inc
test
mov
stos
shlb
cmp
and
mov
out
fidivs
pusha
test
mov
int
int
cmp
loopne
repnz
xchg
inc
jmp
aad
ljmp
sbb
repnz
loope
and
xor
test
nop
or
push
lahf
fstpt
inc
ret
testb
xchg
mov
nop
popa
shl
dec
rol
dec
rolb
xor
jmp
xchg
push
sbb
iretw
movsl
faddl
inc
mov
cli
push
cmp
push
stos
jmp
mov
sub
popa
dec
cs
xor
dec
xor
push
clc
ljmp
pop
add
out
mov
testl
or
movsb
jle
outsb
cmovno
fldl
xchg
out
or
ds
inc
mov
roll
fwait
sbb
incl
mov
lret
or
xchg
lds
cmp
mov
mov
incl
jg
aad
out
xchg
stc
dec
jne
adc
jne
mov
outsb
sbb
loop
xchg
aam
int3
inc
sub
lock
or
sbb
jo
lahf
adc
mov
rcrb
lock
adc
out
xchg
xor
fsubs
xor
xchg
xchg
pusha
or
dec
sahf
pop
lods
das
lds
jb
loop
jae
sub
shll
cmpsb
fyl2xp1
jmp
aaa
inc
je
movsl
sbb
xchg
cmp
mov
data16
jp
sub
fnsave
pop
aas
lret
mov
sbb
adc
xor
aam
mov
fiaddl
fs
jns
orl
aaa
dec
sub
lret
dec
enter
add
in
add
test
adc
icebp
dec
cmp
and
hlt
jno
pop
mov
js
xor
in
fists
dec
lods
mov
and
mov
xor
in
out
inc
cs
cmp
cwtl
mov
xor
cmp
lret
sub
loopne
dec
rcl
rcl
stos
lods
movsl
xchg
sti
mov
lcall
cmpsl
mov
loope
outsl
movsl
or
pop
in
fmul
xchg
and
sbb
scas
das
mov
and
outsb
jmp
lea
xchg
int3
xor
idiv
loope
xchg
std
pop
pusha
cmpsl
outsb
mov
iret
cmpsl
dec
lock
lcall
hlt
xchg
or
xor
adc
adcl
incb
cld
rcrb
push
lret
push
jno
mov
test
push
sub
leave
mov
mov
xor
cmp
aaa
in
dec
lret
stos
push
les
mov
shrl
jmp
loopne
inc
scas
push
adc
mov
xor
mov
mov
out
movsb
cmp
addr16
arpl
mov
mov
inc
out
sarb
fadd
sub
jae
and
jg
xchg
subl
lret
rcrl
push
outsl
sub
and
xchg
stos
je
rclb
mov
stos
pop
test
rorl
dec
mov
pop
fcoml
pop
mov
cwtl
repnz
xchg
inc
imul
mov
and
gs
and
hlt
cltd
test
inc
pop
and
jne
stc
xchg
repz
insb
xchg
jnp
sbb
mov
inc
ds
mov
arpl
sub
pop
cld
pop
dec
fcomps
leave
leave
mov
pushl
nop
leave
push
test
movnti
dec
sarl
je
mov
test
jmp
push
cltd
inc
dec
sbb
mov
mov
nop
cld
xchg
in
or
pop
test
test
scas
cs
cmp
in
popf
or
jp
mov
pop
adc
sahf
out
cli
cli
pop
xchg
in
or
fnstcw
dec
push
imul
ss
or
lret
and
jne
jne
sbb
iret
lahf
stc
lret
icebp
cwtl
sub
push
nop
xchg
sub
lds
mov
pop
into
sub
mov
stos
jmp
leave
xor
in
jb
adc
mov
mov
mov
popa
pop
int3
jp
xchg
lahf
iret
xchg
outsl
seto
int3
pop
cmp
cmpsb
inc
mov
loopne
enter
pop
je
inc
je
xchg
fistl
cld
mov
push
jl
pop
sub
mov
lret
jo
adc
xor
jmp
lahf
movsb
jns
mov
or
adc
leave
adc
cwtl
sbb
add
mov
jge
insl
jns
sub
in
inc
subb
pop
stos
lcall
sub
fstps
push
push
bound
scas
or
fxch
iret
inc
push
and
mov
imul
adc
imul
outsb
push
push
addl
fstps
std
clc
hlt
mov
stos
adc
sbb
mov
sub
stc
cld
repnz
call
in
inc
loop
cmpsl
sub
imul
dec
repz
dec
push
push
shl
leave
xchg
pop
mov
jecxz
rorl
cltd
cmpsb
sahf
mov
les
repz
data16
add
inc
push
push
inc
pop
ja
jnp
pop
adc
mov
xchg
push
pusha
mov
std
jns
mov
test
ljmp
lret
sub
fsubrs
outsb
or
movsb
ret
psubusw
inc
inc
cld
cli
jbe
sarl
add
xor
pop
mov
inc
addr16
or
mov
mov
cmp
mov
shlb
cmpsb
ljmp
mov
inc
bound
sbb
push
imul
loop
mov
cmpsb
jp
leave
rorb
out
jl
push
push
xor
sbb
and
stos
xor
leave
add
mov
in
adc
loop
jecxz,pt
xor
shrl
lcall
out
daa
imul
push
pop
mov
popf
adc
sbb
shll
testl
lret
test
out
repnz
shlb
xor
ljmp
or
lock
rol
sub
add
lret
sbb
fimull
mov
in
xlat
xor
rorb
lods
fwait
mov
sub
xor
jo
xchg
pop
mov
in
in
sti
push
push
inc
lret
xlat
inc
jns
insb
xchg
cmp
loope
adc
add
push
mov
and
stc
loop
jmp
testl
imul
fnstenv
xchg
dec
or
add
jg
inc
aas
mov
pop
sub
inc
push
cmp
sarb
xor
fsincos
fiadds
fidivs
sub
aam
fldl
adc
out
aaa
clc
xchg
inc
and
int
shlb
dec
sbb
out
mov
fisttps
or
test
dec
test
jg
imul
stc
fisubl
xchg
push
leave
andl
ljmp
add
mov
sub
mov
daa
inc
aam
cmc
sbb
cmp
aas
mov
push
ds
jne
mov
out
js
jp
cmp
add
pop
dec
jmp
jae
push
or
push
mov
jnp
js
dec
adc
iret
adc
mov
and
aad
aas
mov
test
push
cmpxchg
clc
pop
jmp
ror
jne
push
adc
js
loopne
xlat
adc
test
lods
mov
mov
scas
ja
fidivrl
decl
and
cmpsb
sahf
pushf
je
pop
rclb
jl
dec
mov
dec
sub
repnz
stos
lret
out
fnstenv
dec
sub
xor
xchg
adc
pusha
or
xor
popa
mov
xchg
test
mov
xchg
popf
sub
add
adc
cmp
jmp
in
jne
pushaw
movsb
jne
ja
movsb
cmp
pop
fidivs
out
test
push
mov
cld
sbb
pushf
or
and
xchg
xlat
jmp
pop
pop
gs
arpl
aad
fucomp
cmpsl
mov
lock
sbb
add
pop
push
add
fidivl
jne
xor
ja
pop
dec
clc
shr
jg
xchg
in
sub
in
ljmp
jb
fldz
je
pop
inc
cmp
mov
mov
ds
ficomps
arpl
push
pop
pop
int3
jb
inc
jno
xchg
out
les
iret
imul
adc
push
clc
cmp
push
and
xor
jb
push
dec
in
mov
cmp
cmpsl
dec
jbe
inc
div
inc
adc
and
jae
loopne
and
cmp
adc
icebp
lea
stos
dec
call
iret
arpl
xchg
aas
dec
shl
jmp
jp
xor
mov
push
cmp
out
push
mov
test
frstor
ljmp
lds
mov
inc
mov
rorb
and
out
sub
jl
arpl
aas
xor
dec
ror
je
ljmp
lret
aam
push
mov
cmp
je
cmpl
loopne
push
out
add
jae
and
pop
xchg
xor
decl
jns
and
xchg
rcl
mov
pop
jmp
cmpsb
mov
add
mov
aam
jecxz
cmp
cli
xchg
inc
in
xchg
sti
mov
shl
cmp
push
xor
out
idivl
cmp
rol
inc
loopne
mov
inc
cmc
enter
sbb
push
je
out
mov
xlat
in
xor
dec
jl
mov
mov
out
out
mov
pusha
bound
add
popl
sbb
test
add
xor
push
pop
leave
push
xor
sub
mov
in
xchg
nop
inc
shlb
es
mov
cmp
shr
loope
push
and
insl
push
mov
cmp
stos
adc
shll
cmp
arpl
push
ficompl
sub
flds
xor
push
neg
int3
adc
nop
lret
imul
addr16
cmp
push
lods
repnz
rcr
lods
pop
sbb
out
mov
jecxz
mov
xor
jmp
jae
dec
inc
adc
inc
andl
in
add
setp
aaa
out
bound
call
or
mov
mov
lods
in
jl
xchg
or
push
sub
frstor
pop
pop
sti
iret
cmp
mov
xchg
repz
aaa
paddb
cmp
pop
add
cmc
sbb
icebp
inc
fwait
mov
shrl
jbe
in
les
mov
xchg
sbb
push
and
adc
mov
outsb
dec
es
rcr
das
pop
lea
cmp
mov
cmpl
scas
pop
sub
pop
insl
push
test
mov
and
aad
and
iret
pusha
dec
mov
dec
dec
xchg
mov
popf
nop
pop
movsl
lods
rorl
jl
mov
iret
daa
mov
xchg
mov
cmp
xor
xchg
mov
rorb
bound
adc
and
neg
mov
cmpsl
jb
and
divb
dec
in
bound
scas
jg
sub
xor
xor
sbb
outsb
inc
add
fimull
clc
dec
pop
adc
pop
je
pop
push
push
daa
and
sahf
out
push
push
or
pop
imul
in
adc
jnp
scas
pop
inc
clc
adc
push
loop
testb
daa
push
pusha
mov
stc
xchg
shl
fs
lret
dec
shr
sarl
mov
xor
jecxz
je
iret
lock
jmp
aas
push
push
fdivr
pop
repz
inc
mov
push
dec
cld
mov
insl
mov
rorb
jnp
cltd
lret
iret
push
aam
repnz
cwtl
dec
pop
xchg
xor
pop
je
test
add
dec
clc
or
xchg
lret
and
push
xorl
adc
rclb
fwait
ss
gs
scas
in
sbbl
xor
pop
inc
in
or
mov
jns
ss
cs
shrb
mov
pop
pop
adc
leave
sbb
inc
push
imul
test
push
adc
lock
lea
js
cmpb
push
mov
stc
xchg
inc
inc
push
push
pushf
in
add
cmc
in
sbb
sbb
mov
shl
lds
js
sub
leave
fadd
jp
xchg
int3
or
pusha
sbb
and
fdivr
inc
mov
lcall
in
mov
iret
ss
push
or
scas
push
cmp
push
sub
sbb
push
jmp
addr16
lods
adc
or
or
mov
cmp
add
rorb
jmp
lahf
imul
ret
enter
punpcklbw
jns
push
daa
and
mov
imul
sub
les
push
xor
xor
mov
rcr
mov
nop
mov
push
push
push
cmp
mov
and
std
cwtl
inc
add
mov
cmp
rol
mov
paddusb
mov
scas
arpl
xchg
adc
aam
jno
push
mov
fadd
in
pop
int3
sub
test
push
mov
push
popf
fcom
xor
and
les
pop
fxch
int
daa
jnp
mov
popa
js
xchg
xor
pop
ffreep
add
xor
ret
outsb
lds
mov
sbb
xchg
inc
pop
out
jno
popl
in
jbe
jbe
and
jg
and
icebp
and
or
fstpt
arpl
mov
in
jmp
mov
call
fsubl
out
sub
mov
push
push
shlb
fdivrs
incb
cld
push
mov
stos
cmpl
movsl
stos
jns
push
daa
pop
pop
or
push
sub
int3
jg
nop
xor
xor
mov
imul
cmp
dec
std
call
insb
pop
add
daa
in
rorb
int3
mov
mov
scas
and
stos
cmp
xchg
inc
inc
adcb
jnp
pusha
mov
push
pop
out
mov
loop
adc
mov
pop
sbb
xchg
es
fistl
or
sub
jns
sbb
inc
jmp
dec
xchg
sub
jl
mov
cmp
cli
mov
fmuls
mov
mov
aad
scas
sbb
mov
push
pop
sbb
das
lds
popf
xchg
loop
and
dec
mov
fldenv
jle
sbb
or
out
xor
testl
sub
and
jae
dec
dec
lcall
cmpsl
daa
or
sbb
cmp
add
and
jmp
lods
push
push
lods
push
lret
and
dec
sub
les
jl
or
jae
mov
stc
adc
pop
fdivrs
jne
fucom
int3
adc
mov
and
popa
in
lret
aam
inc
push
pop
cmp
jbe
push
aas
cmc
mov
mov
fcompl
pop
clc
cmp
jle
push
int3
push
daa
mov
and
mov
sub
mov
into
lock
ja
insb
aam
clc
sub
icebp
lods
xor
add
repz
das
add
ja
mov
push
sbb
and
cmpsl
arpl
mov
rcll
mov
pop
dec
xchg
daa
jecxz
push
push
inc
cld
iret
mov
loop
mov
cmp
lea
lret
notl
fimull
push
scas
idivb
sbb
popf
mov
sbbb
cmp
popa
clc
sbb
ljmp
pushf
jl
outsb
subb
ficompl
shlb
mov
or
push
mov
inc
mov
lahf
dec
pop
jne
mov
xor
mov
add
or
dec
insb
lock
and
inc
outsb
lahf
add
and
ret
sbb
sub
xchg
xor
fwait
jo
adc
popf
cmpsl
pop
popa
mov
cmp
or
jae
lret
into
push
sbb
sar
xchg
test
cltd
out
cmpsl
mov
loopne
out
add
cmpsl
pop
xchg
or
test
cli
adc
push
mov
xchg
clts
mov
sbb
mov
dec
sub
icebp
push
and
sbb
push
hlt
scas
mov
cmpsl
ss
imul
mov
inc
lret
cwtl
ja
jle
sbb
out
cmp
and
xchg
mov
shll
adc
jne
fisttps
mov
sbb
inc
cmp
or
mov
outsl
inc
mov
mov
xchg
in
call
xchg
das
jno
fmulp
xchg
and
ja
jne
sbb
imul
inc
xlat
cmp
adc
inc
into
cmp
adc
jecxz
jle
adc
xor
sti
orl
add
cmpsb
sbb
inc
lock
pop
ds
mov
mov
cmp
test
xor
sub
hlt
decl
mov
rcrb
imul
lcall
lock
aaa
call
mov
cmp
mov
inc
stos
loopne
mov
rcl
ret
test
jecxz
aad
nop
fsubrp
lret
cmc
adc
mov
and
cmp
popa
ret
sti
pop
xor
into
imul
add
nop
outsb
xchg
sub
pop
sub
adc
or
cmc
mov
adc
iret
cmpsl
flds
cmc
lret
stc
rcll
sbb
fsts
xor
sub
jo,pn
das
pop
xchg
sarl
enter
sti
dec
push
outsl
or
cs
iret
dec
cmp
shl
daa
push
inc
mov
rol
loopne
sbb
or
scas
mov
adc
mov
mov
xlat
jmpw
pop
xor
or
push
movsl
fdiv
test
jecxz
add
mov
gs
mov
cmpsb
inc
mov
jg
sbb
mov
mov
xor
mov
dec
sbb
mov
in
ja
mov
sub
pop
aaa
or
add
mov
xor
lds
sub
sub
es
cltd
pushf
enter
jb
je
mov
or
and
es
mov
xor
inc
xchg
mov
int
mov
in
loop
jno
fisubs
xchg
mov
stos
enter
int
mov
or
cmpl
xchg
adc
ljmp
or
stc
mov
fildl
daa
bound
das
stos
push
mov
out
jae
jb
sub
ret
repnz
fidivrl
jo
mov
sbbb
lods
popa
fcmovne
xor
jno
lret
mov
sub
cmp
mov
push
jno
and
jp
fdivr
cmp
and
divb
cli
ss
inc
fildl
je
shll
les
push
aad
stos
push
loopne
rcl
xchg
mov
lea
sbb
mov
add
adc
shll
mov
and
int
je
add
fidivrs
subl
int
push
and
jg
ljmp
mov
in
adc
rcr
cmp
test
dec
test
cli
cltd
inc
insl
pop
loop
and
jge
xchg
movsl
push
ljmp
adc
push
lods
jnp
aaa
out
pop
mov
les
adcb
stos
mov
xchg
movsb
bound
imul
ret
push
and
xchg
stos
divb
dec
sbb
mov
out
pop
lods
xchg
call
sbb
jb
in
pop
movsb
sbb
std
mov
stc
outsb
enter
add
in
xor
push
xorb
cmc
enter
lcall
and
push
sub
faddl
fs
popa
xor
je
mov
test
pop
nop
mov
into
add
fistpl
arpl
lret
mov
out
pop
popa
push
shrd
xor
test
addr16
iret
leave
movsb
sub
dec
xchg
pop
inc
xlat
orl
sbb
daa
push
enter
movsl
int3
cs
dec
cmp
xchg
js
lea
clc
enter
jecxz
mov
adcl
mov
mov
idivl
rcl
sbb
insl
or
notl
movsl
adc
inc
out
ja
insl
sbb
sub
jo
scas
sub
xor
sub
inc
in
lahf
ret
cs
jmp
out
mov
stos
cwtl
pop
int3
cwtl
out
add
aad
cmp
adc
daa
xchg
aas
inc
clc
rolb
loopne
imul
cmpsb
addr16
fisttpl
outsl
insb
jns
pusha
sub
imul
popf
in
mov
lcall
cs
imul
push
lret
ljmp
into
iret
inc
repnz
push
jb
cmp
inc
mov
mov
std
negb
mov
test
rorb
rcll
pushf
adc
jae
jg
sbb
mov
adc
and
sbb
mov
fisttpll
in
and
rcll
dec
ljmp
dec
xor
push
inc
jae
mov
push
movsb
lahf
push
fisttps
mov
out
push
mov
add
in
dec
insb
dec
pop
pop
scas
dec
inc
cmp
cmp
notl
xor
imull
test
ja
and
and
stos
lock
in
test
stc
imul
dec
push
xchg
mov
jg
data16
xchg
xchg
sub
cltd
movsl
push
test
lock
bound
lahf
or
cltd
rolb
cltd
fdivs
stos
mov
ficompl
pop
push
cmpsl
loope
adc
lcall
sub
and
outsl
pop
jns
add
xor
scas
pop
add
or
dec
lock
mov
push
xchg
popf
dec
xchg
mov
cmp
xor
cmp
cmpsl
jae
xchg
loopne
xchg
fwait
push
je
jp
cmpl
shl
fiadds
dec
insb
cmp
push
filds
arpl
orl
xchg
scas
lods
andb
pop
rcl
mov
shr
lahf
jg
cmp
pusha
cs
cmp
leave
popa
testl
or
ficoml
sbb
test
mov
ja
or
inc
jo
sub
cmp
pop
sub
cmp
gs
pop
cmp
out
pop
loope
jno
insb
xchg
ficompl
adc
cmpsl
mov
jno
push
jnp
pop
fsubl
cmp
xorb
adc
jbe
ret
fchs
cs
mov
mov
out
pop
mov
adc
push
sub
in
dec
hlt
or
cmc
test
xor
popf
push
and
dec
in
push
andb
or
setae
cmp
cmp
scas
lds
xor
inc
xlat
and
inc
mov
push
jmp
adc
dec
push
aaa
mov
pop
fstps
std
lret
mov
lods
cmpsb
loopne
es
mov
sub
or
repz
cmpsl
inc
jae
jmp
jo
xor
pop
jecxz
ja
add
mov
aam
or
inc
into
bound
gs
repnz
inc
lcall
cmp
out
jne
push
addr16
mov
lcall
popa
pop
mov
loopne
loop
pop
cmpsb
mov
into
xchg
leave
or
xchg
push
lea
push
fisttpl
in
cmpsb
gs
jbe
xchg
loop
dec
mov
jp
out
movsb
mov
addl
sub
mov
imul
fmul
insb
cmpb
test
jp
xor
outsl
cmovle
sub
mov
or
pop
mov
bound
vmovntdq
out
push
jg
repz
mov
adc
mov
and
push
push
pop
jo
or
pop
fwait
dec
shlb
mov
lahf
movsb
mov
cmp
loop
out
push
sbb
out
sub
icebp
pushf
cmpsb
pop
xor
xlat
xor
enter
sbb
mov
and
push
adcb
fstps
push
and
je
jp
adc
ljmp
push
scas
mov
loopne
pop
pushf
inc
incl
lea
out
cmp
xor
addr16
dec
mov
pop
mov
inc
jle
cmp
das
dec
cmp
roll
in
das
sub
jb
sbb
adc
lds
incb
sub
fs
push
pop
cmp
push
fwait
inc
and
jnp
xchg
xchg
jle
sbb
jp,pn
sub
repnz
rorb
shl
xlat
xchg
outsl
cmp
pop
popf
insb
jo
and
popf
int
cmp
fidivl
dec
inc
mov
xorl
and
jne
out
sbb
and
and
cmpsb
mov
push
mov
and
mov
or
jb
xchg
fsubrl
fldcw
push
push
mov
mov
shlb
fcoms
mov
push
jo
sub
in
dec
lds
or
ja
xchg
jl
sbb
ja
pop
loopne
test
xor
jle
test
inc
popa
mulb
dec
inc
xchg
jp
in
sbb
imul
cli
insb
stc
mov
out
leave
or
loope
scas
inc
fstps
out
xchg
fdivr
iret
xchg
adc
out
enter
mov
js
test
push
and
cwtl
repz
and
or
jmp
mov
cmp
sbb
adc
jle
int3
inc
add
sub
fwait
sub
mov
jno
xchg
test
mov
in
fsubs
sbbl
jmp
cmp
or
les
enter
arpl
rclb
add
ficoml
rcr
xor
scas
lahf
jmp
push
add
inc
push
jl
push
insb
mov
insb
mov
les
xor
jno
hlt
int3
orb
rorl
jnp
push
sbb
fstpl
pop
ss
jmp
xchg
sbbb
mov
daa
cmpsb
xlat
add
or
fldenv
jle
cmc
xor
inc
cmp
and
js
push
sbb
push
cltd
hlt
xchg
mul
popf
sub
fstl
and
or
pop
mov
aam
cmpsl
xchg
mov
in
test
js
popa
ds
inc
and
fwait
lcall
dec
cmpsl
and
mov
mov
aad
or
out
mov
xchg
movsl
inc
loopne
and
xor
dec
and
mov
cmpsb
mov
add
out
lcall
mov
pop
pop
xchg
push
cs
or
out
out
ds
push
jmp
lock
push
pop
pop
add
mov
adc
rclb
rolb
fsubs
mov
mov
sbb
aaa
add
enter
lret
push
call
sub
cmpsb
aad
xchg
mov
pop
test
popa
cmpb
or
cmc
pop
inc
push
cmp
cmp
cld
outsl
shrl
mov
sti
and
mov
jne
pop
shrl
test
xchg
mov
cmp
lea
mov
sub
scas
adc
xchg
push
lret
fdivrl
or
leave
jnp
or
fiaddl
jo,pt
add
dec
lahf
mov
stos
lock
xchg
mov
jge
mov
add
and
mov
test
pop
cmp
push
fistl
jle
mov
repnz
cmpsl
or
and
andl
and
mov
and
or
and
cmpsb
aad
pop
cmc
dec
ja
ret
mov
add
outsb
pop
out
cli
mov
sub
mov
out
pop
pushf
jb
daa
cmp
addr16
and
sbb
scas
clc
lret
pop
xchg
and
mov
adc
jp
fucomi
movsb
add
mov
orb
mov
popf
sarl
outsl
fildl
es
in
scas
mov
leave
loop
pop
int3
sahf
shrl
and
dec
sub
mov
or
mov
shrd
sti
xlat
mov
bound
cmpb
int3
in
mov
and
adc
mov
or
add
jle
in
jne
push
inc
adc
int3
adc
or
jb
enter
dec
dec
out
ss
loope
pop
xchg
dec
push
imulb
sti
imul
mov
call
xchg
repz
fisttps
mov
mov
lcall
call
fxch
jge
or
or
pop
movsb
cmp
dec
cmp
fmulp
test
add
aas
mov
mov
sub
lcall
pop
pushf
xor
rol
jl
xchg
lods
inc
jl
aaa
cmc
xor
push
lret
sbb
iret
dec
enter
xchg
sub
cmpsb
ss
xchg
es
jg
icebp
sbb
shrb
es
icebp
and
lods
leave
pop
hlt
data16
dec
test
dec
stos
iret
lock
mov
outsl
jge
in
and
push
dec
push
sarb
outsb
pop
push
mov
jns
jge
jo
sub
cmp
jle
mov
mov
push
dec
push
and
cmp
sbb
imull
push
clc
jb
orb
mov
and
cmpsl
jno
loope
push
xchg
dec
mov
out
into
add
cmp
dec
xor
adc
mov
mov
cmp
daa
cmc
les
rcrb
mov
pop
mov
pop
rcr
gs
adc
mov
test
pop
pop
cmp
or
addr16
and
dec
andl
or
jbe
sbb
loopne
lods
in
xchg
ja
test
dec
subl
push
xchg
repnz
ss
inc
lahf
cmp
jmp
rcr
xchg
mov
dec
or
sbb
leave
ret
lret
push
call
lahf
mov
push
inc
xchg
cmp
cmpsl
pop
or
jns
push
lods
popa
jle
push
in
sahf
jle
push
inc
cmp
or
dec
ret
dec
test
shll
cmp
leave
jne
insl
dec
movsl
xor
jno
addr16
sub
pop
dec
sbb
cmp
dec
jmp
inc
daa
loop
movsl
jnp
adc
mov
sub
pusha
subb
punpckldq
adc
push
dec
push
jg
push
add
push
testb
pushf
idiv
mov
xor
orb
es
out
xor
push
cmp
mov
or
and
inc
pop
adc
leave
clc
icebp
jl
dec
adc
xchg
into
pop
and
mov
gs
int
cld
aaa
add
mov
data16
inc
lret
inc
or
inc
je
test
es
pushf
pop
xor
xor
add
outsl
fiaddl
out
dec
add
and
rol
xor
jbe
out
mov
and
insb
loope
cmpb
shrl
push
xchg
mov
mov
cmp
cmpsb
inc
fucomp
in
lea
test
mov
loopne
out
pop
dec
fisttpll
ret
xchg
mov
cmp
xor
jge
dec
xchg
pop
ljmp
adc
mov
pop
outsb
repz
push
cmpsb
mov
aam
push
pop
hlt
or
imul
push
xor
push
dec
mov
imul
adcl
jl
add
and
loop
or
inc
shlb
int
inc
mov
into
jb
pop
stos
test
cmp
inc
adc
adc
or
push
cs
pop
mov
cmpsl
mov
add
data16
outsl
lods
out
shlb
mov
aam
push
push
js
push
sbb
jl
adc
dec
xchg
sahf
and
add
scas
or
fs
fidivrs
pop
add
or
out
adc
rcrl
mov
insl
rorl
aam
adc
cmp
and
adc
ljmp
jno
ss
loop
mov
insl
dec
and
dec
adc
xor
mov
lret
dec
mov
icebp
inc
es
jecxz
inc
shrb
int
adc
into
scas
iret
sub
pop
xlat
sub
imul
addl
loope
add
imull
cs
and
pop
cld
shrl
sub
movsb
or
repnz
movsl
aam
push
cmc
sbb
dec
mov
std
xchg
sti
cmp
mov
stos
pop
sbb
sbb
arpl
nop
pop
outsb
lret
sub
mov
or
fnsave
xorb
push
push
outsl
xchg
call
mov
ficompl
adc
pop
sub
and
cld
popa
jne
dec
pop
mov
jno
insb
push
jo
push
mov
inc
adc
jo
xchg
stos
mov
lret
mov
add
jns
orb
fsubp
xchg
insl
cwtl
add
or
int
pop
xchg
ret
jno
sbb
cmp
scas
nop
jle
cmp
and
add
xlat
rolb
add
push
ret
or
scas
gs
icebp
add
daa
nop
fildl
aaa
imul
xchg
inc
pop
inc
cld
pop
inc
cwtl
stc
and
jg
mov
insb
jge
jmp
imul
in
mov
lods
and
cs
jb
in
add
pop
inc
xchg
mov
in
adc
stos
push
pop
mov
outsb
jmp
adc
stc
lock
or
adc
inc
sub
leave
hlt
sbb
push
mov
add
js
imulb
add
fnstenv
mov
loope
es
lock
fmull
orl
dec
xchg
push
dec
inc
imul
add
or
sub
adc
out
add
adc
lret
xor
lods
xchg
xor
sbb
push
repz
jno
or
mov
in
popa
loop
xchg
or
push
loop
xchg
stos
addr16
and
lods
pop
xor
jb
cmpl
pusha
sbb
dec
inc
sub
aaa
add
bound
lock
dec
mov
push
movsl
aas
lock
notb
mov
in
shrb
cmp
movsl
push
sub
dec
idivl
dec
xchg
cltd
inc
pop
loope
clc
loop
push
dec
jns
pop
adc
xchg
insl
adc
push
jge
or
or
adc
scas
cld
inc
cmpsb
je
arpl
mov
out
adc
mov
pop
sub
and
xlat
jne
stc
mov
jae
dec
bnd
mov
pop
and
cmpsl
dec
stos
mov
and
or
imul
jl
jbe
pop
jp
cmp
sbb
jg
lret
xchg
adc
in
aaa
enter
mov
adc
sub
out
xchg
mov
adc
push
sbbl
lods
arpl
fisubs
scas
and
imul
mov
jns
bound
mov
mov
scas
imul
dec
push
ds
cmp
inc
in
lahf
mov
cmp
ljmp
jle
mov
fwait
lcall
hlt
xor
popa
pop
das
testb
xor
pop
dec
cmc
int
in
ret
sahf
mov
push
lahf
inc
cs
gs
scas
loope
aas
popf
push
sti
xor
lods
jmp
hlt
cltd
test
fisubrl
aas
fsubr
in
cmp
inc
sub
mov
aad
add
push
ret
pop
push
push
aaa
lret
stos
xor
std
arpl
and
mov
rcr
shll
lock
enter
jg
pop
ja
int3
cmp
cli
sar
scas
outsb
inc
inc
and
cwtl
mov
aas
out
lret
push
enter
push
jb
in
imul
and
loopne
subl
mov
sbbl
mov
rolb
jo
push
adc
cmp
and
out
inc
inc
or
dec
xchg
clc
insl
into
mov
fidivs
pushf
aam
nop
xor
sub
out
adcb
adc
cmpsb
gs
in
jmp
push
std
adc
jle
pushf
shll
mov
mov
mov
popa
cmpsl
mov
bound
cld
les
insb
pushf
push
lcall
or
jnp
and
in
dec
jae
inc
add
push
ljmp
cltd
rcr
sub
jbe
insl
rcr
cmp
xchg
xchg
inc
lcall
pop
cwtl
dec
movsb
mov
dec
gs
enter
lock
fsubrs
pop
mov
push
mov
mov
xor
jno
xchg
mov
jl
xchg
mov
jl
in
sti
lods
in
or
sub
dec
mov
sbb
rol
sbb
sbb
testl
xchg
es
data16
mov
cltd
xchg
add
mov
inc
imul
sub
jns
pop
cmpsb
lods
clc
ljmp
daa
leave
addr16
cmp
pop
inc
inc
push
imul
addr16
pop
call
lret
iret
bound
ficompl
adc
insb
cmpsl
and
ficomps
or
adc
aaa
xor
and
xor
enter
fsubr
mov
lock
sbb
mov
pop
test
or
sbb
test
filds
ds
cld
repz
push
arpl
adcl
jns
data16
frstor
push
push
mov
dec
aad
lahf
and
popf
and
dec
mov
pusha
popf
pop
lds
inc
add
jmp
and
jb
push
dec
dec
push
xor
push
xchg
mov
dec
clc
imul
lret
xchg
div
and
iret
roll
xchg
push
stos
aad
inc
dec
mov
push
inc
add
sbb
inc
jle
cmp
pop
inc
aad
into
jbe
into
and
jno
outsl
dec
into
jb
out
daa
out
and
pop
push
jo
and
adc
mov
sti
add
bound
cmp
mov
jge
adc
mov
in
ss
mov
aad
lahf
ficompl
cwtl
bound
dec
out
je
push
cmpsl
ffreep
mov
imul
pop
xchg
addr16
cmovge
dec
lods
mov
test
jmp
js
dec
loopne
pop
out
sub
mov
imul
mov
cld
lahf
mov
mov
mov
test
test
daa
movsl
leave
mov
xchg
xchg
pop
jmp
ljmp
mov
cmp
lcall
xor
cld
cs
jns
xchg
mov
mov
mov
inc
clc
push
xchg
xchg
test
inc
ja
inc
aad
leave
aas
inc
inc
xchg
and
xor
lcall
lods
cld
xor
popf
add
push
jnp
iret
movsl
aad
fmull
jmp
cmp
push
pop
orb
ds
leave
movsb
cmc
pop
add
inc
xchg
orb
ds
jle
mov
lea
or
pop
xchg
icebp
cmpsl
or
cmp
in
decl
es
jle
push
mov
ds
je
js
sahf
inc
sub
jns
cmp
inc
test
sbb
lahf
test
cld
inc
test
add
addr16
lret
push
jp
push
notl
sbb
hlt
aam
sub
mov
xchg
imul
subl
cmp
cmp
jbe
jecxz
es
or
push
cltd
pop
jecxz
or
in
dec
les
and
rcrl
inc
mov
mov
cmp
or
xchg
pusha
push
cmp
pop
lret
pop
es
mov
into
cmp
xchg
in
rorb
lcall
andl
push
scas
cmp
pop
sub
es
mov
mov
loopne
pop
xlat
adc
hlt
jle
or
xchg
mov
cmp
flds
pop
lea
or
pop
les
sbb
jo
idivb
stos
dec
or
xor
fdivrs
jle
idiv
and
xchg
arpl
inc
jge
mov
sbb
mov
mov
jo
out
mov
push
idiv
push
enter
stc
or
and
jo
es
mov
cwtl
xchg
and
sub
fstenv
push
jl
bound
cltd
sbb
aam
stos
inc
movsl
rol
mov
jmp
adc
pusha
sahf
or
cmp
pop
pop
mov
mov
jns
push
cmp
divb
dec
ss
repnz
sub
sbb
hlt
sbb
sub
push
mov
sbb
cmc
das
push
xchg
dec
jno
adc
lea
movsb
nop
clc
out
loop
subb
in
sbb
jl
loope
sub
pop
mov
sahf
scas
mov
mov
scas
sub
xlat
sub
lods
add
enter
adc
mov
push
faddp
das
repnz
addr16
jo
add
sbb
xchg
rclb
inc
lret
scas
push
cs
jne
leave
cmp
testb
add
into
ds
enter
enter
push
test
loop
call
fsubr
shll
pushf
fistl
dec
xchg
negb
xorl
mov
fs
enter
inc
adc
loop
std
add
test
cmp
pop
mov
imul
jp
rcrb
insl
stos
testb
push
test
adc
cmp
cwtl
movsl
das
jns
add
inc
or
sbb
fbstp
pop
ret
mov
shlb
pop
pop
mov
fcompl
fadd
lret
cmc
mov
mov
sbb
addr16
and
mov
or
inc
inc
lcall
pextrw
mov
imul
test
loop
nop
rcr
fwait
or
popf
scas
loopne
or
jle
fcmovnb
out
xchg
outsb
jmp
mov
enter
sub
inc
sbb
mov
inc
je
stos
sbb
push
adc
popa
and
and
add
push
stos
dec
sub
pop
and
insb
pop
inc
out
subb
add
push
jnp
xor
fsts
and
push
or
jl
test
cs
inc
mov
movq
ret
in
xchg
jnp
scas
xchg
std
push
mov
xchg
jb
sbb
movsl
cmp
in
sbb
pop
xor
adc
adc
mov
xchg
fiadds
or
aad
sarl
sbb
sti
pop
mov
mov
mov
xchg
sub
scas
xchg
pop
repz
sub
out
adc
mov
mov
jns
and
inc
loope
cmpsl
add
insb
push
jno
pusha
test
jnp
out
hlt
jae
nop
fists
shlb
xchg
sub
adc
lods
add
dec
fmuls
fsts
and
lea
clc
scas
lret
imull
dec
aam
adc
jl
push
or
dec
lds
or
std
cmp
lcall
ret
fisubl
rcrl
popa
dec
jb
enter
cmc
in
in
cmp
xlat
jno
add
mov
xchg
les
push
repnz
imul
imul
mov
in
xor
mov
test
lods
mov
stos
cmpsl
dec
add
cmpsl
pop
add
popl
cmp
mov
arpl
in
cmc
cmp
cli
fdivrs
cvtps2pi
xor
in
aad
push
add
mov
in
push
mov
mov
sub
gs
ficompl
jp
lea
mov
lods
and
fimuls
push
sbb
mov
jge
and
push
out
pop
push
or
xor
pop
ljmp
xor
mov
and
add
xor
dec
out
lcall
xchg
loope
test
mov
jo
or
in
cmpsb
das
xchg
mov
stos
adc
mov
cmpsl
xchg
test
push
inc
fadd
aam
lock
cmp
fcoml
xchg
fiadds
out
add
adcl
xlat
xor
fisttpl
testl
bound
cmp
int
pop
sarl
jl
imul
pushf
push
mov
push
ret
pop
pop
ds
pop
mov
dec
shrb
hlt
mov
xchg
jb
sub
xlat
mov
lcall
push
std
hlt
in
sbbb
and
lcall
dec
pop
jnp
iret
xchg
in
int3
cmp
jne
xor
ret
push
fdivrs
xor
mov
div
inc
repz
jle
xchg
imul
jb
test
adc
xor
xor
test
xor
int
mov
inc
sbb
cmpsb
scas
jge
push
xor
mov
outsl
in
sti
pop
jecxz
pop
lds
push
xchg
add
in
stos
insb
lahf
ss
les
jl
fsts
cli
add
xchg
sbb
add
into
fisttpl
shrl
dec
psllq
insl
pop
sbb
jnp
push
pop
mov
mov
pop
pop
or
adc
lahf
xor
je
add
repz
aam
sbb
adc
push
stos
jle
out
mov
out
pushf
add
in
outsb
sub
test
mov
xor
sti
add
push
outsl
cltd
adcw
cmc
pop
lret
mov
mov
adc
inc
fcom
cmp
jb
in
add
out
xchg
cli
xchg
hlt
inc
sti
stos
pop
in
pop
movsl
cli
ret
sbbb
movsl
dec
jge
push
dec
pop
pop
cbtw
cmc
xchg
icebp
loopne
push
popa
imul
cmp
or
pusha
mov
sbb
shll
inc
pop
loopne
nop
adc
std
cmpsb
cld
push
or
xchg
mov
pusha
add
cmpsl
icebp
or
cmpsl
ljmp
cmp
fidivrs
cmc
dec
sbb
mov
adc
xor
add
stos
fildll
xchg
out
movsl
in
fldenv
in
jle
jmp
call
cltd
dec
jp
adc
rcrl
dec
insb
pop
jp
dec
mov
inc
or
das
mov
cmp
mov
xor
mov
int3
sbb
movl
cmp
stos
mov
mov
mov
xchg
and
mov
xchg
cli
bound
movsl
cmpsl
imul
inc
adc
out
dec
test
orb
shr
inc
inc
sbb
pop
dec
jb
dec
dec
push
ret
push
in
out
mov
sub
lcall
cli
cmp
xchg
cmc
cmpl
mov
jnp
leave
int
out
sahf
clc
ret
xor
dec
xor
inc
jno
add
pop
mov
movsl
cmp
xor
clc
sub
outsl
mov
stos
cmp
sub
cmp
jae
cmp
sbb
je
adc
sub
cmc
xchg
xchg
jecxz
test
fnstsw
cli
mov
adcb
jle
and
icebp
out
ret
push
adc
iret
add
mov
fisubrl
add
dec
jmpw
mov
push
loop
out
push
dec
arpl
inc
mov
jl
inc
inc
mov
fs
es
push
je
shrl
pop
mov
xchg
arpl
loopne
dec
ds
and
int3
scas
hlt
hlt
cmp
mov
sbb
push
and
xor
loope
ret
shll
gs
mov
rcr
mov
xchg
xchg
lods
jo
push
push
dec
movsl
dec
xchg
call
lahf
mov
mov
jnp
xor
sti
movzbl
lds
adc
xor
mov
cld
add
xchg
xchg
out
mov
std
dec
repz
push
xchg
clc
or
push
mov
insb
cmp
aad
dec
lock
inc
push
lods
jb
pop
xor
mov
or
lods
inc
add
xor
or
or
lock
test
dec
icebp
push
sbb
pusha
fwait
cmp
es
adc
clc
xchg
lcall
out
pop
add
jmp
xchg
mov
into
sub
mov
stc
mov
jl
out
push
pusha
xor
loopne
push
or
inc
sbb
in
arpl
in
scas
inc
cmp
mov
stos
cmpsl
sub
sub
lods
lret
lods
mov
std
pop
andl
aas
aaa
iret
lds
lock
lcall
stos
pop
insl
xchg
sbb
xor
out
dec
int
mov
pop
sub
push
enter
jg
xchg
enter
scas
mov
lods
mov
jns
sub
inc
rorl
fcomip
jmp
es
jmp
jo
cmpsb
cwtl
add
and
xchg
mov
mov
cmp
xchg
mov
cmc
dec
fwait
and
fimuls
mov
in
jnp
out
repz
and
push
fcompl
add
cmp
test
cmp
mov
xor
mov
ficompl
imul
aaa
repz
mov
pop
dec
mov
rep
sarl
ljmp
jp
lds
adc
lret
adc
shrb
les
xchg
pushf
or
xor
cmp
sti
fisubrl
sbbb
or
jp
cwtl
fcom
inc
in
xchg
inc
pop
cli
push
int
sbb
adc
into
mov
push
sahf
xor
cmp
cmp
pop
cwtl
cmp
pop
mov
stos
mov
xor
jae
sbb
mulb
jge
data16
das
rcl
adc
pop
loope
dec
std
jge
xchg
push
aam
test
cld
cmc
cli
in
mov
cmp
aam
cmpsb
xchg
add
hlt
int3
fs
push
rcrl
jmp
push
cmc
sub
stc
loope
movlps
and
push
or
out
frstor
adc
imul
xchg
push
icebp
mov
test
push
inc
sbb
insb
or
lahf
mov
sub
popf
add
dec
out
test
aas
mov
inc
iretw
addr16
or
and
xchg
adc
mov
sti
push
add
lret
loop
dec
inc
std
shll
aaa
pusha
sub
fists
dec
mov
stos
fs
xchg
push
in
subl
movsl
lods
repz
sub
cmp
inc
pop
outsl
mov
incb
imul
out
arpl
dec
scas
and
xchg
push
insb
jo
jae
pop
sub
leave
incl
pushl
gs
push
mov
xor
cmpb
insl
sbb
call
mov
pop
out
leave
je
sub
hlt
jae
int3
or
loop
fistps
or
jae
and
shlb
add
jmp
outsb
out
jns
sbb
fstpl
fistl
lock
repnz
fisubs
enter
mov
daa
ss
push
out
jne
setno
dec
mov
insl
popa
mov
or
in
push
notl
cs
jge
aad
mov
push
push
test
pop
fstl
inc
mov
mov
mov
inc
xor
jb
xchg
adcl
push
imul
jle
dec
and
inc
dec
jl
out
hlt
push
into
adc
lods
sub
mov
inc
mul
shrl
js
add
fisubl
jo
jo
in
das
jge
pusha
pop
inc
lret
inc
sub
push
sbb
mov
mov
popa
adc
push
movsb
fwait
mov
dec
inc
xchg
sub
fwait
call
subb
cmp
fstps
inc
imul
pop
dec
cs
lock
xor
mov
stc
push
lahf
adc
mov
and
push
inc
out
xchg
out
cmp
add
push
mov
cmpl
pop
movsb
mov
sbb
jb
das
jl
jp
rcl
lcall
cmp
lahf
scas
xor
jl
push
outsl
xor
push
cmp
mov
adc
mov
lahf
cmpsb
movsb
out
test
xor
adc
popa
pop
gs
adc
insl
mov
sbb
sbb
sbb
scas
fldcw
push
sub
mov
mov
incl
in
aas
lock
outsb
jl
mov
ret
out
xchg
adc
pop
lds
xchg
mov
hlt
pop
fistpll
adc
inc
in
xor
sub
xor
sbb
add
pop
popf
fneni(8087
adc
aas
addl
inc
ja
sub
or
push
and
aad
sbb
pop
aam
imulb
add
cld
out
sbb
inc
mov
cmp
xchg
or
andl
dec
imul
outsb
aaa
ljmp
jb
rorb
adc
ret
sbb
sbb
mov
and
add
mov
hlt
scas
lcall
xor
mov
or
lock
sub
std
jle
sbb
cld
inc
stos
fcmovnu
xchg
inc
cs
cwtl
mov
sbb
sbb
in
or
inc
xchg
ficoml
push
and
js
and
or
inc
sub
call
aas
cmpsb
pop
push
fldenv
mov
push
adc
xor
je
cmc
stos
and
xchg
ror
inc
and
xchg
ret
sub
jg
xor
scas
xor
push
stos
dec
scas
pop
data16
in
cld
xor
clc
jae
dec
adc
insb
lea
and
mov
sbb
push
or
cmpsl
add
mov
fildll
lea
fstps
sbb
ret
push
je
inc
lods
sub
xor
xor
push
daa
jnp
insl
mov
aam
shl
mov
ljmp
fsubrl
pop
fs
and
repz
movsb
sbb
mov
int
xor
pop
and
inc
dec
in
in
sub
add
adc
stos
pavgw
xchg
push
inc
pop
shr
sub
cmp
clc
imul
push
and
push
aas
aam
fsts
mov
xor
negb
xlat
mov
adc
sub
add
push
shll
out
addb
inc
pop
inc
test
movsb
jmp
loope
mov
inc
lahf
push
jb
push
aad
js
adc
fadd
popa
push
and
lcall
bsf
lret
mov
ret
jae
scas
and
fldt
aas
or
shll
lds
adc
and
mov
mov
xlat
mov
adc
je
je
pop
jp
mov
xor
lds
cmp
test
cmp
push
push
call
jge
das
enter
add
imul
scas
sub
sbb
arpl
xor
jmp
mov
inc
pop
cmp
jmp
or
out
arpl
fcomps
pop
jge
movsl
icebp
vsubss
mov
jl
aam
stc
outsl
cmp
mov
nop
cmp
xor
pop
sub
mov
cs
jp
push
mov
dec
add
orb
aad
mov
ds
push
pop
dec
loope
pop
cmp
packssdw
push
mov
inc
and
or
adc
fildl
mov
cmp
bound
sbb
push
out
mov
outsb
dec
xor
lds
lcall
cltd
fsubrl
cmp
sbb
jnp
xchg
stc
adc
sub
fldcw
pop
mov
push
negb
imul
cmc
jl
jae
push
xor
bsf
dec
dec
int3
inc
out
std
ss
push
cmp
stos
jmp
pusha
js
dec
lods
loope
lcall
push
cs
sbb
lods
and
lahf
jne
push
or
addr16
mov
daa
push
xchg
mov
mov
sub
pusha
addr16
cmc
das
and
xchg
sbb
sahf
rcr
outsl
test
mov
and
xchg
pop
mov
mov
pop
inc
scas
jnp
fwait
xor
dec
or
pop
nop
fs
add
pop
sahf
inc
loopne
std
cmp
xchg
mov
jnp
cs
push
mov
outsl
rorb
jbe
pushf
mov
jnp
mov
pop
fsubrl
mov
xor
lea
mov
rclb
and
jno
lea
rcrl
lea
mov
jg
repz
mov
push
ja
cmc
pop
aaa
xchg
mov
or
dec
lods
aas
jg
hlt
xchg
cmp
cmp
in
fstps
sbb
mov
push
mov
push
stos
enter
adc
data16
rorb
xchg
mov
or
fcom
pop
push
ficoms
enter
orps
and
dec
push
repnz
cmpl
repz
shrb
or
lea
jecxz
mov
jge
jo
out
mov
dec
pop
cli
push
fidivrs
jae
outsb
push
jbe
inc
js
pop
jl
xchg
mov
jmp
sbb
or
faddl
push
loopne
ret
push
nop
xchg
push
jnp
in
outsb
jb
lret
insb
mov
pop
cmpsb
or
inc
out
leave
loop
stos
jb
outsb
mov
dec
out
adc
push
cmp
sbb
sbb
cmp
jb
mov
cmc
push
loop
stos
repz
xchg
popf
orl
cmp
push
daa
lcall
push
stos
cmp
mov
cld
in
sbb
mov
repnz
shll
mov
mov
dec
cmp
and
xchg
mov
and
les
lahf
jg
int
add
arpl
ret
decl
cwtl
popa
jb
jmp
out
jmp
mov
jecxz
jne
loope
pusha
insb
and
in
fcmovnu
cwtl
out
mov
fidivs
push
js
mov
push
in
sahf
xchg
ror
es
js
mov
lcall
and
arpl
scas
jle
out
xchg
lahf
lcall
ret
insb
jecxz
outsb
cmp
or
sbb
cmp
sbb
sub
fwait
in
cld
sub
adcb
mov
faddp
sbb
push
xchg
mov
mov
jo
jae
sbb
and
dec
mov
cmpsl
addr16
stos
lcall
pop
dec
jns
mov
aam
lahf
lcall
std
scas
sbb
out
mov
jno
pop
imul
add
loope
lret
push
gs
mov
lret
add
shlb
jg
nop
push
fsubrs
loop
sbb
loopne
arpl
jnp
cmp
aas
fisttps
sbb
insb
adc
orb
outsb
lock
mov
scas
mov
push
jo
pop
jae
jg
adc
test
jne
flds
pop
add
lret
cs
popa
es
mov
xor
insl
stos
fdivl
push
addr16
rorl
inc
inc
mov
gs
push
cmpsl
pop
mov
cmpsb
or
push
repz
inc
mov
test
clc
fldl
dec
push
dec
jmp
sbb
stc
aam
add
push
fbstp
mov
xchg
add
cmp
rolb
sub
cltd
punpckldq
or
aas
cmp
repnz
inc
cmp
jmp
mov
jns
jo
popa
inc
xchg
mov
cli
add
bound
sahf
lea
and
in
push
test
pop
push
dec
leave
add
movsl
xor
push
jnp
jmp
ret
std
ja
or
scas
xor
mov
and
mov
test
mov
fiaddl
nop
or
loop
push
push
sti
xor
mov
lea
xor
aad
enter
mov
imul
mov
pop
sub
xchg
ljmp
cmp
pop
call
repnz
movsl
pop
adc
lret
lcall
cmp
pop
cmp
add
push
loope
push
jb
iret
inc
js
push
and
ret
iret
les
test
sub
pop
sbb
mov
adc
lea
dec
xlat
inc
lods
jne
dec
cs
add
xlat
xor
adc
push
cli
ret
jno
add
orl
ljmp
bound
mov
pushf
adcl
mov
lea
dec
fs
jge
push
or
dec
inc
jle
pop
sahf
out
or
xor
mov
xor
cmc
mov
dec
aam
xchg
mov
in
jne
adc
mov
cli
stc
nop
xlat
aam
xchg
inc
rcrl
mov
cmc
nop
aad
jno
test
ds
and
pop
fiadds
fisttpll
out
loope
lret
sub
mov
mov
aam
mov
jmp
movsl
ja
sbb
dec
lods
mov
jns
jmp
bound
fmuls
cmpl
push
popf
outsb
push
push
rorb
mov
xchg
pop
push
add
imul
test
lret
fwait
sbb
das
pushf
aam
outsb
pop
sub
addr16
xchg
nop
popf
add
cmpsb
mov
adc
push
movsb
xchg
jl
jb
sbb
xor
pop
nop
mov
or
dec
int
jl
sub
addr16
adc
test
cwtl
mov
mov
sub
lea
push
imul
push
cmp
ljmp
xchg
mov
jg
repnz
js
push
push
dec
insl
cmp
rcrb
lcall
add
dec
rcrl
xchg
push
push
or
movsl
addb
cltd
cmpsl
add
testl
js
mov
mov
shl
jns
sbbb
mov
shr
mov
push
add
aas
sub
push
adc
mov
sub
ud0
in
jecxz
outsb
cmp
mov
push
ficoml
flds
xchg
sbb
movsl
outsb
jnp
jae
and
lods
shll
das
lock
pop
dec
jo
je
xchg
mov
and
test
mov
adc
add
std
imul
adc
andps
sub
aam
cltd
and
out
inc
ds
mov
or
movb
add
mov
sub
dec
xchg
movsl
leave
jno
sbb
xchg
inc
xchg
outsb
iret
je
mov
testl
aad
out
or
or
xorb
jb
addr16
lret
adc
mov
dec
adc
pop
mov
pop
sti
dec
cld
in
mov
xchg
adc
jnp
lcall
scas
mov
or
adc
je
aam
pop
jae
mov
cmp
mov
les
push
aaa
movsb
xor
imul
push
xchg
xor
popf
sub
mov
fnsave
sub
pop
sub
cwtl
add
mov
mov
lret
adc
loopne
mov
push
inc
stos
test
or
pop
pop
xor
dec
sbb
add
addr16
sbbl
mov
mov
mov
shlb
sbb
sub
test
mov
push
push
adc
jo
sti
fisttpll
mov
loop
push
adc
sbb
js
inc
inc
shlb
stc
add
les
out
adc
push
lods
aad
inc
jnp
loop
aam
push
pop
sahf
inc
into
and
in
jae
cs
fucom
mov
mull
and
add
je
movsb
testb
cmp
jg
xor
and
shr
add
ljmp
jbe
adc
call
pop
ljmp
adc
adc
xor
mov
add
mov
stc
ds
inc
mov
cwtl
mov
testl
sar
filds
in
addr16
lods
add
popf
pusha
cmp
mov
mov
xor
pop
mov
out
cmpsb
pop
dec
cmp
aas
scas
mov
call
ja
imul
and
shrl
movsb
jmp
jns
cmp
insb
or
insl
and
or
and
sub
mov
xchg
xchg
ret
mov
imul
lcall
mov
push
mov
sub
xchg
movb
gs
out
mov
add
or
mov
pushf
push
hlt
and
gs
mov
cs
outsl
xor
jmp
jbe
adc
or
movl
dec
lret
jecxz
das
push
xchg
push
or
push
jp
lret
scas
in
jg
and
sub
das
ret
stos
ds
mov
addr16
in
into
inc
sbb
jp
xor
dec
adc
outsl
sti
jbe
or
add
mov
pushl
int
fisttps
cmp
mov
stos
push
loop
inc
push
sub
repnz
sub
in
xor
or
push
push
loope
sub
flds
adc
xchg
mov
mov
mov
jmp
pushf
js
mov
arpl
add
adc
and
imul
push
das
adc
and
fisttpl
push
push
sub
out
push
stc
add
lock
fldt
dec
push
mov
sbb
fistpl
sbb
mov
jnp
sahf
mov
pushf
cmp
addr16
inc
inc
xchg
pop
and
sarb
mov
sub
mov
fcomip
ret
cld
insl
cmp
jnp
jmp
dec
jno
test
jno
and
push
cmpsl
outsl
test
and
fildl
adc
pop
loope
xchg
push
andb
push
mov
jmp
mov
cmp
loope
popf
addb
inc
push
in
cmp
mov
jb
cs
ret
pop
xchg
flds
mov
mov
mov
or
cmp
lods
adc
out
mov
imul
test
jmp
adcl
or
add
ja
scas
mov
jl
xor
loop
or
mov
arpl
das
into
xchg
jne
jns
icebp
je
arpl
mov
cmp
in
adc
mov
enter
push
or
and
es
mov
add
sub
mov
push
aad
sahf
mov
cmp
ret
push
xor
pop
scas
cwtl
dec
outsl
xor
or
rorl
arpl
cmp
movsb
sahf
push
jmp
or
clc
outsb
or
jns
fwait
cli
repz
loop
mov
xchg
lds
aas
lretw
pop
les
add
popl
mov
pop
out
lods
and
jp
push
or
jecxz
cmc
rcr
sarb
testl
shlb
out
add
jno
insl
sbb
inc
orl
repz
push
data16
add
sbb
stos
je
sub
das
cmpl
sbb
xor
or
lods
xlat
loop
jp
adc
in
fistps
js
inc
push
stos
inc
pop
negb
leave
push
xchg
testl
push
das
dec
add
push
adc
xor
outsb
je
mov
je
call
insb
push
mov
cld
sarb
shlb
sarb
stos
mov
pop
jp
jae,pn
adc
hlt
xor
cmp
adc
cli
add
xchg
out
fcomps
xchg
sbbl
rep
and
enter
cs
adc
aad
jl
lods
jb
lcall
loop
sbbb
leave
test
sub
jmp
aas
lret
sarb
adc
je
mov
cli
loop
dec
enter
fcmovu
mov
and
imul
out
pop
and
pop
mov
and
fidivs
lods
xchg
xor
add
test
push
cmpsb
pop
iret
push
int3
fs
and
pop
cmp
lods
out
iret
scas
lods
sahf
inc
sub
negl
mov
into
mov
aas
std
lds
mov
pop
sbb
gs
fincstp
mov
mov
xlat
inc
mov
add
sub
imul
mov
pop
mov
sbb
and
insl
rcrb
adc
addl
ficoml
adc
insl
bound
push
jae
pop
push
icebp
jbe
aas
bound
and
sub
ja
adc
jnp
pop
ret
xor
out
mov
push
lcall
jp
aas
getsec
rorb
push
movsl
sbb
cmpsl
sahf
add
adc
sbb
mov
test
cmpsb
test
insb
cwtl
mov
xlat
shll
out
adc
imul
mov
fwait
mov
loop
xor
fisttps
loopne
xor
mov
xchg
cmp
jle
or
call
leave
jg
dec
jns
jl
imul
sar
jne
pop
out
fmull
cmp
dec
lock
dec
adc
into
int3
push
push
sub
or
roll
sub
pop
imul
cmp
adc
sbb
cmp
hlt
pop
nop
and
or
cmp
pusha
shll
stos
std
mov
fldt
roll
fidivl
mov
adc
std
andb
cmp
xor
sbb
test
and
leave
rcl
mov
outsb
sbb
in
idivb
loopne
stos
cmpsl
xchg
push
ret
les
sub
dec
and
pop
mov
fildll
adc
nop
jmp
sbbb
xor
xchg
loope
mov
jo
cli
sub
into
leave
loopne
mov
mov
shl
popf
xchg
pop
mov
xchg
sub
adc
stos
mov
imul
incl
lock
inc
std
or
movl
lds
das
sbb
lods
popf
ret
mov
lods
inc
adc
add
mov
and
jl
mov
push
pop
sti
pusha
jecxz
xchg
pop
loope
pop
addb
xor
sbb
pop
aas
testb
jg
dec
xchg
movsl
pop
jns
loop
push
push
data16
jnp
cmp
sbb
xchg
xor
cmp
iret
mov
dec
fld
shlb
call
pop
dec
cwtl
sub
shlb
lret
push
cmp
and
js
push
iret
push
ret
mov
or
mov
loopne
mov
push
add
insl
je
jg
mov
ret
popf
sbbb
or
mov
ss
mov
add
cmp
adc
xchg
inc
jno
push
inc
push
cmc
xor
push
dec
cs
cmp
dec
enter
icebp
push
addr16
popf
scas
jo
sbb
arpl
push
les
adc
push
je
cmp
pop
outsl
fcoms
lret
test
mov
pop
mov
out
fiadds
cmpsb
test
or
mov
push
and
push
sub
sub
sbbl
out
add
popa
xchg
cltd
fisubl
cmpsl
je
stos
aaa
icebp
lods
lock
mov
pop
pop
jnp
int
xchg
jecxz
in
lock
jecxz
fistpll
movsb
scas
or
outsb
aad
and
and
and
cmc
cmp
push
cli
enter
out
cmp
stc
mov
icebp
mov
leave
bnd
adc
scas
pop
aam
dec
and
mov
mov
jecxz
push
sbb
xchg
fmuls
inc
mov
xchg
mov
or
pop
je
sarb
sub
mov
jge
push
mov
into
icebp
cmc
mov
jl
imul
mov
dec
stc
inc
push
mov
mov
mov
or
mov
rcrb
jne
lods
divl
jo
scas
inc
jg
out
xchg
call
in
mov
sbb
dec
or
jmp
jb
adc
cmp
pushf
pusha
add
adc
das
lock
mov
sub
cmpsl
pop
outsl
hlt
pop
adc
or
mov
xchg
jp
fimull
jge
mov
push
fs
pop
bound
enter
imul
cwtl
aas
dec
out
adc
es
mov
in
fidivl
or
mov
je
mov
lods
test
js,pt
jb
jbe
dec
cmp
in
insb
pusha
stos
mov
mov
add
add
sbb
js
in
jp
loopne
cmp
mov
cwtl
sub
jg
dec
cld
sbbl
jp
repz
popf
cs
outsb
mov
push
xchg
insb
fdivs
scas
and
xchg
pop
mov
xor
out
xor
inc
into
sbb
mov
jo
jbe
into
popf
cmpsl
or
into
lret
imul
inc
jb,pn
fidivl
push
lcall
xor
std
push
pop
in
dec
aad
and
les
and
roll
dec
cmp
bound
mulb
out
jg
aam
in
dec
adcl
outsl
movsb
sahf
into
sbb
lds
xor
xchg
inc
insl
adc
loopne
jmp
xchg
or
outsl
xchg
jno
inc
cmpsb
xor
in
jae
and
cmpsl
rolb
dec
cmp
pusha
xchg
cmp
fsts
pop
add
cmpsl
scas
add
dec
mov
mov
ljmp
pop
repnz
cld
xchg
aaa
aas
movsb
jecxz
mull
or
ret
insb
loope
leave
xchg
ja
dec
cmc
sbbb
adc
and
std
sbb
imul
or
mov
shrb
push
pop
je
pop
dec
dec
xor
hlt
push
and
sub
mov
adc
sub
test
fwait
mov
sub
andb
or
push
pop
pop
sbb
xchg
pop
xchg
subb
test
xchg
sub
aad
cmpsl
lahf
pop
hlt
mov
xchg
or
stos
bswap
add
and
shrl
xor
imul
cmp
add
cmpsb
push
dec
xchg
popa
pop
pop
lods
xchg
add
ds
test
mov
and
ret
add
scas
subl
mov
sub
insb
mov
adc
nop
mov
mov
push
clc
jno
and
add
pop
push
adc
gs
mov
push
jo
insl
frstor
es
adc
jmp
outsb
xchg
fcomps
dec
mov
loope
repnz
jg
imul
ficoml
jbe
pop
in
cmp
fsubrl
sub
push
popa
xchg
mov
cltd
addr16
enter
mov
mov
mov
and
dec
fwait
sub
mov
or
ret
std
sbb
add
mov
or
and
enter
and
loope
in
gs
mov
movsl
xchg
inc
ret
sarl
sbb
je
std
shlb
xor
or
xor
cmp
mov
je
imul
jnp
in
enter
pusha
sub
xchg
scas
fidivs
lret
pushf
dec
rcll
and
mov
icebp
adc
sbb
cs
inc
mov
std
ljmp
punpckhwd
push
pusha
jecxz
lock
into
jne
cmc
das
xor
push
dec
pop
movsl
or
mov
pop
bound
sbb
je
call
jl
les
jl
pop
inc
xor
daa
ja
loope
les
add
mov
popa
lods
imul
in
aas
sbb
mov
pop
gs
fs
dec
pop
xlat
ficomps
xchg
sbb
lahf
xchg
hlt
jae
repz
test
xchg
fcmovb
pop
adc
out
and
cmp
stos
andb
repz
sbb
mov
xchg
push
push
pop
jnp
or
xchg
or
add
jnp
imul
loop
xchg
enter
leave
xchg
pop
pop
cmpsl
jl
fmull
ljmp
pusha
fadds
scas
test
sub
adc
daa
lock
mov
test
test
sbb
adc
cmpsb
subb
or
push
enter
ret
add
or
lret
xor
in
dec
jle
cs
fwait
ja
ret
lods
lea
push
jno
lret
ja
adc
mov
roll
xchg
mov
jnp
rcrl
scas
lahf
rcl
pop
mov
mov
leave
jl
xchg
sub
ret
or
outsb
pushf
ljmp
adc
mov
xchg
js
cld
push
rcrb
ret
sub
jo
cmp
cwtl
aaa
sub
xchg
adc
addl
fists
mov
insb
stc
out
jb
lds
imul
adc
mov
sti
out
ret
xchg
pop
xchg
outsl
dec
call
in
sub
and
push
add
js
mov
enter
mov
daa
cmp
or
xorl
pop
mov
mov
sub
and
add
pop
imul
sbb
mov
pop
dec
mov
scas
push
mov
cmpsl
lods
cmpsl
into
gs
push
lret
setb
fwait
jb
popf
out
pop
xchg
pop
pop
in
add
jg
daa
add
and
pop
pop
or
aas
add
xchg
ficoms
adc
out
call
les
fisttpll
add
cmp
lea
fsubl
loop
mov
scas
xchg
lock
inc
in
mov
arpl
not
jle
pop
addb
push
bnd
or
mov
pop
lcall
mov
add
inc
mul
xchg
popaw
push
push
stos
mov
mov
jmp
push
bnd
and
dec
add
mov
xchg
aad
jecxz
pusha
xor
rorb
in
mov
je
ja
mov
pusha
xchg
push
dec
stc
mov
int
jbe
cmc
cmp
bound
popf
mov
mov
pop
push
enter
cmp
outsl
test
mov
shrl
lret
inc
jle
jne
out
and
fstps
jns
push
pop
mov
or
lret
xor
mov
fldenv
push
or
mov
ja
cmpsb
jmp
mov
dec
lds
dec
pop
lea
add
fcompl
push
push
data16
daa
int3
adc
out
or
xchg
jae
jo
dec
inc
scas
pop
cld
jg
xlat
push
popf
mov
mov
jle
lea
fcompl
sub
scas
aam
mov
jl
sbb
push
mov
pop
mov
mov
sub
mov
subl
sbb
imul
rorb
nop
ret
push
fdivrs
mov
mov
adc
call
xchg
mov
movsl
cld
jb
adcb
inc
les
and
pushf
les
cmp
test
xorl
stos
inc
ret
int3
gs
clc
push
mov
imul
movsl
add
movsl
sbbb
rorl
into
push
pop
enter
cli
inc
pop
into
cmc
mov
loop
sti
inc
mov
in
leave
dec
int
mov
ja
mov
and
xchg
cs
inc
sub
cld
mov
in
hlt
mov
das
hlt
lahf
mov
pop
jmp
pop
je
jmp
notl
out
jmp
xchg
sub
les
jle
inc
stc
sbb
ss
daa
test
jbe
mov
jmp
sti
leave
popf
fdivp
mov
addr16
mov
mov
sbb
jmp
stc
cs
jbe
fiaddl
gs
mov
add
call
rorl
pop
xchg
add
sub
in
dec
insb
stos
stos
arpl
pop
out
imul
call
pusha
out
fldt
or
pop
cltd
mov
fsubs
sbb
ljmp
movsb
add
ret
mov
int3
sbb
cmp
pop
adc
into
stc
mov
mov
ds
xor
scas
iret
loop
lea
cld
adc
xor
pusha
addr16
dec
leave
xchg
cmp
imul
shl
xlat
mov
or
repz
dec
add
outsb
aaa
push
mov
adcl
insb
push
sub
adc
aas
std
pop
cmp
leave
popa
dec
inc
pop
sub
lret
dec
jecxz
iret
push
xor
ljmp
sti
cmp
fistpll
mov
or
mov
jns
or
mov
jns
sub
mov
shll
sub
call
push
rcrl
je
jb
mov
imul
outsl
stc
and
mov
scas
bound
aaa
shlb
stc
adc
sbb
sahf
out
lods
cmp
push
sbb
bound
fcoms
fadd
outsl
inc
fs
rcll
inc
mov
fs
std
inc
aaa
cmp
fstl
pop
icebp
mov
dec
xchg
jle
stos
or
jno
outsb
idiv
in
scas
cmc
aam
repz
add
mov
cmp
xchg
cltd
aas
sub
rorb
sti
icebp
lods
dec
inc
scas
outsb
xor
push
mov
cmc
add
dec
loope
fbld
fistl
push
fdiv
imul
mov
ljmp
push
mov
sbb
iret
lret
sti
sbb
das
gs
popf
test
pop
jg
jnp
enter
test
sbb
test
pop
fnstsw
jne
dec
test
in
jbe
cmp
dec
repz
pushf
push
push
sbbb
pop
insl
mov
hlt
push
je
leave
fdivs
adc
ret
mov
mov
sarb
jg
sub
jae
jnp
pop
inc
pop
movsl
push
jnp
dec
inc
jg
lds
insl
adc
icebp
push
stc
inc
xor
push
sub
xlat
psubw
sub
mov
jbe
arpl
dec
dec
lcall
push
mov
mov
xlat
into
inc
nop
dec
xchg
cmp
mov
ja
jge
dec
loopne
shll
pop
inc
bnd
inc
sub
das
add
and
rorb
push
aam
xchg
push
sti
fnstsw
stos
push
popf
mov
cltd
mov
cwtl
cltd
add
test
add
fdivs
add
inc
dec
jmp
movsb
add
xchg
jg
hlt
xchg
lods
das
pop
fwait
cwtl
addl
jge
inc
or
push
add
test
jmp
je
dec
stos
outsb
mov
cld
mov
sbb
sbb
testl
sub
pop
jno
int
int
pushf
mov
cld
add
add
in
stc
hlt
sub
mov
into
aas
jno
gs
push
push
dec
pop
push
bound
xchg
add
cmp
repnz
cli
add
cmp
aas
add
adc
xor
int
lock
dec
pop
ret
pop
mov
xchg
cs
and
dec
xchg
out
adc
mov
icebp
jo
arpl
nop
xchg
sbb
inc
and
xchg
adc
xchg
push
sbb
xchg
data16
test
mov
popf
cltd
jp
mov
and
mov
or
dec
mov
pop
incl
outsl
jae
pop
movsl
adc
loop
xor
push
js
ja
jmp
add
cld
aaa
mov
jl
mov
out
xlat
sbb
xor
pop
icebp
sahf
jnp
pop
dec
iret
push
shr
add
jle
dec
mov
sahf
nop
dec
rcrb
je
iret
in
mov
jns
push
rcr
xor
push
xor
push
cld
cmpsl
cmpsl
xchg
pop
xor
arpl
mov
push
hlt
out
mov
pop
imul
in
cmpsl
xchg
jne
push
iret
or
mov
xchg
push
jmp
push
lret
and
mov
mov
imul
fsubrp
stos
cmp
jo
ss
arpl
popa
dec
mov
sub
popf
ret
inc
js
stos
add
fimuls
arpl
mov
clc
xor
cwtl
jle
test
ss
pop
loopne
repz
jmp
adc
in
xchg
xor
in
pop
adc
repnz
push
jae
idivl
lods
add
jb
pop
ret
mov
xchg
call
jecxz
xor
push
inc
mov
push
fwait
shlb
loopne
jl
xor
aas
jp
sbb
popf
and
aas
xchg
or
imul
jmp
dec
jmp
insl
ret
out
stos
mov
call
popa
test
cmp
mov
insl
lods
add
cs
mov
mov
in
icebp
into
dec
rcrb
mov
mov
test
data16
test
adc
inc
and
pop
push
cmc
test
les
pop
jno
xcrypt-ctr
cmpsl
ficompl
adc
cmp
cmp
imul
inc
mov
std
mov
cmp
loope
fs
inc
push
jg
lods
sub
xchg
mov
in
mov
push
push
and
in
scas
cld
lods
dec
mov
stos
fidivl
aam
mov
xor
dec
sub
jmp
imul
inc
mov
movsl
dec
out
xor
stos
mov
data16
int3
add
jno
pop
lcall
adc
push
ljmp
cmc
cmp
in
sahf
dec
and
fld
out
or
adc
or
jp
popf
jecxz
jp
repnz
pop
mov
orb
test
xchg
cmp
aaa
bound
aam
jbe
xchg
cmpsl
jbe
andl
test
add
loopne
les
cmp
int
cmp
jbe
icebp
mov
repnz
sbb
les
movsb
mov
and
xchg
mov
pop
data16
add
sbb
push
stos
cmp
lods
xchg
inc
cs
sahf
add
xchg
jle
or
pop
push
scas
aad
add
mov
push
dec
push
in
push
out
inc
cmp
sti
xchg
pop
je
lcall
das
repz
aad
sub
repnz
xor
iret
shl
dec
js
out
push
js
mov
push
xor
cs
ud1
je
push
ja
add
cltd
mov
cmp
cld
mov
mov
push
es
jns
ljmp
xor
ret
mov
jo
jge
pop
push
inc
dec
push
int
cmc
or
enter
push
jne
out
pop
das
adc
mov
cmp
js
inc
inc
arpl
mov
pop
add
push
xor
mov
inc
cmpsb
testl
cltd
pop
cmc
fsubl
inc
call
dec
out
adc
aas
jno
mov
mov
jno
push
mov
mov
scas
xchg
sbb
jl
cld
xor
daa
xchg
repnz
fcmovb
leave
mov
and
out
xchg
mov
pop
ret
jno
fs
cwtl
inc
lods
into
push
cmpb
in
sub
and
or
test
pop
sub
jb
out
mov
lods
movb
cmpsl
sahf
add
in
adc
sub
lret
mov
fwait
repnz
mov
imul
arpl
sahf
daa
sbb
addl
clc
push
xchg
es
dec
jmp
ficoms
scas
push
and
xor
int3
pop
mov
lcall
loop
inc
and
jecxz
push
cmp
shll
bound
fnsave
xchg
fs
xchg
lret
dec
jl
loope
ja
adc
sbb
xchg
sbb
sbb
sbb
icebp
sub
insb
mov
test
arpl
pop
add
loopne
mov
arpl
in
fwait
add
add
sbb
or
test
popf
jae
adc
loopw
xchg
fsts
mov
ret
dec
push
out
ret
mov
test
add
sbb
es
push
sub
dec
fucom
mov
push
jmp
adc
into
stos
mov
fsubl
loopne
adc
sbb
jae
add
add
fstps
outsl
push
les
shl
dec
inc
int
cld
fcomip
mov
and
stc
or
jns
outsl
sub
mov
and
out
imulb
mov
ss
fimuls
pusha
sbb
xchg
sub
cli
jb
xchg
xor
clc
es
adc
les
jne
pop
nop
jb
and
xor
inc
xchg
cmp
testb
xor
aad
adc
and
jnp
push
cmp
lock
in
lret
aas
shll
and
out
add
add
popa
cmp
mov
shrl
pop
popf
mov
jnp
gs
leave
push
or
xchg
cltd
enter
aas
sahf
xor
xor
fs
mov
or
test
icebp
inc
and
loopne
fisubrs
mov
insb
mov
mov
mov
loop
imul
in
and
mov
jle
jge
int
repz
or
or
mov
stos
push
sahf
cmp
jb
das
cmpsl
mov
sub
xchg
insl
stos
push
pop
sbb
jmp
or
inc
clc
nop
push
sub
scas
call
loope
dec
xor
mov
dec
cmp
pop
pop
sbb
aas
sahf
pushf
and
mov
pushf
adc
ljmp
or
and
jne,pn
lahf
dec
lret
sahf
nop
and
fisttpl
cmp
adc
repnz
loop
inc
lcall
test
mov
aam
je
inc
les
jge
lret
xor
pop
out
jle
add
xchg
xchg
int
fisubs
out
mov
mov
cmp
sbb
arpl
dec
incb
clc
clc
cmp
cmpsl
negl
xchg
mov
add
xor
loope
mov
insb
push
test
leave
dec
arpl
les
outsl
or
cmp
insb
fidivrl
push
in
sbb
mov
mov
cwtl
pop
in
outsb
sub
lret
jp
push
mov
lret
test
andb
hlt
mov
test
or
pop
pusha
mov
add
loopne
sbb
test
popaw
lcall
xchg
push
mov
popf
pop
pop
cmp
jnp
adc
dec
je
rorb
insb
aaa
lret
cmp
lcall
jne
cltd
pushf
dec
int
cmpsb
push
shrl
pop
mov
cld
out
mov
xchg
ret
adc
das
xor
and
xchg
inc
inc
sar
arpl
push
jne
adc
stos
adc
xor
mov
rcr
pop
insb
xor
jno
popf
sub
inc
movb
mov
loope
repz
ljmp
inc
sub
das
sbb
push
adc
adcl
xorl
pop
lret
push
cli
shll
lcall
jge
jmp
cli
mov
jmp
arpl
mov
xchg
xchg
sbb
xchg
shrl
scas
mov
add
adc
mov
xor
xchg
mov
movsl
xchg
mov
fcoml
inc
mov
push
cmc
pop
and
xchg
mov
xchg
cld
arpl
out
test
sbb
adc
add
push
xlat
sub
test
mov
and
movsl
push
inc
cmp
push
pushf
imul
dec
lods
pop
and
popf
and
stc
sbb
inc
cltd
push
dec
push
sub
test
mov
out
lret
mov
pop
jmp
xor
xlat
fcomps
in
data16
fdivrs
push
in
out
jge
adc
cmp
decb
lret
pushf
mov
xchg
fdivrs
or
sbb
dec
cmp
ja
lods
sub
roll
inc
xlat
mov
xlat
cmp
sub
adc
inc
std
xchg
aas
out
leave
jns
jns
lods
dec
lock
out
repnz
ljmp
cwtl
add
dec
es
ret
arpl
fdivrl
sub
inc
sti
push
inc
dec
loopne
adcl
add
xchg
push
addr16
std
out
lcall
sbb
or
push
test
xchg
mov
push
cmp
call
lret
lock
mov
loope
pushf
lahf
dec
sbb
and
mov
in
ds
add
cli
int
addr16
sti
and
mov
pusha
mov
dec
loop
cmp
cmp
jg
xchg
mov
pop
jg
lahf
dec
fistps
sbb
lea
fiadds
jecxz
into
scas
int3
lret
pop
scas
mov
bound
mov
push
push
mov
mov
cmpsl
xchg
jno
fcoms
or
pop
retw
bound
or
aas
mov
dec
push
and
shlb
xchg
out
insb
loop
add
daa
cmp
fcoml
stc
stc
js
es
cmp
mov
ja
or
mov
cmp
dec
std
outsb
or
lods
add
ja
xchg
jg
jle
cmp
test
jecxz
add
sub
mov
mov
out
cld
aam
jno
push
popa
mov
lods
je
jecxz
mov
or
fcomi
in
test
push
pop
xor
inc
xchg
loope
push
jl,pt
and
sbb
sbb
push
dec
sub
into
cli
sbb
xchg
in
push
lds
inc
shll
mov
mov
in
jns
scas
push
sub
xchg
push
lods
ficompl
aad
pop
cmc
cwtl
cld
mov
shrb
ret
lret
pop
sbb
mov
fisubrl
mov
pop
add
out
fsubl
pop
mov
cmp
or
mov
fistl
mov
test
outsb
outsl
cmp
sub
jbe
jb
outsl
int3
in
ret
jmp
and
xor
xorl
js
inc
lcall
dec
pop
sbb
fisttps
pop
push
je
mov
xchg
jae
jns
add
in
mov
dec
mov
jno
sbb
push
jmp
push
dec
dec
cwtl
mov
mov
ds
or
loopne
inc
inc
lock
inc
lods
cmp
sub
loop
dec
inc
mov
dec
and
cli
ficompl
xchg
es
arpl
ret
push
sbb
jp
nop
fmuls
inc
or
xchg
cmc
or
les
mov
test
push
cmp
lods
movsl
int3
imul
shll
inc
scas
dec
cmpl
cmp
cmp
cmp
imul
and
ja
rorb
or
or
and
gs
mull
mov
cmp
js
insb
ss
push
loopne
icebp
test
cltd
dec
lea
dec
jns
sbb
mov
mov
shl
movsb
movsl
and
xchg
mov
xor
call
dec
xchg
sub
push
jl
mov
xor
ret
test
dec
cld
lock
dec
aam
sub
bnd
lret
mov
call
insb
mov
movsb
mov
jge
mov
loope
pop
std
mov
leave
mov
dec
add
repnz
cmc
dec
loop
pop
jmp
ficoms
call
not
fidivs
sub
xchg
rcrb
ja
aad
fldt
out
cwtl
dec
lock
das
sub
jecxz
mov
push
push
rcrb
and
sub
push
cmpsl
dec
ss
dec
ret
inc
xchg
add
jo,pn
and
xchg
lea
out
mov
cmp
jmp
insl
lds
xchg
dec
and
inc
jecxz
and
pop
add
adc
mov
bound
sub
push
lahf
dec
scas
or
pop
jp
int
frstor
leave
ss
inc
sbb
and
mov
loopne
shrl
dec
sub
leave
dec
cmp
outsl
pop
mov
in
out
mov
insb
les
loop
cmpsb
pop
imul
xchg
aad
or
mov
mov
xor
add
gs
mov
lret
scas
or
fsubrl
or
jo
adc
aaa
sub
push
sahf
out
cmpsb
je
pop
mov
lret
cmp
push
aad
lahf
cmp
fidivrs
xchg
mov
mov
or
adc
inc
jo
pop
stos
pushf
mov
test
and
bound
inc
or
lds
cmp
lret
rclb
push
cmc
or
test
xchg
or
push
pop
mov
shlb
xor
mov
push
push
fwait
xchg
sub
mov
das
push
mov
cwtl
mov
nop
push
or
mov
movsl
in
insl
jle
or
and
stos
xor
inc
mov
lods
sub
shrl
leave
pop
sub
fsubl
pop
xchg
adc
pop
mov
movsl
in
popf
jp
mov
mov
mul
xchg
cmpsb
mov
out
inc
jbe
out
aam
pop
sbb
pop
cli
sti
pop
sbb
nop
inc
pop
and
cmpsl
or
xchg
adc
or
xchg
repnz
sub
mov
dec
nop
or
lock
ror
mov
adc
out
inc
inc
mov
add
push
push
cmp
icebp
repz
adc
loopne
sbb
test
not
cmpsb
fldcw
das
loop
hlt
sbb
or
cmpsb
aaa
fsubrs
inc
cmpps
jnp
addr16
sub
testl
gs
push
ret
sub
clc
or
shlb
xor
aam
test
push
cld
leave
and
ljmp
clc
clc
lock
stos
push
sub
xchg
jmp
xchg
dec
mov
and
pushf
cmp
or
outsb
lea
xor
daa
mov
and
cmp
add
pop
fsubrl
shl
iret
mov
ret
movbe
loop
mov
in
stc
lret
repnz
xchg
mov
outsl
and
pop
fisubs
pop
ss
jns
call
cli
in
and
jmp
push
xchg
rclb
hlt
cmp
aad
mov
lret
pop
pop
jns
fcomps
pop
data16
mov
xor
lds
gs
add
es
push
ljmp
mov
sub
xor
in
sbb
fisubs
mov
sub
ljmp
add
xor
popf
inc
fs
pop
rol
shlb
add
in
cmc
xor
pop
aaa
adc
ljmp
sti
leave
arpl
in
add
xchg
xlat
out
mov
loope
and
pop
sbb
dec
arpl
jne
movb
push
test
pop
les
cli
jbe
dec
leave
stos
jb
add
add
pop
xor
fucom
mov
jbe
unpcklps
xor
scas
imul
jmp
movsl
add
js
fildll
mov
push
push
inc
jb
cmpsb
pop
inc
in
adc
jmp
cld
arpl
rclb
xchg
jl
xchg
jge
sbb
cmp
xlat
je
adc
add
xorb
call
dec
or
fmulp
push
arpl
popf
aam
add
sub
clc
mov
jb
jl
leave
jb
jae
cmp
and
lds
js
mov
xchg
mov
lcall
add
or
cmpsb
sbb
cmp
sub
std
mov
mov
faddl
imul
daa
lret
stc
mov
shlb
cmpsl
adc
je
ja
jo
pop
lea
pop
sbb
dec
push
xchg
je
loopne
xchg
mov
push
mov
mov
pop
insl
sti
fstl
fnstsw
stos
lret
cs
push
outsl
idivl
int3
mov
das
mov
arpl
or
sub
and
pop
inc
sub
nop
std
repnz
xchg
out
push
sub
mov
adc
mov
xchg
incl
bound
scas
fsubl
xor
sbb
pop
sbb
pop
mov
stos
push
push
xchg
mov
ds
add
bound
in
fwait
test
add
xor
and
pop
xor
cwtl
mov
shlb
icebp
pop
call
insl
mov
mov
cmp
adc
xchg
jl
scas
ret
push
lods
cwtl
out
cmp
pop
xchg
clc
nop
inc
int3
cmpsb
jge
pop
jg
sub
enter
scas
mov
fistpll
cwtl
fidivrl
and
jg
or
decb
data16
mov
icebp
xor
icebp
cmpsl
jle
pop
jge
add
sub
xchg
add
and
sahf
sbb
out
mov
xlat
cmp
outsb
test
out
xor
adc
loopne
sti
test
adc
jmp
xchg
and
jae
les
add
push
cld
xlat
sbb
shr
mov
add
dec
icebp
mov
cs
cmpsb
inc
test
add
and
outsb
cvtps2pd
sub
pop
out
pop
imul
fstpt
enter
adc
pop
inc
and
gs
add
jnp
jns
jns
mov
push
idivb
mov
xchg
addr16
sbb
fdivl
stc
and
inc
inc
add
clc
dec
add
out
mov
and
cmc
in
jle
lock
dec
push
push
out
mov
mov
in
xchg
js
scas
sbb
nop
jmp
aad
lea
adc
les
jg
jmp
mov
mov
cmpsb
fs
out
or
add
sub
insb
in
cmc
inc
push
pushw
xchg
lods
in
scas
into
clc
and
outsb
dec
jo
leave
inc
dec
mov
cmp
stos
jge
lock
ret
push
fstps
hlt
jbe
xchg
cmpsb
mov
jne
pop
lds
pushf
push
mov
or
mov
adc
or
and
les
dec
mov
sub
sar
and
jp
faddp
gs
xlat
aam
jmp
lods
xchg
mov
lahf
sub
and
daa
dec
add
pop
lret
push
arpl
rclb
testl
cmc
adc
pop
pop
cld
jnp
outsb
cs
fnsave
repz
fsts
or
loopne
add
cld
inc
popa
fs
sbb
sub
jge
adc
pop
push
sub
push
push
loope
and
mov
jb
mov
lret
lret
pop
xlat
jb
adc
lods
ret
cmp
addb
subb
aam
aas
dec
hlt
or
xchg
out
repnz
out
adc
popa
jmp
inc
int
jae
push
jecxz
imul
push
inc
xchg
shrl
sbb
jle
lcall
dec
psllq
das
and
lea
test
push
mov
aas
fwait
out
xor
repnz
cmc
imul
in
jle
xchg
in
or
bound
sub
test
lea
add
push
push
jbe
dec
test
and
lods
loopne
add
mov
or
imul
cmp
pop
inc
repz
les
xchg
lret
cmp
push
add
lods
ljmp
inc
mov
sub
inc
xor
repnz
mov
xchg
mov
cmp
pop
into
mov
xorb
xor
fldl
test
aad
dec
outsl
jno
dec
orb
dec
jmp
dec
mov
test
inc
arpl
jecxz
shlb
inc
jnp
popf
add
outsl
je
mov
les
filds
movsl
int3
sbb
dec
pop
jae
arpl
dec
sbb
sub
add
mov
rcr
mov
mov
ffreep
pop
ret
mov
dec
sti
js
pop
add
adc
adc
icebp
jb
pushf
jg
pusha
insl
repnz
xor
outsl
xchg
insl
add
jle
fadds
cmp
inc
push
mov
inc
addr16
adc
cld
xor
pop
popf
scas
xchg
jecxz
rorb
lea
enter
outsb
clc
xor
or
xchg
stos
dec
lock
shrb
inc
sub
cmp
ret
and
mov
test
aad
fisubs
jno
mov
fdivl
sbb
sbb
scas
xor
cmp
out
fsubl
adc
xchg
aad
inc
mov
push
sbb
push
aaa
fldl
jns
loope
xchg
jmp
imul
scas
dec
jne
adc
int
into
mov
in
mov
call
xchg
repz
ret
dec
sub
lods
cmc
cmp
je
jp
adc
mov
fwait
add
jp
push
sarl
mov
es
test
push
pop
outsl
out
ja
xchg
ss
mov
imul
dec
in
insb
addr16
roll
dec
andb
dec
mov
pop
xchg
xchg
dec
mov
sub
in
or
cmp
and
in
lea
xchg
inc
and
or
push
mov
inc
mov
xchg
push
dec
stos
mov
push
std
outsb
rcrl
stos
mov
mov
ret
lods
xlat
in
push
mov
mov
hlt
mov
mull
adc
and
sbb
movsb
orb
sahf
cmpsb
sbb
jmp
fisttpl
ret
cwtl
ljmp
out
aaa
loop
mov
or
pop
shrb
clc
pop
test
adc
push
cmpsb
xchg
xchg
jne
push
dec
and
je
sbb
mov
xchg
cld
loope
outsb
inc
jge
sbb
jnp
pop
or
dec
repnz
roll
rcrl
out
imul
xchg
cmp
mov
test
lock
call
jns
popf
shl
and
jae
inc
fwait
stos
mov
ljmp
lahf
int3
daa
popa
jmp
les
das
push
add
mov
sub
pushf
inc
inc
jle
adc
inc
jo
xchg
inc
mov
cli
addr16
or
mov
xchg
mov
adc
sub
dec
pop
inc
jecxz
outsl
sub
add
rcrl
push
xor
fisubs
test
stos
sbb
adc
sbb
xchg
in
repnz
pushf
sub
aad
push
ret
hlt
fistpl
fnstenv
sub
fdivs
cmpsb
pop
jns
jo
xchg
mov
out
cmp
outsl
pop
loopne
dec
out
cld
pop
repnz
sub
or
or
jb
dec
dec
out
push
jp
or
dec
arpl
inc
push
repnz
and
push
sub
or
adc
xor
jmp
shlb
push
pop
mov
mov
xorps
cmp
xchg
add
fnsave
lret
sub
mov
je
loope
pop
movsb
or
cmp
jb
pop
fadds
add
fsubrs
frstor
push
lea
pop
in
jl
pop
xchg
ljmp
xor
push
inc
push
add
sahf
xchg
jge
xchg
ret
fadd
jo
es
cmpl
push
loopne
out
out
cmp
jg
repz
frstor
inc
mov
sbb
movsb
cmpsb
scas
leave
leave
inc
fdivl
inc
sub
data16
xor
ljmp
add
pop
hlt
and
das
sbb
cmp
xchg
roll
jbe
movsb
or
repnz
push
xor
cs
cs
sbb
cmp
sub
movsb
aam
fisubrl
push
shlb
ss
pop
pop
cmpsb
mov
daa
cmp
add
lcall
push
fwait
mov
xchg
jp
sub
add
outsl
xor
mov
cmp
inc
enter
pop
dec
mov
testb
push
dec
or
pop
and
jns
enter
inc
imull
jle
js
movzwl
mov
push
and
pop
scas
cmp
sub
flds
sub
adc
mov
pop
pop
movsl
adc
dec
pop
push
fiadds
ret
shrl
outsl
icebp
jmp
mov
push
leave
sbb
sbb
decl
jne
test
in
mov
mov
dec
jecxz
cs
repz
movsb
pop
or
mov
rcrb
push
ss
or
xchg
sub
in
push
stos
push
mov
mov
bound
out
dec
jns
cmpsb
sbb
clc
daa
pop
jno
rorb
mov
aas
mov
add
aam
out
cltd
mov
dec
xchg
sbbl
pop
sbb
and
sub
cwtl
cld
and
sbb
mov
sub
in
sub
enter
lods
outsl
adc
and
xchg
nop
mov
aas
stos
sbb
cld
daa
mov
divl
mov
scas
data16
jnp
pusha
sub
stos
sahf
inc
sub
push
shrl
lahf
dec
fadds
bound
pop
push
cmp
adc
mov
add
ret
cld
and
addl
pushf
ljmp
xchg
in
cmp
push
cmp
sub
jmp
add
repz
int3
sbb
das
testl
lods
sbb
sarb
lods
call
lock
mov
arpl
push
xor
inc
and
mov
fbld
std
fidivs
jno
push
rol
sbb
jl
push
cmp
jbe
adc
loopne
vpmovsdb
bnd
and
mov
and
push
pop
rcll
in
inc
fisttps
in
push
es
les
inc
xor
hlt
pusha
rcrl
cmp
cmp
jmp
add
sub
mov
inc
mov
cmp
call
add
mov
out
sub
push
add
fwait
mov
ja
out
lods
add
jp
movsb
add
popa
push
xor
out
and
lds
iret
mov
xorb
adc
incb
ja
mov
imul
cmp
lret
jbe
and
xchg
xchg
cmp
aas
push
sbb
in
xchg
xor
fucom
enter
and
aas
mov
xor
push
add
dec
adc
ljmp
loop
push
mov
cmp
mov
and
inc
fsubl
inc
dec
adcl
xchg
rcll
push
push
gs
loop
into
imul
sbb
leave
jmp
test
cmp
and
test
or
pop
scas
xchg
stos
cltd
stos
mov
mov
lods
lods
jge
nop
lahf
mov
jns
xchg
sub
not
or
push
inc
bound
cwtl
sbb
inc
jns
daa
add
sahf
jae
rolb
cltd
aas
subl
test
push
sub
rcr
sub
mov
stos
adc
mov
add
fidivl
push
dec
push
sbbl
dec
xchg
and
lret
mov
dec
xchg
mov
xchg
pop
xchg
mov
in
or
subl
lcall
shlb
and
rep
stos
adc
cwtl
call
mov
xor
push
mov
pop
xchg
pop
in
xchg
mov
jp
iret
add
adc
popa
dec
dec
dec
xchg
psraw
or
sbb
adc
sbb
xlat
pop
add
lods
outsb
fcoms
xchg
pop
cs
out
or
aaa
mov
adc
inc
jae
lret
pop
cmc
inc
push
ret
xchg
bnd
pop
adc
push
js
in
sbb
je
mov
dec
in
adc
popf
int3
clc
lea
dec
fstpt
dec
sbb
jmp
pop
lret
mov
or
out
test
jle
or
mov
and
mov
mov
jmp
sbb
rolb
clc
sub
je
test
ds
mov
outsl
ja
mov
xorl
cmp
stc
test
push
mov
bound
test
gs
or
push
mov
lock
test
repnz
dec
push
outsb
stos
pop
stc
sti
popa
imul
orl
xchg
in
cwtl
jnp
out
pop
cmp
loopne
jp
mov
mov
adc
mov
adcl
xchg
outsl
inc
and
adc
sbb
loope
xchg
scas
push
leave
push
sbb
hlt
data16
cmp
js
cmp
lcall
inc
stos
jecxz
cmp
push
mov
scas
sub
cmpsl
adc
aam
shlb
mov
in
pop
sbb
test
ljmp
pop
xor
add
test
out
push
nop
add
or
popf
shlb
daa
cmp
cmp
sbb
lods
pop
cmp
dec
cmp
mov
inc
xchg
mov
cwtl
mov
call
xchg
jb
and
popa
testb
add
cli
jne
scas
or
leave
xor
mov
lds
jg
dec
pop
jecxz
imul
outsl
xlat
aam
mov
and
xchg
pop
ja
add
jge
inc
loopne
add
xor
inc
sub
and
jbe
fwait
jp
fsubrs
out
xchg
fidivrl
lahf
ljmp
push
aas
roll
nop
adc
push
sbb
sub
pop
sar
lea
push
inc
gs
pop
ficoms
jp
sbb
stc
sbb
out
mov
movsb
pop
pop
call
inc
fsubrl
sbbb
jp
vpshufhw
imul
data16
cmc
pop
bound
push
in
aam
scas
sbb
std
movsb
inc
insb
xchg
stc
push
mov
cmp
push
sub
in
lds
jne
fisubrl
shr
sub
and
pop
and
dec
gs
outsl
push
subl
xor
mov
sarl
stc
xor
ret
subl
add
dec
or
or
jecxz
testl
xor
test
inc
push
pop
or
movsl
aad
push
dec
push
xchg
in
shrb
mov
jg
mov
mov
iret
lret
pusha
adc
push
xlat
aam
pop
xchg
lret
in
pop
fidivrs
inc
daa
pop
bnd
stos
or
mov
imul
arpl
into
ret
shll
push
mov
ret
std
and
jbe
cwtl
pop
iret
jnp
test
push
pop
mov
jp
adc
mov
imul
arpl
andb
jo
repz
std
loopne
cld
inc
jne
fstpt
test
push
push
lock
inc
mov
mov
mov
pop
sbb
pushf
mov
in
sbb
mov
mov
inc
fldenv
ret
add
pop
jbe
daa
sbb
popf
hlt
popf
pusha
xchg
arpl
and
sbb
dec
cs
and
mov
mov
push
add
sbbb
mov
jnp
mov
cmpsl
ficompl
dec
out
mov
cli
and
dec
stos
cmpsl
jmp
dec
xchg
std
pop
dec
lock
outsl
dec
lea
out
jo
xchg
push
push
adc
dec
cmpb
sub
clc
mov
sub
push
cmpsb
push
mov
stos
sub
cmpl
adc
aas
out
add
sub
adc
out
std
or
arpl
push
adc
int
pop
adc
xor
or
add
lods
scas
dec
sbb
stos
pop
cld
xchg
sub
mov
ds
ds
stc
movsb
gs
movsb
outsl
stc
xchg
cmpsl
jge
push
addr16
sub
lea
test
ret
scas
xchg
sub
rcl
into
jge
cs
jbe
jnp
cltd
and
fcoml
push
sarb
xor
out
sbb
fisttps
lods
call
mov
dec
and
dec
add
mov
movsb
mov
xor
pop
imul
in
in
jecxz
adc
add
jbe
out
popa
xor
int3
pop
jp
std
pop
rclb
fisubrl
jl,pt
les
or
xor
loopne
paddb
push
xor
inc
jg
jne
int
outsb
mov
stos
xchg
cmp
addr16
aaa
push
mov
push
mov
mov
sbb
setp
jge
jb
xchg
fs
pop
out
arpl
movsl
jne
mov
enter
jmp
push
fidivl
xor
and
mov
dec
push
xchg
jb
add
dec
mov
jb
cli
xchg
xchg
int3
stc
lods
xchg
jbe
mov
sbb
mov
xchg
mov
sbbb
pop
xor
pop
adcb
movsb
fisubs
mov
and
or
xchg
aas
out
xchg
pop
cs
stos
push
clc
adc
and
mov
sub
cmp
aaa
pop
jle
inc
inc
scas
xor
pop
in
sub
push
mov
popa
pop
pop
cmpsl
jecxz
nop
fiadds
clc
xchg
adc
test
and
adc
add
push
sub
popa
lahf
cmp
inc
mov
dec
mov
cmp
js
or
jmp
jbe
std
mov
repnz
and
lss
fwait
jno
jle
dec
xchg
inc
and
in
cwtl
xchg
mov
inc
les
mov
idivl
fstl
jne
xchg
and
testl
and
xchg
inc
movsb
add
push
dec
sub
std
pop
or
leave
cwtl
push
push
jbe
xchg
out
in
pop
jmp
inc
test
rorb
movsb
popf
mov
dec
daa
cs
adc
push
inc
nop
xchg
xlat
outsb
adc
out
add
test
dec
cmp
mov
mov
hlt
daa
jno
bound
push
add
adc
mov
sbb
xchg
push
inc
ficomps
xchg
xchg
into
loopne
mov
repnz
data16
add
pushf
aaa
add
out
out
ss
mov
lahf
fcomps
pusha
xor
cmp
inc
mov
xchg
aam
ds
xchg
sbb
mov
cmp
xor
cmp
in
push
cmpsb
inc
out
lret
hlt
jg
adc
xor
jge
mov
imul
loop
ret
test
mov
mov
mov
clc
xchg
cmp
push
rorl
xor
jg
xor
js
mov
and
push
adc
idiv
and
out
and
jns
sar
adc
cwtl
test
jnp
inc
mov
test
loop
pusha
mov
mov
inc
aad
add
mov
pop
sub
jbe
pop
jne
icebp
adc
ret
sbb
scas
repnz
add
hlt
cmp
push
shlb
jge
pop
mov
push
and
mov
lret
xor
out
aas
and
out
faddl
into
push
clc
fidivrl
std
jnp
sbb
mov
jecxz
xor
add
jo
xlat
rsqrtps
or
sbb
adc
shrl
jnp
dec
fstpt
int3
out
imul
out
mov
adc
es
outsl
es
mov
test
mov
and
mov
aaa
ret
ret
repnz
bound
and
dec
dec
and
roll
leave
sti
push
outsb
ljmp
xor
dec
pop
mov
xchg
sub
sub
call
mov
adc
lods
mov
mov
or
aam
xchg
andl
cli
sbb
pop
xchg
imul
hlt
adc
imul
mov
cmp
repz
in
pop
in
repz
adc
test
and
loop
cmc
sbb
das
out
gs
hlt
or
in
ja
sub
mov
and
notl
icebp
lcall
and
cmpsl
fsts
jno
dec
or
add
jae
test
int3
sahf
sbb
orb
sub
mulb
xor
xor
mov
sub
jno
fcmovbe
mov
cmp
jmp
push
adcb
jmp
pop
les
mov
movsl
sbb
xchg
pop
xor
popa
jbe
push
jecxz
test
aad
and
mov
lods
int
jp
lods
iret
fwait
leave
jns
push
push
or
aam
jg
fildl
add
fs
jmp
jb
fwait
in
and
pop
fsts
or
adc
cmp
lods
push
sbb
sub
and
xchg
sti
lret
out
test
leave
fimuls
push
jb
jmp
hlt
cmp
call
xchg
and
xchg
dec
in
jns
mov
sbbb
sbb
add
std
imul
fstl
pop
stc
pushf
cwtl
xchg
repnz
add
xor
push
mov
mov
mov
pop
sub
sbb
xor
ret
mov
sub
sbb
dec
xchg
xchg
mov
rol
sarb
pop
push
in
and
dec
sbb
imul
jle
fnstcw
mull
mov
icebp
pusha
sahf
call
xchg
push
mov
cmp
jo
mov
mov
push
les
add
adc
test
in
nop
fwait
mov
add
mov
jmp
leave
jmp
xor
test
push
push
into
jge
fsubrl
mov
roll
ja
popf
scas
push
mov
push
mov
jnp
push
fdivl
es
sbb
gs
cld
dec
dec
jb
nop
mov
repnz
rcrb
fsubrl
add
push
or
pop
xchg
arpl
ss
dec
es
lock
xor
es
xorb
cmp
out
sti
shrb
data16
fistps
sbb
adc
jmp
cmp
sub
popl
repz
xor
lret
and
mov
or
push
pop
inc
cltd
or
out
sahf
push
fwait
sar
push
inc
repnz
jl
mov
aad
mov
mov
cmp
stos
sti
push
aas
jb
push
aas
inc
insl
or
mov
mov
sarb
jmp
jle
sub
out
sahf
leave
cmc
sub
int
xchg
cmp
insb
out
or
test
sub
test
add
mov
xor
xor
fwait
pop
inc
pop
add
shrl
xor
test
addr16
addr16
nop
das
loope
xor
adc
lods
sub
lret
sub
mov
mov
sbb
pop
jo
bound
aas
xchg
cmc
lock
lods
jmp
insl
jo
sbb
ja
mov
mov
cld
call
sub
and
sti
mov
pop
pop
sti
and
testb
and
cltd
leave
xlat
fwait
adc
aaa
pop
sbb
jmp
and
pop
shll
mov
cli
mov
nop
cmp
xor
rorl
mov
pop
push
mov
pusha
orb
push
xchg
mov
sub
inc
adc
mov
aas
mov
fistl
out
lret
cmp
addr16
and
dec
sbb
sbb
xor
cwtl
fcoml
jmp
cmc
cmp
xchg
jne
jae
pusha
cmpl
lock
scas
jb
imul
in
pop
jb
cmc
fistps
int3
negb
stc
mov
jo
push
push
shr
outsb
shll
pop
in
fcom
mov
jecxz
frstor
sbb
idiv
mov
and
or
xor
repz
push
lret
mov
daa
sbb
push
or
inc
mov
les
xor
cmp
mov
pop
out
cld
testl
imul
int3
sub
test
sbb
cltd
aaa
cmpb
push
mov
movsb
sbb
adc
outsl
jmp
cmp
dec
and
insl
mov
lods
stos
push
push
cmp
sbb
inc
mov
in
and
push
ljmp
js
pushf
stc
pop
and
dec
add
push
ret
sub
and
push
enter
cltd
fs
test
ret
mov
add
ja
xor
ds
xchg
xchg
sub
aaa
xor
std
std
hlt
pop
test
xchg
into
rorl
xor
and
std
test
xorb
pop
in
iret
sub
sbb
stc
sub
mov
sub
pop
jp
sub
pusha
out
pop
xchg
sbb
lcall
andl
inc
or
sub
roll
jl
insb
ja
shl
pusha
push
mov
xor
into
add
dec
cmc
push
fcmovne
and
mov
mov
push
push
mov
xchg
inc
add
xchg
xchg
inc
mov
inc
dec
out
inc
inc
cmp
and
pusha
add
xchg
mov
cmp
sbbl
jge
cmpsb
mov
cmp
xchg
cmp
pop
xchg
adc
pushf
push
mov
decl
and
out
dec
dec
clc
push
push
xchg
mov
dec
fwait
xchg
test
push
inc
pop
mov
dec
outsl
imul
xchg
push
and
fbld
sbb
fwait
sahf
jbe
clc
and
cmp
and
idivl
inc
dec
pop
loope
jne
leave
push
imul
cld
inc
repz
jbe
pop
enter
sbb
mov
sbb
stos
and
jecxz
sbb
pushf
pop
xor
push
push
loopne
sbb
xchg
jns
pushl
dec
loopne
insb
inc
pop
loop
cmpb
notl
pusha
add
xchg
sbb
enter
sbb
mov
xor
sarb
and
or
add
sbb
ret
pop
les
lahf
adc
add
lea
fdiv
mov
push
and
cltd
test
mov
push
mov
cmp
push
sub
jns
push
xchg
ljmp
jnp
or
and
lods
cmc
and
popf
lret
or
xchg
les
mov
dec
jmp
mov
sbb
sub
and
inc
and
or
popa
pop
das
xor
imul
enter
mov
sahf
and
xor
pop
pop
ljmp
ljmp
outsl
push
movsl
pop
jg
insl
loopne
loopne
addr16
aaa
xor
xor
jmp
mov
or
mov
leave
clc
loope
stos
jmp
or
mov
bound
ljmp
push
je
jp
cmpsl
ret
popa
outsl
mov
pushf
mov
pop
decb
sub
adc
jo
in
mov
out
mov
ja
add
add
in
std
fildl
aaa
push
popa
je
push
mov
and
scas
ds
xor
add
pop
mov
pop
inc
loop
sub
sbb
es
mov
out
scas
enter
fdivl
jle
gs
loopne
dec
lods
xor
mov
leave
mov
mov
repnz
jp
arpl
or
cltd
pop
xchg
jmp
loopne
or
or
push
fs
fadd
mov
push
cmpsb
dec
lahf
loopne
cli
pop
and
sbb
xchg
movsb
popl
jns
mov
or
adc
daa
pop
or
pop
cmp
mov
sbb
mov
hlt
push
mov
jno
mov
push
jo
xchg
in
mov
das
mov
xor
data16
mov
jnp
cmp
lods
mov
add
push
insb
inc
dec
aam
outsl
lret
insl
add
inc
push
mov
and
sbb
xor
push
into
dec
xor
jo
pusha
loope
in
adc
xor
repz
sti
mov
mov
cmp
scas
rorl
int
push
outsb
inc
sbbl
fs
js
sub
cmpsb
push
cmpsl
xor
out
jmp
jbe
jg
arpl
sbb
add
or
movsl
xlat
je
push
mov
rcrb
cmp
hlt
lcall
mov
fwait
xor
pop
es
rcr
pop
jl
cmp
sub
cmpsb
es
pop
inc
nop
outsb
jns
xor
iret
nop
dec
dec
push
cmc
xchg
in
mov
mov
xchg
push
push
push
arpl
scas
mov
xchg
in
sbb
pop
pop
jle
inc
fwait
leave
pop
ds
adc
sbb
jno
inc
push
sbb
mov
jbe
stc
push
lret
xchg
mov
adc
aas
sbb
frstor
pop
adc
pusha
out
ficoml
push
bound
imul
ljmp
xchg
lahf
incb
mov
and
ds
mov
subb
pop
push
shlb
call
xchg
cmp
setg
dec
popa
sahf
je
lcall
inc
testb
xchg
adc
das
shl
call
cmp
mov
pop
cmpsl
rcl
iret
imul
int3
cld
aaa
stos
fdivs
cmpsl
lods
sbbb
xor
jle
ja
mov
pop
cmp
les
stos
outsb
dec
ds
add
popf
ja
mov
cld
push
cmp
sub
mov
ficoml
xchg
call
jle
xor
and
xor
xchg
bound
jge
mov
idivb
pop
movl
lret
mov
mov
mov
pop
roll
mov
fdivr
cmp
scas
lcall
iret
das
mov
mov
dec
aas
imul
or
mov
pop
js
lcall
stos
cli
scas
mov
andb
int
pusha
dec
and
inc
sahf
adc
repz
push
cwtl
movsl
pop
call
mov
lock
int
daa
sbb
or
and
sub
dec
mov
inc
mov
adc
mov
cs
loopne
pushf
push
nop
pushf
xorb
xor
pop
div
mov
bound
push
dec
inc
lret
lret
mov
xor
cli
stos
cmp
dec
xchg
and
sub
adc
repz
add
jnp
dec
ret
or
test
jp
xchg
clc
sahf
aas
call
sub
dec
ss
das
xor
inc
push
stos
xchg
xchg
fsub
addr16
sahf
push
push
mov
sub
cmp
cli
add
test
cmp
lahf
or
cmp
ret
test
rolb
push
lret
daa
sti
or
jbe
notl
jne
lds
test
jno
cmpsb
addb
mov
addr16
int3
dec
iret
and
nop
adc
sub
mov
lds
aas
xchg
push
dec
arpl
adc
popf
fisubrs
mov
sbb
mov
and
stos
lahf
loop
into
int3
arpl
mov
push
popf
sub
dec
js
or
in
paddusw
rcl
mov
mov
push
sbb
mov
js
hlt
add
push
pop
dec
jno
das
movsl
or
dec
inc
cmp
sbb
loop
inc
pop
cwtl
mov
mov
adc
jae
les
insb
push
dec
leave
aad
xor
adc
add
push
xor
pop
pushf
push
bound
ficoms
adc
dec
in
push
jge
mov
mov
out
or
hlt
les
aad
jecxz
jmp
dec
jg
aad
inc
std
imul
ds
fisubl
or
outsl
fprem
in
mov
out
add
jns
ret
bound
jp
fisubrs
loope
addr16
xor
addl
dec
mov
pop
arpl
push
shrl
nop
pop
cld
inc
jns
jmp
cmpsb
cli
pop
jnp
and
add
cmpb
std
pavgw
mov
cmp
mov
hlt
test
daa
push
cmp
aam
pop
divb
pop
add
mov
adc
jo
xchg
aaa
push
xchg
xchg
dec
mov
xor
ror
xchg
ljmp
or
jne
mov
push
mov
push
int
dec
loope
xchg
movsl
and
sub
add
shlb
pop
ljmp
les
push
fsub
xchg
add
xchg
loope
pop
jle
daa
ja
stos
cmpb
clc
iret
or
into
sub
out
cmp
push
jo
jns
int
ret
test
adc
popa
outsb
push
mov
sbbl
push
in
pop
sub
xlat
jae
bnd
pop
jb
enter
and
adc
ja
dec
cmp
movsl
pop
ret
push
clc
loop
and
lahf
daa
inc
and
rorb
ret
adc
lea
jmp
movsb
aas
cwtl
rol
jae
sub
mov
pop
sbb
movsb
xchg
dec
mov
mov
mov
loop
shlb
arpl
inc
sub
sub
push
mov
pop
xor
std
lods
or
sbb
mov
xchg
pop
das
pop
mov
push
pop
insl
fcompl
xor
repnz
or
mov
hlt
xchg
inc
xchg
dec
mov
lods
inc
dec
push
call
mov
loopne
jp
ret
fisubrl
sub
jge
out
std
jecxz
add
into
jg
xchg
gs
sti
dec
sub
inc
mov
mov
jo
adc
ljmp
xchg
ja
jecxz
add
pop
push
call
decl
mul
mov
sti
leave
cs
and
or
sbb
sub
and
pushf
aas
or
and
data16
mov
pop
lahf
stos
sbb
call
pop
cmp
lret
inc
or
out
or
fwait
sbb
hlt
mov
mov
dec
in
mov
pop
test
arpl
repz
std
ja
stos
push
je
mov
pushl
arpl
stc
xor
mov
inc
mov
test
or
stos
stos
add
and
mov
cmp
movsb
lret
mov
dec
sarb
bound
negb
vmread
aam
inc
mov
cmp
lock
cmpsl
lcall
jns
fidivl
jl
fsubs
dec
repnz
xchg
ds
dec
sub
ja
arpl
xlat
add
push
and
fdivrs
imul
jnp
out
xchg
mov
or
lahf
and
or
cmc
mov
hlt
jg
xor
adc
xchg
or
cmp
and
fistl
stos
push
mov
push
mov
adc
sbb
out
insb
sub
sub
out
push
loop
popf
call
xor
adc
cmc
jecxz
and
push
int3
call
subl
lcall
jp
clc
daa
stos
or
leave
orl
add
inc
jo
jl
leave
add
leave
subb
inc
inc
gs
pop
lcall
filds
jb
mov
mov
and
mov
jne
fcmovnu
aas
sbb
add
and
cmp
stos
mov
pop
push
adc
push
cs
push
cmp
arpl
mov
push
mov
inc
adc
fcomps
aad
int
cmpsl
sbb
cmp
jno
mov
je
daa
fdivrs
jne
push
popf
push
push
shlb
pop
aad
in
xor
push
scas
scas
ss
shrb
mov
dec
cwtl
dec
xchg
lea
icebp
xor
pop
mov
out
cmpsl
in
in
xchg
insl
loop
mov
gs
inc
mov
ja
xchg
lea
jp
fnstcw
mov
or
cwtl
loopne
sbb
movsl
lock
shlb
mov
sub
xchg
inc
mov
xor
xchg
popf
sahf
movsb
mov
mov
sub
lods
pop
cmp
es
add
cld
sbb
loopne
insl
lret
lret
or
lds
call
mov
fistl
and
jge
xchg
push
sub
pop
add
xlat
jl
out
in
das
mov
movsb
sbb
aas
xchg
mov
inc
mov
jo
xor
sub
jnp
lods
jb
cmpsl
and
mov
dec
or
dec
out
adc
xor
jge
xlat
clc
dec
out
cmp
inc
cmpsl
or
add
mov
scas
push
roll
mov
aam
icebp
cs
adc
mov
cmp
repnz
js
sbb
ja
repz
lahf
aad
xchg
dec
or
xchg
mov
xor
out
pushf
adc
jo
data16
cmp
xorl
nop
testb
cmp
xchg
bound
mov
and
jnp
cmp
cs
sahf
mov
sbb
movsl
mov
and
sub
push
mov
pop
insl
sub
lcall
sub
lea
out
iret
sbb
mov
nop
mov
lahf
sub
pop
add
sbb
sbb
ds
clc
shlb
push
shrb
hlt
push
lds
pushf
mov
ja
add
and
jne
mov
mov
lcall
jge
and
adc
xchg
sbb
sbb
ret
pop
pop
mov
adc
mov
mov
or
fcoms
test
push
push
cmp
sbb
insb
adc
fimull
xor
sub
jp
jecxz
daa
fwait
das
add
shll
mov
mov
sub
movsb
outsl
ja
mov
stos
aad
mov
mov
outsl
jecxz
jmp
stc
mov
rcrb
mov
inc
sahf
mov
jl
lods
push
int
and
push
lods
jnp
mov
pushf
jmp
lea
mov
out
outsb
lret
add
lret
fldcw
xor
mov
sti
push
push
mov
xor
out
icebp
lret
stos
lcall
out
repz
push
outsb
cmp
sahf
ja
adc
cmp
mov
call
rcr
js
ret
out
pop
cmp
mov
or
inc
mov
subb
in
lods
aad
inc
add
dec
test
adc
xorl
arpl
arpl
movsl
es
inc
fldcw
cmp
mov
les
push
repz
stos
pop
in
mov
ss
push
fmuls
andl
rcr
adc
out
or
push
stos
movsb
inc
in
out
xor
and
test
mov
test
and
sbb
test
and
mov
shl
sbb
xchg
mov
in
popf
iret
in
int
faddl
add
jne
mov
xchg
sbb
call
jg
out
lock
xchg
imul
mov
jmp
fcmovnbe
xchg
cmpsl
mov
jg
push
stos
cmp
sbb
shll
xor
add
pop
pop
sub
mov
mov
push
mov
sub
mov
adc
push
jecxz
sbb
adcl
fsubs
mov
aam
and
cmp
jge
push
pop
in
scas
xchg
lcall
addl
adc
or
mov
test
scas
or
js
xchg
lret
movsl
ja
aas
jne
in
jo
and
sub
bound
and
sbb
outsl
sarl
inc
fs
loop
add
loope
pop
xchg
and
js
mov
repz
sub
test
pusha
leave
sbb
mov
mov
lds
jmp
test
cmp
mov
sbb
testb
test
xor
test
loope
fstpl
adc
mov
lret
imul
jl
sbb
pop
idivl
dec
pushf
pop
adc
xchg
fs
stos
roll
cmp
in
or
cld
popa
mov
scas
mov
xchg
icebp
out
inc
sub
rol
sub
sub
mov
and
pop
push
pop
test
fimull
jg
sahf
sub
xor
mov
add
repnz
adc
test
fnsave
dec
add
fsts
xchg
movb
cmp
xchg
mov
imul
addr16
cvtps2pi
adc
or
add
or
shlb
lret
dec
pushf
xor
add
sub
in
pop
in
int
jle
xlat
decl
mov
mov
in
cmp
sub
mov
out
inc
xchg
enter
addr16
lcall
andb
mov
cmp
out
cld
push
add
cwtl
sub
iret
dec
in
mov
dec
mov
int
sub
and
cld
xchg
pop
dec
push
rol
cli
mov
dec
pop
jl
and
pop
cmpsb
int
mov
pop
mov
faddp
jbe
ljmp
mov
inc
mov
cli
dec
and
push
fstps
stos
cmp
aas
jge
mov
inc
clc
je
aaa
popf
leave
adc
inc
mov
mov
jo
pop
call
pop
inc
and
dec
lret
inc
stos
pop
mov
sbb
and
pop
push
in
scas
cmp
movsl
add
icebp
arpl
iret
fstl
inc
out
fmull
jp
inc
or
jl
inc
pop
mov
pop
xchg
ljmp
movsl
sahf
push
adc
mov
rolb
mov
addb
jnp
das
jb
pop
outsl
and
int
sbb
or
pusha
or
stos
aad
fisttps
adc
push
add
jmp
test
scas
jbe
add
xchg
jo
jns
and
sbb
dec
repz
mov
and
sub
add
pop
and
das
push
fidivrs
sub
inc
cli
push
fisubrs
ljmp
out
push
scas
mov
cmp
cmp
je
fimull
push
fimuls
push
cwtl
fsubrl
rcr
mov
mov
xor
sub
gs
and
into
add
scas
push
sub
jle
shlb
mov
mov
sbb
mov
dec
push
pop
in
adc
pop
jecxz
or
lcall
dec
pusha
adc
jmp
inc
pop
push
push
stc
mov
shl
and
pusha
fsubr
adc
mov
rolb
in
repnz
cs
clc
and
cmp
add
sbb
fildl
into
xor
jmp
xchg
rcr
out
or
pop
test
mov
jns
pop
jno
cli
xchg
jne
ret
ds
xchg
js
fimuls
fiaddl
jmp
pop
inc
xor
push
mov
inc
cmpsl
in
mov
push
in
pop
pop
aam
ja
dec
add
jle
add
aad
fwait
sub
and
das
xor
pop
jns
in
test
rclb
dec
pop
out
pop
loop
and
cmpsl
mov
adc
push
inc
sub
int3
push
add
mov
ljmp
out
sbb
cmpsl
cmp
nop
cli
insl
cmp
inc
sbb
mov
shlb
icebp
mov
and
xor
xchg
andl
xchg
pushf
fdivrs
xlat
iret
mov
bnd
mov
enter
stos
popf
push
push
or
bound
cmp
mov
and
inc
xchg
notb
ja
jl
mov
fs
inc
push
add
cmp
test
push
jg
add
xchg
sti
lods
xchg
xor
aas
movsl
or
fwait
push
push
cltd
imul
xchg
jmp
test
lahf
dec
popf
ds
push
push
stc
lods
sbb
shll
jl
sbb
cli
into
and
fdivl
outsl
cs
push
inc
add
lock
and
jmp
jnp
push
rcll
notb
pop
js
repnz
sbb
add
fisubrl
and
adc
iret
mov
add
xchg
aam
sbbb
ja
ret
jne
fwait
and
push
add
xchg
inc
bound
cli
sbb
mov
or
cmpsl
adc
cmp
out
mov
mov
jmp
dec
in
mov
push
cmp
xchg
stos
sbb
test
dec
and
cmpsl
outsb
lods
sbb
cmp
jbe
sub
cmp
add
jecxz
dec
sbb
jp
lcall
jbe
xor
push
xor
dec
insb
sub
aaa
ja
xchg
push
mov
push
jge
scas
mov
sti
int
adc
rdmsr
cmc
adc
daa
push
enter
mov
jns
jecxz
jg
add
xor
xor
mov
add
leave
jl
sbb
aas
mov
cmp
push
insl
insb
xor
arpl
leave
or
rorl
fld
pop
push
jnp
mov
popf
jmp
fdivrp
push
ficompl
inc
rcl
test
les
cs
divl
shr
out
je
jl
cmp
jp
loopne
push
psubw
sbb
push
in
mov
xlat
or
aad
dec
jl
ret
fcmovne
stos
imul
mov
into
lcall
nop
lds
and
mov
and
mov
aad
cmp
cvttps2pi
mov
adc
mov
adc
loop
out
inc
icebp
cmp
mov
outsb
stos
lea
stos
ljmp
inc
xlat
jecxz
pop
pop
fcompl
ss
push
push
cmp
adc
mov
ss
call
ds
stos
push
push
mov
add
arpl
cltd
jnp
ret
inc
jae
sbb
lods
xchg
imul
std
add
push
jno
scas
das
lock
cwtl
adc
mov
xchg
das
fsts
adc
jge
adc
ljmp
insl
lahf
jb
cli
or
dec
push
out
mov
mov
dec
jge
data16
xor
jnp
mov
xchg
adc
xor
inc
scas
shrd
lret
mov
pop
cli
dec
and
mov
add
sbb
jl
out
lods
mov
xor
sub
sarl
add
push
pusha
dec
sarl
iret
fwait
loope
mov
push
fdivl
sbb
and
jl
lea
fnstsw
dec
aam
sub
cmc
fiaddl
fdivs
stos
arpl
mov
adc
fs
push
add
iret
and
jo
js
dec
push
rcrb
popf
xchg
test
xchg
push
push
mov
sub
push
sbb
int3
sbbb
inc
int
loopne
push
inc
sub
loope
ret
lods
ret
in
test
adc
or
sbbb
push
mov
add
push
sub
add
mov
jnp
loop
out
ja
lret
mov
or
jne
rorl
mov
aad
jnp
sbb
repnz
push
or
xlat
mov
testl
lods
pushf
xor
sbb
aad
pop
mov
push
cmp
fisttpl
mov
dec
cmp
adc
inc
inc
fdivs
pop
pop
lods
imul
fisubs
mov
ja
push
jbe
bound
sub
sub
cltd
lret
push
adcl
mov
ss
inc
jl
sub
cmp
add
in
inc
in
mov
icebp
iret
dec
lock
sbb
and
mov
sahf
jb
mov
or
mov
jle
mov
cs
ljmp
xor
or
xchg
push
sub
lods
cmp
ljmp
sti
into
xor
andb
iret
xor
jmp
xor
add
pop
fidivl
xor
xchg
and
cmpl
fidivrs
hlt
loop
mov
mov
xchg
lret
subl
mov
ss
pop
loope
jbe
pop
pop
adcb
std
pop
add
rcrb
out
rclb
nop
sahf
fcoml
dec
fwait
or
scas
insb
pop
iret
and
imul
jns
icebp
bound
push
int
inc
inc
mov
jmp
or
inc
enter
mov
mov
inc
sti
cli
mov
sbb
mov
scas
adc
cmp
adc
xchg
stos
add
add
push
aas
scas
mov
pusha
inc
add
push
movsb
adc
dec
stc
test
cs
jb
inc
xchg
aad
sub
mov
std
int3
icebp
sbb
jg
ds
mov
test
insl
push
pop
pop
adc
mov
jmp
mov
pop
shll
push
repnz
mov
xor
icebp
push
imul
mov
std
sub
ds
movsl
es
rcrb
push
jne
sub
sub
mov
out
mov
ret
cwtl
out
imul
cwtl
pushf
gs
and
lahf
inc
inc
notl
fwait
int
mull
pop
rclb
les
out
test
jle
mov
mov
fidivl
and
shl
pop
mov
xor
jg
inc
insb
or
mov
dec
iret
add
and
xor
int
pop
lods
cmp
in
push
xor
ret
add
or
rorl
xchg
mov
or
inc
push
and
popf
push
push
mov
xchg
hlt
jnp
sub
jnp
mov
nop
outsb
lret
xor
xor
jle
cmpsb
mov
sub
pop
mov
sbbl
inc
push
es
dec
test
cmpl
cwtl
fnstcw
pop
cmp
mov
jb
mov
mov
stc
cmpsl
ja
lahf
cmpsl
into
xchg
icebp
movsb
enter
xchg
mov
out
ret
mov
cli
mov
add
insl
stc
dec
ret
cmpsl
xchg
insl
inc
stc
inc
aad
mov
lds
sti
xor
jecxz
inc
in
aam
mov
dec
push
rcll
inc
lods
int3
fdivr
cmp
test
mov
xor
mov
dec
push
or
inc
xchg
push
loop
jp
fisttpl
push
cmpsl
xchg
lea
fmull
out
push
sarl
in
ds
inc
mov
mov
pop
pop
push
out
inc
call
jg
dec
stc
ficomps
lods
push
shrb
xor
or
fcoml
sub
pop
xchg
pop
test
jge
les
rcr
lahf
fidivrl
outsb
popf
jmp
mov
lret
pop
sub
aad
inc
jo
out
test
cmc
outsl
xlat
popl
push
ss
cmp
in
movsl
mov
les
lock
mov
pop
sub
dec
incb
repnz
aaa
mov
test
insb
shll
inc
cmp
pop
mov
xchg
mov
jb
lods
scas
jbe
xchg
stc
loopne
pop
xlat
xor
stos
jge
sbb
fmuls
test
add
in
sbb
or
scas
in
loope
ja
js
int
sbb
or
or
or
sbbl
aas
aam
rorb
test
lcall
jae
mov
push
push
rcl
mov
push
mov
jmp
sbbb
and
mov
pop
fisubrl
hlt
cli
arpl
mov
mov
ds
push
jns
insl
mov
mov
cmp
cmp
push
dec
mov
inc
mov
push
or
data16
add
fimuls
mov
inc
cli
dec
and
push
xchg
mov
adc
jae
jmp
mov
and
xchg
push
xchg
jo
mov
sahf
adc
negl
fs
scas
gs
nop
jle
mov
mov
and
sbb
mov
call
add
sub
push
cwtl
shr
fsubrl
movsb
jecxz
arpl
insl
add
add
pop
xchg
dec
lahf
or
jb
js
and
xor
call
stos
mov
pushf
push
jo
arpl
fbld
lahf
dec
js
mov
daa
lock
call
js
call
xchg
mov
sub
push
aad
pushf
movsl
cmpsl
call
cs
fisubrs
sbb
xchg
sub
mov
inc
xchg
cmc
cmp
push
add
stos
mov
push
xor
es
clc
aaa
loope
pop
adc
int
or
aas
in
js
inc
shlb
xchg
out
mov
ja
dec
call
repz
hlt
xor
popw
and
outsl
add
jnp
jge
xchg
pop
or
cld
xor
clc
inc
stos
shlb
hlt
sub
js
fstl
lea
push
jne
dec
push
ficomps
push
mov
aad
mov
sarl
into
adc
cmpsb
rcrb
push
dec
pop
pop
loope
repnz
mov
xchg
loopne
lock
push
out
pop
mov
mov
sub
push
les
stos
lcall
cmpl
ret
or
test
adc
jne
out
andl
fistpll
mov
pop
cmp
icebp
cmp
adc
pop
adc
xchg
imul
push
xor
jg
xchg
and
movsb
push
dec
push
add
mov
add
cmc
mov
cmp
ret
push
inc
xchg
add
vcvtps2dq
dec
cltd
popf
pop
sub
pop
rol
test
loope
out
push
lods
push
aad
jns
mov
aas
pushf
push
lds
lea
cmp
fs
stos
mov
lahf
mov
or
mov
inc
je
push
shll
add
inc
xchg
arpl
repz
stc
ret
dec
jle
xchg
inc
std
imul
in
add
jne
pop
xchg
sub
fs
icebp
push
mov
bswap
insb
out
fsts
loope
cmp
lock
pop
pop
in
jns
fstps
mov
inc
andl
aad
mov
pusha
dec
out
int3
call
and
jns
lock
sbb
into
les
insl
xor
das
pop
sbb
lahf
pop
int
lcall
call
pop
test
rorb
in
and
sbb
pop
cmp
cmpsb
lret
popf
sub
cmp
push
cli
xchg
das
xchg
outsl
adc
or
pop
pop
pop
mov
popa
ret
out
iret
in
mov
adc
testb
jo
out
xchg
pop
jp
mov
jb
cld
mov
sub
addr16
iret
mov
into
mov
mov
rorb
lcall
bound
xorl
mov
push
mov
inc
mov
addr16
hlt
pushf
mov
cmp
push
cmp
imul
sbb
xor
dec
jne
xchg
leave
stos
cwtl
add
cmc
sub
cltd
movsl
add
mov
dec
and
xor
inc
push
stc
xchg
aad
and
xor
sbb
pop
push
inc
mov
push
ja
enter
pop
test
fimull
jmp
jg
pop
aad
imul
loop
inc
dec
cmp
gs
mov
adc
mov
out
adc
pop
or
out
and
mov
enter
or
inc
movl
jl
or
lcall
hlt
ret
ret
and
and
cmp
sub
add
mov
ja
jno
push
loop
nop
gs
xchg
pop
adc
sbb
mov
call
mov
clc
jg
push
shrl
xchg
mov
nop
inc
push
je
jge
jmp
icebp
in
lcall
cmpsl
jbe
fwait
mov
push
push
xchg
jge
and
or
mov
mov
mov
xchg
rep
pop
xchg
jns
sub
fwait
sub
out
mov
loope
jl
out
mov
push
es
xor
xlat
mov
repnz
aaa
ret
push
icebp
pop
mov
cmp
test
sub
jno
lret
outsl
mov
inc
and
outsl
pushf
icebp
lret
lea
xchg
xchg
cmpsb
sti
lahf
mov
push
jae
ss
or
xchg
pushf
add
lods
pushf
out
sarl
pmulhuw
leave
fadds
jle
sbb
mov
push
gs
lret
mov
mov
daa
or
xchg
es
jl
mov
scas
sub
add
out
xchg
mov
push
loope
fs
sub
inc
loopne
and
mov
xor
push
imul
es
dec
and
push
loopne
into
hlt
cmp
fucomi
fistpll
xlat
mov
pop
xchg
push
sti
mov
cmp
adc
inc
hlt
mov
mov
es
jle
sbb
push
testl
pop
and
pop
int3
sbb
xchg
adc
nop
push
fidivrl
popf
mov
loop
rolb
popf
andl
add
mov
mov
shrl
sub
push
cmpsb
sbb
dec
mov
mov
ljmp
jno
daa
sub
push
dec
cwtl
cmp
flds
sbb
push
lcall
test
adc
or
lods
cltd
sub
sbb
mov
cmc
lret
sub
dec
popa
xchg
xchg
fcmovnb
aad
cmp
ror
xchg
push
sbb
pop
es
insb
sbb
mov
mov
nop
or
push
stos
mov
es
mov
mov
outsb
addr16
cmp
adc
sbb
in
nop
push
repnz
dec
jns
arpl
mov
mov
jno
outsb
jg
rclb
jne
mov
cmp
sbb
jb
cmp
jl
movsb
pop
hlt
fcomps
or
mov
cli
and
aas
pop
in
std
and
enter
mov
das
pop
imul
flds
push
mov
test
lock
cmp
lret
mov
fcmovnbe
pop
inc
test
dec
movsb
mov
mov
adc
xor
sbb
inc
cmpsl
clc
lret
add
push
add
aas
jl
push
xor
mov
push
dec
test
mov
aaa
adc
mov
incb
or
cs
or
enter
cmpsl
rorl
insb
shll
outsl
cs
shlb
xchg
int3
movsl
push
jbe
mov
neg
jb
ja
out
cmp
pop
outsl
jne
and
push
jge
push
inc
mov
inc
mov
scas
out
xchg
jne
dec
in
fists
push
aad
jne
add
imulb
rclb
in
bound
mov
scas
outsl
mov
xor
push
xchg
xchg
adc
jge
jl
pop
add
or
jmp
fists
mov
sar
gs
arpl
lcall
mov
lods
mov
fwait
xchg
cli
mov
mov
aas
jbe
push
xchg
lods
clc
xchg
lea
mov
mov
sub
dec
sbb
inc
pop
inc
jg
andl
cld
adc
and
inc
fldl
mov
mov
and
arpl
lods
cmp
push
sub
push
ljmp
jns
inc
repz
pop
lods
icebp
xor
jb
add
ljmp
test
xor
xor
or
adc
and
jae
sahf
sbb
bound
pop
testb
cmpb
lods
std
pop
mov
and
pop
pop
ja
xor
adc
inc
xor
enter
out
mov
ret
cmp
dec
mov
movsb
inc
cmpsb
ret
push
and
adc
push
push
cmc
leave
jo
jns
lahf
dec
mov
cmpsl
call
dec
shl
mov
mov
test
fidivs
lahf
rcr
mov
mov
cmpsb
mov
add
in
scas
push
pop
gs
cli
ffree
ja
outsb
jmp
lret
test
pop
nop
add
jne
fisubrs
xor
movsl
xlat
fldl
sub
iret
ret
hlt
jecxz
fidivl
aam
rolb
ja
mov
dec
and
aas
sti
mov
or
test
mov
dec
nop
mov
ret
les
xchg
and
repz
in
mov
dec
inc
cld
or
adc
or
push
xchg
stc
fists
xchg
stos
mov
pop
push
add
dec
add
lock
xor
test
ds
les
ret
ljmp
cmp
fcoml
mov
jp
les
mov
inc
rorl
lahf
or
and
ret
je
dec
popa
xchg
dec
enter
adc
cwtl
mov
rorb
ja
inc
cli
int3
jp
les
sub
xchg
mov
test
es
pop
sub
pushf
inc
fdivrs
sti
mov
ret
lea
icebp
and
or
cmp
push
ret
rcrl
pusha
lods
jle
sbb
inc
aas
lahf
cwtl
imul
sbb
fcoml
stos
ficoms
jno
out
divb
push
mov
xor
mov
pop
out
xor
lods
xorl
out
daa
mov
in
addr16
or
xor
repnz
push
mov
fildl
fsubs
mov
arpl
mov
pop
dec
mov
jae
pop
sti
leave
mov
les
shl
shr
pop
cs
fcmovb
dec
jae
cmpl
pushf
pop
imul
inc
sti
rorl
mov
int3
scas
ss
nop
int
fimull
lds
cwtl
cmp
test
test
xor
xchg
ss
dec
aam
add
out
testb
and
or
imul
lcall
sub
sub
fldenv
xchg
cmp
xchg
sti
scas
sbb
imulb
sbb
adc
rorb
scas
push
mov
sub
bound
dec
cltd
sub
imul
cmpsb
add
arpl
inc
mov
or
jp
testl
and
ret
mov
mov
sbb
push
xchg
mov
pusha
xor
mov
stos
outsb
lock
imul
xchg
sub
sub
mov
leave
insl
aaa
xor
addr16
xchg
repz
loop
cmp
lahf
add
out
mov
stos
inc
fldl
ficoml
arpl
out
sub
jnp
push
xchg
sar
out
adc
xchg
mov
std
or
aas
lcall
pop
inc
or
cmpsl
pop
xchg
xchg
imul
sbb
std
xchg
mov
js
rorl
and
clc
cld
dec
pop
cs
iret
cmp
shlb
cmp
adc
jb
lcall
xchg
sbb
les
sub
shrb
jge
sub
divl
and
mov
lock
xor
shll
mov
lret
and
mov
adc
rcrb
repz
rorb
in
mov
popf
inc
aam
push
jecxz,pt
sub
data16
pushf
sub
out
add
es
adc
sbbb
inc
nop
xor
and
sbb
cmp
and
inc
lods
adc
xchg
mov
into
std
popa
push
cmp
test
gs
mov
jae
inc
push
lods
sub
pop
pop
das
xor
lods
icebp
pop
xchg
pop
sahf
push
ret
jne
xor
aad
and
inc
daa
into
scas
stos
or
xor
add
fistps
in
sub
lcall
xor
repz
out
nop
outsb
lods
add
inc
sub
notb
jmp
popf
and
sub
mul
mov
pop
cli
jb
in
ret
push
in
adc
jg
data16
push
or
jmp
aam
cmp
add
sub
int3
ret
sbb
pusha
sub
int
jnp
sub
jp
lds
adcl
or
hlt
pop
push
add
pop
mov
mov
push
cmpsb
into
fdivrs
mov
jmp
ficomps
ja
fwait
cli
or
cmc
dec
sub
push
sub
xor
fildll
shl
sbb
xlat
sbb
enter
ret
shrl
sub
outsb
dec
mov
cmpsb
lea
jge
or
cmpsl
inc
sub
xor
jecxz
jp
js
pop
or
jecxz
sti
insl
movl
shrl
sahf
cli
js
sbbb
sbb
addr16
jno
in
push
mov
mov
lea
mov
adc
shl
andb
mov
jo
mov
mov
dec
mov
jne
bound
into
sahf
adc
shrb
das
cmpsl
add
in
dec
incb
jne
sbbb
push
adc
leave
ss
shlb
lret
jge
lea
xor
pop
cltd
sub
into
or
mov
jns
ds
es
outsb
mov
pop
cli
lds
iret
jg
jne
stos
mov
in
jle
sub
add
sbb
movsl
pop
in
push
cmp
sub
and
lret
inc
add
xorb
int3
int
cwtl
push
adc
inc
adc
xlat
cmp
xor
lahf
movb
pop
ret
cmp
xchg
fsubl
rcr
sbb
add
dec
add
loop
adc
mov
mov
xlat
ret
inc
orb
push
mov
mov
mov
xor
add
scas
mov
mov
pop
adc
notb
dec
int
jl
cmp
lea
mov
subl
ds
in
sub
or
push
push
jmp
push
ljmp
cltd
push
fldenv
lock
and
xor
dec
std
out
adc
arpl
jmp
xchg
cmpsl
rorb
rcrl
int
arpl
inc
das
mov
inc
hlt
les
add
fwait
cli
adc
pop
mov
sbb
xchg
dec
out
je
sbb
mov
aaa
mov
or
sbb
and
adc
iret
add
adcb
sahf
inc
pusha
stos
fsubrl
ret
ss
lods
mov
cwtl
ss
sar
and
push
inc
jae
in
adc
les
daa
insl
sbb
dec
jnp
push
mov
sbb
jns
mov
xchg
movsb
pusha
mov
inc
push
popa
xor
insl
stc
sbb
push
andl
inc
pop
sub
mov
bswap
pusha
inc
and
inc
or
cmc
add
roll
inc
mov
xor
pop
pop
pop
cwtl
bound
rol
add
imull
test
mov
hlt
cld
mov
lcall
push
cwtl
push
fs
xbegin
rol
ljmp
negl
pop
pushf
push
rcll
xchg
hlt
mov
sub
lcall
icebp
jle
stos
sub
jb
ss
mov
rorl
mov
xlat
decb
icebp
add
bnd
mov
clc
xor
mov
loopne
mov
cmc
add
jne
out
lds
xor
mov
cmpsb
mov
push
push
jge
inc
mov
test
loopne
sub
repz
jns
mov
xchg
xor
adc
mov
aas
into
outsb
push
int3
pop
loope
xor
add
mov
or
adc
lret
in
mov
mov
cmp
sub
pop
arpl
out
scas
mov
adc
and
fidivrs
pop
outsb
cmp
pop
test
or
movsb
test
mov
pushf
jbe
mov
stos
jmp
xchg
jae
mov
and
arpl
push
pop
jmp
test
cmp
lods
push
lcall
bound
mov
fsubrl
push
nop
lea
lods
jo
mov
inc
xor
lcall
or
inc
jno
lods
lret
xor
add
push
das
cli
cmpb
imulb
shll
cmpsl
sub
cli
xlat
pop
or
add
push
adc
xchg
fisubl
xchg
jnp
bound
add
add
jl
mov
stos
ds
inc
jno
pop
mov
sbb
ror
jl
push
dec
imul
adc
mov
sarb
cwtl
out
arpl
add
mov
adc
lahf
sub
mov
mov
xchg
dec
push
inc
mov
out
xchg
test
roll
sub
dec
sbb
aas
add
mov
pusha
je
inc
cli
adc
stos
cli
add
loop
sub
lret
pop
jae
lret
pop
clc
jne
add
adc
rcrl
jge
icebp
mov
or
fisubrl
test
lea
jecxz
in
xchg
adc
lods
and
pop
sbb
dec
and
mov
insl
xor
test
popf
sbb
ret
test
pusha
out
xchg
sarl
pop
lahf
pop
push
addr16
psrlw
sbb
and
outsb
js
jb
loopne
lsl
add
arpl
shrb
cmp
imul
mov
and
data16
out
mov
and
add
sub
inc
outsl
jb
in
sub
pusha
sbbl
xor
imul
nop
cld
aad
cmp
xor
lret
mov
mov
adc
call
aam
dec
and
adc
or
push
out
add
jne
inc
inc
cs
out
add
cmp
adc
dec
adc
inc
mov
xchg
mov
ret
mov
mov
jle
sbb
dec
flds
xor
rcrb
ds
pusha
pop
lret
popa
lea
aaa
imul
std
xor
add
xchg
es
ds
xchg
pop
test
insb
loop
call
adc
jb
stc
out
out
mov
fidivrl
ds
std
cmp
incl
mov
jge
repz
fsubrl
pop
jbe
jp
xchg
or
sbb
mov
or
daa
gs
push
lock
pushf
cld
insl
sahf
test
jb
xchg
mov
std
and
and
cs
jnp
pop
cli
fisubrs
sub
sub
je
mov
test
xor
jecxz
imul
outsb
sub
enter
inc
mov
test
dec
fwait
cld
pop
in
popa
test
jmp
iret
xchg
mov
shlb
jmp
dec
dec
cld
adc
cmc
pop
mov
ja
push
cld
xor
sub
stos
pop
pusha
scas
out
jmp
add
jns
and
xor
push
pusha
or
push
mov
jl
inc
arpl
mov
mov
dec
test
jmp
inc
call
bound
or
fs
jge
imul
idivl
jnp
lock
pop
sub
xchg
test
lea
icebp
pop
mov
dec
in
xor
fdivs
andb
mov
cmc
jb
mov
or
cmpsl
incl
pushf
mov
cmpsl
addr16
dec
lock
lock
pop
sbb
ja
test
jg
mov
dec
subb
pop
mov
dec
shlb
pop
roll
out
fs
sbb
std
loopne
loopne
ss
scas
pop
leave
adcl
test
jno
lods
sarl
ror
pushl
ret
add
sbb
and
push
cltd
je
stc
decb
rolb
loopne
dec
lret
jne
push
push
lods
lods
testb
sub
dec
dec
out
cmp
and
rcrl
int3
ds
and
sbb
adc
dec
sbb
addr16
stos
fstp
mov
mov
loopne
fisttpl
mov
aam
je
xchg
jle
mov
inc
add
xor
adc
mov
outsl
ds
mov
xchg
es
addr16
orl
in
mov
mov
jo
loope
loop
in
mov
jp
sbb
movsb
out
jge
sbb
push
mov
sub
or
sub
ret
lods
xchg
push
arpl
inc
pusha
dec
or
jns
out
mov
jl
nop
es
mov
pcmpgtd
imul
cs
sbb
jne
dec
dec
pop
sub
xchg
and
sub
sub
hlt
rolb
inc
push
jb
outsl
pop
dec
adc
or
and
mov
xchg
dec
mov
or
adc
add
lret
xor
imul
add
pop
xor
xor
loop
mov
shr
js
pop
lds
pop
mov
pop
pop
fnsave
xchg
adc
sbb
loope
outsb
lcall
xor
fwait
cs
popa
jo
lods
pop
mov
xor
clc
push
xor
mov
dec
scas
sub
cli
or
jle
add
adc
in
loope
inc
mov
mov
lds
cmp
push
mov
and
add
and
test
mov
xchg
fsubrs
iret
loopne
sbb
jp
outsl
lahf
pop
jle
out
popf
xor
xchg
push
and
leave
out
push
iret
nopl
mov
ss
js
xor
mov
rcll
in
inc
push
in
div
incl
xor
push
xchg
outsl
out
icebp
pop
icebp
xchg
outsl
jecxz
or
sar
fdiv
lret
jmp
mov
aam
ss
sbb
adc
push
movsl
hlt
icebp
jno
fwait
lods
lret
js
sbb
aas
out
das
inc
repnz
ror
and
fdivs
add
or
xor
and
jo
movsl
fstps
mov
and
notb
repz
add
ljmp
and
xor
and
lds
cwtl
sbb
mov
mov
andl
xchg
les
and
pop
out
push
or
or
loopne
pop
gs
mov
imul
adc
lods
ficompl
dec
add
shll
cmpsl
rorb
ds
push
and
or
pop
jge
pop
push
js
push
out
outsl
lods
cli
push
loop
xchg
xor
hlt
mov
add
lods
xchg
fnstenv
aad
outsl
mov
loop
add
mov
sbb
mov
mov
repnz
decb
push
lret
das
xor
mov
fcompl
xchg
ret
insl
add
fcom
mov
or
xor
pop
scas
add
pop
cli
sbb
enter
xor
shl
cmpsb
hlt
mov
and
lds
jb
xor
in
or
mov
cwtl
cmc
sti
dec
fcoml
pop
dec
sahf
dec
addr16
dec
in
adc
dec
jge
mov
sub
inc
dec
inc
mov
and
arpl
xor
shll
subl
cmp
xchg
pop
out
mov
inc
mov
pop
push
mov
into
shll
insb
jge
jno
sub
mov
outsl
adcb
add
mov
sbb
outsl
and
lea
adc
mov
sbb
jecxz
mov
cmc
jecxz
sub
popf
jnp
mulb
or
and
pop
and
add
leave
subb
or
add
dec
sbb
pop
mov
cs
add
popa
mov
pop
outsl
pop
sub
lock
xor
mov
pushf
jo
push
aaa
push
mov
insb
xchg
pusha
mov
fsubr
dec
shl
dec
sub
je
inc
ret
pop
and
enter
adc
cs
incl
push
das
pop
popa
or
and
sbb
stc
and
mov
sub
jne,pn
and
andl
imul
push
dec
ret
je
flds
pop
ja
sub
jno
mov
cs
sarb
movsb
adc
push
push
rorb
lret
cwtl
cmp
xchg
clc
sub
inc
ret
sub
push
pop
repz
rcll
fs
mov
shlb
stos
dec
sub
jl
pop
lods
aaa
js
dec
aaa
inc
mov
push
rorl
aaa
xorl
jne
rol
jg
add
dec
jl
lds
in
push
or
mov
cmc
dec
fstpt
repz
aas
popl
jae
lahf
mov
pop
adc
push
sbb
cmp
lahf
into
inc
jmp
pop
bound
xor
inc
xor
xchg
fidivrl
mov
inc
and
inc
inc
mov
sbb
out
cs
adc
lds
jno
cmp
popf
mov
add
imul
sub
and
loope
jp
jg
sahf
imul
pop
movsb
cmpsb
scas
xchg
gs
scas
sahf
mov
inc
in
stos
loope
popa
pop
xor
dec
clc
sub
jmp
or
sahf
test
adc
pop
pop
adc
xor
push
jns
imul
stc
mov
dec
jl
mov
les
data16
hlt
and
loope
mov
jmp
fsubrl
sub
xchg
add
adc
js
cmpsl
sbb
rcrl
mov
out
aam
pop
push
add
shll
jbe
or
fildl
mov
das
jns
test
shr
bound
scas
mov
test
push
and
sar
mov
and
push
scas
jle
in
jo
mov
sarl
xchg
adc
jb
incb
and
sbb
int
xor
jo
sti
das
in
int
lahf
cltd
adc
push
fs
mov
sub
dec
outsb
pop
mov
or
out
fcompl
stc
pushf
insb
or
clc
add
push
movsl
pushf
test
add
and
pop
adc
push
jmp
cwtl
sub
cmp
popa
data16
je
or
mov
pop
jne
jbe
dec
mov
inc
fidivrs
mov
mov
sti
jno
sahf
cli
and
mov
insl
dec
cmc
dec
push
loop
pop
scas
cmp
xchg
subl
sahf
movsb
push
add
push
sbb
xor
cmpsb
pushl
lret
mov
sbb
jle
js
xchg
outsl
mov
mov
mov
or
lods
push
xor
xchg
out
pop
shll
enter
mov
dec
sbb
and
jo
test
add
xchg
adc
jl
mov
pusha
sub
fcoms
loopne
inc
dec
mov
push
mov
dec
xchg
mov
xorps
fcmovu
fldcw
shrl
mov
stos
mov
leave
xor
or
inc
bound
pop
pop
rclb
sub
in
out
mov
cmp
mov
pop
inc
inc
ja
fisttpll
mov
cmp
dec
pop
ljmp
cmpsb
jnp
xchg
pop
sbb
or
lods
add
icebp
movsl
in
adc
lea
popa
jae
sar
jp
xchg
jg
rcrl
and
pop
hlt
and
or
cmp
pop
jo
aam
std
leave
adc
in
fisttpl
daa
jnp
test
cmc
pop
pop
cwtl
sbb
stos
dec
push
inc
adc
mov
and
cmpsl
mov
lea
push
pop
push
cmp
sbb
cli
lods
into
fistl
popf
push
jg
inc
test
shr
dec
dec
in
ret
pop
add
cld
sbb
or
inc
scas
testb
sub
jae
cmp
aad
push
xor
loop
push
clc
ret
movsl
lret
dec
or
mov
cmc
sub
andb
loopne
ja
in
add
sbb
pop
xor
jl
pop
inc
cmpsb
mov
jecxz
or
in
les
mov
sbb
xor
push
pop
sub
pop
mov
push
jle
inc
test
enter
pop
inc
push
mov
in
aaa
lret
mov
notb
movsb
push
cmpsb
rolb
imul
in
cmp
pop
rcll
push
lcall
pusha
mov
mov
pushf
sbb
gs
rolb
in
and
notb
mov
xchg
dec
or
aas
fbstp
add
xchg
lret
cwtl
and
ficompl
daa
test
inc
jp
imul
pop
or
sbb
adc
push
gs
lahf
int3
push
push
fxam
jae
dec
inc
std
loope
icebp
mov
in
add
xor
add
dec
in
insb
push
rclb
in
and
sbb
mov
stc
sar
jmp
sbb
add
jne
pop
outsb
in
jge
mov
adc
jecxz
and
sti
or
or
inc
mov
lock
iret
add
ss
std
push
nop
jg
pusha
and
leave
or
dec
push
or
pushf
mov
and
das
push
xchg
add
mov
imul
sahf
cmp
mov
dec
fildl
fwait
dec
pop
mov
sbb
gs
sub
jl
mov
lds
add
push
adc
or
mov
int3
ds
insl
clc
filds
push
mov
sbb
aad
stos
xor
dec
push
inc
das
lock
inc
adc
pop
sbb
mov
sub
lret
sub
mov
jg
icebp
push
xor
imul
rorl
dec
xchg
cmp
add
xor
faddl
pop
dec
or
inc
in
movsb
xor
insb
loop
cwtl
mov
sahf
fwait
pop
das
leave
pop
jne
add
rcrb
ret
popa
xchg
jne
repnz
inc
fs
cmp
test
mov
mov
test
lahf
push
mov
aaa
xchg
iret
push
xor
push
repz
sbb
adc
adc
popf
enter
inc
shlb
jne
xchg
mov
adc
fs
leave
cli
aad
sti
jge
je
sbb
xchg
mov
mull
inc
jno
sbb
movzwl
in
outsb
xchg
or
int3
push
add
scas
sbb
movsb
cltd
push
clc
cmp
aaa
cmp
out
arpl
test
dec
mov
adc
jbe
nop
push
mov
cmp
fstpl
dec
rorl
xchg
push
frstor
pop
mov
sbbl
mov
sbb
fwait
jp
mov
stc
out
enter
mov
jnp
enter
lods
fwait
out
out
and
lret
fwait
pop
addr16
insb
aaa
sub
std
sub
and
cmp
repnz
cwtl
shll
mov
js
subl
scas
imul
inc
hlt
repnz
pop
or
jecxz
xor
jg
add
pop
push
mov
jge
sti
dec
mov
jo
imul
adc
adc
push
inc
mov
mov
lods
cmpsl
push
mov
cltd
gs
dec
ja
je
iret
cmp
stc
xor
in
movq
popl
mov
push
ret
add
xor
fsts
imul
popf
mov
jo
adc
mov
adc
sub
push
in
in
cld
jno
xchg
push
fisubl
lea
callw
cltd
mov
mov
frstor
add
mov
cmp
test
adc
mov
fisttps
lret
pop
and
cwtl
add
xor
popf
jbe
pop
mov
sub
in
mov
xlat
adc
push
hlt
push
xchg
cmovns
lock
repz
mov
jb
xchg
sbb
lahf
pop
movzwl
jno
cld
or
mov
sbb
imul
adc
popf
dec
xor
insl
pop
xor
ret
rorl
inc
ret
mov
ss
sub
and
mov
enter
dec
inc
dec
dec
cli
and
iret
int
into
fwait
arpl
or
inc
and
rcrl
add
add
pop
stc
loopne
arpl
in
repnz
mov
in
mov
sbb
aam
ret
es
loope
push
pop
and
fs
nop
es
cwtl
cmp
dec
test
in
repnz
cmp
dec
xor
jmp
sbb
adc
into
dec
or
cltd
inc
mov
gs
mov
jle
pop
mov
cmp
or
sarb
mov
xchg
sbb
jmp
mulb
in
out
dec
push
test
inc
and
orb
and
dec
fmull
lret
and
outsl
jnp
push
leave
sbb
mov
sbb
sbb
lahf
jge
sub
xor
add
data16
mov
and
xor
aas
imul
pushf
xorb
mov
xor
mov
and
pop
cmp
shl
dec
cmc
pushf
xchg
enter
add
pop
mov
add
movsl
and
in
xchg
dec
mov
push
mov
int
gs
add
mov
popf
mov
inc
push
pop
out
and
in
mov
sahf
lock
loope
xchg
pop
lcall
inc
ret
enter
mov
ret
cmp
jp
mov
enter
pop
jnp
icebp
adc
dec
sbb
pusha
jbe
inc
popf
and
insl
pop
cld
outsb
adc
pusha
cwtl
pop
imull
xchg
jle
jne
ret
or
mov
xchg
es
inc
xchg
out
std
movl
mov
out
push
frstor
dec
insb
ds
call
adc
xor
mov
adc
hlt
dec
mov
mov
mov
pusha
loope
xchg
cmp
mov
or
xor
pop
clc
mov
lahf
shlb
add
xchg
inc
jno
ret
aam
bnd
sub
in
add
mov
jecxz
push
add
cmpsb
out
cwtl
cmp
xchg
ret
repnz
out
xchg
out
cmpsb
lahf
orl
mov
sbb
jo
or
dec
stos
push
adc
movsb
aad
cmp
push
sub
push
xor
popa
mov
sbb
jns
mov
scas
mov
lea
mov
xchg
xor
add
sbb
sbb
enter
loopne
add
outsb
int
mov
inc
mov
shlb
dec
add
push
add
popl
push
xlat
fmuls
jbe
ficomps
in
mov
iret
xor
mov
xor
jl
and
xchg
xchg
rcrl
push
inc
lods
icebp
movsb
cmovne
mov
push
inc
pop
xchg
cmp
pusha
sahf
mov
dec
sbbl
call
js
adc
lea
in
enter
cmp
mov
dec
push
lahf
or
fs
dec
mov
fistl
loop
ljmp
pop
lds
pop
inc
je
inc
inc
xchg
jg
mov
mov
cwtl
fs
stos
outsl
data16
inc
add
bound
rcll
or
inc
pop
out
jle
dec
jl
movl
hlt
stos
jb
jp
inc
sbb
sub
in
jp
aas
fistpll
push
jne
outsl
movsb
in
jae
inc
sub
aam
mov
inc
popf
or
aad
inc
pop
cmpsl
add
mov
mov
sti
movzbl
adc
xchg
sub
ljmp
lahf
sar
adc
inc
sbb
xor
mov
out
push
xchg
dec
scas
outsb
mov
int3
rcrl
mov
scas
push
out
adcl
xchg
aad
sahf
leave
in
jle
inc
pop
jnp
loopne
cli
incb
and
mov
xchg
and
pop
dec
cld
jno
or
insb
aaa
enter
and
mov
hlt
jl
push
sbb
add
in
mov
mov
mov
jb
sbb
out
pop
je
mov
lahf
inc
sub
push
sbb
imulb
icebp
jbe
sbb
lea
lods
sbb
push
xor
sub
outsb
jg
idivl
cmp
mov
cmp
or
stc
repz
ds
leave
mov
jbe
popf
test
mov
xchg
or
pop
dec
sbb
addr16
inc
fiadds
js
or
int3
and
scas
xor
dec
pop
mov
and
inc
insb
stos
add
enter
jecxz
outsl
mov
test
push
cld
add
or
lahf
push
adc
mov
sub
rcrl
and
fucomip
jecxz
call
addl
pop
mov
mov
scas
pusha
sbb
clc
mov
jecxz
add
mov
bound
mov
jge
push
ljmp
sarb
xor
push
cmp
cmp
mov
push
aaa
out
xchg
jne
dec
pop
mov
mov
loopne
loop
xchg
cltd
sbb
sbb
sub
jl
cltd
popa
cmpl
fimull
js
pop
jbe
ss
decl
stc
adc
xchg
pop
add
int3
pop
mov
pop
sahf
sbb
lret
lret
add
xchg
sbb
mov
jge
inc
push
xor
arpl
mov
aad
pop
xchg
cmp
push
cld
cmp
push
cld
fistpll
loope
pop
xchg
aaa
mov
push
std
imul
jp
or
or
sahf
rorb
fadd
push
test
cmpsb
pop
adc
and
cmpsl
push
sub
pop
lahf
dec
mov
data16
xor
jbe
clc
xchg
or
mov
lret
add
scas
loop
aaa
dec
inc
push
cld
cli
arpl
or
jle
dec
sbb
adc
mov
cltd
lea
or
mov
imul
ja
icebp
ret
ss
sbb
ror
sbb
inc
add
mov
es
lds
and
out
sti
sub
shl
and
dec
cmp
add
into
adc
rcll
clc
es
lahf
movsl
cwtl
test
pusha
repz
out
push
sbb
clc
sub
aam
insl
fstl
push
sub
jmp
aad
sbb
or
push
xchg
iret
dec
lret
std
dec
dec
enter
add
or
shlb
or
in
ss
fcoms
negb
bound
and
cld
add
and
data16
add
pop
mov
xchg
aam
mov
sbbl
mov
bound
jg
in
test
in
in
sbb
out
jae
mov
mov
in
cltd
ret
xchg
mov
les
cmp
test
cmovl
or
mov
mov
jp
pop
pushf
leave
xchg
cwtl
cmp
dec
lods
subb
rclb
popa
xchg
fimull
pusha
mov
sub
dec
xor
cmp
das
xchg
dec
or
daa
and
lock
outsl
call
pop
sbb
xchg
shlb
dec
imul
adc
fcmovnb
cltd
mov
xchg
jnp
into
sub
out
jecxz
or
pmuludq
pmuludq
test
mov
xor
enter
push
jg
addr16
and
push
lret
ss
push
sub
mov
xor
js
xchg
daa
imull
in
cmpsl
pop
add
sub
cltd
data16
push
imull
xor
sar
adcb
sub
mov
mov
mov
loope
pusha
sbb
movsl
lods
cmp
inc
and
xchg
insb
out
enter
push
xor
bnd
xor
insl
cmp
and
aas
into
int
das
and
std
dec
or
pop
xlat
rcrl
xor
dec
fxch
pushf
push
mov
test
cs
xchg
add
sti
movsb
mov
fldenv
clts
lods
pop
sub
fstps
mov
pop
dec
push
lods
int
push
fists
lahf
in
jbe
mov
sbb
mov
sub
mov
dec
xor
sub
and
cmp
sbb
dec
cli
sahf
mov
and
mov
shlb
jbe
les
pop
ds
cltd
mov
inc
inc
and
mov
adc
insb
cltd
mov
lahf
add
pusha
cmpsb
ss
aam
bound
out
fidivrs
sti
push
push
pop
jno
jmp
movsl
insl
fdivs
aam
mov
dec
inc
out
shrb
jl
repnz
dec
jmp
popa
sub
mov
push
xor
sbb
push
lahf
aas
pop
dec
mov
sub
int3
ret
jl
mov
imul
pop
lods
psubsb
pop
inc
xchg
sbb
xor
or
mov
js
dec
sub
icebp
mov
pusha
dec
inc
adc
out
hlt
ret
mov
dec
mov
cmc
cli
leave
repnz
sub
bound
cmp
or
stos
pop
fldcw
into
xor
aad
pop
in
mov
movsb
ja
mov
sti
dec
je
jge
popa
insb
cmpsl
add
push
sti
cld
sbb
mov
stos
jle
aad
insb
inc
xchg
pop
in
adc
outsl
movsl
test
and
popf
shll
dec
dec
stc
adc
insb
mov
push
or
rcrl
addr16
test
xor
fdivrl
rcr
push
xor
sbbb
aas
mov
and
cs
sub
inc
in
jmp
mov
push
xchg
mov
cmc
mov
sbb
dec
jns
mov
xor
mov
sbb
cmc
loope
cmp
mov
pop
xor
sub
fmull
xchg
aam
daa
gs
push
xor
int3
cld
js
shrb
sbb
icebp
ret
jle
jns
mov
mov
sti
hlt
int3
pop
xor
push
ret
sbb
pop
sub
mov
ja
pusha
imul
es
xchg
and
sub
push
xchg
mov
cmpsw
push
xlat
mov
mov
mov
dec
lret
push
mov
pop
popf
sbb
lret
imul
lock
cmp
shll
or
pop
cmpsl
or
scas
les
sbb
jecxz
inc
insl
pop
stos
push
mov
clc
rcll
push
cmpb
popa
mov
stos
daa
icebp
and
add
jp
mov
je
jb
push
cli
dec
pop
iret
fidivl
lock
dec
rol
ficoml
or
jp
pop
adc
xor
sub
and
jo
mov
sub
dec
fidivrl
out
imul
inc
xchg
pop
cmpl
and
mov
push
rorb
mov
xor
shlb
jl
push
lret
scas
cs
sub
or
add
orl
jns
mov
dec
sub
cmpsb
add
mov
xor
hlt
add
mov
gs
inc
imul
jg
pop
jg
repz
sbb
push
jecxz
outsl
mov
cs
test
sub
inc
cltd
jge
cs
lcall
push
mov
dec
lea
inc
jp
into
sbb
cmpb
mov
xchg
ret
sub
shlb
es
push
nopl
mov
in
sbb
icebp
sbb
iret
loope
sub
aam
cmc
inc
pop
popf
imul
add
jns
sbb
rorb
pop
inc
sub
pop
add
mov
int
xchg
loopne
jns
in
int
hlt
fwait
std
mov
jb
stos
sti
sbb
ljmp
das
clc
lret
aam
sbb
cmp
idiv
adc
js
lcall
dec
jo
mov
mov
cmpb
jp
test
fiadds
cmpsl
ljmp
call
xchg
ret
cmp
icebp
and
sub
and
jne
outsb
cltd
adc
jp
and
sbb
add
jns
roll
out
cmp
mov
call
mov
testl
cmpsl
push
push
lret
js
or
lock
push
int3
shll
cltd
or
mov
mov
add
sarb
fiaddl
sbb
pusha
sub
sub
jle
test
lds
sbbb
lcall
insl
mov
into
fwait
sbb
js
mov
add
mov
lods
sar
rcll
sbb
stos
dec
mov
out
shr
loopne
adc
and
arpl
mov
cmc
sbb
in
pusha
in
mov
xlat
add
outsb
jno
cwtl
mov
sbb
addr16
dec
leave
cmp
mov
xlat
or
mov
scas
xlat
mov
mov
mov
lahf
inc
mov
imul
es
test
jl
jmp
sub
test
inc
xchg
cmp
xchg
mov
sub
jns
or
in
lods
mov
shlb
push
mov
sbb
sbb
sub
jg
adc
loope
or
lcall
dec
ljmp
push
dec
mov
insb
movsb
iret
sbb
pop
rcl
shll
orl
arpl
int
mov
mov
mul
dec
adc
pusha
insb
std
jle
pop
xor
jg
shrl
add
mov
cmp
xchg
mov
lahf
hlt
cmp
roll
mov
and
inc
pop
add
sbb
out
dec
jg
cmp
sbb
lods
cmp
dec
enter
repz
push
adcl
jb
mov
adc
pop
jbe
outsl
jge
jge
popa
xor
les
push
inc
lcall
cmp
adc
push
sbb
or
xchg
push
ljmp
dec
sub
fs
mov
fistps
push
lcall
push
repnz
xchg
lahf
xor
bound
iret
lea
sub
fstp
mov
pop
call
ss
je
mov
out
dec
xchg
out
je
les
mov
mov
mov
sti
xchg
push
or
pusha
test
mov
push
sub
inc
pop
leave
cmp
out
sbb
test
xor
call
fists
inc
insl
out
lea
iret
xchg
sub
repnz
cmp
add
xor
lods
xor
imul
in
mov
adc
icebp
and
inc
inc
push
es
pop
jecxz
testl
repz
xchg
hlt
repz
repz
mov
std
pop
jge
das
es
rclb
jbe
mov
test
popf
pop
lods
clc
xchg
in
mov
stos
xchg
xchg
lea
loopne,pt
mov
imulb
aaa
les
or
lock
mov
inc
xchg
xchg
push
sub
inc
push
es
mov
ja
push
andb
push
incb
ja
xchg
xchg
stc
xchg
pop
add
pushf
push
jecxz
mov
lahf
lock
out
or
out
and
pushl
das
ljmp
and
adc
xchg
xchg
jl
setl
xlat
js
cmc
xchg
pop
xlat
popf
dec
push
pop
mov
push
fwait
cmp
inc
imul
test
inc
dec
or
loope
stc
push
or
xor
lods
cmpsb
loope
dec
xor
push
push
in
or
adc
add
ja
mov
das
stos
insb
pop
adc
pop
add
mov
xor
push
gs
dec
sbb
jbe
imul
decb
cmp
adc
mov
enter
mov
lods
mov
imul
add
out
push
loop
mov
ret
dec
adc
mov
mov
shrb
push
inc
popa
into
or
shrl
inc
jge
jge
ficoml
sub
xchg
cwtl
dec
gs
cli
jmp
dec
stos
and
push
xchg
mov
mov
lock
lock
inc
inc
jnp
pop
cwtl
push
imul
lock
push
jbe
adc
addb
pop
xlat
sub
ljmp
inc
sub
hlt
cmp
or
int3
movsb
lock
dec
outsb
sub
stos
leave
fildl
negb
mov
gs
clc
js
adc
movb
push
test
test
dec
xor
jnp
in
adc
int3
sbb
insb
cmp
dec
xor
ds
and
fcomps
ss
jecxz
shll
pushl
jo
mov
loope
scas
push
xchg
jle
pop
int3
xchg
pop
jl
mov
mov
jo
adc
das
aad
lea
mov
lret
push
dec
adc
push
shlb
nop
push
inc
push
fidivl
fmul
ljmp
lods
xor
add
pop
and
cmpsb
add
lock
xchg
cmp
dec
cmp
jo
hlt
movsl
popf
jns
add
add
fwait
and
out
into
xlat
mov
dec
mov
dec
into
aaa
shlb
roll
jae
jo
inc
int3
or
or
cltd
mov
sbb
xchg
aaa
loopne
loop
jge
push
add
imul
mov
pop
mov
inc
pop
cwtl
mov
lods
mov
or
xchg
mov
fistps
movsb
xchg
lea
mov
call
addl
mov
cmp
clc
push
add
scas
push
or
ss
mov
lcall
dec
bound
jle
es
stc
and
dec
jg
mov
adc
sub
push
xor
icebp
dec
xchg
add
es
adc
ljmp
add
data16
repnz
cmpsb
add
dec
mov
in
add
lahf
jne
popa
dec
pusha
jbe
or
jbe
jmp
mov
pushl
xchg
popa
cli
mov
jbe
push
sub
mov
std
repz
loope
out
lret
outsl
mov
ss
mov
sti
fmull
cld
mov
pop
into
in
mov
adc
mov
pop
push
sbb
sub
push
jo
sbb
cmp
push
sarl
out
pop
sub
aad
test
xchg
lahf
test
lcall
shl
xlat
insb
dec
dec
cmp
inc
xchg
scas
ss
or
notl
xchg
jmp
dec
xor
andl
push
in
popa
clc
cmpsl
mov
pop
cmc
cltd
frstor
ret
or
aaa
rcrl
das
jbe
filds
sub
xor
movsb
das
and
gs
bound
pushf
cmp
int
push
fdivl
rorl
fsubp
rorb
mov
or
jo
adc
std
pushw
test
mov
in
pop
push
mov
adc
xchg
inc
test
mov
pop
and
test
in
mov
cmpsb
sti
cmp
out
push
inc
add
mov
pop
cld
mov
pop
idivl
push
es
sti
jnp
in
lds
inc
gs
pop
mov
out
outsl
hlt
push
cmpl
dec
call
aas
sbb
pop
scas
in
test
mov
mov
xchg
mov
adc
jo
call
arpl
adc
aas
xor
pop
and
lea
adc
std
pop
jecxz
popa
in
repnz
inc
inc
mov
jmp
lret
sti
dec
in
lcall
and
mov
jge
dec
cwtl
rorb
es
cmp
mov
pop
subl
aas
sub
sbb
out
imul
jle
mov
out
shl
dec
mov
cli
cmp
lret
lods
or
cmp
mov
fidivl
pushf
shl
push
ret
int
sub
lea
fwait
push
fmul
mov
ss
mov
mov
cs
es
aad
mov
cmp
int
cmc
xchg
or
ljmp
mov
or
in
out
pop
push
xchg
gs
fmuls
repnz
jge
push
repnz
in
fnstenv
sahf
cwtl
and
fcomip
nop
xor
sub
fnstcw
divb
xchg
cmp
mov
in
popf
cli
ljmp
adc
xlat
inc
mov
jmp
lret
cmp
cli
inc
jge
push
sbb
push
xchg
loope
mov
arpl
mov
mov
je
cmpl
iret
vpunpckldq
mov
incb
pop
shrb
cltd
daa
gs
push
adc
stc
mov
sarl
lds
shlb
inc
and
pop
xor
shrl
fadds
adc
jne
pop
and
mov
icebp
scas
out
mov
lcall
fistpll
mov
cli
aad
jb
in
sbb
inc
push
cmp
dec
js
or
inc
cmp
insb
mov
jmp
pop
movsb
lcall
cs
in
cmp
xor
cmp
pop
xor
xor
pushf
or
jecxz
and
jmp
cld
subb
out
sub
xchg
lock
int
js
addr16
xlat
and
cltd
push
aas
mov
cmp
sahf
sbbb
sub
fldcw
inc
sub
xor
sub
pusha
xor
xchg
stos
mov
pop
arpl
in
push
jge
ret
mov
loope
mov
inc
lret
dec
loope
sbb
pop
push
add
divb
mov
mov
das
mov
imul
ds
icebp
push
scas
test
inc
aas
mov
ss
sub
xor
dec
bound
aad
ja
fsubr
sub
pusha
pop
in
dec
dec
mov
adc
jmp
inc
jb
lds
ja
jne
mov
xor
das
pop
out
xchg
in
in
push
jge
test
dec
and
test
sar
jae
scas
lcall
adc
movsl
mov
xchg
lahf
leave
sahf
sbb
mov
sub
test
xchg
push
out
sbb
dec
push
jbe
fimull
or
mov
arpl
nop
fnstsw
sub
mov
mov
sub
mov
ja
out
mov
dec
cli
dec
push
or
inc
xchg
ret
mov
andl
sarl
push
orl
xchg
add
and
pop
add
mov
inc
adc
mov
out
add
int3
fnstcw
jo
push
jno
shl
mov
jecxz
xchg
sub
int
movsl
leave
aas
rcrb
arpl
inc
out
mulb
lds
and
out
sbb
mov
xchg
fsts
scas
outsb
clc
pop
test
push
mov
push
mov
jp
mov
cmpsl
jae
mov
mov
cmc
jns
dec
cmpb
in
pop
mov
outsb
adc
subl
cmp
xchg
test
sbb
xor
ret
out
push
dec
enter
xor
movsl
mov
les
mov
mov
sub
and
sbbb
sub
push
scas
cmpsb
and
pop
dec
and
mov
lds
sub
sarb
xor
sub
out
jle
sbb
sti
movsl
scas
aam
and
int3
jno
dec
out
jle
xchg
xchg
daa
jge
repz
scas
push
or
popf
mov
dec
push
call
daa
mov
pop
add
lods
addr16
lds
jno
jmp
hlt
ret
mov
scas
aam
stos
movsl
sets
dec
cmp
fisubs
stos
inc
jae
lea
cmp
imulb
cs
shrl
fildll
sub
add
jl
in
and
adc
jmp
or
loope
pop
pop
inc
or
iret
ret
jl
sbb
flds
aad
sbb
ds
pop
cwtl
sub
cmp
add
jne
cli
lahf
dec
test
dec
std
mov
jbe
stos
aam
mov
icebp
mov
imul
or
xchg
popf
mov
xchg
movb
popf
cwtl
iret
push
fimuls
shrb
lds
jb
gs
sbb
subb
cmp
and
sti
adc
rcll
push
cmp
out
mov
faddl
and
data16
lods
mov
or
xlat
sarb
xchg
sub
inc
inc
sbbb
or
into
inc
repnz
or
lret
inc
test
in
das
mov
dec
and
addps
movsb
mov
ja
lods
popf
and
push
adc
aam
lcall
out
jb
mov
adc
mov
dec
xor
sbb
xchg
pop
push
xor
and
bound
mov
inc
test
dec
xchg
jb
call
lcall
mov
cmp
mov
testl
mov
dec
ret
inc
dec
cmc
sub
jecxz
movsl
add
inc
lahf
dec
aaa
scas
cmp
imul
and
aam
repz
testb
es
cmp
xorb
add
scas
into
pop
in
push
aad
daa
mov
imul
cmp
dec
bound
and
jbe
inc
les
imull
orb
jb
pop
js
aad
or
ret
je
out
jo
les
jp
hlt
xor
or
push
sbb
lret
repz
xchg
push
push
xor
fcmovu
sub
dec
xor
or
jae
xchg
mov
pop
dec
ret
adc
dec
push
push
ja
jl
cld
adc
adc
out
les
cmc
jg
ljmp
filds
enter
xchg
mov
jp
rcll
ss
repz
lods
or
fdivrl
mov
adc
ret
adc
imul
inc
insl
mov
stos
inc
cmp
stos
loop
push
ds
cli
jno
add
or
sahf
movsl
jmp
iret
add
rolb
stos
add
mov
mov
nop
push
gs
mov
lcall
out
and
into
inc
imul
pop
add
adc
leave
test
jecxz
js
loop
aaa
ljmp
xchg
shrl
dec
push
jb
sub
add
in
push
fisttpll
sub
sbb
xchg
push
enter
cmp
movsb
dec
fdivs
fisubs
sti
icebp
push
sbb
sub
sbb
std
out
adc
jl
xor
imul
sti
jb
sbb
cmp
ret
push
dec
push
push
out
call
int3
mov
repz
xor
sahf
jo
xor
mov
xchg
out
out
push
add
dec
test
jns
jae
and
inc
sub
xor
lcall
push
cmp
mov
movb
popf
or
jp
into
lret
xchg
mov
lahf
ljmp
cmp
icebp
push
outsb
cld
push
data16
adc
inc
jns
dec
push
mov
cwtl
subl
mov
bound
insl
jmp
out
mov
mov
leave
ret
lahf
jne
push
sbb
imul
dec
mov
ljmp
flds
mov
cld
in
aam
sbb
rclb
stos
sbb
cmpsl
rcll
push
xor
into
mov
cmc
movsb
sub
push
or
jg
or
push
lret
lahf
sbb
sub
xchg
dec
xchg
cs
pop
fistpll
scas
mov
in
mov
fstpl
push
mov
mov
stc
sahf
sahf
or
xor
jle,pn
sub
add
xchg
imul
mov
lahf
inc
outsb
or
movsl
loope
testb
inc
repnz
daa
push
scas
inc
jmp
popa
mov
push
loopne
daa
and
push
sahf
push
lcall
cmpsb
inc
enter
pop
inc
mov
mov
and
addps
andb
aam
push
insl
imul
push
mov
xor
loopne
xchg
adc
fs
adc
ret
lahf
je
ljmp
hlt
push
mov
cmp
divl
xor
mov
jecxz
lret
jmp
addl
lret
test
mov
adc
xor
jb
sub
mov
outsb
outsl
repz
jb
cmc
data16
aad
inc
pop
ficompl
push
add
xor
pop
inc
xchg
inc
push
push
pop
rcr
int
sbb
sbb
into
stos
daa
jbe
jle
jp
jo
out
mov
or
cmp
std
add
das
cwtl
nop
push
fmull
loopne
fcomps
repnz
dec
into
or
call
cmp
iret
push
bswap
inc
xorl
sbb
jp
fbld
orl
sti
adc
mov
lcall
movsl
xor
mov
aaa
add
pop
mov
outsb
inc
aad
inc
or
push
mov
and
inc
lret
pop
cmp
decl
push
xchg
adc
sar
xor
lcall
xorb
or
out
out
daa
pop
sti
sbb
pushf
jns
inc
jns
outsl
pusha
pop
out
cs
push
mov
in
inc
not
jo
jnp
popa
push
mov
popa
ss
xchg
xor
ficoml
adc
icebp
mov
repz
mov
xchg
loopne
jns
rcrl
test
movsb
out
fs
push
jo
fistl
push
sbb
sahf
mov
pop
cmp
jae
testb
adc
xchg
xor
adc
mov
data16
dec
sbb
xchg
push
dec
and
mov
dec
adc
mov
mov
cwtl
mov
sbb
pop
inc
and
pop
aad
mov
sbb
popf
cmp
adc
cmc
lods
mov
cs
cmp
or
mov
daa
adc
or
cmp
lods
gs
cli
jp
repnz
inc
xor
outsl
js
mov
in
pop
cmpsl
mov
xor
mov
add
in
push
sub
add
andl
lods
lds
lahf
jne
sub
enter
push
pop
je
mov
jno
mov
push
adc
rcll
imul
push
push
mov
and
jnp
outsl
sbb
push
sbb
inc
cltd
push
dec
lret
lock
int3
mov
sti
out
leave
daa
clc
adc
push
pop
int3
out
pop
stos
mov
xor
push
mov
pop
cmpsl
mov
imul
imul
add
pop
push
loop
leave
aas
push
shlb
mov
repz
ficompl
imul
scas
stos
cmp
and
xorl
je
lock
xor
popf
lock
mov
jg
push
cmp
test
push
and
call
pop
lods
cltd
xor
pop
lret
sbb
cmp
pop
xor
loopne
mov
mov
sti
in
insb
inc
pop
test
and
jecxz
out
jne
cmp
shlb
dec
pusha
jno
adc
mov
inc
incb
dec
mov
add
fnstenv
push
xchg
inc
lds
mov
repz
fisttps
dec
in
sahf
adc
out
xchg
pusha
jecxz
pop
ret
lds
lds
jl
cltd
daa
stc
mov
stc
jge
inc
mov
push
movsb
mov
loope
jno
jp
or
cltd
pop
loopne
cmp
cmp
cmpsb
jb
or
push
pop
out
outsl
aas
in
jbe
loopne
dec
jecxz
cmc
sub
xchg
loopw
sbbl
out
pushf
add
gs
out
xlat
inc
ljmp
in
notb
pop
aad
movsb
mov
lods
push
pusha
mov
push
test
ror
jbe
sbb
inc
hlt
dec
cmp
dec
inc
push
add
lea
fnstcw
aad
pop
stos
lea
push
mov
inc
leave
aad
mov
mov
lahf
das
dec
add
popa
shll
lds
aam
pop
fadds
cmp
mov
xchg
adc
in
test
lret
ljmp
cmpsb
xchg
or
ljmp
out
outsb
in
rclb
xor
in
cmp
arpl
pop
testl
jno
and
pop
push
jecxz
xchg
gs
out
push
cmp
and
mov
push
cmc
add
sti
inc
sub
cs
pop
push
jae
push
push
sub
pop
imul
push
mov
jno
add
or
lret
enter
jg
xor
jecxz
and
sbb
push
adc
and
daa
faddp
imul
adc
into
scas
mov
pushf
mov
lods
push
pop
mov
lret
loop,pn
sbb
aad
fidivl
es
add
add
nop
cli
aam
adcb
adc
add
pop
adc
jae
inc
movsl
jb
push
test
push
mov
inc
cmc
addl
movsb
loopne
cmp
jmp
out
mov
cwtl
mov
movsb
ds
fcmovnb
fs
xor
mov
pop
xchg
mov
dec
adc
sbb
aas
shlb
jge
inc
fs
xor
sbb
push
loopne
push
pusha
test
js
jp
ss
movsb
scas
mov
jge
pop
insl
aam
inc
mov
push
or
push
ss
bound
adc
test
dec
lock
adc
jecxz
xor
add
cmp
test
inc
mov
ljmp
lret
arpl
ficomps
gs
stos
inc
xchg
add
mov
enter
pop
shr
std
sbb
repz
outsb
das
aad
andl
jb
out
andl
mov
es
dec
dec
dec
mov
mov
loopne
fiadds
bound
mov
mov
sub
fs
inc
pop
lods
sub
pop
rorb
fnstenv
pop
push
sahf
in
addr16
icebp
lods
es
xchg
pushf
iret
dec
fisubs
js
jno
mov
repz
repz
fdivs
adc
add
aaa
pop
adc
push
pop
inc
aad
mov
lahf
hlt
lret
fadd
sub
ds
adc
sbb
stc
push
je
fs
lods
pop
push
ds
adc
jne
mov
ret
pop
movsl
lds
jg
xor
outsb
mov
daa
lret
loop
mov
cmp
push
or
sbb
xchg
icebp
adc
inc
and
shr
jnp
fcmovnbe
mov
dec
pop
call
jbe
cmpsb
sbb
psllq
pushf
or
ds
jno
push
push
scas
aaa
jmp
fwait
dec
jb
in
inc
rclb
loop
dec
push
inc
mov
xchg
mov
xor
xchg
into
lods
xor
adc
out
cmc
mov
stos
outsl
enter
in
pop
test
push
ret
loope
loopne
jo
rcrb
shrl
push
mov
cmp
xchg
cmp
ljmp
push
popa
movsb
jns
nop
pushf
out
insb
loopne
daa
das
fsubrs
inc
bound
shlb
mov
mov
add
jmp
jb
xor
dec
mov
jg
dec
pop
daa
mov
aaa
dec
adc
cmp
andb
xorb
loopne
dec
dec
mov
inc
sub
inc
les
add
cmc
cmp
enter
ja
mov
fnstenv
mov
xor
sbb
rcrb
loop
and
dec
jnp
push
pop
jmp
les
mov
or
jns
or
inc
xor
fmuls
sahf
xor
push
and
mov
xor
sbb
push
sub
test
sub
ss
mov
xor
push
imul
hlt
inc
adc
mov
push
and
dec
inc
lods
mov
out
and
popa
push
lcall
popa
loop
pushf
insb
xor
ror
inc
sti
inc
aaa
mov
testl
xchg
int
pushf
mov
lret
xor
cmc
adc
stc
xchg
mov
stos
popa
jo
int
sbb
mov
ret
pushf
movl
bound
add
aaa
ss
adc
push
aam
pushf
pop
adc
mov
fs
mov
mov
outsl
ret
jae
dec
adc
stos
lock
xor
xor
pcmpgtw
adc
hlt
das
fs
dec
jnp
lahf
push
mov
sbb
sub
cmp
inc
out
inc
das
int3
dec
sarb
lods
xor
loopne
jle
jp
jae
ljmp
pop
add
mov
xor
in
mov
sarl
pusha
xor
mov
push
test
inc
xor
scas
lret
cmp
addr16
lret
push
jb
popf
data16
cs
aad
fimuls
jmp
xchg
shr
dec
pop
data16
add
jge
mov
jo
lahf
paddusb
lds
rclb
rcrb
fstps
fbstp
fidivl
xorl
enter
insb
xchg
cli
xchg
cmp
outsl
or
dec
add
hlt
rcll
adc
mov
adc
dec
sub
ucomiss
add
mov
test
mov
repnz
movl
inc
lds
pusha
mov
mov
sbb
bound
mov
xor
stc
fldl
jmp
outsl
mov
sub
leave
in
jp
stos
and
scas
js
loopne
iret
push
jo
mov
and
xchg
push
addb
mov
adc
adc
imul
pop
adc
inc
xchg
sub
lock
mov
xadd
pop
inc
xor
out
mov
xchg
pop
cmpsb
mov
movsl
fs
mov
ljmp
pop
adc
inc
std
jmp
and
addb
test
xor
test
push
cmpsl
add
pmaddwd
sub
add
mov
mov
scas
push
test
push
push
pop
pop
data16
jno
and
arpl
cmpsl
and
xchg
adcb
or
addr16
rorb
sub
jae
std
scas
cmp
jmp
mov
hlt
lea
aas
mov
and
push
jmp
jl
ss
idiv
mov
push
mov
sbb
popa
mov
adc
inc
outsb
mov
stos
push
mov
cltd
lcall
or
les
jns,pt
dec
hlt
mov
rolb
push
cwtl
jo
push
adc
rcrb
add
push
movsl
fsubrs
cld
out
dec
call
mov
dec
shr
leave
sub
rclb
les
std
idiv
xor
or
inc
imul
inc
std
popf
cli
push
cltd
popf
scas
and
push
xor
push
lock
aas
lcall
or
jmp
xchg
cmp
push
add
fistps
sahf
adc
mov
mov
sti
loope
sub
pop
repnz
enter
scas
adc
push
fsub
fcmovnu
push
jmp
mov
push
imul
push
push
popa
jo
leave
sbb
pop
sub
xor
xchg
push
jno
std
add
mov
loop
mov
int3
leave
xchg
rolb
add
xchg
shrb
push
pop
and
mov
xchg
loopne
mov
in
push
and
mov
out
mov
sub
outsb
shl
mov
dec
mov
push
das
push
add
cmp
dec
push
mov
sub
test
sbb
pop
leave
mov
fcomi
decl
fsubr
sbb
loope
or
sub
push
js
ficoml
outsb
jae
sahf
enter
cld
mov
push
xchg
lock
aad
and
fwait
insb
decl
dec
popl
dec
popf
sub
inc
dec
mov
sub
pop
inc
xor
inc
push
jge
subl
adc
add
or
es
mov
mov
into
std
ret
movl
add
or
inc
pop
push
jbe
adc
out
mov
add
lea
js
mov
inc
and
push
std
inc
cmpl
jle
mov
stc
scas
add
cmpsl
fwait
lods
cltd
sbb
je
movsb
jbe
jo
lods
insl
in
xchg
repz
mov
cwtl
jnp
pop
jmp
test
mov
push
xchg
aam
adc
jmp
arpl
mov
jns
imull
in
sbb
jg
xor
mov
sbb
and
add
mov
jae
ret
cmpsl
xchg
ret
lcall
shr
xchg
shlb
adc
mov
jbe
xchg
add
xchg
mov
mov
jp
mov
xor
adc
sahf
gs
push
cltd
into
sbb
mov
pop
scas
fwait
andb
jnp
jge
insl
mov
out
dec
xlat
mov
js
pop
negl
rcrl
dec
adc
or
fistpll
fs
adc
dec
jns
ds
sarb
fwait
lock
out
push
loop
cld
cmp
call
in
dec
xchg
scas
ja
xchg
cwtl
testb
and
mov
cmc
pop
mov
push
or
scas
test
cltd
adc
and
mov
movsl
mov
loope
std
fucomi
addb
mov
hlt
jge
jp
xchg
imul
xlat
push
sub
mov
or
mov
cmc
mov
cld
push
out
cwtl
pushl
imul
pop
fcomip
dec
sbb
mov
lahf
xchg
xor
outsl
adc
clc
in
sub
inc
mov
or
into
dec
pop
add
mov
insb
mov
out
jno
pop
shll
mov
mov
shll
push
xchg
or
lret
pop
push
lea
add
mov
pop
es
jmp
iret
aam
dec
inc
sub
repnz
popf
loop
add
pushf
sti
push
out
sarb
xchg
dec
negb
lods
inc
push
sysenter
push
add
push
adc
push
xor
cmp
sbb
orb
cmc
cmp
adcb
add
sub
jno
push
xchg
imul
add
out
aaa
mov
lret
cld
nop
mov
rorb
jo
ljmp
add
sub
test
insb
push
mov
call
insl
or
push
icebp
inc
ficomps
nop
xchg
idivb
aaa
movsb
jns
ljmp
jecxz
push
inc
mov
outsl
int3
insl
jno
je
or
loope
pop
mov
lahf
outsb
pop
scas
insl
dec
sub
mov
xor
dec
sub
push
push
cmp
jae
shl
and
dec
enter
leave
xor
cwtl
addr16
and
add
js
sti
cwtl
out
jmp
jae
clc
add
push
out
insb
test
fidivs
jb
add
insl
or
dec
jne
push
push
test
loopne
lods
push
xor
jmp
iret
ret
adc
leave
sub
push
xor
xchg
rcl
scas
pop
leave
xchg
jecxz
jns
sub
cmp
inc
mov
test
cmp
mov
inc
adc
sbb
push
push
add
std
rdpmc
push
jnp
push
in
sarl
jae
ret
out
mov
jo
and
lea
cs
das
fcompl
add
sbb
cltd
cmc
adc
mov
mov
fnstenv
mov
into
inc
adc
mov
or
ret
out
in
xor
jno
xor
imul
fstl
in
jl
sub
inc
xchg
adc
pop
mov
add
repnz
leave
cmpsb
cld
jle
imul
push
imul
pop
addr16
pop
mov
inc
je
cmp
xchg
in
or
sub
movsl
pop
stos
shrl
aad
inc
push
ret
dec
pop
jae
arpl
jle
mov
test
push
pop
dec
mov
cmp
xor
jle
dec
pop
push
in
shlb
fisubl
out
xor
mov
or
push
paddusb
dec
gs
lret
sar
mov
iret
sbb
nop
xor
call
jb
lcall
sbb
aad
mov
jl
hlt
pop
popf
lret
or
mov
daa
inc
xor
inc
cmp
sarl
stc
insl
dec
add
outsl
and
push
mov
jp
rcrl
xor
enter
ljmp
in
out
xchg
les
mov
xor
popf
fidivl
test
mov
fs
xchg
sub
pop
mov
pop
xchg
test
mov
fidivl
jne
test
lds
push
add
mov
repz
pop
adc
testb
push
fs
mov
fldenv
sbb
and
inc
and
andb
mov
lahf
xchg
pop
mov
and
in
shlb
xchg
jno
test
movsl
and
and
xor
movsb
push
ret
stc
inc
xchg
nop
push
addr16
enter
mov
mov
push
in
xchg
inc
xor
rcr
pop
push
and
push
hlt
pop
int3
adc
fistpl
mov
xchg
mov
outsb
mov
jbe
fs
xor
loop
pop
cmpsl
add
adc
stc
iret
gs
jno
movsl
cmp
mov
dec
lock
cmp
test
fucomi
xor
mov
repz
xchg
les
les
or
mov
inc
stos
add
mov
imul
sub
jecxz
insl
or
negl
lcall
xchg
mov
pmaxsw
imul
push
sahf
inc
push
push
loope
dec
sub
fs
aas
aas
aam
aas
jb
mov
sub
in
xchg
lock
sbb
cli
fidivrl
icebp
lods
lods
jbe
push
xor
mov
mov
cmp
cwtl
jg
adc
add
pop
cwtl
pop
int3
jb
ljmp
pop
nop
roll
ds
es
cmpsl
sbb
cmp
pop
inc
ja
ljmp
add
out
out
out
outsb
je
jmp
pushf
fdivs
jnp
jge
cmp
push
cwtl
or
dec
fstpt
je
loope
mov
les
jl
jns
push
les
add
es
fcmovbe
movl
in
mov
xchg
shlb
sub
sbb
push
mov
loop
aaa
repz
mov
pop
test
dec
arpl
cmp
mov
xlat
sbb
dec
jecxz
jmp
lea
sub
cmp
daa
xchg
push
sbb
sub
cmp
mov
cs
mov
popa
leave
orl
fwait
lods
xor
mov
addr16
cmp
das
imul
cmpsl
sub
push
push
out
rorb
or
lock
sub
sub
xor
push
outsl
or
adc
fsubl
sbb
pop
aad
adc
cld
mov
shll
push
mov
div
sbb
dec
push
push
inc
or
out
jne
push
cmp
lea
sbb
popf
jg
mov
icebp
sti
pop
xchg
sarl
sub
icebp
scas
in
push
mov
xchg
dec
loopne
loope
pop
adc
iret
rorl
inc
dec
cld
push
fcompl
inc
aad
cmc
jo
call
leave
add
lods
fsubr
pop
pop
nop
fistpll
jns
xor
mov
jbe
mov
mov
rclb
jmp
push
xlat
int
cmp
enter
clc
bound
xor
pushf
jge
push
add
lret
jecxz
pusha
pusha
jno
lock
aam
mov
icebp
or
push
outsb
ss
inc
xchg
test
mov
push
lahf
out
out
jb
mov
cmp
ret
rorb
xchg
mov
mov
fisubrs
pop
cmp
cmp
stc
in
xchg
mov
out
data16
cld
mov
pop
negb
add
mov
sub
jp
inc
pusha
loope
mov
sub
nop
fisubs
adc
xchg
push
push
mov
ds
add
push
jno
popf
xor
lcall
ret
test
imul
nop
xor
xchg
xor
or
bound
popa
shlb
pop
insb
pop
xchg
or
mov
sub
sub
push
scas
push
jg
in
and
xchg
in
data16
mov
fs
cmp
dec
and
dec
das
sti
pop
adc
push
pusha
aas
xchg
rorb
sub
mov
lahf
fsubrl
ret
ja
dec
jge
mov
into
loope
and
cmpsb
xchg
aam
mov
and
pop
stc
ljmp
icebp
arpl
jbe
stc
adc
xor
xor
mov
inc
ret
nop
pop
fs
fisubs
push
rorb
inc
nop
test
jnp
mov
rcrb
jo
pop
pusha
cmp
enter
jp
arpl
jno
jl
aam
test
cld
inc
test
inc
sub
sahf
mov
and
out
or
testl
jbe
ret
daa
and
subl
std
pusha
das
sahf
subb
xor
jns
lods
cmp
mov
adc
lahf
dec
pushf
outsb
shrb
loope
je
les
xchg
xor
ret
inc
rcll
lahf
pop
inc
cmp
outsb
xchg
pop
mov
in
jns,pt
sbb
xor
lret
jb
ss
push
je
dec
jbe
jg
push
sub
lret
cmp
add
jnp
int3
testl
pop
ror
les
sub
mov
mov
gs
xchg
pop
popa
inc
add
xor
push
xchg
mov
pop
gs
jecxz
test
mov
into
in
or
sahf
cld
cmp
scas
aas
jb
ret
or
jmp
xchg
mov
and
and
push
arpl
or
test
xor
mov
negb
addr16
xlat
mov
stos
cmp
stos
ljmp
pop
stc
push
add
pop
sub
fnsave
inc
adc
sub
es
loopne
pop
lods
fistps
mov
cmpsb
pop
shrb
adc
push
mov
rcr
pop
outsl
sbb
mov
push
push
pusha
jl
mov
xchg
pop
pop
stos
gs
jge
iret
xor
mov
repz
sbb
call
jge
fmull
dec
sahf
xchg
loope
lret
pop
or
cmp
ds
orl
aad
outsl
xchg
jl
mov
pop
fucomip
ficomps
add
and
je
je
jbe
fcmovnbe
mov
mov
mov
mov
add
imul
data16
mov
repnz
jno
pop
jo
fchs
jl
sar
stos
lds
inc
xchg
cwtl
lahf
imul
push
cmpsl
xor
stos
add
push
pushf
xor
rorb
out
add
and
push
aad
add
xchg
cmp
outsb
sub
sbb
mov
cmp
or
sbb
mov
enter
fsubr
shrl
orl
es
add
add
in
rcl
ficoml
lock
movsl
in
mov
and
jbe
imull
test
fdivl
sbb
add
lcall
xlat
push
ffreep
jl
adc
mov
and
outsl
testl
enter
fwait
mov
pop
xchg
xor
mov
cwtl
adc
lds
mov
mov
xchg
cmp
loopne
jge
xor
fldl
xchg
test
add
push
loopne
add
push
int
shl
inc
jge
adc
lret
inc
stc
or
cltd
sbb
jmp
cmpsl
jne
jno
out
mov
leave
push
or
int
inc
popf
add
repz
cwtl
push
dec
clc
rolb
jmp
mov
icebp
test
adc
sub
loop
arpl
insb
xchg
into
ljmp
arpl
mov
subl
ret
pop
lock
stos
and
push
icebp
scas
test
mov
into
push
out
popf
das
aaa
cli
addl
jns
in
xchg
xchg
into
pop
test
js
adc
mov
cmpsb
ljmp
in
fcmove
daa
pop
loop
xchg
fmuls
jmp
imul
jo
inc
rolb
adc
xor
cmp
out
sub
mov
ds
push
aam
sbb
repnz
out
inc
stc
mov
in
sbb
ss
adc
scas
jne
jno
mov
mov
andl
in
add
push
jae
sar
loope
rorb
add
aam
stc
add
mov
xorb
outsb
dec
push
fwait
push
sub
xchg
mov
sbb
sbb
jbe
in
insl
das
aad
mov
andl
imul
lods
cmc
cmpsl
imul
push
fimull
dec
stos
pmuludq
add
lahf
cmp
popf
cld
in
pop
jg
sub
xchg
mov
fdivs
push
stos
clc
ds
addr16
sbb
mov
lret
or
mov
sub
jle
jl
and
jle,pn
loop
push
in
fsubs
add
and
fldt
addr16
xor
loope
hlt
add
ret
outsb
push
pop
sahf
negb
leave
shrl
mov
sub
mov
and
sub
scas
pop
daa
inc
inc
out
not
sbb
mov
in
inc
mov
arpl
mov
cmpb
iret
or
dec
in
xor
inc
roll
push
sub
cmp
faddp
push
insb
and
in
sub
sub
inc
mov
mov
icebp
lret
test
loop
popl
into
popa
test
cmp
inc
and
jb
clc
cmp
add
pop
jne
push
clc
fwait
jp
dec
jmp
dec
jnp
aam
lret
fnsave
fwait
scas
push
inc
addl
mov
lahf
scas
fidivrl
rorl
jne
rcrb
aaa
ror
xchg
add
les
mov
in
inc
xor
je
insl
rorb
sbb
sar
std
lock
call
or
ret
decb
imulb
pop
aaa
into
orb
jecxz
push
mov
addb
loopne
cld
stos
stc
inc
stos
aam
xor
inc
xor
mov
pop
sub
out
pop
cmp
sti
je
mov
push
push
cltd
fstl
mov
cwtl
outsb
mov
add
inc
lcall
mov
call
lea
dec
aaa
pop
push
jae
jb
arpl
dec
loope
ja
or
jo
lock
push
lcall
stos
jge
jne
sub
cli
jno
pop
mov
loopne
pusha
or
jae
xor
mov
xor
and
std
inc
cld
and
stc
popf
test
mov
cmp
mov
inc
dec
test
sbb
push
vsubpd
in
fsubrs
sub
xor
lret
std
fnsetpm(287
mov
ficomps
inc
push
aas
cmp
stos
add
mov
dec
dec
xor
xor
xor
pop
sub
jbe
jne
lock
loopne
pop
popf
mov
test
and
sub
dec
into
daa
clc
or
pop
jns
in
cwtl
js
das
pop
out
pop
out
adc
pushf
add
pop
dec
aaa
fscale
cld
sbb
fstpl
loope
inc
or
mov
pushf
sub
cmc
repz
std
ss
pushf
pop
lods
insb
cmp
bound
push
js
mov
sarl
sahf
fs
jne
cmp
mov
push
xor
jmp
inc
test
pop
cmp
jbe,pn
add
mov
cwtl
mov
mov
xor
pop
outsb
outsl
addr16
dec
std
sub
cmpsb
out
pop
nop
into
push
pop
xchg
add
shlb
push
jnp
inc
popw
inc
stc
aad
jp
cmp
sub
lret
and
pop
pop
iret
in
orb
and
pop
bound
xlat
or
ret
mov
sbb
add
cmpsb
loope
daa
shll
shlb
pop
aad
push
aad
jmp
mov
iret
push
xchg
and
leave
cmp
bound
cltd
movsl
fstl
jno
fsts
adc
hlt
ret
shlb
cmc
fcmovnbe
sub
and
les
inc
xor
xor
push
jge
imul
dec
mov
xorb
jns
xchg
jb
loope
ret
xchg
jl
fisubrs
xor
mov
and
popa
xlat
out
xor
call
adc
cmpsl
mov
ret
dec
push
cmp
sbb
add
test
test
and
ljmp
insb
sbb
cmp
mov
rclb
pop
jnp
mov
arpl
sbb
ljmp
pop
xchg
or
or
xchg
push
lods
cmpsl
or
jne
mov
dec
nop
pop
pushw
mov
mov
mov
and
mov
aam
mov
mov
sarb
mov
nop
jno
dec
outsb
inc
in
add
lret
cmp
jmp
pop
add
mov
push
mov
out
xor
dec
mov
mov
add
mov
cld
mov
mov
pop
cwtl
ds
mov
inc
imul
lds
add
addr16
sbbl
imul
pusha
mov
pop
leave
or
mov
jno
fldl
jbe
fstl
cli
sahf
push
pushf
pop
sti
in
adc
test
loope
xchg
mov
mov
imul
or
loope
stos
sti
inc
cmpl
je
and
es
movsb
xchg
inc
cmp
fs
rcrl
add
sub
fildl
sahf
or
aam
cmp
cmp
sub
ds
add
shlb
cmp
mov
jnp
or
inc
loope
pushf
sub
ss
in
jo
cmp
mov
mov
mov
jge
in
daa
mov
push
sbb
mov
scas
cld
movsl
in
into
inc
pop
cmp
loope
ret
inc
lods
jmp
cmpsl
out
jecxz
cli
jge
testl
lahf
and
add
das
insl
int3
pop
sub
hlt
sbb
mov
lds
es
sub
scas
and
adc
dec
push
cmpsb
mov
add
adc
loopne
mov
loop
xchg
xchg
fadds
mov
sahf
fwait
push
stos
adc
or
cli
in
cld
push
pop
mov
and
test
xor
daa
int3
ljmp
pop
jmp
icebp
sahf
and
pushf
sbb
lods
cld
pop
stc
outsl
sbb
in
jmp
pop
loop
popf
imul
add
fwait
or
out
mov
dec
into
push
rcrb
in
pop
cli
inc
dec
pop
adc
ret
adc
subl
sub
dec
and
cld
xchg
mov
pop
pop
ja
das
cs
sub
outsb
or
insl
ret
jbe
aas
sahf
popa
mov
in
aam
mov
mov
stos
jmp
push
pushf
rolb
les
sbb
and
pop
inc
xor
out
icebp
pop
test
mov
loopne
std
incl
mov
cmpsl
inc
or
popf
testb
mov
outsl
mov
mov
fwait
dec
imul
lcall
and
enter
adc
inc
insl
mov
in
mov
jge
mov
sbb
jae
dec
sub
in
sbb
xchg
iret
lret
lret
inc
mov
jo
bnd
mov
pop
pop
ret
dec
sbb
in
out
or
mov
lahf
xchg
lcall
out
out
popa
out
mov
mov
and
add
adc
ret
xchg
call
pop
fwait
cs
lret
push
mov
sahf
mov
test
mov
popf
xor
and
or
or
lock
push
mov
daa
outsb
or
push
cmc
add
lods
inc
cmp
xor
fwait
lods
cmp
dec
xchg
push
cltd
xor
mov
jp
rorl
push
sbb
mov
fisubrl
sbb
or
pusha
outsl
cmpsb
adc
aad
xchg
nop
push
mov
fidivl
stos
xorl
sbb
inc
adc
sti
cmp
out
sbb
outsl
clc
pop
mov
mov
mov
cmp
cmp
aam
adc
loop
sbb
filds
data16
mov
push
mov
test
repnz
dec
in
add
inc
mov
outsl
testl
out
xchg
or
dec
cmp
and
push
adc
dec
jne,pn
shl
jle
ss
xchg
rcl
xchg
inc
mov
pop
and
in
xchg
ret
or
mov
js
gs
lcall
sub
iret
xchg
stc
aaa
and
jle
mov
negb
and
imul
mov
xor
push
aas
fsubrl
icebp
test
jecxz
mov
pop
lods
add
xor
jmp
adc
cwtl
pop
inc
mov
sub
movb
xchg
add
sub
sahf
sbb
iret
enter
mov
push
stos
add
mov
aam
les
and
addb
add
jg
jmp
xchg
ljmp
sub
push
sbb
or
fsub
cwtl
cmc
pop
sub
iret
out
dec
enter
in
push
cmc
mov
pop
andb
pop
dec
pop
iret
insl
stc
push
push
add
mov
jne
stos
jp
dec
dec
cmp
stos
inc
frndint
mov
pusha
jge
mov
mov
in
mov
adc
mov
gs
aam
inc
pop
jg
sti
mov
jb
into
fmull
cld
and
dec
iret
scas
popf
cmp
mov
icebp
rorl
push
ja
clc
mov
out
bound
fimull
sub
add
push
sbb
add
mov
mov
fcmovne
out
repz
mov
or
fs
jl
out
jecxz
cmp
pushl
lea
cs
pop
outsb
dec
clc
dec
ja
popa
xchg
rol
dec
arpl
dec
mov
push
mov
repz
xchg
xchg
sub
or
loope
mov
cs
stc
test
pop
fidivl
or
sub
call
xchg
mov
insb
sbb
mov
and
ret
adc
xor
loop
fldenv
xor
out
xchg
mov
inc
inc
mov
mov
push
fiaddl
lea
mov
mov
xchg
inc
int3
in
out
jno
lods
in
xchg
xor
lcall
add
fimuls
clc
dec
adc
fisttpll
add
movsl
xchg
test
xchg
nop
dec
mov
add
mov
shr
js
lret
push
test
in
pop
push
hlt
lret
push
sub
je
idivb
dec
pop
jbe
ss
xor
pop
sub
xchg
dec
and
jg
icebp
ret
outsl
jnp
bound
dec
or
fisubl
cmp
shlb
mov
mov
popf
int
or
aad
repnz
movsl
test
push
lea
dec
inc
adc
inc
loopne
mov
movb
mov
cmp
add
lods
mov
mov
fcmovnb
test
inc
cmp
fs
mov
rolb
or
push
dec
pop
mov
and
leave
mov
cli
inc
in
sub
and
mov
imul
lcall
adc
into
lds
aaa
test
add
jge
mov
sbb
cwtl
and
call
pop
aaa
bound
jp
add
jbe
sub
cmp
stos
push
mov
sbb
lods
jbe
sub
pop
imul
sar
mov
lods
loope
push
pop
adc
imul
fcmovb
sub
adcl
xchg
or
mov
inc
or
dec
sub
mov
lods
mov
or
push
pop
lcall
push
fldt
mov
mov
and
adc
add
scas
loop
ds
mov
movsb
lea
dec
mov
cld
sub
insl
lods
hlt
sbb
clc
fisttps
repz
jl
inc
les
enter
test
cmp
xor
jmp
dec
pop
daa
mov
pop
jbe
sub
aad
cmp
lcall
addl
sbb
fmull
cmp
push
scas
test
mov
and
insl
xchg
in
popa
scas
sahf
inc
add
xchg
xchg
mov
bound
mov
sbb
sbbb
jb
pop
into
cmp
pushf
xchg
jecxz
jmp
dec
rorl
shlb
fwait
adc
push
mov
mov
pop
sub
ret
sub
add
push
xchg
call
add
scas
push
testb
iret
add
mov
cmpsl
pop
cmc
ret
ret
jbe
dec
test
adc
in
sub
jo
mov
xchg
mov
sahf
jecxz
add
or
call
push
mov
sbb
inc
cmp
push
inc
pop
cmp
mov
dec
shlb
outsb
cmpsl
movsl
shll
xor
mov
sbb
inc
pop
je
std
nop
mov
jecxz
sbb
test
je
shrb
jp
call
pop
push
add
sbb
push
push
push
lret
dec
or
pop
sub
and
test
push
mov
mov
popa
push
mov
inc
push
rolb
mov
popf
cmp
push
xorl
cmp
lret
jae
stos
xor
jb
xchg
jecxz
sub
cmp
cli
mov
inc
bound
leave
mov
pop
dec
decl
xchg
add
and
jne
push
mov
aaa
sti
pop
xor
addr16
pop
call
repnz
xor
mov
jb
adc
sbb
fistpl
fs
popa
cmp
lcall
xchg
jno
xchg
out
push
fbld
dec
out
cld
and
add
pop
jns
ljmp
jns
out
adc
nop
sub
xor
test
pop
inc
cltd
insl
jae
or
imul
and
push
and
and
inc
and
jg
inc
and
jmp
mov
xchg
cmp
cwtl
add
mov
cmp
mov
cwtl
add
divb
addl
fisubs
inc
sbb
jle
adc
in
push
fldlg2
mov
pop
aaa
sbb
aad
sahf
fadds
jns
add
in
mov
push
in
test
out
cmc
xor
jg
aas
fcoml
pop
pop
pop
inc
mov
cld
cmpl
lcall
xchg
and
jb
roll
icebp
scas
mov
adc
nop
add
pop
cmpsl
addr16
popa
mov
sbb
gs
fimuls
subb
adc
jns
into
aas
fsub
add
ret
jecxz
lock
orl
mov
mov
scas
dec
mov
pop
sbb
or
rorb
inc
lods
fsubl
les
dec
cmp
addr16
and
inc
lods
lock
push
pop
test
and
jecxz
add
push
out
mov
loopne
jmp
and
cmp
aas
mov
xor
es
push
ret
and
cmp
imul
aas
push
add
rorb
lahf
cmp
in
aas
sub
jecxz
dec
xor
js
cs
mov
jmp
cmp
xchg
add
inc
jmp
and
inc
clc
push
or
cli
int
mov
fimull
es
cmpsb
imul
lds
insl
lock
sub
jmp
fistps
arpl
pop
lret
and
xchg
cltd
xchg
out
push
pop
roll
sub
dec
in
stc
aam
push
lods
sbb
push
movsb
bound
insl
cmp
fdivs
pop
fisttps
imul
inc
out
pop
dec
mov
fdivr
jb
jne
iret
jle
xchg
in
jp
dec
fwait
push
cli
ss
or
arpl
jo
pop
stc
in
inc
mov
fbstp
and
jge
cmp
or
lods
lea
orl
or
dec
mov
iret
scas
scas
push
sub
dec
or
cmp
dec
mov
xchg
mov
stos
or
xchg
mov
rcr
lds
test
es
xchg
push
ficoms
into
push
mov
jno
push
sarl
out
xchg
pop
rcrb
sub
dec
jne
and
push
cmpsl
xchg
mov
or
fldcw
sbbl
hlt
adc
dec
push
jle
stos
cmc
dec
jge
sbb
clc
notb
adc
jns
rorl
pop
fmuls
mov
sub
adcb
jne
push
ret
xor
sub
and
adc
adc
div
in
push
stos
pop
cmp
adc
mov
ds
in
mov
aad
or
stos
loopne
decb
call
dec
jecxz
pop
pop
lods
in
cmp
push
push
inc
loop
repnz
cwtl
lods
movsl
in
pop
mov
imul
inc
mov
mov
add
xchg
add
aaa
xor
mov
dec
adc
xorl
jp
add
mov
lahf
mov
or
jmp
ja
cmovs
and
sub
dec
adc
outsl
rcpps
lods
test
cs
gs
inc
sbb
in
fs
lcall
mov
insb
or
rol
aad
ljmp
insl
fyl2x
inc
mov
mov
xor
cmpsl
mov
aas
push
mov
nop
mov
push
mov
rol
aas
adc
ljmp
movsb
lods
fwait
stc
mov
movsl
inc
cmpsb
faddp
jecxz
push
pop
ljmp
cltd
pop
adc
xchg
xchg
je
mov
sub
xchg
movsl
xchg
in
les
jg
stc
lods
faddl
js
cwtl
lods
call
inc
adc
or
pop
rcrb
in
int
mov
ljmp
mov
add
dec
mov
lcall
jne
cmc
sbbb
popa
pop
sbbl
cmpsl
ja
sub
jle
jp
mov
bound
xchg
mov
add
xchg
adc
push
mov
test
jne
ljmp
fs
mov
xchg
movb
mov
mov
pop
mov
iret
push
data16
pushf
imul
in
ss
sbb
cmpb
dec
fbstp
in
repz
je
dec
add
lahf
cmpl
sbb
xor
out
popa
push
je
jle
lahf
pop
insb
fldl
xor
dec
es
mov
push
push
lcall
testb
test
sbb
lds
movsl
push
push
and
inc
ret
stc
pop
lds
xlat
int
mov
xchg
xchg
stos
xor
push
sbb
sti
shlb
adc
subb
jno
push
mov
pop
adc
cmp
and
icebp
xchg
lock
roll
mov
pop
clc
sub
sbb
in
cmpsl
push
push
dec
mov
hlt
and
lea
xchg
loope
sahf
mull
lret
into
insl
dec
and
test
xor
inc
dec
pop
in
ljmp
pop
xchg
xchg
or
je
xor
in
aas
clc
aad
mov
pop
movsl
decl
in
xlat
push
and
mov
cmc
xchg
xor
aas
lock
test
or
add
xorl
and
mov
test
jno
or
and
bound
xor
push
inc
jne
arpl
mov
pop
mov
sbbb
dec
xchg
sahf
popf
mov
xchg
lds
lcall
outsb
pop
add
int
insb
hlt
push
dec
jp
iret
sbb
in
fwait
andb
mov
test
lods
dec
movhps
add
loope
fildl
mov
pop
pop
mov
aaa
arpl
cmpsl
sub
lock
sbb
jbe
sbb
adc
pop
mov
push
js
and
xor
dec
xchg
mov
add
add
dec
or
cmpb
test
cmp
xchg
jp
or
ljmp
insl
ficompl
mov
lret
jle
pop
mov
cmp
ss
mov
inc
or
dec
fs
add
mov
fcoms
cmp
mov
call
int
push
adc
jmp
cmp
dec
or
mov
mov
sub
insl
sub
mov
and
add
pusha
adc
stos
cmp
pushf
fidivrs
sub
cmp
xchg
cmp
pop
mov
pop
sub
lahf
je
lds
dec
xchg
pusha
sbb
dec
adc
out
aad
sub
mov
aam
addr16
mov
data16
js
test
jmp
mov
ret
int
xchg
cmp
and
and
aaa
jns
add
hlt
jno
pop
push
ja
and
mov
rcrl
add
int
in
add
and
or
std
das
sbb
pop
pop
add
push
aaa
jne
cmc
and
fldl
cltd
repnz
fsubp
ljmp
sbb
mov
push
test
mov
dec
outsl
sub
pop
je
mov
dec
mov
loope
mov
orl
pop
add
inc
fsubl
je
dec
loop
out
push
loope
or
push
es
mov
add
hlt
ljmp
jmp
sti
call
sti
out
xchg
jnp
mov
out
jp
cmc
lcall
jge
sub
bound
add
mov
cmp
jmp
add
jle
push
testb
ds
sbb
cmc
jmp
and
test
jae
sbbl
inc
jp
adc
aam
lock
std
push
and
inc
mov
mov
shlb
pop
inc
shll
push
jne
test
adc
sbb
push
pop
icebp
insl
sub
mov
addr16
dec
sub
loop
arpl
hlt
ljmp
popa
in
cmp
push
xor
jnp
mov
cs
lods
call
push
and
les
out
push
or
mov
jecxz
xchg
cmp
cmp
into
jne
loop
push
inc
jp
mov
fisubrl
pushf
sub
cltd
iret
movsl
cs
gs
jmp
mov
pop
and
js,pt
sub
and
repz
or
cmpsb
popf
in
dec
insb
jbe
movsb
mov
das
jb
dec
xchg
inc
inc
add
mov
ror
int
sub
sbb
jg
ret
fld
adc
lock
test
fimuls
movsl
inc
xchg
and
popa
leave
call
hlt
mov
call
popa
jae
mov
dec
je
inc
and
add
popf
lret
xchg
sub
lret
or
xchg
imul
xor
subl
mov
repnz
outsb
test
jl
pop
cmp
cmp
jns
test
sarl
jle
sbb
loopne
push
pop
hlt
lods
xchg
imul
stos
or
mov
jne
jne
aam
pop
hlt
pop
xor
aas
ret
test
fldt
xchg
jl
mov
mov
or
and
fldcw
mov
xor
jb
dec
pop
add
pop
mov
fisubrs
mov
fiaddl
mov
dec
sarl
mov
fnsave
sub
xor
inc
loope
xchg
les
scas
sub
jp
adc
addr16
add
push
push
push
xchg
xchg
fldl2t
cltd
cmp
gs
jmp
cmpl
rclb
pop
cmpsb
pop
sbb
mov
cmp
mov
add
push
dec
test
mov
add
int
int
adcb
test
jno
lds
xlat
ret
add
mov
inc
andl
das
pop
stc
fadds
inc
or
jno
ds
aaa
mov
nop
outsb
test
shrl
pop
cli
inc
xor
sub
mov
ljmp
pop
inc
icebp
push
lahf
mov
or
bound
push
addr16
shll
std
clc
xor
int
notb
jne
aaa
xchg
cmp
pop
jmp
mov
jl
lock
mov
fidivrl
jmp
pop
sub
dec
imul
mov
nop
pop
jg
xor
arpl
loopne
jle
rep
fdiv
sub
lods
or
push
stos
mov
cmp
cmp
shll
push
mov
test
outsb
test
push
mov
call
mov
arpl
and
jae
shrd
sbb
call
je
xor
addb
push
xor
xor
sbb
dec
cmp
andl
push
aaa
gs
jmp
les
jecxz
mov
es
sub
and
test
data16
add
lahf
sub
pop
scas
cmp
add
push
dec
mov
xchg
loope
lret
xor
jne
sbb
es
jne
loop
test
push
sbb
pop
pop
cmc
sbb
xchg
stos
mov
ret
xchg
cmc
into
add
fisubrl
dec
notb
jae
sub
push
pop
mov
test
iret
dec
pusha
adc
loope
lock
or
ljmp
pop
pop
dec
out
data16
fildll
fucom
xlat
pop
mov
and
enter
cmp
pusha
ss
es
push
jecxz
insl
aad
add
pop
dec
jg
xchg
adc
dec
mov
mov
push
lret
aad
addb
insb
testb
xchg
push
xor
and
subb
pop
lahf
popa
lock
in
pop
xor
push
lret
push
out
jae
loop
lret
shr
mov
je
dec
popa
and
rcll
push
pop
mov
ret
inc
lods
testl
mov
rcrl
add
pop
fimuls
outsb
clc
mov
fsubrl
jp
scas
out
in
mov
push
dec
xor
or
cmpsl
xchg
xor
lret
cmp
ja
cld
fmuls
loop
mov
shll
orb
or
push
mov
fs
lret
pusha
out
mov
push
add
cmp
inc
repz
mov
daa
lds
int3
movb
xlat
shr
cmpsb
int
in
movsl
ss
cmpsb
subb
dec
xchg
rclb
jl
push
outsb
xchg
push
mov
je
fsubrl
lcall
imul
xor
popf
mov
lret
arpl
ret
xlat
jbe
cltd
rorl
std
lea
push
ret
adc
cltd
test
and
frndint
stc
dec
sbbb
mov
mov
testl
xchg
xor
push
xchg
push
jbe
and
out
push
add
jl
jmp
into
repz
jb
pop
mov
xor
pop
ret
and
cld
push
imul
cs
dec
sub
cmpsl
mov
adc
pushf
scas
mov
push
or
imul
add
and
mov
pop
pop
add
inc
jg
push
fnstsw
dec
add
icebp
xor
cmpsl
enter
lds
cmp
stc
inc
push
cmp
cmp
lods
pop
mov
jne
ljmp
test
mov
jmp
sbb
jne
add
jmp
stos
xchg
xor
dec
mov
ljmp
aas
sub
cmp
int
inc
add
dec
inc
mov
shlb
mov
or
ds
arpl
nop
push
sbb
xor
pop
jge
mov
lea
xlat
jle,pn
xor
je
mov
mov
repnz
scas
inc
or
rcrl
shl
ljmp
scas
es
pop
in
mov
mov
sub
mulps
cmp
data16
andl
add
test
divb
lret
es
into
pop
cmp
stos
push
sub
xchg
cmc
outsl
lea
sahf
xor
jnp
push
loopne
lret
add
pushfw
push
pushf
and
je
cmp
std
dec
mov
js
add
mov
mov
xchg
and
push
cmpsl
loop
jp
loope
in
lock
pop
adc
dec
xlat
cli
jp
adc
cmp
sbb
lret
leave
dec
jg
fmuls
ret
adc
xchg
clc
repz
adc
imul
in
je
or
sarb
and
sbb
call
testb
inc
hlt
mov
fistpll
xchg
pushf
jmp
ja
lret
push
icebp
jno
cli
cmpsl
fstps
jp
mov
jge
inc
popf
outsl
in
mov
mov
pop
jg
dec
rcr
jbe
mov
dec
cmpsb
push
shrb
enter
push
cmp
xlat
add
or
mov
sub
in
negl
mov
iret
sahf
xor
cmp
jmp
xorl
fwait
add
stos
mov
out
into
lret
mov
push
int
fimull
add
pop
dec
sub
loop
push
int
adc
inc
pop
sar
fisttpll
movsl
aas
adc
pop
cmp
adc
stos
push
xchg
push
adc
jp
lea
lcall
xor
pop
outsl
fsts
xchg
or
mov
stos
add
mov
push
push
lahf
cmc
stc
xchg
inc
pop
out
cmp
mov
icebp
roll
test
outsb
aaa
and
pop
frstor
ror
or
mov
ret
idivl
fucomp
scas
jmp
aad
sub
and
scas
pop
call
sbb
loop
sbb
pusha
leave
mov
int
push
sub
mov
mov
mov
xchg
les
hlt
jb
sub
sbb
lods
pop
scas
lret
aam
mov
xor
push
mov
xchg
pop
or
mov
insb
add
test
daa
xor
jo
fxch
imul
mov
loop
cmpsl
dec
mov
lret
divb
sar
sub
jg
mov
or
enter
xchg
sahf
push
aam
adc
jo
sub
scas
or
push
xchg
iret
imul
out
cmp
mov
outsl
addr16
push
imul
cwtl
mov
xor
mov
out
mov
mov
addl
mov
mov
mov
cmpsb
or
fdiv
add
popf
and
jge
push
push
test
cmpb
sbb
sub
out
push
es
sar
xlat
cwtl
dec
jmp
xlat
jae
notb
mov
push
lds
leave
inc
mov
fldenv
add
pop
inc
ja,pn
lods
insb
mov
mov
je
and
jge
sub
inc
pop
inc
add
fiadds
jnp
mov
adc
push
adc
cmpsl
sbb
cmc
scas
fstpl
xchg
pusha
inc
or
adc
xor
xor
dec
fadds
sub
cmp
aaa
jns
or
jge
xchg
inc
adc
mov
adc
dec
mov
pop
cltd
mov
push
pop
sub
adc
stos
lret
shl
es
incb
in
out
les
test
loope
orb
jmp
jmp
mov
xor
xor
pop
shl
es
jno
repnz
insb
mov
xchg
xchg
popf
rol
xchg
cmp
aad
scas
icebp
scas
mov
jmp
jne
jno
mov
int3
pop
shll
or
jbe
jbe
hlt
nop
push
pop
mov
clc
cli
and
xchg
adc
mov
bound
cli
push
mov
test
test
std
push
lds
loopne
out
pop
mov
inc
imul
cli
gs
cmp
xchg
addl
dec
mov
mov
jne
rcl
cwtl
and
aam
or
push
in
adc
jecxz
sub
and
jns
pop
cmp
pop
test
iret
or
push
mul
adc
pop
dec
mov
les
xchg
add
es
fwait
xor
jae
les
mov
or
xchg
or
xlat
or
add
lret
repz
adc
push
lcall
jno
sub
and
js
rcll
hlt
sbbb
jae
add
jp
add
or
pop
psadbw
mov
push
cs
repnz
scas
addr16
mov
test
push
inc
sbb
sar
push
mov
cwtl
jp
out
ret
rol
shll
push
movsb
dec
mov
mov
push
xor
adc
les
adc
pusha
xlat
adc
sbbb
filds
loopne
mov
mov
add
call
fsts
jnp
lds
and
add
sarb
idivl
sub
jle
add
mov
imul
cmp
pop
mov
jle
jg
cmc
sbb
fucomip
jp
mov
popa
mov
push
xor
sub
cmp
and
cmp
popa
xor
stos
inc
push
push
pop
mov
sub
mov
jl
or
mov
jle
jns
in
pop
jno
jmp
add
push
jb
das
fwait
insl
dec
fwait
mov
ss
cwtl
imul
sub
les
cmc
dec
inc
jae
js
daa
add
cli
inc
and
or
or
adc
daa
loopne
rcrb
mov
fdivr
xlat
leave
mov
adc
jmp
mov
cmpl
call
or
jg
push
shrb
jecxz
imul
mov
xor
jecxz
sub
addr16
cli
adc
addb
xor
xor
xchg
jnp
or
pop
shl
sub
imul
insl
ficomps
push
shrl
fwait
jl
into
sbb
pop
ja
stos
mov
out
push
lret
stc
jle
sub
xchg
push
leave
inc
pop
aam
push
sbb
jge
xor
int3
inc
imul
jnp
or
push
out
dec
inc
and
push
sbb
xlat
dec
fisttpll
adc
pcmpgtw
leave
push
ret
je
leave
lea
fnstenv
lods
dec
pop
adc
adc
inc
imul
or
xchg
xchg
or
jp
jecxz
mov
cmpsb
mov
lahf
mov
dec
out
inc
in
pop
push
sbb
das
inc
push
dec
jp
js
fiaddl
je
sbb
rolb
inc
fwait
sub
icebp
stos
insb
imul
test
and
mov
mov
add
jnp
out
push
jge
clc
mulb
enter
fdivr
sbb
pop
js
cld
lret
jmp
pop
sbb
psubusb
adc
push
or
daa
jbe
lock
fwait
movsb
fdivrs
repnz
mov
je
cmc
imul
and
mov
fisubs
test
sbb
call
lds
pop
js
xlat
inc
inc
cld
or
fists
jae
and
dec
mov
or
popf
fldl
dec
mov
imul
hlt
xchg
sahf
xchg
sbb
add
mov
mov
das
ficomps
cmc
sti
lahf
pop
sarl
call
andb
iret
pop
pop
inc
jnp
mov
xchg
aas
and
mov
pusha
cwtl
mov
cmpsb
adc
inc
mov
and
cmc
scas
cli
cltd
shrb
push
ss
adc
iret
inc
inc
lea
lahf
fistpll
leave
jle
sarb
imul
out
movsb
les
or
das
dec
mov
in
dec
xchg
xchg
jns
sbb
mov
pushaw
rcrl
adc
stc
pop
bound
rcrb
sahf
pushf
push
aam
add
add
pop
mov
mov
cwtl
xor
daa
mov
ret
leave
fdivs
sub
dec
and
jns
sbb
shr
fs
lds
cwtl
fstps
lds
sub
std
into
movsb
or
mov
test
lea
dec
out
out
nop
aas
mov
xlat
sti
jmp
mov
insl
jmp
call
rcll
dec
call
sar
pop
add
cwtl
std
in
jmp
movsl
scas
dec
dec
dec
adcb
dec
addl
mov
mov
jmp
sbb
dec
mov
or
movsl
push
adc
int
mov
shll
out
mov
nop
adc
in
out
add
lret
pusha
xor
jns
mov
fistpll
mov
xchg
add
inc
cwtl
or
js
adc
sub
xchg
push
xor
inc
or
movsb
sbb
mov
faddl
bound
xor
lret
pop
out
push
out
push
sti
xor
orl
push
imul
imul
xchg
int
fdivs
mov
test
push
aaa
fsts
cmp
cmp
fistpll
outsl
xchg
or
or
dec
pop
cmpl
movb
xor
cld
jmp
xor
inc
fsubl
scas
push
mov
sub
add
imul
outsb
lock
dec
std
pop
cmc
sub
imul
test
mov
inc
xlat
xchg
inc
lods
in
sahf
insb
aad
loop
pop
loop
subb
inc
sub
lahf
stos
int
aas
repz
jns
jl
pop
daa
push
cmpsb
bswap
mov
shll
xlat
add
neg
cmpsl
adc
shll
mov
mov
addl
sub
xchg
push
cmpsb
pop
dec
pop
cwtl
adc
or
sbbb
push
adc
xor
sbb
cld
inc
xchg
loop
jbe
fmuls
mov
mov
daa
or
lds
jb
inc
cmp
aaa
xchg
sub
sbb
nopl
add
cli
sti
hlt
scas
jae
fstpl
add
dec
push
mov
xchg
dec
jo
popa
outsl
in
or
lret
rcll
push
mov
imull
movsl
mov
scas
jmp
adcl
adc
cmpl
aam
aaa
or
inc
sbb
jns
cmp
sahf
xchg
sub
push
into
aaa
add
outsb
mov
mov
mov
out
je
jmp
lcallw
adc
mov
xchg
mov
sub
pop
adc
lods
xor
jb
in
push
aas
test
mov
or
cmpsb
fs
mov
adc
stos
out
imul
adc
mov
adc
and
pop
dec
mov
sub
dec
leave
test
lcall
iret
or
test
jne
or
jbe
cli
test
movsb
cmp
out
sbb
rorl
jmp
mov
addr16
jns
or
movsl
loope
cld
jnp
xlat
shll
insb
cs
push
std
enter
mov
push
decl
outsb
cmpb
les
cmp
push
rcrb
pmulhw
int3
mov
xor
pop
lret
pushf
jecxz
and
adc
into
or
enter
mov
testb
pushf
xor
les
lcall
mov
movmskps
jle
hlt
rclb
pop
mov
mov
push
andl
mov
je
in
inc
rcrl
fcom
pop
out
les
ds
pop
arpl
aad
cwtl
sahf
inc
jnp
shll
dec
sbb
xor
jbe
in
jg
sti
aam
push
scas
in
sbbb
mov
xchg
mov
sbb
mov
jae
push
lods
adc
aaa
jnp
mov
mov
mov
mov
fwait
inc
push
rorl
cmp
loop
or
ljmp
jno
jmp
and
xchg
push
jo
jecxz
pop
mov
push
pop
mov
pusha
xor
dec
in
sub
sbb
imul
stc
xor
jle
mov
inc
cmp
fstpt
jne
xchg
adc
ficomps
jecxz
cmp
fdivl
mov
dec
in
loope
inc
jl
gs
jmp
hlt
xchg
scas
or
add
xchg
mov
or
je
repz
adc
cmp
mov
xchg
hlt
cmp
mov
fdiv
repnz
das
or
sub
cld
and
pop
cmp
not
into
mov
adc
fnstenv
ret
in
aas
add
jmp
adc
add
idivb
or
je
jmp
outsb
mov
sbb
loopne
fbstp
or
xchg
loop
test
sbb
mov
cmp
or
test
in
xchg
mov
dec
test
js
cmp
arpl
lahf
rorb
mov
cmp
mov
loopne
pop
mov
setle
xor
loop
fsub
and
das
data16
mov
xor
xchg
sbbb
xchg
adc
mov
dec
adc
adc
inc
lea
or
lock
popa
xchg
push
cmp
xlat
fst
cmp
xchg
stos
mov
cltd
mov
int3
sbbl
mov
jg
mov
sub
ret
xor
add
sub
ja
ret
sbb
or
mov
jmp
lret
xchg
test
xchg
jbe
mov
cld
insb
sub
ret
inc
rclb
adc
fwait
call
xor
outsl
aad
insb
addr16
add
inc
pop
aam
mov
ljmp
sub
test
xor
pop
cmp
hlt
lret
loope
adc
data16
mov
aad
add
sub
lods
jbe
in
lea
cmp
cmp
mov
sbbl
mov
adcl
aam
and
or
adc
aas
or
adc
dec
sub
xlat
int
insl
insl
pop
rol
lds
pop
dec
inc
sub
ds
outsb
movsb
test
or
inc
lcall
test
or
cltd
pop
in
bound
inc
mov
sbb
push
adc
jmp
mov
mov
lea
push
dec
mov
mov
js
pop
jne
outsl
jmp
aaa
mov
dec
xor
cli
flds
aas
sub
rcrl
dec
in
mov
mov
adc
call
out
push
xor
dec
and
movsb
ja
fwait
add
add
int
dec
not
adc
xchg
xlat
jbe
sbb
je
sbb
sbbb
adc
inc
sbb
xor
push
mov
mov
pop
mov
test
adc
add
lea
jge
adc
jge
ficompl
fs
mov
and
sub
stos
arpl
mov
dec
mov
ja
add
cld
cwtl
js
jns
addl
lret
mov
sub
cltd
outsb
mov
pop
mov
bound
sarl
add
loopne
xchg
mov
and
cwtl
push
push
mov
aas
mov
popa
push
dec
sub
pusha
xchg
lcall
fimull
leave
scas
xor
sub
lods
pop
and
cld
fists
adc
inc
imul
cmp
sub
add
in
movsl
mov
out
xor
and
lret
gs
push
fimuls
mov
cltd
xor
adc
or
movb
adc
dec
or
jns
mov
xchg
xchg
jg
add
mov
fimull
inc
adc
push
or
mov
std
inc
aam
cmp
in
push
loopne
jmp
les
mov
orb
push
popf
push
arpl
push
sti
dec
cld
and
mov
cmp
jns
outsl
aam
stc
push
mov
mov
loopne
in
hlt
fsub
mov
push
jnp
arpl
rcr
jo
cmc
push
inc
imul
iret
test
test
lret
cmp
je
test
clc
dec
cmp
fisttps
repnz
mov
jbe
mov
or
jno
sub
jg
mov
imul
jge
jle
clc
adc
cmp
scas
ss
jecxz
push
sti
push
popl
xchg
scas
test
sub
jne
xchg
dec
loop
sub
stos
mov
pop
add
adc
cltd
ret
lcall
int
das
stos
add
sub
insl
bound
sbb
jmp
int3
rol
mov
sbb
jne
cmp
inc
gs
roll
sub
std
dec
aad
xor
out
sbb
mov
int
int
cmpsl
dec
js
push
je
sarb
fldl
je
stos
sbb
cmp
test
lret
movsb
sbb
xchg
jne
add
mov
dec
pop
inc
mov
clc
mov
mov
inc
sub
mov
cmpb
packuswb
mov
jnp
loopne
test
xchg
sbb
ljmp
dec
pop
mov
and
cli
adc
xor
call
jmp
xorl
sbb
icebp
stos
pusha
mov
cmp
jnp
rclb
cmp
xor
scas
sbb
cli
inc
out
xlat
je
mov
cs
dec
out
adc
sub
fidivs
push
mov
push
pop
nop
cld
fstpt
mov
pusha
lcall
sbb
int3
loop
fs
sarb
pop
sbb
jae
mov
cmp
mov
xchg
test
fcom
jae
xor
push
cld
sub
ret
rcrb
aam
inc
mov
xor
add
mov
stc
rclb
scas
enter
jl
mov
fsubs
sub
out
stc
xchg
or
popa
adc
xchg
inc
cmpsb
inc
or
notl
jb
decb
pusha
pop
mov
das
cmp
pop
pop
bsr
xor
mov
test
xor
shll
stos
jae
dec
push
ss
test
clc
dec
scas
test
in
pusha
inc
popa
xor
pop
pop
stos
hlt
addr16
repz
test
das
rorl
test
in
pop
mov
in
orl
es
mov
and
mov
xchg
aad
dec
ret
adc
aam
outsb
cmp
sbb
sub
add
iret
mov
xchg
fstpl
xor
rolb
sub
xor
mov
jnp
xchg
cmp
dec
inc
and
nop
and
out
sbb
hlt
stos
lahf
push
sub
jnp
mov
xchg
push
add
mov
xor
inc
cmpsl
adc
lds
into
pop
in
xchg
xor
add
add
inc
pop
andl
or
jne
out
aas
and
xchg
cld
sub
mov
push
inc
lods
iret
add
jp
cmp
jo
adcb
rorb
push
jmp
fmuls
mov
dec
xchg
xor
sub
popf
add
xchg
sbb
out
in
data16
sbb
scas
lds
movsb
lds
jae
lock
aas
push
xchg
pop
orb
scas
cmp
mov
push
ja
into
mov
inc
dec
xchg
and
or
mov
dec
je
dec
xchg
inc
cmc
rcr
daa
adc
int
sahf
outsl
insb
fstpl
push
cwtl
jg
mov
xor
ret
rorb
ret
pop
xchg
xor
loope
push
mov
mov
test
adc
push
add
arpl
sbb
sbb
pop
jp
push
scas
sub
pop
jmp
and
dec
jmp
fistpll
or
mov
push
push
or
shrb
scas
cmc
mov
mov
fdivs
cmp
mov
adc
add
inc
xor
adc
insl
xor
xor
mov
ret
push
int3
mov
int3
xor
push
jle
fucomp
dec
insb
inc
out
imulb
cmp
idiv
enter
and
lahf
pop
adc
push
jp
or
scas
cmp
mov
sti
cmc
sbb
loop
rcrl
or
mov
dec
int
enter
cmp
push
int3
mov
push
loopne
gs
push
fmulp
push
adc
mov
push
and
push
adcb
fcompl
popf
stos
shrl
call
bound
xor
sub
xchg
pop
lods
dec
enter
or
mov
es
inc
pop
jmp
das
sbb
push
sub
loopne
iret
fwait
jno
loopne
pop
mov
jae
out
pop
sbb
cli
xlat
stc
arpl
pop
frstor
les
imul
jo
sub
insb
dec
dec
jo
int3
lret
adc
sbb
xchg
or
mov
mov
stc
jae
mov
popa
push
push
divl
outsl
pop
mov
mov
fisubl
mov
xlat
lea
sbb
mov
cltd
test
cmp
aas
daa
fnstsw
outsb
pop
test
sbb
adc
xlat
adc
notb
call
push
jmp
andl
sarl
das
push
fists
rcrb
and
and
jae
lods
lret
sbb
xor
cmpsl
push
mov
sub
or
mov
out
cmpsl
mov
jmp
mov
mov
imul
xchg
sarb
fst
sub
sbb
ss
fists
push
lds
dec
insl
mov
or
ret
dec
imul
insl
jge
out
mov
jnp
mov
jmp
pushf
imul
repnz
jae
jge
push
pop
cmpl
lds
or
mov
fmull
lds
rol
dec
lret
add
push
cmp
shlb
dec
cmp
mov
jae
jae
dec
and
ret
movsb
imul
mov
mov
movsb
enter
xchg
jae
dec
jecxz
jg
sbb
jno
pop
cld
sti
outsb
decb
xor
pop
stos
pop
inc
or
cmovl
sub
mov
pop
lock
clc
inc
or
arpl
jno
dec
mov
inc
add
pop
inc
in
lret
dec
pushf
cld
cmp
mov
inc
pop
lahf
bound
push
sub
ja
xchg
mov
ret
jg
xchg
cs
cltd
push
push
icebp
sub
push
test
ss
jmp
or
pop
pusha
or
xchg
sti
je
pop
jg
aad
test
mov
leave
out
jmp
out
outsl
and
adc
nop
and
pop
pop
sub
mov
mov
iret
adc
fs
repnz
lret
cmpsb
pop
out
jo
push
add
rcrl
mov
andl
loop
fiaddl
shl
mov
scas
in
jmp
pop
sub
mov
scas
pop
cmp
aaa
cmpsl
clc
and
arpl
daa
sbbb
lcall
sbb
cmpsb
int3
dec
cmpsl
push
sub
shlb
pushf
inc
jne
cmp
aaa
arpl
dec
xor
cmpsb
fistpll
lret
test
imul
mov
negl
out
out
cmpsl
or
or
ljmp
sub
add
mov
lods
and
mov
imul
jp
rorl
fdiv
inc
sbb
jb
sbb
inc
add
cwtl
mov
jecxz
repz
scas
cmpsb
fiaddl
es
pop
je
fdivr
shr
movsb
mov
div
mov
push
push
aas
lret
nop
sub
jle
in
lods
iret
adc
inc
cli
or
xchg
cs
andb
dec
dec
adc
xor
out
xor
ljmp
xchg
pusha
aad
adc
xlat
sub
and
sahf
lea
mov
cmpsl
mov
adc
mov
jne
ror
ja
or
insl
sti
mov
out
ss
out
sub
lret
out
nop
mov
shlb
fsts
nop
fsubr
das
movsl
rcrb
sbb
out
mov
in
xor
fcomi
call
shrb
ds
loopne
mov
js
dec
jno
call
push
movsb
mov
cltd
xchg
pop
mov
ficoml
dec
adc
cli
xchg
test
sahf
stos
or
jecxz
imul
sti
fnstsw
repnz
sbb
leave
test
jp
dec
stc
mov
jl
out
mov
push
jp
js
push
inc
push
xor
dec
cmc
loop
scas
cmp
push
mov
or
pushf
jmp
dec
leave
fdivl
jbe
dec
sub
gs
bound
das
sbb
call
dec
dec
mov
add
mov
ficoms
xlat
testb
cmc
sub
pusha
inc
insl
test
data16
rolb
xchg
cmpsb
out
push
adc
jnp
test
push
mov
inc
xchg
push
jbe
loopne
or
fwait
adc
test
pusha
les
aaa
mov
adc
out
aas
mov
fsubs
push
add
scas
movsl
cmp
adc
stos
add
mov
mov
daa
rorb
fdivrs
sub
pop
pushf
fists
in
test
pop
in
addr16
cltd
mov
fbld
pop
test
jl
and
cs
cmp
ljmp
cmp
lea
adc
rcr
pushf
test
cmp
xor
or
mov
sti
cmp
rorb
mov
and
call
cmp
roll
data16
jb
jae
je
jge
into
mov
pop
cltd
push
fbld
mov
dec
xchg
repz
inc
addb
out
popl
lret
stos
ret
scas
mov
or
ret
test
lds
stos
fs
in
jecxz
je
mov
fs
lea
fisttps
call
aad
dec
out
or
out
imul
lds
pop
push
cmc
add
mov
shrl
hlt
lahf
jmp
dec
sub
icebp
data16
mov
fnsave
adcl
call
lea
and
dec
repnz
inc
sub
add
or
add
cltd
jecxz
push
out
push
lock
lret
pop
inc
mov
inc
xor
lds
and
pushf
shlb
dec
lods
mov
hlt
add
andb
ficompl
jns
daa
push
pop
fsubp
sub
sbb
and
fmull
mov
fisubs
and
sbb
push
jno
jle
inc
inc
cmp
push
inc
add
sub
lock
jl
cli
imul
xor
lods
xchg
rcrb
adc
mov
adc
addr16
nop
ds
repz
je
loop
mov
imulb
sbb
addl
pop
rclb
adc
in
stos
repz
outsl
mov
pop
sbb
xchg
mov
and
jae
mov
push
mov
iret
pop
inc
push
jmp
add
mov
mov
imul
or
sbb
js
jecxz
out
out
pushf
fs
stc
pusha
inc
sti
adc
and
hlt
sbb
mov
mov
lahf
and
cwtl
xor
mov
xor
adc
push
test
pop
mov
ljmp
sbb
in
arpl
movsb
popa
fsubrs
mov
mov
pushf
into
cmpsl
cmpsl
insl
inc
jne
iret
lcall
sti
addb
inc
adc
daa
mov
dec
test
add
xchg
je
mov
jl
dec
jge
and
test
push
push
ljmp
push
pop
movsl
lock
loope
mov
adc
daa
js
stos
pop
lods
icebp
sub
inc
add
and
add
pop
ret
sti
adc
jne
popf
cmp
test
je
push
xchg
inc
aad
dec
daa
jns
addr16
sbb
or
push
and
ljmp
fucompp
ja
mov
pop
jp
addr16
add
jnp
mov
cmp
shr
movl
rorl
pop
mov
and
or
test
cltd
inc
pop
push
mov
fstpl
add
mov
jb
cmpb
popf
inc
mov
test
cltd
push
xor
arpl
mov
jge
in
and
pop
and
int
inc
ret
or
push
pop
cmpsl
and
or
push
jge
push
add
cmp
test
cmp
mov
push
sahf
jecxz
stos
xlat
or
movsl
mov
cs
cmp
outsl
cwtl
loop
int3
mov
and
adc
mov
out
rcll
push
sbb
or
mov
inc
lock
xor
mov
or
mov
aaa
push
jp
in
ja
adc
or
xor
mov
dec
or
push
repnz
jge
cs
lcall
jo
lcall
xor
xor
xchg
xor
cli
mov
xor
shrb
pop
out
aaa
pusha
jb
iret
mov
call
std
loop
test
mulb
xchg
jne
shll
pop
cwtl
lret
lds
adc
test
mov
jg
movsb
or
sti
out
mov
out
sbb
push
push
ja
xchg
fs
inc
rol
cmp
add
mov
inc
jnp
lods
stos
pop
insb
xor
mov
out
cltd
pop
fdivp
movsl
sub
xchg
aam
in
inc
jae
iret
cltd
cwtl
push
mov
repnz
jle
pop
add
jnp
les
int3
add
sub
pop
adc
divl
mov
js
insl
xor
or
push
clc
add
and
test
pop
mov
xchg
inc
dec
jnp
jmp
movsb
fists
xchg
xchg
adc
andl
mov
inc
sbb
xor
cs
adc
cld
xchg
notb
cwtl
and
xchg
shll
pop
insl
inc
and
inc
das
jl
cli
add
cmp
adc
pop
sbb
inc
pop
jb
mov
and
bound
in
ja
lods
mov
cmp
pop
add
add
dec
hlt
mov
cmp
scas
adc
imul
jns
mov
and
inc
repnz
fwait
adc
cmc
mov
jl
jae
jle
or
push
xchg
push
add
adc
fcmovbe
mov
inc
cli
sbb
fisubrs
cmpsb
pop
mov
jp
insb
stos
subb
imul
mov
jmp
fiadds
lret
outsb
push
cmpsb
jnp
mov
push
bound
bound
leave
cmp
push
pop
sub
inc
mov
aaa
cmp
scas
sbbb
xchg
jae
push
add
in
jne
imul
push
out
or
jmp
les
daa
psubw
lret
push
xchg
sub
dec
or
rorb
cs
scas
imulb
inc
lcall
cmp
xchg
dec
mov
xchg
popa
in
into
fs
sub
push
inc
pop
pop
lods
into
pop
pusha
shlb
fdivr
pop
test
out
pop
fidivrl
pop
and
xchg
dec
in
testb
leave
clc
cmp
sbb
pop
pop
sbb
rolb
cmc
push
fs
sahf
mull
out
and
push
push
mov
and
out
pop
rclb
testl
adc
and
in
xor
mov
scas
push
jl
jno
loopne
xchg
lret
aam
cltd
stos
xchg
cmp
aas
cmp
pop
jns
movsl
std
pop
popf
cmp
cmpb
imul
mulb
cmc
movsl
and
sub
dec
test
xchg
hlt
cmp
mov
xor
mov
sub
stos
mov
fcoml
loopne
lods
push
add
mov
das
popa
sub
mov
ret
and
sbb
jl
push
or
fcoml
push
outsl
icebp
add
xor
add
call
adc
addr16
int3
addr16
dec
push
fs
lock
pop
jo
or
inc
in
pop
sub
push
mov
cltd
xor
lods
dec
inc
dec
mov
sub
fsubr
loopne
lds
cmovl
inc
loopne
fistpl
xchg
ret
icebp
movsl
cld
bndldx
mov
fiadds
sti
pusha
int
mov
mov
popf
sbb
mov
outsb
inc
mov
xchg
adc
aaa
cmpsb
into
mov
out
mov
lods
or
lret
cmp
les
dec
inc
lea
sbb
inc
jecxz
shrl
cmp
pop
inc
mov
or
pushf
ljmp
xchg
pusha
xor
call
and
hlt
pop
push
nop
jbe
cmp
adc
xchg
orl
ds
in
cld
dec
cmp
dec
xor
push
cmpsl
ret
adc
push
bnd
aad
push
subps
in
mov
xor
inc
xor
sbb
jbe
push
xor
adc
cmp
pop
aam
sub
sbb
gs
lahf
mov
mov
jge
jbe
pop
sbb
in
xor
jnp
cli
dec
mov
xor
push
mov
xor
dec
inc
pop
call
sbb
push
dec
inc
loopne
mov
lods
rcrl
or
movsl
nop
mov
mov
mov
push
push
mov
gs
xchg
xchg
andb
cmp
xor
jle
xchg
rorb
jge
test
cli
test
fbld
arpl
in
aad
push
mov
lods
pop
mov
repz
add
lcall
pop
sbb
mov
sbb
push
or
adc
rorl
shrl
rcrb
pop
mull
inc
fwait
mov
jae
scas
jb
sub
mov
cmpsb
add
push
cmpsl
jmp
insb
dec
aad
nop
mov
aaa
in
enter
repnz
mov
mov
nop
sbbl
js
aad
loope
mov
rcr
inc
or
mov
pop
call
mov
xchg
bound
jmp
rcrl
xor
dec
test
adc
dec
dec
or
cmc
pop
loop
jmp
outsb
dec
pop
inc
jl
in
in
jb
lcall
negl
iret
push
lret
out
push
or
cltd
sbbl
add
cld
xor
aam
dec
cld
lcall
pop
push
push
bound
or
test
movsl
jp
pavgw
sbb
arpl
adc
cmp
jg
mov
lea
or
out
mov
mov
aam
pop
pop
scas
pop
sbbl
repnz
or
bound
inc
cli
inc
adc
add
and
insb
xor
cmp
inc
push
fimull
or
sbb
das
pop
out
lret
fdivl
adc
test
stos
leave
aad
outsb
adc
in
out
idivl
out
xchg
fcomps
mov
decl
and
jg
inc
call
hlt
addl
scas
xchg
lcall
shrb
out
and
popl
lahf
cmp
lahf
lret
pop
xlat
jecxz
mov
cmp
or
out
test
stos
notb
jno
gs
jmp
cmp
movsb
jo
cmpsb
xor
jg
idiv
mov
pop
push
scas
enter
xchg
jae
in
fisubl
popa
add
sbb
add
dec
fimull
out
adc
add
cli
leave
fmull
or
dec
jmp
add
int
xchg
xchg
mov
cmp
jno
adc
fnstsw
loop
add
push
dec
adc
xchg
mov
stc
in
cmp
or
popa
xorl
mov
fdecstp
sti
aas
mov
aas
push
rcl
or
sub
in
mov
out
out
f2xm1
sbb
mov
popa
jb
cmp
jo
addl
pop
cs
or
jnp
mov
test
rcrb
xor
test
cmp
adc
mov
mov
mov
ficomps
out
and
push
sahf
je
movsl
xor
or
hlt
loop
ret
test
adc
adc
mov
jle
or
out
pusha
mov
xlat
lcall
mov
cli
insb
out
sbb
cmp
out
cmpsl
adc
es
daa
mov
out
push
scas
add
push
rcrb
jp
dec
inc
out
add
inc
add
outsb
mov
mov
cltd
and
filds
mov
cmp
mov
movsl
sbb
clc
inc
mov
sub
mov
adc
inc
pop
int
or
into
push
outsb
xchg
pop
push
icebp
das
movsl
xchg
adc
fwait
add
insb
imul
xchg
jge
call
push
sti
sub
and
jl
cmpsl
dec
add
xchg
into
call
ja
dec
lcall
or
and
popf
jns
sub
jb
das
push
xchg
mov
inc
into
add
or
popa
in
repz
cli
jno
mov
call
xchg
mov
mov
stos
lret
push
lods
mov
lahf
sbb
test
sbb
mov
xchg
inc
pop
aaa
rol
je
call
ja
dec
xchg
adc
mov
fdivp
xchg
ds
rorb
xabort
lods
mov
pop
mov
lods
sbb
adc
pop
test
mov
pop
add
push
adc
mov
xchg
sar
push
or
aas
dec
xchg
dec
testb
in
nop
ret
add
sbb
test
movsb
pop
and
mov
scas
jbe
adc
cwtl
cmp
inc
fxtract
imul
test
jge
stos
cmpsb
xchg
sar
ja
out
mov
ja
push
fiadds
in
mov
out
mov
stos
outsb
pop
stos
movsl
scas
cmc
loopne
and
scas
pusha
or
push
rcr
mov
inc
stos
add
cs
pushw
pop
aam
andb
xor
mov
or
pushf
mov
jae
into
push
js
in
and
or
lock
test
pop
pop
test
je
cltd
stos
outsl
gs
or
lock
inc
xlat
xorl
inc
inc
jbe
cmp
mov
xor
push
mov
movsb
add
jecxz
mov
push
mov
in
arpl
lret
lock
adc
fwait
jg
inc
adc
lcall
aas
loop
jno
xor
test
push
pop
icebp
sbb
jmp
notl
addr16
and
lods
mov
adc
scas
sub
cmp
cmpb
mov
adc
testl
xchg
fwait
loop
arpl
add
cmpsl
push
testl
dec
fmulp
pop
dec
data16
mov
decl
ss
xchg
cmp
cmpsl
sub
and
pop
loopne
xor
add
or
pop
data16
lahf
ljmp
jnp
cmp
int
outsl
aad
mov
repz
cli
adc
push
cmpsb
dec
jae
xchg
fsts
leave
adc
mov
jne
inc
inc
mov
sti
fs
sbb
out
push
icebp
test
popf
std
enter
pop
pushf
stc
or
mov
add
xchg
stos
mov
dec
and
push
mov
sbb
lea
inc
jnp
repnz
imul
dec
cltd
mov
mov
sbb
outsb
push
dec
and
shlb
out
aas
pop
push
add
push
stos
popf
mov
into
ja
ret
xor
or
inc
notl
xchg
adc
pop
fistpl
mov
mov
and
aad
leave
test
mov
stos
movsl
xchg
or
imul
push
outsl
dec
or
jo
jne
or
repnz
sarl
aad
or
add
jp
mov
and
incl
ljmp
in
fmul
push
sbb
xchg
cmp
gs
adc
inc
pop
bound
sub
sti
shrl
cmpsl
and
std
and
or
add
mov
cwtl
scas
mov
add
int3
xchg
insb
inc
jns
or
xchg
mov
xchg
roll
and
movnti
rcll
lock
movsl
lea
xor
in
je,pt
xchg
lret
sub
inc
subl
bound
jbe
aad
test
in
mov
es
push
jns
pop
pushf
ret
push
scas
scas
dec
xlat
fildll
mov
or
stc
mov
and
cltd
cli
cmpsl
arpl
adc
jne
outsl
dec
repz
adc
push
nop
subw
mov
lods
push
cmp
sahf
mov
jp
inc
imul
pop
xchg
pop
shlb
mov
sub
loopne
popa
loopne
stc
adc
mov
stos
xor
clc
aam
jb
sahf
xchg
addr16
in
add
pop
sbb
inc
push
cwtl
addr16
loopne
jle
ljmp
xchg
adc
mov
inc
xlat
sar
mov
push
ljmp
aad
lahf
xchg
pusha
pusha
pop
cli
fstl
je
pop
fcoml
hlt
roll
cmp
lcall
or
cmc
movsl
mov
into
mov
jg
les
cwtl
dec
jecxz
push
subb
and
cmp
test
xchg
mov
dec
jo
xor
push
push
fs
or
and
scas
xor
pop
add
and
cmp
stc
pop
add
clc
push
push
lods
es
arpl
push
sbb
cwtl
mull
faddp
mov
addb
push
dec
movsb
unpckhps
cltd
push
ror
data16
fcmovne
idivl
push
mov
hlt
push
or
push
xor
lret
mov
outsb
loopne
mov
sti
cmp
fwait
push
adc
stos
adc
movsb
loop
add
mov
adc
inc
or
cmp
call
mov
pop
mov
xlat
mov
inc
cwtl
icebp
dec
and
push
dec
addr16
jo
fstpt
movb
movsl
xchg
sti
cmp
fld
shlb
testl
in
xchg
daa
pop
aaa
fcoms
inc
inc
aam
lahf
inc
mov
notb
pop
cmp
ret
xchg
inc
emms
dec
jmp
fdivs
push
pop
push
mov
and
jmp
adcl
inc
or
mov
stos
xor
cld
or
jno
fidivrl
mov
mov
cmp
add
xor
stos
andl
int3
fwait
scas
into
pop
rcrl
and
jno
imul
xchg
repnz
mov
cmp
loopne
pusha
cmp
fsubrl
jl
fistps
jge
mov
sbb
add
pop
cmp
lea
ret
mov
jge
test
imul
int3
mov
pop
ds
xor
int
or
jp
sub
pop
mov
cmp
cmpsb
xchg
aaa
push
push
mov
data16
es
sub
stc
inc
add
int
sub
dec
mov
and
es
cs
sbb
pop
push
xor
inc
cmpb
imul
xor
xor
cmp
mov
lcall
add
test
aas
lahf
iret
pop
push
xlat
pop
pop
xchg
dec
jg
fidivrl
jnp
loopne
lcall
lds
sbb
repz
inc
repz
lcall
nop
mov
mov
dec
xchg
mov
das
outsl
test
inc
sub
sub
pushw
cmp
insb
inc
lret
or
push
daa
rcl
pop
pop
clc
push
mov
add
push
push
imul
inc
dec
lret
imul
outsb
cmp
pop
out
test
pop
movsb
adc
sub
xor
lods
out
call
and
sub
and
sbb
mov
je
das
mov
sub
dec
dec
push
cmpsl
cltd
ja
in
popf
mov
sub
mov
add
or
fbstp
inc
cmp
pop
sbb
and
cmpsb
jmp
dec
pop
das
aad
mov
shll
loopne
and
pushf
cmpsb
cmp
push
xchg
dec
mov
scas
mov
and
lock
sbb
repz
subl
sbb
push
add
js
faddl
jnp
mov
cltd
movsl
or
mov
push
push
in
and
in
xchg
mov
cmp
cmp
js
xor
push
sahf
out
sahf
and
fs
mov
sbb
movsb
outsb
mov
push
sbb
mov
aad
sub
cltd
xor
addr16
jg
xorl
pop
pop
loope
data16
or
xor
adc
inc
jo
inc
outsl
sub
insl
dec
std
or
mov
pop
sub
sub
jle
fwait
sbb
jle
sti
ret
add
lods
mov
push
sbb
test
adc
shrb
sysenter
push
scas
xchg
xor
push
arpl
adc
or
sub
into
sarb
mov
xor
xchg
mov
xchg
stos
dec
or
stc
rolb
fcmovnbe
pop
loopne
or
idivb
fcoml
into
bound
insb
je
fildll
mov
cmp
and
jg
addb
sbb
xchg
cwtl
or
mov
and
sbb
ret
in
and
adc
cmp
push
sbbb
fstl
cmp
gs
fisttpll
leave
adc
xchg
dec
mov
dec
mov
mov
push
mov
add
or
push
sbb
in
cwtl
cld
pop
pop
jg
xor
jle,pn
outsl
push
jno
out
adc
in
cmp
out
push
mov
jmp
cs
fs
mov
aad
mul
ljmp
insl
cmp
sarb
pop
adc
je
jnp
rclb
jns
scas
add
cmp
pushf
loopne
cwtl
andps
mov
gs
push
aaa
dec
scas
in
mov
jecxz
mov
pop
imul
add
add
and
outsb
icebp
jb
jnp
cmp
movsb
mov
rorl
lds
sub
add
leave
lods
sbb
cmp
cmpb
xor
cmp
add
data16
out
xor
aad
daa
mov
lock
cmp
adc
jmp
add
stos
jge
cld
fistps
inc
sbb
sbb
dec
es
xchg
push
push
das
repz
ljmp
cmpsb
insb
scas
pop
movsl
cwtl
mov
dec
sbb
and
push
pop
pushf
inc
mov
mov
addr16
shr
popf
fldt
mov
cmp
add
push
pushf
jle
jle
jne
cmp
mov
inc
or
mov
lahf
cwtl
int
mov
cmp
adc
dec
add
cwtl
stc
adc
in
and
stc
test
addr16
jns
cwtl
pcmpeqd
fsubrs
loopne
fcoms
dec
fists
add
jl
and
sub
out
xchg
add
push
por
or
jo
mov
jge
mov
pop
cmp
repz
jbe
xor
inc
mov
cmp
mov
scas
aam
mov
add
mov
arpl
and
mov
push
mov
aaa
insl
or
into
jge
cmp
int
inc
jne
fsts
test
add
sub
pop
mov
pop
adc
inc
cmp
dec
aaa
or
lods
jmp
mulb
xor
hlt
ret
jb
in
cmp
cs
fisubs
jg
dec
test
fildll
loope
sub
dec
and
mov
lret
out
xor
xchg
fdivrp
les
mov
sarb
inc
popa
xchg
ds
cmp
outsb
pop
jo
add
and
sbb
test
in
decb
and
mov
sbb
std
and
nop
mov
pop
lahf
call
out
scas
sbb
fbld
daa
shr
jg
in
pop
or
das
popa
hlt
push
sti
pusha
mov
pop
xchg
xchg
clc
pop
push
jns
mov
push
sbb
mov
or
push
xchg
pop
in
movsl
inc
xchg
sbb
fdivrl
add
xor
mov
add
repnz
cmp
out
mov
aad
ja
incb
or
mov
rcl
jge
daa
pop
push
ljmp
out
pop
mov
test
push
cli
and
mov
xchg
mov
sbb
adc
fcomp
ficoml
aam
imul
mov
xchg
jnp
into
mov
push
push
push
jo
out
mov
push
arpl
pop
out
jbe
mov
jnp
inc
imul
aaa
popf
pop
cld
jnp
or
jp
and
in
push
push
mov
jb
mov
inc
add
add
dec
sbb
and
jbe
xor
fbld
test
mov
add
aas
fwait
inc
in
adc
sub
test
testl
incb
test
pop
js
bound
int
mov
stos
adc
push
iret
mov
inc
pop
lock
dec
out
mov
push
and
cmp
mov
out
cmp
dec
and
xchg
push
push
mov
xorb
mov
lret
xor
imul
cmp
mov
pop
push
out
fsubrp
test
cmp
mov
adcb
fdiv
mov
mov
ljmp
ficoms
xchg
shlb
clc
pop
ds
std
insb
or
jl
call
cmp
test
and
or
push
stc
lahf
loop
lret
pop
outsb
sub
movsl
xor
inc
ror
mov
pop
jmp
loope
repnz
rol
adc
scas
mov
in
fnstsw
jae
in
enter
jo
push
jns
jmp
or
push
ret
ljmp
aam
pop
ret
jge
gs
lds
cmp
testb
fs
sbb
cs
in
mov
in
flds
scas
outsb
pop
pop
jne
sub
jmp
dec
icebp
mov
movsl
add
pop
adc
lret
ffreep
int
outsl
cwtl
xchg
mov
stos
outsb
mov
pop
adcl
out
aaa
scas
adc
and
testb
pop
orl
sub
mov
push
mov
cmp
arpl
jmp
push
mov
cmc
add
sbb
cmp
fdivl
push
push
jmp
push
outsl
stc
loopne
leave
xchg
test
sbb
xor
jmp
cmp
and
fisttpll
xor
jl
sub
mov
push
lcall
or
xor
pop
mov
ficoml
scas
xor
jl
xchg
sbb
repnz
testl
mov
addr16
or
pushf
movsl
shll
mov
mov
push
xor
mov
mov
fwait
imul
nop
call
popf
std
pop
dec
fisubl
maskmovq
idivl
pop
pop
mov
ja
push
fcmovb
cmp
jg
xchg
sub
test
push
xor
dec
fsubrl
jne
add
xor
and
xchg
fisubrs
dec
push
loopne
mov
xor
icebp
jp
cltd
inc
fbstp
jno
out
mov
cmp
dec
ret
fwait
or
gs
mov
cmpsl
pop
sub
clc
lods
or
inc
lcall
xchg
push
dec
inc
jp
stos
repz
lods
stos
fnop
push
mov
les
ja
ja
cmp
imul
sahf
push
pop
repnz
jae
jo
add
js
mov
pop
mov
cmp
test
aaa
xchg
adc
adc
or
stc
or
mov
mov
orb
fcomps
daa
sbb
push
inc
push
sbb
loop
sbb
mov
or
sbb
pop
cmpsl
fsubl
or
or
push
lcall
jae
in
push
cltd
loope
push
psrad
out
sub
pop
adc
sbb
loopne
add
push
mov
push
cltd
loope
jne
repnz
and
aaa
out
in
sub
jae
xchg
pop
outsl
adc
stos
lods
cmp
pushf
addr16
and
push
xchg
add
and
movsl
dec
add
sub
and
cmp
adc
mov
or
fisubrs
inc
lock
lret
jmp
jmp
movsb
sub
xchg
jae
sub
lea
push
add
aad
fsubp
mov
xlat
gs
push
icebp
test
outsl
daa
add
cmp
or
adc
shrl
adc
xchg
inc
fimull
aas
dec
sub
xchg
and
ljmp
add
out
mov
pushf
lds
xor
outsl
mov
cli
xor
mov
mov
das
ljmp
jo
cltd
mov
pop
icebp
enter
pop
jp
out
int
adc
leave
std
inc
sbb
xchg
andl
xchg
push
and
dec
dec
out
adc
cwtl
jg
into
fnstcw
adc
leave
sbb
or
decb
das
and
or
rcrl
pushf
int
std
je
sbb
lcall
push
stos
xor
xor
cmpsl
jnp
cmpsl
in
scas
out
aam
jge
jecxz
hlt
lret
mov
in
outsl
xchg
sub
repz
adc
sub
xchg
and
mov
fwait
mov
outsl
mov
call
mov
mov
jns
pop
mov
add
lea
jb
adc
int
sbb
ret
pop
sbb
shrb
pop
fistpll
sbb
adc
stos
dec
jl
cmp
adc
push
pop
insb
adc
sbb
jno
mov
imul
shr
sub
and
push
inc
cltd
cs
lret
shlb
cwtl
pop
aaa
lea
inc
and
sbb
test
das
shll
jg
push
and
jg
icebp
add
popa
mov
out
jb
nop
dec
inc
ds
sahf
add
xchg
fwait
std
mov
jno
lods
pop
test
sub
lret
add
in
or
mov
bound
add
ja
add
pop
ret
mov
pop
test
or
cli
or
pushf
sub
frstor
add
pop
fsub
adc
xor
leave
pop
xor
mov
aaa
vpshufhw
mov
sbb
lret
cwtl
mov
and
pop
inc
cmp
push
or
mov
out
cwtl
push
scas
or
lahf
inc
ficomps
testl
mov
mov
push
xchg
sub
push
ss
cld
jo
mov
lock
mov
outsb
or
cmp
sub
mov
mov
cmp
push
xor
sbb
popa
push
in
cmp
and
pop
fwait
test
icebp
mov
mov
and
data16
mov
cwtl
lcall
aas
pop
xorl
pop
push
loop
lahf
rcrb
pop
enter
jo
or
insl
pop
lock
shl
xor
sub
jmp
rolb
cld
adc
mov
inc
mov
jns
cmp
xor
mov
jb
ja
push
mov
cs
mov
adc
arpl
pop
jbe
or
fidivrl
sub
lods
adc
push
dec
push
fdivp
popf
pop
fidivl
int3
loop
mov
and
hlt
ret
lea
pop
xchg
push
cld
mov
push
insb
jg
sbb
inc
mov
cmp
loope
insb
lea
add
and
sub
sub
sbb
fsts
jnp
loope
mov
push
dec
mov
xor
jns
sub
mov
into
scas
or
cmpb
xor
pushf
pop
mov
sub
jge
hlt
daa
iret
cli
negb
xchg
pusha
mov
movsl
mov
mov
adcb
js
xor
shrb
xor
ja
mov
int
push
cld
ss
test
mov
cmpsl
xchg
xchg
clc
or
ja
decb
aaa
pop
inc
mov
aaa
bound
fimuls
scas
or
pop
mov
pop
inc
push
dec
test
jne
mov
cld
add
adc
xchg
scas
aad
popf
push
jmp
pop
pop
inc
aas
sbb
into
jmp
sub
int3
jne
in
btc
cmpsl
jmp
popf
loope
sbb
xor
and
or
and
fldenv
xchg
push
jl
xor
xor
pushf
mov
and
pop
add
mov
inc
sub
les
inc
jle
adc
ja
and
cli
push
out
sbb
add
dec
xor
xor
test
fwait
push
adcb
cmp
dec
aam
jecxz
aam
lret
or
push
pop
imul
sub
fisubrl
ja
lea
inc
insb
in
or
push
stc
cmc
xchg
mov
das
or
test
arpl
mov
mov
cld
out
das
mov
cltd
dec
cmpsb
into
and
push
jmp
int
fimuls
pop
and
xchg
jmp
xorl
insb
cmpsl
outsl
inc
test
xchg
jbe
mov
es
mov
hlt
pop
inc
or
mov
cmp
lret
mov
fildl
imulb
ds
aaa
jg
fs
or
xchg
dec
xchg
mov
stos
pop
and
cmp
add
sub
jo
add
popa
sbbb
cld
pusha
sar
dec
dec
adc
fcoml
pop
pusha
test
test
aad
pop
outsl
stc
xlat
test
adc
int
jl
jne
pop
aas
shl
arpl
push
push
clc
sbb
cmp
adcl
jbe
jp
int3
mov
xor
add
fdivs
jp
mov
es
cmp
lcall
jle
scas
push
or
add
sbbb
sbb
inc
fwait
aas
push
mov
jg
cmp
cmpsb
push
cmp
fdivs
rcrb
xor
fimuls
inc
xchg
jge
dec
mov
lret
scas
or
add
xor
nop
mov
inc
testl
daa
adc
pop
mov
imul
sub
and
shll
setg
jb
les
fcomps
cmp
sti
dec
jbe
pusha
pop
and
outsl
ds
dec
xchg
push
test
xchg
sti
add
daa
mov
push
pop
mov
popa
dec
sti
cltd
dec
xor
add
push
jnp
pusha
test
push
mov
es
mov
mov
stc
mull
push
mov
pop
mov
pusha
mov
test
cmp
in
mov
out
gs
xchg
pop
mov
dec
and
inc
lds
rorb
dec
popf
jo
imul
shlb
stos
inc
xchg
cmp
mov
int
mov
fsubs
rolb
push
lret
adc
xchg
mov
jbe
inc
lret
mov
fisubl
push
or
jecxz
in
leave
test
ss
leave
loop
insb
and
ret
jbe
pushf
in
xor
xlat
adc
add
lret
adc
shll
push
and
jns
arpl
sbb
mov
sub
pop
xchg
sub
jnp
test
mov
mov
add
popa
or
xchg
mov
jno
mov
add
leave
in
pushf
push
loopne
add
sub
out
add
cltd
sbb
insl
ficomps
sub
xor
cmpsb
mov
sbb
sub
dec
insb
movsl
xlat
push
stos
stc
ljmp
cmpsb
push
dec
es
and
xchg
popf
xchg
sarl
imul
fildl
aad
cwtl
sbb
xchg
int3
ror
dec
mov
fmul
cli
loop
dec
xor
repnz
xlat
ljmp
aam
mov
or
iret
ret
dec
push
sbb
scas
xor
mov
mov
mov
fcompl
and
int3
rcrb
add
das
ljmp
jp
dec
rclb
mov
mov
out
mov
and
ljmp
sbb
inc
sbbl
addb
cmc
sub
lret
sub
push
cmp
add
pop
repz
es
xor
arpl
data16
movsb
inc
ljmp
jmp
rolb
rclb
jnp
int
sub
jb
outsb
outsl
stos
push
mov
mov
xchg
mov
jp
inc
inc
addr16
xor
call
outsl
and
imul
dec
movsb
pusha
mov
mov
les
aam
std
insb
and
out
inc
push
jne
orl
push
jns
push
inc
mov
gs
stos
or
bound
jle
ljmp
mov
push
add
xchg
and
dec
stos
fcompl
icebp
in
and
xlat
lcall
pop
inc
inc
std
or
pop
mov
sbb
xor
adc
in
push
xorl
dec
inc
or
jecxz
daa
pusha
testl
push
adc
dec
mov
fs
xlat
das
mov
adc
cmp
inc
mov
mov
inc
das
inc
push
js
inc
cmc
iret
cmc
jnp
and
lods
sahf
sbb
idivb
dec
inc
popa
jge
addr16
fs
fcomps
mov
sub
mov
outsl
js
lret
int
jbe
xor
out
scas
fstpl
outsb
imul
push
stc
cmpsl
sarl
dec
jl
fcmovnu
in
pop
mov
inc
ret
inc
fimull
jle
fld
hlt
ja
inc
cmp
rorb
mov
mov
xchg
sbb
mov
loopne
mov
cmp
mov
lods
adc
lds
add
scas
aad
sahf
add
outsb
lds
jb
xchg
mov
call
call
xlat
mov
jne
or
insl
fldcw
jo
enter
out
mov
pop
sbb
mov
sub
sub
int3
data16
sti
sbb
in
vmovntps
jmp
xchg
pop
call
and
pop
aam
cltd
outsl
and
or
loop
jg
adc
rcll
les
inc
notb
mov
mov
mov
pop
xchg
loope
imul
jb
xor
movsl
ret
adc
into
or
call
and
jbe
mov
inc
cmp
idivl
inc
cld
mov
fnstcw
cli
push
divl
lcall
cwtl
mov
inc
korw
xchg
aam
sbbl
and
inc
push
adc
mov
mov
aad
sbb
call
push
dec
jle
dec
aas
aad
movsb
lret
stos
clc
pushf
xchg
push
dec
push
decb
mov
pop
ljmp
adc
movsl
jg
jns
lods
mov
jae
jp
xchg
ss
jp
outsl
cmc
aas
fbld
xchg
xchg
inc
jmp
fisubs
leave
scas
pop
xor
addr16
mov
ret
jmp
pop
pop
mov
aad
popa
xor
inc
cmp
bound
negl
lods
push
jns
add
mov
inc
pop
aas
mov
rep
xor
inc
add
or
decl
inc
adc
inc
cmp
mov
xchg
lods
nop
push
inc
xchg
xchg
fdivr
out
jl
in
mov
stos
je
aas
mov
mov
mov
daa
dec
dec
lds
inc
fbstp
cltd
push
adc
fisttpl
js
dec
sub
test
and
das
popf
pop
jl
fwait
and
sbb
sbb
xlat
add
jg
or
leave
test
push
je
ss
inc
lret
push
repnz
mov
sahf
pushf
mov
fwait
xor
rcll
mov
push
scas
sahf
lcall
lock
mov
pop
out
mov
sub
or
xor
fldcw
jp
xor
dec
lahf
clc
decb
shll
insb
jo
movsb
dec
test
imul
in
andl
jl
jb
test
insl
add
das
mov
in
mov
lahf
jmp
mov
ret
ror
cld
xlat
xor
xchg
sbb
adc
or
dec
in
pop
jne
inc
sub
adc
mov
scas
mov
test
orl
pop
shlb
fwait
add
mov
dec
mov
test
mov
dec
int3
cmp
push
insl
inc
or
cmp
minps
jo
repnz
idiv
jle
jecxz
insl
mov
mov
negb
test
xor
inc
jmp
popf
push
fidivs
cld
jo
mov
inc
adc
shrl
sbb
lcall
outsb
outsl
idivb
jp
js
out
mov
pop
xchg
std
push
sub
push
repz
mov
shll
sbb
mov
cmp
jnp,pt
shll
je
and
add
sub
mov
test
movsb
sbb
dec
hlt
out
out
and
and
test
test
in
jns
mov
aas
sbb
jae
repnz
subb
nop
fildll
insb
or
mov
popf
cs
jno
pop
cmpsb
cli
or
fwait
push
mov
cmp
mov
mov
dec
scas
sti
sti
fxch
push
iret
cwtl
inc
inc
pushf
sbb
dec
aas
sub
adc
jnp
or
push
push
aas
stos
or
mov
adc
imul
pop
or
cmp
nop
scas
xor
imul
lods
cmc
mov
lcall
std
pop
cmp
xlat
mov
mov
mov
lret
dec
repz
xor
xchg
shl
pushf
int
jb
pop
dec
enter
divl
sub
lret
scas
imul
add
aas
arpl
decb
ret
div
and
xchg
ljmp
xor
cmp
dec
xor
jl
xchg
jnp
mov
xlat
mov
push
fcmovnu
add
in
scas
xchg
les
cmp
shll
pop
dec
cmpsb
in
lods
lds
push
mov
cmp
jnp
pop
popf
nop
push
or
lret
push
mov
mov
dec
mov
ljmp
cmp
xchg
jno
mov
in
mov
mov
inc
jmp
repnz
push
test
stos
scas
sbb
add
pop
scas
and
jnp
ds
dec
in
mov
mov
nop
hlt
cmpsl
aam
aam
clc
cmpsb
das
repnz
addl
mov
mov
ljmp
out
faddl
add
gs
inc
movsb
push
inc
data16
mov
cmc
sbb
loop
push
push
xlat
scas
pushf
cmpsl
leave
mov
ret
push
fwait
enter
iret
sub
xor
add
mov
and
push
xchg
add
aaa
ja
imul
push
sbb
push
out
lods
outsl
xchg
push
pop
mov
gs
out
inc
jl
xlat
xor
xchg
ret
mov
nop
mov
push
cmove
stos
movsb
fisttpl
inc
orl
mov
and
lahf
add
pop
dec
aaa
push
add
pop
rolb
leave
data16
fdivrs
xor
arpl
adc
xlat
sub
or
je
mov
pusha
mov
push
mov
jmp
sbb
int
pop
outsb
mov
jbe
xchg
and
pop
cltd
dec
insl
sub
jno
mov
lret
sti
mov
into
idivb
inc
scas
gs
loopne
mov
loope
xchg
add
dec
das
inc
adc
mov
lock
nop
push
push
lret
filds
arpl
cmp
loope
loopne,pn
addr16
mov
mov
lret
jmp
in
xlat
jb
adc
leave
andb
jb
dec
push
test
adc
mov
clc
push
xor
push
push
outsl
call
mov
jo
movsl
stos
out
push
fprem1
jnp
mov
or
dec
sbb
shlb
push
or
xchg
add
rclb
pop
lea
lcall
repz
gs
cmp
pushf
cld
movsl
stc
push
fucomi
pusha
aaa
mov
dec
mov
test
stos
stc
in
mov
xchg
fwait
int3
push
pop
mov
xchg
xor
ret
mov
pop
dec
fxch
int3
push
mov
cmpsl
xchg
pop
adc
fs
outsl
mov
and
sub
mov
inc
cmc
fdivl
and
aad
xchg
ljmp
or
fstps
mov
add
and
jp
xchg
call
add
in
mov
xor
aas
mov
jl
mov
dec
data16
push
mov
js
mov
lock
dec
incb
inc
mov
pushl
orb
in
imul
cmpsb
mov
pshufw
dec
daa
mov
xor
push
mov
fdivrl
iret
ja
jp
shrl
daa
shr
inc
push
push
add
xor
out
loope
cmc
mov
mov
inc
push
ss
test
flds
push
xlat
cltd
mov
inc
cmc
sub
inc
jns
popa
out
les
insb
push
jnp
xchg
cmp
leave
fcmovne
sbbl
pavgw
push
cmp
push
hlt
cmpsl
outsl
movl
push
or
xor
mov
push
add
xor
and
imul
adc
mov
jb
shll
sbb
fwait
adc
adc
int3
xor
cld
movsl
adc
xorl
hlt
jg
mov
xor
add
xchg
mov
into
push
ja
push
pop
movsb
dec
xor
xchg
subl
dec
fcmove
rcr
stc
mul
push
loope
inc
or
push
pop
adc
int
or
repz
sti
pshufw
and
test
clc
cs
out
mov
aaa
das
and
inc
call
test
mov
ss
clc
sti
mov
in
rorl
jge
fsub
mov
ret
or
or
std
pop
les
cmp
xchg
cmp
fistps
outsl
jo
push
xor
push
jge
dec
inc
int
adc
dec
fidivl
shll
in
fsub
jge
aad
mov
jo
fnstsw
mov
xor
cwtl
adc
neg
or
fwait
push
shll
cli
cmpsb
cmp
adc
pop
push
inc
mov
mov
or
not
xchg
xchg
mov
pop
lahf
inc
mov
call
je
stos
lock
lds
xchg
sub
jg
lods
inc
nop
pop
in
fstpl
scas
decb
xor
outsl
adc
cld
push
movsl
and
xor
cltd
je
adc
loope
stos
jmp
sub
stos
les
iret
mov
js
mov
daa
outsb
xor
sub
test
sub
sub
add
adc
in
sbbl
loope
xchg
mov
push
push
lock
push
in
out
inc
lock
aaa
ret
or
nop
cmp
lods
dec
xchg
sbb
mov
cmp
dec
loop
dec
inc
aam
ret
into
or
mov
movsl
add
adc
xchg
ret
xchg
hlt
mov
pop
inc
inc
jae
clc
adc
xchg
cwtd
pop
sbb
mov
sahf
aas
fwait
adc
adc
inc
adcb
lcall
js
sbbl
push
xchg
testl
scas
pop
adc
inc
sbb
xchg
xor
mov
mov
xor
xchg
adc
add
push
out
sbb
inc
mov
das
hlt
push
pop
mov
add
add
lock
pop
lea
stos
addb
je
orl
adc
lds
or
inc
jl
sbb
insl
leave
sub
stos
push
push
outsb
xchg
jne
mov
sub
sub
mov
fwait
out
test
pop
xor
or
aam
mov
mov
xchg
xchg
pushf
or
data16
and
push
out
call
mov
loopne
sbb
rolb
popa
mov
je
jge
cltd
mov
addl
sbb
je
movsb
pop
daa
jno
icebp
cmc
mov
lret
and
and
xor
imul
andl
ret
lret
mov
popf
push
cmp
dec
out
in
jo
xchg
sbb
lret
lock
mov
add
sub
push
adc
rorl
push
jge
jecxz
push
out
lods
or
iret
or
push
adc
daa
dec
push
adc
mov
cs
pop
out
mov
into
js
dec
inc
pushf
adc
inc
dec
repnz
test
inc
loop
and
arpl
mov
push
xor
or
js
out
xchg
mov
or
mov
mov
lds
jp
fisubl
jnp
incb
add
aaa
inc
mov
sub
xchg
lret
dec
mov
xor
dec
es
jbe
mov
jbe
test
jbe
repz
rclb
mov
inc
lock
jg
add
cltd
mov
mov
sbb
xor
add
sub
pop
loope
clc
mov
cmpsb
lcall
jp
icebp
inc
dec
sub
cmpsb
shlb
into
push
push
fistpl
stos
pusha
lret
enter
aas
ret
sahf
xchg
clc
or
fcomps
pop
lret
jg
dec
push
mov
lea
mov
and
jae
cmp
movb
shl
andb
popa
nop
aam
mov
pushf
inc
jnp
fs
push
sbb
mov
xchg
push
mov
cmc
dec
jnp
icebp
mov
addl
mov
adc
dec
mov
push
jecxz
lock
bound
ss
js
das
sbb
popa
outsb
xlat
or
jnp
call
jb
in
inc
adc
stos
xchg
jnp
adcb
insb
fldenv
adc
push
aam
and
xchg
inc
movsb
into
and
movsb
arpl
popf
push
mov
pop
xchg
arpl
mov
call
lcall
pop
inc
mov
lret
and
xchg
push
jmpw
push
or
out
and
shlb
out
data16
jmp
mov
push
call
sub
imul
mov
jge
imul
xchg
push
inc
jbe
scas
jnp
gs
push
pop
add
sub
call
xor
pop
stos
in
fcmovu
clc
inc
fucomp
sbb
inc
adcl
lods
mov
jne
sbb
outsb
cli
add
push
repnz
adc
push
cwtl
cmp
and
mov
mov
inc
push
es
sbb
xor
jp
bound
mov
movl
push
repz
not
mov
cmpsl
aad
int3
and
ret
movsb
out
nop
jb
mov
pushf
jbe
push
push
jle
in
dec
ficoms
jb
pop
lock
incb
pop
movsb
jmp
push
scas
seto
mov
sarl
fs
adc
repnz
lods
lret
adc
and
and
clc
sub
sbbl
mov
inc
mov
add
dec
mov
insl
add
xchg
and
jne
sbb
ljmp
push
sub
mov
imul
mov
cmp
xchg
sbb
mov
ret
popf
mov
addr16
jmp
rcr
xchg
in
lock
aaa
stc
test
push
bound
xlat
push
mov
test
bound
sub
xchg
and
push
ret
je
sub
push
jns
mov
adc
push
mov
imul
dec
sarb
adc
ss
and
aad
jne
xchg
push
sub
sub
sahf
pop
rclb
sti
sahf
sbb
mov
pop
dec
std
push
xchg
cmp
cmp
adc
mov
or
aam
sub
daa
aaa
icebp
outsl
cmp
pushf
sbb
imul
test
out
and
sbb
xor
cmp
dec
push
imul
push
aaa
pop
jb
into
insb
es
in
xor
lods
mov
dec
xchg
push
pop
insb
cmpl
cwtl
or
je
data16
inc
loop
int3
es
mov
inc
mov
stos
jo
xor
ret
add
jno
mulb
icebp
sbb
jecxz
cwtl
repz
push
je
ret
inc
push
rcl
lcall
cmpsb
xchg
dec
xchg
in
pop
sub
movsb
xchg
ss
hlt
fwait
xlat
jnp
sahf
jmp
mov
push
jne
ret
mov
icebp
xor
sub
push
inc
cli
insb
int3
stos
std
jne
xchg
shl
inc
jbe
and
push
push
cmp
jge
adc
repnz
jbe
sbb
outsb
sahf
mov
lahf
sti
mov
inc
test
mov
jg
sub
pusha
jo
das
adc
mov
sbb
scas
test
insb
mov
test
mov
test
xchg
dec
scas
mov
das
or
sbb
mov
lods
cmp
ret
lods
fistl
lds
jo
lret
dec
cs
jmp
lods
lcall
pusha
test
pop
fwait
mov
fdivl
jp
adc
lret
les
sti
adc
rorl
jmp
dec
inc
aaa
jne
cmp
cld
out
pop
inc
sahf
mov
add
shlb
and
cmp
rcll
sarl
popf
lret
pushf
mov
sbb
dec
cld
cmp
add
push
add
sbb
in
jno
ja
cs
iret
pop
or
mov
push
rcrl
xchg
iret
js
dec
fmull
imul
mov
mov
outsb
aad
push
dec
loopne
jnp
sbb
add
lret
repz
lret
cmpsl
popa
adc
xor
push
subl
fsubs
mul
sub
std
sub
insl
es
pushf
inc
xchg
adc
cli
adc
nop
imul
inc
pop
mov
imul
inc
jns
lods
xor
jmp
cwtl
sub
adc
aad
scas
lock
xor
pop
scas
sbb
icebp
cmp
idivl
mov
mov
enter
mov
push
fldt
add
mov
rcr
test
stc
pop
push
daa
incl
imul
lret
jb
cmc
xchg
int3
adc
pop
xlat
or
lahf
mov
fcompl
jno
and
jno
add
movsb
mov
test
jecxz
sbbb
stc
cld
cmp
xchg
enter
outsb
inc
push
add
addl
into
jl
shll
lea
jo
mov
dec
cmp
cmpsb
mov
fwait
inc
daa
shl
mov
xchg
adc
pop
ret
mov
out
mov
cmp
in
cltd
stc
mov
adc
data16
sub
mov
lahf
cmp
add
or
inc
push
or
call
inc
adc
lea
mov
mov
xchg
inc
data16
jno
jmp
in
roll
ret
push
mov
data16
rcll
orb
mov
std
addr16
pop
jmp
ljmp
sarb
sbb
and
sub
test
rcrl
hlt
xor
push
test
jp
loope
pop
lods
pop
lds
movsl
cmp
mov
jle
clc
push
test
cmp
xchg
mov
pop
lods
mov
mov
cmp
roll
mov
mov
addr16
xorb
sbb
dec
loopne
movsl
lds
repnz
data16
dec
repnz
int
test
jp
push
pop
aaa
sub
xor
mov
arpl
int3
imul
popf
jl
roll
andnps
clc
aas
sub
push
jecxz
add
ret
mov
xchg
pop
inc
cmp
and
call
cmp
push
fsubl
add
lret
repnz
and
xorl
pop
xor
rol
inc
add
fcomip
arpl
sahf
and
adc
lea
fwait
imul
pop
movsb
mov
inc
pop
mov
pop
and
stos
mov
jge
mov
and
add
rcr
push
pusha
push
aas
pop
popa
dec
jmp
mov
roll
pop
inc
sbb
xor
in
inc
sub
gs
pop
mov
cmp
push
cli
and
jb
mov
ss
mov
sbb
push
loopne
cwtl
mov
das
push
dec
xchg
jl
ds
rcl
mov
sub
lahf
enter
stos
mov
xor
stos
into
xor
das
jg
adc
pop
in
mov
push
cmp
push
push
inc
repz
sbb
dec
push
stos
mov
mov
sub
out
rclb
pop
add
jae
mov
or
and
ja
xor
mov
jnp
enter
cli
cmp
fsubl
outsb
movsb
xor
rcrl
mov
lret
or
push
mov
push
and
cmpsb
mov
clc
adc
mov
add
mov
mov
jl,pt
scas
xlat
les
ljmp
and
ficompl
les
jecxz
inc
inc
or
mov
mov
ret
loopne
push
pop
fdivl
mov
sub
adc
xor
dec
jge
mov
xor
jne
nop
lods
movsb
inc
push
inc
into
mov
lock
imul
xlat
sbb
enter
push
test
sub
inc
jecxz
bound
shrd
inc
stc
xor
jo
push
test
mov
push
das
cmp
or
sub
jge
xor
cmp
mov
ljmp
mov
rcrw
movsb
in
mov
cmp
not
mov
or
es
dec
and
xor
cmp
sahf
dec
scas
xchg
xchg
dec
loop
test
push
and
jp
xlat
out
pop
test
xor
leave
mov
jo
dec
movsb
adc
nop
or
dec
hlt
jl
frstpm(287
jbe
andl
mov
int
repnz
jo
xchg
adc
jbe
cwtl
lds
push
sub
pop
sub
rorl
xchg
clc
cmc
jb
sub
cmp
lock
xchg
xor
int3
cmovg
mov
mov
push
xor
dec
adc
sbb
cmp
mov
sbb
cmp
dec
jmp
in
push
ss
adc
in
sbb
in
ret
scas
mov
sbb
rorb
lcall
lds
ficompl
fs
push
or
pop
movsl
pushf
cs
ret
mov
int
xchg
inc
dec
jns
pop
inc
xchg
sub
insb
jne
daa
adc
repnz
imul
mov
xchg
jno
in
mov
xlat
ljmp
shr
pop
sbb
sbb
dec
xor
mov
rclb
sbb
pop
dec
inc
cmp
cld
xor
xchg
add
pop
or
mov
aaa
cld
lret
dec
add
push
inc
xor
loope
and
jmp
cli
pop
sub
scas
cmp
dec
into
xchg
divb
fistpl
add
and
roll
std
arpl
scas
shlb
call
insl
fldenv
add
adc
xor
stos
push
sub
jno
cld
mov
jb
xor
mull
addr16
adc
fildl
add
mov
xchg
pop
add
mov
xor
mov
mov
and
and
and
push
pusha
je
shll
inc
adc
push
or
nop
add
mov
je
push
xchg
or
call
lds
dec
xchg
hlt
out
mov
xchg
movl
pop
mov
inc
adc
or
lock
cmp
icebp
xlat
addr16
mov
inc
nop
add
enter
scas
test
lea
xorb
mov
je
imul
pop
jge
insb
jp
stos
dec
movsb
sbb
push
fimull
xor
frstor
xchg
cmp
stos
sub
add
dec
out
pop
mov
pop
push
rcl
jo
xor
je
jno
fcomps
pop
mov
mov
dec
inc
test
dec
pop
push
adc
pop
mov
push
adc
jmp
pop
jmp
dec
inc
les
jnp
jl
or
mov
inc
pop
jns
xor
mov
outsl
adc
mov
sbb
lods
add
add
jl
add
dec
daa
push
xchg
push
sub
pop
xchg
xchg
pop
lods
xlat
mov
ss
cmp
leave
and
popf
cmp
sbb
adc
jne
cmp
shll
fists
pop
clc
loop
and
add
or
daa
in
pushf
inc
repnz
adc
jle
jnp
cmp
cwtl
scas
and
repnz
push
and
aas
shll
jecxz
popf
push
inc
cmp
gs
sahf
ficomps
stos
push
ret
or
lds
daa
dec
jne
and
adc
or
test
int
aam
xchg
insl
popa
inc
mov
pushf
sbb
aas
aaa
or
out
lock
ds
jmp
mov
sbb
loop
stc
jae
jl
adc
lret
mov
adc
push
dec
jno
pop
push
or
push
sbb
outsl
sub
dec
cmp
ret
xchg
pusha
inc
mov
adc
lcall
and
fiadds
int
imul
xchg
jecxz
fstpl
or
inc
fs
imull
lds
pop
push
mov
or
loopne
pusha
jge
sbb
mov
mov
and
jecxz
xchg
jne
fildll
mov
pop
fdivs
mov
cmc
dec
aam
jg
cmp
nop
jno
push
sarl
jno
mov
dec
xchg
out
and
dec
in
stc
in
imul
fisubrs
aam
mov
idivl
and
push
fstl
mov
loop
mov
pop
scas
movsl
mov
or
jnp
pop
sbb
xchg
xor
jecxz
cwtl
repnz
scas
sti
insl
cld
jmp
mov
jne
sti
mov
ret
pop
fstps
push
rclb
movsb
repnz
sub
aam
adc
and
jp
test
and
push
sbb
out
xlat
xorl
cwtl
scas
mov
push
in
jo
in
sub
orl
sbb
lret
pop
push
mov
out
mov
icebp
jns
call
fistps
mov
sub
jecxz
icebp
jo
xor
jle
aas
frstor
xlat
cli
xchg
adc
push
mov
jns
inc
cmp
lret
jmp
dec
adc
jb
dec
mov
sub
cmp
xor
xchg
out
xor
sbb
mov
lcall
into
pushf
clc
mov
cli
pushf
pop
sarb
xchg
aad
pop
jns
dec
adc
loope
adc
xchg
add
mov
adc
pop
arpl
out
in
mov
push
jno
pop
xchg
lock
pop
lods
mov
inc
es
dec
mov
out
pop
insl
outsb
push
das
xor
jge
mov
in
jecxz
std
push
inc
push
in
rcrl
push
mov
iret
stos
icebp
pop
adcl
fs
or
mov
popa
test
int3
fdecstp
int3
push
movsl
arpl
adc
add
inc
into
sbb
mov
ljmp
aas
test
mov
sub
pop
push
mov
out
into
xchg
std
cli
jecxz
inc
fstps
or
jmp
push
sub
fs
in
mov
jnp
fsubrs
and
mov
jecxz
imul
push
and
test
inc
sub
mov
lods
js
data16
dec
lds
xchg
mov
adc
dec
ficomps
sti
cmpb
out
push
dec
jmp
xor
in
lahf
fmul
test
mov
pop
sbb
adc
sahf
jnp
shlb
mov
sti
jo
stos
adc
cmp
cmp
scas
mov
fldcw
inc
sub
cmp
mov
pop
cmp
imul
dec
aas
loopne
sbb
pop
in
jg
ljmp
sbb
out
rol
outsb
xchg
icebp
add
sub
adc
sub
pushf
mov
call
dec
mov
popa
icebp
or
dec
fcomi
push
lret
pusha
sub
sub
push
cmp
fchs
mov
add
sub
iret
xor
int
aam
jmp
dec
cs
andl
mov
cmc
push
pop
aam
jae
jbe
cmpsl
cmp
fcmovb
ret
les
dec
push
cmpsb
jbe
or
roll
and
dec
aaa
hlt
cmp
and
mov
inc
sbb
push
sub
and
scas
fildll
repnz
mov
dec
push
mov
push
daa
mov
repnz
push
sbb
or
incb
dec
int
jb
push
cmpsl
add
fnstcw
jmp
addr16
push
ret
insb
stos
clc
inc
popf
popa
dec
sarb
test
aam
and
std
cli
test
jo
xchg
out
mov
jecxz
adc
mov
popl
inc
test
comiss
sbb
cli
xor
xlat
and
lock
push
dec
fadds
inc
in
push
dec
cmp
test
inc
pushf
fisttps
pop
rorb
mov
ss
lcall
pop
out
scas
dec
fmull
adc
sub
outsb
lret
jne
outsl
mov
stc
jecxz
cmc
hlt
nop
add
push
dec
mov
ret
int3
jp
or
mov
sahf
test
sarb
insl
xor
dec
jnp
pop
stc
addl
sub
fisttpll
lcall
and
imul
lock
adc
mov
int3
mov
xchg
outsl
sub
test
push
or
in
jo
inc
mov
push
and
aad
pop
and
dec
stos
mov
fwait
sbb
stos
test
xchg
sub
and
sub
and
fimull
mov
xor
lahf
loopne
repnz
add
mov
dec
cmp
mov
repz
movb
mov
inc
cld
jo
mov
jle
idiv
rcl
aas
push
cmpsl
jbe
mov
ss
outsl
add
mov
add
mov
jecxz
push
xor
outsb
jecxz
movsb
xchg
inc
insb
mov
or
sbb
sub
or
push
sti
into
push
cltd
xor
addr16
xorl
movsb
adc
shr
and
and
imulb
fcompl
or
aad
push
ds
push
push
rolb
icebp
mov
imul
js
rolb
push
or
test
gs
icebp
into
dec
test
aad
add
mov
adc
ret
out
sarb
jge
inc
sbb
out
xchg
imul
jmp
sbbl
add
pop
inc
dec
out
mov
mov
mov
push
pop
in
or
inc
fnsave
fisttps
cmp
loop
negb
outsl
xor
dec
inc
push
push
jmp
jmp
push
in
lds
push
xor
daa
dec
push
mov
inc
or
scas
xor
movsl
dec
adcl
sbb
pop
js
es
cltd
inc
aam
inc
lds
ljmp
lods
dec
loop
inc
pop
out
fdivl
sbb
lret
mov
loope
mov
push
jmp
mov
jne
roll
xchg
dec
or
loop
repz
adc
sub
stc
pop
xor
cmpsl
xchg
mov
pop
lcall
jne
xchg
adc
push
xchg
inc
cmp
ds
lahf
outsl
cs
xlat
add
neg
daa
adc
xlat
rorl
loope
dec
outsl
jl
push
sbb
pop
std
inc
mov
jmp
mov
sbb
xor
mov
adc
es
jmp
dec
in
and
mov
jnp
xchg
fimuls
dec
leave
hlt
xchg
fldenv
fs
xchg
cmp
jae
lret
fucom
mov
loop
cli
test
adc
pop
inc
aas
lods
in
cmp
add
jb
adc
popa
push
test
in
xlat
inc
arpl
dec
mov
mov
aad
cmpb
sti
inc
f2xm1
rclb
dec
sbb
cltd
dec
cmp
rcrl
int
pop
mov
sti
out
dec
cmp
push
pop
fsubr
mov
loope
leave
or
pop
inc
ja
jnp
sub
push
dec
cmp
test
cli
xor
inc
push
scas
jb
mov
add
adc
mov
push
mov
and
inc
pop
mov
xor
outsl
sarb
mov
test
in
lea
pop
lods
test
or
sub
sub
jbe
mov
xor
sbb
test
pop
push
inc
xor
shrb
inc
sbb
aaa
push
fidivrs
push
subl
inc
fbld
or
sub
int3
dec
mov
mov
sbbb
inc
xor
add
push
cli
dec
bnd
call
lahf
sahf
push
xor
push
adc
popa
or
mov
adc
or
repnz
inc
cmpsl
xor
out
and
aas
push
out
xlat
ret
add
sbb
shl
hlt
and
jne
ljmp
ds
test
in
mov
les
push
sub
mov
add
and
jno
sub
out
jl
add
shrb
clc
mov
mov
cmp
loope
sbb
fimuls
mov
pop
push
xor
mov
jnp
test
jae
test
inc
sbb
add
mov
push
pop
arpl
stos
ret
mov
push
rcl
testl
push
adc
imul
xchg
push
xchg
cmpb
dec
mov
dec
sbb
aas
lcall
insb
pusha
sbb
loop
xor
out
jg
andl
insb
sub
ret
fildll
test
xchg
mov
push
jle
ss
dec
sbbl
jmp
cld
jg
movb
cmp
sahf
aaa
jle
push
pop
push
outsl
xor
stos
lret
pop
stos
sbb
test
fcmovne
bnd
mov
pop
cmpb
lock
das
icebp
sub
daa
loopne
cmpsl
pop
jbe
lcall
pop
cmp
stos
mov
cmpb
adc
cmpl
aad
jecxz
xchg
jl
out
icebp
push
in
cmp
adc
testb
inc
popf
loopne
jbe
icebp
in
cld
out
fisubrs
dec
sbb
sub
and
sbb
push
sbb
bnd
inc
jmp
push
xchg
leave
jns
push
sbb
jecxz
sub
sub
cs
pop
push
out
mov
sbb
enter
hlt
dec
cs
or
scas
loop
test
out
pop
mov
sbb
inc
sub
fnstenv
rcrb
mov
push
add
js
and
cltd
inc
fldcw
cmp
sahf
adc
lds
sub
jmp
cld
dec
or
jb
comiss
scas
jbe
mov
inc
mov
enter
pop
pop
mov
mov
inc
loope
fimull
movsb
sbb
xchg
push
repnz
xchg
pushf
push
sbb
cld
jp
cmp
decb
push
mov
jne
orl
insl
fnstcw
pop
dec
push
or
inc
stos
cmp
dec
es
jne
dec
fdivs
fildl
mov
and
je
into
fdivs
jmp
iretw
and
dec
pop
mov
push
sub
ret
sbb
shlb
inc
mov
sar
jp
adc
jp
push
add
js
or
pop
xchg
cwtl
addb
pop
mov
adc
mov
outsl
in
pop
arpl
lahf
and
adc
pop
adc
cmp
mov
negl
and
dec
shrl
jle
aad
jecxz
frstor
xchg
fisttps
inc
push
mov
add
push
add
fdiv
fimuls
je
stos
dec
aad
inc
jbe
add
hlt
push
mov
inc
out
in
push
or
lock
jno
pop
rcrb
lea
sub
test
sbb
fsubrl
inc
inc
sarb
dec
aam
sub
dec
mulb
ljmp
push
les
pop
stos
subl
loop
add
in
nop
sbb
cmp
push
nop
arpl
mov
jne
inc
ficoml
mov
int
lretw
leave
add
cmp
push
and
repz
mov
mov
aas
fistpl
mov
xor
repnz
jno
push
push
jae
and
jbe
ss
lahf
jp
mov
cli
push
imul
sbb
xor
dec
insl
js
or
jmp
and
loop
imul
push
outsl
mov
or
push
jmp
lea
push
inc
pusha
xlat
push
or
pop
imul
leave
inc
xchg
repz
inc
mov
dec
sub
sub
stos
jecxz
inc
int3
xor
add
jno
mov
dec
lods
pop
mov
add
cmpb
out
movsb
test
add
mov
push
push
sti
dec
xlat
and
movsl
inc
push
outsb
xor
lods
jb
hlt
jo
mov
xchg
sahf
shrl
lods
inc
xchg
ljmp
pop
jmp
shlb
dec
xchg
lods
nop
nop
pushf
aad
sub
and
repz
mov
sub
mov
cmpl
xchg
movsl
sub
mul
cwtl
mov
xchg
leave
pandn
push
subb
in
pop
xor
jg
add
mov
decl
aas
aas
pop
xchg
adc
add
jge
sub
ja
int3
hlt
popa
je
out
loope
fstpl
outsb
adc
lahf
mov
gs
insb
xor
ret
in
xchg
ja
icebp
aam
cmp
aam
xchg
lods
push
xchg
subl
pop
incl
push
out
dec
pop
mov
dec
xchg
mov
lea
test
cmpsl
hlt
test
sbb
in
cmp
inc
xor
add
add
cs
xchg
add
push
rep
addr16
dec
mov
test
je
popa
int
add
add
out
decb
cmp
gs
dec
shrb
stos
mov
movsb
inc
cmp
lock
das
or
mov
mov
push
in
shr
jae
pop
aam
fwait
iret
movl
inc
push
cwtl
xor
stc
xchg
dec
clc
mov
mov
inc
and
imul
jle
push
sti
mov
lods
xchg
and
jne
lods
adc
push
pop
rcl
mov
mov
insb
repz
lods
push
dec
xchg
xor
inc
sub
loopne
or
sub
cld
inc
dec
movsb
push
jno
imul
mov
push
movsb
mov
mov
dec
addr16
out
push
inc
js
add
dec
xchg
or
jnp
cmpb
jne
xorb
adc
mov
popf
sahf
xchg
aam
lds
bound
jg
subb
pop
inc
cmp
push
pop
repz
xchg
mov
divb
fiadds
pop
xlat
arpl
dec
popa
in
adcb
push
loop
push
mov
mov
rclb
push
insb
xor
push
pop
rcrl
test
pop
cmp
je
inc
lods
dec
sarl
push
sub
add
loop
mov
jne
inc
rcr
jmp
movsb
mov
verw
fcoms
lods
test
out
jge
into
push
or
xor
push
push
sub
xor
sub
jnp
repnz
mov
xchg
test
xchg
imul
xchg
test
lock
inc
lea
xchg
and
mov
data16
out
pop
aam
je
mov
xor
fucomp
xor
arpl
cmp
int
sbb
jecxz
xorl
jbe
cmp
push
push
adc
xor
pop
int
iret
push
xlat
mov
loop
sbb
adc
outsl
sub
sbb
or
jge
pop
aas
test
cs
lea
push
sarb
add
mov
add
data16
mov
mov
inc
sbb
push
mov
xchg
ret
push
or
pop
jl
aas
fstps
popa
push
inc
in
stos
cli
cmp
call
mov
ror
hlt
andb
cmp
cli
mov
lock
sbb
mov
xchg
fs
jns
ror
mov
movsl
jge
mov
movsl
mov
aam
or
out
call
mov
shll
dec
dec
shll
lods
pop
jno
push
daa
sbb
or
inc
aas
fistpl
adc
or
xchg
insb
es
popf
je
int
cmpsl
and
loope
pop
je
xor
mov
sub
data16
fwait
test
sbb
decl
sub
add
sub
int3
jo
sbb
pop
mov
jge
and
sar
lea
and
out
stos
mov
and
movsl
fs
sahf
pushf
stos
add
imul
idivl
dec
fnsave
popa
out
leave
and
and
adc
xor
sub
ds
mov
add
cmpl
dec
out
je
shl
aam
jp
jno
jmp
add
mulb
mov
add
ds
les
ljmp
xchg
aad
fiaddl
popa
jnp
xor
repnz
jge
mov
or
mov
xor
push
jae
mov
popa
and
hlt
mov
sbb
or
ret
fadds
dec
dec
fidivrl
cmpb
jge
es
sbb
cli
ror
mov
mov
cmp
inc
std
fistl
lods
stos
rcrb
and
sbb
lcall
inc
outsl
lods
push
add
dec
rcll
add
pop
and
cmp
jp
xchg
arpl
or
hlt
std
pushf
push
pop
mov
push
out
and
mov
test
sub
nop
int3
push
xor
sub
jecxz
dec
test
dec
jae
jo
jno
scas
xlat
out
cmp
pop
js
lahf
rclb
cwtl
fsubs
fimuls
and
xchg
insl
push
jl
cmp
mov
pushf
les
cltd
jb
add
mov
fisubrs
cmpl
pop
cmp
cmc
mov
ja
adc
mov
stos
inc
dec
dec
sub
lea
lods
cmp
aaa
nop
push
jecxz
stos
fdivs
push
lock
mov
inc
mov
add
mov
aam
jle
push
fstps
xchg
mov
lret
les
mov
ret
push
mov
dec
out
push
xor
lock
lods
push
in
and
xor
dec
xchg
mov
call
cmp
jl
lds
jae
adc
fucomi
pop
mov
mov
scas
imul
sbb
into
push
sbb
arpl
shll
mov
in
xor
mov
pusha
es
ss
in
push
stos
mov
fsubrl
cmc
sti
scas
dec
xor
test
mov
xor
push
rcll
mov
mov
mov
push
aam
imul
fisubrs
rcrl
pop
xor
fcmovu
push
mov
out
jl
rcl
mov
mov
mov
call
stc
cmp
test
cwtl
xchg
lods
sub
and
rclb
or
dec
mov
in
scas
sbb
sbb
aas
pop
cmpl
lret
out
in
mov
stos
or
ljmp
push
daa
sti
inc
sbb
sub
cmpsl
fwait
mov
pop
imul
and
ret
add
faddp
push
test
push
pop
xchg
cltd
pop
add
pop
xchg
incb
mov
pushf
mov
xchg
jp
popf
repz
or
jae
jmp
pop
xor
lahf
push
int
mov
sub
inc
cli
sub
dec
insl
out
gs
lods
int
or
push
cli
jmp
insl
or
xchg
dec
aad
std
test
mov
das
push
sub
pop
stos
shlb
xlat
push
mov
jo
sbb
nop
and
sbb
xlat
imul
push
repnz
mov
pushf
add
push
push
insl
imul
xchg
xor
sub
andb
fidivs
mov
push
xor
xor
pushf
cltd
xchg
test
cmp
ret
out
test
rcr
xchg
xor
ret
jae
jnp
mov
gs
xchg
push
dec
sbb
dec
fcomps
stc
add
adcl
push
add
divl
fnstenv
outsb
js
out
xor
xor
dec
inc
and
arpl
into
fdivs
mov
inc
jl
pushf
das
lret
rclb
dec
data16
imul
rcrl
loopne
enter
dec
sti
das
imul
xchg
fstl
stos
cmc
mov
xchg
mov
int3
cmp
cmpsb
jae
xor
cmpsl
dec
int
stos
test
cli
mov
cmp
out
inc
loopne
xor
mov
jo
mov
dec
stos
int3
jo
xor
aas
ret
lock
mov
xchg
xor
adc
movsb
pop
or
stos
loope
mov
loop
jo
or
push
stc
or
and
imulb
dec
mov
ljmp
xchg
addr16
rcrl
jae
mov
push
mov
in
jp
loope
pop
ret
cmp
insl
adc
mov
mov
mov
pop
mov
ja
fwait
insl
pusha
iret
dec
inc
lods
cmp
test
mov
pop
pop
stos
cmp
movsl
test
mov
es
subb
in
xor
xchg
outsl
inc
jo
push
adc
sub
loopne
xchg
lea
or
pop
movb
jne
xlat
jbe
inc
iret
cmp
rolb
das
cmp
into
dec
xor
scas
sub
mov
das
fstl
cltd
xchg
imul
in
pushf
add
jmp
loopne
or
or
mov
push
int3
test
add
inc
ds
xlat
cld
mov
pop
bound
jae
xorb
mov
dec
imul
ljmp
push
jo
fstpl
cmp
adc
jecxz
mov
sub
sbb
lock
pop
add
sahf
aad
fadds
mov
adc
fdivrp
dec
repz
pop
sahf
pushf
leave
or
inc
dec
xchg
hlt
aaa
fnstenv
mov
or
lods
fsubl
fs
repnz
inc
push
arpl
fstl
daa
popf
push
fsubs
outsb
mov
inc
adc
in
les
dec
adc
jle
sub
push
add
mov
pushl
lret
sub
das
imul
out
jmp
push
adc
push
add
aas
stos
mov
fistpll
xlat
adc
add
insl
sbb
outsb
ficoms
fstl
cmp
dec
sbb
fisubl
scas
ljmp
mov
rcl
and
xchg
loope
jae
mov
outsl
repnz
xchg
cmpb
or
mov
jno
add
add
orl
test
jb
data16
or
iret
push
cmpb
outsb
add
scas
xchg
lods
sbb
sbb
mov
mov
push
xor
fiaddl
lcall
adc
pop
out
ret
ds
ja
mov
push
sbb
xadd
sbb
adc
push
push
fwait
pop
leave
inc
push
or
ret
jmp
loopne
xchg
jp
mov
sub
cmp
dec
fadd
addr16
clc
testb
lods
push
lods
push
xchg
mov
popa
and
shlb
push
fisubs
mov
das
adc
incl
pop
lods
cmp
pop
sbb
stos
fsubrl
xor
and
cmc
and
aam
int
lea
sti
in
xor
mull
mov
dec
add
mov
test
mov
dec
call
ret
fistl
subl
les
movsl
icebp
lds
or
or
push
cwtl
sbb
pop
mov
pop
push
mov
xchg
mov
xor
sub
inc
sub
inc
xchg
loope
std
loopne
mov
jg
lea
pop
add
cltd
sub
lret
push
xlat
xchg
cwtl
fimull
mov
jns
jp
adc
dec
mov
push
or
loopne
clc
push
pop
mov
mov
push
xchg
or
lcall
in
loop
test
cs
daa
pusha
mov
lods
push
roll
xchg
inc
fnstsw
cltd
cli
push
sub
adc
mov
or
frstor
xor
xchg
addl
lcall
mov
andl
cmpsb
fs
mov
ret
lret
cmp
sub
loope
sbb
xor
add
fs
out
jecxz
jo
dec
ljmp
inc
js
sahf
stos
call
scas
lret
inc
in
jmp
jp
push
xchg
mov
pop
daa
fistpll
mov
dec
scas
pushf
mov
and
jle
fisubrl
faddl
inc
pop
stos
lock
jb
and
mov
scas
sub
push
mov
mov
loop
adc
pop
push
push
jno
adc
jg
scas
pop
aad
call
lods
dec
xchg
xor
adc
sbb
jns
sti
ret
arpl
jp
fwait
ss
mov
mov
adc
dec
and
iret
nop
mov
gs
loop
fs
dec
rorl
or
pop
push
cmpsb
subb
push
cmp
rcll
pop
out
mov
lds
imul
pop
mov
mov
dec
add
mov
dec
lcall
ljmp
jno
mov
push
pop
outsl
push
fldcw
xchg
jo
ja
lret
adc
push
mov
push
add
inc
stos
insl
and
pop
fldt
test
rclb
lock
xchg
into
ret
pop
out
into
outsb
xor
pop
xchg
rcll
adc
mov
add
push
xchg
rcrl
and
and
inc
in
std
jbe
jp
xchg
jo
movsl
adc
sub
inc
leave
mov
loope
andb
repz
roll
jnp
jge
mov
or
mov
pop
mov
add
sub
call
jecxz
int
imul
jo
insl
dec
and
lea
ret
pop
pop
ja
add
mov
sbb
adc
popf
popl
adc
jnp
bswap
mov
fnsave
dec
xchg
xchg
scas
int3
xor
adc
dec
dec
jg
cmpsb
rorl
inc
aaa
popf
insl
adc
pop
cli
push
mov
in
pop
nop
push
mov
repz
mov
jecxz
ss
rcrb
test
out
pusha
lret
shlb
dec
cs
test
shr
jecxz
lahf
cmpsl
mov
cmp
mov
icebp
add
imul
jns
filds
repnz
pop
lods
xchg
movsl
mov
inc
pop
popf
mov
xchg
sbb
xor
inc
cwtl
es
mov
mov
xchg
fdivs
jmp
test
inc
adc
dec
mov
popa
adc
and
and
mov
sub
xchg
out
pop
inc
cs
sub
lds
or
subl
ljmp
shr
pop
std
cmpsb
cld
xor
mov
fwait
cwtl
push
inc
jge
out
xchg
push
mov
ja
es
lock
loop
shll
sbb
out
ror
int
ret
adc
push
fsubrl
inc
sbb
sti
ret
in
sbb
sub
add
xchg
fildll
pop
inc
dec
aas
ja
and
sbb
fnstcw
add
lret
ret
movsb
push
testl
fidivs
ja
sub
loope
push
mov
jmp
mov
mov
dec
sub
aas
das
adc
clc
jne
push
int3
cs
pop
cltd
cmc
out
fadds
fmulp
sub
lods
and
outsb
push
jne
jne
mov
inc
jns
mov
lret
dec
pushf
inc
xchg
pop
xor
xchg
nop
sub
or
xchg
or
test
iret
add
fmull
and
xchg
adc
mov
and
scas
inc
mov
add
jle
sub
jb
sub
lods
and
movsb
fistpl
pushf
test
sbb
dec
fidivs
and
cmc
mov
and
sub
es
pop
mov
cltd
aaa
fs
jmp
add
xchg
xor
gs
test
fs
jge
mov
mov
rcrb
outsl
pusha
out
add
aad
mov
test
insl
loope
xchg
xchg
stos
xlat
dec
shrl
or
adc
and
xor
mov
cmp
sub
pop
ficompl
xchg
ret
rcrb
dec
jg
jne
mov
rolb
mov
mov
push
cmpsl
incl
sbb
push
pop
pop
jae
sahf
mov
int
out
inc
sub
movsb
adc
push
lods
sub
lock
push
jmp
push
inc
mov
lock
mov
push
filds
aaa
fidivl
add
sbb
push
cltd
push
in
sbb
cltd
repnz
xchg
jne
popf
cmp
hlt
or
js
sbb
mov
std
es
scas
rorb
testl
test
dec
andl
inc
repnz
mov
sbb
adcl
je
jl
adc
pop
cld
jmp
arpl
stos
sbb
insl
mov
sbb
sahf
scas
stc
pop
xor
xchg
scas
call
dec
push
imul
sahf
dec
roll
stc
loop
pop
out
and
fdivl
jle
aaa
stos
sub
icebp
andl
inc
icebp
ds
ret
jb
cmp
je
jne
pop
das
push
sahf
mov
rcrb
test
aas
iret
scas
xor
roll
add
push
xchg
inc
les
inc
ss
adcb
repz
call
sbb
shlb
enter
and
sbb
adc
and
in
ljmp
add
xor
add
mov
inc
and
hlt
dec
pop
jecxz
mov
iret
out
pop
or
cltd
cmp
in
xchg
insl
and
pushl
mov
mov
fnstcw
aad
jle
into
scas
jbe
or
inc
mov
sbb
out
js
cmp
in
pushf
cmpsb
and
xchg
je
jne
pop
je
movsb
add
scas
dec
mov
daa
mov
jb
cmp
rorl
inc
sbbl
and
inc
int3
movsb
ror
jg
mov
push
cmp
imul
test
stos
lcall
fisubl
sub
sti
dec
mov
call
adc
add
jl
add
dec
in
dec
or
dec
je
adc
push
aas
mov
mov
fsub
out
jb
test
shrb
or
les
cmp
cmp
test
push
test
out
fsubrs
jge
pushf
pushf
je
jnp
add
aam
lods
sbb
incl
out
jl
add
les
jmp
fsubl
xor
pop
orb
sti
mov
pop
xor
mov
adc
pop
aam
fdivs
lock
and
xlat
and
arpl
lods
sub
mov
pop
or
adc
mov
mov
dec
ret
fisttpl
or
movsl
or
rclb
jbe
movsl
jp
xor
xchg
and
add
jge
insb
pop
and
xor
int
movl
add
gs
mov
mov
dec
mov
incb
mov
mov
sti
cmc
add
jb
pop
int3
inc
scas
dec
jbe
jns
jbe
xchg
dec
dec
mov
dec
mov
cmp
xchg
mov
push
outsb
and
incl
outsb
arpl
push
cs
sti
cli
xchg
fisttpll
fwait
cbtw
mov
mov
outsl
pop
mov
scas
xchg
pop
ds
ret
jge
out
loope
mov
or
lods
pop
mov
sarl
mov
std
adc
sahf
pop
and
into
cmp
push
fwait
push
ret
pusha
xchg
arpl
mov
xchg
jle
flds
mov
mov
jo
or
jmp
inc
pop
cmp
cmp
ljmp
cmp
iret
dec
shl
inc
ja
cmp
cmp
or
inc
mov
rclb
ja
push
fisubl
inc
xor
jno
das
fstps
insb
fucomi
adc
add
push
mov
add
cmp
loopne
jne
push
stos
inc
or
or
mov
dec
xchg
popa
rep
lcall
mov
pop
sti
add
inc
dec
pop
dec
mov
loope
std
xor
and
push
xchg
xchg
test
add
outsb
push
fldl2t
sbb
jo
sbb
shll
sub
sti
std
jle
enter
cmpsl
sti
and
ss
jl
and
mov
or
mov
mov
popf
mov
adc
or
pop
mov
test
and
es
mov
cld
mov
adc
clc
hlt
loop
fdivl
mov
jecxz
imul
je
loopne
mov
insl
lods
fistps
icebp
jbe
and
scas
out
and
sub
adc
aam
and
cmpsb
test
push
aad
insl
mov
sbbb
push
ficomps
pop
inc
mov
push
testl
fwait
pop
stos
out
lock
mov
andb
in
xlat
sbb
xor
outsl
adc
mov
sub
inc
mov
out
sub
addb
insl
sbb
xor
hlt
fwait
aas
pop
add
or
pop
rol
pop
loop
imul
inc
mov
dec
scas
mulb
gs
pop
out
sub
or
aam
cwtl
repnz
inc
adc
icebp
je
or
inc
cmp
inc
mov
addr16
arpl
pop
inc
xchg
aam
jne
adc
xchg
jbe
pop
in
xor
loope
ja
ret
aad
ljmp
mov
pop
jp
fnsave
xchg
mov
mov
fists
add
and
sub
ret
xchg
iret
es
imul
aam
cs
cmpsb
imul
insb
xor
adc
sbb
xchg
cmp
flds
ja
mov
shll
jp
xor
hlt
pop
cmp
lcall
mov
add
imul
and
scas
mov
mov
add
repz
jg
std
mov
xchg
push
jbe
jb
push
mov
leave
mov
cmp
jle
shrl
rclb
imul
sti
popf
lahf
orl
enter
es
cmc
jecxz
jle
jmp
fwait
sub
mov
test
push
xor
add
jae
in
enter
lods
mov
outsl
fdivp
in
push
pop
pop
cmp
push
fld
addr16
mov
int3
rorl
jno
leave
pop
shll
jecxz
sbb
lods
add
popl
rol
mov
add
inc
fdivl
xchg
pusha
adc
addl
test
adc
mov
hlt
rclb
pop
mov
repnz
dec
push
ds
pop
add
cmpsb
inc
rcl
jns
mov
push
jmp
fidivrl
xor
adc
repz
nop
hlt
mov
xor
sbb
std
cmp
or
jb
sti
mov
jp
es
pop
mov
dec
pop
xchg
jns
pop
in
push
je
loope
jnp
ficompl
pop
jmp
cs
dec
call
mov
dec
sub
aaa
inc
lods
fmuls
test
adc
jecxz
hlt
cmpl
push
lods
repz
fsubrl
imul
lds
js
jp
mov
pop
mov
lahf
stos
jo
out
xchg
sub
subb
andl
icebp
xchg
push
data16
push
loope
mov
jo
jmp
ds
mov
sbb
fists
fists
jl
xchg
pop
sti
stos
fsts
cs
mov
xchg
and
add
mov
cli
jge
xor
push
add
sahf
add
mov
push
xlat
aas
push
cmc
test
push
and
cmp
add
mov
cmp
in
lods
cmp
out
les
pop
adcl
jne
sbb
cmpb
cmpsl
aaa
clc
enter
pop
sahf
lret
push
adc
test
in
lcall
imul
mov
or
pop
mov
fisttpl
sub
and
mov
ljmp
cmpsl
jp
cltd
ja
in
shl
xchg
fucomi
xchg
push
xchg
and
pop
mov
insl
add
mov
stos
scas
mov
cmp
inc
fdivrs
pop
xchg
jp
add
adc
inc
dec
or
cmpsb
inc
mov
xor
sub
push
sub
int
jmp
adc
jge
inc
inc
or
pop
cmp
xchg
cmc
out
adc
les
stc
rcrb
sbb
dec
outsb
pushf
pop
sbb
cli
cwtl
aaa
dec
adc
test
jp
dec
rclb
mov
push
enter
pop
lret
mov
pop
fsubl
ret
mov
add
loop
cmp
and
jp
jl
mov
add
int3
pop
lods
lea
into
pop
lods
outsb
stc
pop
mov
jnp
cmp
in
test
sbb
scas
cmp
push
push
cmp
push
jp
xlat
cwtl
xor
cwtl
outsl
je
daa
cld
ljmp
test
rorl
dec
mov
loope
cmp
add
in
out
mov
jo
dec
daa
clc
pusha
cmp
push
xchg
lods
inc
jo
pop
adc
mov
decb
movsb
data16
pushf
cmp
xor
movsl
push
ret
not
jmp
dec
pop
pop
stos
cmc
test
push
push
ljmp
lock
outsl
addr16
sbb
orl
mov
or
dec
jg
jbe
ficompl
es
pop
dec
out
repz
pop
dec
out
pop
cld
or
mov
pop
addb
das
dec
push
dec
pushf
shr
enter
clc
testb
sbb
dec
pop
movsl
nop
bound
push
es
aad
insl
lock
enter
fistpll
iret
and
dec
cmp
icebp
test
lcall
push
or
and
les
pop
je
lea
mov
add
push
add
jne
adc
inc
stos
xor
dec
mov
ret
sub
xchg
and
pushf
sbb
daa
add
cmpsl
out
pusha
cli
xorb
sbb
xor
or
adc
mov
lret
repz
jmp
dec
dec
or
fisubrl
sub
push
cltd
in
rolb
daa
mov
xor
mov
fidivl
jne
push
ret
jbe
add
out
int
xor
out
mov
push
jno
xchg
push
movsl
adc
das
lea
adc
lods
fidivs
hlt
outsb
jg
mov
sbbb
inc
aaa
cmp
insb
mov
cwtl
jnp
mov
jb
aas
sbb
jmp
cltd
or
pop
dec
fcoms
imul
subb
dec
push
or
int3
outsb
daa
pop
pop
movsb
pop
xchg
and
stos
push
jns
sub
mov
shr
sub
xchg
sbb
pop
nop
call
mov
xchg
imul
mov
fucomp
jnp
in
movsb
out
and
jo
aaa
push
test
cli
adc
neg
mov
rcl
mov
lea
pop
pop
mov
cld
testb
and
inc
inc
int3
faddl
inc
sub
xor
ss
test
mov
lock
test
jecxz
xlat
es
pop
rolb
jae
sarb
xor
add
mov
adc
inc
sub
lea
lret
std
into
das
pmuludq
int3
cld
push
fldl
call
std
cltd
xor
add
jbe
std
jne
inc
pop
cmp
test
mov
insl
add
xchg
loop
cmp
mov
mov
pop
dec
push
dec
xlat
mov
jl
jne
lea
in
sbb
dec
add
dec
pop
sarb
jecxz
test
sahf
mov
jno
inc
rol
sbb
sti
js
pop
inc
or
lds
push
cld
lcall
jmp
dec
sbb
pop
test
or
pusha
insl
loop
sbb
mov
jne
lret
rol
fstp
lcall
push
notl
push
int
push
imul
nop
pop
sub
adc
sahf
stos
push
inc
pop
inc
adc
adc
sarb
mov
adc
mov
cmp
mov
push
cmp
lds
xor
aam
jbe
out
pop
fs
dec
jnp
sbb
mov
lods
dec
notl
jne
xchg
mov
outsl
dec
pop
mov
xor
es
fcom
add
or
fiadds
in
out
pcmpgtw
dec
ret
shlb
or
and
lahf
jne
orl
xor
xchg
xor
lds
sbb
scas
xchg
or
inc
mov
loopne
sub
iret
xchg
scas
lret
and
mov
lcall
test
addr16
pop
push
dec
dec
push
xor
xchg
jge
push
lds
jp
loop
and
jecxz
inc
and
fistl
xchg
jno
daa
mov
xchg
in
pop
stos
pop
push
cld
bts
push
pop
leave
iret
mov
imul
popf
repz
jbe
daa
popa
insl
mov
xlat
xchg
push
mov
xor
gs
sbb
cmpsb
jecxz
jbe
adc
aas
call
shl
lret
adc
jo
loopne
sub
sub
mov
push
add
push
inc
cmpsb
mov
shrb
fadds
das
loope
dec
nop
inc
insb
fmul
rcrb
pop
sti
out
dec
shll
clc
lock
jne
or
sub
add
mov
xor
pop
cs
lds
jg
arpl
filds
add
inc
stc
ja
fs
fildl
sub
cld
mov
cld
aad
and
mov
push
insl
inc
add
repnz
xchg
iret
cli
jnp
or
mull
ja
dec
enter
mov
pushf
pop
and
add
shll
imul
cmp
dec
insb
cs
inc
cmp
cmp
das
or
cmpsb
sbbl
loop
cmp
jno
loopne
xor
mov
cmc
or
lods
jo
stos
outsl
push
xchg
mov
adc
jne
popa
imul
lahf
mov
test
in
add
dec
int
lods
out
pop
fs
shlb
push
test
clc
mov
out
or
and
test
dec
and
ret
or
mov
iret
pop
mov
sahf
inc
jae
dec
fs
dec
sub
lret
je
std
push
iret
mov
mov
cmp
fs
pop
nop
jo
jecxz
jns
xor
out
gs
jecxz
stos
cld
nop
int3
call
js
xor
sbb
les
cltd
andl
pop
fisubrl
pusha
rcll
lret
mov
mov
cmp
fldenv
mov
outsl
lods
in
xchg
ljmp
test
pop
fwait
mov
popf
loopne
cmpsb
daa
lret
cmp
mov
gs
mov
stos
inc
inc
addr16
lahf
add
push
lahf
xchg
mov
aam
add
pop
and
dec
call
iret
clc
inc
inc
cmp
adc
cmp
cmp
lock
daa
xchg
or
repz
cmpsb
loopne
mov
xchg
cmp
adc
pop
pop
adc
stos
loopne
lods
push
pop
insb
cmpsl
enter
mov
jecxz
mov
into
lods
cmp
jge
mov
and
jnp
mov
inc
loop
daa
pop
nop
lret
push
sub
and
mov
test
mov
in
faddl
adc
aaa
mov
cwtl
xchg
xchg
rolb
lret
xor
sbb
jo
mov
loop
scas
mov
xchg
and
jp
mov
pop
inc
inc
and
dec
clc
aad
or
or
dec
rorb
and
jne
cwtl
addl
shlb
xchg
push
xchg
frstor
in
fisubs
mov
aam
pop
pusha
adc
adcl
ret
leave
add
adc
lret
pop
cltd
mov
nop
mov
inc
push
jmp
adc
and
aas
in
mov
movsl
jecxz
xchg
xor
lret
mov
push
sbb
pusha
sbb
mov
das
jecxz
mov
jno
fmul
mov
fwait
mov
adc
mov
ud0
repz
ror
push
test
insb
jle
shll
pop
dec
cmp
push
sbb
aas
xor
jb
nop
adc
dec
sub
les
pop
into
jnp
filds
testb
out
pop
cld
xchg
in
inc
mov
into
jg
lcall
lds
ss
cmp
sub
lds
int3
std
icebp
test
fldt
pusha
sbb
add
mov
cwtl
loopne
enter
dec
ficoms
in
xchg
jge
and
adc
je
xchg
sub
popf
dec
test
sbb
cmpsl
xor
sub
std
mov
push
pop
pushf
or
mov
mov
mov
sub
xchg
dec
stc
sub
xor
inc
add
test
dec
lahf
lods
dec
xchg
pop
fwait
cli
push
jmp
mul
jmp
fs
mov
popa
mov
sub
mov
pop
mov
stos
insl
mov
out
or
cwtl
push
pushf
std
icebp
sahf
sub
jg
sub
out
daa
pop
popa
sarb
push
inc
sbb
xchg
and
dec
xchg
sarb
lds
dec
jmp
jmp
push
call
iret
sti
leave
incb
fsubrl
add
loopne
into
sbb
pop
and
mov
scas
push
aaa
icebp
repz
ret
test
mov
inc
lods
stos
mov
inc
xchg
jmp
addr16
outsl
rcll
shrb
cmp
ds
iret
pop
adc
jns
xor
ret
iret
lcall
adc
dec
inc
lahf
adc
inc
loop
fldln2
popf
stc
jg
in
insl
adc
mov
flds
lahf
fstps
adc
add
mull
cwtl
and
inc
gs
fsubl
pusha
rclb
shll
imul
jge
imul
loope
sti
mov
pop
in
insb
call
jbe
inc
sbb
test
iret
dec
insb
cmp
jecxz
fnstcw
loop
ficompl
or
fidivs
push
jp
call
hlt
or
outsb
shrb
inc
lret
cmp
jae
inc
xor
or
stc
push
xlat
stos
dec
jp
inc
out
push
shll
shrb
push
lret
push
pop
std
sbb
dec
cltd
nop
lret
movsl
dec
ret
imul
in
inc
mov
popf
xor
xchg
ret
add
jae
movsb
or
test
cmp
xor
sbb
paddw
jns
adc
inc
jle
jnp
mov
sarl
lods
out
cmpsb
inc
dec
or
mov
mov
ja
outsb
iret
pop
es
dec
sti
ret
jno
aaa
xchg
lret
xor
fisttpll
or
es
jge
scas
adc
test
add
into
cmp
test
pop
sub
adc
xchg
sub
adc
stos
push
mov
mov
add
sub
jp
repz
pop
in
insl
shrl
cmpsl
in
or
sbb
lahf
mov
dec
and
cld
pop
xchg
aas
pop
dec
daa
mov
and
add
push
or
shlb
push
cmp
pop
cmp
daa
inc
push
and
cmp
mov
fsubrl
jl
movb
pop
xor
popl
sub
ret
neg
or
adc
jns
aad
jmp
in
jp
mov
es
mulb
into
fadd
mov
in
dec
pop
xchg
stos
lahf
ljmp
cmp
push
sub
mov
inc
fnstsw
es
sarb
sub
test
out
xor
push
or
das
sub
ds
ficoms
jg
mov
inc
dec
loopne
or
divb
jns
mov
sbb
add
or
cmpsl
xor
mov
xlat
sbb
enter
mov
popf
call
mov
push
cli
mov
mov
gs
xor
sarl
jle
imul
push
nop
das
jl
call
jecxz
cmp
lea
push
mov
cmpsb
orl
and
add
pusha
mov
je
test
and
adc
xchg
cmpsl
test
or
adc
ss
lods
pushf
and
lock
dec
loop
pop
sti
dec
xlat
mov
outsl
outsl
push
das
loop
adc
cmpsb
lods
lock
jnp
mov
in
push
push
jle
sub
jbe
jo
arpl
lcall
mov
and
in
push
and
addr16
sub
lret
ljmp
lds
adc
stos
add
xor
mull
fwait
xchg
enter
cli
adc
sbb
and
xchg
ss
syscall
lret
hlt
sahf
or
jmp
dec
mov
add
inc
xor
xchg
push
pop
dec
adc
movsl
mov
inc
clc
repnz
scas
xor
and
jae
movl
shl
scas
lret
xchg
movsl
in
out
in
add
in
xchg
adc
mov
stc
ljmp
xchg
pusha
dec
gs
push
incl
pop
mov
arpl
jns
mov
movsb
jmp
dec
sbb
aaa
sti
shr
push
xor
mov
push
push
xchg
cmc
dec
push
lret
das
sub
cs
jmp
jmp
fcoms
out
xor
jne
jp
push
inc
sti
pop
and
adc
mov
inc
jle
add
cmp
cmp
outsb
fistpl
mov
lahf
enter
cmp
cmp
sbb
fwait
cmpb
mov
adc
leave
mov
rcl
lcall
scas
xor
adc
outsb
xchg
inc
mov
cltd
inc
insb
negl
fmull
pop
jge
sbb
mov
stos
xchg
bound
xor
mov
adc
jns
cmp
int
mov
dec
lahf
sbb
repz
sbb
push
dec
jbe
mov
sbb
mov
popa
into
dec
sahf
pop
clc
or
push
lea
pop
testl
inc
mov
out
sbb
leave
leave
xchg
repnz
pusha
jecxz
jo
ljmp
push
ds
pusha
pop
jno
jb
sub
jnp
dec
jmp
push
cwtl
mov
mov
lods
ss
push
lods
xor
stc
pop
mov
jb
or
cwtl
dec
sbb
movsb
cmp
inc
cmp
mov
lcall
sbb
pop
call
mov
cmpsb
mov
lret
jo
pop
ds
pop
ds
pop
pop
mov
std
pop
leave
fbld
sbb
je
scas
cmp
xchg
je
jmp
test
ljmp
fistpll
push
sbb
iret
sub
frstor
insl
adc
in
mov
shl
rol
fldcw
nop
add
rolb
data16
test
xor
cmp
pusha
lret
rcrl
adc
mov
xchg
mov
int3
pusha
xor
pusha
sub
pop
push
add
push
scas
xchg
loopne
daa
pop
mov
sahf
orl
mov
sbb
daa
sub
mov
lock
pop
cmpsl
icebp
stos
inc
in
test
mov
lock
mov
sbb
ficoms
cmpsb
popf
cmpsl
mov
loop
lods
or
add
imul
mov
push
add
adcl
jbe
sbb
hlt
jg
lahf
mov
push
stos
push
icebp
jnp
std
mov
jb
sub
lods
adc
imulb
cld
add
aas
pop
insb
cli
sub
aaa
or
xchg
mov
scas
mov
push
fisubrl
idivb
push
adc
fstl
jle
popa
subb
shl
iret
and
mov
roll
rclb
mov
fstl
sub
sqrtps
mov
sarb
adc
push
rclb
pop
loope
cld
mov
fsubs
loop
std
enter
mov
iret
jecxz
pop
rorb
xor
jnp
add
ret
push
adc
push
aam
cmp
add
or
out
or
mov
jecxz
adc
mov
addr16
pop
mov
mov
mov
or
je
xchg
mov
push
rorb
jle
fistpll
js
xor
mov
stc
mov
jb
insl
jp
jl
inc
cmp
test
mov
lods
cld
imul
int
cmpsl
mov
push
loop
inc
push
sbb
fiaddl
mov
add
jno
repz
cli
repnz
into
das
shr
sbb
movsb
cmpsl
ret
enter
or
pop
test
js
push
outsb
or
mov
bound
hlt
cs
ds
or
mov
data16
jbe
dec
mov
test
sub
sbb
in
insl
mov
mov
rolb
out
mov
dec
mov
mov
rorb
int
mov
icebp
cmpsb
dec
dec
inc
push
sbb
and
loop
cwtl
addr16
push
ret
insl
xor
sub
sbb
mov
pop
cmp
cvtdq2ps
and
and
sti
adc
das
int
enter
lock
scas
adc
fcomps
lods
cmpsb
nop
mov
lock
rcll
push
mov
mov
orb
jno
rorl
adc
mov
dec
sub
stos
fcom
mov
xchg
push
sbb
adc
mov
jl
and
or
mov
or
pop
sbb
fidivs
mov
sbb
fs
mov
jge
fstl
pop
adc
jp
lock
int
and
xor
ds
push
push
pop
mov
adc
dec
push
inc
fcmovnb
dec
into
jmp
lret
jmp
mov
inc
xchg
push
cs
in
das
gs
xchg
inc
push
outsl
movsb
sub
aad
sbb
aad
pop
divb
pop
push
iret
mov
fwait
cld
pop
out
mov
repz
jae
jecxz
mov
xlat
clc
mov
lds
push
xchg
lahf
mov
dec
out
mov
test
pop
stc
cltd
lods
cmp
xchg
rcrb
imul
mov
movsl
fstpl
pop
jno
outsb
and
scas
sbb
in
movsl
popa
mov
jg
outsb
call
push
stos
out
aam
repz
cmp
iret
popf
sub
data16
jp
scas
inc
lret
mov
and
lret
pop
add
push
insl
mov
int3
sbb
mov
repnz
pop
xchg
cmpsb
imul
fisttpl
in
into
fimull
lds
adc
imul
test
out
mov
or
push
adc
rcrl
cmp
jp
adc
mov
push
repnz
hlt
iret
loop
jecxz
out
jmp
cmp
pop
and
sbb
and
push
adc
ret
and
add
in
imul
mov
mov
pop
sbb
pop
pop
imulb
psubsb
cmp
add
aam
test
adc
inc
fsubrs
sbb
mov
mov
sbb
cmp
jnp
fwait
cmp
dec
data16
flds
es
sub
mov
xlat
icebp
or
pop
aas
lods
fimuls
popa
cltd
mov
push
addb
mov
test
pop
adc
andb
cmp
sbb
imul
sub
adc
pop
loop
fs
orl
or
aam
movsb
shrl
daa
in
js
shl
ss
sbb
ficomps
dec
sahf
mov
rclb
and
ret
mov
inc
pop
sbb
sbb
jne
icebp
pop
mov
lock
mov
inc
lock
jo
jmp
mov
negb
pop
add
movsb
lods
scas
add
or
movsl
lods
and
adc
mov
call
mov
cmp
repnz
adc
fcomip
and
or
jp
adc
mov
adc
xorl
scas
xor
sub
pop
pop
leave
test
mov
les
stc
ret
adc
ljmp
xchg
add
cltd
int3
addr16
push
scas
add
add
fldcw
mov
test
add
int3
add
dec
push
loope
rorl
xchg
pop
cmp
outsb
sub
mov
movsb
xchg
cmp
mov
shl
xor
addr16
jbe
mov
rolb
shrl
pop
enter
pmaxsw
jmp
popf
das
imul
jg
dec
push
in
sbb
out
pop
cltd
lds
mov
push
call
adc
xorb
loopne
mov
mov
adc
lea
mov
aad
or
out
lods
jae
mov
xchg
sti
sbb
out
xor
push
cwtl
testb
xor
mov
adc
lret
mov
jb
add
test
adc
cmpsl
xor
lret
inc
pop
test
std
es
out
dec
hlt
jne
mov
testl
cmpsb
and
sub
mov
aad
or
xchg
xchg
sbb
test
inc
je
inc
push
inc
pop
mov
or
fldenv
push
sub
mov
repnz
xchg
leave
push
addr16
push
sahf
testb
mov
rcll
sarb
push
rorl
sti
or
sub
jp
mov
int
mov
adc
add
mov
add
jge
popa
adc
loop
into
push
mov
decl
jge
push
test
fsubr
daa
test
dec
jp
sub
and
jb
jnp
mov
clc
stc
mov
mov
lock
addr16
sbb
mov
jbe
xor
or
push
push
jmp
dec
push
add
addl
test
pop
movsl
mov
sub
movsb
rol
cltd
cmp
out
jl
jb
xor
leave
call
gs
je
daa
xchg
sbb
sbb
mov
xor
cmp
cmc
outsb
pusha
dec
in
jmp
push
inc
loop
inc
aaa
xor
inc
ljmp
pop
jb
mov
mov
mov
sbbb
jg
icebp
mov
dec
outsl
fucomp
sbbb
imul
jle
addb
stc
loope
or
jae
icebp
cli
cs
cmc
ret
sub
cmp
fstps
jmp
pop
dec
cmp
push
dec
movsb
xchg
pop
xor
int
xor
adc
and
je
popf
fidivrs
fucomp
and
sti
js
jae
inc
and
stc
mov
sbb
mov
out
je
jne
push
lods
sbb
xchg
pusha
or
cmp
xchg
adc
lahf
pop
sbb
mov
and
mov
movsl
rcrl
nop
cwtl
test
push
test
jl
fidivl
sub
push
dec
sti
mov
dec
jnp
lret
addr16
jae
mov
lea
sbb
adc
adc
inc
jmp
cmp
mov
jne
lods
imul
jecxz
sub
xchg
xor
ljmp
repnz
and
mov
jmp
cwtl
mov
sub
in
xor
nop
cld
pop
arpl
add
rolb
adc
or
lods
jp
pop
or
mov
shrb
shrl
popa
lods
aad
movsl
dec
jo
add
sbb
or
adc
and
fwait
cmp
lods
fwait
scas
pop
fcmovbe
jge
sub
or
mov
pop
testl
xlat
lret
inc
ja
sub
hlt
sbb
mov
mov
std
subl
fwait
or
popa
insl
je
enter
xchg
ret
inc
jge
cli
out
sbb
push
pop
lret
sbb
fwait
cmpsl
ds
leave
lods
inc
and
and
push
mov
pop
and
fnstsw
js
xchg
movsl
lods
call
adc
mov
loope
into
adc
hlt
inc
in
push
adc
sub
jl
fildl
clc
lods
sub
stos
cs
add
loop
mov
test
jae
sbb
pop
sub
jae
jns
aad
add
pushf
dec
sbb
and
popa
mov
fmuls
fnstsw
push
jnp
inc
dec
or
in
cwtl
and
xor
ret
cmovbe
sbb
pop
jno
je
or
loop
fists
add
aad
sahf
and
sub
push
cmpsl
ss
xchg
and
add
pop
mul
add
outsb
inc
cmp
sbb
test
and
shll
imul
mov
sarb
mov
jecxz
xchg
psllq
aas
mov
lahf
add
mov
scas
shll
nop
or
outsb
dec
xor
clc
pop
pop
pop
outsl
add
xor
out
push
dec
lea
xchg
add
cltd
repz
push
mov
insl
adc
lret
xchg
and
add
xorb
sar
cmp
movsl
dec
inc
shr
add
hlt
and
lret
fbstp
xor
sub
clc
out
movntq
leave
call
mov
mov
mov
movl
aaa
mov
mov
decb
aam
call
hlt
push
mov
jle
mov
ds
adc
xchg
pusha
dec
push
push
xor
call
ds
imul
sub
std
and
push
negl
ret
dec
push
imul
incb
bound
mov
cmpsl
push
sbb
cwtl
and
sti
lcall
dec
jg
aaa
rcll
loop
dec
repz
sahf
imul
mov
lea
mov
stc
iret
dec
je
add
xor
mov
xchg
bound
fiadds
fsubp
sub
push
dec
add
shrb
test
movsb
sbb
cmpsl
or
sahf
mov
dec
inc
sub
mov
dec
out
into
stos
inc
in
and
xchg
jg
add
push
fsubs
ja
and
sub
insb
xor
adc
imul
test
insl
or
movsb
pop
sub
lods
call
jb
mov
sbb
aaa
jne
scas
jnp
fldcw
inc
pop
es
icebp
cmp
sbbl
ret
xor
mov
cmp
sbb
dec
mov
jae
fidivrs
mov
cmp
daa
mulb
dec
cmp
movsb
aad
mov
in
icebp
jmp
leave
cwtl
scas
inc
pop
imul
loop
in
pop
mov
sub
xchg
xor
xchg
jns
add
pop
pushf
and
call
adc
daa
nop
jmp
mov
ja
add
pop
jbe
test
out
mov
push
fadd
sub
sub
pop
lahf
mov
ret
xor
pop
daa
es
fidivl
pop
mov
xlat
popf
iret
lock
pop
cs
sub
lahf
push
in
mov
lods
add
jbe
mov
loop
pop
aad
xor
xchg
push
adcb
stos
das
cltd
pop
mov
and
mov
dec
push
stc
stc
mov
xchg
testl
lods
or
call
or
adc
xchg
add
pop
rclb
pop
sbb
bound
clc
lret
lds
aas
sbb
push
enter
jne
pop
sub
cs
in
mov
cmc
popa
filds
mov
pop
jle
fcoms
push
push
fildl
loope
jnp
cli
pop
je
decl
add
test
xchg
and
mov
lods
bound
lret
test
cs
rcrb
xlat
enter
test
sub
jmp
mov
movsl
shl
ja
cmpsb
sarb
bound
pop
es
inc
inc
and
mov
pusha
inc
pop
pop
popa
mov
mov
pop
hlt
aam
les
jnp
and
sbb
or
mov
loope
xor
das
aaa
fs
nop
or
jge
filds
mov
cmp
mov
inc
or
test
rol
mov
cmc
xorl
cmpsb
hlt
mov
xor
testb
jg
fisttpll
fidivrl
xchg
outsb
push
out
gs
aam
or
dec
fcoml
inc
popl
mov
cmp
je
aas
pop
clc
sbb
pop
cmp
pop
gs
inc
sbbb
dec
adc
mov
call
fists
mov
int
shlb
and
xlat
push
fistl
inc
fstpt
sbb
dec
pop
inc
add
rcrl
xchg
cs
push
push
xor
arpl
cmp
repz
outsl
lods
jg
inc
and
add
mov
mov
in
adc
push
inc
xchg
fdivrl
sbb
and
and
xor
gs
or
shr
mov
test
je
fistpll
adc
sbb
add
mov
push
shlb
repz
mov
bound
mov
inc
mov
in
rcrl
add
xor
adc
mov
xchg
ret
inc
cmpsb
push
mov
cltd
push
nop
xchg
or
mov
mov
outsb
or
jb
xchg
xor
sub
push
cmp
inc
pushl
sti
and
repnz
sub
stos
out
adc
fldcw
inc
ds
sub
ror
addb
xor
popa
push
test
fcoml
jae
add
bnd
mov
jns
pushf
stos
xchg
jbe
test
sbb
outsl
dec
mov
jo,pn
cmpsl
fmull
dec
xchg
dec
gs
lods
addb
adc
popf
add
pop
inc
and
pusha
cmp
ds
sbb
rolb
cmpsl
and
dec
sahf
add
add
inc
inc
or
push
xor
outsb
xlat
jp
btr
adc
sti
and
sbb
bound
into
js
xchg
data16
or
repnz
icebp
cmp
pop
lea
inc
xor
iret
cmpsb
ret
add
sti
call
cmc
push
add
cmp
mov
sbb
inc
sbbl
dec
jae
cwtl
pop
lret
inc
add
in
lret
jb
xchg
jno
call
mov
popa
ds
jns
pop
js
adc
in
sahf
addr16
add
or
jae
fcmovb
fists
sub
pop
les
mov
enter
test
pop
cmp
mov
adc
aas
and
sbb
je
pop
dec
cmp
es
shl
mov
sub
mov
icebp
mov
out
movsb
push
loope
stos
push
fwait
add
rclb
pop
mov
push
inc
out
int
push
push
xchg
or
arpl
add
pop
add
mov
pushf
inc
mov
pusha
push
iret
iret
arpl
repnz
test
sti
or
fldcw
mov
dec
fwait
inc
and
outsl
jmp
cmp
mov
xchg
inc
inc
lret
and
insl
inc
jno
mov
lcall
ss
in
leave
mov
cmpsb
loop
sub
fprem
es
mov
and
iret
inc
push
sahf
sub
sbb
sbb
dec
pop
outsl
pop
shrb
sub
pop
popl
inc
jns
and
repnz
and
fs
lret
test
or
cwtl
outsl
out
push
pop
test
sub
divl
push
inc
cmpsw
jns
aad
jg
jg
je
loopne
mov
sarb
xchg
dec
lods
test
mov
test
jbe
jns
xor
inc
xor
in
popf
jno
mov
stc
push
lahf
mov
xchg
in
dec
jne
inc
pop
or
stos
test
adc
jne
pop
out
mov
in
leave
or
daa
jge
fcompl
inc
and
xchg
pop
test
push
call
or
sbb
data16
leave
inc
cmp
bound
arpl
je
mov
jo
adc
lods
push
push
pop
nop
in
jp
into
jp
mov
adc
sub
xchg
bound
add
mov
sarl
sub
hlt
fmuls
mov
popf
fisubl
aam
clc
dec
sub
pop
xchg
fsubrp
rorb
repnz
lret
push
iret
imul
inc
jle
ds
adc
cmp
mov
add
movsl
loope
cmp
inc
pop
and
lea
rcrb
add
jnp
push
jecxz
dec
hlt
cmp
sahf
add
xor
aam
int3
mov
popa
jp
jb
movsb
enter
pushf
sub
add
sub
pusha
movb
cmp
es
sub
pop
or
mov
pop
mov
fwait
cwtl
dec
mov
ja
mov
adc
sub
test
jecxz
hlt
ja
sub
jge
fs
xchg
js
idivb
adc
sub
rclb
aaa
fwait
jle
lret
out
inc
iret
jle
cmc
pushf
sub
cmp
inc
test
cli
cs
dec
dec
xchg
add
xchg
mov
std
ljmp
adc
loope
dec
int3
outsl
jae
test
test
jns
repnz
notb
hlt
adc
repz
jg
fidivl
mov
das
in
and
movsb
xor
adc
push
sub
notl
xor
xchg
and
xor
pop
les
jnp
cmp
mov
sub
movsb
dec
popa
movsl
popf
rolb
scas
xchg
fldcw
pop
daa
out
rclb
push
inc
mov
inc
xchg
dec
cmp
rcrb
fidivrl
movsl
jno
mov
mov
loope
mov
pusha
adc
cli
sbb
lods
leave
add
xor
mov
jae
mov
pushf
fcomps
adc
lods
push
jae
mov
xor
loope
and
adc
push
ds
sbb
cli
call
call
sbb
ljmp
cwtl
jmp
mov
jp
std
xorb
loopne
repnz
test
fdivrl
out
add
int3
push
test
hlt
mov
pop
imul
xchg
repz
lcall
ret
xor
stos
inc
insb
ja
pop
inc
push
push
scas
dec
sbb
inc
jo
jnp
data16
and
sti
pop
test
lods
xor
mov
loop
test
lret
sahf
mov
rolb
inc
mov
imul
into
pop
mov
dec
fistl
shlb
test
add
in
shrl
sub
sub
ljmp
or
or
js
mov
push
jmp
adcb
pop
and
jo
mov
outsl
fistl
mov
rcll
fdivrs
xchg
movsl
push
insb
pop
push
or
mov
push
cltd
push
or
movsb
ljmp
push
filds
fldenv
mov
shlb
and
dec
mov
mov
and
mov
std
mov
mov
insb
pop
sahf
jp
aaa
jg
dec
sub
data16
ja
ret
and
cmp
ret
shrb
cmp
out
pop
sub
pop
sbb
jns
int
cmc
pop
lret
mov
ficomps
in
es
xchg
ror
leave
add
sub
insl
outsl
iret
or
pop
xor
sahf
mov
xchg
loopne
sbb
sub
xor
imul
rcll
ds
push
xor
sbb
mov
sti
hlt
jb
sbb
cmp
cltd
and
mov
adc
addr16
iret
enter
sti
pop
cld
push
mov
popf
add
xchg
inc
popl
daa
rolb
xchg
repz
jae
bound
scas
dec
fldl2t
xchg
push
in
bnd
xor
loopne
js
inc
idivl
addr16
adc
pop
add
loope
andl
shrd
dec
jae
inc
mov
iret
xor
imul
push
mov
sbb
push
lods
cli
xchg
std
addr16
xlat
ficoms
xchg
or
cltd
cmp
pop
lock
rclb
mov
aaa
pop
ret
mov
mov
ret
inc
jl
sub
xchg
cs
pop
mov
mov
push
sub
ds
lds
mov
dec
scas
stc
xchg
ja
mov
sbb
aad
in
xor
pop
or
sti
les
cmpsb
pushf
jle
sti
aad
repz
movsl
adcb
std
and
popf
mov
add
sbb
and
or
jg
jae
cmp
sub
mov
ret
test
mov
lock
mov
sbb
xchg
jecxz
add
xorl
test
pop
or
sub
inc
push
add
hlt
jle
sti
hlt
jno
cmpsb
xchg
rorl
int3
out
imul
pop
xor
in
insl
mov
in
call
pop
lds
push
and
inc
popf
xchg
fwait
mov
push
insb
bound
mov
cmp
mov
dec
lret
call
mov
shr
js
andl
das
cmpsb
mov
arpl
push
out
cmovge
mov
xor
jl
pop
add
sub
mov
push
lret
pop
shlb
scas
xchg
movsl
shll
aad
in
mov
xchg
in
xchg
sbb
lretw
push
lahf
jle
callw
jno
ljmp
lret
addr16
lods
mov
roll
pop
mov
dec
ja
loope
cmpsb
push
sub
repnz
sub
incl
bound
mov
clc
or
pop
out
push
mov
pop
xorb
sbb
imul
adc
test
cmp
mov
cmp
repnz
xchg
mov
lcall
jg
out
mov
in
test
jl
das
add
cmp
push
adc
mov
pop
popa
pushf
push
outsb
stc
mov
add
pop
rol
cmpsb
xchg
sbb
pop
jge
or
inc
in
imul
les
ljmp
and
testb
sahf
jnp
adc
lret
stos
jnp
or
jmp
dec
ss
and
lock
cmp
push
dec
mov
add
out
imul
outsl
call
out
mov
fmuls
popf
fxch
fcoml
je
mov
jge
xor
push
in
inc
test
test
data16
cs
xor
xor
ja
jge
add
mov
les
out
cli
xchg
imul
dec
jnp
ds
dec
pop
gs
push
adc
sbb
imull
loopne
das
xchg
jle
mov
xchg
out
add
outsl
mov
mov
sub
bound
data16
dec
popa
push
sub
mov
adc
mov
sbb
sub
cmpsl
pop
mov
adc
nop
mov
push
fwait
inc
repz
scas
xchg
jp
mov
mov
out
cmpsb
adc
xchg
xchg
lds
iret
push
jge
xchg
cmpsl
jp
dec
push
testb
jno
pop
enter
adc
pop
je
push
adc
ret
xchg
es
mov
js
cmp
pop
dec
mov
outsb
imul
cltd
add
mov
add
adc
jns
std
movl
jnp
inc
push
jae
lods
xor
std
out
jmp
gs
je
xchg
scas
or
in
int3
cmpsb
mov
dec
fstl
mov
xchg
adc
adc
xorb
xor
aas
icebp
add
lods
arpl
add
cmp
cli
inc
cwtl
clc
mov
aaa
or
movsb
mov
aas
mov
test
xchg
les
subl
cmp
inc
pushf
push
insl
cli
sub
push
or
iret
daa
imul
fs
xor
or
pop
cmp
lds
cmc
lds
imul
inc
stos
push
pop
fcomp
mov
cs
mov
cmp
jo
inc
rcrl
stos
jo
sub
pusha
pop
inc
mov
mov
das
lret
mov
arpl
frstor
cld
test
stos
dec
imul
movsl
inc
dec
scas
adc
jns
fdivs
fistps
out
inc
insb
lcall
std
xchg
dec
cmpsb
jae
or
test
fisttpl
and
jmp
mov
popf
in
arpl
std
fs
jb
out
iret
push
outsl
add
xor
xor
aam
cmpsb
xchg
mov
pop
cltd
sub
or
add
xor
fs
mov
sub
jge
aam
into
enter
pop
xor
jmp
adc
push
push
jns
xor
sbb
add
pop
leave
int
cmc
inc
lret
mov
pusha
aaa
adc
adc
and
mov
inc
xor
mov
mov
rcll
or
mov
popa
mov
out
sub
mov
jb
or
enter
xchg
dec
jle
arpl
jecxz
fwait
ret
popa
pop
hlt
xchg
xor
dec
ret
sbb
sbb
jmp
xlat
mov
push
lret
inc
cmp
aad
jae
and
pop
fcmovnb
xchg
dec
adc
scas
sub
imull
jmp
ret
arpl
xchg
scas
xor
nop
mov
leave
xchg
imul
stc
sub
pop
inc
dec
int
cmp
pop
sbb
fucomip
loope
xor
rolb
pop
lahf
sbb
inc
push
leave
xor
jmp
es
into
xchg
stos
xor
repnz
add
loopne
stos
roll
stc
pop
lret
cs
ds
and
jnp
mov
cmp
mov
lods
aad
jne
sarb
cmc
jae
dec
dec
add
jg
jmp
movsl
adc
mov
add
addr16
mov
xchg
test
leave
xchg
sbb
fldt
xor
ljmp
dec
ss
ficomps
jle
loope
lea
hlt
sbb
in
add
xlat
and
xchg
sti
imul
xor
mov
stos
aas
pop
push
lods
js
cld
imul
jno
jno
adc
repz
push
push
jg
or
repnz
and
jnp
pmulhuw
jp
shrl
fwait
adc
push
adc
cmp
jg
push
ret
sbb
push
jle
sbb
mov
push
fucomp
sar
cmp
sub
mov
mov
or
ja
pop
daa
imul
lret
xchg
je
hlt
xchg
push
xor
sbb
mov
ljmp
jnp
fisubl
inc
or
pop
fildll
mov
xor
pop
push
popa
inc
cltd
popf
loopne
pop
cmp
mov
mov
dec
in
je
loopne
mov
mov
pop
pop
pop
hlt
or
fidivs
movsl
cmpsb
cs
sub
pop
mov
cmp
push
aad
ja
xchg
cmp
cmp
mov
imul
jl
fmull
and
leave
mov
cltd
in
sarb
mov
aaa
dec
jmp
sub
sti
fistl
pop
mov
enter
and
rolb
and
aaa
test
test
scas
ret
inc
cltd
pop
mov
jg
mov
in
vpmaddwd
xor
mov
sbb
cwtl
or
fstpl
dec
lods
stos
xchg
std
xor
notl
dec
inc
jecxz
sahf
mov
sub
pop
cmpsb
insb
rolb
sub
cmp
aaa
jo
mov
cmpsb
sub
add
adc
jg
jns
imul
push
push
dec
cltd
fs
enter
push
lahf
cs
dec
add
in
mov
ss
inc
je
bndstx
add
add
adc
jl
lods
sbb
mov
pushf
or
pushf
dec
inc
dec
xchg
fldcw
and
popa
repz
pop
push
sub
mov
les
cmpsb
fwait
sbb
xor
int
aas
bound
inc
ljmp
clc
lret
mov
cli
orb
fldcw
fwait
push
js
xchg
or
mov
jle
in
add
xor
sub
je
enter
stos
hlt
mov
jge
adc
dec
jp
mov
imul
xchg
push
cmp
or
mov
or
loop
adc
mov
or
lods
sub
jns
dec
xchg
xchg
xchg
cmc
ds
add
sub
je
outsl
push
dec
int3
fs
adc
push
test
add
leave
push
in
inc
pushf
xchg
in
imul
inc
rsm
in
jo
out
clc
loop
fldl
pop
aam
int3
mov
enter
divl
lock
push
jg
std
and
pop
out
xchg
xchg
cmp
fwait
mov
ja
enter
pop
out
sub
jle
mov
ja,pt
dec
inc
scas
fadds
lock
sub
push
mov
add
pusha
movsl
xchg
dec
cmp
cmp
mov
dec
mov
add
jnp
ds
adc
push
sbb
sbb
or
pushl
ret
test
sbb
pop
mov
popa
cmc
imul
jmp
dec
divb
mov
jne
fidivl
cmp
arpl
test
mov
dec
xchg
rcr
mov
and
xor
mov
dec
xchg
mov
xor
dec
jl
subb
pusha
stos
jnp
mov
addl
enter
inc
call
scas
and
mov
cmp
rcl
adc
and
and
jbe
add
inc
arpl
inc
subl
cmp
ja
movmskps
push
outsb
dec
popf
dec
rolb
les
cmc
sbb
scas
into
arpl
adc
xor
lods
iret
mov
iret
pop
lret
jo
xchg
add
xor
std
lcall
pusha
dec
mov
in
push
int3
pop
jb
loopne,pt
or
adc
mov
push
test
cmp
aas
cli
mov
push
adc
dec
jecxz
dec
cwtl
test
mov
lds
aas
inc
cmp
push
jge
sub
clc
arpl
fisttpl
outsb
jb
lods
sti
imul
or
sub
lods
lods
cli
or
xchg
pop
inc
aam
and
fadds
xchg
rcrb
mov
fsubrs
lret
pop
dec
icebp
xor
dec
popf
loope
adc
or
pop
push
dec
push
or
and
icebp
fiadds
add
adc
or
iret
lea
jp
shll
cld
scas
jecxz
das
cmp
sbb
jnp
push
fs
aad
lahf
nop
cs
lds
sbb
fistl
dec
into
shll
loop
or
jno
out
lods
in
mov
sti
mov
add
fildl
outsl
lcall
fwait
in
shll
adc
in
lcall
and
xor
fwait
es
and
cld
add
cs
add
inc
loopne
push
call
cli
lock
aam
jns
xchg
jno
push
xchg
jae
mov
cmpsl
and
adc
mov
les
adc
loope
mov
cs
cld
mov
loop
xor
and
int3
imul
jmp
in
mov
inc
xchg
pop
leave
lods
stc
cmp
sub
aaa
rcll
sbb
out
lea
inc
mov
icebp
sub
pop
adc
scas
inc
xchg
add
push
gs
add
cmp
aas
rclb
jo
out
mov
cmp
xchg
or
inc
int
sub
outsb
mov
out
aam
mov
push
sub
sbb
mov
sbb
sub
mov
bound
inc
inc
imul
push
insl
lods
and
stos
pusha
negl
in
mov
mov
pop
xchg
pop
lret
dec
cmpsb
adc
xor
rclb
inc
mov
lea
push
dec
fistpl
iret
popf
leave
mov
imul
push
fs
imul
mov
into
pop
cmp
fs
jns
sbb
or
push
xchg
or
js
bound
mov
fcmovne
or
lret
sahf
sahf
test
js
push
mov
xchg
cmp
or
pop
push
test
negb
daa
imul
mov
leave
sbb
inc
push
mov
rclb
jg
mov
sub
mov
and
pop
lods
xor
fisubrs
inc
pop
cli
pusha
add
cmpsl
sub
xor
ficompl
insb
xchg
mov
inc
movl
push
dec
jne
jne
std
mov
mov
es
dec
outsb
jbe
out
jbe
inc
inc
mov
outsl
mov
xchg
pop
add
lods
mov
mov
jmp
mov
loope
cltd
ret
cs
pushf
aam
push
jbe
mov
sbb
cmp
aaa
cmp
dec
lahf
ret
in
jo
pop
add
pop
fst
lcall
enter
lcall
or
je
jo
mov
dec
stc
sub
mov
out
lcall
call
pop
dec
loop
lret
inc
dec
je
out
std
lret
xchg
out
mov
cmp
loop
pushf
add
orb
hlt
inc
int
sahf
nop
cmp
mov
push
cli
hlt
xor
inc
daa
cmc
and
jbe
push
inc
and
xlat
mov
stos
cld
arpl
mov
jb
pop
ret
push
jecxz
aam
fsubs
mov
jno
push
pop
inc
clc
push
sti
scas
imul
jg
and
inc
outsl
leave
fs
daa
cmp
cmp
jae
pusha
add
ds
inc
int
ds
mov
mov
inc
mov
stc
fbld
xor
pop
ret
mov
es
mov
mulb
in
cli
das
pop
pop
cld
push
jne
stc
les
push
aad
jge
popa
sarb
aaa
or
insl
insl
loope
cld
add
jnp
sti
dec
mov
inc
stos
sub
jae
movsl
sbb
sbb
inc
add
add
add
sbb
inc
sbb
mov
lret
adc
rcll
out
sub
pop
xor
ss
cs
fisubrs
cmp
mov
xchg
in
aas
out
ljmp
sbb
pop
fdivrp
movl
mov
xor
sbb
mov
mov
cmpl
sbb
shll
fs
mov
in
or
lahf
imul
pop
sbb
testl
sub
jmp
sub
mov
push
sbb
and
add
out
and
hlt
push
jp
inc
andl
in
fisttps
ds
shr
cs
xor
fdivrl
bound
cmpsb
dec
or
dec
movsb
int
js
mov
cs
add
push
xor
incl
dec
ja
xor
mov
jae
sarb
cs
xchg
mov
jno
add
out
rcr
and
add
adc
pop
jl
mov
pop
stos
popa
je
push
out
popa
scas
test
nop
jne
cmp
outsb
lods
mov
imul
loopne
mov
adc
jle
inc
ret
dec
and
cli
pop
jle
fimull
stc
mov
aam
cld
pop
outsb
push
pop
andb
ja
std
xor
mov
outsb
cmp
shll
int
fwait
xor
mov
jl
cmpsl
arpl
leave
pop
ja
out
pop
dec
repnz
lcall
inc
sti
push
ret
into
arpl
sbb
dec
xchg
pop
or
scas
mov
pop
jle
bnd
push
push
xlat
or
in
lods
xor
dec
ror
lds
push
xor
and
out
mov
repnz
int3
mov
jg
push
in
cmp
adc
cs
lea
sbb
mov
fnstsw
int
lods
sarb
mov
adc
arpl
mov
inc
add
loopne
loope
jns
lret
pop
ss
push
cmpsl
mov
xor
xchg
inc
loop
pop
imul
push
std
xchg
and
xor
fsubr
push
dec
scas
out
ljmp
inc
and
shlb
jmp
push
pop
imul
test
mov
and
pop
cwtl
push
lds
aaa
mov
shrb
sub
shl
movsl
jmp
lods
ja
add
xor
testl
and
push
lods
enter
mov
or
cmp
dec
insb
xchg
subl
testb
das
bound
jp
cwtl
xchg
cmp
cmpb
inc
jns
test
enter
jecxz
xor
inc
xor
mov
mov
imul
jle
or
mov
jno
repz
mov
in
ficoml
std
mov
lock
cmp
mov
sub
and
insl
int3
hlt
fs
adc
int
pop
xchg
add
push
popf
sbbb
and
scas
or
lcall
add
mov
inc
pop
stos
or
stos
in
sbb
pop
dec
aaa
xchg
sub
push
mov
xor
push
xor
mov
mov
add
xor
jmp
ret
fildl
mov
push
stc
fs
xchg
xchg
fwait
adc
add
fs
dec
ret
shll
sub
fcoms
pusha
scas
ss
mov
insb
out
lds
sbb
scas
jb
imul
xor
jo
aas
movsl
jge
pop
aam
xor
js
push
jnp
cmp
inc
mov
pop
scas
cmpsl
mulb
mov
repz
movsb
sub
scas
cmp
mov
bound
sahf
scas
fisttpll
jae
idiv
sahf
push
adc
icebp
mov
into
mov
lret
mov
mov
leave
cs
movsl
ss
or
jo
test
jge
mov
sub
in
jl
xor
sbb
cmc
in
mov
and
inc
inc
fxch
dec
xor
clc
fsubrl
fincstp
lret
pop
mulb
das
fsubs
lcall
adc
and
pop
and
add
cltd
mov
cmp
je
aaa
mov
pop
and
xchg
stc
mov
xchg
aaa
imul
add
adc
nop
enter
mov
lods
fcmovne
inc
mov
xchg
insb
stc
jmp
mov
roll
bound
cmp
jp
adc
aas
and
lock
mov
aad
sub
xor
lcall
test
xchg
and
sub
add
clc
sub
sarb
inc
xchg
scas
repz
cmp
mov
xor
adc
outsl
fdivr
les
adc
mov
xchg
jb
imul
lods
or
jp
mov
mov
adc
sub
pop
sub
test
xor
xor
ret
add
rcrl
add
and
dec
and
mov
inc
aad
and
cwtl
cli
fisubl
and
adc
cwtl
aas
lock
mov
and
dec
jp
je
xchg
jbe
adc
leave
xchg
repnz
test
pushf
nop
cmpsb
mov
mov
jo
popf
jg
cmp
test
push
xchg
bound
and
inc
pop
ja
dec
cmpsl
sub
sub
add
inc
pop
mov
or
test
add
movsl
aaa
insb
push
out
loope
and
adc
cmp
inc
lahf
jbe
jno
pop
jns
stos
popa
push
mov
fnstenv
test
mov
ds
jns
rolb
sub
inc
sub
sbb
inc
jp
and
sahf
push
pop
daa
push
loopne
sbb
test
pop
fisubrs
or
repz
mov
loope
out
ja
pop
repz
jl
xchg
ss
mov
xor
or
mov
adc
dec
mov
std
sbb
push
xlat
fxch
jle
sub
das
dec
sbb
cmp
add
pop
rcrl
inc
inc
jb
bound
jmp
lret
ret
scas
dec
ffree
and
shlb
dec
iret
sahf
adc
add
jg
mov
lock
pop
scas
movsb
xor
rcrl
jecxz
fs
cmp
push
lea
bswap
pop
xchg
xor
arpl
mull
dec
cwtl
sahf
arpl
dec
into
vrsqrtss
into
sub
clc
xchg
add
sti
xor
imul
pop
or
jo
mov
fs
or
adc
and
mov
lret
mull
xchg
sub
mov
cmpsl
xchg
mov
xchg
mov
and
loop
aad
les
and
jl
test
sbb
sar
cwtl
rorl
adc
lock
aas
cmp
cmp
jmp
pop
mov
fcomp
cmp
xor
cld
lods
pop
fwait
pop
mov
fstpt
stc
dec
jp
loopne
push
jmp
push
in
push
mov
test
lock
inc
in
mov
imul
inc
adc
popa
out
orb
arpl
mov
xor
dec
dec
push
pop
movsl
in
sub
in
or
add
xchg
sbb
add
scas
and
jmp
jge
xor
sbb
push
cmpsl
cmp
sub
test
pop
pop
mov
inc
lret
popf
mov
fbld
jnp
bound
fisubl
rolb
imul
fcom
sub
push
sbb
push
sbb
sub
mov
fiaddl
ljmp
xchg
xor
dec
notb
push
imul
notb
mov
fwait
test
or
jp
adc
jecxz
sub
pusha
dec
rcll
mov
cs
inc
xchg
xchg
adc
add
daa
in
push
leave
out
mov
test
lea
push
test
add
lods
imul
mov
sub
mov
push
push
mov
dec
lcall
dec
mov
push
xchg
inc
pop
jbe
cmp
in
psrad
enter
repnz
xor
mov
mov
insl
mov
adc
inc
jae
dec
sub
aad
mov
icebp
jmp
scas
cmc
fsubs
adcb
and
enter
cli
xchg
bound
imul
outsb
push
mov
daa
hlt
adc
repz
data16
push
out
shl
jmp
movsb
mov
lcall
sbb
and
mov
iret
push
cmc
jp
xor
mov
add
push
mov
cmp
sub
out
lock
ret
pop
mov
xor
and
or
pop
and
aaa
repnz
insl
aam
mov
adc
xchg
cmp
fcomps
rcll
std
scas
dec
mov
mov
mov
imul
sahf
leave
cltd
imul
and
xchg
xor
clc
lds
or
sbb
sub
shll
shlb
das
push
jmp
adc
data16
popf
xchg
sahf
jb
aam
sti
sub
loop
mov
or
or
cwtl
pop
out
pop
mov
inc
popa
pop
inc
sti
dec
xchg
shrb
shrl
xchg
nop
sbb
jae
imull
bound
jl
es
or
push
mov
cmp
cli
stc
inc
xchg
aas
shlb
andb
mov
popf
jg
push
test
mov
mov
popa
iret
mov
lea
mov
pushf
xlat
repz
leave
push
inc
int3
arpl
loop
in
rol
cvtpi2ps
jbe
test
or
es
loope
and
sub
jecxz
fbld
aam
js
iret
jmp
xor
dec
ss
outsl
scas
aam
sub
xchg
inc
or
insb
lcall
stc
cmc
push
je
popa
ret
ds
je
mov
in
ds
pop
cltd
cmp
sarl
jecxz
mov
xchg
filds
push
xchg
pop
fidivl
pop
add
pushf
mov
insb
mov
sub
out
sahf
mov
in
rcrl
cli
jecxz
push
inc
scas
or
call
lods
inc
mov
stos
pop
pop
add
dec
and
insb
and
jb
adc
leave
leave
pop
test
xchg
roll
insb
adc
aas
rorb
cmp
insb
inc
pop
mov
pop
xor
pop
xor
loopne
insb
jmp
pushf
sti
pop
outsb
shlb
ret
ret
aad
or
dec
out
inc
inc
mov
mov
icebp
jp
and
add
jmp
push
mov
mul
push
dec
sub
mov
xor
pop
les
imul
outsb
in
fcoml
push
fsubs
fidivs
mov
mov
andb
cld
cld
dec
xor
jo
dec
shlb
out
adc
add
mov
jl
push
lds
mov
xchg
out
mov
mov
ss
cwtl
jae
push
jnp
imul
shlb
sub
lret
mov
mov
incb
pop
in
mov
xor
jl
or
xor
out
pop
ret
repz
frstor
loope
cmc
or
lock
mov
inc
mov
and
cld
xchg
js
cli
mov
sbb
outsb
adc
sbb
stos
negl
je
cmp
push
dec
pop
mov
xchg
data16
push
cli
dec
aad
dec
mov
je
inc
inc
jle
js
out
xchg
xchg
pop
mov
xchg
mov
or
jmp
repz
xor
mov
dec
stos
ljmp
xchg
lods
cmpsb
outsb
mov
mov
loop
fs
arpl
into
into
sub
cmp
or
lds
inc
cltd
mov
cmp
hlt
push
sub
popf
xchg
jecxz
int3
cmpl
add
aas
dec
nop
push
xor
and
enter
mov
push
dec
sub
add
mov
jno
dec
mov
mov
fs
ror
or
popa
mov
sahf
sub
cli
adc
addr16
pusha
rolb
popl
sub
popf
repz
loopne
inc
adc
out
jl
inc
imul
cwtl
jae
sub
mov
aas
out
push
xchg
pop
push
push
push
pop
loopne
mov
push
rolb
stc
mov
pusha
cmc
cmpsl
into
aaa
stos
arpl
es
stc
mov
mov
jbe
std
or
js
fwait
or
mov
xchg
mov
das
scas
dec
jle
sbb
nop
push
out
in
mov
js
dec
cmp
cs
notl
mov
dec
popf
int3
and
fcomps
xor
imul
adc
xor
adc
xor
dec
cli
push
mov
test
cmp
repz
scas
jb
fsubl
xor
sbb
aaa
rcll
and
jle
cld
ret
push
repnz
bound
xchg
add
jo
scas
fdivl
ds
sbb
sub
dec
jnp
mov
test
into
or
bound
mov
test
iret
pushl
sbbl
fwait
cltd
or
add
and
ja
test
jmp
sub
test
ficompl
test
cld
jb
add
lahf
or
rcrb
ret
enter
mov
lea
insb
lahf
dec
bound
xor
cmp
gs
sub
lret
mov
sub
and
push
jecxz
mov
iret
dec
das
xor
sbb
aas
es
jge
pop
cmpsb
jge
ret
xchg
mov
fcompl
iret
out
mov
xchg
xchg
ss
cmp
xchg
xor
movsl
pushw
dec
pop
clc
mov
xlat
jae
cltd
popf
adc
das
js
mov
testb
push
das
and
cwtl
out
mov
pop
es
aas
dec
cmp
pop
mov
out
or
test
pop
adc
jp
rcrl
xchg
xor
shl
add
test
and
xchg
jnp
mov
stos
push
dec
or
jbe
xlat
popa
movsl
add
aad
xor
mov
ljmp
out
xor
jns
cmpsl
cmp
sbb
imul
pop
mov
push
mov
daa
and
ja
imul
mov
enter
mov
sahf
rorl
scas
mov
ja
mov
sbb
mov
pop
je
push
and
xchg
push
jb
sub
pop
mov
dec
inc
cwtl
push
andl
xor
add
push
mov
inc
xchg
adc
lcall
inc
xor
jns
bound
mov
shll
sbbb
inc
test
lds
mov
fistps
lock
mov
push
rolb
shlb
jle
stc
mov
repnz
mov
pop
sar
adc
or
inc
mov
mov
xchg
addl
sub
xor
mov
and
and
nop
enter
fwait
sbb
mov
sbb
lret
mov
call
sub
push
or
push
call
pop
push
push
mov
sarl
int
int3
arpl
jnp
add
into
mov
sub
add
test
movsb
rol
loope
adc
mov
push
call
incl
lret
xchg
test
call
mov
push
jecxz
pop
pop
sahf
pop
xchg
inc
sub
inc
push
repnz
dec
imul
push
out
pop
into
lret
or
lods
inc
mov
inc
mov
ret
cwtl
pop
stc
push
in
fs
fwait
sub
bound
cmp
shlb
sbb
cltd
nop
fcomps
xor
in
ja
sub
lcall
cmpl
mov
sub
or
ss
pop
inc
das
xchg
test
xchg
mov
dec
vmulsd
in
mov
xor
xchg
adc
into
push
pushf
jbe
inc
out
mov
mov
cmp
mov
bound
sti
sub
cmpsb
js
das
mov
lods
clc
inc
fldz
or
xor
cmpsb
push
rorl
fstpl
push
fcmovne
push
dec
daa
mov
mov
mov
lock
sub
insl
lea
test
xchg
rcrl
data16
dec
imul
stos
dec
mov
jns
mov
hlt
roll
inc
or
fildl
pop
lgs
out
ja
inc
test
cmp
lock
jecxz
ficomps
jecxz
or
lock
push
sbb
data16
daa
sub
popa
inc
icebp
int
test
nop
int
out
orb
imul
push
lea
and
push
arpl
fyl2x
arpl
hlt
mov
ljmp
fidivs
xchg
and
popaw
adc
aad
mov
stos
iret
mov
dec
mov
sub
sub
push
test
std
bound
cmp
loop
icebp
lock
repnz
dec
xor
sub
mov
adc
mov
dec
adc
pop
mov
es
mov
jp
pop
inc
lret
imul
lahf
add
mov
jp
int
inc
push
fimull
shl
xor
xchg
lods
lods
sbb
push
mov
push
inc
stc
in
push
pusha
dec
adc
sub
adc
jo
fidivrs
jb
aad
push
lahf
lods
sub
jne
and
scas
sbb
lahf
jg
cmp
and
push
fnstcw
movsl
pop
cld
push
xlat
and
in
lods
jnp
pop
pop
andl
dec
dec
dec
pusha
sbb
stos
inc
mov
loopne
stos
test
cli
add
pop
notb
pop
nop
add
push
dec
das
push
inc
lock
icebp
insl
xorl
enter
inc
cmp
sub
arpl
xor
in
out
mov
in
lea
push
jl
cmc
lods
add
dec
jmp
cmp
aas
push
mov
and
lcall
jecxz
jbe
xorl
std
fwait
mov
add
clc
push
rcr
inc
mov
lcall
in
sahf
pop
test
push
add
push
mull
in
mov
dec
xor
cli
dec
fcoml
dec
adc
ljmp
cmpsl
pushf
jbe
sub
push
mov
xchg
fisubs
lret
pop
sbb
cmpsb
popa
in
cwtl
mov
push
or
jne
inc
or
shll
sub
insb
mov
lret
cli
adc
sub
jnp
or
scas
test
push
inc
loopne
andl
cmp
lds
and
mov
mov
jbe
sbb
ljmp
adc
push
xor
sub
ss
enter
std
mov
shl
push
mov
pop
xchg
data16
ja
subb
hlt
int
dec
loopne
aaa
adc
das
add
push
iret
dec
push
inc
sbb
inc
jmp
ljmp
mov
or
push
mov
rcr
sub
mov
jo
ss
push
btr
out
scas
fwait
lret
xchg
adc
outsb
sub
xlat
or
mov
int
gs
pusha
std
dec
fcmovnbe
dec
jb
mov
and
stos
xor
pop
mov
jmp
arpl
mov
inc
push
mov
stc
xchg
cld
and
and
xchg
add
inc
xchg
pop
jle
stos
jae
add
add
icebp
add
movsl
and
jae
jge
push
cmp
inc
xlat
mov
pushf
scas
rol
dec
push
in
cltd
icebp
scas
jo
les
push
jecxz
or
dec
imul
testl
mov
xchg
inc
dec
inc
loop
into
dec
jns
xlat
mov
mov
jb
loope
icebp
jl
lods
sbb
andb
lea
mov
push
mov
jb
jne
insl
pop
int3
and
and
jl
add
add
push
jbe
inc
loope
cmp
test
xchg
popf
aas
loopne
leave
adc
adc
mov
decb
jnp
mov
sub
push
lret
mov
aas
and
test
es
mov
push
push
cmp
arpl
cmpsb
cmp
mov
cwtl
sub
mov
mov
outsb
outsl
loop
mov
cmc
and
aaa
mov
sbb
rcr
rolb
js
xor
add
jle
mov
jge
fwait
sub
leave
mov
fnstsw
pop
push
lea
hlt
sbb
push
cmp
adc
cmp
std
ljmp
add
sbb
xor
xor
sub
mov
dec
std
lea
dec
add
arpl
mov
addr16
and
scas
bound
or
test
xlat
ficomps
jmp
rorl
xor
and
xchg
es
adc
cmp
cmp
ljmp
mov
xchg
fisttpll
add
scas
es
nop
pusha
ss
pop
out
inc
adc
sti
pop
hlt
insl
xchg
ja
imul
pop
pusha
rcrb
leave
cmpsl
es
adc
gs
icebp
bound
outsb
into
xor
push
push
xor
sbb
mov
pushf
stos
in
dec
add
rolb
dec
clc
ret
add
shlb
movb
pusha
jbe
jecxz
inc
inc
pop
sbb
in
cltd
sub
add
adc
icebp
jg
test
insl
ror
out
add
push
pusha
aas
mov
outsb
add
mov
mov
pop
iret
idivb
mov
test
adc
outsb
adc
mov
dec
add
ja
jo
add
or
mov
fstl
sbb
mov
idivl
aad
fcomip
in
mov
into
lcall
xor
cmc
das
data16
cld
push
mov
mul
js
pop
loop
inc
mov
andb
andb
cmpb
mov
pop
mov
dec
mov
mov
xor
in
mov
jp
inc
xor
out
enter
adc
cmp
cmpsb
xchg
dec
in
pop
imulb
add
cltd
sbb
lahf
sarb
pop
sub
add
outsl
and
sub
and
into
rcl
sbb
pop
daa
data16
xor
or
jl
aaa
xor
fstps
popf
push
arpl
sub
outsl
loop
rcll
in
jns
and
sbb
call
pop
int
inc
mov
nop
jns
stos
lds
cmp
xor
fcmovne
xor
test
lret
and
pop
adc
mov
xchg
ds
cld
std
subw
dec
fisttps
scas
cwtl
dec
cltd
jmp
sub
lods
jmp
xchg
xor
dec
adc
fsts
pop
iret
pop
mov
shrl
cmp
lds
ljmp
shlb
dec
aas
fcmovne
testl
push
in
test
cmp
dec
and
es
mov
push
movsb
mov
adc
fldenv
rcrb
mov
rcrb
leave
add
test
pusha
lea
aad
jecxz
add
insb
sarl
jl
push
nop
testl
inc
pop
mov
cmp
push
dec
push
xor
fwait
adc
mov
or
jnp
stos
lcall
mov
jle
dec
cli
test
mov
xor
outsl
inc
loopne
sahf
and
jl
fsubrs
inc
mov
pop
psrlw
mov
ljmp
popf
xchg
push
fstpl
es
shlb
push
nop
xor
aaa
push
fadds
xchg
cs
mov
cwtl
lods
xchg
in
pop
div
push
cld
mov
rorb
jnp
pop
std
fs
xor
adc
pop
cmp
arpl
push
lret
push
xchg
in
xlat
imul
and
and
stos
into
ss
push
ss
enter
mov
lds
addr16
xlat
out
outsl
mov
inc
xchg
add
test
into
fidivs
inc
in
in
repz
data16
fidivrl
and
sti
push
lea
fdivr
add
jg
shl
cwtl
imul
add
pop
jle
cmp
jp
stos
or
out
test
jge
pop
mov
test
testb
push
or
mov
add
in
das
push
cmp
lock
insb
xor
adc
out
mov
movzwl
mov
sbb
push
lret
incl
pop
push
fsubl
out
jnp
mov
or
mov
cmp
pop
dec
test
fsubs
addr16
into
in
ljmp
jle
jge
pusha
push
cmovns
mov
das
xchg
nop
popf
gs
adc
icebp
jnp
and
xor
xlat
and
add
pop
xor
ljmp
inc
xorb
shrl
or
mov
pushf
iret
adc
pop
ds
int3
inc
push
xchg
ljmp
dec
add
stos
test
lds
xor
pop
cmpsl
pop
movsb
and
cltd
sbb
xchg
cmp
shll
into
sbb
mov
cmp
mov
jl
out
sarb
iret
dec
mov
imulb
push
cmp
aam
add
xor
adc
fwait
insl
add
jmp
xor
scas
std
jns
daa
cs
outsl
daa
bound
out
ret
mov
popf
xchg
fdivl
ss
sahf
mov
pop
je
imul
int
insl
stos
jmp
or
pop
xchg
jl
lret
setno
mov
ss
loopne
cltd
lods
mov
push
cltd
call
cmp
fnsave
movsl
and
cmp
xor
test
in
dec
sbb
cmp
adc
lock
push
mov
loop
mov
aad
mov
out
or
mov
js
shlb
je
inc
ss
add
jmp
xor
ds
sbb
bound
dec
aam
inc
das
stos
in
dec
fsubl
mov
test
push
sbb
push
push
inc
xchg
ljmp
subb
cli
dec
push
sub
and
mov
mov
adc
shlb
cmp
sub
mov
mull
pop
aas
inc
pop
inc
pop
push
fs
mov
outsb
loopne
xchg
pushf
ret
dec
sub
faddl
pop
pop
das
inc
div
dec
stos
test
jg
sub
and
dec
push
arpl
dec
push
int3
sahf
inc
pop
xchg
ret
cmp
cld
ds
ss
test
adc
loope
je
call
sub
xlat
adc
fistps
or
xor
inc
sbb
inc
pop
fildl
dec
adc
and
lcall
inc
daa
cmp
negl
pop
add
mov
xor
les
jmp
test
pop
add
cwtl
xor
insb
mov
gs
ficoms
jp
enter
jae
pusha
sub
and
scas
sbb
xor
push
sub
dec
pop
imul
ret
scas
adc
sub
movl
xor
into
adc
push
sub
sub
decb
pusha
sbbl
cmp
loope
adc
mov
in
stc
movsl
jg
cmp
psrlw
loope
adc
in
add
in
imul
insl
xor
out
test
pop
mov
mov
jp
test
mov
sarl
cmp
pop
add
stc
cld
xor
jnp
scas
je
fnstenv
xchg
scas
sti
int3
fs
cmp
xor
pushf
inc
sub
les
xor
fsubs
mov
lret
push
mov
icebp
cld
adc
mov
inc
push
lods
jne
xchg
cmp
sbbl
inc
sbb
sbb
flds
aaa
cmp
int
sahf
idivl
dec
mov
ret
mov
mov
pop
fstp
push
mov
or
test
mov
cmpsb
xchg
lds
sbb
pop
dec
testl
xor
rolb
pop
push
cld
push
lcall
mov
mov
js
test
pop
pushl
cwtl
xchg
cli
or
test
sub
xchg
lret
mov
pop
add
stc
mov
push
push
mov
sub
nop
in
xchg
mov
jb
push
mov
sbb
or
arpl
cmp
mov
jmp
jno
sub
addr16
cmp
test
rcrb
das
test
xchg
stos
and
ret
push
les
out
adc
test
icebp
adc
sub
lret
add
jmp
lock
ljmp
xchg
test
cmpsl
pop
or
add
add
cmp
iret
xor
testb
sti
inc
adc
push
adc
mov
ds
movsl
inc
mov
dec
sbb
stc
in
push
test
aaa
fbstp
cltd
dec
out
andl
sub
into
ss
push
mov
xchg
enter
or
jno
fninit
outsl
bound
imul
push
stc
je
stos
je
enter
fisubs
pop
jmp
movsl
push
dec
mov
fcompl
ljmp
add
xchg
ret
cmp
mov
rolb
mov
and
inc
xor
xchg
lea
sub
pop
gs
ret
sbb
xor
and
mov
rolb
sub
test
inc
imul
jbe
fisubrs
cmp
sbb
ficompl
stos
inc
or
repz
mov
fcoms
inc
loope
or
fisttpl
sbb
jl
int
push
loope
movsl
lcall
js
mov
lahf
xor
xorl
aaa
push
mov
xlat
xlat
mov
jo
sub
loop
cmp
sub
pop
push
xchg
mov
aas
sbb
sbb
or
xchg
adc
jnp
out
fcomi
in
xchg
jne
push
pop
leave
pop
mov
ljmp
push
push
add
movsb
dec
lcall
cmp
out
int3
in
xor
or
jo
adc
mov
push
xchg
jl
scas
add
adc
add
and
add
mov
sbb
mov
push
xchg
push
iret
push
jge
adc
pop
ja
test
insl
imul
aam
repnz
jbe
ret
movsl
jl
aas
jno
daa
adc
shlb
cmpsl
dec
cmpsb
lock
jne
lods
jp
lea
aam
sahf
mov
mov
imul
jg
scas
lds
fimuls
psubd
adc
call
jno
cmp
push
cmpsl
je
repz
negl
cmp
or
in
xchg
jnp
pop
in
pop
lcall
cmp
mov
outsl
inc
xor
pusha
xchg
sub
mov
mov
ret
sub
inc
push
stos
and
xor
sub
in
jge
adc
mov
insb
aas
sub
sbb
sub
and
mov
addb
clc
mov
das
xchg
sbb
cmp
out
pusha
je
dec
bound
jg
jmp
inc
adc
pop
pop
xor
fistpll
add
daa
stc
sahf
mov
pop
xchg
cmp
imul
ss
mov
and
popf
xlat
aam
mov
and
adc
add
adc
xchg
add
aad
pop
into
fs
xor
out
or
dec
xor
push
dec
stos
cmp
sahf
pop
stos
nop
pop
orb
inc
mov
or
cwtl
cmova
js
cmp
add
jno
adc
cmp
in
daa
bound
out
imul
movsb
cwtl
mov
cmp
in
stos
test
popa
mov
xor
sbb
pop
jb
push
add
mov
out
popf
add
mov
imull
imul
lcall
sbb
mov
cli
adc
repnz
dec
dec
adc
sahf
pop
fs
scas
xchg
adc
ds
sbb
jae
aad
insl
inc
into
lret
mov
adc
lods
sbb
outsl
inc
das
xchg
in
lock
sub
xor
bound
mov
mov
fildl
push
and
aaa
mov
iret
shr
mov
imull
fisttps
bound
sbb
stc
fildll
test
sbb
jge
ret
inc
jp
pop
mov
cmp
nop
ret
scas
xchg
inc
add
sbbl
aad
ret
sbb
cmp
popf
mov
sub
adc
mov
out
push
mov
nop
pop
push
mov
mov
sub
jne,pn
cmovnp
aad
rcll
sub
push
xchg
scas
sbb
mov
push
mov
lcall
scas
push
push
xchg
fwait
xor
cmp
xchg
je
cld
xor
imul
push
pop
cmp
jl
insb
loopne
shrl
push
dec
dec
push
cmp
push
decb
push
dec
sbb
add
adc
cltd
aam
pop
mov
out
jmp
jb
push
mov
faddl
adcb
gs
sub
adc
aam
sbb
subl
and
xchg
movsl
or
cs
cmp
nop
repnz
ss
aas
sub
mov
mov
daa
mov
sahf
jle
pop
fldt
das
sahf
or
in
fidivs
enter
jl
xor
or
or
jp
adc
test
aaa
out
js
out
stc
xor
mov
fcompl
jp
int3
bound
cwtl
sub
mov
mov
mov
mov
fisubrl
shrb
push
inc
jge
sub
jbe,pt
js
jae
and
xor
fcomip
cmpsb
push
push
add
jmp
imul
aam
aad
pop
cwtl
enter
sub
cmp
xchg
pop
out
pop
iret
push
addl
pusha
pop
cli
fisttpll
fcmovnbe
and
scas
test
pop
mov
movsb
pop
push
pop
jae
popa
push
adc
mov
pop
push
std
aaa
sub
mov
push
dec
or
fs
rcrl
popf
mov
mov
out
aam
js
mov
aam
lods
dec
jne
xchg
jmp
mov
daa
xchg
inc
scas
js
push
and
dec
fsqrt
movsb
xor
cmp
dec
outsl
into
pusha
pop
fstl
cmovae
lock
lods
sub
pop
sub
pop
js
addl
sub
mov
or
sub
pushf
mov
dec
jmp
mov
das
fstps
cmc
xor
sub
movsb
addr16
jnp
sti
add
fisttpl
mov
push
dec
and
clc
pop
pop
push
inc
xchg
aam
pusha
shll
xor
fcompl
pop
mov
aaa
push
mov
mov
pop
sub
lods
jmp
jnp
mov
pop
idivb
sbb
xor
jae
and
push
or
test
popa
inc
fdivrl
or
jl
push
fsubrl
pop
inc
aas
and
mov
out
push
rcr
scas
adc
adc
inc
cltd
pop
xchg
and
and
sub
push
fldt
int3
cmpl
mov
out
sub
pop
jge
lret
sbb
rcrb
xor
jge
jnp
lahf
xchg
mov
arpl
jle
cmp
mov
sub
scas
ja
push
pop
ss
cmpsl
inc
cmpsb
inc
pushf
call
adc
inc
lret
rorb
imul
jecxz
xor
jno
cmc
mov
xor
jo
test
test
mov
mov
aad
xchg
push
sbb
sub
mov
mov
std
insb
xor
or
out
or
in
lock
mov
pusha
lds
fists
lret
sbb
shll
jmp
ljmp
andb
pusha
and
mov
sbb
mov
mov
outsl
and
cltd
mov
pop
jecxz
push
fsts
repnz
hlt
in
aad
xor
gs
in
add
aas
pop
dec
popf
hlt
sbb
lcall
push
xchg
insl
gs
jmp
xor
sub
and
push
push
inc
cltd
out
jg
fstpt
aam
nop
ljmp
nop
mov
or
mov
jl
roll
lods
cmp
dec
fildl
in
js
jns
sbb
cmp
inc
notl
fcmovne
imull
xchg
cld
xlat
or
popa
jae
iret
aaa
cmp
arpl
lock
lret
sub
pop
loopne
pop
xor
mov
insl
je
mov
icebp
mov
push
dec
imul
adc
push
sub
mov
mov
ds
sbb
adc
xchg
adc
ret
sub
outsb
daa
testb
jo
cmpsl
lret
push
push
cmp
sarb
push
xor
out
aam
mov
imul
add
xor
in
push
hlt
xor
pop
pop
adc
mul
xchg
cwtl
rcr
aaa
sbb
pop
stos
jne
or
out
lods
pop
fiaddl
dec
pop
dec
cwtl
and
mov
mov
push
hlt
shlb
fsubrl
lret
dec
andl
xchg
pop
dec
loope
imul
add
idivb
adcb
pop
sub
xchg
ja
shl
cs
pop
jnp
daa
pop
imul
mov
sbb
test
leave
jp
and
mov
out
pop
mov
or
or
xor
sbb
fs
xor
and
mov
mov
or
jo
push
mov
adc
divb
push
sarb
out
sub
add
ret
mov
add
xorb
int3
movsl
popf
std
aad
bound
stos
mov
mov
loopne
dec
add
cmpl
daa
out
fistpll
pop
add
xchg
hlt
pusha
lds
stc
xor
xor
xchg
mov
dec
push
out
sbb
daa
cmp
shrd
out
leave
cmp
jns
and
repnz
jle
scas
fwait
sbb
daa
adc
lret
mov
loop
mov
mov
mov
nop
or
add
aaa
vmwrite
cmpsb
lea
add
cmpsl
idivl
jbe
mov
fmull
std
jbe
fidivl
cs
dec
push
leave
add
mov
lret
push
sahf
inc
xchg
mov
aaa
or
dec
cwtl
pop
and
addl
xchg
mov
cmc
push
mov
and
pop
push
outsb
inc
adc
lret
xor
out
xor
mov
xchg
adc
cmp
mov
dec
or
es
add
in
lahf
hlt
lcall
nop
cld
mov
loop
inc
in
out
xor
cltd
mov
jle
jle
enter
lret
cmc
xchg
xchg
nop
mov
adc
xor
je
sbb
sub
adc
mov
add
nop
push
inc
das
jne
push
test
sub
aaa
add
sub
xchg
sbb
ja
inc
mov
int3
xor
xchg
movsl
push
mov
in
in
sub
into
sbb
repz
xchg
pop
pop
out
insb
in
gs
and
cltd
es
in
cmp
push
addr16
cli
or
int
pop
and
and
mov
clc
dec
hlt
xor
sarl
repnz
adc
inc
sbb
stos
lret
and
jg
dec
sbb
cmp
cmpl
pop
pop
and
push
scas
mov
jnp
xor
cwtl
add
shrb
ret
roll
cmp
jne
loop
xchg
mov
add
dec
push
iret
out
insb
lcall
mov
fistps
dec
out
mov
add
sub
dec
pushf
inc
sbb
push
mov
adc
dec
dec
insb
sub
aas
scas
xorl
bound
adc
popa
sbbl
data16
aad
jbe
mov
sbb
shll
mov
inc
bound
pop
jae
fcomps
xor
frstor
or
xor
jnp
fisubs
inc
sbb
adc
mov
fdivr
int
std
in
mov
popf
fidivl
push
daa
and
jg
mov
cmp
xchg
cmp
std
scas
lods
adc
xor
std
xchg
sub
dec
cmp
test
movsb
xor
jb
sti
mov
cmc
in
in
xor
pop
lock
hlt
rolb
scas
test
xor
pop
iret
into
push
in
subb
xor
out
lea
xor
inc
arpl
jmp
test
out
xchg
push
and
mov
jns
fdivrs
cld
mov
inc
mov
xor
mov
ja
pop
dec
jge
sbb
jo
lock
mov
xlat
mov
push
xchg
push
mov
jg
sbb
or
xor
pushf
sti
stc
stc
stos
test
jno
dec
mov
xchg
pop
jg
add
mov
in
das
out
inc
push
insb
jno
test
inc
popl
fidivrl
std
jmp
lret
imul
leave
incl
add
mov
fldenv
xlat
loope
xor
inc
push
dec
call
shll
ds
sbb
mov
aad
jnp
xchg
and
jno
incl
dec
stos
sbb
sbb
test
rcrb
dec
icebp
pop
daa
pop
int3
pop
or
neg
sbb
push
inc
push
out
mov
mov
push
and
es
pop
das
push
cmp
mov
cld
or
jb
imul
inc
fbstp
rclb
and
sbb
into
xchg
xchg
cs
scas
adc
pushf
pop
jg
addr16
cltd
xchg
lds
jl
aaa
icebp
ret
or
and
mov
fisttpl
lret
sahf
jnp
mov
add
je
push
insl
ret
adc
imul
mov
lret
jl
mov
push
push
lds
or
jns
pop
mov
inc
jb
cwtl
xchg
int3
sub
push
pushf
cmp
call
cmp
inc
in
push
addl
int3
movsl
aam
mov
adc
sub
mov
loop
stos
sarb
daa
and
xor
push
add
mov
ror
out
inc
and
mov
rclb
cmpb
add
test
sub
push
or
inc
push
push
mov
out
jo
pop
jg
rcll
out
push
pcmpgtw
adc
push
sbb
dec
mov
clc
jl
inc
cld
stos
in
pop
cltd
inc
pop
cld
jp
repnz
hlt
subl
mov
or
jmp
push
ror
mov
in
cmp
jg
or
push
xor
iret
jecxz
bound
pop
xchg
xlat
adc
sub
cs
lods
jne
cmp
mov
lcall
and
out
out
adc
or
loope
rcrb
push
inc
push
aad
aad
test
in
lock
repnz
cmp
xchg
cmpsb
ljmp
maskmovq
in
sbb
jl
mov
sbb
ret
dec
sbb
add
or
mov
jae
scas
dec
fcoms
gs
sbb
outsw
ss
ret
jp
push
sbb
scas
pop
fcomi
mov
inc
xor
int3
lret
xchg
pop
int3
cmp
mov
idivb
cli
push
and
jb
lock
and
ljmp
enter
es
pop
mov
lea
in
adc
mov
fsubr
movsl
and
mov
jge
data16
push
sbb
int
call
fstp
xchg
stc
lods
test
xchg
and
jne
lods
lea
loope
cmp
xchg
pop
sub
xor
fwait
jae
repz
incb
xchg
movsl
dec
ja
mov
lods
test
add
cld
add
mov
xlat
icebp
sub
cmpsb
mov
and
push
ret
jnp
mov
leave
mov
psubusb
push
mov
leave
and
shll
xchg
ds
test
or
adc
insb
ja
dec
testl
xchg
mov
mov
lahf
decl
test
push
xchg
inc
daa
push
pop
xchg
pusha
and
adc
arpl
sahf
add
pop
cmp
cmpsl
aad
jge
mov
inc
add
dec
lcall
lea
cmp
cltd
xchg
scas
mov
popa
xor
xlat
jbe
mov
adc
pop
xor
or
xchg
sub
cmp
pop
push
in
jg
incb
dec
aas
push
int
xchg
push
mov
test
test
loopne
fwait
pop
shll
fmuls
repz
mov
push
out
jae
inc
popa
shll
js
aam
hlt
sbb
inc
push
jmp
push
mov
xor
pop
mov
repnz
mov
pop
sahf
jae
idivl
mov
cmp
or
sbb
adc
jnp
into
mov
fimuls
mov
ret
pop
in
xlat
jno
and
inc
call
data16
xchg
repnz
push
lods
fwait
mulb
imul
xorl
xchg
mov
fisttps
icebp
jns
mov
outsb
das
or
dec
lret
mov
sahf
xor
xchg
fdiv
call
popf
inc
pop
hlt
fdivl
sub
cwtl
ja
inc
int
dec
push
pop
cmpsb
pop
cmc
stc
xchg
mov
and
jnp
rcrb
loopne
push
add
push
cmp
dec
mov
mov
or
cld
cmp
fdivr
mov
lds
cwtl
dec
inc
pop
ret
mov
mov
mov
out
push
fs
loope
cmp
in
inc
in
sbb
idivb
and
mov
mov
sub
push
fs
xor
iret
add
inc
pop
add
cmp
and
mov
xlat
cmp
pop
mov
xchg
inc
adc
jbe
bound
and
and
hlt
xor
rcrl
push
mov
mov
and
fmuls
ret
cmp
push
cmc
sub
adc
push
cmp
ljmp
dec
sbb
jo
ja
repz
enter
clc
mov
jmp
cmp
xchg
mov
mov
push
push
testl
inc
fldl
mov
or
movsb
pop
mov
outsb
jnp
xor
sahf
test
in
jg
cwtl
loop
loop
xor
dec
pop
imulb
fstp
aaa
outsb
adc
sbb
jl
lret
jle
xchg
push
lret
popf
cmc
ljmp
pop
out
mov
test
fs
sbb
sahf
adc
std
sbb
xor
aas
nopl
shll
add
cli
inc
inc
dec
inc
rcl
es
insl
mov
cmpsb
jge
cltd
xor
mov
mov
xor
xor
mov
sbb
pop
clc
jmp
aas
xor
repz
xor
je
inc
mov
mov
xor
pop
arpl
out
jbe
pop
sub
enter
pop
xor
mov
xchg
mov
add
jmp
ret
sub
cmc
into
push
push
or
into
dec
addb
cs
xor
dec
mov
enter
or
repz
mov
out
cld
out
mov
test
jno
aaa
mov
dec
mov
das
gs
add
fmuls
test
scas
pop
pop
mov
in
push
stos
orb
cs
mov
mov
imul
pop
xor
add
insb
or
pop
stos
jle
test
adcb
mulb
push
stos
jae
add
push
mov
mov
lds
fiadds
stos
inc
cmp
leave
inc
and
xor
scas
sti
lret
inc
xor
aaa
mov
rol
mov
xchg
test
loopne
adc
test
or
into
into
dec
jne
adc
push
lea
hlt
adc
cmp
in
mov
cmp
data16
adc
pop
jbe
jg
mov
sti
popf
jns
stos
imul
imul
scas
rol
jl
mov
int
ficoms
cli
pop
push
das
push
aad
rolb
je
xchg
dec
xor
in
mov
lret
sbb
add
xor
push
inc
push
cmc
push
mov
dec
iret
int3
jle
mov
cmc
xchg
insl
push
cltd
cli
inc
cltd
shrl
adc
add
add
jge
mov
push
pop
xchg
pop
sub
xchg
mov
dec
push
inc
and
rcr
in
jns
in
icebp
loope
pop
inc
cmp
loopne
mov
jnp
enter
or
lds
subb
ljmp
mov
add
fmull
dec
and
xchg
cmc
ret
sbb
leave
aas
mov
sub
cld
mov
sbb
pusha
push
push
lods
ret
orb
sub
roll
lcall
cmp
shr
test
push
or
scas
pop
das
sub
xor
push
rol
adc
insb
fstpl
sub
cld
ret
mov
cmp
sbb
insb
jb
pop
ss
addr16
or
cmp
xor
xchg
mov
xchg
fstpl
fstpl
add
and
inc
fdivrl
xchg
out
aad
mov
in
lock
jl
ja
cmp
insl
jg
pop
pop
mov
lds
mov
and
lods
daa
jp
cli
push
inc
mov
out
insl
nop
add
mov
sbb
jo
xchg
or
pop
aad
fists
pop
icebp
fldcw
add
push
mov
and
sbb
enter
nop
flds
les
add
std
jge
dec
push
je
movsl
shll
jp
lods
jl
or
add
cli
shrl
adc
cmpsb
or
push
ljmp
jo
mov
std
mov
imull
out
push
int3
push
jae
adc
cmp
cmpsl
aas
or
fisubrl
push
cmp
and
ljmp
or
add
pop
rclb
mov
pop
data16
add
icebp
and
inc
mov
ss
dec
push
repnz
jb
sub
rol
push
cld
jecxz
sbb
mov
out
and
lahf
and
add
inc
mov
out
ret
les
call
fwait
stc
jb
pop
test
call
outsl
rorb
and
jge
dec
cmp
inc
out
out
xor
add
adc
negl
ret
xlat
mov
sub
jbe
cmp
sbb
pop
dec
dec
mov
lcall
ret
and
inc
adc
mov
inc
dec
movsb
arpl
jg
insb
mov
and
cli
dec
imul
push
fstl
dec
dec
cmp
sub
test
dec
bound
inc
lahf
adc
cltd
test
cwtl
cli
sbb
clc
outsb
movsb
mov
and
ffreep
cli
xor
xor
cmp
jle
fdivl
ret
es
cmpsb
es
mov
jnp
test
das
out
mov
mov
lea
shl
jnp
jns
fs
xor
outsb
insb
adc
push
or
mov
inc
inc
lock
xchg
test
lock
sub
out
adc
insb
repz
push
sub
sbb
pop
rorl
ret
and
repz
push
ret
adc
fidivl
into
sbb
dec
ja
mov
mov
call
ud2
sub
mov
in
fldl
loope
leave
roll
add
fistpl
fcoms
insb
and
lea
mov
xor
cmc
fists
in
pushf
xor
and
inc
loop
gs
cld
daa
aaa
fwait
adc
push
push
push
lahf
cwtl
data16
mov
jp
jns
fs
arpl
inc
add
push
pop
ljmp
test
mov
jmp
pushf
idivb
xchg
inc
negl
sub
mov
cmp
or
cmpsb
jbe
or
scas
xor
outsl
rol
pushf
xchg
mov
xchg
push
lods
cwtl
fdivs
aas
rcrb
push
mov
jb
loopne
stc
gs
and
fadds
loopne
lret
sub
nop
mov
and
inc
outsb
jecxz
cmp
and
int3
aas
adc
mov
aad
or
mov
inc
inc
movb
jmp
sbb
je
or
cmp
jmp
jmp
data16
push
in
jbe
arpl
insb
lcall
bound
fistpll
jge
and
out
add
aad
ss
xchg
jae
xor
xchg
xchg
cmpl
inc
jnp
mov
cmpsl
shrl
aad
gs
loopne
xchg
fdivl
aad
cmp
pop
dec
sti
nop
push
inc
cmpsb
out
pop
mov
fnstcw
dec
or
mov
popf
inc
dec
leave
jle
adc
es
mov
sub
mov
jne
cmp
xchg
mov
and
sbb
cltd
pop
xor
or
movsl
into
pop
xlat
sub
mov
shrl
imul
mov
jo
cltd
gs
imul
sbb
stc
mov
ljmp
mov
daa
push
mov
xor
movsb
leave
sub
fcompl
mov
divb
test
test
lret
in
and
push
push
pop
push
repz
cwtl
cld
fmuls
out
xchg
push
std
and
and
lea
push
imull
mov
jmp
mov
into
inc
popa
cwtl
inc
sub
lahf
bound
mov
add
push
wbinvd
insb
mov
js
or
mov
jp
jbe
sub
mov
test
dec
xor
mov
gs
mulb
ror
cli
or
cmp
xor
pop
dec
mov
fdiv
andb
std
xchg
out
inc
adc
add
xor
pop
pop
and
call
sahf
xchg
mov
mov
mov
jecxz
mov
arpl
sahf
pop
push
in
mov
mov
dec
nop
fwait
inc
lods
les
push
or
dec
orl
pop
mov
andb
push
repz
stc
pop
xor
scas
or
cmpsb
js
ljmp
test
shlb
jbe
cmp
sbb
mov
jmp
jns
push
or
xor
hlt
xor
add
mov
cli
xor
pop
pop
aad
inc
dec
mov
int3
ljmp
mov
rcll
sub
pop
dec
jle
mov
lahf
in
popf
or
inc
mov
lahf
scas
xchg
std
inc
call
xor
out
cli
es
inc
cmc
arpl
shl
cwtl
inc
psadbw
add
lahf
std
dec
mov
ljmp
testl
call
sub
leave
std
xor
push
jne
fistl
repz
sub
fidivs
cmpsb
test
xor
mov
sbb
dec
push
in
pop
xor
xchg
imul
fcomip
add
push
xor
sub
dec
xor
jae
icebp
fmuls
xchg
jno
push
sub
xor
jb
int3
aaa
je
out
rclb
dec
mov
imul
cmp
fbstp
dec
rclb
fisttps
push
outsb
sub
xor
addr16
push
adc
jb
mov
mov
cltd
stos
outsl
negb
cmp
cmp
icebp
add
dec
mov
pop
and
dec
aam
data16
push
push
into
cltd
jnp
rorb
push
xor
daa
adc
pop
push
lock
xor
push
cmpsl
or
sbb
js
cld
scas
push
cltd
movsb
clc
in
pop
xorl
add
mov
into
pusha
jne
pop
sahf
sub
mov
xor
sub
or
adc
pop
lret
cmc
repz
lret
mov
mov
shrl
clc
jb
sbb
or
or
pop
jge
mov
mov
adc
ret
mov
pop
out
push
adcl
mov
inc
movsl
decb
test
int
movsl
xchg
mov
out
add
notb
push
inc
jp
inc
or
popa
sub
adc
hlt
ds
cmpsb
pop
call
add
inc
mov
jmp
popa
adc
ret
or
mov
or
pop
test
test
sub
shlb
xchg
xor
sbb
jbe
repz
or
mov
out
sbb
pushf
arpl
cmpsl
and
fistps
leave
repz
push
mov
xchg
lret
movb
mov
stos
mov
cli
xchg
add
psubsw
xlat
sbb
cld
mov
stc
or
pop
aaa
inc
in
imul
aam
das
test
sub
lret
in
jle
xor
lods
fiadds
sbb
fidivrl
mov
mov
push
mov
imul
push
xchg
dec
in
in
js
xor
in
mov
and
jecxz
push
dec
cs
and
scas
add
inc
iret
pushf
insl
xor
loop
nop
fcompl
or
cld
jae
loopne
push
pop
push
jl
xchg
mov
test
pop
mov
and
int3
pop
add
push
mov
lahf
fldt
jle
mov
push
out
xor
mov
add
addb
mov
out
push
xchg
push
xchg
sub
cmp
inc
test
push
repz
rcr
xlat
ss
lret
and
push
ret
gs
sbb
push
popa
lahf
call
sub
pop
fisttps
jecxz
fmul
push
jno
dec
loop
pop
cmc
mov
mov
les
nop
das
inc
xchg
and
scas
imul
ljmp
movsl
and
adc
xchg
out
pusha
int
sub
cld
jnp
cmpsl
int
sbb
adc
int3
enter
jnp
add
cmpl
fistps
stc
inc
fcompl
xor
repz
sub
jne
jecxz
sbbb
out
int
pushf
mov
fdivrl
dec
push
xchg
cld
mov
mov
decb
lods
lcall
sti
cwtl
cmc
cmpsl
nop
aam
adc
xchg
cld
jp
pop
test
push
nop
lock
popa
xor
mov
inc
mov
imul
push
push
mov
xchg
cmp
insb
mov
test
ljmp
xchg
and
wbinvd
mov
movsb
mov
add
ret
test
shll
addr16
cmpsl
push
ja
xor
in
insl
cmp
icebp
roll
movsb
xor
inc
add
pop
dec
jp
cwtl
adc
and
pop
pop
rcr
sub
std
dec
popf
lea
pop
push
adc
mov
pop
inc
push
dec
in
cwtl
mov
in
xor
cwtl
jbe
ljmp
mov
test
dec
and
fisubrs
movsb
loop
xchg
mov
xor
xchg
pop
aaa
xchg
dec
jle
icebp
mov
and
jb
ljmp
test
lds
and
int3
sub
xor
out
add
mov
fstpt
inc
loop
repz
gs
popa
jg
stos
pop
dec
inc
xchg
push
or
inc
cmc
cli
mov
push
mov
xor
stos
xchg
jae
mov
jb
ds
sub
adc
xchg
gs
adc
imul
and
cwtl
jge
mov
scas
sti
xor
sub
inc
iret
xor
jb
ds
cmp
outsb
dec
dec
mov
adc
adc
adc
dec
jmp
cmp
push
shll
sbb
sarl
insb
fdivrl
jnp
mov
data16
pusha
cmp
push
adc
sbb
pop
push
xchg
stos
push
cmp
rcll
dec
cmpb
movsl
lret
mov
test
or
fdivrl
and
sub
xlat
or
popa
push
fldcw
sub
push
jecxz
mov
cli
adc
aaa
pop
sub
jo
cmp
mov
pop
stc
jle
xchg
in
mov
imul
push
mov
jle
int
sahf
and
cltd
ficoms
sbb
pop
fs
out
jmp
xchg
xchg
les
pop
xor
je
mov
loop
lcall
xor
adc
xchg
cwtl
mov
out
dec
and
movsb
xchg
insb
add
bound
out
add
cld
sbb
in
pushf
mov
jge
fldcw
les
dec
pop
jge
hlt
arpl
push
imull
les
lods
sbbb
mov
lea
sub
in
lret
mov
dec
je
mov
ja
xchg
add
aaa
mov
push
adc
lock
das
outsl
popa
adcl
ljmp
repz
and
fwait
add
xchg
pop
cmp
mov
jnp
push
xchg
addl
movsb
and
xchg
pop
sub
sub
jb
pop
pop
sbb
aas
int
in
out
pop
paddusb
sub
ljmp
movsb
test
sub
pop
lret
pop
jecxz
dec
in
stos
jne
shl
call
push
add
push
mov
cld
xor
out
fstpl
ss
pop
int3
std
loope
mov
imul
pop
icebp
scas
sahf
jo
jge
arpl
fnstenv
fdivrp
clc
fisttpl
adc
jns
divl
and
mov
je
push
inc
cli
sahf
add
push
xchg
add
mov
addr16
and
cwtl
mov
jg
ss
cmc
cli
mov
push
fbld
inc
imul
loopne
mov
repnz
cmc
adc
push
insb
dec
rorl
sub
sbb
test
fistps
jo
lods
sub
jl
pop
sub
mov
std
push
cwtl
lahf
stos
xchg
push
inc
push
mov
xchg
or
rcrl
shl
mov
cmpsl
add
xchg
push
aad
pop
pop
xchg
out
and
xor
je
lahf
in
cmp
testb
xchg
gs
outsl
dec
ret
imul
cmp
xchg
mov
scas
es
sbb
adc
add
cmpsb
and
ja
pop
mov
stos
mov
lods
mov
fisubs
pop
movsl
mov
lea
ret
mov
mov
int3
mov
and
pop
push
mov
fcom
mov
sbb
jae
popa
mov
rolb
cmp
into
fnsave
mov
loope
inc
cmc
or
add
sti
add
mov
or
lret
je
mov
pusha
mov
xchg
lahf
test
ds
pop
dec
xchg
pop
fisubl
mov
xor
fiadds
outsb
push
lods
mov
add
imul
cmp
jbe
xor
icebp
push
insl
or
and
jecxz
jp
xchg
xchg
insl
lcall
jne
xchg
add
dec
and
out
loopne
bound
jno
inc
xchg
mov
popf
loop
jmp
jge
es
cmpsb
js
fistpl
pushf
jo
das
rcll
adc
mov
repz
dec
movb
jp
dec
nop
leave
adc
dec
out
loop
out
mov
mov
aaa
cmp
mov
scas
aad
addr16
jo
scas
das
push
sbb
clc
test
push
lret
inc
inc
outsb
cli
in
in
and
rorb
neg
jo
mov
mov
cmp
mov
xchg
and
cmp
out
add
pop
sub
fs
mov
adc
push
jne
sbb
adc
mov
push
es
stos
stc
imul
jno
mov
cmp
cld
mov
xchg
xchg
subl
sarl
outsb
add
mov
cmp
pop
sbb
inc
imul
lret
lds
je
cs
fmuls
adc
add
cmp
lret
mov
push
jle
or
das
jnp
mov
adc
mov
pop
xchg
scas
xchg
dec
jle
fisubl
ret
or
iret
jne
jb
fs
xor
call
mov
dec
jg
jae
jnp
addr16
mov
insb
sahf
movsb
jle
lock
inc
orb
cwtl
mov
test
sbb
xchg
lods
sub
dec
pop
loope
dec
mov
scas
jecxz
dec
scas
popf
pop
mov
sbb
xor
jae
cld
pop
cmpsl
dec
in
dec
in
addb
sub
xchg
mov
je
pop
std
fs
sbb
dec
cmp
inc
xor
aaa
inc
pop
filds
data16
imul
lcall
pop
sub
out
outsl
sub
scas
addr16
stc
mov
movsb
arpl
jp
gs
lods
pop
cltd
popa
push
and
stos
cltd
xor
xchg
adc
add
ficomps
jo
cmpsb
js
cmp
adc
lretw
data16
out
ds
aas
das
mov
xchg
sahf
hlt
mov
sub
ret
push
xchg
jnp
mov
insl
dec
data16
mov
idivl
test
popf
jns
lcall
cmpsl
mov
into
push
popa
movsl
fists
pop
test
or
adc
addr16
cmp
adc
faddl
bound
scas
cmc
sahf
lret
add
mov
inc
out
scas
mov
xor
popf
push
mov
cmpsb
mov
mov
mov
mov
jno
add
nop
pop
out
call
stos
jo
push
js,pn
out
ret
arpl
out
mov
sub
pop
popa
push
out
imul
int
sbb
and
jno
sbb
jmp
cmpsl
add
push
inc
dec
sub
mov
mov
inc
mov
and
movsl
mov
jp
add
xchg
pop
push
pop
inc
jae
push
jo
sub
cltd
mov
ja
dec
scas
fsub
in
mov
mov
push
jle
and
ss
mov
test
or
outsb
cltd
rolb
push
shrl
adc
ljmp
ret
push
lcall
in
fsubl
incb
aaa
faddl
sbb
cld
sbb
je
stos
aam
jbe
adc
pop
mov
bnd
outsl
mov
push
inc
mov
inc
push
xor
pushf
in
stos
mov
insb
and
adc
lds
push
ljmp
lods
test
stc
sbb
cwtl
mov
mov
in
pop
enter
lret
loopne
adc
xchg
ljmp
pushf
jg
xor
insl
iret
push
lods
pop
fdivs
sub
ret
cli
stc
sbb
push
and
push
xchg
std
andb
sbb
xor
stos
or
jne
cmpsb
inc
push
or
lahf
imul
add
cmpsb
pushf
push
and
mov
xchg
ja,pt
call
xor
fidivl
fs
mov
bnd
bound
and
insb
push
xchg
sbb
adc
or
xor
lods
mov
ret
push
addr16
mov
pop
adc
rcrb
jle
push
nop
loope
scas
jp
mov
pop
mov
jns
aam
es
out
or
js
mov
dec
mov
pop
outsl
sub
adc
ss
mov
push
mov
sub
outsb
lea
inc
mov
and
sbb
sub
sbb
lea
xchg
test
test
je
xorb
mov
imul
sub
jne
jnp
pop
idiv
sbb
mov
ret
pop
fidivs
in
push
xor
add
push
and
jl
or
sbb
rorl
xchg
out
stos
mov
xor
mov
inc
push
ljmp
scas
mov
ret
xor
push
iret
mov
orb
ljmp
lods
and
ret
rcrl
xor
or
jle
lahf
lods
in
mov
out
mov
test
inc
add
fidivs
adc
fsub
in
cmp
ret
xchg
mov
repnz
das
pop
and
push
sbb
cmp
mov
xlat
fs
sbb
cmpsl
stos
jns
sbbb
cmpsb
jle
sbb
js
jno
sub
nop
ret
mov
xlat
frstor
mov
addr16
shll
dec
gs
pop
xor
xor
dec
xchg
jnp
call
mov
dec
xchg
push
push
and
add
pop
shrb
cli
xor
add
mov
and
add
jb
rcrl
inc
mov
jecxz
pop
sub
mov
imul
movsl
dec
cmp
add
movsb
push
dec
jbe
dec
call
inc
popa
movsl
add
push
push
xor
sbb
mov
sahf
sahf
pop
mov
mov
mov
or
cli
xchg
jnp
lea
sbb
arpl
notb
pusha
add
inc
xor
adc
bound
pop
jmp
mov
xor
aaa
xchg
mov
fsubl
xchg
mov
shr
fstpl
mov
mov
jge
jp
mov
stos
pop
js
mov
jge
loop
sbb
loopne
addr16
mull
sti
inc
cltd
mov
mov
enter
push
push
cwtl
jp
mov
ret
test
out
nop
dec
cmp
jmp
sub
arpl
inc
sbb
jo
dec
or
dec
in
add
mov
out
inc
jbe
jnp
push
call
test
xor
in
jmp
out
and
clc
out
call
std
mov
aaa
hlt
cmp
fdivrp
ret
xorl
sbb
inc
rorl
sahf
cmp
push
add
stos
sbb
xchg
daa
xchg
mov
mov
ret
mov
adc
into
int3
int
and
hlt
dec
push
push
fistps
mov
sbb
sub
mov
in
xor
sub
cs
dec
mov
xchg
ret
adc
cmp
inc
cs
xchg
sbb
xchg
popa
in
adc
adc
xchg
jecxz
mov
lods
cli
sbb
mov
mov
insl
cmp
mov
lock
push
cmp
dec
and
jae
xchg
in
data16
lret
and
fcom
leave
xor
push
mov
xor
jae
xchg
jecxz
repnz
popa
test
jmp
fbld
lock
jge
jae
enter
shlb
mov
mov
push
js
lea
sub
ljmp
out
mov
loop
pushw
sbb
cmpsb
jno
sbb
jb
push
es
in
mov
dec
into
leave
popf
into
push
sub
aam
fisttpl
add
inc
mov
mov
pop
mov
dec
out
cwtl
leave
mov
lret
mov
ss
into
and
sti
sub
dec
jnp
dec
push
inc
jle
sbb
cmc
inc
dec
fiadds
idivl
mov
cmp
or
hlt
int3
icebp
push
sub
pop
xchg
jb
popa
shl
bound
jnp
shl
scas
jnp
pop
jmp
icebp
or
pop
sub
mov
arpl
cli
lods
sti
movsl
inc
jb
or
jmp
jbe
dec
adc
dec
pop
add
cmp
sti
inc
add
jp
sbb
sub
loope
adc
inc
dec
jecxz
std
jnp
ret
dec
add
and
flds
inc
cmc
lods
xchg
addr16
test
scas
call
sbb
sub
jge
pop
xchg
xchg
repnz
outsl
mov
pop
and
jmp
mov
sahf
jge
and
push
fisubs
out
repnz
imul
mov
insb
mov
loop
cltd
pop
pop
lea
jg
jns
insl
inc
mov
jo
stos
inc
scas
es
xchg
stos
ds
mulb
je
mov
clc
mov
test
push
popa
cmp
sbb
push
mov
popa
sbb
faddl
rcrb
ror
xor
pop
aam
stos
pop
add
arpl
xor
int3
pushf
adcl
arpl
lods
push
xchg
xchg
mov
out
cld
outsb
push
jne
sub
js
arpl
shll
fsts
inc
jae
or
js
mov
mov
jge
inc
inc
outsl
jle
pop
xor
sub
or
xchg
mov
dec
aaa
pop
ljmp
jbe
and
and
ret
loope
add
pop
jecxz
jns
jl
pop
jb
jae
adc
out
adc
inc
cli
cmpsl
xor
push
xchg
ret
outsl
fistpll
data16
pop
cmc
lock
push
pop
and
stos
cmc
out
mov
sbb
cmp
fnop
arpl
mov
aam
pop
inc
and
cwtl
lret
mov
fldl
outsl
adc
pop
xchg
pop
xlat
scas
cli
push
adc
out
or
test
and
add
test
or
fiaddl
add
pusha
sbb
loopne
out
fbstp
mov
hlt
pop
sub
loop
movl
arpl
mov
int3
dec
sbbl
dec
test
int3
hlt
je
pop
cmp
jecxz
lds
inc
stos
cmp
mov
dec
call
sbb
sub
add
into
sub
leave
fcomps
or
fsub
inc
andb
pop
ret
insb
es
aaa
push
push
push
addl
push
cmp
adc
orl
int3
test
push
cmp
lcall
outsl
push
popf
mov
int
pushf
mov
add
xchg
xor
into
jle
push
sbb
push
mov
push
mov
test
cmp
mov
addr16
xor
adc
inc
cmp
mov
arpl
pop
cs
cmp
bound
lret
cwtl
hlt
mov
mov
or
push
sub
aad
mov
jp
gs
adc
scas
sub
or
mov
jge
xchg
xor
push
fmuls
adcb
les
jg
sarb
js
test
fists
push
dec
outsb
sub
jecxz
pop
lods
aaa
jno
mov
test
xchg
pop
pop
stc
inc
and
mov
add
pop
out
adc
inc
pushf
pop
rcrl
lods
aas
push
push
scas
dec
add
xor
jp
sub
sbb
sbb
stos
fisttps
pop
mov
mov
adc
xchg
cld
pusha
shrb
test
cmpsl
insb
mov
add
hlt
test
mov
daa
mov
adc
jmp
or
cmp
and
xchg
xchg
mov
mov
xor
lock
xchg
call
jnp
push
ja
sahf
jb
iret
wbinvd
stos
clc
dec
or
fldz
pop
jg
xchg
sti
add
push
jnp
jne
cwtl
add
bound
push
pop
mov
arpl
or
scas
das
mov
cmp
lods
push
mov
cmp
pushf
pop
fdivrs
jle
xor
mov
inc
xchg
or
jno
mov
js
or
adc
pop
mov
shlb
sti
and
in
pop
cmc
stos
jnp
pop
jp
pop
pop
imul
push
aas
cmp
sub
mov
xor
std
fisubs
inc
cmp
or
jmp
sahf
and
sub
popa
nop
insb
sbb
ds
jnp
jno
stc
push
es
out
dec
in
cmp
push
test
mov
mov
fs
sub
mov
pusha
pop
out
mov
push
jecxz
pushf
fwait
cmp
lods
iret
ja
pop
jnp
or
stc
xchg
jge
pop
lods
jb
hlt
xchg
iret
cld
bound
lods
movsl
jle
push
ja
das
arpl
dec
sub
xor
fsub
fxtract
shl
push
bound
lret
scas
mov
mov
pushf
mov
fbstp
mov
lret
or
bound
stos
cmp
das
loop
enter
lea
jge
aaa
mov
popl
lds
testb
ret
arpl
das
subw
mov
loop
jmp
pop
sbb
mov
int3
jp
mov
sbbb
les
loopne
cmp
pop
jb
push
test
jl
or
mov
or
pusha
sarl
adc
fmuls
cltd
xchg
pop
nop
mov
push
pop
mov
shl
divl
cltd
movsl
aam
mov
mov
pop
xorl
inc
sbb
addr16
or
mov
into
leave
insl
mov
insl
and
leave
mov
je
les
test
and
es
push
jge
pop
inc
test
sbb
pushf
in
call
imul
mov
sub
mov
outsb
jae
jne
mov
cmp
push
inc
mov
mov
inc
aad
ds
gs
mov
lods
test
pop
enter
xchg
arpl
test
cltd
sarb
loopne
mov
repz
rcrb
lds
lea
xor
rol
out
out
repz
sub
push
adc
pop
movsl
nop
loope
mov
daa
pop
sarl
in
outsl
cmpsl
inc
pop
sbb
scas
sbb
incl
mov
imul
mov
test
sbb
cwtl
fimull
stos
push
icebp
fisubrs
cmp
pop
mov
leave
mov
sahf
adc
mov
or
insl
push
or
cltd
mov
xchg
int3
movsl
xchg
mov
add
sbb
or
ror
decl
mov
xlat
mov
push
sbb
and
adc
or
nop
dec
insb
mov
push
enter
dec
jb
rcrl
xor
mov
sbb
and
dec
cmp
sbb
das
pop
popa
mov
jecxz
lds
xchg
insb
sub
push
std
or
sarb
inc
inc
push
sub
cs
cld
sti
mov
and
lahf
rcll
pushf
mov
movsb
call
mov
mov
dec
cmp
push
pop
fmuls
mov
adc
cs
xchg
lcall
lahf
pop
hlt
inc
out
push
and
jae
cld
mov
mov
clc
scas
xor
rcrb
add
test
push
rcrl
fwait
stos
mov
add
pop
jle
push
shrb
add
outsb
add
push
xchg
popa
inc
js
inc
ss
fcoms
fucomip
cli
das
and
addr16
fildl
add
fimuls
dec
cmp
int3
std
dec
adc
xchg
outsb
sub
lret
addr16
ljmp
ret
clc
rorb
jne
shll
dec
sti
call
push
outsl
and
rolb
xchg
push
inc
add
push
dec
insl
cmp
rorl
mov
fbstp
inc
mov
negl
mov
fdivl
and
inc
pushf
movsl
add
ja
push
repnz
mov
sub
int
or
push
leave
and
fwait
and
stc
leave
insb
and
lock
push
adc
lods
push
mov
cmpsb
dec
adc
aad
push
iret
mov
mov
pop
lahf
push
add
mov
pop
mov
arpl
aas
ret
mov
movsb
orb
into
sahf
mov
jge
xchg
enter
rcll
lahf
mov
cmp
lahf
push
hlt
and
pop
cmpsl
mull
dec
in
mov
pop
sbbl
cld
test
outsb
sbb
sarl
xchg
xlat
jg
cmp
les
xor
loopne
test
xchg
mov
mov
inc
int3
insl
std
in
adc
imul
lcall
sahf
adc
pop
sub
mov
into
inc
out
fstpl
adc
lcall
out
fwait
pop
push
test
pop
sbb
push
adc
lods
xchg
and
dec
push
dec
jge
dec
push
out
or
lods
dec
sbb
xchg
jp
push
mov
cld
in
inc
scas
clc
mov
mov
xor
fidivrl
push
ds
imul
mov
mov
jne
adc
mov
aam
aad
daa
push
jl
shl
dec
ss
dec
mov
xchg
adc
push
cmp
sbb
mov
push
rclb
xlat
ja
ds
test
sbb
shlb
inc
pop
mov
sbb
ja
iret
call
inc
add
pop
outsb
out
pop
pop
sbb
outsl
push
cltd
ljmp
mov
fmul
dec
lcall
shl
lcall
xor
nop
push
mov
stc
push
dec
das
arpl
stos
fdivs
adc
nop
hlt
adc
push
dec
int
mov
in
je
sbb
xchg
test
mov
xlat
push
out
outsl
ret
gs
mov
ret
js
imul
cwtl
and
add
jmp
pop
clc
fstpl
dec
sbb
aam
add
mov
mov
les
icebp
stos
leave
gs
or
lret
inc
ljmp
dec
iret
push
jb
push
jle
add
cmp
and
hlt
out
inc
xchg
add
sti
jo
mov
sbb
mov
mov
dec
push
xchg
xlat
adc
mov
xchg
cmp
or
in
loop
sbb
adc
je
inc
ret
lods
in
adc
xchg
dec
repz
or
enter
sbb
lods
xchg
push
imul
sub
addr16
aas
xlat
mov
lret
or
and
scas
xor
les
push
into
cmpsl
cmpsl
xchg
repnz
scas
push
in
and
or
loopne
mov
test
or
pop
inc
sbb
add
jmp
cmc
jl
mov
or
sub
ja
cmpsl
sahf
leave
pop
jp
inc
sub
cmpsl
jecxz
popa
push
push
popf
push
rol
add
or
mov
ret
mov
bnd
fcoms
inc
jnp
mov
lcall
jbe
outsl
fadds
out
cmp
in
add
test
scas
sbb
outsb
jnp
add
jg
cmp
pop
in
mov
lret
aad
mov
pop
aad
sbb
pop
pop
lret
rcll
push
in
sbbb
addb
push
pop
pop
cmp
push
mov
rcr
enter
inc
jae
and
in
subl
jae
mull
in
es
xchg
stos
push
adc
push
inc
mov
rcl
push
clc
jo
fistpll
sahf
lods
ljmp
sbb
push
daa
call
and
push
xor
cld
lret
sub
scas
clc
sbb
pushf
jns
lods
add
je
sbb
sub
jbe
pushf
sbb
lds
out
daa
jmp
adcb
shll
cmc
loop
je
aaa
mov
sub
push
and
mov
je
filds
scas
es
jg
xchg
cmpsl
xchg
not
out
iret
ss
insl
and
pop
dec
movsl
jns
mulb
mov
push
push
ror
pop
mov
paddq
test
adc
push
mov
nop
inc
sub
pusha
and
mov
mov
je
movsb
xlat
test
sub
loope
mov
jno
repz
pop
pop
dec
add
into
pop
out
add
movsb
and
pop
inc
push
sub
and
fs
out
inc
addr16
xor
cmp
mov
inc
fldcw
daa
jns
mov
lea
movsl
sub
fcoml
jae
js
scas
outsl
mov
into
loope
xchg
fldl
jp
out
or
adc
sub
adc
mov
shrl
stos
lds
ljmp
inc
push
push
inc
xchg
cmpsl
cmp
xor
inc
dec
sub
mov
ffree
and
xchg
fisttpll
and
xor
loop
imul
push
ficoms
lods
xchg
or
gs
mov
ficoml
sbb
jecxz
dec
ret
loop
imul
jg
mov
xchg
outsb
cltd
and
adc
out
mov
clc
ljmp
rclb
fdivrl
das
or
idivl
dec
pop
cmp
and
std
mov
mov
cmpsb
dec
iret
orl
lahf
cmp
aas
dec
sub
and
aas
mov
jnp
imul
loopne
hlt
sub
xchg
test
fwait
ss
mov
subb
cmp
repz
or
mov
dec
pop
ret
jmp
sbb
popf
xchg
cmp
roll
mov
repz
cmp
mul
ss
jne
mov
mov
dec
stos
dec
ror
sbbl
fcmovnbe
xchg
add
jl
std
fisttpl
mov
xchg
inc
xor
lcall
fimuls
sub
in
mov
mov
cmpl
push
sub
in
leave
and
or
stos
and
add
pop
pop
loop
xor
jp
mov
ljmp
xor
cmp
mov
mov
xchg
cli
icebp
push
or
xchg
arpl
mov
movsl
sub
loopne
push
outsb
ja
dec
push
or
push
pushf
pusha
shll
test
inc
int3
mov
inc
xchg
push
xor
push
or
push
lds
push
and
scas
lock
add
mov
gs
lods
mov
cmpb
sbb
mov
cmp
pusha
push
mov
popf
out
scas
cs
pop
mov
ljmp
push
cs
imul
mov
jp
dec
aas
pop
inc
cmp
imul
movsl
xchg
stc
mov
push
push
cs
xchg
shll
mov
or
jnp
push
test
mov
ret
mov
testl
jno
mov
mov
loop
mov
xchg
in
and
cmp
pusha
loope
popf
shl
adc
cmpsl
repnz
xor
fptan
arpl
into
sub
dec
push
lock
aad
test
sbb
push
adc
cmpl
scas
loope
sbbb
pop
fdivrs
icebp
inc
push
out
push
fldcw
lods
jp
and
push
cld
xor
loopne
adc
roll
push
punpckhbw
jno
sub
push
and
movb
push
adc
and
jbe
mov
fistpl
pop
pop
out
sub
push
add
lods
es
and
inc
lock
shll
popf
xorb
fs
dec
push
lcall
loope,pn
lahf
mov
ss
movsb
outsl
sub
sbb
mov
add
popa
xor
out
mov
jecxz
std
mov
test
pop
sbb
add
cmp
leave
outsb
xchg
jnp
lret
add
cwtl
inc
and
stc
mov
inc
das
jmp
dec
pop
sti
pop
insl
cmp
hlt
jg
js
jecxz
faddl
into
dec
and
inc
iret
repz
imul
cli
xchg
addr16
cmp
mov
rorb
es
inc
mov
jns
adcl
jbe
xor
mov
mov
sbb
outsl
imul
js
mov
shr
imul
ret
popa
insl
iret
jno
daa
mov
popf
scas
adc
mov
xchg
dec
or
call
and
out
shrl
and
aam
inc
gs
jle
xlat
and
xorb
cli
xchg
add
xor
push
inc
leave
fld1
mov
jno
push
push
popa
fnstenv
in
js
orl
mov
inc
mov
loopne
mov
rcr
sub
loop
sub
or
xchg
cltd
cmp
dec
dec
aad
js
jne
dec
sbbl
and
xchg
or
jo
add
pop
movsl
mov
inc
cwtl
cmpsl
inc
scas
leave
dec
push
cwtl
jno
mov
jo
rorb
xchg
js
pop
imul
pop
xchg
jg
mov
jle
or
rolb
sub
mov
fs
mov
inc
push
pop
push
sub
push
out
cmp
test
add
pop
push
popf
dec
push
aam
inc
dec
mov
lods
push
les
mov
cmc
xor
test
pop
adc
shrl
sbb
dec
xchg
enter
scas
addr16
lods
dec
lock
and
adc
icebp
push
push
not
rolb
rclb
or
cld
cmpsl
or
inc
mov
or
fwait
inc
notl
call
jl
hlt
add
push
cli
repz
push
jmp
leave
pop
sbb
xchg
sbb
ret
lcall
adc
lods
mov
fs
jmp
stc
cmp
push
xchg
les
je
pop
aaa
push
mov
pop
sahf
push
jg
adc
inc
dec
shll
fwait
aam
xor
leave
dec
ds
int3
inc
jge
insb
xchg
adc
jmp
mov
shll
push
cld
addb
ja
pop
pushl
jecxz
adc
pop
xor
mov
pop
pop
and
xchg
sbb
sub
ja
stc
insl
and
ds
mov
fwait
movsl
sbb
dec
lahf
fwait
mov
push
inc
test
sub
movsl
xor
scas
xchg
sub
aad
pop
fisttpl
ds
fidivs
jmp
shlb
ja
jmp
sub
inc
and
mov
cmp
ds
push
std
add
lods
and
clc
out
ljmp
add
mov
jle
into
push
adc
push
and
rcll
or
adc
and
xor
stos
mov
mov
stos
inc
mov
pop
dec
popa
xchg
sub
xchg
adc
adc
xor
call
fstl
out
imul
outsl
inc
sahf
add
xor
loop
push
imul
ret
leave
int
mov
adc
mov
inc
clc
push
mov
cmpsl
fsubrl
mov
push
out
mov
pop
inc
adc
cmc
dec
out
in
sbb
pop
icebp
push
and
negb
mov
dec
test
into
fadd
frstor
clc
push
xchg
mov
dec
in
jle
pop
data16
imul
mov
or
out
inc
jno
fwait
test
xor
add
aaa
mov
fidivl
gs
stos
mov
jno
mov
fbld
jb
jecxz
sti
xor
jbe
push
enter
testl
cltd
nop
call
xchg
jg
clc
add
cmp
rcl
addr16
sbb
dec
inc
jl
push
test
sub
fcompl
ret
pushf
popa
jle
pop
xor
lods
fisubl
sbb
xchg
mov
cs
xchg
xchg
mov
mov
lcall
or
or
cmc
push
sahf
push
or
fmul
push
jo
and
jmp
mov
pop
repnz
insb
addb
dec
adc
ret
pop
loop
les
hlt
inc
pop
ror
pop
rcrl
push
out
mov
dec
sub
aad
sbb
test
insb
sub
xchg
xor
aad
bound
shll
jb
sbb
cmp
xor
scas
lret
aaa
mov
dec
pop
fildll
clc
js
xchg
pop
in
stc
jne
fildl
and
dec
jo
test
stc
push
fcompl
adc
or
jb
pop
cmp
inc
loop
mov
sub
push
rol
leave
bound
push
shll
rcr
push
lds
or
or
add
xlat
dec
rcl
aas
into
fdivl
xchg
jno
in
jns
dec
idivb
clc
adc
push
aas
ljmp
shr
mov
push
inc
mov
add
lock
fidivrs
leave
mov
pop
pop
xor
dec
cli
jl
cmp
adc
mov
inc
jle
or
xchg
add
or
push
lret
add
inc
bound
sbbb
and
xorl
loopne
outsl
fisttpl
inc
xor
enter
fadds
pop
and
add
and
test
xor
jl
imul
negb
mov
mov
xchg
loopne
dec
cmp
ret
in
mov
pusha
lds
jecxz
mov
loope
cld
clc
test
jecxz
ret
icebp
push
and
call
pop
aam
lret
push
loopne
stos
lock
sbbb
ret
cmp
push
mov
xchg
movsb
sub
in
add
jo
jmp
repz
out
fwait
cld
jns
xor
push
jp
adc
pcmpgtb
mov
int3
mov
cmp
test
cmp
pop
popf
mov
imul
mov
das
sub
fsts
jl
out
dec
jecxz
pop
dec
sub
dec
jne
cli
lret
jg
jle
push
or
push
mov
dec
stos
push
and
divb
roll
stos
int3
hlt
clc
push
mov
stos
sbb
pop
and
or
mov
jge
fcmovnbe
xor
xor
mov
daa
mov
inc
out
testb
mov
add
imul
sbb
pop
stos
sub
pop
add
shrb
fs
insl
mov
jbe
jb
adcl
mov
mov
cmp
xlat
mov
sahf
lock
js
loope
xchg
pushf
cmp
push
mov
mov
cld
addb
negb
lock
insb
xlat
cwtl
bound
xchg
fistpll
xlat
pop
into
cwtl
enter
inc
sbb
cli
adc
out
dec
push
adc
mov
jb
cmpsb
pop
sbbl
pop
mov
insb
push
xchg
mov
addr16
mov
test
push
hlt
jae
xor
lods
jle
mov
xchg
out
mov
inc
and
fs
std
pop
je
or
int3
jl
cwtl
mov
cld
dec
rol
jmp
xor
jge
dec
es
cmp
jecxz
hlt
aas
xor
rclb
add
add
xor
fisubs
test
popf
roll
jmp
int3
outsl
sub
lods
mov
sub
mov
xchg
sbb
sbb
lods
movsl
push
or
add
in
jo
std
stos
call
sbbl
ljmp
mov
cmpl
lea
push
cmpl
cld
arpl
movsb
bound
push
mov
and
shrl
cli
xchg
ret
lds
sub
dec
clc
mov
shll
dec
sbb
mov
les
push
adc
jns
idivl
mov
mov
add
or
fcoms
xchg
push
or
inc
xchg
lret
mov
fs
pop
in
out
pop
test
xchg
xchg
hlt
xchg
faddp
fsubrs
pop
sub
sub
mov
mov
mov
xor
pop
insl
ffree
rcll
rolb
adc
mov
xchg
dec
loope
cmpsb
mov
aam
inc
mov
dec
clc
psubb
ds
rclb
mov
shll
out
sahf
pop
das
and
push
bound
mov
ss
enter
dec
sahf
imul
outsb
aad
stc
aaa
mov
sbb
jg
xchg
jl
add
mov
leave
shlb
cmp
aaa
ficompl
adc
js
push
jb
jbe
push
outsl
cmp
push
xor
pop
xchg
data16
sub
nop
mov
jmp
xchg
repnz
sbb
cmp
inc
or
mov
fldcw
sbb
ss
lcall
cmp
mov
pushf
jp
stos
fiaddl
inc
iret
sub
mov
sub
jbe
jmp
add
cs
or
cmp
or
mov
aas
xchg
loop
xor
rcll
ds
out
lds
xchg
xor
push
xchg
dec
outsl
mov
in
pop
xor
stos
sub
sbb
push
and
xor
mov
sbb
shlb
sbb
adc
lea
aaa
stos
mov
sub
or
cmp
hlt
cwtl
xor
cli
mov
scas
mov
popf
lcall
je
call
mov
lds
mov
sarb
inc
lods
push
stos
pop
and
push
fstps
add
addr16
stos
inc
mov
sub
jecxz
xchg
in
mov
adc
lcall
insl
fistpl
add
ret
and
xchg
xchg
inc
lods
stos
mov
sbb
daa
je
inc
fildl
and
jle
cmp
sbb
int
sahf
stos
mov
mov
inc
mov
jnp
add
lret
jl
cmp
dec
cmpsb
push
bound
inc
xor
lds
push
inc
stos
add
xor
ja
jb
add
js
pop
mov
cwtl
aam
in
nop
xor
loop
mov
fildll
cmp
dec
les
dec
mov
push
xchg
test
and
mov
popa
and
xor
pop
cmp
movsl
fldt
mov
ja
cltd
fnstenv
jbe
lcall
bound
sub
push
scas
xchg
inc
sbbl
mov
iret
rorl
enter
inc
push
mov
pop
leave
push
jae
aad
fistps
adc
out
hlt
mov
xchg
rcl
or
movsl
and
dec
sub
xchg
inc
pop
int3
or
mov
sarl
rclb
sbb
pop
popf
sbb
cmp
pop
stos
testl
adc
dec
jmp
std
cmp
cmp
js
push
mov
addr16
jg
repnz
mov
cltd
push
cmc
pop
sub
arpl
sbb
gs
cld
push
bound
cltd
or
out
fcmove
push
xchg
xor
movsb
mov
out
jg
push
push
ret
loope
mov
mov
testb
ljmp
popf
fstl
dec
push
outsb
call
fstps
push
aaa
adc
test
fucom
sbb
mov
xchg
fwait
ja
cmp
inc
nop
lea
enter
push
in
push
dec
mov
push
pop
cwtl
cld
jae
mov
xor
mov
or
cmp
jne
cwtl
fsts
dec
mov
fs
or
inc
xor
test
cmp
stos
lret
icebp
or
add
and
fcoml
in
xor
add
popa
movsb
and
pop
popa
out
xlat
int3
stos
xchg
mov
mov
mov
and
mov
pop
xchg
cmp
frstor
movsl
shr
inc
lds
gs
jne
enter
cmp
cwtl
xchg
sarb
cmpsb
mov
mov
data16
inc
sub
imul
adc
mov
pop
jg
push
adc
je
mov
sbb
lods
xlat
js
sub
jno
jbe
mov
popf
inc
mov
xor
inc
pop
clc
fnsave
incl
ret
aad
dec
std
gs
mov
aaa
dec
mov
sahf
adc
shlb
inc
mov
ret
push
xlat
daa
add
daa
das
imul
push
enter
push
mov
or
hlt
in
fcom
imul
loopne
cmp
push
cli
cmp
cmp
xchg
sahf
cmc
into
in
add
pop
jne
jo
rol
fwait
jbe
lret
dec
repz
sbb
decb
mov
in
fs
adc
in
arpl
sti
ja
pop
in
sbb
sti
les
sbb
mov
fs
cmpsb
adcl
aad
test
mov
popf
stos
mov
jmp
repz
iret
mov
les
sbb
int
cwtl
push
sub
ss
mov
in
stos
mov
mov
xchg
jne
add
sub
cli
icebp
mov
jmp
dec
lods
rcll
sbb
cmc
sti
or
or
faddp
inc
dec
add
inc
je
xchg
js
push
pop
ja
add
pop
sahf
test
es
in
cltd
jbe
inc
cmc
or
orb
jb
adc
iret
daa
pop
dec
clc
insl
xchg
jl
icebp
jae
inc
pop
lea
sahf
test
bound
dec
stos
dec
pop
and
lcall
mov
add
cld
popa
outsb
add
scas
stc
mov
shl
fdivrs
std
mov
mov
jno
adc
xchg
dec
push
cli
add
ss
push
les
roll
popa
call
aad
sbb
sub
repnz
dec
xchg
movsl
xor
scas
inc
cmpsl
mov
inc
jns
sahf
push
mov
das
jnp
or
aas
jbe
sub
mov
aad
mov
jl
xor
jbe
out
incb
add
lahf
cmp
insl
and
pop
test
jnp
pop
jbe
loopne
xchg
nop
sbbl
hlt
mov
xor
mov
call
shlb
test
imul
pop
pop
mov
jp
fstps
push
in
push
adc
jne
pop
xchg
mov
mov
xor
xchg
aas
popf
decl
dec
es
aam
sbb
xor
mov
ja
subl
mov
es
xchg
xchg
fdiv
mov
movsb
sbb
fcmovbe
adc
xor
test
loope
cmc
pop
stc
mov
lret
adc
ss
sub
jnp
stc
mov
call
sub
enter
jl
sub
mov
negb
jp
sbb
xchg
cmpsb
test
pop
jb
rorb
pop
imull
in
sarb
push
in
pop
int3
test
in
mov
inc
in
sbb
pop
scas
rcrl
xor
sbb
popf
and
xchg
test
jmp
xor
stos
lret
sbb
and
mov
shll
data16
push
movsl
or
lret
mov
inc
xchg
sti
lret
sub
sbb
jp
inc
push
push
js
in
popf
and
out
bound
push
sbbl
arpl
xor
dec
daa
js
in
cld
mov
jl
dec
out
xchg
add
add
out
fs
jmp
es
lahf
mov
jl
inc
xchg
adc
dec
scas
nop
aam
adc
fidivrs
sahf
mov
pop
movsb
xlat
mov
mov
mov
mov
jae
sbb
jg
ljmp
mov
inc
dec
dec
pop
pop
cwtl
xlat
sti
jae
xor
adc
xchg
nop
popf
stos
sub
xlat
rep
adc
or
arpl
out
mov
loope
hlt
push
std
stos
or
and
fs
mov
adc
push
daa
mov
and
sbb
mov
arpl
push
mov
sub
scas
xor
repz
jp
and
in
add
sbb
lods
xchg
cltd
sbb
sbb
mov
sbb
int3
inc
push
add
push
decb
jl
mov
sub
cmp
dec
push
rorl
mov
sub
push
mov
hlt
jp
jle
dec
fwait
or
mov
jmp
sbb
cld
aam
test
lds
add
inc
ljmp
inc
test
sti
rcrb
mov
adc
lock
mov
xchg
and
bound
subb
cmc
test
out
shrb
inc
cld
pop
push
mov
cmp
pusha
sbb
les
mov
pop
sbb
pusha
incb
adc
xlat
mov
in
aad
pop
ret
sbb
or
ret
xchg
call
pop
add
fxch
adc
lret
ljmp
addl
movsl
sbb
jae
out
out
test
adc
cmp
test
arpl
cmp
rcl
xor
lock
inc
das
add
jp
jle
test
cmp
aas
mov
inc
lret
jnp
rorb
loop
lea
movsl
xchg
jo
mov
es
or
shll
mov
dec
pop
add
jbe
xchg
cwtl
push
or
mov
push
mov
sbb
jb
mov
sub
jle
adc
pop
push
popa
mov
faddl
or
xor
repnz
daa
test
enter
push
pusha
jno
inc
mov
scas
ds
testb
adc
outsl
jns
das
cmp
or
fstpl
sahf
mov
cmc
cli
cmp
add
push
push
ret
test
in
je
cmp
cmp
sahf
cmp
scas
adc
push
je
xor
xorb
inc
or
xchg
int3
popf
shrb
jge
dec
inc
mov
pop
loopne
pop
sub
ljmp
mov
add
xor
js
fcoms
mov
mov
pop
fists
jnp
mov
lret
push
mov
xchg
xchg
mov
jle
xor
cmp
jmp
push
flds
mov
pop
add
jmp
pop
jns,pt
push
movsb
xchg
test
adc
movswl
add
sbb
cmp
cmpsl
test
loop
sarl
cmp
into
stos
jne
sub
sub
arpl
cmpl
fildl
dec
push
lret
popa
ds
push
into
ss
rcr
adc
push
push
mov
sbbl
lea
cmp
sub
cmp
adc
ja
inc
sti
pop
gs
ds
pushf
pop
push
shrb
out
repnz
push
inc
lcall
mov
push
push
scas
scas
sti
jno
loop
and
adc
pop
lock
mov
fnsave
cwtl
das
out
dec
ja
aaa
rcll
xchg
int3
jge
jle
mov
jecxz
cld
jae
add
mov
lods
enter
test
mov
nop
push
xor
cmpsb
add
shlb
push
adc
xchg
push
sbb
push
popa
test
jmp
test
adcl
into
rcrl
xor
test
add
mov
add
xchg
cwtl
in
mov
push
lret
xor
mov
adc
mov
mov
fmuls
daa
sbb
push
mov
inc
xchg
int3
in
mov
add
lods
mov
loopne
xchg
dec
pushf
xor
jecxz
addr16
jb
fidivl
mov
sub
repnz
pusha
jge
mov
mov
aaa
pop
jg
dec
lds
shrb
sbb
inc
mov
shll
in
test
adc
mov
push
inc
lods
xor
enter
mov
movsl
bound
mov
sbb
cmc
mov
pushf
dec
ljmp
ljmp
loopne
jp
pop
aad
push
push
fld1
ljmp
test
clc
xlat
std
push
out
jo
sub
adc
and
js
jmp
adc
dec
add
inc
inc
sbb
ret
call
inc
add
mov
aas
push
stos
push
leave
push
inc
xlat
scas
mov
dec
sbb
xchg
cmp
inc
int
xor
xchg
push
loopne
insl
mov
or
add
int3
dec
std
int3
xor
or
sbb
mov
outsl
and
popf
and
push
inc
fsubrs
loopne
or
inc
fisubrs
xorb
sbb
pop
pop
xor
sub
das
dec
je
inc
sub
mov
inc
jo
or
repz
sub
sbb
test
loope
pop
add
adc
shlb
jl
or
sub
pop
pop
lcall
jecxz
enter
je
xchg
cmc
shll
out
loope
out
mov
mov
sahf
cmc
popa
jle
orb
push
js
imul
cmp
and
pop
cli
es
xor
pop
sub
xchg
pop
test
xchg
mov
inc
xor
push
out
pop
jnp
daa
mov
negl
lods
daa
pusha
xchg
xchg
dec
add
mov
or
pushf
inc
jecxz
cmpsb
push
inc
test
test
ret
xchg
mov
mov
test
movsb
xorb
leave
fwait
adc
and
inc
sub
lods
cmp
frstor
sub
dec
and
mov
xchg
pop
adc
adc
fimull
mov
mov
add
shrb
mov
mov
cmpsl
sbb
xchg
inc
lods
shl
imul
lcall
mov
dec
jecxz
rorl
test
mov
xchg
dec
cmpsb
scas
adc
jne
jl
xor
lahf
mov
ljmp
loopne
sub
in
or
sub
psubw
outsb
ja
cli
ss
loopne
je
inc
mov
sub
adc
add
mov
jns
popa
sub
jle
sub
ja
mov
fldenv
lea
cmp
cmp
sbb
jl
xor
cmpsl
push
iret
sbb
pop
ret
fldl
and
pop
pop
mov
scas
out
cpuid
lods
jle
cmp
xchg
pop
mov
scas
outsb
bound
add
add
xchg
dec
cmp
int
imul
lds
insb
lret
outsb
cltd
out
test
lahf
lcall
jl
xlat
popf
shlb
leave
scas
pop
ss
sbb
scas
cmp
sbb
repnz
inc
jb
out
and
mov
loope
dec
push
mov
dec
dec
inc
cmpsb
inc
inc
pop
jno
xchg
lea
or
in
into
imul
and
mov
imul
or
adc
int3
std
xchg
out
stos
aad
add
rorb
sub
adc
stos
jne
cmp
push
insb
outsl
das
sbb
fistpll
pop
clc
shlb
push
lea
icebp
lret
icebp
dec
dec
inc
sbbl
lods
jbe
repnz
pop
cmp
dec
in
add
mov
imull
pop
inc
lods
aam
sub
pushf
xchg
insl
mov
dec
fisttpl
or
in
nop
ljmp
das
inc
xor
imul
ljmp
mov
or
dec
rorl
add
xor
xchg
dec
adc
lea
jae
addb
add
push
lahf
add
mov
add
insb
pop
mov
inc
negb
mov
and
lds
cwtl
seta
les
aaa
inc
and
or
mov
pop
mov
push
cmp
xor
mov
push
xchg
aad
pop
jo
in
pop
aam
clc
jo
push
cld
jmp
enter
shll
in
shrb
movsb
cmc
mov
dec
push
das
rcl
repz
mov
mov
or
ljmp
aas
out
fs
mov
les
mov
test
mov
pandn
and
xor
lea
mov
sub
push
fsubs
xchg
or
sbb
ror
js
aam
dec
aam
mov
mov
or
cltd
jge
lds
or
notl
addr16
call
lcall
lahf
iret
add
dec
add
pushf
cmp
sub
sti
int
add
jns
xchg
jo
adc
add
jnp
ds
mov
sti
andl
push
lods
sub
movsl
loop
stos
xchg
jne
ja
add
sbb
mov
or
pop
insl
jecxz
dec
sti
push
les
push
mov
mov
es
mov
dec
sub
cmp
sub
mov
push
or
xchg
cmpsl
fs
data16
jg
leave
xchg
daa
xchg
into
push
mov
out
xor
push
xchg
icebp
sbb
insb
xor
jae
and
pusha
sbb
ret
and
dec
icebp
aad
mov
lods
mov
stos
fwait
lods
add
xchg
dec
pop
inc
mov
mov
mov
dec
les
dec
fiadds
test
jle
lret
push
cmp
mov
fldcw
inc
push
rcrl
cmpl
push
repz
js
pop
jmp
notb
ret
lods
insl
adc
lret
iret
gs
push
xchg
push
xchg
adc
shrb
popa
pop
sub
sub
or
pop
xlat
or
imul
sub
or
jns
pop
mov
jne
cmp
mov
add
pop
adcb
add
les
jno
int3
outsb
xchg
xchg
out
test
push
mov
and
mov
cmpsb
pop
adc
inc
nop
push
bound
jns
jmp
dec
push
xlat
lea
xchg
push
cmpsb
xchg
cs
pushf
push
and
mov
push
sbb
mov
movsl
fisubl
jle
cmc
aas
adc
cmp
test
mov
lods
shl
dec
rolb
aaa
cli
mov
xchg
pop
sbb
mov
pop
mov
in
adcb
pop
adc
out
dec
stos
inc
lcall
lea
xchg
insb
popa
pop
cmc
fwait
sub
divb
into
std
and
out
add
adc
iret
pop
cmp
add
push
movsb
std
jle
nop
sub
or
xor
mov
jle
leave
ds
xor
mov
xor
or
divl
aas
cmp
imul
sbb
xor
xchg
cmpsl
xor
into
pop
dec
inc
sub
cmp
push
mov
addr16
sub
out
sbb
mov
jmp
dec
adc
inc
in
jae
inc
pop
add
and
push
dec
stos
lods
mov
mov
fildl
xor
and
testb
sub
jne
inc
push
xchg
jle
stos
lods
mov
xor
cmp
sbb
mov
loop
movsb
sub
cmpsb
test
xchg
mull
xchg
in
ljmp
mov
cmovg
in
or
ds
rorl
sub
jbe
mov
and
int
negl
cmp
jecxz
imul
xlat
cmpsb
or
mov
adc
jno
inc
mov
adc
mov
pushf
out
mov
pop
pop
mov
add
out
adc
mov
cli
sub
clc
mov
dec
gs
in
pushf
insl
int
icebp
test
add
mov
push
jae
inc
dec
fildl
push
pop
fwait
aam
fldl
sub
push
sbb
cmc
adc
aas
xchg
sub
pop
icebp
or
inc
hlt
sahf
mov
jge
into
fnstsw
mov
repz
loope
and
push
add
ds
cmpsb
outsl
jae
jo
cmp
dec
lret
fsubrp
stos
test
inc
fstl
cmpb
cli
add
sbb
aas
and
in
pop
in
lods
mov
dec
jmp
scas
push
cmpsl
xchg
insb
pop
xor
push
lods
mov
pop
sub
test
adc
lock
xor
xchg
in
jno
xorl
jmp
in
test
fsubs
jae
mov
enter
int
ficoml
sar
jo
iret
xor
push
xlat
stos
sbb
lea
ljmp
addr16
add
and
and
pop
ficoms
lret
fsubrl
xchg
add
mov
insl
mov
dec
ret
add
push
mov
or
xchg
mov
aas
out
cmp
jle
divb
js
sbb
mov
jbe
addr16
push
sbb
mov
dec
xchg
cmp
sarb
xchg
sbb
int
or
cs
adcl
mov
insl
bound
in
pop
xsha256
cmpsb
ret
push
pop
xchg
addr16
dec
pop
pop
popa
pop
cmp
ljmp
add
lret
ret
add
add
loopne
loopne
xor
xlat
into
dec
das
jle
dec
mov
add
jecxz
cmp
jne
push
jp
in
cltd
cmc
sbb
in
push
in
add
xchg
stos
bound
pop
push
push
sbb
es
mov
sbb
aaa
cld
inc
lds
in
xchg
jmp
push
cwtl
mov
fdivr
xchg
out
test
out
popf
outsl
dec
xchg
gs
orl
test
in
ljmp
xchg
and
jnp
mov
inc
ja
mov
add
pop
mov
pop
dec
out
mov
outsb
mov
repnz
ljmp
jecxz
cwtl
dec
sbb
adc
repz
cltd
leave
repnz
fldenv
mov
bound
imul
adc
popf
adc
mov
ja
sbb
fwait
cwtl
aaa
add
fistl
test
gs
std
mov
cmp
lock
sbb
idiv
adc
lea
or
call
pushf
push
cmc
push
sti
inc
cmp
pop
fmuls
dec
mov
push
cmp
push
or
dec
mov
fidivrl
sbb
enter
dec
int3
mov
loop
push
inc
loopne
add
gs
mov
mov
mov
ja
dec
mov
mov
jl,pn
jb
aam
add
loope
dec
mov
sar
aad
push
jb
push
jg
mov
aam
dec
pop
sbb
outsb
enter
push
lods
leave
or
das
std
adc
add
aas
lods
cmp
xor
inc
mov
dec
push
inc
ss
sub
xor
dec
pusha
jbe
fidivrl
xchg
xor
jg
fisubs
psllw
es
add
mov
nop
js
ljmp
mov
clc
xchg
sbb
inc
add
addr16
pshufw
jbe
cmpsb
adc
add
sbb
std
aad
andl
adc
and
inc
inc
mov
and
enter
ss
ficompl
cmp
sahf
test
lret
enter
dec
pop
popf
add
andl
lock
fucomi
ja
stc
lods
or
mov
cltd
jne
repz
cmpsb
das
pop
or
mov
add
jae
adc
xchg
or
push
cwtl
and
add
sub
push
adc
stc
insl
mov
xor
push
inc
mov
and
ret
jno
xchg
sbb
out
push
adc
movntps
out
or
fdivs
ja
mov
jmp
fdivrs
addr16
out
cmp
shrl
aam
sbb
adc
adc
hlt
cmpb
lods
mov
daa
jo
cwtl
xor
gs
shrb
or
pop
dec
mov
test
ja
mov
rolb
in
and
dec
push
stos
xchg
repz
test
sub
dec
iret
xlat
mov
push
push
mov
inc
sbb
je
rcrb
aaa
or
cmp
xor
lods
or
dec
pop
add
mov
in
cwtl
adc
andl
out
or
testl
test
adc
jg
sbb
test
cmp
cmc
lret
mov
and
xchg
add
add
mov
cli
lods
test
mov
dec
jmp
stc
pop
mov
mov
dec
pop
cmp
xorl
cld
scas
pop
push
dec
fistps
xor
fwait
dec
push
inc
cmp
out
push
imul
xchg
in
dec
xorl
lcall
mov
call
jmp
ljmp
mov
ja
xor
shlb
xchg
and
xchg
or
add
xlat
hlt
rolb
jns
rolb
jl,pt
fistpl
push
sub
mov
sub
out
mov
push
daa
sar
sbb
xor
sbb
mov
sub
mov
gs
pushf
repz
pop
xlat
ja
jg
arpl
mov
pop
mov
scas
adc
bound
scas
imul
sub
ljmp
xchg
dec
cmp
add
mov
mov
mov
mov
dec
mov
movsl
cltd
inc
dec
sub
das
call
enter
mov
test
pop
push
mov
add
ljmp
dec
mov
pushf
push
or
pop
pop
rorl
das
dec
imul
pop
push
pop
adc
cmpl
cmpsb
push
xchg
cmp
jg
mov
rolb
push
pop
push
test
arpl
pop
gs
xor
lods
mov
pop
or
mov
lea
pop
arpl
dec
shr
mov
mov
js,pt
addb
out
cmpsb
fistpl
jecxz
mov
mov
sbb
outsl
loope
mov
mov
ret
jle
jg
cmpsb
sub
push
sub
sub
nop
sahf
mov
aaa
lock
mov
jo
nop
mov
imul
shll
je
jbe
dec
arpl
pop
sbb
bound
in
out
sahf
xchg
and
pop
sub
decb
sbb
or
dec
fisttps
inc
jp
repnz
aaa
push
pop
push
fisubrs
outsb
stos
cwtl
sbb
movsb
push
fsts
leave
mov
test
icebp
mov
inc
in
add
sahf
mov
ljmp
mov
lods
dec
scas
stc
dec
lret
aam
mov
aaa
mov
xor
inc
dec
and
mov
mov
lret
test
cmp
xchg
cltd
adc
int3
jnp
fwait
iret
test
fidivl
mov
data16
les
mov
sbb
push
mov
sbb
aas
rorb
sar
outsl
orl
push
lea
sub
rolb
fisubrl
push
inc
cmp
pmaddwd
add
stc
je
pushf
add
into
lcall
fnsave
pop
addr16
sbb
fs
sub
scas
call
fisttpl
pop
das
xchg
mov
mov
loope
inc
and
pop
jne
cld
mov
cmp
imul
add
or
inc
inc
and
dec
xchg
inc
inc
sahf
jno
mov
add
mov
test
mov
lds
into
mov
jp
call
push
popa
ds
mov
mov
cmp
clc
in
mov
sti
mov
addr16
inc
lret
scas
xor
or
out
aas
scas
jge
ja
sbb
in
mov
mul
inc
mov
mov
push
repnz
stc
or
das
insb
mov
mov
jl
sbb
subl
fstps
sbb
mov
imul
pop
test
adc
mov
fcoms
stos
iret
call
rorb
mov
enter
lcall
xchg
and
sbb
pop
pop
movsl
pop
add
pop
jp
pop
lahf
aam
std
mov
xchg
or
addr16
les
pop
xchg
adc
div
jmp
sub
push
xchg
and
mov
rcll
push
cmpsl
icebp
cli
dec
and
pop
xchg
jmp
sbb
mov
sub
cmpsl
loop
jmp
jl
mov
cmp
ljmp
outsb
lahf
ret
push
add
hlt
cmpsl
mov
xor
ss
push
repz
inc
sbb
sti
aam
mov
dec
pop
enter
mov
imul
popf
lret
and
dec
adc
arpl
jb
dec
adc
add
dec
mov
arpl
popf
sysenter
rol
mov
jmp
cmp
je
jne
xor
lret
xor
pop
push
loopne
mov
imul
scas
sub
jmp
cltd
int3
mov
rcll
rorb
mov
lea
loopne
add
dec
adc
pusha
out
call
or
shrb
pop
addb
mov
shrl
outsb
inc
push
movsl
pop
lock
push
push
and
in
jge
inc
xchg
sub
shl
inc
pop
roll
jne
loopne
dec
push
pusha
xchg
mov
lock
lcall
cs
cmp
sbb
add
stos
lret
adc
or
fpatan
pop
ss
mov
mov
lods
pop
scas
dec
jp
mov
test
jp
mov
xor
cltd
add
xchg
push
ds
dec
cmc
sub
inc
push
mov
je
in
mov
sub
or
je
movsb
sub
push
xchg
dec
and
mov
in
repz
adcb
aaa
xchg
bound
mov
mov
and
sub
dec
repz
inc
addr16
push
lret
call
inc
subb
push
and
mov
or
push
jge
cwtl
rcr
outsl
mov
push
lods
insl
xchg
fdivl
add
das
in
lock
lods
test
mov
les
xchg
orb
cltd
sub
add
or
movsl
aaa
lcall
push
cmp
imul
je
jo
sbb
bound
cli
lret
inc
or
call
rcrl
jmp
cmc
add
ret
int
arpl
cwtl
lods
aad
and
push
and
jg
pop
mov
cwtl
in
rolb
mov
pop
mov
mov
hlt
push
lods
adc
jae
mov
sub
adc
ljmp
jnp
pop
addb
pop
jl
stos
lods
add
push
xchg
mov
cmpsb
icebp
jne
loop
data16
mov
lcall
dec
lods
rclb
ss
clc
jp
cli
outsl
xor
xchg
mov
and
jo
jb
aam
push
aas
pop
aaa
in
loopne
xchg
xor
insl
add
adc
sub
inc
mov
jmp
popf
stos
add
or
rorb
mov
mov
inc
add
mov
jmp
shrd
cmpsl
inc
arpl
push
pop
lods
xchg
inc
dec
jle
sbb
adc
orl
fwait
loop
adc
pop
fbld
pushf
sbb
fsubl
xchg
push
or
xchg
add
mov
adc
pop
test
icebp
faddl
call
popl
out
cmp
mov
adc
push
shr
lret
int3
sub
orb
or
xchg
mov
fs
mov
lcall
fstps
pop
bnd
mov
outsl
into
imul
or
mov
subl
int3
dec
mov
xlat
lock
sbb
sbb
cmpl
lcall
or
call
cmp
jp
mov
and
sbb
mov
xor
shl
ret
pop
lret
js
rolb
jle
push
fcos
xchg
dec
lret
cmc
inc
stos
xlat
cmp
out
outsl
adc
adc
xor
cmp
mov
push
sbb
mov
outsb
xchg
cli
sub
inc
scas
ss
dec
rcr
test
dec
push
mov
adc
into
das
jle
cmpsb
daa
xchg
ds
mov
loop
fwait
sub
xchg
fs
dec
adc
les
lock
jecxz
jbe
and
xchg
sub
inc
js
or
xlat
add
push
testb
mov
negl
add
inc
push
les
sub
nop
add
jno
mov
or
mov
mov
mov
pop
mov
lret
js
test
out
mov
or
nop
push
push
loope
mov
gs
push
outsb
or
adc
push
loope
scas
mov
jp
inc
divl
mov
addb
lcall
xchg
movsl
dec
pop
out
cmp
mov
imul
xor
pop
adc
ret
pop
jns
cwtl
xor
roll
mov
cmp
test
mov
dec
loop
mov
aad
div
clc
dec
jno
loop
dec
decl
fldenv
inc
mov
leave
dec
adc
in
xchg
int
testl
bound
fstpl
mov
stc
movsl
add
mov
inc
dec
push
sub
movsb
xchg
jle
mov
ret
cmp
out
mov
addr16
iret
je
dec
repz
pushf
mov
sub
cs
sub
jno
fucomip
aad
ret
cmpsb
sbb
sub
ret
out
pop
mov
out
decl
popa
jle
sub
jge
jg
mov
or
and
and
xchg
mov
sub
pop
rorl
fdivrp
jp
insl
mov
aam
mov
sub
push
sub
sub
pop
cmpsb
stos
arpl
and
loopnew
push
adc
xor
jg
lea
adc
int
or
jecxz
pop
add
push
mov
jp
subl
cmp
mov
xchg
aam
or
xchg
out
fistps
xchg
inc
cmp
nop
popa
inc
adc
push
fs
pop
xor
adc
xor
out
pop
cltd
add
lcall
jl
insb
icebp
dec
aas
add
dec
cmpsb
mov
cmp
mov
xchg
mov
push
mov
fnstenv
jp
loop
push
inc
out
xchg
sbb
test
mov
push
xor
dec
jmp
test
adc
fidivs
repz
out
mov
addr16
into
mov
inc
lods
jecxz
sub
mov
jne
fistl
flds
xor
dec
div
mov
idivb
es
pop
fcoml
inc
jmp
test
xorb
and
cmc
sbb
or
push
fmulp
adc
sbb
cwtl
mov
mov
mov
cld
mov
lods
aam
vpsubd
cs
jmp
divl
daa
xlat
mov
lods
sbb
lods
stos
and
in
repz
std
adc
cltd
pushf
dec
push
cs
mov
inc
xchg
into
xor
dec
into
or
jecxz
aad
std
hlt
pop
mov
into
in
jg
xchg
mov
or
push
inc
out
xchg
icebp
pop
pop
fbld
js
sbb
lcall
sbb
test
clc
aaa
mov
aam
scas
sarl
xor
xchg
sub
push
out
cmp
sahf
enter
in
mov
insl
stos
sbb
popf
mov
hlt
inc
push
out
call
cmp
movsb
cmp
mov
inc
xchg
rolb
enter
test
xchg
push
push
pop
cmpsb
test
cltd
add
rolb
jl
cmp
out
mov
lret
and
test
pop
dec
int3
push
call
mov
or
inc
in
add
sbb
shll
jnp
jo
mov
fcoml
mov
sub
cmpb
xchg
inc
add
arpl
imul
mov
gs
arpl
pop
jecxz
cmp
lcall
mov
ljmp
jl
popl
jb
or
cmpsb
decb
je
and
add
hlt
aaa
int3
push
mov
mov
mov
jp
mulb
and
lods
and
imul
adc
sub
pop
clc
pop
xchg
sub
jne
aas
das
sbb
stc
cmovno
popf
jbe
fdivr
mov
daa
ret
mov
out
test
fwait
pop
scas
and
out
and
ds
xor
jnp
push
adc
mov
jl
adc
fsts
jo
jl
sbb
mov
in
dec
pop
or
add
mov
ret
mov
mov
in
inc
jae
cmpsb
adc
in
jle
and
mov
ja
xor
and
fsubrp
fsubl
or
rclb
clc
into
push
int3
mov
js
fwait
in
out
shr
test
mov
gs
push
mov
add
int3
dec
dec
push
xlat
xor
fwait
sar
pusha
push
mov
icebp
int
mov
fwait
pop
ficoms
clc
fdivs
mov
push
fcoml
cld
xchg
sub
cmp
pop
leave
lcall
nop
aas
xchg
sub
pop
sub
mov
add
stos
cmp
lcall
jl
test
fiaddl
jmp
dec
leave
mov
add
mov
sub
mov
pop
popf
loopne
es
pop
sbbl
ds
sub
adc
into
loope
adc
lock
ror
lcall
xor
ds
lret
and
sub
jno
pop
dec
pop
mov
insl
xchg
sub
in
pop
jne
push
mov
cltd
aaa
sub
cli
and
pop
and
mov
jp
jle,pt
addr16
sar
mov
and
es
jnp
movq
sub
pop
mov
mov
movsl
sbb
xor
cmpsl
xchg
adc
lock
ds
js
dec
sbb
rorb
aas
or
mov
in
cmp
or
and
xchg
mov
cltd
cltd
cmpsl
lea
imul
cwtl
adc
cltd
sub
negl
clc
aaa
js
mov
and
mov
pop
lods
loop
lods
or
mov
cld
fstps
sti
push
mov
push
out
aam
xor
outsl
sbb
sbb
add
sarl
adc
pusha
fidivs
mov
jno
clc
scas
mov
xchg
add
sub
and
lock
aad
ja
jnp
push
fs
sti
out
test
arpl
in
cld
addr16
pop
mov
addr16
pop
in
into
jp
test
cmpsb
loop
dec
and
mov
lret
jecxz
rcrl
sbb
sbb
xlat
aas
cli
clc
pop
xor
push
nop
stos
sbb
icebp
mov
push
in
iret
and
shl
pop
xor
out
jp
arpl
out
add
mov
ret
pop
inc
inc
push
pop
sbbb
ja
into
jno
mov
pusha
fs
dec
add
lret
out
call
das
and
sub
test
xlat
inc
cmpsb
jmp
sbb
not
es
pop
mov
bound
mov
movsl
lret
inc
xchg
mov
daa
stos
jecxz
notb
push
push
aam
fcmovnb
inc
out
pushf
cli
shrb
xor
adc
iret
mov
rcrl
adc
cmc
scas
xor
in
iret
dec
in
mov
jnp
push
dec
cmp
inc
xor
push
and
lock
mov
into
mov
sti
jo
dec
sarl
ror
pop
xor
mov
scas
out
and
sub
dec
or
adc
mov
hlt
jg
scas
and
dec
jp
mov
subl
jne
xor
add
stos
out
fcoms
jmp
or
rolb
jecxz
dec
push
insb
mov
out
movsl
aam
jbe
je
dec
jge
std
xchg
fs
mov
into
inc
cwtl
push
out
stos
movsl
xchg
or
rcll
cltd
and
add
arpl
and
jl
les
sti
xacquire
hlt
xchg
mov
mov
ljmp
cmp
fisubrs
pushf
out
dec
and
dec
mov
push
mov
leave
stos
daa
out
pop
mov
mov
es
lahf
mov
imul
enter
or
inc
bound
cmp
pop
pop
add
inc
rorl
stos
dec
movsl
test
iret
aas
fbstp
ret
decl
nop
inc
add
fs
stc
int
jle
arpl
xor
call
push
mov
cltd
inc
xor
gs
repnz
pop
fcoms
inc
ljmp
mov
lods
cmpsl
gs
jmp
xor
scas
mov
push
lds
sbb
out
enter
bound
xchg
in
lahf
and
stc
and
ss
jmp
cmpsb
aad
pop
das
fwait
ret
lcall
sbb
mov
xor
enter
mov
inc
mov
aas
dec
cmp
sub
sahf
idivl
cs
jge
lret
mov
rorl
test
dec
sbb
data16
pop
sbb
or
out
cwtl
fadds
or
push
cwtl
jno
es
push
dec
ds
cmpl
pop
ljmp
loope
xor
mov
pop
sbb
sbb
add
inc
pop
in
or
xor
xchg
mov
cwtl
mov
add
cmp
loopne
pop
lds
frstor
out
shrl
test
clc
jae
ficoms
adc
cmp
jnp
je
sbb
arpl
lret
fsubs
outsl
hlt
xor
push
lcall
insb
out
pop
frstor
into
adc
cmp
cmp
adc
xorb
mov
leave
out
daa
and
and
xchg
cmpsl
or
sub
mov
add
lahf
fnsave
pop
xchg
jae
and
sub
clc
enter
xchg
lock
sbb
lret
out
adc
out
mov
in
aaa
bound
imul
xchg
call
xchg
dec
jb
lret
sub
xchg
add
mov
mov
fwait
stc
or
ret
sahf
mov
mov
pop
pop
cmp
std
arpl
sub
pop
mov
push
push
mulb
iret
loope
out
cmpsl
roll
cmpsl
or
loopne
jnp
xor
mov
pop
mov
adc
add
and
push
add
andb
push
pop
daa
daa
jg
mov
pop
and
cmp
into
lahf
adc
adcb
les
add
jae
das
das
adc
push
shrl
pusha
mov
push
inc
inc
not
cmp
xor
repnz
lods
sbb
mov
rorl
inc
inc
push
data16
sub
test
adc
add
xor
loopne
push
dec
jl
gs
fcompl
lret
cmpsb
fildll
sahf
or
repnz
adcb
sbb
outsb
jb
fsubr
mov
dec
hlt
nop
dec
cmp
jl
std
mov
and
push
nop
xor
xlat
call
cwtl
insl
dec
repz
pop
cmp
sbb
and
mov
addr16
and
inc
orl
xor
adc
dec
insl
xchg
sbb
fwait
mov
les
bound
mov
lods
push
push
stos
in
imul
lods
xlat
jge
push
lea
stos
or
sub
popa
ret
ret
push
out
or
enter
mov
lret
mov
fmul
shlb
dec
xor
jp
lea
cmp
mov
movsb
nop
out
jmp
add
jecxz
les
or
lcall
insb
lods
cltd
xchg
mov
push
sbb
mov
dec
add
fcmovnbe
mov
xchg
pop
mov
cwtl
add
test
xlat
loop
int
add
ret
dec
pop
pop
mov
aas
mov
lock
cmp
cltd
outsl
mov
cmpsl
enter
mov
inc
sbb
sub
sbb
jb
sti
and
addr16
or
sub
pop
mov
push
push
pop
and
pop
add
cmpsb
addr16
sahf
ss
pop
jbe
cmp
mov
leave
xor
loopne
loopne
jle
ss
and
push
lret
dec
sbb
xchg
xor
lock
out
in
sbb
movsb
inc
push
push
je
sbb
cmp
pop
les
adc
sbb
cli
pusha
rcrb
pushf
cmp
scas
cltd
aaa
and
dec
inc
fwait
sub
repnz
and
orl
in
lods
cli
lock
xchg
lcall
mov
test
cld
jmp
dec
aaa
stos
jecxz
jge
and
cmp
jmp
fadds
lret
sbb
mov
jb
in
mov
mov
add
js
shrl
rcll
jmp
inc
cmp
fbld
add
movsb
pop
ret
jae
mov
stos
loopne
push
aaa
mov
jecxz
out
jne
xchg
ret
and
or
mov
aad
in
xchg
adc
jb
lahf
cmp
inc
imul
shlb
sarl
es
iret
sbb
dec
mov
shl
lret
andl
xor
out
sahf
and
mov
pop
inc
or
data16
loope
push
pusha
sti
mov
int
aaa
mov
aaa
fidivrl
mov
test
dec
clc
push
add
adc
das
mov
cmc
testb
ret
inc
mov
cmp
movb
outsb
sbb
lret
add
xchg
xor
pop
adc
pop
xchg
cmp
not
sub
jmp
push
dec
sub
mov
sbb
jmp
incb
adc
lods
xchg
ret
std
xor
add
gs
lock
shlb
xchg
jae
or
mov
leave
lret
xor
or
xor
sarb
int3
leave
pop
test
ds
data16
jbe
aaa
repz
add
rcrb
iret
mov
lret
xor
push
aaa
inc
add
mov
or
push
mov
sbb
jmp
push
data16
and
jo
and
out
push
insl
xor
out
icebp
popa
dec
leave
ds
out
not
xor
stos
adcb
add
ret
inc
or
cmp
jnp
push
mov
mov
cmp
mov
int
lret
cmp
xchg
xor
push
cli
or
adc
dec
lret
cltd
cld
imul
addl
shl
repz
int3
pop
xor
inc
lods
and
cmp
add
pop
addl
xadd
dec
pusha
dec
xchg
mov
dec
lret
ret
in
lds
mov
jle
sbb
enter
pop
aad
iret
jo
sbb
mov
or
and
xchg
pop
daa
insl
enter
xchg
mov
mov
and
xchg
je
add
inc
lods
inc
and
cwtl
add
out
leave
icebp
or
jne
sbb
push
popa
aaa
mov
notb
sub
mov
push
icebp
jmp
cmp
bound
in
rcll
fsubl
andl
inc
mov
movsb
sub
mov
mov
mov
fwait
jbe
out
add
cmp
or
incb
insb
jae
roll
scas
pop
dec
and
sub
stos
gs
cmp
aad
or
aam
and
outsl
xchg
mov
sahf
insb
xchg
scas
jp
filds
fistpl
pop
jge
adc
push
sub
imul
xor
add
rorb
mov
ret
cmpsb
lea
cmp
popl
jge
insb
cmp
cs
aam
dec
fimuls
pusha
pop
sbb
adc
and
outsb
and
add
fwait
push
inc
sbb
lret
in
cmc
jle
cmpsl
xchg
sbbb
loope
popl
jne
push
in
test
adcl
rol
movsb
mov
sub
lods
add
cmpsl
inc
inc
jbe
push
in
add
adc
push
xchg
sbbl
pushf
fiaddl
add
bound
addr16
inc
leave
mov
outsl
jmp
cmc
cmp
insb
arpl
push
mov
pop
xor
mov
cmpb
aaa
iret
in
pop
sub
sbb
iret
mov
mov
pop
or
es
pop
xchg
in
jl
lret
dec
mov
and
add
jge
pop
cmc
push
in
cmp
loopne
mov
mov
daa
cmc
push
shl
lret
and
lods
lock
shrl
cltd
hlt
lods
enter
xor
sbb
sbb
sub
add
xchg
int
scas
xor
movsl
shll
sbb
mov
pop
adc
lcall
mov
fcmovne
mov
adc
popa
fisttpll
out
in
sub
idivb
mov
arpl
sbb
pop
leave
pop
jg
and
ret
psrlw
nop
clc
push
mov
cmp
fdivrl
fistl
add
cwtl
jno
mov
cmpsl
and
adc
pop
ficoms
fcomp
or
dec
cmp
jge
test
testb
mov
lret
pusha
and
mov
xchg
fildll
in
mov
aad
inc
sbb
cmp
lods
mov
jb
lcall
pop
in
mov
xchg
mov
mov
aas
xchg
stos
hlt
hlt
in
bound
cmp
repz
sbb
pusha
xchg
adc
jno
pop
subl
dec
dec
daa
xchg
and
imul
aas
jns
aaa
jb
sub
stc
xlat
imul
enter
lds
jmp
push
jg
jo
cmp
insl
or
aad
je
pusha
add
xchg
inc
sbb
cmp
or
and
out
dec
into
or
out
mov
mov
aaa
lock
daa
daa
nop
outsb
sub
fimuls
ss
pop
sbb
fcomip
inc
divb
fnstsw
incl
unpckhps
xchg
repnz
or
in
xchg
jne
es
cmp
insl
shrl
fistpll
inc
int3
leave
jno
sbb
iret
jb
mov
add
jo
sub
sar
jno
mov
jmp
pop
add
in
les
into
cmp
push
aas
mov
dec
and
sub
lea
aaa
loopne
dec
lea
pop
in
add
divl
cmp
ss
sahf
iret
cli
sub
sub
out
test
inc
jb
mov
fisubrl
insl
jl
and
xchg
stos
inc
test
stos
call
xor
and
inc
int
test
dec
jb
les
aad
out
clc
addb
int3
test
loopne
sbb
inc
out
sbb
mov
jae
mov
sbb
cld
mov
repnz
shrb
push
mov
loop
int
inc
stc
or
fisttpl
dec
dec
pop
and
fiaddl
icebp
mov
fdiv
rcrl
ret
mov
out
push
sbb
insb
xchg
mov
lea
cld
dec
fldt
push
movsb
ss
inc
and
mov
scas
xor
cmp
jnp
cmpsl
mov
es
jno
mov
roll
jb
jno
outsb
jne
and
mov
xchg
xchg
jno
jno
add
or
sbb
fidivrs
sbbl
mov
negb
decb
outsb
push
mov
shll
mov
aam
out
rolb
sbb
adc
repnz
aad
lret
out
bound
mov
jp
mov
aaa
cmp
aas
xor
xchg
je
lcall
add
xor
or
jmp
popa
icebp
jp
cmp
popf
push
cmpsl
mov
addr16
cmp
sub
dec
adc
lock
fistl
xchg
hlt
les
lret
call
push
insb
mov
arpl
cmp
jg
jmp
dec
jg
push
jno
outsb
fbld
ds
loopne
and
or
sbb
cmp
add
leave
lea
lret
int3
xchg
pop
mov
femms
and
mov
mov
mov
mov
dec
fstpt
ss
jl
inc
mov
mov
ds
pop
inc
jmp
out
or
bound
rcrl
add
mov
cmp
arpl
scas
outsl
mov
adc
jl
sub
lea
fistl
insb
lcall
fsubl
add
xchg
mov
in
nop
loop
adc
adc
inc
jns
jecxz
add
insb
insl
xor
lods
sub
and
repz
push
jnp
cmp
mov
xchg
adc
fs
adc
pop
pop
aas
repnz
jp
std
adc
sub
outsb
adc
xchg
lret
pop
test
or
cmp
mov
fnsave
mov
pop
test
cmpsl
ret
mov
mov
insb
mov
adc
jge
or
jge
fcoml
and
insb
adc
push
mov
lea
stos
in
aam
addl
outsb
out
mov
pushf
movsb
adc
dec
mov
ds
lds
fnsave
aam
push
je
jo
inc
jmp
cmpb
push
sub
inc
adc
lret
adc
jmp
adc
stc
jmp
stc
mov
mov
or
jnp
sbb
imul
pop
rcrb
lcall
mov
sahf
popa
push
pop
push
mov
mov
dec
push
inc
add
pop
and
and
jecxz
outsb
jmp
test
lahf
pop
cmp
cmp
cmc
sti
push
push
jo
call
imul
add
ja
xchg
jge
sarb
ds
pop
cmp
clc
sbb
les
idivb
cmpsb
dec
pop
es
or
xchg
cmpsb
in
scas
mov
mov
cmpsl
xchg
imul
add
mov
lock
in
loope
xchg
jle
ret
sub
int3
jo
push
or
popl
dec
jno
test
ljmp
rolb
lret
inc
mov
xchg
ret
push
aaa
loopne
scas
sub
push
cmpsb
pop
push
cmc
cmp
cwtl
push
mov
daa
jg
out
mulb
add
out
xor
movsb
cltd
push
je
sub
mov
jle
mov
rcll
inc
sub
ret
sbb
shrb
push
mov
stc
shlb
mov
mov
and
pop
gs
std
repz
adc
jge
xor
jnp
cmp
xchg
out
inc
lsl
or
addb
les
push
loop
push
and
mov
jnp
lea
add
out
add
adc
aad
jo
sub
mov
or
xchg
or
sub
hlt
ja
jb
mov
adc
test
ja
mov
cmp
xor
mov
sub
loope
xor
es
xor
or
mov
cmpsb
test
mov
pop
adc
xchg
dec
arpl
push
les
int3
data16
lock
jne
lahf
mov
cmp
mov
sti
ljmp
mov
mov
div
fnsave
fcompl
into
stos
pop
cld
popa
add
addl
mov
ret
imul
xchg
dec
lea
rcl
arpl
mov
xor
popa
roll
shll
in
sub
icebp
cmc
mov
fucomp
mov
orl
dec
pop
pop
fwait
lea
mov
ljmp
mov
fadds
orb
mov
cmc
and
dec
hlt
sub
dec
out
push
and
nop
mov
int
call
dec
or
or
outsb
mov
push
daa
fsubrl
cmp
xor
add
xor
dec
fsubrs
push
pop
push
lahf
mov
ds
sbb
jae
sti
dec
add
adc
pop
mov
sub
jne
aad
dec
jbe
adc
testl
in
push
test
outsl
dec
test
je
xor
test
dec
jp
push
cmp
cmp
inc
push
cmp
popf
in
ud1
xchg
arpl
js
push
dec
int3
pop
jno
fs
pushf
xorb
xchg
cmc
lds
xchg
cmc
lea
sub
mov
adc
or
pushf
push
outsb
mov
sahf
push
push
outsl
ret
inc
lea
mov
jb
out
xchg
mov
test
jmp
idivl
dec
js
mov
add
mov
adc
fxch
in
bnd
jl
aas
and
jae
add
lods
lahf
mov
pop
repnz
in
mov
adc
and
jecxz
lea
int3
jge
sbbb
sbb
xchg
ja
or
aaa
scas
jne
and
jae
jl
or
mov
insb
repz
stos
add
cld
mov
adc
ret
dec
mov
dec
mov
ds
sti
je
adc
outsl
push
enter
stc
adc
bnd
sti
imul
jge
out
aam
cmc
dec
icebp
push
and
fiaddl
dec
mov
hlt
adc
pop
arpl
push
xor
dec
cmp
fcmovne
loope
fists
adc
inc
in
dec
int
cmc
popf
inc
mov
pop
lock
lahf
fstp
mov
je
inc
cmp
aas
ret
inc
movsb
dec
repz
aam
imul
dec
fsubrs
fdivrs
sahf
imul
lock
cli
leave
dec
cs
dec
data16
adc
js
adc
sub
sbbl
sbb
pop
jae
aaa
popa
cmp
lret
stc
cmpb
or
cmp
out
adc
cs
jge
cmp
shl
sub
js
pop
lock
scas
cmp
dec
hlt
pusha
dec
add
ds
dec
jne
fsubr
stc
adc
les
jl
in
fstpt
push
mov
jne
inc
mov
inc
stos
into
lret
xor
pop
aaa
mov
sbb
mov
leave
push
mov
push
xchg
mov
add
add
dec
aas
loop
inc
cmc
pop
push
insl
xor
xor
jge
aas
loopne
push
enter
add
mov
aas
xor
and
ret
sub
jns
and
push
jmp
pop
les
pop
stos
mov
sub
jo
mov
inc
aas
xchg
push
es
push
ror
mov
mov
cwtl
ret
jp
lcall
mov
cld
ret
rcrb
mov
mov
or
mov
cmc
mov
add
cmc
jns
jns
std
dec
adc
and
xor
fimull
push
ret
stc
mov
iret
and
lcall
dec
sub
jnp
in
mov
mov
test
test
pop
subb
cmp
push
dec
push
pop
loopne
xchg
loop
or
shr
pop
int3
or
inc
cmpsl
int
xor
pop
rolb
dec
pop
push
ret
jno
mov
cmp
mov
in
int
pop
push
cmp
xchg
movsl
xchg
add
mov
popf
test
rcl
std
and
sysexit
aas
pop
das
add
dec
sbb
sub
icebp
pop
and
jle
pusha
int
dec
sahf
ret
jmp
test
pop
dec
jp
or
test
push
imul
xor
lcall
nop
mov
adc
or
in
sbb
imul
xchg
cmc
orl
mov
insb
pusha
or
cli
je
inc
jno
jb
mov
outsl
sbb
ss
shll
mov
lret
lock
sarl
fbstp
cmp
jle
mov
push
adc
stc
rcrl
incb
mov
aam
sbb
dec
jle
andl
enter
mov
cltd
les
lea
xor
jbe
mov
testl
mov
add
lods
sub
loope
lcall
lds
sbbl
push
ffreep
repz
ficoml
jnp
outsl
push
jno
add
lock
adc
orb
loope
mov
ss
dec
mov
or
icebp
mov
faddl
lock
das
test
orb
pop
xlat
bound
loop
pusha
push
xchg
pop
and
xor
js
cli
hlt
loop
in
push
aas
jmp
push
movsb
mov
sti
xor
in
jecxz
add
push
arpl
lock
mov
xor
push
push
ss
test
push
pop
mov
sbb
inc
leave
adc
or
inc
and
mov
add
shr
push
mov
mov
adc
jecxz
rcrb
jne
std
or
adc
push
push
lret
jmp
adc
scas
enter
test
aas
out
xor
loop
mov
inc
mov
mov
enter
mov
or
lahf
lcall
mov
fwait
lds
sbb
xchg
push
xchg
xor
mov
out
lret
jp
xchg
jmp
js
inc
push
sbb
aaa
dec
aam
movsb
or
inc
mov
fdivs
sub
add
pop
inc
add
imul
int
call
imul
mov
mov
jnp
imulb
cmp
setno
xchg
cmp
mov
push
cltd
cmc
ds
dec
sub
scas
aad
stos
cs
sbb
dec
xchg
ds
push
lods
mov
add
stos
in
sarl
xchg
lea
nop
iret
test
mov
addr16
aaa
jl
adc
fwait
sbbl
cmpsl
mov
add
imul
je
push
aas
dec
insb
hlt
imul
lahf
push
movsl
sub
pop
into
or
inc
lock
xor
ja
std
xor
ja
jmp
rcrl
xlat
sub
sub
lods
xchg
add
xor
cmc
and
adc
rcrb
cmpl
sub
stos
repnz
pop
icebp
dec
sbb
fildl
lds
fnsave
shl
pop
xchg
cld
cld
dec
sub
shll
fwait
repnz
lret
adc
cmpsl
xor
cmp
push
movsb
test
aas
insb
fs
fwait
cmp
mov
lods
cmc
loopne
test
cli
mov
xor
lds
pop
xchg
pop
out
or
cli
push
gs
cmp
mov
negb
sbb
scas
fs
nop
prefetch
lret
jne
jne
orl
rcll
jne
xor
fs
and
xor
cltd
xor
mov
icebp
sbb
popa
mov
clc
mov
negb
cmp
mov
cltd
call
jnp
add
movsb
loop
push
and
jne
xorb
ljmp
and
lock
outsb
and
jbe
mov
cmp
add
rcll
ljmp
mov
loopne
push
cltd
stos
imul
out
or
idivb
or
pop
mov
mov
incb
ret
loope
mov
push
pop
sub
inc
cmpsb
add
jo
add
test
test
in
ss
push
cli
dec
adc
pop
call
dec
fistpll
cmpsb
xchg
mov
test
jne
lds
dec
scas
cmp
rol
shll
pop
jnp
jae
mov
adc
loope
add
xchg
jo
dec
lret
jg
js
pop
fwait
dec
xchg
and
sub
repz
add
cmovge
and
adc
andl
mov
or
mov
or
mov
out
lea
into
outsl
pop
xchg
push
fadds
jmp
cmp
ja
in
inc
cmp
popf
pop
sub
sbb
call
enter
jecxz
mov
inc
inc
pop
popa
mov
loop
shrl
push
shr
mov
push
fsubrl
lods
adc
andl
jns
addl
test
inc
pop
gs
inc
fcmove
push
and
xor
xor
dec
pop
pop
dec
leave
jbe
mov
cmpsb
mov
jle
lret
adc
nop
sub
test
jae
inc
ss
ja,pn
jl
sub
cmp
cmp
mov
xor
or
mov
sbb
pop
push
hlt
ja
sbb
pop
cmp
push
mov
cmpsb
fists
mov
mov
pop
in
jbe
movsl
stos
das
fists
cmp
sbb
rol
xchg
cmpsb
repnz
outsb
push
mov
jo
xchg
sbb
icebp
cmp
add
cmp
jo
movsb
scas
mov
jnp
lock
sub
stos
push
cs
push
js
cmp
mull
mov
aas
xchg
and
cld
xor
imul
xchg
ds
iret
test
push
js
or
out
mov
icebp
and
lcall
pop
lcall
shl
jnp
adc
ja
push
lds
and
shll
fisubrs
loop
fmuls
xor
rcrl
dec
mov
in
testb
pop
ljmp
fwait
cli
jmp
dec
ds
mov
cld
xchg
push
ret
ficomps
cmc
push
pop
xor
mov
mov
mov
fmull
adc
sbb
in
lock
mov
das
dec
inc
out
mov
or
adc
jb
pop
push
mov
xor
add
cmp
or
cs
pop
movsb
dec
fwait
add
loopne
xchg
mov
mov
cmp
xor
push
imul
pop
mov
push
xchg
adc
mov
mov
mov
mov
dec
cmp
add
mov
cli
xchg
cmp
dec
loop
ffreep
sbb
sbb
bt
rolb
xchg
and
rsqrtps
pop
sub
iret
cwtl
push
dec
loop
frstor
clc
xorl
mov
jne
mov
mov
movsb
movsb
pushf
mov
outsl
mov
dec
jle
mov
mov
mov
sub
add
xchg
xchg
sub
add
je
inc
add
dec
and
into
popa
push
sub
sub
das
mov
dec
sti
push
imulb
mov
sbb
push
sysret
inc
pushf
cmp
jb
cs
clc
out
ljmp
mov
mov
test
lock
and
dec
jb
dec
sub
jle
mov
pop
iret
lret
add
jne
testb
pushf
sar
adc
sbb
mov
icebp
jbe
lcall
mov
cmc
push
mov
mov
push
mov
mov
dec
mov
lods
lods
popa
cmp
jg
lret
int3
jge
adc
sahf
sarl
jnp
xor
in
repz
lock
adc
pop
xor
dec
into
jnp
add
mov
cmp
fnstenv
sbb
les
insb
roll
dec
mov
rcrb
in
sbb
ret
test
lret
and
rcl
mov
push
mov
cmp
jbe
jno
int3
cwtl
sbb
lret
inc
in
xchg
cmp
movsl
jo
lock
pop
add
push
sub
inc
pop
gs
popa
xor
sub
pop
sub
inc
add
cmp
mov
stc
push
or
sbb
dec
lcall
mov
or
aam
jecxz
xor
jns
cmc
cmpsl
jb
hlt
pop
adc
and
and
mov
mov
cmpsl
jmp
movsb
cld
test
fsubrl
outsl
ss
loope
xchg
out
leave
lret
sub
pusha
fidivs
dec
and
in
shrb
enter
sub
out
mov
cld
cmp
sbb
out
adc
in
inc
mov
add
je
in
inc
pop
outsb
std
hlt
shl
inc
es
mov
xor
xchg
inc
lods
sti
and
and
je
out
cld
das
sar
dec
in
adc
das
xchg
jae
insb
loopne
inc
mov
add
arpl
cmp
sbb
cwtl
cmp
ss
pop
cmp
rol
ljmp
push
lock
inc
sbb
sbb
xor
push
shll
mov
or
xchg
add
xchg
mov
pop
pop
stos
cmp
mov
hlt
aam
fstps
fwait
cmp
or
push
or
jp
into
push
xchg
repnz
loope
add
out
cmpsb
or
or
cmpsl
dec
pop
inc
or
jnp
xor
sbb
in
mov
dec
pop
jg
lods
bound
cld
pop
fdivrs
movsb
mov
jb
pushf
adc
xor
into
xchg
divb
push
mov
stos
out
dec
insl
pusha
cmc
fmuls
jne
std
outsb
loop
pop
pusha
inc
push
test
inc
mov
jge
scas
xor
outsb
fidivrs
adc
gs
std
insl
jl
pop
int3
pop
rolb
push
das
lock
cli
lret
cmp
or
jle
inc
cmp
add
mov
adc
push
ret
pop
dec
adc
enter
or
pusha
sti
lret
gs
aaa
sub
ret
xor
adc
mov
rcrl
data16
aad
mov
aad
cmp
scas
shlb
pop
sub
inc
adc
and
cmp
movsb
fldenv
imul
or
push
sub
xor
add
or
ret
or
pop
pop
add
in
mov
sub
pop
lcall
cmpsb
sub
xor
and
cmp
cs
gs
sub
mov
loop
and
push
pop
dec
ljmp
shl
pushf
dec
rcrb
popa
je
ja
out
dec
outsb
cmp
dec
sub
movsl
xor
jecxz
pop
push
flds
out
lcall
hlt
insl
xchg
mov
in
xchg
jge
jecxz
outsb
jb
jle
std
sub
sub
push
cmp
fnstsw
je
jbe
jl
fiaddl
jecxz
aad
sub
dec
loop
scas
pop
lcall
inc
fdivrp
ds
mov
push
gs
jbe
loopne
xchg
pop
xor
mov
int
test
icebp
fildl
insl
jnp
movsb
movsl
movsb
lret
mov
and
xchg
add
leave
pop
inc
out
inc
sub
das
andb
and
or
popf
pop
fldenv
jmp
loop
mov
mov
inc
rorb
xchg
jae
rorb
aad
clc
test
jo
aam
add
dec
scas
cmp
lahf
notl
iret
into
and
mov
cmp
and
bound
or
insl
or
push
js
movsl
lds
scas
test
push
jne
push
out
mov
sarb
sbb
mov
mov
pop
bound
int3
cmp
test
and
cltd
cmpsl
cvtpi2ps
in
mov
ret
mov
adc
lock
cmc
fs
add
das
mov
scas
pop
arpl
jne
js
jnp
mov
cmp
mov
shl
cmp
add
fimuls
loope
jl
daa
stos
popf
notl
and
sarl
dec
iret
iret
xchg
xchg
or
out
adc
clc
mov
insl
jo
orl
mov
push
fdivrl
jno
iret
repz
dec
mov
scas
out
or
add
out
pop
div
std
or
sbb
inc
sbb
pmulhw
ret
sbbl
mov
dec
add
movsb
popa
mull
adc
xchg
jmp
cltd
push
out
pop
dec
inc
inc
insl
mov
and
xchg
jnp
out
and
out
sbb
aaa
scas
push
and
and
inc
mov
ja
lds
ds
ja
add
imul
data16
mov
sbb
pop
das
inc
lock
push
sbb
test
xor
orb
sbb
mov
loop
mov
mov
xor
stc
xor
xor
xlat
lret
jl
mov
push
mov
cld
out
push
push
in
mov
jns
pop
dec
and
aaa
nop
lods
xchg
mull
mov
mov
mov
push
pop
fwait
lret
mov
and
push
pop
pop
ljmp
fcoml
ftst
aad
sub
dec
jp
jmp
stos
pushf
leave
add
push
mov
or
lret
add
add
push
jl
pusha
je
or
inc
inc
jp
shl
iret
inc
sub
adc
imul
xor
cld
pop
lods
inc
aad
test
cmp
dec
sarb
push
push
mov
loop
ja
sbb
aam
sahf
sbb
iret
pop
cli
xchg
aad
imul
mov
add
lea
cs
add
enter
xchg
addr16
sbb
jnp
pop
mov
push
xchg
xor
insl
sub
pop
inc
shl
enter
pop
lds
lcall
add
in
push
jecxz
mov
jl
aaa
inc
dec
and
fadds
mov
popa
mov
icebp
addr16
mov
es
fs
cmp
xchg
outsl
jmp
lods
out
xchg
adc
lahf
call
cwtl
push
testb
and
sbb
add
add
pushf
lfs
mov
adc
mov
xchg
jbe
inc
mov
popa
dec
add
out
aam
fcomi
lods
jg
daa
mov
ljmp
scas
jb
ljmp
pop
daa
push
hlt
adc
xchg
cmp
mov
pop
out
xorb
xlat
das
ljmp
jne
test
xlat
xlat
shll
incb
nop
lods
cmp
insb
je
add
and
adc
inc
repz
test
scas
scas
lea
add
inc
pop
and
and
or
pop
arpl
aad
ss
and
mov
xchg
cs
xchg
xor
sbb
les
dec
daa
adc
shll
repnz
jbe
mov
lahf
dec
fistpll
push
iret
xchg
int3
and
sti
out
cld
mov
stos
in
mov
insb
xlat
xchg
insl
xor
pusha
xchg
xor
sub
nop
cld
mov
or
xchg
push
mov
push
or
jnp
add
sahf
xchg
mov
cmp
lods
mov
xlat
or
pop
aas
or
jle
outsl
fwait
cmp
ja
sbb
mov
idivl
inc
or
sbb
pop
leave
arpl
outsb
scas
mov
dec
jp
xchg
mov
xchg
popa
out
insl
mov
mov
arpl
dec
arpl
xchg
sbbb
shrl
sub
pop
pop
add
out
push
sti
data16
mov
push
nop
dec
pop
sbb
or
shl
mov
xor
fs
xor
flds
lds
pop
cmp
xchg
pop
subb
enter
lahf
sbb
cmp
inc
pcmpgtb
pop
or
dec
sar
je
add
fisubl
or
xchg
or
or
mov
jecxz
out
and
ja
xor
popf
cmp
mov
insb
pushf
lds
bound
cmpsb
jle
shl
out
mov
fisubrl
mov
inc
sbb
cmc
imul
ljmp
into
fwait
push
pop
and
lods
adc
add
pushf
push
lods
sahf
adcb
push
mov
add
xchg
shll
xor
je
inc
adc
shlb
and
jnp
sbb
mov
jno
mov
mov
mov
cmp
jno
outsl
lret
out
sti
mov
loopne
push
mov
jle
lock
jb
jecxz
mov
das
cwtl
les
sub
sbb
clc
mov
mov
fidivrl
xchg
xor
ret
out
imul
dec
pop
inc
inc
mov
mov
xchg
pop
or
lock
mov
inc
fisttpll
add
mov
inc
pop
jb
out
shll
jecxz
lods
aas
mov
outsl
xor
mov
mov
sub
fiaddl
xor
ds
std
lods
inc
imul
pop
lcall
xchg
or
clc
shlb
cmp
into
cmp
aas
xor
inc
add
ss
cwtl
jl
pop
sbb
std
push
sarb
out
or
enter
lret
or
aaa
test
and
jnp
mov
dec
mov
pusha
sbb
aaa
inc
test
pop
and
xor
xlat
fwait
mov
pop
stos
pop
pop
dec
test
mov
aad
lahf
out
aad
test
ret
xor
rcl
cwtl
mov
icebp
frstor
es
sbb
adcl
add
push
icebp
nop
xor
add
or
dec
push
push
xorb
xchg
aaa
cmp
push
sbb
loope
cmpsl
sub
cmpsb
push
fidivs
xor
jb
aas
ret
shll
inc
imul
fld
add
pop
fdivrl
js
lea
lret
out
cmc
sub
dec
jmp
mov
or
nop
add
pushf
ss
jmp
add
sub
ja
ret
scas
dec
cltd
mov
bound
pushf
mov
add
stc
movsb
adc
jnp
jle
cmp
cmp
in
repnz
ds
jge
and
or
jmp
or
push
scas
imul
xchg
mov
push
rorb
mov
xchg
add
out
cmp
in
jg
mov
hlt
sub
lret
in
mov
dec
lret
and
mov
lock
pop
push
stos
push
push
push
inc
int
lahf
arpl
or
adc
das
insl
jge
jmp
jo
aad
sbb
lods
dec
sti
and
xor
mov
or
pop
xor
loopne
dec
stos
xor
pop
mov
pop
push
lea
leave
jge
ljmp
fwait
repz
movsb
call
pop
in
mov
or
stc
lahf
push
aam
shrl
pop
mov
push
mov
rcrb
inc
mov
ss
push
pop
jmp
cmpsb
in
addr16
mov
mov
repnz
rcl
out
push
mov
ret
repz
js
mov
repnz
mov
cmc
add
or
movsb
cwtl
lds
out
add
pop
and
add
dec
imul
mov
pop
scas
stos
push
cmc
fsubl
leave
cmpsl
jg
cmc
subl
outsb
mov
push
in
in
mov
movsl
inc
lret
stos
gs
jle
fnstsw
pop
mov
and
sbb
scas
in
std
scas
xchg
jmp
stc
push
adc
fldln2
cli
or
fsubrs
inc
and
mov
aaa
mov
pop
mov
bound
mov
out
xor
xor
dec
add
xchg
pop
adc
xor
in
fsub
sbb
xchg
fs
out
in
mov
adc
sbb
xchg
repnz
ss
mov
rcl
cwtl
mov
out
push
or
or
pop
sub
cmc
sarl
add
sub
cmpsl
test
add
cmp
inc
insb
dec
inc
mov
int3
mov
mov
es
push
icebp
aad
mov
insb
pop
in
adc
xor
xorb
push
imul
push
xchg
or
pop
test
sub
shll
or
icebp
sbb
test
iret
or
dec
test
in
sbb
and
out
fldcw
fsubrl
jno
mov
xor
dec
jl
push
rcl
das
push
or
lret
sbb
pop
std
mov
adc
pop
pop
jl
xor
ljmp
movsb
mov
mov
push
add
jnp
mov
cmp
ret
lea
dec
hlt
popa
jo
push
xchg
push
out
and
inc
push
in
rolb
push
mov
ret
pushf
mov
push
xor
xchg
stos
sti
push
or
mov
outsb
movsl
mov
jmp
jne
cmpsl
es
push
ds
pop
rcrl
cmp
pop
push
jo
stos
and
nop
pop
and
mov
mov
mov
push
dec
test
lock
mov
inc
movsb
mov
popf
inc
xchg
lds
xor
mov
into
cmp
inc
daa
test
cld
jae
lds
mov
aas
xor
mov
ret
cs
sbb
pop
lods
in
xor
sti
sub
sbb
mov
jmp
or
std
sbb
or
cbtw
scas
dec
mov
std
fs
gs
or
mov
jns
shr
mov
dec
mov
add
lcall
jbe
inc
jnp
mov
imul
call
and
cmp
xchg
push
dec
mov
push
add
jge
sub
lcall
xchg
fisttpll
and
shll
decl
lods
push
xchg
cli
and
inc
fwait
aaa
adc
es
jmp
gs
lods
inc
and
sbb
push
data16
push
shrl
push
adc
jne
ss
mov
cwtl
inc
mov
adc
or
adc
dec
sbb
loope
filds
pop
insb
popa
and
mov
inc
mov
enter
gs
popf
jl
mov
and
mov
je
add
fwait
and
add
addl
movsl
outsl
mov
add
les
xchg
fimull
popf
scas
loope
mov
or
jns
sbb
subl
jg
adc
xor
dec
sbb
and
push
scas
xchg
addr16
cmp
add
in
call
add
or
insb
mov
bound
je
mov
mov
sbb
mov
addb
xchg
dec
ja
ja
insl
repnz
push
cld
and
cmp
data16
call
out
inc
jge
sarb
xchg
loope
cli
mov
add
and
or
add
and
testl
add
lret
xor
dec
xchg
sbb
pushf
xor
cmp
jp
adc
lds
sbb
sub
and
pop
mov
outsl
jb
mov
into
fs
lret
cmpsl
sub
sbb
cmp
xchg
adc
out
mov
outsl
adc
push
add
mov
pop
lcall
inc
stos
mov
insb
movsl
fcoms
sarl
xchg
mov
xchg
push
adc
adc
and
lret
lods
es
mov
xchg
adc
push
cmp
xchg
sti
and
cmp
es
int3
loope
stos
add
jg
and
ret
push
pop
or
dec
nop
or
ss
xor
cs
fwait
cltd
or
jae
lcall
iret
testb
movsb
mov
xor
into
fiaddl
mov
pop
subl
push
mov
clc
popa
cwtl
push
ds
adc
cmp
pop
push
and
xor
andl
cltd
adc
test
mov
es
mov
add
bound
push
ljmp
dec
jl
int
xor
pop
rcrl
pop
xlat
popf
cmpsl
clc
enter
cwtl
test
inc
jo
shlb
lods
loop
xchg
fwait
scas
push
xor
xchg
cli
insl
test
jge
test
pop
pop
mov
aas
cwtl
scas
repnz
sbb
mov
push
sbb
push
xor
sub
stos
xor
inc
test
xchg
fdivs
loop
inc
dec
jmp
pop
sub
pop
rcrl
fcoms
mov
cmc
cmp
js
push
shl
adc
mov
jmp
enter
fmull
aaa
dec
push
stos
pushf
leave
les
dec
ret
mov
and
adc
pop
pop
cli
jmp
test
mov
jnp
sti
imulb
je
jae
xlat
fs
in
hlt
add
icebp
xor
jae
add
pushf
push
divb
pop
mov
fstpt
in
sub
add
sub
mov
sbb
lret
xor
mov
lret
and
popf
jmp
outsl
xor
loopne
dec
push
lahf
xor
aas
push
mov
outsl
addr16
cmp
mov
mov
ja
int3
fs
sarl
data16
mov
push
ret
jmp
inc
inc
xor
outsl
ficoml
iret
stos
add
fiaddl
ljmp
jecxz
jp
sub
mov
roll
xor
cmc
fcomps
hlt
out
lea
fsub
push
test
add
adc
in
repz
repz
loope
sbbl
jnp,pt
pop
and
adc
cmp
cld
jb
sub
or
dec
test
in
push
jne
sub
cmp
cld
xor
fdivl
jnp
sarb
sbb
sub
andl
mov
push
xor
fistpll
test
mov
pusha
sbb
sbb
add
lods
mov
mov
or
cmc
out
test
mov
divl
dec
mov
xor
mov
jns
jecxz
cmp
in
jg
repz
push
jb
xor
cmpsb
xchg
test
xchg
mov
inc
sahf
push
push
mov
jb
and
pop
fwait
je
iret
pop
inc
jae
pop
pop
mov
loopne
insl
imul
andl
inc
mov
cmp
mov
jae
mov
jbe
subl
push
das
mov
pop
cmpsb
je
inc
mov
add
jo
lret
xor
rcrb
cwtl
sub
aas
xchg
out
movsl
ficompl
gs
dec
adc
pop
jle
inc
xor
pop
sub
xchg
pop
or
cltd
or
enter
daa
movsb
aaa
pop
je
fsts
mulb
jae
add
push
fmull
gs
cmc
lret
xor
movsl
dec
dec
mov
push
add
out
jl
push
shll
cmp
test
jne
call
xchg
pop
dec
pop
rorl
jo
sub
xor
dec
cwtl
dec
ds
lock
jge
je
loopne
sahf
adc
adc
sub
push
mov
rol
mov
xor
repnz
adc
inc
rcrl
imul
shrl
sti
repnz
jl
popa
mov
out
and
pop
or
xchg
adc
cmp
adc
test
push
jno
push
mov
pusha
clc
push
mov
mov
lcall
out
pushf
loop
in
pop
out
fimull
mov
pop
add
mov
push
loopne
sub
mov
jl
sub
mov
js
push
divb
popf
mov
arpl
cmp
shll
subl
out
hlt
and
mov
ret
cmpsl
decl
or
les
jg
sub
sbbl
adc
gs
scas
jecxz
xlat
push
sub
lock
cmp
dec
xchg
cs
mov
in
adc
cmpb
add
add
mov
movsb
xor
ja
inc
insl
popf
jae
sarl
cmp
mov
or
mov
jge
out
inc
pop
jecxz
push
test
push
push
dec
stos
sarb
outsl
mov
mov
sub
shll
test
sub
into
enter
xor
popf
in
out
ds
lcall
push
dec
sub
leave
pusha
fstpt
pop
pop
inc
scas
out
lret
es
and
pop
lods
push
cmpsb
cmp
mov
lods
inc
repnz
dec
fs
adc
cli
jae
imul
sub
push
aam
cmp
stos
mov
sahf
in
adc
fidivl
cmp
mov
push
outsb
mov
cld
sbb
lods
xlat
cwtl
shufps
sarl
scas
adc
mov
dec
loope
sbb
jns
add
mov
push
push
push
popf
adc
mov
lret
ficoml
stos
mov
jmp
inc
and
sarb
je
jmp
fsubrs
xor
cmpsb
stc
es
xchg
and
loope
or
xchg
shll
jo
mov
std
ds
lods
je
and
adc
mov
repz
inc
fmulp
movsb
xchg
sbb
mov
int3
push
jo
es
sub
adc
mov
int3
xor
push
les
push
pop
pop
aam
push
or
xchg
outsl
pop
pop
cli
pop
sub
fwait
int
sub
xor
add
decl
int
mov
rcll
lahf
movlps
mov
mov
sbb
fsubrp
ror
inc
divl
repz
pusha
notb
xchg
rcl
pushf
out
ljmp
shlb
outsb
push
sub
movl
xchg
imulb
dec
pushf
in
lds
mov
ret
faddl
push
sbb
push
dec
mov
xchg
mov
sbb
aam
sbb
sbb
mov
ret
into
scas
lods
jns
mov
pop
daa
inc
dec
nop
outsl
fildl
pushf
push
jecxz
aaa
jne
icebp
sbb
cwtl
sub
mov
xchg
sbbl
or
cmp
mov
iret
xor
fidivrl
jp
mov
cli
dec
popf
jbe
xchg
fincstp
movl
adc
stos
in
cmpsb
mov
adc
xor
mov
or
xchg
fs
sub
test
push
in
arpl
mov
push
and
xor
popa
mov
cmp
shlb
push
mov
scas
into
cwtl
mov
cs
rcr
ljmp
jle
mov
push
xor
cmp
mov
jb
pop
in
insb
sub
and
dec
test
sub
in
lahf
movsl
dec
stc
mov
iret
pop
pop
or
lahf
adc
mov
enter
pop
aaa
inc
cmp
xor
pop
test
xchg
in
lahf
xchg
stos
divl
shlb
pop
adc
repz
mov
jle
or
lcall
arpl
ja
mov
gs
fidivrl
sub
aam
es
lock
cmp
addl
sbb
mov
push
push
pop
repz
xor
lea
movsl
sti
cmp
cltd
rorl
pop
sub
fildll
xor
aas
pop
push
repz
adc
orb
mov
data16
pop
into
mov
in
add
jne
adc
lret
cwtl
pushf
andb
cmp
fisubrs
hlt
push
mov
fiadds
inc
movaps
stos
or
hlt
cmpl
xor
roll
jbe
xor
sub
ljmp
jbe
mov
xor
jbe
mov
xor
rorb
cmp
add
icebp
inc
jle
sbb
jb
aam
sub
int3
dec
xchg
dec
pop
mov
icebp
popf
pop
mov
jl
cmp
sarb
mov
lods
xchg
cld
es
mov
jecxz
sarb
jge
lds
xor
fs
dec
jnp
jg
fistpl
popf
xchg
shrl
xchg
mov
mov
dec
jg
push
cmc
testl
lock
mov
mov
stos
and
cmpsl
shl
and
dec
xchg
ret
push
xchg
aad
sbb
push
adc
xchg
test
pop
scas
fwait
xor
cmp
jmp
stos
into
aas
lcall
mov
bound
icebp
pop
loop
cmp
icebp
inc
jae
pop
fsubl
mov
xchg
ds
ja
test
int
sahf
loope
les
sbb
and
and
ja
movsl
cmp
and
xor
push
jo
je
mov
js
mov
jle
rcrb
iret
mov
xor
dec
fldl2t
inc
xor
ret
pop
mov
mov
std
int
pop
repnz
rolb
int3
inc
clc
and
std
scas
push
push
gs
mov
je
outsb
inc
adc
inc
test
push
mov
shl
push
sbb
fcoms
mov
cmpl
jnp
shrb
inc
push
xchg
mov
push
jo
jnp
fninit
mov
mov
movb
addr16
pop
sti
stc
lcall
pop
mov
test
push
lods
pushw
or
test
sub
aad
mov
xlat
mov
adc
dec
push
dec
shlb
jns
cli
inc
or
xchg
insb
popf
rorl
sub
sub
in
inc
std
jb
or
pop
lret
xlat
fwait
adc
sub
mov
or
mov
in
mov
iret
add
cltd
in
popf
dec
adc
bound
inc
jp
dec
sub
dec
xchg
push
mov
in
xchg
pop
adc
xor
mov
dec
mov
inc
and
push
nop
aad
push
mov
add
mov
rolb
adc
in
insl
mov
add
stc
arpl
int
lods
int3
pop
push
cmpsl
push
out
pop
jp
nop
mov
cmp
push
xchg
jmp
js
stc
repnz
push
sahf
mov
leave
sar
jns
pop
dec
js
popa
fstpt
pusha
and
ss
sti
mov
shll
xor
mov
dec
test
push
sub
push
jns
mov
in
push
or
cmc
stos
lods
jp
bound
xchg
push
lods
pop
cli
mov
insl
pop
or
cmp
test
or
add
fadds
mov
out
pcmpeqd
arpl
in
xchg
cmp
xchg
xchg
aad
jle
popl
popf
lods
push
mov
dec
lds
repz
push
inc
and
mov
stos
je
jg
pop
es
ss
out
mov
and
arpl
inc
das
push
add
addr16
jmp
cmp
mov
or
loopne
dec
mov
scas
xor
repnz
add
jns
imul
add
lock
pop
lods
add
fnstsw
dec
adc
push
xlat
sub
xor
add
fwait
or
sti
adcb
and
andl
mov
mov
cmp
rcll
lods
or
push
enter
dec
ss
pop
push
ss
dec
out
xorb
ficompl
sbb
pop
inc
pop
pop
std
lods
mov
add
dec
mov
lahf
add
js
lret
jns
adc
mov
rorl
inc
scas
outsl
mov
stos
loope
pop
xchg
push
cmp
gs
sbb
sub
inc
scas
das
scas
out
iret
ja
push
je
xchg
push
mov
in
push
push
inc
ret
push
xchg
jp
divb
xor
jl,pt
jns
add
lahf
arpl
xorl
jnp
pusha
aaa
loope
scas
mov
and
jecxz
push
and
aam
daa
jb
adc
repnz
fs
xchg
or
scas
rcrl
ds
cmc
into
jl
imul
out
cld
add
sahf
in
mov
cmp
cmp
call
jge
dec
or
inc
push
sub
cmp
adc
or
sub
jne
insb
pop
push
insb
sbb
fisubrs
mov
in
mov
fstl
test
or
xor
xchg
repz
test
jbe
jne
add
into
imul
mov
fisttpl
scas
push
repz
inc
out
and
jne
push
push
cmp
push
roll
sti
add
push
and
xor
ljmp
pop
mov
pop
and
jge
add
cmp
lods
dec
iret
loope
lret
shr
mov
cmp
mov
lea
in
xchg
xor
mov
add
stos
adc
xor
sbb
mov
sub
out
push
lods
jmp
lcall
cmp
test
dec
flds
xor
mov
mov
xchg
mov
cmp
testb
out
fidivrl
stos
ret
push
aas
lret
outsb
rcll
pop
ss
cmpsb
mov
insb
fstpl
cmc
das
andl
push
stc
sbb
notb
mov
cmpb
repnz
xchg
mov
and
mov
pusha
in
xor
rcrl
or
sbb
push
leave
imul
xchg
faddl
or
jae
pusha
mov
enter
or
pop
call
leave
mov
scas
or
cmp
pushl
mov
jg
lea
push
adc
add
xchg
xchg
out
test
lahf
data16
push
mull
push
sahf
jl
insl
icebp
mov
cmp
test
pop
sbb
adc
call
orl
flds
sbb
cmpl
push
loope
roll
das
pop
in
add
xor
push
add
fsubl
push
push
inc
in
push
mov
test
xor
sbbl
cmp
pop
rorl
add
fs
xlat
mov
push
adc
lods
adc
jnp
cmpsl
insl
das
mov
xor
dec
cmp
xlat
jno
addr16
insb
aad
and
jnp
sub
sub
scas
mov
iret
loope
xchg
xor
dec
mov
nop
aad
pusha
scas
mov
mov
ucomiss
mov
dec
scas
push
fstps
sbb
mov
mov
dec
imull
je
and
or
mov
scas
xchg
sub
movsb
and
das
mov
test
ret
jne
nop
out
sub
push
ds
xor
lock
sarb
or
clc
push
or
mov
test
adc
sbbb
pop
lock
dec
xchg
mov
xor
dec
sub
jp
in
icebp
jg
push
sub
test
push
mov
mov
jno
out
mov
add
mov
mov
sub
sub
fs
lds
sbb
dec
sbb
ja
mov
aaa
in
test
loope
pushf
sarb
test
gs
movsl
and
dec
in
pop
loop
ljmp
xchg
int
enter
hlt
sub
mov
inc
push
icebp
dec
jae
adcl
pop
or
repz
jmp
aam
leave
divb
jge
divb
out
cmp
test
cmp
ja
adc
imul
sub
jmp
pop
fisubs
insb
cwtl
leave
or
ret
testb
sbb
jo
jmp
aaa
sbb
push
sbb
rcl
out
push
xchg
fsubrs
insb
hlt
ljmp
mov
lcall
xchg
xor
stos
aam
outsl
cmp
mov
dec
cs
data16
aas
dec
xchg
pop
mov
jmp
aam
and
test
in
outsb
push
push
xor
ret
or
fldt
mov
sti
and
lock
mov
cmp
or
mov
fst
pop
nop
aam
push
push
fwait
add
dec
scas
mov
loop
int
insl
int3
jecxz
pop
out
int3
mov
inc
outsl
jne
cld
sub
lea
mov
arpl
inc
cmpsl
sub
addb
cmp
insl
lock
shrb
xor
hlt
mov
or
or
aam
sbb
xchg
je
push
push
scas
cmp
and
or
xchg
mov
cmpsb
scas
mov
inc
xor
bound
mov
xchg
pop
mov
mov
arpl
add
jp
add
pop
pop
imul
pop
aas
pusha
inc
cmp
rcl
js
gs
js
inc
in
inc
xchg
jmp
cmpsb
std
aam
sbb
insb
jmp
in
sub
cltd
and
add
or
inc
sbb
cmp
in
imul
mov
pusha
jp
cltd
movsl
push
adc
and
lcall
stc
popa
cld
bound
insl
fcmovbe
dec
sbb
cld
add
add
jae
jae
jle
leave
int3
lret
cli
inc
xchg
fbld
push
cli
mov
orb
shll
daa
ljmp
clc
repz
or
add
iret
pop
fmuls
push
sar
mov
or
add
and
mov
arpl
cwtl
jmp
lods
jl
push
mov
dec
sarl
xor
adc
cmp
ret
aam
int3
rcr
sahf
jnp
mov
imul
jle
sub
lods
sub
es
mov
fildl
inc
fadds
cmp
lea
or
push
fwait
out
lcall
mov
lret
jns
orl
jne
js
dec
repz
ja
repnz
pop
mov
cmp
xchg
sahf
iret
ret
push
call
xchg
sub
test
lahf
cmp
jmp
ret
in
ret
jo
dec
rcl
inc
arpl
mov
or
inc
sub
jnp
mov
mov
pop
adc
movsb
lock
cli
push
add
ret
adc
mov
outsl
test
insb
loopne
ret
push
xor
mov
icebp
inc
jecxz
and
or
cmpl
insl
xchg
xchg
add
ja
out
xchg
mov
mov
xchg
in
sbb
xchg
and
fcoms
sbb
fwait
sub
stc
jl
stos
ljmp
push
dec
in
adc
shr
pusha
int3
inc
adc
and
aaa
sarl
shll
hlt
and
popf
inc
lcall
or
add
dec
clc
fldcw
lds
jb
rcr
sub
dec
lods
inc
subl
fmulp
xchg
push
adc
out
sbb
in
notl
fcomip
aam
sub
in
pop
lock
add
into
dec
xchg
mov
sub
movsl
push
sub
or
ror
outsb
mov
lret
cmp
push
jmp
cltd
pop
mov
js
xchg
lods
scas
gs
cwtl
mov
in
mov
add
push
and
rolb
gs
mov
add
pop
cmpl
pop
notl
ljmp
push
nop
dec
sub
add
cmp
inc
dec
out
aaa
lds
push
fistps
push
mov
das
jae
mov
or
cld
xor
adc
inc
pusha
shl
inc
cli
in
inc
dec
and
cld
pop
insl
inc
mov
lods
xor
mov
loop
jl
xchg
fs
push
mov
or
add
xchg
mull
push
jo
mov
out
aad
ljmp
mov
out
pop
loope
stos
stos
mov
cmp
push
xchg
adcl
xchg
popa
lahf
es
shlb
jecxz
mov
xor
inc
inc
aad
jb
add
cmc
cltd
or
out
bound
or
sub
stos
stc
test
lea
out
adc
push
or
push
push
mov
icebp
ja
sahf
int3
clc
mov
les
inc
or
and
repz
cmc
pop
xor
ror
stos
cld
xchg
mov
or
sub
sbb
popf
aad
jecxz
lds
pop
mov
popa
jge
and
and
or
and
push
call
or
lret
push
cmpsb
push
mov
scas
mov
or
adc
mov
in
daa
ja
sbb
cmp
pop
call
inc
out
push
fisubrs
push
loope
mov
test
sub
dec
ljmp
push
hlt
adc
scas
mov
lock
jecxz
push
jb
add
js
ja
mov
xor
das
sbb
cltd
jns
mov
push
mov
cmp
push
leave
pop
imul
or
mov
test
jle
mov
push
xchg
lods
in
fiadds
gs
aas
jge
push
and
jnp
scas
jns
push
add
cwtl
iret
aas
and
subb
ret
lea
cmp
andl
loop
js
add
fsubl
xchg
lahf
sahf
dec
loope
imulb
sarl
enter
sub
push
inc
das
mov
jbe
jmp
lods
adc
push
xchg
es
or
imul
mov
scas
popf
push
add
or
call
fisubrl
inc
inc
push
pop
push
cmp
mov
mov
enter
jae
stos
rclb
push
add
fs
mov
add
fbld
jns
sub
inc
or
cld
jp
out
testb
sub
mov
out
mov
addb
ret
pop
addl
stos
push
jnp
xchg
adc
mov
repnz
inc
outsb
ja
out
cld
inc
xor
adc
mov
roll
pusha
sti
jg
jne
adc
jl
fadd
xchg
loope
loop
xchg
loop
and
stos
imul
movsb
add
push
and
test
dec
test
jne
and
sbb
sbb
add
mov
xchg
orl
or
sub
sub
lcall
sahf
add
data16
adc
cmp
std
inc
xchg
insb
les
add
stos
fstpl
call
or
jns
cmc
jmp
push
fldl
push
push
mov
push
add
mov
decb
mov
jge
lds
push
push
mov
sub
arpl
push
outsb
pop
dec
sub
lods
out
test
dec
xchg
cmp
outsl
pop
pop
outsl
outsb
pop
pop
out
pavgb
xchg
stos
ror
scas
add
stos
out
cmp
aad
jmp
scas
test
xchg
and
lock
sub
in
dec
sub
dec
scas
leave
notl
into
cmp
fnstcw
inc
cli
je
ret
lods
xor
insl
push
cmpsl
leave
pop
add
rcrl
cmp
sbb
mov
xchg
mov
adc
divb
pop
mov
pop
pop
test
mov
sbb
bound
pushf
jle
dec
cld
das
loop
mov
sub
or
aad
loopne
jecxz
shrl
dec
sub
mov
addr16
jp
cmp
icebp
xchg
inc
mov
fisubrl
mov
jo
add
out
push
pop
and
fs
lcall
inc
cmpsb
dec
dec
adc
adc
ds
mov
lods
decb
imul
cmp
xorl
pop
cmc
inc
mov
shld
jnp
sub
sub
cmp
in
cld
ss
push
mov
mov
dec
dec
cmc
jne
iret
shlb
xchg
scas
xchg
adc
xor
xor
jne
push
jp
push
pop
gs
mov
stos
push
out
xchg
xor
int3
add
jne
aas
xchg
or
push
es
fisttpl
bound
sub
add
inc
xchg
jno
inc
xchg
xlat
jle
loop
xor
mov
fdivr
les
sbb
jg
es
pop
mov
and
inc
push
push
inc
pushf
int
xor
lock
add
in
in
gs
aam
iret
fstpt
leave
clc
jg
ss
lods
insl
pop
inc
out
pop
int3
fidivrs
shll
test
fucom
popa
sbb
int3
out
adc
inc
or
int
jp
jns
fcompl
add
or
fsubrs
stos
pop
and
aam
enter
arpl
ret
fadds
dec
or
mov
shll
int
mov
inc
pop
and
jbe
jnp
dec
or
ja
das
xchg
call
fwait
movsl
cmpsb
rolb
in
mov
sti
pop
add
dec
insb
mov
mov
ror
push
mov
aam
mov
push
fdivs
push
test
sbbl
enter
imul
and
ret
mov
mov
ljmp
out
pop
test
xor
leave
dec
mov
inc
sahf
dec
inc
xchg
jae
adc
mov
add
pop
cltd
and
push
sub
sti
stos
mov
xor
enter
xor
or
push
jmp
dec
sti
sbb
cmp
clc
aas
stos
inc
ficoms
sub
fnstenv
or
mov
lds
cmpsl
ja
fwait
and
push
xchg
inc
and
mov
xor
flds
mov
ret
add
mov
inc
into
xchg
lahf
push
cmp
cs
jl
shrb
fs
adc
sub
adc
out
xchg
jbe
mov
dec
lods
je
sbb
in
cmpsb
mov
test
daa
or
loop
adc
fwait
mov
xor
mov
xor
push
aas
leave
jnp
daa
fsubl
sbb
mul
imul
in
or
out
rcrb
dec
scas
xchg
dec
push
cmpsb
or
iret
adc
test
lret
ja
jnp
push
jp
cwtl
test
inc
out
paddb
loopne
and
mov
xchg
pop
fmull
aaa
mov
popa
sti
sti
in
push
push
sub
psrlq
jnp
loope
mov
pop
imul
divl
ljmp
or
or
xchg
in
mov
mov
and
fldl
jle
inc
xchg
or
jmp
sub
pusha
ret
and
ja
jp
inc
mov
call
mov
fidivs
fistps
sub
loopne
mov
sbb
push
sub
mov
out
and
gs
mov
ret
cltd
xchg
in
orb
imul
adc
clc
scas
mov
ljmp
stc
nop
pop
sarb
sar
jmp
push
inc
loopne
sub
xchg
pusha
dec
test
fists
sbb
mov
out
jne
mov
xchg
sbb
pop
fwait
sub
pushf
roll
inc
ret
insb
js
or
pop
cmpsl
mov
arpl
pop
xor
or
mov
pusha
jbe
stos
ret
out
cld
fadds
mov
ja
mov
in
and
das
imul
push
repnz
leave
xor
cmp
adc
or
jg
mov
push
pop
sbb
vandps
mov
into
cltd
xor
aam
in
out
pop
xchg
adc
dec
xor
in
mov
mov
jmp
xchg
mov
imull
xchg
adc
mov
adc
fists
ds
loop
or
and
mov
sbb
add
push
stc
inc
mov
addr16
xchg
jb
in
rcrb
add
push
cmpsb
mulb
jne
dec
decb
or
or
mov
enter
repz
sub
mov
push
out
in
pop
cmp
repz
std
ds
in
xor
jb
jo
push
mov
xor
mov
inc
not
sti
mov
pop
xchg
mov
mov
shll
daa
inc
bound
cs
shlb
mov
dec
stc
loop
push
mov
push
test
repz
fildll
std
ret
rorl
xchg
dec
or
xlat
xchg
loopne
cmpsl
ffree
inc
mov
and
into
pusha
pushf
test
or
or
xchg
test
or
es
sub
icebp
and
jecxz
fldl2e
outsl
loope
movsl
pushf
ljmp
and
jo
mov
dec
mov
mov
daa
push
in
sub
dec
fsubp
cmp
inc
sbb
sub
jae
mov
push
test
mov
adc
stc
lds
outsb
and
add
xor
sbb
cmpsl
add
popa
sbb
mov
adcl
pop
add
push
stos
dec
mov
push
out
dec
loope
xorb
fwait
jp
ljmp
adc
sub
pop
xchg
scas
test
mov
fsubrp
mov
jecxz
fstps
aam
cmp
into
cmc
mov
and
add
mov
add
popa
mov
pop
dec
in
push
xchg
mov
leave
fsub
cmp
aam
add
dec
mov
and
cmp
hlt
mov
daa
jnp
out
test
out
scas
ja
sub
jg
data16
fcoms
dec
jg
loop
pusha
testb
dec
jbe
mov
mov
adcl
jg
inc
loopne
cli
pop
rclb
sub
fsubl
xor
xchg
pusha
xor
loop
mov
push
dec
sub
out
inc
pop
lock
ss
ss
je
stos
cmpsb
pop
jno
insb
mov
jns
jo
lods
inc
aad
lds
enter
aad
divl
test
cmp
push
xchg
cmp
enter
adc
xchg
mov
sub
cld
mov
rolb
movsb
jo
into
fs
fldenv
aam
fnstcw
push
mov
shlb
out
push
push
into
and
pop
popf
dec
enter
or
sub
in
mov
pop
fdivs
gs
mov
jbe
mov
xor
call
pushf
out
daa
dec
mov
push
or
push
adc
test
or
js
loopne
and
adc
cli
push
stos
dec
or
mov
fincstp
addr16
sub
inc
call
mov
cmp
add
cmpsl
fidivl
dec
addr16
adc
outsb
xchg
fstps
aad
stos
pop
jns
pop
push
in
scas
or
outsb
lods
xchg
movsl
pusha
adc
push
cmp
cmp
add
jecxz
test
andl
sbbl
lcall
mov
cmp
dec
aam
xor
inc
aad
sbb
fstp
bound
outsb
sbb
lods
add
fs
and
fs
pop
inc
jbe
jle
lock
sub
lea
dec
jle
aam
addr16
xlat
aam
lret
out
adc
in
or
mov
fs
push
ds
mov
cmp
outsb
les
xor
xchg
and
andb
and
movsl
pop
insl
mov
lods
and
jnp
repnz
xchg
xchg
stc
sub
xor
call
loopne
and
jmp
push
mov
jge
jecxz
mov
mov
aad
add
jne
imull
xor
rcll
cmpsl
sbb
in
sahf
and
xchg
lret
leave
aad
xchg
cmc
dec
sub
xor
mov
mov
pop
fidivrl
mov
idivb
xor
rcll
test
stc
je
cltd
push
adc
xor
cwtl
aam
mov
xchg
int3
xchg
loope
cmp
mov
mov
cli
test
add
mov
je
or
sub
sbb
lret
xor
imul
data16
stos
ja
mov
lcall
loope
subl
mov
jmp
mov
outsl
cmp
sub
imul
in
add
sub
jle
imul
pop
ja
add
cltd
clc
lahf
popf
out
fxch
xchg
aaa
int3
sti
jle
dec
test
fwait
inc
mov
hlt
rolb
shlb
mov
push
sub
pop
fwait
add
outsl
push
jmp
mov
ja
inc
push
sqrtps
adc
mov
xchg
ret
loopne
push
pop
movsl
stc
sub
ds
mov
adc
test
lret
les
lcall
push
mov
test
lahf
cs
add
add
mov
xor
dec
enter
scas
popa
mov
sub
hlt
mov
fstpt
inc
jge
jbe
cmp
xchg
inc
push
sub
xchg
aaa
mov
dec
cwtl
call
stos
cmc
test
imul
je
mov
cli
mov
jmp
adc
mov
cmp
rcrl
xchg
fs
and
fs
dec
int3
dec
inc
mov
sbb
mov
mov
aas
enter
arpl
fwait
mov
out
test
mov
jne
dec
or
outsl
xlat
inc
iret
sub
jno
push
push
imul
imulb
add
mov
pop
xor
mov
sbb
orb
imul
pop
mov
xor
jnp
jne
xor
icebp
cld
in
stos
pop
mov
or
inc
ds
and
cli
test
andb
stos
push
cmpsl
mov
in
cli
mull
test
xor
nop
stos
mov
cmp
out
scas
das
mov
pop
int
add
xchg
mov
incl
movsl
mov
dec
xchg
mov
fstl
jne
testl
mov
loopne
fidivrl
ljmp
sbb
insl
inc
stos
clc
push
add
mov
inc
dec
stos
cmpsb
sub
outsl
adc
out
mov
xchg
enter
pop
add
fcmovnb
mov
imul
call
mov
stos
ret
push
lret
and
ret
cli
gs
shlb
jp
dec
mov
xchg
sbb
jno
pop
ja
mov
sub
lret
xor
xchg
rorl
xlat
sub
mul
fadd
jecxz
dec
push
xor
push
jns
sbb
cmp
or
lahf
fnstsw
and
vpsubusw
js
std
test
aas
roll
push
imul
xchg
push
icebp
in
pop
or
stos
lea
and
pop
cltd
push
mov
hlt
pmullw
adc
rcrb
fldl2e
xor
add
movl
mul
out
fwait
mov
mov
and
lods
sbb
push
jecxz
mov
data16
push
das
mov
notb
inc
ror
inc
or
jnp
mov
mov
enter
gs
arpl
mov
bnd
lret
pop
dec
dec
push
jecxz
sbb
lcall
dec
fisubl
sti
movsb
stos
ljmp
out
pop
divl
fistl
add
cmp
repnz
mov
jno
mov
or
aad
pusha
mov
lods
popl
movsb
ss
xchg
adcl
cmp
mov
ds
arpl
popf
sbb
push
mov
lret
fwait
adc
push
pop
scas
pop
xchg
test
cltd
insb
mov
mov
es
test
lods
cltd
insb
call
sub
fcmovu
mov
or
and
jbe
add
out
jmp
js
add
je
pop
pop
leave
fcom
lcall
call
test
push
out
pop
cs
cld
mov
out
out
pusha
and
push
mov
and
sbb
test
out
das
imul
push
call
jns
mov
rcr
or
jle
and
lret
arpl
cmp
stos
cmpl
pushf
adc
ss
test
push
imul
arpl
scas
ljmp
jne
xor
jmp
jbe
jl
fidivrl
mov
xchg
cli
adc
sub
push
mov
insb
sbb
ds
adcl
xchg
sub
stc
sbb
test
in
sarl
lret
pop
aaa
or
xchg
mov
sbb
sbb
cld
push
icebp
sbb
inc
rolb
mov
bound
clc
jg
ud0
fisttpl
arpl
xchg
xlat
cmp
int3
push
in
sub
and
addr16
jge
hlt
sbb
es
add
fs
adc
sar
dec
xor
icebp
dec
addl
shll
xor
frstor
je
mov
xchg
or
test
outsl
mov
and
dec
or
xor
and
ja
jae
lahf
and
adc
loope
push
mov
repz
out
faddl
idiv
mov
push
add
lahf
dec
out
idiv
xor
jo
je
pop
shlb
push
mov
cmp
push
test
mov
cmp
jo
xchg
sarb
shll
xor
push
clc
sbb
imul
test
mov
lock
add
jb
out
outsb
dec
mov
adc
inc
fbstp
mov
filds
add
or
pop
lock
mov
int
pop
enter
adc
xchg
ficomps
jbe
push
mov
mov
ja
lahf
pop
scas
nop
mov
jne
jne
mov
add
aad
fimuls
sub
mov
cmp
cs
loope
cmp
sbb
mov
in
test
cli
add
xchg
shrl
scas
lea
add
mov
lea
das
sti
ret
or
sub
push
jns
and
push
mov
inc
inc
xor
xor
in
cmp
test
test
loop
push
mov
rclb
push
push
pop
stc
xchg
lods
adc
call
popa
and
mov
ficoms
scas
test
lods
mov
insb
test
pushl
in
out
ljmp
aaa
inc
mov
negl
jp
ljmp
test
test
add
or
dec
xor
cmpl
jo
scas
cs
out
push
sahf
mov
sti
jbe
stos
pop
jae
out
das
dec
push
adc
adc
push
out
dec
cs
sbb
adc
fwait
inc
xchg
shrb
sub
xor
lcall
cmp
jl
imul
ret
in
js
std
cli
inc
daa
cmp
push
dec
add
jne
dec
fstl
sarl
fsubp
out
dec
lret
roll
into
or
aas
xor
jl
xchg
mov
pop
mov
and
fdivs
dec
cmp
push
in
and
inc
arpl
mov
xorb
popa
in
repnz
or
xlat
outsb
loopne
stos
xchg
and
adc
cmpsb
jns
sbb
sub
call
mov
testb
cmp
mov
jbe
inc
inc
xchg
int3
jl
js
dec
jg
test
mov
xor
into
mov
scas
adc
shrl
movsl
inc
sub
jp
in
dec
arpl
out
scas
repz
outsl
and
jp
in
add
pop
sarl
cmp
inc
pop
and
cwtl
add
cld
fstpt
jp
cmpsb
cmc
sub
insl
sbb
fwait
popf
sub
adc
jp
sub
xchg
xor
gs
enter
inc
xrelease
dec
fldl
and
rcrl
cmp
roll
iret
xchg
out
cmc
cmp
sbb
cmpsb
scas
cmp
add
in
adc
leave
int
jg
jnp
shlb
jl
inc
aam
js
and
hlt
jnp
cmpsb
xor
ljmp
sti
movsl
stc
dec
pop
subl
and
in
sbb
dec
or
lds
mov
dec
into
scas
xchg
shll
jg
outsb
cmp
and
mov
loope
sub
sub
adc
sub
and
outsl
mov
add
ja
or
pop
in
adc
inc
ss
cwtl
sbb
jb
nop
sub
test
adc
mov
shll
lds
pop
into
xor
arpl
sarl
lods
push
jl
stos
inc
enter
and
push
adc
pop
insb
push
daa
xor
lcall
out
shl
dec
inc
ss
movsl
outsb
cmp
jbe
pop
imul
xor
sti
shll
adc
iret
push
test
add
mov
cmp
fcomip
inc
insb
cmp
les
cld
mov
xlat
out
mov
fwait
aam
pop
inc
push
sahf
pop
jg
mov
jge
adc
or
cmc
sbb
mov
lds
or
stos
xchg
in
scas
jp
jno
loop
lahf
dec
inc
cmp
loope
ja
push
fistl
dec
pop
xlat
mov
adc
int3
out
dec
aam
jge
push
cmpb
xchg
cmpsb
mov
cwtl
xor
jmp
lock
or
es
mov
lea
mov
inc
and
or
push
fistl
test
les
jl
std
jae
popa
and
imul
and
add
add
icebp
loopne
fdivrl
inc
add
mov
add
js
add
aad
add
scas
add
fs
inc
add
scas
add
cmp
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
jmp
