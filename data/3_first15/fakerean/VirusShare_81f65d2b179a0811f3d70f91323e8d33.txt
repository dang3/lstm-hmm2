sbb
add
xchg
sahf
cmp
hlt
loope
mov
pop
in
xor
repnz
xchg
repnz
xchg
jno
inc
mov
lahf
addr16
out
or
sahf
aas
cld
lods
or
test
mov
iret
inc
ss
rcr
push
in
ret
xchg
push
fmull
add
jl
mov
ja
xor
mov
xchg
jp
cmp
inc
xchg
repz
adc
inc
adc
fisubrl
cmp
dec
jmp
pop
push
into
lods
mov
call
addb
and
and
sbb
pop
arpl
lret
xor
pop
ss
popa
and
pop
mov
sbb
push
int
sbb
divb
adcl
addr16
push
push
mov
fwait
jmp
add
cltd
jnp
pop
jo
fdivl
mov
jmp
adc
xchg
jmp
adc
inc
js
popa
pop
frstor
inc
movsb
clc
jmp
dec
repnz
cli
adc
movsb
adc
push
jns
leave
lahf
or
or
pop
cmp
xor
jle
sti
testb
imulb
cld
mov
cld
xchg
aad
loop
jg,pn
inc
dec
in
call
inc
jg
add
in
lds
xor
jmp
notl
and
test
lcall
add
or
mov
dec
add
popf
cmp
out
inc
push
test
mov
loopne
aas
sub
and
sub
testb
pop
push
dec
sub
rorb
mov
adc
mov
xor
loope
sbb
add
sub
cmp
mov
or
xchg
call
vmovhps
mov
clc
pop
filds
jl
jns
cmp
or
out
mov
jp
xor
xchg
add
fsubrs
pop
adc
or
fbld
xor
rcrb
sbbl
pop
sbb
pusha
xchg
add
pop
test
push
mov
negb
mov
xor
mov
pop
add
adc
repnz
push
inc
lods
push
in
imul
ret
out
outsb
mov
outsb
mov
jno
lcall
inc
mov
mov
push
into
ljmp
xchg
add
push
dec
add
fnsave
mov
imul
jns
inc
jp
das
sub
xor
decb
mov
mov
packuswb
and
pusha
cmp
nop
fildl
mov
xor
ja
ljmp
cmp
rcl
sbb
mov
clc
cmpl
cmp
jbe
aam
test
mov
enter
movsl
cs
add
ds
scas
negb
sub
mov
jb
push
fldl2e
clc
or
inc
fcmovne
mov
jle
xor
adc
add
sarl
xor
enter
inc
mov
jno
cld
mov
sbb
push
fidivs
pushf
cmpsl
subb
inc
xchg
pop
add
rcl
ftst
pop
fcmove
jg
inc
xchg
push
jecxz
cmpsl
or
fadd
loope
insl
sbb
cltd
cmpsl
or
cmp
popf
nop
gs
das
push
add
or
lcall
clc
cmp
fcompl
xor
enter
push
into
in
sbb
push
je
std
mov
jbe
fidivl
jnp
inc
mov
imul
cwtl
xor
mov
xor
sub
xchg
div
xchg
ficoml
adc
shr
cmp
pop
js
andl
mov
jo
leave
jecxz
out
repnz
mov
jp
call
and
dec
pop
pop
cmp
pop
popf
in
loop
or
mov
xor
int
pop
loop
xchg
popf
aad
in
dec
add
push
lds
inc
lret
lcall
inc
dec
scas
scas
push
pop
test
inc
bound
sti
incl
add
imul
dec
fwait
lret
pop
or
adc
mov
xor
adc
xchg
sbb
daa
cmpsb
mov
mov
add
stos
cwtl
mov
push
mov
pop
jl
mov
lcall
or
test
aam
imul
popf
push
push
aad
in
cld
fldl
or
and
sahf
sub
shr
dec
adc
in
test
sti
imull
shrl
enter
add
imul
mov
mov
out
adc
sbb
cmp
js
mov
arpl
lcall
repz
es
cs
pop
jo
jmp
xchg
sub
js
lahf
push
or
push
in
lods
cmp
outsb
bound
pop
cmp
lods
das
sti
movsb
andl
lret
mull
arpl
mov
ja
shrb
sub
mov
mov
fimuls
addl
rorb
gs
cmp
sbb
sbb
std
rcr
outsb
call
xchg
push
in
fwait
cmc
and
jo
insb
cmc
inc
xchg
aas
pop
dec
and
addr16
inc
mov
xlat
mov
out
fisttps
mov
push
adc
mov
cmpsb
mov
imul
mov
enter
mov
xor
mov
mov
sbb
pop
cmpsb
or
pop
cmpsl
add
std
lds
mov
add
dec
sub
sbb
or
pop
adc
aam
pop
cmpb
aaa
mov
mov
test
mov
movsb
jae
aam
mov
xchg
pop
sub
notb
mov
adc
insb
fs
cmpsl
ja
jbe
cmp
rorb
cmp
push
mov
fsubrl
jmp
mov
add
out
cmc
imul
hlt
lret
pop
or
sub
cmpsl
xchg
pop
lds
inc
int3
ljmp
mov
or
popa
jp
or
bt
add
push
adc
mov
sbb
aam
cmpsb
and
cwtl
xchg
add
push
xor
loope
ss
pop
pushf
loop
aam
xor
xchg
std
xchg
cmp
pushl
sub
push
mov
call
popa
sub
push
int3
jg
repz
add
dec
sub
std
lea
movsb
loope
lret
shl
pop
push
aam
lea
pop
out
xchg
cmpsb
jg
add
or
adc
pop
shrb
lret
daa
push
int3
sti
imul
push
mov
inc
inc
testl
adc
push
xchg
adc
mov
inc
in
pop
lea
lock
xor
pusha
rcl
jno
push
push
dec
loopne
mov
out
cmp
cmp
mov
sbb
std
cmp
adc
loope
push
sub
push
xlat
adc
insb
mov
sub
adc
out
cmp
movsl
cmp
bound
outsb
sti
fsubrl
fbstp
mov
pop
mov
outsb
jp
push
xlat
dec
sub
scas
daa
arpl
push
ds
out
adc
popf
push
adc
mov
repnz
imul
or
and
loopne
or
sahf
sub
dec
push
or
inc
out
push
mov
push
jo
test
int3
incb
fisttpll
mov
imul
popa
xor
test
mov
cltd
ja
adc
or
mov
or
orb
mov
xchg
or
scas
sbb
add
push
mov
in
pop
cmp
repnz
outsl
xor
mov
xor
mov
pop
mov
cmp
xchg
xor
xchg
jb
pop
xor
rclb
and
ja
imul
xchg
ljmp
leave
add
sub
insb
enter
pusha
sbb
pop
enter
or
jecxz
mov
jp
jecxz
add
dec
xlat
add
addb
mov
pop
push
hlt
mov
jae
inc
inc
rolb
inc
in
mov
cmp
push
decb
aas
mov
cltd
scas
lahf
cmp
or
mov
pop
imul
ljmp
adc
in
mov
inc
into
inc
mov
push
stc
jo
cwtl
inc
notl
pop
decb
subl
dec
out
jo
bound
pusha
xor
sub
ja
lods
cmc
mov
adc
mov
cs
or
sar
pop
and
jmp
mov
in
sbb
cld
inc
sub
lcall
in
pop
sbb
jb
jnp
subb
xor
scas
rol
pushf
mov
cwtl
ljmp
test
repz
sbb
lret
dec
sub
pop
repz
push
mov
inc
jle
shlb
dec
cltd
push
add
lcall
pop
iret
leave
or
push
out
cmp
mov
icebp
adc
or
out
xor
fidivrs
push
in
sbb
es
cwtl
out
xchg
and
cli
xchg
pop
fwait
jp
inc
and
adc
cmp
into
and
and
leave
je
nop
stos
lret
mov
lahf
inc
or
gs
cltd
pushaw
scas
std
fisubs
xchg
nop
arpl
sub
xchg
inc
sbb
cli
adc
add
or
fcoms
aaa
push
inc
mov
out
cmp
push
fwait
notl
jnp
push
out
dec
sar
sbb
xchg
dec
cmpsb
leave
loopne
adc
fildl
ret
movsb
mov
lea
fs
mov
xchg
lahf
jae
inc
push
repnz
or
adc
je
mov
roll
out
cmp
or
push
cld
popa
mov
scas
sbb
mov
sbb
adc
pop
lret
les
xorl
cwtl
ret
push
adc
jb
sbb
sub
sbb
repz
jbe
jmp
pop
insb
xchg
jmp
js
and
aam
adc
mov
xchg
cmc
mov
mov
inc
and
mov
cmp
test
jge
pop
sbb
cmp
add
dec
lods
repnz
inc
sbb
mov
jbe
sbb
out
fcomps
pushf
sbb
nop
push
mov
leave
jno
sub
je
insb
imul
and
jae
ret
adc
loop
push
or
dec
inc
pop
and
cmc
push
mov
dec
movsb
fstpt
xor
pop
jb
addb
lret
mov
sbb
mov
loop
lds
cs
and
es
enter
loope
push
movsb
mov
or
jg
push
inc
mov
mov
xor
jns
add
pop
loopne
push
out
icebp
mov
mov
push
jbe
sbb
int3
decb
stc
stc
add
adc
vmovapd
js
cmp
add
mov
sub
sub
mov
mov
dec
std
jnp
lock
repnz
cmp
cmp
dec
jmp
inc
jnp
mov
mov
sub
xor
inc
or
push
adc
inc
mov
cmpsl
mov
js
ljmp
mov
repnz
mov
xchg
fisubrl
lods
cld
sbb
pop
adc
cmp
cli
outsb
test
dec
or
and
repnz
flds
js
lahf
addr16
pop
mov
arpl
icebp
mov
andb
add
inc
push
xchg
cmpsb
push
call
mov
xor
inc
sub
push
mov
pop
mov
xchg
loopne
xchg
in
mov
push
mov
divl
ret
je
pop
arpl
test
mov
shrl
pop
xor
arpl
and
call
das
cld
adc
mov
ja
cs
jecxz
push
in
int
or
lds
or
mov
or
std
ljmp
cmpb
movsl
setp
adc
xchg
cmp
fdivs
or
mov
in
out
jp
xchg
mov
push
lahf
push
mov
inc
fcmovu
cli
scas
sbb
dec
xchg
adc
mov
cli
cmp
fstpt
inc
or
and
movsb
std
mov
gs
cmpb
jbe
int3
jae
mov
push
cwtl
repnz
je
mov
ret
ficoml
out
adc
fdivs
insl
pusha
xchg
cmpb
and
jne
mov
loop
ret
mov
test
mov
lret
loope
adc
dec
adc
test
cli
jns
lods
push
movsb
mov
jns
cmc
push
dec
rclb
push
popa
push
mov
jg
xchg
in
push
dec
push
jl
mov
xchg
fsubs
mov
das
ficoms
scas
in
jnp
insb
xor
lods
cmp
mov
sbb
and
dec
into
popa
repz
push
mov
push
jmp
ljmp
int3
and
sbb
add
movsb
jns
or
enter
mov
std
or
mov
loop
mov
push
mov
xchg
dec
or
lods
aas
push
xchg
push
adc
inc
js
ror
jge
mov
mov
mov
lret
adc
icebp
jnp
cld
sbb
js,pt
mov
subl
jne
cld
movsl
cmp
sub
cs
sbb
test
xor
inc
outsl
sub
xor
fstpl
jle
and
icebp
in
add
ficomps
pop
daa
push
into
or
enter
mov
aad
push
dec
xor
imul
jno
or
ret
mov
cmp
leave
or
cmp
add
pop
dec
sub
fld
jo
outsl
rcl
sbb
std
xchg
inc
or
sub
sarb
mov
decl
into
pop
push
pop
or
jbe
pop
push
nop
cmp
or
cmp
pop
ss
dec
icebp
inc
jne
jge
sarb
out
jl
call
pop
stc
aam
push
or
data16
popa
xchg
sub
dec
sbb
inc
lea
sub
ljmp
mov
outsb
cmpsb
xchg
cwtl
dec
pusha
lret
and
adc
pop
add
sbb
stos
mov
bound
and
inc
mov
lahf
xchg
pushf
arpl
dec
mov
lods
in
scas
jge
xor
inc
test
popa
jle
nop
outsl
lods
lods
push
cmp
jl
sub
inc
fs
cltd
fsts
mov
push
push
mov
dec
scas
fwait
jb
lds
nop
sbb
into
mov
imul
mov
mov
test
int
add
sub
push
cmp
jmp
xchg
dec
shrl
fstpl
push
hlt
mov
jmp
pusha
jecxz
jns
mov
mov
cs
addr16
aaa
pop
or
sbbb
adc
xchg
mov
xchg
popf
and
in
dec
cs
jmp
adcb
mov
cmp
mov
inc
pushf
cmp
mov
adcl
cmp
sub
add
or
scas
fnstsw
adc
mov
push
xlat
je
jp
mov
sbb
mov
sub
adc
cmc
mov
out
fdivrp
add
cwtl
mov
scas
adc
cmp
xlat
and
sub
ljmp
adc
je
mov
adcl
dec
jo
int3
lea
neg
pop
add
or
ret
jp
fbld
lea
lds
inc
pop
pop
sar
movsb
jae
fdivl
leave
cld
decl
cmovle
lods
push
mov
sahf
pop
sahf
jg
out
jbe
inc
adc
rorl
sahf
aaa
dec
pop
lret
std
sbb
test
arpl
and
dec
rorb
outsl
fdivl
pop
rcrb
sub
mov
jle
mov
adc
mov
mov
das
insb
pop
sbb
mov
dec
jecxz
int3
lock
into
cli
leave
andl
sub
xchg
cmp
insb
mov
cmpsl
push
mov
js
sti
sahf
xchg
out
aam
xchg
stos
xor
mov
filds
xchg
xlat
fisubl
mov
adc
inc
inc
sub
or
dec
lret
rcrb
enter
cwtl
cwtl
repz
outsl
fcompl
add
imull
pop
daa
xchg
pop
push
add
sbb
iret
cltd
test
lock
shlb
fsubp
frstor
mov
add
push
pop
inc
dec
fisubrs
aas
jmp
mov
sub
xchg
std
pop
int
divb
push
cmc
adc
movl
add
jle
data16
mov
xchg
pop
inc
push
mov
xchg
sub
lahf
mov
mov
or
jo
outsb
repz
cld
addr16
cmp
movsl
movsb
jae
push
mov
xor
notb
pop
push
push
push
or
push
dec
sti
pop
or
sub
inc
fldenv
push
add
add
insl
or
push
inc
imul
test
fcmovne
adc
inc
mov
movsl
cmp
xchg
ficompl
or
jg
popf
icebp
jo
push
adc
xchg
notb
cmp
xchg
lret
push
cli
sti
pop
hlt
sub
xor
sub
ljmp
sar
push
xor
popf
mov
std
out
clc
daa
imul
aam
mov
call
dec
arpl
ljmp
jae
cltd
fnstcw
les
cmc
stc
lods
adc
insl
push
or
mov
in
jecxz
jge
sahf
int3
out
out
inc
sbb
rolb
sub
add
mov
cs
mov
adc
jbe
shrl
push
pop
outsb
icebp
dec
into
inc
inc
aad
and
cld
mov
dec
les
pop
and
mov
and
stc
xor
pop
arpl
lds
das
popa
push
int
mov
dec
test
xor
xchg
and
rep
lret
push
jno
repnz
mov
ds
mov
scas
xor
mov
dec
iret
bound
cwtl
rcrb
aad
xchg
jne
ret
push
push
mov
push
sti
add
mov
cltd
xchg
aaa
addr16
out
xchg
int3
dec
dec
cmpsl
stos
pop
addl
dec
mov
mov
inc
push
jmp
xchg
pushf
inc
imul
cmpsb
mov
sbb
mov
dec
lock
xor
xor
mov
lret
cmp
cmp
xor
test
push
in
out
mov
js
adc
mov
xchg
jecxz
inc
fs
xlat
fisubs
inc
jno
hlt
daa
add
js
push
lock
or
mov
xor
addr16
movsb
adc
inc
mov
and
jb
pop
sub
jnp
xchg
sbb
sub
fisubrs
xlat
das
push
stos
cmp
jg
mov
mov
mov
jno
jle
sub
pop
mov
inc
pop
leave
pop
das
mov
sub
lds
and
sbb
cs
jg
push
and
mov
in
pop
push
jmp
pusha
cli
je
pop
pushf
pop
insb
out
and
mov
mov
inc
jl
pushf
outsl
outsl
in
arpl
cmc
pop
movsl
mov
mov
lret
sub
pop
sbb
lret
sqrtps
fimuls
mov
push
lea
jnp
mov
mov
xchg
or
daa
mov
aad
add
fldt
out
add
aaa
push
mov
jnp
lea
aaa
push
out
mov
mov
and
scas
mov
lahf
inc
and
pop
jae
or
pop
or
nop
movsb
mov
pop
jae
push
pop
or
pop
iret
leave
pop
outsl
fidivl
in
dec
leave
lea
lahf
adc
cmp
in
push
mov
sbb
adc
xchg
imul
xor
pop
jns
mov
pop
dec
aas
int
nop
sub
addr16
mov
fistpl
pop
mov
push
popf
idiv
sti
cmp
ja
leave
and
lods
aam
orl
sub
mov
xchg
fwait
imul
pop
or
les
xlat
out
into
adc
leave
andb
xchg
push
adc
xor
jg
dec
xchg
adc
lcall
in
mov
xchg
mov
mov
push
int
mov
inc
out
decl
dec
inc
xchg
pop
mov
test
insb
hlt
pop
push
jae
add
cmpsb
mov
aas
lcall
loop
mov
push
pop
fwait
movsl
sbb
pusha
jb
cmp
mov
lock
xlat
xchg
mov
popa
loopne
sti
rcr
or
pop
loop
test
test
enter
or
sbb
ss
repz
fsubs
outsb
in
and
xor
popa
sub
roll
mov
lods
jle
subb
test
mov
dec
pop
mov
inc
jae
xchg
popa
mov
lahf
cmp
mov
xchg
lock
mov
test
push
je
cmp
mov
push
es
jne
xor
mov
push
cmpsb
fcomi
gs
pop
in
loopne
cmpsl
subb
mov
mov
jmp
or
mov
push
pop
pop
add
dec
pop
adc
push
adc
fwait
mov
pop
adc
pop
jp
mov
push
and
or
rclb
aas
enter
push
mov
jecxz
jmp
push
xor
stc
ds
xchg
xchg
dec
and
scas
push
lods
aaa
bswap
shrl
loopne
push
pop
cltd
subl
sti
add
fwait
cmp
addb
shll
inc
push
into
lahf
mov
shlb
ficompl
inc
and
sub
inc
cmp
lret
dec
push
fcmove
push
sub
pop
pop
data16
test
xlat
daa
dec
lds
arpl
ja,pn
dec
lahf
or
rcrl
fdivs
or
lahf
scas
scas
nop
and
out
ja
xchg
and
push
sarb
cmp
or
lods
rclb
pop
test
hlt
and
xchg
sub
fsubrs
push
loope
jns
mov
sahf
jg
mov
adc
popf
cmp
jg
add
dec
pop
adc
lods
push
push
stc
jecxz
xchg
nop
sbb
and
test
testb
xor
sbb
sahf
lret
pop
push
rep
adc
sub
std
jge
lret
test
add
sahf
add
jbe
mul
jne
xchg
inc
mov
push
pop
add
fcoml
xchg
dec
xlat
pop
cmp
in
push
iret
inc
jmp
cmp
inc
pop
iret
es
cld
xor
push
cmp
sub
decb
rorl
pop
in
xchg
sub
push
and
dec
adc
and
hlt
jb
ja
jl
sbbl
push
sub
inc
pop
cmp
pop
push
div
fdivrp
aaa
cmp
mov
xlat
xchg
loope
lcall
pop
ret
ds
or
fdiv
std
jb
dec
mov
lea
push
lock
dec
int3
jo
les
fisttps
mov
mov
inc
int3
lahf
sub
cwtl
subb
nop
pop
lea
shrl
adc
pop
pop
fnstenv
inc
cltd
arpl
xchg
dec
dec
ja
jne
mov
push
cld
aaa
sbb
xor
or
sub
das
icebp
pusha
or
test
js
adc
pusha
stc
jo
dec
loopne
and
add
std
in
loope
or
popf
mov
repnz
in
add
idivl
arpl
xchg
mov
push
xlat
mov
inc
jmp
xor
cmc
inc
and
mov
out
fiaddl
mov
push
sbb
xchg
xor
leave
mov
push
shr
ret
cli
cld
int3
jecxz
inc
enter
aam
sbb
mov
pusha
sbb
xorb
inc
pushf
mov
and
les
sbb
adc
leave
insb
inc
xchg
mov
mov
aad
jg
dec
sbb
pusha
sbb
out
sahf
frstor
fcoms
xchg
dec
imull
cmp
and
push
or
xorb
push
je
cmp
das
cltd
popa
sbb
arpl
dec
adc
xchg
inc
xor
cwtl
outsb
inc
loop
sbb
fnstcw
lret
ficompl
mov
and
and
xor
mov
cmp
fsts
push
cs
cmp
mov
mov
jg
hlt
loope
in
or
scas
mov
dec
leave
xchg
jns,pt
lock
and
dec
out
fcomip
jne
mov
pop
add
jnp
and
call
popf
or
dec
pop
jne
jne
or
mov
scas
mov
sbb
cwtl
cmp
xchg
sbb
inc
loope
in
les
lahf
or
icebp
cmp
lods
pop
mov
mov
push
jne
pop
loop
scas
adc
xor
in
mov
sbb
insb
mov
data16
mov
imulb
aad
arpl
lcall
add
pop
cld
inc
int3
pop
xchg
dec
mov
filds
cmpsb
push
mov
or
and
dec
jmp
add
mov
add
in
int3
ret
dec
mov
cmp
xlat
mov
inc
out
mov
int
push
lock
lock
xchg
push
stos
xchg
sub
sbb
fildll
mov
push
mov
mov
loopne
add
pop
mov
xchg
cmp
fsub
popa
add
cmp
mov
mov
mov
stos
rcrl
mov
sbb
sar
mov
rorb
cmp
lods
pop
stos
fwait
movsb
jno
imul
add
repnz
add
and
sbb
cmp
jae
xchg
lock
mov
sub
adc
sahf
nop
sahf
hlt
xor
stos
xchg
ret
aam
gs
sbb
jb
mov
mov
jp
sarl
testl
es
and
lea
inc
ds
mov
push
fdivrs
inc
fsubp
mov
aad
outsl
cltd
mov
mov
cmp
daa
mov
test
xchg
xchg
ds
sbb
jbe
sbb
scas
add
cs
pop
push
ss
mov
or
lods
testl
stc
pop
int
stos
push
or
xorl
rcrl
xchg
cwtl
jae
stos
adc
cmp
mov
lods
jl
adc
cmp
pop
stos
pop
or
dec
decl
cltd
ret
mov
xchg
in
int
push
das
adc
bound
mov
dec
xlat
mov
outsb
inc
xchg
shrb
xchg
fiadds
cmpsl
lahf
sub
xchg
or
push
subb
jle
loope
test
dec
movsl
js
aad
push
mov
repz
call
add
mov
addl
xorl
mov
mull
rcrl
das
test
sbb
push
pusha
xor
cmp
sub
sbb
xchg
and
stos
lock
push
xchg
jmp
or
cmpsl
scas
jbe
std
out
in
sbb
dec
jecxz
and
push
mov
sub
dec
cs
inc
add
mov
sar
inc
adc
js
imul
loope
jecxz
xor
scas
cmc
outsb
lock
mov
dec
das
mov
stos
int
inc
sarb
cmpsb
mov
push
sbb
xor
and
mov
or
scas
int
xchg
pop
nop
xor
hlt
testl
ss
xchg
aaa
or
std
jle
sbb
inc
inc
push
or
mov
in
add
inc
push
call
sbb
xlat
pop
nopl
mov
xchg
js
lcall
pushf
xlat
icebp
sbb
cld
push
adc
imul
adc
or
ror
pop
xor
push
lret
pop
sub
xchg
and
stc
in
sarb
sub
mov
jnp
insb
sub
pop
xchg
mov
mov
cwtl
xor
mov
repz
xor
pop
std
pop
repnz
jmp
mov
cmp
dec
cmpsl
adc
sub
sub
inc
stc
out
pop
cwtl
jmp
outsb
ficoms
hlt
xchg
push
jmp
shr
ret
mov
jns
push
bound
sbb
jmp
mov
xor
and
rorl
enter
add
pop
jg
sbb
incl
fwait
xorl
xlat
les
inc
in
push
mov
mov
test
ds
arpl
fsubrl
lods
lret
pop
addr16
addr16
fistl
dec
inc
repz
mov
dec
shll
push
ljmp
or
pop
fisubl
ss
mov
push
fmul
or
push
pop
mov
or
sbb
ljmp
and
rcr
cmp
stos
inc
cwtl
subl
out
adc
sbb
mov
sbb
mov
pop
cmpsb
in
aam
mov
mov
pusha
sub
jle
jge
xor
inc
int3
lock
sub
mov
ljmp
sbb
lea
test
lock
inc
xchg
fists
inc
and
in
out
sbb
jmp
es
add
cmpsb
ja
gs
lcall
jno
icebp
push
lahf
pop
push
mov
out
pop
pop
lds
lock
repz
lea
mov
out
test
cmp
fistps
dec
dec
pop
sub
xor
enter
sub
das
fldt
inc
stos
push
sbb
jns
xchg
push
scas
lcall
movl
cs
imul
and
fnsave
inc
xchg
or
lret
lcall
cmpl
inc
aad
mov
jge
sub
inc
mov
mov
icebp
rcll
je
add
popa
and
pop
cmp
fdivrs
sub
jl
shl
insb
scas
mov
sbb
into
push
sbb
dec
out
enter
rorb
cmc
mov
scas
sbb
push
or
adc
ss
pop
dec
sbb
adc
in
mov
pusha
mov
jmp
mov
push
xchg
and
sub
xlat
out
int
in
mov
inc
test
jecxz
mul
push
jbe
xchg
fnstsw
fbstp
ret
sbb
and
or
mov
pop
xchg
orb
pusha
mov
and
jne
adc
pop
push
jg
xor
je
xchg
mov
inc
inc
stos
fistpl
dec
sbbl
shlw
pusha
xchg
inc
sahf
loop
lret
jl
ss
movsl
adc
shll
les
cmpsb
inc
jmp
lea
insl
dec
mov
inc
xchg
xlat
jne
movsb
mov
jecxz
jae
mov
xchg
adc
lret
and
jno
out
lret
mov
push
scas
mov
call
mov
sub
push
xchg
or
popf
nop
mov
roll
jle
and
mov
leave
dec
inc
jb
lock
or
aaa
dec
fwait
ja
jae
call
loop
xor
push
sarl
outsb
rorl
pop
ds
pop
cmp
or
cmp
ja
lcall
bound
loop
dec
ja
cmpsl
cmp
or
lods
ja
mov
popa
dec
aas
je
jecxz
clc
movl
cmpsl
jo
xchg
repnz
fcomip
inc
jb
pusha
and
nop
cmp
and
pop
xor
ret
push
mov
in
push
clc
popa
jmp
imul
repz
and
and
mov
in
inc
push
cli
lahf
pop
fistpll
mov
mov
mov
dec
add
xchg
imulb
adc
sbb
jl
xor
jne
mov
icebp
and
lret
mov
fincstp
inc
leave
cltd
and
jl
xor
fiaddl
cmpsb
cmovge
push
or
mov
xchg
movsb
cmp
jp
inc
cmp
xor
push
xchg
adc
mov
outsb
sub
iret
lods
aaa
mov
movsl
loopne
lea
inc
dec
fnsave
ret
mov
cmp
in
testl
in
xchg
pop
out
xchg
add
sti
mov
sub
fdivrl
cli
adc
and
jne
jmp
mov
insl
out
jecxz
jg
les
cmpl
mov
push
pop
add
lcall
xchg
js
sbb
mov
incb
push
mov
out
incb
pop
cmp
or
pop
sti
in
aaa
clc
cmp
xor
dec
cmp
das
mov
lods
pushf
sub
sbb
filds
add
mov
mov
sub
jg
es
outsb
add
push
cli
or
cmpsb
sub
fsub
push
jmp
pop
dec
mov
ret
adc
fwait
cmp
xchg
adc
xchg
mov
jmp
push
loope
in
aas
outsl
mov
mov
fstpl
cmpsl
in
cld
imul
roll
sbbl
mov
inc
fnsave
cs
or
fisubl
jl
xchg
lods
inc
add
add
jmp
and
test
jg
sbb
out
dec
pop
loop
int
jnp
cli
jnp
inc
pop
xchg
and
pop
imul
dec
pop
fs
sub
jae
jbe
int
jo
push
fildl
into
mov
push
lods
sub
rcr
mov
jge
fildl
repz
jbe
sub
lods
pop
mov
mov
sbb
push
loopne
jne
push
mov
mov
out
push
xchg
jecxz
loope
clc
outsl
ds
and
jns
and
je
cmc
ljmp
inc
in
xor
lret
les
mov
movsl
adc
pop
std
lock
mov
test
and
jns
push
push
ljmp
movb
out
adc
mov
aaa
sub
stc
mov
ss
mov
xor
pop
pop
jmp
insb
icebp
pop
jne
in
cmc
outsl
popf
push
out
fildl
outsl
movsb
mov
sub
cmp
inc
in
ja
push
sbb
cmp
mov
jle
insb
rol
hlt
movsb
push
lods
sahf
sbb
stos
adc
shll
or
fistl
pop
mov
mov
lds
out
or
scas
jae
push
ja
loop
mov
int3
cltd
xchg
negl
fwait
mov
lfs
push
shl
out
push
shll
mov
sub
fstpt
gs
cmpsl
cmp
mov
adc
push
jbe
push
movl
pop
lret
add
inc
test
insl
sub
in
xchg
jl
push
ja
inc
in
lock
add
stos
or
test
mov
bound
in
adc
adc
in
mov
std
xlat
aaa
repz
seto
mov
or
mov
loopne
jecxz
mov
jno
subl
ret
stc
xor
rclb
lea
sar
iret
pop
aam
mov
sub
fsubr
mov
xlat
and
nop
mov
push
xchg
lds
cmp
mov
fcmove
pop
or
jge
mov
sahf
mov
dec
pop
sub
push
sbb
push
nop
add
pop
jno
add
enter
mov
mov
mov
outsl
repnz
sub
adc
add
std
rolb
cmp
and
mov
int
xchg
stc
xchg
mov
adc
inc
jns
mov
mov
mov
xchg
xorb
int3
dec
pop
mov
inc
cld
neg
cwtl
ror
das
inc
stos
mov
shlb
mov
cwtl
pop
pop
hlt
or
add
fidivl
dec
stos
push
cmc
ja
sub
aaa
pop
in
test
bound
fstpt
call
sbb
les
std
mov
mov
ja
add
in
ret
mov
sbb
push
xor
xchg
add
cli
mov
xchg
mov
sbb
sub
push
sarl
adcb
and
dec
adc
sub
jae
sbbb
or
dec
rcrl
movsl
mov
in
mov
int3
adc
nop
and
push
add
cmp
xlat
and
sub
jg
mov
jbe
repz
loope
xchg
shrl
sbb
aad
inc
cmp
in
out
stc
pop
scas
xor
mov
mov
mov
push
sub
pop
xchg
sub
mov
jb
push
fwait
sub
aaa
dec
jp
std
sbb
or
ret
sarl
jge
sbb
lods
insl
inc
mov
lds
into
daa
cmp
cli
adc
add
or
fistpll
mov
sub
mov
shll
pop
lock
leave
ficompl
out
in
lret
and
jo
sbb
lret
fmuls
add
nop
or
push
inc
shrb
pop
orb
cld
or
adc
jl
js
push
hlt
mov
mov
pop
add
ret
mov
int3
or
mov
lahf
inc
insb
ljmp
xchg
insb
dec
push
or
push
dec
mov
dec
inc
xchg
test
xor
mov
lock
bound
mov
lock
add
jno
insl
jbe
adc
sub
mov
movsl
loope
out
and
push
loope
add
hlt
shrb
inc
data16
or
popa
shrb
push
fldenv
aas
sub
hlt
mov
or
dec
std
addr16
sub
mov
addl
xor
mov
movsl
jmp
xchg
out
das
jnp
ret
stos
fcompp
sbb
aaa
outsl
mov
or
or
cmp
jle
push
mov
test
jge
mov
call
push
mov
test
mov
in
out
adc
inc
push
stos
enter
jb
and
jbe
push
test
mov
mov
add
xchg
jno
sbb
mov
test
idivb
int
xorb
xchg
add
out
shlb
stc
sbbb
jmp
mov
cmc
cmc
or
cmp
cmp
insb
pop
test
dec
push
sub
pop
aad
dec
stos
cmp
push
push
repnz
lret
scas
dec
incb
pop
sbb
popf
aam
stos
inc
xor
xchg
negl
jae
pop
inc
std
test
mov
cld
sub
repnz
xor
jge
cmc
cwtl
imul
xor
bound
lret
xor
enter
mov
iret
movups
add
fnsave
mov
cmp
mov
cmpl
pop
aad
xor
fwait
mov
shr
mov
shll
cmp
cmp
mov
push
hlt
inc
mov
aas
aaa
mov
adc
lock
jne
sub
xchg
pop
cld
es
aad
jb
popa
fnstsw
cmpsl
dec
fdiv
outsb
xchg
xor
xchg
scas
and
push
adc
push
xchg
stc
mov
pop
sub
push
dec
pop
cwtl
inc
ret
cmp
mov
sub
mov
xor
je
cwtl
jp
icebp
adc
xchg
rolb
es
inc
fsubrs
popa
out
ljmp
ss
push
xchg
push
lret
outsl
mov
xchg
ror
xchg
icebp
imul
sub
dec
mov
cmp
sbb
cmp
cmp
mov
push
mov
in
imul
aaa
lock
loopne
and
xchg
ljmp
hlt
jno
sahf
inc
in
call
movsl
je
subb
pop
shl
mov
dec
das
rol
jmp
sub
test
push
pop
xor
cmp
inc
mov
clc
int3
pop
inc
jge
addr16
imul
testb
mov
das
jg
push
int
aas
arpl
call
daa
jl
adc
xchg
ds
iret
cltd
xor
xor
adc
aaa
xor
popa
pop
add
scas
scas
int3
jne
lds
mov
imul
test
jge
fwait
mov
mov
cmpsb
ret
test
dec
lods
shrb
test
jbe
gs
mov
rcll
jle
shlb
jnp
stos
rol
push
mov
ret
not
fdivrp
repnz
mov
out
lods
inc
mov
push
test
adc
jle
inc
xchg
mov
int3
push
stc
sahf
daa
cli
push
or
push
inc
or
mov
ja
sub
and
fisubrl
call
inc
inc
repnz
push
stos
ficompl
pop
dec
add
mov
lods
dec
xor
rcrl
jecxz
lret
clc
shrb
in
fists
mov
int3
mov
xchg
fistps
mov
lahf
push
unpckhps
mov
sti
and
and
jecxz
out
in
lock
stos
sahf
and
dec
sbb
inc
pop
adc
add
addr16
das
rorl
adc
das
lret
sbb
inc
ja
xor
testl
fcmovnbe
and
mov
add
mov
push
add
and
test
ds
pushl
rorl
lock
pusha
and
shrl
xchg
inc
aam
sub
ret
inc
mov
xor
rorl
stc
ja
xchg
roll
les
or
jmp
mov
sub
cli
icebp
repz
mov
rcll
popf
sti
mov
or
dec
outsl
lcall
std
xor
imul
cmp
fcoml
comiss
repz
mov
out
je
sbb
js
sarb
and
test
or
push
mov
call
jno
mov
adc
push
adc
and
xchg
je
push
mov
jno
imul
cwtl
push
sti
mov
cltd
mov
ret
jge
jae
sbb
rcrl
cmp
aas
xlat
arpl
std
sub
or
jl
push
jle
sbb
push
inc
je
dec
cli
cs
xor
sbb
sub
sti
roll
xor
inc
test
in
stos
negb
in
xchg
scas
fwait
jb
push
leave
and
mov
jl
pop
jle
ljmp
iret
and
loopne
or
lea
repz
cs
popf
gs
jecxz
mov
pop
push
lcall
int3
add
mov
push
dec
push
sar
les
push
jmp
xchg
jae
popf
orl
jnp
arpl
pop
xor
mov
and
mov
insb
mov
or
cmp
lea
pop
daa
push
sub
ret
or
sbb
fdivrl
aad
out
dec
add
pushf
mov
pmulhuw
loop
and
mov
xor
inc
xlat
push
mov
add
stc
aas
jmp
pop
clc
stos
pop
mov
cmp
bound
adc
sbb
xchg
xor
mov
aam
pop
fdivl
xchg
mov
mov
inc
ficoml
xchg
mov
xchg
cmpsl
inc
inc
nop
enter
cli
popa
xor
jmp
mov
push
adc
lcall
test
imul
or
ret
xchg
mov
ret
sub
out
and
jns
xchg
flds
scas
and
cmp
xchg
cld
rorb
and
pop
jno
dec
int
sbb
shl
mov
dec
call
roll
negl
jae
xchg
jmp
decl
lds
xor
sub
and
sbb
mov
fmull
or
hlt
sub
push
push
and
jge
repz
rorb
pusha
ret
ret
xchg
inc
push
sbb
and
and
loop
ds
clc
stc
ja
inc
into
adc
fnsave
cld
add
pop
push
jnp
mov
push
xchg
scas
test
enter
divb
push
icebp
xchg
push
cmp
xchg
pavgw
xor
cli
xchg
or
and
pop
or
das
dec
aaa
mov
mov
push
jb
mov
xchg
mov
push
xlat
pushf
gs
cmp
ja
bound
cmpsl
mov
xor
mov
cmp
out
adc
xchg
jne
cmp
jmp
dec
dec
mov
int
inc
sub
cmp
add
test
iret
sub
fcoms
call
jne
pop
cmpsl
imul
xor
push
mov
scas
cs
cmpsb
cmp
push
add
jge
insb
rorl
daa
xor
jecxz
mov
fmuls
or
jb
pusha
popf
cld
shr
sbb
int
mov
push
jmp
adc
push
testb
ret
mov
test
lock
mov
cmp
mov
sbb
fnsave
pop
add
mov
das
sahf
mov
test
movsl
sti
add
mov
test
in
out
xchg
ret
cmp
add
je
cmp
scas
and
add
or
fisubrs
cmp
dec
insl
jo
cltd
nop
mov
mov
adc
adc
push
hlt
imul
das
add
testb
mov
sahf
jl
cltd
aad
movsb
and
mov
cmp
xor
cmpsl
sbb
jle
fs
das
gs
popa
movsl
lret
aaa
xchg
push
out
pop
or
aas
es
adc
jae
cmp
mov
jl
adc
sub
enter
inc
sub
mov
scas
lock
push
push
popa
pop
stos
test
into
pop
cltd
outsl
xor
adc
cmp
add
mov
mov
stc
inc
xor
xor
mov
dec
add
push
push
push
fcoms
andl
push
js
cmp
sbb
rcrb
pop
mov
push
or
cmp
call
shll
adc
lods
pusha
insb
aas
cltd
or
dec
lods
outsb
sbb
push
adc
leave
and
icebp
rcr
stos
stos
pop
loop
xorl
and
mov
inc
repz
mov
sub
roll
cs
pop
xor
ds
pushf
dec
lods
bound
inc
jl
inc
xor
repz
add
outsl
or
push
jp
mov
sub
adc
mov
jbe
mov
sbb
cmp
cmpsl
xor
scas
cmc
jb
testb
sbb
jp
push
mov
xchg
scas
imul
sub
icebp
lea
sahf
addr16
arpl
xor
sahf
dec
push
pop
xchg
movsl
mov
fbld
hlt
mov
rclb
in
sbb
cmpsl
adc
mov
rcrb
scas
das
mov
or
call
subps
ljmp
jo
lds
das
mov
push
mov
mov
sti
or
push
xchg
pop
inc
lcall
cli
loope
mov
pop
cld
jne
inc
mov
into
loopne
jbe
in
or
pop
icebp
fildll
std
inc
lds
out
mov
lea
mov
js
arpl
mov
aad
movl
in
sub
pusha
sub
ret
mov
in
imul
inc
in
adc
dec
inc
xor
imul
jns
nop
lret
movsl
jl
scas
test
xor
sub
popf
andl
or
mov
cmc
loope
out
sub
hlt
loope
mov
sub
inc
jle
cltd
lret
inc
outsl
mov
dec
pop
cmp
out
cmp
dec
in
aas
sub
xlat
sbb
fwait
push
xor
lods
hlt
stos
pushf
stos
frstor
clc
fidivrl
inc
test
int3
out
add
push
imulb
xchg
sub
pop
jbe
cs
inc
outsb
and
into
mov
loop
fcomps
lret
and
mov
repnz
or
mov
rorb
push
cwtl
out
jo
popa
shl
ja
and
sbb
xlat
adc
pop
cmpsl
aad
test
fld
sub
mov
negl
push
pop
jb
xor
lret
std
leave
or
inc
stc
inc
sbb
sub
cltd
mov
repnz
sub
loopne
pushf
inc
test
dec
out
call
cmpsb
push
popf
pop
aad
mov
add
out
jecxz
cmp
or
dec
enter
imul
jnp
loopne
js
ja
in
or
jae,pn
xchg
mov
test
out
pop
ucomiss
loope
adc
or
and
sbb
jns
push
cmp
jmp
cmp
fwait
sbb
repz
pop
rcrl
fisttpl
sub
xchg
jo
push
loope
or
mov
clc
mov
adc
inc
rorl
lds
nop
out
outsb
mov
push
scas
push
les
cmp
adc
daa
stos
xor
fists
and
xlat
push
inc
adc
mov
push
inc
scas
loop
stos
xchg
lcall
cwtl
adcl
fbld
test
out
inc
out
std
daa
lea
arpl
xlat
inc
pop
jg
jmp
mov
sub
jle
icebp
gs
subb
out
addl
push
je
std
cltd
xor
das
lea
fcmove
xor
daa
loop
and
or
jl
pushf
outsl
mov
jne
mov
imull
insb
push
cltd
jmp
and
test
pop
out
mov
fistps
dec
jp
popa
adc
inc
imulb
sbb
or
in
push
aam
cs
push
pop
out
mov
pop
cmp
mov
pop
dec
adc
iret
inc
addr16
push
jae
repnz
orb
lds
stos
cltd
xor
stc
nop
jle
fisubrl
ja
pop
and
mov
sar
stos
xchg
add
dec
mov
fimuls
popf
mov
rol
pop
lods
mov
xchg
jge
mov
mov
pop
dec
xor
jae
insb
je
and
fwait
inc
xchg
mov
ror
mov
inc
fimull
ss
jbe
or
or
sbb
mov
mov
xor
fucomp
ror
int3
mov
and
mov
ds
and
cmp
mov
dec
xor
test
adc
std
mov
loopne
shrb
pop
lds
outsl
shl
fwait
mov
push
fsubl
sbb
xchg
arpl
loopne
test
jo
outsl
push
clc
fidivrl
insl
sub
push
adc
ret
fisttpl
and
mov
fdivs
or
inc
test
arpl
es
pop
ja
pop
cmp
insl
jmp
pop
cmpsl
sub
popa
mov
out
dec
rol
cs
icebp
and
loop
aas
scas
pop
push
xchg
inc
push
repnz
out
adc
cmpsb
xor
mov
popf
mov
push
das
cmpsl
pop
fnstenv
jge
daa
sub
and
jmp
cmp
inc
das
outsl
inc
imul
mov
inc
xchg
push
cmp
xor
les
pop
mov
add
test
xchg
ret
movsl
mov
mov
adc
sbb
dec
xor
pop
punpcklwd
adc
cmc
mull
dec
fwait
inc
push
inc
arpl
pop
and
mov
adc
ficoms
add
inc
adc
inc
fdivr
add
cmc
inc
pop
add
push
jecxz
adcb
mov
push
add
sub
cmp
xchg
cwtl
xor
aam
or
filds
pop
lcall
iret
outsl
out
pop
pop
cmp
sub
hlt
lock
daa
xchg
clc
mov
or
sub
sarl
loopne
jo
or
or
pop
dec
rorb
cmc
outsb
dec
push
std
pop
int3
dec
xchg
xlat
mov
sbb
outsl
sbb
add
mov
pop
enter
pop
cmpsl
movsl
aaa
popf
mov
fimull
jg
fsubr
and
push
push
nop
jmp
dec
xor
bound
shlb
iret
popf
inc
inc
pop
cltd
adc
mov
roll
andl
mov
push
fwait
inc
mov
daa
cmp
dec
clc
sarb
dec
outsl
adc
das
in
xchg
adc
mov
and
test
pusha
imul
cmp
or
mov
sbbb
popa
es
mov
fcmovnb
clc
stos
pop
fidivl
mov
aam
imull
ljmp
or
aas
sbb
js
pop
fwait
test
inc
imul
xchg
dec
pop
fldt
mov
xchg
mov
mov
int3
in
imul
mov
imul
sub
push
shl
sahf
lods
dec
pop
xor
dec
jnp
xchg
add
scas
aam
loope
and
mov
and
sbb
sub
in
xor
mov
addl
jge
mov
mov
or
mov
mov
sub
push
mulb
jle
mov
mov
aaa
mov
xchg
aaa
notb
mov
pop
fwait
cli
stos
mov
jns
cs
mov
push
roll
add
lahf
adcb
in
xchg
xchg
jns
leave
js
and
adc
ljmp
mov
mov
sbbl
xor
inc
push
aad
dec
xor
jl
xchg
loope
lock
daa
mov
data16
xchg
dec
stos
add
jno
xchg
loopne
lods
xor
jl
xchg
fistps
mov
xchg
mov
jmp
test
inc
xlat
inc
dec
jp
jae
sbb
sbb
mov
inc
les
ljmp
orl
or
push
stos
dec
pop
push
add
push
or
adc
xor
sub
dec
jae
orl
mov
push
add
xchg
rclb
and
shrl
arpl
outsl
cmpb
das
rorl
mov
xor
lea
addr16
shll
lds
loopne
adc
mov
dec
mov
xlat
cmp
jae
push
add
pushf
xor
loope
outsb
enter
add
ss
fstp
cmp
cmp
fsubl
into
and
je
lods
sti
push
pop
daa
frstpm(287
jnp
stc
divl
imul
das
mov
push
xor
adc
xchg
sbbb
sbb
xchg
loopne
stos
addr16
sarl
aaa
or
leave
stos
mov
outsl
ljmp
jmp
mov
scas
out
idivl
das
and
mov
push
cmp
imul
sbb
jl
pushf
mov
adc
pop
sbb
sbb
pop
push
dec
push
call
inc
ss
cmp
aam
pop
ficoms
jle
jp
lds
cmp
jmp
mov
in
push
or
lods
arpl
scas
or
fistpl
das
xchg
int
xchg
aas
test
es
loop
sbb
mov
inc
and
mov
inc
push
cs
xor
aas
pop
pusha
cmp
adc
mov
sub
push
dec
sub
sub
dec
movl
jl
adc
dec
cmp
push
andb
add
jge
xor
jns
pop
add
dec
adc
rclb
or
jno
inc
int
and
mov
dec
mov
mov
xchg
push
roll
andl
js
push
into
xchg
icebp
mov
mov
or
inc
xchg
mov
xor
repnz
mov
dec
js,pt
pop
loopne
icebp
dec
dec
test
xor
in
xchg
roll
adc
lcall
and
rcr
arpl
xor
into
repz
push
cmp
rdtsc
lods
cmc
inc
lock
inc
xchg
sub
add
jmp
mov
mov
sub
dec
movsl
mov
popa
in
pop
mov
seta
popa
add
jnp
aad
movsb
mov
sbb
or
or
ja
lret
or
mov
bound
mov
sub
lea
xchg
adc
dec
movl
cmp
dec
out
enter
and
sbb
adc
fdivrs
mov
pusha
mov
dec
fcoml
jmp
lds
or
jmp
and
std
push
add
or
xor
push
jge
add
and
lock
fisubrl
or
xchg
ja
jae
sub
stc
mov
cmpsl
mov
rcrb
aas
jg
xor
das
jp
push
aam
add
xchg
dec
mov
ficompl
inc
das
fs
jno
icebp
loope
inc
rolb
in
aad
insl
cmp
stos
adc
shll
popa
xchg
push
push
cmpsl
push
test
dec
bts
stc
imul
fldcw
mov
ret
popf
dec
mov
pop
and
stos
cli
incl
ja
jmp
xor
adc
jo
lahf
push
fnstcw
sbb
ds
repnz
scas
icebp
rcr
sub
jae
jnp
push
pop
rcrb
jae
rol
or
fmull
mov
xchg
mov
dec
cwtl
jp
repz
loopne
shlb
mulb
jle
fdivr
and
and
andl
cmp
pop
and
shl
sub
pop
inc
repz
mov
add
pop
cmp
xchg
push
std
loop
lahf
test
stos
pop
imul
fadds
test
mov
adc
inc
cltd
xor
cli
es
mov
sbb
sbb
or
push
cli
sbb
stos
push
lea
dec
xor
mov
jmp
and
push
and
xchg
jae
xor
mov
or
pop
inc
in
mov
repz
ret
fadds
mov
xchg
adc
int
cmp
push
adcl
sbb
insl
test
mov
mov
lea
mov
mov
sub
shlb
jecxz
jb
mov
push
in
sub
test
jp
aad
out
test
inc
xchg
les
dec
jle
dec
out
scas
push
jae
cmp
sbb
enter
dec
fcompp
addr16
push
and
lcall
movsb
add
negb
cmp
push
add
mov
sub
sub
aas
mov
les
jl
or
mov
xor
xor
add
inc
fistpl
sbb
xor
in
les
shl
mov
lret
mov
in
sub
or
pusha
add
nop
pop
or
xor
dec
clc
xchg
cmp
or
addr16
popf
mov
jecxz
stos
shrl
in
or
xor
dec
push
sbb
cmp
clc
and
cltd
dec
push
decl
jb
cli
arpl
mov
xchg
pop
ja
pusha
adc
out
cmpsb
jecxz
scas
mov
std
cs
pop
pop
sbb
sbb
pop
popl
xor
xor
enter
and
sbb
fcom
in
xchg
shrb
shl
xchg
test
sahf
leave
pop
and
adc
cmp
push
jno
mov
iret
and
adc
dec
cmpsl
pusha
add
or
repz
repz
lahf
mov
add
gs
mov
stos
out
fists
lds
mov
or
xor
ljmp
cmp
imul
in
cmpsb
jecxz
dec
shrb
add
pop
sub
out
aas
xor
push
xchg
out
sub
int3
pop
push
xlat
dec
cmp
xor
nop
inc
inc
mov
xchg
and
in
dec
es
xchg
sub
in
ret
mov
adc
pop
out
jns
je
jo
aad
imul
pop
dec
xchg
and
lret
xchg
sub
cmp
gs
mov
movsb
xor
stc
popf
sub
ljmp
inc
pusha
push
mov
lods
rep
test
push
iret
push
loop
push
test
cmp
mov
xchg
pop
out
lret
test
leave
sub
andb
sub
dec
test
xchg
lret
mov
dec
outsl
out
lcall
xor
adc
loopne
pop
mov
push
test
sub
cld
fisubrl
mov
daa
xchg
pop
sbb
lret
mov
push
lods
fadds
pop
rorb
iret
xor
inc
add
jns
div
and
je
push
sbbl
jb
xor
test
idiv
lahf
repnz
aam
insl
mov
sbb
xchg
aad
icebp
loopne
jne
add
es
add
test
out
lea
jae
push
data16
lcall
out
add
mov
pop
xor
or
cltd
stos
jnp
data16
mov
dec
data16
xchg
inc
sub
inc
ljmp
xchg
pop
push
lods
imul
sub
push
nop
out
sbb
add
push
xchg
push
hlt
insl
dec
mov
lcall
mov
lds
sbb
push
inc
push
mov
inc
push
push
mov
stos
push
leave
lcall
sbb
lcall
loopne
cltd
mov
test
popa
xchg
insl
in
and
dec
cltd
lret
jge
xlat
incb
and
and
lcall
out
rorb
fs
fwait
push
push
sbb
or
pop
jb
dec
mulb
in
xchg
cmp
xchg
das
aaa
sbb
mov
mov
sahf
mov
pop
xchg
lahf
es
imul
cwtl
push
inc
in
addr16
sub
jle
scas
lret
popa
mov
or
addr16
leave
lret
repz
int
icebp
jbe
pop
jp
popa
pop
test
nop
push
fnsave
cmp
iret
xchg
icebp
pushf
jno
int3
push
pop
add
mov
call
dec
int3
test
adc
pop
dec
fidivl
mov
ret
adc
iret
jmp
xor
and
popa
sub
cmp
shlb
xchg
stos
xchg
add
xchg
push
cwtl
ja
sar
dec
insl
nop
ret
cs
xchg
dec
imul
or
inc
andb
mov
cltd
lahf
add
jle
adc
cmc
xchg
dec
movsb
cmp
arpl
pop
out
out
pop
jp
enter
icebp
out
xor
repnz
mov
xor
sbb
pop
jmp
cld
ret
xor
frstor
mov
push
sbb
call
pop
es
in
lods
cmpsb
mov
jl
lds
into
xor
enter
and
aaa
cmp
push
jp
ss
in
in
loope
mov
inc
shll
ret
das
stos
add
mov
in
inc
or
and
sub
clc
stos
andb
sbb
jge
adc
mov
jmp
stos
sub
xor
push
insl
mov
mov
ret
pop
mov
nop
test
push
sbb
into
lret
imul
sbbb
loopne
xchg
mov
jo
mov
dec
mov
or
test
sarl
jle
loop
pop
sub
lret
les
sub
out
sub
add
scas
shrb
sub
lea
sub
jmp
lea
push
push
mov
pop
mov
push
or
aas
mov
pusha
jecxz
pop
je
lods
test
jne
or
or
mov
fs
mov
pop
xor
call
or
aam
arpl
fisttpll
push
js
sahf
sub
mov
cmp
out
push
or
test
std
shll
jbe
xor
inc
pop
lcall
xor
fnstcw
jp
aaa
add
lcall
shlb
cmp
idivl
push
mov
adc
pop
aam
mov
jge
cli
iret
or
movsl
sbb
hlt
xchg
inc
xchg
sahf
in
sub
xchg
repz
lock
sbb
push
add
pushf
xchg
data16
ja
icebp
insb
sub
fs
mov
or
enter
cmpb
enter
add
xchg
out
ret
fldl
sbb
mov
aaa
aam
cmpsl
and
scas
adc
sbb
sbb
int3
push
push
pop
pop
aad
cmp
test
dec
mov
xor
mov
adc
mov
out
stc
lea
fiadds
jmp
dec
mov
ss
inc
dec
popa
push
xlat
fdivrs
push
shr
in
xchg
pop
jle
and
repz
add
jmp
pop
xchg
pop
add
sbb
and
arpl
out
gs
clc
lcall
and
cmp
imul
negl
pop
mov
inc
mov
punpcklbw
cmpsb
lahf
outsb
cwtl
pop
inc
jg
imull
pop
xorb
jmp
idivl
mov
pop
adc
lea
lea
cmc
pop
add
in
mov
and
and
inc
mov
jb
and
stc
mov
xchg
jbe
and
leave
popf
pushf
adc
mov
push
sub
jmp
xor
daa
mov
add
mov
ja
sbb
shrl
jae
divl
and
shl
mov
or
bts
into
cs
fidivrs
cmpsl
cmc
sub
mov
jmp
sbb
inc
gs
outsb
jecxz
mov
rcll
push
subl
jae
rorl
pushf
aam
mov
xor
or
or
and
xor
cmp
aaa
sbb
adc
adc
stos
jmp
xlat
out
and
testl
jp
fcom
out
add
hlt
jmp
shlb
dec
pop
xchg
psadbw
mov
pop
mov
pop
les
jns
adc
jge
mov
imul
sub
or
lock
das
and
pop
inc
xchg
sbb
mov
subl
pop
push
pusha
jns
xchg
inc
test
push
mov
outsl
je
mull
mov
outsl
nop
arpl
cld
mov
mov
nop
pop
mov
popa
data16
dec
mov
push
incl
push
inc
cmp
out
xor
push
push
idivb
in
divl
cli
into
jo
xorb
cmpsb
scas
inc
jl
jge
xor
jo
push
sbb
cmp
sbb
jmp
pop
pop
sbb
and
and
or
ret
mov
xchg
pop
xchg
cmpsl
aas
clc
into
inc
sbb
movsl
mov
popf
jne
inc
inc
lcall
mov
pop
xchg
push
aas
out
pushf
aad
lds
iret
je
jns
scas
sub
test
jno
mov
push
ret
je
dec
xor
mov
mulb
js
mov
movsb
sub
andb
cs
addr16
push
cli
add
lods
cmp
mov
cmp
push
fidivl
sbb
fidivs
xor
jnp
ret
mov
sub
adc
mov
or
pop
mov
rolb
pushf
mov
cwtl
adc
push
add
xchg
shlb
mov
sti
insb
cmpsb
stc
cmp
xlat
push
nop
fcoml
or
sar
adc
cmpb
mov
js
fmull
lods
push
pop
sbb
mov
fcmovb
dec
sbb
xorb
push
test
mov
sbb
std
push
add
sbb
xchg
mov
dec
imul
push
hlt
mov
pop
imull
addb
dec
push
or
inc
cmpl
outsb
outsl
aas
je
inc
stos
xchg
adc
sub
insb
data16
xlat
cli
sub
pop
mov
out
dec
fdivrl
pop
dec
test
out
shlb
imul
rorb
sti
jmp
hlt
mov
pop
jno
adc
sub
rclb
mov
outsb
mov
lcall
js
ret
push
xchg
sbb
sbb
xchg
mov
dec
inc
jl
mov
sbb
mov
or
sbbl
lcall
cmp
adcl
mov
jo
out
lock
mov
in
jl
add
jb
cmp
cmpsl
xchg
pop
dec
mov
inc
mov
xor
cltd
fwait
pop
ffreep
faddl
les
stos
jns
into
loop
pop
sbb
addr16
fadd
mov
gs
out
mov
mov
pushf
push
push
out
sti
adc
xor
call
mov
in
jecxz
es
subb
add
xchg
xchg
mulb
mov
cmpsb
push
cmpsb
pop
incb
pop
test
mov
fidivrl
data16
xor
mov
or
mov
jne
loop
xor
clc
leave
stos
lods
add
inc
imul
loop
pop
addr16
nop
jecxz
ljmp
outsb
mov
jne
and
ret
bound
jecxz
push
mov
pop
in
and
enter
lds
inc
shll
in
sbb
stos
xlat
sub
jns
js
cwtl
pop
imull
int3
pop
in
fwait
ds
pop
adc
inc
pop
mov
int3
aaa
daa
ret
add
bndstx
fdivrl
and
roll
int
mov
scas
jp
push
pusha
jns
lcall
movsl
bound
lods
jno
inc
ljmp
mov
lods
dec
mov
das
repnz
push
mov
mov
mov
popa
pop
xor
imul
cmp
xchg
addr16
cmp
inc
fmul
sbb
imul
inc
mov
ret
iret
clc
lcall
jp
gs
cmp
mov
lret
cwtl
xor
mov
pushf
inc
les
pop
enter
or
es
inc
and
cmp
xor
iret
xchg
je
xchg
add
in
xchg
sub
and
cmp
daa
fistpll
pop
push
push
out
gs
add
inc
or
xor
sbbb
jl
in
loop
and
inc
ljmp
inc
sahf
jle
inc
mov
fnstenv
inc
jp
jne
outsb
adc
mov
jns
aam
loope
repnz
daa
stc
mov
pushf
jmp
xchg
stos
scas
jle
mov
or
lods
cmpb
or
xchg
loope
add
mov
sbb
fsubrs
aaa
insl
les
je
cltd
xchg
enter
and
sbb
xor
notb
mov
and
pop
mov
in
repnz
dec
movsb
dec
and
daa
add
in
cmp
mov
scas
stc
jmp
pop
cmp
mov
sub
and
lcall
xchg
inc
adc
fnstcw
pop
aaa
adc
xor
xchg
cmp
stos
neg
imul
loopne
adc
sub
mov
fisttpl
cmp
loop
jo
sub
cmpsb
xor
push
or
adc
out
fadds
pcmpeqw
ret
inc
sub
sbb
push
sahf
mov
xchg
fldenv
sub
pushf
std
mov
test
leave
movq
lock
mov
test
std
lods
fs
pop
pop
ja
movsb
pop
es
sub
je
addr16
cli
ret
mov
add
pop
mov
rcll
fnstsw
mov
sbb
test
sub
cwtl
mov
push
sbbb
insl
sbb
pop
stos
fidivs
add
push
movsb
xor
out
test
ficoml
out
sbb
notl
lret
sbb
mov
xor
dec
and
dec
xor
test
aas
mov
fs
stos
or
lods
mov
fwait
ss
enter
daa
xor
std
mov
out
mov
jle
xor
fs
push
cmp
scas
adc
or
inc
or
imul
sarb
jbe
mov
fimuls
lret
jge
icebp
sbb
mov
out
lea
jne
movsb
sbb
adc
es
js
clc
or
or
jo
test
sub
aad
cmp
or
pop
ja
mov
rolb
ljmp
mov
aam
in
and
in
mov
mov
add
sti
dec
sub
inc
adc
mov
or
adc
aam
pushf
insl
arpl
mov
inc
add
jl
pop
push
xchg
sahf
xor
add
div
pop
jne
cmp
sti
jp
mulb
xor
mov
fisubrl
adc
dec
shll
mov
cmp
mov
adc
lret
sbb
mov
outsb
xor
inc
and
pop
mov
cwtl
mov
lea
mov
filds
mov
mov
bound
cmp
fcomi
cwtl
push
in
pop
dec
pop
in
lods
cmp
add
sbb
push
outsl
jne
mov
and
adc
cmp
jmp
add
pop
out
sbb
out
dec
cltd
pop
push
or
cmpsl
gs
xor
fstpl
pop
inc
xchg
lds
push
shll
stos
xor
mov
mov
jge
mov
dec
loopne
push
dec
push
cmp
push
mov
dec
mov
xchg
ljmp
in
xlat
jb
xor
inc
lret
push
inc
je
sbb
or
or
sahf
or
addr16
xchg
inc
jo
mov
ror
xor
imul
stc
mov
xchg
xchg
mov
scas
daa
pop
mov
iret
push
lret
lahf
fidivrl
jmp
lret
inc
pop
cmp
movsl
mov
dec
mov
or
or
adc
xchg
in
jecxz
nop
push
inc
xchg
mov
jae
repz
jo
inc
xor
add
jmp
fucomi
push
jne
aaa
scas
push
int3
and
xor
faddl
insl
jns
inc
push
and
inc
xor
pop
movsl
pop
inc
out
insl
outsl
push
cmp
mov
ret
cltd
aas
xchg
sub
xor
out
fstl
je
testl
jle
push
jp
stos
jg
daa
inc
lahf
popa
adc
stos
or
cs
pop
adc
xchg
xchg
and
jbe
popa
or
cmp
loopne
push
imul
daa
and
cltd
add
mov
les
flds
and
mov
loope
push
inc
movsl
or
leave
sub
sahf
mov
cmpsl
cli
push
jecxz
in
and
and
push
lahf
and
jge
push
cmpsl
fucomi
sarb
jle
cli
scas
mov
lock
push
sahf
cmp
push
loopne
enter
jle
cli
mov
lret
stos
fisttpll
jmp
testb
pop
xchg
out
int
fidivl
fistpll
jbe
lods
xchg
inc
mov
hlt
lcall
ret
ljmp
inc
push
jnp
xlat
and
push
xor
mov
add
push
sub
sti
jmp
incb
scas
divb
mov
into
pop
cmp
adc
xchg
xor
mov
movsb
mov
jb
push
mov
adc
adc
loopne
inc
xchg
std
orb
push
movsb
mov
pop
sub
in
pop
ret
push
stos
sbb
sub
and
pushf
dec
or
push
and
sbb
lods
mov
call
sbb
xchg
adcl
jnp
rolb
or
jb
lcall
mov
mov
adc
pop
add
test
cmp
add
mov
xchg
adc
push
sub
mov
orl
mov
cmp
add
data16
lods
clc
imul
add
jo
adc
lods
dec
loope
fs
loope
adc
push
lret
add
negl
lcall
sbb
xor
leave
test
lock
mov
int
ja
addr16
mov
aam
in
jecxz
jl
fmuls
xor
ss
inc
lods
cmp
adc
iret
test
xor
xor
and
push
imul
mov
xchg
xchg
mov
inc
and
lods
repz
inc
or
mov
roll
out
add
repnz
imul
mov
dec
inc
pushl
inc
int
cld
rcll
jae
push
aad
hlt
jne
outsl
cltd
scas
idiv
and
mov
inc
clc
jae
ffree
push
notb
xchg
idivl
rolb
jg
scas
fwait
movsb
xlat
dec
jns
in
push
sahf
jae
adc
lods
fildll
repnz
roll
mov
and
aaa
xchg
stc
out
sbb
ror
stos
in
in
js
icebp
pushf
and
pop
pop
xchg
sub
cs
mov
cmc
xchg
inc
clc
or
dec
fnstcw
mov
jg
pop
call
xor
push
xchg
out
xlat
dec
cli
jecxz
dec
in
or
in
mov
leave
mov
mov
xchg
ret
mov
pop
mov
inc
add
adc
xor
or
cmp
inc
add
test
and
inc
mov
stos
xorb
sub
or
push
mov
fisubl
xor
insl
and
xor
pusha
inc
rorl
test
sbb
inc
add
push
ret
ror
inc
pop
sbb
shrb
xor
std
pop
jle
inc
loop
fmull
xchg
leave
and
mov
ljmp
add
nop
push
mov
push
jle
popa
fdivrs
add
cltd
jbe
mov
xor
mov
jg
pusha
or
lahf
imul
mov
je
xor
mov
sbb
fildll
mov
out
add
ljmp
pushf
push
data16
add
test
hlt
fnsave
and
mov
xchg
fwait
and
pop
outsb
adc
fwait
bound
ss
loop
cmp
inc
ds
inc
xor
in
test
bound
pop
inc
push
js
sahf
lea
jnp
mov
add
mov
enter
std
shrl
ret
lahf
adc
data16
dec
add
nop
imul
mov
ret
js
lods
fisttpl
fcmovu
cmp
clc
int3
and
jg
in
and
dec
aaa
cltd
std
xchg
adc
insl
xchg
dec
and
aaa
mov
mov
mov
adc
fwait
mov
jae
rcrb
dec
scas
es
mov
jle
dec
jo
add
hlt
jmp
xlat
and
lods
clc
add
into
test
and
mov
aas
stc
ror
xor
mov
mov
mov
inc
cld
out
jne
loope
or
test
pop
dec
lods
outsb
pop
push
cmp
pop
jmp
xor
lock
dec
and
outsb
cmp
mov
cmp
inc
mov
xchg
adc
adc
pop
ss
push
lahf
jp
insb
cli
ljmp
jge
es
jge
jl
pop
jecxz
or
in
xor
add
sub
and
sbb
gs
test
xchg
into
ljmp
or
add
xorb
mov
addb
call
cmpsb
out
std
mov
cmp
repnz
mov
addr16
sbb
sub
shll
outsb
sbbl
push
and
std
sub
inc
dec
dec
imul
mov
dec
adc
mov
pusha
jne
mov
inc
or
test
dec
mov
sarb
lahf
cld
dec
lret
jbe
or
stos
shll
cmp
cmp
push
movsb
xchg
aam
repnz
insl
inc
test
fistpl
sbb
push
or
cwtl
or
sbb
jae
mov
outsl
inc
int3
pop
mov
in
cld
cli
xorb
sub
sbbl
clc
cmc
or
fmull
shr
inc
jmp
push
inc
mov
sbb
shlb
and
movsb
cmc
repnz
pop
mov
ss
add
inc
sbb
insl
mov
out
xchg
or
lds
mov
enter
xchg
sub
inc
inc
dec
mov
or
lretw
orl
add
mov
ljmp
scas
sti
dec
pop
loopne
cmp
lahf
rol
mov
xchg
out
or
negl
call
mov
sbb
mov
and
scas
xor
jge
or
mov
loop
lret
or
mov
mov
xchg
stos
mov
test
pop
inc
ja
div
iret
jb
imul
dec
pushf
arpl
ss
in
mov
xchg
daa
fists
scas
out
jge
out
test
jae
and
rcr
sub
cmpsl
movsl
cld
mov
cmc
paddq
fimull
mov
iret
add
mov
mov
push
ret
or
or
repz
clc
sub
and
addr16
sti
jb
sub
aam
addr16
and
imul
repnz
fstpt
les
cmp
mov
stc
ljmp
or
fidivs
lods
pop
adcl
ds
jbe
and
mov
mov
scas
mov
pop
pop
into
loopne
adc
inc
scas
adc
filds
and
push
pop
out
sti
mov
pop
push
into
pop
pusha
sbb
in
adc
mov
fnstsw
pushf
pop
xchg
nop
in
inc
je
jns
and
ret
je
and
test
imul
jge
mov
and
xor
jo
repz
cltd
iret
push
jnp
inc
ja
loop
dec
push
adc
ds
test
jns
pusha
cmp
hlt
aad
loopne
push
push
test
rclb
pop
fwait
push
mov
mov
ja
imul
jmp
adc
aaa
lock
adc
mov
pushf
dec
add
in
adc
stos
dec
in
ds
and
mov
gs
mov
xchg
insb
rcl
aaa
andl
imul
mov
hlt
push
ja
dec
adc
and
fs
rep
push
xchg
xlat
rcrb
sub
jb
lcall
lea
lret
loope
fidivl
dec
inc
pushf
fnstenv
bound
mov
sbb
mov
mov
fildll
fcompl
insb
add
add
push
xchg
xchg
mov
loopne
inc
mov
and
les
dec
cmp
pop
or
sti
pop
out
call
out
push
inc
out
push
repz
lods
mulb
cmp
cmpsl
clc
inc
aam
outsb
push
jne
arpl
sub
cmp
adc
out
mov
inc
lds
add
data16
push
push
jl
mov
jp
bound
mov
scas
fnstenv
xchg
jno
lea
mov
add
dec
test
pop
cmp
jns,pt
jp
or
jmp
mov
lret
aad
xchg
xor
add
jle
xchg
add
add
push
incb
test
mov
sub
sbb
push
rorl
shll
insl
aas
jns
mov
pop
scas
gs
div
mov
xchg
pop
insb
sti
jb
and
mov
insb
pop
xchg
dec
xchg
xchg
int
das
loop
outsl
lcall
fistpl
adc
les
mov
or
mov
hlt
cs
outsb
in
or
outsl
fsubrl
mov
pop
pop
sbb
jmp
cli
ficomps
sti
add
das
lret
lret
sub
cmpsl
into
imulb
stos
js
shll
ljmp
mov
imul
mov
popa
loope
clts
jmp
movsl
pcmpeqb
jb
cmc
shll
insb
jle
inc
jo
push
cmpb
jle
arpl
jg
cmc
insb
arpl
addl
jmp
lret
jne
push
leave
xor
sub
cmp
nop
push
sti
xchg
pop
out
popf
push
ss
xor
in
repnz
test
arpl
push
notl
loopne
inc
insl
leave
dec
mov
sbb
xor
mov
scas
mov
cmp
jae
push
xchg
push
cmp
sbbl
inc
xchg
shl
add
dec
into
out
jno
jl
lods
int
je
cmp
cs
dec
jl
in
lock
xchg
pop
push
adc
fwait
or
push
insb
and
in
sub
jmp
push
aam
inc
mov
out
jb
jnp
imul
lret
push
lret
fs
mov
test
cmp
adc
leave
and
sub
aad
pop
mov
sbb
mov
in
push
sbb
inc
jb
cmp
mov
ret
inc
test
cwtl
mov
out
cmp
in
out
or
mov
mov
aam
dec
xor
cltd
adc
add
lods
iret
jns
sbbl
loopne
cmpsb
fwait
divl
adc
jae
inc
sbb
adc
xchg
jl
packsswb
addr16
fldt
sahf
test
out
movsl
sub
and
adc
mov
mov
jmp
adcb
aad
fdivs
enter
popf
pop
push
cltd
repz
cmp
xchg
push
das
add
into
inc
dec
insl
or
shrb
fs
addl
insb
ret
xchg
je
xor
dec
inc
xchg
dec
lock
fstl
sub
jecxz
jo
nop
mov
pop
mov
mov
ds
adc
mov
or
pop
or
stc
mov
mov
push
add
rolb
int
push
cmpl
xor
jle
int
cmp
fstpt
pop
into
pop
sti
sub
movsl
in
mov
inc
or
das
sub
jbe
lock
pop
jp
mov
mov
lds
pop
lods
pop
mov
cs
out
dec
pushf
outsb
mov
lret
jbe
push
add
in
shl
xlat
popa
cli
xchg
jg
mov
subl
fnsave
ja
in
ss
pop
dec
mov
mov
fs
dec
sub
jp
mov
movsl
xchg
mov
and
loopne
div
cs
aas
sbb
sti
and
mov
shll
push
mov
jo
cmp
ret
xchg
mov
xor
jnp
stc
and
xorl
dec
in
push
shrb
mov
mov
ficoms
xchg
aam
aaa
int
cmpsb
sub
xchg
js
shl
cltd
push
and
sub
push
cmc
push
cwtl
movsl
push
cltd
into
sbb
lods
lds
sbb
cmp
in
test
add
fadds
cmp
xor
pusha
xor
pop
std
pop
add
dec
inc
pop
sub
in
or
jb
loop
mov
sub
lods
adc
insl
lock
jno
xor
pusha
sbb
or
or
push
sahf
in
into
repz
dec
mov
mov
add
rorb
outsb
sbb
cld
push
lcall
adc
push
sbb
jo
shl
push
adc
mov
in
lret
flds
aaa
sbb
sbb
pop
aam
sub
pop
sub
dec
pushf
stos
dec
sub
pop
jb
push
mov
fdiv
sub
push
js
pop
mov
pop
scas
and
or
aad
cmp
push
lret
aas
push
pop
sbb
and
fcoms
mov
data16
clc
cs
jnp
add
lea
sbb
loop
dec
outsl
sti
mov
jmp
cli
lods
adc
pop
mov
imul
sahf
cmp
and
imul
stos
ja
shrl
xchg
test
and
pop
dec
ror
repz
fnstcw
out
iret
mov
push
pushf
fcoms
ret
loope
push
insb
scas
aas
mov
or
mov
fistps
scas
aad
shl
mov
je
bound
push
xchg
jnp
push
xchg
rol
outsb
mov
pop
add
popa
xor
or
add
sub
pop
cmp
les
cmpsb
ss
mov
xlat
call
les
lret
sub
aas
ret
fstl
dec
cmp
jno
and
ret
insl
insl
xor
int
adcb
scas
divl
int3
mov
test
cmpsl
repz
mov
sahf
out
sbb
gs
push
aaa
jne
daa
add
xchg
loop
das
pusha
mull
pop
mov
mov
lcall
test
orb
push
outsl
das
xchg
cmp
andl
push
sbb
icebp
sbb
adc
ffreep
inc
and
scas
mov
stos
push
les
jne
cmp
fbld
add
les
das
stc
jl
sub
nop
out
aas
faddl
cmp
or
xchg
sub
cs
lds
mov
jg
xchg
mov
inc
aas
pop
jo
dec
jns
in
sub
int3
sub
hlt
dec
andl
push
lcall
jnp
fs
fsubs
imul
mov
push
mov
in
cmp
scas
dec
cli
outsb
mov
mov
mov
fs
mov
push
shlb
aas
and
and
push
int3
jl
dec
pop
jno
inc
lds
cli
mov
repz
das
xor
sahf
out
push
test
mov
loopne
addr16
pop
in
sub
jl
add
fnstenv
enter
push
popf
ds
test
adc
sub
mov
push
flds
lods
das
in
js
dec
or
pop
into
aad
xchg
mov
lods
xchg
in
popa
fdivp
adc
sub
cmovns
sbb
jno
leave
test
out
push
bound
mov
fdivrl
mov
movsl
and
into
xchg
dec
stc
sti
pop
fisubs
shll
sbb
cmc
xchg
loop
lret
jns
loop
lods
shll
fsubl
mov
mov
das
push
daa
shlb
fidivl
clc
inc
lcall
aam
jbe
add
lds
inc
pop
and
scas
mov
rcrb
lcall
out
add
sti
popa
xor
mov
sarb
jnp
inc
fucom
movsb
add
mov
daa
pop
out
pop
rorl
fimuls
fistpl
mov
mov
dec
xchg
scas
mov
sbb
cmp
lea
shl
jg
stos
cltd
cmp
xchg
xor
rorb
pop
sub
ljmp
sub
dec
jnp
cmpl
mov
subl
mov
adc
and
int3
imul
popf
sti
test
mov
adc
push
psraw
mov
mov
push
pop
xchg
out
aas
scas
pop
test
nop
into
outsb
jecxz
sub
movsl
or
in
leave
and
jo
scas
out
cli
icebp
dec
push
xor
addr16
fnsave
sti
rcr
xor
inc
insl
inc
jno
mov
test
mov
sbb
pop
pop
mov
add
in
lret
lahf
jecxz
lods
pop
mov
fsubs
jle
xorl
pop
dec
into
stos
test
mov
mov
mov
sbb
mov
call
gs
fmull
fwait
in
dec
inc
jle
shrb
cltd
xchg
mov
addr16
xchg
ljmp
adc
xor
fcmovnb
sub
out
es
jle
dec
out
je
add
mull
and
sub
cld
cmp
fwait
mov
sbb
add
adc
mov
ja
repz
inc
aaa
mov
xor
ja
scas
or
and
xlat
and
jmp
dec
dec
cs
lret
mov
xchg
jmp
mov
mov
jb
xor
fs
imul
push
inc
sti
mov
sub
imul
xchg
bound
int
mov
xchg
mov
xchg
cltd
pop
popa
icebp
mov
hlt
jae
xchg
pop
inc
xchg
in
mov
inc
stc
es
in
shr
scas
pop
xchg
shr
aaa
insb
mov
pushf
xor
idivb
mov
adc
or
lcall
pop
cmp
push
jnp
ror
and
and
scas
adc
mov
mov
arpl
daa
cli
in
sti
dec
mov
into
mov
push
es
mov
insb
sbb
outsb
push
lods
and
aas
or
cmpb
pushf
dec
clc
pusha
sub
mov
lods
insl
push
rorb
sub
es
xchg
dec
in
dec
cltd
insb
clc
lock
lahf
aaa
xor
cmpsb
lods
adc
cmp
lock
mov
cmpb
adc
bound
sub
lods
lcall
dec
test
and
or
pop
leave
sub
xor
int
mov
or
dec
push
xchg
int
out
xor
cmp
sub
xor
leave
add
out
jbe
mov
mov
dec
jp
lret
sbb
adc
pop
rcll
sub
adc
cmp
xchg
push
stc
mov
clc
cmpsl
push
imul
es
add
js
sub
xchg
mov
negl
test
pop
add
mov
adc
pop
mov
mov
cmpsl
jnp
or
popa
sbb
pop
out
xor
rorl
mov
mov
pop
jge
xor
lret
insb
dec
inc
push
xor
iret
or
xor
jne
jmp
add
xor
insb
popa
mov
test
dec
out
stos
push
sub
mov
jns
dec
mov
inc
ffreep
rorb
fcoms
in
push
mov
movsb
inc
push
out
cs
inc
mov
mov
lahf
push
mov
dec
loop
notl
fmull
mov
xor
sub
rsqrtps
pop
outsl
sbb
je
or
sbb
mov
xor
push
leave
add
mov
mov
mov
xchg
arpl
and
mov
and
push
cmp
push
test
jnp
and
test
xor
sarb
out
aam
sti
cmp
imul
rclb
or
sub
sbb
cmovo
dec
dec
and
insb
test
xchg
mov
mov
cmpsl
test
mov
cmp
push
sbb
dec
xchg
jp
andb
insb
or
orb
lcall
fistpl
cmpsb
call
xor
inc
cmp
repz
popa
mov
pushl
int3
push
out
add
je
sti
loop
stos
jmp
daa
pop
inc
dec
dec
xchg
pop
mov
inc
in
ss
push
sarb
out
pop
dec
xorl
jno
pop
sub
or
inc
inc
js
mov
and
adc
sub
in
ss
sub
outsb
dec
aaa
incb
lahf
inc
cli
inc
jge
adc
adc
stc
sub
in
pop
sbb
inc
shrl
leave
or
addr16
inc
pop
mov
ds
sarb
repz
arpl
lea
and
out
pop
test
adc
icebp
mov
stc
aad
data16
jp
std
push
mov
je
mov
in
xchg
sub
and
lea
js
daa
cmpl
xor
movsb
cmp
shrl
jae
sub
std
push
inc
add
pop
gs
jns
push
mov
jns
outsl
and
mov
mov
xlat
js
test
leave
sub
and
loopne
dec
sbb
idivl
call
pop
add
ljmp
or
movsl
pop
push
or
or
jb
fisttpl
jg
movsl
mov
int
dec
in
fcomps
arpl
cmp
lods
xlat
ljmp
xchg
ja
mov
push
js
jg
sti
pop
xchg
or
ds
cli
pop
cmpsb
pop
and
rcl
insl
inc
xchg
cwtl
stc
push
mov
or
cmp
repz
mov
jb
test
xchg
fidivrl
lock
scas
adc
pop
or
movsl
rcrb
push
rcr
pop
or
adc
cmpsl
push
fldcw
dec
sbb
movsl
and
pop
or
lea
lea
call
inc
mov
aaa
or
clc
cmpsb
rcrl
lods
mov
pop
cmc
sub
xchg
data16
cs
xchg
popa
ds
add
jge
or
push
mov
scas
lahf
and
in
outsb
xchg
inc
lock
iret
aad
lea
pop
repz
bound
lock
xchg
dec
xor
out
cmp
dec
arpl
inc
stos
mov
sar
cs
and
stc
iret
jmp
sahf
jp
loope
mov
loope
out
or
mov
xor
jle
cld
sbb
cmp
inc
sbb
cmp
imul
cwtl
fs
sub
jb
cmc
aad
lret
test
jnp
cmc
lcall
sub
mov
adc
jmp
xorb
lahf
inc
scas
and
jecxz
lret
stc
or
inc
push
jecxz
cmp
imul
aad
in
push
jecxz
sub
pminsw
fwait
divl
hlt
pop
fiaddl
or
push
and
pop
lret
push
sbb
adc
jbe
lcall
xchg
jae
push
insl
sub
xchg
adc
ret
ret
sbb
mov
out
loop
lods
xchg
mov
movsb
popf
pop
push
lret
test
jge
repz
jns
push
mov
or
ret
xchg
int
mov
rcrl
push
xor
dec
stos
dec
xlat
mov
dec
scas
mov
test
icebp
clc
cmp
dec
fabs
aaa
mov
scas
dec
int
ret
gs
clc
jmp
andb
mov
mov
lods
rcll
add
lock
jg
cmp
test
testl
enter
mov
inc
and
sbbb
ret
add
pop
cmp
or
lahf
cmp
popf
out
movsb
popa
pop
sub
cmovp
dec
and
pusha
mov
pop
in
ret
xchg
mov
cmp
cmp
repz
addr16
jl
push
out
js
clc
addb
popf
adc
sbb
mov
jecxz
xchg
xlat
mov
imulb
subl
out
xchg
stos
repz
xor
adcb
mov
aas
jnp
xchg
mov
xchg
in
lcall
jae
xchg
xor
pop
mov
sbb
push
jl
cs
and
mov
sbb
xchg
aas
xchg
ljmp
push
fwait
lahf
xchg
nopl
adc
xchg
mov
or
mov
inc
mov
add
mov
xor
pcmpgtb
test
add
inc
push
and
fbstp
jecxz
jb
jmp
in
dec
lret
test
mov
sarb
data16
repz
mov
add
or
in
int3
sbb
cmp
sub
cltd
int
jbe
loopne
sub
cmpsb
and
sarb
ret
sbb
push
mov
fisubrs
and
or
cwtl
iret
xchg
mov
cltd
mov
out
into
jbe
popf
jne
outsb
add
rclb
int
xor
jecxz
in
pop
out
sti
push
ja
add
mov
imul
sub
mov
sbb
lods
dec
pop
in
cli
ret
aam
dec
jmp
loope
mov
lds
cmc
rorl
add
inc
sub
mov
sub
fsts
add
mov
fld
repz
gs
cmp
add
outsl
aas
push
out
cmp
pop
xor
xor
je
push
sub
inc
mov
mov
mov
pop
movsl
movsb
jbe
std
sbb
sbb
and
mov
aam
mov
jl
mov
inc
test
add
mov
shrl
add
sub
scas
cmp
out
lods
aad
cmp
mov
testl
popf
fistps
stc
cmp
dec
xlat
mov
mov
shrb
push
jecxz
push
dec
nopl
xor
lret
insb
push
push
pop
add
push
and
icebp
aam
xor
xchg
mov
in
ja
outsb
in
push
xchg
bound
sbb
sub
mov
pop
adc
test
xor
or
int3
mov
cmpl
stos
xor
pop
fst
add
mov
cmpsl
mov
cwtl
inc
hlt
and
pop
test
in
pop
insb
jp
adc
push
rclb
arpl
rcrb
mov
add
inc
ljmp
jnp
ljmp
adc
push
xchg
xor
xchg
mov
and
add
repnz
ds
outsb
pop
cmp
fidivs
fistps
push
repnz
pop
jns
shll
loope
add
add
push
mov
push
fwait
sbb
push
sub
xchg
or
or
mov
data16
sbb
and
sahf
hlt
and
or
cltd
mov
pop
fnstcw
adc
dec
pusha
repz
ds
xor
xchg
ja,pn
inc
into
jge
hlt
das
add
sbb
pop
out
cli
jns
jne
andb
dec
sbb
dec
inc
xchg
cmc
scas
dec
ja
sbb
add
pop
ss
adc
test
sub
stos
insl
in
sti
mov
stos
jmp
ficoml
dec
icebp
pop
sbb
push
pop
sub
adc
sub
sbbb
mov
lods
loop
xchg
jbe
sbb
ss
shlb
es
fsubr
pop
and
rolb
jne
xlat
dec
fstpt
or
xchg
mov
xor
gs
enter
xchg
mov
inc
mov
push
mov
roll
xchg
or
jmp
js
push
pop
dec
mov
call
inc
sbb
mov
adc
or
scas
dec
lods
jb
fadd
popf
cmp
ret
or
mov
rcll
mov
test
fldt
inc
in
and
test
sti
aam
loop
pushf
lahf
iret
rcll
jne
sbbw
xchg
enter
cltd
les
test
loop
mov
push
scas
or
sub
ljmp
xchg
and
mov
mov
xchg
sbb
push
pop
adc
pusha
cltd
cmp
and
xor
adc
mov
sti
or
inc
je
pop
add
xchg
mov
orl
sti
cwtl
inc
repnz
cs
mov
jns
rcrl
inc
es
je
repz
jbe
push
cwtl
push
imull
xchg
in
mov
sbb
outsb
scas
aad
dec
inc
push
in
jp
adc
mov
out
data16
sub
pop
mov
adcb
sbb
popa
sbb
cli
lret
cmpsb
sahf
icebp
sbb
dec
mov
stos
in
and
insb
lea
push
int
cmpsb
mov
push
fimuls
or
fwait
sbb
insb
inc
push
jge
cmpsl
sub
mov
cmpsl
sahf
ret
dec
js
and
inc
mov
pop
jmp
imul
mov
and
andl
dec
stc
repz
cmp
icebp
test
or
xlat
out
push
pusha
iret
lret
fs
pop
in
push
insb
pop
push
stc
jmp
in
stos
sahf
adc
sub
lods
sub
add
cmp
jns
out
jbe
xchg
lock
pop
imul
lret
jecxz
mov
mov
add
push
movsb
ljmp
idivb
mov
sbb
scas
fidivl
das
cltd
sub
xchg
shlb
push
pop
mov
into
lock
add
mov
aad
cli
dec
lret
ljmp
add
mov
mov
pop
shlb
bound
and
dec
clc
testl
nop
adc
mov
in
jge
cwtl
js
leave
bound
dec
enter
or
pop
pop
fimull
fs
sbb
sbb
sbb
cltd
cmc
je
scas
dec
popf
inc
sbb
sub
cmp
xor
cmp
sub
sub
adc
pop
out
xor
fnsave
insb
shrb
iret
aam
outsb
sub
pop
jmp
add
imul
and
or
sbb
adc
xchg
insb
insl
lods
test
test
fnstsw
ds
adc
rcpps
outsb
icebp
inc
mov
or
adc
ret
sub
mov
divb
mov
and
push
mov
mov
out
or
ret
inc
mov
cmp
inc
out
cmp
orl
ss
and
les
not
pop
stos
lret
ljmp
psubsw
popa
cmpl
cld
inc
js
mov
insb
add
arpl
add
xchg
cli
jl
shrl
lea
mov
sub
cmp
pusha
jbe
adc
inc
int3
add
cmp
push
in
lods
orb
movsl
xor
sbb
xor
jge
ljmp
imul
int3
pop
mov
cmpsb
xchg
push
lcall
aad
dec
les
xor
add
gs
cld
es
call
daa
lahf
pushf
orb
cmpsb
mov
jcxz,pn
xchg
mov
push
inc
ljmp
mov
jne
xchg
in
scas
xor
and
movsb
dec
gs
movsl
xchg
mov
aad
mov
jo
mov
sub
xor
fnstsw
shll
cwtl
repnz
iret
add
push
fisttpl
je
ljmp
mov
xchg
cs
lods
jns
inc
outsb
scas
mov
mov
fnstsw
adc
sub
lret
or
divb
add
push
pop
ficoms
es
mov
xchg
add
movsb
pop
in
xor
push
mov
int3
xchg
cvtps2pi
sbb
pop
xor
sti
cmp
out
xor
sahf
sub
xchg
rorb
test
mov
or
sbb
jne
inc
inc
mov
dec
and
jmp
jg
pop
mov
cwtl
lods
loop
jle
and
dec
xlat
das
arpl
jb
rcrb
adc
subl
or
lea
or
pop
and
test
sbb
out
mov
test
fs
pop
cli
leave
jne
xor
arpl
xor
sti
sbb
or
lahf
jg
jp
and
sbb
jecxz
aaa
and
fmull
repnz
cltd
mov
adc
inc
in
je
dec
sbb
ret
cmp
jle
xchg
out
mov
aas
shlb
repz
lcall
addl
and
mov
push
or
fs
inc
call
mov
adc
mov
rcrb
mov
mov
push
popf
xor
inc
insl
ret
enter
fisttpll
jo
cltd
sub
and
mov
mov
jmp
pop
or
stos
dec
xchg
clc
aad
push
and
je
dec
or
cwtl
test
jmp
inc
pushf
iret
out
scas
sbb
or
mov
xchg
popf
out
mov
imul
xchg
xchg
lds
out
in
lahf
aaa
dec
push
jg
jge
fwait
testl
xchg
pop
repnz
int3
fdivrs
jg
imul
hlt
test
std
push
sub
mov
push
push
test
dec
cld
outsb
sbb
cmpsl
add
lea
xlat
aaa
das
xlat
push
roll
and
cmc
mov
dec
mov
fsubl
mov
in
cmp
jge
loope
mov
ja
lods
sti
arpl
xchg
push
pop
push
cs
pop
out
pop
mov
daa
jle
enter
outsl
mov
xor
sarb
je
aam
mov
and
jns
mov
mov
push
adc
sub
mov
imul
mov
xchg
pop
addl
xor
xor
fwait
nop
ds
div
push
repz
imulb
lret
loopne
mov
mov
outsl
testl
sbb
ja
enter
fcmovnb
out
mov
imul
sub
ret
mov
jge
lcall
jmp
cmpsl
stos
outsl
cmpsb
fildll
pop
imul
or
pop
out
cmp
sbb
or
jecxz
mov
add
sbb
sbb
and
adc
pop
int3
inc
fnstsw
pop
popa
cmp
sbb
testl
subb
jno
repnz
stc
cmc
dec
push
or
out
cmpsl
call
and
jmp
mov
es
setge
jne
inc
and
pop
daa
xchg
cmp
jle
movsl
inc
out
add
push
jp
fnstenv
vcvttps2dq
movsb
idivl
out
inc
pop
mov
fildll
mov
mov
and
test
in
lods
stos
pushf
pop
pop
sub
icebp
movsl
cmpsb
xchg
adcl
loope
pop
imul
cmp
mov
into
sbb
dec
pop
push
xor
in
xchg
insl
inc
push
mov
mov
sbb
mov
scas
js
push
mov
push
mov
mov
popf
int3
sbb
dec
rolb
push
xchg
js
sbb
xor
add
push
stos
sub
stc
dec
mov
jno
in
gs
mov
jecxz
or
xorb
dec
shrb
sbb
stos
jmp
cwtl
lret
arpl
push
aam
sub
ret
inc
fmulp
divb
push
mov
into
shlb
loopne
and
pop
mov
mov
sahf
jle
fidivl
mov
jb
pop
fidivrl
pop
pop
js
dec
test
mov
adcb
push
rcrl
lret
push
sahf
pop
xor
cmpsb
sub
call
cmp
popa
cmpsb
or
cmpsb
test
inc
popa
xchg
xchg
add
mov
and
cmp
addr16
sbb
mov
mov
xchg
rclb
stos
mov
jae
sbb
push
repnz
inc
push
dec
popf
stc
sti
xor
xor
jbe
loopne
inc
pop
aas
mov
mulb
xchg
mov
sub
mov
fmuls
mov
sbb
std
pop
jl
mov
jl
adc
test
xchg
add
daa
jg
mov
popa
ss
cmpsl
je
push
or
cli
jbe
mov
cmp
push
pop
sahf
nop
or
jbe
xchg
addr16
push
repz
jae
push
fstps
xlat
dec
and
sahf
or
mov
jb
jns
adc
aaa
leave
sarl
add
mov
or
shll
shrb
xchg
arpl
imul
lahf
insb
mov
stos
mov
movsl
dec
lret
and
jg
dec
cltd
call
cmp
jmp
movb
xchg
subl
shrl
add
mov
mov
xor
sarl
mov
xchg
jns
int3
aam
or
dec
add
pop
bound
sbb
cmp
shr
push
into
out
adc
mov
subb
jl
dec
sbb
lret
cmp
popa
adc
xorl
jp
push
fidivs
pop
push
xchg
pop
nop
test
add
ljmp
fucom
andl
adc
push
loopne
icebp
loop
mull
push
enter
repz
cmpsl
dec
hlt
iret
dec
push
hsubps
cmp
fucompp
sarl
std
mov
mov
outsb
cmp
dec
push
push
aaa
or
aas
cli
dec
adc
sbb
xchg
hlt
mov
jmp
and
fnsetpm(287
jl
pop
out
je
nop
jmp
mov
addb
xchg
mov
and
call
push
or
int
orb
cwtl
or
sub
test
push
sub
mov
or
mov
cmp
testl
enter
mov
test
inc
push
pop
xchg
lock
ret
adc
pop
mov
xor
insl
jo
sub
inc
jp
test
lds
shll
fadds
ds
imul
stos
fstl
push
lret
movsl
push
add
mov
inc
pop
and
ds
nop
fnstsw
push
aad
xor
or
jl
test
insl
push
cmp
jmp
and
repnz
mul
rorl
loope
repz
pop
mul
ret
xchg
int3
adcb
or
fistps
sbb
jle
sub
aas
mov
popa
dec
loope
push
xor
subl
int
enter
in
pop
and
pushf
xor
int3
sub
aam
scas
mov
cmp
nop
popa
mov
daa
pop
test
mov
cmpsl
inc
pop
add
cld
mov
inc
mov
cwtl
inc
or
fstpt
cmp
xor
stos
sbb
xorb
cmc
push
xor
and
outsb
ret
rcrb
outsb
dec
repnz
ljmp
pop
jg
ret
jns
js
lods
lahf
fistpl
fsubr
dec
jp
in
out
mov
jle
xchg
dec
test
int3
ds
loope
testl
jns
cwtl
adc
xchg
test
mov
mov
shr
stos
arpl
mul
pop
gs
sti
pop
push
arpl
and
xchg
lods
lods
mov
inc
jae
and
and
adc
lahf
dec
push
loop
add
add
cs
sub
lds
fstps
and
lret
dec
in
add
stos
das
loope
sahf
int
sub
imul
xchg
cmp
sbb
xchg
jo
dec
jle
hlt
inc
sar
inc
addb
aam
sub
daa
sub
push
sbb
gs
into
arpl
stc
dec
fisubrl
jecxz
pop
insl
pushw
mov
or
cmp
and
xor
dec
rcll
push
mov
adc
add
jnp
lock
mov
xchg
loop
das
inc
lods
inc
sbb
xchg
mov
push
push
ljmp
movsb
sub
xchg
insl
mov
lea
xchg
add
mov
rolb
xlat
mov
ljmp
sub
dec
adc
pop
insl
mov
popa
shlb
sbb
xchg
pusha
insb
insb
test
retw
addr16
in
add
divb
jmp
sbbl
pop
daa
or
mov
lea
shrl
cld
mov
out
lods
sahf
in
js
sbb
mov
hlt
leave
push
jnp
cs
bound
fisubs
pop
test
pop
imul
cld
or
sahf
aas
popa
imulb
xor
ja
fisttps
push
xchg
adc
push
hlt
mov
xor
dec
lds
jle
jecxz
mov
jg
scas
or
aam
addr16
mov
inc
insl
je
cmpsb
push
adc
pop
mov
nop
jb
adc
jns
inc
dec
leave
in
sbb
je
pop
push
dec
sbb
lahf
stos
lahf
jp
std
sbb
jmp
mov
jge
pop
add
test
pop
inc
dec
scas
mov
pop
pop
push
cmp
adc
and
inc
cltd
ljmp
outsl
or
mov
xor
aad
bnd
into
sub
xor
aad
add
xor
iret
or
pop
fnstcw
push
and
and
mov
xlat
stos
inc
aas
imul
xchg
rorl
aas
out
pop
popf
inc
das
mov
cmp
jecxz
jmp
push
mov
loope
out
lcall
cwtl
repnz
inc
xor
pushf
popf
or
std
ljmp
out
fcmovb
push
pop
imul
cpuid
fisubl
sti
xlat
popa
push
in
movsb
cs
inc
insl
sbb
in
movsl
outsl
dec
cwtl
repz
loop
mov
clc
aam
mov
push
test
pop
mov
push
lds
sub
inc
movsb
jge
or
shlb
xor
aas
cmpsl
xlat
pop
adc
jbe
cmpsb
test
outsl
in
loopne
cmp
mov
gs
mov
pop
push
cmp
stc
adc
mov
push
and
sbb
das
dec
jno
enter
mov
xchg
addb
mov
jb
mov
push
add
mov
or
cmp
mov
pop
xor
out
lret
movsb
movsb
clc
insb
xchg
nop
xchg
daa
push
sub
add
and
aad
add
mov
sub
notb
push
mov
mov
xchg
ret
rcll
push
outsl
test
icebp
cltd
daa
or
dec
std
jae
dec
push
push
inc
pop
arpl
or
in
aaa
push
cltd
push
cld
pop
and
lcall
aam
sub
jno
cmp
in
adc
outsl
mov
adc
into
jnp
mov
jmp
mov
sbb
fldl
popf
pop
inc
mov
lods
adc
xchg
inc
mov
pop
rolb
imul
loopne
adc
sub
and
xchg
sub
pop
into
stos
leave
pop
cmp
pop
aas
push
xchg
fisubs
sbb
mov
in
mov
ljmp
cmpl
les
inc
dec
jle
push
outsl
imull
pusha
push
jmp
les
cs
inc
dec
int
jl
xchg
inc
test
lret
loop
cmp
inc
les
imul
out
fiadds
mov
mov
insl
push
xchg
pushf
adc
pop
cmpsl
mov
jb
sub
out
inc
jne
and
xchg
xor
pop
mov
aam
scas
jns
repnz
iret
outsb
and
xchg
lcall
dec
cmp
xor
dec
inc
add
stc
xor
and
lcall
mov
jle
cs
call
daa
push
insl
inc
lcall
mov
jb
fsubrs
or
in
or
pop
negb
sarb
pop
dec
cwtl
jne
xchg
and
pop
mov
sub
push
and
push
in
aaa
fistps
imul
xchg
pop
sahf
or
fiaddl
outsl
pop
add
repz
daa
andb
inc
sbb
aaa
test
loopne
mov
push
pop
mov
lahf
lcall
cmpsb
or
pop
mov
add
or
mov
scas
ret
scas
inc
and
xchg
xchg
mov
ss
push
test
rorb
inc
cld
adc
sbb
push
add
scas
pop
inc
scas
mov
popa
cwtl
das
xor
ljmp
pusha
push
mov
push
mov
and
mov
hlt
inc
roll
int3
adc
mov
sub
or
ror
loop
cmc
xchg
test
out
scas
nop
mov
andl
imul
mov
sub
mov
add
test
mov
lea
jb
adc
mov
or
push
movsl
cmc
scas
inc
mov
sbb
aam
pop
je
sub
jns
nop
push
pop
cltd
mov
sbb
cli
adc
pop
clc
pop
lea
push
sbb
sub
outsb
shl
xor
imul
sbb
mov
sbb
jo
push
test
sbb
adc
adc
push
mov
mov
push
add
dec
cs
dec
sbb
ja
xchg
test
shll
push
add
pushf
rcll
cli
cmpsl
xlat
adc
call
push
jne
lret
insl
hlt
add
ja
sbb
xchg
pop
mov
popf
add
sbb
ret
xchg
or
xchg
xor
mov
cld
roll
into
imul
movsl
popa
sbb
xor
adc
aaa
xor
mov
cld
jb
fcomp
imul
repnz
lods
sbb
cmpsl
nop
lods
out
cmpsl
mov
add
mov
call
subb
imul
xchg
push
push
cli
xor
xchg
das
jle
add
jl,pn
sbb
xchg
enter
popa
sahf
dec
mov
ss
and
pop
stos
adc
pop
and
inc
sbb
cs
repz
sbb
incb
ja
jl
mov
iret
sti
pop
sub
xchg
xchg
sti
or
jge
push
sbb
fnstsw
cmpsl
notb
cld
imul
pusha
clc
movsb
xchg
ficoml
test
sbb
cs
sar
daa
test
xchg
inc
and
push
ficoml
shlb
pushf
fnstcw
js
popf
sti
mov
repz
cmp
sbb
add
std
push
pop
push
jb
cmpb
lods
push
aas
fwait
icebp
lea
aam
jle
imul
bt
aaa
popf
cli
push
dec
pop
les
enter
popf
hlt
cmp
dec
mov
jmp
push
dec
iret
inc
mov
dec
imulb
icebp
or
stos
bnd
test
stc
pop
xchg
mov
jp
push
push
and
movzwl
mov
cmp
outsb
mov
fsubr
xor
dec
push
xor
and
sub
pop
cmp
inc
enter
sub
stos
sub
jle
sbbb
dec
mov
add
add
adc
loope
add
jmp
mov
test
js
add
sahf
scas
imul
mov
test
sub
shlb
fbstp
cmpsl
cli
pop
nop
out
xchg
fistpll
sub
xor
jle
push
in
lret
rorb
add
out
sub
cmp
cmc
mov
dec
out
inc
shl
mov
adc
scas
add
dec
add
xor
daa
les
enter
inc
sbb
cmpsl
inc
xchg
mov
jbe
into
fucomi
in
jecxz
jns
xorl
adc
xor
lret
lret
js
je
call
dec
std
pop
popa
rcrb
xchg
rcl
test
inc
iret
cmpsb
sub
stos
adc
push
add
loopne
xor
imul
dec
in
inc
cmpsl
jmp
or
push
dec
jle
push
cmp
and
pop
cmp
mov
mov
inc
jno
cmp
mov
xlat
scas
inc
arpl
insl
push
mov
aaa
cwtl
imul
sbb
repz
int
test
movsl
xor
or
lods
rcll
cmc
pop
cmp
push
daa
fidivrl
jb
fsubs
add
pusha
adc
daa
push
imul
adc
xchg
daa
fsubrs
pop
bound
sub
cmp
addr16
xor
pop
clc
or
dec
mov
lret
cmp
fs
in
fstl
jmp
clc
shll
mov
push
pusha
pushl
jecxz
lods
dec
push
xor
pop
sbb
sahf
xor
into
push
and
scas
loopne
lods
or
inc
pop
out
scas
pop
jno
sbb
add
mov
inc
je
push
dec
inc
or
and
adc
mov
sbb
fcmovnb
sbb
add
scas
cs
shll
sub
idiv
movsl
jg
ret
inc
mov
push
and
fisubs
stc
scas
and
mov
add
adc
xchg
cs
stos
push
mov
push
fisubrs
repnz
jbe
xchg
xor
dec
mov
insb
shll
fwait
cmpsl
mov
daa
dec
pushf
sub
lcall
mov
inc
push
shrb
bound
fxch
fnstenv
rcr
test
aam
or
or
mov
rcl
pop
adc
push
aam
add
push
push
push
add
pushf
incl
rorb
xchg
in
jecxz
mov
inc
xor
jg
test
cmp
mov
xor
cmp
inc
or
adc
push
cltd
pop
out
sahf
sbb
nop
xchg
cmp
fdivr
andb
and
mov
push
xchg
add
sub
sub
add
cmp
jno
shrb
inc
or
sub
push
adc
scas
in
addr16
pop
lahf
fst
mov
mov
mov
sbb
ja
mov
xchg
jnp
pop
cmc
jp
mov
mov
movsl
je
push
into
ds
or
test
adcl
loop
jns
faddl
push
xchg
cmc
fcompl
daa
jnp
cvttps2pi
sbb
test
lahf
out
add
test
mov
outsb
mov
inc
and
mov
popf
fidivrs
cld
lahf
jne
test
test
test
popa
jecxz
loope
xchg
xchg
mov
xchg
orb
mov
fmul
push
into
repnz
loopne
or
jl
fstps
push
arpl
std
popf
jge
lods
push
movsl
jmp
je
imul
pusha
sti
push
lock
jp
mov
ret
mov
pop
or
adc
xor
dec
movsb
andl
aaa
mov
sub
mov
xchg
pop
out
mov
xchg
je
pop
mov
sub
lret
aam
scas
push
pop
or
sub
adc
jne
sbb
clc
icebp
or
cmp
push
xor
addb
inc
xchg
iret
push
ljmp
lret
or
cmc
sbb
movsb
ljmp
je
test
fwait
insl
enter
inc
push
rorb
push
dec
push
dec
repnz
mov
lea
icebp
mov
cmpsl
sti
loope
leave
cmc
jmp
test
xchg
sub
pop
out
cmp
movsb
mov
mov
orb
negb
mov
push
loopne
push
mov
ret
sbb
sbb
xlat
pop
jns
cs
pop
sarb
dec
das
adc
push
iret
repnz
xchg
call
mov
leave
lcall
fwait
mov
xor
hlt
outsb
lea
xorb
xor
pushaw
push
inc
push
sbb
je
stc
aas
data16
ficompl
push
and
inc
jl
mov
test
sbb
push
aas
cmp
lea
pop
sbb
mov
lock
mov
pushf
insl
test
cmp
sub
loop
clc
mov
js
call
mov
mov
cli
stos
mov
push
ret
pop
mov
cld
xor
sub
test
scas
lods
sub
xchg
test
push
sub
arpl
outsl
cmp
fs
jp
and
mov
movsl
xchg
sub
dec
pop
stc
fwait
sbb
insb
dec
repnz
into
shll
dec
cmp
sub
sti
lods
pushf
xchg
ffree
clc
leave
dec
outsb
rcll
scas
sahf
outsl
dec
lods
and
xchg
jae
sub
mov
jp
mov
mov
push
jns
jp
push
shlb
push
xchg
push
rclb
mov
mov
loopne
add
cmp
movsl
mov
cltd
inc
repnz
or
mov
adc
xchg
cmp
mov
fidivl
dec
cmpsl
or
add
aas
lar
xor
sbb
sbb
test
dec
mov
repz
push
repz
mov
push
and
inc
jle
call
fs
inc
lahf
arpl
push
mov
das
ficoml
loopne
dec
mov
sbb
jne
or
andl
adc
dec
mov
ret
data16
add
inc
and
add
out
sbb
jp
inc
lcall
dec
fnstcw
sbb
aam
inc
pop
cmp
sub
sbb
sub
pop
inc
lea
int3
stos
xchg
adc
xor
sti
lods
adc
mov
leave
cmp
inc
es
mov
bound
xlat
jbe
sub
aam
rcrl
orb
mov
xchg
dec
outsb
jecxz
stos
jmp
mov
jmp
fisubrs
fldt
mov
inc
std
pop
add
scas
fs
sub
push
push
mov
jmp
sbb
pop
movsl
jnp
inc
xchg
rcrb
push
pop
mov
ret
mov
dec
mov
xchg
mov
cwtl
gs
adc
popf
push
jb
jno
and
mov
or
pop
inc
jge
dec
scas
lcall
sbb
dec
nop
mov
lahf
bound
repz
inc
in
cwtl
push
inc
add
sub
jb
lea
repz
sbb
dec
pop
sbb
mov
popf
ffreep
xchg
mov
das
push
push
mov
inc
xor
ret
mov
add
push
fisttpll
and
jecxz
mov
sti
mov
scas
popa
xchg
aad
in
fcompl
pop
dec
sti
jno
sub
and
xor
test
xor
cltd
mull
pop
pop
outsb
fwait
pusha
cmp
mov
stos
mov
jp
cld
enter
xor
rorl
aaa
lock
stos
jae
push
out
cld
cwtl
sbb
stos
add
in
pop
jmp
daa
sti
fiadds
repz
in
test
rcrb
and
sbb
imul
jle
aad
imul
mov
ljmp
xor
sub
mov
or
mov
xchg
in
xchg
scas
xor
mov
test
ja
inc
rcrl
xor
sub
cli
cmp
imulb
xchg
cld
cmp
mov
divl
xlat
iret
les
aaa
xchg
pop
add
jbe
js
ret
std
or
es
ja
and
sub
mov
addr16
in
inc
scas
jmp
aad
mov
fwait
popa
push
fmull
jg
mov
ror
xor
mov
sub
nop
push
pop
imul
xchg
lods
ss
and
es
inc
jecxz
mov
xor
lret
xor
mov
dec
movsb
js
sub
std
out
adc
xchg
push
xorb
lahf
lds
mov
incb
push
pop
mov
sub
es
lcall
and
inc
add
stos
jl
add
das
arpl
testl
dec
out
pop
pop
fiadds
xchg
fs
xchg
in
mov
adc
mov
sub
xlat
inc
test
cltd
adc
fcoml
mov
jbe
shrl
in
xchg
aam
inc
dec
add
cmp
mov
jns
in
xor
xlat
aaa
cltd
and
repnz
push
arpl
inc
cmc
xchg
mov
xchg
shlb
mov
or
push
sarb
and
shlb
dec
lods
test
imul
ret
cmp
addl
add
aam
int3
xor
test
repnz
pop
aad
repz
dec
adc
inc
fists
pop
sbb
mov
jle
bound
gs
lea
loope
mov
push
jl
add
sub
fwait
sub
out
or
xchg
rcll
sub
xlat
les
stos
pop
js
aad
inc
push
push
jno
inc
mov
pop
lods
inc
or
addr16
xor
testb
rolb
das
dec
icebp
scas
loopne
mov
and
cwtl
mov
mov
sahf
arpl
test
addr16
in
jg
addb
push
mov
arpl
in
shlb
jecxz
loop
movsb
push
sub
jl
outsl
mov
mov
fs
mov
mov
lcall
out
jmp
outsl
roll
outsb
mov
xchg
les
in
jp
xchg
xor
xlat
fst
dec
pop
out
imul
push
push
xchg
add
bound
pop
jae
cld
icebp
rclb
aad
and
mov
fbstp
sahf
addr16
jp
and
add
xchg
es
cmp
inc
sub
inc
pop
jmp
js
cmpsb
in
dec
imul
push
push
push
outsb
imul
xchg
lock
mov
loop
jbe
aaa
popa
int3
xchg
sub
xchg
fisubrl
sbb
stos
mov
jge
iret
adc
mov
rorl
push
mov
lea
imul
jae
cmp
clc
dec
inc
add
ds
arpl
jnp
and
imul
sub
dec
loop
popa
cmc
push
aam
cli
push
rclb
add
mov
mov
push
add
out
xor
dec
movsl
movl
adc
sub
addr16
dec
inc
enter
jmp
insl
cmpsb
xchg
lea
push
mov
aam
jmp
or
pop
mov
sub
lahf
sbb
jecxz
lds
push
xchg
orl
sbb
arpl
rcrl
xor
clc
pop
and
add
decb
fs
cmpsl
jne
sbb
nop
sub
and
insl
jns
mov
ret
mov
clc
sbbl
xor
xchg
fdivl
mov
inc
push
pop
cwtl
aam
sub
dec
cmp
and
pop
ret
stc
cmc
rep
cmc
faddl
lea
arpl
jo
aad
dec
adc
mov
and
movsb
es
mov
cld
pushf
fldl
push
hlt
ret
xchg
pop
push
movsl
inc
mov
inc
cli
pop
mov
xor
push
jg
fcmovne
imul
int3
hlt
xor
in
pop
xor
adc
mov
jle
mov
aad
test
jl
push
mov
inc
mov
mov
sub
mov
sbb
mov
out
or
adc
mov
xor
push
and
icebp
jl
lods
cwtl
nop
cmp
adc
or
or
sbbb
mov
jle
xlat
mov
out
sub
aad
rorl
mov
in
aaa
push
mov
push
inc
push
loope
mov
push
out
jbe
adc
leave
addr16
out
imul
mov
jge
insb
cmp
sub
cmp
pop
dec
scas
enter
push
mov
mov
sti
jne
lock
jmp
push
lods
pop
jbe
cltd
int
jmp
cmp
mov
cld
dec
repz
sub
pop
sub
fsts
sbb
xchg
adc
cs
aaa
mov
push
test
repz
xlat
imul
ficoms
bound
scas
and
enter
insl
ficompl
push
mov
add
jle
sti
xchg
xchg
pusha
xchg
jo
sub
and
pop
loope
mov
loopne
xor
pop
aam
imul
mov
loope
xor
xchg
call
pop
stos
call
mov
push
insl
adc
inc
jl
pop
out
add
cmp
lahf
mov
movsb
jl
xchg
shl
add
mov
and
test
pop
jb
pop
pcmpgtw
test
mov
xchg
inc
cmpsl
dec
adc
fldt
sub
movsl
dec
xor
push
mov
out
inc
jg
repnz
mov
repnz
jno
pop
test
test
add
jae
jo
xchg
ja
int
and
popa
cwtl
push
inc
jo
xor
jecxz
nop
lock
sarb
outsl
pushf
push
test
adc
lcall
mov
mov
or
test
jle
in
jae
je
jecxz
data16
mov
int
test
dec
mov
add
or
cmpl
or
pop
hlt
and
jle
and
shl
adc
arpl
sbb
xchg
push
jge
mov
popf
dec
aam
and
jnp
mov
pop
outsl
add
or
nop
or
cmc
sub
dec
jnp
mov
inc
and
clc
sbb
imul
push
pusha
dec
es
cli
mov
xchg
jb
inc
cltd
xchg
call
inc
mov
cld
daa
mov
jl
mov
aad
test
das
sarl
cltd
sub
mov
in
sub
push
add
ret
pop
mov
stos
xchg
xor
into
push
adc
imul
addr16
xchg
mov
sbb
test
dec
test
sub
cmc
fs
enter
lds
mov
inc
arpl
jg
cmpsb
lea
loopne
in
jecxz
stos
or
mov
das
adc
aad
imul
movsb
and
cwtl
pusha
in
jno
xor
push
fs
mov
cmc
daa
lods
cltd
push
sbb
dec
inc
inc
pop
xchg
sub
and
int3
cmp
leave
xor
sti
mov
das
aaa
jle
sub
pop
fcoml
fnstenv
xchg
aam
push
dec
mov
mov
cld
push
and
add
popf
xchg
jecxz
ret
imul
push
testl
inc
and
testb
lahf
add
out
call
out
mov
mov
scas
decl
ds
cld
fmul
stos
data16
cltd
fimull
ret
test
jp
insb
push
mov
stos
js
cli
mov
imul
xchg
in
sub
lods
jp
sahf
push
jle
sbb
mov
push
or
lret
inc
fidivrs
jne
loop
add
or
cwtl
push
mov
ds
enter
adc
or
testb
loope
push
push
ja
mov
and
loopne
sbb
adc
push
mov
xchg
xchg
add
jecxz
adc
mov
iret
sub
mov
sub
add
fisubl
fs
dec
lcall
aaa
xor
jmp
scas
xor
movsb
nop
pop
or
mov
fbld
insb
repnz
jo
adc
sbb
cmc
sbb
stc
inc
int3
fwait
and
imul
or
je
mov
insl
jnp
sbb
leave
shll
fcmovbe
icebp
xor
shlb
cmp
pusha
fstp
cmpb
inc
clc
pop
push
dec
daa
lods
sti
pop
push
inc
sub
mov
ret
fdivrl
aas
mov
inc
cmc
cli
out
cmp
pop
xor
sbb
jbe
scas
lahf
lret
push
fcoml
insl
enter
test
and
loop
sbb
in
pop
rolb
adc
lock
mov
pop
jns
lret
xor
or
jp
pushf
arpl
out
sub
pusha
jns
ficomps
dec
pop
jnp
jns
dec
push
mov
insb
xchg
cmp
push
outsl
test
pop
std
das
mov
cmp
pushf
jmp
pop
ss
sub
xchg
insl
jmp
push
inc
pop
bound
inc
lcall
pop
inc
pop
cmp
out
stc
jp
mov
jb
fadds
mull
out
pop
wrmsr
mov
jns
xor
add
pop
popa
xchg
dec
xor
pop
dec
jge
mov
loope
pushf
jle
jmp
pop
add
mov
push
outsb
adc
aas
repnz
jmp
and
add
add
decl
adc
mov
addr16
pop
leave
clc
or
cmp
mov
iret
mov
popf
fnstsw
adc
lahf
rcrb
pop
repz
pop
xor
push
push
push
scas
jecxz
out
vunpcklps
imul
imul
test
scas
gs
sbb
cmpb
or
dec
bound
in
call
mov
fs
xchg
popf
push
jne
lock
test
lea
addb
je
jo
xor
xor
out
test
fs
jns
mov
rolb
cmp
les
mov
stos
leave
stc
xchg
pop
and
or
or
dec
enter
add
lock
pop
mov
int
mov
sub
jmp
roll
jecxz
inc
push
movsl
pop
out
add
mov
shll
out
testb
arpl
inc
scas
addr16
adc
pop
xchg
loopne
pop
loope
ljmp
xchg
mov
cmc
mov
mov
mov
repz
fldcw
movsl
js
dec
movswl
sti
ds
lahf
repz
mov
cs
sbb
mov
lods
loop
push
xor
fnsetpm(287
mov
imul
pop
push
dec
insb
adc
js
sub
add
aam
cmp
or
or
pop
sbbb
into
add
or
jmp
leave
mov
push
mov
in
enter
and
fldenv
hlt
pushf
inc
jne
stos
cmp
pop
push
shrl
imul
and
in
jmp
push
adc
jg
add
dec
push
insb
jecxz
stc
push
addr16
negb
xor
hlt
out
inc
jae
roll
jmp
pop
pop
rcrb
jl
xchg
xlat
lock
push
inc
arpl
pop
pop
andl
loopne
inc
cmp
push
lcall
popa
inc
repnz
fldenv
daa
fcoml
add
or
sub
or
sub
push
je
jnp
pushf
pop
out
outsb
lret
js
inc
adc
ss
push
dec
cltd
push
cmp
lods
pop
mov
into
and
inc
dec
push
jmp
in
mov
in
lret
clc
inc
sub
jne
and
dec
inc
scas
sarl
xchg
cmp
or
dec
je
mov
adc
xor
testb
lcall
mov
fisubs
jl
pop
xchg
cmp
inc
xchg
push
shlb
push
xchg
inc
sarl
cmc
test
inc
pop
xchg
jg
in
scas
fs
int
xchg
fbstp
cs
sub
xchg
mov
jp
xchg
mov
loopne
into
ds
cwtl
mov
ret
sbb
pop
cmpsb
xchg
adc
mov
mov
call
stos
mov
addr16
xor
hlt
insl
mov
test
fwait
push
mov
hlt
and
xchg
push
add
call
pop
pusha
or
mov
or
pop
dec
leave
cld
jo
pop
mov
dec
test
mov
add
rorl
inc
push
mov
sbb
inc
mov
insb
adc
push
sbb
xchg
add
pop
loopne
cmp
data16
adc
stos
xorl
out
or
or
fcomps
xor
sub
movsl
xchg
ljmp
add
or
pop
pop
mov
sti
dec
lds
scas
ss
in
lods
call
js
add
jne
notl
pop
repnz
es
mov
mov
sbb
xor
mov
cli
in
and
popf
xchg
or
jp
adc
das
xchg
insl
dec
mov
fs
sub
lods
imul
dec
gs
jp
outsl
inc
xlat
ss
fiadds
dec
add
pop
pop
jnp
cmpsb
dec
xchg
das
mov
ds
into
fwait
mov
add
jmp
fsubrl
dec
cmp
cwtl
mov
call
add
test
mov
pop
dec
pop
lock
xor
sub
out
and
out
imul
mov
xchg
jle
jl
outsb
pop
dec
ljmp
pop
jge
pop
mov
mov
fistl
xor
push
mov
fdivl
pop
loopne
mov
jmp
stos
popf
in
jle
jle
adc
ret
push
popf
loopne
in
mov
insb
inc
cmpsl
iret
out
dec
or
popa
sarb
insb
jne
int3
scas
daa
call
clc
stos
mov
pop
stos
je
loopne
lcall
or
mov
sub
cltd
cmp
fisttps
sub
jne
cmp
aad
push
pop
xor
test
test
sub
adc
pop
sub
cmpsl
inc
inc
lret
push
xchg
out
les
sub
insl
sub
out
xchg
sub
xor
js
push
bound
insl
add
pop
jg
xorb
push
sar
jnp
adc
mov
ret
gs
les
loop
or
pop
cli
dec
xchg
jo
pop
imulb
mov
push
out
jmp
test
pop
stos
mov
int3
mov
in
dec
push
lods
movsl
adc
or
enter
pop
test
lods
sub
xor
push
pusha
inc
pop
aas
pop
shr
leave
xor
mov
mov
out
adc
sbbl
bound
addr16
lret
cltd
int3
mov
adc
sub
jb
jno
sbb
ret
aad
out
lds
adc
es
add
adc
xor
cmp
inc
test
shlb
jne
call
pop
jns
int
in
push
enter
js
lret
sub
xchg
addr16
je
adc
ficoms
enter
jns
dec
add
js
std
pop
mov
repnz
iret
outsb
je
scas
clc
push
and
sbb
pop
dec
cltd
je
fcomip
into
shrl
pop
xchg
push
iret
jge
xor
pop
stc
and
cmp
ja
sub
push
sub
xor
popa
push
mov
adc
roll
push
enter
push
out
jl
orl
mov
rcrb
into
movsl
mov
and
inc
jnp
xor
inc
mov
add
icebp
aaa
aad
scas
call
ret
or
insl
add
sub
dec
mov
mov
mov
xchg
test
mov
cltd
mov
out
xor
mov
repnz
int
push
inc
mov
xchg
pop
stc
cs
sub
mov
mov
dec
test
xor
push
push
lret
sbb
stos
sub
xchg
push
sbb
je
mov
lods
dec
push
cs
lock
sub
jno
sub
xlat
aad
ret
inc
frstor
inc
mov
inc
out
adc
push
pop
shlb
stos
mov
push
rorl
jnp
ret
and
pop
popf
and
xchg
incb
repnz
aam
push
out
pop
cld
dec
and
icebp
jns
daa
into
pop
std
xor
xorb
xor
push
add
sbb
add
clc
data16
and
sbb
iret
les
mov
mov
add
pusha
fldl
in
fucomip
call
jecxz
enter
call
and
pop
fstps
pushf
push
dec
or
xlat
cmpsb
jle
out
fnop
enter
testb
cmpb
negb
mov
push
clc
push
les
xor
xchg
fiadds
adc
adc
xchg
stc
cmpsb
leave
xchg
stc
icebp
sarl
jns
push
fistl
xchg
mov
pop
jne
cwtl
cmpsl
arpl
loopne
mov
dec
stos
inc
sti
sub
pop
sbb
dec
hlt
xchg
lods
test
adc
push
adc
out
pop
add
xchg
dec
push
pop
mov
mov
pushf
shrl
pop
and
dec
sbb
adc
pop
fsubr
jbe
pop
ljmp
push
cmp
jmp
andl
cmp
mov
stos
loope
ret
call
inc
xor
daa
push
mov
dec
pop
insl
mov
push
sub
lock
jge
push
xor
cwtl
imull
jl
rol
call
push
fdivs
mov
aad
pushf
pop
aad
mov
jnp
daa
test
negl
push
dec
in
in
add
or
mov
imul
sub
xor
fcmove
sbb
mov
stos
jge
cmc
pop
subb
stc
pop
das
jo
sti
push
bound
fmull
fdivs
das
xchg
movl
pusha
mov
cmp
jg
jo
enter
lahf
xor
aaa
xchg
popf
data16
push
call
dec
or
test
adc
xor
test
and
sub
push
lret
gs
sub
dec
add
or
xorb
cmpsb
jae
push
xor
adc
mov
jne
pop
and
out
mov
mov
pop
dec
cmp
or
sbb
jmp
mov
inc
mov
mov
jo
daa
mov
fld
jae
mov
mov
mov
pop
adc
rcll
fwait
mov
mov
lahf
push
sub
jae
and
jmp
lret
mov
inc
mov
or
flds
sbb
pop
leave
js
mov
iret
sub
jbe
out
and
or
add
int3
xchg
or
mov
jo
ja
adc
mov
mov
xchg
sub
push
fnstsw
daa
or
rcr
pop
mov
mov
push
mov
cmp
lock
mov
mov
lret
push
xchg
repnz
sahf
xor
roll
adc
or
cmp
insb
repnz
mov
fcmovnu
ss
push
jnp
pop
mov
shr
cmp
hlt
dec
and
sbb
arpl
ret
dec
push
lock
mov
lahf
rcrb
arpl
sti
testb
xor
imul
sti
icebp
stos
add
mov
add
sub
idivl
fs
and
loopne
push
sbb
addr16
sbb
cmp
insb
push
push
int3
mov
lcall
mov
xchg
dec
pop
iret
sub
jb
test
xchg
popa
cmp
in
rcrl
dec
arpl
cmp
loop
out
rcr
popa
pushf
lods
in
mov
ret
fsubs
sub
cmp
jmp
inc
out
cmp
movsb
xor
push
adc
ja
jg
scas
jne
aam
add
je
test
mov
pextrw
sbb
fucom
adc
insb
lods
sahf
sub
cmp
mov
xor
or
fistpll
lods
cld
nop
push
into
test
cltd
push
sub
mull
out
mov
inc
dec
loope
pop
lods
inc
xchg
insl
cs
rolb
bound
out
adc
xor
xchg
push
push
jle
fidivl
jmp
andl
neg
mov
sarl
cmp
pop
fs
shlb
stc
cmp
gs
jne
xchg
jge
outsb
repz
in
int
dec
mov
fs
into
dec
sbb
jne
inc
xchg
xor
arpl
fnsave
xchg
push
dec
arpl
ss
cli
int
push
lcall
cmp
adc
das
or
sbb
cmp
subl
out
xchg
push
xorl
jns
pushf
jbe
push
fbstp
leave
inc
sbbl
cmpsb
or
sarb
jo
imul
or
mov
fdivrs
push
push
inc
cltd
dec
or
arpl
call
jo
rorb
mov
mov
fsubrl
test
in
push
xor
sub
hlt
jge
outsl
icebp
mov
or
push
xchg
mov
cmp
mov
jge
adc
popa
addb
jmp
push
mov
jecxz
ret
lret
test
inc
adc
loop
push
xor
mov
add
mov
rcrb
xchg
aas
sbb
scas
push
mov
mov
xchg
cmc
mov
insb
jne
cmpsl
jne
cmpsb
fdivrp
mov
cmpb
push
mov
cmp
jne
mov
xor
mov
idivl
jl
pop
mov
popf
pop
push
lret
pop
and
jb
test
test
jmp
push
or
add
mov
lods
ja
es
xor
add
push
addl
push
push
mov
pop
pop
lret
cmp
mov
cmp
or
imul
es
adc
nop
ljmp
inc
jbe
cli
mov
sbbl
sub
popa
add
xchg
cmp
addr16
mov
push
idivl
in
sbb
push
xor
fisubl
imulb
pusha
enter
push
iret
std
mov
adc
fistpl
aad
jne
sub
mov
data16
popl
sub
loop
mov
test
lret
stc
adc
cmpsl
push
jae
xchg
arpl
jnp
das
mov
or
jne
enter
xor
jb
test
mov
cmpb
inc
bnd
mov
xor
aad
xchg
test
call
nop
mov
jmp
jp
test
push
mov
cmpsb
mov
xchg
das
imul
cld
sbb
jmp
repnz
and
std
cli
mov
jmp
jp
add
push
xor
inc
ss
in
sub
inc
dec
xchg
push
xchg
xor
jo
inc
jb
test
pop
push
aad
pop
jae
cmp
test
roll
xlat
dec
std
jmp
cs
and
fs
int
pushf
idivl
sbb
xchg
mov
jmp
andl
mov
sub
aaa
cli
insl
add
call
js
mov
enter
dec
ss
iret
in
aad
outsb
jae
movb
mov
mov
in
mov
roll
or
mov
inc
ret
xchg
mov
xor
mov
rclb
aad
lcall
cmp
dec
pop
fcoms
movsb
out
hlt
and
xchg
ret
int
sub
adc
sbb
cmp
in
repz
test
mov
and
dec
mov
inc
lock
pop
xlat
fnstenv
out
lods
leave
jecxz
sti
fs
je
xchg
add
outsb
imul
mov
inc
jns
mov
ds
fidivl
popa
pusha
es
mov
mov
lret
lods
ljmp
xchg
imul
repnz
xchg
out
stos
jg
out
imul
jae
push
jno
or
dec
pop
adc
std
bts
ret
mov
xchg
pop
ret
pop
mov
xchg
pop
cmpsb
add
cmp
in
mov
cld
xor
test
mov
cwtl
roll
pop
push
aad
push
xchg
or
nop
test
addr16
stos
sbb
fs
mov
mov
lret
and
xchg
inc
movsb
lahf
mov
pop
inc
test
test
xchg
js
pusha
cmp
pusha
mov
push
daa
ret
rclb
xchg
cmp
xchg
pop
inc
inc
jb
sub
aad
popa
enter
dec
shlb
cli
push
pop
out
mov
stc
mov
sbb
and
cmp
mov
inc
sub
sbb
mov
xchg
ds
adc
addb
aad
movsb
adc
mov
mov
test
push
lea
int
xchg
repnz
xchg
mov
mov
xor
cmpsl
mov
in
enter
or
jge
xchg
xchg
les
jmp
out
pop
scas
add
pop
cmc
out
outsl
movsb
popf
pop
je
out
and
rol
mov
cs
jmp
ficoml
pop
addl
bound
pop
mov
test
ja
stos
cmp
pop
cmpsl
xchg
inc
mov
add
cmpsl
out
dec
stos
sub
mov
outsb
pop
test
xor
fscale
jno
daa
xchg
jl
loope
cmp
mov
xchg
pushf
loope
jge
mov
sub
ss
mulb
push
sbb
xor
inc
jmp
ljmp
mov
call
dec
inc
rolb
xchg
jmp
stos
adc
pop
push
mov
inc
pop
or
aam
mov
mov
ret
lods
push
or
push
and
ja
mov
icebp
inc
pop
insb
or
out
cs
bound
nop
dec
xchg
outsl
push
lret
cmp
jae
jle
test
in
xchg
xlat
cmpsb
jl
xlat
mov
test
push
aaa
xchg
push
push
shl
push
into
mov
shlb
cmpsb
cltd
xlat
push
push
push
push
push
sahf
jb
xchg
test
dec
cltd
popf
mov
pushf
jno
xor
scas
shl
repz
add
or
push
out
xor
jae
jnp
shrb
push
dec
nop
notb
mov
pop
mov
jnp
add
adc
jge
cmp
cmp
ret
adc
leave
mov
xchg
sub
pusha
xor
push
sbb
repz
cmpsb
mov
inc
or
out
xor
icebp
cmp
push
inc
cmpsl
push
loop
push
cli
into
cmp
and
repnz
and
mov
insb
sbb
pop
aad
in
jae
xchg
test
add
mov
repnz
test
stc
dec
movsb
test
imul
mov
lret
popl
in
jbe
pusha
rorb
jle
stos
mov
fisubrs
call
fwait
cmp
jl
adc
push
ja
aam
shr
jmp
ret
add
leave
mov
fwait
and
add
add
mov
int
sub
fsubl
or
sbb
mov
mov
sti
mov
dec
je
test
ret
xchg
imul
nop
clc
cmp
xor
jbe
inc
xlat
mov
ljmp
addb
clc
jmp
out
jne
xor
cmp
mov
jo
pop
mov
and
mov
stc
shl
sbb
rorb
jnp
sub
in
cmp
fs
push
push
mov
add
popf
adc
insl
sahf
mov
mov
mov
mov
cltd
pop
daa
in
fidivl
out
xchg
push
fwait
push
fcom
mov
out
test
push
int3
add
loop
shlb
sbb
xchg
or
mulb
dec
jne
lock
outsl
clc
xlat
mov
negl
dec
pop
aaa
mov
jb
inc
rcr
out
mov
push
aas
addl
mov
sub
jg
mov
daa
loopne
ljmp
fnstsw
loope
repnz
pop
je
push
out
add
ret
jmp
call
adc
rclb
loop
cmpsl
rorl
inc
mov
out
jmp
inc
pop
stc
dec
insl
in
cld
out
cmp
and
xchg
in
rcr
repz
test
sbb
insl
enter
std
call
fwait
enter
insb
roll
push
sub
shlb
es
sbb
inc
frstor
jmp
sub
xor
inc
jg
out
mov
out
xor
jnp
jo
testb
daa
adc
jbe
shrb
mov
mov
mov
xchg
adc
sbbb
cmp
jp
inc
addr16
out
jno
mov
fmulp
push
and
cmp
scas
daa
mov
adc
lods
push
stos
insl
sub
push
sub
mov
jle
sub
pop
add
sub
inc
sbb
shll
test
fwait
dec
loope
gs
lahf
pop
cltd
addr16
fnstsw
pop
clc
lret
push
popa
int
add
mov
scas
sahf
jne
hlt
dec
and
push
movsb
aad
cmc
lret
pushl
xchg
cmp
jb
enter
sub
xor
cmp
mov
push
mov
sti
mov
roll
das
lcall
dec
push
push
sbb
xchg
push
nop
pop
pop
mov
xor
mov
sbb
cmp
pushf
nop
roll
adc
mov
into
adc
jnp
adc
hlt
rorl
mov
mov
add
pusha
mov
sahf
xchg
fs
test
je
sbb
xor
les
add
fdiv
aas
iret
push
outsl
sub
pop
es
gs
insb
xlat
in
das
cmpl
inc
pop
jns
shll
pop
sub
cmp
add
repz
inc
test
lret
add
cmp
mov
out
mov
adc
in
jp
sbb
adc
jmp
mov
daa
xchg
pop
and
sarb
mov
jle
xchg
and
add
rorl
cmp
dec
sub
or
insb
jle
push
mov
jns
pop
les
cmpsl
adc
daa
add
fidivrl
xorl
add
sub
stc
sub
mov
jne
icebp
ret
ret
rcll
and
xor
movb
pusha
mov
dec
sub
rcr
or
push
hlt
aaa
call
cmp
ss
push
aam
cli
jp
push
or
or
mov
lds
sbb
mov
fdivl
cmp
decl
repnz
cmpsl
cmp
inc
jne
stos
iret
repz
clc
or
cmpsl
test
or
mul
popf
jmp
out
pop
inc
dec
sbb
or
insb
lcall
leave
pop
jge
mov
jl
xchg
lret
pop
jno
mov
jle
sbb
stos
jne
sub
push
xor
lods
pushf
scas
lods
daa
popl
stos
aad
test
xor
pop
adc
into
cmp
cli
pusha
out
into
fsubrl
jl
push
loop
pushf
andb
adc
mov
test
inc
lods
cmp
popf
jae
adc
std
popf
test
popf
inc
in
fcomps
xor
or
dec
mov
leave
fs
sbb
adc
sbb
fisubrs
dec
push
add
mov
int3
in
ret
jbe
out
pop
pusha
cmp
stos
sbb
ficoms
pop
add
cs
pop
xchg
xchg
js
cld
jb
dec
add
movsb
loopne
and
xchg
leave
cwtl
loope
mov
dec
mov
xchg
js
int
adc
jmp
cld
out
dec
dec
mov
mov
fidivrs
sbb
mov
push
mov
or
jbe
cmp
cld
pop
out
inc
pop
adcl
repnz
fsubrl
mov
mov
cmc
vphaddubw
das
arpl
sbb
jns
fnstsw
cs
pop
into
cmpsl
dec
jne
mov
xchg
sar
sbb
jge
cmpb
pop
cmp
pop
jmp
mov
sbb
lea
bound
or
jecxz
adc
sahf
stos
pop
or
and
lahf
stc
jecxz
xchg
jp
sahf
lret
xchg
dec
cwtl
cs
inc
cmpsl
xchg
xor
push
addb
iret
push
lock
test
lret
adc
and
test
mov
imul
insl
cs
and
das
pop
int
sbb
sub
scas
dec
add
lcall
inc
sub
mov
cld
sbb
out
ja
daa
push
sti
shrb
pop
mov
xchg
lcall
push
adcb
push
xor
jne
gs
cmp
jb
into
xor
lahf
pop
jl
leave
les
pop
and
xor
fidivs
lret
insl
push
jno
xchg
js
out
scas
pop
jno
push
stc
sub
iret
out
into
xchg
add
xchg
inc
nop
lret
sbb
in
mov
test
cmpl
ja
into
repnz
and
dec
daa
aad
lods
pop
adc
jecxz
xor
adc
hlt
cmpb
imull
fadds
dec
clc
cmpsb
out
jae
stc
push
mov
pop
dec
stos
shll
and
mov
loopne
sub
fldl
and
fisubrs
cmp
rcl
rcll
sbb
fmuls
sbb
fwait
xor
adc
pop
das
repnz
lahf
sub
and
push
cmp
aas
push
imulb
loopne
pmulhuw
cld
push
cld
xchg
lods
lea
mov
xchg
hlt
int3
mov
sbb
xchg
mov
add
aam
sbb
sub
dec
xchg
cmpsb
sbb
sbbl
ficoms
sub
mov
and
ret
mov
adc
pop
sub
xor
dec
nop
mov
add
inc
mov
js
scas
sbb
push
or
pop
or
imul
in
push
ret
jle
rcrl
cmp
lock
test
or
adc
and
repnz
stos
inc
adcb
imul
jge
cmp
lds
push
in
cmc
dec
daa
dec
xlat
mov
mov
inc
push
out
push
jnp
cltd
mov
mov
jne
inc
outsb
push
jnp
fisttpll
movsl
jmp
adc
mov
xchg
mov
push
imul
push
xchg
push
mov
es
out
push
jmp
lds
pop
cltd
out
pop
movsl
inc
ja
dec
pop
cmp
or
insl
leave
imul
cltd
dec
and
cs
daa
fptan
lahf
push
inc
mov
fstpt
imul
push
jge
or
fnsave
xchg
sbb
rcrb
add
jecxz
push
aam
dec
jbe
jl
push
jp
rcl
lea
mov
xlat
or
loopne
xor
sbb
repz
sbb
jne
sub
jbe
test
jbe
inc
mov
xor
or
add
jmp
pop
push
loopne
lds
push
and
ds
test
int3
jge
adc
dec
lds
dec
sub
push
out
xchg
mov
aam
nop
jle
mov
inc
das
test
test
adc
loopne
jp
xchg
dec
pop
mov
mov
jle
out
xorl
inc
dec
push
inc
pop
sub
jg
inc
cwtd
xor
push
movsl
sbbb
repz
ficomps
sbb
in
ret
pushf
mov
fiadds
mov
fcom
add
divl
push
es
mov
add
cmp
addl
adc
push
jmp
in
in
cmc
push
mov
inc
mov
dec
shrl
fadds
dec
sub
out
jne
mov
movb
fwait
jnp
adc
ja
dec
leave
fimuls
test
in
or
or
dec
jae
fimull
add
iret
insb
adc
sub
nop
loopne
fnsave
pop
sbb
dec
pop
loope
push
shll
mov
push
loope
cltd
in
sbb
xchg
scas
movsl
dec
xor
shll
movb
mov
lock
mov
loop
js
mov
jno
pop
inc
pushf
ret
pop
sbb
cmpsl
sub
lods
jbe
lret
and
mov
push
imul
fiaddl
mov
test
sbb
outsl
pop
pop
stos
and
int3
and
dec
inc
ret
cmpsl
sbb
push
fldz
movsl
xor
scas
cmp
dec
das
in
rcll
fimuls
mov
jbe
jo
jmp
push
pop
repz
xchg
add
jbe
pop
ret
add
push
cmp
push
pop
std
push
xor
loope
call
mov
or
push
mov
xchg
push
fsubp
pop
loope
ljmp
int
jge
cmp
lds
jge
scas
adc
mov
push
movsb
push
pop
xchg
mov
dec
rcrb
leave
dec
je
in
sbb
int3
imul
aad
inc
leave
dec
xor
mov
call
jo
jecxz
jmp
out
xchg
dec
mov
mov
subb
mov
xor
out
inc
dec
cmpsb
sbb
sahf
jecxz
sbb
mov
fcoms
test
inc
out
int
stc
dec
sbb
or
sbb
cmpsl
ljmp
mov
leave
mov
shll
nop
mov
add
scas
mov
mov
in
fs
sub
cmpb
sbbb
xchg
dec
scas
cmp
iret
ja
pop
in
dec
pushf
jo
cmp
push
adc
push
xchg
sub
cli
mov
fsubs
rcr
out
fwait
fldl
cmc
enter
push
lahf
fnstenv
pop
mov
insl
cmpsl
mov
push
push
add
add
addr16
jo
sbb
faddl
mov
in
lea
and
inc
fucomp
push
in
je
daa
leave
xchg
scas
mov
cmpsb
int3
test
das
daa
dec
ret
sub
add
rcrl
jbe
fimull
in
xchg
adc
sbb
out
cmc
repz
repz
pop
or
xor
rcr
in
pop
dec
add
pusha
jo
push
clc
mov
popf
in
cs
icebp
adc
inc
jne
cmp
jl
fs
decb
cmp
xor
xchg
mov
repz
or
fistps
jo
leave
lods
add
push
call
sti
xchg
into
sub
push
lret
xchg
orl
sub
pop
xchg
add
sbb
cmp
fisubrl
into
cmp
xor
std
clc
jp
aam
andl
fcompl
push
pop
add
dec
xchg
mov
cltd
ror
add
sbb
insb
sbb
xchg
popf
test
inc
sub
cmpsl
loopne
arpl
pushl
jmp
addb
adcb
inc
ret
add
add
push
dec
xor
addb
aaa
xor
push
jbe
mov
sbb
sbb
or
ljmp
mov
push
sti
sti
data16
dec
repnz
cmp
push
repz
mov
stos
je
push
fcoms
mov
dec
sbb
xchg
push
in
pop
pop
push
popa
mov
call
leave
xchg
xor
hlt
xor
add
cmpsb
sbb
cmc
xor
mov
xchg
lcall
sub
jmp
sbbl
adc
and
mov
push
cmp
adc
jp
or
iret
xchg
idivb
pop
mov
ljmp
scas
dec
gs
leave
mov
pop
lret
add
mov
and
das
lcall
aam
fdivr
fs
xchg
aas
jle
lret
cmpsb
cld
mov
sub
and
adc
dec
aas
or
test
pushf
lock
sbb
aad
add
push
pop
jb
shrb
pusha
jge
cmp
rolb
in
jne
aad
and
push
adc
std
sub
orl
mov
and
aad
mov
repnz
push
jmp
fildll
fnstsw
jecxz
divb
add
mov
sub
into
mov
and
icebp
mov
andb
add
les
shlb
dec
daa
sub
inc
inc
xor
arpl
pop
movsl
scas
mov
and
jns
loope
cmpb
dec
loope
or
lcall
push
xlat
and
aam
lcall
shr
pop
xor
mov
ja
jmp
or
mov
rol
aam
mov
sub
and
add
and
outsb
addr16
and
jle
loope
or
xlat
into
cmpsl
testb
out
pushf
mov
sbb
lods
iret
out
jmp
push
sub
fsts
out
in
scas
inc
les
loope
push
roll
mov
scas
rolb
jo
test
push
dec
sti
pop
popa
lahf
fimuls
enter
lods
lret
aas
push
icebp
daa
mov
xor
or
mov
or
das
sbb
dec
out
adc
repnz
push
stos
fmul
jae
shrl
cmp
xchg
pushf
je
and
cmp
mov
lods
inc
add
subl
int3
repnz
or
lret
xchg
push
cltd
dec
dec
xorb
data16
test
mov
stc
inc
xchg
or
imulb
add
loop
mov
rolb
in
call
dec
xor
fistpll
adc
pop
subl
inc
xor
mov
sbb
and
repnz
pop
call
mov
mov
repnz
xor
mov
sbb
test
inc
mov
mov
out
in
inc
les
into
cmp
insb
adc
jns
mov
xchg
inc
clc
fcoml
xor
mov
arpl
xor
mov
loope
jae
xlat
cmp
jns
pop
add
test
loop
sub
shrb
sbb
mov
mov
sub
cmp
or
repz
adc
mov
pop
adc
mov
loope
lcall
cmp
in
inc
sahf
xor
test
fld
mov
divl
dec
pop
mov
call
sub
dec
loopne
pop
mov
out
add
fldcw
imul
dec
loope
lcall
pop
addr16
add
enter
mov
test
jnp
in
pop
add
insl
mov
sub
push
or
adc
push
inc
enter
inc
inc
loop
sar
jle
out
inc
and
jge
outsl
add
and
xchg
dec
test
bound
test
stos
sub
mov
mov
xchg
pop
inc
aaa
adc
movl
xchg
popf
jmp
pop
push
arpl
stc
and
mov
xorl
or
outsl
sub
and
mov
loop
clc
lea
stc
sbb
mov
jo
sbb
sub
popf
movsb
daa
loop
jp
adc
lret
xchg
cmp
xchg
lods
or
pop
jb
pop
mov
pop
jns
xchg
dec
mov
lods
cmpsb
shll
aam
leave
inc
push
and
push
stc
jnp
sbb
test
movsl
pop
jl
ret
mov
lahf
inc
jl
add
xchg
mov
jnp
scas
sbb
das
adc
into
pop
inc
call
cmpsl
pop
dec
jle
xor
jle,pn
push
or
and
mov
dec
inc
inc
stos
cmpsl
dec
inc
cmp
int3
and
sub
pop
dec
scas
mov
cmp
adc
fsubl
sbb
push
repnz
js
xor
test
movsb
jns
xchg
fcoms
imul
push
push
jmp
mov
lcall
popf
cmp
push
mov
inc
mov
cmp
xor
push
rorl
in
clc
xchg
rolb
and
dec
pop
fiadds
jl
scas
jae
imul
jo
sbb
in
push
inc
shlb
add
sti
test
stos
push
xor
jno
add
sub
sub
jecxz
dec
mov
imul
lods
cli
dec
js
or
jge
call
outsl
dec
cmp
jb
neg
mov
sub
mov
in
cmc
das
lock
push
inc
sub
aad
mov
movsl
mov
hlt
or
mov
repnz
mov
subb
subl
and
int
jp
lods
push
mov
cmp
lcall
jl
mov
dec
cmc
jle
pop
aad
fstpt
cmpsl
fiaddl
cwtl
jecxz
jmp
vmwrite
mov
lds
xchg
and
adc
xor
pop
in
pop
xor
inc
mov
das
test
adc
filds
mov
loop
and
sbb
inc
movsl
cmpl
subb
mul
sbb
das
and
pop
cmpsl
sbb
xlat
loop
syscall
xchg
jp
scas
inc
mov
mov
in
dec
mov
leave
cld
test
lret
sbb
sbb
je
or
and
cmove
xor
xchg
in
add
push
out
call
pop
cld
add
mov
mov
dec
arpl
lahf
jnp
insl
cmp
or
cmp
popa
imul
jecxz
out
and
mov
jle
es
rorb
xchg
and
popf
mov
lret
add
dec
fiadds
ja
sbb
iret
mov
mov
divb
sub
jg
inc
or
scas
stos
loop
sti
xchg
and
pop
inc
rcrl
xchg
xor
loop
push
lea
bound
xor
shrl
dec
or
jl
mov
xor
adc
mov
ljmp
xor
lods
jle
faddl
loope
outsl
pushfw
mov
sub
xchg
out
mov
les
loopne
ljmp
imul
sbb
std
ror
sub
aas
scas
pushl
pop
mov
insb
jbe
inc
jmp
pop
fcomps
inc
mov
jmp
fxsave
xchg
loopne
mov
mov
sarb
xchg
sub
test
sti
xchg
mov
dec
lods
ds
notb
and
mov
out
inc
arpl
push
movsl
cli
push
lcall
push
cwtl
test
ljmp
jb
ret
adc
imul
or
mov
and
aaa
mov
pop
inc
cmc
jo
push
out
dec
sbb
pop
sbbb
test
sbb
push
sahf
or
mov
outsb
adc
mov
lock
lods
cs
and
notl
mov
xchg
mov
aad
adc
sbb
push
or
sub
dec
in
aam
in
arpl
cmp
negb
insl
push
int
cs
fnstsw
jle
jae
sbb
cwtl
sub
xchg
test
push
fcomps
les
inc
or
fs
jbe
cmpsl
sub
or
shl
or
sbb
fidivs
test
iret
aaa
popa
ret
add
pop
push
std
dec
je
test
mov
pushf
cmp
adc
pushf
stc
pop
cmc
xor
ret
jns
xchg
adcb
into
cli
fadd
push
inc
pop
xchg
in
lcall
or
xchg
add
jg
aam
outsl
arpl
push
xor
pop
dec
push
push
sub
lds
popf
jnp
popa
arpl
mov
sub
dec
shrl
cmp
outsl
mov
dec
push
ret
pop
rcrl
orl
aaa
dec
sub
movsbl
fildll
call
cmp
cld
aad
inc
rol
jge
cmp
or
rclb
ljmp
imull
clc
outsb
decl
ja
sbb
mov
test
shl
fiadds
and
not
jo
leave
dec
divl
ss
push
pop
push
mov
pop
sbbb
jb
shll
inc
movsb
shll
inc
jp
gs
dec
mov
hlt
sub
jb
icebp
mov
xchg
pop
aad
cmp
cmc
mov
inc
or
mov
lds
inc
push
xor
cli
cmp
sahf
popa
mov
fs
sahf
shrl
stos
push
jp
mov
pusha
or
lea
mov
sbb
adc
push
inc
ss
xchg
test
or
inc
add
xor
cmp
scas
out
push
mov
ret
int
scas
and
pop
mov
mov
out
ss
adcb
sbb
faddl
es
sbb
ret
inc
sub
movsl
cmc
mov
sbb
enter
stc
adc
enter
pop
test
lock
sbb
or
imul
jle
mov
cmp
sub
mov
loope
notl
ret
mov
out
imul
mov
daa
std
fwait
mov
and
mov
jb
insb
cwtl
aad
iret
push
sbb
jae
cmovne
gs
ss
arpl
adc
pop
xor
adc
fnstcw
jne
mov
jle
add
dec
inc
mov
pop
mov
test
test
insb
mov
or
pop
shl
js
xchg
les
mov
adc
ja
gs
into
stc
lret
sub
int
cmc
or
icebp
outsl
inc
sbb
aas
mov
inc
mov
in
mov
and
loopne
rolb
call
scas
rcrl
mov
cltd
mov
pop
jo
mov
sub
push
std
xchg
scas
dec
jg
xchg
int3
xchg
inc
inc
int
add
add
cmp
cmpsl
adc
xor
in
testb
andb
cmp
mov
xchg
pushf
subl
or
sbb
mov
push
imul
mov
fiaddl
stc
jl
dec
sti
test
shlb
xchg
xor
or
imul
dec
hlt
adc
adc
cmp
imul
adc
test
mov
inc
divl
loopne
add
add
xchg
jns
lods
lahf
fbstp
inc
loope
cmpsl
jecxz
daa
fcmove
hlt
clc
xlat
pop
sbb
call
inc
dec
jge
dec
pop
fisubrs
repnz
add
test
imul
push
mov
dec
cmpsl
lds
mov
ret
ret
add
outsb
std
scas
in
outsl
pop
xor
xor
add
sub
insb
rcll
jge
cltd
hlt
test
sbb
pop
out
out
push
aad
pop
decb
loop
or
lea
or
or
jp
fcmovu
jae
popa
inc
notl
fimuls
cmp
or
pop
imul
mov
sbb
cmp
and
aad
sbb
mov
data16
lahf
movsb
or
sti
cmp
xchg
sarl
push
mov
xchg
insl
mov
repnz
clc
inc
mov
clc
mov
rcrl
test
and
nop
inc
arpl
aam
fcmove
fs
lret
jbe
xchg
xor
es
mov
gs
mov
in
aas
adc
xchg
mov
inc
pop
xchg
pop
sti
clc
lret
fwait
adcb
cmp
adc
and
xor
ret
adc
cli
cmpsb
mov
pop
fidivrs
xor
push
in
cmpsl
out
mov
ret
lcall
mov
fistps
or
iret
mov
popf
hlt
sbb
hlt
hlt
out
mov
cltd
mov
mov
leave
add
xor
add
mov
rcrl
movsb
pop
lea
jae
jl
cld
mov
fcoml
xchg
mov
pop
arpl
nop
js
das
mov
je
jecxz
imulb
pop
nop
pop
test
fbstp
pop
popa
jg
or
lea
xchg
loope
and
rolb
cld
push
xor
popf
xor
fs
js
int3
lds
aad
mov
movl
lods
xlat
adc
stos
jbe
sbb
imul
and
repnz
fnstsw
xor
ficomps
sarl
jnp
mov
gs
les
sub
xor
add
adc
adc
sub
outsl
test
push
outsb
std
sub
arpl
insb
cmp
adc
ja
aad
adc
dec
xchg
lahf
cld
enter
pop
shl
in
stos
inc
sbb
test
popa
adc
mov
clc
push
adc
in
jnp
cmp
push
dec
dec
pop
lds
ret
or
push
pusha
lcall
xchg
dec
push
dec
out
push
jb
inc
stc
xor
mov
ja
ljmp
jo
pushf
mov
sti
jne
push
lret
xchg
js
pushf
push
ret
dec
out
push
ljmp
jno
repnz
outsb
lods
add
add
lret
leave
stos
jno
test
clc
push
popa
fwait
mov
jge
adc
or
in
dec
cwtl
stc
mov
cs
push
out
orb
into
jne
cli
call
jns
repz
xchg
lods
je
sbb
sysret
jnp
xchg
inc
in
pop
xchg
stc
aaa
ret
sub
loopne
cld
aad
fdivrs
or
or
push
push
je
sub
scas
fadds
cmp
or
cmp
push
push
dec
addr16
cltd
cld
pop
inc
movb
lock
jno
daa
pop
add
inc
mov
arpl
mov
mov
lods
loopne
push
xorb
mov
inc
push
mov
xchg
jnp
or
mov
decb
ss
pop
movsb
adc
dec
fstl
repnz
sarb
cmp
sbb
xchg
arpl
pop
outsl
mov
inc
sub
in
lock
mov
frstor
mov
ljmp
mov
dec
or
subb
inc
or
sub
fcompl
jg
test
mov
rol
fnstsw
mov
subl
test
pop
and
dec
lods
rorb
lcall
and
push
aad
mov
gs
sarl
or
xor
clc
movq
mov
xchg
sub
lret
inc
stc
xchg
orl
push
push
sub
mov
mov
sub
adc
mov
or
push
test
and
sbb
ja
push
mov
jae
jle
movsb
jl
jp
or
fldt
iret
jle
or
jl
mov
add
sbb
rclb
std
movb
cmpsb
and
addb
out
outsl
imul
cmpsb
mov
into
sub
jmp
inc
out
mov
sahf
test
sti
xlat
fs
xor
add
jecxz
fdivs
mov
xchg
mov
iret
xchg
loope
jmp
fwait
cmp
ficoms
addr16
mov
cmc
cmp
out
add
and
ret
data16
inc
hlt
or
push
jae
sub
inc
fstp
add
out
in
fbstp
lods
xor
push
jae
loope
arpl
pop
dec
mov
mov
push
fwait
inc
ret
mov
mov
daa
lahf
xor
pop
in
add
out
mov
mov
xchg
xchg
clc
cltd
lahf
syscall
lret
sub
push
sbbb
ss
shrl
sub
out
clc
sub
iret
mov
cmp
mov
jmp
inc
int3
popf
push
lcall
inc
cmp
or
andl
shrl
xor
imul
adc
xor
xor
int
test
cmc
sbb
mov
js
into
ja
int3
adc
imul
xor
adc
mov
dec
stos
xchg
js
mov
test
testb
inc
lret
pop
adc
adc
je
or
mov
es
and
icebp
xchg
aas
inc
dec
stos
mov
xor
add
fdivrl
push
dec
push
out
mov
jmp
sbb
ja
cltd
mov
mov
movsb
ss
seta
push
mov
inc
cmp
arpl
outsb
aaa
pop
push
mov
xor
call
push
jae
cmpsb
xchg
pop
and
fisttpll
leave
sbb
mov
dec
sbb
push
sub
cld
js
jmp
scas
cmpsl
or
and
push
and
mov
popa
dec
aam
aaa
inc
int3
xchg
push
mov
jg
int3
popf
inc
mov
mov
lods
ficoml
cmp
mov
add
repz
test
add
adc
sbb
add
fdivrs
cli
imull
cmpl
fst
jl
mov
add
mov
jae
mov
inc
mov
out
mov
cltd
sbb
inc
mov
push
dec
sahf
popf
xchg
pop
or
das
frstor
std
inc
push
into
push
and
mov
out
movsb
sbb
jne
mov
cs
or
repz
push
jmp
xor
or
mov
xchg
inc
push
in
push
imul
addr16
jl
mov
jmp
adc
fisubrs
popa
adc
into
sbbb
pop
cld
cmpsb
push
adc
addr16
mov
mov
mov
jp
daa
movsl
nop
movsl
in
xor
fadds
inc
xor
mov
out
ss
mov
add
ret
les
jbe
test
mov
iret
lock
dec
mov
lds
dec
es
test
loopne
and
mov
out
repnz
sbb
sub
scas
aaa
outsl
pop
mov
hlt
roll
decl
jecxz
cmp
lods
repz
gs
sbb
mov
enter
iret
mov
xor
lret
or
mov
aaa
adc
cs
adc
jno
addl
dec
push
lcall
iret
cmpsb
insb
dec
mov
into
jecxz
dec
and
and
push
and
mov
adc
fidivl
loop
inc
add
xchg
pop
test
out
test
cld
shr
dec
insb
leave
cmp
and
icebp
push
pop
leave
fsubrp
or
les
mov
mov
mov
scas
jae
outsb
xchg
mov
aam
xor
add
inc
arpl
xchg
cltd
push
jge
les
jno
mov
mov
sub
mov
and
stos
push
rclb
into
outsb
fwait
dec
mov
inc
outsl
js
nop
sub
cmp
jl
xor
setp
mov
sub
dec
inc
inc
jp
scas
cmp
cmp
mov
nop
pop
fdecstp
out
ds
loope
pushl
outsb
movsl
outsb
bnd
lods
pop
and
sarb
add
loope
push
ja
pushf
push
js
scas
out
aad
and
cmp
pop
sbb
jno
jbe
dec
ds
inc
or
xchg
out
cmc
push
ljmp
clc
mov
scas
cmp
fdivrs
adc
add
movsb
popa
jb
add
mov
fstpl
inc
adc
test
xchg
push
mov
popa
jge
lock
data16
shlb
push
pop
pextrw
pop
push
xchg
fld
push
cmp
js
fmuls
adc
lds
fwait
leave
push
sbb
in
push
pop
and
test
sbb
mov
imulb
dec
das
mov
lahf
shll
fcoms
clc
cmp
mov
in
pop
hlt
movsl
mov
sub
cmc
push
out
mov
sbb
fwait
pop
xchg
shlb
push
cmpsl
mov
cmp
jg
testl
and
stos
leave
jl
adc
and
orb
mov
pushf
loope
adc
aam
outsb
pop
fdivs
mulb
popa
out
or
out
pop
or
mov
jmp
inc
pushf
insb
in
inc
cmp
aam
mov
out
pop
xchg
in
fcomp
shr
jae
aaa
xor
repz
pop
lods
ds
jp
enter
movsl
das
cmp
aam
mov
fs
push
pop
xor
pop
scas
inc
mov
fnstenv
and
jno
sub
inc
push
cmp
out
sti
push
out
mov
xchg
stos
adc
mov
pusha
pop
sahf
leave
mov
or
leave
mov
jecxz
cld
fistps
pop
inc
and
dec
adc
sbb
pusha
in
cltd
dec
mov
cmc
mov
jb
mov
and
dec
fnstcw
bound
lahf
jb
and
push
pop
aas
push
cmp
loopne
jne
pushf
inc
fs
and
jne
mov
pusha
ss
mov
je
inc
fidivl
jne,pn
push
and
aas
imul
lret
sub
xor
cltd
dec
fstpl
js
xchg
scas
adc
or
ret
dec
jb
push
and
sub
push
fcomi
xchg
aas
bsf
sbb
push
scas
mov
fidivrl
push
or
cmp
jg
cmp
inc
xchg
inc
adc
mov
inc
lcall
fidivrs
stc
data16
xor
jg
sub
mov
cwtl
sbb
mov
iret
sahf
fcomps
inc
aam
fcomp
push
sub
loopne
adc
push
jle
sub
jp
inc
cld
shl
cmp
mov
mov
in
hlt
jno
rcrb
aad
es
in
pop
ss
jmp
in
push
jnp
jge
lods
lods
mov
push
or
loopne
test
pop
fwait
repnz
movb
repz
rcrl
in
jnp
mov
popa
cmp
jmp
jno
aad
jne
push
xor
pusha
scas
outsb
lea
push
dec
lea
inc
pop
test
xchg
jno
adcl
ret
jbe
ja
xchg
mov
mov
jle
ret
mov
cmp
movsl
and
test
and
xchg
sub
cltd
fucomi
enter
movsl
ret
sub
and
mov
fldcw
push
mov
rcrl
subb
push
push
push
and
imul
std
aam
push
out
insl
add
add
mov
sub
jo,pt
pop
shll
int
cwtl
adc
or
sahf
dec
push
or
mov
out
in
pop
fstpt
js
dec
lods
int3
xchg
add
stos
and
les
push
pop
sbb
inc
addb
jne
cmpsb
sbb
out
es
pop
movl
addr16
dec
pop
sti
cwtl
test
sub
fnstsw
jne
icebp
test
push
push
jns
adc
push
jecxz
lock
aas
faddp
push
and
arpl
xor
ja
daa
test
add
lret
mov
aas
xchg
fldcw
in
pop
mov
pop
or
sbb
ret
mov
fidivl
out
add
mov
mov
push
fs
inc
xchg
push
mov
push
insb
fstpl
pop
and
lcall
mov
pop
cmpsb
out
cwtl
xchg
mov
fmuls
fldcw
jp
jnp
cli
cli
push
sub
mov
adc
adc
adc
jmp
lods
out
add
dec
fldl
mov
and
inc
push
mov
push
jp
sbb
cld
mov
mov
jle
das
push
test
mov
loopne
sbb
out
jne
mov
fdivr
scas
pusha
test
loop
cld
push
jns
outsb
pop
pop
push
sar
out
push
push
mov
mov
jge
leave
mov
sub
inc
inc
mov
mov
inc
push
mov
insl
adc
lahf
xchg
mov
jns
lods
out
adc
xchg
add
and
adcb
lcall
jg
call
outsb
mov
stos
ja
test
test
cmp
popf
pop
sahf
inc
cmp
cs
jmp
bound
push
or
add
xor
dec
das
cltd
test
jns
dec
xor
adc
shll
sub
popf
mov
mov
enter
mov
aas
pop
lcall
test
xor
inc
xor
sub
fistpl
adc
or
cmp
lods
sbb
jo
pop
dec
adc
jo
rcrl
lds
sbb
push
jne
enter
daa
aam
jnp
mov
jl
je
mov
ror
popf
aaa
push
xchg
mov
mov
sub
pop
js
jmp
shlb
jge
imul
pop
mov
sbb
push
push
icebp
pusha
fisttpll
mov
sub
sahf
xchg
repz
mov
xchg
clc
fildll
test
mov
adc
adc
std
jb
cmpsl
dec
inc
inc
pop
mov
inc
test
icebp
inc
hlt
sub
adc
aam
idivl
in
sahf
popa
dec
leave
and
jmp
adc
mov
loope
out
sbb
and
xor
adc
test
aas
movsb
add
or
cmp
cmp
inc
ret
fst
scas
cwtl
movsb
into
mov
mov
push
cmp
inc
outsl
sahf
adc
aaa
addr16
jae
adc
sarl
jl
xor
dec
cvttps2pi
xor
cmp
lret
mov
mov
pop
or
xchg
add
in
leave
or
pop
or
mov
pop
test
repz
imul
and
shrb
push
xchg
mov
shll
shll
cmp
insb
jmp
shr
repnz
std
or
aas
mov
scas
insb
cld
cli
mov
rorb
repnz
adc
bound
mov
das
sub
pop
sbb
insb
push
or
cmp
mov
sbb
mov
adc
mov
popl
into
lods
jb
das
xor
fwait
and
or
outsb
fs
jp
inc
clc
das
shll
dec
cwtl
test
push
cmp
xor
lds
push
ret
mov
fstpl
out
into
popa
inc
push
push
sub
or
xchg
into
sbb
movsb
orl
or
loop
into
testl
add
out
incl
rcll
xchg
outsl
fidivs
lret
adc
ret
das
in
ret
mov
xor
dec
mov
in
xor
sbb
imul
xor
inc
mov
lret
cmpsb
fdivrl
lret
inc
cmp
inc
push
ret
lock
or
sbbb
sub
ret
or
insb
ljmp
or
lods
cs
pop
jmp
dec
xchg
out
pop
popa
sar
jb
cmp
loop
in
inc
cmp
sbb
mov
pop
push
mov
sahf
cmc
stos
jbe
dec
leave
xor
sub
ljmp
fnstcw
push
sbb
aas
aas
xchg
lahf
jmp
xchg
repnz
bound
pop
inc
shrl
fwait
add
mov
mov
hlt
insb
fadd
aaa
pusha
sbb
add
sarl
or
movsl
sbb
xchg
mov
cwtl
pushf
adc
leave
ss
les
sub
mov
shr
imul
sti
cld
push
lret
lods
stos
pop
push
push
push
xorl
mov
pop
sub
outsl
pop
cmc
bound
adc
push
data16
subl
fwait
add
xor
ss
call
and
negb
test
jne
mov
adc
into
inc
pop
fs
outsb
cmpsb
cmpxchg
testb
sti
cld
rorl
cmpsl
mov
ds
adc
scas
sti
pop
mov
sub
in
subb
fldenv
xor
mov
pop
mov
sbb
je
xchg
outsl
add
loopne
jg
stos
test
mov
fistpl
jp
push
enter
push
pop
sbb
mov
divl
scas
les
inc
and
scas
cmp
rol
loop
or
fs
push
data16
neg
inc
int
lods
fsubl
xor
dec
inc
sub
sub
cmc
mov
sbb
aas
lret
dec
jg
jo
adc
pop
call
and
jge
xchg
pop
xor
jge
arpl
mov
cld
das
cltd
call
pop
mov
mov
nop
cmp
test
dec
fists
or
cltd
xchg
and
xor
mov
sub
jnp
in
xchg
cmpsl
sbb
ja
xchg
mov
jbe
icebp
adc
sar
mov
and
call
insb
es
jmp
xor
insb
in
xchg
cmp
in
inc
cmpsb
in
fnstcw
push
add
ljmp
add
fwait
gs
je
imul
sub
fiadds
lcall
outsb
insl
mov
repnz
fcomp
into
cmp
in
xor
ljmp
inc
es
jo
out
push
inc
mov
clc
fildl
push
mov
fdiv
cmp
mov
mov
mov
xlat
xchg
scas
imul
push
std
mov
mov
ja
fdivrs
ja
xchg
sub
jp
out
lods
ja
mov
push
enter
das
sub
or
sbb
jne
sbb
aad
fwait
mov
mov
push
inc
dec
jmp
xchg
daa
push
push
xchg
movsb
aas
loope
in
or
jmp
or
jo
lods
push
pop
es
stc
mov
fwait
mov
xor
rorb
inc
or
faddl
aaa
pop
rcll
lods
out
pop
gs
xor
dec
and
stc
rorl
adc
jle
cmpsl
loope
shl
lods
cmp
and
ficomps
jecxz
xor
or
leave
cmpsl
mov
test
mov
mov
xorl
or
lcall
lods
add
pop
inc
in
mov
ja
pop
jo
getsec
xor
aaa
add
lods
mov
pop
add
rcll
mov
xorl
push
addr16
pop
popa
mov
fdivrl
mov
or
pusha
inc
jbe
adc
sub
push
mov
pop
push
inc
dec
push
sub
xchg
sbb
int3
push
clc
movsl
mov
in
xor
pop
xchg
jns
and
dec
call
sti
test
rol
sahf
pop
dec
divl
push
jmp
lahf
loop
loope
and
push
loopne
ds
rcrl
sub
xchg
jg
jecxz
mov
fwait
sub
out
dec
fmulp
stc
xor
add
mov
dec
adc
outsb
inc
inc
stos
outsb
or
push
dec
lods
mov
inc
push
xchg
dec
dec
or
shll
mov
jg
scas
jle
sbb
pop
mov
ret
mov
cmpsl
jg
pop
dec
or
xchg
out
or
push
jecxz
outsb
int3
sbb
mov
cli
adc
mov
scas
or
test
dec
hlt
dec
cld
lcall
stos
repz
push
es
and
cmp
sti
cltd
popa
inc
jge
sub
mov
xchg
mov
out
and
xchg
cmpsl
add
mov
xor
pop
and
iret
lret
test
repz
push
mov
fstpt
sahf
test
xchg
ret
es
xor
inc
test
jecxz
cmp
jge
leave
stc
orb
out
cmpsb
add
rclb
lea
mulb
sub
jnp
cltd
inc
jl
mov
dec
sarl
dec
dec
sbb
and
repz
inc
sbb
push
repz
push
mov
rolb
fidivs
dec
mov
sub
pusha
loop
push
rcll
xchg
cli
out
push
and
mul
loope
test
mov
jnp
jl
cltd
mov
in
jae
xchg
fs
and
sub
mov
cmp
inc
push
negl
or
jb
cmpsl
adc
xchg
mov
xchg
xchg
nop
outsb
hlt
mov
add
das
scas
push
jecxz
xchg
jbe
xchg
dec
adc
push
cmp
pop
cmpl
js
jne
inc
sbb
int3
xor
inc
pusha
fisubs
jl
inc
jb
and
loope
or
aad
cmpsl
das
stc
pop
mov
out
repz
push
add
xor
add
jae
and
stos
sbb
sbb
nop
dec
ds
stos
movsb
subl
cwtl
xchg
dec
dec
in
fdivp
mov
leave
mov
hlt
and
test
into
dec
inc
mov
stos
pushf
movsb
push
jo
xlat
add
sbb
push
out
adc
fdivr
jmp
cld
popa
pop
addr16
add
inc
testl
lret
shlb
cld
inc
repnz
das
fists
pushf
inc
add
mov
loopne
or
loope
jl
lods
xor
mov
pop
cmpsb
add
pop
mov
hlt
add
imul
inc
jl
xorl
mov
cmp
jae
loop
jo
lock
icebp
mov
xchg
pop
in
xor
dec
hlt
dec
inc
mov
test
outsl
lea
daa
adc
rol
xor
repnz
jb
sub
add
fstpt
lret
ficoms
mov
fwait
hlt
repz
outsb
loopne
jecxz
mov
fisttpl
es
jge
mov
pushf
sbb
imul
in
cld
pop
insb
test
and
pop
in
test
rcrb
inc
xchg
jae
aam
int
push
mov
dec
div
sub
and
iret
xorb
add
ja
push
into
sub
lret
jo
pop
add
mov
fcoms
sub
mov
xor
sbb
jnp
xor
mov
adc
dec
mov
or
xor
sahf
mov
mov
push
mov
or
push
add
mov
sub
js
outsb
push
fwait
jmp
jne
jo
sub
mov
dec
daa
addr16
cmp
out
or
in
xor
popa
xchg
repnz
stc
mov
das
xor
mov
push
ja
and
dec
ds
xor
xor
in
sti
ret
jb
push
iret
nop
fisttpll
fsubrl
mov
enter
xor
xchg
hlt
jo
xchg
mov
xchg
and
in
dec
sbb
jb
xchg
dec
cmpsl
mov
or
wrmsr
cmpsl
add
repz
ljmp
iret
out
xor
stos
pop
mov
sbb
lods
jno
sbb
jnp
jp
scas
lods
sti
xchg
andl
adc
hlt
pop
clc
mov
dec
mov
dec
in
es
cmp
push
jb
or
fidivl
adc
out
push
loope
inc
and
pop
dec
push
stos
mov
push
jb
xor
jge
mov
pop
xchg
mov
mov
add
jae
jnp
jge
aas
pop
push
cmpb
or
cmp
mov
and
stc
fs
and
or
lods
aaa
imul
push
push
movsl
mov
push
cli
cmp
fnstenv
inc
sub
sarl
fadd
nop
aaa
iret
inc
fcoml
pop
xor
mov
jg
jge
and
jp
inc
dec
rcll
and
pop
inc
xchg
outsb
mov
cmpsb
jge
arpl
stos
mov
test
mov
scas
out
xchg
xchg
lods
mov
adc
pop
cmp
mov
int3
stos
jp
push
inc
jmp
or
push
jbe
mov
cld
sbb
adc
cmp
dec
jo
jp
jge
scas
fnstenv
mov
jbe
and
mov
or
pop
sub
int
inc
fcmovu
mov
mov
pop
push
stc
sbb
push
sbb
sub
aas
les
sbb
and
pop
pop
fcom
or
out
rcll
dec
mov
push
je
dec
loopne
mov
sar
inc
fstps
xchg
fs
ss
cmp
iret
push
cmpsl
push
jecxz
add
testl
mov
dec
ljmp
mov
lret
jb
lods
insl
pop
repnz
lds
mov
aad
xchg
daa
or
test
sub
push
imul
sub
mov
pop
add
rcrl
xchg
sbb
mov
mov
fimull
mov
outsb
or
sub
fisttpl
stos
dec
cwtl
sub
sbbb
gs
mov
mov
pop
in
neg
push
mov
jl
rol
xchg
cmpsl
push
into
sub
jg
pop
popf
push
insl
sarb
mov
aaa
test
mov
mov
jae
mov
xchg
loop
or
mov
dec
fwait
and
xor
mov
test
xchg
jae
in
inc
jge
fisubs
aaa
scas
adc
dec
pop
push
inc
sti
xchg
pusha
lret
cmc
pop
sub
daa
mov
iret
adc
jg
in
int3
sub
aad
lods
faddl
clc
mov
jnp
fstps
int
mov
add
push
dec
aaa
push
mov
out
loope
and
shr
sbb
leave
adc
mov
fcmovu
cmp
dec
or
mov
shl
pusha
push
out
sub
pushf
insb
pop
inc
mov
loope
fwait
inc
dec
sti
or
aad
add
stc
lea
lock
mov
xor
or
mov
in
or
repnz
inc
dec
or
incl
jmp
lea
adc
cltd
mov
leave
jbe
loopne
pop
push
jne
ficoms
add
in
jo
lock
sbb
mov
mov
cs
imul
inc
mov
or
in
clc
mov
push
inc
adc
js
mov
idivb
adc
inc
fnstenv
loope
lcall
mov
adc
orl
mull
mov
test
pushf
cmc
mov
scas
pop
push
bswap
test
push
mov
pop
in
test
pop
sbb
andb
xor
inc
push
enter
jle
popa
decl
or
and
scas
cmp
aaa
xchg
in
and
push
add
dec
scas
lret
dec
sub
rorb
mov
pop
aam
mov
pop
outsb
ljmp
pop
mov
inc
imul
jns
pushf
clc
hlt
add
pop
stc
adc
dec
cmp
add
in
mov
out
in
sub
ja
jbe
loope
mov
les
aam
push
add
xchg
mov
inc
fistps
mov
add
lds
adc
cmp
ds
xor
mov
dec
inc
dec
sub
sbb
pop
jge
mov
clc
daa
xor
push
add
stos
xor
jno
mov
inc
pusha
in
repnz
ja
pop
test
push
pop
sbb
inc
and
scas
mov
pushf
push
and
loop
inc
jno
sbb
cmpsl
mov
into
fsubs
mov
andl
jo
cmovl
jns
fs
add
js
rcrl
jecxz
pop
cli
into
repnz
insb
cmp
ret
xchg
jnp
jmp
gs
push
cmp
push
xchg
cmp
or
mov
les
sbb
cmp
daa
stos
mov
filds
cmp
ljmp
sbb
sar
fisubrl
push
jmp
insb
push
jp
sub
lock
loop
push
lods
jecxz
xor
mov
test
mov
cmp
outsb
into
xchg
mov
das
in
push
xchg
mov
mov
pop
xchg
scas
aaa
mov
mov
or
sub
bswap
mov
std
aas
mov
fsts
fcompl
jmp
xchg
xchg
pop
fwait
call
test
and
sbb
aam
sub
push
aaa
out
add
movl
adc
stos
push
or
sti
andl
pop
xchg
inc
or
aad
roll
mov
dec
dec
imul
outsb
inc
pop
ds
push
inc
pop
test
icebp
jne
aam
inc
or
pop
pop
push
jnp
inc
sbb
rcrb
pmaddwd
pop
mov
cwtl
jne
sbb
pop
hlt
xor
repz
incb
leave
push
pop
cmp
mov
and
popf
les
popf
push
add
inc
andb
aam
inc
adc
pop
mov
mov
icebp
cwtl
inc
mov
push
or
inc
adc
mov
cmp
lds
das
xchg
stos
push
mov
loop
out
push
sbb
cs
lds
jno
testl
dec
push
dec
mov
jbe
push
aaa
inc
and
das
xchg
sub
cli
jbe
jb
adc
pop
mov
icebp
addr16
mov
daa
xchg
xor
loope
mov
cltd
stc
stos
data16
xor
cltd
push
loope
sbb
or
or
xchg
mov
sbb
lahf
jae
jno
mov
or
fnsave
mov
lock
out
push
loop
je
stos
push
fcmovb
mov
inc
xchg
in
dec
pop
lods
add
fiadds
daa
mov
jne
xchg
xchg
arpl
imul
les
and
jne
arpl
sahf
mov
and
sub
aam
stos
and
sbb
stos
adc
cmp
jl
push
cmp
or
jmp
push
sbb
outsb
cmp
push
rcrl
sub
cmp
xchg
sub
hlt
movsl
lret
push
lods
push
push
daa
fidivl
and
xchg
add
aad
sub
and
push
and
mov
jno
push
sbb
ljmp
shll
add
clc
sub
mov
inc
push
sbb
loopne
jl
sarb
ds
inc
inc
jecxz
push
loope
sub
sbb
out
cmp
xchg
jge
sbb
push
or
mov
faddl
xchg
aad
inc
and
cmpsl
into
sub
or
push
clc
imul
in
incb
int3
xlat
or
sub
gs
std
stos
fisttpll
mov
imul
fs
push
adc
inc
lea
divl
adc
ret
push
cltd
flds
add
rcrb
jo
rcll
lcall
imul
push
adc
je
adc
add
mov
loop
arpl
loope
mov
dec
push
jnp
in
out
xchg
out
and
xchg
or
push
shr
leave
xlat
push
pop
and
cld
aas
xchg
or
fucomip
je
aad
int
mov
and
scas
push
jae
repz
mov
movsl
sub
cmpsl
xor
xorl
aad
test
pop
dec
cs
fs
cmp
push
mov
mov
push
lock
jnp
push
fadds
mov
stc
bound
test
mov
inc
sti
mov
dec
mov
lock
je
mov
jne
mov
cmp
cmpb
ja
scas
std
mov
in
ss
add
jp
fists
mov
jne
xchg
jg
aaa
stos
lret
loope
scas
push
test
pop
sub
cli
fisttpl
shl
xchg
xchg
das
ds
pop
jge
dec
sbb
or
aam
mov
sub
ljmp
outsl
jno
mov
imul
movsl
sub
inc
aad
mov
adc
das
pop
ss
mov
lea
cmp
cmpsl
popf
push
mov
in
rorl
ret
loop
in
cmp
mov
mov
fwait
xchg
dec
insb
in
in
lods
imul
inc
mov
pop
test
jecxz
stos
inc
push
cmpsb
dec
pushf
mov
ret
mov
outsb
clc
mov
loop
jp
mov
jp
ljmp
jo
dec
imul
inc
xchg
jne
cltd
movsl
mov
push
xchg
test
mov
popf
test
mov
sub
jge
insl
mov
dec
adc
cmp
test
cltd
mov
push
adc
add
aad
adc
aaa
std
cmp
push
mov
repz
scas
xlat
xor
ds
icebp
cmpsb
repnz
fcompl
das
mov
clc
andl
push
sar
cmp
leave
mov
jno
daa
dec
push
push
aaa
sub
shll
xor
inc
push
ret
mov
push
mov
xor
or
insb
jle
ja
sbb
stc
or
mov
push
and
outsl
nop
cld
cld
inc
and
cmp
outsb
insb
push
pop
lret
jo
in
lods
and
push
aam
add
sbb
rcrb
gs
or
inc
push
add
pop
and
jne
mov
adc
cwtl
push
mov
xchg
xor
stos
dec
aas
mov
enter
lcall
cwtl
mov
mov
and
orl
test
push
cld
idivl
lods
out
cmpsb
scas
cltd
mov
push
adc
js
enter
movsb
push
mov
out
aas
lahf
in
cmp
les
sbb
cmpb
push
sub
cmp
mov
test
dec
mov
mov
ja
test
inc
inc
je
nop
mov
adc
xor
out
xchg
or
out
push
les
lret
popa
test
int
inc
xchg
lods
out
mov
stos
aaa
mov
outsb
cmp
sbb
cmpsb
sarl
xchg
sbbl
and
lds
sbb
stc
sbb
repnz
mov
sbb
repnz
sub
dec
fldenv
or
lods
movsl
mov
inc
bound
xchg
adcb
jp
icebp
movsl
fmuls
aam
xor
inc
adc
mov
int
jmp
jae
mov
push
mov
inc
test
mulb
loop
popf
stc
out
and
adc
call
push
popa
inc
pop
mov
jns
sub
imul
jo
stc
fsubr
mov
pop
push
sbb
repz
ret
xor
arpl
stc
mov
sbb
in
aas
jae
js
loope
ficoml
xchg
pop
test
sbb
out
mov
movhps
push
dec
push
popa
push
outsb
pop
add
test
dec
test
and
insb
and
shll
mov
cwtl
aas
inc
or
jge
jno
dec
rep
xchg
push
push
addl
dec
lcall
mov
fimuls
push
sbb
mov
pushf
insl
push
or
mull
iret
cmc
imul
xchg
fisubrs
mov
xor
and
mov
fwait
mov
adc
rcrb
jae
es
decl
jo
push
test
push
cmp
nop
sub
mov
frstor
jecxz
int
xor
jno
jl
int3
jae
fimuls
mov
mov
dec
clc
xor
push
xchg
inc
xor
gs
xchg
lock
data16
sbb
add
mov
jecxz
sub
and
mov
sbb
dec
in
mov
arpl
outsl
push
mov
pop
jno
popa
xchg
cmp
imul
cmc
loop
idiv
fstpl
sbb
dec
or
and
add
jle
push
cmp
and
xchg
or
sub
iret
cli
lods
mov
mov
lods
stos
mov
fisubl
jle
fstps
mov
sub
pop
ljmp
cmp
adc
mov
rol
je
lcall
mov
testb
inc
int
vpsrad
nop
pop
hlt
imul
ds
sahf
xchg
leave
mov
leave
jmp
mov
fisubrl
cmp
cltd
fimuls
mov
pop
js
dec
adc
fs
cli
bound
insb
jl
icebp
pop
in
cmpsb
cmpb
mov
add
xchg
jmp
imul
imul
sub
ljmp
sbb
test
dec
call
dec
loopne
jp
and
aad
push
jbe
push
sbb
ds
pop
mov
movsb
dec
ret
mov
out
leave
pop
cmp
ret
fcoms
dec
ds
xchg
out
push
mov
push
cld
push
stos
adc
xor
fs
popf
out
xchg
pop
cltd
mov
pop
jno
int
dec
fxch
pop
cmp
popf
mov
out
xchg
lcall
int3
sbb
jecxz
xchg
int
leave
dec
movsl
not
dec
jmp
lods
hlt
push
notb
jecxz
mov
mov
add
cld
add
loop
adc
mov
faddl
loop
inc
sbb
lds
push
add
scas
jb
popa
lret
sub
and
outsb
sti
mov
jge
mov
bound
jb
push
jle
add
jge
mov
sbb
push
sbb
xchg
call
jno
add
inc
push
in
pop
arpl
clc
mov
incl
xor
jge
pop
loope
icebp
ljmp
xor
add
push
loopne
xchg
ss
mov
xchg
das
ret
lahf
push
and
outsb
icebp
or
clc
cmpsb
aas
add
data16
xor
ret
adc
ljmp
pop
cmpsb
sub
cmc
lods
jmp
and
jmp
push
insb
push
or
or
mov
prefetcht0
insl
pop
mov
into
leave
sbbl
cs
lock
cmp
cmp
lds
daa
xor
rorl
mov
pop
repz
push
xchg
pusha
insl
je
cmp
stos
pop
pop
pop
mov
mov
xor
in
es
xchg
mov
inc
xchg
sti
call
imul
loopne
out
mov
test
pop
add
shrl
shl
rcrl
lret
cli
cwtl
sbb
xchg
sub
xchg
jo
mov
add
mov
add
mov
jmp
orb
cmpsb
stos
in
cld
iret
pop
repz
lods
mov
adc
inc
mov
inc
add
push
clc
repz
ret
cltd
out
inc
mov
nop
into
daa
inc
shr
xlat
inc
pop
dec
mov
les
push
add
outsl
sbb
mov
jnp
out
xor
cmp
push
mov
das
orl
insl
jecxz
pop
xor
mov
mov
xor
pusha
orb
mov
jmp
into
pop
push
jmp
push
scas
push
and
int
nop
ret
sahf
add
fs
bnd
bound
and
scas
pop
jns
lret
fcmovnu
mov
cmp
jle
mov
std
pop
test
dec
fiaddl
ret
out
jb
pop
inc
mov
fwait
in
dec
scas
xchg
inc
mov
jb
mov
xchg
outsb
pusha
push
nop
sbb
xchg
adc
pop
xchg
add
inc
subl
push
lods
outsb
adc
sbb
stos
push
pop
pop
jmp
aas
adc
pop
jl
pop
mov
cmp
pop
xchg
pop
test
sub
pcmpgtd
push
and
stos
xchg
es
mov
jl
xchg
adc
out
jbe
cmp
add
sbb
int
jo
dec
popf
sarb
mov
out
mov
rol
push
dec
test
das
jae
out
movsb
mov
add
xor
arpl
enter
mov
test
pop
jle
inc
mov
lods
sbb
or
sar
adc
mov
daa
jo
jbe
inc
sub
push
push
cmpsb
sarl
or
pop
mov
test
popf
mov
cltd
push
push
pusha
scas
sbb
das
scas
frstor
push
jle
data16
fstpt
dec
jns
dec
xor
scas
add
insl
nop
into
dec
dec
and
add
leave
mov
mov
push
ds
sbb
sub
loopne
outsl
outsl
cmp
imul
lcall
add
add
mov
hlt
rorb
jns
pop
lahf
push
aaa
cmp
sub
pushf
push
mov
inc
stos
jnp
mov
mov
xchg
jns
push
stos
xlat
sahf
xchg
mov
push
inc
mov
int
pusha
rcr
dec
cli
fwait
clc
cmp
sub
mov
dec
scas
adc
mov
popf
pop
mov
subl
jp
ljmp
or
mov
jo
push
pop
mov
or
add
test
pop
jne
roll
mov
arpl
sub
push
out
ret
pop
adcb
mov
mov
addl
sbb
in
jmp
lcall
lods
in
push
cld
fcomps
and
push
test
xchg
enter
push
out
xchg
or
iret
pop
xchg
popa
in
stos
and
jg
mov
xchg
xor
stc
test
push
sub
lret
xor
push
mov
jno
pop
mov
sbb
ret
movsb
push
sbb
test
cli
push
inc
pop
xchg
sbb
sub
ret
mov
jge
or
test
sbb
lret
out
mov
add
in
add
int
adcl
hlt
adcb
push
rorl
repnz
mov
and
add
pop
popf
fsubp
push
orb
mov
or
xor
sbb
fisubs
fisttpll
cmp
mov
lock
out
dec
fbstp
jl
add
add
adc
and
inc
pop
xchg
sub
mov
cli
cmpsl
add
xor
imul
je
inc
cmp
mov
mov
xor
mov
in
aad
mov
jne
int
inc
cmp
add
adc
pop
jns
jne
loop
lods
fmul
out
andl
sbb
cmpb
mov
shll
push
repnz
mov
fdivrl
pushf
nop
cmp
pop
xor
pop
cld
cltd
pop
shlb
ja
mov
pop
jp
fwait
dec
je
cld
ljmpw
popa
or
lock
fistpl
ds
cli
lcall
jl
sub
mov
fnstsw
sbb
out
sub
cmc
xchg
sub
dec
lret
jns
sub
or
jbe
out
lret
nop
cmp
cmp
shll
sti
dec
inc
jbe
xchg
fdivrs
lret
popa
pop
cmp
dec
jg
sbb
popa
mov
mov
out
iret
jge
insl
repz
jle
popf
hlt
neg
ljmp
mov
sub
addr16
jbe
push
mov
mov
dec
mov
pop
and
jns
lods
shlb
mov
ds
lret
cmpb
mov
push
push
and
and
push
cwtl
out
mov
mov
sbb
xchg
jnp
adc
imul
fsubl
dec
movsb
js
sub
mov
lret
call
lret
pop
adc
xor
fcmovnbe
loope
cmp
push
pop
pop
repnz
fistpl
mov
adc
lods
push
jbe
and
ss
sbb
mov
movsb
inc
mov
out
imul
add
xchg
sti
push
daa
nop
mov
jg
mov
into
push
inc
outsl
imul
cld
jo
test
dec
push
ds
cmpps
shl
xchg
fwait
data16
enter
dec
push
lea
xor
sbb
cmc
das
mov
lods
xlat
ror
cmc
pop
pop
aaa
lret
andl
loop
cmp
dec
scas
fs
sub
std
mov
mov
adc
mov
ljmp
out
std
push
push
daa
adc
sub
cld
xchg
adc
xor
into
jg
fbstp
loopne
adc
imul
out
fildl
adc
sub
mov
dec
jbe
add
jmp
push
lds
push
pop
sbb
mov
lds
xchg
jle
and
jbe
adc
mov
mov
popa
adc
aam
ror
mov
cmc
dec
adc
mov
sub
dec
out
adc
pop
push
popl
pop
testb
mov
and
sub
xchg
pop
insb
and
insl
sbb
mov
loopne
xor
loope
mov
sti
push
out
out
sbb
out
stos
mov
cltd
pop
mov
cmp
add
inc
and
pslld
adc
ds
dec
outsb
rcll
mov
inc
jb
shrl
out
sub
mov
popf
cmp
cmp
jp
loop
je
stos
jp
cmc
lods
std
push
shrl
ja
les
pop
inc
inc
test
cmp
inc
xchg
in
mov
inc
popa
rorl
test
sbb
inc
xor
or
pop
aas
push
leave
sub
sti
lock
lret
frstor
jl
dec
aam
sub
cltd
sub
aaa
xchg
and
jo
lock
xchg
mov
sub
jne
sahf
pop
shll
mov
adc
mov
pop
jl
hlt
out
mov
in
imul
icebp
push
shrb
das
pushf
sbb
nop
mov
jo
clc
movsl
fidivl
xchg
leave
mov
inc
mov
clc
loop
or
sbb
mov
stc
jge
dec
dec
stos
int
call
and
popa
aas
cwtl
jno
lahf
mov
cmpsb
test
push
dec
add
outsl
sbbb
mov
shrl
negl
pop
sbb
repnz
or
test
xor
cli
fiadds
out
fisttps
sbbl
ljmp
cmp
dec
cwtl
pop
push
push
sarb
sub
and
sub
adc
inc
sub
rcrb
xor
pop
lds
out
mov
ja
pop
leave
xchg
inc
and
or
ljmp
sub
les
xchg
mov
cs
fucomip
aas
mov
adcl
aam
mov
loop
push
mov
xchg
lods
loope
xchg
mov
xlat
addl
incb
fisubrs
in
cmp
lea
or
mov
out
hlt
jne
cmpb
fstps
roll
cwtl
push
cmc
test
or
in
mov
fdivrs
push
fisttpll
lods
adc
push
inc
leave
add
xchg
sbb
xchg
jmp
jnp
jmp
inc
push
hlt
loope
xchg
adc
loope
rcrl
in
ss
repz
and
stos
add
not
divl
aaa
adc
dec
subb
cmp
xchg
push
insb
lds
sti
add
xlat
stos
sti
call
push
jl
sub
dec
dec
cmp
popf
jno
jle
aam
and
out
adc
xchg
push
andb
jle
cld
das
xchg
icebp
or
stc
cwtl
imul
add
fdivrl
add
dec
fcomi
xor
in
adc
addr16
mov
call
addl
jo
or
push
mov
xor
pop
adc
xor
pop
cmp
stc
arpl
inc
or
adc
iret
add
inc
cmpl
or
mov
or
testb
incl
mov
out
pop
push
andl
jbe
test
xor
les
fs
repz
sub
mov
call
sti
sub
inc
loope
pushf
loop
push
xchg
or
xchg
push
dec
inc
inc
fmulp
sub
inc
pop
mov
or
test
lret
dec
pop
or
fiaddl
shrb
movsb
shll
mov
lods
fsubs
xchg
add
inc
addb
repz
jecxz
mov
fs
pop
and
ret
jecxz
rcrl
addb
mov
mov
ret
inc
data16
xor
ret
mov
leave
es
cmp
inc
mov
fsubrp
into
outsl
rcrl
push
int3
adc
sub
nop
adc
jp
fistpl
fldenv
fcomi
repz
sbb
loop
push
mov
sahf
sub
push
int
mov
inc
cmpsl
sbb
mov
inc
hlt
dec
loopne
push
mov
lods
mov
sub
sbb
jmp
icebp
aam
mov
add
cs
xchg
and
mov
lret
add
cmp
or
jae
stos
push
mov
sti
xchg
xchg
sub
in
imul
std
insl
int3
je
pop
and
inc
inc
and
dec
inc
loopne
fbstp
fadd
aas
sbb
xor
xor
inc
inc
mov
in
xchg
xor
add
dec
test
out
pop
mov
sbbb
cmp
xor
add
mov
addb
loopne
jp
cmp
adc
aam
scas
xchg
loope
xor
sahf
ret
ds
pop
inc
mov
out
pop
lret
out
std
xor
dec
lahf
pop
xorb
fmull
dec
sti
shl
lock
xor
adc
inc
sbb
imul
mov
fwait
pop
dec
jle
int3
add
xchg
cld
repnz
int
fucomp
inc
scas
fcmovnbe
mov
mov
xor
cli
mov
push
push
pop
pop
insb
mov
push
out
int3
pop
mov
stc
xchg
fisubrl
outsb
jns
aam
jns
test
ret
enter
dec
add
mov
sub
sbb
jecxz
pop
and
sahf
es
jmp
outsl
inc
loope
inc
stos
ljmp
ret
in
xorl
add
std
popf
fdivs
mov
enter
push
pop
jmp
std
xor
push
or
sbb
iret
fistpl
mov
div
mov
jg
xchg
repnz
jmp
pop
scas
xchg
jae
sarb
inc
or
bnd
lods
or
sahf
scas
aaa
cli
mov
das
or
sub
add
pop
xchg
or
popf
mov
jnp
mov
or
inc
fadd
in
fisubs
or
aad
inc
push
xchg
out
pushf
and
stos
test
mov
cltd
sbb
std
jl
xorb
and
push
je
lods
scas
mov
or
mov
pop
inc
out
cmpsl
lds
sub
fsub
ss
push
dec
stos
mov
xor
xor
pop
gs
movsb
inc
lock
dec
or
push
loop
adc
jbe
arpl
xchg
shrl
in
cmpsb
icebp
pop
mov
mov
jbe
and
dec
jae
mov
cli
insb
leave
mov
fs
push
xorb
push
dec
test
adc
subb
xchg
jg
push
aad
or
cmp
xchg
jmp
mov
lcall
ret
incl
jne
adc
stc
and
sub
outsb
dec
lret
cmp
pop
mov
dec
sahf
mov
xor
jmp
rcrb
sub
sbb
outsl
pop
cmp
push
xchg
mov
push
ret
icebp
fsubs
ret
hlt
lcall
pop
sti
stos
aas
out
push
mov
dec
mov
lods
aam
js
mov
xor
repz
ret
sub
addr16
mov
inc
jge
sbb
repz
ja
hlt
inc
push
xchg
test
sahf
popa
pusha
adc
dec
sbb
outsl
mov
sbb
mov
hlt
fsts
shrl
arpl
push
cmpsb
repnz
jmp
mov
nop
adc
cmc
jge
and
push
inc
xchg
and
xchg
rclb
call
mov
adc
jmp
scas
and
es
mov
ret
inc
hlt
jge
dec
testw
lea
cltd
or
arpl
in
push
inc
popf
jg
sbb
pop
push
mov
mov
xchg
scas
hlt
pop
lret
sbb
std
lret
fiaddl
adcl
mov
jl
lods
pop
inc
loop
jp
push
jecxz
hlt
cmp
mov
cmpsl
or
mov
aas
push
or
mov
int
push
sbbb
rclb
adc
push
mov
rclb
fistpll
or
addr16
xor
pop
adc
adc
mov
and
pushf
sbb
gs
sbb
lret
daa
push
mov
lds
inc
mov
loope
and
addb
pop
mov
lock
adc
popf
mov
push
push
push
inc
cmpsl
cmp
jp
fucom
es
int
nop
daa
or
cltd
mov
test
xchg
cld
sub
push
jae
popa
push
inc
lods
pop
push
sbb
aas
inc
cmp
adc
movsb
pop
scas
or
adc
pop
inc
outsb
loope
pop
lret
cmp
sarl
test
cmp
push
les
loope
andb
ror
sahf
fcoms
stos
adcb
pop
push
xchg
dec
dec
lods
ss
cmc
je
fwait
and
pop
jmp
inc
add
enter
mov
dec
pop
inc
mov
pop
outsl
xchg
add
pop
loop
int3
lea
mov
enter
inc
add
add
out
xchg
pop
inc
out
shrl
jno
push
jne
loop
jle
pop
mov
lcall
outsb
inc
or
jne
mov
push
pop
shlb
jmp
vrsqrtps
not
cmp
test
pop
xchg
hlt
cmp
wrmsr
push
adc
or
lret
push
push
addr16
mov
lret
push
xchg
push
pop
cld
gs
loopne
lds
mov
mov
push
xchg
call
lret
jle
dec
inc
shl
movsb
sbb
dec
pop
mov
cltd
dec
cld
stc
incb
mov
lods
lds
mov
daa
pop
mov
adc
fs
inc
test
sub
popf
jns
rcl
popa
int
loop
inc
xor
xor
mov
mov
xchg
ret
xor
cmp
outsl
cmp
mov
xchg
std
jp
ret
adc
pop
inc
lcall
es
insl
mov
cmp
add
hlt
cli
adc
push
jne
cmp
fs
push
xor
or
sbb
xor
das
pop
loope
sbb
stos
mov
outsb
insb
shll
icebp
dec
push
cwtl
shll
jge
daa
or
shlb
inc
or
cld
pop
gs
test
mov
dec
pop
inc
insb
shll
or
cwtl
mov
mov
insl
jnp
movsl
jle
iret
sbb
shrb
push
in
lods
mov
lods
xor
fmuls
orl
mov
popa
push
fs
ja,pt
fstps
pop
dec
in
xor
lret
xor
dec
mov
hlt
in
adc
jne
int
movsb
loopne
sub
inc
pop
mov
inc
paddsw
pop
lret
sub
std
inc
mov
fcoms
cmp
pop
jns
jp
sbb
jnp
pop
or
push
out
push
sbb
movsb
mov
sbb
shl
ficoml
adcl
jge
jmp
inc
mov
dec
leave
mov
call
xchg
cmp
xchg
jmp
pop
jmp
out
je
je
gs
enter
ret
adc
popa
push
dec
int
ljmp
xor
cmp
xor
jns
aas
aas
jno
mov
lcall
ret
and
inc
in
jns
pop
xchg
push
add
jo
push
aaa
pushf
jmp
mov
loope
cwtl
aad
scas
jmp
cmp
pop
inc
insl
cmp
icebp
data16
push
or
ffree
adc
sahf
inc
scas
push
pop
adc
push
xchg
lock
mov
int3
insb
mov
or
push
int3
push
xor
loopne
ror
or
js
or
into
xchg
mov
fmulp
xor
loope
sarb
cmpsb
xor
jle
shrl
dec
mov
aaa
pop
int
lock
adc
add
mov
arpl
adc
cs
mov
xor
dec
add
fcmovnbe
cltd
add
int3
and
jno
xchg
add
dec
repnz
mov
out
jae
lea
xchg
jno
int3
pop
mov
lock
fisubrs
shll
pop
inc
cmp
inc
pop
jle
mov
les
in
adc
pop
in
sbb
test
mov
jg
xchg
mov
lcall
gs
ss
jg
in
add
mov
inc
sub
loop
pop
fld
stc
mov
js
and
push
fcmovu
push
pop
xor
rep
pop
icebp
cmp
add
and
jns
cld
cmp
dec
sbb
js
dec
sub
adc
push
stos
gs
fs
insb
repnz
inc
xchg
fnsave
out
pop
insl
pop
xor
sbb
sbb
pop
repz
ret
dec
fistpll
mov
aaa
fs
loop
movsl
pop
push
loopne
lods
inc
lahf
pop
mov
inc
loopne
addl
mov
pop
rorb
lahf
sahf
dec
xlat
incl
mov
outsl
ret
lret
mov
jnp
shufps
adc
add
jb
pop
push
adc
repnz
in
lcall
scas
out
mov
sub
sub
lods
out
pop
bound
cli
and
daa
mov
push
cld
mov
shll
in
lods
sahf
cmp
dec
fs
mov
rclb
and
jg
or
int
mov
sti
imul
aas
add
scas
xchg
notl
out
leave
mov
imul
lcall
mov
sbb
jle
push
bound
pop
pop
js
or
loope
dec
aas
icebp
mov
js
sub
adc
sbb
adc
std
test
test
scas
push
mov
popa
jge
test
sbb
fs
call
jne
pusha
xchg
jns
daa
shlb
imul
push
arpl
dec
pusha
add
hlt
imul
cwtl
fcomps
or
outsl
cld
scas
sbb
cmp
dec
cwtl
mov
mov
test
out
lcall
movl
lret
sub
sbb
or
push
sbb
cmp
mov
popa
jmp
pop
xor
outsb
mov
add
mov
adc
sbb
dec
pop
mov
fiaddl
stos
sub
mov
inc
push
pop
push
xchg
mov
jnp
xchg
stc
and
scas
cli
hlt
mov
mov
xchg
pop
das
push
mov
mov
dec
add
enter
mov
cwtl
and
xchg
mov
lcall
pop
or
push
pop
fisttps
mov
sarl
adc
imull
lods
push
xchg
jp
cmpsl
in
test
sub
push
mov
mov
dec
testb
push
xchg
aaa
loope
sbb
xchg
cmp
int
cmp
icebp
arpl
adc
xchg
incb
hlt
lahf
or
mov
stc
mov
mov
pop
fistl
xor
fstpl
leave
or
hlt
and
daa
mov
xor
or
ud0
pop
sbb
lret
scas
lock
es
loopne
fs
dec
inc
popf
xor
test
cmp
testl
pop
nop
repnz
cltd
pop
jmp
mov
xchg
pop
loopne
fists
cmpsl
add
out
in
sbb
mov
xchg
fucomi
cmp
inc
cld
xor
push
cmp
shr
or
mov
sbb
sub
jle
test
imul
cwtl
xor
jo
mov
mov
js
sbb
and
hlt
sbb
mov
sub
sbb
xor
imul
or
ljmp
mov
popf
fisttps
cmp
cmc
mov
lods
pop
add
in
ret
xchg
inc
dec
icebp
or
add
xor
xor
xor
std
push
pop
shl
dec
or
mov
leave
lods
ficompl
push
push
fdivrs
lds
lds
add
dec
repz
das
cmp
sub
and
movsb
mov
enter
popf
ljmp
inc
arpl
inc
xor
cmp
es
js
adc
shr
mov
out
cmp
jle
push
xor
inc
pop
adc
loop
stos
sub
fcomps
push
pop
aas
pushf
sbb
iret
and
lock
loop
jne
xchg
add
mull
imul
dec
push
popa
inc
cltd
pusha
push
loopne
fdivs
arpl
hlt
jmp
xchg
jge
adc
mov
xor
icebp
push
mov
cmp
stos
xchg
dec
mov
int
and
push
ret
cmp
js
insb
inc
fsubr
xor
add
sbb
cmp
mov
lods
lahf
mov
ja
jns
push
mov
xor
out
addr16
add
je
mov
stos
and
cmp
add
add
inc
dec
mov
fcmovnu
fidivs
xor
mov
sbb
adcb
inc
inc
mov
xor
mov
out
outsl
cmc
arpl
fdivs
jno
or
inc
in
outsb
cmp
scas
cmp
mov
or
fiaddl
pop
stos
and
push
lods
mov
sub
imul
adc
test
xchg
mov
xchg
jne
arpl
cmp
lock
sti
sub
ss
std
lock
mov
pop
mov
leave
cmc
mov
lds
jl
push
pop
inc
dec
xor
nop
mov
and
sahf
mov
ja
sarl
xor
xor
out
incl
jae
jl
sub
xchg
dec
pop
data16
dec
hlt
lock
stos
cld
out
mov
std
push
mov
mov
add
dec
ja
jb
xor
jns
mov
pop
ror
cmpsb
aas
mov
cmp
inc
inc
pop
ret
xchg
cmove
jne
cmp
cli
xor
movsl
ret
mov
mov
repnz
push
stc
xchg
outsb
shl
and
adc
mov
cli
mov
fcomps
cmc
mov
push
adc
stos
push
shll
xchg
xchg
movsb
mov
cmp
and
or
inc
dec
mov
cmpsl
cwtl
xor
in
insb
cmpsb
push
or
mov
and
test
fsubrs
push
jp
push
fcoml
cmp
rcl
aam
es
push
dec
jno
xor
mov
popf
push
fsts
popf
mov
jo
mov
enter
or
pop
mov
jne
inc
pop
fldl
xchg
cmp
add
out
push
jbe
dec
pop
cli
mov
xchg
clc
idivb
divb
insl
pop
mov
lods
fiaddl
xchg
loopne
xchg
scas
addr16
mov
outsl
testb
ljmp
je
jg
xchg
scas
fbld
testl
test
leave
mov
addr16
xchg
dec
daa
loope
scas
cmc
push
rcrl
inc
mov
imul
ffree
shlb
das
cmc
xchg
mov
aam
fwait
pop
adc
mov
lea
rorb
cmc
insl
xchg
xor
xchg
pop
shl
mov
sub
adc
clc
jbe
hlt
mov
ror
or
xor
sub
mov
fstps
lret
pop
aam
lock
scas
ret
mov
dec
mov
jecxz
sahf
ficoml
movsl
dec
push
sub
stos
dec
fs
sbb
ds
stc
insl
cmp
lds
repz
sub
or
jbe
mov
inc
inc
lret
push
out
clc
cwtl
pop
inc
imulb
xor
sbb
jl
jo
enter
xchg
adc
loopne
insb
pop
les
jbe
cmp
cwtl
xor
insl
idiv
ss
inc
popf
or
jne
inc
adcl
xchg
and
fcmove
cmp
xchg
sub
leave
push
outsl
xchg
std
cli
push
loopne
mov
mov
sbb
mov
mov
mov
aad
add
notl
xor
inc
scas
stc
in
cmp
sbb
xlat
sbb
or
sahf
in
sbb
ja
loope
pushf
xor
test
scas
xor
dec
into
aad
dec
cwtl
shl
mov
mov
mov
loop
test
test
in
repz
jns
pop
mov
mov
push
cmove
test
out
mov
cli
mov
pop
or
hlt
scas
imul
gs
fistl
sbb
xchg
mov
sbb
es
out
sahf
mov
pop
bound
testl
arpl
push
cli
mov
pop
mov
and
les
fadds
clc
push
sbb
std
dec
adc
mov
into
dec
pusha
mov
movsl
test
add
movsl
xor
and
jno
jno
jne
inc
lret
subl
pop
and
jo
and
and
lret
lcall
xor
sbb
shl
sbb
rclb
ror
shlb
aas
mov
pop
add
lods
pusha
add
jge
aad
das
daa
lahf
mov
scas
mov
es
sub
je
lcall
push
pop
fs
test
adc
sbb
testl
stc
mov
stc
pop
repz
mov
push
addr16
lods
cli
lcall
pop
es
cli
lcall
sbb
outsb
scas
je
xor
adc
aaa
dec
lds
mov
ljmp
dec
lcall
pop
and
sub
sub
sbb
xchg
push
lods
cmp
add
sub
pushf
test
dec
mov
sub
jle
and
mov
add
lea
dec
mov
adc
pop
and
or
pop
mov
and
fidivl
sbb
push
ljmp
lcall
cli
fstp
jno
fdivrl
sub
inc
nop
cmp
adcl
push
inc
inc
cmc
dec
shrb
mov
jl
dec
or
std
ja
rcrl
or
outsl
add
in
inc
cs
jnp
lret
mov
xchg
pop
and
inc
pop
into
mov
icebp
shl
enter
orb
mov
pop
xor
mov
ret
fwait
mov
retw
sub
mov
das
call
ret
mov
jno
ror
fcomi
fwait
test
call
bound
shr
int
iret
push
sbb
pushf
insl
dec
xor
popa
xor
ds
inc
adcb
xchg
jno
mov
sahf
lods
nop
mov
and
xchg
cmc
insl
and
es
fisttpll
sar
xchg
movsb
les
shrb
xchg
jne
rclb
ret
sahf
inc
pop
shrl
cmc
sub
cmpsb
mov
daa
lret
int3
mov
push
sbb
jno
cmp
aas
cld
mov
inc
add
in
lea
xlat
dec
sub
rdpmc
stos
stos
mov
jne
or
push
jns
add
adc
xchg
fcomps
fisttps
icebp
or
adc
stos
jl
and
cmp
rolb
aas
xor
adc
psllw
pop
out
loope
mov
call
pop
jae
insb
jae
inc
shrl
hlt
pop
jecxz
xlat
push
arpl
pop
jge
int
lret
pop
jne
inc
mov
pop
fwait
pop
and
sub
stc
pop
test
pop
clc
mov
into
add
insb
pop
push
mov
test
fldt
push
pop
adc
call
cmc
xchg
add
dec
fimull
jge
pop
iret
push
jo
es
fwait
les
mov
lds
int
jge
xchg
xor
out
int
popa
ret
mov
mov
push
inc
lret
mov
das
mov
xchg
shlb
add
int3
xchg
cmpsl
js
cmp
mov
mov
daa
int
pop
push
or
iret
push
gs
out
sbb
ljmp
sub
jl
gs
test
call
xchg
add
sub
xchg
aas
jbe
movsl
pop
xchg
movsb
rcll
sub
fdivrp
push
mov
pop
inc
dec
jne
jl
rcrl
add
imul
or
js
push
movsb
push
repnz
cmpsl
mov
or
dec
lock
pushf
adc
cmp
jnp
mov
push
repz
push
imul
cld
incl
dec
add
xchg
mov
outsl
sbb
clc
dec
sbb
les
cmp
xor
in
xor
and
adc
add
jp
lods
mov
stos
jp
repz
lds
in
call
pop
sub
or
sbb
cmp
out
cld
lahf
jns
add
mov
fisubrs
mov
dec
rolb
inc
aaa
leave
inc
pop
flds
fnsave
js
call
je
adc
cmpsb
sbb
jbe
mov
leave
addb
push
daa
andb
inc
sub
adc
dec
aas
xlat
mov
mov
mov
and
xor
cwtl
scas
cmc
mov
stos
add
add
jae
imul
pop
out
negb
pop
mov
pop
lods
xlat
mov
sbb
imul
cmp
cmp
and
jmp
rol
xor
outsl
pop
sub
push
or
mov
mov
fiadds
and
inc
in
mov
addb
mov
push
aaa
and
cmp
mov
aam
imul
je
cli
je
inc
xor
cwtl
jge
and
jp
sbb
fcompl
les
lds
push
sub
mov
adc
cmpsb
dec
fidivrs
repnz
xchg
cltd
add
dec
add
jp
push
in
dec
scas
cltd
and
cmc
mov
jns
push
dec
imul
fs
push
aam
fdivrl
cmp
push
and
xchg
cmpsl
mov
mov
test
or
sbb
jns
mov
out
ret
and
mov
fdivs
outsb
pop
into
xor
add
shl
sub
aaa
jcxz
pusha
dec
into
ret
pop
mov
pop
jge
xchg
push
stos
ljmp
fwait
js
xchg
push
jne
mov
mov
ss
adc
ss
lods
add
and
push
jnp
mov
adc
pop
inc
mov
shlb
lea
xchg
call
jb
add
xchg
lods
insb
jae
cltd
jmp
inc
jo
push
scas
xchg
push
mov
mov
xchg
loop
inc
jg
ret
std
popf
js
outsb
jbe
push
push
out
lcall
nop
aaa
stc
imul
ss
add
int
push
sub
xchg
loopne
and
bound
insl
mov
mov
mov
mov
push
and
mov
inc
inc
xchg
and
pop
insb
int
and
pushf
mov
out
mov
lea
out
ja
pop
add
dec
or
das
loopne
inc
add
sbb
ret
scas
andl
xor
scas
xor
or
sbb
mov
test
sar
hlt
das
inc
adc
dec
add
jg
lods
push
inc
cld
pop
mov
fisubrs
roll
adc
mov
dec
fs
dec
push
arpl
xor
push
lds
adc
testl
mov
cltd
andl
dec
pusha
xor
es
jbe
mov
gs
aaa
adc
push
aam
adc
repz
ret
hlt
cli
mov
push
mov
mov
out
mov
cmp
loopne
cmp
andl
push
push
lods
repz
add
test
loope
insb
dec
add
in
pushf
xor
mov
adc
inc
cmovne
in
pop
lock
repz
iret
bound
into
es
rolb
stc
pop
lcall
stc
and
out
dec
dec
ja
pop
lods
or
insl
cmp
mov
add
or
icebp
and
aas
fwait
jecxz
mov
ret
sub
xor
ja
pop
lds
jns
adc
sbb
add
mov
enter
mov
nop
sbb
dec
es
pop
or
pop
mov
movsl
fnsave
movsb
in
pop
es
lods
pop
je
and
insb
pop
cmpsb
cld
test
mov
adc
cmp
rolb
push
loop
in
push
aas
jecxz
cmp
lds
aaa
jp
les
push
scas
push
pop
cmpsb
cmp
dec
push
dec
sahf
pop
sbb
lods
pop
adc
scas
xchg
dec
xchg
lods
adc
sbb
jo
pop
loop
mov
mov
push
sub
xchg
xchg
sbbl
mov
cld
dec
mov
push
les
xchg
inc
and
mov
sbb
stos
aaa
outsl
test
pop
mov
push
dec
sub
nop
outsl
jg
inc
inc
outsl
push
ftst
inc
push
mov
lock
adc
dec
fsubs
aam
mov
push
lret
pushf
inc
aaa
jae
push
in
fsts
sub
je
mov
mov
adc
push
ror
and
add
sti
sahf
cwtl
rcrb
jle
pushf
xor
mov
jle
pop
loopne
push
adc
add
dec
xchg
adc
je
imul
sti
jp
ds
pusha
aas
loope
jbe
out
pop
adc
popa
xchg
inc
bound
stos
ja
cs
add
push
push
pusha
outsl
fcomip
mov
mov
push
ss
fstpt
aad
xor
push
dec
scas
cmpsb
mov
xor
add
sahf
mov
ret
lods
jp
lcall
out
ja
mov
fldt
imul
in
mov
mov
jbe
jg
cmp
mov
or
pop
mov
mov
test
cmp
fwait
mov
sub
decb
sahf
movsb
stos
cli
mov
jb
xorl
jge
addr16
sbb
sub
and
jecxz
mov
stos
mov
mov
cmpsb
nop
dec
ficomps
mov
pop
xor
xor
mov
xchg
mul
add
xchg
imul
inc
and
test
xor
push
shlb
lret
aaa
jp
mov
or
inc
lods
inc
mov
hlt
movsb
jae
bound
jno
sbbb
popa
and
pop
fdivrl
push
je
push
xchg
lcall
xchg
rcll
repnz
jl
pop
mov
lahf
cmc
in
popf
out
clc
mov
cmpsl
push
xchg
mov
in
mov
pop
sbb
jge
pop
fistps
out
stc
dec
ss
jns
jns,pt
jno
and
xlat
bound
and
dec
clc
imul
add
sbb
jne
andb
push
daa
xchg
and
fidivrs
aaa
int3
clc
and
or
lea
test
jo
dec
push
subl
in
dec
fwait
in
mov
mov
into
push
xor
stos
cmp
pop
jg
adc
xchg
ret
jno
pop
mov
or
fdiv
dec
jne
lcall
sbb
std
add
cltd
push
pop
mov
jmp
pop
mov
fidivs
aaa
jbe
jae
sub
pop
bound
xor
push
xorl
popa
xor
push
cwtl
push
fsubrl
mov
mov
sub
dec
fwait
add
repnz
cli
jp
fisttpll
lods
pop
enter
mov
movsl
outsl
sub
inc
jle
mov
pop
iret
xchg
mov
jp
mov
popa
rolb
dec
leave
and
in
inc
sbb
cs
inc
or
jne
push
stc
test
mov
inc
sub
xchg
lods
xchg
push
in
mov
testl
lds
mov
idivb
xchg
subw
pop
scas
js
push
ret
adc
mov
js
mov
adc
aam
sbb
fistpll
inc
cmp
ljmp
cwtl
xor
js
dec
hlt
fs
lods
sbb
in
add
inc
aad
pop
push
int
xchg
hlt
out
mov
mov
gs
mov
inc
les
imul
fs
fsubrs
shrb
cli
insl
or
fnstcw
push
mov
mov
in
pop
scas
test
inc
imul
clc
add
mov
xor
mov
aaa
inc
and
decb
rorb
imul
or
bnd
pop
push
jne
sbb
sub
ds
mov
mov
in
pop
das
in
xchg
and
outsl
mov
jl
pusha
mov
sbb
jbe
mov
scas
lret
sbb
cwtl
mov
repnz
pop
fmulp
movsb
mov
insl
sub
aas
mov
call
or
bound
hlt
push
jnp
jmp
jae
vmwrite
jo
lcall
xchg
fsubs
add
jl
push
mov
lret
xchg
call
mov
xor
pop
idivl
icebp
outsb
fdivrs
sbbb
mull
pop
push
rcrb
movsl
jae
mov
mov
lods
adc
movsb
mov
mov
jbe
and
ljmp
decb
shlb
sub
push
and
sbb
sahf
push
in
and
inc
sbb
ss
mov
movsb
mov
and
js
std
cli
popf
in
jns
jp
push
jl
dec
dec
fldl2t
es
sbb
jmp
dec
fiadds
mov
adc
jmp
jle
cmp
inc
jge
xchg
or
mov
pop
call
dec
xchg
sub
je
push
sti
aas
ds
lods
push
aaa
loope
xchg
add
mov
mov
mov
movsl
test
mov
mov
inc
add
aam
movsl
sarb
sub
shrl
mull
push
push
push
test
push
scas
lret
mov
mov
fsts
pop
out
pop
stos
and
mov
out
aad
hlt
add
jne
std
sbb
or
pop
mov
sbb
jns
ror
call
ftst
shrl
loope
add
cmp
mov
out
adc
aas
adc
mov
sti
pop
lret
ljmp
pop
fsubp
xchg
add
jmp
imul
xor
filds
mov
and
aad
sbb
nop
fcmovu
push
pop
mov
sub
insl
shll
pushf
dec
jno
movsl
pop
xchg
and
lahf
sub
mov
inc
mov
sub
std
aad
adc
jb
lds
xor
dec
rcl
xchg
sbb
inc
mov
lahf
jae
xchg
sub
jmp
push
in
imull
dec
xor
mov
ds
test
or
ret
push
call
sbb
loop
xchg
lods
bound
sbb
pushf
lock
jmp
test
insb
mov
jge
dec
fwait
leave
test
or
mov
xchg
ss
pop
shl
scas
mov
rcl
pop
mov
jge
xor
mov
lret
insb
int3
scas
mov
add
inc
jb
mov
insl
cmp
ret
mov
jmp
adc
pusha
enter
push
fdivl
sub
xor
outsb
faddl
les
out
or
cmp
pop
scas
je
inc
fs
sbbb
in
in
les
mov
jecxz
sbb
js
mov
sbb
sub
lcall
addr16
cld
or
xor
sub
and
jo
push
iret
lret
push
push
xor
sub
icebp
imul
jae
shl
out
and
pop
push
push
inc
lcall
outsl
push
lods
jl
mov
push
push
mov
cmp
sbb
mov
push
lods
push
pop
adc
xchg
xchg
jecxz
das
gs
or
movsl
or
popl
test
jl
imul
jb
in
inc
pop
xchg
cltd
xchg
push
cmp
mov
jb
fs
je
jno
call
in
faddl
subb
fcmovnb
hlt
rcl
or
xchg
mov
ret
out
sub
mov
icebp
or
std
loopne
inc
ret
sub
popa
cs
fcoml
pop
in
adc
jb
popa
mov
dec
enter
or
xchg
or
je
ja
lret
dec
hlt
xor
push
jnp
or
push
mov
fisubs
or
dec
xchg
cmpsl
imul
cli
add
dec
add
orl
sahf
out
mov
add
xchg
push
scas
js
testl
sub
and
pop
jb
clc
lds
adc
mov
inc
cmp
adc
daa
ja
aas
xchg
inc
mov
xlat
imul
mov
push
iret
pop
add
fdivrl
push
or
jecxz
stc
xor
mov
inc
adc
int3
sti
icebp
sahf
dec
or
push
dec
movl
xor
xlat
mov
mov
pop
and
jb
bound
in
cltd
enter
clc
roll
out
push
inc
and
jnp
sub
cli
mov
les
xor
jp
push
fcompl
fdivs
es
jae
popa
jnp
fs
sub
sub
int
push
push
mov
inc
lock
imul
mov
roll
push
jnp
mulb
int
shl
adc
stos
push
popa
shll
dec
xchg
pop
cmp
gs
jge
test
pop
or
mov
mov
jne
mov
mov
into
mov
push
xor
xor
aas
mov
pop
add
sbb
mov
mov
gs
sbb
pop
aaa
jb
xor
lds
cmp
inc
sub
int3
cmpl
xor
dec
add
inc
repz
sub
fbstp
xor
cmpsb
xlat
pusha
mov
jo
push
into
xor
fdivrs
add
inc
nop
aas
fnstenv
push
ret
mov
mov
adc
outsl
mov
cmpb
push
sbb
sti
mov
sbb
xor
orb
mov
cmp
pop
push
jno
cli
xor
mov
fs
daa
or
test
add
movsl
xlat
cli
fs
pop
push
mov
arpl
dec
xchg
pop
inc
cltd
int3
mov
pushf
inc
sub
into
int
or
aad
cltd
cltd
sub
adc
mov
pusha
sub
sbb
std
scas
cmp
dec
mov
out
jecxz
xor
push
in
mov
lds
insb
push
lea
lret
and
push
inc
inc
cmpsb
and
scas
int3
inc
mov
push
xlat
jnp
jae
out
cwtl
mov
shll
imul
cld
mov
test
loope
sbb
and
leave
jp
sbb
mov
in
sbb
movl
pusha
imul
push
xor
stos
fmul
sti
dec
mov
push
inc
sub
repnz
cmp
test
add
lods
insl
outsl
push
mov
xchg
adc
and
sbb
ret
xchg
add
or
in
mov
mov
fisubl
cmp
jp
mov
adc
mov
lahf
negb
rol
bound
or
cmpsb
cmpsl
ljmp
pushf
js
orl
cmp
mov
jnp
dec
cmc
cmpsb
xor
add
aam
xchg
sbb
jno
aad
jne
cmp
adc
pop
inc
dec
push
inc
sub
imul
push
daa
pushf
inc
test
fmull
rcrb
xor
pop
stos
fidivrl
cmp
mov
dec
leave
mov
xchg
inc
add
cmp
insb
xchg
push
push
or
xchg
jne
mov
xchg
mov
imul
mov
pop
mov
rcll
jecxz
jbe
adc
jne
mov
mov
mov
cmp
ret
stos
fstpt
mov
cmc
sbb
jno
jns
ret
lahf
or
mov
push
adc
mov
icebp
incl
ds
aas
add
call
hlt
ljmp
repnz
into
into
mov
pusha
out
sub
jge
xor
xor
cmp
mov
xor
nop
sbb
rorl
sbb
sub
jp
jae
nop
in
dec
or
loopne
mov
dec
jb
mov
out
imul
leave
mov
ljmp
xchg
and
push
into
push
andl
add
xchg
jl
lods
leave
push
xor
dec
sti
sbb
and
sbb
push
les
mov
loop
cmp
and
out
movsl
or
push
xchg
xchg
test
cwtl
fs
rorl
xor
fcmovb
dec
pusha
push
or
pop
bound
mov
xlat
int3
outsl
nop
sub
mov
movb
jae
bound
mov
mov
je
cmp
ror
add
mov
pop
mov
lret
aam
cmpsb
test
test
and
jmp
jmp
cmpsb
mov
push
dec
scas
push
std
mov
cmp
inc
cmp
sbb
nop
dec
xor
ja
lea
pop
mulb
je
rcrl
mov
mov
dec
xor
sub
push
lcall
lret
and
js
cmpsb
jmp
fldt
test
das
dec
faddl
inc
orl
mov
mov
fwait
daa
mov
mov
add
mov
pop
inc
push
pop
mov
lret
arpl
add
xchg
shll
lea
pop
mov
add
aad
lds
mulb
test
in
popf
bound
pop
imul
and
xorb
pop
push
pop
mov
jecxz
sbb
push
aas
std
pop
in
mov
inc
stos
jo
outsb
xchg
jmp
adc
mov
push
andb
inc
lods
stos
pop
jp
das
clc
shll
pusha
pop
jecxz
or
xchg
push
xchg
jbe
stos
jg
jge
fistpll
dec
push
das
sbb
mov
ds
in
mov
mov
dec
xchg
mov
pusha
mov
pop
add
leave
add
das
cmpsl
add
inc
fidivs
gs
mov
lret
movsl
popa
or
mov
jp
and
into
mov
divb
jo
mov
pop
cmp
test
xor
nop
cmp
adc
and
lock
pop
fs
aas
jnp
addb
jae
xor
sub
call
mov
sub
movsl
int3
cmp
rorb
fs
lret
jno
dec
dec
dec
jno
cwtl
inc
dec
pop
and
mov
lret
ja
sbb
insb
xor
fstpt
fdivr
mov
vaddsubps
xchg
movsl
mov
subb
fnstsw
cmpsl
cmpsb
int3
out
sbb
mov
xchg
xchg
mov
lahf
xchg
call
jge,pt
stc
les
sub
stos
jnp
push
mov
dec
ljmp
dec
jl
clc
mov
daa
and
mul
movsl
adc
mov
lahf
xor
inc
push
pop
cmpsl
ds
dec
lods
mov
cmp
leave
mov
movb
stos
sbb
in
inc
xor
test
mov
fiaddl
adc
lcall
adc
mov
imul
cmp
rol
int3
adc
cmp
imul
imul
pop
xor
loopne
jbe
out
movsl
insb
fdivp
fisttps
addr16
mov
incb
ljmp
sbb
fnclex
inc
lock
out
cmc
inc
rolb
dec
sub
in
mov
and
xchg
or
dec
or
das
fiaddl
dec
and
mov
je
ja
mov
lods
adc
ja
dec
call
and
add
loope
dec
adc
nop
jo
mov
push
mov
movsb
mov
lods
sub
jg
pop
idivl
mov
out
daa
sbb
push
shll
stc
mov
add
into
or
andl
or
movsl
adc
mov
loopne
dec
pop
sub
mov
jo
test
clc
pop
frstor
jecxz
lea
inc
push
imul
ljmp
aam
stc
xor
call
jnp
call
fadds
enter
jg
push
inc
xor
inc
jg
pop
in
xchg
push
adc
adc
push
inc
loopne
sub
cmpsl
and
arpl
testl
and
inc
dec
fwait
jns
out
call
sbbl
in
sbb
sub
imul
mov
dec
add
inc
pop
adc
decb
pop
fstl
data16
cs
mov
mov
cmp
es
dec
xor
fisttpll
cli
jnp
lcall
arpl
cmpsl
loopne
cmp
mov
pop
push
xor
or
mov
movsl
negl
daa
adc
cli
mov
outsl
ja
jmp
mov
and
fidivs
imul
sub
lock
iret
mov
bound
adc
mov
xlat
adc
stos
sub
jmp
sti
popa
popa
scas
addb
xchg
shrl
mov
mov
push
mov
lret
rclb
pop
jmp
fwait
jle
jle
pop
sub
mov
fisttps
out
jp
mov
fwait
mov
inc
dec
lea
mov
jns
out
lcall
xchg
jbe
adcl
sbb
cwtl
jo
insl
int
or
and
nop
enter
aam
jnp
xchg
sbb
mov
mov
jb
mov
aaa
sbb
mov
pop
push
arpl
mov
cli
fnstenv
ror
and
xchg
mov
std
mov
loop
xor
lods
leave
push
imul
sar
test
inc
dec
dec
xchg
sbb
jbe
xchg
pop
pusha
cmp
and
lcall
into
or
sub
pop
jp
into
push
insb
int
rcrb
shlb
ret
and
repnz
fisubs
or
adc
data16
imul
data16
icebp
jp
andl
out
cmp
and
or
mov
jecxz
inc
mov
jb
mov
adc
lock
and
call
pop
xchg
out
cli
out
or
in
aad
insb
imul
decl
loop
popf
test
mov
lods
iret
xor
negl
mov
dec
dec
loop
xor
loop
sbbl
cld
lock
or
stos
pusha
pusha
xchg
mov
std
adc
pop
xor
ja
push
enter
loop
adc
push
scas
out
xorb
ficompl
pop
outsb
imul
js
pop
dec
adc
aam
adc
jmp
cmp
loopne
dec
loope
push
loop
xor
negl
leave
and
push
sbb
jae
hlt
mov
stos
mov
xchg
pusha
inc
push
icebp
adc
sti
test
cmpb
rcr
jg
lea
in
jo
mov
adc
sbb
jp
pushf
pop
cmpsb
xchg
inc
icebp
push
leave
and
insl
test
enter
fimuls
repz
aad
sbb
mov
popf
lods
xchg
jne
or
sbb
pushf
pop
mov
adc
push
jle
in
xor
cmc
add
lods
xchg
jbe
rorb
rcrl
fwait
xchg
push
jg
mov
enter
cwtl
fidivrs
cmp
scas
das
sbb
addr16
jns
inc
push
mov
mov
sbb
add
mov
ret
cli
cli
hlt
adc
dec
fnstsw
or
icebp
inc
je
sub
mov
clc
pop
sub
fxch
and
sti
rcll
xchg
or
gs
mov
mov
mov
push
push
push
adc
mov
xor
push
inc
or
pop
adc
push
das
fstps
push
bound
mov
cltd
xchg
and
push
aad
or
or
stos
jb
dec
sbb
pop
sbb
jbe
adc
stos
push
mov
xor
mov
setp
aam
or
and
cmpsb
xor
or
test
mov
repnz
aam
xchg
dec
insb
andl
xor
add
es
inc
sti
xchg
pop
pop
lret
xchg
push
dec
pop
jns
pop
lods
not
jle
xchg
xchg
xor
mov
adc
cmp
movsl
dec
xor
mov
pop
push
call
or
dec
loope
xchg
inc
xchg
mov
xor
and
fisttpl
movsl
xchg
rcll
xor
ljmp
mov
jmp
push
xchg
repnz
lret
sub
jle
jle
add
stc
sbb
in
cmp
push
pop
and
adc
xorl
inc
push
pop
imul
sub
fisttps
or
pusha
sub
mov
lcall
in
in
aam
push
punpcklwd
nop
push
shll
push
pop
jne
shrl
mov
shrb
fs
push
test
sub
mov
and
lds
or
lahf
push
sahf
popf
int3
out
mov
test
xorl
je
jnp
cltd
xchg
int
xor
dec
sub
push
pop
jle
push
xor
rorl
int3
jbe
jl
mov
loope
imulb
lret
sub
and
inc
rclb
mov
ds
les
int
out
nop
js
dec
xchg
jecxz
popa
xor
mov
adc
adc
rcll
sbbb
push
jns
mov
insl
lret
aas
in
shrb
sub
sbbl
sahf
inc
mov
inc
jae
ljmp
psubq
xor
adc
or
dec
cltd
add
cmp
jb
mov
adcl
ror
call
call
or
ret
testb
and
int
fadds
cmp
inc
fcmove
mov
sub
mov
lret
and
push
into
push
mov
fmulp
and
test
or
in
mov
sahf
push
sbb
dec
jbe
mov
sub
xchg
mov
xchg
pop
jns
das
scas
pop
sbb
jnp
pushf
outsl
jbe
jno
sub
jnp
push
lahf
or
pop
and
sub
in
pop
je
popf
fld1
das
jo
repz
out
cmp
add
jle
mov
fdivr
jmp
xor
adc
cmp
adc
or
cmp
xchg
xor
adc
add
mov
nop
insl
add
int
out
in
in
mov
lret
hlt
adc
push
cmp
aas
sbb
mov
lcall
adc
jp
jmp
dec
out
jp
mov
xor
sahf
rclb
sub
jo
nop
xchg
dec
jno
ljmp
mov
into
pop
pop
fwait
adc
xchg
mov
in
jae
fistpll
into
pop
fadd
xor
mov
pop
inc
add
aas
sub
sbb
sbb
enter
pop
xchg
cs
push
pop
sbb
call
jns
repnz
shrl
cmc
xor
addr16
jge
test
sub
ljmp
test
shlb
ret
test
mov
stos
pusha
sbb
dec
jl
xchg
daa
in
cmp
xlat
enter
std
adc
xor
xor
stc
ds
test
add
and
insl
enter
decb
mov
mov
sbb
stc
pop
addl
arpl
mov
push
adc
pop
sub
jne
lcall
jo
jns
lret
outsb
leave
std
lds
pause
sbb
mov
es
push
test
push
pushf
test
sbb
mov
js
imul
and
add
repnz
xor
push
mov
pop
movsl
lea
or
lea
mov
into
popf
and
in
sub
lods
orb
sbb
lcall
push
insb
mov
xchg
insl
inc
xchg
sbb
out
ljmp
push
repnz
lods
adc
sub
js
sub
cmp
adc
cmp
add
sub
mov
lcall
in
jno
pop
add
inc
sub
xchg
xor
jns
mov
dec
cs
mov
movsl
repnz
sub
jg
cltd
std
ljmp
sbb
mov
lcall
and
fsubl
mov
mov
xchg
movsb
inc
vandps
jmp
aaa
push
xchg
sbb
fs
icebp
sar
lods
shlb
sahf
adc
mov
push
mov
addl
into
js
and
cltd
lds
mov
cwtl
jne
leave
push
mov
mov
cmpsl
addr16
sbb
ret
div
mov
push
mov
es
push
je
mov
imul
mov
cld
dec
mov
fistps
xchg
lea
fwait
jecxz
out
in
imul
imul
hlt
test
mov
xor
fisubrl
ror
test
mov
loopne
sub
iret
or
js
inc
orb
mov
push
loope
js
bound
fsubrl
fcmovu
jb
hlt
in
jecxz
aas
xchg
pusha
fcmovne
push
imul
clc
inc
xor
inc
mov
xor
lret
sbb
in
lcall
xor
in
int
sbb
sub
into
add
jo
jmp
mov
push
daa
sbb
pop
lods
mov
fs
pusha
add
jae
dec
cmp
rorb
pushf
int
mov
test
sbb
dec
sti
lock
dec
sub
in
and
pop
inc
mov
shl
xchg
xchg
jg
repnz
pop
mov
push
mov
mov
lret
rcrl
or
push
cmc
stc
cmc
iret
movsb
addb
fidivrs
cli
dec
lock
sub
and
pop
stc
arpl
push
mov
pop
sub
jns
push
iret
popa
in
mov
or
dec
inc
imul
mov
push
ss
adc
int
pushf
cmp
dec
and
and
inc
mov
clc
fdivrp
push
ds
outsb
cmp
add
pop
hlt
lods
test
aad
mov
leave
xchg
inc
outsb
and
adc
push
sub
xchg
sti
mov
fcom
add
push
dec
or
or
pop
xchg
movsb
pop
adc
lahf
dec
mov
mov
insl
adc
int3
pop
pusha
cmpsl
outsb
addr16
adc
out
cmpsl
and
imul
ret
lea
fldcw
cs
daa
or
fdivrl
xchg
xchg
jb
xor
fsts
jg
mov
out
push
add
xchg
repz
daa
adc
iret
xchg
sbb
je
fists
es
jnp
adc
icebp
insb
sub
pop
leave
out
in
xorl
dec
adc
stc
bound
inc
imul
rolb
loopne
sbb
ficoml
fstl
mov
push
fneni(8087
cld
sbb
xchg
repz
pushf
ss
adc
loope
fxam
sarb
jecxz
sbb
dec
sbb
int3
xchg
pop
fs
fcoml
iret
shrb
ret
and
test
mov
pop
and
cmp
inc
out
dec
imul
ror
outsb
mov
movb
aad
sub
pop
enter
xchg
lahf
xchg
pop
sbb
jne
sahf
cwtl
jle
in
push
mulb
int
mov
ja
std
xchg
add
aam
lds
jbe
dec
jp
mov
cmp
faddl
push
and
mov
jl
jae
mov
jnp
jge
popa
dec
aaa
aam
shr
or
pusha
test
sub
fdivr
es
xor
cmp
xor
mov
insl
jge
push
movsl
lea
ret
lret
pushf
jmp
sub
out
xchg
and
inc
or
add
clc
push
mov
rorl
setl
xor
je
push
popf
xor
xchg
cmpsl
or
adc
mov
mov
imul
push
inc
inc
orb
inc
cmp
in
sub
loop
inc
cmpsb
stos
push
rolb
stos
sbb
and
fwait
cmc
or
pop
xor
and
push
outsb
jle
pop
and
jmp
jg
lret
push
in
add
push
dec
mov
add
test
add
cmp
and
xor
sbbb
pop
iret
jne
sub
cmc
mov
aad
aas
movsl
jb
push
dec
sti
mov
test
and
sub
fisttpl
push
mov
ret
pop
cli
imul
push
push
jp
xor
ret
outsb
push
movsb
jno
jge
and
sti
dec
fisubrs
lods
push
fwait
jecxz
push
data16
dec
iret
and
nop
xor
ss
sbb
dec
pop
jecxz
in
pop
std
cmp
std
int3
in
cltd
stc
adc
ss
je
imul
sub
add
add
adc
hlt
or
nop
cmp
lock
cwtl
mov
lret
sbb
addb
sub
fstpl
xor
xor
out
inc
dec
dec
std
sbb
pop
push
ficoml
xchg
push
out
mov
mov
insl
int3
pop
ds
push
fnsave
pop
lcall
test
jg
lock
dec
inc
ljmp
inc
pop
xchg
or
cwtl
sub
out
int
sub
xchg
xchg
stc
fnsave
fnstcw
cld
out
hlt
test
repz
ss
mov
mov
add
cltd
daa
jb
fwait
adc
xchg
and
lds
mov
std
mov
adc
pop
xchg
or
pop
xor
jo
stc
cmp
aaa
les
xchg
sbb
aad
cmp
insl
cmp
and
pop
pop
aad
ja
jae
outsl
xor
dec
push
mov
xor
lret
rcrl
test
mov
dec
and
jl
push
dec
mov
ficoml
xchg
js
popf
arpl
in
inc
cwtl
fwait
xchg
jne
dec
adc
pop
insb
lahf
inc
sarb
dec
xchg
inc
shll
fiadds
pusha
in
sub
ja
adc
mov
mov
adc
pushf
bswap
add
stos
jmp
subb
jns
mov
imul
dec
fs
jnp
hlt
cmp
in
mov
enter
cmp
xchg
mov
sti
stc
loop
call
pop
out
mov
push
add
fwait
popf
jmp
xor
jmp
sbb
fstpl
bound
jo
popf
push
xchg
mov
test
js
inc
mov
adc
inc
out
ja
cmp
mov
lcall
aam
cmp
std
xor
sbb
pop
push
add
lret
sahf
call
jo
cmp
mov
sbb
pop
cmpsb
jmp
sub
test
ljmp
mov
das
xor
js
lahf
xlat
fidivl
xchg
inc
je
insl
mov
mov
sarb
ss
push
jp
mov
imul
add
pop
mov
addl
popf
xor
push
sbb
cmpb
adc
data16
xor
stos
mov
cmp
cmp
sub
les
lea
insl
xchg
in
add
jnp
inc
xchg
or
add
mov
cli
lcall
stos
adc
and
add
enter
stos
xor
jg
push
mov
add
fdivr
mulb
mov
pop
jp
pop
xor
shl
pop
lods
ss
incl
or
pop
mov
xchg
jb
jae
bound
notl
xor
into
adc
std
push
movsb
cmc
adc
mov
inc
xchg
std
fldl
es
xor
mov
push
fldcw
dec
push
shl
xchg
out
clc
negb
sti
cmp
xor
in
jge
adc
out
bound
push
out
ja
pop
jno
mov
push
xor
cmp
cmp
sbb
leave
je
dec
jno
xchg
inc
into
aaa
add
fstp
push
icebp
cmpsl
test
fdivrl
lret
or
shr
out
xor
stos
gs
test
shll
out
push
cld
mov
out
insb
fildl
or
xchg
scas
inc
mov
sahf
dec
sbb
lock
add
in
mov
popl
stos
rcl
mov
lahf
loopne
add
lahf
dec
adc
dec
call
mov
ja
imulb
jecxz
push
sub
and
jo
roll
shlb
je
stos
hlt
rcr
das
mov
mov
es
cmp
arpl
adc
shll
es
inc
mov
addb
mov
outsb
fs
dec
jp
or
pop
cmp
leave
imul
out
das
push
ret
addr16
xor
sbb
sub
scas
popa
dec
xchg
cmp
dec
and
jnp
mov
data16
push
xor
adc
outsb
out
dec
aad
dec
fbstp
test
mov
jp
sub
cmp
test
rcr
mov
cmp
lret
xor
std
lock
lea
sub
pop
xchg
rol
pop
jne
fwait
inc
scas
es
es
aam
mov
mov
imul
addr16
pop
in
repz
pop
cmp
decl
out
call
imul
jg
divb
stos
lock
adc
iret
add
dec
cmp
data16
scas
mov
fdivrl
nop
arpl
or
mov
mov
sbb
shrl
add
test
sarl
cwtl
jns
xchg
mov
xchg
xchg
push
sub
cmp
fadd
into
cmp
pop
into
orb
adc
inc
loop
xchg
sub
repz
out
push
daa
cwtl
jne
mov
jmp
jmp
xchg
push
shrl
aaa
repz
jbe
sub
or
aam
jb
dec
in
arpl
ljmp
aaa
fildl
insb
shr
pop
push
adc
les
repz
push
ret
clc
cmc
xchg
sub
add
mov
ja
cmp
mov
or
xchg
outsl
sub
mov
xchg
mov
xor
je
clc
jb
insl
push
icebp
pop
sub
les
add
mov
dec
sub
mov
add
mov
and
xchg
sahf
inc
xor
pushf
loop
lea
lret
pop
xchg
loop
insl
xorl
nop
int3
xor
and
sbb
sbb
leave
and
adc
fwait
inc
dec
cmp
mov
mov
push
xchg
insl
xchg
fwait
pop
faddl
stos
cmp
es
pop
loopne
notb
into
iret
js
divb
cld
sbb
ja
mov
sbb
scas
lock
cmp
fstl
pop
fnstcw
adc
sbb
push
in
jp
rcrl
dec
xchg
jo
pushf
sub
adc
out
cmp
ja
xlat
push
leave
dec
test
mov
imul
pop
repnz
cmp
inc
fbld
jmp
cmp
jmp
adc
inc
push
add
into
sarl
mov
add
shlb
mov
mov
pop
push
push
xchg
ss
sub
sahf
pop
jno
push
aad
shlb
jge
add
sub
je
cmp
jmp
dec
stos
outsb
push
ret
mov
cli
xor
je
movsd
cmpsl
dec
clc
jno
hlt
cli
mov
cmc
gs
fistpl
mov
fwait
movsl
dec
pop
mov
sub
push
dec
adcl
loop
dec
mov
add
je
sbb
mov
xchg
cmpsb
int3
jecxz
pop
cld
lods
imul
adc
daa
adc
dec
leave
mov
mov
out
mov
pop
data16
ds
rolb
xchg
pop
frstor
test
or
cmpsb
sbb
rolb
imul
stc
or
hlt
aaa
pop
push
adc
movsb
jnp
movsl
add
inc
xchg
xchg
cmp
push
pop
jmp
pop
outsl
push
sub
loopne
or
inc
lea
mov
or
pop
dec
lods
test
xchg
je
pop
pop
push
jg
sbb
xchg
mov
cli
lcall
jl
dec
adc
dec
dec
add
pop
in
enter
call
and
dec
and
dec
pop
jg
inc
mov
xchg
jmp
mov
hlt
and
jb
push
insl
rolb
je
testl
nop
inc
and
outsb
das
imul
mov
cmp
ss
dec
add
lret
jne
insb
fs
mov
add
push
sbb
je
jne
je
xchg
bound
dec
icebp
mov
bound
ds
pop
stos
imul
or
sbb
cmp
fs
insl
dec
mov
test
inc
daa
inc
int
mov
xchg
mov
adc
cmp
jle
shrl
pop
aas
out
jns
loop
push
lds
inc
cmp
popa
cmp
mov
jb
pop
scas
or
dec
cmc
incl
fildl
pop
outsl
jl
rcr
xor
push
shr
pop
out
dec
add
push
cmc
push
fldt
fisttpl
scas
ret
or
les
into
fld
jns
loope
mov
mov
aam
cmpl
je
sbb
dec
in
xor
in
fisubrl
dec
xchg
ror
fnstenv
xlat
pop
loope
xor
mov
clc
ds
ret
scas
jle
jge
mov
and
cmpsl
test
cmp
push
fucomi
rcll
adc
xlat
loopne
mov
negl
sub
mov
sarl
add
ljmp
adc
fwait
fwait
cmp
mov
inc
mov
lea
dec
lds
xor
ss
mov
jmp
mov
outsb
imul
pop
ret
mov
dec
sub
fldt
pop
imul
cmp
mov
jmp
pop
mov
push
jg
and
push
push
xchg
jae
les
jmp
xchg
adc
out
push
sbb
popf
mov
sub
sti
aaa
pop
outsb
pop
in
bound
ljmp
push
ds
adc
inc
pop
inc
nop
jne
mov
jae
sub
movsl
push
pop
bound
sub
pop
add
int
addb
mov
mov
push
pop
mov
clc
in
cld
mov
cmp
addb
or
lods
dec
add
hlt
or
rolb
call
xor
and
xor
mov
mov
mov
bound
inc
lret
inc
popa
mov
pop
sbb
daa
add
dec
in
xchg
sbb
int3
push
pop
sbb
aaa
insl
jl
cmp
and
ljmp
outsl
ret
mov
insb
pop
pop
pop
sbb
stos
adc
adcb
xchg
cmpsl
adc
cmpsl
rorb
sti
movsl
pop
sbb
arpl
cmc
mov
in
into
xor
xchg
xchg
adc
cmc
sub
sbb
mov
push
rorl
std
fwait
insl
test
xchg
push
sti
mov
out
add
pop
fimull
pop
xor
into
subb
les
loopne
ret
push
imul
aad
lock
insl
or
mov
pop
lahf
ret
aaa
shld
daa
xchg
sbb
push
and
xor
sbb
ljmp
fwait
xor
inc
jns
movsb
lods
jnp
aaa
add
inc
cld
pop
push
cmp
mov
fs
mov
movsl
sbb
mov
pop
bound
push
jecxz
std
mov
mov
inc
mov
data16
and
frstor
fwait
inc
mov
cmp
and
xchg
dec
rcrb
pop
jg
or
rorl
xor
ja
lods
mov
je
repz
cmpsb
mov
scas
leave
adc
or
sub
pop
mov
mov
lcall
into
lods
stos
xchg
mov
inc
rcrb
int3
cmp
and
in
shr
outsl
adc
push
jg
pushf
aas
mov
insb
pop
pushf
mov
test
ret
inc
stc
out
popa
inc
loope
push
ss
insl
out
in
addr16
adc
int3
xchg
lret
daa
mov
mov
imul
jmp
inc
mov
xchg
add
dec
and
jb
gs
push
scas
pop
add
xchg
adc
pop
mov
and
xchg
mov
sub
sti
dec
jge
and
daa
add
adc
addr16
out
js
adc
iret
insb
lret
std
bound
sbb
into
sbb
mov
xor
nop
adc
xor
jne
inc
jecxz
ret
xchg
mov
mov
push
cmpb
mov
leave
test
test
inc
and
setp
mov
pop
stc
movsb
push
push
jo
ret
aad
es
mov
xor
and
mov
push
rcl
xchg
fnstcw
rcrl
mov
stos
fldcw
nop
dec
xchg
cmp
aas
adc
sbbb
scas
rcll
and
fdiv
inc
pushf
sar
adc
pop
aam
rcl
pop
in
sub
fwait
xchg
pcmpeqb
cmp
inc
xor
or
inc
mov
fstl
ret
lea
push
in
out
jp
add
dec
mov
testl
adc
rcll
xor
out
jmp
lret
cltd
lea
leave
sub
pop
sbb
mov
mov
ds
repz
xchg
xor
cmp
mov
mov
pop
lretw
adc
push
aam
mov
shll
test
imul
leave
mov
xor
pushf
icebp
xchg
rdpmc
lret
jle
mov
adc
nop
jmp
int
mov
bound
jmp
aam
cmc
push
add
test
mov
and
adc
add
cmp
xor
arpl
aad
and
mov
mov
fwait
sbb
lds
mov
mov
pop
and
movsb
mov
in
push
mov
stc
scas
cmp
enter
movsb
inc
push
pop
xchg
adc
lret
inc
mov
loope
cmpsl
mov
xchg
push
scas
fimull
dec
mov
dec
xchg
push
movsb
scas
inc
pop
shll
jmp
rclb
fldt
adc
invd
mov
push
mov
cmp
mov
jle
add
nop
adc
xchg
xor
sub
pop
loopne
and
nop
xchg
test
mov
add
inc
lcall
push
ds
hlt
lods
stc
andb
test
mov
jns
add
xchg
cmpsb
das
mov
jle
or
mov
imul
mov
adc
jl
jne
and
inc
insb
or
inc
add
movsb
shll
xor
jno
jp
push
stos
int
repz
push
dec
imulb
in
xchg
lcall
dec
and
mov
out
sbb
adc
xor
mov
add
push
rcr
shr
mov
and
ficoml
pop
pusha
pop
inc
hlt
mov
push
leave
test
xchg
sti
cli
mov
shll
xchg
xor
loop
cmp
push
outsb
roll
fstpt
push
push
movsl
enter
mov
add
movsb
sbb
and
and
dec
sbb
mov
adc
lods
repnz
iret
clc
xor
inc
xchg
lea
xchg
ja
addr16
pop
popf
sbb
cmp
inc
scas
stos
xchg
and
pushf
insb
ret
in
push
cmpsl
sbb
pop
jmp
mov
mov
jne
adc
jle
into
sub
add
imulb
rolb
push
add
pop
mov
es
push
andb
or
in
outsb
mov
in
cwtl
mov
in
out
into
rcrl
pop
ret
mov
push
js
add
cli
out
fldenv
ret
inc
push
xchg
dec
mulb
mov
mov
and
xorb
sbb
sub
xchg
out
jmp
out
or
lock
push
cld
xchg
and
sub
push
imul
jl
clc
fdivp
cs
loope
cltd
or
jno
and
mov
inc
jne
add
insb
pusha
mov
xor
and
xchg
push
lea
mov
out
xor
xchg
add
sub
push
add
add
fbld
or
pop
dec
sbb
jne
shll
js
cmc
pop
cwtl
lds
and
xchg
mov
sbb
sahf
ret
dec
jl
loop
xchg
clc
push
mov
mov
rcll
test
add
iret
inc
and
and
mov
dec
cmc
xor
gs
xchg
mov
sub
insl
fcmovnbe
dec
repnz
inc
mov
push
out
lds
and
push
iret
inc
add
cltd
push
pop
clc
stos
pop
pop
fnstenv
test
jmp
pop
and
test
dec
ret
xor
and
rolb
js
pop
mov
add
jle
adc
xchg
aaa
inc
out
and
les
fs
inc
inc
loope
xchg
lods
cli
xchg
jns
dec
gs
xchg
pop
inc
inc
xchg
ss
aad
lods
fildl
cmpsb
subb
sbb
sbb
push
rolb
xor
sbb
js
sbb
ficompl
mov
push
in
mov
inc
add
and
in
dec
loop
push
mov
cmp
es
js
jbe
lcall
add
stc
mov
or
and
or
std
pop
mov
decb
leave
jmp
jg
sub
push
xchg
aas
out
mov
pop
pop
adc
les
into
lods
push
enter
mov
addb
in
dec
testb
pop
pop
push
or
loope
cmp
sub
imul
xchg
jns
jb
or
in
mov
repz
psubsw
out
mov
test
inc
xchg
fwait
add
xlat
push
inc
stc
outsb
add
ja
sub
stos
hlt
jae
jb
nop
dec
testl
rcrl
sbb
stos
repz
dec
pop
jae
cmp
dec
jge
icebp
leave
cmpl
std
sahf
pop
addr16
pusha
cs
and
fucomip
cmp
daa
dec
adc
pop
mov
push
ret
fwait
leave
sbb
lret
rcll
inc
es
or
stc
sub
cmp
ja
push
jle
cmp
xor
mov
cld
test
aaa
xor
push
lret
push
mov
into
mov
mov
xchg
mov
jb
pop
clc
jbe
out
int
dec
and
mov
pushf
adc
movsb
les
pop
dec
pop
dec
imul
imul
jnp
bound
ret
stos
jae
fnstenv
sbb
jae
pop
mov
add
rcrl
pop
idiv
int3
test
adc
xchg
push
lods
lahf
adc
jnp
inc
mov
pop
fstps
filds
outsl
vmwrite
adc
nop
push
inc
stos
sub
lock
mov
or
sub
jb
stos
rclb
or
dec
enter
jns
adc
loope
inc
pop
dec
mov
aad
rol
xchg
xchg
mov
mov
test
dec
aam
add
out
imul
adc
cmc
movsl
xchg
sub
mov
cmc
add
jnp
jne
jl
scas
lahf
xchg
jbe
ret
rcrl
jns
ds
vcmpss
aas
test
cmpb
jns
lret
adc
shlb
fldt
faddl
iret
xchg
lock
cmc
mov
and
fldl
cmp
dec
or
mov
sbb
mov
shrb
add
out
clc
xor
fistps
or
sbb
cmp
mov
push
push
adcb
xchg
mov
inc
and
push
mov
cmc
es
xchg
sub
sub
mov
mov
rclb
push
movsb
jbe
xlat
push
push
fnsetpm(287
imul
out
cvtdq2ps
ss
jbe
cld
movsb
inc
stos
or
ja
es
cmp
push
inc
adc
jp
jne
pop
mov
icebp
aas
xbeginw
cmp
fstpt
dec
sub
shrb
sub
jb
cmp
mov
pusha
out
push
icebp
sbb
inc
out
mov
xchg
adc
icebp
imul
mov
adc
jle
add
xor
pop
xchg
mov
fimull
cmc
push
dec
outsb
loop
dec
or
mov
jg
rolb
aas
loopne
aam
xchg
ds
loopne
jne
adc
cs
mov
adc
lret
fwait
loop
lret
push
xor
idiv
ja
test
cmp
lods
outsl
lahf
cmp
xchg
and
popf
sbb
push
mov
jp
mov
movsl
stos
sbb
dec
fcmovnu
inc
popa
sbb
cmpsl
jo
cmp
inc
push
insb
xchg
repnz
push
out
clc
xor
fistpl
push
rcrb
mov
insb
jo
jmp
and
xchg
int3
shlb
imul
xor
push
dec
push
lret
push
adc
xchg
leave
mov
jecxz
mov
cmp
adc
mov
xchg
cmpsl
pop
scas
test
roll
add
adc
lock
rolb
into
add
cmpsl
fst
or
xchg
cmp
rcl
movsl
mov
int3
cli
hlt
iret
icebp
or
cs
shl
add
lret
out
mov
dec
dec
out
dec
cs
rcr
ret
mov
cwtl
lcall
push
repnz
fmull
fldcw
sbb
mov
push
rclb
xor
xor
xchg
test
and
out
sub
test
add
push
inc
xor
pop
and
pop
ds
test
int3
pop
sub
inc
sub
push
mov
xor
mov
jmp
push
ret
das
in
je
sbbl
xorl
inc
movl
pusha
cwtl
xor
popf
sbb
xor
push
cwtl
sbb
xchg
int3
sbb
stc
sbb
cltd
bound
nop
sbb
xchg
adc
mov
ss
jno
inc
orb
out
pop
push
rorb
mov
pushf
mov
mov
int3
sub
scas
cmp
in
insb
xchg
mov
or
decb
pusha
jg
aad
ret
sarl
or
adc
xor
lahf
fwait
xchg
cmp
pop
cmp
cmp
adc
pop
nop
es
int3
fists
les
mov
sti
es
push
push
movsl
pop
pop
jo
leave
shll
or
mov
pop
inc
lcall
jb
imul
cmp
mov
push
or
jg
stos
xor
loopne
insl
je
pop
xchg
or
daa
divl
out
push
test
add
nop
sbb
inc
fstps
mov
adc
mov
fwait
inc
imul
enter
adc
js
in
pushf
ret
fwait
inc
repz
mov
push
and
rep
mov
insb
mov
sub
push
sbb
or
pop
je
sub
ret
out
imul
sub
sbb
rcrl
je
in
cltd
pusha
scas
in
add
in
mov
xlat
or
sbb
cmpsl
loopne
and
enter
loopne
repnz
in
pop
inc
mov
and
adc
cltd
fcompl
js
cmp
adc
dec
jnp
add
inc
mov
dec
add
jp
ljmp
lcall
mov
imul
adc
rcll
repz
mov
arpl
jge
int
rol
lock
lcall
test
in
ret
lcall
sbb
mov
aad
lret
jo
test
add
add
imul
push
push
jo
mov
jnp
in
imul
xor
jle
sti
int3
lahf
adc
test
dec
or
mov
test
mov
pop
sti
xchg
popl
divb
jnp
sti
sbb
and
mov
dec
adc
imul
lret
jnp
xor
fcomps
xchg
ljmp
cmp
arpl
mov
testl
or
cmp
pop
add
xchg
adc
ds
adc
xchg
jecxz
notl
loope
movsb
xlat
in
jmp
inc
or
sbbb
xor
es
dec
dec
jne
mov
jne,pn
popf
mov
add
mov
in
mov
push
hlt
ds
jmp
push
lods
outsb
int3
data16
sbb
dec
addr16
sub
push
pusha
gs
adc
in
cmp
xchg
add
and
out
add
pop
cld
cld
pmaddwd
in
mov
add
nop
xchg
stos
clc
xor
imul
loopne
pop
dec
mov
xchg
pop
and
les
lds
fwait
lcall
xor
xor
femms
aas
scas
jns
es
ljmp
mov
fsubrs
insb
les
roll
push
mov
sbb
pop
shlb
and
dec
pusha
movb
out
out
daa
gs
in
test
mov
push
filds
push
mov
outsl
pop
pop
xor
or
cltd
ret
jb
jnp
sbb
cmp
fistpll
and
mov
ret
hlt
cmc
xlat
test
xchg
in
jl
fwait
movsb
into
call
push
dec
and
imulb
inc
sbb
icebp
dec
or
loope
pop
sbb
es
pop
test
leave
ret
or
jle
or
pop
inc
andl
mov
in
or
inc
jns
mov
mov
cmp
fbstp
clc
push
imul
movsl
iret
aas
jl
sti
cmp
dec
popa
add
dec
push
mov
leave
push
cmpsb
ss
loopne
iret
add
sbb
push
sub
lcall
or
adc
ja
mov
imul
push
pushf
cmpsl
xor
scas
in
fmul
test
fisttps
pop
int3
dec
ret
xor
movsl
jecxz
cltd
xchg
int3
loop
jmp
jg
sub
nop
sub
jae
xchg
push
jb
outsb
sub
mov
sahf
in
and
xchg
mov
out
jp
stos
cmp
add
fnstcw
ds
xor
stos
jbe
out
push
jnp
pop
sub
sbb
inc
scas
int3
call
cmp
add
and
hlt
mov
mov
lcall
push
cli
leave
ret
popa
xor
sti
push
pop
insb
lahf
fwait
pop
sub
popf
pop
cwtl
inc
loop
jge
insb
es
inc
in
lods
mov
cmp
out
ss
push
pop
rorb
jl
jp
mov
mov
mov
dec
mov
mov
dec
inc
inc
mov
xchg
movsb
sbb
pop
call
mov
ret
in
or
push
pop
test
das
mov
aad
push
xor
idivl
imul
add
fldl
xchg
movsb
pop
mov
mov
mov
stos
ja
jbe
loop
ret
daa
out
mov
mov
leave
and
scas
andl
dec
sub
mov
push
inc
xchg
ljmp
loopne
lods
add
lret
test
outsl
sbb
test
mov
repz
js
add
in
dec
cld
lea
lcall
jb
icebp
xchg
push
ficoms
dec
out
bound
mov
fmulp
mov
xor
inc
lea
lods
int
ficompl
mov
sbb
mov
jne
dec
or
inc
sub
ljmp
cmp
mov
movsb
dec
xchg
pop
add
outsb
fiadds
adc
in
jns
mov
pop
xchg
movsb
jne
jl
add
dec
pop
mov
push
mov
xchg
add
shrb
mov
or
cmpl
dec
mov
lea
repnz
or
jns
cwtl
stos
add
sbb
xor
movsb
xor
and
cmp
movzbl
das
shlb
pushf
dec
aad
dec
cmp
jne
hlt
sub
mov
wrmsr
out
pop
repz
adcb
or
outsl
push
adc
ss
push
push
lods
mov
mov
cmpsb
sub
jns
cld
icebp
bound
addr16
int3
jno
xor
mov
and
je
inc
cltd
mov
cli
cmp
adc
xchg
or
das
repnz
movsb
cld
sbb
mov
xor
push
and
jnp
fdivrs
in
test
in
push
test
mov
lock
push
pusha
xchg
test
subb
xchg
stc
adc
pop
pushf
sar
mov
cltd
cmp
subb
lret
std
inc
xchg
mov
lahf
test
dec
xorl
mov
xchg
xor
adc
mov
pop
and
bswap
mov
js
pop
movsl
jle
test
popa
lahf
ljmp
int3
test
outsb
mov
mov
popa
out
in
aaa
inc
push
fxtract
das
xlat
pushf
imul
test
lds
and
dec
icebp
addl
pop
sti
push
mov
push
inc
fsubl
dec
les
mov
dec
cli
push
adc
fdivrs
rolb
mov
pop
in
aas
mov
or
sbb
dec
and
in
es
lock
das
push
repz
decl
loop
pop
ss
shll
xor
adc
cltd
push
fdivl
xorl
jne
mov
push
inc
pop
mov
mov
mov
mov
push
sub
lret
jns
push
adc
adc
addr16
sbb
mov
icebp
sti
inc
loope
pop
cmp
sub
cs
iret
xchg
mov
cmp
sub
sbb
stos
dec
imul
and
cmc
insl
adc
inc
out
mov
insl
aas
xchg
repnz
pop
jge
and
mov
fwait
adc
and
imul
fcomps
test
cmpsl
daa
xchg
movsb
and
mov
inc
aaa
mov
xlat
pop
outsl
std
shl
cmc
inc
xor
mov
movsb
sub
push
sbb
mov
lret
and
and
cld
out
xor
bound
ss
dec
scas
testl
das
daa
pop
pop
gs
dec
cmpsl
or
ret
lret
out
stos
rcrb
test
in
daa
ss
int
lcall
jnp
mov
in
stc
jo
xchg
fcoms
pop
test
dec
cmc
mov
xlat
push
cli
sbb
mov
and
lock
jg
jp
pop
mov
test
inc
inc
flds
jge
sbb
mov
lds
cmp
lock
aam
dec
dec
dec
jg
leave
shlb
test
dec
push
arpl
movsl
cli
stc
out
xor
xchg
add
xchg
lret
adc
pop
testb
test
cmp
imul
mov
dec
mov
cs
mov
sbb
ss
mov
cwtl
daa
mov
ljmp
xor
push
sbb
xor
sarl
pop
loope
aaa
sub
inc
imul
push
ror
out
mov
sti
xchg
jmp
idivl
enter
int
insb
pop
loopne
ss
hlt
in
mov
adc
out
les
cwtl
jmp
outsl
adc
gs
sbb
adc
sbb
in
or
mov
mov
repnz
pop
adc
jae
ss
xchg
lds
xchg
push
sub
out
std
xchg
dec
sbb
dec
dec
jnp
mov
es
mov
in
adc
mov
pop
incl
cs
jmp
popw
adc
imull
scas
lods
lcall
pusha
or
sahf
or
into
jge
cmp
adcb
push
aaa
xchg
xchg
xor
loop
stc
repnz
sarb
mov
leave
hlt
cmp
pushf
inc
in
and
and
sbb
sub
pop
xor
ds
lret
bound
mov
fsubl
push
push
cltd
dec
lods
ss
or
push
xchg
lods
imul
orl
int3
add
inc
lea
shlb
or
enter
jmp
in
stos
dec
stos
rcrl
ret
filds
push
xchg
lcall
testb
add
xor
aas
sbb
and
mov
cmp
cli
jg
lods
ss
sbb
daa
pop
and
and
hlt
adc
mov
ficoml
or
inc
loop
addr16
and
cmc
dec
dec
idivb
and
nop
inc
imul
sub
mov
add
inc
jecxz
lret
adc
ror
clc
pop
adc
daa
cmp
jg
std
xor
arpl
adc
and
je
add
push
sbb
adcb
andl
imul
lods
dec
push
mov
jg
call
push
data16
xchg
shl
sysexit
sub
pop
lds
dec
mov
mov
sbb
in
xchg
rcrb
jne
pusha
push
xchg
push
scas
jmp
and
adc
cld
cmp
and
inc
bnd
add
mov
cmpsl
xchg
push
test
add
or
push
es
xor
push
pop
stc
mov
inc
rep
sub
or
pop
and
cmp
dec
or
jg
mov
mov
test
imul
fistpl
bound
cwtl
sub
dec
adc
dec
dec
xor
pop
or
shlb
add
jo
lods
pop
dec
push
dec
xor
aas
loopne
jge
fdivrl
loope
int
ret
cli
loopne
stos
fcomp
add
xor
fs
xchg
imul
xor
pop
aam
sahf
push
mov
and
loopne
mov
push
enter
into
pop
fidivl
adc
dec
insl
fs
test
and
out
jmp
aad
in
mov
sbb
std
mov
sbb
test
adc
xchg
ljmp
push
rcrb
out
and
test
jge
mov
or
push
mov
mov
testb
leave
or
xrelease
stc
jecxz
nop
mov
push
ret
add
push
aas
enter
mov
xchg
jne
ss
mov
adc
or
in
push
outsl
jp
push
jg
mov
dec
pop
xor
imull
out
stos
aad
mov
subl
inc
lcall
call
adc
fstpl
add
std
je
bound
pop
shrb
add
addr16
xchg
jnp
inc
gs
inc
xor
push
aad
and
push
or
fsubr
fwait
insl
cld
sbb
ds
aaa
iret
test
test
in
int3
or
add
gs
xor
aam
jmp
and
adc
adc
inc
sbb
xor
dec
add
leave
pop
push
clc
fisubrl
outsl
jle
pop
out
cmp
repz
inc
or
xor
ret
sub
out
dec
ret
xchg
cmpsb
outsl
push
sub
pop
or
push
cmp
and
aam
cli
outsl
xchg
cmp
leave
pusha
and
lret
mov
fwait
shll
fiaddl
add
mov
adc
or
scas
cmpsl
mov
imul
push
leave
jne
xchg
xor
mov
cmp
fs
adc
xchg
test
scas
mov
outsb
cmp
popf
xor
mov
mov
and
push
push
mov
cld
mov
push
in
mov
pop
and
push
dec
jns
cmp
cmpsl
jae
stos
pusha
lahf
push
cs
loopne
in
jecxz
movsb
scas
sbb
and
repnz
or
aam
add
cmp
ret
ja
dec
lods
sbbl
xor
cmp
jae
lret
adc
xacquire
jno
cld
sbb
cmp
vmovaps
jl
sub
or
xchg
xor
inc
mov
dec
es
daa
enter
in
inc
xchg
cmp
out
sub
push
jb
and
cmp
test
out
popw
jg
inc
cld
sbb
outsl
mov
faddl
lock
push
pop
mov
jecxz
hlt
cld
mul
mov
push
push
sbb
pop
fcoms
fstl
cmpsb
add
call
mov
pop
repz
lret
test
cmp
or
setb
mov
lret
mov
loope
sahf
xchg
adcb
ficoml
and
xchg
add
test
stc
push
xor
stc
mov
mov
fnstsw
lea
inc
call
aam
jne
push
add
loopne
sub
cltd
daa
xor
dec
aaa
adc
xchg
lahf
lahf
pop
cmp
push
leavew
jnp
push
mov
sub
aas
mov
leave
cmpsb
push
pop
test
jo
adc
jecxz
leave
inc
lods
mov
scas
repz
ljmp
lcall
inc
and
inc
lds
movsb
pop
lret
scas
xchg
sahf
xor
jl
cmp
clc
dec
in
cmpsl
and
sub
loop
xlat
test
sub
mov
stc
inc
shll
fnstenv
fmull
adc
pop
out
insl
ss
jne
cltd
xchg
loopne
dec
lea
add
clc
inc
in
and
mov
inc
mov
push
inc
scas
inc
and
fcmovu
hlt
test
adc
test
pushf
and
adc
push
mov
stos
adc
ja
mov
sub
mov
jecxz
jp
lds
lea
data16
or
adc
or
jg
ljmp
jno
xor
mov
sbb
sub
faddp
and
sbb
out
mov
mov
mov
dec
xor
mov
aaa
testb
and
movsl
addr16
or
mov
into
mov
out
ficoms
dec
jnp
mov
jmp
mov
inc
ss
mov
mov
ss
xchg
push
push
and
push
push
daa
imul
dec
add
sub
les
and
int
and
mov
pop
push
hlt
push
and
insb
ds
outsl
mov
clc
xchg
jno
lds
mov
xor
fisubs
mov
icebp
xchg
in
sub
or
fldenv
cmp
enter
inc
sbb
adc
dec
test
sti
sbb
dec
pop
es
pop
sti
pop
movlps
ja
cmp
or
pop
sarb
arpl
or
adc
call
lea
ret
les
or
enter
fnstsw
xchg
mov
adc
pop
leave
mov
adc
xchg
sbbl
test
sbb
inc
imul
sbb
fsubrs
dec
mov
lods
xchg
stos
icebp
out
jg
push
push
xor
jb
data16
mov
inc
icebp
xchg
pop
and
and
adc
jbe
outsl
rcrb
xchg
mov
mov
lahf
outsl
imul
orb
fisubrs
lods
lods
sbb
aas
and
fcomi
into
lea
mov
dec
pop
call
adc
ja
jecxz
faddl
shr
add
dec
sub
mov
stos
xor
sub
mov
pop
fistpl
mov
push
xchg
mov
mov
lods
sub
pop
dec
inc
test
mov
div
sti
add
jmp
iret
lods
push
in
filds
mov
xchg
imul
lods
pop
int3
mov
imulb
popa
add
sub
rcl
int3
mov
arpl
fsubs
andl
ljmp
push
int
and
cltd
sbb
sbb
pop
dec
pop
push
pop
shll
pusha
dec
pop
stos
iret
jg
sbb
dec
dec
cld
ret
xchg
pop
push
pop
adc
pop
mov
fwait
pop
into
aad
cltd
xlat
dec
icebp
movsl
pop
in
adc
xchg
pop
mov
xchg
dec
in
xchg
cltd
std
jge
mov
fisubrs
cmp
jo
bndstx
bound
iret
scas
sbb
adc
mov
push
fisubl
dec
inc
xchg
loop
adc
test
js
push
sub
popf
flds
in
aam
push
cmp
and
daa
mov
push
xor
jg
das
bound
loop
jg
fs
xchg
test
out
mov
jg
loopne
hlt
and
imul
push
fdivrs
and
dec
shl
push
jae
or
jp
fidivl
in
mov
and
push
inc
sub
push
or
repnz
lahf
dec
aas
notb
addr16
pusha
cmp
dec
xchg
gs
xor
aam
cmp
ljmp
pop
out
stos
xlat
add
pop
xchg
inc
push
push
sbb
add
pushw
scas
mov
push
fs
and
loop
loope
mov
mov
cmpsb
inc
jg
imul
adc
jns
ja
mov
and
or
bound
jns
iret
inc
adcl
sbb
push
fisubrs
repz
in
xor
xchg
les
mov
mov
jo
xor
mov
pop
je
pop
push
loop
mov
push
mov
xor
adc
cmpsl
cwtl
sarb
lock
nop
in
jl
push
jp
in
cmp
lahf
mov
xchg
and
add
sti
fmull
aam
pop
loopne
cmpsb
cs
fwait
push
repnz
or
jecxz
mov
fsubrl
push
aas
dec
cwtl
and
sub
iret
adc
mov
outsb
pop
icebp
clc
or
cltd
movsl
aaa
mov
clc
inc
stc
and
fisubs
pop
or
mov
mov
cltd
xor
iret
hlt
fldcw
adc
pop
sub
xchg
test
insb
jecxz
mov
xor
dec
inc
sub
add
cld
jg
insb
sub
shl
icebp
adc
cmp
push
and
sbb
cld
jecxz
inc
stc
jne
adc
pusha
adc
sub
loopne
or
mov
stos
shlb
push
dec
mov
cmpsb
das
rcrl
sti
jge
cmp
iret
bound
xchg
jmp
jns
or
outsb
jno
lret
xor
stos
lahf
outsl
add
jo
testl
mov
add
or
scas
test
ret
add
bound
jbe
roll
jge
sbb
call
bound
imul
fs
cld
stos
out
leave
jle
cwtl
popf
imul
add
or
cs
repnz
cmp
shrb
jne
pop
stos
mov
adc
mov
mov
das
lock
xor
loopne
rcrb
mov
xchg
ss
pop
sbb
or
xchg
cmc
mov
ret
mov
dec
pop
sub
push
cmpsb
mov
mov
call
fcoms
lods
cmp
test
mov
out
sahf
adc
jbe
es
pushl
es
scas
and
imul
cwtl
pop
add
mov
dec
lea
pop
sub
mov
test
push
inc
or
inc
push
xor
inc
ss
adc
pushf
cmp
cmc
nop
cmp
xchg
lret
inc
sarl
ja
cmp
add
pop
xor
shlb
cmpsl
std
pop
pusha
int3
mov
pop
mov
mov
shrb
out
rclb
jo
shlb
cmp
int3
ss
fadds
call
or
out
repz
inc
jo
sub
lret
adc
frstpm(287
mov
inc
idivb
cmp
rclb
test
push
xor
push
mov
jmp
aaa
sbb
insl
imul
ljmp
mov
inc
push
sub
cmpsl
sub
pop
or
cmp
loop
fld
adc
push
adc
add
xchg
jo
jge
dec
enter
dec
imul
insb
xchg
std
adc
aad
dec
mov
gs
stos
jge
scas
cltd
mov
sub
jmp
jmp
pop
inc
or
add
stc
shlb
repz
pop
xchg
push
lcall
je
pop
mov
cmp
pushf
fcoms
les
pop
jmp
push
cmpsb
sbb
xchg
out
std
lcall
mov
pushf
dec
or
dec
add
jo
mov
std
mov
pusha
fsubl
stos
mov
adc
sub
stos
pop
sbb
or
dec
or
push
std
jge
addr16
mov
jg
addl
dec
scas
jle
sub
or
and
cmp
popf
push
rol
icebp
mov
dec
sbb
push
mov
mov
call
mov
sarl
enter
imul
adc
shrl
orb
adc
push
sub
dec
rorl
jne
cmp
dec
enter
movsb
bound
push
xchg
popf
aas
xor
loopne
inc
or
ds
sbb
repnz
adc
aaa
xchg
adc
pusha
pushf
ret
call
and
or
lea
jne
test
dec
push
out
jg
int
pusha
mov
hlt
addr16
dec
not
sti
ret
test
pop
mov
icebp
sahf
xchg
imul
iret
aaa
inc
sub
and
push
xchg
push
xlat
pop
imul
jns
lahf
adc
rorb
add
jae
fwait
jg
in
pop
jecxz
mov
mov
push
stos
aaa
jne
pop
xchg
and
xchg
scas
lret
push
jl
in
scas
call
mov
xchg
jg
data16
fisubrs
leave
ret
dec
xchg
testl
pushl
xor
fiadds
aaa
pop
outsb
std
ds
in
popf
std
rcrl
cmp
mov
shrb
aas
lret
inc
push
test
aaa
clc
push
js
fistpl
lahf
stc
push
or
imul
xchg
inc
jg
mov
js
dec
push
sbb
xchg
rcl
pushf
fwait
xlat
movsl
and
xchg
sarb
jle
sbb
xlat
jge
les
push
mov
es
imulb
shl
mov
cltd
fsubrl
push
sub
ss
enter
loope
sbb
ss
xchg
or
or
pop
jl
add
push
lahf
cmp
and
decb
les
sbb
lahf
es
mov
pop
lcall
push
flds
inc
enter
mov
add
sub
movsb
mov
pop
int
mov
mov
lods
adc
push
cs
mov
inc
lahf
mov
test
lods
mov
insb
stc
adc
lcall
mov
repz
imul
mov
pop
insl
pop
fstps
jmp
ljmp
pop
xchg
inc
pusha
mov
pop
push
ss
mov
insl
sbb
add
xchg
mov
sub
and
xchg
pusha
add
sub
fiaddl
outsl
pop
cltd
dec
jnp
jne
les
scas
mov
pop
dec
cmc
sub
enter
fsts
cmc
push
pop
push
xor
shll
leave
cmp
outsb
enter
je
loop
js
jl
dec
loopne
adc
inc
data16
inc
ljmp
dec
push
push
insl
push
or
popa
mov
xor
int3
push
adc
mov
xchg
loope
dec
int
sbb
or
jg
push
mov
dec
gs
pop
xor
add
fdivrs
sbb
sub
loopne
jbe
cmovg
sbb
dec
adc
pop
nop
nop
jecxz
dec
pop
dec
imul
movsb
push
xchg
mov
jp
push
or
sub
mov
stos
lea
add
adc
mov
rcr
inc
fdivs
sbb
shlb
lahf
shll
adc
push
pop
add
mov
pop
sar
pop
inc
cmpsl
lock
es
aaa
das
popf
gs
stos
mov
pop
pop
add
test
mov
pop
xor
rorb
lods
bound
popa
xor
jne
mov
ja
dec
shll
sub
cmp
adc
lea
loop
pop
mov
pop
pop
movsl
popa
mov
das
loopne
enter
pop
rol
ja
sti
shll
mov
repz
pop
outsl
mov
push
sbb
mov
xor
add
mov
inc
cld
inc
fcompl
outsl
fidivs
jne
mov
jbe
and
arpl
mov
in
mov
cltd
ljmp
pop
notb
imul
sbb
cmc
xchg
ljmp
or
bound
inc
ss
cmpsl
lea
add
sub
out
arpl
mov
lcallw
movsl
dec
sub
andb
push
pop
push
fwait
dec
les
or
cmp
mov
inc
mov
jns
loopne
xchg
in
pop
inc
outsb
shll
sti
dec
mov
stos
jne
inc
imul
ja
hlt
xchg
pop
pop
pop
mov
cmc
out
dec
jp
xchg
push
push
adcb
inc
pop
push
mov
lret
scas
daa
repnz
xchg
xchg
push
inc
pop
fstp
sub
rorb
cmpsl
mov
leave
ret
push
cmp
mov
jno
pop
dec
sbb
repz
mov
hlt
pop
into
or
mov
jecxz
jmp
pop
sub
or
cltd
jno
sahf
jno
cwtl
imul
nop
sub
lahf
and
das
adc
push
test
ds
dec
or
push
pop
cmc
jp
imul
xchg
je
test
mov
inc
mov
cmp
pop
push
push
xor
jo
cmp
mov
lahf
enter
or
xchg
xchg
sub
pop
test
mov
or
jbe
and
ja
sbbl
aad
xor
adc
dec
test
lock
adc
cmc
pop
cmc
hlt
sbbl
inc
stc
mov
cmp
or
add
or
jbe
pop
loopne
mov
sahf
mov
frstor
xor
jae
cmc
mov
vmwrite
mov
shl
dec
ss
push
arpl
push
dec
xor
xchg
cmpl
ds
repz
jb
fbstp
and
inc
in
icebp
mov
ja
lahf
hlt
xchg
mov
mov
xor
adc
pop
mov
scas
mov
push
out
xchg
or
lock
push
xchg
jns
mov
lods
inc
inc
jbe
outsb
dec
sub
mov
add
dec
cli
icebp
mov
mov
and
iret
ret
bound
xor
push
mov
pop
mov
cmp
xor
sub
addr16
insl
sbb
push
pushf
push
dec
hlt
stos
lret
lock
pop
sbbl
xchg
xchg
adcl
int
sub
mov
inc
and
jmp
rolb
sti
pushf
xchg
and
mov
int
mov
sub
pop
mov
and
jne
dec
test
cmp
add
ss
adc
adc
js
fadds
je
jae
js
push
sub
icebp
lods
fcompl
outsb
mov
dec
fsubl
nop
mov
movsl
out
ret
dec
ljmp
rcrl
jg
inc
xchg
lea
xchg
in
sbb
add
movsb
gs
dec
stc
mov
hlt
fadds
fsubr
ljmp
arpl
nop
jle
mov
inc
push
cmc
add
lret
jae
xor
cmp
xor
sub
push
inc
mov
and
mov
out
pop
adc
fisubl
cmp
adc
cmp
enter
rcrb
sbb
lds
mov
xchg
xchg
mov
mov
push
in
cld
call
xlat
pop
xor
fsts
or
aaa
push
out
xchg
in
insb
inc
repz
in
xchg
std
pop
mov
pop
mov
hlt
imul
imul
xchg
fcmove
jmp
cmp
test
and
add
jl
mov
cmp
dec
jmp
inc
jbe
int
fs
push
jge
adc
mov
fisttpll
sbb
xor
pop
sti
fimuls
mov
add
fnstsw
clc
dec
jbe
jmp
mov
ljmp
and
scas
movsl
aas
lahf
or
sub
add
pusha
add
pop
negb
dec
into
rorl
adc
and
sbb
cmpsl
testl
cmc
ljmp
mov
mov
dec
inc
icebp
out
xchg
inc
es
dec
lret
fsubl
dec
nop
jp
add
pop
bswap
and
cmp
movsw
ret
fs
out
mov
xor
loope
cltd
insb
bound
or
jno
jno
cmp
fldcw
xlat
jnp
lds
inc
mov
movsl
add
pop
dec
cli
stos
sahf
stc
xchg
aas
notl
call
nop
push
xchg
fldcw
push
in
out
clc
mov
mul
sahf
lret
push
xchg
inc
xchg
mov
jne
incb
out
lcall
mov
jecxz
xlat
xor
sarb
add
jp
add
shl
adc
addr16
pop
mov
and
ss
test
dec
in
ficompl
stos
sbb
pop
jno
mov
jns
mov
emms
aas
mov
or
imul
add
hlt
divl
mov
pushf
sbb
and
loopne
mov
xchg
rcll
and
or
imul
add
dec
rorl
mov
mov
ret
lods
mov
jl
and
js
xchg
adc
pop
xor
add
pop
fisubs
lahf
mov
or
sub
pop
push
xchg
int
cld
mov
cltd
popa
inc
int
sub
imul
mov
rorb
jg
mov
cmp
push
inc
push
xchg
push
outsb
sbb
pop
rcll
out
in
mov
test
pop
or
loope
int
ret
push
icebp
inc
cwtl
sub
push
movsb
iret
cmp
movd
iret
je
in
jnp
or
mov
ss
xchg
pusha
test
imul
int
dec
cs
cmp
out
mov
jmp
lods
mov
insl
out
xchg
mov
les
mov
xchg
std
gs
mov
enter
outsb
fidivl
sarl
add
adc
mov
test
leave
loope
jl
xor
xlat
pop
rcl
push
stos
pop
adc
adc
or
imul
cmp
push
push
cmp
arpl
push
adc
rcrb
dec
test
rorb
jb
je
or
xlat
out
pop
sub
push
int
pop
push
mov
cmp
push
repz
fimull
cmc
sbb
push
stos
mov
ljmp
movsl
shlb
das
pop
int
in
mov
outsb
push
mov
ljmp
neg
xchg
xor
test
arpl
notl
dec
sbb
and
xchg
pop
xor
dec
sub
push
jbe
fsubl
mov
xchg
sahf
sbb
jmp
adc
in
add
ret
ss
std
ds
leave
imul
push
inc
stos
frstor
or
cmp
addr16
cwtl
push
or
insl
stc
mov
sub
stos
sbb
es
pop
movsl
xchg
hlt
dec
sbb
fdivl
xor
jb
cmp
push
nop
cmp
loop
adc
arpl
push
sub
jmp
dec
sbb
or
cmp
jp
adc
dec
or
xchg
and
mov
repz
dec
cli
jo
pop
mov
movd
jge
bound
aas
filds
cmpb
ja
sub
jecxz
pop
out
icebp
jne
rcrb
jne
lret
cltd
lret
outsl
push
pop
mov
xchg
xor
xchg
es
pop
inc
jge
pop
testb
xor
pop
cmpb
inc
sbb
nop
lds
mov
xor
stos
stos
test
rorl
mov
xchg
push
fsubp
adcb
push
inc
or
jb
cmp
or
or
add
neg
in
pop
sub
outsb
push
sti
jns
sub
and
dec
mov
lods
iret
pop
test
pop
idiv
cmc
xor
add
xchg
mov
add
pop
mov
sbb
push
add
mov
sub
dec
shll
lahf
int3
ds
xchg
sub
xchg
push
xchg
add
ss
jne
mov
inc
in
mov
inc
dec
mov
or
cmp
push
push
xchg
out
jns
repnz
xchg
cmp
add
lahf
inc
push
xchg
aam
dec
xchg
mov
lea
push
mov
push
sub
test
imul
repz
testb
lds
fnstenv
xorl
into
popa
pop
sarb
enter
mov
or
xlat
jmp
loope
jbe
leave
pop
rcl
push
iret
pop
mov
mov
mov
mov
cmp
ljmp
andb
add
push
test
cltd
loop
test
lret
das
test
out
fisttpll
adc
dec
mov
jns
pushf
or
stos
out
cmp
mov
mov
sbb
adc
sub
int
xchg
js
pop
sti
and
stc
test
inc
and
stos
add
xor
push
dec
cmp
daa
aaa
lods
test
lcall
insl
pop
sbb
repnz
addr16
out
addr16
jge
ds
stc
jb
shrl
sbb
stos
mov
fistps
add
in
xor
jae
cmp
fstpl
add
mov
sub
insl
push
lcall
aas
lret
jo
xchg
pop
mov
cmc
push
call
jno
sbb
sbb
cld
and
mov
and
mov
gs
adc
ret
jmp
aad
adc
clc
popf
mov
inc
shr
shl
shl
sbb
xchg
pop
mov
js
jo
shlb
sbb
sbb
repnz
dec
repz
jns
out
push
fsubrl
loopne
mov
aaa
ss
cs
xchg
inc
rorl
push
xchg
dec
push
jg
ret
call
das
stc
inc
lds
stc
push
jl
loopne
jae
pop
mov
jg
fstl
loopne
in
sbbl
sbb
leave
insl
dec
xchg
push
push
mov
sub
sarb
dec
xor
das
sbb
mov
ljmp
leave
rcrb
imul
sbb
outsb
orl
int
leave
sbb
xlat
or
xor
leave
and
pop
or
movsl
arpl
jb
outsl
cmp
sar
out
dec
mov
or
data16
call
test
jg
jb
cli
lods
or
orl
jmp
and
iret
xchg
inc
cmp
outsl
dec
fadds
xor
bound
daa
data16
testl
sbb
xorb
stos
xchg
les
cld
pop
and
xor
loop
or
xchg
mov
mov
or
mov
lock
push
xor
xchg
pusha
sbb
idivb
push
inc
adc
call
jb
in
imul
adc
mov
cmp
and
mov
mov
fnstcw
inc
xlat
movsl
movb
sbb
dec
xchg
popf
cli
mov
mov
xchg
fadd
inc
movsl
sti
lret
or
cmp
loope
loopne
test
int3
xor
mov
dec
out
ds
imul
std
stos
rclb
push
mov
mov
jb
mov
mov
popf
sub
insb
shl
fisttpl
xor
test
or
add
je
ljmp
or
ret
add
fistl
sbb
cld
lret
inc
jb
jmp
lahf
add
adc
cmp
mov
aam
imul
inc
stc
stos
sub
mov
fimull
jbe
int3
aam
insl
adc
inc
fwait
dec
out
test
sub
and
test
pop
test
sbb
outsb
rcl
jg
scas
aad
outsb
add
lahf
jecxz
notb
in
mov
add
repnz
sbb
mov
subl
nop
out
inc
in
lea
push
jg
cmpsl
into
mov
test
js
out
in
xor
push
dec
xor
lock
popa
leave
sbb
mov
xchg
jnp
into
imul
imul
cmp
outsb
int3
lcall
mov
repz
test
jmp
nop
aas
push
pop
mov
sbb
adc
sbb
mov
mov
aad
clc
or
mov
jne
push
or
cmp
std
addr16
or
adc
dec
xchg
rcl
jbe
in
dec
mov
and
lahf
ljmp
loopne
cli
scas
and
sbb
test
mov
sub
in
and
push
pop
mov
inc
ds
imul
xchg
mov
ljmp
je
daa
mov
cmp
inc
sbb
xor
cmp
mov
cmp
lcall
cli
clc
xchg
push
mov
pop
stos
mov
ret
notb
or
mov
or
data16
shlb
mov
mov
fsubs
and
dec
sub
push
fsubr
pop
test
lock
inc
fisttpl
cmp
in
and
cld
test
fcmovnb
mov
cmc
push
pop
lret
scas
pop
nop
pop
mov
lret
sub
scas
or
rcrb
lret
out
mov
sbb
push
imul
xor
inc
jns
shrb
sbb
popf
add
jecxz
ja
xchg
loope
lret
pop
adc
insl
hlt
aad
jp
shrl
jns
aas
and
test
ret
jbe
faddp
mov
daa
iret
dec
cmp
jae
lcall
push
or
aam
inc
cmp
xchg
dec
cmpsb
mov
aad
rolb
mov
dec
mov
adc
dec
jae
jecxz
mov
cwtl
movsb
adc
jae
insl
int
mov
pusha
adc
adc
gs
xor
mov
insb
std
inc
rolb
or
sahf
in
push
push
stos
add
jbe
mov
lods
xor
mov
pop
inc
loopne
mov
iret
or
aad
push
dec
and
div
insb
fisubrl
mov
shll
repz
inc
popf
add
add
and
das
sbb
mov
fs
and
xchg
ret
sbb
inc
in
dec
pop
push
hlt
movsl
jae
repnz
outsb
push
mov
imul
stc
popa
mov
sbb
sub
shll
xlat
lret
add
push
cmp
jmp
xor
lods
les
pop
xor
gs
das
movsl
dec
pop
scas
jnp
fs
push
in
mov
xor
sub
add
mov
repnz
mov
cmpsl
jbe
push
dec
shll
push
or
jne
in
movsl
mov
dec
mov
icebp
cs
faddl
data16
fdivl
xor
lods
data16
lahf
inc
sti
xor
dec
out
jge
test
pop
scas
add
push
call
sub
jle
aad
adc
jg
int
pop
inc
mov
pushf
mov
std
mov
leave
pop
sbb
cwtl
rorl
xchg
sbb
or
xlat
or
xchg
nop
mov
xchg
cmc
scas
sahf
fsubl
andl
push
cwtl
sbb
out
roll
cmp
pop
dec
out
dec
push
and
mov
out
fisubl
imul
cmp
dec
insl
js
fnstcw
push
pop
push
cmp
lret
mov
ja
jp
push
cmp
and
sbb
sub
repz
add
cwtl
push
adc
ss
xchg
push
sub
inc
sub
jb
roll
jmp
int
sub
adcl
cmp
adc
cmp
scas
mov
rorl
ret
in
pusha
gs
dec
xchg
repz
sub
sahf
sbb
cmp
out
or
fnsetpm(287
jo
cwtl
mov
inc
and
fstpl
lret
test
xchg
or
movl
aam
push
outsl
mov
mov
jnp
jns
xor
mov
jl
test
popf
cld
push
sub
in
loope
mov
addr16
out
jl
daa
sub
mov
gs
sub
test
cli
add
push
popa
sub
mov
mov
mov
scas
mov
xor
dec
xor
and
mov
int
add
hlt
rcl
aam
call
ljmp
fdivs
xchg
data16
movsl
aaa
push
xor
int
test
stos
sub
scas
jnp
jl
cli
push
inc
les
adc
push
xchg
stc
jo
push
into
pop
xchg
cmp
pop
movsb
mov
inc
mov
lods
fincstp
shlb
mov
pop
lret
jge
push
mov
testb
mov
pop
jns
xchg
sbb
sti
aas
daa
sub
icebp
add
or
stos
clc
arpl
ud1
sbb
cmpsl
mov
shl
pop
mov
add
cmpsb
jecxz
icebp
cli
roll
dec
std
loope
xor
roll
ljmp
iret
loopne
or
xchg
cmp
rorl
frstor
cmp
fcmovnbe
mov
cmp
sub
mov
sbb
in
test
mov
push
mov
dec
outsb
add
jge
stos
fisubs
ss
cs
cwtl
repz
outsl
jge
fsubr
addr16
and
jbe
fcmove
ss
and
int
data16
or
xchg
and
dec
xor
xchg
or
or
mov
xchg
cmovl
dec
cmp
ljmp
test
jecxz
cld
lcall
sbb
mov
int3
mov
lock
movsl
popf
cmp
mov
xor
outsb
repnz
lret
sar
push
mov
sbb
insl
lret
nop
cmp
push
test
nop
cwtl
mov
pop
sbb
mov
xchg
mov
loopne
ss
sahf
jb
in
sub
outsl
call
pop
add
and
cli
cmpl
rorl
es
add
fsubs
jns
sbb
pop
cld
push
bound
sub
test
cmp
outsl
adc
sbb
and
xor
mov
jmpw
fwait
add
jg
loop
pop
inc
jecxz
scas
rcr
or
push
clc
aad
push
sarl
test
ss
sbb
cmp
mov
gs
leave
pop
pop
nop
push
sarl
mov
pop
add
lods
or
adc
cmp
pop
cld
rclb
xchg
mov
leave
adc
int
in
pop
xchg
cwtl
cltd
kunpckbw
xchg
jmp
jecxz
pop
xor
adc
add
aas
push
std
int
ret
repnz
adc
cltd
andl
or
negb
aas
fistpl
cmp
je
xor
in
mov
dec
sbb
rorb
and
push
pop
mov
in
adc
int3
add
pop
or
or
inc
pop
insl
cmpsb
lea
fstpt
push
sti
jle
ds
js
dec
and
mov
push
js
gs
push
stos
scas
sub
sbb
push
lods
das
loope
dec
aam
popf
mov
jp
jl
cmp
xchg
jbe
jb
cmp
inc
add
pop
aaa
jmp
jmp
push
clts
adc
stos
stc
mov
cmp
cmp
dec
outsl
pop
push
push
xchg
hlt
jb
lds
xchg
push
or
mov
dec
xchg
adc
mov
xchg
fdivrp
and
cmpsl
or
pop
dec
sub
sbb
repz
ja
loope
leave
adc
mov
aad
adc
iret
ret
adc
rcrl
dec
int
mov
add
frstor
adc
or
jmp
and
add
sbb
aad
insb
xor
add
mov
mov
xor
cmp
pop
cmp
mov
test
adc
mov
mov
outsl
outsl
xchg
and
outsl
dec
mov
pusha
adc
xorb
stos
iret
popf
dec
je
dec
out
xor
dec
sub
lds
add
mov
mov
push
mov
cs
push
push
ret
pop
dec
xor
cld
mov
push
adc
and
inc
cmp
dec
inc
scas
imul
mov
mov
js
adc
dec
loope
repz
jae
jle
jb
push
ret
les
sti
mov
ficompl
inc
cs
int
cli
jnp
jne
push
pop
test
inc
push
jb
imul
or
out
scas
pop
pop
cmc
sub
inc
cmovbe
popf
cld
js
xor
scas
nop
adc
lods
jns
lahf
hlt
xchg
lods
cmp
pushl
xor
xchg
jl
fiadds
adc
or
loop
popa
popf
pop
repnz
pop
enter
cld
mov
cmp
test
fs
and
icebp
pop
push
mov
aaa
inc
movsb
negl
xorps
ja
jb
jae
or
push
xchg
jo
js
jno
fiadds
pop
xor
mov
sbb
shr
jns
push
test
add
jecxz
xlat
sbb
stos
rorl
mov
pop
decb
les
in
cltd
cmp
repnz
negb
enter
pop
sbb
popa
push
xor
ja
jecxz
xlat
les
dec
xchg
xor
lea
out
and
add
out
xchg
int
pop
js
lcall
enter
xchg
call
xchg
push
rcll
dec
loopne
out
push
rorl
mov
sbb
clc
dec
jnp
cmp
xchg
mov
inc
xchg
stos
adc
jb,pt
adc
inc
xor
mov
test
mov
lret
cmp
fwait
mul
inc
mov
aas
fisubs
cs
fstpt
xor
imul
scas
aaa
xor
dec
push
dec
cpuid
cs
mov
push
int3
mov
ficompl
mov
pop
xchg
mov
cld
push
mov
jle
mov
outsb
scas
aaa
shl
xor
xorb
rorb
out
adc
push
scas
fstl
add
sbb
scas
mov
insl
jle
clc
xchg
dec
jo
icebp
mov
and
in
loope
daa
cmp
ljmp
ja
push
in
and
lock
pushf
sub
loope
hlt
sti
jno
inc
add
jns
fsubrl
mov
test
jo
adc
cmovg
sub
or
lahf
xchg
cmp
push
das
das
xlat
es
jo
push
das
lret
shrb
xor
daa
loopne
std
fnstenv
fldt
sbb
out
scas
jo
test
dec
daa
push
pop
mov
icebp
push
cmp
dec
dec
iret
mov
lock
je
in
jg
fs
inc
push
cmp
iret
call
push
add
arpl
int3
ret
pusha
pop
inc
lahf
sub
pop
scas
cs
xor
sbb
dec
mov
das
test
sub
inc
adc
add
sarb
xchg
fldl
mov
mov
dec
les
ret
js
jge
xchg
adc
push
push
and
out
dec
jne
jg
jp
cmpsb
loope
and
into
xchg
scas
adc
outsl
mov
popa
mov
mov
mov
hlt
pop
rcrl
cmpsl
add
repz
cmp
jns
aam
push
pop
arpl
rcrl
mov
arpl
stos
inc
int
or
sbb
sbb
leave
out
jb
inc
fiadds
je
icebp
adc
adc
jmp
loop
sub
cmp
fucomip
add
jns
cmp
lret
sub
sbb
xor
mov
xchg
sub
push
mov
pop
push
push
cmp
xchg
jp
sub
xor
mov
xor
mov
int
mov
and
cmpl
push
or
cltd
xor
int3
pop
sbb
fcmovnb
into
lods
inc
sub
xor
and
mov
jle
pop
mov
jecxz
sahf
or
mov
sti
mov
and
test
pop
enter
push
push
push
aad
sub
inc
sub
arpl
mov
sbb
ss
dec
daa
ljmp
loope
sbb
xchg
adc
push
cli
inc
xchg
pushf
dec
mov
pop
mov
jnp
pop
adc
mov
xchg
into
cmp
pop
and
push
mov
xchg
or
dec
xor
cmp
cs
aaa
fnstsw
jnp
enter
xchg
mov
xchg
jg
pop
pop
shlb
mov
sbb
xor
push
in
scas
lods
cs
loopne
sub
sub
push
stc
xor
sub
cmpsb
fcmovu
mov
bound
test
jl
fisttpl
mov
mov
in
insb
mov
mov
jo
rorl
iret
push
lea
xchg
lock
call
add
jg
sarb
ret
lds
int3
cmp
or
mov
mov
and
popf
push
mov
movsb
daa
stos
rol
movd
push
push
xchg
mov
aam
xorb
xor
movsl
js
inc
dec
in
mov
or
imul
add
pop
fmuls
xorl
popf
sub
cmpsl
adc
mov
in
scas
test
insl
rorb
in
dec
cli
into
jae
movsl
jae
jb
push
inc
aam
loop
pop
ljmp
mov
inc
and
sahf
pop
jae
imul
add
pop
sarb
in
cmp
xchg
pushf
adc
adc
ds
into
std
and
movb
cld
mov
adc
jg
mov
push
cld
adc
jno
fwait
jecxz
jl
lcall
jbe
leave
xchg
dec
cmp
add
aam
ret
pop
ret
imul
fwait
test
push
in
jno
jno
jmp
adc
testb
mov
cmp
loop
or
cmp
mov
fnstcw
cltd
inc
es
rcr
or
fs
xchg
pop
je
push
mov
push
outsb
lods
and
mov
rclb
getsec
movb
mov
mov
mov
loop
xor
add
mov
cltd
or
jp
addr16
inc
inc
pop
fbld
push
dec
dec
dec
int
jmp
adc
movsb
adc
data16
xchg
mov
sub
dec
dec
pop
lods
push
add
or
inc
xchg
mov
subl
nop
sahf
popf
loope
dec
sbb
inc
cmp
sbb
xchg
and
dec
jnp
pop
sti
pop
pop
and
das
pop
sbb
push
jmp
insl
sbb
mov
dec
andl
ja
fs
jb
xchg
add
and
xchg
call
insl
sub
int
xor
mov
mov
push
inc
jnp
cltd
jbe
inc
or
xorl
adc
pop
jp
flds
push
pop
sti
movsb
arpl
pop
lds
loopne
into
popf
xor
xor
mov
jp
jae
inc
mov
add
add
out
or
jnp
repnz
jns
push
iret
push
sbb
bound
sbbl
shll
add
cld
test
pop
stos
cmc
leave
pushf
fdivr
test
call
xchg
stos
fisubs
mov
movsb
into
sbb
pop
imul
push
or
dec
xor
pop
fisubrs
adc
rcll
shlb
jl
inc
jbe
xor
std
pop
and
mov
das
sbbb
sahf
jge
pop
or
mov
push
push
xchg
popf
xchg
ftst
cs
dec
push
jp
pop
enter
adc
fcomps
inc
jo
xchg
imul
movsb
popa
pop
xchg
aas
das
mov
xchg
shrb
push
imul
jnp
aas
sbb
push
sub
sarl
jmp
movb
pop
pop
add
mov
sub
in
lea
inc
ret
dec
sbb
popf
in
adc
pop
addr16
mov
cmp
das
pop
fsts
add
push
push
aad
dec
repz
mov
pop
sbbl
sub
sbb
cmp
cmc
cmpsl
push
int3
xor
jne
push
jg
push
test
xlat
dec
add
jg
cmp
jge
loop
scas
pop
vpandn
enter
adc
das
sbb
cmc
out
pop
add
nop
sub
lcall
pushf
and
out
pop
dec
aas
mov
inc
push
scas
iret
icebp
adc
fdiv
inc
subl
repz
int
xchg
mov
inc
sub
cmpsb
mov
lea
bsr
dec
mov
fdivr
inc
push
inc
mov
xor
dec
sub
mov
xchg
rcrb
jg
xor
mov
xlat
popa
inc
cmp
cwtl
push
or
or
dec
sarb
outsb
push
in
mov
iret
scas
testl
mov
jns
inc
add
scas
jmp
xchg
movsb
out
data16
xor
mov
in
in
daa
dec
push
jnp
mov
filds
loope
lods
shll
ds
int3
mov
or
cmp
jge
repz
aas
cld
ljmp
daa
xor
lret
addb
stos
shll
call
cld
div
cwtl
push
mov
roll
or
cmp
lahf
mov
cli
les
add
adc
push
out
and
sub
adc
sti
xchg
jp
mov
cmpsl
cmp
shll
stc
fwait
insb
enter
add
pop
sbb
xor
cmp
aad
js
add
popf
and
loop
xchg
mov
out
popf
outsl
pop
pop
jns
jle
shrb
jno
test
fs
fdivs
mov
sub
pushf
mov
sub
lods
cld
pop
mov
out
shlb
pop
gs
gs
aad
out
sub
dec
iret
dec
dec
or
addr16
mov
adc
in
pop
mov
xchg
rolb
nop
jnp
push
add
movsl
dec
adc
nop
add
hlt
push
stos
cmc
or
xchg
mov
or
lahf
sbb
scas
jns
pop
aaa
dec
imul
sub
insl
bound
adc
insl
or
mov
icebp
mov
mov
enter
xchg
subb
lret
mov
cs
lret
cmp
std
cmp
sbb
out
push
ds
sbb
jbe
out
cmpsl
mov
iret
sbb
popf
or
in
fstps
stos
insb
sub
or
enter
xchg
nop
mov
fstp
or
std
stc
shrl
ds
mov
int
scas
mov
cmp
mov
outsb
insl
sti
pop
mov
xor
or
mov
loope
mov
add
daa
mov
jae
not
add
mov
push
scas
jmp
scas
jmp
add
lods
test
push
jmp
int3
adc
lahf
inc
jl
mov
dec
jo
mov
mov
scas
shrb
xchg
filds
sbb
cmp
in
or
xlat
lret
mov
jp
jg
dec
mov
in
push
jmp
mov
mov
dec
cld
mov
push
fsts
addl
rcll
adc
inc
rcr
pop
and
int3
shll
loopne
mov
push
mov
inc
outsl
push
inc
mov
mov
in
and
adc
sahf
out
ds
out
ret
jmp
mov
mov
sub
icebp
movsb
insb
shrl
or
xchg
icebp
out
jno
and
out
push
xchg
mov
test
cmp
or
mov
adc
mov
bndldx
adcl
ficompl
xchg
pop
add
cmpsl
cmp
sub
xor
and
jp
neg
cmp
cli
cmpsb
mov
mov
push
mov
ret
sti
je
and
jae
jg
push
lods
enter
pop
es
sub
bts
fwait
imul
fmul
add
jge
insb
push
sti
loop
sub
cmp
lret
jp
pushf
xor
hlt
and
adc
adc
cmpsl
cmp
lret
dec
cmpsb
mov
shlb
mov
les
loope
insl
dec
or
or
ljmp
ficoms
into
cmp
inc
out
testb
addr16
xchg
into
sbb
icebp
leave
or
or
shl
pop
cwtl
push
test
or
int3
dec
in
repz
aad
dec
sub
arpl
mov
xor
mov
cmp
xchg
mov
push
pop
xor
mov
adc
mov
dec
shll
xor
sbb
aaa
mov
sub
push
int3
sbbl
pop
repz
movsb
mov
ljmp
jae
jmp
xchg
fildll
shl
pop
insl
sbb
inc
jnp
xchg
lret
fwait
adc
arpl
xchg
lret
popa
popf
shll
dec
lret
outsb
cmpsl
mov
adc
je
arpl
cmpsb
push
pusha
clc
inc
xor
or
mov
adc
jle
mov
mov
xlat
sub
push
or
lods
mov
test
into
xchg
xor
icebp
iret
sub
push
sbbl
dec
cli
cmp
sbb
or
xlat
jecxz
in
mov
stc
addr16
dec
mov
and
pop
enter
out
loope
repnz
mov
pushf
call
sbb
arpl
frstor
lods
jo
fisttpl
out
dec
ss
jo
mov
adc
xor
push
push
xor
jne
mov
mov
outsl
loop
sub
sahf
jge
mov
pop
jge
push
shrb
scas
inc
xor
inc
dec
xor
pop
push
test
fs
cmpl
int
mov
in
push
push
mov
dec
addl
jp
pop
out
sbb
pop
cs
mov
inc
mov
or
pop
jo
mov
sbb
mov
cmc
pop
imull
enter
push
out
rorl
lock
std
add
andl
stos
mov
push
or
push
stc
jmp
and
jle
adc
insl
sbb
mov
adc
push
shlb
leave
xchg
jg
jne
xor
adc
mov
into
push
fldt
popl
enter
mov
pop
int
leave
cmpsl
add
fstp
in
jne
cmp
cmp
js
bswap
mov
pextrw
gs
add
or
ljmp
icebp
mov
gs
jo
push
repz
rorb
hlt
mov
mov
push
inc
jmp
xchg
icebp
sar
push
inc
mov
or
jnp
xor
mov
inc
ljmp
sarb
xchg
fisubs
sub
mov
aas
xor
inc
cmp
dec
ret
cmp
lret
rolb
xor
jmp
stos
sub
sub
les
push
or
in
lret
stos
out
mov
jns
scas
or
mov
repnz
jl
push
mov
mov
cmp
cmp
in
das
mov
push
ret
bnd
sub
sbb
or
repz
mov
mov
dec
int
test
mov
fs
mov
outsb
aad
pop
mov
and
jp
jle
pop
ljmp
insb
js
lret
push
js
adc
movsl
pop
adc
xor
fisttpl
movsb
or
rcll
push
sbb
fcmovnb
ficoml
lahf
mov
out
push
cmp
loope
push
inc
sub
sub
inc
add
lcall
push
shlb
inc
cmp
int
popa
add
or
sbb
lea
push
cmpsb
pop
cmpsl
add
gs
insb
popa
inc
mov
xchg
les
inc
pushf
shl
xchg
add
notl
rcll
push
xchg
mov
mov
movsb
repnz
pop
sub
out
mov
fists
pop
loope
enter
das
ret
xchg
fbstp
test
push
jbe
mov
aaa
sbb
xchg
cmpsl
and
add
hlt
sahf
scas
push
mov
lahf
ds
lods
cld
sub
call
pop
enter
jno
stos
fsubr
pop
insl
inc
loope
js
xor
push
pop
nop
cli
inc
jp
push
jge
jo
inc
jns
loop
push
shlb
ljmp
push
lock
in
jo
out
int3
pushf
xor
leave
dec
push
cwtl
call
jns
lods
dec
and
jg
ror
push
adcl
push
fidivl
jae
inc
movsb
loopne
and
arpl
xor
shlb
jmp
xchg
and
mov
mov
lahf
adc
sti
hlt
xor
or
xor
mov
insl
xor
mov
aaa
and
ds
int3
into
xorb
mov
cltd
call
lret
fistpll
sbb
lods
repz
xor
outsb
hlt
test
js
int
in
and
mov
test
shrb
enter
xchg
shr
das
out
jg
inc
ret
jae
negb
mov
mov
pop
fs
push
rorl
in
xchg
xchg
je
bound
xor
loopne
xchg
out
lret
and
fwait
cmc
add
mov
inc
mov
mov
add
jo
sbb
scas
or
xchg
sti
dec
mov
push
pop
lods
int3
loope
push
hlt
out
jns
mov
adc
adc
js
in
int
mov
adc
push
loope
mov
sub
cmp
or
xor
insl
sub
pop
jg
sar
aaa
xchg
pop
popf
jo
jg
jl
popa
inc
jle
out
in
inc
aas
sahf
push
int
in
inc
jo
cmpsb
sub
int
jb
and
test
cmp
fnstsw
loopne
dec
add
dec
das
pop
out
pop
ja
sub
scas
push
dec
pop
mulps
cwtl
adc
pop
xchg
and
sub
ljmp
mov
movsl
jmp
or
dec
iret
divl
sbb
cmp
mov
mov
adc
jnp
icebp
mov
or
mov
dec
mov
jle
aaa
lods
sub
xor
in
mov
rol
lods
cmpsw
mov
out
sbb
ret
xchg
fildll
jae
out
aaa
inc
mov
sarl
into
ret
iret
and
sbbl
aad
jmp
jg
xor
mov
sarb
mov
add
subl
lock
lock
fidivl
lret
add
notb
pop
movsb
adc
cmp
jge
xchg
sbb
movsb
insb
std
dec
jnp
and
lahf
addl
jns
mov
xchg
mov
out
mov
testl
rcll
cmpsl
ret
andl
inc
mov
sub
sbb
jg
repnz
lret
mov
fwait
mov
or
je
mov
mov
enter
cmp
jo
push
and
popf
and
int
adc
push
enter
jne
jecxz
bound
pop
adc
pop
xor
dec
inc
pop
inc
pop
icebp
jmp
int3
popf
pop
sahf
or
out
leave
sbb
push
cwtl
add
repnz
gs
sub
sbb
inc
cmp
dec
jp
dec
jp
ds
stos
aas
xor
dec
and
jg
pop
shll
cli
inc
sub
call
mov
sbb
les
add
and
and
sbb
lock
push
xchg
mov
lods
pop
in
push
outsb
rorl
mov
fs
dec
or
lds
mov
pop
arpl
jle
sarl
movsl
test
enter
js
clc
cli
stc
imul
inc
mov
add
and
jp
mov
xor
sbb
and
jnp
dec
lahf
inc
popa
sub
test
mov
dec
das
add
cwtl
fisttpl
or
mov
pop
mov
mov
sub
sbb
xlat
add
inc
pop
movsb
jb
imul
hlt
sbbb
jecxz
daa
mov
mov
iret
lcall
jns
mov
mov
daa
out
ficomps
roll
cmp
ss
sbb
cmp
sbb
adc
or
push
fnstcw
or
fdivl
adc
add
stos
in
or
insl
pop
mov
push
fisubrs
lods
pop
sbb
aas
mov
fnstsw
inc
pushf
or
into
movsb
iret
push
mov
add
add
push
xor
add
in
pushaw
xor
jecxz
sahf
cmpsb
and
js
push
call
cltd
mov
cmp
inc
cmp
mov
mov
aam
in
bound
cmp
dec
incb
inc
nop
inc
nop
stc
mov
aam
leave
adc
call
dec
aad
enter
inc
sub
pusha
jge
add
mov
push
adc
aam
jnp
mov
imul
inc
jo
mov
cmc
pop
das
sarl
addl
adc
sbb
cmc
into
xchg
sti
cmpb
ss
leave
fidivs
mov
jae
loopne
movsl
icebp
xchg
xchg
mov
lock
repz
lret
jge
xchg
and
and
mov
fidivl
addr16
in
xor
movb
jge
or
rorl
mov
arpl
hlt
push
and
sbb
or
lea
add
in
pusha
data16
mov
dec
push
dec
jle
test
popf
mov
fnstsw
mov
xchg
cs
inc
fs
idivl
cmp
xchg
xor
push
or
xlat
ljmp
movsw
pop
cmp
call
pop
mov
mov
fwait
dec
je
repz
lock
xor
sahf
sbb
pop
cld
lea
mov
in
ljmp
pop
inc
sub
std
lret
pop
pop
ja
pop
das
mov
or
repnz
push
xchg
pop
lods
mov
sub
stc
and
and
jo
sbb
push
xor
push
cs
pop
js
movsl
fcomp
push
mov
fsubr
push
fwait
cmpsl
jl
popf
xor
or
mov
xchg
lahf
in
test
pop
gs
xchg
pop
out
adc
mov
dec
pop
inc
lmsw
aad
mov
sbb
jge
ss
adc
inc
pop
iret
addr16
pop
xchg
hlt
fildl
iret
mov
push
xchg
adc
sub
js
push
inc
xchg
push
sbbl
cld
jle
adc
dec
jbe
xchg
pop
pop
mov
and
add
pop
or
jecxz
fstps
fistl
and
cmpsb
in
jp
out
push
sub
mov
adc
xor
test
test
jbe
nop
lret
sahf
addl
cmc
js
jp
xchg
outsl
stos
dec
push
popa
xor
shl
mov
or
sbb
xlat
mov
jns
jge
mov
call
add
loope
pop
repz
scas
pop
jbe
inc
testb
sub
leave
movsb
mov
sbb
jbe
ret
xlat
mov
jae
lahf
enter
mov
jge
leave
fistl
mov
in
sub
add
push
inc
inc
aad
movsl
vcomisd
mov
aad
inc
push
fs
mulb
clc
je
scas
pusha
ffree
sub
push
je
movsl
adc
pop
hlt
push
loopne
test
sbb
adc
mov
test
std
ffreep
les
loopne
push
mov
mov
cmp
mov
xor
cld
sbb
pop
ljmp
add
icebp
xchg
mov
pop
xchg
mov
ds
addr16
cmp
pop
mov
and
aam
dec
aam
call
mov
stc
pop
outsl
xchg
pop
add
mov
push
ficoml
inc
shll
jno
lea
mov
and
mov
sub
dec
cmp
sbb
decl
jno
cmp
das
popf
rorb
in
lret
fld
outsl
in
jg
sbb
hlt
fstp
xor
push
das
sub
rcll
cwtl
frstor
incb
cld
insb
xchg
fsubs
aad
push
js
add
xchg
sub
xchg
inc
shrb
inc
fwait
insl
dec
adc
fnstenv
inc
lret
pop
mov
cmp
mov
dec
push
or
or
scas
cmp
test
mov
jmp
nop
fs
add
outsl
mov
js
lahf
pop
ret
stos
push
and
adc
shrb
shlb
lods
cmc
shlb
add
xor
jne
push
sbb
dec
mov
sub
xor
pop
in
pop
inc
cld
cmpb
jg
adc
rcrb
or
repz
pop
mov
sbb
pop
cmpl
lds
mov
jg
jno
mov
adc
add
sub
jg
hlt
cmp
popa
push
mov
push
mov
mov
stos
rcll
test
fildl
icebp
outsl
or
sbb
andl
ret
iret
inc
mov
imul
icebp
cmc
dec
ficompl
push
cld
sub
inc
lea
int3
pop
or
sbb
xchg
adc
pop
out
dec
push
fsubrp
adc
lea
ret
mov
xor
imul
mov
test
cmp
mov
punpckhdq
lods
push
jge
or
jns
nop
shrb
scas
rorl
insb
xchg
jnp
xor
sti
push
test
decl
sub
jle
pop
loop
cmc
sbb
cmp
push
sub
fucom
or
jl
mov
pop
mov
cmp
pusha
sti
lods
push
or
adc
sbb
sub
outsl
adc
cmpsl
das
incb
rcll
xchg
rcl
jne
and
lds
loop
fistpll
jmp
mov
jge
icebp
inc
sub
mov
pop
imul
cmp
sbb
std
cmp
rorl
stos
pushf
das
movsb
dec
ja
es
fldenv
aas
lods
dec
addps
loopne
inc
xchg
rcrl
in
xor
hlt
jnp
mov
mov
das
or
mov
cmc
xchg
mov
jle
std
mov
das
pop
push
daa
cmc
mov
dec
push
js
push
addb
inc
push
mov
cmp
inc
xor
dec
repz
cs
notb
insl
mov
jecxz
jae
mov
cmpsl
mov
jae
or
and
xchg
jno
es
mov
add
add
sbb
mov
pusha
xchg
jb
call
xchg
ficompl
cwtl
mov
cmp
pop
shll
sbb
mov
out
adc
icebp
imul
ljmp
adc
jg
cld
sbb
xchg
jge
iret
mov
push
imul
push
xchg
push
out
cmp
jnp
sub
sub
xor
mov
dec
icebp
stos
mov
push
sarl
mov
shrb
mov
push
pop
mov
cwtl
mov
add
sti
sub
dec
pop
jo
imul
das
add
stos
mov
lock
push
mov
jg
fsts
mov
push
fsts
pop
lods
inc
sub
mov
sbb
add
popf
imul
xchg
mov
add
mov
pop
mov
inc
scas
sub
fisttpl
add
cmpb
xchg
push
aam
add
xchg
faddl
fdivl
pushf
ror
sbb
stos
push
aaa
call
mov
fistpl
add
aaa
add
inc
mov
call
jae
sbb
sbb
test
ss
pop
aas
mov
fs
push
jns
bound
and
jne
xor
lret
and
hlt
sbb
inc
push
in
addr16
orl
imul
pop
lock
xchg
hlt
shrl
in
ficoms
mov
ret
sub
out
cmp
xor
cmp
mov
lds
fists
icebp
cmpsl
les
sbb
jno
add
test
fidivl
mov
in
cmc
sbb
push
and
xchg
dec
add
lahf
adc
movsb
adc
push
cmp
add
cs
pushf
push
or
iret
adc
cld
fsts
jnp
movsl
mov
and
les
xchg
and
outsb
and
fmul
movsl
in
in
js
fs
mov
dec
rorl
fiaddl
or
out
sbb
inc
pop
les
outsl
pop
imul
aaa
mov
mov
xlat
xchg
xchg
inc
or
pusha
mov
ret
in
stos
mov
mov
mov
lret
decb
repz
lods
inc
mov
cs
xchg
jne
xchg
aaa
pop
das
jecxz
mov
js
push
mull
imull
dec
adc
scas
add
adc
aas
cmp
or
mov
mov
mov
add
test
jo
shl
lret
pushf
add
push
jmp
adc
sarl
into
jno
and
push
cmc
push
dec
in
add
daa
mov
mov
add
hlt
pop
sbb
int3
sbb
jno
fucomp
andl
or
in
push
cmp
mov
lea
jb
mov
jb
push
mov
pop
or
aaa
bnd
pop
ja
dec
jg
int
xchg
out
cs
xchg
and
and
std
les
negb
fs
sbb
push
push
scas
decb
loop
xor
jae
addr16
ds
scas
or
sub
sbb
xor
adc
jecxz
xchg
fcmovu
push
cmp
in
cmp
cmp
lcall
mov
mov
scas
popl
shll
hlt
xlat
push
sti
idivl
into
inc
mov
xor
pop
inc
xchg
push
lea
mov
lods
mulb
shll
inc
data16
jno
pop
dec
xlat
test
loope
dec
sbb
lret
nop
test
test
push
adc
sub
and
cmc
mov
stos
cmc
in
add
pop
xlat
insl
jae
and
scas
pop
sbb
sub
dec
add
cmpl
rorb
add
xor
xor
inc
sbb
in
xor
cltd
iret
push
add
add
loopne
cmp
sbb
in
scas
imul
mov
xor
and
popf
faddp
cli
pop
fstps
insb
adcb
jnp
test
pusha
xchg
mov
adc
inc
int
or
cmc
lret
sub
xorl
out
vmread
mov
popf
push
mov
sbbb
fstpl
arpl
sarl
cmpsl
ret
push
push
mov
cmp
adcb
cmpsl
pushf
movsl
loope
sub
sbb
jbe
jmp
dec
cltd
mov
xchg
adc
jecxz
mov
adcb
or
sub
lahf
cmp
add
hlt
push
sub
pop
xor
rorb
pand
outsb
pusha
in
je
sahf
jecxz
lahf
out
jbe
es
fs
hlt
out
xchg
mov
jecxz
mov
movsb
test
pop
dec
xor
jle
std
pop
imul
arpl
arpl
xchg
mov
cmp
xor
loope
adcb
xchg
fidivrl
in
ret
shlb
popf
adc
xor
mov
outsb
jns
xchg
pop
jne
sbb
jns
mov
and
ljmp
lret
lds
xor
add
pop
das
fsubrp
push
daa
sub
shlb
add
pop
sub
int
cmp
loope
out
icebp
cld
xchg
pop
popa
cld
xor
xchg
sti
jecxz
lret
add
fisubrl
pop
jecxz
lods
pop
sub
rcr
add
mov
pop
add
mov
nop
fucomi
fwait
cmp
popa
jl
repnz
inc
jle
or
xchg
adc
in
pop
push
pop
in
cwtl
lahf
dec
loop
mov
cmc
gs
fnstenv
jecxz
insl
jp
adc
sub
cmp
les
rolb
jns
sub
xorb
dec
das
ret
or
jo
jno
cmp
mov
inc
cmc
nop
cli
inc
and
in
mov
xor
mov
movsb
lods
adc
mov
inc
pop
out
mov
pop
stos
push
pushf
mov
pop
and
jmp
outsl
or
sbb
cmp
fucomp
jnp
mov
inc
push
daa
rcrl
adc
sub
subb
jno
cmp
sahf
ret
mov
pusha
cmp
imulb
inc
shlb
stos
mov
jbe
push
adc
int3
popf
ret
movsb
adc
lahf
int
push
cmpsb
das
arpl
enter
add
push
outsw
sbb
sbb
es
dec
in
push
jb
mov
jge
in
mov
jp
pop
iret
adc
negb
cmp
insb
xlat
add
xor
int
cmp
ret
add
insl
movsbl
mov
int
ret
jp
jp
add
sbb
std
mov
mov
mov
fidivrs
pop
mov
mov
sub
jmp
mov
inc
or
add
out
sbb
mov
cld
cmc
push
cmp
cmp
cld
adc
outsb
rclb
ss
jecxz
fwait
bndstx
aaa
ficoms
mov
inc
dec
mov
lret
pop
insb
inc
pop
ljmp
lods
das
je
mov
arpl
xchg
popa
rdmsr
ret
ret
daa
pop
hlt
xchg
mov
stc
roll
push
fldl
or
and
and
and
fldl
jne
jl
arpl
test
and
adc
dec
xchg
lahf
add
xchg
push
mov
into
outsl
mov
ret
iret
cvtpi2ps
add
leave
fcomp
enter
fdivs
ficoms
mov
push
loop
and
movq
mov
shll
lahf
cmp
in
push
mov
mov
pop
cmp
jmp
jp
inc
mov
arpl
test
movsl
push
push
mov
push
sub
xchg
xchg
scas
loopne
es
push
adc
cltd
imul
test
rclb
jmp
or
sub
sbb
mov
adc
fucom
mov
rolb
ret
mov
cmp
ja
es
ds
rcll
xorb
stc
cmc
call
repnz
aam
and
iret
pushf
fstpl
test
ret
mov
cmp
sub
dec
cwtl
enter
fsubrl
mov
jnp
adc
fs
shl
fnstsw
adc
mov
mov
sbb
leave
inc
loope
cwtl
adc
imul
test
push
mov
or
imul
pop
or
jp
aam
in
pop
div
stos
dec
jp
push
pop
xor
xor
out
subb
pop
stos
in
mov
xchg
mov
outsb
mov
sbb
push
jae
push
adc
lds
adc
and
es
loopne
nop
rclb
sbb
push
nop
jns
cmc
jmp
scas
lahf
sarb
mov
test
jne
ret
ja
xchg
lods
lcall
jp
cmp
cmpsb
cwtl
aaa
rcl
mov
sbb
push
aas
out
sub
xor
and
stc
mov
inc
js
add
dec
jmp
mov
xorl
js
push
pop
das
lcall
mov
cmpsb
loop
mov
sub
lea
enter
push
pusha
ret
adc
jmp
imul
out
shlb
lods
mov
sub
xor
data16
jp
stos
in
jae
repz
out
cmc
cmovg
jl
sub
addr16
adc
mov
sti
xchg
push
pmaxsw
mov
mov
repnz
fcompl
pop
and
aad
rclb
popa
inc
mov
sti
and
sahf
std
sbb
mov
inc
loop
nop
add
hlt
sub
clc
repz
out
xchg
cwtl
inc
xchg
testb
dec
push
push
sahf
arpl
jp
mov
call
ljmp
fwait
mov
fldl
inc
pop
popl
and
push
pop
pushf
insb
in
inc
lret
jno
stos
movsl
add
dec
adc
adc
or
jo
push
repz
inc
movsb
ret
mov
out
data16
das
push
inc
cmc
ret
fildll
cmp
mov
sub
fadd
jo
xchg
and
rorl
fisttps
leave
rol
sub
xchg
in
arpl
cmpsb
subb
inc
add
xchg
dec
push
xchg
jp
out
jmp
add
xchg
push
mov
mov
sbb
lcall
fidivrl
jl
adc
lret
into
dec
mov
jmp
cs
sar
in
into
cmp
xchg
fadd
dec
int
inc
pop
es
fwait
shr
sbb
pushf
aas
sarb
aaa
test
pop
outsb
mov
pop
pop
push
test
nop
push
out
outsb
dec
adc
cmp
mov
inc
loopne
lods
xchg
inc
pop
mov
add
test
xor
pop
stos
js
stc
stc
inc
data16
shll
jmp
pop
cmp
rsm
mov
pop
dec
cs
jnp
int3
inc
adc
inc
iret
std
das
sub
xor
mov
popf
cld
jbe
int
adc
fildl
int3
mov
pushf
mov
aas
pop
and
mov
es
pusha
pop
test
js
movsl
jo
push
shlb
gs
jle
cmc
lcall
pop
dec
jp
push
push
rcll
or
clc
and
repz
test
xchg
fimull
outsb
mov
sub
out
scas
mov
xor
or
xor
xchg
push
sub
inc
cmp
rcll
pop
and
sub
pop
or
mov
call
jne
mov
repz
repz
subb
hlt
mov
xchg
inc
xchg
pop
das
xor
test
sbbl
fs
sub
lock
push
cmpsb
test
sub
dec
test
push
mov
mov
bnd
clc
adc
das
sub
frstor
dec
pushf
notl
test
add
arpl
cld
test
loope
inc
filds
inc
pmulhw
rcrl
xchg
inc
fdivrs
jecxz
add
mov
pop
aas
mov
in
and
add
dec
inc
outsl
dec
cmpsl
shll
lret
add
test
sub
xor
cmp
sahf
daa
lods
enter
sbb
lret
daa
add
inc
and
call
test
mov
mov
outsl
jnp
out
aad
scas
mov
test
rep
frstor
and
mov
xchg
cmc
push
repnz
mov
mov
iret
cmp
add
mov
loopne
call
daa
adc
sbb
sbb
sti
mov
inc
sub
faddl
dec
sub
push
loop
rcrb
pop
pusha
int
es
mov
loope
scas
or
mov
jl
es
pop
cmp
rorb
add
vpmacsww
fwait
mov
inc
jo
and
notb
sbb
sarl
xchg
push
jo
into
daa
fdivrl
rcr
mov
cld
rclb
fistps
mov
pop
mov
sbb
icebp
pop
xchg
adc
movsb
scas
rclb
ret
loop
push
bound
cmp
lret
in
notb
pop
popf
adc
cld
mov
fstl
ss
sbb
adc
cld
pop
repnz
xlat
stc
je
ret
fistpl
cmp
inc
xchg
pop
sub
sti
popa
shlb
fisubrl
xor
jb
mov
or
in
xchg
xchg
daa
insb
lea
ljmp
daa
push
pop
pop
mov
shl
jo
sub
sub
fnstcw
lcall
pop
and
shl
inc
mov
cltd
adc
sbb
adc
roll
or
repz
rcrb
scas
bound
lcall
sahf
fiaddl
pop
mov
dec
pop
fwait
jp,pn
frstor
movsl
jno
fdivs
jp
fsubl
mov
negb
mov
ljmp
push
inc
jecxz
inc
mov
scas
dec
loop
adc
enter
popa
pop
mov
in
stc
lods
inc
rcl
frstor
push
je
out
cmp
fiadds
stos
cli
jp
cmp
or
and
cmp
and
fidivrs
ret
xchg
push
or
cmp
jp
ss
fnstsw
sub
inc
into
sarl
repz
cmp
js
rcrb
inc
repnz
ret
push
cmp
pusha
mov
add
and
xchg
mov
icebp
dec
mulb
and
push
sub
cli
aam
sub
test
mov
jo
stos
push
jle
adc
mov
sub
push
push
jecxz
xchg
fimuls
mov
jmp
mov
cltd
or
jae
sbb
fwait
scas
push
cld
ror
pop
push
ret
imul
in
out
cli
push
dec
je
jge
scas
repz
push
dec
aad
and
inc
mov
or
in
icebp
cmp
daa
push
or
push
jae
dec
inc
push
ljmp
jle
aam
fimuls
jge
push
add
sbb
xchg
scas
jp
pop
gs
aas
adc
xor
das
inc
test
xchg
mov
ss
sbb
daa
cld
add
pop
sbb
pusha
push
aad
sbbl
repnz
jbe
push
fisttpll
mov
pop
ss
movsl
jnp
ss
sub
sar
push
notl
sbb
lods
push
addr16
loop
xor
in
shll
and
xor
inc
psllq
pop
movsb
daa
mov
xchg
imul
or
mov
mov
and
loope
pop
jmp
jp
push
inc
outsb
xchg
lds
lcall
mov
bound
mov
pop
lea
arpl
xor
scas
jnp
enter
adc
adc
out
mov
sub
mov
gs
pop
and
xor
jns
loop
lea
std
data16
pusha
lds
aad
cltd
pop
xor
mov
sbb
and
mov
push
out
xor
jecxz
mov
ret
fwait
lcall
popf
adc
hlt
sbb
loopne
insl
jl
addr16
lods
push
jnp
inc
mov
pop
cmp
pop
lret
adcl
int3
lock
or
gs
and
sbb
pop
dec
inc
push
pop
loope
sbb
and
sub
fdivs
hlt
jbe
xor
pushf
push
arpl
inc
inc
lahf
idivb
cmpsb
leave
xchg
mov
adc
inc
loope
repnz
push
xlat
leave
decl
mov
loop
xchg
add
mov
repnz
aad
in
push
clc
pop
fstpt
out
fnstcw
jno
stc
iret
cmp
mov
cs
push
stos
fsub
mov
fst
sti
push
sub
in
shlb
test
lea
out
imul
xchg
shr
adc
iret
fdivrl
inc
dec
pushf
push
jbe
ds
mov
iret
and
inc
add
cmp
push
mov
pop
stc
fists
push
xchg
inc
cmc
adc
pop
imul
push
daa
mov
sub
leave
add
jo
cmp
outsl
pop
rcrl
lock
pop
repnz
decl
sbb
mov
fdiv
js
faddl
mov
and
push
repnz
dec
int3
adcl
and
mov
xchg
mov
out
das
popa
inc
shl
xor
cmp
adc
incb
mov
jnp
int
pop
cmp
cmp
jb
push
stos
flds
sbb
sbb
add
into
or
lds
sub
sub
jno
pop
or
aam
daa
lods
cld
popa
xor
push
adc
scas
and
inc
dec
jo
xorb
scas
pop
gs
faddl
pusha
mov
mov
pop
int3
test
or
and
std
adc
xorl
xchg
sbbl
lods
sub
mov
fcmovb
hlt
movsb
decb
mov
fcompl
fldl2e
sub
into
and
rcll
mov
shll
pop
xlat
pop
inc
jle
add
pop
lret
shrb
cmpsb
jns
push
push
jne
jmp
mov
mov
push
mov
rclb
pop
pop
scas
xorb
inc
leave
xchg
loop
movsl
rcr
je
jb
sbb
adc
mov
popf
aaa
dec
inc
icebp
cmc
shll
or
jb
das
popf
inc
std
orb
hlt
cmpsb
push
sbb
mov
xor
jl
scas
jne
cmpb
adc
xchg
and
bound
cmp
mov
data16
stos
nop
lcall
out
stc
mov
test
shll
fwait
push
cmpsb
dec
dec
clc
inc
cmp
sbb
jl
mov
imul
popa
xlat
das
mov
push
or
cmp
sub
jecxz
mov
push
insb
xor
xchg
mov
testl
add
pmullw
repnz
push
dec
jp
pusha
lret
mov
mov
daa
loopne
ss
sbb
movsl
enter
lods
mov
fidivs
lea
fxch
and
mov
add
adc
subb
int
pushf
and
imul
repnz
stc
jl
xchg
xchg
cmp
sub
sti
dec
pop
push
mov
call
pop
rolb
dec
sub
mov
sbb
mov
add
pop
das
pop
inc
dec
aam
xor
pushw
push
push
xchg
lea
jns
fiadds
shlb
repz
lcall
loopne
and
ss
out
jge
sbb
mov
fwait
xchg
cmp
bound
dec
push
xchg
and
xchg
es
ja
loop
repnz
fmull
loope
pop
add
jnp
push
lea
shll
xlat
inc
loopne
addr16
adc
sti
push
adc
push
pop
adc
xchg
gs
insb
push
int3
fisubl
xchg
adc
lods
test
inc
dec
add
ja
add
xorl
jns
push
dec
push
sti
rcl
mov
sub
repnz
inc
xchg
das
push
pop
mov
aad
int3
stos
hlt
cmp
subb
cmc
fstpl
aad
sub
out
fimull
add
adc
sub
adc
jmp
and
inc
in
dec
fldcw
imul
adc
dec
cmpsb
pushf
sarl
stos
push
dec
mov
imul
xor
jbe
push
ljmp
stc
mov
push
mov
hlt
jns
jl
nop
outsl
mov
adc
fcmovnb
pop
popf
daa
jbe
and
insb
ljmp
inc
outsl
js
inc
filds
add
or
cmpsl
cwtl
cmp
mov
leave
and
or
lret
cli
mov
fiaddl
mov
or
mov
addr16
add
dec
stos
jno
call
or
and
inc
pop
adc
psubusw
xor
bound
and
pop
rcll
sbb
shrb
mov
inc
inc
js
lret
cli
addb
dec
or
pushf
je
xor
leave
inc
pop
insl
pusha
mov
xor
jl
cmp
iret
das
arpl
aaa
jnp
sbb
inc
add
xchg
add
dec
das
int
lea
dec
push
repz
and
fdiv
mov
push
outsl
rcrl
sub
pop
iret
arpl
sub
in
cltd
sbb
xor
push
scas
add
sub
pop
ljmp
xchg
dec
sbb
leave
jbe
call
sbb
xor
ret
popa
ficompl
pop
movsl
ret
cmpb
and
les
cmpsl
mov
jle
fistpl
fwait
cmc
scas
push
outsl
mov
loop
test
jo
idiv
mov
jne
loop
lods
enter
je
ror
rcll
mov
dec
jmp
pop
push
in
gs
sub
insb
sbb
add
pop
sub
aam
enter
add
mov
mov
dec
adc
sub
insb
insb
xor
push
iret
mov
or
push
push
jno
mov
js
fisttpl
pop
and
nop
ljmp
mov
out
lods
xor
cli
or
xchg
out
mov
mov
cmpb
mov
jp
xor
cli
mov
adc
seta
xor
pop
loop
shrl
insb
fcoms
push
icebp
or
mov
adc
lea
mov
fsts
clc
ds
pop
or
xchg
jae
mov
sub
xor
pop
push
inc
in
mov
testb
and
add
rol
test
mov
jbe
fs
adc
fld
dec
or
pop
aas
pop
push
popf
lea
ljmp
push
rcl
maxps
subl
jnp
pop
inc
out
mov
jmp
adc
dec
test
push
cmc
movsl
sub
and
clc
lret
repnz
and
lahf
jge
js
lcall
lods
cmp
push
pushl
aam
pop
fimuls
mov
xor
pop
push
ret
lods
stc
push
mov
xor
adc
add
jns
or
xor
pushf
pop
add
adc
scas
jns
testl
fdivs
pop
cmp
stc
dec
xchg
add
and
popf
sbb
cwtl
leave
testb
xor
mov
mov
loopne
or
leave
lcall
xchg
shlb
push
fistl
cmp
mov
ret
popf
jl
mov
jns
call
js
jnp
icebp
out
push
cmp
or
cwtl
push
cs
add
and
fadd
mov
int
add
insl
push
mov
jbe
fists
aad
xchg
lahf
dec
adc
fwait
mov
lahf
xchg
or
push
inc
sub
dec
movsl
cmpsb
test
and
aaa
lds
paddusb
push
clc
repnz
push
pop
and
push
outsl
add
iret
sub
mov
jecxz
in
adc
mov
mov
add
adc
xor
cmpsb
or
sbb
jno
in
psubb
dec
divl
shlb
mov
in
and
pop
clc
push
xchg
push
insl
mov
imul
push
nop
movsb
inc
in
shlb
sub
dec
push
mov
das
fisubrs
hlt
lret
ds
pop
sub
pop
in
jb
inc
das
mov
and
lods
mov
jbe
mov
fwait
sbb
nop
sti
cmp
inc
aaa
and
fldt
add
in
jbe
xor
fmuls
xor
push
inc
fwait
mov
sbb
lds
and
inc
scas
das
adc
imul
repz
push
jle
push
sub
push
inc
mov
xor
cmp
pop
test
lcall
das
pop
fldt
inc
cmp
movsl
push
faddp
lret
es
sti
mov
mov
shrb
das
xor
sahf
jnp
scas
sbb
pop
mov
jg
add
xchg
dec
jle
pushf
imul
aad
ljmp
mov
dec
jnp
jb
mov
inc
je
out
gs
jbe
or
mov
dec
clc
jecxz
cmp
test
shlb
sub
lds
out
pop
inc
mov
shrl
enter
pop
cmpsl
in
std
xchg
xor
push
mov
cld
mov
xchg
fwait
lahf
jae
data16
stc
and
jle
cmp
lods
mov
xchg
sub
ss
pushf
mov
int
jnp
xchg
sahf
fcmovnb
inc
pop
jle
sub
ds
aaa
lahf
pop
repz
popf
test
cltd
add
ljmp
cmp
mov
pop
push
pop
pop
cmpsb
xorl
jl
popf
aad
xchg
pop
pop
fdivrs
pop
mov
jbe
lods
fcoms
iret
xor
mov
xchg
in
rorb
sbbb
or
xor
cmpsl
stc
lret
mov
push
imul
es
movsb
aad
xor
aaa
cmpsl
push
lret
mov
subb
cmpsb
fdivs
outsb
pop
dec
push
scas
dec
add
bnd
add
fldl
testb
jae
jnp
ror
test
adc
dec
cmp
push
mov
mov
fdiv
aaa
int3
mov
sub
sbb
push
adc
xor
jecxz
sub
js
cmp
or
mov
pop
fsubl
scas
or
jecxz
sbb
mov
jecxz
aas
or
push
xchg
pop
shrl
mov
pop
add
adc
dec
jge
mov
and
mov
mov
xor
xlat
std
or
jecxz
sub
push
rcl
cli
add
push
lds
stc
sub
jae
int
mov
add
or
fbld
cmp
add
jae
sysret
mov
ja
mov
push
lods
gs
popf
in
xor
or
popa
data16
pop
inc
rcll
iret
dec
push
xorb
sub
fucomp
pop
jae
jp
adc
inc
adc
imul
mov
das
les
sub
or
or
imul
shll
das
push
lcall
cmp
mov
pop
pop
mov
adc
jns
jmp
and
sahf
mov
jnp
jae
inc
fcomps
int3
jmp
pop
das
lds
xor
cmp
xchg
lock
scas
sarb
jb
in
or
xchg
mov
daa
push
jecxz
stc
jae
sbb
arpl
ljmp
es
xor
xchg
cltd
xlat
adc
mov
or
mov
inc
push
mov
insb
inc
pop
hlt
adc
xchg
pop
inc
cmp
sub
testl
lods
imul
sti
lret
dec
or
out
pop
mov
pop
dec
in
push
enter
sbbl
inc
cmp
sti
xor
adc
pop
mov
push
adc
push
sti
add
imul
xchg
daa
push
leave
js
dec
mov
push
std
cmp
push
or
imul
cmc
sbb
sbb
pop
imul
lret
sti
xchg
add
out
cmc
lock
jae
inc
in
lods
cli
fwait
sahf
push
stos
ret
clc
lret
mov
mov
xor
rcll
popa
xor
mov
aad
aam
dec
test
xchg
mov
mov
mov
addl
leave
push
ret
xchg
sub
adc
mov
cmp
pop
flds
xor
out
popf
aas
js
cmpsl
add
test
sbbl
pushf
int
fs
and
leave
dec
mov
enter
cmp
push
cs
xchg
dec
xor
sbb
fldcw
sahf
enter
ljmp
adc
repnz
or
mov
pop
andb
je
mov
call
addr16
dec
shlb
fiadds
mov
adc
int3
mov
mov
in
andl
cmpb
sahf
and
inc
mov
mov
xor
sub
push
shl
cs
fnsave
push
sbb
xchg
cltd
fistpll
adc
xchg
push
and
lods
rolb
sub
jb,pn
cmc
lds
xorb
xchg
lods
clc
das
dec
jmp
mov
popa
gs
mov
adc
mov
or
sub
mov
popa
cmpsl
push
mov
sub
or
jnp
add
pop
insb
lods
ret
mov
and
repz
or
dec
fwait
lcall
sub
pop
xchg
gs
lods
adcl
pop
pop
outsl
jg
cmp
push
cmc
xchg
les
mov
test
lret
ljmp
cmp
sbb
cli
and
mov
ret
subb
cmp
add
in
adc
push
or
or
mov
mov
mov
jmp
js
addr16
shlb
cmp
mov
mov
sbb
sbb
aaa
js
mov
iret
leave
push
mov
nop
or
or
lods
insl
jns
mov
add
pushf
sub
lock
out
add
imul
int
or
pop
ds
loop
push
and
mov
scas
nop
jns
push
stos
adc
sub
into
and
movsb
pop
add
or
rcll
jp
ljmp
sub
xchg
sub
inc
mov
nop
push
inc
lahf
cmp
adc
outsb
subl
scas
dec
testl
lcallw
mov
aaa
mov
sub
lods
ss
cmc
dec
xchg
cmp
xchg
mov
aad
movsb
jns
push
test
or
call
mov
lcall
jno
bound
test
out
dec
xchg
out
jp
push
cmp
adc
pop
adc
jae
mov
sub
aaa
std
xchg
es
pop
inc
imul
nopl
push
repnz
ret
sar
stc
call
iret
jae
sub
cli
hlt
sub
adc
jne
xor
push
add
inc
data16
cmp
lock
aas
shl
and
lock
push
mov
cmpsb
aad
dec
push
andb
adc
adc
stos
test
mov
hlt
add
repz
push
or
xchg
rcll
sub
faddl
xchg
sub
subl
adc
cvtps2pd
fdivrs
inc
mov
clc
add
insl
pop
imul
int
mov
pop
jle
dec
fildll
ret
mov
pop
dec
test
or
sub
lea
cmp
imul
push
shll
fs
dec
xor
and
sbb
test
in
cld
in
push
rolb
xchg
std
or
pop
lock
or
mov
dec
out
mov
mov
ljmp
sbb
rcrl
stos
repnz
fldt
mov
sbb
cmpsl
pop
ljmp
dec
sbb
daa
sbb
stos
ljmp
xchg
xor
jecxz
pop
rcrb
jmp
test
lods
pop
cmc
dec
fstpt
iret
pop
pop
mov
subl
inc
in
fwait
mov
or
mov
aam
fsubl
dec
jecxz
adc
inc
out
mov
ja
push
inc
test
in
out
jbe
divl
dec
outsl
or
mov
mov
pop
outsb
pop
insb
in
imul
mov
test
pop
xorb
mov
fisttps
mov
sarl
jne
jns
xchg
hlt
mov
stos
mov
jb
clc
enter
outsl
fcompl
mov
popf
in
fndisi(8087
rcrb
xchg
je
mov
imul
lret
jnp
pop
fs
sub
push
stos
leave
std
nop
out
jmp
pushf
inc
pop
push
mov
pop
lock
inc
xchg
and
sbb
push
jno
loope
lea
sbb
and
sti
mov
addr16
mov
mov
mov
sahf
ror
pop
fidivl
mov
push
lods
sti
add
mov
mov
loope
and
enter
inc
xorl
stc
sbb
clc
push
ljmp
aad
push
pop
cmp
push
movsb
cmpsb
or
add
adc
jl
mov
or
push
add
xor
jbe
pop
addr16
mov
dec
shll
outsb
mov
movsl
out
push
mov
int3
add
sub
or
mov
jecxz
pop
test
and
jle
arpl
into
sbb
lcall
mov
insl
popa
daa
push
out
cli
out
mov
ss
or
mov
pop
lcall
pop
add
adc
xchg
mov
add
lods
ret
mov
mov
leave
int3
insb
clc
jbe
pop
sbb
out
cmp
jnp
xlat
inc
mov
lret
jge
sub
adc
loop
push
out
ja
mov
sub
cmp
push
jbe
cmc
imul
mov
mov
lods
scas
jge
push
sub
sbb
inc
adc
stos
sbb
aad
add
push
in
sbb
ret
mov
sbb
jge
jecxz
mov
insl
lret
sbb
xchg
and
dec
cmp
xchg
dec
mov
jnp
xor
push
fsubs
and
arpl
and
lea
shr
pop
frstor
js
mov
inc
xchg
adc
in
sbb
adc
das
ljmp
mov
ret
fwait
jecxz
lahf
xchg
stos
xchg
sbb
sub
adc
leave
push
ljmp
sahf
mov
bound
sbb
push
stc
ret
fmulp
mov
fldcw
in
fstl
dec
or
push
stos
xor
ljmp
shrl
sbb
pop
push
pop
pop
filds
cmp
rcrl
mov
or
jns
adc
imul
mov
and
int3
mov
push
imul
rclb
push
scas
test
sub
jl
xor
movsb
rorl
mov
mov
ret
ds
jl
or
insb
and
xchg
mov
adc
jns
daa
cmp
int
mov
fwait
xchg
test
pusha
sbb
inc
push
movsl
mov
cmp
push
xor
fildll
out
jle
mov
neg
pusha
mov
xorl
sbb
sbb
fwait
addr16
stos
xchg
cmpxchg
jmp
sbb
mov
enter
pop
mov
mov
divl
in
imul
int
ljmp
mov
movsl
mov
sub
jbe
movsb
adc
in
dec
iret
iret
mov
adc
xchg
cs
scas
stc
jne
into
pop
pop
dec
mov
sbb
enter
and
push
frstor
mov
mov
xor
dec
scas
cld
inc
cmp
xor
add
xchg
rorb
int3
faddl
les
jns
jo
mov
cltd
ljmp
imul
jo
xchg
mov
pop
jbe
mov
addb
sbb
or
outsb
je
mov
mov
pop
jp
test
out
fst
out
fists
cmpsb
mov
jae
in
dec
sub
or
outsb
shll
or
es
pop
test
in
testl
dec
jp
stos
jge
inc
or
jae
inc
out
lret
or
stos
adc
sbb
rorb
lahf
jbe
iret
push
inc
dec
jg
cmp
mov
and
out
scas
in
cmc
mov
fcmovne
call
sub
lods
xor
je
jo
xchg
ret
xor
lea
incl
mov
cltd
lahf
and
jae
sub
fistpll
and
dec
sahf
call
jle
dec
out
mov
adc
sbb
wrmsr
stc
in
insl
push
rorl
je
mov
stos
outsl
push
pop
arpl
inc
jne
xor
leave
mov
inc
xor
gs
popa
cmc
cmp
xchg
in
add
or
push
dec
inc
mov
push
cmpsl
hlt
rcrl
mov
int
nop
pop
arpl
inc
add
in
or
mov
mov
enter
movsb
fisubrl
push
sub
cld
jl
sub
loop
pop
mov
sub
int3
xchg
in
pop
mov
xor
and
sub
ljmp
std
fidivs
mov
dec
and
ds
movntq
push
mov
push
outsb
jo
xor
xor
mov
stos
jmp
fstpl
xchg
call
xor
pop
cmpsl
xchg
fs
fadds
daa
add
imul
xchg
sbb
mov
test
movsl
movsl
aas
jmp
jno
add
fistps
fnsave
mov
inc
imul
out
pop
rolb
sbb
es
add
shl
dec
pop
in
aas
fildll
aad
sub
sub
xor
fnop
je
sbb
or
dec
cmp
push
rcrl
iret
dec
and
enter
fstpl
call
out
xchg
xorb
jb
outsb
xchg
push
jb
mov
imul
in
dec
lcall
psubusw
mov
or
rclb
and
push
movsl
dec
mov
sub
ret
inc
lret
mov
or
shll
sub
jno
mov
les
mov
fsubrl
cmp
add
mov
and
xchg
xchg
xlat
ss
aaa
scas
sbb
pop
add
test
enter
sub
pop
lds
cmp
dec
lret
fimull
push
adc
inc
notb
frstor
out
loopne
jg
jge
sub
in
fcoml
into
xchg
xlat
cld
in
mov
cli
adc
push
sub
xor
cmpsl
sbb
push
mov
jge
push
dec
stos
xchg
repz
add
jp
movsl
pop
cmpsl
sahf
lret
xchg
xor
jns
adc
push
add
and
std
jno
adc
pop
fidivrs
pop
mov
aaa
ret
hlt
and
enter
idivb
cmp
mov
outsb
pop
hlt
sti
mov
sbb
shrl
in
or
sub
movsl
lcall
add
sub
hlt
cli
in
jecxz
pop
pop
inc
sub
mov
inc
mov
jl
mov
mov
hlt
pop
out
scas
mov
add
int
mov
adc
popa
out
stos
cmp
mov
out
rcr
hlt
push
lret
leave
rorb
jmp
cmp
xchg
xchg
sub
pop
clc
inc
and
ret
add
inc
cmpsb
cmp
jne
dec
fsub
lret
mov
jns
jbe
or
jl
insb
repnz
nop
adc
fbstp
push
cmp
inc
mov
cmp
clc
sti
and
cltd
hlt
mov
pop
sbb
in
int3
insl
leave
outsb
subb
mov
ret
jle
jnp
ljmp
adc
mov
rcrb
ss
cmp
stc
repnz
lock
push
mov
mov
and
and
les
add
add
mov
into
mov
fsubl
inc
xchg
and
and
test
or
mov
xchg
push
xor
fdivr
out
repnz
loopne
jno
xchg
and
mov
daa
cmp
ljmp
inc
xor
inc
arpl
fnsave
adc
ds
outsl
cmp
ror
aad
adcb
in
push
icebp
or
ret
test
movsb
fnsave
test
sub
and
mov
mov
sti
pop
adc
xor
shrb
or
adc
scas
push
mov
test
mov
lock
aas
mov
pop
clc
clc
hlt
xor
lret
hlt
hlt
stc
mov
rorb
xor
pushf
subl
in
insb
jmp
adc
mov
inc
int3
or
cmp
push
inc
mov
cmp
xchg
rolb
es
ss
test
aas
jno,pt
lods
dec
push
mov
jae
jge
loop
fldl
cwtl
loop
dec
jb,pt
ja
mov
lds
add
fadds
lea
test
fs
inc
mov
jle
imul
push
xchg
mov
cmp
inc
adc
jmp
jae
xchg
pop
push
popf
mov
push
push
add
inc
dec
test
jle
stc
lods
arpl
lcall
sub
ss
push
add
nop
jge
xor
xchg
mov
ret
jnp
dec
cmp
cmp
xchg
mov
popa
and
mov
mov
stos
sub
aad
popf
adc
es
js
adc
push
ljmp
ja
mov
loop
scas
dec
sti
mov
push
cltd
jecxz
js
adc
xor
aas
cmove
fstl
into
outsb
int3
flds
push
xor
sbb
xchg
pop
mov
lcall
sub
je
push
mov
std
cltd
jle
out
fmuls
mov
mov
in
or
imull
mov
mov
movsb
sbb
dec
cmp
stc
xor
or
lret
inc
jp
push
mov
and
jbe
push
icebp
mov
ljmp
insl
sbb
rorb
lret
adc
cmp
shrb
xor
push
mov
lret
ds
std
orl
fcomp
jmp
pop
stc
shl
sbb
in
mov
cmp
cmp
push
or
outsb
fistps
or
cmpsl
fdivr
fsubl
inc
shr
push
stos
hlt
cmpsb
pop
addb
ljmp
add
jns
mov
in
dec
aad
repz
je
dec
and
bound
outsl
les
push
pop
mov
jp
das
stos
dec
jge
add
scas
scas
mov
mov
cli
std
insb
xchg
int
cmp
test
cmp
jge
loop
pop
adc
lds
dec
mov
aam
lcall
test
aas
cmpsb
orb
jge
mov
pop
mov
push
out
mov
or
cmp
mov
daa
and
push
cmpsb
pop
dec
add
js
call
sarb
pop
xchg
dec
adcb
cltd
fimuls
cltd
out
ret
lods
sbb
push
adc
and
cs
ds
mov
dec
out
pop
cmp
dec
xchg
int3
adc
pop
scas
or
test
jp
cmp
in
jb
mov
push
jne
jmp
pop
lret
pop
jne
je
dec
data16
cmpsl
mov
xchg
pop
out
mov
scas
lret
shlb
or
lea
jb
sbb
sub
sub
pop
add
mov
and
loopne
mov
mov
jp
pop
pop
push
adc
lcall
ja
imul
nop
lods
bound
or
sub
adc
roll
inc
pusha
xor
in
pop
mov
mov
xor
lcall
sahf
std
sbb
aas
dec
add
test
mov
and
mov
xor
fcom
mov
inc
inc
mov
out
stc
lods
pop
mov
xor
dec
and
cltd
fwait
or
jmp
cli
fildl
adc
jmp
adc
aam
addr16
lcall
mov
test
inc
and
pushf
scas
mov
rcl
lock
adc
orb
inc
dec
xorb
push
popa
mov
gs
xlat
xchg
fsts
push
insb
adc
jne
xchg
push
das
pop
shrb
aad
test
imul
rclb
repz
mov
test
xchg
xchg
arpl
xor
add
outsl
inc
jno
ret
add
adc
cs
fiaddl
and
pop
jp
rcrb
gs
jl
xchg
mov
add
fcomip
xor
add
jp
push
neg
adc
in
dec
sub
jb
jecxz
jmp
icebp
jp
sbb
mov
into
outsb
ja
xchg
dec
dec
push
push
mov
jbe
call
fldt
jmp
jp
push
and
and
cltd
jp
mov
lcall
loopne
xchg
push
imul
jb
sub
sub
or
jbe
pop
or
pop
sbb
scas
pop
or
repnz
cmc
jbe
mov
pop
ret
xchg
daa
xchg
lret
and
xchg
test
mov
repz
adc
adc
sub
sub
imul
inc
sbb
cmp
xor
popa
pop
bnd
iret
push
addr16
pop
lock
add
loope
das
xchg
mov
ss
ret
dec
jl
test
xchg
dec
insl
xor
xor
andl
cmp
or
adc
orb
data16
stos
movsl
or
es
add
jns
loope
push
and
lds
sub
sbb
push
adc
jns
add
or
dec
ret
imulb
fwait
mov
inc
psubusb
cmp
out
aaa
xor
popf
fistps
lea
mov
pop
lods
arpl
je
dec
repnz
add
jae
sub
cmpsl
lods
stos
add
jns
xchg
cs
xor
lret
or
mov
insl
or
add
aas
jno
insl
mov
shr
pop
cmpsb
sub
rorl
dec
out
sub
std
rcrb
push
jbe
data16
sub
xlat
add
xor
jecxz
adc
or
aas
sub
or
mov
std
dec
or
or
ss
sub
push
sbb
ficompl
gs
lcall
ret
pop
mov
mov
into
xchg
adc
push
fisubl
repnz
cmp
xchg
and
cs
fs
mull
inc
and
mov
fwait
mov
je
jmp
test
pop
jo
mov
adc
decb
push
jp
sub
rclb
sub
add
mov
cmp
cmpsl
out
call
fisubs
scas
and
pushf
pop
fwait
cld
jno
mov
cmpsb
push
jae
shlb
int
lret
mov
aam
loopne
mov
enter
nop
dec
mov
jbe
into
inc
jg
fbstp
shlb
in
in
iret
ret
jne
pop
xchg
mov
mov
jae
jp
mov
fnstsw
loope
dec
out
jbe
ret
mov
xchg
pop
lcall
jle
jmp
push
ret
pop
fcompl
push
mov
gs
enter
xchg
dec
cmp
mov
shl
aaa
cmp
and
lea
sbb
pop
mov
pop
inc
sahf
mov
daa
jns
jmp
push
xchg
mov
sub
xchg
mov
sbb
dec
xchg
sbb
pop
insl
out
imul
shll
lahf
add
push
push
add
push
inc
pop
inc
fdivs
add
out
lock
push
daa
cmc
push
and
idivl
lods
movsl
mov
mov
stos
lahf
leave
loop
push
jle
jb
les
sahf
add
iret
xor
popf
stos
mov
pop
sbb
and
out
and
or
push
and
repz
push
mov
mov
jg
cmp
fldenv
push
xor
sbb
adc
jbe
xorb
lea
je
sbb
or
mov
mov
aaa
repz
pop
inc
pop
scas
jb
sti
mov
lods
pop
mov
std
idivl
push
ret
xchg
stos
out
dec
test
mov
mov
repz
cmp
out
push
pop
cmp
sbbb
sub
inc
cmpl
cwtl
mov
or
pop
std
aas
stos
mov
jne
push
inc
xlat
jmp
out
add
add
push
adc
incb
jmp
xchg
mov
popa
inc
int
call
sub
jb
adc
cmp
sub
and
int3
outsl
sub
cmp
jge
adc
js
jge
inc
xor
or
mov
and
jne
add
sbb
pop
inc
sbb
cwtl
cmpsb
fistl
mov
jp
xchg
pop
mov
jb
call
shl
mov
and
sub
in
add
popw
sbb
popf
enter
es
lahf
in
pop
inc
ja
mov
jl
mov
adc
mull
dec
add
loop
sbb
inc
inc
jge
int
jecxz
scas
pop
xor
js
xchg
inc
int
mov
mov
jmp
jp
arpl
sub
stos
jecxz
iret
je
out
sub
dec
adc
sbb
add
push
outsl
adcl
pusha
jge
or
xor
idivb
sub
inc
adc
mov
ja
sub
adc
nopl
cmpsb
fs
andl
sti
ucomiss
jg
jge
daa
mov
fpatan
and
push
in
pop
daa
fcmove
outsl
sbb
addr16
mov
jmp
sub
dec
mov
hlt
or
shll
jb
pop
cld
sub
ret
dec
scas
push
lret
sbb
jns
sbb
xor
nop
fmull
xor
lods
adc
pop
std
shll
xor
xchg
jge
push
fsubrl
pusha
ret
aad
cli
lds
loope
mov
outsb
cmp
dec
movb
test
inc
jne
pop
shlb
shr
cltd
shll
cmc
cmp
test
push
ljmp
xchg
mov
stc
loope
lcall
pop
popa
sbb
pop
aam
stc
bound
inc
fs
sbb
test
mov
arpl
sbb
pop
fmuls
icebp
loopne
outsl
stos
or
shlb
into
cmp
and
jo
les
mov
xchg
aaa
push
fidivl
stc
sbb
sub
cli
negb
and
data16
sbb
inc
add
pop
xor
lahf
and
les
mov
xchg
mov
or
adc
jbe
sysexit
mov
lea
nop
movsb
addl
push
jecxz
or
cmp
push
das
loopne
out
cmp
out
bound
xchg
xchg
ja
flds
les
shld
fsubrs
leave
push
sbb
adc
bound
stc
and
mov
jo
mov
lds
inc
or
and
lods
add
inc
xor
mov
cmpl
repz
and
sahf
xchg
mov
imul
jecxz
fs
stc
sub
inc
cmp
test
sub
stos
jne
or
in
and
loope
and
adc
cld
fldenv
sub
addr16
and
mov
xchg
pop
cld
adc
fnstcw
cmp
enter
ds
inc
icebp
jbe
inc
lretw
fsubp
test
movsb
jecxz
mov
cli
in
mov
cmp
pop
subb
jp
pop
pop
fisttpll
out
jo
pop
xchg
incb
mov
call
scas
repnz
aas
pop
or
mov
daa
jmp
shl
lods
push
repz
je
andb
jg
dec
push
cmpsl
pop
enter
fmul
mov
stos
scas
roll
test
stos
mov
mov
shl
test
mulb
sahf
add
mov
fldt
mov
pop
in
add
stos
add
mov
mov
pop
xchg
inc
enter
addr16
push
cld
sarl
mov
push
and
inc
ficoms
dec
adc
jecxz
fsubs
jle
ss
inc
pop
pop
inc
lds
nop
lock
sub
adc
in
mov
sub
idivb
fwait
cwtl
push
insl
jecxz
mov
iret
sub
popf
sub
dec
call
call
mov
xorl
cmp
clc
imul
aam
push
xchg
ret
pop
sbbl
les
aad
ret
imul
jle
xchg
movsb
in
mov
sbb
xlat
outsb
lods
push
aad
xchg
in
mov
xor
popa
test
idivl
cmp
mov
shrl
jmp
notl
xor
stc
je
mov
es
mov
mov
test
mov
jp
adc
imul
popf
or
sbb
push
lret
enter
and
xchg
in
imul
addr16
push
add
fistps
mov
jl
mov
mov
sbb
push
jg
les
pop
scas
dec
shlb
mov
mov
mov
fsub
insb
or
mov
jle
sub
into
xor
jge
repnz
sbb
leave
and
or
icebp
inc
sbbl
fidivl
push
add
pop
mov
lret
jl
aas
sahf
add
loopne
je
or
adc
jle
cli
ret
jnp
test
rcrl
mov
mov
bound
js
mov
xor
nop
cmpl
js
xchg
dec
mov
fisubrs
popa
mov
in
fisubrs
fisttps
fsubp
aam
mov
into
ljmp
add
add
repz
pop
cli
xor
push
pop
xchg
test
xor
cs
inc
outsl
xchg
aas
adc
repnz
aad
mov
out
imul
xchg
stos
and
push
aaa
inc
add
fdivp
push
xchg
xor
fwait
jb
lods
std
mov
sarl
lahf
in
mov
mov
test
adc
shll
fnstsw
leave
push
rcl
push
mov
jnp
lcall
aad
and
call
mov
movsl
es
ljmp
imul
push
or
add
push
push
enter
pop
xor
xor
ss
out
jbe
mov
jp
mov
or
push
iret
jne
mov
rorl
jmp
mov
sub
push
mov
push
sti
lcall
sbb
sarl
adc
push
xchg
inc
loop
jae
push
loopne
mov
iret
loope
jl
or
int3
add
fcoms
in
jmp
xlat
test
imul
sub
stos
push
ret
xor
fmulp
pop
mov
out
cmpsl
inc
aam
shr
repz
jns
sbb
cwtl
mov
dec
and
xlat
cmp
loop
pop
ret
add
das
lods
add
mov
dec
adc
adc
add
cmp
pop
inc
xor
mov
lret
cmp
shld
push
mov
push
cmpsl
adc
or
cmpsl
adc
fsubp
popf
icebp
jle
and
pop
jb
imul
jbe
cwtl
sahf
stc
and
dec
outsb
stos
mov
or
xchg
mov
hlt
in
outsl
push
push
daa
mov
hlt
arpl
rorl
push
and
sti
ret
mov
jo
imul
push
hlt
add
xor
or
xchg
les
subl
mov
xchg
xorb
shlb
jle
mull
lods
inc
adc
sub
cmpsl
aas
stos
out
or
pop
mov
push
mov
dec
hlt
jne
orl
inc
jns
shrl
scas
jmp
mov
loopne
push
mov
out
test
inc
jge
outsb
fstpt
lahf
or
jmp
push
std
sub
jno
test
test
pop
leave
int3
fistpll
cmpb
fldt
jle
shr
popa
mov
std
cmp
hlt
test
jbe
mov
jl
adc
decl
rclb
ja
sbb
das
push
and
dec
pop
ret
mov
mov
movb
mov
push
ret
xor
or
sbb
and
decb
push
cmp
loop
mov
mov
add
mov
clc
add
ficoms
fdivl
mov
push
dec
aam
out
les
mov
out
insb
aas
xor
fsub
cmpsb
in
mov
loopne
jo
das
movsl
call
loope
mov
push
inc
jnp
mov
jae
cmp
jne
and
inc
add
fistl
inc
xor
test
repz
add
xor
pop
dec
aas
and
pop
cmp
clc
clc
insl
xchg
push
mov
lret
stos
xchg
pop
mov
push
mov
sbb
sbb
xlat
push
jg
sub
outsl
and
mov
outsl
pushf
subb
daa
rolb
mov
mov
and
add
xchg
mov
xchg
cltd
dec
int3
xchg
into
xchg
push
cmp
stc
repnz
pop
in
ss
mov
mov
xor
repz
aas
bound
fcoms
mov
test
mov
js
sub
xsavec
mov
cmp
cmp
test
clc
add
or
fwait
inc
pop
int3
pop
dec
iret
xor
adc
mov
rcrb
xchg
sbb
jb
jo
add
stc
and
sbbb
lret
add
arpl
mov
out
scas
idiv
mov
add
mov
mov
dec
mov
lock
testb
cltd
shll
push
shlb
scas
xchg
cs
xor
pop
aaa
aas
dec
shl
inc
ret
je
outsl
push
fldcw
cmp
in
fdivs
iret
xchg
add
push
fimull
std
jg
xor
adc
arpl
out
sbb
jbe
shll
ret
inc
stos
out
mov
mov
xchg
and
hlt
pop
rclb
nop
add
das
pop
push
rcll
adc
pop
jg
cmp
xlat
imul
jnp
push
or
cmp
pop
inc
in
jo
ss
pop
dec
jmp
xchg
aad
sti
mov
in
clc
lea
mov
fistpl
mov
sahf
xor
jae
stos
xchg
movsl
push
jecxz
sar
xchg
and
das
push
xchg
xor
fucomi
jge
sub
inc
and
xor
push
ficoml
stc
cs
aas
addr16
pushf
test
pop
leave
daa
jno
movsl
lcall
add
or
stos
cmpl
fnstsw
js
int
adc
sub
or
bound
sub
gs
das
adc
lea
aad
dec
mov
mov
push
sbb
mov
jb
insb
xor
lods
nop
adc
sbb
fdivl
adc
repz
popa
mov
xor
jl
nop
test
outsb
jne
pop
pop
in
jmp
in
insl
out
or
repz
je
imul
xor
jbe
daa
bound
jno
mov
sub
xorl
rcrl
pop
sub
sbb
mov
or
add
faddl
inc
add
pop
adc
scas
adc
xchg
popf
das
cld
jmp
decl
sub
add
sub
pop
push
xor
jg
lock
pop
mov
stos
repnz
outsb
xchg
xor
cs
je,pn
xor
jbe
aaa
fst
movsb
jl
movsb
lds
pop
mov
dec
arpl
push
test
sub
xchg
icebp
outsl
dec
inc
or
lea
push
call
mov
dec
pop
mov
fwait
pop
or
adc
loope
cmp
inc
ret
or
sub
or
add
out
dec
sbb
nop
in
jbe
dec
mov
push
xchg
mov
cmp
pop
data16
xor
sub
mov
fdivs
mov
int
add
ss
xchg
arpl
sub
jle
xchg
add
push
in
pop
nopl
adc
and
adc
sbb
insl
or
sahf
scas
push
jns
inc
mov
sbb
jmp
fstp
mov
and
add
xor
push
jle
fisttpll
mov
sub
mov
movsb
cmp
imul
adcb
dec
je
xor
lock
xor
ret
pop
stos
call
mov
fistpll
hlt
lock
inc
test
fidivrs
pop
inc
imul
fstpt
pop
inc
jge
js
lret
jno
rcll
dec
push
xor
imul
mov
lcall
mov
daa
ficomps
testl
and
mov
inc
pop
sbb
mov
mov
pop
lock
jle
push
push
push
mov
pop
imul
enter
test
inc
inc
das
mov
insl
sub
rclb
fnstsw
fnstsw
rorb
out
cmp
pop
pusha
stos
pop
test
xchg
in
popf
in
push
cmp
lock
lods
cmp
mov
arpl
xchg
add
pop
frstpm(287
push
xchg
and
ret
lret
mov
adc
pop
xor
pushf
jp
pop
fsubl
aam
cs
add
outsl
test
jns
mov
subb
mov
and
pavgw
pop
xchg
sahf
andl
jne
int3
fdivrl
mov
mov
sub
cmc
punpcklbw
lret
movsb
xchg
sti
subl
loopne
dec
mov
inc
xor
sub
sbb
add
xchg
je
lahf
pop
mov
repz
out
xlat
jp
sbb
out
pop
push
sub
push
jns
add
les
push
or
jg
mov
call
mov
jno
or
xor
insl
iret
test
dec
out
add
stc
jno
stos
sti
inc
jb
mov
testl
iret
adc
addr16
stos
ret
imul
rolb
cmp
dec
dec
arpl
jbe
out
ljmp
jmp
lods
mov
cmp
pop
sbb
mov
cmpsl
jecxz
add
xor
xchg
scas
addb
nop
movsb
and
xlat
notb
mov
sbb
and
aad
daa
pop
out
mov
jb
cmpsb
mov
adc
or
push
sub
clc
fcmovne
mov
movsb
outsl
push
push
push
sbb
sub
pushf
sbb
fiadds
cmp
mov
add
mov
stos
movsb
sub
mov
dec
push
push
out
jb
pushf
and
sub
loopne
lods
dec
in
xor
sub
shlb
push
inc
icebp
cs
mov
xchg
mov
loop
sbb
xchg
jns
ja
xchg
sti
add
in
adc
lahf
jge
mov
int3
push
cmp
mov
call
imul
mov
dec
outsl
ret
sti
scas
mov
xchg
mov
pop
mov
test
inc
xchg
lret
pop
dec
mov
test
add
dec
xchg
and
mov
xchg
sub
xchg
jo
mov
fdivrs
lds
dec
sbb
sbbl
jg
fsubrp
add
jne
mov
cmp
push
mov
enter
mov
inc
sub
push
pop
sub
jge
xor
gs
loope
inc
ret
pop
imul
inc
ja
lds
cmp
lea
out
lods
stos
sub
outsl
inc
out
and
ljmp
cmpsl
pop
std
int
mov
aam
mov
leave
sbb
xor
pop
movsb
pop
add
pop
adcb
xchg
nopl
or
and
sub
push
fs
rclb
cmpsl
fistl
push
dec
bound
jle
jge
std
and
pop
pop
sub
cmp
cltd
in
fcomps
adc
add
xchg
dec
sarb
sbb
mov
cs
xchg
mov
adc
std
icebp
push
dec
jb
sub
and
xor
daa
xchg
sbb
es
fisubs
and
arpl
shll
mov
adc
imul
outsb
dec
out
sub
stos
xchg
sar
iret
xor
int3
fcmovb
adc
xor
mov
jae
and
in
adc
out
cli
sub
lea
xor
lret
movlps
mov
mov
loopne
xor
fildll
push
dec
mov
test
iret
push
cmp
pop
mov
inc
ljmp
mov
rcl
stos
lcall
stos
xchg
movl
les
dec
inc
push
inc
mov
into
fisubs
cmc
push
push
jb
mov
xchg
mov
cmp
addr16
jbe
mov
lock
movsl
ds
das
adc
pop
iret
loopne
test
and
mov
adc
mov
js
hlt
dec
stc
cmpsl
mov
add
sbb
popa
loopne
xchg
addr16
pop
repz
enter
cwtl
push
push
lcall
and
inc
sbb
jns
dec
push
xchg
les
repz
repz
mov
cmp
jno
hlt
sub
adcb
das
aad
adc
add
aad
out
push
bound
sti
lods
negl
fdivs
add
adc
xor
xor
daa
ja
mov
sub
or
out
mov
push
pop
mov
inc
out
jae
adc
sbb
push
xor
lods
push
mov
pushf
jp
iret
test
mov
adc
and
aas
int3
jl
pop
push
cmpsl
out
icebp
xchg
mov
jae
rolb
in
dec
imul
lcall
sbb
out
mov
mov
adc
cmp
and
mov
sub
fimuls
mov
shll
sub
pop
push
std
xor
mov
xchg
cmp
or
insl
mov
aam
out
dec
ljmp
sbb
cmp
sbb
sub
adc
push
mov
jnp
popf
jmp
cli
cld
fs
or
xchg
sub
jnp
icebp
mov
imul
stc
pop
xchg
fisttpl
cmpsl
sub
fiadds
sbb
repnz
push
mov
adc
rclb
pop
ret
sbb
mov
fidivl
shll
add
sub
cmpsb
test
sub
pop
addl
je
imul
lcall
mov
xchg
ret
je
push
dec
dec
inc
push
jl
jecxz
adc
add
arpl
dec
sub
push
push
ljmp
cmpsl
pop
fisubrs
hlt
push
popf
cmp
dec
push
cmp
or
adc
in
jae
orb
adc
and
add
std
fisttpll
std
dec
loope
ja
rorb
bound
cmp
movsb
push
and
inc
xchg
insl
mov
arpl
xchg
push
jns
mov
div
sahf
pop
dec
dec
mov
insb
in
mov
fisttpl
pop
dec
jno
out
mov
hlt
mov
dec
inc
xlat
dec
inc
push
inc
jo
stos
fisttps
imul
jp
idivb
cmp
xlat
push
decl
push
fisubrs
push
xor
adc
pop
pushf
shll
xchg
pop
inc
cwtl
aad
call
inc
outsl
es
jge
fsubr
adc
ss
jl
xchg
insb
push
inc
push
icebp
lret
inc
pop
fldl
pop
mov
mov
adc
call
pop
andb
cmp
psadbw
push
pop
pop
outsl
pop
add
xor
jo
imul
xor
mov
push
lret
in
sub
shl
stos
testl
ds
ljmp
jp
ret
xchg
lret
fcoml
xchg
adcl
cmpl
mov
fldl2t
imul
cmp
sahf
or
icebp
out
fucom
sti
push
sahf
popf
push
popa
js
aaa
nop
sbb
rcr
mov
and
in
test
cmp
cld
movsl
mov
jp
jge
jbe
stos
push
push
mov
or
inc
push
jg
add
and
lea
sbb
adc
sub
mov
fldenv
pop
mov
cmp
iret
movsl
ds
inc
adc
dec
add
dec
dec
in
int3
js
clc
call
pop
and
lret
pop
dec
rcll
push
pop
inc
cmp
mov
xchg
scas
pop
sbb
mov
ret
xchg
imul
out
mov
cmp
adc
aad
std
inc
add
sarb
sbb
sti
sub
lahf
loopne
aad
mov
push
imul
cmp
mov
add
or
pop
sub
sbb
or
popa
push
pop
xor
or
sbb
lea
fcomip
mov
push
mov
or
xor
ss
pop
and
fucomi
fildl
xor
mov
jmp
adc
dec
popf
into
pop
fisubl
jge
inc
shll
addr16
out
test
add
and
std
or
jo
jge
xor
cld
cltd
and
sub
xchg
push
sbb
adc
sub
shlb
clc
pop
mov
rclb
addb
cld
dec
xlat
addl
add
sbb
cwtl
xor
mov
cltd
xor
lods
or
lcall
fucomp
aam
xor
test
and
cmp
sub
xor
add
xchg
dec
icebp
xor
mov
and
mov
call
lahf
lcall
movsb
pop
jl
outsl
nop
pop
push
inc
test
jmp
shl
add
jmp
adc
pop
mov
sbb
out
jae
dec
arpl
mov
test
lods
dec
stos
sbb
and
pop
dec
lret
jo
cs
jg
mov
jp
fsubs
inc
cmpsb
adc
and
mov
xor
mov
sbb
xorb
iret
enter
inc
test
pop
mov
add
and
push
insb
les
ljmp
dec
and
popa
gs
adc
fbld
fwait
mov
jne
push
jge
xchg
pushf
dec
and
and
movsb
xlat
fwait
leave
mov
add
inc
push
in
push
jno
dec
pop
mov
xchg
pop
iret
add
inc
pop
stc
mov
lea
sbb
into
mov
lret
jmp
inc
xchg
mov
hlt
adc
inc
lcall
mov
jo
inc
movsl
mov
push
aas
loop
mov
jecxz
mov
push
lds
pop
mov
add
out
pusha
lds
cmc
adc
fwait
ret
inc
data16
and
sbb
in
dec
test
inc
sbb
je
aam
cmpsl
aam
lret
out
jb
cmpsb
sub
xchg
test
fistpll
dec
imul
sub
fwait
adc
idivl
jle
rolb
inc
lret
push
push
mov
lea
sbb
loop
leave
imul
int
pop
or
add
ljmp
js
mov
xchg
xchg
ja
out
dec
adc
xchg
cmc
ljmp
ljmp
pop
sbb
out
or
loope
fpatan
dec
mov
into
xchg
dec
jns
sbb
adcb
addr16
push
add
scas
jno
ds
cmc
mov
shlb
lret
sub
mov
cwtl
out
mov
faddl
add
mov
pop
in
js
mov
or
push
imul
xor
scas
xlat
fidivl
pop
popf
rclb
insl
dec
out
fisubrl
rcrb
stos
push
xor
xor
enter
add
in
rclb
mov
cmpsb
sbb
jp
inc
negl
jnp
mov
cmpsb
loope
idiv
jp
call
cmp
das
dec
push
outsb
mov
into
jno
pushf
ret
jb
stc
in
movsb
cmp
rorl
mov
push
adc
jp
adc
outsl
icebp
mov
sub
in
adc
lods
clc
jmp
test
xchg
testb
xor
mov
ds
loopne
pop
mov
xchg
sub
outsb
ljmp
xchg
add
dec
xchg
jl
loope
rcll
pushf
out
or
cmp
inc
movsb
mov
aaa
or
pusha
add
mov
push
stos
sbb
lea
repnz
test
test
les
jl
jle
cli
divl
push
dec
dec
and
xchg
push
adc
mov
enter
jne
filds
push
repnz
cmc
in
pop
fdiv
jmp
dec
push
jnp
sub
pushf
fs
rcr
sub
popa
and
mov
sub
cmc
sub
push
pop
ja
cmp
cmp
pop
jmp
ret
mov
mov
insl
cld
outsl
mov
hlt
pushf
das
lahf
sbb
cmp
xchg
jbe
shlb
fwait
lods
ror
xor
mov
and
mov
jbe
popf
cmp
push
add
mov
cmc
pop
mov
stos
test
mov
rorb
jle
mov
or
or
insb
dec
xor
push
xor
mov
pop
scas
ret
mov
negb
aam
in
sbb
jle
push
push
insl
or
nop
or
pop
testb
call
test
sbb
xchg
cmpsl
lahf
sub
mov
sub
inc
xchg
ss
test
inc
cli
or
mov
jg
aad
ds
pop
icebp
xchg
cmp
repnz
ljmp
scas
imul
cs
xor
dec
push
cmp
fstpl
mull
sub
jbe
xor
cmpsb
mov
dec
dec
ja
push
sbb
iret
in
cs
cmp
adc
rcrl
push
js
lods
or
push
lret
leave
inc
cmpsl
ficoms
mov
aas
repnz
mov
lock
lock
sbb
imul
push
scas
jge
shll
mov
pop
add
sub
xchg
or
out
fwait
mov
in
push
push
je
and
xor
into
bound
jbe
mov
not
lret
xor
pop
xchg
addr16
cmpsl
mov
inc
push
mov
fiadds
stc
stc
ja
orb
xchg
mov
insl
lahf
inc
mov
shll
xchg
pop
xchg
pop
mov
or
fists
daa
sbb
xor
dec
push
cmpsl
test
les
enter
call
or
in
cld
and
rcrl
and
lods
xchg
sysenter
xlat
stos
test
pop
das
push
rorl
js
push
lret
fidivl
push
faddl
dec
xor
scas
daa
adc
ja
insl
mov
call
fldcw
pop
out
adc
insb
xchg
ret
mov
out
jmp
in
push
lret
mov
inc
mov
jbe
popa
xchg
scas
pop
loop
xor
jns
pop
lods
mov
int3
adc
pop
std
mov
xchg
push
lret
out
xchg
jnp
test
testb
repnz
jmp
daa
mov
sbb
mov
sbb
jecxz
mov
int3
push
icebp
ret
int
ja
xchg
movsb
adc
sbb
xchg
in
daa
sbb
push
les
push
push
sbb
jg
addr16
out
adc
sub
inc
mov
push
jmp
sbb
pcmpeqw
iret
mov
push
add
aas
mov
insb
and
dec
lods
sub
aas
shll
xchg
rclb
mov
jb
aam
xor
out
xor
add
mov
jmp
pop
cmp
pop
fmull
mov
cltd
enter
repz
pop
rorl
pop
fnstsw
xor
loop
mov
add
inc
dec
xchg
jae
fistps
shl
rcll
pop
roll
xchg
add
shll
or
scas
inc
xor
mov
cli
push
bound
cmpl
and
int
add
push
jg
mov
sbb
and
popf
test
xchg
shll
cmovle
and
add
sahf
xor
cmp
inc
iret
sarb
lea
push
data16
dec
push
jo
sbb
lds
sub
mov
mov
jp
mov
cmp
jae
pop
mov
icebp
mov
pop
out
fisubrl
fsubr
or
scas
push
dec
mov
mov
test
sbb
or
and
sbb
pushf
ficomps
inc
mov
push
mov
xlat
out
sbb
pushf
dec
jge
ret
xor
nop
mov
sarb
or
mov
iret
fwait
inc
lcall
les
xchg
dec
mov
bound
sbb
js
jnp
bound
dec
xor
cmp
int
stc
pop
data16
mov
out
arpl
jae
outsl
mov
addr16
mov
mov
ret
icebp
andl
sub
mov
test
mov
and
add
into
mov
mov
push
dec
mov
and
lods
es
repnz
lahf
inc
icebp
lcall
xor
xor
orb
xor
ret
inc
mov
cmp
jae
and
fcmovb
xchg
xor
cmp
cmp
scas
xor
dec
mov
sub
xor
add
mov
xchg
pop
test
clc
xor
arpl
inc
sub
aas
sbb
dec
data16
scas
xchg
fiadds
daa
fnsave
int
addb
flds
push
adc
adc
lods
inc
insl
jns
add
sub
mov
mov
dec
orb
lods
xchg
cmpsb
xchg
enter
fisubrs
es
xchg
insb
xchg
sub
lods
adc
lods
add
cltd
xchg
mov
jne
imul
push
cmc
adc
push
lret
and
cmc
stc
nop
mov
cmp
out
scas
lock
int
cmp
sbb
and
mov
outsl
xchg
js
jge
xor
push
sub
and
mov
sti
insl
imul
cmp
xchg
mov
lahf
sbb
in
loopne
inc
movsb
inc
aas
adc
mov
addl
sbb
popa
clc
popa
insb
sub
test
mov
sbb
lods
mov
addr16
repz
push
push
jp
mov
movsb
adc
out
sub
xor
adc
les
and
leave
out
fwait
pavgw
js
repz
inc
mov
add
jle
mov
fisttps
dec
inc
lods
popa
xchg
dec
add
mov
mov
das
out
xor
pop
and
inc
mov
js
dec
xchg
add
fwait
ror
and
mov
dec
shlb
bound
xchg
dec
mov
and
mov
sbbb
inc
ljmp
cmc
jmp
fiaddl
push
outsl
fcomps
lret
insb
or
inc
cmp
and
sbb
adc
imul
pushl
cmp
xchg
out
adc
cmp
shrb
mov
push
cmp
and
pop
fs
in
iret
pop
add
mov
or
fidivl
pop
xlat
pop
push
sub
scas
jo
scas
stos
or
lahf
adc
mov
add
aas
mov
pop
cmp
popa
mov
arpl
stos
rclb
push
syscall
pop
mov
sbb
shrl
fsubl
xor
push
push
mov
int3
fcoml
push
push
inc
xchg
adc
addb
inc
rcll
dec
out
cli
scas
into
aaa
xlat
fsubrp
repz
mov
xor
inc
dec
std
aaa
lods
inc
xchg
std
mov
sub
sbb
mov
into
mov
cmp
pop
dec
jl
or
jl
cld
mov
mov
out
push
push
inc
cmp
mov
sti
xchg
xchg
mov
xor
jbe
rorl
in
test
clc
call
arpl
push
jb
pop
subl
mov
das
in
pop
and
add
cmpsl
neg
pop
lock
sub
xchg
add
mov
inc
das
xor
mov
push
es
fucomp
mov
dec
lods
or
loop
mov
pop
cmc
fwait
jns
jo
sarb
mov
js
pop
mov
sbb
js
and
add
pop
jns
popf
mov
and
cmp
sub
mov
je
xor
mov
jnp
shll
jo
out
pusha
sbb
sbb
jae
push
push
lret
dec
push
fidivl
cmc
xchg
or
jns
divb
cmp
lea
jmp
f2xm1
mov
cld
pop
mov
inc
xorb
fisubrl
clc
in
push
jnp
loope
mov
rclb
mov
push
add
jge
or
xchg
cli
andb
setns
push
dec
mov
jnp
aam
loope
and
hlt
add
jecxz
jne
pop
push
das
push
out
sarl
pop
aaa
test
dec
out
jns
repnz
push
mov
clc
xchg
sbb
orb
sub
popa
add
inc
addr16
xchg
adc
mov
sub
jmp
add
sbb
sub
insl
xor
mov
pop
jo
xorl
fmuls
ja
pop
or
cwtl
cmp
arpl
jecxz
xor
ret
mov
jae
addr16
addb
xchg
inc
sarb
stc
mov
test
jb
cld
cmp
mov
scas
mov
cmovae
sti
shlb
mov
xchg
fs
lret
popa
dec
xchg
cld
xchg
or
ljmp
es
mov
inc
jle
mov
pop
push
mov
dec
pop
adc
test
inc
loopne
ret
mov
inc
xor
inc
insb
shrl
aam
ret
cs
pop
xchg
iret
adc
sti
and
aad
inc
cmpsl
iret
mov
and
clc
pop
push
xchg
cli
setg
addb
inc
jns
in
fwait
xchg
cmpsl
daa
out
lahf
cmp
inc
pushf
sub
cld
mov
push
popa
pop
in
sbb
orl
fwait
adc
stos
inc
add
pop
into
inc
mov
iret
test
mov
ja
leave
arpl
pop
mov
pop
ljmp
push
mov
push
cs
cltd
mov
cmp
dec
stos
mov
fdivp
sub
xchg
aad
pop
push
add
inc
or
add
pop
cwtl
jp
sarb
loop
hlt
mov
add
inc
adc
sub
pushf
jne
aad
xor
fisttps
dec
mov
dec
lds
cld
movsl
or
cmpsb
mov
lds
cmpsb
mov
pop
daa
sub
inc
cmp
rclb
inc
dec
test
das
lock
in
inc
lock
hlt
fsubr
push
xor
xchg
ret
and
cltd
test
push
sbb
pop
and
insb
jg
adc
in
fisubl
xor
pop
scas
je
lds
pop
addr16
rclb
inc
jnp
inc
sub
stos
fdivrl
dec
jae
gs
push
add
inc
arpl
push
xchg
add
xchg
cli
mov
cltd
fistl
outsl
adc
inc
push
das
ljmp
adc
fimuls
mov
adc
loop
mov
jmp
jbe
lods
sub
mov
mov
xor
aam
mov
push
mov
aas
pop
stos
xchg
dec
xor
jnp
lods
lock
pop
icebp
add
loopne
outsl
add
shlb
shr
les
mov
fists
xchg
push
mov
jmp
sub
shlb
mov
mov
push
sub
fisttps
and
adc
xchg
jl
andl
fdivrs
mov
leavew
jbe
inc
push
test
push
bound
sbb
mov
mov
fldt
adc
incb
pop
jbe
fstl
sub
je
loopne
lock
aad
cmp
adc
and
outsl
xor
stc
ds
aad
mov
xchg
xor
push
fs
and
pop
lahf
dec
mov
sbb
xchg
imul
add
ja
push
push
push
insl
jmp
add
sub
push
push
loop
in
test
jl
dec
rolb
sbb
xchg
pusha
lods
mov
sbb
mov
xor
mov
into
jl
stc
arpl
adc
pop
data16
insb
inc
cmp
cmp
lds
dec
hlt
add
mov
xor
lds
and
cmp
jmp
adc
lock
pop
inc
jne
cmp
popf
test
std
fs
bound
jo
push
fcompl
cmp
mov
jb
lcall
xor
jl
lds
test
aad
pop
inc
rclb
in
stos
fs
mov
inc
adc
ljmp
xor
push
push
cmp
fsubl
in
and
jns
pop
mov
fsubs
cmp
mov
sub
jmp
cli
sub
sbb
xchg
in
push
push
loopne
lahf
test
mov
in
jecxz
clc
movsl
dec
and
aam
imul
pop
les
scas
mov
je
imul
out
cmpsb
nop
sbbb
push
cmp
jp
test
jmp
pushl
push
pop
jb
ss
push
movb
out
jge
inc
es
mull
pop
in
mov
mov
dec
fdivrs
mov
jg
cmpsb
mov
sub
dec
pop
and
aas
stos
call
xchg
or
jnp
cmpsl
aaa
jne
notl
adc
bound
sub
push
mov
cmc
xchg
repz
xchg
cmpsl
jae
cld
aam
int
mov
icebp
fstpl
movsl
mov
cmpsl
pop
bound
jne
push
call
out
mov
into
pop
fistps
pop
dec
inc
dec
in
mov
push
push
gs
pop
in
add
push
hlt
cmp
adc
movsb
jecxz
jae
sub
dec
mov
sub
add
sahf
jg
loopne
imul
out
jecxz
push
lret
sbb
or
xchg
loope
and
orb
test
fdivl
loopne
jbe
pop
jecxz
test
xlat
arpl
adc
jg
scas
fdivl
mov
push
push
in
xor
clc
inc
ficompl
stc
mov
imul
cwtl
jge
insl
xchg
repnz
sub
and
pop
fdivrs
punpckldq
inc
add
mov
ficoms
ficoms
aad
mov
add
adc
f2xm1
xchg
pusha
sbb
lcall
xor
mul
iret
mov
push
mov
sub
jb
mov
cld
loop
ljmp
ljmp
out
add
hlt
push
and
jecxz
movsl
lcall
push
lds
xchg
call
xor
xor
or
mov
js
sub
js
loope
inc
aad
out
repnz
sub
xor
or
test
sti
cmp
adc
cmpsl
mov
jae
sbb
mov
cmp
pop
fmull
mov
mov
dec
aas
pop
out
sbbb
mov
push
int3
push
inc
inc
into
pop
fdivrl
inc
loope
and
pop
jecxz
fisubs
or
pop
jl
push
jg
aaa
enter
roll
jae
les
mov
out
xlat
jo
ret
mov
fs
cli
testb
test
iret
test
loopne
jge
test
push
and
push
aam
in
jns
cwtl
iret
stos
and
dec
insb
fimull
mov
mov
sbb
mov
push
fcmovne
xor
dec
mov
clc
in
outsl
pop
pop
mov
mov
cli
and
or
loop
in
dec
je
dec
cs
mov
out
push
xor
loop,pt
sti
loopne
pop
jg
in
jbe
rcll
arpl
jecxz
insb
or
je
xchg
lahf
aad
shrl
sub
and
jl
add
jb
push
outsl
mov
pushf
xchg
negb
sti
push
dec
jmp
repz
cmp
cs
pop
out
roll
xchg
aaa
cmpsb
mov
mov
stos
pop
ljmp
pop
jo
daa
clc
jp
or
pop
sbb
sub
adc
pop
cmp
lds
mov
imul
jecxz
pop
push
xor
mov
pop
fstps
in
bound
shl
and
aas
les
jns
nop
shll
push
int
call
dec
dec
nop
sar
mov
push
add
jge
mov
pop
ss
mov
sbbb
pop
addr16
fwait
push
jecxz
mov
fisttpl
lock
push
cmp
je
into
cmp
sti
push
aas
xchg
push
xchg
pop
xor
and
test
xor
clc
lcall
jle
loope
mov
sbb
push
es
leave
cli
mov
imul
push
push
cmp
push
sub
add
mov
cmp
cwtl
adc
add
es
iret
adc
data16
sub
test
xchg
adc
adc
dec
push
cmp
out
dec
dec
cmpsl
mov
test
movsl
push
mov
movsb
jp
mov
lock
cmp
adc
es
leave
dec
add
jl
stos
hlt
es
sahf
fmuls
es
out
or
stos
ss
fsubrl
xchg
test
mov
pop
push
dec
out
in
fwait
jae
jb
adc
xchg
pusha
mov
pop
mov
je
and
xchg
pop
lods
push
sarl
jmp
inc
dec
int3
test
outsb
popa
aam
dec
test
mov
mov
mov
call
dec
fmull
lods
mov
push
xor
int
pop
xchg
call
stc
and
pop
dec
push
sbb
orl
sub
arpl
test
and
fadds
in
out
cmp
jo
push
pusha
clc
jbe
test
lods
sti
sahf
mov
loopne
rolb
in
out
ds
ret
xchg
dec
out
add
popa
aad
push
into
xor
push
cli
mov
test
fisubs
pop
subl
out
scas
sub
sub
cmpsl
stos
fwait
insb
es
lods
pop
fdivs
inc
in
test
pop
add
daa
xlat
test
stc
cmp
inc
je
stos
jmp
pop
push
fcmovnu
sahf
mov
push
and
mov
dec
push
outsb
jno
dec
subb
fnstenv
cmp
cmp
mov
rcl
jnp
repz
cmc
ret
dec
shrl
sub
mov
mov
stos
lcall
pop
andl
cltd
out
daa
lods
icebp
mov
por
and
enter
data16
cwtl
inc
and
fbstp
xor
movsb
fistpll
jp
sarb
mov
cmp
mov
imul
cmpl
mov
out
cli
jecxz
xchg
or
test
mov
mov
aam
cmp
test
ja
push
mov
mov
jbe
sbb
and
popf
mov
adc
clc
mov
and
nop
test
inc
inc
jno
sub
cmpsl
shrl
inc
push
inc
xor
inc
mov
shll
das
ss
insl
pop
fisubrl
mov
ja
call
pop
and
mov
arpl
push
and
jns
mov
xchg
push
aam
cmp
pop
ffree
lret
lods
jle
xchg
or
inc
push
loope
dec
cmp
mov
mov
or
push
or
jnp
add
jecxz
adc
test
fidivl
cmp
fidivl
and
cmp
psubw
imul
in
cmpsb
sbb
loopne
cli
lods
jne
or
arpl
jns
sahf
nop
mov
mov
mov
mov
jge
loop
mov
enter
xchg
test
push
mov
insb
fdivs
int
movsl
inc
mov
std
cmp
add
insb
ds
in
inc
mov
push
or
das
fidivl
ficompl
out
xchg
pop
mov
incb
sbb
out
scas
xchg
rclb
adc
mov
adc
adc
or
xchg
adc
movsl
addl
jmp
lcall
push
cmp
sub
cs
cld
adc
jmp
xorb
inc
jmp
xor
push
scas
pop
mov
add
insb
imul
mov
aas
fcoms
lcall
out
pop
call
mov
fwait
xchg
fisttps
xor
mov
fcoml
push
test
mov
adc
aam
push
dec
insb
mov
mov
xchg
sbb
ljmp
xor
scas
stos
sub
test
push
nop
jb
or
cld
test
test
ljmp
xlat
push
popf
sub
push
mov
inc
adcl
pop
sbb
mov
jo
push
mov
int
and
and
in
in
scas
mov
and
jp
sahf
push
bound
ljmp
xchg
int
cli
out
inc
or
push
xor
rcl
mov
loope
xchg
jl
loopne
cmp
cmp
jmp
mov
incl
inc
cmp
cs
mov
xchg
dec
insb
popf
push
imul
mov
add
std
jne
jo
xor
mov
jl
xchg
adc
test
scas
pop
push
and
mov
popf
addb
rcrl
test
lods
pusha
stos
arpl
xchg
popa
mull
cmp
imul
lds
aad
cli
lock
push
xor
xor
push
mov
test
stc
int3
sbb
push
sub
push
xor
imul
add
mov
sub
outsl
loope
jne
pop
add
xchg
and
mov
sbb
xchg
or
lea
adcl
fimuls
jae
pop
mov
jb
xchg
push
in
push
loop
mov
lods
cmp
divb
pop
xor
inc
js
push
gs
sbb
das
inc
jae
cli
mov
lcall
sbb
popa
adc
push
cli
stos
pop
cltd
in
shll
stc
pop
and
push
add
mov
gs
lds
inc
cmp
or
ja
sub
push
pop
add
jmp
ss
popa
mov
scas
xchg
cltd
push
add
call
cmc
cmp
outsl
cmp
popf
mov
lock
int3
cwtl
pushf
pushf
sbb
sahf
out
xor
adc
sub
xorl
mov
data16
data16
jge
fs
and
sub
pop
adc
in
xchg
pop
push
cwtl
ret
pop
dec
or
or
pusha
pop
test
dec
out
sub
jmp
xlat
push
push
push
xchg
scas
stos
sbb
and
cwtl
stos
cmpsb
and
sbb
cbtw
inc
and
mov
mov
pop
xchg
int3
mov
jecxz
and
loope
mov
outsl
inc
addr16
subl
xchg
stc
mov
mov
or
pop
jo
cmp
stc
mov
pop
jns
push
fstpl
out
or
cmpsb
insl
inc
aas
adc
adc
ljmp
xchg
test
cmpsl
int
aad
aaa
outsb
ja
inc
movswl
aas
sub
pop
imul
movsl
xor
fists
in
arpl
repz
mov
jmp
ret
cwtl
popf
lea
and
dec
mov
sub
xchg
jns
dec
mov
leave
leave
and
cld
mov
mov
sub
andb
hlt
jge
mov
xor
sbb
or
fsubs
sub
xchg
test
adc
cmp
push
ret
sub
jne
pop
jo
ret
push
aas
es
mov
xchg
mov
jg
and
clc
adc
pop
mov
arpl
leave
clc
fimuls
out
nop
outsb
push
test
jg
push
adc
push
mov
adc
xchg
xchg
out
jo
fcomi
dec
lcall
xor
aaa
xlat
mov
int
shll
lock
hlt
in
jae
or
xorl
jmp
or
lret
or
mov
aad
jmp
mov
stos
xchg
sub
jb
ljmp
jg
pop
mov
dec
jmp
test
sub
jnp
sub
inc
mov
pop
add
push
les
jmp
in
pop
push
add
shrl
fiaddl
xchg
addl
mov
inc
xchg
sub
push
sub
insl
or
dec
push
clc
rorb
dec
lods
sti
add
lods
cltd
cwtl
mulb
mov
in
in
and
cmp
cmpsl
cltd
mov
lea
and
lods
mov
enter
jb
movsb
jle
mov
testb
fdivrl
test
sbb
sti
inc
inc
sbb
fstl
mov
test
dec
fwait
mov
imul
mov
ffreep
cwtl
adc
mov
gs
and
mov
jmp
dec
pop
dec
add
inc
mov
xchg
fadd
sbb
imul
repnz
mov
adc
mov
dec
stos
dec
jecxz
lods
ljmp
call
jecxz
es
mov
ja
les
fbld
push
and
lret
sti
xor
push
stos
jecxz
icebp
jecxz
clc
movsb
int
mov
mov
cmp
sub
push
mov
movsl
pop
mov
adc
aaa
dec
dec
xlat
dec
sub
out
ret
inc
enter
rcrb
mov
mov
mov
aam
repz
stos
ret
push
xor
inc
aad
adc
mov
and
push
pop
jmp
or
push
xor
and
xor
ficoms
aam
pop
or
and
ret
or
aas
outsl
out
mov
fnstsw
sub
mov
cmpsb
inc
stos
cmp
mov
arpl
notb
xlat
pop
xchg
or
xor
cmp
outsb
mov
rol
push
mov
aas
loope
mov
cmp
adc
xlat
jne
push
mov
cmp
insb
jo
cmp
push
mov
jmp
jge
jmp
ret
xlat
cmc
pop
repz
aas
int
xor
jo
clc
out
mov
dec
ljmp
popf
lods
fcoms
xor
fistpll
stc
aas
and
xor
cmc
mov
push
cmp
xor
mov
fstl
es
stos
and
sbb
dec
test
psubw
pop
popa
lods
std
aad
repnz
or
movsb
add
mov
mov
test
xor
jmp
imul
jmp
cltd
mov
fimull
lret
mov
mov
bswap
enter
out
jae
mov
andb
dec
mov
inc
cmpsl
outsb
pop
sbb
push
mov
test
mov
xchg
cmp
adc
adc
jo
dec
mov
movsl
pop
outsb
xor
ret
xlat
sub
sub
fs
pop
fcoms
pop
test
sbb
mov
loope
roll
mov
sarl
lret
scas
sti
pop
jmp
aad
and
call
pop
sub
add
or
test
xor
je
sbb
roll
fstp
dec
mov
cmp
test
xorb
scas
cltd
cmp
loop
lcall
cmp
arpl
sar
ret
cs
or
shlb
mov
mov
sbb
in
add
aad
add
xchg
sbb
mov
mov
dec
cmp
sub
cmpsl
ret
sub
inc
out
lods
jmp
lods
mov
push
or
cld
lret
pop
jae
and
xor
pop
xchg
adc
gs
sbb
shll
cmp
cmp
lret
sbb
and
lock
lock
mov
or
xchg
bound
ljmp
pop
cltd
add
popf
fildll
mov
cmp
xor
repz
cmp
xor
pop
xchg
mov
cmp
pop
test
sarl
sub
roll
and
test
mov
ds
shrl
pop
dec
dec
jo
mov
ljmp
fnstsw
mov
or
add
sub
imul
mov
ja
nop
lock
shlb
mov
notb
enter
pop
xchg
addr16
and
lock
aad
imul
cmp
xchg
testl
sbb
test
gs
fldcw
dec
xor
stc
xor
dec
inc
lds
loope
and
movsl
jo
je
insb
mov
pop
push
pop
decb
imul
lds
pop
xchg
inc
fwait
jg
fisubrs
mov
sub
loop
outsb
fwait
push
or
rcrl
ret
in
xor
mulb
es
mov
jb
out
imul
inc
lods
or
jne
movsl
push
jno
imul
adcb
mov
mov
xchg
push
cmp
cld
xchg
loop
sbb
ja
shll
addr16
xor
out
mov
jl
mov
xchg
add
shll
aam
push
cmc
lcallw
shr
jmp
xchg
ret
dec
cmpsl
adc
inc
les
pop
push
gs
add
add
pop
dec
pushf
subb
jo
loop
mov
cmp
lds
push
mov
dec
pop
sti
xchg
sbb
pop
cld
repz
mov
mov
dec
and
pop
pop
aaa
je
mov
fwait
lock
fmul
cmp
and
rorl
leave
sahf
and
aaa
dec
pusha
push
jmp
cwtl
movsl
enter
push
inc
dec
jmp
pop
fwait
pop
dec
cltd
cs
pop
test
xor
jecxz
mov
xchg
mov
sarb
jmp
push
imul
and
stos
int
jb
lcall
push
xchg
pop
jp
push
into
xor
jmp
addr16
imul
push
daa
mov
es
fbld
mov
das
push
stos
lea
mov
jbe
stc
adc
cmp
mov
fs
scas
in
mov
mov
dec
rcll
arpl
inc
lahf
mov
xchg
nop
aaa
mov
mov
pop
pop
mov
push
out
cld
pushaw
pop
jl
ds
pop
int3
aad
push
das
pop
pop
push
daa
icebp
arpl
sbb
mov
sub
cmp
arpl
in
cmp
xor
jne
out
cmpsb
add
add
xchg
scas
ljmp
rorl
lret
sub
fists
sarl
das
and
jb
sub
aam
mov
dec
cwtl
lahf
jno
or
pop
lds
sub
inc
js
popf
imul
clc
sbb
stc
int3
or
dec
add
and
sti
ja
aad
pop
add
fbld
sub
lahf
xor
in
and
dec
clc
mov
adc
in
push
jbe
test
xlat
pop
mov
pop
lcall
or
mov
mov
roll
sbb
pusha
and
popa
ljmp
dec
and
nop
aas
pop
adc
stos
mov
lret
rcrl
mov
dec
insl
pop
mov
movsl
je
stc
stos
aas
push
pusha
nop
iret
shlb
and
insl
mov
cwtl
pop
bound
fistps
dec
push
lret
stos
or
mov
and
xchg
out
xor
orb
sbb
mov
or
in
adc
insl
out
xor
pop
and
ret
arpl
clc
pop
push
xchg
mov
in
popa
and
mov
outsl
xchg
jg
aam
outsl
mov
pop
fsubl
or
xchg
and
in
scas
jp
popf
jl
scas
test
xchg
das
sub
into
inc
popa
mov
mov
mov
fists
or
adc
pop
mov
mov
cmpl
inc
push
pop
and
mov
cld
mov
xor
int
std
xchg
nop
add
les
pusha
adc
mov
push
push
push
test
dec
sbbb
inc
xchg
mov
out
in
ret
aam
xchg
xlat
enter
push
stos
sbb
jbe
or
cmpsb
mov
arpl
adc
test
pop
aaa
aam
scas
int
shlb
mov
and
jno
jle
xlat
outsl
inc
jp
jo
mov
cmc
addr16
xor
mov
scas
and
cmp
xor
jne
cs
les
dec
movsl
mov
jl
push
push
enter
jo
mov
xchg
jno
addr16
imul
daa
out
adc
jge
in
mov
adc
ljmp
push
inc
push
and
jle
jbe
movsl
push
pushf
das
mov
jbe
cmpsb
outsl
test
jp
arpl
or
push
mov
push
sarl
add
fwait
sbb
sub
mov
cli
jnp
inc
stos
outsb
adc
repz
js
imul
mov
sbb
jnp
ljmp
ljmp
push
push
lahf
aad
stos
mov
inc
enter
mov
pop
add
arpl
sub
pop
popa
push
fsubl
and
shrb
adc
dec
mov
or
and
aaa
mov
jecxz
xchg
js
repnz
mov
sub
fcoml
xor
cld
push
mov
jo
popa
outsl
or
push
mov
and
inc
lods
pop
add
icebp
jno
ret
and
xor
fs
push
mov
push
mov
mov
pop
clc
vpaddusw
lahf
bound
out
test
jecxz
stc
mov
loope
lods
scas
xchg
mov
or
icebp
cmp
out
jb
mov
sub
cmpsl
bound
jns
enter
jbe
mov
cmp
insb
sbb
cmpsl
stos
cmpsl
fstp
repnz
lds
jmp
push
sub
mov
xchg
addr16
adc
cmpsb
dec
mov
bound
fcomip
mov
push
imul
stos
push
jmp
jecxz
repnz
jecxz
test
jnp
lods
push
arpl
mov
out
pop
fsubl
jne
scas
scas
cld
mov
iret
roll
jecxz
pop
or
jo
out
sbb
adc
xor
les
ljmp
arpl
pop
and
test
fildl
xor
insl
call
lret
movsl
dec
mov
lret
int3
jg
testl
sahf
pop
cmc
push
sbb
loopne
xchg
push
push
add
adc
les
call
std
cli
jne
xchg
mov
pop
sub
rorl
test
testb
ss
ficoms
xor
es
or
xlat
popa
cmp
movsb
mov
jge
jns
sbb
hlt
rcr
leave
leave
add
sbb
add
mov
xchg
shrb
sahf
insb
mov
call
pop
mov
daa
loope
ljmp
mov
push
mov
mov
mov
dec
and
gs
outsl
insb
ror
fwait
xchg
roll
test
and
jo
and
push
mov
into
pop
sub
into
test
mov
sub
std
es
jbe
push
fmull
xchg
mov
test
add
sbb
push
adc
pop
lea
mov
inc
cmp
sub
and
pop
dec
cmc
push
jae
mov
scas
jmp
or
enter
inc
sub
jl
cmc
popf
sbb
push
aas
out
add
outsl
lcall
loope
jae
push
pushf
xchg
pop
sub
or
and
cmc
xchg
daa
stos
into
test
mov
push
lods
and
pushl
out
pop
clc
insl
sar
js
inc
fidivl
lock
nop
xlat
mov
call
mov
pop
mov
mov
ret
ss
xor
cmp
lahf
vmread
cmp
jbe
scas
push
jecxz
jp
adc
shll
insl
mov
ds
xor
mov
stos
filds
loop
dec
jmp
inc
sub
shr
enter
xor
cld
sub
mov
mov
and
mov
mov
lahf
mov
loopne
sbb
stos
fsubrs
rcll
sub
inc
filds
push
xchg
or
inc
cli
icebp
mov
jb
sarb
ret
dec
stos
mov
popa
cmc
adc
loope
imul
inc
cmp
inc
mov
push
and
push
xorb
push
jl
push
mov
dec
nop
movb
and
xchg
and
aam
hlt
imul
cmpsl
imul
cs
xchg
add
pop
lret
lahf
fwait
insl
mov
aaa
mov
push
mov
repz
sbb
or
rcll
cld
movl
nop
movb
jne
lret
repz
insb
mov
lcall
jnp
aas
sub
loop
cmpsb
hlt
cmp
inc
fdivs
mov
adc
mov
and
sub
push
pop
jnp
mov
inc
test
dec
dec
inc
jmp
das
cmpsl
mov
xchg
xchg
fdivrl
add
and
imul
repz
fldt
push
negl
inc
testb
xchg
andb
addr16
cmp
lahf
int
neg
loope
loope
notl
addr16
inc
lret
xchg
and
push
mov
repz
mov
xchg
xor
les
outsb
ficoml
xchg
outsb
pop
rcr
rcll
fidivs
add
imul
xor
pop
mov
sbb
jnp
cmp
add
test
je
jnp
adc
shlb
sbb
incb
test
arpl
adc
pop
scas
mov
mov
sbb
adc
aas
mov
repz
stos
mov
xor
mul
mov
xor
pop
lds
fldl
ss
pop
push
xchg
or
es
jo
movsb
clc
and
pop
cmp
fwait
test
imulb
jmp
or
sbb
pop
fimuls
adc
shrb
xchg
sub
sarl
ret
mov
in
fwait
push
jbe
aad
xchg
dec
int3
inc
test
dec
xchg
test
sbb
mov
mov
and
fmuls
mov
clc
into
sbb
xlat
popl
pop
jmp
negl
test
dec
enter
push
xor
mov
enter
add
daa
jbe
adc
hlt
xchg
nop
dec
push
bound
xlat
and
int
aas
out
push
testb
adc
inc
xchg
cmp
pop
xor
ljmp
ds
mov
dec
out
les
push
jo
push
jns
jle
outsb
fsubrs
dec
mov
shlb
je
dec
sub
push
es
and
imul
pop
ja
test
shrb
mov
dec
mov
sub
dec
add
fcomi
ljmp
inc
dec
imul
je
jns
and
push
jle
mov
iret
inc
jns
inc
sbb
push
iret
pshufw
and
and
sbb
popa
xor
push
ret
xchg
or
bound
pop
into
mov
pop
adc
test
cmp
cld
aam
jns
push
cli
cmp
pop
mov
cmp
fwait
popf
aas
fst
jo
sub
sbb
add
mov
jno
in
jp
ljmp
mov
sbb
fidivl
pusha
mov
imul
jmp
daa
push
out
xchg
call
xor
dec
or
xor
mov
and
dec
seto
rorl
aad
mov
adc
push
dec
ljmp
mov
shll
gs
xlat
stos
pushf
or
cld
jmp
iret
cmp
rcrb
jle
xor
hlt
and
scas
pop
adc
sub
bound
cs
pop
sub
jle
hlt
push
jno
subb
mov
pushf
loopne
mov
daa
and
xchg
jae
test
jb
or
aad
stos
fwait
push
repz
lret
xchg
jmp
rcll
pop
add
xchg
adc
mov
pop
pop
dec
adc
xor
test
in
or
pop
out
xchg
cmpsb
ret
aad
sub
fimuls
insl
adc
subb
in
int
mov
jp
and
cmp
xor
in
daa
stc
addr16
xlat
outsb
jo
and
shlb
lret
sbb
mov
mov
or
outsl
dec
xchg
test
into
push
sub
ja
pop
lods
mov
adc
movsb
rcrb
add
jb
adc
out
daa
aam
test
out
mov
imulb
loop
dec
fdivrs
inc
stc
arpl
das
imulb
and
stc
arpl
pop
in
fcmovnb
cltd
and
mov
adc
sub
aad
mov
loope
xchg
jmp
sub
mov
mov
adc
and
js
mov
xlat
and
pop
pop
movsb
into
cli
arpl
sub
andb
inc
ljmp
stos
mov
mov
jmp
fists
into
or
fisubs
jns
sub
hlt
test
xchg
les
jl
loopne
pushf
cmp
shll
jne
rorb
sub
push
arpl
in
enter
out
sub
movsl
lret
pop
jg
gs
add
pop
or
icebp
adc
sti
dec
add
rorl
push
cmpsb
aam
push
xchg
fldl
int
fadd
outsl
fbstp
cwtl
xor
pop
push
xchg
cwtl
enter
loopne
dec
movsb
sub
out
call
cmc
repnz
inc
lahf
mov
ja
sub
push
lock
loop
lahf
add
mov
and
sub
in
adc
xor
mov
movsl
pop
repnz
xchg
lcall
mov
movsl
pop
mov
jb
pop
push
lahf
inc
jnp
sub
mov
pop
or
mov
lgs
repnz
adc
ret
adcb
mov
mov
cmp
scas
adc
mov
pushf
lds
xchg
clc
leave
divb
clc
mov
subl
movsl
popa
inc
and
cwtl
lea
mov
les
gs
xchg
adc
pusha
mov
adc
lcall
fistl
push
sub
jl
push
fs
in
pop
loope
and
add
sbb
repnz
out
push
and
inc
xchg
dec
movsb
jne
cmpsl
in
lods
mov
jmp
addr16
lahf
andl
out
push
out
pop
data16
pop
mov
dec
cmp
xlat
je
ret
jle
cmp
adc
xor
bound
mov
sbb
adc
lret
inc
fistl
and
inc
rcrb
fisttps
pop
inc
test
mov
lods
in
mov
push
scas
xor
mov
xor
subb
test
dec
xchg
mov
mov
mov
push
adc
push
xor
mov
adc
ss
mov
in
cmp
clc
push
jg
pushf
add
push
insl
mov
jns
idivb
xor
cmp
xchg
cmp
in
xor
cwtl
decl
es
sahf
stc
dec
loope
jecxz
out
pop
js
and
repz
jae
cmp
and
inc
mov
sbb
data16
cmp
lods
rcr
ljmp
mov
or
or
push
ds
ret
repnz
jmp
imul
mov
sbb
ror
std
mov
mov
pop
xor
jo
aam
in
inc
adcl
cmp
adc
mov
addr16
add
sbb
jp
in
scas
push
fsubrs
pop
fwait
int
mov
adc
mov
orl
idivb
xchg
repnz
jno
dec
aaa
aaa
mov
jl
cmp
push
btc
sbb
mov
push
das
pop
leave
xor
call
sbb
adc
test
push
jg
pop
and
xchg
scas
pop
test
sub
cmp
dec
out
repz
inc
pcmpgtd
xchg
loop
jb
jge
jo
pop
cvttps2pi
add
aaa
mov
pop
pusha
mov
shll
jb
and
xchg
imul
sahf
and
ret
dec
mov
je
stos
test
shll
adc
mov
mov
dec
add
jg
jbe
add
add
xchg
dec
cmc
xchg
scas
call
push
jmp
stos
xor
pop
mov
test
cwtl
inc
test
jns
add
movsl
mov
push
fistpl
cmpsl
add
iret
mov
mov
xchg
hlt
sti
ds
jecxz
data16
jmp
mov
mov
je
or
ret
adc
dec
bound
xor
pusha
stos
mov
sub
dec
sub
jns
xor
xchg
or
inc
add
mov
push
pop
call
test
adc
jmp
xlat
xor
mov
repnz
sub
lahf
subb
or
andb
inc
mov
cld
sub
jp
stos
sub
mov
or
mov
xchg
cmp
cmp
mov
xor
movsl
push
rcrl
enter
cmp
adc
pop
push
jl
lret
mov
lret
mov
aam
aaa
out
add
cs
imul
mov
rol
xor
shrb
inc
sub
add
mov
iret
jle
sbb
incb
push
lds
outsl
in
add
and
cmpsl
test
add
push
gs
cmp
mov
inc
insb
je
push
scas
jae
mov
xchg
mov
lret
push
push
lock
push
pop
mov
lret
add
xor
dec
pop
xor
enter
adc
and
scas
stos
lods
popa
dec
push
cld
cmp
dec
mov
and
jle
scas
mov
cmp
ret
out
and
mov
inc
iret
adc
sbb
inc
jo
fisttpl
idivb
cmp
mov
or
addb
inc
gs
out
movsb
fstl
mov
mov
jg
pop
shll
outsb
test
add
je
add
xor
jl
mov
shrb
js
fistps
enter
add
repnz
adcl
mov
mov
push
aas
vaddsubpd
in
xchg
push
push
push
lret
xor
inc
cmpsl
inc
icebp
jne
sub
and
test
or
lahf
outsb
mov
adc
ss
add
xchg
ret
das
dec
push
push
adc
push
xchg
xlat
pop
push
gs
mov
aam
repnz
test
jp
mov
push
or
insl
repz
fstps
in
sbb
frstor
frstor
sub
jp
dec
cld
xchg
lret
fmuls
pop
outsl
push
mov
es
in
push
mov
mov
inc
xchg
ljmp
dec
push
cmp
mov
push
mov
and
pop
mov
in
ret
stos
sarl
lea
aam
mov
fwait
inc
movsb
sbbb
movsl
mov
les
loop
in
pop
cmp
push
push
pop
fcoms
sti
jg
jl
testb
xchg
push
hlt
int3
in
push
nop
cmc
jmp
icebp
cmc
xorl
rcrl
add
lods
or
aas
or
jne
push
push
adc
lds
jmp
xor
inc
insl
les
insl
jbe
mov
scas
cwtl
inc
bound
inc
scas
mov
lea
pushf
add
idivb
add
adc
daa
aam
in
xchg
sti
das
mov
jb
cmp
sub
dec
ficompl
fisttpl
sub
add
mov
inc
in
repz
jg
into
cmc
jl
xor
mov
gs
jne
mov
mov
in
out
or
cmp
jo
movsb
test
out
test
das
test
mov
inc
sahf
fistpll
jbe
mov
mov
inc
mov
insb
call
xchg
daa
pushf
xor
push
clc
popa
outsb
mov
sub
sbb
push
xchg
jmp
cmp
adc
scas
xchg
out
pop
sbb
in
jno
cld
jmp
jne
pop
sbb
sub
mov
int
mov
mov
cld
add
jmp
out
dec
cmp
cld
outsb
cld
push
lcall
insb
and
into
loop
add
mov
test
outsl
insl
clc
popf
inc
mov
cmpsl
cmp
popf
xchg
mov
sbb
adc
lods
sbb
jmp
push
movsb
dec
mov
into
and
scas
stos
dec
mov
cld
mov
jbe
dec
cmp
mov
testl
stos
push
mov
mov
cmp
shll
mov
push
mov
lds
inc
sti
push
add
lds
mov
test
les
testl
jge
jo
insb
cmpsb
pop
fsubp
inc
jmp
dec
cmc
adcb
leave
std
mov
pop
pop
sahf
roll
test
mov
scas
mov
mov
jno
stos
mov
lods
sub
ds
xlat
fstps
add
adc
and
aas
es
and
mov
jns
push
adc
mov
imul
orl
enter
xchg
mov
into
jo
dec
lea
push
push
or
outsb
push
cmp
xchg
inc
or
into
jge
movsb
jg
icebp
dec
adc
pop
dec
outsl
insl
out
fistl
jno
xlat
aaa
adc
mov
mov
ljmp
inc
jae
mov
fwait
dec
or
mov
cmp
push
movsb
dec
in
in
sarb
mov
pusha
cwtl
pop
jle
add
pop
dec
push
insb
fdiv
arpl
jle
loop
bound
aaa
lds
dec
lahf
inc
fs
stos
testl
mov
mov
xchg
cmpsb
divps
sti
imul
fidivrs
aas
out
xchg
fcomp
xchg
inc
js
cmpb
push
fs
cli
sbb
lods
insl
mov
inc
mov
xchg
out
sbb
js
add
test
jge
stos
sub
jmp
or
roll
notb
cmp
loopne
mov
aam
adc
je
jno
xor
mov
test
pop
add
iret
shll
arpl
popf
or
and
les
jne
sub
dec
or
jns
popl
hlt
test
mov
mov
inc
pop
xor
dec
ss
pop
out
fwait
ja
xchg
movsl
push
cmp
decl
add
mov
and
or
xchg
cmp
ss
dec
mov
es
pop
jb
add
xor
cmp
lods
mov
sub
jmp
ret
xchg
loope
cs
pop
pop
or
lods
pop
jne
push
jmp
xorl
cltd
jo
jb
movl
cmp
sbbl
mov
jge
adc
sub
insb
clc
fnstcw
scas
out
cltd
mov
test
test
aad
pop
lret
jae
fstl
add
cmp
aad
push
les
adc
or
xchg
push
push
jle
xchg
fwait
shrb
shr
decb
sub
cwtl
cwtl
movsb
lret
rclb
dec
enter
and
push
pop
xor
push
jp
inc
andb
aas
stos
stos
mov
fidivl
repnz
sti
ret
and
das
push
push
inc
mov
dec
inc
pop
jb
gs
cwtl
out
nop
xchg
xor
in
jae
mov
mov
stos
pop
push
sbb
loop
xchg
outsl
xor
orb
div
loopne
insb
loop
mov
iret
test
fcomip
push
push
stos
xchg
lcall
aas
sbb
lods
punpckhwd
and
adc
xor
cmp
scas
outsb
rcrl
xor
int
xor
xchg
pushw
or
mov
pop
popa
mov
mov
add
daa
stc
dec
movsl
aaa
in
dec
lea
icebp
int
xchg
outsl
outsb
xor
int3
movntq
mov
and
xchg
xchg
arpl
pop
int3
imul
sar
lea
xchg
jbe
jo
das
je
sub
or
lock
cmp
psubusw
mov
lods
xor
dec
insl
jle
adc
gs
push
stos
sub
mov
shl
insb
adc
inc
ss
cld
insb
xchg
inc
ljmp
jno
add
lds
jmp
pop
in
sbb
and
je
or
sbb
testl
icebp
sbb
xor
pop
shrb
pop
cmp
lahf
ss
repz
out
adc
jnp
jecxz
test
insb
sub
or
test
dec
cmp
imul
ja
push
test
loope
mov
clc
sub
jmp
push
fadd
test
hlt
popa
jl
test
xor
mov
aaa
mov
jb
divb
push
sbb
jl
mov
test
xchg
xor
mov
into
in
mov
mov
test
pop
sub
popa
mov
shl
add
add
push
sar
dec
dec
push
and
imul
shr
push
cwtl
mov
dec
add
cmp
pop
jb
inc
lock
mov
push
xchg
lret
ss
lahf
addr16
sbb
jae
xchg
data16
clc
std
movsb
out
mov
xor
sub
mov
idivb
popf
fnstsw
add
enter
lcall
mov
scas
clc
sarl
mov
hlt
xlat
jbe
pusha
cmp
xor
arpl
cmc
or
faddl
aam
rcll
aaa
rclb
mov
sahf
int
sub
adc
clc
lods
rcr
scas
jnp
xorb
jo
cltd
repnz
mov
out
clc
add
jnp
pop
sti
jle
sbb
fbld
and
mov
test
data16
leave
xchg
mov
int3
adc
aad
fs
push
mov
dec
cld
les
int
push
pop
inc
shl
jg
aas
push
sahf
cmp
dec
frndint
lods
mov
in
out
cmp
cmpsl
lret
out
jp
es
push
dec
data16
arpl
shr
push
test
inc
or
adc
push
mov
ja
sbbl
popa
stos
sub
add
push
sbb
add
mov
jb
mov
and
stos
test
insl
jbe
jg
dec
mov
adc
inc
arpl
mov
out
adc
push
rcr
loopne
test
ror
popf
lods
sbb
or
mov
movsb
xor
mov
cmpsl
fidivs
decl
sub
ret
xchg
sbb
lock
pop
xchg
das
mov
xor
lahf
mov
pop
inc
or
cmpsl
sbb
out
pop
add
rcll
pop
pop
rclb
int3
xlat
lahf
in
loopne
mov
xorl
nop/reserved
call
push
or
out
andb
cltd
or
dec
lods
adc
sbb
rcl
or
xchg
or
stc
mov
sub
addr16
jo
and
sbb
inc
mov
cmp
pushf
or
dec
sbb
mov
out
push
stos
out
push
icebp
and
push
scas
cmpsl
mov
jecxz
jecxz
mov
xor
lds
stos
jle
lods
add
pop
push
adc
aas
fmul
je
lret
iret
in
sub
imul
test
mov
or
in
jno
pop
dec
ljmp
enter
test
and
adc
mov
mov
sub
test
inc
lahf
out
into
scas
cltd
and
sbb
imul
xchg
jnp
mov
leave
push
push
out
xor
and
imul
das
mov
shlb
mov
push
rep
dec
or
sub
mov
jmp
into
data16
mov
inc
push
cmp
sbb
and
fucompp
lock
sarb
pop
lods
daa
lret
sbb
dec
imulb
mov
sar
xchg
sbb
push
push
jnp
jns
ret
or
dec
lahf
in
inc
and
or
fwait
rorl
fildl
push
inc
fnstenv
mov
movsl
pop
lcall
scas
pop
cmc
inc
sbb
sbb
repz
adcb
out
aaa
cs
jne
cmpl
pop
insb
es
add
iret
sbb
lock
fadds
jge
andb
and
outsl
mov
aaa
repnz
lcall
test
fistpl
arpl
loop
lcall
pop
pop
mov
push
lret
in
repz
pop
ljmp
lods
ljmp
xchg
movsbl
jne
push
mov
cmpl
pushf
or
hlt
adc
xor
hlt
loopne
stos
in
pop
xchg
mov
out
cltd
dec
insb
cli
pop
repnz
repz
cmpsl
pop
frstor
jle
push
xor
std
jl
jo
lock
ljmp
adc
mov
jge
push
aam
imul
cmpsl
stos
out
xchg
or
sarb
adc
inc
lock
jl
push
lods
ljmp
test
outsl
nop
push
push
mov
dec
xor
add
dec
fidivrs
sahf
das
push
out
pop
pop
insl
cmp
ret
daa
out
cld
dec
lods
dec
imul
clc
rcl
dec
mov
jb
shrl
add
outsl
dec
push
pop
incb
ds
ds
mov
dec
cmpsb
push
adc
out
ds
bound
add
inc
mov
inc
push
out
sbb
and
ds
cmp
lds
mov
stos
dec
mov
cltd
js
push
push
movsl
cmp
imul
pop
pop
mov
add
inc
pop
inc
fildll
int
adc
in
adc
mov
rorb
addr16
sub
out
jge
cmp
adcb
imul
mov
cwtl
sub
add
and
xor
in
cmc
sbb
lret
xchg
xchg
loop
popf
push
movsl
and
push
cli
lock
add
pop
movsl
stc
or
or
mov
and
push
fstp
push
push
andl
xchg
mov
scas
or
addb
cld
repnz
xchg
dec
addr16
out
std
xchg
fistl
aam
xor
sbb
orb
std
inc
mov
cmp
dec
push
clc
mov
mov
stos
or
dec
out
lcall
mov
ds
mov
shlb
sbb
fisubrs
hlt
fucomip
add
negl
test
pop
aas
lahf
in
mov
fstpl
inc
daa
shlb
ss
es
ss
fcmovnb
pop
add
dec
push
loope
inc
bound
jge
mov
mov
daa
icebp
adc
loope
imull
test
sub
out
mov
lods
add
cmp
out
ret
test
stc
popa
in
jns
into
mov
or
and
mov
add
and
jns
fisttpll
push
mov
inc
shrb
cld
jmp
push
pop
jne
mov
rclb
ljmp
ret
mov
scas
pop
insl
dec
daa
add
outsl
insl
out
mov
jg
jle
mov
enter
sub
ret
dec
sti
add
hlt
sub
mov
pop
pop
repz
adc
test
dec
pop
push
dec
xchg
sti
mov
and
sbb
jmp
fisubrs
mov
shll
pop
stos
ret
std
sbb
pop
mov
cmp
lret
dec
pusha
xlat
movsb
sub
enter
xchg
mov
pop
ljmp
roll
test
inc
stos
cmp
pop
fsubrs
cmp
vcvtpd2dqx
sbb
je
push
test
xor
sub
cmp
mov
mov
int3
adc
sub
inc
popa
pop
test
ror
clc
mov
sarl
mov
inc
shrb
enter
xchg
pushf
pop
pusha
or
std
lret
sbbb
sub
push
rorl
pop
adc
xchg
and
aad
fists
dec
xchg
test
imul
ffree
sub
mov
push
icebp
or
rcrb
fdiv
cmpsl
adc
ret
pop
sahf
scas
int
daa
inc
cmp
cs
dec
jl
repz
mov
nop
lcall
shl
popa
add
inc
sub
add
jecxz
dec
pop
adcl
cmp
dec
or
inc
xor
jae
fcmovb
inc
lods
out
fildl
xchg
out
adc
jbe
arpl
add
mov
arpl
and
mov
les
lret
push
xchg
push
lcall
and
mov
mov
in
push
jge
cmpsl
stos
faddp
test
ror
dec
ja
pop
xchg
push
fisubrs
xchg
lds
insb
pop
lods
aad
test
pop
mov
clc
xchg
aaa
inc
sbb
cmpsl
and
push
stos
addl
stos
lock
sahf
rcr
out
adc
jae
movsb
fisttps
lods
cs
or
ficomps
int
and
adc
out
add
aaa
ljmp
sub
out
mov
addr16
cmp
out
push
shlb
lock
xor
cmp
xchg
cmp
cmc
ja
dec
sub
inc
loop
inc
xor
lret
sbb
lock
ja
xor
insb
lods
je
sub
push
or
rcll
sub
dec
xor
mov
sub
imul
dec
in
cmp
adc
mov
dec
loopne
add
mov
push
clc
clc
mov
fucomip
sub
xor
adc
mov
jge
clc
cmp
inc
test
jne
xchg
sbb
fwait
movsl
jle
clc
xchg
push
cmc
fcomip
shlb
jg
ljmp
dec
mov
movsl
cmp
lock
lret
push
and
ss
dec
aam
adc
xlat
aam
jmp
loopne
sub
fcoms
add
mov
sbb
cmpsl
sahf
mov
int
js
push
lcall
popa
push
mov
jnp
sub
mov
ja
cmp
icebp
cmp
shll
call
rorl
and
mov
icebp
mov
jae
push
inc
outsl
push
es
aad
and
mov
dec
cli
sbb
xchg
mov
lds
jnp
push
rolb
addr16
mov
push
or
sub
outsl
data16
xchg
push
mov
push
aad
loopne
int
or
pop
sub
mov
and
cs
rcrl
jle
pop
daa
sbb
ds
lods
add
adc
in
das
push
cli
add
sahf
loopne
xor
pop
rorl
rorl
gs
sbb
rolb
pusha
fldl
and
sti
aam
int3
xchg
scas
imul
mov
shll
into
pop
sub
sbb
mov
mov
jae
push
sbb
pop
xchg
xchg
ss
add
enter
mov
rol
ja
leave
int3
xchg
push
adc
imul
mov
cwtl
push
adc
lcall
sbb
inc
shrl
jmp
xchg
stos
xor
pop
inc
sub
in
fsubs
cmp
faddl
push
add
lods
mov
js
mov
ss
test
out
add
lret
lcall
sub
mov
fs
roll
xor
jns
sbb
pop
cli
iret
cs
cmp
call
jns
mov
mov
aaa
je
pop
mov
dec
push
pop
mov
js
test
in
sbb
dec
push
lret
cmp
cmp
add
mov
es
mov
jg
shrb
sbb
and
jo
stos
add
push
add
aas
pushl
sbb
dec
outsb
sbb
jge
pop
outsl
lahf
fadds
mov
outsb
pop
lods
pop
cltd
mov
dec
push
dec
adc
mov
jecxz
ja
or
filds
ret
push
mov
data16
adc
push
pop
push
xor
cmp
adc
add
pop
push
std
into
cmpl
jle
fdivl
adc
adc
xor
outsl
mov
cwtl
negb
shr
mov
xchg
mov
movsl
or
jbe
sti
add
mov
cmp
push
cmp
jo
push
xor
sbb
mov
pop
mov
mov
call
inc
dec
mov
jo
jae
and
xchg
jl
push
push
outsl
test
mov
sub
cmpsb
lds
cmp
jae
sub
jo
enter
pop
popf
ss
ja
and
jmp
rorb
jno
xchg
mov
shr
xchg
andb
sub
push
out
std
mov
je
subb
stc
cli
cwtl
movzbl
mov
sarl
mov
push
mov
int
jp
fidivl
cmp
mov
test
jne
lds
data16
inc
stc
cmc
xor
mov
cmp
cmc
je
xchg
sbb
int
out
std
mov
add
ret
cs
call
sub
sbb
dec
dec
std
xchg
imul
xchg
out
subb
mov
lods
clc
mov
cmpsb
clc
int3
rclb
mov
inc
and
xchg
or
cmpsb
in
sbb
int3
sahf
arpl
data16
mov
scas
xor
cmp
sbb
mul
xor
cld
sbb
sarb
inc
sar
fwait
cld
rol
or
xchg
sbb
cmp
xchg
pusha
dec
and
fsub
nop
mov
and
or
repnz
lods
mov
insl
les
dec
fwait
dec
imul
or
repz
xchg
in
jp
inc
imul
insb
pop
add
mov
inc
and
jnp
sbbb
rorb
fnsave
enter
mov
jae
lock
cwtl
pmulhuw
push
inc
fstps
fcmovnbe
out
inc
adc
jle
testl
adc
std
push
pop
lahf
sub
jb
scas
lret
aaa
dec
mov
imul
push
or
xchg
js
rep
int
mov
hlt
scas
dec
fcomps
scas
pusha
fisttpll
jmp
aaa
sbb
fildll
hlt
pop
pop
movsb
xchg
cs
push
mov
jl
les
xor
ja
ja
jle
mov
ret
push
int3
insb
inc
ljmp
out
or
clc
mov
je
mov
cmpsl
mov
mov
lahf
outsb
or
lock
mov
xchg
inc
lret
data16
pop
adc
dec
scas
jmp
inc
je
loope,pn
into
int
xchg
or
lret
mov
aaa
subb
movsb
push
sub
inc
cmp
hlt
test
fistps
mov
add
push
jbe
inc
sub
jge
cmc
pop
dec
iret
mov
rorb
cmc
mov
fs
add
mov
sub
xor
hlt
inc
test
mov
sbbl
adc
pop
scas
pop
out
pop
push
insl
aam
fstps
cmp
mov
mov
jl
jno
dec
out
rcll
daa
ljmp
pop
mov
nop
inc
loop
and
xchg
adc
mov
int3
sub
and
jnp
and
mov
aaa
movsl
inc
sub
popa
mov
push
mov
or
shll
xlat
pop
testl
inc
ficompl
insb
sbb
aam
aaa
fnstsw
push
lods
cld
sti
dec
or
inc
insl
jb
dec
cmp
fmull
sub
ret
test
adc
jg
fstl
in
cmp
add
mov
mov
pop
push
mov
lods
push
fidivl
jp
idivl
in
out
xchg
jp
mov
sbb
int
inc
or
push
lea
out
flds
rcll
sbb
in
or
test
fs
inc
jae
insl
or
mov
mov
outsl
hlt
aaa
dec
dec
cmp
out
mov
sti
jle
xor
cltd
arpl
inc
jb
adcb
out
jmp
subb
es
cmc
adc
fwait
out
js
les
sub
jecxz,pn
mov
dec
or
lds
add
negb
fcoml
out
mov
or
cmpl
adc
adc
pop
jg
decb
or
outsl
jnp
add
fwait
mov
push
bound
ret
ss
lock
adc
movsb
adc
jmp
dec
jp
ds
push
hlt
push
xchg
sub
inc
pop
lret
jnp
xchg
mov
out
inc
adcb
pusha
xor
mov
sbb
sbb
sub
cwtl
xchg
lret
jg
stc
dec
xchg
es
data16
sbb
pop
jo
pop
or
sbb
in
ljmp
mov
or
out
pop
add
dec
ret
enter
les
cmpsl
jns
in
dec
xlat
icebp
mov
cmc
sub
arpl
push
rolb
stos
inc
mov
adc
jge
xor
fsubl
and
cmp
sar
xchg
cmc
xchg
shr
jb
cmp
adc
jecxz
and
dec
leave
mov
fnstcw
inc
pop
notb
bswap
aaa
cmp
cmpsl
add
dec
arpl
ja
push
popa
cmpsl
bound
lret
xchg
or
ficoms
enter
xchg
and
jg
je
loop
jae
leave
cmp
or
xchg
sub
mov
jl
rol
push
jns
aam
stc
and
inc
cmp
cmp
mov
fisttpl
in
test
lods
jae
pushf
dec
sub
shlb
int
das
andl
mov
pop
cmpb
test
mov
shufps
icebp
lock
jge
jp
jb
adc
sti
ret
cmp
cld
jne
sbb
mov
mov
jmp
adc
outsb
sbb
ja
lret
inc
flds
mov
and
and
jge
rcrl
cmp
mov
call
push
dec
cld
inc
mov
fmuls
test
xchg
je
push
je
loopne
inc
xchg
xchg
jl
mov
jns
out
push
xchg
and
mov
sub
jl
add
popa
jl
std
out
cmpsl
dec
cld
aad
xor
aaa
push
mov
pushf
mov
cmp
loopne
and
jae
push
jnp
movsl
mov
inc
aam
fistl
ret
icebp
jmp
xchg
mov
addr16
repnz
mov
stos
mov
mov
add
ljmp
ss
testb
pop
fisubl
xchg
shll
and
mov
sbb
add
je
cmpsl
dec
mov
hlt
push
repz
js
sub
dec
jae
inc
mov
imul
shl
popa
pop
data16
pushf
push
cld
inc
inc
mov
into
fwait
xor
push
mov
mov
call
lods
sub
push
sbb
mov
push
sbb
mov
mov
je
or
scas
mov
aam
cmp
sar
cli
sbbb
cmpl
ja
push
in
xlat
lahf
pushf
add
pop
jle
scas
lea
arpl
mov
data16
mov
xchg
cwtl
push
inc
mov
pop
mov
mov
xchg
movsl
mov
hlt
icebp
dec
or
stos
adc
dec
in
xchg
mov
push
push
clc
push
push
push
xchg
nop
mov
scas
fldcw
leave
popa
inc
mov
test
shl
sbbb
lahf
lds
push
roll
stc
sarl
dec
loop
mov
scas
sub
dec
dec
movsl
inc
xchg
xor
sub
jb
in
dec
aad
cmp
mov
cmp
or
ss
or
sbb
je
fdivrl
pop
jp
out
jbe
in
mov
bound
cmp
enter
inc
pop
daa
sti
iret
mov
mov
mov
mov
push
push
fisttpll
fisttps
mov
cmpsb
lcall
cld
pop
gs
sub
les
add
cmpsb
lods
std
sarb
and
pop
or
cmpsl
inc
or
pop
cltd
test
in
xchg
sbb
mov
stc
or
mov
enter
sub
pop
xchg
adc
jo
mov
shrl
cltd
jnp
adc
stos
leave
andb
je
js
fwait
out
orl
lods
fisubs
jg
lcall
stc
mov
cmpsb
fisubl
xchg
jecxz
pusha
pop
xchg
int3
stc
sbb
xor
lods
mov
push
xchg
in
mov
dec
adc
cmp
xchg
cmc
and
jg
outsb
dec
test
aaa
mov
jno
inc
insb
pop
jp
dec
add
sbb
push
lret
push
out
jb
fnstcw
lods
jbe
xor
test
enter
ret
jae
testl
les
sbb
sbb
fsubr
pop
iret
pop
cmp
mov
and
adc
cmp
sub
push
jae
sbb
shlb
icebp
pop
cmpsb
cmp
mov
aad
xchg
add
mov
dec
jecxz
shl
sbb
add
fildll
ds
es
add
jle
loop
xchg
shl
stc
addr16
testl
mov
sbb
or
pop
dec
add
inc
test
or
adc
popf
pop
adc
xchg
in
ret
cld
lds
sarl
mov
imul
adcb
into
xor
sbb
aad
cwtl
daa
pusha
jmp
jne
rorl
adc
ja
arpl
jge
or
mov
cmp
inc
mov
sbbl
test
mov
dec
movsl
cmp
cmp
xor
fsubrs
imul
cmpsl
inc
loop
or
pop
scas
gs
mov
ja
js
insb
xor
test
sub
sub
stc
mov
sbb
cli
cli
in
push
rcll
push
test
cmpsb
ds
bound
mov
jl
push
mov
lods
out
lock
jns
dec
js
cmp
dec
lahf
arpl
shr
or
test
mov
cmp
dec
inc
outsl
scas
adc
insl
btsl
les
movsl
test
cs
lcall
xchg
mov
ds
lret
fadds
pop
jns
push
inc
outsl
xchg
or
jae
sbb
fsubrl
mov
shrl
lcall
movsb
mov
cmp
lret
scas
lds
cmp
xor
dec
lods
dec
fistpll
cmp
flds
mov
inc
inc
loop
sub
es
dec
mov
xchg
dec
xchg
out
mov
mov
sub
mov
cs
xchg
in
inc
lahf
clc
lds
std
movsl
outsb
in
mov
xlat
sbb
pushf
rol
popa
push
clc
jle
add
and
mov
add
repz
add
insb
stos
dec
jmp
pop
stos
jo
fisubs
mov
jg
femms
xchg
out
mov
adc
mov
or
das
push
jmp
pop
fistpll
pusha
mov
dec
imul
lss
jle
or
lret
jle
aad
test
jno
sbb
fs
dec
pop
push
inc
outsl
push
pusha
add
inc
sub
sbb
xorps
sti
mov
or
int3
and
jns
xor
dec
and
inc
add
cmpsb
cld
xchg
pusha
push
push
iret
cmp
dec
subb
lahf
in
cwtl
mov
mov
mov
sub
andl
mov
adc
mov
cmpsb
fwait
leave
insl
scas
mov
loopne
lahf
subps
aad
scas
pop
or
jmp
push
xlat
and
repz
popa
or
mov
cmpsb
xchg
pop
dec
bound
dec
cwtl
fcomps
imul
fnsave
lods
int
pop
sbb
movsb
sarl
add
scas
push
movl
imul
inc
divl
sub
pop
movb
inc
clc
mov
in
mov
pop
mov
arpl
imul
sub
cli
mov
cltd
pop
xor
jle
mov
repnz
outsb
xor
popf
outsl
mov
stos
test
and
mov
je
outsb
insl
adc
pop
inc
jmp
bound
mov
sbb
jbe
cmp
and
mov
jb
xlat
and
cwtl
jge
ds
xor
sub
insl
sub
int3
jp
or
loop
aam
mov
add
sub
fldcw
add
xlat
daa
lret
fnsetpm(287
sbb
insb
int3
push
xor
ja
and
mov
negl
pop
mov
inc
cltd
inc
jg
sub
testb
xlat
adc
adc
sbb
ss
lods
cs
mov
mov
and
adc
popf
lret
and
sub
sbb
jecxz
mov
js
mov
sti
test
imull
xor
push
pop
xchg
jp
cwtl
cli
cmp
in
test
test
or
test
fwait
ljmp
inc
fs
pop
mov
push
inc
fwait
in
and
xchg
and
add
mov
test
xor
lods
cmpl
and
xor
push
sub
xor
mov
loopne
enter
insb
xor
pop
add
repz
cltd
and
adc
loope
stos
in
pop
push
pop
mov
mov
icebp
in
rorb
jbe
xor
cmp
movsl
mov
pop
daa
lret
xchg
xlat
cmpsb
jp
bound
mov
xchg
lret
xchg
mov
outsb
dec
adc
mov
ljmp
out
test
or
inc
aaa
and
or
inc
dec
shr
repz
push
xchg
ja
jle
jmp
mov
xchg
dec
push
cmp
pop
sbb
std
pop
cmp
sbb
jnp
jbe
lea
ret
lods
in
inc
sbb
incb
or
sub
inc
scas
lahf
inc
sub
jne
and
stos
or
xorb
imul
push
push
push
lahf
insl
lods
jl
inc
mov
fcompl
leave
in
loope
hlt
pop
lods
inc
dec
mov
sub
and
sbb
div
imulb
sahf
adc
mov
testb
outsb
cwtl
repnz
add
inc
lcall
dec
sbb
flds
xchg
outsl
adc
popa
lahf
flds
add
or
rcl
rolb
rol
xchg
pop
mov
aaa
mov
mov
imul
test
enter
orl
popf
test
ret
mov
fs
lcall
pop
pop
mov
mov
mov
cmc
xchg
sub
loopne
sub
lret
pop
sub
out
fdivl
cmp
sub
movlps
mov
icebp
sbb
iret
cmp
xorb
cmc
pop
inc
pop
sbb
test
lcall
mov
mov
pop
mov
mov
or
call
into
jmp
sbb
dec
jmp
stos
dec
in
out
outsb
outsb
dec
and
sub
pop
push
xchg
xchg
lock
push
nop
mov
lods
sub
dec
aaa
and
loope
jb
xchg
sahf
sti
pushf
mov
adcb
arpl
ljmp
pop
arpl
test
ret
arpl
insb
mov
insb
mov
pop
adc
jle
stos
sbb
out
mov
jns
out
pop
jbe
jne
fdiv
pusha
jl
int
out
pop
add
mov
cmp
popaw
jne
fildl
jp
adc
sub
aas
xlat
pop
cmp
push
push
push
dec
inc
mov
daa
das
or
out
cmpl
ja
aam
shlb
xchg
adc
popf
js
mov
adc
in
out
inc
negl
mov
inc
or
adc
inc
insb
pop
jns
and
add
adc
cmp
imul
xchg
outsl
outsl
mov
fsubrl
imul
aam
leave
sbb
pop
sbb
add
mov
dec
pop
call
popf
adc
jns
sbb
add
or
iret
orl
int
ljmp
sbb
fstp
mov
jne
je
add
cmpb
or
inc
or
mov
aad
pop
sub
inc
dec
adcl
stos
adc
and
push
clc
jge
cmp
jle
adc
push
gs
test
cmp
cmpsl
mov
jle
adc
mov
movsl
mov
push
ljmp
xor
push
imul
mov
outsl
lea
fimuls
cmp
ffree
aam
adc
loop
pop
mov
sbb
jle
sbb
or
inc
insl
cld
loope
mov
sbb
shlb
or
mov
cmpsb
mov
jle
int
xchg
mov
xor
movsb
inc
xor
adc
sbb
mov
fildl
jge
icebp
push
std
into
fimull
les
mov
sub
scas
and
sub
mov
push
ret
mov
fcmove
add
dec
int3
js
call
dec
pop
add
cmp
roll
cmp
rclb
xchg
sub
lahf
cmp
add
mov
cmpsb
and
xchg
jne
lods
cwtl
test
sub
aad
cld
cmpsl
push
fnstenv
cmp
fs
outsl
dec
cmpsl
test
xlat
and
dec
sbb
jne
lds
in
push
xor
add
cmpsb
leave
jl
out
mov
mov
imul
dec
mov
cli
push
addr16
jo
inc
cmp
int3
or
mov
xor
stos
in
adcl
mov
jae
xor
popf
mov
push
addr16
rcrl
out
cmp
enter
mov
in
or
mov
enter
jmp
nop
out
mov
mov
loopne
int3
add
fs
adc
stos
mov
mov
es
ds
mov
jmp
popa
xchg
imul
pop
stc
lret
xchg
xor
leave
mov
pop
aam
aam
jmp
daa
out
andb
add
xor
cltd
fdivrs
adcl
aaa
mov
faddp
jo
pusha
adc
jecxz
lcall
sbbb
pop
pop
rcrl
daa
or
dec
imul
sub
jae
iret
sarl
mov
outsl
rorl
or
lret
sahf
dec
sarl
sub
jecxz
or
clc
pusha
imul
pop
inc
insl
mov
in
pop
xchg
cmp
rclb
xlat
add
and
xchg
xchg
stos
and
jmp
scas
nop
in
cs
jne
shrl
xor
and
addr16
push
xor
push
lahf
xchg
inc
mov
arpl
lahf
popa
fstpl
mov
jl
xor
fisttpl
sub
addr16
stc
jo
mov
in
out
imul
push
fiadds
push
mov
or
fidivrl
sarb
mov
les
imul
sbb
aad
jl
jg
shlb
outsb
adc
movsl
fdivrs
mov
mov
ret
fsubp
pop
dec
hlt
outsl
inc
out
insl
ffree
aaa
js
cmp
push
fsubrs
subl
adc
cmp
add
pop
inc
jg
pop
mov
mov
jle
ja
jmp
fstps
jge
popf
xchg
adcb
cmp
pusha
cmpsl
mov
inc
xchg
mov
mov
or
in
mov
loopne
in
push
jbe
test
arpl
dec
jne
inc
mov
sbb
jno
add
inc
daa
and
std
repz
enter
sbb
ja
shll
clc
incl
or
fs
dec
xor
or
test
xchg
push
xchg
pop
jbe
push
aas
insl
rcrl
popa
ss
leave
and
out
and
or
aaa
sbb
cmp
in
add
int3
pop
dec
push
pusha
cmp
sarb
dec
sti
les
jae
es
jmp
divb
jle
out
jb
mov
lods
cmpsb
mov
mov
or
mov
dec
or
xchg
mov
imul
test
hlt
ret
test
mov
sub
push
sub
inc
decl
es
xchg
and
sbb
xchg
loope
cmp
sbb
inc
aam
insl
fs
lods
inc
std
pop
popa
inc
sbb
jmp
je
icebp
das
out
shlb
aaa
test
lds
inc
into
leave
es
adc
lret
add
inc
fwait
cwtl
out
inc
add
loopne
pushf
push
shll
pop
dec
xchg
imul
sub
aas
xchg
imul
jbe
inc
mov
fs
xchg
out
jmp
loopne
push
inc
push
mov
sbb
add
dec
and
fwait
aas
in
enter
xchg
in
sahf
stc
pop
into
fs
xchg
jnp
dec
ljmp
ficomps
rcl
mov
xchg
jmp
and
fsubs
xchg
testl
mov
negb
xor
js
pop
subb
push
sarb
mov
pop
inc
push
mov
loop
subb
xlat
pop
ret
lahf
xor
sub
inc
in
les
out
shll
cmpsb
fldt
xchg
int
pop
out
addr16
loop
push
and
jno
jmp
enter
adc
aad
lds
push
dec
aad
sub
hlt
cmp
add
xor
ss
fsubs
sbb
xor
sbb
pushf
add
test
fadds
xchg
sbb
in
jge
repz
sbb
addr16
xchg
js
dec
or
jno
jle
sbb
lods
in
pop
sbb
subl
aas
inc
jo
dec
cld
lds
bound
and
ja
fwait
and
push
jge
shll
roll
mov
in
jbe
out
mov
mov
push
mov
adc
stos
xchg
fmull
mov
push
test
inc
out
push
out
daa
or
cmc
mov
pop
and
mov
inc
scas
sbb
dec
fadds
jb
mov
sbb
sbb
adc
out
inc
jb
and
xorl
or
in
or
inc
lcall
int
das
dec
lods
xor
mov
mov
je
inc
mov
stos
jmp
bound
movsl
enter
out
dec
js
out
ds
or
xchg
push
aas
subl
lods
mov
loopne
cld
int
xchg
mov
fisubl
mov
dec
mov
dec
iret
xorl
test
aam
mov
adc
and
sahf
push
rorl
or
sahf
arpl
xor
xor
sbb
dec
in
rcr
test
mov
lret
sub
add
add
pusha
add
dec
cmp
xchg
dec
out
add
pop
call
push
outsl
cmpsb
lods
int
cs
push
clc
adc
mov
mov
bound
mov
fsubrp
pushl
sbb
lea
arpl
xor
icebp
mov
mov
cltd
jno
stos
sbb
mov
sbb
adc
fbstp
repnz
sbb
jnp
or
arpl
popa
xor
jl
loope
mov
daa
das
fidivl
ja
xor
loope
mov
push
andb
mov
jge
jmp
push
adc
xor
sub
or
mov
mov
imul
and
xor
xchg
testb
sbb
lahf
or
mov
mov
in
scas
aas
and
dec
out
dec
andl
cmp
cmp
dec
int
or
sbbb
call
les
sarl
rcl
dec
aas
jecxz
lcall
mov
aam
test
mov
sub
iret
data16
sbb
jae
jmp
in
push
jl
mov
into
jae
add
inc
xor
cld
repz
ds
cltd
fucomi
xor
push
subb
inc
cwtl
or
push
inc
iret
adc
xchg
cli
enter
js
mov
lods
jp
aas
out
cmp
jb
dec
pop
jl
jl
jmp
jbe
push
jecxz
add
jle
mov
sarl
ficomps
scas
ljmp
scas
adc
pop
dec
daa
push
and
mov
loope
ret
pop
or
mov
ljmp
and
loope
pop
and
sbb
fsubs
or
mov
lcall
loope
roll
fisubrl
mov
adc
dec
jg
pop
xor
std
test
push
jne
ss
lods
cs
pop
mov
pop
adc
cltd
pop
and
push
hlt
loop
mov
popa
pop
test
push
add
andb
ss
popa
js
ret
and
xor
adc
es
aam
pop
dec
scas
and
lret
dec
fnsave
jne
jmp
add
mov
or
loop
mov
mov
mov
mov
das
sub
cld
push
adc
pop
es
sbb
xor
mov
inc
fsts
xor
pop
push
sub
xor
inc
xchg
jbe
xlat
xlat
test
mov
and
push
push
sub
mov
in
aam
rcr
mov
jns
bound
xor
aad
or
push
into
out
jno
subl
cmc
icebp
and
dec
adc
aad
xchg
in
push
adc
mov
in
or
aaa
lods
addr16
shrl
add
or
xchg
or
into
popf
mov
hlt
bound
mov
in
add
jb
gs
out
xchg
outsl
call
adc
int
or
mov
xlat
lock
mov
mov
lds
testb
adc
lods
mov
sbb
popa
addr16
cmpsb
incb
dec
push
dec
xor
test
out
pushf
push
loop
or
adc
dec
xchg
dec
inc
pop
add
push
cld
cmp
mov
call
mov
and
cld
jp
or
jns
in
inc
fcompl
xchg
xor
cmp
cld
dec
cli
sti
cwtl
sub
sub
cmp
movsb
dec
lahf
fisttpll
out
das
movsb
mov
shl
mov
xchg
popa
test
xor
idiv
fimuls
roll
pop
frstor
andl
test
insb
adc
push
rolb
jecxz
mov
or
in
adc
bound
mov
dec
ds
out
cwtl
lret
test
je
jg
jmp
xor
lahf
ds
pop
sti
or
mov
jg
cmp
ret
push
mov
jg
test
dec
leave
in
das
and
pop
inc
pop
and
daa
pop
out
push
add
loopne
mov
cld
cli
aad
aam
cmc
repnz
daa
test
mov
ljmp
je
jae
mov
adc
fldt
add
gs
imul
push
cmp
add
fwait
pop
cs
sbb
nop
test
iret
test
mov
add
add
rcr
in
les
cld
sbb
mov
add
mov
jecxz
xor
rclb
cmpsl
push
jge
mov
push
stc
xchg
fists
mov
mov
insb
add
repnz
call
xor
ror
jnp
and
pop
adc
icebp
scas
xchg
subl
cld
addb
xchg
hlt
out
mov
test
daa
or
jmp
xchg
cwtl
xor
repnz
mov
sub
and
dec
adc
shrb
testl
inc
fs
xchg
adcb
pushf
sbb
lods
loopne
add
shll
fadds
dec
cmpsl
add
fcoms
xlat
std
mov
jno
jg
cmp
mov
stos
jae
hlt
xchg
mov
xchg
test
xchg
xor
std
pusha
inc
retw
xchg
pop
imul
test
enter
pop
out
lahf
subl
icebp
test
inc
push
iret
dec
sbb
sbb
fcoms
mov
pop
dec
jne
ficoms
cmpb
mov
inc
mov
pop
cwtl
jne
test
and
bound
mov
xchg
fisubl
push
xchg
ret
pmulhuw
test
and
stos
and
mov
in
stos
inc
sarb
dec
in
or
std
and
adc
adc
mov
cmp
mov
enter
loope
out
push
lds
les
orl
inc
shrl
or
jae
jecxz
sahf
inc
push
mov
cmpsl
mov
test
ss
mov
scas
sbb
and
enter
unpckhps
shll
jnp
int
in
push
mov
push
shl
pop
xlat
in
stc
lahf
inc
mov
add
dec
jb
mov
add
inc
add
mov
je
mov
and
int
jo
cld
mov
xchg
or
sti
cmc
test
loope
jle
fmull
daa
cmpsl
push
dec
fisubrs
xor
cmp
pop
cwtl
push
pop
loope
mov
xorl
mov
lods
and
ret
aas
clc
int
cmp
fmull
sub
jns
pop
sbb
fildll
lods
mov
dec
mov
jg
jae
imulb
or
ret
incb
xor
icebp
sbb
cvttps2pi
imul
arpl
or
ds
mov
repz
jg
popf
sub
loope
test
loop
lahf
or
ficoml
sbb
in
sbb
xor
andl
daa
mov
pop
gs
cmp
jp
xchg
sti
fldt
adc
js
icebp
mov
jnp
jne
out
mov
outsb
subb
jl
test
add
xor
sahf
mov
movsl
fimull
xchg
loope
mov
test
jno
inc
shll
std
popl
cmp
push
cld
addr16
pop
shrb
mov
xchg
arpl
aas
jns
nop
dec
leave
pushf
int3
imul
pop
movsl
pop
jae
cmc
lods
int
pop
std
pop
sub
or
add
adc
outsl
xchg
jge
nop
test
mov
leave
fists
jbe
popa
mulw
stc
ljmp
jmp
push
jns
lret
or
mov
cmpsl
cmp
xor
mov
xchg
inc
in
xorl
lods
into
or
mov
inc
clc
in
lock
adc
add
jp
xchg
jo
mov
and
test
xchg
sub
xchg
lods
mov
fsubrs
sbb
mov
dec
daa
testb
enter
in
mov
cltd
fstpt
shlb
popf
sbb
mov
push
cwtl
or
mov
divb
mov
ss
jno
test
cmc
inc
dec
repz
add
mov
cmc
cltd
mov
lret
push
sbb
lahf
daa
cmp
cmp
xchg
mov
mov
pop
pop
lcall
add
dec
push
arpl
or
cli
ss
add
in
out
mov
push
add
in
adc
jecxz
jae
mov
shr
testl
and
imul
xor
push
add
aam
xor
js
out
fwait
ret
mov
ret
xor
xchg
and
add
sbb
insl
shrl
out
into
insl
addr16
xchg
mov
repz
loopne
mov
pop
loop
cwtl
push
jecxz
jle
and
sub
int
push
sub
inc
rcll
jnp
add
jb
lock
sub
sbb
movsb
xor
add
mov
pop
mov
jge
dec
lods
stos
xor
dec
fwait
popf
dec
sub
icebp
scas
nop
cmc
fnstcw
add
mov
out
ja
popa
mov
incl
push
xchg
pop
gs
and
push
bnd
test
xor
lods
xchg
mov
loop
daa
jge
cld
mov
divl
dec
int3
adc
inc
dec
test
jo
ja
out
lahf
imul
mov
mov
sbb
cwtl
lcall
xor
insb
or
aam
lret
jnp
or
mov
lahf
xchg
inc
pushf
lahf
ljmp
repz
mov
xchg
imul
insl
adc
mov
sub
inc
scas
outsl
lods
stos
bnd
cs
fs
xchg
leave
pop
es
or
mov
popf
push
mov
aam
je
push
jb
lods
addr16
int
sbb
cmpl
xlat
aaa
stos
xchg
sbb
push
inc
or
xchg
inc
xchg
mov
jo
push
aam
cs
cli
fists
push
dec
cmp
xor
pop
pop
add
filds
cmp
fidivrs
hlt
mov
ljmp
mov
mov
repnz
and
sub
stc
scas
xlat
dec
icebp
mov
dec
in
sub
pusha
jecxz
shrl
testb
cwtl
js
cmp
pop
or
dec
jno
mov
or
sbb
cmp
out
mov
fcoms
fiaddl
sahf
xchg
loopne
dec
sub
cmpsb
bound
jl
lods
push
inc
mov
xchg
add
imul
lods
mov
and
xor
pop
stos
lods
fcmovnb
push
icebp
sub
mov
loop
add
dec
insl
push
in
xchg
scas
sbb
bound
cld
xor
fs
add
pop
sub
adc
nop
or
rcrl
shll
aas
mov
les
adc
pop
loopne
xlat
inc
aam
mov
dec
or
add
pusha
repz
push
cmpsl
jbe
sbb
lea
inc
xchg
das
ret
jmp
les
sbb
int
clc
mov
popf
in
fisttps
lcall
sbb
jecxz
data16
jnp
mov
pop
in
xor
lods
ljmp
outsb
subb
and
aam
xchg
sub
bound
aad
mov
jo
sbb
sbb
xchg
mov
das
xor
js
push
and
mov
sub
dec
dec
sub
jp
jle
xor
dec
xor
ret
push
mov
stos
icebp
push
xchg
test
sbb
loope
mov
push
cmp
popf
ljmp
fdivr
icebp
adc
aam
out
sbb
in
loope
subl
pop
fs
lcall
mov
jle
jmp
xchg
fsin
cmp
push
test
xlat
sbb
xchg
pop
jmp
inc
mov
sub
jae
hlt
dec
fucom
adc
daa
sbb
xchg
inc
pop
test
popa
inc
inc
push
cwtl
or
mov
fdivrs
sub
xor
inc
mov
test
xchg
jb
cmpsl
xchg
inc
das
aaa
mov
cmp
sub
inc
push
sbb
mov
pop
lds
out
aaa
into
and
dec
mov
dec
mov
dec
stos
adc
ret
and
in
and
pusha
dec
dec
cmp
out
and
out
orl
inc
movsl
or
ret
fisubs
cld
mov
mov
pop
out
loope
gs
cld
dec
cld
lock
mov
jbe
lods
inc
cltd
sub
jp
mov
pop
testb
loop
xchg
cmp
in
aad
sarb
jp
sbbl
fstps
ja
int
push
xor
and
out
or
js
sbb
jae
pop
xchg
in
rclb
or
jge
cmp
outsb
dec
mov
xchg
jg
push
pop
cmpsb
jbe
cs
mov
fimuls
in
test
aas
adcl
or
out
push
mov
adcb
dec
and
mov
cs
and
out
lret
jno
cmp
in
jp
push
popf
cmp
fidivrs
ja
fs
push
cs
gs
stc
mov
pushf
loopne
sub
repz
imul
loop
frstor
stc
add
inc
dec
not
mov
pop
ja,pt
mov
pop
cld
fcomps
and
les
xchg
inc
test
jecxz
jbe
mov
icebp
adc
cmp
mov
xchg
clc
andl
pop
or
repz
mov
jae
sbb
out
push
mov
sbb
addr16
test
es
je
sbb
inc
cmovb
pushl
test
sub
xchg
or
add
dec
xlat
call
jae
aad
push
inc
out
int
hlt
sbb
jmp
dec
push
fwait
sbb
add
sub
lea
and
sub
sbb
adc
mov
add
push
int3
jo
pop
outsl
gs
sti
fstpt
cmp
mov
or
pushf
inc
popa
cmp
int
jns
mov
cmpsb
adcb
jbe,pt
dec
mov
hlt
pop
xchg
leave
or
push
aaa
add
push
inc
in
out
xor
and
dec
mov
ljmp
sbb
jae
mov
sti
sub
data16
cmp
std
and
and
pop
xorl
push
inc
sar
stos
push
cmc
jo
call
movsb
sbb
loope
int
jnp
adc
pop
inc
jge
sub
cs
push
inc
inc
out
lcall
nop
jbe
push
xchg
jecxz
push
pushf
xchg
shrb
test
or
inc
andb
int3
jbe
push
lcall
xor
add
pop
pushf
sahf
cmc
cmp
mov
outsl
in
mov
ds
jecxz
mov
lahf
fsts
jb
addr16
jb
mov
mov
sub
lahf
sub
dec
inc
xlat
ret
jl
cmp
sbb
inc
sub
divl
add
pop
or
test
clc
test
add
xchg
inc
adc
outsl
jg
cmp
test
enter
pop
inc
mov
xor
jns
psubsb
cmp
add
mov
inc
dec
cmp
or
ret
fcmovne
sbb
push
ljmp
pop
mov
lahf
or
xor
fs
pop
shlb
movsl
xor
and
fnstsw
inc
dec
mov
mov
xor
xchg
stc
push
cli
or
mov
jnp
in
cmp
scas
mov
fcmovu
cmc
nop
and
rcll
in
mov
jp
out
push
cwtl
gs
mov
pop
xor
jge
mov
mov
aas
out
and
clc
es
lcall
or
mov
cmpb
cmpl
hlt
mov
mov
sarb
imul
pop
jle
mov
das
and
push
and
rclb
xchg
pop
js
push
xchg
std
sahf
arpl
cmp
stc
jge
scas
push
in
mov
frstor
push
adc
pop
xor
pop
mov
jmp
fs
popf
sahf
push
lahf
dec
fisubrl
imul
cmpl
addr16
dec
out
cld
jge
pop
jle
jle
pop
shll
scas
shrb
xchg
jg
repz
fwait
imul
packuswb
orl
add
and
jb
cmc
loope
loop
jl
sub
andb
lds
gs
add
adc
jecxz
cld
mov
es
cli
leave
mov
or
sti
cld
stc
add
mov
pop
loopne
ss
out
mov
pop
dec
and
and
fimull
mov
cli
repz
in
sub
data16
add
out
fsts
xchg
pop
dec
xor
cmpsb
cltd
fsubrs
sbb
jp
std
jbe
sbb
push
push
push
nop
out
ja
cmp
inc
push
mov
inc
inc
test
into
psllq
xor
cwtl
mov
ret
dec
mov
cmpsb
imul
das
test
sub
les
jge
dec
fwait
inc
aaa
push
and
mov
out
xchg
mov
adc
cmp
sub
lret
cmp
je
in
mov
daa
out
pop
insl
popf
jp
push
add
xor
jnp
add
mov
xor
cmp
in
pop
inc
mov
cmp
mov
sahf
sub
sub
xchg
or
mov
jne
mov
push
xchg
pop
shlb
mov
push
std
je
mov
es
ret
pop
jp
lds
dec
aam
orb
adc
push
push
add
test
jle
lret
and
les
push
les
mov
movsb
push
clc
pop
pop
push
mov
pop
cmc
mov
out
push
lea
mov
xchg
popa
add
mov
fcmovnbe
mov
sbb
lret
imul
jmp
jp
popa
lds
int
sub
mov
imul
insl
jae
pop
aad
jo
inc
pushf
and
cmpsl
mov
pop
rcrl
ja
pop
shl
add
js
fldcw
jbe
mov
leave
and
or
xor
mov
std
out
cwtl
and
pop
and
clc
adc
sub
imul
in
dec
inc
mov
xlat
insb
nop
adc
incl
jecxz
xor
push
cmp
stc
and
or
into
jle
call
cs
add
add
les
xlat
jmp
fcoml
gs
mov
jle
mov
push
sahf
in
cs
movsl
roll
sbb
leave
pop
add
cmp
and
leave
testb
mov
cmp
popf
and
add
mov
call
jnp
int3
xchg
cmpsb
das
or
mov
pusha
std
ss
push
out
sahf
cltd
inc
inc
test
aas
xor
mov
mov
imul
call
or
sub
pushf
jle
mov
add
lods
call
addb
xchg
and
push
sub
cld
aas
push
jnp
cmp
lahf
into
sub
repz
or
dec
cmpsb
jmp
pop
cwtl
adc
mov
jl
inc
dec
adcb
sbb
aaa
notl
xchg
mov
or
fistl
dec
loop
scas
inc
leave
dec
mov
roll
cmc
mov
imul
sub
or
fistl
pop
fadd
mov
lahf
mov
add
enter
ss
enter
inc
punpckldq
hlt
push
dec
xor
div
jp
es
and
incb
orl
jnp
sub
push
inc
jo
mov
fistl
jns
fldl
xchg
push
fimuls
sbb
jb
jnp
aad
enter
stos
dec
loop
in
js
ficoml
aad
push
push
add
push
push
lods
data16
test
sbb
mov
out
clc
and
push
and
adc
movsb
push
push
and
mov
loopne
adc
cmp
sub
lret
in
shlb
shll
cwtl
pop
outsb
push
xchg
gs
fdivs
sub
sti
sbb
xor
daa
add
jg
lahf
push
ret
test
movsb
jle
sbb
cmp
gs
cld
jl
ss
inc
lds
jp
mov
cs
adc
in
test
jl
mov
dec
inc
lahf
mov
push
shrb
popa
xchg
jp
sub
pushf
insl
leave
fcomi
cmp
xchg
mov
imul
pop
fs
push
mov
iret
js
ljmp
xor
mov
mov
iret
cmp
sbb
push
leave
fs
xchg
cltd
pop
dec
jo
cmpb
xchg
dec
into
cmpsb
rcl
inc
outsb
inc
xchg
ret
cwtl
mov
dec
neg
sub
push
xchg
sub
arpl
inc
mov
popf
not
sub
push
dec
inc
jns
movsb
xchg
xchg
stc
stc
xorb
pop
fbstp
adc
xor
push
sub
dec
dec
ret
testl
clc
ljmp
pop
cmp
fwait
mov
es
ljmp
mov
add
mov
sub
add
cwtl
lods
xchg
out
addl
fnsave
in
mov
out
sbb
pop
jns
enter
pushf
out
shr
aam
mov
out
sbb
imulb
mov
sbb
mov
in
push
xchg
or
jne
jbe
mov
mov
push
les
jp
or
clc
cs
pop
cmpb
ja
cmp
lret
mov
adc
popa
mov
cld
inc
mov
aam
add
dec
mov
pop
ss
in
xor
call
aaa
sbb
lahf
and
gs
cwtl
lcall
inc
add
iret
push
push
mov
loopne
mov
nop
ljmp
sub
stc
lret
into
out
out
mov
inc
jg
shr
loope
xlat
sbb
mov
pusha
xchg
shrb
lea
insb
push
and
pop
lods
jno
jmp
ja
std
cmp
inc
dec
repnz
or
cwtl
repz
js
negl
inc
push
adc
and
inc
into
jp
sahf
gs
insb
inc
lahf
mov
jg
pop
ds
aam
mov
pop
xchg
ja
jb
xlat
push
repz
jmp
outsl
cmp
cmp
mov
push
ja
shl
jns,pn
sub
jae
xor
pop
cmp
pop
adc
lret
cmp
adc
repz
adc
xchg
sub
sub
and
cmp
xchg
cld
mov
mov
and
negb
mov
loop
stc
jl
divb
nop
fucomi
sub
stos
rcll
jmp
cmp
lock
xor
sbb
inc
js
xor
xor
ret
ss
nop
cmpsb
xlat
inc
add
movsl
data16
xlat
mov
jmp
fmull
mov
cltd
mov
out
pop
jp
shrb
aas
mov
mov
fwait
movsb
filds
aaa
mov
imul
out
stos
into
lea
mov
mov
sub
arpl
notl
mov
rorb
lret
movsb
push
lock
and
shrl
mov
sub
lds
int
pop
jne
fisubl
shrb
rcr
arpl
add
lds
push
dec
and
dec
mov
fs
sub
cmp
sbb
dec
mov
or
jnp
mov
cmpsl
push
mov
imull
movb
add
jnp
mov
arpl
mov
mov
in
cs
pop
jne
nop
inc
fcmovne
fwait
out
out
jne
rcl
in
push
sub
cmc
inc
cli
test
inc
dec
popf
dec
lods
xor
adc
in
fsubrl
add
bound
add
sbb
cwtl
loope
cwtl
push
adc
mov
sub
rcr
sbb
dec
cs
xor
in
mov
aam
mov
sub
out
pop
ret
sbb
inc
xchg
mov
adc
sbb
cwtl
inc
pop
int
loope
sub
idivl
nop
add
clc
mov
mov
invd
mov
and
mov
jp
and
cmp
sahf
xor
inc
push
mov
js
stos
ret
mov
push
clc
inc
pop
hlt
aas
out
cmc
sub
popf
pop
sub
sbb
sbb
mov
stc
enter
std
xchg
adc
sbb
imul
dec
in
orb
or
mov
or
test
and
mov
leave
and
xor
mov
lea
mov
adc
xchg
dec
or
mov
xchg
bound
jbe
lcall
mov
fwait
push
sub
in
add
cmp
mov
xchg
and
pop
pop
sbb
lods
lcall
mov
xor
hlt
frstor
and
insl
imul
adc
adc
xchg
push
js,pt
inc
and
ficoms
jae
or
iret
fs
add
jp
pop
jp
sahf
fidivs
ja
mov
cmp
mov
push
and
adc
dec
cld
ficoms
pop
lret
jmp
imul
xchg
pop
xor
lret
adc
mov
test
cs
push
test
pushf
add
fisttpll
cmp
aaa
call
loop
cwtl
call
mov
jmp
xchg
cmpsb
leave
sub
xchg
sbb
push
jns
movsl
movl
cmp
call
cmpsl
jns
mov
jns
insb
aad
or
fcmovne
mov
addr16
xor
loope
cmp
test
jp
cmp
xchg
movsl
fcoms
in
mov
add
xor
sarb
sarl
adc
sar
mov
push
push
outsb
cmpsl
mov
js
movsl
jge
xor
push
pop
sub
ret
sub
or
lods
out
or
jno
sub
dec
int3
imul
int
jbe
sbb
mov
pop
fbld
mov
xchg
rcrb
mov
call
out
mov
mov
cmpsl
lock
fpatan
pop
sti
insb
stos
add
sub
sbb
mov
fmull
negl
test
pop
pop
call
pop
dec
sti
pop
mov
dec
add
ret
aas
rclb
push
push
loopne
sub
push
nop
les
enter
lods
mov
outsl
adc
mov
shll
add
mov
aam
rorl
sbb
pop
sbb
or
mov
aaa
mov
out
sbb
es
xlat
xchg
ffree
adc
mov
jmp
xor
movsl
divl
xchg
sbb
subb
mov
sarb
insb
dec
imul
test
addr16
in
adc
dec
jmp
lahf
jae
add
popa
sub
sbb
adc
push
scas
mov
leave
ret
inc
in
pusha
in
mov
mov
ja
sub
and
lds
sbb
cmpsb
cld
mov
lret
cmp
pop
fcompl
movsl
xchg
test
test
movsb
sub
addr16
xchg
repz
sbb
mov
and
std
ficomps
xchg
jno
adc
call
xchg
mov
mov
les
dec
sbb
inc
lds
adc
xchg
test
arpl
sbb
lods
jbe
repz
lahf
sbb
xorl
cld
push
mov
push
dec
data16
xchg
sub
adc
inc
jge
and
ret
xchg
flds
repnz
mov
jne
daa
es
xchg
dec
jg
scas
or
jge
cmp
mov
jecxz
lods
incb
sbb
comiss
lcall
test
inc
ret
dec
push
shrb
adc
xor
mov
stos
push
sbb
std
inc
dec
mov
ret
fs
rcrb
mov
test
sub
dec
add
ficompl
dec
push
inc
lea
lret
xor
sahf
dec
mov
cli
ljmp
int3
xchg
or
push
sarb
inc
cmpsb
xchg
mov
sub
dec
repnz
add
xor
scas
mov
inc
pop
sub
sub
loopne
fmuls
scas
mov
ss
cld
adc
loope
mov
mov
rorl
outsl
aam
and
cli
push
stc
nop
xchg
sbb
cmp
xchg
icebp
xor
cld
rclb
mov
fsubs
jge
pop
dec
shll
jnp
pop
sub
imul
mov
jp
dec
jp
xor
loope
dec
pmaxsw
cmpsb
mov
mov
adc
xorb
xchg
std
cmpsb
mov
mov
mov
popl
jle
jbe
sahf
cwtl
xor
and
arpl
icebp
loop
lods
push
xor
add
repz
jae
xchg
ret
das
lds
mov
test
fstpt
iret
pop
insb
cltd
aaa
mov
shr
and
and
or
sbb
sbb
js
inc
jae
mov
clc
push
incb
rolb
loope
jno
sbb
xlat
orl
test
mov
xorl
push
sbb
mov
fisubs
gs
cs
pop
sub
mov
leave
lock
mov
imulb
sub
aam
movsb
dec
pop
push
arpl
fimuls
insl
sbb
fnstenv
add
data16
xchg
ljmp
jne
mov
adc
fcompl
inc
add
and
push
xor
and
push
sbb
jo
cmp
inc
mov
cwtl
cmp
xchg
sbb
sbb
outsl
dec
push
adc
movl
xchg
mov
sbb
jmp
test
pop
or
fucom
lret
lret
add
into
xchg
mov
mov
cld
adc
mov
jno
in
loopne
mov
ja
inc
outsb
add
inc
jp
iret
xor
xor
je
inc
jnp
shl
push
jnp
shrb
mov
add
add
adc
lahf
add
mov
xchg
lock
xor
or
ficoms
pushf
pushf
dec
mov
loop
int3
lret
pushf
pop
mov
push
shll
push
cmpsl
out
mov
inc
dec
mov
push
fcomip
push
loopne
push
and
fnstenv
mov
xlat
mov
movsb
inc
cli
test
add
pop
push
mov
xor
inc
aaa
sub
push
sbb
sbb
movsl
mov
shll
fdivl
icebp
sub
scas
cmp
mov
scas
dec
cli
xor
and
jnp
xor
push
imul
add
cmp
push
iret
data16
cmp
imul
in
pop
lret
aam
insl
jle
fcoml
stc
sbb
pop
xorb
sarl
sar
int3
ljmp
push
test
inc
mov
jmp
insb
sbb
stos
std
pop
in
aaa
insl
rcr
fdivr
push
aam
scas
add
push
leave
mov
or
sbb
add
or
movsb
pop
in
jle
sbbl
sbb
mov
mov
roll
adc
push
jmp
adc
cmc
stc
and
mov
mov
stos
jmp
and
mov
add
out
inc
inc
jb
mov
inc
or
ja
push
xchg
xor
dec
leave
push
clc
push
adc
jnp
outsl
xchg
xchg
arpl
dec
pop
sbb
rolb
inc
pusha
mov
mov
sbb
sbb
stc
ret
ja
test
fnstsw
xchg
out
stos
dec
mov
jg
test
xchg
xor
jae
inc
dec
xchg
mov
or
mov
pop
je
cli
icebp
push
inc
sbb
or
scas
mov
loop
out
add
jno
xchg
cmp
in
ffree
imul
cmp
cmp
jg
cmp
sbb
xchg
mov
std
test
into
add
aam
fucomip
test
mov
xchg
xor
rcrl
push
std
jmp
loop
icebp
cmp
mov
lahf
out
add
inc
mov
mov
stos
std
popf
inc
leave
add
call
sbb
mov
adc
int3
mov
dec
clc
mov
sbb
mov
bound
in
jmp
sbb
jne
in
ret
insb
in
sbb
sbb
loopne
mov
mov
loopne
xchg
push
push
add
imul
jns
jb
in
xchg
add
push
mov
push
addb
aaa
sub
mov
pop
notb
adc
inc
punpcklbw
sti
pop
mov
jle
bound
pop
call
scas
mov
jp
outsl
jnp
ss
adc
pop
push
jle
insb
sbb
aas
or
dec
insl
movsl
movsb
cmp
add
mov
sahf
mov
insb
ficompl
cmpsb
mov
aam
rcll
les
clc
fidivl
lea
sub
jg
inc
jp
xchg
cmpsb
data16
mov
dec
leave
mov
xor
xor
repnz
aam
xchg
xchg
cmp
int
ja
lret
arpl
or
in
inc
bound
xor
push
wrmsr
inc
pop
pop
mov
sbb
in
movsl
mov
cli
scas
cltd
gs
or
cmp
add
mov
cli
lret
xchg
mov
shl
aam
push
aas
jge
nop
js
rclb
xor
movsl
inc
ret
pushf
les
loop
popf
das
adc
mov
pop
daa
jge
push
imul
pop
lods
sub
cmpsl
push
aad
jb
testb
or
out
cli
outsl
lds
xchg
and
sbb
add
push
xchg
dec
scas
push
add
or
dec
xchg
repz
fldl
and
add
movsb
int3
mov
cmp
fwait
maxps
packsswb
hlt
int3
mov
xlat
aaa
jmp
or
outsl
jb
jmp
enter
mov
movb
xlat
ja
fst
inc
aaa
test
pushf
mov
jg
cmp
cmpsb
cmp
cmp
test
fwait
push
mov
lcall
xchg
cltd
jns
addl
sbb
mov
loopne
in
mov
mov
cwtl
psllq
push
testl
inc
in
jae
and
sbb
out
adc
loope
mov
xlat
sti
cmp
adc
adc
sbb
notb
fdivl
or
cs
rclb
sbb
pop
pop
push
pop
ljmp
arpl
or
sbb
jae
imul
mov
xchg
popa
fstpt
test
cld
mov
inc
ss
jns
dec
mov
lahf
sbb
mov
stos
loopne
inc
pushf
inc
lcall
icebp
or
and
xchg
hlt
or
pop
push
sahf
xor
fwait
xchg
cltd
push
jl
call
test
stos
dec
js
pop
scas
scas
mov
repz
cld
adc
test
push
fidivrs
push
push
cld
fincstp
lea
popf
pop
dec
push
and
cmpsb
jae
mov
xchg
push
shrl
lret
fsubl
xchg
and
inc
mov
out
out
add
or
lcall
bound
stos
inc
decl
aam
add
and
jno
loop
out
and
pusha
arpl
sub
xchg
sub
jbe
inc
enter
orl
icebp
push
and
ficomps
pop
into
adc
and
sub
enter
push
jne
ljmp
mov
pop
cmp
aad
pop
std
repz
dec
inc
pop
dec
cwtl
outsb
mov
mov
into
popf
rol
xor
pop
loopne
cmpsl
add
push
pop
test
push
sbb
sub
ss
add
pop
imul
xor
add
add
movsl
and
inc
lds
mov
cmp
mul
adc
shll
mov
adc
xor
les
test
aas
aam
in
mov
out
cmp
movsb
xchg
dec
ljmp
cli
fimull
stc
jle
xlat
shll
jne
xor
inc
clc
nop
test
and
xor
lods
mov
lods
aaa
sub
lods
xor
scas
xor
mov
lcall
popa
sub
fldl
imul
arpl
addr16
cmp
pop
sub
lcall
xor
repnz
sbb
call
mov
vmaxps
cmp
imul
push
lock
cmc
cltd
subb
or
cwtl
xor
inc
sub
jno
push
xor
xor
inc
andl
es
dec
daa
xchg
pop
xchg
pop
int
xchg
adc
test
icebp
pusha
test
and
mov
mov
inc
cmpsl
subl
lock
fldenv
xor
pop
shr
imul
sahf
mov
mov
mov
jne
loop
inc
jg
mov
fdivrl
movsb
loop
pop
mov
clc
fstpl
dec
xchg
lahf
popa
or
or
lret
mov
scas
mov
in
xor
sub
inc
sahf
mov
loopne
or
mov
imul
andl
jns
cli
jecxz
mov
movsb
push
jae
cli
add
sbb
push
and
mov
xchg
sub
pop
into
mov
int
sbb
jno
das
lret
inc
jo
sbb
testb
int3
pusha
mov
xchg
jo
mov
test
push
xor
adc
inc
sarl
cmpsb
loope
dec
xor
stos
rolb
mov
mov
mov
lcall
sub
fists
cltd
out
cmp
xor
xchg
mov
fs
pop
dec
je
xchg
movsl
or
clc
lods
js
leave
dec
sbb
pop
jg
xor
fimull
sub
xchg
gs
test
in
hlt
insl
dec
pop
lea
sarb
or
and
cwtl
data16
jae
mov
or
mov
sbb
xor
push
and
insb
add
in
mov
cmpsb
jp
outsl
jbe
sbb
dec
xchg
cli
mov
loopne
aas
icebp
lret
jp
or
cmc
push
dec
or
jp
cmpsl
cld
or
int
shl
sbb
mov
sub
jns
pop
sar
dec
xchg
mov
mov
jecxz
jae
iret
sub
jnp
xor
pop
xchg
mov
inc
dec
mov
jge
fwait
sub
jecxz
popf
or
xchg
mov
leave
sub
ja
enter
sti
mov
push
in
repnz
ficomps
enter
jne
movsb
inc
sahf
mov
push
lods
mov
out
xchg
add
cmp
into
inc
out
js
and
sbb
popa
mov
les
add
cli
mov
mov
gs
fwait
push
sub
repnz
movsb
scas
fstpl
out
vmaxpd
mov
rorl
sar
sarl
mov
mov
stc
jnp
cwtl
das
hlt
popf
out
mov
jnp
sub
jae
dec
arpl
jg
mov
xchg
pop
aad
mov
fidivs
int3
in
fsubs
fsubl
dec
push
inc
int
dec
pop
mov
xchg
sub
sub
lock
cld
jne
jnp
jmp
loopw
test
into
fldt
enter
dec
leave
ret
lcall
mov
mov
lods
add
les
es
jle
push
lret
stos
jg
sarl
cmp
loope
out
mov
and
add
fists
jmp
add
es
fldl
add
arpl
loopne
xor
dec
xchg
lcall
pop
fbstp
lahf
sbb
cmpsl
xlat
adc
xchg
aas
and
pop
pop
push
jbe
fwait
push
cmp
out
pushf
orb
mov
clc
nop
shrl
pushf
arpl
cs
sbb
mov
adc
fisubrl
insb
aad
stos
insl
imul
in
xchg
dec
adcb
push
pop
inc
ja
xlat
scas
sarb
xchg
stos
dec
mov
mov
imul
sub
mov
xchg
rclb
push
out
xor
and
lret
dec
push
mov
jnp
or
pop
inc
lea
aaa
in
mov
dec
movsb
xor
scas
or
cmp
sub
or
pusha
push
imul
imul
pop
and
imul
cmpsb
mov
xor
cmpsb
xchg
sub
sub
pop
cmp
sbb
test
ret
xor
xor
out
lods
mov
or
das
mov
push
pop
inc
cmp
mov
bnd
popf
mov
outsl
popa
mov
push
stc
adc
mov
sbb
add
mov
shll
jae
repnz
cld
jmp
mov
in
push
jmp
push
cmpsb
or
and
push
or
dec
jmp
adc
imull
std
jns
inc
bound
jmp
push
and
mov
out
jmp
out
push
test
jmp
inc
cli
dec
icebp
adc
in
jp
in
jmp
sub
jle
arpl
add
int3
xchg
and
push
add
jb
inc
shll
popa
repnz
mov
jecxz
sahf
cli
sub
add
test
xchg
shlb
add
cmp
mov
repz
cli
cltd
lods
and
sbb
push
iret
xchg
add
pusha
inc
in
fnsave
push
cltd
ret
stos
adc
in
sahf
daa
dec
stos
je
call
push
dec
stos
jno
outsb
cld
dec
and
bound
mov
jp
inc
xchg
pop
mov
sbb
out
inc
xchg
decl
test
gs
aad
inc
or
mov
inc
xchg
add
jbe
test
jno
push
mov
mov
mov
jae
dec
rcrl
test
mov
les
sahf
cmp
push
xor
push
in
lret
and
in
sti
movsl
les
mov
cs
cmp
cmc
gs
mov
imul
push
arpl
sahf
sbb
xor
or
push
cltd
xor
icebp
in
and
scas
std
out
pop
xchg
arpl
outsb
inc
aaa
out
rorb
cs
gs
xchg
add
mov
imul
dec
sbb
std
jno
fmul
fmul
xor
pop
xor
xchg
sarl
je
dec
out
fidivrl
test
test
fisubrs
mov
lods
stc
shlb
movsl
mov
or
jle
enter
push
mov
movsb
or
cmp
ret
xor
xor
jp
push
or
data16
xchg
adc
mov
push
cli
mov
jb
mov
xchg
ret
fists
jmp
leave
mov
xor
cmp
sbb
pushf
xchg
ja
not
mov
jno
adc
into
lods
dec
jnp
shll
pop
lea
icebp
push
shr
add
popf
out
lahf
pop
adc
mov
jmp
leave
mov
bound
mov
inc
fsubl
adc
mov
mov
test
mov
dec
jge
dec
mov
mov
mov
faddl
pop
push
in
iret
ret
mov
jmp
dec
loope
push
incl
pop
aaa
loope
fldcw
and
sbb
cmp
aaa
xor
mov
das
scas
sbb
inc
int3
lock
bound
dec
jnp
sbb
pop
push
xor
outsb
repnz
mov
fs
sbb
mov
jnp
dec
call
cli
jns
lret
das
ljmp
aas
fldt
xchg
jg
or
add
sub
test
add
pop
jnp
pop
fistpll
pop
adc
idivl
push
ret
popa
insb
fidivrl
mov
push
rorl
pop
call
pop
push
mov
cltd
out
xchg
mul
jb
aam
or
and
and
mov
and
loop
fs
loopne
inc
jle
outsb
fwait
in
push
cmp
xchg
int3
fdivr
mov
lods
test
push
jns
lds
hlt
outsl
pop
add
arpl
clc
xchg
pop
push
mov
lahf
mov
sbb
subb
jl
xchg
fnsave
jmp
or
mov
mov
push
mov
stos
gs
jp
rcll
data16
je
push
mov
ret
imul
mov
and
outsl
jb
mov
jbe
jb
loope
dec
push
shlb
inc
dec
sbb
mov
in
or
pop
mov
mov
out
lods
fisttps
loopne
mov
in
cmp
push
mov
sbb
push
xchg
mov
cld
and
pop
test
pop
divb
aas
mov
xor
or
mov
scas
or
mov
daa
pop
popa
out
ror
push
add
aas
imul
scas
outsb
das
adc
lock
or
pop
mov
inc
add
pop
lds
cmp
mov
adc
mov
lret
inc
fsubr
and
incb
xchg
mov
out
mov
dec
pushf
std
mov
in
or
lds
xor
jl
ljmp
mov
adc
mov
sub
or
cs
insl
or
jge
push
je
loop
xchg
jns
xchg
scas
lcall
push
std
xor
sbb
test
push
ds
cmp
cmp
fisubl
push
fcmovnbe
lock
mov
mov
aad
adc
mov
inc
or
rolb
popa
lods
popf
mov
xor
adc
fbstp
mov
call
ficoml
fnstcw
and
shlb
in
and
pop
sbb
add
adc
inc
mov
fistl
push
xchg
dec
xchg
enter
cmp
rcll
fimull
lcall
xor
inc
insl
inc
ret
push
into
icebp
adc
hlt
test
xlat
adc
iret
gs
mov
push
fiadds
inc
xchg
push
mov
orl
jno
cmp
dec
pop
mov
test
and
jne
into
jno
icebp
mov
test
shll
call
adc
cmp
adc
lods
lret
aas
leave
rolb
push
daa
test
arpl
loop
inc
and
out
jmp
and
sbb
inc
add
rcl
shlb
cmp
iret
subl
add
clc
inc
jge
lret
mov
roll
cwtl
jnp
and
loope
cmp
inc
or
lods
push
push
fists
xchg
adc
jmp
pop
adc
xchg
das
mov
idivb
pop
ja
or
adc
cmp
jns
xchg
lret
mov
repz
sub
jg
sub
and
imul
push
pop
push
enter
arpl
fnstcw
out
push
mov
lods
xchg
jg
xor
mov
inc
mov
cmp
in
mov
sbb
push
fildl
ret
pop
fstpl
imul
pop
out
adc
push
dec
lods
xchg
loope
cmp
sbb
sub
fildll
test
sbb
pop
test
jp
jno
inc
mov
fbld
ja
scas
mov
cwtl
testl
and
mov
sbb
cmp
dec
out
mov
jl
jmp
sub
mov
pop
in
sub
out
cmpsl
scas
mov
cmp
pop
fsubrl
pop
into
jg
xor
cmpsb
add
xchg
jecxz
push
fstps
scas
lods
push
fldcw
adc
dec
and
call
enter
xchg
add
test
test
cmp
lcall
ret
shrb
lahf
outsl
pop
add
mov
addr16
pusha
movsb
lock
push
pop
nop
mov
insb
pop
lods
into
out
in
pop
xlat
inc
into
jecxz
xchg
insb
arpl
ss
pusha
das
sbb
jae
mov
into
inc
gs
jo
add
jmp
es
in
gs
mov
xchg
imul
jo
mov
das
add
inc
cmp
stc
popa
push
les
sub
leave
test
bound
aam
xor
add
push
mov
jge
xchg
cmp
adc
xchg
scas
lret
cltd
mov
iret
jb
dec
cmp
or
mov
xchg
mov
jmp
adc
mov
vpmulhuw
addr16
sbb
add
insl
lcall
repnz
in
imul
int
scas
cmp
inc
hlt
les
adc
mov
hlt
aam
insl
divl
scas
mov
adc
outsl
and
mov
into
xchg
jbe
mov
jl
test
adcb
pop
dec
lods
cltd
pop
add
sub
mov
pop
enter
push
dec
xchg
in
add
fwait
adc
push
faddl
sbb
inc
or
mov
and
mov
ret
notl
add
out
xchg
or
outsb
ljmp
mov
es
pop
icebp
pop
lcall
aas
pop
stc
xor
jbe
xor
push
push
pop
sahf
sub
outsl
ss
insb
sti
push
xor
jmp
arpl
push
mov
xchg
jne
pop
popa
jae
xchg
add
pop
pop
jmp
popf
les
into
mov
das
mov
outsb
sub
aaa
push
cmp
in
fdivl
aaa
xchg
add
xchg
add
mov
imul
loopne
push
add
loopne
cmp
push
std
cld
xchg
loopne
data16
sbbl
and
ja
jne
xor
jo
imul
fadd
in
adc
cmpsb
in
fstps
cmp
jle
xlat
test
cs
mov
ljmp
push
xorl
testb
inc
xchg
cmc
arpl
fbld
pop
or
aam
ss
jge
sbb
roll
xchg
fs
in
lahf
sbb
or
in
scas
stc
xor
inc
mov
xchg
add
mov
adc
mov
xor
xchg
dec
and
add
in
aam
stc
in
mov
out
or
cmp
das
mov
push
pop
cmp
adc
pop
sbb
sahf
sub
add
push
dec
sub
pop
test
xchg
popa
testl
movl
jmp
sahf
adc
and
or
pushf
jl
sbb
dec
mov
dec
and
xchg
xor
xor
out
jae
add
mov
dec
sub
pop
xchg
mov
push
js
frndint
mov
and
mov
mov
sub
lret
fmulp
ficomps
dec
sub
cltd
cld
sti
pop
push
in
xlat
insl
test
mov
or
in
xchg
xchg
jno
mov
test
aam
out
out
dec
cs
jge
cmp
jo
mov
sub
push
or
mov
imul
sub
rorb
or
or
roll
and
das
inc
xchg
pop
int
push
jle
mov
push
dec
push
xchg
cmp
pop
push
negl
add
mov
clc
jb
dec
xor
testb
mov
and
or
mov
sub
push
dec
xchg
xchg
cli
adc
arpl
iret
and
xorl
pop
pop
out
pusha
into
cmpsb
pusha
loop
ror
mov
pop
or
pop
pop
into
movl
test
and
cmpsl
das
jg
fistpl
dec
jle
cmp
xor
shr
fstpl
mov
add
lcall
pop
adc
mov
lcall
mov
pushf
bound
arpl
mov
jb
adc
mov
mov
cmp
insb
pusha
test
sub
cs
fisubrl
xor
jae
popl
xor
cltd
mov
or
mov
arpl
iret
fs
rolb
pop
test
stos
or
fwait
sbb
sub
adc
adc
hlt
sub
mov
jne
fcmovu
mov
push
popa
or
cmp
cmp
inc
mov
add
shll
xor
into
daa
xchg
push
inc
out
aaa
ficoml
insl
or
es
jnp
pop
cmp
mov
fmulp
outsb
mov
inc
xorl
out
mov
fdivrl
dec
pushl
sub
sbb
pand
jp
pop
sub
push
fadds
leave
fstpt
xchg
lret
loope
xlat
popa
aas
cmp
andb
das
sti
jo
repnz
mov
imul
jmp
test
mov
mov
mov
insl
testl
or
data16
cwtl
or
add
or
push
push
fs
mov
outsb
fs
cmp
aaa
arpl
incb
mov
arpl
cmpsl
mov
add
xchg
mov
fcoml
test
xor
pushf
iret
hlt
jecxz
icebp
cmp
das
adc
push
into
fdivl
push
add
xchg
cmp
repnz
iret
ja
inc
mov
xor
orb
enter
int
insl
movsb
and
cli
xor
mov
sti
add
inc
repnz
mov
fstpl
adc
sbb
mov
inc
and
idivb
sub
adc
cmc
adc
out
ljmp
fldenv
sub
mov
lahf
mov
inc
fsubl
loope
inc
xor
out
fwait
jns
jns
stos
jnp
loope
push
int
or
nop
in
lods
cmpsl
sub
neg
inc
adc
dec
out
or
xor
frstor
and
jne
nop
and
test
jl
dec
push
outsb
inc
push
loopne
add
pushf
push
add
jmp
test
stc
jle
pushf
xor
insb
adc
scas
aad
push
gs
xchg
repnz
fcompl
shrl
test
push
add
clc
add
dec
mov
xor
jl
in
jno
push
cmp
push
sarl
insb
xchg
cltd
mov
push
fcmovb
and
pop
xchg
push
push
xorl
xor
mov
mov
out
lods
adc
and
or
cmc
imul
pusha
add
fistpl
mov
lret
mov
sarb
adc
mov
mov
call
jp
xchg
inc
xchg
fnstcw
orb
cltd
mov
subl
pop
in
ds
aad
jecxz
xchg
ds
push
call
dec
lcall
mov
lret
das
das
lock
shl
mov
mov
scas
adc
mov
xchg
cmpl
lahf
xchg
add
jge
xchg
adc
inc
push
push
push
xor
adc
xchg
divl
jnp
rcrl
mov
mov
insl
mov
jl
push
sub
fwait
nop
mov
dec
lcall
pop
push
dec
pushf
clc
subb
jp
inc
sub
adc
pop
rorb
aas
in
flds
pop
add
out
loope
sbb
lret
das
insl
mov
lret
aad
das
insb
movsb
cmpsb
jno
fnsave
nop
push
xchg
sub
cmpsl
or
popa
mov
adc
rcll
test
clc
subl
cmp
sbb
sbbl
mov
mov
imul
add
cwtl
or
sub
ljmp
xchg
jne
int3
add
sub
imul
xchg
in
fiaddl
mov
test
mov
shll
xchg
addr16
xor
in
mov
pop
fstl
adc
mull
push
lock
cmp
lret
pop
xlat
lret
and
mov
mov
push
sub
add
stos
popa
adc
xchg
imul
mov
jp
cmp
push
xorb
jle
jns
jl
ret
sub
iret
scas
cmc
mov
add
jge
push
or
fs
mov
movhlps
and
inc
test
hlt
je
push
aaa
or
imul
arpl
into
mov
xor
jb
xchg
and
mov
inc
lea
jge
stos
mov
negb
xchg
and
outsb
jecxz
mov
push
sbb
xchg
mov
sub
cs
mov
outsb
mov
stc
in
cmp
lret
sub
or
cmp
jbe
nop
cmp
andl
mov
adcb
bound
out
fistps
mov
fistps
fdivl
adc
loopne
add
sub
pop
xor
out
jecxz
aam
popa
jno
pop
or
jno
loopne
cmp
cmp
int
jle
das
insb
in
jg
push
cmp
xchg
fldenv
and
outsl
sahf
or
adc
mulb
jg
pop
repz
xchg
stos
aad
movsl
adc
ret
cmpb
stos
dec
rolb
movsb
std
cmp
insb
dec
push
and
fisttpl
ja
push
cmp
xor
cmp
pushf
inc
adc
or
mov
adc
test
rcl
call
je
xor
and
dec
jp
outsb
push
popf
cld
arpl
inc
lcall
mov
mov
out
roll
pop
mov
nop
ja
out
push
dec
pop
mov
into
imul
cmc
jno
lock
sub
cmp
sarl
repnz
add
push
mov
fisubs
and
ret
dec
notb
cmp
popa
add
shll
pop
addr16
ror
pop
mov
aam
repnz
in
push
lea
xor
mov
pop
scas
push
cmp
jmp
adc
out
jo
and
mov
adc
xor
fsubrl
push
add
mov
ljmp
cmp
lea
xchg
scas
bound
push
pop
fmul
je
adc
xchg
mov
mov
ljmp
adc
pop
xchg
pop
push
adc
dec
push
je
ja
std
push
xchg
and
mov
xchg
push
or
xchg
js
scas
subl
jmp
inc
aas
addr16
and
xchg
inc
in
jo
mov
loope
inc
push
loope
mov
mov
jmp
rorl
iret
pop
add
add
mov
sarl
jecxz
nop
mov
add
jg
mov
outsb
aas
mov
pushf
out
cmpsb
xor
xlat
push
iret
out
mov
aas
mov
sub
in
movsb
pusha
out
mov
jmp
xchg
pop
es
pop
push
dec
popf
dec
js
or
mov
mov
sarl
les
jne
js
cmpsb
loope
dec
mov
insb
not
dec
ret
out
fwait
dec
dec
xor
sub
mov
aad
sub
js
sti
push
ljmp
sbb
adc
movsb
in
xchg
push
sbb
dec
xchg
sbb
inc
cmp
cli
loope
jbe
shlb
aam
dec
sbb
fld
fisubrs
push
fadds
lds
int3
in
cs
xchg
pop
je
insb
mov
jmp
test
mov
mov
loop
add
lahf
cwtl
xchg
jno
jmp
adc
dec
sbb
and
sbb
mov
jecxz
xor
jne
dec
adc
push
in
adc
idivl
mov
in
mov
insl
adc
ja
adc
adc
pop
fnsave
hlt
adc
sbb
pop
test
push
sti
push
push
mov
dec
cmpsb
push
loope
sub
xlat
and
push
and
cli
mov
pusha
mov
daa
mov
push
and
cmp
xchg
sub
inc
nop
sbb
es
pushf
andb
lods
or
fisttpl
xor
sbb
sub
out
dec
inc
test
out
push
cld
sub
mov
fdivs
sbb
dec
popa
lea
lret
cmpps
add
test
movsl
inc
call
hlt
nop
xor
adc
lea
scas
adc
mov
add
outsl
shl
ss
mov
mov
sbb
cmp
xchg
adc
pop
ret
sbb
pop
sti
int
paddsb
push
cmpsl
xor
or
xchg
cmpsl
ja
sbb
rol
into
xchg
test
dec
adc
push
jmp
jbe
icebp
movsl
adc
inc
scas
popa
xor
dec
xor
bndldx
lret
ljmp
sbb
outsl
and
sti
jbe
das
insl
popa
sub
movsb
ja
fnstenv
jno
add
lret
pop
and
rcll
dec
movsb
sub
mov
push
xchg
cmp
loopne
in
jg
cmp
sub
orl
cmp
bnd
xor
imul
xlat
repnz
inc
fsincos
push
mov
out
lret
inc
out
jns
push
jbe
cmp
add
inc
jp
mov
pop
rcl
mov
lahf
sub
repnz
push
sub
jno
inc
mov
sub
mov
dec
stos
call
add
push
repnz
mov
in
mov
jl
cmp
jmp
inc
ds
pop
mov
jno
inc
mov
or
cli
sub
push
test
mov
loope
push
adc
imul
out
sar
mov
call
inc
shlb
cwtl
sahf
stc
push
mov
cmp
and
lahf
add
stos
les
xchg
ss
cmp
adc
push
xor
and
cmp
mov
lock
push
mov
pop
push
andl
test
mov
ja
shrl
imul
inc
add
fcomps
or
push
push
xor
fdivr
lcall
popf
stos
and
xchg
test
test
mov
aaa
pop
mov
stos
stos
sub
cwtl
jp
mov
jo
push
test
neg
xchg
fsubrl
push
and
enter
icebp
insb
shrl
sub
movsl
dec
jmp
mov
add
sub
nop
push
mov
std
nop
cli
mov
sarb
jo
mov
testb
leave
ljmp
mov
test
xchg
addl
inc
inc
aam
repz
xor
cwtl
pop
pop
dec
dec
jns
rcll
fbstp
subb
cltd
sbb
fsubr
xchg
addl
es
je
lahf
int
outsb
sbb
lret
iret
sub
inc
sub
cwtl
ss
int
stc
daa
jnp
jmp
or
push
shll
sub
xchg
negb
sti
adc
cmp
inc
sbb
fldcw
test
xchg
mov
sahf
adc
cmpb
fmull
movsb
push
xor
mov
ja
lret
or
inc
lcall
js
cmp
xor
push
jl
mov
mov
stc
outsl
adc
inc
iret
in
cmpsl
push
or
mov
dec
and
aam
scas
cwtl
push
lods
pop
into
and
inc
mov
sbb
dec
or
xchg
loopne
sti
lret
mov
aaa
pop
sbb
jae
lea
adc
mov
adc
adc
cltd
add
leave
data16
mov
mov
stos
mov
cmp
arpl
insl
dec
insl
cmp
sub
adc
roll
cmp
push
cmp
adc
in
cli
sbb
xchg
cmp
in
stc
lret
sbb
pop
outsl
dec
gs
jl
xor
dec
push
cmp
popf
iret
jl
sbb
ret
es
cmp
fdivs
gs
or
shlb
inc
mov
cld
push
ret
std
mov
adc
push
add
cltd
fcomps
xor
ds
in
lret
fcmove
push
in
jo
push
mov
fwait
int
xchg
std
pop
adc
lds
pop
enter
mov
add
jae
xor
arpl
jmp
xorl
sbb
test
ret
cmp
mov
dec
lret
daa
xchg
lea
xor
mov
jecxz
cli
cmpsb
adc
push
sbb
mov
inc
mov
das
cmc
jo
push
addr16
xchg
or
pop
xchg
enter
pop
dec
addr16
aaa
into
cmc
push
add
adc
xor
ss
cmpsl
mov
add
les
mov
xlat
jb
mov
fildll
lods
stos
inc
sub
cmpsb
arpl
std
xorl
push
jg
sti
xchg
mov
or
jecxz
mov
inc
pop
mov
mov
jge
arpl
push
and
xchg
pop
sub
xor
arpl
aam
inc
nop
push
ficompl
aas
mov
mov
into
cmp
mov
ds
pop
ds
imul
in
mov
stc
jmp
outsb
mov
orb
dec
mov
mov
mov
fwait
xlat
in
scas
outsb
cmp
xchg
pusha
mov
sbb
cwtl
xchg
lds
mov
out
cld
idivb
pop
sbb
cli
mov
mov
add
push
xchg
dec
adc
pushf
xor
sub
push
cmpsl
aaa
shlb
adc
mov
cmp
push
ret
push
negl
mov
fsubs
loope
mov
mov
cltd
fcomi
mov
roll
xor
add
stos
je
jno
jmp
arpl
mov
inc
ss
mov
mov
cmp
leave
and
lcall
into
push
popa
out
arpl
inc
shlb
jno
dec
mov
mov
push
enter
bound
scas
and
pop
cmp
test
popf
dec
mov
sub
mov
pop
jo
subl
std
dec
leave
popf
jecxz
leave
popf
mov
and
pop
xchg
cmp
push
cmp
mov
call
decl
pop
fisttps
cmp
or
into
aas
fldt
pop
pop
add
xchg
data16
or
repnz
xchg
loope
sbbl
clc
xor
fldl
out
jne
jnp
mov
add
test
mov
dec
mov
fs
dec
lods
and
shr
sbb
lods
aad
dec
cmp
or
jb
clc
out
sbb
cmp
nop
fwait
dec
pop
ret
push
cmp
add
jle
dec
fdivr
jge
cli
scas
dec
ja
mov
add
stos
sbb
fcoml
mov
mov
cmpsb
push
out
dec
add
xchg
rcr
call
xchg
mov
dec
mov
add
add
xchg
dec
adc
loop
and
xchg
bound
xchg
adc
add
cs
adc
insb
push
jecxz
mov
outsl
repz
push
cli
push
pop
je
sbb
js
movsb
fdivl
fsubrl
pop
sbb
pop
mov
movsb
adc
jge
push
jno
inc
xor
dec
pop
xchg
sbb
inc
les
fs
fimuls
sbb
pop
mov
mov
sarb
dec
lret
cmp
cmp
mov
repz
pop
adc
cmc
loope
cmp
lahf
pop
loope
cltd
ljmp
loope
loop
add
pop
fcmovb
sub
lds
movsl
inc
and
outsl
rcrl
ret
and
sbb
cmp
js
jl
mov
out
jae
mov
mov
xchg
adc
mov
test
cmp
push
lds
jle
pop
push
sti
sub
jae
or
jno
sub
lods
jg
cmp
lahf
shrl
ss
xlat
pop
cmp
sahf
addr16
dec
daa
mov
jmp
add
lock
addr16
shrb
inc
fldenv
xchg
mov
bound
stc
outsb
pop
inc
xchg
sub
sbb
mov
push
leave
ffreep
mov
clc
je
xchg
test
mov
cmpsb
jno
insl
stc
mov
mov
push
je
add
int3
cmp
push
push
outsb
and
pop
out
ret
dec
outsl
rcll
adcb
iret
mov
flds
cli
stos
pop
out
adc
ja
mov
push
das
dec
push
test
push
dec
push
mov
cmp
leave
test
cmpsb
in
outsl
icebp
xchg
push
adc
cmp
add
mov
and
adc
mov
xchg
adc
std
add
stos
mov
es
dec
jp
sub
cmp
adc
leave
push
data16
das
mov
pusha
pop
bound
push
aaa
mov
int3
cmp
mov
and
xchg
mov
loop
adc
shr
xchg
into
hlt
cmp
cmpsb
pusha
stos
mov
push
sar
push
pop
xchg
xor
rcl
popa
cli
push
fisubl
je
mov
out
push
sbb
xchg
xchg
jle
sbbl
or
push
xchg
add
jae
add
mov
jmp
adc
aaa
inc
mov
and
xor
bound
push
filds
adc
aaa
dec
sub
mov
ret
cmovp
sahf
dec
test
inc
xor
dec
jmp
cmpsb
xlat
jns
scas
pop
fmuls
cs
cwtl
jg
adc
jle
insl
daa
stos
mov
mov
push
cmpsl
cmp
jle
xor
imul
fwait
lds
jg
inc
mov
subb
mov
std
xor
push
pusha
faddl
jo
sub
in
pop
jbe
jmp
imul
jmp
dec
jns
out
and
add
test
dec
inc
cmpsl
jo
fucomip
aas
in
test
sahf
sti
addr16
jae
shrl
outsb
mov
mov
jo
add
mov
jmp
adcb
push
cmpsb
pop
sub
subb
xchg
mov
cmp
inc
cmp
mov
mov
pop
cmp
cwtl
sub
cmp
pop
out
cmpl
lock
mov
into
gs
stos
popf
mov
mov
mov
shlb
pop
jnp
mov
mov
and
add
mov
add
sbb
cmpsl
ffreep
push
lret
xchg
call
sub
add
sbb
push
popa
or
cmp
stos
cmp
xchg
cmp
je
cmp
mov
push
push
mov
in
and
js
sbb
imul
fidivrs
push
cmpsb
xchg
lea
mov
movsb
mov
xchg
jnp
int3
cmpsl
inc
jg
daa
and
fxtract
outsl
dec
mov
xchg
pop
push
shl
call
lods
or
xor
xchg
negb
stos
xchg
mov
and
repnz
rorl
out
pop
leave
popf
sbb
fiaddl
sahf
aam
inc
out
or
out
cmpsl
shr
call
sub
dec
flds
lock
jae
imul
pop
inc
mov
push
cmpsl
lret
push
adcb
or
enter
loopne
sarb
sti
nop
fistpl
test
iret
scas
in
dec
or
push
mov
addr16
ljmp
notb
enter
dec
and
pop
pop
ljmp
jbe
adc
push
das
sbb
cld
ret
cmp
popl
imul
js
je
jmp
cwtl
jno
jae
add
jo
movsl
fisubl
inc
ljmp
xor
dec
cli
enter
pop
xor
sbb
fdivs
lock
sub
or
mov
push
xchg
cld
mov
xor
pop
ds
xor
xor
xor
movsb
in
cli
stos
sbb
jne
xlat
pop
adc
dec
xchg
dec
test
outsl
xchg
xchg
sti
cmp
sarb
sbb
in
mov
stos
sahf
cmpsl
lret
inc
out
clc
adc
xor
mov
xchg
xor
fs
add
lcall
aad
dec
sahf
mov
push
xor
cmp
mov
push
fs
fdiv
and
insl
adc
and
xor
adc
jmp
ds
inc
pop
cmpsl
sbb
push
in
sub
ja
mov
filds
movsb
popf
xor
and
xor
xchg
jge
fidivl
mov
dec
jb
jmp
push
aam
pop
push
mov
xchg
xor
aad
mov
lahf
enter
std
out
rolb
dec
cmpsl
arpl
push
sahf
shlb
inc
sub
loope
push
scas
pop
lcall
jge
cmp
mov
pop
jns
push
push
push
sub
outsl
ret
lods
add
mov
lcall
dec
mov
sub
cmp
and
lds
out
push
int
or
lock
stos
rolb
lock
outsb
out
int3
in
int
out
mov
cli
daa
mov
push
enter
and
pop
or
cmp
cltd
xchg
inc
arpl
mov
jae
popa
out
lods
push
aam
insl
into
xor
and
push
fadd
fnstenv
cwtl
sti
push
pop
pop
mov
push
mov
add
jecxz
mov
out
mov
fs
stc
stos
ret
inc
sub
push
pop
or
mov
xchg
mov
xor
or
adc
mov
jp
and
pop
dec
push
push
adc
divb
cltd
xor
jmp
mov
daa
scas
push
ja
fstp
mov
mov
mov
jge
fs
pop
popa
sti
sub
add
push
mov
cmp
pushf
or
push
sbb
push
icebp
dec
stos
outsl
jle
movl
ds
jecxz
push
and
es
and
fwait
pop
dec
adc
pop
daa
push
les
stos
scas
and
and
mov
insb
daa
inc
mov
add
adc
idivl
lds
js
aad
ret
ror
xchg
sbb
mov
mov
jbe
sub
adc
out
or
mov
mov
scas
insl
cmp
test
cmp
push
cltd
int3
push
pushw
sbb
arpl
or
out
push
xchg
in
jae
cwtl
cmp
daa
std
or
sar
and
dec
mov
add
mov
push
jle
jg
jle
mov
lock
or
xchg
shrl
sbb
pop
adc
ret
fnstcw
out
dec
inc
add
and
int
rclw
sub
aam
insb
divl
dec
sbb
sbb
jl
shll
inc
adc
aas
bound
idivb
xor
push
icebp
insl
jno
mov
cmp
pop
call
out
cld
bound
test
enter
fcmovne
mov
fidivs
add
adcb
or
pop
push
popl
vpsubd
ficompl
xor
pop
arpl
xor
fs
pop
mov
mov
push
jnp
add
xchg
xor
mov
pushf
iret
xor
add
dec
mov
in
cmc
add
inc
rol
jp
repz
sub
or
push
aad
ficomps
xor
ss
xchg
cmc
lret
pop
or
icebp
cmc
xchg
xlat
stc
test
xchg
inc
or
jle
sub
inc
or
xor
and
mov
clc
inc
icebp
sbb
dec
hlt
push
cmp
enter
push
cmp
or
pop
sbb
sti
lret
jl
sbb
lret
insl
jecxz
fistpl
enter
icebp
add
push
pop
fs
inc
inc
ret
xchg
jbe
mov
in
push
pop
dec
pop
or
lret
subl
mov
aaa
mov
dec
ret
fcompl
xor
jae
clc
popa
aam
lea
cmp
mov
aas
std
sbb
insl
mov
mov
ja
cmp
mov
fwait
nop
push
mov
sbb
xor
std
addr16
mov
fildl
xchg
lahf
repz
pop
mov
shrd
sbb
fs
imul
pop
arpl
sbb
ja
dec
loopne
mov
sti
push
daa
fidivrl
lock
sub
scas
sar
sub
out
cwtl
ss
std
adc
cmpsl
stos
adc
mov
push
xor
sub
adc
fs
aas
sub
std
pop
mov
inc
jmp
lea
sub
mov
mov
jle
ret
cwtl
out
in
ja
inc
shrl
iret
add
ss
inc
mov
or
pop
mov
mov
cmp
pop
mov
test
inc
orb
cmp
icebp
inc
scas
test
cmc
add
rcll
std
pushf
clc
inc
mov
shrb
and
cmp
int3
xor
xchg
das
in
movsb
jae
and
test
nop
push
stos
das
push
mov
lds
cmp
enter
in
jg
mov
sbb
repz
pop
xchg
and
add
sar
mov
cmpsb
rclb
or
fsubs
subb
rcrb
add
cmp
push
std
aam
mov
sbb
daa
jle
es
adc
bound
orb
pop
hlt
xchg
inc
push
pushf
mov
icebp
add
mov
sti
dec
xor
insl
ror
pop
push
pop
mov
dec
mov
test
pop
pop
xlat
sti
jbe
inc
jmp
add
cmpsl
or
outsl
push
and
sbb
aam
pop
scas
fdivs
add
xor
adc
cmp
bound
pop
mov
in
cmpsb
sbb
loope
and
cmp
mov
mov
sarb
jnp
fiadds
push
sub
adc
cmpsl
mov
arpl
pop
push
daa
cmp
in
push
out
fstpl
test
adc
or
push
pushf
sub
xor
xlat
add
aam
lret
inc
mov
bswap
dec
xchg
jl
jo
push
push
adc
push
iret
clc
pop
xor
stc
xchg
dec
xor
std
mov
cld
outsl
mov
mov
push
push
jmp
jle
mov
idiv
cmp
mov
sarb
cmc
jmp
push
pop
call
inc
cli
xchg
out
pop
arpl
cmp
jb
push
adc
and
xchg
mov
push
or
daa
shl
imul
mov
fwait
test
push
jo
add
xchg
mov
out
push
lods
cmp
mov
mov
lea
fisubrs
xchg
js
aam
loopne
jae
pop
pop
mov
shrb
repz
pushf
addr16
add
and
adc
xchg
push
and
jge
sub
les
dec
add
sbb
inc
mov
dec
aas
lods
mov
leave
clc
fistps
add
fs
push
xor
mov
adc
pop
std
push
cmp
repz
cmpsl
adc
jns
das
pop
adc
faddl
cltd
add
int
imul
sub
push
inc
fdivrs
imul
test
test
xlat
jbe
jge
movsl
cbtw
push
fcomps
pop
aaa
loop
cmp
mov
int
add
push
sbb
mov
pop
dec
lret
rcl
loope
xlat
in
cmp
xchg
bound
xchg
xor
adc
out
in
div
lret
xor
imul
insb
xchg
mov
cmp
or
aam
negl
lods
popf
xchg
scas
add
mov
pop
inc
adc
arpl
dec
pop
xchg
enter
cltd
sub
dec
mov
scas
in
push
pop
stos
inc
pop
inc
das
or
lahf
adc
adc
inc
mov
inc
adc
mov
xchg
push
xchg
repz
aaa
iret
clc
fiadds
push
xchg
mov
cmc
jns
testl
xor
xchg
dec
loope
hlt
out
pop
mov
mov
dec
push
mov
ss
js
inc
mov
xor
cmp
sbb
push
cmp
mov
and
jae
and
les
scas
dec
xor
mov
repnz
stos
and
outsb
rolb
outsb
push
mov
cmc
test
test
jle
pop
xchg
clc
cs
cmp
sbb
inc
add
fisttps
dec
push
cmp
test
mov
loope
cmp
outsl
or
mov
and
sub
sbb
and
hlt
xchg
call
add
sahf
lods
push
push
inc
sahf
and
pop
ss
fistl
fstpt
jecxz
jno
ficoms
dec
add
fsubs
pusha
ret
loopne
xor
mov
das
push
pop
int
imul
push
aaa
jl
cltd
xchg
pop
lahf
and
leave
fadds
sbb
pop
lahf
test
push
push
in
push
scas
fstpl
ljmp
arpl
fwait
inc
in
enter
xor
loopne
adc
jg
stc
ret
and
pop
xchg
or
jb
fstl
ficompl
cli
dec
fdivs
test
sbb
insb
clc
fimuls
jbe
and
ret
push
jge
fsubrl
sub
xchg
jb
or
adc
cmp
movsl
mov
cmp
pop
push
bound
or
and
mov
xchg
and
repz
inc
mov
lods
fsubs
lds
adc
fnstcw
leavew
stos
xchg
mov
mov
aam
mov
sarb
inc
fmuls
jp
fscale
mov
sbb
push
mov
mov
jnp
jnp
bnd
inc
mov
divb
sub
gs
push
sub
pop
mov
dec
xchg
xchg
int
ret
ja
add
insb
aaa
rorb
icebp
incl
loope
push
mov
inc
xchg
testb
popa
in
push
dec
loop
mov
or
outsl
adc
addb
sahf
jecxz
mov
cmp
leave
insb
mov
sbb
mov
cmp
and
xor
ljmp
jb
mov
jns
clc
mov
je
mov
push
add
ja
jo
mov
mov
in
mov
cmp
dec
adc
jo
les
int
mov
data16
ja
mov
push
aaa
jp
push
cld
sub
stos
lds
jl
sub
popa
test
sub
and
jmp
sbb
icebp
add
xor
sar
xchg
pop
mov
outsl
cld
dec
lahf
fbld
pop
daa
and
test
lods
sar
jle
lret
push
out
ret
js
sbb
adc
dec
sub
push
in
push
stc
test
dec
xchg
adcb
xlat
rcrb
ss
mov
int
push
sti
add
dec
es
jo
sbb
jp
andl
pop
cmc
or
and
insb
push
in
adc
fldl
rclb
outsl
inc
pop
jecxz
imul
push
and
sbb
mov
mov
mov
es
or
jb
pop
fs
test
mov
dec
mov
push
pop
cmc
push
xchg
stc
dec
adc
jp
sarb
lea
xchg
pop
adc
sub
push
ds
ret
ret
lcall
inc
push
pop
jae
dec
xor
jns
fcmovnu
loopne
xchg
pop
in
adc
outsb
in
mov
push
xor
inc
lea
jae
hlt
mov
push
hlt
cmp
rcll
inc
ljmp
lret
nop
sbb
or
je
sbb
fs
inc
int
and
mov
fsubl
or
pop
imul
dec
daa
int3
andb
xchg
cmpsl
push
sub
xchg
sti
jmp
lret
fnsetpm(287
mov
ja
daa
pop
and
imul
dec
adc
js
shll
ljmp
jle
mov
adc
jmp
dec
and
adc
adc
cmp
and
icebp
outsl
adc
add
rolb
test
bsf
push
jns
and
jb
jl
scas
jno
cs
xor
mov
loopne
cmp
sub
mov
push
sbb
pop
xchg
bound
stos
aaa
or
cmp
mov
mov
es
pop
shrb
cmp
jle
out
scas
jle
fsubrs
imul
leave
andb
stc
xchg
mov
ss
loop
mov
lret
out
rorl
inc
dec
sbb
push
movb
mov
jns
cmpl
pusha
xor
or
mov
adc
fstpt
jns
scas
out
push
sbb
ss
inc
repz
out
jne
dec
aad
fistpl
or
mov
and
xchg
insl
mov
mov
popa
adc
push
data16
jns
loope
xchg
jg
or
mov
xor
rcrb
mov
into
mov
popa
enter
mov
jnp
pop
pop
test
jecxz
dec
ret
jl
fldl
mov
jno
lea
jb
aaa
mov
mov
das
add
mov
xor
dec
and
mov
icebp
push
je
fstl
outsb
sbb
aas
addr16
popf
fcoms
insb
iret
mov
jbe
rclb
rep
pusha
lcall
sarl
add
out
sub
inc
xchg
sbb
dec
inc
xchg
popa
ficompl
add
pop
in
mov
mov
mov
mov
fisubrs
insl
cmp
int3
rorb
xor
sbb
adc
cwtl
sbb
or
cmp
push
xlat
jb
loopne
jns
movsb
push
into
jb
dec
mov
jl
dec
fcomp
and
dec
cwtl
xchg
loope
xor
push
ret
mov
cmp
fdivl
adc
bound
mov
pop
fwait
in
dec
call
sbb
cld
add
sub
sub
adc
mov
ret
ffree
jns
scas
imul
imul
inc
add
out
and
or
aad
add
jno
ljmp
dec
dec
les
and
adc
daa
xor
fwait
and
mov
xchg
dec
push
cmpl
movsb
xchg
sbb
cmc
call
aad
ror
lods
das
cli
xor
push
cmp
fnstsw
fs
je
sub
enter
popa
repnz
jl
dec
orb
inc
jno
movsb
aad
inc
mov
mov
iret
pop
out
xchg
xor
mov
push
jge
shll
imul
ja
insb
dec
pop
add
mov
fbld
dec
inc
dec
mov
das
push
lods
lahf
push
test
iret
jne
mov
or
pop
add
sbb
stos
mov
or
inc
mov
push
pushaw
cli
pop
mov
jb
out
cmp
test
jb
sub
xor
jmp
mov
clc
pop
mov
nop
adc
sbb
jbe
jmp
jge
sub
out
fs
mov
mov
dec
pop
out
xchg
add
mov
not
lret
push
in
dec
sti
aad
and
push
or
dec
cld
pushf
or
or
fisubrs
mov
subl
jns
cmp
adc
das
fildll
pop
shll
inc
pop
ret
aad
pop
adc
ja
divb
dec
xor
mov
loop
jle
sbb
adc
imul
mov
movsl
into
cmp
add
sub
ss
pop
pop
pop
sbb
and
aam
ficoml
lods
or
sbb
cmpsb
inc
ljmp
jecxz
out
mulb
arpl
pusha
mov
jnp
jnp
mov
mov
sub
out
mov
out
mov
xlat
lahf
mov
xchg
or
xchg
data16
hlt
mov
stos
mov
pop
or
mov
cmp
inc
movsb
aas
jecxz
insb
mov
sbb
or
fldenv
imul
cmp
sahf
or
mov
imulb
ret
data16
int3
arpl
add
icebp
lock
dec
inc
aam
push
pop
ret
sbbl
xchg
mov
xchg
xor
mov
dec
in
mov
imul
lcall
sub
xchg
mov
popf
or
loope
pop
inc
adc
cmp
mov
es
shll
adc
int
pusha
dec
mov
sub
cmp
psubsb
jl
ljmp
mov
jg
push
testb
pop
repz
mov
xlat
cmpsl
dec
xlat
ds
add
insl
lods
xor
daa
test
leave
daa
jmp
out
mov
movsl
push
addr16
aam
add
pop
daa
and
mov
pop
inc
test
lret
in
pop
and
cmp
insl
les
sub
mov
mov
mov
ret
stos
and
insl
subb
movsl
lds
test
lea
mov
xor
push
test
mov
pop
leave
cmp
cmp
push
arpl
xchg
in
mov
lcall
bound
jmp
lcall
je
ret
push
add
add
repz
cmp
cltd
push
and
sub
jbe
mov
in
cmp
mov
mov
mov
and
cli
pop
jge
das
lods
mov
popa
and
fldt
and
shl
ljmp
inc
js
pusha
cmpsl
in
lods
jmp
hlt
stc
roll
jno
jecxz
mov
movzbl
add
adc
sahf
xchg
dec
jno
fs
sbb
inc
std
scas
mov
into
test
inc
mov
push
nop
push
pop
mov
mov
cld
inc
push
mov
inc
fimull
xor
or
pop
mov
mov
outsb
mov
call
mov
push
test
jbe
dec
stos
sbbl
lret
mov
xor
in
and
adcb
push
jno
ds
decb
repz
stc
adc
add
dec
lahf
outsl
jne
inc
or
sub
fldcw
aas
mov
jmp
xchg
mov
repnz
lahf
jae
test
icebp
popa
push
aaa
add
pop
loopne
ficomps
test
pop
lods
cmc
mov
lahf
stc
shl
mov
sub
test
mov
sub
insl
jg
ret
rcll
into
leave
test
sub
adc
out
fld
sub
cmc
lret
push
fs
pop
cmc
push
jb
stc
xchg
lret
push
rclb
outsl
jbe
xchg
gs
inc
lock
aam
popf
sahf
pop
push
cld
sbb
aam
lods
xchg
ljmp
xchg
jns
popa
cmpsb
shlb
jp
sbb
pop
cmp
mov
mov
add
jo
call
ja
xor
inc
pop
icebp
int3
fs
pop
xlat
lods
push
dec
mov
shr
inc
outsl
lods
int
mov
es
icebp
xchg
inc
test
popf
aaa
or
aaa
lret
push
aas
clc
movsb
rcrl
mov
std
inc
ljmp
jne
call
dec
inc
and
lahf
loopne
mov
and
shlb
ja
pop
xchg
push
test
or
push
cmp
addr16
push
aam
cmp
lods
lret
test
es
pop
pop
sahf
iret
cltd
mov
or
stc
lods
lret
add
xchg
mov
daa
jl
mov
popf
jb
outsl
or
andb
sbb
out
pop
jmp
add
ss
sbb
cs
inc
adc
lcall
dec
mov
mov
inc
aas
xchg
sahf
sub
push
sub
add
jo
mov
push
lods
orl
fs
push
mov
add
mov
and
jp
arpl
xor
cwtl
mov
and
and
daa
dec
les
jp
push
and
ret
stos
or
popa
add
cs
dec
mov
repnz
fldl
cmp
inc
stos
sbb
sub
movsb
inc
insl
xchg
pop
ret
dec
gs
xchg
sahf
fs
xchg
insl
enter
sbb
fisubrs
sub
inc
xor
cmp
xchg
scas
cmp
sbb
sbb
jg
scas
push
call
movsl
sbb
push
sub
add
mov
mov
or
add
pop
pop
add
in
xchg
ret
ret
orb
jae
sbb
mov
dec
int
mov
sbb
cltd
push
jge
inc
xor
xor
insb
loop
leave
scas
outsl
test
jecxz
loope
xchg
adc
cmpsb
jns
jns
les
and
xchg
push
mov
sub
pop
fadds
popf
cwtl
mov
sbb
mov
test
jns
gs
shl
xchg
aaa
mov
mov
mov
mov
xchg
or
sarl
pop
cmp
xor
addr16
test
rorl
int
mov
rcrb
sub
xor
loope
dec
or
adc
sub
imul
out
popf
jo
call
add
mov
sub
dec
or
fidivrs
push
dec
arpl
xchg
test
sbb
movsl
gs
ja
es
add
sub
popf
sub
push
out
std
or
mov
mov
xor
cltd
and
sbbl
imulb
clc
pop
sbb
lods
dec
insl
push
mov
fstpt
pop
aam
push
shlb
popf
sbb
lcall
push
dec
pop
cmp
push
add
fcoml
iret
repnz
push
notb
push
movsb
aaa
xor
mov
outsl
xchg
dec
push
push
repz
daa
arpl
pusha
mov
cmp
jl
and
mov
loop
popa
add
cmp
imul
clc
popf
xor
testb
lret
and
jl
inc
in
pop
xor
fldl
jl
push
rcl
cld
mov
icebp
bound
fildll
in
shrl
inc
sahf
fldt
mov
hlt
add
cltd
test
sbb
pop
out
sbb
mov
cmp
data16
or
sub
inc
dec
jb
std
mov
popa
jo
popa
call
in
hlt
pop
inc
aam
movb
push
mov
inc
jge
push
loopne
ret
pop
jno
mov
pusha
lret
or
mov
pop
jns
or
xchg
lret
mov
addr16
sub
loopne
rcrl
mov
mov
mov
mov
ja
xor
imul
pop
test
pushf
bndldx
pop
movsl
shrl
call
lahf
mov
cmp
rcrb
jo
sbb
fwait
add
jmp
mov
movsb
test
mov
xchg
enter
add
bound
cld
xchg
dec
mov
sbb
add
sub
sub
cmp
in
sarl
lret
cmpsb
cmp
icebp
cwtl
fcoml
cli
insl
push
adc
and
mov
mov
shlb
add
aaa
adc
lahf
cmp
enter
and
jecxz
test
or
and
cmpsl
jne
mov
cmp
add
cmp
fadds
push
and
pop
jne
or
sbb
xor
js
in
push
int3
or
pop
fwait
pop
sub
stc
jecxz
cmpsl
xor
mov
push
sti
shll
cwtl
sti
js
inc
and
xor
cs
jge
repz
outsl
jle
xlat
or
ret
jae
cmpsb
xchg
inc
gs
pop
rcl
mov
aaa
add
dec
xchg
adc
test
lret
push
pusha
adc
int
in
pusha
popa
icebp
insl
pop
mov
addl
mov
push
mov
add
icebp
adc
dec
fldt
cli
pushf
xor
inc
mov
fidivrl
xchg
mov
mov
ja
ljmp
in
mov
fisubl
icebp
jo
fwait
xchg
dec
enter
pop
sbb
cmp
mov
pop
gs
call
fidivrs
xor
and
enter
dec
je
inc
mov
movsl
cmp
stos
jmp
rcrb
divl
fildl
xchg
xchg
in
dec
or
xchg
or
or
ret
hlt
cmp
dec
stos
sti
mov
xor
movsb
test
repnz
inc
dec
lahf
orl
mov
xchg
inc
lahf
fs
mov
mov
ret
es
mov
lock
adc
mov
add
cmpsb
pop
sbb
fmul
fwait
mov
stos
iret
add
lods
xchg
add
aad
sarb
inc
push
mov
dec
in
mov
xor
push
iret
fsubs
cmp
cmp
mov
in
push
push
lds
cltd
mov
jne
sub
leave
pusha
sub
pop
add
fldl
int
addr16
mov
loope
cmpsb
adc
mov
test
fcoms
daa
aas
and
faddl
dec
mov
enter
in
clc
and
mov
inc
lods
mov
mov
repz
in
sbb
add
nop
ljmp
inc
jo
lods
jne
mov
cmp
scas
ret
mov
mov
and
pop
ja
jb
lock
dec
add
jge
pop
adcb
xchg
dec
lcall
mov
mulb
mov
inc
mov
mov
aas
sbb
push
mov
ds
fistps
scas
popf
or
xchg
sub
mov
cltd
scas
shlb
jg
ret
scas
add
in
iret
jae
pop
sbbl
adc
in
jecxz
xchg
xlat
add
dec
jbe
sbb
data16
xor
push
lds
mov
in
pop
dec
and
int3
imul
mov
dec
in
flds
mov
xor
mov
jnp
cmpsb
popf
sub
adc
in
mov
jl
cmp
imul
insb
hlt
lock
mov
xchg
cmpsb
fbstp
test
and
jae
adc
mov
imul
xor
or
mov
pop
xor
add
or
sub
imull
repnz
lea
mov
mov
daa
das
inc
flds
rcll
pop
inc
sbb
lods
xchg
pusha
stos
cmpsb
cmp
and
or
cmp
jle
cmpsl
cmp
mov
lcall
or
subl
mov
jns
sub
lods
lret
test
sbb
xchg
icebp
cmpsb
pop
lock
xor
std
jecxz
jmp
push
lods
pop
les
pop
stos
fdivs
jmp
and
mov
aam
xchg
ret
cli
jmp
jp
sub
dec
jno
pop
adc
in
push
aam
cmp
fucomi
rcr
sbb
das
scas
sub
adc
ficoml
xchg
push
push
add
xchg
sub
jmp
xchg
pop
mov
inc
in
pop
fmul
and
mov
xchg
cmp
hlt
andl
adc
pop
ss
xchg
das
test
xorl
mov
nop
mov
lcall
cmp
in
loop
pop
fsubl
ds
xor
adc
sub
and
or
xorl
test
decl
gs
inc
jl
in
pop
ret
xor
push
add
fnstcw
nop
in
xchg
stos
push
stc
loope
loope
fwait
mov
sub
ds
fucomp
adc
sub
lret
dec
add
test
in
in
shlb
mov
pop
sahf
cmp
xchg
and
adc
loopne
xchg
jnp
cmp
xchg
add
js
cmp
rcr
js
lods
xchg
pop
push
jecxz
lahf
dec
hlt
sbbb
ljmp
call
or
sbb
mov
sbb
sbb
push
inc
ljmp
test
shrb
xchg
sbb
out
andl
push
cli
fwait
aad
inc
push
xchg
in
test
inc
loope
int
add
add
push
aaa
xchg
inc
enter
jmp
xor
push
mov
cmpsb
in
testl
push
xchg
push
cli
pop
repnz
lock
push
push
shrb
test
pop
mov
push
jne
lods
push
mov
ret
fucomip
lret
fcomps
lock
mov
and
push
adc
jbe
fwait
xchg
iret
add
or
mov
into
js
jb
repnz
sub
jle
xor
xchg
inc
call
push
stos
jo
stc
das
movsb
inc
ljmp
mov
cmpl
cmc
pop
inc
cmp
test
jns
in
dec
mov
push
dec
insb
add
imul
ja
leave
push
or
push
mov
int3
loop
push
cmp
push
shl
in
push
adc
sub
out
jp
jmp
loop
ds
push
scas
outsb
sbb
adc
push
xorb
inc
inc
stos
cmp
xor
les
inc
fsubl
xchg
lock
aad
test
movsb
xchg
pop
cwtl
dec
data16
lods
sahf
cmp
jo
xchg
or
mov
les
xchg
cld
lods
adc
popa
stos
mov
inc
aaa
pop
and
popa
mov
pushf
mov
adcb
cmpl
sbb
xor
push
push
ror
in
ljmp
ljmp
pop
andl
gs
lret
pop
lea
jo
repz
inc
inc
jae
xlat
mov
push
xchg
jbe
push
loop
xor
fidivs
unpcklps
iret
mov
xor
adc
adc
sub
sbb
out
ljmp
add
push
or
sub
rcr
mov
fs
gs
test
xor
sbbb
mov
add
jmp
out
mov
lahf
inc
and
push
aaa
leave
xchg
je
jg
test
insl
xorl
xor
sahf
aad
push
pop
cmp
mov
into
jbe
stos
inc
scas
int3
mov
pop
xor
pop
pop
cmp
dec
lahf
je
xchg
bound
shrl
push
mov
push
adc
mov
cmp
aaa
cmp
jp
clc
fisttps
andl
mov
push
fdivp
fiadds
int
hlt
leave
roll
mov
and
dec
add
add
repnz
xchg
mov
mov
das
les
mov
and
jo
movsl
pop
out
push
mov
and
outsb
out
clc
das
xor
jo
pop
push
pop
adc
int
jno
testl
mull
mov
pop
pusha
mov
pushf
pop
pusha
add
loopne
int
popf
inc
xor
inc
shll
xor
mov
xor
xchg
mov
inc
je
mov
cmp
mov
push
pop
fadds
pop
mov
shl
mov
pop
test
adc
dec
jbe
divl
das
cmp
add
pop
in
and
pop
testb
aad
addr16
mov
lock
aaa
inc
inc
pavgb
inc
out
lret
mov
lock
inc
xchg
arpl
push
sbb
or
lahf
jne
cltd
cmp
shlb
int3
movsl
cmp
das
or
pop
daa
dec
cmp
andl
popa
adc
mov
and
stos
insl
jno
stos
cmc
mov
jl
cs
pop
in
lea
mov
in
cs
stos
std
fistl
ja
cmpsl
dec
sub
xchg
adc
and
mov
rcrb
popf
cmp
in
shr
cld
lret
mov
adc
pushf
and
repz
loopne
popa
cld
xor
jns
jbe
push
add
sbb
pop
test
inc
je
stos
pop
xchg
test
cwtl
sbb
lret
hlt
xor
xchg
popa
fincstp
cmp
int3
mov
jmp
lods
in
aam
roll
call
into
cli
mov
lcall
sub
pop
daa
inc
out
jo
nop
dec
sbbl
jge
or
sub
xor
test
icebp
mov
mov
inc
into
fwait
mov
into
fnstcw
nop
push
dec
mov
mov
imul
dec
sbb
sub
or
push
inc
mov
pop
dec
dec
jo
test
inc
jp
jnp
mov
out
icebp
das
pop
inc
and
je
mov
loope
in
adc
adc
dec
stos
test
lock
push
subl
jno
add
cmp
add
mov
mov
ds
inc
xchg
scas
mov
xchg
jle
mov
test
mov
xchg
lea
lods
loope
jno
aas
sbb
jno
and
adc
scas
test
imul
mov
repnz
push
lret
or
jge
xor
mov
cwtl
mov
inc
stos
sahf
sub
ret
add
cmp
and
mov
mov
xor
das
popa
hlt
test
in
aaa
sub
add
rolb
cmp
push
mov
imul
jecxz
inc
add
dec
jb
leave
fidivs
sbb
nop
stc
mov
inc
outsl
mov
int3
scas
mov
xchg
xor
mov
js
sub
ret
jmp
lods
addr16
dec
sbb
xchg
jecxz
repnz
in
cmp
jmp
repz
cmp
add
jns
ret
cmpsl
int3
shl
iret
pop
iret
xchg
repnz
cmpsl
push
lret
jnp
jno
ret
xorb
rclb
fdivrp
mov
shlb
insl
ja
sub
clc
mov
push
arpl
mov
arpl
fiaddl
sub
jmp
xor
xor
jnp
push
or
xchg
and
jmp
mov
addl
lret
mov
adc
xchg
mov
aad
orb
mov
cld
pushf
popa
imul
adc
out
aad
xlat
dec
xchg
cs
cmp
cmp
jne
and
sbb
gs
jae
mov
jge
cmp
data16
or
leave
jl
mov
jmp
in
test
jle
cmc
and
out
push
jae
andl
stc
pop
out
xlat
cmpb
repz
or
mov
jmp
popa
shlb
sarl
fdivp
dec
lea
dec
int
outsb
pop
adc
scas
rclb
pop
push
leave
je
push
lcall
scas
shl
adc
fmull
push
push
sbb
imul
add
clc
sbb
outsb
int
or
andb
inc
lock
mov
cli
and
mov
dec
pop
int3
jbe
fisubrl
adc
sbb
insb
adc
pop
xchg
bound
pop
push
imul
inc
push
leave
cmc
shlb
jnp
fistpll
pop
cmp
fsubl
lds
dec
mov
pop
aaa
and
xor
mov
jecxz
push
adc
sbb
pop
pop
mov
pop
cwtl
sahf
loope
jl
mov
aaa
rcl
and
sti
xchg
cmpsb
sbb
mov
shl
cwtl
rep
les
in
bound
jmp
mov
pop
lahf
scas
pop
and
out
xor
jae
sti
lret
test
mov
outsl
in
daa
data16
jae
rorl
cwtl
test
aaa
bnd
ds
dec
ds
push
jg
pop
repz
pop
xchg
jnp
lret
pop
mov
psubb
das
sub
loopne
repz
fiaddl
into
pause
adc
sbb
test
cmpsb
sub
push
clc
scas
mov
sub
addr16
dec
iret
enter
gs
push
and
push
call
stos
inc
xor
and
mov
frstor
push
hlt
rorl
and
int3
mov
lcall
sti
pop
daa
dec
arpl
pop
cmp
subb
neg
addb
insl
mov
fisubrs
fidivrs
jns
xchg
mov
fmulp
std
mov
insl
and
or
push
mov
stos
mov
jae
setno
sub
sahf
sbb
or
es
cmp
mov
add
and
or
popl
cmpsl
jbe
mov
xchg
aad
mov
mov
insl
mov
mov
sbb
rorb
xor
frstor
sub
mov
js
pop
fadds
mov
in
arpl
lahf
repnz
jl
add
loop
lcall
push
enter
cmp
mov
xlat
mov
cltd
stos
ret
sbb
and
pusha
in
das
mov
mov
cs
je
or
movb
inc
inc
cli
je
mull
iret
movsb
mov
gs
repz
or
inc
push
fwait
adc
inc
test
popf
pop
je
loop
andb
add
jns
sbb
sbb
add
inc
cmp
sbb
outsl
xor
sti
test
mov
ja
fcomps
mov
or
xor
xlat
mov
mov
pop
popf
insl
push
fadd
sub
xchg
push
fwait
std
mov
or
and
push
xchg
lahf
std
adc
sahf
icebp
dec
addb
or
outsl
mov
push
adc
or
xor
dec
rcrb
in
pop
mov
dec
popf
lret
dec
insl
add
stos
shr
gs
push
stc
cli
mov
xchg
jb
pop
cli
sbb
cmp
or
out
divb
jge
sub
push
xor
push
mov
adc
fisubs
pop
xchg
dec
mov
jb
inc
or
insb
nop
pop
in
and
mov
or
push
test
dec
lock
sub
cmpsl
fdivl
jns
sysenter
pop
pop
xchg
or
push
fmulp
aas
push
ss
mov
lods
js
dec
mov
or
jecxz
repz
stos
xchg
cwtl
out
lods
cld
push
jne
test
sbb
out
xor
aas
fdivrs
adcb
ds
sbb
fcoml
orl
mov
fcmove
mov
stc
out
jno
ficoms
and
dec
or
sub
pop
std
jns
xor
cmp
jge
subb
cmc
ret
out
loop
mov
xor
imull
sbb
sub
inc
sbb
add
jb
mov
fs
cmp
or
pop
inc
cmp
sub
and
jnp
pushf
dec
push
cs
inc
xchg
shrl
dec
in
int
pop
pop
adc
add
mov
aam
in
pop
dec
pusha
sbb
insb
or
push
dec
push
xchg
fisttps
ss
in
lret
imull
push
pop
repnz
and
pusha
adc
mov
jb
test
test
xlat
sbb
pusha
xchg
adc
pop
mov
mov
leave
or
push
add
jbe
jo
movsb
fbstp
jbe
call
mov
ja
aas
dec
dec
jle
les
or
fidivs
mov
adc
mov
cmp
sbb
or
mov
dec
rcll
or
adc
ja
mov
mov
sub
and
xchg
cmp
cmp
mov
and
dec
dec
dec
push
notl
mov
out
inc
dec
aam
mov
xor
and
rclb
mov
push
pop
int
xchg
adc
sub
fdivs
es
addr16
leave
push
dec
popf
out
push
and
dec
mov
rclb
out
clc
push
fdivrl
mov
cmpsl
xor
add
push
jp
fdivl
fcmovnbe
mov
js
sub
jnp
add
lods
cmp
int
clc
inc
gs
int
cli
xchg
or
xchg
inc
es
mov
inc
rclb
pop
out
jne
add
cmp
mov
push
fildll
mov
jmp
push
dec
stos
adcl
les
or
mov
xor
out
rorl
mov
and
lahf
dec
mov
adc
cmp
or
fnstsw
pop
mov
fwait
or
mov
xlat
adc
sub
sarl
pop
push
add
inc
inc
mov
and
fucom
inc
cmp
fnstsw
mov
push
pop
sub
pusha
pop
pushf
fwait
or
push
lock
movsb
nop
inc
lock
bound
jg
int3
sbb
mov
lock
nop
and
sbb
sarl
mov
mov
mov
popf
mov
add
push
add
push
and
add
cmpsb
dec
ja
lret
or
into
pop
add
jne
push
push
ficoms
ja
xor
sbb
imul
mov
pushf
std
mov
pop
iret
jb
cmp
xchg
loop
or
movsb
jl
pop
cmpsb
paddd
jo
stos
mov
xor
dec
mov
sub
enter
add
imul
mov
fistl
int
hlt
lds
xor
fcomip
mov
addl
lods
out
xchg
movsl
pop
outsl
lret
mov
pop
pop
fwait
or
add
lock
add
outsl
ljmp
or
mov
mov
into
fildl
mov
bndstx
test
outsb
mov
dec
idivb
je
sub
leave
add
pusha
stos
push
push
scas
inc
nop
cltd
jb
ljmp
jge
adc
call
jmp
push
clc
or
loopne
lds
in
xchg
mov
lcall
dec
subb
aam
jge
insb
cmp
push
push
out
outsb
xor
hlt
mul
imul
mov
ret
mov
aaa
push
rorl
stos
inc
or
mov
xchg
nop
dec
xchg
sub
dec
push
push
push
out
add
sbb
pop
jo
lea
test
adcb
adcb
mov
sbb
push
or
sbb
loop
mov
dec
sub
or
sbbl
mov
insb
sbb
dec
out
mov
sub
and
xor
inc
dec
add
xchg
and
out
cltd
or
mov
adc
scas
xchg
sub
inc
mov
pop
push
sub
mov
aas
xor
in
aad
and
jmp
add
hlt
push
sbb
mov
cs
mov
mov
sub
pop
stc
into
push
or
sub
insl
cmp
adc
jl
clc
xchg
add
outsl
mov
jne
xor
lods
inc
popf
mov
xchg
mov
push
inc
add
insb
add
test
jbe
lret
gs
js
jg
fldt
out
cmp
xor
add
test
ret
cmp
push
add
mov
les
jae
lds
sbb
push
push
aam
pop
xor
xlat
imul
or
test
adc
rclb
fnstsw
jecxz
es
cmp
lds
iret
inc
fbld
push
push
cmp
ss
ss
push
mov
cmp
mov
roll
dec
negb
sub
mov
std
fbstp
push
add
sub
xor
sbb
leave
add
mov
or
stc
mov
sub
pop
lock
dec
xor
pop
pop
jmp
push
aad
xorb
inc
cmp
sub
xor
movsl
jg
jle
pop
loopne
clc
repnz
mov
pop
lahf
pushf
sbb
cmpsb
jl
in
push
mov
mov
xor
push
idivl
push
cli
stos
std
mov
rclb
data16
lods
jb
mov
sub
stos
mov
mov
sub
push
push
adc
rorl
outsb
jae
ss
inc
pop
inc
pop
pop
fdivr
insb
loope
mov
jbe
sbb
mov
repnz
stc
pop
repnz
or
ds
das
dec
cmp
mov
mov
dec
lock
stos
dec
call
or
pop
stos
rcrb
pop
push
iret
push
lahf
cmpsb
and
ds
mov
paddw
xchg
repnz
cmp
scas
add
jecxz
aam
fidivrl
scas
mov
add
imul
sub
lods
add
mov
cld
fs
sbb
xchg
aam
in
icebp
jp
and
or
cmp
in
adc
mov
je
int
sbb
sbb
stc
adc
in
ret
inc
pop
rcrb
add
icebp
add
xor
loopne
leave
imul
cli
mov
mov
sbb
push
add
add
cmc
fisubs
jge
shlb
sbb
pop
aas
fsubp
mov
xor
sti
int
fdivrl
sub
inc
sahf
adc
cmp
cld
loopne
lcall
adc
or
push
jge
js
adc
dec
pop
push
sbb
xchg
paddsw
aaa
push
pop
mov
push
arpl
or
jge
mov
out
adc
stos
or
mov
sti
insb
in
xor
pusha
add
and
popa
daa
lret
and
xchg
aam
mov
arpl
and
inc
imul
rcll
stos
shlb
inc
add
je
jae
icebp
aad
jb
cltd
sbb
addb
sub
insb
out
ror
jne
xorb
and
es
pushl
sahf
pop
mov
lcall
inc
movsb
pop
lcall
jle
jecxz
add
call
and
mov
cltd
inc
orl
push
daa
xchg
outsb
in
cs
add
out
jg,pt
addr16
aaa
jo
addr16
pop
xor
inc
sbb
xchg
out
out
faddl
and
xchg
in
sub
mov
addb
maskmovq
mull
cmpsb
inc
imul
jno
xorw
bound
xor
lock
shrl
sbb
adc
or
mov
jmp
jns
pop
inc
adcb
adc
mov
fstpl
xor
mov
hlt
cmp
stos
add
mov
pop
nop
jmp
pop
repz
cmp
es
push
mov
sbbb
adc
out
mov
dec
shll
or
pusha
cmp
fs
mov
cmp
xchg
mov
xchg
in
fnsave
or
data16
and
pop
ficomps
outsb
call
test
mov
cld
or
sub
mov
push
mov
push
mov
mov
inc
in
sahf
insl
add
push
add
jmp
repz
xchg
test
jmp
or
mov
sbb
roll
ja
sub
aam
jns
int3
pop
mov
jo
xor
sub
mov
cld
das
outsb
arpl
jmp
cmp
push
mov
out
xchg
mov
adc
adc
xor
mov
xor
dec
xchg
dec
or
aaa
mov
push
inc
popf
insl
xchg
push
je
repz
xchg
jecxz
add
mov
sub
jo
mov
jg
push
inc
lds
jno
fdiv
je
cltd
xchg
jbe
rcr
test
sub
leave
aaa
adc
imul
jae
mov
mov
push
mov
int
xlat
adc
call
cmpsl
or
jns
push
and
popa
sbb
das
sahf
test
sti
pop
add
dec
bound
push
mov
test
setle
test
cli
cmpsl
std
int
lock
cs
fidivrl
lods
arpl
adc
loop
int
or
xchg
jbe
push
mov
sub
es
rolb
movups
push
aad
mov
in
movsl
and
dec
xchg
jg
jge
fstl
imul
hlt
add
insb
fucomp
stos
orl
mov
push
test
shll
pop
jae
pop
sbb
xchg
mov
mov
scas
mov
sub
in
sub
inc
sub
and
jle
std
dec
push
jae
sti
es
sbb
adc
pop
push
mov
fs
cmp
popf
lahf
dec
pusha
fwait
adc
outsb
xor
je
or
int3
pop
jnp
loopne
lods
mov
pop
insb
mov
inc
mov
popf
sbb
rcrl
pop
sub
xor
cmpb
out
ss
roll
es
ret
push
sbb
mov
push
out
jnp
jb
cmc
loop
mov
sbb
pop
mov
inc
lds
dec
bound
lahf
cmp
sub
cs
cmp
pop
lods
gs
clc
icebp
and
or
and
sub
mov
bound
mov
xchg
cmp
push
mov
sti
xor
or
inc
add
or
dec
sbb
int
push
mov
pop
outsl
or
lds
adc
fdivp
mov
adc
outsb
mov
repnz
popf
inc
jecxz
shlb
pop
xor
cmp
add
in
je
xor
mov
in
sub
lret
pop
mov
js
test
ffreep
sahf
enter
cmp
call
daa
mov
mov
adc
in
add
lods
dec
push
or
pop
jl
in
push
pop
pop
stos
je
hlt
shrl
jge
loope
pop
sbb
daa
push
push
inc
sub
xchg
xor
dec
into
je
dec
sahf
repnz
adc
push
push
stos
pop
fs
xor
mov
ss
jl
and
fcomps
xchg
sub
fs
mov
fldl
cmc
or
inc
jmp
mov
out
insb
xorb
inc
shr
mov
cs
add
out
mov
nop
jle
aaa
les
xchg
adc
or
push
jo
dec
xlat
outsl
in
jns
orl
fs
sbb
dec
je
adc
add
mov
fs
jecxz
cmpsl
sub
or
push
dec
fadds
adc
cli
mov
fldcw
pop
xchg
push
std
int
stos
shll
cli
mov
dec
sub
mov
mov
arpl
add
lock
inc
push
popf
stos
jl
cmp
cmp
mov
jp
push
mov
je
outsb
js
fs
sahf
mov
sub
imul
xchg
mov
movsl
fs
pusha
fcmovne
fs
fcomps
xor
fistpl
stc
cmc
aad
dec
lods
outsb
fcmovne
xorl
fsubr
inc
push
mov
adc
imul
repz
push
out
add
xchg
stos
push
adc
into
sub
pushf
push
repnz
das
pop
push
int3
sbb
xchg
sub
test
sbb
fistpll
jno
addr16
mov
xchg
cmp
imul
inc
jnp
movsl
inc
imul
loop
orl
daa
sub
negl
push
pop
mov
mov
jl
test
sbb
mov
fsts
sub
dec
pop
xor
or
cs
imul
not
fs
pushf
mov
or
sahf
inc
repnz
movsl
inc
xchg
repz
xchg
cmp
or
outsb
mov
sub
movsb
fcomps
shll
push
int
and
dec
inc
push
pop
push
sub
lods
sbb
leave
fildll
clc
dec
push
scas
sub
push
cmpsl
in
mov
mov
loope
push
lahf
loopne
and
inc
xor
faddp
sbb
or
xchg
xchg
adc
dec
nop
sti
icebp
stos
xchg
sti
fs
dec
or
aaa
lods
and
mov
jns
xchg
testl
fwait
cld
rcl
leave
xor
pop
inc
jmp
pop
bound
cld
or
mov
add
pop
mov
mov
scas
cmp
mov
xor
cs
push
movsb
aad
call
mov
adc
inc
cmp
dec
sub
sbb
jg
sbb
frstor
out
ret
xor
aaa
fisttpll
pop
add
and
pushl
mov
mov
aad
xchg
or
or
emms
cmc
lcall
loope
add
sub
call
scas
lret
rorb
notb
test
fs
mov
imulb
faddl
add
aas
and
lea
rclb
and
xchg
aaa
pop
mov
sub
pop
push
jle
mov
mov
jb
ffree
sbb
insl
jb
jno
mov
pop
in
cmp
adc
mov
repnz
mov
das
xchg
cltd
mov
stc
and
or
mov
mov
shll
jbe
ss
sub
shl
adc
jmp
mov
fiadds
mov
stc
xor
push
jnp
inc
ds
mov
jp
fcoml
xchg
mov
dec
mov
push
mov
pop
mov
cmp
push
aas
mov
scas
loopne
test
xor
jl
cltd
arpl
lock
stos
dec
lock
or
jecxz
bound
jno
clc
xchg
mov
jmp
push
fcoml
iret
sarl
lods
inc
xlat
fisubs
aad
gs
or
pushf
push
shll
test
mov
data16
rcrl
mov
or
leave
mov
pop
aad
xchg
rorl
aad
mov
mov
jno
xchg
pushf
insb
je
jns
dec
and
sub
sbb
jge
movsb
test
shl
pop
jnp
xchg
fsubs
push
lds
leave
fcomp
sbb
inc
negb
rorl
adc
je
jge,pt
push
jo
mov
fiaddl
bnd
inc
xor
ss
xchg
or
fstpt
pusha
sbb
cmp
scas
outsl
hlt
and
jne
lea
testb
insl
pusha
mov
mov
pop
sarl
in
adc
es
sbb
stos
inc
lcall
stc
addr16
cmp
movsl
jbe
out
movsb
mov
sub
je
mov
push
dec
adc
dec
sub
sub
dec
subl
fstpt
clc
xchg
call
xchg
out
ror
cmpsl
in
fcomps
jns
loopne,pn
test
sarl
sbb
xor
movsl
add
call
shlb
out
es
jg
mov
push
aam
daa
mov
mov
cmpsl
ficomps
arpl
pop
out
mov
jne
arpl
xchg
dec
pop
pop
cld
sets
pop
mov
out
push
stos
inc
push
or
lcall
rorl
outsb
mov
lea
mov
fdivs
dec
adc
mov
jl
sub
jno
inc
movsb
psubsb
shrb
inc
test
or
add
pop
je
lods
jmp
repnz
lds
inc
sub
cwtl
loope
out
lods
sahf
mov
xchg
jg
mov
cs
xchg
ficoml
inc
mov
les
lods
les
das
pop
pop
push
stos
cmp
sub
sbb
fdivp
mov
sub
leave
test
push
sub
xchg
mov
sbb
pop
mov
icebp
cvttps2pi
ficomps
or
push
pushl
lret
sahf
into
fdivs
jg
lret
sub
sub
leave
jecxz
lock
pop
pop
repnz
mov
inc
out
sbb
jnp
or
pushf
stos
invd
pop
sbb
sub
inc
loope
out
sub
add
mov
fwait
and
test
js
mov
push
push
aad
cmp
out
stos
pusha
es
test
pop
mov
dec
push
inc
scas
fwait
or
je
pop
in
inc
pop
inc
inc
bound
xor
mov
or
scas
sbbb
jle
push
add
inc
jmp
or
cmova
dec
arpl
clc
xor
mov
mov
faddl
mov
and
outsl
add
mov
pop
popf
add
add
sti
fs
and
sarb
mov
add
or
lcall
jecxz
and
idivb
scas
and
and
aad
dec
outsl
sbb
out
add
xchg
loop
ja
jl
xchg
hlt
test
pop
repz
inc
adc
jmp
cmpb
je
sar
xchg
jp
stc
cmpsb
divl
sub
scas
xchg
orl
iret
fadd
mov
add
inc
inc
out
inc
arpl
adc
inc
lret
or
sti
notl
mov
cmpsb
or
iret
pushf
mov
cld
rclb
gs
jns
mov
inc
das
sti
sbb
or
call
push
mov
and
and
push
jl
rcrl
dec
out
ja
push
mov
imul
pop
push
dec
rorl
sub
in
cli
test
xor
mov
push
mov
mov
push
or
inc
push
or
sti
pop
ljmp
lret
mov
cltd
pop
jle
sbb
pop
out
jg
cs
xor
fcmovnb
pop
js
cmp
bound
push
jg
out
lock
pop
mov
mov
xor
or
inc
jge
int3
inc
aaa
mov
xchg
xchg
mov
add
lea
push
cmp
repz
push
adc
and
gs
jne
ja
push
fcomip
or
aam
pop
dec
cmp
jb
rorl
lods
mov
shr
fimuls
pop
jge
adc
bnd
add
bound
adc
enter
out
out
das
es
push
mov
add
clc
mov
mov
push
test
mov
mov
or
hlt
lods
notb
add
fsubrl
or
mov
dec
xchg
jp
xchg
pop
shlb
cmpsb
inc
lods
and
out
cld
or
push
rcll
mov
mov
sub
shll
adc
insl
pop
push
mov
cmpl
cmp
add
sub
test
stos
icebp
jbe
shl
orb
and
sub
fstl
in
push
sub
fstpt
popf
leave
je
pop
jbe
inc
shlb
adc
add
jbe
or
mov
mov
mov
bound
cs
mov
mov
pop
mov
dec
mov
jns
jae
dec
cwtl
sbb
cld
test
sbb
ds
lret
sub
push
clc
movsl
add
out
fcmovnu
adc
arpl
aad
and
or
aaa
imul
les
push
dec
ss
pop
scas
jbe
push
test
and
jg
xchg
lods
inc
push
push
mov
push
je
jbe
fidivl
adc
out
popf
dec
push
cmp
sbb
xchg
in
imul
rorb
or
xchg
stc
dec
lret
jg
stc
andl
sub
rsm
imull
mov
add
xchg
sbb
adc
mov
push
jecxz
adcb
xor
test
push
sub
imul
sarb
sbb
stos
xchg
push
xchg
in
jb
mov
xchg
ret
adc
sub
daa
pop
jle
pop
adc
or
adc
xor
dec
js
imul
aad
insl
jne
repnz
xchg
test
mov
int3
addr16
not
out
addl
pop
popa
inc
pop
or
jnp
sub
jmp
loopne
xchg
notb
sbb
jmp
mov
lods
leave
std
jnp
mov
scas
jnp
push
imul
or
push
xor
popf
inc
mov
ja
fnstenv
repz
mov
test
pop
jl
outsl
out
sahf
shl
push
and
ds
fstps
push
shll
and
lcall
ret
movsb
movsl
cli
out
std
jbe
push
jp
mov
jmp
mov
mov
scas
xlat
jl
cmp
and
xchg
stos
fwait
lods
mov
enter
imul
lods
je
aaa
int
pop
lret
addl
mov
insl
sub
xchg
aam
fidivrl
adc
mov
mov
pop
or
and
xor
rolb
dec
sub
sub
sbb
dec
sub
jb
andl
or
test
pop
std
sbb
pop
pop
jno,pt
or
fwait
adc
ret
insb
cli
sub
jmp
hlt
xor
nop
mov
sbb
push
mov
test
push
out
dec
rclb
daa
es
add
xchg
mov
imul
xor
jae
mulb
cmpsb
sbb
or
mov
push
jb
and
das
ss
add
inc
adc
push
dec
xlat
in
cmp
xchg
outsb
bnd
add
mov
jg
dec
inc
aad
sti
add
in
fs
repnz
pop
cli
push
inc
rolb
pop
testb
add
pop
fxch
cld
xlat
lahf
mov
adc
aad
gs
fnsave
cmpsl
mov
fcoml
inc
outsb
mov
and
movsl
push
or
adc
js
add
cld
scas
fnstcw
inc
mov
push
jl
jb
inc
insb
rcrb
cld
add
fidivrl
cmp
dec
movsb
sti
ret
and
or
mov
mov
xchg
or
shl
fstps
js
arpl
mov
cli
pusha
dec
leave
lods
cmp
push
cmpl
pop
xor
lcall
imul
pop
or
or
ror
xor
push
cmp
lret
repz
call
jb
xchg
fchs
mov
subl
iret
sbb
rcrl
sub
cltd
test
fstpt
jns
xchg
scas
push
outsl
add
cmpsb
loope
sub
insb
xchg
and
ud0
jmp
enter
int
dec
or
push
fucomip
out
fwait
outsl
pop
push
inc
les
jno
ljmp
ficompl
pop
repz
aam
xchg
popa
adc
mov
js
movsl
mov
and
mov
clc
aam
test
lcall
aad
or
sbb
test
fsubrl
mov
sbb
push
loop
es
shrl
cmp
push
scas
or
add
push
aam
adc
cmc
cmpsl
int3
lds
add
xorb
aad
loope
pop
test
or
dec
insl
jge
xchg
stos
and
pop
aad
mov
sbb
iret
in
mov
out
mov
fstps
xchg
add
fisubl
clc
fsubrl
rcrb
dec
sub
imul
pmullw
push
mov
les
pop
pop
xchg
inc
sahf
inc
pushf
push
stos
test
mov
lods
mov
mov
mov
sub
nop
jo
xchg
int
pop
sbb
jo
sti
loop
enterw
pop
cmp
push
cmpsb
fmull
movsl
ror
das
lods
mov
fiadds
std
xchg
jg
dec
lods
sahf
mov
inc
push
cmp
adc
adc
ret
sub
lods
adc
mov
stc
hlt
xlat
pop
mov
repz
inc
add
sub
popf
push
push
lds
pop
repnz
inc
mov
mov
stc
cltd
and
jns
fwait
mov
jmp
movsl
lods
ret
push
xor
cmpsl
sti
add
dec
inc
or
pop
fdivrs
clc
enter
lea
das
js
imul
pusha
xchg
sbb
fimuls
stos
adc
lea
pop
test
mov
test
dec
test
movsb
popa
cmp
mov
jo
mov
fiaddl
add
dec
inc
popa
loope
and
mov
fs
in
add
or
mov
mov
ljmp
and
stos
add
pavgw
lcall
lea
cmpsb
lahf
outsb
loopne
inc
sub
lock
cli
adc
pushf
pop
push
ss
or
jnp
les
leave
adcb
mov
fmulp
sbb
dec
cltd
fucomp
jmp
fildll
loopne
jmp
jg
jmp
inc
nop
jmp
xchg
bound
push
loope
dec
in
aam
or
rclb
pop
jne
scas
fisubrl
lahf
adc
push
or
jbe
das
adc
xchg
cmp
push
leave
cmp
pop
push
and
inc
jno
fstpt
lahf
add
or
jp
mov
lock
out
or
push
repnz
fildl
xchg
ss
mov
daa
mov
add
out
icebp
sbb
sub
movsl
and
sbb
mov
addb
cmp
lahf
jecxz
add
cmpsl
mov
xchg
xchg
xor
cmp
pusha
mov
in
stos
sbb
lds
adc
xor
adc
cmpsl
mov
pop
and
nop
inc
adc
negb
add
aad
mov
cmpsl
int
mov
push
pop
or
int
inc
jmp
adc
sbb
inc
mov
inc
or
adc
pop
stc
out
cmp
call
jns
mov
sbb
fcompl
in
dec
out
shrl
pop
sbb
call
jbe
cltd
sub
cmp
test
fwait
mov
pop
cmp
pop
sbb
mov
mov
loope
addr16
fcompl
adc
push
sbb
push
jnp
cmp
mov
mov
mov
sub
mov
or
or
fwait
lea
fisttps
mov
das
cmpb
sub
lcall
outsb
add
sub
jle
add
inc
aad
fwait
imul
dec
adc
int
fdivs
push
inc
loop
sub
cmp
sbb
and
push
data16
and
jge
dec
xor
movsl
testb
loop
jp
mov
push
scas
stos
fidivl
and
push
xchg
fistps
push
lcall
or
sti
push
stos
les
out
jl
xchg
stc
out
outsl
fmul
movsl
fistpll
inc
mov
dec
mov
or
clc
mov
rcrl
jle
add
shlb
pop
lock
scas
fidivl
mov
mov
cli
mov
andb
lods
xchg
push
sahf
scas
mov
cmpsl
lods
int3
dec
out
mov
mov
cmpsb
jb
xchg
and
dec
mov
pop
aaa
inc
and
sub
in
cwtl
xchg
out
mov
mov
add
es
push
jno
push
and
scas
mov
inc
sub
inc
and
jg
fimuls
push
pop
cmc
pushf
fidivl
jg
xchg
mov
mov
inc
xchg
xchg
jns
out
subl
mov
jns
lret
jne
call
out
mov
cltd
inc
fidivrl
jge
lods
push
lahf
add
push
and
push
push
jmp
jnp
sub
jl
xchg
push
cmp
jae
and
iret
clc
test
pop
orl
cmp
cmp
pusha
shl
test
inc
dec
add
shll
ds
jl
mov
imul
pop
daa
movsb
je
imull
pop
inc
fisubrs
lods
int3
mov
pop
push
sbb
sub
adc
in
test
mov
std
inc
cltd
shl
xor
cmc
shll
paddw
fldl
push
iret
lcall
mov
js
jae
iret
imul
or
sbb
jns
dec
push
or
lret
sbb
dec
scas
pop
mov
mov
dec
push
dec
pop
cmpsb
pop
shl
mov
dec
or
jge
push
andl
test
or
mov
in
test
pop
and
push
scas
loop
inc
sub
cld
in
dec
mov
dec
and
je
jne
mov
into
fdivs
push
mov
loop
mov
lea
and
mov
adc
sbb
add
cmp
or
arpl
jmp
push
sbb
mov
ss
test
test
shll
je
in
cmpsl
mov
cld
and
jmp
idivb
stos
imul
push
iret
jnp
lret
xor
mov
mov
leave
dec
mov
mov
mov
loope
ds
cmp
or
xchg
aad
adc
iret
addr16
adc
lret
and
adc
imul
int
pop
push
and
lods
push
xor
lock
jle
or
sti
push
out
in
nop
ja
mov
add
lock
xchg
sahf
enter
mov
jmp
inc
dec
movl
and
fistpl
std
push
or
out
adc
mov
out
mov
out
andb
mov
or
push
lods
pop
cmp
movsl
data16
and
pcmpeqw
movsl
iret
mov
jl
lds
into
jne
je
repz
pop
fistps
xchg
push
popa
xor
ja
popa
pop
rcrb
in
mov
mov
cmc
add
js
dec
mov
pop
int
cmp
mov
lods
arpl
pushf
add
jmp
test
pop
or
push
test
inc
push
mov
xor
movsl
dec
cwtl
jle
insb
hlt
hlt
addl
jns
push
mov
or
movsl
inc
cmp
mul
aam
push
popa
xor
or
out
sub
fs
ss
fbld
lods
cmp
add
enter
je
ret
rorl
add
out
adc
movl
out
int
not
loope
movsb
cmp
shlb
dec
xchg
push
mov
push
rcll
insl
pop
lea
ljmp
js
adc
xor
fbstp
fistpl
lret
fucom
int3
pushf
mov
ds
fcoms
mov
negb
sbb
pop
sahf
push
out
push
xchg
or
popf
lods
mov
lahf
cmp
ds
xchg
mov
mov
dec
xrelease
or
mov
mov
jb
or
mov
mov
xchg
rcrl
insb
add
int3
pop
call
xor
lods
adc
fsts
insb
mov
dec
frstor
fwait
jb
outsl
and
add
ret
ss
mov
lahf
sbb
outsl
fs
call
imul
pusha
xchg
lahf
push
inc
addl
push
mov
out
push
outsl
and
repz
int
cwtl
mov
sub
push
int3
rorl
mov
icebp
pop
jns
xchg
loopne
mov
xor
jno
inc
lahf
jmp
xchg
mov
add
dec
das
cld
sahf
inc
xor
sbb
cmp
add
add
out
mov
adc
and
pop
nop
div
xlat
jne
outsb
xor
pusha
addr16
or
xor
xlat
shl
lahf
dec
mov
inc
in
jne
and
push
lahf
test
cmp
aaa
popf
popa
scas
mov
mov
inc
insl
sub
bound
push
xchg
sub
add
adc
hlt
pop
jo
aam
fimuls
and
pop
lds
add
mov
je
push
std
aas
das
fidivs
scas
mov
sub
mov
mov
cmpsb
mov
repz
push
and
les
movsb
test
adc
aam
xchg
jge
test
push
push
add
push
in
repnz
dec
cmp
hlt
enter
mov
sbb
mov
push
sub
adc
xor
sahf
icebp
test
fistl
mov
call
scas
and
pop
and
outsb
mov
into
lock
sti
enter
scas
cmc
dec
adc
popf
enter
jo
inc
cld
call
lcall
jl
mov
sub
add
andb
not
sahf
jge
cld
es
pop
adc
mov
daa
aad
imul
xor
das
xchg
pop
stos
in
mov
xchg
dec
xchg
fdivrl
out
movsl
inc
push
out
inc
aas
js
add
sbb
xchg
or
adc
jnp
adc
lds
pop
testb
mov
or
xchg
lds
xchg
fsubs
cmp
lock
or
adc
mov
sbb
mov
orb
sbb
shll
inc
into
inc
into
aas
fsub
mov
mov
stos
and
rcrl
or
les
addl
js
not
add
rorb
and
fcompl
adc
shlb
outsl
xor
mov
sub
stos
or
or
repz
inc
es
cmp
pop
xchg
xor
js
sub
imul
inc
push
fnstcw
push
pop
push
test
jo
jl
mov
cmc
sti
cmp
out
mov
pop
mov
fsts
cbtw
std
push
xor
push
jae
les
xor
pop
pop
sub
cld
test
icebp
lods
sbb
inc
mov
add
movb
mov
lea
neg
pushf
dec
out
jp
mov
dec
add
adc
and
dec
imul
out
xor
sub
push
push
scas
mov
dec
int
jne
pop
push
jl
xchg
and
insb
mov
mov
dec
ror
lock
jle
popa
dec
jno
in
shr
inc
jo
repz
push
sahf
icebp
sahf
cmpsl
cmp
dec
jg
ss
jecxz
lret
mov
fs
stos
inc
test
daa
xchg
adc
leave
jb
int
mov
leave
shrl
add
les
adc
pop
test
shll
jecxz
dec
push
cmpsb
push
mov
test
sarl
jp
xchg
in
adc
fmull
aas
test
or
mov
mov
add
mov
leave
or
into
lcall
out
xchg
mov
outsb
sbb
jae
dec
cld
daa
cmp
stc
push
xor
dec
cmp
or
sbb
jnp
sub
push
fisttpll
dec
add
push
ficomps
push
fimull
sub
lds
test
test
cwtl
xchg
mov
gs
mov
mov
xchg
lahf
imul
loop
cmpsb
jp
xchg
push
xchg
xchg
push
stos
outsb
jge
sbb
ret
test
into
mov
or
and
pop
dec
cmp
pop
pop
stos
push
xor
pop
pop
jno
pop
add
mov
fisubrs
mov
dec
inc
loopne
cld
push
test
add
jge
sbbb
or
fsts
inc
pusha
aam
inc
sub
leave
ret
mov
inc
mov
sub
loope
imul
sub
jle
or
mov
out
jp
jne
rol
decb
sub
stos
adc
stos
enter
jle
cmc
test
jp
adc
gs
scas
test
dec
inc
mov
insb
ffreep
push
shrb
sbb
mov
inc
fisttpll
mov
enter
pop
jmp
adc
mov
and
jae
push
lock
mov
xchg
or
lods
lcall
push
das
xchg
scas
add
sbb
push
adc
int
enter
fdivrs
xchg
cwtl
lret
js
or
xchg
arpl
mov
fistl
stos
add
mov
icebp
es
add
mov
mov
cli
jl
leave
enter
dec
repnz
or
shll
addr16
pop
pusha
shll
add
xor
repz
and
push
add
dec
push
data16
or
mov
xor
jae
pop
push
fnstenv
jno
push
scas
outsl
pop
fs
dec
and
call
repz
pushf
lds
adc
push
sbb
jle
pop
je
cmp
pop
out
mov
xchg
inc
mov
stos
cmp
out
adc
cs
sub
sub
mov
in
mov
pop
rcrl
push
outsl
pop
mov
dec
push
jb
shrl
inc
cmpsl
cmp
clc
sbb
inc
sbb
xchg
mov
hlt
sbb
lods
sti
ds
test
in
lock
cmp
push
mov
test
mov
push
out
cmpsl
iret
into
out
arpl
pusha
es
js
lcall
orl
fs
push
sbb
and
stos
add
mov
or
mov
jp
sub
adc
jae
mov
mov
icebp
inc
cmc
mov
mov
leave
xorb
gs
enter
in
lcall
arpl
out
ds
ds
jp
mov
sbb
and
iret
cmp
adcb
mov
test
loope
aam
out
mov
lahf
ljmp
jbe
or
dec
pop
dec
inc
sub
inc
insb
stc
jl
rorl
fldt
jbe
scas
pop
push
and
inc
pop
icebp
adc
sbb
pushl
fisttpll
lock
push
mov
jbe
adc
loope
push
or
imul
lods
dec
mov
and
adc
nop
mov
les
and
insb
inc
das
mov
cltd
out
mov
mov
pop
push
jecxz
lret
iret
jo
sbb
inc
stos
jo
aas
pusha
mov
int3
nop
cld
mov
or
mov
xchg
xchg
or
lock
xor
stc
jle
popa
iret
gs
sbb
pop
inc
fiadds
insl
xchg
bound
cmp
stc
xor
add
mov
push
lds
jnp
dec
sahf
xchg
psrld
mov
rolb
shll
insl
loope
cmp
mov
mov
test
inc
adc
dec
sbb
inc
or
shl
pop
and
add
pop
loopne
sub
pushf
adc
adc
xchg
test
mov
push
push
pop
xor
sub
or
lret
pop
and
or
sti
dec
pop
xchg
xor
subl
gs
adc
sbb
push
jecxz
add
cmpsl
xchg
cmpsb
outsl
mov
mov
jmp
jl
cmp
aaa
stos
cmc
sbb
nop
fwait
add
dec
mov
mov
or
inc
sub
pop
mov
hlt
das
pop
test
jae
adc
dec
adc
pop
mov
inc
mov
mov
adc
jae
or
pop
lock
in
int3
add
imul
push
ficoms
sbb
xor
ljmp
mov
mov
jnp
in
std
mov
out
roll
pop
jmp
jbe
push
jns
lret
call
push
sub
push
decb
daa
dec
and
popf
rolb
fwait
ja
sub
pop
lods
mov
xor
lret
cmp
push
jns
icebp
xchg
pop
jnp
inc
cmpsb
push
mov
mulb
push
push
cs
push
inc
aaa
lahf
addb
lods
dec
add
cmp
xor
mul
pop
push
sbb
pop
xlat
push
aaa
inc
push
cmp
int
xor
mov
in
xor
jb
sahf
dec
and
mov
xchg
jmp
jnp
inc
pop
mov
int
shl
popa
fnstsw
inc
cmpb
push
mov
mov
mov
xchg
pop
inc
fst
sbb
lcall
mov
push
mov
fimuls
fcom
cld
ja
test
out
stc
pusha
sbb
push
and
mov
sub
adc
adcl
jg
cmp
cmpsb
cwtl
and
inc
add
test
ret
test
das
xor
lcall
in
subl
and
lds
jg
dec
sub
lcall
popf
sbb
imul
fisttpl
out
in
and
jge
data16
push
and
add
push
jp
in
push
jns
sbb
pop
jbe
outsl
int
push
cmp
rolb
ja
and
inc
sti
fwait
loope
jns
notl
pusha
lahf
adcl
pop
jns
hlt
aam
xor
ljmp
or
or
std
aam
int3
adc
jl
adc
dec
xor
ret
lret
add
lahf
test
xor
cltd
sub
in
imul
cmpsl
sub
iret
lret
pusha
ret
dec
in
lret
lret
or
xor
loop
test
hlt
aas
or
dec
and
fucomi
popa
push
pop
or
jns
test
cmp
out
xchg
ss
sub
shll
mov
filds
jbe
daa
push
jae
or
xchg
pop
mov
mov
iret
xor
add
sbb
or
repz
pop
jne
xchg
and
and
ja
das
jns
fdivs
mov
sahf
testb
cld
jmp
and
ret
je
xor
or
push
andl
adc
inc
adc
test
xor
movsb
sub
shlb
sbb
loop
sbb
mov
out
xchg
push
fnstcw
outsl
xchg
mull
das
pop
xor
mov
rcll
stos
pop
jns
fldl2e
arpl
adcl
jne
mov
mov
jne
fwait
sbb
mov
mov
jno
dec
rcll
call
test
push
mov
inc
cmpsb
in
das
lods
dec
aam
push
mov
jns
lds
jbe
mov
call
push
and
xchg
stc
inc
fdivrl
adc
sbb
jae
lods
mov
inc
shll
loopne
mov
les
pop
mov
push
mov
pop
test
hlt
jbe
cmp
xor
sahf
jbe
lock
testb
sub
push
js
xor
fwait
loope
movsb
subb
inc
mov
sub
int3
aas
lret
fdiv
xor
mov
lret
mov
pop
jg
mov
fldcw
jno
adc
rcr
sub
sub
ljmp
icebp
dec
and
mov
bound
or
sub
nop
data16
dec
cmc
jo
push
and
fcompp
mov
cmp
cmc
mov
lcall
call
lret
movsl
les
pusha
daa
adc
or
mov
adc
dec
push
dec
jne
sbb
lds
lods
es
push
movsl
dec
mov
sahf
sub
in
adc
into
cld
dec
inc
or
dec
cli
push
dec
mov
aad
dec
into
sbb
adc
xchg
push
jmp
cmp
imul
dec
mov
aaa
adc
or
aaa
inc
pushf
lret
push
or
gs
repnz
lret
in
es
and
push
jbe
rcrl
jbe
imul
xor
je
inc
sbbb
cmp
in
popf
xlat
push
in
and
cmpsb
inc
aam
pop
pop
test
leave
xchg
fldenv
lds
pop
scas
mov
nop
add
push
cltd
in
pushf
sub
lods
inc
push
jmp
outsb
push
sbb
cmp
sahf
xor
fldcw
shrb
dec
inc
aaa
fstps
fistpll
fcmovnu
popf
test
repz
mov
pop
mov
iret
cmp
lods
lods
outsl
adc
repnz
ror
mov
stc
aad
mov
cli
int
cmp
pop
cld
gs
ljmp
sub
bound
icebp
repz
fcoms
mov
push
dec
sti
sahf
mov
adc
je
dec
push
cmp
movntq
xchg
inc
mov
ds
loope
mov
sbb
cmp
subl
call
loope
fsubl
test
subl
and
mov
push
push
mov
add
xchg
push
mov
pop
fstp
ja
sub
in
pop
fs
cmp
or
test
enter
in
and
mov
sbb
or
fnsave
mov
mov
push
test
fisttpl
mov
jns
push
sbb
jb
pop
divl
and
inc
sub
stos
add
xor
jl
or
sub
sbb
fs
cmp
cld
inc
sbb
mov
mov
mov
stos
imul
inc
pushf
sub
mov
jb
inc
roll
cmpsl
xor
je
pop
cmp
lds
int3
rorb
loop
jns
or
inc
jg
mov
add
xchg
mov
es
or
sbb
scas
xlat
pop
xor
pushf
inc
adc
mov
or
or
lret
icebp
repz
cmp
outsl
sub
subl
into
sti
fs
mov
sbb
test
xchg
xchg
sbb
lret
jnp
test
xchg
xchg
int
shll
inc
push
pop
inc
sbb
call
ds
mov
mov
sbb
arpl
sub
ja
jns
mov
loopne
ret
xchg
mov
fisubs
xchg
cmpsl
adc
mov
idivl
mov
jb
ret
fnstcw
nop
test
inc
inc
dec
lock
stc
add
push
inc
negl
mov
insl
or
lret
jb
int
lods
lea
mov
pop
dec
outsb
sbb
jne
cltd
sub
rcrb
push
cwtl
sub
jns
ds
cli
mov
mov
cmpsl
sub
sbb
sbb
push
sahf
je
cmp
cmp
mov
dec
lahf
lahf
adc
or
addr16
stos
mov
clc
sbb
add
pop
push
lahf
adc
adc
js
insb
mov
loope
inc
movsb
add
xchg
jne
and
decb
dec
sbbl
xchg
jl
pop
cmpsl
ss
sbb
push
je
call
push
negl
mov
mov
sbb
ss
fs
fisubl
lea
ja
ljmp
and
mov
add
cld
pop
push
pop
sbb
inc
cli
hlt
xchg
shll
adc
mov
call
push
adc
mov
insb
xchg
fisttps
mull
movsb
popf
lods
pop
and
pop
jmp
int
hlt
mov
in
xor
xlat
in
add
sbb
je
inc
or
inc
enter
ret
clc
fimuls
cmp
loopne
cltd
rcr
dec
fs
fadds
rorl
pop
sbb
stc
sbb
or
repnz
or
and
jp
fistpll
orb
xchg
jne
and
adc
jge
test
adc
shlb
add
push
mov
sbb
xchg
push
mov
add
outsl
push
dec
icebp
fisubl
add
rorb
xchg
into
sub
cld
mov
movsb
shll
dec
aad
jge
clc
scas
mulb
jge
repnz
pop
mov
and
faddp
xor
test
mov
push
xchg
sahf
push
out
pop
push
pop
dec
inc
in
mov
mov
or
jge
adcl
clc
jno
dec
call
jne
mov
sbb
dec
stos
and
test
jo
cmp
ljmp
xchg
mov
sti
repz
outsb
data16
jnp
lahf
jg
ret
cltd
pop
push
ljmp
dec
add
mov
jge
cld
enter
rcrb
hlt
aad
dec
int
xor
and
jbe
subb
jo
xchg
aaa
addb
mov
mov
stos
sahf
inc
popa
add
cwtl
jecxz
xchg
test
adcl
push
jae
push
scas
or
push
int
inc
cmpsb
aaa
dec
fs
addr16
int3
int
insb
xchg
xor
push
and
divl
js
and
enter
subb
jg
sub
pop
pop
mov
lds
jmp
mov
mov
pop
out
sub
push
aad
sar
pop
sub
jb
lcall
push
adc
mov
sbb
cltd
in
sbb
out
cmc
inc
imul
sbb
mov
lods
add
int3
mov
scas
and
imul
notb
and
jge
icebp
fcoml
pop
lcall
and
data16
sbbl
pushf
pop
and
repnz
fld
sbb
cmp
push
lds
shll
push
pop
and
add
dec
sub
scas
idivb
inc
adc
add
push
rclb
scas
push
add
xchg
dec
int3
in
scas
mov
inc
sub
inc
in
sub
lret
pop
scas
or
dec
jae
inc
test
and
and
push
mov
and
aas
icebp
adc
sbb
mov
bound
cs
lods
pop
cmpsb
pop
and
sub
dec
pop
outsb
repz
jp
enter
mov
adc
out
pusha
cmp
jbe
gs
mov
push
mov
xor
test
lcall
daa
rclb
jle
test
jae
mov
rorb
and
sbb
inc
push
int
sub
pop
cwtl
lea
arpl
inc
push
out
lret
cmpsb
dec
ds
fildll
push
popf
negl
push
call
repz
not
icebp
jns
mov
add
cmpsl
out
bound
or
cmp
loopne
xchg
lret
cld
dec
int
pop
sbb
pop
push
cmp
pop
lds
sti
mov
mov
in
dec
clc
lods
inc
mov
mov
ret
movsl
jno
lret
cmp
cmp
pop
jl
call
dec
inc
std
add
in
cmp
inc
mov
jae
mov
addr16
sarb
sbb
inc
push
lahf
xor
clc
mov
and
mov
stos
jne
xor
pop
das
push
xlat
add
sub
jl
test
add
add
in
aaa
stc
mov
mov
in
cli
imul
faddl
mov
pusha
and
les
test
mov
push
and
imul
jb
out
push
cmp
test
and
iret
or
ljmp
lahf
adc
dec
dec
mov
shrl
pop
daa
add
ds
jmp
add
jno
pop
adcb
loop
mov
les
pop
mov
or
js
ret
push
mov
xchg
jl
shrb
pushf
insl
shl
inc
or
adc
add
cmp
leave
jns
jae
push
loop
gs
mov
sub
fsubl
loop
push
pop
mov
loope
or
inc
pop
orb
sub
stos
jo
jne
pop
int3
scas
adc
xlat
push
inc
jl
mov
cmp
imul
jle
int3
and
je
lds
orb
cmpsb
cmc
jae
insb
push
mov
out
mov
out
or
xor
or
jg
addr16
push
add
test
out
push
push
iret
test
adc
pusha
mov
stos
pop
sti
or
xchg
xor
add
ret
xor
js
jb
mov
iret
je
jno
repnz
sub
fldl
test
lret
push
xlat
xor
cmp
inc
add
and
lock
es
add
stos
popf
xor
popa
add
dec
insl
out
mov
jne
movsb
jo
jmp
xchg
jecxz
push
adc
imul
push
stos
mov
mov
leave
lea
cmp
adc
ss
jae
mov
dec
idivb
cli
cmp
jl
inc
and
sbb
inc
xchg
mov
cmc
cltd
pop
sti
movsl
jmp
xchg
xchg
push
mov
mov
popf
pop
in
cltd
jno
pop
sub
dec
push
data16
sahf
add
jns
movl
xor
lds
inc
and
pop
push
fsubs
inc
dec
mov
xchg
mov
or
push
dec
cmpb
and
cmpsb
andl
dec
sub
sub
inc
adc
push
jnp
xchg
mov
mov
lret
xchg
dec
xchg
imul
stos
add
fildl
lret
mov
mov
inc
sub
or
mov
adc
movsl
adc
or
daa
adc
push
test
jmp
push
dec
adc
adc
rclb
out
sbb
lods
cld
sbb
das
sub
mov
dec
xorb
pop
and
push
test
bound
fbstp
cwtl
pushf
push
shll
add
mov
and
fists
and
mov
ja
cmp
lret
das
and
adc
cwtl
divb
dec
xor
adc
stos
and
jae
xor
pop
xor
sbb
xchg
ds
add
mov
or
loope
adc
cld
push
and
cmpsb
cs
outsb
popf
outsb
cmpsb
sub
rcll
sub
int
or
dec
icebp
lock
inc
pop
push
lods
lahf
loope
xchg
or
mov
test
push
xchg
scas
popf
xor
add
or
and
push
add
xchg
push
add
test
movsb
loopne
lock
cmp
lret
std
xchg
or
inc
cmp
ret
or
js
jmp
mov
xchg
or
add
ret
jg
or
or
lahf
dec
and
leave
or
outsl
iret
pop
in
in
test
push
cmc
jecxz
fwait
xchg
dec
sub
mov
mov
lock
filds
pushf
mov
sbb
jno
jg
dec
push
int3
in
mov
push
cmp
ss
inc
andb
insl
lret
sub
pop
adc
testb
sub
push
push
daa
xchg
push
push
sarb
rcrb
jb
ljmp
mov
mov
fcomps
sub
push
scas
fimull
lret
adc
xchg
je
repnz
mov
push
xor
shlb
xchg
lea
cmp
pop
cld
xchg
arpl
dec
push
or
daa
xor
sub
jnp
pop
mov
out
mov
mov
adc
pop
dec
ds
sub
xchg
add
xorl
scas
lahf
mov
mov
lds
lods
jg
pop
rcr
sbb
jnp
movsb
adc
in
and
insl
lock
mov
inc
repnz
jnp
inc
mov
cmp
dec
cwtl
mov
sahf
in
lcall
arpl
fsubl
and
jno
inc
insb
iret
and
iret
test
adcl
in
int3
pop
xchg
mov
repz
loopne
sub
ret
xor
incw
xchg
add
dec
mov
incl
std
sbb
jnp
imul
test
stc
sub
mov
cmp
dec
out
je
jae
inc
sub
mov
jmp
into
vandps
psllq
mov
mov
shrb
xchg
sub
clc
dec
jno
xchg
imul
dec
rorl
dec
fistl
int3
out
push
je
es
testb
call
xchg
push
popa
push
dec
xchg
scas
rolb
fsubs
pop
push
lret
andl
mov
pop
enter
inc
clc
aam
call
adc
adc
loop
adcl
mov
jo
cmpsl
and
mov
inc
jno
lcall
push
js
mov
test
inc
pop
jae
sub
outsl
shrl
and
xchg
add
xchg
mov
adc
dec
cmp
mov
cmp
insl
dec
pusha
and
pop
fwait
sbb
mov
inc
inc
in
aad
cmp
xor
adc
cwtl
aad
push
inc
add
addl
or
mov
mov
mov
jo
lods
in
or
cmpsb
inc
popa
dec
push
add
sub
popf
fbld
jl
xchg
lahf
dec
repz
cltd
sti
xchg
loope
or
in
jbe
mov
mov
inc
pop
aam
fcomip
cli
lods
mov
mov
hlt
inc
rorb
fisttpll
jecxz
aas
cmpsl
ret
mov
popf
outsl
and
sbb
ror
cwtl
cli
push
lods
insl
inc
or
jns
enter
push
adc
fnstsw
add
jge
mov
push
cli
inc
push
mov
sub
cmp
enter
cltd
clc
pop
fwait
cmpl
adcl
jp
dec
xchg
jmp
int3
mov
popa
shrl
in
pop
cmp
subl
adcl
idiv
sbb
in
test
xchg
pop
ret
xchg
test
sti
test
movsb
inc
jno
cmp
lods
enter
push
xor
pop
inc
negb
mov
cltd
pop
add
add
in
jg
jmp
dec
xlat
mov
mov
mov
mov
push
push
je
inc
cmp
test
mov
scas
les
cwtl
out
mov
call
ljmp
roll
xchg
adc
mul
std
mov
or
cmp
into
repz
mov
dec
jbe
test
out
lret
iret
dec
sti
mov
add
xor
daa
dec
cs
faddl
mov
ret
outsl
loope
ret
add
cltd
mov
es
mov
cmc
xchg
ss
push
scas
xlat
add
sbb
enter
andb
push
cmp
mov
push
push
jl
fiaddl
adc
push
add
xor
push
shll
imul
int3
dec
or
lahf
mov
push
jns
mov
ret
jae
andb
dec
jecxz
add
les
fwait
and
push
sub
jne
jmp
xchg
test
nop
addr16
popf
push
dec
and
sub
pop
cmpsl
mov
xchg
mov
rcrb
xchg
cmc
xchg
lds
cmc
mov
in
and
test
fwait
lcall
sub
fwait
fwait
or
test
xchg
inc
ror
les
outsb
dec
int
jge
jns
lret
mov
mov
mov
test
mov
sbb
dec
fldt
pop
mov
jno
inc
dec
mov
cmp
add
xchg
iret
jle
push
cmpsl
push
aam
lret
popa
push
rcrb
sub
mov
push
xor
xchg
iret
cmp
inc
xor
out
out
pop
xor
sbb
cmp
out
jns
out
jp
mov
mov
sbb
sub
shlb
push
fucomi
aad
outsl
lods
cmc
jl
sti
and
or
jns
leave
imul
cmp
scas
sub
sbb
mov
pop
sub
call
add
push
mov
cmp
lret
or
sbb
dec
jg
iret
sahf
and
pop
sbb
mov
fidivl
cs
lret
inc
push
xchg
es
mov
sub
in
dec
mov
adc
adc
repnz
dec
addr16
fwait
push
out
adc
sbb
cmp
pushf
sub
pop
sahf
mov
mov
mov
scas
aad
fnstenv
loop
lods
mov
shl
jl
aad
ret
les
and
pop
or
loop
sbb
push
cmc
ror
xchg
out
add
xchg
mov
ror
cmc
fs
jne
inc
fisubrl
shrb
test
lods
in
aam
fisubrs
add
pushf
mov
pop
outsl
jp
ljmp
mov
fldl
cwtl
inc
mov
mov
fwait
pop
sub
sahf
xor
cld
fiaddl
cltd
mov
imul
ror
lea
xchg
mov
xchg
bound
sub
push
jg
push
into
lcall
outsb
push
mov
scas
mov
out
in
xchg
or
test
adc
mov
mov
or
mov
xor
or
sbb
inc
pop
in
lret
xchg
mov
xlat
jno
stc
das
pop
sub
mov
mov
dec
pop
adc
in
jb
dec
mov
test
test
add
fnstcw
adc
or
loope
int3
push
mov
iret
lret
inc
xchg
fildl
pop
pop
aam
push
fnsave
sub
xchg
xchg
arpl
add
ljmp
roll
adc
push
push
out
inc
push
add
scas
mov
int3
fcmovu
push
xor
iret
orl
and
loop
xchg
cmpsl
fcmovb
mov
movsl
xchg
xor
ljmp
in
inc
push
ffreep
leave
nop
jg
inc
sub
and
jb
repnz
cs
push
daa
xor
shrl
push
xchg
iret
mov
fidivrl
cmpsl
pop
movsb
jo
sbb
mov
adc
data16
imul
push
shll
rcll
loope
adc
jo
lods
jns
mov
xor
out
and
ss
outsl
push
mov
mov
cmc
cmpsl
xlat
jno
pusha
bound
jae
mov
sub
xor
push
test
imul
rcrb
pop
in
test
mov
and
mov
or
lods
ss
push
mov
fmuls
sbb
xchg
jno
jecxz
das
aad
stc
lea
cmpsl
out
inc
cmp
mov
addr16
jl
add
mov
inc
jl
aam
scas
aam
inc
mov
pop
xchg
or
daa
add
sub
xlat
arpl
inc
cmp
movsb
imull
xor
and
jne
jnp
sbbl
xor
dec
out
lock
jb
iret
inc
fld
jge
aaa
mov
test
rcrb
sbb
mov
cmp
push
and
push
ljmp
cmpsl
aad
xchg
lea
xchg
dec
repz
xor
icebp
jb
shrl
ljmp
dec
pop
ficompl
xchg
mov
movsl
sbb
lret
push
subb
jmp
jns
mov
mov
adc
sbb
xchg
jmp
mov
lods
mov
xor
jp
addr16
cmc
jbe
test
xor
test
sti
ret
loop
jl
push
flds
inc
lahf
int
xor
int3
cmp
icebp
inc
sub
xchg
insl
imul
addb
test
in
push
xchg
pop
divb
das
ret
rorl
gs
xchg
mov
pop
ret
je
outsb
mov
inc
push
test
push
mov
popa
xchg
fisubs
lret
add
mov
and
fwait
pushf
decb
mov
sbb
push
rorl
icebp
jmp
push
adc
sub
sti
mov
sub
ret
pop
pop
and
call
fstpt
xor
xor
imul
mov
jg
arpl
mov
data16
xchg
inc
mov
sbb
sbbl
aas
vmovaps
sbb
mov
mov
push
es
sahf
cli
scas
and
sbb
xor
mov
mov
mov
lods
and
sarb
loopne
xchg
enter
ss
adc
sub
jae
out
out
push
mov
test
sbb
mov
mov
mov
int
push
addb
adc
push
shr
mov
ret
xlat
push
push
mov
cmp
addr16
repnz
out
push
mov
icebp
ljmp
shr
ret
add
push
mov
cmp
icebp
in
sbb
pop
imul
sbb
ud1
push
cld
mov
inc
imul
imul
rcll
fcomps
xchg
insl
fadds
pop
mov
popf
mov
pop
mov
test
out
popf
popf
push
pop
sbb
les
outsb
neg
fcmovnbe
mov
pop
es
imul
testb
push
inc
cs
cmpsb
mov
movsl
mov
mov
push
iret
js
fwait
pop
lods
push
push
push
arpl
add
push
push
stc
addr16
and
cmpsl
push
xchg
mov
leave
dec
or
jae
loope
fdivs
push
mov
mov
outsl
in
push
stos
cs
lahf
sbbl
out
or
mov
pop
dec
xor
inc
movsl
aam
xor
int3
adc
add
jo
repnz
inc
in
testl
xor
mov
push
or
sbb
mov
imul
cmpsl
xchg
test
icebp
and
popa
fdivl
stos
jge
sub
cmpsl
jl
adc
movb
add
dec
outsl
jbe
cmpsl
movsb
push
push
outsl
sar
int3
mov
mov
ds
out
or
add
divb
pop
or
stc
jp
lcall
and
popf
jl
inc
or
dec
insl
and
popf
je
orl
pop
xchg
jo
into
movsb
in
std
sbb
in
inc
daa
mov
loop
mov
inc
shl
xor
or
add
xlat
mov
xor
jge
pop
insl
and
sbb
adc
out
inc
lcall
lcall
mov
mov
mov
xchg
in
sbb
add
lcall
enter
push
mov
mov
xchg
xlat
push
shll
fcmovnbe
out
cmp
addr16
push
jge
dec
mov
sbb
mov
stos
mov
scas
loopne
js
sahf
repz
inc
int
adc
lret
outsl
out
enter
sbb
sti
mov
js
in
cmp
jns
and
pusha
mov
cmp
mov
pop
xchg
stos
and
push
shlb
int3
push
jp
dec
push
test
cmp
dec
inc
pop
int3
mov
push
add
adc
inc
or
inc
lds
mov
ficoml
js
mov
aam
lock
pop
xchg
inc
pushf
mov
mov
lods
popa
push
aad
into
sbb
jnp
ss
aam
lock
ffreep
icebp
xchg
push
mov
lds
adc
ret
sub
mov
fwait
loope
ljmp
xor
jp
and
out
fistl
jns
rcrl
mov
adc
pop
jae
and
mov
out
neg
xchg
rcll
pop
repnz
pop
adc
xor
jecxz
mov
ds
orb
xorb
xchg
xorl
lea
ljmp
unpckhps
repnz
enter
jno
adc
pop
push
dec
add
mov
jg
or
lea
rcll
stos
movsb
sub
and
jecxz
inc
lea
stc
cmp
mov
xchg
jmp
inc
and
xchg
xchg
xchg
xlat
test
test
mov
out
push
rcrl
mov
xor
je
mov
or
movsb
jp
out
lea
loopne
dec
xor
mov
loope
jl
lret
adc
ja
out
sbb
aam
cmp
jnp
ret
mov
add
sub
aam
cmp
test
leave
addb
inc
lret
mov
mov
cltd
mov
xlat
add
adc
call
dec
flds
les
sub
sahf
push
push
adc
xor
cmc
jo
insl
sub
add
mov
out
sti
sahf
inc
adc
fildl
or
test
cwtl
in
cltd
lret
jl
cli
jo
adc
mov
adc
movsb
daa
cmp
mull
fidivrs
daa
rcl
adc
loop
repnz
mov
adc
inc
push
pop
fcoml
pop
adc
inc
adc
add
pop
mov
push
mov
ds
sahf
icebp
lea
int3
data16
repnz
mov
in
jp
jb
andl
orl
pop
addr16
adc
pushf
lods
inc
dec
cmp
add
pop
push
stc
sub
mov
ret
cmp
scas
mov
sbb
xchg
fidivs
sti
scas
shrb
xlat
enter
mov
sub
jno
mov
mov
add
lahf
xchg
js
mov
fnsave
int3
mov
dec
leave
adc
lods
and
pop
icebp
jp
fsubr
add
xor
pcmpeqw
push
ljmp
inc
cli
pop
push
or
ja
dec
and
inc
sahf
inc
subl
hlt
jb
xor
jecxz
lret
ror
leave
std
adc
jge
ret
xchg
paddusb
xchg
inc
jecxz
inc
lret
dec
jl
icebp
mov
in
xor
das
in
mov
xor
cmpsb
shl
scas
lahf
mov
and
or
jmp
es
add
inc
xchg
cmpsb
mov
cli
into
add
aad
mov
jp
add
rclb
or
ret
insb
js
aad
and
shlb
cmp
shll
jbe
mov
sub
sti
rcrl
xor
mov
mov
int3
push
ret
jo
dec
push
add
lea
inc
sbb
js
jns
div
pushf
inc
les
nop
pop
test
jp
hlt
subb
nop
int3
je
xchg
mov
fldt
cltd
out
std
js
xor
mov
stc
inc
lcall
cld
sub
sbb
push
push
ja
dec
test
sar
in
add
cmc
rclb
lea
add
stc
mov
push
fimull
push
push
ljmp
mov
push
insb
sbb
sbb
fldt
je
add
mov
jp
pop
pop
int3
sbb
cmp
sbb
fsubrl
jae
xchg
lahf
cmp
add
stos
loop
xchg
mov
aad
in
xchg
jle
jbe
cmp
xchg
jg
xor
repnz
test
mov
sub
sbb
xchg
jb
test
loopne
pop
repz
vpmacswd
nop
jl
push
out
pop
jb
jnp
in
cmc
jae
push
cld
daa
pushf
jbe
sub
sbb
adc
roll
cmp
or
or
or
mov
pop
cwtl
movsb
in
enter
ds
push
movsl
dec
lahf
jg
test
inc
jecxz
pop
push
pop
ja
sbb
movsl
xor
inc
out
ja
push
jmp
aam
movsb
mov
jmp
jno
movsb
dec
enter
add
jne
fisttpll
fdivs
mov
addr16
push
repnz
xlat
mov
fisubs
push
scas
and
add
or
xchg
int
mov
addb
mov
pop
fldcw
lds
sbb
jg
test
imul
fs
scas
rorb
clc
pusha
into
into
pop
pushf
bound
push
sub
xor
lahf
fs
push
xlat
insb
lea
push
jl
shrl
and
clc
lcall
inc
xchg
jo
je
cmp
ds
movsb
call
dec
adc
push
loope
and
lea
pop
xchg
mov
mov
dec
mov
nop
mov
fwait
mov
iret
mov
outsl
jb
jmp
jmp
or
xlat
sub
imul
jbe
push
int
sarb
fistpl
cmp
and
xchg
sbb
sub
lret
jmp
call
inc
rol
es
scas
adc
adc
fdivl
mov
xchg
es
adc
lock
inc
icebp
cmp
xor
jo
aas
in
add
inc
mov
cmp
insl
sbb
pop
data16
negl
mov
pop
adc
pop
imul
mov
push
test
lahf
mov
add
jae
xchg
mov
cld
xchg
das
push
mov
shl
mov
push
loop
adc
test
xor
mov
leave
test
rol
leave
iret
fucomp
cs
jbe
lcall
mov
push
adc
fstpl
fistps
mov
mov
in
lret
adc
mov
pop
lds
ret
push
mov
aas
push
xchg
ljmp
mov
xor
ret
mov
popa
xlat
jl
sbb
xor
push
clc
pop
fwait
mov
xor
pusha
jb
fimull
ret
mov
add
dec
imul
cmc
scas
in
sbb
or
inc
add
or
sbb
jge
inc
mov
sub
push
mov
mov
cmpsb
mov
andl
sbb
mov
into
cmp
pushf
aad
aas
push
fdivrl
cwtl
jge
xchg
into
outsl
out
daa
xchg
imul
lock
jmp
insb
mov
lods
data16
mov
out
lret
mov
cmpl
into
faddp
push
sti
aad
scas
ficoms
and
add
and
leave
ljmp
test
sbb
pop
insb
mov
je
add
cmp
inc
push
push
pop
popa
cli
movsl
adc
scas
bound
cwtl
mov
ljmp
add
stos
and
sbb
add
fdivrp
adcl
xchg
mov
in
out
js
sarl
inc
cmp
adc
or
notb
or
mov
int3
into
or
test
sbb
fs
adc
cmp
int
stc
sbb
dec
aas
and
mul
sbb
out
mov
dec
addw
jnp
push
mov
pop
sbb
push
or
inc
data16
add
jge
outsw
cmp
out
pop
addb
mov
imul
sbb
inc
jp
xchg
aad
xchg
sbb
sbb
out
sbbl
xchg
xor
xchg
sbb
xlat
jmp
mov
bndstx
lahf
push
lret
hlt
pusha
push
test
mov
or
imul
ds
hlt
je
jno
and
into
lahf
mov
ds
data16
clc
inc
push
adc
shlb
cmpl
nop
mov
ror
push
in
sarl
xchg
ljmp
call
pushf
sub
mov
imul
add
sub
and
inc
jb
out
pop
add
mov
nop
pop
in
dec
clc
imul
xchg
lods
mov
lds
xor
cmp
gs
cmp
scas
std
mov
loopne
xchg
lods
xor
insl
cmpl
rcrb
loope
pop
ljmp
stos
out
pop
lds
xor
cmp
pop
sbb
repnz
stc
jno
bound
pusha
enter
int
insb
loope
ja
iret
pop
mov
adc
aad
in
cmc
mov
lret
imul
arpl
cli
dec
adc
cwtl
add
cwtl
cmp
jg
mov
fimuls
jne
inc
add
dec
ds
aas
xor
lcall
inc
inc
pop
repz
notb
ljmp
jbe
sbb
data16
push
xor
jae
test
adc
imul
adc
cmp
jge
push
cs
inc
pop
mov
addl
movsb
push
mov
xchg
cmpsl
les
subb
jl
xchg
dec
jne
adc
fisubrs
scas
jno
push
data16
data16
stc
or
cmp
adc
or
mov
mov
or
mov
push
shlb
adc
xchg
push
fadds
jnp
dec
jmp
call
pop
mov
fstpl
xchg
adc
movsb
mov
scas
xor
sub
lret
loope
lcall
and
fwait
add
mov
cmpsb
cmp
xchg
negl
in
sbb
gs
mov
dec
loopne
add
jle
js
cli
dec
movsl
popf
sbb
xchg
xchg
ss
lcall
inc
push
jmp
jge
rclb
test
les
pop
push
rcrb
cmp
stos
inc
jp
int3
mov
xchg
cmp
and
or
mov
js
mov
sub
mov
pusha
adc
aam
add
rolb
push
add
sbb
icebp
mov
pop
jp
scas
cmp
cmpsb
loop
movsl
sub
mov
jecxz
imul
stc
data16
ficoml
sub
rep
and
jnp
dec
add
fdivrs
aam
ret
jo
push
xor
inc
mov
inc
jl
adc
subl
inc
cmp
push
add
popf
mov
add
in
insb
inc
das
test
or
nop
ja
repz
and
imul
stos
jbe
dec
test
rcrb
iret
fs
or
test
adc
mov
decb
add
arpl
stos
and
jns
mov
ficompl
mov
test
inc
mov
sbb
add
or
in
mov
inc
ja
dec
fldcw
outsb
cmp
mov
lods
test
or
mov
mov
enter
imul
aam
icebp
dec
pop
loope
add
or
mov
sbb
dec
js
push
dec
das
out
imul
cs
mov
or
jle
lods
push
lcall
jae
adc
int
ret
lret
dec
imulb
push
out
popf
popf
dec
adc
sti
fistps
push
shll
popa
pop
inc
cltd
cmp
push
adc
test
xchg
loop
inc
out
gs
lret
jge
dec
jp
sbb
or
scas
data16
sub
int3
xor
dec
dec
rclb
shll
push
xchg
lahf
fwait
and
add
fcmovu
outsl
cwtl
fnstsw
adc
out
pop
cltd
xchg
in
dec
scas
pop
hlt
shl
jmp
inc
inc
int
jg
movsl
dec
std
ljmp
nop
jle
dec
adc
out
push
xor
jbe
xor
int3
and
pop
mov
ror
add
inc
or
and
clc
sub
shr
add
sbb
stos
mov
cmp
loopne
cmp
nop
aas
pop
aam
int3
imull
test
ret
cmp
sub
dec
stos
xchg
lcall
pushl
push
pushf
pop
cmpsb
sbb
mov
std
xlat
pop
in
call
stc
imul
popa
pop
adcb
xchg
and
bound
xchg
cmp
and
mov
pushf
or
loope
sbb
lcall
mov
dec
sub
nop
xchg
jo
sub
push
fsubr
orb
push
pop
cmpsl
adc
push
lods
dec
sbb
jecxz
inc
inc
rcr
sbb
lret
iret
fiadds
inc
mov
sahf
lds
rorb
sub
testl
pop
push
cwtl
fidivs
mov
sbb
xor
jg
xchg
repnz
sub
sbb
andl
xchg
ja
mov
push
cmpsl
nop
bound
inc
cs
nop
mov
dec
out
movsl
loop
std
inc
mov
sarb
daa
pushf
aas
in
mov
rolb
pusha
in
push
mov
shrb
sub
cmp
xor
mov
cmp
xchg
push
mov
lock
xlat
sub
dec
add
sbb
pop
add
sbb
fidivrs
loop
mov
cli
jbe
mov
mov
push
jne
inc
pop
enter
shlb
rclb
enter
xchg
es
jmp
sub
jg
loopne
movsb
cmp
adc
pop
stos
xor
push
add
sub
pop
cmpsl
mov
and
aaa
sub
lret
in
mov
add
lcall
pop
push
cmp
mov
gs
push
inc
inc
ss
loopne
inc
mov
dec
inc
fwait
xchg
pop
pop
insb
mov
ljmp
push
les
repz
stc
push
pop
in
sbb
sub
xchg
mov
daa
lods
push
jb
ja
push
xchg
hlt
dec
add
mov
sbbb
xchg
jecxz
std
sbb
mov
lods
pop
es
cmp
or
fnstsw
jmp
mov
call
adc
ljmp
cmp
popa
cmp
ja
imul
cmc
adc
enter
inc
stos
outsl
rcll
mov
inc
out
and
pop
fstl
sub
pop
inc
jecxz
dec
out
push
in
hlt
xlat
cmc
sti
push
xchg
adc
leave
shrl
fnsave
push
repnz
fs
gs
and
lock
gs
and
lds
out
xor
loop
and
les
adc
ret
xor
and
cmpsl
sub
in
fdivl
nop
and
rcll
xchg
adc
cld
dec
or
pusha
jle
add
jmp
jle
outsb
sub
add
sar
pop
xor
mov
bound
orl
push
sarl
dec
pop
mov
lahf
pop
jecxz
mov
jle
cmpsl
sti
into
inc
sub
sti
sbb
adc
insb
je
stos
push
fwait
or
push
jbe
mov
insl
mov
aaa
sbb
jg
fistps
mov
test
nop
mov
cmp
add
xorl
sub
hlt
shll
jno
aam
and
addr16
mov
cmp
and
mov
fldenv
pop
rcr
push
fnstsw
lret
mov
mov
lods
xchg
int
sub
or
bound
inc
push
sbb
insb
loope
push
jmp
adc
leave
mov
loopne
into
xor
mov
sub
ss
popa
insb
and
dec
mov
xchg
or
fisttps
push
pop
push
pushf
xchg
inc
cmpsl
bound
dec
aas
sub
xorl
shrl
pop
out
dec
pop
jno
jb
neg
testl
inc
mov
inc
xor
inc
push
aad
or
inc
jge
mov
test
dec
mov
popa
nop
aaa
test
cwtl
mov
lahf
popa
jp
out
aaa
mov
movsl
xor
mov
sahf
jmp
lds
xor
push
leave
mov
sbb
fstpt
imul
stc
xchg
mov
xor
scas
ret
sbb
and
scas
inc
fwait
stc
jl
push
enter
xor
cmpsl
jg
xchg
mov
and
xchg
mov
lea
mov
xlat
sbbb
mov
jmp
pop
dec
push
int
loop
loopne
fwait
inc
adcl
inc
stos
mov
popf
icebp
cmpsb
dec
push
sti
sub
jg
inc
and
mov
xchg
outsb
or
popf
adc
pusha
fmul
sub
out
cli
xor
jns
lahf
sbb
fcoml
adcl
jmp
and
pop
sub
sub
ljmp
jmp
lahf
jge
cmpsb
add
add
mov
inc
mov
mov
outsl
nop
mov
shlb
ret
xchg
sub
sub
pushl
or
stc
mov
in
mov
cmp
mov
dec
dec
pop
aad
or
sti
mov
test
aaa
xchg
sti
inc
and
cmp
jnp
xor
fwait
scas
stos
mov
xchg
pop
out
push
dec
cmpsl
orb
sbb
jno
out
pop
sub
fucomi
adc
xchg
mov
icebp
xchg
cmp
cwtl
jge
mov
mov
push
stos
push
push
or
xchg
sbb
mov
push
pop
inc
xchg
dec
pop
lods
inc
loope
into
and
rcrl
pop
push
push
ja
add
add
jne
and
jl
adc
dec
subb
fbstp
shl
aas
into
fnsave
sub
cmpsl
or
jno
push
icebp
ja
nop
mov
ljmp
mov
mov
lea
movsl
adc
fnstcw
testb
out
in
out
ret
lds
ret
sbb
pop
xchg
jge
pop
sbb
add
mov
sub
sub
aas
add
popa
mov
jno
cwtl
mov
mov
xchg
mov
mov
out
roll
jge
xchg
push
dec
in
push
sahf
cs
stos
addr16
dec
les
pop
nop
xchg
int3
cmp
xchg
push
add
jb
addr16
cmc
or
adc
mov
mov
and
jl
subl
fstps
push
repz
imul
add
mov
sub
imul
or
mov
shlb
mov
push
lahf
xchg
adc
aad
push
inc
sub
cld
and
pop
scas
sbb
sahf
enter
lahf
ds
adc
cmp
jns
dec
mov
addl
add
mov
mov
jb
js,pt
and
mov
mov
mov
push
sub
pand
outsl
adc
clc
icebp
test
mov
sahf
in
dec
push
push
insb
or
sahf
xor
cmp
sbbl
jl
out
mov
mov
mov
inc
aad
jnp
cmova
dec
jmp
pop
movsb
das
pop
jecxz
dec
daa
mov
out
jae
mov
fidivl
mov
jo
mov
sbb
jp
inc
pop
pop
mov
dec
mov
push
and
xorb
lahf
jbe
sbb
jle
push
jbe
push
mov
xchg
or
push
mov
jmp
mov
jle
pop
jecxz
lea
call
jbe
ds
jle
add
and
xorb
icebp
jne
mov
outsl
insl
jmp
dec
mov
fcmovu
mov
or
cmp
jp
cmpsl
dec
out
sbb
and
jecxz
out
fwait
sbb
ja
cmp
add
jne
push
sbb
pop
gs
jmp
xchg
cwtl
mov
ja
decb
aas
dec
in
call
add
sub
les
mov
lret
cmp
sub
imul
mov
test
lcall
push
cmpsl
xor
mov
dec
std
add
js
sbb
stc
movsb
cmc
pushl
repnz
jnp
xchg
jns
add
lods
add
jo
push
fnstcw
pop
push
xchg
mov
addr16
push
inc
out
mov
test
adc
clc
inc
add
add
or
stos
sbb
dec
outsb
ret
push
shlb
aas
or
ret
test
lahf
nop
cld
jl
jmp
jnp
mov
mov
cltd
daa
jo
mov
jnp
andl
out
enter
xlat
scas
test
push
inc
stos
repz
ljmp
cs
jmp
pushf
imul
lret
lods
jl
loopne
aaa
jp
out
add
nop
popa
jle
cmc
scas
ja
dec
add
lahf
fbstp
add
push
fisubl
movzwl
aaa
test
cli
xor
cmp
stos
adc
je
mov
call
mov
xor
dec
inc
movsl
mov
add
mov
mov
or
push
fimull
and
mov
fwait
mov
jb
out
fwait
or
cmp
cli
dec
sub
and
push
roll
inc
push
pop
sub
insl
and
and
insb
or
sbb
orl
ret
popf
stc
pushf
nop
das
cmp
pop
push
in
lock
mov
imul
shr
inc
xchg
add
pop
sbb
sub
movsl
ljmp
repz
js
mov
fisubrs
movsl
hlt
outsl
pushf
roll
hlt
movsl
ror
add
inc
dec
push
out
gs
jo
xor
call
or
lods
lcall
cs
jp
ret
xor
bound
push
iret
mov
in
das
lret
or
ret
mov
jmp
sub
fwait
inc
imul
dec
mov
xchg
mov
xchg
mov
mov
xor
add
mov
mov
pop
or
push
addr16
push
fwait
lcall
ja
dec
mov
mov
fdivs
fldcw
or
cld
lods
lds
fcomip
sbb
push
mov
les
lods
shrl
mov
sbb
add
cmp
stos
and
fldenv
push
das
scas
pop
sti
push
test
add
lret
xor
mov
jae
jb
mov
xchg
mov
and
xchg
jle
ror
mov
cmpsb
xor
aam
rcr
mov
test
cmp
xorb
adc
das
rorb
adc
adc
std
or
mov
mov
es
fcmove
jmp
int3
mov
pop
mov
outsb
pop
xor
repz
sbb
pop
inc
xor
rcrb
mov
sbb
fstl
loopne
or
xor
cmpb
mov
dec
or
jo
and
decl
sbb
outsb
jp
mull
mov
pop
sub
xchg
mov
leave
cmpsb
fildll
fcoml
stos
xchg
add
mov
xchg
mov
sbb
add
cmp
sub
cmp
dec
mov
xchg
rcl
arpl
lcall
jno
pop
jo
or
adcb
cmp
cmp
insb
lret
push
scas
mov
mov
int3
adc
jg
push
or
mov
xchg
cs
mov
dec
shrl
clc
aad
and
adc
sbb
enter
mov
pop
repnz
stos
mov
jb
cld
push
in
cmpsb
jg
cmpsb
scas
jle
xchg
adc
mov
push
pop
aam
ds
jl
outsb
sub
in
sbb
mov
inc
mov
mov
sub
out
lret
test
xchg
stc
mov
mov
sahf
jae
xlat
lods
sbb
push
xlat
mov
out
mov
cmp
xor
pop
ds
int
cmp
imul
jne
sbb
pop
push
inc
dec
aam
adc
fsubs
inc
mov
mov
inc
repnz
int
clc
or
and
jbe
cmp
imul
xchg
pop
sbb
and
cmpb
or
cld
pop
fisubrs
cmp
pop
dec
loopne
ja
jle
scas
leave
dec
adc
push
add
push
mov
push
adc
scas
xchg
jp
cmp
jge
xchg
ljmp
imul
sbb
sti
rcrb
cwtl
dec
test
xor
sbb
movsb
cmp
shlb
sub
pusha
mov
jo
cmp
fnsave
lock
or
leave
add
mov
jecxz
mov
in
mov
mov
stos
insb
xlat
adcl
neg
popf
pop
pop
mov
and
sbb
outsb
push
lahf
dec
mov
sub
and
xor
xchg
jecxz
fwait
jnp
dec
add
pop
dec
shll
jbe
popf
mov
sub
fcomp
sti
dec
enter
ja
mov
dec
inc
repnz
test
popa
hlt
pop
xlat
push
or
daa
or
enter
cmpsb
fistps
enter
mov
jnp
add
mov
pushf
mov
icebp
cmc
or
outsb
and
jnp
out
or
xor
mov
cld
or
bound
mov
dec
aad
je
in
popa
jl
push
sbb
subb
cmp
or
mul
sub
xor
mov
neg
daa
or
xchg
adc
das
insl
repnz
sbb
xor
sub
inc
push
pop
ds
sbb
push
movsb
jmp
cmp
jbe
shlb
fisttpll
cmpsl
jmp
push
out
lods
jle
dec
stc
jnp
ljmp
adc
add
push
and
dec
or
leave
stos
cld
test
add
cmp
imulb
stc
inc
xor
sbb
push
add
xchg
fsubrs
mov
pusha
out
mov
jge
push
mov
push
cmp
daa
notb
dec
and
mov
push
lahf
stc
inc
rcrb
push
std
scas
or
dec
dec
and
xchg
dec
sub
sbb
jmp
dec
xor
mov
iret
add
mov
push
lods
les
das
int
pop
pop
xor
icebp
mov
adc
aaa
int3
xor
rorl
xchg
mov
xchg
sub
aas
cmpsb
scas
jbe
rorl
ds
cmpl
pop
cld
cmp
lret
mov
fsubp
movsl
shll
jg
pusha
rcll
mov
inc
addl
movsb
jle
ds
inc
mov
dec
cmp
pop
or
mov
decb
orl
imul
inc
or
mov
mov
sub
push
pop
dec
pop
jle
jbe
cmc
cmc
jne
adc
xor
inc
cmp
push
jne
cmp
adc
dec
xchg
ds
xorb
pushf
xchg
jmp
aam
sub
cmp
push
adc
loopne
imul
xor
jae
mov
loop
loopne
mov
ss
xchg
xor
icebp
bound
jp
js
mov
add
lock
out
mov
dec
lret
lods
cmpsl
mov
pushf
lret
out
ljmp
or
inc
and
cmp
adc
pop
cmp
inc
cmpsl
pop
pop
jmp
xor
loop
movsl
repz
inc
pusha
push
es
das
fs
rorb
mov
js
aaa
mov
enter
or
pop
fcomp
push
mov
and
inc
inc
fs
arpl
cmpsl
mov
nop
mov
jecxz
nop
push
pop
mov
jbe
shll
incb
das
dec
scas
pop
and
cmp
jb
out
xchg
pop
inc
enter
inc
adc
inc
data16
test
filds
gs
mov
repnz
es
mov
outsl
sub
shl
cmc
mov
mov
nop
jmp
fidivl
mov
fsubs
mov
rol
xor
aaa
shrb
pop
fs
inc
dec
mov
ret
pop
mov
mov
dec
es
push
pop
divb
jl
mov
pusha
lock
mov
dec
popa
ja
pop
ret
fs
xor
cltd
jmp
pop
fs
leave
lret
push
dec
arpl
test
test
add
jno
imull
cs
add
and
pop
mov
and
pusha
lock
leave
out
shl
lret
mov
adc
stos
ret
ror
jle
lcall
or
mov
arpl
in
subb
ja
jmp
dec
lods
dec
in
loope
fs
cs
xor
and
dec
cmp
jae
bnd
xchg
fbstp
cmpsl
pop
lret
pusha
add
jp
and
dec
push
gs
enter
xchg
jge
jae
sbb
daa
sbb
movsl
or
push
aam
sbb
popa
idivb
cmp
mov
stc
jle
ljmp
fs
mov
int3
and
jne
pop
adc
mov
mov
int
loope
inc
je
jno
shlb
andb
jae
dec
imul
push
movsl
mov
cwtl
lods
or
je
dec
xor
stc
arpl
mov
pop
pop
dec
push
mov
dec
daa
orb
xchg
xchg
out
repnz
pop
add
std
jl
mov
xchg
jg
jmp
scas
push
cwtl
mov
pop
sub
call
jne
nop
inc
popf
pop
loopne
bound
dec
cmp
ljmp
push
stos
in
dec
imul
inc
inc
popf
pop
and
lods
pop
lret
adc
jb
xor
clc
aaa
cmp
mov
sbb
sbb
aam
cmc
in
xchg
pop
mov
popa
mov
dec
cwtl
jb
fnstsw
xor
sub
pushf
icebp
sbb
je
and
cltd
sbb
into
push
adc
insl
xchg
lea
pusha
mov
jmp
rorb
xchg
pop
xor
xchg
cmp
call
inc
std
out
je
push
add
out
ljmp
lods
test
push
cmp
dec
jge
cwtl
in
inc
dec
pusha
and
mov
es
push
mov
enter
add
out
and
jo
mov
sbb
repz
inc
xor
test
push
mov
add
je
mov
mul
lahf
sub
test
xchg
inc
push
and
mov
ljmp
jl
cld
loope
fiadds
sbb
enter
push
add
data16
fdivrs
cwtl
lds
pop
adc
cmpsl
cmc
cmp
test
mov
xchg
clc
mov
test
outsl
cmp
mov
push
cld
stc
sbb
mov
cmp
test
les
jmp
xor
mov
xchg
sbb
in
inc
and
add
cmp
nop
test
push
mov
out
ljmp
xchg
push
fisubl
pop
or
sbb
lods
out
push
adc
jnp
inc
daa
jp
mov
imul
cmp
inc
jo
popa
mov
jne
fidivrs
sbb
push
stos
fwait
aam
in
data16
test
std
aad
or
loopne
sub
stos
push
pop
xchg
cmpsb
cmp
repnz
bound
mov
push
pushf
clc
out
mov
lahf
jg
xchg
test
shl
and
push
shl
adc
cli
cmc
mov
mov
mov
pusha
ds
ja
lock
and
das
lret
push
sahf
sub
pop
repnz
rorl
cmp
xlat
ret
jno
scas
pop
movsl
xchg
lea
dec
cltd
lret
mov
sbb
aas
out
add
lock
inc
dec
cmc
shll
adcb
test
insl
mov
cmp
add
arpl
outsb
push
or
bound
out
inc
outsb
mov
xchg
jp
out
xor
ss
nop
fsts
int
fnsave
mov
aas
sub
loop
pop
gs
jne
in
es
xor
mov
jp
subb
mov
enter
filds
cltd
lock
pop
aam
push
movsl
sub
mov
test
dec
pop
jmp
imul
push
rcrl
aad
pushf
pop
stos
add
sbb
add
push
adc
and
fldcw
sbb
push
jb
mov
hlt
cmp
lahf
mov
inc
adc
mov
aam
out
fcompp
inc
insb
lods
jge
cmc
popa
repnz
ds
popa
xchg
sub
out
stos
lods
inc
aad
loop
cltd
je
sbb
xorl
xadd
push
mov
sub
pop
jns
jb
mov
mov
or
cltd
lock
mov
and
arpl
cmp
lret
push
xor
je
mov
lock
fildl
cmp
mov
pop
hlt
in
xlat
mov
jle
jecxz
push
cmovg
inc
push
push
aas
fwait
sbb
hlt
xor
mov
sub
xor
mov
mov
mov
das
push
cmp
test
fwait
push
data16
test
addl
adc
fcmovnu
popa
jae
cmc
out
std
inc
push
aad
pop
into
adc
xchg
push
inc
std
into
sub
add
sarb
mov
xchg
adc
cld
dec
addr16
mov
adc
cmp
hlt
xchg
adc
lods
popf
jmp
mov
xor
in
push
or
cmp
or
scas
cwtl
cltd
stc
arpl
sub
fisttpl
xchg
lcall
fildll
aad
or
addr16
adc
fldl
fldpi
dec
mov
fs
test
jp
icebp
xchg
push
cltd
insl
imul
in
sub
loope
addl
jo
fs
mov
mov
fwait
xchg
pop
xor
scas
rcll
mov
push
cmp
shl
shll
loop
int3
cmp
pop
pop
movsl
ret
mov
mov
adc
orb
xchg
adc
mov
scas
sub
and
push
repz
daa
ror
ret
pushf
xor
mov
jle
fdivr
pusha
imul
mov
lods
lods
pop
mov
addr16
cwtl
mov
ljmp
rcrl
pusha
js
outsl
inc
test
dec
addr16
dec
testb
rorl
sbb
insl
sbb
aam
pop
loope
cmp
push
fdivrl
push
inc
aam
xor
fnsave
mov
xor
out
push
push
and
cltd
xchg
iret
push
pop
popf
lahf
ficoml
ja
lret
mov
lret
pop
clc
push
outsb
pop
push
pop
push
pusha
leave
push
add
or
pop
mov
adc
mov
mov
xor
mov
fnstcw
inc
imul
add
insl
dec
and
scas
int3
cltd
int
mov
dec
and
shlb
loope
inc
repnz
insb
xor
loopne
add
sub
fstpl
insb
pusha
cmovle
add
incl
sti
sbb
sub
stos
mov
pop
jl
mov
out
mov
or
sbb
daa
add
push
cmp
pop
ds
push
sub
push
cmp
dec
dec
ja
js
popf
push
adc
movsb
mov
out
sbb
movsl
xchg
pop
sub
and
cmpsb
flds
incw
sti
les
mull
pop
stc
jns
je
cmp
add
jle
out
enter
jb
sub
data16
sbbl
shll
push
inc
out
mov
imul
les
mov
bound
mov
jo
sbb
mov
adc
cwtl
scas
and
push
icebp
in
into
iret
sbb
pop
popa
pusha
mov
cmp
adc
scas
jnp
pop
inc
mov
fisubrl
lds
in
jno
lea
mov
ds
pop
jmp
out
sbb
sub
dec
dec
mov
dec
cltd
mov
mov
mov
lods
imul
xor
pop
jae
adc
xchg
aas
jno
mov
jbe
sbb
shll
mov
and
into
loope
jmp
cmpsb
push
sbb
jmp
cs
push
xchg
ds
and
adc
xchg
jnp
adc
popa
fidivrl
loopne
xor
fistps
jo
mov
or
repz
sti
jge
mov
icebp
aas
push
stc
jle
lock
aaa
mov
cmpb
xchg
xchg
iret
popa
dec
bound
insl
rclb
subl
xchg
inc
out
fs
fisttps
lds
fisubrl
lcall
fstpl
sahf
push
pop
push
fmul
push
xchg
aas
stos
add
setb
or
xor
popf
add
insb
xchg
dec
mov
addr16
fs
lcall
pop
idiv
mov
ja
cmp
and
push
push
iret
inc
jle
mov
pop
lret
xchg
int
jo
cmp
push
add
popa
je
leave
sbb
xchg
cmpsl
scas
push
jle
das
sub
mov
pop
icebp
add
jns
mov
sbb
push
or
lahf
cld
loop
push
repz
jmp
xchg
nop
aas
inc
ret
and
or
sub
sub
pop
sub
ds
ljmp
movsl
lahf
data16
xchg
ljmp
daa
je
push
notb
xchg
sbb
mov
shl
popf
cmc
or
shrb
daa
ja
cmpsl
fwait
jge
fidivrl
pop
ljmp
push
int
enter
scas
push
mov
test
loopne
psrlw
leave
push
loopne
pop
out
push
mov
movsl
jno
stos
push
add
hlt
das
adc
out
cld
jbe
push
dec
aaa
lcall
push
insb
je
or
and
mov
mov
sahf
in
push
aam
jl
fsubrs
adc
stos
repnz
call
push
sub
lock
lret
xchg
js
dec
leave
pop
mov
sbb
stos
cmpsl
lods
mov
into
jecxz
jg
sbb
jne
or
cs
roll
jo
jmp
mov
mov
mov
mov
pop
outsb
popa
enter
lahf
push
pop
scas
sbb
int
shrb
inc
daa
xchg
fnsave
ret
jmp
jle
test
cmp
sahf
add
dec
cmp
es
cs
lods
mov
push
dec
cmp
in
leave
sub
int
fstl
ljmp
inc
xor
lahf
push
and
push
popf
add
jmp
out
and
aaa
or
addr16
and
mov
enter
mov
pop
inc
pop
mov
in
pop
repnz
out
push
icebp
out
rcr
sbb
dec
mov
aaa
and
idiv
adc
test
outsl
in
jne
fcomps
cmpsl
mov
mov
stc
cmp
sbb
and
bnd
setne
xor
add
xchg
mov
out
sbb
clc
xchg
lods
jmp
sub
xchg
or
insl
mov
and
clc
pushf
mov
ss
hlt
test
out
add
test
or
ret
sbbb
add
out
js
ja
mov
addb
int
pop
mov
sti
or
pop
shll
lds
in
mov
cmpsb
or
jbe
loope
cmpsb
in
inc
mov
cmovne
cmpsb
aaa
xor
and
push
nop
pop
popa
adc
inc
sarb
testb
test
gs
js
cld
lcall
cmpsb
es
jl
cmpsb
scas
xchg
xlat
pop
sbb
into
mov
ds
cmp
fists
repz
jle
push
mov
xchg
jbe
pop
and
shl
std
mov
mov
pushf
rcll
es
dec
sbb
fwait
adcl
out
imul
adc
pop
je
jns
xor
lret
cmp
movsb
inc
jnp
sbb
lret
ja
lret
dec
shll
test
inc
lcall
mov
push
cwtl
insl
xor
cmpsb
mov
xor
pop
dec
xchg
scas
lods
jp
mov
dec
mov
rorb
sbb
scas
sub
outsb
mov
xlat
idivl
mov
fcmovnbe
push
or
cmc
mov
sbb
cmp
sub
xor
enter
icebp
cmc
aas
or
sbb
push
repz
or
in
cmp
scas
jecxz
fcompl
and
dec
lcall
add
push
xor
pop
enter
add
dec
test
pop
movsb
push
or
or
shrb
push
add
call
int3
bound
jns
es
cmpsl
insl
mov
inc
dec
mov
jmp
push
jae
jo
fnstsw
loopne
lods
sub
pop
dec
inc
out
cs
xor
out
testl
lret
add
cmpsl
cli
mov
cmp
and
adc
flds
jge
cli
mov
movsl
mov
and
add
push
jl
fstps
xor
test
xor
clc
fwait
xor
xlat
xchg
xchg
stos
mov
arpl
push
push
jo
sahf
mov
and
outsb
lcall
xor
sub
aad
movsb
or
mov
xor
out
sbb
test
lcall
fldcw
adc
in
data16
sub
repnz
ds
cmp
addl
in
int3
lahf
psubusw
imul
sahf
sbb
out
jp
mov
pop
dec
insl
add
pop
mov
daa
enter
pop
fistpl
jnp
js
sub
or
dec
push
lret
sub
push
xor
mov
adc
mov
mov
imul
push
dec
movsl
ss
push
add
push
dec
int3
dec
mov
and
sub
incl
cmc
je
ja
pop
jno
and
mov
xchg
hlt
enter
fcoml
add
dec
lret
mov
inc
test
or
in
jo
inc
jg
xchg
sahf
addb
jecxz
shll
add
mov
inc
mov
xchg
dec
call
roll
add
adc
pop
jns
cltd
add
fsub
pop
data16
out
movsb
inc
fdiv
loopne
loope
sbb
aas
mov
sti
or
clc
in
stos
dec
cld
sbb
dec
jb
int3
adc
test
cs
pop
and
sub
fcmovbe
ds
sbb
or
roll
push
adc
mov
cmp
pop
sbb
divb
jne
lods
push
xchg
out
lea
jle
add
fstpt
sub
std
push
pop
mov
dec
sbb
ret
pop
lret
in
cmp
cmpsl
mov
rolb
cmpsb
test
in
add
clc
imul
aam
mov
sahf
das
inc
adc
psllq
xchg
add
pop
in
add
jmp
mov
dec
push
int3
adc
std
negb
xor
mov
in
mov
mov
push
ss
add
pop
test
xor
add
mov
mov
xchg
and
pop
jnp
pusha
xor
cli
adc
adc
sbb
int
inc
push
ror
mov
jmp
mov
test
lret
loopne
cmp
push
insb
dec
icebp
cmc
clc
cwtl
out
div
out
xchg
int
mov
mov
popf
mov
mov
xchg
roll
jecxz
dec
movsl
or
pop
mov
gs
lods
pop
jnp
shll
and
jne
push
add
aam
inc
pop
stos
in
push
fxch
mov
pusha
and
and
pop
inc
cmc
in
int
and
ret
add
ss
mov
jo
fs
scas
mov
or
arpl
das
sub
enter
mov
cmc
mov
sbb
fldl
sbb
mov
test
push
cmc
sahf
mov
jge
pop
clc
fisubrl
aam
imul
out
lods
adc
pop
fcomip
adc
and
mov
fildll
ret
lock
in
mov
and
push
idiv
mov
jnp
sub
push
lcall
sbb
xchg
mov
sahf
pop
jnp
clc
sub
xchg
popf
mov
mov
imul
insl
jle
ret
pushf
pop
aas
sbb
jo
lret
outsl
movsl
call
mov
mov
sbb
pop
pop
cmc
jae
icebp
mov
sub
sahf
outsl
out
adc
pusha
mov
imul
aas
aam
mov
jp
insl
movsb
jnp
sub
shrb
add
mov
stc
add
std
repnz
pushf
push
imul
sub
push
xchg
out
and
mov
cmp
xchg
loop
scas
repnz
orl
mov
push
cmp
dec
sub
xlat
sti
into
in
in
mov
js
repz
inc
and
cli
inc
lret
mov
mov
inc
movsb
dec
pop
aad
mov
sub
or
cmp
ror
call
add
mov
or
sub
or
in
stc
repz
leave
stos
xchg
mov
daa
lods
push
add
out
loopne
xor
mov
mov
mov
stos
ja
adc
push
pushf
js
mov
cs
sbb
or
loope
test
dec
xchg
aam
mov
jns
adc
inc
out
cmp
lret
or
sbb
sub
inc
jecxz
fiadds
inc
jmp
mov
xchg
ret
popf
adc
fs
mov
jae
mov
jno
loope
mov
mov
or
mov
pop
movsl
cld
fsubrl
inc
ja
arpl
leave
pushf
cmp
mov
mov
dec
sub
push
mov
or
ja
imul
test
rcrb
stos
movsl
in
movsl
lret
mov
loope
or
int
das
xchg
scas
call
sbb
jbe
pop
mov
popa
or
mov
dec
jne
sbb
fucom
fdivrl
popa
test
dec
jmp
or
cmpsl
mov
inc
mov
or
sarl
sub
xchg
mov
xchg
mov
dec
test
pop
stc
inc
pop
das
add
les
push
mov
sub
rolb
inc
xor
lea
mov
jns
test
stos
scas
dec
sbb
pop
adc
dec
sbb
imul
aas
jmp
nop
test
pop
lods
jno
jbe
rorb
ret
mov
insb
push
sbb
xor
das
stos
loope
dec
add
push
and
rolb
xlat
mov
fidivrs
inc
add
dec
sub
ljmp
fadds
sub
fs
mov
xchg
loop,pn
adc
js
out
aam
iret
lea
mov
xchg
xor
pop
shlb
lcall
jbe
rolb
mov
dec
insb
pop
add
nop
jl
dec
push
loop
cmp
sbb
rcll
lahf
bound
andb
mov
lret
xchg
and
stos
push
mov
std
addr16
add
xchg
xor
xchg
mov
js
stos
js
sbb
cmp
out
arpl
sahf
imul
xor
ret
or
mov
loopne
mov
lret
and
ja
push
cli
xchg
repz
repnz
popa
adc
fs
xchg
imul
loop
daa
repnz
iret
add
xor
in
cld
and
and
push
inc
in
pop
jge
pop
cmp
xchg
mov
push
fisubl
test
or
push
inc
pusha
movl
jno
jno
movsl
mov
lret
xchg
call
fistpll
xor
loope
cwtl
cmc
inc
les
xlat
cmc
xor
int
imull
arpl
sub
daa
sbb
out
push
in
icebp
sahf
cmpsb
in
lcall
rcr
rcr
xchg
add
mov
jmp
pop
pop
cmp
xor
loope
pop
les
jo
inc
mov
test
adc
loop
mov
ljmp
fwait
mov
ljmp
jl
mov
js
insl
loopne
aaa
or
xchg
cld
mov
pop
mov
push
fcomps
in
popf
mov
inc
pop
ret
lods
repnz
fisttps
xchg
xchg
cltd
push
mov
ljmp
lcall
sub
push
xchg
fmull
outsb
aas
cli
fcoms
cmpb
fucomp
sub
out
cmp
lfs
mov
mov
or
fisubl
cs
arpl
ds
test
jnp
in
setno
repz
inc
mov
sub
mov
push
xor
dec
aaa
dec
lret
jp
push
push
adcl
in
sahf
push
test
sub
add
add
jmp
sbb
add
icebp
js
lea
dec
sub
loope
andl
out
adc
insb
xchg
lahf
mov
add
pop
sahf
lcall
test
std
scas
aaa
mov
jb
inc
pop
add
sahf
loop
into
push
data16
pop
imul
push
jle
add
lea
mov
clc
out
leave
push
fs
cld
jo
subb
cmp
loop
cli
mov
xchg
and
push
xchg
inc
mov
sbb
ljmp
orb
cmpb
inc
cltd
push
clc
pop
cmp
leave
out
nop
hlt
inc
mov
pop
sbb
roll
fbld
popf
dec
leave
mov
arpl
sbb
mov
xchg
sub
sbb
jne
popa
dec
cmc
cmp
mov
cmp
pop
lahf
outsb
cmp
sti
imul
mov
sbb
inc
in
jbe
or
pop
dec
hlt
push
inc
lock
outsl
push
add
aaa
mov
mov
push
xor
sbb
cmp
stos
out
adc
rorb
not
push
jle
mov
pop
push
cli
sbb
out
inc
imul
pop
shll
inc
jge
movsl
stos
sub
mov
shlb
add
mov
imul
jmp
cld
data16
sub
adc
data16
dec
sbb
push
mov
aad
shrl
aam
xlat
and
lock
ss
movsb
scas
je
sbb
call
and
lahf
add
sahf
push
shlb
cmp
adc
pop
pop
and
sub
mov
les
xchg
imul
mov
movsl
fdivrs
dec
lret
adc
pop
pop
jle
pop
int
ret
pop
lret
sarb
aam
mov
push
test
stos
sarb
sarb
jg,pt
pop
scas
xor
movsl
ds
rcll
jns
ret
cld
loopne
ror
mov
sub
mov
push
testb
fiaddl
pop
lock
mov
in
mov
adc
xor
ds
int
lea
dec
xchg
inc
dec
push
test
cmp
lods
xchg
outsb
rorb
mov
jns
fwait
sub
je
inc
cmpsl
lret
mov
imul
mov
sarb
testb
sti
loope
mov
icebp
loop
dec
popa
fsubrl
test
std
imulb
mov
out
sbbl
fadd
xor
xchg
aas
add
and
inc
test
bound
adc
lret
sahf
lcall
inc
jl
pop
xchg
int
addr16
sub
js
and
cmpsb
lret
rorb
scas
inc
push
adc
mov
pop
imul
add
add
xor
leave
repnz
push
test
out
xor
cs
pop
dec
popf
and
inc
dec
addr16
xchg
jne
outsl
xchg
xchg
mov
mov
push
in
xor
jae
in
leave
mov
jb
mov
push
sub
leave
push
dec
push
ja
icebp
jb
mov
call
pushf
out
fldenv
cmp
sbb
leave
mov
and
cltd
int3
xchg
jbe
shrl
mov
scas
xor
pop
push
sbb
js
scas
in
sbb
inc
or
sar
insl
inc
pop
xchg
test
mov
bnd
dec
aas
ss
iret
jmp
mov
rcrl
inc
gs
inc
out
loop
arpl
pop
rolb
jno
stos
lock
mov
fsubr
call
push
adc
cmpsb
sbb
sub
lret
inc
mov
pop
sub
pop
add
jno
rcl
pop
cmpl
andl
and
ljmp
pop
mov
incl
sbb
push
jecxz
xchg
aad
lods
xor
ja
pop
and
scas
out
add
outsb
cmc
add
into
xor
mov
cmp
fildll
sub
int3
loope
clc
popa
lods
push
je
lds
mov
mov
push
jno
ja
dec
and
ja
sbb
xor
minps
cmp
fcom
inc
pop
hlt
push
popa
xlat
ja
shlb
mov
adc
sub
push
xchg
jmp
cmc
jmp
inc
jns
negb
mov
pop
or
sub
mov
aaa
and
sub
xorb
rclb
insb
or
mov
inc
inc
xor
mov
in
xor
jg
lods
inc
test
jle
dec
xchg
adc
push
hlt
sbb
jp
lcall
imul
jecxz
movq
inc
inc
jp
in
push
mov
fdivrl
repnz
bound
inc
aad
cwtl
mov
jmp
ds
adc
push
mov
cmpsb
sbb
aam
shrb
jp
mov
xchg
cmpb
icebp
insb
adc
cmp
adc
add
std
cltd
lds
sbb
pop
xor
pop
stos
sbb
lret
aas
cmpsb
stos
adc
dec
mov
jbe
lcall
jbe
mov
test
int
in
cmp
jae
pop
pop
jle
popf
ds
out
subl
xor
scas
scas
jle
mov
jge
cmp
adc
outsb
nop
ret
xchg
inc
les
insb
pop
adc
fisttpll
mov
jg
lcall
mov
mov
jbe
sub
jbe
push
adc
into
enter
sub
in
fidivl
cmc
add
sbb
cmp
push
test
pop
pop
or
mov
data16
cmp
into
cmc
xchg
lock
movsb
fsubr
mov
lea
xchg
incb
imul
aas
jmp
dec
and
shll
adc
outsl
xchg
out
pushf
dec
push
mov
aam
lahf
inc
scas
inc
icebp
add
jbe
shll
iret
mov
addr16
or
cmp
mov
jne
subb
xchg
dec
shll
es
jp
aam
andl
mov
add
jb
test
daa
enter
or
pminub
shr
cmc
movsl
stc
and
xchg
xorb
xor
jno
adc
sbb
arpl
ret
in
add
loopnew
mov
stos
bound
cmp
add
add
movsb
mov
gs
adc
sbb
inc
mov
popf
sbb
icebp
and
out
iret
stc
pop
mov
pop
mov
pop
dec
movsl
clc
test
ret
push
imul
jp
push
fisttpll
sbb
sub
leave
mov
cmp
cmp
add
test
push
add
sti
lret
repz
icebp
or
out
ljmp
scas
mov
pop
pop
cmp
in
rolb
daa
test
or
pop
inc
push
mov
cwtl
xor
mov
mov
addl
leave
jge
inc
mov
push
out
mov
ds
out
mov
pop
push
push
cwtl
ret
fbstp
in
sub
add
divb
stc
xor
xorb
scas
pop
mov
enter
addl
dec
pop
dec
hlt
or
inc
push
mov
fidivs
in
test
sbb
ja
sahf
iret
lock
or
aaa
outsb
lahf
mov
cmp
dec
in
cmp
test
push
mov
add
cmp
fdivs
jl
mov
fiadds
insl
inc
adc
mov
fs
pop
cmp
mov
push
mov
push
dec
sub
push
bound
lcall
sahf
mov
inc
inc
mov
mov
cmc
inc
push
and
xchg
call
mov
sbb
sti
or
and
jnp
and
orb
push
mov
fisubrl
test
xchg
das
int3
scas
stos
xchg
daa
and
movsl
sub
jle
xlat
jb
and
outsb
ja
mov
jno
dec
push
add
ljmp
jno
xor
mov
dec
divl
sarl
insl
xchg
pusha
js
mov
mov
fcoms
xor
push
cmpsl
push
test
jbe
test
cmp
shrb
and
int
cmp
jbe
fcoms
jle
pusha
pop
ret
arpl
push
call
shrb
push
mov
stos
mov
ficomps
push
jbe
int3
popa
in
pop
pop
imul
push
inc
cmp
adc
in
push
push
xchg
lods
cwtl
sbb
iret
sbb
mov
xchg
cmpb
sub
jmp
aas
mov
pop
pop
insl
mov
ret
and
dec
jecxz
in
test
push
into
mov
in
push
pop
push
inc
addr16
sbb
xlat
leave
jo
lea
push
lret
out
jns
rcr
stc
mov
xor
or
add
lret
js
aam
pop
scas
push
in
xor
mov
xchg
icebp
sub
ficompl
mov
cmpsb
cmp
push
cmpsl
cmp
lock
or
sbb
mov
xchg
dec
jmp
test
dec
stc
push
mov
inc
mov
out
or
jp
data16
jmp
std
mov
mov
cld
movsl
sti
outsb
cmp
add
mov
dec
mov
je
sbbl
faddl
xchg
mov
es
shl
scas
cmp
dec
add
lea
adc
cs
sbb
adc
lock
stc
imul
xor
stc
push
or
mov
or
add
popf
aaa
xchg
aad
dec
out
out
inc
cmp
out
lea
mov
scas
xchg
mov
into
pop
popa
scas
pop
pusha
and
push
mov
int
inc
sbb
xchg
cld
xchg
cmpsb
sub
fs
add
dec
insb
pop
test
imul
js
jmp
or
iret
and
pop
xchg
pop
pop
dec
mov
sbb
adc
sub
in
fsubrp
xor
dec
scas
push
cld
icebp
faddl
pop
xchg
mov
movsl
lock
pop
lret
and
push
mov
mov
fpatan
js
push
mov
lcall
daa
aam
faddp
cmpsl
imul
enter
mov
push
mov
pop
in
or
sbb
cmpsb
dec
stos
in
loop
mov
sahf
lcall
pop
cmp
es
test
mov
out
push
pop
imul
movsb
es
jbe
and
sub
rorb
jae
mov
xor
ljmp
test
ss
and
insl
nop
movsb
in
adc
sbb
pushf
ljmp
repz
ficoml
mov
aas
inc
inc
mov
push
nop
jle
lds
sahf
imul
push
cmpsb
pop
mov
jno
mov
dec
mov
jbe
mov
lret
repnz
mov
jge
mov
mov
subl
xor
xchg
mov
daa
and
pusha
adc
sub
fstpl
cmc
divl
inc
flds
aaa
ficoml
cmp
into
cmp
fistps
or
xchg
sarb
push
rol
jne
cmp
in
ret
movsb
jp
sbbl
idivl
jecxz
andl
sahf
fdivrs
data16
push
mov
fsub
repz
js
pop
jns
mov
mov
adc
push
repz
insl
push
jno
and
outsb
pop
jl
test
and
clc
xchg
push
js
and
jnp
fwait
cmc
loope
nop
mov
das
sbb
mov
inc
push
dec
push
imul
mov
daa
fadds
mov
ja
mov
jno
fwait
push
shrl
and
mov
jae
dec
mov
mov
or
pop
roll
xchg
in
cmp
test
sub
cmp
mov
xchg
adc
push
inc
mov
mov
xchg
and
and
movsb
sub
bound
inc
xchg
push
std
dec
add
inc
mov
stos
in
mov
bound
pcmpeqw
lahf
insl
inc
daa
jg
js
push
addr16
mov
testl
sub
mov
and
mov
int3
cmp
loope
inc
xor
and
pop
sub
dec
adc
push
dec
shl
push
cmp
push
and
negl
into
mov
adc
lret
mov
clc
call
cs
or
daa
movl
aad
cwtl
and
int3
lahf
inc
std
pop
in
cltd
femms
stos
lcall
repz
into
jg
xchg
adc
jnp
test
mov
nop
in
xor
in
cwtl
cmp
fisttpl
xor
adc
xchg
negl
fsubs
leave
mov
jbe
jnp
lods
lods
jge
sbb
lcall
dec
into
std
popf
aad
mov
dec
add
adc
cltd
lret
and
xor
dec
pop
pop
cmc
pop
adc
xor
lods
daa
mov
sbb
push
mov
xchg
push
dec
jecxz
repz
fiaddl
xor
cmc
sub
pop
loopne
clc
mov
scas
inc
call
mov
fidivrs
mov
jb
cmp
stc
movsl
pop
push
add
sahf
push
int3
fmul
push
or
add
popa
and
mov
cwtl
xchg
or
or
repnz
lds
nop
mov
stos
je
dec
dec
fistpl
add
pusha
jbe
cmp
loope
pop
push
adc
xlat
push
fsubrl
ret
cs
dec
outsl
aas
xchg
jbe
mov
lods
and
mov
mull
adc
jo
cld
sbb
into
xchg
lock
cmp
or
xchg
jg
sti
popf
addr16
ror
repnz
mov
mov
push
push
jnp
stc
xchg
xor
mov
sub
mov
or
push
xor
shll
in
movsb
cmp
or
or
incb
jg
outsb
stc
idivl
sub
dec
sbb
adc
add
in
leave
idivl
jb
mov
lahf
dec
dec
shll
into
mov
xor
jne
adc
mov
xor
or
pop
fcmovnu
push
gs
pop
arpl
pop
scas
out
mov
test
ret
idivl
mov
mov
xor
addb
pop
or
lods
shrb
jg
push
test
sub
sbb
pop
mov
out
cmp
clc
dec
xchg
sub
fistpl
push
pop
cmp
data16
sbb
cmp
ret
int
fildl
sbb
cltd
pop
outsl
jbe
or
shll
lret
xchg
ret
and
cmp
arpl
vhaddps
xor
xor
add
js
cmp
loopne
aaa
sahf
jo
jnp
jo
dec
jg
sub
mov
add
xor
and
inc
jnp
xor
hlt
mov
dec
mov
cmp
out
sti
xchg
jno
out
rcrb
movsl
and
insl
xchg
cli
mov
ffree
and
sub
xor
or
call
daa
cs
adc
dec
inc
popf
cmp
mov
adc
ret
cmpb
mov
push
outsl
cmp
dec
dec
mov
push
out
inc
aam
js
outsb
xchg
jge
repz
inc
lret
fidivrl
ds
scas
mov
push
mov
pop
aaa
cmp
imul
inc
imul
dec
out
sbb
cltd
jae
cmp
mov
and
in
test
test
andb
lcall
pop
xchg
or
incl
mov
xchg
test
leave
les
cwtl
push
cmp
clc
mov
dec
jns
ds
push
sub
cwtl
xchg
or
loopne
mov
imulb
xor
in
or
icebp
mov
cmp
jmp
pop
movsb
rcrb
ret
xchg
dec
fcmovu
test
movb
xchg
nop
cmp
movsl
es
dec
cmpb
mov
pop
aaa
les
aad
div
lahf
popa
mov
addr16
movsb
pop
cmp
lods
imul
test
push
xor
test
gs
adc
add
adc
push
fdivrl
inc
xor
mulb
xchg
insb
cld
imulb
mov
pushf
shrl
mov
xor
sbb
xchg
lods
clc
sub
dec
gs
jne
mov
scas
xchg
sbb
lcall
add
lret
inc
inc
aas
icebp
pop
dec
lds
hlt
and
push
sub
sets
sbb
hlt
loope
nop
mov
jno
mov
insl
push
cmp
mov
sub
mov
repnz
cmpl
fs
sub
pop
int3
lods
daa
jbe
adc
sub
pop
dec
sub
inc
inc
sub
clc
xor
xchg
sbb
push
outsb
jnp
mov
inc
jno
or
push
cmp
xor
imul
pushf
stos
cli
lea
pop
sub
fcompl
ljmp
jo
pop
xchg
nopl
ljmp
movsb
adc
jne
fimull
mov
daa
cli
notb
mov
jne
mov
fxch
scas
adc
icebp
xchg
int
je
adc
sub
or
insl
add
repz
xor
mov
or
mov
fucom
mov
test
push
lds
inc
lcall
in
mov
mov
mov
pop
mov
mov
mov
loop
mov
aaa
push
or
test
outsb
dec
mov
test
pop
pop
jmp
int3
loopne
xchg
mov
fucomp
mov
sti
jno
or
les
mov
pop
push
jbe
xchg
daa
loope
jl
cltd
or
movsb
jne
jg
jo
pop
jle
cli
xchg
sub
ss
insb
or
cmpsb
pop
es
sub
call
mov
sbb
and
add
popa
or
pop
sbb
sbb
inc
fwait
ret
adc
sub
and
test
jne
flds
mov
stc
sbb
movsl
cmp
jmp
in
negl
test
push
lods
mov
sub
inc
sub
fdivl
mov
and
popa
cmp
mov
loope
imul
sti
ffree
add
fisttps
fs
imul
call
clc
es
pop
in
xor
imul
jp
inc
cmp
pop
xor
pop
aaa
adc
or
or
ret
loopne
adc
cmp
dec
out
test
rcll
imul
cmp
fs
movsb
jecxz
adc
xchg
dec
std
pop
lahf
nop
mov
outsb
push
sbb
ficomps
subl
insl
jae
sbb
aad
or
inc
mov
or
xor
sbb
clc
sbb
loope
mov
sbb
test
and
or
hlt
pop
xor
aam
aam
or
int
jo
dec
and
aam
js
cmpsl
push
test
aaa
dec
jecxz
aas
push
mov
outsl
mov
xchg
cmp
jae
pop
pushf
or
pop
in
arpl
adc
push
adc
rcrb
pop
sar
pop
hlt
push
cmc
lea
fisubrl
and
clc
lret
adc
push
mov
or
jl
enter
inc
xchg
ret
pop
xor
ds
rcrb
jg
ja
mov
cmp
loopne
or
xor
cmp
ja
arpl
fnstcw
and
iret
das
jno
push
or
push
push
std
adc
lds
dec
add
and
xchg
cmp
or
jmp
test
xor
jl
xchg
jb
cs
fistpl
sarl
int3
popa
cmpl
adc
xchg
cltd
and
push
mov
add
jns
jmp
sbb
jle
adc
das
cld
sbb
js
nop
push
ret
icebp
add
ds
lahf
test
test
fs
je
push
add
cmpsl
ljmp
push
filds
and
int3
mov
or
and
pop
test
ds
imul
adc
shl
xchg
push
fistps
jecxz
test
mov
lds
ret
repz
xchg
xchg
cld
xor
xchg
cmpsl
push
sahf
cltd
pop
push
mov
or
inc
cmp
or
fldl
inc
jb
movb
mov
add
subl
and
pop
dec
hlt
cmc
shrl
repz
ja
mov
push
jne
adc
xchg
mov
scas
cli
iret
dec
fs
test
lock
in
mov
jge
aas
imul
pop
pop
pop
jecxz
in
xchg
or
mov
insl
jmp
cli
loope
scas
iret
scas
mov
jg
dec
dec
incl
mov
shlb
xor
loopne
cmpsb
cmp
jg
adc
jbe
cmpsl
mov
fscale
jecxz
test
xor
scas
mov
jg
mov
dec
jbe
cmp
jp
or
sbb
ljmp
mov
das
xor
insl
xor
loopne
test
out
add
roll
lret
rol
mov
mov
cmpsb
je
shll
cltd
pop
push
xchg
pop
dec
cmp
lock
ret
clc
stos
cmp
pop
pop
jnp
punpcklwd
push
push
int3
inc
pop
movsl
test
fidivl
cld
dec
cmp
mov
je
dec
aam
rcrl
mov
popa
cmp
sub
sbb
negb
pop
xor
lahf
push
mov
sarb
fst
sbb
repnz
inc
pop
and
cmp
aam
mov
adc
in
pop
xor
jle
faddl
popa
fcomi
mov
pop
daa
repnz
lahf
imul
fstps
sub
idivl
int
mov
shlb
pop
adc
ficompl
jne
jne
mov
or
xlat
dec
jae
fneni(8087
or
sbb
movsl
dec
fnstenv
jae
cs
pop
cmp
lock
add
jp
mov
pushf
adc
int
loopne
lea
lcall
push
dec
cwtl
aad
cmp
push
jle
push
clc
shl
push
out
lcall
test
and
jp
push
out
enter
std
loope
in
jnp
inc
fstps
mov
int
rcll
cmpl
cmp
icebp
jnp
les
icebp
xchg
jl
out
mov
cmp
pusha
and
iret
inc
rcrl
cwtl
push
xchg
xchg
push
inc
push
xor
rol
out
and
push
xor
push
sbb
sahf
dec
add
shlb
xor
add
mov
imul
lods
cmp
sbb
bound
push
and
mov
shr
leave
pushf
mov
push
jge
mov
out
inc
sub
arpl
addl
jmp
iret
or
dec
lahf
inc
sbb
pop
lret
int3
stos
shlb
mov
xor
push
addl
daa
mov
icebp
push
or
movl
jle
in
fidivl
data16
jl
cmpsb
ljmp
xchg
in
sbb
ds
das
xor
iret
dec
xchg
in
into
cmc
fwait
dec
add
sub
xchg
xor
loope
rcrl
mov
fmul
dec
push
sub
push
scas
xor
test
pop
fldt
inc
dec
sahf
sub
out
fcomip
jne
adc
pop
bound
lahf
add
mov
imul
xor
fwait
ds
mov
ret
jle
stc
bound
das
je
push
sbb
enter
cmc
rorb
xchg
mov
call
push
cltd
jnp
cltd
pop
mov
sub
fists
sbb
int
js
arpl
xor
and
dec
popf
lea
inc
fsubl
ffreep
and
ja
xlat
fadd
es
or
jle
xchg
pop
cmp
xchg
push
shl
mov
idivl
or
das
push
cmpsl
jo
jg
ds
std
sbb
nop
or
xor
xchg
pusha
cmc
into
xor
pop
icebp
mul
jp
adc
fadds
int3
pop
pcmpeqw
add
pop
jb
outsb
cmpl
test
aad
pushl
jo
fidivl
je
add
sbb
repz
fsubrl
cmp
xchg
in
adc
lods
imulb
or
dec
xorl
push
mov
or
outsb
inc
adc
xchg
push
cmp
xor
cmp
push
add
cld
and
inc
daa
push
sbb
jo
lods
cli
inc
cmp
xchg
shll
hlt
negl
repnz
and
scas
mov
leave
jnp
jo
jnp
or
scas
lret
xchg
mov
not
loopne
enter
in
ret
sbb
xchg
loope
xor
insb
lret
scas
adcl
sarb
mov
jmp
in
xchg
adc
insb
inc
xchg
and
sbb
xchg
loope
mov
adc
sub
inc
add
push
inc
cmpl
int3
cli
imul
push
mov
clc
das
outsl
or
inc
inc
ret
loopne
ljmp
lods
sbb
rcr
ljmp
imul
mov
mov
repnz
sub
and
in
ljmp
cmc
in
mov
js
lods
cmpsb
push
jle
mov
xchg
hlt
fildll
bnd
insb
jle
clc
push
fbld
sbb
loop
not
bound
and
pop
inc
in
rclb
loopne
mov
cwtl
outsl
jmp
push
jbe
dec
inc
ljmp
insl
stos
fcomi
data16
push
adc
cli
lahf
mov
shr
push
outsl
cmp
repnz
int3
xchg
mov
adc
xor
mov
sti
sbb
push
pop
int3
orb
mov
pop
mov
dec
jbe
popa
clc
cld
or
aaa
mov
in
shrl
sbb
lahf
push
mov
mov
jecxz
or
shlb
sub
scas
stos
popf
dec
stos
incb
sub
xchg
hlt
in
add
jmp
js
mov
xchg
mov
mov
sarb
lcall
fistpll
sbb
insl
imul
cmp
data16
enter
push
popf
in
mov
js
xchg
test
xor
sbb
or
xor
sub
cmp
out
out
sub
pop
inc
or
inc
dec
sbb
imul
iret
push
fwait
nop
mov
in
out
jbe
sub
add
pop
xor
xor
call
jp
jno
icebp
adc
test
int
sti
imul
adc
fisttpl
dec
mov
push
faddp
lea
pushf
sarb
lods
dec
cmp
jp
cltd
inc
xor
adc
jge
push
mov
cld
or
lds
inc
pop
xchg
jb
jmp
push
adc
mov
jle
jl
in
into
outsl
pop
cmpl
stos
cmp
and
push
int3
jecxz
out
sub
xor
mov
xor
xchg
sub
fwait
ja
lods
push
adc
inc
add
xor
mov
mov
fsubs
test
cltd
popa
mov
addl
jae
and
xchg
xor
add
hlt
jge
cmpsb
dec
ret
or
inc
push
or
or
aas
das
dec
pop
test
and
cmc
dec
pop
movsl
adc
jmp
mov
insb
dec
nop
dec
push
add
mov
add
sbb
rorb
and
out
dec
negl
mov
insl
push
xorb
cli
daa
repnz
xlat
fistpl
jmp
xchg
popa
orb
mov
mov
lods
jle
inc
jae
pop
and
mov
mov
fadds
mov
cli
jp
je
test
inc
lahf
push
mov
add
out
gs
mov
repz
test
cmpsb
and
cmpsl
ja
sar
jae
loop
call
mov
xor
pop
mov
ret
push
out
inc
test
in
sub
xor
pushl
mov
aas
dec
in
ds
outsl
and
push
pushf
aas
test
cld
mov
andnps
cmc
sub
pop
insb
lret
xor
imul
movsb
movsl
addl
ror
jae
ficoml
inc
xchg
mov
jnp
push
ja
mov
and
cmpsl
mov
in
cs
inc
out
lea
scas
inc
into
fucomi
fldt
lcall
mov
shr
jne
retw
pop
notb
sub
cmc
xlat
pushf
call
sub
xchg
mov
pusha
movsb
lock
popf
jmp
push
mov
sbb
pop
and
mov
pop
and
add
cmp
mov
popa
or
and
push
lods
sarb
pop
rorl
and
xor
mov
xlat
lret
pop
sti
scas
push
out
leave
and
jb
cmp
xchg
fcomi
dec
pop
inc
repz
mov
sbb
lahf
and
out
lds
xor
jmp
jmp
clc
and
jmp
dec
mull
sahf
xchg
repnz
sbb
adc
push
ret
lock
or
sbb
scas
push
out
sahf
xchg
aas
fwait
in
mov
fcmove
bound
repz
in
pop
jb
or
pop
xor
or
sbb
dec
sahf
test
mov
test
sbbl
fnstenv
push
jne
test
inc
dec
test
outsb
loop
inc
das
add
jne
fbld
cmpb
orl
iret
push
pop
loop
adc
push
jge
mov
and
push
inc
and
call
push
aad
mov
pop
mov
jge
and
dec
test
push
adc
lods
push
and
scas
mov
mov
push
nop
cmpsl
scas
sbb
addr16
test
cmpsl
scas
fwait
xchg
push
cmp
push
dec
aas
je
mov
xchg
in
cmp
out
das
sbb
imulb
mov
sub
cmp
fxch
int3
ja
add
std
push
in
into
mov
or
inc
out
mov
dec
push
imulb
pusha
sbb
ss
mov
jae
push
enter
xchg
ljmp
pop
test
lcall
fldenv
pop
je
jno
mov
push
push
adc
out
stos
xor
arpl
inc
sub
pop
shlb
test
outsl
icebp
adc
cli
cmp
adc
cmp
add
adc
xchg
int
jnp
shrb
cwtl
sbb
xchg
pop
dec
mov
mov
in
inc
cmp
xchg
stos
sbb
daa
and
out
cwtl
and
pop
pop
mov
rcr
xchg
or
jp
aas
sbb
adc
stc
lock
frstor
gs
sub
int
adcl
call
div
out
test
pop
adc
mov
xorb
and
fcmovnb
sarl
sahf
fsubs
fnstcw
mulb
xor
xchg
mov
xor
adc
repnz
dec
data16
lock
push
test
or
sub
ret
push
and
and
imul
jns
das
lods
add
popf
mov
stos
or
fs
mov
jle
xchg
scas
mov
push
in
jle
mov
push
test
pop
xchg
or
jmp
dec
xchg
xor
pop
leave
cli
lret
and
xor
add
out
sbb
mov
jns
lods
or
or
dec
xchg
adc
enter
sub
ss
cli
ljmp
mov
scas
mov
adc
sub
sbb
pop
outsl
jne
or
je
mov
rol
loop
popa
mov
mov
lahf
dec
scas
mov
andb
les
imul
push
loop
pop
lret
inc
pop
les
call
dec
jmp
ljmp
pop
shl
cmpsb
shr
nop
push
xchg
pop
pop
mov
popf
push
ja
insb
xchg
cmp
mov
mov
jg
mov
xor
clc
xor
sub
add
test
lock
sbb
pop
jo
push
fists
sbb
cmp
dec
and
push
dec
xorb
int3
icebp
jbe
jge
inc
mov
mov
cmp
lods
pmovmskb
jmp
and
repz
mov
out
adc
test
mov
daa
mov
adc
lock
fwait
inc
dec
cltd
push
and
pop
dec
cmp
insl
adc
mov
jb
pop
arpl
orb
in
mov
push
aad
dec
add
arpl
loope
or
inc
push
push
rorb
adc
je
addr16
cwtl
aas
adc
sub
add
aam
cmc
cmp
sub
clc
dec
inc
fbstp
adc
xchg
gs
pop
in
sub
push
mov
into
cmp
sub
sahf
pusha
pop
jne
adc
stos
jge
fisttpl
inc
pusha
addl
cmpsb
fstps
mov
sbb
pop
lcall
mov
jne
aaa
lods
jnp
cmp
sbb
xchg
rcrl
xchg
inc
call
subl
mov
sub
mov
bound
std
xchg
add
les
mov
jae
mov
movl
mov
std
inc
lret
out
clc
cwtl
mov
jno
testb
sbb
push
pusha
lret
sub
aam
jle
jns
inc
xor
ljmp
mov
nop
and
xchg
out
and
mull
xor
in
adc
push
dec
imul
std
pause
lock
dec
sbb
xchg
cmp
push
outsb
pop
jecxz
cmpsb
or
and
test
cld
push
xchg
in
cmp
pop
loopne
out
xchg
arpl
movsb
sub
fstl
sbb
push
jae
aam
clc
outsl
mov
inc
inc
fmull
or
in
jo
es
subl
cs
dec
scas
mov
hlt
loope
fsubrl
push
mov
dec
add
sar
mov
nop
xchg
push
cmp
out
cwtl
and
lods
add
imul
stc
mov
scas
aam
mov
sbb
loopne
int3
jg
sbb
dec
cmp
mov
repnz
ret
mov
add
cmc
fimull
sahf
mov
mov
mov
ljmp
xlat
fadds
ficoms
push
push
sbb
lock
adc
popf
mov
sub
mov
fimull
xchg
mov
pop
xor
dec
pop
push
dec
imul
adc
jmp
add
out
negb
push
rclb
shlb
stc
push
xchg
adc
imul
sbb
adc
fcoms
cmp
in
rorb
in
cmp
hlt
sbb
mulb
fistl
adc
xchg
ret
mov
popa
jo
pop
movaps
pop
lret
int
and
and
pop
daa
mov
fldt
aaa
es
and
dec
adc
pop
ret
cwtl
inc
push
popa
sub
stos
mov
inc
loop
cld
or
jb
arpl
nop
dec
test
add
cmpsb
and
add
sub
lcall
push
stc
cmpl
out
cs
jne
out
insb
adc
outsb
mov
inc
add
test
xlat
jg
ds
mov
sti
dec
add
mov
adc
popf
out
cmp
mov
lcall
nop
ss
adc
and
jns
pop
jecxz
out
adc
jb
test
clc
mov
test
pop
idiv
xor
mov
push
aam
mov
adc
mov
jne
and
mov
subl
mov
jo
dec
add
cmp
adc
add
data16
icebp
adc
fld
mov
mov
sub
into
add
jp
dec
pop
mov
dec
mov
sbb
test
outsl
xor
dec
pop
sahf
dec
mov
and
add
cmc
jno
cltd
movsl
je
sbb
inc
jnp,pn
idivl
ret
fdivl
sub
call
and
xlat
fmuls
mulb
xchg
fnstsw
in
sbb
dec
insl
cli
insl
xchg
pop
pop
xchg
lcall
test
mov
sti
xchg
daa
pop
xchg
out
sub
pop
xlat
push
or
loopne
jo
fiaddl
cmp
sahf
push
mov
inc
rep
daa
or
iret
mov
cmp
mov
cmpsl
mov
out
sub
pop
call
sub
jg
lahf
jns
inc
mov
and
push
jp
and
popf
fwait
inc
or
push
dec
jno
in
adc
jbe
inc
test
das
pop
leavew
sahf
ljmp
add
pusha
jle
hlt
cmpsb
add
cmp
cli
add
roll
mov
shr
inc
or
pop
xor
out
es
inc
inc
xchg
lock
sbb
daa
mov
pushf
adc
xchg
arpl
push
mov
xchg
int3
loope
stos
adc
pop
cwtl
or
jno
cld
sbbb
and
fdivp
ljmp
aad
data16
pop
jge
and
orl
pop
push
jb
jg
jne
sbb
sbb
xchg
cmp
les
cmc
adc
rclb
popa
sub
cmpsb
shll
int3
aad
imul
mov
cmp
push
rcll
cmp
inc
sti
push
jbe
enter
icebp
inc
fcom
nop
cwtl
pushf
cltd
mov
inc
jg
adc
lahf
push
into
sub
subb
inc
jle
jp
lds
jp
pop
cs
iret
xor
inc
hlt
push
inc
orb
mov
call
nop
popa
mov
xor
div
pusha
and
inc
xor
je
imull
mov
stos
dec
sbb
sub
sbb
mov
shrl
pop
jle
shlb
dec
adc
insb
sbb
leave
pop
mov
jecxz
loop
and
add
mov
in
out
push
scas
aas
repz
mov
lcall
lds
fsubr
pop
movsb
addr16
int3
repz
cmpsb
adc
sub
inc
pop
in
cli
mov
rcr
js
cmp
repz
jns
int
clc
push
inc
sub
xor
out
aaa
fcomps
xchg
inc
xor
adc
imul
mov
push
f2xm1
rcr
stc
pop
fcmovnbe
xchg
inc
and
mov
mov
cli
pop
daa
cmp
adc
movsb
jp
cmp
jge
hlt
cmpb
jp
sub
stos
pop
cmp
lods
sbb
sbb
xchg
outsl
int
jno
ret
inc
push
or
lcall
inc
jge
pop
lret
cmc
bound
pop
xchg
jg
mov
adc
out
xchg
mov
mov
mov
cltd
inc
repnz
fimuls
scas
sub
stos
loopne
mov
cmp
add
cld
xor
sub
xor
shll
fwait
mov
xor
sahf
cmc
adc
lock
insb
loope
sbb
cmp
enter
scas
lcall
jge
out
cmp
add
mov
add
xchg
push
negl
addr16
add
add
push
pop
in
xchg
cli
and
repnz
sbb
jo
arpl
mov
loopne
push
in
sub
in
int
xchg
add
into
pop
mov
xchg
stos
cmpl
or
xchg
loop
out
cmpsl
cmp
xchg
jb
test
pop
sub
cld
push
inc
bound
mov
movl
inc
cmpsl
or
rcr
mov
cmpsl
dec
pop
icebp
pop
in
jo
or
aaa
and
xchg
pop
pop
repz
call
lret
push
or
test
ficoml
loop
sub
cli
out
lcall
sbb
and
mov
outsb
rcrb
addb
xchg
xorl
jne
mov
or
lahf
jno
push
cmp
xor
icebp
int3
pop
jmp
xchg
pop
or
aaa
inc
inc
data16
sub
loope
cmpsl
addb
and
pop
sbbb
dec
mov
add
xor
pop
jmp
sub
jecxz
add
dec
adcl
in
push
add
push
leave
negl
add
fcoml
cmc
mov
push
xlat
inc
jns
jecxz
cmpsb
xchg
add
iret
bound
and
adc
lret
icebp
in
movsl
dec
das
inc
je
js
push
cmc
and
or
outsl
clc
lds
insl
adc
movsb
jno
icebp
fdivl
cmpsb
and
add
push
and
repnz
push
jge
push
dec
and
lods
add
adc
gs
cld
jecxz
adc
push
sti
pop
out
pop
lret
loope
add
lods
cmpl
clc
mov
cmp
pusha
lcall
imul
fwait
js
inc
mov
aad
mov
mov
js
fwait
xor
xchg
mov
mov
lea
and
in
dec
aaa
push
out
and
enter
xchg
jmp
test
test
pop
cli
dec
les
int
dec
and
push
stos
aaa
cmp
add
orl
and
push
and
cmpsl
or
cld
dec
fcomi
mov
or
int3
clc
insl
jecxz
leave
idivl
outsl
push
lret
dec
push
outsb
pusha
aas
add
jmp
pop
ljmp
jg
push
popf
je
fwait
xchg
clc
inc
orb
arpl
add
je
jl
mov
into
xchg
pop
les
jns
aaa
cmp
mov
push
pop
sub
xchg
jle
dec
mov
mov
pop
add
mov
scas
xchg
push
jg
or
pushf
fdivrl
das
shlb
sub
insl
and
cmp
dec
mov
mov
push
adc
cmp
lcall
mov
xchg
pop
mov
mov
js
out
xor
and
ret
xor
out
mov
fs
sbb
inc
mov
mov
test
push
cmpsl
test
dec
cltd
xchg
xor
adc
dec
sub
cmpsl
mov
es
outsl
push
sbb
fsubrp
jae
ds
jle
iret
out
dec
repz
lret
je
icebp
push
gs
sub
jge
jnp
bswap
jno
ljmp
push
push
adc
cmp
lahf
out
dec
sbb
jge
fnstenv
and
jge
pusha
sbb
mov
nop
or
test
repnz
inc
adc
ficomps
mov
das
push
inc
out
sub
xor
in
packuswb
cmp
nop
jg
sbb
mov
push
stos
adc
insl
in
mov
test
and
dec
xchg
lahf
inc
in
sbb
cmc
mov
mov
adc
cmp
adc
pop
adc
in
enter
ja
adc
add
mov
cmp
outsb
dec
test
lods
insb
adc
adc
fildll
jb
or
add
adc
cmc
mov
cmpsl
dec
xchg
outsb
dec
out
int
in
lahf
fdivrs
hlt
fnstsw
or
fadds
push
les
test
outsl
add
inc
imul
add
jns
cld
imul
notl
or
in
mov
loop
sub
push
sub
mov
xor
imulb
xchg
stos
stos
sub
cmp
sub
lea
dec
sub
dec
repz
sub
loope
insb
clc
ret
jbe
outsl
idivl
mov
sbb
rcrl
call
dec
xchg
or
pop
cmp
jp
aaa
mov
pop
jnp
jne
mov
sarb
xchg
imul
fwait
jmp
loop
ret
mov
mov
jle
call
dec
aas
in
or
adc
sub
inc
movsl
shlb
out
scas
fdivp
push
mov
mov
fwait
inc
addr16
mov
jbe
fs
xor
xchg
loop
push
lcall
dec
gs
lods
inc
movl
xchg
movsl
xor
jmp
daa
out
inc
and
fdivr
dec
enter
mov
ss
icebp
push
shlb
pop
into
push
xchg
ret
xor
mov
mov
hlt
mov
pop
jno
sbb
outsb
dec
shll
das
jmp
pop
xchg
outsl
and
add
mov
pop
daa
movsl
adc
push
test
inc
inc
mov
jecxz
sub
inc
and
dec
pop
xorb
imull
or
pop
jae
int
enter
xor
fidivs
fsts
imul
xchg
mov
bound
ret
icebp
cmc
pop
sub
push
pop
push
mov
mov
pop
push
pop
mov
int
dec
outsl
xorb
adc
shlb
lea
sub
inc
ja
inc
lds
jg
sub
cmp
cmc
xchg
jns
shrb
xor
xchg
loop
testl
out
inc
or
dec
xchg
test
mov
lcall
or
xorb
mov
dec
adc
inc
inc
popa
lock
call
add
int3
cs
adc
jne
scas
mov
loopne
aaa
jne
iret
fistps
sbb
xor
add
xchg
sub
push
xor
dec
es
sub
movsl
push
add
idivb
jecxz
jp
lods
mov
lea
adcl
aad
push
ret
xor
cmp
sahf
inc
mov
lcall
inc
pop
mov
adc
sub
iret
dec
rcrb
mov
pop
sahf
pusha
mov
xchg
mov
stc
sbb
inc
inc
mov
fildll
out
das
lahf
pushf
dec
cld
lods
sbb
mov
movsl
stos
mov
push
inc
add
mov
mov
jnp
and
push
cmp
or
int3
fwait
shlb
loopne
jno
addr16
adc
or
rorl
loope
push
js
dec
push
dec
add
outsl
scas
mov
call
adc
cmp
fdivrl
sub
ja
push
sub
xor
dec
mov
sbb
std
loop
pop
fcomps
insb
mov
fsubs
ss
adc
xor
mov
adc
call
pop
jp
clc
cmpsb
pop
adc
stc
pop
pop
int3
sub
xor
push
enter
mov
sbb
push
mov
lock
cmp
sub
add
aad
and
sti
test
dec
fidivrl
xchg
inc
cmp
loopne
lcall
mov
cmp
mov
shl
call
pop
dec
incl
inc
ja
test
call
in
pop
add
scas
xchg
jno
imul
sub
xchg
test
xor
out
pop
pop
outsb
dec
dec
xchg
jmp
pop
push
push
test
popa
leave
mov
stc
js
test
push
adc
sbb
adc
insl
xchg
shufps
push
sub
arpl
les
cmp
lret
add
cmp
stos
pop
pop
cwtl
cmpsb
clc
xchg
int3
cli
fcomip
xor
mov
insb
dec
pop
jg
loopne
mov
push
pop
and
fidivrs
pop
js
out
adc
iret
cmp
clc
nop
cmpsl
push
inc
push
pop
aad
push
xchg
ss
inc
mov
pop
add
jo
xorb
push
addb
adcl
adc
sbb
cmp
cld
xor
aaa
arpl
aad
mov
cwtl
lods
mov
test
ret
push
xchg
rorb
dec
outsb
test
mov
decl
aam
adcl
ret
and
mov
aad
xchg
iret
mov
or
sub
jge
lea
cmpsb
adc
xor
icebp
xchg
inc
jmp
cmp
outsb
mul
push
push
lds
jb
mov
mov
ja
push
dec
outsb
cmp
cmp
fsubrs
cmpsl
push
bound
movsl
stc
ret
repnz
subl
sbb
adc
int3
mov
aam
cld
jecxz
dec
push
call
sub
rorb
mov
fists
fmul
fldl
and
lret
pop
std
mov
jbe
or
sbbb
fnstenv
out
mov
gs
rcll
adc
adc
sub
pusha
int3
xor
lea
dec
push
inc
lods
out
dec
idivl
xchg
ret
add
pop
inc
dec
js
andl
jp
mov
xor
mov
jmp
mov
sub
roll
inc
or
sbb
icebp
daa
inc
dec
mov
mov
data16
fisttpl
mov
sbb
popf
outsl
lret
xchg
push
jnp
dec
jg
push
repnz
push
inc
pushf
test
sub
sahf
cltd
cmpsb
es
mov
test
test
ds
mov
or
mov
and
mov
cli
and
xor
sti
outsl
pushf
insl
adc
mov
push
inc
pop
dec
mov
mov
push
icebp
pop
insl
and
ds
xor
sbb
aas
xchg
repz
shll
add
dec
pusha
ret
in
sbb
mov
push
mov
pop
cmpsb
fildll
jns
adc
call
mov
dec
sti
dec
cmpsb
ret
cmp
testl
and
pop
into
imul
push
pushf
mov
pop
imul
mov
push
add
or
movsl
ja
imulb
mov
xor
das
add
jne
iret
test
adc
xlat
addr16
jo
inc
iret
cmc
std
cmpsl
cmp
cmp
xor
out
pop
inc
jmp
movsb
push
mov
lahf
mov
mov
aas
out
test
add
xor
loope
mov
int3
cmc
mov
std
dec
fwait
scas
dec
lods
xchg
ss
test
add
sbb
add
hlt
jnp
lods
mov
adcb
and
mov
push
add
les
stos
push
jo
std
mov
pop
cmp
scas
add
push
sti
bound
jecxz
mov
sbb
push
rcrl
dec
imul
xor
inc
jg
shrl
cltd
sbb
sti
rcll
mov
mov
imul
out
imul
xchg
xchg
mov
movsl
test
hlt
loop
outsl
enter
mov
jg
xchg
loope
icebp
nop
testl
pop
inc
in
pushf
mov
lock
cmp
out
push
lahf
popf
and
js
cmp
rcrb
cmpsl
or
cltd
shrb
add
jbe
mov
mov
jg
adc
sahf
mov
jecxz
dec
stc
add
xor
into
bound
pop
rol
in
adc
negl
loop
mov
push
dec
dec
cmc
jno
enter
ficomps
cld
sahf
sub
call
fwait
loop
or
and
popa
inc
pop
cmp
xchg
lods
lea
xor
cmp
pop
ret
stc
push
cltd
insb
roll
mov
outsb
or
subl
sti
sbb
fwait
adc
jo
xor
and
scas
test
std
ja
addr16
movsl
cmp
pop
scas
inc
cmp
lret
out
fistps
xchg
int3
nop
aaa
je
jbe
in
and
cmc
popf
loop
pushf
push
outsb
daa
shll
mov
and
std
aaa
into
adc
sahf
cmp
aad
push
add
xchg
addr16
xchg
stos
int
test
push
dec
push
out
inc
mov
imul
add
aam
mov
repnz
jg
dec
adc
popf
stos
jae
hlt
les
inc
incb
jl
mov
xor
dec
xor
add
test
push
push
push
mov
loop
inc
xorl
cmpsb
loopne
das
dec
pop
dec
fstpl
es
lea
dec
les
adc
js
and
ficomps
pop
cli
rcl
arpl
inc
scas
pop
pop
push
and
ret
scas
movb
jge
xchg
ss
add
cmpl
jnp
pop
push
cmp
jl
cmp
xchg
ret
in
mov
dec
nop
dec
aam
pop
aas
shr
or
push
mov
repnz
imul
mov
sbb
testb
cmpsb
cltd
jns
inc
or
repnz
stos
sar
jns
movsl
adc
and
mov
xchg
in
jns
fs
cmp
outsl
pop
cltd
ds
mov
mov
inc
pop
mov
and
pushf
icebp
xor
in
jle
xor
fxch
mov
cmp
scas
sbb
into
loopne
pop
leave
lods
das
lret
mov
push
jb
xorl
xchg
sets
or
pushf
insb
pop
pushf
ret
jne
test
sbb
lret
aad
mov
inc
int
adc
jno
fchs
fdivl
adc
inc
jbe
popf
insl
jo
dec
out
mov
int
testb
jg
rol
fcomps
testl
pop
dec
and
ret
popa
inc
shl
add
lods
xor
add
pop
xor
pop
sbb
loope
mov
pop
pop
inc
es
jbe
nop
popw
xchg
subl
jmp
fistl
aad
cmp
test
mov
sti
pop
loope
xlat
mov
push
lcall
sti
cmc
mov
shll
test
mov
dec
inc
cmp
cwtl
push
mov
nop
push
insl
out
je
mov
xchg
fldcw
insl
movsl
pop
dec
mov
jmp
jnp
xorb
icebp
sbb
xchg
adc
lods
jae
hlt
cmpsb
ret
movsb
cmpsl
add
mov
test
or
xlat
cmp
or
pushf
xor
in
pop
int
ficoms
dec
ret
ja
push
lds
add
scas
dec
pushf
out
inc
hlt
push
cli
je
xorl
nop
fmuls
fldl
das
push
xchg
mov
std
popf
pop
or
mov
pop
jne
mov
inc
cmp
pop
inc
dec
nop
outsl
lods
rolb
dec
imul
loopw
mov
loopne
add
mov
test
add
sbb
fcmovnb
xor
add
dec
jge
xor
out
mov
ss
mov
sti
xchg
enter
xchg
clc
cmpsb
pushf
push
jp
fwait
lahf
scas
fsubr
cmc
iret
inc
cmpsb
scas
pop
xchg
mov
outsl
clc
xor
in
imul
or
sahf
lea
lahf
lock
sub
mov
ret
les
adc
rorb
movups
pop
pushf
fwait
and
jmp
ret
icebp
notb
sub
enter
add
pushf
inc
cmp
pop
add
cmpps
js
ret
cmp
add
loop
rol
ss
adc
sahf
inc
cmp
lds
ret
test
cmc
mov
lds
fwait
daa
jo
and
and
test
cmp
cmp
sub
jle
or
fsubp
xor
or
sub
int
fldenv
out
sahf
lea
and
xchg
xchg
ror
aam
mov
mov
addb
mov
pop
cs
int3
or
xchg
inc
sbb
leave
mov
xchg
lods
mov
and
dec
pusha
cmc
insb
stc
es
inc
mov
mov
sti
fdivrs
das
xor
test
push
inc
xor
dec
je
xor
imul
outsb
inc
ret
scas
pop
jo
or
xchg
xor
daa
imul
mov
stc
pop
test
push
lock
cmp
mov
push
stos
fs
arpl
dec
push
mov
pop
mov
aad
sbb
shrl
aaa
jg
and
xor
sbb
loope
pop
in
jecxz
ljmp
shl
inc
cmp
jmp
xor
mov
dec
lea
das
js
cltd
sbb
push
lds
cmp
lods
jnp
jle
push
fnstcw
adc
mov
mov
inc
sbb
fisttpl
mov
loope
xchg
gs
lods
jne
cmp
push
out
cmp
ret
mov
imul
aaa
fs
insl
cmp
mov
or
mov
pop
add
fnstsw
add
sub
adc
lods
ja
inc
sub
das
cmc
icebp
daa
dec
xor
jne
xor
pop
mov
ficoml
sbb
pop
lret
cmpsl
xchg
push
xor
lahf
insl
or
push
push
add
insl
cmpsb
sbb
movsl
push
push
out
xor
sbb
mov
es
xlat
dec
mov
inc
cmpsl
fidivrs
outsb
add
xchg
push
gs
sub
xor
mov
movsl
inc
filds
out
leave
sbb
add
mov
push
stc
mov
movsb
inc
sbb
gs
jnp
pop
mulb
and
loop
out
jg
mov
add
or
inc
test
xlat
imul
sub
lcall
pop
jno
clc
fwait
jbe
mov
pusha
add
pop
mov
fwait
out
int
adc
popa
pusha
xchg
mov
aad
lahf
out
movsl
dec
cmpb
fisttps
cmpsb
out
sub
jmp
les
ret
les
mov
cmpsl
push
xor
loopne
sbb
xor
es
dec
jne
xchg
clc
fisubrl
cmp
mov
test
fdivl
add
pushf
sub
cmp
not
stc
mov
pusha
xor
mov
outsl
lret
outsb
adc
push
test
xor
xor
cmp
xchg
inc
add
pop
cli
xlat
les
mov
in
or
outsl
in
xlat
out
sbb
push
add
xchg
sbb
add
out
roll
lea
adc
lea
and
ss
jecxz
push
out
scas
mov
sahf
adcb
pop
push
jge
sbb
lahf
jp
imul
outsl
hlt
cltd
rcr
mov
es
lods
call
inc
add
jmp
mov
cli
mov
mov
xchg
js
or
pop
test
mov
iret
push
jnp
push
jl
aad
or
sbb
dec
popa
les
pop
pop
and
fcoms
sub
nop
push
pop
stos
pushf
stos
into
insl
push
xor
cmp
sub
push
lods
inc
jns
jnp
cmp
sub
pushf
aam
insb
xor
lods
mov
out
out
out
fldt
adc
mul
cld
enter
jns
mov
test
adc
test
fsubl
xlat
rol
pop
out
std
sar
push
dec
push
test
xor
add
mov
ss
test
sub
xor
loop
push
xor
loope
sbb
je
ret
xor
jbe
fisttpl
in
cld
lcall
mov
cli
mov
popf
loop
mov
mov
mov
add
mov
sbb
sub
adc
jl
sub
and
push
stos
cmp
adc
int3
aas
ja
mov
sbb
inc
mov
scas
out
jl
sub
and
and
into
adc
leave
aas
add
fwait
leave
dec
inc
aas
and
and
add
in
mov
jge
call
and
lret
mov
pop
jl
fbld
imul
push
and
mov
jnp
cmc
mov
in
xchg
mov
cmpsl
cmp
push
cli
inc
push
lods
paddusb
dec
outsb
mov
push
mov
push
int3
data16
jnp
loop
cmp
jne
pop
push
jbe
popf
shl
les
mov
aam
stc
mov
jae
mov
ret
pop
and
xbegin
or
pop
jo
in
sub
xor
push
test
mov
clc
addr16
aam
xchg
jecxz
and
jae
aam
mov
in
cmp
push
movsb
pop
push
loop
mov
add
lret
mov
stc
mov
and
xlat
scas
dec
fdivl
ficompl
jns
subb
push
jo
mov
ja
pop
push
inc
mov
ljmp
mov
mov
into
jae
add
call
or
cmp
push
pop
orl
imul
xor
push
cmp
aaa
fcmovne
fwait
mov
mov
icebp
sahf
xchg
faddl
cmp
pop
adc
inc
pop
sbb
sarl
insl
jmp
nop
dec
mov
xor
or
push
mov
inc
lahf
ja
pop
aam
jae
dec
adc
xchg
dec
push
jo
adc
mov
jl
adc
jns
mov
ljmp
mov
adc
mov
sub
inc
dec
stc
popl
sub
push
and
mov
inc
test
inc
test
cmp
push
fwait
cmpsl
in
pop
std
lods
sbbb
hlt
push
aaa
ss
cmp
push
flds
cltd
sub
xchg
push
imul
aas
cmp
mov
sti
loopne
lcall
push
xchg
ljmp
pop
push
fucomp
sbb
movsl
insb
pop
mov
mov
imul
pop
xchg
cltd
push
inc
add
mov
in
jp
jmp
and
adc
jns
fidivrs
or
out
xchg
shrb
cmp
mov
inc
bound
mov
in
dec
loope
xor
xor
out
in
scas
orb
les
dec
or
loop
mov
ds
adc
dec
push
repz
inc
xchg
push
xor
adc
mov
adc
cld
or
insb
or
lret
aas
dec
testb
loop
fstpl
cmc
cli
add
pushf
insl
stos
adc
shlb
sbb
outsb
inc
and
mov
xchg
mov
cltd
pop
xor
adc
test
jae
cmp
xor
add
out
je
and
in
push
out
jp
mov
jl
push
out
pop
jne
test
js
or
lods
push
ljmp
push
mov
adc
daa
movsb
cmp
adc
loopne
mul
lea
jbe
push
sub
jecxz
movsb
xor
out
and
nop
cmc
xchg
xlat
xchg
in
frndint
pop
hlt
stc
insb
fstpl
sub
lahf
xchg
cmc
add
cmpb
lcall
or
daa
and
mov
push
hlt
xchg
jge
int3
pop
add
aam
add
das
mov
add
test
jno
push
cmp
pop
test
push
cmp
les
inc
inc
or
and
mov
stos
cmpb
adc
nop
push
int3
and
dec
andb
sub
repnz
mov
mov
fists
mov
adc
adc
adc
int3
fmull
adc
push
ficomps
aad
xchg
push
jbe
fistpll
push
cmp
cli
dec
cmc
jno
mov
das
ret
out
ror
xlat
ffreep
test
roll
test
xor
bound
fildl
jp
clc
pop
jmp
in
pop
ffree
in
dec
loop
jne
std
mov
outsl
mov
ror
repz
sub
add
inc
js
xchg
mov
cmpsb
repnz
rcrb
cmp
pop
out
inc
ret
cmp
dec
lods
das
leave
mov
daa
fsubs
pop
aas
cs
pop
loop
sub
out
cmp
mov
loope
sub
pmulhuw
pop
fisubl
andb
push
insb
push
stos
test
inc
mov
mov
into
add
aam
call
mov
fistpll
jp
shlb
jecxz
out
sbb
mov
mov
xor
outsb
insb
cltd
in
jecxz
in
or
dec
ficompl
cli
push
xchg
xor
pop
xchg
test
jns
repnz
mov
add
pop
jae
lret
adcl
loope
test
jp
mov
mov
sahf
ret
ret
cmp
test
imul
xchg
jl
sbb
mov
xchg
push
ja
xchg
das
rcrb
cwtl
rcll
cmpsb
push
cmpl
mov
rolb
xor
mov
pop
rcrb
lahf
or
std
pop
scas
push
mov
inc
jbe
jbe
sbb
push
repnz
xchg
imul
out
int
out
xchg
ja
push
stc
loope
cmpsb
dec
lods
inc
add
les
push
jl
lods
nop
test
cmpsl
cmp
jb
xlat
in
adc
ret
or
lahf
mov
std
jne
movsb
lock
stos
pop
mov
push
dec
das
roll
jne
fmulp
and
xor
insl
jge
add
and
lret
cli
jb
mov
sbb
and
aam
hlt
addb
fldt
inc
ljmp
sub
push
in
and
ljmp
pop
movsb
insl
loope
insb
mov
fimull
addl
jae
repnz
ficompl
pop
insb
xor
and
mov
xchg
lods
dec
push
push
mov
out
test
rclb
ss
stos
nop
das
mov
ja
xor
loopne
lock
aam
xor
sub
or
pushf
lcall
or
ljmp
jmp
test
loope
fldenv
xchg
cmp
mov
out
xchg
nop
or
dec
pop
push
jno
repz
xor
add
dec
cmpsl
cmp
push
aaa
std
sbb
sbb
insb
int3
fsubrl
test
sbb
jnp
mov
test
lahf
out
aaa
fdivl
out
mov
les
outsl
adcb
insl
add
lds
push
inc
daa
xor
push
repnz
in
addr16
inc
mov
sub
mov
inc
insl
and
mov
and
pop
sar
or
or
or
pop
shlb
sbbb
sub
mov
push
popf
mov
or
pop
insb
imul
cmpsl
jbe
cmp
adc
negb
cmc
cmp
test
pop
aas
push
les
xor
jo
xor
popa
into
jb
and
roll
lods
push
negb
insl
lret
data16
adc
sti
mov
cmpsl
pushf
outsl
fdivrl
jp
dec
out
lea
cmpsl
push
push
mov
popa
mov
hlt
imul
xor
add
xor
mov
in
aaa
pushf
aad
gs
out
movsl
cltd
arpl
lcall
out
xchg
lahf
cmp
stos
out
arpl
pop
add
mov
push
sbb
mov
ljmp
fbld
xor
out
fwait
repnz
mov
and
add
sub
or
sub
aad
inc
je
adc
inc
ds
lret
mov
dec
faddp
scas
xor
push
out
jecxz
dec
fs
or
mov
pop
dec
ja
and
xchg
mov
cld
xadd
push
dec
jecxz
test
or
sbb
dec
cmp
int
cmp
out
cmp
popl
pop
and
sahf
call
mov
leave
sub
loopne
cli
pusha
adc
out
arpl
dec
mov
pop
movsl
mov
leave
mov
lock
mov
arpl
push
lds
adc
xchg
pop
push
push
fs
pushf
and
xchg
pop
sti
cmpsl
sub
or
fcomps
jno
lahf
cmp
push
mov
subb
cs
sbb
pop
xor
bound
lods
fnstsw
push
cmp
dec
repnz
inc
push
cmp
push
lock
test
stc
push
sub
sub
movsb
xor
cmp
fwait
test
mov
push
dec
daa
fistps
or
mov
push
lret
aas
push
shrl
jp
lods
pop
ret
pusha
dec
stc
push
mov
lods
dec
adc
lahf
dec
jle
and
jmp
mov
lds
imull
cmp
scas
add
cld
pop
mov
adc
push
lods
lods
out
cwtl
sti
cltd
mov
push
jne
jbe
jne
adc
sub
out
jb
push
jbe
insl
inc
arpl
xor
mov
pop
mov
cld
mov
jp
pusha
sbb
xchg
mov
stos
test
in
dec
mov
inc
sahf
rclb
add
mov
cmp
mov
fs
cmpsl
inc
inc
outsl
into
sub
hlt
aaa
jae
es
and
cltd
sub
ret
mov
shll
xchg
inc
inc
push
testl
mov
loope
imul
pop
jno
lds
rorb
in
mov
jge
add
or
dec
adc
cwtl
ljmp
adc
cltd
lods
mov
in
shl
cmp
ss
xchg
sbb
dec
mov
in
adc
js
fwait
xchg
push
cltd
mov
in
mov
push
mov
sahf
push
rol
lretw
lret
cwtl
shlb
inc
js
jnp
mov
adc
addr16
mov
mov
call
and
icebp
push
faddl
ja
andb
mov
push
xchg
fiadds
xchg
sbb
sub
std
dec
popa
mov
repz
xchg
lods
jmp
xor
lods
mov
gs
or
js
push
xor
cmpb
lahf
dec
xchg
scas
inc
lock
or
lcall
jae
fwait
and
movsl
dec
insl
pop
in
xor
loop
call
fsubl
mov
mov
push
subb
js
xchg
loop
dec
pop
test
sub
imul
inc
sbb
jnp
lock
adc
sbb
lcall
in
imul
cli
jo
idiv
mov
or
loopne
cld
daa
clc
push
mov
popf
adc
pop
psadbw
mov
call
repnz
xchg
jp
add
adc
lret
pop
mov
cld
sub
push
sub
cmp
dec
mov
add
add
test
push
push
push
fidivrs
aaa
das
int3
ret
add
pop
addr16
jmp
inc
mov
testl
aam
jl
or
jno
dec
add
push
test
repnz
jge
mov
xlat
or
inc
sbbl
sarl
je
rcrl
jnp
scas
push
int3
xchg
popf
addr16
cmp
mov
in
add
pmulhw
sub
cld
dec
ret
lds
xor
das
data16
push
adc
and
add
jg
mov
js
mov
mov
jbe
cld
mov
push
loopne
sbb
sahf
adc
cmpsb
pop
movsb
adc
imul
xorl
iret
mov
stos
add
mov
dec
mov
ret
fcos
test
xchg
std
lods
cli
add
push
loope
test
sahf
dec
cmp
xchg
sbb
call
mov
out
jo
push
xor
lret
sar
xchg
xchg
sbb
loop
es
push
outsl
pop
mov
aad
test
mov
fildll
std
ljmp
mov
sub
pop
inc
icebp
testb
aas
ljmp
and
call
adc
add
xchg
pop
jnp
pop
fiadds
inc
inc
inc
cltd
mov
cmp
and
jle
out
lods
nop
jl
popa
loope
push
adc
adc
push
add
xchg
xchg
shll
lret
cltd
mov
mov
fsts
adc
sub
lds
and
imul
dec
ret
xor
adc
stos
push
cld
add
inc
mov
movsl
xchg
xchg
jmp
add
push
mov
xor
iret
js
mov
sub
or
inc
adc
adc
sbb
jle
in
sbb
jo
dec
rclb
xchg
iret
loope
fwait
pop
in
test
incb
icebp
cmp
push
lahf
cwtl
insb
jne
jb
aad
addr16
mov
fwait
pusha
pop
cmp
movsl
lods
xchg
nop
and
mov
sbb
xlat
notb
mov
repz
pop
mov
mov
fwait
cmp
and
nop
dec
hlt
cmp
inc
nop
xchg
add
jmp
push
outsb
in
test
and
daa
inc
in
cmp
or
fcmovnb
scas
ficoms
inc
dec
adc
push
mov
sahf
mov
push
xchg
mov
and
stc
shll
movsb
rcrl
fcoml
push
dec
sub
push
shrb
pop
xlat
mov
mov
stos
jecxz
hlt
sub
pop
stos
or
mov
cwtl
jae
inc
pop
mov
jge
cmpsb
mov
shlb
jb
mov
mov
add
inc
sub
dec
out
lret
call
mov
inc
and
pusha
in
push
sbb
sar
mov
notb
xchg
adc
ljmp
mov
cmp
fnstenv
test
push
pop
pop
cltd
push
lahf
push
cmpsl
aam
sbb
or
aas
out
cmpsl
shlb
xor
mov
idivl
icebp
mov
lods
xchg
inc
and
mov
dec
or
jle
dec
outsl
je
mov
xor
dec
inc
in
ljmp
xchg
jmp
jp
mov
adc
sahf
add
dec
lds
cmpsl
repz
dec
jo
fimull
daa
mov
jecxz
sbb
insl
sbb
push
in
mov
mov
pop
pop
popa
imul
jnp
int
cmp
cmp
mov
test
fcomps
dec
add
mov
sub
out
adc
push
stos
dec
sahf
les
dec
ret
add
out
mov
jnp
sbb
cmp
lcall
es
cs
andl
xor
gs
inc
add
or
stc
xchg
sti
and
insb
sbb
pop
cmp
lcall
fucomi
fcoml
and
jg
arpl
push
pop
push
pop
sbb
std
add
cs
insl
xchg
mov
push
sbb
adc
cpuid
inc
sbb
jecxz
jl
iret
insl
shrl
jecxz
xor
push
mov
jno
sbb
jge
jo
jo
aam
ret
jl
push
cli
idiv
cmp
fldt
jle
leave
lds
xchg
ret
adc
inc
push
jno
mov
push
dec
ljmp
mov
mov
fwait
sbb
mov
xchg
xchg
ret
addb
push
sbb
lahf
pushf
nop
push
sbb
push
or
push
and
aad
imul
pop
mov
push
cmp
fstpt
shl
push
ljmp
rcrl
pop
cmp
testl
daa
insl
stc
negb
pop
xor
mov
sub
test
popf
loop
sub
push
mov
repz
xorb
xorl
mov
cmp
jle
vrsqrtps
into
pop
xchg
adc
pop
push
cmpsl
add
mov
lds
stos
xchg
cmc
sbb
scas
popa
pop
dec
jl
movb
push
mov
mov
out
in
out
rorb
out
sub
int
jmp
inc
popa
mov
and
aam
adc
out
mov
xor
dec
push
xchg
clc
std
mov
jle
pushf
mov
cltd
sarl
mov
outsl
pop
jns
jae
sbb
cwtl
jne
add
xchg
jg
cwtl
nop
divl
insl
sub
sub
fwait
lret
test
or
outsb
gs
push
sbb
fiadds
dec
push
pop
cmp
jg
and
mov
sbb
pop
icebp
movsb
orl
ja
mov
mov
fiadds
leave
add
jno
loope
mov
addr16
xchg
adc
xchg
loope
movups
ret
es
movsb
stos
cltd
cmpsl
push
push
orl
out
aad
sub
cmpsl
jne
jo
adc
popa
pop
ds
loopne
movsl
xor
adc
aam
pushf
pop
outsb
mov
dec
fdivs
flds
sti
push
out
or
mulb
jo
int3
js
add
insl
xchg
sahf
adc
inc
xor
mov
jo
push
rclb
mov
adc
lods
in
mov
sub
lock
sbbb
xor
push
sub
arpl
mov
cmp
or
push
mov
push
mov
mov
in
fs
mov
sti
scas
sub
push
pushf
xor
fisubrs
cwtl
mov
andb
mov
fdivl
mov
jg
out
push
jae
aam
mov
add
fcomp
jae
push
mov
mov
cpuid
loopne
daa
icebp
and
push
into
sub
xchg
sbb
mov
test
lret
cmc
popf
sub
cmp
inc
jnp
dec
jne
lret
cmp
rcrl
jmp
cli
pop
andl
cld
std
xchg
mov
stos
scas
xchg
push
jp
pop
inc
xchg
int
lcall
push
and
mov
ja
fcoml
pop
cmc
mov
inc
test
push
mov
sahf
ljmp
ret
inc
dec
xor
test
popa
cmp
push
in
dec
loopne
js
push
out
mov
mov
test
mov
sub
jmp
les
dec
jg
mov
pusha
cmpl
xor
clc
mov
cmp
insl
inc
aaa
pop
xchg
mov
push
ds
orb
shl
lods
sbb
add
arpl
imul
repnz
int
pop
dec
nop
cli
cld
scas
adc
jbe
imul
push
pop
out
push
daa
push
cmp
inc
cmpb
test
cmp
popf
fadds
js
std
dec
repz
test
inc
jp
pop
jecxz
iret
jb
je
dec
in
pop
out
sub
out
xor
imul
test
loopne
jg
daa
pop
mov
adc
mov
lret
cmp
pushf
and
jl
or
mov
fstps
hlt
inc
sub
jg
fucomp
inc
mov
push
mov
outsl
mov
mov
cmp
jno
push
or
and
fiadds
imul
out
cmp
stos
mov
dec
repnz
mov
cmpsl
loop
cmp
sti
jle
sbb
pop
pop
sbb
jmp
mov
push
cld
scas
mov
insb
xor
mov
mov
insb
in
lcall
test
pop
pusha
sub
mov
xchg
pop
lds
push
sbb
mov
dec
mov
addr16
jbe
enter
gs
leave
dec
jmp
and
mov
push
jo
xor
loope
stos
shll
jl
mov
xchg
decb
adcl
xchg
idiv
xchg
stc
push
mov
mov
icebp
pop
cmpb
out
xor
sbb
jmp
jns
ret
fdiv
mov
int3
mov
pop
push
xor
in
cld
push
dec
ret
jl
sbb
std
adc
push
sub
cmpsb
mov
sarl
sahf
mov
and
lea
mov
cmp
std
insl
lret
pusha
movaps
sub
adcb
cmc
xchg
pop
adc
fisubrl
int3
sbb
xchg
hlt
push
xlat
test
inc
adc
call
rol
mov
xor
test
stos
dec
aam
inc
jle
mov
mov
ljmp
sub
adc
mov
testb
inc
jnp
inc
out
sbb
in
xchg
sbb
or
enter
jge
jns
movsb
sbb
xchg
sub
ss
add
dec
inc
push
in
dec
lods
ficomps
mov
mov
lods
aam
loope
addr16
or
clc
mov
iret
jno
inc
mov
sbb
mov
test
loope
mov
daa
xor
fchs
cmp
aaa
adc
fimull
jb
mov
fnsave
popf
pop
push
negb
mov
stc
cli
outsb
ficomps
xor
into
jecxz
pop
cmc
movsl
fyl2x
sub
or
inc
je
push
and
bound
pop
lods
mov
mov
mov
dec
jecxz
inc
or
fildll
scas
pop
push
aas
mov
or
loopne
mov
adc
push
out
cld
popf
ja
repnz
mov
push
fucomip
dec
adcl
xchg
sub
movsl
add
adc
aad
imul
pop
add
jecxz
loop
rcrl
pop
cltd
arpl
adc
mov
dec
inc
sub
inc
sub
ja
push
in
cmp
aad
jp
cs
xchg
les
outsl
movsl
gs
and
mov
lahf
and
in
je
lea
or
adc
dec
es
fiaddl
stc
mov
inc
xor
pushf
xchg
pusha
fdivl
fsub
cs
daa
data16
cmc
push
mov
enter
mov
popf
clc
sbb
es
ds
mov
lods
mov
std
jo
inc
imul
mov
lods
lret
imulb
test
lret
imul
out
shr
xor
and
in
or
inc
mov
sub
and
mov
out
in
inc
or
or
repz
and
add
mov
inc
mov
icebp
jns
leave
lock
mov
jle
hlt
sti
lods
mov
lcall
imul
into
ret
inc
int3
ret
xchg
lret
xor
in
out
cltd
mov
std
arpl
inc
pop
sbb
lea
ss
cmpsb
adc
push
mov
rorl
pop
and
cmp
cmpsl
mov
sets
sbb
mov
inc
xchg
cmp
mul
xor
add
mov
sti
or
shll
sbb
shrb
jp
cwtl
cmc
xchg
lahf
and
int3
mov
daa
push
adc
xchg
mov
leave
mov
pop
aad
mov
stc
mov
push
pop
neg
and
cmp
loopne
nop
andl
aaa
aaa
iret
dec
out
mov
repz
cmp
ja
pop
rcll
int
jmp
aaa
test
pushfw
add
xor
inc
rolb
mov
push
cmpsb
and
jge
fs
dec
fsub
jg
stc
sbb
sub
outsb
loope
les
mov
enter
pop
sbb
mov
out
and
cmpsb
sub
xorb
cli
or
jle
jno
adc
pop
loopne
xchg
fcos
xchg
dec
jo
mov
dec
inc
mov
pop
jne
shlb
mov
ret
mov
inc
les
adcb
cmp
pop
repnz
out
stos
js
mov
lock
inc
xchg
mov
inc
mov
pop
sub
push
js
inc
fprem1
fstpl
mov
ret
rorb
sub
push
std
mov
stos
cmp
lock
jp
aad
or
sub
lret
jns,pn
or
into
ret
jp
cmc
sub
push
std
mov
gs
cwtl
push
out
repz
cmc
mov
sbb
sub
xor
lcall
inc
rcll
lds
idiv
mov
pop
fucom
pop
inc
jle
push
hlt
mov
jae
loop
and
sbb
cld
pop
test
jg
stos
jno
rorl
jns
sub
andl
adc
inc
aam
outsl
mov
sti
mov
idivl
into
int
and
shlb
mov
or
xchg
mov
out
js
push
sbb
or
outsb
mov
sbb
fidivrs
bound
leave
fcoms
sti
fdivr
inc
xchg
shll
inc
mov
inc
fwait
mov
mov
stos
mov
pushf
and
leave
test
aaa
pop
xchg
jge
mov
adc
push
data16
div
xor
mov
aaa
sbb
jno
and
icebp
or
lcall
sub
xchg
scas
pop
inc
dec
notl
xchg
call
lret
dec
popf
jns
ljmp
or
jge
inc
hlt
call
inc
pop
or
inc
xor
mov
adc
jg
jle
ds
xchg
int3
mov
out
push
outsl
sub
mov
add
in
pop
xchg
lcall
mov
push
push
and
subl
repnz
inc
sbb
out
jge
push
sti
pop
sahf
cltd
add
cltd
rep
push
pop
lea
sub
mov
popa
push
sub
mov
out
cmpsl
or
leave
mov
sub
inc
cmp
lds
push
push
dec
mov
pop
aad
jbe
addb
xchg
cmpsl
addr16
dec
notb
mov
mov
aas
or
test
aas
stc
dec
mov
cmp
inc
mov
stc
cmp
jbe
cmp
xchg
and
out
addb
js
call
push
push
cmpsl
cmc
arpl
push
scas
cmp
test
insb
lahf
push
scas
xlat
push
jbe
ret
int3
ja
cmpsl
jmp
dec
mov
imulb
mov
cwtl
mov
clc
aaa
fisubl
pop
jbe
inc
aaa
shrb
lea
lods
dec
and
jno
icebp
mov
fists
push
aas
sbb
cmp
xor
enter
mov
aaa
jns
repnz
das
sub
xchg
xchg
hlt
sbb
mov
xor
test
mov
mov
push
hlt
faddl
fidivrs
adc
jg
popa
cld
daa
xlat
mov
pop
cmp
rorb
popf
test
out
aad
xor
icebp
ljmp
stos
pop
aad
dec
mov
mov
mov
pushf
xorb
xor
xchg
push
inc
cmp
jae
test
lods
jno
pop
movsb
xor
pop
aam
add
fidivl
insl
add
ret
loopne
sub
xlat
add
jo
inc
and
xchg
ljmp
add
mov
lods
gs
xor
pop
xor
adc
sahf
js
into
test
aad
xchg
mov
jnp
lret
ss
je
leave
pop
ds
in
insl
test
and
and
pop
rcrl
test
shr
leave
mov
cmp
or
leave
xor
popf
jb
or
cwtl
cmp
xor
pop
test
repz
aaa
pop
lock
inc
hlt
mov
in
aaa
inc
ja
enter
jb
dec
mov
loopne
or
enter
cltd
pop
popf
adc
jecxz
xchg
dec
push
orl
ret
and
data16
repz
ds
inc
push
nop
jb
in
call
subb
inc
sbb
push
ljmp
or
push
ficoml
out
push
fs
fwait
inc
jecxz
jg
push
fcmovnu
and
pop
ljmp
imul
outsl
xor
inc
lods
adcb
call
inc
dec
mov
sahf
sub
mov
inc
push
xchg
inc
fists
lret
pop
add
pushf
movsl
rol
xor
pop
cmp
cmp
sbb
inc
pop
popa
adcl
mov
fimuls
add
xchg
dec
and
inc
mov
mov
sub
add
lret
cmp
outsb
sub
xor
push
jbe
frstor
or
cld
add
push
cs
aas
outsb
jae
push
mov
xor
lahf
mov
cmp
push
push
or
cmp
fsubr
or
arpl
sub
das
fwait
out
push
pop
xchg
pop
adc
imul
js
mov
mov
add
popf
add
jp
xchg
dec
adc
cmp
jmp
mov
dec
dec
aas
addr16
orl
das
add
mov
in
push
ret
loopne
addl
test
xchg
push
sbb
push
imul
js
pop
jp
mov
inc
xor
jmp
mov
mov
dec
inc
lods
ficomps
clc
inc
test
mov
dec
push
pop
mov
dec
rorb
jnp
fcmovnb
int
inc
test
scas
inc
mov
xchg
sub
jbe
jnp
out
xchg
mov
aas
or
loope
mov
repnz
in
adc
mov
shrl
imul
popf
inc
cmp
fucom
lods
movsb
cmp
sbb
scas
jmp
jge
dec
ja
ds
mov
sbbb
scas
sbb
popf
add
jge
in
pop
call
fldt
or
in
adc
fs
mov
das
lret
sbb
mov
cmp
mov
xchg
xchg
push
inc
lcall
lret
add
gs
xchg
push
je
mov
cmpl
inc
mov
jmp
ljmp
jle
push
push
add
ja
cmp
das
fimull
lock
xchg
pop
xor
xor
sbb
cli
ficoms
mov
xor
ret
pop
xorl
cmp
inc
movsb
int
jle
pop
mov
lret
leave
inc
adc
push
gs
shlb
push
cltd
out
xor
adc
dec
pop
int3
mov
push
insl
and
add
dec
mov
adc
bnd
pop
xchg
mov
in
out
and
or
cli
sarb
sbb
inc
push
dec
andl
scas
insb
out
cs
mov
lods
add
or
add
les
fs
or
mov
jp
pushf
pop
adc
and
dec
insl
fnstenv
pushf
lcall
clc
xor
sbb
mov
or
in
in
xchg
mov
or
push
xchg
sbb
add
dec
inc
lahf
icebp
dec
cmpsb
stos
and
or
push
push
outsl
mov
movsb
call
push
jle
jp
test
adc
popa
and
popf
fdivl
out
in
and
inc
xchg
jmp
shll
sbb
shrb
jg
or
push
cmp
mov
loopne
or
out
enter
mov
xchg
insl
pushf
xor
stos
xchg
mov
addr16
popa
cli
das
insb
push
nop
cwtl
clc
and
push
adcb
clc
cwtl
and
or
adc
and
aaa
sub
fildll
std
jg
xchg
rclb
adc
xchg
and
ss
mov
loopne
outsl
ss
mov
inc
fisubl
out
mov
jge
inc
jnp
xchg
test
add
arpl
xor
int
dec
and
lods
lds
nop
sub
outsb
lsl
in
cmp
movsb
xor
xor
dec
mov
arpl
jnp
mov
fcmovnu
lcall
sahf
incb
mov
ret
mov
fyl2x
mov
jae
subb
jne
xchg
sbb
sub
sub
mov
iret
pop
loop
addr16
inc
lods
leave
jmp
jmp
rcrb
fsubrl
out
sbb
call
mov
and
cmp
shll
dec
and
jne
push
outsb
xor
jb
je
out
lods
inc
push
pop
and
add
mov
jg
pop
inc
outsb
int3
sbb
ljmp
mov
xchg
pop
in
sbb
hlt
dec
fnsave
push
fistpl
push
add
inc
rol
push
test
test
jle
sub
mov
test
int3
in
sbb
mov
aam
push
pop
js
in
ficoms
xchg
into
addr16
cltd
gs
add
pop
mov
sub
push
xchg
fsub
out
int3
jp
dec
dec
sub
xor
shr
and
rorl
imul
push
iret
mov
mov
xchg
dec
out
sub
add
jmp
mov
xchg
inc
lods
int
in
mov
jp
push
out
rolb
jg
aam
dec
inc
xchg
or
xchg
ljmp
sbb
imul
or
popa
mov
add
jnp
jb
cmp
mov
sahf
sub
push
repnz
repz
mov
cltd
lea
shrb
xchg
xor
rclb
mov
mov
add
lods
push
xchg
bound
xchg
pop
sbb
push
xchg
pop
mov
es
jmp
add
fidivrs
pop
pop
leave
scas
jo
hlt
and
or
and
icebp
bound
arpl
rcrl
rclb
sbb
dec
rcrl
je
lahf
push
je
cmp
sub
fcomps
je
fadd
sbb
push
ljmp
ret
dec
cmp
xor
mov
lret
mov
out
scas
nop
add
outsb
mov
int
inc
cmc
adc
jae
mov
rcrb
mov
not
or
mov
sbb
shrl
jnp
fldt
aaa
mov
hlt
adcl
add
mov
xchg
cmpsb
mov
xchg
or
jb
leave
pop
lds
rorl
adc
aaa
jl
xor
add
pop
ja
mov
lcall
lahf
sbb
jbe
mov
mov
xor
add
lods
mov
mov
divl
xor
sbb
sahf
aam
not
push
sahf
add
lods
jge
je
sbb
mov
stos
xor
sub
mov
cli
scas
int3
mov
mov
xor
cmp
add
xor
pop
pusha
icebp
mov
mov
and
fidivrs
daa
pop
xchg
in
out
das
jno
jnp
push
fmull
leave
ret
inc
in
fidivrs
lods
lods
in
mov
shl
or
inc
lods
jns
add
bound
mov
cmp
addr16
sbb
out
xchg
mov
scas
movb
jbe
insb
push
hlt
sahf
popf
arpl
pop
btl
pop
push
push
sub
pop
dec
lcall
std
cmp
mov
stc
lcall
lret
adcl
shll
jae
movsl
or
cmp
rclb
pop
push
fildll
cmp
pop
movl
push
aad
mov
fsubl
int
adc
fcomps
push
jo
lahf
out
sti
fstps
push
out
lods
push
das
popf
gs
jnp
mov
outsb
cwtl
pop
add
dec
adc
pop
and
add
loopne,pt
pop
mov
scas
mov
les
sarb
xor
xchg
xchg
stc
xor
xor
in
add
push
in
lahf
subw
adc
cmp
jge
cwtl
dec
dec
fcoms
fistpl
pop
out
jns
sbb
mov
leave
enter
and
xchg
inc
sar
loopne
xor
je
cmp
sbb
mov
popf
adc
pop
cli
loopne
daa
daa
mov
test
out
push
cli
push
aas
subb
scas
outsb
incl
jno
cmp
xor
or
or
xor
mov
mov
adc
iret
fidivrs
cs
ljmp
repz
fimull
and
aaa
pop
outsl
jne
adc
and
icebp
sub
cmp
sub
sbb
xor
mov
repnz
cmp
pop
jl
jo
mov
cli
and
mov
dec
adc
insl
js
mov
jne
pop
in
mov
push
xor
shll
testl
push
int3
xchg
push
or
sub
mov
divb
xchg
mov
rol
scas
cmpsb
dec
and
nop
hlt
push
fimull
loope
adc
pop
cmpsl
pusha
dec
jl
sti
pop
arpl
lods
mov
shrl
int3
cmp
in
push
dec
jcxz
cwtl
out
shlb
mov
jns
std
xor
mov
out
into
dec
jmp
adc
inc
test
and
fldt
repz
iret
adcl
jbe
fists
leave
pusha
sti
sbb
pop
mov
pushf
push
out
jmp
enter
inc
pop
je
mov
sarb
xlat
sbb
lcall
mov
cmp
inc
lahf
xlat
jno
pop
pop
popf
lret
or
aaa
jecxz
add
add
fwait
aad
sub
divl
jmp
xor
out
test
pop
mov
mov
jnp
je
or
adc
nop
mov
sub
dec
or
das
les
add
fisubrs
and
mov
push
and
or
das
shr
cmc
push
xchg
into
aad
test
fstps
or
inc
xor
bnd
adc
jb
ljmp
push
pop
pushf
xchg
loopne
outsb
test
pushf
cli
sbb
push
call
pop
xchg
int
enter
jl
and
pusha
mov
movaps
dec
xchg
or
aas
add
rcrb
cmp
push
sbb
mov
push
mov
mov
stc
or
jecxz
xchg
movsl
data16
les
sub
dec
push
cmp
in
pop
shll
jb
call
lcall
mov
icebp
cmp
mov
sub
js
jno
jno
js
jne
int3
xor
pop
xchg
imul
popa
sub
rcrb
inc
mov
sub
push
mov
push
add
sbb
dec
sarl
cmp
push
insb
push
ret
or
mov
add
xorl
stos
icebp
sahf
movsl
loopne
cmp
stos
into
cmpl
push
movl
xchg
jne
stos
ficoms
jg
ljmp
data16
repz
and
pushf
xchg
xchg
cmpsb
lahf
push
xchg
sbb
push
fidivrl
rorb
daa
fmuls
push
jmp
int3
sbb
fs
and
inc
out
and
inc
and
mov
adc
inc
mov
sbb
sbb
ret
mov
cli
sti
cld
xor
xchg
mov
clc
dec
jbe
insl
jne
mov
xchg
add
mov
sub
stos
gs
inc
and
jge
pop
sub
mov
stos
std
xchg
fildll
into
pop
mov
xchg
jbe
adc
pop
xchg
pushf
pop
popf
sub
imul
fs
mov
andl
loopne
and
jno
maskmovq
divl
xor
int
jge
jo
mov
lahf
lret
mov
pop
sahf
inc
cwtl
aam
icebp
jnp
popa
loopne
loop
xor
arpl
jnp
mov
push
cmp
and
push
subb
dec
and
sub
enter
xchg
movsb
loop
movsl
cld
and
xchg
mov
mov
enter
xchg
scas
adc
adc
shrl
rcrb
loopne
or
mov
jns
call
sub
cwtl
ret
dec
popf
cmp
add
mov
jno
push
sub
fucomi
insl
and
das
out
lahf
fimuls
adc
jbe
and
popf
pop
fimuls
je
das
mov
push
popf
mov
sub
pop
inc
out
sub
sbbl
ret
cltd
mov
cs
dec
sub
out
icebp
lods
out
inc
loope
fucom
rolb
mov
xor
rorb
and
rep
mov
dec
mov
scas
cltd
sahf
insb
xchg
jbe
adcl
aas
pop
sbb
pop
push
sub
shll
out
dec
pop
in
jle
ds
push
dec
loopne
fildll
loope
lods
xchg
sub
jno
popa
xor
int
fistps
mov
and
jo
mov
and
ss
mov
push
lret
cmpsb
mov
imul
add
jne
movsb
inc
pop
or
xchg
lods
cmp
add
inc
addb
sarb
push
push
mulb
jne
or
pushf
pop
inc
mov
jbe
imul
arpl
mov
pop
orl
mov
nop
sbbb
and
dec
mov
je
imul
adc
cltd
popa
enter
outsb
fidivrs
scas
push
xchg
and
sub
popa
aad
push
sbb
and
loope
adcb
jle
jp
aad
xor
adc
add
cmp
push
xor
inc
jge
or
scas
cltd
adc
sub
push
insb
ljmp
push
testl
outsl
jmp
pop
popf
cmp
ljmp
and
pop
push
cltd
movhps
xchg
loopne
adc
mov
icebp
push
adc
sbb
iret
insl
jp
push
sbb
ret
outsl
dec
call
std
add
cltd
aam
fwait
iret
xor
push
cmpsl
pusha
hlt
sbb
dec
lret
sti
sub
out
inc
adc
mov
inc
nop
and
dec
loopne
inc
lret
fs
sarl
inc
loopne
sbb
sub
xor
lcall
sbb
or
rol
push
stc
leave
inc
icebp
pusha
mov
stos
mov
scas
pop
cmp
aaa
push
inc
sub
push
xchg
outsb
js
and
xchg
lret
inc
ficoms
add
pop
loop
pusha
shl
out
fstl
cmc
cmp
xchg
push
ret
mov
stc
testb
mov
xchg
dec
mov
fadd
lea
ret
loop
cmp
xlat
push
subl
mov
xchg
gs
or
imul
mov
lcall
sub
mov
insl
jo
cmpsl
mov
mov
sub
adc
or
test
mov
mov
in
cmp
xchg
push
test
int
jl
xorb
dec
popf
add
jmp
int
test
mov
cmp
rcll
or
lahf
pop
aas
dec
outsb
xor
jne
pop
mov
pop
fbld
mov
pop
cmpsb
cld
inc
bound
pusha
out
dec
cmp
xchg
mov
and
xor
call
mov
add
add
mov
stos
xlat
sbb
pop
icebp
stos
sbb
push
jns
rcrb
mov
lcall
adcb
mov
rep
shrl
std
flds
imul
xor
pop
es
xor
cmpsb
sub
rcr
rcll
push
stos
nop
ret
push
test
sahf
mov
mull
ds
or
lds
dec
fs
cmpsl
into
xchg
mov
dec
adcl
xchg
add
cmp
in
xor
sbb
aad
mov
sahf
or
and
aas
std
cmp
or
dec
push
sbb
jne
mov
or
push
adc
test
cli
inc
pop
mov
outsl
jns
pop
add
aad
sbb
nop
dec
jno
sub
adc
outsb
mov
in
fldcw
nop
fwait
and
mov
pusha
push
clc
fs
or
les
bound
push
aad
pop
cmp
adc
iret
dec
mov
aaa
adc
mov
sub
sahf
int
jno
adc
sbb
sub
lock
add
mov
jo
stc
or
das
mov
aas
jle
mov
addr16
mov
clc
cmc
dec
jmp
icebp
and
das
push
pop
sub
ja
mov
lret
fisttpll
stc
aaa
shlb
pop
lods
inc
arpl
fsts
cmp
add
jnp
inc
or
mov
outsl
mov
fcom
sbb
out
adc
fldenv
xlat
addl
shrl
pop
gs
clc
cmp
ja
and
lahf
popa
add
mov
mov
cmp
popa
fistps
movsl
inc
inc
sbb
add
test
rcrl
lcall
setnp
push
push
push
push
mov
rcll
into
fnclex
mov
mov
and
mov
in
in
js
mov
divb
or
cmpsb
sbb
fistl
test
pop
sub
scas
adc
inc
mov
lods
jmp
jle
inc
loope
ja
cmp
outsb
outsl
push
pop
insb
jnp
mov
dec
adc
insb
std
pop
mov
inc
movsb
jae
fs
sub
test
pop
xlat
and
stos
and
mov
sub
testb
dec
jle
inc
in
call
scas
inc
xchg
cwtl
adc
push
mov
shlb
pop
mov
ljmp
out
adc
cmp
stos
pop
mulb
cwtl
push
je
je
dec
xchg
add
adc
call
mov
repnz
mov
out
outsb
orb
pop
mov
adc
pop
insl
ret
movsl
inc
mov
leave
test
mov
ds
andb
jg
and
lret
ret
loop
pusha
incl
dec
mov
sub
es
inc
or
in
mov
and
xor
push
scas
pop
std
push
and
pop
pop
in
ja
imul
rol
mov
loope
adc
and
insl
cwtl
test
push
popa
icebp
mov
movsl
inc
cld
call
cmp
sbb
xor
iret
test
cmp
mov
and
mov
scas
dec
and
ljmp
mov
push
filds
or
cmp
fsubrs
pop
jmp
sub
popa
mov
jne
push
jecxz
cmc
lret
jns
mov
in
cld
fcoms
or
in
pop
fdivr
and
mov
fisubrl
mov
cmp
out
adc
jp
testl
inc
in
xor
pop
pop
push
cmc
sbb
test
outsl
inc
stos
cs
push
in
pop
out
cld
and
adc
dec
or
popa
clc
stos
lock
ret
out
stos
and
pusha
mov
xlat
dec
mov
ja
pop
int3
jmp
adc
lret
sub
mov
jl
mov
or
rcll
and
or
push
test
or
into
insl
lods
daa
hlt
gs
in
jns
iret
mov
sub
push
sahf
xchg
or
jns
lods
push
mov
cmp
xor
scas
rclb
or
insl
push
mov
mov
rcrl
add
fwait
mov
enter
daa
jne
negb
adc
rcr
scas
lret
dec
gs
rclb
push
jno
mov
push
xor
sbb
mov
dec
ds
or
jnp
es
mov
xor
aam
mov
popf
add
inc
hlt
pop
sti
leave
nop
mov
cmp
sbb
ds
jnp
adc
sub
popa
mov
inc
stc
pusha
lea
and
shrb
in
dec
daa
sub
and
push
mov
mov
jp
push
jp
out
lods
xor
loop
adcb
aam
imul
subl
aad
mov
inc
nop
rol
xlat
xchg
add
addl
mov
adc
or
jbe
enter
pop
cmp
push
sbb
fstps
xlat
or
test
dec
sbb
cmp
sti
je
adc
sbb
movsl
lods
add
push
dec
push
insl
sbb
xlat
inc
lods
adc
and
vpaddw
mov
mov
in
orb
lret
aaa
push
jb
jae
mov
mov
mov
push
subl
test
movl
lods
adc
pushf
lock
sahf
mov
cli
nop
les
pop
push
test
or
adc
xor
jns
lret
lock
xor
xchg
push
stc
inc
cmp
or
lea
ja
mov
stc
or
lret
sub
or
int
xor
jecxz
pop
sbb
shl
pop
xchg
lea
jge
xchg
cli
add
in
adc
jecxz
popf
pop
push
popa
cltd
mov
pop
push
movsb
icebp
cmp
push
or
sbb
cmp
mov
rcrb
insb
jbe
enter
popl
cld
js
iret
sbb
call
mov
ret
ret
arpl
xchg
ret
enter
cmc
hlt
in
out
add
sbb
cmp
adc
shl
xchg
jbe
pop
icebp
pop
mov
push
test
mov
xchg
mov
xor
int
mov
adcb
mov
jno
lret
xor
std
outsl
pop
jo
stos
jbe
loope
ds
push
lock
cmp
in
push
mov
push
mov
and
jle
lods
mov
fsubr
mov
stos
inc
mov
pop
cld
cwtl
arpl
sbb
jmp
jecxz
xchg
popf
lcall
test
push
inc
fs
insb
ljmp
cld
or
and
rcrb
pop
jg
jle
jge
add
or
std
icebp
cmpl
nop
push
in
mov
inc
aas
pop
push
mov
out
aam
inc
aaa
push
ret
sarb
std
fsts
fistps
xor
enterw
jp
scas
pop
mov
mov
cmc
jecxz
stc
jo
mov
sub
pusha
mov
mov
ss
mov
cmp
mov
movsl
lcall
aam
aas
incb
mov
jb
xchg
mov
fdivr
test
mov
xchg
inc
scas
shrb
ret
add
addl
jnp
mov
push
jns
dec
lahf
cmp
push
jg
sub
imul
cmpl
pushf
mov
push
outsl
mov
mov
fadds
sbb
mov
dec
adc
mov
sub
jp
orl
in
xchg
dec
ret
fld
jmp
mov
sarl
or
lret
jbe
stc
out
or
inc
dec
push
inc
and
aad
lahf
inc
xchg
pop
dec
xor
loope
mov
out
loop
cmp
push
and
xchg
push
adc
push
sub
xchg
popa
push
popa
shufps
xchg
mov
cmp
jns
cmpsl
hlt
jbe
pop
jle
push
test
imul
sub
icebp
dec
inc
arpl
mov
sbb
test
jb
and
inc
push
cmp
add
mov
mov
push
push
aad
fists
push
stos
mov
inc
adc
lds
int
shr
cwtl
push
rcll
sub
add
mov
mov
negl
bound
mov
ret
and
lret
mov
das
xchg
jmp
inc
jecxz
dec
cs
jmp
cltd
hlt
sbb
idivl
and
cmp
cmp
and
cmp
xor
dec
daa
adc
jge
aad
popa
xchg
cmpsl
and
dec
sub
rclb
ss
jmp
add
add
inc
push
cltd
mov
cmp
pop
dec
sub
push
mov
push
mov
mov
cmp
sbb
cltd
pop
mov
iret
push
in
mov
sbb
xor
mov
mov
mov
loop
rorl
jle
dec
push
jmp
or
cmp
mov
push
mov
inc
lahf
into
sub
xchg
lcall
lds
nop
rorb
xor
jnp
aam
cmp
fdivrs
xchg
mov
lock
ss
xchg
mov
sbb
pop
clc
addr16
jle
fwait
xor
push
stos
int
mov
gs
jle
dec
in
enter
mov
sbb
lahf
pop
ss
mov
fs
fldt
inc
mov
mov
rcrl
daa
test
ficomps
inc
call
inc
movsb
adc
das
les
and
dec
daa
leave
shr
out
andl
inc
orb
push
and
dec
sbb
mov
sbbb
adc
sbb
adc
inc
jno
int
out
mov
nop
add
jne
cmova
xchg
sahf
sahf
add
adc
and
inc
mov
mov
add
fadds
cmp
pop
aam
xlat
mov
movsb
sub
add
call
cli
mov
push
repz
adc
mov
xchg
jno
dec
lcall
dec
dec
sti
xchg
test
lcall
test
lods
iret
inc
lcall
pop
push
push
outsb
pop
push
jno
pop
lods
test
addr16
dec
pusha
fistpl
pop
imul
inc
and
jmp
mov
or
cmpl
xor
dec
dec
jno
out
fiaddl
pop
into
call
outsb
push
push
ja
jmp
in
mulb
sbb
cmp
xchg
movsb
sahf
fcoml
mov
sbb
inc
jo
xlat
insb
dec
js
dec
adc
dec
jp
in
mov
dec
sbb
cmp
ja
jb
adc
test
lahf
call
js
add
cltd
xchg
jae
aam
jbe
pusha
pop
shlb
xor
movl
sbb
and
fildl
push
inc
addr16
xchg
insl
rcll
jno
stos
pop
mov
stc
push
sub
mov
scas
test
push
add
rorl
daa
or
ss
cmp
add
mov
jb
sbb
out
adc
sahf
ret
insb
addr16
inc
popf
pop
push
loopne
xor
lahf
nop
scas
dec
test
lods
xchg
sub
fisubl
imul
or
fstpt
fcomi
mov
stos
je
out
mov
sub
mov
out
fldl
cmc
out
repnz
xchg
std
cld
xchg
dec
test
call
add
sarl
stos
sti
push
push
lock
insl
xlat
dec
js
loope
in
or
test
int
mov
fcoml
jl
mov
or
dec
popf
inc
xor
les
daa
das
aam
push
xlat
push
lds
aam
jp
adc
aam
cs
test
jp
stos
pop
and
push
or
dec
insb
fsubrs
pop
cmc
lea
dec
popa
mov
xchg
mov
cmpb
incl
inc
mov
popf
mov
dec
gs
sbb
mov
test
push
divl
sub
ljmp
into
pop
cmpsb
xor
nop
inc
movl
or
mov
xchg
ret
xchg
fisubrl
xor
cmpsb
pop
test
mov
adc
call
cltd
cmpsb
loope
cmp
hlt
add
jl
bound
scas
adc
pop
sub
in
dec
lahf
in
fwait
jl
xchg
std
rolb
xchg
inc
ret
pop
popf
lcall
push
ja
or
dec
lock
mov
fsubs
popf
cwtl
jo
roll
js
js
call
in
xchg
add
movsl
dec
imul
or
rcl
ret
inc
push
dec
push
rclb
dec
xor
lahf
jle
sbb
push
icebp
ss
rcl
mov
add
rol
cmpsb
dec
adc
push
mov
and
push
scas
and
popa
or
jbe
dec
stc
or
mov
in
sbb
mov
jg
xlat
push
sbb
mov
push
out
push
insl
add
int3
in
notl
jp
push
push
jbe
ret
pop
mov
xchg
adc
in
movsb
stos
psubw
push
jmp
dec
xchg
lret
movsl
sahf
movsb
test
fwait
cmpsb
icebp
jae
cmp
cmp
jl
pop
in
test
or
sub
mov
push
or
stos
dec
cmp
add
lahf
out
cmpsl
xor
pop
xor
pop
add
lea
mov
push
ds
aam
adc
pop
inc
mov
jne
mov
faddl
xlat
ss
mov
and
sbb
dec
jecxz
arpl
push
cmp
rcrl
loope
adc
pop
add
push
mov
movsl
add
inc
jmp
movsl
les
jae
test
ret
cmp
dec
aam
nop
adc
jno
loop
mov
arpl
jg
test
and
bound
push
cmc
shlb
lock
cli
cmc
inc
stc
lods
lds
in
mov
jb
adc
xchg
pop
push
pop
add
xchg
add
inc
daa
adc
lock
fnstsw
cmpsl
lret
sahf
sbb
aaa
popf
sub
cmpsl
and
cld
fs
cmp
push
cmp
repnz
inc
les
jns
xor
gs
insb
add
fmul
add
ficomps
ret
push
xchg
or
jp
push
gs
push
bound
jb
fistpl
lock
test
inc
push
cmp
testl
jae
jb
fst
push
cmp
sarl
and
jo
push
cmp
mov
mov
sahf
out
jp
inc
inc
pop
xor
dec
sbb
xchg
out
xor
add
fcmovnb
out
lods
ret
sub
or
mov
lock
xlat
xchg
mov
inc
jl
pop
sub
outsb
imul
gs
inc
xor
stos
jae
pop
add
divb
hlt
dec
cmp
jno
in
fcoml
cmc
out
push
dec
push
ja
jns
stos
xor
dec
stos
es
xchg
fs
into
arpl
or
mov
andl
in
jg
mov
sub
cs
add
rcrb
push
xchg
or
mov
push
push
cltd
outsb
mov
outsb
sarl
mov
lods
xor
jne
loop
in
mov
lock
in
xor
jp
clc
sub
ja
mov
shrl
adc
lds
js
xchg
sub
mov
imulb
fwait
dec
int3
mov
lwpins
in
fdivrl
mov
fstps
sti
adc
xchg
mov
std
bound
mov
xor
fwait
rol
jbe
pop
and
in
movsb
loop
inc
xor
jecxz
hlt
enter
insl
std
xchg
pop
sti
sub
add
xor
push
mov
mov
outsb
out
cld
ret
imul
shl
leave
mov
cli
and
and
mov
inc
fdivl
shlb
clc
iret
pusha
aas
fstps
subb
imul
cmp
inc
xchg
shrb
push
jns
add
cmp
xchg
xor
out
mov
hlt
inc
gs
dec
and
dec
pop
jecxz
and
jbe
rorl
jno
frstor
xchg
push
int
adc
loope
arpl
inc
sub
xchg
mov
dec
cmp
ja
ret
lea
out
adc
repz
inc
enter
xchg
sbb
xchg
je
pop
xor
inc
and
add
shll
adcl
push
inc
pop
bswap
lds
jmp
iret
cmpsb
jmp
mov
fsts
insl
pop
scas
cmp
fwait
sbb
test
fistl
aas
jmp
mov
xchg
cli
cmp
xchg
pop
adc
test
xchg
xchg
and
popa
mov
sub
and
popf
call
dec
imul
test
hlt
sub
jbe
mov
pushf
insb
rol
xor
cs
mov
mov
es
pop
adc
shll
dec
pop
movsl
dec
or
cs
loope
ds
jno
andl
sbb
sub
adc
sub
loop
jne
test
shlb
adc
in
rorb
in
clc
loop
adc
inc
add
test
cmp
dec
leave
sahf
test
stos
pop
sub
adc
loopne
mov
sbb
mov
loope
faddl
mov
xchg
fmull
inc
lahf
mov
fwait
lret
cmpsl
cmpsb
cli
out
xor
sub
dec
call
out
fld
lcall
and
popf
lds
scas
gs
jo
pop
insb
iret
sub
or
aad
mov
scas
inc
aam
jae
fimull
aas
push
xor
push
jne
roll
fucomip
adc
jae
dec
fucom
insl
fmul
adc
test
test
and
outsb
cmc
mov
imul
sub
cmp
mov
lea
xchg
jmp
ljmp
sbb
mov
jl
ljmp
pop
xor
imul
movsb
fsubp
stos
test
repz
inc
ds
mov
fldcw
imul
mov
stos
jp
sub
je
mov
shll
repz
imul
pop
int3
scas
sti
popa
and
roll
andb
mov
xor
push
cmc
ds
pop
push
int
mul
call
jp
and
mov
out
push
sub
cmpsb
jne
andl
mov
jbe
ficoml
int
xor
xchg
lret
xchg
notl
loope
cltd
jmp
push
and
loopne
push
mov
fbstp
sbb
ja
std
movsl
dec
sbb
push
sub
push
fistpll
cmp
mov
in
sub
xor
lods
sub
mov
fcomps
int3
xor
maxps
fimull
aad
push
sbb
mov
and
xchg
repnz
jmp
cli
add
lods
lret
xchg
cli
pop
movsl
lcall
std
nop
or
aad
js
sti
mov
mov
out
lcall
lods
das
addr16
test
or
sbb
sbb
out
je
push
cwtl
femms
cld
xchg
sbb
pop
in
mov
jg
jecxz
imul
adc
dec
push
lahf
jmp
popa
loop
cmp
repz
mov
fsubl
xchg
imul
lods
xor
loopne
push
xchg
xchg
sbb
pop
call
ja
mov
ret
repnz
and
jo
in
cmp
cs
inc
or
mov
int
fidivrl
std
mov
jge
test
pop
outsb
loop
insl
pop
sbb
inc
gs
xor
faddp
movsl
fcomp
shl
test
and
jae
jns
sbb
movsl
xchg
adc
cs
adc
imul
mov
mov
mov
dec
xor
xchg
mov
test
in
inc
test
fidivrl
pusha
cmp
add
mov
mov
mov
jmp
bound
mov
push
xor
push
fldpi
nop
scas
jnp
sub
rcrb
out
xchg
fistps
xchg
or
dec
push
jecxz
rcll
stos
xor
push
out
andb
jmp
in
jmp
push
pushf
ss
lock
rclb
inc
sbb
ljmp
cli
aad
outsb
push
xor
insb
fcmovb
dec
outsl
push
aam
loop
push
sarb
push
sbb
cwtl
fs
dec
push
jns
mov
pop
ret
and
out
loope
test
lods
out
fcoms
inc
push
iret
mov
mov
out
ljmp
loope
push
mov
mov
push
mov
arpl
dec
icebp
and
aam
inc
nop
inc
mov
jecxz
cli
sub
fcmovnb
icebp
mov
dec
lea
and
mov
stc
int3
jne
mov
bnd
sahf
aaa
fwait
dec
add
xor
clc
ret
or
xchg
mov
nop
stos
or
test
dec
pop
adc
loop
mov
push
sub
sub
pusha
pop
arpl
add
mov
xorb
mov
xchg
lret
dec
icebp
jl
xchg
mov
and
mov
into
add
inc
pushf
ret
sub
test
pop
fnstenv
or
or
cmp
jmp
pop
sub
xchg
xor
pop
stos
movsl
cmpsb
divl
xorb
cli
sub
and
jae
pop
mov
loope
into
jecxz
dec
fldenv
lcall
les
arpl
xchg
push
pop
je
fstpt
add
cmp
push
xor
pop
int3
or
ja
rcrb
inc
or
pusha
adc
sub
adc
xchg
add
mov
xor
lds
push
jge
push
add
call
mov
xchg
jbe
mov
xor
std
sbb
jge
shr
fimuls
pop
add
outsl
out
adc
clc
xchg
mov
push
enter
or
mov
insl
ror
push
out
cmpsl
add
loope
imul
cmp
mov
fidivs
test
adc
lock
std
lcall
insl
lea
jecxz
pop
mov
jne
push
mov
sub
rcll
ret
fisubrl
or
jl
cwtl
jl
stc
leave
inc
les
pop
js
xor
mov
roll
shr
mov
scas
cld
cwtl
aaa
enter
xor
and
mov
call
ret
adc
or
pusha
mov
ja
sub
and
sbb
test
test
movsb
inc
and
jp
mov
pop
dec
loope
dec
dec
cs
mov
cmp
imul
loop
cmp
push
movsb
jg
cmc
xchg
repnz
xor
stc
popa
scas
loopne
jnp
inc
aam
sub
mov
lahf
sub
add
push
fstpl
push
xor
sbb
fildll
cmp
xchg
leave
js
inc
jle
insl
push
nop
scas
mov
jae
mov
jno
xchg
mov
ficoml
jmp
pop
in
xchg
call
leave
ja
leave
cmp
pop
rorl
push
adc
in
add
data16
jp
push
mov
sbb
mov
mov
inc
add
dec
pop
pop
aam
xchg
add
push
cld
adcl
and
inc
das
xor
test
sahf
stc
aad
dec
mov
push
nop
fldt
lock
into
ret
je
fbstp
push
fisubs
mov
js
out
add
in
mov
lods
mov
and
lahf
xor
dec
aad
pop
ret
sbb
nop
sarb
dec
movsl
das
sbb
addb
or
mov
and
pop
cmp
jmp
jae
or
lods
sub
xor
cmp
nopl
in
stc
jl
cmp
dec
rolb
add
add
lret
daa
movsb
adc
inc
push
lock
or
and
mov
or
fnstenv
icebp
insl
add
and
int3
je
aad
cmpsb
cmp
and
bound
inc
or
loopne
pop
insb
adc
cmp
mov
fstl
pop
aas
fisubl
mov
les
pop
inc
xlat
shll
ret
sbb
mov
lret
shlb
pushf
jmp
or
mov
lret
pop
dec
nop
enter
shl
in
in
mov
fwait
mov
adc
and
in
and
mov
mov
xor
xchg
aam
jo
cmp
in
push
xor
push
popa
sbb
sub
mov
in
cld
outsl
mov
call
mov
lods
cmc
xor
cmpsl
dec
push
dec
dec
shl
cltd
xor
adc
push
mov
shlb
jg
mov
cld
or
testb
xorl
sub
xchg
xlat
jmp
int3
loopne
push
xchg
mov
adc
sbb
cmp
insl
and
orl
push
push
xchg
push
and
outsl
adc
push
lods
enter
inc
rolb
cmp
loop
lods
jmp
cld
cltd
fisttpl
cmp
mov
cmp
add
sub
ror
and
mov
jl
andb
fidivrl
cmp
push
pop
popa
movsl
or
mov
cwtl
mov
mov
xor
jno
fildl
pushf
leave
sub
mov
pop
mov
repz
add
mov
adcl
push
inc
push
fmul
dec
call
les
std
stos
adc
movsb
aad
jl
pop
jne
jne
and
jo
adc
pop
sbb
shrb
or
shlb
es
mov
ds
aas
push
rorb
add
in
mov
lahf
mov
fadd
push
jmp
adc
subb
mov
cmp
repz
mov
add
adc
jle
andb
adc
xchg
push
jbe
scas
rcr
mov
dec
sahf
xchg
pop
push
push
notb
and
js
insl
cld
cwtl
popf
sbb
and
pop
dec
call
stc
cmp
data16
lds
rcrl
xlat
add
aas
fwait
leave
adcb
outsl
xchg
pop
adc
and
mov
int3
inc
cmp
inc
cwtl
dec
lret
dec
inc
inc
cmp
loop
popa
dec
pop
out
inc
mov
add
push
push
loopne
adc
rcll
ret
repz
xchg
aas
pusha
push
mov
hlt
mov
loop
inc
xlat
call
mov
xor
pop
fldl
shl
xchg
int3
xchg
movsl
sub
xor
cmpsb
and
inc
xchg
lock
lret
xchg
out
xchg
mov
divb
lods
dec
fucomip
cld
les
or
pusha
push
dec
push
je
pop
dec
cmp
mov
int
and
xchg
dec
inc
xchg
mov
xorb
fiadds
addb
xchg
cmp
add
lds
pop
jg
test
sub
jo
sub
leave
fistps
js
or
push
int3
je
inc
xor
pusha
push
inc
cmpsb
add
test
dec
repnz
push
xor
rorb
data16
xchg
lods
imul
mov
cltd
or
push
lock
scas
out
ja
repnz
jbe
ja
sub
pop
cs
out
or
xchg
outsb
ror
sarl
inc
mov
sti
sti
and
loop
mov
mov
jmp
mov
es
ja
and
mov
xchg
testb
addr16
xlat
xchg
movsb
fld
sarb
ret
icebp
cmp
mov
lahf
call
insl
mov
outsb
int
xchg
sub
jecxz
pop
pop
pop
or
stc
enter
and
mov
mov
sbb
add
popa
pop
call
mov
addr16
mov
aaa
out
or
inc
add
xchg
cld
mov
inc
pop
fildl
and
adc
insl
fld
sub
mov
into
xor
cmp
jge
outsb
dec
scas
add
sahf
insl
ret
pop
mov
aam
jb
xor
popf
push
loopne,pt
lret
outsl
dec
int3
pushf
cmp
mov
movsl
adc
adc
jo
push
xorb
and
add
jp
push
inc
mov
faddl
jge
fldcw
xorb
xchg
jl
loopne
mov
xor
or
xor
lret
fisttpl
pop
enter
ja
xchg
movsb
inc
xlat
pop
aam
pop
xchg
inc
ficompl
sub
iret
push
sahf
and
xor
dec
pop
lods
cmp
adc
mov
mov
cmp
loopne
and
out
push
and
imul
push
or
addl
cmc
xchg
mov
lods
ds
loopne
xchg
fwait
imul
vmwrite
fimull
xchg
iret
xchg
aas
clc
mov
adc
out
mov
sbb
cli
aas
loop
jae
out
nop
test
arpl
mov
jb
adc
aaa
and
lea
scas
arpl
sub
inc
jmp
out
enter
push
js
bound
pop
sbb
xchg
mov
repz
adc
mov
pop
rcrl
cmpsb
testb
aas
jl
sbb
cmp
int3
inc
push
inc
sub
mov
mov
cltd
sbb
jl
cmc
lods
add
pop
dec
lret
push
xchg
pusha
and
mov
ja
data16
push
icebp
test
mov
xor
pop
lret
inc
inc
mov
scas
push
and
pop
jae
adcb
lea
je
mov
sbb
xor
clc
mov
mov
mov
push
inc
inc
in
into
and
fwait
mov
mov
add
out
or
push
cmpsl
mov
mov
and
lds
jo
mov
xor
pop
xchg
cwtl
jo
pop
inc
cmp
jno
inc
cwtl
sbb
xor
push
rcll
and
fidivs
mov
adcb
imul
sub
stos
pop
jp
mov
xchg
xchg
xor
andl
and
jns
inc
fmuls
test
rcrl
mov
mov
or
or
out
ja
xchg
inc
rcl
data16
xchg
dec
int3
insl
xchg
jmp
or
addr16
pop
jo
mov
add
and
repz
outsl
mov
mov
gs
sub
or
pop
jns
sub
aas
ffree
mov
imul
pop
xlat
ds
dec
push
arpl
int
mov
jmp
loopne
mov
mov
pop
pop
mov
push
xchg
std
test
or
jmp
bound
pop
push
aas
push
ljmp
cmp
das
and
in
loop
jae
add
aaa
mov
repz
lcall
test
fwait
add
cmpsb
cli
or
pop
xor
ffree
sbb
pop
test
xlat
rcl
mov
pop
popa
leave
pop
movsb
in
pop
add
and
lock
jno
stc
cmpsl
mov
xchg
pop
pop
cmpsb
jmp
jge
xchg
dec
cmp
mov
cwtl
pop
mov
mov
rorl
and
jle
cmp
lods
xchg
test
int3
and
and
push
popa
flds
push
inc
pop
sbb
add
push
add
clc
jl
and
fadds
les
cld
push
ds
or
or
fsubs
jnp
or
xorb
dec
test
jae
jno
jl
add
pushf
or
mul
push
xor
fwait
aam
xor
jle
repnz
sti
ror
sub
jge
repnz
fwait
mov
mov
add
dec
lcall
mov
inc
dec
ret
lret
imul
push
xor
dec
sub
pushf
leave
enter
rcll
inc
xor
and
adc
fists
push
cltd
daa
nop
jmp
mov
or
and
add
imull
lahf
jae
inc
mov
ret
sub
inc
lret
in
mov
pop
fwait
jmp
in
pop
stos
loop
out
mov
mov
movsb
xorl
push
in
xchg
fistl
inc
rol
inc
dec
int
sub
pop
mov
cltd
aam
mov
mov
push
xor
or
sahf
or
inc
rorl
xor
dec
sahf
cmp
sbb
mov
nop
xlat
mov
mov
xor
push
rolb
sub
into
lock
or
cmc
mov
xor
xchg
out
xchg
rcl
js
rorl
pop
test
mov
rclb
mov
mov
pop
dec
or
les
sub
xor
mov
mov
repz
and
ret
std
xor
jl
dec
and
sbb
xchg
aas
sbb
inc
adc
sub
sbb
mov
jnp
jl
jae
push
out
filds
movsl
add
call
pop
bound
push
sub
cs
pop
push
je
adc
shll
jns
mov
and
sub
sub
lock
rorl
sub
and
in
mov
addl
mov
push
xor
popa
xchg
or
add
movsl
leave
movsl
jmp
xor
lea
sbbb
ds
mov
das
sarb
pop
test
push
notb
jo
jno
jp
add
cmpsl
shll
jmp
inc
mov
int3
inc
inc
xchg
pop
sbb
add
ret
int
mov
test
cltd
clc
cld
add
fmuls
jmp
lahf
repz
xor
push
clc
jno
adc
enter
stos
add
pushf
cli
popf
rcl
xchg
test
sub
in
push
fstps
repz
out
aam
jecxz
or
fisubrs
mov
mov
stos
push
aad
out
cwtl
shrb
and
sub
mov
xlat
add
lahf
mov
popf
aad
adc
cmp
sbb
inc
pusha
es
pop
int
jge
mov
sti
ljmp
inc
mov
sahf
jmp
ljmp
jne
add
mov
call
call
mov
push
clc
sti
mov
add
lock
fs
shrb
leave
clc
mull
lds
jae
adc
fidivs
test
movsb
and
mulb
push
mov
je
xor
shll
lods
cs
xchg
xor
in
aaa
cs
in
outsb
jp
or
xchg
sub
inc
mov
movsb
pop
inc
and
cmp
mov
icebp
stos
push
xor
jbe
into
pop
push
je
jp
insl
jmp
or
mov
xor
subl
hlt
enter
cmpsl
mov
aas
mov
jmp
xchg
repz
fildll
lea
inc
jl
jae
or
ds
je
loopne
paddusb
idivb
mov
fwait
xor
jl
xlat
in
add
loopne
jbe
xor
pop
bound
iret
loop
push
gs
pop
add
lock
add
inc
shlb
loope
xor
jle
movsl
mov
add
and
mov
inc
sbb
cs
pop
mov
cmp
jnp
cmp
dec
loop
in
and
cltd
sub
jecxz
aad
loop
ss
dec
in
mov
cmp
sbb
arpl
or
sbb
rcrb
lcall
or
lea
iret
and
or
repz
clc
dec
daa
scas
cltd
repz
loope
into
and
out
fsubrl
dec
imul
fdivr
mov
out
das
insb
clc
jge
popa
ja
popa
cwtl
ja
enter
mov
adc
pop
jmp
sub
sbb
cli
xchg
fimuls
arpl
cmp
aaa
je
or
sbb
call
mov
inc
popf
push
test
or
and
pop
cmc
adcb
inc
xchg
mov
xchg
jmp
out
sub
shll
mov
inc
adc
jne
cli
cld
lahf
or
mov
gs
cmp
inc
lret
jp
xchg
pop
push
xor
cli
ds
jns
inc
fcomip
aaa
outsb
pop
mov
movsb
std
sarb
mov
ret
and
jns
jb,pt
xor
les
dec
and
push
xor
cmpb
xchg
push
arpl
add
lock
jae
lret
orb
or
or
inc
pop
ja
jno
or
bound
jecxz,pn
or
dec
movsb
pop
dec
mov
pushf
ret
cmpsb
fwait
aam
mov
xor
addr16
sbb
popf
mov
lods
xor
stos
cmp
orb
jbe
inc
in
pop
mov
outsl
pusha
cmp
push
pop
push
cmpsb
iret
pop
or
push
mov
mov
mov
mov
sbb
nop
dec
scas
shlb
scas
fistpll
cmp
cli
aad
cwtl
loopne
xorl
inc
popf
imull
and
mov
add
mov
in
jnp
add
mov
xorl
or
xor
adc
xor
out
push
pop
loopne
jmp
xchg
daa
pop
enter
jge
cmp
das
cmpsl
xor
mov
pop
adc
gs
mov
and
add
push
xchg
test
mov
jbe
gs
push
mov
sub
adc
push
push
lock
popa
push
dec
sub
out
cwtl
xchg
lock
enter
or
sub
and
add
test
movsb
outsl
popf
popa
mov
xchg
cmc
dec
cmp
mov
sarb
ficoml
sub
stc
jl
add
xchg
push
popf
scas
xchg
xor
jp
mov
sti
stos
cmpsb
xchg
cli
mov
sti
dec
sbb
mov
or
pop
xor
rcrb
jae
dec
ja
jl
add
xchg
int3
jnp
fsubs
lods
push
loop
outsl
mov
jae
sbbl
sahf
lret
outsb
punpckhbw
cli
out
xlat
ds
jle
loopne
add
xchg
stc
out
fwait
xchg
mov
in
outsb
testb
ret
pcmpgtd
or
es
pop
movsl
in
shll
cs
enter
loop
dec
and
xor
pop
aaa
mov
int
movsl
xor
adc
mov
xor
ror
sbb
jge
pop
loop
adc
mov
daa
pop
clc
rcll
gs
aas
lea
push
mov
push
add
mov
adc
xor
mov
push
pop
cwtl
shr
rcrb
add
xor
xchg
sti
sub
xchg
adc
out
lea
adc
mov
lea
push
push
into
pop
push
sti
and
add
stc
imul
mov
test
sbb
in
aas
adc
inc
push
sbb
jmp
dec
pop
negl
lods
and
inc
test
adc
pusha
or
lods
int
stos
jne
pushf
push
aad
mov
shlb
inc
call
dec
xchg
lea
sahf
mov
out
adcl
push
and
or
int3
mov
pop
pop
fmull
or
pushf
dec
movb
pop
outsb
sti
lcall
mov
cmp
call
fildll
and
push
fwait
fwait
hlt
sti
xchg
inc
aam
leave
stc
rcrl
xchg
cwtl
sub
xchg
ss
call
xor
fbstp
iret
fcmovbe
les
cltd
sbb
xchg
mov
and
jns
dec
lods
push
jmp
ja
test
pop
jno
orb
or
inc
popa
int
and
jns
adc
and
add
mov
pop
push
sbb
in
lcall
ds
xor
lret
cmc
adc
pop
xor
scas
and
pop
dec
sbb
ret
test
hlt
shl
cmpsl
mov
leave
mov
in
sub
leave
pop
rclb
adc
xchg
jns
bound
cld
mov
inc
mov
dec
add
lods
cmpb
orb
jns
aad
imull
inc
jl
adc
pop
cmp
outsb
jle
js
cmp
inc
inc
cwtl
mov
call
sub
add
pop
lods
cmc
daa
pop
aam
push
out
sbb
push
stos
mov
movsl
popa
xor
mov
outsl
jmp
xchg
mov
idivb
jp
lahf
mov
mov
ret
rcrl
jmp
nop
jae
push
lret
jmp
and
scas
inc
cli
add
movsb
in
sub
and
jns
xchg
sbb
test
push
dec
in
jno
pop
and
in
pop
jmp
xchg
pushf
outsl
into
xchg
aam
add
imul
add
jmp
es
imul
int3
arpl
rorl
adc
or
ds
sahf
inc
mov
pushf
push
pop
jg
das
inc
mov
mov
cmpsl
fwait
mov
aas
inc
and
lock
sarl
xchg
clc
outsl
jge
sbb
jge
fists
sahf
add
aaa
hlt
cmp
dec
mov
mov
jl
mov
or
mov
xchg
jb
and
clc
dec
imul
out
xor
xchg
jno
mov
or
adc
lods
push
push
fadd
and
aas
jae
ret
int
popf
sub
cmp
push
ja
lcall
ljmp
xchg
mov
inc
aas
or
testw
iret
iret
mov
cmp
out
push
cli
or
jle
test
mov
add
sub
mov
mov
stc
xor
inc
js
test
add
mov
sub
dec
lds
xor
shlb
or
sub
bound
and
mov
lret
sahf
mov
fdivrs
pop
xor
insl
in
pop
lcall
out
push
cmpsl
push
ja
inc
lock
push
mov
loop
popf
push
fs
dec
mov
mov
mov
lahf
repnz
or
shll
cmpsl
pop
fdivrl
rcrb
xor
cld
and
mov
imulb
out
lods
fwait
fwait
ret
mov
pushf
repz
lods
cmp
push
pop
inc
in
not
iret
fs
inc
sbb
cld
jl
jg
adc
clc
bsr
mov
sub
sub
cwtl
data16
mov
bound
and
xchg
bound
sbb
mov
subb
bound
cmp
jmp
in
arpl
dec
jge
or
shl
cmpl
xor
mov
pusha
sbb
xchg
jl
out
push
mov
dec
add
adc
cmp
mov
mov
js
lea
jmp
cld
xor
fs
mov
inc
nop
mov
xor
insl
aaa
shll
xchg
mov
mov
push
push
imul
imul
sbb
push
pop
lret
daa
out
lahf
xchg
jle
sahf
mov
lods
mov
int3
outsb
and
decb
pushf
sub
mov
lock
pushl
xor
push
sbb
lock
sbb
xchg
ret
push
loop
and
out
int
arpl
xor
shlb
decl
mov
fsub
cmp
cmp
or
fstp
pusha
mov
sub
mov
mov
mov
fwait
push
lcall
or
bound
mov
cwtl
fldcw
ds
push
movsl
out
rcr
negl
cli
dec
cmp
hlt
ljmp
mov
popa
lret
lock
adc
mov
xbegin
sbb
out
fimuls
add
dec
xchg
std
push
xchg
stos
and
insl
aam
shll
mov
inc
cmp
ds
data16
add
xchg
lock
mov
pop
lea
test
out
decb
and
stos
aas
jmp
fimull
fisubrs
xlat
mov
clc
mov
pop
jne
pmaxsw
nop
lcall
scas
push
test
mov
lods
dec
adc
sti
sbb
xchg
insb
mov
je
pop
lret
sbb
jmp
cs
xor
mov
jp
mov
add
cmp
push
mov
adc
stc
popf
adc
out
add
test
cs
rep
or
jns
cmp
lods
mov
jmp
loope
mov
outsb
std
pop
adc
mov
in
divb
add
cld
xor
lock
push
adc
iret
mull
sbb
pop
mov
out
xor
ret
pop
fmul
sub
repnz
fisubrs
add
out
push
out
push
and
jne
mov
daa
outsl
das
rcrl
in
fisubs
sub
mov
cld
cmp
push
fidivl
mov
mov
push
dec
add
ljmp
int3
int
mov
test
pop
loopne
gs
mov
xor
in
pop
movsb
cmp
mov
popa
mov
in
pop
insb
jo
iret
dec
xlat
add
inc
mov
or
cld
cmp
mov
gs
mov
dec
jle
jnp
outsb
js
shrb
mov
pop
add
pop
add
loope
adc
push
push
cs
cmpl
jnp
xchg
push
dec
jl
insb
pop
xorl
loopne
and
push
icebp
pusha
adc
add
xchg
dec
cmpsl
mov
push
pop
push
or
mov
xchg
mov
xchg
mov
push
pop
rep
cmpb
je
lret
shll
movsl
dec
repz
sub
negl
add
push
jge
xchg
movsl
inc
and
xorb
push
int
sub
xor
xchg
popa
push
xchg
sbb
sub
in
ss
popa
dec
lcall
icebp
adcb
lret
mov
sbbb
mov
ret
mov
dec
cmp
xor
push
daa
pop
clc
xchg
stc
lret
push
pop
enter
daa
les
and
nop
stos
fsubs
xlat
ud2
xor
into
jp
xchg
mov
xor
jno
jmp
ja
mov
jb
add
fdivr
mov
idiv
icebp
fsub
or
sub
mov
xchg
and
sub
xor
lret
dec
decb
ljmp
enter
sub
push
pop
int3
in
out
scas
add
insl
xor
sbb
sub
stc
repz
repnz
or
jne
push
int
mov
jmp
aas
mov
mov
adc
rorl
mov
pop
sbb
std
pop
lods
test
mov
es
lea
sub
pop
out
movsb
lock
adc
pop
iret
pusha
leave
xor
pop
fmuls
cmp
mov
xlat
mov
subb
out
mov
xor
add
into
arpl
outsb
mov
and
ret
inc
dec
popl
repz
mov
mov
push
pushf
mov
popa
repz
push
cmp
pcmpgtd
add
mov
mov
outsb
adc
adc
add
mov
lcall
inc
mov
mov
mov
fisttpl
in
adc
outsl
push
std
in
gs
stc
outsl
fstl
into
or
fstpl
fistl
dec
mov
cmp
das
adc
sysexit
sbb
fsubrl
clc
and
adc
clc
ljmp
loop
out
js
or
sub
sbb
scas
sahf
clc
lcall
test
out
or
inc
pop
adc
xchg
add
or
pop
mov
cwtl
out
jae
inc
dec
ja
mov
hlt
dec
sarl
jo
inc
or
mov
shufps
inc
mov
push
mov
xchg
jp
or
cmp
insl
add
cmp
mov
inc
pop
push
test
ret
test
mov
int
adc
fwait
movsl
lods
out
add
test
popa
mov
adc
imul
cmc
xlat
in
sub
jno
leave
inc
mov
jb
push
mov
stos
pop
fidivrl
pop
out
push
pushf
push
cs
mov
xchg
int3
dec
in
jecxz
push
sub
out
testb
jb
insb
lds
dec
aaa
mov
mov
std
mov
lods
pop
mov
jecxz
add
pop
pop
leave
in
push
cld
mov
cmc
and
fidivl
mov
gs
popf
out
jbe
and
xchg
notl
aad
pop
std
popf
fwait
and
popa
mov
pop
out
sbb
in
push
iret
xchg
and
jge
mov
test
cmp
dec
mov
jnp
cmp
or
in
fsubs
iret
xor
rcrb
movsl
adc
aas
jg
lret
test
cmp
xlat
dec
cmp
fbld
sbb
jbe
subb
cmp
std
pusha
pusha
in
sbb
in
cmp
xchg
mov
adcb
mov
popa
xor
xor
rorl
mov
nop
testb
mov
ljmp
and
lret
pusha
lea
push
push
push
pop
pop
xor
cmpsl
andb
cli
and
imul
cld
jg
jle
add
je
stos
mov
notl
popa
mov
push
leave
daa
mov
rol
fwait
jns
repz
push
cmpsb
xchg
push
popf
ja
scas
mov
mov
pop
loop
dec
dec
xchg
jl
fs
or
cmp
sbb
lcall
popl
out
inc
scas
loope
out
xor
cwtl
lret
insl
test
push
outsb
or
and
sbb
mov
mull
adc
sbb
arpl
xor
out
cli
and
or
das
push
mov
clc
or
pop
mov
jl
sbb
mov
pop
movsl
adc
je
shr
fdivrp
adc
icebp
push
dec
fldenv
add
adc
cmp
inc
and
add
push
int
jge
mov
mov
or
mov
out
out
repz
lcall
add
jnp
jmp
adc
push
imul
je
push
cmp
xchg
vaddss
ror
inc
mov
fwait
in
ret
movsb
bound
loop
mov
ljmp
int3
push
lahf
pand
test
cwtl
pop
mov
arpl
mov
sti
loopne
sbb
xor
cwtl
mov
je
xor
cmp
dec
popf
les
and
push
push
stos
test
pop
or
inc
enter
in
ds
cmp
rorl
lea
adc
inc
dec
add
outsl
int3
frstor
cmpb
xor
mov
outsl
in
push
popf
dec
flds
jle
ljmp
rcll
mov
pop
jnp
aad
cld
lock
push
push
shl
mov
mov
adc
dec
push
jmp
sti
fwait
xor
dec
dec
rcrl
cmp
add
inc
cmp
popf
and
in
pop
push
sbb
add
lods
lea
adc
mov
xchg
mov
jbe
pusha
push
cmc
rcll
cli
sbb
mov
mov
cs
inc
gs
jg
movsb
decb
pop
jo
out
xchg
mov
jbe
lods
stc
xchg
pop
jne
sub
std
movsb
inc
sbb
jno
xchg
bound
xchg
popa
mov
add
test
or
hlt
fisttpl
stos
outsl
je
sub
cmp
hlt
hlt
sbb
arpl
adc
xor
out
nop
xor
adc
cli
loopne
push
adc
mov
and
cs
jmp
push
jno
pusha
scas
cld
add
insl
mov
add
insl
add
sbb
adc
xchg
lahf
xor
popf
js
push
xor
dec
cmp
pop
bound
add
xlat
jnp
fwait
lods
loope
mov
cmp
movsb
in
not
jne
aas
mov
or
ljmp
jle
aad
leave
idivb
aam
dec
rclb
sbb
xchg
scas
mov
adcb
call
pop
mov
lret
pop
sti
xor
pop
clc
adc
and
adc
cmp
cmpsl
mov
in
sbbb
test
xor
iret
hlt
cmp
xor
dec
inc
mov
sbb
sbb
mov
or
xor
push
push
adc
mov
std
inc
sub
out
in
push
xchg
inc
inc
in
out
js
push
sbb
jl
sbb
aas
add
dec
repz
data16
out
xor
adc
or
out
push
sbb
rorb
and
mov
mov
adc
loope
or
xchg
je
js
inc
lret
lods
sbb
addb
aam
imul
cmp
cmovno
cmp
mov
addr16
ret
mov
mov
bswap
das
addl
xchg
fdivl
fnclex
cmpsl
arpl
sbb
int
sbb
pop
je
inc
mov
ss
sub
into
fdivs
call
jne
mov
add
dec
xchg
cmpsl
jle
dec
inc
in
imul
sbb
shll
cli
xor
cmp
rclb
lea
aam
sub
rcll
xchg
fs
popf
mov
mov
cli
jno
rcr
jmp
cmp
dec
addr16
cmp
adc
mov
movsl
shll
mov
pop
adc
mov
mov
popf
mov
insl
les
icebp
fnstcw
mov
mov
sbb
mov
xchg
xchg
ss
adcl
clc
insb
addr16
repz
repnz
or
adc
dec
sbb
mov
xchg
push
cltd
push
xchg
jae
insb
std
lret
jp
sbb
sub
push
jl
out
mov
pop
ret
lock
sub
sahf
or
out
mov
push
aam
mov
adc
push
aas
mov
or
insl
int
or
push
and
adc
loope
jne
dec
inc
dec
insl
jmp
push
jl
add
mov
mov
pop
pandn
sub
adc
sub
insl
pop
inc
in
pop
xor
jecxz
mov
inc
std
dec
jle
sbb
adc
push
cld
jle
jns
sahf
adc
xchg
xchg
add
cmp
cmp
fadd
inc
ss
sbb
mov
lods
jg
arpl
aas
cmpl
cld
test
mov
inc
inc
sbb
dec
xchg
xlat
dec
mov
ds
cmp
lret
or
repnz
and
arpl
nop
push
std
testl
in
out
sub
sub
xchg
cmp
ja
jbe
dec
adc
xchg
decb
inc
sbb
shlb
or
push
fadds
or
pop
dec
stos
jae
out
fstps
pop
xchg
sahf
loop
pop
call
xor
les
ltr
lods
sbb
xchg
pop
loope
insb
add
hlt
es
call
xchg
pop
add
aaa
adc
ret
popl
pop
add
dec
push
sbbb
shrl
adc
inc
pop
jno
arpl
test
mov
hlt
stos
fs
mov
fs
js
lods
ret
negl
popf
scas
xor
jnp
jns
xor
push
fwait
js
mov
jo
jp
xor
rcl
xchg
pushf
cmpsl
fdivrs
lret
mov
jbe
cmpb
mov
stos
xchg
jg
sti
mov
lahf
cmpl
sub
mov
leave
aaa
mov
pop
fdivrs
lret
or
cmp
jae
sub
jae
pop
shll
xor
xlat
pop
xor
cmpb
outsl
ret
pop
mov
xchg
repnz
dec
sbb
mov
dec
mov
adc
ret
aad
jb
cmp
or
fcmovu
sbb
jo,pt
push
je
dec
xchg
pop
and
jecxz
or
aaa
xchg
jp
inc
mov
call
adc
xor
mov
push
mov
xchg
xor
push
dec
popa
nop
jl
push
xchg
das
rcl
cmpb
aad
or
xor
clc
leave
and
movsl
aad
adc
cltd
mov
jb
shrb
or
lea
xchg
xor
or
jmp
cmp
xchg
js
shlb
or
add
pop
repnz
sahf
loope
aas
jmp
jg
sbb
dec
push
push
mov
inc
add
push
jecxz
clc
test
pop
sbb
clc
pop
mov
out
icebp
int3
leave
dec
inc
mov
test
shll
sbb
dec
inc
gs
test
mov
sub
sub
xor
in
cwtl
inc
test
xchg
xor
jmp
inc
pop
sbb
in
mov
repnz
jg
and
xlat
mov
mov
xor
sbb
xchg
pop
cmp
push
int
push
mov
or
mov
popa
jl
xor
hlt
js
pop
jb
jb
jnp
iret
lock
inc
jmp
push
pushl
push
push
int
jo
jmp
shl
add
roll
rorl
push
bound
add
in
sub
or
fsubrs
mov
mov
inc
sub
push
in
adcb
jnp
cld
cwtl
inc
inc
mov
arpl
in
jmp
cwtl
lcall
hlt
int3
and
and
cmpsb
arpl
inc
out
in
out
psrlw
adc
jnp
sbb
sbbb
idiv
inc
mov
pop
int
arpl
sbb
int3
push
add
adc
push
out
push
jb
pushf
pusha
stos
out
cltd
sahf
in
rcrb
rorl
fcomip
xor
lea
cmp
lods
jmp
dec
insl
aas
fidivs
out
adc
lahf
cmpsb
push
inc
fwait
pop
clc
loopne
loopne
sahf
push
in
insl
mov
popa
repz
or
pop
fbld
sub
aad
out
lds
and
inc
jmp
outsb
or
imul
dec
adc
xchg
jg
fisubrl
inc
in
push
mov
sbb
iret
xchg
push
xchg
scas
xor
push
cli
inc
xchg
shlb
pusha
or
ds
cld
fsubl
clc
gs
test
mov
xor
mov
pop
inc
notl
movsb
mov
sub
sbb
sub
sbb
and
lea
adc
or
adc
add
push
and
mov
scas
sub
mov
inc
ja
push
lods
sbb
lahf
or
jle
int3
loop
xorb
data16
adc
push
adc
xchg
mov
inc
pop
sub
dec
or
mov
push
push
add
lret
inc
sarb
scas
mov
add
xchg
mov
or
mov
clc
cmpsl
mov
lods
and
push
rcr
mov
sbb
mov
xor
out
shr
add
sub
cmp
cs
mov
xlat
mov
add
mov
pop
pop
ret
mov
stc
mov
sub
loope
add
sbb
leave
rcll
int3
push
aaa
xchg
leave
rcrl
sub
leave
cmc
das
sahf
mov
aas
add
vprotq
jmp
sbb
adc
jbe
mov
gs
rep
fcom
mov
mov
int3
mov
pop
adc
xchg
lahf
cmp
dec
mov
ja
or
dec
pop
addr16
addr16
push
aaa
mov
xlat
cmp
out
xchg
nop
aam
aad
xlat
lcall
adc
add
mov
fnstcw
out
ljmp
loopne
fwait
adc
pop
cmp
and
cmp
lcall
push
mov
jmp
push
push
in
stos
arpl
leave
out
lret
stos
cmpsb
adc
push
insb
sahf
icebp
lret
testl
jmp
mov
add
arpl
pushl
xor
or
jnp
inc
cli
and
sub
mov
or
mov
scas
jbe
mov
jae
out
xchg
xor
ljmp
xor
dec
lods
lahf
jno
int
fs
pusha
ds
push
scas
dec
out
fwait
xchg
push
hlt
cmp
push
enter
jo
pusha
cmp
mov
and
jno
mov
test
je
push
in
pop
xor
stos
lahf
sub
inc
sbb
pop
repz
orb
add
scas
xchg
mov
mov
jmp
xchg
shl
popf
lret
sub
sbb
lds
imul
shlb
jmp
jl
push
mov
les
mov
xchg
pop
cmp
mov
roll
cli
mov
mov
cmp
daa
jl
and
jp
push
jp
cltd
icebp
cltd
jp
pop
mov
inc
dec
scas
jne
test
push
stc
xor
dec
and
mov
mov
gs
push
jg
stos
cwtl
ss
mov
and
push
dec
dec
leave
jg
or
push
inc
test
jb
push
sub
mov
jo
jecxz
mov
fsts
add
jns
xchg
cmp
int3
adc
add
xchg
mov
add
mov
sbb
lahf
sbb
fwait
jge
out
repnz
fsubr
push
adc
imul
adc
and
stos
out
das
insb
movsb
cwtl
mov
mov
sbb
inc
roll
pusha
xchg
cmp
ret
xor
or
fdiv
ret
sbb
push
inc
push
imul
adcb
inc
push
ja
jecxz
mov
outsb
lret
pop
mov
es
cmc
mov
fiaddl
add
pop
cmp
adc
cmpsb
push
jmp
or
call
mov
jnp
jg
xchg
hlt
stos
daa
sub
sarl
xchg
int
sbb
cltd
cld
and
in
shll
or
lock
into
mov
mov
enter
pop
jo
pop
jl
bound
xor
stos
xor
mov
pop
stc
es
jmp
sub
dec
addr16
ljmp
pop
jl
insl
or
or
test
movl
xchg
imul
je
mov
lret
in
out
test
jno
sahf
cs
add
add
pop
push
mov
aam
shl
push
dec
add
loopne
lret
or
adc
aas
hlt
aas
jnp
dec
out
stc
test
testl
das
movsl
roll
push
push
sti
dec
fwait
pop
mov
mov
sti
push
imull
fst
pop
push
inc
jbe
in
add
xor
adc
shlb
dec
rcll
pop
movsl
push
sbb
and
cmp
jno
jmp
sbb
xchg
mov
push
mov
enter
dec
pop
and
divb
xor
sti
fiaddl
fidivs
rcr
push
inc
fwait
push
or
ret
sub
dec
out
dec
xchg
mov
xchg
xlat
jl
or
xchg
or
test
stos
push
push
and
fisttps
add
mov
decb
and
pop
adc
iret
fptan
out
int3
mov
sub
daa
jb
inc
mov
out
int
rcll
div
lods
scas
imul
inc
jg
jg
ret
arpl
stos
jno
dec
dec
fcomip
gs
cmpsb
mov
inc
sbb
stos
or
pop
xchg
inc
enter
cmp
push
js
and
jnp
xchg
inc
out
clc
mov
cwtl
loopne
xchg
gs
test
fwait
dec
xor
adc
pop
adc
jne
fidivs
loopne
jo
inc
fcmovnbe
ret
add
loop
pop
out
push
pop
lods
cli
and
rcrb
sbb
and
xchg
and
dec
mov
or
repz
ret
dec
mov
xchg
push
mov
dec
lea
push
adc
addr16
dec
ret
push
cmpsb
ss
mov
pusha
cmp
or
or
xchg
loopne
xlat
and
cli
push
ja
sbb
push
xchg
and
sbb
add
xor
lcall
or
xlat
add
jno
aam
mov
sbb
loope
rorl
xchg
mov
les
xor
add
sahf
repnz
add
daa
cmp
add
fs
jae
ret
adc
fcoms
stos
cmp
mov
fsub
xchg
and
scas
outsl
pop
ror
inc
stos
rcrl
push
xor
pushf
xor
xor
lods
sub
faddl
sub
pop
or
lods
xchg
xlat
imul
inc
sbb
lret
std
or
add
ret
fstps
outsl
sbb
mov
test
or
adc
mov
inc
sarb
leave
add
cmp
stos
adc
inc
aas
or
scas
sub
mov
push
arpl
add
pop
jp
pusha
jmp
pop
sti
test
jo
inc
mov
pop
je
jl
mov
cltd
fsubrs
cmp
push
dec
mov
jp
fsubrl
or
daa
push
dec
xchg
and
or
sub
xor
sbb
inc
sbb
xor
push
push
mov
pop
js
cmpl
cmp
pop
fildl
jp
push
jg
adc
xlat
js
sub
out
xor
mov
sbb
jmp
sbb
push
test
cmpsl
outsb
mov
inc
xor
xchg
into
nop
pop
sub
or
cltd
inc
xor
scas
inc
mov
add
xchg
sub
xor
jmp
in
add
lock
stc
in
cmp
leave
inc
xor
out
mov
pushf
add
cs
fsts
aaa
add
cs
adc
mov
insb
mov
pop
xchg
xchg
sbb
xchg
or
and
stos
mov
insb
pop
pop
jo
in
in
jne
in
sub
mov
lds
cmp
pop
jbe
jg
popa
lock
lds
outsb
mov
xor
inc
jo
lods
jge
pop
and
ret
lret
imul
cmp
pop
cmp
adc
rol
jns
jp
adc
fisubrs
push
mov
js
pop
aaa
mov
addr16
aad
mov
push
testl
add
daa
js
xchg
hlt
rcrb
add
movsl
cmp
shrl
gs
jle
fisubrl
xchg
clc
ds
dec
xor
push
sub
sbb
and
ficomps
adc
mov
lret
sub
push
js
popa
in
xchg
popa
push
lods
xchg
sbb
sub
sbb
jmp
sbb
jo
in
pop
out
push
aas
xchg
sub
in
cmp
rolb
cmp
inc
std
sbb
jle
dec
dec
mov
in
sub
repz
mov
repz
imul
add
push
push
aas
mov
mov
sub
imul
jle
add
mov
dec
xlat
mov
fwait
sbb
cli
adc
mov
sub
in
scas
shrb
cmp
xchg
pushf
js
push
mov
cld
add
lcall
jns
andl
dec
fisubl
xchg
fmul
out
adc
push
adc
pop
dec
sbb
mov
jmp
inc
std
cmpsl
decl
stc
mov
xchg
xchg
xor
lods
inc
sub
arpl
push
out
pop
jo
popf
loop
int
push
daa
pusha
test
xchg
incb
popa
idivb
ja
jp
pop
pop
jle
loop
and
popa
fildll
fisubrl
gs
loope
aam
mov
mov
mov
mov
ja
xor
lret
scas
test
xchg
rep
xchg
pop
and
add
cmp
pop
jbe
andl
inc
in
mov
jg
mov
add
arpl
shlb
movsb
jge
dec
push
add
mov
divb
lods
cli
xor
std
popf
aaa
shlb
fadds
pop
inc
sbb
lcall
andb
shl
add
and
lcall
aad
mov
adc
loop
aas
sbb
mov
inc
lods
sbb
adc
neg
cli
xor
pusha
stc
icebp
movsb
rcr
ds
cltd
adc
sbb
loope
in
xchg
leave
shll
xor
aam
dec
cmp
cmp
mov
out
mov
outsb
add
push
int3
add
xchg
push
and
cmc
pop
push
imul
sub
pop
jae
fs
inc
xor
in
mov
stos
in
inc
push
cli
rorb
sub
mov
inc
xor
insb
js
sbb
psrad
mov
xor
hlt
scas
jecxz
aam
cmp
subb
or
popa
push
nop
xorb
imul
xlat
cld
pop
mov
and
mov
mov
hlt
pop
ss
push
xlat
mov
and
mov
test
pop
mov
jmp
sbb
cmpsl
mov
add
cmp
movsl
addl
imul
pop
je
aad
jns
sub
add
and
dec
sbb
mov
sbb
sbb
jne
inc
push
mov
fidivs
shr
adc
push
or
inc
xchg
push
gs
xchg
popf
test
sub
and
mov
rclb
fwait
sbb
adc
sub
push
xor
cmpsl
jns
rolb
pop
int
fsubl
push
aam
pop
mov
lea
inc
push
mov
dec
lock
adc
in
bnd
rcrb
into
ficompl
mov
rol
movsb
ffree
stos
lret
push
shr
xlat
mov
test
cmpb
push
fisubs
ss
icebp
dec
inc
mov
add
mov
rolb
lret
jns
out
pushf
frstor
adc
lret
mov
xchg
push
stc
mov
jo
repnz
test
mov
sbb
movsb
inc
xchg
jbe
das
cli
leave
js
adc
add
xchg
pop
cmpsb
bound
mov
lahf
shrb
stc
lods
push
dec
jge
fsts
inc
and
cli
adc
addr16
or
mov
incb
inc
xor
add
add
xchg
out
cmp
shrb
push
jge
push
add
lcall
pop
loope
movsl
pop
movsb
xchg
hlt
sbbb
mov
inc
mov
push
sarl
cmc
xchg
jp
lahf
dec
cwtl
or
outsb
inc
mov
sti
push
or
les
pop
int3
or
sbb
dec
mov
andb
xor
adc
fisubrs
aam
dec
lcall
fcmove
mov
push
lret
add
pop
inc
dec
mov
popf
pop
mov
adc
nop
xor
push
or
add
test
lret
fsubr
mov
push
hlt
xchg
shl
call
push
add
adc
sub
sbb
inc
mov
rol
jmp
shlb
arpl
xchg
mov
mov
std
shl
decb
cmc
mov
jmp
test
xor
loop
pop
xor
lods
adc
loopne
mov
leave
cmp
or
cmc
mov
jno
sbb
pop
out
mov
sub
sub
out
imul
dec
pop
jns
pop
or
sub
adc
sbb
or
push
test
jno
add
test
hlt
push
stos
imul
pusha
adc
pop
xchg
dec
inc
push
lcall
lods
rcrl
pop
rcrb
sub
push
shl
xor
inc
out
adc
ja
out
add
shl
lret
imul
pop
pandn
mov
lcall
les
cwtl
or
cmp
stos
inc
subb
les
mov
cmp
cmp
xor
push
pushf
out
je
xor
push
dec
imul
pusha
outsl
xchg
jns
inc
push
sbb
pop
addr16
mov
sub
gs
jmp
outsb
pop
dec
in
or
and
jns
push
fnsave
push
mov
pop
js
pop
xor
pusha
add
adc
dec
repz
cmp
gs
push
cmp
xchg
scas
pop
int3
xchg
adc
or
push
dec
inc
dec
bnd
cmpsb
lods
jae
dec
fsubr
insb
test
xor
cmp
out
sub
int
popf
cmpsb
cs
pop
push
jl
std
shrl
sbb
jg
jb
gs
stos
sbb
adc
pop
pushf
push
jne
lcall
xchg
outsb
xor
push
xor
es
stc
mov
sbb
mov
imul
inc
cltd
xchg
inc
scas
ror
inc
dec
inc
mov
mov
xchg
push
shll
push
xchg
pop
jmp
xor
push
loop
pop
mov
mov
daa
cmp
pop
xor
fsubrl
rol
sbb
sbb
roll
icebp
mov
dec
cmp
mov
push
cmp
mov
scas
pusha
sbb
push
push
or
imul
shlb
movsl
or
add
and
adc
mov
mov
or
pop
adc
imul
test
out
adcl
loopne
lods
fldt
lods
jecxz
rol
insl
adc
roll
aaa
daa
pop
imul
jno
sub
inc
mov
nop
pop
dec
ljmp
push
movsl
mov
clc
popa
cmp
dec
inc
mov
pop
out
cmc
ja
enter
jg
add
in
aaa
js
imul
or
in
adc
lds
fisubrs
sahf
lock
lret
pop
push
mov
adc
arpl
push
inc
ja
sbb
xchg
loopne
into
and
or
sbb
sub
fwait
test
inc
xchg
rolb
inc
testl
and
jns
jbe
add
lea
movsb
shrb
shll
inc
cmp
in
aad
mov
inc
mov
aaa
pop
fs
push
stos
sbb
inc
and
jle
leave
pop
out
imul
test
and
ljmpw
aad
outsl
fsubrp
inc
lods
mov
call
or
inc
fisttpll
leave
cmp
ret
xchg
cmp
popf
xchg
mov
movsb
pop
push
jmp
xor
and
lods
push
pushl
push
and
sub
loopne
loop
cmp
enter
mov
or
jmp
xor
ja
hlt
gs
scas
mov
btr
psubusw
sub
fdivrs
xor
data16
cmp
adc
stos
in
xchg
cmp
push
dec
stos
cmpsb
pusha
xchg
pop
clc
and
frstor
xchg
adc
sbb
mov
sbb
jmp
cwtl
xlat
sub
stos
lods
loopne
mov
inc
out
jb
dec
fsubrp
scas
pop
out
xor
gs
nop
adc
jl
movsl
inc
mov
mov
out
jno
jge
fsubrs
jbe
in
and
es
insl
cmpsb
mov
jnp
add
je
div
scas
pop
inc
fiaddl
xor
ret
ret
rcr
mov
bnd
mov
mov
and
stos
mov
xchg
pop
fildl
aas
gs
loop
pop
out
faddp
mov
repz
mov
fcom
cmp
push
aas
sbb
mov
cld
ret
jg
in
mov
cwtl
test
sub
mov
imul
int3
outsb
mov
arpl
push
fisubs
push
lea
xor
xor
std
mov
test
sbbb
insb
bound
cld
inc
add
ja
push
push
sar
adc
add
into
dec
or
push
add
xchg
push
xor
je
cltd
mov
sahf
jno
int
push
adc
dec
adc
sbb
sbb
negl
mov
in
clc
mov
or
in
pop
cltd
inc
add
xchg
cmpsb
xor
xchg
jg
push
ret
jmp
dec
pop
mov
mov
or
adc
shlb
jg
inc
inc
repnz
push
dec
push
or
mov
mov
pop
jmp
test
or
das
mov
sbb
sbb
add
inc
jp
xor
push
mov
loop
push
adc
or
pop
shrb
lds
cmp
dec
fldcw
pop
sbb
xchg
sbb
scas
cmpsl
mov
shrb
leave
xchg
dec
xchg
bnd
dec
aaa
icebp
jge
test
bound
std
loope
push
out
push
outsb
cmp
jnp
aaa
rorb
scas
cmp
sbb
loop
mov
cwtl
nopl
jmp
and
mov
ds
sub
jecxz
mov
dec
sbb
push
cmp
pushf
inc
push
jmp
loopne
sub
jnp
arpl
add
popa
push
in
sbb
push
in
mov
rcl
jb
push
pop
aam
lret
cmp
sub
push
cmp
sbb
in
lahf
or
test
cwtl
stc
sbb
insb
insl
push
lret
or
enter
lock
xor
jne
iret
pop
xchg
loopne
rorb
pop
push
leave
loope
lea
adc
sti
sarb
sub
pusha
imul
push
adc
push
js
inc
into
das
repz
add
jb
pop
sub
dec
sub
cld
mov
jb
jno
daa
sub
cmp
scas
je
js
mov
and
ret
ret
loop
ljmp
jae
test
mov
lds
addb
or
pop
lahf
push
pushf
push
out
outsl
add
adc
aas
sar
fwait
shl
push
mov
pop
sbb
pop
scas
addr16
mov
outsb
sub
subl
sub
sbb
imull
mov
inc
pop
dec
xor
and
mov
dec
stos
mov
mov
imull
push
mov
dec
push
movsb
sub
shrl
jecxz
roll
xchg
add
fbstp
std
test
push
push
loope
pop
scas
stos
stc
stos
jle
sbb
lret
sub
inc
fwait
mov
out
rcrb
pop
repz
ss
xchg
lods
stos
pop
mov
and
dec
jbe
nop
shr
addb
call
cmpsb
inc
out
insb
imul
ds
scas
test
cltd
xor
mov
fs
sbb
std
pushl
and
fdivrl
iret
outsl
repz
mov
daa
xchg
ljmp
add
mov
fisubrs
ss
imul
inc
ja
aas
testl
or
mov
fucom
sti
pop
push
sbb
cmp
or
imul
lods
and
mov
cmp
inc
mov
dec
je
xchg
ss
xor
fldl2t
fs
pop
xor
pop
pop
sbb
inc
inc
rclb
xor
cmp
movl
mov
ja
push
adc
cmp
fmull
xchg
ret
cmpl
xor
sub
cmpsb
sbb
loope
pop
pusha
scas
jnp
pushf
pop
mov
push
or
dec
dec
rcll
mov
pop
hlt
fmull
inc
sub
iret
les
mov
loop
adc
adc
jbe
insl
and
fwait
mov
sbb
xor
cmc
mov
cmp
or
rorb
cmp
nop
lret
out
in
addr16
pushf
ret
movsb
push
out
or
stc
inc
popa
loope
push
mov
mov
fsub
lcall
lea
mov
lret
xchg
mov
test
insb
sub
cltd
lret
int
test
mov
std
jg
fiadds
inc
pop
lret
jnp
jp
mov
js
jp
aad
lret
outsl
add
std
sub
mov
scas
xchg
btr
mov
mov
divl
push
jns
loope
ficompl
fistpll
dec
adc
les
pop
int3
movsb
jno
jecxz
jno
imul
sbb
sub
mov
repnz
jo
sbb
sahf
dec
pop
sbb
into
cpuid
push
jbe
daa
pop
sahf
addr16
pop
lcall
cmp
xchg
push
xor
cld
add
and
into
cmp
sbb
lcall
dec
out
sub
xor
stos
add
lea
sbb
mov
repz
inc
scas
idiv
mov
insl
roll
inc
and
fs
imul
adc
cmp
aas
in
jge
pop
test
les
mov
test
arpl
pop
icebp
cmpsl
fistps
imull
mov
sub
mov
mov
jmp
popf
testb
mov
jecxz
cmpsb
shll
pop
adc
xchg
jne
aam
ret
loopne
push
es
pop
ror
std
in
push
jbe
xchg
push
push
cmpsb
jbe
sbb
aaa
adc
mov
xchg
push
mov
adc
push
mov
out
fcmovbe
mov
pop
xchg
xor
repnz
std
imul
or
int
fistps
and
je
int
adc
add
int3
les
out
xlat
inc
jge
inc
movsl
push
cmp
stos
adc
push
or
add
lret
mov
out
in
out
enter
inc
stos
mov
fmuls
xchg
dec
mov
pushf
xchg
jge
into
mov
pop
fnstsw
pusha
sub
push
or
push
add
pop
mov
rcrl
imull
in
in
xchg
xchg
fimull
shl
adc
and
cmc
test
xor
rclb
sbb
lock
push
in
arpl
mov
addb
shl
adc
push
xor
ret
and
stos
lds
cltd
mov
fbld
into
int3
xchg
loope
outsl
xchg
or
pop
or
ja
ja
movsl
mov
adc
mov
mov
jnp
or
and
pop
sahf
or
sub
mov
mov
push
arpl
fisttpl
lret
lahf
jb
mov
lods
lret
fcompl
jp
jmp
lahf
cwtl
pop
inc
dec
or
adc
scas
leave
loop
xchg
mov
mov
mov
mov
repz
lock
and
fisttpl
inc
cmpsb
and
stos
push
scas
push
mov
pop
dec
out
fsubs
jle
mov
stos
sbb
lcall
jno
lret
je
insb
ss
fwait
mov
and
jne
sbb
push
hlt
lcall
mov
dec
in
cmp
adc
cwtl
mov
jbe
mov
xchg
test
pop
fisubrl
imul
mov
scas
arpl
lods
sub
lret
jo
cli
jmp
jbe
inc
mov
adc
jb
lea
cs
outsl
push
inc
shlb
int
xchg
or
mov
dec
aad
bound
insb
push
scas
loopne
popa
sbb
movsb
mov
orl
cmpsl
mov
rcll
stc
aam
mov
sub
js
jp
lds
mov
outsl
test
in
jmp
aad
sub
repnz
pop
sub
lahf
popf
mov
hlt
mov
outsb
fdivrl
or
sar
ja
jmp
into
fdivp
inc
es
std
cmpsb
add
inc
or
test
add
jns
sbb
xchg
push
insl
hlt
mov
loopne
mov
vpunpcklqdq
cltd
mov
pop
jge
add
cmc
mov
out
das
shrd
or
into
mov
adc
mov
mov
rcl
movsb
loope
or
shr
arpl
or
jno
pusha
cmpsl
clc
xchg
cmp
jo
lcall
xchg
in
sub
pop
or
push
in
stc
mov
insb
dec
sbb
and
cmpsl
lcall
jge
or
mov
cmpsl
repz
fwait
adc
jle
jnp
pop
dec
xchg
leave
or
cmp
subb
mov
dec
and
shll
loop
ret
outsl
test
jge,pt
das
inc
jmp
push
test
mov
push
sub
dec
sbb
cmp
sahf
sub
pop
lret
imul
out
ds
pop
and
inc
dec
leave
in
or
ror
out
sub
adc
xchg
push
mov
repz
outsb
addr16
out
pop
or
test
cmp
or
test
loopne
add
sarl
ja
dec
aaa
fidivl
fldpi
arpl
adc
dec
push
pop
clc
insb
inc
xor
ret
ss
mov
and
fcmove
push
imul
mov
mov
into
inc
shlb
outsl
std
xor
lods
ret
jbe
pop
cmp
jbe
pop
inc
imul
push
sbb
jl
popa
dec
in
push
xchg
mov
xor
pop
push
push
imul
repnz
xor
out
adc
push
adc
mov
pop
fiadds
xchg
pop
pop
push
cli
je
mov
lahf
aas
sbb
and
ss
jno
push
es
aas
ret
imul
jmp
mov
inc
and
lret
jp
push
sbb
leave
ljmp
fcoms
and
jecxz
lret
push
mov
push
data16
xor
std
cltd
dec
mov
outsl
sub
in
inc
arpl
cmpsl
mov
aaa
cli
mov
insb
aam
fstl
fstp
into
enter
loopne
ret
inc
and
iret
jge
inc
movd
pop
outsb
cld
jg
xor
cmp
sub
xor
push
xlat
jns
push
es
dec
mov
jnp
push
xchg
insb
adc
xchg
dec
mov
and
pop
movsb
es
test
mov
add
xor
sub
and
xchg
cmpsb
jb
pop
inc
lahf
fimull
fdivrp
xor
dec
mov
lds
xor
mov
xchg
jbe
and
pushf
mov
std
es
dec
push
leave
xchg
lds
pusha
or
insl
lock
mov
sbb
xor
movsl
sti
cmp
fimuls
cmp
in
shll
mov
jnp
scas
in
cwtl
pop
push
jo
mov
jo
into
jecxz
jmp
pop
dec
test
xchg
gs
imul
push
nop
push
dec
xchg
pop
or
pop
jp
ja
leave
out
jmp
jo
loope
setl
ret
sbb
pop
adc
sbb
mov
shlb
or
pop
clc
jbe
dec
imul
jne
mov
add
inc
out
hlt
and
mov
mov
into
out
adc
rcrb
stos
lock
xor
jecxz
out
xchg
xor
in
jecxz
or
sarl
jnp
mov
jae
mov
jb
insb
les
mov
out
add
insb
push
sbb
jecxz
pop
adc
shr
add
mov
adc
cld
cli
ret
add
in
ljmp
icebp
sahf
or
jl
cmp
insl
lret
add
scas
repnz
pop
inc
dec
cmpsb
mov
cltd
mov
repz
imul
pop
int
shl
pop
pop
test
or
leave
call
jmp
push
arpl
lea
or
in
mov
hlt
inc
movsl
dec
daa
xor
xlat
ss
mov
inc
cmp
cmp
cmpsb
inc
addr16
in
stos
iret
fcomi
jecxz
or
jmp
mov
icebp
aas
gs
pop
dec
push
arpl
mov
jecxz
out
cmp
std
pop
enter
nop
mov
push
sbb
movsb
mov
pop
add
fistpll
pop
repz
aad
fcmovnu
jmp
ret
add
lret
pop
jno
roll
repnz
aas
mov
jl
imul
imul
adc
stos
sub
mov
xorb
aas
fadd
push
aad
in
cmp
in
movsb
cmp
lret
out
loope
mov
lcall
xor
std
add
popf
push
fimuls
imul
and
shrb
mov
xchg
mov
cmp
adcb
jb
ret
cmp
mov
mov
mov
pop
cmp
cli
das
dec
lahf
or
and
xlat
iret
mov
mov
fnstcw
pop
sbb
push
mov
sahf
sub
mov
sbb
or
sbb
or
cmp
mov
adc
out
sbb
xor
adc
ljmp
je
jge
sbb
stos
stos
mov
mov
add
stc
and
jo
in
dec
sub
add
and
fwait
lds
popa
jbe
add
mov
in
subl
xor
jb
sub
and
inc
sbb
push
pop
dec
mov
mov
inc
xchg
int
mov
clc
mov
fdivs
jmp
sub
mov
xchg
pop
cmp
pop
xchg
sbb
ljmp
mov
jl
dec
mov
cmpsl
pop
push
clc
mov
add
jno
or
shl
stc
adc
bound
divb
pop
fildl
movsb
addl
popf
mov
and
pop
fwait
insb
int
push
pop
aam
push
ret
mov
push
arpl
dec
sahf
cmpsb
fsubr
sub
sbb
in
in
testb
lahf
sub
lock
mov
test
jb
fcmovb
add
mov
shl
enter
sbb
push
hlt
or
or
fsubl
mov
adc
push
nop
jg
bnd
mov
mov
lods
adc
jle
fldenv
shr
enter
mov
add
or
push
or
stc
dec
and
dec
out
fdivrl
repz
sbb
mul
cltd
pop
divl
lret
das
jmp
fistpl
outsb
mov
mov
jle
out
psubsw
andl
sbb
sbb
les
cmp
jbe
add
xor
mov
adc
popf
lods
push
dec
jmp
mov
mov
cmp
xchg
adc
cld
pop
push
dec
and
xor
push
push
shll
icebp
ret
dec
or
fucom
sti
pop
into
jg
adc
xor
pushf
test
jmp
loop
push
cli
xchg
and
push
movsl
jecxz
in
add
jnp
cld
push
test
stos
push
sti
add
popf
fwait
addr16
add
mov
cltd
jae
incl
and
mov
imul
in
fwait
out
insb
test
xor
add
mov
into
ds
pusha
dec
sub
aaa
or
pop
clc
add
test
popa
dec
incb
xchg
bound
loop
push
sbbl
cmc
sub
lret
sub
mov
repz
push
push
push
add
movsb
and
outsb
clc
add
rcrl
scas
mov
push
cs
push
test
pop
lds
xchg
mov
pop
loop
stos
sbb
and
xchg
dec
mov
inc
out
adc
sub
mov
jl
sub
gs
bound
pop
cmp
jbe
push
movsl
pop
mov
fwait
ret
in
dec
mov
imul
psadbw
mov
xchg
and
popa
dec
stos
loopne
xchg
cmp
jbe
loope
xor
sbb
lret
ja
fbstp
or
scas
jl
imul
push
mov
push
cld
inc
pop
xchg
fbld
popf
outsl
push
outsb
cmp
mov
mov
add
aaa
mov
adc
mov
mov
sub
xchg
and
ficomps
pop
popf
mov
shl
hlt
pop
push
xchg
cmpsl
mov
dec
stos
push
or
in
xchg
xorl
sbb
cmpsb
lret
mov
callw
xchg
popa
test
dec
add
sub
mov
push
test
push
mov
sub
sub
mov
stos
sbb
cmp
xor
lret
add
push
aaa
adc
cltd
lret
dec
roll
and
cli
mov
and
repnz
test
add
shll
stos
cmp
mov
in
jo
dec
dec
icebp
dec
jae
or
mov
pusha
dec
scas
addb
and
insb
and
sub
add
add
les
idivl
cmp
or
js
xor
movsl
jmp
jl
test
ret
jmp
mov
fnstenv
inc
xor
push
scas
or
std
fidivrs
cli
xchg
mov
call
scas
outsl
adcl
in
rcll
cmpsb
enter
jg
xchg
sahf
cmp
fucom
push
and
cld
inc
push
push
aad
fisttpl
mov
xchg
xchg
xchg
lods
in
push
stos
ss
sbb
bndldx
mov
sub
cmp
and
cmp
or
push
xchg
imul
icebp
movsb
dec
test
lret
cmpsl
ret
lds
addr16
mov
cld
cmp
movl
adc
cs
sqrtps
push
nop
faddp
in
xchg
jbe
adc
jae
mov
push
sbb
mov
fistpl
ret
jge
arpl
and
push
addr16
xchg
stos
xchg
iret
push
sbb
mov
xor
push
mov
xor
sbb
mov
dec
je
pop
frstor
push
test
scas
mov
push
movb
insl
std
mov
and
xor
dec
xor
insl
or
jmp
lahf
jnp
shrl
repnz
ljmp
fsubs
add
pushf
in
and
lea
sbb
jb
pop
test
pop
dec
and
out
fs
mov
test
jl
sti
mov
ljmp
out
into
ljmp
mov
aas
loope
setle
enter
shll
xlat
inc
imul
repnz
scas
mov
movsb
mov
insb
cli
repz
cmc
bound
lea
or
dec
cltd
aas
pop
cmp
cli
pop
into
cmpb
jle
sub
insl
in
adc
mov
out
scas
cs
fmulp
push
push
adc
dec
xchg
jo
dec
hlt
nop
stos
pop
sub
pusha
inc
jmp
adcb
int3
repnz
dec
cltd
xchg
inc
stos
pop
pop
xchg
jbe
stos
lahf
adc
jle
ds
in
xlat
xchg
inc
mov
jecxz
or
pop
xor
loop
fistps
xor
mov
repz
fprem
jo
into
scas
sub
imul
stos
movsb
xchg
icebp
loopne
scas
cmp
hlt
fbld
cmpb
mov
xchg
pushf
add
jle
sahf
mov
arpl
out
shll
jb
stos
pop
push
jge
pusha
pop
scas
insl
std
pusha
xchg
hlt
lahf
cmp
leave
sub
adc
push
xchg
loop
xor
cmp
pop
mov
imulb
or
push
mov
imulb
inc
dec
je
xor
xor
adc
leave
jge
sahf
xor
mov
pop
stos
leave
jl
sbb
xchg
mov
pop
sbb
push
hlt
movsb
mov
inc
jmp
lea
xchg
mov
mov
xlat
int3
cmc
and
dec
or
mov
loope
inc
push
je
pop
loop
std
faddl
lret
sar
mov
mov
sbbl
add
leave
and
fsts
lahf
jp
test
and
outsl
xchg
cmc
or
test
stos
dec
test
cmp
int3
unpckhps
xchg
add
pop
mov
jge
jne
imul
shll
adc
pop
dec
sbb
push
fdivrs
lcall
popf
repnz
mov
mov
aad
pushf
dec
mov
fst
and
push
adc
mov
inc
sbb
addb
mov
push
dec
push
ljmp
test
push
mov
cmpsb
loopne
mov
cs
add
aad
fnsave
jno
js
loop
or
sub
sub
test
insb
mov
hlt
mov
adc
int3
xlat
lea
shll
das
xor
outsl
jp
das
call
test
aam
hlt
mov
mov
fldl
cmp
divb
push
pop
shlb
xor
add
sub
gs
and
outsb
sub
lods
mov
sbb
ret
dec
cmp
je
out
popf
pop
enter
push
adc
sub
jg
mov
push
hlt
stos
mov
push
stc
test
dec
cltd
lea
orl
push
ds
dec
cld
or
cs
addl
cmp
jmp
subl
push
push
mov
and
and
dec
pop
pop
cmp
loop
mov
lret
and
imul
jns
push
sti
sbb
mov
jnp
dec
xchg
sub
xchg
cmpsb
pop
sbb
mov
shrl
xor
fcompl
mov
or
movl
rolb
out
popa
stos
jmp
xor
mov
cmc
push
add
pop
add
fisttpl
xchg
fwait
inc
imul
mov
inc
sub
outsb
cmp
xor
movsb
add
dec
push
cld
into
xor
push
cmpsb
rorl
shl
inc
out
adc
or
cltd
inc
into
inc
insb
and
stc
mov
in
gs
std
repnz
add
jnp
sub
mov
lea
stos
jbe
cs
cmpsb
je
sbb
fisubl
sahf
imul
lods
xor
push
pusha
push
loopne
leave
xchg
inc
dec
sahf
imul
jge
adc
inc
sub
enter
xchg
pop
imul
sub
mov
add
out
in
loope
xchg
adc
dec
add
jnp
lds
popf
into
or
pushf
daa
insb
push
out
lods
gs
cmp
mov
mov
bound
pop
roll
ret
repz
mov
jmp
cs
inc
pusha
int3
sbb
xor
mov
sti
inc
or
in
and
push
mov
insl
mov
int3
jb
gs
adc
and
sbb
dec
pop
inc
adc
cmp
push
cmp
lret
notb
and
daa
pop
push
call
sahf
and
push
in
stc
sub
sti
or
sbb
mov
cmp
std
jbe
stc
jmp
adc
mov
xor
jg
sbb
adc
jg
loop
mov
fcompl
aad
lcall
xor
xor
mov
shll
jle
push
insl
ficompl
add
push
xor
mov
xor
pop
es
scas
fs
scas
stos
cwtl
push
cmp
lcall
dec
cli
add
cmp
insb
dec
jge
and
lret
arpl
xchg
cld
mov
ss
mov
fsubs
xor
imul
push
movsl
cmpsb
jecxz
dec
cmp
rol
out
aam
xor
and
push
mov
sub
test
pop
mov
mov
xchg
sub
and
pop
rol
shl
push
jnp
sbb
icebp
or
and
aaa
and
cltd
imul
jnp
das
add
or
pop
inc
flds
or
insb
pop
inc
movsl
into
jnp
pop
adc
das
push
push
xchg
xchg
arpl
adc
in
pop
xchg
ror
mov
mov
jns
insl
call
push
rolb
movsb
call
hlt
dec
mov
addr16
mov
dec
pushw
adc
jne
dec
or
mov
pusha
sbb
push
fldenv
sub
test
test
call
sarl
les
pop
je
sbb
mov
xlat
jne
xchg
int
jne
xchg
shlb
xchg
jae
xchg
leave
fwait
mov
adc
jl
lret
dec
mov
push
aas
sbb
scas
mov
loope
xchg
popf
cwtl
out
jl
outsl
xor
mov
cmp
imul
cmp
mov
or
pop
xor
or
sub
lahf
dec
mov
adc
sub
into
sub
cltd
in
cmp
arpl
data16
jle
mov
sbb
xchg
in
mov
mov
or
mov
rclb
scas
sub
aas
negb
icebp
enter
pop
xchg
xchg
or
repz
adc
jmp
dec
dec
ds
add
pushf
sbb
inc
sub
inc
or
rcr
inc
iret
mov
sbb
nop
and
loope
testl
push
mov
or
push
ret
loop
xor
outsl
push
mov
enter
cmp
dec
sub
mov
pushl
aad
sbbl
scas
pop
iret
aaa
mov
sbb
pop
jle
outsl
cs
sarb
sub
in
mov
lret
sarl
cwtl
dec
xchg
addr16
dec
addr16
xchg
int3
hlt
push
daa
repz
sub
pop
outsb
pop
mov
lods
dec
xor
jmp
movsb
cmc
repz
ja
sub
mov
call
adc
ds
out
popf
rcrb
sub
adc
and
sbb
and
xchg
data16
mov
or
mov
mov
or
xlat
in
test
pusha
sub
outsl
or
test
gs
sbb
lods
mov
push
rorb
cmp
or
xor
insl
rclb
loope
sub
mov
lcall
mov
sqrtps
iret
or
pop
sti
loopne
mov
mov
sub
pop
xchg
xlat
sub
lret
inc
imul
and
aas
jl
test
in
in
xchg
in
sub
repz
movsb
test
loope
xchg
movsl
xlat
cmp
lods
fiadds
and
xchg
sub
pop
scas
add
sbb
jae
in
mov
out
or
cmp
cli
sahf
jbe
mov
lret
xlat
aad
dec
imul
push
sahf
jle
test
call
mov
cltd
xor
ffreep
pop
mov
pop
xchg
fwait
xchg
adc
xchg
dec
xchg
jb
movhps
nop
mov
pop
lahf
cmpsb
add
popf
stos
int3
leave
mov
mov
test
test
inc
push
int3
dec
lret
int3
dec
push
jl
ret
popf
aaa
mov
cmp
mov
pop
mov
lock
aaa
jb
sar
and
popf
lahf
sbb
mov
leave
fnsave
imul
mov
es
arpl
ds
into
orb
movsl
scas
gs
push
xchg
mov
stos
cwtl
jne
cmpsb
and
push
add
push
aas
jecxz
mov
int3
insb
popf
adc
sub
shll
int3
lds
adc
or
loope
jmp
imul
inc
add
ret
adc
add
cmp
stos
fildll
add
push
movd
outsb
jbe
or
cmp
mov
les
call
mov
insb
mov
jl
aas
les
bound
push
ss
ljmp
test
or
nop
sub
adc
and
mov
sub
loopne
in
mov
sbb
adc
mov
xor
clc
or
fmul
arpl
jmp
mov
out
dec
push
cmpsl
rcrl
push
sbb
lds
xor
inc
ss
sub
push
orb
outsb
pop
lcall
push
jle
decl
pop
sbb
pop
push
sub
xchg
add
je
into
icebp
dec
inc
leave
pop
dec
xchg
adc
mov
push
mov
inc
mov
sbb
xchg
sub
sbb
jecxz
mov
lret
and
cltd
lcall
dec
aad
push
sar
xor
mov
push
mov
jb
mov
pop
jnp
repz
jae
test
push
cmp
and
inc
lret
cmp
into
pop
data16
pop
xchg
jb
jmp
or
unpckhps
imul
cmpb
stos
ret
adc
sbb
shl
push
cld
cld
maxps
xchg
nop
xchg
popf
mov
test
out
rolb
dec
int
xchg
aad
rcrb
xchg
dec
mov
ljmp
js
pop
popf
dec
push
nop
lahf
fsubrs
or
fnsave
scas
jecxz
pop
clc
bound
add
or
cmp
std
cmp
jecxz
push
fsubrs
mov
cwtl
fcompl
adc
mov
or
rcl
sub
or
adc
xchg
dec
jae
jmp
outsb
scas
xchg
ljmp
adc
dec
lods
push
mov
sbb
imul
mov
cmp
arpl
aam
jbe
hlt
xchg
jns
ljmp
dec
stos
push
lods
push
jge
xchg
sbb
lods
xor
sbb
jmp
mov
push
in
imul
xor
dec
in
ret
js
mov
or
test
rcr
dec
into
pop
ds
cmp
sbbb
sub
or
cmp
and
bound
jnp
mov
sti
lret
cmp
and
mov
xor
ds
orb
aaa
jb
and
cs
cltd
pop
push
icebp
subl
pop
dec
repz
add
test
jmp
into
fsubrs
mov
pop
mov
jmp
cltd
out
fists
nop
xlat
push
add
push
sbb
in
mov
dec
popa
idivb
cmpsl
sub
dec
or
mov
jl
test
movsl
mov
out
cmp
and
sub
xor
js
insb
xchg
jge
imul
xlat
ret
stos
mov
in
mov
push
and
xor
adc
lahf
cmp
gs
sbb
inc
sti
inc
out
out
mov
sti
xlat
add
enter
rcrb
push
add
sub
sub
outsb
pop
loop
sub
and
xor
aam
pop
xor
add
xchg
mov
inc
fnsave
mov
es
test
and
jle
or
pushl
decb
adc
push
xorl
sub
mov
pop
inc
jno
lcall
lds
lahf
icebp
push
aad
adc
jo
bound
in
cmpsl
vmovapd
orl
sbb
stos
or
lret
mov
gs
cmpsb
mov
and
mov
push
push
push
mov
sbb
mov
inc
xchg
lds
mov
iret
jbe
sbb
rcrb
repnz
dec
shl
pop
cli
lahf
xchg
loope
loopne
divl
jmp
mov
jmp
and
mov
mov
aad
cmp
fs
in
or
jne
and
lcall
xchg
pop
xchg
and
inc
movb
jno
jns
jle
ja
shll
lea
dec
paddw
in
xchg
cwtl
rolb
icebp
cli
imul
inc
sbb
test
daa
loope
inc
mov
aam
jno
aam
mov
and
push
cld
aad
decl
iret
push
mov
pop
jmp
rorb
pop
ficoms
and
in
insl
scas
dec
inc
inc
xchg
jg
sub
js
fbld
das
testb
enter
data16
pop
scas
or
sarl
decl
hlt
int3
push
ret
jae
or
bound
sub
or
dec
pop
pushf
pop
mov
in
fidivrl
jo
and
xor
and
in
jg
sbb
and
std
addl
fdivl
and
sub
subb
addr16
iret
add
das
pop
inc
sbb
cmp
inc
cmc
xor
xor
mov
jl
movl
imul
sub
cltd
push
cmpsl
xlat
pop
add
test
fldl
jne
stos
imul
test
dec
inc
ret
decb
sarb
cmp
push
mov
imul
shr
push
pop
stos
sarl
push
dec
add
dec
stc
sbb
popa
dec
popa
lcall
pop
add
inc
sti
je
jno
inc
push
jb
test
loope
outsl
xchg
add
scas
cmc
je
cli
enter
pusha
insl
pop
ret
pop
insb
sbb
push
sbb
stos
add
cmp
mov
movsl
lahf
sub
mov
xchg
mov
and
xor
or
inc
clc
insl
call
jo
sbb
enter
jmp
test
out
cmpsb
add
and
fwait
pop
or
mov
cmpsb
shlb
fnsave
test
mov
inc
les
mov
aam
pushf
hlt
icebp
fcmovne
jno
clc
cmp
pop
push
xorb
and
mov
push
mov
dec
cmp
jae
push
sub
scas
mov
push
cs
stc
repz
sbb
inc
cmp
xchg
je
mov
xor
add
inc
gs
negl
int
mov
adc
dec
out
adc
push
ds
bound
ds
mov
inc
inc
cmc
xor
xor
jmp
push
or
leave
test
mov
mov
sub
rolb
fwait
inc
xchg
mov
jns
mov
xchg
rcrb
cmp
in
outsl
mov
or
movsb
inc
sbb
dec
nop
cmp
ljmp
ljmp
rcl
les
cwtl
and
rcrl
dec
sahf
je
xchg
loop
aas
xor
mov
pop
mov
out
ret
movsb
clc
pop
es
test
test
or
pop
cmp
ficoml
fs
nop
cmp
lods
das
add
int3
das
in
cmpsl
sbb
push
repz
and
out
mov
mov
and
mov
fs
ds
xlat
mov
cltd
std
mov
jle
push
sbb
fs
outsl
fwait
jmp
and
mov
enter
sub
sbb
push
test
in
test
or
sub
out
mov
mov
not
xchg
add
add
jae
sbb
stc
outsb
imul
cli
pop
out
fsubs
arpl
adc
push
roll
inc
xor
xchg
adc
lcall
and
pop
scas
insl
mov
fcoms
arpl
sbb
xchg
das
int3
nop
jp
das
jo
inc
inc
arpl
sbb
mov
clc
loope,pn
loop
lods
dec
iret
mov
mov
sub
and
les
adc
test
or
xchg
insl
rorl
xchg
scas
sub
in
movsb
mov
pushf
xchg
pushf
mov
cmp
dec
mov
mov
clc
jmp
lea
dec
xor
inc
test
loope
or
jecxz
fildl
popf
sub
adc
xchg
mov
mov
shl
mov
sub
dec
stos
push
call
push
je
test
test
dec
lods
jge
or
dec
jmp
and
test
push
push
in
mov
mov
dec
jle
adc
loop
sub
add
je
jecxz
xlat
pushf
pop
adc
nop
testl
gs
ljmp
stos
xlat
sti
adc
arpl
sahf
pop
mov
sbb
dec
push
add
mov
js
sahf
sub
pusha
mov
and
fyl2xp1
pop
jo,pt
loopne
add
mov
aad
movsl
cmp
mov
pop
jb
lods
pop
in
mov
jp
jbe
jne
ret
xor
add
inc
pop
sbb
mov
leave
lcall
loope
jno
sbb
sbb
jnp
mov
ss
dec
mov
jb
pop
push
out
xchg
mov
fldcw
fnstsw
iret
negb
xor
sbb
add
or
xor
mov
pusha
in
fisttpll
and
sarb
xchg
js
cmp
xchg
adc
das
arpl
testb
fisttps
adcb
inc
repz
rclb
xchg
iret
mov
lcall
in
mov
pop
loope
pusha
idiv
jb
filds
dec
cmp
rclb
mov
out
enter
dec
push
or
mov
inc
xor
fsts
int3
add
xchg
add
std
xchg
daa
xor
loopne
loope
sbb
sub
mov
mov
aad
mov
mov
fildll
cmp
lcall
aaa
popa
lret
mov
sbb
ljmp
leave
jbe
inc
mull
mov
out
dec
xchg
cmp
fsubr
pop
lcall
lds
loop
mov
pop
fidivrl
or
cs
mov
scas
or
popf
push
or
push
pop
mov
dec
lcall
sub
movl
xchg
jle
and
fwait
cmc
sbb
pop
mov
inc
push
mov
xchg
mov
mov
and
inc
add
pop
mov
outsb
mov
jae
cmp
popa
fistpl
dec
inc
push
lea
xchg
cmp
inc
gs
mov
loope
hlt
push
mov
outsl
out
pop
shl
jge
sub
lock
push
xor
aam
lock
es
lcall
pop
addr16
cwtl
or
shlb
cld
inc
es
push
cld
movsb
pop
mov
popf
rcll
cmp
cld
push
sar
cmpl
wrmsr
call
call
sub
popa
int3
push
xor
and
pop
mov
lret
lret
xchg
in
dec
push
inc
mov
inc
les
fcomps
inc
xlat
repz
fs
mov
push
push
in
lcall
and
sbb
xchg
jno
pop
xchg
out
dec
fwait
insl
pop
jbe
sbbl
sarb
flds
cmp
jmp
sub
fcompl
sti
xor
cld
js
aaa
dec
dec
jb
imul
add
adc
popa
xchg
dec
adc
xor
add
dec
inc
mov
xor
in
pusha
inc
sti
mov
fyl2xp1
and
pop
inc
les
xor
inc
push
xchg
pop
xor
mov
jecxz
push
sbb
push
rolb
sub
ljmp
ja
dec
cmp
and
stc
jp
mov
cs
jb
das
pop
add
adc
jmp
xchg
cmc
jb
sahf
cwtl
pop
or
arpl
bound
fdivrs
mov
lods
pop
fbld
outsl
mov
sti
les
push
dec
mov
int
add
test
stos
sbb
push
fadds
mov
dec
mov
mov
adc
decb
test
pusha
xor
jae
fstpl
sub
pop
and
cli
stos
in
xor
lock
fcoms
fisubs
mov
ja
sbb
arpl
pop
insb
out
lcall
nop
testl
jno
ja
filds
mov
or
fwait
pop
leave
fmull
or
push
enter
insb
adc
adc
pop
test
cld
add
imul
pop
mov
int
push
xchg
les
pop
sub
adc
aaa
jecxz
in
sti
mov
bound
popa
mov
sahf
aad
test
mov
mov
xchg
xchg
lock
mov
or
addl
rcll
and
xchg
repnz
mov
lds
jb
cmp
js
mov
int
inc
xchg
or
cmpl
sub
ret
mov
popf
or
and
inc
fwait
jnp
xchg
andb
mov
mov
iret
imul
adc
daa
cld
std
adc
dec
xchg
pop
and
fisubl
xchg
in
jne
ja
jb
add
jae
inc
push
es
dec
adc
shlb
sbb
fcoml
loope
mov
pop
pop
sbb
jns
subps
fdivrs
pusha
out
push
cld
imul
jb,pt
dec
in
daa
sub
push
leave
rol
xchg
push
push
lcall
lret
and
aam
rcr
movsb
cmp
std
ds
ficomps
sbb
jle
or
test
mov
cmp
cmp
inc
sub
dec
adc
pinsrw
and
adc
xchg
outsl
std
jg
adc
cmpsl
push
sbb
cs
jge
sbb
jecxz
ljmp
push
mov
mov
inc
inc
popa
xor
pop
xor
mov
aam
mov
outsl
lcall
shl
pushf
xor
mov
mov
cltd
push
push
leave
jp
ror
repz
fnsave
inc
stos
jle
xchg
cmp
cmpsl
jge
inc
pop
stc
dec
pushf
loopne
sub
loopne
test
inc
scas
pop
nop
imul
sub
iret
and
nop
lea
add
ss
int3
sub
enter
dec
daa
jnp
jno
adc
fwait
push
xor
lds
imul
push
fsubs
ficompl
dec
popa
pop
jae
je
in
js
arpl
xor
popa
int
lret
sbb
mov
loope
insb
aad
sbb
enter
xor
xchg
inc
xchg
lret
or
cmp
mov
and
jp
mov
mov
jo
pop
cmpsb
mulb
loope
dec
fs
outsb
dec
enter
and
fdivrs
xlat
xchg
lock
adc
sahf
enter
or
clc
iret
dec
loopne
ret
jle
subl
add
repz
insl
jne
in
repnz
add
lods
mov
or
mov
insl
fdivrl
and
push
outsb
inc
pushf
and
aas
cli
ret
sub
iret
dec
jne
jne
push
sbb
iret
xor
cltd
push
ds
push
fdivrp
mov
inc
and
adc
dec
ficompl
or
xchg
jnp
repz
aaa
pop
outsb
push
mov
sahf
mov
lods
pop
xchg
lcall
and
push
outsb
loop
lods
loop
in
cmp
xor
adc
neg
les
add
mov
inc
dec
insl
leave
dec
in
divps
jp
xchg
fcoms
int3
lret
test
dec
sbb
cmpsb
xchg
inc
push
cmpl
daa
inc
in
in
cs
ror
push
js
jnp
push
mov
arpl
inc
pop
nop
mov
push
movsl
inc
pop
jne
scas
xchg
pop
int
ljmp
push
mov
fstl
lea
ss
push
add
cld
and
xor
mov
xchg
and
leave
aam
int
add
imul
sub
inc
cmc
fdiv
in
ret
mov
pop
lods
sbb
sti
sbb
enter
imul
mov
bound
scas
mov
insb
mov
stos
mov
ds
jecxz
push
jae
fsubs
mov
sbb
or
inc
mov
pop
ss
pop
rcrb
push
imul
std
cld
xchg
mov
jl
cmp
daa
ja
es
mov
dec
sub
neg
sarb
cs
fcmovb
mov
scas
ja
dec
mov
add
in
push
test
lock
xchg
and
fidivrs
js
sbb
adc
dec
sbb
stos
adc
test
out
mov
fwait
rcrl
into
jg
add
insb
mov
cwtl
push
or
out
rcll
aad
push
or
stc
in
arpl
ja
mov
jno
fidivrs
cmp
sbb
cld
clc
mov
rcll
dec
cmp
fstl
push
sarl
and
stos
out
push
lret
jmp
out
mov
mov
xchg
inc
sbb
subb
xor
insb
mov
sarl
outsl
mov
in
ds
popf
mov
mov
jge
inc
or
outsb
adc
mov
jl
std
scas
rclb
sbb
jo
aam
mov
push
out
mov
sub
stos
mov
cli
add
xlat
adc
xchg
mov
or
mov
lods
out
out
imul
add
in
sub
pop
inc
or
cmc
xor
scas
xchg
cmp
or
int
xchg
gs
loop
cmp
pop
jno
dec
dec
rorb
shlb
std
hlt
call
xor
and
cwtl
sbb
dec
inc
out
jg
lcall
test
mov
or
mov
mov
pop
jmp
iret
jno
mov
cmpsl
sbb
movsb
inc
xorb
mov
mov
jno
dec
das
popf
pushf
pop
sbb
pop
shl
xchg
push
je
inc
test
sub
add
repnz
in
xchg
enter
por
frstor
jno
inc
jg
iret
scas
ljmp
jns
dec
pop
sbb
js
in
cmp
shll
repz
into
negb
cltd
adc
lcall
mov
ficompl
and
std
sub
inc
pop
mov
icebp
daa
sub
pop
ljmp
in
lahf
adc
xlat
mov
scas
xlat
jb
call
rolb
ss
inc
jns
loopne
in
sbbl
cmp
add
fneni(8087
mov
gs
shr
insb
std
cmp
pushf
loop
add
lahf
lods
in
or
or
mov
fistps
mov
cld
sub
xchg
and
mov
push
outsb
fldl
in
mov
lret
xchg
std
adc
pop
bound
and
pop
fldt
cmp
mov
ds
jmp
push
add
ds
push
stos
inc
and
stos
je
lock
loopne
cmp
inc
addr16
mov
jecxz
daa
sar
clc
dec
cmp
std
cmp
and
pop
push
subb
jmp
aad
sbb
std
sbb
inc
inc
and
mov
out
mov
movsl
ficoml
push
adc
xchg
rcrb
fnstsw
pop
in
cltd
ljmp
test
inc
cmp
adc
pop
mov
das
jl
popf
sti
inc
xchg
xchg
push
inc
add
sbb
sub
jae
adc
fwait
sub
iret
jp
and
lret
dec
loopne
mov
mov
sbb
cmpsb
test
out
arpl
in
jnp
das
leave
dec
in
aaa
ja
xor
daa
fiaddl
and
scas
and
jae
std
fdivrs
daa
jnp
mov
sub
push
lcall
and
bnd
in
cltd
fdivs
add
out
inc
test
lods
imul
jg
add
icebp
leave
or
inc
ja
push
repz
cmp
mov
xchg
fldt
mov
mov
outsb
pushl
or
test
adc
cmp
loopne
lock
fs
lret
and
and
xchg
adc
xchg
or
xchg
jno
push
fst
into
cmp
insl
mov
add
mov
mov
cmp
cmc
xchg
mov
mov
repz
movsb
int3
int
xchg
aaa
es
add
jp
pop
sbbb
rcrl
mov
sub
mov
fwait
sahf
add
ja
jle
sarl
jp
out
adc
mov
push
into
adc
mov
sub
ds
fucomip
ljmp
in
push
pop
xchg
in
jmp
dec
adc
jecxz
fbstp
or
cmc
fdivrs
inc
scas
je
inc
xchg
notb
ljmp
int3
jne
lea
popf
mov
mov
nop
aas
ss
and
push
dec
push
mov
mov
clc
cltd
mov
mull
movsl
pop
mov
xchg
jns
xchg
mov
int
cs
cmpsl
push
xor
mov
jg
inc
outsl
in
cmp
mov
outsl
out
bound
les
xchg
mov
addr16
pop
aas
push
push
mov
adc
xchg
cmpsb
pop
sbb
and
xor
mov
jb
push
mov
sub
or
mov
pop
or
push
cmp
fsubrl
pop
jge
movsl
divl
xchg
xor
int
or
loop
mov
lret
call
sub
pop
aaa
xor
add
jmp
fdecstp
out
mov
add
aam
test
dec
ss
xchg
out
sub
shrb
xchg
push
sbb
mov
adc
sub
loop
xchg
mov
sub
push
sub
mov
or
jp
cmp
inc
pop
aas
and
ds
pop
filds
icebp
popf
pop
dec
inc
aas
ss
stc
nop
popf
sbb
daa
dec
push
clc
cld
aad
lock
insb
xor
jecxz
sub
ret
and
shl
mov
mov
sub
cld
xlat
mov
jo
pop
popa
inc
aam
out
mov
push
fs
enter
mov
xor
es
xor
dec
xor
stos
mov
fwait
shl
dec
jno
jae
adc
jge
rcrb
jb
das
xchg
sahf
shlb
jo
repnz
mov
out
fwait
xor
mov
test
cmp
das
jle
push
push
xchg
adc
adc
shlb
mov
fs
pop
sti
out
xchg
or
xchg
lods
adc
dec
or
or
aam
adc
outsl
movsb
pushf
pop
push
aas
sub
stc
and
out
pop
mov
out
mov
xchg
adc
mov
pop
pop
jmp
gs
ret
es
pop
ds
mov
out
sahf
testb
mov
mov
inc
pop
leave
std
sbb
cmp
mov
or
rclb
pop
mov
pop
movsbl
pop
pop
xor
mov
scas
fcmovb
or
sbb
addr16
sub
jbe
repz
mov
pop
mov
jge
xchg
das
loope
mov
and
aad
sub
aaa
pop
jns
popf
sub
cmp
pop
sub
shlb
int
jb
and
sbb
push
pop
scas
xchg
shlb
movsl
xchg
cmp
sbb
mov
jge
pop
push
push
lods
daa
ds
insl
mov
ja
sub
dec
sbb
aam
loope
stos
xlat
jne
and
lret
rcrb
pop
xlat
mov
dec
mov
aad
loop
les
mov
shlb
mov
inc
jmp
cs
pop
into
lock
in
xor
inc
sti
mov
test
std
xchg
insl
jl
lods
xchg
xchg
sub
push
aad
into
jb
and
mov
dec
add
pop
test
dec
mov
cs
divl
divb
or
xchg
mov
mov
pop
and
push
repnz
cmp
add
pop
loopne
lea
testb
xchg
dec
insb
sub
mov
adc
out
scas
out
iret
inc
fwait
movsb
test
or
daa
mov
mov
les
jbe
pop
into
cmp
jns
fstpl
xchg
loope
in
cs
add
mov
cli
or
inc
scas
and
dec
in
lret
pop
dec
jo
outsl
inc
add
rcl
and
xor
add
leave
adc
int3
push
inc
cltd
cltd
pusha
xor
test
mov
dec
int
xchg
out
push
sbb
ljmp
ret
jns
adc
mov
cwtl
test
or
mov
adc
and
inc
push
fldcw
cmp
or
sub
or
pop
sbb
adc
cli
popa
and
mov
sub
movsb
popf
xchg
mov
cli
push
sbb
sti
jp
add
cmpsb
push
lcall
xchg
jb
pop
dec
inc
and
mov
sub
mov
xchg
lret
ss
cmp
fidivl
adc
popa
cltd
xchg
je
add
push
sarl
push
inc
lret
mov
hlt
insb
es
inc
inc
int
ret
cmp
repnz
popa
enter
ret
leave
loopne
inc
insl
mov
dec
stos
adc
sub
inc
cmp
fists
in
sub
gs
movsb
push
push
xchg
inc
lock
iret
and
add
repz
test
and
scas
mov
mov
push
shll
mov
mov
hlt
jb
lods
fisttpll
mov
shrb
sub
jae
or
aam
cmp
imul
mov
push
pop
jno
aad
mov
mov
loop
mov
pop
es
push
jno
sbb
inc
shr
xchg
lock
arpl
ret
mov
hlt
mov
sbb
fidivs
mov
pop
sbb
sbb
adc
push
addr16
sbb
xor
dec
or
aam
out
sbb
pop
gs
adc
lods
mov
jb
mov
dec
imul
addr16
mov
sbb
fdivl
or
or
jmp
add
xor
ror
mov
fs
mov
mov
and
sub
clc
pop
cmp
jp
push
movsl
fwait
mov
addr16
popf
add
bound
adc
lods
add
nop
js
push
inc
aaa
jmp
out
lcall
jecxz
sbb
cmp
adcb
je
inc
call
mov
gs
mov
aas
jno
lea
imul
hlt
cltd
enter
jmp
xchg
mul
shlb
xchg
in
pop
mov
xchg
dec
pop
mov
test
fistl
je
xchg
dec
jo
add
out
mov
and
cmpl
or
lods
sub
jno
jae
inc
cmp
mov
sub
into
jmp
loope
xor
lods
dec
xchg
mov
lods
mov
decl
std
sub
outsl
fs
push
pop
pop
cmc
or
mov
xchg
push
stos
push
jns
test
push
pop
adc
add
adc
sub
mov
aas
xchg
mov
cwtl
mov
dec
cmpsl
lret
mov
sbb
or
movsl
jno
pop
jg
jmp
mov
fcomps
adc
mov
fcompl
hlt
adc
push
inc
inc
daa
dec
sbb
arpl
mov
lret
xor
lret
xor
aaa
imul
inc
or
sub
mov
cmp
add
xlat
jb
add
sti
cmp
inc
sbb
jno
inc
cmp
orb
je
xor
outsb
popa
imul
sub
cltd
call
in
outsl
mov
js
inc
lret
sub
mov
mov
xchg
xchg
pop
cmpsw
dec
repz
lret
jae
inc
adc
cmp
jno
loopne
add
push
or
inc
out
push
pop
and
mov
bound
divl
aas
lcall
sahf
out
fs
mov
jmp
les
xor
sub
mov
or
por
sbb
cmpb
inc
imulb
pop
iret
hlt
daa
call
cli
scas
fldcw
jnp
jge
cmp
mov
shll
mov
mov
jge
adc
bound
std
sbb
jne
pushf
sub
fisubrs
sub
cmpsb
cmp
shlb
mov
and
mov
jb
call
jge
mov
mov
gs
or
mov
sub
adc
scas
int3
fwait
adc
xchg
pushf
popf
xchg
xor
sub
jg
loopne
cmp
testl
adc
pop
bnd
stc
add
mov
ror
add
notl
aas
les
xlat
out
jno
outsl
orb
mov
inc
jno
loope
add
std
fistpll
mov
add
inc
les
dec
xchg
xchg
nop
mov
shl
push
xor
into
out
lret
mov
flds
cwtl
aam
aam
stos
mov
pop
fnstenv
xlat
out
xchg
adc
pop
ret
push
movb
add
lret
dec
jg
stos
or
sbb
dec
outsl
xor
stc
push
mov
lahf
inc
es
mov
shl
jo
or
inc
dec
or
jo
loop
mov
sbb
mov
out
fs
ficomps
pop
mov
push
xchg
leave
cmpsb
stos
push
orb
sbb
sub
dec
dec
enter
and
add
shll
data16
cld
jb
push
lret
push
ret
push
sub
mov
inc
mov
bound
je
ljmp
dec
xor
and
out
inc
inc
mov
cwtl
popa
ss
aas
pusha
lods
pop
ss
mov
push
aam
popa
leave
inc
in
xchg
lret
xchg
dec
pop
mov
sub
mov
xchg
pop
shrb
adc
pop
xchg
dec
aaa
push
fmuls
jns
sub
faddl
jno
push
dec
mov
pop
sahf
or
popf
lds
lcall
jbe
inc
push
rorb
lock
fsubrs
inc
repz
cltd
push
add
repz
scas
adc
sbb
push
in
test
loop
fcmovne
push
adc
or
push
jae
push
sbb
outsl
and
xchg
orl
mov
sbb
pop
fs
xchg
jno
es
push
sarl
sbb
stc
mov
in
adc
sub
arpl
aam
push
or
movb
fsubs
scas
mov
leave
outsb
pop
cwtl
fidivs
mov
jae
popa
aaa
lods
or
aaa
jle
push
or
pushf
outsb
sbb
mov
data16
lcall
cmpl
dec
mov
stc
sub
sbb
or
gs
jecxz
xorl
mov
sti
inc
sub
aas
repz
xchg
mov
pop
inc
or
mov
lahf
mov
mov
test
insb
mov
rcll
xchg
xchg
dec
push
jae
call
dec
push
mov
xchg
stos
dec
sub
roll
adc
xchg
sub
and
or
adc
xor
lcall
pop
cmpsb
jno
xor
pop
adc
xchg
xchg
insb
xor
pop
dec
cmp
xlat
out
dec
inc
pop
fiaddl
test
loope
fdivs
inc
and
lret
lcall
mov
imul
push
fsts
enter
in
test
jl
scas
pusha
mov
or
dec
push
inc
out
mov
push
inc
xorb
subl
or
cwtl
insl
lret
sahf
mov
into
out
xchg
aam
push
stos
inc
xchg
cmpsl
or
out
aas
adc
out
sub
jg,pn
test
and
ret
out
adc
test
int3
call
in
push
cwtl
cmp
mov
stos
fsts
stos
dec
iret
incl
mov
push
lcall
jne
movsb
fs
mov
mov
and
stos
add
push
ret
fists
arpl
push
sbb
adc
xor
or
sahf
lret
lahf
or
adc
add
cs
mov
cmp
cmc
fiadds
movsb
fcoms
cltd
cmpsl
mov
jb
clc
xchg
out
push
rclb
nop
xor
call
test
repnz
jo
xor
dec
int
adc
mov
lcall
outsb
ss
push
mov
iret
sbb
out
fwait
xchg
je
cltd
ds
cmc
mov
pop
add
adc
xor
sub
fsubr
fisubl
mov
sbb
in
fisubl
xor
inc
cmp
sti
sbb
xchg
push
inc
lret
lds
sbb
stos
shll
rcr
dec
xchg
scas
movsb
mov
cmp
mov
inc
adc
cwtl
cwtl
je
dec
pop
int
mov
xor
sbb
iret
je
cmpsb
shrb
shlb
cmp
sti
inc
das
in
inc
xchg
jno
xchg
mov
xchg
imul
adc
mov
fwait
jmp
rclb
and
mov
jp
jg
xchg
xor
cltd
mov
and
stos
add
ret
and
pop
xchg
popa
add
and
jo
jg
nop
rcr
mov
popf
int3
lahf
rcll
movsl
or
lcall
xchg
fbstp
ljmp
popa
fbld
mov
jae
insl
fs
cmpsl
hlt
and
into
sub
jp
cmp
cmp
in
cwtl
push
sub
inc
cli
cltd
or
dec
mov
jnp
clc
mov
lret
sbb
sbb
mov
add
cld
pop
clc
pushf
cmp
in
lahf
and
nop
mov
jno
mov
jns
int3
addb
inc
mov
out
idiv
xchg
cld
shll
adc
fsubrs
mov
xchg
stos
shrb
jmp
cmpsl
jmp
add
ljmp
mov
fstl
daa
or
push
aam
push
cs
orl
imul
sub
xchg
mov
jbe
or
fs
lds
jg
js
frstors
or
repnz
inc
fmull
loope
or
mov
arpl
sbb
out
mov
dec
pop
pop
lock
jle
xor
insl
inc
js
cmp
and
jle
mov
xchg
imul
jle
sbb
pop
sahf
push
dec
dec
xchg
sbb
sbb
sahf
mov
or
dec
lock
pop
jnp
jmp
cmpsl
xor
in
mov
mov
dec
in
sub
xor
rcrl
cmp
out
xchg
lock
in
dec
cmp
or
fs
lods
xor
pop
mov
ficomps
mov
mov
fwait
jne
jge
xor
push
dec
leave
sub
pop
xchg
lcall
mov
les
cmp
push
pop
mov
add
and
mov
je
pushf
pusha
cmp
lds
popa
leave
mov
xor
jge
filds
shrl
pop
loope
sub
xchg
call
xor
rolb
push
aaa
cmp
sbb
xor
sub
push
lods
shl
inc
xor
mov
push
enter
dec
gs
hlt
mov
inc
pop
pop
mov
insb
and
mov
push
mov
aad
imul
sahf
pushf
lock
mov
aam
inc
pop
xchg
jp
pushf
pop
fildll
and
mov
mov
and
and
dec
jne
adc
jle
or
sbbl
cltd
lret
mov
mov
ss
fsubrs
jl
pop
or
cmp
cmp
sub
adc
nop
or
repnz
loope
out
negl
test
mov
xorb
add
dec
push
lods
cmpsl
mov
inc
movsl
and
test
outsb
shrb
mov
mov
pop
push
mov
fcmovnbe
adc
xor
push
int3
pushf
outsb
and
ret
into
lahf
stc
adc
jmp
inc
mov
mov
xchg
loope
pushf
pop
jle
sub
lret
es
or
imul
adc
sub
insb
sbb
out
test
jno
sub
jge
dec
js
jae
lret
rcrl
jno
dec
icebp
jo
repnz
cmc
dec
mov
inc
mov
and
fisttpll
xchg
push
mov
mov
dec
repz
mov
negb
jp
fsubrs
fsubr
psllq
mov
jl
pop
sub
push
insb
mov
push
cmpb
mov
out
jmp
sbb
loop
add
ret
jo
cmp
in
sbb
lods
shr
mov
in
jmp
adc
ret
pop
sub
out
mov
mov
add
notl
out
lcall
cmp
push
sahf
adc
push
mov
jecxz
ljmp
mov
or
or
aaa
cmp
push
jbe
outsb
dec
imul
adc
ror
nop
fdivrl
push
scas
lods
cmp
fmul
mov
push
movsl
mov
addr16
jb
mov
fcom
adc
mov
add
adc
sahf
jns
mov
imul
mov
pop
cmp
jecxz
jb
scas
mov
das
push
sbb
rcrl
test
test
cmp
fcomps
fidivrl
inc
push
icebp
add
shrb
mov
js
cmp
imul
jne
lret
fs
mov
mov
dec
cwtl
bnd
inc
dec
outsl
rcl
inc
std
jae
xor
lods
out
mov
aas
xor
lret
inc
inc
dec
push
out
or
inc
xor
pop
nop
rcr
hlt
adc
add
inc
xor
push
jo
push
sub
xor
das
pop
ja
or
jbe
and
sahf
cltd
ret
scas
push
test
ret
or
jl
in
mov
nop
adc
into
jle
and
in
or
sbb
mov
into
xor
add
jnp
xor
inc
mov
mov
dec
mov
pop
in
shl
cmp
pushf
sbb
mov
stc
pop
dec
mov
cmpsb
mov
jnp
or
xor
cli
orb
clc
sub
call
push
mov
mov
jne
jne
dec
out
sbb
or
mov
ret
scas
xchg
call
or
jae
sbb
mov
xchg
inc
add
popa
nop
or
mov
loopne
adc
jae
lcall
xor
add
fildl
xchg
sti
jns
and
sbb
imul
stos
lret
jne
fcomps
mov
in
inc
mov
stos
mov
mov
mov
sbb
loop
mov
addb
cmp
ja
sub
sub
cmp
xchg
xchg
stos
dec
bound
inc
dec
and
xchg
cmp
jo
gs
sub
movsl
or
xorl
cmp
aas
push
insl
mov
fdivl
xchg
or
sbb
lahf
stos
ret
jnp
adc
mov
daa
pop
add
jns
ficomps
ret
ror
aas
xchg
add
sbb
sti
pop
sbb
pop
scas
cs
adc
sbb
xchg
leave
loope
or
mov
das
repnz
or
out
xchg
adc
insl
xor
pop
and
aaa
xor
mov
and
call
push
mov
xor
jne
xor
dec
pusha
pop
pop
outsl
mov
xor
add
decl
push
arpl
imul
add
mov
jo
adc
mov
pop
mov
stos
adc
js
mov
inc
orl
test
test
sarl
jecxz
fisttpl
fs
mov
mov
xor
inc
int3
mov
das
test
jl
pop
bound
fs
xor
jb
and
add
push
sub
adc
pop
ljmp
imul
add
xor
add
inc
and
cmc
int
mov
push
repnz
cmp
mov
jmp
mov
fistps
rcl
lds
jp
or
ss
das
mov
cmp
xchg
pop
ret
sub
shlb
push
sti
je
inc
sub
adc
js
daa
lret
test
andb
rol
mov
pop
or
lods
test
pop
mov
cltd
xlat
mov
cmpsb
pop
das
dec
push
push
pop
adc
and
mov
notl
jl
aaa
mov
aam
pop
and
jb
or
pop
jns
xor
sub
fs
testb
stos
cli
mov
fisttps
and
sbb
rolb
js
jne
cmp
lods
popa
jmp
adc
in
mov
leave
imul
xor
das
jb
inc
pop
loopne
mov
enter
push
pop
mov
addr16
std
xchg
dec
in
jb
repnz
dec
out
es
sbb
mov
xlat
xchg
pop
in
xor
jmp
push
lds
xchg
loopne
ret
xchg
cwtl
mov
lock
dec
mov
xor
stc
adc
repnz
inc
pop
rolb
push
dec
mov
aad
inc
push
or
and
sbb
imul
into
pop
icebp
call
cltd
test
mov
xor
scas
adc
push
cmpb
xchg
inc
sbb
in
and
and
sub
ffreep
stc
xchg
movsb
pop
icebp
fmuls
dec
inc
xchg
push
jb
jmp
xchg
and
jnp
jbe
fadds
pop
jl
clc
sub
es
lcall
or
pop
std
mov
inc
ret
add
in
dec
or
cmp
cmp
sbbl
lcall
adc
cltd
imul
jb
lret
inc
adc
sub
loopne
les
inc
inc
push
inc
jno
roll
movsl
bound
xor
sub
jge
enter
xlat
sub
in
jmp
or
push
gs
dec
shl
mov
or
stos
push
aaa
je
in
mov
out
lea
and
loop
xor
pop
call
push
pop
mov
ds
shlb
testl
fisttpl
repz
outsb
adc
inc
inc
stc
cld
pop
pop
and
mov
pusha
cmp
sbb
je
popa
xor
jle
sub
addr16
xor
mov
subb
push
roll
int
pop
enter
jbe
cmpsb
mov
incb
mov
sub
fsubp
rorb
out
jno
add
lds
push
in
outsl
adc
sbb
mov
push
mov
jmp
stos
and
lret
pop
adc
lock
stos
lods
sbb
cmp
enter
lret
sti
mov
mov
inc
xchg
pop
pop
mov
repnz
shr
mov
in
and
or
sub
mov
mov
mov
faddl
jbe
sbb
in
mov
mov
pop
mov
mov
fimuls
andb
sbb
cmp
adc
test
js
fwait
nop
xchg
fldl
jge
clc
mov
out
fisubrs
push
loopne
mov
adc
cltd
dec
sti
js
mov
mov
sbb
ret
jno
sub
aam
jmp
lret
mov
stos
enter
into
pop
call
jmp
cmp
add
push
lret
jnp
pop
gs
sbb
out
rorb
xchg
sbb
test
jmp
and
dec
cli
or
inc
pop
push
es
push
sbb
mov
aad
mov
icebp
mov
mov
push
xor
cwtl
pop
push
jns
mov
negb
fwait
addb
push
rorl
sbb
stos
sahf
jge
lods
sarb
mov
add
sarb
dec
daa
adc
int
mov
xchg
add
push
rcll
jns
rcll
lock
push
ja
add
fstpl
add
xchg
shr
inc
stc
fcompl
mov
push
push
pop
inc
fcmove
pop
sahf
jns
stos
into
rclb
dec
push
add
mov
adc
pop
shl
es
stos
pop
test
dec
mov
xor
sub
push
xorb
sbb
addr16
stos
paddw
rcr
adc
mov
mov
add
xchg
int
xchg
shlb
js
and
or
push
mov
mov
ficoms
inc
int3
jo
jmp
fnstenv
rorl
les
es
data16
repz
arpl
sub
jmp
sub
mov
inc
add
fisubrl
xchg
inc
sbb
lds
in
xorl
mov
dec
aaa
dec
jmp
pusha
orl
fldcw
adcb
jle
adc
loop
add
mov
or
dec
pop
and
cmp
call
popa
mov
sub
and
cmp
fistpll
pop
mov
hlt
cmp
xchg
and
mov
adc
gs
pop
jmp
fldt
rcrb
in
fs
in
movsl
leave
enter
inc
mov
fs
xor
mov
outsb
pop
mov
arpl
lret
stos
sbb
and
data16
out
jno
aad
pop
insl
rcll
inc
mov
dec
inc
jnp
jmp
sub
jp
addl
push
js
xor
or
jp
sub
xchg
loop
sbb
pop
mov
and
and
mov
xchg
or
lcall
pop
xchg
jmp
leave
pop
or
inc
ffree
inc
adc
xchg
push
mov
add
dec
xor
ja
movsb
int
dec
adc
xchg
sub
test
icebp
pop
lea
pushf
hlt
adc
mov
pop
sbb
mov
push
inc
jb
test
rcll
jmp
sahf
fnstcw
cmp
sahf
and
mov
adc
push
add
pop
lods
cmpb
add
sub
leave
jo
or
je
xor
sbb
dec
jmp
or
lds
and
push
xchg
cwtl
sarb
pop
test
ror
lea
pop
xchg
jns
ret
popf
cmpsb
or
lods
movsl
inc
mov
sbb
push
fsubrs
movsl
jmp
int3
and
adc
loop
mov
test
push
mov
xchg
pop
movsl
movsb
adc
mov
xor
out
pop
lcall
jno
sti
jo
mov
arpl
jnp
add
ret
aaa
or
out
jns
lea
clc
add
hlt
sbb
dec
inc
nop
or
sbb
adcl
fldl
mov
popf
mov
dec
xor
int
pop
mov
cmpsl
scas
loopne
mov
stos
rol
push
inc
cmc
test
push
push
mov
fadd
stos
mov
loope
and
cmpsl
dec
stos
mov
push
cld
jnp
mov
bound
and
or
ret
outsl
or
sub
les
xor
jp
dec
mov
jno
or
repnz
call
gs
cmpsb
dec
stos
push
add
aaa
lock
or
std
xchg
lea
jb
test
cmpsb
ret
inc
or
cs
lret
dec
add
push
pop
test
mov
cli
adc
daa
xor
int3
into
jbe
dec
inc
cmpsb
or
sub
xor
jp
jmp
rcll
lret
and
sub
repnz
sarl
mov
in
xchg
das
cli
inc
fistpll
int
cltd
loope
loopne
xchg
lret
xor
cmp
inc
es
adc
cmpsb
movsl
mov
fstps
mov
sbb
cld
cmp
xorb
sarb
call
jae
movsb
inc
sbb
push
repz
les
xchg
add
push
xor
pop
in
outsl
fimuls
xor
jg
lret
icebp
xlat
scas
push
lock
dec
cmp
les
gs
es
inc
lcall
sub
or
and
jecxz
call
movsl
mov
pop
cmp
mov
pop
sub
jnp
pop
jg
and
inc
mov
mov
out
in
mov
mov
adc
inc
mov
pop
test
inc
iret
xor
ja
xchg
push
jno
sbb
imul
popf
mov
loopne
and
push
aam
sub
mov
jae
cmpsb
into
in
std
fucomp
sub
xchg
gs
stc
mov
mov
xor
adc
mov
dec
test
and
fisubl
test
icebp
inc
mov
pusha
add
test
cmp
xchg
sub
push
pop
shll
popf
aaa
jl
mov
ret
fmull
popf
inc
add
mov
sbb
fwait
xor
into
in
push
xchg
and
das
inc
pop
cmp
pop
ljmp
mov
or
js
xlat
adc
mov
or
sub
mov
iret
or
pop
mov
fldl
lea
xor
repnz
nop
addr16
sbbl
lods
stos
inc
push
mov
outsb
mov
jg
sub
push
mov
enter
mov
stc
pop
xchg
dec
mov
dec
data16
ret
and
lods
popf
lcall
addr16
xchg
lock
adc
fucom
mov
stos
mov
jl
adc
sar
es
enter
xor
mov
std
cld
aaa
push
cmp
jae
push
add
jle
sbb
aad
lods
or
push
adc
call
jbe
test
insl
movsb
fdivrl
pushf
negb
mov
cld
and
mov
and
ret
out
aas
adc
xchg
add
aam
pop
push
les
push
das
add
mov
cli
add
mov
nop
xchg
pop
insl
push
pop
fidivs
int
xchg
xor
in
mov
cmc
xor
mov
insb
jbe
leave
sbb
clc
mov
add
in
cmpl
sub
imul
jg
fbstp
ds
add
int
daa
dec
xor
fyl2x
sbb
xchg
test
shlb
xor
inc
fstpt
dec
push
push
fwait
adc
adc
add
je
or
arpl
pop
leave
shll
cld
cmp
pop
adc
mov
aas
mov
dec
pop
mov
lds
hlt
lahf
mov
inc
roll
xor
hlt
mov
pop
lods
dec
cmp
rorl
dec
xor
out
fnstenv
xchg
add
xchg
cs
mov
popf
hlt
jg
push
fisttps
dec
pop
lret
stc
sbb
add
mov
int
sbb
gs
std
cmp
mov
popa
push
sti
test
popf
push
je
add
outsb
repz
daa
jbe
stc
test
sub
out
es
cld
aad
pop
inc
push
sar
ljmp
dec
mov
push
callw
push
sahf
pusha
xchg
xlat
lret
ds
mov
stos
mov
xor
push
leave
pop
decl
add
mov
pop
fidivrl
push
test
jecxz
sbb
inc
repnz
cs
mov
sub
sub
es
lods
out
daa
in
and
mov
sbb
add
dec
pop
lcall
pop
fisubrs
add
out
clc
xor
sbb
jne
lods
mov
jecxz
lret
jp
jnp
iret
xchg
xrelease
pop
das
ds
sbb
int3
nop
gs
imul
fadds
std
lahf
mov
or
sbb
jge
and
scas
jns
mov
mov
mov
inc
cmp
scas
std
fmull
lods
cmp
repz
mov
movsb
outsb
inc
repnz
lods
flds
pop
dec
cmp
std
movsl
inc
mov
int3
and
lcall
and
in
flds
or
out
fcomps
push
xchg
xchg
cmp
cli
jg
pusha
sbb
sub
test
jmp
xor
xchg
cwtl
popf
add
mov
sbb
aas
subl
inc
xchg
arpl
pop
js
dec
xchg
mov
movsl
iret
mov
push
int3
dec
adc
negl
adc
jo
test
loop
adc
pop
sub
hlt
push
inc
cli
and
ljmp
sbb
fstps
test
cmpsb
into
test
inc
scas
fstps
and
inc
and
inc
ds
push
pop
add
pop
dec
xchg
mov
cs
mov
mov
repnz
add
cmp
movsl
pop
mov
leave
sbbb
mov
or
testl
jbe
stc
push
shrb
and
and
js
fcoml
sub
jp
or
sbb
cmp
inc
mov
mov
outsb
push
xchg
jmp
daa
inc
out
xor
test
or
repnz
movl
data16
lds
stc
pop
cmp
or
pop
shrb
clc
xor
adc
in
fcmovbe
cmp
sbb
cmp
scas
pop
iret
add
enter
sub
pusha
jo
adc
cld
enter
scas
outsl
xor
add
or
pop
lods
pop
and
inc
sub
dec
pusha
dec
repnz
push
jnp
mov
shl
loope
dec
addb
cmp
cmp
fdivp
sbb
popa
mov
xor
add
dec
sub
jp
xchg
sub
bt
sbb
stos
js
and
xchg
pop
push
das
adc
jge
popf
push
adc
fldt
mov
rorb
xchg
ret
out
and
cmc
adc
jmp
mov
insl
xor
pop
cmp
in
sahf
or
push
fs
cmp
mov
xor
xchg
sub
and
dec
inc
cmpsb
xor
aas
js
and
jle
cmpsb
and
cli
mov
add
sti
pop
mov
sbb
popa
push
dec
imul
dec
push
movsb
pop
mov
ljmp
add
add
arpl
rep
icebp
rcrb
jno
mov
mov
inc
mov
popl
adc
repnz
adc
rclb
dec
jl
mov
add
cmp
loopne
xor
mov
xchg
pushf
test
xor
fisttpl
out
les
pop
sub
loope
inc
fldenv
loop
mov
xor
jecxz
stos
loop
orl
ja
gs
ror
fwait
popa
and
jecxz
scas
sbb
movsb
jnp
mov
imul
jae
sub
aad
leave
xchg
push
and
sbb
ret
xor
out
test
aas
cwtl
push
mov
xchg
inc
fwait
and
xchg
xchg
aad
cmp
xchg
pop
ja
add
sbbl
popa
in
rcrl
cwtl
movsb
push
int3
fcompl
sbb
lret
jns
dec
out
mov
das
in
cli
mov
push
out
mov
sti
push
enter
cs
les
lcall
into
iret
push
in
inc
stc
sub
xor
imul
call
jg
int
ror
daa
mov
dec
divl
cs
add
mov
jno
out
or
pop
sti
mov
mov
jne
inc
shll
inc
sub
fucom
cmpsb
int3
jge
cmp
cld
or
or
aaa
jecxz
push
add
cltd
hlt
xor
dec
mov
add
mov
in
dec
jns
pop
mov
out
jne
xchg
sti
cmp
dec
push
out
dec
jns
or
add
xchg
dec
js
sbb
shl
xor
mov
mov
sbb
sbb
push
insl
faddp
sub
add
shl
mov
cmp
or
xchg
jmp
popa
push
data16
test
inc
xor
lods
push
ljmp
or
hlt
dec
andl
push
sub
add
fwait
lods
pop
sub
jne
sbb
pop
xchg
aam
sti
imul
mov
hlt
or
in
js
aad
jle
add
mov
jg
mov
cmpsb
cmp
pop
mov
mov
dec
or
out
inc
add
xchg
pushf
sti
pop
mov
pop
cli
cmp
add
pop
mov
jb
cmp
insl
ret
sub
mov
or
mov
inc
test
stos
mov
xchg
jmp
incl
lock
stc
push
dec
ret
xor
icebp
mull
icebp
or
mov
enter
divb
cwtd
push
inc
daa
cmp
imul
xchg
xchg
adc
js
loop
lcall
inc
pop
or
push
sub
mov
sbb
popa
sahf
ss
sbb
pop
jl
add
mov
mov
adc
cmp
sub
stc
push
mov
pop
lahf
repnz
je
insl
xchg
jnp
jge
ficoml
adc
lret
jno
add
gs
fstpl
sbb
insl
sub
jmp
push
in
jmp
xchg
add
icebp
je
pcmpgtb
cmp
mov
mov
sbb
jecxz
in
inc
pop
cmpsl
test
int3
insl
sub
jae
or
clc
pop
subb
and
mov
mov
cmp
adc
lods
test
sbb
xchg
ja
fcoms
and
loop
cmp
or
dec
xchg
hlt
lret
jp
loop
or
add
mov
loopne
call
cld
push
or
into
cmp
fsubs
mov
and
ds
lret
sbb
xchg
lods
push
xor
iret
lahf
xor
mov
and
imul
movsb
add
dec
and
loopne
popl
mov
rorb
pop
mov
lods
and
or
dec
xor
ja
aad
push
jne
push
xchg
enter
and
mov
ja
fiadds
mov
clc
std
fstl
pop
cmp
les
pop
sbb
por
push
daa
insl
movsb
pop
cmc
insl
addb
popa
mov
or
and
in
icebp
inc
jmp
mov
push
jb
inc
mov
cwtl
repnz
xchg
stos
test
pop
sbb
cmp
pop
and
xor
sbb
cmc
lock
aad
testl
xchg
cmpsb
pusha
shll
rolb
popf
mov
or
fiaddl
call
pop
or
ljmp
bound
and
cmp
orb
cmc
dec
push
inc
enter
push
cwtl
mov
sti
pop
outsl
jne
and
and
shrb
jb
test
sbb
fimuls
jge
lods
push
stos
push
popa
lea
xor
aas
inc
pop
outsb
outsb
je
sbb
int3
sbb
mov
push
push
sbb
aam
mov
adcl
push
test
es
addl
push
gs
fnsave
push
push
ret
ja
push
pop
in
leave
push
pop
in
cmp
inc
mov
sbb
push
insb
mov
sub
xlat
rolb
cwtl
xchg
sbb
and
icebp
inc
shl
flds
sahf
xchg
mov
xor
dec
jns
inc
sub
enter
xchg
subl
shrl
mov
mov
lods
js
push
xchg
push
loop
and
jmp
lcall
dec
adc
sbb
loopne
fldl
stos
push
lret
jb
pop
pop
or
mov
mov
jb
inc
pop
or
and
int3
divb
adc
out
xchg
push
mov
cmpsl
pop
fistpl
fldl
pop
ret
repz
movsb
and
movsb
mov
cld
mulb
in
pushf
std
shlb
sbb
clc
mov
rorl
imul
dec
add
push
int3
pop
loop
inc
cmp
je
popf
sar
and
or
adcb
inc
rolb
add
adc
dec
je
and
int
cmp
subl
cmp
and
sbb
adc
mov
fs
sub
enter
or
popa
sbb
cmp
mov
pop
sbb
in
or
clc
cmpsl
test
in
ds
lahf
or
orb
stos
mov
pop
xchg
cmc
jge
roll
push
ret
ja
das
rcr
push
push
lds
cmp
ljmp
jge
jae
mov
cli
pop
call
nop
add
shlb
dec
pushf
sub
mov
incb
test
leave
imul
scas
ret
push
jns
adc
mov
imul
out
test
outsl
cmp
sbb
sbb
enter
ret
jns
or
and
stos
xchg
mov
jle
movsl
cmp
xor
inc
adc
push
insb
testb
pop
pop
stos
loop
mov
and
or
xchg
out
and
adc
jge
mov
mov
repnz
jmp
fs
cwtl
out
dec
out
or
insl
pop
test
push
inc
mov
cltd
leave
add
pop
dec
mov
adc
ja
xchg
leave
sbb
xor
stos
sbb
jnp
jnp
or
rorl
cli
jmp
les
sbb
jno
xchg
mov
push
inc
sbb
cwtl
mov
ret
in
sbb
cmp
add
loop
aam
inc
and
push
sbb
jl
mov
jns
jae
out
xchg
ss
and
inc
mov
pop
fsub
dec
sbb
rol
add
and
sti
outsb
add
xor
jo
test
insl
fistl
mov
bound
push
fisubs
dec
call
xor
mov
in
insb
loop
mov
lret
aas
xchg
mov
or
mov
dec
or
ficompl
negb
dec
cmp
jle
mov
int3
mov
mov
aaa
or
arpl
iret
shrl
jb
shll
shrl
movsb
outsl
mov
dec
pop
xchg
repz
dec
sub
dec
mov
sbb
lret
push
dec
mov
loopne
bound
loopne
leave
int3
adc
mov
push
mov
sbb
stos
ficompl
idiv
inc
mov
sub
and
mov
jb
sub
xchg
xor
mov
and
rcrb
mov
jp
aaa
inc
mov
mov
leave
cli
cltd
imul
xor
enter
push
and
out
pushf
scas
add
dec
cmp
dec
jg
xor
pop
test
sarw
daa
dec
pop
jb
test
adc
rcrl
fdivrs
pusha
mov
dec
nop
movsb
in
stos
pop
sub
fwait
xor
sbb
inc
inc
pushf
jb
push
out
arpl
js
es
xor
push
scas
insb
mov
adc
dec
ss
sub
sbb
aad
xor
popf
lea
xchg
jnp
pop
sbbl
fmuls
xchg
sbb
xlat
push
cld
fisttpll
ljmp
xchg
jno
test
or
cmpsl
inc
adc
stos
dec
jecxz
cs
fstpt
adc
scas
dec
mov
out
sub
sbb
dec
xor
xchg
test
mov
outsb
daa
mov
cmp
imul
xchg
inc
stos
sub
cmpsb
jbe
or
sub
sub
lds
dec
push
ja
movsb
or
jmp
jo
test
jmp
movsb
dec
je
imul
jle
push
adc
jmp
or
testl
mov
mov
test
popa
xlat
and
aas
outsl
sbb
adc
ret
data16
push
xchg
inc
xorl
fisttpll
cwtl
dec
lret
adc
push
in
je
dec
jmp
inc
xor
inc
xchg
testb
mov
int
es
sbb
sub
push
ljmp
int3
in
enter
daa
jmp
ja
inc
add
mov
ljmp
push
pusha
adc
sub
int
mov
xchg
ljmp
push
cmp
mov
idiv
lahf
xor
mov
jbe
subl
aad
push
hlt
jp
cld
arpl
out
push
sbb
xchg
xchg
out
imul
aas
add
ja
stc
lock
loope
push
iret
pop
xchg
cwtl
sti
dec
lds
aaa
cli
jo
pop
and
mov
hlt
imul
ret
outsb
popl
pop
ret
xchg
shll
outsb
mov
das
pop
mov
pop
sbb
aas
dec
pop
and
outsl
inc
clc
or
adc
aas
movsb
jl
fstl
sbb
shrl
aad
mov
cmp
movsl
mov
fbstp
loope
inc
call
int
push
jno
js
arpl
scas
inc
mov
mov
mov
aas
idiv
div
imull
add
jecxz
sbb
inc
mov
add
xchg
into
adc
icebp
out
popf
fldt
inc
insl
jno
sub
or
mov
es
pop
out
sub
dec
push
mov
jb
sub
dec
add
loopne
nop
std
adc
sub
sub
popa
cmp
imul
out
pop
mov
sbbb
pop
enter
addr16
in
sub
dec
shll
loop
jle
lock
imul
and
push
adc
das
and
fcmovnbe
mov
pop
iret
popa
xchg
sti
mov
lcall
inc
jle
inc
adc
icebp
out
and
lods
sub
cli
cli
jmp
mov
je
jnp
xchg
or
mov
in
xchg
addr16
inc
fcoms
push
jge
cmp
fcoml
jle
mov
jns
cmpb
fidivrs
add
pop
fstl
icebp
arpl
xchg
out
sub
and
cmpsl
push
insl
rorb
xor
sti
outsl
imul
mov
mov
icebp
mov
mov
fists
lahf
lea
call
test
out
data16
jno
mov
repz
cmp
xor
nop
xchg
push
fwait
push
cmp
and
cltd
daa
or
push
adc
lods
sbb
adc
in
mov
stc
and
cmp
add
dec
mull
push
bnd
iret
adc
dec
lds
rclb
daa
ss
xor
or
inc
jle
clc
data16
inc
ljmp
mov
lahf
xchg
add
es
mov
leave
mov
push
mov
sbb
adc
fwait
rolb
lahf
xor
daa
sarb
imul
adc
adcl
cmp
xor
sub
mov
push
jbe
mov
jl
and
adc
sub
scas
nop
jmp
mov
mov
frstor
xchg
fucomi
push
sahf
pop
or
gs
fmull
jo
cmp
mov
xor
push
insl
out
adc
xchg
mov
mov
mov
xchg
imul
jbe
stos
movsl
arpl
push
sbbl
xchg
dec
nop
insb
xchg
jge
data16
pop
cmp
pop
lahf
or
xor
outsl
sub
aas
das
icebp
fmull
sbb
sbb
mov
cs
mov
push
insb
sub
sbb
movsl
aaa
sbb
ret
clc
dec
xor
mov
dec
inc
xor
pusha
push
adcb
scas
fs
mov
dec
shll
xlat
mov
into
pop
shl
lea
test
imul
xchg
mov
adc
mov
sub
jg
aas
jp
jg
mov
jbe
cs
loopne
inc
mov
in
jecxz
sbb
mov
fs
lret
pop
ss
dec
loope
or
out
push
push
fisubl
scas
jb
and
xchg
mov
push
mov
and
push
xchg
pop
jo
adc
xchg
fdivl
or
sub
mov
cmpsl
cmp
cwtl
or
cmpsl
fsubrs
and
shll
sahf
cmp
jmp
into
or
pusha
sub
dec
add
jae
pushf
or
cmp
int
sbb
jo
mov
in
mov
movsb
mov
std
cltd
dec
cmpsl
push
dec
aas
and
pop
fldt
inc
push
cmpsl
xor
xchg
push
test
outsb
adc
push
stos
enter
lahf
mov
jl
or
test
ljmp
rclb
jno
je
cmp
insb
xchg
data16
adc
cmpsl
fs
jo
inc
mov
aad
mov
push
fwait
pop
sbb
or
je
cmp
sbb
mov
and
xchg
stc
inc
les
xor
lods
sahf
fwait
insl
jge
adcl
mov
dec
or
jno
pop
cmp
je
stos
lea
xchg
in
iret
cmpsl
lret
xor
pop
jne
push
pop
mov
push
lldt
push
lahf
cwtl
add
sbb
cld
leave
std
cmpl
cli
inc
in
pop
test
dec
dec
std
sub
cmc
pop
fiaddl
leave
xchg
or
mov
mov
jge
jge
sub
mov
hlt
push
mov
sti
sar
jae
aaa
and
out
sbb
cmpsb
cmp
jne
xor
and
lret
aad
popf
xor
ficoml
mov
and
sbb
les
adc
mov
sbb
out
adc
leave
jb
shr
dec
imulb
int
call
cmp
in
cli
mov
ficoms
or
cmp
or
sahf
inc
cmp
sub
xchg
cs
push
xor
es
mul
fucomp
sbb
and
insl
mov
xor
dec
mov
jl
mov
mov
pop
xor
dec
cs
aad
add
adc
xor
imul
shll
add
dec
fisttps
sahf
test
sbb
add
mov
and
xchg
cmp
mov
xchg
jle
inc
lods
pop
in
jae
pop
mov
cmp
xlat
push
jge
andl
addr16
inc
jecxz
out
sub
out
adc
jns
add
cmpsb
stos
jmp
movsb
loop
negb
stc
inc
xchg
sti
or
sbb
jge
mov
sbb
imul
jmp
dec
fstpl
sti
fst
addr16
pop
aaa
pop
cmpl
xchg
sub
scas
sbb
pop
arpl
mov
or
mov
cld
das
testb
mov
mov
pop
aas
sbb
lcall
loopne
add
add
push
mov
and
mov
and
inc
jns
addr16
fs
in
inc
les
mov
xchg
mov
push
rcrl
push
cli
mov
outsb
and
jae
inc
cli
add
sahf
fmulp
mov
scas
mov
mov
jg
shl
cmp
js
mov
insb
push
sbb
cs
out
mov
loopne
pop
fistl
mov
inc
and
shl
jae
dec
icebp
mov
je
or
mov
add
sbb
call
mov
xor
xor
ljmp
imull
ljmp
sysret
cmpsb
pop
fwait
hlt
jb
daa
aam
xor
adc
pop
sahf
inc
out
sbbl
xor
std
sti
cmp
xchg
mov
fmuls
andl
imul
das
out
fstpl
or
inc
sbb
adc
test
jle
jg
popa
icebp
adc
mov
lcall
jb
inc
test
jg
xchg
sub
add
jb
loope
mov
xlat
push
dec
mov
mov
or
pop
sbb
or
add
or
push
cs
mov
cmp
dec
test
jno
stos
xchg
rcr
sub
or
xchg
mov
add
flds
bound
not
xchg
movsb
movsl
push
imul
out
adc
icebp
push
sar
lea
popf
and
loop
insb
pop
xor
es
int3
test
fadd
cmp
or
std
fstpt
mov
cmpsl
mov
rclb
add
xchg
mov
mov
jbe
inc
outsb
inc
dec
leave
pop
dec
dec
loope
jb
push
xlat
sub
cmp
or
sarl
lea
mov
xchg
cli
cmp
in
pushf
jb
stos
push
das
stos
aam
xchg
lret
xchg
ljmp
jmp
mov
pop
inc
not
pop
dec
ficompl
lar
pop
andb
in
mov
and
jmp
inc
clc
and
push
dec
pusha
mov
and
aaa
mov
data16
rcl
fistps
add
insb
cmpsb
nop
lds
lret
int
xlat
ret
fstl
jnp
lret
hlt
sbb
aad
jb
mov
inc
adc
mov
ss
mov
aad
pop
adc
adc
adc
loop
and
iret
mov
lock
cltd
xchg
jle
testl
jno,pn
nop
jno
dec
sub
and
jecxz
addr16
cmp
rclb
mov
imul
add
mov
mov
arpl
enter
mov
sub
pop
xor
xchg
jb
aaa
js
lcall
sub
lret
lret
add
divl
sub
lret
mov
sub
lret
sub
aas
std
inc
pusha
push
dec
xchg
or
cld
cmp
xchg
push
addr16
repnz
push
test
mov
scas
or
mov
sbb
jno
lcall
div
fdivs
addb
sub
ljmp
mov
sarl
in
push
push
pop
jg
jb
dec
outsb
dec
nopl
pop
rcr
sub
fwait
cmc
ret
bound
inc
push
out
push
xor
movsb
lods
jge
cmpsb
arpl
mov
enter
pop
xchg
cli
clc
rolb
cltd
fisttpll
decl
and
xchg
ret
xchg
fildl
je
mov
add
inc
in
cmp
pop
out
xchg
pop
dec
lods
sbb
pop
sar
or
inc
or
imul
test
negb
addr16
addr16
fsts
and
pop
popa
adc
push
dec
inc
add
jo
cmp
ss
scas
nop
mov
and
lds
out
cmp
sti
push
mov
stc
add
stos
cmp
int
mov
add
lock
mov
jg
cmp
dec
nop
cmp
scas
dec
cmpl
cld
sarl
jmp
xchg
mov
xor
je
mov
adc
insl
push
mov
add
or
xchg
loope
pop
cltd
notb
mov
sub
inc
add
dec
std
pop
lret
test
sub
fwait
jl
bt
scas
cld
movsl
xchg
sub
sbb
jns
xchg
shll
and
mov
ja
inc
adc
pop
lcall
push
in
cmc
xor
les
rcrl
es
test
dec
int
pop
mov
jne
ds
inc
mov
jae
jle
fwait
xor
ljmp
popa
push
mov
rcrb
mov
cli
repnz
jmp
xchg
jae
fcmovnb
mov
fidivs
inc
mov
hlt
mov
or
sbb
and
dec
out
push
mov
or
pop
mov
fcomps
aaa
cmp
jbe
pop
clc
aas
mov
push
xor
xchg
sbb
repz
jo
mov
leave
stos
jle
mov
xor
xchg
addl
add
push
and
push
js
rcrb
test
mov
push
inc
sbb
in
and
mov
adc
ret
stc
adc
push
and
gs
int
stc
cmp
sahf
jg
fcmovnu
push
dec
out
shlb
inc
push
rclb
test
sarl
nop
xchg
nop
or
and
xchg
push
push
lcall
adc
adc
cmpsl
fs
push
push
push
imul
in
hlt
call
mov
add
and
cmpsl
push
shll
hlt
repz
add
faddl
xchg
sbb
mov
addr16
xchg
inc
je
jae
mov
sbb
daa
add
pop
ljmp
and
jg
mov
xchg
mov
pushf
sub
sub
mov
dec
or
push
jno
and
ret
repnz
frstpm(287
xorl
xchg
iret
cmp
loope
mov
pop
bound
cmp
icebp
mov
out
xor
je
jecxz
cs
cli
dec
push
aas
xchg
das
pop
jg
xor
jo
push
mov
add
push
aaa
fcmove
push
pcmpgtw
add
mov
jge
and
mov
test
daa
sub
in
dec
loope
lods
sub
pushl
lret
gs
imul
mov
push
jmp
inc
sub
cmpsb
stos
mov
dec
mov
jo
push
inc
shlb
adc
inc
push
scas
fnsave
sbb
jo
adc
xor
mov
clc
xor
push
or
mov
push
iret
inc
xchg
add
ret
insb
mov
mov
xchg
push
sbb
das
jne
loopne
xchg
pop
insb
mov
sbb
add
push
fstpt
dec
xchg
or
or
push
adc
pop
movsb
mov
mov
pop
js
and
out
mov
rcr
inc
scas
mov
xlat
sbb
out
or
adc
mov
clc
pop
jl
adc
inc
neg
in
xchg
popa
in
std
cmpsb
arpl
jg
inc
stos
cmpsb
pop
rcll
test
and
das
je
enter
adc
arpl
dec
cmp
or
adc
adc
sbb
xor
xchg
dec
jne
mov
jns
jnp
int
xchg
inc
inc
je
mov
test
fs
ret
push
out
xor
sub
mov
mov
xchg
test
scas
inc
cld
imul
mov
outsb
xchg
jmp
xchg
movl
incb
adc
test
jnp
pushf
scas
push
push
pop
lods
cmp
pop
inc
scas
scas
jmp
cmpsb
or
cld
ret
aaa
sbb
div
mov
imul
pop
mov
subl
movsl
xor
inc
sub
arpl
mov
jl
add
je
xchg
mov
xlat
mov
jmp
ds
out
xchg
shll
xor
lock
xchg
sti
add
hlt
mov
mov
xchg
push
ja
stc
or
sub
add
sbb
in
cmp
movsl
xchg
insb
xchg
push
or
scas
sub
pusha
xchg
xchg
lods
sbb
lods
addr16
test
shl
pop
push
pop
pop
xor
sbb
mov
xchg
inc
test
xchg
dec
push
push
sub
cli
mov
outsl
test
xchg
mov
push
add
das
lcall
outsb
cmc
push
push
cmpsb
test
mov
stos
mov
and
arpl
mov
push
lcall
xchg
aaa
inc
mov
xchg
clc
push
xchg
insl
in
and
mov
and
or
stos
adc
in
mov
push
inc
push
out
mov
fstl
lcall
push
repnz
mov
or
lds
mov
out
dec
mov
push
inc
in
lret
aaa
stos
xchg
or
or
sub
insb
ret
mov
popa
xor
stos
pop
int3
jl
in
inc
fcmovnu
lret
outsb
jge
stos
bound
cwtl
scas
bound
cmp
jl
repnz
xor
enter
or
xor
aaa
xor
imul
adc
es
push
movsb
mov
cwtl
pop
mov
sbb
cmp
and
inc
mov
daa
mov
mov
push
dec
leave
jp
mov
psubq
add
lods
dec
clc
cmpsb
sbb
adc
mov
xchg
rorl
cld
inc
pop
popf
ljmp
stos
ret
std
cld
lahf
pushf
push
sub
and
lret
or
dec
sub
push
sub
inc
cld
cmp
clc
xchg
sti
fidivl
cmc
cs
adc
sbb
cmp
sbb
sbb
cmp
js
cmpsl
add
out
mov
mov
inc
lods
bound
add
cwtl
in
aad
shlb
test
cmpsl
push
push
dec
stos
shr
jge
jge
push
pop
adc
push
mov
sahf
mov
std
xchg
push
cmc
mov
pop
cmpsl
ljmp
sar
fadd
imul
mov
mov
into
jmp
repnz
jge
aam
outsl
mov
mov
data16
mov
inc
sbb
or
lods
cmp
push
dec
sbb
movsl
mov
in
fcmovu
xor
imul
data16
mov
addr16
in
clc
ficompl
or
leave
fcomip
fcompl
cmp
popa
into
mov
mov
out
scas
mov
fcomps
cmpsl
mov
jbe
das
dec
cs
fildl
push
fdiv
fst
sbb
in
inc
inc
popl
cli
in
and
dec
sbb
dec
xchg
fs
lock
xlat
loopne
jno
lret
sub
hlt
or
sbb
mov
push
jge
shl
cs
add
out
cli
and
push
clc
repz
imul
jnp
xor
pusha
mov
xor
add
xchg
jo
mov
pop
jle
sahf
lock
daa
xchg
pop
in
cmp
outsl
xchg
and
das
hlt
cmp
fwait
mov
dec
jmp
cmpsb
dec
xor
out
push
mov
nop
mov
dec
out
repnz
scas
mov
scas
inc
jae
mov
nop
xor
outsb
xchg
sbb
stos
out
push
add
negb
xor
ljmp
ds
bound
ret
stc
or
lea
jp
pop
int3
push
xchg
test
xor
jmp
out
daa
popa
cmp
mov
xor
mov
stos
insb
xchg
out
adc
lret
push
call
stos
mov
sub
gs
adc
and
adc
imul
out
jb
fsubp
cmpsl
mov
push
and
inc
push
and
ds
lds
mov
jge
xlat
popf
pop
add
dec
cmc
xor
jp
in
and
insl
fs
fnsave
je
adc
cmp
shl
rcll
mov
pop
mov
scas
jno
insl
dec
cmp
dec
mov
mov
loope
and
movsb
in
sbb
cmp
xchg
pop
sbb
addl
dec
mul
aas
inc
xor
jge
xchg
lock
fstpl
fildl
sbb
pop
clc
ds
jne
and
inc
push
or
out
ljmp
aaa
or
sub
push
imul
xchg
fcomps
in
sbb
into
xor
jb
pushf
jae
mov
cltd
dec
sub
push
jecxz
daa
sub
lock
loopne
ret
repz
stos
adc
js
xor
dec
iret
cld
aas
mov
out
inc
aam
mov
pop
test
inc
mov
mov
shl
dec
aam
push
xchg
push
add
fwait
iret
test
or
push
xorl
sti
inc
stos
pop
push
or
cli
int3
add
jo
cmp
dec
pop
cmp
test
in
mov
fistps
pushf
ss
mov
jae
xor
fcoml
movsb
jle
popf
and
call
leave
push
pop
jle
or
subb
mov
outsl
rolb
cwtl
mov
into
mov
ret
cmp
jbe
sub
enter
out
and
pop
pop
aad
hlt
pop
sbb
repz
pop
es
push
mov
std
mov
test
cmc
nop
fnstenv
push
jo
lea
stc
insl
mov
cmp
imull
mov
and
jns
and
in
dec
gs
imul
rorb
dec
push
enter
cwtl
aam
gs
shl
xor
cwtl
rcl
and
inc
inc
mov
incl
mov
lea
jne
sbb
sti
inc
push
lods
fcmovne
mov
lret
adc
ljmp
xchg
jae
add
jg
pop
mov
or
imul
divb
loop
lahf
ror
in
or
or
mov
jecxz
or
push
ss
das
push
mov
test
sub
and
dec
add
mov
clc
lods
mov
das
idiv
outsb
xchg
or
jnp
xchg
add
aam
push
daa
fidivrl
mov
inc
idiv
movsb
inc
jl
stos
aas
and
pushf
out
add
aaa
das
addb
nop
xchg
xorl
dec
inc
shlb
repz
push
ret
std
jecxz
cltd
xor
push
mov
loope
sbb
fwait
imul
or
arpl
ja
sub
xchg
pop
xchg
aaa
test
aad
aam
daa
cmpsb
xor
or
pop
ljmp
imul
hlt
test
push
xchg
cmp
dec
ja
test
dec
add
add
loopne
jge
mov
add
adc
cmp
ljmp
imul
jb
mov
and
adc
xchg
es
dec
or
fcoms
adc
jmp
mov
mov
inc
add
mov
add
lahf
in
insb
inc
rclb
adc
pop
iret
insl
jbe
das
push
xor
leave
cmp
sub
xlat
mov
pop
lahf
inc
lods
push
sub
cmpl
rorb
lcall
adc
in
stos
push
pop
xchg
cmp
shlb
and
push
in
repz
mov
cltd
sbb
lahf
mov
sbb
fwait
mov
push
cmp
sbb
lahf
and
inc
fsubrs
lcall
push
add
mov
xchg
je
xchg
mov
push
mov
add
stos
push
out
cmp
rclb
jb
addl
mov
mov
packsswb
popa
aad
je
mov
dec
lods
adc
repnz
and
inc
hlt
fwait
push
mov
jmp
pop
nop
into
lock
or
dec
pop
push
aas
lock
movsl
cld
pushl
pop
or
xchg
mov
imul
cltd
ja
aam
mov
adc
push
fwait
jge
stos
add
movsl
sub
push
mov
jmp
das
decl
mov
inc
cmp
daa
and
je
stos
cltd
imul
popa
jns
nop
aad
sub
ds
outsb
xchg
jns
out
mov
cmpsl
inc
mov
cld
xor
int3
xor
or
pop
xchg
dec
sub
loope
fnsave
aas
pop
add
inc
jl
fs
loopne
out
test
and
inc
and
or
jnp
jo
dec
push
arpl
mov
mov
loope
addr16
lock
jnp
pop
adc
inc
xor
add
inc
sbb
mov
dec
cmp
mov
sbb
je
or
jae
movsl
in
or
negl
in
sahf
js
or
addr16
dec
adc
sub
or
add
fsubr
shll
xor
push
lcall
mov
dec
mov
in
sub
xchg
pop
loopne
cmp
mov
push
xchg
xor
xor
push
xor
xstore-rng
cmpsl
add
inc
cs
pop
cmp
push
sub
movsb
fs
sbb
add
addr16
clc
dec
sub
rorl
sub
and
popa
or
sbb
testb
jle
push
mov
adc
mov
sarb
add
leave
inc
mov
mov
das
jno
mov
fstps
xor
and
add
push
jne
orb
in
sti
je
ret
push
mov
sbb
out
push
cmp
xchg
ljmp
or
les
shlb
mov
pushf
movsb
pop
leave
test
shrl
mov
cs
mov
xor
xor
call
cwtl
inc
insl
out
jge
movsb
ret
in
cmp
or
out
std
popa
push
idivb
xor
xchg
sbbl
loope
jnp
mov
in
push
lret
call
push
cwtl
sahf
inc
and
mov
pop
cwtl
xlat
sbb
jle
mov
jne
cmpsl
add
jmp
adc
mov
cmp
adc
inc
sbb
orl
xchg
rclb
xchg
mov
lcall
push
aam
stos
cmp
das
insb
xchg
jo
pop
mov
popf
xor
inc
dec
outsb
mov
push
stos
pop
pop
in
or
push
adc
cmp
dec
scas
ss
int
mov
je
xor
pop
jns
aam
cmpsb
mov
sbb
in
sbbl
out
je
lcall
cmp
lods
in
into
inc
lcall
lret
cmp
jne
xor
in
sbb
and
or
aad
sbb
mov
dec
fnstenv
xchg
sti
es
into
mov
fadd
mov
fwait
bound
cmp
imul
jb
xchg
inc
testl
jge
mov
mov
jbe
dec
stos
scas
push
mov
cmp
or
push
add
add
scas
test
aas
rorb
call
pop
out
mov
dec
ficoml
lldt
push
adc
bound
sbb
sbb
icebp
into
mov
test
idivl
scas
lahf
jbe
add
mov
inc
cli
fsubp
in
mov
sub
mov
pop
mov
xor
test
sbb
dec
int
and
pushf
stos
loope
lock
adc
cmp
sub
xchg
mov
test
insl
dec
sbb
jb
and
sti
mov
dec
adc
es
dec
insl
dec
push
test
sahf
lcall
lahf
mov
mov
mov
jg
mov
je
imul
ds
pop
inc
sti
or
popf
sbb
mov
xor
loope
ljmp
sub
cwtl
mov
xor
or
or
cld
cmp
mov
or
sub
xchg
xor
mov
subl
int3
cmpl
sbb
adc
add
out
daa
or
mov
xchg
sub
xchg
push
into
mov
sbb
cld
test
push
inc
rclb
inc
cltd
sub
loop
jl
dec
mov
enter
loop
shlb
fmul
mov
pop
adc
xchg
jmp
test
adc
imul
imul
mov
pop
cld
jne,pt
mov
push
ret
repz
jl
repnz
shll
cmp
or
jmp
lods
xlat
sbb
test
sbb
std
sub
je
and
jae
push
test
cmp
scas
adc
daa
lret
shlb
adc
jge
dec
int
addr16
ja
and
sub
and
push
int3
xor
pop
or
fiaddl
push
fwait
popf
push
jp
je
add
fsubs
mov
hlt
and
aam
add
ret
cmp
nop
and
xchg
jg
stos
lret
int3
adc
das
add
mov
inc
cmp
cmc
int
and
pushf
sbb
mov
loope
popa
es
xlat
or
je
test
aam
es
or
ds
fucom
ror
loopne
loopne
out
ret
and
pushf
mov
xchg
xor
leave
inc
cmpsl
mov
pusha
mov
xchg
or
aaa
sahf
sbb
ss
fisubs
xor
js
mov
jl
adc
int3
aam
imul
aaa
dec
dec
mov
push
mov
inc
outsb
xor
pop
lods
push
ja
jmp
stos
mov
push
push
movsb
or
jno
jmp
inc
aam
divl
repz
negb
jnp
out
pop
mov
and
xchg
scas
fcomp
xor
inc
rorb
dec
push
mov
add
sub
fsubrl
xor
adc
cmp
lds
cmpb
mov
push
lcall
stos
popf
sbb
clc
fdivs
jb
lahf
push
imul
dec
cmp
test
mov
imul
ffree
or
push
pop
mov
and
rcll
dec
imull
pusha
pop
xor
add
into
pop
pop
mov
repz
jae
shrb
out
push
adc
in
stos
mov
sub
jmp
pop
jne
insl
pop
push
orl
dec
sahf
dec
orl
xchg
pop
pushf
je
lea
inc
or
cltd
ret
mov
out
pop
sub
je
push
push
fldcw
aas
sbb
jns
sub
sbb
iret
out
inc
jno
loope
push
mov
pop
lds
jne
popa
xor
cmp
xor
pop
in
sbb
sarl
jno
cmp
fistps
sub
call
incl
or
push
mov
sub
xor
xchg
dec
test
adc
push
cmp
pop
stos
adc
or
incb
xchg
mov
cmovnp
ret
pop
aaa
add
shr
add
mov
fidivrl
test
lret
imul
cwtl
das
int
repz
push
lret
insl
xchg
push
int3
decb
sub
les
loop
mov
jnp
insb
das
es
mov
shrl
jo
inc
data16
shll
scas
xchg
ss
fsubrs
cmp
scas
sub
push
mov
cmpsb
pop
dec
lret
xchg
sbb
and
pop
jae
mov
sbb
pop
mov
rolb
xchg
sbb
pop
ss
cmp
mov
mov
test
xor
push
nop
dec
les
jbe
lods
cmp
jnp
push
and
mov
out
or
push
jno
xchg
fisubs
sbb
push
arpl
out
in
adc
in
push
aas
sbb
pushf
mov
mov
rcll
push
in
jbe
sbb
mov
sub
popf
mov
push
mov
out
test
pop
xchg
cmpsb
in
push
pop
inc
and
leave
std
imul
add
leave
xchg
imul
push
push
cli
sbb
inc
pushf
in
addl
cmp
sti
pop
inc
gs
aad
out
jnp
daa
mov
repnz
and
xor
push
jne
xlat
or
popf
xor
dec
and
mov
movsl
cmp
mov
cmp
daa
xchg
ja
in
divl
mov
pop
mov
aad
and
pop
ljmp
popf
inc
xor
repz
mov
jno
xlat
int3
pushf
sub
push
fisubrs
incl
and
rcll
or
int3
mov
xchg
movsl
fisubrs
sarb
mov
lret
insl
cmp
push
sbb
outsl
mov
jge
outsb
xorl
les
rcl
stos
aam
inc
fdiv
mov
mov
jae
je
cmp
mov
cmc
jo
pop
xor
mov
dec
or
push
sarl
dec
pop
iret
cmpb
dec
add
int
push
xor
cltd
fsubp
inc
mov
adc
xor
inc
mov
inc
dec
cmp
xchg
mov
xlat
int3
int
push
into
test
jge
xchg
ret
sbbb
lcall
mov
ljmp
jbe
xchg
pop
lea
lds
xor
pop
out
movsb
sub
int3
mov
scas
jl
adc
dec
jns
pop
sbb
and
sub
sub
xchg
xor
mov
push
mov
sub
xlat
cwtl
es
jg
addb
jg
pop
leave
jl
cld
add
pop
pop
cmp
pushf
adc
loopne
and
inc
repz
lea
xor
ljmp
add
mov
lret
adc
pop
mov
aam
pop
orl
mov
aas
add
push
pop
div
cmp
pop
jns
int
inc
sub
xchg
or
xchg
mov
test
mov
fucomp
cmp
aad
push
scas
lock
dec
xchg
pusha
xchg
push
adc
les
jg
adc
cmpsb
in
dec
and
fcomps
orb
pop
bound
jge
bound
aas
pop
and
ds
loop
cld
movsl
insb
lea
lods
add
mov
sbb
sub
in
cltd
dec
xchg
mov
mov
ret
pop
ja
cmovle
aaa
sub
dec
das
fldt
mov
mov
enter
xor
push
sbb
mov
sub
jle
push
xchg
inc
sbb
std
mov
gs
loope
and
shrl
fisubl
loope
int3
daa
insb
inc
pop
call
test
sub
inc
xor
mov
inc
nop
outsb
aas
pop
popf
fwait
nop
sbb
inc
sbb
mov
cmp
inc
fwait
jl
adc
cmp
push
inc
insb
in
fcoms
leave
data16
jno
cwtl
sub
je
push
xor
js
dec
fs
movsl
cmp
xor
cmpsl
pop
notb
iret
cld
cmp
ss
and
insl
jbe
popf
push
ds
mov
sub
in
subb
mov
aam
jecxz
in
gs
dec
fidivs
daa
testl
out
and
pop
push
jno
cmp
mov
xlat
fwait
sub
adc
pushl
cld
call
stc
xchg
push
jno
xchg
sbb
aas
adc
or
lcall
arpl
pop
adc
adcb
mov
psllq
mov
adcb
xchg
or
mov
add
cmp
dec
test
call
sub
stos
xchg
leave
in
ss
insl
push
int
in
sbb
adc
sbb
dec
mov
jmp
rcrl
in
dec
push
mov
adc
pop
or
idiv
clc
fs
mov
or
jecxz
shl
and
std
pop
pop
sub
push
popa
je
mov
cmpsl
add
flds
dec
cmp
and
and
mov
cltd
sub
cmc
pop
loopne
mov
cmpsb
dec
scas
push
imul
arpl
cmp
add
shrl
loopne
lret
les
sub
hlt
loop
icebp
adc
imul
jmp
mov
std
jmp
insb
mov
andl
xor
inc
inc
das
mov
insb
or
test
and
push
pop
push
in
sbb
cmp
pop
shl
push
stc
mov
add
cwtl
int
push
pmuludq
leave
ficomps
fwait
sbb
stc
mov
xchg
das
xchg
test
mov
icebp
iret
push
es
mov
sbb
xlat
adc
sbb
adc
cmpb
stos
or
gs
jge
xchg
or
cmp
js
inc
int
lock
cli
sbb
icebp
xor
bound
in
icebp
jl
adc
mov
mov
add
pop
mov
in
je
cmpl
scas
add
dec
xor
leave
xor
test
cmovle
rcrb
inc
jno
sbb
and
pushf
lods
lcall
inc
das
or
pusha
dec
sbb
shll
jge
sbb
adc
and
inc
xchg
in
int
loopne
icebp
out
jo
cmpb
lret
daa
inc
mov
jae
or
add
lret
sbb
stos
mov
rcrb
mov
adc
imul
xor
mov
adc
cmp
jecxz
jmp
mov
je
flds
int
jge
cmp
and
shll
lods
jl
mov
movq
sbb
xchg
mov
mov
lock
sub
and
mov
dec
jle
pop
jp
jb
inc
ja
cs
mov
stos
and
das
add
int3
sbb
inc
cmpsb
or
movsb
aaa
cmpsb
into
mov
insl
into
fnsave
gs
mulb
xor
stc
mov
pop
xor
lds
lret
xor
out
iret
jo
and
sub
dec
push
sarl
mov
xchg
fcoms
testl
inc
cmp
xchg
stos
lock
push
and
leave
jnp
addb
or
daa
sub
in
xor
xchg
daa
xchg
jns
stos
push
aaa
mov
inc
add
mov
cmpsb
adc
gs
insl
loope
lcall
ljmp
xchg
xchg
mov
inc
mov
imul
and
jl
mov
xor
test
sbb
xorb
shll
sarl
inc
out
sub
shlb
push
cmovs
in
cmp
mov
sbb
push
cmpps
xor
push
sarb
xor
and
xchg
insl
cmp
jecxz
lds
andb
add
push
mov
ret
frstpm(287
pusha
pop
mov
adc
sbb
int3
jne
in
imul
xchg
and
les
adc
sub
sbb
cmp
dec
mov
scas
sahf
inc
push
push
mov
sbb
cmp
scas
jns
add
jb
jb
shlb
loopne
aam
dec
inc
xor
ljmp
scas
sbb
mov
in
lret
dec
inc
pop
jno
vsubsd
push
sbb
clc
fsubs
imul
fidivrs
push
in
push
sbb
and
outsl
jge
cmp
push
xchg
aaa
mov
aaa
xchg
inc
es
mov
xchg
loope
fnstenv
mov
inc
pop
add
push
nop
pop
dec
loop
mov
and
pop
int3
xchg
aaa
inc
mov
xor
ljmp
das
decb
enter
mov
inc
mov
xor
ret
push
push
popf
sarb
mov
xlat
push
push
adc
sbb
fldcw
repnz
cmp
mov
jb
out
jns
xchg
pop
mov
or
sbb
ret
fisttps
gs
jns
cmp
cmp
ja
cld
test
adc
inc
rorb
jno
mov
pop
pop
shlb
or
sti
cmp
addr16
inc
pop
sbb
incb
mov
int3
shl
xor
fcmovu
fdivl
mov
ret
shlb
fisubl
cmp
popa
push
js
pop
pop
cmp
mov
pop
xor
sti
cmpsl
in
xchg
fs
in
add
inc
mov
ja
rcrl
mov
outsb
and
mov
pop
xor
xor
lret
jo
xor
push
repz
pop
clc
scas
or
aas
and
iret
or
jg
dec
inc
aad
jmp
push
lret
inc
clc
dec
loop
pop
fbstp
insl
std
dec
js
cmp
cmp
call
lods
jbe
xor
negb
test
test
cli
sub
mov
sub
inc
repz
in
rclb
repnz
mov
icebp
push
cmp
sbb
scas
jmp
mov
into
push
jg
sbb
push
pushw
jmp
lret
sub
sub
jns
sub
into
push
and
add
jae
jnp
sbb
inc
loopne
test
mov
sbb
ds
lea
xor
inc
cmp
js
inc
xor
adc
lahf
jae
add
lret
sbb
les
pusha
jnp
ds
mov
fwait
ljmp
sti
or
jg
in
sub
test
xor
sarl
test
or
xchg
lods
jg
inc
xlat
xchg
jle
scas
addr16
in
shlb
pop
daa
inc
out
sub
stos
xchg
lods
jno
jb
sbb
cwtl
mov
adc
out
pushf
aaa
ds
sub
icebp
ds
mov
push
adc
cmpsb
pop
mov
lcall
mov
aaa
insb
xor
or
xchg
xchg
mov
ds
lret
pop
enter
mov
repnz
imul
mov
add
lods
push
adc
aas
adc
std
imul
dec
movsl
fstpl
jno
imul
cld
int3
sbbl
negb
lock
xor
and
mov
sub
icebp
inc
and
adc
dec
jo
aad
sub
or
and
pop
repz
fisubrs
sbb
into
xchg
dec
popf
mov
and
imul
push
lret
nop
pop
das
in
sub
imul
and
test
stos
test
out
xchg
xchg
push
aad
sbb
ret
enter
cmc
insl
dec
dec
shll
int3
gs
jno
mov
inc
clc
jecxz
xchg
cmp
getsec
sbb
pop
push
hlt
inc
inc
in
insl
rolb
pop
or
in
scas
int3
mov
jmp
repz
das
inc
cmp
inc
sbb
xor
cmp
push
inc
mov
popf
loopne
and
or
lahf
mov
and
fsubl
test
stos
decl
cli
in
xchg
mov
mov
insl
int
push
cwtl
sub
repz
xor
fdivrs
mov
leave
add
push
mov
xchg
lahf
sub
iret
scas
aam
push
mov
cmp
sub
mov
sbb
pop
push
push
lcall
xchg
and
movsb
fbstp
pusha
add
stc
dec
jbe
push
mov
xchg
fimuls
mov
and
enter
push
dec
jnp
repz
dec
dec
jp
fmull
test
push
jecxz
outsb
cwtl
and
arpl
push
cs
pop
std
xchg
mov
sub
adc
mov
add
inc
cmpsb
pushf
sarb
packuswb
cmp
sub
hlt
jle
mov
mov
dec
pop
and
fistps
mov
xor
fnstcw
cmp
jmp
ja
push
les
xor
add
test
popf
xor
add
xchg
int
cmpb
jo
int3
shr
mov
xchg
mov
fiadds
pop
mov
incl
loope
xchg
mov
mov
push
jno
mov
cmp
ljmp
push
nop
push
sub
xor
rorb
in
loopne
jbe
nop
jo
iret
iret
repnz
mov
push
sbb
movsb
sub
movb
push
cmp
sub
cmp
pop
xor
int
repnz
stc
xchg
imul
bound
dec
cmp
dec
fldenv
adc
mov
push
out
sub
and
js
and
loop
pop
fildll
mov
aas
jecxz
inc
xorb
fstps
push
jp
and
add
inc
in
xorl
jbe
add
lret
cmc
loope
fwait
xchg
mov
in
movsb
fimull
orb
cs
lea
mov
in
movsl
imull
jmp
jge
lods
outsb
je
shll
js
imul
jae
arpl
out
add
repnz
mov
test
das
jp
cmp
and
dec
xor
sub
cmpsl
cmp
xchg
ljmp
and
std
cmpsl
dec
mov
mov
dec
insl
insb
lahf
stos
inc
mov
mov
push
push
push
leave
rcr
push
jge
add
das
loop
jnp
and
mov
sub
push
dec
mov
rolb
movsb
push
testl
pop
mov
jae
pop
mov
push
sub
ja
add
push
add
mov
std
jl
xchg
popa
xlat
ret
jge
xor
data16
mov
or
rolb
sub
leave
mov
cli
cli
dec
sbb
dec
pop
scas
push
fdivl
xor
movsb
cmpsb
test
mov
in
jns
ljmp
pop
push
bound
lret
cmpsl
pop
punpcklwd
push
cmp
push
in
test
jo
das
cli
mov
add
int3
pop
fneni(8087
shll
inc
dec
mov
loopne
movsb
sbb
repz
or
push
adc
xchg
scas
xchg
push
pop
sub
jl
mov
mov
xor
lcall
pop
cmp
push
push
popf
int
std
mov
int
dec
inc
aaa
fists
das
pop
dec
pop
push
mov
in
mov
mov
adc
add
dec
cli
and
insl
shlb
sub
jle
mov
xor
scas
clc
in
cmpsl
idiv
in
test
lods
inc
pop
ss
xor
icebp
in
xchg
sub
jp
mov
std
pop
call
aas
push
inc
inc
btc
mov
add
sbb
loopne
cmpsb
dec
and
fisubrs
jp
cmp
cmp
mov
xchg
clc
mov
stos
mov
stos
and
int
lods
sbb
insl
stos
mov
sarb
test
push
mov
add
out
mov
jle
pop
cmpl
in
loopne
jg
dec
push
sub
adc
mov
fwait
in
cmp
div
jb
xchg
popa
adc
xor
daa
mov
jecxz
data16
ja
xchg
cmp
sbb
and
ret
pusha
xor
xor
in
roll
cld
cmp
and
add
jns
mov
cld
loopne
xor
inc
fadds
xchg
mov
mov
push
and
mov
pop
jno
dec
mov
loopne
std
sub
or
mov
insl
test
sub
fwait
adc
aam
fnstcw
addr16
add
sub
or
ret
aad
xchg
lret
sbb
enter
push
mulb
adc
cs
sub
into
xor
aad
xlat
repnz
mov
mov
sub
or
sbb
stc
jg
rcl
dec
pop
dec
imul
in
pop
pop
mov
std
cmp
mov
imul
xchg
scas
cltd
mov
add
loopne
jb
add
sub
push
push
pop
and
jnp
imul
cmp
jle
adc
dec
mov
mov
pushf
cmc
jno
push
shl
pop
ss
sbb
push
iret
and
aad
cwtl
mov
jp
adc
add
and
jecxz
test
inc
mov
cli
xor
rolb
andl
push
leave
add
mov
push
mov
mov
push
inc
inc
add
xchg
cmc
jae
gs
push
imulb
pop
std
stc
xor
inc
push
mov
mov
test
mov
outsl
xchg
fists
pop
inc
push
ror
pop
in
sbb
mov
orb
push
icebp
sub
push
ret
fdivs
lock
popf
ficompl
push
ficomps
mov
adc
lea
sbb
es
ror
mov
out
xchg
out
lret
and
push
movl
lods
das
out
aam
movsb
sbb
ja
mov
scas
dec
xor
pop
cltd
sub
mov
outsb
stos
inc
imul
xorb
dec
and
inc
clc
inc
test
xor
dec
mov
mov
mov
cmpsb
or
loop
xor
roll
mov
jl
inc
fs
stos
sbb
or
pop
lock
xchg
xchg
iret
xor
mov
pushf
sub
rorb
dec
lahf
pop
ds
test
pusha
mov
shll
ret
or
jp
inc
push
sub
mov
sub
scas
sbb
jne
sbb
mov
fwait
jae
jne
mov
into
dec
in
inc
dec
mov
into
xchg
mov
nop
clc
dec
or
sti
sbb
test
push
jmp
enter
rcll
es
or
add
xor
out
popa
cli
stc
pushf
mov
push
das
sahf
lods
dec
pushf
push
bound
add
inc
pop
add
negl
sub
ss
or
into
cmp
cltd
xchg
or
pop
mov
mov
or
fldenv
inc
push
jnp
push
stc
add
push
mov
fsts
or
scas
aas
sub
xor
push
out
xor
aam
lock
mov
lock
imul
out
ljmp
sti
frstor
jge
mov
repz
inc
xchg
xor
or
mov
enter
cmp
ret
push
mov
lods
mov
loope
mov
pop
lahf
mov
add
xorl
aam
aam
jmp
push
aas
dec
pop
orps
xor
dec
jbe
push
jmp
inc
cmpsl
inc
sti
push
jle
cmc
xor
mov
hlt
pop
repz
lret
cmc
repz
andb
adc
push
add
loopne
jle
imul
inc
jge
sbb
test
lea
fstps
lahf
lret
dec
pop
inc
or
icebp
adc
mov
mov
xor
xorl
or
dec
dec
push
jne
movsb
adc
cmpsl
fildl
cmpsb
cmpsb
movsb
dec
dec
mov
movsl
movsbl
xchg
pushl
js
lret
pusha
xorb
adc
sahf
cmc
mov
stos
sbb
push
ds
mov
adc
lahf
sub
push
cmc
je
jbe
js
sbbb
pop
push
inc
insb
mov
pop
cltd
fbstp
add
out
es
cmp
idivb
fsubrs
inc
cli
mov
stc
out
adc
add
repnz
scas
mov
ror
jmp
xchg
sarb
and
cmpsb
loop
lds
pusha
loop
sbb
shl
lods
xchg
push
std
inc
pop
mov
addr16
push
jl
inc
addl
mov
add
neg
lahf
dec
push
mov
movsb
mov
bound
mov
ret
cmpsb
sbb
sub
into
scas
in
jne
mov
cmpsb
push
mov
or
imul
popa
mov
push
and
xchg
cmpsb
dec
shl
sbb
stos
sbb
in
cmp
add
popa
loope
data16
push
push
xor
mov
push
sub
jns
push
adc
call
xchg
xchg
push
xchg
dec
pushf
test
or
dec
popf
jmp
pop
je
jae
cli
out
cmp
push
mov
outsb
bound
lea
or
call
ficoml
lock
dec
lock
cmc
cmp
mov
pushf
pop
jmp
out
push
dec
xor
mov
repz
std
int3
sbb
std
sahf
jno
add
xor
insl
js
mov
fdivr
jg
or
je
jno
add
cmp
outsl
mov
cmc
int
push
out
aas
and
repz
mov
dec
clc
and
lods
mov
hlt
ljmp
inc
or
push
pop
xchg
mov
cld
jo
and
and
mov
jle
call
xor
fmull
sub
xor
and
loope
cld
rcll
ds
mov
adc
sbb
pop
adc
pushf
push
loop
adc
dec
lock
sbb
pusha
in
push
sbb
mov
jmp
iret
shlb
nop
cmp
jp
out
xchg
push
inc
mov
cmpb
add
xchg
pop
es
in
aam
ja
mov
mov
sbb
mov
js
mov
adc
lds
in
jo
les
sub
lods
insb
mov
iret
cmp
std
add
jo
fildll
lahf
cmovae
lds
jae
mov
sub
add
cmp
out
out
pop
xchg
mov
shrb
sbb
mov
cmp
and
xchg
inc
xchg
pop
jae
pop
jnp
ret
pop
lahf
addr16
lock
mov
push
mov
aaa
cltd
movsl
mov
mov
jbe
and
les
fstl
rclb
push
in
push
push
mov
inc
sub
push
in
cld
fldenv
loope
jae
sub
hlt
ret
loop
lahf
repz
lahf
fs
or
ficompl
aas
dec
pop
xchg
sarb
aam
dec
lods
scas
aam
xor
push
push
mov
xor
hlt
jns
aaa
mov
inc
jno
loop
repz
ja
dec
adc
aaa
test
mov
push
decl
mov
shlb
ret
fstps
mov
xor
das
push
sbb
mov
divl
and
test
sbb
dec
sbb
stos
xor
stos
mov
or
xor
hlt
lahf
adc
mov
xor
push
xchg
enter
pop
cs
lret
shl
lret
movsb
rcr
lds
push
mov
mov
xchg
xchg
add
adc
icebp
cld
push
fpatan
aas
or
sub
sub
pop
hlt
cli
stos
leave
cmp
js
mov
filds
mov
out
out
sub
es
jle
adcb
jge
mov
testb
push
dec
add
push
sbb
mov
mov
pop
add
aam
decl
jnp
add
int
js
fcoml
jne
and
ss
fimull
jle
out
subb
xchg
cmc
cld
xchg
loope
js
xchg
aas
js
cld
sub
mov
cli
jne
insl
rcrb
xor
dec
out
in
loopne
faddl
push
xor
subl
in
nop
sbb
mov
or
add
dec
sbb
fwait
jg
xchg
pusha
or
inc
call
sbb
xchg
mov
cwtl
and
push
mov
xchg
mov
inc
cmp
imul
in
das
or
movsb
mov
hlt
xchg
push
add
dec
mov
or
cmp
sub
popa
pushf
aas
inc
mov
aaa
sbb
add
add
jb
lret
inc
andb
mov
fdivrp
mov
xor
pop
out
mov
pusha
dec
mov
sbb
or
sub
js
scas
sbb
sbb
sub
sub
push
lea
push
outsl
push
push
cmp
push
cmp
pop
xor
inc
ljmp
mov
aad
jg
lock
push
jmp
sub
das
sbb
ret
mov
arpl
fst
mulb
push
mov
call
sbb
fidivl
dec
mov
loop
in
ljmp
push
add
sub
cmp
mov
sbbl
cmpsl
mov
mov
loop
and
pop
outsb
jb
das
add
push
mov
and
and
loope
jo
dec
outsl
cmpsb
inc
in
bound
fldt
xor
enter
lcall
js
push
lds
xchg
mov
nop
test
xor
ret
pop
jno
mov
sbb
push
mov
pop
loope
or
add
sti
and
sbb
sub
into
push
and
and
je
int
imul
lret
push
or
popf
adcl
pop
mov
cli
and
ljmp
add
imul
in
sbb
mov
push
test
pop
pop
or
repnz
inc
stos
cmpsl
movsl
sbb
lods
mov
pop
fmull
add
mov
xor
mov
push
jnp
test
test
adc
cmp
in
fstpl
inc
and
mov
js
xor
out
cmp
jle
in
xor
test
stos
mov
push
mov
push
xor
mov
outsb
or
into
cld
add
sbb
jle
push
dec
dec
jl
dec
adc
push
out
scas
pop
mov
push
adc
ss
pusha
call
hlt
jle
dec
int
fsubrs
mov
js
shrl
inc
pop
push
imul
and
lea
cs
aam
pop
xor
fldcw
or
fs
jmp
mov
mov
jmp
nop
push
sub
loop
push
subb
notb
adc
cmp
adc
sbb
mov
pop
rcr
add
outsl
sub
mov
loope
xchg
rol
adc
jl
cmp
mov
ljmp
or
icebp
xchg
test
fsubrp
rorl
push
icebp
jg
popa
add
dec
loopne
outsl
and
popf
push
imul
inc
push
pop
push
pmulhrsw
out
pop
mov
jns
inc
js
ljmp
repz
into
stos
mov
sub
in
cmp
pop
jbe
mov
jbe
outsb
jnp
pusha
xchg
shrl
jmp
mov
movsb
mov
inc
out
setnp
icebp
pop
aam
xchg
cmp
test
xorb
jns
mov
pop
fsts
cld
lea
orl
les
ss
fsubrl
mov
push
ret
or
xchg
dec
mov
rcrl
cmp
mov
mov
pop
stos
jl
adc
sbb
inc
xchg
xchg
pusha
xchg
jae
push
mov
inc
stos
lcall
push
push
and
jmp
test
in
inc
pop
rcll
push
ss
in
jns
xchg
sbb
cld
xchg
pop
xchg
add
inc
cmp
xchg
pop
leave
imul
popa
rcll
pop
mov
lea
push
int3
std
push
add
or
cmc
shrl
xchg
call
lcall
sub
push
cmp
or
fidivs
xchg
fildl
sahf
xor
insl
scas
shrb
sahf
test
loopne
dec
notb
lea
divb
jbe
leave
lock
adc
or
xchg
inc
fists
adcl
stc
jge
rorl
imul
movsb
pop
push
xchg
push
lock
outsb
push
aaa
push
test
pop
xchg
push
addl
xchg
inc
or
fs
fidivs
lds
mov
pop
jecxz
push
insl
insl
mov
mov
inc
mov
sahf
pushf
pop
push
sbb
add
push
or
mov
mov
mov
inc
pop
gs
jns
mov
sub
mov
lds
into
ds
and
popa
xor
push
sbb
cltd
mov
aam
cmpsl
jecxz
mov
sbbb
fldenv
add
cmp
movsl
test
ret
mov
mov
ds
and
je
push
imul
sub
stos
daa
shll
xor
les
loope
and
inc
add
pop
dec
and
arpl
jle
adc
hlt
and
xchg
pop
ja
aas
inc
fimull
icebp
cmp
add
outsl
ds
xor
mov
and
aaa
arpl
xor
lock
mov
push
cmp
dec
adc
mov
repz
bound
jb
repnz
cltd
loope
cmp
xchg
adc
add
sbb
add
jne
leave
decb
popa
nop
in
mov
mov
sub
and
cs
les
inc
inc
add
xchg
jo
fbstp
lods
test
incb
sbb
in
pop
pop
call
ds
sbb
fsubrs
popf
or
loop
add
mov
mov
dec
push
xor
add
loopne
push
cmpsl
je
sbb
jns
div
xor
enter
mov
mov
mov
push
cmp
stos
test
dec
lret
mov
push
in
jge
clc
push
cmp
cmp
and
jno
call
pop
mov
aaa
mov
xchg
xor
jbe
insb
push
popa
arpl
hlt
push
xchg
mov
xchg
xchg
stos
fwait
outsb
adc
shrl
lea
jne
add
stos
nop
mul
sbb
adc
inc
jg
je
std
test
jne
and
push
xor
aad
fisubrs
xchg
or
jbe
dec
push
sbb
test
push
clc
or
shr
fidivs
cmpsl
in
mov
in
in
xchg
imul
mov
mov
push
mov
adc
inc
mov
jle
adc
imul
call
mov
mov
or
add
xor
hlt
sub
fstpt
mov
dec
cwtl
inc
je
call
jne
insb
mov
pop
mov
lods
lret
or
iret
fnstenv
mov
dec
pop
ficomps
xchg
dec
push
mov
in
adc
loopne
int
mov
in
imul
in
sbb
mov
jae
mov
jb
jnp
or
js
and
sub
pop
mov
push
in
shlb
pusha
and
jbe
popa
xlat
inc
inc
mov
lock
pop
mov
jg
add
lret
xor
clc
pop
cwtl
jne
int
inc
lret
ss
int
fwait
aaa
xor
mov
fsubr
and
and
xor
jno
mov
or
out
xchg
mov
mulb
pop
popa
int3
jb
mov
ds
in
jp
rolb
mov
jl
dec
aaa
out
and
cmpsb
imul
jmp
pusha
and
push
or
xor
fwait
iret
pop
loop
out
data16
dec
pop
popa
adc
mov
leave
mov
sbb
xchg
jns
sub
cli
cld
nop
daa
sbb
cld
cmp
aad
movsl
stc
notb
clc
inc
push
add
sub
sarl
pop
mov
mov
xor
dec
shll
cli
enter
push
jge
adc
out
std
sbb
test
sbb
xlat
adc
inc
mov
dec
stos
subb
inc
or
in
nop
adc
icebp
inc
push
sub
dec
loope
dec
arpl
xor
test
rorl
ret
jae
adc
push
loop
dec
jne
scas
rcll
add
add
add
enter
push
pop
or
lret
aad
adc
les
mov
or
into
mov
xchg
test
ljmp
dec
fbstp
ljmp
sub
imul
xchg
sub
pop
sub
insl
push
push
aad
pushf
lods
push
mov
mov
fisubrs
mov
mov
rcrb
imul
mov
xchg
aas
sub
xchg
aaa
push
out
repnz
iret
add
fldcw
dec
sbb
pextrw
xchg
dec
emms
sub
xchg
int3
xchg
cmp
or
cmc
and
sub
mov
and
jp
dec
enter
lea
sbb
dec
push
jp
jp
dec
xchg
pop
xor
jmp
pop
sahf
mov
das
outsb
in
xchg
sub
out
ds
and
cld
mov
jmp
mov
ret
add
fadd
cld
in
xchg
and
aam
imul
outsb
test
leave
push
popf
outsb
dec
jge
and
cltd
loopne
in
in
xor
xor
sbbb
lods
and
sbb
sbb
addr16
idivb
xchg
adc
push
inc
call
pop
xor
lods
addr16
and
test
dec
dec
dec
xchg
sbb
sbb
or
dec
push
pop
out
aaa
sbb
cs
pop
lods
sbb
icebp
xchg
dec
call
fs
mov
std
aaa
dec
add
mov
jecxz
xor
test
jae
mov
pop
mov
in
adc
sarl
mov
cmpsl
aas
mov
fldl
sti
cmp
ret
gs
data16
mov
data16
in
add
das
sbb
ljmp
lea
mov
leave
fwait
jne
xchg
mov
das
mov
popa
fbld
sbb
mov
roll
hlt
add
cmp
clc
cmp
lds
mov
xchg
jge
dec
jnp
pop
or
fwait
sub
repnz
fiaddl
lret
fidivrl
shr
xor
inc
fldl
std
cmc
xchg
pop
inc
lret
inc
ret
sub
cmp
or
push
jae
adcl
xchg
into
rorb
popf
jae
fldt
fldenv
scas
into
je
int
arpl
insb
psrlw
fldt
inc
add
pop
mov
and
and
std
sbb
fsubrl
inc
jbe
push
call
or
outsl
loope
decl
xchg
jno
stc
fisubl
lods
push
sub
fucomip
fistps
pop
sub
xlat
rorb
cmp
scas
xor
sub
arpl
jecxz
mov
sub
test
lock
adc
lock
addr16
not
xchg
mov
jbe
daa
inc
xchg
jb
iret
daa
rorl
fdivrs
in
or
or
sti
fadds
test
stos
repnz
in
cmpsb
inc
int3
aaa
xor
lea
out
sub
inc
or
rcll
out
insb
jb
into
cmpb
pusha
shl
push
ficomps
inc
inc
adc
adc
add
adcl
jae
push
cmp
xorl
push
test
sbb
or
movsb
pop
xchg
fsts
repz
xchg
mov
sbb
fidivl
and
xchg
fs
add
repnz
roll
movsb
jle
push
les
mov
mov
dec
sbb
pop
pop
mov
sbb
cmp
repz
dec
mov
inc
add
loop
mov
pop
and
iret
push
pop
iret
lods
xor
js
inc
ja
test
or
shr
stos
pop
std
out
cwtl
or
das
test
pushf
nop
pop
int3
sarb
jecxz
inc
mov
jb
ret
push
jne
imul
lods
push
es
movsb
jecxz
mov
jg
hlt
loope
xor
jp
push
lds
push
jb
and
or
cmp
jbe
jg
push
ljmp
out
push
cmp
fmulp
aam
cli
xor
fimuls
cmp
sbb
outsb
xchg
xor
bnd
fdiv
adc
dec
out
adc
fwait
ss
aaa
jge
jb
aas
xchg
push
out
divl
adc
push
aad
imul
leave
or
scas
or
test
cld
lea
xor
and
mov
mov
rcrb
sbb
stos
xor
xor
sahf
mov
push
cmpsb
jae
adc
in
sbb
cmp
mov
outsb
fisttpll
addr16
adc
adcb
les
inc
mov
movd
xchg
lret
mov
jnp
gs
inc
stc
mov
arpl
ljmp
mov
nop
lock
sub
stc
mov
clc
pop
xchg
hlt
mov
popf
lcall
or
rorl
xchg
add
dec
xchg
xchg
nop
int
data16
cmp
scas
std
cmc
cmpl
mov
mov
jb
jb
pop
stos
int3
shl
mov
adc
dec
lods
xchg
push
popa
outsb
jl
mov
je
je
imul
int
movlps
test
ja
mov
xor
ljmp
pop
shlb
pop
mov
add
or
xlat
cmp
jno
aam
faddl
adc
sti
mov
outsb
in
or
sub
mov
idivl
inc
cwtl
inc
or
pop
sbb
or
sub
cmp
add
add
adc
add
cmpb
outsl
popa
or
int3
sahf
and
jnp
mov
add
xor
pop
jo
pop
mov
ss
fs
jne
fidivs
pop
xchg
enter
xlat
mov
out
pop
jp
cwtl
cltd
std
cmp
lret
adc
sub
bound
les
cld
sahf
loop
push
loop
rclb
or
lcall
fs
pop
sub
add
jmp
pop
inc
std
xor
or
enter
lock
std
add
sbb
push
andb
out
fcmove
adc
jle
ret
stc
or
ret
or
and
cld
fsubrl
imull
sub
lods
sbb
xchg
imul
icebp
pusha
aad
fst
push
add
out
fstpl
inc
cmpl
pop
add
idivb
aad
insb
fcoml
and
jmp
push
inc
mov
or
lret
daa
cltd
push
clc
scas
add
add
sbb
dec
test
pop
scas
sub
mov
sti
loop
call
push
mov
pop
das
int3
das
mov
add
or
clc
bound
inc
pop
vunpckhps
inc
outsb
add
movsl
sub
push
mov
push
arpl
scas
fcoms
sub
daa
jl
mov
lea
repz
cltd
mov
pushf
cmpsb
icebp
imul
out
mov
pop
andl
jmp
jle
dec
sbb
dec
ja
jno
lret
fsubrp
ljmp
fucom
jne
movsb
fstpt
lret
mov
adc
jo
pop
sahf
mov
sahf
jle
inc
sub
ss
push
add
fmuls
sbb
sbb
lock
xchg
cmpsl
roll
addr16
ret
jge
lret
enter
mov
out
xchg
stc
adc
std
rolb
pop
pop
push
lahf
call
sahf
or
mov
and
and
or
jbe
add
out
or
pop
xchg
ffreep
std
fildl
daa
sti
cmp
push
adc
data16
push
jbe
cwtl
mov
fisttpl
outsb
pop
dec
mov
cmp
je
sbb
push
loopne
mov
dec
movsb
js
and
inc
lret
clc
jge
lds
jae
cld
mov
test
pop
lods
int3
jnp
cmp
mov
ret
cwtl
mov
jo
dec
imul
arpl
scas
stos
outsl
mov
mov
std
jecxz
mov
cmc
fs
pop
adc
xchg
sahf
cmp
xlat
in
movsb
mov
push
repnz
aaa
test
loop
cmp
rcr
cli
hlt
jmp
xorl
std
xor
xorl
fbld
xor
push
push
and
xchg
ljmp
cs
adc
lds
add
fcoms
mov
inc
enter
movsb
cmpsb
scas
scas
lock
mov
aad
push
jg
add
dec
mov
sahf
mov
dec
insl
rcrb
push
xchg
jmp
aaa
test
mov
pop
push
mov
test
inc
and
int
scas
xor
cmp
pushf
rorb
pop
or
cs
jo
pop
insl
mov
lock
inc
mov
rol
sbb
or
outsb
hlt
mov
adcb
cmp
or
push
push
fldcw
loop
sub
dec
sarb
mov
mov
or
in
mov
movsb
call
pop
addr16
adc
mov
scas
xchg
add
jmp
lahf
or
cmpsb
mov
mov
sarb
inc
or
lret
out
enter
insl
loop
dec
or
into
inc
cli
loopne
mov
inc
adc
sahf
test
cmp
lods
sti
mulb
sub
inc
testb
jae
rol
outsb
mov
fcomip
test
push
movsb
shr
inc
cld
lcall
xor
mov
add
mov
icebp
adc
or
xchg
sub
sub
aas
pop
out
ljmp
repnz
add
mov
iret
and
or
xchg
pop
pop
imul
and
pop
fs
stos
push
or
fnstsw
testb
fstpt
mov
shrl
aam
jp
xchg
xor
jns
or
inc
jp
loop
mov
mov
movsl
icebp
out
int
test
hlt
cmpb
icebp
pop
dec
pop
cmp
lret
xor
mov
cmovs
sbb
repnz
je
aam
and
mov
mov
outsl
es
adc
jl
aam
iret
mov
das
pop
sbb
push
insb
mov
mov
xchg
out
lods
addr16
imul
and
pop
sarl
dec
add
js
stos
rcr
insb
pop
aas
mov
es
add
dec
adc
in
inc
stos
pop
shrb
jg
sti
xor
cmpsb
xor
mov
leave
loopne
pop
mov
dec
cmpsl
mov
add
pop
sbb
je
mov
das
mov
add
inc
sub
lock
or
jp
lret
push
or
into
sub
fsub
sub
pop
ss
nop
cmp
loope
bound
loopne
xchg
filds
cmpsb
out
nop
out
mov
inc
enter
fnsave
sahf
sub
cltd
shl
mov
xor
or
sbb
push
mov
and
add
jno
imull
out
fwait
fwait
sub
adcl
out
sbb
jmp
pop
movl
testl
mov
mov
mov
inc
out
fistpl
pop
adc
rol
jae
cmp
mov
and
mov
mov
shll
insl
mov
rcrl
shll
or
mov
xlat
dec
mov
jo
dec
in
or
cmp
ja
stc
cld
pushf
mov
cli
mov
pop
subb
sbb
xchg
inc
repz
call
scas
lock
inc
decw
push
inc
mov
fldt
int
fldl
pop
iret
cmpsl
mov
call
out
rcr
shlb
mov
mov
adc
ja
movsl
jns
xchg
rclb
xchg
and
js
add
scas
jmp
fdivrp
gs
mov
push
push
add
dec
mov
pop
inc
enter
popa
aas
gs
xchg
xchg
cmc
syscall
fstps
fstps
mov
sbb
scas
imul
roll
idiv
insl
push
xor
mov
negb
xchg
fnstenv
insb
push
and
xlat
and
mov
pop
fwait
iret
cmpsb
popa
push
aaa
pusha
rclb
mov
sbb
popa
in
and
aaa
cmp
test
xorb
cmp
out
les
xor
fstpt
icebp
loope
stos
dec
in
aas
mov
mov
jno
and
jle
mov
cmp
mov
decb
nop
repz
sbb
xchg
aaa
cmp
mov
inc
add
leave
jmp
mov
or
stc
inc
or
jnp
xchg
imul
push
push
test
mov
testb
pop
pop
je
fstps
ja
jl
cltd
rcrb
sti
mov
imul
push
mov
cltd
jnp
pop
sahf
xchg
movsl
pop
mov
shl
pop
movd
jge
push
or
mov
mov
call
and
sbb
lret
ret
add
fimuls
cmp
mov
push
insl
fadds
lahf
xchg
stc
nop
into
adc
and
sub
sub
cmp
in
adc
out
mov
dec
out
lock
test
mov
leave
xchg
cmp
mov
mov
mov
mov
stos
stos
scas
add
jecxz
mov
inc
push
jne
test
or
std
test
add
in
sbb
push
mov
sbb
xchg
loope
xor
es
sbb
out
xor
sbb
fistps
leave
dec
fcomps
orl
fbld
mul
imul
xchg
int
sbb
or
addl
ss
mov
hlt
or
cmp
jg
in
dec
mov
dec
mov
add
push
ljmp
ss
cmp
into
ucomiss
fists
dec
cmpsl
xor
and
sbb
add
les
js
cmpsl
jge
mov
imul
iret
decb
fs
xor
pop
je
xchg
xor
jb
dec
fwait
push
cmp
adcl
and
xchg
outsl
or
inc
mov
sub
int
iret
int3
mov
adc
lock
push
pop
and
ficoms
mov
lds
mov
std
push
shlb
dec
imul
mov
mov
mov
movsl
pushf
sub
ljmp
inc
hlt
mov
arpl
cltd
test
cmp
in
mov
inc
out
dec
push
adc
xor
mov
lcall
dec
sarl
push
xchg
sub
ds
pop
add
mov
jno
add
inc
int3
or
mul
sub
inc
sub
or
sub
inc
mov
int3
and
cmp
cmc
cmp
ja
push
and
mov
insb
cmp
fdivl
mov
and
sub
sub
push
fstpl
repnz
push
sar
out
das
out
adc
add
orb
pop
mov
sub
and
jp
nop
sub
mov
fs
dec
mov
ret
jne
add
add
pushf
data16
scas
lret
mov
cs
sbb
test
shll
xor
lea
loopne
imul
std
sbb
adc
cltd
pusha
cwtl
movsl
movsl
jo
jno
shrb
xchg
fldcw
movsl
and
xchg
adc
add
out
mulb
xor
sbb
vshufps
inc
faddp
fmulp
lods
testl
pop
and
ret
aaa
jb
mov
push
pushl
in
dec
xor
cli
pop
clc
dec
adc
loope
mov
xchg
adc
mov
je
jno
rclb
xor
push
push
repz
pop
fbstp
sub
shrl
adc
mov
xor
and
mov
loopne
orb
mov
scas
cmp
inc
mov
adc
xor
subl
das
faddl
mov
xor
es
xor
test
and
cmp
repz
rcrl
dec
mov
xor
pop
out
inc
and
outsb
pop
lret
mov
jno
jnp
lock
aad
outsb
fucom
push
loopne
add
or
aam
xor
fs
mov
call
ss
push
jnp
mov
js
fwait
and
push
adc
push
in
inc
in
imul
lods
and
cmp
adc
js
push
mov
xor
out
popa
js
push
ss
outsl
imul
jbe
inc
aad
leave
cmp
fld
xchg
repnz
daa
cmc
jle
pop
mov
js
cmpsl
shrb
adc
jbe
jg
fimull
inc
jecxz
test
inc
or
jl
sub
aas
jb
pop
fbstp
push
push
adc
mov
adcb
pop
shr
xchg
in
cli
jg
xor
add
iret
stos
mov
js
xchg
clc
fisubs
std
xlat
fsts
leave
add
sub
pop
xchg
or
fwait
out
xor
dec
icebp
aas
pushf
add
cmp
push
pop
xchg
arpl
lods
scas
mov
sub
add
stc
outsl
bound
mov
add
roll
lock
add
sbb
jae
lret
bound
cmc
hlt
push
xchg
cmc
sbb
and
stos
stos
ljmp
dec
mov
repnz
stos
sahf
xor
mov
lahf
es
push
cld
enter
mov
xchg
cmpsb
nop
xor
mov
adc
add
iret
movsl
inc
cmp
sbb
movsb
push
outsb
jae
mov
jae
or
adc
xor
sub
subb
lea
adc
add
xchg
cmp
sbb
push
subb
sub
push
call
or
xchg
pop
sbb
xor
push
mov
mov
fimuls
jl
and
inc
pop
mov
jno
sbb
xchg
mov
enter
inc
pop
mov
inc
inc
out
adc
dec
pop
push
mov
orl
repnz
in
inc
xor
jbe
js
jns
andl
and
ja
loopne
fucom
fcmovu
test
aad
dec
push
mov
sbb
xor
sub
gs
push
rcl
jnp
in
test
fabs
out
inc
ss
out
test
pop
loope
xor
mov
inc
push
enter
repnz
popa
xor
lret
bnd
jge
mov
pop
test
imul
ljmp
jae
jl
and
and
inc
xchg
shlb
icebp
sbb
cmp
xchg
mov
or
mov
push
sub
add
sub
jge
mov
out
shl
pop
adc
js
int
pop
addr16
push
adc
add
mov
ret
nop
pusha
jbe
xchg
jnp
push
fsts
rclb
cwtl
cltd
scas
cwtl
pusha
xor
dec
arpl
sbb
jns
inc
enter
xchg
inc
cmp
std
loop
jne
es
xlat
ret
out
push
or
push
xchg
sti
ret
shlb
adc
lea
xchg
bound
jo
rcll
mov
insl
notb
jecxz
loopne
xor
sub
rcrb
xchg
push
xchg
xor
je
lock
or
in
popf
enter
add
jo
jge
jmp
ljmp
sbb
and
mov
in
mov
xor
fidivrs
call
cmp
mov
notl
mov
push
cmp
pop
mov
into
cld
sbb
jmp
mov
jg
sbb
cmp
ss
add
jo
mov
mov
mov
xor
gs
add
call
mov
push
fisttpll
cmp
sti
inc
pop
mov
movsb
mov
leave
pop
mov
adc
stos
sbb
mov
test
pop
les
dec
fbld
or
shlb
mov
lret
pusha
jecxz
jno
jb
push
dec
leave
sub
dec
inc
and
or
push
aaa
lahf
flds
dec
aam
notl
dec
or
push
xor
push
ret
dec
cmp
imul
repnz
mov
push
mov
jo
mov
std
fsubrs
roll
jb
adc
add
lds
imul
jp
dec
pop
sbb
xchg
rclb
cmpsl
dec
shll
adc
xchg
or
mov
push
sbb
cltd
insb
cwtl
int
xor
gs
jg
and
xchg
xor
test
call
xchg
xchg
jb
sbb
rolb
pop
scas
pop
out
lods
jns
lea
cmc
pop
insb
ss
loop
shlb
and
and
mov
xchg
xchg
push
cmp
clc
cmp
and
adc
pop
adc
lock
sbb
jnp
scas
and
icebp
dec
sub
sarb
xchg
and
adc
pop
jbe
flds
add
out
in
fcmovnbe
shlb
js
sbb
add
or
lcall
push
nop
pop
movsb
pop
mov
ds
sbb
das
icebp
adc
ds
pusha
or
or
push
mov
sti
cmp
out
ss
xchg
and
jne
repnz
stos
pop
xchg
pushl
inc
ljmp
inc
push
daa
and
jns
in
mov
jl
int3
shll
aas
mov
jmp
mov
test
nop
mov
setns
mov
and
push
cmpl
sbb
stos
push
push
fwait
out
int3
in
jns
cmp
ror
das
inc
in
ds
push
and
lcall
push
cmp
xor
lcall
out
daa
mov
add
sar
mov
xchg
cmp
sbb
mov
dec
jne
cmp
divps
adc
outsl
arpl
jbe
insb
fistl
xchg
push
je
movsb
or
mov
xor
das
push
loope
leave
xchg
das
popa
sub
cltd
lock
int
xlat
or
xor
hlt
pop
gs
imul
sub
out
inc
addr16
icebp
sub
cltd
and
xchg
push
popf
push
xchg
jge
fwait
std
fs
add
insb
into
jp
dec
pop
jbe
adc
jmp
ret
arpl
stos
cmp
mov
jae
pop
gs
and
scas
js
and
jecxz
push
clc
es
test
lods
mov
jp
or
jo
es
popf
push
mov
mov
jo
ja
cmp
xor
add
inc
xor
push
pop
mov
repz
add
pushf
add
data16
test
lds
mull
jmp
sar
cmc
adc
js
or
insb
xlat
lods
inc
cltd
sub
jno
enter
in
aad
testb
sbb
mov
push
or
push
cmp
and
push
mov
push
lret
pop
or
scas
outsb
loop
xchg
shlw
sti
lock
rcl
mov
mov
fsubs
int
push
add
xorb
repnz
adc
test
xchg
data16
ss
push
xchg
jae
popa
push
enter
pop
adc
pop
jmp
leave
out
adc
mov
pop
sub
aas
sbb
test
nop
in
push
fstps
xor
ds
xchg
das
leave
mov
in
or
dec
imul
std
push
mov
xchg
and
mov
cmp
bound
sub
jge
pop
push
add
or
andb
mov
mov
ror
push
mov
dec
sub
xchg
dec
sbb
cmp
loopne
jne
dec
mov
jnp
shlb
pop
insb
jb
iret
fwait
lods
xor
lcall
or
cmp
gs
pop
lods
or
and
dec
xchg
sub
pop
jno
add
ljmp
gs
mov
pop
sub
jge
adc
prefetchnta
movsl
fistl
sbb
es
sub
push
push
movsb
push
scas
mov
mov
mov
pop
mov
aaa
es
and
test
xchg
popa
popa
xchg
add
jae
mov
sub
lods
mov
shrd
push
jmp
sbb
lds
popa
loope
adc
xchg
xchg
insl
fwait
aaa
mov
dec
dec
ud0
mov
insl
cli
or
jne
mov
mov
ret
mov
jb
push
in
sub
mov
adc
add
repz
out
fwait
lea
and
xchg
add
test
xchg
mov
inc
cmp
push
js
push
add
or
lods
mov
mov
inc
push
cmp
or
icebp
mov
cmpsl
sub
testl
push
repz
iret
ljmp
rorl
xlat
jp
adc
adc
cltd
or
cmp
int3
dec
mov
mov
dec
mov
sbb
push
push
jbe
cmpsl
pop
sbb
imulb
imul
fmuls
and
inc
mov
sbb
pusha
nop
shlb
mov
and
dec
cmpsb
xchg
adc
enter
movsl
lret
and
test
loopne
negl
outsb
dec
lods
cmp
iret
dec
lods
stos
repz
fisubl
scas
je
mov
push
loope
dec
mov
mov
fsub
clc
loop
xor
out
mov
rcl
mov
into
mov
cli
mov
fidivrs
xchg
mov
xchg
pop
in
lock
fstl
repz
aad
xchg
adc
test
inc
in
ss
xchg
mov
mov
adc
mov
ss
sbb
sbb
dec
add
es
mov
ret
jbe
adc
test
jae
pop
gs
and
imul
mov
add
inc
shl
mov
mov
and
lods
xor
ja
push
mov
roll
notl
cmpsl
xorb
dec
add
arpl
xor
int
lods
push
jne
cld
cmp
cli
in
shll
push
jae
xor
lods
jmp
mul
push
adc
xchg
push
or
mov
xor
mov
leave
aad
jmp
mov
lods
fstl
dec
jecxz
mov
dec
loop
insb
cli
mov
adc
mov
cmp
xchg
pop
sbb
and
cltd
mov
es
in
mov
or
test
out
inc
movsb
sbb
xor
dec
popa
ret
inc
mov
mov
std
mov
fisubrl
pop
aas
loop
lods
sbb
and
xchg
add
adc
or
dec
pop
pop
push
pushf
push
stos
adc
pop
lret
es
pop
push
js
mov
sti
cmp
and
pusha
ss
inc
dec
lahf
add
test
ss
fbld
imul
lahf
jbe
mov
aas
lods
notb
int3
mov
add
jmp
mov
sub
adc
sbb
scas
xor
dec
in
sbb
adc
sbb
adc
mov
aam
into
xor
and
aas
int3
out
sub
jp
xlat
inc
inc
in
cmp
jnp
xchg
pop
pop
in
xor
add
pop
mov
and
adc
add
shl
fcompl
insb
hlt
push
push
cmp
enter
mov
js
notb
fistpl
push
mov
pop
or
dec
xlat
pop
shl
lret
pushf
icebp
scas
fiaddl
fstps
push
in
lods
dec
gs
cmpsl
jl
inc
dec
and
inc
add
xchg
pop
xchg
xchg
aaa
fsub
jmp
addb
inc
xchg
dec
cli
jne
sti
xchg
ljmp
sar
and
mov
and
cmpsb
jle
cmp
pop
mov
xor
push
insl
in
cmp
jmp
or
stc
stos
cmp
sahf
jl
add
imul
sahf
xchg
loopne
mov
cmpl
sbb
aas
or
in
lahf
pusha
je
mov
lds
movsl
xchg
in
loop
lcall
sbb
mov
nop
pop
dec
jbe
fstl
cmp
mov
popa
xchg
or
out
shrb
mov
into
aad
daa
cltd
jno
das
push
mov
mov
shrl
xchg
adcb
add
and
xorl
add
push
ss
cmp
dec
adc
or
and
into
fisubrl
call
iret
pop
dec
cmc
scas
add
and
adc
lcall
std
scas
gs
lods
sbb
adc
jmp
and
sub
push
ret
adc
shll
jae
cmpsb
xor
movsb
mov
aad
adc
repnz
mov
js
or
ret
lods
add
cmpb
mov
pop
test
fsubrl
dec
fists
notb
and
sarb
jns
jp
mov
out
movsb
dec
push
in
sub
loop
test
lcall
out
ss
push
cmpsb
cmp
je
jle
in
jg
sub
pusha
inc
arpl
push
imul
aam
sbb
jns
lahf
nop
sub
inc
ret
call
out
mov
and
jp
jae
stc
fstps
fildll
movsb
xor
cwtl
fistpll
stos
fsub
loop
xor
das
mov
inc
sti
add
sbb
mov
jno
push
and
in
cmp
popf
scas
push
and
xchg
out
adc
sbb
jge
dec
or
push
pop
in
xchg
gs
mov
in
insb
addr16
andb
cmp
push
inc
js
mov
dec
clc
jnp
jl
cmp
pop
stos
dec
sbb
inc
mov
sbb
lds
test
cmp
cmp
push
jmp
jns
dec
xorl
pushf
shufps
int3
icebp
cmc
xor
sbb
mov
or
adc
enter
and
cmpsl
leave
notb
hlt
pop
sbb
xlat
in
rcrl
jnp
cli
je
ss
pop
push
adc
in
in
adc
xorl
push
cmp
inc
das
dec
add
test
pop
inc
or
loopne
dec
dec
mov
stc
sbb
inc
jmp
xor
mulb
sbb
mov
add
jl
adc
fwait
jne
pop
sbb
mov
jecxz
dec
in
mov
fwait
xchg
sarb
iret
movl
fildll
add
insl
jl
and
std
repz
mov
dec
movzwl
enter
inc
inc
inc
out
push
cld
xchg
jbe
lods
jae
jecxz
push
jo
inc
je
call
rorl
mov
xchg
mov
add
jne
push
pushf
out
gs
sub
and
pop
dec
add
mov
push
mov
in
mov
dec
je
mov
lock
mov
aam
lods
pushl
lahf
addb
and
xchg
lcall
add
xchg
fildll
bound
jp
ja
sbb
add
add
sub
xor
cmpl
out
sbb
call
aaa
sarb
cs
sub
rclb
les
rorb
inc
lods
dec
test
out
mov
jne
shrb
gs
jg
and
adcb
stos
pushf
adc
sahf
mov
cmp
fwait
xor
push
nop
rcrb
cs
in
fs
pop
jb
es
pop
mov
adc
stc
popa
sub
sub
stos
sbb
adc
pop
in
xorl
jle
ljmp
rclb
int3
sbb
xor
push
mov
push
sbb
imul
xor
jo
cmpsb
addr16
add
and
aas
cmc
loope
in
mov
mov
in
jnp
cmpsl
sub
add
sbb
push
push
subb
mov
mov
and
inc
inc
mov
test
lods
or
int3
clc
fs
cmp
dec
push
xor
push
push
test
lret
cmc
in
dec
add
rcl
mov
enter
and
mov
loopne
inc
push
inc
and
mov
lahf
pop
mov
and
loop
sbb
add
mov
in
imul
lsl
int3
das
outsl
in
fimuls
in
mov
push
jmp
test
outsb
xchg
mov
fisttpl
mov
insl
imul
mov
jae
lahf
and
adc
in
mov
mov
popa
leave
jmp
xor
orb
loope
inc
sub
lret
test
pop
call
dec
xor
cli
dec
js
in
bound
pop
jb
lahf
fwait
std
test
into
imul
sbb
test
mov
xchg
jle
lock
dec
test
mov
shr
push
jbe
pushf
out
mov
inc
inc
cwtl
rolb
jb
cmp
and
and
lock
ds
out
scas
jo
jno
dec
lret
mov
jne
mov
xchg
xor
divl
or
out
shr
ja
leave
leave
pop
sbb
stos
pop
vprotd
lods
insb
xchg
sbb
shrb
mov
repnz
push
sbb
xor
push
xchg
into
adc
test
stos
jp
loope
fcomps
popf
sbb
or
int
jne
mov
fisttps
in
jle
xchg
sbb
enter
push
or
fildll
leave
gs
cltd
dec
jp
jae
xor
iret
addr16
test
mov
dec
outsl
fidivrl
mov
stos
cld
dec
xadd
jnp
fcompl
sarl
xor
sbb
mov
jp
jle
add
adc
mov
popf
xchg
daa
sbb
pop
lods
into
xchg
fnstsw
xor
movsl
pushf
sahf
jp
xchg
jmp
cld
pop
cltd
mov
lret
mov
jae
jmp
mov
xlat
lods
xchg
jae
add
stos
fld
lods
out
fsubs
and
and
mov
fs
into
push
lahf
std
xor
insl
adc
push
adc
mov
test
add
call
pusha
mov
loopne
fbstp
ljmp
add
xchg
mov
inc
sbb
cld
outsb
adc
das
std
cltd
inc
test
and
in
xor
pop
sub
stos
dec
movsb
pusha
pop
cmp
xchg
mov
enter
int3
or
shlb
int3
outsb
pop
test
clc
loop
pop
jnp
or
insl
jnp
mov
xor
xchg
outsb
js
scas
add
loope
test
mov
pop
gs
and
in
imul
xor
push
hlt
jge
jne
sarl
adc
test
xorb
negl
mov
sub
push
mov
shld
lods
pop
repz
xor
cmpsl
test
lcall
cli
aas
xchg
adc
aaa
out
inc
outsb
int3
mov
and
jecxz
dec
xchg
xlat
imul
fistpll
sti
jae
fcoml
loope
dec
push
push
sbb
scas
mov
xchg
push
pop
outsl
outsb
xlat
imul
int
filds
cs
out
and
push
aam
dec
clc
imul
lds
mov
js
icebp
mov
popf
push
int3
xchg
js
fstl
dec
dec
sti
push
fwait
dec
pop
faddp
movsb
ud0
lock
jbe
addr16
mov
fisubs
xchg
jecxz
pop
sbb
pop
loop
push
xchg
insl
outsb
aaa
adc
stos
shlb
mov
mov
mov
insb
scas
push
movsb
sbb
xchg
push
and
sub
lea
aaa
mov
dec
jmp
jno
into
neg
ds
lret
dec
push
mov
mov
mov
movsb
sub
enter
mov
mov
push
xchg
cld
into
cvtpi2ps
and
movsb
mov
fwait
lods
fbstp
pop
and
outsl
je
xor
push
ds
into
mov
push
cs
jp
mov
add
jbe
in
leave
push
xor
sub
or
add
shll
mov
or
rcrl
jno
inc
xchg
xchg
pop
scas
cwtl
sub
andl
test
fs
ret
add
dec
cmpsb
arpl
jnp
sbb
cmp
shl
loopne
fdiv
inc
loopne
push
int
and
jl
push
pop
arpl
jmp
add
and
and
scas
loop
inc
mov
dec
mov
icebp
jle
loop
sahf
fstpl
rorl
idivl
cmp
adc
bnd
ret
push
imul
cmp
cmp
xor
add
or
imulb
inc
add
out
push
lret
and
mov
xchg
pusha
push
jle
inc
xlat
jno
xor
mov
add
pusha
addr16
dec
or
sbb
sarb
repz
insl
mov
loope
loop
cmc
dec
jl
fldenv
xchg
rcr
fistl
and
dec
xchg
test
addr16
out
add
jmp
hlt
dec
ss
cld
jbe
xchg
adc
adc
pusha
add
nop
popa
pop
pushf
cltd
stc
popa
jnp
popa
lock
cmpb
add
test
and
sub
add
stos
sbb
fldenv
cld
push
in
out
or
xchg
ret
cs
dec
lahf
jmp
dec
cli
repz
iret
shr
das
jbe
fstpl
lcall
nop
mov
out
pushf
push
adc
pop
sbb
cmp
mov
cmp
mov
inc
mov
cmp
pusha
jmp
pusha
arpl
fisttpll
ss
movsl
cmp
mov
inc
ja
stos
inc
jne
movsl
dec
or
inc
push
mov
sahf
cltd
inc
push
test
jge
inc
insb
outsb
xchg
mul
mov
pusha
mov
stos
shll
fistpl
jnp
jle
loop
mov
or
and
movsl
xor
and
mov
je
movsl
popf
ds
mov
fwait
add
out
xor
outsb
or
cmp
xchg
and
mov
mov
dec
sub
mov
lahf
movsb
adc
xchg
ret
add
sbb
imul
stos
jnp
jno
and
lods
call
or
in
insl
inc
sbb
into
adc
add
lret
cmpl
testb
or
div
adc
popa
stos
lret
pop
scas
push
imul
and
nop
inc
cmp
dec
sub
xchg
std
fsubs
cmp
mov
mov
lock
jl
scas
lea
cs
xchg
or
sbbb
xor
and
movsl
dec
xchg
cmpsl
std
mov
mov
sbbb
arpl
sub
and
insl
popf
jno
sbb
neg
test
xchg
imul
or
jg
mov
add
xchg
je
ss
pop
arpl
or
inc
insb
aas
sub
inc
pop
adc
outsb
pop
outsl
sahf
cmp
mov
shl
int
test
lret
push
sub
dec
xchg
pop
cmp
cwtl
sbb
push
scas
jae
lea
imul
mov
cld
rolb
mov
std
dec
jnp
movsl
push
fildl
daa
jno
inc
in
lods
mov
aaa
jae
jb
sub
xchg
inc
sbb
sbb
mov
or
cli
pop
jns
sbb
xor
mov
notl
mov
xchg
push
or
int3
stc
mov
push
xchg
call
push
mov
jl
rorl
and
dec
mov
adc
mov
adc
mov
loope
shlb
cmc
push
jnp
push
icebp
sub
adc
jle
idivb
ja
push
clc
mov
sbb
pop
aam
imul
pop
jnp
outsb
jmp
pop
outsb
inc
jbe
push
out
xchg
mov
pusha
lea
jo
les
imul
inc
test
stc
iret
imul
mov
divl
scas
lods
std
or
lods
fs
or
push
test
in
out
or
mov
out
stos
shrl
iret
icebp
push
mov
out
mov
mov
xchg
rolb
mov
mov
add
adc
pop
xor
shrb
lret
xor
idivb
xchg
adcb
push
xchg
popa
mov
mov
or
jecxz
inc
jb
or
fcomip
orl
and
jns
and
dec
fisttps
stos
xor
jecxz
mov
jo
ja
add
in
test
sbb
add
fwait
jae
mov
shl
shll
adc
dec
dec
jl
cmp
mov
mov
mov
or
insl
push
adc
shl
jge
js
test
popf
lsl
xor
pushf
into
xor
fiaddl
sbb
add
pop
cmp
inc
jbe
sbb
push
add
testb
mov
or
cmp
lock
scas
stc
sbb
inc
enter
repz
mov
pop
jge
sbb
jge
adc
adc
cmpsb
testl
adc
in
cmp
imul
push
push
popf
xor
test
mov
adc
je
dec
loope
call
pusha
mov
repz
mov
cmp
daa
outsb
dec
gs
xchg
lds
jecxz
jge
inc
pusha
lcall
mov
rcll
or
push
or
es
lret
loopne
sarb
xorl
sub
mov
jo
test
mov
enter
enter
xchg
mov
sti
jbe
lret
iret
xor
sbb
aad
das
bound
pop
cld
out
pop
mov
js
adc
xchg
imul
call
xor
sarb
and
dec
mov
sbb
adc
aam
or
jno
popa
adc
mov
or
push
out
hlt
or
in
bound
aas
add
push
fdecstp
out
xchg
test
cli
test
imul
xchg
mov
xchg
push
cmp
int3
pop
mov
adc
fistps
inc
insb
cld
mov
cmp
mov
and
mov
cwtl
adc
xor
sbb
pop
fst
hlt
out
mov
inc
xchg
pusha
shl
test
adc
add
and
xor
pop
push
adc
repz
or
mov
insb
insl
jmp
sahf
test
insl
repz
pop
inc
push
and
sbb
mov
shrl
lret
mov
adc
adc
leave
mov
adc
mov
dec
adc
or
dec
lahf
add
jp
sbb
push
orb
dec
dec
dec
mov
mov
nop
fdivrl
cmpsl
xor
mov
sbb
sbb
addr16
xchg
push
add
mov
mov
xor
out
mov
add
or
mov
xor
jo
cld
jnp
mov
inc
dec
pop
and
push
das
out
out
insb
popa
in
inc
lret
fisubl
mov
jmp
out
pop
jp
dec
stc
lock
sbb
jmp
aaa
adc
addl
mov
inc
sbb
mov
sbb
repz
pop
mov
pusha
les
movsl
sti
in
aaa
les
bound
or
rcrl
addr16
dec
mov
push
outsb
xor
pushf
cmp
fidivrl
addr16
cld
xchg
data16
pop
jl
gs
fmulp
cmpsl
les
js
jle
mov
mov
lahf
mov
push
fwait
sbb
in
sbb
lods
cmp
hlt
ja
fstpt
out
cltd
mov
cmpl
daa
fdivl
movsb
sarl
fwait
dec
dec
test
sub
movsb
jecxz
jge
hlt
fidivrl
pop
sarl
lcall
mov
cmp
leave
das
push
pop
lea
xor
hlt
das
in
pop
and
mov
pop
inc
xor
fcmovnb
hlt
push
cs
mov
xchg
out
xchg
imul
add
cld
sub
jo
mov
xor
inc
aaa
mov
stos
sbb
mov
cs
outsb
in
scas
fs
cltd
push
fs
jecxz
jne
push
andb
push
filds
cs
repnz
mov
or
jno
sub
push
and
mov
sub
in
aas
mov
sub
or
pushf
cmpsb
ficompl
fidivrl
add
add
push
outsb
mov
cmp
mov
sub
pushl
add
push
push
fs
or
pop
cltd
loop
subl
jo
daa
cmp
mov
pop
mov
mov
xor
fwait
clc
gs
and
sbb
out
pop
xchg
xchg
js
lods
xchg
sub
into
dec
jmp
scas
push
add
repnz
leave
in
dec
push
ret
or
mov
sbb
fidivs
popf
pop
mov
inc
mov
enter
dec
cmpsl
xor
lret
lea
enter
xchg
cld
pop
pop
mov
insb
js
in
int
dec
xor
xor
jne
add
mov
fwait
rcrl
mov
cmc
xlat
dec
je
mov
adc
adc
fildl
pop
and
xchg
std
out
outsl
dec
notl
pop
xor
mov
adcl
std
cwtl
rdpmc
sarl
push
pop
pop
cmpsb
xchg
fs
push
outsl
outsl
jecxz
sbb
lcall
in
insb
jle
out
xchg
gs
mov
scas
or
ss
les
mov
inc
dec
cmpl
push
adc
test
mov
ficoms
xchg
cltd
cmp
ljmp
jae
mov
or
hlt
aaa
in
rcr
xlat
adc
add
xchg
push
fldt
sub
cwtl
aad
jmp
push
mov
xor
cmp
fnstcw
out
inc
inc
push
loope
push
sbb
xlat
and
inc
test
pop
mov
mov
cmp
xor
cwtl
loop
lret
aad
xchg
mov
and
les
sub
or
cmp
fisubs
call
push
push
mov
mov
push
mov
dec
pop
cli
dec
cmp
cmc
lds
sub
call
inc
clc
mov
movsb
xchg
sahf
sarl
popf
xchg
push
mov
lcall
bound
shll
fnstenv
dec
pop
mov
push
nop
adc
xchg
imul
push
and
fdivp
mov
xor
adc
jp
xor
iret
inc
rclb
lret
les
xlat
jbe
dec
mov
call
push
sbb
and
out
into
out
loopne
bound
mov
inc
insl
add
inc
mov
adc
and
les
insb
lods
cmpsb
rcll
xor
data16
out
mov
roll
mov
xchg
gs
testb
push
push
aad
fistps
lret
loop
push
xchg
fsubr
out
shll
mov
mov
pop
rorb
rclb
and
mov
repz
popa
adc
into
shll
or
fstl
data16
dec
or
cmp
xor
xchg
mov
arpl
popa
ss
shlb
xchg
mov
arpl
cmp
sarb
inc
sub
mov
ret
jp
pusha
ljmp
cmp
lods
roll
fsub
cmpsb
mov
dec
je
push
hlt
dec
subb
int3
xor
fs
mov
stc
sbb
scas
mov
aam
lcall
jbe
aad
insl
sub
lds
hlt
mov
js
cli
pop
or
inc
inc
or
subb
or
push
mov
push
lods
add
inc
fwait
out
sbb
sbb
sub
test
push
jmp
lods
sub
cmp
push
sub
test
movsl
push
in
ror
ret
fwait
mov
stos
subb
push
add
or
lahf
and
push
pusha
loope
inc
inc
fidivl
mov
das
push
add
sti
xchg
pop
das
adc
cmp
cltd
in
inc
ja
mov
data16
mov
mov
xor
test
dec
push
adc
test
jl
push
sbb
cmp
inc
xor
pop
cmp
pop
stos
stos
xchg
xor
pop
adc
adc
add
stos
iret
lahf
jb
pop
and
sarb
addr16
inc
call
cmp
xchg
cwtl
sar
push
or
imul
xchg
push
fcomi
and
insb
xor
push
pop
cmp
and
adc
mov
rcrb
nop
sbb
in
push
mov
cs
pushl
fsubrl
cmp
or
or
fcomps
loop
ja
out
push
data16
push
int
shr
mov
mov
jp
jae
xor
xchg
xor
mov
sbb
inc
mov
data16
jns
mov
or
in
roll
or
push
xchg
insb
scas
add
aad
sbb
inc
jno
pop
dec
dec
test
or
pop
jno
xlat
aad
aaa
jbe
repnz
lods
loopne
stc
add
mov
test
inc
in
cmpsb
insb
sbb
test
sahf
adc
jb
or
push
cmp
dec
mov
and
push
clc
call
fcoms
test
fldenv
jp
cmp
sarb
cmp
add
out
mov
inc
push
fsub
pop
scas
sbb
stos
push
fcomps
fdivl
dec
sbb
test
jns
popa
xchg
shll
inc
inc
cmp
lods
push
xor
pop
jb
test
add
jp
adc
adc
sbb
enter
push
mov
jnp
and
mov
dec
stc
jg
addr16
xor
fisttpl
jne
adc
cmp
jae
stos
js
negb
xchg
enter
vfnmadd231sd
or
js
sbb
daa
mov
lods
jo
ss
inc
mov
or
imul
mov
xor
pminub
test
xor
rolb
cmp
xchg
jp
cmp
pop
cmpsb
repnz
inc
sbb
push
bnd
test
aad
aam
dec
jmp
es
jmp
ss
pop
jo
leave
lock
sub
cmc
inc
mov
mov
div
stos
sub
add
xchg
in
adc
loope
ud0
pop
add
iret
and
pop
in
mov
mov
stos
int
inc
pop
mov
arpl
sbb
add
mov
lcall
test
pop
push
xlat
popa
setns
fwait
and
pop
out
xor
mov
cmp
xchg
cmp
jns
adc
mov
je
out
cmpsb
shrl
out
mov
push
xchg
mov
jne
mov
sbb
mov
je
cmpl
sbb
and
jmp
arpl
xor
jge
xchg
addr16
sbb
scas
xchg
jae
outsb
jno
gs
xor
add
in
mov
loope
das
adc
nop
dec
cmpsb
push
xchg
add
outsb
xchg
xchg
out
mov
push
xchg
imul
jmp
addr16
mov
dec
filds
rcl
js
decb
out
mov
popf
imull
ljmp
lret
leave
adc
pop
xlat
or
sar
inc
les
popa
push
jnp
or
dec
mov
outsl
adc
mov
call
lods
xchg
movsb
lret
out
out
and
mul
push
hlt
cmc
mov
es
mov
aas
push
pop
add
pushf
sbb
in
out
push
pop
cmpsl
jae
xchg
mov
push
mov
adc
xor
mov
mov
sbb
and
or
push
adc
pushf
inc
inc
mov
mulb
aas
push
int
stc
nop
bound
xor
jb
ds
ss
movsb
dec
add
sbb
outsb
pop
and
mov
xchg
jecxz
adcb
mov
and
sub
cltd
sub
push
outsl
cmpsb
jp
clc
adc
jne
dec
movsb
mov
jp
sbb
fwait
jmp
adc
inc
fmul
shll
xchg
or
repnz
into
xor
jno
jno
imul
lret
mov
ljmp
and
adc
inc
lcall
xchg
adc
mov
in
dec
lcall
shr
pop
adc
xchg
mov
fdivrl
push
out
adc
xchg
mov
push
into
dec
pop
mov
add
jecxz
test
shll
loopne
and
repz
mov
stos
and
insl
jmp
pop
jne
dec
call
out
fimull
adc
sub
xchg
sarb
inc
cwtl
aam
idivl
lahf
mov
es
and
mov
or
inc
hlt
pop
jle
jne
dec
out
dec
inc
jae
ss
dec
jnp
lahf
add
pop
cmp
aad
repnz
arpl
mov
mov
inc
mov
hlt
add
pop
mov
add
daa
push
push
push
sbb
xchg
mov
pusha
adc
aas
mov
lods
jg
push
cmpsl
push
test
enter
in
or
dec
lret
mov
inc
sarl
sub
cmpsl
push
xchg
jmp
cmp
inc
in
pop
mov
dec
xchg
loop
jg
andl
mov
loopne
out
fwait
movsl
jbe
pop
mulb
mov
inc
std
push
out
inc
sbb
add
hlt
jecxz
cld
xchg
leave
mov
lock
mov
addr16
adc
cmp
cmp
inc
pop
or
mov
adc
pop
jo
mov
inc
cmp
hlt
push
xor
add
push
notb
lock
fistpll
xor
aas
mov
xchg
test
cmc
cmp
or
stos
insb
and
leave
jae
sub
fcoms
lahf
scas
xchg
jl
push
mov
jmp
ljmp
arpl
and
mov
push
cmc
sbb
js
xchg
es
push
xchg
shll
xor
inc
sarl
push
mov
sbb
shll
dec
or
call
xlat
inc
loopne
cmpsb
int3
push
xchg
sbb
push
or
clc
out
sahf
jp
sysret
add
adc
sar
lds
popl
out
mov
cmp
test
mov
xor
mov
mov
sbb
mov
push
and
jg
add
sahf
lcall
pop
cwtl
js
mov
inc
fsubrp
mov
pusha
pop
mov
enter
and
or
insl
push
scas
lods
daa
pop
fmuls
sbb
jmp
mov
or
cli
cwtl
clc
test
mov
xor
inc
push
push
sti
das
movsb
sti
jns
jmp
jnp
movsl
cs
dec
jmp
adc
jo
and
in
js
shrb
lahf
dec
sub
pusha
xchg
mov
insb
jle
sbb
cmp
mov
sub
je
or
jge
add
dec
scas
jecxz
jnp
cmpsl
mov
jmp
jne
xchg
xor
adc
lahf
lcall
minps
lahf
sbb
dec
std
add
scas
cltd
pop
dec
daa
jo
mov
idiv
cs
aas
jnp
mov
or
inc
and
adc
xchg
mov
jecxz
mov
es
fisubrs
jnp
imull
dec
sbb
xor
gs
mov
test
outsb
js
ljmp
dec
stos
dec
ja
xor
call
cmp
stos
cs
xor
push
data16
and
jbe
fimull
add
sub
je
rcll
fs
dec
movsl
xchg
out
dec
icebp
or
mov
or
push
and
lret
test
sahf
mov
mov
daa
ficomps
and
or
popf
xchg
adc
int3
pop
data16
xchg
push
or
adc
jmp
adc
cmp
gs
das
aas
jnp
cwtl
hlt
adc
xchg
or
rorl
roll
add
bound
leave
xor
jo
scas
xchg
imul
sbb
lret
xor
jg
xchg
icebp
inc
addb
jae
shl
or
fisubrl
push
and
testb
jge
rcll
inc
insl
imul
add
xor
stc
test
dec
js
ret
and
idivl
mov
jl
fisttpll
loope
pop
out
dec
jp
popa
je
loopne
mov
cmp
dec
xchg
fmul
ja
mov
jb
inc
mov
adc
push
dec
aam
cltd
cmp
icebp
cld
xchg
pop
pusha
aas
addr16
pop
mov
jo
or
mov
dec
out
push
xchg
enter
pop
jl
lcall
mov
xchg
in
loope
scas
xchg
mov
sahf
push
pop
stos
add
adc
or
iret
dec
fsubl
lret
or
rcrl
pop
cwtl
pop
repnz
sub
push
pop
dec
xchg
bound
add
or
stos
pop
add
adc
mov
mov
sbb
fwait
ret
iret
add
fwait
mov
shrb
mov
mov
out
inc
xchg
or
push
cmc
ljmp
mov
test
and
stos
dec
movsb
scas
fs
jnp
add
sbb
sahf
xor
stos
and
jne
adc
adc
jmp
lret
lahf
mov
push
jae
mov
jne
movsb
sti
ret
dec
mov
mov
aad
lea
sub
mov
adc
or
mov
pop
add
inc
jp
push
xor
fwait
mov
dec
xchg
xor
push
and
push
or
pushf
mov
scas
dec
ljmp
push
orl
inc
les
lcall
imul
cmp
mov
imul
sub
iret
jbe
push
xchg
mov
lods
cmp
pop
push
cltd
inc
push
iret
xchg
rorl
mov
lret
ljmp
or
test
dec
mov
ljmp
cmpsb
sbb
mov
add
pop
lea
xor
mov
lret
rorl
jge
stc
and
jmp
pop
gs
shll
das
mov
xchg
cmpsb
int
mov
insl
movsb
ja
cmc
scas
ss
repz
adc
aas
dec
mov
jae
ljmp
cwtl
out
adc
adc
mov
mov
xor
call
and
in
pop
add
mov
pop
sarb
pushf
mov
xor
pop
cmp
pop
insl
xor
in
jae
adc
mov
cmpsb
outsb
adc
sbb
inc
add
popa
push
in
divb
sub
sub
mov
into
enter
xchg
inc
mov
mov
or
movsl
incl
jge
loop
or
popf
daa
mov
popf
psrad
sub
int3
cs
cmp
jno
ja
rcl
cmp
lods
adcb
into
xchg
push
stos
in
repnz
pop
into
inc
lret
dec
test
ror
cwtl
outsl
mov
insl
mov
xorb
cld
xor
aam
xor
inc
jns
xchg
iret
adc
push
popf
push
or
gs
mov
sbb
dec
inc
lods
push
lret
mov
pop
xchg
jne
xor
lock
mov
iret
pusha
sbb
dec
ss
cwtl
jnp
push
or
xor
pushf
mov
fisttpl
pop
out
fs
rol
fsubrl
insl
cli
cwtl
mov
daa
mov
pop
or
dec
pop
shr
xchg
xchg
xor
movsl
outsl
out
cmp
and
pop
add
pop
out
shlb
sbb
fwait
dec
or
adc
xor
mov
popa
ja
and
sub
sbb
shlb
hlt
xor
cmp
cmp
pusha
fistl
xchg
mov
insb
cmc
dec
outsl
cmpsl
mov
xchg
mov
stos
ss
es
mov
and
and
cmp
stos
movsb
out
fidivs
xchg
xlat
jnp
cltd
jae
and
mov
insb
cmc
add
xor
push
sarb
cmp
jae
sub
lock
or
xchg
gs
hlt
aaa
add
addr16
xchg
and
dec
dec
adc
or
inc
xor
inc
cmp
dec
xchg
cmp
sbb
mov
mov
sahf
pop
add
addb
xor
sub
adc
loop
sub
mov
in
jmp
mov
and
dec
gs
or
and
popf
ss
adc
pushf
push
xor
or
mov
cwtl
xbegin
addb
add
sbb
xchg
iret
repnz
in
rorl
test
in
inc
push
lods
jl
lock
mov
repnz
out
mov
cli
xchg
xchg
add
std
mov
inc
xor
sub
adcl
ret
add
aaa
jecxz
sub
jecxz
dec
inc
jnp
push
mov
ljmp
mov
imul
jo
jb
lret
inc
jbe
imul
adc
nop
or
movsl
in
les
jg
push
add
lret
es
test
lahf
icebp
pop
movsl
scas
inc
aaa
add
adc
add
je
jp
jb
ficoms
mov
or
mov
inc
cmpsb
sbb
cmp
inc
sbb
push
mov
xchg
mov
jmp
inc
lods
in
lcall
js
push
addb
mov
push
xchg
and
cltd
lahf
sub
insb
stos
outsl
push
xchg
inc
cmp
and
aam
subb
or
mov
loop
loop
jecxz
jae
test
and
imul
inc
sub
mov
aaa
outsb
out
push
sub
stos
fs
add
push
add
mov
call
dec
sbb
mov
sub
insb
test
fmul
pop
mov
ljmp
xorb
xchg
mov
adc
add
clc
push
jns
xor
int
add
pop
dec
push
mov
ret
sbb
mov
ret
cli
mov
push
pop
mov
daa
adc
inc
dec
ljmp
int
into
lret
push
bound
or
fwait
and
mov
inc
orb
fwait
jmp
push
pop
dec
ja
addl
outsl
daa
push
arpl
clc
sub
mov
add
dec
xor
pop
mov
pop
stc
sbb
aas
insl
mov
mov
pop
in
push
push
fbstp
fsts
fwait
scas
sbb
mov
mov
js
test
inc
outsb
sarb
std
enter
dec
loop
fsubr
es
rol
outsl
adc
mov
sub
lret
or
add
into
xchg
loop
sbb
push
xor
in
pop
fs
loopne
dec
mov
sub
push
scas
mov
add
sbb
jne
sub
and
mov
adc
xor
int3
add
cltd
sbb
loopne
sub
lds
outsb
ficompl
and
call
xchg
gs
lock
cltd
mov
adc
jmp
lret
gs
push
mov
jmp
scas
ds
dec
xchg
mov
push
sbb
add
mov
xor
rolb
add
sub
sbb
xchg
dec
test
mov
outsb
push
ja
jmp
lods
arpl
loopne
cs
fbld
push
xchg
adc
subb
add
out
cld
sub
cmpsb
adc
inc
xchg
das
mov
dec
push
pusha
dec
push
push
pop
mov
xchg
jne
rol
adc
lret
push
cs
adc
test
cs
hlt
std
push
pop
mov
movsb
push
push
mov
daa
sbb
lock
scas
jle
fucomip
inc
addb
daa
and
je
fsubrs
jnp
insb
mov
fs
sbb
mov
mov
xchg
xchg
sub
test
fwait
push
push
cltd
cld
sub
and
movsl
adc
add
cltd
ficompl
xchg
out
lahf
cmp
nop
lds
cmp
inc
jne
cmpsl
test
xchg
insb
lret
add
and
out
jp
mov
test
inc
andb
push
andl
loopne
ret
pop
jb
movsl
inc
push
mov
adc
push
jno
div
addr16
jle
pcmpeqw
adcl
pop
lock
xor
add
push
test
sub
cmp
and
cli
and
mov
inc
mov
push
xor
add
sub
out
inc
jae
outsl
loope
jnp
pusha
add
xchg
std
popa
int
insb
inc
or
mov
add
andl
xchg
lods
outsl
adc
pop
jl
pusha
xor
rorl
jo
lcall
fsubs
xor
sub
cmp
cmp
dec
mov
push
push
fmuls
xchg
daa
dec
test
jge
jne
jae
lds
into
sub
or
inc
push
call
adc
aaa
pop
push
mov
sub
push
arpl
xor
sbb
int3
xor
roll
clc
jecxz
out
outsl
jae
mov
mov
nop
or
mov
jno
imul
negl
stos
adc
popf
and
cmp
jp
ss
push
xchg
mov
xchg
push
jge
and
add
int
xchg
inc
mov
push
movb
or
lock
push
sarl
dec
xlat
out
sbb
mov
vmovaps
jno
dec
movsl
aam
rolb
mov
nop
js
pop
dec
sbb
daa
jne
mov
aam
add
pop
sbb
push
fmuls
xor
incb
dec
in
dec
ds
in
mov
inc
imull
pop
frstor
lret
pop
and
pusha
xlat
js
insb
fistpl
push
leave
repnz
fs
inc
shlb
movsl
dec
cmp
mov
dec
incl
mov
dec
das
or
stos
jp
cmp
fisubrs
fisttpll
mov
inc
cmp
mov
roll
mov
add
mov
xchg
sub
lods
add
sub
sub
mov
xchg
lret
inc
sbbb
inc
mov
mov
addr16
pop
pushf
mov
in
mov
jle
mov
sahf
aam
push
pop
lahf
mov
imul
add
leave
test
pop
mov
jno
cld
scas
rclw
mov
xor
scas
mov
push
jb
out
cmp
jns
sarl
xchg
aad
mul
jg
mov
ja
repz
ficoms
push
and
repz
pop
addb
pusha
or
jge
or
inc
pop
mov
cmc
popf
dec
fwait
aas
lret
xor
lea
movsb
rcr
insl
test
outsb
lahf
mov
and
mov
test
pop
inc
lahf
in
sub
sbb
jecxz
notb
push
ljmp
mov
mov
sahf
movsb
sbb
push
dec
cld
loopne
leave
aas
mov
ja
fistl
jno
mul
lods
mov
fucomp
scas
stc
sbb
aad
aas
fwait
xlat
popf
stos
lret
mov
ret
pop
add
loope
and
jo
sahf
adc
mov
adc
icebp
mov
dec
out
dec
xchg
jb
or
push
rcrb
aam
add
mov
ljmp
leave
cld
jne
les
xchg
imul
outsw
xor
mov
ljmp
mov
mov
sbb
scas
xchg
lret
mov
aaa
push
mov
jbe
dec
icebp
sti
ja
imul
pop
xchg
sahf
push
enter
mov
push
cld
adc
outsl
hlt
jl
sahf
call
pop
xchg
sbbl
dec
add
xchg
jp
cmpsb
test
pop
jno
addr16
ljmp
and
and
or
call
std
push
push
dec
push
les
popf
fistpll
leave
repz
xor
pop
pop
enter
sbb
stc
sarl
pushf
imul
and
mov
xchg
cmpsb
jne
in
and
test
dec
and
mov
rolb
gs
pop
adc
rolb
arpl
repz
sahf
pop
sbb
mov
sub
sub
das
ljmp
data16
push
sub
adc
cmp
daa
xchg
xlat
and
test
and
mov
mov
clc
push
aam
sub
testb
cld
shrl
stc
sbb
out
cmp
clc
add
xor
insl
xchg
stos
scas
sti
lret
sbb
mov
jbe
mov
cmp
jmp
jb
push
inc
dec
dec
add
jmp
add
jle
test
ja
mov
aas
mov
js
mov
push
push
jb
or
in
sbb
or
lea
mov
iret
jmp
test
hlt
sti
incl
cmc
test
movsl
psrad
aas
cmp
insb
bound
lods
int3
pop
aad
aad
stc
mov
hlt
add
movsl
test
pop
xor
cmp
out
xchg
sbb
cmp
dec
hlt
lret
mov
stos
mov
push
push
pushf
inc
aam
push
sti
or
jg
fadds
mov
testl
xlat
push
inc
mov
mov
dec
inc
fs
mov
arpl
dec
sbb
mov
add
ja
mov
inc
call
aam
mov
jb
xchg
push
inc
jno
or
pop
test
and
mov
or
cmpsb
jb
mov
gs
mov
pop
cwtl
push
icebp
stc
pop
push
push
out
in
clc
fidivrl
into
call
ret
xchg
or
dec
mov
dec
insl
jmp
push
add
sti
fimull
test
mov
mov
popf
xchg
push
movsb
outsb
data16
pop
inc
test
and
inc
pusha
scas
mov
xor
lock
popf
cmpsb
xchg
inc
jmp
or
push
sbb
or
sub
subb
jbe
push
in
mov
jge
cmc
mov
xor
cmc
and
nop
jns
sbb
add
cltd
lahf
xor
xchg
push
cwtl
int
inc
sub
push
sub
sti
adc
jmp
hlt
pop
daa
jmp
adc
jmp
hlt
sub
pusha
add
cli
mov
xchg
adc
fcmovnb
cli
or
push
fdivrl
and
loop
sbb
aam
lods
inc
mov
dec
int
imul
sahf
movsb
in
fs
mov
jg
sahf
push
popa
int3
xchg
pop
adc
test
xchg
lahf
mov
aaa
mov
and
mov
push
sbbl
add
pop
test
xor
xor
repnz
dec
movsb
insl
das
adc
adcl
je
lcall
xor
lret
jns
lret
xchg
rolb
ss
and
mov
xchg
fisubrs
cli
dec
jo
mov
mov
mov
dec
cmpsl
sub
hlt
or
rorb
sbb
mov
out
pop
addl
xchg
push
and
scas
test
orb
fwait
mov
lds
pop
mov
mov
pop
mov
iret
and
push
in
adc
mov
pop
stos
mov
test
outsb
sub
jo
mov
sub
inc
mov
popf
or
jmp
aas
mov
mov
or
loop
sub
jle
ds
cmpsb
jg
out
push
les
test
jns
xchg
cmp
out
call
rorb
enter
mov
push
ficoms
push
and
xrelease
arpl
mov
adc
call
dec
fbld
movsl
movsl
jge
xchg
and
dec
roll
mov
jle
add
mov
mov
xchg
inc
lock
pushf
fdivr
lcall
inc
jno
push
jbe
lock
int
test
aas
jmp
dec
outsb
popf
xor
push
out
cmpsb
pop
ret
aam
cwtl
lret
fcoms
out
in
sub
pop
ss
aas
mov
int
repz
pop
adc
inc
clc
insb
adcb
dec
jb
rcll
jae,pt
mov
inc
push
mov
subb
sbb
add
cmp
or
and
push
and
push
scas
or
bound
stos
std
pop
jge
push
cmpsl
sarb
mov
mov
fldenv
andb
pop
push
and
and
pop
jno
addr16
in
push
cs
pusha
movsb
mov
xor
mov
insb
stos
je
movsl
mov
in
es
and
addb
divb
or
shlb
sub
cmp
or
arpl
cli
lea
iret
jnp
shll
or
fadds
inc
push
lret
adc
push
jle
pusha
fisttpll
call
into
cmp
jg
or
cli
fs
inc
je
mov
scas
push
add
lret
inc
mov
rdtsc
fildll
push
pop
mov
test
cmp
lods
add
sahf
mov
mov
aaa
pushf
outsb
jae
das
int3
xchg
xchg
repnz
xchg
or
xor
mov
xchg
popa
or
fldcw
mov
or
jb
ja
push
jecxz
movsb
xchg
imul
pop
std
stos
popl
xor
jmp
roll
sbb
dec
jmp
fdivl
mov
sub
out
push
mov
sbb
pop
sub
push
mov
adc
es
mov
sti
decl
jecxz
fdivr
gs
cmpsl
adc
push
xor
mov
test
addr16
jo
xor
dec
sti
mov
inc
inc
repz
cmp
jae
mov
js
add
mov
or
sbb
hlt
popa
sub
mov
dec
mov
mov
mov
push
or
daa
cld
fildl
xor
sbb
ss
mov
mov
mov
jnp
add
test
add
push
aas
test
push
push
lcall
cmpsb
aad
jae,pt
scas
adc
pusha
ja
call
cmp
inc
dec
mov
add
adc
aaa
aaa
fldl
mov
into
je
test
mov
leave
call
push
cmp
pop
jp
push
mov
mov
xorb
enter
lahf
lods
ficoml
out
cmp
inc
in
pusha
dec
rolb
imul
mov
push
xchg
adc
orl
jne
add
mov
loop
cmp
pop
mov
or
pop
call
scas
pop
push
cmp
pop
aas
roll
jecxz
movsl
sub
aaa
add
dec
push
mov
adc
cmp
pop
aas
cmpl
in
aad
push
cwtl
test
inc
lahf
lret
mov
aaa
jge
and
inc
and
dec
divb
push
pop
adc
sbb
sub
or
mov
cwtl
mov
mov
pop
push
pusha
js
fiadds
sub
gs
lods
fsubrl
mov
lret
shlb
addl
dec
loop
xor
dec
adc
into
scas
dec
test
jbe
mov
cmp
test
sub
fcompl
push
mov
sub
cmp
mov
xlat
roll
in
sub
mov
pop
rol
in
sti
movd
adc
pop
push
in
sub
sub
int3
divb
hlt
add
sub
jle
sahf
xor
sub
test
hlt
add
inc
jmp
push
lods
mov
mov
cmp
pop
mov
dec
clc
das
je
push
test
sub
xchg
inc
test
sbb
xchg
lcall
clc
inc
flds
imul
cmp
mov
dec
jle
in
repz
cmp
mov
cmp
popf
pop
sbb
adc
mov
mov
jbe
sbb
push
dec
mov
cld
lods
push
ficoml
push
sbb
lock
pop
xchg
xchg
add
mov
push
dec
xchg
cmp
pop
mov
jecxz
and
fcom
jg
adc
lret
xchg
mov
insb
movsl
inc
mov
lcall
sbbl
xorl
jb
sti
jecxz
fcmovbe
lods
lods
iret
in
push
addr16
ss
shl
sbb
inc
mul
fs
jg
ljmp
stos
or
loop
rcrb
xchg
mov
adc
lods
jae
lret
out
outsl
dec
imul
hlt
mov
xor
xor
mov
rorb
or
fwait
adc
loope
sarb
in
cmpsl
or
data16
pop
iret
imul
fnsave
mov
adc
xor
push
loopne
andl
icebp
add
add
dec
pop
outsb
xchg
inc
inc
push
inc
aaa
scas
mov
shlb
pushf
ficompl
inc
ja
inc
cmc
pop
mov
stc
xor
lock
cs
xor
fcomip
fs
sub
cmpb
cmp
adc
cs
pop
stos
cmp
and
lcall
lods
pop
or
iret
xor
push
dec
pop
mov
nop
imul
ja
stos
cmp
push
fsts
mov
js
jns
popa
pop
jl
stos
push
sbbb
cmp
leave
inc
cwtl
and
pop
and
adc
cmp
call
pop
fs
daa
jbe
mov
imul
ja
sub
jne
mov
lcall
mov
rclb
lret
mov
inc
ja
lcall
inc
nop
ja
ret
andnps
daa
push
push
sbb
or
adc
push
inc
idivb
cmp
pop
and
mov
pop
mov
pop
xchg
add
dec
sbb
outsl
or
mov
inc
dec
xor
stos
push
popf
xorl
jo
push
pop
inc
mull
fdivl
xor
jnp
push
into
mov
aaa
stos
shlb
mov
dec
pushf
loopne
int3
stos
jo
and
sub
sti
mov
test
pop
cld
les
and
and
and
scas
imul
std
fistps
lret
sbb
mov
ss
icebp
fidivl
es
push
mov
stos
loop
xchg
push
mov
inc
xor
sbb
inc
push
and
mov
ret
stos
jle
add
test
movsl
jne
lock
sub
pmuludq
push
and
add
xchg
or
and
cmp
test
gs
jb
dec
mov
enter
incl
jmp
xor
pop
push
aas
in
xchg
pop
je
or
push
inc
or
xchg
mov
cmp
push
jae
insb
mov
aaa
xchg
popf
mov
test
je
xchg
mov
sbb
mov
mov
std
bound
roll
aaa
push
ret
lea
mov
mov
inc
jne
popf
insb
mov
jb
sbb
push
lock
enter
gs
scas
scas
xor
xchg
mov
stos
sbb
shll
fdivrs
xchg
xor
jmp
xor
aam
or
jns
cmc
scas
pushf
mov
cmp
mov
adc
outsl
dec
ret
mov
jge
xchg
jmp
shr
cli
cmc
int
iret
andb
shlb
inc
pop
insb
dec
into
cmpsb
js
or
fsubl
mov
test
jle
fldt
aam
cld
out
pop
push
mov
push
pop
repz
imul
cli
jecxz
and
inc
adc
jg
ljmp
inc
inc
scas
outsl
xor
call
ficompl
andb
cmp
jnp
inc
or
cmpb
adc
dec
stos
dec
xchg
jnp
arpl
jmp
mov
nop
jecxz
imul
ja
mov
xor
fnsave
mov
outsb
movl
rolb
jg
xchg
dec
ror
dec
das
fistpll
dec
cltd
inc
ss
pushf
pop
xchg
ret
repnz
dec
jno
adc
insb
and
jmp
addr16
iret
lods
scas
daa
daa
xor
xchg
sbb
ficoms
mov
out
insb
cmp
push
or
xchg
xchg
xchg
ret
loop
notl
inc
lahf
in
and
dec
xlat
cs
adc
scas
fiaddl
sub
sarl
addr16
fisubs
cld
dec
loope
cltd
sub
fs
jle
mov
xchg
mov
scas
out
add
jae
push
sti
and
cmp
jo
test
shl
fidivl
xor
ljmp
mov
call
stos
xor
fdiv
cmpsb
rcrb
fs
cmpsb
idivl
ljmp
mov
sub
movsb
aam
rorb
xorb
and
test
adc
add
mov
and
insb
adc
sar
pop
xchg
imull
call
clc
or
je
or
mulps
repz
dec
dec
jbe
movsb
popa
pop
inc
or
subl
push
mov
pop
je
mov
dec
add
sub
ja
out
xchg
mov
lea
cmp
mov
fwait
jp
xchg
mov
or
cmp
into
rcr
push
or
ret
push
pop
ljmp
orb
push
mov
pop
js
and
cmp
sub
aam
xchg
lcall
jge
push
or
dec
xchg
jg
sbb
stos
shlb
lcall
sarb
sub
call
and
in
pop
mov
cmc
adc
cmpl
xchg
lds
mov
push
cmpsl
inc
mov
mov
inc
movsb
cwtl
mov
in
shl
in
jo
stos
lcall
xor
leave
push
cs
out
lea
insl
cltd
stos
jbe
inc
or
lahf
or
or
sub
jns
enter
adc
into
xor
ljmp
rcrb
mov
xor
ljmp
movsl
ja
sbb
aad
mov
xchg
xchg
pop
sahf
pop
test
cmp
pop
xchg
mov
jno
cmp
sub
xor
jbe
mov
push
mov
xlat
arpl
sbb
push
mov
add
in
push
mov
mov
call
lea
jnp
mov
es
cmp
sub
xchg
cmp
shll
ret
push
dec
sub
cmp
pop
filds
lret
in
dec
es
imul
aad
bound
pop
std
adcl
dec
rorl
inc
jbe
pop
dec
out
mov
xor
adc
pop
jb
jge
jbe
jns
lds
cmc
das
popf
jl
movsb
xchg
inc
lret
scas
ret
imul
arpl
and
pop
mov
out
pop
aas
ret
js
xlat
cmp
sub
mov
sbb
push
lcall
les
push
in
scas
dec
aaa
add
ret
les
add
scas
repnz
nop
cmpsb
push
jg
imul
cmp
inc
xlat
aad
icebp
jo
push
movsl
sbb
lret
mov
mov
mov
fimull
jns
lahf
repz
rorb
xchg
shrl
mov
int
popf
test
enter
fiadds
add
add
cmpsl
xor
testb
xchg
add
dec
cwtl
enter
pop
aas
ss
xlat
sahf
mov
mov
xor
pusha
mov
repz
ss
mull
pop
lods
pop
repnz
or
pop
or
cli
pusha
mov
iret
jmp
or
add
pop
xchg
repz
xor
imul
out
adc
mov
ret
sub
leave
mov
push
mov
add
inc
pop
fildll
jg
push
scas
xor
xchg
pop
jmp
inc
fldenv
inc
ret
cmp
mov
leave
push
enter
popa
cmp
push
mov
cmp
imul
inc
jecxz
sbb
jno
imull
outsl
in
mov
or
out
or
cmp
cmp
sbb
push
and
sub
sbb
adc
jl
repnz
aaa
in
popf
jge
clc
rcl
scas
arpl
aaa
push
or
subb
add
xchg
fiadds
popf
shll
or
notl
xchg
add
pop
pop
dec
lret
xchg
jl
add
pusha
cmp
mov
push
mov
jbe
cmpsl
pop
incb
pushf
inc
or
mov
test
dec
push
inc
sahf
scas
gs
cmc
mov
sub
or
out
cmp
push
push
cmp
mov
sub
xor
xchg
js
push
push
daa
ror
mov
scas
adc
pop
push
dec
orl
addr16
pop
or
jg
ficompl
call
fiaddl
xor
mov
test
sub
jno
jle
lahf
dec
in
pop
and
sub
aas
adc
repz
xor
mov
lea
cld
xor
xchg
xchg
jb
mov
push
mov
mov
mov
pop
in
dec
jl
fidivl
inc
dec
test
sub
int3
imul
das
sub
mov
nop
int3
inc
pop
les
add
jne
mov
cmp
js
dec
mov
mul
mov
or
jecxz
pushf
test
push
rorb
jg
or
push
or
aad
in
mov
dec
inc
fnstsw
cmp
xor
in
push
sub
lods
rorb
mov
aam
cmp
sar
cmc
leave
pop
mov
neg
xchg
add
repz
sbb
nop
push
aaa
das
mov
xchg
imul
data16
das
rep
mov
test
mov
test
xorb
sbb
push
push
push
aam
xchg
rcr
jb
bound
jbe
in
repz
mov
icebp
in
and
cmpb
test
nop
sbb
cltd
aad
and
sub
mov
out
shll
jne
sbb
cmp
clc
or
xor
lds
repz
fimull
mov
les
lret
jb
cmpl
add
push
fbstp
addb
push
xchg
jns
xchg
cli
stos
ljmp
imul
pop
xorb
fisttpll
sub
mov
jne
rol
mov
mov
xchg
movsl
xchg
adc
scas
in
cmp
jle
xchg
pusha
test
inc
sarb
inc
xchg
ds
and
jp
mov
aas
xchg
mov
pop
in
push
push
mov
lea
cltd
pop
test
sbb
fdivrl
outsb
pop
push
inc
outsb
sub
int3
cmp
fstpt
iret
mov
addr16
sbb
jecxz
enter
loope
inc
cmp
clc
dec
inc
adcb
pushf
rclb
fidivs
jns
cld
mov
add
and
dec
loope
xor
lds
sbb
sti
mulb
enter
test
adc
xchg
iret
movb
scas
xlat
pop
repz
jg
insl
push
je
and
stc
pop
lret
sbb
lock
sbb
movsl
addr16
xchg
sbb
popa
sub
int
pushf
mov
sub
mov
push
mov
addr16
dec
xchg
jmp
popf
scas
adc
decl
cmp
and
xor
sbb
cmp
iret
mov
fcoms
sahf
sub
add
and
into
inc
imul
sub
pop
sbb
sbb
cltd
sbb
dec
jecxz
inc
push
push
loop
and
mov
and
testb
comiss
cmp
mov
sahf
mov
mov
out
shrl
pop
test
sub
ljmp
sahf
adc
imul
pop
and
outsb
jmp
lods
pop
jg
mov
mov
push
jae
inc
xchg
and
shr
jo
ds
sbb
dec
mov
ss
mov
jl
enter
jns
aam
shll
xchg
xor
arpl
mov
sbb
adc
mov
sbbl
and
jb
xchg
pop
mov
mov
icebp
std
push
mov
xor
daa
mov
dec
xchg
rcrl
fwait
mov
fdivs
sahf
push
inc
xlat
outsl
data16
cmp
out
cmp
sbb
testl
jb
out
stos
sti
icebp
mov
cmp
or
test
clc
insb
push
ljmp
push
or
aas
jbe
jp
jnp
mov
add
mov
dec
xlat
add
pop
ret
scas
inc
std
push
add
cwtl
roll
push
lret
out
xor
mov
cmp
add
out
ds
iret
es
das
xchg
popa
mov
mov
dec
mov
push
roll
mov
adc
loop
lock
jecxz
mov
pop
ja
push
and
adc
xor
daa
or
cld
test
hlt
inc
test
icebp
aam
gs
jae
aam
rcl
dec
mov
mov
cmp
out
push
fstl
cmc
xlat
cs
aam
daa
inc
lods
jecxz
rorb
pop
mov
push
mov
sahf
and
mov
mov
mov
sbb
mov
xchg
xor
popf
in
mul
xchg
xor
es
and
imul
pusha
insb
jg
jnp
mov
hlt
cmp
mov
es
in
dec
and
push
xchg
add
addl
sbb
cmp
pop
push
insb
xchg
pushl
pop
or
lcall
mov
cmp
in
repnz
mov
mov
imul
gs
ljmp
push
pop
and
stc
lahf
adc
lods
jo
push
jle
push
cmpsl
mov
ror
dec
and
jmp
dec
pushf
add
or
fs
lret
mov
lock
bound
fnstsw
incl
dec
out
enter
mov
push
jne
xor
jns
xchg
sub
call
out
pop
mov
sbb
subb
or
std
sarb
das
mov
cmpsl
sti
daa
mov
insb
pusha
sub
jo
jle
cmp
mov
sbb
cmp
jnp
cmp
inc
out
sub
jg
cld
ret
aas
xchg
jmp
sub
push
fldt
inc
rolb
push
out
xchg
fistl
push
popa
push
dec
and
popf
lret
push
sar
ret
sbb
xor
dec
icebp
pop
adc
or
lret
leave
mov
inc
repz
scas
aad
push
cmpsl
fcomp
sbb
sahf
dec
scas
push
movb
movsl
imul
adc
mov
test
mov
mov
mov
mov
imul
jmp
sub
lret
jo
xchg
pusha
mov
pop
sub
stc
fimuls
mov
jnp
cmc
lods
pop
lds
push
lea
mov
lret
pop
std
cmp
dec
xchg
imull
lock
push
icebp
js
insb
fwait
enter
shlb
cs
loop
adc
lock
les
sbb
inc
aaa
leave
inc
sub
cmp
sahf
xchg
xchg
mov
mov
push
mov
mov
push
es
push
aam
xchg
icebp
mov
bound
sub
jb
aas
clc
imul
add
fdivs
out
adc
cld
subb
shrb
cmpsb
mov
fs
movsl
jo
cltd
or
fnstsw
rorl
imul
adc
ja
repz
imul
fs
lods
scas
xchg
shll
cmpsb
dec
and
xchg
lods
mov
push
les
cmp
ja
ljmp
and
sbb
inc
jl
sbb
or
add
lahf
pusha
fwait
push
rcll
xor
repz
adc
mov
mov
sbb
add
lret
ret
test
int
xchg
cmp
cmpsl
mov
cmpsl
cmp
dec
sbb
dec
cmp
sbb
mov
mov
dec
inc
mov
lret
xchg
js
xor
fsubrl
popa
jge
xor
adc
ljmp
adc
cmp
cld
mov
fists
push
sahf
test
imul
jmp
or
mov
rcrb
pop
push
mov
inc
adc
dec
icebp
xor
xor
pop
stos
jne
int3
add
test
fucom
int
pop
xor
outsl
ljmp
xor
movsl
cmp
or
push
cmc
ss
xchg
pop
cwtl
cs
jbe
call
xchg
jns
dec
jle
cwtl
and
into
stos
inc
and
out
repnz
jb
sub
out
cmpsl
mov
in
leave
and
test
adc
push
repz
or
fisubrs
cld
adc
jnp
jg
in
jg
in
scas
push
xor
add
mov
xchg
mov
dec
mov
add
cli
outsb
sbb
adc
ss
add
push
out
dec
or
ret
push
mov
xchg
into
cmp
jmp
sbb
cld
jno
cs
or
adc
mov
inc
add
jo
lret
outsb
jg
das
cli
sbb
fsts
in
sar
or
jae
sub
jle
jecxz
adc
jmp
sub
xchg
int3
lds
imul
cmc
int3
les
jmp
adc
mov
mov
mov
pop
imul
pop
orl
pop
mov
inc
sub
sub
or
adc
clc
loope
out
loopne
mov
fcomps
out
jns
add
test
mov
daa
mov
and
pop
mov
xchg
mov
sub
aas
sahf
lods
mov
xorb
pop
stc
stc
and
pop
cs
xlat
stos
xor
out
dec
cli
bound
lock
mov
pop
mov
push
jle
push
clc
ja
mov
inc
pop
xchg
mov
sub
push
leave
loope
sub
inc
aas
sarb
movsl
sub
aad
in
add
mov
ss
out
fxch
cmpl
inc
add
dec
add
std
pop
mov
or
inc
mov
call
push
iret
jnp
scas
pop
lret
or
dec
push
ss
in
daa
jp
inc
mov
cltd
push
jmp
mov
daa
cmp
out
mov
rol
xor
xlat
fisttpll
movb
nop
sahf
jg
cli
adc
lock
popa
inc
mov
or
insl
cmp
pushf
mov
dec
sub
sub
call
mulb
and
xor
pmullw
stc
xchg
mov
and
mov
xchg
sar
in
loope
inc
repz
pcmpgtw
or
shl
addb
movsl
cmp
lods
enter
stc
dec
dec
sbb
inc
add
sbbb
push
out
lock
push
sti
push
sub
stos
xor
push
rclb
adc
add
dec
pop
ss
cmpsb
je
loope
ret
stos
fwait
lret
adc
into
out
adc
sbb
jl
adc
leave
daa
movsl
cmpsl
cmc
lea
xchg
dec
mov
xchg
push
in
mov
out
xor
inc
clc
mov
repz
xchg
mov
and
or
mov
or
xchg
push
shrl
cmpsb
and
sub
mov
or
inc
dec
bound
loope
pop
popf
cmp
test
scas
or
pusha
nop
sti
mov
or
daa
loope
loop
insl
je
mov
cmp
cmc
in
enter
mov
adc
sbb
mov
jecxz
sbb
add
lcall
rorb
in
out
mov
movl
lea
sub
xchg
xor
sub
jecxz
jg
mov
push
sbb
xor
das
push
and
mov
shl
jle
in
xchg
mov
sub
xor
lock
jp
xchg
and
test
jae
push
inc
iret
mov
rol
test
inc
iret
dec
adc
xchg
cmpl
xchg
or
sub
cmp
and
test
jecxz
mov
cmp
mov
sub
lret
mov
jne
sub
lods
cld
aad
adc
sub
aas
loopne
push
fnsave
arpl
sbb
sub
mov
cli
or
negb
das
mov
test
es
movsl
stc
xchg
cmp
mov
pop
mov
cmp
pop
nop
mov
cmp
jge
sti
cs
les
insb
xchg
outsb
and
push
sbb
mov
pusha
push
mov
loop
es
sbb
dec
push
popf
pop
sbb
push
imul
jno
in
mov
inc
dec
inc
rcrl
pop
es
mov
mov
int3
cmpsl
push
sbb
imul
adc
dec
shlb
psubsw
cmp
insl
js
push
fs
add
jb
and
inc
mov
test
test
outsl
pusha
mov
xchg
fs
movsl
out
fdivs
imul
outsb
std
out
aas
jnp
adc
lcall
test
aaa
mov
add
je
out
into
mov
ret
fdivr
mov
and
pop
xchg
push
jnp
loopne
pop
lret
lcall
push
movsb
call
into
dec
data16
add
mov
mov
movsb
xchg
or
pop
loopne
sbb
sbb
jns
test
int3
cmp
push
out
outsb
iret
adc
sbb
cmp
dec
mov
inc
lret
inc
xchg
xor
loope
lret
sbb
insl
sub
dec
mov
mov
negb
loope
lret
mov
jo
fs
mov
into
imul
mov
pop
setae
jp
xor
adc
and
xchg
lahf
dec
dec
lods
scas
lea
mov
pushf
pop
in
lret
adc
loopne
movsb
mov
adc
aam
jbe
inc
xchg
js
mov
insl
cmp
data16
add
push
adc
mov
lds
scas
sub
pusha
ss
loop
fs
lods
mov
in
call
xchg
addr16
mov
push
push
nop
push
gs
mov
xchg
scas
shrl
cmp
jg
movsb
sti
add
cmp
or
nop
mov
mov
das
and
inc
push
mov
out
push
or
mov
add
jbe
mov
dec
roll
into
mov
push
out
fcmovu
loop
dec
aam
es
mov
sbb
enter
push
xor
sbb
jl
mov
divl
pop
add
pop
mov
and
sti
xchg
mov
adc
test
lea
sbb
mov
lcall
sub
add
rorl
mov
je
inc
and
xor
loop
adc
movsb
or
sbb
adc
loop
jge
ret
inc
fsubs
add
add
mov
mov
and
mov
xchg
nop
dec
jo
sbb
add
xchg
inc
add
je
sarl
test
outsl
rorl
cli
push
jns
pop
ror
gs
pop
adc
dec
in
jp
jmp
lds
jae
sar
push
mov
lds
mov
in
or
and
adc
dec
and
add
xor
xchg
jb
test
lcall
sbb
sbb
jl
cmp
ret
inc
adc
and
iret
push
outsl
mov
jb
cmp
out
lahf
test
es
xor
push
inc
jb
push
pop
ss
cli
push
hlt
sbb
stos
jo
jmp
popf
or
push
flds
dec
imul
lods
jo
fst
add
inc
mov
les
outsb
pop
dec
or
jns
mov
or
ret
xchg
pop
jae
push
roll
jns
stc
ja
fcoml
mov
out
xchg
cmp
jne
jmp
mov
cwtl
dec
mov
ret
test
and
or
inc
mov
data16
or
xchg
jne
lock
sbb
xor
mov
test
fidivrl
mov
dec
cmpsb
sbb
push
and
dec
in
ds
push
gs
in
out
rclb
jns
pushf
inc
pop
pop
cmp
jg
inc
out
mov
push
dec
push
jp
movsb
cmc
outsl
jp
inc
jae
sbb
xchg
push
aam
sub
ret
out
sarl
imul
pop
call
lret
fbstp
setb
fcoms
fwait
js
jb
mov
call
sbb
pop
sub
gs
dec
and
clc
rcrb
pop
outsl
xlat
cmp
pop
rdmsr
ljmp
jnp
cmc
roll
xchg
xchg
mov
pop
mov
xchg
mov
mov
sarb
xchg
adc
mov
sbb
aaa
cmp
subl
jns
dec
arpl
sarb
and
mov
pop
nop
inc
aad
sbb
xchg
inc
das
or
xor
int
shl
sbb
imul
gs
dec
aaa
mov
push
xor
xlat
ret
dec
repnz
pop
xchg
les
dec
cmp
and
scas
insl
cmp
icebp
loope
lock
mov
fs
jge
sub
subl
outsl
int3
fstp
cmp
xchg
and
and
adc
enter
jnp
jne
mov
push
ja
xor
loopne
push
xor
xor
cltd
and
pushf
lret
loopne
fisttpll
inc
ror
pop
repnz
cltd
js
scas
int3
push
jl
cmp
pusha
iret
sbb
dec
nop
mov
repnz
adc
dec
xchg
and
test
jb
nop
add
ret
and
rcl
fwait
aad
shrl
fistpll
sbb
or
enter
xchg
jle
jne
sbb
add
hlt
fisubl
mov
adc
jae
fwait
popa
ffree
inc
sti
adc
cmp
nop
xor
rcpps
push
out
xchg
mov
out
cmp
out
test
or
addr16
cmp
xor
add
imul
fildl
cmp
clc
stos
repz
sub
js
out
in
push
movsb
jae
mov
inc
ficomps
movsl
mov
xchg
aas
lds
add
jmp
cld
scas
popa
or
inc
mov
mov
inc
jmp
mov
xor
dec
push
shrb
and
add
cwtl
stc
mov
lret
or
cld
fucomip
loop
stc
inc
testb
xor
or
pop
mov
add
arpl
sbb
push
dec
inc
scas
mov
ljmp
les
mov
in
sarl
mov
in
and
xchg
jle
lcall
lea
mov
movsl
inc
cmp
jnp,pn
push
xchg
pop
dec
xchg
jns
cmp
or
sub
xchg
jle
cmp
lock
cmp
xchg
aas
test
mov
lea
cmp
add
push
mov
popa
mov
pop
inc
add
les
xor
std
mov
mov
loope
xchg
mov
popl
das
das
std
push
das
jb
in
push
call
out
xchg
push
stos
clc
addl
sub
scas
test
xchg
or
sub
xchg
inc
mov
lea
mov
add
jo
mov
jg
cmp
jo
fistps
pusha
pusha
mov
pop
mov
call
xchg
xchg
mov
xor
and
mov
jb
and
clc
dec
sbb
xchg
fsubl
imul
sti
ljmp
add
or
mov
jecxz
sti
xchg
shr
lods
fwait
pop
dec
enter
ljmp
and
nop
push
inc
xor
add
cmpsl
dec
cmpsb
stc
cmp
dec
inc
cmc
out
dec
xchg
mov
repnz
xchg
mov
imulb
mov
and
andb
outsb
mov
fwait
cmpb
or
or
push
xchg
jae
inc
xchg
adc
test
gs
sub
mov
xor
xchg
or
cmp
cmpl
adcb
into
fs
inc
loopne
add
jae
or
and
imul
pop
popa
xor
sbb
and
mov
shl
out
loope
imul
jmp
dec
nop
fiadds
pop
cli
mov
fstpl
adc
ja
cmpsb
jl
sbb
jmp
stos
xchg
xchg
sar
leave
and
repz
icebp
addr16
out
les
jmp
stos
sub
mov
sub
cld
or
addr16
rcr
sbb
fdivrl
rol
or
enter
jns
xchg
movsb
jg
das
pop
out
jp
jecxz
cmpsl
jmp
xor
cmp
jb
lods
jecxz
inc
pop
mov
mov
and
inc
mov
stc
mov
aas
xchg
adc
out
jmp
ja
push
ja
in
sub
jns
mov
adc
int
movntq
inc
loopne
pop
push
fwait
aam
push
jo
jb
jl
leave
adc
insb
inc
andb
aam
dec
or
cltd
ret
into
push
fwait
push
aad
sub
stos
inc
lahf
mov
or
pop
pop
mov
push
movsl
into
outsb
call
sbb
mov
fisttpl
rorb
jge
incl
out
in
cmc
and
dec
dec
pop
sbb
repnz
fdivr
test
aaa
inc
and
mov
lods
repnz
xchg
fadds
out
lods
xchg
pop
nop
mov
test
adc
or
dec
loope
mov
mov
cmpb
fs
aad
imul
pop
or
cmpsb
mov
cmc
shll
xor
sbb
adc
cs
adc
insl
xchg
sub
enter
loopne
dec
cmp
mov
test
xlat
stc
mov
pop
sub
xor
sbb
shrb
mov
cmpsl
push
sub
xor
rorb
dec
stos
mov
scas
dec
adc
lods
mov
test
repz
cmp
adc
arpl
pushf
int3
icebp
dec
mov
and
stos
scas
push
lcall
lds
test
inc
testl
fcoml
fsts
push
xor
imul
mov
jb
cmp
dec
pop
jmp
iret
lahf
shlb
dec
and
cmp
mov
scas
xchg
xlat
int3
and
in
shlb
leave
dec
addl
push
and
lea
push
fcoml
xchg
jmp
mov
dec
pop
gs
cmp
dec
addr16
sub
inc
in
sub
inc
adc
xor
fldenv
jnp
out
sbb
aad
mov
clc
and
or
adc
pop
inc
xlat
lea
or
fisubrl
push
out
das
adc
test
xor
adc
and
xchg
xchg
push
sbb
jmp
sbb
aam
sbb
scas
push
and
sub
mov
aaa
cmpsb
xchg
xchg
cmpsl
jl
mov
or
cs
or
push
cmp
test
test
sub
mov
into
push
and
sahf
jmp
inc
sub
iret
mov
ret
push
and
mov
lcall
popa
jno
std
dec
sub
cli
jge
out
add
mov
jnp
dec
ja
xor
inc
mov
imul
rcrl
dec
imul
mov
inc
fsub
adc
pop
jp
mov
aaa
xor
aad
movsb
int
ja
add
sbb
mov
aaa
inc
cwtl
mov
sbb
addr16
mov
dec
mov
add
imul
adc
jmp
and
repnz
rclb
mov
lret
and
sbb
popf
mov
sub
repz
mov
fs
mov
push
imul
std
or
sti
cmp
int3
cmp
sub
adc
jge
and
pop
sbb
pop
cltd
outsb
add
inc
gs
add
in
decb
dec
sub
or
inc
pusha
cmp
ret
sete
movsb
aad
cli
icebp
push
pop
clc
sbb
xor
push
inc
mov
cmc
int
shrb
out
push
adc
insl
into
fsin
add
jle
inc
orb
out
jmp
dec
iret
cmp
jno
add
lods
insb
fninit
pushf
push
jns
or
cmpb
dec
insb
cld
mov
or
xchg
pop
pop
or
adc
mov
fisubrl
add
test
xchg
out
pop
add
adc
stos
bound
dec
lds
jmp
inc
and
or
movsl
loopne
dec
stos
push
mov
outsb
stos
sbb
lock
scas
add
pushf
imul
adc
cld
lret
cmc
pop
xchg
cmp
mov
xor
fwait
add
inc
sub
inc
fldl2e
pop
aam
push
test
xor
cmp
inc
ret
push
lods
dec
jno
and
cmpsb
rcrl
repnz
push
jnp
jb
adc
dec
clc
pop
adc
add
push
imul
andl
mov
mov
repnz
or
cmp
iret
mov
cmpsb
mov
and
push
sub
cmpsl
stos
sub
xchg
pop
sar
xor
dec
clc
push
cmp
sub
add
mov
push
push
push
jecxz
mov
mov
fs
cmp
out
mov
push
inc
das
out
pop
mov
cs
mov
lcall
mov
sub
inc
mov
js
dec
stos
dec
lret
dec
out
lcall
aam
jp
pop
out
mov
popa
aad
mov
aas
pop
das
xchg
imul
mov
jno
sub
inc
daa
out
cmpsl
je
rolb
push
mov
imul
dec
sub
xchg
iret
test
fisttps
pushf
add
leave
call
mov
rcl
lahf
jl
xchg
xchg
ret
pop
js
dec
add
pop
nop
sub
mov
xchg
and
inc
dec
add
shrl
mov
xor
outsb
mov
mov
mov
ss
sub
repnz
repnz
fstps
rcrb
lods
mov
inc
loop
cwtl
aam
das
fdivrs
mov
hlt
sahf
sti
mov
sub
in
mov
leave
nop
call
js
mov
or
xchg
std
mov
add
ret
dec
leave
aam
and
loope
lret
ljmp
inc
nop
test
or
outsl
fistpll
in
addr16
in
hlt
repnz
pop
fcomip
mov
movsl
push
xor
aam
sbb
cmc
mov
ja
xor
pop
in
int
dec
pushf
dec
aad
xchg
jp
xchg
clc
or
pop
lods
mov
out
fstl
dec
xchg
jns
insb
jo
and
adc
sub
call
mov
sbbb
or
add
jb
mov
out
sbb
push
xchg
sub
jno
mov
push
ja
mov
gs
mov
cmp
ror
mov
repz
out
sahf
arpl
pop
xor
scas
repz
jle
push
xchg
rol
adc
es
lea
in
adcb
sbb
dec
add
pop
push
bound
cld
push
jbe
outsb
push
sbb
pop
mov
int
out
pop
ljmp
cmp
daa
mov
enter
push
push
int
pushf
add
iret
imul
pop
dec
sarl
cmp
lds
gs
js
push
and
cmp
pop
dec
mov
in
enter
push
sbb
pusha
pop
in
popl
andl
mov
add
lret
xor
shll
cmp
or
pop
and
fisttpl
test
ficompl
insb
and
ja
fsts
in
subb
cmp
xorb
sub
pop
ja
pop
clc
jae
mov
or
xor
cmp
mov
addr16
cmp
push
jle
jae
cltd
ljmp
in
test
push
jno
push
adc
inc
and
outsb
lods
xor
scas
pop
inc
jb
dec
gs
cmp
es
gs
out
push
or
mov
fistpl
aad
lock
fs
loop
inc
imul
xor
add
ja
fistpll
adc
movsb
or
xlat
adc
out
push
outsb
sbb
out
ror
cltd
jae
rorl
push
jecxz
mov
push
cmpsl
and
inc
xchg
sbb
fmull
das
repnz
stc
pop
adc
jbe
and
iret
mov
jb
xchg
stos
fs
out
inc
lret
iret
lret
lods
cmp
pop
fmull
insl
mov
jbe
xchg
repz
shlb
mov
stc
rcrl
fisubl
fbld
popf
addr16
sbb
scas
mov
sub
push
nopl
jae
arpl
cltd
mov
sbb
mov
imul
jg
mov
mov
test
subl
and
mov
ja
xchg
adc
xlat
mov
mov
insb
lods
add
repz
and
stc
jecxz
cmp
repz
inc
int
sbb
data16
xor
enter
ret
into
jg
fmuls
mov
add
push
pop
loop
shlb
adc
loop
bswap
in
xor
push
dec
and
movsb
cli
mov
jmp
xchg
es
inc
jnp
rcrb
push
int
xor
pop
loope
int3
push
pop
ljmp
std
cmp
int3
in
jns
mov
push
lock
mov
cwtl
xchg
cmp
loope
or
pusha
adc
pop
xchg
test
pop
and
adc
decl
incl
movsb
add
mov
inc
ss
pop
mov
xlat
shrl
xchg
jbe
fwait
int
xor
in
mov
arpl
sub
sbb
sti
cmpsb
jns
shll
pop
aas
xchg
fcomps
fucom
mov
mov
in
addr16
mov
cli
xchg
inc
pop
pop
sub
rol
jbe
mov
cli
aam
pop
sbb
mov
push
pop
movsl
inc
adc
push
and
push
sub
mov
dec
out
pushf
inc
push
sbb
adc
mov
mov
dec
in
sbb
and
push
xor
ss
add
mov
pusha
add
inc
or
ds
xchg
stos
daa
cmp
inc
dec
enter
mov
cmp
dec
repz
testl
add
adc
xchg
icebp
push
xchg
xor
sbb
adc
xchg
test
pop
adc
dec
push
push
mov
add
andb
in
sti
mov
hlt
test
sub
ljmp
pop
addr16
outsb
test
add
stos
push
dec
xchg
or
mov
xor
je
jnp
ja
inc
dec
js
adc
dec
shr
daa
jmp
or
push
sub
ljmp
adc
push
jle
sub
std
push
testb
mov
lcall
pop
fsubrs
cmp
push
mov
mov
jno
and
pop
ljmp
pop
das
mov
or
xchg
fdivr
cltd
andl
sti
rclb
sbb
fisubs
imul
mov
xor
ret
xchg
xor
mov
and
xchg
in
fcomps
inc
js
into
inc
bound
mov
out
shlb
dec
fsubl
adc
rcl
pusha
mov
cmp
lahf
js
mov
inc
jmp
data16
lods
push
pop
icebp
js
cmpl
sbb
cmp
mov
mov
dec
mov
mov
jb
repz
aas
lahf
nop
hlt
mov
adc
nop
push
int3
pop
sbb
cmp
popf
xor
push
fldcw
lcall
dec
stc
mov
cltd
push
icebp
outsl
fistpll
and
xchg
cmp
ffree
cli
jne
in
lods
cmpsl
orl
xchg
into
push
xchg
mov
and
call
test
or
mov
and
loopne
dec
xor
xchg
cmp
rorb
jo
xchg
mov
add
mov
jae
sbb
dec
mov
mov
cmc
inc
testb
xor
pop
clc
insb
inc
cld
arpl
add
ja
mov
push
pop
out
sub
outsl
subl
xor
mov
xchg
dec
icebp
adc
test
xor
daa
dec
mov
sub
mov
jge
adc
cmpl
mov
push
nop
testl
cmp
adc
lret
loopne
fwait
cli
int3
pop
fsubrl
push
and
iret
insb
das
xchg
faddl
sbb
dec
and
jno
into
clc
sahf
xchg
in
cmp
ja
cmp
loope
pushf
insb
xchg
dec
lret
js
xchg
dec
clc
mov
add
sbb
jl
dec
adc
and
cmp
jne
and
scas
mov
cltd
dec
sbb
lds
sbb
gs
fs
add
inc
mov
adc
or
pop
mov
iret
call
addr16
sbb
dec
sbb
sahf
mull
dec
scas
jg
mov
aas
mov
aaa
aad
push
in
adc
jno
xor
cmp
xor
lret
adc
jne
sbb
lretw
and
pop
xor
or
or
cmp
jbe
push
shrl
cmp
mov
xchg
incl
mov
jne
cmc
testb
cwtl
pop
mov
fistl
xlat
push
and
lods
push
je
movsl
add
out
xor
mov
and
mov
fcoms
xchg
mov
leave
push
lahf
adc
dec
mov
jnp
lea
fisubl
jecxz
xor
mov
push
loop
cmp
cmp
and
loopne
adc
je
aaa
imul
adc
cmp
jmp
jns
idiv
loope
push
xor
inc
mov
pop
jmp
mov
shl
inc
aam
test
ljmp
dec
shll
pop
or
push
mov
push
cmp
cld
aad
add
push
or
mov
roll
jae
sarb
sub
cmp
loope
add
inc
mov
movsl
testb
lret
sub
mov
addl
in
mov
inc
cmp
mov
scas
push
pop
jo
aas
mov
mov
or
lock
jecxz
and
adc
lock
and
repz
dec
inc
xlat
cmpsl
dec
icebp
mov
xlat
in
mov
int3
ror
adc
pop
xor
sbb
cmp
push
xchg
in
shlb
adc
pushf
test
push
fsubs
aas
mov
lret
xlat
out
adc
jecxz
fsubl
clc
xchg
inc
xchg
loope
mov
movsb
dec
xchg
scas
cli
adc
cmp
fdivr
push
cs
mov
lret
cmpsb
sbb
rcll
jne
add
gs
into
aas
and
insb
mov
into
lahf
in
rolb
inc
and
xlat
cmp
push
adcl
add
mov
cwtl
dec
cmpsb
pop
and
ja
mov
inc
dec
loop
xchg
jp
push
icebp
bound
xchg
jge
mov
adc
cmp
mov
xchg
jmp
and
jo
pop
dec
daa
sub
cmp
pop
std
xor
and
xor
cmp
loop
cmp
loopne
incb
and
hlt
out
pop
mov
vpsubb
pmaddwd
jecxz
xor
jno
mov
out
sbb
insl
gs
sbb
mov
movsl
lds
add
mov
icebp
rcrb
sbb
cmp
ds
out
pop
ja
pop
inc
and
popf
xchg
xchg
sbb
dec
cmp
xchg
daa
out
mov
push
pushf
xchg
mov
ss
test
mov
dec
mov
or
push
clc
inc
cmp
stos
fidivrs
cmp
push
mov
iret
lea
insb
sbb
bound
push
pop
ds
push
je
cs
out
lods
adc
mov
call
push
hlt
mov
jo
out
or
sub
mov
xor
mov
clc
pusha
push
xor
jbe
mov
sti
aas
mov
dec
push
popa
test
jno
fwait
add
pushf
dec
out
push
jmp
rcl
das
mov
movsb
push
dec
movsl
daa
mov
jmp
rclb
in
xchg
sti
stos
jae
or
dec
mov
out
fwait
enter
adc
inc
push
cmp
and
mov
fldcw
mov
lret
mov
adc
pop
add
jp
pop
inc
imul
int
dec
mov
movsb
mov
test
outsb
jne
push
repnz
dec
pop
daa
pop
lods
inc
xor
add
xor
fs
cmpsb
mov
cmp
lcall
ss
mov
push
sbb
outsl
xchg
sub
push
sub
push
adc
sub
adc
cmp
xor
mov
in
lret
std
add
cmp
sub
lods
shlb
jmp
or
push
dec
sub
or
cmpsb
cmpsl
mov
adc
ljmp
or
ds
in
loope
sub
sahf
xor
out
mov
push
sbb
cmp
aaa
mov
neg
inc
mov
rorb
ljmp
bound
jbe
dec
insb
lret
insb
lock
push
add
pushf
push
adc
adcl
dec
sahf
xlat
mov
fucomi
rcrl
lods
xor
pop
andl
in
jp
sub
cmp
xlat
imul
scas
enter
xchg
in
pop
mov
dec
dec
push
loopne
and
pop
inc
jmp
sarl
test
pop
mov
out
lock
mov
and
sub
out
pop
dec
mov
fs
repnz
es
std
scas
icebp
stc
or
jp
add
jg
stos
pop
push
push
jns
mov
aad
scas
test
pusha
and
lret
push
or
xchg
in
insb
sbb
repnz
pop
dec
jnp
pop
ljmp
jnp
sub
push
iret
mov
add
jge
pop
sti
mov
cmpsb
lods
out
lahf
imul
inc
cs
add
mov
push
rorb
sbb
popa
jmp
xlat
shl
cmpsl
sub
cmp
fsubrs
dec
mov
jmp
mov
scas
imul
cld
popf
adc
mov
add
jle
lea
or
jbe
icebp
inc
enter
dec
cmp
rcr
scas
fsubr
cs
aad
sub
shrb
cmpsl
xor
xchg
add
stc
inc
in
xchg
loopne
push
mov
pop
sbb
dec
xchg
mov
and
sbb
jne
out
icebp
push
mov
sbb
mov
jb
fists
and
pop
jl
outsb
sub
pop
in
jns
int
outsl
dec
dec
add
jg
es
sti
mov
pop
add
sar
cmp
mov
inc
int
gs
pop
sahf
xchg
add
lds
jmp
ret
aas
mov
inc
xor
insl
xor
inc
inc
pop
sbb
ljmp
fiaddl
pop
insb
js
mov
arpl
stos
ljmp
jg
lds
sti
and
rcll
inc
pop
subl
scas
adc
fistl
pop
loop
pop
xor
pop
mov
popa
jle
testl
int
ljmp
sbbl
js
or
adc
adc
insb
or
jg
int
in
test
sbb
inc
pop
ljmp
mov
sub
inc
pop
inc
loope
sub
dec
add
addr16
and
xchg
lds
pop
push
jg
xchg
cld
icebp
into
imul
lock
stc
sub
jle
stc
loope
js
stos
xchg
leave
ja
or
cs
int
int3
adc
leave
ja
xor
imul
movsb
fstps
movsl
scas
add
es
xor
daa
cmpsl
icebp
sbbb
scas
or
iret
shl
sub
cwtl
xchg
cmovae
ljmp
bound
sub
fninit
ret
adc
mov
xchg
mov
insb
pop
stos
lds
mov
add
mov
scas
mov
je
jle
fsubr
in
clc
lahf
iret
push
xchg
jne
outsb
jge
push
loope,pt
int
sbb
mov
imul
mov
dec
aam
les
pop
xchg
in
outsb
jae
mov
mov
pop
ret
mov
jle
sbb
xchg
mov
inc
cmp
out
aad
jmp
add
loope
fcomip
bound
lahf
mov
or
int
add
out
ret
and
add
lock
orl
jmp
xor
scas
dec
push
cmp
aad
push
pop
sub
mov
cld
xor
dec
daa
dec
sar
mov
xor
sbb
and
mov
sbb
cmpsl
mov
leave
xor
out
pop
leave
adc
or
fisttps
idivl
and
test
dec
out
and
hlt
out
cld
dec
bound
add
jle
push
out
pop
rcrb
dec
push
pop
adc
addr16
pop
jbe
insb
jno
cs
lock
adc
push
div
and
mov
dec
push
jp
cmp
das
pop
add
sahf
clc
or
out
push
ret
push
xor
aam
andl
test
and
lret
jle
mov
add
cmp
int
pusha
sbb
push
sbb
add
out
push
stos
pop
aad
push
int3
arpl
pop
xor
mov
adc
adc
rolw
sbb
push
xor
sub
mov
shll
mov
push
or
dec
mov
sbb
pop
daa
in
adc
loope
mov
mov
js
mov
leave
fstps
aas
loope
aaa
and
mov
cld
dec
mov
rdtsc
lahf
sub
and
add
push
and
cmp
pushf
pop
pusha
dec
and
pop
inc
lods
scas
push
shrl
lods
addl
or
stc
xor
lcall
cmp
sti
in
push
jp
xchg
add
lcall
pop
lret
and
out
xor
addr16
stc
nop
std
mov
lods
pop
add
loope
lods
inc
inc
xlat
addr16
sbb
jmp
mov
xchg
scas
inc
mov
fxch
inc
addr16
adc
adc
lret
xchg
pop
jo
mov
mov
scas
add
sbb
mov
and
pusha
mov
sbb
push
push
pop
mov
mov
adc
pop
mov
lahf
fs
daa
movsl
jnp
pusha
xor
mov
pusha
push
sarb
call
je
adc
jo
imul
out
dec
xor
out
stc
mov
fdivrl
jns
jbe
popf
inc
xchg
dec
stos
es
sub
lods
jmp
cmc
xchg
xor
pop
aam
bound
xor
adc
outsl
sub
aaa
pop
mov
add
lods
and
repz
stos
adc
int3
pushf
imul
inc
jmp
je
or
lea
xchg
sbb
xlat
pop
xchg
cmp
inc
aad
fyl2x
das
pop
out
ficompl
arpl
stos
out
insl
sti
inc
adc
bound
jb
dec
add
inc
ja
jae
push
in
fsubl
fidivrs
pop
jne
pop
lahf
movsl
add
xor
imul
add
clc
xchg
pop
mov
mov
add
mov
or
xchg
cmp
test
push
push
lcall
sub
pop
repnz
shlb
lcall
sub
push
jae
leave
push
dec
dec
lcall
imul
call
loop
cmp
roll
stos
xchg
adc
add
add
cld
push
mov
xchg
ret
push
ds
xchg
es
pop
mov
mov
cmp
push
and
fsubrl
bound
fimull
aad
push
inc
pop
notl
jge
mov
dec
push
in
jp
pop
sahf
incb
popa
inc
test
sahf
pop
mov
sub
mov
insb
mov
repz
sbb
jns
test
addr16
jmp
leave
cmc
push
jnp
cmp
popf
inc
push
pusha
dec
sbb
addr16
enter
clc
out
fsubp
cmp
push
inc
stc
cmp
adc
pop
sbbb
sub
add
jge
loopne
and
test
bound
leave
jae
fwait
stos
cs
fidivrl
mov
sub
loope
jb
push
rcr
pop
sarb
and
mov
mov
outsl
add
or
arpl
pop
outsb
stos
jbe
mov
outsb
into
push
push
inc
sub
sbb
mov
mull
sub
movsb
std
jb
adc
lea
dec
adc
mov
test
mov
fs
lcall
test
sub
loopne
jg
and
movsb
leave
mov
add
in
mov
cmp
mulb
lea
leave
movsl
and
pop
inc
lcall
sahf
sub
push
jmp
stc
dec
cmpsl
pop
iret
mov
adc
lods
jbe
xor
sub
icebp
movsb
sti
xchg
xchg
mov
idivl
sbb
loope
movsb
mov
aas
mov
rcrl
mov
add
adc
jmp
sub
loopne
sarb
insl
and
mov
mov
outsb
mov
mov
dec
or
ret
shll
loope
stos
stos
xchg
testb
xchg
scas
bound
add
cmc
ljmp
in
dec
mov
push
mov
push
add
outsl
int
push
ja
mov
loopne
xchg
adc
aam
js
pop
mov
sar
imul
inc
pusha
inc
mov
fwait
out
inc
sti
push
add
ret
xchg
xor
push
aam
iret
sbb
das
mov
push
sub
mov
lock
out
fimuls
xlat
rorb
adc
xor
in
jo
adcb
dec
lds
sti
rcrb
sti
into
jae
in
push
sbb
enter
cltd
divb
fistps
mov
int3
push
dec
fidivrs
push
test
jno
imul
xor
sub
mov
enter
mov
es
loope
cmpsb
cld
or
pop
push
sti
push
mov
mov
inc
xor
xchg
enter
dec
rcll
push
xchg
dec
lret
jp
adc
ffree
or
jl
xchg
subb
test
sub
xor
je
and
cmpsl
dec
out
push
xor
xchg
imul
cmpb
mov
in
cmpsl
or
aaa
sub
push
cltd
pop
jmp
mov
jno
sbb
aaa
clc
push
xchg
imul
add
jmp
imul
inc
jmp
insb
pop
mov
lods
jecxz
mov
cs
out
sbb
or
mov
mov
xor
out
movsb
push
inc
mov
jne
xlat
popa
sarl
pop
aad
rcll
fidivl
and
js
cmp
test
mov
mov
xor
push
in
cmp
imul
clc
fiaddl
cmpsl
push
pusha
lds
cltd
mov
push
lret
cmp
jne
xchg
testl
mov
and
mov
out
mov
fiadds
sub
stos
xor
pusha
aas
ljmp
divl
call
das
loope
out
mov
hlt
insl
mov
sbb
mov
int
es
sbb
outsl
mov
loopne
dec
inc
mov
in
jae
arpl
sub
jge,pn
mov
and
pushf
mov
sub
insl
pop
adcl
xchg
cmp
inc
dec
out
push
stc
sub
jmp
div
sub
fldl
add
push
push
xorb
das
sub
cld
mov
lods
or
or
test
jo
inc
addb
adc
fwait
push
fstpl
jne
dec
fisubs
xor
in
sbb
repnz
pop
mov
lret
pop
mov
dec
bound
out
xchg
xchg
nopl
mov
lret
xor
pop
or
jns
rclb
jnp
fwait
cwtl
pop
imul
sub
mov
sbb
pop
test
rorl
mov
and
je
mov
fists
dec
add
dec
std
addr16
jbe
jle
adc
adc
sub
pop
adc
test
add
and
scas
hlt
sub
ret
movsb
ljmp
je
test
stos
cmp
jno
jae
dec
cmc
adc
sar
cmpsl
sahf
adc
fstps
adc
jl
arpl
sbb
movsl
lcall
xchg
enter
les
gs
adc
shll
pop
xor
sub
xchg
jno
outsb
push
negl
cltd
mov
xchg
xchg
jo
sub
clc
jmp
cld
pop
mov
xchg
subl
dec
cltd
mov
pop
rorl
mov
mov
add
xchg
pop
hlt
test
add
add
and
sbb
pop
ret
fisubrs
jnp
lcall
push
inc
movsl
adc
pop
out
xchg
enter
pushf
mov
test
pop
or
add
pop
xchg
and
adc
test
shr
xor
sub
xor
js
aas
in
notb
dec
cmpsb
and
aam
mov
stc
aam
hlt
shll
or
adc
test
push
mov
dec
pusha
bound
inc
cmp
mov
adc
test
loopne,pn
jb
sub
mov
mov
pop
cmpsb
mov
or
pop
xor
xor
stos
popf
ret
and
nop
mov
out
cwtl
lds
adc
push
daa
dec
cmp
or
rep
or
lret
dec
imulb
iret
add
ret
test
cs
daa
dec
or
lahf
orb
dec
int3
hlt
cltd
xchg
mov
andl
mov
pop
ret
test
loop
das
xor
repnz
dec
xchg
nop
aam
push
fcmove
lea
imul
gs
stc
mov
xchg
repz
mov
push
add
lcall
sti
jbe
lret
repnz
lcall
addr16
dec
jb
test
in
cmc
je
mov
xor
add
jb
push
rcll
cmpsb
ja
sbb
mov
adc
adc
mov
insb
out
jmp
mov
sbb
sub
jno
lea
scas
xchg
ljmp
mov
icebp
mov
jecxz
pusha
imul
xchg
test
jmp
cmp
jne
and
add
call
inc
and
xchg
mov
aas
mov
lea
mov
in
addr16
mov
jmp
pop
shr
xor
mov
push
gs
rorl
mov
jns
adc
idivl
pop
adc
leave
push
sub
lahf
adc
cmp
aas
jle
xor
sbb
lds
stc
xor
cmpsb
popf
out
sbb
sbb
sbb
shrl
push
inc
and
xor
js
aam
mov
das
and
shlb
sti
xor
call
sbb
ret
outsl
adc
into
mov
push
mov
mov
aam
sbb
and
subl
add
and
mov
testl
push
mov
in
aad
pop
mov
or
jmp
inc
insl
pusha
adc
shlb
mov
aaa
mov
out
int
int3
sahf
lcall
lds
xchg
ds
add
xchg
and
jb
push
movsl
cmc
push
mov
jle
loopne
scas
data16
mov
inc
loopne
push
xor
xchg
testl
data16
mov
idivb
xor
lret
fwait
scas
jae
roll
loope
loopne
push
sbb
dec
daa
jae
mov
pop
or
std
xchg
fcmovb
mov
push
and
cmp
gs
mov
lret
sub
mov
arpl
pop
mov
popf
pop
push
sub
aad
adc
mov
jecxz
fistpll
add
sbb
out
fidivl
insl
fdivl
mov
jno
mov
and
xchg
cmpsl
int
xchg
cmpsb
shll
inc
shll
pop
lahf
in
xlat
lock
in
test
je
mov
xor
sub
sbb
call
loop
inc
or
test
push
pusha
jno
cmpsb
and
inc
int
into
mov
fwait
lahf
lods
ljmp
ljmp
inc
cmp
rcll
icebp
and
bound
stos
inc
push
mov
into
icebp
mov
jp
scas
xor
mov
add
push
cmp
jne
add
aad
cmpsb
dec
jp
push
sub
sub
push
sti
add
jle
loope
and
cmpsb
push
addr16
cmp
push
idivb
icebp
pop
add
and
xor
jg
mov
push
push
ja
inc
pop
cmp
xor
popf
std
add
testb
call
leave
loope
test
mov
insl
in
mov
stc
mov
xchg
outsb
jl
xchg
outsl
sbb
pusha
or
pop
add
mov
ds
mov
ret
and
fcompl
sub
jmp
enter
fmull
push
fcomps
cli
popa
jp
daa
out
pushf
push
pop
popf
test
push
push
imul
aas
mov
mov
shlb
and
jno
add
lcall
sbb
or
push
xlat
push
mov
aas
stc
mov
movsb
cs
cmc
push
aas
inc
daa
lods
jbe
sub
mov
scas
cld
in
testb
xor
lcall
inc
cmp
push
icebp
dec
hlt
xchg
dec
xchg
or
mov
fists
jnp
and
add
mov
and
movl
xchg
mov
inc
adc
out
scas
mov
dec
mov
xor
iret
ficomps
es
sbb
pop
jns
mov
inc
jbe
pop
in
clc
cmp
aad
inc
inc
into
push
push
mov
scas
pusha
cmp
pop
enter
xlat
dec
sbb
pop
push
int
dec
into
in
mov
int
dec
or
mov
int3
add
and
adc
stos
iret
jl
sbb
ds
out
cmp
mov
outsb
add
mov
stos
adc
push
icebp
mov
and
jne
inc
mov
lcall
mov
mov
out
fistl
repnz
or
dec
jae
mov
mov
shl
xor
add
inc
xor
jbe
xchg
negb
mov
lods
sbb
stos
add
test
fildll
inc
jnp
imul
insb
sub
orb
popa
bound
adcb
pop
sbb
mov
and
jecxz
push
mov
pop
sub
dec
nop
sub
push
cli
out
stc
jns
call
mov
cmc
mov
add
sti
les
mov
das
cmp
add
push
jbe
dec
divb
push
enter
xor
mov
sti
inc
jmp
int3
dec
rcrl
and
push
lsl
jns
repz
cmp
push
cli
cmp
lahf
sub
scas
out
push
rcll
push
stos
movsb
xor
insb
push
mov
loop
cmp
push
js
ss
push
pop
fs
in
jmp
out
into
xchg
lods
pop
cmc
cmp
dec
addr16
pusha
and
bound
cmpsb
out
outsb
mov
xchg
cmp
stc
mov
aas
dec
mov
lds
jns
lds
int
push
xchg
aaa
mov
adc
iret
sub
pusha
adc
rol
or
cmp
xor
jle
in
stos
clc
hlt
ret
testl
dec
es
daa
mov
idivl
push
mov
cwtl
and
mov
clc
dec
sbb
imul
lea
mov
xchg
push
adc
fsub
mov
fisttpll
loopne
repnz
aam
pop
pop
sbb
xor
mov
ret
sub
insl
shrl
fdivrl
mov
lea
mov
push
lods
jmp
fcompl
fld
imul
push
mov
push
mov
arpl
movsl
insl
sbbb
xchg
mov
out
adc
mov
pop
es
flds
jne
xchg
scas
ret
dec
cmpsb
shrb
pop
sub
xor
ja
push
push
or
ret
push
or
lcall
jp
pop
pusha
pop
xchg
cli
imul
inc
les
js
scas
sbb
das
test
clc
and
pop
jne,pn
movsl
rolb
push
es
or
neg
loope
hlt
pop
xchg
pop
and
shlb
mov
sbb
adc
or
cmp
icebp
inc
mov
stos
lret
push
xchg
jecxz
sbb
sub
daa
dec
aam
sahf
fists
sbb
jg
add
mov
mulb
cltd
jge
pop
pop
push
mov
mov
ja
pop
fldpi
dec
insb
add
mov
pop
or
mov
mov
xchg
mov
adc
gs
das
ss
cmc
mov
cmpsb
push
jp
mov
mov
xor
push
sbb
test
bound
sub
jmp
nop
jmp
inc
adc
cmc
gs
loop
call
ja
xor
dec
or
jnp
test
mov
jl
lock
xor
insb
ja
pop
scas
jge
repnz
cwtl
or
xor
jp
add
mov
jl
and
xor
cmc
out
mov
aam
add
aas
pop
fcoml
dec
inc
bound
jmp
int
fs
mov
xchg
daa
in
mov
pusha
out
pusha
ud2
dec
sub
or
pop
sub
jae
mov
ss
and
arpl
fsubr
pop
leave
int3
xor
pop
popf
mov
sub
cmc
mov
jne
inc
fdivs
jecxz
stos
outsb
mov
push
sub
mov
mov
loopne
jnp
aas
loope
in
lret
out
inc
divb
mov
fisttpl
adc
inc
call
cs
fmulp
xchg
leave
fwait
xchg
movsl
jge
sbb
adc
addb
jbe
enter
mov
jo
insl
loopne
insb
or
sti
lods
lret
aam
push
aas
mov
ret
pop
and
cmp
sbb
jns
mov
mov
xchg
scas
xor
mov
andb
test
ds
es
inc
jp
dec
mov
dec
xor
jb
xchg
int3
mov
push
inc
mov
mov
cli
xchg
jp
or
mov
int
jbe
sbb
push
push
ljmp
inc
jb
data16
pop
scas
sub
mov
and
or
dec
test
test
out
jns
testb
cmp
dec
scas
fidivs
arpl
mov
stos
jle
push
adc
into
push
adc
lahf
fwait
cmovne
fcomip
lret
or
sbb
mov
push
push
fildl
aas
jge
mov
sbb
inc
stos
jae
in
xchg
pusha
outsl
rclb
push
imul
std
xchg
pop
fwait
pop
fists
push
mov
jnp
add
imul
movzwl
mov
out
lea
lcall
fst
xor
inc
mulb
mov
mov
jmp
pop
pop
xor
mov
mov
xor
mov
jecxz
ret
into
dec
std
xchg
or
cmp
pop
popf
addr16
cmpb
mov
icebp
movsl
das
shll
or
in
cs
add
dec
out
aaa
std
push
mov
push
cltd
mov
cmp
ret
scas
dec
insl
fucomip
cmp
push
mov
inc
inc
push
adcb
sahf
xlat
mov
and
cmpb
cmpsb
xchg
rcrl
leave
stos
ficomps
jbe
mov
jl
xchg
mov
cltd
adc
inc
xor
dec
mov
mov
push
xchg
jg
jg
cmc
jo
ret
push
aas
test
sbb
dec
mov
lock
pop
adc
jns
push
cmc
mov
jne
fwait
gs
xchg
in
rol
sti
lods
jo
and
mov
aam
and
insl
sbb
xor
fsubs
xchg
jl
cmp
cmc
mov
xor
cmpsb
adc
xor
dec
shll
push
add
aas
xchg
add
cmpsb
pop
inc
es
idivl
loope
cs
jle
xchg
fwait
push
dec
call
adc
int
pop
lcall
popa
push
inc
xlat
mov
aam
sbb
shll
lea
jnp
jbe
adc
push
popf
sub
mov
fwait
or
sbb
fldt
add
repnz
xor
aas
out
xor
out
push
or
xlat
xchg
dec
sub
push
sti
push
aam
lods
dec
ljmp
aas
int3
cs
sbb
inc
aad
outsb
xor
mov
mov
push
push
fs
jp
xor
sub
xlat
nop
out
repz
stc
int
fsubs
sbbl
pop
jno
jbe
mov
add
mov
lds
sub
cmp
mov
imul
xlat
rorl
insl
data16
jbe
jp
jg
leave
sub
scas
add
mov
mov
mov
out
lods
xorb
push
ds
andb
sahf
sbb
sub
ljmp
add
daa
ljmp
xchg
jb
scas
testb
int
pop
pop
add
popf
lods
adc
inc
mov
sarb
jb
jnp
pop
and
test
xor
xchg
and
cmp
stos
add
out
and
cld
aaa
mov
out
jno
in
add
lds
inc
jbe
mov
mov
xor
adc
insl
shlb
push
ret
xor
mov
add
add
test
mov
nop
out
es
or
dec
rorb
dec
scas
lea
and
add
or
add
fdivrp
mov
bound
imul
sub
adc
bound
mov
rcrb
call
xor
sti
ret
mov
or
xchg
cmp
mov
mov
mov
outsb
fcom
cli
mov
pop
movsb
dec
popf
adc
testb
ss
stos
ffree
inc
loope
push
int3
adcl
mov
inc
in
and
fistpl
jge
add
mov
or
fisttpll
xor
popa
or
pusha
pop
add
dec
cmp
inc
fwait
jmp
sub
shll
ret
mov
cmp
sub
cmp
shlb
std
mov
pop
pop
clc
and
cmp
jp
gs
pop
mov
mov
enter
sti
jmp
cmp
jge
cli
adc
cltd
push
stos
nop
mov
adc
jecxz
repz
out
pop
dec
in
cwtl
adc
shrb
mov
mov
push
cmp
push
mov
sub
sahf
fisttpl
mov
test
and
enter
mov
mov
push
scas
dec
mov
mov
add
push
fsubp
mov
pusha
mov
ret
jae
or
add
xor
xchg
int
mov
movsb
jns
scas
sbb
sub
fistl
mov
mul
repz
mov
dec
dec
jp
or
rorl
lahf
adc
dec
xchg
bound
ffree
cmpsl
outsl
cli
or
push
add
lea
pop
iret
call
cmpsl
mov
jg
pop
imul
test
mov
mov
aad
dec
scas
cli
loopne
jmp
jecxz
jno
inc
test
pushl
lcall
lret
xchg
test
out
pop
pop
push
clc
xor
xchg
scas
dec
adc
lret
jg
in
subb
xor
sub
jp
mov
mov
fisttpl
jb
in
jb
dec
and
fbld
pop
sbb
xor
dec
and
pop
jp
imul
shlb
cmp
pop
mov
dec
fwait
pop
mov
cli
xchg
fisttpll
loopne
ret
mov
mov
out
adc
mov
stos
pop
pop
call
cmpsb
adc
out
out
mov
add
inc
test
repnz
or
lahf
inc
lret
sahf
sti
jb
dec
cld
into
in
aaa
imul
fstl
sbb
in
push
inc
and
test
nop
daa
imul
lcall
jno
push
and
inc
test
imul
dec
pop
in
adcl
pop
shll
or
xchg
or
mov
lds
out
xchg
lds
inc
test
clc
push
cltd
dec
push
ret
mov
or
cmp
mov
cmp
pop
and
push
jecxz
push
rcr
inc
push
sub
mov
mov
stos
inc
fsubs
popf
loop
add
les
notl
sbb
je
pusha
into
orb
or
mulb
lahf
push
mov
xchg
add
lahf
adcl
mov
bound
shlb
xchg
popa
cli
repnz
or
adc
xchg
imul
sub
pop
pop
inc
mov
ss
idivl
popf
mov
imul
cwtl
insl
dec
push
xchg
mov
in
cld
mov
das
cs
push
mov
rorl
mov
popf
in
mov
jb
or
dec
and
insb
jb
bound
inc
das
jmp
leave
push
jbe
inc
test
in
dec
stc
insb
pop
pop
pop
test
dec
xchg
pop
inc
andb
xlat
inc
or
pusha
jae
add
loopne
inc
leave
cmp
rclb
push
lcall
sub
pop
sub
cmp
pop
and
inc
mov
push
clc
shl
movsl
xor
daa
adc
and
xchg
js
adc
je
add
fdivr
and
scas
add
and
pop
outsb
test
test
cmc
fisttpl
aas
jle
adc
inc
push
or
inc
adc
stos
or
sbb
dec
inc
sete
repnz
jns
mov
dec
sub
or
add
cld
push
nop
dec
push
pop
dec
out
adc
bound
cmpb
xor
add
mov
pop
lret
inc
js
mov
xchg
cmp
dec
lea
xor
inc
mov
in
daa
adc
aaa
jge
sti
inc
je
jecxz
cli
out
orb
insb
add
mov
ret
cmp
bound
movsb
pop
out
mov
scas
ja
xchg
scas
xor
fcmovbe
cmp
mov
mov
test
mov
fdivs
lods
xchg
popf
mov
lods
dec
push
push
ja
mov
insl
xchg
cmp
add
add
mov
cmp
xor
pop
push
test
dec
xchg
xor
cmp
jae
mov
pop
cs
jmp
aam
jg
mov
popa
sbb
xlat
inc
sbb
cld
sbb
test
adc
dec
inc
aas
fistps
cmpb
ds
aaa
aam
jb
imul
pop
loopne
jne
push
popaw
movsl
xchg
dec
push
and
dec
std
stos
rolb
jo
or
or
call
mov
sub
pop
sbb
mov
adc
and
movsl
xor
repnz
dec
into
insb
mov
ret
subb
or
mov
adc
mov
js
jecxz
fildl
jae
sahf
mov
fsubl
je
push
inc
inc
inc
cs
movsb
gs
push
cmpsb
das
and
clc
jbe
xchg
adc
xchg
lcall
pushf
es
adcl
call
cmc
mov
sbb
push
test
out
mov
addr16
fcoml
xchg
pop
mov
and
sub
jmp
out
and
shll
enter
push
push
add
sub
ret
xor
xchg
cmpsl
jb
inc
inc
int3
xor
xchg
mov
cmp
sbb
fwait
hlt
xor
mov
decl
orb
pusha
add
data16
sbb
ficoms
jl
rcll
std
fsubl
test
imul
push
fs
aaa
mov
mov
mov
les
or
stos
stos
lcall
mov
pop
ja
insb
in
mov
cltd
mov
mov
sub
and
push
dec
mov
or
lds
push
dec
and
mov
xchg
stos
outsb
dec
testb
cmp
icebp
mov
dec
adc
fisubrl
das
pop
mov
pop
mov
add
and
adcl
shrl
push
inc
sub
jo
sbb
rolb
lods
into
cmc
push
and
jb
fbstp
xlat
cmp
inc
mov
sub
popa
sub
lret
jo
js
mov
stc
loop
shrl
and
mov
hlt
jecxz
lock
xchg
inc
push
jbe
inc
sub
shll
lret
lock
pop
and
push
jnp
jbe
sbb
les
pop
mov
ret
cli
add
rolb
test
mov
push
daa
addr16
shl
inc
dec
pop
jecxz
enter
xor
dec
imul
pop
jp
jecxz
push
inc
mov
push
repnz
mov
push
mov
dec
jne
test
movsl
push
mov
dec
and
shl
push
imul
movb
lahf
in
adc
fs
mov
push
add
jge
fistps
mov
xor
jbe
push
or
pop
int
out
scas
pop
push
pop
xchg
push
push
ror
xor
aad
jo
out
gs
insl
add
imul
jo
into
or
rorl
pop
xchg
sti
jl
gs
xchg
xchg
inc
adc
mov
mov
aam
pop
adc
pop
xlat
xor
in
lret
jae
mov
adc
aam
sarb
popa
pop
jg
add
shlb
push
and
dec
nop
mov
sbb
repz
push
insb
mov
shrb
test
cs
add
xor
xchg
xchg
jecxz
js
push
aaa
jecxz
pushf
jnp
mov
push
data16
add
mov
aas
out
mov
icebp
cltd
pop
out
sbb
fistl
fildll
or
cld
imul
xchg
cmpsb
ret
loope
jl
dec
push
jmp
imul
or
xchg
dec
ds
movsl
xor
je
lcall
movsb
ljmp
pushl
or
mov
dec
push
and
in
cmp
ret
dec
or
mov
scas
hlt
inc
push
mov
sub
mov
xchg
test
out
clc
into
outsb
sbb
fcmovb
xchg
sub
dec
fld
push
gs
mov
jmp
insb
rorb
lods
imul
ja
rcrb
add
or
xchg
and
xchg
sbb
into
out
rorb
into
inc
inc
jl
xorb
pop
lcall
clc
stos
push
lahf
out
inc
repz
mov
sbb
adc
jae
subl
lahf
fwait
nop
xchg
or
outsb
outsb
xchg
lock
push
mov
in
xor
xchg
mov
jno
fistps
std
jmp
bound
pop
das
and
push
repz
pop
add
ret
jae
test
xor
jae
jb
mov
jp
jbe
lahf
das
popa
iret
mov
lahf
and
jae
cmpsl
into
pop
jg
in
test
faddl
inc
in
xchg
sbb
sub
jae
daa
and
inc
push
xchg
stos
cmp
aad
popa
bound
loop
stc
cmpsl
sub
dec
loopne
scas
inc
dec
mov
sahf
pop
cli
sbb
iret
gs
xchg
xchg
enter
xchg
maxps
cmpsl
cmp
xchg
jmp
adc
push
pop
leave
xchg
xchg
push
loope
add
mov
jae
cmpb
pop
sti
sub
add
adc
dec
mov
lea
std
xor
sbbb
xchg
add
aad
hlt
mov
and
sub
push
cmp
ljmp
sti
and
std
sub
jo
incl
pop
das
pop
pop
out
inc
jne
xchg
hlt
bound
cli
mov
inc
insl
shl
out
imul
shrl
mov
gs
lcall
inc
dec
mov
add
popa
icebp
lret
notl
addr16
imul
pop
xlat
pushf
mull
mov
inc
sti
mull
icebp
loope
jo
inc
fidivrs
lods
scas
inc
leave
add
daa
sub
dec
fildll
fistl
mov
stc
les
or
and
iret
in
icebp
add
mov
mov
xor
xor
cmpb
addr16
mov
push
in
adc
dec
lods
push
rcll
cmp
mov
andl
mov
push
pop
cmc
sbb
inc
xchg
push
pusha
sbb
popa
jae
dec
scas
xor
iret
or
add
mov
push
sbb
bound
push
xlat
jmp
add
and
or
mov
negb
fsubp
rcl
xchg
cmp
add
sub
loopne
insb
test
rclb
add
and
push
dec
enter
dec
adc
push
lods
xlat
icebp
xchg
inc
sbb
pop
dec
jle
iret
mov
jl
notl
mov
lcall
pop
pop
fs
mov
xchg
ss
and
das
test
mov
subl
mov
add
mov
dec
or
push
xchg
mov
xor
int
lret
mov
or
fsubl
cmp
lret
adc
dec
aad
dec
cmp
pop
aaa
jl
jl
loop
cmpsb
mov
add
fiaddl
jb
stos
jg
insl
xchg
adc
dec
inc
sub
cmp
es
in
mov
inc
cwtl
std
pop
xor
stos
adc
dec
pop
xchg
mov
das
xor
xchg
aas
mov
jle
clc
mov
lret
and
pop
adc
ret
inc
leave
cmp
and
imul
mov
fstpt
add
inc
or
mov
ljmp
or
leave
fldcw
and
inc
push
jp
push
add
pop
jge
lds
movsl
aas
frstor
or
jno
add
sar
jl
into
mull
pop
lcall
dec
mov
lret
adc
cmp
and
addr16
sub
imul
fcomps
mov
daa
cmp
into
jp
fstpl
fdivrs
pusha
lods
hlt
fldenv
xchg
mov
add
outsl
push
fadd
lock
insb
inc
insb
xor
repnz
cmp
dec
aam
mov
inc
sub
mov
arpl
xchg
dec
jne
sahf
adc
and
ja
imul
pop
xchg
sbb
push
loop
add
inc
stos
popa
xlat
and
push
out
mov
push
sbb
sbb
lret
sbbl
outsl
or
sbbb
cmp
pop
ljmp
add
enter
ljmp
pop
push
pop
addr16
sahf
and
sbb
inc
push
stos
xchg
add
mov
pop
cmp
mov
mov
mov
repz
fsubrs
sub
in
out
adc
stos
push
mov
mov
pop
movl
add
lea
lea
pop
push
sbb
mov
fstpt
push
mov
push
adc
test
mov
push
nop
fsts
cwtl
lods
sbb
adc
jg
bound
jne
ljmp
sub
sbb
int
pop
sub
lea
mov
aaa
jb
outsb
lock
jne
sbb
xchg
scas
cmpsb
mov
xchg
xor
and
movsb
hlt
jno
cmp
sub
pusha
aad
lret
xor
dec
xor
bound
mov
out
fnsave
sub
sub
xor
xchg
ja
aas
rclb
imul
mov
push
pop
push
movsb
notl
icebp
xchg
insb
data16
out
fidivs
mov
lock
aam
pop
pop
stos
dec
sti
not
bound
and
cmc
scas
fwait
dec
mov
push
push
and
mov
popa
rcll
fwait
adc
push
mov
dec
int3
and
je
fwait
inc
in
jecxz
sub
les
imul
cmp
out
lods
jae
cli
fistl
jns
jg
cmpsb
and
cld
rol
sub
fs
sar
xchg
push
jmp
push
popf
sub
dec
xor
int3
xor
clc
push
sbb
sbb
adc
xor
lods
cmp
sahf
sbb
add
sub
cmp
fs
inc
popf
add
mov
cmc
dec
call
cmp
stc
pop
dec
adc
mov
jo
mov
lock
fs
not
mov
mov
lahf
lcall
insb
cmp
cmpsb
call
push
lcall
scas
jecxz
or
cmp
pop
pop
ds
mov
jo
and
andl
andb
jo
repz
sub
lret
mov
cmc
add
sub
mul
xadd
scas
xor
and
cld
lods
mov
in
cmp
mov
cld
shlb
jmp
mov
test
cmp
xchg
into
int3
push
cltd
push
cmp
mov
and
pop
mov
push
sub
ja
test
mov
imul
insl
adc
pop
dec
pop
or
mov
mov
pop
testb
pop
aad
pop
and
stos
mov
mov
fdivs
das
cmp
inc
adc
lods
pushf
pop
mov
lock
or
mov
mov
and
aad
std
xor
ss
jno
dec
pop
lods
pop
cmp
or
lods
xbegin
push
mov
mov
nop
or
pop
pop
adc
insb
or
and
ds
sub
push
xor
repz
lret
add
cli
push
scas
inc
mov
inc
xor
stos
aad
loop
mov
fsub
mov
and
adc
cmpsl
add
pop
sbb
idivb
mov
mov
es
and
js
pop
stos
imull
or
int3
out
fcoml
inc
rcll
mov
push
daa
ja
fsts
inc
mov
sub
and
fwait
mov
loop
pop
dec
xor
int
nop
out
sbbb
test
jns
in
xchg
aad
int
xchg
fwait
and
jo
dec
fiadds
movsl
xlat
out
cmc
fwait
and
xor
addl
or
push
sub
pushf
imul
daa
sarb
cli
test
gs
insb
dec
push
andl
in
and
int3
mov
pop
ret
push
test
xor
jno
inc
lret
xchg
and
sbb
in
into
mov
adc
pusha
daa
inc
cmovo
mov
push
in
mov
jp
mov
sub
or
pop
lea
sbb
add
popa
test
adc
push
jne
xor
add
jb
add
mov
popf
mov
cld
adc
mov
pop
jmp
sub
and
and
jo
pop
jae
stos
and
cmp
test
push
hlt
xchg
jo
stos
dec
fadd
push
rolb
leave
dec
jnp
or
lods
mov
lret
ljmp
mov
cli
popf
cmp
in
jns
out
insl
mov
call
negb
or
cmp
repnz
mulb
inc
pop
lret
mov
cmp
push
test
and
mov
cld
aam
into
roll
xor
sbb
stos
loop
sbb
push
mov
adc
mov
lahf
aam
jnp
mov
pushf
mov
pop
add
lds
mov
xchg
xor
or
lcall
jns
cmp
out
and
sub
ret
mov
mov
dec
in
mov
jb
ss
sub
test
in
pop
cmpsl
into
lods
mov
or
test
rcrl
insb
mov
lret
fwait
jb
add
mov
rol
mov
rolb
dec
outsb
jae
js
push
dec
xchg
in
fmul
mov
lret
push
dec
jno
pusha
pusha
into
adc
push
lods
cmp
inc
je
add
shr
roll
in
gs
in
adc
push
push
pop
xor
iret
fldl
jl
pop
repz
or
xchg
stc
mov
sub
pop
inc
mov
jno
or
in
arpl
iret
icebp
sbb
jmp
jle
add
or
ljmp
pop
mov
xor
out
popa
lahf
and
or
mov
cmpsb
add
fidivl
test
mov
cld
xor
lret
ljmp
xchg
ds
jle
lods
out
jne
cmp
fmul
dec
lret
mov
hlt
adc
inc
lds
cmp
push
jns
mov
push
rol
push
bound
test
cmp
adc
xor
sub
dec
push
mov
out
xchg
sbb
lea
lea
rcr
mov
pop
sub
repz
cs
fstpl
call
mov
clc
ret
dec
sub
roll
loope
add
xchg
push
push
int
test
stc
cmpsb
dec
jns
std
jo
dec
std
lods
jp
adc
jge
les
push
sub
enter
rolb
adc
xchg
xor
aaa
loope
push
pop
add
inc
sbb
xor
fs
int
adc
pop
insb
cmc
xor
mov
pushl
fcomps
add
imul
jecxz
out
popa
cmp
out
cmpsb
scas
jns
lods
or
xchg
ljmp
dec
mov
and
inc
cld
scas
insl
mov
mov
mov
dec
jno
clc
jo
test
sbb
lahf
inc
daa
fildll
mov
jb
outsl
stos
pusha
push
lock
push
into
fs
jne
rol
dec
jge
add
pop
bswap
cmp
movsl
outsb
sbb
jae
xchg
gs
cmpsb
mov
fldz
mov
jge
dec
pop
jae
xchg
ljmp
pushf
push
mov
fdivl
jae
and
ret
ljmp
gs
adc
scas
mov
cmp
outsl
mov
fisubrl
inc
je
test
xchg
mov
notb
outsb
and
ds
lods
popf
das
sub
in
dec
pop
shr
imul
cmp
inc
stc
and
inc
mov
mov
mov
popa
sti
inc
fisubrs
sub
lods
ret
scas
ret
mov
push
push
sbb
lods
push
lods
cmc
adc
cmp
sub
arpl
fadds
xor
outsl
xchg
icebp
dec
lds
xor
mov
je
scas
sbb
dec
xor
decb
cmp
jg
adc
jnp
mov
fsubrs
jno
push
insb
pop
xor
and
dec
and
add
adc
out
mov
aaa
out
xchg
xchg
xor
daa
jle
loopne
sub
dec
xchg
inc
add
push
outsb
fadds
dec
mov
xorb
je
pop
sahf
clc
loop
cwtl
mov
in
mov
lds
orl
or
xor
xor
nop
xchg
cmpsl
in
jle
sub
inc
xor
sub
jae
movsl
shlb
mov
scas
inc
cmpsb
nop
pop
xchg
icebp
mov
cld
mov
ja
test
movsl
call
mov
dec
jge
gs
sub
gs
or
mov
inc
mov
jp
xchg
cmc
xchg
xchg
push
add
mov
je,pn
mov
ret
lods
pop
loopne
cmp
dec
jb
cli
ret
mov
call
inc
cwtl
cs
gs
int
dec
int
jo
lcall
pusha
jge
bound
cwtl
lods
shl
adc
adc
jns
mov
outsb
mov
aas
pop
lcall
xbegin
dec
inc
inc
sarb
rcrb
iret
mov
mov
int
mov
jno
mov
push
adc
sbb
push
out
inc
xor
add
ret
or
cmpsb
cli
sbb
adc
ret
cmc
bound
jecxz
push
mov
mov
mov
popa
or
push
shll
iret
dec
popa
add
cmp
add
jp
mov
push
je
insl
das
cmp
or
add
dec
jle
js
pop
mov
stos
inc
outsl
das
sarl
and
in
rcll
pop
xor
mov
clc
leave
jg
dec
xchg
inc
ficoms
outsl
clc
call
lock
lret
jb
fmul
cmp
pop
mov
mov
shlb
and
popl
dec
popf
int
xchg
pop
sub
ja
ljmp
jne
leave
jo
xchg
cs
lds
xor
repnz
sub
adc
repz
loopne
test
inc
add
leave
mov
pop
test
xchg
insl
hlt
xchg
sar
loope
rorl
fildl
jo
mov
fwait
adc
cli
movsl
sbb
push
nop
cmp
xor
jo
stc
movsb
add
sahf
dec
pop
sbb
andl
mov
sbb
shll
and
xorl
sbb
mov
imul
pop
je
push
scas
mov
lcall
sbbl
mov
push
push
imul
js
jge
add
stos
adc
hlt
inc
mov
adc
and
rorb
push
out
test
push
cmpsl
addb
cmp
fcomip
jae
xlat
push
jbe
mov
in
rolb
int3
cmc
repnz
dec
imul
mov
or
mov
and
ss
xchg
adc
xor
jae
xchg
inc
pushf
ret
and
inc
mov
test
outsb
cmp
dec
stc
out
popf
outsb
lret
push
push
cmpsl
movl
and
call
popa
cs
int3
fnsave
push
adcl
test
or
or
cmp
mov
xchg
aaa
pop
in
stos
pop
pop
xor
adc
ljmp
pushf
pop
or
outsl
push
lahf
mov
xor
pop
mov
rorl
sub
cwtl
mov
ja
jge
xchg
fdivl
ds
xor
das
mov
popf
out
test
fs
repnz
cmp
in
pushf
mov
jg
das
mov
in
add
pop
std
jecxz
shrl
fs
insl
mov
lock
mov
pop
push
es
xchg
and
mov
sub
sub
or
push
sub
jbe
lcall
arpl
mov
xchg
adc
push
push
inc
sti
sub
xor
jle
jns
into
es
adc
sti
fists
dec
xchg
ljmp
ret
and
fisubrl
mov
add
fldcw
popa
dec
cmp
dec
xor
lcall
xchg
mov
ss
inc
mov
fsubl
xor
mov
pushf
mov
mov
and
std
loopne
jnp
pushf
push
jle
jecxz
lcall
cmp
add
jp
jg
loopne
jge
cld
fwait
inc
add
xchg
xchg
mov
andb
cmp
and
adc
shlb
sub
xchg
sbb
sarl
outsl
xor
frstor
pop
inc
stos
cmc
cmp
movsb
popf
popa
xor
jmp
sahf
xor
add
stc
bound
dec
cmp
inc
ja
outsb
add
push
xor
push
fstps
xor
dec
out
lahf
ret
xchg
pop
hlt
ret
fstpl
pop
dec
pop
xor
pop
cwtl
mov
inc
jmp
popa
add
adc
add
test
jp
add
dec
jecxz
add
dec
enter
add
and
inc
int3
add
mov
scas
nop
mov
mov
dec
sub
add
sahf
adc
rcrb
js
jae
pop
aam
int
inc
dec
jns
cmpsl
mov
jbe
fs
lret
mov
cmp
mov
push
nop
out
test
jle
jmp
adc
mov
xchg
push
inc
subl
sbbb
out
sbb
push
imul
push
lods
sbb
ret
inc
repz
ret
push
pop
pop
ret
jne
and
sbb
mov
in
pop
cs
call
mov
push
mov
jne
mov
mov
mov
inc
cld
inc
lahf
xor
inc
pop
lds
jno
adc
stos
jns
jmp
data16
incl
dec
xchg
adc
es
out
dec
jae
cmp
push
pop
push
movsb
in
lock
mov
and
add
or
mov
lods
test
add
pop
or
je
outsb
pop
clc
xlat
sti
popf
mull
sbb
call
mov
daa
jnp
ljmp
dec
fmuls
es
leave
dec
sub
scas
or
cmc
flds
sbb
xchg
enter
scas
adcb
clc
mov
lock
xchg
popf
nop
pushf
inc
push
scas
inc
mov
ret
shlb
jge
sahf
push
mov
in
mov
pop
fsubrl
pop
xor
popfw
cmp
inc
std
cmp
aad
nop
mov
cld
inc
ror
pop
dec
xchg
dec
pop
mov
pop
cmp
aam
je
je
pop
std
sub
adc
adc
mov
je
popa
lret
xlat
inc
je
push
jb
mov
dec
sbb
jno
jecxz
sub
push
fisttpll
sbbl
fwait
pop
inc
ret
push
dec
pop
mov
adc
sbb
jp
aaa
repnz
dec
xchg
outsb
imul
bound
mov
ficoml
add
dec
flds
sub
sbb
test
mov
xchg
push
lahf
ljmp
popa
inc
jecxz
sub
xor
andl
mov
mov
rol
mov
cmp
mov
pushl
sub
decb
inc
icebp
incl
shr
ret
push
popa
dec
idiv
sub
movntq
dec
xchg
inc
dec
lcall
sbb
add
loop
and
xor
or
cld
push
cmpb
sbbl
test
xlat
pop
xor
and
imul
jmp
jo
cwtl
ds
lahf
popf
sub
sbb
cmp
popf
pop
fdivs
and
add
xorw
or
sbb
jae
ss
push
clc
insb
pop
xchg
mov
adc
pusha
sbb
xor
pop
adc
mov
aaa
fdivrl
fstl
sarb
inc
pop
jle
inc
dec
xchg
div
jnp
and
in
pop
dec
inc
out
inc
ret
pop
add
rclb
stc
pop
xchg
in
and
fimull
jle
mov
sbb
xor
scas
cmc
out
mov
pushf
mov
mov
lods
mov
jno
pop
aaa
fistpll
incl
mov
bound
dec
leave
inc
mov
mov
pop
or
loopne
and
scas
mov
dec
sub
xchg
aaa
fldenv
outsb
xchg
sub
mov
or
enter
outsl
mov
enter
mov
xchg
and
insb
call
fcompl
pop
inc
jne
add
and
push
jmp
cmp
es
cmpl
arpl
xchg
push
mov
mov
faddp
mov
testl
mov
sbb
negb
in
dec
aaa
xor
mov
divl
std
es
lcall
mov
or
popa
dec
arpl
out
dec
push
cwtl
hlt
sub
lea
scas
inc
inc
stc
lahf
test
add
outsl
xlat
cmp
sbb
dec
fbstp
fsubl
fiaddl
flds
xor
leave
pushf
jl
dec
fidivrs
add
shll
std
mov
arpl
leave
adc
fimuls
dec
add
push
mov
int
frstor
lret
loopne
enter
lahf
fcoml
push
icebp
push
jo
je
xor
mov
stos
xorb
fldt
mov
jmp
add
enter
aas
out
sbb
rorb
ja
stc
mov
cmp
test
frstor
mov
push
ret
sbb
push
sbb
jl
xor
fcompl
mov
mov
add
sub
ss
ret
inc
popf
leave
sti
lods
orb
psubb
movsb
or
inc
push
or
jno
xchg
push
push
daa
cmc
daa
roll
faddl
sub
stos
sbb
sarl
or
xchg
je
popa
cmpsl
popf
xchg
or
movsl
sub
xor
into
jecxz
and
inc
test
pusha
repz
sti
insb
sarl
pop
aas
test
addr16
dec
or
jle,pn
cmp
cmpsl
pop
and
xor
stos
xor
aad
lods
mov
add
loop
push
mov
daa
xchg
jne
or
xor
outsl
sub
outsb
xor
test
sub
mov
ds
sbb
aad
cmc
adc
pop
out
insl
jmp
sbb
sbb
filds
outsb
and
push
xchg
adc
scas
adc
test
lret
out
aaa
mov
sub
jae
inc
arpl
in
mov
test
int
inc
mov
sub
fdivr
dec
divl
rolb
inc
dec
mov
stc
mov
add
enter
nop
shr
add
lret
push
loopne
and
sti
jnp
sub
cmpsb
lea
xchg
daa
xor
cli
pop
or
leave
icebp
mov
inc
nop
test
inc
mov
icebp
insb
mov
cmp
push
mov
adcl
or
pop
sub
mov
mov
jae
dec
pop
jnp
aas
jmp
inc
add
cld
or
lock
xchg
pop
push
dec
push
cltd
mov
rolb
pop
aas
outsb
pop
lret
aaa
jge
lock
adc
mov
pop
mov
ret
push
pop
aaa
out
xchg
mov
cmp
xchg
in
rcl
sbb
cmp
imul
lcall
das
pop
repnz
cmp
cmc
add
shr
dec
sbb
loop
xchg
jno
mov
addr16
cmc
sub
addl
mov
fimuls
cld
addr16
stc
popa
mov
dec
dec
popf
or
jmp
jle
mov
fwait
mov
sub
ret
jae
pop
decb
out
mov
cmp
int
inc
adcb
fistpl
cmp
xchg
orl
fs
sahf
and
test
dec
push
rorb
in
cmpsb
outsb
addr16
fisubrl
nop
dec
adc
divl
adcb
ja
sub
mov
adc
pushf
mov
push
or
pop
hlt
and
and
mov
shl
jmp
test
inc
push
notl
in
loope
cmp
push
sti
aam
insl
fsts
and
inc
loope
inc
xor
cmpsl
mov
mov
mov
test
in
push
mov
std
shll
adc
mov
add
inc
ds
push
iret
jbe
xchg
insl
aad
lretw
adcb
sub
popa
cltd
ds
jmp
jb
mov
pusha
arpl
mov
pop
out
mov
int
mov
adc
pop
add
dec
movsl
out
cld
in
jae
adc
gs
xchg
inc
lcall
cli
and
cs
jecxz
imul
fiadds
in
aam
out
out
inc
or
das
repz
test
js
push
sub
push
jb
pop
pop
push
sahf
jnp
sti
sahf
insl
incl
pop
sub
fistpl
sub
lods
adc
jle
dec
imul
mov
push
push
jns
es
xchg
rolb
fs
daa
leave
cmp
lcall
rcrb
shl
loopne
pop
lcall
test
push
xchg
xlat
lcall
sbb
jmp
enter
imul
lds
inc
push
insb
jno
insb
out
sub
push
jg
push
test
mov
sarb
aaa
daa
push
pop
in
push
in
push
mov
jg
mov
cmc
aam
and
in
mov
pop
mov
movsb
jle
out
push
sbb
sahf
lcall
sub
cmp
fidivrl
push
or
mov
and
shlb
sub
mov
leave
cmp
inc
jl
fildll
mov
jns
dec
cli
mov
and
xchg
mov
stos
leave
mov
je
mov
jb
xchg
mov
outsl
lahf
inc
pop
mov
loopne
and
repnz
in
je
jecxz
insl
inc
aad
adc
mov
cmc
xchg
lds
push
aam
lods
call
fnsave
imul
mov
hlt
sbb
cwtl
ljmp
lea
pop
aaa
jmp
rcr
inc
push
mov
adc
jmp
cwtl
cltd
rorb
les
mov
loopne
cltd
in
xchg
lret
aam
jge
adc
dec
jo
jmp
inc
pop
push
adc
push
mov
jae
aas
cli
sbb
sbb
xchg
ss
xchg
stos
and
fidivl
mov
cld
fisttps
push
mov
mov
ljmp
mov
mov
enter
dec
enter
in
dec
mov
jb
arpl
scas
pop
insl
addr16
out
and
cmp
rorb
out
jne
cld
mull
loop
stc
stc
xor
std
scas
sahf
mov
add
add
call
mov
lods
sti
mov
loope
sub
or
lods
ljmp
cmpsb
gs
fst
push
clc
mov
mov
icebp
or
lret
sub
mov
push
and
sbb
mov
push
aad
push
mov
adc
xor
cmc
shl
jecxz
push
and
push
cmc
sbbb
ja
cwtl
mov
xchg
dec
adc
arpl
jbe
scas
push
push
fs
push
cld
popf
scas
and
mull
adc
out
loope
adc
test
in
repnz
data16
in
pop
mulb
shlb
cmp
mov
sbb
inc
je
adc
insl
ret
push
sub
lods
nop
jecxz
xor
push
mov
jno
mov
pop
or
adc
adc
fdivr
push
orb
xor
dec
fwait
aam
ja
lods
xchg
jecxz
loope
or
rorl
ret
enter
mov
mov
pop
mov
cmp
adcb
inc
sbb
mov
imul
aaa
xchg
cli
mov
test
xchg
jg
shrl
adc
shlb
fcomp
cmp
xor
mov
loop
and
pop
dec
shl
loopne
add
dec
dec
adc
pop
dec
and
mov
rsm
inc
or
push
jo
imul
dec
xlat
lcall
loop
push
jecxz
out
pop
or
jnp
pop
mov
xchg
xchg
sbb
gs
lar
add
mov
pop
lcall
sub
popa
pop
out
jnp
inc
fdiv
push
inc
outsb
pop
dec
or
jb
je
daa
sbb
lret
jge
jb
and
jbe
test
adc
inc
test
xor
jo
sbb
dec
mov
jl
movsl
icebp
dec
or
cmp
inc
mov
cmp
push
filds
cmp
and
ret
pop
cmp
and
add
mov
ja
sub
lods
dec
lahf
adc
and
lock
xchg
jp,pt
cmp
add
dec
sbb
stc
cmpsb
daa
pop
les
sub
jnp
sbb
or
add
dec
stc
mov
jl
in
push
jnp
das
in
inc
or
sbb
popw
jnp,pt
sahf
pop
shlb
lret
sarb
cmc
adc
or
or
jle
paddb
xchg
xchg
shll
mov
dec
xchg
xor
inc
mov
fstpt
jge
adc
mov
fs
adc
xchg
or
addl
sub
cmpsl
test
pop
add
stos
dec
inc
sti
pop
or
rcrb
mov
pop
and
loope
mov
nop
scas
mov
mov
das
push
jae
jns
lea
or
test
dec
lock
fnstenv
call
movsb
fs
sub
ljmp
or
cmp
inc
cs
aam
cmpsb
push
jae
mov
adc
mulb
xor
repz
pop
in
mov
out
xchg
dec
cs
mov
rcrb
movb
popf
dec
xor
xchg
scas
fdivrl
sub
stc
es
lds
lods
test
adc
orb
add
rclb
dec
pop
inc
add
inc
dec
and
or
pop
test
adc
imul
adc
ficoml
jb
xchg
test
adc
sbb
std
clc
scas
bound
sbb
out
add
rclb
dec
mov
fidivl
int3
mov
sahf
test
push
cmpl
jmp
das
xor
lds
pop
mulb
and
push
enter
jge
test
int
inc
shll
pop
nop
mov
out
xchg
decl
stos
mov
aas
or
sti
mov
pop
ja
mov
std
out
pop
int3
je
test
pusha
ret
aaa
dec
sbb
dec
inc
push
fstl
aad
push
or
out
xchg
cli
fistl
xor
and
xchg
jbe
mov
sub
das
push
cld
out
loope
stos
xor
pop
lds
daa
and
or
data16
lods
fmuls
xchg
push
push
add
xchg
adc
insb
inc
das
addb
repz
outsb
cmp
stc
lds
dec
nop
in
mov
push
xchg
je
ds
add
push
hlt
shl
int
push
push
outsl
xor
int3
inc
sti
int3
jbe
mov
mov
mov
inc
xchg
or
out
mov
movsl
mov
xchg
jno
iret
add
push
push
inc
test
out
push
sub
push
or
dec
out
jmp
loope
xor
pop
ja
loopne
sbb
lods
mov
insb
xchg
fiadds
mov
pop
movsb
clc
pop
mov
push
insl
test
daa
mov
cs
pusha
sub
mov
mov
inc
push
lods
ret
dec
xchg
mov
xor
mov
or
stos
ret
adc
or
stc
cld
stc
lahf
mov
sub
arpl
sbb
adc
xor
mov
pop
clc
xor
lods
add
or
notb
mov
cmp
jnp
fucom
jno,pt
cmpb
push
ja
jle
mov
rcl
ret
pop
fldl
sbb
mov
push
outsl
dec
add
mov
lret
insl
jb
cwtl
lds
aas
test
cmp
mov
push
pusha
mov
dec
dec
fstpt
fisttpll
mov
push
push
xor
leave
sbb
int3
mov
lahf
mov
pop
jb
out
xor
mov
pop
push
loope
push
dec
dec
sub
mov
sbb
inc
xor
je
pushf
push
fs
mov
outsl
subb
movsb
pop
pop
fimull
iret
fsubs
loope
mov
pop
mov
test
fbld
je
ljmp
jae
jae
dec
sahf
push
stos
es
clc
push
jb
jae
mov
shr
push
or
push
ficompl
enter
daa
mov
adc
dec
in
out
aaa
insl
jmp
adcl
shlb
insl
out
add
inc
out
cmpsb
out
push
mov
mov
or
test
arpl
jb
xchg
jns
iret
add
ljmp
daa
std
sarl
rep
jne
xlat
sub
lahf
and
xchg
out
add
mov
xor
add
clc
push
pop
test
xor
add
sbb
enter
aam
xchg
sbb
add
divb
mov
xchg
or
sbb
insl
jno
pop
adc
xchg
mov
add
pop
stos
add
jecxz
std
jbe
popf
mov
fwait
mov
jbe
leave
jp
xor
adc
pop
mov
push
adc
xchg
jno
push
or
mov
mov
and
inc
loope
rclb
and
mov
pop
sbb
addr16
js
cmp
enter
push
mov
loopne
scas
repz
cmp
addr16
adc
xor
xchg
cmc
sbb
inc
inc
dec
adc
push
push
mov
xchg
add
pop
and
aaa
rclb
sub
sbb
xor
mov
dec
notb
inc
cmpsb
leave
int
and
imul
inc
push
cmp
mov
cmc
adc
jo
decl
cmp
push
add
adc
out
sub
daa
popa
and
add
pop
shlb
inc
lds
int3
jmp
xorb
ja
lahf
insb
aas
push
rcrb
sbb
xor
jl
cmp
xor
pop
jle
out
test
fwait
dec
icebp
sbb
test
mov
shll
frstor
cmovle
mov
inc
xor
push
aaa
push
popa
jmp
sahf
or
cld
dec
pop
lahf
xor
hlt
imul
bound
mov
sub
xchg
xchg
int3
add
jle
ljmp
xchg
jecxz
lret
fcmovne
sub
outsl
mov
lods
mov
lods
inc
shlb
dec
pusha
fcomps
xchg
sub
jp
mov
mov
scas
das
pusha
add
jbe
lcall
mov
mov
outsl
fcoms
xchg
aam
out
xlat
mov
xchg
and
lock
or
xchg
sbb
push
and
or
xchg
or
iret
sahf
sti
push
push
xor
inc
sub
movsb
adc
ret
daa
mov
xor
test
pusha
js
add
push
cmpl
xchg
push
and
inc
xchg
mov
xchg
lods
sbb
mov
or
inc
fimuls
inc
sahf
jbe
rclb
roll
or
pop
dec
roll
popf
mov
lock
cmpsl
jne
push
adc
xchg
ljmp
push
push
and
mov
ja
and
cmpb
or
jl
imulb
inc
adc
sub
mov
xor
ljmp
dec
movsl
mov
jge
cmp
ret
push
repz
mov
jno
popa
out
push
enter
js
js
dec
aaa
mov
mov
push
jle
iret
pop
enter
cmp
pop
mov
stos
call
cmp
jl
scas
or
inc
or
scas
push
adc
mov
mov
dec
or
push
lods
ss
adcb
insb
inc
int3
cs
ljmp
cmpsl
mov
pop
stc
insl
icebp
or
xor
push
aaa
in
push
adc
fsubrl
cmp
add
sbb
cmpsl
cs
outsl
jnp
pop
push
fadd
iret
lods
dec
pop
sahf
dec
jo
jo
insb
push
cli
psubusb
mov
outsl
in
mov
mov
sbb
adc
outsl
mov
add
aaa
shlb
push
popa
out
push
jo
andl
xor
xchg
push
mov
cmc
xchg
jp
scas
int3
sub
mov
in
cmpsb
push
out
dec
xlat
push
ret
roll
mov
psubsw
adc
fnsave
gs
mov
adc
jo
dec
inc
mov
outsb
adc
cs
lcall
pop
or
sub
mov
fldenv
and
add
mov
clc
cwtl
lea
xchg
les
dec
sarb
mov
xchg
in
movsl
mov
dec
or
xlat
dec
xor
imul
fdivr
ja
fmul
rorb
or
das
xor
fstl
inc
inc
xor
jnp
cs
mov
subb
ja
add
orb
lds
lods
sbb
inc
cmp
test
popf
jo
lock
dec
shlb
jl
mov
stos
test
jbe
popf
mov
pop
scas
xchg
gs
outsl
jle
or
cltd
fistpl
dec
or
cmp
jl
out
xor
int
repz
cmpsl
mov
out
lds
jbe
pop
lcall
or
xchg
ret
sbb
movsb
sub
imul
add
sub
mov
pop
into
lcall
xorl
loop
mov
xor
push
xchg
sti
cmp
pop
pop
ds
lea
and
outsl
out
dec
nop
insl
inc
pop
fisubs
mov
mull
add
add
sbb
fwait
stos
mov
inc
fcmovbe
mov
cltd
push
dec
clc
popa
scas
subb
dec
movsb
jne
mov
cmc
push
add
mov
jns
shll
mov
pop
mov
negl
scas
or
or
shlb
dec
lcall
lods
xchg
shl
sub
push
leave
das
add
cmp
inc
sti
cwtl
addl
xchg
mov
inc
xchg
or
sub
adc
sti
add
repz
js
mov
lock
cltd
pop
ja
ja
rorb
xor
fstpl
mov
and
outsb
and
ds
pop
sub
push
sub
addr16
jbe
mov
inc
test
pushf
sub
xor
lock
jp
jp
xor
add
pop
dec
xchg
adc
pop
jmp
sbb
xor
mov
mov
adc
mov
sbb
pop
pop
push
dec
subb
ja
xchg
push
popa
sbb
int3
xor
pushf
loopne
mov
pop
cmpsl
fs
add
mov
fwait
cmp
mov
dec
into
xor
jo
sub
loop
in
dec
and
or
fldcw
push
sbb
je
push
pop
inc
out
push
clc
pop
dec
mov
out
mov
push
movsb
sub
lea
lret
or
xchg
sarl
sarl
xchg
pushf
xrelease
bound
jl
lock
nop
jnp
addr16
xor
ja
ss
movl
pop
cmp
mov
jo
scas
or
adc
test
inc
clc
jbe
ror
sbb
sbb
out
push
jecxz
add
dec
inc
mov
mov
repz
test
adc
adc
xchg
jmp
lock
icebp
mov
repz
pop
sahf
les
call
dec
sub
cmp
xor
ljmp
movsl
lock
lock
cs
sbb
popl
rol
pop
out
ret
scas
fsubr
test
ret
adc
push
test
and
push
ja
xor
push
lods
and
push
xor
cld
push
dec
enter
out
mov
ret
pop
fldcw
out
gs
mov
inc
loope
gs
js
inc
or
in
adc
fildll
mov
fdiv
xacquire
and
mov
xor
adc
jnp
jbe
push
inc
inc
and
out
push
xor
adc
les
sbb
cs
mov
mov
mov
jle
add
dec
inc
sahf
sub
cmp
in
jp
loopne
popf
sahf
pop
call
xchg
sahf
imulb
add
leave
mov
les
orl
mov
sbb
lea
int3
jge
mov
andb
xor
add
aam
cmpsl
mov
fistps
mov
mov
idivl
inc
jge
push
out
leave
js
mov
or
test
aam
stc
mov
mov
insl
xor
push
jmp
test
pop
mov
nop
lods
and
and
mov
daa
aad
pop
scas
and
insb
xor
cmp
gs
adc
ss
jle
add
sub
loop
xor
inc
mov
jmp
stos
or
clc
pop
add
fldenv
ficoms
pop
pop
loope
mov
or
adc
movsb
pop
ret
mov
mov
jb
sbb
fimull
shl
jle
call
imul
leave
insl
push
add
sub
fmull
xor
shl
imul
mov
adc
fdivl
xor
push
pop
ret
sbb
btr
mov
fscale
and
mov
adc
mov
mov
mov
pop
pop
popf
insb
mov
dec
ds
inc
pop
jo
push
pop
pop
pop
enter
in
lcall
adc
pop
fwait
sbb
cmp
or
in
int
lea
cwtl
pop
sub
jne
dec
mov
adc
mov
aad
cltd
mov
aad
mov
dec
cmp
jle
aas
cli
cld
pushf
sarb
fcmovnb
cwtl
icebp
push
andl
cltd
push
repnz
lret
mov
and
in
or
out
inc
mov
hlt
pop
insb
sti
out
xchg
sbb
xchg
adc
rcrb
dec
ljmp
cld
dec
xor
push
popa
in
sbb
iret
inc
cli
out
fwait
cmpsb
push
adcb
imul
pushf
rcll
xchg
jae,pt
enter
xchg
std
cli
subl
adcb
rcr
sbb
subb
cmc
out
adc
jge
push
add
xor
out
loope
lahf
stc
iret
hlt
jbe
addl
mov
xchg
aam
xor
add
inc
or
add
mov
divb
call
ss
mov
es
les
jge
lods
lock
outsb
stc
aam
fidivrs
mov
xor
pop
leave
inc
add
ror
dec
out
push
frstor
sahf
xor
dec
sub
aas
mov
push
test
mov
inc
push
mov
out
sub
pop
pop
jge
add
sahf
jp
push
addl
inc
mov
adc
pop
loope
stos
mov
je
push
or
test
enter
gs
inc
scas
sub
pop
xchg
mov
out
lods
push
lahf
and
stc
lahf
sti
mov
mov
sub
xchg
fldenv
loop
xor
jnp
lea
dec
addr16
sbb
lds
insb
pop
mov
xlat
pop
jo
add
cmp
dec
outsb
inc
and
sbb
inc
pusha
iret
loop
jnp
xchg
pop
subl
out
jns
enter
lods
jno
les
clc
nop
pop
mov
out
mov
call
jnp
add
sahf
push
xor
imul
lahf
xor
mov
das
adc
popa
fists
pop
mov
repnz
movsl
cmp
lea
subb
inc
mov
adc
leave
jp
cmpsl
out
arpl
into
icebp
fdivs
dec
ds
jnp
xchg
pop
adc
push
fdivrs
pop
sbb
out
repz
stos
jg
cltd
sub
aaa
imul
xorl
dec
int3
lcall
cmc
call
mov
add
cs
xchg
dec
dec
jl
and
shr
fldt
push
call
pop
xchg
into
pop
and
xchg
mov
aam
pop
sub
test
or
xchg
mulb
sbb
divl
dec
je
lods
pusha
imul
leave
ficoms
jne
pop
stos
out
fwait
xor
or
in
loope
and
push
xchg
or
jp
pop
inc
jl
mov
sub
push
cmpsb
outsb
ret
jbe
ret
das
enter
repnz
xchg
loopne
push
mov
xchg
push
adc
mull
mov
dec
add
popf
xor
stos
push
pop
jle
jle
xchg
arpl
ds
out
add
ljmp
loope
push
sub
mov
orb
stos
clc
in
add
sub
and
clc
and
int
dec
dec
sti
jle
dec
xchg
jl
inc
int3
dec
mov
mov
cmpsb
rcl
push
das
push
xor
sub
jnp
pop
mov
enter
mov
cmovge
jnp
loopne
test
pop
dec
popl
call
jl
nop
dec
inc
shlb
lahf
aam
outsb
stos
cltd
pop
and
jle
and
stc
outsb
std
pop
addr16
mov
mov
dec
test
aaa
cli
pop
cmp
adc
arpl
xor
xor
repz
lods
pop
sbb
jp
inc
pminsw
movsb
icebp
rcrl
scas
sbb
ja
push
popa
mov
pop
popa
push
mov
clc
sub
sbb
cmp
xchg
and
arpl
push
popa
adc
cmp
jmp
cmp
xor
outsl
subl
ds
or
popf
xlat
adc
inc
jbe
repnz
or
insb
xchg
cmp
shrl
or
push
sub
out
sub
leave
xchg
stos
fbld
movhps
negl
xor
inc
jbe
mov
xchg
cld
mov
sbb
lods
les
jmp
outsb
jge
cli
add
shll
das
dec
jno
or
mov
hlt
lret
mov
push
test
ds
xchg
loop
xchg
add
mov
insl
fisttpll
nop
inc
cmp
pop
jo
push
imulb
xor
mov
out
dec
or
cmc
cmp
sub
push
mov
cmpsb
iret
repnz
and
popf
sti
adc
jg
dec
mov
or
mov
pop
add
dec
pop
cltd
testb
ss
jnp
lock
outsl
in
mov
pop
mov
cmc
fistpl
mov
adc
add
xchg
leave
mov
rcrl
pusha
in
cmpsb
cmc
cltd
jl
jbe
inc
push
xor
or
pop
inc
sbb
xchg
adc
stos
fcomps
and
int3
jae
in
sbb
inc
mov
or
daa
stos
add
jo,pt
loop
adc
sbb
popf
movups
jp
fidivrl
xchg
add
scas
xor
nop
xchg
and
cs
in
popa
and
ret
out
js
enter
insl
iret
into
js
lahf
sub
movsl
inc
mov
fistpll
dec
inc
push
pop
adc
sub
adc
push
jl
lds
push
dec
aad
sbb
repz
inc
mov
cmp
fldt
aas
sub
loope
pop
jbe
jge
lods
jle
in
hlt
pop
jae
cmp
outsl
and
push
push
shrb
push
ljmp
repnz
cli
jnp
fnsave
into
cmp
in
push
out
in
push
and
xor
cmp
dec
xor
ret
cmp
jb
repnz
fdivp
jns
stos
ss
pop
fists
mov
dec
jg
sarl
js
lahf
icebp
sub
shl
push
mov
mov
mov
jno
xchg
sub
lds
outsb
xchg
xor
dec
cld
insb
test
js
pop
adcb
mov
or
jbe
popf
sti
push
ret
xchg
ss
clc
aad
lods
and
scas
cld
out
sub
jb
filds
bound
xchg
add
pop
out
mov
inc
pop
call
dec
inc
pop
dec
mov
or
sbb
mov
adc
jecxz
jnp
dec
adc
aaa
imul
cltd
xor
pop
leave
mov
push
adc
jae
cmp
cs
scas
out
int
cli
jo
push
inc
movsb
inc
sahf
sbb
cmc
es
mov
sub
cmp
rcrb
jl
sbb
test
into
out
pop
mov
orb
subb
pop
cwtl
fistpll
push
repnz
jno
add
inc
cmp
cltd
out
inc
icebp
jmp
lret
sub
sbb
adcb
rcl
cmp
not
xchg
mov
mov
ret
push
dec
sub
or
push
jne
hlt
xlat
mov
xchg
fmul
pop
add
int
pop
mov
std
sahf
jp
xor
lods
fimull
xchg
xor
stc
push
push
sub
test
sbb
xorl
xor
xor
lahf
or
mov
adc
mov
jg
push
fiaddl
lea
fs
outsb
inc
adc
test
jbe
mov
xchg
add
dec
inc
gs
xor
sub
in
aas
cld
icebp
add
fdivrs
jl
xchg
stos
repz
adc
jns
loopne
and
xchg
lret
mov
imul
mov
das
xchg
xor
mov
stos
mov
insb
mov
in
dec
aas
mov
lcall
cmpsb
ja
mov
outsl
xor
adc
mov
ret
mov
movsb
stos
cmp
fnstsw
sub
xchg
xchg
imul
ss
scas
cld
dec
cs
adc
fstl
mov
in
mov
sub
idivl
les
imul
adc
inc
sbb
or
adc
push
rcll
mov
fidivl
push
stc
pop
xor
das
dec
sbb
or
inc
call
jmp
xor
test
ja
sub
add
ret
jp
lret
cmpl
fwait
je
popa
loopne
mov
inc
cmp
push
push
jo
jmp
loop
popf
cwtl
sbb
addr16
sbb
dec
vpaddq
mov
clc
mov
enter
mov
dec
xchg
inc
cmpb
fsts
cwtl
mov
dec
jae
adc
inc
mov
mov
jg
imul
hlt
shlb
lds
push
aam
es
pop
mov
mov
scas
xor
movsb
inc
inc
std
pusha
je
shl
xchg
aad
int3
outsb
dec
jmp
jo
aaa
in
mov
arpl
xlat
int
cld
mov
and
mov
inc
out
sub
xchg
fisubl
pop
inc
mov
mov
out
mov
cmp
add
push
add
clc
clc
sub
cld
lret
out
inc
mov
imulb
or
sub
xchg
sub
push
addr16
in
or
pop
stc
or
pushf
sub
arpl
enter
int3
repnz
out
push
std
stos
cltd
popa
jb
adc
in
lock
adc
clc
add
and
in
enter
xchg
push
stos
jb
dec
ud2
adc
aad
repz
dec
push
or
pop
scas
xor
inc
cli
lret
shll
sub
leave
lret
jno
mov
imul
add
mov
xchg
movsl
std
pushf
push
dec
fsubrs
inc
sbb
scas
mov
scas
lods
fnstsw
add
xor
ja
out
icebp
add
test
and
icebp
jne
cli
dec
sbb
pop
aam
jns
or
lahf
stos
lret
push
test
lods
imul
outsb
lods
xor
xchg
and
push
insl
icebp
xchg
ret
mov
inc
sbb
in
nop
jecxz
and
aas
xchg
pop
cmp
leave
inc
inc
jg
inc
mov
xchg
daa
out
pop
jle,pt
out
jecxz
popf
addr16
xor
xchg
hlt
mov
xchg
cmp
cmp
and
mov
stc
decl
hlt
xchg
jae
imul
dec
lcall
adc
jno
and
stos
jl
pop
mov
pop
jecxz
iret
pusha
stos
arpl
fdiv
pop
xor
dec
and
rorb
out
push
rcrb
pop
fnstsw
adc
stc
pop
jne
adc
cltd
push
in
push
shrl
out
shrl
fisttps
jle
loopne
dec
mov
sahf
das
cmpsl
or
sub
mov
test
scas
cmp
rcr
add
hlt
mov
mov
pop
jno
daa
ljmp
loop
adc
or
xchg
and
mov
jp
scas
ljmp
sbb
in
xor
mov
pop
test
int3
xchg
fldt
adc
cmp
mov
xchg
pop
cltd
pusha
mov
and
loop
push
xchg
jns
orl
ror
add
leave
jp
dec
xchg
js
mov
ja
dec
mov
adc
sub
movsl
push
insl
pushl
mov
test
int3
xchg
pop
daa
std
movsl
dec
lahf
mov
les
cmp
jl
mov
mov
pop
sub
inc
sub
sti
aad
lods
lret
jnp
sti
lret
outsl
fsubs
dec
dec
adc
dec
pop
push
push
sbb
sarb
test
aaa
jb
fsubs
adc
push
jbe
jmp
jae
dec
mov
sbb
je
mov
ret
cs
in
cli
sbb
cmp
pop
loop
clc
xor
jns
roll
test
add
mov
cmp
or
mov
imul
adc
push
fnstsw
clc
lret
and
sti
xchg
sbb
push
fnstenv
jle
gs
jecxz
jo
sahf
adc
stos
dec
addl
push
xchg
test
adc
scas
inc
add
mov
add
jge
clc
aad
cmp
divl
jb
ss
xchg
push
bnd
lds
gs
or
fstpl
sub
xchg
pop
fildl
inc
icebp
outsl
or
iret
test
iret
mov
jge
fstpl
add
iret
sbb
sbb
lods
xchg
mov
adc
cs
inc
aas
cwtl
out
ljmp
cmp
xchg
je
pop
movsb
out
mov
lods
inc
pop
adc
icebp
mov
ja
cmp
add
cmp
jle
xor
lret
aam
push
addr16
pop
leave
stos
enter
lods
or
xor
mov
mov
cltd
fcoms
lcall
iret
inc
adc
jo
fadd
pop
cmp
gs
mov
mov
daa
stos
rcll
dec
lods
cmc
cli
idivb
add
or
insl
mov
fwait
sbb
jbe
add
rcrb
std
push
rorl
pop
movsb
push
push
lock
jne
xor
push
and
cmc
ljmp
mov
pop
xor
sbb
pop
sub
add
int3
sbb
fidivrl
pop
mov
adc
mov
cmp
cmp
push
out
jo
sub
mov
mov
push
fdivs
push
mov
out
imul
sbb
cmp
jae
lret
in
cmp
add
les
xor
pop
cmpl
inc
pop
daa
pop
add
sub
lret
bound
add
mov
pop
int3
push
sbb
pop
add
fwait
stc
jl
sbb
xor
or
jae
loopne
adc
mov
popf
and
jmp
lea
popf
insb
sub
jns
inc
shl
dec
pushf
lea
xor
mov
xchg
inc
movsb
outsl
loop
popa
repz
adc
movsb
adc
cmp
mov
xchg
ret
mov
mov
ljmp
dec
test
mov
out
or
cmpsb
sub
pop
adc
aas
data16
add
leave
pop
outsl
cmpsl
push
mov
cs
mov
mov
cmp
fwait
pop
pop
push
loopne
pop
add
add
sbb
movsl
addr16
subl
dec
ret
insl
cmp
xchg
pop
pop
add
cmp
scas
scas
das
aas
jb
sub
hlt
out
xchg
out
lret
pop
mov
push
cmp
jle
dec
lcall
mov
call
xchg
push
push
ret
push
add
jecxz
inc
les
clc
ret
and
xchg
sti
popa
outsb
add
imul
and
xchg
dec
push
into
in
into
jno
insl
ror
sarb
cmp
rcrb
pop
shlb
adc
mov
mov
dec
sbb
lds
cld
cmpsl
imul
fdivs
mov
xchg
mov
pop
outsb
mov
lds
pop
outsl
mov
push
jecxz
sub
test
aam
test
xchg
lods
and
xchg
push
and
push
lret
movsl
daa
imul
dec
sbb
in
out
pop
in
jecxz
mov
lret
add
gs
sub
aam
pop
lret
jns
lods
jmp
xchg
call
rorl
movsb
cmc
aad
dec
cli
xor
cmp
jp
xor
out
and
xlat
inc
leave
loope
pop
je
sub
pop
jbe
inc
popf
repz
push
or
icebp
icebp
out
inc
xchg
outsb
inc
cmp
jae
loop
pop
fmull
xlat
mov
ficomps
mov
das
repz
lret
lcall
push
cmp
stos
jmp
into
jmp
mov
adc
push
or
cmp
xchg
daa
iret
outsl
imul
mov
out
out
push
les
dec
jb
inc
aaa
jb
movsb
int
and
std
lods
in
push
xchg
add
xchg
jb
std
cmpsl
cmpsb
leave
cmpsb
or
mov
out
or
fisubs
push
cmp
pop
clc
xor
adc
icebp
lock
cmp
test
mov
mov
enter
sbb
add
mov
pop
dec
pop
out
fcoms
jp
jne
xor
xor
add
out
mov
out
inc
cmp
loope
jns
xlat
scas
test
ss
jg
ljmp
pop
fs
test
push
inc
jo
adc
mov
fdivrp
and
imul
inc
lods
in
cmp
cmpsb
sbb
add
mov
pop
in
outsb
out
bound
dec
jb
adc
push
push
lock
adc
push
cmp
mov
pop
arpl
sbbb
jle
dec
je
dec
pop
lret
outsl
rcll
mov
repnz
push
cmp
lahf
lret
stos
or
movsl
jno
sti
adc
cmp
or
subl
hlt
sti
adc
mull
pop
adc
in
bound
add
push
ds
mov
sub
test
xor
out
inc
repnz
imul
lret
popf
add
mov
push
adc
add
mov
clc
sub
int3
pop
adc
xchg
sbb
arpl
cmp
push
xlat
jg
inc
call
lods
push
mov
arpl
ljmp
adc
sbb
stos
enter
and
jg
sbb
jmp
jp
loop
mov
cli
cld
pop
pop
cwtl
clc
sub
lea
xchg
dec
ror
and
inc
mov
mov
imul
clc
clc
mov
xor
and
mov
jg
mov
mov
jne
aas
or
das
out
leave
push
and
test
fistpl
xchg
dec
data16
nop
jg
rorb
in
jae
or
and
adc
imul
test
arpl
pop
cmpsb
pop
inc
inc
sub
repnz
sbb
push
jg
sbb
test
xlat
icebp
fsubrs
mov
sub
jns
addb
sub
ds
push
dec
and
sub
dec
sbb
and
mov
jae
lock
mov
je
outsl
and
jb
dec
xor
mov
lret
adc
ljmp
clc
mov
push
sub
lahf
or
cwtl
ja
std
and
cmp
add
imulb
mov
data16
mov
xor
shl
cmp
xor
rclb
sub
cmp
roll
push
xorb
cmp
sub
mov
iret
sub
shlb
cmp
in
data16
mov
and
dec
icebp
dec
sub
call
sbb
mov
js
dec
lret
dec
cltd
outsb
sub
out
lcall
xchg
les
jmp
sbb
dec
rclb
les
jge
xor
adc
cmpsl
enter
xor
jns
arpl
sbbb
xchg
fsubr
push
mov
int3
fcomps
aaa
fdivrs
sahf
mov
and
inc
jecxz
rcrb
jg
insl
mov
mov
cmp
jmp
mov
and
xchg
jmp
inc
push
inc
or
add
hlt
pop
test
cmova
push
mov
lcall
dec
daa
mov
mov
lret
inc
jnp
jae
jae
imul
sub
ljmp
cltd
adc
adc
cmp
jnp
fucomi
negb
sbb
ror
jg
es
repz
imul
adc
add
fs
daa
icebp
inc
push
lods
out
xchg
cmpsl
add
insl
adc
dec
xor
lret
xor
inc
and
dec
inc
ss
pop
add
fdivl
or
cmpsl
ret
popf
mov
xor
jmp
cmpsb
inc
add
dec
test
jbe
jo
cld
int
and
inc
aas
mov
lahf
adcb
daa
sub
outsl
int
in
push
mov
aas
xor
popf
xchg
xchg
mov
jbe
jle
jl
test
pop
or
popa
or
jge
int3
or
inc
test
repnz
sub
inc
and
mov
nopl
mov
jecxz
pop
mov
dec
pop
pop
jge
test
icebp
icebp
imul
mov
adc
orb
xor
adc
push
in
arpl
lods
lahf
and
inc
jno
dec
lret
leave
out
loopne
inc
push
outsb
std
cmp
push
in
pop
mov
push
adc
shlb
clc
aaa
fistpll
inc
xchg
dec
xlat
pop
insl
pop
jecxz
in
mov
or
xchg
jo
rorb
movsl
dec
loope
dec
cmp
cmp
pop
inc
push
dec
mov
add
inc
mov
out
rcrl
inc
xchg
mov
jb
ret
cs
inc
out
pusha
sahf
and
pop
cmp
mov
loopne
push
mov
repnz
pop
push
xlat
jmp
push
mov
dec
inc
sbb
mov
loopne
push
outsb
xchg
in
lods
icebp
fcmovb
mov
adc
xchg
jo
les
je
das
jecxz
mov
insb
xorb
push
adc
mov
xchg
xlat
lahf
call
in
je
mov
sub
dec
jg
cltd
fistpl
sbb
inc
lahf
adc
in
inc
add
loope
js
jg
cmp
insb
in
push
sarl
cmpl
enter
adc
dec
in
shr
pop
cmpsl
pushf
mov
push
in
sbb
push
mov
or
pop
out
pop
mov
std
insb
sub
ljmp
andb
or
jmp
mov
out
adc
loop
ficompl
pop
cmp
cwtl
xchg
dec
xchg
jmp
mov
xchg
stos
popf
push
ret
jge
lret
lods
cmp
dec
ds
hlt
ret
jle
jle
out
xor
mov
daa
sbb
push
les
fwait
pop
mov
stc
xlat
sbb
bnd
arpl
push
hlt
in
push
push
scas
cmp
cmp
sbb
mov
cltd
cmp
pop
cmp
inc
test
push
push
cmp
lods
sub
mov
sti
pop
pop
scas
push
test
bound
inc
test
add
xchg
add
gs
xor
push
cmc
push
cmp
lret
dec
push
xor
clc
xchg
xchg
cmp
lods
cmp
mov
pop
adc
imull
movsb
xchg
sub
aas
push
sahf
and
sbb
push
push
iret
push
jecxz
pop
outsl
cmp
rcr
and
fisubl
pop
lods
or
pushl
xor
xchg
shll
es
call
into
and
mov
mov
mov
lea
mov
pushf
mov
sub
lret
inc
out
gs
xchg
pop
xchg
icebp
xchg
jne
and
je
outsb
inc
mov
sbb
pop
mov
shrd
sysexit
jmp
bound
mov
in
sbb
popf
push
jl
push
pusha
popf
jecxz
jmp
mov
mov
inc
aam
inc
lahf
ja
xorl
cmpsb
adc
xor
loop
xor
xchg
filds
shll
inc
push
xchg
xor
jl
in
pop
jle
xchg
test
ret
add
xchg
movsb
js
push
add
dec
test
sub
aas
cli
addr16
inc
imul
jle
and
aad
or
xor
dec
fldt
mov
pusha
or
jl
pop
pop
lcall
loopne
out
jmp
or
push
push
jmp
sub
ficoms
ficompl
xchg
mov
mov
mov
outsb
icebp
mov
outsl
pop
lcall
stc
jbe
dec
cmp
stos
out
aas
sub
fisttps
scas
rcrl
jo
stos
mov
add
jp
mov
cltd
sub
fcmovnb
movsb
sahf
cmp
clc
hlt
imul
fsubl
sub
and
nop
mov
pusha
cmc
or
in
adc
loopne
pop
mov
sub
shlb
ret
add
mov
or
and
fldl
mov
inc
out
fmuls
outsl
cld
or
cmc
dec
add
aas
cmp
sub
dec
aad
sti
fisubl
stos
jae
jnp
and
ljmp
mov
imul
mov
sub
and
jb
pop
and
outsl
sub
cs
add
cltd
xor
cmp
bound
cmp
cmc
out
outsl
mov
pop
dec
or
adcl
cmp
push
decb
cmp
outsl
lahf
pop
mov
jns
outsl
fiaddl
sahf
jnp
and
data16
les
jg
mov
mov
xor
and
fidivl
jp
pop
ljmp
int3
movsl
sbb
shlb
movsb
mov
mov
pop
into
mov
repnz
mov
jge
push
mov
xchg
iret
movsb
paddq
mov
mov
ret
fcmovnb
mov
jp
push
mov
pop
mov
fistps
cmp
fidivrs
fmul
inc
lret
and
cltd
inc
add
xchg
add
dec
xlat
sbb
int
jge
andl
mov
jbe
aas
pop
pop
in
mov
gs
lock
or
loopne
or
bound
imul
or
fcomip
sarl
shll
repz
inc
loope
fdivp
mov
jb
sti
dec
mov
adc
and
push
cmp
xchg
nop
pop
in
notb
in
mov
cmp
sub
push
push
adc
pusha
cmp
cmp
sub
add
cmpsl
iret
push
cmp
cmp
dec
aaa
pop
test
icebp
rolb
btr
push
mov
push
pop
leave
add
enter
xchg
cmp
mov
and
out
int
movsl
push
inc
cli
pop
inc
daa
sub
mov
lock
xchg
or
adc
mov
inc
fcompl
add
or
shrl
xlat
sahf
push
loope
bnd
xchg
mov
in
out
lret
cmc
or
into
pop
les
dec
inc
ss
xlat
xor
jno
ja
fdivrl
or
xchg
mov
jno
pop
andb
sahf
ret
push
push
mov
mov
cmc
cltd
adc
sahf
out
push
or
in
aas
repz
xchg
dec
pop
popa
mov
or
fcompl
repnz
push
stos
inc
leave
imul
lcall
into
or
pop
sti
fidivs
xchg
lea
outsb
jae
fs
sbb
bound
mov
icebp
pop
mov
fcmovne
xor
push
cmp
dec
mov
cmp
js
add
mov
jmp
mov
lahf
mov
pop
and
jnp
jbe
int
pusha
mov
js
cwtl
jl
jle
or
mov
es
xor
push
mov
push
cwtl
push
addr16
dec
xchg
gs
xor
enter
ja
pop
xchg
xchg
inc
mov
test
pop
jecxz
inc
push
xchg
es
adcb
dec
mov
jo
cld
mov
sub
scas
sbb
fcoms
icebp
dec
jo
xchg
sti
adc
clc
push
ret
xchg
mov
jmp
cs
adc
js
dec
xor
mov
mov
sbb
inc
rcl
xchg
scas
cwtl
push
enter
push
inc
insb
adcb
mov
or
xchg
push
hlt
cs
test
popa
or
fisttpl
cmpsl
cwtl
sbbb
push
jg
inc
decl
sbb
and
jns
pop
lahf
aas
int3
loop
out
mov
int
sub
add
and
shrb
xor
hlt
mov
xchg
sub
popf
jbe
lods
and
jmp
and
outsl
mov
repz
notb
repz
fstpt
mov
popf
addb
and
jmp
movsl
addr16
sbb
pop
mov
push
or
push
push
push
cmc
mov
xorb
aas
adc
add
push
xor
es
and
sub
lret
sub
stos
iret
int3
aas
push
or
mov
test
inc
jae
jo
pop
mov
insb
stos
leave
in
sbbb
jmp
mov
lahf
jbe
mov
jge
mov
xor
out
movsb
xchg
jle
jmp
mov
aaa
mov
test
ljmp
outsb
inc
repz
cli
and
test
out
adc
inc
jne
ja
subb
les
dec
scas
dec
fcomip
adc
int
stos
inc
test
inc
pop
mov
les
shlb
inc
push
xor
xchg
mov
add
scas
je
and
sub
pop
pop
dec
in
push
jge
sub
jmp
mov
cli
sbb
std
inc
sbb
sub
mov
mov
bound
rorb
test
shrb
mov
jnp
jae
and
fs
lea
mov
xchg
dec
stos
shll
hlt
xorl
flds
or
in
jb
sub
xchg
xchg
jne
test
cmc
pop
jl
mov
fnstcw
rolb
mov
push
jl
popf
jg
cltd
dec
into
add
imul
repnz
mov
push
hlt
out
xor
xor
sub
test
sti
add
lds
adc
xchg
or
aas
in
std
jmp
rcrl
lret
sub
and
dec
dec
jb
jne
xchg
lcall
add
or
pop
and
and
dec
or
dec
pop
pusha
jmp
js
mov
pop
sbb
ljmp
dec
mov
mov
lret
jbe
mov
sub
add
adc
mov
adc
sub
out
fmull
and
sbb
mov
xor
adc
cld
dec
psrld
add
into
lods
mov
mov
jp
fcomp
pop
inc
stos
addr16
push
lcall
add
pop
enter
mov
fcompl
mov
add
popf
mov
push
sbb
dec
jno
jne
cmp
xchg
jge
in
mov
ret
popa
subb
andl
cmp
mov
jp
pusha
cmp
popa
fs
and
inc
shlb
push
test
frstor
arpl
leave
std
int
cmp
add
xor
mov
xchg
cmp
int
sub
xchg
and
ds
lods
sub
outsb
mov
jae
add
push
dec
or
div
dec
test
int
sbb
ljmp
inc
mov
mov
sub
fs
bnd
cmp
lock
xchg
mov
pop
lret
mov
adc
push
iret
and
xor
xor
adc
cmp
and
pop
lods
imul
jns
rcrl
fs
arpl
xlat
dec
jb
cmc
and
daa
in
fwait
repz
push
dec
and
xchg
ficoml
aam
fnstcw
xor
cmc
pop
stc
test
cmp
arpl
adc
and
inc
or
fistps
xlat
inc
ja
mov
mov
in
into
sbb
cli
or
cmp
pop
xlat
inc
shrl
repnz
lods
xor
lret
outsb
shll
shl
dec
dec
dec
aad
ds
pushf
xchg
push
jge
lcall
mov
pop
sub
loop
arpl
push
mov
or
subl
cmp
add
add
andl
pop
pushf
scas
leave
adc
pop
lret
mov
sub
arpl
push
xchg
iret
adc
xor
dec
out
inc
stos
ljmp
cltd
into
in
es
xchg
inc
outsb
cmc
pop
stc
inc
in
test
dec
xchg
ljmp
or
xor
mov
mov
cmp
icebp
das
mov
adc
jno
loope
add
add
xor
dec
arpl
sub
popa
jo
inc
mov
loopne
ja
out
ss
xchg
xchg
lock
adc
add
push
lcall
sbb
lock
xchg
xchg
das
icebp
jo
loope
cmc
imul
mov
addb
cli
xor
mov
std
outsb
scas
adc
dec
cmp
lods
xor
loope
js
mov
fs
sahf
dec
addr16
shl
fmuls
cmc
decl
push
or
pop
fisttpl
popf
jmp
push
dec
mov
inc
xor
out
dec
in
sub
fdivrl
into
push
movsl
push
stos
xchg
and
aad
dec
sub
dec
jb
pop
pop
dec
divl
sbb
sub
jmp
inc
sub
jmp
add
pop
pop
and
iret
pop
and
movsl
ljmp
sub
inc
cmpsb
dec
test
jae
jp
lahf
inc
pmuludq
movsb
mov
cmpsl
jns
mov
push
nop
jg
and
mov
fwait
pop
jae
and
aad
popa
scas
or
lahf
mov
jge
pop
mov
sbbb
clc
cmp
outsb
pop
shlb
nop
mov
add
dec
sbb
mov
or
ds
int
out
cmp
push
cs
jecxz
call
mov
push
cmp
stos
add
sub
lcall
inc
inc
lods
call
hlt
je
sub
mov
inc
push
cli
cmpsb
loope
in
int3
scas
movsl
ja
push
stos
cli
cs
std
dec
sbb
inc
stos
mov
inc
mov
mov
sbb
cltd
push
mov
imul
or
pop
cmp
notb
out
lahf
testb
add
loopne
inc
lret
into
xor
cmp
jle
xor
test
jae
orb
jmp
inc
xchg
dec
notb
loopne
js
mov
jne
xchg
jae,pn
pusha
pop
pop
mov
adc
mov
sbb
push
jne
jbe
push
mov
hlt
mov
inc
daa
jl
push
mov
adc
in
addr16
xlat
loope
shufps
add
add
xor
and
int
pushf
imul
jl
jne
xchg
inc
rolb
jecxz
fcompl
outsb
mov
xchg
das
xor
jne
data16
lods
lret
dec
and
ficoml
clc
out
mov
jp
mov
add
adc
fnstsw
cmpsb
movsl
jb
scas
lock
out
or
push
push
sbb
icebp
jle
popa
sub
into
sarl
or
xor
rolb
cmp
adc
addr16
cmp
dec
aaa
inc
and
les
pushf
cmpsl
mov
outsl
inc
popa
or
clc
sub
adc
sbb
repnz
mov
and
dec
repnz
and
movsb
pop
dec
sti
jo
fists
repz
inc
in
das
outsb
xchg
pop
cmp
xchg
xchg
pop
sub
in
leave
leave
in
fs
pop
or
push
shll
pop
mov
inc
out
jl
jle
cmp
arpl
mov
xchg
adc
dec
push
enter
and
xor
jb
pop
ret
inc
push
mov
fistl
push
and
fcoml
mov
lock
or
cmp
add
cwtl
cmp
jmp
mov
and
cmp
add
lea
xchg
aad
cltd
jl
das
lahf
push
gs
gs
sbb
imul
sbb
push
or
xlat
or
xchg
mov
push
cs
lock
xchg
sbb
push
cmp
xchg
repz
pop
inc
add
scas
lods
gs
mov
inc
orl
mov
dec
js
stos
inc
sub
leave
dec
mov
out
mov
add
das
cmp
pusha
and
sbb
xor
dec
adc
sub
outsl
ret
cmp
pop
ljmp
loope
arpl
adc
insl
add
out
scas
jne
xchg
add
cmp
add
mov
lcall
popa
xchg
sbb
push
stos
mov
in
sti
jns,pn
shll
aas
and
orl
cli
mov
mov
inc
mov
dec
out
and
leave
cmp
call
mov
pop
js
ds
jno
sub
fisttpl
je
in
adc
mov
outsl
lret
popf
fiadds
xor
int
rol
addl
shrb
sbb
repnz
notb
mov
pop
xchg
add
push
daa
cli
mov
cwtl
in
and
out
clc
int3
cmc
repnz
adcb
addl
nop
rorb
mov
jmp
pop
loope
sub
sbb
insb
xlat
add
movsb
and
cltd
inc
stos
and
jecxz
imul
dec
sbb
div
out
push
mov
inc
inc
test
inc
pop
push
jae
sbb
cmpb
jg
pop
lret
dec
mov
outsb
in
inc
fs
js
out
dec
popf
lods
gs
or
iret
adc
shll
loop
in
cmc
mov
inc
and
lahf
js
xor
inc
add
mov
cmp
test
lcall
cmc
gs
pop
mov
scas
pop
xor
and
arpl
mov
arpl
mov
push
ret
and
fs
roll
sbb
loop
lcall
cld
push
pop
mov
stos
out
lahf
aad
sbb
scas
xchg
scas
dec
loope
test
mov
xchg
mov
ljmp
mov
and
repnz
rorb
scas
xchg
mov
test
dec
inc
inc
cmpl
pop
push
jg
pushl
xor
add
daa
push
push
ljmp
hlt
das
inc
es
sti
add
lea
loop
daa
rcll
pop
adc
mov
mov
cmpsb
push
push
dec
mov
clc
popf
ret
daa
aad
mov
arpl
test
cli
mov
mov
jecxz
sahf
imul
pop
push
cs
pop
xchg
xchg
mov
mov
dec
addr16
xor
jle
jle
jmp
mov
jnp
test
pop
pop
mov
push
or
scas
mov
dec
push
xor
fcompl
hlt
mov
inc
xor
mov
push
rorb
test
push
int
sbb
xor
movsl
jbe
push
ret
inc
and
mov
jbe
sti
push
xor
push
gs
jb
push
cmc
jb
add
pushf
mov
push
sub
xor
jnp
add
xchg
pop
dec
cld
scas
pop
dec
add
inc
jo
push
pusha
dec
sti
sbb
aam
xchg
imul
bound
mov
xor
jmp
repnz
push
in
jno
shl
mov
out
loopne
fldt
inc
mov
daa
ljmp
inc
add
ret
pop
lcall
lret
rcr
push
mov
cmp
inc
mov
stos
mov
push
dec
xor
push
jg
out
scas
jp
mov
popf
adc
stos
arpl
mov
fsubs
int
adc
or
lret
sbb
inc
push
aaa
adcl
js
test
add
fisttpll
mov
inc
xchg
inc
lcall
cmc
pop
in
jno
mov
pop
mov
inc
dec
push
push
pushf
pop
cli
imul
adc
jne
mov
and
xor
rcrl
cli
mov
inc
stos
mov
rcll
rcll
xor
inc
dec
repnz
push
iret
in
testb
xor
add
insb
pushf
pop
inc
and
rcrl
mov
lea
jbe
inc
gs
sbb
add
cmp
mov
mov
jg
lea
fsubl
xor
dec
rcll
fs
andl
in
cmp
ret
lcall
push
js
mov
mov
insl
jo
dec
xor
ror
adc
sbb
frstor
leave
loop
cs
loope
mov
in
adc
jmp
xchg
mov
push
sbb
sahf
and
cld
xchg
or
push
imull
jb
inc
push
aam
in
jb
addr16
int
lea
pop
push
cmpsl
cld
pop
mov
push
mov
add
fcomps
jne
pop
mov
aam
out
push
and
jns
push
jp
repnz
pop
and
std
rclb
insb
push
dec
jecxz
mov
out
xchg
out
imul
cltd
dec
ficoml
imul
repz
add
add
sub
xor
ror
fwait
and
mov
iret
shrb
xor
mov
icebp
xchg
popa
aam
xlat
xchg
data16
loope
sub
inc
dec
jmp
lods
cld
out
add
sahf
aad
mov
mov
mov
fistps
xchg
cmp
insl
lcall
and
cmp
repnz
xchg
xchg
dec
add
imul
sub
sbb
cmp
xchg
inc
std
pop
push
sbb
loop
push
stos
bound
popa
push
sub
cmp
push
mov
das
scas
add
test
push
mov
je
jle
aam
enter
jbe
sbb
jb
in
xchg
jns
lcall
sahf
adc
cltd
mov
and
decb
jne
push
cmp
das
dec
cmpsl
icebp
xchg
add
mov
test
mov
jecxz
mov
jl
insb
mov
pop
mov
ds
lret
lea
popa
into
fidivl
cmpsl
push
cmp
mov
mov
pop
xor
xchg
aaa
fiaddl
adc
mov
xchg
mov
add
push
jp
mov
das
cmp
lods
jl
imul
and
not
stos
in
outsl
xchg
mov
dec
xchg
xor
mov
inc
xor
aaa
push
ret
jecxz
pop
sbb
popa
rclb
test
or
loopne
cmpsb
imul
shr
aas
lds
and
mov
lods
sarl
icebp
je
nop
cmpsb
fwait
fidivs
in
in
dec
js
mov
insb
jp
pop
xchg
loope
outsl
stc
fwait
jae
jmp
sbb
dec
clc
cmp
lods
add
mov
add
lock
or
xchg
or
clc
cwtl
xchg
ljmp
and
outsl
in
or
dec
repz
jae
jae
push
lods
lahf
xchg
in
movsl
mov
jae
xor
stos
xor
cmpsl
call
push
stc
push
aam
ja
inc
xchg
or
dec
xchg
hlt
cmp
mov
je
sub
int3
in
and
mov
sbb
jns
adc
scas
adc
mov
addr16
sbb
push
adc
test
rcll
dec
mov
into
jl
mov
ret
ds
int3
mov
aas
out
pop
xor
sub
add
mov
cmp
scas
jg
sub
and
sbb
mov
xchg
mov
rorb
pop
loopne
cmp
and
out
rorl
js
push
and
lods
xchg
mov
emms
or
mov
sub
adc
jno
outsb
negb
and
push
mov
cmpsb
sub
cmpsl
idivb
adc
lret
xor
fnsave
shrb
je
repnz
dec
lcall
stos
dec
jno
outsl
fldt
sarb
xor
pop
scas
repz
in
and
sub
aad
pop
loope
jg
sbb
sub
popa
lods
xchg
lret
push
data16
shlb
js
in
sbb
push
xchg
or
pop
and
mov
sbb
cmp
dec
sbb
dec
lock
repz
fisubrs
cmp
and
negb
adc
scas
ljmp
stos
btcl
pop
dec
insl
dec
in
aaa
scas
addb
mov
ds
ret
xchg
stc
mov
push
std
and
push
sbb
mov
je
outsb
adc
sahf
out
xchg
push
push
add
push
std
clc
mov
movsl
into
jno
mov
cmp
xor
or
and
lock
fucom
push
xchg
test
pop
test
xchg
stos
sub
mov
push
and
stos
lea
pushf
cmpsl
push
loopne
push
icebp
jp
sarb
push
repnz
adc
test
stos
mov
add
les
dec
pop
cmp
add
mov
movsl
mov
cwtl
gs
or
mov
pop
arpl
lret
add
rep
mov
xchg
dec
push
in
sbb
pop
fstpl
leave
nop
mov
sbb
xchg
lods
add
xor
dec
add
mov
sbb
loop
daa
xchg
and
aaa
scas
icebp
mov
out
stos
lock
sti
sti
mov
pop
nop
clc
mov
fstp
add
add
dec
dec
xor
sbb
in
and
inc
add
fdivrs
out
push
out
das
and
cld
je
cwtl
xchg
xlat
pusha
sub
xor
sbb
jge
sbb
insb
dec
fnstcw
jae
push
jmp
push
mov
ja
mov
add
test
xor
lcall
push
sbb
sti
test
fadd
sbb
adc
cltd
rclb
mov
and
pop
push
add
lret
or
jne
loop
xor
jg
adc
pop
sbb
movsl
jns
es
pop
push
int
cs
adc
mov
mov
mov
pop
push
inc
lret
inc
std
jno
nop
push
fadd
out
jne
sbb
inc
xchg
lods
mov
push
mov
scas
push
movsb
repz
sub
aad
mov
addr16
imul
inc
imul
sbb
dec
test
inc
xlat
sbb
mov
adc
pop
pop
mov
fdivrp
lock
test
rol
jb
mov
enter
fsts
cs
mov
sahf
test
mov
jbe
clc
xchg
stos
jmp
scas
mov
mov
pop
push
fwait
add
andl
adc
mov
ss
xchg
xor
cmpsb
insb
mov
js
push
mov
and
xchg
inc
inc
into
push
jno
repz
lds
aaa
das
or
int
enter
imul
or
push
data16
ret
xchg
ja
popw
push
outsb
js
scas
push
imul
js
mov
mov
pop
outsl
jle
call
mov
push
aam
cld
call
fnsave
lods
mov
daa
mov
jne
icebp
adc
cwtl
pop
push
addb
bound
ret
ljmp
push
xor
in
stos
pop
jmp
or
mov
notb
je
push
pop
mov
xor
arpl
shrb
mov
mov
loopne
mov
call
gs
push
and
lea
xor
push
jecxz
int
cmp
testb
movsb
mov
push
arpl
scas
leave
jbe
xchg
and
stos
mov
adc
xor
lods
xor
mov
add
mov
in
jae
inc
adc
stc
rorb
mov
out
jno
cwtl
lock
test
xchg
push
inc
and
popa
adc
movb
lret
cwtl
push
jge
stos
jb
and
int
popa
int
adc
mov
sub
cmpsb
sub
lods
jns
insb
rclb
mov
mov
add
mov
xchg
popf
testb
and
mov
push
inc
dec
xlat
popf
test
adc
mov
aam
or
mov
lret
cmp
clc
or
jmp
leave
and
push
outsb
iret
inc
adc
in
dec
out
jo
pop
cmp
cs
adc
inc
in
sub
xlat
xchg
pop
dec
addr16
sarb
test
iret
cmpl
lret
add
iret
ja
cmc
mov
cmpsl
ss
mov
inc
lret
lea
mov
popf
xor
and
rcr
jmp
jp
push
lahf
cwtl
into
add
ja
mov
fcomi
sbb
mov
mov
lods
aad
aas
adcl
push
popa
mov
nop
add
jle
movsb
mov
xchg
cmp
cmp
in
cltd
inc
pop
xchg
xchg
jg
lock
insl
and
imul
xor
pop
xchg
jb
ret
mov
sbb
push
fnstsw
push
iretw
fmull
xchg
mov
mov
enter
iret
adc
and
sbb
jmp
js
push
mov
in
pop
data16
loop
fwait
inc
aaa
dec
jp
int3
in
adc
and
and
adcb
aad
lock
aam
sub
insl
push
pushf
mov
xlat
daa
xchg
mov
sahf
clc
xor
pop
repz
sub
enter
xlat
int
adc
fs
repz
or
fistl
movsb
adc
movsb
test
xchg
jg
pop
dec
mov
or
icebp
lods
pop
pop
dec
outsl
push
mov
movsl
popa
mov
aaa
inc
xor
adc
inc
leave
adc
jo
pop
mov
push
stos
mov
add
test
fmul
or
add
lock
mov
fsubl
push
xchg
cwtl
fcompl
mov
test
dec
add
push
push
test
or
ret
addr16
in
adc
jp
movsl
out
cmp
jnp
pop
cld
dec
mov
rcr
push
cmpsl
mov
test
sub
into
mov
and
in
sub
enter
js
or
mov
cmp
ds
fyl2xp1
shlb
test
icebp
repz
sbb
popa
jae
pop
ret
lahf
or
xor
aaa
popf
shr
pop
in
xchg
mov
scas
mov
nop
lahf
out
pop
mov
fdiv
jb
fcmovne
push
pusha
aam
pop
lea
pop
and
sbb
test
mov
popa
jnp
out
enter
cld
or
cmp
lock
fistpl
popf
dec
inc
mov
fbstp
or
jmp
in
pop
clc
out
jae
jb
mov
popf
add
stos
or
imul
pop
cmpsb
pop
mov
sbb
dec
pop
in
aad
leave
les
jns
icebp
jp
pop
fnstcw
adcb
and
add
mov
push
inc
push
aad
dec
xchg
or
pop
shl
fbld
int3
xor
xchg
fs
dec
inc
mov
aam
movsb
push
int3
xor
mov
and
and
mov
fdivrl
lods
ret
aam
push
dec
push
xchg
cmp
leave
pop
imull
std
orl
loope
les
les
les
push
movsb
movsb
sub
xchg
xor
popf
mov
xor
sbb
icebp
sub
push
clc
test
mov
or
or
mov
mov
mov
nop
push
in
mov
jg
dec
cwtl
xchg
aad
mov
xor
stc
add
test
xchg
sub
mov
push
das
jb
std
leave
mov
sbb
xchg
sub
mov
cld
fistl
pop
mov
inc
jmp
jp
and
adc
ljmp
movl
xor
daa
jle
dec
xlat
push
out
orl
mov
mov
mov
outsb
and
sbb
cmp
in
dec
push
nop
int
mov
leave
ljmp
adc
and
jmp
cmpsl
les
mov
adc
sub
inc
outsl
leave
adc
fmul
repz
push
orb
and
outsl
mov
mov
push
repz
scas
outsb
or
movsb
push
repnz
call
out
jbe
cmp
or
push
push
pop
adc
lds
cs
rcr
push
cmp
jecxz
dec
lcall
xchg
fcoms
mov
mov
inc
cwtl
cltd
xchg
mov
fwait
enter
add
sbb
leave
sub
push
mov
mov
test
xchg
xor
incb
mov
push
jae
push
mov
and
in
mov
rol
enter
adc
fsubl
mov
or
pop
imul
cmp
xor
or
sub
into
inc
pop
lea
fdivrl
dec
pushf
mov
jl
in
aad
pushf
or
cli
out
cmp
lret
mov
outsl
xlat
es
insl
and
xor
pop
shlb
mov
jge
in
stos
cwtl
imul
dec
mov
mov
stc
lret
mov
int
pushl
push
pop
mov
out
inc
imul
shl
je
add
ljmp
daa
inc
jne
rorl
arpl
arpl
sarb
or
adc
xchg
sbb
sbbb
sub
sub
xor
mov
lock
aaa
aad
and
aad
js
pusha
mov
inc
cmpsl
insb
mov
jmp
xchg
insb
ror
push
fs
cmpsb
stos
add
in
cmpb
in
enter
dec
xchg
or
jns
call
add
xor
aaa
ja
hlt
or
sub
dec
std
pop
push
jg
cs
inc
sub
jb
out
andl
cmp
enter
inc
push
jecxz
or
out
mov
out
loop
out
sub
sbb
push
pop
repnz
adc
xchg
xchg
lret
pop
adc
lea
jmp
cmpsl
mov
ret
shr
mov
adc
lahf
inc
dec
arpl
shr
dec
sub
scas
push
mov
mov
fmull
pop
insl
add
mov
cmp
loop
cmpsl
lret
sbbl
or
or
mov
push
movsl
lods
push
mov
sahf
bnd
jl
int3
push
xchg
faddl
adc
jge
pop
mov
pop
out
inc
inc
es
popa
pop
in
aas
sub
fwait
or
sub
xor
sbb
out
and
lret
jmp
push
or
insl
movsl
or
xor
pop
add
arpl
fsubl
jo
push
adc
lea
iret
aaa
insl
lods
test
jle
sub
dec
shrb
jle
aaa
cmpsl
sub
jo
mov
lods
fst
hlt
das
stc
or
insb
dec
pop
imul
dec
or
sti
jmp
fadd
negb
xorl
mov
pop
sub
jns
or
and
loop
insl
or
mov
mov
imul
imul
outsl
sbb
xor
adc
dec
in
mov
push
lock
xor
and
call
aad
mov
lcall
push
inc
mov
fwait
mov
fildll
adc
fldenv
sarb
or
adc
lret
out
testb
rol
and
rcll
inc
xchg
mov
jo
xchg
dec
test
popa
shl
cmpsb
mov
cmpsl
mov
pop
and
ds
test
adc
sti
std
cmc
lea
cli
and
in
jne
out
pop
add
dec
mov
rcll
push
mov
sti
pop
pop
clc
lcall
add
repnz
lock
in
or
pop
add
fsubrp
inc
std
and
ss
rolb
pop
fildl
or
test
mov
push
xchg
out
cmp
dec
pop
adc
repnz
cmp
cwtl
int3
imul
dec
popf
lods
xchg
lock
mov
lds
jnp
cmp
cmp
out
xchg
cld
add
fcos
dec
repnz
jmp
lret
outsl
js
rclb
jne
aam
push
inc
sub
inc
inc
add
ss
inc
pop
or
jno
stc
or
popa
ljmp
lds
ss
mov
lea
jmp
push
xchg
inc
jmp
cmp
mov
push
dec
lds
pop
xchg
adc
xchg
into
jb
movsl
mov
jne
sub
sub
inc
xchg
adc
xor
sub
or
repnz
js
and
ds
fcmovbe
popa
sbb
pop
cli
lods
and
pop
push
sub
test
xchg
push
push
out
loop
in
clc
jle
mov
out
imul
mov
data16
pop
addb
mov
leave
and
inc
cmc
out
jecxz
das
les
and
mov
mov
fists
pop
xchg
ret
pop
fwait
outsb
push
subb
add
loope
sub
xchg
ljmp
adc
pop
outsl
leave
out
fs
inc
mov
aaa
jl
or
test
arpl
cli
sub
test
jl
add
test
add
mov
lcall
and
pop
xchg
add
add
fldl
lcall
jnp
pop
sub
jne
iret
loopne
dec
mov
add
ss
mov
hlt
xorb
fdiv
fldenv
jae
cwtl
adc
dec
repnz
rolb
and
jge
in
sub
pop
xor
dec
fisubl
push
mov
insl
mov
pushf
pop
pop
fbstp
pop
stos
jns
jb
jae
pop
push
push
push
scas
in
xchg
fmuls
jp
or
aas
loop
pop
std
outsl
inc
mov
loop
negb
scas
pop
xchg
bound
insl
adc
arpl
cmp
inc
or
stos
xor
ret
mov
mov
stos
aaa
scas
inc
sub
fs
sbb
addr16
xlat
cmp
or
call
sbb
mov
add
or
repz
dec
add
sub
fwait
pop
addr16
jae
sbb
xchg
jmp
inc
insb
aad
sahf
outsb
iret
mov
pop
jbe
add
inc
or
shl
add
or
outsb
test
outsl
pop
daa
and
sarl
ja
pop
out
mov
mov
mov
imul
or
ja
in
dec
jne
mov
pop
inc
push
shl
add
pop
outsl
xlat
mov
jb
push
cltd
or
cli
push
xchg
shlb
jnp
pop
xchg
int3
push
pop
jle
lcall
rol
fistpl
jle
jo
or
mov
cmc
push
in
pushf
nop
sbb
and
pop
or
fst
mov
xor
outsl
cli
out
xchg
lcall
dec
pop
nop
jo
shlb
push
adc
mov
rorb
adc
aad
int
jge
in
pop
movsb
add
sbb
dec
and
inc
clc
test
mov
cmp
repz
xchg
das
xchg
inc
lock
popa
fcmovnu
lock
push
lahf
jns
fistpl
sub
stc
std
fimull
push
in
cltd
clc
cmc
dec
clc
or
ret
les
mov
or
lcall
cmc
dec
imul
arpl
cmc
fimull
dec
mov
push
fisttps
repnz
cli
sar
adc
sti
or
das
xchg
pushl
sub
xor
out
cmpsl
or
jb
bound
mov
cli
cltd
imul
cmp
and
std
xor
daa
dec
or
mov
jecxz
or
push
inc
xlat
ja
sub
ror
adc
call
std
push
in
aam
in
xor
scas
inc
nop
xchg
inc
call
cmp
pushf
jp
sbb
xchg
jg
push
shlb
pop
and
cwtl
or
mov
or
mov
dec
popa
push
mov
dec
mov
or
mov
outsb
repnz
sbb
add
pop
jge
cmp
cmp
sbb
mov
xor
rolb
mov
xor
xor
inc
push
aas
mov
loope
push
inc
pop
jb
lcall
in
pop
push
xor
std
or
lods
pop
pop
int
xor
pop
xlat
imulb
test
mov
jge
movzwl
mov
mov
cmpsb
xor
fidivrl
aaa
fstpl
out
ret
pushf
add
sahf
mov
pop
mov
das
push
mov
mov
je
pop
hlt
inc
and
aam
mov
pusha
dec
jle
cmp
push
sbb
mov
lea
xorb
sbb
lea
daa
jae
lock
or
pop
or
out
inc
xchg
mov
icebp
cmp
or
divl
xor
mov
aam
sub
filds
rcl
pop
sti
loope
sub
outsl
mov
into
or
ds
xchg
push
data16
mov
lods
lods
outsb
add
out
mov
pop
xchg
in
cmpsl
push
adc
inc
xchg
in
lods
dec
test
imul
push
adc
push
pop
mov
movsl
sub
movsb
dec
lret
dec
jl
sbb
pop
xchg
pop
test
pop
push
mov
pop
in
add
into
daa
and
xor
lret
ret
jbe
into
ss
stos
pop
sub
jbe
cld
js
pop
push
xorl
xor
mov
pushf
push
lds
stos
dec
test
test
push
mov
cmp
pop
xchg
sub
lahf
call
cmp
cli
cmp
push
mov
les
in
jg
mov
loopne
movsl
insb
pop
dec
mov
add
mov
push
or
out
in
negl
jae
imul
js
adc
push
icebp
cmpsb
test
movsl
mov
shlb
sahf
dec
test
pop
mov
push
fs
or
out
inc
cmp
jbe
lods
out
push
inc
repz
lock
push
adc
call
mov
insl
out
add
xlat
cmpsl
subb
insl
push
add
cs
jns
xchg
jns
mov
lcall
test
sbb
mov
push
or
sub
mov
push
sub
cld
or
jne
jb
push
cmp
daa
sbb
jns
sahf
xchg
dec
sahf
inc
mov
nop
mov
arpl
push
add
dec
and
xor
cmp
es
mov
lcall
mov
add
movsb
adc
mov
jb
lcall
sti
ret
jb
mov
into
repnz
dec
push
scas
bound
pop
mov
shlb
in
push
mov
push
and
popa
int3
jbe
inc
hlt
sbb
mov
inc
jle
jo
ret
mov
jp
xchg
pop
pop
mov
ret
mov
mov
testb
fisubl
and
adc
push
frstor
shl
stos
fwait
ret
sarb
jae
and
add
inc
out
inc
cmp
and
adc
decl
ret
mov
xor
adc
sbb
sahf
jae
push
push
in
sarl
fwait
aas
xchg
aaa
jmp
ret
jg
stos
stos
inc
pop
stc
les
enter
and
mov
hlt
hlt
ss
in
ss
daa
mov
lcall
add
or
inc
pop
sbb
fs
test
and
call
fbld
inc
push
mov
pop
std
jno
and
xchg
mov
or
xor
lahf
jp
xor
aam
jp
clc
or
mov
shlb
xchg
hlt
sbb
push
and
inc
mov
cmpsb
outsb
cmp
in
xor
lret
fnstenv
into
int3
outsb
aas
push
push
push
pop
xlat
add
ret
jle
xchg
out
lret
mov
fisttps
mov
fdiv
or
minps
gs
dec
icebp
cmp
ljmp
cmp
loop
mov
push
pop
pusha
stc
or
pop
inc
push
fs
mov
fdivp
in
push
aaa
cmp
push
test
roll
or
or
xchg
scas
int
jmp
mov
pop
and
mov
stc
or
lods
pop
sbb
adc
insb
and
je
mov
sbb
lahf
pop
pop
loop
jbe
aas
popf
mov
lahf
test
mov
mov
cmp
in
aaa
dec
push
jo
inc
jecxz
pop
sub
fnstcw
sbb
in
and
dec
xchg
cmp
mov
fidivl
or
testb
orb
mov
jp
xchg
mov
pop
pop
int
rorb
or
stos
icebp
xor
loop
lods
adc
aam
enter
ljmp
adc
or
jmp
fmul
push
cmp
insb
mov
test
test
fcoms
rclb
xorl
jne
and
mov
push
int
in
in
sub
cmc
fcom
cmp
jmp
mov
movsl
sub
aaa
cmc
stos
ja
and
xchg
adc
popa
pop
fildl
icebp
ss
andb
pusha
mov
and
loope
loope
in
das
insb
add
shr
sub
lahf
stos
ja
inc
dec
out
xchg
std
pop
subb
out
mov
aaa
push
std
loopne
mov
dec
lahf
add
jno
hlt
xchg
daa
pop
mov
mov
into
jns
jl
test
push
adc
lret
and
add
fadd
or
cs
sub
aaa
pushf
dec
or
aam
call
lcall
popf
sub
insl
and
scas
or
inc
sti
and
cld
jo
pop
int
xor
push
in
dec
out
cwtl
fists
adc
jae
fstl
mov
rorb
sbb
sub
out
daa
cmp
pop
xor
lods
sbbb
jp
cmp
sbb
cwtl
jmp
in
mov
inc
ds
pop
movd
mov
rorb
xchg
cmpl
setb
es
sbb
push
insl
into
aad
imul
jg
push
mov
xchg
mov
xor
outsl
sbb
std
mov
inc
sbb
cmp
test
ljmp
in
divb
jns
mov
or
mov
pop
push
xor
jno
das
adcb
insb
popa
int
mov
popa
jb
fsub
mov
adc
dec
xchg
xor
add
out
dec
sub
cmpsb
and
cmp
jl
jp
adc
adc
in
movsb
adcl
inc
sbbl
movsl
and
jbe
add
jae
shll
jmp
push
jns
call
or
cli
jmp
push
scas
stos
loope
lea
lea
xchg
arpl
negb
xchg
inc
jp
pmullw
aas
push
por
fldcw
inc
and
sub
xor
int
mov
nop
dec
cmp
mov
scas
cmp
mov
loope
pop
pushf
mov
arpl
jb
inc
push
addr16
cli
je
add
or
outsl
xchg
push
loop
pop
dec
inc
rcll
mov
je
xchg
fcmovnu
lret
dec
cld
daa
jmp
adc
test
add
push
call
cmpb
ljmp
jmp
je
fidivs
inc
add
or
xchg
dec
xchg
fidivrl
mov
mov
pop
inc
mov
sub
mov
incb
iret
dec
mov
mov
inc
fs
cmc
lahf
fnstcw
dec
fisubrs
lds
daa
sub
ucomiss
jle
xor
int
pusha
stos
xlat
dec
inc
jno
les
mov
rcll
and
mull
push
sub
rcl
stos
ja
sub
jle
mov
popf
adc
mov
xchg
popl
sbb
lods
mov
bound
inc
gs
adc
sub
test
xchg
cmpsl
inc
push
addr16
and
adc
add
sub
lock
orb
jp
push
sbb
add
jns
pusha
sub
inc
pop
insb
jne
cmc
push
jnp
into
or
push
cmp
pop
in
push
in
push
cmp
jnp
iret
push
cmp
andb
jp
out
pop
les
test
xchg
js
sbb
stos
dec
inc
das
mov
enter
stos
out
sub
add
mov
cmp
dec
pop
mov
popa
popa
leave
jmp
mov
pop
or
aam
cmp
movsl
xlat
mov
or
je
add
mov
sub
sbb
jbe
repz
sbb
aad
aas
jns
mov
repnz
arpl
hlt
sahf
sbb
xchg
imul
mov
mov
test
imul
loope
stos
sbb
jo
adc
push
aaa
mov
mov
int
push
xor
nop
mov
adc
mov
inc
pop
and
sbbb
sbb
in
lods
rorb
int
pop
jge
popf
test
cmpsb
push
mov
sub
rorl
lahf
stc
adc
add
add
scas
in
das
test
fwait
mov
movd
mov
mov
push
cli
lahf
out
add
scas
mov
jb
jbe
push
mov
mov
xor
sbb
xor
push
loopne
jmp
xchg
xchg
adc
sbbl
mov
int3
inc
sbb
add
imul
int3
jno
stc
test
pop
xor
enter
and
push
cmp
sub
std
and
add
rcrl
push
test
lea
push
arpl
ficoms
dec
data16
sub
pop
lock
cmp
ljmp
add
mov
xchg
cwtl
mov
adc
xchg
xor
or
hlt
pop
add
call
pushf
outsb
dec
loop
mov
insb
scas
pop
push
mov
repz
fiadds
out
push
rclb
cmpsl
and
lret
outsb
push
jns
movl
push
sub
lret
dec
add
pop
sbb
mov
mov
ret
popw
sbb
dec
call
sub
pop
xlat
imul
mov
je
fiadds
mov
mov
lds
sbb
xchg
and
loopne
test
out
std
mov
dec
pop
jle
sbb
imul
adc
lret
xor
lcall
push
add
nop
loope
dec
lret
mov
jae
cmpsb
addb
sbb
popf
inc
ss
xor
test
pop
or
cltd
push
shlb
inc
xor
lds
sub
inc
sbb
adc
jo
push
fdivrl
cld
and
test
xor
xor
mov
lea
imul
outsl
movsb
sub
fisttpl
push
pop
scas
data16
notl
inc
pop
jle
lret
push
in
xchg
inc
inc
mov
jae
aas
dec
or
arpl
or
sar
leave
repz
rclb
mov
outsl
pop
mov
dec
aad
aaa
ret
jg
js
out
pushf
pop
es
push
lds
iret
mov
mov
repz
daa
mov
xchg
cwtl
addr16
pushf
inc
mov
shll
mov
sub
xchg
xchg
lock
addb
je
pop
mov
das
dec
mov
add
dec
cld
daa
mov
scas
loop
test
and
fucomp
leave
sbb
ljmp
insb
xchg
cmp
jae
jl
imul
int3
test
stos
cmp
cmp
lahf
leave
icebp
jnp
pop
jae
mov
xor
sub
clc
bound
jmp
mov
mov
xchg
lret
mov
xlat
mov
lret
stos
pop
ret
jmp
push
or
lahf
je
xchg
hlt
leave
mov
jnp
jb
sub
data16
lahf
sahf
imul
sbb
dec
xchg
roll
lods
add
pop
push
mov
mov
xchg
jl
out
mov
and
push
xchg
mov
int
pop
data16
ja
sub
pop
clc
mov
stos
inc
xchg
aas
dec
and
scas
pusha
repz
cs
repnz
repnz
stc
sub
gs
add
pop
lahf
fisubrl
repz
dec
xchg
enter
inc
or
adc
sahf
adc
push
xor
pop
inc
enter
inc
push
in
inc
dec
mov
and
imul
lret
lea
or
pop
rol
filds
inc
mov
incb
xchg
jecxz
mov
sbb
jle
push
xchg
dec
fstl
or
repnz
push
mov
lods
shrl
mov
mov
jb
ret
sarb
lock
dec
and
push
or
mov
push
sub
xor
mov
mov
and
mov
mov
push
xchg
cmpsb
cs
pop
add
fcmovbe
xchg
jne
jne
jno
lea
into
jne
pop
mov
adcl
and
sti
cmp
pop
and
enter
inc
sbb
insl
sub
lods
or
sti
dec
movsl
push
icebp
and
in
test
mov
stos
dec
xchg
sub
lock
fwait
push
cld
lea
sub
pop
popa
popa
fnstsw
mov
aaa
push
dec
movsl
fidivrl
inc
jns
jne
fldenv
inc
arpl
sbb
call
js
imul
jmp
movsl
adc
mov
pop
cs
push
mov
xlat
inc
lods
mov
stos
jge
mov
xor
sub
pop
adc
stc
fidivs
xlat
mov
dec
int
xchg
int3
daa
dec
sbb
push
dec
cmp
xor
pop
es
push
cmp
mov
test
mov
call
push
arpl
add
fsubl
into
or
inc
sbb
dec
jmp
leave
imul
xchg
xor
nop
test
iret
das
sahf
ret
inc
ret
and
inc
hlt
test
in
pushf
and
cwtl
idivb
std
mov
sub
adc
or
xchg
test
arpl
cmpsl
imul
hlt
mov
or
xchg
push
xchg
loop
mov
jne
push
in
ret
mov
or
sub
add
cmp
andb
adc
mov
pop
aaa
loopne
lods
cmp
xacquire
push
clc
inc
mov
mov
lret
jmp
out
mov
jle
push
in
dec
pop
mov
ret
add
mov
pop
rolb
jns
push
push
xor
outsb
push
pop
jl
mov
xchg
repz
scas
or
jns
adcl
push
sbb
mov
dec
jle
mov
leave
jae
pusha
repz
mov
inc
dec
mov
lret
jle
sub
jle
xor
movsb
xchg
dec
or
cmpsl
mov
int3
inc
mul
lcall
pop
push
sti
cli
ret
add
mov
pop
add
and
push
mov
stc
push
mov
xchg
int3
xchg
stos
mov
dec
sbb
lock
fcomip
adc
xchg
xor
inc
stos
sbb
mov
aam
pop
sbb
addl
lret
fidivrs
xor
sbb
xor
lret
lcall
in
ljmp
test
xor
fwait
xor
and
cli
lock
mov
add
cmp
das
shrl
mov
clc
lock
test
ss
pop
mov
int3
ret
adc
lock
sarb
dec
cmp
and
mov
test
push
popa
cli
je
push
xchg
add
andl
mov
lahf
jp
ss
pop
xor
fmull
ret
pop
aas
inc
dec
mov
shll
scas
or
xor
mov
scas
int
loope
stos
jecxz
daa
inc
pop
les
push
shl
aaa
mov
pop
roll
xchg
lcall
adcl
jno
pop
into
add
lds
into
popf
mov
insl
jae
dec
lods
jae
fs
push
test
call
outsb
dec
lods
loop
loopne
inc
outsl
stos
and
lods
lahf
mov
pop
mov
and
mov
mov
xchg
jle
add
lods
lret
lods
sub
in
xchg
lods
cs
popa
daa
xchg
pop
mov
es
out
dec
mov
inc
xchg
dec
mov
lahf
lods
dec
and
or
sbb
shrl
mov
out
mov
imul
xor
cmp
mov
mov
shlb
in
inc
mov
or
imull
sub
jne
xor
fcoms
jae
mov
xor
movsl
jl
pop
add
test
daa
push
lea
jecxz
gs
cmp
lcall
test
cmp
pop
pushl
pop
mov
mov
cld
add
jecxz
jnp
and
mov
push
ficomps
ss
and
add
cmp
adc
ficompl
mov
je
lds
inc
push
xor
iret
jb
loopne
push
fmul
add
adc
mov
pop
sub
inc
cmpsl
fcom
pop
js
fwait
jp
fisubs
and
pop
inc
mov
pop
dec
lods
or
push
jecxz
xchg
ljmp
mov
sub
and
adc
sub
jmp
cld
ret
mov
lret
sti
adc
push
xchg
mov
inc
imul
aad
sti
leave
push
idiv
ret
and
dec
pop
adc
jbe
pop
out
and
xchg
repz
mov
shlb
jle
testl
into
sbbl
push
add
pop
pop
popa
ss
popf
dec
adc
dec
cmp
sub
in
cmp
mov
jp
push
adc
testl
dec
mul
push
pop
repnz
mov
aad
dec
jge
dec
lds
push
loope
add
ret
mov
jne
imul
outsb
test
add
mov
in
sub
lahf
lcall
sbb
push
das
call
pop
mov
movsb
sbb
cmp
in
xchg
mov
bound
ds
mov
cli
inc
lea
mov
xchg
mov
vpsllw
pop
pop
fists
js
mull
cmp
nop
adc
mov
pop
ror
mov
xchg
add
in
dec
popa
dec
out
aas
push
bswap
cltd
repnz
lods
push
push
xor
daa
ja
adc
mov
and
popa
stc
nop
xor
sub
mov
cmc
fcmove
sahf
mov
mov
int3
jge
cmp
cmpb
push
es
mov
push
lret
in
lds
pop
push
aad
std
fisttpl
push
lods
sbb
xchg
dec
out
xor
jge
mov
dec
push
jmpw
dec
or
adc
mov
push
cmp
andb
imul
mov
bound
adc
adc
cmp
xor
push
icebp
jecxz
or
into
and
push
cmpsb
jno
loope
cmpsb
cmp
jge
imul
xchg
arpl
inc
or
xchg
xor
xchg
das
mov
in
ret
and
cmp
pop
xchg
add
sbb
adc
aad
push
scas
loopne
faddl
jmp
mov
lret
xor
lods
jb
jg
into
cmc
mov
push
jbe
xor
xchg
dec
pop
or
dec
inc
push
daa
sbb
adc
dec
xor
cmpsb
add
adc
in
xor
decl
adc
adc
adc
push
pop
jae
mov
sub
xchg
mov
out
lcall
movsb
mov
add
mov
stos
ja
scas
mov
jecxz
rorl
add
std
loopne
adc
int3
mov
mov
sarb
dec
add
iret
lock
ljmp
lock
jp
inc
movd
cmp
test
jnp
movsb
push
xlat
adc
inc
jo
jl
push
sbb
sbb
mov
sarl
mov
jmp
xchg
dec
das
cmp
cmp
jge
sbb
push
lret
repz
mov
out
push
call
daa
hlt
arpl
jo
hlt
xor
push
pop
repz
push
jmp
adc
pusha
jno
lret
jne
xor
cmc
cmc
jno
jl
movsl
sarl
lahf
and
pop
inc
outsl
ficomps
adc
aaa
ja
mov
gs
sbbl
lret
mov
inc
and
cmp
xor
sub
loope
push
push
xchg
xchg
pop
adcb
adc
lock
xor
aaa
jg
jg
cld
add
xchg
unpcklps
sub
dec
in
movsb
and
lahf
adc
jne
adc
jecxz
in
mov
mov
push
add
outsl
bound
imul
fcomps
pop
lods
in
mov
fs
movb
repz
pop
sub
rcl
xor
cwtl
sar
lret
xchg
xchg
cmp
inc
test
xchg
inc
cwtl
inc
xrelease
loopne
insb
push
clc
ss
into
popf
fcomp
push
out
fisttps
add
mov
mov
js
and
and
cmc
xchg
xchg
sahf
leave
dec
push
iret
mov
adc
mov
cmp
aad
mov
out
push
dec
xor
mov
xchg
adc
fbstp
fnstenv
jo
mov
push
add
jge
fsubp
ret
aad
add
pop
mov
lret
mov
or
adc
add
mov
hlt
cmp
push
mov
push
scas
sahf
shlb
mov
insb
push
dec
subl
jbe
in
jge
sti
lcall
adc
pop
dec
push
sub
int3
sti
mov
push
sub
jae
shl
fistl
xchg
push
and
leave
mov
xor
xor
dec
push
mov
push
inc
dec
shl
clc
shr
dec
sbbl
loope
lret
xchg
jo
cs
clc
cmp
push
cmpsb
out
es
dec
adcb
call
and
push
sub
fsts
in
pushf
popw
test
adc
mov
inc
scas
and
mov
cmp
add
push
cmp
mov
and
push
pop
adc
and
out
arpl
fistl
fdivs
sbb
data16
inc
stos
fldt
test
adc
bnd
pop
or
xchg
xchg
xchg
adcb
repnz
sahf
movsl
dec
movsl
and
ljmp
sbb
rorl
inc
xor
or
jno
dec
outsb
sbbl
and
in
mov
add
or
lea
jmp
push
or
addr16
mov
mov
or
sub
das
sahf
push
xchg
lahf
insb
clc
rclb
rol
andl
popa
pop
iret
out
mov
jmp
sub
imul
pusha
xor
inc
adc
sbb
lret
bound
movsl
mov
xlat
jne
popl
push
std
inc
imul
sub
popl
xchg
xorl
mov
data16
jl
pop
pop
lods
in
dec
outsl
rorb
lock
rcr
inc
mov
fmuls
cli
push
push
mov
lods
test
mov
mov
lahf
push
pushl
decb
in
inc
stos
cmc
mov
xchg
sbb
xor
push
hlt
and
xchg
je
in
push
cmp
dec
cmp
adc
and
or
clc
adc
loopne
in
cmpsb
into
lods
mov
repz
mov
je
loop
xorl
xchg
sahf
outsl
out
jnp
fisubl
cmp
jg
mov
push
mov
cmpsb
pop
es
test
pop
adc
sub
sbb
hlt
push
push
push
imul
sti
xchg
xor
xlat
inc
mov
push
fimull
inc
nopl
std
add
jbe
inc
fnstsw
pop
cmp
ret
push
or
mov
xchg
xchg
shrl
mov
sahf
or
movsl
and
inc
mov
es
loop
jo
lds
ret
adc
aaa
or
fimuls
jmp
mov
inc
movsl
add
pop
sbb
add
leave
rcrl
cmc
in
or
mov
xor
repnz
ja
mov
jmp
add
out
xchg
xor
mov
pop
xor
pop
sub
int3
outsl
fbstp
mov
cmp
shrl
out
xor
and
ret
outsl
ret
mulb
cltd
add
mov
popf
mov
mov
stc
call
cmp
sarl
add
lret
xchg
jge
repz
shrb
out
xor
dec
add
xchg
mov
js
lock
fldt
pop
out
mov
incl
mov
dec
imul
xor
xor
movsl
push
imul
mov
test
or
push
adc
adc
sbb
push
or
mov
and
mov
subb
sub
mov
test
adc
and
push
stos
fiadds
and
pop
fwait
sbb
push
xchg
jmp
lret
aas
xchg
dec
mov
cmp
mov
ret
notb
mov
dec
push
fstpl
mov
test
nop
iret
adc
jg
fmull
jp
sbb
lock
lret
sub
fildll
insb
mov
pop
jmp
lock
jbe
pusha
xlat
ret
xor
call
inc
and
enter
push
adc
popa
movsl
inc
sbb
or
mov
jle
dec
lret
out
ja
aaa
lea
in
xor
loop
push
fwait
es
test
or
sub
adc
mov
jne
jle
pop
int
in
dec
std
aas
cwtl
push
aad
jmp
cli
loopne
adc
adc
push
iret
adc
xchg
dec
jae
sub
fnstsw
jno
fmul
inc
or
fidivs
cmp
inc
and
adc
mov
out
cmp
lahf
cmp
jle
jbe
xorb
das
mov
mov
and
lods
pop
jno
adc
jg
js
mov
inc
jmp
xor
cmpsb
cmp
nop
sub
sbb
xchg
jecxz
jl
sub
sub
call
mov
push
add
dec
in
cmp
sarb
scas
jg
dec
sub
daa
sub
push
repnz
and
xorb
ja
or
inc
jae
xchg
inc
push
in
in
mov
inc
pop
mov
ljmp
xchg
icebp
mov
js
xor
dec
push
scas
xlat
lret
sbb
icebp
loopne
mov
call
xchg
jmp
aas
push
fdivrl
in
sbb
cmp
push
push
add
inc
ret
outsb
cld
cltd
push
xchg
orb
inc
out
arpl
xor
stos
dec
sub
ss
ret
in
sub
dec
sbb
xchg
xchg
add
inc
xchg
cltd
pop
jmp
mov
repz
cmpsb
fucomip
or
aas
mov
jns
mov
mov
movsb
cmp
pop
jns
dec
push
sub
enter
jno
aaa
sub
inc
aad
mov
in
test
adc
mov
inc
imul
jg
movsb
mov
push
sub
clc
addr16
stc
push
xor
ds
jg
jp
aaa
je
loopne
pop
es
enter
js
push
test
dec
or
lahf
lds
cli
fmuls
dec
mov
sub
sub
jne
xchg
out
test
div
xor
sub
inc
lock
jbe
test
dec
addr16
or
push
cwtl
xchg
outsl
push
mov
std
xchg
movsb
inc
adc
out
sub
loope
xor
jg
out
out
pop
out
add
hlt
loope
aad
push
aaa
stos
inc
in
daa
jmp
and
pop
in
push
andl
sti
add
add
aam
xor
fcmovnu
sti
dec
push
mov
pusha
add
adc
loop
mov
lcall
adc
loop
pop
pop
ljmp
xor
adc
or
clc
cli
pop
xchg
jo
mov
push
sbb
js
add
mov
das
cmpsl
sbb
push
push
push
push
or
into
fisttpll
xor
and
sarl
in
in
or
jb
out
jbe
bound
and
sti
cmp
and
ds
xchg
push
repz
sub
out
icebp
test
push
adc
push
int3
mov
pop
sub
je
cmpsb
in
mov
aad
stos
mov
enter
xchg
xchg
jecxz
xchg
mov
inc
es
data16
xlat
pop
cld
sbb
pushf
mov
shrb
lods
popf
sub
int3
dec
inc
mov
fisubs
mov
outsb
sti
shll
rorl
push
jb
out
repz
clc
xor
mov
jae
inc
pushf
push
mov
adc
pop
nop
clc
cmp
clc
cmp
into
mov
mov
inc
nop
ljmp
jle
and
and
sub
inc
repz
aaa
hlt
int
sbb
pop
add
mov
daa
mov
lds
repz
fidivl
sahf
adc
data16
int3
lods
cmpsb
inc
addr16
dec
jns
ret
xchg
mov
cmp
xor
adcb
jnp
rorl
sub
sub
or
xor
shll
push
out
push
punpckhwd
pop
xchg
jb
dec
aam
in
ljmp
and
mov
popf
mov
jmp
repz
or
dec
into
push
inc
mov
push
and
sbb
scas
out
sbb
xchg
inc
xor
inc
jae
lea
push
aam
pop
dec
mov
sbb
shrb
xor
stc
test
mov
push
jae
jecxz
and
mov
mov
outsl
ja
out
aad
or
mov
mov
push
add
ds
aaa
pop
test
cmp
jle
imul
adc
sti
rcl
leave
inc
in
int
test
cmp
and
xor
test
test
aam
ljmp
cmc
sub
je
lods
popa
mov
test
jnp
adc
ud2
sbb
xor
mov
push
lret
cltd
sub
imulb
push
mov
pop
mov
icebp
nop
sahf
or
cltd
xchg
dec
push
and
fldl
or
mov
in
scas
dec
adc
dec
hlt
lds
out
pop
push
sbb
lock
gs
into
adc
xor
mov
pushf
cmp
push
jmp
pop
pop
lock
mov
cli
adc
imul
pop
or
insb
ret
mov
add
addr16
addb
mov
testb
cmc
adc
mov
sbb
adc
mov
je
cmpsb
insb
cli
and
ljmp
cmp
scas
packsswb
hlt
jno
pop
and
add
pop
xor
mov
jmp
sub
xor
xchg
sub
adc
xor
pop
dec
add
mov
adc
jg
imul
push
mov
push
and
pop
test
iret
lahf
enter
out
adc
sub
xor
loopne
sbb
xor
insb
outsl
sbb
add
hlt
lcall
pop
pop
or
hlt
test
pop
pop
fstpt
clc
dec
std
aad
sub
mov
push
rcrb
fwait
pop
lock
sbb
aas
cli
in
pop
sbb
jo
insb
mov
lods
pushf
sub
pop
xchg
lds
xchg
cs
call
mov
repz
xchg
lds
rolb
cmpb
addr16
push
sbb
and
jmp
daa
cltd
jecxz
inc
jmp
fs
bound
ss
xor
sbb
dec
incb
lods
or
sub
mov
mov
aaa
cmc
mov
xchg
aad
push
mov
stos
testl
mov
dec
aas
xorb
adc
fsubrl
movsl
outsl
bound
dec
mov
sbb
ficomps
mov
jbe
stos
jg
pushf
stos
in
mov
lds
outsl
xchg
in
sbb
jns
sub
es
inc
inc
inc
lock
sub
cli
push
dec
push
add
dec
fiadds
fs
sub
mov
fs
push
les
clc
xlat
jns
add
call
mov
cmp
and
dec
fdivl
loopne
jmp
inc
and
adc
xchg
js
icebp
xchg
aaa
ficoms
and
neg
push
sub
clc
jno
lock
pusha
xchg
pop
sti
cmp
or
adc
test
xchg
into
enter
fldt
mov
pop
adc
mov
or
hlt
imul
xchg
fsubrp
into
add
mov
sbb
jle
pop
pop
xor
outsw
cmp
mov
leave
into
loop
sub
jmp
adc
jmp
loopne
cmp
mov
mov
xchg
arpl
adc
mov
stos
repnz
scas
jbe
xchg
adc
push
popf
out
dec
pop
arpl
int3
call
out
mov
sub
fnstsw
inc
in
jb
iret
jp
imul
adc
dec
ret
inc
inc
loopne
aam
out
out
fsts
mov
lcall
cmpsl
lahf
dec
les
push
scas
push
loopne
outsb
rclb
pop
cmpsl
cmc
xchg
jne
pop
and
test
rclb
popf
popf
xchg
jne
mov
fcmovnu
aaa
dec
es
lret
mov
inc
pusha
push
lock
pop
les
mov
jl
test
jmp
lods
add
test
test
mov
subb
stos
push
or
push
jmp
push
shl
enter
cwtl
pop
test
mov
ss
and
inc
shrl
sahf
jg
sub
push
dec
daa
insb
call
testb
hlt
xor
orl
sub
mov
loop
sbb
add
adc
fimuls
cmp
add
and
push
and
and
sahf
sub
dec
cwtl
int
sbb
push
iret
das
mov
int
inc
sub
popa
mov
xchg
dec
pop
cmpsb
inc
filds
pop
sub
and
clc
adcb
ljmp
fidivrl
data16
out
push
mov
push
mov
add
ljmp
fistpl
push
mov
repz
dec
inc
mov
aas
mov
push
nop
dec
lahf
inc
daa
mov
xor
movsbl
repnz
insl
ret
xchg
and
mov
sarl
push
test
pop
sub
stc
je
dec
push
aaa
outsb
sbb
in
push
adc
adc
xor
fidivrl
adc
stos
xor
stos
loopne
mov
push
into
aas
fstpl
fdivrl
in
push
jbe
stc
xchg
adc
iret
add
repnz
insl
pop
xor
jnp
in
addr16
out
andl
and
jns
jecxz
xchg
mov
insb
push
das
js
adc
jl
popa
shlb
outsb
pop
sbb
xchg
push
imul
imul
jo
std
addl
imul
into
or
inc
sbb
leave
dec
mov
xchg
dec
das
jp
das
repnz
stos
jle
sbb
adc
adc
lods
adc
inc
xchg
dec
das
add
and
leave
dec
cmpsb
inc
add
mov
pop
sbb
jmp
decl
sbb
dec
popf
out
int3
sub
repnz
hlt
inc
mov
jge
sub
pop
and
lret
dec
cmp
push
or
push
cld
in
sti
jp
adc
xor
jecxz
jl
clc
movsb
dec
daa
mov
dec
xchg
adc
pop
lods
mov
sbbl
out
fisubrs
jmp
pop
lret
hlt
mov
push
pop
and
mov
popa
adc
in
imull
aaa
aad
cmpsl
jmp
adcl
xchg
pop
mov
xchg
test
mov
sub
mov
mov
xlat
ljmpw
pop
jne
sbb
popf
shr
add
addb
loop
and
shl
movsl
push
fs
mov
add
std
in
xor
jge
xchg
inc
sarl
mov
daa
test
cmpsb
cmp
das
hlt
test
sub
pop
xchg
dec
sahf
cmpsl
jl
fucomp
out
icebp
mov
adc
insl
test
push
push
mov
out
inc
leave
enter
dec
iret
enter
mov
xchg
mov
or
test
or
addl
filds
vpexpandw
mov
push
push
scas
sbb
repz
fstps
mov
push
mov
fs
and
push
xor
lds
jae
and
jmp
xlat
fwait
adc
test
or
push
sbb
int
aam
stos
rcl
sbb
mov
cmpsb
dec
in
cmp
mov
scas
hlt
leave
adc
fsubr
push
test
pop
jg
push
jnp
mov
loopne
sbb
jge
insb
lfs
xchg
mov
orl
dec
dec
push
add
or
xchg
pop
jl
mov
mov
xchg
fdivs
inc
in
sub
lods
cmp
push
loopne
sub
push
repnz
cmp
dec
mov
stos
fstl
aas
dec
rcrl
cmc
daa
mov
jl
mov
imul
loopne
sbb
aas
and
cmp
mov
cld
mov
cmpl
xor
sub
movsl
adc
push
mov
sarb
out
int3
mov
push
push
pop
adc
es
movsb
xchg
xor
icebp
sbb
shlb
test
push
jmp
loop
inc
fnstcw
leave
adc
push
adc
test
adc
ljmp
mov
xchg
dec
out
push
jne
mov
push
pop
mov
stos
push
ret
ds
jecxz
negl
enter
outsl
xor
inc
sub
mov
aam
push
jg
jnp
mov
sbb
sbb
adc
addl
std
xchg
addb
pop
scas
jae
sbb
pop
imull
jp
dec
push
repz
push
jle
cmp
jp
pop
test
lret
push
in
cwtl
dec
xorl
mov
sbb
xor
xor
xor
ret
outsb
xor
fiadds
push
inc
cltd
test
leave
pop
sbb
dec
cmp
and
pusha
test
sub
cwtl
clc
mov
jl
mov
pop
lods
les
jmp
movsl
sbb
test
push
push
loop
or
aaa
push
clc
stos
mov
mov
push
sahf
or
jecxz
ljmp
cltd
adc
adc
jbe
mov
sbb
out
adc
cmp
aas
das
inc
lret
mov
inc
ficomps
dec
lods
mov
ja
clc
icebp
out
nop
outsb
jge
mov
lods
jns
and
popf
mov
fdivrl
sahf
bound
mov
int3
out
subb
xor
arpl
push
repnz
xchg
dec
jl
rorl
or
sub
mov
pop
outsl
jg
test
xor
imull
mov
pop
sbb
enter
xchg
mov
mov
aam
out
arpl
mov
mov
pop
stos
xchg
hlt
pushf
sbb
and
or
aas
mov
stc
xchg
cs
inc
add
sahf
das
stc
test
mov
jae
pop
mov
jb
ds
cmp
nop
cmpsb
sbb
dec
xor
fxch
adc
jmp
push
call
pop
jb
and
mov
pop
popf
inc
daa
mov
pop
adc
test
test
xchg
cli
mov
int3
push
jnp
into
inc
mov
int3
jno
in
sub
jbe
data16
push
dec
mov
xchg
iret
daa
js
jge
and
push
insb
push
mov
lock
dec
sbb
jns
repnz
mov
insl
aas
mov
dec
hlt
inc
scas
inc
mov
sbb
add
mov
jge
scas
jecxz
lret
xchg
notl
fs
stos
test
loope
jg
or
arpl
dec
testb
dec
inc
lret
lcall
inc
xchg
into
xchg
push
call
or
pop
pop
cmp
add
stc
mov
sbb
ja
cmp
mov
cmp
shll
jnp
add
call
pop
scas
nop
mov
mov
pop
adc
adc
sub
mov
dec
leave
cmpsb
outsl
fcomps
push
loopne
mov
or
incl
dec
sub
mov
mov
push
adc
das
or
add
fcmovnu
andl
dec
or
aas
xor
sbb
push
pop
ja
mov
add
jle
pop
lret
cmp
push
fyl2xp1
dec
adc
ret
call
rcrb
out
or
mov
popf
stc
daa
push
and
mov
mov
call
push
add
mov
mov
fwait
jg
in
cmp
popf
stc
mov
cli
mov
divl
xchg
sbb
jg
pop
sbb
ret
loope
rcrl
das
sarl
in
ret
dec
in
fildll
jne
xor
jno
sarb
pop
add
leave
dec
add
push
dec
xor
sub
movsb
and
loope
cmp
data16
ret
or
pop
lret
ffree
call
fsubrl
and
idivl
xchg
and
mov
mov
stos
xchg
ficoms
cmpsb
jne
dec
test
dec
fcmovne
dec
es
lods
divl
cmpb
add
or
out
sahf
pushf
shr
xor
fld
negb
adcl
mov
push
xor
lahf
sub
mull
into
xorb
rcl
flds
pop
shl
push
clc
imul
push
mov
adc
cmp
mov
xor
push
inc
mov
and
shrl
add
je
jmp
mov
mov
ss
faddl
std
jmp
das
pop
add
outsb
pusha
mov
popf
pusha
or
ret
dec
sti
movsb
ja
sahf
and
icebp
sub
inc
and
fildl
and
mov
ljmp
push
and
push
or
jmp
scas
pusha
dec
sub
inc
xchg
inc
std
sub
bound
sbb
cmpsl
xor
xchg
pop
mov
call
js
inc
mov
pusha
subl
pop
imul
push
mov
cmp
sti
inc
mov
mov
sbb
xor
dec
xchg
xchg
xor
mov
push
inc
filds
mov
adc
push
loop
movsb
mov
jnp
pop
jnp
add
pop
scas
dec
inc
xorl
jmp
mov
mov
ljmp
cmc
lahf
push
and
shrb
stos
push
es
cli
in
in
daa
in
pusha
pop
je
scas
shl
scas
mov
stc
testl
sbb
loope
shll
fcmovne
xor
sbb
cmp
call
jge
lds
xor
fildll
pop
xor
jnp
stos
xchg
int3
out
scas
jmp
xchg
les
adc
pop
cmpsb
adc
shrb
xchg
mov
adc
mov
mov
jg
or
fsubr
test
hlt
lret
adc
push
or
pop
je
orb
xchg
fsubrl
mov
pusha
xchg
je
and
push
call
xor
mov
lahf
mov
ret
dec
clc
pcmpeqb
in
push
inc
ficoms
push
insl
sbb
mov
xchg
test
push
fdivrl
xchg
xchg
add
xor
roll
jl
lret
xchg
div
mov
jl
rolb
ds
jo
lods
insl
mov
sbb
add
mov
lcall
jmp
ret
movsl
call
sbb
gs
mov
cmp
imul
adc
ljmp
clc
lcall
xor
lcall
repz
js,pt
sar
and
push
fisubrs
or
in
push
divl
dec
and
sub
xor
in
out
xchg
push
movsb
add
lods
push
dec
mov
repz
inc
adcb
addr16
inc
sbb
je
dec
mov
popa
jo
test
adc
cmc
sti
xor
add
and
leave
lcall
cmc
cmp
outsl
or
sahf
orb
cmpsl
sarb
mov
cs
aas
xchg
cmp
mov
xor
imul
addr16
lret
sbb
jle
pop
lcall
xor
sbb
jl
add
mov
mov
or
add
xchg
cmp
xchg
jge
push
push
sbbl
cwtl
mov
xor
and
pop
mov
call
stos
adc
out
fmuls
cmp
lcall
jne
mov
fwait
sbb
fldenv
pop
pop
xchg
pop
clc
jecxz
rorb
pop
sub
aaa
pop
movups
cmpsl
jmp
mov
ja
sbb
xchg
aam
mov
popf
das
dec
fadds
dec
and
sbb
out
ss
mov
and
dec
pop
mov
outsl
daa
push
add
repz
fsubl
push
push
pop
jbe
shr
mov
mov
mov
loop
ljmp
or
inc
movsb
arpl
jne
mov
xchg
adcb
or
scas
sbb
jmp
stos
into
rcl
subb
popa
mov
imul
pop
mov
ss
mov
xor
xor
inc
stc
cmc
shrd
repnz
push
or
cmpsl
lret
jg
or
dec
jmp
pop
xchg
outsb
mov
pop
dec
ret
in
test
cmp
clc
mov
or
aam
mov
xor
xor
mov
ja
test
pop
movsb
rcr
enter
insl
stos
lcall
loopne
test
mov
das
mov
mov
lds
or
loop
sahf
out
std
dec
push
xor
stos
push
jae
xor
adc
cmp
dec
mov
fdivl
cld
and
testb
pop
test
adc
dec
add
dec
adc
xchg
inc
sub
movsl
pusha
or
sub
shr
or
jmp
push
jge
dec
out
push
lret
or
cmpsb
sbb
clc
sbb
adc
xor
push
leave
stc
add
mov
adc
test
mov
cmp
jp
xor
cmc
sbb
mov
ja
xor
xor
aas
or
fidivl
nop
jnp
das
test
sbb
insl
xchg
fstl
sarl
pushf
fcomps
scas
bound
dec
in
adc
lods
adc
fisttpl
jg
lahf
xchg
sub
sbb
dec
jmp
push
push
into
sub
sub
pushf
push
leave
rorb
push
call
cltd
sub
add
addl
cmpsl
jmp
pushl
add
cmpsb
mov
add
mov
cltd
sbb
iret
add
mov
jno
test
aam
xor
enter
hlt
mov
or
in
add
int3
out
push
adc
jmp
fldt
pop
pop
shll
add
nop
cmc
or
add
daa
stos
adc
lret
repz
daa
insl
xorb
cmp
out
int
rcl
shll
and
xchg
or
fdivr
pop
push
sub
pop
mov
sub
mov
pusha
adc
or
out
jb
push
pop
lds
xor
std
and
imul
mov
clc
cmpsl
sub
cltd
adc
jbe
jle
into
movsl
sub
dec
and
or
aaa
jo
jecxz
sbb
mov
inc
mov
shll
negl
or
push
add
lock
aaa
xchg
mov
leave
sub
jns
ret
push
jl
jb
in
outsb
pop
xchg
leave
sbb
xor
jle
andb
dec
jle
je
fldl
mov
dec
mov
mov
adc
pop
stc
cltd
add
iret
jmp
insb
mov
mov
es
sbbb
adc
ds
push
movb
imul
push
in
addr16
dec
inc
push
shrb
in
adc
jle
push
push
sbb
lea
movsb
and
fidivrs
push
clc
mov
dec
insl
arpl
mov
pop
add
jae
pop
jne
mov
lret
call
cmp
inc
dec
scas
mov
xchg
or
ret
cmp
pusha
or
xor
pop
iret
lret
xor
xor
dec
test
pop
pushf
bound
xor
addr16
jecxz
add
jle
leave
inc
jge
or
in
push
inc
lods
push
and
pop
repz
adc
ss
dec
push
cld
daa
sbb
stos
inc
shlb
adc
sbb
clc
aam
cld
pushl
icebp
loop
repz
cmp
adc
cmpsb
aaa
cs
push
js
out
ljmp
repz
xor
sbb
add
outsl
mov
loope
jmp
out
insb
dec
jge
sbb
bound
inc
cmp
pushf
sub
stos
dec
lods
xor
mov
mov
add
sbb
fnstcw
cld
xor
jp
stos
lcall
lock
mov
mov
cltd
aam
popf
pop
mov
popa
or
std
sub
gs
sub
call
mov
and
cmpsb
push
sub
int
mov
mov
dec
sub
sub
rclb
int
inc
repz
xchg
dec
popf
stc
iret
mov
dec
lods
adc
inc
jne
test
push
lret
movsb
clc
sub
sub
out
pop
cltd
cmp
adc
add
inc
and
mov
out
syscall
cltd
push
imul
andl
push
repnz
movsl
sbb
jmp
in
jae
lahf
adc
mov
or
pushf
pop
dec
aad
outsb
andl
add
sbb
aaa
outsl
mov
int
aaa
pop
ljmp
jo
lahf
sahf
daa
sbb
stos
mov
sahf
out
lret
scas
shll
test
cwtl
sbb
test
mov
int3
pop
sbb
mov
xchg
and
es
fcmovu
mov
mov
xchg
insb
fistpl
xor
mov
icebp
mov
mov
mov
int
inc
enter
pop
inc
ss
pusha
test
and
cmp
cmp
add
mov
sbb
and
jno
xor
frstpm(287
adc
mov
xchg
fists
add
or
aam
sbb
in
pop
xlat
jmp
fistpll
mov
jge
push
and
mov
dec
cltd
int
xor
push
jge
pop
mov
jp
mov
adc
in
push
das
iret
jo
pop
clc
pop
jne
movsl
pop
mov
arpl
mov
rcrl
sbb
push
mov
outsl
pop
push
mov
and
ds
mov
or
add
fldcw
ss
imul
or
test
and
aaa
loop
jno
arpl
add
nop
pop
add
js
mov
lds
sub
xchg
inc
in
jle
dec
or
pop
mov
jp
aaa
ljmp
in
mov
shll
mov
iret
push
clc
scas
add
punpckhdq
imul
mul
sub
dec
adc
out
push
fwait
sahf
mov
dec
xchg
mov
xchg
pop
sahf
push
mov
add
dec
movl
ret
push
dec
out
inc
loopne
dec
or
add
stc
xchg
push
ret
push
imul
cmp
fnsave
pusha
inc
sbb
xlat
out
jno
cli
dec
xor
mov
xchg
lahf
xor
leave
xchg
das
adc
js
mov
push
insb
fwait
push
mov
outsb
dec
or
add
ss
sub
xor
or
aas
xchg
jecxz
xor
mov
loope
addr16
loop
mov
sub
pop
lret
ja
loopne
clc
mov
data16
mov
pop
pop
shll
add
cmpsl
sbb
mov
aaa
aam
cmpsb
mov
mov
or
into
cmp
dec
sub
add
or
cmp
out
enter
daa
add
int3
icebp
movsb
mov
mov
and
mov
mov
out
pop
cltd
xchg
data16
call
imul
lock
rcll
or
je
mov
xor
cmpsb
ds
xchg
xor
jo
stos
pusha
push
adc
jns
test
jo
mov
lret
cmpsb
cmp
shlb
mov
xchg
cmp
je
jno
ss
cltd
xor
mov
cmpsl
jg
repz
or
or
outsb
push
inc
ljmp
loop
fildll
mov
xchg
test
sbb
inc
cmpsl
aad
stos
stos
push
lods
add
shlb
js
mov
cmc
out
jae
sarl
in
lods
stc
cld
inc
iret
and
test
and
pop
lods
xchg
je
dec
dec
and
mov
insb
inc
les
inc
fs
sub
movsb
popf
enter
xchg
xlat
push
fst
jbe,pn
add
mov
xchg
pop
mov
pop
addr16
push
push
or
pop
xchg
push
push
pop
sub
jecxz
lcall
out
insb
xchg
add
push
or
inc
pop
insl
lods
inc
test
sub
mov
out
arpl
dec
push
mov
cltd
lss
pop
scas
test
in
sub
sbb
outsl
sbb
fnstenv
pop
xor
xor
xchg
mov
icebp
in
cmpsl
mov
dec
dec
dec
shrl
jo
pop
mov
fwait
add
sub
dec
movsb
lds
je
inc
shl
cmpsb
jo
aas
jp
cmp
add
aaa
pop
add
shlb
or
sub
push
sti
mov
dec
sbb
cmpsl
out
mov
outsb
dec
mov
pop
movsl
xchg
add
jge
cli
mov
sbb
aam
mov
clc
or
add
pusha
rcl
les
mov
jns
gs
jl
call
mov
jge,pn
or
sub
test
scas
pop
add
mov
and
in
or
add
pop
dec
es
cmp
jnp
psubq
int
and
shrl
mov
in
lahf
test
and
cmc
decl
loopne
mov
sub
xchg
loopne
jno
mov
xor
inc
fcmovnbe
xchg
fmull
mov
xchg
popf
imull
jle
jl
bound
mov
mov
mov
call
lods
pushf
hlt
push
mov
dec
in
and
add
frstor
test
aad
mov
enter
sub
pop
shrl
insb
fisubrl
sub
std
sti
xor
mov
fimull
clc
sub
mov
daa
lahf
mov
inc
sbb
push
jae
cmp
mov
pushf
jnp
cmp
sbbb
imul
push
loopne
xchg
sbb
sbb
mov
mov
outsb
jp
shrl
ret
xchg
cmpsb
and
popa
cmp
xchg
mov
xor
dec
lods
xchg
and
xchg
out
push
push
inc
jle
dec
aas
adc
xchg
inc
lahf
ret
fisubrl
inc
stc
and
stos
repz
mov
hlt
outsb
sbb
cmpl
and
mov
sbb
into
cmp
std
inc
stc
xchg
stc
or
loopne
outsl
dec
dec
xchg
inc
cmp
pop
cmp
mov
loope
ss
mov
test
push
xchg
repz
lret
sbb
nop
mov
sbb
sbb
dec
addb
fs
sub
lea
test
mov
bound
ret
sub
cs
dec
mov
mov
inc
lods
fsub
insl
and
xor
bound
cltd
pop
jecxz
loop
cmp
or
movsb
or
scas
xchg
test
mov
jle
int
and
ds
shr
aas
mov
fcompl
in
hlt
movsb
cmc
pop
outsl
push
sahf
dec
fistpl
cmp
adc
insb
sbb
jo
cmpsb
iret
shrb
or
sbb
notl
xchg
shrl
test
cmp
xchg
add
sbb
or
push
rcll
scas
or
outsl
dec
cld
jg
mov
mov
out
inc
pop
jb
ret
adc
ja
sub
cmp
rcrl
adc
loop
js
in
pop
pop
in
push
cmp
push
rorl
jbe
rolb
mov
jmp
loope
mov
inc
test
mov
push
imul
aas
test
cmp
enter
icebp
mov
dec
mov
inc
mov
mov
push
mov
pop
enter
pop
out
mov
cli
imul
pop
hlt
mov
mov
shl
mov
pusha
test
out
out
scas
fiadds
adc
xor
xchg
fstpt
clc
mov
jle
xchg
out
push
add
inc
xchg
insb
fcompl
pushf
jmp
stos
cmp
ja
arpl
pop
add
push
inc
mov
mov
shlb
mov
aad
outsl
pop
push
out
push
push
stc
je
dec
cwtl
push
inc
idivl
cmp
add
outsb
xor
and
or
push
popa
mov
popf
dec
lods
scas
sub
cs
jb
mov
rcrl
lods
sbb
sbb
mov
cld
push
or
cltd
dec
fnstcw
loop
jb
in
pop
xchg
sbb
dec
dec
dec
cmpsl
push
sbb
mov
xchg
pop
jg
jmp
shl
sarl
mov
addl
subl
out
sbb
out
inc
pop
fnstenv
cs
das
adc
outsb
andb
mov
jnp
mov
sti
jbe
mov
movsl
fnsave
mov
cmp
adc
mov
fcomi
push
mov
push
mov
push
dec
out
mov
adc
mov
inc
or
insb
pop
mov
mov
std
add
addr16
adc
sbb
les
popf
test
jp
scas
add
push
mov
repz
insb
pop
dec
test
lcall
jmp
int3
and
outsb
ret
negl
pop
sti
dec
fidivrl
or
and
mov
icebp
test
xor
cmp
dec
inc
jmp
cltd
out
jns
in
nop
mov
movsb
sub
mov
jno
dec
mov
sbb
nop
lods
xor
xchg
lods
adc
repnz
in
ds
dec
scas
mov
cli
jae
inc
fisubrl
enter
xchg
dec
dec
mov
arpl
mov
scas
cs
lods
pop
stos
dec
rolb
loopne
lahf
pop
push
mov
dec
push
testl
jo
test
popf
pusha
in
call
pop
push
inc
out
fs
arpl
cwtl
mov
sti
mov
mov
and
xchg
in
ljmp
or
iretw
xchg
sub
lret
mov
xchg
dec
ret
fdivrs
and
adc
sbb
js
xchg
cmpsl
movsl
xor
jge
push
push
leave
mov
clc
fchs
sbb
stc
push
roll
lcall
jne
mov
imul
xchg
imul
jno
push
sub
scas
jecxz
mov
subl
mov
int
xor
adc
rorl
sub
je
inc
iret
data16
sbb
nop
add
stc
insb
push
outsb
mov
cmpsb
mov
shll
ret
repnz
cmp
mov
dec
cmp
imul
cmpsl
cmc
xchg
lods
mov
aas
sbbb
inc
mov
gs
push
daa
lahf
arpl
cmp
cmp
stos
dec
in
ret
inc
push
imul
jb
adc
repz
adc
pop
sbb
lahf
data16
mov
xchg
ret
inc
inc
pop
mov
pusha
popf
fistps
mov
leave
adc
call
icebp
nop
rcrb
aas
aam
lock
data16
xlat
fsubrl
fldenv
arpl
cwtl
ljmp
test
mov
push
js
jmp
cmp
out
or
jo
imull
xchg
fidivrs
pop
sbb
movsl
idivb
pop
push
dec
movsb
mov
cld
pop
xor
mov
xor
test
jno
jmp
lea
jns
pop
push
jb
dec
adc
scas
sub
pushf
pushf
iret
cmp
adc
xor
jo
test
out
ret
push
mov
jne
mov
test
xor
repnz
xor
mov
ret
adc
leave
mov
dec
add
mov
fcmovb
jl
mov
pop
enter
adcb
idivl
ret
into
jge
mov
in
ja
js
arpl
inc
clc
popa
sub
mov
adc
aam
xchg
sub
das
inc
pushf
mov
testl
mov
scas
dec
addr16
iret
adc
lods
mov
fmuls
xchg
adc
loopne
xchg
nop
std
or
add
out
mov
call
lock
je
inc
mov
pop
notl
pop
in
pop
xchg
movsl
cmc
popa
enter
or
xchg
dec
add
iret
inc
cmp
xor
cli
repnz
mov
fsts
ja
mov
subb
push
cmp
dec
in
call
jne
int
add
rep
pop
fldenv
subb
leave
lret
cmpl
decl
xor
sub
cmp
hlt
cld
mov
hlt
cmpl
inc
sub
mov
adc
pusha
mov
mov
mov
cmp
sbb
in
mov
cwtl
andb
xor
ja
xchg
inc
pop
sahf
xlat
cmp
fstpt
lock
xchg
mov
in
mov
imul
fmulp
shll
cmpsl
pop
add
cmp
cmc
inc
sub
mov
loopne
imul
mov
cmp
call
lods
mov
popa
pop
das
fbld
roll
bound
shll
xor
push
js
or
xchg
sahf
les
add
lahf
xor
mov
sub
dec
sub
imul
jne
adc
inc
test
jg
test
enter
jb
mov
rclb
mov
fisttpll
inc
inc
cmp
bound
ja
and
xchg
mov
movsb
jns
fisubl
sbb
or
add
loope
rcll
mov
dec
cmp
jg
aad
cmp
in
insb
add
pop
xchg
fistps
out
ljmp
pop
and
xor
or
stos
push
adc
or
adc
ret
jo
xchg
es
push
cmp
mov
add
cmp
mov
and
jo
inc
gs
imul
hlt
cmpsb
insb
cmc
cmp
pop
jl
xchg
jb
stc
call
imul
shl
enter
outsl
rcll
idivl
pop
push
dec
insb
iret
mov
je
and
and
sbb
jmp
lods
stc
sub
push
jle
jecxz
push
mov
push
shrb
stos
and
xchg
test
push
fisttps
jb
scas
xchg
xchg
sub
push
sbb
pusha
push
mov
mov
lret
loopne
dec
int
dec
bt
ret
cmp
sbb
daa
nop
cmp
inc
js
mov
ds
scas
dec
push
loopne
les
cmp
dec
jge
fwait
sbb
insl
xor
in
or
cmp
jl
stos
jg
cmp
inc
sti
jo
into
jp
xchg
cwtl
outsb
sbb
jge
mov
fsts
loop
outsl
jne
sub
pop
or
dec
inc
mov
repz
sbb
jp
sub
mov
mov
subb
and
insl
adc
aas
or
movsb
aas
push
ss
ds
mov
and
movsb
adc
pop
mov
inc
loope
xchg
inc
sbb
inc
out
scas
jmp
das
push
int
dec
or
mov
push
mov
xor
add
mov
sub
rolb
hlt
ja
cmp
pop
jne
add
popa
xchg
and
test
fnsave
push
dec
cmp
pushf
mov
pop
lock
sbb
mov
xor
xor
dec
andl
jecxz
lret
push
insb
rolb
test
or
popf
jle
add
mov
dec
mov
flds
xchg
mov
enter
in
pop
sub
pop
lret
lods
jb
into
and
lea
push
sbb
push
xchg
imul
push
lahf
fs
arpl
scas
movsb
adc
mov
pop
jbe
aam
jle
lock
or
pop
push
mov
loope
rolb
push
sub
mov
dec
nop
pop
xchg
arpl
jno
call
test
adc
cmp
or
mov
loop
in
lea
lcall
mov
cmc
fbstp
xchg
addl
xchg
stos
jno
pop
rcl
aam
xchg
ds
add
push
icebp
adc
push
dec
nop
mov
rorl
out
push
shl
mov
cwtl
mov
push
mov
icebp
loop
cld
cmpb
clc
lret
jmp
or
stos
rorb
mov
sti
pop
shll
mov
pop
jae
shlb
cmp
into
rcrb
insl
dec
mov
bound
mov
jo
daa
mov
call
add
imul
or
sbb
pop
insl
jo
sti
mov
call
test
es
xchg
xchg
bswap
lret
icebp
xchg
popa
icebp
jne
leave
dec
add
sub
mov
loop
lea
cmpsl
cmpsl
test
into
into
cmp
sbb
add
adc
inc
insl
std
inc
jno
addb
add
sbb
and
and
inc
ss
popf
test
sub
out
in
and
and
mov
loop
and
mov
sub
adc
movsb
xor
faddl
sub
leave
loopne
push
fildll
xchg
xchg
push
jb
jg
fists
jne
lcall
inc
push
les
xchg
outsl
aad
dec
stc
xorl
dec
xor
pop
pop
aad
pusha
test
push
and
xor
mov
cld
xchg
sub
jge
lds
rcrl
mov
xchg
mov
sbb
ljmp
mov
aaa
mov
dec
inc
inc
jne
test
sbb
adc
orl
push
push
push
mov
in
cmp
leave
adc
icebp
mov
push
sub
sbb
in
cwtl
ret
jno
fstpl
mov
lods
xchg
cwtl
ds
subb
pop
sbb
push
mov
mov
push
popl
inc
cmp
les
out
test
dec
xchg
shll
inc
push
jg
sub
sub
into
nop
mov
imul
push
add
ljmp
out
mov
jb
insb
lods
movsl
inc
xor
and
pop
xchg
cld
std
cmp
shlb
sub
fists
cmp
je
jmp
sbb
repz
cs
sti
cmp
jmp
repz
cmp
cmp
stc
inc
push
js
mov
insb
pop
xchg
lret
cmpsl
cs
fwait
mov
mov
or
pop
sbb
pop
adc
sbb
sub
adc
sub
test
add
data16
jmp
mov
fwait
or
or
push
sbb
dec
add
and
loopne
pop
mov
cmp
popa
jno
pop
je
jl
lock
pop
xor
ljmp
sbb
jno
adcl
adcb
mov
cwtl
mov
adc
mov
pop
sub
leave
insb
inc
inc
adc
loop
mov
push
or
ja
pop
shl
mov
pop
ja
shl
pop
ds
addb
adc
mov
adc
and
and
nop
push
daa
loopne
bound
loope
cmp
add
push
pop
fmull
add
stc
add
sbb
cmpsl
insb
dec
jbe
andb
mov
jmp
pushf
or
cmp
dec
aam
jmp
push
and
fcoms
sub
int
cld
hlt
pusha
cmp
rcrl
fwait
and
ret
jge
sahf
lock
dec
jle
iret
repz
shlb
push
push
pop
imul
adc
mov
popf
lods
cmp
mov
mov
mov
pop
ror
jno
mov
sbb
xor
or
int3
jmp
jnp
xchg
outsb
mov
push
jne
call
add
mov
pusha
cmpsb
ljmp
pop
into
mov
cmp
lahf
mov
nop
lret
push
fcmove
movsl
shl
lea
shlb
test
inc
xlat
call
adc
hlt
shl
pop
mov
jle
mov
das
cld
inc
mov
imul
arpl
xchg
inc
sub
inc
rcrb
jbe
icebp
loop
movsb
adc
push
js
and
inc
test
jo
dec
call
push
mov
mov
pop
cli
or
inc
push
adc
adcb
dec
fists
subb
cltd
call
ja
into
xchg
jno
or
in
add
fisttps
fdivl
pop
mov
lcall
and
out
push
cld
mov
sbb
sbb
cmpsl
xchg
jp
cmp
push
ja
js
sti
inc
inc
sbb
or
dec
mov
test
sub
jg
ss
mov
mov
fwait
cmp
mov
jp
pop
test
jecxz
jb
in
pop
add
xor
mov
xchg
lea
cmp
cs
inc
iret
cs
add
fstps
nop
es
push
push
sbb
add
and
stos
push
cmpsb
aam
movsl
rorl
das
inc
sub
stc
cmp
stos
xor
aad
sub
mov
lahf
popf
repnz
shll
inc
add
lcall
push
insb
cmp
fmuls
xchg
cmpsl
add
shrb
icebp
cmpl
sbb
int
xchg
ljmp
stos
push
jmp
mov
lea
adc
inc
addl
ljmp
push
iret
sub
cltd
push
pop
call
fnstsw
fdivs
inc
aas
imul
add
xorb
jmp
out
push
push
loopne
xchg
mov
aaa
xchg
adc
neg
lods
jns
dec
jmp
xchg
decl
jle
fldenv
sti
and
cli
pop
sbb
inc
push
jo
into
jecxz
dec
idivl
add
jnp
xor
cmp
mov
lcall
out
loop
inc
xchg
or
enter
pop
cmp
icebp
sbb
pop
push
jno
sub
gs
je
ss
dec
lods
mov
push
push
sbb
loopne
pop
jb
xor
add
cmp
repnz
sbb
test
pop
adc
stc
imul
lret
inc
inc
xor
adc
adc
popf
sbb
adc
xor
mov
xchg
sar
dec
mov
pop
dec
data16
push
subb
and
lock
xor
cmpsl
lahf
cli
scas
jmp
js
std
sub
loopne
call
cmp
adc
mov
mov
outsb
push
and
pop
pusha
mov
push
enter
sub
sbb
cs
jecxz
icebp
std
or
pop
jl
ficompl
loope
and
test
repnz
js
push
xchg
mov
sahf
in
dec
sarb
jmp
insb
or
mov
add
insb
nop
pop
jle
les
scas
mov
data16
ds
andb
movsl
es
fnstsw
push
pushf
and
xchg
sub
xchg
movsl
frstor
sahf
mov
outsb
rol
outsb
rcr
push
mov
lret
xor
mov
mov
cli
inc
decl
sahf
mov
or
cs
cmp
mov
cwtl
in
dec
or
add
sbb
imul
sub
mov
sub
pusha
popf
push
jnp
xchg
jge
leave
push
ret
fdivrs
and
push
cs
add
out
ds
insl
arpl
es
lds
cmpsb
call
stos
ret
fwait
call
mov
mov
imul
es
sbb
jecxz
and
jmp
pop
cmp
lods
dec
inc
mov
jecxz
jb
leave
ss
pop
outsl
fwait
movsl
orb
push
notb
dec
dec
xchg
mov
pop
xchg
xor
stos
rcrb
adc
mov
fs
adc
and
lods
inc
inc
out
lods
divb
sbb
ret
les
mov
test
faddl
pop
or
bound
test
inc
or
fmull
imul
rcll
sub
rcl
mov
movl
inc
adc
cmp
add
mov
data16
sbb
icebp
jg
mov
ja
cmp
divl
mov
and
sbb
js
push
xchg
dec
mov
lahf
dec
popa
iret
or
mov
test
xchg
aaa
jbe
mov
sub
arpl
addb
adc
mov
dec
sarb
sahf
adc
das
cmc
jge
in
data16
mov
cmp
jnp
cmp
mov
push
push
push
loop
js
int3
adc
jo
or
test
cmc
jne
inc
mov
ret
iret
mov
rcll
insb
data16
mov
and
cmp
mov
mov
add
daa
or
xlat
or
mov
push
ret
or
sbb
ss
sub
lcall
leave
add
mov
and
test
push
mov
add
xchg
in
mov
test
in
mov
cmp
pop
add
subl
hlt
popf
pop
push
sbb
jmp
repnz
data16
jecxz
mov
insl
inc
mov
sarl
cs
mov
cmp
iret
popf
ds
fidivs
in
sub
jg
cmpsb
ljmp
xchg
or
ret
inc
or
xbegin
mov
fs
fimuls
inc
out
mov
fs
xor
in
push
sti
std
popa
icebp
or
or
mov
out
inc
xchg
xor
or
pop
sub
pusha
in
out
pop
xchg
out
loope
dec
lods
push
aas
xchg
cmpl
adc
es
cs
and
popa
shlb
xor
cmpsl
loopne
mov
jo
adc
and
shr
adc
sbb
test
push
outsb
jmp
pop
adcb
cmpsl
cld
adc
add
nop
push
or
and
pop
mov
or
cmp
cmp
xchg
mov
and
inc
inc
outsl
xchg
pop
lret
mov
mov
nop
movsl
sbb
call
popf
mov
test
repz
add
repz
inc
loop
enter
dec
ja
mov
cmc
xchg
lcall
cli
shll
sub
lods
jnp
je
xor
dec
cld
cmpb
rcrb
jb
and
cltd
out
scas
xor
push
inc
outsb
pushf
or
mov
ljmp
insb
out
js
cld
das
gs
data16
add
sahf
xchg
jle
or
cltd
adc
clc
daa
cwtl
ror
add
out
test
lds
xor
sbb
jl
fmull
ror
js
push
mov
hlt
js
mov
inc
popf
push
rolb
pop
and
cmc
sbb
nop
lods
ja
test
jb
push
xchg
cmpsb
push
jno
xor
jle
addr16
stos
and
or
das
xor
in
fwait
mov
lret
cltd
out
leave
sbb
xlat
repnz
inc
xor
jb
dec
enter
cmp
stc
adc
pop
pop
fwait
mov
cmp
pop
fstps
shr
je
or
sbb
lret
cmp
fld
xor
pop
mov
cmp
dec
mov
dec
cmp
mov
push
movsl
pop
cmc
cmp
fbld
push
rolb
imul
push
mov
or
fsts
cmc
pop
xchg
jb
in
aam
xchg
gs
jg
and
fucomi
rcr
pop
negl
xchg
outsb
ret
pop
xor
dec
dec
jecxz
out
push
jno
rclb
mov
jo
push
clc
jecxz,pt
clc
jns
sbb
mov
clc
push
cld
sub
push
xchg
in
das
ret
mov
mov
aad
hlt
scas
mov
and
shrl
ret
mov
imul
int3
fs
jne
fwait
adc
das
sub
dec
mov
ljmp
gs
mov
sarb
inc
xor
cmpsb
es
xor
sub
add
xor
div
mov
push
and
inc
in
jne
adc
lret
rclb
leave
xor
cmp
push
or
push
lods
pop
pop
dec
popa
into
shrl
call
int3
or
std
test
loop
inc
cmp
cmp
cli
filds
jb
dec
scas
xchg
ss
push
inc
les
mov
in
xchg
add
dec
popa
daa
adc
pop
sub
nop
popf
adc
mov
mov
int
in
fimull
mov
mov
add
pop
es
xchg
jno
mov
mov
sahf
lock
mov
idivb
pop
lret
jnp
sbb
or
aas
sub
mov
sub
push
call
leave
jg
jb
and
inc
dec
mov
mov
nop
mov
mov
test
mov
push
aaa
shl
mov
jmp
jo
jae
xlat
add
cmp
xlat
jns
stc
ljmp
mov
cmp
inc
lret
lcall
add
test
addr16
jmp
xchg
push
or
lock
add
sub
fsubrl
inc
aaa
sti
xor
xchg
cmpsb
rcl
cmp
insb
loop
pusha
push
lds
fxch
pop
arpl
sub
scas
mov
in
jne
in
lret
out
push
xorb
add
mov
and
idivb
xor
sbb
ret
divb
mov
ss
movsb
sbb
jne
mov
mov
push
lret
jecxz
or
nop
in
ret
adc
rcl
push
loope
inc
dec
inc
bound
mov
arpl
cmp
jmp
test
lahf
in
mov
in
adcl
int3
test
dec
pop
nop
test
push
mov
popa
jg
daa
cmpb
loope
or
jno
repz
mov
test
push
xor
pop
mov
jl
lahf
sub
jge
and
jnp
js
into
sbb
call
imull
test
inc
hlt
outsb
xor
push
and
loopne
lcall
in
andb
cmpsl
jno
and
pop
xchg
dec
inc
xchg
xor
mov
add
enter
push
cli
in
cmp
fs
into
js
out
xchg
rep
xor
repz
sbb
aas
out
aad
cmp
xchg
add
pop
jmp
lods
xlat
test
adc
xor
xchg
push
push
mov
push
ss
xchg
int
stos
adc
icebp
in
mov
icebp
ret
and
or
pop
out
add
pop
mov
mov
les
sub
mov
movsb
addr16
je
dec
mov
pop
jne
or
cs
sti
gs
sbb
mov
loopne
call
mov
mov
fwait
rcrb
sbb
jne
out
das
xchg
addr16
ret
leave
into
jae
xlat
dec
std
inc
movsl
mov
cli
and
lea
cmp
aaa
out
push
push
sbb
pusha
adc
adc
aam
fptan
aas
mov
iret
cld
push
sahf
xor
mov
xor
mov
arpl
pusha
add
push
add
lds
test
sub
or
call
stos
or
loopne
jno
cmpsb
int3
mov
inc
movsb
lds
pop
frstor
inc
in
addr16
sti
ret
jp
fnstcw
out
cmp
cmp
data16
jle
push
call
jno
jmp
pop
or
addr16
push
cltd
bound
ljmp
mov
push
xchg
stos
push
pop
dec
mov
pop
idivb
lds
adc
adc
mov
jmp
sub
pop
sub
les
fscale
or
imul
in
or
and
sbb
sti
data16
int
lea
sbb
cwtl
jmp
popa
js
insb
fildll
mov
dec
cwtl
in
add
fisttps
sbb
adc
fimuls
xchg
dec
push
mov
push
fsubrl
xchg
pushf
sub
and
push
adc
mov
mov
add
inc
in
mov
enter
inc
cmp
mov
ss
xchg
test
lea
sti
push
int
out
push
cmp
stos
movsb
hlt
and
jno
leave
out
cmc
add
cli
or
es
cmpsl
fcmovb
in
push
mov
adc
adc
lahf
xchg
dec
orb
test
inc
decl
pop
jge
mov
iret
repnz
jmp
notl
dec
cmp
pop
pop
in
adc
cwtl
mov
dec
pop
xchg
mov
and
je
dec
jbe
add
cltd
jg
aaa
inc
xchg
in
imul
mov
push
outsl
push
adc
jae
push
repz
popa
mov
pop
xchg
jp
sbb
mov
jecxz
loopne
cwtl
call
sub
cld
pop
jl
xchg
sub
lcall
adc
jmp
test
sbb
sahf
sar
pusha
push
sarl
ret
lods
mov
negb
inc
jne
or
cld
fildl
addr16
mov
sbb
xchg
adc
nop
gs
xorb
mov
subl
inc
sub
mov
add
popa
push
repz
out
shl
int
mov
pop
popa
cmc
mov
push
push
gs
ljmp
pop
mulb
les
cmp
add
leave
jp
jo
inc
dec
mov
add
out
adc
test
dec
aas
lret
stos
sbb
push
or
and
ss
ljmp
movsl
add
xchg
pop
lods
jb
mov
call
fisubs
pop
xor
shll
pop
lcall
mov
jb
push
pushf
sub
out
xor
inc
adc
or
xchg
sbb
mov
pusha
or
xchg
sbb
pushl
in
xchg
sarb
mov
cmp
jge
mov
mov
sub
dec
outsb
xchg
jmp
sub
testb
sbb
fwait
lds
lock
jnp
aad
pop
adc
push
test
gs
std
xchg
cmc
xor
or
lret
jge
push
fdivrp
cli
inc
jbe
test
cmpb
xor
inc
inc
test
or
cld
in
loopne
sub
ss
dec
sbb
inc
mov
sbb
jmp
fs
dec
xor
aas
ljmp
and
daa
push
lcall
fs
ss
mov
ja
push
ja
or
std
jno
mov
out
std
nop
test
mov
pop
out
test
out
es
pop
adc
push
mov
lret
orb
es
andb
add
mov
data16
pop
cmp
scas
mov
aam
and
mov
mov
pop
cmpsl
mov
movsb
rorl
or
cmc
lcall
adc
mov
push
jmp
out
sub
popa
xor
lds
sahf
mov
add
adc
xchg
subl
aam
jmp
adc
sub
mov
pushf
imul
mov
xchg
test
jae
fs
in
mov
outsb
adc
push
xchg
das
xor
xlat
sbb
cmp
push
dec
sbb
pushl
mov
adc
pop
test
or
sub
adc
icebp
dec
stos
popf
testl
leave
out
add
lods
push
dec
jecxz
inc
shlb
dec
jb
imul
sbb
mov
int3
add
mov
cmc
int3
pop
dec
les
jno
aas
sbb
cmp
add
cld
xchg
cmp
std
jns
dec
xor
jo
mov
xchg
leave
lods
imul
sti
test
fcmovb
xor
dec
leave
xor
dec
push
cmp
std
mov
sar
fadds
pop
add
pop
fwait
iret
test
sbb
das
push
sub
in
push
into
es
sbb
jmp
add
xchg
or
sarl
add
mov
addr16
out
jge
push
xchg
aad
jne
stos
and
or
xchg
pop
pop
addb
shrl
mov
jo
push
test
add
in
mulb
scas
stc
ljmp
mov
xchg
and
daa
and
mov
adc
pop
pop
and
js
loopne
add
push
dec
gs
sbb
jo
cmp
push
test
sbb
mov
repnz
fsubl
inc
inc
leave
dec
pop
mov
push
add
call
add
sbb
in
pop
pop
call
and
rcrb
dec
subb
or
daa
movsb
dec
pop
fldt
inc
out
add
shrb
cwtl
mov
adc
dec
xor
stos
loope
shlb
sti
cmp
adc
gs
mov
dec
mov
jg
sbb
shll
dec
fadd
sbb
ret
cmp
int3
mov
mov
test
xor
hlt
xlat
fsubp
mov
adc
adc
xchg
arpl
adc
lret
push
out
faddl
sbb
push
scas
mov
rcr
mov
lcall
cmc
adc
arpl
mul
push
pop
cld
adc
test
mov
pusha
xlat
sbb
xor
test
push
inc
dec
inc
push
push
fdivl
addr16
and
fimuls
or
cwtl
inc
dec
mov
xor
ffreep
ja
popa
stc
jnp
popf
pop
xor
lret
notb
lahf
fstpt
ljmp
mov
or
inc
adc
xchg
jg
inc
into
add
jnp
incb
pop
add
ret
rcrl
sti
jmp
in
les
lods
lahf
scas
iret
insb
pop
call
adc
leave
hlt
dec
lcall
pop
dec
mov
cmp
or
sub
pusha
push
add
xor
inc
aam
dec
push
pusha
cltd
push
jp
enter
std
cwtl
aad
pop
mov
in
imul
mov
push
mov
mov
xchg
push
xor
fxch
jno
dec
sub
imul
xchg
lods
nop
mov
out
dec
push
inc
sub
divl
xlat
pop
pop
xor
pop
xlat
fs
mov
out
je
inc
pusha
test
arpl
jg
mov
stos
inc
icebp
mov
lcall
lahf
adc
push
cmp
add
rcl
sahf
and
cmp
sar
aas
hlt
pop
mov
popa
and
and
mov
sahf
cs
clc
cwtl
pop
lods
aad
push
pop
sahf
dec
arpl
dec
addl
rcr
repz
cmp
nop
push
sbb
pop
jnp
mov
jnp
xchg
ret
mov
scas
inc
mov
push
xor
jns
mov
test
das
ds
and
dec
and
push
pop
filds
inc
test
add
lds
repz
xlat
jbe
sti
data16
cmp
xchg
mov
jno
movsl
lret
lcall
fcoms
sub
and
dec
or
jnp
dec
fsubrs
je
push
test
lahf
xchg
push
sbb
xchg
adc
shrl
and
xchg
cmc
inc
jp
xchg
fsubs
outsl
push
leave
subb
add
cmp
jecxz
dec
rolb
cwtl
dec
and
addr16
pop
push
sbb
cld
cwtl
push
or
repnz
and
lods
in
int3
std
sbb
leave
shl
and
ret
or
cwtl
mov
pop
or
hlt
lds
and
mov
mov
xor
xchg
test
sti
mov
rclb
or
hlt
or
or
pop
and
adc
add
loope
shll
mov
jl
cld
jo
pop
cmc
mov
in
movsb
pop
dec
ror
lahf
mov
aas
les
jnp
mov
dec
mov
mov
idivb
fmull
mull
xchg
and
and
xchg
lock
mov
pop
out
pop
ret
pop
add
cld
add
dec
cmp
push
in
jp
data16
arpl
scas
jbe
push
mov
xor
fcoms
lds
shlb
imul
push
ficomps
out
pop
mov
std
sbb
cld
adc
mov
ljmp
test
andb
add
push
jg
lea
add
xchg
cmp
mov
test
add
mov
lcall
rcll
jl
or
mov
dec
mov
mov
mov
add
push
out
gs
shlb
inc
jecxz
jnp
std
jmp
ds
cmp
divb
dec
push
sbb
aad
jge
mov
or
sbb
or
xchg
mov
adc
ja
sbb
insb
cs
pop
icebp
rorl
or
pop
and
xor
mov
in
repz
insl
aad
jnp
sub
pop
mov
mov
push
dec
cmp
xor
popa
cmp
je
iret
jno
add
cmp
cmc
or
popa
push
insl
popa
mov
push
dec
pop
adc
dec
les
test
xchg
out
enter
movsb
adc
cmpsl
jne
xor
mov
and
or
loopne
dec
add
push
je
mov
pop
js
fistpll
fidivl
and
pop
in
cs
rol
cs
pop
jg
test
xor
arpl
cli
mov
jo
cmpsl
push
xchg
pop
ret
call
sub
imul
loope
ret
dec
scas
jg
sbbb
fildll
xor
pop
stos
mov
inc
dec
out
add
sub
movsb
mov
sub
fcompl
sbb
jecxz
ljmp
sti
int
pusha
pushf
in
stos
sub
push
dec
rolb
jbe
mov
xor
aam
pop
xchg
ret
push
inc
cwtl
lock
fistps
sbb
mov
lret
hlt
adc
imul
scas
movsb
jo
orl
mov
enter
push
jno
pop
cmovns
cmp
aaa
ja
and
out
loop
xchg
lods
lea
pop
or
add
aaa
test
mov
popa
push
aad
cmc
shrl
inc
or
push
jnp
nop
ja
adc
inc
push
sub
in
aaa
push
nop
xchg
mov
push
sbb
dec
push
sbb
pop
and
out
xlat
and
xchg
sub
lret
add
lea
popa
inc
xchg
add
and
movsb
out
xor
mov
xor
addr16
or
stos
in
mov
stos
fs
out
dec
and
je
call
hlt
dec
sbb
cld
sub
fcom
jl
push
outsb
cmpsb
mov
ret
shl
std
mov
push
and
out
xor
jnp
out
dec
push
mov
das
in
daa
xchg
in
fwait
js
or
xchg
fsubrs
sbb
mov
cwtl
stos
and
jae
mov
shl
cmpsl
lea
push
les
add
orl
mov
movsl
cmp
dec
adc
imul
sub
test
xor
icebp
repnz
dec
push
mov
leave
cmp
ror
mov
mov
imul
push
pop
sub
lahf
push
sbb
mov
scas
daa
dec
out
add
jle
mov
sbb
loope
rcl
xor
xchg
pop
add
adc
movsl
movsb
aam
stos
pop
cmp
outsl
xchg
pop
jmp
mov
icebp
test
movsl
pop
or
out
mov
movsl
aad
xchg
jb
inc
imul
sbbb
cmpsb
jp
sbb
push
scas
cmc
imul
mov
setge
loopne
daa
inc
and
or
movb
jns
pop
pop
add
push
mov
fcmovu
xor
imul
push
sbbl
adc
mov
orl
xor
and
push
xchg
leave
sub
data16
sti
and
sbb
sbb
mov
mov
and
cs
in
in
jns
mov
jbe
cmpsb
cmpsl
lea
pop
rcrl
xchg
add
mov
jnp
mov
pop
mov
cmp
inc
adcl
xchg
mov
cmc
gs
leave
xor
and
fwait
adc
jge
mov
divb
insl
fldl
aas
xor
fsincos
in
sarl
or
in
pop
pop
xchg
and
fstpl
jge
mov
cs
dec
sbb
jle
daa
mov
cmp
sub
pop
fisttps
loope
xlat
pop
ret
cmp
xchg
pusha
ret
pushf
sbb
sbb
cwtd
and
fs
sbb
mov
and
push
sbb
mov
lcall
insl
leave
leave
dec
lea
cltd
hlt
mov
sub
jns
cmp
add
dec
push
icebp
pop
jle
mov
mov
jle
popa
scas
pop
inc
mov
jno
das
push
daa
xchg
enter
inc
add
and
gs
clc
stos
dec
adc
lea
sarb
sbb
jmp
jp
jo
rorb
in
data16
orl
dec
pop
movl
mov
ja
xchg
ds
jp
fldt
xchg
sbb
inc
add
sbbl
inc
xchg
xlat
push
xor
jg
ret
push
cmp
inc
imul
call
popa
add
sahf
cmp
movsb
xchg
and
dec
pop
xor
add
repnz
icebp
xor
pop
jmp
int
sbb
test
push
mov
and
jae
test
rorl
cmp
into
mov
ds
cmc
cs
in
dec
pop
fiaddl
add
out
jns
in
roll
sbb
out
push
xchg
fldl
mov
xchg
rorl
jae
lds
enter
test
jmp
rol
movsl
cmp
in
fwait
test
cmp
sub
mov
xchg
ud1
into
push
in
fwait
pop
mov
pop
jge
adc
in
pusha
xor
movsl
ss
ljmp
push
in
inc
fldenv
imul
pop
hlt
mov
lahf
or
in
pop
mov
adc
icebp
rorb
cmpb
mov
mov
out
xchg
ret
sub
lods
xchg
pop
sbb
cmpb
mov
pop
cwtl
add
or
jne
loop
pop
int3
hlt
lds
mov
mov
pop
push
cmp
clc
inc
xchg
inc
and
fsts
xchg
mov
mov
add
sub
dec
cmpsb
mov
popf
rol
mov
push
pop
loopne
push
lods
addr16
aaa
icebp
popl
in
xchg
sbb
fidivrs
cltd
cmp
movsl
cmc
xchg
mov
jle
ficomps
fdivrs
cmc
fidivrs
fiadds
mov
mov
lcall
pop
mov
jnp
push
jge
ljmp
divb
jo
mov
sub
inc
aad
ja
test
jg
push
lods
dec
and
mov
mov
pop
xchg
daa
xlat
scas
jne
aad
push
pop
jnp
cwtl
int
cmp
stc
js
inc
or
xlat
mov
lds
adc
mov
mov
inc
inc
fstpl
sub
mov
les
leave
sub
jo
xor
jbe
out
cmpsl
mov
mov
decl
ror
ds
mov
int3
clc
and
pop
jmp
sub
dec
lods
jnp
mov
out
fisubrs
cmc
sbb
xorb
add
shrb
mov
mov
pop
cmpsb
push
xor
jp
sub
ljmp
mov
sub
out
out
ljmp
lock
movsl
push
pop
sub
dec
dec
dec
add
dec
mov
in
pop
fcompl
loop
cmp
and
xor
mov
sbb
outsb
inc
cmp
ss
xor
or
aad
sbb
cmp
lods
xchg
loope
ljmp
sub
lds
adcl
scas
fdivrs
insb
cmpl
pop
sbb
dec
mov
jge
or
xor
in
jno
inc
stos
jb
push
add
lea
sub
push
jl
and
mov
xchg
out
mov
sbb
mov
inc
push
sub
xor
pop
imul
cld
mov
test
sbb
enter
inc
stc
mov
adc
in
xchg
rclb
test
mov
adc
iret
jns
scas
sub
mov
adc
push
enter
int
das
push
sbbb
pop
push
xchg
push
inc
clc
cmp
fmull
or
push
xchg
sub
sahf
leave
xor
sbb
inc
jmp
shr
push
xchg
jno
shrb
cmpsb
mov
dec
mov
cmp
int
dec
cmp
aaa
es
in
xor
push
test
xchg
aas
sub
jp
add
sub
ds
cmp
loopne
mov
ret
sbb
stos
mov
or
mov
inc
cmpsl
push
xchg
in
nop
jo
call
lret
add
enter
clc
pop
mov
sbb
push
sub
roll
jle
ja
push
mov
iret
fmuls
cmp
out
or
cmpsb
dec
sahf
ljmp
inc
icebp
stos
aad
cmp
adc
push
inc
incb
insl
mov
aad
and
cmp
xor
mov
sbb
pop
lret
push
or
nop
xor
cmp
add
push
mov
and
sarl
cmpl
and
repnz
inc
xchg
cmp
ja
dec
dec
jb
jecxz
mov
push
daa
and
outsb
sub
mov
cmpsb
xchg
loopne
in
push
dec
dec
jnp
push
or
xor
addr16
sarb
or
sub
aaa
and
mov
and
xor
sub
insl
xor
xlat
aas
xchg
filds
loopne
je
jg
ficomps
cli
pop
cld
inc
test
pop
jge
je
xor
cmc
jg
xlat
xchg
jne
std
push
inc
insb
rcll
les
hlt
lret
xor
xchg
aad
xor
stos
pop
loopne
adc
jbe
scas
sbb
mov
xor
sbb
push
fwait
aad
aas
mov
and
imul
outsb
sbb
in
add
shll
les
das
leave
scas
rolb
xchg
out
rcll
sbb
add
jmp
test
ljmp
push
das
sbb
mov
sub
roll
add
test
repz
ficomps
cmp
mov
pusha
cmp
rcll
mov
mov
jne
int
icebp
lods
push
scas
or
or
inc
cmp
test
mov
sub
mov
call
je
or
out
insb
sarb
push
sahf
xor
inc
dec
pop
pop
rolb
int
xchg
add
sti
dec
mov
jecxz
cmp
pushf
aaa
ret
xlat
mov
test
add
es
add
les
xchg
cmp
jb
or
mov
push
push
popa
sbb
xor
jecxz
sub
push
and
ljmp
dec
movsb
mov
loopne
and
mov
stos
pop
es
lds
mov
cwtl
cmp
test
std
std
ljmp
jle
es
je
add
adc
fwait
out
jae
arpl
pusha
and
test
sarl
inc
or
lahf
repnz
movsb
aam
fmuls
and
bound
and
adc
xchg
stos
test
aam
jecxz
sub
dec
imul
dec
sub
cmp
mov
dec
sub
fiaddl
sahf
aam
pop
out
fsub
dec
ret
or
leave
aam
push
mov
int3
cmp
pop
mov
xchg
fiadds
cmpsb
inc
rcrb
pop
sub
test
rcrb
repz
sub
push
push
and
mov
dec
mov
jg
shl
pusha
and
pop
hlt
fcmovnb
or
jbe
cmpsl
decl
and
dec
flds
push
sbb
roll
cmc
xlat
push
pusha
clc
mov
jmp
jae
or
jo
mov
inc
negb
cmp
lahf
mov
cmpsl
arpl
test
fnsave
dec
and
mov
mov
out
addl
jbe
sub
jp
sub
or
imul
push
add
xor
out
and
rcrl
jge
sub
jle
arpl
sbb
inc
pop
xchg
push
cmp
lcall
xlat
sub
sub
insl
fwait
adc
adc
outsb
sti
and
lcall
stos
ss
loop
sbb
out
je
cld
xor
mov
aad
sbb
leave
mov
out
jecxz
mov
loope
rcr
fs
fs
clc
mov
jns
or
lahf
pop
arpl
pop
loopne
jg
xor
movsl
mov
pop
in
push
rcrl
outsb
into
divl
mov
mov
cmpsl
mov
inc
loop
push
mov
and
pop
push
hlt
cmpsb
inc
pop
in
dec
mov
fprem
xorl
pusha
xor
jne
mov
fwait
mov
stos
or
ret
popf
sbb
mov
xor
push
add
pop
popa
mov
xlat
dec
mov
mov
xor
bound
sub
iret
and
mov
stos
mov
leave
jge
xchg
pop
pop
inc
leave
mov
xchg
ja,pn
xor
js
and
cmp
test
jecxz
cmp
das
repnz
adc
cltd
stos
xchg
cmp
mov
lock
ret
test
dec
adc
push
dec
dec
adcl
mov
sbb
cld
sbb
cmpsl
in
rclb
push
and
add
jne
push
repnz
shl
pushf
inc
jne
andl
outsl
push
jmp
mov
sbb
sub
jl
sub
xchg
adc
out
ret
xor
mov
rcrb
ret
cwtl
jo
push
enter
sbb
pop
fstpt
ljmp
jbe
in
inc
movsb
mov
pop
adc
and
test
mov
cli
out
jg
sahf
ja
arpl
mov
or
dec
clc
pushf
in
outsb
xchg
jp
pop
idiv
xor
iret
arpl
shrl
push
ror
jo
xchg
push
xor
pushf
jbe
add
je
sub
and
push
jecxz
push
sti
mov
bound
or
add
pop
mov
xchg
push
stos
inc
sub
jp
mov
inc
push
aaa
cwtl
cmc
lahf
push
cmp
and
sub
inc
add
ds
ret
sbb
daa
shlb
jnp
mov
push
mov
roll
pop
insb
fsubrl
jae
daa
xchg
xchg
ja
add
test
xchg
sbb
out
ret
mov
stc
dec
mov
out
sahf
outsb
sub
dec
mov
test
lret
mov
sub
popf
adc
sti
mov
in
pop
ret
loope
cwtl
cmp
stos
push
sarb
push
sub
mov
dec
and
test
enter
mov
das
arpl
push
add
into
cmpsl
push
inc
insl
and
xor
or
movsb
or
nop
jg
sub
movsb
ljmp
sub
int3
sbb
inc
repnz
push
out
stos
or
scas
sub
sub
stc
pushf
jg
ficomps
movsb
lahf
mov
xchg
and
cmp
mov
xchg
push
push
jns
adc
sbb
ret
mov
lret
jecxz
xor
fadds
nop
xor
es
fs
mov
bound
shr
mov
aas
fsubl
inc
ja
adc
fcomps
mov
push
and
negb
dec
mulb
test
add
xchg
and
adc
outsl
add
and
test
fdivrl
mov
push
dec
jmp
mull
hlt
pop
mov
xlat
push
jmp
leave
jmp
push
push
push
mov
pop
popl
adc
inc
insl
repnz
xor
pop
call
and
int
aam
out
lea
imul
pop
repnz
sub
cli
mov
sbb
adc
pop
fldenv
xchg
cli
and
cmp
mov
call
xchg
fld
lret
mov
outsl
sbb
insb
sub
pop
push
fistl
cmpsl
xchg
xor
push
int3
les
mov
jge
mov
sbb
pop
push
xchg
test
int3
xor
adc
push
push
sarb
cmp
daa
leave
jo
jbe
cmp
sbb
in
adc
movsl
lahf
sahf
scas
push
jnp
stc
dec
sbb
push
movsb
pop
xor
push
popf
lds
xchg
pop
mov
dec
or
jo
pusha
shll
test
shll
repnz
jae
mov
dec
dec
pop
fbld
mov
adc
or
xchg
add
fstl
cmc
push
sbbb
loopne
test
pcmpeqw
mov
dec
addr16
ret
data16
and
and
popf
int
mov
xorl
inc
lcall
mov
cltd
mov
sbb
dec
dec
inc
fwait
xchg
pushf
movsb
or
lahf
in
xchg
into
sbb
pop
scas
jle
inc
dec
test
cli
lods
inc
jmp
add
cmp
call
bound
addr16
cld
mov
pop
das
movsb
scas
insb
and
dec
jp
sub
jo
dec
mov
jae
sti
rclb
sub
shl
mov
sbb
in
hlt
mov
clc
mov
icebp
xchg
push
stos
out
call
mov
mov
fsts
cmp
mov
jnp
leave
inc
in
adc
loop
fs
ficomps
insb
jg
jbe
aas
scas
rcrb
int3
sub
fadds
gs
adc
lock
call
dec
shl
push
jbe
sbbw
jl
sub
mov
push
shll
mov
push
mov
and
fmul
cmp
mov
mov
repz
notb
pop
lea
inc
out
adc
sahf
push
jp
push
out
fchs
in
cmp
inc
scas
out
fisttps
mov
xor
sbb
pop
stos
cmovnp
aam
es
dec
push
sbb
xor
fistl
lea
xor
repz
inc
dec
xchg
jecxz
hlt
test
mov
daa
js
mov
repz
push
mov
lret
lds
into
rol
adc
mov
js
or
push
mov
rcll
cmp
sbb
add
push
sbb
in
xchg
pop
mov
daa
fisttpl
sar
cmpsb
clc
xchg
scas
sbb
lea
cltd
icebp
add
push
les
lret
mov
repnz
movsl
sti
aad
xchg
out
xchg
mov
call
pusha
add
xchg
jae
mov
jnp
div
lock
and
addb
bound
lcall
add
mov
mov
dec
in
aaa
cld
xchg
dec
data16
lock
rolb
fwait
mov
lret
fisttps
push
cli
test
and
or
mov
sbb
insb
or
adc
ss
bound
es
jmp
out
xor
int3
dec
insl
xchg
test
cltd
daa
sub
lret
dec
or
dec
stc
divl
lret
pop
dec
lret
mov
popf
lret
dec
jbe
push
clc
fiaddl
inc
push
xor
lods
sub
mov
test
insl
xchg
dec
xor
and
cmp
add
loop
inc
arpl
aam
or
in
addr16
fwait
xchg
or
in
and
hlt
std
dec
jb
fmuls
cwtl
pop
lret
aad
sub
push
dec
imul
shl
jnp
push
mov
arpl
mov
jnp
push
mov
jmp
sbb
loope
jl
test
fnstenv
inc
add
fsubrs
test
or
mov
dec
xchg
or
xchg
pop
add
adc
jne
jl
clc
stc
xor
jmp
andl
xchg
mov
add
push
sti
lcall
xchg
inc
cmpl
test
lahf
mov
sbb
cli
jbe
cmp
test
das
ret
imul
stos
mov
sub
cltd
icebp
dec
push
cld
inc
jmp
out
mov
insb
aas
psubq
shl
aaa
sbb
add
faddp
cmp
dec
inc
mov
insb
pop
jg
cmp
push
jge
add
jecxz
aam
icebp
add
cmp
enter
pop
fisubrs
sbb
rorl
or
dec
pop
mov
pop
ljmp
xor
cwtl
lock
aas
mov
fnstcw
outsb
push
jne
repz
pop
xlat
movsb
out
insl
xchg
lock
add
push
jnp
and
and
cmc
rorl
dec
push
lret
jbe
xchg
sti
fisttpl
test
cmp
xlat
aas
adc
mov
xor
ss
and
inc
std
aam
and
fdivrl
cmp
push
stc
lahf
jg
mov
std
fs
dec
ljmp
scas
adc
icebp
js
jo
outsb
vmovhps
add
dec
out
pop
mov
loope
sub
mov
mov
pop
rcr
rolb
mull
movsl
ret
leave
ret
inc
int
sti
push
testb
jg
mov
in
aad
test
jmp
in
xchg
clc
sbb
inc
adc
test
push
jmp
addr16
loop
les
add
or
or
shlb
add
or
sub
xor
mov
inc
out
push
stos
push
movsb
mov
sub
je
sub
inc
xor
out
fstl
sti
inc
pop
int3
pop
popf
adc
dec
xchg
adc
inc
stos
insl
pusha
cmp
pushf
add
mov
add
xchg
pushf
addb
and
xchg
sub
cmp
repnz
aas
mov
nop
pushf
xchg
out
adc
repnz
cmpl
icebp
shll
sub
jp
dec
adc
sub
das
in
push
insb
xchg
int
xchg
or
cmpsl
dec
pushf
jle
ja
sbb
mov
loopne
icebp
cwtl
xchg
std
mov
xchg
scas
imull
fistl
push
xlat
ja
pop
shrb
xchg
stc
xor
cld
xor
jns
xchg
sahf
pop
dec
in
adc
daa
jl
xor
and
lret
mov
lret
push
push
mov
mov
fdivrl
imul
pop
inc
negb
mov
movsl
shld
fcompl
mov
repz
pop
pushf
jge
ds
cmp
fsubl
lods
movsl
and
pop
or
icebp
shlb
ret
inc
je
and
rclb
fs
cmovs
push
fadd
mov
sbb
add
mov
mov
pop
mov
pusha
cli
mull
std
mov
adc
jle
idiv
dec
xor
incl
mov
dec
mov
pop
xchg
lods
sbb
imul
pop
jg
test
mov
xchg
mov
ja
sbb
ss
jg
aaa
pop
negb
aaa
hlt
adc
push
clc
inc
out
js
push
jae
adc
aas
cli
pop
outsb
dec
cld
enter
xlat
in
lods
loope
fdivr
or
jg
mov
int3
roll
sub
stc
std
arpl
inc
sbb
gs
sbb
movsl
repnz
xchg
fldt
sarb
popf
inc
je
mov
daa
shlb
mov
push
xchg
inc
call
cmp
inc
lahf
out
mov
out
lods
lods
lock
imul
pop
enter
add
dec
arpl
mov
fstl
dec
push
mov
je
inc
fildll
mov
mov
lock
leave
cwtl
shll
int
out
pop
mov
inc
and
int3
pop
nop
mov
rorb
and
loope
adc
movsl
adc
sarl
nop
pushf
xor
out
push
gs
push
lea
xor
add
jbe
mov
inc
lret
pop
pop
mov
inc
rcrb
xlat
cmpsb
test
dec
dec
adc
outsl
lret
mov
pop
pop
test
movsb
pop
call
test
add
imul
xchg
push
rcrl
frstor
ljmp
inc
ret
jmp
mov
fwait
cmp
jle
mov
sbb
push
xor
in
dec
dec
dec
bound
jns
jns
out
push
daa
jae
daa
xor
push
push
jnp
les
jns
adc
lock
xchg
sub
xchg
loop
pop
push
mov
addl
hlt
sbb
lcall
xor
bound
loope
rorb
xor
cmp
xchg
inc
test
mov
rcll
push
pop
jnp
lret
stos
out
fdivrs
jo
clc
cmpsb
mov
in
lcall
cmp
mov
popa
scas
xor
cli
jbe
daa
jg
leave
add
mov
imul
shll
inc
enter
inc
pop
es
adc
out
das
cmp
loop
add
mov
fsubrs
popf
jae
inc
push
push
fiaddl
out
xor
ud2
sti
jmp
pop
push
aaa
adc
sub
pop
adc
mov
mov
fwait
test
fildl
in
loopne
xchg
inc
mov
or
adc
fstpt
jae
cld
cld
addb
adc
dec
lods
push
cmpb
sub
insb
dec
cld
adc
movsl
ret
adc
sahf
xor
inc
and
fistps
or
pop
in
dec
mov
lret
icebp
cmp
and
and
fnstcw
roll
fwait
or
es
loop
mov
xchg
jg
js
movsb
mov
push
inc
pop
ret
and
lcall
inc
jecxz
push
xchg
into
mov
add
lahf
jnp
arpl
ljmp
xor
sbb
pop
ret
cmc
jno
mov
mov
jge
enter
push
dec
cltd
fwait
or
loope
push
cmp
mov
outsb
lret
cmpsb
mov
mov
das
ret
movsl
scas
mov
mov
incb
xchg
ds
cwtl
lock
jb
xchg
std
jl
cmp
xlat
dec
inc
adc
jmp
and
out
mov
sarl
xchg
mov
cli
xlat
ds
arpl
mov
mov
ret
nop
adc
dec
lea
imull
xchg
into
mov
jae
xchg
loope
pop
push
or
and
mov
push
and
or
push
xchg
jle
sub
aad
inc
je
pop
jl
push
addr16
xor
in
out
leave
xlat
js
fcmovnbe
push
xchg
push
or
sbb
mov
add
add
mov
adc
out
cmp
shll
fs
test
mov
xor
jecxz
outsb
cli
popf
jo
push
fisttpl
add
wrmsr
ret
mov
arpl
adc
je
ljmp
xchg
movsl
pop
inc
lahf
mov
jo
mov
pop
mov
xor
movsb
cmp
es
xchg
in
xor
or
xor
sub
xor
jnp
push
xchg
repnz
shrb
loop
aas
cld
loope
mov
leave
lea
in
mov
mov
inc
cmc
and
cli
xor
fiadds
lret
in
jbe
jle
pop
int3
out
aad
lret
incb
std
insl
mov
mov
xorl
imul
sub
pop
enter
ffreep
or
pop
pop
fcompl
mov
iret
cmpsl
jl
adc
adc
pop
andl
lret
aaa
mov
lea
or
aad
pop
jmp
testb
sbb
jns
adc
xchg
mov
xchg
mov
inc
loope
dec
lret
dec
stos
sahf
jbe
add
icebp
orl
rcr
test
jnp
xchg
push
movsl
inc
cld
aam
scas
mov
out
ljmp
ljmp
jmp
mov
jno
jmp
movl
ljmp
sbbb
sarl
repnz
cmp
add
nop
ja
repnz
vpand
dec
call
dec
dec
jle
in
mov
xlat
inc
inc
dec
dec
loope
push
add
scas
or
gs
pop
sbb
inc
icebp
out
push
pop
mov
das
fsubl
cmp
adc
mov
sub
fnsave
data16
xor
shrb
sub
push
std
dec
jg
icebp
pop
ret
mov
mov
insb
popa
sub
push
mov
jo
dec
add
scas
in
aaa
jp
xlat
mov
push
dec
mov
loop
inc
movsl
jp
shlb
std
dec
sub
fiaddl
rcll
adc
xor
scas
aas
push
fisubs
int3
aaa
loop
sbb
or
insb
cs
cmc
fsub
rolb
lods
xor
mov
mov
cmp
aad
mov
mov
test
add
shlb
push
icebp
mov
push
adc
lcall
ficoms
iret
mov
xor
es
scas
mov
jp
je
aam
aad
div
pop
lcall
fstp
mulb
cvttps2pi
shll
push
mov
shll
movsb
rcrl
mov
iret
mov
test
out
dec
xor
sub
cmp
pop
inc
mov
cmp
call
sbb
xor
and
into
std
xchg
add
out
fildl
adc
arpl
jbe
add
rorl
dec
cmp
jg
ss
pop
inc
int3
rcrb
sub
mov
cmp
xchg
out
je
pop
pushf
scas
push
and
mov
sbb
loope
push
sbb
dec
pop
lret
test
adc
roll
jns
mov
popf
lods
pop
aam
xchg
dec
inc
push
xchg
add
ret
jnp
cltd
mov
add
mov
mov
clc
test
push
bound
or
fstpl
enter
fstpt
test
mov
xor
add
int
lods
adc
mov
vmovaps
mov
cmp
or
cmp
push
testl
push
inc
mov
imul
sti
lahf
rorb
insl
xchg
repnz
push
adc
test
dec
jbe
and
scas
xor
sbb
aam
clc
cld
xor
or
movsl
andb
sub
outsl
ds
mov
or
push
fildll
insb
xor
mov
dec
mov
shll
push
shl
lea
xchg
inc
movsb
adc
push
jle
add
push
lock
mov
push
movsb
xor
push
mul
push
scas
push
sbb
fisubrs
out
sbb
mov
pop
add
adc
push
adc
inc
lods
fmulp
rcrl
jbe
and
xchg
xor
mov
cltd
xchg
fcmovnu
lahf
inc
add
lahf
sbb
push
xchg
cmp
cmpsl
xchg
dec
adc
pop
fsubrl
xorb
inc
push
dec
dec
sti
addl
cmp
stos
jno
sbb
int
sub
call
scas
es
movsl
sbb
jge
or
loopne
mov
jmp
push
clc
dec
sarb
insl
lcall
int3
shr
sbb
inc
xor
cwtl
mov
cmc
or
xchg
into
xor
repnz
jle
es
xor
addr16
test
cmpsb
inc
mov
xchg
sbb
pop
pushf
mov
pop
mov
rcl
mov
mov
pusha
sub
pop
add
popa
cmp
xchg
xor
data16
mov
dec
ret
icebp
fmul
xor
dec
loopne
cmp
aad
mov
dec
or
rcll
mov
bnd
cld
das
lods
into
outsl
pop
jne
pop
fiadds
cmp
idivl
in
add
pop
lret
lcall
mov
jmp
inc
mov
and
dec
xor
pop
dec
push
rorl
popf
cld
push
ljmp
add
xchg
jl
insl
pushf
mov
arpl
pop
cs
fistl
xchg
loop
aaa
mov
mov
daa
xor
test
cmpsl
movq
rorb
xor
mov
lcall
cmpsl
pop
sbb
xor
loopne
push
sbb
adc
popf
outsb
add
adc
loopne
xchg
add
sbb
arpl
fstl
push
cmp
pop
rcl
jnp
or
lds
imul
push
stc
or
xchg
dec
sti
in
in
push
mov
dec
dec
mov
leave
push
test
sbb
mov
test
js
push
push
mov
int3
test
mov
ja
and
pusha
dec
inc
xchg
rol
and
push
push
or
popf
ja
enter
lods
mov
test
fldl
iret
rcrl
aas
test
inc
in
sahf
int3
jno
inc
adc
mul
adc
xchg
jb
cmp
divl
je
pop
fidivrl
fildl
pop
add
stos
inc
stos
or
add
jb
dec
sar
push
add
jl
mov
leave
stos
sub
push
dec
and
pop
in
dec
jecxz,pt
aam
popa
xor
fldl
adc
inc
movsl
notb
lret
inc
add
test
std
imul
test
shll
mov
gs
jecxz
cmp
insl
mov
fiadds
mov
sbb
lcall
jp
push
inc
movsb
mov
ljmp
pop
into
dec
repz
pop
aaa
adc
mov
push
mov
mov
pop
pushf
jle
pusha
push
cmp
add
and
push
fldt
cli
jae
daa
mov
icebp
hlt
aas
fiadds
out
cltd
inc
and
xlat
lcall
es
lds
daa
inc
shrd
jo
je
in
cmpsl
leave
pop
loop
lret
xor
sub
mov
lea
pop
out
xchg
in
out
and
lds
xor
psrld
stc
and
shlb
sbb
adc
movsb
push
jp
add
dec
lret
push
push
mov
or
pop
outsl
ja
pushf
fcomp
popf
cltd
loope
dec
out
cmp
pop
in
lods
push
lcall
mov
push
cmp
sub
push
test
ret
in
repz
mov
push
pop
jp
test
mov
push
mov
in
sbb
dec
bound
jle
jmp
lahf
mov
outsl
dec
add
fucomp
enter
lea
adc
xlat
adc
xor
xchg
aas
jae
mov
sbb
inc
jae
mov
pop
xchg
ret
push
push
push
lods
dec
push
sarl
pop
mov
pop
lahf
jp
pop
add
adc
loope
and
testl
mov
push
mov
jne
add
iret
jle
dec
pushf
dec
rorb
push
orl
mov
arpl
and
mov
mov
fldenv
rcll
ja
ret
mov
xor
movl
inc
fcomp
fstps
xchg
adc
dec
xor
jb
push
ljmp
lods
out
bound
aam
xor
outsl
jne
xchg
inc
cmp
dec
pop
xor
sbb
test
xor
les
adc
loop
jp
jle
pop
pop
je
insl
adc
stc
in
pop
sar
in
xchg
sti
inc
ja
or
cmp
and
fs
rorl
aas
testl
insl
fs
pop
push
cmp
call
shll
inc
imul
cltd
jmp
pushf
push
push
jno
jns
sbb
adc
inc
ljmp
adc
inc
mov
add
and
xor
xor
push
fnstenv
test
hlt
cltd
in
dec
lds
out
dec
leave
adc
add
notb
jecxz
push
mov
fs
out
lods
lods
adc
nop
mov
push
pop
loope
and
test
pop
or
add
sahf
mov
add
into
push
mov
in
jecxz
xor
adc
test
aam
jp
adc
mov
jae
push
dec
xor
push
xor
stos
pop
addr16
js
aad
or
fimuls
xlat
cltd
dec
jle
insl
fldl2t
dec
and
test
cmp
xchg
std
mov
pop
popa
pop
cwtl
adc
mov
cmp
push
cmp
push
aam
cli
adc
cmpsb
ss
ja
sahf
jno
out
add
jg
loop
mov
inc
mov
pop
or
or
fildl
push
sbb
or
je
lret
mov
sub
cmp
inc
push
or
clc
dec
rcll
bound
daa
sub
fiadds
dec
sbb
push
and
inc
jmp
pop
cld
xchg
xor
rcl
popa
sbb
loopne
inc
cld
iret
dec
mov
sbb
cmp
lcall
aam
idivb
repz
jno
std
jnp
and
push
xor
adcb
and
movsb
xchg
jae
and
cli
dec
test
inc
xchg
insb
add
mov
dec
jmp
xchg
cld
dec
cmpsl
shrb
add
dec
cvtps2pi
jl
pop
mov
jmp
cmp
fcomps
ja
pushl
dec
fucomp
inc
push
orl
lahf
rcrb
leave
cs
adc
jmp
shrl
pop
fld
inc
dec
push
xchg
sbb
cmpsl
js
push
add
or
add
in
mov
xor
cmp
dec
lahf
scas
pop
mov
mov
cmp
pop
push
xorb
push
inc
dec
cs
push
sub
inc
rcrb
ds
add
aam
repz
push
inc
mov
pop
rcl
mov
push
call
imul
fidivrs
ljmp
xchg
push
mov
cld
loop
xor
pop
add
mov
mov
pop
cmp
mov
push
lcall
out
insb
mov
add
mov
cmp
sub
lcall
and
push
dec
scas
push
sbb
int3
inc
add
sub
imul
inc
ret
xchg
in
inc
pop
or
adc
fwait
sbb
sub
or
test
loopne
pop
out
xchg
dec
mov
mov
je
sub
jp
push
mov
sti
mov
xchg
mov
cmpsb
repz
dec
inc
sahf
xlat
inc
or
mov
icebp
or
mov
mov
sarl
mov
pop
repnz
decb
mov
aad
mov
loope
xor
fcompl
jb
repnz
arpl
enter
inc
sbb
jmp
cmp
stc
push
repnz
pop
mov
test
inc
xchg
dec
fcoms
sbb
loope
pop
rcrb
cli
or
sbb
mov
mov
and
insb
lcall
push
mov
adcl
sub
insl
lcall
mov
dec
and
mov
pop
js
movsl
cmp
xchg
add
lea
sub
adc
bound
stos
mov
cld
adc
sub
jno
roll
pop
pop
mov
popa
jge
dec
test
and
and
mov
out
xor
push
mov
ljmp
pop
sub
sub
les
stos
mov
inc
cmp
sbb
dec
cmp
mov
clc
inc
dec
or
stc
dec
push
jmp
mov
xor
sub
cmp
rclb
out
add
test
daa
jnp
popa
mov
lea
dec
mov
lea
mov
xchg
bnd
pushl
mov
std
ss
sbb
mov
or
lods
int
dec
sub
cmp
pop
mov
dec
ja
inc
ds
in
pushf
push
pusha
imul
stos
clc
popf
jno
fcmovu
or
jo
xor
push
or
pop
mov
sbb
stos
cmp
jne
cmpsb
or
hlt
dec
in
jne
lock
dec
in
leave
xlat
scas
dec
mov
jo
xor
inc
add
call
testb
inc
lock
mov
push
push
inc
sti
fs
adc
in
cli
add
inc
repnz
sub
pop
ret
mov
mov
stc
xchg
inc
cltd
and
repz
lods
loop
xor
daa
mov
movsb
mov
cwtl
repz
gs
cmpsl
and
imul
outsb
cmpsb
js
mov
aaa
and
and
andb
sub
inc
test
insl
cmp
push
nop
xor
inc
or
dec
lret
stos
add
lock
in
aaa
sub
call
push
cmp
enter
cmp
repz
cwtl
xchg
sti
xchg
push
xchg
mov
xchg
and
xchg
enter
cwtl
icebp
call
stos
stc
sbb
cmc
rcrl
movsb
cmp
push
jp
cmp
jb
jl
dec
add
shlb
fidivrl
sub
or
push
dec
sti
mov
and
xchg
jecxz
mov
push
push
sbb
aam
jp
cmc
jae
adc
scas
in
aaa
xchg
int3
jle
mov
and
ret
sti
sub
repz
mov
jecxz
movsl
jecxz
scas
lret
push
pop
inc
out
mov
cmp
imul
mov
aas
shll
pop
test
leave
jno
and
jo
insl
inc
roll
ds
xor
fs
mov
xchg
scas
cmp
jnp
mov
sbb
aam
jbe
add
sbb
bound
scas
sbb
sub
subl
lret
and
int
pop
mov
jge
dec
lods
pushf
mov
loop
jmp
xchg
jnp
sahf
aad
push
mov
in
xchg
pop
sub
lahf
cwtl
push
dec
or
test
or
sbb
lea
scas
add
mov
mov
addb
sub
lock
aaa
mov
cmpsl
sub
cli
pushf
hlt
test
mov
jle
loop
cltd
pusha
xchg
xorb
add
stos
loopne
cmc
jo
fnstsw
loop
add
or
dec
pop
ja
cmpsb
mov
fidivrs
into
sbb
sub
mov
push
jb,pn
rorl
mov
and
jge
jmp
push
and
inc
aam
enter
jb
es
mov
sub
pop
push
cmc
daa
test
fwait
pushf
out
push
cld
loopne
sarl
mov
and
mov
cmpsl
push
mov
outsl
push
or
and
xor
mov
jecxz
jp
inc
movsl
orl
lods
add
fisubrs
sbbb
es
ljmp
and
inc
adc
mov
cmp
inc
pop
xchg
sbb
jno
insl
hlt
jnp
mov
push
jb
pushf
inc
jecxz
rcr
jle
mov
movsb
aas
mov
pop
push
pop
scas
shr
cld
xor
pop
mov
sbb
sahf
jb
iret
pop
sub
inc
push
fwait
pushf
mov
popl
xlat
mov
pop
or
push
inc
dec
and
loopne
imul
shrl
ret
and
shrb
sub
popf
mov
and
das
push
push
fiaddl
sub
jnp
add
mov
pushf
stos
inc
in
or
push
shr
cld
ffreep
loopne
rcrb
cltd
dec
dec
xor
pushf
addl
addr16
dec
cmp
cs
push
gs
into
sbb
push
cmc
dec
out
or
vpunpckhwd
xor
pop
xchg
mov
sbb
jl
jnp
icebp
mov
xor
add
shlb
xchg
pop
xchg
dec
push
arpl
xor
jl
ss
leave
sub
pushf
and
aaa
lret
mov
cmp
add
insl
and
sbb
dec
or
fsub
sub
pop
dec
test
sbb
sti
or
movsb
jge
adc
inc
mov
and
js
xchg
insl
pop
push
in
lahf
push
cmpsl
or
cmp
or
cs
xchg
int
cmp
xor
cmp
push
lea
fwait
xor
jo
xor
mov
fcomps
aad
fstl
mov
fldl
add
or
jns
xchg
mov
cmp
hlt
mov
int3
adc
pusha
les
int3
fidivl
testl
sub
mov
push
movsb
jne
push
xchg
test
and
add
loope
aaa
jle
cli
jb
gs
cmp
or
lret
sub
sbb
xor
in
daa
lahf
loopne
pusha
mov
push
xor
pop
cmp
pop
add
out
or
pop
ja
lods
push
inc
test
imul
int
lahf
jno
in
mov
mov
leave
test
cmp
mov
movsb
xlat
out
out
int
cmp
fwait
xchg
sub
lods
xor
inc
out
sub
pop
inc
adc
fcmovnu
data16
xchg
into
cmp
adc
dec
adc
fistps
or
xor
lea
mov
sub
std
and
xchg
andb
push
adc
dec
repz
fstpl
or
xor
push
add
fsubr
les
andl
addr16
push
sbb
iret
pop
test
cmp
xor
mov
mov
cs
int3
xor
inc
mov
cmpb
lea
inc
out
in
lds
xchg
jle
xchg
cs
ljmp
xor
xchg
fsubrl
xor
cwtl
and
inc
ficoms
stc
lock
es
or
mov
pop
hlt
lret
lea
cmpsl
xchg
scas
or
xchg
jge
and
push
mov
cmc
fld
lds
test
aas
lods
pop
fistpl
dec
sar
xor
and
pop
lcall
or
cmpsb
mov
movsl
jl
lahf
sti
addr16
jge
lds
and
lahf
push
lahf
loopne
cmp
hlt
pop
idiv
push
xor
dec
xchg
lea
int3
lea
pop
cli
xchg
rolb
testl
in
ret
push
pop
or
test
loopnew
std
test
xchg
mov
jmp
jle
popa
cs
shlb
and
repnz
mov
scas
and
mov
rcrl
aam
sti
mov
fldl
add
or
mov
dec
and
mov
outsl
lds
push
lret
sub
mov
dec
aam
push
dec
add
mov
test
repnz
push
shrb
adc
sub
rorl
lock
pop
ljmp
jmp
ret
dec
cmp
in
xor
loop
dec
nop
add
pop
jge
loope
xchg
jg
rolb
gs
push
aad
xorb
cmp
pop
mov
jb
enter
mov
ss
push
adc
enter
in
dec
inc
jecxz
clc
orb
cmp
inc
or
fnstcw
and
sbb
xchg
stos
push
inc
pop
sbb
jmp
iret
loop
out
lret
jne
outsl
xor
jnp
inc
pop
out
sahf
and
insl
fcoms
mov
test
into
das
cmpsl
xchg
insl
inc
pop
subl
enter
scas
data16
movsb
mov
dec
add
and
dec
ja
mov
fsub
stos
cmovbe
jbe
nop
aas
leave
pop
leave
shlb
mov
and
repz
and
in
adc
or
rdmsr
xlat
mov
jns
hlt
inc
fsubrs
xor
cltd
sub
sbb
sbb
jg
bound
out
sub
les
sti
pop
in
iret
mov
loopne
xchg
in
add
dec
sub
dec
mov
je
or
push
int
xor
cltd
insb
inc
lods
mov
loopne
push
insl
and
pop
lock
dec
aas
sub
pop
xchg
mov
mov
nop
sbb
jnp
cld
mov
jl
pop
fdivs
data16
pop
in
sarl
xchg
mov
pop
imul
sub
cmp
out
mov
mov
push
mov
xor
movsl
jl
inc
inc
mov
ss
imul
jge
scas
mov
ljmp
lcall
push
xor
add
test
ret
fmull
mov
dec
mov
pop
push
inc
decb
and
push
cmp
repz
out
test
fldcw
mov
daa
cltd
movsb
cltd
pop
paddq
adc
pop
xchg
xchg
and
repnz
std
pop
lcall
dec
imul
insb
subl
inc
lahf
aas
lret
dec
rclb
hlt
ljmp
ret
mov
ds
out
das
pusha
mov
enter
sub
fadds
inc
inc
adc
add
sbb
pop
popa
jnp
pop
movsb
sub
inc
and
out
mov
cmpsl
scas
punpckldq
sbb
and
mov
push
repz
sub
lods
jge
sbb
mov
cwtl
pop
ret
jp
xor
dec
nop
popa
adc
ret
data16
xchg
test
pop
sub
rorl
xchg
insb
add
incb
adc
cmp
adc
cltd
add
outsl
pop
out
loopne
push
jp
add
push
shl
mov
mov
lret
loope
jg
iret
imul
jnp
es
lret
mov
dec
xor
out
dec
adc
aam
in
dec
scas
ret
dec
mov
mov
mov
cmp
mov
in
repnz
aad
fs
fs
mov
lods
mulps
jno
sti
fcoml
test
sbb
sub
fcompl
mov
cmp
outsl
inc
cmp
or
add
cltd
stos
cld
fwait
mov
pop
movsl
xor
out
test
fimull
std
std
sahf
addr16
orl
xchg
in
popf
ficomps
and
inc
xor
push
icebp
out
lret
es
pop
mov
xor
lret
xchg
add
dec
rolb
addr16
ljmp
cs
mov
mov
xor
loope
pop
stos
cmp
sub
mov
and
mov
dec
out
in
dec
dec
movsl
lret
jle
xor
int3
jge
imul
ljmp
dec
pop
xchg
in
dec
pusha
repz
in
xchg
sub
xchg
scas
dec
ljmp
jb
mov
aam
jmp
loopne
mov
stos
inc
mov
add
ja
xor
std
dec
out
mov
inc
mov
roll
rorb
leave
push
ljmp
pop
xlat
xor
jge
or
sbb
scas
pop
in
add
xchg
inc
mov
cld
inc
pop
movsl
or
add
pop
mov
ds
mov
jnp
int3
aas
or
jp
add
stos
shl
push
stc
popa
stc
sub
pop
sub
sub
fidivrs
mov
push
adc
mov
lcall
push
ljmp
pop
rolb
sar
mov
xorl
mov
outsl
sbb
ljmp
mov
push
xchg
es
sbb
fs
lods
out
jg
je
xchg
lcall
xchg
mov
aas
enter
xchg
andb
adcl
sub
in
push
ret
outsb
xchg
sub
mov
mov
addr16
in
bound
cs
dec
lret
mov
addr16
push
sbb
cmpsb
push
mov
add
call
xlat
hlt
xor
inc
xor
iret
push
pop
jns
out
mov
imul
pop
pop
jle
sub
push
and
xor
inc
jbe
mov
cmpsb
or
mov
int3
fsubl
addr16
jns
fwait
in
xor
scas
fbld
das
mov
add
out
xchg
sbb
cmpsl
and
dec
and
out
divl
icebp
xchg
div
jecxz
iret
scas
imul
push
sub
pop
push
enter
jecxz
cmp
cltd
test
cmpsb
mov
and
dec
outsl
lcall
pop
imul
arpl
inc
push
and
push
sbb
mov
xlat
enter
xchg
sbb
add
add
insl
mov
xchg
scas
ja
fcmovne
mov
xchg
jge
push
rorb
sub
sbb
ss
clc
pop
cmp
fs
pop
pop
movsl
jecxz
lds
imul
push
loopnew
shr
sbb
pop
xchg
js
and
fs
testl
mov
and
mov
push
fs
daa
inc
test
lret
arpl
xchg
fcmovnu
pushf
aaa
push
or
dec
jecxz
dec
mov
or
loopne
aaa
xor
fmull
pop
cwtl
fwait
xchg
xlat
sub
or
mov
push
enter
mov
loope
scas
aam
sbb
out
dec
push
or
xchg
mov
imul
xchg
enter
in
push
inc
cmpb
add
adc
pop
shll
push
cmp
pop
mov
xchg
mov
inc
and
icebp
mov
pop
stc
fst
add
xor
lods
das
xchg
xor
in
hlt
pop
xor
pop
pusha
fs
pop
pusha
ret
cmp
out
daa
jp
adc
les
loope
and
adc
sbbb
or
bound
pop
inc
push
mov
sbb
add
cmp
sbb
xor
adcl
jb
xchg
jno
mov
iret
dec
inc
xor
in
dec
lcall
ficomps
movsb
inc
repnz
mov
adc
dec
gs
insl
push
mov
push
adc
xchg
pushf
and
dec
inc
mov
rorl
lock
add
std
cmp
and
xor
les
push
mov
repz
pop
adc
pusha
ss
xlat
jbe
cmp
roll
xor
popa
popf
in
loope
xchg
nop
mov
mov
gs
jo
cltd
scas
mov
or
aas
and
outsb
dec
fucomi
imul
mov
fmul
lods
and
repz
sar
add
cmpsl
mov
pop
aad
mov
rcrb
stc
mov
inc
xor
pop
lret
and
jecxz
jle
fstp
sbb
or
ffree
imul
push
push
je
subl
outsl
xor
cmc
sbb
popa
fildl
nop
pop
aad
sti
ss
sbb
sbb
mov
push
xor
jo
mov
xchg
rorl
or
sbb
das
lret
dec
fstpl
adc
imul
inc
adc
cmp
clc
mov
scas
sub
and
imul
jmp
push
push
cmc
leave
and
sub
lret
add
hlt
popf
sub
add
and
jne
je
sbb
adc
dec
out
aas
test
arpl
cmpsb
sbb
cld
push
mov
push
mov
dec
scas
popf
scas
cmc
cmpl
sbb
mov
add
or
jecxz
xchg
ds
pop
push
xchg
pop
scas
cmpsl
ss
push
iret
fsubrs
clc
dec
mov
mov
and
pop
enter
fnstenv
adc
imul
jmp
insb
scas
out
popf
and
xchg
sub
mov
stc
iret
stos
mov
jge
fldcw
or
in
inc
fldcw
mov
shlb
jae
hlt
xchg
in
aaa
out
lcall
nop
das
ret
mov
inc
repnz
out
int3
sti
scas
into
in
adc
call
pop
sbb
cwtl
mov
test
jg
mov
pusha
mov
jo
shll
mov
mov
icebp
sarl
sub
jne
mov
cmp
inc
cli
movsl
fstpl
testb
jns
xor
or
inc
xorl
scas
addl
movsb
popf
js
push
js
mov
sub
ret
aas
fimuls
movsb
cmp
mov
pop
jmp
dec
outsl
push
jne
fmull
inc
sbb
in
popf
dec
sub
mov
cmp
popa
mov
mov
mov
mov
mov
push
les
mov
clc
pop
pop
adc
cmp
dec
lea
daa
cli
clc
mov
push
push
out
jl
mov
xchg
pop
add
pop
or
into
adc
fmuls
fcomip
and
lahf
cmpsl
pop
xor
lods
fdivrl
jge
test
cmpsb
loope
pop
mov
sbb
ss
mov
lret
pop
push
fldl
popf
xor
insl
clc
subl
mov
and
pop
mov
das
push
xor
adc
mov
jae
cmc
push
pop
popf
lahf
mov
xor
imul
shl
mov
bound
dec
aad
imul
int3
pop
out
scas
pop
mov
jbe
je
add
bound
push
aam
cmp
sbb
jle
test
xor
faddp
stc
subl
daa
scas
pop
push
jle
in
loope
adc
xor
out
addr16
cwtl
lahf
jg
in
xchg
sahf
mov
lods
sbb
stc
js
sbb
dec
movsl
jnp
adc
xchg
mov
stc
call
push
push
jecxz
scas
std
out
clc
push
imulb
sbb
mov
jne
inc
xchg
mov
xor
xor
lds
aam
add
rorb
mov
sbb
push
push
or
push
mov
cmp
mov
test
stos
lds
mov
inc
ret
stos
dec
nop
pop
xchg
or
ljmp
jb
add
jmp
popa
sbb
movsl
lock
inc
jne
loop
dec
test
clc
es
stos
enter
xchg
test
fisubrs
rorb
mov
subb
stos
addb
cmp
daa
in
iret
pop
popf
xlat
iret
mov
test
in
push
cmp
mov
mov
lods
add
subl
add
cmp
jmp
jbe
sbb
sub
mov
sbb
popa
xchg
ds
stc
inc
bound
rorl
and
std
mov
add
fs
or
push
int
ret
out
sub
daa
shlb
push
inc
jae
sub
out
push
mov
lret
shr
xorl
jmp
sbb
mov
int3
roll
sbb
push
add
movl
and
fmuls
aam
test
scas
call
sub
ljmp
mov
insl
push
jbe
pop
lcall
cltd
mov
repz
pop
xor
xchg
test
adc
leave
sbb
mov
addr16
pop
pushf
repz
push
xor
jecxz
mov
out
into
test
test
cmpsl
addps
ret
pop
or
push
push
dec
xchg
mov
dec
pop
jge
dec
xor
push
daa
lods
dec
stos
jbe
push
mov
xor
ljmp
ja
aaa
mov
dec
aaa
pop
dec
or
mov
out
outsb
push
fdivl
mov
or
int3
cmp
xchg
addr16
paddusb
mov
test
outsb
arpl
out
sbb
and
adc
aam
cmc
cltd
adc
data16
or
jmp
mov
adc
icebp
int
jns
pop
add
adc
and
add
loopne
pop
loop
loop
sbb
sub
mov
cli
pop
scas
jne
int
and
cmp
das
out
mul
sbb
iret
push
mov
rcl
cmp
or
push
popf
repnz
xchg
sbb
cli
hlt
mov
lahf
jle
cmp
aaa
stc
push
lods
xchg
mov
std
push
sub
xchg
pop
movsl
cmpl
int3
and
sti
add
and
nop
jecxz
stc
sbb
add
push
jmp
lods
aas
dec
mov
jle
jge
js
inc
packssdw
push
pop
cmp
adc
sbb
and
jmp
mov
xchg
and
mov
outsb
ljmp
or
es
add
cwtl
and
pop
cmp
mov
ret
es
jge
aas
in
ror
cmp
and
mov
push
mov
sar
dec
xor
push
negl
in
ja
push
sbb
sub
or
jo
inc
stc
pop
add
push
in
fwait
lea
mul
dec
test
sub
cmp
mov
daa
jno
lahf
fisubrs
inc
mov
dec
pop
pop
add
out
push
mov
dec
outsb
mov
mov
in
dec
insl
jp
popf
adc
stos
mov
mov
jmp
vandnpd
adc
or
dec
xor
das
mov
pop
rcll
sti
shr
push
adc
nop
cmp
repnz
test
loope
rolb
mov
dec
cmpsl
mov
push
in
lds
icebp
and
in
ds
into
pushf
or
jno
das
or
lret
mov
mov
orb
sbb
aas
jns
pop
adc
push
mov
std
stos
loope
dec
xorb
in
dec
cwtl
outsb
adc
lahf
leave
out
nop
out
mov
ret
lret
outsb
jne
mov
sar
in
lds
out
scas
push
stc
or
inc
movsl
add
push
cmp
or
gs
sbbl
faddl
repnz
insl
jge
rclb
mov
jae
outsl
out
add
in
push
das
mov
dec
cmpl
pop
jbe
inc
jb
addb
popf
or
xor
or
loope
sti
pmaxub
test
std
repnz
fs
xchg
movsb
cmp
mov
inc
sbb
out
out
popa
pop
es
shlb
ja
lea
mov
into
shr
bound
push
repnz
pop
dec
outsb
insb
or
clc
cmp
js
jnp
scas
bswap
outsl
push
dec
or
pop
mov
sbb
and
jl
ja
mov
std
adc
xchg
mov
in
aas
pop
mov
mov
xchg
jno
cld
fcoml
pop
sbb
cmp
pop
dec
pop
and
les
pop
enter
test
je
test
addr16
push
push
and
aaa
jecxz
mulb
stos
xor
jne
push
stc
or
dec
test
and
sti
xchg
xchg
cmp
imul
pusha
ret
jge
imull
outsb
mov
ss
or
sti
cwtl
call
cwtl
aas
xor
mov
aas
xor
loopne
fisubrs
jno
lcall
xchg
shr
dec
sub
jnp
lock
push
aas
stos
packuswb
lods
xor
xchg
cmpl
ret
jnp
push
shlb
cmp
inc
sub
jo
xchg
lock
scas
lret
dec
subb
push
mov
cmpsb
fstl
ss
jmp
or
ret
adc
jb
or
add
ja
rolb
int
out
gs
dec
inc
std
sub
pop
adc
adc
pop
cmp
push
aam
aas
or
cmpsl
repnz
jmp
ret
insl
adc
in
add
dec
lret
movsl
movsb
in
sbb
out
push
mov
jnp
and
dec
inc
mov
cmp
loopne
fisubrs
inc
push
pop
push
sbb
push
pop
lret
xor
push
jmp
or
sub
mov
pop
out
mov
clc
sbb
or
outsb
push
pop
mov
lods
fimull
cltd
loopne
cmp
xchg
ja
adc
or
clc
test
xchg
pop
subl
out
and
imul
xlat
dec
aam
scas
push
fs
cmpsb
xor
repz
repz
push
inc
sbb
test
bound
sub
cs
add
repnz
inc
movsl
xor
fucomi
dec
mov
or
popa
push
leave
mov
scas
jge
push
lret
popa
pop
push
push
subb
pop
enter
xor
jae
dec
pop
ret
push
aaa
sahf
adc
test
push
fwait
xor
shll
push
and
adc
pushf
pop
sbb
rolb
out
icebp
je
sbb
ret
mov
mov
fnstsw
lods
sub
ja
mov
push
leave
insl
shrl
xchg
or
lods
mov
pop
iret
jno
sti
push
test
test
cmpsl
in
pop
test
mov
addr16
shlb
mov
push
ret
stc
aam
out
sarb
daa
les
sbb
iret
or
insl
xor
clc
mov
stos
arpl
mov
shrb
std
idivl
shl
inc
mov
mov
pop
sbb
push
and
imul
orl
sahf
icebp
and
sbbl
cmp
frstor
add
and
adc
add
jbe
insl
jae
pop
xor
lcall
psubw
jl
aas
adc
jl
fs
adc
cwtl
pop
repnz
cmpb
sarl
std
push
test
sbbb
sarl
mov
mov
add
repz
loope
es
xchg
std
repnz
adc
sbb
orb
jmp
xor
and
jge
sbb
push
cmp
cmp
mov
dec
sbb
lret
inc
xchg
cli
xchg
sbb
xor
fisubs
dec
mov
xchg
outsl
xchg
lds
lock
pop
jb
mov
inc
scas
sbb
das
sub
dec
movsb
jnp
or
jno
lret
push
mov
xchg
cwtl
sub
lds
and
scas
fisttpl
fs
pop
xchg
sarb
and
inc
pop
addr16
les
xchg
fsubl
pop
lds
jg
pop
daa
mov
out
adc
mov
popf
decb
xor
mov
inc
cli
ret
pop
mov
dec
xchg
inc
xchg
jo
mov
sti
ret
in
fwait
pop
xchg
push
into
loopnew
pop
int3
mov
pop
bound
dec
lods
cmpl
sbb
xchg
dec
pop
cld
idiv
bound
inc
dec
mov
lret
int3
enter
mov
jmp
cmc
pop
cs
and
out
xor
sbb
jb
andl
mov
push
mov
cwtl
leave
sbb
outsl
je
xchg
pop
rorl
int3
gs
js
jecxz
daa
lods
sbb
aam
xchg
adc
add
dec
in
loop
std
push
push
xchg
or
sub
test
int
repnz
pop
adc
lods
aam
add
push
repz
into
fisttps
test
imul
aam
sbb
pop
popf
jp
into
and
sub
shll
inc
call
dec
mov
cmp
jae
dec
push
xchg
mov
shrl
fsubr
push
xchg
push
cmp
arpl
push
lcall
rcrb
adc
jg
pop
mov
jb
clc
repnz
sbb
mov
and
dec
push
aad
xlat
cmpl
lea
jno
ss
adc
inc
inc
push
jmp
cs
int3
repz
pop
loopne
shll
jo
leave
loope
test
jbe
loopne
pop
or
xchg
mov
mov
xchg
fbld
leave
inc
stc
mov
into
dec
out
stc
add
imul
pop
in
gs
and
ficoml
and
mov
push
xor
mov
mov
loop
bound
ljmp
aaa
pop
pusha
je
push
test
sbb
xchg
sti
pop
lods
xor
lret
shlb
out
cmpsl
lret
aam
imul
pop
scas
pop
or
dec
mov
dec
cmp
and
lea
int3
mov
pop
mov
movsl
aam
mov
and
mov
adc
aad
xchg
pop
popa
fdivl
sbb
ja
out
add
pusha
mov
mov
lods
sbb
cmp
jb
das
fdivp
sbb
xorl
mov
mov
stos
rorb
lahf
jle
and
cmp
xchg
ss
pop
in
cmpsb
add
xor
movb
fisttpl
sti
mov
in
xchg
inc
loope
loop
mov
xchg
adc
inc
sub
jl
clc
cli
pop
pop
lock
jp
inc
add
add
int
jg
adc
shl
lock
sub
sahf
jle
jp
popf
dec
insl
dec
inc
sbb
mov
and
pusha
out
lods
and
pop
mov
mov
jno
into
dec
outsb
mov
ret
out
outsb
repnz
sub
pop
call
adc
xor
in
push
int
cmp
push
into
sub
aad
or
pop
pop
dec
mov
fs
push
mov
dec
shlb
loope
adc
mov
daa
mov
mov
sbb
rcll
in
push
iret
xor
loope
xchg
add
loopne
fnsave
push
sar
xor
insl
stos
push
push
pop
xchg
pop
imul
mov
cli
aas
mov
inc
idivb
mov
sahf
mov
mov
test
sbb
ret
mov
lds
imul
addr16
cmp
out
inc
nop
and
lock
mov
xchg
loopne
movsl
js
inc
ds
cmp
insl
jmp
mov
imul
push
cld
movsl
cmp
adc
lahf
mov
xchg
jp
and
nop
add
outsl
or
fwait
mov
dec
add
leave
inc
rcl
jecxz
ret
pop
ds
fs
fnstenv
mov
cmp
or
add
shll
mov
pop
scas
lea
xor
or
mov
sbb
inc
daa
mov
inc
outsb
repnz
in
movsl
arpl
mov
fimull
push
rolb
xchg
sti
in
push
es
sub
test
xchg
mov
pop
or
out
pop
insb
add
lods
cmp
lds
cli
sub
stc
dec
rcrl
or
xor
mov
pop
adc
lods
mov
sub
adc
push
mov
xor
setg
jne
and
das
inc
in
mov
fists
xor
fistpl
aad
mov
dec
sbb
out
mov
xor
mov
in
icebp
outsl
push
cwtl
dec
test
ret
jns
pop
fs
xchg
inc
mov
pushf
pop
cmp
dec
enter
das
mov
mov
fldt
sbb
cmp
icebp
repz
mov
popa
stos
js
lock
loopne
or
shl
add
sub
lcall
icebp
outsb
inc
pop
and
cmp
mov
jbe
xchg
insl
add
pusha
shrb
xchg
lea
rclb
fistpl
mov
out
jb
cwtl
std
jno
push
mov
dec
ret
imul
std
mov
inc
dec
push
inc
ljmp
sub
and
push
jecxz
xor
adc
jne
xchg
std
scas
pop
clc
or
dec
dec
loopne
stc
lcall
pop
push
mov
dec
inc
jg
cmpsb
add
xorps
fcompl
out
sub
xchg
sub
pop
test
addr16
addr16
pop
inc
andb
ret
shrb
jno
imul
outsl
mov
insb
jns
or
jmp
add
cli
scas
xchg
outsl
std
pop
insl
jb
or
xchg
out
mov
cmp
or
inc
leave
pop
xor
lahf
pop
mov
mov
lret
enter
cmpsl
push
mov
mov
cmpsb
mov
mov
data16
xchg
sub
int3
or
mov
push
movsl
pop
mov
cli
pop
mov
test
mov
mov
bound
mov
mov
loop
test
fisubl
iret
loop
add
jb
outsl
push
or
cmp
mov
ror
test
fistps
push
pop
pop
pop
ljmp
jbe
ja
ja
cli
std
xor
mov
outsl
xchg
cmp
das
leave
or
add
sbb
dec
inc
mov
pop
jge
dec
je
mov
jns
dec
sub
iret
xor
adc
mov
inc
dec
mov
out
or
dec
lret
add
pushf
jp
adc
mov
add
ss
rolb
xchg
dec
imulb
xor
xchg
ret
and
sbb
mov
xchg
pop
ds
mov
les
push
jne
hlt
cs
shll
in
xchg
enter
dec
add
mov
fs
sub
ss
jge
or
out
jecxz
pop
clc
add
push
adc
mov
in
mov
in
sbb
fs
je
cld
pop
xor
loope
adc
out
jp
xorb
stos
sbb
shrl
adc
pop
cmpsl
push
mov
aas
cwtl
mov
andl
inc
and
lods
jnp
inc
aaa
pop
test
fimull
add
shrb
int3
sub
dec
fcomi
call
jb
pop
sbb
nop
cmp
scas
aas
pop
test
int3
dec
loopne
xor
jmp
or
push
push
push
shrb
movsl
dec
mov
subb
cwtl
add
imul
mov
fcomi
popa
sahf
lods
test
mov
sub
and
jb
or
jge
cmp
cmp
push
jg
inc
lret
iret
dec
mov
sbb
iret
xor
add
dec
and
repz
in
xchg
or
std
fwait
iret
mov
into
jmp
mov
in
pop
push
repz
popa
popl
or
mov
jnp
lahf
jl
cmp
xchg
add
mov
push
clc
push
lods
sub
add
nop
mov
sbb
sbb
lds
std
pusha
jmp
mov
lcall
std
jae
sbb
add
das
jp
movl
insl
mov
push
daa
mov
insl
push
inc
inc
les
js
push
xchg
outsb
or
popa
inc
jg
xchg
pop
jg
add
push
jp
adc
in
loop
scas
cmp
xor
cmp
jle
and
dec
repnz
rcrl
mov
push
leave
sbb
pop
mov
nop
mov
and
test
js
pop
aad
gs
add
mov
in
cli
mov
xor
pop
incb
outsb
jne
cmpl
mov
mov
icebp
test
pop
ret
fisttpll
bswap
push
mov
xor
mov
push
xor
outsb
fucom
insb
or
jbe
dec
push
daa
and
adc
loope
dec
cmp
sbb
xor
jge
xor
jmp
mov
jecxz
enter
int
pop
xchg
cld
xchg
dec
and
sbb
push
add
push
xchg
insb
mov
shlb
sbb
jne
xchg
pop
xchg
out
ja
cld
nop
mov
dec
jp
dec
insl
jmp
dec
stc
or
popa
xchg
pushf
and
adc
subb
sti
and
leave
leave
sub
push
mov
push
xchg
jbe
pusha
pop
push
or
sarb
dec
out
in
sbb
sub
or
pop
jmp
cmp
mov
xchg
call
fistpll
and
mov
mov
int
mov
jecxz
mov
cltd
lret
mov
and
lock
test
dec
mov
xlat
cmp
mov
ret
in
adc
out
pushf
push
xchg
dec
outsb
adc
dec
pop
lcall
push
orl
imul
push
pop
sub
sub
hlt
stos
mov
les
sbb
leave
xor
idivb
and
mov
cmp
mov
dec
dec
imul
rcrl
icebp
cmp
ffree
or
pop
sub
pop
imul
xchg
dec
sbb
loopne
push
loopne
int
push
jg
pop
arpl
sbb
decl
js
mov
jno
jmp
xchg
ret
push
cmpsl
jbe
lods
jp
dec
jmp
inc
fiadds
mov
in
xorl
mov
nop
jecxz
in
sahf
js
pop
cmpsl
cli
inc
mov
dec
imul
cltd
inc
imul
cwtl
stc
inc
mov
mov
add
cli
lods
or
dec
adc
call
shr
add
jns
lds
pop
into
xchg
int3
push
push
jmp
hlt
or
xor
push
jp
adc
push
dec
imul
and
jns
push
mov
bound
in
xchg
fldt
inc
push
aas
sub
xchg
leave
aam
mov
sub
outsb
jl
dec
dec
daa
push
push
test
stos
or
push
xchg
xorb
mov
push
and
jp
xchg
fsts
push
add
push
je
push
rcrl
frstor
and
and
sbb
adc
mov
cmpsb
jmp
xor
xor
aas
int3
stos
dec
sbb
mov
fsts
or
jl
clc
inc
lods
pop
mov
outsb
es
inc
mov
dec
and
pop
sub
mov
ljmp
xchg
inc
dec
dec
cld
ret
out
mov
xor
mul
sub
sub
fstpt
push
jno
pop
and
jo
inc
lock
inc
loopne
push
lods
jne
orl
movups
jbe
mov
mov
loop
addr16
test
and
pop
ja
jle
das
xchg
or
mov
pop
mov
jnp
clc
fdiv
mov
aam
and
pop
cld
inc
fdivrs
and
xchg
es
fdivrp
iret
sbb
inc
mov
popa
sarb
jo
bound
fnstsw
pop
sub
mov
and
cmpsl
repz
pop
jne
popf
dec
xor
sbb
aas
inc
or
lret
shlb
nop
cmp
ja
int3
push
into
or
xor
mov
inc
in
fisubs
xchg
fdivl
sti
or
jno
xchg
adc
mov
push
xchg
dec
test
lods
sbb
xchg
adc
pop
pop
clc
icebp
out
fsubl
loope
faddp
mov
ja
xchg
rclb
sbb
call
pop
xchg
stc
int
aaa
xchg
push
mov
pop
lret
fimuls
mov
das
test
lds
xor
push
loope
loopne
divb
sub
add
mov
lods
cmp
leave
dec
mov
popl
cmp
inc
mov
rcll
cmp
lods
lret
jb
inc
fstl
ljmp
pop
mov
mov
pop
loopne
pop
mov
xchg
dec
je
in
pop
push
arpl
cld
jo
push
aad
pop
mov
cmp
je
cmp
mov
sbb
aas
or
call
pop
mov
fnstsw
and
repnz
push
mov
inc
shl
mov
jecxz
popa
dec
xchg
lcall
mov
aaa
outsb
into
jbe
sub
into
jge
fbld
jo
call
ret
in
in
cmp
ror
ds
adc
mov
pusha
ret
sub
in
outsl
movsb
add
in
push
outsl
xchg
sub
jns
jb
jnp
in
xor
in
aaa
mov
mov
pop
scas
mov
jb
cmp
aam
cli
jge
push
xlat
jge
repz
dec
and
lods
les
and
mov
ljmp
cli
cwtl
icebp
sbb
pop
inc
or
adc
sub
cmpsl
lock
pop
push
and
clc
das
leave
mov
test
cmp
inc
jmp
dec
push
leave
xchg
loope
xor
test
lret
and
test
mov
ficomps
je
or
popf
ret
cmp
lock
test
inc
mov
add
pop
sbb
shrl
fstps
popf
mov
cmpsb
xchg
jae
addb
popa
stos
cmpsl
xchg
call
in
shl
sub
insl
sbb
addl
inc
decl
sub
mov
cmp
gs
push
fcoms
or
adcb
hlt
aad
mov
cltd
lret
je
push
xchg
jl
outsl
sarb
xchg
lods
push
mov
sub
or
lds
mov
test
test
sub
fmul
loop
mov
nop
add
xchg
scas
ret
arpl
cmpsl
adc
jecxz
pop
fcmovnbe
jnp
pop
cmp
mov
in
jle
and
ss
dec
cmp
fistpl
fcmove
xchg
pop
push
mull
test
pusha
push
dec
jp
or
test
jo
mov
inc
in
pop
shll
jmp
mov
mov
mov
and
dec
xor
mov
aas
jne
mov
cmp
and
push
arpl
mov
add
xchg
jo
cmp
iret
outsb
adc
xchg
mov
repz
mov
pop
mov
aas
push
in
push
shll
clc
and
leave
data16
mov
xlat
push
mov
adc
pop
pop
bound
jb
stos
in
or
das
clc
jne
lods
icebp
push
adc
xor
jge
push
cmpsb
dec
pushf
cmp
push
pop
lret
sbb
push
sub
inc
mov
in
mov
push
push
ss
inc
cs
jge
xchg
jbe
or
int
sub
push
leave
xor
push
in
addr16
pop
lods
cmpw
call
sahf
sti
add
mov
cs
gs
fucomi
xorl
shrl
inc
mov
hlt
iret
and
or
mov
mov
push
xchg
std
and
jnp
adc
shrb
pop
push
fisttpll
adc
into
cmp
push
sub
mov
jno
cmp
inc
jle
sub
outsl
add
mov
jnp
stc
sub
test
pop
pop
jl
movsl
shrl
sbb
out
xchg
push
lods
das
push
fistpll
and
shrl
pusha
xor
mov
lcall
mov
std
push
imul
cmp
mov
push
cmpsb
repz
jb
push
inc
jae
ret
test
pusha
lret
lcall
rolb
adc
imulb
int3
ss
repz
js
arpl
mov
negl
popf
aas
movsl
mov
ret
daa
xor
scas
sbb
daa
mov
out
lods
jmp
pop
jge
loopne
loope
push
aam
inc
mov
sub
imul
cmpsb
bound
jae
xchg
lret
sbb
jnp
cmpl
mov
mov
hlt
inc
and
into
cmp
test
mov
popf
cwtl
cltd
in
ljmp
rorl
test
adc
arpl
popl
inc
and
add
mov
cmp
dec
out
sahf
pop
lods
lret
jne
inc
add
mov
mov
add
pop
inc
imul
lea
js
jnp
or
sub
pop
add
xor
lods
mov
popa
jb
xchg
push
ret
lahf
xchg
jmp
adc
cmp
add
inc
jl
sub
into
dec
mov
and
lods
cmp
stos
ss
inc
inc
and
or
mov
dec
sbb
out
repz
jnp
inc
add
cmpsb
adc
or
ret
dec
gs
lods
icebp
push
aas
mov
movsb
repz
or
add
and
dec
push
xchg
cmp
sbb
shll
pop
mov
push
stos
or
dec
xor
fimuls
loop
cmpl
jmp
incl
add
mov
idiv
outsb
sbb
push
leave
pop
es
jo
js
in
pop
ljmp
push
jge
xchg
mov
xor
inc
xlat
pusha
dec
repnz
out
imul
jp
lcall
sbb
aas
fisubs
inc
pop
popf
push
adcb
popa
repz
stc
add
in
xchg
rolb
add
mov
insb
loopne
lcall
ficomps
stc
inc
hlt
or
xchg
cmpsl
shl
out
stc
xchg
jnp
repnz
cld
sbb
imul
shl
outsl
dec
xchg
xor
push
and
lahf
push
mov
je
or
push
cmp
cmc
mov
and
push
inc
jno
mov
sbb
cmp
imul
gs
ret
daa
sbb
fistl
jmp
and
daa
arpl
in
call
jns
cmc
and
dec
sbbb
xor
cmp
xchg
imul
jmp
xchg
mov
jg
sub
insb
loopne
into
jne
inc
aam
cld
pop
stos
pop
fwait
mov
jp
mov
jbe
loope
inc
xor
cmp
cwtl
stc
xchg
push
add
pop
clc
inc
inc
dec
notb
sub
rcll
mov
add
gs
daa
lret
adc
fmul
orb
std
add
movsl
pop
rcll
lret
cs
pusha
in
pushf
test
std
or
xchg
push
xor
mov
cld
dec
pop
and
data16
in
dec
mov
jmp
int
dec
jp
sub
das
mov
iret
mov
xchg
jecxz
inc
xor
lcall
xor
jecxz
aad
dec
imul
sarb
loope
mov
std
loopne
push
pop
adc
lahf
ljmp
sub
insl
add
jmp
pop
push
std
das
testl
div
add
dec
dec
jne
arpl
jge
cmpsb
or
ja
out
cwtl
mov
outsl
push
or
sub
add
cltd
nop
movsb
dec
scas
add
gs
out
aas
rorb
push
xchg
call
fucomip
or
or
cmp
xchg
jne
sbb
gs
pop
out
inc
pushf
mov
xlat
inc
jmp
dec
int3
push
lods
dec
shr
xchg
lods
insb
sbb
sbb
jl
pop
aaa
sbb
push
fdivrs
dec
in
and
mov
jbe
sbb
pop
push
stos
lds
xor
xor
push
and
lcall
xor
jl
pop
repz
mov
outsl
push
jo
out
sub
dec
and
out
xor
and
sar
inc
aaa
xchg
inc
mov
xchg
sub
insl
outsl
sbb
mov
ljmp
imul
cmp
push
insb
jmp
inc
xorl
incw
sti
sahf
cwtl
xor
jmp
pop
dec
fcoml
loope
add
clc
and
push
push
scas
movsl
xchg
scas
mov
hlt
dec
xchg
mov
rcrl
xor
xchg
push
sub
out
aam
or
lock
test
filds
leave
xchg
sub
or
and
cmpsl
cmp
divl
shl
sub
bound
nop
in
rcrl
outsb
icebp
test
pop
repz
outsb
ret
in
or
jno
je
pop
inc
fimuls
sahf
in
adc
push
rorl
pop
jns
fdiv
aad
addl
pop
push
dec
jae
xchg
or
push
xchg
leave
bnd
push
mov
mov
xchg
xlat
push
outsl
pop
xor
xor
mov
int
rorl
cmpsl
andb
inc
push
jmp
test
or
dec
xchg
out
std
inc
mov
sub
mov
or
add
push
mov
jae
popa
es
or
int3
mov
and
mov
mov
xor
jnp
fdivs
xchg
xchg
xchg
ror
pop
inc
mov
fnsave
mov
pop
and
mov
pop
mov
fldt
mov
adc
ret
clc
xor
jno
mov
cmp
lret
pop
fucom
xor
aas
fs
outsb
push
mov
ret
mov
or
push
push
inc
push
fsubl
stc
iret
mov
push
xchg
xchg
push
xor
push
push
xchg
call
pop
xor
cmp
dec
push
cltd
rcr
arpl
add
lahf
rcll
push
sbb
cli
into
mov
pop
cwtl
inc
mov
mov
scas
sub
adc
rep
mov
xchg
mov
xchg
aad
xchg
fnstenv
scas
into
fwait
sbb
mov
imul
in
cmp
push
imul
dec
xchg
dec
mov
nop
jno
push
stc
sbb
push
fistl
sahf
jmp
jg
xchg
es
movsb
add
cwtl
mov
lock
inc
xchg
add
mov
fisttpl
repz
xchg
icebp
jl
mov
outsl
xor
out
xchg
mov
xlat
jmp
xchg
rorl
xchg
in
in
mov
pop
movsb
pop
mov
xor
xchg
in
out
stc
xor
fs
adc
aad
xor
ret
mov
rorb
int3
into
push
pop
mov
and
xor
pop
adc
cs
addr16
mov
jbe
lods
fcomi
or
inc
std
mov
xor
adc
stos
fdiv
mov
jno
push
iret
cmp
push
add
pop
push
lahf
scas
jl
mov
sub
cwtl
xlat
xor
repz
push
call
lds
js
push
add
call
jns
ljmp
mov
je
aas
xor
outsb
jno
rcrb
loope
sbb
fisubs
pop
rcrl
fnsave
fcompl
jbe
stc
adc
cmp
das
rolb
xchg
push
sub
add
or
mov
sub
outsl
and
mov
dec
fimull
add
mov
adc
xor
int
stc
sbb
add
test
pop
roll
mov
push
jg
mov
push
fsts
mov
add
cmc
push
xchg
jg
mov
mov
aam
mov
js
cmp
and
das
and
cltd
mov
jmp
scas
out
dec
lret
push
test
in
scas
ret
cmp
add
out
add
lahf
sub
cmpsl
xor
roll
in
inc
lods
inc
pushf
mov
loopne
xlat
ss
lods
imul
fcoms
int3
sub
mov
jp
adc
push
int3
or
adc
in
mov
test
sarb
jge
mov
dec
xor
insb
xchg
jmp
sub
cltd
dec
imull
add
icebp
imul
and
test
xor
icebp
push
adc
inc
dec
pop
cwtl
shrb
lods
popa
pop
sahf
cli
popf
fstps
addr16
mov
jl
mov
sarl
dec
mov
adc
rorl
xorl
add
cmc
mov
xchg
and
push
xchg
aas
push
aad
inc
sub
mov
push
or
dec
jecxz
mov
packssdw
rorl
mov
jmp
pop
decl
leave
pusha
lea
cmp
mov
pop
mov
adc
sub
scas
push
lahf
shrb
or
sub
cmp
jne
stos
cs
pop
cmp
mov
mov
mov
popa
and
jns
dec
mov
test
dec
fildll
cs
mov
mov
outsb
mov
int
cli
inc
sub
jbe
cmc
loope
or
in
jno
and
lahf
sbb
or
gs
pusha
mov
loope
icebp
dec
add
cmp
pmaxsw
mov
push
mov
sti
mov
out
xlat
ret
and
es
aaa
fbld
out
cwtl
push
jae
push
sbb
lret
pop
ret
les
test
cmpsl
fdivs
xchg
in
push
cld
cmpsl
into
jecxz
adcl
mov
and
notb
das
mov
jl
mov
pop
loopne
xchg
lock
lods
xchg
gs
in
inc
xor
je
push
out
pop
mov
stos
jb
out
xor
aaa
cmp
or
sub
push
cs
pop
mov
test
xor
lods
fwait
shlb
mov
jle
xor
sbb
sbb
jo
cmp
cltd
pop
fnstcw
pop
cmove
imul
dec
pop
xchg
cmp
add
fwait
xor
xchg
in
enter
rorl
insb
cmp
or
not
jle
pop
lret
dec
xchg
loop
xor
outsb
fwait
cmp
movsb
sbbl
mov
testl
lock
enter
push
sbb
pop
or
sbb
sarb
pop
mov
shrl
pop
test
pop
sub
fidivl
sub
in
loope
xchg
out
lret
ljmp
push
push
pop
adc
xor
pop
adc
mov
outsb
mov
test
push
sbb
mov
addr16
das
pop
adc
lds
pop
sahf
adc
inc
mov
dec
adcb
dec
cmp
mov
cmc
xor
sbb
or
aas
or
cwtl
pop
enter
add
mov
movsb
push
mov
loope
add
pop
fcmovbe
jmp
xchg
mov
out
loopne
and
in
mov
mov
or
inc
sbb
xor
sbb
push
mov
cld
inc
in
cmpsb
or
test
imul
cltd
mov
cmp
adc
mull
out
mov
xor
jl
inc
scas
lret
outsl
fwait
sub
addl
jmp
adc
test
push
mov
rclb
xchg
jp
fwait
jmp
fdivrp
and
movsb
sti
pop
jae
test
pop
scas
jecxz
mov
mov
mov
pop
mov
mov
popf
data16
push
push
inc
aad
fmull
mov
or
fwait
jecxz
out
add
cwtl
loopne
mov
pop
cli
cmp
jmp
cmp
ljmp
fcoml
dec
mov
and
iret
test
sub
sub
or
xchg
and
lret
mov
pushf
xor
clc
pop
leave
pop
and
adc
sbb
imul
ret
js
mov
addb
jg
sub
mov
xchg
mov
cmp
jbe
cmp
add
sub
sub
adc
or
ss
cld
fsubs
mov
vandps
mov
jge
or
sub
pop
imul
mov
out
push
repz
or
sub
xor
mov
adc
xor
stos
cmp
adc
xor
ds
daa
pop
jbe
dec
mov
notl
cmp
mov
sahf
aaa
and
test
mov
dec
dec
or
mov
xor
jae
sarb
jmp
mov
in
in
jmp
ret
iret
cmp
sbbb
ljmp
mov
pop
inc
popa
subb
mov
jae
sub
mov
push
push
std
xchg
pop
imul
and
sbb
aam
shll
pop
mov
setle
push
pop
pop
iret
aaa
cmp
test
lods
mov
fistps
xor
cmp
lds
pop
repz
sub
imul
lret
xorb
pop
mov
add
jecxz
jg
mov
jo
jle
xorl
aam
dec
imul
jae
push
rorb
pop
xorb
push
or
lahf
jmp
in
addr16
xor
dec
pop
sbb
mov
push
cmpsl
jge
lds
push
es
mov
and
aad
and
lahf
add
push
fstl
jge
stos
daa
out
fwait
in
mov
mov
out
es
in
fwait
pop
dec
xchg
test
or
add
hlt
es
loopne
pop
cwtl
or
lock
mov
add
outsl
mov
in
sbb
jo
jae
cwtl
decl
mov
cmp
jge
cmc
mov
pmaddwd
aaa
ds
lods
jno
mov
push
lods
sbbl
cmc
mov
mov
push
mull
inc
pop
test
mov
dec
cmp
cmp
and
dec
ljmp
iret
ret
sbb
std
pop
jmp
or
out
inc
movsl
or
pop
xchg
mul
lods
mov
sub
xchg
xchg
xchg
jo
jmp
ja
xchg
or
push
xor
add
js
pop
mov
jae
mov
mov
pop
inc
imul
mov
fnstenv
sub
push
enter
mov
pop
ja
fcom
sub
mov
ljmp
xor
jmp
xchg
sub
sbb
mov
shll
sbb
xchg
pop
out
or
out
aaa
or
cld
xchg
xlat
sub
jmp
orl
inc
and
inc
jae
loopne
andb
repnz
into
jb
mov
sub
and
push
stos
test
sub
invd
loope
into
pop
shll
xor
adcb
arpl
leave
dec
outsl
outsb
daa
mov
mov
popa
imul
mov
dec
test
aaa
sub
pop
mov
xchg
aas
jmp
inc
pop
dec
jae
dec
push
dec
sbb
rcrb
sub
mov
inc
mov
out
int
rorb
cwtl
dec
fldenv
cld
out
es
mov
xchg
or
add
xchg
jecxz
js
and
xchg
xor
ret
imul
aam
or
inc
mov
mov
mov
add
outsb
xchg
fs
incl
push
icebp
lods
adc
mov
dec
mov
shll
cmpsb
mov
or
lods
js
mov
sbb
iret
jge
sub
sahf
dec
iret
sub
sti
and
mov
inc
push
cmp
cwtl
xor
std
xchg
or
jp
subb
sub
pop
mov
mov
jl
inc
cmp
sbb
xor
fwait
fsincos
lahf
das
pusha
adc
ret
shlb
adc
mov
rcrb
fld
repnz
aad
mov
mov
inc
inc
ret
and
nop
pop
shll
inc
pop
push
xbegin
inc
xchg
jae
push
rol
cld
mov
aam
imul
fwait
jmp
jl
mov
icebp
dec
and
cmp
out
ss
es
adc
cmp
lods
int3
mov
sti
mov
sbb
les
mov
push
mov
dec
orb
mulb
ficoms
mov
mov
andl
pop
xor
call
mov
les
push
ss
xlat
stos
and
cmc
pop
stos
add
insl
test
jge
xor
test
dec
xchg
orl
test
mov
or
repnz
fbld
pushf
mov
dec
pop
in
mulb
cwtl
into
iret
ficompl
les
jno
js
ds
lods
jne
or
mov
in
shrb
outsl
add
cmp
mov
jb
dec
mov
mov
mov
pop
mov
fimull
outsl
adc
mov
in
sbb
xor
lret
push
in
and
and
mov
repnz
xchg
jl
ja
sbb
xchg
xor
xchg
je
nop
pop
jg
shll
das
pop
outsl
mov
push
sub
inc
movsb
dec
pop
mov
out
out
into
mov
test
idiv
inc
shrb
fisubl
push
data16
fildl
push
test
lods
pop
lock
xor
cmpsb
xor
jmp
call
mov
mov
mov
mov
mov
mov
or
sarl
dec
xorl
in
cwtl
pop
and
fcompl
or
mov
mov
push
jbe
pop
mov
and
out
cwtl
mov
andb
inc
inc
outsb
mov
push
ret
xchg
gs
and
out
fcoml
mov
icebp
add
outsb
push
movsl
stos
jmp
leave
jae
lret
cmpsl
xchg
add
add
inc
ja
jg
adc
cmpl
xor
jmp
inc
add
mov
into
lea
push
jl
loope
fstps
xlat
sarl
push
sbb
mov
cmp
fcoml
dec
xor
fcmove
hlt
cltd
adc
or
je
add
push
subb
and
xor
fidivl
outsb
jbe
negb
cmp
xchg
clc
mov
push
dec
pop
mov
stos
and
cs
sbb
push
jmp
aaa
xchg
in
ret
pop
std
sti
xchg
adc
sub
adc
sbb
lock
adc
jne
jp
jg
cmp
pop
pop
call
xor
dec
xchg
mov
cmp
fwait
mov
arpl
or
mov
test
or
pop
add
add
stos
jle
bound
lds
xor
or
cwtl
push
hlt
bnd
sbb
enter
and
test
shrl
or
add
add
adc
std
lods
push
cltd
rcrl
outsl
sub
fcoms
adc
shlb
repz
call
jno
pop
ret
add
cmp
inc
sbb
js
sub
stos
xchg
add
mov
inc
es
fists
shlb
js
xchg
mov
scas
dec
ljmp
iret
aad
outsb
call
fcoms
in
mov
cmp
aaa
jecxz
jns
cmp
sub
in
add
loope
loope
shrb
stos
or
mov
mov
pop
sti
cmp
mov
adc
insl
enter
jns
push
imulb
add
sub
inc
int
sbb
mov
and
out
fstpl
push
cld
add
xchg
stos
dec
add
add
lock
sub
push
mov
cltd
imul
mov
cmovl
adc
jo
adc
insl
clc
adc
iret
lods
mov
push
test
pushf
int3
test
push
repnz
insl
mov
cmc
mov
bound
ds
adc
xor
adc
jle
cmp
or
dec
hlt
int3
xor
dec
push
mov
rolb
mov
add
mov
xor
inc
xchg
inc
mov
xchg
cld
inc
fmuls
loop
jo
xchg
shr
lret
mov
fwait
add
int
jg
mov
addl
jmp
pop
loopne
push
xchg
xor
outsl
fadds
bound
es
aam
add
push
negb
jecxz
dec
fwait
sub
or
fimuls
test
xchg
mov
cmp
push
dec
sarb
cmpsl
in
cld
inc
dec
fnstenv
sahf
loope
inc
and
stos
dec
mov
jnp
jnp
adc
outsb
scas
arpl
les
popf
loop
cmpsl
mov
jl
mov
push
pop
fistl
scas
xor
jb
pusha
shll
cltd
je
cltd
fldcw
and
push
or
jl
mov
addr16
mov
sub
add
in
sarb
imul
int
iret
sub
outsl
inc
jl
dec
cld
and
in
fmulp
movsb
dec
mov
loop
or
pop
sti
aas
sbb
fnsave
push
lcall
test
jl
pop
insb
jg
push
iret
sar
pop
dec
push
lea
xchg
pop
mov
sub
cmp
test
sahf
pop
cmpsl
out
data16
adc
sbb
cmp
bound
lret
pushf
xchg
inc
mov
js
xchg
hlt
scas
std
fisubl
outsl
insl
call
jb
xchg
pop
fadds
push
xchg
add
fdivl
popl
xchg
adc
mov
mov
pushf
bound
push
add
jge
xchg
scas
pop
cmpsl
lahf
xchg
jnp
jp
in
movsl
pushw
dec
adcb
shll
inc
stos
mov
in
pushf
ret
in
insb
xlat
cs
lahf
es
cld
test
scas
arpl
das
inc
daa
xchg
jno
mov
mov
pop
push
sub
imul
add
mov
mov
cmpsb
outsl
inc
movsb
leave
out
call
jb
pop
daa
push
scas
loope
jnp
jle
cmp
je
in
mov
sub
xchg
push
ljmp
sbb
lret
dec
test
sbb
cmc
cmp
and
push
cmc
pop
pop
and
lock
imull
cli
mov
mov
mul
cmp
push
cmpsb
mov
testl
scas
and
mov
in
push
push
inc
lahf
int3
mov
iret
rorb
xchg
sarb
stos
xchg
adc
std
add
clc
lods
mov
push
in
and
mov
sub
std
mov
nop
sahf
outsb
sub
mov
out
dec
add
iret
adc
cmp
aad
pop
and
sub
adc
add
cmp
fisubrl
inc
adc
je
push
mov
out
inc
push
sbb
jge
into
jg
call
jecxz
test
inc
xorl
push
sbb
jge
xchg
into
clc
dec
mov
hlt
sub
mov
pop
arpl
call
pop
mov
cmp
scas
jbe
pop
xchg
ja
cmp
cmp
xchg
sarl
mov
push
and
mov
mov
mov
and
inc
icebp
ss
mov
fldt
rcrb
adc
inc
sbb
jmp
dec
cmp
xchg
cmp
jb
pop
popa
lcall
mov
mov
shll
subl
fcmovnu
push
test
jl
test
out
cmp
aas
cmp
imul
loope
jbe
dec
roll
mov
push
sub
das
fcomps
stc
pop
mov
test
dec
icebp
pushf
fcmovne
xor
in
adc
rcrb
mov
imul
out
xchg
cmpsl
inc
sbb
xor
jns
sbb
pushf
mov
sub
scas
stos
push
inc
enter
hlt
fcmovb
sarl
push
mov
scas
rclb
pop
push
mov
sbb
in
cmpsb
sub
mov
sub
sbb
pop
lods
xchg
push
adc
test
in
mov
das
popa
ror
sarb
fsts
in
sub
stos
push
push
nop
cs
or
in
jg
inc
fbld
ja
mov
fists
outsb
movsb
jo
in
addr16
adc
and
lret
insb
cli
sti
jne
inc
insl
lods
inc
inc
icebp
xchg
pusha
xchg
jge
lret
xchg
cmc
in
push
scas
in
push
movsb
sbb
sbb
mov
outsl
jo
sub
mov
jge
cld
fldl
add
dec
dec
mov
and
sbb
mov
call
insb
repnz
cmpsb
mov
pop
xor
imul
jnp
mov
std
pop
fiadds
out
push
fwait
and
jbe
lcall
cld
pop
insb
inc
cli
jb
out
dec
inc
pop
push
sbb
inc
adc
in
imul
push
xor
dec
mov
xchg
pop
fs
xchg
dec
pop
or
adc
iret
aas
movsb
loopne
out
fdivs
or
popf
or
loop
shlb
out
iret
or
loope
mov
lods
fwait
cmp
lret
in
cmp
bound
testl
mov
push
jo
adc
adc
adc
test
hlt
das
test
pop
add
xchg
pop
aad
cmpsb
or
cld
jns
cli
ds
stc
xchg
xor
mov
dec
pop
in
cltd
test
sub
jne
adc
mov
push
iret
mov
insl
sti
stos
scas
sbb
movl
out
fsubr
mov
ds
adc
inc
jg
repnz
sbb
dec
scas
or
loopne,pn
popf
inc
les
xor
orb
scas
jle
inc
mov
inc
push
push
in
subl
xchg
lcall
jp
pop
jae
push
ficoml
ss
inc
rcrb
xor
mov
bound
fists
out
adc
leave
mov
push
clc
sbb
sbb
adc
testb
push
popf
fistl
adc
pop
imul
out
push
mov
mov
dec
dec
xchg
push
and
repz
push
fwait
insb
mov
adc
cmp
xlat
push
pop
sbb
test
mov
rcrl
lcall
sahf
int
cmp
and
shlb
inc
and
je
inc
shrb
mov
std
mov
sub
fdivrs
fisttpll
loope
adc
sbb
sub
in
je
push
ss
hlt
pop
mov
sahf
xchg
mov
pop
xchg
push
add
sbb
sub
xor
imul
push
xchg
stos
movsl
imul
shlb
mov
cmpl
dec
xor
inc
inc
add
adc
mov
mov
pop
sbb
fcoml
in
mov
lods
repnz
mov
insl
lcall
push
int3
test
out
or
push
outsl
mov
sub
inc
in
negl
movsl
mov
push
xchg
sub
cmp
mov
pop
shll
pusha
mov
cld
mov
cmp
jmp
daa
and
mov
scas
xor
xor
cmp
mov
pop
lahf
ror
cmp
test
or
movsl
xchg
je
xlat
jne
xchg
stos
xchg
cmp
push
out
and
jmp
aas
mov
in
gs
loope
imul
in
cmpsl
add
cmpb
into
pop
mov
fmull
xlat
inc
out
outsb
jge
xor
pushf
bnd
lds
loopne
scas
and
adc
fistl
jmp
sbb
mov
ja
mov
dec
pop
push
mov
outsb
outsl
or
adc
outsl
aam
xchg
cmp
push
xlat
int3
sbb
das
loope
pop
xor
adc
cmp
clc
xchg
ret
or
add
cli
xor
mov
dec
arpl
in
aas
orl
push
repz
pop
stos
and
mov
mov
mov
ja
pop
xchg
mov
xor
adc
cld
sbb
leave
and
hlt
aas
in
jno
push
and
xchg
inc
js
lea
pusha
adc
clc
jb
add
mov
rcrb
lods
arpl
mov
nop
cmp
scas
jp
add
xchg
sbb
sbb
xchg
push
adc
faddp
lret
in
stos
push
push
mov
fnsave
xor
popa
push
mov
inc
mov
ds
pushf
iret
sahf
aas
repz
rcrb
sahf
fs
xor
stc
jnp
in
aam
scas
xor
or
cmp
dec
inc
testl
jns
cmp
daa
sbb
sub
fs
addl
dec
sar
cwtl
pop
sub
es
das
pop
push
gs
mov
inc
mov
inc
dec
dec
mov
push
imul
stos
fisttpll
jnp
repz
fucomp
adc
pop
xchg
stos
push
mov
xor
push
jp
popf
ss
cmp
jg
sbb
cld
or
mov
divl
in
add
sahf
dec
imul
adc
push
mov
mov
inc
jp
cwtl
repnz
push
std
xor
rclb
enter
dec
mov
or
repz
sbb
mov
xchg
push
cmpsl
sub
adc
push
inc
pop
add
or
cli
sub
inc
push
pop
mov
out
add
cmp
or
movl
inc
fwait
dec
or
fidivrl
sub
dec
sbb
jle
test
rcrl
jecxz
ret
jae
mov
xchg
out
adc
sti
adc
or
test
sub
cmpsl
arpl
mov
out
and
lcall
xor
xor
push
mov
in
pop
mov
movsl
xchg
jmp
pop
lods
lcall
out
ljmp
adc
stos
shrl
and
push
popf
outsb
add
movsl
sub
in
and
xor
mov
mov
xchg
jbe
xchg
aaa
mov
fwait
push
adc
mov
and
xchg
je
cld
pop
mov
mov
test
add
jmp
lods
dec
loopne
mov
out
mov
insb
lds
mov
lock
mov
int
js
jp
ficoml
pop
out
mov
test
bound
jo
sbb
arpl
inc
jg
mov
sbbb
jns
cmp
test
lds
xchg
mov
shlb
xor
imul
pushf
js
add
mov
push
testb
cmpsl
xchg
into
mov
xchg
and
and
and
cmp
repnz
xor
daa
sahf
popf
clc
pop
ficoms
sub
push
xchg
insl
inc
pop
idivl
sbbl
les
mov
push
push
xchg
pushf
neg
data16
adc
inc
ret
mov
aad
ret
hlt
push
mov
mov
xor
mov
pusha
imul
mov
fisttps
push
fs
adc
jmp
xor
out
dec
adc
add
ss
pusha
out
out
dec
stos
xor
push
mov
cld
fidivs
add
push
ja
xchg
sub
jle
sahf
orb
dec
orb
insl
sub
test
mov
cmp
inc
aam
mov
pop
movsb
lcall
std
pop
mov
xor
aam
in
sahf
pop
push
mov
pushf
sti
pop
pop
xchg
test
std
ret
add
push
inc
in
mov
lods
leave
test
adc
pusha
sub
rcll
orl
mov
out
aad
into
jne
xchg
movsl
lods
mov
xchg
xchg
sub
ja
lret
push
aaa
jae
inc
push
adc
mov
push
xchg
inc
and
xchg
mov
jb
out
jb
pushf
cltd
xor
shl
andl
sbb
pop
imul
out
dec
cmc
sbb
jo
pop
add
pop
jae
cmp
mov
xor
inc
scas
sub
xor
mov
or
lds
les
dec
pop
sarb
cmp
iret
in
adc
xlat
repz
jnp
inc
daa
dec
ror
mov
and
test
cmp
mov
cld
ja
outsl
xchg
jmp
scas
and
and
and
xchg
aad
enter
xchg
into
pop
test
dec
sub
rcr
push
enter
faddl
sbb
enter
repnz
and
in
mov
imull
mov
mov
out
jo
mov
adc
or
mov
daa
dec
sahf
adc
lret
hlt
fs
pop
xchg
in
jbe
popa
stos
jge
adc
push
sbb
add
fwait
add
and
xor
mov
mov
mov
repz
scas
scas
push
cmpsb
mov
inc
cmp
mov
xchg
push
iret
cmc
sub
xor
push
test
outsl
pushl
cmpsl
sub
inc
cs
xor
and
mov
mov
inc
test
pushf
fs
adc
pop
push
jb
mov
addr16
add
mov
mov
dec
gs
add
sbb
mov
xor
adc
sub
in
xor
mov
cmpsl
loop
add
movsb
fdivrl
sbb
push
xor
scas
mov
test
loope
ror
sbb
xorb
jns
inc
mov
jne
sbb
jno
int3
xor
cmpsb
xor
incl
mov
jns
ljmp
xchg
nop
xor
in
xchg
stos
test
inc
sbb
jae
pop
repz
adc
sub
mov
mov
mov
mov
test
and
jae
mov
andb
sbb
dec
sub
xor
mov
rclb
sub
test
dec
jmp
rorb
sbb
inc
or
inc
int3
stc
cmpsb
rcrb
lds
sahf
sahf
sub
arpl
push
sub
xor
mov
push
jbe
xchg
xor
sub
inc
ja
mov
xchg
int
push
jmp
sti
mov
pop
in
push
adc
movsb
add
jp
aam
sbb
and
ret
xor
imul
cmpsl
imul
jo
outsl
adc
xor
or
mov
iret
popf
into
sbb
dec
push
std
sub
fidivl
add
jle
into
xchg
gs
cli
and
fistpl
int
movsl
jge
sub
xor
mov
lods
popf
dec
fstpt
jno
loopne
adc
rclb
pushl
jb
fnstcw
mov
insb
loop
stc
jg
jp
pushf
shrl
or
neg
faddl
xchg
mov
cmpl
addr16
push
repnz
fnstenv
or
xlat
push
std
jg
in
je
stc
dec
dec
add
mov
imul
mov
fdivrl
add
mov
fistl
je
in
push
daa
xchg
mov
ljmp
divl
xor
mov
add
or
mov
cmp
fwait
aas
and
lcall
sbb
or
stos
jg
xchg
sub
or
push
int
sbb
out
lahf
mov
dec
mov
mov
xchg
stos
push
lods
push
push
cli
bound
insl
imul
fucom
push
sbb
mov
int
pusha
push
aam
repnz
hlt
mov
js
sub
cld
lret
pop
inc
out
dec
mov
js
add
ret
cli
ja
xor
push
imul
or
jns
dec
lcall
jns
dec
sub
pop
sbb
arpl
adc
repnz
popa
mov
pusha
sahf
xchg
enter
mov
cmp
dec
mov
inc
aam
adc
mov
mov
push
stos
pop
push
repnz
xor
cs
or
icebp
insl
mov
adc
adc
arpl
sub
push
pop
xlat
jl
xchg
xor
lds
daa
jno
mov
test
mov
iret
push
sbb
xchg
or
xor
add
cmp
or
clc
sti
shrb
mov
and
and
ljmp
jmp
cmpsl
stc
mov
jo
pop
enter
lret
sub
pushl
push
clc
movsb
mov
inc
pop
outsl
mov
xchg
pushf
int3
pop
add
cmpsl
xchg
adc
pop
dec
inc
push
cld
cmp
daa
mov
lret
cli
xchg
add
pop
jmp
sti
mov
inc
sub
jns
jp
adc
lahf
mov
ret
jae
lock
add
push
jae
ljmp
mov
cltd
sahf
adc
inc
and
xchg
adc
in
push
pop
jne
cmc
push
loope
outsl
out
or
cmp
mov
cmp
xchg
lret
push
imul
in
or
iret
ljmp
pop
sahf
mov
adc
xor
jne
imull
dec
lret
push
or
sahf
inc
cmp
fndisi(8087
repnz
out
imul
icebp
fcompl
rcr
or
mov
adcb
test
cmp
mov
pushf
mov
cmpsb
xchg
call
pop
stos
jno
jne
cltd
test
push
jb
pop
in
sbb
in
test
jae
mov
addr16
or
subl
add
adc
out
cmp
std
xor
xor
cli
inc
neg
mov
mov
adc
sub
repz
orl
fwait
sarl
or
in
lret
pop
ret
pop
aam
add
jp
je
out
pop
iret
and
mov
mov
mov
fildl
nop
xchg
daa
pop
lock
pop
mov
arpl
imul
fwait
cli
inc
jl
push
mov
and
lock
out
pop
mov
inc
pop
mov
pop
out
xor
push
loopne
mov
pop
pop
add
sbb
aad
mov
fs
ljmp
stos
fisubrs
mov
scas
mov
push
mov
iret
push
sub
xor
imul
das
xchg
push
xor
pop
out
sbb
divl
ja
lret
in
test
pop
jecxz
mov
imul
addr16
cmpl
hlt
pop
mov
cmpsl
subl
mov
add
cld
xor
leave
mov
mov
out
inc
out
mov
xchg
pop
shr
adc
pusha
insb
popf
or
cs
mov
loopne
jo
popa
jne
std
cmp
cmpsl
mov
pop
call
xor
adc
xor
mov
push
je
mov
xor
jle
mov
testl
sbb
jecxz
sub
mov
ficomps
ror
sub
dec
sbb
ret
pop
popf
push
je
sbb
mov
mov
mov
and
or
jg
in
xor
jecxz
je
jne
sahf
mov
mov
dec
fwait
jnp
out
pop
xor
sub
inc
push
gs
lcall
ljmp
mov
inc
xor
mov
test
inc
push
xchg
aaa
fldl
xchg
mov
roll
xor
lock
insl
stos
pop
inc
sub
jbe
fcmovnb
cli
popf
loopne
push
dec
arpl
aam
repz
xchg
hlt
sbb
adc
sub
mov
mov
jecxz
test
cmp
test
xor
and
loope
outsb
insb
push
jne
or
jg
insb
je
fnstcw
mov
test
jb
mov
xchg
into
mov
or
enter
mov
adc
ss
push
cmp
loop
lods
sti
hlt
push
sub
or
or
leave
gs
sbb
xlat
inc
sahf
adc
incl
or
ljmp
or
sti
mov
hlt
std
lods
fsubs
sub
sbb
pushf
cmp
loopne
leave
dec
push
icebp
add
int3
cwtl
sti
xchg
mov
int
push
sub
mov
cmp
lret
pop
push
xor
push
mov
leave
sub
sbb
popa
add
lock
je
push
sbb
imul
or
xchg
jp
xor
sbbl
pop
das
xchg
in
jns
push
jge
cwtl
ljmp
jecxz
fisubl
sub
inc
jbe
pusha
fidivrl
bound
das
ljmp
mov
mov
adc
rcl
idivl
pushf
ret
or
out
jne
and
addr16
out
dec
mov
and
in
sub
xchg
sbbb
xchg
scas
adc
cmp
add
cmp
adc
shl
jecxz
adcb
addr16
mov
xchg
iret
aad
scas
push
in
jl
ljmp
push
pop
xor
je
insl
test
aaa
pop
jno
neg
add
mov
iret
xchg
in
mov
cmp
cld
sub
cwtl
imul
movsb
add
pop
jp
inc
fisttpl
adc
orl
xchg
inc
add
mov
xchg
pushl
rol
in
jo
insb
cmp
in
notb
jbe
mul
cmpsb
mov
mov
ret
cltd
dec
jnp
movsb
jl
popf
add
rorl
repz
pop
ss
sahf
jmp
pop
cmpsl
push
dec
xorl
push
scas
mov
mov
movsb
cmp
adc
inc
das
scas
or
xor
daa
ret
loopne
mov
cmp
pop
lret
outsb
xor
mov
cmp
ss
data16
inc
inc
dec
ja
scas
xor
out
adc
push
jp
sahf
inc
jae
stc
lods
jnp,pt
mov
mov
jne
sarl
rcll
fists
roll
aaa
inc
fldl
push
sbb
sbb
or
cmp
daa
xchg
repnz
mov
push
push
xor
hlt
or
lds
xchg
aas
xchg
test
shlb
sub
push
icebp
stos
mov
sub
aas
ret
test
test
hlt
push
push
inc
or
xchg
sub
jle
and
jns
cs
sub
addr16
adc
add
or
adc
cmp
movsb
fs
add
pop
push
fsubr
xchg
movsl
cwtl
out
shrb
push
cld
inc
jle
icebp
push
push
popa
cmp
mov
sbb
jg,pn
cmp
push
pushf
scas
push
bound
jecxz
mov
xor
mov
mov
dec
jb
fadd
sub
lock
push
jb
cmp
add
mov
xchg
mov
or
movsb
push
movsl
or
xchg
add
cmp
loopne
mov
pop
out
sub
mov
fsubrl
andb
out
mov
dec
xor
sti
mov
inc
repnz
add
incl
xchg
cwtl
sub
cmp
cmc
adc
idiv
dec
xor
jne
jo
mov
xor
loopne
dec
mov
cmpb
iret
dec
imulb
popa
push
mov
inc
mov
sbb
fisubl
push
xor
push
push
ss
jnp
adc
rorl
xchg
enter
das
enter
xchg
push
xor
sub
xchg
lret
aad
fs
inc
inc
and
in
and
sahf
stc
in
or
je
xor
pop
ja
fsubr
push
jl
clc
mov
push
arpl
push
sub
sbb
sbb
jb
in
pop
pop
sbb
les
in
xchg
lock
stos
jl
mov
call
hlt
iret
jle
test
loope
and
jb
gs
ret
or
jb
mov
push
sbb
ja
mov
fstl
test
adc
add
jae
int
ret
cmpsl
mov
jb
jns
xchg
mov
jnp
call
xchg
aam
arpl
andb
icebp
mov
adc
stos
mov
stos
sbb
in
push
mov
push
inc
and
insb
add
mov
jb
inc
mov
dec
jmp
sbb
sti
cmpsl
jp
pop
aam
cmpsb
je
inc
cmp
push
mov
adc
jo
or
movsb
divl
xor
pusha
js
dec
cmp
frstor
mov
into
add
notb
xchg
pop
iret
insb
js
and
mov
xchg
adc
jl
pop
add
lods
sbb
push
or
imul
and
stos
neg
adc
push
popa
cmp
in
stos
jb
xlat
xlat
mov
call
orb
popf
or
jb
mov
push
push
or
mov
shlb
fmul
pusha
sahf
mov
icebp
shll
push
in
out
xor
xchg
or
int
xchg
jmp
outsl
mov
xchg
pop
lds
and
mov
stc
cmp
xor
lock
stos
das
test
pushf
adc
arpl
inc
inc
pop
nop
push
push
push
ret
es
aam
mov
xor
push
xor
dec
push
sub
mov
dec
popf
sbb
xchg
sub
inc
inc
icebp
arpl
arpl
xor
push
rcr
cmp
and
cmc
pusha
lahf
inc
sbb
sbb
scas
adcb
mov
pop
jg
dec
out
ds
lods
popa
aad
clc
sbb
pop
arpl
pop
cmp
jb
and
or
add
mov
push
and
call
pop
out
test
inc
jne
and
ljmp
aas
mov
pop
cmc
cli
fldcw
xor
xlat
imul
cmpsb
cmp
jp
movsl
and
repnz
adc
lret
mov
imulb
cmp
inc
ret
out
in
lods
jo
or
jbe
sub
push
push
mov
popa
mov
mov
fadd
test
mov
mov
mov
insb
fsubl
lahf
lods
js
arpl
loopne
mov
push
cwtl
clc
repz
xor
imul
jp
aad
mov
jne
mov
div
push
scas
jno,pt
jae
push
lret
or
ficoms
push
lret
push
xchg
push
out
xlat
nop
lods
aam
in
out
cli
mov
add
outsl
mov
inc
dec
xchg
cmp
outsb
xchg
iret
adc
addr16
mov
and
sbb
pop
push
adc
sbb
cld
int
cmpsb
fwait
in
push
cs
cs
add
mov
push
cmp
rol
ds
aam
lret
lods
mov
mov
or
clc
mov
test
in
sub
dec
cmp
mov
pop
push
cs
xor
pop
popf
scas
test
int
dec
fnstenv
pop
pop
push
fadds
rclb
cmp
adc
mov
inc
ds
andl
inc
pop
ja
gs
sub
inc
cmp
inc
mov
ret
dec
jp
xlat
movb
mov
jge
cmp
sbb
sti
inc
lcall
nop
mov
inc
aam
add
lahf
shll
push
push
xchg
in
fdivs
cmc
cwtl
int3
mov
jge
mov
aas
ja
mov
mov
sub
mov
mov
push
popl
subl
in
imul
push
cld
xlat
mov
cmp
dec
jl
pop
and
std
or
mov
or
hlt
aam
stos
jnp
popf
sbb
mov
cli
and
into
jmp
mov
fdivrl
movsb
push
out
inc
outsb
test
mov
inc
pop
in
xor
dec
cmc
aad
mov
fildl
xchg
inc
mov
insb
cmp
movsb
and
andl
jmp
cmpb
cmp
push
bound
add
ror
inc
sbb
mov
or
mov
cmp
rorb
lahf
cli
sub
cli
out
ficomps
lret
push
inc
cmp
xchg
mov
es
push
xchg
mov
cwtl
rcr
dec
shll
in
cmp
sahf
and
mov
lods
enter
sbbl
push
in
outsb
jmp
mov
lret
shlb
js
mov
mov
push
mov
lcall
xchg
aad
rcrb
cmpsb
mov
in
fisubs
jp
cmp
mov
adc
pop
cli
pushf
popf
je
pop
rcl
and
pop
das
out
mov
out
mov
stos
mov
mov
push
lds
leave
loopne
inc
lds
push
dec
int3
add
popf
xor
bound
push
xchg
lods
xchg
push
mov
sub
jns
dec
mov
and
cld
es
stc
cmpsb
sub
daa
in
mov
mov
fildl
aaa
push
out
repz
mov
inc
xchg
jbe
push
and
aas
int
pop
xorb
mov
and
movsb
push
dec
mov
mov
cmc
push
pop
das
pusha
cmp
push
sub
cmp
dec
sahf
xor
clc
mov
in
inc
icebp
jne
or
fs
int
out
enter
leave
aad
js
xlat
cmpsl
arpl
mov
mov
dec
cltd
scas
xor
jno
ja
mov
push
cmp
pop
jnp
sbb
add
adc
mov
jno
fwait
cmpsl
testl
cli
mov
loopne
inc
decl
lea
sbb
push
ficoml
mov
pop
pop
cmc
fcompl
std
push
xchg
sahf
dec
dec
rorb
mov
repz
dec
xor
mulb
jo
sbb
iret
mov
mov
xor
stc
lods
or
insl
add
nop
lods
jl
add
sti
add
mov
xchg
sbb
xor
cli
decl
xor
ret
or
xorb
mov
add
and
outsl
xor
fimuls
and
dec
adc
test
repz
stc
add
and
dec
mov
ljmp
sub
sub
push
hlt
sub
xchg
xor
ffreep
jno
sbb
and
sbb
and
lock
inc
das
push
push
pop
icebp
mov
push
adc
jecxz
shlb
inc
xor
mov
pop
cmp
pcmpeqd
iret
and
enter
leave
xor
and
cmp
adc
ret
push
outsb
in
mov
adc
lods
fcmove
xchg
xchg
add
jge
movsl
test
pusha
mov
aas
rorb
dec
fiadds
jns
push
inc
bound
inc
js
in
arpl
sbb
in
mov
sarl
push
cmp
push
sti
out
cwtl
adc
nop
and
sahf
mov
add
fstl
dec
loope
adc
in
jmp
fsubl
in
push
mov
xor
xchg
sub
cmp
mov
or
jp
mov
movsl
jno
or
cmp
push
int3
cmp
xorl
adc
mov
mov
push
insb
and
mov
cmp
inc
ja
dec
test
in
shrl
dec
loop
sahf
out
push
gs
sbb
imul
in
insb
stos
hlt
fs
outsb
icebp
sub
lahf
and
xlat
popa
out
clc
ret
pusha
and
clc
ds
jge
arpl
nop
xor
xchg
pop
lods
mov
imul
push
sub
aad
jb
xchg
add
sahf
inc
mov
and
test
add
out
xor
add
push
test
push
pop
out
xor
xchg
test
add
imul
dec
mov
imul
pop
and
outsl
and
out
push
or
aam
push
imul
and
push
xchg
sub
call
xchg
sbb
xor
dec
test
bound
enter
mov
mov
mov
or
pop
inc
lds
adc
cmc
pop
icebp
adc
imul
push
out
dec
or
outsb
stos
pop
leave
lret
popa
xor
jns
mov
cltd
jp
sbb
shrb
or
push
cmpsb
add
pop
push
xor
leave
mov
cmp
jle
ja
sar
push
lods
stos
je
push
mov
popa
lods
loopne
repz
stc
cmp
dec
bound
addb
das
and
jg
sbb
jb
out
loop
fsubs
rcrb
jl
inc
mov
lahf
mov
mov
bnd
jp
icebp
cs
adc
cmpsb
shlb
rcrl
push
add
pop
std
sbb
ss
sbb
cmc
int3
pop
addr16
je
outsb
and
stc
fdivrs
into
aad
adc
int
cld
loopne
mov
jmp
pop
and
into
adc
and
ficoml
inc
add
cmp
ljmp
scas
mov
arpl
push
je
jnp
hlt
lock
sbb
and
mov
stos
inc
xor
int3
stc
sahf
mov
mov
cmp
mov
in
inc
jge
fldcw
push
jns
push
adc
sbb
sbb
loope
jb
mov
stos
std
push
js
inc
std
outsb
add
icebp
cmp
gs
cmp
and
dec
aam
imul
daa
push
in
mov
fs
pop
dec
test
sbb
gs
add
stos
nop
icebp
xchg
cwtl
mov
cmp
popa
xor
pop
dec
mov
gs
ret
iret
push
xor
mov
sub
fs
xchg
lret
ret
push
pop
aad
jnp
iret
xchg
hlt
push
lret
and
pop
out
jns
push
fistpll
lods
std
push
test
out
aam
or
fmuls
mov
stos
jbe
mov
adcl
push
mov
pop
notl
leave
int3
push
sub
test
xchg
sub
pop
push
aad
loop
pop
jl
pop
dec
or
mov
int3
in
add
inc
fisubl
mov
dec
bound
leave
insl
movl
mov
insl
insl
in
outsl
lods
mov
test
or
cli
pop
jnp
jmp
loop
js
jo
xchg
cmp
dec
mov
adc
adc
scas
pop
js
dec
sti
xchg
js
mov
pop
outsl
jg
jbe
pushf
insb
dec
pusha
insl
js
je
fcomps
shrl
js
stos
pushl
fiaddl
pop
icebp
pop
int
repnz
adc
mov
mov
bound
ds
jne
push
clc
in
inc
aad
hlt
dec
repz
test
movsl
fcmovne
dec
xchg
int3
cs
add
sbb
test
fisttpl
mov
sbb
pop
push
lds
push
pop
jns
jle
std
add
sahf
lahf
jne
sub
xor
mov
sbb
push
add
out
cltd
test
or
sub
xor
mov
or
sbb
xor
fisttpl
inc
xchg
clc
cmpl
jge
andb
fisubrl
nop
fimuls
push
push
cmp
popf
push
das
mov
out
pop
pop
es
leavew
les
addl
jbe
in
push
subb
pop
push
mov
xchg
fwait
stos
add
adc
movsb
and
add
sbb
cltd
movl
xchg
out
cmpsb
add
out
cmpsb
dec
and
fwait
mov
iret
inc
xor
nop
scas
pop
pop
call
mov
lock
mov
mov
mov
xchg
lds
jl
mov
mov
mov
push
clc
mov
test
bound
push
loopne
add
stc
test
or
xchg
sub
aad
gs
jno
sbb
aas
stos
jp
mov
cltd
jb
xor
stos
repnz
popf
loopne
sub
mov
roll
testl
sbbb
sti
fisubs
inc
jo
hlt
sbb
ret
and
xchg
ljmp
insb
jb
and
mov
sti
and
cltd
xchg
or
mov
add
sub
outsl
aam
mov
mov
jl
jnp
xor
out
xchg
xchg
fadd
cmp
sahf
xor
movsb
push
jo
xor
push
std
ja
int3
push
adc
loop
or
outsl
sbb
jb
enter
push
and
push
in
fcmovb
cltd
and
cmpsl
dec
dec
push
dec
push
dec
jne
jge
xor
cmp
or
mov
das
push
pop
or
das
jg
push
jl
cmpsl
cs
ret
ret
jle
sub
jno
loop
push
in
xor
shll
cmp
clc
dec
pop
insl
in
mov
mov
mov
fisttpl
leave
clc
iret
faddl
filds
stos
out
xchg
jne
xor
testb
jnp
into
jle
mov
sarb
mov
xchg
arpl
xlat
cmp
fmull
mov
xchg
sbb
lahf
pop
sub
mov
jbe
mov
test
jne
xor
xchg
nop
and
inc
stos
sub
jmp
insl
mov
push
inc
lock
sbb
aad
add
pop
scas
inc
ds
pop
decb
add
repnz
cmpsb
add
or
push
or
jbe
or
loop
mov
pushf
fwait
outsl
xchg
mov
das
xor
and
sbb
clc
pop
gs
xchg
imul
outsl
or
dec
addr16
adc
dec
hlt
mov
push
popa
pushf
mov
xchg
xrelease
movsl
fwait
mov
xor
lods
das
call
iret
lods
call
int
inc
mov
lea
pop
jae
insb
push
ja
inc
sbb
pusha
mov
xchg
test
loope
inc
decb
call
sub
loope
inc
stc
dec
lock
push
sub
shl
pop
adc
hlt
add
inc
scas
std
dec
loop
push
cmpsb
mov
outsl
dec
sbb
inc
push
rcrb
jg
add
dec
lods
mov
or
stc
sbb
mov
xsave
or
cmp
xchg
push
test
and
pop
es
shll
adc
xchg
add
iret
jo
xor
jb
push
jg
les
push
xchg
pop
shll
inc
faddl
fiaddl
dec
cvtps2pd
jae
bound
pop
inc
rolb
push
lea
sbb
jne
hlt
mov
addr16
cld
jmp
daa
and
cmpl
dec
xor
cmpsb
push
push
daa
adc
sub
inc
add
shr
mov
or
hlt
push
popa
mov
push
pop
loop
dec
shlb
sub
inc
xchg
loop
fcomps
mov
fildll
scas
and
jp
ljmp
cli
or
es
in
scas
xchg
lret
lea
lea
test
xchg
lret
sbb
adc
mov
dec
int
aam
push
sbb
sbb
nop
mov
xchg
xor
daa
sub
fldenv
xchg
jle
mov
mov
dec
fsts
imul
into
ret
std
jns
sbb
call
adc
jo
loop
xor
test
js
add
inc
sbb
jmp
sub
jns
xor
add
fiaddl
loopne
cli
mov
or
sub
jp
pusha
mov
orb
push
aam
fmul
sub
push
call
lcall
rclb
lahf
lock
imul
jmp
cli
leave
sub
mov
dec
adc
hlt
xchg
mov
dec
mov
cmp
repnz
into
xor
lret
test
push
hlt
jo
out
inc
pop
cmp
cmp
movsl
movsb
cmp
sbb
inc
add
dec
sbb
shrb
cmp
inc
add
leave
jle
pop
add
cmp
arpl
xor
sub
test
pop
fistpll
test
mov
jge
cld
push
lock
add
mov
xchg
cmpsl
stos
adc
lcall
xor
mov
jbe
xchg
jno
in
shlb
gs
cmp
xor
fnstenv
dec
pop
or
mov
rolb
inc
fcoml
daa
xchg
enter
repnz
xchg
push
lcall
aaa
cmp
fdivrl
jne
dec
mov
mov
mov
mov
insl
push
int3
movsl
inc
jge
int3
push
xchg
jne
add
lds
xor
lea
das
xchg
mov
sub
cld
ret
stos
xor
insb
xor
dec
movsl
jb
stos
and
jp
sbb
dec
pop
pop
pop
sub
cmpb
scas
test
addr16
mov
xor
nop
pop
pop
mov
xchg
inc
mov
or
add
mov
rol
pop
add
es
sub
cli
sbb
repz
inc
mov
jge
mov
add
dec
nop
test
into
dec
jbe
push
xchg
xchg
iret
mov
cmpl
adc
cmp
lock
cmp
sti
sbb
fisttpll
xchg
mov
inc
inc
loop
mov
test
test
inc
pop
pop
loopew
jmp
lods
mov
gs
leave
cmp
mov
inc
jns
cltd
inc
iret
aaa
push
sub
outsb
dec
int
scas
test
push
cmp
iret
push
fwait
sbb
lea
ds
sub
scas
jle
gs
mov
sub
cmpb
fcmove
mov
cmp
test
fisubl
loop
lea
hlt
adc
fucomp
xor
add
lret
je
enter
or
cs
push
sbb
div
mov
inc
and
mov
and
imul
jne
paddd
fs
mov
sub
mov
jne
or
mov
neg
and
insb
shrb
inc
push
cltd
inc
clc
jo
mov
movsl
fldcw
dec
xchg
dec
and
push
stos
pop
jne
nop
xchg
xchg
fxtract
mov
sub
xchg
mov
add
add
negl
jecxz
jne
dec
add
nop
push
icebp
add
aaa
roll
out
in
mov
pop
aaa
pop
out
repz
dec
fcoml
push
jg
scas
das
sahf
lods
les
inc
xorl
jecxz
loope
out
cmpsb
fidivs
stos
fdivs
push
xchg
jge
jae
sarl
jle
insl
ja
fmulp
iret
clc
mulps
mov
jno
cmp
js
cld
add
pop
inc
add
and
mov
fpatan
pop
int
sbb
jmp
add
nop
out
jp
pop
xchg
filds
dec
mov
stos
xor
jp
sbbb
call
dec
jnp
mov
test
adc
cltd
dec
fcomps
out
mov
incb
dec
subb
stos
add
push
and
push
mov
push
rcrl
fsubrs
addr16
ficompl
fisubrl
sti
inc
aas
sub
sbb
push
dec
andb
dec
pop
inc
mov
jbe
or
stos
lock
xor
mov
fldl
jmp
icebp
xchg
cmp
addb
pop
push
ljmp
repz
iret
rorb
or
rcl
std
add
das
aas
into
jmp
pop
mov
aaa
stc
pop
pop
or
sbb
add
pop
mov
dec
xchg
mov
iret
ret
jno
pushf
daa
or
sub
sbb
jmp
arpl
lret
pop
lock
in
clc
or
and
lret
iret
fwait
loop
int
loop
xlat
dec
and
inc
je
push
mov
sbb
cmp
aam
imull
mov
push
andl
mov
outsl
push
into
add
test
mov
jne
push
cmc
outsl
loop
nop
loop
mov
cltd
push
out
adc
jo
fwait
jns
leave
cmp
xchg
repnz
push
leave
jns
or
cmp
cli
fmul
and
add
jle
mov
inc
iret
bound
push
jg
call
jae
pusha
inc
sbb
xor
ret
inc
orb
mov
popl
dec
je
push
aad
mov
aam
orl
cli
push
mov
dec
imul
mov
push
pop
adc
fsubrl
cmp
sub
pop
or
test
rep
test
xor
jae
cmpsb
cmp
sbb
push
lods
mov
xchg
pop
push
int3
dec
sbb
push
mov
dec
xorl
out
decb
in
add
xlat
shr
imul
rcr
sti
add
in
push
push
les
dec
out
jae
jp
rolb
add
xor
ficomps
dec
adc
enter
int3
fsub
pusha
cmp
lret
push
lret
xchg
xor
pop
js
lea
jo
imul
jnp
add
test
mov
das
dec
or
mov
sarb
jmp
pushf
add
mov
adcb
rcrl
inc
fisttpl
popa
out
rcll
test
aam
push
jne
ficompl
jmp
out
sti
mov
push
inc
frstor
hlt
je
mov
dec
inc
inc
xchg
test
sub
fisubs
popf
inc
lret
aaa
scas
pop
sub
movsl
xor
jmp
sbb
sbb
stos
mov
lahf
mov
sub
out
xchg
cltd
mov
adc
push
sub
mov
lahf
aas
lea
mov
dec
jae
mov
shll
arpl
nop
loope
fildl
adc
mov
jns
call
jne
daa
aaa
add
icebp
jnp
xor
mov
inc
out
iret
cld
icebp
mov
hlt
arpl
popa
sbbl
cmp
bound
in
adc
stos
sete
out
xor
mov
int
in
or
insb
pop
mov
inc
sub
jle
ja
out
and
out
or
cld
mov
test
cmp
lea
cmc
clc
jl
add
inc
sahf
xor
sarb
sbb
pop
add
call
cmpsb
jbe
mov
pushf
aas
xchg
aam
mov
jecxz
xor
mov
fsubrl
lods
push
negb
sbb
sub
jle
insl
push
shll
enter
jecxz
lahf
push
xchg
push
rcll
cmp
stos
fwait
push
cmp
stos
adc
fnstcw
repnz
pop
sti
aad
xor
int
aas
insb
cld
mov
and
popa
dec
mov
mov
cmp
shlb
inc
cmp
dec
loope
and
mov
push
into
adc
fnsave
mov
mov
push
or
movsl
sbb
cmp
xchg
loope
push
and
and
mov
xchg
sbb
or
push
aam
test
push
add
ret
ljmp
cwtl
inc
add
and
dec
test
and
in
mov
add
mov
ds
jecxz
pop
mov
in
shlb
xlat
cmpsl
popa
xchg
loop
jle
sbb
call
inc
push
push
inc
jmp
scas
sbb
mov
xlat
fwait
hlt
xor
insb
lods
xchg
pop
pmaxsw
or
sahf
rcrb
lods
xor
cmp
mov
push
mov
push
add
dec
repnz
jb
xrelease
sbb
out
cmp
jmp
xchg
pusha
sahf
insb
popf
fistps
pop
mov
test
pop
pop
pushl
jl
lar
xor
adc
insl
int3
repz
and
fs
xor
lods
pop
ret
addr16
mov
nop
es
mov
cmc
sahf
loope
add
cmc
in
pusha
push
lret
mov
add
loope
rolb
fldenv
mov
mov
test
and
ret
and
repnz
adc
hlt
shlb
push
or
pop
xor
add
rolb
xor
push
push
dec
adc
aad
out
mov
scas
push
fstl
enter
arpl
sub
fdivs
push
pushl
mov
jbe
jbe
mov
loope
andl
inc
xor
xchg
daa
stos
pop
pop
jl
insl
fidivrl
pop
ljmp
or
cmpsl
cmp
aas
in
pop
loopne,pn
push
cmp
or
dec
dec
jl
mov
xor
in
dec
mov
loop
adcl
sahf
rcrl
xchg
repnz
pop
xchg
xchg
ja
mov
and
xchg
clc
sbbb
jae
dec
jnp
imull
sbb
fldenv
mov
xchg
ljmp
and
pop
in
and
andl
mov
mov
push
pop
push
and
out
cld
in
int3
mov
or
and
xor
mov
jl
push
inc
lret
aam
mov
outsb
push
pop
scas
push
sub
lret
mov
mov
sub
ja
sbb
push
add
mov
lock
call
lock
aad
and
in
add
xchg
into
and
cmpsl
ret
in
mov
cmp
inc
dec
sub
addr16
push
push
stos
std
andb
ret
or
or
add
sar
adc
xor
test
neg
cmp
or
fwait
inc
mov
xor
inc
xchg
in
lock
xor
pop
stc
mov
jge
pop
xchg
outsl
sti
xor
mov
inc
mov
xchg
dec
jb
pop
sbb
hlt
sti
add
repz
insb
xchg
cmc
mov
jne
insb
loopne
and
mov
or
aam
roll
sbb
jb
sbb
into
sub
xchg
dec
cltd
sub
push
dec
mov
xchg
lea
dec
xchg
data16
ja
rol
push
jae
fisubrl
mov
push
mov
jg
adc
std
sti
adc
pop
add
inc
jmp
or
cli
mov
jae
out
xchg
ss
add
sti
cld
test
mov
cmp
cmc
jb
lcall
into
cld
stos
pushf
sbb
inc
out
adc
mov
push
bound
mov
push
mov
cmp
testl
and
aaa
psrlw
or
xchg
es
pop
ss
imul
mov
es
lock
and
inc
ret
push
or
fsubrl
in
cmpsl
pop
jb
lcall
sahf
shrl
sub
sbb
mul
jg
and
out
xchg
inc
shlb
out
jp
pusha
jmp
inc
sub
rcrb
out
xlat
jp
popf
jns
push
mov
sti
pop
pusha
das
adc
and
mov
sbb
clc
inc
int
mov
aas
adc
jo
and
pop
or
lds
mov
ret
xchg
cltd
jge
cmp
jb
jae
dec
cmp
pop
dec
call
or
jge
pop
cmpsb
jg
rcll
sub
pop
xchg
icebp
mov
mov
movsl
inc
leave
sub
sub
sbb
sarb
fwait
push
leave
mov
mov
lea
ja
iret
add
sahf
shrl
cmc
out
jno
cmpsl
xor
pop
sbb
lods
das
repz
idiv
test
jge
or
insb
jp
mov
sbb
scas
clc
jbe
mov
sub
data16
sbb
and
cmpsl
or
fsubrs
fistpl
scas
inc
cmc
jecxz
imul
mov
iret
insl
inc
out
xchg
sub
es
sub
xchg
pop
repnz
fxtract
imul
adc
jno
mov
add
gs
or
stos
push
cmp
sub
sti
inc
pop
push
aad
ss
or
cmp
pop
push
js
leave
mov
test
sub
leave
fs
aas
mov
mov
into
call
adc
sub
rorl
inc
test
das
sbb
lods
mov
icebp
jnp
lock
sub
xchg
repz
imul
xchg
pop
pop
or
push
mov
inc
add
pop
mov
mov
sub
push
ljmp
jnp
cmp
inc
push
cli
cwtl
sbbb
int
cltd
jl
iret
insl
aam
pop
call
int3
les
cmpsb
cmp
lock
or
imul
imul
sub
movsb
iret
jmp
pop
stos
aam
cmp
adc
jl
and
into
sbb
mov
std
push
inc
ret
mov
les
call
xchg
jnp
mov
nop
fcmovnbe
and
fxch
jge
movsl
iret
scas
imul
lret
fs
bound
adc
jns
stos
mov
pop
nop
lahf
fmulp
xchg
sub
adc
cld
or
ja
push
call
pusha
addr16
gs
mov
mov
mov
cmp
inc
and
sub
lods
add
mov
pop
push
mov
out
scas
shll
pop
pop
arpl
into
pop
mov
es
call
lcall
and
les
cs
rcrb
cmp
call
shll
cmpsl
inc
lcall
cs
mov
dec
loopne
jb
xchg
lods
ret
iret
repz
mov
ljmp
xor
inc
or
cmpsl
fdivrs
jb
mov
inc
lock
icebp
xchg
das
or
rcrl
popf
dec
bound
inc
rclb
scas
push
cmp
mov
xchg
jno
and
fidivs
mov
lahf
mov
ds
inc
insl
fnstcw
daa
ret
or
jns
mov
sub
sbb
lea
adc
xchg
jae
incl
push
cld
mov
xchg
and
dec
jns
cmpl
test
popf
push
pop
pop
mov
leave
xchg
mov
mov
ds
xchg
or
sbb
movl
bound
mov
es
cmc
ret
out
pop
or
xchg
push
jp
cld
subl
enter
repnz
or
jae
dec
cmp
mov
mov
push
jbe
ja
pop
std
dec
dec
icebp
rorb
mov
in
inc
mov
jmp
daa
add
in
xchg
lcall
cwtl
lahf
mov
ljmp
jnp
testl
adc
push
std
test
add
pop
cs
in
psubsw
cmp
mov
flds
lock
mov
in
xchg
sbb
out
push
push
js
stos
or
mov
jl
fisttpll
movsb
stos
add
xchg
inc
lods
stc
in
xlat
jae
mov
pop
lods
pop
xor
je
and
and
out
pop
fimull
lret
push
pop
outsb
mov
and
arpl
out
jns
scas
mov
rolb
mov
lahf
adc
xchg
mov
popf
dec
ljmp
sbb
rclb
jb
lods
test
pop
jns
inc
cmpsl
dec
adc
add
fs
xor
daa
mov
pop
in
mov
sub
sub
enter
lock
sub
xor
jmp
pop
xchg
mov
ret
xchg
push
movsl
lea
inc
enter
out
cli
inc
xchg
daa
xlat
movsl
fnstenv
mov
dec
sub
imul
xchg
push
jl
push
dec
pop
push
imul
roll
inc
push
cmp
incb
jae
scas
inc
xor
mov
movsl
je
mov
addr16
aad
pusha
iret
xchg
pop
inc
fldl
scas
cmp
and
jp
imul
sbb
cmpsl
loope
xor
pop
and
push
pusha
test
xchg
jle
in
jecxz
bnd
mov
push
jmp
jl
jecxz
jbe
add
cwtl
mov
inc
dec
mov
lcall
leave
jae
cwtl
mov
daa
mov
or
sbb
add
push
aaa
add
mov
stos
push
mov
pop
in
sarb
or
sub
call
mov
add
and
aaa
clc
aaa
sub
sbb
addr16
dec
pusha
nop
adc
fdivrl
je
das
dec
pop
sub
add
cmpsb
cmp
push
ficompl
xchg
ret
pop
pop
xchg
int3
dec
repnz
add
mov
clc
scas
aaa
and
xor
and
icebp
sbb
cmp
cmp
xchg
ret
lods
dec
push
jge
ljmp
iret
sbb
cmc
aad
pop
pop
sub
add
sub
leave
adc
push
movsb
lret
jb
mov
rcrb
aad
inc
aam
lods
lret
dec
mov
push
imul
xchg
and
sbb
mov
and
aad
cli
rclb
mov
rorb
and
repz
fistpll
imul
mov
fdivrl
jae
call
movsl
inc
xlat
inc
clc
mov
adc
sbb
je
adc
aaa
pop
cmpsl
or
shll
gs
mov
out
adc
ds
fstl
test
cmc
mov
xchg
dec
mov
add
and
adc
andb
cmp
push
jp
dec
mov
pop
leave
xor
push
mov
cmpsb
pop
adc
rorl
mov
lret
icebp
add
in
in
xor
jbe
mov
push
fisttpl
movsl
hlt
and
es
cmc
jecxz
cld
aam
xor
jbe
pop
adc
jne
xchg
notl
xchg
inc
fisubrl
out
rorl
push
add
inc
mov
and
fmull
xorb
es
addr16
mov
cmpsl
jle
sbb
loopne
test
dec
test
mov
dec
ret
mov
in
jne
cmpsb
lret
rcl
xor
out
jmp
sarl
mov
sbb
cs
and
ror
cmp
repnz
mov
call
mov
push
fwait
les
or
and
push
movsl
mov
or
push
adcb
xchg
out
sub
jbe
out
jbe
add
icebp
mov
insb
sbb
inc
fs
lods
inc
fnsave
xchg
es
push
das
pop
pushl
fwait
stos
and
ds
pop
mov
jno
shlb
out
shl
rolb
pop
mov
inc
mov
in
or
push
cmp
fcompl
test
mov
xchg
ljmp
adc
inc
pop
or
cwtl
lret
ror
sbb
xorl
les
cltd
rolb
pop
sbb
push
es
mov
or
cld
iret
xor
lock
data16
xor
push
xchg
xchg
scas
pop
sarl
out
mov
pop
jnp
in
push
mov
scas
imul
mov
out
jo
jmp
jmp
adc
or
dec
xchg
cmp
sub
jno
lods
popf
cmp
into
xchg
subb
sbb
sarl
scas
aaa
sub
mov
pop
imul
pop
jne
and
cmp
xor
pop
pop
add
jne
cmpsb
pop
imul
cli
in
pop
jge
nop
inc
mov
pop
add
mov
jnp
xlat
jmp
loop
mov
test
adc
in
test
mov
push
jmp
dec
push
out
pop
sti
out
inc
and
mov
jns
adc
adcl
daa
fnsave
aaa
sbb
pop
int
jmp
fadds
xchg
das
jecxz
inc
and
and
adc
fimuls
mov
cmpb
adc
jnp
xorps
sar
stos
adc
push
lret
dec
dec
orl
inc
inc
ret
pop
adc
sub
push
imul
push
jnp
mov
insl
pop
sti
or
xor
dec
popa
addl
or
loope
aam
push
inc
dec
push
jmp
or
jecxz
sbb
adc
adc
push
fistl
sub
push
hlt
and
push
cs
lea
cmp
add
icebp
rorl
pop
rolb
repz
fildll
add
iret
out
fst
dec
push
or
enter
xchg
shll
mov
jno
fisubrs
mov
xor
cmp
sar
sahf
mov
jge
sbb
lods
xchg
or
call
in
xchg
mov
xchg
mov
mov
mov
sbb
mov
fwait
mov
or
sbb
cs
aam
lahf
push
jmp
push
movsb
sbb
jo
add
push
mov
sub
rcll
ja
pop
or
sti
xor
mov
jns
popa
addr16
popf
repz
stos
jmp
leave
in
loop
scas
loop
push
inc
push
test
pop
sbb
insb
addl
lret
scas
out
test
push
pop
jns
dec
and
roll
push
out
mov
sbb
lret
fildl
mov
into
in
aaa
shlb
mov
cmpsb
in
dec
inc
scas
inc
je
push
neg
enter
jae
jl
hsubpd
in
cs
test
inc
lods
and
push
sbb
aaa
aas
cmp
adc
scas
out
or
mov
hlt
xchg
shrl
scas
pop
and
adc
and
fs
push
imul
dec
shll
jne
dec
aad
jbe
mov
dec
sahf
xor
bndldx
xchg
mov
icebp
and
cld
inc
cmp
xchg
push
or
inc
scas
jecxz
inc
mov
in
jne
gs
out
dec
pop
xor
aas
jnp
or
xchg
scas
cld
cmpsb
or
frstor
and
leave
cmpsb
test
mov
loop
sub
scas
push
addl
xchg
mov
lahf
leave
clc
mov
pusha
add
lods
ficoml
jnp
cmc
in
pusha
mov
es
push
repnz
out
lret
mov
xchg
jno
std
pushf
lret
je
add
ljmp
fildl
mov
shl
daa
push
mov
lret
dec
mov
xor
sub
push
cmp
es
out
inc
sub
xchg
iret
or
add
cmpsl
shlb
push
fstl
ret
inc
out
dec
es
arpl
addb
test
push
push
xchg
data16
lods
insb
xchg
popa
add
xor
pop
rcr
pop
lret
jae
inc
xlat
sub
jnp
jb
ja
add
dec
rcll
hlt
inc
cmp
adc
mov
pop
xchg
xchg
push
cld
inc
pop
sbb
push
pop
pop
mov
xchg
jmp
into
out
pop
xlat
test
jg
insl
addb
mov
xor
dec
dec
xchg
cmc
cmp
and
push
sbb
cmpsb
jo
dec
jmp
pop
dec
mov
xor
push
ja
and
xchg
mov
cmpsb
clc
push
ds
out
std
push
adc
jmp
lret
jno
cmp
iret
loopne
cmc
mov
int
sahf
push
cld
in
sub
lahf
out
xchg
mov
mov
pop
sbb
mov
mov
jno
jno
test
test
rorl
cmp
pushf
fbld
mov
jbe
xchg
cmpsl
aam
push
or
dec
cmp
mov
test
int3
ret
xchg
jbe
xchg
push
xchg
jae
add
stos
or
mov
or
dec
pop
ficoml
bound
movsb
adc
jp
jo
insb
bound
adc
fidivl
mov
cmpsl
popa
mov
stc
fcmovb
lods
xchg
sub
add
fcomps
jecxz
addr16
lds
les
add
or
clc
mov
stc
mov
cmp
cmp
mov
lods
cltd
pop
push
sbb
sahf
scas
or
cli
push
scas
xchg
cmc
fs
clc
mov
mov
imul
mov
jbe
sbb
repz
popf
xor
adc
mov
fsubl
cmp
test
dec
cmp
mov
test
lret
jae
jnp
sub
pop
sbb
jns
bound
and
out
inc
std
mov
hlt
lods
sub
test
inc
iret
add
iret
pop
scas
mov
xor
flds
insb
add
cmpsb
aad
xor
enter
repnz
add
cli
fcmovbe
cwtl
mov
in
sbb
pop
sbb
cmp
jecxz
out
xchg
out
in
aam
lock
mov
sbb
mov
cwtl
cmp
mov
in
cmp
push
scas
popa
cld
lcall
mov
xchg
jp
jb
jo
inc
stos
outsl
push
fisttpll
sub
mov
adc
mov
mov
push
or
imull
mov
cmpsb
jbe
aaa
push
pop
mov
add
dec
sub
outsb
fbld
ja
iret
cmp
lods
jae
lcall
cmp
and
sbb
dec
xchg
push
shrl
je
iret
push
add
out
sbb
push
mov
dec
inc
mov
pushf
mov
insl
sub
xchg
enter
cs
js
inc
jle
mov
add
sbb
dec
inc
or
aam
push
aam
mov
cmc
addb
movsb
or
and
add
sub
sbb
and
popa
or
mov
loope
ljmp
test
sub
movsb
test
bound
pop
rcrl
mov
push
insb
das
push
mov
cmc
sub
lahf
lret
mov
mov
call
adc
jnp
add
pop
loop
adc
cltd
movsl
mov
dec
pop
sbb
sub
sub
sbb
or
fs
adc
xor
stc
push
ds
adc
fstpt
outsb
shr
adc
or
cmpsl
rolb
lahf
jbe
pop
xor
leave
jl
or
jo
pop
cmc
cmpsl
mov
mov
pop
pop
push
dec
xchg
fmull
dec
adc
cli
aam
cwtl
pusha
outsb
rolb
sub
out
testl
je
dec
jb
sub
enter
cmpsb
les
popa
es
push
add
mov
adc
dec
dec
stos
clc
sub
adc
pushf
sbb
xchg
dec
xor
xor
jno
cld
lcall
test
mov
adc
lret
arpl
mov
push
inc
in
cmp
icebp
test
ret
in
add
mov
mov
add
or
dec
int
dec
lods
push
aam
push
push
scas
and
rclb
xor
xor
pop
and
divb
sbb
cmpsl
add
in
aas
and
shl
inc
pop
mov
jmp
pop
divb
cltd
pusha
loopne
in
mov
incl
push
adc
in
je
xor
and
sub
mov
aam
enter
aad
jle
dec
aaa
sub
xor
xor
inc
mov
jle
test
repnz
and
push
push
sub
jno
or
mov
jae
outsb
xchg
test
ss
xchg
fldcw
sbb
rcl
push
pop
sub
jo
cld
adc
roll
stos
cmp
xor
and
mov
fwait
stos
int3
frstor
fwait
ss
lea
or
popa
ret
mov
sub
sub
mov
adc
arpl
hlt
dec
movsb
inc
or
fstpl
cld
add
rcrl
jecxz
pop
jge
lret
mov
jns
xor
clc
idivb
out
aas
sub
mov
dec
rol
and
mov
lea
mov
inc
sub
mov
adc
adc
cli
into
mov
cmp
movsl
iret
outsl
add
add
pop
sbb
lods
and
jns
mov
mov
push
and
jbe
lock
out
fsubrl
lods
loope
lea
dec
mov
push
adc
jl
call
add
stc
insb
jo
cld
xchg
into
test
mov
insl
fisttpll
adc
andb
movsb
arpl
test
jmp
push
fdivl
repnz
fisubrl
push
and
fs
jmp
add
jge,pn
nop
pop
cltd
sub
xchg
stos
dec
pop
xor
das
cwtl
std
popa
aas
cmp
mov
setne
mov
pop
dec
lret
jl
stc
jge
jge
add
and
std
cmp
inc
or
filds
add
outsb
call
lock
ljmp
mov
adc
into
pop
adc
stos
and
sbb
sub
xchg
fwait
gs
scas
adc
insl
lahf
loop
mov
daa
sbb
jne
and
pop
in
jge
mov
aaa
fstpt
jecxz
and
or
or
outsb
jbe
jmp
sbb
inc
sub
xor
loope
jge
push
sbb
lds
pusha
ret
and
push
xchg
dec
pop
aam
xor
stos
jbe
jns
or
jg
sub
test
inc
pop
mov
lret
popa
sub
std
jne
pop
jne
mov
sbb
sarl
xor
pop
test
cmp
fbstp
lret
ljmp
cld
popa
pop
cmp
cld
shrb
sti
mov
andb
cld
adc
adc
sub
push
ret
push
pop
mov
adcl
enter
dec
mov
cwtl
out
stos
push
jmp
sbb
test
add
sbb
xchg
mov
sub
lret
jo
stos
mov
incb
subb
cltd
pushf
dec
in
mov
inc
pop
repz
cmp
xchg
aas
cmp
pop
inc
test
lret
stc
je
filds
push
fsubrs
add
movsl
ret
std
xor
movsl
jb
mov
iret
add
xchg
out
scas
add
xor
rclb
sub
jae
dec
repz
ficoml
or
ret
je
xchg
in
and
xor
adc
incl
pop
push
push
add
test
in
inc
aaa
faddl
pop
or
mov
adc
icebp
add
xor
stos
inc
push
cmp
and
push
stc
ss
shll
cmpl
xchg
das
loop
scas
inc
mov
and
push
cmp
lahf
imul
adc
jg
inc
jg
pop
adc
shl
mov
mov
out
cld
shrb
int
inc
sti
or
jge
pop
pop
inc
shl
sbb
and
push
rdmsr
sti
loopne
scas
xchg
dec
xor
movsl
mov
das
adc
icebp
xor
sbb
cs
xor
in
fs
out
stos
ficoml
sub
xchg
pop
jnp
fcomp
outsb
jns
xchg
enter
jp
jns
lea
cmp
loopne,pn
popf
and
inc
aas
dec
jb
sbb
popa
lret
jecxz
popf
mov
repz
cmpb
out
pop
mov
jmp
mov
xchg
and
mov
push
data16
push
mov
mov
sbb
insl
cli
mov
sbb
int3
mov
loopne
repz
cwtl
ds
sbb
inc
outsl
xor
xchg
mov
dec
inc
fucomip
sbb
or
add
bound
sahf
sbb
outsb
sbb
leave
sar
add
mov
hlt
scas
jle
aam
movsl
sbb
lods
inc
in
test
pop
repnz
cs
cmp
jmp
cmp
andps
push
adc
or
out
inc
and
lods
push
pop
fs
rolb
pop
mov
mov
push
lods
dec
jae
jb
mov
mov
mov
jp
mov
sub
or
addl
iret
mov
or
adc
add
jl
jne
xor
stos
addl
cmp
push
outsl
mov
pop
adcb
push
jmp
pop
jae
rolb
pop
fldcw
xor
lcall
addb
int3
xchg
mov
xchg
pusha
insb
test
outsl
insl
pop
inc
xchg
dec
fmuls
mov
aam
mov
inc
jno
sbb
cmp
sahf
lea
popf
pop
js
loope
leave
outsl
or
enter
mov
cmc
lret
dec
adc
mov
sahf
adc
clc
xor
cmp
pop
adc
movsl
js
and
js
clc
dec
pop
mov
mov
mov
lds
aam
imul
push
insb
sub
les
cmp
rolb
into
aad
mov
jge
ss
mov
cmp
pop
or
sub
xchg
or
dec
pop
test
data16
cs
inc
mov
enter
mov
push
fwait
daa
xor
xchg
sbb
jae
ret
xor
fdivr
mov
sahf
fwait
xchg
int
aas
loopne
sub
push
or
push
cmp
pop
xchg
std
push
sbb
cltd
rorl
adc
fistpl
lcall
mov
je
mov
shlb
cs
xor
sub
stos
xchg
xchg
das
or
inc
dec
xor
test
xchg
pop
or
sbbb
xor
bound
cmpsl
ror
fldenv
push
and
fsubrs
sbb
add
jge
loop
out
xor
mov
ss
mov
dec
mov
mov
jle
loopne
mov
mov
subb
cld
cmp
dec
jecxz
imul
jecxz
cmp
xor
fdivp
fbld
jp
call
mov
cs
and
xor
xlat
ds
inc
cs
jg
fldcw
cmp
and
mov
jp
or
cli
mov
add
frstor
adc
jnp
rcll
movsb
shl
out
pusha
mov
mov
push
cli
insb
shl
repz
mov
push
mov
xchg
xchg
push
pusha
adc
aad
arpl
call
shl
inc
mov
stos
xor
jp
les
sub
mov
push
orb
scas
add
ss
mov
cmc
push
pop
xchg
icebp
sbb
add
hlt
mov
cmpsb
repz
lret
mov
nop
out
mov
adc
mov
loop,pn
fiaddl
push
xor
call
adc
clc
js
pop
jbe
lods
lock
jb
add
subl
or
lods
shll
or
ljmp
pop
sti
jbe
cld
cmpsb
icebp
inc
xchg
in
in
sub
mov
cltd
mov
ret
push
cltd
jo
popa
pop
push
mov
mov
imul
frstor
scas
lcall
in
jno
in
iret
test
push
and
dec
mov
ficompl
xor
mov
dec
inc
pop
cmp
mov
cltd
sbbb
push
xchg
fisttpl
cmc
dec
cmp
insl
mov
out
jo
pop
cmp
dec
test
cmpsl
xor
and
mov
test
xchg
hlt
inc
in
inc
dec
xor
xor
aam
dec
repz
and
bound
pop
dec
shlb
jns
gs
pop
mov
xchg
divl
mov
sbb
sub
in
dec
sbb
rorb
imul
xlat
loope
dec
adc
sub
mov
fidivrs
push
or
mov
insl
xchg
flds
xor
cmp
sbb
pop
inc
inc
or
jmp
int
ret
jmp
movsb
add
add
enter
lods
gs
out
cltd
mov
jae
adc
dec
pop
pop
loope
gs
inc
or
xor
bound
test
cmp
ficompl
cwtl
roll
jne
imul
xchg
out
sarb
sbb
sbb
and
add
jge
or
pop
push
dec
dec
cmp
in
inc
cwtl
add
and
jmp
ficompl
dec
out
movsb
push
ficompl
adc
arpl
mov
lcall
das
mov
scas
sub
lods
sti
fdivl
lahf
or
movsl
loope
xor
cli
call
adc
leave
xchg
pop
sbbb
out
dec
adc
cmpb
out
xor
loopne
add
xchg
dec
lock
mov
in
mov
repnz
dec
mov
test
inc
fmuls
jecxz
stos
iret
inc
mov
outsl
rorl
sti
or
mov
push
test
fmulp
push
dec
add
sbb
scas
mov
arpl
and
dec
ds
dec
loop
push
jg
roll
jge
sbb
push
clc
push
cltd
enter
test
mov
jle
repnz
stos
test
mov
xchg
mov
testl
mov
xor
lcall
outsb
ret
nop
rclw
jmp
cmp
jo
ret
pushf
jno
mov
pop
push
test
cmp
xchg
lret
pop
mov
fdivs
stos
inc
fisubrl
dec
repz
pop
jnp
cmp
pushf
xor
aas
push
pushf
addl
ljmp
fcmovbe
nop
outsb
imul
movsl
pop
fcompl
daa
jne
cli
xor
cmc
mov
mov
jns
fwait
pop
mov
push
cmp
pop
pop
stos
test
mov
insb
or
insl
js
mov
push
sub
stos
cmp
mov
or
data16
cmpsb
iret
jno
pop
mov
in
rcrb
mov
or
ret
add
cld
jae
int3
mov
cmc
sti
jge
mov
ret
xor
fistps
dec
fcompl
popa
lret
adc
mov
mov
rcrl
pop
dec
inc
pushf
je
dec
mov
pop
add
popa
push
push
test
mov
lods
and
outsb
mov
cmpsb
pop
or
xor
dec
mov
and
and
loopne
dec
cli
mov
out
repz
test
adc
in
and
inc
mov
push
inc
xor
push
cwtl
je
aaa
lock
adc
inc
mov
mov
push
imul
sti
stos
outsl
pop
push
adc
subb
xor
stos
sbb
mov
mov
push
rcl
loope
add
out
cmp
or
or
and
int
leave
pop
or
daa
jl
xor
stc
paddw
rolb
or
sub
fdivrl
adc
jb
rcll
lret
push
adc
sub
jmp
out
jg
in
add
and
test
outsb
pusha
xlat
mov
daa
stos
or
or
cmp
shlb
shlb
pop
enter
scas
xor
add
repz
into
dec
into
push
js
xlat
test
xor
ja
pop
ds
cmp
int3
repnz
add
jmp
mov
push
xchg
sub
xor
xchg
cmp
mov
cmpsl
stos
pop
out
jo
loopne
int3
in
aam
mov
pusha
mov
pop
dec
decb
jge
fsubs
pop
sub
mov
jp
iret
jns
int
lock
pusha
out
sub
push
daa
adc
negl
or
sub
or
stos
lods
mov
sub
cli
andl
pop
icebp
fs
in
mov
mov
sbb
sub
push
add
add
test
bound
push
cmp
outsb
cltd
testb
pcmpgtd
mov
jnp
xchg
jmp
pop
push
sub
jl
repz
ds
pop
shl
dec
cmp
int
les
lods
adc
addr16
pop
sbb
sub
loope
aas
and
xchg
sub
jne
out
inc
add
out
pop
fdivs
mov
xchg
sbb
not
pop
pop
fmull
movsl
jo
ljmp
pop
add
or
fwait
test
lods
lret
dec
cmpsb
sub
mov
inc
inc
jmp
imul
inc
sub
xor
xchg
sub
jo
testb
mov
push
out
shl
and
pop
push
aam
popf
cmc
pop
in
jp
xchg
outsl
cmpsl
cmc
push
mov
ret
outsb
or
shlb
jno
sub
ret
or
call
mov
aad
int
int3
pop
imul
adc
jae
jl
out
xchg
addr16
lods
shll
out
adc
in
xchg
arpl
test
mov
push
push
adc
push
aad
mov
jo
mov
roll
aad
repz
int
cmp
gs
test
xchg
xor
aad
cmp
movb
iret
push
ret
lcall
mov
xchg
xchg
repnz
xor
mov
add
int3
mov
nop
pop
add
loop
in
mov
repz
jl
inc
and
or
push
xor
movsl
rcll
int
add
ret
mov
ret
xchg
lret
mov
sti
pop
mov
mov
xor
mov
cld
adc
rcr
in
jae
in
xor
call
dec
aas
aad
xchg
dec
push
xor
inc
shll
push
push
sub
inc
mov
push
dec
cmp
aaa
xchg
xor
pop
cmp
dec
adc
insl
dec
stos
hlt
sub
mov
adc
mov
push
je
loope
push
lret
repz
push
out
push
push
jne
mov
dec
mov
sub
cmp
add
sub
xlat
mov
dec
faddl
es
or
dec
mov
xchg
mov
mov
daa
mov
mov
dec
or
lret
nop
push
cmp
fadds
xchg
mov
and
jns
cld
adc
ret
stos
dec
inc
inc
jae
and
stos
pusha
jmp
nop
jmp
xchg
cli
pop
sbbl
mov
mov
cmpsl
orb
xchg
or
in
inc
jns
dec
js
divl
and
scas
mov
ds
enter
outsl
dec
movsb
push
mov
mov
lcall
jbe
xlat
test
rcr
popa
cld
and
sub
int3
xlat
test
dec
or
mov
aas
jno
rcll
lds
stos
xchg
inc
adc
pushf
cs
pushf
mov
out
pop
inc
push
pop
push
inc
aaa
xchg
xchg
jns
aad
or
inc
add
push
fstl
and
mov
mov
mov
mov
mov
test
sub
lods
jno
out
or
mov
sbb
ret
or
jg
stc
jecxz
test
inc
push
pop
lock
mov
dec
sbb
xchg
sti
xchg
insb
sub
inc
adc
mov
add
lcall
scas
sub
lods
movsb
cli
jnp
fadd
and
leave
fcmovu
mov
cmp
mov
xchg
jo
add
mov
jecxz
sti
push
sar
xchg
or
int3
loope
mov
mov
push
out
ret
fidivl
pop
into
inc
mov
mov
xchg
mov
clc
jns
jns
sub
and
dec
mov
es
sarl
das
dec
int3
push
loop
add
pop
out
and
pop
popf
push
inc
and
mov
add
lds
fcmovnu
shlb
xchg
xchg
pusha
push
iret
fldt
pop
pop
out
in
loopne
fisttpll
cwtl
in
add
add
imul
mov
sbb
push
ret
dec
out
cmpsl
sbb
mov
mov
ficoms
add
mov
xor
fmuls
lock
xchg
ret
add
andl
adc
and
add
mov
roll
gs
lret
add
xchg
lods
xchg
je
push
cmp
ficomps
pop
dec
mov
cld
iret
xor
mov
mov
xlat
sbb
jae
xlat
js
out
mov
adc
fs
push
and
xor
inc
arpl
mov
in
dec
pusha
sub
jbe
mov
fsqrt
inc
sbb
mov
adc
push
sub
adc
outsl
mov
cmpsb
adc
sub
xlat
xor
jne
jl
nop
int3
pop
adc
or
mov
ret
aas
lds
lret
sbb
dec
or
add
movsl
add
popa
out
insb
push
pushf
and
push
lock
or
mov
js
or
cmp
in
or
sbb
loope
inc
mov
das
sbb
int
lds
out
dec
out
insb
pop
sub
jo
xorl
xor
outsb
lret
or
sti
inc
daa
loopne
sbb
insl
mov
lods
das
lret
popa
ret
dec
aad
stos
mov
icebp
lahf
jl
add
iret
sub
gs
pop
es
test
and
mov
sbb
lahf
out
xchg
dec
xor
hlt
rolb
movsl
dec
lret
repnz
stc
adc
data16
out
loope
ficoml
push
test
or
loop
fstpt
into
gs
xchg
xor
aas
mov
test
sub
shrb
adc
cmpsb
inc
and
outsl
xorb
cmc
pop
push
push
mov
sub
popa
rolb
jno
bound
nop
outsb
xchg
or
ret
popf
outsl
cmp
pop
push
push
sbb
lret
in
and
xchg
inc
test
jle
add
dec
adc
fs
scas
dec
push
imul
mov
scas
add
mov
insl
xchg
fs
sahf
loope
mov
rcll
push
arpl
inc
loope
cmpsl
mov
test
pop
ret
sub
dec
nop
js
xor
jb
shll
adc
jne
ret
ficomps
add
jmp
mov
test
stos
dec
popf
fldcw
adc
cmp
xchg
shrb
add
test
add
add
jle
mov
fcoml
pushf
adc
ficompl
xor
sahf
icebp
fwait
cmp
movsl
jo
adc
jecxz
adc
ljmp
addr16
dec
push
inc
dec
and
or
jmp
inc
mov
out
push
fnstenv
iret
pop
mov
mov
dec
je
and
mov
inc
mov
mov
arpl
push
insb
cli
fwait
pop
adc
cmp
inc
jbe
lds
std
xchg
mov
subb
xor
jmp
add
repz
scas
or
jns
push
xchg
aas
out
inc
sub
add
cld
xchg
out
adc
mov
mov
pop
ja
xor
scas
xor
aaa
and
shr
movsb
outsl
dec
push
mov
scas
xlat
cmp
int3
jecxz
adc
inc
push
dec
aaa
and
inc
fnstcw
sbb
call
dec
mov
lcall
int3
jns
sbb
dec
adc
sub
inc
jecxz
inc
daa
out
or
cwtl
cmp
jo
or
pop
adc
arpl
mov
push
pop
orl
and
jl
pop
sbb
sahf
jne
test
xchg
testb
xor
sub
mov
xchg
repz
inc
and
insl
lea
mov
adc
adc
lea
or
aam
pushf
loop
out
jecxz
int
and
frstor
mov
mov
dec
mov
jb
lcall
test
mov
jb
mov
das
cmp
ss
mov
lahf
cmpsb
xchg
aaa
sbb
jno
popf
mov
out
popl
cmp
jno
lret
imul
fidivl
adc
fimuls
adc
loope
std
es
cmpsl
data16
dec
sahf
fsubp
dec
lret
sub
or
fdivr
cs
mov
pusha
daa
mov
mov
add
xor
pop
repnz
ljmp
cld
cmp
mov
outsb
xchg
mov
loop
pusha
aad
pop
or
xor
xchg
fldcw
xchg
and
mov
sbb
push
mov
pop
push
and
out
shl
cmp
lea
int
jle
ret
mov
ss
lea
push
xchg
mov
xchg
dec
jmp
and
push
jge
xor
mov
aad
pop
sbb
push
pop
pop
cmp
arpl
mov
sub
cmc
pop
sub
inc
dec
sub
xrelease
addb
loopne
ja
stos
clc
loope
fsubrs
movsl
fwait
push
mov
icebp
mov
loop
dec
push
inc
inc
xor
fstl
xchg
dec
add
dec
shrl
mov
sarl
sbb
ret
ret
cmp
ljmp
stos
push
lea
inc
test
test
mov
sarb
popa
mov
test
inc
aam
mov
sbb
mov
pop
jmp
ljmp
pop
stc
xor
scas
cld
shlb
xchg
aad
ljmp
and
cmpl
jge
daa
sbb
ja
and
push
cmc
shl
sbb
outsb
fiaddl
xor
pxor
dec
mov
sbb
push
ja
test
mov
cmpb
arpl
pop
mov
sbb
push
pop
int3
xchg
mov
pop
cld
sbb
xor
mov
mov
sbb
adc
cmp
xor
cmp
adc
xor
test
test
aas
sub
cmp
and
mov
cmp
not
mov
pop
repnz
bound
mov
adc
jg
xchg
dec
xorl
fnstenv
ret
dec
leave
lret
sub
cwtl
pop
ret
pop
push
jecxz
lods
pusha
pushf
fwait
jb
xorl
mov
and
pop
icebp
cld
inc
ljmp
mov
adc
xchg
dec
pop
repnz
orb
cwtl
jns
movsb
and
loope
push
jmp
jl
xchg
sub
dec
jp
jns
or
into
dec
test
sub
xchg
dec
inc
aaa
lret
adc
out
std
incl
and
bound
add
mov
mov
jle
orl
test
push
iret
mov
jno
sbb
mov
push
rorb
shl
xlat
pop
inc
push
xchg
in
stos
xchg
push
mov
aad
mov
inc
xchg
and
jecxz
adc
insb
push
aas
mov
mov
fsub
pop
mov
add
cmp
mov
call
add
sub
lods
inc
lods
xchg
lcall
neg
cld
cmp
pop
incb
clc
loope
icebp
cltd
pusha
loop
sub
mov
dec
in
dec
add
mov
enter
xchg
push
xor
negb
sub
hlt
cmp
lds
fistpl
xchg
xor
mov
adc
cmp
mov
xchg
dec
xor
out
pusha
xchg
out
jmp
mov
fistpll
jmp
jo
popl
fstpt
ret
fidivrl
mov
mov
les
pop
mov
cld
pop
packuswb
aas
cltd
std
jae
stos
mov
ljmp
cli
jno
or
repnz
testl
popf
pmuludq
loop
mov
iret
icebp
fsts
add
or
sub
pop
inc
int3
fwait
push
xchg
mov
inc
push
sarl
mov
movsl
mov
aam
aas
sub
pop
jo
mov
push
adc
sarl
sub
xchg
dec
cmp
sarl
inc
test
inc
imul
scas
jne
pop
xchg
dec
out
jo
cmpsl
adc
aaa
aaa
pop
std
jns
sub
sbb
es
shl
xor
fildl
stc
rcrb
sub
push
pop
push
cmpsb
mov
sarb
sbb
call
jecxz
and
mov
and
mov
pop
stos
inc
out
inc
jno
lods
sub
push
pop
aam
filds
mov
cmp
push
cmp
stc
std
and
int3
push
mov
cld
mov
pusha
and
cmp
or
es
ret
cmp
cmp
insl
jp
or
aam
jmp
push
xchg
stos
clc
mov
incl
sub
push
xor
jb
and
rorl
pop
jl
mov
roll
pop
mov
clc
out
pushf
sub
push
mov
lock
lcall
and
add
cld
xchg
jbe
push
scas
push
cmc
pop
frstor
jmp
orl
jge
roll
shll
cmp
sub
jl
jmp
iret
arpl
inc
pop
inc
mov
cld
xor
loopne
mov
pushf
addr16
sub
dec
dec
adc
mov
mov
xchg
pop
stc
decl
decl
dec
sub
outsl
dec
xchg
xchg
in
push
cmp
in
push
inc
mov
xchg
cli
mov
cs
inc
pop
js
cmp
adc
cmp
dec
push
cmpsb
add
mov
call
insl
inc
lea
mov
xor
scas
cwtl
xor
cwtl
in
cmp
adc
imul
and
mov
mov
rorl
push
pop
mov
jle
push
sub
test
dec
mov
ss
ja
and
shl
pop
loop
lret
insb
push
ss
xchg
sub
ss
mov
jg
inc
fwait
repz
push
mov
pop
inc
outsl
and
out
push
mov
cld
stc
jnp
stc
sbb
cmp
jle
or
pop
popa
jae
pushf
gs
push
sub
pop
wrmsr
mov
or
jl
xchg
inc
jae
push
into
andl
pop
dec
and
inc
or
or
test
icebp
mov
pop
loope
inc
cmp
xor
pop
cmp
mov
adc
jl
xchg
jb
xor
lds
inc
inc
aas
add
cmpsb
and
cltd
test
pop
cmp
clc
cmp
shrl
mov
jb
cmp
lock
shl
xorb
sbb
jb
xchg
dec
xchg
sbb
dec
fs
aad
and
dec
jns
mov
call
popa
sbb
scas
ret
lcall
jecxz
je
xchg
push
dec
fstpt
dec
lds
es
xchg
pop
rorb
int
fidivs
cmp
adc
jmp
mov
push
xchg
inc
add
andb
xchg
pusha
jbe
or
mov
outsl
ret
jp
stos
xchg
pushf
les
mov
add
or
stos
xor
pop
std
pop
adc
call
adc
stos
ficompl
rolb
out
adc
inc
scas
jmp
fildl
xchg
jle
adc
leave
xchg
cli
xchg
jmp
ret
inc
and
ja
add
mov
push
ret
lcall
pop
sbb
hlt
push
in
fnstsw
pop
cmc
adc
gs
push
cmpsl
mov
addr16
or
pop
mov
sbb
or
test
xchg
fisubl
push
xchg
mov
repnz
dec
jmp
sarl
pop
sbb
push
lcall
jo
dec
adc
push
hlt
pop
xor
pop
add
shl
sub
lock
ss
jo
aas
rcll
push
enter
pop
mov
adc
cmp
je
in
loope
pop
xor
mov
add
inc
or
ja
cmp
shll
femms
fsub
dec
std
scas
sub
iret
jno
push
add
lret
out
in
int3
mov
repz
sbb
in
imul
or
sub
fisubs
dec
dec
lods
mov
and
insl
das
std
int
inc
lret
jae
and
xchg
xchg
mov
shll
aaa
pop
xchg
mov
xlat
mov
push
scas
pop
fisubrl
pop
incl
sets
nop
inc
pop
sub
ds
pop
scas
mov
sub
lds
jmp
cltd
fadd
add
jne
repz
xor
out
es
mov
sbbl
mov
cmp
repnz
mov
push
rcrl
test
dec
shlb
cli
fs
jmp
mov
call
outsb
push
jle
in
cmp
jbe
pop
mov
imul
jnp
test
inc
xor
sar
nop
mov
adc
jne
sbb
sbb
dec
mov
xor
lcall
mov
or
fdivrs
lcall
rorb
mov
lea
mov
in
mov
xchg
sub
sbb
fs
fildll
or
mov
mov
das
mov
adc
push
jns
cmp
pop
addb
push
fstpt
or
sbb
pop
fistpl
das
out
mov
xor
jmp
dec
movsl
jb
jmp
addr16
mov
sub
push
inc
sbb
adc
mov
fistl
xor
stc
sub
push
dec
jmp
adc
aam
sbbb
inc
out
mov
mov
pop
adc
shlb
pop
add
pop
jo
enter
sbb
inc
mov
es
inc
pop
daa
mov
lret
push
push
test
mov
mov
xchg
push
shll
das
fcmovb
jmp
cltd
ficomps
pop
add
adc
std
lea
xor
xor
insb
inc
incl
cwtl
out
lds
push
inc
ret
xchg
repnz
insb
push
mov
xchg
cltd
aas
mov
jbe
pop
push
repz
push
ljmp
or
adc
sub
iret
add
push
loop
test
dec
vhsubps
stos
repnz
xchg
ja
cli
ds
in
push
xchg
fcoml
push
jmp
outsb
jbe
inc
out
imul
push
adc
pop
pusha
jmp
cwtl
pop
inc
adc
insb
dec
or
lds
sub
and
and
push
popf
scas
lcall
mov
negl
repz
push
daa
dec
data16
jg
add
pop
mov
inc
orb
push
sub
or
aaa
pop
rcrb
adc
andnps
jmp
mov
cmp
lods
jmp
mov
dec
lds
jl
mov
or
fs
add
out
nop
pop
lds
ret
fildl
rol
movsb
jns
xchg
aad
inc
inc
cmpsl
mov
ljmp
dec
pop
and
sbb
ret
repz
cs
sbb
repz
cmpl
call
cmp
push
xchg
roll
decl
or
lods
pop
add
movsb
mov
and
pop
mov
inc
fwait
mov
mov
mov
in
jge
xchg
pop
and
jb
xchg
push
int3
add
push
loopne
and
add
subb
nop
cli
std
fs
xchg
dec
jb
fisubrl
popa
jecxz
adc
mov
test
out
sbb
lods
fbld
cltd
mov
test
scas
daa
mov
insb
push
inc
cmc
out
lcall
dec
sarl
or
into
or
cmp
sub
mov
push
cmp
sti
push
into
mov
mov
or
das
loop
rcl
cwtl
mov
aas
xor
jne
mov
lahf
adc
adc
mov
lret
fisubrs
mov
mov
gs
sbb
int3
mov
sbb
es
pop
iret
les
es
sbb
js
lea
xor
lea
fmull
add
cmpl
add
int
sbb
icebp
in
mov
sbb
out
into
lds
pushf
outsl
test
enter
sbb
fldl
dec
icebp
jb
rcll
ljmp
dec
sbb
call
dec
pop
jp
push
jmp
mov
mov
sbb
lea
add
dec
mov
inc
inc
shl
std
xor
and
loop
cld
pushf
sub
stos
xor
imul
pop
xor
aas
dec
push
sarl
imul
stos
xor
loop
push
es
outsb
jns
mov
popa
mov
mov
cmp
dec
and
or
mov
sti
adc
mov
aad
test
xor
inc
ret
icebp
lock
aad
ja
and
pusha
call
je
mov
xor
int3
or
sub
sti
test
popf
leave
mov
xchg
lock
add
inc
mov
enter
dec
pop
sbb
icebp
mov
or
rcr
cmp
pop
push
mov
xor
adc
scas
stos
inc
sub
add
jnp
aam
leave
into
aad
lea
inc
mov
imul
out
punpcklbw
sti
jo
movsl
mov
cwtl
push
jb
lock
jecxz
loope
inc
ss
mov
jbe
sbb
insb
xchg
dec
mov
neg
xchg
ss
stc
iret
mov
sti
sbb
and
adc
xorb
mov
sbb
lret
dec
mov
push
add
ret
fcmovb
test
jl
pop
mov
cmp
rcr
cmpl
mov
mov
lret
iret
ds
cmp
pop
cmp
sbb
fs
pusha
cmp
adc
out
mov
jp
inc
in
cmc
mov
in
arpl
xchg
xchg
gs
in
fadds
pop
and
push
rclb
pop
sbb
cmp
mov
cmp
scas
jno
scas
fidivrl
xor
testb
repnz
mov
mov
adc
cmpsl
ljmp
inc
sub
repz
int3
out
cmp
dec
scas
sbb
mov
mov
cld
das
sbb
ret
pop
cmp
xor
popa
popf
mov
mov
pop
push
mov
cwtl
add
test
ds
and
int3
rcl
call
movsl
enter
dec
and
shlb
xor
out
ljmp
int3
data16
les
mov
sub
out
frstor
xchg
lcall
adc
imul
lds
adc
mov
subl
aam
js
jbe
jo
push
jno
and
stos
pop
push
es
je
data16
scas
jle
clc
jbe
test
jmp
es
xor
sbb
xchg
cwtl
hlt
adcb
jo
mov
in
movsl
in
adc
leave
inc
shr
xor
fildll
jne
jb
mov
lock
enter
dec
pop
mov
js
adc
sub
insb
loopne
xor
aaa
mov
fcomi
cs
test
pop
inc
xchg
mov
fistpll
jmp
ljmp
cmp
mov
cmc
lods
popf
and
cmpb
xor
or
push
cmp
and
push
xchg
mov
mov
sbb
dec
std
xor
cld
jp
out
insl
and
stos
cmpsb
pop
mov
mov
jp
mov
sbb
or
ss
fs
pop
nop
das
filds
pop
sub
pop
jle
cmp
daa
outsl
sbb
nop
add
insl
mov
jno
jmp
jns
mov
jbe
and
imul
mov
cmp
or
cmpsb
das
sbb
sbb
les
mov
insl
and
sarl
lds
stos
xchg
lods
sub
pop
ret
out
jb
cli
incb
xor
test
xchg
jmp
inc
and
jp
mov
pop
cltd
negb
adc
ret
add
fsts
sahf
mov
icebp
pushf
test
mov
in
popf
xchg
sbb
in
into
nop
stc
add
sbb
cmp
das
nop
and
jae
test
stc
call
lret
in
insb
aaa
and
xorb
mov
mov
pop
adc
gs
aad
sbb
out
adc
xor
scas
jl
mov
mov
pop
sub
dec
jbe
sbb
jg
add
std
sub
mov
in
mov
movaps
or
xor
xchg
mov
jns
pushf
out
add
stc
mov
sub
ds
movsl
push
repnz
repnz
cld
push
cld
ljmp
mov
inc
or
sbb
nop
mov
push
mov
mov
cld
cmc
sbb
int3
adc
xor
lods
scas
adc
rclb
push
fld
je
fcoml
wbinvd
lret
cwtl
mov
imul
push
push
fbld
cmp
fidivrs
outsl
pushl
adc
xchg
jle
adcl
lea
and
mov
imul
or
leave
cmp
or
fisubl
mov
sahf
push
lods
dec
xchg
mov
arpl
incl
fildll
lods
push
mov
cmp
dec
pop
stos
and
jmp
mov
fsubl
test
xchg
inc
aam
or
mov
fmuls
aad
add
cmp
adc
dec
sub
into
fsubs
or
sbb
orl
mov
add
push
fstps
fwait
inc
lea
mov
push
cltd
cmp
cmp
cmp
and
inc
mov
pop
push
imul
mov
int
ja
nop
adc
sub
fimull
fadds
inc
mov
jo
aas
inc
std
push
nop
bound
xor
idiv
imul
xor
test
shr
fstpl
popf
pop
dec
addr16
mov
and
sarl
adc
mov
je
xchg
pop
test
mov
mov
repnz
xor
sbb
jbe
insl
mov
cmp
insb
xchg
mov
cmp
lods
pop
stos
sbb
mov
xchg
test
inc
dec
ss
inc
or
les
cs
push
enter
mov
outsl
dec
push
nop
inc
lea
ficoms
xchg
lahf
push
fildl
mov
test
mov
jg
push
test
es
xor
push
xlat
inc
pop
push
mov
lea
cwtl
xor
enter
cltd
and
push
dec
mov
test
sbb
cli
pop
mov
xlat
adc
adc
shlb
adc
inc
and
xor
sub
mov
sub
xchg
xor
mov
shrb
sub
js
sti
push
adc
test
push
xchg
ljmp
fnstcw
pop
jo
ljmp
mov
pop
pop
sbb
ja
mov
int
pop
and
push
shl
stos
inc
mov
xchg
into
push
cmpsb
dec
repz
jge
add
mov
cld
pop
outsb
bound
mov
fs
push
cmp
sti
pusha
incl
ret
imul
push
mov
mov
mov
adc
mov
sbb
push
repz
xchg
outsb
bound
stos
inc
in
adc
jge
jo
out
jge
in
xor
sub
lret
int3
add
inc
mov
push
or
clc
movsb
push
sbb
aas
lock
jl
cli
xchg
xchg
mov
movsb
out
icebp
sub
pop
in
mov
movsl
sahf
mov
inc
mov
popf
gs
shlb
outsb
xor
add
pop
pop
sahf
popa
fwait
insb
ljmp
xor
ss
pop
pop
lock
filds
outsl
lods
dec
and
xchg
cmp
out
xor
mov
add
push
stos
negb
rcrb
mov
pop
sti
push
push
add
xchg
pusha
lcall
or
mov
inc
fidivrs
cltd
sub
addr16
xchg
dec
mov
adc
call
subb
sub
add
add
mov
rorl
arpl
push
jecxz
negl
dec
jp
decl
decb
push
mov
adc
mov
xor
clc
xor
xchg
and
lcall
cmc
pop
add
adc
imul
stos
push
jmp
mov
push
cltd
cmp
aas
rolb
into
adc
xor
cld
out
popl
and
cmp
dec
clc
push
mov
jo
inc
out
fldenv
sbbb
xchg
xchg
imul
adc
sub
movsb
into
lods
cld
or
inc
add
cmp
and
notb
dec
dec
ljmp
jp
stos
mov
mov
jge
mov
imul
shll
mov
in
mov
mov
add
test
arpl
aas
add
inc
sub
push
xchg
cmp
xchg
iret
or
jnp
mov
lea
or
cmp
repz
lret
leave
and
mov
pop
cmpb
mov
cmpsb
mov
xchg
mov
js
call
xor
jo
addb
scas
mov
inc
jecxz
xchg
es
dec
pop
lock
shlb
push
cs
sub
test
imull
xchg
xor
insl
dec
jl
in
xor
fimuls
fwait
push
jp
call
xchg
pusha
clc
cmp
mov
inc
mov
aam
mov
jge
push
lret
inc
adcl
int3
xor
xchg
fs
jne
push
xor
cmp
rolb
cltd
inc
xchg
dec
inc
mov
gs
ss
xor
add
movsb
int
jg
icebp
xor
sbb
push
sub
or
hlt
xchg
fsubs
push
jecxz
add
xchg
mov
clc
scas
mov
mov
push
xor
sbb
pop
cmp
push
cmp
stos
or
addr16
jne
idivl
rcrb
inc
xchg
mov
js
sarl
cs
imul
out
test
rcrl
add
test
jg
push
mov
jecxz
inc
pop
loope
inc
sar
mov
gs
cmp
popf
or
xchg
jp
and
cmp
rclb
sbb
bound
add
js
sbb
fcom
mov
es
flds
mov
subl
add
jge
push
aam
mov
fimuls
ljmp
sti
jg
mov
outsb
cmp
fadds
shrl
popa
dec
push
rorl
lcall
pop
fcompl
insl
testb
mov
sbb
ret
pop
ds
mov
fs
or
test
sbb
push
mov
sahf
sub
jp
xchg
xorb
or
jo
adc
bound
or
das
and
pop
jne
dec
xor
clc
push
add
cmpl
inc
ret
cltd
mov
imul
outsb
stc
push
or
inc
xchg
mov
fcmovu
push
loop
mov
inc
decl
xor
out
scas
jg
into
jmp
mov
mov
xor
add
jge
mov
scas
xchg
stos
mov
add
sbb
add
adc
and
cmpsl
sbb
xchg
mov
pop
add
hlt
lods
gs
iret
sbb
cmp
push
push
push
sub
xchg
sarb
adc
adc
dec
inc
inc
mov
scas
pop
icebp
in
sub
addr16
scas
xchg
inc
leave
sbb
imul
cmp
lret
repz
movsb
decb
cmp
push
dec
dec
xchg
leave
dec
xchg
insb
dec
inc
xchg
dec
jno
ja
sub
dec
fs
jp
cli
cmp
lret
push
mov
inc
or
pushf
and
mov
adc
rclb
out
mov
fistpll
push
jle
sbb
jb
aam
imul
mov
jns
xlat
mov
aad
lds
sti
mov
gs
fnstenv
aad
mov
repz
or
not
btc
xchg
mov
jp
mov
mov
push
sbb
cmpb
sub
into
mov
cmpsb
gs
push
mov
test
jo
xchg
and
push
idivl
pop
into
push
idivb
pop
test
dec
mov
lods
out
cmp
push
jno
mov
mov
mov
scas
rcr
loope
inc
and
je
popf
push
in
jno
jb
shll
or
xor
jmp
mov
inc
lret
and
push
leave
jg
aam
mov
outsb
mov
shll
in
lods
lret
pop
push
jmp
stc
adc
das
pusha
arpl
jg
and
addl
lret
xlat
mov
mov
test
fcoms
arpl
mov
pop
daa
sub
ds
sarb
dec
stc
rcr
hlt
movl
cltd
mov
dec
mov
mov
daa
int3
add
leave
imul
int3
and
dec
or
mov
dec
jns
shl
jo
les
xor
pop
jns
hlt
lock
xor
inc
lods
in
sub
ficomps
popa
lea
and
orb
fs
dec
add
out
xchg
ror
movb
nop
and
repnz
nop
ja
out
repz
xchg
cwtl
xchg
inc
in
xor
leave
push
sbb
jp
ljmp
mov
stc
and
cld
aas
and
jnp
jo
and
mov
xchg
mov
dec
xchg
cmpsl
push
andl
stc
jl
jne
inc
inc
push
pop
dec
in
fsubrs
adc
jmp
adc
jp
add
push
cmp
dec
ja
jecxz
pop
push
aas
or
sahf
fnstenv
jecxz
mov
push
pushf
test
mov
fnstenv
les
inc
stos
aas
ret
inc
mov
call
mov
insl
test
testl
inc
pushf
xor
xchg
add
jb
sbb
ret
jb
je
sbb
dec
imull
outsb
out
sbb
movsl
xor
cltd
inc
xchg
loopne
push
test
and
mov
dec
push
scas
sarb
and
out
push
lret
stos
pop
sub
jge
jns
push
mov
addr16
dec
out
popa
inc
daa
rcrl
popf
sub
test
dec
outsl
jl
xchg
outsb
pop
adc
cmpsb
add
std
pop
add
pusha
push
addr16
sbb
add
shll
orb
push
and
mov
out
addr16
out
sbb
icebp
test
mov
sbb
push
xchg
sub
out
jmp
adc
cld
jnp
sbb
cmc
pop
lahf
cwtl
in
loope
inc
outsl
and
inc
mov
xor
out
inc
adc
adc
jnp
jns
mov
mov
pop
pop
mov
mov
fwait
in
jp
xor
mov
jne
push
popl
cmp
adc
mov
fiadds
adc
lock
sub
adc
adc
push
out
or
pop
ret
fimuls
leave
mov
xor
sbb
insl
loop
adc
or
push
jle
xor
add
mov
dec
sub
test
aam
mov
add
incb
sbb
mov
add
test
mov
mov
cmp
or
fcmovnb
ss
arpl
mov
sbb
das
hlt
mov
into
negl
scas
sbb
cltd
mov
dec
movsl
shrl
shrb
inc
cltd
xor
and
flds
ljmp
jns
test
jbe
inc
mov
test
sbb
scas
subb
jp
xchg
sbb
inc
fsub
inc
jno
popf
ret
sub
lret
in
cwtl
pop
aam
cmp
pop
dec
addr16
jmp
adc
or
add
xor
mov
or
std
inc
adc
jne
cmpsb
add
daa
mov
dec
test
sbb
mov
xchg
inc
mov
lret
rol
jp
sbb
sub
push
fsubrs
and
push
xchg
mov
jmp
pop
addr16
jne
pop
add
stos
xchg
icebp
inc
mov
in
xor
inc
cmp
sbb
ds
xorb
xor
cmpsl
mov
out
movb
sbb
and
jmp
jne
mov
adc
je
cmp
pop
loope
aad
xchg
lret
mov
jnp
add
icebp
inc
xchg
sbb
loopne
xor
int3
xchg
mov
push
push
sbb
inc
inc
je
inc
push
or
jle
jnp
test
loop
jecxz
jns
insb
lahf
cltd
lock
fildl
sbb
adc
test
mov
jle
push
inc
cs
dec
xor
dec
adc
aas
adc
das
dec
and
push
iret
cmpsl
dec
ss
add
loopne
dec
inc
jnp
inc
ret
ret
or
inc
cmc
or
into
adc
test
test
jp
cwtl
mov
xchg
test
call
mov
push
adc
ret
nop/reserved
sub
inc
xchg
clc
scas
fisubrl
aam
pop
mov
push
mov
fidivs
jno
xor
mov
cltd
out
rcr
pop
dec
test
test
ds
xchg
adc
rolb
mov
add
pop
jne
dec
scas
das
push
lret
outsl
fwait
sub
or
jb
cmp
sub
out
jae
rorl
loop
dec
mov
add
roll
rcrb
or
insb
andl
imul
sar
mov
and
xchg
mov
jb
cwtl
rolb
popa
fcoml
add
cld
cmp
push
clc
mov
inc
xlat
xchg
push
out
xor
sbb
inc
xchg
insb
mov
les
xchg
pop
add
cmpsb
mov
or
cmpsl
mov
push
out
xchg
das
add
sbb
sub
xlat
das
fwait
int
hlt
xchg
rclb
push
push
mov
loope
xchg
mov
pop
lret
jp
lret
pop
push
stos
mov
cmp
testb
cmpsb
les
test
cs
jne
das
lods
arpl
pop
dec
push
aas
in
inc
mov
out
xchg
sbb
ret
push
push
iret
sub
stc
add
insl
lahf
ja
scas
fs
icebp
and
orb
les
aad
pop
lods
dec
pop
movsb
das
repz
adc
pushf
cmp
ret
pop
mov
out
mov
and
sbbl
notl
jle
cmc
stc
add
adc
bound
aas
sub
cli
add
into
sahf
or
adc
ljmp
fistpl
unpckhps
movsl
mov
test
test
out
ror
xor
call
pop
cmp
lcall
xor
sahf
sub
jg
cmp
enter
nop
add
stc
adc
fisubrl
aas
mov
dec
or
sbb
push
pop
xchg
xchg
mov
data16
push
std
cld
sub
push
je
pop
or
enter
xor
mov
shl
dec
flds
repz
xchg
mov
or
add
push
fucomi
ljmp
sbb
cmp
sbb
stc
pop
ficoml
mov
and
adc
pop
and
lcall
add
or
sbb
inc
les
add
insb
pop
int3
inc
mov
lds
and
cwtl
dec
mov
test
into
and
scas
cli
icebp
lret
xor
in
orl
jl
push
xor
add
test
fdivrl
les
pop
or
push
mov
or
ror
cmc
push
pop
mov
xchg
sbb
imul
jbe
stc
test
or
mov
lea
push
shr
mov
push
xchg
inc
push
lods
aad
and
sbb
out
jmp
mov
mov
jecxz
pop
rcr
roll
inc
cmp
loopne
sti
lock
aad
mov
pop
decl
test
mov
repz
cmp
addr16
xchg
hlt
cmp
adc
mov
arpl
lcall
repz
insb
fistps
push
push
cs
push
fmul
les
imull
inc
dec
fidivl
scas
mov
cwtl
jp
rclb
std
lret
sbb
mov
adc
data16
enter
outsb
out
fwait
sbb
push
mov
data16
decb
dec
in
mov
mov
mov
xlat
xchg
les
repz
popa
pop
inc
insl
mov
jge
push
xlat
sbb
in
imul
js
negw
add
sub
or
pop
out
or
sbb
push
or
pop
aad
int
test
popa
imul
inc
mov
cmp
imul
push
jno
jecxz
inc
lods
js
sbb
push
roll
mov
and
jno
insl
pop
adc
xor
inc
adcl
dec
loop
push
pop
mov
jb
jmp
fs
nop
in
ja
cltd
xor
lahf
daa
lds
add
ja
in
sbb
xor
popf
mov
lods
cmp
ja
xor
aad
mov
sub
push
push
xchg
sub
leave
jbe
mov
jbe
es
mov
jbe
dec
mov
fldt
scas
cwtl
popa
leave
mov
mov
sbb
into
stos
pop
imul
mov
cmc
push
scas
adc
push
test
aaa
jle
cmovb
scas
sub
push
pusha
sbb
test
mov
xchg
insl
mov
cmp
mov
push
out
ror
fistl
jae
cld
scas
pusha
add
adc
add
sub
xchg
push
cmpsl
xor
mov
cmp
mov
insb
push
ss
cltd
ret
repz
into
stos
aad
insl
cmp
inc
lods
xor
mov
int
pop
popf
cmp
cmp
das
adc
or
lods
push
push
add
clc
stc
pop
fwait
ja
ljmp
aad
leave
mov
mov
jbe
fiaddl
fucomi
mov
jl
pop
dec
sahf
mov
insl
sahf
xorb
pop
inc
or
pop
push
pop
sub
into
imul
push
jmp
scas
mov
into
dec
dec
subl
ror
mov
inc
lods
sbb
mov
mov
fdivl
cmp
and
jo
insl
test
sbb
sahf
dec
loop
adc
push
and
and
inc
aaa
lods
clc
loop
dec
dec
aaa
test
sub
repnz
cli
pop
cmp
adc
frstor
push
lret
mov
and
pop
mov
pop
fnstenv
loopne
or
pop
pop
adc
cvtps2pd
adc
dec
lea
aam
imul
shrb
jno
mov
lds
sbb
les
es
loope
pop
lods
sarw
inc
add
lahf
fsubr
xadd
mov
addr16
lods
and
ret
lock
cmpb
inc
pop
pusha
mov
push
xchg
pusha
gs
scas
flds
dec
pop
xchg
mov
mov
sbb
fwait
mulb
rclb
or
nop
cmp
mov
mov
push
lock
fmul
dec
aam
cltd
aas
sub
pop
cmpsb
repnz
rep
add
imul
scas
sbb
or
in
test
inc
adcl
pop
shlb
stc
cld
in
outsb
aaa
lret
int3
ss
inc
outsl
imul
popa
enter
pop
fdivs
adc
cmc
push
out
cmp
jne
leave
out
dec
push
sub
mov
dec
pop
mov
adc
adc
cwtl
stos
addl
cmpxchg
xchg
ds
mov
shl
fstps
inc
adc
pop
shlb
dec
sahf
sbb
sbb
sbb
adcl
cmpsb
push
sub
mov
ja
aas
inc
insb
sti
mov
or
and
jb
mov
fwait
cwtl
andb
jne
in
sub
dec
dec
add
mov
mov
stos
xchg
test
pushf
movsb
xlat
sub
clc
sub
adc
inc
mov
dec
cltd
pop
lret
cmp
aas
testb
adc
fbstp
and
loop
test
fdivrs
mov
or
addr16
cli
push
add
shll
aas
movsl
popf
or
rcr
movsl
pusha
lcall
ss
out
jbe
cwtl
clc
or
and
pop
pushf
data16
xor
cmp
fisttpll
inc
jle,pt
dec
js
repnz
mov
and
imul
xor
test
je
xor
fadd
xor
mov
adc
fmull
loopne
clc
and
test
adc
add
xchg
inc
mov
bound
push
or
lods
out
mov
dec
and
mov
pusha
nop
mov
data16
pop
mov
fildl
lret
repz
mov
in
arpl
pop
subps
mul
in
aam
and
movsb
adc
dec
sbb
jno
sub
or
popf
dec
pop
rclb
add
cmp
cmpsl
and
incl
inc
sbb
push
popf
xor
pop
cmp
cmc
test
std
lahf
lea
jmp
mull
mov
cmc
rcl
dec
push
sbb
lcall
xchg
cli
movsl
or
sbb
xchg
les
and
adc
push
pop
loope
aad
or
mov
xor
push
push
adc
pop
and
inc
popw
orl
sbb
jo
rcrb
dec
loopne
mov
adc
sub
push
add
dec
sbb
mov
inc
aad
fcoml
adc
jbe
cmp
cmp
dec
test
in
mov
or
lods
adc
insb
xor
or
cmp
mov
inc
push
fildll
cli
aas
push
fsubr
dec
loopne
push
adc
rcr
aas
xor
clc
jo
adcl
sbb
popf
jnp
sub
rorb
and
add
scas
jo
in
rcrl
cmpsl
mov
pop
mov
sahf
jmp
mov
mov
aaa
xlat
inc
cltd
jg,pt
jnp
mov
push
or
das
xchg
arpl
inc
enter
pushf
int
out
mov
pusha
sbb
insb
ror
adc
ret
je
jmp
enter
jle
jbe
xchg
rolb
push
fildll
ja
jecxz
paddusw
out
or
cli
dec
shlb
roll
jnp
and
aaa
mov
cli
adc
push
push
inc
xchg
outsl
ds
mov
xchg
push
cmp
mov
inc
xlat
notb
aam
rcrl
mov
lret
in
bound
push
les
or
dec
lret
lahf
sbb
inc
lret
sub
popa
repnz
cmp
movsl
imull
mov
jns
std
das
xor
push
jnp
cmp
loopne
push
sahf
push
lock
cmp
fwait
add
dec
xor
sbb
mov
dec
bnd
pusha
and
mov
imul
jns
ja
daa
xchg
in
inc
push
sbb
dec
mull
flds
and
and
pop
cmp
dec
jg
push
xchg
popa
pusha
adc
cmpsl
xor
sub
push
adc
test
mov
inc
ret
jnp
clc
xchg
cmpsl
adc
rorl
or
sub
cmp
xor
lea
scas
stos
stos
mov
cmp
mov
insl
stos
nop
xor
aam
inc
cmpsb
sub
sub
mov
cli
scas
fisubrs
jno
roll
in
cwtl
imul
aaa
xchg
test
pop
adc
std
fistpl
in
cmp
cwtl
rorb
jecxz
sarl
and
push
mov
int
and
cli
jnp
xchg
xor
pop
es
ljmp
rcll
loopne
pop
outsl
sbb
pop
add
cld
aas
lcall
adc
andb
pop
loope
cmp
movsb
lret
test
xchg
aad
cmpsb
dec
push
xorl
mov
push
dec
arpl
sbb
adc
mov
pop
jl
sbb
jnp
adc
add
push
int3
jp
scas
push
insl
add
jmp
pop
pop
sahf
add
es
or
mov
test
leave
cmpsb
insb
jae
push
sbb
inc
or
lea
pushf
icebp
adc
push
mov
jl
mov
in
mov
gs
sbb
xlat
outsl
popf
jge
outsb
cmc
je
ss
in
shll
dec
or
loope
bound
adc
cli
shlb
push
jmp
lahf
shll
sub
lods
mov
cmpsl
loop
dec
push
mov
sbb
inc
lcall
push
or
jl
ret
mov
pop
jp
pop
xchg
pop
or
dec
cltd
dec
jb
adc
push
jl
cmpsb
inc
cmpsb
pop
xor
sbbb
cmp
sub
inc
in
sahf
rorl
icebp
fadds
xchg
push
pop
fildl
sub
into
xor
mov
push
xor
pushf
push
inc
mov
mov
loopne
fwait
push
jl
or
aam
pop
lret
negl
and
jo
test
clc
es
pop
notb
shll
mov
mov
sub
cld
xchg
in
adc
je
jns
cmp
in
inc
cltd
mov
adc
rolb
test
sbb
cwtl
push
jnp
ret
shl
sti
push
lret
jbe
mov
lods
push
pop
scas
lea
test
fildl
inc
fldl
imul
aas
push
outsb
xchg
and
dec
mov
add
and
sub
mov
push
mov
in
fsubrp
xor
mov
dec
aaa
daa
gs
lods
dec
loope
scas
cmc
cmc
lcall
xor
jge
cmp
fldl
lret
mov
jp
sbbb
cmp
sbb
test
cmp
and
aas
mov
inc
mov
jbe
sbb
pop
push
shrl
popl
addl
mov
sarl
out
mov
mov
inc
jo
and
lret
dec
lcall
mov
sbb
test
shrl
push
sbb
and
inc
gs
scas
clc
cmp
popa
jne
scas
jo
add
push
mov
jmp
lahf
add
cmp
pop
scas
lret
or
cmp
jle
lock
inc
sbb
dec
jg
mov
mov
jb
adc
add
add
shrl
ja
aas
out
adc
mov
leave
mov
or
stos
adc
lret
incl
mov
sbb
out
fcomp
cmovnp
lahf
push
mov
js
jne
aas
inc
in
jb
sbb
pop
jle
les
aam
xchg
add
cmp
test
pop
jmp
test
dec
cmpsl
inc
jmp
or
jmp
fsub
cli
subb
xchg
add
gs
aaa
stos
call
xchg
and
cmp
mov
jg
adc
push
into
push
pop
test
jecxz
popa
int3
psrld
sbb
and
xorb
push
pop
call
and
inc
pop
sti
jecxz
xor
xchg
and
inc
add
pop
mov
cmp
mov
push
std
and
xchg
ljmp
or
mov
nop
cmpsl
daa
push
fadd
repnz
rcl
ljmp
xor
jmp
shll
fs
jb
dec
jle
out
enter
xor
sbb
cmp
lahf
jge
test
mov
inc
bound
push
jns
xchg
imul
out
insb
jns
ljmp
mov
jmp
push
test
add
imul
cmc
or
jbe
pop
les
jno
rolb
bound
or
mov
pop
add
pop
enter
daa
push
mov
mulb
and
jo
adc
push
adc
aad
dec
into
fildl
cmpl
scas
shrb
fdivrs
mul
dec
xchg
lret
lea
std
jo
fwait
fwait
sub
in
lahf
push
fs
add
sub
jge
adc
movsl
in
jbe
mov
clc
pop
jae
lret
add
dec
and
xor
les
sub
inc
fisubrs
jecxz
cmp
xor
in
adc
vpavgw
xchg
mov
enter
scas
je
mov
in
jmp
js
movsb
xchg
cmc
push
mov
mov
push
jp
mov
int
nop
add
iret
in
test
pushf
sbb
pop
adc
clc
aam
push
lahf
or
sub
xchg
mov
xor
in
add
push
or
pop
enter
pop
rolb
leave
inc
dec
out
inc
or
cmp
and
mov
test
mov
jae
xchg
jb
dec
loopne
cmp
dec
xchg
xor
push
pop
xchg
xchg
xor
cmp
jecxz
pop
adc
pop
push
mov
sub
xor
into
push
cmp
cltd
dec
cli
push
cwtl
mov
cmpsb
cmp
or
test
add
xor
dec
pusha
pop
loopne
push
lret
lahf
mov
push
pop
and
daa
adc
push
xor
jae
cmc
mov
cmc
je
or
or
into
jno
pop
lret
sti
mov
sbb
cmp
and
pop
sbb
in
cmp
jno
lahf
inc
setl
mov
lods
dec
ja
mov
cmp
addr16
mov
cmp
pop
sbb
out
mov
and
and
xor
test
push
arpl
lret
mov
adc
pop
movsb
aaa
cmp
lea
jmp
jle
pop
lret
or
out
out
lahf
fdivl
gs
out
jecxz
jle
mov
push
adc
int3
out
xchg
data16
in
les
fs
out
mov
dec
or
jmp
stos
dec
dec
gs
les
iret
shll
push
sub
jno
sbb
sahf
pop
dec
nop
lods
rorb
out
jecxz
movsb
cmp
stos
stc
out
xor
xor
mov
jb
aad
dec
fsubs
imulb
inc
stos
sub
shll
lds
idivl
pminub
or
inc
push
jecxz
mov
int
outsl
mov
mov
rcll
fs
scas
jp
inc
out
popf
mov
aam
push
dec
lock
jge
outsl
cmp
cmpsb
inc
xor
add
and
cmp
sub
imul
fnstcw
cmpl
cs
jo
adc
mov
pcmpeqd
and
out
leave
sub
test
roll
add
fwait
xchg
out
adc
sbb
sub
test
rorb
add
pop
push
jne
xchg
repnz
push
rcr
imul
stos
pop
pop
arpl
sarb
int3
push
stos
icebp
push
test
in
in
out
sbb
inc
mov
mov
cmc
mov
iret
lock
loop
mov
jno
pushf
nop
push
mov
dec
mov
mov
pop
out
faddl
adc
lret
add
mov
dec
out
cmp
fnsave
test
test
pop
sub
jg
jbe
repz
movsl
std
clc
mov
pop
mov
mov
sbb
arpl
mov
mov
cmpsl
mov
rol
dec
xchg
aaa
mov
push
sbb
add
sub
push
or
pop
xor
dec
mov
jb
out
scas
shlb
imul
ss
mov
inc
mov
sahf
xor
shrb
fstpt
mov
jb
fisttps
mov
in
sti
sub
fidivs
or
fs
scas
add
ret
pusha
div
fistpl
clc
pop
add
xor
aad
xor
fdiv
adc
and
sub
int
cmc
negl
adc
mov
jne
data16
mov
aad
jae
in
xor
mov
mov
lods
bound
cmpb
out
test
mov
xchg
orb
mov
pop
ficoml
mov
xchg
push
daa
scas
pop
xor
mov
in
inc
push
imul
pop
mov
push
xor
insb
mov
adc
cmc
push
xchg
fs
jae
mov
sti
push
pusha
xor
pop
flds
jmp
jecxz
shll
dec
test
outsb
insl
lcall
xchg
mov
cmp
xor
pop
lods
mul
push
cmp
daa
jl
into
dec
cs
xor
cmpsb
xchg
cmp
dec
pushf
test
add
inc
lcall
clc
aad
in
mov
push
xchg
sub
out
data16
pop
call
inc
hlt
sub
mov
shl
adc
insb
add
aam
fisubs
push
mov
and
shll
outsl
popa
fwait
leave
or
adc
push
push
arpl
xor
mov
and
ss
addr16
cmc
sub
mov
add
push
pusha
push
xchg
daa
xor
in
out
pop
ds
outsl
mov
ret
dec
outsb
int3
mov
aad
pushf
adc
fimull
out
cmpsb
and
push
inc
scas
enter
pop
leave
insb
pop
cmpb
test
andb
mov
mov
lods
pusha
sti
xor
xor
imul
ja
xor
lds
std
dec
fimull
idivb
cmp
ss
ss
push
jg
pop
pop
mov
add
out
icebp
mov
fistpll
lcall
mull
and
inc
stos
pop
xchg
ret
mov
repz
out
xchg
out
icebp
out
popf
imul
push
or
cwtl
test
pop
inc
cmp
xchg
movsb
icebp
or
scas
popa
sbb
jo
xchg
adc
data16
or
cmp
xchg
push
lock
jns
pop
mov
pop
sub
hlt
mov
cmp
jae
inc
mov
adc
sbb
mov
fisubl
int
cmp
inc
js
xchg
out
gs
sub
rcll
and
stos
sahf
xor
pop
and
sub
adc
jne
mov
nop
ficompl
or
sbb
aas
xor
les
pop
je
pop
xchg
mov
sub
sbbb
insb
jecxz
adc
cmpsb
iret
add
mov
mov
shlb
xchg
pushf
xchg
in
mov
jnp
clc
rorb
jecxz
sub
arpl
fdivl
movsl
xor
push
cwtl
cmpb
jge
clc
icebp
sahf
add
aaa
data16
push
cmp
imul
stos
in
push
aas
inc
das
xchg
imul
push
popf
mov
push
fucomip
and
jecxz
inc
sbb
rorl
sbb
sub
daa
cmp
inc
push
icebp
sti
insb
mov
push
adc
push
pop
test
pusha
and
idivl
imul
pop
ds
andl
lret
sub
or
inc
inc
jl
mov
dec
shrl
gs
sti
loope
jae
out
or
and
xchg
rorl
lock
arpl
dec
sub
inc
add
or
jne
xor
sbb
lock
mov
inc
bound
mov
sub
adc
sub
test
clc
loop
lods
adc
mov
ret
push
repnz
iret
push
mov
dec
dec
fwait
pop
xchg
out
enter
stos
imul
cmp
add
cmp
inc
fsubrs
inc
je
mov
call
sub
push
dec
fnstsw
sub
test
jns
sub
pminsw
imul
cmpsb
cmp
mov
or
std
aam
int
push
lahf
sbbl
push
lock
jbe
jmp
sub
fcmove
and
jg
lea
mov
mov
fwait
or
rolb
test
jecxz
leave
inc
and
inc
push
flds
subb
hlt
push
flds
stos
outsb
fsubrl
ret
jmp
fcomps
fistps
pop
jp
or
pop
dec
jmp
xchg
xchg
and
and
lret
mov
into
shr
mov
insl
lock
jns
or
fldenv
lcall
adc
fldt
jns
pusha
xor
leave
dec
adc
cmpsl
adc
cld
sbb
mov
push
xor
outsl
adc
inc
pop
in
pop
repnz
std
int3
mov
push
sub
sbb
cmp
aaa
repz
push
ja
and
sarl
dec
inc
push
push
es
mov
mov
cmpsl
pop
inc
inc
movsl
jae
mov
or
jl
int
adc
mov
xchg
mov
pop
gs
push
sbb
mov
dec
pop
xor
ret
jae,pt
movsl
outsb
jge
popf
outsb
jb
cmp
repnz
mov
test
xchg
mov
inc
fsubp
lods
leave
add
mov
cmp
loop
xor
lahf
adc
inc
into
data16
dec
insl
xor
adc
adc
pop
xor
adc
sbb
mov
loopew
adc
jge
cmp
gs
test
jae
push
cmp
bnd
mov
into
jo
out
xchg
push
fldenv
mov
mov
mov
inc
ds
mov
adc
mov
in
mov
cmp
inc
jbe
mov
push
imul
fucomi
sub
adc
enter
enter
ret
mull
cltd
ja
add
add
cmc
bnd
fmuls
inc
arpl
jge
pop
out
mov
pop
cmp
gs
push
mov
nop
and
pop
cmp
jg
jns
jg
jmp
sub
bound
es
cs
aaa
mov
push
mov
push
dec
cmp
xchg
int
push
jb
pop
jbe
jb
cmpsb
testl
cs
into
orl
in
xor
add
test
cmc
xor
pop
xor
push
mov
repnz
nop
ret
pop
pushf
pop
and
loope
lods
decb
pop
dec
mov
mov
xchg
pop
clc
cmp
or
je
cmp
mov
inc
and
hlt
mov
push
repz
pushf
pop
shl
dec
loopne
cmp
rcr
mov
mov
jmp
cs
push
push
bound
in
lods
fcoms
jle
daa
sub
les
jae
js
and
pop
nop
mov
mov
lret
mov
fdivl
lods
fsts
call
test
outsb
les
dec
sbb
add
mov
mov
out
aas
push
add
int
enter
push
lds
xchg
loope
push
jge
or
sub
mov
mov
push
lods
dec
sbb
adc
mov
outsl
test
pop
cmpsl
fdivrs
xor
setnp
xchg
es
and
shrl
js
ss
out
mov
xor
mov
sbbb
iret
and
mov
mov
and
xchg
xchg
test
add
fwait
test
stc
sub
inc
pop
mov
adc
jp
lret
mov
cmp
mov
sub
popf
xchg
sysexit
xor
andl
daa
add
xchg
pop
adc
out
ds
ret
jo
fmuls
iret
daa
mov
sti
cmp
sbb
sub
sbb
rcrb
jmp
ljmp
pop
xchg
mov
dec
test
fwait
aas
pop
jp
outsb
mov
mov
in
lea
inc
jmp
fidivrs
data16
push
inc
dec
adcb
or
mov
cmpsb
or
pop
xchg
jb
iret
inc
pushf
mov
int3
sub
jo
sbb
test
outsb
jp
daa
jnp
dec
pusha
rcrl
iret
inc
mov
fnstenv
jnp
mov
pop
or
add
decb
adc
add
push
sub
push
jbe
cltd
sti
icebp
cmp
je
push
pushf
mov
xor
call
dec
pop
xor
cmp
lock
mov
cmpsl
mov
sub
lahf
push
lock
mov
push
out
mov
pop
cmp
ss
into
jmp
imul
gs
dec
jmp
out
fwait
jae
cmp
mov
xorb
pop
mov
je
push
inc
add
sarl
xorl
cwtl
orb
cmp
out
jmp
adc
std
insl
jno
xchg
test
out
fidivs
adc
pop
out
fstps
or
popf
jecxz
xor
dec
cltd
lcall
jno
sub
jmp
push
test
mov
xchg
sahf
jns
mov
jo
ds
jecxz
fldenv
aad
dec
inc
mov
in
add
dec
xor
fcoms
cmpxchg
jb
xchg
mov
sahf
adc
insb
mov
lcall
hlt
push
ret
inc
out
xchg
into
fcmovnbe
fdivr
adc
mov
sbb
bound
repz
xor
lret
imul
pop
mov
mov
rorl
jo
rcrl
test
sub
cmovae
jp
test
jns
enter
int3
sbb
hlt
add
xchg
jno
mov
in
adc
outsl
sbb
lret
dec
sub
in
push
inc
pop
scas
js
pop
xchg
fs
mov
out
test
lret
loope
mov
iret
sub
jmp
cmp
mov
lods
sub
inc
xchg
ss
xchg
push
clc
lret
xor
adc
sub
or
clc
or
sbb
enter
fcomp
cwtl
into
mov
cs
jbe
mov
dec
pop
pop
xchg
cltd
sub
dec
jb
sbb
inc
adc
pop
cmp
push
pop
scas
gs
jns
jnp
cmpsb
ljmp
xlat
shlb
jl
mov
jp
jno
cmp
mov
adcb
pushf
dec
cmpb
cmp
aam
xchg
int3
scas
pop
dec
adc
pop
jns
add
push
in
pop
adc
xchg
dec
xchg
loopne
or
jb
stos
iret
movsl
fsubrl
cli
pop
mov
cs
sub
cld
pop
popf
scas
cltd
push
sbb
out
fdivl
xor
xor
xor
out
scas
pop
daa
mov
jl
imul
arpl
je
aas
push
xchg
pop
cmp
aas
dec
hlt
sub
mov
aas
fcomip
inc
sub
out
mov
mov
test
push
jnp
cli
adc
cli
adc
mov
stos
mov
fs
or
mov
or
adc
lcall
inc
sbb
iret
dec
dec
jno
mov
xor
mov
jg
mov
pop
dec
ret
mov
js
mov
xor
fnstsw
sbb
xchg
ret
dec
dec
xor
out
jecxz
pop
jo
cmp
adc
push
inc
aad
scas
das
jo
in
mov
clc
push
sub
mov
imul
stos
stos
xor
mov
jb
mov
ret
push
jae
add
push
shrb
ja
out
pop
rorb
or
or
insb
mov
popf
adc
scas
pop
sub
dec
lret
lret
dec
xchg
pop
psrld
xor
aad
cmc
inc
fcoml
movsb
pop
xchg
sbbb
sbb
or
mov
loope
repnz
mov
test
sub
sbb
push
mov
and
std
nop
stos
or
rcll
inc
insb
stc
and
aaa
in
jmp
mov
sub
mov
testl
or
cmp
xchg
mov
insb
mov
test
in
push
push
mov
xor
push
sub
inc
ret
cmp
movsb
stos
pop
mov
cmp
sbb
xchg
in
push
mov
fadds
sub
mov
jne
test
add
int
pop
out
fisubl
jp
adc
stos
push
fldenv
hlt
fistps
add
out
test
insl
push
loope
sub
cmpsl
int
mov
in
fcomps
mov
adc
das
in
mov
mov
pusha
push
adc
dec
lret
jl
jne
push
pop
push
cmp
jb
sbb
xor
add
and
jg
iret
xor
sbb
cltd
sub
iret
cmp
test
outsl
outsl
loopne
jmp
or
stos
aas
and
jnp
push
clc
cmp
and
and
and
xor
movsb
outsl
sub
inc
fsubrp
js
jmp
push
adc
push
lods
in
test
inc
xchg
shrb
daa
aam
sbb
xchg
jge
das
ret
mov
nop
cld
fistl
ss
inc
dec
popf
push
jl
fwait
dec
adc
mov
lods
sbb
mov
dec
lea
jb
in
fdivr
cli
push
dec
mov
bound
inc
push
sbb
add
push
push
inc
loope
cmp
inc
push
mov
pop
push
stos
sbb
nop
push
add
mov
in
lds
mov
fisubs
jne,pt
xor
into
or
mov
movsl
call
cld
lret
int3
lock
sub
call
clc
pop
jb
stc
cmpsb
cmp
pop
push
je
mov
lea
adc
loopne
fiadds
and
inc
push
xchg
sbb
cwtl
cmpb
mov
sbb
xchg
cmp
mov
push
sbb
jnp
aaa
mov
lret
cmp
mov
xchg
fsubr
lds
adcl
xor
stos
shl
xor
sub
jno
xor
gs
adc
mov
push
pop
cwtl
adc
and
jno
xchg
xor
outsb
pop
push
sti
add
cmp
jmp
or
add
pop
mov
mov
leave
xor
pop
sar
fldl2e
in
push
xchg
call
clc
xor
sti
mov
adc
adc
xor
fwait
xor
ds
lret
sub
in
dec
pop
mov
mov
pop
fmul
int3
sbb
lock
xor
xor
and
lock
jo
cmp
mov
dec
test
cmp
int
stos
add
or
icebp
mov
dec
fsubrl
in
mov
xor
mov
add
push
int
frstor
pop
shl
cwtl
js
js
les
lods
sbb
xchg
pop
push
cmp
lahf
inc
mov
fmuls
cmpsb
dec
adc
cmpsb
jno
ja
fiadds
cs
cmp
jns
not
xor
pop
mov
lock
scas
sbbl
imul
push
mov
push
test
add
push
fdivrl
test
mov
int3
inc
mov
push
sub
jg
sub
std
lret
jnp
adc
xor
nop
add
pop
sub
imul
push
xchg
sbb
sarl
pop
jb
fwait
push
cmp
mov
in
out
js
lea
sbb
sub
aad
scas
jg
dec
jge
mov
out
punpckhwd
test
and
push
decb
dec
pop
add
jp
mov
popa
xor
push
jnp
das
ficompl
cmp
xchg
mov
fwait
leave
divb
lds
and
mov
dec
jb
dec
cld
add
and
cmp
call
in
fcom
add
fwait
lret
mov
jmp
aam
sarl
push
mov
xor
sub
push
aam
leave
cwtl
pushf
subl
push
inc
and
and
nop
sarl
insb
push
hlt
imul
push
stos
and
or
jge
sub
lock
and
and
jecxz
inc
mov
cwtl
out
scas
xchg
insl
imul
xchg
mov
jb
jae
xchg
pop
fnstcw
clc
mov
ret
mov
jbe
or
fs
fstpt
jmp
push
mov
sbb
xor
cmp
stos
data16
sbb
sub
insb
cmp
sub
popa
stc
mov
mov
or
add
sub
jmp
pand
sahf
sbb
dec
hlt
sahf
mov
out
aas
xchg
mov
orl
fdivl
shll
add
sub
mov
xor
cmpl
add
aam
das
inc
or
dec
imul
nop
sarl
xchg
ret
sbb
in
adc
jbe
cs
jmp
xor
imul
dec
pop
and
ss
mov
loop
xchg
and
insb
hlt
lcall
jbe
jge
pushl
jg
inc
mov
fistpll
push
mov
pushf
xor
aad
repnz
xchg
jns
adc
mov
in
ljmp
mov
pop
ficoms
jne
add
aad
outsl
mov
inc
aas
fs
xor
imul
leave
sub
movl
popf
hlt
and
lea
xor
xchg
movsb
outsb
xor
repnz
subl
ss
js
lea
lret
popf
movsb
mov
je
or
adc
out
jecxz
negb
adc
dec
add
fcmovbe
ror
cli
inc
inc
clc
lea
xor
stc
or
or
test
push
mov
mov
jae
mov
cld
mov
inc
adc
push
ret
das
mov
outsb
mov
mov
jp
cli
jno
gs
incl
xor
sub
out
jp
cmc
mov
clc
push
loopne
lcall
and
int3
ds
cmpsl
pop
in
add
rclb
ss
repnz
outsb
cmp
inc
icebp
test
mov
pop
out
rcll
je
pcmpgtd
dec
jno
pop
out
sub
adc
or
mov
mov
sub
jmp
mov
add
push
in
pusha
cli
cmp
sub
mov
outsl
xchg
push
lret
add
dec
xchg
cmp
cs
jns
or
andb
inc
push
fbld
push
and
cmc
in
inc
aaa
dec
push
xlat
xchg
iret
cmp
mov
fistpll
dec
mov
sbb
sub
inc
ret
mov
adc
popa
jo
push
mov
dec
jnp
leave
jo
push
and
mov
or
and
andl
pop
in
dec
daa
push
data16
add
adc
sbb
sti
scas
mov
bswap
xchg
inc
push
push
jl
push
mov
jo
jae
jns
in
outsb
loop
pushf
jae
out
pop
or
shrl
es
xor
mov
push
dec
xor
cwtl
lea
add
jno
mov
scas
or
and
ljmp
dec
add
push
and
loope
and
test
repnz
cwtl
xor
adc
loop
mov
in
pop
or
and
sar
aam
pop
aad
xchg
sar
xchg
jl
sbb
jb
daa
and
int3
mov
lods
test
or
xchg
test
insb
test
mov
inc
add
push
mov
insl
adc
adc
mov
sbb
push
inc
jge
cmp
in
cmp
pop
in
xchg
pop
xor
out
pusha
rolb
pop
dec
or
rcr
jb
push
mov
ret
or
and
push
cmp
cmp
xor
cmp
sub
mov
dec
mov
push
leave
fdivs
movsb
insl
sub
or
outsb
push
dec
dec
or
push
push
fs
xor
and
push
aam
add
stos
sbb
imul
push
shlb
sbb
lods
mov
test
jb
lret
sub
add
mov
xchg
cmp
push
ficoml
sbb
js
cli
daa
mov
lcall
into
sbb
jbe
mull
or
mov
cmp
repz
inc
and
pusha
or
mov
cmp
push
inc
call
push
rorb
sahf
pop
or
dec
movsb
sub
xor
sbb
and
xchg
shl
ds
repnz
jno
mov
cmp
mov
sub
aam
lods
mov
add
sbb
push
rorl
mov
bound
ja
std
and
scas
rcrl
pop
int
jnp
int3
pushf
lret
cmpsb
lahf
and
pop
movsb
addr16
jae
jmp
fucom
xchg
inc
jb
fldt
out
or
pop
cmc
dec
aas
in
jnp
outsl
dec
cmp
movsl
or
scas
in
test
push
sbb
jg
mov
push
dec
or
jg
orb
xlat
fadd
add
xor
adc
adc
jmp
out
aad
mov
or
ss
test
movsl
push
adc
mov
sub
loope
dec
rorl
stos
pop
lret
pop
sbb
pusha
or
sub
xor
pushf
mov
test
dec
dec
cmp
xlat
lahf
inc
xchg
pop
adc
adc
sti
dec
push
js
and
push
out
jnp
push
dec
mov
lds
xchg
rorl
pop
xchg
or
data16
test
cmc
mov
mov
pop
std
daa
inc
pop
adc
cs
dec
in
add
xchg
sub
out
adc
mov
imul
inc
aaa
pop
into
addr16
fdivl
and
mov
out
inc
jns
pop
dec
cmp
lea
call
sub
xchg
test
add
test
gs
inc
inc
xchg
xchg
mov
and
xchg
mov
dec
push
daa
jl
rcl
push
push
jne
fmull
sub
xor
xchg
imul
dec
add
cmp
fstpl
gs
push
mov
test
std
or
test
mov
shl
sbb
mov
sbb
loop
lods
cmp
cmp
clc
xor
lret
pop
push
mov
loop,pt
es
shrb
ret
push
adc
jae
mov
mov
xchg
popa
daa
cmpb
mov
ja
inc
cld
push
je
mov
js
fbstp
fiaddl
fisttpl
mov
call
es
subl
add
fwait
pop
xlat
and
pop
xchg
outsb
dec
add
cwtl
insl
arpl
pop
jno
ja
jb
ja
leave
cmpsb
call
enter
push
jmp
aam
inc
jb
js
jecxz
dec
inc
inc
icebp
hlt
in
inc
push
adc
xor
xor
jb
inc
xor
leave
mov
adc
pop
lea
mov
fadds
adc
xor
dec
fcomp
bound
cmpsb
lds
push
loope
xor
hlt
push
adc
or
mov
and
into
sahf
mov
xchg
mov
cmp
jb
add
repnz
dec
sbb
xchg
or
mov
aas
in
shlb
orl
cmpsb
daa
lods
lock
aad
mov
and
sub
pop
mov
pop
mov
xor
sub
xchg
out
xchg
cmc
sub
das
aas
out
mov
leave
dec
fisubrs
stos
mov
mov
nop
sbb
xor
xor
rcll
iret
nop
out
xchg
mov
jle
mov
pusha
inc
int
dec
lods
inc
ret
cmp
add
dec
sub
sub
inc
push
push
leave
inc
out
iret
xchg
push
and
ret
xor
sbb
aaa
cmp
clc
loop
cmp
and
jbe
ljmp
xchg
pop
add
popa
cmp
dec
pop
push
out
lret
or
sub
cltd
pop
jmp
push
sarl
inc
push
sbb
or
mov
cli
in
subl
lahf
in
pop
sub
mov
test
sti
sbb
xlat
sub
jl
adc
dec
mov
and
cmp
imul
mov
stc
lods
inc
je
sbb
mov
loope
jbe
sarb
or
out
pop
or
imul
sub
push
outsb
inc
push
popf
pop
pop
pop
or
cmp
add
sbb
sub
adc
xor
and
pop
xchg
dec
jle
inc
add
jno
stos
int3
lcall
push
insl
mov
cltd
cmpsl
das
imul
fnstenv
cmp
xchg
mull
inc
cmp
xor
mov
push
sbb
and
popa
lds
in
test
add
bound
cmpsl
sub
cmc
sub
jle
js
mov
cs
dec
mov
mov
andl
dec
xchg
sbb
mov
cmpsb
jmp
jnp
push
aas
mov
pusha
inc
cmpsl
into
loop
fwait
int
cld
daa
sub
arpl
insl
push
push
lods
and
decl
arpl
lahf
inc
adc
push
pop
xor
or
pop
dec
adc
pop
mov
add
inc
aam
cli
aaa
mov
fbld
mull
sub
jno
adc
and
dec
or
lea
movsb
cmpsl
dec
mov
popf
ret
push
pop
mov
ljmp
mov
inc
jge
sub
imul
mov
test
mov
imul
mov
pushf
in
mov
xchg
cvttps2pi
push
test
clc
sahf
xchg
daa
pop
jo
xor
mov
out
dec
mov
fcmovbe
das
fstpl
xor
xchg
xchg
mov
mov
fwait
rorl
push
push
jl
xchg
push
icebp
xchg
inc
jo
dec
and
jne,pn
mov
sarl
out
lcall
scas
int3
mov
xchg
out
out
lret
mov
cmp
hlt
and
add
popf
sub
cmp
cwtl
jno
or
inc
iret
imul
out
cmp
in
pushf
divb
inc
dec
fcom
sti
daa
fildll
mov
sarb
lock
lcall
xor
pop
dec
ds
cwtl
icebp
pop
mov
sbb
cli
rorb
dec
rolb
xchg
loope
inc
jg
icebp
mov
shlb
or
sub
into
inc
xchg
stos
mov
sub
cld
and
xor
inc
pop
and
jl
mov
and
push
mov
jl
pop
adc
mov
adc
mul
insl
sub
add
jno
push
cmc
jne
xor
rcll
scas
and
iret
in
movl
jbe
fsubrl
ja
lods
pop
pop
push
mov
mov
inc
lea
test
cmpsl
inc
jae
out
sbb
jo
daa
outsb
rcll
fimull
fistl
xor
sti
adc
adc
jnp
mov
xchg
fdivrs
xchg
pop
stos
sbb
lods
test
fdivrs
shrb
fcmovbe
ret
loopne
clc
outsb
fimuls
out
jmp
xor
sbb
push
in
jl
test
mov
jne
pusha
mov
icebp
cld
dec
inc
sarl
lahf
push
loopne
xorl
or
stc
add
aaa
inc
fs
scas
xchg
jge
and
add
sahf
fbld
lahf
lock
call
fiadds
inc
push
pop
insb
mov
xchg
icebp
push
xchg
pusha
xchg
dec
es
mov
std
dec
mov
imul
js
mov
cmp
ss
bound
stos
mov
inc
pop
mov
sbb
pop
out
scas
out
clc
pusha
out
shl
hlt
jns
mov
les
xchg
in
pop
mov
mov
pop
sbb
xchg
mov
imul
adc
cld
mull
push
nop
mov
cs
cs
xchg
dec
and
stc
lods
decl
sar
movb
jmp
ret
loopne
insl
hlt
sub
xor
sub
ret
xor
sub
lret
push
mov
insb
add
andl
fisttps
push
dec
dec
push
fdivl
cmp
cmp
lret
and
addl
cmp
test
pop
and
aaa
test
nop
push
pop
mov
cli
inc
mov
repz
fwait
add
test
xchg
sbb
inc
adc
cltd
mov
pushf
xlat
popf
popf
sub
mulb
jmp
push
lcall
lcall
sbb
gs
sbb
push
push
je
and
js
rol
in
xor
cmpsb
add
xchg
adc
inc
lahf
stc
dec
int
testb
jmp
xlat
mov
adc
or
in
sbb
into
pop
stos
dec
les
shlb
inc
xor
push
pop
cmp
lock
insl
mov
add
pop
das
lock
in
dec
imul
mov
lahf
or
test
test
cld
mov
cmp
xor
test
xor
jp
sti
add
mov
lds
pop
in
inc
aas
inc
xor
lea
add
daa
xchg
jmp
in
pop
or
pop
cmp
loopne
ja
push
sub
push
mov
test
push
ja
jbe
sbb
loope
mov
cli
lahf
jo
push
cld
call
sub
lea
dec
sbb
jb
cmp
xor
xchg
leave
xlat
pushf
jno
jmp
mov
cmp
cmc
sbb
ficomps
cmp
add
popa
loope
iret
xor
imul
jge
xchg
cli
lcall
mov
xor
fdivrl
push
xchg
jle
push
aam
lea
mov
ss
push
sub
aas
jmp
cld
dec
out
cmp
fs
adc
repz
push
cld
xchg
test
xchg
mov
adc
mov
es
adc
into
dec
push
xorb
xor
jl
aas
mov
push
pop
jo
cwtl
mov
iret
sbbb
into
les
mov
add
xor
sbb
fcmovnb
mov
xor
push
xor
sub
push
pop
push
in
loope
jnp
xor
stc
sbb
notl
lret
arpl
jnp
imul
mov
js
ds
das
imul
jb
iret
or
and
leave
sbb
and
std
dec
push
imul
and
arpl
movsl
faddl
lods
pop
paddusw
jmp
ja
mov
ss
dec
xor
ljmp
aam
into
xchg
je
mov
xorb
mov
push
out
jge
icebp
mov
mov
stc
and
xchg
or
cmp
sub
push
lcall
hlt
pop
fdivrl
insb
ficompl
mov
xchg
jb
and
repnz
jmp
jg
je
mov
adc
inc
cmp
adcl
out
outsl
lcall
jbe
jno
rcrb
lahf
and
movsb
xchg
dec
sub
fisubl
pop
in
imul
lret
sbb
or
inc
fidivs
and
dec
inc
push
dec
jecxz
add
mov
or
fcomps
add
rcrb
lock
imul
push
sbb
rcrb
ret
cmp
push
addr16
pop
mov
jl
mov
lret
adc
xchg
mov
lock
stos
test
pop
xor
adc
push
and
std
mov
call
repnz
or
mov
pop
jbe
mov
fadds
adc
inc
leave
mov
scas
fwait
xchg
fildll
pusha
lcall
ds
out
xchg
adc
xor
dec
movsl
mov
dec
cmp
cmp
test
mov
adc
mov
jle
cli
sub
movsl
aas
push
lods
xchg
cwtl
sub
inc
mov
xchg
push
ja
into
fadd
mov
test
insb
xchg
mov
pusha
jge
xchg
ss
das
out
aas
push
movsl
jp
pop
add
add
stos
call
xor
sarb
loop
sbb
mov
adc
gs
dec
ljmp
mov
fucomp
sub
push
inc
cli
cmp
and
lahf
inc
push
mov
cmp
cmc
dec
in
fcmovne
pcmpgtw
mov
ret
daa
aad
call
mov
cmp
push
mov
sub
or
cwtl
pop
mov
sbb
popf
repz
mov
xchg
stos
data16
ficompl
ficoml
xchg
int
or
pop
test
lea
leave
lcall
pop
xchg
push
adc
into
cwtl
fisubrl
int3
push
push
inc
std
aad
test
sahf
cmpsl
ffree
mov
stos
dec
ds
lock
inc
shl
add
jbe
movsb
inc
jbe
int3
mov
sub
sub
fwait
ljmp
and
jno
rcrb
daa
inc
cltd
and
ss
xchg
out
inc
icebp
xchg
dec
and
je
xchg
and
inc
rcll
es
or
inc
jns
repz
and
mov
into
inc
cmp
xchg
fs
dec
js
lods
scas
hlt
into
cld
xor
adc
movsb
push
cmpsl
addb
xchg
sbb
pop
jo
mov
and
movsb
loope
in
shl
inc
and
inc
inc
xor
notb
aam
pusha
jl
stos
push
jp
inc
xchg
mov
dec
fstp
fs
mov
jmp
fnstenv
loopne
pop
arpl
fbld
test
mov
push
cs
or
inc
pop
std
sbb
dec
jge
mov
push
and
xchg
mov
adc
dec
inc
xor
lcall
sub
or
lds
andb
cmp
std
mov
pop
inc
cmpsl
sub
mov
mov
out
mov
sahf
shrl
mov
inc
subl
jae
outsb
and
sarb
jge
inc
sub
pop
add
mov
minps
xlat
dec
cmpsb
push
pop
add
test
push
add
xchg
mov
push
mov
nop
lret
xchg
dec
clc
repnz
and
ret
orl
sub
repz
mov
and
sbb
cmpsl
inc
cmp
sub
idiv
pop
pop
dec
xchg
add
pop
cld
mov
arpl
in
stos
dec
mov
pop
adc
into
scas
add
fmul
stc
dec
ficoml
out
mov
into
mov
push
pushf
mov
xlat
in
ret
cmp
decb
je
dec
sbb
bound
in
xlat
sarb
mov
fimuls
push
lcall
in
mov
mov
mov
or
jle
or
jbe
pop
sub
popa
cmpsb
add
jle
xchg
adc
lock
and
lcall
jl
jae
sub
pop
jmp
pop
sub
mov
mov
aam
lea
fdiv
inc
aam
fisttpll
mov
out
mov
rcrb
mov
pop
sbb
jbe
xor
hlt
or
fmull
ret
mov
xor
ret
leave
cmp
jo
js
idivl
or
addr16
movsl
pop
add
jge
test
call
in
enter
out
pop
pop
ja
out
fiadds
push
pop
mov
pop
cmpsb
push
xor
jle
arpl
push
lcall
mov
mov
in
and
ljmp
call
fisubrs
inc
cltd
or
add
push
or
subl
rcrb
mov
in
jp
xchg
mov
repnz
mov
bound
movsb
mov
adc
dec
addr16
iret
cli
sbb
daa
dec
push
and
dec
jl
bound
getsec
mov
loopne
adc
jle
fstpt
push
and
pop
and
fisubrl
rorl
fidivrs
lret
jmp
in
sti
addl
mov
cmpsb
mov
jle
sub
pusha
or
iret
dec
in
cwtl
pop
add
dec
and
dec
sub
pop
mov
push
inc
movsl
clc
mov
mul
in
subb
test
sti
scas
and
jle,pn
xor
xchg
xchg
inc
dec
xchg
scas
les
div
xorl
popa
jae
mov
gs
mov
xor
mov
ja
mov
sub
push
outsb
push
insl
test
pop
adcl
mov
push
ret
negb
fs
js
or
xchg
fdivrs
sbb
stc
jns
jae
sub
or
dec
fsubs
dec
cmc
add
aaa
mov
movsb
mov
jp
push
push
fnstcw
or
dec
mov
push
bound
mov
push
aam
mov
mov
jg
int
dec
mov
pop
subl
fsubrl
xor
in
lcall
mov
xchg
push
push
xor
pop
xchg
xor
int
stos
lret
cmp
sub
fldl2t
mov
mov
mov
mov
lea
or
loope
pop
into
inc
sbb
add
loopne
mov
mov
in
xor
or
cmp
push
xlat
and
pushf
cmc
inc
add
push
scas
popa
icebp
xchg
adc
loopne
sub
xorb
adc
xchg
test
mov
adc
imul
sti
adc
mov
fnstenv
mov
xlat
bound
imul
sbb
scas
test
sarl
aam
jecxz
flds
addr16
mov
pop
repz
mov
hlt
jge
fmul
xchg
sbb
push
adc
mov
push
cmc
inc
pop
out
outsb
cmpsl
cs
stos
cmc
int3
mov
test
js
xor
fiadds
sub
cmc
subps
push
ljmp
es
jno
inc
incb
inc
push
sbb
hlt
sbb
jmp
xor
arpl
pop
add
push
cmpsl
scas
int3
inc
outsl
push
sub
inc
xchg
ficompl
icebp
inc
pushl
pop
mov
adc
push
add
xor
aaa
mov
sar
mov
test
popa
dec
stos
sub
lea
dec
psubb
data16
push
out
fwait
ret
out
imul
test
inc
mov
cld
sbb
jecxz
or
pop
xor
sti
gs
lcall
test
mov
imul
xorb
and
mov
shlb
stc
aas
js
pop
adc
dec
mov
jno
pop
lret
ja
or
loope
inc
mov
js
lahf
cmc
lea
push
mov
out
adc
repnz
push
ret
xor
sub
pop
and
dec
cmpl
add
subb
or
insb
repz
cmp
pop
xlat
xchg
xchg
imul
mov
jne
xor
inc
fildll
push
repnz
adc
test
push
lds
das
dec
movsl
pop
cmp
fs
pop
xchg
popf
xchg
cmpsb
push
adc
mov
out
mov
aas
jae
and
cmp
imul
adc
push
xchg
adc
out
cmpsb
lahf
jge
xor
xlat
cli
leave
pop
out
xchg
mov
jae
cmp
shrb
jb
sbb
insl
mov
sub
call
sahf
sub
mov
lds
push
repnz
xchg
or
xlat
xchg
jbe
std
movb
lods
inc
mov
add
mov
pop
add
jbe
push
fcmovnb
roll
mov
adcb
clc
adc
or
test
or
leave
movsb
cwtl
and
arpl
or
lods
addr16
bound
mov
cmpl
cld
push
pushf
aad
and
and
ss
adc
andl
adc
stc
or
add
lods
xor
inc
arpl
xchg
es
pop
dec
sub
push
mov
into
adc
push
pop
imul
sbb
push
loopne
pop
ss
pop
and
xor
pop
and
icebp
popf
add
cld
xchg
mov
sbb
xchg
jge
lock
cmp
cmp
pop
sbb
leave
loopne
icebp
xchg
and
mov
lahf
and
test
dec
loope
lods
bound
orb
das
mov
mov
shrl
add
aaa
jmp
ret
mov
mov
sub
int
dec
in
pop
or
imul
in
repz
pop
or
push
dec
xor
call
adc
xor
rcll
inc
add
mov
orb
sarb
pusha
sub
faddl
mov
sbb
xchg
sbb
int3
mov
shl
dec
lcall
xchg
mov
nop
rorl
mov
mov
rol
cmp
lahf
fwait
call
adc
mov
inc
jnp
popf
aaa
fildl
push
mov
outsl
popf
in
add
dec
and
push
and
dec
inc
ja
mov
in
test
cmpsb
insb
insl
mov
cmp
es
jle
popa
out
insb
jb
hlt
inc
inc
adc
fs
jbe
insb
xchg
dec
cmpsb
push
sahf
push
pop
stos
faddl
jbe
cs
xchg
xor
push
cmpsb
ficoms
add
fldenv
ljmp
xchg
mov
adc
loop
insb
jno
sbb
jl
fists
cmpsl
andb
inc
xchg
movsb
cmpsb
adc
dec
pop
lods
into
add
mov
push
jns
xor
dec
push
out
or
mov
dec
cmp
jns
add
cs
cmp
out
out
xchg
xlat
dec
icebp
outsl
xor
shll
dec
rol
arpl
ds
adc
xor
enter
inc
clc
lret
lcall
or
popl
iret
jge
push
lretw
test
jo
cltd
cmpsl
push
xchg
or
inc
add
and
add
insb
mov
arpl
imul
loop
andl
pusha
jb
add
je
repnz
clc
outsl
lds
inc
outsb
negb
pusha
jne
or
cld
adc
sub
push
mov
inc
dec
sbb
mov
repz
aad
rcrl
mov
mov
dec
shrl
sub
cwtl
cmp
sub
outsb
mov
dec
and
in
or
mov
scas
es
xor
push
or
cmpsl
popa
add
pop
js
and
jmp
loope
inc
cmp
cmpl
jb
adc
loope
dec
outsl
out
push
idivl
pop
xor
and
cmp
xchg
sbb
pusha
xchg
push
mov
dec
sbb
adc
dec
mov
outsb
inc
sub
mov
aas
cmp
imul
add
fisubrl
cltd
cli
incl
cmc
xchg
fsubl
cli
testb
inc
sbb
and
adc
fdivrs
in
les
dec
or
sahf
mov
xchg
pop
jmp
std
pop
aam
and
add
or
icebp
jo
mov
dec
bound
hlt
push
movsl
int3
lret
xchg
mov
iret
bound
mov
xchg
or
jns,pt
clc
ret
cmp
jbe
fstps
ljmp
pop
mov
inc
fs
add
repnz
jno
mov
inc
scas
jnp
mov
mov
xchg
test
push
mov
push
jb
aaa
fildl
outsl
push
test
sarl
xchg
jae
xchg
movsl
sub
mov
mov
in
jmp
fadds
fcmovnb
fimuls
sub
cmpsl
das
sbbl
into
push
test
push
addr16
pop
notl
xor
fs
dec
adc
or
in
xor
rorb
adc
mov
mov
inc
mov
push
mov
aad
jne
pop
push
lock
test
lock
cmp
stos
or
lea
addb
mov
inc
mov
pop
out
adc
mov
fcoml
xor
les
imul
and
fstp
sub
mov
ret
pusha
inc
icebp
outsb
xor
shl
ret
mov
mov
lahf
ss
jl
scas
push
lcall
ja
pop
or
push
mov
jge
mov
cmpsl
jo
cwtl
mov
lcall
leave
gs
gs
pop
adc
out
adc
push
jb
jmp
push
ds
pop
enter
xor
call
mov
xchg
inc
mov
daa
jns
push
data16
push
cld
sub
push
pop
and
stc
rcrb
jge
adc
outsl
push
popf
repnz
into
aaa
dec
xlat
push
repz
icebp
fwait
movsb
les
mov
aad
pop
push
mov
jle
push
xchg
lcall
xor
mov
push
or
ds
add
pusha
xlat
xchg
pop
adc
pop
idivb
mov
notb
insb
fdivrl
or
mov
jp
test
clc
dec
lret
ret
pop
stc
xchg
stc
jg
or
bnd
enter
xor
cli
js
jae
sub
aad
loope
fwait
jg
mov
cmp
and
incb
in
leave
out
mov
mov
pop
jne
jl
jnp
js
fidivs
ret
sub
loopne
aas
enter
out
adc
js
insb
sub
notb
xchg
ret
ljmp
xchg
mov
or
push
clc
mov
or
shl
arpl
dec
push
leave
and
add
xchg
xor
pop
inc
xor
test
shlb
out
negb
push
out
jns
in
mov
dec
lahf
into
sbb
call
xchg
das
sub
pop
or
ljmp
mov
out
mov
fmulp
and
mov
lret
aaa
and
imul
sbb
lahf
les
loop
jbe
push
cmpsl
dec
shrb
push
imul
xchg
pop
adc
add
in
xor
out
cmp
rcr
jb
inc
sbb
lcall
sti
loope
adc
lock
pop
ret
shr
shlb
rcl
pop
dec
in
bound
popf
or
je
rcrb
cmp
imul
mov
and
rolb
imul
sub
cmp
cltd
sub
mov
cmp
mov
ret
sysret
push
scas
and
scas
mov
and
int
push
xchg
popa
xchg
and
push
push
mov
adc
push
xchg
arpl
mov
jae
and
jae
push
lock
adc
addr16
jg
sub
cld
mov
sub
pop
mov
lret
inc
pusha
setg
movsb
icebp
and
jb
xchg
adc
jae
push
dec
fidivl
cli
jle
fidivl
movsl
cmp
cmpsb
push
sti
xor
pop
sbb
movl
inc
mov
icebp
jne
sub
fimull
mov
out
xchg
mov
mov
pop
ja
idivl
push
mov
ja
xchg
in
xchg
insb
or
xchg
call
jb
out
bound
push
sub
sbb
outsb
icebp
scas
lcall
jmp
mov
mov
mov
mov
lods
or
xchg
sahf
lret
sar
xchg
pop
push
pop
cmp
dec
mov
mov
ror
sub
fistpl
enter
call
pusha
lods
stos
out
push
addr16
jmp
fisttpll
push
fistl
pop
mov
scas
pop
gs
push
sbb
sbb
cmc
aad
mov
adc
add
mov
movsb
div
jge
xorb
and
out
arpl
pusha
and
jecxz
loope
inc
or
sbb
fildl
lcall
mov
loopne
das
cmp
dec
push
scas
jl
test
stc
pop
loop
mov
fs
mov
ja
mov
fcomps
pop
decl
loop
pop
frstor
mov
es
cmp
lcall
dec
lds
pop
lret
in
xchg
inc
mov
add
and
ret
sub
cltd
jg
dec
jno
xchg
jbe
add
sbb
cltd
dec
js
or
cwtl
mov
mov
mov
ss
sahf
lea
ljmp
test
sbb
ljmp
sbb
jb
pop
leave
outsl
xor
loopne
mov
loopne
mov
stc
out
inc
shlb
movsl
dec
mov
test
in
iret
push
push
loop
scas
cld
wbinvd
push
sbb
movsb
lret
je
sti
xchg
es
sbb
inc
adc
lea
stos
imul
repnz
mov
mov
and
xchg
mov
push
cli
rcrb
sbb
mov
or
pop
lret
rcrl
int
jnp
sub
pop
inc
mov
adc
sub
int3
lret
inc
pop
inc
dec
sub
jg
push
pop
push
inc
ficoms
fldl
push
add
mov
bound
das
mov
inc
bound
jae
aam
out
stos
pop
pop
lea
and
and
js
add
in
dec
jge
imul
in
lcall
mov
ret
cld
adc
pop
push
imul
in
test
aas
or
loop
xchg
push
mov
stc
imul
iret
cmp
lea
mov
fisttps
xchg
pop
push
adc
push
pop
pop
push
xlat
aas
push
std
sub
mov
and
hlt
sbb
or
jmp
cli
mov
stos
outsb
setno
jp
out
int3
or
mov
nop
leave
inc
inc
pop
pusha
adc
les
add
inc
pushf
gs
adc
push
insb
je
jb
hlt
repz
into
lea
mov
daa
shl
xor
or
mov
dec
push
mov
std
xor
iret
xchg
leave
pop
mov
add
xchg
jo
cli
and
sbb
inc
mov
pusha
jo
xchg
and
mov
mov
adcl
xchg
adc
cld
and
sbb
jnp
jle
insl
call
push
loopne
cwtl
push
add
ljmp
test
push
icebp
das
push
stos
xor
or
clc
inc
mov
leave
jge
cmp
fnstcw
out
pop
mov
jbe
decl
inc
jns
sarl
add
push
into
or
lods
mov
mov
cmp
cmc
shr
add
xchg
adc
or
jo
mov
adc
pop
imul
std
mov
or
dec
daa
popf
movntps
negl
lds
inc
imul
inc
xor
and
add
adc
push
mov
add
into
mov
lea
inc
mov
sub
dec
test
sbb
pop
mov
cmp
and
stos
jae
push
shlb
mov
lret
push
push
sbb
push
fisubrs
fistps
iret
sahf
adc
hlt
xor
and
add
or
mov
popa
repnz
adc
mov
sbb
dec
jne
jne
pushl
jecxz
inc
cmp
sbb
sub
adc
loope
ret
cmc
xor
leave
pop
dec
filds
movl
jge
inc
or
mov
pminsw
imul
xchg
or
aam
jecxz
add
jb
rorl
psraw
push
repnz
repz
movsl
jns
dec
ljmp
xor
adc
stc
xchg
loope
lea
dec
loope
sarb
jo
and
or
test
ficoml
popa
jecxz
jns
pusha
adc
lods
ss
pop
insb
mov
and
dec
call
jae
mov
out
into
mov
push
out
icebp
out
in
dec
loopne
mov
fidivs
adc
jle
ljmp
iret
dec
stc
lods
xor
xchg
ret
fs
mov
mov
sub
ljmp
xchg
stos
aam
std
sbb
pop
ficomps
fcoml
out
push
stos
adc
js
fldenv
ss
flds
jmp
lcall
jge
cmp
shrl
push
imul
divl
and
add
pop
mov
inc
xor
adc
mov
mov
xor
shll
jp
jmp
in
mov
xchg
cmc
xchg
cmp
mov
pop
imul
loopne
rclb
or
or
stc
sbb
test
ja
sbb
xchg
and
sbb
cmp
push
dec
add
pop
jns
mov
mov
xor
push
jb
shlb
cmp
adc
addb
addr16
lods
inc
mov
xchg
sbb
jge
aas
daa
push
xlat
mov
xchg
jno
sbb
xchg
shll
lods
sub
mov
sub
cwtl
std
cli
cli
add
jp
sbb
loop
sbb
push
fucomip
pop
fdivs
sbb
fcompl
push
sub
stos
out
jl
je
xor
das
mov
movsl
sti
sbb
dec
fimuls
jecxz
jl
addr16
mov
in
shrl
ret
js
sub
aam
add
cmp
add
xchg
jae
divl
and
inc
loope
sysenter
jge
shrb
insl
ret
xchg
outsb
jno
repnz
ja
mov
rclb
cmp
mov
pushf
adc
lds
inc
dec
inc
iret
hlt
shll
inc
out
das
cmpsb
dec
jae
std
outsb
sbbb
jmp
in
out
adc
mov
scas
or
fmull
mov
xchg
push
jne
sbb
int
mov
nop
js
xchg
lcall
pop
push
int
jae
fcomip
or
push
cmpsl
inc
pop
int
add
dec
push
test
xor
dec
jb
dec
call
pop
arpl
push
push
insl
idiv
mov
test
push
jl
dec
jle
push
in
jle
pushf
mov
push
push
and
in
rorb
cmc
sbb
ficoml
dec
cmp
std
jle
pop
enter
adc
lock
sub
mov
mov
xchg
arpl
jl
fsubl
out
mov
iret
mov
adc
pushf
push
scas
xchg
jnp
xor
cmp
loop
push
push
mov
push
sti
push
dec
fprem
insb
mov
pop
jo
mov
cld
sub
rcll
sbb
mov
mov
insb
dec
push
pop
push
int
gs
stos
or
xchg
adc
jmp
jbe
loope
xlat
or
in
mov
inc
fsub
out
fiaddl
inc
cmpl
jae
ffree
ret
sahf
jl
jp
js
pop
dec
loop
ror
shl
jg
push
test
gs
je
jne
lods
sub
xor
fcoml
xchg
test
dec
xchg
aam
mov
adc
cmc
movsl
or
fwait
mov
xchg
xor
or
mov
in
mov
adc
sbb
xor
outsl
jecxz
jl
sbb
dec
mov
mov
dec
gs
pushf
subl
pop
lock
fiaddl
mov
and
jb
cmp
add
jmp
adc
shr
mov
jo
int3
fs
push
xchg
lds
sub
fs
ljmp
fwait
and
mov
jbe
xor
lods
jmp
mov
ljmp
push
in
pop
xor
test
pop
insb
subl
clc
adc
jmp
shll
xchg
xor
push
out
loope
rclb
jmp
inc
mov
loope
add
push
sbb
shrl
inc
jno
in
aas
nop
ja
test
arpl
lods
jae
xor
adc
jno
push
inc
cli
fwait
jp
lock
sub
adc
jbe
fiaddl
lret
lods
lret
lods
daa
xchg
daa
sub
in
mov
mov
stos
push
jmp
mov
dec
xor
cmpsb
xchg
push
push
dec
notb
ret
shll
test
cmp
pop
dec
push
adc
std
and
inc
mov
add
movsl
mov
lret
mov
popf
rcll
rol
inc
mov
sub
lock
add
jecxz
scas
popa
outsb
stc
mov
or
sub
out
add
push
mov
xchg
dec
in
enter
js
mov
cmp
and
outsb
fs
mov
cmovae
mov
neg
xor
or
test
cmp
pop
pop
jne
addr16
xor
lea
mov
dec
sbbb
sbb
popf
cmc
add
mov
xchg
into
and
cmp
int3
je
shlb
mov
push
test
loop
loopne
jbe
mov
in
push
inc
std
xor
jnp
jge
dec
jp
lahf
and
and
pop
stos
dec
aam
sub
jecxz
xorps
cmp
gs
jle
cmc
cmp
add
add
cmp
out
addb
sbb
sub
loop
imul
popa
adc
mov
dec
push
pop
lret
sub
jg
mov
test
inc
jne
adc
mov
xchg
mov
mul
sahf
jnp
sub
lds
cmpsb
loopne
test
dec
inc
adc
sbb
dec
xor
sub
std
cli
pop
dec
cmp
negb
gs
scas
rcrl
outsb
mov
mov
testb
jnp
ror
push
adcb
nop
add
jle
add
mov
mov
pop
xchg
jno,pt
lret
inc
dec
lcall
scas
orl
fiadds
mov
cmp
sbb
add
repnz
or
dec
ss
insl
push
stc
jle
into
lret
sub
dec
adc
add
cwtl
clc
pop
pop
jge
add
push
inc
stc
cs
outsb
cmp
fst
loop
leave
lea
xlat
add
loopne
adc
jb
add
add
aam
xor
mov
jecxz
jp
aas
pop
push
xor
mov
bound
lods
fisubrs
gs
fcmovbe
or
mov
pop
scas
js
push
or
jmp
inc
lahf
ljmp
mov
shl
mov
xchg
mov
mov
std
mov
lock
lods
arpl
aam
imul
push
sub
inc
pop
sub
pushf
cmc
and
mov
fistpl
and
cmp
imul
imul
lock
aas
adc
call
sub
push
arpl
mov
jle
jp
xchg
sub
mov
and
adc
scas
outsl
push
out
test
call
add
lahf
gs
inc
test
repz
xor
push
push
push
push
jae
xchg
and
mov
stos
jno
scas
pop
and
cli
jne
sahf
es
fistps
mov
xchg
inc
testb
dec
inc
inc
mov
repz
jle
fcmovb
ljmp
roll
lahf
pop
push
lds
jg
idivw
filds
scas
inc
cmc
cmpsl
std
std
ljmp
ret
and
sbb
aam
dec
add
inc
mov
ja
jae
std
xchg
adc
in
xor
push
or
pop
rorb
jbe
enter
inc
or
inc
repz
jge
adc
or
jae
push
aas
aad
stos
mov
mov
stos
add
jecxz
scas
push
mov
imul
push
aam
pop
lahf
dec
pop
imull
mov
mov
ss
shll
hlt
enter
data16
pop
cmp
or
jge
popf
xchg
in
xchg
pop
xchg
mov
mov
cmpl
mov
sub
es
loopne
rcr
loopne
mov
push
sti
sub
ljmp
das
sti
pop
aad
push
xor
imul
push
fisttpl
dec
adc
clc
call
gs
xor
pop
adc
enter
sbb
ds
mov
repnz
push
push
sub
aad
sbb
call
push
cmp
xor
mov
lock
pop
pusha
pop
jp
mov
push
sub
js
push
cmc
cmp
jne
pusha
inc
pushf
ret
jnp
repz
cmp
add
push
mov
ss
ret
pop
daa
repz
fcoms
int
lds
test
iret
cmp
mov
cmp
jae
mov
xor
movq
pusha
outsl
push
orb
jle
sbb
jmp
loopne
dec
movsb
cld
jno
out
and
out
xchg
xlat
fs
dec
xchg
xchg
out
add
cmp
adc
test
xor
push
adc
cmp
ds
inc
icebp
push
xchg
jno
jae
xor
dec
shlb
insl
xchg
insb
lock
popa
jp
xchg
jns
xchg
arpl
scas
sti
xchg
cmc
notb
aad
push
je
push
pop
cmp
jle
je
and
data16
push
push
fnstsw
shl
pop
adc
gs
dec
icebp
cmpsl
mov
pop
xchg
mov
push
sbb
pop
int
mov
out
cwtl
icebp
mov
or
jns
insb
mov
pop
sbb
mov
lods
add
mov
xchg
dec
xor
je
jl
bound
xor
divb
push
xor
mov
pop
jmp
test
loopne
pop
clc
jmp
jle
jno
js
mov
outsl
cli
int
ficomps
xor
pusha
fcompl
ret
sub
and
test
add
or
mov
jae
add
mov
pop
adc
scas
dec
pop
xchg
adc
gs
popf
stos
and
popf
daa
pop
add
xor
ret
xchg
push
dec
mov
cmp
jno
sub
sub
das
mov
and
shlb
push
fwait
or
xor
icebp
sbb
inc
clc
mov
pop
jl
lods
call
cmp
xchg
xor
mov
push
arpl
jp
sbb
or
push
call
fistpll
or
push
add
addr16
mov
adcb
lods
mov
pop
repnz
fsts
nop
sbb
fs
adc
divb
inc
pop
je
pop
js
push
test
mov
enter
adc
xchg
loope
jp
push
mov
pushf
jp
jb
mov
inc
imul
mov
push
mov
leave
aad
idivl
pop
faddl
adc
test
push
or
xor
mov
outsb
xlat
and
xor
mov
inc
pop
push
jbe
aas
fbstp
test
mov
outsl
sti
sahf
inc
push
push
sub
lock
cmp
adc
lock
inc
push
nop
xchg
xchg
push
adc
call
add
lret
push
xor
in
loope
xchg
les
das
fwait
mov
xor
enter
movsb
addr16
jne
xchg
fistl
lock
dec
test
test
adc
mov
js
adc
sbb
add
cmp
std
push
aad
jp
add
add
sysexit
inc
cmc
scas
push
add
jl
jne
cld
pop
ja
fwait
inc
sahf
stc
xchg
and
imul
aaa
lret
mov
inc
leave
jns
inc
lahf
xchg
sarl
loopne
jge
mov
ret
mov
cld
call
fisubrl
inc
repnz
aas
loope
cmp
lret
and
dec
mov
fsubl
push
dec
lds
sti
fwait
aad
test
rclb
test
push
inc
jno
inc
stc
jnp
push
clc
ret
aaa
or
push
icebp
push
in
cli
das
ljmp
xchg
out
inc
mov
leave
fstpl
xchg
mov
in
mov
test
pop
cltd
add
popf
cld
push
js
cmpsl
and
popf
fldl
sub
dec
test
loopne
ja
jge
mov
cmp
inc
xchg
lret
jge
jb
in
pushf
sub
mov
movsb
testb
scas
scas
scas
inc
sbb
or
adc
or
push
mov
mov
inc
adc
bound
rol
fcomi
out
mov
lret
cld
mov
lock
xchg
loopne
negb
fdivrs
dec
loop
pop
cpuid
and
pusha
and
xor
push
sar
ja
loopne
roll
out
push
das
data16
test
jnp
sbb
adc
xlat
xchg
enter
push
shll
push
jae
lea
add
movsl
inc
xor
push
out
mov
lret
pop
leave
pop
rol
stc
push
in
jmp
iret
lcall
mov
sbb
add
jb
adc
jo
push
xchg
pop
adc
sub
andl
pop
std
nop
in
xor
push
sub
mov
fidivrl
xchg
stc
scas
inc
pusha
movsl
jnp
mov
mov
ja
mov
xchg
sub
xchg
jg
cmp
dec
mov
inc
les
mov
sti
int
jne
mov
scas
out
test
fnstcw
pushf
int3
outsl
mulb
cs
sbb
xor
inc
mov
in
pop
push
jp
adc
mov
mov
fdivrl
leave
roll
imul
lods
inc
jle
mov
jns
into
fdivs
mov
lods
xor
mov
add
shll
cli
sbb
sub
xchg
sbb
andl
std
xchg
test
sti
add
pop
in
and
rorl
mov
lahf
xchg
fcoml
adc
inc
dec
jbe
into
data16
leave
dec
pop
movsb
cmp
mov
mov
and
mov
in
popf
xor
xchg
or
adc
mov
lock
cltd
mull
insb
fldpi
push
fistpl
dec
out
stos
cmc
add
mov
fs
pop
movsb
or
add
adc
into
icebp
pusha
add
pop
sub
push
out
leave
cmp
lock
cmpsl
sub
push
dec
xor
push
fiaddl
inc
add
sahf
cmpsb
arpl
out
pop
mov
es
stc
inc
push
push
or
aas
sbb
jle
mov
xor
rcll
dec
push
out
jle
and
mov
insl
in
push
outsb
and
adc
jnp
sbb
mov
cmpsl
ss
cmpsb
cmp
xor
jmp
add
call
repnz
jl
int3
xchg
sub
jl
mov
pop
sti
adc
sbb
push
push
outsl
inc
das
jne
ret
ss
dec
data16
pop
mov
fiaddl
dec
jle
fists
sahf
lods
fnstcw
cmpsl
add
icebp
pusha
mov
or
adc
push
shlb
cli
lock
pushf
leave
sbb
push
outsl
loope
lcall
scas
fs
xor
cmpsl
jle
xor
sub
sub
xor
out
adc
popa
lret
in
inc
cmc
add
xchg
sub
xchg
cwtl
mov
xchg
test
into
and
movsl
popf
jmp
mov
pop
and
inc
in
or
lcall
xchg
cs
cs
xor
jne
or
mov
fs
mov
outsl
add
lock
lahf
adc
cmp
lret
mov
ret
add
mov
jle
dec
xchg
gs
adc
lcall
jns
fmuls
or
fs
stos
push
in
fldenv
add
cli
jecxz
mov
adc
mov
sti
pop
and
ds
jnp
jne
or
in
push
shll
shl
jp
sbb
pusha
fdivrl
test
adc
mov
cltd
mov
push
and
cwtl
jno
mov
or
add
jo
ret
inc
movsb
xor
sub
sub
js
xchg
ret
mov
adc
das
pop
out
or
bound
mov
xchg
ljmpw
push
and
inc
aam
xor
clc
mov
jns
shrb
and
test
mov
pop
jmp
imull
xor
and
mov
jge
adc
jnp
insl
mov
rcrl
xchg
mov
sti
das
les
test
xchg
stos
sbb
loope
pop
enter
and
into
add
cmp
push
sbb
xor
shrl
fdivr
ja
movsl
jnp
or
mov
test
shrb
gs
repz
xchg
cwtl
test
sub
jg
shll
shl
mov
idivb
adc
dec
inc
lods
lret
lds
sbb
fnsetpm(287
std
push
mov
pop
cmp
aas
dec
cmp
enter
shll
cld
mov
fmulp
iret
sub
jo
sub
sub
sub
pushf
lretw
mov
cmpsl
xchg
cmpsb
pop
pop
push
push
mov
filds
pop
shll
sbb
fbstp
rorl
dec
fdivs
das
mov
ficoml
je
shl
cwtl
inc
push
inc
jl
jb
in
and
andl
call
push
adc
shr
mov
int
sbb
dec
test
int
clc
loop
cmpsl
push
or
jne
ss
adc
dec
in
fs
mov
xchg
lret
cltd
push
loop
xor
lahf
popa
es
xchg
xchg
out
push
insl
popa
jg
jp
cmpsl
jmp
or
stos
daa
add
lea
cmp
ret
jecxz
cli
xchg
ret
cmp
xor
sbb
ljmp
out
xchg
rorl
push
mov
mov
or
cmp
hlt
xor
lods
jg
mov
xchg
sbb
mov
bound
outsb
or
mov
cltd
xor
movsl
push
mov
jnp
mov
mov
in
cli
xchg
test
cmp
sub
sub
mov
push
inc
out
insl
sub
sarl
push
lods
sub
xor
inc
mov
add
mov
dec
pop
or
das
rclb
adc
mov
icebp
xor
or
ljmp
aam
call
out
std
sub
insb
push
icebp
mov
fcoml
cmp
sub
subb
scas
lret
adc
xor
cltd
push
outsl
int
mov
cmpsb
jmp
or
add
shll
cmp
dec
mov
stos
mov
lret
and
test
mov
adc
xor
mov
sbbb
inc
std
negl
pusha
je
lds
sub
adc
mov
sub
mov
push
decl
repz
add
mov
mov
add
cwtl
push
cltd
es
jo
roll
mov
call
addb
cmp
sbb
mov
aad
rclb
popa
stos
ja
lret
aam
mov
cmp
mov
fwait
pop
or
mov
dec
push
or
mov
sub
cmp
xchg
in
pop
inc
mov
mov
lcall
and
cltd
xchg
out
aam
ss
mov
and
mov
aaa
sahf
mov
mov
fcompl
pop
push
test
lods
push
mov
mov
jp
inc
in
das
mov
test
push
in
dec
sbb
add
fistps
cmovo
pop
std
outsb
icebp
cmp
xor
xchg
jmp
xor
rcr
jb
jecxz
cmp
cmp
std
subl
lods
xor
sbb
shlb
mov
test
stos
mov
loope
fiaddl
leave
test
aam
cld
lods
mov
push
xor
std
fmull
repnz
sub
add
pop
int3
mov
mov
rclb
fmuls
insb
stos
dec
push
mov
pop
sub
adcb
cmp
cltd
dec
stc
mov
mull
sub
shlb
idiv
or
aas
jne
push
aad
test
popa
jne
stos
sub
push
mov
das
push
mov
inc
insb
xor
int3
ds
out
mov
shrb
stc
xchg
inc
inc
inc
adc
arpl
stos
call
add
shl
arpl
pop
cmpsl
stos
inc
add
das
xor
jmp
add
inc
ss
inc
mov
cmovno
pusha
inc
xor
loope
mov
and
inc
enter
push
rorl
sub
xchg
dec
loop
nop
sub
xchg
shlb
lahf
out
sbb
cli
iret
sub
sub
xchg
jno
mov
pop
aad
test
add
cmpsb
mov
cwtl
push
je
jb
push
inc
out
cmp
out
xchg
inc
je
int3
push
stc
and
sahf
pop
mov
mov
repz
outsb
rclb
pop
xor
into
xor
fwait
stos
pop
enter
mov
ljmp
lods
dec
jg
sub
mov
mov
sub
mov
cmp
test
cmp
or
ja
frstor
adc
out
mov
ror
push
ret
out
push
adc
dec
js
cmpb
push
hlt
mov
add
mov
pop
jle
inc
mov
scas
push
mov
mov
add
push
dec
pop
mov
or
adc
lods
inc
aam
ficoml
jp
idiv
xchg
add
je
jecxz
pop
sbb
inc
and
mov
movsl
pop
call
xorl
cmp
pop
subl
add
stos
jns
pop
lahf
mov
mov
mov
popf
mov
scas
inc
shll
xchg
or
into
int
push
xchg
jg
popf
dec
je
cmpsb
dec
inc
es
scas
sahf
xchg
mov
cmp
sbb
rolb
pop
loop
add
pop
aaa
mov
lret
xchg
sub
dec
jl
xchg
mov
sti
sub
pop
jno
lret
rclb
add
repz
jle
or
pop
mov
push
clc
shrb
outsl
jmp
lods
mov
shrb
pushf
xchg
mov
adc
xor
push
fistpll
push
std
pop
les
lods
inc
add
jb
popf
scas
imul
scas
ja
xor
fucomi
ret
and
mov
add
in
xchg
fildll
mov
mov
ja
adc
sar
in
mov
fcmovnu
daa
sti
insl
pop
jle
dec
inc
push
and
and
gs
adc
les
ja
mov
lods
xor
popa
outsb
pop
je
xorl
push
push
mov
pop
lret
xchg
xchg
and
inc
xchg
inc
scas
jbe
test
mov
push
push
sub
aad
shlb
sub
mov
jecxz
je
pop
mov
or
sbb
sbb
in
sbbb
ds
cld
dec
mov
dec
sbb
push
ja
adc
into
cmp
andb
dec
inc
in
sub
orl
add
pop
or
mov
nop
add
cmp
adc
push
fwait
mov
pop
fmuls
mov
pop
push
out
ret
cs
ret
loop
xchg
inc
jne
and
add
dec
pop
test
in
cwtl
sbb
data16
addr16
mov
subl
add
shlb
sahf
in
and
jae
pop
xor
scas
add
mov
fstps
aad
lea
lret
fistpl
add
cmovg
or
in
lahf
push
inc
fnstenv
stc
orb
loop
test
jmp
loopne
cltd
xor
jns
sar
addr16
jecxz
mov
in
sbb
xorb
loop
clc
pop
and
pop
js,pn
and
pop
push
in
enter
and
xchg
jnp
inc
or
test
jns
icebp
stc
pusha
xorb
pushl
mov
mov
dec
xor
jns
cltd
mov
loop
call
xchg
es
jns
mov
subl
in
out
or
push
xchg
fcomp
stos
imul
repz
ljmp
push
cmp
pop
cmc
add
rcrb
jmp
bnd
sub
test
les
popf
repnz
imul
loop
lods
xor
push
fcompl
sbb
sub
adc
mov
sbb
or
inc
sub
xor
mov
pusha
pop
sbb
cmp
icebp
scas
ror
adcb
fwait
mov
mov
leave
leave
shll
sbb
pop
xor
mov
mov
jle
hlt
push
pop
cld
adc
scas
cmp
push
add
aad
data16
mov
xor
pop
ljmp
aaa
push
jne
cmc
or
sti
cmpsb
adc
loop
ss
sbb
repnz
inc
inc
test
cli
scas
bound
adc
cmp
jg
out
push
and
and
add
jb
fnstenv
and
and
dec
xchg
lahf
cmp
inc
fsubs
jp
clc
mov
add
movsl
jp
test
ret
xchg
in
scas
xor
and
mov
dec
out
int3
or
into
sarl
mov
fs
add
jnp
sbb
scas
xchg
popa
lret
aam
outsl
dec
fdivr
orb
roll
ret
cmc
aaa
lret
push
or
mov
rorb
mov
adc
out
adc
pop
cmp
add
frstor
scas
aas
movsl
adc
push
push
and
hlt
xor
xchg
pop
loopne
outsb
mov
mov
adc
sbb
sbb
in
dec
pop
add
adc
xchg
push
jmp
in
inc
dec
dec
jo
adc
jle
mov
pop
push
jmp
push
fucom
inc
sbb
or
cmpsb
scas
sbb
mov
loop
cmp
push
mov
scas
add
rorl
dec
push
loope
add
test
addb
dec
jge
mov
repnz
xchg
fdivrs
mov
lret
xchg
cmp
aam
jl
pop
inc
inc
fcmovne
jl
jae
roll
mov
push
neg
and
aad
outsb
imul
lea
dec
movsb
adc
push
test
dec
push
clc
insl
inc
dec
dec
loopw
adcl
imul
addr16
xchg
fwait
dec
sbb
add
pop
ffree
mov
cmc
xchg
aad
out
enter
jb
clc
jns
aam
push
or
pushf
mov
xchg
stc
scas
ret
xor
cmp
cli
sub
jp
mov
sbb
cmpb
popa
sbb
cmpl
mov
les
pop
xchg
add
xor
mull
jbe
or
adc
std
mov
adcb
popf
jbe
loop
inc
int
out
sbb
mov
shll
mov
scas
mov
out
jmp
pop
aad
mov
jae
gs
pop
sub
imul
xor
push
in
or
push
jns
mov
in
pop
sbb
ret
movsb
dec
sub
inc
cmp
js
or
sub
sbb
insl
push
pop
ss
test
ja
aam
stc
int
in
inc
stos
jge
fs
les
sub
stos
out
mov
dec
or
fwait
inc
dec
fimuls
jae
cltd
pop
and
loop
xchg
add
mov
sub
pusha
pop
xorl
divb
ja
and
lret
ret
insb
inc
xor
jp
ret
out
jge
push
jb
dec
mov
sub
ja
lret
out
insb
inc
gs
push
leave
sbb
loop
dec
push
aaa
mov
adc
cmp
test
mov
iret
fsubs
jns
sub
out
jl
push
xchg
push
mulb
fldl
push
add
mov
adc
mov
mov
dec
addr16
push
movsl
sti
decl
inc
or
mov
inc
cwtl
das
sbb
adc
push
mov
adc
iret
shlb
mov
mov
push
dec
or
sub
inc
lret
cmp
inc
sbb
rcll
or
xor
fsub
mov
stc
shr
in
push
cmp
jbe
jge
imul
cmp
mov
pop
enter
outsb
cmp
scas
mov
into
add
push
sbb
dec
lods
xchg
test
scas
pop
cld
adc
jb
push
lret
lahf
push
lahf
inc
xchg
in
sub
push
xor
aam
js
popf
sarb
pop
jo
xor
xchg
jae
inc
pop
sar
hlt
daa
adcb
mov
mov
cld
push
cmpb
imul
adc
icebp
sub
push
xchg
xor
xor
ret
mov
jle
insl
sbb
incl
ficompl
or
xor
or
adc
scas
es
out
dec
push
loopne
push
dec
pop
clc
dec
pop
xor
inc
dec
fmull
scas
rcrl
enter
std
sbb
out
xor
or
jp
mov
out
rol
test
mov
push
out
repnz
daa
jmp
mov
push
or
mov
orl
adc
sar
cwtl
cmpsl
push
push
sbb
icebp
shrb
or
sub
cmp
add
mov
stc
jno
insb
pop
lcall
test
dec
inc
into
xor
iret
roll
xchg
out
xchg
lcall
popa
mov
push
inc
dec
les
add
jge
or
shl
lods
add
out
or
inc
imul
jl
mov
mov
jnp
call
fchs
outsb
iret
mov
cmpsl
aam
sahf
mov
icebp
sub
fs
leave
sbb
pop
adc
xchg
cs
pop
and
stc
pop
push
dec
repz
out
mov
push
add
in
xor
adc
push
xor
mov
mov
mov
scas
push
jbe
cld
xchg
arpl
jmp
push
add
inc
push
or
sbb
dec
sbb
pop
aaa
rolb
mov
xor
pop
sub
mov
sub
mov
shrl
repz
add
mov
sbb
test
mov
ja
mov
and
lret
mov
add
add
ja
or
mov
sbb
negl
cs
push
popf
lds
xchg
xchg
loop
sbb
pop
popa
jne
or
sbb
ret
jle
push
js
pop
jmp
leave
xor
mov
out
ror
aad
ss
and
ret
loopne
add
and
mov
xchg
std
stos
cmp
movsl
xchg
loop
shl
cmp
or
testb
repnz
ret
inc
xchg
sahf
mov
pushf
sub
loop
in
into
lods
bound
aas
jp
sub
ja
in
mov
xor
adc
mov
pushf
fcmovnbe
mov
jg
xor
adc
xlat
mov
cmp
jmp
or
mov
jle
mov
ja
mov
inc
inc
js
rcrl
inc
add
stc
std
test
or
leave
icebp
outsl
sub
pop
sbb
test
bound
test
mov
inc
pop
sbb
jl
mov
das
xchg
sbb
jae
xchg
mov
jp
test
or
ret
hlt
punpcklwd
gs
jbe
mov
dec
sbbl
lods
ds
imul
add
cmp
or
xchg
inc
fildll
lds
mov
sbb
rolb
rcl
pusha
out
mov
mov
test
negl
and
rol
pop
adc
xor
or
xchg
adc
sti
mov
pop
xchg
mov
bound
inc
push
cmp
scas
adc
pop
icebp
into
mov
mov
jb
fidivrl
inc
mov
mov
repz
dec
clc
test
popf
push
je
jne
in
bound
jb
cwtl
cmpsb
add
movsb
cmpsb
popf
xor
sbb
inc
pop
mov
jle
mov
out
ret
out
and
clc
fistpll
mov
add
sub
hlt
xchg
sti
mov
icebp
lcall
jae
mov
fwait
lock
cmp
pushf
jmp
ja
fwait
jno
call
or
cmp
xchg
push
push
mov
cmp
cwtl
sarb
mov
xor
xorb
rorb
das
fcoms
adc
cmc
int
mov
dec
pushl
nop
jl
insl
sub
mov
mov
sbb
iret
push
arpl
dec
lea
and
xor
jp
xchg
in
ja
pop
mov
ds
call
sbb
loop
dec
mov
jnp
bound
scas
xchg
je
cli
call
nop
add
xor
cmpsb
cmp
inc
pop
or
xor
clc
xchg
and
dec
adc
paddq
pop
lea
xchg
sub
scas
out
or
add
fbld
jecxz
iret
xlat
std
mov
outsb
mov
cs
jnp
and
dec
push
shrb
inc
cld
pop
mov
pop
and
inc
or
jecxz
pop
aas
xchg
mov
cmc
dec
sbb
dec
das
sub
cld
aas
mov
cmc
fcomps
sub
cmp
sar
lcall
lahf
and
mov
mov
push
push
adc
out
fcmovnb
pop
fidivl
or
jo
xor
dec
xor
jne
cld
clc
push
std
aam
ret
pop
in
dec
mov
jb
and
bnd
or
test
pop
loop
rcr
jns
xchg
sub
xchg
addr16
cli
enter
dec
outsb
stos
and
pop
add
stos
mov
ret
xchg
hlt
jmp
or
push
pop
stos
pop
hlt
add
clc
out
in
das
ret
pop
in
call
pop
sub
ret
sahf
xor
cli
jl
push
sbb
mov
cmpsl
fmul
sarl
loopne
xchg
or
mov
repnz
subl
sbb
imul
jbe
xchg
jg
push
mov
popf
fdivs
mov
arpl
out
negl
sbb
push
in
aaa
mov
xchg
sub
lret
and
arpl
scas
jne
ljmp
sbb
cmp
insl
xchg
xchg
sub
lret
in
sbb
in
mov
aam
rorl
inc
jne
arpl
sbb
adc
das
pop
insb
or
aaa
add
jno
cmp
push
fistpll
shll
hlt
nop
push
xorl
jp
mov
lahf
in
pop
dec
cmp
xor
and
xlat
fldenv
or
inc
xchg
inc
test
cmc
cmp
xlat
jge
mov
dec
dec
jp
addr16
jae
push
push
sbb
mov
loope
call
shlb
cmc
xor
mov
sti
add
push
add
in
scas
xor
les
pop
pop
or
loope
lock
popf
in
sahf
shrl
fcoml
pop
icebp
push
int3
push
call
std
pop
dec
cmp
jmp
xor
cmp
call
add
call
ja
imul
adc
loop
cmp
mov
mov
pop
aam
fidivs
cmp
add
dec
in
iret
jne
test
sub
ret
add
fcomp
cli
pop
push
test
push
dec
xor
sbb
jno
movsb
sbb
stc
bound
xchg
sub
ljmp
jp
cmp
mov
push
mov
loop
cmp
mov
rcll
jo
in
and
adc
mov
mov
es
icebp
mov
pop
pop
nop
adc
movsl
test
inc
mov
inc
mov
inc
add
or
pop
mov
xchg
mov
or
dec
cmp
jnp
popf
pop
out
xchg
or
jnp
xchg
ret
adc
aaa
ss
mov
adc
cmp
push
fiaddl
in
mov
rcrl
enter
xor
mov
data16
inc
lret
fsubrs
test
pop
add
sub
jge
rcr
pop
jecxz
inc
lods
inc
sahf
shlb
mov
cli
pop
fimuls
lods
cmp
xchg
xchg
stos
daa
ss
mov
shll
dec
mov
cld
mov
enter
add
jle
push
lahf
in
aad
inc
aam
cmpsb
sub
fcoml
adc
mov
icebp
rorb
pop
into
add
push
sub
cs
aaa
int3
sbb
out
jl
adc
pop
sub
in
xor
cmpb
dec
xor
xor
jb
fldenv
das
mov
add
dec
mov
xchg
xor
fildll
lock
adc
testl
notl
adc
fnstenv
inc
arpl
mov
cmp
mov
pop
mov
sub
out
sub
sbb
out
mov
lcall
or
dec
mov
clc
pop
cltd
pop
xor
pop
push
mov
and
sub
lea
xor
cmp
inc
leave
fsts
iret
movb
add
jnp
mov
and
test
mov
into
dec
push
adc
adcb
imul
imul
ss
xchg
je
fcompl
and
mul
jecxz
xor
add
sub
jge
mov
popf
fs
arpl
in
xor
cld
cmp
xor
sbb
ror
aaa
dec
jb
push
in
add
cwtl
data16
cmpsb
xchg
xor
pop
cld
push
mov
fnstsw
xchg
push
out
mov
jge
and
movsl
cmpsl
cwtl
cwtl
mov
into
pop
pushf
insl
xlat
jne
stc
inc
add
add
jae
sub
nop
jb
lods
icebp
jb
or
mov
push
enter
out
push
push
add
push
shlb
xor
or
sub
xor
dec
mov
hlt
lret
adc
js
adc
cmpl
cld
push
dec
fcoml
sahf
out
or
or
insl
inc
lods
inc
mov
inc
add
lods
mov
xor
out
out
cs
push
sbb
pop
dec
cmp
sti
or
out
hlt
ret
dec
ficoms
jnp
mov
lock
dec
mov
js
push
mov
das
jmp
mov
jp
int
sbb
dec
or
out
cmp
jge
cmp
inc
pushf
inc
mov
mov
test
adc
jo
daa
scas
repnz
and
cmc
sub
or
nop
icebp
adc
mov
orb
movsb
pop
in
movsb
and
xchg
rep
into
xor
shl
rcll
mov
inc
push
loope
leave
pop
mov
dec
mov
lret
and
or
lcall
push
loope
sub
je
jmp
mov
aas
mov
outsl
ja
xor
push
sub
jmp
jbe
shll
pop
std
xor
jno
roll
jle
or
mov
imull
stos
push
dec
mov
int
dec
sub
adc
scas
sbb
fcomps
imul
addr16
std
addr16
jge
cltd
mov
dec
fsubs
fidivrs
xchg
push
aam
sub
lret
mov
lret
je
inc
xor
xlat
add
jle
sahf
mov
or
pusha
cmp
jmp
pop
repnz
cwtl
mov
pop
xchg
jae
mov
jg
and
inc
adc
xchg
add
dec
ret
andl
pop
fs
dec
add
dec
xchg
push
sahf
lret
push
aad
daa
sbb
cltd
lds
loopne
call
sbb
fcomps
jg
add
jecxz
fcompl
cmp
cmp
mov
sub
test
or
mov
addr16
xor
or
or
ret
and
and
insb
call
pop
inc
and
pop
pop
imul
mov
and
mov
jae
movsb
pop
xor
xchg
xor
shrl
adcl
dec
dec
cmpsl
mov
call
stc
or
add
out
test
push
psubusb
and
fs
repz
insl
sbb
sub
and
insb
add
cmc
mov
ret
ret
scas
mov
fs
cwtl
pop
mov
hlt
inc
jae
negb
jp
mov
cmp
rorb
adc
pop
lcall
or
inc
xchg
jns
sbb
and
pop
sahf
dec
in
push
cwtl
or
mov
add
fcomps
mulb
pop
fmull
push
inc
les
or
lea
outsb
aad
push
addr16
push
or
or
mov
cmpsl
movsb
adc
cltd
jbe
and
shll
inc
push
cltd
lea
xchg
inc
pop
jmp
jo
xor
pop
or
mov
daa
roll
pusha
aad
fildl
push
cmp
xchg
mov
xchg
or
lret
xor
lods
or
mov
mov
lahf
adc
dec
imul
sub
inc
out
xor
popf
pusha
popf
ljmp
or
cmpsb
mov
testl
add
test
int
cmp
sub
popf
scas
adc
mov
push
adc
push
dec
int
cmp
mov
data16
cmp
pop
mov
cmp
and
cmp
ljmp
sarl
shll
push
xor
pop
cmp
insb
cmpb
mov
cmp
jge
loopne
mov
jno
ret
fisttpl
sbb
pop
test
sarb
mov
pusha
mov
fisubl
clc
js
push
das
adc
dec
outsb
xchg
sub
mov
cmp
cmpsl
sbb
push
test
mov
cmp
xor
imul
popa
sbb
mov
jne
in
mov
dec
mov
and
inc
pop
imul
inc
fstpt
popa
or
aas
ret
xor
adc
lret
out
scas
xchg
pop
and
mov
outsl
xor
pop
fsubrl
test
or
sbb
decl
pop
icebp
mov
xchg
loopne
fnstcw
push
nop
lock
pusha
ror
gs
mov
xor
out
clc
xchg
cld
loop
cld
jp
ret
sub
gs
ret
sbb
sbb
insl
std
popa
stc
mov
jbe
cltd
daa
xor
mov
pushf
sbb
out
add
mov
xorl
nop
xchg
mov
pop
insl
std
jecxz
cmpsl
scas
push
pusha
push
std
out
mov
cmp
or
inc
stc
xor
leave
testl
and
loop
adc
xlat
dec
sub
cmp
fiadds
adc
sub
cs
sahf
mov
cltd
or
fdivp
inc
bound
and
add
pusha
mov
clc
shll
bnd
and
mov
inc
push
cmpsb
inc
adc
orb
xor
push
out
xor
rorb
dec
popa
push
es
dec
fstpt
jns
and
hlt
and
xchg
pop
mov
icebp
sti
test
xorl
repz
sbb
scas
sbb
adc
addr16
inc
sub
cmp
cmpsl
sub
mov
xchg
jmp
or
outsl
mov
push
sub
add
hlt
test
shrl
bnd
das
hlt
lcall
sub
in
fisubl
jl
or
inc
mov
loop
xor
aam
push
arpl
add
fwait
pop
mov
xlat
pop
jns
test
dec
idivl
add
jmp
dec
les
mov
xchg
or
enter
pop
shrb
mov
outsl
lods
pop
ljmp
xor
dec
orl
cmpsl
add
test
daa
mov
add
push
lea
aaa
sbb
xchg
xor
xchg
ljmp
addr16
dec
cmp
pop
fsqrt
loopne
or
ss
psrlw
dec
jo
mov
push
mov
repz
adc
jecxz
mov
inc
lea
xchg
rcll
pushf
pop
sarb
add
nop
arpl
push
add
fistpl
inc
lock
inc
xor
ffree
jno
jg
fs
cmp
jns
pop
lret
shr
sub
sbb
pop
cltd
xchg
test
fiaddl
push
outsb
enter
sub
aaa
push
jmp
xrelease
loope
push
fists
mov
pmulhuw
imul
jb
xor
sbb
mov
push
sub
scas
ret
lea
fwait
mov
jmp
dec
inc
mov
jno
fimull
popf
sub
xor
push
cld
ret
mov
pop
ret
sub
or
sub
sbb
xchg
mov
cmp
addr16
imul
inc
cmp
xorl
mov
fs
repz
jmp
mov
bound
push
push
dec
mov
sbb
mov
pop
ret
fcoms
arpl
or
movsb
push
pusha
int3
test
popf
or
sub
ja
pop
mov
in
push
mov
das
cmp
inc
movsb
and
out
lods
xchg
jbe
adc
adc
sti
mov
mov
iret
cmpsl
or
imul
sbb
enter
pop
jmp
sbb
shll
test
push
ljmp
and
inc
cmc
push
test
xchg
or
dec
xlat
int
push
shr
sti
sub
mov
call
xor
pop
adc
mov
pop
xchg
push
inc
call
test
mov
jne
or
rclb
test
in
jge
movsl
and
psubsw
xor
rcrl
lods
hlt
sub
xor
cmp
insb
adc
mov
aaa
scas
outsb
jl
jnp
adc
sbb
add
lds
out
adc
dec
push
or
xor
fimull
leave
pop
xor
adc
popl
scas
jle
cltd
adc
jl
addr16
dec
sbb
push
test
and
cs
orl
ficompl
mov
stos
push
sti
sub
adc
sbb
inc
dec
xor
mov
add
lock
js
sub
aaa
cmpsl
and
push
xchg
jge
das
popf
push
mov
xchg
in
add
roll
popf
jo
fadd
test
dec
mov
out
imul
pop
enter
pushf
mov
push
andl
mov
or
repnz
pop
add
push
ret
imul
mov
inc
mov
xor
out
rolb
mov
jecxz
jge
push
out
add
jbe
ret
mov
mov
cmpsl
aaa
stos
add
ja
lds
mov
aam
scas
insl
lods
insl
stos
push
scas
cmpsb
icebp
sbb
adc
lcall
stos
mov
jnp
jb
lds
insb
sbb
cwtl
mov
scas
sahf
pusha
pushf
pop
in
xchg
add
incl
jae
mov
dec
sar
jbe
iret
cmp
int
shrb
in
out
dec
addb
cmc
lods
daa
test
mov
lret
sbb
in
ret
cmp
xchg
lret
mov
pop
idiv
pop
cmp
aam
pushl
lahf
aas
push
jge
js
mov
jp
lods
outsl
shll
das
and
push
jecxz
mov
out
cmp
push
jno
xlat
pusha
movsb
scas
sbb
mov
popa
enter
test
aaa
pushf
jg
add
cwtl
bound
or
in
stos
mov
stos
and
inc
jecxz
dec
fcoml
adc
loopne
or
inc
jmp
add
scas
adc
inc
mov
xor
divl
arpl
ss
jge
dec
cwtl
mov
xor
lret
cmp
xchg
int
dec
hlt
jne
popa
jp
lcall
sub
test
dec
ret
mov
les
push
dec
adc
and
aaa
rclb
sub
and
cwtl
pushf
xchg
andl
insl
xor
push
in
push
test
imul
mov
jae
push
imul
xrelease
inc
out
sub
outsl
adc
dec
bound
cmp
pop
or
pop
push
or
insb
pop
xchg
scas
test
jl
adc
out
mov
inc
call
mov
pop
xor
push
stos
insl
push
nop
cltd
clc
xor
scas
inc
push
rcrl
aad
sub
cmpsl
cmp
es
andb
jg
shr
dec
and
pop
lret
imul
cmp
int
cltd
xchg
bnd
call
notl
in
gs
add
pop
mov
lods
sbbl
dec
cmp
lcall
xchg
cmp
inc
popa
sbb
sub
push
mov
subl
xor
cmpsb
add
adc
push
fnsave
mov
xor
pop
ret
mov
cwtl
sub
xchg
ret
stc
nop
cltd
in
arpl
aas
and
aad
pop
mov
jae
bound
pop
mov
mov
dec
fcomps
mov
or
aaa
mov
jns
inc
jmp
or
lahf
mov
dec
sarl
ja
lahf
push
fnsave
inc
pop
mul
cli
pop
fcmove
jns
inc
or
jb
ret
xor
or
pop
ja
sbb
pop
sub
scas
adc
xchg
sbb
lahf
jge
mov
inc
mov
push
pop
leave
repz
fstps
add
mov
stos
mov
in
jno
jne
inc
hlt
shl
mov
iret
mov
xchg
push
bound
clc
jmp
into
mov
fwait
shrb
iret
pop
sub
in
nop
push
enter
jae
arpl
js
mov
sbb
dec
adcb
testl
add
and
call
lret
jno
xchg
fldcw
ja
or
push
mov
jae
lret
insl
cmc
add
int3
add
in
or
inc
fwait
add
mov
divl
sarl
nop
xor
push
xchg
jae
pop
sbb
mov
jo
adc
or
mov
int3
pop
mov
sub
rclb
stc
push
jge
mov
mov
mull
xchg
dec
pop
jle
in
fiaddl
inc
or
xor
insl
repz
push
push
and
adc
inc
data16
mov
and
loop
sub
cmp
mov
dec
jge
mov
roll
jmp
sahf
mov
mov
xor
pop
clc
push
shrb
pop
pop
inc
out
ret
cmc
imul
mov
mov
ljmp
xchg
jo
notb
jo
in
lds
idivb
sub
ret
faddl
cmp
jnp
cltd
mov
ficompl
push
push
in
pop
arpl
fwait
lods
aad
int3
dec
jp
lret
or
ja
adc
pop
fwait
mov
dec
sub
sub
or
pushf
jno
adc
jl
aam
mov
inc
jo
mov
loop
out
sub
mov
out
cmp
cmc
stc
pushf
mov
or
test
dec
jo
cmp
jb
jmp
pop
pop
sbbl
nop
push
sbb
sbb
ret
repz
jb
adc
imull
into
repnz
sbb
mov
mov
dec
dec
insl
or
sbb
enter
in
adcl
shrl
xor
push
repz
ds
loop
shll
sbb
mov
xor
push
repz
movsl
fs
push
xchg
jns
fdivr
sbb
pop
cmc
das
cld
lods
adc
out
jnp
xor
sub
lock
cmp
sbb
ja
pop
stos
add
imul
mov
fcomip
jecxz
cmp
pusha
adc
xchg
mov
add
movsl
or
or
push
mov
dec
popf
es
scas
mov
mov
jae
mov
lcall
dec
mov
not
inc
stos
mov
and
mov
mov
pop
jns
in
orl
jmp
imul
jo
sub
data16
sub
aas
xchg
pop
hlt
or
js
int3
in
out
out
mov
repz
std
daa
add
mov
loope
shrb
sub
inc
or
int3
mov
mov
cld
ja
xchg
mov
mov
jnp
rorl
repz
pop
clc
adc
and
lea
movsl
and
inc
pop
mov
outsb
pop
ret
aaa
sub
mov
dec
pop
inc
mov
or
mov
shll
push
mov
push
repnz
les
xor
imulb
jae
mov
adcb
mov
fmuls
sbb
aam
xchg
push
adc
xor
cmpsl
inc
xor
in
xor
int3
scas
dec
xchg
dec
ret
push
les
adc
add
jmp
cmp
lods
add
insl
andl
dec
mov
lock
or
dec
inc
ror
cmc
addr16
lret
jo
insl
push
jge
sbb
adc
es
fisubs
les
push
ror
sarl
movsb
and
cmp
mov
out
mov
mov
and
jbe
push
sbb
mov
lcall
stc
ss
mov
push
nop
xor
sub
dec
adc
out
movsb
pop
int3
sti
mov
mov
bound
je
sti
push
std
mov
std
clc
mov
or
rol
popf
in
scas
or
and
pop
ss
out
jns
xor
mov
mov
clc
out
dec
jbe
mov
pop
cs
mov
rolb
std
xor
push
shl
jmp
adc
mov
push
scas
mov
push
std
and
sbb
cmpsl
xchg
sbb
and
aad
dec
movsb
pop
imul
jae
fcomps
add
push
sub
les
popa
inc
hlt
pop
outsl
stos
jecxz
sbb
pop
push
mov
loope
jge
push
cwtl
test
int
scas
push
lret
xor
jge
int3
out
int
or
push
sub
pop
mov
sub
inc
inc
mov
ljmp
jae
dec
mov
into
fstpt
jecxz
pop
sbb
fimull
fnsave
imul
jg
dec
lock
sti
pop
mov
scas
aas
subl
fildll
push
js
push
or
push
sub
mov
shl
sti
xor
scas
aas
or
or
push
adcl
out
ret
lea
mov
clc
bound
sahf
adc
sub
mov
adc
ret
rcr
bound
fdivr
xor
mov
pop
and
les
xchg
or
push
insl
push
pusha
ljmp
push
adcb
and
jns
inc
mov
mov
jl
mov
dec
mov
dec
ds
sub
mov
bound
test
xchg
jnp
pop
cmpsb
push
push
jecxz
testl
rcrb
jle
cmp
ds
iret
movsl
roll
cmp
out
aam
mov
fucomp
sub
outsb
xchg
in
jg
xchg
lods
push
adc
dec
mov
and
loopne
xorl
mov
adc
pop
sbb
and
nop
into
or
adc
imul
and
in
cltd
sbb
inc
test
in
inc
push
fsubrs
jno
or
push
lds
pop
mov
jp
jmp
pop
jmp
mov
in
addr16
movsl
add
sarl
lcall
mov
or
stos
xchg
addb
int
movsb
cs
test
inc
das
sub
inc
or
sub
pop
jecxz
push
test
add
inc
jge
pop
and
inc
or
mov
inc
jbe
vblendvpd
mov
movsb
pop
or
and
pop
testb
stc
imul
call
in
jb
xor
icebp
pop
inc
out
cmp
mov
cwtl
and
cmpsl
rcll
jg
sbb
iret
imul
int
addl
cld
fldl
lock
fucomi
dec
leave
lcall
mov
xor
dec
stos
adc
js
dec
rcll
or
lds
les
out
insb
ficoms
jmp
add
mov
push
mov
mov
sbb
fisttps
cmp
fnstenv
xlat
mov
cli
fwait
mov
lods
adc
and
lods
fcompl
lods
movsb
push
frstor
aaa
xlat
xlat
dec
int3
mov
dec
inc
adc
cwtl
into
ds
cmpl
fninit
lea
fiaddl
fistps
movb
hlt
sti
push
notl
repnz
lret
mov
cmc
mov
cmp
out
jl
dec
in
sub
add
mov
mov
in
dec
mov
jnp
pop
les
into
stc
cmp
in
push
lds
pop
mov
leave
pop
sub
mov
js
rcl
das
subb
in
sub
jae
scas
add
movl
push
lret
scas
stc
loop
pop
sarl
push
cmp
push
lcall
lahf
xchg
jmp
loop
pop
jge
fistl
dec
stos
loope
cld
mov
cwtl
pop
mov
pop
or
sbb
dec
std
outsb
mov
fsubrl
pushf
jns
mov
jle
nop
stos
jl
movsl
mov
and
ds
and
mov
jl
fsubs
dec
cmp
movb
repnz
fwait
and
int3
sti
xor
dec
es
icebp
in
jo
sbb
dec
xor
mov
push
mov
pushf
jnp
push
in
and
pop
xor
pop
in
shrb
hlt
adc
call
stos
insl
xchg
sub
jl
pop
test
jnp
cmp
test
repz
stos
cmpl
test
stos
pop
jbe
adc
cs
mov
repnz
es
lcall
push
out
jne
shr
dec
sti
test
test
dec
popf
jl
pop
push
xchg
xchg
movsl
addb
or
pop
in
cld
add
pop
mov
subb
xchg
loopne
aad
imul
bound
jo
jmp
rclb
jo
into
in
mull
scas
int3
and
popf
mov
fwait
add
imul
inc
pop
aam
pop
mov
out
rcr
inc
mov
pusha
xchg
les
push
cmp
imul
std
lock
push
xor
popa
rol
push
jg
imul
push
push
les
stc
xor
imul
inc
xchg
push
inc
mov
push
pusha
dec
sahf
cltd
mov
mov
mov
enter
mov
addr16
sbb
cli
fs
xchg
ret
push
daa
mov
movsl
sbb
xor
scas
adc
popf
fxch
xor
push
mov
cmp
add
jne
push
pusha
shlb
js
mov
xchg
pop
mov
insb
pop
and
addr16
sbb
stos
ret
out
xor
inc
popf
aaa
jg
jne
push
testl
push
jecxz
movsb
fcoml
jmp
cmp
inc
in
mov
sahf
cltd
xchg
mov
test
and
stos
shrl
ds
inc
dec
add
xor
inc
je
clc
dec
or
dec
dec
push
sub
add
stos
add
test
mov
adc
or
ja
adc
xchg
into
fcmovbe
sbb
pop
inc
inc
mov
aaa
out
add
outsl
mov
xor
jg
outsb
pop
xchg
insl
roll
push
mov
lcall
sarb
mov
jae
fistpl
pop
dec
movsl
xchg
sub
cli
xchg
pop
mov
push
int
movsb
pop
rcll
jne
sub
xor
add
push
mulb
xchg
mov
mov
xchg
aas
in
push
lods
jg
addr16
nop
enter
push
gs
stos
sub
cmp
cmpsl
pop
jno
mov
mov
daa
mov
sub
out
cwtl
dec
in
push
out
jp
xlat
adc
jb
xchg
or
rcrb
mov
adc
mov
xchg
clc
test
push
mov
push
and
mov
cmc
dec
stc
into
xchg
arpl
data16
out
sub
cmp
sub
mov
mov
xchg
arpl
jb
aad
cmp
pause
ficompl
out
mov
cmp
pop
cmpl
mov
mov
shll
push
mov
and
mov
addr16
push
pop
ret
push
gs
mov
add
dec
das
mov
or
push
and
cld
push
pop
out
cmpsb
lea
sub
xchg
jge
icebp
sub
mov
or
fucomi
lret
mov
jnp
jle
or
push
cmpxchg
fidivl
jecxz
stc
dec
push
and
add
add
nop
jecxz
sub
push
pop
lds
mov
mov
decl
and
mov
mov
rorb
movsl
sub
xor
push
int3
ds
fistl
nop
jo
push
sbb
or
cmp
popa
dec
cli
xor
sub
or
iret
imul
filds
dec
push
fistpl
mov
dec
cltd
dec
or
xchg
pop
test
addr16
and
insl
or
leave
rolb
fs
jmp
fwait
pop
push
scas
push
mov
push
and
add
into
adc
test
hlt
sbb
jb
and
and
xchg
pop
fidivs
out
imul
jne
sahf
and
jae
and
or
sahf
ret
lret
xor
movb
aad
xor
test
mov
xor
cltd
mov
lds
js
loopne
jo
fidivs
sub
xchg
js
cmp
lods
lahf
push
jge
shlw
mov
sbbb
and
pushf
xlat
scas
cltd
jl
jno
mov
sbb
xor
shrb
mov
sub
lods
aas
inc
or
adc
bnd
add
ja
sahf
incb
xor
addr16
fildl
pop
mov
stos
call
mov
idiv
mov
jmp
xchg
ficomps
mov
testl
lcall
imul
lcall
push
pop
push
addr16
cmp
cmpps
cmp
sbb
inc
xchg
jno
or
ret
jl
cmp
clc
ljmp
movsb
sbb
ficompl
incl
inc
and
push
xor
cmp
mov
jmp
out
add
or
inc
fcoms
enter
mov
mov
aaa
and
or
test
sub
roll
add
xchg
lods
das
sbb
mov
ja
dec
push
mov
push
inc
fs
jp
popa
ljmp
aad
fcoms
mov
scas
imul
test
fs
ss
aad
pop
adc
loope
les
mov
les
fwait
pop
lahf
cwtl
lea
mov
in
cmp
jp
mov
cmp
fimuls
lret
mov
adc
mov
or
aaa
jne
cmp
es
push
adc
lret
repnz
std
pop
das
sub
mov
sahf
fsubrp
scas
xchg
adc
das
or
sub
aas
push
cmp
mov
jle
dec
jp
adc
call
jle
outsb
jns
cmpsl
in
dec
mov
addps
pop
pop
sub
mov
jp
loope
fsubl
cs
adc
es
jne
pop
popa
test
rolb
das
sbb
repnz
std
aam
jl
stos
iret
mov
push
repnz
dec
pop
mov
test
mov
out
outsl
push
lods
int
sbb
insb
add
aas
scas
lcall
cmp
arpl
push
movsl
js
sbb
cld
aaa
mov
push
mov
mov
xor
movsl
inc
dec
sbbb
fadd
out
dec
xor
dec
mov
sti
repnz
push
sub
or
ds
lods
mov
pop
cmp
sarl
mov
je
lds
or
adc
out
das
icebp
iret
inc
into
mov
pop
push
out
sbb
mov
sbb
lds
mov
xchg
add
and
sarl
add
pushf
and
sbb
or
clc
sbb
divl
testl
ljmp
cmp
sub
repnz
mov
or
add
movsb
out
xor
push
faddl
leave
push
xchg
pop
es
fcomip
jecxz
fists
or
and
in
iret
dec
out
sbb
lods
jp
jbe
xchg
mov
xchg
dec
inc
pop
lods
loopne
adc
add
mov
popf
or
subl
cmpsl
inc
cmp
aas
dec
sarl
push
mov
ds
int
lds
jb
add
xor
and
fcoml
pop
loopne
in
imul
mov
mov
in
aaa
jecxz
mov
lods
lods
dec
cli
adc
sbb
mov
lods
xorb
lea
pop
insl
sahf
jo
or
jne
repnz
mov
rcr
jae
push
ss
icebp
or
arpl
inc
push
jmp
pop
cwtl
push
mov
lret
fwait
movsl
xlat
lret
sbb
cli
push
jne
and
sub
jmp
es
jnp
repnz
lcall
jb
int3
or
jg
pop
adc
int3
cmc
js
xchg
jle
sub
lock
and
mov
inc
mov
mov
repnz
xchg
shrl
mov
xchg
lock
test
add
pop
sbb
add
movb
stc
adc
roll
inc
data16
xchg
psubw
imull
leave
sbb
jecxz
outsb
test
adc
xor
xlat
inc
mov
or
aas
inc
jae
add
cs
sbb
or
das
mov
fwait
sbb
out
ret
mov
inc
nop
mov
add
test
inc
andb
mov
sbb
xchg
outsl
mov
or
or
ss
push
dec
dec
dec
fstps
jle
cmp
push
dec
dec
lea
mov
push
lcall
adc
xor
xor
jae
pop
jp
cmpsb
mov
pop
mov
mov
add
fidivrs
sbb
xchg
icebp
pop
push
jo
mov
sub
je
fnstenv
aad
adc
xor
inc
out
aaa
pop
leave
roll
jnp
data16
filds
js
mulb
sbb
imul
ja
fwait
push
repnz
sbb
sti
xor
mov
xlat
dec
add
fnstcw
xorl
xorb
fiadds
jb
mov
pop
and
call
xchg
scas
pop
push
imul
push
sbb
mov
addl
lock
sbb
negl
sahf
sbb
push
stos
int3
insb
lcall
les
push
jae
cmp
loope
or
andb
mov
out
stos
sbb
loop
mov
fimuls
add
pop
jg
cmp
push
loopne
mov
out
stos
cmp
lea
mov
inc
cmp
inc
int
and
ret
xchg
cmp
mov
fwait
mov
adc
pusha
lock
add
push
jecxz
test
inc
sbb
mov
nop
aaa
pushf
dec
lock
icebp
sahf
lret
pop
push
movb
inc
mov
inc
xor
out
pop
sahf
fneni(8087
push
es
sbb
cmp
cmp
es
je
movsb
idivb
ss
or
and
sub
imull
pop
xchg
mov
push
lcall
xchg
cli
push
daa
stos
xlat
jbe
add
push
or
pusha
push
in
sub
jbe
xchg
bound
mov
jle
pop
add
jbe
cmp
or
push
ja
cmpsl
or
or
aad
mov
sub
cmp
xchg
mov
insl
aas
add
adc
xorb
adc
xchg
xor
nop
aad
pop
mov
int3
outsl
inc
mov
adcb
add
mov
loope
mov
xchg
xor
dec
pop
xchg
into
xchg
jmp
pop
sub
pop
fwait
mov
sub
in
push
or
imul
sub
mov
mov
cmp
arpl
add
in
shlb
inc
in
push
popa
jb
loope
pop
xchg
rclb
stos
sub
test
pop
ss
cltd
or
es
lods
pop
xor
movsb
lds
lods
push
mov
cmp
fs
fdivs
mov
add
mov
gs
mov
xchg
arpl
mov
lret
sarl
test
aad
test
cltd
mov
pop
mov
add
xor
mov
cmpsb
int3
ds
sub
pushf
push
sbb
mov
scas
mov
dec
and
dec
jp
sub
subb
cltd
mov
push
pop
loopne
push
cwtl
mov
push
add
pop
movsb
dec
push
call
pop
jne
jo
push
xor
push
aaa
enter
fwait
out
cvtpi2ps
pop
int
std
cli
sbb
insl
mov
push
in
sarl
aaa
sbb
dec
mov
push
fidivrs
pop
repnz
sub
xchg
jmp
sub
add
mov
mov
ficoms
gs
xor
or
dec
or
xchg
inc
push
lods
sub
cltd
dec
sub
leave
outsl
adcb
nop
sub
adc
inc
xchg
repz
or
jno
xchg
aad
idivl
jmp
lea
imul
inc
xchg
xchg
sub
cmpsl
inc
fistpl
push
adc
xchg
add
pop
ja
push
sarl
mov
mov
dec
cmpsl
cmp
inc
cmp
mov
dec
or
mov
mov
mov
rcrb
pop
dec
mov
lods
outsl
repz
mov
push
add
int
dec
in
inc
sub
mov
mov
xchg
jg
rorb
xor
jecxz
and
lcall
push
inc
dec
pop
lret
ds
in
incb
ficoms
push
test
cs
pushf
sub
mov
mov
and
and
adc
stc
leave
jno
pushf
in
stos
lods
xchg
adc
sbb
inc
call
mov
rcrb
sbb
pop
adc
mov
and
mov
movsl
jmp
xchg
sub
data16
xor
jecxz
andb
adc
mov
cmp
cmpsb
outsl
xchg
inc
jmp
dec
pop
aas
loop
in
insb
add
xor
jne
cmpsb
into
mov
int3
push
out
fsub
add
pop
cbtw
sti
arpl
je
jo
pop
scas
stos
sbbb
int
out
pop
sbb
lods
imul
push
aad
jecxz
mov
adc
and
cwtl
add
add
add
clc
leave
inc
fsubl
inc
cmp
in
and
mov
sub
arpl
fisttps
repz
jb
jbe
sub
rcrb
andl
push
dec
cmpl
int3
shl
jae
pop
aad
dec
mov
jae
nop
lds
iret
loope
icebp
push
jecxz,pt
jle
dec
adc
xchg
daa
push
lcall
dec
fsubs
pop
xchg
mov
fcoml
in
pop
outsb
rcll
aaa
and
ds
or
cmp
inc
mov
outsb
addb
fisttpl
xor
iret
aas
xchg
cld
push
jg
mov
jbe
xor
stc
cmp
cwtl
push
out
and
and
popf
call
call
dec
push
xor
out
ds
orl
xor
pop
xchg
out
neg
scas
or
xor
in
adc
js
leave
or
lock
push
out
lods
pop
or
mov
sti
push
enter
mul
or
sbb
test
lds
jl
jp
cmpsl
jge
loopne
ss
xor
popf
lret
add
xchg
xor
int3
mov
out
mov
jp
mov
xchg
cli
mov
out
sbb
ret
in
inc
addr16
push
mov
cmc
ret
push
adc
data16
test
jecxz
cs
loope
pop
cmp
dec
aaa
int
and
aam
inc
jo
jmp
lcall
std
loope
and
jmp
mov
pushf
adc
push
shr
inc
out
jp
iret
repz
in
mov
inc
pop
or
repz
xchg
stos
imul
cmpsl
jns
sub
cmp
int
add
mov
adc
pop
push
sarb
inc
ljmp
pop
fildl
fstl
sbb
dec
push
xor
mov
mov
vcvtss2sd
mov
sub
pop
push
push
dec
push
jno
cmp
pop
call
push
push
mov
dec
aaa
jnp
jns
jae
mov
test
mov
insb
pop
add
mov
loop
mov
push
pushw
daa
sbb
inc
add
add
int3
insl
loopne
cmp
fucomi
pop
std
fldl
add
pop
shlb
jae
int
lret
mov
push
mov
es
mov
bound
out
xor
push
es
fadds
push
shrb
lret
lahf
sub
and
jne
jns
stos
xchg
lahf
shlb
ja
testl
lds
in
ja
insl
mov
cmp
jecxz
and
mov
pop
movsb
rcrl
ljmp
adc
jbe
test
popf
adcl
fdivl
jne
stc
iret
pop
sub
out
imul
in
dec
add
mov
mov
jecxz
jb
rclb
in
jmp
adc
std
pusha
push
daa
sub
add
sub
adc
jno
in
inc
pop
jmp
mov
fwait
repnz
outsl
dec
pop
enter
xor
in
call
xor
jmp
out
cmpsl
adc
lahf
and
xor
or
cmp
push
scas
hlt
ja
fisubrs
sbb
sub
xlat
push
jb
add
daa
jmp
sbb
xor
push
xchg
fs
xchg
mov
adc
fcoml
out
bound
popa
sub
insl
cwtl
imul
xchg
imul
mov
stos
and
leave
outsl
cmp
or
arpl
sub
popa
jp
movsb
or
sbbb
pop
rcll
add
nop
into
jb
nop
aam
push
cwtl
ret
xchg
mov
mov
xlat
push
lea
push
adc
out
push
mov
lahf
xchg
or
mov
jns
popa
test
cmc
jae
hlt
movsb
sarl
cmpsb
pop
or
pop
ja
add
btc
fs
xor
divl
xchg
scas
sub
mov
push
inc
les
xchg
rcr
pop
dec
xchg
gs
ss
mov
jne
leave
dec
jo
popf
repz
test
cmpsl
out
sarl
push
inc
lock
insl
call
ja
nop
decb
xor
lahf
out
into
add
sub
ljmp
push
cwtl
push
lcall
cmpsb
icebp
push
clc
and
test
adc
sub
fwait
push
jecxz
stos
cmp
mov
shlb
leave
cmp
imul
add
push
dec
ss
cli
movsb
jle
loop
rolb
cli
lahf
ljmp
add
xchg
cmp
mov
xchg
imul
pop
in
bswap
aam
andl
dec
into
in
popa
xor
adc
add
xor
nop
andl
cmp
mov
push
mov
idivb
jecxz
js
cmp
dec
imul
int
jae
sub
sub
fwait
and
pop
pop
repnz
rcrb
xor
inc
cmp
adc
mov
in
dec
test
mov
mov
mov
dec
mov
jno
mov
cmp
fldt
sbb
aam
in
mov
add
popf
pop
roll
aam
std
mov
roll
sbb
ds
dec
xor
jecxz
dec
dec
insl
int
lcall
push
gs
insb
lahf
repnz
sub
jmp
mov
sbb
mov
cmpl
mov
test
cwtl
imul
dec
test
inc
imul
xchg
sub
xchg
adc
add
out
inc
dec
cltd
push
sbb
fmul
int3
sbb
adc
mov
lock
es
jp
dec
insb
push
mov
fwait
sbb
out
aam
mov
mov
dec
movsb
mov
lret
ds
adc
inc
mov
sbb
jb
dec
iret
fs
and
add
push
fldt
enter
popa
dec
fstp
repz
cld
pop
sbb
outsb
scas
push
clc
mov
fsubrl
fmuls
cmpsl
mov
scas
adc
cmpsl
jecxz
or
add
negb
inc
xor
shrb
push
add
xchg
imul
and
cmp
dec
mov
test
cmp
xchg
cmp
push
rcrl
or
pushf
hlt
es
jecxz
push
les
xchg
xor
jb
mov
mov
dec
inc
nop
lret
mov
enter
insb
aaa
mov
scas
or
ja
loop
and
mov
jmp
clc
push
dec
or
sub
jb
and
aad
movsl
aam
lock
dec
add
stos
test
push
jbe
pop
inc
mov
sahf
push
scas
outsb
jae
sbb
dec
fcoml
mov
cmp
fimuls
sti
jge
ds
pop
cmp
scas
add
pop
repnz
test
aam
cmpsl
scas
cmpsl
cmp
mov
sarl
imul
outsl
pop
cwtl
ss
pop
mov
icebp
stc
lcall
lahf
dec
mov
pop
jecxz
ja
jno
fsubp
subl
imul
jno
xlat
xor
xchg
pop
dec
cwtl
push
add
jno
xor
dec
xor
lods
sbb
mov
inc
inc
rorl
jmp
pop
lds
push
aad
call
lret
push
je
js
inc
es
mov
das
xor
mov
sti
scas
inc
rcrl
or
jae
jecxz
test
mov
aas
or
out
ret
and
push
adc
sbbb
loope
ss
sub
add
repnz
lods
xchg
cmp
jnp
jecxz
mov
sbb
inc
popf
cmc
pop
cmc
dec
or
add
xor
ljmp
sub
les
sti
xchg
stos
xchg
insl
add
xchg
iret
mov
ds
in
std
or
mov
stc
lock
imul
loopne
repnz
pop
push
ret
add
sbb
mov
into
add
or
inc
fiaddl
roll
mov
imul
lret
insb
mov
out
repnz
cmp
mov
pop
mov
test
mov
outsl
jo
outsl
mov
jne
jbe
mov
push
out
lret
adc
inc
mov
add
xchg
jns
sub
iret
cltd
add
iret
gs
mov
std
lahf
pop
clc
pop
in
sub
stos
mov
pop
ret
mov
pop
ds
stc
sbb
rcpps
mov
movsb
shrl
push
cld
pusha
pop
jmp
pop
mov
scas
lahf
pop
mov
loopne
mov
sti
fsub
pop
fists
adc
push
push
icebp
cmc
sub
bound
jne
loop
sarb
xor
es
pop
mov
or
sbb
mov
fadd
imull
mov
es
std
cmp
scas
inc
sbb
pop
xchg
mov
cmpsl
inc
jo
inc
loop
cld
mov
jno
lods
pop
aas
dec
stc
out
sbb
cmp
jae
clc
mov
jne
sub
push
or
mov
mov
pop
dec
dec
cmpsl
inc
outsb
sbb
into
mov
mov
add
in
adc
pop
mov
mov
sub
popf
fnstcw
mov
in
mov
mov
test
and
lret
pop
sub
or
lret
xor
sti
xchg
mov
push
xor
inc
mov
mov
dec
out
dec
and
aaa
inc
scas
xor
cmp
pop
movsl
xor
pop
fidivs
mov
xor
ds
insb
popa
push
pushf
dec
fimuls
popl
inc
cmpsb
ror
subl
push
imul
cmc
mov
cmp
scas
stc
push
xchg
or
shll
or
cmp
and
nop
and
mov
sti
push
mov
or
add
faddp
pop
and
dec
jle
out
stos
ja
dec
adcl
push
iret
jl
lods
sub
xor
dec
fs
stc
and
inc
add
inc
cmp
stc
loopne
cmp
mov
and
and
and
cwtl
adc
or
test
sbb
cld
mov
fcoml
addr16
clc
xchg
cmp
fdivr
jg
leave
fstpl
addr16
pushf
outsb
ljmp
movsb
mov
clc
mov
adc
mov
pop
and
fucom
in
ja
scas
push
sbb
hlt
cmpsb
lcall
mov
rcll
jecxz
add
mov
int
je
int3
push
ficoms
xchg
fs
xchg
in
cmp
or
pop
out
fs
pop
pop
mov
jns
sbb
add
int
sbb
xchg
stos
ret
mov
stos
pop
push
test
sbb
daa
scas
pushf
inc
xlat
mov
je
xor
push
shrl
dec
xchg
scas
rcr
mov
sub
or
fs
sti
andb
adc
test
sahf
inc
add
repnz
pop
add
ret
adcb
pop
xor
pop
out
cmp
popf
subb
ret
mov
hlt
pmullw
inc
mov
adc
lret
int3
and
jb
mov
jmp
jmp
push
xor
movsb
les
test
int3
dec
or
push
paddusw
pop
ljmp
push
sbb
jle
js
or
xor
imul
pop
insb
jl
or
jmp
and
lret
mov
add
xchg
cmpsb
out
push
shll
dec
sub
xor
push
sub
rcrb
fists
shrl
dec
ljmp
nop
testl
mov
call
xor
push
jbe
add
jmp
pop
jns
inc
pop
pop
mov
outsl
jg
fidivrl
cmc
mov
and
insl
push
shrb
flds
or
xchg
rolb
je
mov
sub
iret
lods
cli
out
dec
cmc
push
cmp
xchg
jno
lea
sbb
fsts
sub
sub
mov
aam
mov
xchg
in
shll
in
stos
aas
pop
imul
flds
and
stos
std
adc
xchg
mov
push
rcr
jl
sbb
and
aaa
loop
sub
jle
jbe
pop
and
sbb
cs
rorb
fs
add
int3
jp
push
mov
push
sahf
out
cmp
aam
lea
inc
adc
sti
sbb
jp
mov
adc
xor
call
aaa
sub
out
outsl
mov
pop
jmp
cmp
addr16
scas
adc
out
cmpsb
stos
fidivrl
pushf
pop
shll
daa
int
inc
sahf
mov
dec
repnz
mov
dec
test
mov
pop
jle
lret
and
test
add
xor
insb
icebp
in
add
mov
xlat
aad
cmp
add
iret
pop
sbb
inc
mov
fisttps
mov
cmpsl
loope
sub
dec
sub
push
imul
mov
add
and
pop
in
sub
mov
and
inc
dec
sarb
or
cmp
sub
cmpb
xchg
lods
jl
cmp
or
pop
lods
pop
add
pop
pushf
or
add
inc
mov
dec
scas
mov
pop
sahf
aas
pop
mov
xor
fisubs
pop
push
mov
lcall
movsb
jbe
sub
jge
dec
sbb
ficomps
or
cmp
in
mov
xchg
lret
scas
inc
ljmp
jl
mov
push
enter
mov
cmp
mov
fnstenv
adc
pop
and
adc
pop
mov
mov
mov
pop
js
xchg
xchg
jmp
lock
stos
xchg
adc
and
inc
bound
add
sub
dec
shlb
rcr
inc
and
mov
or
leave
mov
cmp
fistl
movb
mov
nop
dec
sub
push
fwait
sbb
sub
pop
clc
negl
mov
mov
cs
push
aam
test
push
cmp
aam
and
adc
cmp
inc
cmpsl
repz
mov
fists
rorb
push
in
mov
sub
xchg
xchg
ret
jo
pop
pop
icebp
cwtl
mov
and
rcrl
movb
pop
imulb
xor
pop
dec
push
inc
cmp
dec
dec
pop
push
fadds
adc
insb
mov
push
lret
clc
stc
shll
ficompl
push
sti
nop
das
lods
xor
mov
mov
movsl
in
adcl
mov
add
dec
dec
jae
andb
sub
nop
and
mov
stos
popf
sub
pop
in
jno
jb
mov
pop
jb
push
aaa
jl
jb
les
lcall
sahf
add
jg
mov
jge
fisttps
cld
bound
inc
mov
mov
push
in
enter
ss
inc
or
mov
cli
pop
in
std
jl
fwait
add
sahf
ja
pop
movsb
add
ss
ret
push
rcrb
sbb
sarb
in
adc
hlt
cmp
into
cmp
mov
jle
je
loope
inc
mov
cmpsb
hlt
loop
repnz
mov
push
sub
push
dec
mov
cmp
int3
stc
cmp
int
push
fcompl
xor
mov
hlt
inc
push
inc
cmpsb
xor
jmp
cmp
dec
adc
js
aaa
jb
add
test
jge
xchg
push
jno
incl
rolb
fcompp
pop
cld
cmpsb
je
mov
sti
jns
jg
adc
sbb
push
imul
cmp
xchg
loopne
xor
aaa
fdivrl
mov
push
pop
rcrb
mov
jae
add
mov
sub
jbe
dec
imul
pop
arpl
xchg
cmp
and
mov
call
mov
lock
dec
mov
std
fs
pop
xchg
roll
push
scas
pop
pop
mov
cmp
addr16
and
cmp
int3
xor
inc
fwait
pop
test
sahf
mov
test
pop
data16
cmc
lahf
sbb
fs
inc
lods
scas
jns
mov
pop
in
push
outsl
mov
rcrl
aam
dec
mov
std
cmp
xorl
jno
xor
or
jne
sbb
sub
lret
pop
and
loopne
inc
sahf
jle
das
cltd
xchg
xor
movsl
sbb
xchg
xchg
jns
jp
fcomps
mov
test
jmp
hlt
jge
cmp
shll
adc
pop
lahf
les
loop
cli
xor
pop
push
adcl
pop
int
add
mov
repz
pop
iret
cli
jno
cld
imul
mov
int3
mov
data16
sbb
mov
into
push
adc
cmp
movl
cld
lahf
mov
out
idivl
stc
pop
cwtl
clc
or
mov
outsl
jae
call
cmp
inc
xchg
rcl
aas
add
iret
test
xor
std
add
jnp
movsb
dec
insb
xor
xchg
testl
lods
daa
imul
sub
outsl
sub
fdivl
fisubrl
add
push
fcomps
mov
call
mov
and
outsb
dec
sbb
mov
lcall
adc
mov
fwait
jb
adc
frstor
repnz
int3
inc
dec
pop
dec
jno
push
adc
inc
cmpsl
push
xchg
jp
push
xchg
mov
pop
dec
inc
dec
cmp
call
add
mov
insl
es
bound
push
fmuls
les
mov
stos
jae
and
mov
sbb
xorl
push
movsl
mov
push
mov
jge
pushf
mov
adc
fcom
xor
loope
scas
scas
jl
cmp
jl
lret
mov
inc
outsl
call
sbb
push
mov
movl
scas
fs
xchg
mov
mov
dec
out
loope
into
test
sbb
xor
ret
adc
xor
sub
or
imul
jne
mov
add
xchg
pop
push
mov
sub
scas
sbb
movb
insb
mov
add
cmp
outsb
inc
mov
stc
jg
fwait
adc
mov
sahf
inc
sbb
inc
test
int
mulb
cmp
test
outsb
sub
push
jns
cmp
dec
jo
push
push
inc
insb
mov
adc
push
jg
sbb
xchg
xchg
lret
jle
mov
xor
push
int
xchg
xlat
fidivl
lods
mov
dec
stc
xor
aaa
xchg
mov
add
push
lret
inc
roll
jge
jle
leave
in
sub
sbb
jl
leave
mov
xlat
xor
outsl
adc
adc
pop
cmp
ret
jae
dec
sub
push
stos
ret
icebp
mov
inc
push
xchg
or
fldl
jecxz
inc
pop
xor
dec
xchg
and
fcomps
out
push
pop
das
cmp
shll
cmpb
std
jge
add
out
test
pop
repz
sbb
in
mov
inc
dec
hlt
jg
adc
mov
scas
cmp
push
mov
adc
add
mov
adc
pop
out
les
hlt
popa
push
jp
addr16
in
jmp
sub
lcall
rol
ret
pop
pushf
add
aas
popf
xchg
pushf
cmp
xchg
ja
ja
cmpsb
adc
iret
scas
push
xor
or
arpl
xor
addr16
frstor
xchg
sbb
sbb
ds
or
or
gs
outsb
xlat
or
or
jl
xchg
and
xchg
mov
push
xchg
pusha
jo
jg
mov
dec
ret
fists
popf
jmp
fmul
mov
adcb
enter
cmp
inc
imul
mov
jmp
idivb
in
xorb
mov
pop
movsb
loop
ds
in
pop
push
in
daa
pop
sahf
and
int3
adc
xor
sbb
xchg
jns
sub
or
pop
aam
and
fcomps
jns
mov
add
lcall
clc
mov
ljmp
mov
in
sbb
xor
jno
movsl
push
push
adc
and
sbb
push
arpl
les
pop
fnsave
daa
test
and
adc
addl
inc
xchg
movb
add
fdivl
fnstcw
pushf
movsl
xor
je
ljmp
or
add
stc
jnp
sub
ljmp
adc
xor
lock
xchg
out
or
jo
jmp
insl
xchg
push
orl
cmc
and
push
nop
stc
xchg
test
stc
xchg
addb
cmp
loop
mov
push
fcoml
insl
imul
pop
push
mov
jnp
inc
mov
and
or
rorl
sub
dec
stos
push
mov
cltd
mov
out
add
dec
fldenv
xchg
les
cmp
divb
ss
adc
push
jmp
test
sbb
cmpl
in
popa
mov
xchg
in
sub
cmpsl
bound
not
pop
fbld
sbb
jo
test
clc
cwtl
andb
sub
or
pop
fldcw
out
mov
mov
mov
adcb
stos
mov
inc
rcr
jo
andl
fisttpll
mov
in
cmpsl
les
jge
lret
mov
xchg
inc
or
fcmovu
test
push
cmp
mov
pop
mov
or
movsb
pop
adc
jns
jp
sbbb
mulb
fdivs
pop
dec
xchg
ficomps
lds
sbb
out
xchg
repnz
xorps
or
aam
cmp
mov
les
test
jno
arpl
fstpt
fidivs
loop
adc
inc
pop
adc
sbb
adc
leave
xor
test
rcll
xor
repz
dec
sbb
sbb
mov
mov
shlb
mov
xchg
lods
lret
jbe
pop
pop
xchg
clc
mov
mov
mov
push
js
js
xlat
test
push
dec
jb
jge
push
test
sub
and
sbb
mov
mov
pop
add
mov
addb
add
movsb
and
sub
adc
push
sbb
fsubr
leave
xor
hlt
cmp
cmp
or
lds
ja
cmpsb
aas
jne
push
ss
push
fwait
xchg
mov
add
xlat
mov
mov
sti
xchg
add
outsb
inc
xor
mov
jne
jle
jns
and
add
nop
xor
pushf
pop
aas
mov
add
sbb
adc
or
cs
mov
adc
ja
les
fcoml
mov
lret
icebp
mov
or
jnp
and
test
jns
shrb
mov
inc
mov
mov
pusha
cmp
rclb
add
daa
outsl
add
loopne
xchg
dec
and
cmc
cmpsb
testb
or
mov
lret
sub
aaa
adc
adc
push
lods
daa
xor
and
add
jle
jo
pop
jb
sbb
adc
mov
mov
and
and
out
scas
cmpl
add
test
push
mov
sti
and
ret
sub
push
inc
xor
stos
jno
adc
test
imul
push
and
popf
cmp
fstpl
loope
movsl
out
mov
jb
outsb
in
sti
sahf
and
jnp
loop
cld
test
add
pop
inc
and
inc
inc
adc
mov
xor
inc
adc
lret
push
stos
jo
dec
jb
xor
pop
or
push
repz
xchg
jg
leave
test
adc
arpl
or
inc
lock
mov
ja
or
lods
clc
or
jp
repnz
movsl
lods
xor
push
sbb
mov
inc
inc
and
xchg
sbb
sahf
xor
lea
lods
ret
mov
aas
mov
jae
sub
push
xor
imul
push
xor
lds
push
enter
not
jmp
add
ret
sub
sahf
es
leave
xchg
dec
orb
xchg
xchg
mov
jo
fcmovnbe
bound
mov
scas
cmp
in
sbb
pop
xor
sbb
stc
sti
inc
rcrl
addr16
movl
push
xchg
push
sti
jnp
lret
icebp
sbb
lods
fisubl
mov
cs
push
icebp
mov
mov
jno
cmpsb
test
out
xchg
rcl
shlb
cmp
cli
pop
sub
insl
xorl
push
mov
dec
sub
dec
xor
xor
jmp
push
sti
and
or
lock
mov
ss
int
adc
xor
lock
push
loope
and
adc
xchg
mov
imul
clc
mov
xchg
aad
fdivl
jae
sub
nop
ss
inc
mov
pop
xchg
jne
push
test
ss
cld
and
cwtl
in
loopne
ret
and
std
in
mov
xchg
aas
and
pop
jne
orl
insb
mov
xlat
scas
cltd
pop
frstor
or
out
cwtl
mov
mov
lmsw
scas
movsl
shrl
mov
jecxz
sbb
mov
fs
fiaddl
cmp
orb
inc
repz
stc
sbb
dec
add
xchg
idivb
daa
mov
fucomip
jecxz
and
push
mov
cwtl
scas
adc
int3
mov
andb
call
pop
or
mov
jns
insb
icebp
xorb
xchg
or
lods
mov
mov
icebp
jle
push
and
clc
lods
sub
cmp
or
jns
aaa
hlt
sub
imul
out
adc
rcrl
or
mov
stos
dec
ret
inc
add
hlt
or
mov
insl
pop
pop
jo
imul
outsb
iret
adc
sbb
cmpsl
mov
mov
fisubl
or
int
outsb
xor
iret
jl
mov
mov
enter
jbe
pop
sub
mov
or
aas
es
jle
pop
pop
into
ret
sub
call
pop
xor
inc
ljmp
insl
inc
xchg
sub
mov
fwait
ret
enter
imul
mov
jno
xor
adc
cltd
seto
lods
xchg
lea
jl
dec
fcoms
push
ss
mov
movsl
clc
sbb
call
push
mov
pushf
ret
pushf
or
jne
adc
imul
stos
or
outsl
jg
mov
pushf
inc
cmp
xor
sub
ss
hlt
ds
push
dec
filds
insb
xlat
into
mov
loope
ja
push
xchg
mull
imul
cmpsl
fstpt
fisttpll
ret
add
add
and
sub
adc
cmc
test
xchg
imull
add
add
dec
cmp
repz
and
adc
scas
push
mov
out
jg
pop
nop
pushf
push
test
clc
dec
jg
js
aam
aad
mov
adc
jmp
scas
aaa
lds
add
outsl
popa
xchg
mov
fimull
cmp
bound
inc
pop
rcrb
pop
push
add
pop
xchg
mov
push
fucomp
mov
mov
mov
notb
movsb
out
sahf
push
pop
mov
rolb
and
cmp
out
push
filds
sahf
sub
add
dec
sar
cli
mov
lds
dec
sub
repz
popa
imul
insl
push
mov
in
hlt
mov
test
imul
jmp
inc
mov
jno
bnd
enter
pop
add
fs
aaa
ds
test
cmpsl
inc
rorb
jae
scas
lock
fidivs
pop
jg
in
jbe
pushf
in
aad
nop
adc
pop
sub
inc
jg
xchg
push
inc
mov
scas
sbbb
rcrl
bound
cmp
sub
sbb
adc
in
stc
aad
adc
jns
arpl
dec
cli
mov
push
mov
insl
mov
mov
cmpsb
je
std
mov
xchg
pop
xlat
dec
cmc
xor
lcall
int3
sub
pop
incb
sbb
sbb
jge
stos
out
int
cltd
mov
mov
cmp
cwtl
sub
sub
jae
mov
cwtl
mov
cld
lea
push
mov
and
mov
sub
fcmovu
ret
sahf
lcall
rclb
cwtl
das
notb
int3
jns
xchg
fs
movsl
test
shrb
sbb
jg
mov
rcrb
rsm
add
jnp
leave
int3
fisttpll
bound
push
cmp
rol
negb
test
sub
or
dec
call
clc
shll
jo
mov
adcb
scas
int3
and
pop
cmpsl
lods
mov
xor
jge
mov
sub
add
xchg
cmp
out
negl
add
jns
cld
test
stc
push
insb
xchg
test
jmp
test
fcmovbe
push
push
divl
dec
pop
repnz
mov
jg
mov
fistpll
scas
mov
push
sarl
mov
jns
je
sbb
fisubl
jbe
or
ret
mov
sub
sbb
inc
outsb
xor
mov
fcmove
push
mov
push
mov
xor
xchg
sbb
shll
andb
fisttpl
subl
mov
inc
adc
js
jo
testl
icebp
ja
js
insl
sbb
xchg
xor
adc
orb
test
clc
cmp
insl
jae
arpl
dec
push
lahf
fidivrs
xlat
and
cmp
mov
pop
fadd
xchg
xchg
imul
mull
xchg
mov
dec
mov
and
push
loope
cmp
mov
fisttpl
loopne
testb
fdivl
jl
or
jbe
cmc
xor
gs
lock
loopne
jg
fisttpl
loope
cmpsl
pop
hlt
mov
and
cld
mov
in
or
and
inc
mov
inc
int
ret
pop
lahf
andb
mov
inc
mov
jne
sub
push
lea
mov
pushf
incl
mov
data16
xor
mov
add
addl
sbb
mov
mov
fnstenv
lods
cmc
in
mov
adc
xchg
in
paddd
push
gs
pop
outsb
dec
out
repz
or
and
lods
loopne
pop
pop
addr16
fwait
out
xchg
scas
push
xor
outsl
mov
jmp
and
fmul
dec
frstor
pop
out
adc
and
jmp
mov
mov
push
push
es
push
pop
loopne
add
mov
scas
push
mov
mov
pop
mov
adc
leave
es
dec
sub
ja
jnp
mov
loope
inc
sub
imul
lahf
cltd
mov
xchg
cwtl
sahf
mov
add
dec
push
jns
stos
xor
jns
jns
pop
jl
js
popf
or
ds
sbb
xchg
pop
mov
shll
pop
or
push
cmp
ret
dec
fs
pop
fisttpll
inc
push
addr16
cmpsb
mov
or
jne
dec
jae
lcall
shll
xchg
shr
vsqrtps
ja
sahf
pop
das
js
enter
test
push
xchg
fidivl
mov
mov
mov
cltd
int3
add
das
ror
mov
and
cmp
scas
inc
daa
mov
dec
sbb
stc
xchg
jns
push
pop
popf
fldt
sbbl
push
icebp
gs
push
shll
cmp
cs
cmp
imul
mov
add
jl
in
mov
andb
fadd
rorb
mov
stos
roll
lret
dec
stc
mov
push
clc
test
mov
and
mov
add
or
mov
ror
mov
jns
test
push
mov
sbb
cmp
aas
sbb
cltd
jmp
adc
adc
sti
pop
lds
lret
mov
dec
sub
lods
movsb
sbb
aad
repz
test
or
mov
and
pop
xor
add
jb
scas
lcall
cli
sub
xchg
xlat
sub
add
pop
push
test
jmp
mov
adc
inc
sbb
imul
adc
stos
imul
adc
add
mov
cs
out
or
andb
cmc
les
lret
test
addr16
scas
add
test
mov
dec
rol
insl
jns
pop
push
jmp
sti
jl
mov
mov
dec
mov
movsl
aas
or
dec
adc
inc
pop
out
xchg
cli
cmpsl
test
add
in
xor
dec
add
data16
mov
pop
sahf
test
shll
inc
shr
dec
pop
add
jge
scas
movb
clc
in
inc
fldl
lret
pushf
sets
adc
jg
adc
andb
push
jmp
ds
push
sbb
add
cltd
pop
popa
jnp
jne
sarl
push
adc
jae
out
sub
lods
push
mov
in
stc
xor
xchg
jno
dec
add
push
test
orl
loop
sub
xchg
movb
fsubrl
ficompl
mov
aaa
xor
repz
dec
pop
into
adc
inc
icebp
int
dec
movl
add
std
iret
jae
sub
rclb
add
enter
fildl
fsubr
push
rcr
aas
addr16
hlt
push
inc
pop
push
pop
inc
shrl
dec
in
loop
add
cmp
xchg
inc
imul
sub
pop
mov
sbb
xor
call
mov
nop
xchg
clc
jmp
add
inc
icebp
in
mov
aam
push
lods
filds
roll
pushf
lds
cmc
cmp
pop
sarb
push
adc
fsts
pop
jne
dec
mov
ficoml
mov
adc
mov
mov
rcrb
mov
js,pt
sub
stos
xor
scas
dec
or
int3
and
in
mov
inc
dec
mov
dec
subb
arpl
jecxz
mov
dec
mov
dec
loope
mov
cmp
push
lret
mov
inc
mov
daa
ret
or
in
test
inc
xor
sbb
or
lock
cmp
xchg
mov
mov
jg
pop
xchg
outsl
lret
push
dec
xlat
or
cmc
xchg
ds
shr
jae
dec
out
mov
ss
or
outsb
dec
or
sub
push
mov
ljmp
mov
std
jge
sbb
test
jg
adc
and
jae
adc
mov
add
ret
jmp
sti
xor
daa
cwtl
imul
cld
loop
pop
xchg
cmp
adc
lahf
xchg
data16
add
add
sbb
mov
pop
cmpsl
push
scas
aad
cmp
push
fildll
push
jo
lea
vmovaps
dec
cmp
cmc
dec
dec
sbb
add
sbb
xchg
and
dec
fmulp
popa
pop
adc
pusha
cmp
cmp
xor
outsl
out
jge
add
fwait
pop
lock
addr16
inc
in
jl
xlat
dec
mov
hlt
push
pusha
mov
mov
test
xor
je
mov
fcmovnu
pushl
scas
mov
cmp
mov
dec
lods
out
lret
jbe
pusha
jecxz
sbb
fucomp
shl
mov
sbb
dec
dec
test
je
cli
sub
xor
call
push
cwtl
movsb
je
pop
sub
std
insl
adc
pushf
ret
add
js
arpl
add
xchg
push
push
cmpsb
and
push
pop
imul
xor
mov
stos
and
pop
aaa
xor
ret
lret
mov
add
sub
movsl
mov
fsubrl
les
rolb
fidivs
scas
icebp
mov
add
adc
xlat
fs
adc
mov
hlt
xlat
fcom
and
ljmp
ret
emms
inc
imull
or
add
cmp
daa
in
test
in
addr16
aad
and
ja
ljmp
ret
cmpsl
xchg
push
mov
or
inc
mov
fucomi
dec
mull
pop
cmp
sbb
pop
pushf
inc
jo
mov
adc
mov
ror
or
mov
mov
jg
inc
jge
dec
xchg
ljmp
inc
and
ja
jo
pop
outsb
cwtl
adc
ja
scas
addr16
inc
or
or
jmp
and
xor
mov
adc
sarl
test
gs
lds
push
popf
inc
icebp
mov
int
pop
mov
mov
xor
loop
ja
mov
mov
cmpsl
xlat
addr16
jmp
in
mov
jmp
xchg
stos
inc
into
js
dec
cwtl
lods
pushf
das
test
xchg
or
sub
aad
test
getsec
arpl
dec
aas
ja
sti
repz
and
xchg
test
cmp
inc
mov
pop
dec
aad
out
add
and
add
push
pop
sbb
inc
stc
fidivrl
out
imul
outsb
dec
ja
push
pop
push
jo
push
push
push
stos
daa
push
sbb
fdivrs
ror
push
lods
cwtl
fnstenv
sbb
xchg
cmpsl
mov
dec
adc
jno
aaa
mov
and
or
or
dec
add
inc
sbb
out
repnz
mov
mov
negl
sbb
cmp
in
xchg
out
outsb
sbb
mov
hlt
sub
pusha
pop
pop
sbb
sub
dec
icebp
adc
jmp
inc
subb
pop
orl
jnp
repz
cmp
sub
stos
adc
cvttps2pi
pop
repz
je
xor
jmp
scas
addb
fdivrl
or
scas
in
leave
push
dec
je
inc
inc
inc
sbb
cld
sbb
cmp
inc
sbb
aad
or
inc
mov
inc
popa
insl
xchg
adc
mov
dec
iret
mov
outsl
insl
jmp
pop
mov
xchg
pusha
jle
ljmp
arpl
cltd
push
lret
push
leave
or
mov
jecxz
lds
or
sub
xor
cli
lea
sub
aaa
aas
pop
mov
pop
cmpsb
xchg
cmpsb
aas
pmullw
stc
push
mov
dec
pop
sub
je
imul
insb
xchg
imul
sbb
test
adc
test
and
push
add
out
andl
jne
fildl
outsl
aam
add
inc
pop
xchg
sub
lahf
inc
adc
test
jle
jae
push
and
sbbb
loop
mov
sahf
mul
dec
repz
dec
push
or
adc
mov
sbb
imul
add
sbb
divl
or
xchg
cmp
int3
cwtl
pop
xchg
rcll
sti
in
sub
sbb
pop
outsl
std
lret
mov
sub
daa
adc
xchg
lahf
das
out
dec
dec
in
push
fisttps
data16
push
mov
fs
xor
rep
cmp
cmp
pop
out
in
out
call
aad
decl
push
cmp
cmp
sbb
mov
sub
mov
mov
adc
mov
cld
arpl
dec
mull
fwait
out
mov
ret
or
mov
and
mov
sbb
lahf
mov
je
pop
or
add
inc
cmpl
out
into
and
adc
loope
lock
inc
subl
dec
outsl
add
add
mov
out
ror
sub
fsincos
iret
and
cmp
xor
add
xchg
mov
clc
dec
mov
icebp
mov
push
test
clc
scas
sbb
push
jg
jne
movsl
into
mov
repz
mov
and
jb
xchg
sub
jae
add
mov
sub
inc
sbb
xchg
cmp
stos
int
push
pop
push
or
jge
test
ret
lret
and
fldt
jg
add
mov
pop
dec
addr16
int
ret
jmp
push
jle
mov
add
sbb
mov
mov
cmp
push
aam
add
adc
jbe
das
daa
add
out
mov
mov
stos
dec
imul
aad
mov
shll
into
popf
push
xor
push
fs
xchg
dec
jbe
pusha
cmc
dec
dec
push
adc
mov
stc
fbstp
sub
mov
loopne
sbb
jl
mul
dec
test
out
cmp
jb
fimuls
cmpsl
stc
push
scas
subb
or
fsubrs
pop
pavgw
mov
push
daa
jecxz
jno
inc
xchg
cmpsb
ret
xor
movsb
mov
insl
ja
fwait
gs
aaa
mov
cmovle
cmp
xchg
jmp
lods
aam
jo
pop
jns
add
repnz
mov
xor
fdiv
in
pusha
ljmp
bound
mov
jmp
cs
pop
jbe
jmp
pop
std
stc
lds
mov
push
pushf
or
scas
rolb
fdivrp
xchg
and
pop
insl
or
pextrw
stos
insb
daa
mov
xchg
sub
sbb
fcomp
xor
cmpsl
inc
adc
cmp
jg
outsb
cmc
insb
int3
lds
pop
clc
cmp
fistps
test
test
cli
shll
sub
jno
jecxz
aas
lea
call
adcl
dec
mov
fistps
jnp
lret
std
dec
int3
jp
repz
xchg
lea
adc
mul
push
dec
cs
out
mov
xchg
call
jno
xchg
adc
lods
in
lods
scas
repz
mov
jge
nop
sbb
sbb
dec
add
add
out
iret
and
pop
or
cmc
mov
in
clc
jo
arpl
in
jecxz
fsubs
mov
push
dec
push
xchg
lgs
xor
jbe
dec
mov
mov
mov
dec
mov
stc
xchg
jns
jbe
mov
sbbl
pop
popf
push
in
sbb
sbb
add
lret
bound
enter
sahf
fdivs
jge
mov
or
sbbb
mov
nop
sti
or
adc
fwait
inc
sub
movntq
add
or
mov
push
xor
inc
push
imul
jnp
les
inc
mov
fsubr
pop
sub
mov
and
lret
push
dec
mov
dec
test
loopne
xchg
xor
repnz
aam
ret
jecxz
jg
pop
fsub
add
into
sahf
rorl
xchg
xor
jbe
pop
popf
push
jle
cmpsl
inc
push
inc
add
sub
lock
jns
xor
or
push
inc
mov
outsb
sahf
or
leave
jmp
das
sbb
pop
jp
pop
mov
push
popa
cwtl
insl
push
pop
push
cmp
and
test
cmp
xchg
and
into
mov
sti
sbb
lods
sbb
int3
fcomp
mov
int
fdivs
in
mov
ss
sbb
jecxz
xchg
jo
sbb
pop
scas
adc
sub
mov
insl
add
jmp
insb
mov
xorb
mull
jp
xchg
inc
push
jmp
sbb
inc
pop
push
mov
xchg
out
mov
pop
scas
jno
fisubrs
mov
jp
dec
sbb
sti
ljmp
cmp
mov
jp
outsl
mov
mov
cs
negb
out
or
loopne
dec
test
mov
mov
addr16
mov
jns
ret
stos
xchg
aad
iret
les
lock
jno
subl
xlat
into
jp
shll
arpl
pop
iret
repz
je
push
jno
in
xor
xlat
push
mov
cmpsl
arpl
call
jle
xor
mov
das
cld
cmpsb
and
addl
mov
cmp
daa
or
mov
fwait
dec
adc
ret
add
dec
xor
popf
mov
sub
mov
xchg
mov
push
mov
inc
icebp
or
jnp
ja
arpl
jge
xor
push
popf
popf
inc
and
lds
mov
testl
mov
jmp
add
pop
push
push
sub
pop
sub
insl
xor
mov
push
sbb
aas
movsl
jno
mulb
fidivl
gs
jg
xchg
movsb
dec
cltd
pop
outsb
jno
jns
je
cmp
jno
mov
xor
sub
dec
mov
and
aaa
add
nop
add
pop
fsubl
ljmp
loop
loopne
adc
aad
push
cli
pop
ss
fcomps
clc
mov
out
mov
mov
jmp
subl
dec
pop
pop
mov
in
jp
iret
sub
cmp
xor
lcall
and
sub
shrb
mov
or
mov
sub
jnp
mov
sti
adc
mov
push
stos
jp
adc
popf
sbb
cltd
enter
lahf
cwtl
xor
icebp
inc
jb
adcl
xchg
mov
shlb
xor
shll
jp
cmp
add
cmova
es
dec
stc
adc
and
aam
push
sub
clc
dec
into
test
jl
add
jne
xor
lea
xor
mov
mov
and
push
lret
cmpsb
mov
xor
fnstcw
inc
adc
scas
cmp
bound
in
jge
fisubs
pop
sub
leave
mov
or
jns
arpl
sbb
xchg
push
cmc
xor
cltd
aas
js
scas
fisttpll
jmp
fstps
sbb
idivl
mov
and
pop
jg
loopne
pop
xchg
pop
push
dec
out
sub
scas
dec
addl
clc
cwtl
sub
xchg
inc
cmpsl
or
xchg
mov
aad
jecxz
sub
imull
mov
enter
lret
loop
mov
dec
sub
scas
mov
pop
out
xchg
pusha
cmc
les
in
mov
cmpsl
ja
inc
movsl
sub
push
int3
push
push
pop
mov
shll
inc
sub
call
lds
pop
fucomip
pop
addb
loopne
mov
sarl
cmpsl
sbb
pop
or
mov
data16
mov
jo
mov
cli
call
mov
int
lret
add
or
mov
stos
mov
mov
pop
dec
push
cwtl
divb
insb
cli
cwtl
stc
push
sbb
sub
push
cmp
sub
dec
scas
stos
cmove
xchg
jns
fists
xor
sbb
mov
lea
sti
bound
lcall
or
cwtl
repz
das
push
stc
cmp
xor
sbb
stc
push
push
add
outsb
test
pop
cmp
add
jns
pop
sarl
and
cltd
int
and
hlt
xor
ljmp
mov
inc
adc
out
push
cmp
popa
sbb
stos
xor
lods
icebp
fwait
cli
or
and
inc
cwtl
loop
mov
gs
lock
push
leave
mov
loop
or
cwtl
mov
or
dec
mov
push
mov
int
or
mov
dec
cmp
test
out
sub
mov
xchg
arpl
cmp
jg
mov
mov
jne
call
dec
push
and
ja
jmp
fstpt
ret
enter
xchg
xor
dec
push
lret
or
push
sbb
jnp
mov
cltd
adc
mov
scas
jo
jnp
mov
add
xchg
fdivs
cmp
out
push
xchg
dec
mov
mov
xchg
jecxz
ret
lock
popf
jnp
imul
mov
xchg
inc
popf
nop
cwtl
push
sbb
xor
scas
fiadds
jg
data16
jp
adc
cmp
inc
cltd
ds
js
repz
push
js
dec
add
xlat
xchg
pusha
xchg
add
add
call
pop
cwtl
lcall
inc
cmpb
jle
pop
pop
push
cmp
pop
repz
sarb
and
sub
fcoms
push
push
inc
cmp
and
imul
sbbb
push
xor
loopne
lods
inc
mov
jmp
loope
inc
gs
dec
leave
sub
bound
mov
cmc
mov
loope
mov
mov
call
ljmp
cltd
in
sbb
arpl
jl
ret
jne
pop
mov
xchg
lret
fs
mov
push
xchg
mov
push
decl
dec
or
push
sub
ret
stos
push
int
xor
notb
lds
push
hlt
adc
cmp
push
xchg
jbe
hlt
cwtl
imul
push
xor
into
cltd
cli
subb
fisttpll
adc
loopne
sbb
lock
adc
fldl2e
push
sarb
stos
aam
dec
in
jbe
in
cli
xor
ja
std
pop
mov
and
testl
stc
bound
dec
jbe
push
les
jae
push
or
in
das
and
xchg
je
jo
inc
mov
ljmp
add
test
pop
ss
sbb
or
sbb
lret
int3
push
xchg
push
fdivrp
insl
shlb
pop
jle
fidivrs
push
jo
cmp
outsl
cs
jbe
push
sub
lds
mov
aad
imul
xchg
add
icebp
inc
jae
dec
pop
xchg
imul
mov
jo
or
inc
imull
xchg
or
push
pop
mov
xor
je
stc
nop
clc
xor
xchg
popf
arpl
je
xchg
cs
lcall
mov
cmpsl
cmpl
subb
xor
icebp
je
icebp
fstl
xchg
sti
and
inc
adc
leave
cmpsl
lods
fisubrs
dec
shlb
mov
push
daa
or
cmp
sbb
cwtl
dec
pop
jmp
mov
dec
in
adc
addr16
data16
pop
add
int
mov
and
rcrb
add
fadd
push
aam
xchg
push
push
add
adc
sbb
and
cmp
pop
mov
xor
cmp
xlat
adc
filds
repz
xlat
cli
and
sub
mov
lock
and
sbb
inc
mov
xchg
outsl
sub
jg
push
mov
add
push
add
push
in
jns
ja
loop
fstpt
push
mov
dec
and
in
movsl
lds
ret
cmpsl
out
cmp
jecxz
test
in
push
in
cmp
mov
fsubs
pusha
mov
jne
aad
adc
scas
enter
scas
out
cmp
xchg
sub
mov
pop
std
loopne
xor
lods
sbb
xchg
frstor
inc
test
inc
inc
cmp
leave
cwtl
shlb
adc
mov
xor
or
push
out
pop
cmp
cmp
mov
mov
mov
pop
orb
cwtl
mov
and
jmp
sub
shr
in
sbb
out
jne
call
fbstp
fdivl
pop
test
add
fsubs
mov
movb
pop
outsl
jns
mov
ffreep
and
incb
mov
push
in
adc
add
ja
push
pop
rcrl
inc
sub
cmpl
xchg
jo
test
cmp
into
pop
inc
jecxz
pop
aam
mov
lret
pushf
sub
xor
mov
pop
push
inc
xchg
dec
movsb
jns
or
jbe
mov
daa
mov
xor
xorb
incl
push
dec
mov
orb
inc
xchg
ja
js
sbb
jno
cld
ss
popa
scas
leave
out
stos
arpl
fcomps
pop
inc
and
cmp
cmc
mov
sbb
in
outsl
ret
or
mov
leave
xchg
mov
test
xor
jo
mov
dec
pop
mov
xor
mov
jle
sub
xchg
or
icebp
dec
push
dec
push
fwait
jge
add
lods
mov
sub
outsb
loopne
sbb
pop
das
mov
jecxz
sarl
xchg
mov
and
dec
mov
mov
sub
arpl
xchg
mov
sub
shll
enter
inc
mov
test
push
sbb
iret
cmp
push
in
xor
movsl
imul
xchg
mov
pushw
mov
and
push
push
push
dec
mov
cli
or
shrl
mov
mov
aad
imul
cwtl
lods
fiaddl
in
inc
jns
xor
les
jno
or
cmp
cltd
cmp
xchg
loope
xchg
xlat
sbb
jae
out
cli
leave
je
push
push
jmp
xor
jb
mov
aaa
mov
push
push
mov
in
mov
divl
push
mov
push
out
sbb
add
fadds
xchg
out
filds
and
repz
ret
mov
sbb
lret
push
xor
mov
cs
xor
ret
cmovs
mov
scas
icebp
fdivr
shrl
mov
cmpsb
into
xchg
les
test
out
push
fmuls
add
dec
mov
mov
sub
pop
lock
sbb
popf
mov
mov
lret
lds
xchg
ja
arpl
sub
decb
xchg
mov
adc
les
int3
mov
mov
les
fistps
out
and
pusha
lods
or
xchg
xlat
jecxz
mov
jge
lea
and
add
add
stos
mov
adc
aad
push
into
stc
pop
imul
mov
icebp
scas
cmp
push
xchg
popa
leave
stc
mov
push
fiadds
push
lea
lret
sub
jae
dec
stos
into
pop
dec
addb
lcall
add
inc
jne
cld
jae
in
dec
mov
popf
and
nop
sbb
hlt
subb
iret
push
and
xor
jl
push
sarl
mov
mov
inc
sub
int
scas
add
mov
inc
inc
inc
push
mov
mov
push
andl
add
addb
mov
movsl
repnz
xor
outsl
rcrl
adc
and
pop
roll
not
out
or
rcrl
cwtl
popf
cmc
xchg
fs
aad
mov
es
mov
ffreep
popw
cli
or
daa
push
mov
popf
mov
inc
or
pop
in
inc
addr16
inc
test
sahf
out
fcomip
xor
jp
sahf
and
xchg
and
sbb
and
lods
bndstx
je
and
jb
xchg
call
scas
inc
insl
lods
jno
mov
inc
shrl
sub
fdiv
push
fstps
add
ror
and
sahf
jb
ss
xchg
not
enter
xor
sub
push
movsb
cmp
lods
je
mov
mov
xchg
pusha
scas
push
scas
loope
and
cmc
leave
jnp
jg
test
push
iret
inc
cmp
jmp
sub
outsl
xor
add
or
inc
pop
inc
cli
out
mov
mov
notl
imul
mov
jb
dec
push
pop
arpl
sarl
mov
mov
mov
mov
dec
pushw
stc
shlb
add
movsl
test
sti
xor
fistpl
jle
popl
adc
lahf
insl
jns
fldl
fistpl
mov
or
sub
mov
es
ret
mov
sub
ljmp
or
lods
icebp
js
push
mov
sahf
jmp
jo
add
mov
or
out
cmp
adc
imul
lcall
std
cmp
cmpsb
lcall
dec
les
pop
rcl
and
jecxz
xor
mov
xor
lea
sub
pop
test
outsb
lret
idivl
pop
sbb
mov
adc
jno
push
pop
xchg
or
insl
std
adc
fists
nop
out
and
or
push
pop
xor
jg
in
loop,pn
adc
popa
xchg
lcall
shrb
push
fcoms
mov
add
dec
xor
inc
push
sub
mov
lret
idivl
mov
cltd
mov
lret
imul
jno
push
jg
and
xor
xchg
push
adc
fdiv
push
sbb
mov
ja
pop
push
sti
ret
xor
hlt
lock
movsl
lods
lahf
mov
cld
mov
das
cmpsb
insb
xchg
cmp
bound
sub
xchg
scas
cmp
sbb
dec
pop
cmp
aam
push
push
lret
lock
sti
in
jl
cld
jae
add
ret
data16
lock
or
fcoms
ss
aad
cmp
cltd
xor
fisttpl
aas
mov
xchg
and
xchg
enter
ds
pop
add
clc
pop
sbb
adc
lock
sbb
fcoml
mov
stos
mov
lods
dec
jnp
movsb
or
outsl
repz
mov
sub
hlt
pop
cmpsl
xchg
mov
cmp
dec
pop
out
negb
pop
lret
sbb
sub
jg
stos
push
popa
lods
mov
pop
pusha
insb
stos
inc
pop
or
je
test
hlt
add
sbbl
pop
cmp
outsl
out
ret
fwait
outsl
cs
jp
das
scas
loop
inc
xchg
into
sbb
mov
cmp
lret
xor
and
add
filds
pop
pop
ret
out
fwait
xchg
out
test
ja
push
xchg
fs
les
rcrb
es
dec
imul
out
push
add
jecxz
pop
jmp
or
jbe
jp
bound
dec
add
std
pop
cmp
xor
lahf
push
outsb
pop
mov
xor
mov
sbb
or
pop
cli
or
xchg
pushf
cld
in
xchg
and
mov
call
sub
and
push
inc
test
push
pop
dec
mov
add
dec
adc
mov
dec
leave
adc
and
loope
jno
sbb
adc
cmp
ja
hlt
add
ror
xchg
jo
movsb
adc
mov
sub
inc
jnp
ret
mov
sub
mov
insl
pushf
xchg
jg
mov
insl
hlt
or
xchg
push
sub
in
das
mov
pop
mov
addr16
push
add
jns
add
mov
and
sub
add
gs
loope
lock
dec
sub
inc
mov
repz
fwait
push
pop
aam
cmp
andl
repnz
lcall
jecxz
mov
arpl
fisubs
std
aad
lahf
in
outsl
mov
in
iret
inc
cli
scas
mov
cmp
sub
movsl
and
push
setno
adc
xor
scas
xor
addps
stos
push
sbb
jne
mov
fstps
cli
test
mov
iret
mov
imulb
cmpsb
mov
add
push
mov
or
movsb
push
cmpsl
and
cmpsb
insb
xor
dec
enter
mov
repz
aam
jecxz
xchg
out
jno
outsb
pop
ret
fiaddl
int3
dec
xor
jns
addr16
in
mov
mov
pop
ret
sbb
ja
incb
aas
add
inc
mov
push
and
xchg
lock
fwait
clc
mov
add
or
loopne
std
jp
lea
mov
out
imul
sti
and
fiadds
xlat
out
js
test
das
popl
sub
aaa
pop
iret
iret
adc
push
aad
movsl
or
push
outsb
push
mov
sar
push
dec
add
fadds
dec
sub
and
loope
or
pop
or
xor
ret
mov
div
repnz
xlat
cmp
sbb
cwtl
adc
mov
das
or
repz
iret
jmp
dec
inc
pop
sub
adc
push
ret
add
call
cmp
add
mov
outsl
int
dec
test
add
and
cmp
sub
popa
out
jne
mov
xchg
push
fwait
rcll
outsl
cmp
mov
fistpll
xor
or
inc
push
pop
lock
pusha
jmp
insb
jae
rorb
loop
or
dec
sahf
scas
jns
add
scas
ret
mov
aam
fnstcw
notb
movsb
pop
mov
mov
shll
jmp
bound
nop
pop
jle
int
into
std
std
out
cmp
and
test
cmpsb
sbb
xchg
and
xchg
jl
and
sub
imul
scas
movl
mov
xchg
fstpl
int3
aad
sbb
dec
lods
jmp
jl
cmp
mov
mov
sar
or
pushf
call
outsb
iret
jo
fdivp
sub
loopne
dec
pop
adc
pop
lret
sbb
sbb
mov
std
and
cltd
mov
mov
jae
cmp
jne
push
pop
stc
movsl
pop
push
lret
push
fidivrs
mov
int3
pop
inc
inc
test
push
gs
loope
pop
push
jno
aaa
mov
adc
dec
xor
dec
xchg
in
aad
sub
adc
push
and
add
mov
bound
cmp
cmp
nop
arpl
mov
fsubl
adc
rorb
jb
cmpsb
loope
outsb
lret
pop
push
mov
arpl
movsl
popa
cmp
pop
mov
mov
inc
dec
outsb
mov
mov
icebp
cmp
jmp
cmp
add
mov
out
dec
ds
mov
cmp
lcall
mov
loope
xchg
fdivrp
aad
sti
fisttpll
pushf
mov
enter
mov
loopne
clc
jnp
data16
jae
pushf
xor
cmp
push
xor
mov
dec
mov
cmp
out
insb
pop
xor
test
testb
sub
or
add
imul
mov
jnp
add
dec
ret
iret
pop
pop
push
adc
push
push
xor
ljmp
pusha
test
rcrb
push
and
pop
in
subb
bound
cmp
inc
jg
fmul
sub
imul
lahf
rol
push
cmpsb
xchg
and
sbb
xchg
dec
add
pop
aaa
lret
fsubs
repnz
cltd
into
in
jg
iret
loopne
jmp
in
dec
sub
insb
push
loope
mov
xchg
repz
dec
fisubrs
js
push
test
push
push
and
fisubrs
pop
and
jne
sub
xchg
lods
cmp
imul
add
cmp
adc
cwtl
test
adc
into
mov
sbb
mov
push
jae
loop
mov
movsb
xchg
inc
dec
and
out
xchg
or
loop
or
push
loope
mov
jge
icebp
push
rol
insl
out
or
js
imulb
and
fwait
xchg
or
xor
and
movsl
dec
mov
lds
xor
sub
scas
rorl
sbb
clc
into
aas
dec
mov
push
filds
cmp
call
fsubrl
or
pop
sub
jbe
std
mov
loopne
lods
jnp
cltd
das
mov
mov
insb
adc
push
lahf
and
sub
jmp
pop
out
push
inc
cmp
mov
inc
sbb
cmpsb
outsb
mov
xor
fiaddl
mov
fisttpll
into
std
das
xchg
jmp
sub
in
or
add
inc
xor
divb
mov
mov
sub
leave
dec
addb
pop
and
popa
aas
add
lock
cld
jbe
pop
mov
or
or
movsl
mov
mov
push
fisubl
xchg
lock
cmp
inc
push
and
dec
fidivs
push
jae
xor
mov
out
cs
loopne
pop
mov
hlt
stc
lds
dec
into
ret
cmp
loop
cmc
xorl
fs
add
inc
cmpsb
popf
movsb
in
cltd
cwtl
pop
xchg
fidivrs
or
stos
shll
outsb
cli
sub
add
ror
out
movsb
mov
int3
jmp
dec
loopne
pop
aam
jbe
pop
jne
icebp
aam
xchg
adc
aas
aad
stc
dec
inc
sarb
jb
push
wbinvd
or
sti
mov
mov
sbb
das
int3
and
mov
dec
sub
shrb
dec
mov
das
add
in
fstpt
rcrl
mov
movsb
dec
aam
inc
scas
jns
pop
jno
out
lods
pop
sahf
mov
jle
jo
sbbb
rcl
mov
push
inc
and
jae
and
lret
icebp
lds
pop
push
test
test
cli
das
rcll
adc
push
adc
jge
rol
orb
into
mov
ljmpw
std
not
adc
bound
pop
mov
jb
sub
stc
stos
inc
push
and
inc
outsb
daa
aaa
ret
test
or
aad
ds
push
and
pop
ljmp
insl
cmp
mov
je
loope
cwtl
out
jne
ficompl
sub
cmpsl
push
xchg
xor
jl
xor
stos
cli
ret
stos
jbe
inc
xchg
jne
push
jne
mov
mov
push
sbb
es
jmp
icebp
sub
loopne
push
jne
fwait
mov
cmp
mov
inc
loope
dec
daa
xchg
jp
cmpsl
das
dec
jnp
jno
pop
mov
das
dec
sbb
inc
push
mov
inc
out
dec
pop
mov
je
in
pop
xchg
xchg
aas
xor
push
xchg
notl
cmpb
into
push
sub
mov
sbbl
push
sarl
xchg
push
je
sbb
mull
dec
sti
mov
mov
jmp
iret
or
sahf
dec
in
lahf
mov
call
out
xchg
mov
push
outsb
pop
leave
js
in
xlat
cld
lods
das
mov
cwtl
sbb
nop
test
jmp
pop
or
scas
push
inc
add
shrb
mov
mov
fidivrl
shlb
hlt
stc
mov
mov
jg
sub
adc
mov
rcrl
jns
xchg
les
push
push
dec
jno
test
mov
mov
sub
hlt
das
jp
cmp
sbb
fisubrl
adc
sti
push
or
xchg
lcall
lahf
aas
mov
rorb
bound
popa
sbb
cmp
clc
push
sub
push
adc
out
mov
jle
mov
mov
inc
das
mov
mov
sahf
fisubrl
xor
jo
add
loopne
push
pop
mov
mov
leave
sub
sub
int3
and
and
sub
daa
out
pop
cmp
iret
inc
rolb
mov
in
pusha
xor
mov
test
flds
movsl
ja
sbb
roll
or
push
mov
adc
icebp
movsl
out
cmp
adc
pop
cmp
fabs
mov
add
movsl
cs
test
add
mov
negl
cmp
push
jl
xchg
jp
add
inc
pop
xlat
push
xor
sub
aas
sub
sub
sbb
cmpsb
popa
roll
fdivrs
add
es
jns
jp
lcall
pop
icebp
loopne
into
shl
xor
pop
pop
sbb
mov
sbbb
cld
or
push
xchg
xchg
jae
jb
and
sub
or
push
mov
mov
sub
sbb
sahf
pop
adc
ror
int3
data16
out
mov
mov
xchg
pop
jg
xor
cs
aad
iret
xchg
mov
xchg
pop
pop
push
movsl
and
dec
xchg
test
addb
inc
fdivrl
sbb
cmp
std
xchg
mov
mov
roll
xchg
or
lret
lcall
pop
test
cld
pop
mov
icebp
sbb
mov
dec
jecxz
lret
ljmp
push
js
xchg
nop
rcrl
scas
dec
xchg
stc
pop
fstps
sub
enter
ds
xchg
addr16
adc
movsl
arpl
ds
fdivr
xchg
lds
in
or
mov
cli
jbe
mov
nop
inc
movsb
or
mov
lds
cmpsb
xchg
in
mov
and
push
pop
mov
mov
shll
icebp
hlt
push
pop
test
fidivl
and
dec
rcll
cmp
add
cmc
adc
push
adc
adc
xchg
push
pop
push
adc
inc
jg
bound
into
mov
stos
sbb
xchg
xchg
jae
inc
pop
sbb
mov
inc
and
arpl
ds
mov
shll
push
jbe
outsb
repnz
xchg
inc
inc
call
or
inc
push
mov
or
add
xchg
into
or
arpl
pop
cmp
adcb
shll
or
cli
push
fldenv
mov
and
push
inc
pop
push
fdiv
jns
dec
out
mov
cmp
mov
fld
mov
push
cmpsb
aas
int
dec
cwtl
fidivrs
addr16
mov
enter
mov
pop
cmp
pop
xor
insb
mov
mov
movsl
je
mov
mov
leave
xorb
int
inc
outsb
cmp
pushl
std
push
adc
fwait
adc
or
clc
add
and
dec
rcl
push
mov
in
xchg
jecxz
and
xchg
shrl
stos
mov
test
mov
test
lret
mov
add
sub
popf
insb
lods
jecxz
hlt
cltd
sub
ljmp
out
insl
sbb
push
pop
add
add
std
mov
pop
enter
cmp
lahf
cmp
mov
add
push
test
mov
test
lods
dec
mov
dec
js
xchg
sub
cwtl
pop
add
test
sub
ror
mov
stos
gs
mov
filds
adc
test
or
mull
xor
xchg
or
std
mov
xchg
jo
cmpsl
or
fists
scas
in
nop
pusha
jg
loop
popf
shrl
pop
and
aam
add
aas
addr16
adc
pushf
cmp
icebp
xor
xor
lcall
ljmp
mov
or
lods
call
and
lock
cmp
pop
es
sub
std
lret
outsl
leave
cs
pop
dec
cmp
cpuid
pop
push
dec
xor
dec
inc
push
addr16
push
xor
jno
rorb
sahf
pusha
scas
push
lock
out
cmpsb
or
stos
jb
data16
popf
cmp
push
in
xor
rolb
aad
pop
data16
incb
sbb
pop
stc
cmc
xor
add
imul
xchg
jae
sahf
mov
push
push
pushf
into
add
inc
shlb
mov
push
xchg
js
pushf
stos
mov
adc
sbbb
mov
dec
add
xchg
cmp
nop
add
mov
es
cmp
and
rep
sbb
mov
pop
call
insb
popa
add
cmp
or
das
rcl
repnz
add
push
lock
pop
mov
pop
imul
loop
popa
xor
xchg
fldenv
dec
cld
gs
data16
push
sub
jle
inc
mov
sub
test
jl
fldl
aam
aas
push
fldt
adc
or
mov
stc
fisubs
icebp
movsb
test
xchg
mov
sbb
test
push
scas
xchg
push
out
cmp
pop
jle
add
add
cmpsl
xorb
sbb
lods
out
jns
fwait
push
shll
dec
test
scas
divb
addl
jne
fs
ds
or
addr16
pusha
mov
sub
outsb
sbb
cmp
add
push
push
divl
xor
dec
sbb
out
xchg
push
sbb
or
fisubrl
or
shlb
or
lds
ficompl
iret
adc
xchg
nop
stc
pop
cmc
xor
jnp
mov
icebp
jge
sahf
pushf
inc
mov
cwtl
loope
add
jae
dec
sub
and
imul
in
divb
lock
in
test
rclb
jmp
clc
ret
lods
lret
insl
push
sub
cmc
jmp
jg
or
repz
fmulp
lock
dec
dec
sub
ss
sbb
popf
stc
gs
gs
cmc
int
inc
push
adcl
es
fldcw
xor
and
push
pop
fdivr
enter
inc
pop
mov
xchg
mov
xchg
nop
cmp
dec
and
or
push
and
and
mov
pusha
mov
add
sub
sbb
lock
xchg
xor
mov
sbb
jp
push
adc
rclb
pop
ja
add
sahf
fdivs
cmpsl
fiadds
je
inc
into
jno
rcrl
jl
fimuls
mov
push
jno
cmc
aas
fnstsw
inc
shr
and
mull
mov
mov
inc
aas
dec
lock
data16
sahf
xchg
sarb
popa
sub
repz
data16
xchg
or
lcall
daa
inc
jmp
or
pop
mov
dec
jg
testb
nop
mov
jnp
inc
stos
dec
xor
loop
fs
pushl
inc
cmp
fcompl
daa
or
daa
lock
popf
mov
lods
push
loope
adc
sub
es
sub
out
bound
stos
faddl
std
decb
pop
inc
int3
les
cmp
pushf
movsl
insb
outsb
sbb
test
jp
aam
repnz
push
push
ficoms
daa
mov
cwtl
imul
iret
dec
out
adcl
lcall
push
and
movsb
into
cmp
out
addb
add
movsl
mov
imul
xlat
negb
jp
cmpsl
loopne
ret
cmp
add
jnp
notl
lret
ss
iret
iret
lea
daa
fs
loope
dec
add
push
enter
sbb
out
dec
adc
add
neg
and
xor
iret
testl
push
enter
xor
out
push
push
test
pushf
gs
pop
lret
sub
and
loopne
xor
out
xchg
adc
daa
mov
daa
or
mov
loopne
test
es
and
adc
mov
in
dec
xchg
cmp
cmpsl
clc
lret
jns
std
or
and
mov
or
push
mov
push
inc
popa
aas
insl
stos
push
pop
cli
gs
pop
dec
insb
idiv
push
sub
pushf
push
shll
pop
xchg
nop
xor
cmc
test
fisubs
in
int3
aas
pushf
into
insb
push
and
cltd
sbb
faddl
dec
adc
mov
and
cmp
mov
mov
mov
xor
repz
pop
andl
js
mov
loopne
jmp
cmp
insb
and
cmpsl
and
aas
clc
push
mov
jne
insb
or
test
mov
dec
icebp
aaa
sub
sub
fnstenv
xorl
movsb
stc
mov
imul
cmp
sub
cmp
lahf
xchg
test
iret
loope
push
fsubrs
mov
push
jmp
sub
jecxz
dec
and
push
sbb
jb
or
mov
adc
shlb
adc
push
pop
or
enter
xor
pop
pop
xchg
xor
xchg
push
sub
scas
insl
or
lods
enter
fwait
and
adc
shrb
add
mov
jbe
sub
pop
xchg
lea
xor
jno
and
add
rol
shll
adc
jmp
repnz
push
in
out
scas
jo
dec
push
cld
aas
mov
xor
jmp
clc
repnz
jecxz
imul
imul
mov
sbb
enter
cld
sbb
dec
pop
dec
cmp
inc
mov
vrcpss
and
ret
push
repnz
orl
fs
sbb
push
pop
push
testb
ss
aam
imulb
dec
mov
icebp
ficompl
mov
push
movsb
fnstsw
lea
dec
fprem
add
jecxz
adc
daa
and
data16
out
add
sti
xlat
bound
xchg
pushf
mov
sub
call
push
in
in
mov
and
push
cld
insl
fildll
or
mov
add
push
outsl
xchg
or
jb
sbb
ror
movsb
jl
push
mov
jmp
cmpl
mov
adc
push
xchg
test
ja
jp
inc
add
cmp
cltd
mov
and
dec
pop
xor
sub
sbb
inc
and
push
jb
and
outsl
mov
adc
repz
mov
rolb
aad
js
stos
jmp
loope
mov
out
jmp
cmpsl
shr
push
push
rcl
inc
mov
shlb
jl
pop
inc
leave
das
inc
cmp
lods
mov
sbb
xor
test
lret
loop
hlt
mov
xchg
pop
sub
sbb
nop
inc
and
mov
mov
cwtl
stos
insl
xchg
scas
jge
and
cmp
dec
nop
jle
push
cmp
dec
inc
rolb
xorl
xchg
in
rorb
push
push
out
test
je
dec
ss
shlb
rcrb
xor
adc
sbb
xor
jns,pn
roll
xor
cmpsl
sbb
mov
xor
pop
sub
cmp
adc
or
ja
bound
sbb
mov
shll
dec
fbld
orb
jb
int
xor
sub
and
iret
sub
rcr
divb
int3
add
gs
loop
test
adc
cli
or
jl
mov
sahf
ljmp
imul
cli
xchg
ja
pop
cmp
nop
loop
stos
mov
sub
mov
push
xchg
movsl
push
ja
xchg
ja
xchg
jae
int3
sti
jns
jmp
je
loop
cmc
add
and
stc
outsl
pop
hlt
add
and
and
leave
add
cli
dec
lret
adc
adc
pushf
cmpsl
repnz
adc
xor
aas
push
sub
icebp
loop
push
shr
sub
xchg
inc
sub
inc
mov
stc
or
sbb
mov
cs
fwait
insb
inc
jl
fstl
in
cld
stc
cmp
jne
mov
xor
jle
cltd
push
mov
test
es
das
mov
rcrb
jl
stos
or
push
test
cmpsl
bsr
stos
dec
stc
push
dec
fdivrp
fdivs
push
shll
nop
insb
jnp
push
add
fildll
rcrl
ja
add
sti
sbb
popa
lock
sbb
cwtl
rcrl
in
sbb
ljmp
jle
movlps
pop
mov
jle
cmpsl
mov
fldl
sub
cmp
sbb
dec
push
lahf
xor
xchg
or
push
lret
and
push
dec
gs
cmc
dec
mov
pop
sahf
jne
cmp
data16
and
pop
sbb
pop
clc
sbb
lds
mov
imul
xorl
pop
mov
imulb
adc
jns
loopne
sub
jecxz
sub
leave
mov
aam
clc
rorl
out
ror
push
repz
jns
jecxz
add
xchg
xchg
mov
gs
fsubr
push
sub
add
loope
mov
jge
xor
inc
fmull
or
addr16
xor
frstor
lods
and
add
xor
aad
movsb
out
lahf
aad
mov
aad
add
fxch
imul
adc
fwait
add
mov
shll
repz
lea
fbstp
pop
inc
dec
mov
lea
loopne
push
xor
add
bnd
stos
sbb
jmp
xchg
xchg
int
lods
lods
xchg
and
pop
fmulp
adc
aas
add
push
xlat
bound
pop
mov
andl
xchg
out
test
mov
mov
lea
or
les
or
or
push
add
inc
sub
orb
je
nop
hlt
push
test
roll
leave
fwait
jne
mov
xchg
in
push
fiadds
jns
and
fmuls
lret
scas
inc
cmp
pop
cmp
cwtl
xor
test
sbb
cmpsl
xor
sub
jnp
mov
pushf
xor
ds
mov
mov
dec
in
add
dec
fs
negl
gs
mov
mul
jnp
jmp
mov
jp
sub
mov
daa
add
cs
repz
lods
inc
sbb
jno
cld
lcall
pop
std
mov
jl
adcl
xor
inc
lcall
gs
pop
dec
out
rclb
xchg
aam
aam
pop
ret
push
cli
test
lea
adc
fstps
pop
xchg
mov
dec
sbb
int
or
dec
fsts
test
icebp
adc
xlat
dec
jmp
push
jl
aam
mov
cltd
xor
mov
nop
adc
hlt
lods
or
out
pushf
inc
scas
pop
cmpsl
cmpsb
popa
ss
mov
movsb
in
in
ljmp
jbe
adc
inc
out
add
add
sbb
push
cmpsl
inc
ja
xchg
jnp
cli
add
mov
out
lret
gs
out
orl
pop
jge
pop
dec
pushf
out
call
insb
mov
pop
push
out
adc
lret
jle
pusha
dec
cld
les
push
mov
out
and
fnsave
das
dec
test
mov
add
push
jp
mov
push
mov
inc
cmp
xchg
iret
cli
into
jne
rorl
data16
cmpsl
rcl
xchg
inc
mov
in
inc
or
mov
daa
jno
jg
loopne
pop
xor
hlt
mov
pushf
and
xchg
mov
and
ja
sub
mov
jno
pop
lock
pop
stos
mov
inc
out
fldln2
add
f2xm1
pop
out
jecxz
ret
mov
scas
out
in
rclb
daa
test
mov
and
shll
dec
add
lods
lahf
jl
and
inc
ror
test
sub
imul
push
adc
inc
jge
das
ret
adc
inc
jecxz
mov
add
fsubrs
mull
fimuls
fimull
or
xor
sub
loope
xor
cmp
outsl
popl
movsb
outsl
mov
inc
cli
dec
and
je
sarl
push
xchg
push
cmp
or
adc
inc
mov
fcompl
nop
lahf
sti
add
lods
iret
push
jp
cltd
test
mulb
lahf
sbb
cmp
or
or
push
mov
movsb
sub
subb
and
mov
xchg
push
out
dec
cmpsl
mov
xchg
cld
adc
into
and
out
daa
lahf
popa
sub
pop
lret
ljmp
rcrb
mov
jo
movsl
adc
sub
xchg
jg
das
je
adc
in
daa
outsl
mov
fwait
and
adc
in
jg
add
mov
xchg
stc
pop
gs
pop
movsl
push
sti
mov
jl
or
jge
pop
dec
mov
mov
adc
push
std
js
shlb
imul
dec
lret
or
lea
outsl
dec
mov
and
imul
bound
and
or
movsb
jae
push
inc
aaa
xchg
inc
aad
cmp
popa
sub
add
rcr
mov
pusha
imul
xchg
pop
jmp
adc
sbb
push
lods
daa
cmovo
sahf
paddusw
decb
das
cmp
pop
insb
dec
cmp
daa
hlt
lcall
dec
loop
daa
pop
mov
xchg
add
pop
icebp
loopne
mov
jb
and
dec
add
and
out
insb
popa
arpl
mov
ss
int
sbb
add
add
repz
aas
jl
in
lods
add
and
sub
mov
call
mov
subb
pop
xchg
sub
fstps
mov
scas
push
rol
out
fidivl
daa
dec
shr
in
or
lock
ret
jnp
xchg
insb
jmp
adc
jp
leave
mov
pop
mov
adc
dec
fstpt
push
ret
repz
jne
aam
insb
pop
pop
jl
mov
and
aad
fsubrs
mov
dec
loope
test
ds
or
ret
adc
push
jo
mov
cmpsb
fisubrl
ss
mov
mov
xlat
scas
fstps
xchg
outsb
ret
lret
xchg
mov
sbb
insb
dec
sbb
cltd
lods
lock
call
cmpsb
push
sub
and
xor
aad
adc
in
test
dec
cli
imul
daa
sub
or
iret
sahf
lret
mov
bound
add
sbb
adc
mov
cmp
sbb
mov
dec
repz
jmp
mov
inc
xchg
add
mov
jns
in
bound
inc
pop
int
push
fisttps
cmp
mov
pop
sub
orb
out
cltd
jp
mov
stos
adc
lret
and
leave
ja
das
fs
sbb
adc
stc
fstpt
xchg
cmp
ret
jb
push
jle
shl
movsl
clc
inc
fstps
sub
mov
inc
sbb
mov
fcmovnu
pop
dec
pop
out
push
xlat
jbe
int3
adc
iret
mov
ret
cmp
dec
arpl
nop
add
xor
aaa
pusha
mov
in
icebp
ds
jb
mov
lea
jmp
adc
outsb
or
mov
dec
sbb
mov
add
pop
into
add
stos
pop
cltd
js
xlat
and
fxch
xchg
mov
xor
int
fistpll
cmpsb
imul
mov
or
add
xchg
fldenv
xchg
inc
push
cmp
jge
jge
js
or
shr
xor
dec
pushf
gs
iret
pop
pop
mov
clc
mov
pop
dec
gs
add
je
mov
sub
out
lcall
jle
jno
dec
lahf
shrb
or
sbb
ret
cmpsb
push
mov
in
aas
inc
jnp
test
fists
cmp
bound
in
mov
repz
pop
jl
outsl
jne
jmp
fidivrs
mov
jae
aaa
push
test
jae
mov
push
lods
adc
idivl
or
inc
push
aas
aas
stos
scas
push
addr16
inc
jno
movsl
xchg
cmp
jp
inc
jbe
mov
jl
pushf
xchg
sarb
xor
mov
je
jne
outsb
dec
xchg
das
loope
das
xchg
popa
jl
lea
fbld
jle
xchg
push
add
addb
call
sbb
lods
jle
data16
sbb
sbbl
out
ss
lret
xchg
push
jo
hlt
dec
cmp
add
mov
jp
sahf
ret
int
sub
inc
mov
lea
imul
jmp
mov
mov
push
add
push
xor
and
pushl
in
mov
or
push
es
pushf
xchg
sub
mov
cmp
daa
punpcklwd
mov
inc
repz
jge
sbb
repnz
xor
sub
mov
fistps
lcall
mov
leave
jp
pop
mov
scas
mov
pop
mov
pop
adc
pop
aad
daa
out
jo
jne
adc
and
rolb
out
iret
aad
gs
xchg
inc
cld
pop
mov
mov
mov
mov
push
or
adc
and
jb
fbstp
daa
mov
fs
xchg
nop
push
addr16
xor
xchg
mov
movsl
push
in
mov
test
jle
pushf
mov
fcmovb
sub
mov
sbb
lods
testl
jb
repnz
pop
hlt
les
cmp
repnz
pop
push
adc
and
sub
stos
loopne
stos
and
lcall
std
shlb
adc
push
dec
sub
test
inc
mov
mov
clc
mov
cmp
push
push
jbe
jb
sahf
pop
inc
or
sbb
popf
loop
dec
cmp
popa
out
popf
addr16
push
adc
inc
xchg
mov
aaa
fdivp
inc
dec
mov
xchg
jae
mov
nop
js
mov
out
rdtsc
cwtl
negb
xchg
mov
ss
add
call
xchg
sub
cmp
sbb
dec
sbb
pop
loopne
stos
lods
pop
xorb
aas
dec
add
std
push
dec
mov
aam
cmp
arpl
sub
push
cs
in
pop
and
pop
mov
scas
outsl
outsb
sbb
out
or
mov
in
daa
xor
pop
sahf
loope
or
inc
push
data16
cltd
mov
imul
rolb
inc
inc
imul
and
inc
sub
inc
mov
fsts
out
cmp
sbb
dec
jbe
lahf
and
sbb
lcall
dec
mov
hlt
adc
js
lods
adc
inc
mov
xchg
sub
add
in
dec
loopne
sbb
xchg
ficoms
mov
sub
ret
xchg
or
xorl
add
sarb
xor
das
mov
scas
pop
fistps
inc
sbb
lds
jecxz
hlt
adc
push
mov
test
or
jl
pop
popf
jmp
cmp
bound
push
mov
lods
ljmp
xchg
mov
jno
and
in
ss
pusha
stc
or
adc
in
lcall
lea
jnp
xchg
das
cmp
mov
imul
std
imulb
and
imul
mov
pop
cs
pop
xchg
xchg
jg
sti
sbb
xchg
cmpsl
mov
rol
mov
outsb
cmp
dec
dec
and
sbb
out
mov
cmpsl
xor
xchg
sbb
xchg
dec
xchg
rcrl
add
insb
push
ficoms
cmpl
fistps
sbb
jle
rcrl
sub
or
sbb
insb
bound
call
mov
lods
push
iret
lret
mov
sub
out
sbb
xchg
mov
sbb
xchg
jmp
movsl
test
lds
push
add
mov
add
int
add
or
dec
sahf
push
hlt
sub
or
mov
add
xor
fst
jns
dec
rclb
push
sahf
ror
fsincos
fwait
mov
mov
add
shll
daa
jmp
lcall
xor
sub
dec
push
sbb
inc
shrb
jnp
jns
jns
sbb
aaa
jle
fnstsw
and
ja
dec
mov
out
test
adc
mov
sub
out
lods
insb
into
jecxz
mov
aas
push
sub
jns
insb
fs
pop
es
cltd
loop
aad
stc
jb
stos
dec
inc
sub
sbb
mov
xor
xchg
imul
leave
jo
sub
jmp
fstps
push
push
and
data16
stc
mov
test
xchg
push
in
or
cmc
xchg
sub
stc
xchg
ret
cmp
mov
ja
imulb
and
adc
dec
mov
mulb
mov
ljmp
stos
xor
lods
jmp
adc
push
addr16
lock
mull
stos
iret
pop
sbb
add
inc
not
test
adc
push
stos
test
into
test
or
outsl
pop
pop
popa
jae
enter
fistpl
sbb
dec
inc
mov
or
fwait
orb
sub
pop
jb
rorb
dec
into
cmp
push
repnz
adc
gs
rclb
lods
pop
lret
or
push
xorps
inc
push
xchg
and
arpl
lods
data16
test
mov
inc
pop
test
arpl
test
mov
popf
push
or
sub
mov
xchg
cmpsl
pop
adc
inc
ss
jmp
imul
push
test
add
scas
test
rcrl
and
mov
push
mov
mov
add
adc
cmovge
add
and
call
into
push
push
xchg
sbb
dec
in
push
inc
or
push
or
test
testb
push
xchg
bound
xlat
cmc
sbb
stc
pusha
push
paddb
cli
aas
and
add
xor
dec
lahf
dec
xchg
ret
mov
test
in
mov
ret
ret
add
mov
pop
rorl
rolb
sub
pop
rcrl
adc
pusha
jecxz
cmp
or
dec
mov
sbb
idivl
pop
pusha
xor
pusha
repz
movsb
cli
inc
push
xchg
aam
xor
dec
push
xor
daa
dec
jp
and
int
add
jle
pop
xor
and
lret
ficoms
dec
mov
pop
mov
rcrl
ds
out
push
adc
clc
test
mov
daa
outsb
xor
mov
pop
mov
loopne
stos
and
decb
popf
outsl
dec
in
lret
jnp
jp
pop
mov
xchg
fmul
out
fwait
pop
stos
js
test
pop
jge
adc
adc
test
push
decb
insl
std
xchg
jbe
lret
sub
push
mov
mov
and
push
jge
mov
aaa
mov
pusha
push
dec
inc
js
xor
outsb
mov
jo
test
xchg
mov
adc
cli
xchg
shrb
push
cmpsb
shrb
mov
push
mov
cld
imul
push
enter
mov
adc
pusha
sbb
leave
inc
jge
mov
repnz
dec
cmp
lock
or
inc
shll
or
add
daa
inc
add
popa
cli
or
xor
xchg
fdivrs
daa
loop
adc
test
aas
or
inc
sbb
addr16
cmpsb
sbb
loop
sbb
mov
push
out
lret
ficoms
scas
adc
jmp
and
mov
push
je
imul
mov
pop
push
add
or
push
pop
pop
push
and
subl
pop
sub
jp
jge
shll
add
mov
es
jns
out
insb
jns
bound
fwait
stos
mov
loope
gs
scas
out
sub
pop
add
mov
xorl
push
pop
or
cmp
pop
mov
cltd
jmp
cmp
in
aaa
fsubp
jge
jno
sbb
add
stos
cmpsl
pop
dec
jp
pop
call
xor
xchg
ja
icebp
and
roll
cmpsl
push
in
cmp
lret
icebp
add
sub
int
mov
xlat
xor
jge
cli
and
adc
ds
into
jecxz
pop
push
xor
fldl
cmp
add
ret
imul
inc
scas
imul
fldenv
addr16
xor
xchg
out
enter
inc
adc
pop
or
fdivr
push
les
add
call
fwait
stos
inc
insl
adc
fsubp
popf
mov
pop
jl
data16
sbb
test
and
int3
xor
addl
push
push
push
pop
adc
lret
int
inc
nop
repnz
stos
sbb
out
or
inc
cmp
pop
inc
or
inc
in
jecxz
sti
and
lcall
imul
fldenv
mov
inc
cmc
cmp
outsb
aas
loopne
test
inc
and
or
jno
jnp
iretw
pop
mov
sbb
stos
into
mov
cwtl
sub
dec
adc
jg
or
orl
scas
inc
mov
cwtl
call
daa
push
jp
or
ret
xlat
ljmp
inc
pop
pop
sbb
sub
jl
cld
mov
push
lahf
push
or
mov
xchg
adc
dec
jl
sub
daa
jge
xor
add
or
pop
cmp
jae
sti
cs
sub
add
cmp
xchg
aas
enter
xor
mov
cli
mov
hlt
xchg
mov
dec
fldt
sarl
xor
jle
mov
mov
data16
push
enter
lcall
dec
inc
test
popa
xor
cmp
jns
inc
sbb
adc
into
les
pop
sub
pushl
adc
js
repz
inc
push
stos
cmc
add
addr16
sub
arpl
flds
outsb
jns
jp
sbb
sub
loop
xchg
in
cmp
mov
clc
ljmp
cmp
xchg
mov
and
shlb
pop
dec
fs
xchg
orl
adc
fsubl
sub
mov
data16
mov
sub
xor
xchg
int
repnz
sub
xchg
xor
mov
shrl
jl
repz
dec
in
call
fistps
pop
inc
std
insl
push
ja
pop
stos
bound
ljmp
mov
and
jo
jae
or
push
xor
leave
in
insl
adc
aas
filds
or
ja
lock
cmp
add
call
sub
xchg
jg
or
dec
out
mov
or
pop
js
add
jno
or
shr
ss
mov
or
repz
inc
mov
sarl
repz
and
int
xchg
dec
pop
adc
arpl
insb
push
lods
aaa
sbb
or
mov
dec
test
std
push
jecxz
out
mov
lcall
ja
jae
jmp
jo
inc
repz
jl
popa
xor
xchg
xor
pop
xor
stos
notl
in
cmp
mov
adc
add
scas
js
pop
iret
stos
xchg
ret
idivb
jnp
stc
jbe
mov
push
cmpb
mov
push
dec
sub
push
adc
mov
nop
popa
pushf
pop
add
pushf
or
sarb
dec
sub
gs
dec
test
xor
in
cmp
fisttpl
cmp
sub
ret
loope
cmp
ja
inc
pop
push
push
mov
idiv
xchg
pop
fimuls
push
out
and
rcr
ljmp
adc
nop
pop
xchg
icebp
dec
sarl
fsubrs
jmp
out
test
das
fdivr
dec
xorl
pusha
jmp
cmp
cmp
shr
mov
xchg
outsl
push
aad
push
fsub
in
pop
jmp
push
inc
popf
rcrb
mov
dec
movsl
jmp
push
arpl
std
or
push
cltd
stos
mov
lock
xor
mov
or
cmpsb
jnp
dec
lahf
pop
out
mov
dec
stos
inc
xchg
imul
cmp
scas
push
aas
js
hlt
and
outsb
test
xor
jns
ret
push
cmc
repnz
imul
push
xor
loopne
jno
xor
push
mov
movsb
add
shrl
mov
stos
add
clc
leave
icebp
sub
fisttps
sub
ret
xchg
pop
jg
dec
stos
mov
adc
lds
and
mov
pop
mov
pop
lret
pop
dec
xchg
bound
cmp
xchg
cmpsb
rcll
and
mov
sarl
das
jge
insl
pushf
add
mov
cmp
mov
scas
pop
inc
clc
rcrl
cs
jno
pop
ljmp
orl
jl
fstps
sbb
inc
pusha
sbb
aaa
mov
mov
pavgb
repz
sbb
xchg
mov
in
movsb
mov
add
sbbb
call
cmp
push
rolb
imul
or
and
fsubr
aas
push
addb
sub
push
pop
xor
inc
hlt
mov
mov
es
cmp
jns
fistps
test
lods
int3
jne
jge
or
mov
shrl
fildll
pop
mov
add
xchg
mov
inc
icebp
adc
imul
jge
fistpll
outsl
xor
fistps
loopne
movsl
rclb
imul
pop
mov
xor
push
mov
shlb
inc
pushf
push
out
mov
xchg
push
dec
movsl
and
fdivrl
repz
stos
adc
cs
sub
mov
mov
cmp
mov
lds
pop
clc
cmp
add
or
mov
fcom
scas
jo
inc
or
xchg
xchg
std
icebp
leave
shlb
sarl
add
int3
sahf
xor
xchg
jp
adc
mov
adc
ja
loope
psubusw
stos
lods
cmp
push
dec
dec
jp
pop
hlt
or
repnz
repz
push
pop
es
in
fdivr
jle
jne
push
pushf
stos
xchg
mov
pushf
je
test
in
sub
aam
dec
mov
jb
mov
insb
cmp
push
push
test
mov
add
outsl
nop
es
sbb
xchg
or
mov
lahf
stc
add
and
inc
jg
ds
mov
int
out
nop
sbb
fists
daa
stos
jg
movsl
and
sahf
or
cld
mov
xchg
cltd
cmp
pop
adc
push
in
mov
dec
stos
enter
es
insb
add
fistl
stos
or
lret
daa
add
push
cltd
xor
stc
mov
inc
mov
mov
sahf
in
xlat
test
jae
sbb
jmp
gs
insb
out
jo
sahf
fwait
jge
out
jo
les
mov
mov
sbb
push
cltd
out
push
cmpsb
sub
movsl
cmp
orb
rcll
pop
xchg
xrelease
or
jb
mov
aaa
push
gs
movd
in
push
ljmp
inc
sub
dec
cs
icebp
clc
pop
xchg
cmp
dec
sub
xrelease
daa
pop
fnstcw
aam
jmp
int
cmp
adc
enter
dec
div
adc
incb
cmp
stos
inc
test
pop
dec
mov
mov
pop
xorb
cmp
enter
pop
outsl
dec
test
lcall
xchg
add
repnz
add
cmp
xchg
lahf
sbb
adc
fstpt
or
inc
in
enter
test
pop
mov
mov
add
adc
push
lods
mov
out
jae
repnz
je
fists
adcb
dec
mov
movsb
or
in
cli
rclb
ja
daa
adc
les
adc
iret
js
xor
das
and
loopne
adc
pop
inc
sbb
push
js
mov
xor
jnp
stc
inc
jmp
adc
aad
sub
jns
or
ja
sbb
and
popa
adc
outsl
pop
or
ja
movsl
xor
pop
cmp
push
add
or
mov
testl
sub
fsubs
cmc
push
cmp
push
jno
inc
shr
jne
dec
rcrl
lahf
enter
and
test
add
in
mov
cmp
imul
adc
push
int3
mov
scas
andb
mov
sbb
xchg
xlat
iret
mov
or
xor
dec
mov
push
dec
lds
mov
cld
mov
cmp
daa
inc
insb
or
cmp
xchg
adc
repnz
cmp
cli
in
arpl
push
gs
jnp
xchg
call
mov
stos
xor
clc
dec
mov
outsb
pop
or
push
das
inc
pop
fcomps
hlt
jge
dec
mov
sub
adc
sub
mov
rclb
sub
mov
add
repz
xlat
out
stos
xchg
scas
inc
add
movsl
cmpl
push
cs
or
lea
movsl
jp
inc
push
pmulhuw
xor
daa
sub
int
mov
cltd
lret
sub
sti
dec
stc
cmpsb
dec
lahf
mov
push
cltd
xor
fwait
aas
clc
fwait
je
lock
cmp
cwtl
add
sub
ds
or
dec
dec
or
hlt
sub
jb
xor
and
jmp
and
sbb
stos
adc
test
jns
in
push
lds
sub
jne
aad
pop
lret
or
push
adc
pop
xchg
cwtl
add
out
lcall
loop
lret
xchg
inc
pop
xchg
and
rolb
lret
int
inc
sbb
mov
stc
jne
pop
adc
test
sub
mov
in
stos
icebp
cs
mov
push
add
lret
xchg
mov
fidivl
push
js
cwtl
test
repnz
movsl
aam
sbb
xchg
idivb
ds
jno
lret
jb
stos
in
fdivrl
jno
clc
adc
outsb
cwtl
cwtl
filds
mov
adc
lret
pop
clc
sbb
cmp
mov
dec
repz
and
or
loopne
dec
std
cltd
push
cmp
addr16
sbb
mov
or
lods
out
push
shrl
inc
cmp
dec
rcrl
mov
int
jecxz
fisubrs
xor
pop
lret
fadd
mov
xor
push
shl
jne
mov
mov
jns
leave
push
cmp
dec
imul
rcll
add
mov
sbb
mov
sub
pushf
cmp
mov
sub
pop
popf
sub
nop
std
or
add
fimuls
dec
movsl
xorl
and
dec
jno
and
fldt
fldz
lcall
enter
insb
mov
xchg
dec
mov
mov
bound
sbb
in
cltd
or
mov
sub
outsl
mov
mov
out
mov
or
cld
sub
mov
hlt
xor
lock
ret
xchg
call
call
xchg
in
xor
rol
aas
mov
fcmovbe
es
scas
fmull
insb
sahf
in
pop
xor
mov
adc
dec
cli
gs
jns
push
push
jne
in
repz
mov
arpl
xchg
xchg
fdivr
sub
test
in
mov
inc
sub
out
pop
ss
xchg
pushw
test
xor
test
cmp
mov
arpl
and
push
mov
pop
sbb
push
sub
mov
outsl
pop
dec
loopne
jb
in
imul
mov
mov
dec
cmp
dec
pop
pushf
inc
icebp
cmp
lret
mov
test
or
in
cltd
push
or
mov
mov
test
jb
cmpsb
testb
fwait
sub
mov
add
inc
or
pop
aaa
inc
dec
mov
and
pop
mov
lret
imul
xor
ljmp
int
icebp
out
jle
ljmp
fiadds
bound
mov
mov
mov
stos
aas
or
mov
pop
add
or
lahf
sbb
ljmp
lds
push
jmp
mov
cmp
inc
add
jno
iret
mov
sbb
or
pop
adc
ljmp
or
cmp
sbb
add
mov
inc
not
pop
mov
aad
xor
push
notb
pop
fiaddl
icebp
push
cmp
outsb
loope
outsl
jae
sub
adc
sbb
fcoml
lock
xor
pop
andb
orl
push
data16
mov
mov
repz
xchg
sbb
test
stc
add
mov
aaa
or
fbstp
mov
lret
add
add
and
or
sti
cld
cmp
push
test
xor
sahf
inc
in
add
pop
test
jo
add
mov
ret
xchg
inc
and
ffreep
cli
push
mov
out
lret
push
push
pop
jecxz
test
mov
push
jg
test
lcall
mov
test
insb
lds
jne
add
inc
daa
jmp
xchg
sahf
dec
outsb
sbb
add
fsubs
mov
cmp
fisubrs
mov
jmp
mov
jmp
and
pop
or
std
les
sub
or
popf
inc
leave
cmpsb
out
lods
stos
in
xchg
repnz
xchg
or
mov
outsb
pop
lods
sbb
inc
mov
pop
repnz
ljmp
std
hlt
lea
out
in
aas
flds
xchg
cmp
test
dec
fs
push
xor
xor
xchg
jge
stos
xor
push
stos
popa
mov
mov
xchg
shll
cmp
fucomp
fsubl
pop
mov
stos
in
fsts
jecxz
enter
outsb
xchg
push
cwtl
daa
in
ret
push
dec
xor
cld
es
sub
mov
inc
adc
dec
sarb
mov
sub
jmp
xor
inc
adc
scas
add
loop
int
lret
pop
iret
mov
daa
popf
jne
add
int3
xor
add
sub
push
je
jnp
or
sti
fcomps
cld
mov
orl
data16
leave
push
arpl
sbb
pop
gs
pop
xchg
aam
orb
ljmp
adc
and
cwtl
outsl
mov
icebp
ret
jp
lea
movsb
fs
iret
mov
xlat
leave
or
outsb
int3
cmp
mov
in
cmpl
dec
fnstenv
stos
add
outsb
lahf
push
cltd
lcall
pop
lods
inc
nop
push
pop
test
popf
push
cmovl
push
cli
scas
popa
jb
jnp
push
fisttps
xchg
pop
and
and
gs
lods
xchg
cmp
sti
and
mov
mov
sub
icebp
inc
add
sbb
and
stos
sbb
bnd
das
dec
pop
sub
push
test
movsb
subl
dec
xchg
in
xchg
jns
jo
xlat
adc
mov
mov
jae
dec
jle
dec
stos
adc
xlat
out
nop
pusha
test
jecxz
and
ret
aam
push
ret
cmp
rorb
lahf
push
into
aas
stos
sub
push
add
cmp
adc
jno
in
hlt
add
mov
mov
mov
aas
ret
sub
sbb
pshufw
jno
mov
stos
leave
dec
hlt
insb
jae
lods
push
mov
es
in
adc
inc
scas
mov
xchg
sbb
mov
lcall
xlat
mov
push
adc
loope
xchg
subb
imul
dec
inc
adc
inc
pop
pop
push
nop
cli
or
nop
cmpsb
mov
add
push
mov
pop
lret
push
and
mov
dec
movsb
adc
lret
data16
mov
jmp
je
sub
pop
call
shlb
addr16
pop
jne
cmpb
sti
mov
aaa
xor
mov
adc
sub
push
cmpsb
cmp
inc
addr16
mov
pop
fwait
or
jb
loope
adc
inc
out
jmp
dec
cmpsl
movb
pop
test
jecxz
mov
fadd
stos
mov
mov
ljmp
movsb
cld
cmpsl
into
xor
repnz
push
rcll
ret
fmull
movsb
in
pop
test
adc
jne
mov
outsb
or
adc
mov
fld1
outsb
gs
cld
fcmovbe
fsubl
add
inc
gs
and
es
adc
icebp
ja
rorl
mov
mov
dec
add
push
xor
sub
lods
inc
jmp
popf
lcall
int3
lcall
fcoml
in
jno
nop
call
mov
dec
xor
ret
movsl
fimull
jo
loop
outsb
adc
jno
std
lret
adc
loop
out
xlat
xchg
lahf
scas
inc
xchg
or
cld
lds
pop
mov
mov
add
test
mov
sarl
push
lea
mov
push
mov
mov
dec
mov
lret
xchg
imul
subb
dec
fmull
jno
jge
lods
fbld
jne
stos
scas
push
pop
lds
adc
rorl
mov
add
sti
xor
add
fsubrs
sbb
xchg
pop
cli
out
scas
shlb
jg
es
dec
jae
xchg
or
lods
mov
sub
jnp
adc
jge
mov
xchg
shrb
scas
lret
sub
cltd
sbb
loop
popa
addb
cmpsb
outsl
push
out
ret
or
sub
inc
mov
xchg
ror
mov
icebp
sbb
sub
push
leave
stos
push
movsb
jp
daa
gs
gs
lods
sbb
mov
js
mov
fwait
sub
jl
pop
pop
pop
lods
and
arpl
fdecstp
dec
int3
leave
icebp
std
mov
rorl
inc
inc
sahf
mov
outsb
push
shrb
mov
pop
xchg
xchg
mov
cmp
inc
pop
inc
push
xchg
and
leave
dec
popa
sti
and
push
dec
lahf
or
push
out
xchg
xchg
outsb
in
sbb
test
mov
pop
push
and
sbb
mov
cwtl
jecxz
push
sub
test
arpl
cld
push
pop
xchg
aam
fcompl
loop
fisttps
mov
ljmp
jmp
int
cmp
inc
cmp
lret
pushf
xchg
mov
movsl
bound
repz
lods
adc
sub
sub
adc
xor
xor
dec
insb
lods
popa
push
inc
xchg
jae
lret
or
test
add
fwait
pop
mov
cs
cwtl
stos
xor
js
push
pop
icebp
mov
test
movsb
mov
adc
add
cmp
xchg
stc
xor
xor
cmpsl
xorl
mov
mov
test
arpl
pop
sub
test
outsl
and
int
xor
loopne
jae
imul
pop
mov
in
das
repz
add
rcrb
mov
jmp
in
out
es
dec
movsb
fnsave
pop
sub
xchg
cwtl
pop
pop
ret
ficompl
xchg
pushf
fmuls
fldt
subl
lcall
mov
arpl
adc
pop
sahf
jbe
ja
aaa
mov
sbb
adc
addr16
int
pop
ss
lds
xchg
popa
negl
pop
xchg
xor
sahf
push
xor
add
mov
js
sbb
pop
sub
insl
cmc
dec
stos
pushf
popf
push
xchg
mov
inc
xorl
ljmp
addr16
push
push
out
xchg
sbb
cmpsb
fstpt
xchg
je
dec
out
scas
push
cmpsb
add
imul
cmp
xor
mov
jl
ret
mov
loope
cmp
shll
xlat
stc
mov
jnp
bound
sbb
sti
sub
xchg
sub
movsb
out
ja,pn
sbb
scas
pusha
pop
cmp
mov
inc
pop
test
mov
lods
scas
lods
lret
jg
or
mov
ret
int
add
jmp
mov
mov
mov
inc
dec
test
dec
jbe
push
pop
aaa
xchg
jmp
hlt
clc
ds
dec
fs
mov
jge
repz
mov
stos
fildl
into
mov
test
sbb
adc
sbb
jb
idivl
repz
push
std
lods
jns
loopne
fsubrl
out
mov
adcb
mov
pop
mov
shlb
into
bound
imul
ljmp
add
pop
sbb
jae
pop
mov
pop
fnsave
negl
mov
inc
or
jl
push
dec
jbe
add
add
out
xor
mov
notl
sbb
aas
xchg
dec
add
jg
ja
xor
cmpl
lret
mov
subl
roll
sbb
push
mov
xchg
lods
inc
mov
jmp
je
sub
sub
sub
jne
jp
ftst
xchg
inc
jno
mov
mov
mov
inc
out
dec
jae
jb
out
testl
sub
popf
jno
or
jno
fnstcw
int3
xlat
mov
mov
aam
hlt
enter
popf
xchg
ss
fcom
sub
insl
prefetcht2
inc
negb
sub
xchg
pop
cli
test
outsl
jmp
int3
lods
mov
jle
adc
das
xor
or
adc
inc
xor
repnz
cs
sub
outsb
xchg
or
xchg
and
lds
sbb
inc
pushf
je
push
lret
pop
cltd
inc
mov
sti
jmp
mov
adc
inc
dec
pop
movsl
adc
inc
pushf
push
nop
fmull
rcl
xorl
mov
lcall
imul
cmpsl
outsl
jmp
orb
fs
sbb
int
xchg
movsl
out
dec
mov
loopne
push
lds
dec
setns
mov
dec
jmp
or
je
pop
testb
add
hlt
lret
inc
rcrl
dec
jo
int
push
mov
or
adc
gs
mov
push
pop
pop
dec
xor
pop
inc
fst
movsb
push
push
je
cmp
sbb
pusha
insb
lock
bound
lds
dec
imull
add
test
sub
popa
sub
aaa
or
sbb
mov
sub
call
std
lock
mov
dec
aaa
mov
inc
mov
and
push
and
dec
lahf
mov
ret
addl
addr16
rclb
int
sub
push
shrl
cmp
test
jge
sahf
or
out
dec
repnz
push
push
sbbb
and
fbstp
dec
in
mov
popf
mov
outsb
mov
imul
mov
pop
inc
and
adc
outsl
dec
mov
int3
add
testl
add
sbb
inc
inc
fnsave
in
movl
adc
repnz
mov
mov
cmp
mov
rolb
fimull
xor
rol
outsl
add
or
push
test
xor
std
insl
adc
push
mov
push
adcb
xor
lea
decb
scas
jle
xchg
popf
stc
nop
insb
ret
andl
lret
and
int3
scas
mov
xlat
gs
insl
push
xchg
inc
push
jecxz
or
jne
add
xor
mov
xchg
mov
inc
pop
jb
mov
movsb
outsb
jbe
in
push
push
daa
bound
dec
lret
aaa
subl
or
in
scas
test
stc
xor
lahf
bound
fsubl
xor
inc
mov
xchg
jl
int3
push
mov
jbe
shlb
gs
jo
pop
rcrb
push
xchg
out
aaa
jp
dec
fcoms
push
jns
jns
mov
adc
cmpl
testb
jl
sbb
arpl
cmpsl
ffreep
fstpl
add
in
dec
cld
mov
mov
hlt
push
sbb
xchg
xlat
xchg
inc
rclb
push
jmp
dec
arpl
jl
sbb
mov
or
cmp
jp
pop
add
dec
adc
fdivrs
into
sub
ds
mov
adcl
mov
int3
jle
jle
faddl
lods
pop
jns
and
fbld
sub
dec
sub
push
or
xchg
and
int3
jnp
and
mov
jnp
adc
adc
daa
xchg
adc
addr16
loop
mov
int3
or
mov
and
das
jo
mov
and
int
fldt
xor
push
lods
or
mov
push
dec
sbb
nop
and
mov
jl
imul
fs
in
sbb
xchg
out
ret
mov
add
sbb
cvtps2pd
popf
inc
adc
dec
icebp
push
push
lock
jnp
pop
pusha
daa
scas
mov
repnz
jns
inc
lock
ret
outsl
insl
movsb
push
push
aam
dec
cmpsl
addl
mov
stc
xchg
mov
xor
push
jl
jb
push
cs
mov
cmp
mov
push
mov
sub
aam
inc
int3
andl
jne
mov
loop
pop
mov
push
ret
lcall
cmc
sti
push
jp
mov
sti
mov
lds
cmp
pop
fwait
push
inc
sbb
insb
pop
mov
pop
add
or
mov
out
push
in
test
test
mov
cli
pop
pop
mov
lods
mov
rcrl
mov
leave
icebp
jp
mov
lock
jmp
inc
mov
js
fildll
dec
repnz
dec
lret
test
outsb
sti
lods
enter
fstpl
pop
clc
xorb
pop
loop
jmp
pop
aam
aaa
fidivs
mov
mov
pushf
test
adcb
jg
pop
sbb
test
shll
aad
lcall
push
fdivr
xor
lret
xor
and
push
jb
sarl
and
xchg
sub
dec
filds
jmp
jge
hlt
pop
inc
int3
push
adcb
push
clc
inc
inc
inc
mov
fidivrs
sub
mov
imul
pusha
cmp
jmp
sub
daa
mov
mov
jo
aaa
xchg
xchg
xchg
sbb
out
into
cmp
cmp
movsl
mov
adc
out
jmp
or
aaa
mov
add
xchg
dec
rcl
mov
out
and
fcmovu
fxch
addr16
loopne
aad
mov
call
sub
cmpsb
push
out
inc
in
sub
hlt
out
int
fstps
jbe
mov
xor
xlat
ja
sub
fistl
icebp
pop
imul
shlb
push
fwait
jmp
mov
push
fisttpll
mov
add
and
lea
inc
fdivl
outsb
call
xchg
aad
jge
mov
cli
xchg
adc
int3
ljmp
and
pop
cmpsl
nop
push
mov
pop
cmp
dec
or
inc
fnstcw
test
ja
jmp
jp
fnstcw
lret
cld
or
ja
push
cli
lea
inc
jnp
sbb
pusha
js
xchg
mov
sub
in
jg
or
xor
iret
push
js
pop
inc
mov
sub
mov
daa
cld
and
cld
pop
out
xor
mov
fcom
imul
rclb
sbb
add
or
push
insl
xor
aam
loopne
daa
or
scas
pop
cmpl
adc
xor
aaa
cmpsb
mov
sbb
nop
push
xchg
mov
mov
xchg
sub
mov
or
dec
popa
cmp
lcall
jle
or
pop
sar
insl
mov
adc
inc
sar
jmp
loop
adcl
subl
jne
xchg
stc
inc
push
mov
xor
das
add
es
cmp
cwtl
out
fstpt
fidivrs
push
and
mov
or
mov
clc
add
cltd
add
test
loopne
mov
icebp
cwtl
sti
ret
push
mov
inc
mov
and
in
out
movsl
int3
das
aam
xchg
imul
inc
lock
into
jmp
jg
add
pop
aas
jo
fcomp
adc
loope,pt
outsb
pop
shll
mov
push
leave
jbe
inc
dec
mov
cld
push
mov
jecxz
rolb
jmp
mov
add
imul
insl
or
aas
xor
pop
std
cmp
jo
xchg
imul
mov
pop
xchg
xor
enter
hlt
mov
icebp
mov
sbb
xchg
dec
test
mov
shll
sarb
bnd
movsb
in
popf
sub
xlat
cmp
stc
cld
add
iret
mov
and
or
mov
push
loope
arpl
jge
mov
push
sti
loop
negl
test
stc
mov
sbbl
push
push
int3
add
enter
adc
aaa
jle
inc
in
push
repz
lods
add
mov
insb
push
xor
sub
cmp
mov
xor
adc
dec
jno
jecxz
cmpsl
push
int
movsb
push
stc
or
sbb
gs
xchg
es
and
scas
sbb
jmp
outsb
mov
icebp
cmp
outsl
fsubs
rorl
stos
mov
sub
xorl
fnstenv
dec
dec
lods
xor
mov
enter
push
fldenv
cmp
mov
cmp
imul
inc
sti
adc
xor
loopne
cld
call
outsl
cmp
push
in
push
jl
mov
andb
nop
test
pop
adc
mov
pop
xchg
mov
enter
pop
mov
adc
hlt
mov
add
out
fdiv
decb
push
aad
fsubrl
cmp
jle
adc
sti
fidivs
nop
in
int
or
in
adc
stos
stos
cmp
icebp
aaa
test
call
nop
std
push
inc
dec
testb
aas
cld
sub
mov
sbbl
or
repz
pop
test
leave
mov
inc
or
mov
arpl
sub
mov
inc
lock
test
cltd
adc
jb
and
adc
pop
mov
int
stos
out
mov
inc
movsb
dec
fdivrl
arpl
fstpt
mov
adcl
in
xchg
cmp
push
cltd
dec
add
jecxz
in
rcrl
stc
ss
ficoms
gs
std
or
xor
fsubrp
adc
out
mov
insb
push
pop
into
sahf
lock
mov
fcompl
aas
decb
int
fisttpl
roll
pop
xor
sbb
aad
mov
or
jle
cmp
ljmp
fwait
hlt
cwtl
sub
aas
push
jl
insb
mov
in
fldt
js
mov
sahf
rorl
fwait
jno
jl
movsl
mov
popa
mov
mov
sub
rorb
add
roll
pop
pushl
sbb
add
lock
fisubrl
sbb
aam
loopne
xlat
mov
pop
fs
xor
and
adc
lods
cmp
std
data16
mov
jecxz
movsl
testl
jmp
insl
fnstcw
imul
call
andb
xchg
loop
dec
and
out
or
dec
push
cmp
orb
addr16
shll
ret
jo
lds
sub
testb
mov
popl
pop
imul
push
and
and
inc
aam
push
inc
xchg
inc
leave
dec
mov
flds
xchg
arpl
aas
sbb
adc
add
dec
je
cli
loopne
lods
cli
push
repnz
dec
adc
pusha
push
pop
scas
int
pop
in
pop
inc
int
daa
cld
cmp
fsubrp
imul
pop
jbe
sub
mov
pop
cmpsb
pop
mov
jl
xchg
xor
cmp
inc
xchg
daa
out
inc
std
adc
mull
xchg
lret
xor
out
sbb
push
fs
xchg
fidivl
jno
pop
jb
fimull
push
mov
jg
repnz
cltd
cmpsl
sbbb
xchg
mov
push
enter
bound
xlat
lods
and
adc
iret
test
movb
lea
pop
js
pop
rcl
pop
push
fwait
mov
mov
lcall
int
and
push
add
nopl
inc
lock
decb
xor
nop
hlt
js
ss
xchg
je
das
stos
xor
or
lret
sbb
imul
xchg
mov
icebp
mov
gs
lods
pop
shrl
lahf
jle
sub
loop
sbb
jg
xor
mov
outsb
inc
sub
jge
aaa
mov
fmuls
sti
addr16
add
and
fildll
loopne
jno
aad
sbb
jno
inc
dec
inc
es
clc
adc
int3
xor
fidivs
call
icebp
lds
mov
sbb
je
adc
xor
sbb
add
lock
icebp
out
iret
inc
cmp
icebp
xchg
jl
mov
fdivs
dec
out
leave
inc
outsb
mov
jnp
pop
sub
adc
add
jo
ds
mov
rorb
daa
push
mov
dec
fnstsw
jo
mov
inc
into
jl
sti
or
cwtl
repz
xor
xor
mov
repz
mov
pop
sbb
pop
callw
or
mov
fbld
sbb
jns
sbb
dec
pop
out
inc
add
data16
std
jp
xor
cmpsl
data16
ds
or
mov
and
into
add
dec
jg
mov
int3
loope
mov
loop
fisttps
cmc
jns
movsl
mov
out
enter
xchg
pop
add
popa
std
mov
inc
sbb
mov
fs
mov
sbbb
movzwl
jge
sbb
inc
loopne
lret
incb
jp
add
fdiv
sbb
mov
pusha
femms
sbb
or
mov
mov
jge
insl
xchg
sub
out
push
dec
mov
pop
test
or
inc
jg
scas
mov
das
jns
mov
in
inc
sti
pop
fcoml
pusha
ja
push
icebp
mov
mov
sub
int3
inc
jnp
mov
stc
das
ljmp
jnp
xor
or
cmp
enter
sub
sub
stos
sub
sub
adc
jb
sbbl
nop
dec
push
enter
outsb
ljmp
frstor
push
and
out
negl
mov
xor
inc
push
push
ret
test
inc
pop
repz
mov
clc
mov
aad
push
sub
and
inc
jb
push
mov
test
stos
jbe
push
cltd
js
sbb
repnz
rcrb
sti
fs
mov
pop
xor
sub
cmp
das
sbb
fadd
repz
enter
lret
xchg
xchg
iret
jg
shll
inc
inc
cmp
mov
ss
jg
xchg
sub
sbb
sahf
adc
outsl
adc
push
arpl
mov
mov
pop
scas
rolb
aam
das
addr16
ss
nop
pop
lret
stos
xchg
pop
das
pop
jne
lret
and
push
cld
jl
push
mov
mov
inc
mov
xchg
sub
nop
sub
pushf
cmp
mov
and
mov
fildl
mov
out
pop
and
notb
out
arpl
rcl
cmpsb
jp
cmp
imul
jne
in
dec
icebp
jbe
sbb
and
incb
dec
inc
pop
jmp
pop
or
adc
sub
mov
jg
addr16
je
fcomip
jge
mov
mov
cmp
sub
insb
add
scas
push
jno
inc
cmp
iret
mov
mov
paddusb
stos
repz
adc
ds
aaa
insl
icebp
ret
push
pop
aaa
mov
pop
or
es
adc
pushf
adc
test
sti
adc
or
mov
cmc
clc
cltd
sbb
mov
scas
push
imul
jbe
fcoml
jp
idivb
fdivrl
mov
pop
xor
and
fistps
test
sub
add
push
outsl
enter
leave
movsl
mov
xchg
lret
idivb
push
rcl
mov
fldcw
out
xchg
sbb
repz
pop
lcall
cmp
cmp
pop
es
and
lods
addl
decb
sbb
mov
mov
cmp
roll
adc
sbb
jbe
in
add
jp
adc
cwtl
pop
xchg
pop
mov
ret
add
mov
data16
lahf
sti
mov
adc
mov
in
movsb
in
dec
pop
inc
or
dec
jno
cmpsb
inc
mov
aam
cmp
inc
adc
movsb
adc
jns
out
mov
xchg
fwait
push
aaa
ret
mov
xor
cltd
rcr
enter
push
sbb
adc
or
or
cmc
rcrb
mov
xorb
sbb
cli
or
loop
push
adc
or
imul
out
sbb
cld
cmp
jne
and
int
pop
lods
popf
or
test
adc
scas
fwait
xchg
mov
push
xchg
sbb
rolb
icebp
ret
pop
test
enter
inc
sub
push
mov
push
ljmp
sbb
jne
cwtl
nop
aam
jns
icebp
pop
jecxz
adcl
fimull
inc
mov
xchg
xor
sbb
mov
movsb
add
push
sub
aad
fildll
lcall
mov
or
pop
movsl
iret
test
cmp
xchg
cs
aas
sbb
iret
cs
in
cmp
call
sbb
sahf
xor
add
clc
mov
negl
je
pop
xchg
insb
aad
fmuls
xchg
cmpb
mov
mov
or
popa
push
loopne
cmc
test
sbb
sbb
add
clc
adc
mov
cmp
test
sub
mov
mov
mov
mov
jecxz
xchg
or
outsl
clc
outsl
loopne
sbb
xor
dec
and
xchg
lret
inc
lcall
cli
cli
cmp
ffree
mov
cmc
push
cmpsb
int3
sbb
lahf
dec
and
push
movsl
sub
xchg
jno
inc
sbb
push
fidivrs
sahf
lret
cltd
int3
xchg
cli
dec
leave
push
push
aas
mov
sub
bound
pop
mov
scas
das
add
add
leave
cwtl
outsb
push
mov
inc
ds
pushf
lahf
jecxz
scas
in
or
push
inc
out
mov
fwait
cld
sbb
mov
and
cmp
pop
mov
cltd
std
ffree
scas
or
mov
xor
daa
pop
lahf
xor
jae
xor
mov
sbb
orl
enter
pop
shll
outsl
mov
ficompl
fdivl
leave
das
lahf
sbb
pop
adc
iret
insl
in
fcmovb
popa
inc
es
scas
cmpsl
hlt
sahf
pop
nop
add
stc
leave
add
jnp
xchg
ja
xchg
je
dec
out
xlat
push
in
stc
inc
dec
ja
mov
mov
mov
jbe
dec
je
int
aaa
pop
lcall
add
popf
pop
lods
xchg
add
dec
add
push
imul
idivb
sub
and
inc
mov
sub
pop
sbb
dec
xor
mov
mov
imul
jno
xchg
repz
add
inc
jno
mov
or
outsl
cwtl
mov
lret
or
and
jbe
je
js
lcall
mov
add
jnp
push
clc
sbb
fidivs
fstps
das
xchg
and
popf
inc
in
pop
outsb
cmp
jp
push
sub
dec
sub
jle
jbe
pop
popa
inc
sbb
nop
fldenv
mov
mov
xchg
jp
or
bound
test
imul
push
daa
push
mov
pop
lock
mov
mov
jmp
xchg
inc
jecxz
xchg
jno
inc
outsl
cmp
pop
rolb
mov
mov
xchg
push
push
and
jnp
jg
repz
repnz
test
xchg
pop
aaa
jne
ror
fistps
cli
scas
aas
pop
jne
jmp
adc
shlb
enter
mov
mov
sbbl
mov
adc
pop
mov
and
add
and
and
sbb
movsb
mov
inc
mov
xchg
lods
repnz
sarb
mov
xchg
bound
adc
mov
ds
mov
and
imul
and
xor
mov
por
jg
push
in
call
fbstp
jecxz
xchg
nop
icebp
fistpl
adc
ss
subb
and
lret
enter
inc
jmp
cmp
outsl
ja
push
addl
icebp
lock
adc
jmp
rorl
jbe
lea
ror
adc
aad
mov
mov
insb
xchg
mov
in
mov
xchg
mov
mov
stos
ficomps
push
cmp
and
mov
iret
sbb
cmpsb
sar
sbb
pop
adc
mov
xor
inc
and
cmp
jp
mov
or
push
inc
test
dec
je
je
pusha
les
push
push
fidivl
nop
lods
or
ds
sbb
call
rclb
outsb
testl
cmpsl
xor
cmp
push
fidivl
pop
pusha
inc
xchg
cmp
sbb
sar
loope
insb
xchg
cmp
pop
mov
adc
shll
cmp
in
adc
ret
inc
lret
insl
mov
stos
mov
in
lcall
lods
popa
ljmp
neg
pushf
xchg
inc
cmp
jmp
mov
pop
in
dec
repnz
jp
sbb
push
test
push
mov
sbb
sbb
test
ja
sti
into
in
scas
faddl
scas
rcrl
jnp
adc
lds
pop
in
add
jns
je
adcb
cmp
sbb
and
enter
sbb
int3
add
sahf
lahf
popa
out
cs
adc
jg
xchg
sub
mov
ficompl
lahf
movsl
push
push
sbb
xchg
sub
cmp
jb
dec
xchg
mov
pop
pop
daa
adc
loope
scas
loop
scas
jbe
lahf
mov
ds
fidivrl
scas
mov
push
insl
push
mov
cmpsb
lcall
mov
shlb
pop
add
es
mov
mov
sub
jge
rclb
pop
mov
fldt
shl
cmp
out
cmp
jecxz
call
outsw
adc
loop
sarl
ja
aam
dec
mov
mov
fwait
jge
in
mov
fxch
nop
and
cmp
andl
sbb
cmpsl
cmp
mov
push
mov
cmpsl
cmp
out
fwait
aaa
cmp
xor
rolb
popa
aaa
xchg
imull
jmp
jns
mov
or
mov
mov
and
xchg
adc
repnz
sarb
jg
cwtl
jb
inc
mov
or
stc
mov
jg
mov
mov
jmp
dec
sub
pop
fsubrs
and
add
in
mov
mov
prefetchw
or
outsl
push
mov
sbbl
insl
mov
pop
clc
push
pop
add
mov
jl
xchg
jb
xor
add
mov
repnz
add
cmp
mov
sub
and
ja
arpl
nop
ja
cld
dec
inc
fwait
xlat
xchg
sahf
insb
aam
sbb
push
cld
int
in
scas
lcall
cmp
and
push
jae
sub
jb
dec
outsl
and
mov
icebp
in
mov
and
nop
les
mov
inc
xorl
pop
adc
test
push
lea
call
pop
xor
cmp
shlb
jl
js
js
lds
ljmp
stos
lret
loop
outsb
pop
in
xlat
sub
mov
shlb
sbb
jno
cmp
test
push
xchg
rol
dec
jp
xor
sub
inc
or
fidivl
cld
mov
dec
js
daa
loop
out
cmc
add
xchg
mov
sbb
pop
add
xor
add
loope
sbb
repz
push
inc
daa
or
mov
push
inc
call
xor
loope
cli
or
fsubrs
adc
icebp
xchg
outsl
cmp
ret
mov
fsubl
in
and
ja
cltd
aaa
imul
sbb
push
mov
in
shll
jl
sub
inc
fs
rolb
cmpl
cli
jns
in
pop
imul
in
hlt
cltd
jle
pop
js
ret
inc
sub
inc
das
pop
jns
sahf
es
mov
es
adc
push
popf
sbb
loope
test
pop
cmp
mov
pop
dec
aad
inc
imulb
fisubs
fistpll
mov
mov
movsb
adc
xchg
mov
cmp
ds
mov
adc
and
pop
aas
and
pop
bound
sahf
adc
and
lret
pop
pop
mov
js
fadds
es
cmp
mov
int3
shrl
jle
push
movsl
fs
daa
fnstenv
scas
ljmp
repz
inc
cmp
rorb
push
pusha
jp
std
push
add
sbb
sti
pop
inc
mov
outsb
pop
pop
push
out
sbb
push
shl
jmp
push
push
jle
fcmovbe
pop
inc
push
and
adc
pop
inc
data16
test
push
sti
mov
cmp
cmp
in
imul
lret
pop
lret
cs
inc
xor
jmp
mov
leave
mov
adc
div
sub
push
fistl
xchg
rorb
fneni(8087
daa
jne
dec
aam
jmp
leave
mov
inc
and
xchg
pop
inc
scas
push
in
mov
ret
outsb
cld
ja
aaa
mov
push
inc
add
cmp
loopne
mov
cwtl
clc
jnp
and
mov
sub
cltd
xchg
cltd
test
jecxz
jecxz
push
adc
imul
mov
popa
sarb
fcmovu
xchg
insl
hlt
sbb
fldl
sub
not
jecxz
pusha
dec
jo
imul
enter
cmp
push
inc
mov
dec
mov
mov
inc
aas
pop
push
out
cmp
push
shrl
hlt
mov
das
jb
imul
pop
dec
cld
into
les
leave
aaa
fwait
dec
mov
xchg
push
and
rcll
out
out
xor
daa
insb
mov
xchg
inc
push
imul
scas
loope
out
cs
fstps
scas
addr16
pop
movlps
jb
or
jle
xor
mov
inc
and
in
adc
and
xchg
insb
inc
adc
add
repnz
pop
mov
jb
out
cld
sahf
xchg
and
in
jle
dec
lcall
xor
or
sub
mov
xlat
shlb
je
test
inc
popa
adc
cmpl
xor
cmc
int
daa
fldcw
aaa
push
mov
fnsave
nop
fldcw
stc
sub
into
ja
dec
mov
pop
jl
mov
mov
adc
es
add
addl
sub
cmpsl
jl
dec
nop
sti
dec
jne
pop
sbb
movb
jl
call
add
and
je
sbb
add
and
add
mov
cmc
aas
subl
mov
rcr
lods
cmp
dec
test
sbb
call
or
lds
bswap
jecxz
xchg
mov
and
and
inc
pushf
add
cltd
mov
sub
popf
adc
stos
inc
jmp
adc
sbb
int3
xor
jg
test
cmpsl
sbb
repz
daa
aaa
cwtl
out
push
inc
jbe
data16
icebp
or
int3
scas
imul
jae
adc
mov
mov
cltd
pop
lods
or
int3
mov
out
add
scas
hlt
jle
xchg
pop
out
fildll
push
notb
stc
outsb
sbb
icebp
mulb
adc
cmpsl
sbb
out
jle
dec
fnstsw
cmpsb
stos
ficoms
loope
adc
push
cld
pop
dec
aas
lahf
add
icebp
sbb
test
mov
les
dec
jmp
adc
pop
jl
mov
adc
mov
ja
xchg
xchg
jnp
movsl
addr16
dec
or
xor
inc
inc
icebp
aad
es
pop
aam
icebp
dec
adc
andb
aaa
adc
icebp
rol
lock
xchg
mov
cli
cmp
dec
pushf
mov
fs
hlt
aad
pop
xchg
aad
lock
dec
and
add
jno
shlb
sub
push
push
aad
shlb
mov
xlat
in
fmul
or
call
xchg
adc
jecxz
subb
mov
bound
sti
cmp
sbb
mov
loop
mov
inc
bound
cs
or
cld
xor
mov
mov
outsl
out
dec
stc
ret
push
rolb
aad
loop
shlb
insb
cwtl
pop
aad
jo
cmpsl
mov
jne
xor
jge
add
cltd
pop
cmp
mov
cmp
mov
cmp
mov
mov
repz
push
hlt
in
sbb
pushf
inc
lcall
bnd
cmc
leave
xor
fidivs
xchg
daa
ja
sahf
inc
add
cmp
adc
stc
sub
push
test
jecxz
sub
roll
push
mov
es
mov
jmp
iret
fnstsw
scas
push
popl
xor
fisttpll
fisubrs
nop
pop
sarb
out
dec
rcll
mov
arpl
push
cmp
je
inc
add
jo
xor
mov
mov
std
aam
insb
pushf
adc
fidivrl
push
mov
pop
scas
insl
popf
das
mov
pop
pusha
clc
cwtl
pop
and
aas
mov
mov
cwtl
and
push
xchg
sbb
adc
mov
jl
xor
in
jmp
arpl
popa
mov
push
lahf
or
repz
sbb
dec
jg
imul
je
fidivl
fcoml
dec
mov
ds
in
push
pop
repz
aam
xor
push
jno
mov
into
es
and
mov
jb
xor
lret
insb
sbb
int3
push
jno
inc
dec
sub
cmp
push
popf
inc
sbbb
aas
rcrl
mov
dec
sbb
insb
inc
xchg
es
xor
add
cli
jae
sti
lahf
dec
test
mov
ljmp
mov
scas
sub
clc
loop
lret
shll
mov
sub
xor
je
push
sarl
mov
mov
testb
xchg
jno
cmp
cmp
xlat
adc
push
push
rcrl
loopne
sbb
adc
fsubs
stc
adc
jnp
gs
aad
addr16
cmp
jbe
aam
adc
inc
add
cmc
aas
cmpsl
adc
and
int
xchg
lret
or
mov
dec
cmp
into
outsb
xchg
fidivl
inc
stos
addr16
xchg
lds
mov
dec
loopne
in
aaa
outsl
sbb
push
testl
xor
je
jl
xor
sbb
aaa
adc
mov
xchg
lcall
mov
or
sbb
cmpsb
mov
mov
pop
inc
and
into
je
jnp
mov
ds
xor
push
cmp
out
dec
adc
ss
jbe
inc
jp
xchg
je
sbbb
aaa
jg
stc
inc
mov
aaa
popa
fidivrl
addr16
inc
inc
push
lcall
mov
popa
push
das
fisttpll
push
add
sbb
and
stos
repnz
ret
fists
in
js
cmp
test
outsb
mov
dec
sub
movsl
mov
dec
pop
and
and
mov
push
into
fwait
test
decb
es
addr16
jno
call
inc
test
sub
dec
mov
test
mov
and
mov
jae
clc
pop
out
mov
sub
cmp
lret
cld
jae
jnp
inc
add
leave
aaa
jbe
mov
lock
xchg
mov
pusha
push
js
xchg
mov
fcmovbe
out
jae
mov
xchg
in
pop
stos
lret
gs
push
or
jnp
fucom
call
mov
clc
out
mov
test
addr16
ss
pop
mov
ret
mov
data16
sub
xor
repnz
inc
fisubl
add
fstps
shrb
ja
pop
iret
mov
jns
xchg
mov
jmp
mov
and
aad
and
fdiv
stos
inc
cmp
and
ficoms
imul
and
push
gs
jmp
ljmp
sti
andb
out
in
icebp
and
movsl
jmp
fs
roll
xchg
int3
scas
sub
dec
ret
mov
adc
push
aad
add
fnsave
daa
loop
movsl
gs
mov
jp
cmpsl
hlt
lods
mov
ffreep
inc
pop
inc
mov
shrb
add
push
sbb
adcl
jmp
dec
push
ret
mov
fistps
adc
pop
mov
xchg
sbb
jo
push
add
les
and
jecxz
lods
dec
mov
pop
enter
into
test
inc
les
xchg
xchg
dec
pusha
add
scas
cmp
push
lods
mov
mov
mov
je
fistl
dec
mov
imul
outsb
push
jbe
movb
xor
mov
xor
into
cmp
rcrb
adc
scas
dec
mov
aaa
add
mov
mov
add
clc
dec
aaa
aad
out
push
cmp
pop
jns
daa
add
sbb
and
test
dec
xor
cmp
in
aad
xchg
lcall
idivb
shlb
jl
out
inc
push
sbb
mov
sub
mov
mov
jnp
sub
mov
xor
mov
inc
xor
pop
ret
add
je
rcr
inc
sbb
insl
xor
mov
fstps
mov
push
dec
lods
inc
xchg
add
pop
dec
andb
xor
jne
popf
dec
mov
cli
cmovl
aas
movsl
adc
inc
pop
mov
ret
xchg
js
xchg
push
scas
push
inc
repz
sbb
mov
and
pop
lahf
lods
movsl
mov
push
int
mov
or
push
and
xchg
out
mov
mov
xor
or
pop
les
dec
add
jl
bound
push
mov
xor
int3
push
sbb
xor
notb
es
mov
cmp
sbb
add
add
out
dec
pop
fsub
jecxz
xor
shll
adcl
cld
mov
rcll
sbb
pop
or
fidivl
cmc
mov
shlb
jl
loope
sbb
cmp
mov
push
sub
int3
shll
test
pop
mov
lret
test
int
outsb
cmp
cmc
mov
sbb
pop
xor
ficomps
xor
and
adc
and
frstor
add
fwait
mov
pushf
ja
mov
jnp
pop
popa
push
jp
xor
dec
jmp
aad
in
jno
scas
adc
hlt
xchg
icebp
fxch
adc
in
jns
inc
ja
pop
outsl
repz
cli
cltd
push
dec
clc
add
cli
xchg
outsb
push
sub
enter
push
mov
es
or
jmp
push
int3
arpl
mov
sti
or
mov
pop
imul
inc
adc
out
add
fcmovb
and
pop
mov
push
push
dec
cmp
mov
ja
push
fucomi
pop
outsl
jecxz
inc
mov
cltd
add
insb
shrl
scas
adc
imul
inc
jae
fisubrs
fdivr
and
sahf
mov
loope
jecxz
cmp
enter
sbb
pop
mov
sub
dec
jns
leave
icebp
sbb
test
out
cmp
scas
jns
add
sub
dec
out
cwtl
testb
push
das
stos
insb
ret
mov
mov
rorl
pop
pop
clc
push
or
into
jg
xchg
jae
mov
xor
dec
or
and
pop
or
xchg
sbbl
jnp
push
pop
lds
xor
mov
shll
inc
inc
lds
cmp
sbb
add
jg
cmp
mov
in
shl
sbb
movsb
push
pop
fisubs
inc
loopne
jle
xchg
stos
bswap
loopne
cli
or
pushf
popa
push
jbe
leave
xor
push
mov
cmp
and
push
mov
dec
sahf
fisttps
ds
xchg
fcmove
aad
xorb
mov
jmp
icebp
and
fs
std
sub
and
push
out
mov
push
or
pusha
mov
push
fwait
xor
push
adc
divl
adcb
or
je
and
pop
push
xchg
ret
and
cltd
adc
mov
and
push
add
cmp
adc
imul
ljmp
and
roll
or
lret
dec
int
enter
ljmp
xorb
pop
je
pop
cmpsb
mov
mov
cmp
out
mov
jg
cmp
dec
mov
popl
je
test
outsb
ljmp
shrb
pop
shl
loop
adc
cmp
pushf
daa
movsb
sbb
inc
dec
int3
push
xchg
jne
inc
mov
repz
je
inc
test
push
xchg
sub
aam
cltd
pop
or
and
sbb
dec
out
jns
popf
test
cmp
pop
sub
ret
fs
fldenv
fcoml
fiaddl
rcll
loopne
cli
adc
cmpsl
stc
inc
jmp
push
nop
inc
xchg
lods
aas
cmp
unpcklps
aad
loope
fcmove
fstl
pop
mov
aaa
mov
mov
xor
adc
xchg
mov
inc
dec
sbb
repnz
les
sbb
nop
or
pop
mov
shll
lcall
sbb
fs
test
aam
push
dec
aas
push
test
pop
mov
popa
jl
call
sarb
in
sub
sarl
daa
aas
sahf
push
call
xchg
xchg
add
pop
out
push
jge
dec
and
push
xchg
or
lret
stos
xchg
jecxz
sbb
jecxz
push
mov
jnp
mov
push
repnz
sub
add
dec
adc
or
push
roll
ret
cmpb
jp
inc
iret
push
mov
add
divb
icebp
inc
inc
adc
je
inc
loopne
add
xchg
lds
sbb
cmp
arpl
jnp
or
jns
push
fs
imul
xchg
mov
aas
jmp
or
int
aam
xchg
xorl
adc
mov
xor
pop
jecxz
adc
popf
xchg
andb
loopne
sub
aas
push
adc
cmpsl
xchg
orb
push
pop
loopne
xor
or
icebp
xor
in
add
jnp
out
jnp
repnz
dec
sub
pop
les
xchg
add
cmpsl
ja
push
cs
pop
mov
pop
mov
xor
mov
mov
stos
lock
jns
xchg
notl
inc
sub
arpl
xlat
and
inc
repz
or
ret
jle
mov
and
pop
fcomi
cwtl
lahf
mov
fists
mov
sbb
fcmovb
sub
addr16
stc
xor
push
pop
jmp
mov
insb
scas
leave
inc
imul
stos
xchg
inc
mov
in
pop
das
idiv
ljmp
adc
loopne
mov
daa
mov
mov
mov
fs
mov
clc
adc
imul
fimull
mov
test
stc
or
xchg
outsb
aaa
aaa
xchg
negl
jecxz
jno
aaa
sbb
xchg
pushf
fstpt
clc
insb
rolb
cmp
sbb
and
push
outsb
pop
or
out
je
fmull
mov
mov
push
mov
sbb
cmp
test
dec
pop
xchg
inc
jecxz
adc
insb
pop
push
xchg
push
and
in
outsl
pop
pop
es
pushf
pop
jno
int
sbb
cltd
lret
mov
lods
out
pushf
and
push
jl
clc
xor
ret
cmp
xor
xor
jmp
and
lods
inc
jbe
fsubrs
xor
push
xor
lock
and
dec
test
inc
or
push
int3
lahf
mov
aam
push
bound
xchg
jmp
cmp
insl
repnz
sbb
xchg
fistl
out
xchg
adc
std
push
mov
dec
push
cmp
outsl
scas
pop
jbe
icebp
jmp
out
xchg
test
cmp
sub
xor
push
dec
aad
mov
inc
jp
ja
scas
pushl
mov
push
fimuls
mov
adc
xor
in
pop
jae
push
or
xlat
add
pop
fisttps
adc
arpl
mov
gs
stos
les
fistpll
xchg
sbb
or
lods
fmul
imul
sysenter
xchg
popl
cld
mov
das
adc
aaa
add
cli
fadds
scas
push
je
lcall
or
and
cld
in
int3
js
fidivs
mov
xlat
out
fidivrs
pop
and
ret
adc
sub
movsb
xchg
xchg
cmp
lea
add
push
movsl
shll
mov
mov
adcl
icebp
in
mov
loopne,pn
negb
sbb
pop
jne
xor
je
xchg
rcrb
sbb
mov
add
sub
mov
or
jg
sub
mov
neg
in
xchg
icebp
sbb
rclb
pop
iret
mov
mov
pusha
xor
mov
lea
sbb
mov
jl
imul
push
adc
popf
pop
add
aas
dec
mov
xor
add
nop
idivb
inc
arpl
adc
sbbl
jnp
mov
mov
cmpsb
sub
push
je
dec
sbb
mov
mov
xchg
decl
jecxz
push
add
sbb
push
das
add
xchg
scas
rcll
jl
in
jl
jns
xlat
or
gs
in
sarl
mov
shlb
add
pop
inc
pop
int
xor
xchg
aas
inc
push
in
and
aas
or
icebp
push
xor
repz
dec
mov
loope
mov
pushf
and
ss
repz
lock
mov
fwait
inc
fnstcw
in
inc
pop
cmpsl
push
lods
fwait
push
cmp
sar
or
in
ror
push
push
repz
in
andl
inc
mov
mov
jne
mov
adc
jae
jnp
mov
loop
jle
cmp
es
mov
out
insl
fstpl
sub
sbb
ljmp
add
rclb
cmpsl
push
loop
xor
pop
xchg
push
daa
jno
loopne
popf
leave
push
mov
popa
repnz
std
lds
imulb
push
cmp
lods
cld
scas
mov
lods
das
imul
clc
outsb
in
loope
cs
add
fidivs
sbb
out
loopne
icebp
xchg
aam
mov
loope
inc
fs
add
pushf
xchg
jecxz
loop
mov
mov
inc
movsl
sbb
and
sub
stc
call
in
jl
xchg
push
jp
imul
aam
sub
lret
pop
stos
pop
lock
push
lea
adc
inc
sbb
xor
mov
fnstenv
cli
out
mov
pop
adc
int
popa
nop
pop
mov
mov
pop
cmpsb
jmp
adc
insb
push
push
addr16
fcompl
jnp
adc
xchg
in
lret
mov
mov
jmp
lds
sbb
andl
cmp
out
out
push
arpl
pop
mov
jge
addr16
test
push
mov
aas
test
and
imul
mov
fiaddl
icebp
and
inc
int3
push
inc
cmp
lret
cs
dec
sbb
mov
cwtl
sahf
push
sbb
xlat
adcb
sub
sub
dec
ret
xchg
ds
push
ja
mov
sub
fmull
add
push
jb
decl
movl
or
popa
insb
mov
xchg
pusha
push
add
fcompl
loopne
adc
sti
notl
mov
xlat
sub
call
bound
pushf
xchg
pop
push
stc
clc
pop
mov
imul
sbb
std
sbb
div
sahf
leave
mov
ljmp
push
jmp
mov
testl
push
push
popa
dec
loopne
lret
pop
add
lcall
insl
dec
sub
jg
adc
das
mov
lea
inc
xchg
cltd
xor
bound
jmp
aad
adc
adc
sub
dec
inc
out
xor
cli
push
sbb
mov
js
push
mov
add
add
add
push
pmullw
mov
adc
lret
gs
sbb
iret
xor
int
cmpsl
mov
pop
cwtl
cli
pop
les
xor
jb
nop
test
mov
add
mov
or
data16
aaa
rorl
scas
ret
and
lea
sbb
mov
pop
fdivrs
scas
cli
mov
dec
or
xchg
push
pop
lea
test
subb
movsl
push
cmc
mov
jns
call
roll
add
loopne
push
mov
fstpt
arpl
mov
sbb
pop
push
and
or
add
add
testb
sbb
xchg
add
fldl
cli
mov
mov
mov
dec
jle
mov
sub
test
in
subb
pusha
dec
pop
sub
movb
xorl
insl
adc
jno
xchg
xor
rolb
cmpsl
loop
ret
mov
pop
ret
pop
mov
repnz
repnz
jo
sbb
fldcw
or
push
test
adc
das
inc
push
fwait
test
xchg
lcall
jecxz
adc
pop
sahf
inc
push
push
jle
jne
sbb
fbld
jb
out
mov
jne
lods
rol
int3
xlat
fwait
inc
rcr
xor
out
in
pop
inc
in
je
dec
in
mov
fsubs
je
outsl
xor
adc
outsb
and
stos
pop
xchg
mov
sbb
cwtl
pusha
fnstsw
mov
mov
add
sbb
mov
ret
sbb
outsb
lret
cmc
ljmp
imul
ret
stos
stos
dec
stc
lcall
int3
cmp
lret
dec
js,pt
and
xor
and
loope
sbb
jmp
pop
test
xchg
mov
outsl
or
adc
cmpsb
stos
dec
mov
adc
sbb
out
outsb
cli
fcmovbe
notb
pop
inc
ret
xor
mov
xchg
mov
add
xchg
add
popf
or
and
push
add
xchg
pop
lcall
xchg
rorb
cs
mov
mov
mov
adcb
sub
add
sub
fdivrs
sub
hlt
pop
ja
dec
mov
pop
inc
pop
fstp
xchg
fbstp
push
pop
jnp
xor
jle
call
mov
leave
sbb
nop
repz
jbe,pt
push
es
xor
loope
popf
pop
repnz
out
or
enter
lods
inc
pop
jae
rcrl
addr16
jge
movsl
push
testb
sbb
ret
movsb
sbb
cmp
shl
or
idivb
cmp
cwtl
sub
mov
push
mov
jge
sub
cmp
subb
cmp
int3
inc
mov
ja
adc
dec
mov
icebp
push
sub
es
mov
lea
add
sti
mov
push
or
cmp
pushf
scas
cmp
xor
sub
lods
sub
inc
rclb
adc
std
adc
mov
imul
arpl
frstor
adc
dec
pushf
lock
outsb
addr16
arpl
xorb
push
push
add
cmpsl
sbb
in
fs
arpl
pushf
mov
or
dec
xchg
vmovss
daa
fdivr
cwtl
mov
jns
jne
shrb
push
lret
dec
sub
icebp
mov
out
xchg
lods
jns
mov
mov
lods
add
mov
mov
push
enter
push
in
mov
rolb
clc
into
cmpsl
sar
mov
inc
mov
jne
push
sub
xor
negb
pop
adc
jo
mov
data16
sub
xchg
ja
in
imul
imul
push
mov
inc
cli
scas
jno
mov
in
add
cmpsl
mov
push
int3
xor
cmp
lds
mov
rorb
cmp
jp
out
cmp
mov
out
cmpsb
lea
out
xor
scas
lret
pop
out
push
adc
pop
adc
xor
test
fwait
add
mov
pmaddwd
lds
sub
cmp
mov
sbb
xor
lods
rclb
pop
cmp
cmpsb
mov
adc
jb
mov
xor
add
cmpsb
inc
sbb
push
aam
xor
xor
sti
sbb
mov
cmp
pop
ljmp
push
jb
mov
idivl
or
lock
sub
fistpll
sbb
push
add
push
pop
cmp
mov
lcall
mov
and
imul
xchg
sarb
dec
push
sbb
in
packssdw
rcrl
push
in
call
and
dec
mov
cld
jecxz
and
sbb
push
xor
es
sub
sahf
mov
jns
out
xor
je
aad
inc
andb
and
clc
lret
imul
push
pushf
pop
pop
out
cs
fsubs
sub
daa
inc
cmp
mov
lods
sbb
testb
pop
cs
add
test
xor
dec
shlb
aaa
mov
dec
fwait
sub
push
hlt
cmp
mov
pop
push
andb
xchg
xchg
lock
pop
cs
lock
jmp
mov
and
in
stc
outsb
pop
nop
xchg
and
sarl
mov
sbb
popa
jno
movsl
inc
dec
cmpl
leave
mov
mov
roll
test
rorb
fidivs
hlt
ret
fidivrl
out
pop
in
adc
repz
out
loop
test
cmpsb
data16
inc
jb
dec
stos
out
mov
iret
and
adc
cmp
sbb
cmp
or
xchg
push
pop
push
cmpsl
or
je
cmp
hlt
adc
testl
and
push
or
jge
mov
fimull
push
and
xor
sbb
adc
inc
cmp
sbb
pop
stc
jge
inc
mov
fbld
or
mov
enter
dec
inc
arpl
inc
and
push
or
adc
test
divb
jl
adc
out
sbb
pop
int
push
js
aad
cwtl
aaa
subb
pop
mov
popa
dec
js
mov
mov
cmp
ficompl
push
movsl
push
aam
inc
xchg
call
push
fnstsw
push
arpl
icebp
add
scas
lret
mov
mov
rcrb
jno
xchg
inc
lock
imul
movsb
cmpsl
loopne
jl
sub
pop
xchg
lret
ljmp
loope
call
mov
or
sbb
add
lcall
xor
xchg
mov
push
fdivrs
push
mov
push
in
fldcw
dec
jmp
and
mov
sti
adc
fs
scas
jle
mov
pop
adc
out
inc
push
cltd
icebp
push
cmp
test
mov
test
lahf
inc
lret
xchg
shr
adc
sbbb
pop
out
jo
push
in
sbb
mov
mov
aam
cmp
out
push
cmpsl
mov
mov
push
test
sbb
mov
mov
cltd
xlat
or
xor
ret
xor
repnz
fsubs
mov
cmpl
mov
jge
int3
xor
int3
mov
jl
cmp
out
and
scas
leave
push
xor
shrb
cmc
adcb
xchg
pop
or
stc
sub
cmpsb
cli
push
sbb
pop
jp
xchg
pusha
leave
mov
leave
inc
inc
adc
adc
imul
fisubl
push
loope
or
incl
and
mov
push
repz
fcom
icebp
das
jb
xchg
cmpb
or
mov
jp
sub
mov
out
adc
adc
leave
ss
xchg
les
dec
cmp
mov
mov
xchg
push
fsubp
xor
xchg
mov
dec
aas
rcll
dec
roll
lret
mov
xcrypt-cfb
cmpsl
and
inc
lcall
add
sbb
movsb
out
mov
ja
xchg
adc
int
dec
lock
dec
shlb
sub
add
lcall
sbb
or
or
in
xchg
fdivrl
jg
mov
scas
add
cmp
dec
push
sub
ja
sti
lcall
lret
pop
jns
inc
mull
mov
loopne
ss
mov
push
sbb
mov
jp
outsb
daa
arpl
sub
lret
sbb
mov
test
ret
fmulp
mov
test
rorl
imul
outsb
jno
mov
cltd
pop
js
pop
lea
stc
out
lcall
vcvtss2sd
loope
aad
imul
ss
ret
xchg
jp
lahf
int
std
loopne
call
add
mov
mov
in
mov
xchg
out
les
mov
divb
ret
out
xor
mov
adc
loop
cmp
xor
outsl
cli
add
out
sahf
test
mov
int
imul
add
lcall
lods
push
push
and
xchg
sub
cmpsl
cmp
movb
pop
inc
lcall
jmp
mov
xchg
xchg
xor
lret
mov
sbb
mov
rorb
fsubrs
mov
sbb
push
cltd
mov
pop
lret
xchg
jge
std
jp
mov
cmp
cmc
xchg
mov
int3
cwtl
bound
cmp
push
xor
sahf
js
or
and
push
pop
sub
es
stc
fistpl
call
cltd
lret
aaa
out
ret
sub
push
inc
jns
call
push
and
pop
jo
inc
fcmovu
add
gs
dec
es
adc
test
mov
add
icebp
xor
mov
in
xor
loopew
dec
sbb
add
aas
lea
movsb
mov
in
or
mov
cmp
inc
outsl
xchg
push
xor
cltd
cmp
and
jg
mov
mov
mov
sub
ds
lods
xor
push
mov
push
push
xchg
fsubs
jns
pusha
dec
aaa
sbb
hlt
add
push
idivl
xor
mov
lods
stos
jbe
data16
add
cli
in
sub
clc
test
pop
push
add
pop
mov
dec
insb
mov
fwait
loope
imul
leave
in
out
cmp
pop
aam
dec
nop
stos
cli
sub
roll
xor
jae
sub
pop
add
hlt
mov
daa
repnz
push
ret
lret
sbb
pop
insl
icebp
fistpll
cmp
add
mov
ficoml
jmp
add
aas
xchg
cld
cmp
call
adc
cmp
xlat
xchg
or
sbb
cmpsl
pop
fnstenv
sbb
ret
movsl
int
push
or
sbb
lcall
xchg
adcb
cs
cmp
jo
in
mov
jns
dec
cmpsb
xor
clc
mov
sub
mov
jb
negb
int
repnz
dec
repz
ret
jge
dec
pop
mov
cld
aam
mov
stos
ljmp
pop
int3
sub
lea
lea
add
cmp
fstpl
jmp
adc
lcall
jge
or
pop
push
rolb
mov
adc
dec
scas
frstor
cmp
addr16
xlat
aad
inc
cld
fidivrs
sub
push
stc
inc
in
ss
xchg
cmovg
jne
addr16
js
cmp
cli
push
mov
popa
mov
roll
jge
mov
mov
add
pop
test
fs
dec
mov
ds
adc
sub
mov
roll
mov
sub
out
stos
aas
ja
popf
sbb
pop
add
fsubl
add
sti
jo
es
sub
dec
cmpsb
cmp
loop
cmp
repz
mov
mov
jmp
dec
stos
pop
and
divl
and
mov
sbb
cwtl
ss
mov
jno
pop
inc
mov
stos
imull
add
imulb
test
pop
push
lret
cmp
sahf
fistl
es
mov
or
pop
cld
ret
frstor
xor
jge
das
push
mov
sub
filds
aad
inc
je
or
mov
cmp
xchg
lods
pop
inc
lret
push
nop
dec
mov
in
cmp
jbe
push
xchg
fsubrp
fs
js
add
aad
or
gs
add
test
cmpsb
and
mov
clc
jbe
jecxz
rcl
call
and
lock
mov
push
call
daa
mov
push
fsub
sbb
sub
cwtl
rorb
fldenv
mov
sahf
loopne
jne
sub
jns
dec
addr16
add
sbb
je
cwtl
std
jp
xchg
xor
push
mov
push
aad
sub
xchg
mov
jnp
mov
lock
je
adcb
mov
xor
in
dec
or
rcrb
loopne
cmp
mov
popf
fiadds
testb
mov
test
fiadds
push
cli
inc
in
mov
mov
std
xchg
lea
in
mov
daa
push
push
in
repnz
in
fdiv
and
popl
icebp
les
xor
jns
jne
aad
sub
mov
data16
fstl
push
popa
push
or
push
and
imul
pop
or
xor
sarb
and
and
scas
xchg
fwait
and
dec
sub
jne
xchg
out
daa
mov
sub
mov
sbb
add
pop
jg
cmp
or
inc
outsl
mov
jge
ret
adc
xor
dec
les
mov
lods
sbb
adc
dec
push
xchg
dec
and
xorb
push
push
outsl
lods
mov
xchg
mov
call
pop
arpl
jb
pop
cmp
in
lea
iret
dec
jmp
sbb
or
stc
daa
orl
daa
cli
sahf
cmpsb
jnp
jge
lds
ljmp
sbb
add
and
mov
pop
rcrb
and
mov
inc
push
mov
out
cwtl
and
iret
repnz
adc
adcb
rcr
inc
out
test
xchg
rclb
sbb
stos
cmp
imul
inc
inc
cvtdq2ps
sarb
pop
js
sub
sbb
hlt
inc
mov
pop
jle
scas
push
bound
cmpsb
mov
push
fisttpl
jbe
insl
je
or
mov
inc
dec
es
mov
push
mov
shll
push
fidivs
mov
sar
mov
sbb
cltd
cmp
pop
in
pop
cmpb
insb
mov
call
xor
lret
fwait
push
push
roll
dec
adc
mov
or
icebp
mov
adc
push
ror
into
mov
mov
pop
fs
mov
jp
sbb
ret
nop
adc
xlat
mov
aaa
adc
sbb
mov
adcb
mov
cld
jmp
mov
cs
arpl
adc
das
and
push
sub
call
mov
sub
jae
add
fdivrs
leave
cmp
pop
pop
adc
out
dec
pop
add
lock
cmp
pop
shrl
push
xchg
call
sbb
cmp
mov
dec
jl
sarb
rol
aas
push
cmp
iret
xchg
outsl
cltd
add
icebp
mov
xor
mov
inc
push
dec
jle
cmp
add
ss
add
ret
add
pop
cs
in
mov
mov
push
xchg
dec
ret
add
lahf
mov
jno
test
fmuls
rcll
out
xchg
in
rorl
aam
pop
add
xor
pop
add
sar
loop
mov
int
rolb
mov
mov
arpl
fisubrl
mov
adc
pop
popf
out
sbb
sbb
mov
mov
lahf
mov
mov
dec
adc
pop
mov
dec
aam
adc
test
imul
fdivrs
daa
addr16
ljmp
aam
std
jge
roll
pushw
or
sbbb
mov
jl
in
popa
aam
inc
out
sbb
iret
lret
pop
jnp
fisttps
mov
mov
out
popf
mov
cmp
je
dec
jmp
sub
xchg
sbb
mov
sub
push
sub
shlb
sbb
jmp
lahf
arpl
or
xchg
xor
jg
push
lcall
pop
mov
pop
cmp
dec
add
es
mov
rcll
je
popf
inc
xchg
add
out
or
add
mov
mov
jae
repz
into
add
clc
xor
jb
mov
sarl
jp
pusha
popa
ficoml
push
ret
aas
dec
adc
sbb
sub
push
fwait
cmp
sahf
adc
sbb
out
imul
mov
mov
dec
lods
lret
xchg
adcb
mov
cmp
imul
clc
sub
das
sbbl
mov
or
pop
int3
movsb
std
xchg
mov
cltd
jne
cmp
divl
fcomp
pop
gs
sub
push
daa
mov
adc
fmull
jno
out
fistpl
dec
jns
or
je
pmulhuw
in
sbb
imul
shrl
sbb
idiv
ss
or
adc
stc
lea
inc
call
aas
test
mov
lcall
add
out
test
mov
sub
sbb
js
push
lcall
add
fstpl
aas
aad
stos
or
cltd
and
cltd
sub
dec
test
rolb
add
jl
jp
sahf
mov
fiadds
xchg
ficoml
call
mov
aad
gs
cmpsl
test
sub
jne
cltd
out
xchg
cmp
dec
std
imul
sbb
sarw
jle
sub
ss
rcr
je
mov
or
je
fwait
push
loopne
xlat
sbb
rcpps
outsb
clc
js
jp
jae
loopne
aad
push
inc
out
mov
popa
fucom
sti
jge
and
inc
clc
enter
lds
dec
fstpl
sbb
scas
icebp
std
movsl
in
sub
fldl
fdivr
sub
mov
aam
clc
jnp
adc
lcall
imul
jle
cmp
pop
lds
decb
and
push
xchg
shl
out
ficompl
pushf
scas
and
mov
rcll
sti
xor
jb
aas
call
push
mov
jg
sahf
movsl
pop
andb
sub
cmpsl
and
mov
lods
adc
insb
fidivs
in
sbb
repz
fistpll
or
nop
ret
or
adc
cmp
lret
mov
sbb
or
iret
sub
mov
push
xorb
cmc
insb
push
jp,pt
and
or
xchg
jno
mov
lret
popf
in
mov
xchg
popa
pop
push
out
xlat
stos
fsubl
or
add
jecxz
lds
jbe
enter
mov
and
adc
jne
repz
dec
in
mov
arpl
fisubrl
call
push
or
int
cli
aad
loopne
and
int
push
inc
mov
outsb
push
outsb
popf
hlt
pusha
inc
data16
sahf
mov
fildll
jo
add
cltd
test
lock
or
das
sti
mov
xor
scas
xchg
aaa
mov
aad
stos
push
cld
and
iret
pop
sub
std
movsb
mov
adc
xchg
testl
addr16
lds
lea
cli
std
sbb
fldt
mov
shl
call
or
mov
arpl
or
leave
pop
fsubs
pop
cmpsb
das
cld
test
pop
sbb
mov
push
pop
mov
cld
push
dec
xlat
mov
pushf
mov
sarb
cld
mov
mov
pop
out
mov
xchg
or
aad
push
jp
adc
pop
pop
xchg
xchg
pop
and
into
test
scas
mov
pusha
jmp
push
adc
and
inc
repz
mov
or
mov
xor
scas
nop
movsb
dec
in
mov
adc
push
mov
rcll
daa
sti
cmp
mov
inc
test
sbb
in
enter
adc
push
xor
cmp
sbb
aam
push
dec
es
sub
add
rcl
pop
fldenv
cs
xchg
pop
lods
lods
xchg
add
cli
rol
xchg
call
stos
stc
push
jg
mov
arpl
in
aam
push
pusha
mov
sbb
or
sub
xchg
into
cmc
in
jns
mov
jne
sbb
dec
adc
scas
add
adc
fisubl
sbb
xor
out
mov
jae
jmp
push
cmp
dec
in
push
adc
mov
cli
popf
mov
sahf
js
stos
sub
adc
loopne
lret
ds
insb
mov
les
dec
hlt
or
ss
sub
fiadds
cmp
jbe
pushf
stos
xchg
mov
movsb
and
mov
ret
adc
cmp
fs
stos
in
and
lahf
push
adc
iret
adc
aas
popa
push
scas
cltd
testb
bound
mov
mov
or
mov
push
push
jge
lds
xchg
pop
and
inc
shll
lods
push
lahf
pop
fmuls
lods
mov
jbe
inc
pushf
or
cmp
fdivs
jg
jo
jnp
jmp
imul
cmp
iret
push
push
ffreep
imul
xchg
sbbb
dec
mov
sbb
xor
cwtl
jns
mov
and
ds
leave
sub
mov
or
loopne
ror
pusha
pop
das
cltd
in
mov
arpl
lret
stc
push
mov
or
int3
push
jp
or
into
nop
bound
pop
aas
and
stos
popf
mov
into
test
loope
adc
aaa
cmp
pusha
cmp
inc
popf
out
mov
enter
inc
sub
jns
pop
pop
push
shll
adc
jmp
mov
int
addr16
xor
push
lret
inc
fisttps
sbb
lret
int3
pushf
stc
jge
mov
xchg
pop
mov
pop
inc
push
addr16
insb
iret
movl
mov
cltd
cmpsb
icebp
push
dec
inc
adc
es
sub
sarb
cmp
cmp
cmpb
lcall
pop
inc
mov
mov
sub
lahf
mov
es
jne
push
pop
inc
or
fs
cmpsl
jecxz
pop
fldlg2
loop
mov
dec
cmpsb
subb
mov
shr
sbb
jmp
jl
and
cld
mov
mov
dec
leave
push
mov
pop
mov
mov
add
xchg
test
test
js
push
pop
out
mov
popa
lods
jbe
push
or
loop
adc
and
pop
pop
addr16
leave
mov
or
aaa
sbb
push
dec
sub
pusha
cld
iret
or
pop
add
dec
push
push
out
push
cmp
adc
push
inc
iret
shrl
jns
push
lret
je
out
jb
idivl
xchg
push
sti
mov
lcall
lods
out
sub
ss
inc
xchg
cltd
inc
push
lahf
push
adc
jl
sbb
dec
dec
add
jne
test
clc
sub
inc
scas
pop
test
mov
inc
stos
dec
sahf
stc
and
daa
jp
push
sub
adc
or
jo
hlt
lods
xchg
inc
fists
jb
sub
cmp
lds
pop
ja
and
imul
jp
push
xor
and
or
lea
cmp
adc
cmp
fcoml
jne
in
aad
sbb
sub
bound
dec
or
sub
jo
popf
stos
lcall
icebp
push
imul
inc
mov
cmpsl
int
and
xchg
or
popf
cs
jmp
int3
std
cmp
push
ret
fcompl
arpl
mov
cmc
call
cmpsb
mov
iret
jmp
mov
rorb
mov
mov
inc
ljmp
push
jmp
inc
mov
out
pop
addr16
rol
sti
inc
xchg
adc
loopne
sbb
daa
mov
leave
fwait
sub
ljmp
bound
pop
add
jp
adc
lock
out
aad
cld
inc
call
into
rolb
out
jno
popa
push
psllq
test
rol
sbb
sbb
xor
orb
cmp
sar
jl
mov
jmp
iret
lret
pop
rol
pop
andl
out
push
cmp
inc
pop
sbbl
and
orb
mov
push
and
or
add
orb
fstpt
push
in
jge
mov
hlt
dec
sub
push
nop
inc
ljmp
je
dec
push
ss
xor
add
pop
pushf
inc
xor
vpunpckhqdq
fmuls
pop
movsl
jge
gs
pop
and
jbe
dec
stos
jg
cmp
lret
push
cmpsb
nop
cmp
jp
ljmp
sub
rolb
sbb
aad
xor
aam
mov
outsl
mov
clc
scas
mov
pop
and
and
sbb
sahf
mov
mov
inc
pop
rorl
loope
xor
leave
inc
mov
xchg
pop
or
hlt
dec
movsb
nop
mov
jg
into
loop
xchg
out
mov
je
imull
mov
sub
shll
xchg
std
shrl
sbb
jecxz
sub
iret
adc
out
mov
dec
xchg
xor
int
aam
mov
xchg
mov
sarb
cld
sub
cmp
daa
mov
add
push
cmp
ds
std
mov
mov
roll
in
jp
jmp
push
push
jl
imul
mov
mov
std
xchg
loopne
int3
dec
push
push
xor
loope
jo
addr16
push
sub
sub
pop
mov
cs
sbb
or
xor
gs
clc
xchg
int3
pop
xchg
sub
cmp
push
dec
scas
test
test
jl
call
pop
es
roll
cmpsl
cmp
push
inc
xchg
daa
sbb
mov
jge
xchg
xchg
insb
icebp
mov
adc
sti
fsubl
inc
cwtl
or
decl
add
inc
sbb
lods
pop
dec
fmull
lretw
jmp
lahf
sub
loopne
enter
cmp
imul
sub
ds
push
adc
out
imul
cmc
push
lret
pop
adc
in
mov
mov
pop
mov
fcmovnu
and
inc
xchg
sub
mov
lds
cmc
out
fists
xlat
mov
add
mov
ss
cs
inc
imul
fwait
sbb
loop
lahf
mov
mov
popf
xlat
into
cmp
sbb
in
inc
fstp
movsl
jmp
in
es
in
jae
pop
push
pop
out
std
cmp
push
aad
pop
clc
and
lret
pop
mov
and
lock
xor
aad
xchg
xor
cmpsb
adc
sbb
cmp
pop
cltd
jae
or
dec
sub
insb
leave
out
scas
out
inc
repnz
push
ja
fisttps
inc
and
jl
jns
pop
dec
push
test
or
mull
addr16
test
or
xor
xchg
mov
cs
dec
xchg
add
stc
xlat
sbb
imul
mov
popf
add
out
pop
clc
daa
pushf
jae
xchg
cltd
out
insb
jae
in
lret
ja
lock
imul
sbbl
mov
push
or
dec
mov
inc
pop
imul
jle
push
jg
inc
push
jne
setl
cmp
dec
into
adc
push
cli
mov
inc
jbe
xchg
scas
xlat
in
je
add
fs
push
jae
mov
pushf
test
jecxz
adc
jle
push
lock
call
pushf
pop
dec
repnz
cld
or
loopne
cmp
jno
jmp
fcomps
repz
add
mov
ret
fstpt
cwtl
fimuls
pop
sub
mov
jecxz
cmc
push
arpl
push
lock
addr16
aad
mov
mov
das
out
cli
sbbb
scas
outsl
adc
sbb
adc
fldt
in
shll
or
adc
xchg
jl
incl
pop
in
imul
inc
xchg
ss
jne
push
fisubrs
data16
mov
mull
fistps
push
xor
ds
ret
inc
fstp
xchg
mov
or
int
jb
push
lcall
inc
insl
jnp
int3
jnp
mov
adc
pop
adc
jno
xor
outsl
out
jbe
bound
sub
outsb
mov
stc
cmp
lods
jns
into
pop
daa
adc
neg
les
xchg
sarb
lods
mov
std
dec
adc
loopne
stos
adc
sbb
and
or
cmp
cltd
ror
call
cmp
inc
jge
sarl
stc
sub
leave
icebp
repnz
movsl
cmp
xchg
jecxz
jecxz
mov
bnd
scas
sahf
fsubrs
aas
imul
adc
ret
incb
aam
mov
sub
rclb
int3
and
add
xorb
out
into
jno
stos
dec
mov
jge
xchg
push
dec
push
leave
xchg
shrb
insb
call
inc
cmpsl
pop
mov
hlt
pop
mov
add
xchg
mov
push
push
pop
out
push
xchg
jl
in
out
pop
jno
dec
inc
dec
jnp
aam
mov
xchg
mov
lcall
movq
jo
mov
and
pop
jnp
push
sub
subl
mov
adc
imul
xchg
jmp
jg
cmp
sbb
jl
dec
push
fisttpl
pop
cmp
into
int3
jg
fnstsw
pop
call
add
fisubrl
out
push
inc
lds
stos
mov
push
test
xor
adc
dec
movsb
pushf
xor
ret
mov
idivb
xchg
adc
loopne
jp
sub
test
rcr
sarb
jnp
outsl
int
es
test
sub
shl
sbb
addps
fiaddl
and
ss
ret
pop
cld
or
jle
push
addr16
stos
xor
call
mov
xchg
mov
jle
subl
mov
int3
lea
pop
pop
sar
ret
je
loope
add
cmpl
dec
pop
ss
mov
mov
or
adc
inc
fcoml
loope
lcall
int3
push
sbb
and
rcll
out
lcall
or
xor
cs
adcl
or
mov
inc
dec
lret
ja
sbb
icebp
mov
dec
fs
push
movsb
pop
mov
adc
add
mov
into
add
bound
jo
cmp
jns
push
notb
mov
dec
mov
lcall
jo
xor
cmpsl
lods
jo
stos
pop
lret
dec
jb
das
pop
push
jne
jns
jp
and
mov
scas
lret
call
int3
jle
arpl
test
or
push
pop
mov
xchg
push
dec
insl
push
ror
outsl
jmp
xchg
xor
or
shrl
insl
dec
mov
and
push
adc
push
jmp
inc
jecxz
mov
rorb
jb,pn
xchg
xchg
addb
and
push
mov
mov
adc
inc
jne
shl
add
scas
cltd
cmp
dec
push
adc
mov
xchg
mov
leave
cs
cmpl
xor
je
shl
jmp
test
sub
jo
push
push
stc
mov
xchg
gs
shl
push
sbb
cld
movsl
mov
adcl
stc
into
scas
cld
jge
notb
push
sub
xor
xor
data16
repnz
mov
mov
xchg
or
imul
mov
in
rclb
dec
or
pop
cltd
insl
xchg
jnp
xor
and
fcomi
mov
cmp
ljmp
push
pop
mov
jge
and
mov
sbb
xchg
add
jae
insl
dec
push
movsbl
scas
jecxz
xchg
mov
mov
add
fdivrs
cmp
addl
cmpsb
dec
push
pushf
int
cltd
stc
jb
movsb
push
jno
insl
jl
jno
jecxz
fidivrl
jns
lods
pop
dec
xchg
in
shll
rcrb
sbb
lret
add
push
sub
mov
aas
rcrb
negl
dec
cs
push
mov
rcrb
arpl
jne
std
inc
mov
or
push
ret
sub
dec
movsl
rcl
rcr
in
mov
add
xchg
mov
mov
dec
lret
dec
xchg
mov
dec
je
adc
mov
jmp
imul
xchg
mov
dec
and
adc
orl
loop
andb
xchg
cmp
fs
frstor
fwait
out
lahf
cpuid
cmp
mov
push
mov
lret
fmuls
dec
adc
adc
roll
mov
cmp
test
cmc
adc
mov
pop
jb
mov
xlat
lcall
push
les
lret
cmp
mov
sub
sbb
icebp
mov
movsl
arpl
pusha
cmp
mov
fiaddl
add
xchg
jae
lods
pusha
pop
dec
mov
addl
lret
aaa
shrl
dec
call
mov
loope
fistpl
imul
cmp
les
jecxz
push
call
loopne
dec
add
cwtl
push
mov
and
cmp
pop
mov
mov
outsb
movsb
jle
pop
sbb
jo
ja
ljmp
test
data16
push
mov
icebp
mov
cmp
or
dec
cmpsb
rclb
jmp
pop
push
sub
xchg
sbb
and
lcall
mov
pop
cmpsb
mov
cli
ret
daa
cwtl
pop
adc
movsl
push
in
pop
stos
es
sub
and
mov
sbb
dec
outsb
adc
mov
or
loopne
mov
xchg
test
cwtl
daa
dec
or
aam
insl
iret
xchg
xchg
adc
lods
push
ficompl
mov
xor
pusha
push
js
in
mov
lret
into
dec
dec
or
xorl
std
jmp
stc
bound
ds
pop
lock
sub
sarl
dec
jne
mov
mov
xchg
inc
mov
out
xchg
les
movsl
or
jne
and
mov
dec
mov
leave
xchg
cmpsb
fwait
push
jl
add
push
cmp
lds
gs
mov
js
pusha
mov
xor
test
orl
mov
xchg
inc
inc
mov
inc
rcll
jo
mov
mov
test
test
sbb
or
adc
inc
filds
repz
pop
mov
lcall
daa
fs
test
scas
cmpsl
sbb
outsl
jb
movsl
mov
cmpsl
daa
stc
cmpsl
loopne
dec
pusha
pminsw
insl
xlat
mov
sbb
inc
arpl
push
outsb
out
dec
insb
daa
pop
rcr
aam
push
mov
aam
sarb
stos
stc
pop
out
fidivrl
mov
lock
cli
clc
outsb
in
enter
sbb
cli
ficoml
gs
dec
add
popa
xchg
push
call
mov
sarb
pop
lock
xor
add
repnz
outsb
pop
mov
inc
imul
mov
fistps
test
sub
int3
and
fcomps
sti
mov
pop
mov
sarl
xchg
test
xchg
push
jg
mov
repnz
int
out
jle
mov
mov
sbb
add
aam
cltd
popf
cmp
divb
loope
aaa
jge
sub
ss
insl
sub
jne
lock
leave
mov
movsl
rclb
add
push
dec
sti
aad
or
and
outsl
cmpsb
mov
adc
cmp
rclb
cmpsb
add
in
push
or
mov
xchg
sbbl
ss
push
push
add
xor
inc
adc
repz
mov
sbb
loop
xor
jno
mov
inc
push
xor
xchg
ret
pop
notl
inc
and
xor
push
addb
cli
mov
fwait
addr16
mov
stc
mov
mov
dec
aad
aas
subl
enter
dec
jmp
std
repz
int
mov
xchg
rcll
ljmp
cmpsb
lds
jno
jno
jnp
sub
dec
arpl
mov
in
scas
and
roll
pop
mov
pop
cmpsb
push
xchg
fdiv
or
pop
mov
dec
js
xchg
and
lret
or
pop
adc
jmp
xchg
inc
mov
pop
test
data16
push
and
pop
movsl
adc
insb
inc
cmp
jg
sbb
jo
fidivrs
push
xor
shld
mov
cmpsb
xor
mov
jno
sbb
mov
int3
push
jmp
loopne
pop
cmp
in
mov
fwait
mov
inc
push
popf
lods
lahf
cld
adc
lret
push
mov
adc
jge
fwait
enter
cltd
imul
fs
jnp
int
fadd
push
mov
xchg
test
es
movsb
imul
clc
mov
sbb
test
push
insl
jno
aad
pop
jg
stc
jnp
inc
cld
pop
insl
inc
ret
xor
int
popa
enter
loope
dec
inc
mov
mov
sub
and
xchg
inc
popf
icebp
sub
stos
outsl
aaa
nop
sub
sbb
int
inc
pop
and
mov
outsb
lcall
mov
jo
cwtl
xchg
fwait
out
xchg
xchg
mov
xorb
pusha
ljmp
je
aas
adc
sbbl
stc
xchg
rcll
adc
or
out
sarl
imul
shl
sarl
pop
adc
clc
push
or
lods
into
push
test
mov
dec
jge
pop
ljmp
dec
add
sti
inc
loopne
sti
add
pop
out
jno
mov
lea
ret
mov
faddl
shll
notb
push
xor
mov
xchg
inc
cld
xchg
push
clc
ss
frstor
test
test
mov
nop
addr16
cld
mov
aam
sub
jle
aaa
aad
jne
icebp
scas
leave
out
cmpsl
mov
inc
xchg
hlt
fldt
inc
jge
maskmovq
testl
icebp
mov
xor
jno
addb
sbb
cmp
jmp
js
jge
fbstp
pop
les
in
test
sbb
imul
clc
stc
pop
cld
jb
repz
iret
sbb
or
xchg
sub
shrb
pop
mov
add
jne
xor
arpl
loopne
xchg
mov
xchg
daa
sub
int
cmp
lret
jno
cvtdq2ps
inc
call
movsl
test
shrl
or
shlb
lret
test
xor
scas
dec
dec
int3
ret
stos
out
mov
mov
fwait
cvtps2pi
push
into
mov
xor
push
sbb
cmp
sarb
ja
push
jecxz
and
dec
shlb
mov
repz
sbb
nop
cmp
repnz
push
dec
icebp
or
mov
cmp
into
idivl
xchg
out
pop
pop
mov
mov
dec
mov
push
inc
sub
mov
fdivrs
xchg
dec
adc
mov
mov
incb
mov
and
mov
movsl
aad
outsl
scas
xchg
push
push
mov
jae
dec
mov
movb
mov
shlb
mov
sub
neg
out
push
xchg
das
push
lahf
in
xor
jmp
inc
mov
mov
mov
pop
push
cmp
push
mov
adc
sbb
and
pop
into
sar
sub
cld
jmp
movsl
lock
inc
cs
popf
stos
daa
sbb
std
mov
lock
or
xchg
mov
clc
xchg
mov
lea
jecxz
dec
cmpsl
xchg
les
pop
push
ficoms
andb
inc
notb
sub
jo
ja
insl
stos
add
stc
mov
xchg
sbb
pop
out
xchg
pop
mov
fs
dec
fstps
sbb
pop
push
cli
stos
ja
insb
adc
pop
sbb
xchg
lods
cltd
adc
xchg
out
das
xchg
push
adcl
ret
add
repnz
dec
in
xor
testl
cmpsb
push
or
and
dec
or
adcb
jg
pop
insl
sub
ljmp
or
mov
mov
adc
loop
push
and
cmp
add
scas
cmp
cmp
xchg
aaa
dec
leave
call
add
pop
test
mov
cmp
in
jle
adc
mov
pushf
je
lea
mov
movsl
mov
data16
ret
ret
mov
int3
icebp
mov
jns
pushf
pop
fdivs
ss
shrl
dec
sub
pop
nop
lock
nop
addr16
fsubr
or
sarb
shlb
inc
cmp
stc
repnz
das
pop
sub
jecxz
rcl
andl
pop
imul
xor
xor
cmc
outsl
sbb
or
cmp
in
lea
in
xchg
push
pop
icebp
and
jnp
adc
aam
fisttpll
sbb
fcoms
fisubrl
jnp
cli
inc
inc
repnz
pop
xor
cmpsb
xchg
in
in
pop
xchg
fimull
cmpsl
or
xor
in
mov
in
inc
outsl
cli
jg
push
pop
dec
push
adc
cmp
leave
rcrb
sahf
jle
pushf
scas
sbbb
jnp
fldl
sbbb
mov
in
mov
or
inc
sub
jb
and
inc
data16
adc
stc
rorb
jno
test
cmpsb
push
in
jmp
sub
mov
mov
xchg
in
add
push
ret
lcall
pushf
jg
push
and
pushf
sbb
push
xchg
movsb
test
push
movsl
js
hlt
inc
mov
shll
orb
xor
pop
movsl
mov
out
imul
scas
xor
jo
push
cmp
dec
lock
shl
push
add
xchg
mov
mov
je
cmp
aad
jl
int3
aaa
lock
int3
call
pop
fstpl
je
sub
les
jecxz
fisttpl
push
out
rolb
test
add
push
mov
jbe
xor
bound
xor
sbb
out
push
lods
rclb
nop
sub
js
jae
mov
test
jp
inc
loope
movsl
rorb
pop
dec
mov
add
mov
mov
sbbl
adc
xor
xor
xchg
cmp
insl
imul
xchg
je
dec
pop
cmpb
xchg
push
clc
dec
lods
cmp
mov
pop
sbb
push
cltd
int3
pop
inc
push
mov
jmp
push
xorb
pop
cltd
inc
cltd
adc
insl
jge
pop
outsb
jl
sub
test
int3
mov
mov
imul
cmpsl
jle
clc
mov
ud0
sub
dec
push
nop
jl
fdivrl
aas
jg
adc
cmp
push
push
push
fistpll
cmpsl
mov
pusha
aam
imul
sbb
dec
mov
ja
gs
sbb
rcll
pop
sbb
mov
lods
repnz
ret
add
sbb
negl
mov
mov
add
stos
xchg
scas
fistpl
ret
shll
sub
xor
stc
xor
mov
xchg
adc
xchg
cmp
inc
data16
leave
mov
stc
inc
in
jne
stc
in
mov
mov
xlat
push
test
in
add
cmp
out
aas
mov
mov
jl
jns
mov
sub
push
divb
sub
rcll
push
adc
idivb
fistpll
pop
test
cmc
fimuls
sub
je
dec
js
xchg
bound
or
shll
call
arpl
ficoms
aas
leave
bnd
out
pop
sub
xor
mov
mov
lahf
jns
push
adc
jne,pn
xor
and
and
pop
pop
gs
mov
add
jnp
enter
rcll
cmp
out
mov
jecxz
pop
jo
lock
iret
mov
xchg
sbb
cmp
stc
ret
leave
push
bound
outsb
mov
sbb
scas
push
movsb
movsb
sub
fmuls
mov
push
jne
xor
push
mov
test
sub
mov
fisttpll
mov
in
adc
sbb
mov
rolb
icebp
cmc
mov
lds
mov
icebp
jmp
mov
inc
cmpsl
dec
lcall
cmp
pop
popa
insb
sbb
add
and
in
lcall
test
pop
push
test
cld
pop
lds
xor
gs
stos
mov
leave
into
and
adc
pop
pop
push
jnp
je
push
lock
imul
shlb
aas
xor
cmp
xlat
sbb
dec
mov
ret
pop
xor
ja
outsb
xor
and
popf
sub
push
cwtl
pop
sub
das
imul
dec
pusha
out
sbb
gs
push
out
xor
jb
scas
sub
out
sbb
xchg
jno
and
mov
rolb
lea
loop
frstor
repnz
jnp
repz
orb
ss
out
jno
sti
pop
push
std
pushf
mov
push
mov
jecxz
stos
sbb
lcall
mov
jl
pop
in
leave
in
inc
jbe
and
jo
fsubs
pushf
dec
orb
pop
call
cmp
rolb
shrb
xor
popf
sbb
jmp
xchg
scas
out
adc
jmp
movsl
bound
inc
sbb
jno
lret
inc
or
xchg
sbb
xlat
out
push
out
arpl
enter
sahf
sub
stos
jnp
add
mov
out
cmp
xchg
jno
cmc
adc
add
shrb
test
js
stos
cltd
lea
sbb
notb
sub
sarb
cmp
mov
mov
sbb
cltd
pop
push
test
test
rolb
cmp
stos
enter
js
pop
movsb
fiadds
out
cmp
push
add
add
jle
enter
xor
sbb
and
addl
mov
sub
out
clc
mov
inc
test
or
daa
jo
icebp
jbe
nop
or
cmpsl
mov
loope
test
jl
jecxz
lea
out
cmp
pop
pop
push
and
add
push
or
mov
ss
aas
xor
jecxz
push
pcmpgtw
lahf
lods
mov
mov
add
jge
mov
stc
cmp
call
mov
push
imul
hlt
sub
in
pop
in
loope
xor
sbb
xchg
xor
and
addr16
pusha
int3
std
xor
sub
pushf
sahf
loop
das
mov
mov
inc
lock
out
jb
xor
ficoml
and
ret
mov
pop
rorb
add
mov
cmpsb
add
clc
dec
mov
ficoms
and
movl
mov
daa
pusha
mov
xchg
out
xor
hlt
cmpsl
pop
cwtl
inc
or
iret
stc
push
pop
mov
insb
mov
push
jmp
push
cs
ja
outsb
jecxz
sahf
push
aam
scas
cld
add
shrl
insb
jne
cltd
clc
dec
cmpsb
xor
lea
movsl
pop
outsl
or
loop
push
daa
sbb
jle
and
mov
or
sbb
loopne
out
xlat
lods
icebp
and
cmc
adc
call
push
xlat
iret
jge
push
rcll
sbb
icebp
jnp
test
lret
sbb
dec
fistpl
movb
pop
push
pop
js
icebp
lds
push
pop
mov
xor
inc
mov
ficompl
jb
dec
cmp
ljmp
inc
push
xchg
inc
mov
pop
cmpsb
push
jg
cmc
orl
insb
subl
in
mov
cmp
or
pop
adc
rcll
je
xchg
push
xor
hlt
icebp
insb
xchg
dec
mov
cmp
inc
pop
inc
sub
in
arpl
outsb
xor
mov
sbb
pop
fdivs
pop
xlat
sub
mov
insb
sbb
ss
pop
bound
jmp
imul
loopne
lahf
in
into
and
cltd
add
loop
das
push
mov
rorl
push
in
inc
loopne
push
lahf
in
enter
sbb
fwait
mov
lcall
push
je
dec
mov
jb
jp
pop
pop
xor
mov
mov
nop
lock
adc
and
shl
mov
shl
ljmp
xchg
pop
rcrl
scas
je
dec
mov
pop
sub
mov
into
lahf
mov
test
je
out
fadd
pop
daa
sarb
cs
jnp
loop
jbe
or
or
inc
mov
sbb
jp
dec
xlat
cmp
add
xchg
xor
inc
rorb
scas
jns,pt
jae
in
loopne
rcll
xchg
ds
lahf
aad
xor
xchg
jmp
inc
xor
jle
pop
frstor
mov
rcll
loopne
pop
add
jns
insb
jp
push
incl
mov
movsb
xor
stos
push
insl
rorl
dec
sbb
fcomp
and
je
jge
xchg
int3
push
in
lret
scas
test
push
dec
jecxz
cmpsb
sbb
xor
cmpl
cmp
clc
dec
and
dec
push
pop
push
sub
ljmp
mov
inc
fdivrl
mov
loopne
clc
jmp
xor
outsb
mov
sbb
inc
and
pop
sub
cli
xor
xor
dec
ljmp
dec
lret
inc
ss
push
fsubr
out
push
jp
stos
jg
or
xchg
jne
jecxz
lock
sbb
mov
adc
icebp
in
scas
repnz
repnz
cmp
and
or
cli
mov
les
xor
int3
cld
xlat
out
enter
and
mov
pop
icebp
dec
sbb
push
insl
inc
dec
popa
mov
pop
inc
mov
cmp
add
inc
std
inc
mov
add
mov
nop
scas
lret
sbb
cmpxchg
pop
addr16
test
mov
mov
rcl
cmpsb
mov
cmovae
repnz
sub
jnp
jge
clc
sbb
mov
mov
push
loop
sbb
test
xchg
xchg
jge
xlat
mov
mov
scas
std
add
insb
xchg
mov
sti
out
sbb
pop
call
mov
cmp
imul
mov
jmp
outsb
cmp
or
fcmove
jmp
sahf
fidivrl
add
xchg
cmp
mov
pop
and
outsb
mov
inc
xor
ljmp
inc
test
jmp
jb
pop
push
sbb
out
imull
inc
addb
or
jb
jg
pop
push
out
test
xor
xchg
mov
add
ret
int
dec
add
cwtl
pop
push
dec
or
sahf
icebp
xchg
dec
fdivs
ret
cmp
lods
icebp
cwtl
mov
aad
scas
push
iret
ret
push
insl
subl
jl
sysenter
pop
cmp
xor
sbb
popf
cmp
rcl
cmp
jg
mov
jb
test
bswap
pop
inc
add
mov
fcmovbe
cmpsb
pop
bound
xor
test
xchg
outsb
adc
cwtl
xchg
adc
push
dec
add
mov
aad
jmp
out
popf
mov
scas
fnstenv
out
mov
shrd
cmovle
repnz
xor
sbb
cs
add
mov
ror
cmp
xchg
rcl
push
daa
jno
into
jecxz
mov
pusha
aam
testl
pop
xor
pop
stc
outsl
push
sbb
mov
and
add
rcrl
mov
outsl
and
sbbb
jo
jae
pop
sbb
aad
andps
dec
xchg
lods
lahf
or
mov
shlb
pusha
movsl
adc
popf
push
pop
mov
cltd
mov
iret
mov
fcompl
loop
jmp
out
jp
cmpsb
mov
in
push
xor
mov
mov
adc
js
and
rcll
xchg
push
dec
in
pop
add
mov
inc
mov
out
inc
data16
push
sbb
popf
je
es
data16
sub
clc
push
mov
adc
pop
push
cmp
insb
push
pop
push
pop
jp
pop
shll
cmc
fsubrp
sub
adc
in
lds
lcall
adc
mov
test
pop
shll
adc
cltd
hlt
mov
loop
adc
outsl
rcrl
fisubrl
out
xchg
and
in
push
xor
addb
lock
in
clc
popa
xchg
enter
sarb
shll
fsubrs
pop
not
leave
lcall
or
subb
movsl
sbb
xor
dec
popa
push
addr16
add
pop
fsts
add
scas
jb
je
pop
mov
jp
mov
push
sbb
xchg
cmp
jp
or
addr16
sbbb
pop
xor
inc
dec
test
pop
test
in
jp
scas
loopne
mov
jno
lret
push
xor
loopne
push
cwtl
jnp
xor
jmp
lods
sbb
sti
mov
jnp
push
push
out
dec
loop
dec
and
jo
inc
in
and
fsubrs
mov
fstpt
int3
xchg
fdivrp
or
jge
xor
testl
inc
xlat
iretw
lret
stc
xchg
bound
fnsave
sbb
pushf
jl
jecxz
roll
and
shl
mov
js
mov
mov
push
stc
rcrb
add
call
fisttpl
jns
sub
in
adc
mov
cmp
add
iret
loop
pop
dec
mov
sub
cs
xchg
dec
test
lds
ja
insl
xchg
fistl
and
sub
movb
lret
inc
xchg
stos
aas
mov
stc
ret
addr16
popa
dec
fistl
scas
aam
xchg
leave
daa
adc
push
adc
push
insl
jb
aad
pop
negl
lods
daa
lret
cmp
push
jne
fwait
aad
push
ja
fbld
jbe
adc
jle
mov
nop
sarb
inc
pop
lea
xchg
lret
push
or
jnp
enter
mov
mulb
cmc
xlat
jp
out
sub
lahf
fwait
inc
lahf
popf
add
adc
cmp
fwait
cltd
fcoms
outsb
xor
movsb
imul
repnz
ret
jg
cmp
cmp
aam
fldt
sbbb
pushf
mov
notb
fdivl
repnz
mov
mov
jge
dec
lea
dec
inc
sub
or
pop
fstp
addr16
aaa
push
into
sub
addb
and
je
loope
and
lods
mov
je
dec
rcrb
arpl
xchg
adc
jbe
mov
cmc
imul
pop
jl
mov
xchg
inc
lock
call
xor
sarl
mov
mov
aaa
mov
cmp
loop
add
push
clc
outsl
shl
add
jp
divps
sbb
pusha
push
sahf
dec
xor
adc
jo
cmp
mov
and
jbe
dec
cmp
push
mov
xchg
pop
ret
cld
fsubl
jle
hlt
mov
movsl
cltd
or
scas
neg
push
in
aas
or
aas
pop
or
mov
fisubrl
adc
adc
lds
lcall
mov
pop
in
mov
sub
cs
and
ljmp
cmp
adc
in
stos
pcmpgtw
lahf
insb
push
test
pop
cli
negb
xchg
in
cwtl
add
outsl
sbb
xor
test
cmp
and
pop
mov
inc
sarl
sti
mov
pop
inc
stos
inc
test
xchg
and
pop
xorb
mov
jns
add
xchg
push
sbb
and
mov
ret
cmp
fcmovnbe
adc
or
fdiv
sahf
lcall
xor
in
adc
xchg
xchg
pop
mov
fisubl
das
test
mov
push
aad
pop
fbld
mov
je
push
fadds
dec
pop
mov
pushf
jp
fmulp
rorb
sarl
mov
or
push
cmc
loop
lcall
je
cli
pop
frstor
js
lcall
push
fs
sub
cmp
adc
lods
pop
lods
lcall
loop
ja
lods
pop
lds
xchg
jp
pop
adc
add
xor
lods
mov
xchg
gs
hlt
out
pop
repz
xchg
sub
add
lods
push
pop
mov
mov
daa
xchg
mov
sub
xchg
xchg
jno
dec
add
jno
in
push
fdivr
sub
mov
push
mov
fildll
outsl
ljmp
push
rcr
decb
mov
adc
mov
loop
cmp
push
adc
in
cmovb
mov
in
in
jns
out
lods
jnp
or
ret
ret
adc
shl
dec
dec
push
rcll
fs
ret
add
or
mov
inc
stc
insb
push
shrb
test
andl
pop
jnp
ds
or
dec
jbe
or
test
sti
jo
push
xchg
je
push
jp
inc
sbb
iret
adc
inc
xor
rcrl
shrb
lods
xchg
adc
fisubrl
xchg
jl
in
stos
shlb
in
pop
mov
ret
push
jmp
test
arpl
mov
gs
jb
adc
xchg
add
sbb
inc
sahf
sbb
adc
idivl
std
dec
xor
fcmovbe
mov
jle
je
ret
in
enter
and
xlat
pop
mov
leave
cwtl
idivl
pop
xchg
inc
jge
fwait
mov
mov
adc
pusha
push
mov
dec
push
mov
cmp
push
push
incb
adc
pop
xchg
mov
xor
xor
in
xlat
sub
pop
jl
leave
rcrl
in
sbb
aam
imul
movsl
repz
pop
and
cmp
jg
xor
adc
repnz
mov
mov
arpl
mov
cmp
out
inc
ret
jno
sarb
adc
or
add
mov
mov
lcall
inc
push
fdivs
mov
or
mov
pop
and
lcall
inc
cmp
push
sub
clc
adc
pop
cld
dec
jb
repz
mov
loopne
pop
aam
adc
inc
add
dec
mov
jl
xor
push
xchg
xor
or
or
pop
lret
xchg
cld
enter
stos
fsubp
cmp
test
fwait
adc
scas
pop
push
arpl
lea
mov
xor
jnp
outsl
and
dec
xor
adc
mov
push
push
inc
and
jmp
enter
insl
cmp
inc
popf
sbb
mov
push
lret
and
je
das
mov
pusha
and
push
xchg
movsl
jno
in
jo
jl
push
mov
aas
ficompl
pushf
adc
rcl
cld
inc
mov
jb
push
test
mov
xchg
inc
mov
pop
movb
js
jg
push
push
mov
and
mov
dec
es
fsubs
imul
inc
xor
xchg
imul
iret
pop
rcrb
cmp
out
xchg
push
inc
imul
rcrl
roll
fsubl
pushf
xor
adc
sarl
adc
addr16
pop
adc
pop
testb
xchg
or
pop
xor
jp
pop
add
sahf
scas
lret
add
in
dec
enter
sub
and
mov
adc
adc
mov
adc
mov
sub
jecxz
ret
fs
pop
rcr
ror
dec
mov
fmulp
mov
sbb
jnp
push
add
lahf
cmpsl
loop
sbb
mov
sahf
or
lcall
pop
or
inc
add
lock
clc
adc
add
pop
mov
xor
xor
push
mov
fidivs
sahf
sub
sub
jg
loop
fisubrs
ljmp
fcompl
call
cmc
repnz
pusha
and
mov
idivl
cmp
and
scas
mov
jnp
popf
out
sub
pop
hlt
xorl
cwtl
les
jl
jge
sbb
cmpsl
pop
jae
test
addr16
jle
push
jae
fwait
iret
fcmovnbe
ljmp
fsubl
xor
leave
insl
jnp
cmp
pop
xor
imul
movsl
movsb
jae
arpl
jns
loopne
push
xchg
push
sarl
push
and
fwait
pusha
dec
push
mov
pop
ret
sbb
mov
add
js
cltd
mov
scas
sub
data16
addr16
fmulp
xlat
cli
inc
int
je
mov
popf
cmc
sbb
jle
mov
test
dec
dec
inc
sub
jp
jno
icebp
add
mov
xchg
test
mov
lahf
js
xor
ss
and
add
adc
jp
sub
dec
sub
adc
std
lcall
and
das
pop
mov
push
xchg
test
mov
dec
xchg
stos
push
jl
or
mov
jecxz
int
les
xchg
mov
mov
pop
cmp
mov
movsl
pop
out
push
dec
dec
adc
inc
sub
test
adc
sahf
fld
mov
dec
mov
js
cltd
inc
arpl
fldl
rcrb
sahf
pop
jb
fcmovu
sub
add
cli
pop
out
idivb
shll
push
xor
pop
aas
aas
out
push
cmpl
divb
mov
jl
sarl
mov
jge
mov
ret
in
adc
add
jecxz
out
sbb
xor
push
iret
mov
push
lock
lods
pop
mov
call
orb
cmc
jmp
jg
ds
mov
jns
push
mov
jo
add
add
loop
jmp
popf
push
in
cmc
es
dec
aaa
cli
aam
jp
or
out
inc
rclb
scas
stc
jbe
ja
push
dec
stc
adc
and
adc
repz
sbb
xchg
pop
pushf
mov
and
cwtl
call
mov
mov
push
movsl
mov
idiv
xchg
cmp
push
in
add
mov
pop
out
pusha
int
stos
mov
pop
pop
fadds
mov
popf
dec
int
dec
mov
loope
dec
loop
bound
inc
jmp
dec
iret
mov
sub
in
scas
mov
cmpsl
mov
push
adc
ljmp
adc
lods
stos
push
dec
mov
jae
mov
enter
mov
fcomp
in
xor
push
mov
fsubr
addr16
mov
xor
or
lret
rorb
and
cs
cwtl
or
adc
adc
pop
les
sub
lahf
arpl
out
dec
inc
or
insl
sub
xchg
insb
scas
lahf
push
adc
fnstcw
pop
push
xchg
adc
pop
add
dec
repnz
inc
fidivl
sub
stos
xor
pop
in
xor
je
xor
jp
cmpsl
push
js
movsb
scas
repz
inc
test
xchg
ljmp
psllq
push
fidivl
xchg
repnz
ljmp
shll
es
pop
push
ror
jb
ret
mov
xchg
cmp
mov
roll
or
lods
outsl
int
sbb
jle
clc
cmp
dec
out
xchg
add
xchg
jl
push
or
pop
inc
and
and
movsl
lock
sub
cmp
mov
scas
in
mull
lds
xchg
push
cmpb
jbe
aas
jl
mov
call
ds
add
dec
jne
jae
xor
adcb
lret
push
xor
dec
mov
adc
or
mov
mov
mov
xor
dec
xor
pushf
mov
mov
add
and
xchg
fwait
gs
inc
jo
loope
cmpsb
outsl
mov
sti
adc
jns
push
xchg
dec
cmp
add
sbb
xlat
loop
adc
add
lock
xchg
mov
adc
add
adc
sub
scas
daa
cmpb
push
int
callw
push
xchg
inc
cmp
fnsave
cmpsb
cmp
sbb
push
das
add
decb
pop
mov
push
popa
and
stos
pop
jne
cltd
lcall
and
jb
or
sarl
pusha
insb
jbe
mov
push
mov
and
sti
xor
enter
mov
mov
scas
pushf
shll
adc
fwait
dec
jb
mov
fistpll
inc
fidivrs
xchg
xchg
outsb
add
rclb
fwait
aam
popa
pushf
dec
arpl
movups
jle
add
jae
push
mov
adc
testb
push
aam
cmp
cs
add
fimuls
ljmp
inc
arpl
cwtl
sarb
jo
popa
jecxz
sbb
rcll
mov
insl
push
sbb
sbb
insl
mov
cpuid
pop
mov
fidivrl
adc
push
scas
mov
movsb
enter
xor
aaa
xlat
inc
push
xchg
mov
mov
xchg
arpl
adc
and
int3
leave
outsl
push
cld
inc
sbb
mov
sub
mov
imul
push
lahf
lret
xorb
pop
and
shr
stos
das
cld
push
lret
out
out
pop
daa
jecxz
rclb
xor
add
adc
stos
or
out
jmp
imull
test
out
push
xchg
cmpsb
aam
mov
out
cmp
lods
jnp
ret
cmpxchg
outsl
sbb
pop
fbld
push
ds
mov
mov
std
les
push
rorb
mov
adc
dec
loopne
add
lret
and
mov
xor
fidivs
icebp
sti
addr16
jl
out
out
xor
ret
repz
mov
mov
loope
xchg
dec
mov
cmp
pop
ret
dec
mov
movsb
std
dec
pop
test
mov
jg
leave
jecxz
sarl
xor
mov
repz
xchg
ret
stos
add
mov
orl
mov
into
shl
inc
pop
enter
dec
adcb
std
inc
cmp
test
dec
lcall
sbb
data16
enter
pusha
jp
inc
fmulp
mov
xor
test
movl
nop
xchg
mov
cs
mov
jno
lock
adc
sbb
xor
mov
stos
ret
inc
sbb
aad
mov
cmp
mov
push
clc
or
insb
inc
or
leave
cmc
in
ret
xchg
popf
movsb
or
ss
adc
mov
mov
mov
mov
out
push
mov
in
ficoms
sti
mov
mov
es
insl
mov
dec
andb
xlat
rorl
imul
or
leave
push
lock
icebp
hlt
mov
cmp
adc
subb
inc
dec
or
cmpsb
enter
dec
pop
cld
cmpsb
loope
pop
jge
cwtl
out
popa
xor
push
popa
leave
fisubrs
aaa
or
push
xchg
mov
xor
pop
outsb
mov
inc
sti
sub
pusha
push
xor
ja
mull
mov
int
jne
bound
iret
es
ja
cmp
lods
mov
pop
in
and
pushf
mov
pop
lahf
faddl
push
sub
shrl
pop
popa
sbb
aas
bndstx
mov
addb
mov
les
std
and
adc
push
stc
lods
add
lock
push
ret
in
lods
pop
movsb
or
mov
jecxz
rol
mov
cwtl
xchg
or
mov
and
cwtl
or
hlt
pushl
adc
lret
xorl
push
jno
mov
outsl
outsb
sbb
sub
sbb
stc
leave
insb
mov
jne
sbb
js
shlb
pop
lahf
jbe
or
outsb
sbb
fs
sbb
xor
lret
xchg
jg
pop
xor
cmp
je
push
pop
test
add
repz
sahf
js
mov
pop
mov
icebp
xchg
adcb
iret
add
mov
test
lcall
dec
sbb
pop
imul
mov
push
xorl
pop
mov
cmpsb
mov
xchg
and
jae
sub
das
movb
lods
dec
dec
mov
xor
stos
jge
cmp
sbb
push
cmp
fnstcw
jecxz
test
and
cli
push
mov
ret
push
dec
testl
dec
inc
sbb
or
test
int3
jae
adc
inc
test
xor
lahf
xchg
xor
push
sub
pop
stos
lret
xchg
clc
icebp
dec
mov
xchg
xlat
push
cmp
dec
jecxz
adc
dec
push
push
sub
inc
jl
scas
leave
aas
stos
pushf
xchg
idiv
daa
or
and
xchg
popa
mov
inc
pop
push
push
cmp
data16
and
add
pop
hlt
jp
xchg
inc
arpl
mov
in
mov
nop
lret
adc
push
xor
lods
xor
push
lock
cmpsb
adc
loop
in
cmp
cmp
mov
or
push
imul
les
iret
xchg
nop
sbb
or
lret
xchg
xor
push
ljmp
add
jae
or
add
jb
repz
dec
push
sbbl
aaa
daa
lret
or
mov
ret
xchg
xchg
pusha
cmp
inc
ficomps
in
cld
mov
adc
add
adc
and
push
loopne
sar
loop
imul
shrb
mov
add
or
ret
sbb
sbb
sub
or
sub
sub
push
std
push
adcl
dec
mov
out
inc
cmc
cld
sbb
mov
and
push
scas
lcall
int3
pushf
or
cmp
dec
sub
je
inc
push
test
jbe
cwtl
and
mov
arpl
pop
int3
aas
imul
pop
lea
stos
cmp
scas
and
nop
mov
sbb
daa
aaa
mov
xchg
xchg
xchg
sahf
jg
loopne
push
roll
imul
or
fildl
in
int
mov
sbb
shl
inc
repz
pop
jge
pop
mov
icebp
pop
push
cmp
rcll
fsubl
mov
lahf
mov
sub
cli
jp
jle
jb
mov
inc
ss
test
sbb
mov
ss
push
lahf
inc
aam
dec
adc
jbe
cmp
pop
add
leave
jge
cmp
mov
repnz
int
mov
lcall
mov
adc
cmpsb
cmp
pop
into
dec
mov
or
sub
jmp
mov
push
outsl
xchg
lret
rolb
inc
or
push
stc
jno
adc
xor
stc
js
aad
xor
sbb
jne
mov
lret
xor
pop
xor
push
mov
addr16
lds
mov
aaa
pop
call
repz
lret
cwtl
outsb
jo
imul
push
xchg
cmp
cli
test
xchg
test
jg
popf
enter
mov
int
loope
jnp
cli
cmp
cmp
imul
xchg
sub
rcrb
inc
dec
repnz
inc
dec
das
testb
aad
mov
into
xchg
in
fcompl
mov
jecxz
inc
insb
mov
cwtl
adc
int3
out
test
scas
adc
push
cwtl
pop
and
xor
sbb
push
jecxz
pop
mov
test
or
fmull
jl
daa
jne
or
out
mov
shrb
out
adc
xchg
ret
cmc
pop
push
mov
adc
pop
test
sbb
es
dec
dec
aam
ret
adc
sub
sbb
push
xchg
aam
xchg
adc
dec
setnp
lock
fcoms
scas
and
arpl
ret
rolb
sbbl
cmp
xor
arpl
jl
push
and
daa
aas
imul
pop
shr
jg
jns
xor
sbb
mov
push
jns
rcrb
jo
movsl
adc
xchg
mov
pop
daa
ds
and
sub
into
lcall
aad
les
sbb
inc
jmp
xor
es
jb
mov
sub
mov
ret
mov
data16
pushf
fcompl
adc
in
push
sbb
shl
mov
adc
andl
out
dec
sbb
mov
insl
es
and
sbb
sub
shrb
mov
rclb
pop
mov
sub
mov
and
mov
adc
cmp
jecxz
add
inc
fwait
inc
inc
out
mov
movsb
xor
data16
jne
or
insb
cmc
imul
push
sub
mov
rcll
fsubl
mov
xor
nop
cld
jmp
cwtl
xor
subb
mov
jnp
jl
hlt
ret
inc
pop
dec
or
pushf
xor
ss
dec
lock
sub
sbb
nop
dec
sub
jae
add
dec
push
dec
sahf
inc
cmc
data16
xor
push
xchg
lret
sub
mov
jne
loop
ja
gs
out
lods
push
repz
sahf
decb
out
scas
or
repz
dec
and
hlt
inc
rcr
mov
repnz
ret
dec
mov
dec
clc
xchg
xchg
add
insb
mov
push
outsb
add
pop
mov
mov
mov
in
dec
pop
ret
jp
mov
dec
fwait
adc
decb
mov
push
stc
sub
add
stc
pop
inc
aad
cmpl
cmc
icebp
and
in
and
outsb
mov
test
ljmp
or
dec
fadds
fmulp
icebp
lret
stos
jl
dec
rcll
scas
add
push
clc
add
rclb
stc
decb
jo
add
mov
movsl
inc
dec
xchg
idivl
xchg
mov
jnp
imul
arpl
xchg
out
lret
mov
sti
mov
stc
stos
push
xchg
push
add
sub
pop
xchg
scas
cli
or
out
rcll
and
pop
add
aas
ret
xor
jl
outsl
cmpsb
addb
dec
clc
cmp
es
scas
add
repnz
xorb
pusha
fsubr
xlat
xor
icebp
pop
sahf
push
xor
mov
fwait
push
pop
decl
mov
sar
test
jmp
dec
sti
stc
or
cmp
dec
dec
sti
push
lds
jecxz
dec
sahf
das
mov
pop
mov
push
pop
pop
roll
lahf
push
test
pop
xchg
add
inc
out
push
stos
lahf
mov
std
xchg
inc
sahf
xchg
scas
pusha
dec
add
adc
loope
in
shll
cld
sub
jne
or
stc
pushf
adc
sbb
pop
jno
or
sbb
pop
jae
xor
xchg
and
ja
jbe
and
or
mov
lds
cmp
pop
sub
sub
js
mov
jge
add
xor
mov
sub
and
sbb
popa
sbb
loop
inc
sub
cld
push
add
xchg
in
adc
int3
lock
scas
sti
or
adc
dec
mov
sbb
lcall
dec
aam
pop
movsb
icebp
xchg
insl
test
rol
shlb
stc
out
add
dec
push
ret
insl
pop
insb
je
dec
loopnew
loopne
mov
fisttps
jnp
ljmp
movsb
arpl
jp
shrl
dec
mov
gs
pop
js
mov
cld
insb
push
rcl
pop
add
lcall
repz
adc
pcmpeqb
jae
fdivl
adc
sbb
or
cld
iret
sbb
add
ja
xlat
and
fstps
sbb
rcll
pop
mov
fsubp
mov
cmp
insl
push
popf
stos
xor
int3
or
cld
outsl
mov
jle
sub
jno
rcl
or
adc
cmp
adc
push
flds
fstps
fnsetpm(287
cwtl
and
enter
sub
cmp
mov
fwait
insl
sbb
ret
adc
mov
xchg
mov
add
pop
dec
xorl
mov
in
add
sti
and
movsl
cltd
push
lods
jae
bound
inc
loope
mov
mov
cmp
clc
aad
je
ret
ret
or
int
push
icebp
fwait
jnp
push
cmp
lret
push
js
lahf
test
sub
fdiv
aas
jns,pn
out
xor
pop
int3
inc
xchg
outsl
outsb
ss
adc
arpl
push
and
dec
xor
nop
mov
pop
popa
cmpsb
lods
push
xor
and
fildll
mov
test
cli
mov
pop
mov
test
or
cmpsb
cmpsl
stos
and
xor
cmpsb
mov
push
orl
mov
inc
or
mov
in
sbb
aas
cmp
adc
jmp
mov
inc
xor
mov
stc
daa
mov
andb
pop
push
xchg
mov
push
mov
cmp
add
test
sub
ja
in
lea
sti
push
mov
data16
push
imul
std
outsl
sub
aam
nop
insb
mov
stc
xchg
jmp
mov
pushf
shrl
xchg
or
xor
pop
iret
das
mov
jge
sub
jb
fimuls
dec
pop
popf
jp
imul
dec
push
aam
xchg
pushl
das
shlb
mov
scas
out
pop
leave
in
pop
fwait
movb
out
outsb
push
dec
ret
adc
pop
cmc
je
and
mov
repz
sbb
outsb
mov
lret
or
jno
mov
loop
repnz
sbb
repz
inc
repz
das
repz
and
es
fwait
inc
bound
pop
fwait
enter
filds
dec
insl
jbe
pushf
mov
lcall
scas
sbb
xor
fidivl
ds
scas
add
out
jno
adc
cltd
mov
sub
cmp
xchg
add
addl
add
imul
xor
fnsave
fistps
fwait
jecxz
std
hlt
imul
imul
dec
xchg
cs
out
mov
xchg
js
ljmp
mov
orl
cmp
stc
test
jg
pop
lret
int
sub
and
push
dec
cli
mov
outsb
inc
add
add
int
je
ljmp
clc
jmp
das
sub
jns
xchg
push
aas
test
aam
inc
mov
hlt
sbb
lahf
adc
or
lea
aam
inc
mov
dec
cmpsb
push
lret
je
cmp
pop
shrb
xchg
dec
rorl
icebp
test
mov
mov
pop
push
stc
daa
push
outsl
test
arpl
lods
test
ja
out
jmp
or
clc
dec
cmp
xchg
cli
das
add
jp
push
cmpsl
push
or
or
add
sub
inc
and
sbb
xchg
loop
cmpb
mov
or
outsl
out
icebp
into
iret
cwtl
sub
push
outsl
inc
fs
adc
adc
les
aam
mov
cmp
dec
movl
push
insb
out
adc
xchg
xchg
call
lods
push
lcall
test
aad
xchg
cmp
pop
out
adc
insb
xor
lea
bound
aam
daa
lods
je
and
ret
out
mov
mov
pop
mov
dec
lahf
subb
jmp
adc
mov
rdpmc
push
aam
lret
xor
pop
idivl
push
ret
push
fdivrl
sti
lahf
or
push
popa
jne
das
xchg
sti
jp
xchg
push
scas
pop
cmp
mov
divb
adc
xor
dec
je
push
nop
jnp
movl
cmpsl
adc
push
int3
repnz
sbb
sub
pop
inc
adc
stos
movsb
popa
cmpsl
aas
rcrl
out
jecxz
adc
sti
test
jp
xor
stos
mov
decl
mov
jp
lock
mov
xchg
bound
es
sbb
xchg
movsl
je
xchg
sbb
or
adc
js
push
test
and
clc
test
cli
outsl
cmpsl
inc
or
mov
mov
jnp
les
or
fmull
pop
and
mov
xchg
in
ss
cmpsb
sti
adc
ljmp
out
cmpl
push
and
out
test
pusha
mov
subb
adc
cs
fstpl
negb
imul
xchg
orb
xor
sti
sbb
repz
push
xor
sub
xchg
mov
enter
in
cmp
push
push
inc
jle
scas
ds
or
jo
into
mov
pop
icebp
cmc
daa
push
push
mov
scas
imul
mulb
pop
lret
sbb
pop
lret
dec
and
aad
ss
mov
enter
test
pop
mov
dec
add
or
clc
xchg
push
es
in
lds
push
pop
xor
xor
jmp
jle
sub
lods
push
loopne
or
cmp
stos
adc
in
adc
rolb
add
lock
mov
mov
pushf
push
jno
adc
lcall
fsubrs
outsb
fnsave
add
fisttpll
lret
lea
push
add
out
mov
out
push
in
inc
pop
mov
inc
add
lcall
out
push
mov
arpl
nop
stos
repnz
xchg
ljmp
sbb
mov
sahf
inc
mov
stos
xor
inc
in
push
loope
or
jmp
insb
lret
bound
inc
inc
pop
jb
or
and
pop
jge
xchg
jns
inc
mov
and
adc
jno
rcrl
dec
leave
push
das
cmp
add
ss
scas
enter
xor
shlb
jmp
mov
mov
mov
in
push
jecxz
adc
outsb
shll
outsl
mov
subl
xchg
lcall
cmp
lcall
ja
mov
rcr
stos
lea
mov
jmp
or
sbb
enter
enter
insb
mov
scas
jno
or
mov
lcall
pop
into
adc
jnp
sbb
or
sbb
xor
xor
add
pop
fldt
mov
enter
cmp
jno
fistl
jle
addr16
outsb
push
cmp
and
push
jecxz
into
mov
pop
mov
nop
js
cmp
pop
andb
jae
adc
push
add
push
inc
jmp
xchg
xchg
xchg
mov
inc
les
lahf
sti
dec
cmp
inc
mov
cmpl
es
pavgb
dec
mov
out
clc
data16
dec
fs
pop
lds
cmc
xor
or
cmp
ret
stos
mov
or
test
cmp
lods
out
in
cs
ficoms
idivl
sub
dec
fdivrs
xor
je
es
repz
sbb
or
jb
mov
and
mov
xchg
or
fldl
push
cmc
mov
jae
xlat
cmp
ja
mov
push
mov
es
dec
shl
fdivrs
mov
xor
or
inc
inc
shrb
jp
mov
jmp
idivb
mov
dec
fildll
push
in
add
and
pop
add
sbb
lret
adc
rcrl
or
sub
aaa
jle
daa
xchg
pop
and
sub
fadds
mov
cld
and
lcall
xchg
mov
or
xor
ljmp
mov
out
leave
ss
push
jb
leave
add
mov
cmp
jp
stc
dec
repz
xor
pushf
xchg
adc
mov
lds
inc
insl
sub
aaa
jl
repnz
xchg
xor
adc
sbb
negl
out
and
fwait
jp
pop
bound
lret
jbe
loopne
or
and
push
push
adcl
int
sahf
jno
xor
in
and
dec
sbb
test
add
inc
stos
xchg
mov
scas
scas
fstpl
fs
adc
push
div
inc
push
mov
test
cltd
bound
pop
clc
lcall
dec
mov
ficoml
jne
enter
pop
mov
or
jbe
mov
cld
aam
push
scas
inc
stc
call
push
sbb
shlb
fxch
scas
andl
clc
jecxz
xchg
mov
jp
testb
pop
dec
jbe
aaa
sub
pop
pop
stos
lds
sub
lret
xchg
mov
pop
jl
pop
ret
pop
inc
andb
outsb
xchg
push
mov
iret
dec
xchg
inc
insl
sbb
or
shll
jbe
add
subl
gs
push
and
sub
outsb
nop
lods
xchg
imul
dec
arpl
shll
in
out
mov
popf
in
inc
or
and
fsubl
lret
shlb
push
mov
jnp
sbb
lods
mov
aad
mov
ja
lret
push
out
push
movsb
xor
xor
out
cltd
and
cmp
in
xchg
mov
movsl
dec
xchg
aaa
mov
test
xchg
stc
pop
inc
mov
jge
sub
shrl
sbb
dec
push
pop
out
aas
outsb
mov
cltd
scas
inc
mov
and
into
adc
sbb
xor
test
mov
jb
pop
sub
or
sbb
or
add
imul
xor
movsl
mov
ret
sbb
movsb
push
mov
and
in
pop
mov
aas
out
aas
mov
cli
or
mov
sbb
push
repz
jno
test
data16
cmp
sub
push
jne
add
cmp
testb
sub
adc
inc
add
push
lods
or
cmp
dec
call
aad
iret
mov
sbb
mov
pop
xor
add
xchg
add
insl
mov
sbb
and
dec
lret
pop
js
outsl
or
inc
lret
sub
mov
push
in
or
aas
xor
fwait
movsl
mov
leave
cmp
xor
out
push
jno
fwait
ja
fwait
dec
sahf
shll
in
mul
pop
std
pop
add
or
xchg
or
mov
cmp
xchg
mov
std
in
dec
test
add
std
push
and
jmp
ret
pusha
xchg
add
in
ss
and
shlb
xor
add
inc
repz
aad
mov
aad
out
mov
sbb
cmp
adc
add
into
pop
and
icebp
mov
movsl
adc
xlat
inc
arpl
popa
jne
call
cmpsl
scas
push
and
lcall
lea
cmpb
dec
es
mov
movsl
adc
sub
inc
ret
test
mov
icebp
sub
push
stc
inc
out
fnstcw
test
loopne
lock
sahf
or
into
mov
pop
lods
lret
sbb
fsts
mov
ret
push
pusha
add
cmp
cmp
outsb
sbb
mov
mov
ja
sbb
arpl
cmc
mov
js
sbb
les
sbb
push
andl
and
dec
sbb
ds
cltd
push
cmp
pop
fnsetpm(287
or
arpl
leave
inc
jbe
fdivr
pop
cmpsb
ret
dec
int
add
shlb
and
jo
out
mov
das
cwtl
shlb
out
lret
inc
inc
dec
inc
mov
mov
mov
push
or
stos
sub
ss
push
mov
rcrb
lds
dec
test
out
push
lods
nop
sub
and
or
in
xchg
movsb
add
ja
loopne
dec
mov
enter
push
inc
filds
pusha
imul
fbstp
cmpl
cmp
out
sti
aam
loop
aad
rcll
sub
in
pusha
out
popa
cmp
adc
into
loop
adc
push
lret
insb
popa
fst
cld
enter
cmpsb
mov
jno
mov
sbb
dec
jge
aad
and
loope
fwait
lock
pop
inc
or
push
mov
dec
sbbb
push
in
adc
or
adc
in
jmp
addr16
xchg
mov
jnp
cmpb
call
push
rcl
push
clc
in
dec
stos
popf
mov
icebp
fdivl
roll
sub
pop
jge
jne
sbb
aas
jg
in
in
xchg
mov
cli
lahf
mov
into
or
jb
xchg
xor
dec
shrb
nop
push
add
xor
push
pop
adc
daa
cmp
test
mov
inc
imul
add
and
jne
in
cmpsb
push
negb
xor
insb
aam
sub
outsl
bound
add
fists
pop
ret
dec
loopne
inc
mov
enter
jecxz
fst
mov
pop
and
cmp
mull
adc
and
mov
clc
add
sar
and
stos
and
mov
xor
mov
insl
adc
andb
mov
jne
sbb
xor
or
cmp
fpatan
inc
adc
sub
js
xor
add
mov
pop
pop
dec
jb
test
mov
push
sbbb
cmp
inc
insb
inc
rcrl
jp
push
repnz
shlb
jo
mov
jo
mov
scas
jmp
jnp
pop
pop
jne
cmp
ss
std
and
leave
push
sbb
inc
pop
xchg
stos
pop
or
stc
xchg
and
sub
pop
inc
and
mov
cmp
lret
mov
mov
mov
addb
das
mov
sbb
cmpb
jge
xorb
je
int3
mov
pusha
jno
mov
popa
push
loopne
pusha
hlt
std
mov
sahf
and
mov
rorb
mov
mov
orb
mov
in
xor
out
jge
and
hlt
das
testb
mov
cmp
push
stos
rcr
popf
popf
loop
push
repnz
xor
cmc
mov
movsl
mov
cwtl
pop
pusha
push
add
inc
mov
adc
loope
mov
xor
ret
and
and
push
lds
xor
loop
jnp
ret
jne
jo
mov
lcall
jmp
mov
movsl
not
fs
push
adc
pop
sbbl
add
adc
shlb
dec
shrl
sbb
cld
outsb
jo
ja
add
cli
xchg
fmuls
jl
push
xchg
out
lea
out
mov
outsl
repz
cmpsl
cwtl
popf
sbb
push
icebp
negl
std
add
add
mov
cmpsl
test
into
and
lods
mov
sbb
pop
and
cmp
out
sahf
mov
mov
imull
add
dec
xorb
addr16
rolb
cs
xchg
add
inc
xchg
fisttps
and
add
sbb
pop
inc
fbstp
dec
ss
js
jae
add
jno
or
add
add
adc
sub
cmp
rolb
shr
repnz
inc
in
xchg
test
jns
lret
and
or
inc
jae
jp
mov
or
mov
add
lahf
test
scas
fsubrl
les
jmp
in
sbb
inc
imul
lods
jle
mov
insb
in
cmc
sbb
fwait
and
icebp
mov
pop
sbb
out
lcall
cmpl
enter
add
sub
push
std
test
dec
out
cmpsl
push
adc
insb
imul
adc
sub
negb
shl
and
pusha
loop
sbb
sti
fcomps
lahf
sub
out
int3
aas
in
pop
call
into
stos
aaa
push
or
pusha
add
out
hlt
imul
jbe
arpl
lret
sub
movsb
or
lret
pop
or
pop
mov
int
aas
or
sub
jnp
push
sahf
rolb
arpl
popf
mov
lahf
out
and
mov
aaa
fwait
je
das
mov
cwtl
repnz
add
push
dec
xorl
cmpsb
xchg
pushf
mov
adc
sub
seto
fstl
testl
lahf
frstor
cli
iret
cmp
stc
test
and
mov
lods
ss
in
iret
call
outsb
roll
cli
sbbb
int3
fld
xchg
test
inc
lret
push
out
xor
mov
lret
adc
add
fbstp
nop
in
xor
fwait
pushf
jg
lock
dec
es
xchg
jle
mov
mov
push
sbb
loop
int
pop
jmp
into
jbe
ja
mull
popa
push
push
gs
das
jmp
cltd
cld
mov
sti
movb
lock
xchg
mov
and
jg
xchg
and
add
sub
movsb
pop
sub
pop
ficoms
mov
dec
or
adc
aas
push
in
int3
data16
bound
sub
inc
into
xchg
ret
lock
jle
es
fwait
dec
sti
lods
pop
push
mov
popf
lret
add
cmpsb
jmp
xor
sarb
js
test
lds
xor
xchg
jmp
cmp
outsb
sub
sti
inc
jne
push
jnp
xor
sub
clc
adc
sub
stos
pop
add
or
cmp
mov
jbe
pop
cmp
push
xchg
aad
mov
jecxz
push
cmpl
rorl
scas
jne,pt
jmp
add
test
mov
xchg
cwtl
push
mov
inc
sbbb
repz
jmp
mov
sti
ret
xchg
fdivr
lods
xchg
ret
mov
cld
arpl
loope
icebp
xchg
out
xchg
insb
test
stos
test
out
sbb
mov
mov
mov
pop
mov
call
out
mov
in
cmpsl
xchg
ret
scas
mov
fs
test
insl
jae
pop
test
and
sbb
xchg
bound
popf
cmp
aad
pop
mov
jne
in
jmp
push
ss
mov
cmp
enter
das
dec
outsl
sub
push
inc
mov
add
sar
ficoms
in
fdivrs
shl
mov
xchg
and
in
mov
adc
mov
mov
cmpsl
fcmovb
loop
movsb
and
xchg
js
cmpsb
jbe
jbe
xor
rcll
ja
repnz
lods
mov
sarb
and
jns
and
into
xor
ss
mov
sbb
cmpsb
xor
cwtl
sahf
sub
push
addb
sub
inc
call
mov
dec
imul
pop
jle
mov
xchg
test
adc
stos
mov
jmp
pop
mulb
xor
das
mov
mov
nop
xlat
sahf
mov
lods
xchg
rclb
arpl
int3
jecxz
mov
scas
lock
inc
insl
test
subl
jecxz
repnz
pop
push
pop
dec
into
and
inc
mov
sbb
cs
add
pop
mov
sbb
dec
jmp
push
stos
adc
mov
fnstsw
sbb
cld
fstl
pop
pop
dec
andb
push
inc
daa
mov
sbb
ficoml
es
mov
push
shrl
cmp
loope
pop
out
iret
jmp
mov
add
int3
jne
sbb
notb
mov
xor
xchg
ljmp
cld
int
inc
insl
stos
fimull
sahf
lret
loop
push
push
pop
mov
sub
mov
test
out
mov
cmp
inc
dec
in
ds
xchg
dec
es
test
popl
xor
out
cmovge
outsb
dec
jb
pop
jecxz
psubusb
cmpsl
mov
push
insl
xchg
fdivl
push
pop
dec
fisttpl
pop
cmp
icebp
and
jmp
loop
xchg
cs
push
into
rol
les
add
imul
jp
add
ret
xchg
mov
inc
lds
push
inc
jnp
loopne
outsb
pusha
mov
inc
lret
and
scas
inc
sbb
adc
xor
xchg
mov
shr
stos
in
pop
jo
in
orl
addps
hlt
movsl
test
scas
push
jb
arpl
pop
pop
cmp
xor
mov
pop
bswap
movsl
mov
push
xchg
insb
mov
outsl
mov
mov
mov
ljmp
pop
sbb
push
in
dec
push
cmp
or
jmp
sbb
pop
sub
hlt
adc
jp
mov
nop
push
aad
in
int
or
jle
jmp
mov
or
sub
mov
push
jmp
and
xchg
push
jl
or
dec
int3
insl
push
clc
stos
in
mov
je
push
xor
jns
xchg
mov
loop
mov
dec
push
sbb
add
notb
add
imul
dec
push
lock
ja
add
mov
lret
shrb
push
lahf
test
sbb
sub
insl
aam
mov
aad
or
push
pop
sub
ds
xchg
add
sub
adcl
mov
mov
cmpsl
leave
ret
xchg
sub
xchg
es
xor
lock
cwtl
and
aaa
push
mov
icebp
lods
jnp
and
pop
icebp
cmp
bndstx
jg
mov
cmp
testl
or
and
sub
jl
dec
insb
cmp
push
sub
sbb
push
add
push
gs
call
inc
adcl
push
and
fwait
aas
xor
mov
out
cmp
lret
cmp
lea
adc
divb
loope
xchg
xor
fs
lds
push
dec
ret
fldenv
aas
sbb
mov
dec
repnz
enter
hlt
adc
lock
mov
cltd
jecxz
adc
cmpb
fnsave
mov
loopne
and
sbb
ljmp
pop
jl
orps
testl
lock
inc
mov
mov
or
and
ja
adc
jno
mov
lds
inc
xor
or
fwait
sbb
pop
lcall
adc
push
test
mov
ss
lds
test
out
into
sub
lock
pop
nop
mov
push
dec
test
std
shrl
jmp
scas
or
pop
testl
into
int3
or
cwtl
andb
movsl
js
mov
and
data16
add
sbb
fwait
out
jo
mov
ja
loop
push
xor
push
fs
icebp
jbe
sti
sarb
adc
fmuls
push
int3
rcl
and
into
repz
ja
movsb
adc
sbb
testl
jp
imul
lods
and
push
iret
jecxz
jl
pusha
cmp
nop
xor
outsb
pop
sub
dec
xchg
nop
inc
inc
add
xchg
stos
push
dec
aaa
lock
xchg
ret
xchg
jno
lret
adc
pop
xor
les
cmp
xchg
adcl
pop
push
call
cs
sub
xor
cmpsb
call
rcll
xchg
sbb
nop
ficomps
mov
imull
cli
jns
mov
mov
rol
pusha
dec
lahf
lods
mov
jne
xorb
xchg
and
ja
pop
dec
dec
shlb
ret
lret
xchg
ret
sbb
xchg
jno
xor
xor
xor
repz
jo
aam
lret
mov
or
pushf
fsqrt
nop
push
inc
es
xlat
cmpsl
in
add
jnp
mov
mov
xchg
inc
lea
in
mov
push
mov
fidivrl
ja
mov
orl
punpckldq
push
cli
cmp
dec
push
jecxz
add
out
cltd
aam
dec
stos
sbb
and
jb
icebp
fldcw
dec
repnz
nop
jne
in
popa
cmp
fucom
xchg
fstpt
lcall
jmp
or
mov
repnz
lds
xchg
inc
cmovne
dec
push
pop
fidivl
adc
pop
insl
push
das
lcall
xor
leave
test
cmp
push
sub
scas
sbb
sub
test
sbb
pop
adc
ret
adc
inc
pop
iret
xchg
ljmp
add
or
cmp
jnp
dec
jns
sbb
jnp
xor
xchg
inc
mov
cmp
out
and
mov
push
hlt
jmp
adc
imulb
inc
jl
fdivrs
cmpltps
cmpsb
jmp
jns
push
cli
cli
insl
pop
mov
add
lahf
push
loop
mov
lods
jmp
shlb
xor
int
mov
inc
add
or
jb
mov
stos
mov
push
add
pop
push
out
jae
cmpsl
dec
jle
cmpsb
jnp
out
mov
xchg
sub
push
and
sub
popf
xchg
clc
test
mov
rolb
fsts
int
inc
or
shrl
imul
int3
jnp
popl
scas
mov
jl
orb
es
sub
cmp
ja
mov
sbb
stc
fstpl
ljmp
and
cmp
and
push
sub
jae
test
iret
push
fstpt
loopne
pcmpeqb
pop
mov
push
jo
mov
xchg
orl
lods
dec
pop
aam
xchg
popf
mov
sub
or
in
int
mov
ds
xchg
mov
inc
out
cmpsl
idivl
inc
dec
jbe
jo
fdivp
fmull
add
or
fs
push
mov
addb
or
xchg
fxch
adc
push
fxch
dec
scas
in
push
jbe
xchg
int
lret
xchg
stc
sbb
and
lcall
mov
pop
rclb
jg
push
or
add
xlat
das
mov
std
mov
lock
aaa
shrb
jmp
push
mov
jne
pop
imul
push
fbstp
sbb
xchg
pop
sub
data16
inc
jo
add
sub
or
sub
pop
mov
gs
fsubl
lods
jno
fmul
xor
cmp
inc
mov
mov
sbb
jnp
lea
adc
cmpl
fwait
and
push
frstpm(287
jo
sub
xchg
pop
aad
push
das
sbb
into
pusha
lret
sbb
lods
pop
mov
test
divb
push
outsb
rorl
dec
sarb
jbe
jecxz
dec
js
fisubl
sub
ljmp
hlt
or
add
adcl
stos
inc
pop
sbb
in
xchg
mov
lret
lds
sub
fsubs
mov
fdivl
das
push
ljmp
sbb
lock
ljmp
xchg
shlb
stos
sbb
cmp
iret
jns
leave
or
or
adc
cmp
mov
jns
jmp
popa
add
adc
and
or
xchg
jne
and
jb
push
cmp
push
cmp
iret
mov
mov
jge
aas
popf
filds
es
adc
je
push
mov
lcall
dec
idivb
jg
add
leave
inc
pop
inc
inc
mov
cmpl
stc
push
call
test
sub
add
sbb
bound
cmpsb
fldl
sub
mov
imul
jb
in
cmpsl
and
int
pop
cld
cmp
adc
or
mov
enter
scas
pop
inc
or
push
das
pop
int3
or
fsubrs
imul
in
hlt
loopne
jnp
push
je
ret
jecxz
mov
xchg
fdiv
sub
push
cmp
lcall
pop
in
repz
fcoml
aam
and
es
xlat
mov
lods
lea
dec
xchg
add
or
mov
mov
xchg
movsb
test
mov
and
xchg
xchg
enter
cmp
call
sahf
bound
inc
int
xlat
cmp
lock
sub
xor
roll
rolb
pop
and
fbstp
rol
jo
jp
ss
or
mov
push
cmpl
dec
outsl
jp
ljmp
aad
pop
adc
xor
fstps
outsl
daa
imul
pop
cmp
jl
xchg
fnclex
fsubs
out
mov
push
movsb
xor
xor
push
movsb
and
jae
sub
addr16
in
nop
fistpl
dec
dec
dec
mov
enter
jmp
mov
or
lahf
nop
mov
add
jge
push
inc
mov
sti
mov
xor
jge
cltd
mov
fwait
pop
mov
ret
jecxz
mov
scas
testb
fs
faddl
stc
fdivrp
cwtl
adc
add
sahf
loope
lret
xor
shll
call
inc
ss
push
popf
sbb
add
pop
mov
in
push
sbb
or
cmc
push
lock
jo
or
cmp
pop
into
or
fcomps
hlt
ret
dec
add
mov
xor
ds
dec
cmpsl
jg
imul
mov
sub
xor
jns,pn
loope
push
cs
stos
xlat
rol
nop
int
jg
repnz
aam
and
shr
das
dec
fiaddl
mov
mov
mov
and
sbb
pop
mov
out
mov
or
jnp
mov
insb
fisubl
daa
xchg
pop
aaa
ficoms
fxtract
xor
outsb
stos
sub
test
pop
iret
adc
pop
jno
mov
ret
sub
std
xchg
popf
push
insl
pop
xchg
out
mov
ljmp
notb
cmp
add
inc
movsl
int3
push
xchg
push
xor
fstpt
cmpsb
jge
test
push
enter
shlb
push
ret
mov
mov
add
imul
inc
mov
mov
bound
imul
rcll
popa
fstenv
dec
cmpsl
mov
inc
dec
aas
cmp
mov
xchg
mull
in
ret
repz
cmp
and
mov
int
inc
in
or
push
jne
pop
inc
nop
xor
test
int
ret
add
add
pop
jp
lahf
jmp
add
les
mov
sarb
xchg
xor
pushf
push
out
or
xchg
out
inc
fisttpl
out
lock
pushl
push
adc
and
xchg
and
lods
cmp
jns
test
mov
jae
ljmp
mov
into
hlt
pop
enter
dec
retw
jecxz
sbb
mov
mov
jge
movsb
xchg
imul
outsb
fwait
sahf
mov
mov
push
adc
or
add
ds
call
xor
push
add
mov
xor
xor
ds
fadd
sbb
test
aas
dec
fsubrl
in
jmp
lods
imul
outsl
mov
or
in
mov
fs
rcrb
leave
cmc
loopne
mov
movsb
pop
jb
mov
movsl
ss
in
pop
sub
in
cmc
dec
xchg
outsl
inc
dec
inc
je
lret
bound
lahf
mov
dec
into
xchg
push
jle
mov
adc
int3
in
outsb
sbb
add
sub
arpl
je
sti
sub
cwtl
or
mov
in
pop
test
jl
inc
loopne
insb
and
jmp
lret
jnp
jne
ss
sarl
xchg
sbb
mov
pop
mov
stos
shlb
fdivl
sbbb
mov
add
cltd
cmp
loopne
cs
dec
lahf
loope
pop
dec
fisubrl
in
sbb
lds
push
jns
pop
inc
nop
xor
pop
sbb
add
jecxz
xlat
in
shl
negb
fs
pop
dec
and
scas
mov
lret
call
jl
mov
dec
sbb
outsb
cmp
lahf
js
cmp
repz
insl
push
mov
dec
loope
mov
mov
xor
outsb
lret
stos
cmp
mov
loope
fwait
in
cmpsl
fnstcw
xchg
lret
push
in
daa
dec
push
adc
fisubs
pop
mov
popf
xlat
or
pop
add
or
dec
add
mov
lock
mov
fxch
xor
sahf
xchg
pusha
mov
ja
idivl
push
inc
mov
sbb
dec
sarl
in
adc
xchg
in
sub
jecxz
fldenv
out
outsl
pop
stc
sub
mov
add
sarl
fbld
cs
hlt
sub
lcall
and
mov
pop
lods
dec
daa
lock
arpl
jnp
cmp
xchg
dec
jecxz
pop
jne
lret
and
icebp
push
cmp
mov
push
ljmp
cmp
out
scas
cmpsl
out
mov
fldcw
and
lods
mov
scas
lret
mov
dec
jge
cwtl
dec
les
nop
and
xor
repnz
dec
jecxz
mov
add
addr16
pop
out
mov
sbb
lods
subps
or
jp
xchg
cmp
mov
outsb
or
mov
pushf
movsl
loope
push
add
sbb
inc
cmpsb
sahf
mov
rcr
xor
mov
pop
js
cmp
and
mov
pop
pop
repz
or
dec
out
add
sbb
xor
mov
fistpl
mov
and
imul
test
outsb
push
push
jmp
pop
sub
xor
mov
mov
js
pop
inc
mov
inc
add
jnp
fdivs
out
outsb
insb
pop
inc
dec
xchg
adcb
fwait
sbb
arpl
sbb
mov
push
mov
push
adcl
lods
ret
mov
out
insl
repnz
stos
pop
lret
push
mov
fistpll
scas
ret
jnp
ret
jp
push
inc
stos
push
rorb
push
jo
sti
rcrl
sti
adc
movsl
lahf
lea
sub
sub
repz
and
dec
cmp
sub
andb
xchg
call
mov
into
bound
mov
xor
out
cltd
sbb
daa
xchg
test
mov
imul
pop
or
jp
lods
jne
add
inc
leave
xor
mov
ret
test
aam
or
push
xchg
jbe
mov
repnz
push
pop
or
int
clc
mov
jp
xor
mov
dec
xchg
xlat
sub
mov
hlt
shr
mov
dec
inc
inc
pop
inc
mov
xchg
push
leave
push
in
rcll
jbe
and
aaa
push
sub
call
or
xchg
movl
mov
es
cmp
adc
inc
lret
out
pop
outsl
movsb
cltd
xor
or
xchg
imul
popa
rcl
sbb
jbe
outsb
popa
xchg
insl
lret
mov
imul
and
int
shlb
mov
sbb
sub
call
out
daa
cmp
mov
push
shr
jns
mov
dec
lret
jle
sbb
icebp
imul
stos
out
push
jmp
mov
inc
cmp
cmp
lahf
std
xchg
cs
cltd
bound
sbb
mov
and
inc
aas
push
push
inc
xor
leave
dec
lods
outsl
popf
popf
xchg
mov
es
pop
loope
mov
insl
fs
or
jne
stc
cmp
cli
push
andl
cmp
icebp
or
ror
push
mov
je
xlat
into
cmp
movsb
aam
and
cmp
push
loopne
cmp
test
sbb
scas
xor
iret
jns
call
mov
sbb
push
xchg
sbb
mov
or
idivl
pop
enter
xor
pushl
xor
popa
mov
das
push
mov
inc
inc
rclb
mov
and
mov
xorl
flds
jl
lods
jecxz
scas
jg
jecxz
or
cwtl
inc
push
inc
fildll
xor
mov
and
dec
mov
ljmp
adc
jg
lock
and
xor
adc
adc
cmp
xchg
pushf
out
ret
xchg
sub
mov
js
lods
cmp
jnp
or
mov
mov
aas
mov
jecxz
sti
adc
mov
imul
xchg
add
or
movsl
xchg
rolb
mov
dec
xchg
xchg
ljmp
inc
adc
scas
filds
mov
sbb
mov
leave
fnstsw
lcall
inc
dec
je
mov
cld
xchg
cmc
mov
imul
jnp
inc
jae
outsb
ror
add
mov
lods
call
ficomps
and
mov
sub
jecxz
movsb
iret
cmp
and
add
or
lds
popa
data16
je
mov
pop
push
mov
xchg
mov
sub
dec
sbb
out
xchg
mov
leave
jbe
xor
ljmp
push
movsl
shrl
push
fisubrl
push
bound
pop
lock
push
test
es
rclb
jecxz
mov
pop
es
jae
out
inc
xchg
mov
pusha
outsl
lds
mov
lods
xor
sub
xorl
cmc
lret
bnd
aaa
mov
sub
mov
push
ds
and
xor
or
cltd
rcrb
and
popa
add
add
mov
daa
jb
jle
mov
pop
xchg
or
js
sub
sbbb
adc
loopne
movsb
jnp
scas
ljmp
lea
loop
mov
push
mov
xor
gs
ret
lahf
jmp
enter
jo
es
les
nop
js
pop
adc
cmp
dec
out
xchg
jno
push
push
fmuls
rolb
ds
ja
rcl
mov
xchg
cmp
fldl
xor
mov
jecxz
xchg
mov
shr
out
adc
sbb
cmpsl
and
out
and
sub
rcrb
or
cmp
andb
mov
scas
sub
cwtl
out
test
sbb
push
push
pop
popf
out
sub
or
les
iret
add
jnp
in
mov
push
arpl
ja
jmp
lea
xor
scas
push
stos
lock
std
clc
xor
mov
xor
xor
xchg
xchg
sub
push
pop
out
mov
add
test
ret
jg
in
leave
xor
inc
scas
sbb
std
xchg
mov
push
push
and
mov
pushf
pusha
xchg
dec
and
imul
push
jns
repnz
pop
or
pusha
test
insl
inc
in
outsb
adc
jecxz
mov
sti
adcl
pop
les
mov
arpl
pop
scas
fistl
jle
mov
pop
bound
cmpsb
push
ds
shll
jnp
mov
xchg
pusha
fneni(8087
mov
jbe
lcall
cmp
shll
cwtl
dec
dec
or
mov
negb
pop
mov
outsl
push
test
dec
sarl
outsb
out
scas
lret
icebp
mov
cmp
sbb
adc
mov
ja
call
daa
ljmp
adc
xor
mov
dec
or
dec
cld
popa
sub
pushf
mov
pop
xor
test
in
shll
push
inc
xor
pop
shlb
pop
in
cmp
fs
and
mov
pushf
fimuls
push
sub
cmpsb
adc
pop
insb
or
js
jg
out
fdivl
loopne
mov
push
dec
adc
sbb
jo
pushf
jmp
xchg
jl
jmp
xlat
pop
daa
adc
mov
repnz
insb
xor
xchg
sub
or
and
lods
fidivl
pop
in
adc
xor
mov
inc
enter
mulb
and
cmpsb
movsl
push
fbstp
test
jbe
dec
popf
push
adc
sbb
inc
lcall
outsb
ficoml
dec
pop
aas
xor
sti
ret
mov
mov
popa
dec
sbb
bound
pop
xor
sbb
mov
out
lods
aam
add
mov
dec
mov
adc
add
pop
pop
mov
fildl
nop
sub
mov
loopne
xchg
daa
fmuls
xor
test
push
or
lret
cmp
cmp
aaa
gs
dec
push
notb
sbb
xor
mov
sub
xchg
cltd
adc
xchg
mov
mov
mov
mov
int3
ret
and
loope
jb
call
add
cltd
mov
sbb
cltd
mov
cmp
or
jae
mov
arpl
or
xchg
movsw
lcall
fwait
push
jns
dec
cltd
rclb
adc
xchg
xor
cmp
cmc
dec
loopne
rcrl
xor
sub
or
and
or
adc
adc
xor
insl
in
adc
loope
adc
or
mov
and
int
jecxz
rcrl
mov
fcmovnu
shr
and
sti
leave
xchg
in
loopne
fwait
scas
je
in
shll
movsb
push
stc
shll
stos
or
mov
xchg
add
pop
mov
aad
xchg
mov
push
jle
outsl
mov
repnz
fdivr
orl
mov
xchg
repnz
pop
mov
lock
add
fucomi
mov
mov
frstor
mov
lea
add
in
test
adc
cmp
sbbb
inc
in
xchg
roll
test
jle
sub
cld
loopne
sbb
inc
arpl
les
stos
bound
cmpsb
push
sub
and
jle
push
leave
ja
dec
jg
inc
loop
test
sbb
xor
in
xor
pop
fadds
enter
mov
mov
sub
mov
or
ret
addl
add
push
cli
dec
mov
jl
test
xchg
or
mov
stos
pop
dec
mov
pop
clc
stos
int
test
mov
repnz
fisubs
inc
cmc
adc
jnp
add
hlt
clc
repz
sbb
inc
or
sbb
xlat
movsl
mov
cmp
push
add
pop
and
cmp
push
stos
imul
aam
cs
inc
mov
loopne
insl
andl
addr16
pop
pop
repnz
test
stos
push
xchg
js
sbb
std
sarb
push
loope
xchg
mov
cwtl
jp
adc
jno
jg
scas
mov
les
iret
in
pop
popf
inc
lock
and
add
sub
jl
xchg
xor
pop
sti
imul
fisttps
lea
xchg
stos
push
pop
mov
hlt
add
xor
mov
jns
mov
mov
mov
leave
fs
xchg
mov
test
adc
xchg
push
into
inc
or
decb
pop
sub
pop
mov
mov
add
scas
xchg
in
cwtl
pop
jbe
lds
fst
loope
into
fldl
push
in
mov
sub
aam
mov
out
adc
or
mov
pop
rolb
aaa
and
adc
js
fldl
in
test
adc
push
jg
dec
mov
xorl
daa
mov
pop
lahf
jne
or
mov
popa
icebp
mov
movsb
inc
dec
repnz
and
sub
loope
rcrb
imul
outsl
or
push
xchg
pop
jg
andl
mov
pop
push
pusha
les
cli
xchg
push
insb
push
in
xchg
in
or
add
add
fwait
addr16
es
hlt
outsb
or
push
loop
lods
rcrb
xchg
or
sti
mov
mov
ja
cwtl
mov
out
jle
pop
mov
pop
lret
mov
xchg
and
pop
movsb
xchg
lods
rorl
inc
in
in
testl
xor
popf
test
inc
inc
or
push
frstor
jmp
addr16
out
and
in
jp
testb
push
pop
adc
add
jb
fisttpll
jl
add
inc
lahf
testb
inc
jecxz
xchg
out
sysret
cmpsb
fcomps
inc
lock
inc
push
pop
cwtl
and
and
and
dec
shlb
fcoml
xchg
sbb
outsb
mov
mov
dec
and
mov
jge
and
jle
add
mov
in
ret
add
gs
das
jg
std
dec
lds
cmp
pusha
in
jg
clc
adc
dec
mov
pop
ficomps
test
out
and
daa
fsubrs
mov
hlt
pushf
aas
push
out
int
call
xor
jge
dec
lret
mov
popw
std
push
xor
mov
int3
popf
in
push
xchg
and
pop
insl
dec
lret
into
mov
jae
sub
mov
int3
jle
mov
or
push
cltd
pop
adc
jle
jne
and
sub
mov
push
sbb
pop
sub
imul
pop
call
hlt
imul
insb
repz
or
xchg
out
or
cmp
jnp
pop
lods
sbb
xchg
leave
into
fidivrl
repnz
sbb
sub
adc
imul
pusha
push
mov
cmc
out
or
aam
in
sarl
sub
inc
lret
pushf
in
rcll
popa
popa
adc
xchg
cmc
add
or
in
mov
fnsave
into
dec
pop
mov
push
testl
loop
lea
scas
les
lcall
jnp
mov
aaa
jl
inc
or
imul
dec
cmp
sub
in
fwait
lret
inc
dec
mov
pop
dec
xchg
dec
push
sub
in
and
lods
jge
mov
in
out
jl
inc
cmc
js
subb
push
outsb
sub
cmp
ret
and
and
jecxz
or
sub
and
push
imul
jmp
push
stos
imul
mov
add
dec
adc
pop
xchg
call
aas
inc
incl
test
dec
mov
test
cmp
jae
xor
aam
int3
clc
std
out
add
cli
iret
insl
mov
push
cmp
mov
pop
popa
push
cli
pop
dec
sbb
mov
bound
popf
pop
mov
and
fnstsw
subb
mov
rcrl
adc
test
mov
push
inc
sbb
xchg
lds
in
je
xchg
add
out
add
clc
aaa
lds
push
shll
lods
jne
ret
pushf
es
leave
sbb
jbe
dec
adc
scas
lods
adc
ret
lahf
push
mov
or
dec
fs
in
cmp
cmp
daa
pop
shlb
mov
inc
popf
jmp
das
inc
inc
data16
dec
push
xor
shlb
jno
js
and
pop
loop
sbb
mov
add
cs
xchg
or
mov
jp
arpl
out
js
das
shl
arpl
lock
cmp
inc
frstor
push
and
adc
aas
outsl
pop
ret
sub
cmp
rorl
fisubs
lea
aas
lock
jb
loop
ss
add
fs
movsl
movsl
nop
sub
lea
divl
pop
xor
jbe
xor
hlt
jmp
andl
mov
and
xchg
faddp
jnp
popa
dec
adc
jmp
popa
aaa
and
inc
scas
les
add
inc
sbb
inc
sub
and
push
rol
addb
cltd
sub
idivb
dec
dec
in
icebp
dec
push
and
imul
xor
pop
sbb
into
movsb
mov
mov
ret
or
pop
stos
in
int3
mov
and
mov
scas
push
fidivs
mov
es
subb
mov
xchg
adcb
insb
rcll
jns
cltd
rol
xlat
xchg
lock
mov
sbb
inc
sti
cmp
jmp
xor
xor
lods
cmp
inc
add
stos
inc
popa
xor
lret
ljmp
ror
add
movsl
shrl
fidivrs
stos
lcall
xchg
mov
sub
sub
aas
ds
cld
add
pop
cs
roll
arpl
adc
mov
dec
mov
dec
in
mov
mov
fldenv
and
lret
lret
pop
addr16
js
sahf
xor
ror
in
sbb
adc
push
and
ja
fnstsw
mov
push
and
arpl
add
xlat
out
push
xor
push
imul
in
push
outsl
sbb
fisttps
adc
dec
dec
jp
in
jg
jno
ljmp
stc
stos
clc
ja
out
pushf
popf
push
test
outsl
push
pop
sub
ret
xor
cmp
xlat
and
jecxz
repnz
cmpsl
add
insl
aad
stos
xchg
imul
addr16
xchg
mov
add
xchg
dec
mov
inc
lods
pop
xlat
rolb
popf
or
ja
dec
mov
js
xlat
adc
add
in
iret
jb
nop
mov
xor
pop
in
mov
or
jnp
push
cld
repz
sub
sub
shrl
lret
sub
aas
dec
ret
fwait
push
xorl
xor
dec
pop
sub
subl
pop
inc
pop
jbe
cmp
cwtl
fdivrl
push
in
adcb
and
xchg
inc
shl
cmc
mov
loope
lods
fidivrl
call
push
test
cmp
mov
add
dec
imul
int
mov
cmpsb
mov
cmp
in
popf
imul
enter
addr16
cs
and
dec
daa
aam
or
gs
pop
lahf
xor
mov
cli
addr16
inc
in
inc
and
adc
pop
ljmp
pop
insb
filds
ss
add
loope
push
or
pop
mov
adcb
add
push
cmp
ljmp
push
xchg
sti
int3
incb
push
xor
imul
push
push
jl
aad
shlb
jg
and
cmp
lock
mov
imul
clc
cmp
xchg
push
mov
loopne
fs
and
push
xlat
insl
sbb
pop
jae
cmc
push
int3
jmp
adc
mov
repnz
lcall
xor
out
loop
push
cmp
xchg
fs
sbb
cmp
jmp
scas
cmpsb
int3
adc
ja
mov
sbb
cli
das
cmp
push
jb
mov
dec
fsubp
and
dec
add
orb
xorl
xor
mov
fisubl
jbe
xor
in
xor
adc
inc
sub
push
das
fwait
ljmp
fisttpll
xchg
shrl
add
xchg
push
dec
and
and
into
jno
inc
fisubs
mov
call
idivl
test
sub
cmp
pop
loope
fadd
jno
lock
shl
fwait
in
xor
pop
icebp
add
testl
mov
adc
pop
adc
adc
cwtl
jo
and
mov
orl
call
fcoml
push
sub
or
push
fists
aas
cmp
xchg
loopne
rcrb
loop
push
in
dec
jb
and
pop
push
test
out
push
cltd
insb
insb
sub
hlt
sbb
fsubrs
dec
mov
add
movsl
push
push
dec
in
xchg
xchg
inc
cmp
add
repz
push
xor
inc
iret
xor
jne
mov
jne
in
cld
fs
outsl
out
loop
push
clc
and
inc
or
aam
js
vpxor
iret
iret
pop
pop
into
push
pop
dec
xchg
sub
loopne
lods
bnd
mov
xor
sub
fs
rorl
fcmovne
adc
enter
xchg
das
xor
and
or
stos
lock
iret
pusha
adc
xchg
sbb
inc
adc
popaw
scas
xchg
mov
fwait
mov
adc
and
adc
sarb
aad
test
mull
mov
adc
mov
pop
neg
pop
dec
push
fdivrl
les
ds
iret
mov
dec
sbb
push
mov
add
loope
sub
mov
hlt
idivb
xchg
dec
out
jl
inc
jo
mov
xor
push
jb
shrb
add
leave
hlt
mov
sbb
add
enter
repnz
popf
daa
jns
pop
icebp
cmp
inc
sti
cld
into
dec
xchg
cmp
icebp
jl
jl
push
push
mov
in
cmpsb
sub
push
sub
push
into
mov
rcrb
cmp
sub
andl
jae
in
push
movsb
push
mov
arpl
inc
push
dec
xlat
mov
pop
ljmp
sub
movsl
xchg
int3
mov
fwait
aaa
incb
cmpsl
je
ss
jle
ds
push
aam
cmp
mov
lods
neg
sub
or
pop
sub
loopne
cmc
add
sti
incb
ss
add
mov
mov
cmpsb
arpl
sub
cmpsb
inc
inc
das
cmc
sub
push
lea
ds
in
xchg
ds
lods
or
pop
sub
insb
call
loop
mov
dec
jmp
shlb
xor
rclb
and
or
inc
fldt
xchg
addr16
mov
rcr
rclb
nop
loope
ds
mov
mov
loopne
pop
scas
lods
push
mov
cmp
inc
loopne
mov
sub
sbb
mov
std
sub
pop
sub
or
das
add
ja
pop
lea
mov
ret
scas
or
out
mov
xchg
add
fmulp
inc
test
push
or
or
orb
ret
js
sbb
and
mov
iret
ljmp
adc
xorl
js
ljmp
mov
mov
iret
jae
notb
mov
inc
cmpsl
cmp
pop
and
sub
adc
out
dec
lret
in
xlat
sbb
xchg
pushf
loopne
aaa
ss
push
or
adc
inc
adc
jno
inc
icebp
sbb
mov
mov
loopne
lds
dec
sub
xchg
icebp
hlt
xchg
mov
sbb
in
pop
jno
aam
sbbl
lret
mov
loope
roll
repz
lock
inc
das
add
icebp
ret
pop
outsl
jne
aad
repz
ds
inc
inc
int
clc
stc
ss
jle
scas
rcll
movb
scas
mov
push
xlat
adc
dec
test
push
mov
or
push
loopne
movsl
ja
or
rcr
pop
sarb
rcll
imulb
jmp
mov
cmp
mov
into
ficompl
jo
insl
fsub
out
imul
out
std
es
call
adc
or
or
adc
ficoml
sub
std
bound
xchg
lea
push
mov
repnz
mov
je
cmp
pop
inc
or
popa
or
and
dec
mov
jno
xor
dec
movsl
cltd
lret
inc
int3
push
ss
incl
adc
mov
inc
cmove
fidivrs
imul
repz
inc
sub
test
pop
cmc
stos
fiadds
shl
xor
xor
jae
movsb
xchg
mul
jnp
and
mov
icebp
sbb
mov
loop
outsl
xor
fs
mov
dec
or
rclb
stos
push
push
jl
nop
sub
js
cli
out
loop
cmp
fs
ljmp
repnz
popf
xor
jb
mov
inc
sbb
push
es
xchg
mov
stos
sbb
mov
stc
test
in
add
mov
out
aas
imul
push
mov
outsb
jno
clc
divb
ror
jo
inc
shlb
out
sahf
repz
outsl
xchg
push
xchg
subl
aad
sub
mov
insb
loop
mov
das
orl
jmp
dec
push
pop
movsl
mov
xchg
mov
sbbb
adc
inc
mov
xchg
cltd
or
jne
sbb
push
or
data16
lcall
gs
gs
icebp
mov
mov
sub
push
movsb
sbb
fdivrl
sbb
cs
scas
inc
shr
push
mov
aaa
fcmovbe
or
mov
ds
mov
imul
lea
push
testb
push
repnz
mov
and
mov
es
lret
inc
cmp
stos
into
fstl
jo
aaa
fsubr
jae
cmc
add
sbb
call
mov
popl
xchg
leave
loop
cmp
sbb
xor
fists
lds
imul
cmc
xor
add
nop
and
faddl
out
jb
xor
sbb
pusha
popf
fdivp
das
jg
inc
jecxz
ds
pusha
movsl
ret
out
mov
mov
fists
repnz
mov
movsl
inc
mov
push
mov
lret
add
push
movzbl
dec
and
imul
add
jo
push
fisubl
sub
dec
xchg
jns
adc
ret
and
push
sbb
out
jno
pushf
shll
mov
loope
ret
lret
das
cmp
push
xchg
mov
push
sbb
mov
les
arpl
or
popa
cld
cmp
sbb
and
push
out
jno
outsb
jne
sbb
enter
cmp
loop
cmpsb
jp
rcll
out
in
adc
mov
sub
fsubs
sbb
stc
cmp
loope
int
cld
inc
jg
clc
vmovaps
xor
lods
sbb
and
sti
or
ds
inc
adc
mov
push
sbb
sub
adcl
imulb
sub
loopne
jnp
in
pop
and
mov
push
ret
jle
cmp
pop
shll
inc
jne
andb
jnp
test
sbb
xchg
push
insb
adc
sub
and
iret
dec
test
jle
sahf
test
mov
fisubl
icebp
out
jbe
mov
test
divb
xor
lock
shr
sub
pop
gs
aad
ror
test
lock
sbb
sbb
mov
mov
addr16
lock
jbe
adc
test
cmp
add
sub
mov
outsb
js
xor
xor
mov
cld
sub
jle
mov
add
outsb
sbb
and
cli
or
jbe
cli
repz
dec
inc
fnsave
fisubrs
leave
fisubrs
sbb
pushf
call
jnp
xchg
inc
adc
and
jnp
xor
or
xor
js
mov
mov
mov
dec
sbb
or
adc
int
xchg
and
std
dec
enter
popf
xor
xor
fistl
pop
es
inc
clc
insl
jecxz
sti
pop
inc
or
and
dec
xchg
cli
push
sub
js
jnp
inc
addr16
int3
cwtl
dec
aad
lcall
icebp
jmp
jecxz
push
cmp
sti
and
clc
inc
or
mov
jle
xchg
into
in
mov
mov
popa
popa
jo
xor
sbb
inc
dec
xlat
jp
fnstsw
hlt
mov
cld
cmp
inc
sbb
or
mov
testb
mov
sub
dec
mov
out
push
sub
jp
leave
push
imul
mov
adc
jp
xor
xchg
into
jne
aad
or
nop
pop
or
xchg
inc
out
rcrb
jge
ss
cmp
xchg
push
mov
cmp
aaa
cld
mov
dec
add
jo
mov
into
adcl
push
faddl
std
adc
jno
push
ljmp
fisttps
or
mov
push
jae
sbb
jo
push
push
mov
into
dec
inc
mov
mov
and
jb
jbe
imul
pop
insb
test
mov
cmp
push
fisubs
stos
test
lret
scas
and
and
jp
and
aaa
fsts
or
inc
int
int3
jae
and
jmp
lcall
aad
cmc
pop
and
inc
aas
push
mov
dec
call
adc
pushf
ret
adc
pop
mov
push
jl
add
pop
shrl
repz
test
clc
mov
in
mov
jb
out
jno
push
xchg
sahf
pop
test
xchg
sbb
add
jl
clc
xor
mov
xchg
inc
xor
cmp
fisubrs
inc
fidivrs
or
cmp
movsl
or
inc
cwtl
mov
test
mov
lcall
dec
xchg
shll
jg
jecxz
imul
sahf
aas
insb
xchg
test
jg
aam
out
mov
or
icebp
loop
mov
jne
adc
push
adc
das
dec
and
enter
outsl
jbe
xor
and
mov
ficompl
and
add
adc
fcmovne
push
jo
cmp
rcrl
pop
loop
fstpt
sub
lret
insb
notl
in
das
jmp
lods
insb
jno
sar
vmwrite
mov
jle
sub
ljmp
push
les
rclb
mov
cmp
mov
mov
sub
movsb
lcall
xor
inc
mov
push
dec
and
mov
je
iret
push
mov
pop
xor
xor
movsl
inc
push
fmul
psrlw
inc
je
fwait
pushf
inc
and
or
ljmp
dec
out
mov
into
adc
outsl
jo
fwait
cmp
jne
sahf
xor
push
test
cmpsb
cwtl
mov
and
mov
out
sti
outsb
mov
pop
stos
push
mov
jns
or
adc
call
xor
mov
inc
mov
dec
add
cld
adc
jmp
lea
rclb
lret
testb
sbb
outsb
adc
call
iret
xchg
dec
jno
fisttpll
pop
cmp
adcb
xor
loope
dec
mov
dec
cli
push
andl
aas
into
push
or
jb
jle
xor
xor
adc
inc
jecxz
adc
testb
inc
shr
cmp
into
loopne
sbbl
adc
outsb
outsb
out
rorb
xchg
pop
dec
clc
bound
rolb
cmpl
jl
rclb
sbb
ljmp
mov
pop
add
divl
mov
xor
jg
daa
and
cmp
mov
sbb
xchg
mov
pushf
pop
sarl
and
das
int3
and
jbe
sub
jno
scas
jb
pusha
mov
out
dec
push
lret
pop
imul
push
mov
aas
outsl
gs
lret
gs
sub
inc
jl
iret
sub
dec
aaa
lcall
or
int3
mov
mov
sbb
pop
mov
sti
stos
mov
push
stc
push
cmp
aam
xor
mov
decl
and
sbb
fnstenv
sahf
xchg
icebp
shlb
or
add
clc
xlat
ret
test
mov
mov
mov
mov
dec
mov
dec
cmp
sbb
aas
scas
cmc
out
push
mov
adc
in
in
stos
mov
ret
mov
cmpl
stos
fcoml
mov
scas
and
xchg
fwait
sahf
cmc
mov
push
lds
mov
mov
das
inc
mov
or
in
sub
mov
imul
ds
mov
out
out
push
movsl
add
push
addl
cmp
push
add
sbb
enter
hlt
lea
jo
orl
lret
stos
push
loope
or
scas
aam
ficoms
ds
mov
aad
inc
lea
int
call
loope
dec
mov
push
fisttpll
inc
adc
mov
dec
cmpsl
ss
out
ss
dec
sub
lock
push
pop
cmc
es
pop
inc
repz
xchg
enter
outsb
pop
mov
mov
mov
sbb
pop
sub
imul
dec
and
ret
in
add
popa
arpl
add
orb
fwait
dec
pop
pop
cltd
jmp
jl
hlt
fmuls
in
inc
lods
jmp
push
idiv
mov
sbbl
dec
lahf
dec
rolb
imul
jmp
sbb
xor
aaa
xor
fmuls
inc
push
lret
test
jns
push
repnz
jge
jnp
inc
fs
mov
jg
or
sbb
fs
je
adc
arpl
dec
mov
mov
and
roll
dec
jg
hlt
mov
repnz
mov
xlat
ret
test
mov
lahf
mov
pop
aas
jg
ljmp
jo
dec
dec
icebp
mov
inc
cltd
fmuls
mul
sarl
or
loope
fmuls
adc
stos
dec
fmull
cmpsl
xor
mov
ret
jbe
adc
inc
inc
mov
ret
jmp
js
pop
mov
mov
pop
dec
dec
movsl
sbb
aaa
loope
mov
cmp
call
adc
and
sub
shlb
adc
ret
mov
jecxz
add
icebp
push
loopne
xchg
inc
jl
cli
cltd
cltd
test
mov
cli
pop
call
cld
mov
inc
or
in
fbstp
mov
int
ret
push
inc
mulb
push
inc
cltd
pop
jbe
sub
ds
jle
in
inc
jb
inc
jecxz
xor
mov
ffree
fwait
push
adc
jecxz
into
xchg
out
shlb
push
repnz
dec
lods
jns
pop
pop
cld
adc
lods
stos
in
movsl
movsb
cmp
sahf
out
hlt
mov
aas
add
xchg
outsb
out
and
into
fisubrl
dec
sbb
jno
xor
jb
loopne
add
popf
pop
inc
sbb
cmpsb
es
sbbl
popa
in
shl
sub
mov
loopne
pop
xchg
dec
inc
add
jae
add
mov
cli
sub
push
push
inc
mov
or
imul
nop
jb
mov
in
mov
fsts
cmpsl
sub
sti
mov
cmp
mov
add
movsb
jb
jb
rcrl
lret
and
cmpsb
jne
out
ja
push
xchg
jne
mov
xchg
mov
jbe
in
mov
sti
xor
push
lcall
add
pop
mov
fwait
and
mov
imul
and
test
fcoml
in
jl
sbb
xchg
cmp
out
xlat
setbe
addr16
pop
repnz
in
pop
inc
mov
aam
push
xchg
push
sub
mov
cli
xchg
test
enter
inc
dec
xchg
cmc
repz
imul
out
out
xor
xchg
imul
inc
add
lock
movups
sbb
and
das
xchg
push
call
inc
enter
icebp
xchg
push
mov
and
jecxz
adc
cli
scas
cmp
out
testl
iret
sbb
jmp
adc
add
dec
ljmp
outsb
inc
mov
add
pop
pop
pop
das
dec
bnd
pop
addb
xor
imull
sub
movsl
shrb
idiv
mov
add
repz
out
sbb
test
add
or
jne
daa
and
rcl
dec
adc
or
sub
enter
fbld
frstor
fistl
pusha
ret
mov
cmp
mov
sub
mov
enter
cmc
add
leave
xchg
in
push
dec
dec
cwtl
ret
cmp
mov
dec
cmp
add
pop
cli
and
lock
push
cld
inc
stc
loope
test
ret
in
aaa
cmc
push
sub
inc
cmpsb
jne
data16
out
lods
adc
fcoml
sbb
push
gs
jle
lcall
adc
mov
mov
inc
pop
xor
call
dec
or
fstl
pop
inc
pushf
cli
inc
fsubrp
sbb
mov
scas
sbbb
jmp
add
pop
mov
mov
notb
cmc
mov
mov
pop
rolb
cltd
in
jne
data16
fwait
inc
out
lret
mov
mov
mov
sbb
sbb
xchg
cmp
stos
inc
mov
mov
inc
into
push
je
push
pop
ljmp
dec
pop
inc
andl
daa
push
pop
push
mov
xor
add
mov
fcomip
scas
ljmp
adc
jg
movsb
std
add
cmp
imul
mov
push
mov
adc
push
pop
outsl
pop
mov
inc
pop
les
push
xchg
or
jno
xchg
push
cmp
test
dec
iret
test
sub
mov
call
adc
rorl
repnz
fiaddl
jns
sub
es
jns
movsl
add
push
ljmp
mov
xorl
mov
mov
cltd
int
jecxz
lds
sub
mov
lods
dec
shl
out
movsl
mov
in
arpl
mov
inc
push
cmp
movsl
ds
mov
dec
mov
adc
shll
bound
std
repz
imul
mov
stc
sub
or
push
sub
push
loop
sbb
mov
sub
lcall
lret
lods
pop
inc
mov
or
adc
mov
scas
aam
and
xor
xor
jge
popa
sub
xor
jl
and
roll
pop
sysret
sarl
insl
mov
xor
test
push
xor
loop
jmp
data16
sub
mov
iret
stc
cld
ret
inc
hlt
sbb
or
pop
insb
xlat
xor
movsb
xor
or
jle
add
push
cmp
ss
adc
push
sub
cmp
xor
inc
nop
push
mov
jmp
or
cld
lock
jmp
cmpb
mov
push
pop
inc
jp
pop
pushf
xchg
scas
loope
mov
ret
sub
loopne
xor
cmp
pop
jo
mov
cmp
rolb
push
or
mov
iret
movsl
sub
adc
lods
jge
out
add
sub
fisubrl
daa
loope
popf
or
mov
popa
mov
mov
repnz
lahf
fiaddl
ret
inc
pop
push
enter
mov
fisubrl
adc
leave
mov
test
adc
push
aad
psrlw
lods
js
inc
xchg
jle
inc
mov
rcll
js
push
fsubs
mov
fdivs
add
into
outsb
fbstp
fwait
sub
xchg
mov
stos
addr16
push
lods
cltd
lret
push
sbb
ljmp
mov
jmp
add
adcl
or
sub
sti
das
dec
mov
movsb
scas
jb
cmp
ds
xor
jb
and
pop
jo
lods
ffreep
fdivl
cmp
mov
inc
test
rorb
jl
shl
lds
adc
mov
movsl
sbb
inc
in
or
xchg
addb
xchg
jnp
mov
sahf
addr16
xlat
pop
sbb
adc
xlat
jp
adc
push
inc
or
or
sbbl
sbb
mov
int
lret
jp
push
jae
mov
adc
loop
and
mov
scas
mov
rcrl
into
and
xchg
push
leave
into
addr16
int
mov
enter
xor
sbb
dec
fs
ds
ljmp
jmp
cmpsb
ds
xlat
lret
bound
pop
cmp
sbb
aad
stos
sbb
sub
mov
icebp
int
mov
rorl
xlat
pushf
cmp
dec
int
pushf
insb
inc
and
mov
rclb
jmp
ret
or
xchg
mov
jae
inc
test
movsb
lret
push
push
pop
push
dec
xlat
data16
and
xchg
pusha
lods
jmp
scas
outsb
pop
add
sarb
pop
inc
sub
push
mov
and
bound
sub
mov
call
stos
bound
cmp
lock
sub
rcll
cmp
pop
and
cmp
sub
iret
lods
lds
arpl
jge
cmpsl
cmp
pop
pop
in
and
stos
stc
leave
test
mov
outsl
mov
push
mov
cmp
es
gs
fistl
out
mov
insl
and
inc
jmp
loope
pop
lret
nop
and
bound
ljmp
dec
insb
mov
jb
in
inc
in
sbb
mov
mov
pop
rcll
inc
sub
cmc
and
out
repz
jp
add
jl
repnz
lret
dec
sbb
sbb
sub
xchg
mov
fimull
push
fwait
outsb
inc
scas
add
dec
lret
mov
and
jmp
jae
in
cld
jl
adc
mov
cmp
add
stos
pop
aam
movsb
fistps
in
xlat
mov
jge
cli
adc
xor
iret
jb
mov
cmc
testb
out
push
dec
or
data16
sbb
lods
mov
jp
cwtl
jno
shll
dec
lods
jae
push
pop
add
dec
mov
mov
mov
pop
add
js
enter
dec
incl
test
popf
lods
imulb
mov
pop
push
int
out
das
push
jno
sbb
cmp
mov
je
mov
and
and
push
fidivs
xchg
int
adcb
pop
adc
lock
jno
out
jge
mov
add
jp
cmpsb
lock
push
push
push
pop
push
js
mov
mov
arpl
cmpsl
sub
mov
xchg
and
mov
jl
pop
iret
push
sti
mov
pop
scas
push
inc
xor
std
mov
js
push
sbb
adc
dec
lods
adc
lods
jmp
ret
mov
mov
gs
dec
orl
jg
jno
cmp
pop
cmpsl
sub
lret
addr16
test
inc
add
push
mov
insl
mov
in
add
out
sub
int
neg
stc
lsl
push
sub
aad
jbe
imul
push
mov
jp
or
adc
stc
mov
cli
or
icebp
data16
fists
adc
fcompl
jl
adc
dec
dec
clc
mov
dec
es
xchg
repnz
push
dec
push
dec
jecxz
popf
xor
add
mov
shlb
js
xor
xlat
rclb
daa
mov
outsl
push
je
dec
xchg
adc
icebp
aad
xorb
dec
fldl
jp
pop
lock
lock
pushl
lret
xor
mov
push
aam
add
scas
mov
fcmovne
out
leave
jge
das
jg
fwait
xchg
push
rcrb
xor
popa
push
arpl
mov
scas
mov
and
adc
and
int
and
xchg
pop
xchg
push
push
ds
fistps
in
shrb
pop
ja
adc
hlt
cmp
test
add
xor
lds
mov
xchg
pop
xchg
sub
pop
push
and
fadd
leave
cmp
inc
xchg
dec
out
mov
inc
out
inc
aaa
bound
fwait
sahf
lret
cmp
sbb
dec
es
inc
addl
add
sbb
imul
out
scas
sbb
pop
data16
imul
mov
stos
mov
xorb
std
sub
in
sbb
mov
pop
sub
mov
mov
cmc
lock
mul
sub
arpl
ret
nop
sbb
insl
ret
cmpsl
xor
addr16
fistpll
xchg
ljmp
sahf
dec
popf
jns
xchg
decl
or
sub
pop
xchg
adc
cmpsb
test
fs
les
or
decl
sub
clc
mov
mov
les
push
xor
sub
push
mov
jg
dec
fsubs
fildll
frstor
inc
pop
mov
gs
stc
dec
lods
pop
or
mov
sti
push
xchg
add
js
adc
call
insb
or
aam
sahf
rcrl
dec
pop
jns
movsl
idivl
sbb
js
nop
rcrb
pop
aam
jne
popa
inc
mov
insl
add
into
adc
or
xchg
inc
insl
or
sub
adcb
shlb
cmp
movsl
shl
dec
into
shlb
xchg
fiaddl
in
outsl
fucom
pop
in
enter
lahf
and
fmuls
imul
xchg
mov
xchg
fsubl
inc
fsubrs
test
mov
mov
and
add
push
mov
fiaddl
dec
mov
adc
cmc
pop
xor
xor
jl
mov
mov
and
xchg
adc
xchg
pop
imul
ljmp
outsb
and
jl
cmp
dec
inc
sbb
xor
shlb
inc
ja
jns
lcall
lock
sub
pop
sbb
in
cmp
mov
mov
cmpsb
push
add
inc
mov
sarb
in
mov
and
pop
mull
jb
or
mov
xor
push
adc
enter
inc
push
mov
sub
fdivl
adc
cmp
call
xchg
cmpsl
jno
inc
xor
cmc
repz
xchg
lahf
dec
inc
xchg
push
fsub
sub
sahf
or
out
xor
aam
gs
outsl
cmp
lcall
shll
test
jmp
pop
mov
rclb
push
imul
dec
adc
xchg
dec
daa
ss
je
dec
iret
movsb
adc
mov
sbbb
and
lret
sbb
or
lret
flds
sti
adc
and
add
dec
pop
js
jnp
into
mov
push
pushl
popf
in
mov
push
or
std
xchg
mov
sub
iret
push
adc
mov
out
push
cwtl
mov
call
jae
cmpsb
xchg
ss
movsb
bound
mov
data16
lcall
pop
iret
test
push
jle
push
sub
cmc
cwtl
pop
stos
leave
or
out
mov
add
subb
jecxz
lds
xchg
aaa
mov
clc
iret
xor
cmp
hlt
mov
popf
loope
pusha
sbb
lcall
xor
mov
ret
mov
lret
lods
xor
mov
stos
imul
mov
sub
sub
push
addb
inc
aam
push
into
test
dec
mov
adc
push
sub
testb
fsts
cmpl
jnp
and
or
mov
inc
ret
shll
in
mov
pop
jae
mov
fwait
ljmp
int3
lods
in
stos
cmpsl
sbb
mov
aaa
push
sbb
lods
mov
mov
cs
cmp
pop
xchg
pop
mov
rorl
movb
adc
aad
fwait
ret
push
into
push
dec
or
xchg
pop
aaa
jl
push
popfw
sbb
mov
enter
in
jmp
shl
pop
xchg
mov
inc
add
cmp
cmp
lock
out
and
jp
sti
xchg
mov
das
frstor
cmp
sbb
cwtl
in
ficompl
push
xor
ret
aad
hlt
data16
and
cwtl
outsb
xor
loope
or
fstps
push
push
dec
mov
out
mov
jb
cli
jge
btr
andb
mov
cmp
and
sbb
mov
js
loop
in
lock
push
call
rcl
or
add
sub
call
dec
pop
sbb
and
or
push
aam
lods
pop
push
inc
cmc
cld
loopne
cmp
mov
data16
push
cmp
jl
adc
push
test
mov
xor
nop
sub
out
enter
lock
sti
fistps
jp
fimuls
and
outsb
bound
rcl
into
xlat
iret
mov
out
ret
shlb
pop
sbb
enter
aas
sbb
jecxz
push
div
hlt
jecxz
jmp
les
jns
rcrl
jbe
push
int3
popf
icebp
sub
loop
int3
xchg
fdivrs
xchg
cltd
inc
push
orl
aam
xchg
je
xlat
or
out
sti
ret
cli
in
pop
rdtsc
sti
cli
loopne
pop
je
fisttps
xchg
std
data16
lds
pop
or
inc
and
test
dec
xchg
xlat
popa
insl
jo
adc
sbb
add
add
ret
loop
cmc
pop
popa
insb
sbb
push
daa
xor
das
sahf
push
les
add
and
aam
lds
rclb
outsb
adc
addr16
mov
outsb
test
xchg
sbb
fstpt
out
sub
ljmp
andl
aam
adc
rclb
push
les
loope
add
jp
pushf
and
push
dec
hlt
push
adc
pop
fldcw
cmc
or
lds
sbb
call
sbb
push
test
in
mov
mov
imul
cmpsl
sti
pop
std
notl
pop
lods
movsl
mov
outsb
pushl
cltd
adc
sti
inc
movsl
or
arpl
fbld
jo
sbb
push
lds
out
lcall
mov
sbb
push
dec
int
insb
ja
inc
xchg
repnz
push
out
mov
mov
pop
fnstcw
orl
push
call
mov
in
outsl
lock
lcall
testb
subl
xor
push
loope
ja
adc
mov
popa
call
pop
rcll
scas
jno
jmp
sahf
movsb
aad
xchg
in
fs
dec
sub
test
or
lds
sub
lea
stos
push
ret
mov
ja
jnp
bound
outsb
add
jg
xor
bound
arpl
mov
or
add
and
pop
cmp
dec
les
fwait
sub
push
aaa
cmp
and
adc
push
mov
or
lret
bnd
lea
and
jae
inc
sahf
dec
jnp
and
or
mov
imul
js
inc
pop
cmp
call
out
test
scas
hlt
xor
dec
mov
cltd
les
aas
dec
mov
mov
xor
or
xchg
fistl
cmp
add
dec
pushl
xchg
adc
mov
movsb
jno
jle
pop
push
sets
adc
dec
loopne
sub
nop
cmp
pop
pop
pop
add
outsl
lret
clc
inc
sbbl
mov
ljmp
push
pop
gs
rclb
fadd
cmp
xor
cmp
cmp
lahf
js
push
lret
fistpll
filds
int
cmp
aas
movsb
aad
lds
mov
inc
movsl
and
cld
adc
push
ja
xlat
std
hlt
xor
cmpsl
jl
xor
pushf
xor
pusha
mov
mov
jmp
rcl
cmpsb
mov
xchg
ljmp
leave
gs
and
push
movsb
cld
stc
enter
cmp
sub
mov
sbb
shll
jbe
repz
int3
inc
jbe
in
mov
dec
adc
insb
std
mov
sub
push
jge
sub
leave
popa
fsubrs
dec
test
loopne
int
das
mov
xchg
fadds
inc
test
sbb
xor
insb
ror
mov
ss
xor
out
mov
and
shrl
xchg
xchg
xlat
cmp
pop
movsb
push
cwtl
setb
xor
shll
dec
push
dec
mov
addr16
andb
nop
cmpsl
xchg
fildll
jb
cmp
push
sbb
jns
dec
inc
flds
call
fs
in
ret
loopne
bound
pop
xlat
scas
add
push
dec
clc
cltd
mov
pusha
xor
cmpsl
cmpsl
mov
addr16
or
cmp
movsb
inc
icebp
aad
roll
mov
xor
in
jg
inc
cmp
add
push
adc
and
inc
xor
addb
pop
test
cs
mov
lret
xor
adc
xchg
fcmovnu
dec
cs
jbe
dec
and
and
xchg
aad
jo
and
lods
xor
xor
adc
stc
cmp
add
mov
cmc
add
cmc
idivb
xor
fwait
cmc
jmp
stc
cld
cmp
out
cltd
lcall
cmp
ficoml
nop
adc
inc
sub
lcall
jne
xlat
adc
data16
jge
lods
loope
jge
divb
mov
nop
out
loop
mov
roll
inc
lods
xchg
xchg
jp
jnp
inc
add
inc
lcall
cmp
dec
sbb
popa
inc
xlat
xor
xchg
xchg
cmpsb
adcb
rcll
loope
mov
push
pop
mov
fwait
outsb
sub
out
mov
adc
cltd
push
xor
adc
sbb
test
lea
lods
mov
es
das
xchg
or
sarb
adc
push
sahf
add
leave
jmp
ja
or
ds
mov
test
adc
aam
jb
mulb
rorb
jmp
imul
xchg
jb
push
pop
xchg
and
push
insl
cmpsl
add
push
test
jg
xchg
std
lret
data16
in
xor
lcall
or
push
enter
mov
sbb
insb
sbb
dec
push
add
dec
jge
pop
leave
fs
rcrb
popf
mov
stos
in
fstpl
fsts
rcll
sub
add
inc
fldt
xchg
xchg
ret
jge
pusha
jns
sti
pop
pusha
jg
push
popf
lcall
lea
mov
ss
push
mov
out
inc
out
lods
aad
imul
sub
xor
adc
js
mov
mov
into
xlat
lock
shrb
adc
cmpsl
push
call
add
push
enter
scas
xor
cld
ror
jbe
add
fwait
aas
sub
pop
lds
mov
dec
xchg
arpl
sahf
cmp
hlt
test
jae
test
mov
dec
sbb
jge
cmp
pop
inc
and
push
inc
push
je
clc
mov
ret
xor
fdivrl
scas
es
add
inc
xor
xor
rclb
sub
out
jbe
mov
clc
pop
loope
loop
scas
xchg
dec
adc
fildl
cmp
ret
and
int3
cld
loope
inc
mov
cmc
loop
mov
cmp
and
adc
xchg
xchg
inc
pop
mov
je
pop
xchg
aam
mov
ljmp
lret
xchg
jo
sbb
xchg
and
popf
popa
mov
shrb
push
notl
popf
fwait
clc
adc
into
jnp
push
divl
loopne
test
imul
mov
xor
in
pop
out
jp
pop
mov
leave
mov
mov
test
icebp
out
mov
push
mov
mov
js
sub
nop
fcoml
mov
pop
mov
mov
sub
fnsave
and
add
push
repnz
in
cmp
add
mov
repnz
shr
mov
jl
and
es
mov
sbb
insl
mov
mov
shr
hlt
enter
pop
or
inc
repz
jmp
stc
fiadds
das
das
test
daa
mov
in
mov
fnstsw
popa
and
add
mov
sub
add
insl
push
hlt
jns
jno
outsb
mov
push
lcall
fimull
dec
cmp
test
add
fstp
test
into
scas
xlat
push
inc
xchg
clc
cmp
sub
mov
loope
and
in
mov
sbbb
testl
andb
add
negb
cmp
mov
add
push
sub
jg
or
mov
lcall
mov
sub
xchg
push
loop
dec
je
adcl
sahf
call
loop
jbe
xor
mov
test
and
push
sti
push
xlat
add
aam
iret
pop
lret
cmp
mov
lock
mov
xchg
mov
mov
or
test
ret
push
out
pop
push
push
push
cmpsl
xchg
cmp
insb
nopl
je
jnp
fisubs
pop
or
and
xchg
fs
lods
ss
xlat
sti
dec
xchg
div
leave
mov
bound
addr16
scas
xchg
mov
vaddsubps
lds
dec
sbb
push
mov
cmc
mov
aaa
dec
jne
imul
add
mov
jno
sub
adc
fs
sbb
mov
popa
movsb
je
sbb
and
cli
pop
push
push
aam
testl
cmc
stos
mov
inc
inc
or
add
lock
push
lods
mov
push
push
jns
pop
and
daa
sub
mov
or
cmp
jnp
test
mov
outsb
loopne
pushf
sub
adc
mov
pop
xor
int
cmp
cli
inc
mov
ret
adc
lods
cmp
sub
add
pop
pop
mov
insl
jge
push
sbbl
ljmp
jmp
aas
sub
jno
iret
mov
out
movsb
bound
ljmp
stos
xchg
loope
push
in
insb
gs
fsub
testl
not
mov
inc
dec
pop
sub
and
clc
stos
lea
and
pop
gs
mov
lds
xchg
int3
mov
pop
fdivrl
pop
pusha
mov
hlt
mov
dec
adcl
mov
jno
dec
mov
adcl
mov
fnstenv
and
adc
sub
jmp
stos
filds
xchg
xor
push
imul
popf
jmp
xor
xlat
outsb
in
jno
lahf
mov
out
adc
pop
and
adcb
add
faddl
pop
xor
mov
cltd
push
xchg
lret
cmp
fadd
addr16
pop
sbb
xor
dec
pop
outsl
sub
pop
cltd
or
add
mov
repnz
mov
cld
and
mov
pop
inc
mov
dec
cltd
and
push
xchg
mov
cs
test
scas
in
xchg
add
insb
insl
into
aam
adc
imul
lea
gs
mov
lods
mov
mov
and
sbb
lahf
dec
adc
daa
jb
sub
inc
and
sub
jg
adc
push
fs
pop
jle
dec
xor
out
adc
movsb
into
xlat
sahf
lret
pop
push
xchg
cmp
push
lods
aam
outsb
les
int
or
mov
addl
fdiv
mov
adc
fldl
shrb
repz
pop
xor
mov
mov
adc
or
popa
lcall
shll
dec
push
cmp
mov
inc
pusha
xor
push
mov
add
imul
and
add
mov
mov
outsl
mov
sub
aam
mov
out
negl
jbe
or
sub
pop
inc
and
jmp
enter
aad
insb
out
jmp
rolb
push
rol
push
stos
xor
jbe
ret
push
mov
xchg
jne
insb
inc
test
mov
sub
int3
jmp
fucomp
mov
and
mov
mov
js
sbb
push
iret
sbb
push
xchg
jg
sbb
lret
mov
push
mov
jbe
imul
sti
sbb
xchg
sub
insl
outsl
nop
pop
xchg
lods
and
fidivs
ds
rcrl
enter
mov
loop
or
inc
scas
fiadds
mov
call
push
mov
lods
fsubl
pop
push
daa
icebp
dec
or
out
rcl
imulb
dec
and
adc
or
into
sbb
aas
shll
das
ret
jge
dec
mov
push
es
nop
push
xor
xchg
rcrl
outsb
insb
xchg
cs
and
mov
test
xlat
xor
sbb
xchg
mov
push
je
mov
js
aaa
or
mov
cmpsb
jnp
adc
ret
add
adc
push
incl
loopne
imul
cmp
movsl
arpl
fwait
xchg
mov
add
iretw
insb
sbb
jp
stos
pop
pop
call
and
stos
es
scas
aam
jmp
xor
es
aam
sbb
xlat
or
pop
mov
pop
sbb
nop
inc
popf
mov
sahf
dec
xchg
sbb
xor
and
ds
or
into
sti
jg
les
add
ljmp
lret
adc
jno
in
sub
fcomps
xchg
hlt
in
mov
into
imul
cmp
movsl
push
mov
orb
sbb
fdivrl
addr16
dec
mov
xchg
mov
vmovlpd
and
push
mov
out
sub
mov
xor
push
mov
add
ss
test
test
sahf
aam
dec
cltd
iret
les
and
sub
inc
repnz
lret
sbb
mov
push
inc
inc
adcb
adc
movzbl
pop
cli
gs
mov
sarb
and
cld
cmp
out
cmp
ja
push
pop
shlb
fwait
inc
xorl
lret
je
inc
sbb
addb
out
xor
ss
popa
push
mov
repz
jg
loope
cmp
mov
out
cmp
pop
cmp
mov
xor
pop
cmp
ret
test
call
les
stc
inc
clc
or
sub
jmp
sub
mov
out
sub
out
xor
sub
in
movb
or
pop
ljmp
pop
jb
inc
mov
push
shr
push
imul
orl
movsl
nop
fildll
pop
mov
imul
pmuludq
xlat
and
dec
pop
and
out
and
loop
or
xor
xchg
sarb
cld
cli
popa
insb
pushf
arpl
iret
lods
xchg
lods
rcl
out
add
sbb
sbb
test
cltd
arpl
addl
add
ljmp
or
push
sbb
xor
sub
pop
cmp
loope
hlt
mov
push
das
inc
int
lret
pop
fistl
dec
sub
and
gs
and
and
popa
jae
fwait
leave
int
xchg
jae
mov
cmp
mov
enter
js
shlb
mov
sti
mov
mov
gs
jns
push
jnp
inc
in
xlat
ret
mov
bound
stc
insl
push
mov
push
jge
insb
or
clc
add
enter
sti
in
adc
test
mov
or
cltd
mov
rcrl
movsl
push
pop
jo
jae
sub
jge
leave
inc
testl
test
clc
out
imul
push
addr16
sbb
aam
push
les
outsb
jae
mov
xchg
xchg
dec
push
push
enter
sub
push
xchg
mov
or
shr
jmp
lcall
pop
repz
jns
add
xchg
test
mov
add
je
mov
rorl
in
rolb
adcb
aam
lods
add
les
enter
pop
clc
jle
pop
das
push
ret
cltd
sti
dec
loop
idivb
push
xlat
stc
inc
lock
xchg
xor
pop
stos
jnp
push
add
xor
fadds
lahf
or
mov
mov
jae
stos
leave
lods
shlb
adc
shrl
bound
stos
inc
mov
mov
imul
inc
pop
nop
mov
sbb
and
out
std
clc
fs
test
nop
lods
or
movb
andb
pop
out
pop
or
cwtl
or
jge
mov
jp
inc
popf
popa
test
add
enter
repnz
insl
je
or
lods
xchg
add
bound
dec
fstpl
adc
ss
mov
xor
push
lcall
call
jnp
or
push
sub
popa
daa
es
repnz
scas
scas
mov
adc
iret
jp
iret
gs
test
xchg
add
dec
jb
stos
andl
iret
or
popa
and
pop
bound
pop
mov
mov
sub
and
push
dec
push
mov
sub
cmp
add
mov
push
fisubs
sbb
shlb
iret
divb
add
movsb
incb
scas
inc
ret
mov
mov
aam
cmp
and
mov
xchg
pop
jbe
sbb
inc
dec
out
inc
pop
cmp
fdivl
mov
lock
popa
cli
jne
mov
pop
stos
jne
xchg
add
loopne
rolb
jno
scas
cmp
pop
es
xor
rcll
pop
lods
cmpsl
ret
popf
lret
cmpsb
dec
jae
test
adcl
and
cmp
in
mov
xchg
or
xchg
sti
fs
dec
mov
fstl
divb
fprem1
inc
push
mov
jno
inc
in
testl
fsubl
cmc
pop
mov
adc
outsl
shr
pop
adc
loop
inc
push
lea
test
fs
aad
ljmp
jmp
sub
mov
mov
lret
jp
pop
cs
pop
cwtl
dec
cmp
add
lods
adc
leave
loop
mov
jecxz
fwait
pop
dec
mov
adc
sub
xchg
orb
push
les
sbbb
xchg
repnz
fcom
shrb
dec
fildl
insl
inc
int3
sti
mov
adc
out
fsubl
dec
daa
mov
mov
ret
xor
ret
in
stos
repnz
movb
leave
out
pop
ret
xchg
xchg
sub
in
stos
inc
xor
dec
ss
pop
or
cmp
cs
outsl
daa
push
les
adc
mov
outsl
add
mov
fsub
scas
out
hlt
iret
test
loopne
or
add
or
push
mov
jb
mov
out
in
dec
ja
loopne
adc
xor
vmovddup
dec
and
test
pop
xor
bt
pop
out
out
jge
fdivl
lds
or
movsb
test
or
fldenv
cmp
insb
or
cs
lret
xor
stc
imul
jb
add
xlat
fiadds
add
aas
jmp
jo
repz
test
lret
in
das
rclb
jo
and
sub
pop
fisttpll
add
xchg
sbb
imul
iret
mov
xchg
ret
jno
sahf
jle
jne
cli
xchg
mov
mov
xorl
sub
pop
test
or
cmpsl
sahf
in
enter
adc
or
pop
aaa
out
cmpsl
mov
adc
jp
mov
inc
adc
inc
or
xchg
fcoml
mov
shl
push
jle
lcall
fs
lea
sub
insl
mov
or
or
add
xor
mov
push
adc
test
mov
sti
rorb
mov
sbb
fnstenv
jle,pt
test
jnp
loope
icebp
stos
jno
in
movsb
xor
test
repz
inc
fwait
clc
pop
mov
mov
repz
popf
aam
pop
lds
push
mov
cmc
push
in
push
sub
out
test
pop
out
mov
mov
mov
jbe
or
push
push
xor
xchg
out
mov
mov
ds
or
fisttpl
outsl
mov
sahf
pusha
xor
push
mov
mov
xchg
lds
pop
add
mov
ljmp
add
xchg
xchg
outsb
sbb
push
push
xchg
cmp
lcall
std
mov
mov
and
jo
inc
lret
in
testb
fmull
popf
pop
push
stos
gs
mov
jmp
sbb
orb
and
xlat
divl
sarl
add
cmp
and
xchg
pop
repz
inc
inc
pop
pop
lock
mulb
ss
leave
cmp
movsb
sysexit
daa
pusha
cmp
lahf
es
fdiv
cmc
nop
in
mov
sub
add
jp
or
in
stc
mov
lret
ficompl
popf
in
jp
or
and
push
ds
sbb
ret
and
xchg
jae
push
insl
xlat
xchg
mov
mov
inc
shl
xor
pop
xor
mov
in
insl
out
inc
or
call
mov
xor
mov
push
push
notl
xor
xchg
fwait
adc
rorb
mov
xor
repz
clc
jns
mov
mov
add
jg
adc
sub
push
and
mov
pop
pop
cmc
imul
cli
mov
ljmp
in
aaa
sti
and
mov
inc
mov
shlb
inc
inc
mov
mov
cmp
mov
sub
mov
sub
cli
xor
loopne
xchg
xchg
jle
nop
cmp
dec
and
lods
cmpsl
cmp
sub
jge
cmp
shl
mov
mov
mov
scas
xor
sarl
dec
mov
xor
fisttpll
push
cmp
inc
sti
cmc
std
adc
cmp
pop
pushf
pop
imul
adc
xchg
inc
kunpckwd
gs
jns
stc
test
mov
or
mov
js
xor
pop
sub
fldcw
adc
inc
fsubrs
mov
mov
pop
mov
nop
jmp
outsl
push
xchg
enter
xor
sahf
cmpsl
sub
and
mov
push
in
jg
cmpsb
test
fs
dec
sti
ja
cmp
xlat
ja
repnz
dec
and
jl
lods
dec
push
pop
pop
ret
or
movsb
xor
movsb
pop
mov
or
jne
cmp
or
fcoms
nop
and
adc
add
hlt
mov
insb
jp
out
js
mov
sbb
sarl
lret
mov
pop
lods
aas
push
dec
push
inc
imul
jno
test
loop
push
pop
jns
cmp
pop
orb
push
mov
dec
in
popf
ljmp
loop
add
jecxz
ljmp
int3
les
or
cli
xchg
insb
inc
aam
and
pop
push
sbb
loop
out
xchg
cmp
mov
mov
cmp
out
sbb
push
aas
jns
iret
add
inc
sarl
add
mov
stc
clc
in
push
popl
popa
sub
imulb
lret
roll
test
in
mov
xchg
xchg
and
mov
test
jp
aam
xor
pop
ljmp
adc
sbb
aas
fcomp
jb
imul
mov
mov
add
idivl
sbb
cs
jo
sbb
test
and
movsb
mov
daa
cmp
out
xor
addr16
mov
add
jle
vorps
jl
test
lcall
and
pop
shrb
test
inc
shlb
jecxz
roll
mov
fisubs
add
rcrb
push
stc
cli
ret
xchg
push
xchg
imul
push
fimull
shlb
into
pop
push
adc
test
les
mov
cmp
inc
push
inc
fsubrl
sti
sahf
in
pop
jb
clc
fcomps
cmp
lods
neg
ljmp
mov
cmp
xchg
xor
andl
stos
adc
popf
in
aaa
add
xchg
jge
mov
add
lret
gs
test
xor
stos
shrb
ficoml
and
std
and
out
xchg
je
mov
mov
into
xchg
adc
fs
imul
ds
cmp
cwtl
mov
in
lods
js
test
push
sahf
inc
fists
mov
movsl
jg
leave
mov
stc
mov
divb
jne
jl
pop
in
adc
les
pushf
movsl
cld
xchg
ds
pop
mov
aaa
adc
pop
sub
stos
pop
pop
out
in
jb
fisubs
push
imul
sbb
lret
aaa
sub
inc
jne
icebp
mov
mov
dec
sahf
shrb
fwait
or
sub
test
jg
imulb
repnz
sbb
pop
rcrb
push
rolb
mov
nop
jl
mov
mov
jae
mov
cmp
push
mov
lret
std
in
call
sbb
adc
test
jge
pop
push
sbb
push
add
pop
sub
push
lods
pop
mov
stos
andb
je,pt
push
mov
iret
inc
mov
jg
push
xchg
js
ds
je
mov
or
loope
mov
sarb
fbld
jno
mov
stos
popa
jae
nop
out
leave
cmc
popf
xchg
movsl
cmp
add
push
aam
add
mov
cmp
push
imul
xor
or
adc
dec
xchg
out
inc
cmc
and
dec
jle
cwtl
adc
cmp
xchg
fnsave
ficoms
and
in
pop
push
jge
movsb
pop
or
mov
cmp
push
aaa
mov
xchg
cltd
out
xorl
pop
pop
mov
pop
mov
test
jb
jbe
lds
push
mov
mov
push
fs
mov
xchg
outsb
out
inc
dec
inc
pusha
out
mov
adc
cmp
leave
sub
fbstp
sarl
mov
dec
and
les
sarl
jb
enter
mov
mov
loope
loopne
xchg
loop
cld
aaa
or
les
sbb
mov
xor
std
out
push
mov
dec
stos
pop
loopne
test
mov
jp
addr16
cli
ret
ror
aaa
adc
mov
cmc
xlat
add
test
aas
cs
jecxz
es
cli
in
iret
out
sub
pop
adcb
mov
out
mov
or
lahf
jg
por
xchg
dec
adc
je
inc
sub
std
pop
push
jle
jbe
jle
scas
out
jp
xchg
and
test
mov
jo
or
sbb
divb
cmp
and
push
jge
dec
out
insb
sbb
mov
mov
pop
lock
xor
fs
mov
xchg
shr
aad
mov
lods
call
cmc
pop
and
in
push
sbb
jae
in
push
test
dec
sbb
aam
insb
icebp
or
out
or
lea
jle
cmp
xchg
hlt
pop
shll
fcomp
push
jge
dec
xchg
xor
orb
ret
loop
push
xor
jmp
out
mov
dec
fidivs
pop
pop
cmpb
mov
aam
outsb
xchg
ret
aam
sbb
add
aad
jne
pop
cld
popf
jbe
mov
pop
lea
mov
or
pop
lods
das
add
cmpsb
movsl
push
lahf
pop
mov
cmp
outsl
sahf
adc
push
xor
stos
cmp
fisttpll
or
mov
mov
xor
test
jmp
mov
lods
inc
add
mov
push
gs
int3
mov
and
scas
dec
testb
scas
inc
mov
enter
cld
fldt
mov
fcmovne
inc
mov
jmp
xor
jnp
push
mov
das
popa
or
xchg
in
and
or
popf
aaa
dec
adc
mov
pop
es
mov
pusha
jg
and
xlat
insl
pusha
out
std
adc
inc
cmp
and
repnz
cmp
inc
loope
inc
in
xor
or
mov
cmp
negb
cmp
mov
repz
nop
adcb
jecxz
outsb
lahf
push
dec
jle
dec
leave
out
push
jo
mov
lret
mov
test
rcll
es
xchg
jmp
cli
insb
cmp
mov
cmp
repnz
push
lahf
lods
mov
pop
xlat
sbb
mov
dec
mov
call
cmp
xor
addr16
sarl
cmpsb
sub
jle
iret
mov
inc
and
xchg
jmp
or
andl
xchg
sbb
cmpsb
adcl
dec
sub
sti
xorl
mov
jne
movsb
mov
mov
addr16
jecxz
cmpsl
jmp
notl
pop
or
gs
je
pusha
iret
pushf
ds
int3
xchg
inc
mov
ljmp
and
inc
insl
inc
lret
hlt
test
and
sti
inc
lahf
ljmp
int
test
test
jbe
mov
imul
xchg
cmp
fnsave
add
xchg
std
movsl
adc
mov
add
push
and
inc
andb
incb
lock
aaa
push
and
xchg
mov
mov
jmp
lock
cld
add
jnp
mov
fwait
sbb
sbb
int3
js
mov
pop
sub
cld
les
mov
test
cmp
jle
rcll
cmpsl
adc
dec
pop
xchg
das
xchg
fisubs
add
cwtl
push
lea
sub
testb
aaa
mov
xor
lret
mov
pop
insl
inc
add
pushl
gs
repnz
daa
jno
scas
mov
out
cmc
movsl
fwait
icebp
mov
pop
sub
pop
adc
pop
and
pop
xchg
sti
sbb
lds
cmp
inc
mov
inc
or
cmpsb
imul
mov
cmp
lock
push
mov
add
arpl
or
xchg
lahf
ret
mov
push
es
out
test
bound
dec
loop
lcall
in
mov
sbb
fwait
inc
jb
xlat
jns
movsl
xor
dec
sti
enter
jmp
aaa
push
jnp
or
and
jnp
add
sarl
sbb
jge
xchg
in
jg
test
in
push
inc
and
xor
fldenv
xor
cwtl
jp
push
inc
imul
pop
sub
adc
jo
mov
lods
outsl
pop
pop
imul
mov
push
and
xchg
pop
and
push
dec
movsl
xchg
xchg
shrl
pop
mov
jns
xchg
daa
imul
inc
fbld
inc
imul
shll
or
aaa
scas
push
mov
xlat
mov
lock
and
xchg
inc
ds
sti
xchg
mov
push
insl
repz
cmpsl
push
xor
push
fsubr
jb
jmp
cmp
push
insl
pop
ljmp
adc
imul
cmpsb
cli
push
mov
mov
in
arpl
adc
cld
divb
push
rorb
fs
xor
inc
aas
fwait
cmpsb
loope
faddp
int3
inc
fbstp
dec
mov
xchg
push
sbb
fsubrl
adc
adc
sahf
pop
or
insl
xor
dec
jo
out
cmpsb
int3
dec
outsl
dec
iret
fcoml
jmp
add
inc
in
aam
aas
stos
and
sub
dec
and
mov
mov
aam
dec
lahf
mov
sub
push
lret
mov
push
adc
dec
mov
jmp
aad
inc
loop
push
xchg
lcall
mov
jl
mov
sub
shll
call
gs
pop
push
cmp
add
inc
cmpsb
pop
mov
js
push
repnz
or
popf
cmpb
lcall
sbb
ja
jecxz
xor
dec
inc
movsl
pop
dec
fwait
ja
lea
sbb
push
mov
fldln2
hlt
clc
insl
addl
sbb
shll
pop
pop
cmp
sti
lock
ret
xor
xor
test
mov
inc
xlat
adc
xor
push
imul
add
xor
adc
jmp
push
jle
adc
arpl
sbb
icebp
jp
push
xchg
jle
sub
jmp
dec
sub
mov
bt
dec
xchg
int
mov
inc
xchg
test
outsb
outsl
xor
push
sbb
push
repz
nop
xor
imul
adc
int3
cmc
cld
xor
dec
int
lea
lds
sub
push
stc
cwtl
mov
cli
enter
xchg
push
pop
and
mov
pop
cmp
inc
xchg
imul
xor
xor
cs
mov
js
add
dec
pop
mov
movsb
xor
gs
test
dec
ds
pop
ljmp
mov
sub
mov
lahf
and
pop
xorb
int
push
lcall
in
xchg
je
or
int
fstps
dec
arpl
leave
adc
mov
cmp
xchg
lret
fwait
lcall
push
inc
pop
adc
in
mov
daa
lahf
adcb
dec
xor
in
add
gs
and
push
ds
cmp
lock
scas
push
ficoms
fwait
in
xchg
into
lret
mov
inc
test
loop
push
enter
clc
cmpsl
jns
mov
cmp
insl
push
push
jmp
icebp
mov
es
push
sbb
or
shl
aam
or
movl
cmp
dec
lcall
add
cli
or
addb
mov
in
mov
out
jp
lcall
sub
lds
jmp
jmp
jge
gs
cltd
ja
std
push
mov
popa
repnz
std
lcall
in
inc
pop
stos
lcall
and
clc
xor
cmp
jae
xor
clc
mov
cmp
jno
sub
cmpsb
adc
sub
fidivl
inc
dec
loopne
idivl
or
jo
outsb
adc
aad
arpl
lcall
mov
and
lret
stos
dec
inc
push
mov
lds
mov
push
loopne
insb
push
sub
repnz
cmp
call
push
je
inc
xor
aaa
test
out
dec
fsts
popf
dec
inc
pop
xor
ja
and
xchg
jae
rorl
jb
lods
dec
pslld
pop
mov
mov
std
ljmp
add
inc
mov
cltd
jecxz
out
push
popf
pushf
or
jb
hlt
push
jnp
ficomps
jecxz
mov
add
add
shrl
push
enter
inc
jo
imul
mov
add
test
aaa
sti
cmp
les
rcrb
cli
pusha
lods
cmp
pop
sub
es
push
fldenv
and
ret
and
imul
js
cmp
and
out
data16
add
or
mov
in
xor
cmp
ret
loopne
repz
bound
nop
cli
testb
sub
in
fimull
lods
in
adc
loop
cmp
std
adc
adc
fnsave
push
inc
mov
adc
mov
hlt
fdivrs
mov
rorb
jp
insl
xor
leave
data16
mov
or
dec
xchg
cmp
sbb
mov
jl
mov
add
mov
das
jnp
rcrb
pusha
mov
or
out
or
lods
jne
cwtl
cmc
push
push
jo
sahf
and
shlb
popa
aad
push
movsb
lret
rclb
rol
rol
cmovno
push
int3
adc
out
fbstp
push
mov
nop
enter
add
jb
mov
push
orl
lock
push
pop
fsubp
jns
or
mov
add
into
and
pusha
mov
cld
in
fsubs
mov
fldl
arpl
in
sbb
mov
cmp
push
stos
push
movsl
stos
xlat
or
nop
fwait
push
jnp
aaa
mov
cmp
insb
mov
lret
cmp
shrb
inc
fstpl
lock
mov
int3
mov
push
pusha
imul
cs
arpl
push
xchg
xchg
in
mov
shrl
or
pop
divb
data16
into
std
jnp
cwtl
pop
mov
cmp
adc
insl
insb
add
sbb
sub
std
insb
xchg
and
adc
or
push
mov
out
inc
lds
lret
sub
xchg
sub
push
roll
leave
adc
loop
adc
test
idivl
ss
jno
pop
imul
jp
and
lret
lret
mov
adc
jg
xchg
in
loopne
xchg
or
cmp
and
mov
insb
sbb
ret
jmp
lds
jnp
pop
sbb
out
jns
pushl
pop
roll
lds
pop
jno
pop
aam
stos
sbb
repnz
sub
lahf
jnp
jmp
loop
inc
pop
sub
adc
push
jle
dec
push
mov
mov
sbb
je
icebp
mov
xchg
fcmovnbe
ret
mov
leave
push
mov
into
xor
push
addb
sbb
pop
inc
sbb
enter
push
int
lcall
aam
inc
mov
call
push
aad
mov
neg
mov
cs
stos
push
push
out
dec
sarb
jmp
push
mov
mov
push
movsl
jbe
mov
pusha
pop
mov
and
add
push
enter
sbb
inc
dec
mov
xchg
mov
or
nop
data16
or
sarl
lret
orl
and
inc
cli
repnz
ja
sub
sbb
ja
int3
sahf
pop
dec
aaa
lock
pop
xor
dec
sub
bound
cmp
shrl
add
mov
mov
sub
inc
loopne
jg
call
sti
mov
mov
jmp
hlt
mov
push
ret
dec
pop
movsl
adc
pop
push
mov
in
and
popf
imulb
or
fistps
xor
inc
xchg
mov
mov
out
xor
jns
mov
fucomi
jns
and
mov
mov
iret
mov
repz
mov
mov
std
inc
pop
xor
in
in
sbb
pop
push
xor
add
mov
jmp
cmp
addr16
jge
fcmovb
push
pusha
dec
test
mov
xchg
dec
rolb
cmp
or
cmp
inc
sti
pop
xchg
cld
adc
mov
sbb
xor
das
adc
xor
add
cwtl
add
dec
loop
mov
addr16
movsl
enter
iret
imul
ds
lret
xor
and
shl
popf
fldcw
add
in
add
adc
jo
xchg
xchg
cmp
cmpsb
leave
pop
dec
fwait
pop
lods
loopnew
mov
and
mov
addr16
add
pop
popf
mov
imul
psubusb
mov
hlt
mov
test
aas
aaa
pop
rol
jns
push
mov
lock
in
addr16
fnstsw
jle
dec
mov
cmpsb
daa
test
ds
ficoms
in
push
add
cli
mov
lahf
into
sbb
rclb
aam
sub
dec
scas
fistpll
sbb
in
sarb
out
lcall
pop
push
les
jns
xor
lcall
cmp
inc
pop
stos
pusha
gs
cmp
div
rorb
test
mov
push
outsl
inc
loope
dec
js
dec
lret
xchg
inc
sbb
test
icebp
and
popl
or
popf
xlat
push
ret
negb
fwait
push
mov
push
scas
loopne
test
xchg
test
out
jne
mov
pop
sub
leave
test
push
pusha
push
sub
pop
stos
jbe
adc
movsl
imul
xor
outsb
add
in
pop
mov
aam
pop
add
pop
orb
mov
cmp
jmp
inc
fidivs
scas
xchg
push
addb
pop
inc
mov
out
adc
sub
mov
test
rorb
xor
mov
lods
addr16
bound
pusha
out
stos
addr16
cmp
xlat
sbb
subb
xor
iret
outsb
hlt
ds
sub
imul
out
outsb
push
fdivl
pop
pop
lret
loope
gs
cld
in
push
loop
js
push
push
sbb
adc
test
mov
push
popw
lods
lcall
mov
jg
adc
imul
mov
data16
in
xchg
mov
je
ret
out
pop
dec
and
scas
jns
decl
cmp
push
cwtl
in
or
push
cs
push
sub
dec
je
sbb
insb
mov
std
sbb
mov
lods
in
jp
jns
lods
mov
or
jl
cmpsb
repnz
or
pop
cmp
in
add
inc
dec
mov
enter
add
ja
push
cwtl
xchg
rorl
icebp
lds
and
test
adc
lea
ja
lock
mov
sar
mov
push
aam
push
xchg
cmc
cmp
imul
jp
repz
push
pop
or
inc
iret
jbe
lahf
ss
sub
inc
daa
ds
fisubrl
dec
outsb
and
dec
fucomi
cwtl
or
xchg
lret
mov
mov
inc
sub
jle
out
mov
test
enter
into
cmpsb
imul
in
adc
fs
and
or
push
out
cli
pop
xor
aam
inc
adc
cmp
push
push
push
xor
sti
stc
cwtl
leave
jae
imul
cmp
fcoms
dec
clc
ds
bound
mov
dec
fadd
sbb
int
hlt
adc
jmp
jb
dec
scas
das
repnz
lret
dec
sub
lret
jae
xchg
fcoms
cmp
push
sub
aam
cmp
sbb
mov
and
adc
adc
repz
xorl
fwait
mov
jne
ja
jmp
fcmovnbe
push
fstpl
stos
add
xchg
sub
cmpl
aad
push
adc
cmp
call
sarl
push
pop
inc
jo
pop
inc
pop
inc
xor
cmpsl
pop
icebp
ljmp
xor
ljmp
jae
ficoml
mov
addr16
xchg
pop
sarl
stc
fadd
repnz
jg
stc
ret
imul
sarb
mov
imull
pop
aam
jo
pop
or
imul
inc
xlat
testl
dec
dec
cmc
or
out
orl
hlt
and
or
bswap
rcrl
mov
mov
pop
ja
fcomp
or
mov
and
enter
fimull
push
push
lock
inc
push
pop
and
icebp
dec
add
insb
mov
loopne
xor
popa
imul
add
add
test
into
push
fs
ja
mov
ja
fistpl
cmpsl
xchg
inc
sti
loop
mov
inc
ret
cwtl
movsb
lock
lea
fstl
xchg
inc
and
xchg
pop
pop
xor
shl
mov
dec
daa
fdivrp
lods
lret
mov
pop
movl
mov
sti
sub
pushf
aam
clc
sbb
mov
and
in
mov
xchg
add
scas
cmp
sbb
ret
pop
fbld
jge
mov
push
out
mov
cmp
inc
movsb
ret
jecxz
jbe
mov
rorl
shl
sub
arpl
lret
pushf
sahf
push
test
fs
lods
fsubl
cld
sbbb
xor
outsl
mov
xchg
pop
xor
pop
cmpsl
mov
sbb
outsl
adc
cmp
int
lods
or
xchg
ret
fistl
xor
shlb
cmp
mov
and
or
and
in
mov
sbbl
xchg
push
aam
fcmovne
inc
pusha
divb
out
sahf
lea
mov
and
fs
lea
xorl
add
add
fistl
lock
mov
popa
inc
aas
sbb
jo
pop
pop
shl
cmp
dec
leave
les
insl
push
int
dec
mov
andl
repnz
mov
test
inc
aaa
aaa
and
jle
jecxz
or
adc
pop
and
movsl
sbb
push
xor
addr16
cld
or
xor
jle
test
out
sub
sahf
or
cmp
adc
mov
push
std
stc
fnsave
adc
jb
pusha
cmp
outsl
arpl
test
ds
add
std
push
mov
bound
mov
push
adc
cmpsb
lods
int3
pop
lahf
andl
add
xchg
mov
js
adc
and
xchg
jp
enter
add
xchg
pop
dec
scas
arpl
sti
into
daa
sbb
sbb
push
dec
jno
cmp
or
mov
jno
rcrl
jo
pusha
orb
fsts
mov
test
loope
scas
mov
call
pusha
mov
xchg
push
push
ljmp
mov
in
int3
jbe
int
ret
xor
std
adc
push
xlat
pushf
jl
gs
xchg
mov
dec
sbb
repnz
shrb
push
loop
and
cmp
mov
xor
cmpsl
lods
or
dec
daa
cmp
sbb
xor
jns
or
cs
gs
sbb
jp
jle
repz
jecxz
pop
jne
hlt
sbb
cmp
dec
adc
inc
test
dec
push
imull
rcrb
sbb
mov
movsl
inc
and
pop
mov
mov
insl
pusha
cmc
int3
inc
lock
jb
les
jb
fbld
test
mov
daa
aas
ret
push
shlb
movsb
aam
jmp
push
ret
fmuls
rcrl
test
aad
xchg
decl
mov
enter
lea
imul
jle
pop
out
andl
mov
imul
xchg
mov
cmc
gs
push
cld
lahf
fisubrl
sbb
in
push
jecxz
jne
push
mov
push
movsl
or
jecxz
jecxz
cld
inc
dec
lds
cmp
in
test
pop
cmpsb
mov
push
add
mov
or
add
sahf
mov
push
mov
test
mov
or
sahf
and
rcrl
cmp
jle
dec
enter
xlat
daa
mov
xor
fnstenv
insl
shll
add
dec
mov
movsl
cmc
ffree
out
mov
js
data16
push
clc
pop
test
cs
testl
mov
sub
mov
sbb
mov
jmp
pop
sbb
cltd
cld
in
xor
jl
add
mov
lock
adc
push
xor
aas
out
pop
adc
mov
sub
aaa
mov
sbb
pop
add
add
and
dec
mov
mov
cwtl
push
cmp
sub
rorl
adc
pop
scas
adc
lcallw
daa
add
shl
mov
cmp
std
ljmp
nop
stos
mov
pushf
mov
xchg
sub
fdiv
ds
out
arpl
or
cmpsl
inc
inc
jae
jo
mov
xchg
pop
jns
aad
xlat
cmpsb
cwtl
sbb
push
push
xor
mov
dec
cmp
gs
mov
sti
popa
imul
arpl
shl
and
mov
or
lcall
shrb
inc
push
call
fsubl
addr16
hlt
loope
sahf
inc
popf
pushf
and
xchg
ljmp
jge
and
mov
sub
pop
xchg
push
mov
mov
clc
test
fisubrl
leave
inc
xchg
push
gs
aad
jnp
pop
lds
pop
jb
loope
cwtl
dec
ret
push
sub
xor
inc
cmc
mov
out
scas
sub
mov
movsl
test
int
aam
pop
sahf
mov
add
xor
xchg
je
jne
cmpsb
jmp
lods
test
sbb
lods
movsl
inc
stos
pop
lods
cli
jecxz
add
sub
pop
or
test
mov
cld
sub
push
ret
jnp
insb
and
mov
sub
xor
xchg
aad
push
sbb
jl
mov
inc
sahf
aad
mov
adc
stos
pusha
filds
xchg
mov
inc
dec
ret
mov
mov
outsl
cmp
mov
push
or
js
and
cld
sbb
pop
push
jl
jb
sub
movsl
lcall
adc
outsb
sub
inc
cmp
dec
mov
inc
dec
ljmp
imul
push
push
dec
fwait
mov
push
addl
aad
sbb
adc
sub
mov
inc
stos
test
sbb
test
dec
inc
sub
mov
and
push
insl
and
cmc
repz
mov
cli
push
mov
adc
jbe
pop
dec
addl
sub
sub
jmp
cmp
adc
inc
sbbb
mov
int
loopne
push
into
lds
popf
mov
adc
std
adc
fists
insl
and
add
and
fists
leave
pushf
fnsave
mov
mov
jg
push
sahf
cmp
gs
jnp
lret
arpl
lds
rorl
mov
lret
hlt
xchg
mov
jmp
mov
popa
ficoms
jae
in
sub
fidivl
arpl
fsub
jge
shll
in
insb
xchg
mov
and
push
and
cli
add
out
jnp
jns
push
incl
jl
dec
dec
enter
ja
mov
aas
cmp
ret
add
sbb
setl
sub
pop
iret
mov
cwtl
pcmpeqd
add
ret
add
das
push
mov
inc
sbb
or
inc
ret
std
scas
sbb
sub
mov
dec
jnp
ret
loop
xchg
sbb
xchg
xchg
sbb
mov
mov
stos
xchg
jmp
xor
push
mov
push
dec
and
sbb
xchg
je
mov
jge
push
cli
xchg
add
push
sub
jl
and
andl
lcall
or
add
out
cvtps2pi
push
lret
cmp
inc
insb
dec
scas
dec
adc
push
mov
cmp
xor
xor
mov
push
sub
cmp
xor
inc
imul
outsl
mov
dec
insl
hlt
pushf
cli
dec
and
lock
xor
sbb
mov
dec
push
sbb
mov
test
ret
sbb
mov
jecxz
std
fidivs
mov
mov
daa
or
dec
scas
daa
or
sahf
push
or
mov
xchg
daa
fbstp
in
loope
push
or
adc
fsub
adc
push
jns
hlt
jb
dec
inc
add
mov
jbe
inc
test
mov
or
scas
xchg
adc
insl
push
and
pusha
int
ljmp
or
insb
cmp
pop
mov
cmpsb
pop
jl
pop
repnz
and
add
mov
add
in
inc
hlt
mov
cmp
pop
jmp
xchg
cmp
rcrl
push
outsb
lods
imul
push
inc
insl
mov
push
popf
inc
test
shlb
stos
test
sbb
or
cmpl
bound
xchg
cli
xor
pop
xor
and
jbe
fwait
pop
pop
and
inc
loopne
xchg
je
and
dec
lods
inc
push
scas
test
imul
mov
push
in
arpl
cmp
js
mov
mov
movsb
push
xchg
pop
stc
jo
jb
pop
xchg
mov
sahf
into
enter
lods
and
incb
pop
movsb
ja
sbb
pop
loop
sub
and
xchg
sbb
mov
es
pusha
and
sahf
test
xchg
jns
xrelease
imul
clc
nop
cmp
inc
aam
ret
dec
push
push
insb
add
fisubrs
pop
xchg
push
and
mov
sub
sbb
sbbb
or
into
jg
sub
cmp
add
std
jnp
or
iret
outsl
push
mov
hlt
pop
aad
push
loopne
clc
jecxz
pop
cs
inc
imul
fldcw
out
fcompl
pop
shlb
cmp
mov
push
jl
imul
pop
xchg
mov
xchg
pop
mov
push
and
cmpps
std
pop
cs
jle
popa
xchg
daa
jge
push
sbb
fdivr
jmp
xchg
repnz
mov
aam
or
push
inc
lcall
lods
mov
pop
adc
data16
mov
repnz
inc
inc
lds
lock
mov
pop
push
jb
pop
mov
pop
push
jecxz
sbb
dec
aam
cltd
sub
sbb
cmp
sub
rclb
xchg
push
jecxz
mov
xorl
jns
loopne
xor
inc
popa
cwtl
push
int3
rorl
mov
arpl
xchg
shlb
stc
pop
xor
xchg
adc
orb
jbe
enter
push
push
bound
call
idiv
xorb
stc
mov
scas
int3
mov
inc
ret
inc
js
std
sbb
es
push
mov
aad
push
jge
mov
out
leave
es
mov
sbb
sbb
mov
xor
or
aas
je
and
mov
in
cltd
cmp
imul
adc
mov
xchg
fs
scas
push
and
rcll
out
fbld
pop
les
es
addr16
mov
call
gs
jmp
leave
pop
jmp
insb
sbb
andl
roll
pop
pop
mov
pop
das
arpl
into
inc
jnp
sub
sub
loope
inc
fwait
aas
dec
add
cmpsl
int3
fisubs
cwtl
outsb
xor
cwtl
mov
out
add
das
push
add
pop
mov
popa
cmp
jo,pt
xchg
stos
shlb
xchg
xchg
mov
rcl
pop
bound
xor
add
xor
jbe
int
adc
scas
pandn
fnstsw
mov
sbb
xchg
movsb
decl
sbb
stos
pushf
out
mov
fistps
leave
push
mov
sahf
inc
call
add
outsb
scas
roll
fistpll
inc
shr
mov
insl
push
jne
inc
cmp
sub
rol
jecxz
popf
pop
shrb
adcb
test
hlt
pop
std
push
sti
sbb
shll
or
sbb
xchg
xlat
jne
imulb
ljmp
and
flds
jne
push
jle
xchg
in
mov
adc
xor
mov
into
jnp
mov
and
fcoml
add
daa
lret
mov
iret
out
sub
and
jns
inc
sarl
js
xchg
fnsave
push
add
addb
push
imulb
jns
mov
cmpsl
aaa
ds
fsubrl
jno
movsb
xor
cli
fiaddl
shl
std
lret
je
mov
lret
pop
adc
push
fwait
and
fwait
or
nop
xor
dec
mov
shrb
jb
stc
mov
test
dec
cmpsl
mov
pop
sub
push
push
inc
ret
dec
lcall
pop
fisttpll
movsb
roll
add
js
mov
or
mov
dec
test
pop
and
push
dec
aas
cmpsl
in
fisttps
shl
hlt
pushf
jl
lock
push
add
loopne
lods
jl
adc
push
mov
push
mov
adcl
push
lcall
mov
test
inc
daa
jp
arpl
mov
sbb
xor
fsubrl
push
adc
sub
popa
or
mov
mov
adc
aad
jge
xchg
dec
xor
repz
ja
xor
mov
ljmp
pushf
sbb
repz
jbe
mov
je
dec
lods
pop
in
ret
cwtl
test
mov
inc
xor
fs
xchg
mov
push
into
dec
cmp
sbb
aas
xchg
pop
sbb
push
addr16
jmp
add
imul
jo
push
adc
add
cltd
es
fwait
cmp
mov
add
int
cli
outsb
popa
and
cmpsl
pop
push
dec
add
scas
push
repnz
pop
imul
and
jle
pop
add
pop
xchg
xlat
push
cmp
rcrl
lret
pop
dec
movsl
adc
pusha
aad
add
dec
ret
ds
inc
hlt
xchg
jno
icebp
mov
sbb
jle
push
mov
dec
xor
shrb
cmp
and
jo
or
push
std
jecxz
fnstenv
mov
lcall
pop
adc
pop
push
mov
jnp
xchg
add
loope
add
mov
fidivrs
pop
push
lea
js
mov
sub
lods
mov
add
dec
iret
push
cmpsb
jns
inc
cmp
push
xor
sbb
out
pop
fcmovbe
popl
lret
jnp
popa
cmpsb
mov
mov
push
xchg
xor
fstl
dec
out
cmpsl
ror
enter
daa
sub
pop
negl
adc
sub
data16
jge
adc
aaa
dec
mov
pop
cmp
lds
jmp
outsl
inc
pop
in
or
dec
sbb
jne
sti
les
int3
push
dec
mov
push
shrb
xor
vpackssdw
or
cli
xor
dec
sub
adc
lret
sar
ds
sti
add
negb
mov
scas
hlt
aad
aam
and
js
sahf
jg
pop
mov
xchg
xchg
xchg
xor
cmc
popf
ret
mov
xor
pop
push
push
mov
stos
or
repnz
pop
adc
and
aam
int3
into
sbb
pushf
xor
ds
mov
push
mov
fldlg2
fstpl
adc
sub
mov
clc
imul
stc
test
mov
icebp
loope
divl
enter
sti
or
dec
or
dec
add
xor
sahf
pusha
jmp
push
or
dec
fcmovnb
add
mov
or
loopne
dec
sbb
aas
jg
shll
push
mov
js
sti
inc
pop
rorl
sub
xchg
add
dec
ljmp
jo
mov
in
in
outsb
cmp
mov
sub
dec
sub
dec
xor
mov
shlb
cmp
stos
sbb
cmc
inc
jne
and
dec
add
pop
ds
insl
sbb
es
in
adc
push
pushf
ficomps
lret
inc
lret
mov
dec
repnz
insb
ret
pop
sti
jbe
sub
push
lds
lret
jno
jmp
stos
pop
jecxz
adc
xchg
push
popf
sbb
jecxz
add
and
xor
and
idivb
mov
xchg
lock
sub
inc
mov
aaa
push
sub
sti
fadds
popa
mov
ret
mov
stc
es
adc
pop
into
dec
mov
jl
dec
fldl
in
imul
gs
or
out
dec
xchg
in
cli
mov
push
shll
fsubrs
call
cmpsb
push
xchg
and
sahf
addr16
mov
in
pop
push
inc
mov
sbb
cwtl
leave
add
bound
cmpsb
xchg
pop
cltd
and
xchg
inc
and
incl
mov
pusha
push
mov
fld
xor
stos
xor
cs
xor
bound
pop
out
pop
cmpsl
inc
data16
xor
xchg
sbb
test
push
mov
data16
aas
xchg
mov
dec
cmp
sahf
xor
push
jmp
push
jb
loopne
mov
mov
fnstsw
mov
pop
push
sub
and
mov
dec
scas
jbe
xchg
add
jmp
movsl
adc
jg
rcrb
pop
call
movsl
mov
outsb
arpl
jl
jmp
mov
dec
lock
je
cld
outsl
ds
jecxz
push
sub
ret
call
int
enter
stc
xchg
fistpl
jmp
cmp
inc
mov
push
je
lahf
jo
jge
adc
mov
pop
mov
sbb
js
xchg
sbb
dec
inc
mov
sbb
pop
mov
and
out
ficoml
push
and
inc
mov
shl
xchg
xor
lea
loope
jb
xor
inc
sbb
add
cs
lods
sub
sbb
jg
movsl
inc
push
xchg
inc
inc
xor
and
cmc
adc
inc
mov
adc
lods
fwait
mov
idivb
xchg
push
in
int3
loopne
fwait
int
jp
sti
pop
les
rclb
nop
mov
add
mov
cli
jnp
cmpsb
pusha
push
scas
push
or
aam
sbb
push
cld
jne
addr16
mov
push
inc
push
push
inc
add
into
or
push
sbb
sub
dec
fcompl
jne
out
xchg
adcb
shll
test
ret
cmpsb
or
xchg
scas
dec
insb
aad
add
fs
dec
add
mov
mov
adc
xlat
mov
sbb
cmp
idivb
stos
popf
dec
mov
mov
xchg
je
add
push
je
aam
fists
dec
mov
adc
adc
call
scas
adc
inc
into
xchg
and
repnz
sub
or
mov
adc
jne
adc
pop
inc
les
decb
mov
add
xchg
call
xor
add
scas
leave
sbb
sbb
xor
mov
leave
nop
mov
xchg
je
dec
and
inc
js
subb
sub
or
int3
int3
iret
ja
je
out
stos
or
out
int
xor
cwtl
test
mov
push
rclb
xchg
test
dec
xchg
lds
add
xor
mov
sarl
xor
popf
int3
mov
xchg
in
cmp
pop
lahf
xchg
push
push
xchg
xchg
test
dec
fnstenv
and
andl
mov
cmp
roll
ret
cmpl
xor
push
and
arpl
pop
imul
or
xor
int
les
shrl
arpl
cmp
pop
mov
subl
rorl
pop
dec
ljmp
inc
cld
mov
fst
dec
iret
push
ja
inc
cmpsl
fcmovu
adc
mov
xchg
fistpl
out
fcmovbe
cmp
mov
in
push
jb
jne
add
cltd
aam
jl
cmp
push
adc
pop
cmp
xchg
std
or
mov
mov
mov
mov
fwait
popa
xor
test
jb
push
sti
add
mov
sbb
mov
mov
out
mov
in
mov
push
push
fcmovbe
les
xchg
inc
dec
cmp
loope
ret
imul
pop
loopne
sbb
xor
ja
movsbl
test
into
movsb
cmp
xchg
out
and
push
jo
mull
cmpsb
rep
mov
dec
add
mov
xchg
test
daa
das
imul
xor
jnp
test
xchg
imul
dec
shrl
stos
pop
inc
jno
repnz
clc
enter
arpl
stc
xchg
xchg
loope
loop
cmpsb
push
arpl
in
addr16
jbe
and
add
popl
mov
inc
cmpsb
in
stos
sub
add
scas
into
mov
push
cmc
std
xchg
adc
sahf
ljmp
mov
enter
mov
out
pop
sub
dec
xchg
rolb
pusha
pop
inc
ss
ficoml
jne
xlat
jl
pop
rep
and
mov
mov
je
icebp
cmc
je
dec
inc
jo
in
mov
popa
pusha
inc
shlb
xchg
aad
arpl
clc
mov
out
aas
xchg
test
bound
gs
mov
out
sbb
or
xor
mov
imul
in
cmp
mov
adc
cmp
cmp
sub
fidivl
arpl
dec
aam
xchg
mov
lcall
pushf
mov
jmp
pop
adc
lea
daa
cmpsb
or
test
pop
cmc
xchg
sub
out
sub
cli
cld
addr16
jg
daa
imul
sbb
out
push
stos
inc
mov
outsb
inc
aad
je
in
inc
push
stc
out
jne
sbb
sub
jo
and
decl
mov
cld
daa
mov
mov
xor
jecxz
pop
xor
adc
shr
stos
int
popf
das
mov
push
int3
lock
or
inc
cmpsb
shrl
fs
aam
jge
xchg
nop
lods
mov
and
repnz
mov
xchg
pop
scas
jle
out
test
ja
jle
enter
jo
cmp
sub
pop
push
adc
mov
or
stos
inc
adc
xor
xor
pushf
mov
sub
pop
sbb
or
aaa
mov
pop
icebp
xchg
dec
dec
scas
stc
shlb
push
or
arpl
in
dec
cltd
cmp
lret
lods
addl
test
hlt
gs
imul
rcr
ficompl
sbb
out
dec
sub
icebp
pop
out
and
xchg
cmp
push
add
mov
in
sub
fstpl
push
ret
or
call
movl
mov
arpl
sbb
cmp
jg
cmc
cld
xchg
pop
into
and
inc
or
sub
call
pop
orl
fsub
int3
jno
cmp
sbb
mov
jne
movsb
je
stos
int
mov
xchg
int3
mov
aas
lret
sbb
xor
sbb
or
subb
push
add
psubsw
and
call
mov
sbb
loopne
mov
push
mov
mov
cmpsb
arpl
mov
adc
pop
xlat
xor
add
xchg
movsl
inc
fisttpl
sbb
and
pop
arpl
enter
jg
rolb
or
cmp
ja
lea
push
mov
push
pop
es
mov
cltd
movsl
jmp
pop
popa
mov
je
fwait
sahf
push
mov
sub
das
lods
jg
sbb
mov
push
test
nop
or
ja
jmp
fcmovnu
xor
pushf
movsb
jp
out
int
mov
hlt
adc
add
adc
or
mov
or
ja
fld
or
cltd
sahf
fildl
dec
jns
dec
jb
mov
mov
lret
pop
push
lcall
xlat
cmc
mov
movsl
adc
divb
iret
imul
lods
and
leave
aad
test
cmp
add
in
jb
jo
hlt
lahf
sub
fisttps
divl
xchg
xchg
mov
cmpsl
sub
lock
push
sbb
int3
add
mov
mov
mov
cmp
sbb
and
nop
dec
mov
mov
loopne
clc
shrb
in
rcrl
mov
sub
add
push
sub
sbb
xchg
in
gs
sbb
adc
mull
icebp
add
inc
sub
or
and
lcall
mov
xchg
adc
lcall
flds
and
stc
sete
mov
mov
jns
mov
jle
into
inc
mov
stos
adc
cli
divb
push
repnz
jmp
sub
push
fistl
aam
xor
cli
scas
jae
sub
sbb
lods
mov
out
sub
and
fdivr
lods
js
js
leave
mov
inc
add
frstor
push
enter
jbe
sbb
xor
insl
les
dec
jne
adc
push
fcomip
mov
sbb
in
mov
mov
dec
dec
out
fbstp
and
sbb
test
stc
push
mov
jmp
xchg
ret
mov
pusha
mov
inc
lahf
push
pop
pop
insb
cli
lods
xlat
cmp
pop
es
ss
jnp
xchg
xor
mov
dec
popf
xor
test
mov
xchg
loop
dec
mov
jle
test
insb
out
mov
xor
adc
sub
fmull
add
call
jns
jns
jge
cmp
pop
pop
in
pop
push
popa
sbb
cmc
nop
jns
cmp
push
cmc
fiadds
aad
jp
and
xor
xchg
push
jne
sbbl
aaa
sahf
jl
enter
pop
rorb
jb
cld
inc
pop
adc
test
fists
cmp
test
mov
xor
clc
xor
mov
mov
js
lret
xor
push
icebp
in
cmpsl
dec
cmp
shr
or
sub
inc
call
cmp
scas
jne
mov
mov
mov
loop
das
adc
xlat
sbb
inc
fdivs
pop
cli
inc
dec
xorl
sub
mov
shrb
mov
fistps
rcr
pop
push
add
std
call
push
movsl
lahf
fstl
mov
inc
inc
movsl
dec
cli
insl
pop
xchg
cmp
or
mov
mov
inc
sbb
mov
sar
pop
daa
xor
sub
repz
cmpsl
jge
je
lds
cltd
scas
sub
sbb
leave
xchg
mov
loop
scas
fstps
pop
and
mov
ret
sbb
add
mov
push
addl
mov
cmp
pop
out
rcr
dec
imul
test
lods
mov
dec
insl
sbb
xchg
pop
out
adc
push
loopne
leave
and
mov
add
data16
push
and
and
decb
xorl
idivb
jl
adc
ds
sbb
aad
cmp
ds
jbe
aaa
push
fmuls
sub
sub
cmp
dec
xchg
rorb
fnstenv
test
mov
add
mov
xchg
add
xor
mov
popa
scas
mov
xchg
xor
lock
and
out
jae
pop
mov
std
pop
mov
aas
fs
stc
sbb
dec
cmp
loope
mov
test
andb
mov
mov
mov
mov
lds
inc
ja
enter
insl
sub
mov
or
out
std
jno
pop
mov
dec
arpl
data16
push
movsb
xlat
cmp
dec
jecxz
push
adc
ss
ror
cmp
stos
popf
testl
pusha
lahf
push
sbb
xlat
test
pop
adc
outsb
pop
xchg
shlb
dec
hlt
push
loopne
dec
rcl
xchg
lds
test
movsl
and
lret
dec
shl
arpl
and
add
mov
adc
mov
mov
enter
add
rcl
mov
ds
jbe,pn
inc
sub
in
jb
jno
push
lds
icebp
push
sub
in
inc
mov
aad
and
lret
xlat
jle
gs
push
int3
lock
jb
add
cmpsb
adc
push
out
cmp
insb
dec
mov
lahf
imul
push
pop
jecxz
mov
xor
lret
loop
je
ss
push
mov
mov
dec
pop
stc
sbb
push
jne
jecxz
sub
fxch
and
cs
test
adc
sub
mov
and
repz
xor
jo
mov
sbb
adc
arpl
cmc
in
and
es
into
xchg
fs
pop
inc
dec
xchg
mov
sahf
fldl
aas
pop
and
jle
jb
aaa
pop
xor
mov
push
js
add
shrl
push
mov
movsl
les
mov
sub
push
jo
xor
sub
ss
lahf
jmp
cs
cmp
sahf
test
pop
or
xchg
je
inc
xchg
sub
and
mov
mov
dec
stc
mov
xor
nop
loop
loop
loop
jb
popa
fistpll
and
loopne
xchg
mov
pop
pop
sub
rcr
sahf
sti
xlat
fdivrp
xor
sbb
lods
outsl
or
mov
xchg
cmp
jb
add
xlat
mov
mov
pop
mov
sbb
cmpsb
and
lahf
popf
pop
push
inc
cmp
sarb
mov
rcr
shrb
mov
and
inc
dec
fidivs
add
pop
movsl
cli
add
adc
testl
jnp
mov
fstpl
out
xor
dec
or
es
fcoms
or
push
cmp
push
xor
mov
or
notb
mov
lods
call
int
sbb
inc
add
mov
repz
pop
pop
scas
jle
jp
sub
fiaddl
call
lret
sahf
js
pushl
adc
jae
out
stos
orl
clc
push
and
scas
orb
or
les
jp
add
mov
sub
xor
dec
sbb
adc
fwait
scas
jns
imul
dec
mov
mov
out
sbb
cld
jmp
scas
clc
or
sub
into
fucomp
mov
shr
dec
lock
scas
iret
clc
push
in
popf
mov
push
mov
mov
pop
add
push
daa
cs
loopne
jecxz
jg
int3
loope
sub
pop
inc
xor
and
sbb
or
fs
adc
sbb
mov
fadd
cwtl
imul
ds
jg
mov
push
sub
dec
aad
ret
sub
push
push
and
ret
nop
cwtl
mov
lret
jg
negl
ficomps
cwtl
std
sbb
adc
pop
jns
or
xor
xor
rol
push
push
sub
in
dec
mov
dec
push
push
loope
in
ds
inc
mov
je
mov
mov
adc
dec
sub
inc
fidivrl
xchg
adc
fwait
mov
xchg
int
inc
inc
outsl
ret
mov
jb
mov
mov
pop
push
rcrl
enter
cmpsb
dec
sub
jmp
scas
js
mov
push
dec
inc
sti
jmp
roll
ljmp
or
mov
pop
sub
insb
out
mov
inc
insb
dec
stos
popf
arpl
in
dec
shl
pushf
cmpsb
mov
stos
mov
lods
bound
push
mov
repz
scas
mov
das
add
andb
ud0
cli
pop
pop
repz
lret
dec
rcrb
gs
movsl
push
adc
cmp
cs
xlat
add
mov
int3
cmp
mov
dec
adc
into
comiss
lcall
fdivrs
add
and
out
roll
pop
test
hlt
les
into
jne
sti
hlt
pop
daa
inc
sarl
pop
pop
inc
or
shlb
shll
mov
test
std
test
hlt
sbb
jno
mov
push
aam
fstpt
andb
mov
imul
xlat
jno
adc
jae
cmp
adc
mov
jno
or
sub
imull
popf
in
shll
inc
out
xchg
inc
lds
adc
in
and
push
test
aaa
adc
mov
mov
loopne
leave
mov
les
jbe
push
add
test
sbb
rol
gs
xor
sahf
cltd
mov
push
xchg
bound
int
adc
push
mov
mov
sahf
repnz
add
pop
mov
push
xor
or
dec
dec
push
decl
fcomp
cltd
jb
mov
adc
jb
repz
dec
or
scas
mov
pop
aaa
xchg
xor
int
jp
loopne
cltd
fidivrs
inc
test
xchg
ss
and
push
pop
cwtl
dec
sub
push
popa
mov
repnz
or
push
popa
fisubrl
mov
cli
addb
sub
outsb
imul
mov
cltd
repz
rcll
xor
jg
movsb
jle
or
add
sub
lock
daa
insb
out
ds
hlt
and
jmp
or
pop
outsb
test
out
xor
xor
loopne
out
fisttpll
les
jl
ret
mov
sbb
out
sub
push
xchg
xor
xor
das
lahf
negl
pcmpgtd
sub
and
adc
jp
popa
mov
pushf
cltd
jl
jmp
scas
or
xchg
push
sbb
mov
sbb
idivl
cmpl
lahf
jle
mov
add
ret
and
jb
int3
mov
pop
push
inc
addr16
loopne
dec
shll
mov
fimull
xlat
sti
push
dec
cmpsb
fisubs
js
out
push
fdivr
lcall
xor
push
mov
jle
xchg
xor
sbb
cmp
cwtl
sbb
lret
add
stos
mov
inc
out
mov
and
rorl
push
int
arpl
add
imul
stos
arpl
push
in
aas
cs
adc
fistl
addr16
aas
mov
sarb
ds
and
jno
xor
dec
jmp
mov
inc
fstpt
jnp
int
pop
pop
mov
pop
xor
and
mov
je
push
mov
outsl
fwait
pop
test
rcrb
je
subb
and
imul
cwtl
int3
cwtl
fnstenv
push
add
pusha
mov
dec
adc
mov
loope
xchg
mov
fists
add
nop
mov
rolb
dec
xor
mov
cltd
rcll
les
xor
mov
xchg
push
cmp
lea
adc
xchg
out
xchg
sub
push
mov
jne
jbe
push
xchg
dec
jns
stos
out
imul
shlb
into
jg
adc
pop
cli
loop
int3
jno
push
adc
pushf
mov
aaa
sti
pusha
cs
cs
mov
enter
jge
add
pop
jns
xlat
cmpsb
ret
lea
add
pop
pop
in
decl
push
dec
movb
mov
push
bound
mull
cwtl
clc
test
hlt
push
adc
or
cli
adc
fidivs
js
xor
hlt
lret
sub
xor
jb
bound
pop
sti
xor
out
rcrl
mov
in
test
jl
das
std
lods
addl
mov
xchg
out
std
push
pop
adc
sbb
mov
dec
dec
push
nop
inc
xor
or
adc
ficoml
adc
sbbb
sbb
and
popa
mov
adc
pusha
inc
and
mov
dec
cmp
sahf
pop
push
pusha
cmp
cmpsl
test
fwait
jb
pop
es
fisttps
cltd
iret
inc
add
mov
jno
repnz
xchg
out
gs
dec
loopne
aad
imul
mov
add
arpl
cmp
in
cmp
js
lods
bound
cmp
pop
daa
mov
dec
mov
iret
lahf
lods
cmp
stc
and
jp
mov
jo
jno
sbbl
sub
jbe
frstor
sarl
xchg
sub
mov
lds
fcmovb
std
xor
push
sbb
mov
pop
loop
bound
sarl
gs
popf
lahf
jge
loop
daa
xor
push
jecxz
pop
mov
lea
mov
stos
xor
jo
ret
inc
pop
mov
and
lahf
dec
in
xor
pop
mov
adc
loope
imul
aaa
mov
dec
popa
rcrb
push
mov
cmpsl
cs
dec
dec
mov
push
mov
addr16
jmp
xchg
js
xchg
std
or
nop
cld
dec
je
lret
mov
dec
clc
out
lea
pop
inc
jg
inc
push
add
aas
scas
lea
sub
mov
inc
movl
jae
mov
jmp
jl
add
jle
ds
cld
inc
out
out
jge
scas
aad
or
addb
ja
lahf
sub
and
push
stc
push
fildll
outsl
nop
mov
sub
push
dec
pop
aad
push
popa
jo
push
ret
add
inc
fimull
inc
and
adc
daa
pusha
or
std
sbb
sbb
imul
push
jle
rolb
roll
inc
pop
inc
aad
insl
jp
sub
stos
mov
popa
outsb
pop
cmpsl
in
jmp
inc
or
sbb
stos
xchg
lds
sbb
ret
jge
mov
mov
mov
out
or
push
cwtl
out
or
pop
call
inc
subb
in
cmp
push
sbb
int
xor
arpl
gs
jb
push
push
sub
fsubrs
push
test
stos
push
fnstcw
pushf
arpl
repnz
mov
add
or
sub
sbbb
lret
jmp
fstps
jns
movzbl
sub
addr16
fs
mov
adc
ror
dec
push
jae
pop
divl
sub
sbb
orb
arpl
pop
inc
mov
add
sub
pop
adc
clc
jbe
pop
dec
test
jo
fucomp
dec
xchg
or
imul
clc
scas
xor
das
jle,pn
mov
je
leave
dec
cmpl
push
jbe
mov
in
mov
and
int
sbb
fdivl
jbe
add
cmp
aad
hlt
mov
add
adc
fsts
xchg
pop
dec
lcall
sub
test
xchg
lahf
dec
lret
aas
shrb
add
aam
ja
sarb
push
pushf
sub
adc
adc
sub
jns
icebp
loopne
mov
pop
xor
mov
jnp
sbb
dec
mov
dec
push
movb
or
int3
dec
add
dec
dec
fcoms
fistps
mov
rcll
pusha
mov
fwait
enter
cmp
xchg
pop
xchg
mov
adc
push
sti
dec
dec
pushf
ret
out
shlb
sbb
rcr
and
cmp
add
repz
mov
lcall
loope
xlat
mov
iret
pop
pop
cmp
push
in
push
pop
xor
sub
sub
push
sub
mov
and
xchg
lcall
daa
inc
mov
add
and
adc
pop
lret
sbb
in
fildll
in
aad
push
sub
push
and
pusha
mov
pop
imul
into
jno
inc
or
dec
mov
pushf
std
sub
inc
cld
add
aam
jae
mov
cmp
sahf
xchg
insb
paddusb
mov
ss
repz
mov
outsb
mov
daa
into
fldt
aaa
jecxz
and
sub
fstps
pushf
xor
fs
xlat
dec
out
push
adc
push
xor
xor
pop
pop
lods
or
xchg
sbb
lahf
xor
out
test
jmp
into
jnp
loopne
movsb
add
push
xchg
rcr
push
jnp
adc
cmp
outsb
add
pop
out
bound
add
pop
hlt
addr16
xchg
mov
add
xchg
out
push
push
ret
jge
xchg
imul
call
or
repz
push
scas
pop
and
and
lahf
repz
nop
cmpsb
iret
mov
sbb
sbb
jae
aaa
add
mov
xchg
aam
and
push
jnp
mov
out
leave
ja,pn
pop
das
leave
nop
inc
movsl
sbb
sbb
lods
xor
pop
cli
loopne,pn
cld
push
add
les
sub
test
lea
lods
aaa
ljmp
popl
fisttpl
bound
cs
pop
inc
and
and
push
sbb
je
std
cltd
add
gs
movsl
mov
cmp
pop
pop
popa
or
mov
xor
lahf
mov
fxch
mov
out
addr16
mov
inc
jbe
inc
in
lret
dec
ret
add
add
lret
pop
xor
dec
xor
iret
ficompl
and
frstor
jecxz
pop
dec
insb
lret
fstps
cld
test
stos
sbb
dec
pop
sbb
xchg
pop
lds
pop
loope
sbb
adc
inc
push
sbb
fdivl
push
adc
in
ja
mov
ficomps
pop
mov
std
xor
and
jns
sti
jecxz
and
hlt
iret
test
outsb
jmp
aas
daa
add
cmpl
test
into
push
call
out
movsb
shlb
push
or
sbb
pop
shrl
cmp
mov
ret
mov
call
ds
mov
lret
iret
push
push
sub
aas
add
int3
mov
add
jecxz
sub
inc
xchg
std
loope
cmp
adc
adc
jo
inc
pop
loop
xor
sub
pop
inc
jmp
add
add
sbb
aas
es
xchg
and
repnz
jne
and
and
xchg
pop
xor
and
pop
xchg
aam
inc
sbb
mov
popa
leave
xor
push
dec
xlat
cmp
mov
call
fisubl
jns
in
mov
ret
jnp
dec
jge
lahf
repnz
call
xchg
mov
mov
cmpsl
xor
xchg
xor
xor
jmp
loopne
arpl
aad
pop
daa
imul
xor
and
int
sti
sarl
icebp
aam
scas
xor
movsb
loopne
fwait
add
or
xlat
dec
lcall
add
test
jle
arpl
jmp
mov
mov
loope
mov
adc
out
test
adc
sbb
pop
and
xlat
ja
push
popf
sahf
push
cmc
sub
xor
popf
stos
sub
mov
clc
std
nop
int3
cmp
jo
pop
test
adc
loopne
andb
or
nop
mov
movups
imul
sub
lcall
mov
cmp
jae
dec
popl
mov
pop
adc
stos
mov
dec
les
fwait
lock
hlt
or
sbb
sbb
fcompl
sub
leave
gs
add
repnz
lods
inc
int
testb
pop
mov
xchg
shrl
fs
test
out
lret
adc
sbb
cmp
mov
xchg
inc
aas
scas
or
lods
sti
in
dec
mov
insb
loop
dec
mov
repnz
mov
in
jle
fnsave
mov
jmp
loop
xor
ja
jbe
push
subb
sbb
lock
push
sbb
int
les
mov
jmp
cltd
cmp
aam
xor
fisttpll
ror
mov
push
popa
sar
ret
jbe
es
cmpsl
jp
mov
add
mov
jne
cmp
and
jne
mov
pop
inc
stos
pusha
adc
rorb
mov
mov
outsl
pop
xchg
sti
add
in
and
mov
dec
sbb
into
pop
sbb
mov
sbb
cwtl
push
cmp
dec
push
xchg
pop
out
loopne
popf
pop
ret
add
mov
or
in
in
cltd
scas
inc
lods
repz
out
lea
xchg
outsl
faddp
jb
dec
add
xor
orb
xchg
fdivrl
imul
pop
xchg
jmp
movsl
mov
sbb
jo
sbb
pushf
and
sub
insb
mov
push
and
rcl
mov
insl
mov
push
lock
scas
jecxz
out
iret
push
js
les
adc
dec
push
or
cltd
fstpt
add
outsl
cmpsl
jbe
cmc
pop
fwait
lock
iret
punpckhbw
fxch
bnd
push
hlt
cwtl
fs
in
mov
pop
cwtl
cmpl
clc
fadds
add
dec
cli
ss
xchg
xor
fmul
psrlw
dec
loope
test
lods
loopne
lds
inc
mov
andl
scas
jecxz
adc
mov
in
js
stos
mov
xor
popf
out
shlb
lea
push
xor
faddl
dec
sub
mov
sub
adc
ljmp
icebp
push
jl
mov
inc
std
add
imull
inc
adc
pop
dec
js
lock
stos
pop
pop
shl
lods
pop
jns
test
xchg
xor
cmp
xor
and
cwtl
xchg
cmc
mov
pop
scas
std
cli
xchg
negl
imul
or
loopne
int
xchg
add
push
aam
mov
sbb
aas
dec
mov
xor
mov
test
sahf
adc
and
inc
add
adc
jbe
and
cli
sub
inc
out
sbb
pop
clc
xor
jp
lods
lret
std
fdivrp
lret
adc
mov
xchg
cmc
xchg
dec
pop
cli
repnz
xchg
rcrb
arpl
mov
pop
push
xlat
ss
iret
fdivr
movsb
mov
mov
int3
cwtl
dec
scas
dec
fnstsw
push
cmp
aas
enter
aas
adc
push
hlt
jle
icebp
fisttps
push
shll
mov
pusha
fs
inc
incb
jg,pt
xchg
loopne
mov
ret
xchg
repz
mov
inc
jbe
daa
test
cmp
daa
adc
sub
das
out
sahf
out
mov
jmp
jno
mov
shrb
sub
xor
mov
inc
pop
jle
xchg
xchg
repnz
or
cmpsb
dec
pop
cmpsb
sub
sbbb
loope
js
gs
mov
leave
cmpsb
call
hlt
je
pop
or
sbb
xchg
sub
in
xchg
cmp
fiaddl
and
das
stc
and
roll
lods
and
cwtl
incl
repz
mov
hlt
pop
lds
mov
xchg
sub
add
mov
iret
ret
fmuls
adc
add
jb
imul
dec
lcall
insb
lds
imul
xor
mov
mov
dec
rclb
xor
lahf
and
inc
mov
mov
dec
nop
pop
insl
or
es
imul
jb
mov
stos
lock
lret
jmp
pop
addr16
xor
sar
das
das
mov
lahf
adc
xchg
inc
xchg
xchg
xchg
dec
jbe
xchg
iret
mov
xrelease
mov
orl
fcomps
push
lahf
or
out
lea
xor
mov
sbb
or
mov
push
and
xchg
dec
rcrl
rcrb
or
fsubr
ljmp
cli
shrl
jns
push
and
subb
fnstcw
pop
pushf
enter
out
adcl
out
pop
insb
lret
stos
movsb
scas
outsb
push
adc
cmp
incb
jnp
and
cltd
pop
add
hlt
pop
or
jmp
cmpsb
call
push
out
push
jb
pushw
xor
push
ja
add
loop
fnop
out
shlb
ret
and
fidivl
mov
aaa
data16
sub
push
push
or
loope
adc
test
dec
cmp
js
outsb
popa
jle
fwait
xor
inc
loope
pop
and
ss
repz
jecxz
push
mov
imul
sbb
xor
pop
sbb
loopne
jge
je
leave
aas
ficomps
jb
adc
jbe
xor
dec
stc
jecxz
insl
clc
or
adc
mov
pop
mov
or
inc
std
int
out
mov
mov
sti
push
fs
leave
sub
popa
movsl
fldl2t
mov
std
movsl
xor
in
ret
xor
pop
test
sbb
bound
outsl
or
mov
test
adc
stos
xchg
cli
xor
add
mov
xchg
or
addr16
popf
cld
jns
inc
nop
aaa
in
lret
dec
jg
shrl
or
hlt
inc
icebp
and
mov
inc
int
inc
push
adc
stos
out
jae
pop
cmpsl
in
out
scas
test
lds
jg
or
pop
add
int3
inc
std
in
jge
repz
jbe
popa
fcomip
mov
rolb
aas
mov
pop
jecxz
aas
push
movsl
sbb
add
pop
pop
xor
into
add
les
and
push
testl
aas
adc
jmp
icebp
sub
sub
incl
cli
lret
xlat
push
out
rorb
test
stc
mov
das
dec
push
jnp
lods
cmp
add
sub
inc
roll
adc
and
add
xor
jl
test
add
mov
pop
roll
jle
jl
sbb
arpl
fcmove
pop
rolb
xor
dec
sub
mov
cmp
jp
je
ficoms
xor
inc
fnstsw
jg
lea
cmp
adc
sti
or
sub
xor
adcb
test
pop
push
out
dec
ljmp
sub
shrl
cmp
out
loope
jnp
out
nop
dec
xchg
enter
or
orl
dec
pop
push
sbb
jb
pop
lret
std
sbb
add
mov
sbb
mov
les
scas
daa
out
jbe
push
sub
jg
clc
add
test
jle
dec
imul
stos
or
je
je
sub
dec
mov
outsb
in
add
sub
test
ljmp
xchg
cmp
push
sub
adc
or
push
or
fisttps
sahf
pop
mov
cmpsb
pop
movsb
mov
add
xchg
scas
mov
sbb
sub
divl
movsb
insb
ret
push
icebp
pop
mov
loopne
xchg
stos
and
mov
aaa
inc
xor
sub
test
mov
sub
and
loopne
sahf
jle
ret
cwtl
pop
jg
out
push
ja
push
mov
add
push
sub
and
add
xor
pop
sti
dec
sbb
jb
imul
add
jns
sub
cmp
mov
mov
and
pop
loope
aaa
sbb
mov
dec
aaa
and
daa
push
xchg
adc
mov
sahf
ds
push
mov
inc
sub
std
jae
and
std
rcrb
mov
gs
pushf
mov
fildll
cmpsb
adc
xor
ret
dec
dec
jo
cmc
inc
pop
in
popa
or
test
jmp
cmpsl
sbb
das
rol
mov
lds
pusha
outsb
icebp
pushf
and
lcall
adc
xchg
insb
jge
lds
scas
rclb
pop
mov
popa
sarb
mov
lret
lret
pop
mov
mov
ljmp
fdivrl
inc
ljmp
cmp
cmp
add
aam
mov
lods
sbb
ja
pop
outsb
icebp
xchg
loope
xchg
add
mov
cli
lds
sbb
xchg
bound
xchg
mov
mov
or
mov
lahf
clc
repnz
js
pop
xor
sub
sub
std
and
mov
pop
imul
js
call
sbb
dec
xchg
dec
jle
incb
inc
jno
sbb
scas
out
dec
in
adc
aam
loopne
mov
into
movsb
std
jns
pop
jns
out
jns
push
sub
add
xchg
xchg
cmp
outsl
push
idivb
mov
jl
bound
sbb
mov
adc
pop
ds
andl
jmp
push
icebp
ja
cmp
dec
xchg
sbb
and
int
dec
and
or
inc
jmp
fstpt
mov
mov
rcrl
cmp
pop
cli
ret
imul
jbe
add
lods
dec
sbb
scas
fucomp
cmp
add
mov
inc
push
mov
adc
jo
sub
lea
push
bound
rorl
das
push
sbb
adc
push
das
imul
lret
aas
enter
jbe
movsb
and
jne
adc
filds
rcrb
pop
mov
sub
jp
add
test
arpl
pop
sub
sub
outsb
jg
sbb
out
lcall
jg
mov
sub
movsb
mov
inc
mov
pop
mulb
adc
jmp
pop
jae
andb
testl
dec
xchg
jmp
and
sbb
das
pop
jb
push
xor
xlat
movsb
jl
fs
jg
lock
sub
outsb
adc
out
jmp
daa
pusha
xorb
daa
pop
xorl
push
stc
and
sbb
aaa
adc
adc
test
ja
or
ja
pop
inc
mov
or
dec
or
jb
mov
pop
and
inc
inc
add
pop
out
and
jp
out
sub
inc
jne
int3
xchg
sub
or
xor
shll
rorb
dec
les
ljmp
outsl
mov
cs
push
aad
push
insb
mov
scas
sti
add
sahf
jnp
or
lods
pop
dec
shlb
dec
fdivrs
jge
jns
adc
cmp
dec
pop
aam
call
ja
xchg
repz
or
cmp
mov
cwtl
adc
out
push
mov
sar
mov
mov
call
mov
lock
fwait
out
or
add
jnp
pop
test
ret
insb
pop
adc
jae
repnz
pop
jge
add
fdivr
ljmp
mov
jb
lea
mov
mov
scas
xchg
mov
scas
inc
in
aaa
push
fwait
mov
jp
data16
and
jno
and
pop
insb
leave
pop
mov
xchg
aas
shll
lods
les
shll
adc
call
test
stc
ret
bound
or
or
aam
jbe
lret
sub
ss
ds
fiaddl
mov
and
test
and
rclb
mov
loope
lcall
push
test
gs
jne
out
imull
mov
ljmp
cli
retw
or
xchg
fiaddl
movsl
adc
sub
pushf
jno
sbb
xor
hlt
out
sub
data16
lds
xchg
repz
xchg
lods
andb
pop
xchg
mov
pop
cmp
ja
out
loop
dec
divb
mov
mov
hlt
or
dec
movsl
loop
mov
or
push
push
pop
xchg
sub
std
cmp
imul
push
lahf
stos
xor
stc
mov
fldenv
jne
mov
addr16
lahf
addr16
xchg
cmp
cmp
clc
cmp
in
pop
loopne
imul
test
std
mov
pop
int3
push
and
in
repz
jns
push
rolb
and
pusha
mov
fildl
mov
adcl
in
sbb
push
in
cwtl
xlat
ss
pop
inc
jb
hlt
push
aad
inc
push
pop
cld
jne
out
aaa
pusha
aad
pop
jae
mov
jmp
push
xor
lock
sbb
test
mov
push
arpl
movsl
add
shld
outsw
test
inc
jno
cwtl
cmc
pop
mov
scas
push
adc
jbe
cmp
cmc
sahf
mov
dec
and
lods
mov
ret
xor
addr16
mov
lods
f2xm1
gs
mov
cld
jp
scas
or
sub
jnp
les
lods
and
xlat
xor
sbb
inc
pop
mov
lret
push
aad
int3
or
dec
mov
lret
test
dec
outsl
or
lcall
stos
cwtl
cmpsb
or
cs
movsb
sub
pop
sbb
xor
fisttps
les
jle
or
push
inc
loop
iret
mov
or
mov
cmpsl
incl
dec
push
inc
repz
mov
movsb
dec
sar
dec
and
notl
cmp
push
pop
xchg
jns
mov
ret
aaa
std
add
adc
sbb
and
xlat
out
mov
sub
mov
mov
hlt
rcrl
aad
mov
jmp
cmp
mov
ret
cmp
and
sub
in
rcrb
fsubr
add
mov
jb
mov
fidivrs
pop
icebp
subl
jecxz
sti
out
pop
cmc
xchg
mov
test
cmp
and
xchg
sbb
jae
in
inc
xchg
push
add
mov
gs
sbb
lret
xor
aam
and
xchg
in
pop
jbe
cwtl
movsb
lods
test
or
jmp
xor
shll
insl
mov
in
mov
cmp
fisubrl
pop
insl
movsb
fldt
sub
dec
js
mov
dec
cltd
test
pop
lret
dec
fwait
pop
das
call
rorl
adc
shll
or
movsl
fstpt
pop
sbb
mov
outsb
loope
mov
mov
insl
mov
adc
and
jecxz
insl
into
pop
cmp
loopne
pop
ror
mov
dec
sub
pop
xchg
mov
out
repz
movsl
mull
lods
repnz
imul
leave
arpl
lret
or
push
cmc
shll
sbb
pop
rcl
stos
or
clc
fldenv
mov
inc
jne
rorb
insl
out
idivl
in
push
add
pop
cmc
sbb
mov
movsl
int3
cltd
push
ret
int
fsubl
out
or
jns
cmp
mov
mov
lcall
nop
in
adc
mov
mov
sbb
sbb
es
mov
fimuls
lods
stc
test
rorl
lret
scas
inc
mov
hlt
pop
cmp
xor
xor
es
mov
std
scas
popf
fisttpl
fidivrl
aaa
fcmovu
pop
or
jnp
sub
and
jmp
js
jo
lock
add
mov
fildl
jae
pop
push
cld
mov
pop
xchg
jmp
fadd
jnp
jb
inc
pop
mov
arpl
in
cmpsl
jns
mov
nop
jne
stos
loopne
incl
insb
adcb
pop
les
loopne
xchg
sub
adc
mov
insl
push
cwtl
imul
or
push
fbstp
xor
pop
xor
fdivp
subl
ja
inc
roll
sub
bound
imul
mov
mov
loope
and
jl
out
pushf
repz
bound
xchg
add
movsb
or
repz
push
iret
mov
or
fs
nop
pushf
fbld
jecxz
leave
push
pop
fiadds
enter
and
insb
push
jecxz
add
fstpl
mov
stos
jo
mov
cmp
movl
out
jnp
lahf
jne
push
pop
or
xchg
imul
dec
sbb
xor
xor
xchg
int
sub
insl
in
cmp
mov
push
shlb
and
jbe
outsb
or
push
call
jo
or
imull
scas
jbe
or
jae
lahf
addl
ficoms
jno
jne
pop
fwait
and
mov
xchg
insl
mov
xor
test
fs
into
xor
jecxz
xor
mov
fsubrs
xor
inc
fs
loopne
xor
movsl
test
xlat
add
icebp
add
adcb
add
sbb
adc
push
lods
in
xor
nop
cmp
test
jmp
ror
lods
push
jmp
leave
repnz
mov
adc
mov
mov
outsb
sahf
iret
inc
jns
adc
cli
addl
sbb
xor
jb
dec
iret
jl
xchg
xchg
xorl
scas
mov
mov
out
rcr
sbb
dec
mov
js
push
push
push
or
sbb
push
addr16
insl
ret
int3
test
sbb
inc
xor
lcall
rep
lret
xor
pop
or
lods
loopne
sub
push
xor
add
xchg
sub
jecxz
int
xchg
push
into
xchg
test
and
hlt
push
sub
jg
mov
mov
dec
lods
adc
or
push
ja
int3
mov
sbb
push
aaa
jne
sub
movsb
ds
cmc
leave
mov
repz
int3
dec
inc
mov
push
push
lock
stc
push
test
lret
sbb
aad
or
push
cwtl
or
mov
push
xor
jo
cmp
mov
mov
mov
mov
enter
out
das
das
pop
fildll
lods
stos
lahf
mov
je
and
jo
inc
clc
adc
cmp
lcall
stos
adc
hlt
or
insb
sub
inc
loopne
daa
add
jo
lods
mov
je
shrl
cli
enter
push
pop
or
cld
sbb
hlt
cmp
pusha
dec
xchg
mov
push
jmp
out
jns
fsubl
sbb
pop
and
inc
pop
rcr
pop
or
xchg
sbb
repnz
loopne
jno
xchg
mov
sbb
out
mov
push
in
xor
fs
mov
jne
cmp
cmpsw
adc
xor
push
mov
mov
std
xor
ret
ja
inc
add
int
mov
mov
repnz
pushf
loop
fucomi
mov
ja
loop
cmp
inc
rcrb
cld
sbb
add
shr
insl
test
inc
and
in
adc
cs
add
pop
cwtl
jecxz
into
sbb
or
add
stos
ljmp
aaa
lock
ds
movsl
enter
inc
push
and
jns
cwtl
cmc
push
jb
cwtl
inc
pushf
mov
mov
cwtl
jnp
imul
xchg
js
push
pop
aad
mov
insb
std
pop
mov
mov
fs
out
or
mov
cmp
shrb
sub
mov
into
adc
fmulp
and
shrb
repz
dec
outsb
push
lahf
pusha
xorl
adc
pmullw
nop
lods
mov
push
jnp
cmpsb
jae,pt
cmp
add
sub
cli
rorl
push
cltd
cmp
pop
lods
or
pop
imulb
mov
dec
outsl
out
mov
test
test
ret
loop
sti
in
inc
push
adc
jns
or
roll
adc
mov
in
arpl
xchg
pushf
mov
ror
inc
xor
orl
mov
jle
je
loopne
pop
scas
add
and
push
filds
cmpsl
sub
add
add
jae
sub
js
mov
xorb
sub
pop
cwtl
movl
into
adc
subb
dec
sahf
push
add
sbb
xchg
push
cmp
jg
fstpl
or
cli
repz
loopne
lret
fisubs
dec
outsb
mov
pop
punpcklbw
cltd
inc
or
loope
push
ficomps
sahf
dec
lret
inc
fs
add
outsl
jp
xlat
mov
insb
mov
cmp
push
jns
and
add
xchg
cli
pop
adc
dec
dec
mov
mov
frstor
aas
xchg
fucom
mov
imulb
incb
sbb
fistl
insl
dec
mov
mov
xchg
jmp
adc
cmp
int
mov
push
cmc
fdiv
push
scas
inc
stc
inc
add
and
dec
int
in
addl
mov
jmp
fstps
inc
push
pop
std
sub
repz
adc
sub
stc
daa
jge
cmpsl
mov
imull
sbb
push
mov
push
or
shll
adc
rcr
adc
mov
stos
push
leave
sub
sub
fs
invd
adc
push
lahf
clc
add
loopne
xor
ja
mov
jmp
push
or
pop
iret
push
push
sub
cmp
sbb
or
pusha
hlt
nop
test
sahf
and
cmp
fnstcw
aas
out
imul
es
mov
mov
and
insb
mov
lret
xor
dec
icebp
or
xchg
xchg
lock
sar
std
cmp
mov
push
ljmp
arpl
add
je
jnp
ret
jns
pop
lret
mov
dec
arpl
mov
fcmovne
popa
fcomps
shlb
hlt
xor
rcll
loopne
mov
xor
imul
movl
testl
push
jmp
or
sbb
fldcw
outsb
push
rcrb
iret
loop
out
pop
pop
cmpsl
jmp
xor
sbb
ror
int3
inc
hlt
jp
mov
aaa
rcr
inc
mov
test
mov
in
jns
xorl
mov
jl
test
inc
ljmp
pop
ficoml
sbb
out
je
push
add
test
cltd
dec
bound
dec
fcomi
jbe
cmpb
jle
xor
jmp
sbb
fs
popf
call
pop
cmp
shll
fdivl
cmpb
adc
movsl
hlt
fimuls
clc
repnz
out
add
cs
cmp
lds
dec
or
mov
js
adc
imul
out
aam
stc
lret
cmp
jmp
dec
push
and
data16
adc
loope
mov
push
add
jno
jb
ja
xchg
pop
gs
fcoms
in
mull
sarl
wbinvd
mov
push
aad
mov
mov
mov
xor
mov
adc
je
jb
fsubp
shll
lret
cltd
xor
lahf
ret
cmp
aad
xchg
and
xor
cmpsb
roll
sbb
cmpsb
mov
in
lock
cli
mov
mov
gs
push
inc
xlat
xor
fucomi
jge
ss
jecxz
cmpsb
xlat
mov
cmp
mov
mov
push
adc
cmpsb
fiaddl
adc
jg
jg
sbb
jp
push
leave
test
pop
scas
cmp
and
scas
jns
lds
ret
call
or
mov
dec
loope
out
shr
cmc
and
fs
out
and
or
add
out
enter
sbb
mov
ds
jmp
pop
ss
add
push
mov
mov
js
stos
xchg
sbb
cmpsl
jae
jle
mov
popa
clc
push
push
xchg
es
subb
repnz
pushf
mov
push
pop
mov
pop
cld
mov
and
pop
testl
inc
outsb
push
mov
inc
scas
fldt
dec
push
mull
xchg
cmpsb
mov
jne
or
cmp
inc
add
in
add
stos
dec
or
xor
add
mov
mov
aam
cmc
arpl
les
xchg
add
or
cld
adc
mov
icebp
fimuls
push
and
iret
dec
fs
sub
inc
lock
mov
mov
daa
rcl
sbb
push
sbbl
sbbb
and
inc
daa
popa
out
arpl
xchg
or
testl
js,pt
xchg
pusha
stos
inc
sbb
or
pop
pop
cli
adc
pop
xchg
shlb
pushf
std
fdivl
lods
leave
mov
push
jb
push
mov
shl
push
mov
pushf
sub
mov
cmpl
pushf
mov
inc
lods
movb
xor
pop
rdpmc
jl
ss
push
scas
adc
fucomp
lods
fildll
push
sbb
loop
movsl
xchg
rclb
mov
lcall
int
jno
loop
enter
push
mov
pop
test
ja
sub
xchg
popa
push
test
ss
out
addr16
push
sahf
inc
add
sub
test
jg
jle
inc
lods
std
pop
pop
in
daa
in
out
sbb
mov
sub
ljmp
cld
mov
ret
and
inc
sub
push
mov
xchg
aad
sbb
jne
inc
stc
xor
mov
push
add
int3
fstpt
cmp
adc
jmp
outsl
pop
pop
and
cmp
arpl
ret
inc
xchg
divl
cld
or
sbb
jae
mov
test
mov
das
pop
cwtl
pop
popf
test
mov
mov
push
push
js
mov
cmp
aaa
mov
out
test
pop
pop
arpl
inc
outsl
lahf
sub
mov
push
dec
insl
test
xchg
push
cld
out
push
xchg
bnd
push
test
jp
mov
mov
sub
scas
jmp
fistpll
fcom
mov
dec
push
nop
push
inc
adc
in
test
mov
push
cmp
subl
add
mov
jmp
jl
jmp
xchg
sub
jp
dec
enter
pop
je
add
cmp
sbb
lea
add
imul
inc
call
std
add
mov
xchg
imul
mov
push
lret
aaa
lds
mov
iret
pop
lret
iret
add
jbe
fsts
pusha
repz
in
dec
insl
rorb
cwtl
and
enter
addl
or
cmp
daa
in
mov
sbb
and
mov
mov
and
imul
or
pop
mov
xchg
int
jb
data16
cltd
out
jno
lods
ret
inc
xor
enter
push
inc
subl
fcomps
mov
fmuls
int3
jle
fsubrp
cmp
bound
dec
add
mov
cltd
mov
mov
in
and
jno
stc
outsb
arpl
push
cmpsl
std
ret
inc
ficomps
xchg
push
insl
jp
fdivrs
cmp
sub
pop
pop
movsb
inc
or
loope
sbb
mov
fwait
movsb
orb
nop
push
xor
mov
push
adc
shlb
shll
sbb
icebp
mov
les
cmpsb
inc
test
inc
or
cli
mov
and
sub
dec
test
outsl
mov
pop
mov
xchg
pop
es
inc
sub
fcoml
fistps
lods
loope
adc
mov
sbb
xchg
sub
and
jmp
ljmp
mov
mov
js
sbb
scas
xchg
sub
ja
cmp
aas
mov
insb
sbb
mov
icebp
add
jge
mov
fstpl
jne
jo
xlat
adc
pop
mov
sbb
insl
dec
add
push
leave
dec
lods
lods
mov
roll
or
adc
adcl
in
fcomip
cwtl
test
lret
aas
xor
mov
out
aam
jp
lret
insb
mov
jmp
lea
dec
ja
fcomps
jle
inc
aam
mov
mov
fsubrs
xchg
inc
cld
mov
push
cmpsb
mov
repz
jmp
repnz
test
mov
test
inc
mov
xchg
xor
lods
ret
lea
adc
add
lcall
jnp,pn
sbb
add
add
dec
insl
xchg
jo
ds
xchg
mov
es
xorl
pop
mov
cmp
pop
mov
push
and
cld
cmp
mov
mov
out
or
out
aas
pop
xchg
notl
std
sub
rorb
pop
pop
out
inc
jl
fildll
mov
cmp
into
pop
push
jp
pop
repnz
or
cmp
or
lcall
int3
jmp
cmp
jnp
and
outsl
icebp
ss
xchg
jae
add
cmp
test
int3
shlb
shrb
mov
mov
adc
cli
lcall
sti
mov
dec
cltd
dec
mov
sbb
or
cmc
push
and
fimull
test
sub
cwtl
adc
mov
xor
lcall
in
stos
dec
sahf
push
mov
popl
fiadds
pop
stos
and
out
mov
and
stos
insb
jbe
jnp
inc
jb
shrb
jge
xor
test
mov
push
xchg
fisubrs
movsl
and
jns
pusha
jno
push
repz
fildl
jbe,pn
mov
sbb
xorl
ficompl
cmp
rcl
into
popf
jle
scas
push
lods
hlt
add
xor
pop
movsb
dec
jle
cmp
mov
pop
cltd
sahf
pop
imul
cmp
jle
push
rcrb
jne
shlb
or
mov
pop
jbe
mov
popf
into
jne
sbb
sub
cmc
jge
xorl
sbb
mov
in
aas
cs
loope
enter
mov
les
pusha
pop
dec
or
jns
mov
rcl
xchg
int
js
push
lret
pop
shlb
inc
jo
jne
sahf
or
xchg
mov
jecxz
aaa
fildll
inc
fcmovbe
insl
push
daa
fdivrs
iret
and
sub
jp
fnstsw
loopne
jae
adc
fisttpll
sbbl
je
rsm
or
mov
cli
icebp
or
adc
xor
pop
je
mov
and
movsb
out
sbb
pop
pop
scas
jl
add
pusha
sub
sbb
jmp
fldcw
mov
lds
push
mov
loop
lret
fistl
mov
xchg
add
jns
adc
das
fcomi
test
testl
xchg
sub
xor
mov
add
out
lret
fucomip
sub
xlat
pop
fsubrp
jmp
adc
push
or
mov
mov
lcall
movl
pop
int3
dec
dec
movsl
in
sbb
dec
ss
dec
adc
bound
in
movsb
inc
dec
lea
cmp
xchg
pop
out
repnz
jl
aaa
adc
and
repz
jge
sub
jnp
or
hlt
loopne
pop
mov
add
fldl
push
push
lret
mov
pop
lods
mov
mov
in
jle
and
inc
leave
outsb
fs
in
fsubrl
pop
mov
mov
int
subb
out
outsb
cld
mov
and
mov
ja
pop
push
and
pop
push
shrl
ss
adc
testl
jle
jl
add
loopne
push
inc
push
pop
mov
data16
lret
add
test
rorb
xchg
and
jge
adc
enter
and
test
loop
xlat
jno
sbb
mov
cli
lods
mov
pop
inc
ret
sbb
cld
cmp
fsubrl
mov
or
mov
out
xor
adc
in
mov
addl
cmpsb
dec
cwtl
sub
jb
sbb
lods
dec
leave
pop
push
shrl
and
lcall
sbb
xor
das
aaa
inc
mov
or
out
es
bound
jbe
sub
cmpsl
popl
mov
add
dec
shrl
xchg
popf
cmc
push
addr16
test
test
xchg
mov
insl
xor
scas
adc
stos
inc
cmpsl
mov
jg
jae
xchg
ljmp
push
inc
pop
sub
inc
imul
mov
mov
scas
xchg
int3
mov
xchg
stc
add
aad
pop
push
mov
mov
in
dec
sbb
lret
icebp
dec
daa
ret
cmp
pop
leave
movsb
push
cmpsb
sub
rolb
cmp
mov
mov
xchg
lahf
add
movsl
out
jb
adc
inc
lods
cltd
clc
test
xor
pop
cmp
out
pop
test
xchg
dec
test
mov
mov
arpl
movups
and
xchg
stc
cwtl
cmpl
sub
test
adc
mov
cmpsb
or
stos
jbe
or
sahf
shlb
add
adc
pop
sbb
addb
frstor
jle
negl
add
je
ds
xlat
jmp
jg
mov
addr16
inc
es
imull
aas
inc
lret
mov
cmpsl
jmp
bound
out
mov
lcall
xor
hlt
leave
ret
dec
hlt
inc
mov
sahf
das
pop
pop
inc
dec
xchg
cmp
jnp
fdivrs
dec
or
scas
push
add
pop
movsb
push
mov
mov
rol
clc
clc
sbb
push
bound
mov
jno
leave
out
push
sti
dec
or
inc
push
push
out
xchg
xchg
outsb
je
in
jg
fisttpl
jbe
xor
addb
aad
popf
xchg
inc
push
xchg
mov
pop
arpl
pop
sub
mov
das
fistps
adc
add
imul
jge
popl
lock
cmp
jle
mov
or
mov
push
and
fstpt
mov
in
mov
jecxz
aas
xchg
sbb
pop
or
sbb
push
cli
clc
push
aas
cli
mov
jno
push
fwait
sbb
test
mov
push
rol
xchg
adc
xchg
add
sub
adc
dec
jecxz
lahf
icebp
xor
je
outsb
insl
jo
lea
sub
xchg
fidivrs
fwait
or
xor
pmuludq
mov
sbb
push
bound
pop
jns
jno
push
into
or
fcmovnb
cs
int3
repnz
mov
mov
dec
cmc
or
inc
sub
jp
xor
mov
int3
xchg
pop
shlb
int3
sub
add
adc
mov
repnz
mov
mov
xchg
aad
outsl
pop
jns
and
mov
je
fstp
jne
cmpsb
lea
test
pop
aas
push
arpl
jmp
xchg
pop
and
ljmp
push
clc
stos
sbb
ss
xchg
ret
fucomp
popa
clc
lods
mov
jne
inc
cmp
cmp
sbb
xchg
fisttpll
sbb
enter
in
aaa
add
loope
mov
clc
pop
shrb
jge
dec
sbb
xchg
mov
mov
mov
and
xchg
mov
es
in
dec
rorb
cli
pop
es
outsl
out
arpl
aaa
xchg
xchg
mov
or
mov
mov
or
lods
pop
cld
push
dec
arpl
jp
outsb
stc
inc
lahf
and
sbb
movsl
or
sahf
jmp
jb
push
inc
push
andl
in
inc
xchg
mov
pop
jb
ret
shlb
sbb
scas
jecxz
leave
mov
jle
ds
cli
inc
icebp
mov
addb
outsl
je
cmp
lods
mov
repnz
jp
sbb
dec
nop
push
lods
les
in
ret
and
testb
movsl
pop
cwtl
js
jb
cmp
xchg
cmp
pop
or
es
hlt
in
inc
mov
in
jge
bound
aas
std
imul
xor
jns
ds
notl
push
cmp
xor
iret
pop
adc
arpl
add
sub
fsqrt
xor
or
ret
or
pop
sti
iret
inc
popf
in
mov
jecxz
and
lahf
xor
mov
fidivl
xlat
inc
rol
aas
sti
xor
shl
inc
mov
dec
repnz
in
xor
or
es
mov
aas
pop
repz
dec
jg
inc
cmp
adc
mov
push
pop
xchg
lods
lock
lea
sub
sbb
push
negl
mov
scas
xor
xor
mov
outsl
mov
push
xor
data16
cmp
shl
add
in
lcall
stc
jecxz
xor
fdivp
fsubr
cs
cld
add
filds
add
push
mov
push
pop
imul
lret
jns
mov
push
cmp
jmp
mov
fwait
call
mov
xchg
mov
fadd
ljmp
jg
fistpll
inc
push
lret
sub
fadds
iret
je
pusha
jo
aaa
mov
mov
rcrb
and
inc
sbbl
in
pop
test
aam
push
sub
out
int
int
mov
xchg
jbe
stos
stos
push
inc
pop
xor
push
in
loopne
rcrb
psubd
bound
roll
imul
test
adc
inc
push
mov
lds
lds
nop
negb
ret
icebp
inc
adc
pop
cmpsb
and
jnp
aam
mov
mov
lahf
int
add
pop
jl
pop
and
outsl
es
mov
mov
int
enter
cld
div
sahf
and
icebp
arpl
sbb
jns
fwait
std
sub
sub
fcom
or
out
fwait
loopne
pushf
imul
jae
fdivr
push
cmp
rcl
minps
cmp
pop
dec
mov
adc
cmc
mov
movsl
jg
mov
xchg
scas
repnz
outsl
fsubl
inc
add
les
cmp
cmp
jecxz
mov
cs
jmp
mov
and
or
test
cltd
push
push
movsb
add
push
mov
jnp
cli
ds
out
cwtl
xchg
leave
mov
jnp
xchg
xchg
xor
push
sbb
inc
cmc
rolb
add
pop
mov
jg
js
adc
cltd
push
xorl
aas
mov
test
lahf
jecxz
popf
mov
jo
jbe
sub
sbb
lret
mov
insl
test
stc
daa
add
out
cli
mov
adc
repnz
inc
jb
lea
les
add
lea
ljmp
cmc
jae
scas
fsubp
sub
les
ja
adc
lds
je
in
loope
fisubl
sbb
pop
mov
mov
sbb
cmp
sub
pop
cmp
out
les
jp
aad
notl
dec
int
lahf
rorb
mov
int
xchg
xor
mov
addr16
loop
nop
iret
jp
dec
xchg
push
in
add
cmp
xor
cmp
jmp
call
pop
cmpsb
mov
movl
out
push
shll
in
push
adc
pop
push
mov
mov
aas
loope
mov
inc
sbb
lds
xor
dec
int
mov
out
ret
lahf
addr16
jns
sub
stc
mov
dec
push
add
cmpsl
jns
and
popf
inc
les
insl
loop
in
adc
stos
outsb
int
push
imul
jnp
fsts
lds
popa
lock
mov
mov
pop
mov
sbbl
or
test
adc
mov
jl
outsb
or
shl
jle
mov
insl
test
cmp
pop
jl
test
xchg
mov
test
cld
insl
cmp
fs
fiaddl
filds
out
aam
fst
cmpsb
or
aam
movzbl
pop
pop
out
sar
repz
mov
pop
dec
mov
adc
out
test
mov
xlat
lds
cmp
aam
xchg
add
add
or
clc
js
shll
negl
sbb
test
adc
dec
lea
pop
daa
ret
cwtl
xchg
cld
mov
shlb
adc
lahf
call
push
add
or
and
cmp
pop
movsl
mov
enter
dec
out
push
sub
dec
popa
test
mov
sarl
hlt
ja
xchg
jle
stos
pop
lret
in
addl
sbb
push
push
mov
mov
mov
push
bound
adc
add
test
dec
cmpsb
popa
xor
out
loopne
lods
adc
cmp
scas
xlat
or
add
and
loop
jle
push
and
jmp
sbb
xorb
dec
insb
test
mov
call
and
inc
int3
jecxz
pop
pop
sbb
ja
xorl
pop
inc
hlt
and
jo
rcrl
call
popa
orl
lret
and
sub
or
mov
imul
adc
clc
outsl
dec
rcr
pushf
cld
inc
pop
pop
pop
jge
cmp
cmp
push
sbb
jmp
pop
mov
cmpsl
jbe
outsb
loopne
scas
pop
sahf
mov
sub
adc
aad
push
sti
sub
push
insb
lods
je
imul
scas
test
push
and
lret
jecxz
cli
sub
decl
je
test
test
adc
popf
push
shlb
jo
mov
sbb
fadd
inc
es
jne
xor
frstor
xor
rcl
mov
sarl
mov
loop
daa
cli
mov
pop
hlt
subl
mov
xchg
test
leave
cltd
repnz
cli
jae
iret
stc
jg
add
and
push
or
add
inc
mov
ss
cmp
xchg
mov
out
and
mov
mov
cbtw
adc
cwtl
mov
or
sbb
add
es
mul
sub
testl
orl
cmp
cmp
push
addr16
cmp
mov
scas
pop
into
popf
repnz
mov
js
mov
adc
mov
js
xlat
in
stos
xchg
sbb
xor
nop
push
rol
inc
rcr
jno
sub
out
push
enter
loope
mov
test
pop
aaa
xchg
scas
pop
jmp
jmp
popf
jmp
add
adc
sbb
addb
andb
push
mov
repz
inc
jo
adc
adc
outsl
cltd
mov
sub
xchg
push
into
arpl
add
cmc
ret
inc
jle
js
shrb
jecxz
fnsave
pop
sub
aaa
test
push
adc
lahf
cli
inc
stos
cmpb
lods
sar
cltd
out
repz
cli
mov
inc
test
pushf
int3
out
pop
das
xchg
fwait
dec
mov
push
mov
hlt
rcll
cs
push
jp
adc
fnsetpm(287
inc
add
jb
xchg
repz
repz
cmpsl
jecxz
mov
loope
sahf
sbb
mov
pop
js
sbb
sbb
and
out
dec
int
lock
mov
scas
sub
xor
fdivrs
fisubs
xlat
cmpsb
icebp
sbbl
sub
jns
cmp
cmpsl
push
xor
int3
inc
pop
push
mov
enter
or
popa
or
sbb
das
je
lcall
xor
lds
hlt
adc
add
lahf
xor
nop
incb
jns
adc
sbb
outsb
cmpsl
mov
divl
ja
int3
int3
fstpt
jbe
push
ret
mov
test
sbb
roll
and
push
popf
adc
adc
das
lds
xchg
sub
pop
test
fnstsw
leave
pusha
js
test
js
int
fwait
pop
cmp
ret
fs
pop
xor
mov
rcll
xchg
scas
sub
xchg
pop
bsr
fisubs
jnp
into
mov
mov
xchg
and
repz
add
movsl
into
addr16
test
lcall
mov
xor
daa
pop
leave
cmc
sar
mov
int
test
push
jne
stc
xchg
cmpsb
pusha
jp
pop
movsl
add
or
into
loope
dec
in
in
mov
shld
fs
mov
push
jo
and
adc
fcmovnb
mov
sub
xchg
retw
add
cmp
xchg
jno
jnp
pop
jno
repz
or
mov
repnz
clc
imul
in
jecxz
lea
inc
jl
mov
insl
jno
mov
pop
or
dec
in
push
cli
push
cli
pop
inc
adc
mov
jne
es
in
popf
xor
shlb
scas
push
sbb
test
sbb
jp
addb
pop
adc
les
jle
enter
inc
mov
cmp
cmc
mov
les
sub
cmp
dec
inc
bound
pop
and
xor
testb
mov
stos
pusha
sub
xor
js
je
dec
sbb
and
dec
outsl
test
lock
mov
sub
frstor
dec
push
ds
pop
mov
mov
sbb
mov
pop
push
rol
mov
xchg
cs
mov
out
cmpb
fxch
cli
dec
imul
xor
pop
or
loope
cmc
and
shll
dec
push
pop
lea
push
jge
push
pop
lcall
test
jp
jp
popl
inc
out
das
xor
dec
dec
stos
leave
xorl
jbe
stc
lea
push
dec
movaps
lods
fs
mov
and
xor
mov
mov
mov
mov
push
mov
lahf
push
dec
inc
adc
in
xor
int3
cmp
add
dec
add
push
out
out
sbb
inc
mov
dec
adc
push
shll
sarl
test
aaa
push
xchg
leave
lahf
lea
stc
in
pop
outsb
cwtl
push
push
mul
xlat
or
sahf
mov
cmp
test
adc
ret
and
or
subb
cwtl
test
xchg
int3
mov
jmp
push
ret
dec
mov
ljmp
leave
xor
fbstp
lock
mov
pop
mov
dec
sbb
test
or
inc
aad
sbb
in
xor
inc
iret
sub
not
enter
in
shrb
mov
out
or
es
sti
adcl
cld
xchg
jmp
push
cmc
shrb
pop
fnsave
dec
movsl
daa
mov
stos
cmpsl
mov
inc
repnz
xchg
loope
inc
sub
outsl
cmp
sbb
cmp
mov
cmpsl
jb
adc
mov
dec
test
push
mov
repnz
in
cmp
mov
mov
orl
pop
inc
dec
push
mov
dec
xchg
icebp
icebp
daa
daa
stc
mov
adc
scas
sbb
fists
xchg
jp
and
ret
imul
lds
sbb
or
and
jnp
mov
int3
rclb
jp
popa
mov
push
mov
addl
mov
xor
fs
mov
and
dec
std
or
roll
sbb
in
and
cld
in
xchg
jo
cs
xorb
jne
fs
sbb
out
inc
mov
adc
mov
dec
mov
rol
push
add
sub
and
jmp
dec
sbb
dec
dec
xchg
roll
jno
lret
out
xor
repz
dec
or
pusha
and
outsb
pop
rorl
and
lds
add
jmp
push
push
sbb
fstpt
pop
add
fldl
test
sbb
mov
orb
shl
mov
shll
fstpl
or
aam
or
push
ficoms
mov
test
jo
in
sub
cs
add
fsubrp
repz
xlat
pop
push
mov
mov
mov
xchg
inc
push
pop
mov
fisttpl
jg
cltd
sbb
dec
sbb
imul
inc
xor
nop
and
inc
mov
cmc
pop
mov
xor
bound
add
or
mov
jle
or
in
punpckhwd
dec
int3
insb
hlt
push
out
xor
popa
sbb
jmp
ja
add
cmpsl
or
mov
mov
sahf
mov
sbb
push
aad
mov
jl
pop
pop
add
sbb
jb
test
inc
pop
mov
loopne
push
mov
add
rcr
dec
adc
jne
push
cmp
outsb
jecxz
or
in
nop
or
inc
lahf
mov
cmp
jae
popf
shrl
fnstsw
jge
jge
and
sti
push
mov
cmp
lret
jge
loopne
cmc
xor
ror
popf
aas
out
insl
pop
loopne
dec
push
sbbl
sub
fsubl
mov
mov
mov
xchg
and
cmpsl
sub
mov
movsl
mov
bnd
or
loope
fs
movsl
jns
jns
stos
and
adc
push
mov
pusha
mov
push
sti
andb
inc
sahf
sbb
imul
or
xchg
xor
stos
nop
pop
ret
cld
fdivr
popa
sbb
scas
mov
mov
ret
cmp
or
mov
imul
push
sar
std
clc
mov
rolb
push
pop
fistpl
aad
imul
sub
inc
test
push
aaa
pop
xchg
ljmp
cmp
pop
jmp
or
into
mov
lret
pop
mov
cmp
xlat
cld
scas
inc
fdivr
sahf
scas
mov
jo
lcall
int
push
add
lea
pop
add
or
je
or
sbb
incb
imul
mov
jp
test
push
fists
add
fstps
bound
fmul
ds
dec
in
sub
jp
imul
sub
sbb
ds
dec
imul
movsl
lea
xchg
ret
jp
adc
xchg
pop
lock
andl
adc
jne
xor
data16
push
es
leave
movsb
inc
push
into
fcmovb
idivl
shlb
andl
rcll
out
sti
xchg
scas
xor
sub
popf
inc
in
jg
orb
xor
cmp
je
sub
and
shl
cmp
bound
es
daa
jb
imul
and
daa
pop
or
aam
cmp
mov
xchg
sub
xor
and
pop
imul
push
pop
pop
cli
mov
out
dec
roll
xlat
and
inc
shlb
imul
add
mov
sub
iret
mov
mov
sbbl
out
pop
in
jge
jo
daa
int
xor
iret
xchg
dec
push
pushf
ds
les
cmp
jmp
dec
sahf
xchg
fcompp
dec
xlat
pusha
ja
in
js
lret
dec
jnp
or
cs
push
sbb
xor
sbb
inc
pop
xchg
addr16
repnz
jl
sahf
cmp
xchg
fiaddl
mov
pushf
pop
or
jecxz
mov
andl
push
sub
pop
jmp
inc
sti
xor
mov
jae
dec
sbb
cmc
mov
jle
aad
pop
jo
and
mov
lods
lcall
ret
inc
js
dec
mov
sbb
xor
jp
pop
dec
xchg
and
pop
sbb
iret
into
add
sub
mov
xchg
jmp
push
movsb
mov
jns
cmpsb
lcall
call
cmpsl
or
js
jge
subb
ds
test
das
orb
shll
into
inc
inc
bound
jbe
add
sub
dec
mov
cmp
cmp
mov
repnz
add
fstps
jne
adc
sti
fmulp
dec
out
jg
dec
pop
mov
shr
jp
xchg
pop
pop
popf
xchg
mov
loope
jecxz
or
iret
sbbl
or
sbbl
loopne
jge
mov
pop
dec
rorl
call
inc
sub
lods
mov
jb
xor
lahf
out
movsb
ret
in
popf
push
push
aad
xchg
mov
inc
xor
imul
shll
lret
rorl
divb
xor
jb
and
pop
adc
sbb
pop
push
jle
lea
fadds
pop
sub
lock
call
or
push
mov
cltd
cli
or
push
loope
stc
fistl
xor
pushf
add
jmp
ljmp
dec
adc
test
jle
out
test
mov
xor
fucomip
andl
ja
or
jnp
daa
adc
xor
pop
aad
out
test
mov
sbb
cli
cs
mov
pushf
lahf
mov
mov
xchg
xchg
push
mov
cli
in
add
mov
fcoms
dec
int
adc
das
xchg
stos
negb
lret
xchg
jmp
mov
rcl
test
xchg
cmpb
shrb
loopne
sti
adc
popa
or
int3
xor
adc
lea
dec
cmpsl
cld
stos
in
ret
xchg
shrl
ret
rolb
mov
cwtl
fdivrl
inc
or
mov
in
jle
push
push
repnz
mov
scas
roll
and
or
cmpb
sub
cmpsl
lret
mov
dec
xchg
sub
mov
cmp
shlb
dec
lods
clc
push
sub
rorb
xchg
sub
dec
xchg
inc
jo
cmpsb
mov
pop
or
cmp
push
rorl
dec
in
pop
xorb
gs
add
mov
test
pop
std
js
mov
sbb
movsb
mov
mov
arpl
push
mov
into
stc
pop
pop
mov
test
lods
cltd
pop
mov
out
jmp
jmp
data16
pop
xor
mov
pop
or
fnsave
rcll
test
xor
lods
lods
mov
test
add
or
dec
jnp
dec
scas
dec
lea
das
sub
insb
clc
mov
sub
movsl
and
rcrb
lods
mov
ret
pop
loop
xchg
dec
out
popf
jb
dec
out
pop
js
mov
daa
dec
pop
push
cmpsl
lret
mov
inc
and
insl
inc
stc
rclb
pop
mov
dec
lods
leave
xchg
pop
dec
lock
das
call
popa
lret
inc
gs
sbb
xchg
sub
movl
xor
nop
data16
sbb
cmp
fildl
jmp
pushf
in
add
jnp
mov
xor
aam
sub
inc
addr16
xor
in
fs
nop
nop
lret
xchg
xor
pushf
cmp
pop
ljmp
stos
pushf
pop
pop
push
imul
addl
dec
sbb
pinsrw
ret
test
mov
xor
pop
xor
movsl
out
rclb
sub
adcl
imul
jle
aam
adc
mov
nop
ss
push
mov
cmp
push
inc
ss
addr16
inc
pand
push
adc
or
mov
movsb
shrl
sarb
mov
mov
aaa
imul
pushf
jmp
mov
testl
rol
aad
and
inc
std
loopne
fwait
mov
or
mov
xchg
add
mov
into
dec
sbb
aas
pusha
cmpsl
push
out
pop
mov
push
and
mov
out
aam
add
test
xchg
pop
ret
rsm
push
fs
xlat
adc
lea
fldcw
outsb
adc
repz
push
or
ret
fiadds
es
popa
dec
pop
jecxz
mov
fs
das
mov
pushf
push
imul
mov
inc
out
loope
or
cli
test
fsubl
jne
fildll
in
js
pop
and
mov
mov
clc
inc
xor
dec
xchg
xchg
mov
add
fs
je
std
xchg
dec
sbb
push
xchg
mov
addl
int
je
idiv
les
popf
inc
mov
orl
fbstp
mov
add
adc
scas
add
rcll
add
cmp
pop
aad
nop
sub
aaa
push
ret
loopne
push
pop
sub
dec
icebp
xchg
push
fsub
dec
les
pop
push
cmp
mov
jmp
loope
cmp
jge
lcall
lret
mov
sar
sti
movsb
lock
jnp
ret
cmp
movsb
rcr
test
cmpsb
pop
popf
jnp
out
stos
add
jg
sbbl
gs
lcall
mov
jg
add
lcall
and
cmc
xchg
mov
call
mov
cltd
fiadds
test
mov
cmp
jnp
sbb
les
jns
popa
xchg
mov
arpl
mov
negb
xor
push
cmp
add
fists
std
add
dec
sbb
add
jp
xor
push
push
cmp
inc
arpl
sar
push
cmp
inc
popa
in
jns
repz
ret
pop
cltd
mov
mov
push
mov
in
mov
sahf
dec
jg
inc
dec
dec
out
clc
cmpb
cmp
and
lea
add
pop
test
aas
lods
pop
jmp
rcr
in
and
outsb
or
sub
pusha
push
in
mov
xorb
jge
lret
xor
xorb
cmp
andb
sub
mov
shl
jbe
stos
inc
stos
fadds
jb
jno
mov
xlat
lds
pop
outsb
in
sbb
insb
xor
jno
mov
jnp
push
dec
jle
cmp
sub
popa
mov
hlt
jnp
cwtl
xchg
push
test
repz
push
push
push
hlt
mov
pop
xor
jge
enter
cltd
jle
and
lret
enter
inc
clc
mov
les
and
sbb
les
call
mov
push
pop
xchg
testl
sbb
jmp
xchg
out
sbb
jp,pn
adcl
lods
adc
sub
add
inc
cmc
gs
add
or
xor
lret
aas
sbb
test
shlb
mov
js
push
adc
and
push
lods
arpl
xchg
fwait
dec
bound
mov
or
push
pop
cmp
and
repz
add
and
mov
cltd
dec
sbb
ret
loopne
add
aad
jp
or
imul
shll
and
sub
sarl
mov
mov
pop
mov
mov
sbb
out
lods
pop
jae
shr
push
imul
mov
mov
jno
or
push
ret
aam
js
aad
dec
lock
jns
imul
mov
movsl
push
adc
lcall
test
iret
sbb
iret
shr
hlt
invd
pop
xlat
or
inc
add
ja
push
mov
jnp
xor
xchg
cmp
cmpb
dec
inc
xchg
stc
jae
call
cwtl
fcoms
adcl
aaa
mov
mov
add
inc
lods
jge
xor
ficomps
dec
je
test
pop
icebp
imul
pushl
push
pop
xchg
lret
mov
das
mov
cltd
inc
pop
rcll
add
sbb
pop
sahf
dec
or
ja
sbbb
lcall
adc
clc
push
pushf
push
xor
mov
adc
push
push
mov
in
lcall
pop
addr16
imul
fisubs
inc
pop
ds
mov
xchg
adc
sbb
jle
xor
fs
sbb
xchg
loopne
push
test
fnstsw
rcrb
xlat
sub
xchg
ret
sbb
pop
in
mov
lcall
xor
out
push
rcll
jmp
push
mov
inc
add
scas
xor
dec
mov
mov
rolb
pop
and
cmp
dec
inc
sbb
imul
jae
pop
hlt
mov
movsb
sub
out
dec
ret
arpl
testl
clc
cmpsb
lcall
rolb
mulb
dec
xor
jne
add
mov
loopne
insb
and
fldt
outsl
fwait
cli
lea
ss
inc
cmp
or
sbb
xor
push
outsb
rcll
pop
int
insl
iret
mov
push
push
stc
test
jmp
pop
in
sub
fucomi
mov
or
xor
lods
push
mov
cmc
cmp
adc
idivb
push
stos
xchg
jbe
shlb
clc
test
cmp
xor
shlb
adc
aas
push
adc
xor
aaa
mov
jge
and
leave
or
dec
xchg
ficomps
pop
shl
adc
outsl
cmpsb
push
and
adc
lret
cld
test
add
dec
xchg
in
push
lret
push
and
repnz
pop
jecxz
imul
inc
ret
fsubs
mov
mov
aad
mov
inc
fs
cwtl
adcl
mov
aaa
mov
inc
jle
inc
daa
out
cmp
and
xor
adc
in
cmp
add
lock
add
mov
lahf
cmp
push
pop
jp
cs
jo
inc
cmp
cmp
mov
sub
int
pop
sahf
xchg
pop
pop
int
sti
pop
add
cmp
jp
mov
inc
sub
bound
mov
mov
add
and
test
loop
mov
cmp
jnp
int3
pop
icebp
into
add
movsb
repnz
push
daa
sub
push
cwtl
lcall
jmp
add
mov
mov
push
flds
sub
sti
mov
stos
xchg
xchg
cmpsb
jae
dec
fcoml
out
jno
scas
shrl
xchg
repnz
lods
out
dec
ja
cmpsb
lock
push
lret
xchg
setle
xchg
xchg
rcrb
jne
pusha
std
cld
pop
pop
clc
cmp
enter
pop
adc
test
addr16
pop
loopne
lods
cmp
inc
pop
dec
dec
roll
js
shl
xor
or
cwtl
jo
cmp
xor
and
fincstp
lods
fwait
mov
xor
add
leave
into
push
or
xor
push
js
out
push
insl
pop
adc
movsb
adc
pop
cs
rorl
push
mov
ss
cli
ret
add
scas
int3
in
jns
add
loope
pop
add
dec
call
dec
pop
ss
out
dec
out
movsw
jecxz
mov
jmp
frstor
push
out
fisubrs
in
sub
mov
iret
lds
mov
sbb
mov
aad
adcb
inc
cwtl
dec
repz
jmp
or
clc
sbb
xor
adc
mov
or
xor
sub
dec
outsl
shll
xor
xchg
mov
scas
push
loope
mov
fisttpll
data16
cwtl
cmp
jae
adc
cltd
xchg
iret
mov
in
cmpsb
mov
cwtl
loopne
lds
add
push
iret
insl
cmp
fstpl
loopne
daa
jns
movsb
incl
rorl
inc
fs
xor
pushf
mov
loopne
icebp
ficoms
jbe
mov
loop
push
push
pop
sub
and
jmp
in
and
cmpsl
sbb
or
les
or
mov
xor
push
xor
and
pop
xorl
lock
cwtl
sbb
sbb
sub
mov
test
stc
xlat
lods
xchg
arpl
mov
loopne
and
push
or
mov
mov
xchg
push
popf
sarl
mov
cmp
adc
inc
and
clc
sub
gs
mov
or
mov
mov
mov
and
ja
icebp
sbb
call
sub
lods
mov
fsubl
cmpsl
shl
mov
jno
add
repnz
repz
leave
push
sbb
stos
clc
xchg
sub
lcall
mov
sbb
orl
jb
lods
xchg
lret
sub
pop
dec
jo
adc
mov
cmp
loop
mov
mov
imul
ret
mov
dec
adc
mov
push
insl
pop
xchg
xchg
cmp
fwait
xchg
scas
xor
jmp
pop
adc
jno
in
shlb
lret
insl
sbb
lret
mov
cmp
popa
int3
add
pop
sub
sub
xchg
add
out
lcall
shll
push
stc
dec
rorb
lahf
or
imul
test
insb
xchg
test
int3
cmpsb
fisttpll
insl
pop
mov
inc
mov
dec
cwtl
lret
sub
ljmp
mov
inc
fistl
add
fcmovne
ja
dec
in
and
nop
dec
cmpb
xchg
xor
bound
test
add
aas
inc
in
sub
dec
xchg
les
test
loopne
pop
sub
andl
cs
mov
cmp
xchg
cld
dec
cmp
cmpsl
popf
xchg
xchg
and
xchg
lea
xchg
movl
out
popf
es
pop
pushw
test
pop
shll
jo
fwait
adc
xor
xchg
pop
cs
mov
inc
sub
imul
add
xor
jns
adc
mov
arpl
xchg
adc
adc
pop
mov
sti
ret
ja
pusha
aas
adc
pushl
fdivs
sbb
enter
rcrl
dec
and
lret
mov
cmc
mov
dec
lahf
fiadds
xchg
dec
sub
cmp
pop
test
push
fwait
pop
push
jo
cmpsl
sbb
pop
lock
into
mov
out
mov
pop
aam
or
js
clc
cmp
mov
sub
mov
scas
xor
mov
cmp
sub
je
mov
pop
lea
push
aaa
stos
ljmp
popf
sti
add
insb
test
fwait
dec
jmp
cmp
pop
js
sub
arpl
adc
mov
test
jge
aaa
test
and
jp
out
inc
adc
jle
fs
mov
mov
xchg
outsb
inc
enter
icebp
cmpsb
lret
int3
push
rorl
push
sarl
xchg
cmpsb
mov
scas
dec
push
sti
push
fldpi
std
sbb
push
xor
cmp
dec
leave
xor
push
cmpsb
data16
dec
aad
das
movsl
pop
mov
xor
test
cld
inc
cmp
lods
test
sub
jbe
mov
push
test
mov
fdivl
pop
loop
aas
cwtl
cmp
cmp
dec
gs
cltd
stc
sbb
les
daa
pop
cmp
rolb
inc
and
shlb
loope
repz
dec
addb
loop
loop
pop
repnz
nop
fdivrl
shrl
out
dec
mov
jb
fnstenv
ss
push
call
out
insb
jae
cld
cmp
repnz
dec
push
lahf
roll
push
push
aam
push
mov
gs
stos
add
jns
jp
or
sbbb
movsb
sahf
mov
jnp
insb
sbb
lret
icebp
roll
ret
jecxz
mov
adc
shrl
or
movb
jg
mov
sub
int3
sub
push
movsb
lock
ljmp
test
cmp
jbe
lock
pop
cli
sub
dec
outsl
in
push
and
lahf
aad
lret
add
adc
sar
add
cmpsb
push
rolb
aas
push
xor
icebp
mov
dec
fdivrs
arpl
in
xor
pop
aad
stos
jle
cmp
mov
ljmp
add
adc
sti
scas
jno,pt
sub
in
aad
bnd
sbb
inc
push
aad
pushf
imul
xchg
es
arpl
jp
mov
dec
sub
outsb
dec
or
test
sub
dec
lcall
and
cmp
dec
cmp
inc
cmp
and
rcrb
xor
sbb
mov
stc
fbstp
adc
mov
jge
xchg
repnz
cmp
xor
pop
pop
dec
inc
push
mov
cmp
sbb
lret
mov
or
sahf
mov
mov
jno
add
iret
mov
icebp
or
out
rorb
push
and
fnsave
ljmp
or
in
arpl
fucomp
dec
sarl
and
loop
notb
cmc
loop
out
enter
bound
or
sub
sub
shl
sub
repnz
mov
faddl
f2xm1
jp
in
cs
push
push
pop
or
jbe
arpl
add
lret
in
test
sti
xchg
jecxz
inc
ja
or
push
int
js
rcl
cmp
addr16
aad
fs
xchg
add
mov
bound
push
adc
lahf
xchg
int
jp
ret
mov
and
sub
dec
fimull
int3
popa
xchg
loop
mov
mov
mov
and
inc
out
adc
adc
nop
sahf
dec
mov
insb
stos
lret
mov
push
lock
jmp
js
imul
xchg
push
sbb
scas
pop
xor
insb
pcmpeqw
int
test
int3
addb
dec
fs
mov
jge
out
push
sbb
adc
shr
add
movsl
mov
cmp
jb
sbb
into
push
and
loopne
sub
mov
mov
mov
xchg
and
mov
mov
pop
jmp
sub
sbb
fwait
sub
push
mov
cmp
mov
add
mov
neg
sub
les
loope
test
mov
jge
mov
mov
dec
imul
imul
out
scas
push
insb
lahf
jg
jp
cmp
mov
imul
mov
icebp
jne
fmul
mov
stc
dec
outsb
movl
adc
or
mov
add
mov
lds
mov
push
outsl
push
jecxz
add
push
and
jbe
in
push
pop
xchg
test
int3
test
and
cmp
mov
hlt
out
outsl
lahf
mov
mov
and
lahf
das
mov
mov
roll
mov
push
inc
mov
hlt
pop
in
lret
outsl
xchg
push
cltd
lods
xor
stc
cltd
aaa
sbb
adc
insb
popf
jl
inc
sti
jbe
adc
xchg
push
and
popa
pop
sbb
notb
testb
cwtl
push
push
popf
arpl
mov
ds
imul
jae
jae
add
movsb
mov
xchg
sub
inc
mov
pop
dec
lock
jno
xor
fwait
lds
mov
pop
and
lcall
xchg
lock
fnstcw
xor
enter
sbb
add
xchg
and
test
jbe
das
out
push
scas
jge
imul
sbb
sahf
or
xchg
mov
adc
mov
mov
addr16
inc
je
sub
or
jg
mov
cltd
in
xor
or
cmp
test
sbb
or
xchg
rcrb
scas
repz
loopne
ret
sub
sahf
fnsave
lretw
aam
xchg
and
repnz
stos
push
decb
in
dec
loope
aad
xchg
arpl
xor
fidivrl
and
jno
push
mov
inc
mov
jmp
mov
andl
add
sub
insb
mov
out
cmp
nop
subl
fmul
xlat
jl
cmpsb
push
ja
ljmp
test
jle
jb
mov
arpl
bound
xchg
aas
pop
mov
sbb
xor
adc
inc
jle
dec
fwait
loopne
xlat
jno
xor
in
scas
repnz
and
cmpl
insb
dec
roll
dec
sarl
hlt
inc
mov
inc
mov
cmp
dec
mov
out
mov
cltd
test
mov
movsl
stos
push
lldt
pop
sub
adc
push
daa
push
push
inc
xorb
pop
es
inc
mov
ss
push
jmp
das
mov
push
loope
gs
mov
inc
fbstp
adc
push
adc
or
mov
ss
mulb
pop
inc
ja
mov
sbb
xchg
jne
es
popf
xchg
and
out
cwtl
scas
push
sub
ret
dec
pushw
pusha
mov
dec
sub
lahf
adc
mov
sbb
int
and
mov
push
dec
xor
jp
fadds
mov
push
jo
jbe
inc
shl
xchg
jae
mov
cmpsb
out
inc
cmp
ret
and
dec
out
pop
inc
lds
mov
mov
sub
out
lret
push
lods
adc
xor
aaa
stos
or
cmp
push
add
rcll
pop
and
jp
cmp
cld
push
test
aas
pop
push
ror
sub
and
insb
sub
pop
mov
pushf
inc
push
cmp
cmp
outsl
or
sub
andl
in
idivb
ljmp
insl
fadds
sbb
push
loopne
imul
icebp
cmp
fs
iret
jne
gs
xor
xlat
xchg
adc
or
cmc
popa
inc
das
dec
mov
sbb
and
pushf
stos
xchg
xchg
seto
enter
movsb
push
jge
jno
nop
sub
mov
aad
call
aam
xchg
xchg
sub
dec
cli
sarb
insb
mov
push
xchg
adc
mov
push
inc
pop
addr16
addr16
data16
out
icebp
jb
inc
insl
lret
bound
cmp
fsubl
fdivr
mov
xchg
adc
out
sbb
cmp
pop
imul
jecxz
mov
mov
shl
jge
mov
dec
ficomps
fs
xchg
ja
jae
sbb
aam
rol
jae
pop
jbe
popa
pop
xor
and
testl
imul
jge
outsl
or
js
mov
push
pop
dec
adc
je
fnsave
daa
sub
popf
push
into
cmp
in
cmc
shlb
mov
fistl
push
shl
inc
mov
ret
movsl
dec
add
jle
pop
sub
fisttps
clc
out
sub
push
or
mov
movsb
xor
scas
pusha
mov
addl
outsl
adc
fldcw
insl
fldcw
cmp
inc
insl
sub
call
out
daa
mov
and
mov
jns
movsl
call
and
xchg
lret
push
pop
lods
push
imul
cmpsb
gs
add
mov
lret
daa
mov
popf
into
xchg
jno
jno
xor
cs
mov
mov
adc
push
inc
jmp
pop
inc
scas
ficoms
pop
faddl
loope
pop
out
mov
nop
xor
dec
mov
mov
cltd
mov
hlt
dec
mov
cmp
and
lret
sar
nop
lods
test
xchg
sbb
jl
sbb
mov
and
sub
movb
push
cli
ja
xchg
xor
mov
fildl
into
sbb
je
mov
loope
ljmp
fisubl
push
call
sti
cltd
jno
add
xor
lret
push
pop
pop
scas
xchg
inc
cwtl
add
push
pusha
or
icebp
daa
popf
sarb
or
pop
cmp
jns
aaa
add
pop
pop
cmp
call
mov
jl
ss
jno
xor
pop
fcmove
or
xor
call
popl
fiaddl
jae
outsl
pop
nop
and
sarw
flds
nop
xorl
in
fdivs
pop
ret
lret
pushf
xlat
hlt
pop
sub
lock
fwait
adc
xor
loopne
ss
mov
imul
insb
in
cmp
jg
shl
push
cmc
push
rorl
adc
dec
dec
dec
xchg
nop
rcrl
sbb
outsl
cmpxchg
icebp
pop
xchg
fiadds
and
mov
aam
cwtl
es
mov
or
inc
movsl
or
mov
les
sbb
push
push
lcall
push
cmpsb
dec
dec
out
scas
push
int
xchg
dec
cmp
cmp
sub
dec
out
xchg
add
fsubrl
and
lods
lods
pop
pusha
dec
adc
pop
pop
daa
and
leave
dec
and
jno
sbb
hlt
xlat
imul
mov
mov
icebp
cmpsl
jns
pop
jl
inc
pusha
aam
xchg
jl
lcall
push
xor
and
sbb
icebp
inc
cmpl
aaa
bound
pop
fstpt
test
ret
loop
je
jmp
scas
mov
sub
cmc
dec
pop
jmp
gs
pushf
es
jp
sub
sbb
scas
pop
cs
jns
mov
and
mov
scas
xlat
and
rcrb
sub
push
mov
int3
rclb
imull
clc
xchg
xor
sbb
scas
je
mov
aam
mov
sbb
mov
rcr
ss
movsb
sti
lahf
sbb
jb
pop
icebp
out
push
out
loop
ljmp
mov
pop
je
xchg
cmpsb
mov
jae
shlb
mov
xor
mov
fsubl
mov
mov
movsl
cmp
lret
xchg
dec
out
sbb
scas
xorb
or
shl
scas
jae
out
or
adc
inc
cmovbe
pop
jns
cmp
inc
cmp
jb
repz
scas
and
andl
xor
stos
mov
dec
out
and
enter
xchg
ja
push
cmp
xchg
pop
repz
lods
dec
notb
jo
sti
jg
test
pusha
rclb
jb
sub
out
adc
mov
out
outsl
jmp
into
and
mov
jno
shrb
mov
imul
adc
sbb
pop
test
xor
xlat
cmp
jp
pop
test
mov
fcmovnu
in
mov
pop
insl
repz
or
fwait
sub
mov
ss
cmp
dec
test
sub
cmp
test
mov
inc
popa
adc
imul
repnz
loopne
xchg
imull
popf
dec
inc
scas
arpl
and
icebp
cmpsl
enter
sub
incb
adc
icebp
mov
fdivl
aaa
adc
sub
lret
stos
adc
out
push
adc
jecxz
popa
rorl
or
sbb
add
push
lods
pop
notl
add
jne
fsts
clc
movsb
push
in
sahf
xor
mov
out
rorb
lcall
daa
cwtl
faddl
cmp
adc
icebp
cwtl
add
jmp
mov
cmp
outsl
or
addr16
lret
inc
lods
cltd
jl
and
mov
rcrl
jns
std
repz
dec
mov
mov
fwait
ret
xor
cmp
or
icebp
fisttpll
cmp
popf
adc
push
std
or
movsb
dec
bound
rcr
das
test
dec
test
lahf
clc
jb
xchg
test
pop
ja
dec
mov
xchg
or
negb
push
ret
leave
outsb
mov
pushf
jne
ljmp
lret
adc
movsb
cmp
dec
and
mov
fsubr
mov
xchg
mov
outsl
enter
cmp
mov
js
push
adc
sbbl
pop
loopne
stos
hlt
out
jb
xor
mov
shll
test
call
jno
or
in
mov
sbb
movsl
jecxz
or
subl
enter
pop
jle
jo
insb
mov
sbb
loop
xchg
fdivrp
push
pop
jne
int3
sub
test
jns
ss
xor
or
cmpsl
fdivs
mov
hlt
enter
sub
ret
jge
dec
ljmp
je
sub
aaa
and
mov
test
fwait
mov
hlt
shlb
mov
xlat
mov
enter
jne
je
adc
push
and
cwtl
daa
ss
mov
pop
xor
es
pop
cmp
lock
pusha
call
inc
loope
dec
in
or
leave
sub
pop
icebp
cltd
lret
shrb
and
stc
jo
test
push
insl
sbb
popf
test
scas
and
jg
push
lods
xchg
jl
loope
sahf
movsb
jae
rdmsr
and
xor
add
mov
hlt
inc
xor
mov
popa
dec
cmp
stos
jle
mov
dec
insl
addr16
jno
jecxz
add
and
fcmovbe
cmpsl
out
cmpsl
sbb
test
jbe
insb
jo
cmpsl
sbb
iret
lock
xchg
mov
xlat
cmp
and
cltd
idivb
add
lret
jns
fistpl
sub
pop
add
ss
mov
mov
aas
data16
mov
cmp
lock
ficomps
fimull
cs
mov
popa
dec
cmp
mov
movsl
pop
pop
insb
imul
arpl
ss
cmp
scas
shlb
pop
adc
add
jno
xchg
mov
push
xchg
adc
cmpsb
lds
jae
insl
dec
test
cld
enter
iret
int
jl
xchg
or
bound
idivb
adc
adc
adc
loopne
mov
xchg
je
push
xchg
jbe
mov
cmp
fwait
cltd
mov
notb
outsb
fsubs
and
mov
cmp
mov
inc
leave
lock
ret
mov
mov
out
in
in
push
fldt
movsl
pop
jne
cltd
xor
fstps
test
mov
ja
xor
sbb
les
roll
mov
cmpsl
xchg
aad
out
je
push
mov
sahf
movsl
scas
jb
cmp
sub
aam
mov
xor
arpl
scas
sub
push
es
or
jno
add
pop
dec
inc
aas
cli
xlat
xchg
dec
fisttpl
sub
popa
inc
call
xchg
pop
pop
jmp
mov
daa
jb
js
sbb
sub
inc
and
mov
mov
and
adc
or
xchg
dec
das
ja
jp
mov
mov
jge
or
inc
mov
test
push
fldcw
rorl
dec
pop
mov
adc
add
rcll
mov
cmp
int3
mov
out
out
add
rclb
mov
xchg
and
inc
mov
dec
ficompl
addr16
aam
ret
lcall
and
movsb
sub
mov
das
hlt
mov
jnp
call
sbb
movsl
xor
pop
popf
lret
xchg
push
dec
cli
stos
dec
arpl
fstpl
sbb
push
pop
cwtl
sbb
test
xchg
lock
cs
insl
xor
call
popf
dec
iret
mov
push
sub
pop
jb
inc
push
gs
push
out
cmp
test
push
nop
out
stc
test
sbb
sbb
mov
or
stos
mov
jecxz
fstpt
pop
stos
jbe
add
push
jb
out
pop
enter
push
dec
mov
cmp
or
dec
outsl
xor
popf
push
xchg
nop
jmp
stos
mov
repz
jns
mov
mov
dec
and
mov
rcrl
inc
shl
jg
and
cmp
div
in
les
lcall
push
dec
les
push
lods
adc
repnz
clc
divb
or
in
or
cmp
into
cmpsl
ds
sbbl
in
shlb
sub
imul
or
mov
out
cli
xchg
maxps
mov
xor
add
ds
pop
ror
or
aaa
loopne
movsl
xor
outsl
and
xchg
je
cmp
sub
inc
dec
mov
test
out
out
mov
mov
mov
stos
pop
test
push
adc
xor
icebp
cmc
jnp
nop
add
jne
or
popa
mov
js
cmp
mov
adc
xchg
arpl
ret
xor
fisubs
fwait
push
sub
xor
jns
xchg
es
enter
shll
sub
mov
and
mov
aas
dec
mov
xor
pop
iret
out
addr16
es
pop
push
xchg
push
sbb
pop
out
jmp
add
and
lock
stos
loopne
std
pop
movl
out
mov
mov
lcall
imul
xchg
imul
js
mov
sub
imul
jnp
push
rolb
mull
subb
ret
adc
add
notw
js
sbb
loopne
xchg
movsl
addr16
xor
call
dec
mov
fcompl
lea
jb
lcall
xchg
cmpsl
arpl
sbb
inc
cmp
shlb
hlt
int3
pop
popf
je
add
push
fwait
pop
pop
xlat
fcoms
sub
outsb
icebp
lahf
ja
push
test
push
inc
and
movsl
mov
sub
sub
add
xchg
sub
push
push
inc
pop
inc
pushf
mov
sarl
int
pushf
filds
or
or
sub
int3
mov
xor
sub
cmpsl
or
pop
sahf
lret
iret
popf
add
push
cmp
popf
jecxz
push
data16
ss
push
push
mov
add
mov
push
test
xchg
add
lret
dec
mov
dec
or
popf
aas
jno
add
imul
repnz
mov
lret
sti
shr
outsb
jge
jne
imul
sbb
aad
jge
inc
out
jns
push
adc
ljmp
sahf
pushf
hlt
pop
xor
out
adc
push
adc
int3
sbb
movsl
loope
cmp
int3
popa
push
icebp
pop
add
leave
add
push
or
cmp
ret
adc
data16
cmp
aad
cmc
add
das
insl
cmpsl
cmp
and
fcompl
add
jp
into
stos
out
sbb
imul
negb
rcll
dec
and
and
mov
nop
out
imul
pop
jne
sbb
mov
mov
scas
ret
js
adc
add
jo
rcr
xchg
jne
mov
cld
int
ficoml
int
popf
mov
adc
adc
mulb
jl
mull
mov
imul
nop
jns
aam
mov
push
aaa
mov
and
bnd
push
jnp
mov
popa
rcll
roll
mov
xchg
ss
lahf
imul
shlb
lds
add
dec
stos
aam
gs
sbb
inc
mov
jg
sti
pop
xchg
lods
cmpsl
pop
int3
jo
sub
mov
roll
push
pusha
lahf
sbb
xor
cmpsb
les
incb
nop
xchg
es
push
setl
fsubrs
flds
pop
dec
add
push
fisubs
das
dec
pop
les
inc
xor
arpl
hlt
inc
popa
inc
inc
aam
jmp
out
shrb
sub
outsl
inc
mov
lods
fmull
sahf
clc
sti
scas
pop
jecxz
and
or
popa
test
fbstp
fnsave
int
mov
clc
je
test
ljmp
xor
jnp
ret
scas
in
int3
add
xchg
sbb
aas
fs
lea
sub
xchg
or
pushf
mov
push
jmp
or
jne
push
adc
pop
lret
jns
out
pop
push
push
xor
fistl
push
and
cltd
jnp
jno
test
repnz
test
add
jb
fbstp
sub
daa
inc
shrl
mov
jl
inc
mov
and
pop
pop
add
push
adc
push
leave
out
push
jne
jg
add
fdivl
mov
test
cmc
jle
outsb
mov
lods
std
xchg
mov
cmpsb
push
clc
push
jge
ljmp
scas
inc
inc
xchg
sti
adc
mov
xchg
mov
aas
jb
mov
lods
int
lahf
and
push
mov
test
adc
xor
sbb
pop
push
dec
cmpsl
mov
sti
popf
jae
jl
pop
loop
sub
mov
fists
lret
xchg
fucomi
pop
popl
pop
mov
clc
lock
jle
call
inc
imul
ret
lods
sahf
divl
stos
and
insl
sub
fadds
xor
adc
mov
dec
lcall
das
mov
push
out
jg
or
inc
xchg
pop
fdivrs
jmp
pop
mov
fwait
mov
and
jge
subl
call
les
adcl
ja
mov
cmovnp
ret
sbb
iret
clts
xchg
ja
adc
add
pop
jbe
mov
aad
stc
rolb
cmc
ds
jl
and
sub
jg
inc
add
js
movsb
fistpll
push
pushf
je
test
sub
sub
stos
mov
xor
jmp
jne
mov
fbstp
add
inc
xchg
jno
sbbb
repnz
out
fsubrl
lods
out
jbe
aaa
fs
mov
mov
mov
push
ds
inc
sbb
or
rcl
repz
es
ret
scas
cmp
mov
jg
jae
sbb
sarb
mov
divl
js
and
into
inc
mov
sub
jo
xchg
add
jnp
movsb
adcl
xor
icebp
ja
mov
add
cmp
test
push
mov
outsl
xchg
jmp
xchg
fwait
xchg
mov
sbb
sbb
rep
inc
jno
dec
mov
js
in
jge
xor
cmp
inc
orl
call
lds
jo
mul
cld
xchg
xor
out
cltd
sub
mov
add
cmovns
jne
sbb
nop
test
xor
add
mov
mov
icebp
sbb
mov
push
rolb
cs
movsl
mov
adc
xchg
jmp
adc
or
cmpsl
mov
stos
pop
mov
in
divl
popf
aaa
das
cld
xor
loop
jp
ja
add
cmp
and
aaa
and
pop
cmpb
adc
xchg
pop
imul
pop
movsl
ja
dec
or
push
adc
mov
cmpsb
shrb
pushf
loope
lcall
mov
xor
mull
ror
sbb
push
daa
pop
mov
popa
jo
mov
mov
sub
xchg
test
adc
movsl
fstps
jg
mov
jmp
aam
push
mov
and
sbb
out
and
shr
incb
das
pop
mov
aaa
inc
jle
xor
addr16
in
cli
fwait
pop
test
xchg
and
xchg
cmp
enter
mov
sbb
movsb
and
mov
cmc
mov
roll
jae
mov
inc
test
xor
jmp
dec
pusha
das
sub
inc
inc
popa
call
aaa
mov
dec
addr16
jge
pop
xor
cld
push
mov
jns
test
roll
jle
cmp
push
lahf
icebp
lret
test
ret
out
xchg
or
sahf
in
icebp
test
lcall
movl
js
frstor
lock
xor
push
in
test
ljmp
or
xchg
std
and
mov
not
push
loope
sahf
sahf
mov
shrl
les
ret
loope
decb
cmp
jns
or
sub
icebp
lea
push
mov
pop
and
xchg
jmp
jb
jb
cmp
mov
loopne
sarl
sbb
sbb
push
inc
push
sbb
pop
out
sbb
fmull
push
arpl
xchg
jecxz
ret
mov
inc
dec
add
fwait
dec
mov
iret
data16
xchg
add
and
mov
mov
xchg
jnp
movsb
xchg
jnp
xor
cmp
xor
das
cld
push
dec
and
lea
inc
aaa
pminub
push
jae
mov
or
negl
push
pop
addr16
lcall
test
pop
pop
enter
and
repz
ss
sbb
cmc
pop
icebp
adc
sub
mov
gs
fnstenv
mov
add
loop
or
mov
ret
jb
sahf
nop
or
jg
cmp
cmc
sahf
pusha
inc
in
scas
cmp
fidivrl
aas
cmpsl
push
jno
jns
aad
fimuls
fisttpl
es
or
nop
cmp
xor
mov
xchg
and
repnz
into
or
push
out
mov
test
cmp
cmp
lahf
sub
dec
cmp
cli
mov
dec
inc
sub
pop
and
push
inc
and
xchg
cmp
rcrl
cmp
mov
mov
inc
repnz
clc
das
add
adc
or
js
es
inc
test
shlb
inc
das
xchg
fdivl
push
test
test
push
ss
js
inc
xor
sub
jns
inc
mov
mov
testl
mov
sbbl
arpl
scas
mov
filds
xlat
std
test
xchg
addr16
ja
sub
push
cwtl
jmp
pop
es
pop
lea
jne
and
add
ret
mov
mov
inc
fildl
push
dec
dec
test
lods
dec
sbb
inc
push
jns
mov
xchg
add
xor
mov
mov
lds
jae
into
mov
arpl
jl
sbb
imul
jp
xor
icebp
ljmp
loope
pop
jg
rorb
mov
rorb
mov
or
leave
popa
pop
mov
cmp
add
dec
mov
and
mov
scas
pop
mov
add
pop
dec
mov
lock
rorb
dec
pop
shlb
data16
lods
sbb
lea
xchg
push
add
xorb
pop
adc
push
xor
insb
negl
inc
mov
sarl
mov
ds
or
pop
dec
ljmp
mov
std
out
in
outsb
fiadds
or
mov
push
adc
movsb
clc
js
xchg
dec
fdivrl
shrl
mov
das
scas
push
fmuls
cmp
out
push
js
mov
int
les
sub
loop
in
lock
shll
daa
out
mov
or
imul
cmp
lods
ds
cmpsl
jge
push
mov
fcomps
or
test
mov
in
xlat
cmp
xor
push
push
add
ja
inc
xor
es
xlat
jo
loope
fnstsw
mov
cli
dec
subb
or
shrb
push
je
xchg
lcall
sub
sub
out
arpl
aad
stc
mov
ds
sahf
outsb
cs
leave
rol
adc
idivl
inc
add
mov
cld
add
and
movsl
dec
bnd
pop
in
mov
jp
dec
push
lock
imul
mov
xchg
xchg
mov
pop
cmpsb
aam
add
xor
push
enter
shrl
sub
cwtl
test
lret
push
adc
xchg
adc
inc
icebp
add
fs
push
add
xchg
stos
in
cmp
imul
rolb
adc
stc
scas
mov
cmpsl
aad
and
jnp
mov
xlat
jmp
popa
sbb
out
cli
mov
call
cmp
jge
jne
iret
jnp
adc
lods
loop
popa
mov
mov
aas
int
mov
dec
lret
xchg
jnp
sub
lods
mov
out
push
stos
bnd
cmpsb
ss
xsave
shl
dec
clc
dec
aam
jae
push
mov
or
push
movl
sub
test
mov
int
in
sbb
xor
xchg
loope
push
cwtl
jne
inc
mov
mov
stos
sbb
inc
inc
or
int3
xchg
mov
jno
xchg
test
jge
pop
dec
pop
int3
mov
or
or
and
mov
mov
fs
outsl
ret
outsl
fisubrs
cmpsb
testl
pop
sbb
sub
ret
push
cld
pop
push
dec
fwait
jg
jns
jl
aas
xor
xor
jge
adc
cmc
fdivs
inc
cmpsb
pop
int
test
push
cwtl
sbb
jg
gs
repnz
mov
popf
sbb
test
in
push
xor
in
icebp
ret
gs
out
imul
sbb
or
or
mov
inc
sbb
and
add
stos
test
dec
insb
loop
push
add
insl
insl
leave
dec
jmp
ljmp
cmp
aam
js
push
mov
sahf
mov
or
xchg
push
out
sti
int3
sbb
cmp
xlat
outsb
mov
add
nop
push
out
in
test
sti
ss
ja
jnp
jl
lods
adc
jbe
sbb
add
and
cmp
clc
rcll
scas
jg
mov
push
xor
into
leave
rcrl
data16
cmp
mov
mov
enter
inc
mov
push
mov
pusha
pop
scas
aaa
bnd
outsl
cmp
add
pop
scas
loop
xorl
mov
cwtl
inc
cmp
lret
xchg
std
fprem1
sub
sub
push
out
jmp
dec
add
and
xor
sub
lea
popa
std
mov
cmp
inc
mov
dec
inc
int
jb
inc
les
lret
hlt
adc
mov
rclb
add
pushf
sbb
add
mov
pop
scas
jns
mov
sub
pop
jecxz
test
jp
adc
cmc
lret
or
dec
jne
loope
mov
jnp
sti
pop
push
or
sub
and
test
pop
xor
add
es
sub
or
out
dec
sahf
cmp
xor
jno
mov
jecxz
cli
cs
scas
lods
inc
or
lock
pop
repnz
cmp
jae
cltd
mov
clc
mov
cmp
jmp
notb
addr16
and
divb
andb
inc
loop
arpl
jo
cmp
inc
pop
std
lcall
repz
movsb
xchg
aad
mov
sub
mov
sub
adcb
or
cli
push
lret
loop
push
cmpb
jne
clc
and
rorl
rorb
mov
aam
push
test
add
rcrb
mov
or
cmp
fcompl
cmp
inc
into
outsl
lods
aad
mov
arpl
mov
push
xchg
mov
and
or
add
bnd
sbb
cmp
adc
pop
stc
lock
add
cs
lret
cmp
in
push
adcb
lahf
jle
xchg
adc
jns
fwait
outsb
es
shlb
mov
inc
je
movsl
in
mov
xor
jno
mov
or
lahf
jl
test
jle
mov
add
adc
xchg
push
ljmp
dec
pushf
and
mov
and
outsw
call
lods
xor
and
lahf
faddl
mov
rcll
inc
sub
mov
push
jne
gs
jo
push
xchg
fdivr
pop
mov
movsl
fistps
jmp
mov
pop
insl
leave
stc
sti
leave
aaa
lock
add
push
psubq
pushf
sbb
or
push
jmp
scas
lcall
pushf
sub
dec
pop
sbb
add
inc
jb
subl
push
cmpsl
data16
mov
jge
jp
jno
mov
cmp
mov
push
stc
pop
pop
mov
ja
pop
jo
adc
dec
or
and
call
adc
add
or
or
cmpsl
in
adc
inc
inc
repz
insb
stc
iret
jecxz
xchg
inc
inc
mov
cltd
fwait
imul
dec
push
push
aas
push
rorb
xor
icebp
and
into
push
mov
fs
shrl
adc
pop
or
movsb
add
sub
cltd
imul
hlt
mov
out
adc
fsubrs
cltd
mull
jp
cmp
cmp
jle
gs
cmp
or
and
add
inc
jg
cmp
rcll
adc
mov
jns
in
sub
mov
rclb
mov
sbb
into
stc
andl
pushf
fldcw
add
dec
out
test
mov
cwtl
xor
cmc
arpl
pop
jmp
cmp
jmp
fs
negl
fstl
mov
mov
xor
jbe
adc
repnz
push
adc
ljmp
pop
dec
cmp
jns
mov
sbb
xchg
jbe
dec
add
pop
data16
mov
jne
fs
and
pusha
repnz
jb
sbb
mov
mov
lods
repz
mov
or
xchg
fsubl
or
and
int
cld
push
or
xchg
cmp
imul
mov
iret
sub
or
mov
cmp
loopne
mov
test
arpl
cld
ss
test
mov
ljmp
xor
lea
andl
cmpsl
cmp
inc
xlat
mov
stos
add
sti
stos
ljmp
sub
adcl
mov
int3
in
dec
xor
cmp
push
cltd
and
sub
sbbl
movsl
sub
push
cld
add
xchg
cltd
mov
xchg
cmc
out
ret
fwait
pop
cmp
imul
sti
aas
sbb
and
lock
mov
sbb
into
je
pop
pop
fwait
dec
lods
lds
std
fwait
pop
xor
xchg
and
mov
adc
stos
pop
ficoml
pop
jns
sbb
repz
sbbb
repz
dec
inc
aaa
out
mov
add
add
xor
add
adcb
lods
push
sbb
xchg
mov
jle
adc
xchg
rep
sub
imul
xchg
loopne
mov
rcrb
scas
pop
lahf
cs
mov
or
call
adc
imul
adc
fldt
xor
jmp
in
ret
movsb
xor
out
bound
decl
rcrl
cmp
pop
loopne
sti
ftst
int
mov
lods
fcomps
call
aad
out
adc
in
push
mov
out
jmp
mov
daa
or
sbb
cmp
mov
int3
insb
or
xchg
pop
in
subb
adc
push
imul
and
adc
cmp
addb
iret
adc
sbb
in
jbe
ljmp
repnz
add
xchg
insb
mov
lea
mov
mov
pop
out
inc
mov
mov
dec
dec
les
mov
and
jmp
mov
or
movsb
inc
xlat
dec
jmp
in
dec
jno
outsl
push
cli
icebp
mov
sub
scas
repnz
sti
loop
lret
push
lahf
inc
shrb
sub
push
loopne
xchg
mov
and
cmp
mov
inc
outsl
outsb
adc
or
mov
jnp
dec
sarb
enter
in
out
pusha
add
aam
es
adc
adc
test
jg
xchg
dec
lret
sub
xorb
adc
cmp
cmp
jp
and
pop
icebp
loope
inc
push
stc
fwait
xor
movsb
push
in
inc
mov
xchg
js
lock
jnp
std
xchg
or
or
fimuls
lret
shl
cwtl
lret
adc
daa
jg
iret
cmp
fadds
cwtl
mov
xor
jno
or
sub
inc
mov
jns
sbb
cmpsb
in
scas
cmc
mov
jmp
loopne
mov
and
sbb
sti
and
lods
inc
and
mov
or
or
push
adc
add
xchg
dec
add
cmp
pusha
mov
sti
or
xor
mov
test
xchg
leave
icebp
out
dec
xor
push
adc
mov
arpl
push
and
mov
mov
das
test
xchg
pop
jg
jle
xorb
jmp
xchg
xchg
xor
shll
aad
and
out
or
pop
sti
add
popf
data16
mov
je
je
subb
inc
enter
lcall
icebp
rcl
inc
adc
ljmp
mov
insb
scas
inc
hlt
push
sub
and
mov
xchg
mov
push
mov
jne
or
nop
cmp
inc
cmp
dec
jge
sub
xor
cmp
jno
aam
fdivrs
sbb
jbe
out
lret
jmp
jae
daa
xor
sub
decb
rolb
fxtract
dec
cmp
in
jg
jp
xorl
xor
insl
inc
jp
ret
cmp
test
cmp
pop
les
cmc
push
push
adc
dec
fdivrl
stos
nop
mov
ds
fdivs
mov
push
jge
cmp
out
sbb
push
in
mov
scas
insl
jno
push
xchg
cmpsb
jle
sub
or
sbb
xor
cmpsb
push
iret
rorl
or
sub
nop
add
inc
in
loop
sbb
pop
ja
dec
inc
popf
jbe
lcall
mov
mov
cmp
mov
add
push
mov
inc
cmp
fiaddl
mov
jae
stc
inc
clc
mov
iret
cmp
jo
sbb
or
push
dec
push
jnp
xchg
xor
test
xchg
push
jp
jb
stos
lods
int3
sub
lret
movsl
pop
fwait
mov
adc
cmp
cmp
leave
xor
mov
push
sahf
fld
repnz
bts
cmpl
adc
in
cmp
insb
add
and
stos
mov
sub
xchg
cmp
and
cld
jl
loope
roll
fdivl
sbbb
repz
cli
xor
or
adc
xlat
sbb
adc
cmp
sahf
fildll
sbb
imul
aad
inc
or
xchg
popf
cmp
push
inc
xor
jne
pusha
jae
dec
jb
adc
adc
loop
out
mov
out
pusha
jl
notb
ljmp
sbb
scas
jl
rcrb
xchg
repnz
repz
xor
push
iret
sub
xlat
bound
int3
or
inc
jnp
aad
movsb
pop
jmp
notb
mov
mov
lret
sub
out
cmpsb
adc
xor
stc
mov
pop
scas
pop
aas
inc
and
leave
lock
sub
cmp
insb
dec
fcom
test
jns
adc
push
test
jno
cld
popf
in
icebp
pop
dec
test
adc
cmp
cwtl
push
cli
jno
mov
adc
inc
pop
jp
outsl
fcmovne
push
pop
pop
mov
stc
aad
push
in
loop
cmp
mov
les
in
pop
js
fwait
lret
and
dec
or
pop
jl
imull
inc
andb
dec
ret
mov
test
std
rolb
push
adc
std
insb
mov
xor
mov
push
mov
sbb
jno
adc
scas
rcrl
mov
loop
sti
adc
stos
add
je
mov
flds
mov
xlat
cmp
addl
push
rclb
fsubr
lock
adc
cmp
bnd
mov
in
aaa
jle
mov
shlb
dec
popa
sahf
insl
or
dec
vphsubdq
pop
lods
movsl
out
into
xchg
dec
lahf
pop
pop
popf
jmp
and
push
and
mov
push
adc
sub
addr16
push
and
sbb
xchg
sbb
sub
push
cs
test
jb
and
jne
stos
sti
pop
inc
mov
or
inc
popf
movsb
test
pop
outsl
sub
xchg
rclb
imul
ja
mov
mov
cld
sbb
sub
inc
sub
adc
cmp
mov
nop
mov
icebp
mov
mov
mulb
xchg
sbb
loope
xchg
test
sbb
and
jecxz
stos
add
inc
lea
cmp
rorl
fwait
cwtl
push
stc
loope
icebp
mov
push
stos
ss
mov
cs
cmp
clc
add
outsb
js
mov
insb
mov
inc
js
lahf
les
shll
shll
scas
in
mov
cld
loope
or
push
dec
mov
sti
inc
aam
je
sub
bound
push
adc
lock
mov
jp
mov
jns
push
cmp
xchg
xchg
std
test
jnp
pop
push
pusha
fnstcw
mov
pop
sahf
cld
rcr
add
mov
hlt
add
pop
jg
inc
pop
pop
cmp
mov
xchg
ljmp
push
sahf
pop
or
sbb
ror
sbb
mov
sbbl
add
jg
push
mov
pop
cltd
idivb
iret
inc
mov
or
sbb
mov
mov
jns
and
shrb
xchg
fsub
mov
ja
je
xchg
xchg
mov
lods
and
rcrb
sbb
out
mov
insb
std
dec
dec
in
cmpsb
loope
les
shll
sub
bound
out
pop
out
add
das
lret
xchg
dec
push
fstps
sbb
rorb
imul
sub
inc
mov
std
ret
lret
add
xchg
xor
lahf
test
test
xor
xlat
push
or
xchg
lahf
lea
pop
out
mov
cwtl
push
pop
movsl
ret
or
pushf
fldpi
test
inc
cmovg
mov
nop
mov
dec
sbb
stc
in
mov
add
jnp
call
inc
mov
movsb
sbb
test
jo
movsl
jg
clc
and
cli
mov
sub
jecxz
inc
sub
orb
mov
xchg
jge
push
mov
xchg
pop
jne
add
mov
int3
ret
sbb
adc
aam
fmull
ds
and
add
pop
test
sub
and
lahf
jns
jbe
ss
or
mov
pop
lds
pop
subl
aam
pop
push
das
adc
fdivrs
push
cmp
cltd
mov
push
jbe
loopne
jecxz
adc
fnstsw
divb
fwait
and
and
int3
jl
sbb
pop
push
lcall
xchg
jmp
pusha
test
jge
cld
fcomps
filds
mov
testb
iret
das
ljmp
stc
popf
inc
movsb
mov
pop
inc
nop
inc
xchg
sbb
sub
xor
xlat
iret
pop
xchg
sbb
mov
mov
jbe
jbe
aaa
jmp
sub
xor
rorb
jle
and
jo
pop
loope
mov
rorb
getsec
push
movsl
mov
cmp
inc
sbb
adc
sub
ficoml
aad
ljmp
pop
test
xchg
sbb
mov
xor
dec
inc
xor
sar
mov
mov
js
add
aaa
mov
data16
mov
xor
pusha
dec
push
scas
add
dec
pop
adc
push
and
rcll
jb
mov
out
dec
dec
mov
movsw
imul
lods
lret
pop
pop
ljmp
gs
pushf
pop
shrl
xchg
mov
aad
out
sub
test
cwtl
mov
pop
and
aaa
cmp
outsb
lods
sti
jne
addl
and
pop
ror
jle
push
addr16
inc
jle
pop
push
mov
sub
pop
push
test
cld
mov
mov
mov
xchg
adcl
xchg
repnz
push
add
ret
inc
insl
cmpsl
movsl
pop
mov
mov
xor
cmpb
or
cmp
repz
arpl
bound
outsl
in
inc
xor
ficoml
push
add
rorl
add
movsl
xchg
jno
pop
push
add
or
push
dec
xchg
cld
push
mov
dec
jno
insl
les
cmp
adc
loope
add
lret
mov
push
inc
push
xor
sub
ficoms
pop
push
dec
lea
push
and
mov
jae
mov
inc
sbbb
inc
xor
pushl
add
lret
xchg
fistpll
jbe
lds
js
pop
xor
mov
and
das
ja
sub
xchg
aad
nop
addr16
jb
movsl
mov
popa
in
cs
or
lcall
and
popf
jl
mov
js
imul
dec
push
adc
push
cmp
loop
dec
sbb
das
xor
lods
fldl
iret
xor
add
movsl
bound
xchg
jmp
dec
iret
jbe
repnz
fwait
dec
push
imul
arpl
test
adc
nop
es
pushf
inc
push
push
dec
mov
push
hlt
inc
lods
mull
fistps
mov
push
lock
cmpsl
pop
ljmp
push
sub
jno
jp
xor
sahf
adc
arpl
push
lcall
in
xchg
add
push
sti
xchg
aaa
lock
xchg
fnsave
add
shll
sub
jno
insl
or
fidivl
mov
in
pop
loopne
fisubrs
aam
dec
jnp
cmp
lcall
add
and
in
mov
sbb
pop
fwait
shrl
ds
xchg
dec
xchg
movsl
sbb
loopne
cmp
push
aam
ret
fdivl
xchg
pop
pusha
scas
add
xchg
add
call
shll
mov
or
aaa
jp
sbb
in
daa
scas
arpl
popa
je
enter
mov
cmp
daa
shlb
es
test
or
inc
shr
in
insl
lods
notl
stos
daa
mov
subb
inc
movsb
rcrl
sub
rclb
push
ffreep
jns
push
movsl
mov
and
lds
cmpb
les
push
fstpt
mov
or
aam
cmp
ds
aas
adcb
gs
out
pushf
jg
adc
mov
dec
mov
mov
inc
mov
inc
add
and
xor
out
adc
dec
xchg
cmp
inc
fmull
iret
mov
mov
dec
mov
jmp
lahf
push
popa
pop
aad
les
push
nop
mov
push
ret
insb
pushf
mov
adc
adc
lds
jmp
sarb
mov
aaa
loopne
mov
xor
jno
repz
out
mov
int3
adc
mov
push
data16
or
jl
test
lds
es
xchg
pushf
mov
dec
mov
imul
leave
sar
test
fs
out
dec
dec
cli
xor
sahf
jnp
ret
pushf
sti
add
std
push
pop
sub
or
ja
scas
cwtl
mov
mov
pop
cld
xchg
data16
test
jecxz
inc
cltd
push
pop
int3
mov
das
xchg
sti
mov
add
jecxz
push
ljmp
pop
xchg
stos
jle
pop
shrb
in
inc
mov
cmp
repz
adc
mov
mov
clc
mov
mov
in
or
cmpsb
jno
jecxz
loope
sti
loope
lret
add
out
mov
inc
sbb
int
push
ja
clc
in
loop
out
adc
addl
imul
dec
pop
dec
push
jo
fwait
popa
mov
dec
lea
test
push
add
stc
mov
mov
iret
push
imul
pop
push
push
push
mov
dec
push
pop
ret
pop
xchg
or
sub
pop
cmp
xor
push
negb
cmp
stc
ficoml
in
push
push
mov
shrl
fidivrl
aas
jmp
dec
push
in
xchg
push
insl
pop
sbb
lret
mov
aas
shlb
jecxz
lds
sub
into
stos
jl
int
pop
je
mov
in
test
mov
aaa
adc
stos
int3
cmp
je
and
xor
fcoml
sahf
aad
dec
lds
mov
mov
mov
loope
ja
mov
js
test
ds
mov
xor
pop
ret
icebp
cmp
ja
in
stos
xchg
outsb
sbb
mov
push
loop
mov
out
sbb
sub
add
pop
pop
aad
cmp
cld
sbb
ret
lret
cmp
repnz
mov
enter
xor
inc
fsubrl
loop
mov
nop
pop
sahf
mov
shlb
dec
movsb
add
jno
mov
sbb
js
stos
add
pusha
fwait
aas
cs
lods
jg
icebp
in
mov
xor
lods
adc
inc
pop
clc
cmpsl
mov
lods
sahf
addb
xchg
cwtl
sbb
push
pop
pusha
push
sbb
pop
mov
je
add
xor
fstpl
sbbb
xchg
stos
mov
jb
jbe
push
and
aam
stos
push
cwtl
push
sub
or
pop
popa
out
lds
jg
jmp
cmpsb
cmp
cmp
arpl
add
call
pop
dec
shlb
xchg
push
sbb
xor
add
jnp
outsl
mov
mov
cmc
add
or
mov
mov
dec
mov
pop
js
in
xchg
cmc
rol
iret
jle
out
jge
test
pop
jno
xor
and
cmp
shr
rolb
shrb
xor
lock
fbstp
pop
adc
mov
cmpsb
fwait
xor
fisubrs
dec
mov
jge
jno
nop
daa
mov
and
gs
and
mov
jbe
jb
dec
cmpsl
addr16
mov
or
int
add
dec
pop
pop
xor
aas
lcall
xor
inc
in
lods
xor
inc
push
stc
jbe
push
int
icebp
test
pop
and
das
inc
fisttps
mov
xlat
push
into
lods
fnsave
xchg
xlat
dec
jmp
push
cmp
add
xchg
or
adc
fsubl
sahf
xor
push
pop
out
add
mov
xchg
in
add
xorl
int3
xchg
adcl
mov
out
in
adc
xchg
pop
stos
mov
sbbb
push
and
mov
mov
and
dec
fnsave
push
mov
out
movsl
push
xchg
mov
cwtl
add
pop
xchg
inc
scas
inc
lcall
das
mov
xchg
dec
test
inc
sub
pop
repz
pop
xchg
cmpl
jecxz
enter
sub
push
jmp
cmovno
leave
lret
add
or
mov
call
fucomip
adc
pop
mov
jecxz
mov
sbb
cmpsb
ljmp
lods
mov
mov
insl
out
imull
push
shrb
movsb
cltd
jo
ss
push
dec
in
mov
or
and
mov
xor
jecxz
mov
rcrb
andb
loope
xchg
jne
es
jae
cmp
xchg
mov
test
out
sub
pop
stc
rcl
sbb
lea
mov
mov
pop
dec
jmp
outsb
test
mov
lret
cmpsb
adc
nop
xchg
xor
movsl
xchg
mov
insl
add
mov
jnp
jle
test
arpl
xchg
pushf
out
arpl
stc
mov
repnz
mov
and
leave
push
inc
adc
xor
pop
sti
cmp
leave
repz
adc
push
xchg
cld
xchg
dec
lret
xor
push
sub
push
repz
fistl
int
dec
jle
les
ret
add
imul
out
mov
stc
outsl
add
cli
ljmp
es
hlt
adc
sarl
jmp
xor
int
stos
adc
add
cmp
sub
mov
test
xchg
in
repnz
xchg
adc
jno
dec
dec
sti
xchg
jge
test
out
mov
jmp
mov
in
cwtl
enter
add
dec
inc
lods
or
std
fsubrp
imul
mov
pop
xlat
ret
adc
fs
cmpb
inc
pop
xor
xchg
outsb
icebp
and
test
pop
testl
lcall
pop
add
call
fucomi
out
sub
jecxz
xchg
xor
lahf
stos
mov
sub
aam
pop
push
add
mov
mov
mov
jb
movsl
mov
outsb
pop
sbb
pop
aam
xlat
dec
pop
mov
pop
loopne
insl
enter
xor
pop
fstpl
outsl
jnp
inc
push
push
popa
adc
adc
mov
mov
adc
pop
and
xlat
xchg
dec
push
cs
bound
into
ret
inc
aam
subl
add
popf
lea
and
sti
jns
pop
push
pushf
pop
xchg
shll
mov
jge
xor
dec
lahf
pushf
push
outsl
inc
push
ljmp
mov
push
fldl
imull
scas
add
add
sub
mov
mov
xchg
add
andl
ficompl
and
and
mov
inc
test
out
movsb
ljmp
fimull
gs
or
inc
pop
jb
mov
sub
mov
dec
mov
nop
ficoms
push
pop
push
inc
or
cltd
pop
adcb
xchg
cmp
cwtl
mov
mov
and
add
add
pop
fists
test
pop
xchg
and
std
xor
dec
test
inc
ffree
mov
dec
jbe
daa
xchg
cld
aad
gs
add
imul
stos
inc
hlt
in
cld
mov
inc
adc
scas
mov
jb
xchg
xchg
sbb
je
in
inc
gs
aad
js
out
lods
push
out
stos
jb
test
mov
cmp
in
nop
les
pop
xchg
in
or
mov
je
dec
add
test
cmc
and
dec
insl
dec
adc
jge
test
mov
aad
loop
push
mov
adc
or
lods
inc
inc
rcrb
inc
cld
shlb
mov
popa
push
dec
adc
mov
push
adc
xchg
fisubl
inc
dec
fs
sbb
pop
cmp
mov
insl
push
mov
sbb
ljmp
ret
into
loopne
push
outsb
ja
mov
lret
mov
jmp
es
nop
inc
packsswb
inc
and
cmp
pop
cmc
fisttpl
add
push
outsl
dec
mov
sub
push
outsb
mov
test
push
mov
inc
or
add
ret
lods
xchg
cli
inc
mov
mov
pop
push
in
stos
pop
adc
pusha
jnp
shll
insl
loope
stc
rorl
push
out
mov
imul
and
push
hlt
and
mov
inc
or
mov
push
xchg
arpl
xchg
aaa
mov
ljmp
leave
decl
cmp
or
orl
repnz
or
imul
scas
adc
jecxz
in
insl
sarl
lcall
cli
cmp
xor
xor
mov
arpl
clc
jnp
cmp
jecxz
push
add
gs
outsb
jp
sbb
cli
lahf
lods
cmc
xor
jns
and
push
mov
ljmp
pop
xchg
loopne
mov
push
add
mov
pop
andb
mov
push
and
mov
test
call
jae
jae
sbb
rolb
or
xor
xlat
out
push
repz
out
pop
imul
or
pop
lds
ljmp
sbb
sub
test
xor
aaa
in
hlt
jecxz
jne
outsb
jmp
lcall
jmp
jb
repnz
insb
or
inc
call
movsl
sbbl
rcrl
mov
scas
enter
pop
dec
mov
cmp
das
mov
dec
and
leave
leave
pop
inc
xor
stos
xchg
xor
enter
roll
xchg
sub
cmp
out
ret
iret
cmpsl
adc
jne
and
dec
int3
ret
adc
iret
jbe
jnp
andl
nop
dec
jo
add
cmc
inc
divl
pop
stc
test
pop
push
outsb
cmp
push
or
out
xchg
out
ds
mov
cmpsl
jbe
mov
adc
xchg
pop
cmpsl
insb
les
adc
sub
mov
hlt
sbb
pop
sub
mov
out
popa
movsb
inc
lock
pop
jae
out
aaa
test
dec
inc
pushf
int
sub
ja
or
pop
mov
jl
popa
inc
std
lahf
mov
dec
mov
inc
in
test
mov
cli
xor
fcompl
jo
sub
mov
mov
sbb
in
fs
adc
xor
dec
rolb
jecxz
jp
cmp
mov
pop
sbb
jbe
dec
inc
outsl
inc
and
dec
sbb
rorb
mov
jg
add
arpl
jno
xbegin
fadd
xchg
rcr
adc
xchg
jo
inc
std
fdivr
push
lcall
popf
jae
mov
mov
mov
bound
add
cmp
push
outsl
adc
sti
and
sbb
pop
push
andl
push
xor
add
cmp
test
dec
cmp
push
adc
jg
jg
rorl
in
int3
pop
pop
loop
enter
inc
scas
enter
addr16
scas
fisttps
or
pop
inc
add
and
sub
xchg
arpl
popa
xlat
xchg
inc
and
inc
add
sub
mov
sub
jmp
jnp
pop
out
mov
xor
popf
fbld
jno
dec
xchg
movsb
outsb
movsl
jecxz
and
cmp
outsb
setle
pushf
add
adc
mov
mov
sti
cmp
dec
fadd
out
cmp
push
mov
rcrl
adc
imul
lds
pop
cmp
icebp
lret
xor
mov
in
xor
sti
add
mov
xor
mov
add
pushf
push
mov
cmp
bound
xchg
fwait
mov
pop
in
inc
xor
xchg
loopne
xor
scas
mov
cmc
mov
outsl
insl
push
add
mov
xor
xor
jb
imull
aad
xchg
popa
cmpsl
insb
das
roll
scas
sbb
xchg
xchg
sub
xchg
mov
in
pop
mov
ja
push
comiss
insl
sahf
push
pop
adc
mov
loop
xor
and
faddl
movsl
into
insl
lret
loopne
clc
pop
lcall
push
dec
pop
test
gs
fxch
lcall
mov
and
mov
mov
nop
divb
inc
mov
iret
fisttpl
popf
cmp
mov
ljmp
std
jmp
jns
mov
inc
push
fimull
or
mov
mov
shl
scas
dec
pop
loopne
jp
inc
xchg
or
push
sub
sbb
inc
dec
mov
mov
push
or
xchg
rol
dec
jl
inc
sbb
std
inc
mov
out
je
dec
roll
outsb
pop
jno
inc
into
insl
fiaddl
cli
cmp
or
xlat
mov
popf
sub
js
sbb
push
sub
lods
xchg
cli
int3
and
setne
cmc
add
cmp
mov
pop
fsubs
es
dec
sbb
mov
sub
dec
mov
or
enter
bound
jb
mov
fists
ret
cmp
pop
push
dec
xchg
lods
mov
cwtl
jmp
mov
das
roll
sub
or
or
jecxz
loope
cwtl
ret
jg
push
out
pop
and
jnp
arpl
js
dec
adc
sbb
push
int
mov
adc
xchg
cmpsb
out
scas
out
mov
into
dec
fcmovb
jo
movb
sub
jo
jns
pop
into
push
xlat
push
int3
aaa
jno
out
mov
fadds
adcl
and
jb
test
mov
add
or
aam
xchg
inc
cmpsl
lea
push
sbb
lods
push
jne
inc
daa
mov
lcall
out
shlb
andb
xor
adc
or
enter
adc
or
mov
jb
clc
out
dec
jae
add
loope
pop
imul
mov
mov
aas
jo
dec
adc
xor
pop
push
push
or
add
pop
lods
aaa
test
pop
lret
sti
or
sub
adcl
sbb
xchg
cmp
cmpsb
nop
sub
cs
in
pop
lret
sbb
or
sahf
mov
sub
js
push
mov
gs
imul
sahf
aaa
insl
call
pop
sub
imul
jno
pop
pop
cwtl
shlb
in
mov
sbb
enter
mov
jbe
cld
xor
xchg
rorb
mov
dec
dec
inc
pop
or
in
testl
sub
iret
mov
pop
rcl
add
mov
lret
addl
inc
imul
orb
loop
jbe
repz
les
jge
or
cld
lret
in
and
add
xchg
add
rclb
jne
jp
jle
icebp
jg
push
clc
aaa
dec
out
jnp
jo
add
push
fildl
add
sub
adc
jp
add
arpl
es
hlt
sbb
in
pop
sar
insl
inc
movsb
fs
int3
out
gs
mov
hlt
rcl
inc
testb
push
cmp
pop
loop
xor
or
movsb
mov
lret
push
in
pop
int
hlt
test
sbb
ficoms
call
jbe
sub
jle
mov
mov
sahf
pop
xor
out
pop
adc
dec
jp
dec
rcl
push
jle
sarl
call
lods
jns
lret
pop
sub
cmpsl
push
xchg
cmpb
sub
incb
or
mov
js
or
rorb
test
cmp
dec
insl
les
push
fcmovne
or
push
or
data16
sbb
rcll
nop
fmuls
fwait
adc
loope
cmc
pop
push
mov
ficompl
mov
push
sub
cmp
js
pop
or
xor
les
cmp
imul
rol
cmp
jmp
mov
lcall
out
xchg
in
fists
jns
sub
mov
in
or
adcb
fsts
mov
sub
add
inc
aas
cmc
pop
pop
push
adc
popa
push
out
stos
lds
andb
std
jns
push
xchg
xor
out
inc
imul
ljmp
aas
gs
jbe
xchg
movsl
mov
out
ds
lahf
jno
fwait
int
lock
mov
cli
outsl
adc
adc
adc
push
cmp
lret
inc
das
outsl
mov
jecxz
shl
hlt
loopne
imul
scas
mov
subl
cmpsb
mov
std
loopne
jne
add
data16
xor
ss
cli
jp
push
cmp
jecxz
hlt
mov
xor
dec
lds
xorb
in
mov
es
popl
inc
les
imul
add
fwait
shr
jp
mov
divl
mov
mov
fs
loop
stos
mov
rorl
jbe
mov
mov
inc
sahf
in
jb
push
test
jmp
push
flds
aaa
int3
push
cmp
cmp
shlb
xchg
or
pusha
loopne
out
adc
cmc
mov
xchg
add
dec
pushf
jmp
jg
mov
sbb
pop
pop
jbe
lret
xor
dec
dec
popa
sahf
mov
pusha
adcl
pop
jne
mov
jl
add
add
scas
lds
jle
insl
pop
pop
mov
subb
xor
pop
rorb
dec
xor
movsb
test
test
or
stos
fldt
xchg
lahf
and
sar
scas
pop
scas
mov
push
push
divl
pushf
adcl
into
xor
fsts
jnp
movsb
xchg
push
movsb
aad
or
push
fstpl
jmp
jp
mov
fsubs
fcmovu
sbb
ds
add
imul
mov
dec
fstpl
dec
sub
int
sbb
sub
push
mov
test
lahf
pop
xchg
loop
cmc
adc
hlt
subb
mov
addr16
mov
push
jne
push
sarb
and
add
push
scas
push
push
mulb
aaa
leave
ljmp
inc
outsb
sarb
xchg
push
test
inc
push
mov
inc
fiadds
pop
jle
cmp
pop
lods
cmp
push
xchg
aas
iret
cltd
ret
in
shld
lahf
mov
pop
sub
loope
je
lock
test
cmp
call
mov
mov
or
clc
je
add
mov
xchg
sbb
dec
xor
enter
cli
test
js
xor
jle
popa
xor
roll
mov
bsr
cmc
jne
arpl
fwait
aam
dec
loop
dec
jbe
push
sbb
imul
or
xor
shr
sarb
jg
out
lea
push
daa
enter
sarl
cmpsb
mov
hlt
mov
jge
mov
cltd
and
gs
inc
sbb
pusha
ja
dec
jne
cmc
cmp
cwtl
daa
and
or
int
mov
push
notb
and
insl
pop
push
add
rolb
add
dec
enter
mov
cmc
adcl
movsl
hlt
mov
popa
out
pushf
jge
mov
clc
add
inc
pop
add
push
dec
xchg
xchg
or
adc
dec
ljmp
dec
mov
test
add
out
push
pop
xchg
xchg
mov
adc
lods
mov
inc
popa
shll
add
pushf
clc
cltd
aas
xor
or
push
jg
and
mov
aam
pop
call
push
or
xchg
push
in
das
shr
mov
cltd
sub
mov
test
mov
lods
lret
adc
add
mov
mov
xchg
cmc
sub
out
push
jmp
xor
add
xchg
out
out
jns
push
test
movsl
sbb
imul
sub
aad
or
repnz
lods
insl
insl
mov
pop
mov
push
das
dec
rolb
ss
mov
and
loop
test
into
in
dec
or
and
ficoms
or
inc
inc
push
dec
movsl
into
sbb
stc
xchg
repz
dec
cmc
sbb
ds
test
jo
ret
add
sbbl
and
pop
fisubl
push
dec
cmpsb
movsl
and
and
lret
ret
lock
inc
add
popa
les
sbb
jo
mov
into
and
push
popa
leave
and
xchg
int3
mov
mov
lods
addr16
dec
mov
repz
dec
pop
pop
sbb
lods
jmp
jge
je
pop
rclb
mov
int
lock
xor
cmp
mov
cmpsl
xchg
xor
push
out
mov
or
xchg
imul
sub
mov
xchg
jb
jmp
push
adc
lods
loop
popa
xor
inc
iret
stos
hlt
ljmp
jbe
jg
scas
xlat
faddl
push
fldcw
js
mov
movsb
adc
inc
call
adcb
add
out
rcr
int3
xchg
int
sti
push
dec
ror
jno
mov
mov
test
add
xchg
aas
cmpsb
jo
daa
lret
cltd
mov
jp
stc
loop
outsl
mov
in
xor
xlat
cmp
inc
jg
aad
inc
or
call
pop
pushf
outsb
add
jl
nop
mov
nop
nop
pop
stos
mov
loopne
mov
ja
cmp
cmp
mov
faddl
std
sub
jns
add
jge
mov
call
aad
mov
sbb
dec
cwtl
js
ret
call
push
pusha
inc
mov
xor
inc
and
stos
cmp
adc
imul
or
stos
add
push
leave
bound
cld
push
lret
dec
sub
lea
ss
cmpsl
mov
ud0
mov
mov
idivl
dec
or
pop
mov
imul
jbe
and
push
fld
loopne
mov
xlat
push
int3
inc
push
lret
imul
pop
outsl
jp
inc
xor
xlat
pop
pop
sbb
or
repnz
sbb
jnp
shlb
imul
jge
nop
push
mov
jb
cmp
in
xor
out
push
cmp
mov
je
pop
in
push
add
xchg
cmp
inc
daa
enter
push
adc
mov
test
or
xor
loop
cmp
pcmpgtb
mov
push
aaa
out
cld
and
ja
xchg
push
jnp
mov
mov
std
lcall
and
inc
sahf
cmp
out
leave
and
push
inc
or
das
outsl
cmpsb
mov
lea
xor
cmpsl
cmc
stos
out
enter
or
cmp
lret
pop
in
add
fstps
xchg
icebp
sub
sahf
jno
test
pop
repnz
cwtl
pop
sbb
out
fsubrs
addl
add
sub
inc
add
mov
push
push
cmp
xlat
sbb
push
insb
or
mov
out
outsb
call
iret
mov
xchg
xchg
ja
shll
sbb
mov
jae
jmp
out
pop
pop
icebp
jo
aad
sbb
fsts
mov
mov
outsl
or
pop
not
mov
decb
pop
sbb
js
je
mov
lods
ja
movsb
stos
add
xchg
pop
lds
out
xor
mov
inc
ds
cmpsb
jmp
push
lds
cmp
mov
push
in
xchg
dec
or
adc
inc
andb
xor
and
mov
sbb
inc
dec
jbe
into
xchg
push
xchg
inc
or
or
fwait
push
jns
xlat
cmp
jns
cmovne
xlat
aas
sbb
push
in
push
sahf
loopne
inc
fcmove
lock
xor
es
cmpb
push
or
mov
mov
xor
out
sub
jne
fnstcw
nop
addb
inc
imul
cmp
outsl
dec
inc
mov
jge
cltd
pop
out
or
mov
lock
lock
sbb
rorb
enter
lahf
out
cli
add
push
in
in
jns
lods
dec
in
jp
cmpsl
mov
int3
ret
sub
inc
in
sub
ret
pop
out
and
mov
insl
lcall
xor
jae
push
sbb
lods
sbb
inc
rorb
and
jno
out
ret
mov
scas
call
movsl
cmp
push
cmp
lods
insl
inc
cmp
pop
dec
and
sahf
test
cs
shrl
mov
jae
ret
gs
repnz
or
sub
sbb
je
pop
pop
out
js
mov
int
roll
imul
fistpll
sub
cld
insb
push
mov
mov
ret
aaa
sbbl
cmpsl
int3
or
xchg
adc
ss
sub
push
pop
cmpsb
fldenv
or
or
in
xor
jle
sahf
or
daa
out
push
out
shll
fldt
adc
add
not
negb
test
sbb
jl
mov
jecxz
inc
and
lock
iret
jmp
adcl
add
das
clc
jg
sahf
fmull
out
jl
or
cld
or
mov
ret
out
mov
and
pusha
cmp
push
or
xor
jge
adc
xor
sahf
jle
pushf
mov
jnp
jg
mov
sbb
xor
daa
lret
jbe
xchg
das
push
mov
jmp
sbb
test
out
mov
mov
loop
aas
xchg
gs
pop
mov
push
pop
or
dec
cmp
insl
pop
out
pop
js
adc
bound
add
sbb
fdivrs
popa
out
bound
popf
and
push
pop
jno
mov
fwait
sbb
fiaddl
shll
fstl
inc
sbb
imul
mov
dec
out
mov
adc
or
jne
cmpsb
addr16
frstor
dec
mov
xchg
scas
aam
jecxz
push
ret
sbb
cmpl
push
scas
pop
ss
ret
cmp
in
jae
scas
pusha
push
pop
call
pop
lock
and
ret
mov
fidivl
icebp
xor
rcl
xor
icebp
loope
imul
pop
mov
sub
loop
xchg
mov
mov
stos
incl
dec
sbb
scas
scas
sbb
cmpl
jae
addr16
nop
movsl
enter
pushf
std
jno
mov
aam
push
xor
or
sti
insl
dec
mov
imul
sbb
push
mov
xlat
push
int
dec
cmpsb
mov
mov
push
xchg
es
adc
js
xor
mov
xor
jns
jno
call
leave
cmp
insb
inc
or
jne
mov
sbb
std
clc
dec
mov
arpl
pop
pop
cld
or
mov
sbbb
les
mov
jne
paddsw
sti
sti
out
in
push
clc
and
pop
out
insb
js
ljmp
loop
clc
xorl
das
outsl
pop
stos
dec
add
aam
sub
jo
fidivrs
rcr
mov
ficompl
inc
sub
xorb
cmp
imul
mov
pop
adc
fsubr
andb
mov
xchg
out
jle
sub
cltd
fldcw
pop
sub
mov
pavgw
cmp
adc
xchg
xchg
xor
adc
aad
gs
mov
mov
icebp
test
test
daa
or
test
and
jg
adc
mov
or
stos
andl
xor
mov
ret
in
jns
sub
das
adc
scas
cwtl
jns
arpl
pop
arpl
ja
dec
pusha
mov
jle
in
or
mov
cli
sahf
jg
add
xchg
adcb
fildll
je
cld
inc
sbb
pop
cmpl
add
int
xchg
rcll
insl
lods
jecxz
jo
test
inc
xchg
subb
scas
xor
mov
das
jecxz
out
xchg
adc
test
shlb
fiadds
pop
lret
stos
push
lret
jns
xchg
xor
mov
insb
lds
mov
add
or
inc
pushl
or
sbbl
sub
xor
mov
stos
les
loop
or
push
sbbl
jge
sub
mov
or
shll
packuswb
mov
int
mov
rcrl
lock
pop
sub
insb
mov
cmp
lds
les
mov
addr16
fldl
mov
inc
mov
adc
jns
sub
mov
push
ss
add
popa
and
call
loope
aad
data16
mov
clc
fs
pop
push
and
loopne
push
and
mov
pop
lods
loop
jnp
inc
ja
insb
pop
lcall
popa
adc
test
pop
mov
adc
es
into
bound
mov
cs
inc
aas
xor
dec
das
loope
filds
inc
outsb
fs
je
out
mov
push
cmpsb
xchg
and
test
mov
xchg
cmp
pusha
cmp
adc
push
xchg
negb
jecxz
jl
pushf
inc
mov
xchg
std
int
icebp
js
scas
loopne
xchg
xor
les
cmp
repnz
sbb
push
cmp
int3
scas
mov
hlt
adc
or
sub
jnp
jecxz
lods
cmp
push
push
mov
out
lods
scas
pushf
sub
push
mov
add
mov
enter
cwtl
fistpl
mov
xorl
test
cmp
dec
movsl
jg
adc
daa
shl
lods
dec
repnz
and
mov
out
mov
jge
jl
mov
js
negl
roll
enter
xchg
push
lahf
bound
xchg
add
popf
dec
add
push
int3
adc
lds
cmp
in
ljmp
adc
fbstp
jl
add
pop
push
test
mov
xor
int
pop
arpl
jnp
adc
fwait
adc
fldt
xchg
hlt
xor
jo
out
sbb
mov
jl
add
into
jecxz
loope
insl
dec
pop
mov
iret
cmp
and
inc
cmp
jno
loopne
dec
sub
cmpsb
sub
ficoml
mov
mov
int
jmp
inc
stc
inc
and
push
dec
iret
lods
fdivl
rcrb
imul
sub
leave
repnz
cmp
xor
dec
scas
sti
test
inc
push
dec
dec
in
mov
jb
das
scas
js
mulb
and
mov
mov
sbb
pop
jno
sahf
jecxz
lea
xchg
fcompl
push
dec
cmp
xlat
sub
fs
loopne
push
popa
jo
xchg
or
ja
cmp
mov
clc
outsb
andl
lahf
pop
fyl2x
scas
jno
popf
imul
jne
sub
ja
sbb
push
mov
jne
fs
cmp
arpl
jmp
hlt
xchg
cpuid
cmp
dec
incb
stc
shrb
cmp
loope
in
call
xchg
xor
push
sbb
or
addl
stc
add
js
inc
pop
xchg
scas
adc
fwait
push
add
enter
mov
jl
cmp
outsb
ljmp
jmp
es
loope
xor
and
push
mov
dec
dec
and
mov
test
dec
out
xchg
push
push
sbb
and
fs
jg
xchg
rcr
pop
sbb
scas
add
repnz
aas
push
adc
gs
int
stos
mov
sti
ljmp
ljmp
inc
adc
daa
xchg
arpl
imul
jne
add
shrb
cmp
mov
cmpsl
and
incb
js
mov
xchg
outsl
mov
xchg
xchg
insl
xchg
imul
repz
mov
ljmp
xchg
pop
cmp
mov
mov
xchg
xor
ss
jbe
mov
ret
mov
leave
cmp
outsl
fldl2t
xchg
xor
inc
adcb
inc
mov
pushf
xor
and
inc
shl
add
and
adc
sbb
clc
lock
fwait
adc
xchg
stos
mov
mov
ss
xor
in
fdiv
jg
lods
cli
popa
jge
mov
pop
cli
inc
cld
or
mov
daa
decb
ljmp
aas
xor
loopne
aaa
in
dec
xchg
cmp
add
mov
add
inc
dec
or
lcall
stos
in
mov
sbb
dec
xchg
imul
or
dec
sbb
frstor
or
jno
iret
cwtl
push
jne
lahf
clc
nop
mov
jbe
aam
outsb
xlat
push
add
cld
fs
add
es
mov
mov
clc
pusha
xor
arpl
xlat
iret
test
jbe
push
stos
lods
jb
out
push
add
pop
push
jo
push
out
and
mov
mov
cli
pushf
movsl
les
mov
and
sbb
fldt
cld
cmp
pop
inc
push
adc
mov
pop
inc
orb
mov
adc
test
add
mov
fsubs
pop
adc
pop
shrb
mov
sahf
mov
push
add
mov
pop
test
xchg
shrl
insb
jmp
mov
inc
mov
in
fcompl
sbb
gs
sbb
in
mov
roll
popa
xor
movsl
cmc
mov
cli
mov
dec
push
std
data16
push
shll
mov
cmpsb
adc
mov
jmp
pop
inc
addb
stc
and
pop
adc
fstpt
sbb
cwtl
mov
and
nop
xchg
ret
aaa
lcall
lods
dec
push
xchg
popa
push
mov
fistl
jne
xor
jp
ficompl
in
push
xchg
add
adc
shlb
sarl
push
outsb
pop
pop
push
jg
mov
dec
pop
shr
jmp
cmp
sbb
xchg
jae
mov
lds
sub
stos
mov
xchg
sar
add
roll
fisubrs
adc
cmc
in
sub
push
mov
dec
mov
rcr
xor
xchg
mov
cmp
mov
lret
cs
xchg
xchg
inc
cs
jb
lret
xor
sub
or
mov
mov
popf
push
pop
inc
imul
imul
call
rol
out
inc
sbb
iret
mov
jg
outsl
xchg
test
xor
cmpsl
jnp
pop
xor
cmp
popf
cltd
roll
push
ss
mov
repnz
roll
imul
test
in
jb,pt
shll
sbb
jecxz
mov
mov
jecxz
sbb
mov
icebp
mov
mov
sub
sub
mov
and
fdivrl
mov
data16
or
add
shrl
add
aaa
mov
and
sbb
outsl
rcrl
jnp
inc
or
mov
cmp
mov
outsl
iret
popf
cmp
in
mov
popf
jmp
cs
cmpb
dec
imul
push
jo
rclb
jg
mov
xchg
aad
pop
in
mov
sbb
xor
insb
mov
cmpsb
dec
xchg
and
mov
sub
mov
cmc
insl
xchg
and
jns
inc
xchg
adc
sti
iret
xor
mov
xchg
aam
adc
and
shll
sbb
sub
sbb
push
push
and
aam
les
je
push
outsl
xor
sub
mov
pushf
in
xchg
cmp
or
dec
or
sub
push
aad
popl
inc
push
cli
aad
ret
repz
cmp
cmp
gs
dec
loopne
rclb
fmull
mov
stos
mov
xchg
mov
loopne
sbb
idivb
es
fwait
inc
and
mov
mov
xchg
pop
adc
jae
aam
push
sti
je
cmp
loop
xchg
and
pop
in
jecxz
pop
and
std
test
adc
mov
leave
es
or
rorb
jmp
jne
inc
pop
add
idivl
xor
jae
aaa
aam
leave
and
xor
frstor
pop
inc
jge
sub
adc
loopne
cwtl
cli
lds
call
mov
daa
nop
jo
jns
lods
dec
outsl
pop
cltd
jnp
gs
inc
jbe
inc
ss
dec
inc
roll
lahf
leave
jnp
jb
repnz
test
cmp
pop
cs
lcall
movsl
jge
pop
lock
sub
mov
xor
add
outsb
push
inc
lods
xor
call
mov
jnp
pusha
or
xlat
push
js
ret
fiaddl
pusha
xor
push
jg
jle
fcompl
cli
ja
sub
in
out
lea
cmc
cmp
lds
mov
adc
test
hlt
add
lret
in
fwait
mov
fmuls
jnp
and
sub
mov
movsl
mov
gs
aad
js
insb
aas
jno
jo
inc
and
aam
push
jns
pause
lcall
mov
ljmp
sbb
mov
pusha
jp
and
fldenv
dec
pusha
cmp
jge
mov
leave
jg
push
movsl
mov
mov
fidivs
xchg
and
fldt
ss
bound
push
aas
pop
cmpsb
iret
xor
sub
sbb
inc
in
sti
xor
jne
mov
xor
jno
jbe
inc
shll
rclb
adc
dec
xor
pop
movsl
xchg
lock
xor
pop
cli
lods
push
and
jmp
test
jbe
dec
pushf
js
jmp
sti
in
pop
cmp
push
or
pop
pop
add
or
ljmp
daa
aaa
mov
sbb
mov
movsl
jae
and
cmc
pop
cmp
dec
and
cmpsl
int3
mov
push
pop
jp
cmp
repz
cltd
adcb
mov
dec
daa
sbb
test
mov
test
adc
push
push
pop
pop
lret
cld
xchg
xchg
adc
sbb
sbb
push
ljmp
into
push
mov
mov
ljmp
lret
lock
mov
in
mov
mov
insl
scas
fildl
mov
icebp
lea
mov
pop
adc
pop
sub
fwait
pop
je
stc
dec
dec
aad
adc
mov
aas
sub
sbb
mov
test
psadbw
out
fdecstp
jl
xor
xchg
fdivrl
hlt
scas
xchg
push
cld
test
cltd
adc
inc
bound
pop
push
sub
test
dec
aad
in
sbb
adc
call
push
cmc
popa
or
outsb
test
repnz
hlt
fdivl
xor
loopne
jno
ficoml
movsl
in
cmp
ret
out
pop
push
test
fs
lods
sbb
or
push
xlat
or
sub
jns
jo
xchg
imul
cmp
add
mov
rorl
mov
pop
movsb
jp
gs
dec
xchg
sarl
popf
jae
mov
jne
arpl
add
decl
dec
mov
xchg
rolb
cld
mov
cmp
push
xor
imul
iret
jb
or
lods
jl
ljmp
clc
cmpsb
out
aad
notb
jecxz
or
movsb
pop
stos
push
ja
pop
pop
xor
cmpsb
jmp
movsb
dec
mov
jo
xor
mov
jmp
xor
push
mov
sbb
cmp
jb
lret
mov
imul
pop
mov
sub
and
test
pushf
mov
mov
mov
scas
rorl
push
and
iret
mov
cld
fsubrs
sub
sub
testl
dec
out
jl
mov
adcl
lcall
jo
xor
mov
mov
mov
enter
rcll
out
daa
adc
jno
jne
sub
push
mov
xor
jae
ficompl
pop
dec
arpl
add
or
mov
fwait
mov
push
scas
dec
inc
aas
lock
imul
jmp
popf
push
icebp
ja
js
imulb
pop
pop
push
in
lock
push
bound
cmp
iret
mov
dec
test
xchg
push
add
mov
sbb
mov
add
cmp
push
sbb
mov
stos
mov
xor
in
loop
ret
mov
and
push
mov
push
inc
mov
aaa
aas
rcrb
pop
sub
xlat
sti
mov
push
sbbb
int3
inc
insl
xchg
ljmp
ficoms
mov
cmp
imul
push
jnp
push
inc
addr16
outsl
ja
pop
arpl
pop
lock
gs
mov
das
scas
and
and
mov
sbb
leave
pop
inc
mov
jmp
jb
iret
ss
aas
iret
lahf
pop
imul
nop
mov
lcall
imul
enter
jmp
les
jne
jl
imul
and
hlt
jge
jae
lcall
clc
aaa
push
push
dec
mov
mov
xchg
inc
je
push
sahf
xor
mov
lret
mov
fsub
mov
mov
out
inc
je
sub
dec
and
lods
repz
iret
ret
adc
xor
popa
rcr
cwtl
pop
add
pop
add
jmp
cmp
int3
lea
popa
fistps
test
lret
push
or
and
push
jmp
fnstsw
cltd
popa
mov
mov
loope
sub
arpl
push
fisubl
sub
or
or
xor
add
jb
test
sub
jae
shll
test
jmp
bound
loopne
jmp
add
lock
mov
or
mov
cmovp
inc
add
sti
xorl
ret
dec
and
data16
or
push
dec
out
iret
push
push
dec
jg
pop
mov
ljmp
and
lock
inc
int3
dec
add
mov
loopne
jo
sbb
mov
imul
int
add
push
sub
pop
nopl
std
cmpsb
clc
jno
cmp
and
xor
pop
add
cmp
ret
aam
popa
mov
mov
inc
pop
outsb
inc
push
push
cmp
and
mov
dec
call
enter
sbb
int
cmp
sbb
sbbb
mov
popf
cli
out
mov
dec
jbe
ret
roll
mov
or
add
adc
mov
sarb
jmp
sbb
pop
mov
fistps
fsubl
sbb
pop
pop
dec
or
xor
call
pusha
add
jl
xor
push
push
shrl
popl
lds
cmpsb
out
xorb
ss
xchg
sarl
popa
fdivs
push
jge
cmp
pop
repz
sub
mov
jnp
in
shl
fcmovbe
xor
or
rclb
js
jle
adc
xor
pop
sub
mov
loope
pop
test
sbb
jo
add
jne
dec
cld
enter
bound
insl
fldt
and
mov
stos
inc
rol
sbb
sbbl
sbb
xlat
mov
daa
or
cwtl
mov
cmp
jne
push
loope
test
data16
pop
inc
inc
add
repz
push
sarb
stos
push
push
push
loopne
xchg
xchg
dec
in
jo
popf
into
fmul
sbb
mov
inc
ljmp
push
jmp
aad
orl
arpl
pop
and
ljmp
jne
sbb
lret
loop
or
sbb
ds
or
jnp
pusha
int3
cmp
pop
xchg
mov
push
ds
test
aas
sahf
fcoms
add
arpl
jb
pushf
xor
push
lahf
insb
and
stos
int
mov
ljmp
xor
xchg
xchg
and
loopne
test
aaa
enter
adc
pop
cmp
xchg
test
fisttpll
xchg
adc
mov
mov
gs
xor
pushf
into
xlat
movsl
div
pop
mov
jo
lcall
das
stos
jp
push
add
sbb
cmp
xlat
push
dec
pcmpeqd
ds
adc
sarl
sarb
jb
mov
in
or
lea
js
and
pop
cmp
je
adc
mov
stos
in
stos
mov
xor
adc
fwait
cmp
mov
sub
push
mov
fstps
dec
fistl
xchg
mov
sub
scas
pop
call
das
xchg
lret
adc
mov
xor
xchg
pop
push
or
jbe
lds
test
adc
mov
mov
imul
ja
inc
xor
in
xor
sbb
pop
stc
movsb
mov
inc
stos
sbb
or
daa
stos
mov
popl
mov
jae
clc
push
outsl
pop
sbb
mov
loop
cltd
and
sbb
lret
gs
dec
aaa
call
pop
xchg
mov
jge
pop
paddsw
pop
fimull
inc
xor
repnz
jp
call
clc
ss
mov
sub
or
cli
pop
push
mov
push
push
movsb
inc
mov
and
mov
in
sbbl
fimuls
pop
pop
ret
ret
sti
pop
jb
lahf
pop
int
jg
dec
pop
pop
cmp
sbb
addl
mov
or
stos
xor
scas
test
icebp
xchg
jne
push
das
and
adc
mov
aam
dec
ljmp
xchg
mov
imul
aad
fneni(8087
faddl
add
cmp
and
rcrl
cmpsl
in
movb
jnp
mov
mov
sbb
enter
out
in
movsl
scas
pop
jno
cmp
addb
ljmp
shll
add
adc
add
bound
push
mov
imul
inc
push
inc
cmp
cmp
mov
je
aam
xorl
sbb
inc
xchg
rcr
lds
leave
jb
jp
push
cmp
jg
enter
xor
inc
fisttpll
jnp
movsl
add
popf
mov
cwtl
push
ret
into
sbb
jo
xor
jnp
test
lods
mov
incl
inc
mov
stc
iret
dec
dec
das
push
hlt
inc
lea
call
loope
in
ds
push
or
cmpsb
js
jb
fwait
jb
mov
stos
ds
jno
jnp
jb
outsb
shr
rorl
sbb
pushf
mov
and
mov
lahf
cmc
jmp
jl
cwtl
icebp
daa
test
mov
subl
fbld
inc
and
les
jns
xchg
jne
data16
inc
gs
cld
in
lcall
cld
call
jne
in
jb
add
lcall
lahf
inc
jae
out
push
add
jmp
mov
sub
xchg
jo
or
jne
out
lahf
xor
sub
int
adc
pop
cmp
adc
movsb
push
jns
jo
add
mov
icebp
jns
mov
fidivrl
ljmp
mov
xor
push
fidivrl
adc
in
aas
add
movsb
cmovl
icebp
das
ret
and
xor
pop
jge
nop
xchg
xor
inc
daa
loope
outsl
dec
fnsave
movsl
outsl
orl
fistps
cmp
mov
cmpl
stc
pop
js
inc
enter
add
cs
dec
adc
xchg
shll
sub
daa
sbb
stos
repz
xor
imul
and
push
ss
hlt
in
test
adc
sbb
lcall
jno
push
jno
and
testb
icebp
jge
mov
fistpl
sti
push
mov
xchg
lcall
push
push
fmul
in
xor
adc
fnstenv
inc
sbb
int3
pop
addr16
into
dec
mov
mov
pop
adc
xor
nop
xor
fdiv
mov
in
sub
add
imul
lea
shrl
lods
daa
xchg
cmp
sub
fwait
mov
xchg
add
out
cmc
mov
pop
cli
push
int
inc
and
pop
iret
pop
adc
pop
dec
or
sti
pushf
xchg
sub
imul
scas
push
mov
pop
or
cmp
loopne
mov
mov
lcall
mov
adc
xchg
and
or
mov
icebp
xor
lock
inc
dec
loope
test
pop
push
pop
mov
pop
sbb
int
jmp
scas
iret
xor
inc
in
adc
loop
adc
cmp
mov
mov
out
movsb
jno
cmpsb
in
inc
repz
adc
data16
dec
sbb
xlat
out
push
sbb
and
xchg
add
je
dec
in
sbb
cs
xor
clc
or
mov
cmpsl
push
in
adc
iret
sbb
jo
sbb
mov
pop
push
mov
jb
loope
add
sub
mov
ficoms
mov
cmpsl
or
js
mov
mov
sbb
pop
xor
adc
jne
add
and
mov
xor
mov
addr16
cmp
xor
xchg
push
mov
push
dec
sbb
test
cli
cmp
mull
jno
adc
stos
and
sub
stos
and
and
adc
int
pop
and
adc
test
test
fbld
je
fsubl
dec
dec
cmp
sahf
mov
pop
cmpb
push
je
cmp
add
mov
mov
jo
pop
lahf
jae
add
sti
rcrl
push
inc
ss
ljmp
dec
sbb
adc
test
rcrb
jge
fistpl
notb
mov
pop
int3
lret
addr16
out
cmc
inc
jge
icebp
cmpsl
ret
pop
stc
or
push
pop
mov
movsb
jb
sbb
pop
repz
nop
push
frstor
cmp
jae
cmp
mov
mov
jb
hlt
cmpb
or
sub
test
loopne
sub
testl
cli
insl
cmp
jmp
and
pusha
jmp
cli
jge
xor
mov
dec
mov
pop
sahf
mov
stos
std
mov
lcall
inc
sbb
ss
notb
pop
out
xlat
out
daa
fsubr
adc
cmp
mov
push
cmp
pop
push
inc
test
cmpb
cmp
sbb
nop
daa
fs
icebp
dec
dec
popa
sub
xor
push
andb
fxch
cld
arpl
repz
mov
adc
stc
lret
test
sbb
ja
sub
orl
push
mov
xchg
mov
negb
and
outsl
push
sbb
jb
daa
rorb
test
sbb
fisubrl
adc
adc
dec
je
mov
decb
push
fcomip
out
leave
cmc
cmp
jae
mov
xchg
add
lret
push
push
or
mov
ss
ljmp
enter
pusha
adcb
add
outsl
cli
cmc
sbb
loope
and
xchg
pop
add
cmpsb
sbb
cwtl
pushf
shll
cmp
sub
push
and
cli
addr16
imul
add
and
mov
in
xchg
mov
pushf
aaa
add
push
push
out
mov
jle
imul
imul
in
xchg
sub
cmp
inc
cs
fistps
roll
mov
push
imull
push
sbb
stos
adc
and
xor
scas
xor
int
xor
ret
ja
rolb
subl
rcll
cli
fistpll
insb
pop
ds
clc
call
scas
in
inc
es
test
xor
push
or
nop
pop
lret
ret
data16
ljmp
aad
cli
dec
jns
add
adc
lods
cwtl
add
cmp
cmp
repnz
or
mov
cmp
push
out
xorb
movsb
ret
fwait
scas
and
fiaddl
sbb
pop
adcl
jne
insb
adc
push
sbb
cmp
push
cwtl
mov
leave
stc
es
dec
xchg
push
mov
scas
call
mov
sub
xchg
cli
push
stos
mov
mov
js
sbb
addb
rcl
mov
xor
pop
or
push
aad
rclb
cmpsl
lahf
icebp
mov
popa
mov
repnz
icebp
jmp
xchg
jp
sbb
xor
pop
dec
inc
mov
lahf
pusha
jae
sub
pushf
inc
fiaddl
shrb
push
das
sub
push
jl
mov
dec
adc
xchg
mov
shr
xchg
fadd
out
jnp
inc
subl
jecxz
xchg
lods
dec
mov
add
insl
test
cmp
scas
inc
decb
sti
push
mov
xchg
and
lods
pop
gs
sub
sub
dec
cltd
insl
in
out
xor
fcmovbe
jl
xchg
ja
subb
mov
jl
jmp
jo
dec
adc
xor
cltd
insl
mov
loop
sbb
repnz
mul
test
dec
xor
lret
movb
test
push
addr16
push
mov
and
dec
outsb
outsb
mov
pop
xor
cs
divb
push
cwtl
movb
mov
ljmp
out
ret
pop
jp
jne
and
jnp
shll
cmp
aaa
mov
mov
movsb
and
inc
xchg
aam
into
xchg
jge
cltd
jp
sub
xchg
pop
mov
cmp
xchg
xor
neg
add
or
call
and
xor
sbb
mov
in
cmpb
mov
icebp
cld
or
xor
jo
push
loopne
or
ss
cmp
movsb
mov
andl
in
sbb
ret
jbe
int
pop
jo
in
repz
cmpsb
dec
mov
xor
mov
bnd
cwtd
in
mov
sahf
jp
mov
ficoml
pop
adc
call
popf
mov
clc
jg
and
imul
mov
loope
gs
xchg
and
out
xchg
iret
ficomps
pop
xchg
push
fs
test
dec
fisubrs
lret
mov
test
jecxz
inc
or
push
adc
ret
jo
fsubr
and
mov
pop
sbb
xor
push
inc
cmpsb
mov
xchg
xchg
dec
pop
mov
mov
in
inc
enter
aam
cmpsb
lcall
mov
mov
sbb
mov
popa
mov
in
mov
xchg
call
divb
test
xor
adc
gs
data16
lret
dec
sti
or
jmp
mov
pop
int3
jb
and
jno
mov
jl
movsb
adc
or
inc
pop
outsl
xchg
loop
jle
and
sub
stc
inc
xchg
clc
mov
push
icebp
repz
lods
pop
cmp
mov
fstpl
int3
mov
andb
shrl
mov
mov
hlt
sub
or
in
ret
sub
arpl
mov
cltd
imul
mov
or
sbb
repz
rcl
mov
adc
push
lods
fs
and
lods
push
in
or
lods
lods
sarl
xor
dec
rcll
mov
xor
xchg
stos
lea
mov
js
inc
leave
jmp
xchg
inc
sar
dec
mov
jg
lods
jb
xchg
cmpsl
sbb
xlat
clc
add
cmp
mov
jbe
lret
push
mov
and
sub
lahf
sbb
jp
sbb
sbb
pop
push
xchg
push
mov
mov
or
jg
cmp
faddp
mov
mov
inc
mov
cwtl
lahf
mov
pop
fsubp
xor
jnp
push
jae
ret
jb
pusha
xor
jp
daa
xchg
sbb
xlat
mov
cmp
pop
enter
and
inc
and
mov
xor
js
sti
jb
adc
in
cmp
lahf
aad
push
or
dec
cwtl
and
xchg
shrl
push
loopne
mov
fwait
push
iret
inc
xchg
adc
adc
push
push
and
and
ret
dec
and
insl
cmp
lea
ja
fs
pusha
xchg
and
leave
lret
xor
lea
lock
call
sti
push
mov
xor
xchg
push
mov
das
aad
stc
out
outsb
adc
xchg
jmp
jne
jmp
mov
rcl
aaa
aaa
mull
add
push
mov
add
sarb
mov
and
das
mov
cltd
adc
mov
mov
sbb
negl
inc
jmp
xchg
mulb
rolb
sbb
push
pop
or
rolb
push
xchg
and
shlb
decb
cwtl
inc
xor
lcall
sbb
mov
shll
mov
adc
cld
xchg
adc
das
xchg
ss
int3
cmp
movsl
mov
jecxz
lcall
fwait
mov
sbb
ret
xor
pop
adc
adc
jle
pop
lock
out
lods
mov
popa
scas
in
movq
pop
sbb
fs
and
pop
insl
aas
or
sub
scas
lret
aad
pop
pop
sub
push
ja
adc
or
mov
sahf
icebp
xchg
rcr
out
cmc
aam
insl
sbb
imul
adc
dec
mov
arpl
sti
dec
hlt
test
dec
pop
imul
dec
bound
adc
movsl
adc
sbb
out
aam
sahf
inc
add
lcall
xchg
and
adc
adc
pop
gs
mov
mov
mov
in
lea
adc
adc
es
mov
out
lcall
scas
jmp
out
inc
fs
sti
push
xor
cmp
cld
pop
mov
adc
jo
pop
std
and
sub
ret
xchg
cmc
addr16
daa
imul
push
xor
lahf
pop
xor
adc
mov
in
dec
ja
jmp
adc
inc
xor
dec
data16
dec
mov
sub
or
adc
insb
sbb
add
insb
add
pop
pusha
xor
outsl
and
out
fistl
icebp
mov
fistpll
arpl
sbb
jne
mov
sub
std
adc
xchg
adc
mov
push
repz
fldcw
shl
les
pop
mov
push
sub
mov
shll
sahf
adc
inc
inc
ret
bound
push
mov
mov
mov
int3
enter
add
mov
xchg
adc
mov
pop
test
outsl
sub
out
aam
aas
jne
mov
and
fbstp
test
popa
cltd
loope
add
repz
inc
cmpl
push
mov
stos
call
out
shll
pop
push
push
enter
insb
cli
sub
out
and
mov
adc
sbb
and
inc
push
mov
jmp
aas
addr16
cmc
lock
jecxz
inc
cs
call
das
shrb
mov
jge
cmp
aaa
mov
mov
cmp
mov
lods
loope
jle
sbb
pop
and
gs
mov
lea
mov
or
addr16
mov
daa
xchg
clc
xor
and
daa
enter
push
lock
fdivl
in
inc
jnp
inc
int
xor
xchg
xor
or
std
xor
stos
bound
cltd
shrl
mov
addr16
ret
jae
cmpsl
inc
inc
fiadds
lahf
push
dec
test
shl
imul
pop
bnd
ret
or
in
dec
and
shrl
ficomps
mov
xchg
lret
add
xor
mov
rcll
push
les
pop
and
mov
fidivs
int
push
jne
test
out
mov
mov
dec
fisttpl
sbb
es
lock
sbb
aas
inc
insb
ja
test
sbb
fcmovb
insl
xchg
in
push
dec
pop
addl
test
and
xlat
cmpsl
mov
pop
sub
repnz
test
popf
lahf
es
and
daa
faddp
loop
pop
outsl
subb
jecxz
mov
sbb
xchg
mov
add
sub
fwait
adc
lahf
scas
data16
inc
pop
pop
mov
mov
fisubs
xor
xor
shlb
mov
aaa
jge
inc
sbb
cmp
rolb
rolb
and
mov
mov
shlb
adc
sub
mov
pop
cmp
xchg
mov
fistpl
test
call
jae
daa
aam
out
sbb
xlat
pop
sbb
loopne
daa
jp
inc
cmpsl
stc
stos
jb
stc
loop
push
inc
in
inc
mov
inc
leave
cmpsl
mov
leave
lds
add
test
les
arpl
outsb
jo
movsb
push
aad
test
pusha
or
out
push
comiss
data16
movsb
pushf
xor
xor
add
fdivr
sub
push
pop
or
mov
scas
sub
pop
dec
or
sbb
xchg
xchg
int
ret
hlt
dec
loop
xlat
fistpll
ja
dec
and
pop
ljmp
ret
adc
pop
in
mov
mov
dec
mov
xchg
pop
cmpsb
mov
or
jno
lcall
push
or
mov
pop
cmc
sbb
data16
ret
repz
inc
lret
mov
movsl
mov
or
fldenv
mov
pusha
testl
jo
fisubrs
inc
jge
mov
xor
lods
and
jl
pop
popf
sbb
jmp
adc
inc
negl
lods
adc
pop
mov
rcrb
add
rcr
xchg
ss
repnz
mov
add
mov
xchg
cmp
out
mov
sbb
idivl
adc
in
fists
subb
fistpll
xchg
push
inc
scas
sub
into
xchg
cmpsl
inc
int3
out
bound
and
mov
and
adc
lret
sub
shlb
jne
mov
lea
adc
outsb
jp
lea
sub
or
jbe
int3
lods
orl
mov
mov
pop
in
push
mov
mov
pop
mov
cmp
mov
pop
leave
jnp
push
mov
pushf
out
outsb
call
loop
push
ljmp
repz
cmp
hlt
pop
lret
movsb
dec
xor
aam
inc
int3
xor
cltd
outsb
lods
and
jle
gs
lock
out
out
cs
push
movsb
cwtl
mov
jnp
mov
and
out
push
or
and
out
cmp
hlt
xchg
pop
jecxz
je
pop
rol
aam
add
inc
push
inc
and
lds
dec
popa
stos
pop
push
jo
stc
lods
jg
mov
jmp
nop
pop
pop
imul
cmp
and
sub
mov
pushl
mov
lret
dec
xor
jmp
jecxz
sub
int
jbe
push
insb
aas
inc
mov
std
jns
mov
fcompl
sub
adc
aaa
mov
xchg
adc
xlat
sbb
dec
dec
sti
dec
mov
ds
push
mov
adcb
sub
int3
subb
dec
pop
lods
dec
dec
mov
xlat
fadds
je
loop
mov
lahf
inc
mov
mov
add
cmp
push
lret
pusha
mov
mov
pop
out
into
pusha
sti
or
or
mul
adc
and
push
test
fstps
adc
repz
das
dec
gs
mov
xor
mov
repnz
mov
jnp
iret
mov
out
sub
sbb
or
cs
out
sub
sub
push
mov
push
mov
mov
subl
cmp
dec
out
adc
jne
sbb
jns
add
movsb
mov
xor
cli
xlat
sub
pop
jle
into
xchg
push
jge
jmp
pop
gs
pop
shl
shr
sub
or
popa
pop
mov
je
or
mov
sti
stos
sub
and
push
in
dec
push
cmp
push
rorb
test
stos
rcr
lret
sub
fcom
pop
daa
push
push
or
push
stos
xor
mov
arpl
mov
gs
jnp
inc
sbbl
mov
repz
push
lret
lcall
fildll
push
push
mov
xchg
push
sbb
and
mov
mov
pop
and
add
fwait
hlt
aad
lret
jp
cltd
nop
jnp
sbb
add
mov
push
push
sbb
jg
xor
dec
addb
fptan
ljmp
jae
inc
cld
idiv
xchg
push
push
mov
mov
inc
in
jns
pop
cmp
xor
mov
pop
pop
popf
call
aaa
adc
shrl
pop
loop
daa
dec
jnp
ret
repz
jmp
mov
mov
cltd
jb
test
jmp
repnz
dec
sbb
mov
cmp
mov
or
clc
pusha
mov
cmc
sub
leave
imul
fstp
call
cltd
push
add
xor
mov
inc
xchg
scas
push
sub
scas
ljmp
mov
dec
xchg
jne
insl
or
xchg
xchg
pop
aas
xorl
and
mov
dec
cli
add
mov
insb
pushf
lret
mov
aaa
lods
mov
cmpsl
jnp
arpl
sahf
insb
or
inc
or
sub
enter
push
jp
add
fnstcw
push
adc
inc
sahf
inc
repnz
pusha
shlb
cmc
cli
cmp
jb
je
dec
jge
test
xchg
fcompp
jmp
mov
ret
outsb
pop
add
mov
mov
loop
out
outsb
pop
shrl
push
dec
or
pop
mov
rorb
mov
xlat
ror
jbe
jp
test
xor
xchg
cmp
shrb
clc
pop
pop
ljmp
or
push
scas
xor
in
fs
rorb
fstps
pop
adc
mov
add
xor
sbbl
push
cmp
push
lea
sbb
jg
imulb
jg
jmp
mov
xchg
pop
in
adcl
mov
nop
cmp
push
inc
repz
xchg
sub
stos
or
pop
idivb
sbb
or
int3
popf
and
stos
adc
dec
out
add
fwait
test
loop
mov
stos
cmp
mov
cmp
xor
dec
sti
mov
out
rclb
cli
xchg
ja
lahf
cmpsb
xchg
std
xchg
repnz
xchg
in
sbb
cli
lret
mov
and
jg
dec
or
and
mov
xchg
fldt
ficompl
imulb
pushf
in
or
stc
xor
pop
cmc
cmpsl
dec
push
jbe
es
push
mull
add
nop
test
sub
stos
imul
xor
sahf
rcrl
pop
sbb
jae
rcrb
outsl
push
mov
cmpsl
add
nop
scas
and
mov
repnz
pusha
sub
add
scas
sub
and
ds
sbb
push
inc
mov
mov
or
mov
test
sbb
sub
ret
xlat
testl
mov
and
mov
arpl
outsl
adc
insl
mov
outsl
loope
fstpt
sbb
pop
inc
out
or
fs
or
pop
pop
aad
inc
lret
repnz
xchg
push
movsl
xchg
loope
call
les
push
cmp
in
in
ret
cmpsl
sahf
add
aam
sbb
outsb
pushf
mov
mov
cmpsl
xor
fmull
fs
iret
push
loopne
mov
or
data16
xor
mov
arpl
lock
pop
dec
pop
add
xor
shlb
xorb
sti
or
add
xchg
loop
ljmp
andl
lcall
out
xchg
adc
out
pop
add
sbb
sub
rcrl
lods
pop
xchg
mov
inc
pop
push
aad
in
mov
fcoms
shlb
lods
and
das
loop
xor
mov
outsl
sbbl
mov
pop
shlb
ds
push
in
mov
sub
je
mov
pop
rorl
xchg
filds
imul
sub
sub
sub
imul
gs
lcall
push
mov
stos
ret
jge
xor
je
and
push
fisttpl
jmp
cmp
mov
jmp
add
mov
xor
mov
add
and
and
jl
xchg
cmp
jg
leave
and
fsubl
insb
das
lea
mov
outsl
inc
in
fnstcw
addr16
jns
loopne
loopne
xor
pop
lret
add
es
mov
mov
xor
shlb
adc
lcall
stc
mov
mov
es
push
dec
enter
lret
stc
xchg
jo
scas
pop
mov
cld
inc
mov
std
repz
xor
rcr
inc
fwait
imul
fcmovnbe
es
movsb
xor
push
fidivrs
jne
ret
rcrl
test
cmp
scas
jl
and
dec
lods
cmp
les
mov
cmp
dec
mov
jp
inc
or
mov
out
adc
enter
cltd
sbb
and
cmp
test
mov
fwait
mov
outsl
mov
fs
aam
mov
fwait
imul
dec
insl
xor
test
and
clc
and
shl
daa
push
or
imul
cltd
mov
enter
cwtl
ds
call
push
push
adc
pop
shrb
insb
sahf
outsl
sub
stos
inc
sub
mov
stos
sti
rolb
hlt
push
fwait
sub
and
jle
push
popf
rcrl
cld
xchg
jae
enter
dec
test
or
mov
js
cmpsb
or
xchg
xlat
jae
inc
jmp
arpl
in
sbb
cmc
lret
dec
or
mov
mov
cmp
lods
push
loope
repz
jne
add
es
in
jle
dec
mov
add
lods
push
push
jno
dec
sbbb
xchg
sub
outsl
shrl
ss
inc
ficoml
dec
arpl
xor
stc
in
pop
je
mov
add
mov
jecxz
std
cmpb
push
loope
pop
cltd
inc
gs
mov
cmp
enter
js
cmp
push
js
in
in
leave
repz
mov
fmuls
pop
pop
shl
sti
std
out
adc
lods
pop
sbb
mov
mov
jbe
xchg
lahf
push
cmp
add
or
add
pop
call
xor
addl
sbb
pop
sub
dec
mov
inc
sar
mov
repz
sti
jge
in
aaa
dec
mov
scas
push
fdivrp
sub
shl
cmp
add
jmp
mov
xchg
lahf
adc
add
or
mov
mov
xor
push
push
aam
fbstp
ds
in
jbe
mov
mov
mov
into
sahf
cmp
jnp
pusha
loop
jae
mov
dec
lods
fimuls
mov
xor
pop
adc
pop
add
movb
std
fldl
roll
sahf
jae
outsl
aad
pop
mov
jmp
mov
nop
test
push
push
or
in
mov
cwtl
jecxz
loope
test
sub
mulb
jmp
dec
mov
bound
mov
dec
mov
jle
mov
dec
add
cmpsl
stos
addl
dec
or
mov
dec
popa
cwtl
jbe
in
mov
cmp
loop
xor
cmpsl
or
inc
fdiv
cwtl
insb
mov
xlat
xchg
pop
ds
aas
push
pop
jge
pop
mov
das
cmpsb
mov
loopne
ret
pop
xchg
dec
add
ss
push
push
push
fmull
mov
fimuls
fwait
or
xchg
push
mov
dec
mov
data16
cld
aad
out
jno
call
xchg
test
sub
pop
fs
cwtl
jl,pn
adc
sub
adc
push
pop
mov
pop
add
xor
dec
push
idivb
sbb
cs
fs
jo
int3
push
sti
icebp
and
jo
sub
popf
lea
inc
or
xchg
rcll
xchg
jl
sahf
mov
sub
dec
popf
jge
inc
jle
cmp
mov
mov
movsl
adc
test
or
in
pushf
push
sub
xlat
or
dec
jg
adc
cmp
mov
mov
and
xchg
xchg
mov
mov
pop
jmp
and
insb
mov
mov
mov
popf
test
jmp
push
inc
mov
rcrl
leave
fiaddl
clc
movsl
iret
xor
shlb
loope
adc
adc
pop
cs
and
in
movsb
inc
test
cs
mov
add
jl
loope
xchg
nop
xchg
and
dec
xorb
pop
das
comiss
leave
and
xor
ret
mov
xor
es
xchg
cltd
or
mov
xor
xor
xchg
push
gs
and
shl
icebp
fsubrl
inc
jecxz
or
dec
subb
mov
out
lods
andl
adc
inc
stos
cltd
mov
sub
flds
int3
movsl
dec
dec
ret
mov
cmp
pmaxsw
adc
mov
add
cmp
xchg
xor
int3
pusha
sub
mov
jae
push
outsb
rolb
xchg
push
rclb
push
sub
test
arpl
fwait
xchg
in
test
test
jg
pop
inc
test
lcall
adc
ss
rorl
ret
data16
sbb
test
nop
sbb
pop
and
dec
push
add
movsl
and
ljmp
sbb
jle
in
mov
push
stos
push
mov
push
nop
insb
nop
jo
in
fs
sub
std
jns
fstpl
repz
jae
pop
inc
push
jmp
aam
gs
jae
inc
ret
sub
out
mov
adc
push
pop
cmp
jmp
dec
xchg
xorb
pop
inc
mov
mov
pop
cmpsl
add
adc
test
xchg
fcompl
es
or
rcll
insl
cli
push
xor
clc
pop
sbb
repnz
or
sub
push
dec
stc
dec
test
sbb
push
and
xchg
es
mull
cwtl
gs
shlb
clc
jmp
ja
hlt
pop
iret
and
ds
jp
fidivrl
test
js
fucomi
adc
xchg
pop
pop
lret
inc
sbb
mov
imul
data16
repnz
sub
imulb
shlb
insb
scas
push
daa
inc
push
sbb
imul
sbb
inc
repnz
jmp
jge
mov
pop
xor
test
cli
push
lock
mov
push
push
adc
mov
addr16
aam
xor
xor
dec
inc
push
repz
in
or
test
mov
add
fldl
dec
sahf
fwait
xchg
sbb
mov
add
rorb
fdivl
dec
dec
in
push
sbb
adc
or
lods
mov
aaa
xor
jb
pop
jl
sub
sub
leave
mov
and
je
je
outsb
mov
pop
call
cmpb
adc
dec
sbb
pop
xchg
add
lds
mov
outsl
add
repz
xchg
imul
sbb
cli
insb
xor
loop
out
inc
aam
xchg
push
jo
add
in
clc
fs
sub
mov
shlb
outsl
test
rol
rorb
jns
ds
test
pop
sub
sub
movsb
sahf
cmp
push
and
xor
stos
mov
fnstenv
xchg
fwait
dec
sar
add
ds
push
mov
repz
sub
shrw
mov
push
pop
push
lret
adc
sahf
sti
sub
in
xor
inc
xor
or
jl
sbb
mov
in
xchg
xchg
inc
repnz
fmul
xchg
mov
mov
inc
and
movsb
or
icebp
popf
fsubp
lds
nop
mov
out
sub
decl
mov
dec
pop
pop
es
and
xor
push
mov
and
push
cmp
or
into
push
push
and
lock
pop
jecxz
fucomip
push
cwtl
rclb
shl
dec
push
xor
xor
sbb
mov
sbb
cmc
cmp
je
jmp
xchg
stos
sub
int
outsl
imul
xchg
inc
and
loope
movsb
movsl
push
int
xlat
inc
adc
xor
push
cmpsl
add
jae
jnp,pt
out
lock
cmpsl
xlat
sub
mov
push
stos
int3
flds
mov
aas
ret
leave
ja
mov
lock
ja
pop
push
xlat
lret
pop
out
popa
ret
xor
jmp
loopne
pop
or
xor
test
push
in
dec
subl
shll
ret
or
ds
stos
xchg
aas
mov
cmpb
pmullw
pop
rcr
movsl
sub
or
mov
arpl
sbb
loop
mov
lahf
shlb
or
xchg
cwtl
sub
mov
sbb
verw
pop
adc
hlt
inc
aad
mov
je
orb
add
ja
divl
jbe
sbb
cmpsl
lods
inc
sarl
ss
psubsw
nop
shll
icebp
push
mov
sub
or
paddsb
mov
sahf
mov
push
mov
jmp
ret
mov
inc
push
xor
cmc
inc
xor
or
je
jbe
add
or
test
imul
or
out
mov
xchg
inc
mov
lcall
sti
add
mov
lret
adcb
fsubrs
mov
mov
or
or
addr16
or
mov
mov
loopne
mov
or
xor
dec
cmp
pusha
mov
imul
pop
fs
pop
sub
dec
dec
cmp
mov
dec
xor
pop
in
std
mov
ret
pop
es
mov
pop
pop
cmpl
ja
pushf
pusha
xchg
jecxz
dec
cmp
fldpi
outsb
cmp
inc
pushf
test
gs
mov
leave
pop
insb
shrl
clc
in
sbb
imul
cmp
jo
mov
test
sub
jnp
xchg
test
sarb
les
push
and
testb
enter
push
mov
pop
clc
add
adc
xchg
mov
mov
in
out
pop
jo
cli
cmp
mov
mov
and
movsl
add
sbb
pusha
inc
pop
jo
movsl
sub
stos
jp
cmp
lcall
and
mov
enter
jmp
popf
fwait
xchg
jbe
out
loop
out
sti
negb
in
std
fwait
or
ret
dec
mov
in
xor
les
lahf
rcrl
sbb
mov
pop
pop
add
repnz
push
test
jp
clc
outsb
cmp
xchg
popa
lcall
lea
fs
cld
mov
sahf
and
pop
lahf
dec
rcl
dec
fldt
repnz
mov
stc
ljmp
aas
and
out
fistps
mov
xchg
imul
and
add
lock
or
test
xchg
push
sbbb
jnp
fucom
sub
std
mov
jp
or
mov
cwtl
mov
lods
jo
and
mov
sbb
out
icebp
xorl
leave
push
int3
in
in
xor
add
xchg
icebp
cmp
push
scas
scas
adc
jle
jo
out
xor
ja
pop
andb
push
lds
sbbb
gs
test
rorb
xor
incl
push
xchg
ret
xor
and
ret
pop
or
push
inc
push
popa
or
push
stos
es
addr16
and
push
aaa
imul
push
inc
and
jnp
xchg
xor
arpl
movsb
push
cmpsb
mov
sbb
xor
fildl
dec
rolb
inc
push
pop
jle
flds
xor
arpl
jns
mov
mov
add
jge
loop
call
cmc
aas
out
lock
lahf
jecxz
xchg
bound
clc
bound
xor
outsb
ret
sbb
fisttpll
lea
mov
or
popa
xor
stos
xchg
pop
lock
bound
cmpsl
jmp
pop
push
fisttps
pop
leave
pop
mov
cmovbe
jbe
xor
jno
fsubs
mov
fiaddl
xor
add
bound
dec
xor
adc
xchg
inc
mov
les
adc
mov
fisubs
inc
mov
adc
push
stos
fs
popf
mov
es
mov
xor
adc
cmp
inc
outsb
push
out
mov
push
mov
jb
imul
mov
mov
movsl
sub
jns
sbbb
or
testb
lods
js
jecxz
fadds
cs
inc
sub
add
ret
mov
rcrb
out
dec
mov
push
inc
jp
cmp
in
fmull
scas
sub
idiv
sbb
ret
cli
mov
jae
aam
adc
ljmp
jmp
xchg
push
std
push
into
inc
repz
sar
fists
shlb
and
inc
pop
fwait
sub
lods
mov
test
movsl
mull
mov
dec
cli
popf
ja
jmp
lea
dec
nop
subl
xchg
and
push
xchg
mov
jb
call
push
ficomps
inc
loope
movb
std
fsubrl
sti
xor
mov
add
mov
pusha
jmp
pop
test
push
dec
sbb
movsl
mov
nop
mov
fnstenv
sub
sub
mov
ret
or
daa
pop
stos
or
incb
adc
cmp
push
push
xchg
ja
lods
push
push
decb
das
mov
outsl
add
sti
test
pop
inc
lock
push
sbb
jns
ficomps
bound
adc
loopne
jbe
scas
jo
inc
nop
jb
mov
xor
jg
add
movsb
notb
pop
jno
outsl
les
repz
pop
notb
lods
dec
adc
sti
cmp
cltd
lcall
pop
bound
insl
cmp
inc
notl
test
jne
aad
int3
test
push
push
and
add
out
loope
arpl
movsl
fdivl
push
or
sbb
out
or
dec
cmp
xor
cwtl
dec
lret
or
in
add
mov
pop
and
jns
jecxz
adc
outsb
pusha
adc
xchg
add
cmp
in
lret
outsb
mov
ficoms
loop
mov
cmp
nop
loop
mov
mov
pop
cmp
fsubs
nop
sbb
adcb
jle
clc
es
sub
test
mov
dec
in
mov
sub
adc
cli
movsl
inc
sbbb
mov
adc
inc
add
je
sbb
xchg
ljmp
xchg
cmp
xchg
cld
ds
out
iret
pop
inc
iret
or
sbb
popa
fdivl
xchg
lods
addr16
pop
das
clc
sarb
aas
jo
iret
divb
aas
fwait
push
faddl
xchg
std
xchg
cmpsl
jo
rcll
mov
sbb
push
xlat
pop
xchg
stc
dec
imul
push
adc
outsb
jae
and
jno
ret
gs
inc
lahf
jns
lret
lcall
inc
mov
rcrl
insl
sub
mov
or
cmpsl
pop
loopne
imul
insb
cld
dec
in
aas
xchg
xchg
mov
cmpsb
xlat
rcrb
lret
sbb
xchg
xor
inc
xchg
or
pop
fidivl
cli
mov
adc
leave
iret
jns
cmpsb
inc
mov
mov
adc
jge
addr16
mov
xor
sbb
cmp
insl
ja
popa
push
out
aas
test
call
jmp
lods
cwtl
adc
int3
repz
incl
je
push
repnz
jne
add
jg
mov
pop
leave
sti
sub
mov
scas
out
xor
mov
sub
mov
and
popf
xchg
xchg
and
and
sbbb
pop
xor
les
pop
inc
std
push
addr16
scas
and
int
in
scas
and
aam
imulb
mov
movsl
xchg
adc
jno
inc
push
mov
pop
xor
cmp
mov
or
clc
arpl
out
loope
cmp
ss
adc
rcr
ljmp
sub
xchg
xorb
sbb
push
mov
adc
push
jns
scas
jecxz
sbb
lods
aam
lcall
in
and
int3
insl
cmc
or
xchg
mov
mov
rclb
jae
repnz
push
mov
lea
adc
and
add
loope
jle
loopne
fsubs
rcrb
dec
arpl
adc
sbb
decl
ret
add
insl
mov
push
push
lahf
add
dec
jno
repz
mov
ret
cs
int
mov
mov
push
in
adc
mov
dec
orb
pop
ds
dec
test
mov
add
mov
loopne
test
sbb
and
lahf
push
mov
sub
or
push
jb
inc
xor
adc
dec
jno
ds
push
push
fwait
mov
push
pop
lock
push
push
mov
inc
aas
outsl
aaa
xchg
mov
pop
popa
mov
xor
push
sbb
scas
cmp
lods
icebp
pop
stc
fistps
adc
loop
pop
xor
jno
ljmp
cmp
daa
dec
add
or
dec
sbb
arpl
xchg
xchg
fs
stc
movsb
push
insl
out
xor
in
lea
cmp
aad
js
and
cmp
adc
mov
roll
stc
adc
lcall
int
jo
fidivrs
int3
inc
xorl
jle
lock
xchg
or
rorl
adc
outsl
mov
daa
jb
fcmove
test
popa
fnstenv
add
mov
xor
or
in
jb
or
mov
sub
sbb
aas
push
xchg
cltd
cmp
subl
mov
iret
jmp
shrl
inc
add
aam
cmp
pop
xor
sbb
fs
adcl
sbb
jae
push
mov
cmp
xchg
nop
loop
into
add
into
bswap
xchg
rcll
mov
push
mov
push
insl
aas
scas
mov
mov
inc
xor
sub
ret
lods
cld
aam
dec
mov
pop
fs
cmovne
adc
jge
mov
movsb
mov
push
hlt
mov
test
loop
cmp
mov
pop
bound
test
jp
mov
aad
xor
fisttpll
andb
shl
js
jb
mov
or
or
cmp
ret
shl
mov
in
mov
cwtl
push
dec
fldl
out
pop
lcall
rcrb
mov
imul
stc
ror
cmp
je
jle
sub
inc
mov
sub
mov
mov
daa
xchg
inc
in
inc
fnstcw
push
push
jmp
pop
nop
aas
add
int3
adc
dec
xlat
pop
sub
pop
pop
dec
jae
bound
jg
gs
sub
xchg
pop
imulb
push
pop
shrb
pop
scas
aaa
dec
pop
iret
jo
clc
insl
dec
pop
je
mov
repz
mov
das
push
lds
out
data16
xchg
out
ja
notb
adc
jecxz
mov
je
out
lea
scas
stos
stos
mov
dec
mov
push
popa
fldcw
push
mov
outsl
fcomip
inc
sarb
fcoml
movsl
mov
test
mov
mov
push
add
or
xchg
cmp
lret
icebp
in
mov
lods
into
adc
jmp
jno
scas
inc
in
mov
mov
ljmp
add
sbb
lods
ds
lods
push
and
cmpsb
cwtl
sub
rcl
inc
mov
lret
pusha
push
lahf
push
sbb
xor
cmc
sub
sbb
popa
fs
cmp
arpl
lock
ficompl
jecxz
mov
arpl
lea
add
xor
divb
dec
test
lret
pop
lods
mov
call
subl
stos
lods
lea
sbb
repz
mov
sbb
cmpsb
mov
jge
ds
cmpsl
aaa
cs
mov
cmc
mov
cwtl
push
push
cltd
sti
cwtl
int
stos
xor
cs
mov
xchg
fcom
dec
jmp
repz
sbb
push
push
enter
ds
pop
mov
and
adc
push
divb
pop
adc
movsl
addl
add
dec
imul
xchg
inc
dec
aaa
sbb
xchg
or
jnp
mov
jge
fwait
sbb
push
jle
jo
icebp
xorl
loopne
iret
arpl
cmp
test
lahf
loopne
cmp
dec
pop
inc
sarl
pop
mov
sub
aam
outsb
cmp
ficoms
jmp
dec
jnp
imul
or
mov
idivl
jne
mov
push
xchg
push
sahf
addr16
std
scas
and
or
addb
lods
roll
aad
and
pop
cli
daa
scas
dec
cmpsb
in
xor
lcall
mov
jp
adc
xor
mov
out
rcl
add
popa
rolb
add
jge
inc
xor
or
inc
test
jmp
mov
xlat
stos
addl
add
fdivrs
mov
push
push
ja
fstpl
sahf
repnz
mov
mov
dec
pop
sarb
iret
jo
or
sahf
scas
jns
subb
sti
lret
or
adc
out
adc
mov
pop
add
mov
or
xor
xchg
fcmovnbe
cs
cwtl
into
insl
and
in
adc
push
movsb
movsl
mov
das
xlat
mov
loop
fs
jg
cmc
ja
dec
loop
int
jb
xchg
xlat
and
xchg
dec
mov
lahf
xchg
jge
sbb
cmp
sbb
pop
xor
daa
movsb
push
mov
ret
enter
mov
jae
lahf
je
in
sub
daa
lock
mov
das
out
in
out
lret
test
xor
xor
mov
jge
inc
lods
fwait
mov
mov
cmp
adc
push
pop
mov
jg
movsb
dec
pop
bound
rcll
std
mov
jmp
loope
inc
ret
pop
mov
fldl
popf
pop
and
mov
pop
dec
cmp
js
or
in
setns
stc
adc
dec
cwtl
jecxz
mov
and
inc
inc
mov
or
lods
shl
mov
aam
xor
sbb
ror
mov
adc
iret
push
test
stos
jp
sbb
adc
add
stos
pop
push
sahf
dec
and
and
xchg
sarb
mov
inc
stos
inc
mov
mov
icebp
lret
dec
leave
mov
pop
mov
inc
jge
xchg
push
loopne
cmpsb
push
scas
jno
jle
xchg
mov
mov
leave
leave
sub
sub
push
push
pop
jp
arpl
fmull
mov
out
inc
sub
int
mov
sbb
fisttps
mov
inc
stc
cmpsl
xlat
aas
cwtl
scas
js
outsb
imul
mov
xlat
out
loope
pop
or
push
xchg
xor
out
subb
mov
pop
pusha
inc
std
jge
xchg
jle
sbb
ljmp
insb
push
push
dec
int3
divb
roll
nop
inc
fwait
push
adc
dec
adc
dec
scas
lret
movsl
loop
mov
ror
or
sbb
xor
mov
push
ror
mov
push
gs
in
xchg
lods
mov
sahf
add
mov
jne
sbb
in
mov
lds
mov
repz
mov
call
sbb
fs
cmovs
push
stc
and
jns
pushf
cwtl
pop
and
mov
fsubl
dec
in
repnz
faddl
mov
inc
enter
fndisi(8087
das
inc
scas
fwait
cli
sbb
cmc
movsb
dec
and
mov
cmp
add
arpl
aas
in
pop
movsl
sub
mov
sbb
push
add
push
inc
add
adc
pop
lods
mov
pop
int
je
test
add
jne
or
dec
aas
and
ret
scas
test
push
je
js
cli
ja
or
jnp
mov
out
jl
data16
sbb
jg
or
or
imul
add
sub
mov
hlt
popa
jno
mov
or
jbe
push
sbb
pop
aaa
in
shll
sub
outsl
js
lret
cld
ja
adc
jge
add
or
inc
dec
mov
scas
mov
cwtl
xor
sub
movsl
test
ret
adc
in
fisubrs
ss
movsb
pop
cwtl
pusha
sub
loope
jns
jecxz
movsl
rcrl
outsl
aaa
sub
pop
adcb
das
iret
xor
aaa
adc
xor
out
jnp
cmp
aas
test
xchg
add
sbb
mov
and
add
lea
js
mov
mov
jb
inc
fs
in
arpl
lds
sbb
outsb
aas
enter
popa
aad
and
and
fcmove
cs
fidivrl
addl
insl
push
int
inc
pop
add
sub
cmpb
jle
adc
dec
cmp
jns
xchg
sub
nop
sbb
xchg
sub
rorb
ret
out
push
mov
mov
aam
pop
dec
add
shr
sbb
popa
mov
adc
sti
leave
xchg
and
add
popa
shll
idivb
fwait
imul
lock
dec
xchg
lods
arpl
xchg
mov
add
lea
xor
sbb
dec
sbbb
pushl
xlat
insb
test
jne
ret
jne
adc
test
sub
cld
xchg
push
and
push
inc
mov
ss
cmp
xor
mov
dec
mov
jne
es
mov
cmovbe
dec
xchg
fisubl
cmc
roll
inc
push
pop
int3
sub
repnz
xchg
add
xchg
dec
mov
jbe
and
test
mov
je
xchg
out
int
pop
call
sub
cmp
sbb
sbb
or
movsl
sahf
pop
orb
mov
sti
in
jo
cmpsb
mov
int3
add
in
sub
pop
mov
fistpll
fwait
sbb
in
fwait
inc
add
cmp
scas
pushf
aas
jne
dec
dec
test
xlat
cli
ret
addr16
imul
std
push
xchg
adc
imull
mov
xchg
mov
dec
sbb
add
push
add
sub
mov
cmpsl
dec
subl
pushl
in
cmp
shlb
jb
mov
cs
jae
jg
add
mov
or
inc
sahf
cli
cmp
lods
sbb
out
xor
outsl
and
cwtl
xlat
idiv
push
pop
jns
aaa
sub
shlb
mov
sti
popf
jge
out
mov
push
rorl
add
mov
lock
aas
xchg
cmp
pop
push
fiaddl
sub
insl
inc
test
push
mov
jb
lcall
push
sub
or
xchg
cmp
test
and
jp
ss
popf
xchg
sub
inc
sti
test
pop
jmp
pop
push
mov
scas
imul
stc
clc
inc
out
gs
sub
ja
out
cld
out
outsl
sub
movsl
aas
lods
push
pop
push
arpl
fwait
mov
mov
or
ja
dec
mov
cs
lahf
push
cmpsl
sub
in
shrb
or
pop
lods
mov
sub
mov
sahf
int3
pop
jg
mov
jb
dec
mov
mov
mov
std
sbb
jne
mov
cli
mov
ret
mov
push
lret
aad
push
sub
aad
jg
mov
inc
xor
adc
std
push
int3
pusha
sahf
into
out
push
sbb
push
call
inc
pop
mov
mov
xchg
pop
push
adc
cmp
or
pop
cli
iret
into
and
push
xor
jg
add
fucomip
aaa
jne
rolb
lock
jg
inc
je
xor
test
push
iret
sbb
and
and
and
sbb
cmp
dec
test
push
in
cmp
ret
scas
rclb
gs
mov
sarb
fdivrs
daa
pop
mov
iret
aad
in
mov
imul
jl
and
push
test
iret
aaa
jno
das
inc
clc
out
inc
dec
sub
cmp
sub
je
loope
adc
push
stc
pop
mov
sbb
movsb
ja
cli
dec
dec
pushf
pop
das
mov
mov
xchg
mov
mov
inc
pop
cmp
cmc
imul
push
push
and
mov
jnp
das
stos
cmp
outsl
sub
popa
loop
sub
jne
aad
pop
jns
sbb
ss
dec
or
outsb
inc
fnsave
das
or
pop
sub
dec
roll
fldcw
movsl
pop
push
and
fnstcw
mov
fcoms
add
loope
adc
cs
jg
push
xchg
dec
movsb
add
les
ss
lar
xchg
data16
pop
pop
rolb
pop
int
repz
and
popa
inc
sbb
mov
lock
mov
sub
data16
cpuid
movaps
adc
int3
pop
aas
xchg
mov
jno
jecxz
sbb
jmp
mov
unpcklps
inc
in
mov
rcll
mov
push
setl
stos
outsb
push
push
jno
rcl
dec
dec
push
pop
cmpsb
xchg
lods
cmp
pop
mov
mov
loope
xchg
das
inc
imul
xchg
pop
movsb
out
sub
xchg
xor
outsl
pop
stos
repnz
push
mov
ret
dec
mov
sub
bound
iret
sahf
pushf
mov
and
sbb
out
or
or
scas
mov
outsl
outsb
in
mov
mov
jecxz
scas
sub
jnp
xchg
jns
mov
mov
sub
jp
add
clc
mov
dec
inc
ret
loope
sbb
pop
clc
mov
fwait
xor
ss
arpl
mov
push
jge
out
xchg
cltd
add
cltd
pop
push
out
imul
mov
ret
repnz
mov
mov
mov
xor
cmp
aad
shlb
fdiv
test
xchg
push
ds
imul
lock
mov
out
cmp
push
mov
xchg
lock
mov
add
loopne
das
pushf
push
mov
xchg
in
mov
inc
movsl
xchg
popa
cmpsl
std
out
in
dec
cmp
out
pushf
inc
mov
inc
inc
scas
sub
stc
pop
cs
mov
mov
mov
xchg
xor
sti
arpl
mov
add
and
clc
lds
insb
ljmp
movsb
js
popa
mov
pop
or
or
mov
popf
jo
and
pop
sbb
mov
inc
loop
shrl
outsl
mov
sub
mov
aam
dec
cmovnp
lret
je
mov
dec
mov
ss
push
cmp
fistps
jp
lcall
add
in
jp
sti
jecxz
mov
xor
sub
mov
fmuls
mov
sub
sub
ds
add
loopne
mov
ret
aad
sub
aad
push
jle
mov
push
mov
mov
mov
jecxz
ljmp
sub
jle
shrb
mov
adc
xlat
out
dec
sbb
in
hlt
xchg
int
jnp
movsb
and
into
ss
scas
push
jo
cwtl
imul
fmull
repnz
pop
dec
andb
jecxz
and
mov
loop
shr
imul
jge
sub
fsts
mov
out
fimull
dec
mov
sub
xchg
cmp
xchg
cwtl
incl
fwait
pop
sbbl
test
pop
jmp
in
daa
cmpsl
aas
inc
or
cmpsl
mov
lods
jmp
cli
adc
xor
jb
cmp
cmp
mov
arpl
lods
fs
dec
ds
add
addr16
sti
pop
adc
fwait
and
out
repnz
mov
sub
inc
lock
xchg
add
lea
inc
and
mov
stos
dec
popf
sub
fdivr
mov
iret
dec
push
shlb
pop
xchg
scas
push
fnstenv
jae
add
arpl
in
idivl
popf
mov
push
xchg
adc
sbb
sub
xchg
sbb
pop
addr16
xor
dec
add
dec
inc
mov
inc
lret
insl
cmp
cmpsb
repnz
add
xor
andb
xchg
or
mov
or
xor
fwait
dec
pop
mov
dec
imul
pop
cli
mov
bswap
jmp
shr
and
ret
jecxz
push
je
push
lds
aam
aam
pop
pop
pushf
inc
mov
fstpt
jg
sbb
inc
pop
mov
inc
add
ficomps
in
dec
cltd
jmp
cwtl
sub
or
sbb
inc
int
sbb
add
xchg
int
nopl
jno
push
inc
lods
in
pop
sar
push
jg
hlt
lock
neg
mov
ret
pop
dec
mov
sub
xchg
mov
test
sahf
bound
lcall
insb
xchg
dec
inc
cmc
xchg
pop
movsl
imul
imul
sub
sub
lcall
sarl
mov
mov
mov
out
fiaddl
mov
in
mov
pop
and
jle
mov
pop
mov
xchg
out
inc
pop
lcall
adc
or
pop
or
popf
mov
xchg
cmc
xor
sub
pop
rorl
pop
push
loop
dec
xor
int
into
push
jl
mov
xor
dec
ret
mov
fimuls
std
and
les
cmpsb
pop
and
inc
movsl
sub
add
cltd
dec
lds
inc
xor
mov
adc
inc
in
mov
aam
fwait
sub
stc
dec
fucomi
xor
cmp
movb
dec
loope
jbe
andb
cmp
ret
jbe
enter
nop
and
pop
adc
sarb
pop
or
je
sbb
testb
das
in
xchg
jl
insl
dec
aas
mov
ds
jmp
inc
int3
jae
icebp
fsubrp
fnstsw
mov
xor
push
inc
inc
pop
inc
cmpsb
adc
std
sahf
push
sub
sub
xchg
ja
out
aas
cmpsb
mov
mov
inc
outsb
mov
mov
cmpsb
call
lret
enter
lea
cvtpi2ps
xor
jecxz
iret
inc
stos
ja
dec
jl
sbb
dec
dec
pop
test
pop
sub
inc
lods
add
jns
pusha
mov
inc
mov
enter
mov
adc
test
sti
push
hlt
xchg
sub
jnp
shlb
add
xor
xchg
stos
daa
cli
ja
xchg
lahf
ja
mov
repnz
in
and
mov
jg
adc
jbe
aad
insb
add
test
and
inc
loope
xchg
mov
mov
scas
mov
mov
dec
stos
lret
cmp
movsb
divb
sub
inc
popa
or
push
fnstsw
dec
stos
insb
or
sub
push
cwtl
mov
flds
les
push
mov
jb
lahf
sub
and
push
push
and
inc
hlt
in
add
inc
sti
out
pusha
push
nop
xchg
sub
repnz
jae
push
push
jae
lret
sti
sub
std
or
ss
jns
call
arpl
int3
jbe
daa
jo
insl
jo
push
int
shrb
invlpg
pushf
shll
aas
push
mov
inc
ret
out
and
cmpsb
mov
cmp
pop
xlat
add
inc
mov
shlw
add
popa
sbb
xchg
cld
push
push
je
xchg
mov
sbb
int3
hlt
sub
adc
push
outsl
out
cmp
test
data16
das
jae
xchg
mov
rcrb
mov
cld
add
sbb
xchg
add
jbe
into
cmp
adc
cmp
dec
rolb
push
dec
dec
lock
jae
jb
faddl
mov
inc
ljmp
enter
mov
pop
jge
mov
std
mov
inc
decb
addr16
mov
mov
jmp
sbb
mov
adc
jo
enter
jge
sub
icebp
sbb
arpl
sub
hlt
or
in
call
or
aaa
pop
sarb
mov
inc
jae
xor
pop
dec
pop
call
dec
xor
mov
mov
mov
sbb
mov
adc
sbb
nop
dec
rcl
mov
push
ljmp
pop
and
lea
dec
clc
cli
dec
pop
inc
or
sbb
pop
sbb
divb
sar
rorb
xlat
imul
aad
jnp
popl
pop
push
pop
cwtl
std
sub
inc
and
out
mov
sub
and
sub
enter
sbbb
jo
ficompl
jae
cs
xchg
push
call
xchg
leave
jbe
cs
inc
and
aam
test
jb
into
outsl
bound
lods
scas
shll
aas
jno
mov
xor
adc
aad
inc
mov
pop
xchg
and
ret
xchg
lahf
leave
mov
ja
push
dec
cmpsb
add
sbb
or
xchg
push
dec
or
add
outsl
loopne
shlb
jb
and
xchg
lret
addb
inc
cmp
cld
in
enter
push
les
rclb
imul
les
outsb
push
aas
dec
push
xor
mov
inc
scas
pop
cmp
dec
int
fstpl
outsb
lret
in
fistl
xchg
outsl
xor
fisubs
push
pop
movsb
mov
add
push
test
mov
sub
aad
push
sbb
jae
add
mov
scas
add
dec
ret
in
lods
ds
icebp
stc
ljmp
mov
cmc
fidivl
jae
fisubl
fstp
cmc
fmulp
scas
inc
or
push
push
push
mov
push
in
outsl
inc
mov
push
mov
adc
mov
sub
add
or
jbe
popf
xor
xor
pop
fwait
shlb
imul
das
and
js
cwtl
adc
fisubrs
mov
int3
das
cmc
sbb
xor
push
movsl
pop
bound
xchg
ss
adc
shrl
call
cmpsl
cmpsl
sarl
pop
adc
lea
fwait
stc
fisubrl
mov
aaa
inc
and
jnp
dec
mov
xchg
test
decb
stos
adc
test
imul
cmp
popa
add
sub
xchg
cli
jl
xor
fimuls
and
cmpsl
sub
in
mov
fcmove
movsl
mov
jbe
jge
add
xchg
movsl
add
jmp
and
in
jl
pop
lahf
jbe
adc
sarb
xor
lods
outsl
cmp
test
pop
movsl
push
push
mov
pop
cmp
loopne
sub
adc
int3
mov
xchg
push
add
xor
movsb
fldcw
jo
or
adc
pop
cmp
dec
add
je
adc
cmpb
hlt
jmp
mov
add
add
ja
mov
sahf
cwtl
or
sti
sub
fisttps
adc
xor
dec
adc
gs
mov
inc
xchg
push
fimuls
movsl
push
test
xor
sub
sub
mov
xor
dec
and
insl
imul
xor
sub
lret
push
and
fs
jecxz
sub
adc
inc
cli
es
icebp
mov
push
or
or
sub
xchg
xor
cmpsl
push
push
fldl
sar
sbb
addr16
mov
jns
jo
sbb
mov
loope
adc
imulb
les
decl
aas
inc
fnstenv
movsl
xlat
jnp
sub
fisubs
mov
push
ja
inc
in
adc
cmp
add
or
adc
xchg
call
xor
pop
insb
nop
push
scas
jge
mov
jmp
iret
outsb
add
es
jbe
xchg
mov
pop
jbe
sbb
inc
cmp
cmp
cwtl
mov
fidivrl
loope
cmp
xor
pop
fiadds
push
mov
add
mov
std
or
xor
add
fstl
lcall
jmp
lea
xor
xchg
sbb
and
sub
mov
jne
dec
push
inc
xchg
inc
xor
jo
out
push
cmp
sahf
rorb
pop
mov
mov
or
inc
adc
sub
mov
jl
push
cmp
or
jae
repnz
push
fwait
pushf
ss
outsl
sbb
test
fisttpl
popf
dec
adc
push
mov
xchg
xchg
les
xchg
jmp
lcall
jecxz
xor
insb
fdiv
xor
mov
mov
jg
ljmp
sbb
xchg
sbb
insl
sbb
fs
add
imul
daa
shrl
adc
cmp
clc
pop
hlt
rolb
jmp
mov
lods
repnz
popa
lods
add
popf
inc
pop
xor
fstps
test
or
push
and
jle
mov
mov
sub
popa
mov
sub
or
jle
xorl
xor
xchg
fs
or
mov
dec
sti
mov
das
movsl
mov
movsb
mov
call
fidivl
push
std
or
push
ret
lret
sbb
mov
in
mov
pop
lret
leave
sbb
fs
ja
loope
bound
fistpll
cmp
shrb
mov
insb
std
ss
mov
push
icebp
mov
rcrb
movsl
and
aam
adc
jns
jecxz
or
fdivp
testb
pushf
jp
xlat
pusha
push
dec
pushf
pop
mov
pop
lahf
adc
jmp
loope
and
pop
mov
in
rclb
sbb
mov
and
push
sub
ds
pop
mov
ficoml
inc
mov
mov
sub
daa
ss
mov
aas
cwtl
mov
cmp
add
dec
pop
pop
test
repnz
cmpb
xor
sub
fsts
mov
xchg
sbb
lds
aaa
jae
pusha
mov
in
leave
jge
lods
adc
imul
dec
or
pop
xchg
jp
dec
sbb
cmpsb
les
test
dec
js
int
and
or
lcall
jo,pt
lock
jo
pop
inc
xchg
ret
fwait
adc
adc
repz
imul
dec
aam
imul
dec
dec
mov
cmp
xchg
cmpsl
push
push
testb
outsl
mov
movsl
dec
rcrl
and
bound
mov
cmp
fwait
sbb
mov
roll
aad
mov
mull
jnp
daa
cmp
sub
inc
loope
lret
shrl
mov
or
scas
jb
repz
fidivs
sbb
les
int3
push
inc
adc
nop
imulb
xor
adc
pop
inc
hlt
push
stos
inc
mov
pop
movsl
ja
sbb
jo
mov
popa
stos
pushf
stc
push
addr16
pushf
hlt
jge
xchg
outsl
mull
shl
add
inc
ret
or
js
jecxz
imul
sbb
iret
imul
les
in
cmpsl
push
mov
jge
cmc
jnp
xchg
pusha
mov
insl
ret
jmp
push
imul
mov
cmp
ret
xorl
mov
jg
loopne
out
pop
sbb
lock
shrb
and
xchg
fs
scas
repz
std
fwait
pop
push
ja
and
das
outsb
imul
mov
jg
jp
sbb
or
inc
xchg
xchg
ret
int3
popa
sub
adc
jecxz
imul
mov
or
repnz
fbld
mov
dec
test
dec
dec
xor
pop
lea
jbe
add
cltd
popa
pop
and
fcoms
das
fists
dec
xchg
aam
pop
xchg
sub
cmp
rcrl
rcrb
call
add
negl
ret
mov
testl
inc
movsb
sub
loope
xchg
out
cltd
mov
lahf
jmp
mov
fimull
mov
mov
add
addl
jbe
jo
pop
fdiv
or
mov
dec
sub
sahf
dec
mov
ret
mov
in
cmpsl
js
and
sub
pop
jbe
adc
pop
mov
pushf
pop
add
repnz
mov
and
aad
les
enter
sub
fwait
mov
adc
mov
xchg
ss
dec
in
lods
lods
jg
jbe
incl
xor
xchg
adc
imul
sub
outsb
int3
lea
enter
jbe
pop
dec
xchg
stos
push
add
int
xlat
push
xor
add
and
sahf
push
and
pusha
idiv
pop
jle
and
or
inc
jmp
or
adc
jmp
xchg
mov
popa
mov
scas
cs
nop
nop
jae
mov
shrl
pop
pop
cmp
inc
jp
leave
sarb
push
jmp
pushf
outsb
sub
call
sahf
js
andl
dec
xorl
mov
pusha
mov
or
pushf
cmp
pop
sbb
jmp
and
push
cld
aam
push
movsl
dec
and
jl
mov
mov
cmp
dec
cli
mov
and
xchg
das
sbb
push
xor
pop
pop
cli
add
cmpb
xchg
and
sub
push
mov
imul
shl
into
fisubrs
dec
jle
out
lods
jae
popa
sbb
cltd
insb
stos
mov
fidivl
cmp
xlat
scas
lret
lahf
movsl
sub
pop
rdtsc
mov
iret
ds
addr16
imul
data16
adcb
in
js
xor
lahf
addb
jb
and
bound
movsl
mov
movsb
loopne
xor
fistpll
push
adc
inc
loop
sub
adc
and
ja
lcall
or
aad
xor
and
jb
fstl
leave
push
adc
cmpsl
loop
cmp
rol
lods
cld
pop
incl
loopne
loopne
lods
filds
pop
adc
scas
cmpsl
test
ret
fcmovbe
ret
int3
sub
push
and
mov
adc
call
xchg
xchg
fcoms
out
lock
ss
sub
sbb
push
outsb
push
lods
inc
jnp
addl
sub
clc
int3
jno
imul
loop
add
inc
mov
leave
adc
inc
push
mov
and
sbb
aaa
mov
shll
scas
jge
push
imul
push
ss
add
mov
xor
mov
lods
mov
mov
test
icebp
pop
xor
js
mov
lret
fsubrl
scas
push
notb
inc
fdivp
ficomps
movsb
or
adc
jge
out
cmp
mov
ret
inc
popa
int3
sub
mov
sahf
lret
mov
cmp
stc
jbe
xchg
mov
cmc
cs
les
mov
cmc
sti
aad
in
fcoml
lcall
xchg
idivb
mov
xlat
int
dec
lock
insb
pop
cmpb
jle
iret
stos
cmc
leave
pop
dec
mov
mov
jno
xor
gs
jecxz
push
jge
cmp
and
push
sahf
cmp
jecxz
or
outsb
hlt
mov
adc
sbb
es
xor
or
cmp
in
inc
out
mov
scas
lahf
dec
xor
pop
mov
push
sub
or
repz
outsl
mov
xchg
aaa
enter
in
cmpsb
decl
loop
and
enter
xchg
dec
jle
mov
bound
jmp
adc
popa
or
add
shlb
data16
pop
arpl
cwtl
dec
xchg
jb
loopne
or
movsl
nop
repnz
jno
lds
cmp
xchg
pop
mov
cmpsb
inc
pop
mov
loopne,pt
in
cmpsb
loope
arpl
orl
rcl
aaa
mov
adc
bound
xor
scas
jbe
sbb
cmpsl
or
lods
sbb
xrelease
dec
jp
dec
pop
jns
je
hlt
lock
sbb
jbe
js
sub
stos
dec
push
or
ret
mov
dec
movsl
or
add
into
cld
mov
lret
dec
call
pop
xor
mov
daa
dec
mov
outsb
insb
dec
dec
loope
inc
js
xchg
das
add
push
jnp
aad
ret
dec
push
push
cwtl
call
dec
subb
jp
sti
js
out
fwait
fwait
repz
shlb
xor
scas
jne
lock
and
cmp
leave
dec
in
ds
inc
pop
jmp
out
cmp
xor
xchg
cltd
fcmovnu
mov
pop
push
ficomps
out
xchg
inc
shll
mov
cmp
sbb
or
ret
ljmp
mov
and
push
sub
in
sarb
jne
jge
iret
es
xchg
adc
ror
mov
mov
or
lret
lret
push
movsl
mov
data16
out
mov
pop
dec
pushf
aam
adc
and
aad
or
sti
sbbl
jo
xchg
sbb
inc
lock
fidivrl
mov
pop
mov
mov
xor
add
daa
xor
into
cli
pusha
xlat
add
sbb
repz
cmp
js
jo
dec
push
insb
mov
mov
pop
add
lea
jno
adc
enter
aam
fisttpl
jmp
out
les
cli
mov
aam
pop
gs
push
inc
inc
sbb
jno
insb
pusha
mov
pop
cmc
adc
xor
daa
nop
xor
loopne
sbb
int3
adc
test
mov
out
inc
adc
shll
push
adc
xchg
loop
mov
mov
lcall
call
dec
jge
jmp
or
jg
lea
aam
mov
xchg
jbe
std
call
add
push
int
fs
dec
push
insl
pushf
mov
jl
jb
scas
shrb
loope
scas
loopne
jle
call
cld
roll
loop
cld
mov
sub
mov
adc
subb
mov
dec
and
dec
jne,pt
xchg
test
and
xor
xchg
mov
adc
cmc
and
fucomi
xchg
repnz
popf
nop
sub
mov
jno
cli
mov
rep
sbb
daa
daa
testb
jbe
hlt
sub
cmpsl
mov
jmp
xchg
sti
sbb
mov
or
add
adc
in
adc
dec
and
imul
lcall
lock
mov
pushf
lahf
pop
ret
daa
mov
inc
popa
orl
push
lock
jo
dec
push
cmp
shr
das
filds
jno
lods
lods
cmp
pop
or
push
inc
loop
loopne
arpl
pop
dec
mov
inc
jmp
jne
xchg
gs
test
loopne
sbb
inc
dec
inc
movsb
negl
xor
test
pop
lds
adc
inc
test
mov
pop
into
jg
xchg
dec
ja
cltd
int
mov
cmp
sti
xor
push
iret
push
sbb
stos
jns
pop
mov
sub
fisubs
inc
lock
push
dec
inc
pop
lea
jge
arpl
mov
xor
sub
push
jb
adc
xorl
in
inc
xchg
ja
arpl
add
cltd
inc
mov
fwait
ljmp
shll
mov
shlb
and
jge
sbb
aas
pop
stos
inc
gs
in
cli
movb
xor
test
mov
jnp
adc
inc
mov
les
and
dec
aaa
sub
jno
sbb
jecxz
leave
cltd
mov
and
adc
pop
int3
and
xor
adc
push
scas
arpl
or
or
xlat
mov
jg
outsl
and
xor
shrb
push
pop
mov
mov
jo
push
jbe
mov
es
jnp
xchg
pop
aad
repz
mov
and
imul
push
sbb
cmpsb
xor
scas
push
sbb
popf
call
out
cltd
rcrl
fisttps
mov
daa
mov
and
or
inc
test
out
int3
adc
pop
and
scas
push
sub
cmp
hlt
out
aaa
dec
pop
jle
lcall
push
dec
mov
add
push
jno
sub
mov
out
mov
out
jg
and
lret
rol
cmp
xlat
mov
mov
stos
push
xchg
push
adc
cli
adc
enter
cs
cmpsb
lds
push
dec
xor
jb
or
sti
in
mov
cmp
and
fwait
call
mov
pop
incb
cs
ljmp
imul
xor
out
std
dec
cmp
lret
por
jns
leave
jg
xor
jo
xchg
xor
xchg
out
cmp
aas
or
mov
cmp
scas
scas
mov
sahf
mov
push
into
rorb
mov
push
and
xchg
and
pop
out
andl
pop
mov
xchg
xor
arpl
mov
sahf
jg
pop
sbb
mov
adcl
insb
jmp
aaa
lahf
or
mov
or
cmpsl
pusha
cmp
roll
cld
sub
loope
mov
pop
stos
data16
scas
add
mov
call
xorl
bound
inc
bound
addb
testb
add
pop
sbb
loop
mov
jo
xchg
iret
cmpsb
sub
add
cmp
sahf
pop
xorb
or
pop
inc
and
push
xchg
aam
lods
sbb
imul
push
mov
enter
inc
mov
dec
das
pop
lods
imul
popa
cmp
mov
inc
ds
imul
shl
incb
sbb
pushf
mov
or
xchg
popf
pop
ret
pop
call
xchg
nop
cmpsb
push
push
scas
shl
xchg
add
dec
into
xlat
or
dec
sbb
xchg
aad
cmp
nop
push
sub
mov
iret
and
scas
cwtl
test
sti
add
and
pop
inc
xor
add
inc
and
inc
jmp
ss
dec
mov
negb
pop
addr16
mov
mov
sub
cmpsb
into
aam
in
shlb
mov
rol
mov
sub
test
pusha
and
lock
movsb
sahf
adc
es
mov
cmpsb
add
popf
mov
add
mov
mov
cmp
jb
insl
pop
inc
jns
movsl
dec
fcoml
inc
popa
sbb
scas
inc
rcrb
ss
inc
out
shrl
movl
xchg
fisubrl
cmp
dec
mov
cwtl
xchg
popa
mov
orl
ljmp
out
adc
in
sub
pop
mov
xor
jecxz
gs
insl
xchg
cwtl
pop
addr16
loop
jne
in
mov
in
cli
add
mov
mov
push
ljmp
arpl
pop
lock
mov
dec
pop
push
mov
pop
rcll
clc
shrl
push
inc
call
out
setg
sbb
xchg
std
popa
popa
les
lcall
rorb
pop
stos
insb
xlat
adc
xchg
pop
mov
adc
rcr
inc
loope
pushf
not
mov
xchg
movsb
sub
or
sti
popf
mov
adc
sub
push
push
mov
jae
dec
jmp
out
pop
mov
lcall
mov
std
outsl
jp
mov
add
insl
int
repz
icebp
ljmp
pop
je
rcll
testl
inc
mov
or
lea
andl
xchg
pop
push
sub
mov
cmp
mov
inc
pop
push
jp
push
or
imul
mov
mov
mov
ds
test
loop
lods
stc
imul
xchg
cmp
enter
sub
sub
push
out
lret
lods
mov
daa
pop
insl
test
out
dec
mov
test
add
outsb
dec
mov
xchg
cmpsl
dec
or
jb
shrb
sbb
jecxz
jmp
stos
cmp
bound
sbb
xchg
sub
lds
mov
mov
adc
mov
push
add
xorl
or
xchg
sbb
or
push
jb
leave
adc
sbb
adc
shlb
cmp
mov
add
sub
lods
or
mov
add
lods
adc
pop
push
mov
int
jne
fwait
jle
testl
jbe
ds
sbb
push
fistps
mov
sbb
dec
sbb
lcall
or
enter
fs
sub
push
inc
lods
jb
into
pop
mov
ret
lock
or
pusha
std
mov
mov
std
pop
popf
jo
xchg
gs
loope
fisubrs
push
mov
xor
adc
jno
mov
fsubp
mov
clc
mov
cmp
inc
insl
mov
xchg
pushf
cmpsb
xor
aas
outsl
xor
rorb
fbstp
xchg
and
push
mov
ds
fisttps
sbb
adc
or
rol
jle
push
mov
cmp
aaa
lods
mov
out
cltd
push
subl
mov
or
add
inc
or
subb
mov
push
icebp
mov
mov
mov
fcomp
xchg
imul
stos
les
movsb
arpl
in
ds
sub
adc
sbb
push
pop
fwait
jbe
cmp
pop
je
cld
and
movsb
push
push
fmull
jne
cs
push
inc
or
popa
insb
pop
out
adc
cmp
pop
mov
dec
cmpsb
cltd
adc
cmp
push
scas
mov
push
fldl
arpl
dec
push
xchg
imul
cld
adc
mov
jbe
sbb
xchg
popf
xchg
xchg
es
sbb
mov
push
sbb
das
push
jno
fs
fdivl
xor
mov
push
bound
arpl
mov
mov
xchg
dec
xchg
repz
push
or
add
int3
cmp
ds
dec
sbb
pop
pop
mov
push
adc
or
mov
push
inc
pusha
lock
inc
inc
cmp
fbstp
fidivrl
ds
sub
mov
cmp
pop
pop
ljmp
pop
mov
xlat
mov
ds
jns
mov
sub
fiadds
push
sbb
pop
out
xchg
xchg
dec
mov
mov
sub
push
push
shlb
inc
jae
sbb
pop
jae
xchg
adc
dec
sbbb
sbb
cmp
push
push
xor
data16
cli
fwait
inc
jecxz
xor
lods
xchg
orl
setge
push
mov
push
mov
popl
cmp
clc
in
int
mov
xor
cmpsb
sub
xchg
test
jp
pop
jmp
mov
cmp
push
les
push
jns
mov
jl,pt
cmp
mov
sbb
jp
cmp
mov
mov
push
iret
mov
iret
or
or
push
insb
mov
insb
leave
vcvtdq2pd
iret
jns
ret
imul
loope
sbb
fcoml
ss
or
pop
xchg
test
add
inc
addr16
dec
dec
sahf
je
insl
push
ljmp
mov
gs
popa
imul
mov
lret
cwtl
adc
rcrl
xchg
dec
ret
xchg
xor
jl
pushf
xchg
fiaddl
mov
jge
test
stc
aam
ficompl
xchg
mov
mov
add
pop
les
mov
sarb
push
int3
cmpsb
in
and
les
bswap
bound
clc
imulb
lahf
ja
lods
pop
add
push
xchg
and
enter
outsb
fcom
icebp
repz
rorb
and
arpl
dec
ficompl
dec
mov
in
ja
aam
daa
fmul
out
jne
shr
sbb
pusha
mov
xor
cltd
faddl
gs
mov
inc
push
test
bound
sahf
and
dec
scas
je
fimull
sbb
inc
inc
repnz
daa
xlat
sub
xchg
stos
xchg
fisttps
sub
stc
cmp
cmp
jecxz
cmp
mov
outsl
and
cmp
inc
add
inc
frstor
aaa
xor
cmp
add
fsubs
in
fnstenv
mov
lods
loopne
mov
push
shll
int
inc
mov
popf
push
std
mov
adc
mov
inc
pop
repz
sbb
orb
mov
in
addl
stos
je
pushf
frstor
mov
sarl
popf
aad
jb
inc
mov
hlt
mov
mov
lcall
xor
mov
adc
outsl
and
pop
xor
cli
pop
ss
sub
popa
xor
mov
adc
in
repnz
ret
dec
fidivs
adc
pop
mov
fistl
cmp
jbe
imul
xlat
xchg
xchg
xchg
push
decl
mov
mov
fxch
imul
adc
lock
clc
push
dec
jp
lods
daa
jne
popa
dec
movsl
mov
xchg
loopne
in
fistpll
mov
cmpsb
lods
pop
push
jmp
and
xchg
popa
inc
aas
enter
dec
mov
lds
sti
sarl
mov
cli
mov
sub
mov
mov
or
mov
and
and
test
arpl
mov
xor
je
cmp
notb
xor
xor
sbbl
fs
aad
mov
lret
inc
imul
inc
mov
jb
push
mov
sub
out
or
mov
adc
shlb
xor
fbstp
out
lcall
rcll
aas
test
xor
mov
lock
jmp
mov
shl
jno
xor
lret
imul
adc
insb
fwait
pop
inc
loopne
outsl
and
aad
test
add
cmp
jmp
hlt
dec
xor
mov
sbb
je
inc
push
xor
cltd
mov
sahf
jnp
test
lea
push
xor
inc
dec
repnz
xchg
xchg
inc
je
adc
sub
add
mov
aad
push
push
hlt
cmp
lret
mov
xchg
and
adc
out
cli
shlb
lds
mov
pop
pop
add
loopne
out
les
aad
mov
sbb
jne
adc
or
imul
add
cmpsb
scas
insl
loopne
movsb
xchg
mov
cmp
stos
sbb
adc
insb
adcl
xor
call
pop
lcall
test
sub
add
pop
insb
mov
sub
inc
iret
std
imul
push
adc
mov
or
jecxz
imul
fprem1
xchg
inc
pop
sbb
outsb
ljmp
test
jp
mov
pusha
jne
xchg
orl
sub
in
leave
iret
hlt
incb
sbb
mov
fisubrl
cwtl
cmp
add
jb
ljmp
test
xor
lds
je
ror
shrl
addl
in
dec
repz
pop
enter
pop
push
add
push
pusha
and
dec
adc
push
and
pop
pop
or
loope
call
pushf
les
ds
xor
sbb
in
pop
push
mov
popl
sbb
shrl
pushf
lret
int3
in
daa
push
out
loopne
call
enter
cmp
jge
inc
out
jnp
enter
mov
cmp
jae
xchg
push
sub
mov
sahf
pop
enter
inc
dec
mov
call
mov
into
or
push
mov
jbe
jo
xlat
enter
xor
popf
pusha
das
mov
push
fxch
or
xor
push
sbb
mov
xor
xor
xor
and
mov
push
sbb
ret
inc
cwtl
jge
sbb
in
lds
cs
sarl
popa
call
xchg
add
mov
shrb
sub
push
stos
mov
test
push
add
mov
or
pop
jbe
xorl
mov
inc
gs
xor
cmpsl
mov
neg
xlat
jl
cmp
sbb
jnp
into
dec
push
mov
movsl
out
dec
push
jns
rolb
xor
fsubs
cmc
dec
imul
dec
addl
loop
mov
sahf
sub
loopne
xchg
mov
fst
mov
daa
pop
mov
hlt
loopne
daa
out
or
imull
adc
orb
cs
sbb
sbb
je
xchg
xchg
cmp
lods
enter
jmp
ljmp
mov
sbb
aam
inc
mov
ret
ss
je
or
push
aam
in
cs
dec
arpl
imul
aaa
sbb
stos
jno
sahf
jle
add
dec
adc
test
sbb
push
pop
push
outsb
ds
ja
mov
mov
into
cld
and
popf
adc
out
paddd
or
xchg
inc
push
jae
xor
sub
fisttpl
das
out
out
les
rorl
lgs
mov
sub
pop
in
fmulp
fucomp
add
push
cmpsl
les
mov
or
addr16
cmp
cmp
test
in
ljmp
adc
mov
loope
push
ret
ficoml
jmp
xor
mov
cli
and
and
push
add
iret
pop
out
pushf
and
lcall
lock
cli
shlb
fstpl
sub
loope
lea
jno
je
pop
arpl
loopne
inc
nop
lea
mov
and
xor
iret
xchg
push
jbe
aas
insl
sub
add
and
mov
mov
pop
sub
pop
push
cli
fnsave
out
ret
aad
call
pop
sbb
mov
pop
push
cmp
mov
jno
pushf
ss
fmull
fstpl
sub
sbb
loop
mov
mov
jb
add
out
cs
std
dec
dec
dec
lcall
stc
xchg
and
push
pop
je
pusha
pop
push
xchg
addr16
inc
jb
adc
fisubs
pop
pop
cmc
shr
repnz
mov
mov
mov
jne
mov
dec
sbb
ja
jb
stos
iret
and
repz
mov
mov
sbb
pop
add
jae
std
and
push
jle
decl
in
sub
fldl2t
fstpt
mov
loope
je
mov
push
pop
fsubrl
jg
push
push
jg
cmpb
and
out
and
rcrl
xchg
sti
sbb
adc
xor
xchg
dec
daa
cmpl
adc
shl
xor
mov
sahf
mov
fdivr
stc
insb
sub
xchg
lods
jecxz
sbb
mov
int
or
or
jecxz
in
aaa
outsb
outsb
pop
int3
add
mov
inc
mov
div
cmp
sarl
inc
mov
mov
and
add
jl
dec
dec
ja
rcll
push
cmc
xchg
jb
cs
shlb
aaa
xchg
int
sub
stos
jle
inc
pop
lods
pop
in
sbb
xor
fcom
or
test
int
gs
int
jmp
adc
lcall
mov
sub
mov
adc
icebp
lcall
sub
sub
call
enter
scas
cmp
idivl
sar
fildl
push
xor
shrb
adc
add
pop
add
xor
xor
out
rolb
jns
mov
jno
aad
ret
stc
int3
mov
and
or
push
sbb
and
fsqrt
icebp
push
in
pop
xlat
arpl
les
adc
ret
fwait
push
imul
cmpsb
lret
xchg
jle
adc
mov
mov
or
jl
push
ja
xor
jge
rcr
jmp
lods
test
in
test
sahf
lock
fstps
cmp
push
mov
ret
jmp
nop
fists
sahf
aad
jae
sbb
data16
sub
test
sub
movsl
sub
rolb
cs
adc
mov
fwait
sbb
mov
mov
dec
ss
stos
aaa
and
inc
add
sub
movsl
adc
inc
xchg
adc
fsubrs
testl
and
rorb
pop
pop
mov
xor
or
enter
mov
jae
xor
jg
mov
mov
in
loope
out
aas
push
xor
and
add
mov
dec
and
in
sbb
sbb
xchg
adc
lock
and
push
jno
lock
add
inc
out
xor
xchg
aam
nop
adc
fwait
add
inc
xchg
rorb
out
push
sbb
out
sub
inc
push
mov
add
cwtl
fistps
cmpsl
mov
aas
sbb
fs
jle
adc
gs
enter
negb
inc
int
mov
pusha
or
cltd
mov
mov
inc
retw
dec
lret
sub
shlb
mov
lods
or
fstcw
stc
and
inc
clc
mov
push
repz
jge
inc
pusha
sbb
mov
dec
xor
fs
outsb
enter
mov
aas
push
pop
inc
add
rorb
jecxz
push
lods
insb
pop
fidivrs
add
call
xor
jmp
and
sbb
add
repz
cwtl
imul
xlat
fwait
adc
insb
pop
xchg
repz
test
shlb
dec
clc
fbld
sub
jp
xchg
ja
out
jmp
out
aaa
mov
shrl
inc
movsb
pop
mov
addr16
xchg
sbb
and
cli
mov
lret
stos
adc
jns
lret
mov
jp
pop
inc
mov
adc
cmp
stos
hlt
jo
outsl
mov
je
mov
add
pop
loop
add
jmp
pop
cmp
lods
mov
mov
push
stos
push
sub
sbbl
inc
addr16
ljmpw
adc
insl
fdivl
jp
or
out
jno
cmp
mov
mov
test
mov
mov
sbb
hlt
xchg
or
clc
mov
mov
mov
fnsetpm(287
icebp
sbb
xchg
pop
scas
in
fs
sub
and
fwait
lods
xor
mov
lods
add
test
test
fisubrs
ret
adc
sti
and
adc
inc
or
xlat
or
ret
out
inc
sbb
in
dec
xor
cmp
pop
mov
ret
repnz
pop
jg
popf
lods
addr16
dec
loop
bound
mov
js
popf
jae
adc
aas
jecxz
loope
nop
or
sub
xchg
or
dec
xlat
negb
add
add
or
push
push
jg
dec
dec
cmp
and
test
scas
cmpsb
insb
xchg
out
jecxz
sub
fwait
mov
mov
mov
sbb
mov
sbb
add
lods
pop
dec
adc
incl
pop
jge
scas
inc
cmpsl
mov
sub
jb
imul
add
jae
rcrl
out
scas
adc
mov
adc
mov
mov
fidivl
aam
jge
pop
insl
cmp
cs
jle
test
pop
rorb
jmp
dec
inc
sub
pop
mov
xor
pop
pop
sti
sbbb
mov
es
daa
adc
lods
adc
outsb
mov
cmpb
sub
inc
inc
lods
jge
fiaddl
das
scas
insb
jne
cld
or
jnp
xorb
adc
test
jb
test
lds
lock
dec
jmp
sub
test
inc
sub
push
loope
cmc
sbb
dec
or
scas
out
add
rclb
rcll
rcrl
push
adc
in
jge
ljmp
shrb
cmp
push
jge
jle
jmp
pop
jne
cltd
dec
push
cmc
dec
jbe
into
jecxz
jne
sbb
addr16
or
frstor
or
movsl
fimuls
jns
cmc
xor
xor
loop
loopne
outsl
pop
or
pushf
mov
xchg
sub
test
cmpb
punpckhbw
xor
aas
jge
js
int3
or
xchg
mov
repnz
mov
ds
add
js
cmc
jle
lahf
cli
inc
push
dec
pop
les
or
push
jbe
popf
sbb
nop
arpl
jp
sbb
cmp
fiaddl
jmp
out
ret
imul
scas
decb
dec
es
push
xchg
andl
popf
leave
std
stc
push
push
or
jmp
pop
cmpsl
gs
cs
loope
insl
gs
jns
sbb
in
lahf
aad
addb
in
cmp
mov
pop
ret
jg
cmp
test
cmpsl
popf
or
xor
lret
xor
push
mov
mov
pop
adc
jnp
popl
pusha
sbb
sbb
ret
mov
mov
mov
dec
ret
and
sub
imul
xchg
add
cmp
shl
cmp
pop
fidivrl
pushf
mov
lret
xchg
int3
and
movsb
into
pop
imul
and
dec
sub
push
std
add
jl
ja
xchg
cmp
mov
and
gs
repz
jg
add
xor
sbb
cwtl
jae
js
sub
add
xchg
ficomps
xchg
dec
fstps
pop
into
dec
lods
outsl
shl
int
aam
out
mov
aad
aaa
daa
ret
int3
cli
test
or
dec
dec
jle
push
sub
push
popa
push
push
cmp
pop
bound
add
lcall
cmpb
ja
xchg
adc
or
push
dec
and
call
aam
adc
adc
sub
gs
out
jbe
and
jge
jbe
addr16
jl
inc
je
sbb
std
ret
call
and
and
and
outsb
mov
repnz
clc
inc
faddl
mov
into
inc
sub
imull
mov
mov
xor
add
shll
xchg
lea
mov
cmp
cmovne
ds
stos
push
ror
jge
xor
into
int3
das
add
dec
aam
mov
shl
mov
hlt
fnstsw
adc
rcrl
inc
jae
out
xor
cmpsl
stc
pop
inc
pop
xor
adc
add
hlt
and
sbb
mov
mov
mov
lods
stos
add
cli
das
and
sub
push
jne
pop
test
pop
sbb
inc
cmc
idivb
in
aad
out
add
fstl
aam
in
xchg
sub
mov
push
mov
clc
cmpb
sbb
xor
and
sahf
orl
cmpsl
xor
lret
movsl
insb
sti
out
or
stc
dec
adc
out
push
mulb
xchg
gs
xchg
arpl
sahf
and
dec
js
aas
cmp
cmc
repz
test
mov
mov
rcl
les
daa
xchg
pusha
leave
stos
and
out
stos
xor
push
cmpsl
dec
sub
xor
xor
jl
xchg
xor
dec
push
repnz
or
adc
test
shr
ja
fcoms
mov
cmpsl
test
jbe
insl
packuswb
sbb
mov
faddl
mov
ret
inc
xor
inc
sbb
fsubs
test
cmp
iret
jp
jo
and
inc
test
lahf
add
pop
xchg
adc
inc
cmpl
inc
xor
shrb
inc
sbb
xchg
xor
add
aam
dec
cwtl
adc
xchg
enter
repz
jnp
and
jl
icebp
fildl
push
sub
daa
xor
xchg
push
in
mov
cli
or
shlb
mov
into
mov
cmp
dec
xor
enter
outsb
in
scas
pop
enter
hlt
jb
mov
inc
adc
test
std
and
xor
rorb
pop
mov
xor
out
sbb
gs
cltd
in
push
cld
push
call
ss
fadd
sbb
jo
loopne
aam
inc
pop
add
pop
and
fistps
adc
fstpl
xor
roll
dec
cmpsb
lods
ret
push
das
sub
and
and
mov
sbb
push
dec
xor
mov
jno
nop
cmpsl
int3
cli
nop
cli
adc
xor
dec
jnp
nop
pop
push
jmp
fisttps
nop
and
dec
lret
or
ss
movsb
jle
adc
lods
repnz
insb
sub
cmpsb
jmp
or
push
sub
cmp
push
jb
aas
dec
mov
pop
fisttpl
dec
pop
inc
push
dec
and
bound
mov
scas
sbb
lock
cmp
bound
xchg
push
adcl
int
out
add
jl
lock
sub
ds
notl
inc
cli
ljmp
mov
or
adc
in
popa
jle
mov
movsl
dec
fstl
push
addb
jle
test
or
cs
push
cmp
hlt
int3
adc
inc
inc
fisubs
loopne
pop
shlb
popf
cmp
xor
movsb
rcll
and
push
mov
xor
pop
mov
cmp
jno
pcmpgtb
pop
push
pop
jecxz
fistps
mov
push
cmpsb
mov
sub
xlat
add
es
test
add
pop
push
sub
xor
add
lcall
movsl
fsubs
jae
push
push
in
lock
shr
repz
scas
aaa
or
loopne
in
aad
push
testb
fmul
pop
repz
jle
add
add
and
push
je
add
jecxz
into
stos
mov
inc
lret
pop
lcall
sbb
in
fldt
call
pop
outsl
shrb
hlt
jp
and
push
popl
les
dec
daa
push
add
xor
pop
mov
jne
xchg
ljmp
push
pop
pushf
jl
fidivl
push
sbb
jmp
out
test
or
mov
mov
sub
call
nop
cmpsl
ret
aad
loopne
jbe
xor
mov
inc
xchg
cli
cmp
sti
icebp
clc
mov
pusha
pusha
in
mov
cmp
popa
dec
out
mov
fcoml
aaa
jnp
out
xchg
je
dec
popf
mov
out
je
je
jne
xchg
mov
fildl
repz
add
pop
xor
mov
cltd
aaa
aad
mov
leave
adc
pop
mov
pusha
jns
adc
sarb
je
cmp
fcoml
pusha
add
inc
xor
lret
mov
int3
xor
inc
out
movsl
jle
cs
sbb
fwait
pop
in
pop
and
jno
pop
add
jp
xchg
arpl
mov
movsb
mov
das
pop
cmp
xchg
in
mov
mov
xchg
movsb
or
je
mov
stos
addb
loopne
mov
dec
enter
fucomp
aad
and
xchg
insb
jecxz
mov
adc
pop
or
mov
mov
lahf
jp
inc
dec
rorb
pop
pop
mov
or
nop
cmp
mov
cmp
das
push
fs
ficomps
lahf
sub
push
inc
lods
mov
push
jnp
dec
sti
sarb
push
popa
push
add
sbb
jmp
adc
repnz
mov
mov
jnp
loop
xor
jl
mov
mov
sub
rolb
mov
test
mov
sbb
jge
testb
cmp
fldcw
pop
lea
fnstcw
pop
cs
push
repnz
or
js
andb
mov
stos
mov
enter
lods
jne
adc
pop
cmp
mov
push
sbb
and
fistl
or
popa
mov
mov
jmp
xor
fisubs
cmp
mov
js
test
jmp
xor
add
inc
pop
cmpsl
jle
repnz
out
lret
test
and
inc
addr16
rcr
pop
add
adc
add
adc
ljmp
movsb
out
or
mov
pop
mov
sub
push
push
mov
mov
push
dec
inc
sbb
sbbl
fidivl
and
sbb
scas
jnp
lods
cwtl
xor
dec
test
in
push
sahf
test
xor
je
or
mov
jae
pop
in
in
int3
pop
mov
ja
popa
and
aad
or
jb
bound
aad
xchg
add
lods
sahf
mov
dec
pop
ficomps
insl
leave
mov
cmp
mov
or
xchg
clc
daa
ret
dec
cmp
outsl
mov
dec
call
dec
not
sub
fdiv
out
sti
sub
cmp
imul
fstl
out
xchg
lahf
leave
pop
fwait
orl
jg
rorb
xor
idivl
xchg
adc
cmpsb
adc
mov
dec
inc
inc
aam
mov
pop
nop
sub
loopne
pop
loopne
inc
cmc
repz
add
sahf
jp
mov
mov
gs
ror
pusha
gs
dec
rcr
sbb
push
pop
jb
xchg
test
xchg
gs
cmpsl
stc
adcb
iret
mov
or
mov
or
and
mov
in
hlt
sub
mov
jb
jno
pop
aam
or
add
add
andb
daa
sbb
in
ficoms
out
out
stos
sub
sub
xor
pop
mov
pop
mov
adc
in
cmpsb
stos
jp
dec
je
push
cmp
and
imul
imul
or
movsl
mov
sbb
ret
jmp
aaa
inc
mov
std
or
mov
shll
test
adc
adc
js
sub
loop
fsubrl
and
add
out
mov
in
sbb
jae
sbb
nop
data16
call
push
call
xchg
in
out
sbb
in
jo
pop
jg
push
xor
mov
sbbb
adc
jmp
mov
pop
push
jne
addr16
pop
lcall
adc
mov
mov
jo
adc
faddp
cmp
fucomip
sbb
add
cld
xor
inc
mov
inc
or
lods
push
popa
mov
jne
add
sub
mov
push
dec
mov
xlat
push
mov
jne
jmp
mov
xchg
fwait
cmpsb
xlat
ret
test
cmp
ljmp
aaa
movsl
dec
xchg
adc
push
sbbb
xor
sub
es
lret
arpl
adc
jecxz
xchg
push
cmp
nop
psubsw
in
test
stos
std
jp
call
mov
sub
rcrb
sub
repz
mov
js
fldcw
inc
lods
es
adc
fucomi
stos
mov
leave
js
mov
mov
cmpsb
xor
loopne
repnz
and
aam
pop
out
pop
jnp
clc
out
ja
sub
int
or
lcall
ret
sub
or
popf
mov
dec
xchg
mov
icebp
push
mov
enter
xor
pop
cli
fcoml
arpl
pushf
into
out
sarl
in
dec
push
pop
and
fists
push
sub
sbb
mov
hlt
in
bound
loope
aam
and
insl
mov
jns
hlt
mov
adc
pop
mov
mov
outsl
lahf
mov
cmp
xchg
idiv
mov
adc
repz
sbbl
xchg
rol
lds
mov
pushf
push
mov
pop
jb
les
ds
pop
mov
fsubs
mov
xchg
mov
scas
push
pop
xchg
xchg
xchg
sub
cmpsb
mov
icebp
sbb
mov
addr16
into
cs
leave
data16
push
in
cmp
ja
fisubs
shll
push
ret
jbe
jmp
les
je
inc
xor
ret
add
out
xchg
jbe
stos
fdivrl
fldl
add
iret
mov
dec
push
xchg
enter
xchg
imul
sbb
insl
pop
cli
jl
dec
in
sbbb
loope
aad
idiv
inc
inc
ljmp
and
pop
push
mov
lret
arpl
ret
xor
sub
mov
ss
cwtl
into
or
mov
cmpsl
mov
dec
fistps
jmp
scas
cwtl
xor
jmp
jae
mov
sbb
cltd
sub
jmp
mov
xor
outsb
jnp
push
sub
enter
in
fwait
mov
and
mov
xchg
sbb
bound
xchg
xchg
xchg
lods
push
cld
xchg
jne
cmp
ffreep
jbe
lods
pusha
in
rorb
inc
adc
add
dec
out
ss
lcall
mov
push
sub
fcmove
pushl
xchg
fsubr
fidivs
idivl
in
movsl
mov
xor
int3
int3
and
or
add
cmpsl
jle
mov
negl
or
insb
mov
push
pop
lds
loopne
ljmp
pop
daa
addl
stos
cmp
into
sahf
xor
jp
fwait
push
loopne
cmp
add
pop
push
mov
subb
sbb
lds
push
sbb
add
faddl
out
mov
sahf
adc
mov
cmc
fwait
add
sub
fidivrl
adc
sahf
fisubs
pop
mov
inc
mov
push
aas
std
xchg
cld
loope
es
out
cmp
jo
sarb
daa
push
mov
roll
mov
jecxz
notb
ss
adc
pop
int
mov
lret
xor
out
sti
mov
or
or
adc
imul
leave
inc
push
add
sub
xchg
pop
out
imul
ja
jecxz
out
push
filds
es
mov
faddp
mov
rcl
sbb
jge
cwtl
cld
jb
jecxz
push
hlt
xor
mov
repz
sbb
adc
mov
jle
mov
jge
sbb
loope
cmp
pop
test
fnsave
ljmp
push
cltd
shll
sub
rcrb
fs
mov
lahf
push
fwait
scas
and
sbb
lods
fnstsw
imul
ljmp
js
mov
sti
test
divl
in
mov
repnz
push
mov
notb
xchg
jl
or
fwait
pusha
inc
stc
adcl
cmp
ror
fisttpl
or
pop
pop
imul
rcl
push
mov
jns
cmc
jmp
out
pop
loope
cmpsl
mov
adc
enter
adc
std
pop
shlb
sahf
or
mov
and
lret
sahf
ds
mov
in
mov
mov
fcoml
or
repnz
jge
int
lds
into
mov
pop
dec
mov
cmp
pop
pop
test
mov
daa
mov
icebp
sbb
push
jne
sbb
xchg
ljmp
jns
mov
cmovge
and
xchg
mov
or
jg
dec
add
adcb
outsb
cmp
lea
pushf
mov
sbb
or
lea
mov
test
or
inc
mov
xchg
xchg
movsb
repnz
xor
or
aaa
mov
icebp
out
pusha
xor
xchg
lods
or
xchg
jo
cmpsl
dec
shlb
inc
adc
idivl
insl
add
std
mov
xor
ss
into
inc
leave
mov
xchg
loope
ror
inc
and
out
inc
fsubrl
mov
insb
push
mov
cmp
icebp
xchg
pop
add
mov
jg
insb
push
inc
filds
jns
adcl
sub
leave
cwtl
pusha
cmp
add
aam
xchg
mov
out
ljmp
loope
inc
push
mov
sub
out
in
mov
adc
cmpb
arpl
sub
mov
ficoms
icebp
inc
cmp
mov
xor
sbb
sbb
jne
adc
hlt
sub
lret
jle
movb
mov
jnp
icebp
xchg
and
sahf
imul
xor
xor
mov
xchg
xor
sub
jmp
mov
rol
push
cmpsb
adc
pop
adc
sub
or
sti
pop
adc
dec
mov
out
dec
jno
jp
sbbb
rcrb
inc
xchg
mov
addr16
and
add
add
cmpsl
scas
or
adc
jne
icebp
jg
xchg
dec
fisubl
out
cli
jmp
jp
iret
push
sti
clc
inc
std
dec
mov
jno
dec
notb
ret
inc
imul
iret
pop
xor
ret
ss
lds
sub
jne
gs
fcoms
cli
xchg
mov
push
stos
mov
fs
pop
sub
int3
jae
lock
sti
and
mov
xchg
xor
popf
pop
mov
popa
cs
cs
popl
jecxz
add
mov
decb
dec
test
pop
mov
pop
xor
fiadds
enter
jne
call
out
fldcw
stos
inc
add
mov
stc
push
xor
pop
ret
lcall
xchg
adcb
mov
sub
and
ljmp
add
in
out
out
mov
mov
stos
movsl
jg
mov
mov
cmp
jmp
int
cmpb
imul
cli
or
jg
arpl
ss
mov
rcr
cmp
gs
add
lods
push
push
gs
mov
cmpsl
imul
notb
pop
push
roll
cmpsl
lea
mov
fwait
aas
insl
jnp
enter
inc
fstl
test
cmc
test
dec
xchg
cmc
sub
pop
xchg
sub
xchg
jo
ss
sub
push
loop
ja
xor
shrl
jmp
add
cld
fs
lcall
xorb
call
cld
mov
add
fcmovb
jg
adc
in
push
inc
repz
loop,pt
aad
ds
rcrb
or
cltd
pop
out
and
leave
cmc
ja
push
fmuls
jge
stc
jns
and
mov
cmp
gs
stos
sarb
stc
enter
jge
shlb
jmp
ds
rcr
xchg
repnz
std
dec
or
xchg
movsb
fwait
cli
sbb
sbb
jae
insb
mov
add
lret
stos
std
scas
sbb
inc
fmull
outsl
mov
add
arpl
or
inc
xchg
sbb
pop
pop
insb
mov
cmpsb
xchg
mov
sub
mov
mov
sbb
jecxz
push
pop
mov
lods
imul
or
loopne
ficompl
cld
loope
aam
inc
and
popf
popf
movsl
mov
movsb
inc
scas
lcall
dec
xor
rorl
sub
es
inc
scas
js
arpl
mov
ja
add
loop
sti
pushf
push
lods
sub
pop
leave
mov
xchg
lahf
lea
jno
pop
iret
stc
cltd
fdivs
jecxz
iret
mov
aaa
xlat
ja,pt
dec
sub
push
adc
jmp
cmc
inc
leave
mov
jmp
mov
dec
js
int
popa
call
test
xor
imul
icebp
shrb
dec
inc
mov
leave
fwait
bound
iret
or
push
insl
mov
pop
adc
test
int3
jecxz
inc
mov
and
mov
xchg
call
shrb
xchg
cmp
arpl
insl
push
negb
mov
dec
pop
xlat
xchg
into
pop
add
out
jecxz
push
xchg
jae
inc
es
xor
xchg
and
lods
push
sbb
jb
xchg
mov
jo
ja
xchg
scas
stos
jmp
jns
sub
xor
xor
call
add
sub
ja
mov
fsubr
stos
mov
call
data16
mov
das
scas
push
in
mov
pop
dec
sbb
sbb
pusha
gs
inc
lea
xchg
mov
pop
hlt
cmp
and
pop
push
cmp
test
setae
mov
dec
fimuls
aas
jg
sub
shrl
loop
je
xchg
xchg
pop
add
adc
sub
or
and
lahf
fimull
push
and
addr16
cmp
dec
mov
adc
push
dec
add
pop
mov
mov
sbb
lea
adc
pop
int
sbb
enter
fsubp
pushl
mov
out
adc
xor
or
es
imul
movsb
fidivl
fcoms
or
jg
mov
adc
test
pop
or
sub
jb
pop
and
cmp
insb
enter
arpl
dec
mov
add
aaa
mov
sbb
sahf
adc
push
loopne
dec
and
rcl
test
mov
pop
add
jp
dec
enter
rcrl
icebp
fdivl
icebp
inc
insl
inc
repnz
sbb
dec
mull
pop
dec
test
imulb
and
xchg
jle
shrb
cmp
test
stc
sti
test
xor
popa
pushf
jge
in
in
push
mov
adc
popf
shrl
sub
inc
xor
dec
jmp
fcmovne
lock
ret
cmpsl
test
adc
pop
mov
sbb
pop
mov
sub
jp
sbb
jne
int3
fwait
test
or
test
inc
int3
clc
sub
or
jns
lock
or
rorb
rorl
or
insb
add
jle
xchg
xor
sub
and
cmpsb
sub
push
and
nop
cmpsb
jnp
cmp
imul
sub
lret
ljmp
inc
cmc
ret
add
int3
scas
jo
jg
addr16
mov
iret
iret
jae
clc
xchg
adc
jo
jmp
xchg
xor
add
xchg
xor
test
push
push
inc
jno
insb
pop
cmp
and
scas
dec
adc
push
stos
test
inc
or
xor
and
xor
fs
clc
popf
mov
cmpsl
cmp
jl
mov
dec
rcrb
ljmp
pop
rol
mov
adc
movsl
sbb
xor
dec
mov
mov
adc
push
popa
inc
push
push
jle
xchg
ja
or
adc
testw
imul
pop
or
les
cmpb
xchg
lds
push
rcll
movsb
xchg
fisubrl
xor
es
cli
loopne
jecxz
mov
lahf
out
dec
rorl
sbb
test
out
xor
sarb
repz
in
pop
xchg
sub
cs
enter
cli
cmc
into
imul
mov
push
ss
push
sbb
lret
aam
fstpt
lahf
imul
pop
test
hlt
mov
lret
push
jp
je
cli
test
cwtl
xor
jne
imul
cmp
and
sub
shrb
int3
mov
inc
cmp
jp
shl
pop
jp
lahf
cs
aas
inc
loop
clc
subl
test
inc
push
fs
jbe
push
and
jl
outsl
xchg
pop
add
call
loopw
pushf
xchg
sub
pop
sub
cli
sbb
scas
pushf
and
xor
inc
pop
jp
sub
aad
or
fcoml
mov
sub
cmp
inc
or
mov
sahf
push
das
into
andl
outsl
mov
int3
mov
inc
fnstcw
addr16
mov
mov
out
jo
push
lock
add
cmp
pop
loope
lds
xchg
les
mov
dec
ss
sbb
and
mov
cmpsb
ret
mov
stos
pop
or
movsb
push
jl
xor
sti
mov
push
cmp
mov
jo
sbb
jo
xor
icebp
cli
bound
iret
cltd
bound
xchg
out
nop
loopne
add
pop
ja
out
and
cmp
bnd
bound
stos
fimull
ljmp
out
imul
pop
test
jl
cmpsl
sahf
pop
js
sbb
cmp
negl
test
mov
cmp
mov
out
cmp
pop
and
in
mov
sahf
iret
mov
mov
repnz
mov
inc
jne
mov
call
in
add
lods
cltd
pop
in
sbb
dec
add
loop
mov
push
mov
lock
sbb
jge
mov
add
std
lret
cmpsl
test
adc
inc
jo
leave
cmp
mov
pop
pop
and
pop
insb
lret
xchg
mov
test
jmp
rclb
scas
fsubs
test
call
loopne
enter
pop
lcall
mov
loopne
mov
mov
repz
sbb
loop
fstps
mov
mov
push
add
add
inc
outsl
cld
les
mov
push
sbb
gs
lahf
inc
mov
mov
lret
push
adc
mov
pop
mov
fdiv
mov
scas
lret
stc
xor
sbb
sarl
mov
outsl
fstpl
cmovbe
in
test
xchg
iret
fdivs
loopne
add
enter
cmp
js
or
sbb
or
mov
pop
mov
pop
cmp
push
mov
mov
xor
enter
sbb
cld
xor
les
jecxz
cmpsl
xchg
rorl
jb
les
jne
scas
stos
outsb
and
out
sbb
aas
mov
mov
sti
xchg
xor
rclb
mov
test
stos
pop
scas
test
sub
or
inc
ss
jge
xor
hlt
adc
lret
lods
pop
sbb
je
insl
mov
adc
mov
ljmpw
mov
aam
clc
dec
scas
dec
jp
xor
pop
daa
outsb
jno
shlb
xchg
and
jl
jle
cmp
rcrl
and
xor
imul
insb
cmp
js
sarb
loope
sbbl
jo
pop
js
and
mov
dec
dec
or
pusha
stos
scas
repz
mov
lods
cltd
mov
in
mov
mov
sub
lock
mov
and
xor
addl
insb
or
inc
cmpsb
pop
mov
inc
sarl
into
shll
inc
in
xor
in
push
adc
dec
mov
add
sahf
sbb
mov
notb
or
xor
cmp
lods
xchg
popa
or
pop
lcall
jle
add
xor
aaa
in
xlat
add
push
test
loopne
mov
pop
and
mov
dec
jae
mov
mov
es
jns
fistl
mov
and
add
xor
je
in
jg
jl
push
dec
adc
rcll
aas
insb
movsl
mov
and
jmp
mov
in
test
push
into
cmc
cmp
and
fsubrs
lcall
add
stos
rorl
cwtl
fcmovb
fstl
mov
dec
scas
lcall
pushf
lods
jl
jno
aam
ljmp
mov
int3
xchg
pop
insl
mov
movsl
dec
mov
inc
lods
ss
jno
lods
js
out
push
test
dec
mov
xlat
add
adc
cli
pusha
sbb
and
add
es
repz
into
lods
shll
es
and
xor
out
add
xchg
faddl
pop
sub
add
fucomip
repnz
inc
hlt
push
ret
lock
loopne
xchg
loope
jo
sbb
or
mov
shll
sbb
jge
push
roll
mov
add
dec
test
mov
adc
rorb
cmp
aad
loop
test
push
mov
imul
adc
or
cwtl
outsl
cmc
push
mov
arpl
in
cld
add
or
jns
stos
ljmp
xorl
jle
stos
push
mov
xchg
adc
icebp
pop
xor
nop
test
sbb
pop
push
push
or
test
push
xchg
push
fwait
add
sbb
int3
mov
push
inc
push
and
adc
sarl
rorl
or
inc
fnstenv
cmp
mov
jo
mov
cmp
loope
jecxz
test
add
xor
sub
and
and
dec
mov
dec
icebp
xlat
cwtl
inc
jle
push
sbb
leave
mov
sbb
int
cmpsl
sbb
dec
push
lret
cmp
add
lods
dec
lret
dec
out
inc
leave
je
push
inc
das
jmp
filds
aam
or
dec
std
js
cmpsb
aaa
lret
in
sbb
lds
xchg
rep
xchg
jl
test
ja
mov
and
movsl
sub
push
or
pop
imul
push
and
sbb
daa
bound
aam
aam
push
fdivl
imul
jmp
call
lret
addr16
stos
lock
push
jb
dec
mov
push
push
hlt
mov
jnp
dec
fs
xchg
push
popa
adc
adc
xor
fcoms
dec
cmpb
jb
dec
subb
fildl
jmp
adc
xor
pop
ror
fnstcw
daa
cld
xchg
cs
insb
pushf
dec
mov
mov
cmc
mov
add
imul
mov
or
iret
or
sbb
inc
insb
mov
mov
and
int
jp
push
outsl
cmp
pop
sti
cmp
or
call
xorb
and
fistps
add
subb
negl
shl
adc
mov
sub
jp
pop
mov
mov
js
or
mov
or
dec
jecxz
rcrb
xchg
or
cmp
pop
xor
fwait
push
add
and
mov
popf
sub
dec
clc
rcll
roll
adc
loopne
cmp
out
jnp
mov
rolb
fistpl
xchg
xor
jle
outsb
mov
xor
adc
imul
aas
icebp
gs
adc
xchg
insl
in
loopne
popa
push
sbb
or
jns
out
iret
test
add
scas
shl
lret
inc
xchg
or
inc
rorb
jge
out
sbb
pop
and
fdivl
add
push
mov
and
xchg
jns
cltd
add
pop
fwait
mov
popa
sbb
imul
jae
dec
cmp
add
add
rorl
sti
add
mov
frstor
cld
mov
xchg
popf
jle
shll
or
sbb
enter
lods
scas
dec
cmp
jo
lods
pusha
xchg
push
scas
and
xorb
push
mov
cmp
sub
cmp
loop
xor
inc
or
dec
sbb
mov
ret
mov
push
sub
add
in
xchg
mov
xor
cmc
cli
xor
out
test
not
inc
jecxz
jb
ret
xchg
imul
fdivp
push
out
xchg
rclb
and
outsb
les
xchg
and
jmp
and
jo
mov
inc
lret
inc
inc
xchg
stos
mov
jge
mov
mov
pop
sub
jno
shlb
xchg
mov
arpl
arpl
daa
arpl
mov
sbb
test
add
fmul
mov
cmpsl
jae
imul
imul
jmp
jns
out
xchg
and
enter
stos
inc
stos
outsb
scas
add
test
add
mov
scas
mov
aam
hlt
and
dec
mov
js
pusha
lret
es
jmp
jp
test
sbb
xchg
sub
or
dec
adc
cmp
jg
xchg
das
movb
or
out
mov
add
imul
mov
test
dec
mov
xor
dec
jne
loop
jns
fsub
data16
mov
mov
out
xchg
inc
mov
xchg
jno
in
int
call
add
je
iret
dec
pushf
jbe
test
mov
xchg
cmp
push
add
mov
xchg
dec
ret
jge
inc
test
mov
pusha
jmp
pop
mov
lret
ss
je
sbb
std
mov
lock
inc
jle
fisttpl
dec
push
cwtl
push
or
xchg
daa
adc
mov
cwtl
fists
xor
add
aam
sub
inc
mov
sub
xlat
notl
mov
inc
jo
or
adc
outsb
subl
loope
inc
test
cmpsb
jno
insl
pop
inc
cmovl
mov
pop
cmpsb
repnz
mov
test
xor
es
push
and
gs
outsb
mov
inc
mov
xchg
mov
or
adc
mov
add
out
dec
andl
jne
push
lret
inc
jo
pushf
dec
loope
pop
push
mov
push
into
adc
add
adc
js
pushf
push
fstl
dec
pop
mov
call
ss
into
cmp
adc
stos
std
pop
inc
sar
xchg
stos
stos
or
cltd
xchg
lcall
testb
mov
aad
lret
cwtl
aam
stc
out
push
push
stos
inc
in
loop
nop
jmp
fistps
sbb
adc
ret
sub
mov
push
and
shll
outsb
add
outsl
loopne
or
mov
notb
movsl
daa
adc
push
mov
sarb
aam
mov
xor
cmp
jmp
xor
cmp
loope
dec
push
sbb
pusha
jbe
leave
fstpt
add
sbb
add
xchg
cmpsl
adc
mov
stos
insl
add
sbb
mov
addb
in
pop
insb
shl
and
outsb
adc
jns
xchg
rcr
mov
jb
xor
sbb
mov
nop
and
mov
iret
push
lret
push
enter
dec
jno
push
inc
shrl
sti
xchg
pop
xor
loopne
mov
mov
mov
ror
add
out
mov
int
test
xor
cmp
mov
xor
jecxz
mov
repz
push
je
mov
mov
hlt
je
pop
or
iret
xlat
xchg
in
sbb
adc
sbbl
inc
xchg
outsb
aam
adcl
add
pop
xchg
jbe
dec
pop
aad
mov
cs
out
stc
adc
add
adc
inc
lds
pop
lahf
push
or
mov
addr16
mov
or
fimull
inc
movsl
and
imul
lahf
xchg
jne
xorb
sub
stos
mov
push
ret
mov
loope
xor
mov
decb
aas
jl
and
xlat
int
lea
cmpsl
mov
sub
push
out
jbe
pop
jnp
les
mov
xor
sbb
ret
shl
cli
mov
xor
add
push
scas
movsb
insb
or
sbb
dec
pop
clc
jno
leave
xchg
loopne
jb
lahf
xor
sbb
xchg
outsb
pusha
stos
cmp
add
cmp
into
leave
inc
fwait
jge
adc
les
jge
dec
clc
shll
sub
mov
mov
dec
sbb
popa
cs
subl
xlat
sub
mov
xorb
and
test
mov
inc
mov
loopne
ret
push
mov
adc
sarl
stos
add
and
xchg
sbb
jmp
xchg
push
jecxz
addr16
das
jp
cmp
insb
fs
addr16
das
push
mov
cmpsl
insl
xor
outsb
test
divl
mov
stos
cmp
adc
and
out
cmp
lock
inc
push
shll
bound
daa
popf
sub
movb
insb
cmp
clc
lahf
sub
lret
out
jae
add
rclb
cmp
push
xchg
outsl
mov
mov
sub
out
repz
loop
add
add
jbe
adc
lock
adc
loop
add
fidivs
xchg
insl
ret
xor
cltd
call
out
add
imul
je
cli
push
mov
ret
jbe
sub
pop
sahf
fistl
test
jb
mov
pushf
dec
jbe
add
cld
or
negb
mov
mov
xchg
adc
ljmp
mov
jl
mov
bound
jp
jl
rorb
nop
mov
mov
jb
test
add
mov
sub
sbb
adc
dec
lea
push
dec
mov
lcall
add
mov
cwtl
sahf
popa
and
out
mov
mov
repz
aaa
out
les
ss
dec
inc
out
repnz
rcr
ret
mov
sbb
and
roll
out
es
loop
je
inc
sti
add
out
repz
jne
xchg
cmpsb
in
sbb
and
cmpsb
inc
mov
sbb
call
popa
dec
push
mov
adc
test
loopne
int
cmp
xchg
cmp
mov
push
pop
pop
in
adc
cwtl
lret
outsb
pusha
and
sub
insb
and
jge
xlat
js
mov
imul
adc
pop
cltd
xor
lods
popa
into
xchg
push
lods
jb
pop
push
mov
faddp
xchg
add
hlt
xlat
jmp
mov
mov
dec
lcall
repnz
cmp
pop
js
xor
aas
and
adc
aas
jnp
std
xlat
in
xchg
xor
pop
dec
dec
mov
fs
mov
test
and
out
fpatan
or
mov
push
pop
ss
fwait
dec
cmp
nop
xor
hlt
sbb
xchg
dec
mov
inc
fwait
xchg
nop
sub
scas
push
mov
bound
je
xorb
enter
sahf
xchg
aas
dec
cmc
imul
or
xlat
imul
cs
std
addr16
in
xor
test
das
jmp
jge
mov
cmp
movsb
enter
adc
dec
mov
adc
lock
shufps
add
add
xchg
inc
add
inc
adc
inc
push
sahf
cwtl
sti
out
add
adc
sar
lret
lret
in
adc
sbb
jbe
cmp
popa
call
into
mov
roll
andl
std
add
out
mov
mov
fchs
lret
push
andl
and
mov
call
popf
mov
inc
pop
xlat
push
jge
cmp
movsl
mov
lret
cmp
or
sub
mov
sub
jb
cld
or
rorl
test
push
inc
std
add
leave
sub
sbb
fsubrp
pushf
gs
push
add
test
mov
ret
and
mov
mov
mov
adc
and
jle
aad
subb
pop
inc
jb
mov
push
push
mov
test
sub
div
hlt
or
jnp
popf
adc
test
sub
xor
daa
ss
add
lock
aam
push
stos
or
out
icebp
xchg
or
pop
jno
push
sub
clc
and
or
sub
out
aaa
sahf
scas
ja
rcll
data16
rcrl
xor
mov
xor
pop
push
and
mov
xchg
push
adc
jmp
inc
add
insb
adc
in
pusha
imul
cld
xchg
dec
push
outsl
fs
sub
push
or
sbb
add
test
mov
xor
inc
adc
cli
enter
fistpll
and
mov
mov
sub
jae
and
fwait
sbb
or
sub
sti
stc
cli
fnstcw
lret
mov
clc
mov
fwait
outsb
pusha
icebp
shlb
call
rclb
xchg
test
addr16
loop
aam
fnsave
inc
jns
sbb
js
push
mov
rcl
adc
and
mov
cmc
cmpsb
add
inc
addr16
adc
lods
push
mov
or
inc
lods
sub
jg
mov
pop
mov
out
add
mov
mov
xchg
inc
xchg
push
pop
iret
xor
add
ja
xor
xor
and
arpl
fimull
adc
insl
or
shll
jno
pop
clc
stos
dec
dec
or
jmp
sub
push
fisttpl
shll
or
push
fwait
sbb
jns
repz
push
sbb
subb
inc
dec
sar
dec
stos
mov
and
sub
mov
shlb
iret
loop
inc
xchg
aas
cmp
rcrl
mov
and
push
cmc
cmp
or
xchg
or
sub
loop
lahf
fs
cmc
loop
cmp
daa
xor
shr
lcall
push
lahf
insb
test
mov
imul
loopne
cltd
push
outsb
pop
aad
dec
aad
mov
dec
cwtl
loop
xchg
cmp
inc
push
je
lret
outsl
stos
sub
push
movsl
sub
movsl
pop
lock
js
addr16
and
xchg
xor
addr16
dec
pop
notb
fidivl
mov
test
aas
pop
leave
jl
dec
rcll
inc
pop
pop
popf
leave
aad
out
out
inc
jb
jae
sub
sub
cwtl
loopne
data16
jg
pop
jo
inc
jnp
pop
ss
pop
adc
insl
cld
fildll
xor
mov
xchg
rolb
call
or
sbb
dec
js
cmp
lods
loop
dec
mov
sbbb
mov
cmp
sub
jne
jo
mov
roll
andl
mov
call
mov
loop
mov
mov
movsl
aam
fimull
mov
push
cld
push
cmp
add
xor
jo
push
adc
orb
repnz
or
sub
sub
outsb
lock
out
gs
lods
cmp
shrl
sbbl
in
xor
cmp
inc
in
aam
je
push
sbb
stos
or
mov
pop
sarb
inc
mov
test
test
pushf
fisubl
inc
shlb
sbb
js
xor
jno
xor
decb
push
pop
sbb
repnz
mov
popa
jno
out
mov
andl
mov
lods
xor
jb
xor
sbb
inc
pop
inc
mov
mov
pop
or
packuswb
repz
out
jp
sbb
adc
nop
cmp
add
jo
inc
mov
cli
int
mov
fdivrl
out
mov
adc
sub
add
sub
pop
in
push
fbstp
hlt
or
popa
iret
lods
push
out
cmp
stc
loope
xchg
cwtl
dec
jae
and
out
daa
sbb
and
mov
subl
sbb
rcrb
sahf
jb
xlat
ret
or
mov
mov
adc
xchg
rcr
add
insl
das
cmp
das
scas
xor
or
xlat
sub
fwait
sahf
loope
fildl
dec
pop
ret
rcrb
aad
adc
cmp
sbb
push
fsubs
addb
pop
aad
xadd
jmp
xor
jns
lods
sahf
mov
push
stos
push
daa
sbb
jo
stos
jae
test
mul
pop
fmulp
in
sbb
xor
mov
movsb
ds
sbb
mov
loope
push
jnp
xchg
dec
inc
and
sbb
adc
mov
push
rep
push
ljmp
lret
clc
cmc
scas
jge
cmpsl
cs
fidivrl
xchg
hlt
add
mov
pop
adc
sbb
les
mov
repz
mov
and
cmp
lds
into
mov
cwtl
aad
and
mov
pop
cmp
dec
sub
dec
stos
cmc
loop
xchg
push
xchg
movsb
add
cmpsl
pop
bound
xchg
mov
lret
lahf
jp
iret
stos
xchg
int
imul
adc
orl
mov
loop
jge
enter
push
and
test
push
andb
jnp
out
lds
das
stos
sub
pop
pop
or
lock
stos
sub
pop
mov
push
dec
sub
lods
push
cmp
dec
dec
test
stos
cwtl
mov
jno
adc
fdivrs
push
or
pop
movsl
ja
add
test
test
int
push
xchg
jmp
push
mov
dec
and
push
add
sub
xchg
or
cmp
test
into
pop
daa
pop
inc
shrl
jbe
js
in
out
add
inc
mov
ljmp
mov
jae
jmp
fisubrl
lret
jae
dec
or
pop
lahf
fwait
add
xor
pop
les
xor
dec
cwtl
lret
pop
jns
and
dec
push
mov
xor
outsl
fstpl
cld
sbb
adc
sbb
fisubl
stos
lock
mov
mov
or
push
push
sbb
or
lcall
sub
lahf
cmp
aad
xchg
scas
test
sbb
pop
jp
fisubrl
dec
push
or
in
push
xor
pop
hlt
pop
or
mov
fwait
sbb
inc
dec
test
sub
popf
pop
sbb
pop
ret
daa
sti
mov
inc
mov
enter
stos
cmc
inc
and
loopne
add
push
xchg
outsl
out
mov
pushf
jle
mov
cld
xchg
or
adc
cwtl
movsl
stos
inc
shll
test
mov
rolb
adc
and
popl
push
sub
aam
fpatan
and
sbb
mov
dec
sbb
sub
cmc
aaa
xor
adc
pop
cmp
sub
out
mov
cmp
inc
mov
push
pushf
xadd
repz
jne
sar
sarl
movsl
mulb
sahf
aaa
xor
subb
jecxz
sub
fs
aas
pop
gs
cmp
fs
cmovg
dec
adc
pop
xchg
sbb
jle
xlat
js
ss
sahf
dec
jg
stc
cltd
mov
nop
ss
jne
icebp
pop
and
xor
cmp
mov
ret
sbb
ret
fadd
gs
rcrl
cli
adc
aaa
xchg
dec
movsb
dec
lods
cmc
inc
adc
dec
push
lods
mov
incb
movsb
stc
js
shlb
loope
movsl
mov
psrlw
mov
test
loope
data16
iret
sbb
cmc
jle
push
jl
stc
xchg
imul
cld
sbb
scas
bnd
lods
cmp
cmpsl
mov
in
mov
fwait
push
mov
mov
sub
sub
aas
jnp
mov
lock
lods
push
jp
jmp
or
bound
or
or
repnz
adcb
addr16
sarb
pop
iretw
push
scas
sub
stos
sub
dec
inc
jbe
stc
fldcw
sub
xor
inc
and
cmp
xchg
aaa
mov
and
imul
sub
push
es
out
pop
cmp
or
movsb
mov
out
jecxz
cs
xor
in
adc
cmp
xchg
and
out
push
sbbl
push
inc
aaa
sbb
sbb
and
in
xor
pop
pop
cmp
hlt
jp
mov
repnz
rorb
mov
imul
scas
cmpsl
pop
roll
gs
push
jnp
xchg
popa
and
adc
cltd
add
sbb
bnd
fidivrl
out
mov
sub
mov
inc
ljmp
xlat
fisubrl
pusha
int
xor
test
sbb
insb
or
leave
loop
stos
adc
xlat
adc
sbb
xchg
cmc
repnz
push
push
popa
insl
jmp
cmp
mov
inc
fsubs
in
aad
sub
test
jnp
jl
sbb
mov
mov
mov
icebp
shrl
subl
sbb
lods
mov
insb
cs
sti
cmp
pushf
call
mov
pushf
aaa
mov
pushf
rcrb
add
and
mov
test
pop
or
scas
lcall
sahf
daa
cwtl
fidivl
jmp
cmpb
mov
xor
sbb
xchg
cltd
and
cmc
mov
cmp
cmp
or
in
ret
dec
imul
jnp
cli
pop
or
cmp
jg
dec
xchg
mov
jg
mov
cmp
or
bound
mov
sbb
jae
pop
cmp
pop
dec
call
aad
pop
stc
xor
addr16
mov
in
inc
cld
insb
mov
addl
cmp
adc
jecxz
loope
mov
fistps
mov
cmp
pop
push
inc
ror
repz
inc
outsl
xor
cmp
movsl
enter
mov
mov
fidivrl
pop
daa
jmp
scas
out
push
lea
push
ds
cmpsl
dec
jbe
outsl
les
aad
ja
and
sub
cltd
cmp
clc
sahf
scas
rolb
push
hlt
call
dec
idivl
insb
push
bound
mov
outsb
pop
xchg
inc
xchg
mov
or
mov
in
test
jecxz
orl
dec
dec
outsl
inc
stc
imul
fldt
sub
call
nop
inc
cwtl
flds
inc
sti
lods
mov
das
arpl
inc
mov
inc
stos
pop
inc
xchg
jae
sahf
std
mov
cmp
or
sahf
add
and
or
jbe
push
ds
xor
and
cli
loop
rorb
adc
leave
cmpb
aam
lock
jbe
inc
lret
loope
idivb
jns
orb
add
lcall
add
adc
mov
jecxz
cmp
dec
insb
and
push
mov
jno
into
and
clc
jno
mov
popa
mov
jno
mov
xchg
cmpsb
mov
mov
jne
mov
test
mov
aas
pop
or
scas
xor
outsb
push
shl
xchg
mov
pop
rol
lahf
cmc
shll
sahf
and
push
icebp
jmp
sbb
mov
and
mov
scas
mov
xor
jns
cmp
in
adc
test
movsb
in
aad
and
lret
mov
stos
andb
in
xchg
pop
adc
inc
mov
mov
gs
cli
mov
mov
jo,pn
aas
push
adc
xor
cmp
xor
push
cli
add
rcl
add
mov
mov
xor
pop
movsl
jle
mov
or
mov
dec
xchg
and
jl
sbb
mov
stos
subb
add
sbb
lock
xlat
call
dec
lahf
enter
ja
pop
jl
cmp
xor
adc
idivb
inc
les
stos
je
sbb
mov
mov
enter
notb
fs
sub
or
jbe
inc
mov
sbb
mov
jl
or
ljmp
std
add
push
cmpsb
push
mov
cs
adc
cmp
xchg
pop
add
push
dec
inc
lds
cmp
mov
adc
ficoml
sti
loop
add
les
jecxz
leave
mov
xor
xchg
idivb
movsl
daa
xor
jnp
cmp
dec
sbb
test
sub
arpl
in
movsb
xor
popa
and
dec
mov
jbe
cs
hlt
push
xchg
sub
movsl
bound
push
cmp
daa
xor
inc
lret
les
inc
jne
repz
dec
mov
in
xor
and
js
lds
mov
inc
stos
and
push
dec
gs
repnz
imul
shrl
jecxz
push
push
inc
jne
jg
scas
mov
in
mov
sarl
pop
sub
pop
out
js
cmp
in
ljmp
hlt
push
gs
das
jbe
out
rol
rep
nop
pop
fbstp
mov
push
push
pop
shl
push
in
fmull
inc
xor
mov
lock
cmp
leave
loope,pt
mov
push
arpl
sub
or
sub
dec
mov
mov
or
es
loopne
bound
mov
xor
or
stos
and
rcrb
aad
inc
inc
das
xor
sub
push
cmp
inc
fisubs
push
data16
in
pop
lds
fsubrl
xchg
or
add
mov
test
mov
jmp
cmpb
repnz
xor
xchg
jecxz
push
mov
adc
xchg
fcoms
pop
aad
mov
jne
inc
pop
sbb
or
jns
jb
mov
sbb
or
mov
movsl
hlt
jno
jmp
test
pusha
test
iret
sub
inc
mov
enter
les
faddp
cmp
add
scas
push
jmp
shlb
mov
sub
rcrb
mov
xchg
mov
xchg
jg
sub
out
leave
pop
dec
out
xchg
pop
jo
cld
ss
sbb
pop
andb
sub
fldl
jne
or
xor
pop
out
sbb
fistpl
dec
mov
sub
cmp
fnstsw
dec
test
mov
pop
mov
cmp
shlb
mov
jo
imulb
ss
fsubl
mov
cmc
ret
cmp
sub
fisubrs
jbe
movsb
inc
push
cmp
clc
inc
mov
xchg
fs
mov
jmp
gs
cld
lock
mov
jp
lock
cmp
pushf
imul
lahf
sub
adc
ss
mov
mov
fisubrs
rorl
addl
mov
or
jo
pop
adc
cmp
jg
cmp
jnp
xchg
stc
decl
addr16
sbb
mov
ljmp
xchg
ret
jns
cltd
jge
mov
xor
adc
test
jge
fs
int3
popa
sbb
ja
shlb
or
xchg
mov
mov
mov
xchg
push
dec
mov
cmp
and
insb
pop
stos
mov
dec
sub
call
push
cwtl
xchg
aam
ret
mov
mov
xchg
outsl
and
dec
movsb
ret
in
scas
imul
sub
fadd
jmp
jmp
xchg
jmp
xorl
inc
sub
sbb
sbb
or
mov
cli
adc
sahf
popf
cmp
popa
fcoms
pop
divb
pop
jecxz,pn
jnp
test
mov
ficomps
pop
icebp
mov
mov
add
xchg
ret
cmp
mov
sti
pop
insl
mov
movsl
adc
push
ficoms
insb
push
mov
jg
xor
insl
into
mov
das
into
in
push
cmp
and
pop
xchg
sbb
jo
fs
cmpb
sub
jo
dec
or
inc
out
dec
ret
ret
fdivrl
mov
mov
jp
mull
add
lds
mov
pop
lret
das
or
adc
and
dec
in
jns
call
jnp
add
sbb
pop
pop
adc
xor
fsubs
insb
insb
inc
cltd
adc
adc
sub
fnsave
cmc
add
enter
leave
into
jp
sahf
mov
jmp
fs
jle
nop
and
cmpsl
jns
push
pop
adc
in
stc
pop
subb
dec
cltd
mov
das
and
movsb
inc
mov
inc
jp
cld
cwtl
mov
test
clc
lcall
sahf
jbe
sbb
test
fcompl
mov
cmp
sbbl
fisttps
rcrl
repz
in
jg
mov
push
add
out
data16
shrl
add
lahf
sub
cltd
xlat
mov
push
jo
sbb
mov
push
pusha
lods
into
decb
mov
sub
adc
sub
mov
inc
mov
lods
adc
xor
data16
sbb
outsl
cmpl
adc
mov
mov
fdivl
sub
mov
in
call
addb
lock
sbb
push
add
lahf
jecxz
pop
mov
push
insl
shrl
stc
andl
fwait
add
or
shr
mov
fs
dec
insl
test
cmp
call
push
mov
or
cli
xor
add
mov
mov
sub
lret
xor
fcoms
push
nop
jg
ror
dec
push
js
or
repnz
or
ret
lret
ret
sbb
mov
xchg
mov
jne
outsl
fisubs
cwtl
cs
add
pop
lcall
cmp
dec
xchg
jns
jg
pop
pop
inc
shlb
push
pop
in
fwait
test
arpl
and
xchg
mov
fiadds
sbb
jg
sbb
dec
push
or
rclb
jb
sbb
adc
and
enter
pop
std
xor
ds
lods
or
pop
in
shlb
mov
push
jbe
hlt
outsl
push
shr
ret
xchg
lret
inc
aas
cmpsb
xor
cli
mov
cmc
and
sub
xchg
mov
fnstcw
and
aaa
fcomip
scas
stos
pop
repnz
sub
dec
fxch
sub
jmp
cmp
push
push
mov
jbe
sbb
shrb
scas
push
pop
adc
mov
cmpsb
add
sub
pop
loopne
inc
inc
dec
ljmp
leave
fildl
adc
cwtl
imul
mov
or
sbb
dec
fcomps
das
aaa
xorb
xchg
cmp
ret
push
inc
int3
out
lcall
loopew
dec
arpl
nop
xor
imul
push
hlt
xor
xchg
cmp
and
cmp
push
xor
push
popf
push
mov
jbe
leave
test
shll
into
pop
adc
fs
adc
stos
cli
mov
frstor
sbbb
cmp
rcrl
imul
cmpsb
ja
or
popa
nop
or
and
imul
mov
add
pop
or
enter
adc
pushf
and
lock
enter
repnz
adc
stc
inc
add
cli
dec
mov
jp
dec
shll
repz
add
fsub
mov
scas
push
push
xor
out
out
outsl
testb
mov
cmp
test
in
cmp
aas
shl
xchg
lods
repz
xorl
lock
jg
pop
cli
dec
int3
add
pop
xchg
in
les
mov
fwait
iret
mov
push
sbb
jge
loope
jns
mov
or
shll
in
or
push
pop
push
fstpt
fsubl
mov
popf
in
fdivs
mov
movsl
fs
adc
and
scas
mov
sti
scas
sub
outsb
cmp
mov
mov
jae
mov
ljmp
mov
fistl
pusha
xchg
push
or
test
fiadds
pop
xor
cmpsl
cmp
jle
pop
add
cld
adc
inc
arpl
cld
mov
fbld
fldl
cmpsl
rcll
imul
jecxz
jecxz
movsb
jb
adc
jg
xlat
mov
xchg
int
sub
dec
jno
aaa
ret
in
loop
repz
pusha
jnp
mov
mov
mov
push
imul
dec
xchg
andb
inc
out
dec
enter
add
pop
mov
sub
lods
popa
cld
sub
addr16
dec
mov
sti
int3
arpl
ds
movb
mov
ds
and
in
gs
dec
jo
aas
add
cwtl
les
sub
addr16
mov
mov
das
clc
cmc
bound
rcl
lds
and
push
mov
arpl
mov
dec
jbe
add
xchg
push
and
fidivs
daa
sub
jae
xor
data16
roll
mov
sbb
sbb
or
loop
pop
jecxz
xchg
dec
pop
cltd
push
rcll
or
in
mov
push
push
dec
mov
cltd
sub
aaa
negl
mov
adc
ss
or
push
cmp
dec
cmp
sub
xlat
push
inc
enter
and
jne
inc
jne
out
movsb
push
xlat
sbb
and
xchg
test
xor
xchg
mov
and
and
pop
shlb
push
out
push
loop
xor
stos
nop
mov
mov
loopne
aas
and
dec
push
dec
data16
inc
inc
jg
stos
sub
xchg
fdivl
xchg
data16
jnp
lods
xchg
or
int3
les
jle
lea
orl
mov
mov
std
or
jae
lahf
add
ja
fstl
imul
xchg
insl
mov
mov
sahf
inc
popa
clc
jo
stc
stc
addr16
or
xlat
sarb
jge
lods
sbb
iret
enter
fmull
xchg
cmp
js
add
or
in
lahf
adc
mov
test
lods
inc
loope
or
notl
out
cmpsl
pop
jno
dec
lcall
cmp
xor
xchg
stos
fbld
ljmp
cmpl
mov
sbb
in
dec
pop
xor
jp
sub
mov
sti
loop
popf
dec
popa
dec
popf
cmpb
loope
leave
stos
cld
in
add
enter
call
scas
cmpsb
mov
xlat
bound
imul
pop
push
addb
lret
cs
push
mov
arpl
mov
aam
lea
sbb
jnp
loope
popf
cmp
dec
sahf
mov
es
pop
lret
and
arpl
aam
inc
stc
sub
pop
pop
push
pushw
adc
scas
mov
push
push
int3
in
or
roll
sarl
test
fildll
rol
sbb
fs
ss
and
add
aaa
cmpsl
push
mov
popa
cmp
incl
cmp
lret
push
daa
loopne
in
push
sbb
movsb
out
pusha
xchg
jp
cmp
or
xor
mov
fcoml
repnz
mov
mov
cmp
sahf
rcll
imul
sub
cli
sub
push
cli
repnz
inc
fdiv
and
jne
pop
enter
jg
stc
popf
add
test
xchg
sbb
push
push
pop
inc
movsb
pusha
pop
sub
jle
mov
in
push
cltd
lods
cmp
inc
int3
and
lret
nop
punpckhwd
das
mov
aas
push
sbb
mov
aad
aad
sti
es
into
jnp
cs
js
lds
leave
mov
dec
mov
push
inc
imul
mov
lcall
and
dec
sub
mov
inc
scas
pushf
push
arpl
out
jl
mov
or
call
out
or
lods
int3
xchg
movsl
fdiv
mov
mov
bound
push
sub
push
xlat
enter
rcrb
sub
lea
adc
mov
xor
push
xor
cld
inc
lock
in
aad
mov
mov
outsb
imul
jmp
xor
sbb
mov
or
dec
add
cmpsl
nop
dec
addr16
sahf
push
fcmovbe
or
xor
stos
jl
pop
sub
sbb
test
aaa
sti
int
xchg
mov
imul
roll
jecxz
hlt
imull
testb
add
clc
in
dec
fsubrl
push
xchg
out
cs
add
jo
pause
in
mov
pop
jp
rcrb
cmpsb
loopne
arpl
rolb
xor
pop
push
mulb
push
fwait
mov
clc
mov
jg
push
jne
imul
xchg
test
aam
bound
lods
xchg
mov
mov
enter
jns
and
jae
jmp
or
shrb
sbb
roll
lds
notl
pop
inc
in
stos
lds
pop
jnp
xor
ficoms
sahf
pusha
cmp
push
fwait
mov
jne
inc
pop
mov
pop
pop
es
fidivrs
ret
or
loope
test
xchg
pop
ret
sarb
cmp
pushf
imul
pop
lret
push
lcall
in
dec
jb
inc
mov
pop
mov
or
dec
clc
mov
scas
pop
dec
bound
aam
sbb
xchg
inc
xchg
jp
or
insl
idivl
push
hlt
mov
ds
andl
jb
bound
rol
and
rcll
sub
sub
mov
cld
stos
pop
sbb
jmp
test
out
inc
test
jb
rolb
into
outsb
iret
insb
fwait
push
lock
xchg
clc
out
jnp
ss
insl
jns
add
in
sarb
adc
fwait
and
ljmp
frstor
push
out
mov
addr16
xchg
lods
ja
pusha
bndstx
pop
mov
sti
jnp
pop
scas
and
fsubr
popf
sub
mov
push
add
divl
mov
subl
push
xor
xchg
rcrb
fiaddl
in
orb
sbb
add
xor
mov
cmc
push
pop
fisubs
loope
pop
xchg
cmp
daa
sub
repnz
mov
mov
fldl
xchg
mov
arpl
adc
sub
in
xor
mov
xor
or
push
out
aas
lds
dec
sbb
ret
xchg
mov
pop
out
add
dec
push
je
jecxz
daa
push
dec
ja
stos
fwait
or
sbb
pop
data16
loope
xchg
stos
ror
imul
push
mov
dec
scas
js
inc
in
jge
sbbl
jo
jb
cmpsl
ljmp
and
lret
stos
stc
in
mov
pop
cli
xchg
ret
xchg
cmpb
inc
shll
fidivrs
fs
ret
addr16
xor
jmp
imul
mov
repz
jbe
xor
dec
pop
adc
sub
mov
sbb
fistl
lret
push
ret
xlat
repz
xchg
mov
xchg
movsl
mov
jbe
stos
and
jns
lret
mov
jno
mov
aas
mov
pushf
sbb
imul
fadd
leave
mov
pop
shll
les
gs
cs
fnstcw
add
fnstcw
dec
xchg
adc
insb
call
mov
outsb
jg
or
jno
jae
inc
pop
xchg
sub
mov
sbb
sbb
bound
adc
push
lods
fadds
adc
dec
pusha
loop
lcall
lret
std
xchg
shlb
lahf
mov
mov
push
js
cmc
mov
roll
sub
xor
mov
shrb
pop
test
out
lcall
rcr
rcrb
in
neg
loop
mov
cmpsl
mov
enter
test
inc
mov
adc
dec
xor
cli
xchg
xchg
cmp
jno
inc
aam
enter
xor
sarl
jo
cld
jbe
dec
pop
or
sti
cmp
cli
xchg
sarb
mov
mov
aas
mov
push
rcll
and
aad
push
mov
xchg
cmpb
jge
or
in
fs
xor
syscall
pop
shlb
push
sub
sbb
add
inc
xor
adc
push
pop
dec
in
push
pop
daa
push
and
xchg
decl
out
lods
inc
out
jns
imul
xor
lock
arpl
mov
mov
xor
stos
xor
int3
adc
pop
sbb
push
imul
sub
push
mov
loop
inc
repz
cmpsb
repnz
push
mov
filds
cmp
or
push
cmp
into
shr
test
addr16
mov
test
or
mov
dec
scas
mov
pop
repnz
sub
dec
mov
jp
mov
std
ja
cmpsl
and
inc
stc
or
std
out
xor
jmp
cld
dec
cmp
sub
mov
pop
into
and
lea
push
mov
xor
inc
lods
xor
mov
sbb
adc
inc
addr16
xchg
jne
jae
jge
jo
fbstp
es
scas
push
inc
fmuls
or
or
add
popf
mov
imul
ja
lret
adc
test
cmpsl
xor
cmp
aam
aad
jl
popf
lahf
icebp
push
sbb
aad
imul
lds
cmp
dec
nop
pop
adc
pop
out
xlat
xchg
pop
in
sub
aaa
sbb
and
and
ror
add
ljmp
inc
ds
sub
mov
mov
pop
andl
aam
inc
loope
jnp
repz
sub
aas
cmp
out
sub
push
add
mov
pop
nop
jo
sbb
xor
or
xchg
out
ja
out
mov
out
mov
gs
jo
shl
insb
js
cmp
jle
xor
lret
lret
xchg
sub
sti
add
scas
mov
pop
lret
lods
jl
lods
xchg
sub
test
xchg
dec
xor
push
mov
jl
outsb
enter
sub
fbld
xchg
in
je
leave
pop
lahf
push
push
jecxz
sub
ficoml
daa
dec
or
test
dec
aad
movsb
int3
pop
xor
adc
mov
mov
ds
dec
jle
dec
imul
inc
dec
pop
scas
inc
push
jbe
rcll
mov
icebp
inc
pop
clc
adc
mov
enter
into
addl
push
push
mov
out
add
xor
jmp
scas
imul
loop
push
rcll
in
cmpsb
orl
in
les
jnp
lcall
sub
cs
add
sub
mov
mov
repnz
ret
addr16
fidivrl
dec
in
mov
and
inc
cmpsl
pop
jne
sbb
fldt
andl
xchg
fcoml
lahf
mov
push
jp
sbb
iret
mov
cmp
pushf
and
jae
cmp
push
dec
pop
pop
fiadds
lret
mov
mov
lds
mov
jge
xor
jb
xor
cmp
in
scas
jp
push
addb
jmp
scas
mov
adc
mov
into
or
and
test
mov
pop
mov
sbb
fs
jb
adc
jmp
rcrl
lret
cmp
add
jecxz
jae
push
pop
cmp
stos
jno
adc
test
pop
bound
push
push
lods
ljmp
jle
ss
out
movsl
in
sub
lret
incb
inc
cmpl
and
dec
aad
jns
popf
lock
int
xchg
mov
jl
inc
push
mov
pop
pop
bound
jnp
mov
mov
inc
push
jb
je
push
neg
ja
pop
pop
and
push
stc
fs
pop
cmp
adc
dec
adc
xchg
movsl
aad
cs
dec
adc
scas
inc
rcrl
jno
pop
inc
fsubrs
push
mov
bound
mov
mov
push
sti
adc
push
iret
cli
scas
xor
mov
inc
scas
ficoml
ret
jle
mov
mov
fidivs
push
xor
and
insl
push
cmc
adc
test
incl
xor
ja
mov
jp
insb
mov
cmpsl
testl
mov
loop
mov
lahf
clc
int3
push
dec
jl
pop
or
jae
sub
pop
xchg
dec
or
sbb
jnp
sbb
xor
dec
jl
push
das
cltd
int3
lahf
movsb
sub
add
daa
or
into
cmp
decb
cmp
or
cs
sbb
xchg
jbe
cs
cs
xchg
cmpsl
aaa
bound
jle
rol
out
repnz
repz
and
arpl
jo
movsb
cmp
cmc
xor
enter
cwtl
mov
sti
shlb
jp
inc
pop
pop
mov
or
loop
dec
xchg
popf
in
fsub
push
jnp
sub
scas
scas
adc
stos
pop
shll
div
fildll
xchg
sub
mov
lret
xor
cltd
rcrl
std
add
push
push
pop
sbb
insb
push
push
add
mov
sbb
sub
lods
mov
jns
push
lret
loopne
cld
psrlw
sbbb
inc
aad
roll
xor
pop
popf
cmp
daa
clc
pusha
clc
inc
jno
inc
jge
xchg
test
bound
add
int3
into
rorb
and
in
test
xor
aam
ja
xor
jge
mov
or
fidivrl
hlt
jne
cmpsb
xor
mov
jne
or
jns
rorl
jmp
jle
outsb
mov
mov
adc
repz
xchg
lret
dec
addl
mov
rclb
inc
sub
or
iret
xor
cltd
jo
rcr
inc
fistpl
clc
mov
inc
pop
mov
lahf
pop
push
test
shl
sbb
mov
test
xchg
lods
mov
mov
popf
inc
int3
dec
cmp
xchg
lods
sub
arpl
pop
xlat
cs
mov
pop
jmp
lods
xchg
mov
scas
push
jae
cwtl
cmp
out
mov
push
dec
lea
loope
pop
mov
clc
shlb
ja
cmpsl
fdivrp
nop
xchg
lahf
iret
scas
and
sub
cmp
adc
out
cs
inc
lahf
push
mov
or
scas
mov
and
cmpsb
mov
fidivrs
nop
sbb
movsb
fwait
cmp
nop
jle
pop
fmull
or
rcrl
mov
pushw
jg
cmp
jp
pushf
lds
cmp
mov
fs
loop
xlat
lret
xchg
push
sbb
hlt
pop
or
push
inc
push
sub
repnz
sbb
or
out
push
rcrl
pop
push
pop
imulb
outsl
dec
fmuls
mov
push
lcall
xor
hlt
push
add
jo
in
fdivrl
fldenv
mov
cmpsb
out
iret
mov
jmp
cs
or
movsb
lds
aad
test
ja
mov
mov
outsb
xor
jecxz
fs
cmpsb
sub
mov
shrb
dec
or
loopne
jo
test
insl
js
push
ss
ja
push
fsubl
repz
pushf
adc
pop
pop
addl
pop
dec
add
pop
cld
mov
push
jne
push
and
or
cmpsb
aaa
inc
mov
xchg
gs
arpl
adc
insb
hlt
test
sbb
dec
das
pop
lds
into
test
push
pop
outsl
mov
ss
sub
repz
add
ss
xchg
xor
dec
jmp
mov
cli
xor
push
lods
mov
and
inc
cmc
push
xchg
jl
inc
push
lcall
and
addl
mov
in
pop
push
loopne
fiadds
movb
sub
dec
cld
fxch
out
inc
cmp
and
xchg
test
out
or
mov
sub
adc
add
inc
test
jnp
sbbb
fcmovne
fadds
jg
sbb
mov
jecxz
mov
cmp
jnp
mov
jp
jnp
inc
das
in
xchg
shlb
addb
xor
fcompl
out
inc
imul
jp
pop
mov
daa
cmp
lret
fdivrl
popa
mov
cwtl
aas
cmp
cmpsl
or
mov
push
mov
inc
and
sarb
aad
popf
adc
sahf
xchg
mov
stos
sbbb
pop
xorl
jbe
sbb
je
int
adc
push
mov
adc
xor
and
fists
ret
xlat
insl
lods
test
fimuls
sub
cmpsl
jne
pop
mov
xchg
rcll
lea
lods
xchg
popl
dec
leave
loope
ret
in
cwtl
mov
loop
fs
les
sub
in
aam
add
pushf
or
inc
imull
fstps
jb
push
pop
mov
int
and
jle
xchg
jno
aaa
out
in
xor
test
cmp
mov
add
mov
mov
test
testl
mov
mov
add
mov
push
jge
hlt
push
jl,pn
push
xchg
cmp
jb
stos
add
in
stc
xchg
adc
jae
cmc
ja
fwait
or
sbb
std
mov
cld
test
insl
jne
mov
push
shl
std
lret
ret
bound
and
pusha
push
inc
inc
push
pushf
sub
xchg
in
mov
ret
jmp
pop
adc
pushf
shll
test
mov
mov
hlt
bound
repz
pop
notb
xchg
mov
sub
pop
cs
ficompl
lods
into
imul
jne
inc
mov
imul
dec
sbb
nop
sbb
sti
cmc
les
aam
shlb
jmp
out
pop
push
push
pop
push
xchg
or
repnz
sub
jecxz
xchg
pop
and
out
xor
ljmp
dec
sub
dec
sub
sbbl
mov
lret
sbb
cmp
push
push
add
push
push
call
cmp
dec
rcl
xchg
inc
cwtl
pop
jbe
mov
xchg
jl
shlb
scas
stc
aas
fcoml
ret
ljmp
jecxz
xchg
add
data16
dec
xchg
fisubrl
inc
xchg
pusha
outsl
push
aad
push
jns
cmpl
js
repz
xchg
mov
outsl
lcall
rol
jbe
jbe
xor
icebp
mov
inc
inc
test
mov
cwtl
and
bound
add
inc
nop
subl
psubusb
mov
data16
mov
data16
bound
pop
ret
and
inc
mov
dec
repnz
mov
aam
rep
shlb
jae
and
sbb
movsl
test
sbb
and
jl
add
inc
inc
sub
out
ds
sar
cltd
call
outsb
dec
cmp
gs
jo
hlt
jmp
sbb
xor
iret
mov
push
push
in
xchg
arpl
push
add
lcall
push
mov
int
xchg
jge
push
call
xchg
pop
xchg
jo
ret
mov
xchg
push
out
jle
fstpl
jmp
jl
inc
int3
and
pop
push
mov
pop
scas
pushf
loopne
sbb
cs
xor
or
adc
push
mov
pop
xchg
and
int
lds
rorb
sub
sahf
out
icebp
imul
sahf
pop
mov
hlt
iret
or
xor
shlb
aad
stos
stos
mov
lds
ljmp
negl
jno
ja
jnp
aad
sub
push
and
jmp
aaa
int3
mov
sub
xor
loope
cmp
filds
sbb
jae
pop
scas
imul
jge
cmp
push
push
inc
in
xchg
adc
outsl
and
or
mov
es
das
repz
cmp
pop
lods
sub
push
ljmp
outsl
dec
mov
mov
lods
mov
mov
outsb
mov
xchg
into
int
fidivrs
cltd
mov
xchg
pop
das
jnp
and
inc
inc
fsubr
or
lcall
push
jl
xor
cmp
adc
xchg
sub
fnstcw
inc
or
lock
dec
mov
addr16
loopne
inc
xchg
lods
adc
rol
in
fldt
mov
cmpsb
lahf
lock
vpunpckhbw
out
mov
adcl
xchg
push
das
scas
loop
push
movsb
fsubs
push
stos
mov
aaa
fwait
dec
inc
sbbb
or
or
xchg
xor
mov
pop
and
inc
or
insb
in
loop
push
jne
lods
rcr
mov
xchg
call
lds
pushf
xor
sub
push
dec
cltd
cmp
sahf
and
pop
in
in
adc
add
scas
lret
or
pop
movsl
lea
aas
sbb
loope
imul
cmpsb
rcr
int3
or
lods
pop
sub
xor
add
mov
gs
mov
pop
inc
fcoms
jae
sub
ljmp
push
inc
sub
bound
cmp
sbb
push
mov
stos
clc
add
pusha
xor
add
sub
push
inc
add
stos
insb
or
imul
xor
mov
hlt
mov
fwait
imul
lock
jnp
sbb
mov
jmp
push
mov
pop
sbb
cmp
xchg
stc
mov
inc
les
call
mov
mov
sahf
in
mov
pusha
xor
mov
sti
out
pop
imul
insl
mov
ds
xor
daa
pop
sti
dec
ds
ja
and
test
clc
add
lret
mov
xchg
addr16
mov
xor
push
pushf
lret
xchg
pop
repnz
out
int3
xchg
out
push
pop
mov
lcall
jp
stos
push
sahf
inc
push
push
pop
mov
push
cwtl
loop
daa
es
pop
add
push
dec
push
rcrb
xor
scas
dec
addb
aad
push
incl
push
mov
xlat
pop
cmp
mov
xor
and
ds
data16
and
pop
adc
push
pop
and
gs
mov
lods
aas
jle
rolb
leave
inc
adc
jge
ret
fmuls
in
arpl
xchg
aaa
cmp
dec
mov
adc
jmp
adc
inc
subb
pop
call
sbb
or
push
addl
mov
jecxz
sbb
pop
sub
and
push
push
push
jmp
fildl
inc
mov
mov
inc
and
jmp
insl
cwtl
xchg
xchg
add
or
mov
cltd
inc
decb
call
xor
jne
push
adc
xor
lret
mov
adc
pop
jns
jle
dec
push
inc
pop
jle
mov
cmp
or
sub
imul
inc
enter
pop
scas
clc
lret
pop
fnstcw
xchg
js
push
aam
lds
push
movsl
xorb
pop
test
imul
iret
insb
cltd
and
sbb
dec
push
aam
xchg
adc
filds
add
or
ror
cmp
imul
xchg
out
lcall
mov
sub
jmp
sub
mov
pop
add
and
push
cmp
push
sahf
push
xor
jp
imul
lock
loope
rcll
add
sti
in
xchg
jno
jmp
cmp
fnstenv
leave
sbb
movsl
cld
test
aad
cmpsb
pop
jae
shrb
aas
and
pop
fmuls
fmul
mov
inc
sarb
std
inc
pop
mov
cmpsl
fldlg2
xchg
sub
sarb
cli
push
fsubs
out
sbb
je
test
cmp
mov
and
and
cmp
cmpsl
fnsave
call
decl
xor
cld
insb
in
outsb
out
cltd
cmp
add
testl
sub
mov
jp
outsl
in
cld
and
inc
mov
push
and
push
imul
dec
sbb
subb
aaa
pop
ret
or
mov
xchg
loop
add
mov
std
dec
in
je
gs
pusha
sbb
imul
dec
add
xor
mov
aad
loop
or
outsb
call
incb
mov
pop
cmc
sub
divl
jo
xor
pop
mov
adc
cmp
mov
mov
dec
std
add
subb
and
shrb
inc
mov
add
jecxz
pushf
dec
pusha
insb
xchg
push
pop
mov
mov
shll
adc
loope
int3
and
jno
pop
and
mov
lcall
pop
loop
inc
mov
mov
lods
jnp
dec
push
fldl
push
and
cmp
rcl
dec
or
sbb
iret
push
adc
insl
jbe
aad
push
fbld
and
jnp
mov
inc
movsl
xchg
fdivl
or
pusha
icebp
sbbl
jp
lcall
sub
faddl
xchg
mov
in
or
push
ss
test
dec
outsb
into
cmp
push
fadd
pop
hlt
or
mov
jo
call
sbb
mov
pop
mov
insl
adc
stc
dec
leave
sbb
fnstcw
outsl
sub
jb
call
dec
movsb
mov
xchg
inc
lret
in
sbb
sbb
jb
clc
hlt
or
and
cmpsb
jno
inc
or
in
daa
pop
mulb
sub
in
dec
sub
jecxz
adc
sub
fs
xchg
cmc
dec
imul
sbb
jmp
outsl
pop
sub
scas
loope
int3
imul
jp
orl
mov
mov
jnp
cwtd
push
or
popa
xchg
aad
xchg
inc
cmp
incb
loope
mov
sub
out
repz
mov
scas
mov
lods
imul
fistpll
into
sub
aam
push
push
sub
cltd
shr
inc
sahf
sti
push
push
push
xchg
repz
cmpsb
mov
push
push
stos
arpl
jnp
aad
inc
xor
movsl
push
mov
insb
xchg
dec
or
mov
jbe
nop
jae
adc
fcmovnb
lock
pop
add
roll
pop
popf
adc
sbb
fldln2
nop
xchg
ds
mov
ljmp
mov
push
dec
mov
stos
sbb
hlt
vpunpckhqdq
dec
insb
in
sub
stos
add
call
in
or
ret
mov
fisttps
lods
outsl
stos
mov
push
push
jne
in
pop
or
mov
adc
fdivl
or
jmp
repnz
lahf
ficoml
fs
hlt
cmp
outsb
adc
lock
inc
mov
mov
int3
out
inc
push
dec
aas
sbb
xchg
fmuls
cmpsb
mov
arpl
push
pop
lods
mov
pop
testb
jmp
jge
cmp
loopne
shlb
xor
insb
jp
mov
shl
fisubrs
lahf
hlt
int
fbstp
mov
pop
sub
sbb
aaa
out
fwait
push
out
sti
addr16
pushf
testb
bound
or
imul
mov
or
loop
stos
push
cmpsb
sub
and
stos
jnp
cmp
inc
or
mov
shlb
add
mov
sub
leave
pop
leave
pop
cmpsl
stc
aaa
gs
lods
jo
cld
popa
les
mov
mov
or
adc
jge
push
xor
repnz
stc
push
lcall
lods
adc
mov
add
xchg
push
in
push
scas
outsl
xchg
repnz
lods
jl
cmp
inc
or
dec
lret
pop
cmp
pop
xor
scas
sub
and
mov
repnz
mov
ds
inc
aaa
dec
or
sub
add
jno
lret
out
push
cmc
bound
mov
dec
inc
xlat
lahf
xlat
pop
cmp
dec
insb
mov
add
out
ja
adc
inc
lahf
insb
sbb
cmpsb
sbb
cld
aad
add
repnz
jg
jecxz
or
jecxz
mov
dec
push
jb
stos
loope
call
data16
popf
lret
dec
add
and
movl
lds
lods
fidivs
jb
ret
pop
cld
xchg
inc
fwait
sbb
push
jecxz
jns
push
xchg
sub
pop
dec
sar
inc
add
cmp
das
and
popf
push
sbb
imul
sbb
xor
fadds
pop
xchg
mov
cmp
adc
lcall
shll
loopne
dec
mov
mov
lret
push
push
mov
push
jge
cmp
sbb
sbb
out
rcrb
int
adc
inc
sbb
fidivl
mov
xor
jae
mov
movsl
fcmovnb
imul
fidivs
sti
or
sahf
cmp
inc
aas
pop
push
lcall
jmp
push
mov
in
or
cmpsl
xlat
and
loop
inc
ja
pop
and
insl
adcl
or
xchg
xchg
adc
xor
shll
call
dec
pop
push
mov
aad
sbb
sahf
sub
xchg
jp
popl
lea
inc
jns
pop
sbb
outsb
xor
lds
cltd
pop
and
pop
push
push
sarb
rorl
fidivs
sarl
fsubl
je
sub
mov
xchg
mov
out
pop
inc
aad
push
int3
mov
dec
decl
sahf
stos
jp
in
test
mov
test
dec
in
iret
mov
aaa
xchg
push
cmp
adc
sub
cwtl
mov
loope
incb
mov
or
in
sbb
insl
xchg
jmp
adc
stos
sahf
pop
xlat
ljmp
dec
mov
jle
adc
sbb
inc
jge
ljmp
fcoms
enter
int
add
pop
inc
xchg
movsl
jp
scas
jg
cltd
xchg
sbb
lcall
fisubrl
fisubs
daa
clc
andb
ljmp
cmc
jecxz
ret
xchg
xchg
and
mov
imul
jno
xchg
fnstcw
mov
roll
sti
sahf
lret
icebp
inc
push
jno
mov
cmp
cmp
jb
dec
out
cli
hlt
lds
je
jp
xor
sbb
outsb
rclb
pop
out
cmp
dec
jmp
xchg
mov
inc
push
or
mov
sub
js
push
loope
fiaddl
or
inc
aad
ret
test
shll
pop
testb
and
popf
mov
into
mov
arpl
movsl
and
add
sub
inc
sbb
push
das
int3
pushaw
fcmovnbe
xor
pop
loopne
mov
xchg
test
ja
fs
iret
sbb
in
xor
fcmovnbe
shrl
icebp
add
sub
testb
or
int3
push
cmp
mov
jp
lret
mov
pop
std
mov
inc
cmp
cmp
sub
lret
aad
pusha
roll
fiadds
rcrb
xchg
xchg
popa
jle
mov
push
push
shrl
mov
dec
loop
test
adc
fcomps
in
mov
mov
daa
pop
fidivrl
out
push
outsb
ret
or
aas
sbb
cmpsb
xor
hlt
stc
hlt
dec
push
push
adc
cmp
inc
xchg
fistl
adc
sbb
add
in
pop
ja
lds
insb
pop
in
xorb
jno
fwait
daa
ret
call
addr16
test
fisttpll
cwtl
cld
and
mov
aas
pusha
iret
sti
insl
xchg
mov
dec
jnp
sbb
andl
popf
mov
pop
pusha
cmc
arpl
pop
sub
push
and
adc
xor
shll
or
loopne
data16
xor
xchg
orb
jmp
push
or
lcall
cmpsb
push
cmpsb
lret
bound
lds
push
push
jmp
sbb
mov
add
mov
inc
add
add
dec
add
jg,pn
xor
rcll
push
cmp
loope
adc
fwait
outsl
in
xchg
jge
mov
jns
mov
loopne
mov
int3
into
inc
sarl
dec
repz
jecxz
dec
pop
movsb
insb
insb
ret
push
mov
repz
rcrl
ja
aad
lcall
aaa
mov
in
and
adc
sub
iret
imull
mov
popa
sub
and
or
addl
add
ja
cmpb
imull
sbb
xchg
jnp
adc
or
sbb
cmp
jnp
lods
xlat
paddq
mov
jp
stc
out
xor
cmp
bnd
jns
test
dec
lock
aam
mov
div
or
sbb
gs
and
mov
clc
ljmp
pop
mov
mov
cmp
aad
adc
outsb
cli
mov
inc
test
inc
push
inc
mov
mov
cmp
loope
mov
imul
ficoms
jb
mov
lcall
xchg
adc
cmp
aam
or
inc
out
push
lock
mov
movsb
push
xor
sahf
pop
push
lcall
lret
mov
setg
inc
imul
and
push
and
dec
pop
xchg
rcrb
pop
lods
loop
sahf
sub
int
fimull
mov
mov
std
push
add
aam
in
bound
xchg
push
and
dec
cld
xchg
jae
mov
jg
dec
push
mov
leave
lods
inc
nop
pop
add
mov
pop
insb
lock
iret
arpl
dec
mov
push
adc
loop
mov
mov
cmpsb
and
fsts
cmc
push
fsubrl
out
pop
js
into
jl
loop
movsb
inc
loope
aad
popa
testb
jmp
cmp
test
cmp
sub
adc
mov
jge
add
lea
andl
and
push
pop
add
push
cmp
rorl
addr16
jge
push
dec
sub
popf
test
iret
xchg
inc
lods
scas
mov
jge
mov
inc
repnz
fs
mov
push
xor
cmpsb
clc
mov
pop
sub
dec
aaa
call
mov
into
mov
loope
sbb
inc
cld
push
mov
cli
cmp
popa
mov
cmp
dec
xchg
lcall
pop
dec
add
ljmp
xor
ret
cwtl
scas
add
sbb
sub
in
cwtl
add
test
out
add
ret
cli
sahf
adc
shlb
cmp
or
add
clc
ja
dec
dec
sbb
rol
js
stc
sbb
sub
in
mov
sbbb
sti
jp
adcb
jg
cmp
mov
push
xor
push
xor
shufps
sbb
lret
rorb
sbb
push
push
popl
std
mov
push
push
jl
pop
lods
sbb
fwait
or
push
jne
ss
cli
bound
xchg
and
cmp
lock
leave
bound
dec
testb
call
add
outsl
sub
fisubs
js
xlat
sarl
gs
jge
push
ljmp
mov
mov
dec
and
mov
fwait
loop
jp
popa
push
bnd
lret
pop
stos
dec
imul
into
lret
sbb
jno
mov
jb
test
stos
and
stos
leave
jg
test
bound
test
ljmp
clc
mov
lods
fs
lea
std
js
xor
fwait
adc
push
test
jmp
pop
rorl
mov
out
push
arpl
xchg
cld
in
xor
or
loopne
fs
pop
mov
aam
pop
aas
dec
mov
add
test
fwait
testb
mov
sub
daa
clc
outsl
inc
push
lock
dec
je
andl
lods
mov
out
test
xchg
and
mov
dec
or
pop
into
ret
loope
les
push
aam
cltd
pop
jle
and
pusha
mov
sub
movsl
cmp
popf
inc
cltd
repnz
cmp
cld
inc
push
push
bound
and
clc
movsl
pusha
xor
xor
sbb
mov
enter
ss
and
fimuls
sbb
mov
inc
aaa
into
out
inc
sbb
in
lea
testl
inc
leave
shl
and
cs
add
pop
pop
cli
and
inc
add
inc
call
sahf
in
lods
or
fisttpl
mov
fildll
inc
pusha
or
push
cld
mov
gs
dec
push
clc
sub
insb
sar
xchg
jo
out
mov
jecxz,pt
cmp
loop
test
test
push
js
std
rorl
mov
or
mov
imul
sahf
ds
cmpsl
pop
lods
pusha
rclb
mov
pop
rol
loop
arpl
xchg
sahf
inc
call
sahf
inc
pop
popa
add
lods
push
xchg
cmp
mov
rcll
xor
adc
dec
pop
cmp
inc
rcl
bswap
and
insb
sar
rcll
adc
and
sub
push
mov
or
rcr
push
loopne
lods
sbb
out
mov
callw
int
cmp
add
movsb
ss
inc
std
and
enter
ret
sarl
mov
test
sbbl
rcll
cmpsl
ret
adc
push
addb
fidivrs
or
jno
lock
dec
adc
pop
mov
xor
mov
add
mov
adc
dec
ror
aam
dec
mov
dec
fsubl
test
dec
out
mov
js
xor
in
and
rol
subl
cld
insl
inc
add
pushf
mov
mov
mov
xor
shlb
dec
outsl
jmp
mov
mov
jo
test
sbb
sbb
pushf
cmp
push
aaa
and
in
xor
gs
or
addr16
mov
dec
cmpsb
mov
or
lods
cli
mov
push
xor
ss
cmp
repz
movsl
mov
adc
test
push
fstpt
dec
ja
cs
adc
pop
jp
int3
divb
cmp
dec
into
lods
adc
divps
pop
cmp
add
into
call
xor
push
mov
pop
pop
xor
add
push
sti
dec
outsl
push
adc
cmp
inc
or
pop
lock
pushf
out
inc
push
int3
sub
dec
es
xor
popf
ja
lret
or
sbb
push
ret
ljmp
mov
push
inc
ljmp
lcall
pop
mov
push
pop
leave
inc
fdivs
sub
fcmovu
mov
dec
inc
idivb
aas
and
shrl
dec
mov
add
stos
xor
xchg
shl
pop
push
shrl
test
mov
int
lcall
nop
jae
inc
jo
rorb
lcall
pop
outsl
dec
imul
xchg
push
and
cmpsl
dec
mov
mov
add
scas
mov
push
pop
inc
pop
inc
mov
cmp
rclb
jb
stc
daa
push
pop
or
jmp
sbb
add
cmp
aaa
adc
add
scas
xor
jp
cmp
rorb
sbbl
and
xchg
add
das
sub
icebp
push
test
or
jbe
adc
scas
or
arpl
cli
mov
pop
int3
xchg
sti
inc
repnz
popf
repnz
jl
in
or
xchg
insb
adc
mov
pop
xor
aas
movsb
test
repz
call
sbb
push
lea
push
jl
arpl
mov
fnstenv
test
rorb
jo
push
movsl
out
insl
mov
and
fidivrl
cmp
stc
idivl
mov
dec
push
sub
xorb
dec
add
inc
jno
les
in
jg
xchg
or
repnz
pop
cs
rol
cltd
enter
leave
lock
xor
cmpsl
mov
and
pop
inc
inc
mov
mov
lahf
jne
xchg
sub
lods
imul
cmpsb
jb
fistl
ds
ss
dec
push
and
mov
fwait
or
fsubr
ret
stos
jnp
mov
lock
lods
dec
and
sbb
mov
pop
xor
imul
pop
add
sahf
fcmovne
xor
sbb
xchg
and
inc
cltd
jecxz
xor
pop
test
dec
ja
mov
lahf
add
test
hlt
cmp
hlt
bound
push
fwait
inc
dec
mov
and
out
rol
inc
xor
sub
test
push
mov
divb
int
pop
test
cmpsb
xor
sub
pop
jbe
mov
outsl
test
imul
cmc
jne
cmc
rcr
xchg
into
jle
cld
cltd
or
outsl
pop
addl
es
or
push
movl
int
sarl
addr16
dec
xorl
loop
cld
int3
cwtl
jo
adcb
mov
xchg
dec
shrb
popa
add
mov
addr16
xchg
ljmp
fprem
js
popf
mov
out
lahf
mov
mov
xor
push
and
sub
imul
sbb
sbb
out
aam
aam
std
dec
sti
out
std
loop
inc
lret
aad
and
jns
loope
insl
pop
shr
xor
mov
inc
rorl
ds
cs
xchg
mov
mov
loopne
mov
adc
out
jo
into
mov
xchg
or
nop
sub
lret
xor
subl
cs
mov
data16
fstl
cmp
ficompl
sub
xchg
jb
dec
or
jne
call
lret
sub
arpl
sbb
faddl
stos
mov
lret
dec
sub
enter
fcompl
sub
xorb
ret
jo
data16
and
aam
iret
xchg
ret
add
sbb
push
lods
cmp
jp
xchg
addr16
push
gs
adcl
pop
add
daa
ljmp
and
jne
inc
sbb
cs
cmpsl
mov
fldl
es
mov
jg,pn
xchg
mov
lret
push
outsl
addr16
inc
repnz
mov
mov
out
stos
in
loope
sbb
out
inc
mov
ds
mov
cmp
imull
push
out
lods
test
sahf
xor
cmp
movsb
jo
mov
mov
popa
sub
xchg
int
and
inc
mov
lret
shrb
pusha
push
sub
push
dec
mov
inc
filds
push
sub
int3
lret
imul
ret
jnp
lret
mov
call
jne
rcrb
sbb
dec
bound
jne
xchg
mov
loope
pop
mov
xchg
fsqrt
stos
or
mov
call
push
inc
ret
mov
xor
mov
lahf
inc
or
movsl
or
adc
mov
adc
jb
scas
lret
mov
jno
mov
xchg
iret
out
sbb
fcomi
dec
nop
sbb
popf
test
aam
or
pop
add
xchg
clc
movsl
xor
and
lock
or
jp
jae
arpl
jno
jg
jle
inc
push
sbb
dec
repz
dec
orb
sbb
cmpsb
inc
sbb
mov
out
es
leave
and
subl
ss
push
sarl
test
push
aas
movsl
lcall
aaa
cmp
or
fsubs
add
bound
int3
add
pop
xor
clc
jns
cmp
dec
xchg
jl
xchg
jo
aam
aaa
outsb
xor
and
pop
xchg
add
inc
xor
push
pusha
push
shlb
mov
adc
sbb
cmp
dec
lods
add
sub
into
mov
test
mov
mov
lock
aas
lcall
lock
xchg
or
jp
cmp
cli
pop
lods
leave
mov
fbld
test
sbb
add
dec
ss
stc
negl
jb
mov
out
mov
and
and
cmpl
mov
add
push
das
icebp
add
cmp
pusha
adc
loop
fistps
xchg
push
mov
in
stc
popf
shr
repnz
dec
stos
pushf
jecxz
xor
lret
aam
out
mov
call
in
insl
sti
xchg
cwtl
mov
cwtl
jnp
jle
add
in
iret
fisttpl
insl
out
sub
fstpl
sar
nop
pop
lods
xchg
insl
rcr
cmp
xchg
or
stos
jl
or
and
jmp
in
cmp
cltd
jg
fwait
push
jmp
lret
sbb
mov
and
push
repz
enter
adc
add
mov
fwait
mov
xor
or
rcl
ds
add
pop
pushf
and
pop
mov
repnz
pop
out
cmp
xor
lds
adc
test
push
repnz
push
push
pop
inc
aad
xchg
xchg
push
sub
in
out
adc
xchg
xchg
lods
push
fwait
mov
jg
xor
loop
dec
std
lds
jbe
repnz
or
jbe
mov
in
adc
stos
sub
arpl
es
inc
mov
adc
repnz
test
adc
stc
dec
cli
cmp
leave
addr16
cwtl
les
cmp
or
jne
cmc
or
xlat
loopne
push
fcoms
mov
repz
cs
mov
movsb
inc
xor
mov
and
sub
hlt
rcrl
popf
adc
adc
mov
mov
inc
int
mov
lods
push
je
add
mov
ret
inc
out
lods
shrb
cmpsb
xor
mov
std
adcl
test
mov
dec
xchg
mov
addr16
rcll
mov
imul
roll
pop
dec
jbe
pushf
fistps
xor
jae
mov
and
movsb
cltd
aaa
sub
pusha
sbb
add
into
xor
shll
lea
push
jle
bound
out
sbb
sbb
jno
or
pusha
es
mov
addb
add
aam
mov
mov
jp
in
dec
inc
sub
sbbb
and
jge
lcall
sbb
sbb
addr16
sbb
cmp
sub
xchg
inc
jae
inc
push
pop
jno
add
pop
cmp
dec
inc
ret
jg
rorl
or
xor
adc
ljmp
aas
cmp
jg
dec
arpl
test
aaa
and
mov
fbstp
xchg
xor
movsb
sub
js
sub
inc
adc
mov
popa
adc
adc
lret
or
sbbl
aas
into
jge
inc
mov
xor
fldenv
iret
inc
push
dec
xchg
repnz
aaa
out
cmp
aad
and
xor
sub
lcall
xchg
mov
scas
shrb
sbbl
popf
imul
orb
lea
pop
dec
dec
xchg
sbb
inc
aaa
ret
je
mov
xchg
add
xor
mov
scas
mov
aad
and
push
dec
data16
sub
loope
rol
loop
sub
mov
xchg
lret
and
add
scas
loopne
xrelease
lds
mov
out
mov
push
cmc
sbb
in
nop
adc
mov
sub
ficoml
pop
leave
adc
test
aaa
dec
jo
sar
scas
icebp
sub
mov
pop
push
sub
ret
imul
gs
and
inc
lret
ds
data16
cmpsl
mov
pop
ds
loopne
test
mov
sub
enter
pop
jne
xor
int
icebp
stc
mov
mov
ret
jp
mov
mov
stos
pop
fistl
jge
mov
jmp
xor
adc
cmp
inc
pop
sbb
xchg
bound
sub
pushf
out
mov
mov
jno
adc
mov
ss
xchg
cmp
lock
or
test
fistpl
cmp
mov
aam
push
arpl
and
xchg
jne
out
cmp
xchg
jg
fs
ret
repz
mov
das
and
inc
cmpsb
mov
lahf
xor
push
xchg
in
adc
fstpl
mov
jle
push
jnp
fldl
aaa
xchg
sarl
scas
or
xor
push
out
rolb
int3
sub
sbb
icebp
and
xchg
stos
sub
in
cmc
mov
mov
sub
push
jnp
data16
inc
leave
repnz
out
jmp
mov
les
mov
inc
adc
xchg
cmp
and
ja
icebp
pop
mov
dec
xlat
popf
cmp
pop
iret
movsl
sbb
insb
cmp
imul
pop
out
lcall
dec
fwait
xchg
sarb
cltd
sub
cmp
dec
dec
icebp
mov
sub
xchg
or
das
nop
mov
mov
pop
mov
cmp
sti
aam
call
lods
cmpl
or
jp
je
adc
jb
pop
aaa
push
test
pop
mov
pop
cmp
sarl
ds
xchg
dec
or
mov
xor
outsl
sbb
dec
pop
cmp
cltd
and
fcmovbe
xchg
pop
xlat
test
mov
nop
addb
mov
mov
insl
or
jns
sbb
xlat
movsl
push
fs
jb
mov
out
sbb
push
rcrb
adc
jge
fldcw
icebp
or
push
test
jb
xchg
push
loopne
loop
mov
sbb
sub
cmp
inc
mov
pushf
jae
js
pop
cmpsl
clc
jno
shrl
mov
push
data16
push
sbb
sbb
push
inc
push
out
push
int3
xchg
pushf
jns
lcall
xor
mov
in
imul
jmp
mov
sahf
lds
scas
fsub
gs
clc
hlt
sti
adc
push
mov
cmp
pop
ja
xchg
call
test
cmp
adc
insb
adc
inc
jo
dec
inc
mov
xor
loopne
dec
lds
sbb
mov
data16
adc
insl
cli
enter
inc
popf
cmp
test
je
dec
push
xchg
push
test
adc
out
xchg
test
out
test
sub
int
jnp
and
xchg
fs
push
adc
adcb
das
loopne
pop
push
scas
xchg
icebp
lock
aaa
xchg
lret
sbb
add
pop
fwait
pop
mov
xchg
mov
jmp
mov
inc
pminub
shlb
mov
mov
ficomps
mov
rcrl
jle
xchg
adc
fdiv
jl
mov
fistl
lret
pop
or
xchg
dec
sahf
pop
add
or
call
fs
aad
push
in
xor
lea
in
mov
xchg
xorl
out
or
push
mov
mov
fistps
cmpsb
pop
movsb
les
insl
leave
jns
xchg
jle
call
out
xlat
mov
mov
lods
push
fwait
mov
enter
les
mov
jne
mov
push
fildl
cmp
mov
xchg
shll
je
popa
or
loopne
push
inc
idiv
gs
pop
adc
mov
cli
jne
cli
xchg
and
xchg
sub
sbb
imul
push
je
dec
rcr
add
shlb
xchg
stos
into
sub
xchg
andl
int
mov
push
aas
cltd
mov
xchg
mov
rorl
out
pop
mov
pushf
push
inc
push
fcomps
dec
fsub
in
loope
jo
scas
repz
add
cmc
std
gs
push
adc
lods
sub
mov
test
cmp
push
les
scas
ljmp
jmp
mov
jo,pn
adc
push
jo
rclb
and
clc
nop
sub
int3
iret
ficompl
cltd
xor
inc
leave
sub
push
nop
test
mov
rorb
dec
push
xchg
les
sub
dec
call
rclb
xchg
cmc
stos
scas
cld
fsubrs
mov
and
jmp
mov
mov
rcl
add
and
mov
adc
push
sti
mov
outsb
add
imul
dec
ds
enter
inc
mov
xchg
mov
inc
cld
xchg
ljmp
pop
jl
push
clc
jg
call
mov
jmp
dec
mov
or
add
cmp
xchg
cmp
mov
jecxz
std
add
or
lods
orl
and
stos
and
gs
out
and
add
insl
push
sbb
movsb
jae
adc
cld
scas
testb
inc
call
mov
mov
xlat
mov
sbb
mov
adcb
dec
fdivrp
inc
inc
jg
test
leave
outsl
adc
leave
mov
jbe
mov
jecxz
shrl
push
addb
jecxz
lea
and
mulb
cmpsb
or
and
les
les
cltd
lret
add
idivb
imul
ds
iret
cmc
cltd
pop
es
and
mov
xor
js
enter
xor
loopne
into
sub
mov
cmp
xor
inc
push
push
push
subb
xchg
mov
bound
mov
adc
aas
pop
cli
icebp
mov
lods
dec
loope
adc
les
das
das
and
dec
stos
cmp
sub
mov
rcr
arpl
stos
cmpsl
ret
mov
sbb
push
ror
enter
add
sti
push
aad
mov
inc
mov
and
xchg
and
je
xchg
xchg
testb
mov
push
mov
clc
lahf
xchg
xorb
cmp
enter
ret
cmc
pop
pop
loopne
or
sbb
adc
push
jbe
rep
cmp
mul
mov
mov
ljmp
lods
adc
xchg
pusha
push
inc
mull
push
pop
pop
jecxz
jge
cmpsb
cs
mov
mov
jge
mov
hlt
jmp
sub
mov
adc
xor
iret
cmp
mov
mov
add
xchg
add
jecxz
gs
and
mov
push
mov
stc
loopne
sub
mov
test
add
inc
mov
adc
push
test
adc
push
lods
mov
lock
stos
dec
int
rorb
and
test
adc
scas
xor
jecxz
pushf
sub
xchg
out
mov
pop
leave
rorb
xchg
fsubl
pop
inc
add
or
aam
outsl
stos
je
fidivrl
adc
je
ss
sbb
dec
aam
cmpb
cmp
out
pop
shl
repnz
fmuls
adc
xchg
add
sarl
in
mov
loop
stos
mov
loopne
andl
pop
pusha
mov
jmp
xchg
add
sub
in
jecxz
xor
jae
jno
imull
or
and
xor
pop
xor
dec
jne
cli
or
ja
mov
scas
cmp
push
mov
scas
mov
xlat
mov
shl
icebp
pop
jle
or
mov
jo
cmp
xchg
cs
out
sbb
or
push
cs
and
fmulp
cmp
inc
icebp
or
adc
pop
pop
test
fstps
jp
popf
mov
push
pop
mov
insb
xchg
test
mov
add
sub
pusha
movsl
jle
push
cmp
mov
aad
mov
xchg
pop
mov
xor
fmull
scas
enter
idiv
cmc
jae
insb
adc
sbb
jl
into
insb
icebp
js
lret
test
or
or
fsubs
pop
fwait
dec
mov
sub
stos
dec
arpl
ds
aaa
mov
add
cmp
sub
or
xchg
idivl
std
in
jmp
or
inc
adc
ret
int
adc
xchg
inc
setge
mov
test
repz
mov
add
out
lds
jmp
fsubrs
mov
xlat
stc
sbb
repz
gs
mov
sbb
aas
xchg
test
pop
inc
cmp
lcall
movsl
mov
int3
popf
mov
cmp
push
sub
or
aas
ds
jge
jae
adc
aas
and
jo
shl
mov
outsb
mov
cltd
jle
hlt
add
js
fs
push
fld
enter
mov
repnz
add
cltd
ret
jmp
cmpsl
jp
xchg
push
out
jnp
push
out
rorb
pop
sbbb
jno
jb
xchg
notl
cmp
rolb
fldl
jnp
sbb
ja
lock
out
roll
repnz
cli
xor
popf
out
divb
movsl
enter
fldenv
cmpsb
lods
mov
xchg
inc
pop
out
pop
xor
xchg
movsl
or
fcompl
jnp
lea
insb
test
adc
sbb
ret
std
fcoml
rol
imul
jp
adc
fimuls
sbb
xor
dec
push
push
std
cbtw
jo
aad
sahf
mov
xchg
cmpsb
sbb
fidivrs
xor
inc
das
outsb
mov
and
push
pop
sbb
cmp
add
insb
mov
outsl
gs
ja
in
lods
mov
and
dec
leave
push
les
loop
bound
sahf
jecxz
mov
notl
inc
lock
cmp
xchg
in
add
int
iret
cmc
lea
inc
mov
lahf
inc
mov
movsb
adc
mov
xchg
or
xor
push
lods
ret
dec
jns
sbb
xor
and
or
scas
rorb
inc
test
jl
fwait
lcall
dec
aam
orl
outsb
imull
or
lock
sarb
daa
xlat
sbbb
mov
xchg
lods
fiadds
insl
loope
ret
xchg
xchg
es
sub
lret
mov
dec
dec
mov
cli
lcall
ja
pop
fstl
aas
leave
xchg
aad
jge
xlat
stos
xlat
inc
mov
or
in
adc
jnp
mov
add
xor
push
cli
cmpsb
and
and
imulb
xor
dec
in
push
mov
cwtl
andb
lds
in
test
pushf
pushf
xor
outsl
sbb
adc
in
ljmp
mov
and
xor
mov
add
sub
fdivr
imul
fdivs
aas
inc
dec
cmp
inc
fs
andl
jo
iret
mov
and
jae
and
ja
and
push
out
adc
in
jl
pop
push
aad
iret
dec
lcall
jae
or
cld
xor
repnz
pop
leave
pop
jmp
aam
adc
and
bound
pop
rorb
rcrb
dec
sbb
and
or
aaa
shr
add
jle
mov
mov
jo
dec
push
push
pusha
mov
sub
mov
jno
cmc
cmpsl
push
sub
fsubrs
sbb
xor
in
mov
jns
xchg
push
sbb
inc
ret
arpl
inc
add
push
or
mov
out
and
push
pop
xchg
lock
dec
push
js
into
sarb
jno
leave
jmp
aaa
rcrl
stos
and
and
push
mov
sub
mov
jbe
jg
adc
mov
mov
addb
int3
outsl
add
rcl
repnz
gs
sbb
inc
loopne
add
add
movsl
dec
fcmovbe
scas
or
cmpsb
mov
sub
adc
mov
mov
ss
push
cmp
jg
xlat
pop
or
dec
cmp
outsb
xor
divb
shll
xor
mov
enter
mov
hlt
out
clc
fwait
pop
mov
inc
dec
inc
cmp
xor
cmpsl
add
and
xor
mov
add
inc
push
sbb
add
push
enter
les
mov
adc
add
pusha
mov
xchg
negb
test
testl
mov
xchg
push
mov
das
rorb
pop
pop
push
rolb
lods
cmc
in
push
ss
and
mov
jge
mov
loopne
lret
pop
fcmovnb
rcl
cli
movsl
ret
sbb
cs
leave
xor
bound
rcrl
xor
sbb
add
jecxz
cld
and
pop
mov
int3
out
mov
xchg
jecxz
loope
mov
adc
and
mov
or
xorb
mov
aad
insl
test
cmp
in
push
les
adc
pop
cld
clc
fs
mov
push
repnz
or
mov
jbe
fnsave
out
ljmp
lcall
mov
lods
ja
cmp
mov
stos
sbb
dec
insl
shrl
in
hlt
push
rcrb
inc
mov
jae
cmp
jmp
addl
test
mov
adc
cltd
aam
outsb
loope
arpl
adc
hlt
sub
push
out
inc
in
mov
jne
popf
inc
mov
mov
and
bound
out
sub
imul
rcll
add
scas
push
hlt
cmp
sbb
and
xchg
call
adc
xor
inc
rcl
adcb
inc
hlt
call
aam
sbbl
xor
mulb
add
in
sub
jbe
cld
pop
movsl
ss
mov
inc
in
pusha
dec
rcrl
add
jmp
mov
and
test
insl
pop
pop
cmp
popa
std
je
adc
cmp
das
mov
out
pop
into
mov
leave
sarb
test
xlat
cs
lods
mov
xchg
loop
rorl
jb
jb
cmp
fdiv
xchg
mov
and
xor
stos
sbb
push
addr16
rcll
xchg
ljmp
pop
insl
jmp
dec
xor
fiadds
pop
lds
scas
xor
adc
adc
inc
jns
xor
ret
pusha
adc
or
mov
fcmovu
lea
jae
inc
xor
sbbl
mov
mov
lahf
ds
xor
sbb
test
mov
repz
push
dec
dec
xchg
inc
out
outsb
mov
pop
add
bound
sbb
repnz
popf
inc
nop
inc
decl
adc
mov
in
lcall
loop
xchg
pop
in
dec
bound
xchg
xorl
aad
imul
mov
nop
cmp
leave
mov
push
aaa
popa
incb
jne
mov
test
mov
lock
or
not
aam
jle
inc
setno
mov
sbb
or
cwtl
stos
pop
rorl
inc
push
jmp
sub
daa
movsb
shll
or
cmp
push
inc
sub
push
into
sbb
and
sbb
mov
aas
adc
jbe
mov
jns
lock
popa
dec
fwait
and
jle
push
cmp
or
and
adcb
pop
xchg
ljmp
scas
clc
jnp
movsb
xchg
bound
hlt
scas
mov
subb
mov
xchg
iret
and
pop
aas
cmc
test
incb
sbb
aad
dec
pop
xlat
cmp
and
sbb
mov
sub
cmp
fldenv
mov
or
push
mov
ret
xchg
cli
outsb
in
fisttpll
pop
xchg
cli
push
addb
clc
or
and
fucomp
xor
outsb
scas
fisubs
mov
mov
cmc
out
gs
out
adc
inc
push
mov
add
in
std
outsb
rclb
fbstp
dec
sub
sub
jp
call
jle
xcrypt-ofb
cmpsl
das
rclb
js,pt
not
test
adc
mov
enter
push
add
lahf
jl
or
jg
mov
push
cmp
aam
arpl
jns
mov
inc
pop
enter
fsubs
pop
mov
sbb
rcl
mov
repz
lret
inc
and
iret
push
cmpsb
xlat
push
xor
int3
adc
stc
imul
xchg
or
add
push
fldl
pop
test
pop
xor
fldt
fbstp
insb
jmp
xchg
push
daa
das
jnp
inc
ficoml
inc
push
orl
dec
jbe
inc
cli
and
mov
push
dec
cmp
add
shlb
inc
xchg
adc
insl
and
add
mov
shlb
incb
test
push
inc
sahf
push
jge
insl
je
dec
inc
out
mov
mov
pop
movsb
xor
cmp
sub
lret
sub
aas
mov
cmp
dec
xchg
fiaddl
fsubl
sub
and
xorb
imul
out
jmp
repz
and
pop
push
sbb
xor
sub
jo
jecxz
or
addb
pop
mov
dec
mov
inc
push
or
cmp
xchg
fbld
adc
dec
cmp
jb
push
inc
adc
cmp
push
test
stc
jbe
cli
aam
dec
add
test
mov
lcall
call
sbb
xchg
pop
sub
mov
bound
in
jb
inc
sbb
push
push
pop
imul
and
push
pop
and
std
call
inc
adc
pop
les
or
add
imul
mov
mov
ljmp
lahf
fcmovnb
call
sahf
inc
push
xor
aad
mov
inc
inc
sbb
push
sub
lea
cs
jne
sahf
in
jno
adc
ss
mov
jae
pop
fistpll
adc
dec
jge
ss
xchg
jnp
stos
sbb
cltd
lret
mov
xor
or
sub
xlat
cmp
cmpsl
jb
pop
mov
fistl
in
cmp
jbe
inc
add
push
insl
inc
or
out
lock
and
movb
mov
and
dec
sub
add
fs
popf
jp
push
scas
pop
dec
adc
rcrb
insl
out
sub
dec
mov
jne
adc
shrl
dec
sbb
push
andl
add
je
hlt
jg
mov
adc
pop
adc
test
add
jnp
fnstcw
enter
adc
inc
sbb
xor
jbe
push
movsb
mov
pop
call
fdivr
jne
std
xor
out
or
push
xchg
sbb
loopne
fldenv
push
frstpm(287
cmp
jg
icebp
xchg
mov
jnp
into
and
out
pop
mov
adc
xchg
push
fisubs
sub
sti
jle
push
test
stc
test
fs
ficomps
adc
inc
push
cmp
sbb
adc
jg
cmp
fs
pop
sub
jge
inc
dec
pop
cmp
xchg
jecxz
mov
jne
mov
inc
jl
scas
pop
cmpsb
pop
mov
mov
fmul
push
out
into
cmp
inc
loope
sbb
dec
insl
or
dec
addr16
imul
stc
stos
or
mov
mov
test
inc
cmp
jno
sub
or
dec
mov
cs
sbb
stc
jbe
test
shll
mov
pop
les
fbstp
imul
cmp
and
dec
mov
and
sbb
mov
inc
cmc
jl
adc
inc
cli
les
xor
in
fnstenv
mov
add
mov
imulb
aas
mov
xor
and
or
pushf
adc
adc
cld
cmp
je
xor
pop
fst
pop
push
jge
pop
sbb
cmp
mov
arpl
mov
xchg
cmp
pop
sti
popf
inc
push
call
dec
aaa
and
adc
das
jae
and
fwait
icebp
loop
enter
or
sbb
mov
cmpsl
out
push
rclb
push
cmpsb
mov
adc
xchg
push
xchg
or
dec
jg
bound
fisubrs
aam
push
adc
push
iret
add
lea
adc
inc
or
or
imul
jmp
popf
xchg
and
adc
xchg
jle
stos
xchg
mov
int3
xor
lock
ja
push
push
mov
stos
mov
int3
cwtl
dec
jns
jo
adcl
imul
mov
test
mov
leave
movsb
cmc
scas
xchg
stos
arpl
xchg
pop
inc
push
rcr
add
int
xchg
lahf
out
xchg
dec
mov
test
xchg
ret
xchg
jmp
cli
pop
stos
mov
xchg
jno
cmp
icebp
fistpll
dec
jns
mov
push
inc
cmc
jmp
mov
fwait
js
or
aam
inc
pushf
and
scas
sbb
push
outsl
mov
hlt
xchg
mov
jbe
jb
leave
jp
mov
xchg
sbbl
pop
loop
add
std
xor
mov
addr16
ret
cltd
addr16
ljmp
push
in
add
xorb
aam
cmp
add
ds
dec
lods
insb
jnp
lds
ror
imul
mov
outsb
enter
xorb
mov
iret
les
inc
insb
addl
cli
push
dec
mov
adc
add
cmp
nop
shl
loopne
mov
out
andl
lret
fistpll
subl
or
mov
mov
cmp
ds
lea
aaa
cmpsl
or
and
pop
mov
and
jo
push
sbb
mov
xchg
and
fiadds
dec
push
sbbb
pop
sbb
aad
fbstp
push
cmp
push
pushw
mov
rcr
arpl
dec
cmp
mov
push
in
inc
into
fbstp
mov
int
mov
sub
mov
std
dec
int3
nop
jbe
cmovno
jb
notl
xchg
mov
xor
stos
cmpsl
jle
sub
cmp
mov
add
psubsb
mov
aas
dec
repnz
adc
sub
int3
ss
outsb
inc
movl
lods
cltd
pop
add
hlt
or
sti
push
stc
adc
xchg
ds
pop
iret
jne
mov
ret
cmp
test
ds
in
test
in
sti
jle
jb
adc
fiadds
xor
cmp
or
loop
stos
adc
mov
mov
scas
push
call
test
aad
cwtl
fiaddl
sbb
daa
mov
and
or
jle
mov
adc
xor
lahf
and
jmp
push
aad
mov
das
adc
sub
add
dec
repnz
repz
jg
inc
repnz
push
mov
int3
xor
lods
addl
das
daa
in
int3
inc
xchg
sub
negb
sub
mov
xor
jae
pop
fldl
rcrl
jecxz
lock
jmp
jno,pn
dec
in
mov
mov
mov
fildl
xchg
dec
gs
movsl
lahf
es
cmpsb
adc
cmp
in
dec
popa
ds
dec
ret
push
mov
fnstcw
pop
pop
shufps
mov
and
test
mov
adc
mov
fs
push
add
or
shl
mov
in
mov
int3
shl
lret
push
and
mov
ret
add
cltd
dec
sub
popf
mov
mov
add
out
jmp
ds
in
xor
call
out
and
sub
movsl
inc
fst
mov
movsl
and
mov
add
nop
pushf
lock
xchg
push
inc
rcrb
cmp
mov
repz
test
addr16
xchg
cmp
add
adc
les
sbb
es
and
sub
xchg
sub
jge
out
adc
clc
in
fdivl
adc
sbb
push
ret
int
lret
test
fwait
pop
or
mov
push
enter
enter
push
xlat
xchg
std
add
sbb
movsb
push
pop
lea
adc
sub
push
cwtl
lods
test
sub
jl
or
xor
test
hlt
mov
outsl
inc
inc
andl
in
xorl
jno
rclb
bound
lcall
sbb
sbb
jns
sarl
mov
sbb
inc
loop
jge
push
sbbl
mov
jge
push
xchg
insl
dec
mov
les
lret
ja
jg
mov
jno
sbb
cmp
push
adc
sub
xchg
sbb
test
adc
scas
pop
aaa
mov
inc
mov
push
cwtl
inc
roll
lret
pop
dec
mul
push
mov
pop
jp
dec
push
push
push
inc
jmp
daa
pop
push
inc
mulb
outsl
adc
outsb
bound
adc
or
or
popa
sbb
add
aad
mov
jno
jmp
mov
test
dec
fisubrl
fsts
inc
dec
push
testl
xor
cmpsl
mov
gs
cmp
lcall
cmp
leave
cltd
cmp
or
xchg
mov
fstps
cmp
imull
lret
inc
or
mov
je
jno
shl
cmpsl
inc
mov
xchg
insl
push
out
jo
daa
subb
leave
xor
mov
lret
cmp
cmpsb
and
je
enter
xchg
add
mov
xor
bound
mov
mov
cmp
repz
mov
pop
scas
pop
push
push
leave
add
loopne
imull
pop
push
out
push
popa
in
ljmp
or
aaa
pop
subb
sub
int
mov
into
add
inc
out
add
dec
mov
xor
fidivs
int
repz
pop
and
mov
sub
cmc
jae
popf
mov
push
add
pop
repnz
sahf
jecxz
push
or
sub
adc
les
out
inc
loop
popf
fidivs
popa
mov
add
idivb
mov
mov
imul
in
mov
push
stos
dec
hlt
shl
lcall
adc
ss
sbb
or
leave
mov
sbb
jmp
mov
sbb
jnp
sarb
rcrl
mov
jnp
add
mov
mov
bound
sbb
mov
cltd
loop
int
inc
xor
test
mov
fdivrs
in
cs
ds
mov
sub
inc
test
xor
sahf
xchg
shl
inc
in
add
or
jo
imul
jno
mov
fdivrs
and
pop
cmp
out
xor
subb
ficomps
sbb
mov
cmp
aam
sub
and
and
dec
lds
loope
loop
add
cs
pop
xchg
mov
and
outsl
insl
and
jae
pusha
addr16
push
and
popa
cmpsl
popf
pop
test
jecxz
mov
mov
sub
ret
in
push
cwtl
sbb
out
push
icebp
mov
dec
dec
popa
insb
mov
movsb
push
and
inc
out
cmp
pop
in
mov
push
mov
jg
scas
clc
jmp
mov
push
mov
and
push
add
das
and
sti
aad
jp
ffree
and
dec
push
dec
jle
dec
pop
bound
xor
sub
sub
iret
jbe
push
pop
pop
push
mov
cmp
mov
sbb
pop
mov
mov
pop
xor
xchg
inc
outsl
jo
xchg
mov
mov
outsl
inc
cmpsb
inc
mov
mov
leave
mov
mov
xchg
rcll
frstor
adc
inc
pop
jns
popf
cmpsl
sub
cmpsl
jno
mov
add
jle
push
mov
lahf
loope
outsl
sbb
out
cmpl
dec
or
enter
inc
popf
pop
andl
add
out
xlat
cmpsb
in
jge
out
mov
je
push
pusha
push
or
inc
lret
lret
inc
xchg
adc
mov
imul
pop
jo
jno
ss
loop
mov
mov
neg
jne
mov
mov
dec
push
imul
mov
lret
pop
dec
add
mov
xchg
ds
sbb
icebp
jge
lock
test
adc
mov
fmuls
les
cmp
push
dec
cmp
daa
xlat
bound
xor
dec
pop
mov
out
test
daa
jg
test
sbb
lahf
or
inc
mov
jp
mov
ret
aad
and
rorl
daa
mov
cs
mov
jmp
jb
jmp
into
popf
sub
inc
clc
jnp
test
pop
sbb
gs
movsb
stc
jbe
negb
xorb
hlt
loopne
xor
nop
aaa
push
sub
mov
stos
mov
lds
and
pop
std
in
sbb
aad
inc
loopne
icebp
stos
add
adc
in
dec
cli
mov
inc
pop
lods
ficoms
adc
xchg
shl
sbb
adc
mov
inc
adc
jnp
lea
mov
push
int
in
fcmove
adc
inc
les
xchg
pop
xchg
cmc
int
enter
mov
fdivrp
or
mov
push
je
cmp
adc
mov
ds
outsl
dec
inc
les
aas
cld
pop
xor
sbbl
xlat
and
dec
stos
add
es
dec
pop
out
mov
push
inc
mov
jecxz
mov
sar
inc
jnp
mov
xor
inc
cld
aaa
inc
ja
daa
lcall
push
mov
ja
test
sbb
data16
xchg
cmp
mov
push
fbstp
fisttpll
xchg
loopne
cs
adc
add
jnp
outsl
sub
out
adc
cwtl
shlb
dec
mov
out
dec
or
xchg
or
ljmp
arpl
mov
ljmp
sbb
jl
and
xchg
jns
xor
jmp
push
push
sub
aas
jne
test
mov
push
xor
and
repz
mov
sub
pop
xor
loopne
test
clc
or
jno
add
mov
faddl
out
scas
dec
pop
or
sub
out
push
std
sbb
lock
inc
repnz
cmpsb
arpl
loope
xor
into
adc
jns
cmp
push
add
ss
fisubrs
out
les
xor
adc
jae
es
dec
sbb
jo
out
shll
cmpl
mov
adc
xor
aad
shll
aaa
ret
aad
pusha
fbld
fbld
aam
mov
push
loop
loop
icebp
cmp
in
sub
imul
pusha
jbe
movsl
inc
jno
pushl
or
data16
ja
adc
sub
rolb
jns
xlat
fidivrl
jecxz
in
popf
adc
int3
loopne
stos
mov
out
into
jg
scas
add
add
into
xor
jp
and
dec
mov
cmp
enter
fisttps
es
cli
out
jne
push
in
or
cmp
cmpsb
inc
scas
dec
cmp
add
mov
xchg
jbe
insb
and
adc
xchg
icebp
adc
or
mov
fdivrl
fstpt
push
jecxz
push
outsl
dec
mov
cli
stos
or
push
push
pop
rcl
outsb
mov
inc
adc
sub
scas
push
xor
sbb
mov
aas
outsl
pushf
push
cld
add
and
sub
inc
aam
inc
jmp
push
fldl
inc
sub
mov
sub
sahf
dec
sbb
ret
leave
mov
lods
es
jno
pop
das
cltd
pop
adc
shlb
pop
icebp
adc
mov
add
adc
out
pop
adc
mov
dec
push
sub
push
test
jp
pop
rorb
fidivl
pop
push
jl
sbb
adc
mov
jno
ficomps
push
inc
scas
scas
subb
jae
xlat
xlat
jge
iret
in
mov
das
ljmp
leave
inc
and
lcall
xchg
in
lods
xchg
mov
cld
jne
xchg
xchg
mov
and
sub
sbb
sub
adc
jns
call
xchg
add
xor
pop
adc
push
or
xor
pop
add
gs
fstp
gs
xor
jmp
sbb
cmpsb
cmp
xchg
inc
cmpsb
sbb
stc
bound
scas
inc
icebp
lods
mov
iret
int3
cmpsb
push
daa
lods
enter
or
add
or
out
inc
addr16
notrack
ss
imul
scas
fisubrs
movsb
push
cmp
adc
out
ljmp
inc
jmp
cwtl
movsl
aas
dec
mov
mov
imulb
repz
xor
movsb
dec
mov
xlat
mov
adc
xchg
das
sub
xchg
inc
movl
xorb
jl
add
movsb
shrl
out
inc
jmp
mov
push
mov
and
inc
sbb
dec
stos
mov
fisubl
fcom
roll
outsb
dec
mov
xlat
je
int
jne
test
dec
cmp
xchg
cli
stc
mov
mov
adc
aad
mov
xor
sbb
jge
jnp
and
std
btc
dec
push
outsb
sbb
arpl
pop
mov
loop
stc
pop
stos
cld
or
jb
xor
sbb
int
xchg
stos
and
or
jne
and
test
dec
cmp
movsb
sub
xchg
push
mov
fdiv
jo
push
icebp
les
mov
sbb
imul
and
ret
cmp
out
pop
cmp
cmp
out
cmpsb
adc
mov
cld
jae
mov
lret
add
pop
mov
xchg
push
pop
mov
or
icebp
dec
das
xchg
hlt
add
jle
or
push
rclb
or
sbb
cmp
push
mov
imul
dec
or
cmp
add
mov
push
cltd
aas
mulb
dec
and
incb
jnp
adc
mov
xchg
aas
jb
xchg
js
icebp
cmp
xor
mov
nop
pop
sub
mov
repz
jno
mov
fucomi
cli
pop
pop
or
icebp
jae
loop
test
mov
jmp
fbld
and
outsb
mov
adc
xchg
inc
mov
loopne
pop
cltd
clc
ja
xor
jecxz
jmp
pop
push
jmp
and
fidivrl
sbb
cmp
aam
mov
sub
cmpsl
push
dec
pop
cwtl
movsl
jecxz
popa
mov
jmp
add
mov
jno
js
xchg
nop
mov
inc
shlb
scas
adc
loopne
sbb
mov
cltd
mov
mov
aam
add
mov
imul
or
xor
mov
call
stos
bound
test
mov
mov
pop
sarb
xchg
sub
xchg
lcall
adc
sub
push
lock
ja
fistps
aam
movsl
sub
sbb
cmpsl
test
int
xchg
sub
jb
lret
xorl
loopne
push
pop
arpl
xchg
aaa
cmp
pop
repz
inc
xchg
jnp
jle
sbb
pusha
test
mov
jo
ret
mov
add
cmp
gs
mov
ljmp
loop
loop
das
mov
or
and
sbb
daa
mov
mov
sti
lret
adc
roll
clc
shr
inc
xchg
sbb
push
fsubrs
rcrl
and
mov
sbb
and
leave
mov
xor
repnz
adc
imul
andb
push
or
dec
jnp
adc
cmp
mov
leave
xchg
clc
dec
or
xchg
cmp
mov
jne
sbb
add
mov
cli
dec
cs
sbb
scas
pop
xchg
push
cmpsl
cmpsb
mov
subb
jo
and
xchg
lea
adc
xchg
cmp
push
cs
sbb
mov
mov
insb
out
dec
pop
push
jp
xchg
ja
adc
mov
add
test
xchg
ret
insb
mov
sbb
mov
mov
push
aas
leave
aaa
dec
adc
fnstenv
das
sahf
rcr
mov
sub
cmc
sbb
inc
add
dec
ljmp
mov
stos
fldl
sub
jle
pop
sub
inc
cmpsl
in
lds
fildl
int
arpl
shll
push
xchg
in
js
call
sbb
mov
stos
stc
and
inc
outsl
outsb
sub
scas
and
in
lods
subb
fdivrp
xor
adc
inc
hlt
cmp
popf
adc
ja
inc
hlt
jnp
outsb
insl
xlat
mov
lret
pop
inc
mov
inc
sub
cltd
mov
repz
leave
mov
fldt
adc
mov
lods
and
loope
jecxz
stc
idivl
mov
and
sub
add
ret
and
sub
push
sub
xchg
jmp
ss
xchg
rcrb
or
sub
sti
dec
push
fisubrs
or
sbb
cmpsl
subl
dec
jno
daa
test
lret
pop
sti
movsl
sbb
mov
clc
xor
mov
cmp
and
jl
xor
insl
cmp
movsb
sbb
je
nop
pop
xchg
dec
mov
xor
push
mov
ret
popa
es
and
pop
inc
mov
lcall
xchg
out
sub
jb
arpl
push
js
sti
and
push
sbb
inc
int
cmp
notl
into
push
inc
and
ljmp
jp
jo
scas
and
adc
cmp
movsb
adc
mov
std
ret
aaa
push
pop
es
cltd
hlt
jge
xor
pop
pop
insl
clc
pusha
mov
lods
adc
nop
xor
mov
ljmp
adc
negb
or
ljmp
jae
fdivl
sub
fdiv
pop
out
retw
jp
cmp
mov
lcall
add
pop
in
fs
inc
jns
arpl
popf
mov
dec
pushf
cmp
scas
xorl
push
mov
stos
fdivp
inc
dec
sbbl
vorps
push
std
hlt
test
test
add
jecxz
arpl
hlt
pop
ret
out
icebp
hlt
hlt
pushf
outsl
adc
sbb
jns
les
orb
sbb
xlat
call
loope
sub
pop
mov
out
adc
scas
imul
cld
xor
test
adc
lea
ret
idiv
dec
mov
ljmp
repnz
mov
test
nop
into
jmp
and
std
out
ret
mov
dec
or
sbb
mov
jle
push
push
lea
nop
gs
test
xor
call
mov
mov
push
push
pushf
pop
xchg
mov
mov
incb
icebp
cmc
xchg
mov
cmp
dec
pushf
rol
out
cmp
test
test
push
jmp
and
jmp
xchg
mov
jno
add
add
adc
pusha
mov
rcr
inc
outsb
sub
shlb
rcrb
xor
inc
or
push
bnd
das
inc
xor
aad
xchg
rorb
sub
roll
cmp
lahf
mov
imul
aaa
jne
adc
les
test
int
clc
fsubrs
aaa
repz
sub
addb
ss
nop
ss
bound
fisubrs
add
sub
lret
test
es
in
cltd
mov
and
mov
mov
outsb
fstps
sub
stos
adc
mov
inc
lea
dec
mov
xor
loopne
cmp
jbe
shr
and
std
pop
jecxz
mov
mov
sub
mov
inc
cltd
cmpsb
push
aaa
mov
cltd
data16
lahf
push
xchg
cs
cmp
push
lret
call
rorb
push
nop
xchg
mov
dec
icebp
cld
inc
dec
rolb
push
sahf
adc
dec
aaa
out
cmc
call
jae
xchg
cltd
cltd
sbb
hlt
pop
jno
mov
out
sbbb
push
cwtl
pop
ffreep
in
enter
jnp
jmp
and
jle
std
mov
xchg
repnz
out
lret
pop
mov
dec
lcall
push
cmp
sub
xchg
cmc
clc
movl
jns
jg
popa
pusha
and
stc
push
pop
ds
aam
stos
add
mov
mov
push
cltd
scas
push
pop
leave
cmp
mov
dec
adc
js
mov
outsb
push
xchg
fnstcw
xor
adc
sbb
push
sub
loope
xlat
cmpsb
mov
testb
push
or
or
mov
std
mov
fdivr
cwtl
rclb
out
xlat
mov
insb
popa
mov
lods
cs
xchg
imul
cli
int
cmpsl
insb
xchg
jnp
imul
test
lds
inc
ja
fistps
mov
test
mov
mov
or
jecxz
inc
xor
jle,pt
pop
nop
loopne
jge
cmp
call
or
int
sub
sarl
pop
aad
jecxz
xchg
lret
xchg
xchg
inc
dec
lcall
jmp
jmp
mov
sbb
clc
aaa
xor
add
cmp
je
xchg
push
repnz
push
adc
mov
dec
data16
jbe
pushf
pop
scas
jmp
imul
lahf
pushf
jmp
jbe
aaa
in
enter
sbb
cmp
inc
les
jo
xchg
cwtl
pop
aaa
add
jnp
or
cs
adc
xor
push
adc
into
xchg
xchg
mov
shll
test
adc
mov
dec
jbe
jbe
fidivrs
mov
loopne
cmp
push
sub
decl
mov
push
rcr
nop
xchg
mov
dec
push
add
adc
bnd
mov
push
daa
inc
mov
push
jmp
inc
gs
pop
addr16
jb
not
sti
pop
mov
test
push
or
mov
jmp
xchg
and
nop
sbb
sub
add
fcomi
push
fidivrl
sub
adc
cli
xchg
or
movsl
cli
sbb
sub
cmp
cmp
and
adc
or
and
adc
je
fs
sub
cmc
pop
popa
sub
das
ror
jnp
cmpl
lods
push
lahf
xlat
add
jg
mov
push
push
mov
loop
xor
mov
js
jnp
lds
adc
fxch
or
je
mov
dec
lret
iret
mov
dec
movsb
in
push
aaa
out
loopne
ret
add
test
sbb
inc
pop
push
mov
clc
out
out
xor
cwtl
xor
xchg
mov
mov
mov
mov
jne
lock
nop
lods
push
xor
and
jle
nop
dec
push
movsl
aas
and
inc
pop
cwtl
ret
push
cwtl
aad
inc
pop
and
jl
test
sbb
imul
mov
cwtl
test
mov
cs
fucom
repz
imul
mov
adcb
addr16
sbb
lret
fcompl
adc
mov
je
cwtl
push
lcall
movsl
sbb
inc
fidivrs
repz
fidivrs
fsub
ljmp
ljmp
cld
out
jecxz
sti
es
clc
aam
adcl
sbb
push
gs
leave
in
pop
and
mov
mov
add
out
mov
cmpsl
frstor
push
add
rclb
dec
jge
mov
inc
iret
adc
fstpl
and
push
iret
fs
inc
ror
pop
cli
mov
mov
dec
push
adc
jnp
out
ds
push
in
sub
push
loop
pminsw
mov
inc
lcall
pop
cmp
nop
xchg
or
jno
daa
xor
adc
dec
aaa
lea
add
dec
pop
mov
shll
jo
test
xchg
inc
jmp
push
xchg
cli
enter
xchg
add
addr16
jle
movsb
ret
aad
ret
ja
add
add
dec
and
cmp
mov
bswap
and
outsl
repnz
sub
loop
iret
filds
pop
pusha
sub
js
popa
xor
cwtl
mov
push
das
movsb
mov
mov
imul
mov
aaa
sub
fistpll
in
mov
into
sbb
mov
mov
dec
adc
enter
out
jo
push
insb
sub
mov
or
push
out
push
cld
pop
cmp
push
stos
iret
jg
cmpsb
jne
insb
xchg
pop
sub
adc
iret
add
jnp
dec
push
push
inc
fwait
pop
pusha
lock
out
test
add
add
push
xchg
sub
or
sub
mov
jl
out
xor
mov
insl
pop
push
cmc
cs
fldl
imul
xchg
inc
mov
push
lods
push
adc
popf
mov
push
addb
mov
nop
rcll
jmp
dec
or
imul
or
cmp
pop
sub
dec
rcr
cmp
les
and
iret
jbe
or
mov
subb
cltd
push
repz
insb
and
outsb
and
mov
loope
adc
clc
addr16
add
or
jp
xchg
lcall
xchg
inc
sub
push
dec
and
push
or
jge
loope
jae
pop
mov
psignd
dec
test
addr16
push
mov
fs
ret
daa
jg
mov
data16
sbb
and
lock
cmpsl
aad
loope
popf
test
fnstcw
sti
stos
dec
test
cli
in
cli
loop
mov
aas
call
inc
shlb
movsb
cwtl
mov
and
push
inc
mov
lock
add
push
jmp
aas
lods
push
xor
xchg
out
sbb
clc
clc
loop
imull
popa
pop
sarb
scas
inc
add
pop
hlt
jge
sub
aas
mov
lock
lods
sahf
cli
loope
imul
jae
repnz
outsl
push
jo
rcll
pushf
pop
lahf
mov
inc
mov
sub
inc
xor
push
adc
push
ja
inc
xchg
jg
jnp
mov
mov
mov
repz
insb
pop
mov
jp
sbb
inc
jge
lods
xchg
ds
sub
lahf
aaa
jecxz
into
sarl
sub
sub
or
cmp
sub
mov
mov
stos
aam
push
adc
ja
xor
push
adc
popf
xor
popf
xor
insl
adc
jbe
cmp
sub
dec
sub
sahf
sti
test
sbb
xchg
pushf
inc
mov
daa
mov
push
je
add
push
fistps
add
aad
pop
in
add
stos
sbb
test
ss
sub
sub
xchg
jmp
jno
inc
insl
or
adc
push
mov
test
mov
cmpsb
out
repnz
pop
sti
jmp
sub
leave
out
mov
cmovo
cmp
ljmp
or
lods
pop
iret
sbb
das
imul
and
sub
adc
jmp
dec
push
adc
dec
loopne
add
jb
je
xchg
add
mov
ljmp
add
stos
jg
fldenv
sub
ss
stos
mov
out
pop
pop
mov
push
repnz
lea
mov
mov
cmp
push
jmp
xor
mov
mov
sbb
inc
push
ret
pop
aad
lds
inc
aad
mov
mov
roll
popf
sahf
fdivl
popf
scas
mov
push
cmpsl
jne
mov
push
xor
shlb
cmpsl
sti
lods
bound
sub
jge
mov
cwtl
lds
push
xor
hlt
out
xchg
bswap
lcall
or
adc
mov
cli
sbb
fimuls
jl
mov
es
push
clc
sbb
test
mov
push
mov
cmp
sbb
xor
andb
ret
inc
fadds
bound
subl
clc
popa
lock
pop
add
out
lcall
shl
push
js
sbb
dec
cmp
mov
outsl
xchg
lods
push
lea
out
cmp
insb
sub
mov
mov
mov
fsts
js
lea
dec
std
loopne
arpl
jle
bound
xor
out
and
inc
bound
or
in
ret
cmpsl
int
lds
pop
repnz
ret
sub
stos
lods
lea
xchg
fistps
mov
movsl
shl
movsl
ficompl
cltd
fwait
repz
push
mov
in
arpl
imul
mov
jae
mov
enter
das
mov
fidivs
mov
cmc
mov
insl
inc
rdpmc
outsl
xchg
fsubl
bound
push
jbe
xchg
psllq
or
outsb
xor
lahf
xchg
dec
pop
gs
xor
dec
cmp
push
dec
subb
push
mov
shll
repnz
fcomp
jp
mov
test
pop
pop
or
lods
popa
outsl
mov
repnz
mov
push
insb
jmp
je
call
jo
std
xlat
pop
push
stos
lods
jecxz
or
es
mov
movsl
hlt
mov
loope
mov
in
dec
inc
push
pusha
jb
inc
mov
cmpsl
mov
fcmovnb
cld
pop
jmp
sbb
mov
adc
sub
inc
shl
mov
push
cmp
adc
shlb
pop
mov
and
adc
xchg
lret
shrl
sbb
lds
jnp
in
add
bound
aas
dec
enter
mov
xorl
xchg
fidivrs
int
sbb
std
std
arpl
xchg
cmp
sar
cmp
mov
divl
lods
fldenv
push
idivb
divb
sub
mov
adc
jns
sti
xchg
xchg
jne
inc
mov
jg
aad
aas
pop
mov
add
sbb
xchg
push
adc
cwtl
add
gs
xor
int
fs
stc
sub
or
inc
ret
das
push
push
imul
inc
xchg
or
push
rcrb
push
mov
push
or
adc
cmpsb
xlat
scas
into
adc
fcmove
scas
xor
push
rclb
mov
pop
xor
lods
jp
xchg
push
pop
push
imulb
lods
sbb
out
dec
inc
mov
cltd
popf
jge
mov
loope
decl
xor
jge
or
lahf
out
add
jmp
sbb
jmp
xor
xchg
std
push
leave
pop
xor
jnp
sbb
sbb
in
jno
or
pop
xor
mov
adc
push
packssdw
inc
mov
les
xor
fdiv
std
lret
mov
sbb
ljmp
scas
cwtl
dec
sub
pop
pop
clc
jl
inc
adc
fdivs
inc
and
jb
jbe
xchg
push
cmpsl
dec
xor
incb
pop
inc
pop
mov
std
sub
cwtl
and
imul
xor
aas
xor
adc
in
xor
mov
mov
dec
std
cltd
insb
push
adc
call
xor
test
pop
push
or
stc
repz
sahf
adc
xor
cmc
inc
cld
lret
sbb
xchg
mov
mov
or
jl
aam
dec
jns
roll
sbb
je
mov
scas
outsl
cmp
jo
push
sub
add
xlat
mov
in
mov
enter
mov
imul
sub
mov
lahf
cmpsb
and
shlb
and
insb
xor
mov
mov
fwait
int3
in
ljmp
jne
mov
or
xor
adc
or
test
xchg
and
xchg
jno
repz
mov
aam
int3
mov
sub
push
imul
push
fs
mov
loopne
test
stc
pop
std
mov
sub
pop
ret
pop
and
pop
mov
mov
xor
push
and
jge
and
test
dec
repz
mov
jle
add
js
dec
cwtl
jp
gs
mov
repz
ja
scas
lret
mov
inc
jae
pop
xchg
ss
inc
dec
dec
sti
xchg
xor
ret
mov
lods
or
adc
fbstp
push
arpl
pop
push
cmpsb
pop
push
inc
loopne
int3
loope
mov
idivb
pop
mov
mov
in
sub
jp
imul
rclb
sbb
add
cli
cld
ficoms
ja
aaa
lea
test
cmpsl
dec
jne
inc
mov
cltd
add
cmp
jbe
lret
out
xchg
stos
aas
mov
jge
pop
push
mov
xchg
sbb
cmp
and
test
es
call
cmpsl
filds
sub
mov
inc
mov
out
jb
mov
push
jle
int
shlb
xchg
btrl
std
les
sub
cltd
jg
sub
je
movq
adcl
ljmp
outsl
leave
mov
jne
pushf
sbb
gs
repz
mov
push
movsb
adc
popa
sbb
je
xchg
es
mov
in
test
jmp
faddp
lahf
mov
repnz
xchg
iret
outsb
clc
xchg
mov
cmpl
cmpsl
fs
mov
mov
pop
insl
ret
mov
push
mulb
cltd
mov
addr16
push
mov
add
shlb
andb
in
inc
add
fsub
outsb
and
outsl
mov
dec
cmc
lcall
xchg
jmp
inc
lds
cmc
jbe
ds
imul
mov
out
mov
sbb
inc
push
cltd
jmp
mov
notb
out
sbb
mov
scas
sbb
xchg
fstpl
cmc
je
outsl
or
add
aas
xor
je
push
outsl
sub
aam
fisubrl
int
lea
xlat
ja
ja
dec
hlt
adc
xlat
outsb
inc
into
ljmp
and
aad
jns
xchg
es
sarb
and
jge
xchg
xchg
cld
jecxz
dec
adc
aad
cmp
bound
jge
cmp
inc
fmulp
and
in
mov
mov
cmp
out
pop
loop
ror
test
and
lcall
mov
and
imul
shlb
imul
das
addb
adc
dec
sbb
inc
pop
enter
test
adc
outsb
aad
outsb
dec
push
adc
mov
or
mov
dec
ror
test
push
xlat
cmp
jecxz
daa
in
mov
add
aaa
xor
push
push
loop
movsb
or
aad
int3
ljmp
fisttpl
xchg
loop
jbe
pop
call
sti
jp
dec
push
scas
push
jge
pop
push
pusha
movswl
inc
xchg
subb
cs
lds
hlt
mov
ss
lret
xchg
lahf
jl
jb
sbb
add
push
sub
jmp
jl
sbb
imul
or
lods
mov
popf
outsl
neg
stos
stc
call
sub
cmp
or
test
test
mov
lods
cmp
xchg
fadds
push
inc
scas
je
ficoml
in
int
das
add
cli
daa
jle
aam
lds
mov
adc
mov
push
mov
and
mov
sub
mov
sub
and
push
cmc
icebp
incb
pop
jge
and
dec
sbb
mov
cli
dec
scas
test
int
xchg
pop
mov
pop
leave
frstor
jmp
or
loop
lahf
cmp
cmp
int
mov
leave
divb
pop
lret
jno
lods
and
pop
xchg
insb
add
adc
jae
sub
jg
dec
out
test
out
xchg
ss
fstps
lcall
fdivr
and
addl
adc
loopne
jmp
adc
xchg
add
lret
stos
out
cmpsb
shll
mov
push
out
dec
push
cli
jbe
or
inc
xchg
pop
data16
andb
insl
cmp
int3
push
iret
imul
ror
pop
fistpll
inc
xchg
test
leave
push
inc
jnp
sub
or
lds
cli
iret
adc
or
aas
in
sbb
mul
inc
icebp
out
hlt
sar
mov
pop
mov
cmp
pop
push
jmp
xchg
xchg
jae
outsb
and
mov
adc
mov
dec
cmp
add
xchg
xchg
jg
imul
loopne
out
xchg
lds
jp
add
subb
ret
xor
insl
jle
push
mov
or
pop
xchg
ret
dec
ja
xchg
mov
roll
sbb
jl,pn
test
xchg
fldenv
mov
lret
and
aad
fdivrs
jg
das
loop
bound
pop
sbb
jecxz
push
clc
and
nop
sub
mov
aam
sbb
inc
adcl
xchg
int
inc
lods
cld
sbb
lret
xor
xchg
push
jae
or
imul
std
and
push
xchg
cwtl
in
adc
sub
add
cmc
jp
in
inc
ja
inc
push
pop
mov
mov
call
pop
or
push
mov
pop
lds
addr16
push
ss
sub
rcll
sbbl
cs
lahf
sbb
mov
popf
xor
sti
cmc
inc
je
ds
cmp
inc
mov
hlt
and
testl
loope
repz
or
test
outsl
test
add
movsl
lea
subps
sbb
jge
inc
outsl
ret
out
loop
xchg
xchg
idiv
rol
dec
rol
or
pop
cmp
cs
outsb
out
mov
sub
add
out
pop
incl
cmpb
fnstsw
xor
clc
imul
mov
jo
fwait
repz
fstpl
adc
and
push
or
insl
cmp
leave
jle
mov
pop
aad
sbb
or
cltd
sub
aas
insl
cmc
lcall
imul
or
and
shlb
fldcw
stc
mov
mov
add
sbb
mull
lahf
add
inc
jne
das
sbb
xor
in
sbb
fstps
jns
fmuls
rorb
repz
lods
push
mov
or
cmpsl
cld
xorl
pop
imul
mov
xchg
mov
dec
mov
jp
pop
dec
pop
add
sbb
adc
leave
popa
mov
inc
jns
clc
jle
out
fcomps
cmpsb
push
mov
mov
mov
push
push
add
sub
add
push
adc
or
es
les
push
stos
aaa
or
shll
jl
jp
jnp
test
aad
adc
lea
je
fiadds
xchg
mov
and
outsb
pop
nop
xor
cs
xchg
into
bound
push
push
sub
mov
fs
mov
pop
xor
jne
jo
xchg
lea
dec
cmp
pop
lret
jns
mov
sbb
mov
add
inc
sub
mov
inc
ss
sub
mov
cmc
pop
xchg
mul
lcall
lcall
subl
sub
mov
sti
push
mov
jno
sub
dec
out
push
out
leave
insl
sbb
inc
cmp
stos
mov
ror
aas
add
add
repz
jne
scas
mov
sbb
push
js
int
seto
mov
out
mov
es
inc
out
pop
aaa
pop
inc
inc
cmp
mov
loope
sub
fisubrs
dec
cmpsb
out
int
in
and
sbb
iret
ja
cmp
popa
frstor
push
push
dec
jno
loopne
mov
icebp
push
std
xchg
lea
outsl
repnz
fbld
fdivp
sbb
cmp
push
fldl
xor
or
shrb
mov
movaps
call
lods
pop
rcll
fdivr
dec
inc
cmpsl
jo
xor
inc
hlt
push
adc
out
cmp
cmp
add
sahf
push
loopne
mov
ret
mov
dec
js
addr16
fdiv
jno
pusha
mov
aas
test
into
cld
xchg
std
rorl
lods
mov
mov
cs
ja
dec
lahf
call
scas
scas
dec
int3
or
jle
ss
cmp
push
sbbb
clc
or
divb
mov
ds
add
popa
addb
jl
adc
dec
sahf
adc
and
out
rolb
mov
imul
fcmovne
pop
cld
popl
cmp
mov
pop
les
aas
orl
mov
jle
xchg
cmpsl
xor
push
or
clc
andl
add
xor
xchg
cs
negb
fsubr
xchg
inc
ret
adc
xchg
jne
add
mov
test
xchg
das
pop
mov
push
cs
pop
or
iret
and
or
or
call
pop
or
stc
sarb
in
dec
cmp
mov
mov
pusha
hlt
mov
jmp
addr16
mov
pushf
addr16
or
in
mov
popf
mov
clc
push
notb
pushf
stos
scas
and
jmp
mov
xor
mov
sub
fcoml
test
nop
aaa
mov
lcall
add
inc
xor
xchg
mov
mov
cmpb
xchg
cmp
mov
aaa
xchg
inc
mov
and
out
movsl
mov
mov
jg
push
xor
ja
lds
jle
test
mov
xchg
inc
jl
aam
adc
enter
andb
or
out
dec
adc
dec
out
sub
leave
and
push
popl
ja
inc
cmp
mov
nop
rolb
lret
lret
cmp
or
loop
leave
inc
pop
pop
jns
pop
mov
push
cltd
rorb
and
in
outsb
cwtl
mov
pop
jo
pusha
jmp
push
jne
mov
jo
add
cmpsl
imul
scas
ja
aad
lods
jo
jge
push
cwtl
mov
movsb
jp
and
jle
into
pop
jecxz
stc
add
xchg
shlb
inc
cwtl
xchg
pop
cltd
add
icebp
mov
int
cmp
daa
outsl
xor
push
fisubs
push
stos
cwtl
sbb
sbb
jb
decb
and
test
pop
cltd
jb
xor
dec
iret
test
das
adc
in
hlt
xchg
push
add
sub
ss
push
hlt
fcomi
or
cmp
dec
nop
aaa
mov
out
pop
imul
jae
test
clc
mov
scas
repz
sti
jno
loop
fnsave
cld
jmp
in
mov
outsb
and
jmp
imul
mov
inc
inc
add
xchg
loopne
push
pop
xchg
pop
mov
popf
adc
push
xchg
sahf
jmp
repz
add
aam
lahf
cmp
mov
jo
push
fcomi
pop
rorb
std
inc
movsb
cmp
outsb
cmp
lea
pop
inc
testb
cmp
ret
pop
dec
jmp
out
xor
pop
daa
imul
cld
int3
lock
mov
popa
push
xchg
cs
sti
xor
adc
cs
test
int3
xor
test
outsl
out
push
lcall
jecxz
mov
adc
lds
les
repz
cmpsb
xchg
daa
pop
xchg
sbb
fwait
or
xor
jo
fisttpll
jnp
dec
pop
mov
fsts
push
jle
leave
popf
mov
pushf
in
mov
cmpsl
scas
jmp
cmp
scas
shrb
dec
lds
int
or
lret
mov
mov
inc
mov
scas
cmp
flds
loope
cwtl
mov
arpl
cmp
out
or
cltd
and
lea
jo
sbb
in
int3
push
sub
inc
rolb
xchg
sub
jb
int3
fisubl
push
lods
cmp
shll
stos
cmp
popa
ffreep
push
fptan
sub
pop
stos
mov
outsb
imul
aas
nop
nop
add
insl
sbb
in
add
push
lahf
arpl
xchg
shl
adc
push
lret
imul
sub
in
and
js
adc
push
aas
mov
adc
mov
js
sub
cwtl
xchg
fdivrl
bound
frstor
fwait
and
push
inc
xchg
jns
mov
nop
xor
into
jns
xchg
inc
stc
gs
lock
out
fisubs
shll
out
cs
loop
cltd
xor
filds
and
xlat
ret
xchg
stos
cmp
sub
addb
mov
aam
xchg
rcrb
mov
iret
mov
xchg
pop
loope
adc
push
fsubrs
xor
push
inc
sub
ret
stos
mov
imul
xchg
mov
lea
mov
repz
dec
sub
inc
loopne
cmpsl
cmp
repz
shll
sbb
xchg
cmp
xor
lahf
sbb
arpl
dec
pop
pop
mov
mov
pop
ljmp
sub
mov
ret
out
icebp
inc
lret
fcompl
leave
loop
mov
sbb
cli
mov
inc
and
push
cmp
mov
jae
stos
in
jne
mov
sbb
or
inc
imul
push
cmp
loop
fidivs
cmp
loopne
pushf
cmp
xor
sub
inc
add
mov
push
push
lahf
pushf
pop
cwtl
push
mov
mov
icebp
lea
pop
in
push
ret
shll
aad
or
jecxz
jb
mov
inc
push
vmwrite
pusha
xchg
repz
das
icebp
pop
jne
add
sbb
mov
aam
cmp
fcomps
lret
lahf
lahf
push
adc
inc
xchg
add
lret
jle
and
cmp
jne
sahf
jno
xchg
mov
and
js
inc
adc
xor
cmc
push
adc
lret
mov
sti
cmp
push
jp
aas
xchg
xor
and
and
iret
xor
movsb
and
js
xor
sbb
lahf
xchg
push
aaa
lcall
dec
mov
push
das
add
xor
xchg
add
rcll
movsb
sbb
jmp
mov
pushf
pop
xor
pop
movsl
out
rcrl
sbb
call
jns
cli
xchg
into
adc
mov
rcll
loope
bound
jecxz
sub
inc
and
jmp
loopne
add
dec
adc
add
mov
cmp
test
div
cmp
sbb
mulb
pop
lahf
das
imul
fldl
lret
pop
dec
mov
mov
andl
in
or
ds
cmp
lea
adc
mov
jle
inc
xchg
fistpl
mov
sub
or
inc
imul
mov
gs
leave
cmp
inc
cmp
jno
sbb
adc
shr
incb
sub
ja
dec
adc
jae
mull
jnp
mov
data16
dec
nop
dec
mov
mov
add
adc
and
adc
jecxz
adc
cltd
mov
cmp
xchg
in
xor
rorb
lahf
jb
orb
lods
test
sti
adc
cmpsl
or
inc
cmpsb
jp
fstp
fnstsw
cmp
lea
push
xor
sub
ret
sub
ror
lods
sbb
mov
mov
addr16
dec
insb
aam
int
cmp
mov
add
jbe
push
mov
pop
lahf
or
add
rcll
and
bound
in
jno
mov
aad
push
pushf
movsb
and
std
cld
outsl
xchg
push
xchg
vmovss
gs
mov
fbstp
mov
les
or
cli
mov
jb
loop
sub
outsl
sub
jle
std
int
repnz
sbb
bound
ret
and
or
jne
mov
ds
int3
mov
inc
loopne
lcall
dec
fwait
cmp
mov
push
and
movsl
and
or
inc
test
mov
in
gs
mov
lcall
cmp
xor
mov
mov
cmpsb
cmp
lcall
shrb
aaa
push
or
data16
xor
int
push
fdivs
adcb
adc
jb
rorb
or
jo
repz
mov
test
out
xor
add
je
and
stc
cwtl
cmp
imul
in
fcmovbe
pop
data16
imul
jmp
test
pushf
ss
lods
sub
dec
push
iret
sahf
lahf
sub
sub
test
in
loop
mov
sub
std
sub
sbb
lcall
imul
das
jge
imul
cli
push
xchg
in
ret
lods
push
lret
jg
aam
pop
adc
hlt
add
jb
sbb
int3
mov
cmp
in
pop
int3
leave
push
and
add
arpl
lods
sbb
mov
push
outsl
add
sub
push
adc
cld
jo
imul
inc
cmp
cmp
test
repnz
outsl
or
jl
mov
mov
lahf
or
stc
out
lret
lahf
pop
sbb
mov
xor
ret
das
dec
and
cmp
dec
mov
fidivl
inc
dec
fnstenv
lock
jns
mov
fucom
rcl
bound
jle
testb
insb
lcall
inc
ss
and
xchg
lock
fstpl
fists
nop
iret
jp
icebp
in
pop
cmp
sub
fisubrs
imul
xchg
out
inc
jae
aas
and
pushf
pusha
out
jne
jns
inc
stc
dec
aas
lods
idiv
xchg
cmp
push
add
mov
add
dec
xchg
out
je
cmpps
mov
fbld
xchg
cmp
data16
xchg
inc
stc
mov
das
and
mov
xor
jbe
sahf
in
dec
rclb
in
orl
xlat
movsl
mov
dec
stc
xchg
sarl
cli
into
lret
addr16
jne
push
rcr
sahf
lds
fnsave
pop
popa
mov
cld
jmp
icebp
pop
or
ret
cmpsb
pop
mov
jecxz
xchg
in
int
cmp
mov
mov
enter
xchg
pop
and
push
xchg
mov
mov
out
add
nop
cmp
mov
lcall
pop
nop
mov
mov
pop
jge
sbb
xor
mov
mov
cwtl
pop
inc
add
push
or
jno
cmp
jle
push
sub
mov
and
inc
mov
mov
pop
jae
out
mov
mov
lcall
andb
jl
xor
dec
xor
loope
in
lock
cmpsl
add
mov
xchg
xchg
pop
jle
fnstenv
xchg
pop
jns
inc
xor
in
sbb
adc
pop
add
shrl
sahf
mov
jb
sahf
fstpt
xor
jb
adc
lods
lret
xchg
and
mov
xlat
aad
in
iret
sbb
cmp
lret
in
adc
int3
mov
mov
add
not
out
ljmp
fisubs
in
mov
js
and
dec
outsl
push
dec
leave
sub
mov
out
addr16
aam
push
rcrb
ljmp
or
lock
js
dec
aam
xchg
into
pusha
shlb
mov
sub
xchg
push
inc
fadd
lahf
lret
push
mov
outsl
das
pushf
gs
sub
xchg
xor
pop
test
xchg
lcall
fildl
bound
jns
inc
pop
vminsd
incl
loope
lock
sub
rclb
orl
cmp
jl
cmpsl
inc
mov
xchg
lea
stc
pop
xor
imul
inc
popf
imulb
js
sbb
insb
das
jp
jno
jge
hlt
ss
mov
jge
mov
pop
push
xchg
adc
in
add
imul
add
push
jmp
fidivs
or
fs
sub
xchg
sub
push
pop
scas
fdivl
enter
mov
sbb
repz
mov
jp
mov
fists
dec
mov
int
lcall
addl
sti
adc
cwtl
inc
test
adc
xchg
push
dec
push
je
xchg
mov
aaa
clc
mov
sarb
mov
jmp
adc
dec
push
cmpsb
lcall
sbb
out
inc
mul
push
sub
xor
das
xchg
testb
adc
pop
xchg
loope
mov
ret
int3
lret
lcall
or
add
push
popf
push
aam
fldcw
lds
insl
dec
or
mov
dec
jnp
je
jp
andb
outsl
test
js
mov
fwait
scas
cmp
je
push
out
add
adc
jnp
or
daa
sarb
pop
and
jecxz
push
or
or
cs
fistl
and
sbb
stc
xor
jl
pop
mov
mov
das
mov
or
adc
mov
ret
xor
adc
jecxz
mov
pop
sub
loop
jg
mov
mov
push
cmp
loop
pop
adc
data16
ljmp
int3
sbb
xchg
mov
mov
and
and
iret
test
lea
jo
stos
call
jno
imulb
ja
adc
sub
lock
mov
push
pop
lock
in
data16
sbb
rcrl
in
inc
sbb
scas
add
fistl
dec
in
inc
fwait
xchg
add
ret
push
pop
mov
fwait
xor
push
xor
call
pop
movsb
cld
xchg
cmp
into
and
ret
push
or
cmpsl
ljmp
xchg
and
fcoml
push
outsl
xchg
sti
or
ja
push
sub
lahf
push
push
sarb
push
int3
adc
inc
fwait
sbb
addr16
into
cmpsb
fsin
call
sub
cmp
mov
dec
push
cmp
dec
inc
push
stos
scas
popa
push
adc
sub
test
sbb
add
lea
push
lods
cltd
push
shl
inc
je
mov
pop
dec
addr16
lds
arpl
std
loop
cmp
adcl
adc
mov
sub
xor
xchg
mov
btr
pop
nop
push
std
cmpsl
push
ss
es
push
das
mov
lret
jb
test
mov
cltd
dec
cli
or
inc
jne
pop
push
fistpl
add
add
mov
xchg
repz
arpl
jae
ja
mov
jno
cmpsb
push
mov
cmpsl
addr16
push
xchg
fwait
or
push
ss
in
add
add
mov
adc
and
call
xor
lds
pop
mov
adc
and
aad
mov
cmc
mov
inc
and
ds
js
ret
pop
rolb
mov
orb
fs
xchg
or
adc
dec
call
mov
fcomi
outsb
cmp
orl
insl
negl
js
push
bound
adcl
cmp
shll
mov
data16
ja
inc
scas
mov
mov
pop
dec
imul
xchg
cmc
sbb
and
jnp
stc
fnsave
jg
jnp
or
cmp
les
sub
pushf
xor
out
movsb
mov
and
jno
xchg
ss
inc
xchg
sbb
mov
push
sub
outsb
adc
push
insl
aad
or
mov
inc
mov
dec
imul
shrl
mov
pop
mov
jmp
lcall
daa
loop
popf
mov
or
lahf
out
mov
pop
xchg
mov
fidivs
push
fwait
and
adc
mov
icebp
out
mov
and
push
jge
xchg
lahf
into
mov
das
scas
stc
mov
push
jbe
mov
hlt
arpl
fucomip
into
popfw
inc
xorb
xchg
pop
xor
pusha
aad
add
lock
dec
dec
pop
in
pop
gs
mov
push
adc
push
imul
sub
rorb
out
arpl
pop
jmp
pop
sbb
xchg
addr16
adc
push
push
push
dec
cwtl
sub
inc
cltd
rol
fs
or
lahf
pop
out
lret
es
pop
cmp
ds
or
jmp
sub
push
dec
pop
cmp
xchg
jnp
inc
ret
cmp
jb
movsb
daa
test
ljmp
and
sub
xlat
adcb
mov
fisttps
pop
addr16
sbb
fs
dec
push
and
pushf
mov
fbstp
pop
inc
out
jp
loope
adc
mov
lea
jle
gs
cmp
push
arpl
cld
sbb
shr
pop
pop
imul
pusha
out
adc
fisttps
and
push
pop
fimuls
sti
cmp
cmpsb
cwtl
inc
pop
data16
jp
mov
addr16
loopne
or
sub
dec
add
push
or
push
mov
push
sub
jbe
lcall
sub
cmc
inc
or
jae
and
cld
icebp
fs
sub
xchg
neg
or
mov
addr16
dec
pop
sbb
mov
testb
testl
dec
stc
mov
out
ds
push
out
loope
mov
mov
push
xchg
inc
pop
out
ret
lea
adc
jns
pop
push
sbb
pop
push
lcall
roll
in
cmc
cmp
mov
adc
inc
sbb
negb
pop
iret
inc
ja
jg
mov
fisubrl
ret
in
mov
xchg
sub
push
sub
data16
ds
xchg
std
and
in
push
jo
sbb
cwtl
inc
sbb
into
push
orb
pop
mov
std
xlat
ret
jge
nop
inc
into
cmp
xlat
mov
lea
adc
les
mov
cmp
mov
dec
cmp
stos
in
cmpsb
scas
and
xlat
inc
dec
into
shll
lcall
xchg
mov
dec
or
sbb
jp
pop
gs
adc
aam
inc
add
inc
rol
lret
mov
adc
cmp
sbb
inc
sbb
nop
enter
dec
orb
or
gs
inc
dec
orb
in
mov
and
pusha
ret
mov
pop
lods
lret
xchg
andl
jb
or
rcrl
cmp
insl
or
sub
mov
lds
les
sub
xor
adc
pusha
lds
xor
push
inc
pusha
loop
arpl
out
pop
mov
rclb
adc
adc
inc
orl
insb
outsl
insl
push
insb
and
jb
xchg
cmovl
or
stos
add
out
adc
pop
out
mov
xor
or
mov
js
andl
andb
pop
fistps
jns
mov
sub
xchg
inc
sbb
jb
mov
movsbl
out
xor
xchg
shrl
inc
fwait
dec
loop
and
scas
or
and
mov
ficoml
pop
add
out
push
inc
push
aas
push
mov
or
lahf
inc
test
lea
jl
call
xor
scas
jecxz
and
mov
enter
mov
sub
inc
jl
jb
lods
ja
aas
push
pop
rcr
jle
and
adc
mov
fcoml
fisttps
faddp
pop
mov
nop
cmp
aad
pop
cmp
pop
xchg
test
adcb
cs
sub
in
pushf
rcl
cli
lcall
int
in
pop
mov
ljmp
xor
out
mov
out
xor
mov
sbb
cltd
cld
lahf
in
mov
imul
shr
leave
mov
dec
leave
sub
movsl
unpckhps
lret
jne
add
jmp
roll
shrb
pushl
adc
addl
movsb
cmp
cmp
mov
inc
mov
pusha
pop
imul
leave
inc
or
stc
in
out
outsl
in
test
xchg
std
dec
or
pop
je
jl
shl
and
pop
mov
loop
jne
xlat
mull
repz
push
mov
dec
mov
cmp
adc
iret
js
sub
sub
aaa
insb
xlat
add
loopne
in
mov
jg
in
mov
out
jmp
ret
jl
xor
test
sar
pop
sub
xchg
rorl
add
aad
scas
into
nop
pop
or
mulb
arpl
push
mov
outsb
add
adc
and
or
mov
xchg
test
hlt
jle
inc
cwtl
cmpsb
dec
je
sub
sbb
jp
push
ja
loopne
and
mov
push
adc
imul
aas
inc
mov
jmp
mov
loopne
push
mov
mov
adc
pushf
pop
jecxz
icebp
adc
es
and
jmp
jbe
sbb
dec
mov
cmc
negl
movaps
or
mov
mov
pop
cmp
lods
scas
in
jl
leave
dec
add
xchg
out
pop
push
mov
mov
ret
dec
clc
dec
xchg
out
out
imul
stc
xchg
inc
popf
fisubrl
leave
push
lds
mov
orps
in
test
lret
int
ja
fs
data16
or
jge
pop
inc
cmovo
icebp
std
or
sti
mull
lock
popa
out
mov
outsl
push
dec
aaa
or
mov
sub
pop
mov
mov
clc
ret
xchg
cmp
push
sub
adc
pop
add
mov
push
pop
orps
adc
pop
cmovae
aaa
and
insl
mov
sahf
cmp
push
xor
imul
decl
push
pop
jle
mov
pusha
inc
mov
test
mov
repz
jp
xchg
jne
xchg
pop
icebp
sbb
jg
rclb
pop
sub
insb
stos
pop
add
adc
loop
in
dec
and
mov
out
loopne
nop
jle
push
shll
xor
add
test
mov
cmp
rcrl
push
push
pop
fimull
in
sub
aam
adc
stc
fldenv
inc
mov
dec
jbe
pusha
xor
das
push
cmc
add
xor
push
or
stc
fcomps
gs
loope
xor
jnp
adc
push
jmp
or
mov
mov
in
shr
mov
sbb
mov
outsl
pop
mov
mov
push
addr16
and
sub
cltd
xchg
repnz
xor
std
adc
inc
dec
jp
and
push
lret
jecxz
or
xor
jp
psubb
dec
daa
jge
les
movsb
pop
or
fadd
xor
push
and
cmc
test
stos
sahf
mov
mov
adc
add
cld
lock
arpl
nop
popa
in
jbe
test
jne
inc
push
testb
mov
sbbb
fcmovu
jns
adc
into
and
and
sub
mov
stos
xchg
test
loop
xor
movb
or
popf
xchg
sbbl
fsubp
and
xlat
and
inc
gs
xchg
fistpl
cmpsl
xor
std
inc
shr
cmpsl
stos
sbb
fwait
sbb
pusha
lret
lret
js
xchg
add
and
xlat
inc
adc
jl
cld
pushf
repnz
mov
mov
inc
test
cmp
mov
roll
inc
out
orl
stos
ret
aaa
in
push
jae
xlat
add
imul
pop
repnz
inc
jno
pop
in
das
outsl
movsb
jl
stc
scas
cld
xor
jecxz
and
movsl
or
aas
xchg
jge
xchg
inc
xor
sub
cmp
sbb
and
mov
or
cwtl
pop
jle
fs
iret
push
or
lods
xchg
lock
pop
fisubrl
mov
mov
xor
hlt
mov
cld
pop
mov
aad
add
jbe
push
arpl
mov
cli
fsubrs
push
cmpsl
insb
dec
test
or
add
cmp
bound
xchg
jno
adc
jg
push
pusha
xchg
jae
loope
jmp
adc
cmp
lea
mov
or
or
cli
or
mulb
xchg
push
enter
or
std
imul
and
loop
lcall
push
movsl
lods
mov
aas
jno
jp
sar
je
jne
add
push
pop
in
pop
pop
sahf
xlat
cmc
xchg
mov
and
cmp
push
lahf
repz
lock
mov
lock
xor
mov
mov
dec
pop
cwtl
std
subl
bound
pop
out
std
mov
cmpb
xchg
repnz
insb
mov
ds
or
mov
sub
pop
cld
xchg
mov
in
decl
cmp
dec
xchg
sub
shrb
inc
in
xor
outsb
fwait
out
cmp
adc
daa
adc
xor
imul
sub
adc
cmp
ja
movsb
pop
jp
rolb
sub
pop
sti
dec
or
or
mov
pop
dec
mov
sub
push
fildll
cmp
scas
mov
xchg
dec
or
in
mov
in
inc
jecxz
sarl
in
pop
jb
sbb
inc
loope
xor
add
fisttps
les
mov
dec
xor
push
es
mov
cmp
xchg
or
xor
push
xchg
jmp
pop
les
testl
lds
repnz
mov
movsb
pop
leave
xor
and
ja
fisttpl
in
jmp
mov
dec
popa
sar
cmp
mov
scas
or
jp
leave
idivb
cltd
jns
fucomp
cmp
lcall
cltd
mov
cltd
hlt
imul
jle
cld
sub
lret
sbb
out
flds
movsb
mov
and
xchg
cmpsb
out
sti
fcoms
aam
cmpsb
insb
mov
movl
push
insl
cmp
mov
stc
jnp
jnp
mov
fdivr
pop
call
mov
push
jle
mov
pop
ficoms
sarb
shrb
loopne
and
adc
loop
nop
xchg
test
dec
jg
lods
adc
out
inc
out
inc
cmp
mov
stos
xchg
or
dec
pop
mov
jle
lret
add
jb
push
jp
pavgb
adc
scas
inc
adc
scas
xchg
dec
movsb
pop
add
xchg
fdecstp
mov
jg
inc
push
and
rorb
or
mov
cmpsl
arpl
mov
icebp
add
sbbl
xchg
dec
std
mov
outsb
scas
sbb
out
pushf
xchg
enter
fwait
adc
adc
push
inc
in
adc
rcrb
out
xor
inc
divl
mov
pop
lods
jecxz
cmpsb
and
cli
pop
out
cmpb
repnz
and
pop
jle
imulb
loopne
ljmp
cmp
fsubrp
push
cmpsb
jo
mov
outsb
sub
lahf
jg
and
outsb
pop
dec
mov
push
inc
cmp
mov
lcall
test
in
adc
insb
cmp
xor
mov
push
lods
shlb
int
jmp
inc
and
adcb
mov
lds
or
jmp
mov
sbb
mov
mov
push
mov
outsb
icebp
andb
test
insb
es
jecxz
inc
iret
push
lods
sub
addr16
xchg
jl
lcall
mov
xchg
sarl
movl
add
jle
subb
jns
pop
inc
dec
mov
mov
push
in
insl
jne
push
sbbl
adc
jae
lea
popa
bound
mov
popa
inc
scas
iret
rorl
push
push
xchg
cwtl
aas
inc
arpl
nop
in
leave
imul
mov
push
test
pushf
inc
repnz
mov
jne
mov
push
mov
push
imul
je
add
cmp
sub
xor
jp
mulb
loopne
pop
jns
popf
xchg
les
movsl
aaa
loopne
mov
mov
ret
data16
popa
xchg
cmpsl
fsubs
lcall
jle
inc
daa
push
xchg
dec
lahf
push
into
xchg
cmp
push
mov
adc
fisttpll
push
mov
add
rcrl
cvtps2pi
push
xlat
jbe
test
fistps
leave
mov
jle
add
xor
and
push
cmc
movsb
push
nop
mov
fucom
sbb
imul
xchg
xchg
push
lcall
test
mov
or
push
sub
lods
movsb
xchg
stc
vmread
in
and
outsl
lea
scas
lds
out
in
ds
push
mov
adc
adc
rcr
push
scas
repz
cmp
push
adc
push
jns
pop
or
loope
or
out
jmp
lods
add
or
lcall
mov
adc
pop
fimull
xchg
dec
xor
shlb
pop
mov
out
mov
sub
and
mov
sbb
lds
jnp
ret
mov
mov
and
mov
sbbb
sub
cmc
jg
push
data16
jb
dec
and
mov
movsl
sub
cmp
lret
hlt
test
dec
loopne
shll
popf
aad
sahf
inc
icebp
paddsw
push
dec
imul
jbe
call
out
jmp
mov
mov
sbb
dec
mov
mov
pop
dec
push
mov
and
inc
leave
test
repnz
mov
in
lock
mov
pushf
lret
xor
mov
push
rcl
or
mov
movl
lret
push
xchg
test
lock
pop
lods
leave
fldl
lahf
cli
test
mov
insl
lea
jno
adc
mov
cld
adc
int3
subl
xchg
int3
cltd
jecxz
jae
daa
jecxz
dec
cmp
or
jne
sbb
data16
sbb
sbb
push
or
lock
scas
scas
xor
push
fistpll
mov
pop
mov
jmp
inc
js
outsb
xchg
cmpb
sbbl
nop
xchg
mov
das
iret
or
sub
adc
dec
sub
arpl
adc
sub
push
mov
test
push
in
hlt
mov
sub
stos
xchg
shlb
leave
adc
add
xor
mov
dec
adc
stos
mov
add
xchg
ror
loop
ja
cvtps2pi
push
push
xchg
dec
jns
xchg
mov
out
sub
push
pop
mov
mov
in
inc
adc
adc
xchg
lea
fcoms
or
pop
push
adc
xor
cld
mov
mov
adc
adc
mov
pop
icebp
scas
pop
inc
fwait
rorb
inc
pop
cmp
cwtl
adc
push
outsl
push
or
shll
adc
inc
movsb
push
sub
jae
lret
sbb
push
jns
pusha
cmp
outsb
mov
stos
dec
xchg
cmp
mov
push
inc
push
adc
int
loope
testl
mov
cmc
jbe
fcoml
lcall
cmp
nop
popa
scas
cmpsb
xor
aaa
test
mov
stos
fwait
je
lahf
xlat
jl
in
lcall
test
dec
or
and
fadds
mov
roll
mov
or
loope
loope
ror
loope
aas
loope
xor
aam
xlat
movsl
dec
mov
dec
xchg
inc
int3
out
cs
jmp
ljmp
daa
add
std
les
jo
jle
es
arpl
xchg
es
dec
aad
mov
jbe
mov
mov
lock
adc
fwait
inc
pop
inc
into
inc
outsb
stos
push
scas
jno
lahf
push
jb
mov
jmp
outsb
or
fcmove
lea
inc
hlt
rcl
ljmp
cmp
mov
xor
xchg
mov
mov
mov
dec
testb
repnz
push
jle
sbbl
adc
out
test
jecxz
mov
jp
cmpsb
xchg
or
mov
outsl
fsubr
pop
xlat
sbb
ja
je
loopne
call
dec
pop
sub
jne
adc
jle
push
jnp
cmp
inc
jbe
sub
mov
pop
jecxz
push
cwtl
into
bound
push
test
aaa
xor
loop
es
out
leave
cmp
xchg
dec
dec
mov
out
orb
mov
into
inc
inc
pop
pop
lds
in
lds
inc
shll
and
add
loop
pop
mov
in
dec
repz
fwait
and
mov
xor
into
insl
imul
repnz
pop
adc
mov
xor
inc
mov
push
sti
cmp
pop
and
push
cmc
les
mov
inc
jecxz
rol
jp
xchg
in
je
das
dec
mov
outsb
shl
pop
mov
sar
jnp
sbb
xor
mov
or
leave
sub
out
sahf
dec
addr16
repz
lret
sub
dec
mov
fsubl
xlat
xchg
or
sbb
cmp
mov
into
push
and
and
jl
mov
push
mov
mov
in
dec
faddl
inc
or
sub
pop
sahf
xchg
and
outsl
dec
dec
add
push
xchg
dec
aas
inc
popf
mov
pop
cli
jecxz
and
push
in
loope
daa
dec
pop
xchg
lods
rolb
fld
dec
lahf
aas
fsubs
daa
push
mov
cs
push
cmpsb
pop
ljmp
pop
jns
cmp
stos
lods
incb
es
mov
cmpsl
jb
cmc
ds
xlat
cwtl
or
jbe
pop
in
xlat
mov
leave
cmpsb
mov
ret
sub
ret
jmp
stos
fnop
fnop
out
je
subl
mov
push
icebp
mov
clc
movaps
and
mov
lds
mov
jno
iret
sub
mov
shrl
aaa
adc
in
inc
push
stos
cmpsl
lret
xor
aas
push
adc
sub
das
roll
xchg
aaa
push
adc
int
xor
adc
pusha
icebp
notb
test
pop
and
andl
aas
dec
jp
shlb
scas
sub
pop
mov
sub
sbb
in
xor
fdiv
call
pop
sbb
push
sbb
xor
ds
int3
sarl
std
add
or
lahf
mov
add
pusha
sbb
cmpsl
mov
mov
dec
nop
and
xlat
push
mov
test
mov
dec
and
mov
xchg
into
cli
icebp
sub
add
cmpl
fs
test
push
loop
mov
push
adc
popa
xchg
rcl
pushf
mov
mov
xchg
sub
fucomp
xlat
add
add
int
dec
loopne
shlb
sub
int
cld
dec
pop
adc
ja
push
shl
call
rdpmc
popf
add
sub
nop
orl
and
decl
mov
lret
push
arpl
mov
adc
stos
outsl
dec
inc
test
add
xchg
xchg
lods
mov
les
sbb
lret
lea
clc
lea
lods
and
popf
aam
lods
mov
xchg
es
fidivl
push
jbe
sub
loopne
ud0
in
add
mov
inc
in
cmp
pop
outsl
in
lock
mov
in
fstps
cmp
sti
mov
cmp
jnp
fistl
mov
push
push
loope
mov
add
fstpt
es
xchg
fs
inc
push
test
dec
push
dec
cli
xchg
and
pop
into
rorb
mov
fstl
add
push
in
data16
mov
mov
or
lock
push
popa
stos
pop
mov
push
jb
in
or
fwait
out
push
push
jg
es
notl
pop
out
sbb
ja
dec
insl
and
push
sub
out
aas
fidivs
sub
pop
jne
dec
or
stos
ss
rep
fcom
adc
jmp
push
call
xchg
cs
imul
inc
adc
or
cmp
scas
bound
pop
add
jnp
adc
xlat
pusha
push
ss
fisubs
jne
into
adc
jle
stc
loope
ljmp
mov
sub
sbb
jae
lahf
xlat
ljmp
fimull
pop
idivb
pop
imul
xor
mov
fcoml
bsr
cld
outsb
sub
mov
mov
out
das
pop
js
pop
ljmp
pop
dec
mov
out
pop
jno
xchg
cltd
inc
push
adc
sub
or
jl
or
loope
add
hlt
xchg
mov
pop
lret
addr16
cli
daa
fdivrl
addr16
call
ds
adc
mov
imul
mul
inc
pop
jle
push
ss
mov
push
pop
push
sub
push
scas
add
cmc
stos
cltd
push
fstpl
loop
sti
cli
add
sbb
sub
cmp
aas
xor
xchg
cmp
lret
cli
cmc
mov
add
push
push
cmc
movsl
pop
mov
lahf
mov
xchg
pop
outsl
pop
sbb
add
mov
rorl
dec
sbb
lahf
xchg
pop
adc
sbb
xor
adcl
test
pushf
ficoml
shll
mov
and
and
das
arpl
cltd
mov
push
xchg
add
into
adc
pushf
push
xchg
adc
mov
daa
dec
xlat
mov
push
and
aad
fcoms
mov
jbe
pop
and
into
mov
and
push
jp
cmpsl
xchg
adc
ljmp
nop
lock
push
and
add
mov
int
xchg
imul
shll
lods
imul
or
jne
scas
lods
dec
jne
add
and
mov
jno
inc
jno
and
xor
movsl
xor
sub
int
adc
pop
add
dec
sub
mov
in
int
dec
orl
ss
sub
dec
inc
mov
icebp
fstps
cwtl
outsl
xor
mov
or
dec
popf
jnp
arpl
scas
mov
sub
cmp
iret
rcrb
jns
xor
sbb
popa
jmp
data16
mov
insl
push
fwait
out
and
mov
cmp
inc
scas
push
xchg
bound
push
cmp
lods
cwtl
mov
adc
sahf
mov
cmp
sbb
fnop
loope
or
jno
in
adc
adc
push
rcr
ja
cmp
xchg
mov
les
adc
insl
xorl
cmpsl
adc
gs
or
mov
leave
inc
mov
cmp
or
aas
and
cmp
fwait
call
out
icebp
jb
push
mov
fistl
mov
adc
mov
mov
test
int3
jns
mov
xor
mov
lcall
jns
jns
and
sbb
jp
nop
aas
stos
iret
orl
jg
repz
inc
jnp
out
or
shl
fidivrl
sub
pop
jp
lret
mov
push
mov
loopne
inc
mov
mov
repnz
in
xor
out
adc
xor
inc
aaa
or
fisubrs
js
or
sub
dec
and
and
xchg
inc
jno
pushf
scas
and
xor
dec
xchg
push
xchg
push
rcrl
xchg
es
pop
std
sub
mov
and
ret
or
push
cmp
dec
pop
and
or
icebp
xchg
inc
gs
dec
out
xlat
cmpsb
pop
add
and
insb
addr16
dec
stos
mov
push
pop
fwait
add
out
dec
lret
cmp
lcall
icebp
test
std
push
repnz
or
daa
inc
xor
dec
leave
aad
cmp
aaa
mov
dec
mov
jbe
insl
jle
adc
mov
or
pop
arpl
mov
out
rolb
pop
fs
jno
lcall
inc
inc
pop
cli
or
xor
rcll
jo
push
add
lcall
test
mov
fcompl
popa
mov
aam
lahf
aad
or
dec
out
add
js
push
jle
pop
mov
pusha
add
adc
cmp
lods
mov
jno
int3
mov
aam
fstps
sahf
dec
xor
repnz
fmul
sbb
lock
push
push
cli
xchg
stos
pusha
scas
stc
mov
jecxz
inc
xor
and
xor
loop
imul
jg
or
mov
add
test
aas
dec
xchg
sahf
mov
movsl
pop
loope
push
cmp
addr16
mov
jecxz
jle
in
movsb
sbbl
in
push
frstpm(287
push
rcrl
xor
sub
add
es
inc
dec
adc
pop
fimull
add
pmaxub
and
testb
push
arpl
jnp
push
mov
sub
mov
mov
sub
out
and
dec
repz
xorl
fdivs
inc
or
add
aaa
dec
jns
lods
loope
imul
sbb
mov
push
and
outsb
and
js
test
imul
movsl
or
sub
mov
inc
mov
cmc
add
sbb
mov
cmp
mov
pop
sahf
adc
adc
outsb
cmp
outsl
lds
sti
jmp
push
in
sbb
xchg
push
outsl
xchg
ret
fldl
lods
dec
cmp
lahf
mov
xchg
and
mov
lea
push
es
jg
out
clc
subl
in
jle
addr16
ss
xlat
add
inc
notl
cmpsb
jno
fmuls
rorl
popf
movsb
aas
imul
daa
flds
adc
call
loope
stos
jae
lcall
fidivs
loop
aas
sbb
data16
fdiv
imul
jb
test
jg
sbb
rcrb
stos
mov
scas
fnstenv
pop
xor
or
jno
mov
bound
cmpsb
fiadds
xchg
fldt
cmp
lods
inc
notl
sbb
fisttpll
mov
fstps
sti
adc
int
xor
or
add
jmp
mov
fs
pop
test
mov
and
sbb
jne,pt
xchg
inc
mov
xchg
int
stos
outsb
pop
add
jbe
or
mov
inc
sub
mov
movsl
mov
dec
mov
inc
arpl
adc
push
enter
aad
stc
mov
bound
or
lods
lods
movsb
push
imul
mov
sub
push
cmc
inc
add
sbb
std
ljmp
push
lods
test
jmp
push
pop
nop
push
adc
sbb
jge
cmp
sub
or
jae
pop
xchg
push
das
dec
cmc
push
repnz
inc
shlb
push
lcall
adcl
add
jp
pop
int3
aad
jg
fwait
sbb
pop
adc
mov
insl
mov
push
pop
sub
pop
inc
cmpb
in
scas
in
ss
inc
int
insb
cmpsb
mov
jns
add
je
cs
ss
ret
sbb
ret
cmp
inc
nop
dec
adc
ds
loopne
ret
inc
mov
jo
stc
ss
inc
inc
cmp
mov
jnp
xchg
rcll
cs
mov
pop
and
xchg
xor
or
hlt
imul
add
dec
gs
cmp
xchg
xor
ljmp
cmp
sahf
cmpsl
sbb
xchg
sub
jno
xchg
xchg
sub
xor
cmp
xorb
repz
dec
push
das
mov
in
and
xor
outsb
in
jns
and
std
in
aam
test
cli
mov
xor
xchg
sub
rcll
in
mov
sub
jnp
enter
mov
sbb
mov
sbb
stos
xor
loop
sub
cld
inc
and
push
adc
adc
and
push
push
xor
mov
mov
test
aaa
icebp
xor
mov
cltd
xchg
pop
push
in
cwtl
icebp
dec
repnz
int
and
pushf
idivb
dec
ror
adc
jge
xlat
imul
lea
push
ret
or
loopne
rorl
dec
and
push
rol
cltd
dec
xchg
xchg
dec
inc
es
lcall
jnp
xor
scas
repz
sub
cmpsb
mov
sbb
mov
xchg
cs
or
nop
dec
sahf
pop
repz
leave
aam
outsl
lea
cmp
and
clc
stc
hlt
adc
cmp
hlt
ss
das
xlat
insb
mov
xlat
push
repnz
cmp
sbb
sbb
sub
scas
cli
mov
in
pushf
jno
ljmp
or
sbb
pop
and
paddq
in
leave
jle
mov
or
mov
dec
cmp
sbb
cltd
adc
xchg
stc
pop
sbb
xor
push
sti
jmp
into
dec
pop
dec
lods
xchg
sti
scas
mov
rolb
nop
scas
sbb
cmp
add
inc
mov
in
pop
aam
lods
push
stos
jne
cmp
cltd
popf
lods
rolb
loopne
jecxz
adc
into
cli
roll
fmul
ljmp
imul
xlat
xchg
cmp
and
xchg
mov
jmp
add
ret
orb
popa
scas
inc
xor
add
pop
pop
jle
inc
jns
xchg
sub
mov
ds
xor
sbb
fwait
cmp
pop
ret
inc
rorb
cmpsb
sbb
jae
cmc
shll
add
or
nop
sbb
add
aam
loopne
dec
rcrb
popf
pop
pushl
jbe
or
and
negl
inc
push
test
xor
sub
xchg
imul
xor
and
fisttps
adc
shlb
mov
jae
daa
cli
sahf
add
cmpsb
jmp
add
pop
shlb
aam
int
jg
je
sub
push
daa
inc
stos
adc
pushw
add
fisubs
sub
imul
aaa
or
ja
xor
mov
ss
cmp
mov
jmp
je
aam
cmp
and
dec
popf
lret
popf
ret
int
leave
dec
mov
jno
or
andb
stc
add
and
cmp
loope
bound
mov
int
cmp
push
adc
in
ja
je
or
js
jns
daa
icebp
jb
jo
sub
sbb
mov
outsb
mov
rclb
push
and
inc
inc
pop
aad
sbb
cs
cmpsb
xor
pop
imul
mov
add
leave
cmp
hlt
out
ret
mov
or
mov
and
mov
dec
sbb
incb
cmc
mov
cld
rolb
es
or
neg
dec
xchg
dec
dec
lcall
popl
pop
dec
inc
cmp
test
cmpsl
mov
xchg
bound
dec
adc
fldcw
mov
jnp
scas
mov
aaa
pop
sbb
sbbb
pop
leave
jg
mov
adc
ss
mov
adc
pushf
sub
dec
lods
mov
and
and
xchg
sbb
shl
xchg
mov
std
ds
cmpb
mov
push
sarb
mov
sti
mov
sbb
mov
outsb
sarb
adc
int3
push
or
sbb
out
pop
inc
jecxz
adc
and
mov
daa
mov
js
cmpsl
inc
push
pushf
sahf
adc
mov
bound
add
xchg
xchg
gs
and
arpl
mov
sahf
aas
xlat
inc
aaa
cs
pop
add
fdivrl
sbb
mov
and
stos
mov
mul
sti
cwtl
out
adc
jne
cmp
cmpsl
out
cmp
inc
fisubl
notl
xor
pop
aaa
addr16
jl
inc
insl
cltd
xchg
push
mov
dec
cli
sub
xor
in
repnz
fldenv
lret
sbb
push
add
add
pop
pop
rcrl
inc
fdivrs
add
iret
out
or
push
jbe
fbld
cmp
inc
iret
mov
pushf
push
lods
push
mov
add
repz
jb
scas
sub
mov
adc
cli
cmp
sub
jo
jg
jle
or
fadds
mov
mov
xorb
and
in
mov
push
pop
mov
mov
and
mov
test
xorl
xchg
test
cmp
sub
push
fwait
lea
insb
mov
xor
pop
jp
cmp
js
cmc
jnp
hlt
cli
stos
arpl
inc
popf
cwtl
arpl
test
xor
cwtl
jecxz
div
xchg
in
push
out
dec
jl
popa
lcall
sub
imul
gs
stos
xor
mov
call
and
or
mov
repnz
inc
loopne
jg
adc
into
xchg
cltd
push
test
clc
xchg
lahf
push
mov
xchg
in
scas
jge
inc
popa
jge
cwtl
cs
je
jge
inc
push
pop
mov
jge
sbb
dec
mov
sbb
fsubrl
test
jle
in
pop
int
addr16
pop
mov
bound
btc
push
adc
cli
outsb
fdiv
repnz
add
mov
loope
enter
sbb
mov
pcmpgtb
cmp
sub
aam
sbb
arpl
push
jnp
pop
dec
pop
mov
test
adc
pop
stos
je
add
cmpsb
push
fwait
lea
push
dec
cmp
xor
push
mov
lahf
adc
aaa
or
aaa
mov
dec
popw
outsl
pop
dec
pop
pop
push
pop
dec
aas
fwait
into
mov
pop
push
sbb
jg
or
mov
cmp
add
dec
data16
push
lcall
out
into
out
lock
mov
ret
and
cmp
jecxz
jb
push
nop
cld
shll
cmp
xchg
out
pop
xor
cmp
or
les
mov
neg
xor
push
mov
cmpsl
insb
jbe
dec
push
sub
mov
and
xor
jbe
and
ss
pushf
stos
nop
cmp
int3
rcrb
cs
add
push
pop
shr
and
xchg
ss
inc
xchg
data16
ret
and
pusha
cmp
jno
sbb
iret
lcall
mov
int3
movsl
mov
scas
cmpsb
xchg
cli
pop
mov
or
stos
repz
or
and
sahf
xchg
push
jns
jecxz
into
mov
jne
cltd
shll
inc
insl
sbb
mov
mov
out
dec
leave
xchg
pop
stos
addl
or
stos
xlat
incl
sbb
ds
or
insl
mov
jg
fistpll
cld
fildll
jbe
mov
jle
mov
into
jle
mov
add
add
jae
std
mov
or
out
xor
and
push
jb
aam
jbe
push
fnsave
jb
hlt
sbb
pop
cmp
jne
sub
dec
scas
arpl
sub
inc
fs
push
mov
adc
inc
lret
cs
mov
stos
arpl
or
jmp
mov
push
pop
imul
pop
push
push
dec
test
xor
mull
xor
xchg
in
pop
jno
pop
lods
std
add
cltd
out
outsl
sub
and
sub
cltd
imul
sbbb
mov
popl
jge
std
leave
lods
ljmp
fs
push
push
mov
test
test
inc
scas
sbb
mov
inc
inc
inc
pop
cmc
loopw
cmpsb
mov
test
lods
sub
cs
cltd
test
add
mov
add
pop
cmp
mov
push
mov
mov
pop
lahf
cmp
bound
scas
mov
loope
fistps
mov
addr16
test
jl
mov
xchg
or
cltd
cwtd
je
fimuls
jg
dec
fcompl
cmp
fmul
push
sbb
popa
test
orl
cmp
pop
fsubl
adc
lret
sar
jno
push
or
or
jnp
mov
mov
insl
xchg
cmp
mov
xor
jb
xchg
sub
sub
stos
adc
adc
sub
aas
shr
shll
jl
imul
inc
pop
add
repz
imul
data16
xlat
mov
rcrb
in
and
push
pop
mov
scas
loopne
cld
fsubl
lods
repnz
insl
movsb
inc
xchg
out
shrb
movsl
dec
sub
mov
add
pop
mov
lret
movlps
fsubl
pop
js
out
loopne
aad
bound
faddl
mov
fadd
andl
push
mov
mov
stos
mov
cmp
inc
enter
repnz
ret
ror
sahf
sub
push
loop
ljmp
cmp
mov
bound
sbb
push
push
mov
aaa
adc
ljmp
ss
pop
stc
inc
mov
es
dec
and
mov
stos
sarb
jl
or
pop
jp
insl
ja
ljmp
or
and
jb
mov
rcrl
mov
xchg
dec
dec
cmp
fsub
xor
insb
jp
bound
push
and
loop
stos
mov
jg
jbe
pop
cmpb
cmc
cli
inc
jns
out
pushf
outsl
sbb
aad
mov
lods
stc
mov
cwtl
scas
mov
lock
and
cld
movsl
nop
jp
std
stos
add
js
sub
test
xchg
or
sarb
cmp
cmpsl
jl
mov
lahf
addr16
inc
sahf
mov
dec
xchg
push
xor
scas
pop
xorl
xor
imulb
cmc
xchg
jne
push
fldl
sbbb
jp
int3
mov
int3
inc
push
stos
inc
enter
mov
cltd
adc
mov
lock
jg
cmp
dec
mov
adc
fisttpll
lea
mov
dec
cmpsl
mov
and
insl
fdivl
cmp
and
ss
xor
sub
add
sbb
movsb
outsl
subb
xchg
xor
clc
push
and
mov
lods
push
inc
inc
sahf
jecxz
ds
ljmp
adc
inc
aaa
jnp
mov
test
jo
stc
pop
ret
ret
loope
fs
push
pop
bound
pusha
sub
std
adc
push
ret
ret
push
mov
sub
fdivrl
mov
stc
and
mov
sub
movb
pop
lret
adc
pop
arpl
faddl
ljmp
push
sbb
lods
dec
add
cwtl
dec
pusha
cmpsb
pop
push
fsubrl
in
std
aad
cmpsb
cmpsb
sub
sbb
and
add
add
shr
aaa
mov
mov
and
xchg
loopne
push
xlat
out
enter
test
mov
mov
cli
negb
jne
lock
cltd
push
out
pop
stos
mov
mov
and
mov
lock
push
pop
cmp
cwtl
in
mov
pop
mov
push
outsb
push
std
lods
mulb
cld
orb
aad
mov
dec
mov
lahf
scas
fnstenv
and
mov
pop
and
sti
cld
and
push
pop
imulb
pop
test
fnsave
jmp
sahf
fistpl
xor
xchg
and
shl
out
fnsave
cmp
bound
add
dec
sub
inc
fnstsw
jmp
pop
in
sahf
fdivrl
and
pop
imul
sub
or
or
and
sub
sub
jo
xchg
ret
dec
and
mov
add
orl
xchg
or
ret
testl
cli
out
out
loop
lahf
jmp
test
sub
outsb
sub
insb
xlat
dec
mov
push
add
jecxz
enter
jb
out
lret
fildll
addb
sbb
pop
ds
cmpsb
adcb
out
rcr
in
sarb
cmp
adc
adc
sub
sbb
push
and
push
mov
inc
jl
adc
cmpsb
ss
outsb
gs
and
shrl
pop
xor
add
lock
xchg
jp
loopne
and
sbb
ljmp
push
xchg
cmp
divl
cmp
mov
popa
add
cmpsb
and
mov
insl
inc
mov
lcall
push
fisubrs
stos
xchg
adc
mov
xchg
aaa
jns
cmp
lods
mov
xchg
mov
xor
mov
xor
mov
sub
sub
push
mov
inc
or
in
shlb
or
jo
aam
pop
mov
jbe
inc
popf
xchg
jo
push
outsl
cmpsl
sub
test
and
movsl
or
pop
fwait
cmp
jmp
aad
in
pop
push
icebp
cli
movsl
mov
and
aas
loopne
jmp
les
sbb
xchg
test
aam
lcall
shrl
rclb
and
cltd
xchg
jne
push
jg
fsubrs
data16
and
scas
cltd
pusha
push
stc
stos
out
clc
inc
stc
ja
xor
or
popa
enter
mov
in
mov
adc
aaa
inc
cmpsl
ret
jae
enter
es
test
inc
adc
test
push
jg
sti
inc
imul
sar
inc
rcrl
adc
stc
add
push
sti
ds
xchg
mov
adc
out
lds
dec
pop
int3
int3
jno
leave
lea
icebp
push
push
and
verr
jnp
shrb
xchg
mov
xlat
rolb
pop
fcmovnu
rclb
adc
push
pop
fcompl
push
mov
outsb
mov
inc
mov
loopne
push
cmp
sub
das
mov
mov
mov
hlt
push
sti
mov
mov
mov
in
cmpsl
xchg
mov
clc
loopne
js
sbb
or
out
sbb
lods
fwait
push
jae
pop
xor
cmp
add
dec
fisttpl
mull
shrb
mov
rol
sti
fists
xor
jmp
sbb
add
pop
push
in
ss
jae
subl
in
out
cmpsl
xchg
call
mov
pop
std
xor
in
out
jo
cmp
stos
push
mov
lds
fsubs
push
mov
cmpb
lods
fwait
loopne
gs
xchg
mov
inc
cmc
sti
cltd
pop
cmp
sub
test
xor
push
inc
adc
pop
push
aad
jl
popf
mov
fucom
inc
clc
sub
ljmp
cmp
hlt
mov
cmp
mov
ja
adc
ret
mov
xor
popa
inc
jl
xchg
int
fcompl
arpl
mov
push
pop
insl
xor
fwait
cmc
out
jmp
pop
lea
sbb
mov
pop
shlb
lods
fdivrl
fwait
or
aas
cmp
daa
sbb
dec
insb
std
repnz
popa
mov
mov
rclb
xchg
adc
fidivs
cmp
pop
sub
push
mov
das
or
pop
ljmp
adc
stos
sbb
jb
fcompl
nop
into
mov
adc
jp
scas
push
or
cmp
cmp
fwait
mov
xlat
daa
das
push
in
mov
sbb
cmp
std
cmp
imul
scas
daa
lods
mov
xor
mov
dec
cli
mov
not
cmpxchg
cmc
enter
and
lock
enter
cmp
scas
outsb
push
mov
dec
loopne
pop
add
pop
push
pop
insl
fsubl
cli
imul
int
or
lods
inc
mov
test
xor
and
push
mov
clc
adc
testb
aad
iret
movsl
cmp
jl,pn
jg
or
xchg
xor
mov
and
sar
push
ljmp
lahf
adcb
xor
inc
mov
mov
mov
sub
test
lret
adc
lret
out
pop
jne
bound
addr16
adc
push
in
rolb
data16
adc
push
or
arpl
arpl
pop
cwtl
leave
unpcklps
jne
pop
dec
xchg
inc
lods
stc
cmp
hlt
mov
mov
add
inc
or
or
test
mov
mov
xor
xlat
xchg
mov
lds
cmp
xor
rcll
out
cmpsb
sbbb
xsaves
pop
cmp
repnz
add
int3
jecxz
movsb
push
sub
les
bound
mov
pop
pop
push
mov
xor
mov
test
imul
xlat
push
xor
imul
fs
rorl
negb
lods
aad
arpl
jnp
addr16
push
inc
inc
mov
fsubrl
in
adc
mov
fs
fsts
std
jns
sbb
shrb
rep
test
xchg
int3
push
in
out
xor
addr16
pop
push
into
pop
jle
push
movsb
mov
sub
inc
add
push
hlt
fs
cs
mov
outsl
mov
jecxz
inc
sbb
push
mov
xchg
mov
pop
sbb
jmp
pop
xor
jo
add
in
jbe
movsl
pop
xchg
lds
or
mov
out
ja
sarb
jmp
ds
lea
inc
mov
dec
push
es
sbb
add
mov
inc
xor
push
pop
or
daa
adc
ret
in
sub
in
push
adc
mov
jl
out
dec
loop
pushf
clc
decb
stc
pop
dec
xchg
pop
std
fwait
addr16
or
mov
cs
cli
cmpsl
mov
xor
pop
mov
popf
out
pop
mov
jecxz
leave
jb
pushf
cltd
jl
add
inc
cmp
dec
loope
push
mov
mov
dec
ret
sbb
add
jne
inc
lea
jmp
xchg
das
and
test
pop
jb
sub
xor
jo
repz
push
lret
mov
pop
rcll
ja
hlt
dec
rcll
lods
or
ja
add
dec
js
inc
xchg
mov
sub
or
cli
lds
imul
jb
pushf
jns
bound
lret
mov
sbb
or
adc
jne
jge
adc
xor
dec
pushf
popa
fisttpll
cmpsl
leave
sbb
ds
jbe
inc
mov
and
int3
xlat
cmpsl
pop
pop
cld
icebp
xchg
sub
push
stc
jge
je
sarw
fwait
jecxz
xchg
lret
cmp
shl
loopne
or
add
mov
ja
fnsave
scas
dec
fdivrl
in
insl
cmp
mov
fiaddl
push
or
add
jle
mov
push
dec
pusha
aam
cltd
or
outsb
popa
add
daa
lock
push
pop
rolb
mov
mov
sub
pop
add
push
loope
pushw
ljmp
cs
jo
pop
daa
stos
insl
movb
pop
push
mov
ja
sub
and
xlat
and
aad
shll
aas
lods
fs
or
dec
push
loope
pusha
sub
cmp
push
push
add
shrl
sub
imul
hlt
cmpsl
sbb
mov
add
pop
mov
and
mov
adc
fs
push
mov
out
push
test
adc
push
cs
lahf
dec
jno
sub
jb
cmp
xchg
in
fildl
insl
cwtl
mov
js
mov
pop
addb
adc
push
lods
push
cmp
or
leave
ljmp
dec
adc
mov
xorl
pop
xchg
adc
call
xchg
jle
popf
push
rcll
mov
roll
inc
lods
cli
add
sub
adc
rorb
sbb
xchg
add
popa
enter
lds
sub
adc
repz
aas
imul
aas
popa
sub
xorl
jae
shrb
xchg
mov
xchg
rorl
xchg
leave
push
xchg
mov
pop
cmc
fincstp
loop
xchg
jg
lret
cmp
mov
in
lea
jae
mov
sub
incb
aaa
cltd
lret
dec
push
xor
popa
test
insl
andl
rolb
jo
push
in
adcl
jae
sahf
sub
push
or
sbb
sub
enter
into
inc
imul
inc
mov
mov
mov
fwait
leave
sahf
add
movsb
mov
fdivr
jo
xchg
pop
mov
inc
scas
es
in
int3
cmp
in
out
nop
sbb
xchg
aaa
push
adc
aaa
rorl
vmaxss
mov
fsubr
incl
insl
xor
daa
adc
sub
rcrb
js
mov
stc
out
ss
sub
jl
and
les
daa
test
test
inc
adc
imul
pushf
popa
jo
jecxz
push
lahf
pop
inc
sbb
inc
xchg
dec
std
jbe
je
mov
cmp
add
mov
sub
cmp
lock
and
loop
pop
lahf
jne
fmull
inc
cltd
xor
inc
loope
sbb
loop
sbb
cmp
sbb
add
scas
addr16
add
scas
sub
aaa
sbbb
mov
xchg
add
mov
in
sub
jge
movsl
test
adc
mov
scas
and
sbb
andl
adc
jbe
inc
jae
sbbb
addr16
xchg
mov
or
mov
jns
test
mov
or
jg
jg
mov
and
fnstenv
sti
loopne
inc
inc
aam
jae
test
insb
lret
xchg
int
pop
and
lock
adc
mov
scas
in
sti
outsl
push
jp
adc
out
add
stc
inc
in
addb
mov
mov
and
in
hlt
push
jno
push
lds
jp
add
xor
sub
mov
rorl
inc
rclb
out
dec
in
push
pop
outsl
sbb
pop
mov
enter
push
movsl
pop
push
adc
adc
jbe
jbe
loopne
jl
xor
mov
jae
jge
adc
dec
adc
enter
out
sahf
rorl
rclb
mov
sub
ja
dec
mov
stos
das
sbb
push
and
mov
rcrl
test
mov
xor
ds
test
gs
push
mov
inc
inc
dec
xlat
or
adc
mov
xchg
jo
dec
ror
bound
cmpl
adc
sbb
ss
mov
push
xlat
push
sub
shll
xchg
arpl
test
rolb
outsl
cs
push
mov
cmpsl
arpl
or
push
nop
sub
ret
add
pop
leave
aam
mov
dec
push
push
outsl
ret
inc
jno
into
cmp
fnstcw
jle
repnz
sub
mov
pop
je
out
fcompl
add
push
sub
adc
push
add
mov
add
add
cmc
jnp
fs
scas
cmp
and
mov
sub
push
movsb
cmc
sbb
lds
fcoml
sub
dec
mov
mov
dec
or
inc
imulb
pop
inc
push
hlt
mov
in
nop
push
leave
push
mov
or
shl
sub
stc
dec
sbb
sbb
sbb
jo
cwtl
jecxz
pop
sub
adc
pop
fwait
push
push
das
jns
mov
enter
bound
add
dec
sbb
jle
xlat
andb
add
shlb
inc
dec
enter
sub
test
dec
mov
call
xchg
int3
fildll
fmull
loope
test
cmpsl
mov
fbld
rcrl
and
push
jnp
test
into
loopne
lds
mov
mov
jo
nop
rorb
mov
sub
mov
push
inc
outsb
mov
scas
adc
sti
mov
sub
push
out
aam
mov
mov
loope
lret
cmc
xchg
sti
and
dec
xor
shlb
loop
cwtl
mov
mov
dec
push
cmp
out
mov
rcrb
test
std
test
mov
lahf
add
outsl
outsb
push
outsl
pop
jae
ret
ds
outsb
inc
xchg
jmp
fiadds
mov
sub
pop
xchg
fstps
mov
stc
das
stos
mov
add
mov
call
addr16
cwtl
push
xchg
stos
es
add
dec
push
inc
mov
inc
pop
mov
inc
in
popf
xlat
xlat
sahf
mov
test
cmp
mov
cs
jne
ljmp
sub
cwtl
je
pusha
jae
pop
pop
popa
xor
push
xchg
or
dec
push
dec
sbb
loop
iret
rcl
mov
popa
or
mov
cmp
jno
mov
jno
movsb
adc
into
pop
stc
cmp
imul
in
hlt
push
inc
add
std
xchg
push
add
daa
pop
xchg
add
js
bound
sbb
xchg
rcrb
aam
outsl
push
jl
sbb
fcoml
insb
femms
mov
addb
jo
push
mov
inc
add
pop
hlt
enter
testl
xor
and
mov
jmp
cs
and
sbb
sub
add
rol
ss
aam
pop
iret
cmp
lods
dec
jns
insb
jmp
fistl
fisubrl
cmpb
movsl
orb
mov
xor
sub
sbb
pop
cwtl
xor
stos
jmp
jl
mov
out
pushf
xor
add
fs
shrl
lret
daa
pop
jbe
jae
xor
ret
lods
mov
xor
pop
add
sub
pushf
ds
sub
push
cmp
mov
fwait
lahf
je
mov
pusha
enter
arpl
pop
sarb
addr16
popa
jl
sub
out
adc
sbb
in
js
xor
or
adc
out
test
cmp
and
mov
sbb
jmp
or
loope
imul
test
mov
and
call
push
inc
loope
outsl
and
out
repnz
and
xor
and
mov
dec
outsb
repz
mov
nop
pop
insb
into
pushf
lea
cmpsl
cmp
pop
jge
jae
into
pop
mov
mov
fistps
adcl
mov
cmp
xor
outsb
push
cmp
fwait
iret
js
aad
ja
subl
jo
sbb
or
es
int
inc
hlt
ja
imul
cmpsl
jae
test
lock
jl
xchg
xchg
and
ret
mov
rorl
iret
sub
pop
jbe
pop
leave
fbld
add
or
or
out
ret
dec
ds
cmp
dec
daa
jmp
pop
andb
jmp
cmp
into
pusha
pop
addr16
or
mov
and
and
aam
xor
inc
stc
push
cmpsb
pop
or
clc
pop
ds
xor
cmpsl
mov
sbb
lret
and
out
mov
or
mov
loopne
mov
ret
cmpsb
sub
ss
sub
inc
jp
add
nop
ficompl
xor
and
mov
jne
cwtl
inc
add
push
loope
arpl
lret
lcall
mov
fsubl
mov
and
xor
push
iret
pop
and
sbb
cmp
loope
push
xchg
cmp
jecxz
and
inc
or
rcr
sbb
fwait
pop
in
pcmpgtw
dec
outsb
adc
mov
xchg
inc
mov
sbb
pop
mov
jecxz
fwait
dec
pushf
mov
jne
jns
jmp
in
mov
inc
push
add
and
jge
cltd
or
and
cltd
cmpsl
roll
mov
mov
ljmp
in
mov
daa
mov
lcall
sahf
mov
sahf
pop
fildl
lret
sub
mov
lret
pusha
push
cmp
inc
iret
adc
jns
xor
add
sbb
jns
stc
dec
cmp
jmp
xor
add
sbb
sub
sahf
sub
push
jae
test
imul
aas
dec
sbb
ret
sub
rclb
out
xor
mov
sub
dec
push
cmp
push
adc
int
mov
inc
mov
push
lahf
sahf
sbb
mov
dec
loop
push
xor
add
fcoml
add
les
xor
xchg
shl
and
in
loope
xchg
andb
sub
frstor
pop
scas
sub
rclb
jecxz
in
std
mov
jno
outsl
sbb
fidivrl
cld
fisttpll
movsl
or
push
lahf
jae
clc
mov
testl
sbb
ret
sbb
orl
test
xchg
sbb
loop
jne
sbb
and
jge
out
push
or
ret
or
or
movsb
mov
test
xchg
scas
jl
jmp
or
jp
js
xor
es
dec
stos
jno
andb
mov
into
cmp
mov
fsubs
out
sub
stc
mov
pop
daa
xlat
pop
shl
push
scas
add
adc
movsb
outsb
test
int3
mov
dec
xchg
fdivrs
aam
lret
popa
sub
inc
xor
push
out
fsubrl
mov
or
icebp
cmpl
adc
dec
jae
inc
pop
add
popa
lods
in
div
stos
dec
push
xchg
call
stos
dec
mov
adc
xchg
add
icebp
jno
vpshlw
push
mov
imul
push
xlat
push
xchg
sbb
je
add
lea
fsubrs
push
or
stos
xchg
jbe
fnsave
arpl
stos
fisttpl
loope
inc
cmp
xchg
lock
test
add
rorl
mov
jns
sbb
mov
out
lcall
xchg
jmp
lahf
daa
data16
jge
pop
push
xchg
push
pusha
ja
inc
mov
xchg
mov
mov
jo
jle
jo
sbb
outsl
gs
jb
stc
lcall
sub
movl
lock
orb
pop
nop
jns
pop
fwait
adc
jp
rol
lcall
popl
in
es
testl
popl
push
xor
cli
mov
xchg
mov
mov
insl
pop
push
push
jmp
scas
stc
xchg
sub
in
push
pusha
vmovq
and
xchg
imul
aad
fists
stos
ret
adc
fadd
dec
mov
shrb
mov
jae
scas
push
std
sub
pop
add
mov
mov
pop
jns
add
sbb
jecxz
fimull
cltd
inc
test
test
jb
les
push
inc
lcall
jo
push
pop
adc
jns
mov
sti
mov
jmp
lea
movups
cli
shl
int3
test
and
sti
mov
add
mov
dec
mov
pusha
xor
sub
clc
jne
sahf
dec
fadd
xchg
fs
scas
aad
or
adc
xor
lcall
popa
repz
lret
mov
sbb
jnp
js
enter
jo
je
inc
mov
inc
add
sti
sbb
ds
pop
mov
mov
ja
inc
data16
push
lahf
int
repnz
jae
inc
cmpb
jae
push
xchg
jno
test
nop
mov
ret
sub
xor
shrl
into
aad
xor
mov
fwait
subb
mov
xlat
xchg
jo
sbbb
cmp
xor
mov
dec
inc
add
insl
in
in
push
xchg
inc
pusha
xor
push
mov
sbb
mov
outsb
fs
int3
inc
lret
movsl
adc
mov
push
cs
jnp,pn
into
dec
leave
je
insl
and
cwtl
inc
dec
inc
cld
repz
dec
mov
adc
frstor
xchg
mov
out
into
mov
aad
packsswb
push
addb
imul
mov
pop
mov
jne
adc
stc
adc
or
xor
je
out
lock
scas
addr16
mov
mov
iret
xchg
xchg
sbb
in
mov
mov
aas
jge
cmp
cmpsl
addr16
mov
loop
sub
lret
iret
xchg
fwait
ja
pop
movsb
cli
lea
or
sbb
mov
dec
jo
adc
cmp
push
test
cmp
sarb
movsl
push
in
dec
leave
xchg
xchg
lds
in
scas
xorb
mov
or
xchg
xchg
fsubl
mov
psubd
repz
mov
xchg
inc
hlt
mov
push
cmpsl
ret
js
sbbb
mov
aam
or
je
aam
mov
adc
fdivl
divl
js
xchg
addr16
mov
xlat
sub
push
adc
add
repz
test
sbb
dec
sti
testb
cli
jl
dec
leave
or
xchg
jle
push
mov
xor
add
sub
dec
lret
push
aas
jmp
dec
push
mov
xchg
int3
push
sarb
push
push
adc
dec
jns
add
aas
fildll
lcall
sbb
in
jne
push
stc
dec
dec
in
pop
push
movsl
pop
xor
cmpsl
push
sbb
inc
mov
mov
mov
in
cmp
xlat
popa
push
dec
pusha
aas
into
mov
cmp
push
push
out
loopne
insl
cmp
fxch
or
jno
jp
mov
mov
add
ja
mov
js
in
push
cmp
test
mul
push
sub
pop
push
xor
popf
addr16
cmp
fucomip
ljmp
inc
jns
ds
xor
cld
loope
pavgw
lret
cmp
loop
cmp
mov
or
ljmp
push
xor
das
stos
sbb
shl
pop
inc
sbb
or
pop
les
mov
and
xor
cwtl
in
mov
jge
jo
rcl
jnp
cld
outsb
mov
stc
in
lret
push
xor
lret
imul
mov
inc
cmc
lret
jbe
iret
mov
jg
addr16
sub
pop
inc
fiadds
sti
cmp
cwtd
fwait
mov
lods
mov
xchg
mov
jmp
mov
iret
test
testl
inc
cwtl
mov
stos
aas
loop
pop
adc
jo
shl
xor
js
out
push
inc
popa
inc
insb
mov
jg
mov
ds
xor
xor
push
js
ds
cltd
and
xchg
negb
push
cwtl
jmp
xor
out
aad
jle
mov
xor
add
adc
scas
test
sub
xor
movsl
pop
mov
out
sbbb
jns
rol
and
lret
repz
dec
cwtl
xchg
mov
sbb
push
mov
xlat
repnz
cs
push
insl
popf
push
jl
jmp
and
imul
clc
mov
out
out
popa
xchg
add
dec
jne
aas
inc
push
repnz
sarb
xchg
mov
xchg
mov
xchg
loopne
shlb
insb
xchg
inc
mov
push
nop
stos
and
std
add
es
rorl
ret
rcrb
push
sub
jge
xchg
rcrb
imul
int
mov
outsl
xchg
ss
adcb
pop
les
sbb
out
int
jne
xchg
ljmp
fstpt
push
jno
scas
pop
mov
mov
clc
clc
xchg
incl
sbbb
cmp
push
add
cltd
es
sbb
in
scas
cmp
rorb
xchg
adc
sub
ja
mov
push
push
cs
mov
push
or
push
cmp
hlt
dec
push
dec
jo
pxor
pop
cltd
cmc
lret
dec
aaa
clc
insb
push
popf
in
sbb
dec
or
jae
mov
dec
mov
dec
xchg
std
mov
inc
jg
jge
inc
loopne
pushf
std
pop
lcall
and
jns
pusha
push
scas
rorb
pop
jo
jo
pop
fcompl
mov
xlat
xor
dec
jne
pop
mov
shll
roll
dec
adc
inc
adc
incb
mov
adc
ss
fwait
loop
mov
sub
mov
js
pop
xchg
cmpsl
mull
rorl
mov
shrb
xchg
jne
popa
xchg
sahf
jns
inc
hlt
movsl
and
test
movsb
mov
cltd
test
and
sub
ja
rcr
jno
mov
sbb
adc
cmp
pop
or
clc
jb
mov
mov
xchg
mov
fwait
mov
lds
inc
stos
adc
jl
insb
xchg
cmp
jle
mov
inc
xor
popf
jmp
jns
adc
sbb
sbb
movsb
sbb
jmp
jg
lods
xor
mov
sbb
and
ret
dec
mov
xchg
and
push
fistl
leave
rcr
jge
shll
int3
mov
aam
jae
mov
xchg
mov
arpl
push
cld
negb
packuswb
test
add
sub
cmpsb
loopne
movsb
stc
pop
je
addl
inc
orl
lods
imul
cwtl
loopne
or
bound
dec
mov
adc
loopne
enter
sub
lock
pop
dec
pop
xor
inc
mov
into
xchg
xchg
mov
hlt
popf
and
icebp
negl
out
jp
mov
adc
aaa
mov
xorb
stc
out
enter
mov
push
inc
test
pop
sbb
sbb
shll
xor
inc
aam
push
pop
xchg
lret
adc
mov
dec
xchg
ds
xor
dec
dec
cmp
rolb
adc
dec
loop
add
add
jecxz
push
cmpsl
add
xor
xchg
ret
and
jns
lods
cli
js
test
loope
sbb
dec
xchg
cmp
repnz
enter
mov
je
jmp
xchg
dec
fldt
and
sbb
lahf
mov
push
fmuls
fs
es
sbb
mov
sbbl
inc
mov
addr16
pop
test
dec
add
bound
lock
or
dec
out
xchg
jg
fucomp
push
push
movsl
cltd
dec
insb
adc
and
push
cwtl
cmpsb
aas
xor
pop
sarb
fstpl
mov
cli
xlat
enter
fisubl
push
xchg
mov
inc
shrl
insl
jg
dec
push
es
out
dec
pop
test
ja
xor
mov
or
addr16
push
sahf
loop
jmp
fnsave
or
add
inc
dec
xor
or
sahf
jae
sbb
mov
pushf
mov
sub
jne
dec
xchg
outsl
cmp
incl
cmp
mov
dec
bound
fcmovnb
xorl
mov
adc
daa
inc
or
sbb
adc
cs
mov
push
sahf
pop
or
stos
lcall
xor
rcrl
lea
das
inc
scas
out
jns
popf
dec
repnz
xchg
and
or
mov
lea
jb
push
test
fst
sub
int3
fdivl
arpl
jecxz
jnp
pop
cmp
ficomps
int3
cmp
pushf
pop
mov
jge
mov
cs
adc
lea
mov
es
mov
sbb
and
mov
xchg
shl
adc
jo
pop
jo
adc
fs
jmp
and
and
mov
add
mov
xchg
ret
inc
aaa
aaa
lds
xor
addb
adc
pop
test
mov
cmpl
or
imul
fnstsw
mul
cmp
cld
mov
aam
add
ss
dec
lods
add
mov
nop
xlat
pop
and
nop
push
movsl
outsl
jmp
xlat
mov
clc
lods
xor
daa
popf
stos
stos
aaa
jne
outsb
leave
cmp
inc
xchg
xlat
push
loope
sarl
in
int3
sub
testl
mov
mov
pop
out
xchg
ss
mov
aad
mov
or
or
inc
adc
xchg
arpl
movsl
mov
cmp
mov
lret
sbb
iret
jns
mov
gs
out
and
or
adc
shrl
bnd
shlb
inc
roll
cmp
pop
push
pusha
sub
jbe
fcomps
or
push
add
pop
jge
mov
and
outsl
xor
fstp
push
fimuls
or
daa
pop
stos
and
lret
or
mov
mov
inc
mov
push
mov
mov
cli
adc
and
cwtl
sub
fs
inc
jbe
test
mov
dec
sbb
pop
sub
int
nop
insb
in
daa
out
int3
push
mov
pinsrw
ss
push
fmulp
xchg
andl
xchg
ret
ret
shrl
das
and
xchg
call
arpl
adc
inc
ror
test
leave
sub
push
pushf
jge
dec
pusha
mov
jno
fildll
hlt
pushf
pop
mov
jmp
jns
adc
clc
testb
addr16
les
or
cmpsl
fxch
and
rcrb
inc
test
dec
sti
stos
pop
adc
sub
dec
mov
testb
cmp
mov
ret
outsb
mov
mov
push
push
push
mov
ret
add
movsl
xlat
push
outsl
push
pop
loope
mov
xchg
fsubr
jnp
stos
lret
mov
cmpsb
idivl
orl
dec
repz
inc
ret
or
mull
sub
addr16
lds
sub
xor
test
mov
imul
dec
scas
ljmp
add
ret
insb
cmc
mov
test
loopne
sahf
mov
stos
cmp
movb
out
shlb
cmpsl
lea
ds
push
hlt
cmp
popf
fcoml
mov
and
xchg
mov
mov
fistpll
mul
and
jbe
jne
aas
or
add
scas
clc
in
or
cmpsb
mov
into
inc
popa
in
dec
and
inc
mov
ljmp
mov
int3
repnz
jo
jae
pop
push
leave
sbbb
outsb
xor
pop
inc
sbb
push
movsb
rolb
call
iret
in
dec
scas
loopne
push
mov
cs
bnd
filds
jo
pop
adc
icebp
subl
jmp
fs
cmp
xchg
and
mov
adc
call
dec
movsl
sbb
xor
add
cmp
pop
dec
push
lret
xlat
std
jae
mov
sbb
lods
into
dec
mov
ss
clc
or
arpl
xor
cmpsb
orl
xlat
push
sub
ficomps
adc
cmpsb
stos
inc
adc
push
fistpl
addr16
loope
ret
popa
push
scas
jno
dec
stos
data16
in
filds
aaa
add
mov
pop
cmp
daa
shlb
and
xchg
cmp
jle
stc
cmp
inc
mov
add
aad
test
mulb
adc
mov
push
jp
push
mov
cltd
or
insb
cmpsl
jle
jo
add
psubb
cld
sub
cs
gs
icebp
or
xadd
rcrb
lcall
rol
negl
adc
jo
xchg
push
cmpsl
sbb
cld
and
lcall
xchg
ret
or
inc
pop
jnp
add
jne
idivb
xchg
outsb
lock
or
mov
ljmp
pop
in
into
xor
dec
ret
jmp
adc
ret
or
jmp
cs
loopne
mov
aaa
hlt
in
mov
jne
push
idivb
inc
fwait
or
stos
pop
push
fstps
ret
mov
and
lcall
mov
icebp
ret
cld
or
nop
jbe
mov
out
cmp
mov
movsb
in
int
fwait
lods
test
test
lods
mov
shlb
fbld
sti
lret
push
or
arpl
jle
jecxz
sub
mov
aas
sub
ja
xchg
jb
jno
dec
scas
rclb
test
js
and
fs
mov
push
insl
mov
mov
stc
enter
jl
dec
loopne
sbb
mov
cmp
sub
xor
aad
scas
jo
bound
dec
xor
dec
xor
mov
jo
mov
sub
xor
mov
xchg
rclb
roll
loop
add
xchg
lahf
nop
mov
fnstcw
xchg
std
loope
lds
in
pop
test
pop
mov
out
xor
adc
mov
mov
cmc
mov
mov
xor
or
mov
imul
cmp
sbb
outsb
ret
push
pop
mov
pop
rcll
rcl
jmp
stos
outsl
xor
je
jmp
lret
fdivrs
mov
mov
gs
push
push
int3
ja
pop
addr16
insl
call
dec
adc
pop
sbb
mov
pop
out
sbb
out
scas
data16
or
lods
adc
cmp
pop
sbb
pop
call
dec
jnp
rcrl
pop
sbb
cmpsl
test
jb
in
sbb
pop
lods
mov
fwait
test
mov
push
lds
inc
sarb
orb
cmp
or
push
fsubl
ljmp
repz
push
add
sbb
stc
xchg
add
or
mov
sub
jl
jnp
pushf
adc
lret
pushf
test
test
ljmp
xchg
push
nop
lcall
imul
inc
push
push
mov
mov
notb
xor
jbe
leave
fidivrs
enter
add
jle
pop
sbb
and
mov
pop
dec
or
pop
mov
mov
dec
xor
dec
rcll
pop
mov
jmp
lock
push
cmp
jmp
mov
and
jbe
jne
mov
sbb
add
lret
fsubs
add
aaa
pop
in
scas
je
clc
xor
sbb
incl
ret
ss
orb
fwait
push
lds
jl
dec
scas
mov
arpl
lods
inc
sbb
in
int
and
lret
cmpsl
adc
out
lret
pop
pop
insl
mov
xor
or
in
arpl
ljmp
dec
icebp
inc
or
pop
mov
ja
mov
stc
stos
adc
inc
cmp
push
mov
out
adc
lahf
push
je
pop
pop
mov
jmp
xchg
push
scas
xchg
xor
adc
sbb
mov
jg
loop
push
cs
repnz
pop
jae
mov
test
dec
push
aad
xor
push
sub
or
out
lock
mov
xchg
push
xor
das
xchg
pushf
fwait
push
js
cld
and
inc
sbb
inc
loope
jae
sbb
je
xchg
push
jecxz
mov
cmp
jno
repnz
pop
and
add
xor
int3
in
fdivs
mov
and
mov
inc
bound
xor
dec
jmp
xchg
add
sbb
inc
ljmp
shl
inc
lret
dec
jnp
jno
xchg
fcoms
fadd
jnp
int
jp
sbb
adc
ljmp
inc
push
mov
sarl
movq
dec
xor
push
cmp
das
sub
xor
cmc
fwait
dec
int
jp
inc
mov
or
popl
push
sub
out
in
out
movsb
mov
sub
insl
pop
pop
mov
std
inc
out
in
rcr
insb
call
jl
ja
cmp
das
or
xchg
xor
aam
and
and
jne
xor
scas
mov
jl
add
xchg
inc
bound
cwtl
loope
xor
or
loop
das
filds
adc
ljmp
mov
xchg
shrb
cmp
mov
shrl
pop
add
call
add
sbb
sbb
add
mov
mov
fisttpl
jl
mull
movsl
inc
lods
jmp
jmp
jmp
xchg
push
xor
or
mov
or
int3
sbb
sbb
xor
daa
xchg
push
pop
addl
fdivp
pop
mov
or
mov
mov
lret
shrb
push
pushw
fnstsw
imull
in
mov
cmp
jae
js
or
loop
xchg
inc
sub
test
sub
leave
fnstcw
push
jl
dec
enter
add
push
mov
dec
iret
cmpsb
pop
repz
daa
pop
outsb
decb
mov
je
adc
adc
sub
fs
push
pusha
mov
fsubr
loop
daa
add
loop
inc
dec
icebp
add
sbb
jle
ret
inc
rcll
movsb
mov
push
in
mov
cmpsl
add
test
imul
cltd
and
sbb
xchg
cmp
out
dec
adc
sub
jne
jecxz
and
in
fs
sbb
insb
fs
sbb
adc
adc
fbstp
or
mov
mov
sub
dec
and
sub
int3
xchg
dec
add
jae
out
mov
das
in
daa
ja
jl
xchg
dec
mov
mov
inc
pop
sub
fldt
int3
stc
push
addr16
cwtl
mov
sub
xor
xchg
mov
mov
addr16
mov
dec
or
pop
xchg
addl
lods
push
mov
lods
loope
imul
cmp
aas
xchg
fdiv
xor
aad
xchg
outsl
pushf
imul
popf
and
mov
aam
push
out
xlat
xor
sbb
ss
lret
enter
in
add
mov
cli
ror
mov
or
dec
mov
mov
xor
jecxz
jne
sub
js
mov
lcall
sti
leave
sub
or
xchg
and
lea
xchg
mov
test
rcr
subl
push
cwtl
sub
sub
decb
cli
jne
jo
cmp
cmp
pop
fidivl
mov
adc
movsb
cwtl
jg
xlat
cmp
xlat
sub
add
out
in
sub
lea
xlat
pop
jnp
sbb
add
ret
jne
cmp
mov
or
jg
mov
mov
xor
ret
loop
dec
out
and
xchg
jecxz
pushf
push
test
sbb
jmp
push
negl
pop
daa
jns
ficompl
movsl
jecxz
aaa
jb
inc
sub
insl
push
test
rolb
xchg
sub
gs
out
lcall
dec
test
xlat
jecxz
and
lock
mov
or
ds
pushf
lret
dec
in
adc
mov
jno
mov
mov
outsl
movsb
sbb
in
xor
movsl
or
add
xor
mov
fnstenv
and
add
mov
push
scas
and
mov
mov
ret
mov
push
push
scas
fadd
push
jecxz
sub
out
popf
out
imul
xchg
sbb
fldenv
push
std
adc
sub
inc
mov
test
fidivrl
cmp
xchg
movsb
inc
scas
fldl2e
data16
sarl
adc
cs
pop
bound
aaa
xor
xchg
push
xchg
lret
cmp
fidivrl
sti
into
sub
test
int3
push
xor
pop
or
cli
xacquire
sbb
pop
ds
clc
push
pop
clc
sub
mov
lds
xor
adc
clc
cmp
add
push
jbe
mov
dec
divl
and
mov
shr
jae
xchg
ja
ljmp
xchg
adc
pop
dec
dec
in
push
pusha
popf
xchg
lock
add
ljmp
es
push
xchg
sub
into
stos
sub
insl
cltd
mov
sub
pop
and
out
mov
rep
jge
push
mov
or
enter
push
into
and
out
mov
in
js
loop
or
fldcw
sub
or
sub
je
out
rcrl
xor
leave
or
shll
push
shrb
mov
stos
or
push
add
scas
fcoms
fildl
fs
cwtl
popf
fimuls
cmpsl
aas
int3
mov
pop
jmp
shrl
and
ja
divb
jne
pop
mov
mov
xchg
pop
jns
mov
sahf
shrl
mov
add
inc
sbb
cld
add
popf
add
into
sar
mov
push
test
xor
inc
aad
std
mov
insb
inc
test
iret
fisubs
jecxz
pop
popf
cmp
lret
inc
addb
push
fistpl
int
divps
jnp
fs
cmpsb
loope
hlt
jecxz
dec
ja
mov
xor
pop
push
in
push
mov
cltd
sbb
jne
lahf
lock
inc
inc
pop
subl
jo
pushf
movsl
cmpsl
pop
scas
lock
xchg
cwtl
jbe
and
aas
mov
inc
movsb
shl
pushf
popa
and
nop
cmc
push
pop
sbb
out
xchg
mov
cmc
frstor
inc
lods
imul
sbb
ret
dec
rol
inc
mov
xchg
aad
inc
xor
pop
fmuls
dec
pop
rorl
push
ror
rorb
dec
data16
lahf
push
and
inc
pop
int
sahf
test
cmpsl
loopne
aaa
cmpsb
cld
cmp
xchg
mov
and
rclb
jl
ror
ds
addb
and
icebp
push
xchg
das
out
or
jecxz
sbb
mov
pop
loop,pt
mov
and
repz
fmull
mov
or
pop
loop
mov
aad
mov
test
inc
dec
pop
sub
fsubrs
dec
imul
popf
scas
xor
push
lods
mov
dec
mov
mov
loope
xlat
mov
dec
ds
sub
inc
dec
pop
out
lret
test
add
in
aam
frstor
push
fists
lcall
pop
mov
gs
pusha
add
sbb
cmpsl
sub
push
push
dec
or
pop
inc
pop
sub
mov
mov
sbb
shll
fildl
sub
mov
jmp
out
sbb
js
mov
mov
ljmp
add
sbb
insb
imul
stos
mov
arpl
fisttpll
lds
dec
cli
or
pop
cmp
fwait
xor
jb
and
jb
mov
mov
mov
movsl
scas
sbbl
gs
jne
cmp
icebp
addl
out
mov
stos
ret
push
hlt
cmp
mov
lods
mov
sub
test
scas
sub
subl
xor
and
mov
or
lock
fsts
cmp
or
xor
push
push
pusha
xchg
aaa
ds
xchg
sub
push
sahf
pop
enter
sub
and
and
adc
loopne
jnp
jecxz
xor
call
mov
int3
sti
sti
pushf
inc
dec
in
jno
jae
dec
fisubs
xchg
jbe
pop
ss
mov
push
mov
xor
movsb
call
adcb
push
lahf
sub
fcom
fdivrs
push
push
fsubrs
fcom
mov
jnp
push
adc
push
and
and
jge
mov
rcll
or
pop
and
push
sub
jg
adc
test
pushf
xchg
in
sub
pop
mov
inc
xor
leave
das
jns
mov
cmc
mov
nop
xor
pop
pop
das
xchg
mov
push
dec
jb
in
lea
les
clc
jle
loop
fimuls
lea
jbe
sbb
xor
shr
pop
sub
sub
push
pop
inc
cmp
inc
inc
and
sbb
pop
cmp
adc
xchg
pop
lods
in
xlat
je
jl
in
out
xor
inc
sbb
lret
jecxz
sbb
mov
push
cld
loope
xchg
divl
cmpsl
nop
in
dec
mov
push
or
sbb
dec
out
xchg
sahf
test
pop
iret
jl
add
sti
in
xchg
jae
mov
in
inc
fdivs
test
xchg
cmpl
mov
dec
adc
push
jo
push
cmpsl
jmp
popf
mov
mov
sbb
div
mov
inc
fwait
out
cmpsl
mov
mov
hlt
mov
add
sub
cwtl
shrb
pop
xchg
ja
movsl
pop
fdiv
out
jne
cmc
or
in
push
or
or
sbb
sbb
out
push
je
inc
mov
pop
stos
mov
lcall
cmp
xchg
sub
lahf
sbb
sub
xlat
and
adc
pop
inc
imul
push
incl
ss
sub
aas
xchg
repnz
xor
mov
lods
push
sub
mov
adc
xchg
mov
or
mov
mov
xor
aam
ror
loopne,pt
loop
adc
shll
xchg
mov
sarb
out
inc
jno
add
outsl
xchg
xor
lahf
inc
dec
lods
cmp
lahf
sahf
std
cmp
into
das
test
out
adc
xchg
jnp
movl
movsb
das
and
cmp
insl
fisttpll
lret
in
into
les
movsl
or
pop
dec
ret
enter
add
int
scas
jge
jg
dec
xor
sbb
insb
xchg
jecxz
imul
mov
dec
and
mov
es
fistpl
adc
jo
mov
jmp
jp
ret
add
lea
adc
das
popa
jl
mov
or
and
pop
daa
pop
fst
or
dec
or
mov
adcb
in
std
int
jle
das
repz
pop
sub
or
les
mov
ficomps
sbb
repz
repz
cmp
nop
cmc
imulb
mov
sub
mov
test
ds
leave
repz
sub
movsb
lcall
mov
andl
leave
pop
popa
clc
pop
mov
int3
cmp
sbb
arpl
std
jns
call
xchg
sarb
movhps
mov
add
and
loop
cmpsl
insb
cmp
dec
in
out
mov
sti
rep
std
pop
aaa
lods
das
and
sbb
or
xor
cmp
repz
or
push
sub
enter
fldenv
lcall
addb
mov
pop
xor
dec
aad
imul
or
icebp
lods
cmc
push
fwait
data16
stos
mov
jl
sbb
jns
dec
test
leave
inc
mov
sti
dec
out
orb
inc
ret
insb
lds
push
jle
xchg
xchg
insl
mulb
xchg
jg
or
out
mov
sbb
xor
or
add
pop
sbb
out
scas
inc
lods
add
adc
sub
pop
or
ret
jb
dec
outsb
adc
mov
cld
movsl
mov
insb
cltd
pop
scas
and
cmpb
cs
jg
cmp
mov
dec
sub
rolb
inc
push
pop
dec
sbb
adc
xlat
inc
cmp
fstps
push
es
xchg
or
adc
cltd
in
ja
repnz
jg
push
xor
xor
enter
xor
mov
repnz
push
movsb
sub
in
fdivs
testb
nop
jbe
insl
jnp
outsb
add
sbb
loopne
lods
inc
jb
mov
inc
mov
daa
mov
inc
dec
push
or
push
testl
jmp
add
sub
hlt
jno
dec
jl
enter
lods
fidivl
ret
sbb
dec
or
jno
shlb
fidivrl
pushf
ficoms
nop
mov
mov
faddl
lods
stc
mov
je
sub
push
jo
outsb
sub
dec
xor
call
cs
pop
or
divb
popa
fistpll
xchg
xor
xor
enter
dec
stc
mov
negb
and
xchg
sarb
inc
or
xchg
sbb
cmp
cmp
adc
xchg
or
ffreep
fmull
or
jp
push
inc
adcb
cwtl
inc
jbe
push
cwtl
dec
add
pusha
add
xlat
cmp
mov
or
add
loop
cmpl
cmp
gs
lcall
iret
data16
add
inc
mov
sub
imulb
pusha
leave
decl
repz
out
scas
sbb
sbb
dec
jne
pushf
sub
pop
lret
js
fdiv
icebp
icebp
fbld
fs
sbb
push
push
popa
mov
sub
or
pop
in
popf
das
test
fsubrs
cmpl
int
mov
cmp
enter
jle
fwait
mov
add
aad
pop
ret
insb
outsb
push
std
push
mov
push
mov
pop
jo
mov
push
xor
aas
lret
sbb
lock
jmp
cmpsb
hlt
and
test
ret
pop
and
rol
or
jnp
data16
sahf
push
lret
mov
jno
in
adc
mov
stc
adc
push
cmpsl
stos
xor
stos
pop
mov
cmp
fisubrl
or
lods
sahf
test
daa
push
push
mov
push
sbbb
lret
pop
sub
or
clc
repz
cmp
push
sti
lods
sbb
push
or
outsl
jl
sbb
jl
xorb
in
je
mov
xlat
pop
inc
adc
pushf
pop
scas
aam
bnd
pushf
cltd
in
jle
notb
xor
fnstcw
int
mov
xchg
lock
aad
and
aaa
or
dec
mov
dec
cmp
clc
or
and
push
and
jne
sti
jmp
mov
push
fmull
mov
adc
and
mov
stc
loope
sub
push
mov
jnp
lahf
and
or
dec
addb
nop
shlb
xor
cld
fcmovnu
push
test
push
push
push
stc
loopne
and
movsl
pusha
jnp
roll
cmp
xchg
in
push
cmpsl
mov
cmc
inc
test
cmp
sub
arpl
pop
xchg
std
push
mov
sbb
mov
pop
sub
xchg
sub
push
shrb
dec
addr16
rorl
mov
daa
jno
cmpsb
lcall
pop
add
je
cmc
std
dec
xor
mov
mov
lret
repz
clc
jb
lods
loop
int3
fwait
subb
push
fisttps
jmp
push
dec
sbb
cli
and
jecxz
nop
cltd
mov
test
sbb
pop
shlb
add
xchg
fiaddl
cwtl
in
imull
insb
adc
dec
addr16
adc
push
adc
gs
or
ja
jecxz
push
mov
push
sub
cmpsb
mov
fs
dec
and
shll
out
sbbl
dec
push
xchg
xchg
notb
or
adc
shlb
std
cwtl
lcall
gs
sbb
jmp
and
stos
rorb
push
pop
shrl
ljmp
inc
je
faddl
jne
data16
inc
mov
mov
or
pop
and
sbbl
xor
popf
cs
push
mov
stos
adc
push
daa
outsb
xor
sbb
cmc
scas
enter
jecxz
or
ficoms
xor
cmpsb
push
adc
clc
mov
icebp
sub
into
mov
fbstp
sbb
int3
arpl
adc
hlt
shlb
xor
lods
orb
jb
xchg
adc
push
test
imul
test
mov
or
and
cwtl
into
loope
test
dec
daa
cmp
cmpsl
fdivs
and
mov
lods
fcomps
dec
push
dec
jne
arpl
lret
dec
jne
push
pop
dec
or
outsb
or
xor
cmp
shr
push
int
scas
inc
jno
cld
mov
jbe
pop
xchg
scas
lods
movsb
jle
sbb
into
mov
ss
call
in
cmp
xchg
xchg
cwtl
cmp
pop
insl
or
pop
nop
adc
sub
cmp
push
pop
dec
push
cld
adcl
sti
in
pop
fdivrs
inc
or
jae
mov
leave
int
xchg
sahf
and
xchg
or
mov
test
stos
in
push
lahf
mov
add
or
stc
jmp
cld
jecxz
adc
cmpsb
pmulhw
and
call
movsb
ficomps
pcmpgtb
pop
dec
gs
pop
lock
data16
jmp
idiv
push
sub
popa
dec
cmovae
loope
stos
shll
daa
or
jmp
js
fs
in
mov
mov
pop
cmp
call
mov
inc
xchg
repz
mov
out
or
ja
xor
mov
jns
ret
pop
shlb
mov
xor
leave
jg
scas
mov
inc
push
xchg
sbb
xchg
jge
cmp
adc
es
pop
sub
popf
xchg
sbb
cltd
pop
or
rcrl
inc
xchg
call
and
sub
dec
sub
inc
jl
mov
ss
pop
popa
daa
xor
std
lds
mov
dec
push
pushf
out
xsha1
cmpsb
dec
mov
mov
pop
push
cwtl
outsl
mov
stc
es
iret
imul
sbb
outsl
mov
jno
fldenv
inc
out
pop
fs
push
dec
ja
push
outsb
test
stc
popf
inc
fwait
mov
cs
lahf
and
sub
pop
outsl
sbb
ljmp
push
jae
mov
loopne
scas
sti
mov
je
push
cmc
mov
or
cwtl
out
add
pop
push
dec
sbb
ror
repnz
adc
inc
pop
ljmp
lret
sbb
jmp
addb
movsb
mov
nop
lret
or
aad
scas
xor
bnd
mov
je
xor
inc
add
mov
sub
sbb
or
cmp
xor
movsl
push
dec
repnz
push
in
es
enter
mov
pop
bound
rol
mov
movsl
and
test
enter
mov
ret
js
mov
out
inc
inc
in
sub
sbb
sbb
sahf
mov
das
push
loope
cmc
cltd
imul
or
iret
lods
xchg
mov
xor
xchg
pop
sub
test
sbb
push
flds
sahf
aad
iret
mov
mov
xrelease
stc
imul
sbb
sbb
push
push
stc
xor
xchg
or
fnstcw
push
jo
xor
into
dec
mov
rol
cmpsl
push
sbb
loop
adc
cmp
frstpm(287
cmpsb
outsb
and
xor
xchg
mov
rorb
ficomps
mov
jnp
push
xor
loop
pop
mov
cmp
lcall
inc
jle
iret
fwait
cmp
xchg
mov
xlat
lcall
fmuls
mov
inc
dec
dec
divl
add
rcrl
iret
cs
add
add
jns
int
mov
dec
std
pop
repz
jmp
jns
loope
pop
mov
or
shl
sbb
call
out
pop
ficomps
ds
fwait
mov
inc
sub
sahf
scas
or
pop
js
out
xor
sbb
mov
aaa
xchg
xor
popl
xchg
xchg
cmpsb
jp
mov
push
mov
xor
jl
mov
call
pop
or
cmp
push
xchg
add
imul
dec
mov
in
iret
dec
inc
xchg
pop
jl
popf
push
nop
and
daa
and
lods
movsl
addl
stos
cmp
jae
aam
push
hlt
pop
stos
adc
pop
sbb
xchg
sub
mov
sub
scas
or
jl
and
imul
ficompl
cmp
je
int
or
mov
bound
xlat
popa
adc
xor
sahf
and
xchg
sbb
inc
push
cmp
xor
in
sti
pop
out
imul
dec
sahf
mov
bound
xchg
stc
push
adc
xor
push
out
mov
icebp
into
sbb
aaa
lcall
dec
fcomi
jp
xor
cmp
adc
clc
lcall
push
add
cmp
fld
inc
lock
pop
or
sbb
xor
mov
gs
cmpsb
mov
in
fidivl
mov
int3
ja
inc
push
dec
arpl
xor
mov
and
dec
and
sti
repnz
mov
mov
rorb
inc
sub
out
xor
pop
sbbb
lods
sub
lods
mov
mov
mov
fxam
ss
and
xchg
push
bound
cld
pop
enter
fstp
in
stos
test
sbb
mov
sbbb
mov
outsl
cmp
in
outsb
add
je
mov
pop
cltd
or
call
sahf
jecxz
push
cmp
mov
xchg
cwtl
lcall
xchg
push
scas
mov
jnp
xchg
je
sub
in
cld
in
add
adc
or
lods
out
out
sbb
and
jmp
std
addl
notl
add
outsb
mov
stos
out
int3
push
mov
fistpl
test
jp
lret
fildl
stos
out
adc
add
and
cwtl
into
fisubl
sbb
sub
or
jmp
into
push
fisubs
inc
or
mov
push
sub
jmp
pop
pop
push
paddd
lods
dec
in
fidivrl
push
cmpsb
popa
adc
iret
push
and
xchg
sub
icebp
sahf
push
add
dec
sub
xlat
ss
movsb
or
xlat
call
xor
mov
and
into
inc
mov
or
pop
jns
jnp
cs
iret
or
and
or
ret
ret
in
gs
movsb
pop
in
dec
das
int3
cmp
or
or
push
mov
mov
or
xor
mov
testl
adc
jecxz
fnstenv
and
lahf
shl
mov
add
add
push
dec
ja
or
xchg
inc
sub
das
jp
ret
push
push
outsl
test
xorb
pop
or
add
sub
aaa
pop
xchg
or
xor
les
sub
shufps
fnsave
aaa
dec
push
sbb
fs
mov
orl
jbe
fists
push
aad
std
test
scas
out
xchg
sbb
xchg
shrb
fwait
or
and
jae
out
movsl
pop
xchg
bound
repnz
outsl
je
sub
jae
cli
xor
xorl
mov
cmp
shl
sub
sbb
pop
cwtl
cmpb
inc
inc
pop
push
jo
aad
out
bound
mov
add
sbb
cmp
ds
push
addr16
and
scas
jne
leave
cmp
insl
lock
clc
xchg
cmc
and
aad
loope
sahf
jb
mov
mov
mov
dec
mov
mov
movsl
lods
pop
ficomps
icebp
ret
sti
jo
in
mov
pop
sbb
mov
or
xor
fbstp
lcall
addr16
inc
aaa
cmpb
out
js
test
dec
push
mov
jmp
rcrb
sbb
hlt
icebp
into
fsubl
sbb
cs
gs
sub
push
out
adc
adc
mov
int3
push
sahf
or
sti
test
push
fstp
mov
insl
cltd
pop
sbb
push
and
xchg
mov
pop
fs
out
int3
into
andb
pop
or
or
into
js
out
rcll
sub
push
or
sbb
fsubr
cltd
pop
adc
out
clc
push
enter
dec
fcmovnu
pop
in
adc
mov
adc
or
iret
push
popa
lods
adc
or
xchg
movsl
test
xor
xor
ds
xchg
push
pop
ret
fs
imul
xchg
push
or
add
arpl
or
push
dec
and
pusha
insl
xchg
sbb
sti
cmpb
lods
or
out
andb
adc
and
cmp
fdivs
add
ja
and
xor
insb
jle
pusha
movsb
sbb
mov
movsb
insl
jl
scas
push
clc
aaa
dec
lcall
out
and
pop
fcmovnb
cmpsb
mov
rorl
mov
or
mov
das
int
pusha
push
daa
hlt
add
jle
ror
xor
les
xor
xchg
sub
ror
xchg
int
orb
pop
jge
jb
shlb
imul
and
fisubs
sbb
mov
jecxz
les
fcoml
and
not
sub
rcll
jmp
mov
fiadds
dec
ljmp
add
xor
std
mov
test
push
dec
jo
cld
icebp
inc
aaa
fcom
dec
or
mov
xchg
mov
adc
outsl
mov
mov
clc
mov
loope
inc
push
sub
pop
test
cwtl
xchg
frstor
push
lea
sbb
mov
inc
icebp
xor
dec
sub
test
stc
push
ljmp
lods
fwait
jge
inc
xlat
arpl
arpl
jp
and
in
fs
sub
dec
adc
in
dec
pop
cltd
sti
data16
ss
or
or
int3
mov
xor
mov
fs
mov
into
push
imul
inc
mov
mov
fdivr
ret
shll
push
sub
push
leave
pop
cmpsl
cs
mov
ds
es
xchg
xor
in
andl
std
fsubl
and
sbb
iret
inc
test
and
aas
push
inc
notb
cltd
and
xor
mov
adc
push
push
mov
mov
sub
dec
movsb
aas
jl
fistl
adc
dec
repz
lcall
jns
sti
and
aam
xchg
loopne
sbb
jecxz
ret
pushf
or
cwtl
nop
pop
lcall
rcll
inc
inc
mov
int3
fsubs
and
fadds
ljmp
mov
int3
sub
lret
ljmp
jb
out
ljmp
add
sub
pop
mov
or
jle
shr
sbb
inc
mov
lcall
aas
cmpsb
sub
cltd
and
outsb
out
dec
adc
lret
in
mov
cmpsb
dec
divl
jmp
es
out
test
or
andb
mov
pushf
jge
daa
push
xor
push
sbb
nop
test
cmpl
sbb
leave
lock
popa
rcll
mov
enter
inc
mov
pusha
mov
mov
ficomps
cltd
xchg
dec
xchg
imul
inc
adcb
lea
inc
les
lahf
push
pop
add
movsl
lahf
pop
mov
sbb
iret
fdivrp
cmpsb
pushf
loope
shll
or
cwtl
mov
dec
jge
add
aaa
stc
lret
sbb
xor
xchg
push
cmp
cltd
out
cmpl
aaa
inc
shrl
lods
out
arpl
js
insl
cmp
lret
cli
jmp
ljmp
pop
cli
js
pop
push
push
ds
lock
stc
jne
push
mov
add
div
clc
pop
push
imul
outsb
roll
adc
dec
xchg
sub
sti
rcrb
xor
or
sbbb
sbb
xor
and
sbb
in
sub
popf
pop
mov
mov
rol
dec
lahf
cld
dec
pop
jecxz
andl
cwtl
fbld
cmp
xlat
jns
or
push
fists
imul
into
fstpt
test
int
xor
mov
mov
lea
sub
or
jbe
into
jg
popf
cltd
mov
mov
and
cmp
das
push
shlb
pop
cmp
pop
xor
test
fistpl
fldl
ljmp
mov
mov
jno
cmp
lds
sbb
test
inc
xor
and
jge
test
adc
je
adc
fcmovnu
leave
and
mov
call
mov
shll
xor
and
mov
gs
or
test
push
xor
push
sub
fnsave
gs
in
pop
lods
orl
mov
xchg
jae
jne
cmpsl
dec
stos
xor
lret
jl
mov
pop
lods
jp
pop
iret
and
cs
addr16
out
add
leave
and
push
sub
sub
push
cmp
and
shl
divl
push
sbb
in
out
sahf
in
push
mov
push
in
in
jle
imul
push
jmp
lods
pop
xchg
mov
fwait
dec
pop
mov
inc
jo
and
sbb
and
cmp
roll
ret
push
sub
sub
mov
adc
jge
or
pop
rclb
data16
es
shl
dec
ds
pop
mov
push
lea
into
iret
push
stos
decl
mov
scas
mov
jae
repnz
xchg
fldcw
inc
int3
jae
pop
cli
mov
in
cmpb
aas
mov
adc
icebp
inc
push
adc
push
dec
loop
or
repz
roll
inc
decl
push
cbtw
shl
nop
jge
mov
sarb
les
mov
and
stos
pop
mov
push
fdivrs
pop
gs
imul
icebp
ret
dec
in
je
xor
push
xchg
in
sarb
mov
jle
add
sbb
mov
mov
pop
mov
int3
in
in
add
cs
fcoml
jne
jae
pusha
dec
pushf
adc
add
push
cmp
adc
stos
sub
cwtl
pop
and
dec
pop
shll
push
stos
xchg
insb
sub
std
out
push
adc
daa
cmp
jle
adc
mov
push
loopne
fnsave
pop
jns
sub
pushf
daa
dec
fsubs
and
cmp
testl
push
lock
mov
push
dec
xor
or
fsts
gs
repnz
jb
jb
scas
sub
test
adc
rorb
adc
ret
mov
xchg
dec
aam
dec
and
sti
lret
fildl
fcom
jbe
loop
push
sub
and
in
sbb
mov
mov
mov
add
cmp
and
mov
push
or
aaa
pop
adc
fwait
xchg
mov
sbb
mov
jo
cmp
pop
test
mov
test
mov
mov
inc
cmp
add
mov
in
dec
and
lcall
jnp
jge
push
sbb
jns
pop
fadd
ret
fdivs
and
outsb
adc
adc
inc
adc
jcxz
test
push
ret
xchg
sti
adc
std
aas
daa
loopne
xor
scas
rcll
sbb
ret
sub
pop
scas
dec
or
in
push
das
aad
and
andl
leave
pop
push
jbe
push
add
rolb
in
popa
mov
pop
out
or
cs
dec
sub
pop
outsl
pop
dec
cwtl
pop
fwait
push
lock
mov
andl
mov
add
cmp
icebp
in
push
jae
ret
cmpsb
inc
jns
imul
jnp
cmp
lahf
ss
icebp
negl
jp
jno
pop
insl
dec
js
or
fistl
lods
fadds
lcall
fcmovbe
fadd
inc
jle
xorb
jmp
pop
mov
or
js
cld
sub
je
jne
inc
push
inc
outsl
gs
in
add
jle
sbb
aam
xlat
in
je
push
cld
std
das
insb
loopne
push
pop
push
adc
fildll
mov
jp
mov
dec
lods
lea
or
loop
jo
pop
sub
fmull
lcall
or
shrb
cmc
call
loopne
dec
or
xchg
test
jnp
addr16
scas
or
dec
mov
inc
cmp
sub
je
jmp
pop
sarl
pushf
jmp
dec
addr16
pop
dec
pop
xor
push
outsb
rcl
test
in
sub
jg
pusha
icebp
aaa
aas
mov
xor
js
pop
hlt
inc
ret
jns
xor
sbb
fs
mov
mov
push
adc
rclb
jo
addr16
fisttpl
mov
outsl
mov
xor
movsb
mov
mov
jo
out
pop
es
pusha
jle
push
jp
ja
ss
testl
mov
mov
jb
jo
mov
cltd
lahf
mov
inc
pop
mov
hlt
xchg
idivl
loop
pop
daa
out
cmp
add
bound
cmpsb
jl
push
les
repnz
cmc
mov
or
mov
lods
mov
insl
ja
mov
lcall
pop
fcomps
loope
jmp
gs
inc
loope
ss
sbb
icebp
and
les
push
or
cmpsb
mov
xchg
cmp
mov
jo
pop
push
rol
idivb
jbe
xlat
add
xlat
sub
mov
popf
es
adc
loopne
stc
fiadds
mov
mov
push
clc
add
jae
mov
pop
sbb
test
out
push
out
clc
orb
mov
test
push
xchg
xchg
lret
fstps
mov
cmp
xchg
xor
idivb
aad
inc
daa
cltd
dec
pop
fisttpl
fnsave
outsb
xchg
mov
xchg
mov
imul
in
cmp
fldt
sub
fs
adc
sub
mov
jae
adc
divl
add
xchg
ret
hlt
cmp
xchg
cwtl
inc
test
cmc
and
out
or
add
dec
fsubs
bound
les
icebp
mov
xor
dec
imul
xlat
add
mov
add
data16
pop
jg
mov
jge
inc
xor
stc
push
out
icebp
pop
or
stos
stc
inc
shr
testb
xchg
jb
and
push
ror
pop
aam
and
mov
lahf
mov
jge
add
outsb
cmc
ret
imul
xchg
pop
adc
xor
jg
adc
notl
pop
lods
imul
inc
stc
pop
inc
lahf
cmp
mov
pop
fbld
das
js
push
fiadds
cmpsl
mov
movsb
sbb
mov
movsl
xchg
cwtl
pushf
jno
and
xchg
dec
outsl
ret
inc
dec
mov
std
mov
in
push
sub
out
out
idivb
cli
mov
mov
sbb
stc
pop
inc
inc
push
sbb
das
mov
or
inc
aaa
imul
dec
leave
out
shrb
xor
inc
cs
addb
xor
les
inc
push
iret
adc
ret
xchg
or
jecxz
aas
imul
mov
jno
xchg
cmp
loopne
mov
lret
adc
incl
mull
pop
add
fisubrs
pop
jl
push
xchg
sbb
and
adc
add
loope
fbld
loope
mov
xchg
lea
int3
jle
outsl
and
pop
add
lock
imul
mov
insl
adc
scas
mov
pusha
andl
adc
cli
les
inc
mov
out
out
in
cltd
xchg
and
cltd
mov
es
mov
cwtl
fsubr
mov
cmpsb
push
pop
sub
insb
ljmp
ret
popa
std
inc
gs
mov
cmp
push
clc
jbe
pop
inc
cmc
div
mov
xor
stc
rorl
rcrb
push
inc
cmp
insl
push
dec
and
pusha
in
jle
mov
jg
ljmp
fnsave
loop
and
mov
and
adc
or
into
in
shrb
push
dec
aad
sahf
mov
mov
cmpsl
call
cmc
mov
xor
sub
fbstp
ret
sahf
orb
testb
or
or
add
int
insl
jle
mov
or
jg
bound
lea
xchg
mulb
in
inc
adc
cld
in
ljmp
push
or
movb
inc
arpl
sbb
xor
sbb
incb
data16
dec
xorl
scas
mov
cli
push
test
xor
add
pop
inc
stos
lret
cmp
rclb
stc
divb
insb
xor
cmp
adc
test
add
xor
mov
mov
jmp
adc
aas
mov
out
sub
lret
sbb
pop
xor
sarb
push
push
jmp
dec
lret
mov
xor
loopne
jle
push
scas
mov
lods
popf
mov
pop
aaa
sbb
inc
iret
xchg
push
jle
mov
stos
push
ds
lea
add
dec
loope
jecxz
mov
adc
int
add
fldenv
and
fs
and
pop
aas
fwait
mov
cwtl
and
jp
lcall
xorb
sub
adc
dec
sbb
loopne
insb
mov
arpl
inc
cld
test
cmp
add
lods
aas
jne
pusha
divl
stc
rorb
pop
shlb
pop
xor
add
inc
ret
dec
mov
push
push
cmp
jmp
sbb
dec
imul
loopne
enter
mov
mov
dec
xchg
xchg
loopne
ds
mov
jp
push
orl
jo
lret
jmp
imul
push
xor
cmp
sub
lds
and
mull
inc
cmc
ret
mov
cmpsb
fstps
sub
and
sub
push
cmp
ljmp
out
fiadds
mov
cmc
cmc
loopne
push
or
push
aaa
pushf
or
ss
in
and
jnp
mov
mov
xchg
sti
aas
push
fnsave
jle
mov
clc
jle
mov
push
addr16
pop
mov
mov
fisubs
sub
test
sarb
fistps
jmp
ds
out
outsb
fsts
setle
pop
mov
je
jl
mov
lcall
inc
pop
cltd
dec
inc
dec
mov
jno
xchg
xchg
mov
or
pop
mov
gs
lock
mov
sarl
js
hlt
es
cmp
or
dec
sub
pop
inc
enter
rclb
mov
jns
jg
mov
pop
arpl
xchg
push
xor
xor
pop
mov
sbb
mov
outsl
fcomps
inc
test
cli
push
in
hlt
jne
into
sub
mov
xchg
sarb
xchg
sub
scas
xlat
data16
pop
or
fdivrp
mov
pop
mov
cltd
cmp
adc
mov
lcall
mov
stc
mov
mov
adc
dec
mov
ret
fists
mov
adc
lahf
inc
sbb
xor
lock
jb
xchg
cmp
sub
mov
hlt
pop
adc
xchg
aad
pop
aad
xchg
fnstcw
mov
mov
push
bound
sbb
cld
int
inc
ljmp
div
mov
aam
out
or
andb
clc
int
xor
loopne
and
mov
cwtl
mov
sbb
mov
push
lods
aad
push
daa
icebp
xchg
iret
jae
sub
xlat
cld
rol
out
rcrb
xor
leave
cs
add
mov
mov
mov
scas
dec
mov
jmp
mov
outsb
bswap
mov
fcoml
pusha
sbb
or
ret
imul
lods
loopne
movsb
pop
leave
jecxz
pop
cltd
nop
outsb
jne
jo
in
out
fisttps
jo
or
push
and
shr
inc
aas
notl
push
push
push
cmp
cmp
repz
cli
mov
mov
in
mov
aaa
bound
daa
ds
stos
popf
stos
jb
loope
push
mov
jb
mov
mov
pop
inc
add
lea
xchg
jp
out
xchg
sti
add
mov
sub
int
jne
mov
and
jno
mov
sub
inc
pop
lret
insb
push
mov
xchg
fcmovnb
sarl
loopne
sub
test
adc
dec
xchg
mov
jne
push
insb
cli
pushf
push
sub
inc
push
cs
dec
cmp
or
clc
subl
faddp
lret
aas
push
outsb
je
popf
ds
pop
lcall
sbb
mov
loop
sti
ljmp
daa
cmp
jo
stc
ljmp
ljmp
fucomp
in
mov
inc
cltd
adc
movsl
xor
pop
insl
and
in
test
clc
and
mov
push
cltd
mov
cs
mov
cmp
ret
loope
xchg
mov
mov
dec
dec
mov
cmc
mov
nop
stos
scas
out
inc
test
dec
push
sbb
out
pop
pop
jne
pop
fstps
jns
pop
mov
push
push
add
push
push
sub
testb
cwtl
mov
push
enter
movsb
imul
scas
dec
push
mov
sub
stos
mov
add
add
pop
mov
mov
fldenv
mov
into
jge
xchg
push
sahf
repnz
cmc
mov
xor
xchg
fldenv
fs
push
insl
lret
loope
or
pop
adc
sub
push
pop
aaa
sahf
jae
xor
sbb
add
jecxz
iret
rclb
inc
sub
lds
and
cmpsb
ss
js
mov
cmp
arpl
xchg
push
popa
push
ljmp
inc
orb
into
sti
add
mov
add
cli
push
jle
lret
xchg
les
je
mov
outsb
loope
adc
mov
arpl
ret
ret
out
lret
push
adc
xor
mov
or
dec
pop
clc
idivb
insl
sub
mov
add
loope
imul
pusha
push
dec
sti
push
adc
fdiv
push
or
sub
jb
test
daa
push
imul
sarb
lods
cmp
sbb
out
push
mov
jp
sub
pop
push
dec
in
xchg
mov
ljmp
lret
sbb
scas
mov
xor
mov
call
cli
cld
dec
andl
arpl
adc
mov
sbb
xor
jae
loop
ret
fwait
test
lea
sub
sbb
dec
mov
ret
in
mov
gs
les
sbb
outsb
cltd
push
cmpsl
mov
ret
mov
inc
dec
sub
aaa
daa
inc
mov
xchg
stos
sub
jbe
lock
adc
fcmovne
popf
pop
punpcklbw
into
pop
cmpsb
pop
lea
out
aam
call
lds
std
xchg
sahf
push
push
add
mov
dec
adc
aaa
sub
loopne
mov
push
fs
pop
rorl
bound
push
inc
ss
xchg
and
inc
test
jmp
jae
out
mov
imull
mov
in
test
sub
fmuls
ja
movq
mov
mov
fnstsw
sub
push
jae
mov
sub
xchg
scas
mov
pushl
ret
mov
out
ss
repnz
xor
ret
sub
jmp
and
sbb
fmull
js
mul
sbb
out
jno
push
sub
mov
stos
insl
xchg
repnz
stos
inc
dec
adc
out
push
push
cmp
mov
jo
loopne
push
fs
rcrl
in
sub
loope
cld
aaa
stc
stc
inc
cmp
nop
jle
fmulp
in
cmp
or
mov
cmp
rcrb
inc
cmp
xor
loop
jo
sbb
xor
call
mov
fldl
mov
cmpsb
sbb
cmp
out
in
push
mov
or
inc
mov
xor
xchg
push
arpl
xor
gs
dec
imul
lret
sbb
xchg
sbb
insl
fsubrl
into
mov
leave
stos
imul
aaa
jecxz
xchg
fcompl
shlb
cmpsb
les
xchg
pop
jne
popf
lahf
out
cmp
mov
fimull
inc
dec
stc
adcb
and
lcall
push
push
jbe
push
sub
dec
mov
loope
add
pusha
loop
pop
xor
cmpsb
xor
fwait
cmpsl
fstpl
ljmp
cwtl
in
jp
lahf
adc
data16
data16
cmc
or
and
es
ja
xchg
cmp
dec
mov
cmpl
lock
adc
mov
clc
or
out
dec
lahf
push
imul
pusha
inc
in
cs
adc
xor
pop
jle
dec
push
adc
xchg
lock
pusha
insl
stos
dec
divl
inc
jnp
imul
or
arpl
pushf
fcoml
aad
fisubrs
cmp
lcall
xchg
lahf
push
fimuls
dec
inc
icebp
and
cwtl
xlat
aad
jne
out
je
xchg
outsl
movsb
xor
mov
jbe
mov
fnstcw
mov
jo
jl
pop
mov
outsb
fucomip
or
inc
lcall
popf
insl
fidivrl
stos
pop
push
cltd
insb
ret
sbb
cli
mov
outsb
sbb
mov
repnz
adc
sub
rclb
and
bswap
push
int
into
sbb
push
out
testb
sub
inc
lods
pop
push
movsl
pop
pushl
stc
adc
sbb
mov
pushf
cmp
dec
cmp
clc
mov
jns
lea
pop
cmp
loopne
mov
clc
cltd
scas
sbb
jnp
cmpsb
popf
pop
cwtl
lods
mov
xor
inc
add
dec
cmp
cmp
xor
xchg
int
cmp
xchg
mov
daa
inc
test
sbb
fcomps
dec
adc
cwtl
mov
pop
cmc
repz
mov
push
scas
lret
sub
sbb
popa
icebp
push
xchg
inc
inc
dec
cmc
outsl
in
add
nop
and
fidivs
push
filds
aad
mov
and
pop
and
push
leave
xchg
xchg
inc
fs
pop
daa
rol
pop
imulb
sti
add
popf
data16
loop
loopne
or
jbe
mov
out
xchg
ret
stos
and
xorl
out
dec
mov
mov
mov
mov
mov
dec
jmp
scas
ds
out
shll
scas
mov
xorb
rorl
fildll
mov
mov
js
loop
les
aad
lods
add
stos
mov
sub
aaa
jns
and
mov
add
jb
adc
inc
or
sbb
adc
pop
xchg
add
mov
mov
imulb
mov
clc
push
jbe
fidivs
dec
std
daa
pop
ret
test
xor
mov
gs
or
popa
dec
in
jnp
jns
jbe
fistl
and
sbb
jmp
push
push
inc
scas
test
cli
sub
rcr
xchg
add
pop
fucomp
cmpsb
gs
jge
xchg
sti
mov
push
mov
ret
cld
sub
jge
dec
mov
lret
cli
add
lret
fadds
hlt
mov
popa
add
pop
mov
push
cmp
push
lds
in
and
lods
cmc
cmpsl
and
shrb
mov
movsb
xchg
cmp
dec
shl
jecxz
mov
and
add
lahf
test
and
push
cmp
sbb
into
jle
fcomps
xor
and
nop
daa
lret
jp
hlt
jmp
pushf
push
cmpsb
notl
lret
out
or
push
mov
shrl
inc
jmp
sub
fxam
in
outsb
idivb
mov
test
in
fimull
jp
push
roll
add
scas
outsb
out
not
pop
adcb
cmp
enter
gs
or
mov
push
adc
imul
ljmp
mov
lret
sbb
pop
inc
mov
mov
mov
adc
mov
shrb
pop
adc
mov
cmpsl
repz
pop
pop
inc
cmp
xchg
pusha
adc
aad
leave
mov
fstps
dec
jge
dec
in
pop
repnz
pop
cmp
xchg
cli
ljmp
pusha
imul
inc
mov
lret
lret
mov
push
mov
stc
out
xchg
lock
sbb
repz
sbb
sub
push
jge
mov
and
dec
adc
dec
jmp
divl
fistpl
jne
cltd
pop
push
loope
das
mov
pop
ljmp
xor
aas
push
jbe
sub
adc
mov
add
in
mov
sbb
xor
sub
adc
test
xchg
nop
shrl
xorb
lock
dec
frstor
adc
cmpsb
fcom
rep
xor
cwtl
inc
and
or
mov
ret
pop
push
int
mov
pop
sbb
mov
inc
roll
loope
cmp
std
mov
inc
push
outsl
in
loope
mov
leave
push
cs
ffreep
or
ret
or
bound
fdivrs
fwait
sti
xor
call
cs
sbb
mov
push
mov
xchg
loop
jb
arpl
inc
enter
outsl
push
in
dec
mov
insb
adc
pop
in
insl
pop
loop
mov
popf
cli
ds
mov
adc
loope
out
inc
in
xor
pop
std
xor
push
or
int3
cmpl
lret
cmp
aas
rcll
xor
repnz
imul
arpl
xor
inc
jmp
mov
icebp
inc
dec
leave
lea
les
imul
adc
push
mov
dec
lds
into
pop
movsb
pop
jmp
sbb
add
enter
and
xchg
mov
mov
and
xorl
outsb
test
or
xor
or
out
adc
mov
inc
mov
dec
xchg
jp
mov
inc
or
imul
push
in
sarb
push
or
inc
mov
arpl
xchg
mov
out
push
push
adc
push
cmp
adc
sub
add
fbld
xchg
push
popf
inc
or
mov
fs
sub
push
xorl
and
xor
xor
out
nop
mov
lods
aad
pusha
lret
add
subb
jne
jl
divl
lret
insb
and
cli
push
push
add
lea
jmp
pop
sub
in
xorb
dec
lret
add
stos
sub
pop
cld
mov
dec
fdivr
out
inc
shr
in
dec
pusha
int3
movsl
add
cmp
or
mov
sub
push
dec
mov
pusha
lods
ljmp
test
sub
dec
or
andb
mov
sbb
add
sahf
cmp
aaa
cmp
jnp
fbld
movsl
pop
out
test
lcall
push
xchg
sub
add
notl
test
xchg
aaa
push
adc
xchg
fcomps
pusha
jge
jo
mov
mov
xor
stos
mov
mov
cmp
mov
insb
xchg
push
aad
or
pop
sahf
subl
xchg
sub
inc
pop
cld
lds
push
and
icebp
mov
shrb
rcrb
add
cs
mov
xchg
jo
scas
ljmp
fndisi(8087
sub
ds
xor
pop
test
das
push
or
mov
and
scas
mov
dec
mov
and
fs
push
mov
decb
mov
ja
mov
mov
add
test
sti
icebp
cmc
push
push
sub
xchg
dec
popa
inc
jae
pop
fldenv
arpl
push
ss
adc
test
fstpt
mov
loope
rclb
bound
in
fsubl
cmp
movsb
subb
addb
out
push
lahf
scas
xor
outsl
in
or
xor
inc
in
test
jp
loope
int
nop
test
shrl
xchg
xchg
push
xchg
arpl
cmp
cmp
sbb
daa
sub
das
mov
jecxz
loop
inc
mov
xchg
repz
adc
and
push
mov
xor
das
adc
cmp
lods
mov
cmp
movsl
jmp
xor
pop
out
inc
cmpsb
or
jb
jo
sahf
pop
insb
add
mov
out
mov
dec
ja
lcall
fwait
sub
dec
cli
push
mov
mov
popa
adc
xchg
sub
aaa
xchg
dec
subb
push
mov
jno
xor
jno
fwait
dec
ja
lahf
xchg
cmp
cmpsl
pushf
jns
cmpsl
jns
sub
inc
xorb
adc
sarb
push
push
imul
pop
mov
test
adc
dec
call
mov
and
mov
add
inc
jle
scas
inc
jns
mov
cmc
mov
pop
xchg
xchg
push
xor
pop
xchg
sbb
popf
jae
mov
sub
lahf
lahf
dec
mov
add
xchg
aas
scas
int3
imul
leave
jge
mov
push
movsb
and
test
adc
and
dec
dec
scas
stos
lret
and
and
shll
icebp
push
sub
mov
iret
in
popa
mov
or
std
mull
dec
xchg
lret
lea
gs
cmp
push
pop
outsb
sahf
mov
inc
loop
mov
hlt
dec
lea
ss
inc
out
jge
lahf
sbb
js
cs
dec
popa
push
cld
leave
popa
out
mov
xchg
out
or
xchg
imul
mov
insl
test
sbb
mov
int
push
rolb
sub
mov
and
jb
dec
cmc
xchg
shll
shll
mov
adc
fdivrl
push
arpl
cmp
push
add
idivb
or
into
in
inc
loopne
lods
lea
out
icebp
mov
cwtl
in
mov
jae
call
xchg
jp
or
mov
mov
sahf
fcmovne
mov
mov
xor
loope
cli
cld
shlb
push
pusha
popf
ss
subb
aas
mov
lcall
arpl
or
mov
or
out
push
scas
in
outsb
jo
sbb
outsb
movsb
ss
pop
lret
push
inc
lret
push
adc
je
or
ret
ja
ret
jbe
cmpsl
mov
int
scas
cmp
cmc
es
pop
roll
mov
jae
xchg
push
inc
jae
dec
mov
push
ljmp
in
fidivs
leave
jmp
psrlq
test
push
adc
jecxz
pop
aam
fs
dec
movsl
lret
scas
or
lret
loopne
cmp
push
and
dec
cmp
mov
test
xor
nop
mov
xor
pop
test
sbb
push
popf
jg
add
sti
mov
addr16
imul
test
xchg
inc
cmp
xchg
daa
inc
call
cmp
sbb
push
movsl
scas
cmp
andl
xchg
sub
dec
inc
cmp
jp
xchg
test
aam
leave
loop
outsb
jp
push
mov
cmpl
ret
cmpsb
mov
fwait
xor
mov
mov
add
imul
imul
jmp
xchg
sbb
push
jae
pop
mov
leave
dec
mov
pop
fcompl
dec
add
icebp
movsb
mov
test
es
lret
outsb
inc
inc
cltd
loop
sub
loope
dec
negb
movsb
sbb
mov
enter
cmpsb
lcall
xor
push
mov
dec
loopne
lcall
sbb
or
icebp
dec
les
dec
cli
dec
cmpsl
mov
aaa
je
pop
inc
cmpsl
mov
push
push
push
out
adc
arpl
xor
loopne
or
ds
cmpsb
lret
ret
and
sahf
jmp
push
call
push
dec
push
loope
mov
inc
cmp
mov
sbb
cltd
xchg
dec
into
lods
test
jecxz
xorb
push
pop
test
outsb
push
xor
movsb
pop
xchg
dec
mulb
or
pop
loope
lcall
sub
inc
pop
fstpt
insb
push
out
cmp
push
mov
sbb
lret
rolb
leave
movl
push
sub
push
mov
cs
ret
add
int
cmp
lods
inc
xor
sbb
jl
sub
movsb
pop
dec
and
mov
std
xchg
or
adc
push
jae
mov
jbe
mov
or
in
inc
sub
in
add
push
push
addr16
adc
es
ds
sbb
xchg
and
cs
fsts
push
jecxz
mov
jmp
mov
inc
pop
sbbb
mov
ret
out
xor
mov
std
inc
pop
push
xor
dec
sbb
mov
jg
dec
aad
sub
fnstcw
and
and
ja
dec
ret
pop
xchg
adc
sbb
xlat
or
push
int
or
sarb
sub
scas
insb
fsubrs
lea
xchg
data16
lcall
jno
arpl
lret
fnsave
jp
sahf
jo
arpl
sub
mov
add
cmp
push
push
orb
inc
aad
paddw
pushf
and
jb
enter
mull
mov
xor
test
pop
test
jno
or
aas
xor
mov
and
shll
ja
push
mov
icebp
jge
jnp
mov
dec
push
popf
xor
sbb
and
cmp
ja
mov
xor
jecxz
iret
push
lcall
repnz
mov
sahf
pop
jne
mov
repz
out
rclb
test
lock
fs
push
mov
and
add
lret
xor
xchg
stos
mov
and
scas
xor
cli
and
fisubrl
and
mov
cmp
push
ret
shl
jnp
mov
mov
testb
xor
ss
inc
scas
mov
dec
cltd
int3
jne
gs
sbb
int3
test
cwtl
and
push
mov
ret
push
divb
cmpl
les
test
in
sub
lds
push
inc
stos
inc
nop
mov
jmp
dec
adc
mov
inc
jle
inc
sbb
push
ret
cmpb
sbb
adc
cmp
inc
jno
nop
lahf
shr
mov
jg
cmp
add
add
inc
and
mov
mov
push
fnstcw
test
pop
pop
jecxz
mov
xchg
shl
shlb
xchg
jo
sbb
popf
inc
in
push
jmp
scas
or
lahf
and
add
or
inc
loope
ja
subb
mov
mul
xlat
dec
cmpsb
cltd
out
mov
outsl
repz
lea
mov
out
cld
add
jmp
sub
aam
js
push
cmp
push
xchg
or
data16
jmp
cmpsb
fwait
out
insb
std
pop
inc
lds
cmp
popf
xor
int
xchg
cwtl
roll
cmp
xchg
movsl
mov
iret
mov
sbb
xchg
lret
aaa
orb
cmp
add
sbb
mov
dec
push
mov
int
adc
bound
pop
push
lods
out
pop
pop
inc
lods
mov
xchg
add
mov
lret
sar
lods
rcll
cmpsb
xchg
in
xchg
mov
cltd
and
or
jns
loopne
push
getsec
pop
rolb
popa
aam
pusha
pop
jbe
adc
sub
insl
fs
int3
dec
das
jns
inc
daa
mov
dec
dec
jmp
or
lret
lret
inc
xor
enter
daa
stc
jg
mov
lea
mov
lcall
push
jmp
adc
insl
aad
les
rcl
iret
jecxz
stos
inc
add
jno
shrb
cld
out
loopne
pop
add
or
mov
mov
nop
std
and
enter
test
int
fidivs
andl
lods
test
push
and
jecxz
lcall
in
pop
movsb
sbb
test
loope
bound
add
adc
mov
dec
pop
lock
stos
aaa
dec
pop
xchg
dec
popa
or
jl
inc
cwtl
sarl
pop
pop
je
cmc
push
ljmp
ds
in
cmp
or
mov
test
mov
dec
imul
in
mov
cmp
outsb
xor
mov
mov
xchg
scas
fildl
imul
mov
push
data16
mov
sbb
jae
and
push
and
lret
addr16
inc
and
jg
xor
sbb
push
inc
mov
dec
xor
sbb
lds
mov
cld
jge
popa
lret
lret
ret
dec
sbb
cmc
repz
test
mov
cld
add
cmpl
or
mov
mov
mov
loope
or
insb
rcrl
shlb
gs
add
lea
inc
add
mov
test
bound
fnsave
pop
push
sar
dec
add
out
adc
sbb
fisttps
sbb
mov
add
cmp
jno
sbbl
xchg
xor
lret
test
xchg
pop
push
les
dec
xor
jb
ficoml
aam
out
lcall
xor
mov
les
mov
pushf
lods
es
shll
mov
dec
xor
or
lret
push
inc
idiv
cmp
xor
and
xor
dec
shrb
test
push
ljmp
repz
mov
cwtl
sbb
mov
mov
add
insb
add
mov
mov
fiaddl
loop
pop
scas
icebp
mov
jmp
aam
out
adc
xchg
outsl
imul
fsubrs
ss
jmp
mov
cmp
icebp
mov
aaa
jmp
arpl
adc
jle
ja
dec
rcll
lcall
or
cmp
add
or
std
add
dec
enter
push
jg
mov
cs
shlb
shll
xor
push
mov
je
inc
inc
xchg
inc
jo
add
loop
cmp
je
insl
sub
insl
in
inc
push
jbe
xor
lods
jge
incl
outsl
pop
rcrl
mov
imul
cmc
push
cmp
sar
add
push
fwait
xchg
pop
add
and
mov
movsl
ret
dec
cmp
gs
cld
ljmp
cmpsb
push
dec
mov
xor
jne
push
cmp
mov
adc
pushl
or
and
jb
inc
jae
shlb
test
sbb
add
ret
pop
das
fsts
add
jno
pop
mov
sbb
imul
cmp
lods
jno
add
sbb
add
mov
std
icebp
std
push
dec
fwait
cli
mov
clc
lods
fwait
xor
sbb
jno
test
jmp
sbb
fists
repnz
pusha
inc
call
cltd
leave
xchg
sbb
out
jns
insb
push
jmp
pop
roll
mov
int
aam
lock
dec
ljmp
cmp
mov
or
mov
dec
insb
jno
pop
push
out
cltd
and
cmp
data16
mov
lods
jle
hlt
fidivl
pop
int3
dec
and
cmp
addr16
inc
and
mov
pop
xchg
adc
mov
mov
xor
leave
inc
popf
xchg
mov
je
lods
pop
mov
push
dec
or
jg
jmp
repz
outsb
ret
mov
movsb
xchg
xchg
sbb
scas
out
cmp
lea
cmpsb
clc
lahf
pop
xchg
cmc
adc
mov
sbb
mov
dec
add
pop
adc
add
cmpb
mov
inc
or
push
push
cmpsb
jge
pop
mov
xor
add
fnstsw
xor
jecxz
fwait
movnti
mov
loopne
out
incb
jp
fldcw
cmpsl
sahf
xchg
mov
fsubrp
mov
scas
ljmp
ficomps
inc
mov
cmp
loop
push
lret
ret
mov
popa
jb
xchg
loope
pop
push
push
dec
pop
jmp
mov
shrl
push
pop
aad
aaa
push
or
jecxz
xchg
daa
jmp
pop
dec
xor
pop
mov
mov
xlat
ds
scas
lcall
icebp
jne
pandn
xor
mov
xchg
push
movsb
cs
out
icebp
mov
dec
rcr
mov
mov
jns
dec
mov
push
xor
cmp
jmp
pop
push
out
cmp
xlat
lods
inc
testb
addr16
in
dec
popf
loope
jle
sub
sbb
out
hlt
fisubrl
lods
mov
mov
aas
enter
repnz
cmp
rol
add
sbb
push
enter
subl
xchg
inc
xchg
inc
lahf
cmp
aad
shl
xor
sbb
cmp
sbb
pushf
mov
aaa
jbe
and
mov
fldcw
pop
sbb
mov
test
mov
dec
loop
popa
sbb
es
dec
shrb
sbb
push
or
icebp
push
jmp
addr16
sbb
xor
data16
in
xchg
cmp
cmp
mov
lret
and
mov
mov
jnp
mov
pop
push
cltd
enter
xor
pop
movl
mov
int3
int3
or
xlat
sub
iret
sbb
xchg
ja
mov
xchg
jmp
out
out
lods
inc
xor
test
mov
insl
pop
jno
mov
xchg
pop
sub
cmp
fstpl
cmp
aam
mov
dec
dec
iret
or
pushf
pop
mov
outsl
test
sub
pop
notl
insl
sbb
psubq
mov
ds
dec
int3
pop
inc
push
adc
jmp
cmp
mov
imul
js
mov
test
mov
sub
mov
mov
add
inc
push
outsb
adc
dec
sarl
scas
ljmp
xchg
pusha
popa
inc
cmp
hlt
fisttps
orl
xor
jmp
pop
insb
fstpl
mov
int3
mov
lock
mov
testl
stos
mov
xor
jnp
fmuls
sti
divb
inc
movsl
mov
aaa
scas
mov
addb
mov
cmpsl
push
xchg
mov
js
xor
or
mov
push
test
cwtl
xchg
es
ds
iret
cmc
rol
scas
push
adcb
fcompl
xchg
and
sti
pmullw
ljmp
jp
dec
movaps
out
gs
lret
pop
push
es
pop
add
and
jo
mov
nop
clc
add
mov
push
test
pop
sarl
outsl
jb
mov
icebp
test
pushl
sbb
in
or
mov
mov
jne
aas
pusha
nop
sbb
call
lea
adc
ficoml
call
mov
dec
arpl
int
sub
leave
rcrb
ja
dec
xchg
xorb
xchg
push
test
iret
xor
mov
sbb
pop
mov
sbb
in
sub
cmp
dec
mov
lahf
lret
dec
or
push
notl
mov
cmp
frstor
mov
xor
outsl
arpl
and
popl
movsl
repnz
je
xchg
ret
scas
xor
push
or
test
lods
jb
fadds
insb
scas
call
lods
adc
in
or
sub
dec
pusha
rolb
inc
add
xor
and
jg
or
pop
icebp
ljmp
mov
push
jle
push
nop
std
cltd
inc
add
add
or
xchg
inc
mov
test
push
sbb
mov
pop
addb
add
lahf
in
mov
xor
fmulp
mov
ret
insb
shl
jne
fs
mov
jge
mov
adc
jne
mov
add
pop
movsl
into
mov
push
push
mov
testb
out
dec
outsl
jp
lcall
in
shrb
xchg
test
fdivr
mov
lods
dec
sbb
test
add
xor
in
ljmp
mov
out
pop
mov
addb
outsb
rolb
hlt
negb
popf
movsl
and
cld
ljmp
add
pop
fidivrs
pop
pop
jle
xchg
add
gs
in
in
out
xchg
inc
stos
dec
mov
sbb
lcall
jge
or
xor
in
in
lret
xchg
jb
dec
enter
movsb
pop
sbb
outsl
cltd
sub
test
pop
in
sub
std
push
pop
sti
xchg
fwait
enter
fsub
push
daa
or
repz
fstpl
add
xor
jp
mov
andb
lret
gs
std
xchg
push
arpl
jbe
pop
test
fisubs
pushf
pop
cmp
add
dec
orl
mov
scas
lcall
dec
call
inc
popf
dec
in
push
mov
lret
push
jb
pop
rcll
inc
dec
shl
mov
inc
sbb
push
add
mov
and
mov
cmp
aad
cmpsb
adcb
shr
nop
sbb
or
mov
push
push
xchg
js
push
sarb
dec
sub
mov
iret
movsb
mov
sahf
out
aam
pushf
sbbl
aaa
test
notl
xor
mov
aad
add
insl
xor
cwtl
lds
int3
ret
sub
imul
cmp
cmp
pop
les
inc
ljmp
add
mov
cmc
std
cmp
aaa
mov
inc
call
gs
stc
add
mov
inc
sub
scas
movsl
inc
imul
data16
bound
setbe
fstps
pop
inc
xchg
cmc
sub
js
xlat
mov
jmp
aad
int
nop
cld
xor
dec
fisubrl
cmpsb
in
add
pop
loopne
pop
xchg
pop
loopne
and
jle
js
ffreep
inc
icebp
jp
sub
jp
fs
pop
mov
test
ret
inc
cmp
pushf
test
ss
push
cmp
push
cwtl
push
xor
mov
fstpt
cli
scas
sbb
dec
pop
push
out
pop
pushf
out
in
iret
cs
mov
fcomi
sti
xor
mov
mov
ljmp
dec
xor
jno
insb
mov
nop
sub
sbb
nop
jo
aad
daa
les
cmp
push
push
rep
jbe
mov
inc
jae
push
data16
dec
mov
push
mull
xor
jno
jmp
jmp
in
test
jmp
adc
xor
mov
jae
psrlq
mov
inc
and
out
mov
jl
scas
jb
and
jno
inc
pushf
dec
jmp
popa
dec
pop
dec
in
in
mov
aam
mov
leave
daa
jns
sbb
cli
mov
push
pushf
aaa
test
idiv
dec
sub
or
or
lret
lds
arpl
aaa
push
arpl
mov
or
ja
push
and
mov
clc
cltd
mov
push
cwtl
out
pushf
cmp
sbb
push
xor
cmp
hlt
mov
inc
icebp
push
lock
test
or
clc
or
lahf
clc
xchg
insb
or
cltd
incl
ret
pushf
ret
fdivl
je
inc
mov
sbb
mov
jecxz,pt
mov
push
add
loopne
inc
ljmp
mov
or
xor
jl
out
dec
mov
mov
pop
mov
jno
jns
xlat
inc
sbb
jmp
add
fs
jg
push
mov
and
add
push
nop
cmp
sti
cmp
adc
push
xchg
add
popf
test
adc
jecxz
dec
stos
insl
lret
dec
and
leave
insl
add
clc
js
mov
mov
aad
pop
pushf
jnp
jg
push
test
add
scas
fs
jp
in
or
jecxz
inc
push
add
cmpb
sbb
mov
dec
or
jl
loopne
lock
popa
fs
push
clc
mov
cmc
add
or
jno
popf
mov
fsub
mov
xchg
mov
inc
push
pop
fdivs
fldt
cld
pushf
jo
dec
repnz
pop
pushf
and
jle
insl
imul
xchg
aas
insb
pop
dec
cmpsl
push
cmp
sbb
dec
and
lods
sahf
pop
lahf
loope
mov
mov
inc
fwait
xor
sub
jg
clc
xchg
stc
xchg
and
mov
add
lret
mov
hlt
dec
fdivs
mov
or
loope
addr16
shl
addb
pop
or
mov
lahf
loop
int3
mov
movsb
lahf
insb
mov
xor
mov
pop
xchg
sub
es
enter
fucomi
test
mov
fwait
into
lcall
xor
outsb
lret
stos
adc
cmp
inc
jno
mov
shlb
loope
ss
addr16
std
std
sub
jle
das
into
test
testl
jnp
sub
in
or
jl
jb
popf
dec
test
in
add
ljmp
mov
sbb
sub
inc
in
outsl
lret
mov
test
cmc
int3
sbb
psubd
inc
cwtl
add
mov
add
mov
shlb
or
cmp
enter
mov
loope
daa
xchg
pop
cwtl
sar
stos
aam
jg
pusha
mov
arpl
fadds
mov
aaa
repnz
call
movl
dec
rorl
jae
dec
add
lcall
and
movsb
popa
int
ret
or
mov
lret
mov
jge
mov
sbb
pop
iret
cli
imul
int
sub
adc
loopne
jl
pusha
pop
xchg
loop
test
loopne
push
pushf
adc
push
dec
and
xchg
add
xchg
mov
cmp
ret
inc
and
ss
addr16
or
or
mov
jg
pop
adc
in
clc
je
nop
lcall
jecxz
es
cmp
mov
les
das
pop
or
shll
mov
push
dec
inc
popa
mov
cli
sbb
aam
mov
xchg
cmp
dec
loopne
test
scas
sbb
dec
stos
stc
mov
jo
nop
mov
xchg
sbb
aad
jae
jg
bound
lret
jno
dec
mov
add
into
pop
rol
mov
movl
int
or
or
mov
daa
add
push
out
loopne
pushf
imulb
push
push
daa
mov
sbbb
pop
mov
cld
xchg
lcall
jp
or
mov
repnz
fsubl
call
mov
mov
xchg
push
pop
imul
add
sbb
xchg
adc
pmullw
inc
and
or
popa
loop
mov
fisttps
adc
bound
icebp
frstor
push
sub
mov
xor
inc
dec
inc
sbb
or
in
or
mov
rorb
pop
push
mov
out
nop
in
loope
int3
xchg
test
cmc
rcl
jns
and
divl
xor
add
add
jl
or
sub
gs
xor
xchg
adc
insb
imul
xchg
or
sbbb
mov
xchg
daa
xor
adc
call
lods
sti
test
mov
pop
push
into
jmp
push
imul
addr16
into
jp
ds
rcrb
dec
pop
out
ds
and
jb
in
lock
je
loop
inc
xlat
jns
cmp
cmp
fidivrl
stos
xchg
stc
xchg
cmp
ss
push
testl
movsb
test
jne
jmp
lcall
popl
mov
add
scas
xor
out
jae
push
sub
jne
dec
cmp
enter
xchg
cmpsl
dec
scas
pop
mov
mov
popf
cmc
mov
or
addr16
adc
dec
sarl
lock
cli
fadds
xor
enter
lret
stos
aad
cmp
sbb
xor
inc
dec
test
pop
xchg
outsl
cmp
push
cmp
sti
arpl
out
sub
pop
movsl
pop
mov
push
fdivs
fsubs
pop
sbb
fnstsw
mov
lods
sbb
sub
dec
pop
push
mov
and
loopew
mov
jne
or
adc
sub
test
sbb
and
add
mov
jmp
inc
shll
dec
in
sbb
imul
in
adc
jg
jecxz
scas
add
test
cmp
std
xchg
clc
add
push
mov
ret
aam
hlt
stc
enter
xor
aam
jb
testb
aaa
fs
mov
push
jp
scas
hlt
cmp
mov
and
push
adc
cmp
add
xchg
cld
ljmp
imul
ffreep
or
inc
inc
mov
sahf
pushf
shll
jl
fucom
inc
loop
outsb
xor
sub
pop
mov
pop
addr16
andb
popf
and
mov
pushf
fwait
stos
xchg
pop
or
insb
dec
mov
push
es
jne
imul
cmp
adc
popf
cli
das
sub
mov
and
fwait
pop
mov
cmc
and
mov
aas
in
mov
cmpsl
inc
cmpsb
and
ds
sub
into
es
jl
dec
push
mov
cmp
mov
jmp
leave
pop
inc
sub
insl
clc
aaa
jmp
fidivrs
mov
int3
fincstp
pop
popa
mov
addr16
mov
adc
push
xchg
mov
mov
sar
and
pop
add
fldcw
add
lea
mov
dec
xchg
sbb
lret
aad
popf
sub
and
shrl
inc
mov
and
mov
add
inc
add
test
push
cmp
repnz
fsubr
adc
mov
mov
mov
addl
out
xchg
jnp
xchg
fcompl
or
xchg
jnp
aam
sbb
shlb
jno
cmpsl
adc
enter
dec
inc
adc
int
sbb
ud2
or
bound
xor
rolb
inc
inc
test
xor
paddsb
popa
push
mov
push
mov
inc
cwtl
and
jnp
imul
gs
add
test
mov
inc
daa
add
cmpsb
out
sub
fistl
mov
jno
push
leave
inc
imul
ljmp
pushf
ret
xchg
sti
xor
stos
xchg
xchg
push
nop
stc
test
aaa
mov
call
les
out
xor
adc
mov
mov
fadd
jne
push
hlt
inc
xchg
popf
aam
mov
pop
jecxz
nop
or
add
icebp
xchg
movsl
mov
jle
insb
or
std
jnp
push
add
cmp
rorb
push
mov
sahf
out
pop
push
pop
enter
jl
mov
cli
xchg
jo
jno
jecxz
dec
fdiv
cld
cmc
mov
mov
mov
daa
jns
clc
shll
mov
jge
test
iret
fwait
sti
pop
mov
cmpsb
xor
dec
jmp
dec
popa
aaa
mov
sarl
mov
push
or
adc
jnp
add
mov
inc
insl
sub
inc
leave
ss
push
cmp
scas
rcrl
fisttpl
gs
jns
jl
jno
mov
inc
mov
out
cltd
lds
es
jge
dec
mov
push
sub
rcl
xchg
add
repnz
jo
int3
mov
pop
or
imul
call
arpl
enter
loop
add
dec
push
jae
adc
cmpsb
cmp
cmpsb
push
clc
sbb
lods
gs
icebp
testb
stos
imul
fistps
js
testb
xchg
cwtl
fisubs
adc
inc
xor
popf
or
out
mov
pop
pop
adc
fs
nop
cmp
cmp
mov
jno
pop
pop
pusha
mov
insl
lret
repz
adc
cmp
test
into
push
cmp
insb
mov
jno
inc
pop
pop
outsb
jmp
dec
add
xchg
add
adc
xchg
mov
or
cmpsb
sub
scas
dec
cmp
sub
dec
inc
shll
push
mov
inc
sarl
dec
jb
push
dec
mov
loope
jno
or
xchg
sub
out
xlat
cmp
push
in
xchg
ds
jmp
clc
stos
sbb
and
int3
inc
dec
mov
sbbl
nop
iret
dec
lods
popf
test
xchg
fistl
rorb
shrl
cmc
cmpsl
jo
pop
xchg
repz
mov
aam
frstor
or
stos
insl
or
outsb
lcall
aad
jns
sub
mov
testl
mov
adc
sbb
idivl
mov
pop
mov
pusha
movsb
in
sub
jno
xor
dec
pop
mov
cmpsb
adc
insb
inc
ds
adc
sub
lods
adc
jg
cmp
andb
hlt
jo
jg
inc
push
mov
push
jb
pop
xor
aad
out
out
pushw
movl
es
lea
xlat
idiv
jne
push
ss
inc
inc
and
push
sbb
mov
mov
mov
iret
push
in
rcrl
mov
mov
add
shl
outsl
nop
and
cmpb
push
jmp
mov
test
mov
jns
add
rcrb
cmp
sbb
cmpsb
cld
lock
xor
stos
imul
mov
mov
push
xchg
stos
mov
test
daa
cmp
push
stos
mov
test
lods
adc
fwait
jns
clc
mov
ds
mov
jge
add
jne
jns,pt
mov
leave
xor
repz
lods
xor
adc
push
fiaddl
xchg
sbb
jecxz
sarb
mov
mov
leave
xchg
sahf
add
stos
jne
mov
sub
aas
cwtl
xchg
dec
push
mov
and
out
addb
je
mov
mov
std
push
subb
push
inc
mov
fucom
out
addl
outsl
push
fs
xchg
cli
test
add
enter
fcomp
push
outsl
mov
xor
add
xchg
push
and
push
lea
push
into
test
sub
in
fldcw
jne
outsb
sti
and
dec
cmp
je
mov
xor
mov
mov
lods
sub
aam
ret
repz
fwait
cmpsl
aaa
scas
mov
jae
sarb
ss
hlt
stc
popa
lea
jl
outsb
push
xchg
hlt
jno
stos
ret
inc
ret
fdiv
movsb
insb
pop
loope
adc
cmpsl
cmpsl
sub
into
jns
cmc
daa
stc
lea
hlt
cmpsb
mov
insb
call
cmp
push
and
movsb
aam
shl
mov
jecxz
xor
or
andb
inc
dec
xchg
inc
and
sbb
xchg
dec
mov
gs
jg
cmpsl
int
push
popf
sbb
sahf
jnp
mov
mov
outsb
call
mov
jp
ja
leave
xchg
cmp
pop
imul
dec
jnp
loop
popf
sub
mov
xlat
jle
js
mov
lret
aad
filds
or
lock
jbe
sub
in
mov
test
mov
gs
sbb
stos
jmp
movsl
mov
push
add
scas
ret
sbb
inc
pushf
sub
out
mov
inc
out
lea
add
aaa
bound
sbb
sbb
adc
or
dec
fdivrp
repz
jno
mov
in
lahf
movsl
inc
adc
stos
pop
idivb
or
test
pushf
pop
add
sbb
rorb
subb
push
sar
push
dec
in
in
out
add
or
dec
xchg
dec
pusha
xlat
push
rcrl
aaa
mov
jge
xlat
sub
shll
movsb
mov
xlat
inc
jmp
or
lcall
mov
sub
inc
std
mov
mov
xchg
cmp
sbb
adc
jmp
xor
fneni(8087
fldl
pop
mov
neg
push
imul
xor
leave
fstps
mov
out
pop
ret
sub
push
or
addr16
push
ljmp
ss
test
imul
cltd
dec
cmp
xchg
dec
and
xor
add
lock
adcb
pop
lods
dec
es
out
loopne
hlt
sub
inc
mov
mov
pushl
dec
adc
cmpsl
push
mov
pop
mov
retw
stos
mov
ja
push
mov
es
lods
jo
out
roll
and
push
js
test
mov
pop
ja
cmp
and
shl
fldt
sub
mov
mov
jo
dec
mov
repnz
push
inc
aas
cmp
and
mov
or
adc
and
mov
stos
cmp
leave
pop
or
xor
ljmp
adc
cmp
scas
mov
mov
rcr
jbe
ret
add
jnp
sub
aam
push
cs
adc
bound
pop
mov
inc
movl
clc
and
or
sbb
cli
push
lods
dec
gs
pop
dec
out
jp
jae
xchg
icebp
jmp
std
enter
and
inc
inc
icebp
sbb
lret
mov
jbe
or
jb
test
xchg
aaa
xchg
fstl
jne
lahf
sbb
aam
ficomps
cmpl
loopne
mov
dec
insl
scas
mov
push
xchg
adc
cs
fcomps
daa
mov
sbb
pop
or
fidivs
jg
dec
xlat
or
push
add
pusha
jecxz
inc
adc
leave
xorl
mov
push
call
xchg
push
dec
xor
int3
mov
lds
push
pop
add
or
pop
xchg
adc
cmpsb
jae
mov
add
je
pop
xchg
adc
xchg
sub
jg
aaa
inc
pushf
fsubs
pop
sbb
xorb
sbb
pop
mov
xlat
pop
nop
push
pop
mov
pop
pop
cmpsl
in
jmp
xor
sub
out
sbb
sub
add
daa
mov
or
test
aad
rcrl
fdivrl
into
push
rorl
mull
sub
scas
int
sub
and
cmp
cltd
mov
or
pop
sahf
cltd
jp
inc
mov
or
cmc
fwait
or
int
sbb
mov
inc
test
xor
jb
pop
roll
lods
das
or
orb
int3
dec
inc
ja
repnz
outsb
stos
ja
sub
pop
cmpsb
xor
mov
sub
pop
arpl
mov
xor
or
repz
aas
fsts
jae
mov
xchg
and
pop
adcb
push
pop
cmp
or
xchg
rorl
insl
loop
jne
insl
gs
sub
sub
pop
test
jno
test
add
adc
insl
push
xor
mov
icebp
out
pushf
enter
xor
fisubrs
je
push
lods
pop
sbb
jmp
adc
into
cmpl
in
inc
popa
and
fwait
jg
mov
jae
fsubl
fwait
cltd
lea
cs
add
jge
fisubs
jbe
fmuls
xlat
mul
sub
icebp
mov
ret
dec
or
or
dec
outsb
sarb
xlat
fs
adc
ds
pop
push
xchg
mov
push
dec
xchg
jnp
inc
inc
mov
adc
lods
test
inc
pop
mov
jnp
pop
or
hlt
add
int
mov
mov
xor
dec
mov
cmpsb
mov
in
ss
mov
lock
adcl
mov
paddsw
nop
mov
inc
pop
sub
imul
andps
outsl
mov
and
cmp
jb
out
in
xchg
lock
in
push
arpl
cmpsb
add
sbb
insb
test
pop
pop
out
sub
mov
fisttpll
in
fisubl
test
cmp
xor
fisttpll
xor
repz
mov
dec
dec
add
push
in
test
push
dec
adc
dec
jge
jnp
fldcw
cli
and
jmp
cmpsl
lods
gs
mov
fistpll
cmp
filds
mov
std
shlb
or
push
test
pop
jno
aas
push
jge
js
mov
mov
in
arpl
andb
mov
dec
or
jb
dec
xor
sahf
adc
cmp
and
pop
adc
jecxz
and
dec
mov
pop
pop
and
sub
stc
rorl
xchg
push
xchg
push
and
xchg
lret
xor
and
in
out
rorb
movsb
sbb
add
mov
adc
idiv
sub
repnz
lea
mov
jmp
sub
jle
mov
pop
add
imul
jg
jne
cmp
das
test
mov
mov
push
rolb
lcall
pop
jg
aam
aas
mov
dec
dec
add
js
insb
mov
or
mov
movsl
ret
sbb
ljmp
xchg
pop
xor
lcall
sti
add
dec
push
dec
adc
mov
enter
gs
push
je
mov
ficoml
lret
lcall
push
mov
and
jae
pop
into
bnd
pop
push
and
das
mov
in
jl
xor
imul
mov
testb
inc
les
cli
inc
push
inc
shll
gs
das
xchg
cmpsl
loop
xchg
mov
mov
pushf
cmp
aad
inc
push
pop
iret
cmp
bound
in
dec
sbb
aam
mov
dec
ja
in
xlat
dec
xor
dec
outsl
mov
sbb
push
arpl
shll
stos
cmp
jl
pushf
repnz
adc
adc
or
or
push
stos
dec
lea
testl
or
test
push
xor
int
mov
sub
repnz
inc
movsl
add
jg
shrl
jmp
jnp
and
call
inc
sbb
shr
fsubs
jmp
lea
rol
cmc
add
push
cli
cmp
vmovaps
push
in
fdivrl
mov
sti
or
mov
mov
or
std
mov
in
add
jnp
mov
mov
add
std
cltd
aam
into
sub
das
inc
sbb
inc
xor
adc
sub
xor
or
or
and
fisubl
add
test
mov
xor
lods
lods
les
cmp
or
rolb
mov
push
arpl
cmp
mov
das
addl
xor
xchg
adc
roll
pop
or
test
in
js
xchg
sub
push
xchg
into
imull
pusha
mov
mov
imul
ja
aas
movsl
dec
outsb
xor
int3
and
mov
lock
jno
and
sar
adc
loope
xor
mov
xor
and
xor
jae
ds
jmp
cmp
imul
in
adc
mov
push
andb
insl
int3
cmp
mov
or
adc
fadds
dec
xor
outsb
sbb
push
popl
jmp
std
ss
pop
xor
mov
popl
lea
or
jl
cmp
sbb
stos
cmp
and
lret
and
add
repz
scas
jg
mov
jbe
pushf
mov
hlt
ljmp
or
sub
sbb
cld
inc
add
xchg
rcr
cli
xchg
cs
dec
je
icebp
fstpt
jp
fidivrs
out
xor
enter
jl
dec
sbb
js
mov
aad
sbb
add
movsb
inc
scas
inc
xlat
addr16
mov
outsl
fiadds
jne
or
imull
insb
and
rcrb
shlb
and
fdivrl
mov
fstps
mov
add
and
movl
int
bound
xchg
dec
cwtl
mov
insb
les
iret
cmpsb
shl
push
rol
enter
lret
iret
dec
sub
cmp
cld
xor
cmp
push
fildll
in
push
mov
mov
jo
cmc
pop
sbb
xchg
inc
int3
stos
shl
in
ss
popf
add
add
xor
sbb
push
push
data16
subps
aad
mov
sub
addl
es
mov
lahf
fisubrs
mov
sarb
movsl
aaa
xchg
je
leave
lcall
mov
mov
in
popa
jl
sub
mov
sarb
cld
mov
xchg
and
add
repz
and
mov
and
insb
jo
mov
outsb
cmp
pop
jno
fcomps
scas
fdivrs
xor
lret
clc
outsb
inc
ds
mov
pop
xlat
xor
push
jge
pushf
into
jno
or
mov
push
adc
mov
xor
iret
sbb
mov
ljmp
cmc
mov
shlb
lods
mov
jmp
mov
sub
test
mov
shrl
not
inc
lret
xchg
pop
jp
inc
insl
push
cmp
insl
aad
or
xchg
adc
test
inc
cmpsb
hlt
add
and
movsb
adc
mov
push
cmp
addr16
jmp
in
cwtl
jg
mov
lock
pusha
inc
dec
cmp
test
mov
scas
pop
movsb
arpl
das
add
fbstp
xor
mov
add
xlat
lods
cmp
push
adc
sub
mov
sub
outsl
test
push
pop
jne
pop
push
outsl
add
stc
sbb
dec
ret
xchg
rorb
icebp
mov
test
ja
sbb
adc
out
mov
mov
sbb
sub
repz
push
push
mov
mov
sar
mov
xchg
push
and
lods
cli
pop
sbbl
mov
sbb
pushf
push
pop
ret
mov
jecxz
addr16
lods
mov
addl
add
repnz
in
push
mov
pop
fstl
scas
test
in
lret
in
inc
iret
mov
dec
sub
cltd
jbe
mov
xor
loope
pop
xchg
pushf
cli
pushl
int3
fs
mov
jecxz
das
sub
jg
mov
mov
pop
mov
xlat
adc
hlt
xchg
fcompl
mov
movq
pop
jl
out
xchg
sub
xchg
sbb
mov
adc
mov
inc
cmp
adc
or
and
sub
mov
and
popf
xchg
add
xor
jne
stc
push
lds
sub
add
mov
dec
clc
mov
pop
ret
or
jo
sub
ss
aam
pop
or
outsl
aam
std
les
or
mov
push
in
pop
movsl
and
mov
movsb
fs
lret
lock
push
pop
outsb
loop
jecxz
dec
inc
ss
cs
cmp
pop
mov
jmp
dec
or
fsubrs
std
lds
int
cwtl
les
enter
scas
hlt
repz
xor
mov
cmp
cmc
xlat
out
xchg
inc
leave
jb
int3
mov
test
testl
jae
mov
pop
add
cmp
cmpsb
lods
js
inc
test
pop
and
repz
rorb
pushf
mov
dec
arpl
xchg
popf
jmp
decb
ret
lcall
add
std
addr16
shlb
aas
mov
cmpb
adc
repnz
aaa
in
inc
aas
sbb
sbb
cmpb
imull
jb
mov
cmp
dec
add
insl
stos
xorl
enter
xor
xchg
mov
icebp
xchg
push
movsl
aam
sbb
xchg
fsts
aam
sarl
out
roll
loopne
imul
insb
push
push
lods
ret
mov
or
lods
loopne
repnz
sbb
rcr
xlat
outsb
and
fwait
xor
incb
push
arpl
pop
mov
in
mov
dec
jae
adc
pop
jle
mul
mov
cmp
add
adc
jmp
xor
mov
fstpt
pushf
sarl
xchg
xor
mov
fisubrl
inc
adc
jmp
stos
into
cld
addl
lock
adc
mov
aas
xchg
lret
ficomps
jns
sbb
stos
push
ds
and
scas
das
xor
leave
int3
adc
stos
sti
sbb
jno
xchg
call
push
sbb
pop
nop
mov
stos
inc
jmp
mov
mov
cmc
jne
push
in
or
dec
lds
popf
lret
inc
mov
inc
inc
push
cmp
xchg
cli
mov
lea
xchg
leave
sar
daa
repnz
or
in
sahf
xchg
adc
mov
mov
pop
jo
mov
or
fiaddl
lcall
jl
push
push
or
mov
adc
adc
pop
add
in
adc
dec
aas
subl
xlat
mov
lds
dec
add
rcrl
mov
dec
push
mov
pop
inc
shl
fisubrs
mov
aam
in
and
jo
jp
shlb
loope
pop
sti
cmc
or
std
xor
cmp
lret
jmp
xchg
and
mul
test
xchg
sbb
jmp
sbb
cmp
mov
dec
cltd
iret
cmpsl
aaa
xor
sbb
loopne
shlb
or
sub
jl
sahf
xor
arpl
cmc
mov
mov
jbe
xor
pusha
fisubrs
jne
pop
mov
aam
scas
adc
shlb
jg
mov
pop
dec
scas
pushf
scas
mov
jp
push
xchg
dec
push
xchg
xchg
mov
shll
test
or
dec
xor
or
iret
insb
sbb
sbb
int
bound
sbb
je
sahf
hlt
cmp
cmpsl
xchg
mov
out
mov
dec
repz
ret
adc
push
mov
inc
les
outsb
js
adc
mov
cwtl
popf
sub
mov
ss
jl
bound
fcomp
sahf
jmp
fs
pop
movzbl
gs
inc
or
xor
push
insb
jp
mov
jae
cmp
ret
arpl
cmpsb
mov
mov
imul
sub
xchg
fdivl
push
sbb
mov
or
sbb
pushf
lret
call
sbb
fcomi
dec
mov
loope
in
jnp
mov
lahf
arpl
aaa
in
xchg
xlat
cwtl
enter
gs
call
cmp
push
pop
add
enter
dec
cmp
cmp
arpl
push
ss
into
pop
mov
je
stos
sub
dec
inc
outsb
jecxz
mov
je
mov
xchg
sub
outsb
movsl
xchg
mov
mov
stc
mov
mov
push
or
repnz
adc
lock
pminub
out
and
mov
pop
ret
jns
push
inc
mov
inc
hlt
mov
fwait
pop
mov
xchg
pop
fnstsw
in
lahf
idiv
pusha
xor
cmp
js
pusha
imul
cmp
sbb
jg
push
add
dec
fiaddl
xchg
xor
cmp
out
mov
xchg
cmp
pop
aam
jns
push
push
jge
clc
mov
xchg
icebp
insb
cmp
pop
pop
xor
push
jmp
lds
xchg
push
jg
and
sub
jnp
es
lods
xor
cltd
inc
mov
push
cmpsl
mov
fwait
sbb
jno
and
nop
les
add
popa
push
scas
test
clc
adcb
sub
daa
cmp
aad
inc
inc
xor
push
adc
push
add
iret
jle
gs
leave
xchg
inc
test
push
repnz
leave
mov
add
in
add
fs
dec
jae
aaa
icebp
mov
nop
dec
aas
pop
cmp
ja
dec
xor
loopne
mov
and
cmp
xchg
xor
popa
mov
loopne
adc
cmp
sub
cmp
jg
jne
xor
cmp
xchg
xor
jb
cmp
pop
push
adc
and
mov
mov
sbbl
mov
repnz
call
imul
pop
mov
and
pushf
xchg
or
imul
fldl
push
es
imul
xlat
icebp
add
loop
imul
shrb
jge
sbb
data16
fmull
add
push
js
cmp
sbb
fwait
int3
push
cld
scas
insb
push
lret
in
notb
jb
dec
test
inc
jne
adc
popf
push
or
fsubrl
mov
sbb
outsb
push
dec
pop
in
mov
sub
push
cmp
ss
call
inc
lret
sahf
stos
jp
insb
or
out
les
cmpsb
lret
xchg
lock
cmpl
enter
movsb
add
popf
and
das
inc
inc
daa
ret
mov
in
lods
cmc
xor
add
test
adcb
dec
lods
sbb
mov
hlt
call
scas
push
mov
stos
inc
jp
lock
mov
adcb
inc
jp
adc
dec
or
enter
rorl
and
xor
sub
and
int
aad
inc
fs
into
xor
stos
dec
sbb
in
jns
mov
cmc
xor
es
sub
mull
mov
inc
jnp
std
cmp
inc
ret
jns
int3
mov
out
mov
push
movsl
mov
test
mov
add
adc
imulb
push
lods
mov
inc
ja
mov
dec
aas
int3
adc
imul
test
push
mov
mov
ret
add
jp
addl
cmp
mov
mov
xchg
nop
jb
mov
and
test
cmp
jle
lds
adc
pop
pop
cmp
lods
scas
jl
or
fidivrl
cmp
rcrb
push
testb
stc
sub
sbb
sbb
xchg
fdivrl
int
shll
and
jo
cmp
xchg
push
add
outsl
fmulp
leave
stos
inc
adc
sti
inc
cmp
lds
jge
pop
fs
lahf
cld
cltd
jo
pop
or
jle
inc
notb
push
fcom
out
mov
lret
out
cmp
push
pop
jo
adc
sub
push
cmp
pusha
inc
dec
or
mov
in
sub
sub
or
sub
or
into
shlb
jbe
pop
les
das
mov
pop
stc
test
inc
sahf
dec
xor
mov
jge
cmc
push
jbe
sbb
jbe
xchg
and
int
mov
das
jmp
aam
test
or
lret
or
jo
jne
daa
push
in
pop
jmp
add
repz
ret
icebp
sbb
das
jl
js
hlt
std
out
loope
inc
ss
and
add
adc
int3
inc
arpl
int3
sub
sub
lcall
xor
dec
cmp
push
push
add
out
enter
loope
dec
mov
cmp
xor
rorl
ds
mov
inc
inc
call
rorb
aad
cmp
push
jne
stc
xor
fcoml
xorl
dec
cmp
fistpll
jae,pn
mov
mov
mov
push
std
push
push
jp
cs
jmp
mov
in
popf
sub
lretw
imul
lcall
repz
sbb
popf
jo
lret
push
nop
shlb
xor
stos
xlat
mov
cmp
push
hlt
daa
xor
jl
outsb
adc
push
cmp
cmpsl
loop
inc
mov
mov
xchg
push
fbld
stc
mov
aas
fs
push
jge
cmp
sub
movups
test
popa
adc
mov
lahf
ljmp
sub
and
xor
mov
push
add
dec
out
xchg
fisubrs
lds
imul
mov
xchg
inc
sub
jmp
popa
in
adc
sub
sub
dec
add
sarb
add
out
add
jp
jb
das
push
into
test
sbb
cltd
fmul
push
inc
mov
pop
mov
data16
scas
xchg
je
xchg
mov
jo
xchg
add
and
dec
fldt
les
xchg
mov
icebp
xor
jl
or
subl
sub
jb
aas
sbb
bound
and
jne
test
out
test
xor
cwtl
adc
sarb
mov
arpl
aad
int
daa
mov
mov
adc
scas
or
push
sahf
add
enter
cs
and
popa
ljmp
add
shlb
lret
xchg
jo
push
fidivrs
out
pop
jge
fcmovu
in
and
shll
cmp
xchg
mov
mov
in
decb
mov
aas
or
jp
dec
movsb
outsb
jl
nop
movsb
or
push
repnz
cmc
sbb
sub
xchg
mov
mov
pop
push
cmc
dec
mov
es
sbb
dec
cmp
sub
loopne
shlb
cmp
dec
ja
mov
mov
imul
sti
stos
mov
mov
mov
xor
cmp
or
mov
lock
lcall
mov
fs
push
jo
jle
dec
push
push
enter
pop
fs
mov
sbbl
push
xchg
and
lret
faddl
push
push
pusha
xchg
push
mov
pop
jbe
jae
sbb
cmp
daa
add
inc
sbb
pop
push
sub
test
outsl
sbb
int3
inc
mov
jg
iret
shl
sbb
pop
pop
cmp
rcrl
insl
std
fs
or
lret
daa
aas
popa
adc
or
xchg
ret
jbe
pop
arpl
pop
or
dec
sub
adc
sbb
ja
pop
mov
inc
sbb
cltd
gs
pushl
push
push
insl
or
mov
leave
enter
lcall
mov
jge
fimull
aad
push
cmp
fistpl
pushf
rolb
mov
negb
or
jmp
mov
mov
adc
js
jp
ljmp
mov
mov
push
test
xor
stos
int
sub
mov
pop
and
movsl
or
and
jmp
adc
pusha
and
rorb
inc
mov
or
cmpsb
inc
lret
add
jno
insl
lock
adc
dec
aaa
xchg
icebp
scas
lahf
inc
stos
dec
test
js
nop
add
cld
mov
and
cltd
addr16
ja
mov
fsub
out
adc
jle
ficoml
test
shlb
ja
xchg
test
or
jg
pop
adc
fcompl
cmpsl
or
popa
notb
nop
push
push
mov
cld
loope
inc
out
fsubs
add
hlt
leave
mov
mov
shll
imul
xchg
leave
ret
clc
ret
fnstcw
outsl
mov
dec
test
loop
arpl
mov
pusha
stos
push
rcr
mov
mov
lahf
orb
add
jecxz
scas
call
aaa
cld
aam
ret
and
mov
push
dec
fdivl
pop
ret
inc
fcompp
mov
xchg
xor
mov
imul
ret
fwait
sub
loopne
outsb
es
cwtl
insl
add
icebp
sbb
int
repnz
imul
in
xor
fcomps
push
lret
jl
push
lods
and
mov
inc
mov
or
cmp
or
aad
mov
xor
xlat
push
mov
sub
stos
mov
dec
push
add
jl
loope
mov
xchg
insb
hlt
sarl
jbe
push
mov
lret
in
jmp
in
fwait
xchg
or
sub
sbb
pushf
clc
or
fcmovb
nop
lods
repz
add
push
sbb
mov
loopne
or
cld
pop
ja
lods
fiaddl
add
icebp
xchg
mov
inc
shrl
push
and
and
shll
mov
call
dec
cmpsl
out
in
leave
lret
pop
fildl
loop
push
dec
scas
andl
lret
mov
mov
mov
mov
shl
sub
sbb
dec
stos
fidivs
sub
int
loopne
jle
jnp
in
xchg
cld
data16
leave
cmpsb
fdivrl
dec
imul
or
and
mov
cld
fcom
ds
arpl
jae
add
mov
outsb
inc
pusha
adc
mov
cmp
mov
push
or
pusha
pop
lds
fsubl
push
lods
sbb
xchg
and
shll
cmp
mov
mov
in
repz
movl
ljmp
pushf
pop
sbb
xor
in
push
mov
rorl
mov
lcall
sbb
call
fisttpl
gs
lret
sbb
lea
jb
cltd
adc
mov
push
scas
sahf
jecxz
inc
push
popa
lods
insb
testb
stos
ja
sti
call
aaa
pop
mov
add
inc
push
push
pop
jecxz
addr16
xchg
sbb
mov
enter
dec
sbb
mov
fsubrs
jo
jle
sub
pusha
xorb
and
cli
push
idivb
std
sbbl
xchg
inc
ret
and
mov
and
out
mov
mov
xchg
repnz
or
in
sbbl
push
imul
arpl
subb
into
cmp
test
or
lds
imul
inc
add
fdivrp
add
sub
add
push
adc
inc
push
ljmp
push
add
fs
xor
fldl
fidivs
pop
pop
mov
jns
or
aaa
xchg
pop
jo
push
push
out
stos
jecxz
pop
call
push
pop
sub
and
dec
inc
lret
lret
imul
inc
inc
clc
je
fdivp
and
mov
pop
stc
lret
dec
std
ret
adc
ds
ljmp
jl
test
out
aam
std
jecxz
xchg
jmp
add
popf
xchg
adc
inc
insl
xchg
es
jge
mov
adc
mov
mov
inc
inc
cmp
jp
inc
mov
in
shrb
push
cmp
add
dec
imul
xchg
les
out
popf
sub
xchg
cmp
lret
lahf
icebp
dec
das
fs
and
push
add
and
xorb
nop
mov
mov
jns
jno
mov
repz
xchg
xchg
xchg
lds
or
cli
int3
scas
push
inc
test
dec
inc
mov
andl
push
dec
xor
movb
dec
cvttps2pi
loop
pushl
enter
mov
shrb
mov
mov
push
or
das
push
shlb
fiadds
scas
andl
imul
sbb
or
cmpsl
mov
pop
shlb
aas
nop
int
andl
sbb
fs
mov
push
jp
ja
fcmovu
aas
inc
jns
lea
ja
inc
addb
mov
loopne
std
xchg
pop
mov
call
aam
sbb
push
or
xchg
cmp
xchg
push
mov
iret
mov
mov
cmpsb
xor
lret
dec
sbb
cli
cmpsl
fwait
cs
decl
add
cmp
cmc
push
mov
mov
sub
cmp
aad
or
cmc
mov
jg
testb
sbb
incl
mov
push
jbe
sub
fsubs
cltd
pop
sub
xor
test
dec
into
cmp
cmp
fldcw
cs
sub
fstpl
jge
and
mov
stc
insb
mov
and
jb
ret
enter
mov
mov
or
cmp
mov
or
rolb
insb
popf
cmp
insb
mov
outsb
lret
jns
call
fldt
inc
lret
loope
sti
sub
test
fsin
cltd
lahf
iret
mov
nop
jge
in
cli
cmp
add
add
sub
sub
clc
pushf
add
add
lds
adc
test
daa
push
insl
jno
aas
popf
out
popa
pop
inc
pop
mov
xchg
inc
sar
sbbl
mov
cmpsl
cmp
push
jnp
fsts
push
out
mov
shrb
jmp
stc
andl
mov
push
call
adc
cmovs
cmp
imul
ret
jae
stc
push
and
dec
jp
xor
sarl
adc
push
xchg
popa
xchg
sbb
and
push
lock
mov
mov
cmp
int3
adc
repz
mov
dec
dec
xchg
push
cmpsl
aaa
insl
adc
int3
fisubl
je
mov
scas
das
or
rclb
fwait
xchg
test
jo
xchg
inc
mov
or
xchg
or
in
mov
inc
add
pop
lcall
dec
xchg
gs
mov
jmp
bound
shll
jmp
mov
fdivl
aam
mov
xlat
call
leave
cltd
push
arpl
inc
push
stos
xlat
fimuls
test
sub
xorl
mov
push
scas
enter
push
setb
ret
lock
in
cmpsl
mov
dec
loop
fndisi(8087
pop
rorb
jl
push
xor
mov
jge
idivl
inc
adc
mov
push
mov
ret
push
mov
inc
adc
push
insb
ficoml
pop
icebp
arpl
mov
jle
push
mov
mov
mov
es
in
pop
add
xchg
xor
arpl
lret
xchg
int
sbb
fstpl
leave
push
mov
push
mov
fdivs
and
push
cmc
mov
fisttpl
sub
int
and
jl
sub
lock
inc
adc
pop
mov
hlt
mov
fcomp
xchg
adc
push
xchg
in
iret
dec
mov
mov
pop
iret
push
mov
sbb
stos
sbb
icebp
pop
in
cmp
test
add
loope
bound
ds
imul
cs
jae
fcoms
add
add
jl
lahf
popa
hlt
stc
xor
inc
xor
push
cmc
outsl
test
andb
stos
inc
test
sarl
arpl
xchg
fwait
push
data16
pop
mov
mov
jmp
inc
push
lret
cmc
fsubl
xor
pushf
mov
push
shll
and
fs
xor
adc
ja
adc
jo
xor
data16
cli
mov
fld1
cld
dec
fmull
leave
and
jo
pop
jno
push
inc
cwtl
jg
mov
jmp
mov
add
xchg
sub
mov
movb
movsb
mov
loopne
xor
shrb
cmp
mov
sahf
clc
sub
in
xlat
out
mov
or
test
dec
data16
dec
stc
js
mov
pop
out
andb
lods
lods
cwtl
pop
das
jbe
push
dec
push
jno
sbb
mov
ljmp
sub
pop
and
ficoml
sbb
icebp
xor
or
sbbl
lock
divb
sti
sbb
das
cli
cmc
imul
mov
mov
jg
pop
les
movsb
nop
pop
divb
cld
idivl
lret
dec
pop
jle
xchg
pop
xor
or
pop
nop
mov
push
jne
pop
push
rcll
inc
pusha
adc
loop
std
push
mov
dec
or
xor
xor
nop
jbe
ds
adc
nop
mov
cs
jp
cli
sbb
mov
pop
push
jns
roll
jne
icebp
out
mov
stos
sti
aaa
pusha
xchg
popf
aas
or
lods
clc
orb
lret
fdivrs
add
adc
xchg
lds
dec
mov
sbb
repnz
push
out
lods
jecxz
fiaddl
jle
xchg
adc
pop
mov
jmp
sub
out
iret
cwtl
jo
jmp
mov
cwtl
scas
push
mov
fwait
push
jge
cmp
mov
cmpsb
lcall
cmp
jb
out
les
mov
fildl
push
cld
js
jge
sub
scas
adc
cli
add
cld
cmp
jmp
adc
push
mov
lea
lahf
ss
clc
mov
mov
mov
into
aaa
pop
in
fwait
push
in
mov
icebp
test
jae
push
xor
mov
mov
add
popf
clc
sbb
in
movsl
popa
pop
orb
cmp
push
addl
inc
pop
adc
mov
je
xchg
je
sub
pop
aaa
mov
imul
cs
jbe
movsb
andl
sbb
inc
mov
dec
test
push
inc
bound
sub
jg
add
xor
push
sub
cmp
inc
pop
push
sbb
mov
ss
push
arpl
jl
pop
xchg
push
cmp
push
xor
jecxz
or
ficoml
cmpsb
xor
mov
xor
cwtl
imul
data16
push
add
push
adc
cmp
jl
lret
insl
push
pop
shl
dec
in
test
inc
outsl
sti
xchg
ss
pop
xchg
inc
jo
inc
sbb
inc
mov
aas
std
mov
aaa
xchg
psubq
icebp
movsl
test
and
mov
mov
in
jmp
test
fiadds
adc
test
loop
mov
rcl
mov
sub
mov
repz
cmp
out
xor
subb
test
xchg
lret
movsb
sbb
fldcw
int
leave
jo
jg
sbb
imul
adc
pop
and
mov
pop
add
mov
mov
cmp
nop
mov
sbbb
dec
pop
push
and
pop
das
xor
lret
pusha
mov
mov
mov
pusha
xchg
mov
cmp
mov
jbe
sahf
add
jge
cmp
mov
push
decb
ret
mov
mov
adc
sub
cmp
cmc
adcb
call
mov
in
imul
mov
mov
inc
xlat
add
insb
ljmp
mov
repz
pusha
push
jg
cmp
mov
xlat
repz
test
or
mov
pop
sbb
xor
add
xchg
icebp
dec
add
test
add
pop
sahf
cwtl
xor
imul
push
scas
adc
in
xchg
dec
xchg
or
mov
mov
mov
or
sub
xchg
test
fcomps
xchg
mov
mov
mov
cmpsl
inc
adc
inc
pop
xlat
push
xor
cmp
cmp
mov
cwtl
push
cwtl
nop
pop
jmp
jmp
les
jns
stos
incl
mov
and
ret
mov
inc
jle
popf
adc
rol
lods
imul
dec
mov
into
shll
out
and
push
in
mov
pop
sub
aad
sub
fimull
and
or
dec
mov
fdivl
pop
lahf
cltd
jb
fcoml
dec
test
sub
negl
lods
cmp
and
adc
dec
or
xchg
and
jns
std
enter
xor
fldenv
mov
stos
sub
ret
sbbb
incb
fdivrp
fwait
sbb
repnz
fmull
cmpsb
in
pop
bound
rcll
dec
pop
stc
rcrb
mov
inc
ljmp
mov
repnz
js
push
out
dec
push
push
jge
ss
stc
jb
or
scas
lods
sub
aad
pop
in
mov
jb
mov
pop
std
pusha
or
jle
dec
stos
xchg
add
mov
pop
aas
xor
and
jmp
dec
sub
adc
xor
jge
mov
adc
pop
and
js
xchg
aam
std
test
sub
lds
ret
cmp
lea
xchg
iret
mov
push
add
jbe
mov
hlt
pop
test
nop
imul
hlt
inc
or
and
das
xor
repnz
ret
loop
mov
push
inc
rorb
mov
cmp
cmc
cmp
mov
inc
pusha
addr16
xchg
or
pushf
dec
dec
das
push
test
shrl
dec
mov
int
mov
stc
loope
lea
mov
imul
inc
lcall
enter
mov
clc
and
sub
jp
jns
or
sub
int
insl
test
mov
sbb
sbb
cs
neg
jns
push
roll
or
enter
jnp
pop
xchg
mov
dec
pop
add
stos
arpl
movsl
mov
adc
xor
inc
stc
repz
mov
xchg
push
push
jge
xchg
and
adc
cld
and
cli
pop
clc
divl
es
sets
push
inc
pop
pop
mov
add
out
fadds
ds
cmp
into
dec
adc
mov
enter
sbb
movsl
pop
push
mov
mov
push
enter
inc
mov
xor
pop
jno
pop
sahf
aas
mov
mov
and
in
clc
ja
lods
ret
adc
ficompl
gs
sub
jne
out
ljmp
popf
dec
cwtl
inc
in
test
js
dec
mov
das
push
pushf
mov
stos
shll
jg
or
or
jns
sahf
pop
add
lcall
add
popf
cmp
mov
add
cmp
dec
sub
mov
into
ficomps
sub
mov
pushf
mov
shlb
shl
cmp
js
cmp
xchg
loop
sbb
aaa
or
iret
je
int
mov
pop
adc
cli
xchg
cmp
cmp
mov
in
les
mov
pusha
add
fisttps
test
test
pushf
orb
and
jle
push
xor
or
jge
xor
add
or
add
iret
inc
and
inc
cmc
inc
jg
fidivl
lds
mov
iret
mov
and
push
cwtl
in
mov
sbb
or
inc
js
add
push
fcmovnu
sbb
sub
test
xchg
adc
ss
das
lahf
mov
aaa
push
pop
mov
xor
mov
jnp
push
or
pop
dec
jg
inc
daa
xor
sbb
dec
inc
xchg
mov
int3
mov
push
sbb
or
dec
push
mov
es
insb
mov
jne
xor
or
inc
cmpsl
push
repnz
scas
cmp
ja
shll
lock
mov
or
into
xchg
sub
jne
push
subl
dec
pop
inc
pop
aas
popa
insb
das
xchg
mov
push
pop
fisubrs
out
es
mov
lds
scas
hlt
adc
push
jnp
jno
add
aam
jg
mov
xchg
mov
cli
decl
ret
imul
mov
sbb
inc
cwtl
xchg
int3
dec
xor
xor
xor
stc
jle
mulb
adc
jg
test
repnz
jl
fstps
std
and
push
int3
pusha
outsb
mov
ficoml
hlt
lret
and
mov
in
daa
aas
add
mov
daa
popf
jo
mov
test
test
adc
mov
lret
push
sub
jp
in
je
mov
xchg
repz
pop
nop
inc
cmp
pop
jb
dec
jle
sub
scas
xor
arpl
lods
pop
cmpsl
pushf
xchg
adc
push
pop
imul
hlt
cmp
adc
loop
bnd
inc
stc
inc
mov
fldt
or
adc
loope
jmp
pop
cli
rolb
ljmp
gs
fstpt
mov
lea
push
in
mov
inc
clc
lahf
or
scas
add
sbb
xchg
mov
xor
mov
fcomi
or
sub
ss
xor
lret
aaa
in
add
std
xor
nop
pop
push
jno
mov
sbb
cmp
adcl
notl
icebp
int
dec
jnp
sub
push
movsb
scas
xchg
jne
out
push
jl
add
cmp
or
adc
xchg
adc
shlb
sub
test
imul
push
inc
push
xor
aam
lock
stos
add
or
out
ljmp
ror
xor
aas
cmp
ret
ljmp
xchg
cmp
fidivs
jae
push
stc
xor
jno
pusha
ja
fcmovnb
cmp
nop
mov
es
enter
or
push
xchg
pop
nop
and
pusha
jmp
mov
sbb
or
pop
dec
push
movsl
push
sub
xor
adc
leave
xchg
mov
push
imul
or
push
push
jnp
xchg
pop
dec
std
scas
xor
repz
sbb
lcall
test
adc
cld
mov
adc
data16
mov
in
pop
dec
dec
stos
sbb
int3
aam
mov
inc
lds
popa
movsb
repz
and
mov
out
rcrl
dec
inc
clc
dec
js
mov
jo
repz
dec
out
outsl
jns
cld
jmp
inc
int3
int3
ret
idiv
inc
xchg
mov
xchg
pop
jo
int
lods
ret
lret
push
and
cmc
in
jne
out
push
sbb
mov
shrd
mov
int
scas
es
jns
cvttps2pi
inc
bound
in
cli
xchg
and
jnp
std
sbb
cmpsl
dec
sbb
jo
stc
fnsave
add
pop
imul
fsubl
rorb
js
mov
mov
lea
cmp
sbbl
clc
xchg
or
sub
pop
pop
push
add
mov
gs
dec
xlat
pop
inc
ds
push
orl
and
int
ror
imul
push
lahf
mov
push
dec
stos
or
test
mov
mov
xchg
xor
push
test
sub
outsb
mov
in
jl
and
loope
or
mov
or
fisttpl
pop
pop
lcall
mov
and
jp
popa
push
and
frstor
xchg
inc
mov
cmp
inc
add
jno
sbb
jns
dec
dec
sbb
add
stos
add
dec
into
mov
ficomps
or
mov
sub
cli
xor
mov
xor
lahf
xor
xchg
icebp
mov
cmp
xchg
js
vmread
stos
mov
pushf
mov
fistps
cmp
cmpsl
pop
ds
clc
lahf
sub
xor
or
repnz
test
adc
mov
sub
in
loopne
shl
je
dec
nop
divb
fwait
sbb
nop
jl
dec
jmp
mov
sbb
adc
fcoml
fcmovne
leave
mov
scas
sub
subb
jecxz
out
pop
and
push
cs
cmp
sbb
scas
das
je
in
inc
clc
mov
push
cmp
jmp
jb
mov
adc
shlb
xchg
mov
lahf
mov
mov
in
adc
jge
movsl
push
xchg
and
loop
in
shr
xchg
mov
into
int
adc
adc
lds
sub
add
jnp
pop
and
mov
lret
add
mov
jle
jo
outsb
or
mov
mov
loope
cmp
xor
in
scas
test
jge
or
mov
dec
pop
fsubs
out
loop
jp
icebp
into
cmc
xchg
adc
jnp
fdivrl
cld
sbb
fucomip
sub
in
outsb
sub
test
sbb
mov
ljmp
pop
fisubs
lahf
xor
sahf
inc
xchg
scas
jns
mov
stos
or
sbb
cmp
adc
loopne
repnz
cld
mov
movsb
and
iret
xchg
rcll
cmp
ljmp
sbb
shll
jl
jmp
add
cltd
inc
pop
jl
in
dec
add
out
jge
add
push
jmp
inc
xor
mov
xor
push
and
lds
cmp
adc
adc
loop
xchg
hlt
leave
aaa
and
jmp
and
or
mov
and
add
cmp
aad
and
enter
inc
cld
pusha
cld
jge
and
test
sbb
mov
and
test
push
cwtl
xor
test
mov
iret
dec
xchg
adc
data16
ljmp
lds
aas
in
andb
dec
push
mov
xor
repz
fists
adc
inc
ds
jmp
cs
push
lret
ret
adc
out
sub
aaa
sbb
leave
mov
sahf
adc
out
fiaddl
push
jae
inc
int3
and
or
ja
arpl
movsb
cmp
test
xorl
and
sub
sbb
xor
dec
insb
push
pusha
mov
pop
or
dec
xor
sbb
sbb
bound
in
call
hlt
aas
int
rcl
sub
nop
lock
scas
cmp
shrb
stos
clc
int3
pusha
sub
je
repnz
lret
xor
push
aam
xchg
sbb
inc
aam
xor
in
mov
int3
enter
sbb
or
in
sti
jecxz
out
jns
sbb
or
add
and
arpl
jp
pop
mov
add
sbb
les
cmp
fwait
call
lret
out
push
xor
stos
sub
or
push
leave
popa
data16
xchg
movsl
lea
jo
fwait
js
cmpsl
out
icebp
fwait
pop
rcll
mov
push
push
sub
fildl
pusha
mov
xchg
jle
andb
rolb
add
cmp
inc
sbb
sarb
mov
loope
cmpsl
data16
inc
mov
int
fsubrp
call
fimuls
mov
and
flds
cmp
in
es
mov
ljmp
rclb
add
mov
in
cli
xchg
popf
adc
adc
push
loopne
adc
scas
or
add
in
mov
dec
and
mov
lea
fidivl
decb
aad
insl
cmp
fmull
fidivrs
lods
add
testl
in
push
xchg
sbb
loope
mov
push
xor
or
hlt
cmpsl
rol
and
add
cmpl
in
pop
mov
mov
outsb
dec
leave
mov
out
push
pop
xchg
sub
cli
jbe
dec
sbb
mov
sahf
insb
ss
adc
dec
xchg
rorl
or
pop
add
jg
bound
push
int
das
sbb
jne
lcall
sbbl
sub
and
xor
cwtl
sub
inc
lods
notl
ds
push
mov
push
dec
mov
push
pop
mov
mov
mov
orb
dec
jns
mov
cli
sub
pusha
adcb
das
jb
xlat
cmc
sbb
mov
subb
notb
push
dec
in
jae
cs
repz
xchg
add
xchg
xchg
pop
ljmp
pop
push
jp
lods
mov
cld
dec
add
mov
das
shll
cwtl
je
push
clc
and
addr16
jo
xlat
push
adc
movsl
push
cmpsl
shlb
adc
cmp
fcomip
loope
dec
pop
add
inc
jg
sub
lret
mov
or
jmp
adc
jbe
inc
movsl
xchg
sub
adc
pushf
sahf
and
adc
fwait
mov
in
or
or
xor
cmp
push
movsl
pop
scas
mov
bound
popa
and
in
jo
mov
cs
mov
push
jge
lcall
adc
adc
std
jnp
mov
stos
dec
mov
pop
or
test
loopne
stos
lock
push
push
adc
xor
std
dec
fs
or
int3
cltd
cmp
sub
lret
jo
imul
add
jg
loope
or
call
in
fildl
clc
and
icebp
cwtl
push
stc
movsl
sbb
outsb
or
int
xchg
fwait
cld
cld
mov
inc
xorb
mov
ja
mov
fmuls
roll
dec
out
adc
xchg
push
enter
lret
addl
pop
inc
or
sti
repnz
cmp
push
cmp
repz
into
fst
sub
jo
xor
sub
xor
sbb
cmpsb
push
adc
dec
pop
jp
inc
into
jne
iret
ds
mov
mov
cmpsl
rolb
push
and
dec
mov
call
or
in
sub
sbb
sbbb
in
xchg
sbb
cmpsl
inc
xchg
sbb
rcrl
ja
and
mov
icebp
jne
sbb
das
dec
mov
sub
adc
or
clc
ljmp
and
out
pushf
loope
je
daa
xchg
mov
ss
mov
push
nop
push
icebp
jnp
mov
mov
leave
mov
inc
out
inc
inc
hlt
cmp
jno
lahf
cmp
test
rorl
mov
pop
dec
sbb
aam
aad
lock
add
sbb
lock
lret
mov
jge
xchg
cmpsl
adc
movsb
jg
cli
rep
das
adc
push
and
pop
icebp
mov
mov
ljmp
std
cmp
test
dec
mov
ret
dec
mov
mov
iret
inc
jae
mov
pop
xor
cmp
stc
bound
sub
fimull
jge
jge
frstor
mov
sbb
gs
add
cmpsl
icebp
push
inc
push
pop
push
adc
mov
mov
lods
fimull
icebp
out
pushf
fsubr
stos
sbb
mov
inc
dec
ret
sbb
lret
sbb
push
xchg
ja
adc
lods
imul
mov
xor
sahf
call
cli
push
adc
adc
call
and
dec
gs
call
and
jp
loopne
cmpsl
shl
cltd
pop
int3
xor
outsl
dec
mov
push
les
out
sahf
lea
enter
test
inc
fwait
jnp
xchg
dec
insl
jns
insl
xchg
jecxz
leave
scas
mov
lahf
sar
push
push
mov
adc
aam
jb
ficoml
nop
jp
push
loopne
insl
sub
jae
and
mov
mov
popf
pop
int3
jno
gs
adc
sahf
popa
sbb
or
mov
icebp
daa
je
adc
dec
sbbb
and
cmp
xchg
shll
movsl
jecxz
cli
pop
and
data16
fs
mov
inc
das
inc
fcompp
and
dec
out
xchg
sub
icebp
xorb
stc
dec
pop
mov
std
xchg
dec
fnstenv
xchg
xchg
inc
xor
inc
jmp
addr16
movsl
and
inc
lahf
xchg
insb
js
fcmovu
and
hlt
mov
inc
arpl
imul
xor
pop
mov
int
inc
sahf
mov
xor
test
mov
jmp
xchg
sahf
xchg
movsl
cltd
out
jns
stc
stc
enter
clc
xchg
adc
lods
je
mov
mov
jp
ds
xor
sub
jae
sub
xchg
js
mov
ror
test
andb
cmp
jg
in
adcb
and
rcrl
mov
popf
out
js
lods
add
fistl
inc
fdivs
jp
jmp
add
dec
mov
sarb
adc
hlt
mov
pop
adc
pop
jmp
jne
or
jo
mov
sub
xchg
jge
cmp
or
mov
cld
xor
dec
jo
ljmp
push
ljmp
sub
xor
push
enter
icebp
lret
loop
in
inc
icebp
xchg
pop
int3
rcl
add
sub
adc
sub
mov
lds
ds
inc
loop
xchg
jbe
outsb
and
hlt
cld
pop
test
setnp
and
incb
mov
scas
push
xorl
sub
in
iret
xor
cmpsb
xor
repnz
mov
fimuls
fisttpl
mov
sahf
repnz
inc
inc
call
xlat
aaa
sbb
adc
out
outsb
clc
rcll
push
sbb
cltd
paddusb
rorb
and
inc
std
mov
add
gs
out
les
xchg
adc
sbb
fidivs
adc
pusha
adc
in
pop
xchg
shll
fs
dec
mov
push
add
cmp
pop
pushf
test
or
daa
ljmp
cmp
jbe
sbb
mov
cmpl
mov
push
xor
and
dec
and
xor
or
ljmp
push
out
xchg
pop
or
push
pop
test
imul
mov
mov
lahf
loopne
xlat
mov
mov
dec
jp
ret
sar
mov
xchg
ret
push
or
cmp
mov
pop
or
adc
mov
dec
xchg
add
pop
push
pop
sbb
hlt
cltd
andl
cltd
adc
insl
aam
jl
dec
jns
inc
and
in
or
xchg
sbb
cs
jecxz
call
push
scas
push
cmpsb
adc
imul
xchg
mov
aad
cwtl
pop
mov
aaa
jo
push
je
mov
rcrl
or
add
lods
mov
clc
pop
adc
inc
jno
dec
adc
push
push
in
xchg
stc
push
cmp
jb
or
mov
rclb
in
insl
xor
cmpsl
and
dec
push
sbb
or
dec
repz
int
mov
add
xor
std
mov
sahf
movsb
inc
xor
addr16
in
sbb
iret
out
out
adc
les
movsl
push
fstl
pop
jl
out
mov
addb
jl
mov
fs
in
fildll
mov
ljmp
adc
repnz
sbb
cmp
inc
xchg
inc
fildll
movsb
rclb
andb
int3
mov
mov
scas
ljmp
mov
in
mov
rolb
into
leave
cmc
xchg
mov
fistpll
repz
js
adc
mov
leave
aam
push
push
push
insl
xorb
nop
cli
lock
lods
out
xor
test
repnz
aad
dec
xorb
movsb
jne
pop
adc
and
xor
int
shll
lret
inc
pop
les
xchg
shll
sub
inc
stos
scas
or
xchg
mov
cs
movb
repnz
pop
sbb
cwtl
jo
or
xlat
dec
add
out
mov
sbb
jnp
cmpl
adc
mov
cs
mov
sbb
adc
sub
aaa
jmp
inc
in
mov
cmp
jl
fnstcw
insl
pop
jmp
mov
and
and
out
sub
sub
mov
shll
and
cmp
shl
fistl
jmp
jl
xchg
jecxz
xchg
xor
cmpsb
push
xor
sar
mov
mov
loope
pop
dec
and
loopne
xchg
fcoml
int
and
rorw
inc
mov
push
adc
inc
sti
push
dec
cmpsb
cs
aaa
mov
mov
sub
lcall
cmpsl
mov
stc
test
test
mov
pop
mov
jb
sub
xor
dec
int3
in
add
js
pop
or
cmp
arpl
aaa
add
xor
je
adc
inc
mov
sub
out
stos
and
mov
in
rorb
fwait
xchg
adc
das
scas
adc
pop
dec
jg
or
push
xchg
inc
xchg
push
xorb
std
xchg
mov
and
aad
push
pop
sbb
lret
std
dec
outsb
inc
lret
mov
orl
scas
sbb
lock
ja
cmpsl
stos
and
jp
int3
into
lds
mov
mov
lea
test
mov
mov
sbbl
arpl
xchg
jo
addr16
lds
sbb
jecxz
cltd
cli
cmovs
shr
loopne
jge
mov
adc
insb
jl
das
lcall
imul
mov
sub
ja
xchg
lods
mov
sahf
cwtl
and
or
push
faddl
xor
imul
pusha
push
fsubs
add
psubq
and
aas
or
je
add
dec
cwtl
add
add
out
out
cmpsb
or
xor
setno
lods
xor
cwtl
cwtl
iret
cmp
sahf
mov
loopne
xchg
call
or
cmp
cmpl
test
lret
mov
sub
fiadds
nop
pushf
ds
ds
lock
dec
gs
pop
pop
mov
and
sbb
cmc
adc
mov
dec
sub
fs
xchg
ret
scas
sub
mov
xchg
inc
mov
jmp
or
or
rcrl
xchg
cld
js
ret
sub
sbb
loopne
ret
mov
lcall
pusha
xchg
mov
stos
mov
push
movsl
shlb
xor
pop
dec
adcb
pushf
push
inc
nop
mov
sbb
bound
mov
cli
mov
test
and
addr16
inc
inc
lods
jo
mov
mov
cli
call
stc
je
mov
lret
inc
pop
jae
mov
ss
adc
out
xorb
into
dec
insl
popa
iret
inc
xchg
xchg
mov
and
fldl
outsb
mov
rolb
mov
or
stos
mov
mov
mov
cmp
scas
pop
adc
and
std
stos
cmp
jge
pop
loope
add
sti
scas
push
cmpsb
and
jmp
fwait
push
shlb
xchg
xchg
add
popf
sbb
int
xchg
in
push
stos
sbb
iret
ljmp
lcall
aad
pop
sbb
mov
bnd
dec
and
lret
imul
fisubrl
jg
or
ret
movsl
test
push
xchg
clc
and
pop
aaa
lcall
shrl
es
mov
sbb
pop
push
insl
xor
mov
xor
or
and
dec
ja
push
pop
jecxz
loopne
xor
pop
dec
add
stc
jno
inc
inc
ss
sbb
imul
pop
push
inc
imul
push
mov
sub
mov
int3
mov
dec
outsl
cmc
out
cltd
mov
pop
xchg
roll
fwait
imul
sub
cmp
movsl
xor
mov
fwait
sar
dec
jl
inc
in
adc
xchg
mov
mov
push
mov
and
pop
test
leave
mov
cmp
xchg
inc
or
in
lea
loop
shr
pop
pop
lods
mov
sbb
push
push
push
pop
cmp
jle
fistl
int3
push
es
pop
and
iret
pushf
push
lods
push
inc
pop
ljmp
clc
int
mov
lods
fstl
lea
es
sub
pop
ss
pop
mov
and
cwtl
or
icebp
push
jae
inc
call
mov
jae
and
xor
xchg
inc
mov
xor
ja
aad
rcrb
push
pop
and
orl
jl
xor
inc
cmp
mov
lahf
fcmovb
adc
pop
push
fbstp
push
inc
mov
adc
pop
sti
xor
inc
rorb
ret
filds
imul
xchg
aad
jns
fisubrs
scas
push
cmpsl
push
insb
stos
mov
imul
rep
cmp
inc
cmp
mov
jl
xor
adc
inc
jmp
sub
sbbb
inc
test
test
mov
lcall
inc
add
iret
sub
jae
pop
nop
xchg
dec
hlt
sbb
std
je
pop
sbb
dec
dec
xchg
aam
stc
lret
ja
adc
add
sbb
lea
lret
icebp
pop
fistpl
mov
test
hlt
mov
mov
in
lret
and
mov
in
aam
insl
mov
pop
mov
mov
cmp
ret
lods
out
nop
push
mov
popa
adc
ret
mov
aas
mov
rcrb
jnp
xchg
std
rcl
push
popa
mov
scas
jae
pop
ljmp
movsl
shlb
jne
sub
fisubl
xor
push
lods
sbb
dec
fistpl
xor
inc
add
xchg
mov
xchg
iret
jae
dec
rclb
cs
lods
ljmp
xchg
outsl
rorb
push
call
cmpsb
mov
inc
dec
sub
pop
mov
dec
push
jne
or
iret
sub
pop
mov
sti
jnp
cmpl
aad
insl
lss
inc
xchg
out
mov
mov
jle
addr16
scas
sarl
inc
xor
xor
inc
mov
ds
mov
fucom
or
fldcw
je
dec
xchg
out
and
lret
push
jnp
outsb
add
mov
push
aas
je
xor
inc
pop
outsl
push
insl
mov
scas
enter
cli
cmp
add
and
icebp
adc
lret
cmpsb
fwait
icebp
xlat
jo
cmpsl
data16
hlt
sarb
lret
jge
adc
inc
sahf
fists
sar
dec
mov
dec
xor
addr16
scas
dec
andb
cmp
push
test
dec
mov
stos
pop
outsb
mov
inc
add
inc
out
jmp
ret
neg
push
stc
cmp
sbb
icebp
dec
arpl
xlat
sub
jae
cli
xchg
adc
in
fdivrs
leave
push
popf
push
xor
test
outsb
inc
push
outsl
lock
cmc
dec
cmpsl
push
test
outsb
cltd
adc
outsl
cmp
out
mov
rcr
cltd
outsl
roll
fwait
sbb
inc
test
imul
fsubrs
in
stc
or
jne
xlat
mov
jno
es
add
cmpsl
and
sbb
dec
call
adc
cmp
inc
shl
cmc
pop
fstpl
push
aad
frstor
adc
sahf
dec
das
pop
outsl
ret
pop
xchg
repnz
out
jg
sub
pushf
jae
push
inc
fists
outsl
out
imul
mov
lcall
je
movsb
mov
jle
xchg
repnz
outsl
mov
add
lock
or
pop
pop
inc
sub
mov
and
int
push
mov
pushf
cmp
pop
push
sub
sarl
adc
and
divl
push
mov
mov
mov
dec
push
test
popl
xchg
or
lret
jg
adc
lret
jae
sbb
movsb
mov
mov
sbb
andl
arpl
out
and
jne
jbe
insl
dec
adcl
int
cmc
adc
inc
or
xchg
jmp
jne
cmp
movsb
clc
test
std
push
pop
ret
sub
lret
add
int
sub
sbb
xchg
cmp
xchg
mov
fiaddl
xchg
adc
in
jle
cmpb
ds
sahf
inc
mov
xchg
popf
movsb
rol
lret
mov
push
inc
loop
cltd
int3
mov
int
or
loop
bound
and
xor
adc
mov
iret
push
mov
ficoms
into
xor
jge
ret
sbb
add
mov
repz
movsl
mov
out
mov
pusha
inc
cmpsl
mov
inc
jae
cmp
jmp
sbb
jl
mov
adc
fsubs
popa
xchg
and
jno
loop
adc
adc
or
and
dec
add
out
dec
jnp
push
xor
shll
push
fimull
test
iret
icebp
adc
xor
push
xor
aam
mov
mov
imul
cli
stc
mov
stc
movaps
inc
xor
into
pop
mov
idivl
add
push
shll
shr
rclb
loop
xor
jo
mov
movsb
pop
imul
lahf
dec
inc
pop
xchg
mov
lret
mov
jns
push
sbb
jp
mov
fdivr
rclb
rol
xor
cs
stos
cmp
xchg
inc
cwtl
mov
push
push
ja
cmp
adc
mov
sbb
mov
mov
hlt
cmp
das
inc
cli
xchg
clc
and
sbb
pop
pushf
rolb
std
fs
imul
iret
call
outsl
scas
xor
daa
lret
adc
jl
les
stos
add
add
es
mov
pop
out
push
loope
bound
lret
mov
sbb
sbb
mov
push
inc
mov
adc
xchg
movsl
in
sahf
adcb
lahf
icebp
aad
pushl
and
ss
sub
lods
cmpsl
add
pop
pop
mov
add
adc
arpl
pop
sbb
cld
bound
std
push
dec
or
push
add
xor
sbb
roll
inc
aaa
sahf
jl
xchg
enter
xchg
cmp
add
aaa
cmp
ljmp
xchg
jo
xchg
insl
out
adc
repz
push
and
pusha
int
or
mov
cmp
mov
cltd
sub
mov
mov
lret
xchg
mov
pop
mov
cld
xor
icebp
push
orb
mov
cmp
mov
shll
popa
xor
fstl
adc
mov
imul
test
mov
or
movsl
sbb
insl
fcom
aam
mov
fisttpl
dec
ljmp
call
adc
repz
jae
sahf
push
inc
sub
add
jb
mov
push
scas
xlat
jmp
rolb
je
and
stc
mov
shll
es
das
ja
xlat
roll
and
adc
push
jmp
jmp
pop
sbb
cmc
jg
call
or
data16
mov
fdivs
jle
pop
cmp
xchg
lds
push
scas
loop
push
in
and
sub
repnz
mov
test
cmc
add
or
sbb
adc
lds
sub
or
es
ret
push
insb
mov
fstl
mov
inc
leave
ficompl
in
inc
mov
ret
mov
lahf
fstl
inc
inc
push
jp
mov
sbb
nop
xor
bound
add
or
xchg
lahf
es
adcb
push
es
mov
mov
clc
add
sub
roll
sbb
add
add
repnz
bound
cmp
mov
out
lea
adc
mov
and
cltd
xchg
aad
stos
mov
mov
jno
or
pop
dec
cld
leave
pop
int3
stos
inc
or
out
push
sub
cmp
push
out
test
pop
xchg
mov
mov
fs
mov
stc
cmp
jne
movsl
adc
es
cmp
and
imul
icebp
sbb
icebp
imul
sbb
rcll
mov
test
push
stc
sbb
fnstenv
aaa
ret
pop
scas
mov
lahf
pop
adc
sub
orb
dec
mov
fdivl
jbe
inc
nop
jle
push
jno
mov
testb
dec
mov
lcall
sbb
cs
xchg
xor
add
call
mov
gs
jg
pop
mov
into
inc
mov
jl
push
mov
pop
jmp
mov
rcr
fildll
pop
enter
js
push
mov
xchg
pusha
das
mov
cmpb
je
cmpsb
out
dec
adc
imul
out
cwtl
sbbl
push
jne
adc
jae
clc
xchg
sub
pop
in
pop
insb
out
add
xor
fwait
cs
dec
lds
shlb
push
cmp
leave
jnp
xchg
ffreep
aad
xchg
shl
shll
loopne
xor
inc
sub
scas
adc
push
mov
add
nop
shl
in
fcoms
jle
mov
leave
imul
sbb
jo
push
inc
add
insb
xchg
int3
add
out
cmp
dec
dec
xor
insl
loop
in
enter
ret
push
ljmp
mov
aaa
push
fdivr
cmp
mov
cmpsl
xchg
loop
imul
movsl
and
scas
pop
jge
sub
mov
sbb
push
push
mov
xchg
xor
lcall
mov
lret
es
mov
mov
sarb
jg
sub
subl
in
cmp
pop
jnp
sub
mov
xchg
push
sub
subl
pusha
outsl
or
ljmp
cmp
int
int3
sbb
aas
push
adcl
add
sahf
push
xor
push
mov
and
aam
mov
scas
dec
mov
pusha
popf
shl
mov
repz
jl
jle
imul
in
ss
mov
nop
nop
repz
pop
pop
pushf
cmp
sub
or
aas
and
out
push
in
sbb
fildl
xchg
xor
xor
pop
xor
inc
stos
ss
lock
mov
rcrb
cmp
and
incl
aam
loopne
dec
fstpt
mov
xchg
addr16
pop
lds
aam
adc
test
or
xor
lret
movsl
dec
pop
mov
not
push
dec
pop
jecxz
in
or
xlat
stos
pop
mov
push
sub
push
push
insl
dec
add
mov
mov
inc
dec
out
movsl
xchg
das
mov
dec
movsl
mov
fyl2x
sbb
fsubl
lds
adc
jg
cmc
movsb
sbb
inc
inc
je
ljmp
ja
lcall
fldenv
jmp
mov
cmovp
pop
add
cmc
push
sbb
or
jae
pop
sahf
movsb
cmp
jl
mov
arpl
sub
pop
cli
in
mov
sbb
push
stos
cmpsb
xchg
js
jae
or
iret
out
xor
scas
mov
jae
je
arpl
and
and
rolb
mov
cmp
jbe
fidivrl
loopne
push
adc
outsb
icebp
mov
dec
xchg
mov
cmpb
or
test
fsubrl
xchg
stos
pop
lods
sub
popl
mov
dec
fsubrs
jl
test
test
mov
jmp
mov
xor
cmpsb
pop
jo
lods
sub
dec
dec
fidivrs
movsb
int
fcoml
int
inc
pop
mov
or
xor
xchg
jge
push
sub
cmp
adc
adc
add
pop
adc
andb
push
cwtl
dec
jmp
inc
insl
mov
sbb
call
jl
jge,pt
in
mov
adc
cmc
add
mov
dec
mov
pusha
jge
mov
mov
jle
stos
cmp
popa
inc
pop
leave
lret
ljmp
adc
sub
je
nop
mov
xor
dec
jle
popfw
dec
push
inc
push
mov
jb
popf
movsl
fisttpl
add
shlb
rcrb
sub
xchg
mov
cmc
xor
push
mov
sub
cltd
fldenv
in
push
dec
movsb
sub
js
xchg
mov
push
mov
mov
dec
dec
sub
mov
push
scas
xchg
cmpsb
or
jmp
shrl
inc
imul
fcompl
push
or
sbb
jbe
in
movsl
push
sub
out
cmpl
ljmp
aaa
and
outsb
neg
inc
lahf
je
std
jo
xchg
push
stos
jns
aas
out
mov
sbb
mov
add
call
aad
mov
mov
mov
jge
repnz
push
jecxz
fwait
ss
out
out
or
notl
std
sahf
pushf
movsl
jle
jp
andb
das
sub
sbb
movsl
cltd
mov
sub
jge
xchg
xor
out
push
mov
cs
or
ja
inc
ficoms
jno
fidivrl
push
lock
aad
scas
fisttpll
push
lds
adc
ret
xchg
mov
xor
fs
negl
or
ja
fisttpll
mov
adc
lea
inc
xchg
into
andl
mov
and
push
add
mov
cmp
sahf
rcrl
imul
mov
lea
movsb
es
ret
sub
out
stos
jl
pop
imul
or
shlb
into
dec
jns
imul
pop
mov
fcmovne
insb
mov
push
lock
xchg
cmpsb
jae
in
loope
jecxz
cmp
push
xchg
cmp
movsb
push
mov
cwtl
inc
or
scas
nop
lods
loopne
xor
add
out
cwtl
test
mov
js
jle
inc
mov
mov
mov
test
add
cs
cmpsl
adc
imul
lods
js
xor
jge
fcom
xchg
sub
xchg
dec
mov
out
add
outsl
push
add
and
outsl
jae
xor
pop
sbb
sbb
add
fcomps
pop
jmp
das
mov
in
mov
mov
sbb
xor
repnz
mov
imul
push
imul
xor
dec
dec
fs
pop
lret
andl
inc
sti
inc
and
pop
mov
xor
sub
aaa
sub
mov
cmp
outsb
dec
sbb
out
imul
cmp
inc
xor
mov
mov
out
jo
inc
fstpl
int3
dec
shrl
pop
xchg
adc
xlat
lahf
jb
enter
movd
insl
xchg
rol
stc
rolb
pop
adc
scas
lock
cld
out
fcoms
jbe
imul
cmpxchg
jns
lahf
movsb
and
xor
inc
in
pushf
push
xchg
push
xorb
ja
sub
dec
test
add
test
inc
fildl
stos
bound
aad
fwait
daa
cmpsl
dec
aaa
shr
add
shll
xor
fs
aam
xchg
negl
inc
in
addr16
mov
ret
in
adc
xchg
xlat
test
loop
dec
ja
clc
push
push
pop
pop
pop
insb
cwtl
jecxz
jecxz
mov
out
inc
test
lds
inc
dec
bswap
adc
inc
jmp
xor
and
adc
jmp
pop
pushf
imul
inc
and
or
pop
stos
dec
add
or
or
add
jl
push
daa
pop
jle
dec
or
adc
jo
adc
jae
mov
cltd
psllw
repnz
iret
mov
jnp
sbb
daa
mov
fcompl
pop
push
cwtl
mov
aaa
ss
nop
fsubrp
shrl
mov
shl
sub
lcall
jg
add
or
sarl
insb
pop
mov
mov
sbb
gs
adc
inc
mov
rol
dec
test
xor
rorb
es
icebp
lahf
xor
cltd
mov
jno
fld
scas
sbb
sbb
or
iret
and
or
jmp
push
push
repnz
adc
clc
ja
xchg
sbb
lods
jns
xor
xchg
mov
sbb
aam
nop
sub
in
mov
mov
insl
mov
xlat
leave
lahf
sub
int3
push
dec
popa
mov
nop
xor
das
adc
fnsave
mov
inc
mov
and
xor
lret
cmpsb
dec
popf
lods
inc
mov
scas
jg
aaa
add
jns
or
int3
sbb
xchg
rorl
stos
jge
sbb
push
repz
jmp
mov
mov
dec
fnstsw
jno
sbb
pop
outsl
daa
iret
imul
xor
jmp
outsb
jge
xchg
xchg
data16
rcrb
shll
xchg
fmul
mov
clc
and
xor
shlb
mov
lods
lea
fisubs
mov
or
icebp
rclb
icebp
lods
push
mov
ljmp
pop
fwait
nop
hlt
stos
dec
out
lods
push
shll
and
std
add
out
dec
and
inc
hlt
or
int3
push
iret
test
sub
push
inc
push
xchg
lods
daa
lcall
inc
push
push
int
add
jp
jg
int
xor
xchg
lock
xor
stos
cmp
mov
pop
mov
mov
aaa
and
idivl
jae
lds
sbb
hlt
mov
arpl
sbb
cwtl
in
subl
sbb
hlt
test
dec
mov
jno
test
jo
mov
je
repnz
out
cmc
int3
popa
dec
dec
pop
shl
mov
mov
in
xchg
inc
mov
cmp
mov
jb
push
jne
and
and
sbb
mov
sub
cwtl
into
jge
loope
lcall
out
dec
scas
dec
enter
dec
mov
inc
mov
arpl
mov
adc
outsl
mov
fidivrl
enter
test
hlt
jno
adc
mov
cmp
lea
inc
push
push
test
cwtl
dec
iret
loop
dec
sti
icebp
fimuls
sub
xor
scas
pop
lds
imul
dec
add
sub
and
jmp
leave
cs
out
es
pop
inc
testb
call
push
cmp
loope
jecxz
jns
add
movb
faddl
add
test
dec
sbb
xchg
adc
iret
bound
enter
jg
out
xchg
int3
add
mov
pop
lret
lcall
arpl
ret
mov
ret
loop
mov
sub
lret
or
adc
repnz
mov
dec
test
xor
or
lods
xchg
add
clc
adc
adc
in
rolb
lret
sbb
es
inc
rcrb
ret
dec
cmp
pop
sub
es
xlat
outsl
pop
and
push
repz
jle
clc
add
dec
orb
cld
add
cli
mov
xor
je,pn
je
fucomp
fisubs
jge
mov
imul
pop
fidivrs
adc
lcall
cli
insb
mov
mov
cwtl
aas
cmp
and
lds
mov
jnp
insb
popl
scas
rcrl
fisubrl
mov
es
in
out
mov
jns
adc
adc
cmpsb
sbb
sub
push
jg
lock
pop
and
and
fmull
fimull
pop
jo
fstl
xchg
inc
je
push
push
inc
mov
sbb
bound
add
pop
dec
push
xor
pop
jmp
sbb
jne
std
sub
add
movsl
loop
js
pop
xor
lods
fimuls
pushf
pop
aad
sbb
cmp
stos
mov
out
xor
jns
push
mov
fdivs
or
push
out
jns
pop
jns
mov
and
rcr
fdivl
inc
sbb
mov
je
or
xor
sarb
push
cmc
cld
mov
sbb
in
push
pop
inc
repz
mov
cwtl
enter
hlt
pop
fisttps
mov
lret
and
push
push
imul
jnp
cmp
repnz
mov
insl
push
aad
push
punpckhbw
ja
fldcw
xchg
and
mov
mov
shl
jns
inc
imul
push
std
rdpmc
ds
sarl
clc
scas
lods
lahf
cmp
mov
or
xchg
and
insl
es
jp
popa
stc
sar
int
push
inc
bound
adc
in
fstpt
dec
daa
enter
ja
adc
or
shlb
push
pop
in
lret
jae
jmp
nop
inc
mov
int
add
test
or
dec
add
pop
outsb
fisttpl
mov
jmp
mov
xorb
pop
sbb
cmovns
mov
into
outsl
test
lds
jl
and
add
dec
dec
test
ds
adc
add
dec
xchg
mov
sbb
popa
mov
mov
ret
xor
lcall
adc
sahf
add
mov
and
dec
cmpsb
jl
xor
insl
in
adc
add
jp
add
jo
outsl
ds
push
outsb
cmp
lret
push
das
ror
dec
test
jl
xchg
daa
xchg
stos
loopne
xor
rcll
mov
clc
add
pop
rcrb
push
push
xchg
push
rorb
jns
inc
dec
push
sub
sti
divb
pushf
xchg
xor
xchg
mov
dec
jg
pop
insb
into
nop
jp
and
inc
xor
xchg
dec
ljmp
movsl
scas
add
push
repnz
inc
or
iret
sar
lahf
push
shlb
pusha
aaa
push
mov
icebp
sbb
cmp
jo
popl
imul
repnz
je
mov
xlat
xlat
jno
dec
scas
push
movsl
jns
loop
sbb
arpl
sarb
push
pminub
test
mov
icebp
daa
sbb
test
neg
adc
mov
mov
jno
mov
test
sub
xchg
lea
repz
mov
dec
cli
pop
sbb
fstps
repz
jns,pn
pusha
add
sbb
dec
push
lods
pop
pop
push
cltd
leave
jp
sub
pushf
faddl
xor
ss
ljmp
adc
push
das
stc
lea
mov
push
dec
xlat
adc
ret
nop
cs
pop
dec
add
sahf
mov
pop
repz
mov
jne
mov
imul
inc
lahf
jbe
mov
adc
push
ljmp
sub
out
push
cmp
pop
inc
daa
aad
pop
cltd
sub
rclb
mov
fwait
and
add
and
mov
gs
fdivl
sub
fwait
daa
xchg
dec
psllw
popf
lcall
cmp
xchg
insl
xor
push
dec
inc
dec
xor
push
adc
dec
cmp
jno
push
adc
push
mov
mov
je
nop
mov
ljmp
popl
xchg
push
mov
out
ret
stos
pop
dec
pop
iret
and
mov
push
call
or
xor
mov
adc
lods
cmp
pusha
adc
std
dec
sbbb
push
add
daa
stos
mov
xor
lahf
daa
mov
dec
in
out
or
cld
das
lret
xor
xchg
xchg
daa
js
xchg
sbb
adc
outsb
and
jns
or
inc
sbb
in
mov
xchg
rclb
rcll
aas
rorb
nop
ret
movups
pushf
scas
push
add
mov
mov
mov
shlb
push
fcoms
mov
cmpsl
addr16
sahf
enter
mov
aad
shr
mov
cmp
push
mov
xor
mov
sbb
sbb
adc
cwtl
inc
push
mov
lret
adc
inc
imul
dec
aam
sub
imul
add
mov
jmp
fisttps
jo
pop
in
mov
orb
mov
mov
shlb
fs
cmp
mov
fs
jns
cmp
adc
xor
xor
imul
lahf
clc
sub
add
insl
xchg
mov
jnp
mov
xor
mov
insb
in
pop
lds
gs
clc
cmp
mov
adc
mov
xchg
cmc
lea
imulb
mov
mov
mov
dec
cmpb
divl
ljmp
aam
sti
testb
shrl
and
xchg
xchg
and
cwtl
je
sub
push
fs
stos
xchg
test
lods
pop
pop
xchg
or
xor
sub
push
jle
dec
sbb
dec
call
xchg
sbb
cwtl
pop
jno
mov
inc
push
test
jne
push
je
lds
movsl
pop
das
mov
push
aaa
aad
fs
jmp
jg
xor
sub
out
lds
cmp
sbb
fs
push
sub
pop
fildll
dec
insb
xor
out
sbb
cmc
pop
fildll
dec
loopne
dec
adc
out
mov
or
insb
dec
testb
mov
ficomps
call
ss
mov
andb
stc
mov
push
fstpl
in
mov
push
cmp
cld
or
incl
mov
pop
jae
cmp
inc
or
fidivrs
daa
mov
insb
sub
or
xchg
jp
adc
push
sbb
push
cmp
push
aam
sbb
jl
insl
dec
mov
aas
rcrl
push
ja
cmpb
negl
shrl
cmp
add
jne
int3
or
pop
dec
rolb
lods
flds
sub
sbb
jne
dec
in
inc
ds
lock
leave
mov
daa
xor
pop
lock
test
or
test
mov
rorb
movsl
jp
xchg
ja
cmp
es
push
push
dec
or
sbb
int
sub
adc
mov
aas
notl
pop
push
out
xor
mov
lods
clc
inc
push
lock
push
mov
jno
lds
adc
addb
jecxz
mov
mov
and
lods
lea
js
mov
lea
xlat
xor
repnz
int
and
mov
lret
pop
mov
ficoml
xchg
pop
adc
fs
in
pop
lock
xor
fisubrl
pusha
das
jns
in
cmp
test
or
stos
add
ds
pop
inc
insl
into
adc
je
mov
sbb
fs
mov
fsub
jmp
or
sub
inc
repnz
fstps
popl
mov
pop
push
lret
add
mov
pop
push
les
push
cmc
mov
and
dec
aaa
shlb
mul
cs
stc
jne
stos
out
rcrl
jae
adc
pop
int3
mov
mov
jge
fs
das
in
or
aaa
and
sbb
pop
lahf
xchg
test
int
sub
in
fs
dec
adc
dec
sub
call
inc
jp
pop
adc
adc
add
adc
dec
in
inc
adc
fs
mov
aam
or
imul
mov
inc
insb
pop
lret
cltd
ficomps
push
or
lcall
and
sbb
add
pop
jnp
out
mov
push
inc
mov
imul
add
xchg
fwait
scas
mov
ss
sbb
xlat
push
cli
mov
mov
push
jo
xor
xchg
mov
dec
mov
push
pop
pop
mov
arpl
sbb
jecxz
xlat
xor
cmp
adc
addr16
popa
shrb
jg
ret
inc
or
xchg
test
mov
cli
mov
pop
mov
repz
cmc
push
fiaddl
inc
mov
sbb
xor
cmp
mov
xor
sub
xor
dec
and
sbb
mov
in
f2xm1
and
pusha
push
imul
jb
shl
sub
int3
pop
lahf
outsl
cli
fs
ror
or
jae
ret
popf
sbb
or
stos
les
cmp
inc
pushl
out
pop
jbe
leave
dec
and
dec
add
test
inc
rorl
sub
ja
pusha
clc
sub
inc
mov
outsl
out
sarb
sbb
sti
popf
lahf
lahf
clc
cmp
or
movsb
imul
xchg
inc
pop
xor
faddl
clc
arpl
xchg
frstor
inc
dec
mov
repnz
mov
jge
xchg
xchg
or
jne
mov
jmp
setb
xor
mov
std
and
repnz
push
popa
test
lahf
xor
cmp
sub
ffreep
push
sbb
sbb
rcrl
dec
cmc
pop
mov
es
mov
and
ficoms
and
cmpsb
in
pop
xchg
jg
shrb
hlt
stos
xor
lcall
insl
addl
push
clc
dec
sbb
int3
add
cmp
xor
inc
idivl
push
scas
add
imul
mov
adc
xchg
sub
xchg
roll
add
sbb
cmp
xchg
add
jnp
loope
mov
jno
push
push
movntq
inc
lret
jbe
hlt
mov
xor
hlt
jnp
or
sub
das
icebp
stc
xchg
loope
loopne
popl
and
adc
dec
add
dec
push
mov
sti
movsl
data16
into
and
mov
push
jae
addr16
cli
adc
js
nop
add
lds
les
inc
mov
ror
stos
jb
repz
aaa
in
orb
in
cmp
loop
call
adc
in
jmp
push
sbb
mov
push
sbb
loope
and
sbb
in
es
lcall
adc
inc
fistl
and
cwtl
inc
pop
sbb
xchg
lret
push
jo
int3
lds
sub
aam
loopne
pop
mov
cs
add
and
add
dec
outsl
ljmp
out
jmp
add
mov
push
pop
adc
pop
and
jbe
mov
add
dec
hlt
ljmp
test
xor
cli
dec
sbb
test
scas
lret
gs
aas
and
stos
les
out
loop
xchg
jmp
inc
cmp
pop
sete
jb
hlt
ljmp
fmuls
jnp
adc
inc
push
or
lods
popf
mov
mov
cmp
cmp
arpl
idivb
mov
cmp
andb
outsl
mov
lods
lock
insl
adc
dec
adc
sbb
out
mov
pop
push
mov
cmpsb
or
mov
mov
pop
inc
jne
mov
push
sbb
cmpsb
nop
lds
push
push
jno
int
mov
adc
sbb
cltd
and
mov
inc
pop
mov
jecxz
sub
sbb
and
out
inc
movsl
inc
xlat
and
sti
mov
or
pop
dec
cli
cmp
jo
imul
fdivs
and
push
lahf
mov
or
mov
gs
xor
and
push
notl
outsb
lret
cmp
adc
insl
outsl
outsb
ret
xor
insb
jle
mov
xchg
in
jne
push
dec
push
dec
and
and
daa
and
dec
mov
push
in
adc
add
and
and
mov
inc
pop
loope
or
pusha
cmp
adc
jbe
fnstcw
cld
hlt
adc
ret
adc
ss
adcl
cmp
sub
xor
fcoms
lds
adc
adc
jno
pop
cmp
sarl
and
jge
xor
and
pop
mov
and
and
inc
iret
inc
js
lcall
scas
movsb
jns
xchg
sub
idivb
cmp
adcb
fwait
in
xor
int
sbb
mov
jb,pn
lods
icebp
xchg
movsl
xchg
sbb
fs
dec
in
cmp
aad
sbb
out
orb
fisttpll
jmp
not
adc
mov
fidivs
sub
mov
and
test
int
testb
insl
mov
in
adc
ljmp
in
jb
hlt
out
jae
pop
sub
test
or
stos
aaa
jg
push
daa
dec
ret
cmp
cmpl
sbbb
xor
cmpsl
jmp
dec
mov
mov
sub
push
xchg
and
cmp
fdivrs
sbbb
xchg
loop
pop
mov
pop
xchg
pop
mov
lcall
mov
add
adcb
jno
or
les
or
inc
jl
popa
sbb
or
cwtl
pop
mov
nop
pop
lret
sub
fcomi
imul
loope
bound
or
imul
cmp
dec
xor
cwtl
and
roll
mov
cmp
xor
cld
jp
call
ja
xor
aam
and
add
inc
cwtl
push
sahf
stos
adc
pop
cmp
xchg
into
add
ja
inc
sbb
ljmp
or
cs
mov
cltd
daa
in
sahf
cmpsl
mov
dec
test
gs
fst
dec
adc
scas
xchg
cli
cmp
adc
or
arpl
jmp
jae
mov
sub
sub
gs
xchg
adc
lods
jo
out
cmpsb
jecxz
test
pop
sbb
mov
jmp
in
and
lahf
add
pop
addr16
shrl
jne
sarb
push
mov
jne
adc
into
outsl
mov
lods
call
mov
hlt
out
sub
fcomps
mov
or
scas
xor
mov
cmp
mov
test
lahf
adc
push
push
mov
outsb
sub
shl
and
rcll
popf
jno
nop
hlt
je
push
lcall
filds
xor
mov
test
xchg
stos
jmp
icebp
add
mov
pop
nop
push
mov
mov
imul
push
mov
dec
xor
out
enter
jg
pushf
push
push
mov
in
pop
jge
push
pop
xchg
ja
inc
ss
push
in
pushf
nop
fcompl
insb
sti
cmp
arpl
add
outsl
adc
mov
je
out
popa
pcmpeqd
or
jecxz
pop
pop
mov
clc
xchg
aas
call
aam
cmp
lahf
les
push
add
repz
outsl
rcrl
pop
adc
jge
stos
mov
or
mov
and
fs
adc
out
push
add
int
dec
mov
sub
std
loopne
xchg
push
mov
mov
adc
push
sti
fcom
sti
xchg
aaa
inc
aaa
adc
call
fs
mov
inc
push
int3
adcb
dec
cmp
mov
sub
mov
divl
movsl
cld
pusha
scas
cs
dec
into
enter
rcrb
jne
pop
xor
inc
movl
mov
repnz
js
lcall
add
sub
arpl
add
mov
ret
pop
insb
mov
adc
mov
test
test
aad
lea
sub
and
into
jb
inc
ss
enter
inc
mov
lcall
push
stos
push
cli
push
sub
mov
movsb
pop
daa
out
mov
pop
jmp
ret
scas
daa
pop
pop
pop
push
scas
call
sbb
adc
mov
and
sbb
sub
fisttpll
loope
mov
mov
xchg
inc
roll
push
and
add
movsb
or
dec
push
enter
jne,pt
leave
ret
pop
insl
lcall
sub
mov
push
cmpsb
loop
xchg
push
hlt
data16
and
xor
setge
movsl
insb
aaa
mov
je
cmp
scas
clc
push
gs
test
mov
lods
shrl
push
sbb
loope
mov
movsb
popa
or
outsb
clc
mov
rcr
add
xchg
leave
jno
add
das
scas
sti
ret
sub
insl
jmp
ds
data16
out
push
mov
sbb
push
cmp
enter
cli
aas
lret
xchg
popf
xchg
cli
pop
ret
and
fwait
pop
jo
jnp
into
arpl
call
sti
xchg
push
mov
mov
ss
add
rorl
push
insl
jo
shll
pop
and
nop
stos
jne
in
cwtl
dec
int3
xor
mov
push
and
sub
mov
and
les
xchg
add
push
rorl
push
pushfw
add
shlb
mov
addr16
pop
stos
and
pop
add
addr16
pop
jo
jb
add
stc
pushf
adc
inc
jge
push
out
popa
mov
lds
repnz
int3
mov
ret
mov
xchg
call
adc
loopne
push
pop
fisubs
dec
call
mov
fstps
daa
mov
cmc
xor
fwait
and
xorb
fildl
and
leave
mov
data16
sub
cmp
and
or
jmp
in
cmp
scas
fst
push
mov
dec
xchg
or
leave
mov
outsb
cmpsl
inc
push
movb
ljmp
incb
jmp
lods
lock
dec
scas
xchg
dec
mov
out
mov
sbb
cld
push
das
dec
pusha
push
lds
xchg
pop
push
clc
stos
sub
neg
icebp
and
sbb
fbstp
inc
lods
inc
cmc
lcall
sti
push
xor
xchg
test
mov
push
mov
jg
mov
mov
loop
mov
jo
js
cmpsl
repnz
push
xchg
sbb
and
xor
or
xchg
fs
test
or
fcomp
lahf
mov
jnp
stc
pusha
out
iret
cmp
add
ret
repz
fwait
inc
bound
jnp
cmpsb
inc
divb
mov
fimuls
sub
dec
xchg
call
pop
dec
xchg
int
xchg
push
les
dec
dec
clc
pop
xchg
scas
and
inc
movsb
xchg
popf
lahf
pop
jb
inc
xchg
stc
pop
pop
test
mov
iret
pop
inc
mov
movzbl
ja
lds
inc
fwait
enter
repnz
inc
push
mov
pusha
sub
scas
pop
fists
push
mov
js
sub
mov
std
mov
mov
mov
sbb
cli
mov
in
sub
jnp
mov
insl
xchg
push
mov
mov
pop
jno
pop
pop
clc
xchg
fs
pop
dec
divb
sbb
jne
enter
test
mov
xchg
mov
add
daa
lods
push
jl
xchg
cmp
cli
add
pop
iret
sub
adc
in
pop
jl
dec
inc
mov
pop
shrl
adc
daa
pop
inc
pop
pusha
push
test
leave
or
lahf
test
add
cs
in
out
loopne
hlt
dec
sub
push
adc
mov
sub
dec
mov
push
fcmovb
xchg
rcrl
push
imul
mov
fdivrs
add
adc
sbb
push
repz
int
pusha
cmpsl
inc
js
shl
and
je
xchg
out
lret
fisttps
mov
mov
dec
in
cli
mov
dec
and
fistps
cltd
jbe
dec
jg
popf
or
stc
jmp
push
movsl
cltd
lret
or
sbb
xchg
out
addr16
xor
decl
enter
mov
fisttpl
cmc
scas
je
add
push
mov
mulps
xor
and
ss
mov
push
jge
jno
rorb
loop
inc
push
test
jecxz
into
je
std
cmpsl
and
jmp
out
mov
outsl
cld
fwait
cmc
adcb
das
sub
movsl
cs
fwait
outsb
mov
and
aam
dec
imul
jp
int
jnp
or
mov
sti
dec
fadds
cmc
outsb
inc
jb
sbb
nop
mov
push
fs
mov
and
cmp
cmp
icebp
imul
adc
negb
ss
or
push
js
jbe
fwait
mov
lret
fimull
mov
pushf
add
popf
sub
pop
dec
sahf
push
sti
mov
in
push
dec
imul
mov
scas
and
mov
mov
fmul
enter
addr16
imul
xor
dec
push
cmp
imul
icebp
add
jmp
mov
dec
lods
mov
subl
outsl
arpl
roll
and
xchg
mov
cld
fmulp
cmp
pusha
sbb
ret
das
and
ja
in
in
inc
dec
mov
adc
mov
inc
fnstcw
fisttpll
lret
inc
push
insl
add
pop
fs
add
push
lcall
loop
loope
insb
fisttpll
xor
pop
and
adcl
fwait
and
cwtl
mov
stos
je
cltd
insb
or
int3
clc
jl
iret
push
mov
fisubrs
mov
push
nop
jne
scas
cmpsl
cmp
push
jnp
mov
sbb
movsb
nop
push
dec
lcall
in
pop
aaa
in
xchg
push
xor
lcall
aad
int
and
push
lds
movsl
dec
filds
pop
fwait
std
mulb
mov
xor
movsl
add
push
cmp
mov
mov
xchg
sbb
in
pop
xor
loopne
and
xchg
cmp
test
sub
push
inc
mov
dec
xchg
jns
sub
mov
cmpsl
sbbb
sbbl
push
cs
push
popf
xchg
push
fisubl
or
in
shlb
push
aaa
lock
mov
jge
jl
inc
push
push
loopne
xchg
jbe
or
lds
lret
jg
jne
cli
push
mov
popf
in
mov
mov
mov
fstp
jmp
mov
sbb
inc
iret
and
mov
int
into
lret
pop
pop
push
rolb
push
cli
push
ret
lahf
sbb
enter
mov
ja
add
outsb
add
add
xchg
xchg
xor
jb
mov
loope
pop
filds
xor
cs
adc
pop
lahf
imul
add
sbb
inc
push
add
push
outsb
cmc
push
gs
and
sbb
mov
in
test
jb
inc
popf
push
ret
cmp
bound
pop
mov
push
das
mov
iret
or
inc
pop
and
adc
inc
out
jmp
jbe
test
and
test
leave
xchg
inc
inc
call
cmpsl
pusha
ret
or
test
neg
sub
jl
mov
jb
addr16
es
and
jae
sub
and
lods
es
in
inc
lea
mov
mov
divl
adc
das
jle
int
xchg
shrl
cmpsl
cmc
incl
xchg
mov
lea
mov
pop
adc
rorb
pop
outsb
fisubs
bnd
push
sbb
movsb
xchg
sbb
add
leave
pop
mov
adc
mov
fdivrs
pop
jno
in
and
shr
test
push
jno
pop
xchg
dec
mov
scas
shrb
pop
arpl
imul
mov
sub
test
repz
outsb
pop
rcrl
or
les
out
xor
shlb
pop
mov
cmp
mov
cwtl
ss
adc
inc
aas
cmp
gs
adc
fsubs
ret
data16
add
fs
add
icebp
push
repz
add
clc
push
fcompl
pop
mov
hlt
mov
sahf
adc
shl
imul
mov
test
jae
cmc
xchg
lods
arpl
int
sbb
sbbl
mov
jmp
adc
lds
nop
push
mov
adc
rorb
pop
jecxz
insl
xor
hlt
aaa
sbb
arpl
and
dec
ds
adc
aaa
or
add
adc
gs
testl
fidivs
push
fmull
idivb
mov
pop
xchg
lock
ja
push
mov
push
hlt
jg
dec
jecxz
xor
sbb
mov
sarb
out
test
xchg
lret
mov
pop
lods
int
mov
clc
xchg
popf
push
int3
mov
lcall
sub
xchg
dec
xchg
ds
or
mov
ret
jno
mov
aad
es
into
jbe
cmp
inc
sbb
xor
movsl
mov
cld
dec
xchg
ss
and
or
push
insl
push
inc
loop
jl
mov
sbb
cltd
scas
lods
xchg
mov
repnz
sbb
pop
es
movsb
lret
mov
mov
or
push
dec
loop
test
mov
mov
fistps
arpl
mov
pop
loop
std
inc
adc
and
pop
sar
mov
add
scas
movsb
imul
subb
dec
and
mov
or
shl
in
and
stos
jmp
adc
sbb
movsb
or
clc
movsl
dec
xor
addl
mov
cld
call
fsubl
sti
fwait
rclb
pop
cmp
xor
xor
jne
mov
mov
mov
inc
cs
mov
inc
mov
insl
loopne
pop
pop
test
cltd
mov
jmp
lods
pop
sbb
addr16
mov
jnp
mov
sti
jns
fldt
pop
imul
inc
mov
into
sbb
or
cltd
jo
sbbb
adc
ret
mov
jno
in
out
je
out
out
addr16
jl
ja
aaa
or
cmp
pop
loope
pop
sub
mov
frstor
loopne
std
and
sbb
hlt
dec
push
mov
add
xchg
push
cwtl
xchg
adc
xor
dec
push
mov
imul
mov
test
popa
jg
xchg
and
and
fdivrs
data16
icebp
loop
cmp
sub
popl
sbb
adcb
lds
xor
sbb
aam
pushf
push
rol
faddl
push
mov
cmp
cmpl
xor
jle
jne
mov
adc
dec
pop
stc
push
jo
push
lret
hlt
data16
shll
xor
sub
in
sbb
leave
pop
pusha
ja
stos
popa
imul
lea
cltd
jb
pop
jne
or
cli
js
xor
daa
repz
cmp
cs
cltd
scas
imul
movsb
js
mov
sarl
aam
movsb
loop
inc
mov
lock
sub
mov
test
or
sub
jge
aad
or
filds
mov
inc
push
jo
push
jg
sub
or
mov
ljmp
mov
inc
mov
scas
add
fisttpll
jne
repz
inc
xchg
test
pop
cmp
fldt
add
push
cmp
xchg
repnz
sbb
mov
add
mov
imul
stos
push
jecxz
lods
lret
vpcmpeqd
mov
cmpl
or
popf
mov
inc
sbb
jns
add
push
cmpsl
icebp
xor
dec
sub
mov
adc
jns
push
es
mov
xlat
xchg
mov
pop
mov
loop
sbb
pushaw
mov
mov
jle
movl
push
fistpl
in
fcoml
mov
movsb
xor
sbb
push
test
ljmp
cs
push
xchg
xchg
jne
popa
xchg
mov
outsl
cmp
mov
shl
or
imul
iret
or
aam
jp
mov
add
and
movl
adc
ret
pusha
test
out
mov
stc
pop
sbb
adc
imul
pop
scas
repz
or
ficomps
mov
pop
daa
lea
cmp
movl
inc
test
dec
fbstp
xor
das
sub
mov
movsb
addr16
enter
dec
or
fwait
jmp
jnp
cmp
test
mov
in
rclb
and
mov
call
hlt
mov
cld
dec
sbb
movsb
cmp
push
std
fadd
rol
insb
cmc
cmpsl
insl
sahf
xorb
lods
mov
xchg
xchg
sbb
inc
je
divl
dec
jo
mov
je
pop
das
popf
fisttpl
inc
dec
cmp
xchg
cmpl
mov
xchg
mov
test
aaa
in
push
jp
mov
xor
mov
decl
rcrb
inc
adc
xchg
jge
jb
mov
call
int3
jge
aam
pop
insb
and
imul
in
ljmp
inc
sti
cwtl
pushf
aas
adc
add
sbb
add
cltd
bound
add
es
inc
scas
mov
pop
sbb
dec
sbb
mov
ljmp
pop
stos
pop
push
mov
mov
and
jg
mov
daa
xchg
or
sub
mov
lret
and
jp
xchg
nop
adc
push
and
xor
inc
mov
les
or
fidivrl
dec
xchg
inc
pop
lret
cmpsl
inc
into
clc
in
jmp
jge
pop
adc
aam
orl
cmp
sbb
lcall
jnp
mov
or
adcb
xlat
insl
inc
mov
cmp
ret
lret
movsb
jg
dec
aad
lods
sub
add
and
sbb
add
out
jo
popf
xchg
ss
sbb
bound
sbb
mov
mov
cmp
mov
mov
pop
lock
outsb
or
aaa
pop
out
fadds
int
xchg
add
insb
jmp
add
xchg
loopne
mov
pop
xor
add
scas
imul
push
arpl
jo
and
cmp
dec
dec
outsl
ret
jl
movsb
gs
pop
jnp
jno
jp
jmp
xchg
or
sub
xchg
testl
pop
jmp
lea
es
or
popa
push
or
subb
jb
xchg
subl
sbb
in
push
mov
add
in
lods
cmp
mov
aam
std
pop
or
adc
xor
test
dec
into
ljmp
out
jg
lahf
rcrb
pop
stos
jmp
push
into
push
cmp
lret
mov
cmpsl
mov
mov
pop
inc
pop
xchg
sbb
jp
fwait
pop
lea
sbb
js
fnsave
add
addr16
xchg
out
sti
inc
mov
or
pop
dec
and
push
push
mov
inc
cmp
push
xchg
hlt
mov
ficoml
pop
in
mov
pop
xchg
sub
ret
cmp
add
xor
and
lock
rcll
add
push
adc
pop
aas
push
inc
dec
push
loope
imul
lock
int
pop
fcomip
inc
cmp
stc
cmc
cmp
mov
mov
imul
jae
pop
push
push
cmpsl
pop
test
cmp
inc
js
inc
sub
sbb
jnp
mov
xchg
cmp
pop
scas
call
lock
pop
decl
movsb
adc
add
test
mov
mov
jbe
fucomip
add
fisubrs
out
loop
xor
filds
adc
sahf
and
lods
pusha
or
sub
pop
and
cld
cmp
int
int
dec
fstps
xchg
or
xor
lock
push
sbb
mov
cwtl
adc
add
mov
mov
or
xor
bound
addr16
jge
inc
jge
xchg
push
push
mov
inc
popa
and
test
int3
xchg
and
addr16
js
notl
data16
or
cmp
mov
inc
insl
push
xchg
hlt
int
fdivrl
mov
fidivrs
and
daa
shlb
pop
test
loopne
into
jne
xor
push
cmp
sbbb
sbb
sub
jecxz
dec
lahf
dec
sbb
out
mov
int3
cmc
sbb
pusha
dec
ss
cltd
push
jle
lods
mov
jmp
call
in
aaa
cli
stos
mov
adc
jo
lahf
icebp
pop
je
xor
or
aas
pop
lahf
xchg
ljmp
lds
dec
or
lret
push
fwait
jbe
inc
xchg
pop
jge
shlb
mov
push
test
ror
sarb
lods
mov
mov
or
decb
mov
fnstcw
cli
add
mov
cwtl
mov
mov
andb
addr16
jecxz
mov
insb
cwtl
cli
shrl
stos
cmp
jmp
int3
mov
pop
xor
out
js
or
cmp
jge
loopne
and
push
inc
cmp
mov
sub
lret
mov
jae
sub
add
loopne
jecxz
ja
pusha
mov
cld
ret
jns
lods
shl
push
or
mov
sbb
into
cmp
sbb
stc
xchg
xchg
pop
fdivp
les
xchg
cmp
xor
imulb
or
xchg
mov
mov
mov
mov
cli
adc
aam
xchg
es
mov
add
mov
int3
add
mov
mov
into
cmpsl
jl
xchg
mov
scas
jb
lds
adc
movsb
mov
sbb
jne
jne
addr16
pop
add
sbb
mov
xor
add
lds
cltd
jecxz
nop
test
mov
jae
adc
mov
mov
imul
xchg
ret
fs
mov
sbb
dec
or
dec
fldt
arpl
lock
lock
daa
sub
lea
lods
xchg
lock
pop
shl
lret
dec
ret
and
adc
ja
clc
lds
mov
bound
jns
add
arpl
rcrl
popa
adc
mov
add
pop
sbb
add
fcomp
mov
popf
or
ss
or
rolb
test
adc
in
inc
xchg
add
jg
mull
insb
add
and
cmp
push
cld
inc
xchg
andb
lahf
dec
mov
cltd
or
xchg
stos
sub
std
sub
jne
mov
adc
add
outsb
or
int
clc
jb
outsl
ja
cmp
das
hlt
sub
andb
xlat
jns
fs
in
push
jb
pop
data16
notb
aas
or
xchg
aad
mov
sbb
sbb
repnz
flds
imul
xor
mov
cld
cli
push
repz
jne
outsb
xchg
out
add
imul
sub
sub
xchg
mov
int3
and
bswap
sub
push
push
pusha
mov
mov
pop
scas
dec
and
xchg
clc
or
mov
mov
shlb
test
adc
push
cmp
jmp
inc
add
shll
or
mov
jp
lcall
mov
popf
dec
xchg
add
ret
mov
daa
add
les
jbe
les
inc
ror
testl
cmpsl
push
mov
insl
dec
cltd
or
outsl
and
fiadds
dec
or
xor
mov
sub
and
push
loopne
inc
push
hlt
leave
ljmp
repz
dec
add
mov
add
inc
enter
dec
sbb
mov
and
cmp
test
cmp
popf
jno
push
popf
insb
xor
adc
xchg
add
mov
cmp
loopne
and
ret
xor
dec
insl
mov
sahf
cmp
inc
gs
sub
jmp
pop
or
ret
mov
stos
push
adc
sbb
les
fmull
xor
adc
arpl
ljmp
mov
in
gs
fwait
ss
scas
mov
cmp
lcall
data16
sub
fbstp
push
ret
push
jl
dec
jb
movsb
xorb
lods
adc
inc
sub
jmp
clc
pop
aad
shl
pop
push
cmpsl
jle
lret
inc
pop
push
mov
and
andl
xor
filds
jno
fs
fimuls
fldt
out
mov
fwait
mov
idivb
mov
into
lods
xor
shlb
or
ss
push
pop
ret
inc
rcrl
mov
lahf
loope
loopne
mov
fldt
cld
xchg
into
inc
dec
inc
movl
pop
pop
jmp
push
pop
punpckhbw
inc
jne
cmc
insb
sbb
pop
jo
into
call
mov
bound
sbb
loopne
data16
out
mov
push
les
cld
adc
mov
mov
dec
dec
insl
arpl
sahf
fidivrs
pop
out
or
mov
inc
fdiv
pop
push
mov
cmpsb
pop
sub
inc
cmp
sbb
loopne
pop
or
fldt
std
xchg
fwait
add
mov
rolb
out
mov
out
ljmp
pop
aaa
cmp
mov
popa
scas
and
out
int3
push
sarb
repz
rorl
sbb
dec
ss
push
ror
pushf
lock
out
xor
jns
xor
orl
inc
pop
dec
or
sub
xadd
sub
mov
int
ljmp
das
xor
mov
sub
out
popa
mov
mov
loopne
aam
cmp
push
ror
imul
lcall
sub
xchg
faddl
and
cli
xchg
mov
mov
jnp
xlat
xlat
xchg
je
push
out
hlt
jmp
xchg
test
dec
cmpb
ficoms
pusha
mov
sahf
inc
mov
or
mov
mov
ds
cltd
leave
push
inc
jge
jbe
mov
push
xchg
jne
cmp
sbb
mov
loop
push
mov
cld
jge
jnp
mov
mov
jae
lret
pop
fimuls
sbb
add
mov
push
xor
outsb
mov
xor
les
in
push
push
xor
loop
cwtl
cmpsb
adc
add
test
fisttpll
inc
rolb
mov
mov
sub
mov
bound
xor
stos
gs
icebp
xor
icebp
orb
mov
sbb
cmpl
xchg
mov
aaa
ss
rcrl
mov
dec
and
js
or
mov
sbb
loope
int3
cs
cmp
fists
sbb
fisttps
popa
adc
push
mov
clc
push
inc
sub
sub
adc
mov
adc
in
in
sbb
ljmp
or
xchg
dec
cltd
es
or
lahf
gs
cmpsl
xchg
mov
insl
lcall
jb
adc
push
mov
and
inc
mov
roll
add
push
cmp
shrl
push
inc
inc
mov
and
leave
rcrb
lahf
cmp
mov
lds
mov
lods
mov
insb
xchg
xor
mov
or
cmp
in
and
xchg
pop
dec
add
mov
notrack
jnp
mov
adc
sahf
popa
sub
or
xchg
mov
clc
push
or
jne
sarl
fcomps
jo
scas
fnstenv
aas
loop
out
pop
mov
jecxz
and
es
loope
mov
paddq
les
mov
loop
xchg
mov
xchg
jge
scas
cmc
or
mov
sbb
ficoml
fcomps
jb
push
adc
jg
loop
inc
jp
jae
xlat
out
movsl
or
mov
out
xchg
std
mov
lahf
into
push
add
fldl
add
rcrl
lahf
das
cmpb
xchg
imul
ret
arpl
ret
and
sbb
js
push
test
sub
jmp
shll
std
mov
mov
fimuls
js
push
daa
aad
push
ss
push
outsb
mov
xchg
in
xor
jnp
es
notl
cmp
mov
out
pop
dec
out
xchg
dec
hlt
sbb
cmp
sub
xor
mov
in
mov
sub
sbb
popa
jle
and
insl
sub
icebp
aad
repz
add
lret
or
or
or
orb
pop
cmpsb
in
and
nop
lods
jae
aam
pushf
mov
mov
lock
jge
lret
mov
lea
xsaveopt
push
mov
push
xchg
loopne
mov
cmpsb
jae
jae
dec
shrb
ret
lret
lea
call
pop
cli
jmp
int
mov
adc
adc
sub
out
frstor
jle
adc
pop
mov
cmp
xor
jp
movsb
sahf
ret
push
inc
sbb
scas
shll
sti
insb
jge
mov
js
jmp
mov
mov
push
push
arpl
push
pop
sub
and
xchg
mov
jno
push
mov
dec
std
push
fcompp
aas
std
mov
addl
or
cmc
jbe
cmp
gs
or
test
mov
cmp
or
sub
shrl
or
and
xchg
sbb
mov
and
jmp
int
cmc
cltd
sub
aad
in
jle
mull
dec
cmp
xchg
mov
fsts
lcall
cmpsl
call
iret
movsb
daa
int
inc
and
push
mov
xor
push
xchg
xchg
jecxz
out
push
stos
mov
mul
out
pop
insl
je
or
mov
xchg
mov
push
scas
mov
dec
dec
dec
imul
mov
pushf
in
sbb
mov
cmpsl
daa
cmp
sub
or
jl
cwtl
iret
lods
jne
pop
dec
shr
jae
mov
jbe
mov
aaa
sbb
insb
inc
jecxz
rorl
adc
test
pusha
sbb
out
sbb
inc
arpl
xor
ss
daa
out
rorb
out
or
mov
or
pushf
push
mov
movsl
mov
dec
ret
movsl
mov
imul
roll
and
inc
insb
fstl
adcb
mov
cmpsl
and
js
enter
arpl
out
or
xor
sub
mov
sbb
sbb
lock
enter
scas
mov
add
addr16
jmp
call
lret
cmp
add
mov
mov
sub
jg
lock
bound
inc
xor
cld
xchg
dec
mov
insl
sub
fcoms
dec
sbb
jbe
xchg
mov
mov
or
push
inc
and
fstpt
pushf
fnstsw
jmp
push
shr
cld
mov
fstl
scas
test
cmp
mov
lock
insb
push
mov
in
stc
fisubl
ljmp
pop
test
jmp
jb
rclb
or
mov
cld
jne
xchg
add
stos
pop
push
dec
dec
and
push
cltd
pop
lods
or
call
in
inc
stos
and
and
push
ds
sbb
push
lds
lret
subb
shlb
push
ljmp
inc
inc
xor
xchg
push
jg
je
push
call
pop
adc
jb
sbb
cs
iret
xchg
aaa
stc
mov
push
mov
pop
mov
cmp
inc
pop
sbb
and
insb
and
leave
and
cmp
ss
cmp
pop
jbe
fucomp
push
inc
andl
lcall
xchg
icebp
js
sbb
mov
xchg
lock
stos
das
bound
or
mov
mov
push
les
pop
and
sbb
fsubl
push
inc
pushf
in
pop
out
or
shrl
cmc
test
loopne
mov
aas
lcall
or
loop
aas
push
loope
xchg
mov
dec
lea
push
ja
enter
mov
in
imul
enter
daa
add
or
int3
push
lcall
sub
mov
roll
aaa
jnp
fstpt
xchg
fwait
mov
and
sahf
pusha
or
xor
out
mov
rorb
jnp
sub
mov
ss
xor
mov
das
pop
fdiv
push
bound
js
sbb
aad
xor
sar
ret
fisttps
xlat
and
sbb
loop
movsb
repz
mov
daa
cmc
jns
inc
leave
addr16
push
inc
pop
or
xchg
outsl
repz
imul
out
sbb
or
addr16
imul
ja
push
fcompl
addr16
xor
jl
inc
mov
or
fisubrl
adc
movsb
es
loope
adc
pop
sub
fistpl
scas
xchg
pop
jg
adc
xor
std
sahf
lds
jecxz
fiadds
xchg
xor
lods
or
mov
push
pop
sub
hlt
lcall
sahf
and
aad
cmpsb
fs
dec
sbb
cwtl
add
jmp
xor
repnz
dec
xchg
sbb
loop
pusha
aaa
push
add
and
insl
jmp
iret
mov
xchg
pop
movsb
pop
and
lock
and
lret
dec
sarb
lods
mov
es
addb
loop
xor
lock
xor
add
sahf
enter
push
and
insb
push
fwait
subl
mov
mov
lahf
xchg
sahf
inc
mov
mov
in
js
or
dec
push
out
push
mov
cmc
push
sbb
dec
push
mov
in
jno
lret
cmovae
adc
loopne
mov
data16
jne
mov
stc
pusha
rolb
dec
and
lcall
adcb
dec
mov
mov
add
mov
mov
xchg
jne
adc
sbb
dec
and
add
stc
or
lock
arpl
cwtl
movsl
mov
jo
pushf
jbe
mov
pop
dec
add
push
sub
call
rclb
or
and
mov
fisttpl
cs
adc
lea
xchg
push
mov
in
stos
into
bound
adc
inc
sahf
sahf
popf
sbb
repz
mov
cs
cmp
rcll
and
lods
out
vmptrst
inc
insl
lods
enter
ljmp
or
xchg
add
fs
dec
jecxz
rcrl
adc
int
mov
or
call
scas
lahf
jg
push
test
insb
cs
sbb
lods
cmpsl
jae
lea
xor
and
scas
mov
popa
cmp
mov
sbb
je
pop
sub
loopne
mov
fdivrs
jl
mov
ret
lcall
dec
rol
adc
lods
scas
fcmovb
xchg
cmp
fisttpl
jnp
pusha
add
std
dec
sar
out
test
add
cs
sub
jns
rcll
out
mov
dec
mov
mov
arpl
and
stc
rclb
rolb
xor
cmp
mov
cwtl
pop
mulb
add
loop
xchg
mov
jnp
pop
hlt
fsubs
jb
push
movups
cmp
jp
lea
movl
jle
movsb
push
jnp
lahf
xor
js
inc
or
mov
adc
xor
mov
push
cwtl
mov
fidivrs
mov
das
inc
jg
push
outsb
pop
xor
mov
movsl
dec
inc
xor
dec
scas
fcomps
cmp
adc
mov
xor
vpshaq
sub
in
push
mov
dec
shrb
into
lea
aas
stos
adc
xor
test
add
mov
shll
fs
fistl
shrl
xor
xor
imul
or
push
pushf
lahf
and
je
jne
mov
filds
fwait
inc
shlb
mov
mov
arpl
inc
or
sahf
mov
aas
aad
add
pusha
jmp
aam
cmp
sahf
fiadds
imul
std
mov
cmp
sub
cmp
mov
push
fwait
subl
mov
jge
aas
leave
fsts
movsb
fs
inc
pop
sub
aam
out
inc
adc
out
cli
xor
fcoms
sub
out
sbb
dec
jmp
leave
mov
mov
imul
gs
inc
xchg
pop
rol
cld
outsb
pop
push
bound
push
mov
push
and
test
jp
cmp
lahf
cli
repz
nop
sbb
lcall
popa
mov
mov
mov
push
int3
mov
inc
aam
or
stos
add
xchg
lret
adc
and
jne
or
mov
bound
stos
push
or
lahf
mov
mov
fs
aam
mov
xor
mov
cmp
jecxz
lock
stc
and
mov
push
push
inc
movsl
idivl
arpl
mov
stos
mov
hlt
addr16
mov
push
sti
xor
jno
xlat
lods
out
fs
inc
push
fnstcw
sub
and
loope
inc
call
pusha
leave
cli
fisubl
stos
movd
pop
jne
mov
mov
xchg
push
rolb
gs
mov
lret
pop
sbb
xchg
pop
cmc
xchg
xchg
nop
mov
add
lea
sub
adc
jle
jns
lcall
cmp
mov
add
push
cmp
sbb
shll
mov
out
ds
sar
xchg
fstpt
push
insb
jmp
out
jno
gs
push
inc
cltd
inc
cmp
dec
jb
inc
jecxz
or
add
bound
push
and
cmp
and
nop
jbe
or
cmc
add
popf
js
and
pop
int
test
arpl
loop
adc
test
mull
dec
mov
or
mov
std
mov
jb
lods
iret
lret
add
xchg
imul
pusha
daa
dec
loop
adc
mov
repz
js
xchg
insl
push
sahf
mov
mov
and
add
insb
lock
or
mov
lods
nop
jmp
in
insl
add
dec
popa
mov
pop
xor
popf
mov
mov
stos
dec
xchg
bound
dec
imulb
or
gs
sub
inc
pop
jbe
add
jg
xchg
xchg
mov
lret
int
testw
test
pusha
push
adc
repnz
or
adc
insb
jl
aam
push
mov
incl
xor
push
inc
dec
and
and
aad
sbb
sub
mov
push
sub
push
in
mov
or
out
jl
adc
lock
jo
dec
mov
xchg
pop
and
inc
xor
in
dec
dec
ds
mov
mov
add
std
test
mov
cmp
push
loope
test
loop
insb
addr16
vcmppd
fcomp
adc
jge
out
mov
cmpsb
movsl
std
vmread
jp
push
or
mov
test
xchg
bound
aas
cmc
imul
mov
dec
or
es
push
cmp
mov
mov
lahf
mov
test
data16
loop
pushf
lds
xor
ficomps
push
xor
ljmp
aaa
xor
cmpsb
fidivl
andb
fstl
push
popa
or
or
ja
add
xchg
sbb
and
xchg
mov
xchg
fidivrl
jnp
mov
mov
aaa
xor
stos
pop
add
adc
pop
dec
inc
lods
jl
cltd
xorb
or
xchg
movsb
jmp
mull
push
pop
dec
dec
aam
pusha
mov
int
cmp
dec
ja
std
fildl
push
push
or
call
stc
mov
loope
push
mov
scas
mov
sti
fwait
mov
out
in
test
or
dec
notb
push
lret
adc
negl
mov
fdivl
fwait
push
add
out
push
push
idivb
cmp
mov
rorb
fidivs
sahf
xor
test
sbb
adc
dec
scas
adc
xor
gs
sbb
sar
xchg
fdivrl
fcmovu
inc
sbb
jecxz
lods
aas
ds
lahf
mov
jg
adc
sub
sub
es
mov
test
sysenter
cs
andl
cmpb
movl
aad
cli
movnti
jmp
add
adc
xor
xchg
lret
cli
cli
push
push
data16
ljmp
test
fcmovu
gs
dec
lret
outsb
mov
xor
push
mov
sbb
adc
cltd
pop
in
fs
add
addr16
mov
xor
adc
loope
loop
gs
ret
pusha
adc
add
das
dec
pop
jbe
cmp
les
xor
in
adc
pop
push
mov
push
sbb
sbb
fxch
cmp
mov
lret
mov
jbe
in
lea
push
fstp
out
hlt
stos
mov
cld
mov
fstps
into
adc
pushl
bound
lret
bound
insb
mov
icebp
mov
add
cmp
xchg
pop
mov
jecxz
icebp
lds
ret
mov
ret
cmpsb
xchg
jne
push
pop
clc
mov
push
rorb
push
cmp
enter
or
mov
xchg
sub
xchg
iret
ljmp
das
shl
jae
push
xchg
mov
cli
cltd
and
pusha
ljmp
push
insl
jecxz
sar
insl
or
adc
push
cmp
mov
jb
xchg
pusha
in
shlb
jmp
loop
mov
push
inc
lods
inc
sbb
stos
mov
lock
inc
and
int
xchg
fisttpl
inc
stc
into
dec
push
cmpl
xor
aam
jae
in
lods
insl
add
mov
jp
adc
fnstsw
jge
xchg
jl
and
inc
jg
mov
daa
jb
lret
sti
js
shll
add
pop
jae
rcrb
and
cmp
incb
divb
sub
push
outsl
push
push
dec
movsb
fcoms
insb
push
inc
ret
add
inc
imul
cli
std
clc
or
insb
jmp
mov
jo
jge
lret
fildll
xchg
mov
iret
mov
repz
sahf
mov
lods
inc
test
xchg
add
jl
in
mov
xor
dec
jnp
js
jle
insb
adc
jnp
fldt
inc
lret
aaa
mov
add
pop
stos
jle
mov
shrb
and
sbb
mov
stos
mov
iret
rclb
xor
mov
roll
mov
mov
popa
mov
movd
fdivs
jnp
das
lds
pop
nop
dec
fisttpl
pop
pop
xor
xor
cmpsl
cmc
hlt
cmpsb
lock
out
dec
add
es
loop
out
mov
inc
push
bound
inc
repnz
aaa
lcall
cld
add
adc
movsb
movsb
out
lods
in
insb
popa
aaa
push
ret
inc
out
xor
scas
push
imul
mov
jae
add
push
inc
mov
add
sbb
cmovg
xchg
jmp
jae
call
xor
fwait
jge
and
inc
cs
and
xchg
or
cmpl
cltd
push
fldt
cmp
rolb
inc
sbb
je
sub
insl
mov
cmp
cltd
jnp
in
aaa
stc
push
sbb
icebp
cltd
dec
jl
js
loop
pop
dec
inc
xor
adc
push
fbld
push
push
push
or
ss
int3
jbe
sbb
mov
mov
and
adc
mov
cmc
daa
mov
pusha
loopne
sbb
fsubl
sub
clc
jbe
sbb
sub
push
lds
push
cs
sbb
mov
mov
cmpsb
mov
aam
cmpb
push
ret
aas
in
repnz
add
inc
jnp
cwtl
mov
mov
imul
nop
cmp
mov
sub
mov
in
pop
mov
jg
fwait
cmp
push
jmp
pusha
leave
dec
fwait
xor
jo
mov
mov
loop
into
sbb
imul
ljmp
inc
inc
mov
or
aad
sub
sarl
and
loop
pop
push
scas
cmp
rorl
mov
ret
inc
push
mov
out
pop
ljmp
dec
mov
test
mov
scas
adc
fwait
clc
push
mov
shll
xor
mov
rcrl
arpl
jbe
fcomi
sahf
dec
cmp
mov
pop
stc
adc
cmc
iret
xor
cld
int3
or
ret
add
insb
jb
sbb
add
pop
xor
insl
aad
and
ja
shlb
scas
mov
hlt
jp
dec
cmpsl
xor
sbb
lods
lods
in
jno
mov
leave
xor
orb
jo
mov
addr16
add
cwtl
mov
mov
test
in
ret
stos
mov
mov
push
imul
cmp
xchg
jne
fldl
ss
mov
sarl
stos
mov
pop
fs
jg
adc
xchg
dec
push
cmpsb
and
inc
sahf
mov
test
mov
fiadds
xchg
jns
dec
pop
sub
xchg
ljmp
notb
es
movsb
xchg
inc
xchg
mov
sbb
and
xor
jecxz
lds
adc
pushf
jg
xchg
cltd
sub
xchg
push
jl
jo
push
mov
push
jb
jb
cs
mov
or
fldenv
popa
adc
dec
pop
aad
lds
movb
jp
adc
or
fiaddl
cmc
mov
arpl
rolb
cmp
test
push
sbb
jl
cld
add
stos
pop
hlt
jmp
das
insb
fsts
cmp
fdivl
decb
adc
enter
sbb
mov
pop
cs
loope
jg
jecxz
jnp
ljmp
in
movsl
dec
in
pop
dec
lods
push
rcl
ss
rol
lods
mov
shlb
cwtl
adc
dec
dec
sbb
testl
push
fsubr
mov
lret
divl
xchg
push
out
adc
xchg
pop
pop
mov
movsb
pop
push
jmp
cmpl
in
and
ficoml
fadds
or
push
scas
jo
imul
std
icebp
dec
addr16
out
es
outsl
dec
fists
jecxz,pn
dec
sahf
aad
inc
shll
rcrl
adc
sub
sub
and
push
push
jg
push
mov
sti
lods
adcb
pop
cwtl
inc
nop
loop
out
rcrb
daa
pop
rcrl
jae
out
push
ret
cmp
clc
sahf
mov
insl
cmp
adc
stc
hlt
xchg
lahf
sti
push
stos
lahf
movsb
stos
jp
dec
idivb
and
push
sti
sbb
mov
jb
jne
adc
sub
insl
jecxz
mov
and
dec
aas
scas
jecxz
lret
or
call
cli
fnsave
sahf
jne
jbe
jg
lds
push
pop
sbb
cld
lds
pop
xchg
cmp
pop
pusha
cli
mov
and
mov
dec
xchg
in
push
outsb
mov
imul
cmc
or
inc
mov
mov
xor
cmc
and
jno
jbe
push
jo
dec
pop
out
mov
mov
mov
lret
imul
cmp
leave
and
mov
inc
jmp
inc
pop
rcrb
fimull
cmp
and
push
fldenv
cmpsl
adc
sbb
mov
ror
gs
mov
mov
push
jge
lods
lret
inc
lds
sub
and
mov
mov
push
inc
cmp
dec
mov
mov
dec
orb
and
sub
lret
and
or
sbb
mov
lods
or
mov
mov
mov
outsb
in
dec
mov
sbb
xchg
fs
dec
mov
nop
imul
mov
mov
lea
sahf
data16
xor
sub
insl
mov
imul
stos
shlb
xorb
mov
push
test
negl
clc
inc
pushl
mov
add
and
js
hlt
bound
xlat
lea
imul
inc
push
test
pop
aaa
adc
mov
adc
and
outsb
mov
push
jb
dec
jmp
push
sbb
aas
pop
in
aam
ja
add
dec
call
cmp
cltd
and
sub
dec
aad
inc
inc
dec
jae
mov
pop
mov
stos
out
xchg
inc
sti
out
aaa
inc
or
stc
and
ljmp
xchg
push
jnp
mov
lcall
mov
mov
sub
enter
add
lret
sbb
xor
and
xor
push
push
das
jns
add
out
iret
mov
pop
sbb
cwtl
fldt
mov
cmpsl
jecxz
dec
fstps
sbb
fiadds
add
and
js
cmp
ss
fdiv
sub
cli
and
test
andb
out
xor
rclb
je
mov
loopne
mov
pop
stc
jne
aad
cwtl
iret
enter
es
je
insl
ret
cld
jno
mov
adc
andb
mov
mov
cmpsl
in
sub
aaa
push
ficompl
and
bound
hlt
or
outsb
iret
cmpsl
addr16
xchg
sub
and
or
push
xchg
add
scas
pop
sub
pushf
xchg
add
out
mov
ror
inc
stos
cmp
in
out
lock
jp,pn
loope
sub
inc
dec
roll
or
xchg
jle
dec
dec
add
pop
sbb
xchg
lcall
aam
sub
imul
icebp
sbb
dec
push
in
mov
dec
sbb
adc
mov
or
shl
jle
push
shld
lds
push
jae
inc
xchg
adc
insl
insl
xor
lods
inc
sub
pusha
pop
or
aam
jge,pt
mov
add
push
jnp
sbb
push
cmp
mov
adc
sbb
cmp
mov
and
pop
xcrypt-ctr
cmpsl
pop
sahf
pop
and
stos
popf
loop
xor
inc
lret
push
mov
icebp
sub
aam
loopne
test
fwait
cmp
cmp
sbb
loopne
out
xor
cmp
mov
or
pushf
mov
mov
xor
cmp
das
leave
cmp
jnp
pop
mov
fiaddl
cmpsl
xor
sahf
xchg
jo
xor
pop
push
add
ss
lret
scas
loop
xor
push
aad
xchg
adc
call
mov
push
sbb
jmp
mov
jae
push
xchg
xchg
jb
inc
add
lods
cld
xor
sarb
sarl
inc
rolb
cli
roll
pop
jl
scas
shrl
and
scas
gs
lods
arpl
inc
lret
pop
nop
fidivl
and
aaa
rclb
pop
es
cs
mov
sub
inc
gs
loope
cmp
adcb
jo
into
jecxz
stos
scas
test
add
imul
push
fsubrs
das
xchg
or
add
pop
out
mov
shll
lret
mov
or
xor
and
enter
sbb
outsl
scas
jne
add
mov
lahf
loop
xchg
daa
pop
arpl
lret
push
mov
rorb
sti
cmc
repnz
ret
lret
jge
push
mov
lods
jbe
sbb
fwait
push
inc
cmp
js
call
or
repz
xor
adc
cmp
pop
iret
cltd
xchg
cmpsl
popa
jecxz
aas
lret
test
popa
aam
out
jge
sbb
rorb
andl
cmpsl
dec
fcompl
sbb
push
dec
inc
adcb
scas
ss
sub
mov
neg
into
aaa
in
insl
fistl
imul
out
sub
and
xchg
popa
mov
icebp
arpl
js
add
hlt
aam
push
insb
pop
or
jmp
dec
sbbb
into
rcr
testb
jbe
shrl
mov
addb
xor
dec
lret
sbb
sbb
sbb
xchg
roll
xchg
adc
imulb
sbb
and
sbb
cmp
scas
mov
cmp
mov
ret
sub
punpckldq
xchg
stos
and
hlt
push
pushl
jae
mov
push
mov
pop
add
call
inc
test
movsb
mov
sbb
push
stos
out
outsb
dec
jb
std
xchg
test
rcll
xchg
repnz
adc
adc
xor
jnp
inc
add
mov
leave
add
mov
pop
test
pop
cmpsl
lock
popf
ret
ljmp
out
js
out
push
inc
out
in
jl
push
jle
xchg
push
popa
and
cs
in
mov
pop
and
cmp
xorl
jae
inc
mov
mov
push
fnsave
sub
mov
cs
dec
clc
jge
fildll
scas
and
pop
movsl
mov
jl
jg
cmp
sbb
mov
jb
aad
test
loopne
xchg
dec
lret
lea
iret
mov
lods
cltd
imul
mov
jae
cmp
cmpsb
mov
aad
dec
rcrl
adc
scas
mov
jmp
mov
sbb
imul
es
mov
cmpb
ljmp
pop
pushf
gs
inc
cmp
fisubrl
pop
or
insb
or
dec
int
repnz
push
cmp
faddl
scas
jl
pop
enter
or
xchg
adc
cld
das
jp
dec
push
pop
test
adc
adc
xchg
inc
or
mov
push
jo
add
fimuls
insl
call
sub
rcr
or
cmp
lock
mov
pop
arpl
mov
out
lods
or
sub
addl
dec
xchg
sub
aad
fldenv
cmp
mov
xchg
xor
ja
test
fnsave
mov
mov
ficompl
sub
ret
cli
mov
push
les
lods
aas
cmpsb
movsb
insl
dec
out
dec
xchg
insb
jmp
add
test
and
sbb
sub
fwait
bnd
mov
scas
mov
test
data16
mov
mov
pop
in
shll
mov
fld
adc
scas
aad
jo
imul
in
shl
pop
cmp
cmpsb
dec
movsb
or
dec
or
or
push
and
xchg
mov
mov
js
pop
add
jmp
test
mov
rcll
outsl
rorb
or
cmc
xlat
inc
inc
xchg
pop
aaa
push
mov
ja
xchg
xor
inc
imul
push
repz
inc
repnz
dec
nop
inc
aaa
gs
mov
ljmp
fists
sahf
ret
jb
enter
iret
push
fcoms
xor
xor
and
sbb
cmpsl
mov
adc
into
mov
sub
xchg
mov
cmpl
mov
nop
arpl
pop
push
sub
mov
adc
jge
fldcw
mov
fstpl
sbb
fidivrs
nop
int3
xor
popa
int3
xchg
push
outsl
inc
mov
add
shrb
mov
push
mov
lock
pop
frstor
sub
pop
jge
mov
or
push
imul
cli
lahf
cs
popf
cmpsl
fists
rcrb
push
dec
xchg
scas
pop
add
pop
jne
out
into
sarb
add
fs
dec
cmp
mov
cltd
mov
pop
test
icebp
jle
mov
xchg
fidivrl
ficoml
shl
xchg
inc
xchg
push
push
and
xchg
movsl
dec
jge
decb
fadds
outsb
lods
cmc
adc
and
jl
mov
ja
lds
mov
out
jecxz
and
dec
mov
or
xor
push
cmp
push
push
and
repnz
loope
pop
jle
cmc
rclb
into
mov
rcrl
xchg
aaa
push
jnp
jp
aad
cli
or
adc
jmp
scas
popa
push
repnz
cmp
mov
and
xchg
in
mov
daa
xchg
sti
int3
sub
imul
cmp
xor
adc
inc
mov
or
sahf
test
imul
sbb
fs
xor
jg
repz
pop
enter
mov
test
repz
test
sub
loope
repz
mov
sbb
dec
mov
shll
loopne,pt
in
push
xchg
xchg
xchg
aaa
in
dec
add
fcoml
adc
cmp
sbb
push
xchg
push
cmp
adc
pop
cmp
shlb
shrl
repz
adc
loope
inc
adc
out
xor
popf
mov
mov
stos
inc
mov
divb
fisttpl
jo
xchg
add
jns
repz
jecxz
aad
in
std
xor
loope
add
jg
pop
test
fwait
lds
xor
xor
cmp
sti
out
inc
inc
or
cmp
enter
lahf
add
mov
fsubs
sub
fwait
mov
cmp
data16
inc
in
test
jne
pop
cmpsb
lods
ljmp
loope
out
fsubp
imul
loope
pop
stos
mov
leave
ss
sbb
jmp
xor
and
aad
pusha
or
cmp
dec
mov
test
loope
dec
inc
into
in
cltd
lock
mov
cltd
arpl
push
push
sarb
pop
clc
scas
mov
push
rcrb
jge
fcomp
adcb
daa
adc
pop
arpl
mov
stos
sub
xor
shl
inc
call
movsb
cmp
aam
testb
icebp
dec
std
stc
stos
insl
xor
and
mov
adc
filds
adc
push
mov
dec
jne
xor
xor
repz
xchg
ficomps
in
mov
ljmp
inc
or
ret
mov
mov
lods
mov
and
sbb
hlt
nop
out
pop
in
xchg
sub
in
jo
or
sti
push
jnp
sbb
cmp
test
je
dec
push
mov
pop
stos
aas
into
fsubr
jle
dec
cmp
mov
cli
hlt
in
push
push
inc
data16
sub
cli
bound
cwtl
jmp
fdivrl
xchg
mov
lock
xlat
jecxz
push
mov
inc
sub
movsb
xor
lea
push
jmp
jae
lcall
in
adc
cmp
push
mov
mov
dec
fstpt
ret
inc
in
pushf
call
sub
pause
sbb
pop
mov
inc
aad
push
push
lcall
adc
inc
fdivp
dec
or
pop
imull
and
and
data16
pop
stos
dec
jge
xchg
rcll
bound
push
testb
jno
jnp
mov
xchg
aad
sub
fldenv
jnp
int3
cltd
or
cmp
xor
clc
movsl
or
mov
and
sub
adc
mov
sub
scas
xchg
inc
shrl
nop
and
xchg
jo
out
scas
cmpsl
sub
and
loopne
mov
ja
lods
xor
mov
flds
nop
push
repnz
add
and
das
shl
ret
mov
js
dec
xor
pusha
jp
push
jl
xor
stc
sahf
xor
enter
cld
inc
stc
inc
enter
mov
add
sbb
roll
fwait
ss
repz
mov
outsl
sti
out
mov
jecxz
jnp
movsb
mov
inc
dec
add
and
repnz
cmp
sbb
add
sbb
fdivrl
jl
inc
jb
add
imul
and
pop
lret
mov
push
das
jnp
inc
mov
in
insl
cltd
fildl
cwtl
jg
fwait
inc
loope
lds
or
sbb
xor
and
call
fstp
sub
mov
insl
inc
js
inc
enter
jno
jp
rorl
jg
cmp
sub
arpl
adc
fs
xor
push
mov
fwait
dec
lcall
mov
ljmp
xchg
in
jle
mov
xor
sub
movsb
xchg
adc
and
sub
in
inc
fldt
sbb
push
mov
mov
cmp
imul
cli
mov
incb
xchg
or
dec
mov
daa
je
outsb
push
loopne
mov
jno
fdiv
aas
dec
aaa
lods
sub
aad
mov
mov
mov
aad
sub
dec
cld
mov
js
add
mov
mov
fs
cli
ja
cmp
sbb
xchg
repnz
loopne
int
fwait
push
leave
inc
cltd
push
daa
int3
in
roll
clc
inc
in
lcall
nop
add
fwait
or
dec
icebp
xchg
scas
mov
fcmovb
jmp
sbb
and
push
jmp
mov
lret
and
not
ja
addl
das
ret
pop
inc
mov
sbb
loopne
sbb
stc
insb
into
and
mov
or
xor
xor
pop
cmp
xchg
inc
fldenv
imul
add
inc
push
aad
stos
movb
scas
pop
sub
ljmp
cld
sbb
xchg
cmp
insl
cltd
jecxz
popf
rclb
std
rcl
nop
in
inc
outsl
mov
xor
pop
sbb
xchg
lea
add
ljmp
stos
sub
jne
cmp
ret
insl
in
imul
mov
cmpsb
xor
arpl
rorb
stc
add
pop
pop
adc
jb
ja
mov
dec
dec
shlb
and
scas
addr16
sub
inc
mov
js
lods
or
dec
cmc
stos
cltd
mov
xor
mov
fsubrl
iret
daa
mov
loopne
mov
add
xor
mov
scas
pop
push
lret
popa
pusha
cmp
mov
pop
enter
loope
sub
sbb
scas
cmp
inc
mov
add
icebp
and
fcoml
imul
mov
arpl
xor
or
lcall
jno
pop
mov
clc
imulb
xor
add
fcompp
jmp
bound
repnz
xorb
addr16
enter
mull
data16
fadds
inc
cmp
out
out
out
aad
mov
sbb
push
push
sub
ss
inc
mov
int3
xor
inc
cmp
ss
std
out
jl
push
xor
test
bound
lock
popa
xchg
sub
mov
pop
inc
movsl
imul
pop
push
sub
loopne
inc
xchg
sub
clc
ss
push
xlat
js
sti
sub
test
cld
add
pop
daa
xchg
push
test
mov
ss
inc
out
nop
sub
pop
xchg
sub
int3
aam
pop
ja
mov
movsl
lea
push
mov
imul
movsl
faddl
shll
insl
lods
xchg
fistpl
sub
jecxz
mov
push
xor
add
mov
pusha
lods
rcrl
lods
or
jb
xchg
sbb
fildll
out
ds
cmp
out
add
mov
jo
jb
push
nop
stc
add
adc
ret
pop
push
pop
arpl
push
jne
sbb
add
imul
mov
out
shlb
dec
xor
imulb
aaa
pop
iret
inc
adc
js
mov
ljmp
mov
add
sbb
pop
mov
int
shl
loope
mov
cmpsl
cmp
xor
mov
div
push
fs
jecxz
add
lcall
inc
push
and
dec
jno
adc
aaa
ss
mov
dec
mov
pushf
shrb
iret
stc
push
xor
inc
inc
adc
jno
add
outsb
icebp
adc
inc
in
lods
out
adc
jle
push
movsb
sub
cs
in
cmpsl
xchg
add
cli
add
das
out
fs
int
adc
dec
cld
ds
push
sbb
add
xor
inc
notl
das
sahf
fimull
cmp
sub
mov
mov
and
sbb
xlat
adc
sbb
ljmp
dec
fs
and
ret
push
adc
mov
ss
repnz
lods
in
mov
push
lods
jecxz
inc
cmp
xchg
shlb
jmp
pop
sub
mov
jmp
call
ljmp
and
cmp
jns
roll
dec
repnz
mov
inc
loope
and
in
mov
add
cli
bound
inc
mov
mov
mov
push
pop
adc
xor
into
dec
jp
push
pop
cli
movsl
push
xor
mov
mov
mov
jecxz
push
loopne
cs
xor
iret
lock
mov
popf
adc
add
jne
xchg
mov
jo
loope
out
jns
pop
icebp
push
fistpll
jae
sub
icebp
stos
inc
dec
pop
push
dec
out
jnp
push
inc
cs
add
sub
mov
or
add
mov
popf
leave
push
fs
xchg
or
xor
push
nopl
xchg
mov
mov
pushf
jle
jae
in
lahf
scas
sub
rcl
mov
mov
sbbl
frstor
adc
sbb
pop
jae
jle
xchg
in
pushf
stos
pop
ret
cmpsl
pushf
xchg
cmp
call
add
xor
insb
fs
jp
push
das
push
cld
inc
inc
sti
lock
dec
sub
lds
lret
push
insl
mov
xor
cmp
push
and
mov
push
pop
add
fnstenv
mov
push
mov
int
sub
and
xor
sahf
push
rcrb
mov
sub
popa
xchg
in
mov
or
adc
cmp
mov
movsb
sarb
xor
rcl
aaa
xchg
cli
sbb
dec
push
arpl
arpl
cmp
or
mov
loope
cltd
adc
cld
mov
mov
xchg
xor
or
sbb
cmpsb
fcoml
je
dec
in
fstpt
out
ja
call
xor
leave
inc
outsb
sub
mov
cmp
in
and
lods
adc
dec
fimull
push
dec
lds
les
pop
jae
sahf
jle
js
jno
jge
mov
xchg
sbb
jnp
std
and
cmp
divb
xor
gs
out
fs
std
adc
mov
bound
xor
xchg
clc
aaa
test
ret
out
lods
es
push
test
mov
push
mov
stos
call
xchg
jecxz
shrl
mov
shll
mov
mov
repz
out
test
sbb
pop
psubusw
ror
mov
ficompl
inc
pop
mov
push
dec
sub
fsubr
adc
xlat
int3
orb
idivb
xor
shll
fs
leave
mov
jge
dec
sbb
mov
cli
pop
dec
inc
daa
pop
mul
loopne
mov
nop
cmc
mov
xchg
mov
pop
inc
loop
pop
sub
out
mov
addr16
inc
mov
pop
push
cmp
adc
cld
xor
sub
jmp
and
mov
outsl
std
mov
mov
cmpl
push
ss
outsl
push
loop
fisubrs
mov
pop
sub
fdivs
out
ja
icebp
fnstsw
lcall
fstl
xchg
data16
das
in
fildll
clc
nop
xor
jl
popa
dec
faddl
out
fwait
or
hlt
mov
jae
lret
je
xchg
movsb
int3
push
pop
xchg
jo
sbb
pop
scas
mov
cmp
mov
into
xchg
scas
stos
das
cmp
pushf
inc
mov
insl
arpl
adc
cli
pop
sub
xor
cmc
insb
subl
push
push
repnz
and
inc
push
sub
int
mov
jle
test
clc
cs
sub
loope
xchg
jbe
mov
insl
sbb
cmp
pop
in
sbb
sbb
aaa
imul
rcll
inc
pop
inc
pop
or
inc
mov
in
pushf
and
adc
cmp
pop
sbb
test
pop
inc
stos
cli
cmpsl
mov
sbb
add
jg
sub
mov
lret
shr
dec
inc
xor
insb
push
sbb
sub
add
jle
push
lds
sahf
adc
push
add
cmp
inc
test
sub
xor
pop
fildll
and
push
dec
dec
es
mov
inc
cld
mov
mov
je
sbb
mov
shl
jae
push
mov
xor
xor
push
lea
pop
movsb
out
sbb
sbb
jp
movsl
insl
mov
pop
lcall
nop
ljmp
in
cmp
dec
rep
out
pop
jns
std
rcrl
sub
lds
jne
xchg
aam
mov
stos
sub
in
imul
test
int3
cmp
pop
sub
or
lock
inc
stc
mov
lock
xchg
add
pop
out
shlb
jo
pop
inc
out
adc
push
stos
xor
pop
stc
pushw
jo
ljmp
sbb
and
inc
mov
movsl
push
jo
push
mov
mov
push
sub
mov
xorb
mov
push
mov
xor
lea
aad
les
xor
fadds
xor
popa
adc
and
fildl
xor
pop
xchg
fsubrs
aam
lea
mov
push
mov
sbb
sub
jle
inc
int
mov
pusha
or
cli
xor
nop
lods
fs
push
jnp
pop
test
add
inc
push
in
mov
xor
sub
mov
cmp
out
mov
outsl
inc
out
lcall
aaa
push
sti
push
movsl
jl
jnp
loope
adc
pop
jp
aad
xchg
sub
inc
push
adc
ret
bound
es
mov
sarl
ja
mov
push
jb
push
lods
pop
mov
jae
test
push
iret
pop
push
icebp
jbe
enter
insb
mov
adc
es
sub
fsubs
mov
daa
and
ds
enter
adc
dec
mov
add
cmp
cmc
inc
add
pop
adc
mov
adc
pop
lahf
pusha
push
mov
jp
pop
cwtl
popa
xor
insl
jmp
and
jg
and
jne
fwait
and
fcoms
jg
not
mov
mov
jnp
sbb
xor
clc
jo
inc
sub
pop
ss
movsb
or
int
or
inc
mov
lods
out
sub
into
pop
stos
gs
adc
pop
pop
inc
sub
mov
fcoml
outsb
sub
mov
ljmp
shrb
push
xorb
lcall
add
and
inc
inc
rcrl
xor
mov
pop
fistpl
xchg
sub
popa
xor
pop
push
ret
jnp
int
fidivrs
pusha
dec
pop
xor
add
sub
lcall
cld
mov
cli
imul
mov
adc
add
cld
mov
out
inc
ret
mov
xchg
stos
outsb
or
fdivrl
xchg
fldt
cmpsb
push
pushf
xor
mov
or
add
mull
pop
sti
cli
xor
jle
pop
lret
rolb
mov
popa
inc
mov
or
lret
mov
and
leave
ljmp
jge
cld
push
fistpl
mov
scas
clc
cmp
scas
sbb
insb
addb
add
cmpsb
mov
cltd
rcrl
mov
sbb
lret
rcrl
inc
negb
jnp
xchg
mov
xchg
imul
aaa
mov
arpl
mov
test
jmp
js
stc
push
mov
inc
fwait
bound
lods
add
add
add
jmp
adc
adc
jno
inc
xchg
imulb
mov
outsb
mov
ds
movsb
or
insb
gs
mov
out
push
lahf
out
adc
out
mov
hlt
cltd
orb
sub
scas
daa
cltd
xchg
cmp
jnp
mov
ficomps
fmul
outsl
mov
mov
jge
cmp
sbb
pop
fdivl
add
data16
movsl
cmpsb
outsl
incl
mov
in
or
xorb
out
fisttpl
fildll
scas
mov
jmp
rcrl
pop
ljmp
cmp
stc
xchg
stc
test
nop
repz
xor
or
rorl
je
daa
loopne
inc
pop
sbb
sbb
imul
adc
into
into
loop
sub
pop
daa
icebp
rol
jbe
jnp
rolb
mov
stos
int3
add
fnstcw
aaa
xor
dec
cwtl
pop
sub
aas
adc
lret
pushf
pop
inc
pop
cmp
mov
mov
stos
mov
out
and
sbb
mov
pop
or
adc
cmpb
mov
lcall
and
dec
adc
shlb
or
insb
add
aam
outsb
xor
ret
rclb
aas
scas
or
cli
cmpsl
jg,pn
adc
jnp
fcom
pop
outsb
add
pop
xchg
add
cmpsb
repz
mov
sbb
push
mov
sbb
aam
pushf
mov
std
addr16
and
shlb
out
jb
lahf
mov
scas
imul
push
aas
mov
gs
out
xchg
or
sbb
xchg
inc
rclb
daa
cmp
lock
iret
leave
sahf
aaa
xor
inc
and
pop
pop
rcrb
sub
add
mov
add
mov
xchg
add
xor
sti
xor
orb
jns
shrl
xchg
aas
push
cmc
daa
jbe
out
loope
mov
ja
inc
enter
or
subl
ja
inc
out
adc
jnp
add
loopne
mov
sub
mov
lea
dec
sbb
mov
scas
sbb
enter
lret
lret
fstpl
inc
adc
cvttps2pi
or
in
dec
push
sbb
mov
test
cs
pop
inc
adc
test
inc
test
imul
sub
dec
lea
enter
mov
ljmp
mov
and
dec
dec
xor
mov
adc
fwait
into
test
test
ss
dec
add
sbb
popa
lahf
and
pop
or
das
push
ret
push
aad
or
lods
add
mov
mov
popa
icebp
imul
mov
pop
push
ljmp
fmuls
ficomps
loope
sbb
xchg
mov
in
mov
adc
and
add
jp
sub
dec
xchg
or
repz
fldl
pop
test
adc
cmpsb
lret
mov
push
int3
fsts
push
or
push
icebp
ja
xchg
test
jno
fcomps
ret
sbb
scas
xchg
and
xlat
mov
aad
fadd
xor
jne
xor
sar
cmc
imul
add
cmp
push
in
lret
sub
inc
out
test
and
inc
lahf
cmp
nop
jno
mov
push
xchg
fcoms
fidivl
imul
push
cmp
pop
fsubl
pop
push
cmp
fwait
jge
movsb
aad
add
int
inc
mov
jns
lds
mov
addr16
fiadds
jnp
dec
push
mov
jae
sbb
mov
pusha
push
ret
outsl
cltd
mov
inc
shr
daa
sbb
xlat
sbb
dec
jge
jne
pop
xchg
mov
insb
lds
lock
mov
pop
call
sub
arpl
jmp
jno
sub
int3
push
icebp
jnp
xchg
or
jbe
jno
iret
xchg
std
cmpsb
push
sbb
mov
loop
call
repnz
jne
nop
xor
bound
jmp
clc
aam
sub
jp
jl
push
out
pop
inc
fidivs
or
mov
pushl
or
and
cmc
cmp
sbbl
stc
mov
cmp
mov
nop
mov
dec
or
jne
stc
mov
xor
cmp
mov
addb
rolb
shrl
mov
inc
dec
jns
in
repz
mov
je
xor
shlb
fldenv
hlt
iret
mov
outsb
xchg
add
mov
and
cmp
adc
and
sub
pop
ja
jns
inc
and
dec
gs
xor
push
xchg
insb
shl
push
outsb
in
sbb
mov
pop
sbb
sub
andl
test
add
jg
or
xchg
shl
enter
jbe
sbb
icebp
push
jb
pop
adc
and
mov
shlb
out
jno
adcb
in
mov
fstps
ret
lods
jbe
pop
lods
lock
mov
pop
addl
pop
lods
cmc
jg
pusha
jo
xorb
nop
lahf
inc
sub
stc
sbb
outsl
sbb
pop
ss
push
mov
sbb
mov
adc
push
or
sarb
sbb
lret
jbe
xchg
pushf
xchg
pusha
testl
sub
cmp
repz
cld
in
adc
or
loope
sbb
cmp
insb
xchg
adc
call
pop
add
pushf
sub
push
add
jno
sti
adc
push
inc
xchg
jmp
lods
repnz
jmp
sti
adcb
push
movsl
fcom
xchg
daa
ds
mov
push
sub
test
cmp
std
sub
jne
and
inc
xor
adc
nop
jmp
xchg
ds
mov
insb
sahf
add
mull
js
xor
mov
sub
adc
dec
test
shll
or
scas
and
aaa
dec
jmp
cs
in
aad
push
jecxz
or
mov
adc
mov
sahf
sbb
mov
and
fisubrl
pop
jp
sub
jp
push
inc
filds
push
lods
pop
or
lods
jmp
in
dec
jmp
adc
mov
fsts
ret
mov
mulb
and
or
or
lea
mov
and
imull
jo
in
jno
lcall
jl
fstpl
test
and
push
jns
test
inc
add
icebp
fdivrs
mov
push
lcall
rcr
push
popa
imul
xchg
test
mov
ljmp
xlat
aas
sbb
and
hlt
jo
jmp
rorb
sub
loop
push
push
filds
decb
stos
inc
push
int3
xchg
test
dec
mov
add
dec
sbb
cmc
push
lcall
pop
fs
in
repz
negb
xchg
cli
lret
enter
nopl
ret
int
mov
jo
aaa
and
adc
das
inc
pop
jmp
test
test
out
fidivs
js
mov
in
mov
sub
or
testb
sbb
and
das
sbb
stos
cmp
popf
cmp
xor
sbb
jne
loope
pop
fistpl
and
sbb
sbb
push
fwait
mov
cmpb
cmp
leave
shr
pop
add
xor
cld
lea
push
inc
sarb
dec
es
cwtl
shll
and
mov
inc
jmp
sub
mov
fldenv
insl
nop
cltd
sarb
insl
pop
and
fwait
push
imul
in
mov
dec
or
ror
pop
outsl
xchg
and
lds
fimuls
pop
daa
xlat
pop
adc
ljmp
ret
jb
and
push
inc
mov
mov
dec
jo
push
mov
jmp
cmp
sub
int
fdivs
roll
lret
mov
sub
adc
test
and
and
rolb
in
jg
mov
mov
das
rolb
inc
sub
nop
daa
stos
into
popf
not
imul
icebp
psubd
rorb
int
xor
cltd
icebp
mov
int
jmp
dec
lods
sub
cmpb
dec
rorb
or
aam
arpl
jl
sub
or
xchg
xchg
loopne
aad
push
sub
ja
xor
ljmp
adc
in
cld
daa
or
or
add
mov
pop
and
test
lock
arpl
mov
div
sbb
or
dec
push
mov
lcall
int3
add
mov
xor
xchg
jp
mov
cltd
movsl
xchg
or
xor
sbb
outsl
aaa
xchg
xchg
aas
cli
arpl
cltd
adc
mov
pop
xchg
popa
jbe
mov
lods
cmp
mov
cwtl
outsl
out
adc
mov
add
jnp
cmp
test
fnstsw
cmp
sbb
frstor
outsl
data16
imul
les
add
push
int3
lock
fdivrl
mov
jnp
xor
sub
arpl
mov
cmp
addl
cmp
mov
mov
in
shll
jp
push
or
aam
sub
daa
mov
mov
call
add
mov
movsb
shrb
push
push
sub
popa
mov
xor
mov
sahf
and
mov
popf
std
mov
scas
sbb
dec
es
ret
pushf
ret
mov
es
inc
rorl
stc
add
adc
push
dec
sarl
xor
stos
or
jae
sbb
subl
push
or
mov
jge
jg
imul
loope
fnstsw
xor
ljmp
or
je
sbb
in
mov
mulb
and
adc
or
push
mov
fsts
sbb
jnp
mov
pop
xchg
rcl
fsubr
push
ss
mov
push
in
xchg
xor
mov
jecxz
xchg
jne
test
push
and
pop
pop
fsubp
fidivs
in
mov
ss
jecxz
and
xchg
pop
mov
mov
jmp
fs
xor
and
xchg
std
int3
sub
test
mov
movsb
fstpl
xchg
loope
cmp
jnp
loopne
dec
fcmovnbe
adc
add
gs
push
lds
sub
icebp
adc
xorl
push
fnstsw
loope
clc
cmp
push
shl
jno
inc
orb
imul
fisubs
mov
cmc
dec
xorb
mov
sbb
mov
jb
test
xchg
adc
out
ja
pop
jmp
mov
xchg
cmp
mov
imul
jb
enter
insb
xor
std
cwtl
shl
mov
outsl
cmp
xchg
loopne
fmuls
push
or
mov
es
int3
sbb
call
cmp
pushf
sti
jecxz
add
cli
int3
popf
rorb
inc
push
jl
pop
dec
pop
push
dec
ss
xor
repz
test
femms
scas
cmp
test
lods
loopne
and
dec
cmp
mov
mov
xchg
sbb
mov
iret
sti
or
outsb
mov
fcoms
inc
lfs
shrl
pushf
jg
xlat
setne
idivl
int3
cmc
xor
jmp
sub
rcr
push
test
mov
fldl
or
jge
pop
stc
mov
mov
mov
fs
sbb
shr
pop
add
into
add
push
shll
addr16
cmp
sbb
movsl
xchg
out
inc
es
inc
scas
ret
adc
shlb
cld
fcoms
mov
xor
jg
push
mov
xor
ret
out
mov
in
inc
mov
xor
jbe
xor
fwait
into
pop
add
inc
cli
jmp
adc
ja
mov
insl
jns
iret
xor
and
loope
add
out
aaa
loope
mulb
addr16
push
repnz
and
mov
sbb
pop
pop
cmp
orl
add
inc
fs
call
shrl
das
adc
std
mov
push
fildl
dec
and
sbb
sub
ret
add
cmp
rorb
mov
movsb
nop
add
or
or
loopne
roll
push
outsl
das
xchg
std
jecxz
lock
mov
xchg
add
pop
pop
inc
pop
stos
push
push
lea
xchg
mov
xchg
lea
loopne
push
out
push
jp
sub
subb
ljmp
sahf
lods
add
mov
add
imul
shlb
test
sbb
or
cmp
lret
dec
int3
insb
roll
data16
cld
cmp
insl
xchg
inc
adc
jg
nop
dec
jnp
push
les
adc
aad
xchg
pop
and
pop
sbb
cs
cmc
in
pop
pop
stc
push
xchg
aam
mov
test
mov
lret
jg
ret
rolb
sub
inc
iret
jge
xchg
fidivrl
dec
push
xlat
mov
push
and
shrd
and
jbe
and
xor
fs
insb
aas
ds
lods
clc
stc
add
push
xchg
xchg
or
adc
jns
cmp
cmpsl
and
jmp
sub
scas
add
adc
in
aaa
mov
mov
in
fbld
arpl
dec
pusha
xor
lea
rorb
push
fcmove
loop
aaa
xor
gs
fwait
and
lock
ret
jmp
je
sub
jno
stos
sub
sub
push
pop
les
cwtl
inc
popf
aas
pushf
lock
data16
lcall
mov
and
and
adc
lret
mov
push
add
out
pop
mov
out
fwait
cmp
and
nop
andl
pop
push
mov
dec
mov
imul
or
push
cmp
leave
or
rorl
int
outsb
lret
mov
xor
cmp
dec
sahf
and
jmp
push
int
repnz
push
sbbb
fbld
orl
shll
pop
xchg
sub
and
mov
cmp
ficomps
or
cli
jbe
jbe
cmp
cld
xor
mov
mov
inc
test
repz
into
imul
mov
jns
and
jge
dec
jecxz
add
sub
mov
dec
fadds
leave
aaa
pop
push
inc
aad
jbe
scas
shl
aam
adc
cld
pushf
add
test
jbe
dec
popf
cmp
jmp
dec
xchg
mov
mov
inc
data16
mov
inc
add
cmpsb
push
shll
jle
inc
dec
add
filds
xchg
out
add
xor
fdivr
mov
cli
pop
inc
mov
adc
into
and
push
fs
or
inc
sbb
cwtl
lret
addl
mov
sbb
stos
xchg
cmpsl
xor
or
pop
ret
sarl
xchg
cli
mov
gs
popa
push
sahf
xchg
or
mov
cli
add
cmc
pop
adc
cwtl
mov
sahf
frstor
in
jg
mov
mov
aam
add
out
push
xchg
outsl
in
jl
or
jl
cli
lods
cmp
pop
in
fmuls
mov
in
pushf
scas
arpl
pusha
loop
out
push
mov
in
stos
cld
shlb
dec
stos
push
mov
insl
jge
cmp
sarl
sarl
inc
lods
dec
iret
sar
fs
movsl
stos
fiadds
mov
mov
arpl
and
repnz
add
push
mov
mov
pop
shll
sub
stc
pcmpeqb
fcomp
lock
fcompl
and
dec
cli
repnz
nop
push
jp
gs
push
popf
pop
adc
push
dec
cltd
and
mov
add
jp
arpl
inc
xchg
data16
pop
lcall
imul
imul
adc
int
inc
leave
or
or
jbe
loopne
cmpsl
vmulps
push
loope
je
sbb
test
outsb
pop
and
imul
lods
in
arpl
jp
loopne
jl
dec
ds
in
cmpsl
xor
push
xchg
outsb
pop
mov
es
jp
mov
ja
imul
xchg
js
icebp
shll
mov
xchg
mov
stc
jl
xchg
and
inc
push
inc
aam
push
mov
sarb
xchg
data16
mov
lcall
lds
mov
jl
cmp
push
and
cs
mov
test
outsb
fs
inc
cmp
mov
mov
fnstcw
pop
fmul
dec
icebp
cs
sbb
orb
ja
movsl
dec
je
cli
push
push
push
xchg
push
mov
inc
mov
xchg
cs
pop
daa
gs
lea
repnz
mov
call
cmp
nop
cltd
xchg
add
pop
jne
sub
repz
push
push
sub
sub
xor
mov
inc
lcall
ret
inc
scas
aam
lock
xchg
ja
inc
xchg
outsb
in
jns
sub
sbb
movsl
jge
rcrl
sub
loop
out
cmp
push
lods
out
xor
jb
loop
cld
adcb
xchg
insl
jns
iret
js
jmp
jmp
lods
or
or
cmp
ljmp
cmc
gs
mov
xchg
add
xor
pop
outsl
xchg
and
sbb
test
jge
dec
cmp
fisttpll
int
cmp
in
scas
out
loope
jb
sbb
dec
popa
mov
and
imul
pop
je
andl
rorl
fisttpl
mov
cmc
aas
push
cmpsl
mov
cs
mov
mov
lret
dec
stc
add
sub
pop
jns
aad
mov
jl
and
ss
mov
dec
xchg
push
jne
xor
mov
aaa
aam
dec
jne
mov
dec
jae
fisubs
loop
jae
imul
lds
push
lret
mov
add
jmp
pop
xor
pusha
les
or
jnp
out
lret
or
movsl
inc
cmovbe
lret
movd
and
movl
mov
lahf
lret
jle
add
repnz
inc
scas
mov
and
stos
xchg
and
ss
mov
sahf
shll
lea
fdiv
add
xor
mov
scas
jle
dec
push
shr
stos
mov
outsl
js
iret
mull
sbb
std
icebp
pop
inc
rol
mov
cli
loop
test
addl
hlt
mov
mov
sbb
jb
mov
push
dec
out
leave
bound
stc
jle
out
sahf
lds
pop
jnp
xchg
sub
aaa
pop
lock
je
add
dec
sub
lcall
jg
xor
es
mov
or
mov
xchg
xchg
or
in
test
fcmovne
and
push
faddp
lret
addr16
aas
mov
div
jg
daa
pop
jne
leave
sbb
stos
insb
test
fstps
jp
loope
orb
mov
clc
in
rorl
mov
fidivrl
jne
fldenv
push
push
in
hlt
fistpl
test
cli
xchg
fsubr
jg
mov
cld
mov
repnz
lds
push
fbstp
jno
mov
aad
mov
std
pop
push
and
add
sub
add
cmp
jg
pop
or
xlat
lods
dec
testb
and
pop
es
lods
fdivl
fwait
push
ljmp
sarl
insl
test
stos
sbb
lea
sbbl
cmp
lret
xchg
jle
in
xor
mov
add
mov
cmc
outsb
out
dec
imul
iret
fbstp
inc
popf
dec
sbb
mov
movsb
loope
das
mov
xor
fmuls
in
sar
adc
jb
sub
into
sbb
pop
jns
mov
xchg
ror
sub
in
or
cltd
dec
cmp
sbb
mov
js
mov
rcrb
nop
sbb
stos
jae
pop
pop
int3
ljmp
jl
in
leave
shlb
std
push
mov
clc
loope
adc
nop
scas
lods
rcrl
push
inc
loopne
orb
adc
cmpsb
mov
ds
jno
or
xor
frstor
sbb
pusha
push
xchg
fdivs
ss
sti
xchg
out
mov
enter
mov
jo
arpl
test
out
jle
lret
insl
clc
sub
rcrl
sbb
inc
rol
mov
sarb
enter
push
stos
add
push
xchg
movsl
fwait
adc
cs
addb
jg
data16
mov
dec
cwtl
jb
nop
mov
mov
cmp
ror
cmp
jne
inc
xor
add
pop
inc
mov
sub
and
or
dec
sbb
push
xchg
nop
mov
dec
push
add
divb
add
je
cli
into
push
push
lret
adc
lahf
sbb
add
sarl
fdiv
outsl
mov
adc
jae
mov
ja
dec
pushf
lret
cmc
in
popa
xor
cmp
mov
lret
les
cmp
loopne
ljmp
cli
xor
mov
dec
add
test
aad
imul
lcall
daa
inc
mov
test
and
enter
inc
xor
or
insl
mov
mov
mov
repnz
or
jmp
cld
sahf
mov
inc
ret
clc
mov
mov
pop
add
xor
stos
sub
add
rclb
cmp
ss
sub
pop
inc
cmp
sub
iret
in
inc
sbb
add
out
scas
pop
nop
scas
cmp
test
aad
push
pop
stc
fadd
cmp
cmpsl
push
add
jbe
push
xchg
xchg
cmp
cld
icebp
sub
iret
dec
xchg
lret
in
adc
out
push
dec
std
test
push
lods
pop
fistps
dec
mov
loop
hlt
les
adc
jg
cmp
leave
cmc
test
mov
data16
outsl
xchg
pop
ret
inc
mov
add
sti
push
leave
rcrl
lret
sahf
lds
jo
sbb
lret
mov
adc
add
hlt
xor
mov
pop
xor
adc
fidivrl
xor
jmp
lret
das
dec
fmull
inc
sbb
sub
mov
enter
test
and
or
movsl
bound
cli
aas
into
mov
nop
fidivrl
scas
ror
push
scas
sarl
sbb
cs
out
enter
dec
movsl
movsb
xchg
lret
dec
fwait
ret
jmp
cmpb
pushf
inc
add
fstpt
movsb
aas
adc
or
loop
lock
pop
loop
flds
push
popl
adc
mov
jmp
dec
add
jbe
or
push
psubb
xor
mov
fs
lods
dec
les
lds
sarb
out
mov
test
pusha
or
fnstenv
fimull
push
in
mov
int3
setge
and
pop
enter
test
bound
mov
add
adc
cmc
insb
mov
cld
addb
lds
das
in
adc
dec
add
sbb
out
ja
inc
add
js
cltd
push
mov
mov
shrb
xor
add
sbb
daa
int3
inc
pop
pop
sbb
in
inc
inc
cmpb
sub
or
in
leave
insl
sbb
addr16
out
les
xor
shll
lds
test
divl
movsb
mov
out
adc
shr
aaa
aaa
sub
jo
push
loopne
sbbb
bound
mov
add
xor
sub
mov
mov
jbe
mov
push
stc
jmp
dec
rcr
pop
dec
push
mov
pop
add
loope
mov
mov
jnp
popf
adc
jae
push
mov
inc
xor
sub
lahf
jl
lea
decl
mov
pop
shll
mov
xchg
cli
lahf
enter
cmp
divb
inc
fs
scas
pop
fmull
roll
repz
loope
pop
adc
mov
adc
xor
or
out
sub
fs
pop
or
insb
pop
ja
mov
adc
fs
push
scas
xchg
movsl
push
dec
lret
adc
aas
inc
cwtl
jb
and
mov
rcrl
mov
mov
sbb
pop
lock
mov
add
adc
out
sbb
lock
sarl
sub
xlat
mov
shr
jmp
xlat
sub
cwtl
or
pop
sub
adc
mov
dec
dec
or
lahf
mov
pop
xor
jge
xchg
pop
mov
inc
imul
xchg
xchg
out
mov
jb
mov
fiaddl
lret
loopne
jg
push
bound
push
sti
inc
jno
mov
js
in
lret
jo
int3
dec
add
add
aad
push
outsl
and
mov
add
mov
dec
sbb
cmc
in
aaa
push
incl
test
and
jbe
roll
scas
ss
xor
push
inc
jae
lea
dec
lds
int
mov
pop
aaa
pop
in
call
pop
mov
lods
iret
aam
and
inc
testl
add
lods
aaa
sub
jbe
aad
popf
movsb
sbb
cmpsb
mov
mov
or
sbb
into
mov
sub
jecxz
adc
fidivrl
sarb
sbb
daa
cwtl
add
cwtl
ljmp
pop
sahf
fdivrl
xlat
ja
xor
mov
mov
jg
cld
xchg
xchg
xor
sbb
mov
insb
mov
sbb
sub
xchg
inc
lods
push
jae
mov
cmp
mov
cmp
sbb
out
jno
xchg
call
notl
and
fs
add
sahf
add
mov
xor
shlb
bound
movsb
sti
hlt
mov
sub
fwait
insb
push
ljmp
pop
sub
loope
xchg
add
out
inc
in
add
dec
loope
lret
jno
outsb
cmp
and
jne
ja
into
pop
sti
xchg
jmp
mov
mov
xchg
loopne
dec
sbb
add
sub
push
loopne
mov
pop
mov
xchg
arpl
in
sub
sahf
rolb
test
cli
jl
bound
dec
jmp
mov
mov
pushw
das
and
js
addr16
mov
fmuls
and
ds
cmc
outsl
xor
mov
scas
push
dec
es
fildl
jno
xor
add
int
stc
jmp
dec
xor
enter
sbb
loope
xor
arpl
imul
test
sub
dec
cmp
mov
loope
call
xchg
mov
std
sub
or
mov
lods
inc
mov
sub
xor
outsb
and
pop
daa
out
inc
imul
loopne
add
bound
xchg
jle
aaa
lea
es
ljmp
int
dec
sub
testb
jb
jo
rolb
xor
daa
adc
mov
and
cmp
fs
xlat
movsb
pop
mov
lea
mov
sbb
movsl
iret
or
incb
xchg
pop
pop
xchg
push
out
cs
cmp
xor
out
mov
inc
ret
jge
imul
cmp
out
cs
enter
add
pop
jge
jne
stc
gs
stos
bound
lea
stc
imul
imul
ret
push
pop
ss
enter
sbb
cli
mov
adc
sbb
stos
stos
arpl
subb
rclb
sub
sub
faddl
inc
sub
rcrb
orb
mov
fwait
data16
push
test
das
adc
mov
das
cwtl
sub
xchg
mov
cmp
push
mov
nop
idivl
cltd
loope
loopne
int
inc
add
std
cli
push
mov
jl
cltd
fistpll
or
mov
mov
sbb
sbb
mov
imul
jl
pop
add
or
pop
iret
mov
movsl
add
or
cld
or
mov
push
xchg
lret
fisubrs
aad
addr16
aad
mov
mov
cmp
es
pop
aam
ss
cld
mov
adc
sub
mov
jge
jb
jl
les
test
jno
add
push
sbb
pop
sbb
mov
jge
sbb
mov
dec
loop
mov
mov
das
inc
cmp
fwait
int3
cli
fnstcw
mov
out
pop
fdivl
iret
lods
dec
in
aam
mov
cltd
scas
ljmp
pushf
arpl
pop
xor
pop
enter
stc
jle
xchg
lcall
xorl
les
inc
dec
mov
jg
imul
inc
and
xchg
movsb
lea
xchg
adc
push
sbb
inc
mov
pop
sub
sbb
shrl
or
mov
mov
fisubl
xchg
icebp
clc
push
adc
cmpsl
negl
mov
pop
adc
outsb
jae
movsl
xor
clc
xor
nop
dec
iret
in
out
fcomi
outsl
mov
jmp
cs
pop
mov
or
xor
loop
into
pop
xchg
jp
test
and
filds
idivb
mov
and
or
and
mov
idivl
jle,pt
fisttpll
loop
pop
andl
adc
mov
xchg
test
lods
pop
push
fstl
xor
les
mov
xor
jb
aaa
push
lods
mov
jecxz
lcall
pushf
cltd
push
jnp
pop
xchg
mov
push
cmp
mov
in
cld
mov
insb
fildll
dec
ss
xchg
cwtl
xchg
pusha
mov
adc
push
add
push
int
push
dec
push
add
in
push
mov
push
icebp
push
negb
rorl
push
pop
xor
aaa
cmc
les
ror
ljmp
jle
arpl
push
push
mov
mov
mov
filds
mov
loope
mov
and
fdivl
stc
imul
into
out
leave
mov
jne
sbb
sbb
imul
push
add
cmp
roll
mov
das
mov
and
mov
jmp
inc
test
pop
scas
cmp
push
adc
jmp
and
jo
shll
lods
dec
fdivl
dec
cmp
or
jo
das
dec
das
lcall
outsl
and
xchg
outsl
test
mov
xchg
add
pop
ja
xchg
jmp
pop
imul
dec
sub
jle
sub
jo
xor
outsl
out
imul
sbb
packssdw
mov
dec
cmp
xchg
ljmp
pop
dec
xlat
mov
add
aas
sub
mov
and
xor
mov
dec
rcl
int3
data16
and
jmp
pop
lods
mov
cmp
xchg
pop
pop
dec
int3
inc
mov
out
inc
scas
roll
pop
mov
dec
data16
add
mov
aaa
mov
jne
mov
mov
ret
imul
jle
cmp
pop
xchg
dec
mov
jno
in
mov
int3
xor
pop
dec
push
dec
fsubs
add
and
xchg
lcall
rcr
cmp
inc
mov
or
mov
sbb
xor
cmpsl
sbb
call
or
dec
test
mov
stc
lods
adc
lods
xor
repz
shrl
es
pop
call
xchg
bound
push
popf
test
cwtl
xchg
daa
idivb
out
mov
lahf
cmp
or
scas
das
test
pop
cmpb
xchg
pushf
fwait
cmp
jae
xchg
lret
dec
or
push
sub
popf
cmp
cwtl
jns
repz
icebp
out
stc
rcr
int3
into
xor
insl
inc
sbb
sbb
fwait
pushf
adc
stos
lods
neg
pushf
lahf
lock
fs
xor
int
das
pop
idiv
push
repnz
cmp
adc
jb
ret
std
cltd
jns
or
mov
adc
inc
icebp
xor
stc
popa
mov
mov
into
negl
cmp
adc
xchg
movsb
aas
out
mov
addr16
repz
adc
pop
pushf
mov
enter
push
pop
jne
mov
and
das
push
inc
fs
dec
repz
daa
fstpt
movsb
repz
std
sbb
int
cmp
je
not
movsb
add
mov
je
imul
adc
sub
cli
inc
mov
loope
sbb
rol
inc
ret
sub
test
movsl
scas
jp
jae
clc
andl
mov
js
ljmp
loop
pop
cs
daa
test
cltd
xchg
loope
test
outsb
mov
scas
sbb
movsb
cli
mov
pop
jmp
add
mov
pop
and
xchg
push
and
jnp
or
cmc
add
test
std
in
inc
nop
in
repnz
repnz
jae
je
push
push
loop
decl
fbstp
mov
push
xor
daa
iret
pop
in
add
stc
imul
aad
js
mov
cli
push
jno
sbb
xchg
sub
stos
xor
jae
sub
je
andl
adc
sbb
jns
push
pop
leave
jp
inc
adc
push
inc
sbb
push
dec
and
xor
mov
pop
push
sub
lods
jle
dec
lods
sbb
pop
add
lods
sbb
out
push
adc
inc
sub
mov
dec
test
scas
icebp
xchg
adcl
insb
sti
add
pop
lods
pop
rorl
jno
fldenv
or
xor
inc
jmp
adc
test
scas
outsl
stos
stos
mov
in
xchg
jo
popf
or
cwtl
and
ss
dec
dec
lret
push
mov
push
pop
ss
push
mov
subb
mov
data16
aam
inc
cmp
cmp
cld
xchg
clc
addr16
sub
js
or
dec
mov
jo
push
sbb
dec
in
pop
jo
mov
mov
lcall
mov
fsubrl
and
imul
mov
xor
jg
sbb
inc
out
leave
mov
ljmp
push
dec
lahf
adc
cmp
add
adc
xor
popa
test
out
xchg
or
add
push
fwait
cmpsb
sub
popa
inc
dec
stc
lods
mov
adc
int
test
sub
sarb
movsb
adc
decb
mov
mov
push
mov
sahf
push
sub
cmp
loopne
mov
aad
fcompl
bound
mov
bswap
testl
mov
ss
mov
or
dec
pop
mov
xchg
ret
inc
jae
adc
mov
std
adc
roll
add
out
adc
push
sarl
mov
cmp
cmpsl
lahf
mov
test
lock
pop
dec
jl
push
push
or
jbe
xchg
and
xchg
xchg
fcmovne
or
neg
test
aaa
imul
sti
cli
cmpsl
add
pop
jle
out
mov
lahf
adcl
push
mov
jne
inc
fists
aaa
mov
fnsave
fwait
lret
push
add
pop
cmpl
mov
movsl
rorl
inc
call
lret
jb
outsb
xchg
in
scas
fildll
jbe
repnz
adc
divl
and
or
rcrl
test
adc
push
inc
add
dec
fcomps
rcrb
pop
jl
mov
sub
sbb
xor
mov
push
adc
or
jp
js
jb
push
cmp
orl
xorl
mov
test
sbb
lret
add
loope
into
xchg
push
enter
xchg
inc
push
jns
push
mov
mov
cmc
data16
mov
jle
aaa
insl
stos
cli
repz
fs
xchg
or
into
dec
add
cmp
imul
popa
addb
loop
inc
mov
pusha
mov
inc
jle
or
lds
stos
scas
jecxz
or
mov
cltd
es
add
xor
push
test
test
xchg
dec
dec
dec
out
shlb
prefetch
jmp
test
scas
fistl
sub
les
out
xchg
mov
into
cld
mov
fnstcw
inc
insl
xchg
insb
jne
stc
adc
ss
pop
xchg
sbb
enter
popf
popf
mov
repz
push
or
andb
lahf
rcrb
cmp
jbe
xor
pop
or
inc
cmc
mov
frstor
jg
icebp
cmp
jle
dec
pop
inc
lea
mull
ss
xchg
jo
mov
iret
cmp
inc
hlt
lods
push
les
inc
adc
in
notl
pop
and
cld
rcll
popa
test
jmp
jl
inc
ja
mov
pusha
cwtl
pop
mov
mov
dec
cmp
aas
inc
mov
and
and
push
sub
adc
fdivp
mov
dec
test
aas
adcl
xor
andb
sbb
lods
int3
mov
hlt
pushf
mov
cmp
leave
mov
jb
sbb
pop
adc
inc
mov
sbb
popf
daa
sbb
jb
xchg
mov
fsubl
nop
sub
sub
test
fstpt
push
or
insl
popa
cmpsl
andl
fldcw
push
mov
movsb
jne
xor
sbb
nop
andb
inc
mov
jnp
dec
pop
push
mov
xor
loope
out
jb
and
mov
jge
rol
and
jg
add
mov
rcrb
sub
cwtl
push
fists
xchg
jnp
adcl
push
in
xor
jmp
mov
into
shlb
lahf
cs
or
hlt
cmp
xlat
shlb
fsts
mov
jp
fiaddl
out
xchg
mov
iret
cltd
jl
aas
fdivl
push
enter
sbb
flds
movsl
lods
outsl
inc
pop
xchg
dec
popf
sarb
ret
mov
xlat
push
or
dec
test
mov
hlt
xchg
xor
loope
cmp
hlt
xor
adc
push
xchg
add
push
add
adc
out
shl
jle
insl
inc
div
push
xchg
ss
add
repz
pop
sbb
sub
repnz
shrl
test
push
dec
repz
js
add
mov
shll
rorb
jge
pop
aaa
push
lods
fbld
xchg
ss
mov
lods
stos
xor
ds
pop
rcll
stos
mov
xchg
addr16
mov
fwait
lcall
xchg
call
stc
out
or
div
lahf
int
sub
int
stos
lcall
push
sbb
mov
and
loope
push
xchg
aaa
adc
xor
movsb
ljmp
int
dec
shr
cmp
inc
mov
cmp
pusha
iret
push
adc
arpl
fs
jmp
test
int
mov
outsl
lret
add
mov
xor
jae
and
cwtl
mov
dec
adc
std
sub
jmp
leave
pop
cmp
push
inc
imul
push
dec
mov
sub
loop
xchg
imul
loope
dec
lret
and
push
or
mov
repnz
aaa
gs
jo
sbb
fcmovu
bound
shll
cmc
cmc
push
jmp
inc
push
sbb
ss
inc
inc
test
loope
movsl
jno
imul
movq
jbe
fdivrs
mov
divl
xor
push
out
add
lcall
pop
pop
lahf
mov
push
mov
pmuludq
mov
outsb
jp
lcall
sbb
into
jnp
mulb
sti
mov
hlt
in
popf
nop
es
sarb
sbb
daa
dec
adc
gs
sub
mov
xchg
dec
sahf
pop
mov
or
sub
jmp
ffree
fisubrs
pushl
sub
stos
shl
mov
ljmp
push
mov
sbbb
hlt
jb
adc
dec
add
fidivrl
lahf
popf
mov
test
clc
jge
push
jl
outsb
sti
adc
pop
xlat
dec
xchg
push
popa
xor
push
loopne
ret
lods
clc
stc
push
jl
push
icebp
inc
data16
adc
inc
das
jecxz
out
and
adc
lret
mov
mov
hlt
push
outsb
sub
push
jl
les
push
mov
and
fistl
shrb
mov
xchg
inc
fs
and
jo
hlt
mov
lods
fcoml
sbb
aam
pop
xchg
lret
mov
cmp
push
dec
popa
sbb
rclb
sti
ds
idivl
orl
jnp
out
push
bound
movsb
jnp
lods
inc
test
daa
iret
adc
andl
lret
xor
pop
mov
outsb
dec
in
je
and
dec
mov
cltd
push
lods
bnd
sbb
xor
sub
movsl
sbb
lahf
add
fstpt
in
pop
xchg
push
pusha
add
andl
insb
cmpsl
push
or
fsubrs
inc
stc
push
cmp
dec
push
lcall
adc
pop
sub
mov
add
repz
imul
outsl
cltd
sub
mov
icebp
rorb
and
or
xchg
and
jne
push
dec
pop
cmpb
int
insb
add
cmp
imul
mov
icebp
mov
mov
push
add
popf
leave
insl
jno
xor
out
out
shll
jge
mov
pop
cltd
dec
dec
bound
xchg
and
stos
and
mov
jo
outsl
insl
call
xchg
inc
fidivrl
mov
mov
mov
scas
and
cli
xchg
mov
jne
fs
scas
dec
int3
fwait
dec
adc
dec
pop
fcoml
lods
int3
incb
subb
inc
jg
xlat
insb
out
sub
mov
pop
sahf
or
popf
jecxz
jmp
out
adc
fwait
adc
mov
out
and
jecxz
lods
pop
int
addr16
cs
sbb
mov
imul
scas
and
pop
adc
pop
xor
mov
xchg
mov
nop
jge
pushf
lret
lds
call
cmpsl
or
mov
cmp
mov
lods
jge
adc
cmp
inc
decl
iret
xchg
xlat
aad
push
loope
rcll
xor
and
pop
stc
cli
stos
adc
adc
stc
bound
dec
mov
mov
and
mov
into
jle
xchg
pushf
sub
pop
mov
dec
movsl
lods
xor
int3
jnp
leave
cmp
mov
lds
jp
sbb
out
push
fldl
mov
xchg
sub
sbb
movsb
jbe
fnstsw
cld
cltd
push
xchg
sti
and
or
inc
push
mov
add
pop
push
mov
movsl
into
pop
mov
nop
daa
dec
xchg
mov
jo
mov
push
ss
aaa
cmp
dec
ror
sbb
jbe
add
je
loope
sti
adc
sahf
dec
arpl
syscall
lret
jns
leave
add
push
lods
jecxz
push
push
push
mov
jno
popf
adc
inc
push
cmpsl
lods
daa
aas
jecxz
aas
and
popa
pop
pusha
push
adc
loope
test
dec
add
decl
scas
aam
fnstenv
xrelease
fnstenv
xor
cmpsl
jns
xor
xor
mov
sub
mov
call
jno
pusha
and
fsts
in
bound
and
mov
pop
mov
sbb
or
xor
jo
sbb
imul
or
jns
mov
cmp
jmp
xor
push
aas
sahf
mov
mov
mov
repnz
jmp
js
sub
popf
cmp
aam
daa
xchg
sbb
cmp
adc
xor
push
shrb
pop
jae
loopne
jo
add
pop
mov
insl
fldcw
fidivl
lret
jp
pop
adc
sub
call
push
fists
and
rorl
out
imul
mov
push
sahf
js
pop
push
test
mov
ja
xlat
es
aas
cmp
ret
mov
pop
inc
xchg
lcall
std
in
lcall
xchg
inc
loope
dec
loope
pop
mov
mov
adc
jp
inc
dec
sbb
push
into
lods
adc
int
inc
stos
mov
or
into
out
cmp
sahf
out
fisttpll
xlat
mulb
mov
imul
xchg
dec
setp
sbb
mov
adc
adc
sbb
inc
sub
fisttps
mov
adc
mov
shl
inc
repnz
push
and
cmpsl
jo
jno
lahf
sbb
xor
push
shrl
cmp
fsts
loopne
test
xlat
sbb
mov
jp
orl
adc
lret
add
stos
cwtl
mov
scas
cmp
movsl
stos
adc
mov
xor
scas
mov
jno
jle
cld
pop
mov
stc
xchg
ljmp
sbb
add
pop
std
scas
xor
or
pop
cwtl
sarb
popf
lock
js
outsb
cld
filds
dec
pop
out
xchg
xchg
mov
aad
icebp
lods
movsb
or
or
pop
inc
in
push
push
stos
xchg
test
xor
mov
test
and
mov
xchg
jno
push
cli
daa
fldt
enter
sbb
sti
jnp
lds
xor
out
pop
popa
cmp
cmp
mov
test
sbb
inc
test
setns
sbb
das
aaa
mov
inc
cwtl
mov
test
insl
inc
jl
movsb
ss
dec
xor
iret
cmpsb
dec
aaa
mov
dec
push
movsb
mov
add
out
xchg
dec
adc
fsubr
rorl
mov
ud0
and
sbb
jmp
arpl
test
xchg
sbb
or
jae
int
xor
insb
jmp
push
cmp
aas
sub
xchg
mov
xchg
aam
loop
imul
jmp
aaa
adc
jg
xor
pop
popf
add
add
dec
fcmovbe
push
mov
clc
add
xchg
mov
dec
xchg
divl
jg
mov
or
inc
push
scas
push
cld
add
sbb
mov
insb
xchg
das
xchg
xchg
push
adc
lahf
pop
fcompl
daa
push
es
mov
lcall
popa
je
enter
add
aaa
imull
pop
pop
nop
leave
fwait
lcall
mov
push
fsubl
jecxz
cwtl
shl
cmpsl
lods
sub
cwtl
push
bound
lock
pop
adc
movsl
dec
push
xchg
shlb
mov
fs
sub
lock
inc
jns
fimuls
clc
cmp
test
test
sub
sbb
xchg
test
in
roll
mov
addr16
das
in
inc
adc
inc
ds
fcoml
lods
ds
adc
call
dec
sbb
mov
and
mov
ret
xor
mov
mov
sbbl
outsl
lds
clc
jge
jb
lcall
sbb
pop
es
imul
mov
fs
dec
mov
jl
dec
addr16
inc
inc
inc
lcall
push
mov
call
sub
mov
pop
mov
cmp
sub
lods
xor
pop
je
je
adcb
rcll
push
out
fimull
arpl
test
fdivp
inc
mov
dec
push
push
stc
data16
outsb
or
mov
mov
scas
idivb
pusha
pop
ret
int3
leave
aam
popa
inc
dec
std
adc
lods
jecxz
sbb
pop
outsb
into
scas
sub
hlt
cmp
jmp
cmpl
push
into
dec
movsl
sbb
pop
cmpsl
out
adc
loopne
rcl
loopne
mov
clc
call
jne
mov
stc
cmp
ret
push
mov
xchg
stos
push
mov
sbb
test
sbb
add
pusha
cltd
xor
sarb
jno
call
mov
sbb
cltd
outsb
pushf
cmp
int
pushf
mov
pop
and
repz
mov
mov
sbb
mov
into
insb
sarl
das
jae
out
mov
push
pop
aam
cmp
xchg
loop
fucom
cmp
rcrl
dec
leave
fisttpl
pop
mov
mov
sbb
imul
mov
cmpsl
aas
jb
add
xchg
pop
imul
cmp
int
push
out
iret
dec
shl
leave
mov
mov
nop
xchg
js
push
les
sbb
in
mov
mov
push
dec
mov
ret
dec
les
cs
add
popf
and
xor
in
sub
loop
aas
mov
dec
imul
sub
nop
je
xor
inc
setb
cmp
fnstsw
fsubl
pop
fmull
sub
jno
and
std
mov
mov
enter
or
dec
insl
scas
xchg
sbb
jno
out
pop
filds
stc
jmp
pushf
mov
lods
xor
or
or
mov
in
cmp
clc
cli
mov
sub
pusha
mov
dec
fwait
repnz
cwtl
jo
mov
test
adc
hlt
aam
outsl
dec
xchg
into
jl
inc
cwtl
repnz
out
push
js
xchg
pop
fistpl
bound
imul
jae
or
inc
icebp
gs
adc
cs
sub
js
sbb
lea
sbb
pop
jne
xchg
sbb
mov
inc
jne
mov
mov
mov
stc
xor
sub
inc
cmpsl
in
jecxz
or
and
mov
jmp
inc
mov
jne
xor
rorl
ljmp
inc
sub
ret
jae
and
shlb
out
arpl
dec
sub
sub
pop
mov
and
ret
add
popa
jp
or
hlt
lahf
imul
lods
scas
mov
mov
clc
lock
out
inc
ficoml
xor
out
mov
test
int
sub
icebp
scas
pop
inc
hlt
cmpsl
arpl
or
pop
jne
jmp
dec
mov
or
orb
imul
jl
arpl
or
mov
jg
out
out
lahf
lea
mov
add
push
or
cli
push
bound
push
or
push
fdivl
push
sub
and
adc
xor
push
arpl
inc
fscale
addr16
ljmp
les
jno
jg
sti
popf
leave
mov
test
push
adc
lahf
adc
push
add
mov
scas
enter
iret
mov
popf
cmpsb
notl
lock
mov
mov
scas
loopne
xor
mov
dec
mov
mov
movsl
cmp
cmpsl
mov
fstps
xor
cmp
mov
ficoml
sub
cmp
jmp
lods
xor
insb
jge,pn
shll
nop
jle
push
std
pop
inc
sub
sub
push
sub
pop
push
mov
dec
lret
push
pop
les
lcall
mov
jnp
dec
in
pushw
jno
js
and
in
push
loop
loop
loope
inc
mov
push
rorl
std
loopne
jl
lahf
fistpll
imul
movsl
aad
push
hlt
jno
jl
arpl
pop
jecxz
test
subb
jle
sahf
mov
cmp
mov
or
lods
cmp
add
hlt
pop
pop
mov
lock
movsl
je
popa
sbb
xchg
jbe
imul
das
cltd
fmul
test
shll
sub
mov
mov
icebp
cmpsb
pop
jecxz
pop
xchg
scas
in
xchg
mov
daa
or
push
sti
orb
inc
ret
add
sub
push
nop
sub
pushw
in
sarb
shl
hlt
cs
adc
fadds
fwait
in
add
or
loope
or
movsl
stos
decb
jle
mov
or
mov
mov
xchg
xor
pop
push
rcr
icebp
xchg
mov
aaa
and
mov
jg
ljmp
ds
leave
das
add
clc
add
mov
dec
ret
lods
cld
sub
fdivl
shr
ljmp
mov
dec
fcmovnb
or
in
stos
cld
sbbb
cld
divl
mov
into
loop
push
stos
add
fcmovne
mov
outsl
popa
enter
cmp
push
sti
xchg
add
sbb
popf
iret
clc
movsl
inc
imul
or
aaa
mov
mov
aad
mov
pop
js
fxam
xlat
in
jo
dec
mov
mov
mov
dec
ja
adc
hlt
sbb
mov
mul
mov
adc
and
mov
out
ja
xchg
icebp
jecxz
mov
stos
rorl
and
xchg
and
fimull
xchg
lea
leave
clc
mov
jnp
add
push
inc
outsl
mov
xchg
lea
flds
les
fidivrl
and
push
lcall
mov
mov
clc
negb
into
pop
stc
inc
jae
sub
mov
arpl
js
in
mov
and
sub
outsl
mov
std
into
xchg
ret
dec
outsl
pop
pop
sarl
fpatan
adc
inc
sbb
and
dec
idivb
cmpsl
popl
dec
fisubl
fwait
dec
add
xchg
imul
call
mov
outsl
pop
hlt
xor
cmpsl
add
add
mov
repnz
scas
push
fwait
sbb
xchg
or
inc
fs
or
fiadds
je
and
adc
sub
mov
addr16
test
icebp
inc
jge
or
pop
ja
cmpsl
roll
mov
ffreep
jg
xchg
ficomps
es
mov
iret
int
push
out
je
dec
xor
icebp
out
ficomps
imul
jo
xlat
movsb
pusha
addr16
loope
jg
or
and
clc
xor
inc
je
cmp
lahf
int
mov
icebp
pop
xor
jns
inc
jne
les
mov
addl
and
aas
adc
dec
jne
stos
sub
cmp
aam
sub
dec
xchg
mov
fldenv
scas
or
adc
flds
push
dec
rdtsc
rorl
mov
jmp
dec
mov
pop
dec
int
fidivs
add
inc
js
xor
adc
mov
je
inc
or
sbb
push
inc
in
pop
inc
out
xor
stos
movsb
das
shll
subb
in
pop
lods
cs
jp
lods
sbb
ret
push
repnz
or
outsb
xchg
ljmp
xchg
mov
jb
in
or
daa
pushf
rolb
inc
jo
das
xchg
jae
inc
iret
pop
mov
ret
xchg
movsl
leave
add
gs
mov
popa
dec
imul
xchg
push
fwait
pushf
and
xchg
sarb
add
idivb
pop
xlat
and
adc
and
in
pop
fisubl
movsl
aam
pusha
or
sbb
push
scas
sbb
push
fildll
arpl
ret
pop
cwtl
push
hlt
xchg
xchg
inc
sub
add
movsl
movsb
mov
mov
push
adc
mov
stc
xor
mov
lds
in
dec
sahf
pusha
frstor
or
jmp
mov
mov
pushf
push
inc
cmp
imul
lahf
jle
cltd
push
inc
fnstenv
dec
shl
lods
rcrl
inc
push
add
test
xor
leave
and
mov
dec
or
sbb
mov
lea
fstl
ja
push
les
call
outsl
inc
fcmovbe
mov
xor
xchg
pop
add
sahf
xchg
and
out
rol
cmp
sub
mov
out
adc
in
fsubr
sti
fstpl
xor
div
mov
data16
dec
dec
ljmp
pop
mov
push
dec
mov
jbe
xchg
dec
leave
scas
adc
leave
pop
iret
inc
ror
outsb
nop
cmp
xchg
jns
adc
xor
xor
imul
push
mov
hlt
push
movsl
sbb
xor
sti
cmpsb
add
mov
add
dec
pop
inc
rcrb
cli
jae
xlat
or
mov
fiadds
and
mov
fs
add
push
cmp
pop
imul
sbb
stos
xorb
cmp
jno
xchg
push
scas
mov
or
outsl
sub
inc
xchg
int3
push
data16
psubusw
fs
dec
cmpsb
insb
or
fdivrl
enter
fdivs
mov
js
push
pushf
push
nop
push
jo
and
cwtl
test
mov
in
mov
mov
hlt
cmp
push
xor
and
sbb
jmp
jne
arpl
lcall
test
lret
xlat
inc
lock
scas
imul
push
popf
adc
sub
imul
jge
sbb
scas
adc
xor
jbe
xchg
arpl
xchg
lods
push
or
mov
in
lods
dec
inc
mov
in
or
add
je
sahf
fidivl
jno
jne
gs
adc
ror
jbe
pop
and
aas
jge
repz
iret
scas
and
jmp
mov
inc
test
lret
lock
adc
or
mov
ds
aaa
stos
imul
dec
pop
pop
jo
int
and
sbb
clc
sbb
js
or
mov
pop
unpcklps
es
insb
ret
lock
ja
lahf
in
pushf
ret
inc
lea
push
ret
loope
insl
pusha
xor
mov
pop
xlat
test
fistl
mov
add
int
cmpsb
arpl
inc
cmpsb
outsb
jecxz
sbb
sar
add
or
pop
jnp
sahf
stc
lcall
sbbl
fwait
or
cmp
div
cmpsl
pop
jge
maskmovq
bt
cmp
jb
into
dec
sbb
or
je
push
cmp
jmp
inc
std
adc
and
dec
imul
mov
xchg
call
loope
lret
movsl
lcall
lods
stc
and
sub
aas
sti
dec
ret
ljmp
xchg
mov
pop
cmpsl
adcb
sub
enter
or
aam
push
xor
jl
fdivrs
js
xor
jno
popa
inc
jbe
imul
and
popf
mov
enter
sbb
arpl
mov
xor
xor
lock
mov
insl
je
cmpsl
jns
mov
dec
jmp
sub
push
mov
mov
icebp
mov
fcoml
and
push
adc
or
jecxz
jo
or
inc
lea
add
mov
mov
adc
mov
rclb
jae
jb
mov
lods
sbb
add
cmp
add
sti
pop
ficomps
push
xor
push
push
fnsave
pop
dec
cltd
jl
cmp
dec
fwait
xchg
cwtl
mov
aaa
xchg
call
test
movsb
add
jecxz
sahf
fwait
add
push
sub
cmp
nop
pop
aaa
sbb
mov
ss
inc
je
push
call
cmpl
movsb
xchg
add
into
loop
ljmp
and
daa
jg
dec
jge
adc
mov
out
mov
mov
jb
jge
leave
in
imul
mov
fs
fs
push
adc
adc
test
test
subps
dec
movsb
pop
sub
and
je
pop
in
jb
std
ds
mov
sub
and
sbb
test
mov
add
adc
lret
scas
mov
mov
cmp
xor
aas
jmp
test
or
jl
push
sbb
outsl
lret
jp
mov
mov
ja
cwtl
pushf
mov
and
dec
or
and
and
enter
pop
xor
push
or
or
hlt
pusha
in
cwtl
or
cmp
add
dec
adc
adc
pop
xchg
sti
and
cli
sub
add
out
cltd
test
fadds
sahf
pop
rorl
pop
push
aas
jg
xchg
test
and
nop
pop
rorb
add
shll
mov
clc
pushf
cmp
sbb
rorl
dec
pop
add
stos
xor
scas
cmp
test
loopne
mov
xchg
fwait
loop
add
mov
xchg
and
testl
repnz
stos
sub
imul
and
in
nop
movsb
das
and
xchg
pop
jg
xchg
testl
in
in
xchg
or
ret
or
jnp
sub
sub
xchg
sbb
fmull
test
lds
push
mov
and
inc
cmp
or
jle
xchg
and
push
xor
add
aas
stc
mov
mov
xchg
adc
xor
lea
clc
shrl
jo
xchg
nop
stos
pop
negl
sub
adc
dec
dec
xor
push
pop
add
add
shlb
mov
jge
outsb
xor
pop
ljmp
mov
fistpl
jns
sbb
stos
sbb
out
adc
sub
fdivrp
dec
inc
adc
jo
cmp
enter
mov
push
adcl
loopne
push
cltd
fucomp
mov
out
xchg
sub
adc
rol
push
xchg
inc
cmp
jb
push
rclb
push
dec
mov
inc
pop
or
sbb
cmpsl
in
insl
jge
add
out
sbb
adc
xchg
popf
sbb
lds
cmc
mov
xchg
mov
jmp
jae
cmpsl
dec
filds
imul
push
xchg
push
shll
sbb
into
fs
pop
std
cltd
mov
addl
mov
mov
xchg
sub
add
jl
fdivrs
jo
lods
and
push
xchg
inc
hlt
pop
add
cmp
pop
cli
rcl
pop
fsubl
arpl
and
mov
icebp
popf
test
fcompl
lods
popa
imul
fwait
sarb
mov
lea
push
and
lods
nop
pusha
fs
ds
repnz
fwait
ds
or
mov
jmp
loop
xchg
repz
pop
mov
out
xor
repz
out
sbb
xchg
or
loopne
adc
popa
sahf
testl
push
ret
jo
fimuls
imul
sar
cmp
popa
inc
xchg
pop
je
mov
jle
cmpsl
ret
mov
inc
cmc
notl
or
gs
lcall
pop
loop
xorb
aaa
and
lret
insl
test
fmul
cmc
push
pop
ljmp
in
push
shr
ds
loop
imul
push
adc
mov
push
lods
daa
lret
sbb
pop
or
jne
gs
mov
xor
cld
pop
test
das
or
movsb
dec
data16
xchg
js
xor
sub
data16
sahf
add
push
loopne
test
leave
jl
push
push
je
nop
push
fwait
pusha
push
mov
mov
or
jmp
ret
rcr
lds
cli
es
ficomps
adc
push
aad
jg
push
daa
pop
adc
js
add
out
dec
rorl
js
shl
mov
hlt
pop
scas
les
shlb
ds
cmp
outsb
sbb
xchg
ds
push
pushf
test
outsl
or
or
mov
mov
les
mov
xor
push
lock
xlat
push
push
aas
dec
push
jbe
insb
lock
mov
orl
aad
cmp
or
and
outsl
and
ret
and
mov
jno
mov
push
into
jne
sub
or
test
sub
sbb
cmpl
sub
sub
jecxz
adc
vphadduwd
cmpsb
mov
jp
push
jns
int3
pusha
pop
xchg
in
lret
scas
sbb
adc
inc
out
lock
push
outsb
xchg
movsl
sti
and
icebp
sub
mov
push
clc
xor
cmc
scas
outsb
inc
lock
jmp
jae
jmp
clc
and
cmp
insb
lods
daa
inc
mov
ds
push
stos
sahf
and
jnp
add
mov
shrb
pop
pushf
mov
and
inc
sub
dec
stc
cmp
daa
pop
adc
xchg
scas
mov
adc
ret
iret
mov
add
test
mov
jecxz
inc
aam
icebp
mov
push
stos
inc
rorb
dec
sub
hlt
push
fwait
movsl
xor
jbe
and
mov
aam
sbb
mov
add
and
js
arpl
clc
mov
rcrl
out
pop
jg
sbb
add
pop
xorl
idivb
out
or
push
xor
loop
mov
incl
push
pusha
sti
repnz
inc
nop
stos
add
mov
jp
cmpsb
lcall
and
or
jno
add
xor
iret
xchg
scas
dec
fnstenv
fdiv
push
ret
sti
pop
ret
idiv
mov
mov
bound
out
mov
mov
xchg
push
ss
mov
ret
cmp
fdivr
and
xchg
cld
push
in
cmp
jge
inc
call
fisubrs
jle
arpl
mov
xchg
jl
add
cmc
add
popa
adc
cmc
or
cmp
pop
incb
rcr
movsl
lods
jno
pop
cmpsb
mov
out
test
and
jg
ficoms
or
dec
xor
lret
lcall
into
push
mov
es
or
imul
imul
enter
fsubp
sbb
out
aaa
cmp
sub
out
and
inc
inc
add
push
stos
pop
cmpsl
adc
leave
inc
fs
cmp
pop
out
sti
les
jns
leave
lret
mov
mov
mov
jge
enter
cld
adcb
xchg
ljmp
inc
dec
mov
mov
div
into
adc
push
pop
pop
sti
ficompl
jnp
ficoml
xor
out
or
adc
xchg
pop
xchg
adc
test
dec
int3
mov
fwait
adc
hlt
xor
push
cmp
adc
lods
xchg
inc
mov
jne
pop
inc
mov
inc
outsl
push
sub
sbb
mov
iret
subl
imul
mov
ret
add
ret
shlb
mov
stc
jo
mov
fdivrs
mov
rorb
adc
imulb
sahf
xchg
dec
sbb
ja
sbb
mov
ds
xchg
adc
repz
sub
push
sbb
in
or
sub
fcmovu
push
jb
inc
or
or
push
add
cmp
fwait
pop
lock
xchg
inc
into
fdivrs
push
jg
icebp
call
inc
jns
mov
mov
add
notb
sbb
addr16
test
sahf
or
lret
lea
hlt
mov
std
xchg
lock
sub
insl
push
jmp
repz
shrb
out
or
addl
movsb
enter
add
jo
xlat
dec
lods
adc
aas
test
xchg
fisttpll
xchg
mov
xchg
ss
push
in
imul
mov
jle
rcr
shll
pushf
and
js
pop
mov
lcall
js
cmpsb
cwtl
iret
test
push
pop
push
hlt
out
mov
xor
pop
mov
rcll
lock
test
stos
mov
cmp
push
push
pop
push
xor
rclw
cmp
adc
stos
jl
xchg
inc
sbb
inc
popa
jnp
pop
das
pop
xchg
pop
imul
imul
jns
hlt
push
loope
jp
xchg
dec
or
lret
cmp
and
rorl
sbb
outsl
jo
jnp
add
add
xchg
les
sub
or
jbe
mov
lea
je
leave
in
or
jp
ljmp
negb
outsb
dec
fisubrs
iret
mov
pop
loope
cmp
rol
sub
mov
and
sub
inc
pop
cmp
nopl
js
scas
mov
loop
rcrl
call
int3
dec
adc
std
movsb
aas
and
xor
adc
repnz
mov
aaa
mov
mov
cmp
inc
and
mov
loope
or
out
outsl
cmpsl
mov
insl
jl
mov
cmpsl
or
aad
stos
add
lret
pop
test
dec
vpaddusb
pop
mov
loope
xchg
add
jl
and
cltd
sub
xchg
xlat
push
jge
push
mov
dec
cs
jg
aad
nop
push
hlt
cmp
subb
pop
sub
sub
outsl
lods
add
xchg
dec
push
push
lcall
xor
cltd
into
mov
lahf
push
dec
push
push
xor
sub
loopne
dec
ja
xchg
pop
mov
in
add
jecxz
push
mov
scas
mov
dec
jp
jl
mov
sbb
add
mov
push
iret
mov
jne
mov
mov
aad
push
push
cmp
mov
stos
xchg
mov
inc
js
push
jecxz
data16
jo
dec
jne
js
addr16
pop
lds
sahf
adc
jae
fmuls
mov
and
fimull
loopne
lret
pusha
in
pusha
insl
jle
fildl
call
hlt
int
rorl
mov
xchg
mov
jle
ss
pop
mov
pop
push
bnd
dec
cmc
aas
insb
jae
insb
jp
jl
sbb
jnp
loopne
mov
mov
mov
jmp
jbe
lret
and
dec
mov
cmp
or
xchg
loope
jge
aaa
add
stos
mov
das
enter
and
mov
stos
inc
cmp
outsb
jmp
cmc
fld
ja
lock
mov
call
adc
adc
xchg
movsb
icebp
jecxz
sub
sub
xchg
jge
insb
pop
xchg
xlat
push
icebp
mov
out
test
sub
test
int
inc
jmp
inc
rcl
stc
sub
scas
test
or
addr16
in
mov
push
sbb
mov
cmp
ja
jb
addr16
insl
inc
jge
lahf
dec
jg
leave
sbb
jo
or
cwtl
push
shr
insl
cmp
xlat
dec
out
push
dec
dec
sbb
mov
sbb
cmpsb
mov
sti
into
jno
mov
mov
jbe
adc
push
cmpsl
in
les
mov
repz
inc
ja
cmp
imul
pop
add
cmp
push
icebp
add
cmpsl
ja
sub
jle
jmp
push
jb
pushf
add
xor
pop
pushf
inc
mov
test
push
adc
pop
movsb
sbb
neg
data16
push
push
cmp
mov
or
je
lahf
adc
xchg
pop
rorl
mov
rcrl
jp
sbb
push
push
mov
inc
gs
dec
lea
mov
push
stos
push
xor
dec
xchg
addr16
inc
push
cli
add
test
lds
push
aaa
add
fistpl
filds
mov
aaa
pop
or
fstpl
and
inc
pusha
jge
lret
push
pop
dec
flds
xchg
jb
xchg
jle
mov
lds
jge
inc
test
mov
adc
mov
fwait
xchg
mov
and
or
inc
pop
lea
or
bound
aad
out
mov
inc
push
dec
adcb
dec
dec
ja
insl
lcall
mov
xchg
cmp
cmc
jne
rcrl
fstp
xor
dec
push
push
movsl
push
dec
xchg
lret
in
aaa
sbb
jnp
aas
enter
dec
rcll
cmpsl
rorl
fbstp
push
add
test
jmp
inc
lea
adc
iret
lods
adc
cmc
jno
jl
ja
jne
mov
addb
cmp
scas
cmp
lahf
cmp
xor
iret
xchg
loopne
clc
or
push
xchg
movsl
cmp
push
leave
rcrl
shll
mov
mov
imul
inc
dec
loopne
jecxz
xchg
ja
sbb
decb
and
fsts
nop
aad
loope
jno
push
mov
and
cwtl
fst
loopne
std
jmp
andb
mov
jecxz
jno
sbb
leave
and
ret
jo
ss
icebp
loope
setns
xor
leave
call
gs
or
jecxz
lock
jp,pn
loope
movsb
add
ficomps
cmp
and
mov
mov
jge
and
insb
out
leave
inc
xchg
ljmp
movsb
or
scas
cmpsl
sub
fldt
mov
pop
call
mov
cld
outsb
cmpsl
inc
fstl
les
in
mov
scas
addl
lret
out
mov
rorb
dec
repz
jl
test
jg
nop
sahf
sub
sub
cltd
test
xor
addr16
jl,pt
int
jae
mov
lock
fcmove
lret
push
sub
cmp
jnp
sbb
cwtl
xlat
dec
ja
cli
movsb
mov
lods
push
push
mov
in
jns
mov
pop
push
push
xchg
aad
or
je
pop
lock
mov
repz
inc
inc
iret
addb
lods
stos
sbb
adc
jmp
inc
cmpsb
and
xchg
xor
adc
sahf
js
mov
std
add
add
push
push
xlat
in
add
data16
jl
out
jg
imul
push
dec
insl
sarb
push
push
in
sti
les
add
adc
cmp
pop
scas
hlt
repnz
xor
xchg
mov
xchg
xorb
ljmp
lock
or
fnstcw
xlat
xlat
sbb
cltd
sub
mov
mov
pop
pop
pop
fisubrl
sub
mov
jo
and
addr16
testl
jmp
int
dec
daa
xlat
and
outsb
loope
add
enter
imul
cwtl
fistps
sbb
add
les
fninit
popf
jge
dec
cltd
push
mull
leave
fcoml
cltd
push
outsl
dec
jno
xchg
clc
fistpll
push
jbe
sbb
rol
cmp
fldcw
dec
repnz
leave
movb
push
pop
mov
or
mov
addr16
shrb
cmp
insl
inc
lcall
bound
test
mov
and
xor
leave
add
jge
imul
out
cli
xor
lods
lcall
fwait
push
xor
adc
xchg
stos
inc
negb
or
mov
mov
pop
and
add
adc
mov
gs
js
std
mov
leave
loop
inc
mov
nop
roll
mov
sbbl
addr16
xchg
inc
push
bound
fldcw
shl
jle
mov
and
lret
or
jae
std
cli
xchg
mov
pop
lea
push
and
adc
iret
mov
in
xchg
xor
rcrl
push
and
inc
jge
aas
shlb
test
push
push
mov
inc
dec
xchg
lds
and
out
lods
sti
and
popa
fs
pop
mov
push
and
cli
mov
ss
mov
sbb
jae
or
mov
add
fildll
in
mov
aaa
and
push
in
mov
stos
lcall
cld
dec
das
mov
xadd
xor
fbstp
bound
icebp
cmp
sbb
iret
out
loop
inc
clc
rorl
add
int
pop
jle
ret
cmpsb
sbb
and
pop
ret
push
pop
xchg
xor
add
jno
daa
jbe
mov
push
test
inc
movsb
repz
mov
inc
or
fbstp
cmp
fiadds
cmp
loop
mov
addr16
arpl
loope
mov
mov
sti
nop
mov
sti
fcompl
outsb
or
and
lret
push
in
dec
xchg
std
mov
cmp
mov
sarl
cmp
arpl
mulb
mov
rclb
pushl
xor
mov
dec
popf
xlat
cltd
out
pusha
mov
stos
mov
cld
xor
in
fbld
loope
xchg
mov
int3
and
dec
andl
jne
loopne
mov
mov
inc
out
fadds
fimull
dec
add
xchg
mov
mov
and
xchg
adc
and
push
inc
insb
outsb
sbb
xor
or
inc
ss
xchg
push
in
dec
add
adcb
sbb
hlt
into
pop
nop
lods
iret
jno
in
and
and
scas
scas
pop
push
loop
dec
push
xchg
cld
mov
jmp
add
inc
ljmp
and
nop
jbe
das
fs
fwait
cmp
xor
stc
int3
adc
pop
imul
in
lock
sbb
lds
inc
pop
cwtl
inc
jne
mov
sbb
mov
imul
and
sahf
inc
das
and
rcrb
sarl
lret
adc
push
sbb
inc
push
out
push
jo
hlt
setb
cmpsl
inc
aam
pushf
dec
inc
jno
ret
pop
lret
aaa
es
sbb
pop
hlt
xchg
ror
and
fistpll
dec
sub
dec
pop
cld
arpl
gs
pop
outsl
out
fnstenv
mov
leave
inc
cs
ss
mov
pop
rorl
push
dec
jge
rorl
scas
jge
in
arpl
sub
stc
test
adc
hlt
div
mov
mov
mov
addr16
and
push
ss
and
sbb
xor
add
mov
xchg
push
js
push
jmp
sub
or
jg
xchg
cli
mov
and
and
sar
sbb
dec
jo
adc
int
xchg
jb
fmulp
push
sub
push
or
std
push
aas
or
jecxz
fisttps
xchg
adc
jns
movsl
mov
adc
inc
mov
inc
loopne
sub
stos
scas
int3
mov
loop
push
fadd
sub
pushf
mov
aaa
testl
and
jmp
mov
inc
mov
in
movsb
out
xchg
out
cmp
mov
mov
or
xor
lret
es
and
lods
or
jg
sbb
mov
mov
shll
popf
inc
inc
jns
fiaddl
jb
stc
mov
rcr
bound
inc
sti
xor
jno
lahf
scas
push
test
pop
fnstenv
add
jbe
fnstenv
add
jae
xchg
fistpl
sbb
sub
jmp
mov
sub
sbb
ret
or
sbb
loope
sbb
cmp
jns
lret
inc
cmp
mov
cmp
xor
shl
mov
imul
sub
and
add
call
insl
icebp
in
test
and
repz
loopne
jmp
testl
mov
aad
sbb
push
push
imul
mov
cmpsb
pop
rcrb
in
mov
cmp
pop
into
loope
adc
mov
into
inc
bound
addr16
push
insb
xor
mov
inc
lahf
dec
leave
cmp
jbe
adc
push
jo
cs
or
cmp
int3
arpl
daa
push
xchg
and
int3
ret
xchg
add
out
ss
aas
das
xchg
imul
push
add
cmpsb
insl
jge
sbb
icebp
insb
push
movsb
rorb
adc
sbb
hlt
lods
insb
aaa
mov
push
jmp
rorb
cli
je
inc
out
int
insl
and
fwait
iret
xlat
daa
xor
or
scas
push
testb
stc
outsb
fwait
xchg
lods
ror
sahf
ss
data16
mov
inc
cmp
mov
shr
or
jae
lods
add
and
in
lea
dec
and
sahf
test
adc
pop
ficompl
and
sub
leave
dec
and
xchg
mov
and
add
pushf
lahf
fcomps
cltd
jne
fbld
pop
insl
dec
pushf
idivb
ss
mov
xchg
lods
std
add
lock
sbb
cli
test
inc
adc
int
fwait
sub
xchg
cltd
xchg
dec
jl
pop
add
arpl
adc
push
xchg
inc
xchg
pop
jb
sbb
scas
mov
pop
push
scas
adc
rcrb
sbb
popa
orb
dec
sbb
imul
dec
or
mov
inc
shr
dec
pop
test
leave
pusha
sbb
iret
out
stos
cs
leave
bsr
repnz
ret
jg
inc
inc
lahf
dec
dec
sub
xchg
cwtl
movsb
cmp
and
xor
flds
xlat
mov
jge
lods
insl
and
lret
or
xor
fdivl
push
add
ficompl
cmp
out
int
dec
leave
sub
add
mov
jl
and
or
cmp
adc
addr16
add
mov
loop
sub
or
add
mov
cwtl
sub
inc
sahf
dec
and
jns
mov
jmp
sbb
mov
pop
std
sub
out
xchg
and
mov
sub
sti
cmp
xor
popf
mov
inc
cmp
cmp
lea
inc
push
jnp
mov
popf
call
push
lds
mov
pop
lds
in
shr
push
das
and
lods
xchg
clc
mov
sub
ja
fsubrp
push
xchg
dec
jg
mov
sbb
xchg
or
mov
hlt
notl
push
adc
pop
and
xchg
ss
adc
jae
sbb
cmp
xchg
push
rorb
shrb
imul
mov
dec
inc
inc
mov
xchg
or
loop
mov
je
repnz
cmpsb
aas
int
cmp
cmp
pop
dec
fcoml
scas
loop
sbb
push
into
push
lods
repz
xchg
jbe
sbb
push
cmp
inc
arpl
test
add
pop
or
std
shrl
mov
dec
stos
sub
push
test
clc
add
loopne
push
je
add
scas
add
inc
inc
xor
pushf
data16
pop
mov
cmp
mov
gs
adc
xchg
mov
push
fimuls
and
sub
std
jl
ficoms
mov
push
add
push
cmp
adc
ss
pop
inc
mov
pushf
jge
test
aad
shrl
inc
icebp
fucomip
stos
mov
xor
insl
mov
inc
mov
mulb
out
int3
pusha
push
pop
pop
and
das
mov
push
or
xor
mov
andb
stc
sahf
mov
imul
add
push
push
outsl
mov
dec
push
push
xchg
xchg
cmp
mov
rorb
or
xchg
xor
pop
lods
mov
bound
mov
aas
sti
mov
inc
repz
mov
sub
mov
mov
sbb
subb
fnstcw
leave
out
scas
xor
xchg
insl
notl
dec
inc
push
push
es
push
mov
std
stc
xchg
push
popa
push
js
orb
ja
addb
fstpl
rorl
push
pop
scas
mov
push
cmp
add
out
out
sbb
repz
aaa
lret
popa
fcmovnu
lock
addb
movb
iret
rolb
fwait
mov
xchg
out
nop
fs
inc
add
sahf
pop
add
es
stos
adc
or
fwait
or
add
sub
xor
mov
and
cmc
movsl
paddd
or
sbb
mov
aaa
mov
test
jno
inc
rorl
lret
jae
add
dec
fidivrs
addr16
xor
sbb
inc
addr16
lret
iret
fstl
scas
mov
push
aas
sub
mov
pushf
rcrl
mov
xor
inc
dec
das
lods
add
insb
and
push
rcr
sub
test
xor
xlat
or
in
inc
sub
or
inc
cld
mov
inc
jle
stc
sbb
in
sbb
adc
les
push
jmp
adc
push
notb
mov
mov
sbb
jno
push
jp
std
or
cli
xor
iret
mov
aaa
dec
les
and
fwait
cltd
in
mov
inc
fldenv
cmpsl
popa
mov
sub
pop
shll
dec
sar
mov
sbb
pop
lret
push
mov
out
mov
mov
dec
addr16
test
jae
lahf
inc
repnz
kmovb
xchg
cmp
mov
jl
jo
add
cmp
aam
and
enter
xchg
aaa
jb
into
jmp
mov
mov
insb
inc
and
addb
or
sub
push
test
into
fwait
jo
into
in
and
in
out
cmp
leave
cld
and
mov
ds
inc
mov
mov
fcmovu
int3
clc
es
adc
mov
ds
repz
fstpt
jp
adc
add
pop
jnp
mov
movsl
lods
pop
and
les
inc
dec
data16
adc
mov
aam
mov
ror
sub
int
aaa
gs
sub
xorl
jl
cmp
pop
loop
or
mov
pop
pop
sbb
out
pop
inc
cmc
mov
xabort
icebp
outsb
outsb
repnz
xchg
imul
pop
cmpl
inc
idivb
xor
cwtl
push
movsl
push
xchg
loopne
push
add
mov
add
out
push
arpl
jmp
rclb
mov
push
in
sub
pop
and
or
adc
out
repz
push
sub
add
push
add
adc
lds
arpl
out
push
test
popf
popa
jmp
in
push
loope
dec
xchg
xchg
faddl
int
xchg
xchg
adc
movsl
pop
scas
mov
or
out
mov
and
fwait
lret
mov
ficoml
adc
loop
cli
or
sub
inc
shlb
sbb
and
nop
xchg
sar
add
shl
mov
test
sub
stos
dec
jg
adc
mov
lods
xor
scas
push
mov
popa
pop
enter
or
xchg
or
mov
and
fdivrl
pop
cmp
insb
stos
divb
sbb
mov
push
adc
andl
pop
in
sti
jbe
adc
mov
sub
sub
negl
bound
test
mov
mov
jne
push
push
insb
mov
into
push
cmpsl
aaa
sbb
pop
xor
repnz
fidivs
mov
ja
pop
mov
loope
mov
xchg
ret
and
mov
fadds
xchg
xchg
mov
cmp
adc
or
or
jo,pt
cmpsl
ret
cmp
fcomip
out
mov
out
test
mov
fsts
cmp
add
and
hlt
pop
adc
repnz
mov
lcall
mov
sahf
pop
aaa
dec
hlt
mov
sti
mov
lods
xchg
subb
ljmp
or
fsub
sbb
push
fsub
and
lahf
jmp
cld
loopne
xchg
movb
call
lret
mov
insb
call
and
jmp
mov
pop
daa
xchg
xor
pusha
icebp
lods
mov
pop
push
inc
xchg
call
push
fst
clc
mov
xchg
cmp
icebp
imul
les
or
add
repz
outsb
bound
fwait
and
fdivs
push
cltd
push
add
addb
and
mov
jl
clc
push
dec
cmp
rorl
xor
pop
xchg
sub
in
mov
mov
push
pop
popa
clc
fimuls
scas
jb
aam
imul
sub
in
mov
leave
dec
lods
pop
popf
insb
and
lods
xor
test
jnp
movsb
in
push
sub
in
push
mov
lods
mov
sahf
bound
dec
out
pop
mov
mov
xorb
xor
pop
sub
xchg
mov
arpl
jmp
popa
mov
push
jne
jno
pop
pop
in
mov
ds
jmp
lahf
mov
scas
push
cmpb
and
push
or
mov
cltd
popa
subb
shl
mov
cs
shll
xchg
stos
mov
xchg
push
and
daa
fcompl
xchg
pop
dec
loopne
dec
and
fs
pshuflw
dec
fistpl
popa
pop
adc
lret
mov
popa
inc
pop
mov
inc
rcr
jmp
mov
insl
sbbl
mov
clc
leave
cld
sub
jo
int
imul
call
leave
orb
out
mov
adc
aaa
mov
das
mov
jo
jmp
lahf
fxch
mov
daa
pop
mulb
pop
adc
dec
jnp
or
stos
adc
punpckhdq
push
dec
in
hlt
js
xor
fwait
inc
je
sbb
movsl
jmp
out
sbb
sarl
sub
inc
dec
sub
lret
pushf
aaa
mov
xor
sbb
adc
addr16
cmpb
and
imul
jecxz
pop
les
add
fs
xorl
or
aam
out
mov
mov
add
jg
push
push
fdivs
and
cli
jmp
cmp
negl
adc
cmp
adc
sbb
jne
movzbl
cld
lret
inc
cmp
dec
cmc
out
mov
or
jb
insl
es
mulb
xchg
pop
dec
lret
cmc
aam
fcomip
mov
repz
clc
faddl
jno
inc
cs
mov
jb
lahf
rorl
dec
push
jbe
xor
roll
mov
fadd
jbe
ss
bound
dec
pusha
in
ja
movsl
mov
std
add
xchg
cld
int
cld
movsl
inc
sbb
mov
jno
bnd
rorl
jbe
inc
in
scas
fldt
mov
jbe
push
in
pusha
dec
mov
pop
stos
cmp
mov
and
in
scas
cmpsl
and
je
or
mov
insl
cmp
cli
ja
add
and
lods
cs
daa
sbb
pop
push
subb
dec
pop
add
loopne
movsl
rcll
adc
or
pusha
mov
ljmp
daa
xchg
jns
dec
pusha
pop
fistl
cmp
sbb
lods
fbstp
xchg
add
jle
pop
or
repnz
imul
inc
jmp
imul
xor
add
sbb
call
xor
jge
mov
add
adc
in
out
aaa
sahf
data16
adc
inc
rol
cs
add
xor
lods
testb
jo
adc
push
xlat
pop
lods
jl
iret
cmp
pop
pop
cwtl
mov
push
insl
daa
ficoml
sbb
xor
in
repz
mov
int
push
call
or
xchg
pop
mov
and
ja
inc
jb
pop
fisubs
push
in
je
in
mov
or
pop
cld
gs
xchg
in
adc
mov
or
les
sbb
sub
pop
mov
pop
loopne
mov
stos
xchg
and
fidivl
ret
adc
fmulp
shlb
cs
mov
ljmp
out
dec
test
fdivp
inc
test
push
sbb
fst
or
jl
mov
pop
imul
fistpl
in
imul
in
inc
jge
sbb
push
cmp
imul
sub
or
pop
daa
adc
sbb
dec
mov
inc
jb
add
clc
insb
test
mov
push
insb
cmpsb
inc
mov
repz
arpl
iret
test
mov
and
bound
sub
dec
mov
xchg
mov
mov
je
ret
mov
fwait
inc
mov
aam
cwtl
outsb
mov
push
addl
or
mov
xor
ja
push
push
mov
dec
sbb
cltd
shrb
aad
repnz
jnp
out
inc
iret
js
stos
stc
loopne
push
mov
mov
sub
push
mov
lret
iret
iret
cmpsb
daa
mov
into
pusha
test
pop
fstpl
fwait
push
aam
sarl
test
nop
fld
or
xor
add
dec
adc
stos
cmp
push
xor
xchg
and
mov
pop
ds
jb
insb
mov
test
push
mov
add
adc
cmc
add
shl
clc
jne
dec
push
pop
mov
int
or
ret
out
cmpsl
mov
pop
lock
in
xor
adc
adc
js
xor
rorb
pop
mov
sti
dec
mov
fwait
add
adc
movsl
pushf
sbb
enter
push
aad
and
mov
and
mov
xor
movsb
lods
jb
andb
sub
cmp
add
jmp
mov
je
xchg
outsb
xor
repz
jne
lods
xchg
mov
fdivrl
mov
adc
xchg
add
push
xlat
rcrb
test
popf
xchg
xchg
and
pop
and
leave
es
sbb
and
or
pop
pop
jl
jno
or
adc
inc
xchg
fwait
sti
out
pop
add
jmp
sbb
pop
hlt
sub
enter
out
mov
cli
push
jp
dec
scas
incb
bound
loope
jl
xor
jge
add
xorb
and
jnp
aad
mov
sti
dec
movsb
imul
ror
mov
cmpsl
push
into
or
icebp
popa
scas
stc
leave
mov
lea
xor
ja
mov
or
pop
ja
mov
shrb
ss
lahf
ja
and
xchg
fmull
loope
push
mov
dec
jo
sarb
jmp
scas
stos
xchg
and
sub
call
pop
mov
out
push
fdivr
jbe
xor
insb
xchg
pop
cmp
pop
xchg
nop
lock
cmp
idivb
test
cmp
lcall
jnp
inc
sbb
nop
push
mov
pop
mov
into
nop
sbb
negl
scas
mov
mov
gs
je
mov
call
in
pop
fldl
adc
mov
nop
mov
sarb
push
jl
enter
sub
dec
push
dec
loope
mov
std
pop
movsl
xchg
fiadds
mov
loope
mov
mov
jmp
inc
cmp
mov
faddp
les
dec
xchg
mov
inc
cmpb
fidivl
imul
adc
add
inc
sti
sbb
insl
or
xchg
and
data16
and
inc
jno
mov
sub
push
pop
or
aaa
and
sub
or
inc
push
jp
outsl
mov
pop
loope
shlb
mov
subb
jae
jle
decl
outsl
dec
xor
add
fmull
pop
addr16
cmp
das
imul
pop
hlt
push
in
push
mov
jnp
xchg
lcall
std
pushf
push
add
popf
shr
mov
bound
out
push
dec
jbe
ret
and
jno
aad
bound
jmp
or
stos
xchg
repz
push
mov
pushf
out
xchg
pop
or
or
rclb
mov
in
cmp
stos
jmp
push
mov
lcall
xlat
add
and
sub
xor
in
cld
jg
loope
xor
and
or
mov
sub
and
mov
add
mov
mov
fisttps
ret
dec
sbb
jle
pop
repz
movsl
sbb
out
mov
repnz
imul
mov
iret
out
sub
stc
mov
pop
rclb
in
push
notl
test
test
push
fdivl
mov
inc
mov
adc
mov
dec
xchg
jb
xchg
aaa
fisubrl
stos
sahf
scas
cmc
or
loopne
shrl
lds
pop
loop
hlt
test
pushf
das
mov
das
push
mov
pop
bnd
stos
mov
popf
cmp
mov
xor
imul
fcoms
je
orb
or
add
lods
aaa
fiaddl
jecxz
mov
sub
movsb
cmc
data16
gs
andl
pushf
xorl
idiv
pop
shlb
push
arpl
and
cmp
je
adc
orl
pop
in
jo
mov
push
stos
ficoms
cmp
hlt
int
or
mov
push
jmp
xchg
test
test
mov
xor
jp
outsl
or
popf
xlat
mov
mov
add
pop
rcr
mov
pop
or
cwtl
add
lret
stc
into
loop
in
fistpll
cli
jg
or
daa
cmpsl
xchg
or
sbb
xor
and
sub
inc
jp
je
repz
movsb
aaa
mov
jg
sahf
inc
je
jns
jl
xchg
rcr
mov
hlt
scas
fdivrs
imul
je
mov
push
adc
inc
sub
lret
sahf
mov
lods
fisubrs
dec
adc
add
into
push
movsb
ds
or
xchg
adc
dec
add
cltd
lcall
sub
push
pop
into
cmp
test
cltd
pop
mov
inc
arpl
xorb
xlat
rcrl
and
dec
sub
push
pusha
fwait
xor
cmp
fsubr
jbe
fidivl
push
cltd
dec
or
sbb
mov
pop
or
repz
mov
dec
sbb
xor
scas
test
add
xchg
mov
mov
out
cwtl
pusha
dec
jo
mov
push
and
stos
mov
sbb
push
add
inc
push
push
cmp
mov
popa
mov
mov
rcr
push
cmpsb
or
fnstcw
bound
mov
mov
fcmovb
cmp
loop
mov
movsb
xor
jbe
sub
xor
ja
notb
mov
aad
ret
adc
lds
fadd
jne
lahf
stos
jo
push
cltd
movsb
ljmp
xor
mov
insl
add
adc
jmp
pop
out
decl
mov
int
sbb
inc
int
add
test
cmp
inc
fiaddl
movsl
mov
cs
roll
incl
adc
lcall
xchg
xlat
sbb
pop
dec
ljmp
jecxz
jge
lcall
and
ds
sub
jae
lods
cmpsb
lret
fadds
cld
test
and
xchg
fidivrs
jmp
lret
repz
sub
xor
movsl
test
sbb
sbb
mov
push
ss
repz
mov
push
pop
loopne
xor
shrb
pushf
push
cld
xchg
fsts
shll
into
inc
stos
lods
push
sub
mov
insl
in
or
roll
lahf
xchg
push
mov
std
adc
aad
jle
cmpsb
fdivrs
push
xor
add
popa
inc
adc
inc
imul
popa
stos
pusha
xor
adc
dec
jns
cld
pusha
cmp
dec
xchg
lock
outsb
fadds
dec
mov
test
mov
push
cmpsl
jp
test
std
stc
add
aas
out
mov
inc
jne
cmp
sbb
sub
ror
pop
mov
fwait
add
lds
xchg
sub
ljmp
or
sub
jecxz
and
dec
into
xchg
mov
inc
stc
jne
cwtl
and
movsl
imul
pop
or
in
push
subl
and
addr16
adc
jae
xor
cmp
push
or
cmc
cmpsb
fldenv
sahf
xor
fwait
sahf
xchg
jo,pt
xchg
rcll
or
out
cmp
dec
das
cld
jne
iret
adc
add
sti
xlat
pop
negb
outsl
cltd
rcrb
int3
stc
add
subl
inc
and
js
cmp
mov
fldt
push
add
xor
cmp
ficoml
and
mov
fldt
pop
inc
push
pop
daa
repnz
test
add
mov
dec
call
push
aaa
cmp
lahf
repz
pop
hlt
test
or
pop
fmuls
mov
cli
push
out
imul
lock
cwtl
jmp
pop
push
lods
jne
cmp
xlat
pop
cwtl
rclb
into
test
bound
push
in
mov
jg
mov
dec
cmc
insl
sbb
iret
xor
mov
enter
cltd
cmpsl
popa
test
xchg
dec
xchg
es
push
ljmp
test
out
sarb
sbb
sbb
in
and
inc
repz
sub
lret
pop
scas
xlat
pop
js
mov
repz
cld
xchg
enter
ljmp
add
push
jle
xchg
cmpsb
push
insl
adc
jo
push
jo
into
in
sub
pop
into
mov
jmp
negb
jae
pop
mov
das
fucomp
mov
mov
mov
test
cmpsl
int
or
cli
scas
push
ss
fldl
ljmp
pop
xchg
out
dec
push
in
cmpsl
and
push
and
pop
das
dec
pop
aam
stos
cld
dec
sub
aad
sub
mov
lcall
jae
mov
aam
lods
insb
aad
add
push
sub
sarb
cltd
sbb
push
stc
nop
pop
fisubrl
xor
repnz
out
int
pushf
add
rcll
or
push
repnz
stc
jb
jb
dec
sub
lods
push
xchg
mov
sub
or
cld
adc
xchg
sub
outsl
inc
mov
mov
repnz
cmpsl
mov
stos
dec
movsl
scas
add
mov
adc
ret
add
or
test
cli
jle
lret
mov
ss
bound
rcr
out
cli
aam
and
imul
bound
adc
add
mov
inc
and
and
push
ss
imulb
dec
add
xchg
lret
ss
cmp
bound
jle
stos
hlt
jg
push
aad
sbb
push
fldt
inc
insb
mov
mov
add
inc
mov
fnstcw
sbb
lea
inc
ffree
in
int
fldt
mov
sub
shll
xor
sub
adc
bound
inc
dec
sbb
push
adc
jecxz
test
pop
sbb
cmpsl
js
scas
xor
mov
mov
jmp
call
ss
insl
icebp
insb
cmpsb
fwait
adc
in
mov
sub
aam
call
enter
push
out
adc
pop
aam
shr
cmp
push
cmc
clc
xlat
std
inc
sti
outsl
cmpsb
scas
sub
test
pop
and
dec
jne
data16
push
dec
mov
sti
dec
inc
loopne
rclb
xor
pop
jg
jae
repz
cmp
pop
fs
pop
inc
jl,pt
add
pop
adc
adc
cwtl
les
jno
adc
loope
lea
rcll
outsl
bound
mov
dec
je
mov
jno
aam
lds
xchg
sahf
repz
cwtl
shl
in
inc
idivl
sbb
scas
fisubrl
test
popf
aaa
clc
icebp
cmp
mov
mov
mov
mov
cmp
out
add
mov
pushf
js
cmp
popa
xor
loop
sbb
dec
mov
aas
or
inc
push
cmpsb
mov
xchg
insb
mov
cmp
adc
ljmp
pop
dec
in
cmpsb
lock
repz
jnp
mov
ds
dec
stos
lea
xchg
in
xlat
sbb
jecxz
dec
enter
sub
and
pop
lock
jbe
sbbl
popf
xor
out
movsb
xor
sub
xchg
or
jae
adc
xor
jbe
mov
hlt
movsl
mov
stos
out
inc
ss
dec
xchg
aaa
fcompl
fdiv
lahf
mov
dec
insb
sub
or
test
add
ljmp
jae
xor
xor
jmp
stos
imul
adc
sub
or
popa
popa
adc
push
test
pop
lods
sbb
inc
repz
inc
sub
ret
xchg
mov
and
jae
lret
xchg
insb
roll
orb
clc
cmp
mov
test
xchg
fsubrs
or
test
call
and
rorb
mov
aam
in
and
jmp
mov
push
test
push
jg
inc
pop
scas
push
jns
dec
mov
hlt
outsl
cmp
addb
sbb
dec
int3
lret
daa
lods
inc
mov
cmp
mov
mov
or
scas
sbb
xchg
sahf
mov
inc
pop
cmp
mov
in
sbb
mov
insb
scas
sbb
mov
mov
adc
jbe
enter
sub
mov
add
sbb
stc
push
cmpsl
movsl
cmp
jmp
icebp
push
popf
xor
inc
jno
les
icebp
cltd
aad
sbb
and
int3
jge
inc
pop
and
cmp
ljmp
cmc
out
sbb
jo
xchg
sub
adc
adc
fcmove
shl
imul
aaa
jge
fs
shlb
cltd
xor
cwtl
mov
lret
stos
fnstcw
in
sub
decb
pop
dec
sbb
sub
in
push
sarb
jb
xor
inc
mov
jnp
mov
xchg
add
push
pop
and
stc
add
insl
cmp
clc
fs
icebp
jl
movl
fcmove
mov
ss
and
jp
mov
inc
and
pusha
inc
dec
jg
in
push
and
aad
mov
and
arpl
loop
shll
mov
jb,pt
sbb
xchg
rcr
add
outsl
adc
mov
mov
add
sahf
push
inc
out
mov
ficoms
imul
xchg
in
pop
das
enter
mov
insb
xor
cmp
daa
pop
movsl
aas
xor
lods
inc
test
shll
mov
in
mov
imul
jo
clc
out
adc
xchg
cli
stos
aad
cmc
mov
addr16
sub
movsb
bound
shl
test
js
mov
leave
pushf
ret
lods
jge
movl
scas
xorb
aas
add
xor
xchg
or
add
or
jg
mov
mov
mov
fsubl
adc
pop
das
jne
mov
insl
aam
mov
mov
or
call
scas
les
stc
mov
insb
lock
mov
mov
pop
inc
shll
sub
negl
outsl
das
mov
xlat
cmpsl
es
adc
das
jge
add
test
inc
sub
fdivr
and
cli
sub
jge
testl
push
sub
sbb
or
insl
and
sub
orb
inc
inc
xchg
pop
xlat
packsswb
arpl
mov
popa
iret
les
repnz
jae
test
mov
sbb
xlat
adc
cmp
dec
ds
fnstenv
mov
xor
shlb
les
repz
repz
je
jae
pmaxsw
jns
xchg
jae
out
mov
push
push
pop
or
in
or
xor
lods
ficoml
pop
cmc
sbb
sub
rol
mov
xor
sbb
mov
test
pop
sub
repz
sbb
outsb
outsl
jp
insb
movsb
cmpsl
pop
xlat
roll
cmp
adc
leave
in
nop
inc
mov
mov
out
test
sbbb
cwtl
jae
ret
mov
cmp
subb
pop
imul
insl
pop
and
ret
adc
add
mov
pop
je
pop
ss
outsl
pop
cmp
adcb
ss
out
mov
pop
sbb
es
decb
mov
pop
pushl
scas
inc
adc
mov
repz
pushf
arpl
dec
gs
int3
mov
addr16
push
in
into
andl
jge
jns
or
inc
push
js
je
or
xorb
mov
jl
icebp
xchg
dec
fcmovbe
dec
inc
mov
add
in
fs
xchg
push
scas
subl
jecxz
rolb
es
dec
push
jg
in
jmp
cmp
push
push
jbe
das
sahf
stc
ss
enter
lret
mov
popfw
clc
dec
test
insl
mov
sub
cmpsb
je
xchg
in
or
cmpsl
data16
movsb
jae
sbb
inc
pusha
dec
sbbl
dec
mov
pmovmskb
xor
jmp
fcmovnu
adcb
dec
inc
and
or
lods
data16
lret
jl
icebp
jb
cwtl
push
adc
incb
mov
popf
gs
dec
fldl
and
jmp
dec
aas
add
xchg
xchg
push
clc
jne
mov
stc
push
enter
sbb
rol
test
jne
or
pop
pop
enter
mov
sbb
push
test
sub
mov
mov
mov
std
fs
xchg
stos
fiaddl
xchg
xchg
add
ja
pop
jp
jb
mov
jl
mov
pop
mov
pop
imul
lods
mov
cmp
test
popa
push
rcrl
cmp
dec
pop
pop
and
cmpsl
sbb
subb
xchg
insl
mov
xchg
xor
ret
xchg
loop
and
in
pop
or
cmp
bound
call
jae
sub
jno
add
and
daa
jnp
cmc
add
ror
add
leave
add
sbb
out
dec
push
adc
lods
out
and
adc
adc
inc
popf
jno
daa
mov
pop
scas
xchg
cmp
enter
loope
stos
mov
dec
mov
in
jno
inc
shr
cmp
xor
inc
int3
or
dec
push
and
and
add
cli
cmpsl
enter
or
sbb
sub
pop
adc
xlat
cmp
push
xchg
jae
pop
inc
sbb
out
repnz
loop
pusha
pop
subb
add
or
aaa
cmpsl
mov
push
push
std
mov
adc
mov
data16
mov
pop
mov
xchg
or
shlb
test
push
cld
icebp
scas
scas
xor
lock
xchg
cmp
movsl
ljmp
notl
add
out
shll
sub
mov
adc
xor
adc
scas
sti
fs
psrlw
shr
imul
jmp
xor
sbb
insl
mov
push
das
rorb
xor
sahf
iret
jns
cmp
pop
insl
popf
fstl
add
mov
mov
test
insb
mov
and
and
inc
xor
add
adc
inc
push
cmc
outsb
add
fs
rcrl
int
mov
pushf
cs
or
loop
adc
aad
je
push
std
gs
int
push
repz
xchg
outsb
inc
mov
loope
add
sbb
lret
xchg
dec
add
xor
rol
repz
idiv
push
cmp
std
into
mov
inc
adc
dec
outsb
loope
jae
mov
xchg
cli
lods
xor
in
and
mov
mov
fs
rorb
inc
or
mov
sub
jg
cmc
jbe
daa
test
movsb
mov
ja
push
xor
dec
mov
cli
push
jbe
fimull
imul
pop
fsubrl
stos
inc
xchg
faddl
xchg
stos
push
jmp
cmpsb
lds
push
aas
outsb
shrl
mov
in
sbb
insl
add
popa
pop
pop
jecxz
loop
sbb
sti
pop
push
sub
push
test
subl
adc
outsb
lock
xor
insl
sti
shrl
dec
faddp
int3
pop
sub
sub
add
and
in
and
push
dec
outsl
mov
push
mov
sub
js
lea
inc
les
sbb
imulb
dec
call
cltd
mov
stos
pop
add
scas
call
push
repz
decb
stos
push
dec
push
sub
sahf
outsl
jne
andb
dec
int
pop
mov
mov
and
mov
mov
mov
inc
mov
add
fimull
jp
sbb
das
mov
dec
pop
mov
or
add
jne
adc
xchg
out
mov
leave
cmp
mov
jns
dec
mov
xchg
fcmovbe
test
addr16
add
repz
lcall
jbe
mov
adc
loopne
xor
mov
dec
xor
imul
stos
loopne
ret
mov
out
pop
dec
and
or
enter
scas
insl
dec
pusha
push
add
pop
andb
sahf
inc
push
pop
les
and
mov
jnp
cltd
imul
mov
ss
jmp
popf
shl
daa
pushl
fistps
and
mov
scas
sub
mov
lahf
js
sub
ds
push
stc
cmp
jns
pop
add
lods
mov
pop
inc
add
clc
mov
cltd
in
subb
in
movsb
adc
lock
dec
and
cmc
cltd
sbb
jg
jns
leave
cmpsl
adc
push
loopne
roll
jle
cmp
mov
outsb
gs
and
pop
mov
xchg
lds
fdivl
push
mov
repz
xchg
sub
jnp
fadds
sub
sti
xchg
lahf
sbbb
mov
fisttpll
push
arpl
lds
fsubs
icebp
inc
pop
sub
out
push
jbe
cmp
int
xchg
push
aad
cmpsl
cmp
push
adc
xchg
sbb
icebp
lea
out
in
je,pt
adc
rcrl
icebp
clc
xchg
adcl
jp
jb
mov
lock
sub
inc
insl
push
and
push
fdivrs
sub
jecxz
rolb
push
popf
inc
jecxz
sarb
adc
xor
cs
fwait
enter
dec
int3
push
pusha
jnp
cmpsb
push
xlat
dec
lret
sti
sub
pop
dec
fmuls
xchg
retw
pop
pop
bound
es
repnz
enter
dec
cmp
pop
mov
in
outsb
lret
addl
push
fisubs
das
out
jns
outsl
inc
cltd
or
in
fcompl
sbb
in
push
xchg
lock
in
add
jecxz
fs
jecxz
rcll
dec
pop
dec
mov
cmpsb
test
stos
mov
decb
clc
mov
fsubrs
sbb
int
int3
push
sub
mov
xlat
punpckhbw
cli
sub
mov
xchg
or
aaa
xchg
sti
add
mov
mov
aaa
add
cltd
ficoml
test
pushf
cmp
cmp
or
push
mov
fwait
or
jno
fadds
fs
sti
or
out
lahf
mov
mov
jb
cmpsb
jo
push
pop
imul
push
stos
mov
cmc
cmp
fwait
cmp
cmp
mov
jle
sub
aas
xchg
sbb
push
jecxz
dec
sub
push
dec
in
sar
cld
sahf
lods
hlt
mov
jno
jbe
jne
out
dec
mov
or
xchg
movsl
mov
pop
or
sti
lods
xor
push
mov
mov
cmp
dec
sbb
pop
adc
cmp
loopne
fs
out
mov
dec
rol
pop
cltd
call
nopl
ja
or
jno
cmp
hlt
into
adc
inc
sbb
add
or
pop
lahf
ljmp
cmp
fists
add
push
das
jbe
pop
ds
loope
in
ljmp
scas
roll
ja
adc
cmc
cltd
int3
pop
ds
sbb
icebp
sbb
and
sub
jb
adc
xchg
lea
je
mov
jno
push
nop
ret
fwait
dec
push
insb
out
dec
pop
icebp
mov
loope
inc
adc
test
pop
jl
lods
cmpsl
repz
push
scas
jle
dec
fnsave
push
dec
mov
fisttps
and
dec
push
or
test
mov
push
loop
faddp
es
or
adcl
shlb
cltd
movsb
push
out
outsb
sbbl
pusha
jl
jmp
mov
inc
leave
jae
mov
mov
out
stos
sub
push
or
sub
mov
jmp
sub
xor
push
push
add
inc
movsl
inc
pushf
hlt
imul
clc
insl
pop
lock
or
repnz
js
scas
jmp
mov
or
jle
mov
xchg
mov
mov
cmpsl
sub
mov
fbld
and
test
mov
push
fchs
daa
out
push
jns
mov
dec
outsl
and
fmuls
lea
dec
hlt
rcrl
sub
push
imul
out
and
jb
mov
sti
addb
push
add
aam
or
das
and
xchg
stc
loopne
gs
pop
and
mov
and
jp
icebp
pop
repz
shlb
dec
push
fdivl
outsb
aad
aam
xlat
sub
dec
in
outsl
xor
mov
outsl
xor
add
jns
jbe
fistps
ret
adc
jb
cmp
out
jbe
in
enter
add
push
or
and
dec
rcrb
xor
ljmp
add
jge
daa
mov
xchg
lods
jnp
adc
jge
into
xchg
out
mov
pop
data16
repz
mov
adc
repnz
xchg
aas
loop
push
jnp
cmp
xchg
xor
outsb
into
cmpsl
and
push
mov
mov
push
dec
ffree
push
outsb
sub
fists
jg
bound
adc
sti
fsubl
xor
xchg
mov
cwtl
scas
jle
repnz
mov
out
adc
inc
lret
aam
addr16
jnp
fistpll
sub
cmpsb
inc
mov
std
xchg
mov
loopne
cld
dec
mov
repnz
loopne
mov
sub
nop
xchg
sub
or
adc
mov
xchg
cmp
mov
fidivs
lea
inc
lods
inc
add
cmp
imul
cmp
mov
bound
ja
and
sahf
cmp
mov
icebp
outsl
popa
lret
dec
sarb
pop
push
add
sub
sbb
jae
and
ljmp
cli
jmp
or
lret
or
ret
ror
dec
jg
and
sub
xchg
js
xor
enter
mov
dec
mov
stos
inc
jbe
popf
jecxz
cwtl
mov
aad
jle
movsb
mov
sub
js
mov
call
cwtl
xor
jae
loope
sbb
scas
xchg
ljmp
mov
pop
lods
inc
pop
push
jg
movsb
div
jmp
add
xchg
mov
addb
popf
adc
popa
imul
inc
adc
pop
negl
fnsave
pop
sbb
test
push
jnp
adc
sbb
xchg
pop
outsb
cmp
lods
push
inc
xor
push
fsubl
cmp
cmc
sbb
xchg
mov
sbb
outsb
daa
popf
int3
and
aas
inc
xor
arpl
imul
movsb
mov
fs
mov
dec
cld
out
add
aaa
sahf
bound
pusha
mov
lea
std
mov
outsl
cmp
movsl
iret
fwait
xchg
ret
xchg
sti
mov
outsl
scas
jnp
push
inc
mov
and
sub
imul
mov
jbe
jmp
xor
cmp
cmp
xchg
in
fwait
jb
mov
pusha
sbb
pop
movsb
mov
lcall
mov
mov
stos
out
movsb
adc
mov
xchg
jns
cmp
jge
push
mov
or
fdivrp
add
xchg
shlb
mov
iret
ret
pop
addl
ret
cwtl
dec
cmp
xchg
pop
into
lock
faddl
sarl
or
fwait
jecxz
mov
xchg
aas
fwait
lret
out
sbb
aas
mov
cld
scas
test
cmpsl
jno
les
jg
ret
ss
loop
push
mov
inc
cmp
scas
test
add
xchg
add
mov
out
pop
pop
xchg
adc
mov
pop
notl
icebp
add
xchg
int
push
popf
fldenv
jns
xchg
or
pop
adcl
push
jns
mov
sub
cmpsb
pop
arpl
mov
jb
push
push
lcall
gs
mov
lods
jge
jns
sub
pop
mov
and
push
pop
xchg
in
jo
sub
mov
flds
cwtl
lds
xlat
in
xchg
mov
in
into
call
pop
mov
lret
mov
addr16
push
mov
push
insl
mov
push
fnstenv
cmp
test
add
xor
out
pushl
push
into
in
mov
xchg
mov
testl
mov
dec
dec
push
lea
or
jb
jbe
add
xchg
pushf
lods
mov
lods
addr16
jmp
or
mov
sub
pop
loopne
bts
orb
xchg
mov
cmp
mov
repz
xor
rolb
mov
xor
hlt
xchg
mov
xchg
stos
xorl
loop
push
test
clc
push
and
scas
outsl
fldl
pop
data16
pop
leave
dec
int
ss
adc
fnsave
push
inc
out
loop
fisubl
repnz
insl
dec
testb
jo
push
mov
dec
pop
sbb
arpl
mov
jmp
divb
mov
jno
int
sbb
test
test
sbbl
or
outsb
pop
sub
xchg
shr
push
adc
mov
rcrl
adc
add
mov
add
lock
daa
lcall
mov
adc
sarb
fiadds
sub
lods
push
sub
in
in
fbld
dec
lret
push
or
dec
pop
mov
mov
imul
testl
out
or
dec
shlb
push
adc
repz
ret
cwtl
js
icebp
cmc
cltd
dec
sub
mov
pusha
push
frstor
mov
ret
cmp
jl
mov
nop
xchg
push
add
dec
mov
fsubp
test
stos
ret
shll
push
lods
push
repz
lods
lcall
mov
lock
and
pushl
es
loop
xchg
ss
mov
mov
mov
inc
and
mov
mov
pop
out
lahf
imul
add
aam
push
add
fistps
cli
jle
xchg
pushf
mov
pop
or
ret
repz
cmpsl
cmp
sbb
jae
mov
sub
ffree
and
loopne
push
push
lahf
xchg
enter
mov
orl
fucomi
pop
push
cmp
jp
in
pop
pop
cmp
in
cmp
incl
stos
push
dec
mov
mov
push
mov
or
push
cld
push
mov
cmp
add
cmp
jmp
pop
fsubl
or
xlat
adc
shrl
hlt
aas
fs
and
push
shl
jb
mov
movsl
push
push
clc
or
outsl
xor
popf
daa
hlt
pushf
fistps
aam
arpl
jge
int3
out
push
xor
popf
loop
pop
loop
fs
inc
lar
pop
push
sbb
lret
fdivr
cltd
mov
and
test
sbb
lods
dec
sbbb
push
xchg
frstor
or
sub
frstor
ret
push
or
addr16
arpl
movsb
sahf
or
int3
push
pop
mov
pop
or
aaa
add
mov
stos
mov
call
jl
mov
jne
mov
movsb
pop
jle
popf
sbb
arpl
scas
xchg
push
pop
pop
mov
jmp
fs
xchg
fistps
cmp
cmc
lahf
fmulp
jo
or
cmp
mov
add
add
xor
frstor
jns
cmpsl
jg
xchg
test
stc
inc
jg
ret
xchg
mov
xchg
fsubl
pushf
test
adc
fs
adc
adc
fmul
scas
test
xchg
inc
in
loop
fistps
es
ljmp
adc
pop
daa
sti
xchg
pop
jae
in
cwtl
movsl
jnp
jbe
fistps
in
paddsw
mov
pop
cmp
shr
add
sti
cmp
push
adcb
leave
push
ficoms
xchg
repnz
cmp
test
jae
mov
push
shrl
mov
test
add
xchg
jecxz
stc
xchg
cmpsl
xor
xor
fwait
dec
mov
mov
out
scas
addr16
dec
pop
xchg
mov
adc
xchg
and
mov
rorl
inc
frstor
scas
cmp
cld
rcrb
ljmp
mov
mov
iret
push
in
sub
lcall
jge
leave
cmpsb
stos
repz
pushl
lods
sti
pop
xor
pop
mov
ret
mov
mov
push
iret
cmp
mov
xor
mov
data16
into
mov
mov
xchg
cmp
push
shrl
push
setle
lahf
sbb
dec
icebp
and
or
addr16
std
repz
push
lea
popf
fcom
ljmp
rcr
das
inc
or
jno
leave
adc
cld
sub
sub
pop
and
in
test
mov
add
add
inc
mov
popa
inc
cwtl
insb
fisubrl
pushf
sbb
sub
repz
test
dec
push
or
inc
out
out
test
lods
mov
data16
xchg
xlat
test
pop
lahf
jns
adc
and
stos
js
nop
xor
arpl
push
mov
cld
xor
adcb
sahf
popa
clc
push
jp
in
push
mov
mov
cmpsb
dec
cmpsl
or
stos
xor
mov
aas
pop
gs
negl
inc
mov
mov
pop
mov
iret
je
insl
lea
enter
repz
arpl
and
and
pop
add
mov
aas
cmp
test
mov
inc
jle
push
jno
loope
add
adc
cld
les
add
mov
ds
ficoms
hlt
subb
rolb
push
ljmp
stos
add
das
add
pop
sub
insb
push
hlt
push
dec
mov
inc
pop
pusha
mov
hlt
daa
jl
pop
insl
mov
sbb
cmp
cwtl
in
fwait
inc
jo
mov
loope
lahf
sub
jae
sti
fsubr
sub
pop
inc
scas
lods
inc
and
and
out
and
aas
sbb
mov
mov
xchg
and
sub
pop
push
ret
jae
xlat
movsl
lcall
test
inc
push
cmp
add
sub
data16
pop
rcrl
jo
out
jle
pop
and
and
lea
mov
add
jbe
sti
lret
xchg
push
cmp
dec
pop
fwait
inc
in
nop
sub
dec
sbb
mov
jg
ret
mov
add
or
sub
cmp
jg
ficoms
subl
das
shr
cmp
sub
in
push
loope
cmp
cmp
mov
lods
lcall
xchg
lcall
mov
jg
xchg
stos
or
ljmp
or
cmpsb
mul
lods
mov
iret
ret
jbe
add
xchg
test
sbb
lods
inc
inc
fucomp
mov
in
mov
xchg
pushf
int
stc
mov
fldl
sbb
jecxz
dec
test
mov
mov
xor
repz
and
push
push
and
and
jmp
sub
fbld
insl
xchg
xchg
pop
rep
fwait
sub
xor
xchg
jnp
jbe
push
mov
and
and
xor
mov
jle
stos
inc
nop
pop
in
jp
xor
scas
cmp
sarb
sub
arpl
aas
or
xchg
shr
sbb
jle
and
sbb
cli
add
out
mov
dec
add
les
xchg
dec
and
lcall
scas
out
shrb
sub
shll
fs
out
inc
in
stos
je
in
test
data16
xchg
mov
pop
mov
inc
xor
test
mov
mov
jnp
mov
push
leave
push
out
loopne
leave
pop
mov
xor
jmp
xorl
lods
mov
mov
mov
arpl
push
aam
nop
cmpl
test
jmp
mov
shl
xchg
adc
repz
mov
mov
ret
addr16
push
ds
push
hlt
mov
cs
mov
mov
rcrl
xchg
xchg
shr
mov
jl
lahf
mulps
aad
daa
mov
jo
sub
lret
push
pusha
and
inc
dec
fwait
fs
mov
and
jmp
outsl
out
xchg
int
or
jo
rcr
repz
xchg
mov
repnz
mov
inc
adc
clc
and
add
mov
push
push
cmpsb
fisttpll
pop
cmp
and
pop
add
add
and
jno
scas
nop
gs
sbb
add
xor
test
out
xor
push
das
cmp
xor
jecxz
mov
push
mov
adc
jmp
inc
lret
lret
scas
in
xor
lret
or
mov
inc
sub
jmp
call
push
out
push
push
mov
ljmp
adc
inc
std
popa
xchg
sub
gs
leave
imul
movsl
mov
enter
aam
test
ss
sarl
mov
ret
fmull
pop
dec
iret
inc
roll
xchg
aam
push
sbb
fsubr
pop
scas
mov
orb
mov
dec
pusha
jae
dec
insl
pop
je
jne
pusha
push
aam
sub
ret
xchg
mov
repz
push
or
jnp
jp
es
mov
iret
es
sub
fsubs
cs
popa
fildll
dec
mov
mov
lcall
push
out
jl
dec
aaa
lods
dec
in
sbb
repnz
jnp
pop
or
test
cmp
std
aad
js
xchg
mov
push
jbe
clc
sub
push
pop
mov
adc
lock
or
xor
dec
dec
mov
mov
pushf
jge
cmp
dec
cltd
popa
xchg
push
mov
icebp
lret
es
push
enter
cwtl
dec
mov
movsb
mov
scas
inc
dec
out
jno
and
push
mov
cltd
cltd
pushf
out
pop
cmp
sub
cmp
xchg
gs
leave
jnp
test
sub
test
addr16
sti
movsl
add
shll
pop
pop
xchg
dec
push
push
rorl
pop
and
adc
or
scas
jno
dec
mov
push
clc
outsb
imul
fsubp
inc
nop
repz
lahf
stos
push
int
fwait
enter
lahf
add
jno
push
xor
inc
jb
adc
and
hlt
mov
push
xchg
jmp
das
stos
repz
xchg
imul
cmp
sub
mov
stos
adc
cmpsb
enter
mov
pushf
test
cs
outsb
insb
push
imul
cli
outsb
jp
imul
sahf
jne
jae
ror
pop
xchg
lcall
adc
stc
pusha
lahf
outsl
popa
inc
dec
mov
xchg
lea
push
inc
dec
pop
push
cld
cld
inc
adc
mov
mov
mov
ror
cmc
xchg
cs
nop
mov
arpl
fwait
sti
xor
rorb
out
hlt
jp
ss
lea
sbb
int3
mov
outsl
xchg
mov
jne
sub
adcl
iret
leave
or
mov
call
jo
sti
cmpsl
sbb
cs
sbb
inc
cmp
mov
loop
pop
rcrb
jns
inc
and
pop
dec
jbe
shlb
jmp
sub
pushf
shl
cmpb
test
repnz
adc
cmp
icebp
popw
mov
push
test
fcoml
mov
push
int3
mov
mov
loopne
jmp
fcomps
jg
adc
rorb
fildl
push
cmp
push
push
and
cmp
ret
cmp
clc
rcrl
jno
pop
xlat
sti
lcall
dec
sub
xor
jo
cld
incl
loop
aam
repnz
fildl
add
test
mov
call
adc
sbb
into
mov
mov
js
xor
pop
loop
xor
pcmpeqb
imull
cmpsb
das
insb
js
inc
sub
cld
inc
insb
push
pop
xchg
iret
jns
dec
mov
lock
jecxz
and
jne
fabs
lahf
mov
xor
add
aam
jg
mov
sbb
push
push
stos
fdivl
in
lds
icebp
push
repnz
jmp
insl
in
add
pop
cmpsl
sbb
xor
jbe
mov
and
fidivl
mov
jae
jae
rcl
pushf
cmpsl
imul
js
lcall
test
mov
push
incb
rcrl
jl
in
popf
push
pop
xor
jno
cs
cld
cwtl
sbb
jp
lds
cmp
insb
mov
ret
dec
pop
shr
cmp
and
int3
aad
adc
xchg
je
aad
sub
add
mov
or
adc
push
fcomps
in
mov
movsw
lret
mov
push
ss
mov
xor
and
pop
cmp
out
fwait
or
dec
out
out
mov
xchg
dec
xor
add
jns
out
dec
sub
or
ds
pop
ret
or
pop
adc
xlat
fmulp
dec
js
call
jno
fidivs
adcl
ss
daa
add
lds
mov
mov
stc
icebp
out
aaa
xchg
leave
mov
es
test
daa
je
mov
add
push
pusha
ficomps
or
test
xchg
idivl
int3
int
shlb
out
cmpsl
xor
xor
fisubl
mov
mov
mov
cmpsb
xorl
cltd
imul
int
and
mov
mov
sub
push
sbb
add
stc
call
xor
imul
xchg
std
fs
insl
xor
jo
arpl
jb
inc
inc
iret
leave
ret
adc
push
pop
push
adc
dec
xchg
jmp
hlt
pop
jecxz
aam
fcoml
push
jbe
pop
push
rolb
mov
add
cltd
repnz
mov
sub
gs
pop
ret
negb
jo
loopne
dec
outsb
orb
push
and
cs
sti
fistl
dec
rcrl
outsb
add
and
enter
sbb
ds
outsb
inc
clc
xchg
jle
or
cmp
cmp
push
addr16
xchg
or
rcl
mov
push
mov
rcrl
sti
jo
fxch
arpl
pop
fcmovne
jae
in
int3
movsl
push
inc
xchg
push
xor
mov
movsl
xor
out
sbb
cmp
dec
arpl
xor
stos
push
inc
dec
inc
dec
mov
push
sub
cmp
shr
mov
push
xorl
jae
scas
or
mov
jnp
mov
mov
insl
nop
int3
add
adc
rcl
inc
dec
add
adc
scas
flds
out
pop
xor
fnstenv
mov
adc
jg
loop
push
dec
arpl
sbb
test
or
mov
cmp
push
out
imul
jl
adc
sub
pop
aaa
push
xchg
cltd
rcrb
mov
push
dec
daa
mov
mov
cmpsl
test
data16
mov
inc
lods
addl
add
mov
fwait
insb
sbb
imul
sub
xor
pop
addb
sub
hlt
sub
sub
sbb
jnp
divl
sub
in
mov
enter
sub
xchg
xor
pop
cmc
cmp
sub
xchg
roll
call
mov
fwait
ljmp
cmp
pop
negb
and
jno
mov
rcll
jg
sub
outsb
jle
stos
mov
mov
pop
repz
cmp
orl
pushf
sahf
push
aad
scas
insb
xchg
pop
adc
inc
and
test
and
xchg
in
sbb
push
es
mov
xchg
ljmp
cs
sbb
inc
jnp
mov
or
xor
int3
jge
pop
cltd
push
cltd
xchg
cmp
fsub
sub
nop
add
sub
insb
dec
negl
jl
pusha
arpl
dec
cltd
aas
aam
jns
xchg
ret
bound
and
jo
repz
add
cwtl
jmp
lcall
iret
inc
js
or
popa
lret
das
sub
add
hlt
outsb
xor
jecxz
mov
xor
mov
add
aas
test
xchg
pop
xchg
movhps
jno
mov
in
jno
jp
xchg
xchg
adc
scas
mov
pop
and
das
lods
fnstenv
inc
sbb
push
inc
cmp
je
scas
sbb
les
pop
pop
mov
dec
popf
jg
cmp
mov
jp
mov
ljmp
out
cmpsl
push
jo
xor
lahf
inc
jmp
je
and
push
lods
aaa
jnp
lods
jmp
cwtl
xchg
pop
jne
sub
mov
and
xchg
pop
mov
mov
movsl
loopne
sbb
mov
fisttpl
pop
ljmp
ficoml
xchg
or
fdivrp
lock
inc
fimull
imul
and
pop
inc
pop
loope
out
mov
cld
and
sahf
cmp
out
test
mov
push
cmc
into
dec
aad
rclb
or
cmp
aam
jle
inc
ja
pop
leave
xchg
bound
xchg
pop
cmpb
mov
mov
outsb
mov
and
xor
lock
icebp
orl
aam
jae
sub
popf
inc
icebp
push
mov
adc
int3
mov
mov
out
aam
xor
lds
jo
adc
fldt
jecxz
shr
push
adc
int3
mov
mov
pop
mov
push
dec
mov
pop
ss
mov
leave
cmpl
and
mov
adc
insl
pop
xchg
push
add
sbb
inc
into
cmp
mov
mov
push
popf
xor
mov
push
cmp
in
jo
xchg
lcall
mov
and
loop
shr
ret
clc
aad
xchg
push
inc
ret
rcll
mov
outsl
cltd
and
mov
imul
mov
icebp
das
imul
pop
in
mov
stc
seto
mov
bound
dec
mov
lods
in
push
addl
stos
scas
xor
rcrb
ja
movsl
or
imul
into
jmp
shlb
adc
pop
jmp
ja
dec
sbb
push
scas
dec
adc
add
andb
add
adc
mov
test
sbb
cmp
and
cmp
hlt
sub
adcl
jmp
loope
add
add
sbb
jae
pop
icebp
pop
push
rcll
pop
jmp
shrl
cmpsl
aas
scas
dec
sub
je
jg
ja
sbb
jmp
imul
ja
cli
enter
pop
clc
push
inc
inc
mov
add
imul
pusha
flds
xchg
jle
popa
sbb
jle
repz
int
sbb
jo
adc
pop
and
sbb
clc
dec
jns
mov
adc
je
ss
fisttpll
mov
pop
add
add
mov
repz
xchg
in
jb
adc
pop
ret
dec
js
push
adc
das
mov
push
es
add
xor
pop
ds
pop
fcoms
lret
mov
ds
jno
clc
fisttpl
pop
sub
in
popl
push
jbe
mov
sbb
mov
mov
sbb
aam
adc
add
ja
outsb
cmpsb
out
test
cwtl
sbb
xchg
xchg
inc
mov
add
push
lea
cmp
cld
shrb
fstl
jge
or
sahf
pop
aas
imulb
das
jo
in
lret
jae
inc
xchg
and
xchg
push
jne
sbb
jnp
insb
dec
aad
cs
dec
shrb
aad
int
inc
cs
xor
jle
scas
inc
mov
push
jne
dec
push
inc
mov
insb
or
dec
jne
das
jmp
xlat
add
aas
or
mov
push
scas
pop
pop
inc
out
fs
xchg
pop
cmp
mov
adc
and
repz
cmp
mov
pop
test
in
repz
or
in
stc
xchg
pop
scas
rorb
pushf
and
data16
lods
sub
push
jge
ss
add
sbbl
and
les
sarl
mov
fsts
js
dec
hlt
xchg
xlat
and
cmpsl
inc
out
mov
repz
rcrb
aaa
sbb
xchg
jle
mov
adc
mov
push
sub
sbbl
xor
add
sub
add
sbb
add
cmp
call
ret
mov
popf
mov
cmp
jne
xchg
xor
inc
pusha
iret
sbb
loope
inc
test
js
jbe
mov
ja
jne
ret
jmp
cmpsl
out
inc
repz
sti
adc
hlt
cmp
jl
or
pop
std
cwtl
bound
pushf
jb
jb
pusha
inc
aad
pop
push
mov
subl
shll
fdivrp
addr16
jmp
bnd
mov
call
test
in
ja
inc
mov
scas
push
daa
loop
dec
dec
jp
cwtl
jecxz
into
xchg
mov
xchg
sbb
sbb
out
cmpsb
mov
int3
and
stc
sahf
pusha
and
adc
lock
cmp
and
pusha
mov
push
movb
and
adc
and
dec
or
inc
cltd
sti
dec
cmp
sub
and
xchg
rol
psubsw
xor
ja
sbb
or
push
push
push
test
mov
mov
xchg
dec
push
jno
mov
addr16
sub
lock
data16
lret
lret
test
pop
out
xor
add
mov
cmpsb
or
dec
xor
and
inc
pop
mov
ds
cmpsb
sbb
jnp
xchg
scas
pop
stc
push
in
repnz
lds
js
out
lock
lret
cmp
adc
outsl
mov
adc
push
inc
xchg
adcl
push
es
inc
test
enter
icebp
sbb
out
mov
inc
mov
je
and
inc
call
scas
lret
push
adc
pop
stos
xchg
lea
and
fisubrl
and
sub
xchg
add
xchg
fildl
mov
loopne
mov
dec
sbb
int
mov
adc
push
aaa
dec
sbb
daa
call
hlt
xchg
jl
stos
inc
cs
xchg
cmp
std
mov
test
xchg
pop
shll
lock
jne
jo
add
rcrl
sbb
outsl
cmp
push
ror
ficoml
das
dec
es
lods
xchg
push
lea
push
sub
sbb
lods
cmp
or
cmp
insb
idiv
call
stos
inc
pushl
pop
nop
cmpsl
and
enter
jg
pop
sub
xchg
pop
xor
jge
add
pop
fdivs
push
jae
int
push
mov
jbe
inc
imul
push
mov
adcb
xchg
ret
movsl
jae
hlt
or
test
in
cmpsb
add
leave
pusha
arpl
aam
data16
jle
cld
xchg
push
mov
pop
push
in
lcall
and
and
inc
pop
sbbb
inc
insb
aaa
jne
out
adc
aaa
and
jnp
pop
nop
push
lds
add
mov
lret
push
les
cli
xorb
loop
aad
sti
bound
push
lret
push
push
jle
aam
or
es
sbb
inc
loope
test
add
xchg
js
lret
inc
jnp
add
mov
icebp
push
mov
movsl
imul
xchg
xchg
inc
mov
and
ss
lea
dec
movsl
pusha
xor
js
inc
mov
adc
push
or
enter
xchg
and
push
ret
xchg
lods
xchg
fadds
mov
out
int3
pushf
push
sti
or
jno
fists
int3
setno
or
enter
pop
or
mov
or
sbb
mov
ret
sub
sbb
xor
aam
mov
clc
sahf
aam
push
fisubl
mov
enter
loope
cmpsb
pop
or
or
or
ficomps
subb
push
adc
insl
cmp
insb
or
cld
mov
loopne
add
pop
dec
pusha
inc
fldt
push
pop
jbe
pusha
pusha
mov
cli
cli
sbb
mov
stc
pop
pop
pushf
in
movsb
shlb
inc
jl
push
lcall
push
xor
jae
inc
divl
in
push
sub
stos
dec
jp
pop
out
jno
add
insl
add
xor
leave
cmp
scas
stc
pusha
jle
loope
sbb
shl
rol
jo
iret
into
xor
movlps
aad
adc
pop
pop
scas
or
sbb
pop
pop
jp
mov
fld
xchg
insb
jmp
xchg
mov
dec
or
ss
sarb
or
jne
loop
in
xchg
sbb
shrl
dec
push
test
xchg
sub
xchg
enter
popa
rcrb
fwait
jno
xor
jno
test
mov
cmpsl
int3
mov
imul
adc
scas
pop
push
pop
dec
out
mov
lods
mov
xchg
cltd
add
or
call
xchg
loopne
popf
xor
loopne
int3
sbb
icebp
cltd
fisubrs
das
and
ficoml
lcall
push
sub
adc
sbb
and
push
inc
aas
xor
jmp
repz
push
dec
mov
pop
jb
mov
cmp
jbe
xlat
notl
imul
bound
push
pop
mov
movl
cmp
push
lea
mov
std
popf
shl
push
gs
mulb
mov
mov
outsl
mov
lret
push
mov
or
mov
mov
sub
addr16
rorl
rcll
ret
mov
mov
leave
mov
sub
inc
sarl
xchg
dec
nop
imul
and
pushf
sub
frstor
fbld
repnz
pop
jp
fcomi
mov
pusha
push
or
repz
lods
mov
pop
push
aad
push
cld
push
mov
sbb
mov
sbb
add
mov
jno
enter
and
mov
jle
popa
int
inc
dec
lea
popa
fstl
sahf
rcr
cmp
sbb
cmpl
or
pop
xchg
into
inc
icebp
subb
xchg
mov
lcall
jp
xchg
inc
ror
shr
arpl
gs
xchg
jl
mov
and
ds
or
mov
cmp
xor
lds
leave
add
mov
ss
out
loop
jg
testl
insb
mov
out
fnstenv
mov
jge
js
sti
xchg
mov
xlat
fcoml
or
insl
jns
pop
mull
cs
repz
clc
adc
inc
push
pop
in
lahf
pop
in
mov
pop
scas
xchg
and
dec
lret
mov
or
loopne
lret
stc
clc
inc
sub
push
nop
fidivs
cmp
sub
adc
xor
sub
pop
imul
push
lods
outsl
push
rcrb
jno
add
in
jbe
sahf
cmp
imul
dec
cli
cmp
sub
dec
jg
cmp
cmp
mov
popf
jp
addr16
push
clc
int3
jb
aad
in
mov
neg
push
les
in
test
rolb
jge
xlat
or
or
lock
sub
or
imul
add
in
rclb
dec
xchg
mov
into
scas
dec
adc
mov
lfs
mov
mov
xor
stos
inc
jge
xlat
adcb
push
mov
mov
push
lock
cmovae
mov
int
inc
cltd
decl
push
lods
ja
enter
inc
icebp
stos
mov
and
les
outsl
nop
sarb
mov
push
mov
xchg
lahf
or
xchg
jmp
mov
fdivs
daa
jmp
rclb
shll
ror
push
clc
jl
push
in
mov
adc
lock
dec
inc
adcb
data16
sub
add
cmp
xor
xchg
cmp
sub
add
jl
shll
jo
mov
mov
cmp
cwtl
push
out
xchg
push
clc
fldl
shlb
sar
xor
clc
mov
out
pushf
loope
cmp
or
movsl
loopne
test
mov
outsb
or
data16
xchg
mov
or
sbb
xchg
cld
jmp
adc
dec
int
roll
aaa
xchg
es
mov
or
iret
test
mov
mov
dec
jae
in
xchg
pop
xchg
stc
inc
inc
test
sub
mov
imul
hlt
cmpsb
or
cmp
dec
jno
xchg
fistpl
lret
sbb
ret
movsb
enter
fimull
jns
inc
js
sbb
mov
das
in
mov
jae
int3
add
dec
gs
xchg
adc
aad
push
xor
icebp
aam
xor
xlat
fucomp
ds
mov
pop
push
mov
inc
fiaddl
mov
and
test
in
jno
pop
lahf
jg
add
lds
sbb
scas
mov
insb
popa
aam
imul
and
orb
mov
mov
cmc
test
loop
fbstp
enter
mov
or
leave
cltd
ud1
out
fs
rep
imul
clc
inc
xchg
cmpsb
jg
adc
xchg
das
pop
es
es
es
mov
clc
jle
lds
pop
inc
shl
pop
loop
fisttpl
insl
fnstcw
jbe
in
add
cltd
xor
and
into
cld
sarl
femms
pop
insb
cmpsl
pop
ss
outsl
xor
xchg
and
sbb
fsub
cltd
dec
pushf
jne
test
xchg
icebp
sub
sbb
xchg
into
cmp
or
cmp
pop
mov
repz
sub
jp
mov
fisttpl
outsl
inc
xchg
pop
aaa
dec
xchg
add
fadds
fsubr
mov
out
or
mov
jmp
lea
mov
fdivs
jo
and
lret
pusha
outsb
jl
dec
pop
cmc
mov
sub
out
mov
popf
push
fs
shl
or
decb
lret
insl
cmc
repnz
xchg
movsb
push
jo
sub
loope
jno
in
dec
mov
jg
mov
cli
repnz
imul
inc
rorl
mov
aas
xchg
fwait
movsl
dec
movsb
push
ja
enter
xor
int3
sub
mov
enter
jo
std
xchg
test
push
or
pushf
xchg
in
aad
andb
test
fdivrp
cmpl
jp
inc
mov
sbb
fdivl
adc
sub
push
jl
inc
cwtl
mov
lods
cltd
insl
repz
or
lds
inc
mov
iret
adc
or
sbb
loope
jnp
mov
fwait
ja
inc
or
jmp
popf
inc
mov
shlb
outsb
xchg
rorb
push
dec
pop
jnp
les
or
jno
in
loop
inc
add
int
daa
insl
mov
jns
stos
mov
insl
inc
inc
jnp
pop
and
mov
icebp
cmpsb
mov
test
xchg
int3
mulb
sub
add
sbb
cmp
dec
lock
cmp
scas
mov
mov
mov
pop
addr16
add
sbb
xor
pop
add
inc
stos
lahf
push
push
cwtl
jmp
add
mov
cmp
int3
mov
out
xor
testb
aad
xchg
push
aaa
ret
cmp
test
xchg
xchg
mov
cmp
and
dec
fnstcw
xchg
mov
ret
xchg
xchg
add
sbb
jmp
dec
dec
jecxz
jae
je
mov
mov
cmp
jp
lcall
pop
daa
or
sub
movsb
out
mov
jns
or
sbb
imull
mov
pop
roll
inc
aad
mov
int
push
adc
dec
push
dec
mov
lock
xchg
add
mov
and
imul
lock
inc
adc
out
outsl
mov
pop
add
cli
adc
out
jbe
mov
es
push
arpl
sub
mov
jge
aad
jb
xchg
lahf
dec
inc
sbb
inc
xor
mov
jbe
lds
cmp
je
popl
je,pn
pop
imul
pop
mov
shrl
leave
lcall
nop
mov
popa
cli
in
fbld
mov
cmp
push
cmpl
stos
pop
mov
stos
mov
flds
imul
lds
in
cmp
push
lods
push
mov
adc
loopne
mov
pop
lods
xor
or
add
lds
icebp
ficoms
xor
pop
cmpsb
or
filds
scas
xor
imul
out
and
or
lods
mov
pop
mov
or
lcall
push
push
inc
xchg
outsb
outsl
pop
cmc
in
movq
jle
cltd
fs
and
xor
rorl
inc
cli
stc
insl
addr16
shrb
xor
push
sbb
sbb
stc
push
fimuls
dec
mov
mov
mov
test
lods
mov
daa
out
push
jmp
cmpsl
aam
and
xlat
sbb
mov
or
jo
xor
pop
notb
xor
xor
ds
leave
sub
and
arpl
out
stc
dec
insb
xchg
outsb
jecxz
repnz
test
sbb
pop
sbb
pop
mov
or
push
rcr
repz
jg
push
repnz
arpl
push
cmp
sbb
mul
imul
insb
mov
dec
or
sarb
dec
pushf
mov
and
pop
adc
cli
enter
insb
dec
inc
mov
or
jp
jae
push
in
cmp
mov
dec
faddl
ror
or
fwait
std
frstor
ffreep
push
sbb
add
or
mov
test
pop
xchg
cli
pop
push
xor
jnp
xor
gs
les
xchg
adc
mov
adc
insb
out
or
clc
scas
gs
inc
dec
inc
mov
into
stos
mov
xor
xchg
test
xchg
ret
in
jmp
iret
out
out
outsb
push
leave
xchg
mov
jmp
pop
jp
jno
fwait
ljmp
jecxz
xlat
sbb
push
and
dec
xor
mov
jns
push
mov
movsb
pop
push
shlb
sbb
adc
rcl
fcmovnb
clc
scas
insb
xchg
mov
jl
addb
loopne
out
sub
lret
je
fdivs
jge
mov
fnstsw
mov
and
cmp
lret
sbb
mov
mov
pop
outsb
ret
sbb
or
or
or
mov
xchg
es
cli
push
faddl
lods
stos
in
scas
adc
sbb
push
lret
fmulp
xor
es
sbb
popf
xor
mov
sbb
xor
sub
push
mov
mov
xchg
mov
test
jl
mov
and
cli
or
jno
loopne
mov
xor
loopne
push
adc
inc
inc
adc
int3
adc
mov
gs
or
fs
dec
lcall
out
loopne
insb
sub
sub
mov
fwait
xor
or
inc
xchg
cli
ds
scas
sub
scas
rol
push
fiadds
or
loopne
xor
pop
pop
add
mov
add
dec
pop
cwtl
cmp
dec
rcl
fldt
xchg
xchg
inc
mov
inc
or
pop
jecxz
sub
add
mov
push
cli
cmp
cltd
jg
mov
push
sbb
or
jo
inc
mov
cmpsb
cmpsl
xchg
sub
arpl
rcrb
cmc
push
xor
test
or
mov
jno
sub
mov
clc
in
fsubs
mov
imul
mov
adc
cmpsl
xlat
pop
ss
movsb
cmp
shrb
and
loopne
cmp
andb
sarb
enter
cmp
popa
mov
jg
mov
loope
in
jp
mov
xchg
dec
fs
push
add
lret
xor
subps
jp
ljmp
dec
xchg
es
lods
jno
add
sahf
pop
jb
leave
aad
sbb
lds
mov
push
xchg
shlb
test
and
sbb
mov
push
aam
cltd
pop
negb
xchg
push
inc
xor
shlb
push
nop
into
mov
dec
mov
and
stos
mov
sbb
mov
fmuls
adcb
mov
fcompl
cwtl
mov
incb
push
pusha
popf
xor
xchg
stos
in
clc
sub
shl
mov
cltd
ret
shr
stos
scas
adc
jl
pop
jle
inc
loopne
enter
xor
cmp
mov
bound
cltd
and
lods
adc
ljmp
add
cmpl
int3
fwait
mov
xchg
or
jle
mov
in
call
sub
popf
sbb
addr16
test
test
xchg
push
jae
fdivrl
je
mov
fdivl
in
mov
rcrl
xor
sbb
mov
lds
jecxz
lahf
cmp
in
enter
inc
lock
inc
arpl
sub
and
flds
push
push
iret
xor
inc
and
cmpsl
mov
dec
int
bound
sbb
xchg
shll
out
mov
jbe
mov
xchg
sub
inc
enter
repz
scas
push
jo
cmp
sbb
sub
xchg
mov
push
push
inc
ja
sub
paddsw
pop
push
push
add
lds
fdivrs
data16
pop
cs
lea
jg
push
adc
loope
fdivl
xchg
sub
dec
dec
insb
outsb
push
sbb
cmc
push
ret
cmp
pusha
add
mov
adc
mov
aad
fwait
xorl
je
out
ds
nop
jmp
out
inc
pop
mov
mov
jae
mov
lret
cmp
dec
leave
cld
lds
pop
hlt
adc
push
call
inc
push
decb
add
inc
std
lods
jl
pop
leave
loop
mov
mov
jp
pop
jo
sub
mov
dec
pop
les
scas
pop
ret
sub
cmpsb
dec
pusha
or
dec
sub
mov
aaa
or
sarb
int3
cmp
clc
jnp
mov
add
test
mov
cmp
out
xchg
std
lods
xlat
jb
iret
pop
mov
stos
pop
jl
test
orl
leave
in
cmpsl
lcall
sub
rorl
lret
and
mov
icebp
inc
jle
cmp
lods
mov
nop
std
xchg
xor
cwtl
push
mov
adc
ljmp
fbstp
aad
js
movsl
fcomp
sarb
arpl
dec
xor
movsb
mov
pop
mov
test
sub
cld
icebp
cmpsb
pop
inc
sub
dec
cmc
nop
sarl
sahf
cmp
sub
lds
loop
lods
bound
cmp
mov
negl
addr16
adc
fcom
adc
mov
xor
mov
xchg
imul
inc
jmp
xor
cltd
cmp
adc
ficoms
cmp
adc
sub
inc
inc
inc
je
div
xorl
cmp
aam
ljmp
sub
mov
in
lods
and
push
sbb
push
mov
mov
push
jmp
or
sbb
out
mov
pop
ficomps
data16
xor
push
cmp
and
adc
adc
inc
xor
shrb
inc
jmp
jns
inc
mov
lea
arpl
into
add
popa
pop
lds
test
adc
mov
mov
jb
inc
cmc
lcall
jge
mov
jns
dec
sbb
scas
add
sbb
cld
int
jo
pusha
jne
mov
jns
sub
stos
and
jne
pusha
cmp
iret
jmp
ficomps
xchg
cmc
incb
pop
push
insl
arpl
add
shll
cmp
fdivs
adc
adcl
inc
cli
mov
out
inc
xchg
ja
nop
in
sbb
pop
add
cmpsl
movsl
js
xor
or
mov
fwait
jmp
je
icebp
xor
jecxz
ljmp
loopne
dec
jno
jns
loopne
int3
mov
dec
mov
mov
mov
jno
loope
into
or
repnz
hlt
hlt
dec
push
pop
dec
xor
shll
pop
pop
dec
mov
xor
cmp
les
push
cwtl
mov
loopne
mov
fwait
lock
inc
lret
hlt
js
pop
jne
add
adc
or
loopne
dec
jbe
adc
ficoml
pop
test
fwait
aaa
aaa
pop
push
mov
lcall
insl
push
leave
push
push
arpl
mov
bound
in
dec
dec
data16
push
loop
mov
insl
sahf
adc
incl
jnp
add
scas
mov
and
in
cmc
ret
xchg
hlt
fisubrs
imul
orl
cmc
hlt
inc
sub
aad
fcmove
jne
popf
leave
roll
rclb
cmp
push
sub
bound
push
sub
inc
mov
jnp
mov
cmp
mov
leave
xchg
cwtl
mov
mov
cld
dec
pop
pop
and
jnp
repz
or
and
ret
into
sub
outsl
loopne
mov
or
lret
mov
nop
xor
cltd
add
jnp
mov
aam
sbb
cli
push
sub
dec
loope
mov
lods
leave
negb
stos
jl
jl
movsl
call
ret
mov
xchg
mov
and
hlt
out
push
stc
mov
shlb
pop
scas
jnp
xchg
lock
dec
dec
push
lcall
das
xchg
stos
pop
mov
or
inc
mov
addb
jae
add
push
sub
pop
mov
inc
or
mov
hlt
mov
stc
fsubr
inc
pop
xor
notl
aad
scas
or
jns
mov
outsl
lret
popf
xchg
xor
cltd
jo
int3
push
sub
sarl
mov
stc
push
imul
xor
mov
lret
push
pop
icebp
mov
clc
cmpsb
testb
mov
sti
ss
scas
xor
mov
outsl
sub
subl
jmp
jne
add
push
sahf
je
jmp
jmp
adc
fs
pop
mov
popf
jle
fcomp
pop
pop
mov
adc
pop
in
filds
roll
leave
jg
insb
mov
das
mov
popa
jecxz
push
inc
adc
sbb
push
mov
out
and
pop
xchg
dec
xchg
das
sub
xchg
add
sbb
dec
jno
daa
jle
adc
sbb
mov
popa
je
fwait
cmpsl
insb
xor
popa
movsl
push
add
inc
and
sarl
out
lcall
nop
xchg
add
fs
xchg
dec
inc
jb
jle
stos
into
jle
outsl
or
mov
aad
insb
scas
jge
jno
xchg
out
adc
scas
aaa
mov
loope
cmp
cmc
dec
pushf
add
lds
inc
mov
lahf
push
movsl
scas
mov
sarl
cmp
mov
add
mov
xor
movsl
sti
aam
sub
and
add
mov
mov
or
pop
push
jne
or
dec
ja
sub
or
mov
jl
push
test
repz
xor
not
pop
ljmp
inc
lcall
dec
sbb
vmovups
lcall
add
and
pop
idivl
aas
fdivl
fisubrl
cli
mov
fisttpll
pmaddwd
mov
fs
cmp
xchg
add
pop
push
mov
jmp
fistps
enter
xchg
mov
sub
sbb
cmc
jmp
imul
mov
jno
push
sbb
aaa
cmpsb
aaa
mov
out
cmp
arpl
sub
pushf
dec
jne
roll
fadds
jl
mov
leave
out
add
movsb
divb
out
mov
jns
addr16
add
lods
insb
pop
clc
mov
xchg
lcall
leave
lea
xchg
pop
adc
xchg
mov
mov
jmp
clc
stos
mulb
sub
jg
mov
mov
mov
ficoms
aaa
adc
out
fnstenv
mov
test
imul
movsb
lods
pop
cmp
xchg
aad
int
lret
xorb
ficoml
jne
in
inc
dec
mov
push
movsb
loopne
push
pop
insl
cmpsb
ss
sahf
mov
inc
push
cmp
gs
nop
cli
inc
and
cmp
test
pop
sbb
pop
lods
insl
cmp
inc
lods
fwait
mov
or
sbb
mov
ja
mov
inc
cmp
rclb
mov
insb
xchg
scas
outsl
jp,pt
jno
adc
jle
xlat
mov
rolb
test
insl
fimull
icebp
lods
mov
shlb
and
fcompl
mov
in
dec
shrl
xlat
in
sarb
adc
inc
sbb
mov
outsb
fnstcw
fisttpll
push
fwait
aas
fiadds
mov
lcall
or
std
cmpsl
ret
sub
jg
test
mov
xor
movsl
fildl
mov
daa
movsl
jb
push
stos
sti
in
sbb
push
jnp
outsb
and
xor
mov
imul
jo
sbb
mov
repz
cmp
ret
lret
pusha
ljmp
rol
inc
and
ss
insb
push
popa
fwait
lods
out
sub
mov
pop
out
std
or
andb
roll
add
clc
out
test
mov
mov
mov
sbb
xor
clc
pop
andl
and
push
aam
mov
mov
push
xchg
fld
jp
add
push
add
pop
into
cld
inc
pop
cmp
es
adc
jecxz
push
inc
pushf
adcl
loop
call
std
jge
out
jnp
pop
pop
cmp
dec
pop
std
ss
int
push
mov
xor
push
ret
inc
mov
data16
insl
sbb
sbb
loop
ret
add
lock
sbb
adc
cmp
subl
inc
popa
sub
stc
mov
ds
inc
mov
and
pop
sub
aas
dec
fadd
mov
ja
cld
ret
and
xchg
or
mov
push
daa
pop
sti
lods
or
iret
mov
jo
leave
leave
dec
clc
push
into
push
sahf
xor
nop
gs
mov
test
inc
pop
xor
mov
push
pop
fisttps
pop
sbbl
dec
mov
xor
add
push
lea
mov
xor
scas
mov
xchg
sub
scas
jmp
fstpl
add
gs
leave
divl
push
add
aam
cmp
mov
adc
movzwl
enter
jo
ja
sbb
add
jns
pop
clc
jne
outsb
cmc
mov
adc
lods
nop
mov
out
adc
jge
out
add
jle
pop
pop
scas
add
mov
xor
xor
mov
sarb
stos
leave
xor
out
jge
cmpb
push
cmp
cwtl
push
add
xchg
push
repnz
or
sarl
push
inc
jnp
jbe
mov
cmpsb
fwait
or
jae
xchg
scas
dec
das
outsb
sub
pushf
pminsw
jp
or
pop
addl
lods
jmp
stos
sbb
xchg
out
jmp
pop
addl
hlt
out
out
or
aad
mov
loope
jb
aaa
adc
frstor
fldl
xchg
imul
js
hlt
cmpsb
mov
pop
dec
data16
jae
addr16
fdivs
mov
rolb
add
jns
xchg
xchg
dec
bound
outsl
mov
pop
fsts
test
nop
xor
xor
sub
jnp
outsb
xor
and
add
test
jmp
xor
bound
test
and
xchg
je
outsb
bound
or
mov
addr16
pop
sbb
jmp
movb
push
out
inc
add
ja
push
loop
mov
mov
xchg
test
mul
aad
mov
pop
push
jp
out
mov
mov
iret
and
cmp
xchg
inc
mov
dec
das
or
pushf
mov
pusha
addb
sahf
bound
rcll
das
lahf
ret
cmp
cmp
push
or
xchg
or
lock
movsw
and
add
movsl
lea
jae
imul
loopne
push
adcl
adc
aam
mov
sbb
int3
push
mov
inc
cmpsb
mov
jge
add
inc
dec
dec
icebp
inc
xchg
cmpl
mov
fiadds
sbb
lret
pushf
js
dec
lock
push
rcrl
fsub
jecxz
jae
int3
repnz
aas
dec
faddl
mov
adc
and
lcall
adc
mov
cld
mov
cmpsl
pop
mov
dec
jg
or
xchg
cmp
mov
dec
pop
xchg
mov
jo
sbb
int
mov
or
fwait
adcl
sub
jl
shlb
push
pop
test
in
inc
jmp
shrb
loop
bound
mov
jp
jae
scas
jns
int
add
push
cmp
sbb
cld
jb
jno
leave
jbe
mov
movsb
push
inc
mov
mov
sbb
shll
insl
inc
push
icebp
jmp
imul
mov
insb
call
adc
hlt
outsl
ljmp
and
sub
arpl
push
lahf
call
inc
dec
and
inc
inc
xchg
test
jns
push
loope
mov
mov
fdivrs
fistpl
push
pop
xchg
mov
jb
clc
fimuls
mov
sarb
inc
mov
test
mov
or
xor
inc
push
mov
push
pushf
es
xchg
pop
clc
fndisi(8087
cmp
int
in
ffreep
into
pop
mov
xor
cmp
mov
aam
pushf
add
sbb
add
mov
add
ds
int3
int
outsb
mov
push
lea
dec
jo
hlt
xchg
cmpsb
inc
rolb
mov
add
inc
xor
mulb
fstpt
loopne
jb
in
test
andb
into
adc
jg
leave
jmp
or
pop
push
gs
arpl
inc
add
aas
xor
and
mov
jo
clc
ljmp
inc
sub
mov
jmp
or
fistl
adc
pop
sbb
inc
popf
fucomip
cld
cltd
add
pop
test
je
and
shlb
xchg
stos
cmp
dec
or
mov
idivl
adc
mov
adc
mov
lahf
or
lods
cli
mov
dec
shrb
cmpsl
iret
or
test
aam
xchg
inc
push
pusha
cmpsb
stc
sub
xchg
into
or
out
push
mov
inc
mov
scas
rorb
mov
test
ret
add
fwait
cmp
adc
sbb
push
sub
adc
in
test
pusha
jns
fldenv
notb
push
outsb
lret
lods
jl
sti
test
sbb
jno
cmp
push
jmp
repz
dec
in
pop
lahf
popl
jl
outsb
in
xchg
addr16
stos
gs
fistpll
arpl
add
sub
lret
aam
xchg
jle
addr16
cmp
pop
test
iret
cmpsb
xor
jae
xor
push
cmp
popa
sbb
and
outsl
stos
mov
inc
sub
and
mov
sub
or
mov
loope
shrb
pop
sub
ret
add
pusha
dec
inc
mov
lea
movsb
fnstsw
lea
pusha
pop
mov
pop
rcr
jg
cli
xchg
in
sbb
dec
cmp
pushf
ret
icebp
adc
and
sub
scas
pushf
arpl
push
ret
pop
dec
aad
pop
xor
pusha
cmp
clc
cld
in
jecxz
add
ret
daa
aad
ss
adc
test
js
pushf
push
add
add
cli
ffree
or
sub
pop
cmpb
test
sub
out
mov
pusha
and
sbb
scas
sub
idivl
mov
outsl
jae
mov
nop
ljmp
sub
and
push
or
testb
adc
inc
jne
ret
ss
jne
ljmp
popf
mov
pop
xchg
ret
aad
inc
cmp
repz
insl
out
xchg
push
scas
icebp
sbbl
jb
stos
lcall
int3
push
sbb
fcoms
and
repnz
dec
loop
dec
shrl
jno
notb
cmp
mov
fdivp
inc
shlb
push
add
dec
fistl
push
inc
mov
lret
xchg
aad
pop
mov
cld
sbb
es
and
xor
sbb
add
adc
arpl
cmpsl
cmp
hlt
subb
lret
lods
sub
lds
cmp
pop
pop
das
or
jbe
testl
loope
stc
sub
imul
jg
mov
aam
inc
lahf
jl
pop
enter
adc
ljmp
cmp
pop
dec
ss
ljmp
sbb
imul
fstl
mov
inc
outsb
xchg
cwtl
sbb
jge
xor
imul
dec
daa
push
mov
xor
pop
jp
idivb
pop
notl
inc
mov
mov
mov
call
sahf
jl
and
cmpsl
outsb
aaa
xchg
jnp
pusha
mov
inc
pop
xchg
mov
jge
sbb
xchg
test
dec
mov
mov
fimuls
and
jecxz
nop
or
pop
sti
pop
sbb
adc
and
push
mov
lret
pushf
jnp
addl
or
test
test
aaa
xlat
inc
ffree
cmpsl
test
je
addr16
mov
rorl
jmp
sbb
adc
outsb
inc
xchg
sbb
or
leave
in
mov
pushf
mov
pop
ret
or
pop
xchg
je
xor
cmpsb
push
mov
sub
lea
lds
scas
stos
xor
dec
mov
loope
dec
pop
jp
call
jae
mov
xor
mov
cmpsb
ret
sub
fbld
sub
in
sub
mov
movsl
add
insl
out
pop
in
movl
xchg
add
lcall
xchg
repz
adc
mov
xchg
inc
pop
add
insl
pop
fldl
movsb
and
outsb
mov
xor
sbb
popf
sub
push
add
mov
push
fwait
adc
cmpsl
dec
dec
dec
pushf
cmc
mov
test
out
cmpsb
sahf
xor
push
mov
push
xor
lcall
in
xor
and
fstpt
lahf
jmp
pop
add
in
orl
outsl
loop
sub
pusha
jecxz
mov
leave
out
movsb
scas
xlat
imul
out
loop
je
cli
je
icebp
popa
ljmp
xchg
pushf
das
ss
push
sbb
subb
sbb
mov
repz
in
aas
or
xlat
mov
mov
test
mov
or
fildll
ljmp
pop
ret
xchg
ljmp
and
or
pop
adc
outsl
loopne
push
push
loopne
add
push
and
mov
sub
mov
cli
sahf
add
aad
test
inc
mov
push
into
fs
mov
mov
push
sub
fsubrs
add
cs
pop
and
cld
movsl
std
fiaddl
iret
rcrl
push
dec
and
jp
into
jnp
dec
push
mov
das
or
push
nop
jo
cltd
in
cmp
adc
xor
or
dec
push
repnz
adc
jns
fs
jae
addl
xchg
loop
jno
mov
jl
add
sub
mov
lea
divl
jg
stos
rolb
push
ret
inc
push
add
ss
sarb
cmc
pop
sbb
cmp
mov
mov
xchg
fldl
leave
test
cwtl
cmp
xor
loop
mov
add
dec
loop
or
xchg
cmpsl
sahf
in
lret
dec
cmp
jle
jae
xor
aaa
pop
xor
rclb
push
jnp
rol
pop
sahf
push
push
sbb
popa
pop
mov
mov
mov
out
xor
stos
adc
lcall
mov
jl
xlat
sbb
jp
andb
add
in
add
cld
jne
pop
or
es
sti
xchg
in
hlt
sub
arpl
mov
outsl
add
sub
jnp
cltd
mov
cld
push
out
ret
outsl
add
or
pop
xchg
int3
sub
pushf
pop
cmp
xor
ret
out
jb
mov
pop
lds
flds
idivl
mov
cmp
stos
and
into
adc
or
das
xor
mov
imull
das
loope
outsl
movsl
mov
xchg
cld
dec
lea
loope
and
mov
je
dec
mov
dec
or
xchg
movsl
xchg
xchg
xchg
xor
adc
add
mov
lahf
dec
in
xchg
push
fs
loope
stc
decl
cmpsb
scas
jo
popa
arpl
inc
pop
mov
push
cmpsl
mov
xchg
mov
push
add
or
dec
sarl
dec
out
repnz
sub
rcrb
pause
negb
test
jl
imul
xor
or
push
push
orb
xor
stc
fwait
push
jns
popa
cmp
sbb
dec
xor
mov
aas
fcmovnb
pushf
lahf
inc
adc
add
jo
mov
mov
add
aad
das
loop
mov
int
jno
imull
inc
lods
fsubr
fistps
mov
pusha
mov
leave
stc
adc
add
add
nop
filds
scas
pop
imul
jo
std
std
and
sub
gs
int
out
pop
push
xor
shlb
iret
movsl
daa
mov
inc
and
jae
popa
push
out
xchg
inc
mov
sub
inc
icebp
push
es
fsubrl
dec
mov
push
mov
jmp
mov
sub
roll
or
pop
int
mov
nop
call
jns
pop
mov
push
shrb
jp
lods
aaa
or
imul
mov
sub
add
setae
mov
and
shrl
into
js
cmp
fldl
nop
arpl
les
xor
xor
jmp
push
neg
ret
push
stos
mov
mov
mov
mov
ja
std
in
jnp
pop
inc
and
mov
push
xor
jns
xchg
mov
or
pop
adc
mov
add
pop
and
xor
lock
sbb
roll
jp
rorb
xlat
iret
jno
fldcw
cmp
pop
in
cmp
push
jb
aaa
pop
sub
fldt
adc
jbe
clc
leave
aad
pop
push
xchg
mov
fwait
xor
or
adc
adc
addr16
dec
fcompl
cmp
shlb
stos
adc
push
repnz
aam
mov
repz
adcl
or
loopne
ljmp
and
pushf
dec
cmp
subb
mov
fdivrl
mov
or
sub
pop
push
or
dec
and
push
insb
xor
andl
push
push
and
pop
scas
xor
idivl
cwtl
sbb
dec
jl
paddusb
inc
pop
popf
mov
adc
ss
mov
aad
nop
cwtl
xor
mov
cwtl
movsl
cli
std
xor
jae
orl
mov
ret
or
js
lea
in
jns
js
dec
fsubrl
leave
add
movsb
fisttps
lds
jae
mov
and
sub
mov
adc
and
pusha
bound
jbe
lret
push
mov
push
repnz
or
fisttpl
es
and
in
jae
dec
dec
add
push
fiadds
out
jnp
outsl
inc
loop
lahf
clc
mov
lret
push
jb
popf
inc
mov
outsb
cmpsl
dec
rclb
insl
jae
jecxz
jg
jge
xchg
inc
fwait
add
loop
shll
mov
mov
mov
and
push
lret
nop
into
sbb
xor
mov
pop
mov
lods
mov
cmp
out
add
ret
outsl
cmc
test
cmp
mov
lea
push
movsb
cmpsb
daa
call
lea
mov
mov
ds
mov
out
cmpsl
lcall
lcall
call
cltd
daa
sbb
mov
fsubrs
push
stos
adc
inc
fprem
inc
sub
or
repz
inc
add
xor
mov
lods
cmp
push
pushf
adc
cmpsl
std
cmc
xchg
xchg
dec
frstor
hlt
xchg
xchg
pop
lcall
xchg
xchg
mov
sbb
pusha
mov
aas
mov
insl
sbb
pop
jge
movsb
jb
sahf
test
movsl
adc
mov
pop
or
push
cmp
lods
sub
rol
sarb
lods
inc
cld
sub
xchg
mov
mov
add
sti
jae
jle
push
xchg
test
popf
leave
xchg
adc
out
cmp
arpl
sub
xor
jb
adc
jb
mov
mulb
pop
sar
lcall
sti
sub
xchg
and
dec
icebp
xor
mov
clc
push
jmp
fmul
pusha
sbb
mov
pusha
lret
mov
xor
orl
inc
push
sub
lds
inc
iret
scas
xor
fidivl
cmp
movl
jg
frstor
mov
cmc
leave
or
stos
xor
in
mov
dec
fstps
or
imul
push
push
pusha
or
jp
frstor
cmpsl
push
aas
jle
jae
loop
add
cmpsl
mov
add
mov
sub
inc
mov
mov
sbb
dec
mov
or
out
mov
mov
xor
jle
and
sub
inc
or
inc
push
xlat
lock
pop
dec
ret
mov
pop
mov
push
loopne
add
pop
push
sbb
dec
shl
popa
and
scas
mov
addb
repz
movsb
sbb
mov
xorl
or
mov
inc
mov
mov
cmc
dec
adc
push
push
lcall
repz
lods
xchg
ret
arpl
sub
pop
fidivrs
xchg
pop
adc
cmp
xchg
cmpb
scas
xchg
lea
pop
or
test
insb
sub
or
fistps
data16
add
mov
int3
xchg
cmpsl
dec
sub
ror
jb
shr
loope
cmpsb
pop
fcomps
pop
mov
pop
push
cltd
clc
inc
out
lods
add
inc
pushf
test
xchg
ljmp
or
jne
pop
pop
xchg
pop
pop
nop
divl
dec
sbb
ret
jge
outsb
fdiv
in
loopne
xchg
mov
xchg
lret
in
adc
xorb
add
mov
daa
aad
lods
cld
mov
loop
jae
pop
or
in
loope
leave
add
push
mov
adc
cmc
nop
les
dec
add
inc
xor
sbb
sub
mov
sti
jo
inc
clc
cmpsl
jle
push
aaa
adc
push
sbb
xchg
lcall
cltd
jl
pop
pop
push
bound
lods
inc
dec
inc
mov
or
cmp
dec
fsubs
lret
popl
inc
mov
mov
in
xor
mov
or
mov
mov
dec
daa
fucom
popf
lods
inc
iret
imul
outsb
pop
add
cmpsl
add
and
sbb
daa
idiv
iret
mov
loopne
sbb
enter
dec
sti
enter
test
loope
push
addr16
faddp
lods
sbb
jp
pop
repz
mov
clc
pop
sbb
add
imul
popf
adc
imul
sub
xor
stos
fwait
xor
ja
loop
sarl
lret
pop
vmaxpd
push
mov
sbb
jnp
into
ret
movsl
jp
gs
mov
or
iret
arpl
xor
cmp
je
icebp
cmpsl
jne
inc
xchg
mov
push
fs
dec
lods
jo
or
lret
jns
push
jecxz
cs
lock
jnp
fwait
push
fwait
movsb
call
cmp
inc
sbb
mov
fcoms
xchg
pop
sub
xor
lcall
dec
in
popf
fwait
and
mov
dec
pop
cs
jg
sahf
cld
pop
mov
or
mov
pop
jae
cli
and
and
ljmpw
test
xor
fwait
sbb
loop
inc
lds
aad
fucomip
arpl
pop
fwait
mov
pop
lret
cmc
hlt
shrl
sbb
pop
repnz
shr
add
cmc
addr16
hlt
pop
lock
bound
add
addr16
push
in
mov
sbbl
les
aas
scas
push
push
inc
mov
xchg
push
pop
mulb
ret
mov
xchg
jb
stc
xor
dec
and
jb
dec
stos
pcmpgtb
popa
inc
mov
test
cmc
fsubs
fnsave
cmp
sbb
adc
push
inc
push
sub
and
adc
sti
xchg
stc
int3
hlt
pop
iret
or
sbb
jle
sbb
cmp
jns
shlb
jg
lret
hlt
mov
lods
inc
mov
adc
dec
or
test
cwtl
imul
mov
push
mov
leave
fsubl
xchg
jecxz
sbb
mov
or
push
xchg
and
pop
into
cs
mov
rcl
repnz
pop
inc
mov
data16
or
add
sub
stc
push
adc
dec
pop
mov
lods
cltd
add
in
ret
push
rcrb
pushf
dec
arpl
cs
xchg
sahf
lock
test
or
jbe
in
or
ja
inc
or
jns
or
jne
and
js
sti
into
jp
xor
outsb
inc
sbb
negl
push
js
jp
imul
or
enter
or
enter
or
cmp
jno
dec
cmpsl
roll
xor
das
xchg
xor
dec
add
rcrb
mov
inc
pop
mov
scas
mov
or
lahf
addr16
mov
popf
aaa
or
out
dec
or
mov
inc
jns
mov
and
add
mov
push
fwait
lcall
imul
icebp
call
pop
xor
xor
repz
mov
pop
adc
jbe
shlb
pop
loopne
int3
mov
lods
xchg
insb
pop
fs
std
xchg
repz
imul
out
outsl
push
repz
mov
pop
push
rep
repnz
cwtl
lods
sbbl
xor
xchg
insb
pop
push
mov
push
outsl
std
in
mov
test
ja
dec
insl
jle
cli
mov
mov
pop
push
xor
mov
or
mov
jle
xorb
mov
mov
test
mov
ret
sti
insb
jge
aad
jmp
repz
jno
shrl
lods
jge
sub
mov
xchg
lods
inc
fwait
push
pop
adcl
adc
cli
loop
fadds
or
mov
jb
hlt
ret
cmp
fmul
mov
stos
cmpsl
inc
xor
ret
sub
nop
mov
cmp
aad
or
mov
mov
xchg
jmp
sbb
jnp
adc
leave
aad
ffreep
xor
pop
add
psrad
push
andl
mov
dec
incb
insb
iret
sti
inc
cld
pop
cmc
mov
ja
sub
sub
fidivrl
xchg
jbe
dec
or
cmp
idiv
mov
stos
xchg
jmp
push
fistl
bsr
cld
in
int
sub
shrb
push
mov
sahf
cmpsb
jle
dec
loop
or
xchg
mov
inc
dec
push
clc
in
sub
or
mov
mov
inc
aaa
dec
cld
insb
push
and
dec
hlt
rcr
imul
lds
dec
jecxz
mov
jl
ficoms
js
enter
lock
imul
movhps
cmp
rcr
mov
sbb
popf
nop
sbb
imul
stos
adc
clc
mov
pop
ficoms
xchg
lea
xchg
fwait
std
sbb
ret
xchg
mov
xchg
int
pop
pop
icebp
cmp
adc
jg
or
lods
sbb
mov
jo
outsb
adc
push
leave
cmpb
movsl
push
movsb
jmpw
div
loope
add
jecxz
xchg
psrlw
call
add
jns
and
iret
sbb
imul
push
pop
inc
das
jle
mov
aad
jns
mov
int
je
adc
mov
rsm
dec
jecxz
sbb
and
test
mov
cmp
add
dec
dec
sti
or
push
bound
sbb
lods
mov
dec
sub
jmp
or
mov
sub
and
push
imul
in
mov
daa
xor
fnsave
sbb
fcompl
xor
jge
and
fisttpl
adc
jmp
or
std
stc
insl
and
jns
and
ds
mov
outsl
jne
daa
cmp
lods
mov
shr
sarb
movsl
enter
adc
aaa
in
fstl
sub
and
and
data16
je
fadd
dec
stc
das
cmp
pop
sbb
or
push
repnz
cli
adc
push
push
push
jmp
push
scas
xor
cmp
and
dec
and
stos
xchg
mov
test
xor
sub
or
cmp
jns
decl
rcrl
or
add
sub
imul
cmp
int3
adc
xchg
cmp
pop
dec
cltd
out
xor
jbe
xchg
pop
scas
aam
lcall
cs
mov
or
cs
mov
or
lea
stc
les
xchg
and
jns
jnp
sti
jl
cmpsb
inc
xchg
mov
std
or
cmp
fidivrl
mov
cmp
vandpd
push
loopne
scas
mov
jge
mov
mov
inc
dec
pushf
push
jae
dec
pop
addr16
sbb
and
sub
add
mov
push
xor
inc
xor
ss
test
ficoms
push
sub
in
cmp
mov
push
sbb
adc
jae
inc
sbb
xchg
push
shrl
xchg
popa
jno
std
aaa
faddl
push
dec
aaa
outsl
sbb
pop
cmp
pop
ss
shlb
std
xchg
test
rcr
idivl
mov
cwtl
aaa
sbb
fwait
and
mov
mov
adc
mov
or
jno
arpl
ds
ds
mov
adc
icebp
push
add
cmp
pop
mov
mov
add
inc
stc
cltd
test
and
xor
sub
lret
ss
arpl
adc
inc
sub
scas
mov
mov
mov
or
add
lds
call
cltd
dec
xor
inc
loop
mov
pop
cltd
cs
or
pop
mov
adc
fwait
enter
shrl
pavgw
in
ret
incb
xor
sub
arpl
ds
cmp
pop
mov
mov
push
or
shr
int
std
int3
push
fcmovu
xlat
mov
aaa
nop
push
xor
leave
xchg
rolb
mov
add
dec
jl
idiv
fcmovnbe
in
pop
fwait
mov
mov
mov
push
sar
sbb
inc
or
std
cltd
lret
dec
push
insl
jmp
ret
gs
shrl
cli
xor
adc
jno
sbb
test
mov
xor
jno
aas
or
sub
jmp
cld
add
fdivl
ret
sbb
mov
stos
cmp
addl
xor
je
movsb
sbb
mov
mov
aas
fstpl
sbb
idivb
ja
pop
fbstp
sub
outsb
repz
pop
jge
arpl
outsl
mov
je
inc
mov
pop
in
int3
frstor
push
imul
xchg
sub
sti
mov
inc
jge
mov
sbb
loopne
mov
add
cmc
mov
mov
mov
or
inc
pop
cmp
mov
mov
lret
nop
jp
lock
stc
sub
lock
pop
add
std
and
iret
popa
insb
movsl
aas
test
lds
xor
dec
mov
jns
je
les
push
and
in
adc
cwtl
pop
xor
iret
test
cltd
das
dec
rorl
dec
mov
neg
and
leave
mov
lcall
adc
out
and
mov
iret
inc
push
xlat
mov
xchg
js
les
push
cltd
into
inc
cmp
sbb
jecxz
jecxz
xor
fdivrl
rcrb
test
mov
inc
je
out
cltd
in
adc
lret
and
pop
add
in
sbb
lock
mov
stos
fdivrl
lret
mov
jbe
lock
jge
mov
mov
inc
cli
or
pop
xor
xchg
outsl
insb
into
adc
adc
jns
lea
add
ret
in
aaa
aad
add
shll
negb
xor
mov
jno
fstpl
lods
jnp
dec
and
adc
inc
ret
xor
insl
cltd
call
sar
loop
push
mov
arpl
sbb
mov
mov
xor
pop
and
popf
add
mov
and
adc
lods
in
insb
lret
fsubs
sahf
pop
stos
mov
stc
push
stos
add
rorl
popa
xor
jle
add
cs
mov
call
pushf
sub
std
lock
adc
subl
repz
leave
or
call
sub
push
jae
movsb
mov
imul
mov
and
add
jbe
cmpsb
dec
cmp
shrl
or
data16
jecxz
xchg
scas
xchg
mov
jl
jle
outsb
call
fimull
mov
enter
test
repz
dec
lahf
in
and
dec
cmp
mov
mov
dec
movsb
jb
stos
mov
les
adc
sbb
or
jl
mov
rcrl
enter
aas
je
push
or
mov
std
cltd
inc
add
push
adc
xor
mov
ficoml
cmp
pop
lret
xchg
scas
pop
pop
xchg
or
xor
das
in
sub
inc
mov
push
dec
sbb
mov
dec
or
out
aad
and
pop
pushf
insb
mov
or
int3
xchg
stos
sbb
ret
ret
mov
fs
jb
fisubs
std
jge
imulb
nop
popf
clc
mov
pop
pop
popa
test
and
adc
cmp
mov
sub
mov
inc
scas
mov
icebp
jbe
jae
xchg
pop
loopne
and
and
pop
out
in
mov
je
out
mov
pop
mov
lds
xor
inc
inc
mov
popa
mov
xor
dec
lret
fwait
push
xlat
pop
sbb
pushf
inc
or
cmc
adc
jmp
and
roll
dec
push
clc
mov
out
pop
cmpsb
inc
and
lods
jp,pt
popl
lods
push
popf
dec
psraw
mov
fisubs
jne
and
andb
jb
leave
notb
daa
mov
testb
sahf
inc
lods
movsl
in
fs
sahf
das
cmpsb
aaa
and
adc
cld
mov
jecxz
ficoml
out
jecxz
inc
psrad
dec
xchg
sfence
xor
dec
pop
jo
stc
test
fistpll
pop
nop
rcl
cmpb
sbb
add
mov
jnp
hlt
xchg
loop
inc
mov
daa
adc
in
icebp
in
movsl
imul
clc
mov
jns
jg
xor
mov
iret
xlat
shl
hlt
imull
sub
push
ljmp
popa
pushf
cltd
push
push
push
sub
xchg
ljmp
xchg
lods
in
adcb
and
clc
aam
cmp
lcall
pop
fistps
mov
unpckhps
push
jmp
inc
pop
lods
dec
mov
stos
insb
popf
mov
loopne
movsl
scas
fisttps
movsb
xchg
and
pop
stos
dec
int
or
int3
jecxz
mov
and
outsl
adc
std
fs
pusha
dec
sbb
jnp
scas
lret
push
sub
call
mov
fidivl
cltd
inc
mov
stos
dec
cmp
cmp
fcmove
mov
pop
lahf
pop
dec
inc
jmp
and
mov
sub
pop
add
fildll
daa
bound
cmpsl
ljmp
in
popl
loopne
bound
sbb
ss
xchg
jle
rcrb
lea
sub
pushf
rclb
icebp
aam
cmpsl
cmpsb
inc
aad
and
sub
pop
data16
inc
repz
mov
dec
add
aaa
inc
and
lea
lea
xchg
lahf
pop
push
xchg
and
xchg
dec
inc
sarl
hlt
jne
jge
add
rorb
pop
sub
cmpsb
and
push
fldl
data16
inc
scas
xor
rorl
insb
shl
out
dec
loope
sub
xchg
jge
mov
pop
pop
inc
sbb
or
ffree
bound
lret
out
jmp
into
aaa
cmpsl
in
insl
popf
xor
push
outsb
push
mov
dec
xchg
xchg
popf
or
xchg
mov
jl
clc
or
in
imul
sbb
lahf
sub
iret
jns
loope
imul
xor
movsb
test
pop
scas
ficompl
xchg
out
out
into
pushf
push
push
inc
jb
xlat
mov
in
popf
pop
rcrl
aam
dec
fcom
divb
adc
cmp
pop
jp
dec
mov
imul
xchg
or
lcall
mov
dec
xchg
mov
inc
nop
inc
push
inc
mov
sub
repz
movsb
movb
or
or
mov
sub
in
mov
dec
out
push
add
unpckhps
inc
push
fisttps
inc
jb
int3
testb
jl
cmp
and
lods
pop
repz
loopne
cltd
adc
scas
or
push
sbb
lahf
call
iret
ret
fs
xlat
dec
jecxz
push
dec
jmp
in
mov
sbb
push
push
sbb
push
fisubrs
xchg
cmp
inc
jbe
push
mov
out
sbb
imul
jle
add
fistpll
push
insb
stos
insw
sbb
jbe
cmp
cmpsl
pop
mov
loope
daa
mov
cmp
fdivr
adc
jl
jno
push
inc
xor
in
sbb
xchg
xchg
data16
imul
push
and
addl
xor
cmpl
cmp
dec
mov
sbb
and
adc
inc
sub
mov
add
push
ss
sbb
dec
ljmp
add
push
and
xor
ret
or
pop
int3
pushf
fwait
pop
or
fldl
push
ss
je
ja
imul
lret
into
ret
call
in
or
popf
sub
out
out
sbb
pop
push
or
fs
inc
sbb
test
std
test
cmp
in
push
mov
mov
pop
mov
mov
or
push
xchg
xchg
push
xchg
mov
rcr
dec
xchg
mov
repnz
adc
ljmp
adc
iret
mov
inc
jg
jp
sub
push
imul
dec
xor
aam
pop
cld
mov
mov
ror
dec
mov
popl
mov
jle
xchg
cld
jp
orb
das
inc
es
add
cmp
mov
or
test
aam
movsl
test
js
cmp
fs
lods
and
mov
mov
iret
jae
in
jns
loopne
andb
repnz
mov
mov
mov
fstpt
mov
mov
adc
xchg
shll
jmp
mov
in
mov
scas
sub
xchg
dec
mov
and
sub
out
cmp
inc
bound
mov
jcxz
xchg
mov
mov
mov
fists
dec
add
and
stos
outsl
mov
dec
ret
jns
gs
jb
or
jno
sbbl
jmp
sbb
repnz
sbb
div
scas
icebp
push
mov
sbb
es
mov
in
mov
mov
xchg
mov
xlat
mov
pop
pop
push
aam
pushf
pop
pop
les
lahf
xor
das
mov
fdivr
inc
jnp
iret
jnp
loopne
add
jp
or
add
loopne
aaa
and
or
dec
loope
jle
enter
push
rcrl
notb
or
decl
xchg
mov
push
gs
xor
fsubrl
mov
scas
sbb
xchg
push
jb
pushf
insb
xchg
mov
movsl
out
xchg
pop
xor
cmp
ret
cmp
dec
push
lods
add
or
in
ret
mov
das
xchg
int3
mov
in
cli
mov
test
and
fmuls
adc
push
xor
adc
out
js
mov
loope
and
cwtl
cld
fwait
aad
stos
pop
scas
sbb
and
testb
outsb
xor
addr16
arpl
ret
or
adc
stos
test
mov
mov
adc
js
lret
repz
ss
xchg
out
fcmovbe
flds
out
js
movsl
movsb
das
fwait
cs
sub
xchg
xchg
pop
insb
cwtl
mov
inc
frstor
sub
imulb
lock
repz
cltd
jp
mov
cld
xor
add
xchg
out
mov
mov
fsts
out
stos
mov
and
mov
in
cmc
mov
setb
rol
jle
push
ds
push
xor
mov
movsl
bound
push
das
outsb
mov
js
adc
xor
mov
sub
dec
sub
mov
sbb
rclb
outsb
jge
jl
cli
lock
mov
sahf
aas
push
test
push
sbb
icebp
xchg
scas
sub
dec
scas
mov
fisubs
loop
jecxz
shrl
adc
lods
popf
xor
sub
lahf
fwait
jmp
mov
loope
fidivl
aam
sub
in
adc
push
cwtl
ret
and
pushf
lahf
sti
sub
dec
enter
or
std
dec
rcll
fldenv
out
push
pop
dec
int
push
ja
sub
cmp
loop
or
or
out
pop
call
jb
mov
fs
inc
mov
cmp
clc
mov
or
add
addr16
push
xchg
add
xchg
sbb
ds
out
repz
push
sub
aas
pushf
and
jge
xchg
adc
xorb
sbb
mov
pop
add
xchg
lock
fadd
or
lret
inc
sti
data16
xlat
pop
imul
leave
push
cmpsb
movsl
lret
stos
xor
inc
cli
iret
loopne
call
mov
or
cmc
mov
mov
pop
mov
pop
jge
dec
imul
pop
lock
fstp
sbb
xor
push
out
dec
xchg
lds
test
jno
xchg
xchg
xchg
pop
push
xor
and
xlat
imul
outsb
jmp
inc
ljmp
xchg
imul
push
mov
pcmpeqd
testb
adc
push
loop
lret
lea
movsl
inc
pop
xor
lret
jae
orl
pop
inc
pop
mov
ficomps
stos
sub
jge
in
add
xor
lahf
push
pop
jmp
cmp
test
popf
xor
gs
pop
inc
mov
fsubrp
sbb
les
lds
inc
lcall
xchg
cmpl
mov
xchg
out
xchg
test
add
fnstenv
fimuls
dec
mov
dec
insl
mov
xchg
ja
sbb
sti
nop
mov
push
or
push
lcall
pop
stos
cmp
loope
mov
dec
orl
ds
pop
adc
xor
mov
pop
scas
jo
mov
push
lahf
pop
loopw
daa
call
jg
inc
lods
mov
mov
mov
nop
sahf
leave
out
in
and
in
jnp
sahf
lods
or
mov
cmp
loope
pop
add
sahf
stc
fs
mov
daa
jo
cmpsl
lcall
inc
std
push
dec
scas
sbb
or
sub
jmp
dec
push
mull
add
fcmove
dec
dec
xchg
icebp
sub
das
adc
repz
ljmp
adc
cmp
cmpsb
dec
ja
add
inc
out
inc
cmp
test
cltd
psubd
cwtl
push
mov
std
lods
or
push
lcall
in
push
push
jnp
loopne
sub
outsb
in
sahf
pop
sbb
mov
int
fwait
and
stc
je
dec
aad
pop
mov
aad
out
push
sub
push
call
stc
sbb
lods
cmp
and
pop
insb
jl
add
mov
jo
loopne
es
sub
leave
inc
xor
fs
inc
push
pop
pop
xchg
mov
xlat
jo
pop
pusha
cmp
add
stc
xor
out
xchg
fistpll
mov
sub
mov
cmpl
lret
pop
push
pushf
dec
mov
mov
and
ficoml
aad
mov
shl
ja
loopne
repz
iret
ret
mov
push
out
or
outsl
call
out
daa
fs
dec
mov
and
roll
cmp
sub
enter
adc
cld
and
mov
jp
mov
mov
xor
dec
hlt
scas
push
mov
in
ds
jecxz
adc
xor
addr16
js
in
add
pop
outsb
mov
or
cmp
xor
adc
out
ret
sub
movsb
loopne
pop
pop
pop
hlt
sbb
xchg
sub
cs
sub
hlt
std
mov
jg
mov
and
rclb
pop
rolb
xor
push
sbb
out
cli
inc
addr16
xor
out
scas
pop
mov
push
push
lods
lahf
pop
gs
cmp
or
or
jae
gs
test
mov
push
scas
test
mov
lea
cmp
sbb
xchg
call
loope
shl
int
xchg
mov
leave
popf
add
and
mov
fnstsw
push
popf
sbbl
mov
add
mov
xchg
stos
int
and
push
lods
dec
rcl
addl
stc
in
push
in
xor
mov
add
mov
add
ss
xorl
jne
adc
or
pop
repz
test
test
in
dec
lret
ljmp
jno
xlat
cli
lods
sbb
jecxz
loop
imul
stos
mov
push
aas
add
or
dec
inc
pop
adc
stc
xchg
push
aad
sbbl
hlt
jmp
movsb
mov
andl
in
sbb
push
adc
mov
add
lods
movsl
dec
adc
repz
test
sbb
and
mov
in
scas
pop
inc
pop
mov
push
ret
enter
pusha
dec
push
mov
ds
repz
xor
sbb
adc
cltd
sbb
and
cmp
rclb
fsub
lret
leave
std
dec
fiadds
pusha
mov
dec
jmp
push
gs
leave
fistpll
cmp
sub
lods
movsl
pop
subl
repnz
jns
in
or
test
and
adc
sahf
pusha
roll
sar
jecxz
nop
repz
dec
into
pop
mov
ret
aad
cmp
sub
int
push
push
lds
ljmp
and
push
push
xor
ljmp
jecxz
nop
loope
cmp
mov
pop
sub
lock
inc
flds
loopne
push
mov
xchg
and
cmp
and
test
mov
sbb
mov
stc
mov
jo
mov
imul
adc
cld
aam
fs
or
sbb
push
jle
aam
cmp
sbb
in
xorb
xor
pop
icebp
mov
in
stc
lds
ror
test
fldl2t
xchg
fnstenv
or
scas
mov
icebp
lea
bound
loopne
fsubs
mov
mov
lret
mov
or
mov
gs
add
adc
pop
pushaw
ret
mov
inc
ja
out
movsl
mulb
stos
mov
maxps
pop
mov
mov
add
or
and
fdivl
int
xor
mov
cmp
xchg
stc
mov
jmp
nop
ja
add
push
ss
xor
popf
or
or
bound
movsl
mov
dec
pop
lea
out
jp
lret
sbb
mov
jne
jle
inc
jl
std
push
push
ret
js
cmpsb
repnz
gs
adc
xor
subb
cli
in
xor
mov
pop
pop
cmp
mov
sub
push
adc
sub
test
jno
cmp
test
rclb
cmp
sbb
movsl
decb
mov
sbb
jno
cs
dec
test
xchg
mov
pop
fidivl
adc
imul
mov
push
mov
scas
mov
add
lods
int3
jnp
pop
push
inc
mov
push
es
mov
es
inc
out
push
pop
imul
lret
rcrb
test
push
xchg
out
insl
pop
or
or
stc
lods
in
or
push
lret
cld
push
into
sbb
cmp
xor
inc
cmp
dec
js
hlt
push
ja
rcll
adc
loopne
and
xchg
dec
push
outsb
cwtl
mov
pop
push
in
xchg
loopne
aas
in
sahf
sbb
sbb
inc
dec
xchg
ret
mov
jns
sarl
xchg
dec
sbb
test
test
xorb
cmpsl
outsb
fistl
pop
mov
ds
shr
fsubs
pop
dec
scas
jmp
xchg
sti
xchg
adc
mov
cmpsl
sub
jne
insl
inc
daa
pop
push
adc
cmpsl
addr16
dec
push
push
sar
push
add
adc
mov
shl
mov
sahf
shrb
jns
push
mov
pop
fwait
jbe
lds
cmp
push
outsb
mov
pop
pop
fdivl
gs
loopne
add
sub
mov
int3
icebp
test
out
lahf
dec
xor
std
notb
int3
mov
push
aad
outsb
in
fsts
and
movsb
xorb
in
jnp
mov
and
aaa
addr16
daa
jnp
test
subl
xor
mov
outsb
push
mov
xchg
jp
mov
mov
lret
pop
adc
out
lds
mov
dec
jl
out
xor
test
cmp
es
add
xchg
popa
lahf
rcl
ficoml
scas
out
sbb
push
int
fcoml
mov
pop
mov
leave
push
sub
inc
arpl
lock
and
rorl
les
sub
mov
pop
adc
bound
adc
fsubrl
mov
sbb
xchg
lds
jmp
in
mov
and
stos
add
xor
and
lahf
jb
mov
sub
call
xchg
aas
xlat
das
jg
aas
xor
jo
push
in
lcall
lock
push
mov
data16
sbb
sarl
fsubrl
sbb
repz
shll
jns
clc
adc
call
in
das
pop
xchg
inc
sub
lods
xchg
cwtl
mov
xchg
test
cmp
dec
inc
dec
in
mul
cmp
and
mov
adc
sub
aaa
xchg
lahf
inc
loope
daa
insl
insb
pop
out
imul
movups
mov
push
andb
mov
mov
and
adc
bound
ficomps
lret
ficomps
cli
out
test
out
andb
mov
stos
pushf
adc
int3
pop
in
notrack
push
sbb
mov
insl
ret
inc
jmp
into
js
jae
lods
test
push
pop
sbb
inc
mov
syscall
jae
add
cmpsl
jp
rcrb
and
jge
sarb
xchg
add
sbb
mov
into
jp
pop
pusha
and
xor
push
push
inc
imul
pop
mov
fst
dec
out
push
jmp
or
sub
sarb
shlb
outsl
push
cmpsb
pop
dec
mov
mov
adc
arpl
int
add
mov
pushf
mov
cmp
cwtl
call
jecxz
adc
inc
pop
imul
sbb
push
lret
ret
mov
push
enter
mov
add
xchg
cmp
ljmp
lahf
lods
fnstsw
test
jb
arpl
setns
cmpsb
pushf
sub
mov
daa
les
leave
js
or
dec
sbb
xor
and
daa
fwait
in
push
data16
cmp
push
scas
test
mov
mov
fidivs
add
and
ret
mov
add
xchg
movsl
fnstsw
out
dec
inc
iret
sets
jae
mov
push
stos
pusha
jg
xchg
mov
inc
loope
sub
aam
mov
ret
xchg
insl
scas
pop
cmp
lods
stc
in
orb
testb
dec
fs
fsubs
adc
stos
stc
bound
cmpsb
ret
cli
mov
add
mov
out
pop
xchg
adc
popf
push
lahf
push
inc
outsb
pop
shll
ret
outsb
cli
or
add
sub
fstpt
fyl2x
ret
push
scas
mov
es
jg
dec
or
push
push
dec
sarl
movsb
sub
inc
mov
out
fs
test
fsubs
adc
out
fildl
sar
and
je
xchg
cmpsl
dec
mov
loop
pop
sbb
shll
mov
mov
repz
int
fldl
dec
lahf
jae
call
mov
movsb
icebp
lret
rclb
xchg
add
pop
repz
xor
jp
test
popf
sub
fcmovnbe
inc
je
push
mov
xchg
push
or
rorb
mov
jecxz
ret
sub
mov
inc
cwtl
loopne
lock
nop
stos
inc
xor
sub
dec
aas
mov
aas
xor
aad
cld
jbe
push
xor
and
dec
lret
mov
daa
test
in
movsb
inc
push
xor
dec
repnz
xchg
xor
lahf
push
cs
xchg
popa
push
jp
xchg
sbb
inc
les
stc
pop
jmp
mov
fwait
pop
mov
mov
or
push
movsl
adc
mov
xorl
jns
mov
xor
sti
xor
pop
jge
push
rcrl
mov
sub
test
filds
mov
ret
mov
cmc
repnz
lods
fisttpl
andb
sub
mov
testl
pushf
ret
faddp
stc
ss
ja
sbb
sub
cmp
mov
xor
lcall
addr16
xchg
mov
xchg
in
aad
outsb
sub
dec
xchg
adc
repnz
push
jecxz
mov
cmpsb
aam
fidivrl
xlat
sarb
pop
cltd
mov
mov
add
mov
out
push
in
arpl
ja
pushf
aaa
sbb
loope
stos
mov
in
leave
shl
insb
pop
pop
mov
icebp
fstps
or
dec
mov
mov
pushl
mov
sub
movsl
mov
cli
dec
sbb
sub
movsb
adc
das
in
aas
xchg
in
leave
dec
jmp
rep
inc
mov
push
xlat
es
pushf
mov
xor
adc
out
lcall
push
push
es
inc
and
adc
jecxz
cmp
stos
pop
movsb
cmp
cmp
cld
pop
std
push
rcrl
mov
lea
or
xor
mov
inc
cmp
push
std
icebp
jno
sub
pop
std
mov
mov
lock
push
lock
stc
out
outsb
test
mov
xor
sub
or
sbb
std
or
ret
sbb
outsb
xor
sub
add
fsubs
mov
inc
jb
inc
sub
or
sbb
test
ljmp
sbb
test
cli
leave
cwtl
icebp
cmpb
popf
inc
outsl
jnp
sub
filds
movsb
rorb
loop
lret
sbb
push
xchg
xchg
jae
subb
mov
orl
jno
cmpb
pop
inc
mov
xchg
imull
fucomp
xlat
fucom
or
repnz
pop
das
mov
mov
pusha
mov
jne
add
push
daa
cmp
arpl
pop
mov
mov
jle
push
xor
xor
std
mov
iret
cwtl
xor
sbb
testl
imulb
test
or
and
inc
ds
xchg
jle
test
jne
xchg
xor
andl
add
mov
add
outsl
cltd
xchg
add
xchg
les
fcmovnb
cmp
mov
xlat
sarb
insl
jo
fs
push
inc
in
shll
std
pop
pop
std
mov
outsl
clc
sbb
mov
xlat
add
hlt
jg
ss
pop
lret
adc
popf
adc
mov
xor
sbb
or
nop
lret
stc
cwtl
inc
dec
add
jnp
push
pop
mov
dec
arpl
dec
cs
stos
lods
inc
and
jo
mov
jno
clc
xchg
jmp
pop
xor
pusha
pop
sarb
mov
mov
in
cmp
cltd
inc
cmp
or
and
pop
pop
mov
imul
aad
daa
cli
sbb
push
jno
mov
add
pop
pop
sar
and
pop
inc
loopne
or
xlat
rclb
push
push
xchg
inc
cmp
sbb
ja
jp
lcall
repnz
mov
or
mov
mov
insl
mov
jne
push
fcomi
sbb
cmp
jae
std
rcll
jmp
loope
addr16
sub
ret
mov
add
fidivrl
adc
sub
cmp
outsb
scas
les
imul
ss
jle
dec
dec
mov
rorb
cltd
ficompl
cmc
push
pop
rorl
or
push
and
out
jns
sub
addr16
pop
mov
jno
outsl
dec
jnp
pop
cld
mov
jbe
mov
cmpsb
mov
pop
xchg
pop
push
push
mov
add
and
stos
dec
ljmp
cmp
adc
popa
ret
and
xor
rclb
inc
sbb
movsl
push
sub
aas
mov
ss
push
mov
pcmpgtb
repnz
loopne
jg
loop
pop
or
int3
add
mov
sbb
movsb
outsb
sbb
add
fs
or
nop
sbb
imul
scas
sbb
cld
sub
fistpl
xor
push
jge
or
cmp
sbb
pop
jae
or
mov
lea
lret
rorl
xor
shll
adc
push
lahf
push
mov
inc
ret
xor
fsts
cmpsb
sub
mov
pop
fldt
and
das
inc
xchg
jmp
lret
push
mov
test
jo,pn
sbb
mov
xchg
es
mov
movb
in
rorb
sub
das
stc
push
insb
push
adc
and
hlt
subb
mov
add
xchg
mov
sbb
int3
pop
test
lret
inc
cltd
and
mov
in
adc
mov
pushf
test
push
fidivrs
fcmovbe
je
and
sub
loopne
sbb
mov
push
js
cmpsb
dec
adc
mov
in
dec
inc
fnstcw
xchg
adc
jl
popa
mov
xor
xor
mov
arpl
mov
xchg
aad
pop
push
lods
inc
cmp
cmp
add
scas
mov
pop
imul
and
xor
xor
in
adc
ret
mov
push
dec
mov
push
cmc
and
add
xchg
test
pop
fwait
mov
loop
and
stos
xor
sub
mov
dec
popa
out
shll
aaa
jo
fsubp
xchg
jecxz
add
cs
pop
lcall
mov
movsb
mov
sub
out
std
decb
mov
adc
aas
mov
pop
enter
insb
ja
jg
addr16
out
dec
sahf
xchg
in
jle
fucom
jo
mov
rclb
fcmovnbe
jbe
push
cmc
jo
repz
dec
and
into
addr16
or
sub
lret
mov
and
stos
call
add
popf
shlb
sarb
adc
adc
push
inc
xchg
jmp
pusha
sahf
std
add
cmp
xor
xchg
dec
sbb
and
les
push
popf
paddd
gs
les
mov
imul
mov
push
lds
cvttps2pi
sti
pop
loopne
js
lret
cwtl
hlt
andb
adc
in
pop
subl
ret
pop
jnp
dec
dec
mov
mov
or
xchg
xchg
sbb
or
jp
lret
in
sub
push
mov
ljmp
movsl
mov
mov
scas
cltd
xor
xor
adc
push
sbb
es
push
clc
sbb
adc
or
rolb
cli
dec
xor
pop
jecxz
xchg
aam
inc
mov
arpl
and
xchg
mov
xor
sahf
enter
mov
jnp
dec
dec
mov
pop
leave
popa
popf
rclb
xchg
adc
jbe
lock
aaa
xor
call
cld
cmpsl
scas
push
out
mov
lods
jle
popa
sub
lret
or
add
jae
jnp
gs
cmpsb
xchg
dec
movsl
push
outsb
xor
pop
sub
and
pop
mov
xor
cmpsl
insl
cld
lds
mov
leave
aad
or
push
fsubrs
or
jg
or
jno
fidivl
flds
pop
lea
xorb
inc
test
push
icebp
cwtl
cmp
mov
jns
dec
mov
sub
sub
outsb
ss
and
jl
or
inc
les
sub
mov
scas
mov
jns
fcomps
leave
sbb
ds
es
mov
and
cmp
stos
ret
ljmp
or
ss
shr
xor
push
inc
or
sbb
adc
push
adc
inc
rolb
jbe
xor
leave
sub
test
jae
cmp
inc
xor
ret
loop
inc
scas
movsb
and
push
lods
jp
in
jp
andb
dec
fs
fdivrl
je
push
neg
xor
repz
negb
mov
or
cs
insl
cmp
subl
lods
dec
rorl
push
jle
inc
pushf
movsb
mov
gs
push
xchg
int3
arpl
cmp
mov
leave
adcl
sub
and
jns
dec
mov
decl
or
cmp
mov
jmp
dec
push
shlb
repz
xor
add
divl
outsb
std
or
pop
idiv
jne
add
clc
mov
inc
mov
movsl
fldenv
js
push
mov
repz
dec
arpl
sti
cmpsl
sbb
fcomps
mov
pusha
pop
lcall
cmc
fs
mov
fimull
and
in
mov
pop
adc
lcall
int
test
add
push
pop
loop
cli
sub
jno
jns
js
and
popf
jnp
clc
push
ss
js
std
out
int
mov
jne
test
xor
xchg
pushf
fists
xor
jg
mov
inc
lea
cli
jb
dec
push
dec
imul
pop
inc
xchg
jmp
lcall
bnd
jp
repz
cmp
push
push
cwtl
stos
sub
mov
or
xor
pop
out
jle
xchg
push
dec
push
push
and
sub
mov
lods
xor
inc
push
or
pop
loopne
out
xchg
pop
xchg
and
inc
icebp
add
or
repnz
inc
mov
lea
bnd
cwtl
shlb
sbb
jb
mov
mov
mov
mov
xchg
mov
xchg
xchg
out
pop
adc
sub
cmc
push
push
sbbb
jle
cltd
xor
mov
movsl
lret
sbb
test
fwait
mov
jecxz
je
push
mov
xchg
je
sub
mov
jb
and
mov
mov
sbb
ss
inc
xchg
test
fstpl
pop
ret
sti
push
daa
inc
insl
and
push
pop
cmpb
xchg
ljmp
mov
cmp
loope
xchg
cld
fucomp
cmpsb
sbb
insb
adc
in
jle
cmp
scas
dec
add
dec
inc
je
xchg
inc
sub
sbb
add
ljmp
add
sbb
aad
hlt
arpl
setnp
mov
jbe
jge
xorb
lock
test
les
or
pop
xlat
leave
push
lods
add
insl
lret
fists
and
add
cld
jnp
in
shl
lods
outsb
lds
xchg
xchg
sbb
add
popa
mov
shrl
inc
mov
pop
mov
aaa
lock
pop
iret
or
jne
or
jo
stos
cld
xchg
mov
adc
movsl
push
mov
mov
ds
fcmovbe
pusha
dec
mov
pop
or
push
lea
xor
shrl
mov
out
movsl
adc
and
les
mov
mov
jae
ja
les
dec
add
fists
icebp
ret
andb
in
movb
nop
mov
aad
hlt
orb
adc
mov
mov
sbb
mov
xor
xchg
imul
in
movl
push
iret
jb
cli
aad
inc
add
and
mov
inc
pop
jno
inc
xchg
movsb
xlat
push
imulb
test
icebp
std
repz
pop
push
out
popa
push
in
add
fs
xchg
scas
xchg
or
or
push
and
iret
pop
mov
pop
cmp
stos
jb
jo
jne
xchg
dec
mov
add
add
dec
mov
jno
push
inc
data16
sub
sti
mov
push
push
mov
xor
pop
test
popa
out
mov
xor
int3
stos
repz
lds
popf
push
push
lret
jo
xchg
sbb
xchg
int3
or
jne
out
mov
inc
or
in
subl
das
xchg
jnp
dec
les
ret
and
xor
fidivrl
adc
inc
data16
cwtl
loopne
dec
icebp
mov
verr
mov
and
mov
add
sbb
fs
adc
cmp
dec
and
cmp
loop
std
hlt
push
sahf
mov
shlb
mov
mov
outsl
mov
into
xchg
jae
pop
or
push
xor
cs
mov
mov
scas
push
mov
adc
fs
or
pop
sub
mov
xor
test
std
xor
jecxz
icebp
lods
hlt
cmpsl
push
dec
lahf
sbb
cli
imulb
pop
and
lea
je
lcall
jo
jle
in
mov
cwtl
dec
repz
sbbl
push
cmpsl
sub
rcrl
je
icebp
pop
push
rorb
nop
inc
insb
lahf
testb
sbb
imul
mov
mov
mov
or
inc
adc
pop
cltd
jb
adc
add
loop
jbe
pop
lods
jae
aad
stos
cmp
sbb
inc
daa
pop
xor
cmp
fdiv
adcb
scas
scas
add
mov
xchg
xchg
not
lahf
or
popa
test
and
jg
bound
pop
sbb
fidivrl
jmp
lret
inc
or
lods
pushf
xchg
push
shll
das
mov
test
jmp
addb
push
repnz
arpl
xchg
inc
jp
sub
xor
adc
jge
cld
jnp
mov
shr
push
push
negb
loopne
ret
push
inc
mov
jno
sub
test
out
std
and
test
mov
pop
ret
push
inc
mov
cmpsb
movsb
push
mov
mov
push
gs
jle
leave
pop
fwait
andb
hlt
sbb
mov
loope
adc
int
fnstenv
xor
fcom
lods
xchg
or
pop
lcall
sbb
sti
pop
ja
idivb
or
loopne
push
add
lret
das
aas
aam
out
mov
out
insb
xchg
gs
sub
pop
push
xchg
adcb
pushw
pop
xor
mov
scas
push
add
xlat
jle
mov
stos
mulb
inc
jno
xchg
sarb
iret
push
mov
dec
aaa
add
sub
jmp
and
mov
stos
jmp
mov
hlt
mov
and
ss
sub
or
sbb
leave
mov
add
shlb
mov
out
enter
fwait
popa
mov
mov
adc
out
test
xchg
in
or
pop
loope
cmp
xchg
mov
mov
insl
aam
adc
sub
mov
sbb
mov
pusha
ds
jmp
inc
and
jecxz,pt
mov
data16
loop
cmpsb
mov
jb
ljmp
mov
jmp
xor
je
out
cmpb
clc
mov
nop
add
jmp
pop
push
shr
js
lret
leave
add
and
add
lret
adc
push
aam
mov
cli
sarb
lret
lds
sti
fwait
and
add
or
pusha
repz
inc
into
add
pop
sahf
pop
sbb
aaa
cs
add
jne
in
push
xchg
add
jae
inc
fstps
sub
dec
pop
or
xchg
mov
es
shll
loope
pop
shr
and
loop
cltd
xchg
push
mov
sbb
das
cld
inc
and
stos
stc
mov
xor
sub
pop
pushf
test
sub
or
jp
jg
mov
mov
cmp
adc
cli
dec
pop
xor
sub
aad
xchg
xor
xor
mov
data16
xor
jae
out
lds
dec
test
xchg
out
mov
aas
inc
test
cmp
daa
xor
lock
xchg
mov
inc
add
out
arpl
out
push
jmp
js
xchg
pop
and
clc
into
fisttpll
inc
testl
inc
xchg
jmp
loope
fdivrp
xorl
out
aam
lods
push
rcll
out
push
jnp
pop
add
cltd
jnp
and
insl
inc
mov
cltd
pop
dec
outsl
or
or
cli
xchg
pop
xchg
adc
push
movlhps
stc
push
stos
mov
es
pop
cld
pop
xor
cwtl
pop
xor
stc
or
jo
inc
push
or
jl
cmpsl
pop
aaa
pop
or
mov
loope
mov
sub
fs
inc
jo
gs
hlt
pop
out
in
inc
pop
sbb
or
xchg
or
lret
ds
dec
pop
mov
push
sbb
nop
adcl
pop
inc
mov
stos
push
or
adcb
lods
xchg
mov
cli
roll
xor
jge
mov
pusha
punpcklbw
sahf
cmp
jg
lock
aaa
cmpsl
push
pop
fmuls
scas
rolb
fs
jno
cwtl
and
xchg
mov
leave
iret
adc
push
movb
and
mov
ret
scas
mov
adc
jne
stos
fucom
dec
xchg
rcr
adc
pop
lds
add
hlt
hlt
push
popa
int3
mull
adc
decb
je
sbb
ret
scas
loopne
ret
mov
fiaddl
xchg
jae
mov
fcoml
mov
into
dec
stos
or
movsl
idivl
addr16
jb
cmc
jle
mov
imul
mov
push
fbld
mov
jg
rcr
adc
rorl
xor
js,pn
in
shlb
cld
mov
mov
cmp
fcmovbe
ljmp
imul
out
dec
or
adc
in
xor
sbb
and
sub
jns,pt
mov
arpl
mov
adc
sub
push
decl
or
mov
or
jmp
dec
mov
sahf
cmp
adc
xor
dec
add
xchg
popa
and
push
aaa
cmp
dec
mov
pop
and
mov
hlt
mov
popf
sbb
leave
stc
sub
mov
rorb
xor
ss
test
adc
pop
pop
xchg
int
out
in
xchg
pop
sti
pop
test
jp
fwait
xor
mov
movsl
mov
dec
xor
enter
cs
mov
mov
repnz
rolb
lahf
jge
or
std
std
shll
jo
sub
cmp
ljmp
cmp
adc
sub
xor
dec
nop
cltd
inc
cmp
call
mov
xorb
sbb
lahf
inc
and
addr16
popf
jg
mov
push
dec
dec
test
nop
je
out
mov
pop
fisttpl
popf
or
cmpsl
pop
fnclex
fmuls
xor
stos
mov
in
and
sarl
inc
cs
aaa
mov
aad
les
mov
inc
test
aam
xor
dec
repz
push
loope
out
in
adc
std
arpl
data16
xchg
jecxz
xor
mov
int3
cwtl
sarl
push
sub
gs
lahf
sahf
xchg
jecxz
in
pop
sub
sahf
add
push
popf
push
aam
inc
push
mov
inc
dec
jmp
push
mov
fdivrs
mov
stos
add
int
es
cmp
out
add
dec
mov
shl
sbb
pop
pop
insb
cs
rorl
cmp
cltd
rorb
out
push
ret
or
mov
idiv
adc
cwtl
gs
mov
push
call
fcoml
push
incb
push
les
cld
jae
mov
aaa
scas
ds
push
sub
add
inc
aam
mov
inc
push
dec
jo
push
pop
fldt
jae
mov
adc
xchg
adc
rcrl
xor
out
sub
repnz
sub
or
icebp
ficomps
cmpl
mov
lcall
mov
dec
xlat
mov
std
lret
in
mov
out
test
shlb
test
push
jecxz
adc
out
movsb
jb
add
pop
cmc
insl
xlat
mov
shl
sbb
inc
sbb
cltd
bound
cs
sbb
insb
negl
xchg
lods
lods
outsb
fmull
xchg
cltd
ret
mov
cmpsb
addl
movl
jge
into
pop
inc
xlat
fs
inc
cld
and
and
iret
out
stc
or
aam
bnd
imull
stc
pop
or
mov
int3
push
aaa
movsb
in
add
add
pop
pop
push
mov
dec
out
mov
inc
jns
sub
sbb
js
lcall
xor
push
and
daa
cld
daa
lret
mov
scas
iret
pop
add
ja
cmp
inc
dec
sbb
xchg
or
cmp
sbb
sbb
mov
add
mov
lcall
cmp
flds
test
fwait
xchg
fiadds
mov
add
cli
mov
or
leave
inc
movsl
inc
sahf
dec
dec
stos
cmp
lret
push
push
jns
mov
dec
stc
loop
mov
dec
mov
cmp
mov
aam
inc
popa
jecxz
add
xorb
adc
and
aad
test
mov
cld
fildll
popa
lcall
nop
js
or
mov
mov
adc
subb
mov
pop
sahf
push
roll
push
out
jg
loop
in
xchg
mov
rcrb
jle
mov
pop
sbb
xlat
mov
sti
xchg
bnd
inc
ljmp
scas
scas
jge
xor
sbb
rclb
cli
xchg
adc
dec
out
mov
outsl
sbb
mov
pop
rorl
mov
mov
movsb
stc
mov
adc
arpl
cmp
push
std
push
pop
inc
xchg
ljmp
mov
sub
push
enter
mov
loope
mov
and
pop
xchg
sub
inc
jmp
mov
fwait
inc
lcall
sbb
call
cmp
test
testl
dec
pushf
mov
push
ror
lock
adc
mov
xchg
sahf
mov
scas
je
pop
repnz
divb
mov
call
je
cmp
push
pop
jb
mov
mov
or
inc
adcl
dec
adc
pop
vmovd
or
bound
jmp
out
inc
jl
movsl
cmpsl
std
aam
xchg
jo
pop
add
xchg
ja
mov
repz
ret
mov
add
cltd
cmpsb
jp
adc
fmulp
pop
mov
pushf
adc
and
pop
or
jo
jle
enter
adc
sti
ds
mov
out
xchg
icebp
push
nop
lcall
sub
bnd
inc
movl
inc
xchg
add
push
adc
jns
xchg
mov
xchg
fs
dec
pop
popa
test
adcb
cmp
push
fs
mov
lea
mov
xchg
sbb
sbb
push
adc
cmpsb
xlat
pop
mov
adc
stc
dec
scas
mov
push
mov
movsl
fbstp
cld
outsb
fs
mov
fs
lock
push
adc
xor
in
xor
ret
addr16
mov
aas
ret
out
and
out
and
jb
mov
adc
mov
not
inc
cwtl
out
pop
dec
test
push
xchg
aaa
dec
add
orl
stos
cmp
xlat
daa
mov
movsb
and
inc
mov
jbe
sbb
inc
inc
dec
iret
pop
rolb
jae
add
outsb
push
in
pop
sub
pop
dec
dec
cmp
decl
xchg
cmp
popf
enter
and
lcall
lea
adc
pop
add
pop
into
std
imul
mov
add
pusha
dec
incb
mov
cmc
or
icebp
push
pusha
push
jno
xchg
leave
imul
jmp
sbbl
stos
mov
testb
xor
jl
ret
jo
pop
hlt
xchg
cltd
aas
xor
inc
or
daa
bound
jle
in
gs
cmp
mov
pusha
pushf
mov
push
divl
test
xchg
rcrl
push
inc
add
js
or
movsl
pop
push
ffree
cmp
adc
daa
add
sbb
testl
std
stos
xchg
and
jl
and
shlb
jle
addr16
cli
pop
scas
fdivs
fists
out
dec
or
es
lock
cmp
sahf
shll
adc
inc
stc
mov
hlt
jb
push
lret
nop
xchg
cld
xor
lahf
repz
adc
cld
lcall
movsb
dec
movsb
mov
or
ljmp
push
xchg
jne
scas
xor
xchg
jbe
sbb
sub
stos
or
adc
jle
pop
movsb
fists
daa
mov
neg
mov
fxch
ret
cmp
loope
jp
or
outsl
shlb
pop
icebp
mov
es
cmpsb
mov
inc
jbe
out
push
cmp
mov
push
loope
insb
xor
pop
sbb
push
subl
std
stc
mov
cs
xor
xchg
sbb
push
jne
lods
xchg
dec
jnp
aaa
iret
dec
es
jno
xchg
xor
jns
aas
js
fs
pop
ficompl
vandnps
sub
cmc
sbb
mov
mov
insl
jge
in
push
jge
cmpsl
sahf
jl
push
jne
push
push
xchg
dec
sub
cltd
das
sub
sti
and
sbb
mov
sbb
add
push
sub
hlt
sub
mov
add
xor
rclb
pop
lods
xchg
cmp
inc
adc
push
clc
dec
fwait
pop
sti
aaa
pop
mov
sub
or
aas
sbb
les
lea
mov
je
add
and
loope
imul
dec
sub
jnp
inc
gs
sub
sub
xchg
cs
popf
or
jo
mov
lret
pop
mov
xorl
cld
lock
loopne
xor
popa
jno
sarb
pop
test
mov
and
bound
push
dec
int
adc
fcos
inc
int
xchg
add
and
shlb
sbb
cmp
mov
movsb
sbb
pop
rep
dec
cmp
mov
retw
imul
es
data16
or
enter
or
addr16
sbbl
bnd
bound
mov
xchg
std
mov
xor
popf
xchg
mov
lret
push
test
cmpsl
pop
mov
jne
sbb
add
dec
fsts
jecxz
insl
in
movsl
fwait
std
insl
inc
repz
into
and
sub
loopne
cmp
mov
pop
popf
rclb
xchg
lahf
mov
daa
call
cmp
subl
out
inc
push
adc
popf
scas
push
aas
xlat
andb
stc
jno
insl
ljmp
pop
pop
xchg
sbb
sub
in
ret
and
mov
push
xcrypt-cfb
cmpsl
arpl
lds
fnsave
jno
fwait
push
sbb
pop
mov
out
testl
lret
and
test
lock
loop
jl
jmp
addr16
sbb
fiadds
cli
mov
adc
shl
sbb
cmp
ret
loopne
int3
xchg
es
jno
or
stc
add
and
ja
imul
and
jmp
aam
adcb
adc
insl
leave
jle
mov
imull
xchg
cmp
das
jl
imul
cld
cmpsl
xchg
enter
out
das
cmc
jnp
and
cmp
and
aad
iret
test
adc
xchg
xchg
mov
sbb
xchg
or
lcall
mov
fdivrp
jle
test
frndint
fnstsw
cmc
std
mov
pop
pusha
pop
stos
dec
sbb
fdivs
dec
mov
mov
push
push
jmp
jle
jmp
xchg
test
fists
lcall
fidivl
push
cmpsl
sbb
mov
movsb
fs
cmp
pushf
pop
push
push
cs
mov
sub
push
cmp
pop
aas
icebp
push
pop
and
or
inc
out
mov
xchg
addb
insl
cli
jnp
int
mov
out
xor
loopne
adc
out
popf
dec
xchg
inc
mov
or
jl
lds
pop
rclb
ja
push
outsb
sub
mov
and
push
shl
adc
fldenv
imul
test
mov
sahf
cmc
push
andl
gs
fwait
outsb
cwtd
daa
int3
cmp
test
mov
push
aas
cltd
inc
ret
mov
out
sbb
mov
or
sti
int
lret
in
push
outsb
inc
jecxz
jg
jb
cltd
push
fcomps
test
out
jbe
push
jecxz
cmp
test
daa
scas
xor
mov
xchg
push
jne
add
add
sti
cmpsl
je
jle
jno
loopne
mov
push
in
iret
fcompl
mov
mov
into
add
inc
jmp
xor
nop
sub
inc
xchg
adc
rclb
scas
jmp
andl
and
mov
out
insl
pop
xchg
adc
mov
lock
jo
cltd
jg
aaa
enter
andb
xor
sub
mov
inc
js
inc
jnp
dec
ss
or
ja
mov
cmpsb
dec
adc
cmp
push
shrl
ja
ret
jnp
jg
mov
dec
mov
out
mov
cltd
fsubrs
xor
mov
or
jmp
imul
adc
and
loop
fs
cwtl
out
lret
push
sbb
and
out
frstor
xchg
add
inc
js
lock
ffree
push
cmp
ret
adc
outsb
jmp
and
gs
jge
jmp
icebp
xor
sub
cmp
scas
movsb
leave
mov
adc
icebp
popf
out
iret
push
and
and
fidivrl
cmp
xor
mov
cli
into
push
cld
push
sbb
rorl
sub
pop
std
sbb
dec
stos
push
adc
sub
fbld
sub
xor
es
clc
pop
jl
mul
iret
jp
add
daa
shlb
sub
xchg
fsubrs
jecxz
pusha
pop
xor
out
xchg
mov
rcrl
les
mov
dec
xorb
cmp
iret
out
or
ljmp
out
movsb
add
cmp
in
cmp
ficomps
repnz
jp
sti
push
mov
in
sbb
in
xchg
mov
add
mov
sarb
in
scas
sub
xlat
aaa
int3
cmp
test
fcoms
inc
xlat
jns
loope
rclb
and
jb
popf
movsb
mov
bound
nop
or
test
pop
ficomps
push
sbb
sbb
jbe
fldcw
sub
inc
test
fsqrt
mov
insb
add
repz
sbb
subl
xchg
cmpl
outsl
cmp
faddl
dec
pop
xor
movsl
lds
stos
ljmp
in
adc
sbb
mov
repnz
imul
repnz
add
push
scas
lret
out
jne
and
sbb
xor
mov
sub
adc
adc
inc
push
add
loope
ret
int3
daa
mov
cmp
movsl
push
mov
lods
mov
jp
mov
mov
mov
in
xchg
or
add
in
inc
lret
das
or
in
cld
jb
cmp
int3
xor
xchg
mov
dec
aad
mov
arpl
lods
xor
pop
out
stos
inc
adcl
fsts
stos
and
daa
pusha
jge
mov
adc
add
outsl
imul
mov
xchg
pusha
shr
test
cmp
fcoml
sub
cmp
ja
jae
pop
mov
push
inc
clc
insl
ds
sbb
les
faddl
test
jo
addr16
or
or
mov
mov
addb
xchg
adc
ret
and
jl
adc
ljmp
outsb
push
sarb
fwait
xchg
rorb
mov
stos
adc
dec
pop
nop
sbb
pop
adc
test
pop
inc
icebp
stos
mov
inc
adc
js
pop
mov
xchg
xchg
adc
mov
inc
dec
jbe
mov
insl
arpl
cmp
scas
push
add
daa
roll
lret
mov
mov
lods
out
gs
mov
and
inc
xchg
stos
cmp
xchg
mov
push
cmp
iret
pop
inc
cwtl
mov
scas
push
jmp
mov
lret
xor
sbb
pop
push
xor
push
jge
rolb
int
xchg
test
jne
stc
aad
adc
push
push
mov
idivb
dec
mov
aad
das
jmp
xchg
mov
das
test
pop
jae
shl
cli
or
jbe
lret
enter
jl
fsubrl
xchg
fidivs
cmc
xor
sarb
lds
jnp
mov
xor
push
mov
mov
aad
xor
out
jl
push
popf
adcl
pop
jle
mov
jle
in
mov
imul
and
test
fwait
adc
pushf
ret
mov
mov
ss
push
outsl
jge
sbb
movsb
into
arpl
push
or
test
jp
das
push
mov
ficoms
jno
fbstp
inc
subb
jp
adc
mov
pop
mov
cmpsb
dec
lea
ret
lret
js
dec
cmp
stc
std
ss
int3
push
dec
xlat
pop
adc
shlb
and
sbb
jl
jg
add
insl
ret
pop
shlb
xchg
pop
mov
adc
cmp
fstl
pop
cmpb
mov
push
or
jge
or
fstps
push
or
sub
jnp
mov
mov
adc
xchg
jb
adc
push
sub
xor
xchg
xor
adc
orb
pop
push
pop
imul
push
mov
fadds
and
xchg
popf
sbbb
neg
inc
sahf
idivl
sub
mov
dec
lods
sbb
andl
mov
in
fisubrl
lcall
subb
daa
sbb
cs
xor
and
mov
mov
outsl
ret
pop
cs
jmp
sub
adc
push
imul
xchg
jns
push
out
sub
cmp
inc
xchg
dec
adc
or
test
add
addb
pop
xor
sub
dec
stc
pop
daa
xor
or
xchg
jb
cwtl
je
push
push
jno
jns
xchg
orb
call
xor
aas
dec
fcomps
jmp
loope
lea
push
ds
rcrl
ret
cmpl
arpl
scas
scas
xchg
or
icebp
les
or
dec
sbb
jecxz
mov
push
test
shll
imul
dec
xor
xchg
fs
sahf
jae
addr16
decb
in
data16
or
jo
gs
cmpsl
rorb
hlt
jmp
outsl
and
rcrl
lahf
sbb
es
aas
xor
push
push
rcll
ds
aas
mov
and
loop
pop
std
mov
insb
iret
ds
cmpsb
sbb
mov
imul
mov
add
mov
imul
aad
inc
aad
ja
or
xor
pop
loop
fwait
xchg
arpl
cmp
adc
mov
or
movsb
dec
imul
adcb
out
inc
test
jae
adc
es
scas
jg
jle
inc
lret
xorb
loop
xchg
mov
pop
cmp
jmp
jmp
movsb
iret
jo
dec
mov
pop
adc
pop
fstpl
xchg
sbb
jp
fldenv
jl
decb
mov
cmpsl
pop
mov
popf
scas
popf
jp
add
mov
cmp
or
mov
add
mov
push
rcrb
movsb
dec
cmp
push
daa
push
xor
js
push
mov
in
pop
je
mov
pop
das
add
lret
jne
repz
push
popa
dec
xchg
repnz
mov
ret
or
xor
fwait
cmp
cmp
out
jmp
mov
sub
imul
xchg
ret
dec
dec
clc
adc
xor
mov
mov
movsb
ret
cmpsb
outsl
xlat
test
mov
icebp
xor
mov
lahf
imul
cs
sub
sar
fwait
aad
pop
adc
cli
xchg
ds
lock
mov
push
inc
mov
testl
mov
aaa
std
jl
popa
pop
and
imul
dec
test
pop
icebp
mov
out
adc
xlat
lods
jb
ja
imul
in
mov
mov
cmp
scas
pop
or
gs
sbbl
sub
jle
jno
in
push
xchg
xchg
adc
xchg
les
mov
jl
rcrl
aas
shll
pop
mov
ltr
pop
cld
je
clc
mov
hlt
in
cmc
jp
mov
pop
enter
inc
cmc
repz
and
dec
sahf
fisttpll
arpl
pusha
push
jp
out
jnp
fistl
sub
fwait
jo
cltd
push
mov
pop
xor
mov
add
test
lods
jb
or
jecxz
mov
and
cmc
sub
cmpsb
mov
lcall
mov
push
call
push
and
mov
outsl
or
dec
mov
xchg
cmp
cmpsl
les
push
sub
push
popf
sbb
inc
push
sub
cmpsl
xchg
adc
aam
repnz
adc
into
clc
mov
cmpsl
jmp
fcoml
sub
pushf
pop
pop
push
dec
in
imul
mov
cmpsl
inc
lock
lods
sbb
adc
adc
sahf
xchg
inc
loope
adc
aaa
dec
inc
out
xor
je
rcr
das
or
pop
mov
fwait
iret
xlat
aaa
std
or
sbb
inc
jp
shl
xchg
test
mov
mov
cwtl
mov
mov
xor
scas
inc
or
mov
fs
ja
jo
dec
divb
mov
xor
pop
push
faddp
shrl
arpl
and
out
inc
mov
jnp
sahf
adc
pop
out
adc
xor
idiv
mov
adc
test
aaa
inc
aad
or
dec
or
cli
scas
xchg
sbbl
add
mov
mov
xor
jo
xchg
into
xchg
mov
pusha
mov
lahf
cmp
mov
xchg
ds
jo
scas
xlat
mov
jae
dec
andb
mov
mov
cmpsb
push
mov
ror
mov
scas
fsts
sbb
push
mov
inc
test
adc
loope
jg
inc
mov
jle
xchg
push
push
inc
adc
fiadds
jns
sbb
mov
push
in
cmp
repnz
mov
repz
sub
outsl
cli
jg
fnstsw
call
mov
in
mov
fbld
hlt
lods
cli
pop
jno
cld
cmp
pop
js
mov
inc
and
aad
out
pop
sub
inc
lea
dec
shlb
insb
sti
mov
mov
daa
pusha
mov
cli
test
adc
cmp
test
loope
xor
mov
inc
sbb
stos
repnz
sar
ss
shrb
cmp
bound
and
ret
lahf
lret
adc
adc
int
rcll
mov
cmp
jecxz
fmuls
in
inc
and
jg
fidivrl
clc
ret
mov
lahf
subl
je
aas
lcall
xchg
sub
xchg
jbe
cwtl
fstps
jne
sahf
mov
test
sbbb
sbb
hlt
sbb
push
test
rolb
test
test
pop
jmp
push
mulb
pop
outsl
add
inc
xlat
sti
lahf
fucomi
bound
addr16
fstpl
sbbb
and
cmpsb
int
or
inc
mov
jle
popa
sbb
cli
xchg
sbb
inc
inc
cli
ret
daa
push
sbb
dec
orb
movsb
mov
lds
rol
adc
or
dec
add
push
xchg
cld
out
sub
cltd
sub
sahf
sub
movsb
sbb
into
mov
mov
in
in
roll
jb
mov
cwtl
hlt
sarl
dec
hlt
cmp
mov
roll
movsb
std
bound
into
xor
rcrb
push
mov
lea
lock
mov
push
jecxz
cwtl
rcl
cmpsl
inc
and
icebp
cmp
mov
and
gs
jge
shll
insl
lret
daa
or
insl
mov
pushf
loope
dec
ret
sbb
adc
scas
mov
adcb
push
cmc
js
test
inc
lahf
mov
sbb
inc
sti
mov
cli
sbbb
jg
jecxz
lret
xchg
rorb
inc
jge
cwtl
pop
sbb
xor
pop
movsl
pop
lods
cmp
jge
push
loopne
jns
push
sub
adc
mov
test
adc
out
inc
push
and
lret
dec
dec
ja
lock
std
popa
or
push
iret
orl
inc
mov
add
fs
jae
inc
or
outsb
cs
pop
adc
mov
pop
dec
push
sbb
insl
aas
lea
inc
pop
mov
jmp
add
xor
mov
or
and
inc
cmp
cmp
mov
or
loopne
add
xchg
inc
xchg
loopne
test
shrb
sub
negb
or
or
movsl
cltd
jmp
arpl
sbb
imul
jecxz
clc
in
jae
testl
cmp
iret
repz
sub
pop
js
xor
hlt
sbb
inc
movsb
xor
xor
and
in
push
ds
dec
cli
shrb
cmp
in
mov
push
std
cmpsl
jle
pop
imul
lods
rol
mov
fldcw
xchg
push
pusha
clc
out
inc
test
pop
pop
es
std
addb
adcl
loop
cld
push
je
pop
mov
dec
mov
aas
xchg
fucomp
and
and
jmp
je
or
adc
popa
sub
mov
in
les
mov
call
mov
jae
loop
jns
and
ret
mov
lock
arpl
into
mov
jbe
sti
test
or
add
fsubr
and
xor
dec
adc
loope
data16
xchg
mov
outsb
int
aas
mov
ret
push
ljmp
cmpsl
int3
andl
push
mov
icebp
mov
orb
in
loop
or
jbe
push
cwtl
add
dec
in
jge
add
lock
sub
xchg
dec
enter
and
fldt
jno
loop
rorb
pop
mov
stc
dec
and
and
cmp
cmpsb
std
arpl
push
pop
sbb
out
push
lea
mov
fmulp
imul
push
dec
mov
popa
notl
dec
pusha
pushf
push
push
push
call
xchg
stc
hlt
jnp
fdivrl
fadds
inc
pop
ret
xor
mov
push
fwait
jnp
or
cli
repnz
adc
enter
mov
lret
mov
movsl
push
jmp
mov
pop
call
fldt
mov
mov
out
repnz
mov
lret
mov
lcall
sub
cs
mov
mov
jecxz
add
addl
pusha
mov
sbb
loope
test
rolb
mov
faddl
add
js
insl
mov
jno
cmp
jb
xchg
mov
idivb
lcall
or
gs
lds
rclb
aas
fadds
mov
push
mov
xchg
out
mov
imulb
jb
jmp
mov
stos
test
test
loope
and
xor
enter
mov
es
adc
dec
sub
fcmovu
cmc
insl
dec
subl
or
pop
xchg
ljmp
adc
std
sub
xchg
mov
in
aas
ret
mov
lods
outsb
daa
in
sbb
xchg
sub
adc
rcl
add
hlt
loope
mov
cmp
xor
xchg
dec
mov
mov
push
sbb
aaa
loop
or
dec
call
das
std
or
jp
aaa
shr
loope
xchg
jno
jge
ret
in
sub
out
out
mov
xchg
outsl
scas
sub
pop
mov
pop
xchg
pop
mov
pop
mov
repnz
inc
cmp
fidivl
insb
adc
jo
xor
ret
iret
cli
ficomps
fidivrs
or
incb
jbe
inc
dec
mov
jae
inc
dec
outsl
xor
aam
push
je
cmpsl
test
stc
aad
pop
cmp
cmp
scas
ljmp
mov
roll
inc
addr16
mov
js
cmp
xchg
clc
push
arpl
pushf
sub
loope
xor
das
ret
pop
cmpsl
dec
aaa
jg
xor
sbb
mov
xor
sub
adc
xchg
lret
loope
das
push
inc
sbb
push
mov
leave
jbe
pushf
lahf
adc
test
push
les
lea
adc
mov
and
jns
lea
rorl
and
fcomps
add
xor
sahf
inc
inc
add
idivl
cmc
fidivs
jle
mov
imul
icebp
xchg
movsb
dec
add
jbe
addr16
cmp
push
pusha
call
dec
lea
lods
push
mov
dec
push
xor
leavew
int
lods
xor
mov
jmp
mov
arpl
in
dec
inc
in
xchg
and
in
negb
mov
push
rorl
dec
out
negb
cmp
add
das
xor
sub
scas
aaa
adc
jne
jmp
mov
sbb
shll
sbb
in
outsb
jae
xor
enter
mov
in
jp
ret
xchg
imul
or
push
cmp
push
sbb
xor
adc
lret
aam
ss
loopne
jle
scas
mov
sub
jle
faddl
imul
in
ja
jmp
mov
lea
in
lock
fstps
sti
repnz
cld
adc
lds
sub
mulb
in
test
aam
or
dec
mov
mov
stc
rclb
addr16
jmp
in
inc
outsl
pop
sbb
mov
out
je
push
push
sub
repnz
imul
test
in
iret
stos
jp
dec
sbb
dec
mov
mov
cmc
mov
xchg
jno
ja
sub
mov
push
xchg
or
mov
xchg
sti
lahf
push
jl
div
les
inc
inc
xlat
inc
jmp
sahf
lcall
jg
testb
xor
pop
jbe
test
mov
fildll
inc
xor
ljmp
sub
mov
jle
iret
dec
scas
pop
push
mov
pushl
insb
loope
cmp
mov
movsb
mov
pop
lods
je
fldl
cmp
inc
stc
popa
cmpsb
fs
sarb
daa
fldenv
sbb
stos
lock
jp
fdiv
pusha
sbb
lcall
and
sub
fcoml
cmpb
fnstsw
add
xor
arpl
and
je
ljmp
mov
ret
adc
sub
dec
sbb
ret
leave
ja
and
cmpsb
das
cld
dec
pop
not
fisttpl
sub
adcb
xchg
sbb
mov
or
iret
pop
enter
imul
daa
pop
out
mov
mov
movsbl
loopne
call
mov
hlt
inc
out
pop
and
xchg
mov
aam
fs
jle
fstps
out
pop
hlt
xchg
adc
lcall
sub
mov
xor
imul
inc
push
mov
or
inc
test
add
das
pop
lods
sub
mov
pusha
adc
dec
mov
pop
or
fdivs
arpl
aad
pop
lret
adc
pop
mov
dec
lea
pop
or
jns
and
in
outsl
enter
xchg
mov
mov
sbb
repnz
repnz
lods
inc
ret
and
pop
clc
lcall
ret
leave
jno
xchg
and
cmp
xchg
push
xchg
mov
lea
xchg
leave
pop
cwtl
movsl
and
or
iret
js
rcll
push
popa
popa
faddp
idivb
dec
mov
ljmp
cltd
fptan
sbb
into
and
lret
test
mov
dec
cs
ds
jmp
adc
xchg
ja
sub
mov
xor
jne
mov
cmp
jbe
sub
es
mov
mov
mov
imul
push
in
add
mov
ja
and
pop
mov
aas
push
fimuls
loopne
in
decl
stc
nop
mov
lock
cmp
pushf
test
arpl
xchg
cmpsl
shrb
cld
mov
out
inc
push
push
test
repz
out
cmpsl
in
mov
pop
dec
int3
xchg
push
lcall
xor
push
jge
lret
sbb
je
cs
scas
es
test
pusha
mov
loopne
fdivrs
sti
loope
imul
ret
mov
dec
adc
adc
fdivrs
stc
jle
iret
jns
cld
mov
jmp
fmul
sbb
add
mov
or
cmp
rcrb
adc
imul
and
aam
sbb
cmp
imul
daa
in
subl
jecxz
cmp
jb
cmpsl
outsb
and
fsubs
sub
js
xor
xchg
adc
jmp
mov
es
xchg
xchg
lock
test
add
cmp
mov
sbb
jns
adc
repnz
sbb
xor
jecxz
cmp
adc
and
jl
mov
xlat
xchg
lods
in
pop
jno
cmp
cmp
mov
fldl
cld
inc
pop
and
xchg
push
xchg
fdivrs
loop
sub
ret
fs
fidivrl
enter
cmp
inc
loope
dec
out
insb
and
xchg
test
test
nop
adc
dec
mov
add
int
cmp
daa
mov
mov
adc
push
jno
test
lds
popa
mov
jo
adc
lea
inc
movsl
xchg
mov
pusha
imul
push
scas
cmp
sub
lcall
add
adc
inc
push
add
faddl
push
mov
scas
jns
ffree
bound
popa
into
aaa
incl
addl
or
mov
pop
xchg
mov
aaa
adc
mov
ljmp
or
mov
mov
push
imul
pop
jae
add
repnz
mov
leave
push
mov
pop
jnp
mov
addb
dec
lcall
xor
test
enter
xor
jns
adc
xchg
sub
pop
sub
stos
lods
inc
pusha
ds
fwait
cmpsl
xchg
lods
mov
test
shlb
xchg
inc
les
loop
cmpsb
sbbl
sub
fs
or
and
cltd
xchg
inc
fstp
mov
mov
sub
adc
inc
push
dec
jo
imul
in
dec
and
cmp
sub
push
cmp
lret
sarb
cmp
adc
rcrl
sub
cmp
inc
out
jnp
push
rcrl
xor
stos
movl
adc
in
int3
push
sub
ja
mov
popf
sub
lcall
add
jge
add
mov
loop
lods
adc
push
imul
scas
sbb
xchg
mov
mov
call
arpl
add
shrb
push
and
or
add
movsl
mov
cmp
pushf
dec
inc
push
aaa
das
ret
jp
pop
dec
sbb
push
subb
mov
xchg
sahf
add
xor
mov
popf
add
inc
cmp
jbe
iret
shll
out
or
mov
fdiv
cs
lods
add
es
je
mov
sti
repnz
xrelease
ja
or
cmpsb
xchg
xchg
fdivrl
orl
push
ret
add
in
insl
jmp
mov
xor
popa
loopne
and
int3
or
out
dec
enter
mov
in
mov
idivl
push
xor
sbb
add
and
not
sub
cmp
jp
imul
outsb
mov
lahf
fdivrp
lret
push
pop
in
xchg
rcrl
mov
out
sti
cmp
aaa
adc
mov
je
aam
js
fbld
xor
mov
out
xor
test
pop
inc
xor
mov
xchg
mov
shlb
and
stc
dec
mov
push
out
dec
dec
xlat
sti
outsl
adc
fisubrl
pop
lods
fs
mov
cmpb
mov
daa
popa
xchg
add
stos
push
lahf
pop
outsl
pop
cld
rcll
add
push
mov
pusha
push
lret
xor
xlat
mov
sbb
adc
and
or
rcl
mov
test
cmp
adcb
xchg
icebp
in
jg
imul
repnz
lock
xchg
popf
mov
mov
push
dec
jnp
mov
jns
scas
and
jl
lahf
or
fs
sbb
test
nop
setge
in
imul
in
mov
sbb
xor
daa
int3
dec
push
add
pop
add
ljmp
in
pop
lahf
xor
push
imul
js
dec
xchg
out
sbb
jae
push
rcrb
stos
je
cmp
xchg
or
push
icebp
das
sbb
mov
cmp
cmp
jb
hlt
cmp
mov
rclb
mov
test
les
cmp
out
cltd
in
imulb
push
cmp
std
xor
and
dec
jmp
sti
add
movsl
jno
sbb
aaa
scas
push
dec
mov
jp
xor
mov
mov
and
cli
pushl
xchg
or
lods
push
enter
mov
cmp
call
nop
scas
or
pop
push
jmp
pop
pop
push
mov
mov
or
jp
aaa
lret
addr16
shll
mov
jns
add
popf
or
andl
popa
mov
sti
push
or
ficoml
mov
out
test
lcall
cli
and
sub
dec
mov
mov
lret
adc
or
jnp
sub
and
lods
scas
repnz
jl
rol
and
aas
rcll
inc
aas
push
fcoms
adc
sahf
xchg
out
inc
aad
icebp
jae
nop
inc
movsl
or
xchg
fstpl
sbb
test
and
insl
pop
int3
or
ficomps
out
mov
fmuls
dec
les
add
sahf
jae
xchg
mov
dec
jns
pushf
jg
cmp
out
and
filds
mov
lods
ret
jnp
add
mov
repnz
fprem
sub
adc
and
ljmp
lret
dec
hlt
scas
or
cmp
cwtl
cmpsl
cmp
mov
fimuls
fimuls
sbb
daa
mov
imul
and
and
out
scas
jle
xchg
mov
push
cmc
in
cmp
stos
lds
or
xchg
popf
or
mov
imul
mov
xchg
aam
sub
int
shll
sub
icebp
xor
jne
sub
add
cmp
loopne
and
scas
lea
pop
shlb
xor
mov
jmp
lret
push
inc
xchg
sar
out
pop
into
sbb
lods
lds
dec
das
add
cltd
push
outsb
cmp
push
lret
ja
movsl
mov
stos
add
xor
push
shll
dec
cmpsb
cld
loopne
push
shl
mov
pop
fs
loopne
aam
xor
sbb
sub
pushf
and
arpl
pop
inc
adc
test
adc
stos
cmp
scas
lahf
pop
cmpsb
inc
pop
pusha
sbb
push
arpl
sbb
jl
inc
dec
fidivrs
dec
sbb
xchg
push
shl
mov
jno
movsl
dec
lock
mov
das
lock
sbbl
test
inc
push
sub
push
xchg
nop
popf
std
arpl
ja
xor
fimuls
frstor
pop
xlat
scas
xor
add
and
xor
sbb
out
scas
ds
xor
and
lock
out
xchg
fsubs
adc
ret
xor
cmpb
dec
js
into
movsb
aas
jp
inc
xor
int
pop
cs
or
pop
into
addr16
fldt
cmpsb
mov
in
xor
cmc
icebp
pushf
mov
fsubrs
pop
lret
sub
dec
xor
push
push
mov
pop
shlb
idiv
cmp
pop
mov
pushf
dec
cmc
push
movsl
jbe
lret
push
jns
cld
and
movsb
hlt
pusha
xchg
mov
adc
sub
cld
xor
inc
and
push
sub
out
out
xor
into
je
repz
lods
nop
xor
cmp
inc
mov
push
data16
daa
fldl2t
jp
adc
js
fists
imul
fisttpl
xchg
add
subl
or
mov
mov
inc
mov
aaa
addl
push
push
fsts
and
fwait
pop
pop
and
xchg
rolb
cmp
loopne
movsl
fstps
mov
loopne
ret
adc
or
adc
clc
mov
sti
mov
loop
ljmp
test
jbe
jmp
push
fimuls
in
mov
inc
cld
out
rclb
and
cmpsb
and
xor
push
push
adc
mov
cmp
jecxz
out
mov
data16
push
cmpb
lahf
jl
cmp
daa
mov
mov
cmp
lea
arpl
inc
push
insb
fistl
dec
and
add
rclb
inc
add
push
sbb
jge
pop
jnp
aas
idiv
cmc
adc
pop
movsb
push
cld
push
call
and
cmp
sub
movl
xchg
mov
bound
mov
mov
xlat
mov
arpl
mov
jnp
adc
jmp
hlt
aad
mov
jbe
test
fucomp
out
movsb
mov
std
popa
inc
xlat
push
popf
jmp
setle
push
ss
push
fldl
cmc
pop
nop
pop
fildll
icebp
cli
mov
lock
in
fisttpl
jb
bound
xor
push
inc
push
out
and
pop
sti
pop
xchg
push
enter
dec
and
inc
in
pop
sbb
dec
in
xchg
inc
mov
xchg
imul
fistps
push
push
lods
movsl
add
xor
call
jb
rorl
pop
lods
test
in
mov
mov
push
mov
or
jne
aam
jp
clc
add
inc
and
push
and
and
out
testl
ficompl
jl
sub
inc
fidivs
out
lahf
mov
inc
daa
scas
outsb
jnp
jns
outsb
pushf
leave
jl
jae
into
divb
stos
test
inc
imul
lods
cwtl
xor
jg
cld
jmp
push
arpl
hlt
sarb
mov
xor
test
cmp
xlat
out
aad
orb
fsubrl
mov
cwtl
stc
push
dec
pop
jo
cmp
rolb
mov
pop
cwtl
mov
decb
sub
xchg
insb
push
jg
xor
inc
push
push
push
imul
test
mov
push
insb
out
sub
dec
xchg
add
subl
mov
and
ficomps
jae
stos
scas
js
jae
inc
push
clc
fwait
rorl
mov
pop
lds
inc
pop
mov
clc
pushl
xor
push
mov
or
cmp
fdivrs
call
or
push
in
andb
clc
add
cli
push
shrb
sub
jmp
lea
adc
ficoml
jmp
jb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
jmp
sbb
fs
clc
out
int
xor
outsl
in
arpl
dec
sub
sbb
sbb
out
inc
lret
repz
pop
mov
push
inc
push
cmpsb
push
add
dec
cmp
in
lahf
std
push
out
cmp
outsb
push
xchg
pop
es
mov
push
pop
dec
and
cmc
ret
shrb
inc
xor
out
popf
push
nop
pop
or
pop
addb
dec
popa
and
push
add
call
xchg
jmp
cmp
and
push
shrb
repnz
jnp
adc
mov
cmpsb
sbb
xchg
inc
jge
push
sbb
xlat
mov
sahf
and
stos
ret
jne
pop
cmp
xor
leave
js
add
fcoms
pop
xor
and
cmc
test
lret
jnp
in
es
jl
jnp
and
in
loope
xor
dec
cmpsb
popa
xchg
mov
cld
sub
call
mov
adc
xchg
lret
cs
rolb
and
sbb
es
test
cmp
lds
into
out
or
aas
and
in
rorb
jno
xlat
jmp
aaa
adc
andb
outsb
movsl
jp
mov
fiaddl
daa
pop
add
lret
jl
mov
lret
lahf
sahf
call
pushf
cld
add
add
add
inc
xchg
add
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
aad
add
