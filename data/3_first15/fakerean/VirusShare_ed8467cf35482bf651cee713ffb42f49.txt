sbb
add
mov
pushf
mov
add
mov
xor
movsb
lret
in
outsb
pop
jecxz
mov
adc
xchg
mov
insb
push
push
and
int
rclb
cmp
in
or
push
popw
cmp
in
dec
sti
repnz
loopne
xchg
inc
mov
fcompl
cwtl
xor
pop
mov
jne
mov
mov
js
test
js
xor
xorl
movsl
push
aad
xor
lock
movsb
mov
loope
cmpsl
sub
and
cld
cmc
loope
imul
lret
pushf
ret
fwait
mov
add
fistl
jg
adc
inc
ja
rcrb
aaa
pop
aaa
push
in
sub
mov
dec
rorb
jp
mov
les
pop
mov
mov
test
push
pop
adc
pusha
pop
pop
mov
mov
jle
sub
xchg
xchg
divl
stc
mov
lock
pop
outsb
aas
cmpsb
lahf
xchg
jl
test
or
and
enter
xor
in
arpl
pop
add
iret
in
cwtl
fdiv
fwait
test
mov
cmp
inc
lahf
push
add
jle
mov
fistps
fidivrs
lea
aaa
bound
dec
mov
sbbl
mov
mov
xchg
test
push
das
out
shrl
push
push
pop
fisubrs
test
pop
pop
and
movsb
pop
and
xorb
lcall
push
in
mov
icebp
xchg
and
fistl
nop
or
pop
mov
mov
xchg
cmp
xor
sbb
push
in
mov
leave
push
testl
stos
mov
lret
icebp
jle
sub
inc
insb
push
mov
push
movsb
mov
mov
aaa
jecxz
cli
dec
cmp
das
xorb
std
scas
frstor
sub
sub
mov
je
dec
decl
mov
nop
push
mov
lock
hlt
insb
inc
imul
daa
ljmp
lahf
imul
sub
jns
mov
mov
mov
cmp
or
leave
cmp
lock
jno
mov
dec
into
dec
out
mov
nop
ja
mov
fimull
jnp
neg
popa
loope
sbb
insb
jge
test
loop
mov
fcom
cmp
sahf
pop
in
inc
mov
mov
pop
xchg
pop
rol
or
ja
mov
mov
mov
mov
lock
mov
ja
add
in
sbb
jp
sahf
cmp
and
inc
loop
lods
in
mov
dec
fwait
daa
push
ret
aad
ret
add
loop
pop
sahf
movsb
cmp
and
dec
dec
dec
divl
ror
mov
or
aam
test
nop
jl
lcallw
pop
jg
pop
push
fisubrs
push
jns
xchg
xor
xor
fsubs
test
and
mov
inc
push
stos
shll
pop
dec
movsb
fmull
adc
ret
and
add
jle
imul
lahf
pushf
je
mov
mov
xor
mov
popa
dec
popf
dec
mov
cmp
fsubr
inc
imul
xchg
vcvtpd2dq
adc
stos
insl
leave
pop
cwtl
test
cmp
psubusb
cs
pop
leave
loopne
das
mov
out
lods
adcb
call
mov
and
sbb
pop
inc
mov
sbb
pop
push
mov
pop
mov
mov
xchg
fiaddl
out
mov
sahf
pushf
pop
xchg
adc
adc
adc
dec
scas
hlt
mov
push
icebp
mov
int
xchg
xchg
call
add
ss
test
cs
das
dec
ds
loopne
adc
mov
xbegin
int
inc
shl
sbb
outsb
jae
or
test
roll
dec
insb
sub
cli
dec
sub
mov
out
dec
mov
push
mov
xor
sbb
repz
jmp
xchg
jmp
cs
pop
gs
pop
cmp
ja
jno
fcoml
jns
push
cltd
push
inc
cli
xchg
xor
jae
dec
xlat
mov
scas
dec
mov
int3
lahf
shlb
mov
lds
xor
mov
push
push
pop
add
mov
int
mov
xor
add
sarb
mov
cmp
mov
pop
pop
movsl
jmp
jl
xlat
mov
xchg
pop
in
test
inc
mov
push
jp
lret
jecxz
push
das
in
sbbb
cltd
jne
jle
incl
fildl
sub
leave
xchg
push
int
je
adc
sar
push
andb
lret
fwait
int
shrb
ficoml
push
or
cs
inc
fisubrl
lods
sub
xor
jb
sbb
xchg
enter
shll
inc
jne
xor
sub
xchg
and
in
or
xor
lods
lret
clc
or
in
sarb
lcall
push
int
xor
xchg
lret
mov
cli
jmp
jg
or
enter
add
jmp
sti
xchg
movsb
pop
pop
cmpsl
aam
leave
mov
test
dec
aaa
int3
mov
push
xchg
cwtl
adc
fwait
std
push
cmpsb
divb
pushf
in
sub
std
and
ffreep
aas
cmp
stos
adc
je
pop
sbb
mov
movsb
dec
es
imul
iret
ds
push
popa
cmp
inc
inc
addr16
mov
inc
mov
xor
jecxz
es
dec
das
lods
lcall
and
cld
pop
ds
mov
xor
insl
shl
dec
lds
fimull
pop
sub
inc
xchg
icebp
ja
mov
loope
mov
adc
fisubrl
add
call
sub
cld
cmp
add
mov
xor
cmp
outsl
jmp
les
cmp
pop
and
fucomi
lret
loop
pop
enter
and
cli
insl
cmp
test
int3
mov
mov
cmp
js
push
pushf
daa
lods
xor
ja
cmp
pusha
loope
add
lea
mov
in
pop
insb
call
xchg
incb
xchg
imul
jns
lea
in
inc
sbb
sub
jp
enter
hlt
sahf
mov
test
aad
cmpsb
xchg
mov
push
jle
mov
dec
inc
or
shll
sbb
scas
cmp
sub
xchg
mov
mov
sub
popa
adc
outsb
dec
ljmp
mov
mov
dec
mov
orb
push
xchg
mov
inc
lcall
ret
dec
out
sbb
test
add
fimuls
fistpl
insl
ss
xor
xor
cmpsb
stos
xchg
xchg
rorl
and
mov
cmp
jecxz
in
das
inc
lock
iret
xlat
pop
lret
mov
js
mov
stc
jae
dec
out
loop
sub
into
daa
or
push
xchg
arpl
add
mov
add
orb
fcom
sbb
jg
divl
jnp
sahf
movsb
or
xchg
push
les
test
xor
inc
movl
sbb
pop
jb
loopne
inc
out
das
and
fs
insb
add
pusha
jp
xchg
and
insb
mov
adc
popf
in
bound
mov
push
aam
push
lods
cmpsl
jnp
add
enter
mov
aaa
rol
push
dec
xor
ljmp
adc
pop
pusha
jnp
mov
mov
je
and
mov
lcall
inc
inc
leave
leave
jae
cmp
inc
dec
lret
mov
mov
pop
mov
in
sbb
xchg
sbb
push
inc
pop
mov
mov
push
fisubrl
and
test
cmp
test
mov
repnz
inc
push
push
lahf
repz
push
enter
mov
call
pop
or
jmp
xor
cltd
mov
add
push
ja
gs
das
pop
lret
dec
sub
movsb
or
mov
pusha
sbb
fsts
pop
inc
mov
cmp
xchg
scas
jg
testl
idivb
pop
pop
fidivrs
std
pop
or
pop
addr16
add
insb
cmp
jbe
mov
test
add
cmp
mov
mov
add
aaa
jl
xchg
rolb
inc
adc
lret
fsubl
push
mov
into
sub
addr16
cs
dec
test
mov
dec
push
js
or
sahf
jle
add
push
sub
es
sub
pop
push
xchg
arpl
push
mov
jg
jecxz
data16
or
jns
jb
fwait
pop
pop
or
adc
pop
jmp
addl
pop
jl
push
cmp
push
mov
int3
add
mov
xchg
sbb
ja
bound
mov
or
or
dec
fcmovb
push
and
or
push
xchg
les
mov
add
shl
jp
pop
dec
mov
ror
test
jmp
dec
and
xchg
testl
mov
fistl
pop
jmp
jmp
xchg
out
shlb
jecxz
xchg
sub
push
movsb
push
das
xchg
xchg
fwait
xcrypt-cfb
cmpsl
out
inc
movsl
cmc
cmpsb
addr16
mov
or
adc
fmuls
out
enter
pop
sbb
adc
aaa
ljmp
aad
leave
mov
jecxz
sbb
imul
loop
jecxz
iret
loopne
ret
clc
pop
mov
push
sub
loop
push
cltd
out
nop/reserved
pop
xchg
sbb
dec
xchg
adc
cmp
cmp
mov
jecxz
leave
sarb
pop
cmp
jno
jne
pop
icebp
pop
movsl
xchg
xchg
dec
and
xchg
popf
test
xor
fwait
out
gs
subl
add
mov
adcb
das
jno
das
and
mov
rcr
and
icebp
leave
xor
outsb
and
sub
hlt
push
inc
adc
fsubl
mov
aad
sti
adc
rcr
int3
aas
lods
daa
jg
mov
jg
mov
aaa
sbb
jne
fstp
stos
jle
adc
mov
jmp
filds
pusha
pop
movsl
pop
call
sbb
mov
sub
xor
pop
clc
sbb
leave
incb
xchg
setb
daa
inc
aam
mov
arpl
mov
insb
popf
outsl
mov
movsl
fdivrs
lds
pop
xchg
inc
jo
mov
subb
cmpsb
rolb
aaa
dec
push
xchg
cmc
xor
xor
loope
and
inc
sub
mov
dec
testb
shrl
dec
or
xchg
pop
mov
push
outsb
or
not
rorl
mov
add
fwait
xchg
subb
rep
pusha
ds
scas
and
fsubl
stos
mov
xorl
aam
pop
xor
lea
and
or
fisttps
aam
mov
test
cmpsl
enter
cmp
bound
sbb
jo
add
mov
lods
lods
fwait
inc
gs
xor
cmpb
xor
clc
sti
ss
test
jecxz
in
cmp
leave
jg
cmpsb
mov
leave
ja
outsb
inc
jne
push
ja
adc
inc
adc
xchg
push
mov
test
jp
adc
mov
imul
loope
inc
pop
jns
and
sub
push
test
add
push
dec
int3
jbe
popa
adc
push
or
xchg
js
rcrb
into
mov
or
mov
hlt
cmpsl
mov
or
dec
pop
scas
dec
add
std
or
lods
mov
das
inc
test
in
in
push
sub
jle
add
xchg
or
fmulp
xchg
push
xchg
pop
and
mov
hlt
inc
jne
nop
add
jmp
enter
and
mov
in
xchg
push
jb
cmc
insb
mov
ret
mov
inc
lds
scas
pop
mov
push
xor
pushf
mov
aaa
inc
pop
dec
in
xor
imul
mov
subb
lds
mov
dec
add
adcb
lret
inc
loope
jbe
jp
repnz
jo
dec
pop
int
mov
jl
mov
lcall
adc
sub
inc
mov
mov
push
dec
imul
jmp
mov
jp
mov
push
inc
rcrl
je
pop
mov
xchg
test
sbb
dec
data16
xchg
enter
add
push
cwtl
cmp
jl
and
sbb
jecxz
add
cmp
loop
mov
imul
or
mov
jmp
dec
mov
out
mov
sbb
inc
iret
cmp
and
lret
into
mov
arpl
leave
inc
push
and
inc
sbb
mov
ficompl
mov
or
icebp
fmul
jb
jnp
mov
clc
mov
add
cmpsl
mov
ds
and
sti
jge
pop
jae
sub
jp
lods
inc
sbb
ljmp
fs
inc
ss
adc
mov
inc
fldenv
push
dec
mov
int
mov
adc
jae
jecxz
in
punpckldq
out
inc
les
inc
out
dec
dec
aad
xchg
and
xor
jge
test
dec
sub
jmp
xchg
sub
shlb
rorb
das
lea
cmpb
or
int
pop
lret
mov
daa
sti
and
dec
lcall
pop
std
xor
sbb
mov
mov
push
in
cmp
loopne
mov
pop
mov
adc
loopne
sbb
inc
xor
mov
sbb
addr16
in
pop
cmpsl
jb
dec
cmp
add
outsb
fsubs
call
cmp
sub
sbb
mov
hlt
jle
out
push
and
insl
aas
cmpb
popf
popa
jge
push
fdivp
cmc
jns
das
mov
pop
lds
pop
por
inc
xchg
adc
out
mov
pop
lcall
mov
loopne
mov
xor
aaa
mov
faddp
leave
xchg
mov
pop
hlt
push
mov
add
movsb
lods
mov
fs
cltd
in
sbb
mov
mov
mov
cmp
mov
pusha
jecxz
mov
subb
mov
js
into
pop
in
sti
sbb
sbb
fstps
cli
jmp
inc
mov
and
iret
out
pop
scas
xchg
xlat
sub
lds
mov
scas
adcl
mov
add
jmp
leave
xchg
test
mul
lret
xchg
aas
addr16
pop
repnz
dec
jne
or
sub
je
jno
rclb
pop
aam
lret
inc
mov
mov
or
push
adc
stc
mov
jnp
sub
push
mov
fwait
add
push
bound
clc
dec
pop
mov
mov
imul
lahf
scas
addr16
loopne
fadds
into
mov
lret
adc
arpl
scas
test
dec
les
cmpsl
push
sub
mov
or
aas
xor
cmp
adc
nop
es
repnz
insb
xchg
ror
add
dec
dec
push
jb
adc
dec
mov
inc
ret
inc
ret
pop
pop
rclb
mov
push
pop
adc
bound
repnz
lret
stos
and
adc
add
mov
and
or
dec
pop
cs
fnstenv
push
cmp
mov
lea
ficomps
aas
iret
sti
xor
xorl
pop
xchg
mov
stc
or
fs
mov
test
mov
adc
in
xchg
cmp
outsb
les
cmp
xchg
bound
cs
std
pop
andb
andl
mov
mov
aas
pusha
shrb
enter
into
mov
cmp
pop
and
in
lds
inc
clc
lock
ljmp
pop
enter
shrb
lods
into
shlb
clc
xchg
jo
push
dec
scas
int
jecxz
or
pushf
ficoml
es
sbb
sahf
mov
pop
ret
mov
cwtl
popf
mov
and
jns
xchg
and
inc
ret
push
add
stc
sbbl
cmpsb
in
std
jle
push
js
sbb
repz
adc
push
jo
mov
es
pop
out
pop
ss
xor
jl
cmp
jp
xor
sbb
movsl
dec
out
rcll
into
mov
add
stos
sub
mov
sub
xor
push
pop
sbb
cwtl
adc
movb
mov
test
mov
mov
filds
rcr
push
ds
mov
mov
sub
stc
stc
xchg
adc
push
sbb
xchg
sbb
sti
sbb
push
loope
lcall
test
mull
push
push
jmp
push
jle
popf
add
jb
das
mov
dec
or
push
outsb
push
push
cmpsl
fisttpll
mov
adcb
push
movsl
push
cmpsl
clc
jg
push
cmp
rolb
lcall
push
pushf
mov
sbb
movsl
jle
xor
mov
gs
movsb
push
xchg
loope
scas
imul
cmp
int
lret
cmpsb
fcmovnu
fsubrs
scas
icebp
xor
and
jge
xchg
xchg
inc
adc
inc
inc
add
loop
cmp
sti
xor
inc
mov
shlw
mov
nop
call
fwait
into
and
adc
jne
fnstenv
dec
sbb
xor
mov
rcll
adc
shll
adc
hlt
pushf
hlt
jecxz
cmp
mov
cmp
int3
std
cmpsl
stos
sar
sub
xor
ja
call
mov
push
cmp
pushf
or
pop
enter
aad
push
push
shlb
loop
xor
sub
xor
js
shl
sbb
mov
ficomps
jae
add
pushaw
clc
mov
cmp
lea
sbb
pop
int3
loope
push
adc
clc
enter
loopne
out
inc
outsl
mov
mov
das
add
mov
or
outsl
adc
out
outsl
jbe
xor
cmp
cwtl
mov
push
xchg
aam
daa
cmc
lods
jg
andl
jo,pt
cmpsl
pop
sti
adc
and
adc
push
pop
hlt
outsl
jg
pushl
sahf
cmp
jbe
and
fimull
dec
mov
sbb
adc
sub
fscale
xchg
xchg
hlt
imul
std
push
jmp
cmp
subb
add
cmp
add
and
mov
faddl
xchg
sti
cmpsb
es
sbb
cltd
pusha
cld
loop
xchg
adc
rcrl
inc
and
imul
add
or
call
fimuls
rcll
cmp
jns
btr
leave
test
pop
sarb
push
mov
pop
int
fsubrs
sub
mov
sub
cmp
ss
shlb
mov
push
cmpsb
mov
movhps
mov
mov
mov
xlat
sbb
xor
leave
lea
mov
or
cmp
pop
jl
imul
sbb
or
jbe
mov
decb
ficompl
mov
push
xchg
mov
jnp
fiaddl
sub
mov
inc
scas
adcl
push
cli
sub
rcrl
add
xchg
cmp
inc
repz
in
pop
aaa
jae
scas
stc
cmp
int
lods
push
pop
cmpsb
push
shll
xor
lret
xor
jl
jo
or
cs
dec
dec
sti
sub
mov
push
std
test
into
jae
add
ljmp
dec
xchg
std
lret
mov
mov
xlat
lods
inc
inc
ret
lods
fbstp
jg
fs
xchg
cli
sub
mov
rclb
shld
xchg
sbb
jae
pushf
push
xchg
test
insl
sub
mov
int3
ja
sarl
jno
fnstenv
mov
push
loop
addr16
jo
inc
in
xchg
jp
pushf
movsl
push
push
sbb
sbb
arpl
push
lret
arpl
jp
shrl
push
ljmp
adc
mov
pop
or
in
xor
addl
arpl
int3
xchg
inc
push
shll
imul
jo
ja
push
push
pushf
jg
xchg
mov
jle
test
adc
jno
mov
add
push
xor
jae
cmp
or
icebp
enter
add
cmp
jb
mov
push
repnz
mov
sbbb
out
mov
aam
dec
stos
aad
lock
mov
sbb
daa
add
xchg
mov
adc
cmp
daa
lock
add
enter
mov
inc
lods
sub
cmp
test
paddw
push
mov
call
fstpt
negb
push
ret
cmp
inc
loopne
cmp
inc
mov
pop
pop
dec
inc
pusha
or
adc
mov
cmpsl
push
sahf
ds
sahf
xchg
xchg
mov
dec
shll
sub
dec
push
and
lret
aaa
pop
pop
jae
sahf
test
adc
xor
xchg
cld
std
xchg
adc
xchg
sbb
mov
jmp
jae
loop
sarl
pop
icebp
adc
dec
jecxz
sahf
enter
jae
jno
cltd
ja
inc
mov
cmc
xlat
sahf
pop
lea
and
lcall
popf
push
mov
in
inc
xchg
or
cli
push
leave
adc
mull
pop
xchg
lods
sbb
cs
sbb
mov
enter
xchg
inc
loope
jmp
add
stos
push
sub
loopne
push
mov
enter
orl
add
xchg
mov
fisttpl
int3
fbld
jg
jmp
addl
aas
adc
out
pop
or
xchg
loope
xorl
aam
cwtl
mov
test
sbb
cmp
dec
jmp
repnz
sbb
push
push
jp
out
push
xor
sarb
lahf
push
stc
cmp
repnz
imul
insl
add
push
xor
jns
xchg
mov
and
cli
rcr
sbb
jae
xorl
rcr
insb
out
out
or
lret
frstor
mov
repnz
mov
jp
scas
push
std
pop
or
mov
add
jno
inc
daa
pop
fld
outsl
int
add
add
int3
addb
add
jns
ss
mov
dec
xor
out
lds
iret
aam
xchg
stos
mov
pop
out
mov
and
fs
movsl
jno
out
or
pushf
sbb
add
xor
jge
jbe
xlat
or
jp
repnz
std
jae
out
scas
add
addr16
jbe
aam
jmp
test
mov
lret
aam
cmp
mov
mov
xchg
lods
aad
jmp
pop
shlb
adc
push
in
adc
aad
adc
imul
fs
hlt
mov
mov
mov
movb
push
cmp
pop
sbb
std
jo
test
pop
insb
ud1
imul
xorb
sarb
int
into
call
mulb
mov
pop
add
push
inc
and
loope
scas
xor
jp
xlat
es
push
push
out
test
test
aaa
adc
mov
in
test
clc
call
imul
pop
mov
dec
je
jmp
out
jae
movsb
mov
std
sahf
xor
pop
testb
jbe
enter
xor
or
mulb
pop
mov
stos
stos
imul
push
lds
jp
test
adc
mov
in
pop
das
lret
lahf
pop
dec
inc
out
sub
fadds
mov
cmp
mov
push
jl
sbb
and
fwait
mov
cmpsl
loop
notb
xchg
and
fs
in
movsb
fimull
mov
dec
repz
std
sti
mov
mov
repnz
jb
adc
sbb
push
test
enter
inc
idivb
sahf
inc
incb
xchg
repnz
dec
cmp
jp
xchg
imul
or
nop
test
mov
add
daa
hlt
out
int
hlt
daa
dec
es
push
popf
out
sub
mov
mov
pop
rorl
insb
test
dec
jb
cwtl
xchg
xor
mov
rclb
jl
jno
shll
shrd
lds
cld
movsb
inc
mov
push
add
fwait
lods
into
loop
push
dec
das
dec
push
pop
xchg
movsb
mov
cmp
sti
fwait
stos
sbb
xchg
scas
fwait
push
pop
mov
mov
mov
sbb
das
xchg
jge
mov
cmp
test
jb
sub
cltd
mov
push
xor
push
mov
in
or
aas
decb
out
push
mov
add
ftst
pushl
cli
mov
cwtl
inc
loop
lea
jne
inc
test
cmc
addr16
cld
fcoml
push
sub
and
mov
movsb
daa
les
ret
inc
loope
jne
in
lea
fsubr
jmp
ds
popf
sub
loope
in
jmp
pushf
lods
lea
adc
scas
xor
sti
push
sbb
sub
stc
sbb
dec
xchg
or
pushf
es
pop
lods
pop
mov
pushl
out
push
clc
sub
lahf
jae
lret
or
mov
adc
in
or
push
fdivl
arpl
clc
iret
sti
cmp
xor
dec
inc
jnp
inc
xlat
test
je
ret
test
push
sub
inc
addr16
push
pop
loopne
lret
add
cmp
leave
pop
js
push
and
pop
mov
dec
daa
xor
adc
int3
pop
pusha
fstpt
cmp
les
add
rcl
mov
cld
loope
rclb
and
and
repz
popl
jge
and
xor
dec
xchg
sub
push
inc
lods
rorl
mov
test
bound
mulb
mov
pushf
repz
in
rol
jecxz
fiadds
lahf
inc
push
jle
pop
push
addr16
inc
imul
loopne
sbb
add
loop
or
sbb
mov
mov
and
or
mov
cmp
test
push
jecxz
and
ljmp
mov
nop
int3
sub
pushf
push
in
lods
lcall
cli
pushf
fldl
push
int3
sbb
lcall
inc
add
sub
imul
push
sub
add
mov
cmp
sub
lcall
testb
adc
pop
push
out
clc
jnp
std
jmp
lods
pop
shll
bound
fsubs
je
lods
cmp
inc
inc
push
addr16
push
inc
insb
dec
lret
jp
shlb
dec
popf
rcrl
ja
loope
push
imul
push
mov
lret
mov
loop
dec
inc
lock
rcrl
test
stos
push
push
mov
pop
mov
idivb
adc
shrl
je
mov
pop
mov
int3
dec
add
jmp
pop
sbb
repnz
rcrl
fdiv
jb
mov
das
and
pop
or
shlb
shlb
mov
sbb
xchg
xor
cmpsl
les
movsl
smsw
fs
mov
cli
push
lods
in
in
adc
jecxz
cmp
aad
ret
movsb
mov
cwtl
bound
testl
sub
and
outsl
sbb
out
pop
sti
add
ror
sbb
das
loop
int
ret
popf
ljmp
mov
cmp
or
dec
lret
inc
and
sub
jge
lock
mov
xchg
jne
imul
mov
mov
pop
jb
mov
ja
loopne
ljmp
jae
sti
push
test
cmpsb
xor
aad
inc
pop
lahf
sub
testb
leave
outsl
xchg
dec
mov
add
cli
inc
sbb
cmp
lods
push
jo
jl
cmpsb
dec
push
push
jmp
xor
in
ja
adc
shl
insb
add
cmp
shll
jnp
insb
ss
push
cs
fidivl
push
push
stc
pop
sub
shrb
addr16
xchg
push
cmp
jge
movsb
xlat
inc
in
xor
pusha
test
mov
out
cmp
push
fsts
loopne
cmpsb
popf
enter
movsl
orps
mov
cltd
inc
dec
push
lret
jp
jae
out
and
icebp
mov
dec
adc
dec
cltd
repnz
pop
lock
dec
mov
dec
inc
adc
sbb
mov
cld
shr
addb
and
xor
aaa
jle
aad
popf
jp
lds
enter
cmpsb
xlat
jecxz
add
mov
fcoms
jmp
scas
imulb
sbb
mov
imul
test
push
fdivl
jne
ljmp
push
inc
cmpsl
es
imul
xlat
shrb
jns
in
jnp
mov
or
mov
stos
sbb
fildl
pushf
adc
mov
mov
call
cmpsl
lock
adc
je
je
or
dec
cmp
dec
aaa
cld
mov
fs
dec
dec
mov
roll
fbld
test
repnz
dec
inc
call
push
ret
sub
jbe
push
mov
shll
dec
cmp
pop
dec
aas
fwait
mov
aaa
or
aam
loop
movsb
or
call
insl
push
jb
mov
subl
sbb
cmpxchg
dec
xchg
rcl
into
dec
jl
aad
or
cmp
sbb
cld
mov
pusha
stos
scas
or
add
pop
inc
pop
xchg
mov
jne
in
movb
jae
and
sbb
popf
nop
jnp
roll
dec
jns
sar
xor
add
mov
loopne
cmp
shrl
lcall
jnp
popf
scas
subb
jmp
mov
sub
stos
insl
pop
rcrb
cmpsl
push
sub
and
nop
dec
pop
add
cwtl
push
and
jns
dec
addr16
jae
push
sub
ret
popf
mov
lods
adcl
fwait
add
dec
daa
and
insb
xor
push
pushf
imul
sub
fsubr
dec
insb
jb
out
xor
push
cmpsl
loopne
dec
aas
push
xlat
mov
sbb
ret
out
jo
test
adc
dec
push
out
sbb
stos
std
fwait
mov
in
sub
sbbb
cmp
xchg
mov
cmp
lret
fdivl
inc
pushf
movsb
aas
movsb
ret
mov
jl
popa
mov
ud2
or
test
in
movsb
jno
into
lahf
rcll
xor
or
jge
or
push
xchg
add
push
out
jecxz
pop
mov
out
jbe
mov
push
mov
leave
bound
jmp
jge
out
mov
fldenv
stos
sub
loope
cmp
popa
jno
xlat
sahf
mov
mov
daa
aaa
inc
imul
xor
pop
add
inc
mov
xchg
inc
aam
rcll
fnstsw
sub
outsb
xchg
or
push
cwtl
add
test
ret
cltd
add
and
xchg
movsl
push
jns
loopne
cmp
inc
and
mov
test
adc
ret
add
cltd
int3
das
mov
aaa
pandn
dec
jae
jno
or
xchg
push
loopne
push
jae
aad
cld
scas
ret
or
cmp
gs
jno
dec
cmpb
add
lods
adcl
je
jb
test
sbb
iret
jo
mov
sub
ljmp
mov
popf
xchg
xor
jmp
lods
rclb
lods
jne
pop
into
jecxz
sbb
push
out
popa
sub
out
sbb
pop
rorl
fdiv
xor
mov
rclb
out
inc
sbb
dec
xor
sbb
jmp
bound
jp
adc
out
mov
pop
in
jl
fnsave
vmovdqa
cltd
andl
out
xchg
xchg
pop
mov
push
lret
pop
dec
jnp
subl
sub
cltd
rclb
fwait
jnp
mov
xor
pop
dec
push
push
aad
mov
fnstsw
leave
mov
dec
out
test
jmp
bound
mov
xchg
sbb
add
push
mov
fnsave
icebp
mov
dec
cmp
fidivl
stos
mov
adc
pop
mov
mov
sbb
cmp
dec
mov
cmc
mov
add
xor
and
adc
jmp
dec
mov
shl
add
cmpsl
add
sbb
ret
test
scas
xchg
aam
push
bswap
cs
jge
test
out
mov
mov
pop
orb
mov
test
xchg
popa
inc
adc
iret
insb
leave
flds
or
or
adc
test
lods
test
jge
adc
decl
dec
lea
add
adc
sahf
sub
or
inc
mov
movsb
jg
decl
or
add
sbb
andl
test
jb
xchg
cs
sbb
sbb
loop
inc
mov
pop
fdivs
dec
addr16
and
and
xor
pop
lret
pop
lea
jnp
aas
fs
data16
fimull
lods
and
sbb
mov
pop
jle
fcoml
or
test
jae
fnstenv
and
pxor
or
push
push
xlat
push
pop
push
sbb
repz
and
out
jae
sub
jne
std
jmp
call
aad
or
push
loope
pop
xlat
mov
xchg
fst
loopw
inc
cmc
sbb
push
push
sbbb
lock
bound
pop
js
mov
push
pop
sbb
sbb
and
mov
jnp
adc
dec
jmp
sti
outsb
insl
sahf
inc
pop
xor
inc
movsl
pop
dec
jecxz
adc
pop
dec
iret
into
sbb
inc
cmp
add
adc
fsubl
push
cmp
pusha
cltd
aaa
call
stos
jae
add
push
xor
and
ret
push
dec
repnz
mov
shrl
inc
add
sub
stos
lcall
jecxz
stos
dec
add
add
insl
dec
nop
aam
sbb
and
pusha
inc
fimuls
xor
popf
push
insb
cwtl
xor
cmp
xor
mov
mov
or
into
out
mov
cmpsl
xchg
scas
adc
adc
stos
imul
ds
lcall
fcmovu
out
mov
pop
loopne
in
or
lods
bound
jo
pop
aas
mov
test
movsl
orl
out
cmp
xchg
pop
xchg
jno
adc
mov
inc
pushf
in
out
sub
mov
les
mov
popa
or
popa
cmp
sbb
bound
loop
cmp
pop
lcall
push
xchg
sbb
sub
dec
lcall
dec
xor
rol
sub
fsubs
push
push
adc
inc
shll
pop
dec
mov
ret
mov
inc
jne
seta
add
sub
ret
test
popf
pop
mov
rcll
iret
dec
ss
pop
sub
push
mov
mov
js
mov
inc
mov
cmpsl
pop
push
push
int3
inc
inc
fsubrs
jae
cmp
out
and
aaa
mov
movsb
inc
jl
cmc
jge
in
cltd
sahf
add
dec
dec
loop
sbb
add
adc
imul
pop
lahf
outsl
xor
xor
mov
cmp
test
test
rcr
mov
jmp
dec
aam
add
dec
cltd
repnz
push
mov
repz
sbb
adc
out
pop
sub
adc
test
mov
movsl
and
mov
aaa
sub
lret
mov
dec
cs
es
aaa
sarb
cmp
mov
iret
stos
loop
cmc
add
adc
inc
cmpsb
push
jp
mov
cmp
gs
xor
add
cmp
hlt
pop
fwait
push
sysexit
cmp
in
repz
xchg
mov
popf
mov
xor
mov
loop
pop
arpl
sub
jge
add
out
mov
lods
out
cs
push
rcll
xor
cmp
loopne
xor
int3
call
jno
cltd
aas
jecxz
xor
add
xchg
nop
imulb
cltd
sbb
insb
ds
or
fcomps
loop
sbb
fsubl
xchg
cli
pop
mov
mov
fidivrl
pusha
shrl
xchg
pop
inc
jecxz
or
test
in
mov
jmp
xor
or
stos
push
out
cmp
lds
mov
imul
lods
scas
mov
xor
sub
fildl
fs
mov
inc
into
or
jl
dec
pusha
dec
rcrl
push
rcll
dec
adc
mov
pop
mov
imul
clc
int3
pop
scas
nop
mov
fcoml
iret
sbb
or
inc
fisttpl
cmp
mov
sub
jo
ret
inc
mov
les
mov
adc
cld
jb
lahf
movsb
add
dec
dec
stc
add
lahf
insl
in
and
adc
out
mov
inc
pop
out
div
or
cltd
inc
leave
rol
nop
dec
jg
popa
iret
andl
and
jno
cmpb
mov
ljmp
mov
std
loopne
push
repz
fbstp
mov
jg
mov
aaa
dec
movsl
lods
sahf
clc
cmpsl
sbb
mov
xchg
enter
hlt
mov
icebp
dec
out
fsubs
ret
outsl
mov
dec
fisubrl
xor
daa
shlb
inc
mov
push
stos
push
jl
cmp
std
iret
jecxz
mov
push
scas
pop
and
mov
xchg
shll
icebp
clc
scas
jmp
add
mov
or
js
nop
ret
mov
outsb
test
xchg
push
lock
mov
stc
out
dec
jae
mov
nop
inc
cld
push
mov
in
popa
mov
mov
push
sub
xor
pop
xchg
movsb
or
sti
mov
fldenv
cmp
mov
push
inc
repnz
cli
lcall
stc
add
sub
jbe
mov
push
insl
mov
leave
mov
sub
mov
mov
dec
adc
jno
fnstsw
mov
jmp
ficompl
pop
add
push
loopne
roll
add
in
icebp
lret
inc
pop
ds
dec
xor
popf
and
cmp
pop
mov
jnp
xor
idivb
lcall
jle
xor
movsl
push
sbb
sbb
and
imul
es
cmpsl
dec
pusha
nop
add
and
dec
arpl
arpl
sbb
ljmp
push
mov
add
jmp
dec
ljmp
inc
sbb
dec
je
and
sti
fcomip
out
leave
shrl
les
mov
xlat
jb
and
jb
ds
sub
jg
jbe
int
ret
xor
pushf
daa
dec
pop
mov
xchg
sub
mov
push
mov
in
ret
stos
push
xchg
mov
lcall
jl
aad
cmp
pop
xorl
mov
out
mov
pop
repnz
pop
mov
cmpsb
ja
leave
popf
cltd
xchg
adc
add
jae
hlt
sbb
or
enter
mov
fidivrs
fcomp
pop
xlat
sub
ljmp
and
jb
push
jns
cltd
std
dec
iret
and
dec
cltd
and
pop
mov
pop
bnd
outsl
out
lret
xchg
adc
mov
cmp
dec
dec
les
pusha
xchg
xchg
jmp
pushf
in
test
mov
pusha
sbb
out
jne
ds
dec
dec
xor
in
mov
xor
xchg
mov
mov
inc
in
sbb
stc
pop
jp
imul
sbb
adc
jle
hlt
xor
xchg
sbb
ret
sub
push
sar
fdivr
lock
idiv
or
jle
xor
jo
scas
jb
int
inc
xor
and
or
out
mov
inc
push
add
fs
lcall
inc
lea
pop
cli
out
test
xor
adc
out
dec
pop
xchg
xchg
sub
xchg
pop
push
jg
stc
insl
xchg
xlat
out
jg
cwtl
call
into
cmp
aaa
call
lret
mov
clc
and
push
nop
inc
lods
in
cwtl
stos
mov
into
lods
adc
sub
notl
dec
lods
out
mov
dec
fwait
mov
xchg
push
imull
andb
pop
mov
mov
sti
test
jns
add
cmp
enter
mov
or
xor
int
sbb
xlat
stos
push
repz
pusha
aas
daa
mov
xlat
jl
loopne
mov
sti
adc
and
daa
xor
inc
dec
xor
mov
cmp
call
cld
aam
cli
mov
pop
add
test
pop
mov
pop
ds
int
cmp
jmp
xor
and
adc
adc
fsubrl
inc
popa
xchg
aas
push
rcrl
or
xor
mov
jno
and
sub
push
mov
add
sbb
data16
and
dec
mov
setle
in
scas
lret
fcos
pop
xor
mov
pop
xchg
sub
nop
test
test
out
ficomps
outsb
jp
sbb
dec
mov
cmp
addr16
ret
mov
push
or
popa
dec
jge
push
into
insl
pop
adc
lcall
pop
mov
notb
sbb
sarb
inc
in
sbb
rcrb
mov
jnp
mov
in
ret
mov
and
iret
das
sub
mov
aaa
jno
in
les
sub
je
mov
cmp
xchg
cli
cmpsl
lea
jnp
addr16
scas
inc
cmpsb
cld
jo
sbbb
or
mov
and
xor
stos
cmp
mov
jbe
outsb
loopne
ja
fwait
rcrl
leave
xchg
dec
daa
mov
adc
ds
icebp
mov
stos
bound
and
xor
orb
data16
mov
int
cli
fildl
jne
fucomp
cwtl
sub
ret
or
mov
fcmovne
out
fldcw
jg
test
xchg
sbb
lea
sub
pop
push
jle
lods
add
xchg
push
adc
pop
or
sub
jns
stos
test
sbb
and
decl
lea
and
dec
iret
popl
pop
scas
mov
inc
dec
pop
stc
movsl
jl
add
int3
mov
push
movsb
cld
inc
into
sbb
sub
inc
sbb
jecxz
cmp
xor
cmp
addb
lret
ror
clc
cmp
loope
pop
scas
fistpll
mov
fcompl
and
adc
pop
ficoml
pop
pop
nop
in
inc
jp
js
nop
adc
loope
fldcw
cmp
sbb
das
mov
mov
push
add
and
jecxz
push
stc
call
xchg
int3
push
cld
iret
push
mov
cld
push
xlat
push
jmp
mov
cwtl
fs
fiaddl
jbe
mov
xor
cmpsb
leave
js
jne
push
test
insl
adc
push
and
and
sarl
imul
or
stos
sub
mov
sub
lahf
rclb
in
int
popf
add
in
mov
mov
inc
sahf
insl
das
ficomps
call
sbb
mov
inc
jnp
mov
cmp
std
ss
vcvtpd2dq
dec
dec
xchg
sti
xchg
fmuls
pop
fs
call
fisttps
cmp
out
and
stc
orb
rcrb
pop
and
call
inc
fisttpll
mov
add
lods
mov
lret
pop
cmp
mov
fmull
jae
out
fwait
jg
scas
adc
fnstsw
cld
out
ss
lods
jmp
add
inc
vmwrite
jp
and
repnz
insb
das
sti
les
clc
dec
cmc
push
jg
test
or
adc
mov
xchg
mov
enter
dec
jle
insb
jns
push
cmp
sahf
push
xcrypt-ecb
cmpsl
dec
push
loope
inc
outsb
cmc
mov
imul
sub
addb
ret
inc
cmc
pop
out
ds
xlat
ja
jnp
dec
xor
sub
jnp
frstor
dec
or
sub
nop
lods
je
inc
hlt
repnz
add
jl
push
sbb
in
xchg
shrl
mov
push
test
scas
pop
sahf
mov
jno
pop
lahf
jb,pt
out
inc
cmpsb
pushw
jge
nop
sar
push
jne
outsb
repz
shlb
shrb
adc
cs
hlt
adc
stos
andl
fcom
xor
leave
inc
div
std
inc
sbb
ds
std
mov
repz
jg
sbbl
mov
cli
ljmp
and
loopne
add
push
lea
orb
xchg
repz
xchg
lock
sbb
push
adc
in
ljmp
xchg
xor
mov
stc
inc
inc
adc
or
jno
pop
lds
fmull
test
xor
jg
lret
lret
mov
inc
jae
xor
adc
add
push
sar
test
iret
mov
sbb
mov
aaa
ficompl
gs
ss
gs
out
fisubrl
imul
pop
xchg
xchg
sbb
mov
dec
inc
ds
add
cmp
bound
ss
int3
pop
xor
add
les
daa
pop
cmc
int
jl
mov
xor
sbb
cld
mov
or
fistps
shr
jno
stc
scas
mov
lcall
test
push
sti
mov
sbb
push
push
mov
cmpsl
imul
xchg
xchg
btc
hlt
cltd
fcoml
loopne
repnz
adc
sub
stos
xchg
hlt
sahf
add
loop
inc
fistpl
jo
je
and
push
mov
jo
daa
add
adc
push
add
xlat
mov
and
fisubl
xor
mov
add
insb
call
pop
inc
gs
and
push
stos
stos
xchg
dec
xor
lods
sub
es
dec
ja
cmp
insb
jp
cmp
loope
add
mov
pop
adc
add
cmpsl
cmc
leave
outsl
js
pop
adc
aam
sub
call
cmpsb
pop
adc
push
sub
jo
dec
pop
lret
popa
fisubl
dec
stc
shrl
xor
mov
xchg
sbb
sbb
and
jg
ja
rol
mov
dec
inc
pop
cli
sub
ljmp
lods
std
nop
jo
lahf
xchg
sbb
adc
sub
or
xchg
add
xchg
push
rorl
dec
sbb
adc
xorl
je
popf
gs
jns
jo,pt
clc
jg
or
jg
mov
fwait
adc
mov
or
subl
jae
ljmp
int
sahf
pop
or
sbb
imul
mov
dec
shlb
subl
jge
push
repnz
int3
mov
iret
lret
lret
insb
outsb
das
jg
inc
jmp
fwait
dec
mov
inc
dec
sbb
or
jmp
loope
pop
fiaddl
lret
xchg
popa
push
mov
inc
imul
add
fcmovnu
cmp
add
ja
pop
test
sub
leave
push
in
or
aas
dec
push
clc
mov
test
loope
xor
test
sbb
mov
push
sub
js
xchg
pop
mov
jge
sahf
and
xlat
push
fisubrl
push
xor
or
mov
inc
imull
and
push
ja
mov
adc
jbe
mov
shll
aas
mov
xor
mov
rcl
aam
xchg
mov
imul
icebp
out
adc
ret
idivl
imul
jl
dec
fldz
incl
fidivrl
push
mov
lahf
sti
adc
cmp
scas
xchg
xor
inc
push
flds
scas
mov
popf
pop
or
pop
mov
in
inc
sbb
inc
insb
adc
inc
movsb
jle
mov
pop
int
in
arpl
and
mov
ret
pop
xor
jl
out
stc
scas
rorb
jnp
fdivrl
mov
std
lods
pop
jne
xchg
jmp
xchg
repz
inc
add
fldenv
clc
mov
rcrl
dec
mov
cwtl
xchg
xor
lods
in
ficompl
mov
aam
push
xchg
xor
sub
js
pop
mov
std
fcmovnb
adc
add
lcall
js
inc
test
and
stos
jge
insb
add
fsub
pop
ljmp
jno
jmp
or
or
data16
mov
pushf
push
dec
jge
and
adc
mov
es
push
call
imul
xchg
jge
mov
pop
fs
dec
push
js
mov
movsb
sub
or
test
insb
add
adc
adc
cwtl
int
loop
icebp
mov
pop
cmp
inc
mov
jg
inc
mov
ja
test
push
std
jbe
pop
outsl
and
inc
ljmp
popa
inc
into
adc
mov
dec
cmp
sti
xor
addl
insb
mov
adc
test
iret
enter
adc
rorb
lods
push
cmp
xor
movsb
mov
push
movsb
loope
inc
cmpl
cmp
adc
lret
pop
subb
sbb
push
ds
pusha
adc
ss
push
dec
and
xor
adc
xchg
mov
jmp
loopne
mov
outsb
xchg
daa
mov
incb
sbb
pavgw
dec
enter
repz
jmp
dec
fcoms
xchg
insl
cmp
test
and
push
sub
sarb
lahf
or
les
or
pop
mov
xor
jge
jbe
mov
sarb
adc
adc
pusha
jns
imul
and
sub
sub
decb
cs
in
xchg
movsb
sbb
inc
movl
adc
rolb
sub
adc
push
insl
inc
push
je
xchg
hlt
adcl
clc
adc
cs
ljmp
jecxz
inc
das
pop
xchg
or
leave
sbb
jmp
pop
xchg
outsb
cmp
shrb
and
daa
pop
pandn
loop
and
dec
xchg
mov
dec
cmp
sti
pop
enter
std
and
test
lock
add
faddl
cmp
cs
or
lods
fiadds
scas
js
sub
in
cmp
mov
lcall
fstpt
in
rorb
imul
or
jno
imul
adc
sub
push
cmp
cli
mov
sbb
ds
or
adc
pop
cltd
jmp
add
mov
gs
and
mov
repz
dec
out
xchg
adc
mov
sub
and
in
adc
ds
mov
cwtl
imul
push
and
sar
mov
out
pushf
enter
inc
rcl
les
fbstp
pop
sbb
in
repz
test
enter
mov
rep
cltd
arpl
or
enter
iret
mov
movsl
push
out
nop
aad
outsb
jbe
in
dec
pop
cmp
js
leave
and
popa
aam
iret
adc
shrb
mov
dec
outsb
jecxz
xchg
xor
sub
repnz
mov
stc
ret
idivb
out
inc
lcall
adc
ret
ret
int
test
fwait
out
and
push
sub
in
leave
nop
ret
daa
jae
mov
xor
cmc
hlt
jp
cld
xor
pop
hlt
clc
lcall
or
mov
std
pusha
xor
mov
cmp
arpl
sub
add
js
push
sub
and
and
pop
mov
mov
daa
fsubrl
pop
or
xor
mov
cmp
push
bound
push
scas
popf
daa
mov
sbbb
add
and
cmp
sub
int3
int3
js
mov
enter
xchg
push
rcl
movsb
out
mov
cld
outsb
or
cwtl
ds
sbb
orl
dec
or
push
shll
out
jecxz
mov
mov
jg
dec
adc
cwtl
call
adc
add
sarl
data16
stc
inc
jmp
sub
jp
or
xchg
data16
pop
add
das
clc
lods
pop
ficoml
mov
push
mov
and
in
loop
xlat
mov
jge
out
iret
shrb
and
and
cmp
scas
push
sbb
adc
xor
call
xlat
ljmp
movsb
ret
ficoml
and
shll
cltd
out
pop
in
cld
ret
sub
and
dec
lret
out
xchg
hlt
sub
jp
flds
dec
mov
stc
push
mov
mov
repz
test
inc
inc
loopne
out
xor
addl
adc
loop
jb
push
in
xor
sti
imul
cmpsb
push
jbe
movsb
test
push
ljmp
xchg
or
jae
rcrb
daa
mov
fbld
movsl
jae
and
das
movsl
rorb
lret
out
es
jg
push
je
push
mov
mov
xor
in
out
push
pusha
sub
dec
sub
jb
fiaddl
dec
xor
jae
mov
xor
xlat
or
mov
mov
jb
lcall
stos
aam
ljmp
push
jno
and
xchg
cmp
and
jge
mov
iret
ret
adc
out
or
sub
cmc
outsl
movsl
stc
out
dec
ja
aad
pop
jns
jae
mov
adc
xchg
xor
int
xlat
iret
xor
sbb
cmp
scas
cmc
mov
cwtl
shrb
int
data16
lock
add
cmpsl
or
adc
scas
and
test
mov
roll
outsb
fwait
movsb
pushf
fnstcw
jnp
add
and
cmp
mov
rcll
jg
sti
and
sub
pop
jp
scas
cli
fiaddl
push
push
sub
lahf
lret
xorl
aam
ret
sub
xlat
and
and
push
sub
cmp
aaa
mov
push
sahf
xor
sub
push
mov
cmp
test
cmp
fisubs
and
sbb
sub
hlt
sahf
fdivp
sbb
in
xlat
mov
ljmp
sti
cmp
pop
jle
jg
shl
jne
pop
into
lret
idivb
aad
loope
pop
adc
mov
ja
jecxz
mov
popa
fistl
out
enter
aam
mov
stos
fildl
cmp
jne
movb
push
scas
cltd
lahf
dec
jne
dec
and
jge
ds
inc
les
mov
cmp
add
out
mov
dec
inc
or
jnp
jmp
or
and
jp
inc
rolb
xchg
sbb
add
xchg
lds
or
pop
mov
mov
out
cmpsb
inc
xor
xchg
leave
or
cmp
sbb
ret
pop
insb
dec
cmpsl
jmp
cmc
inc
xchg
cmp
add
test
cmp
daa
xchg
mov
jl
cmp
lock
mov
push
nop
mov
add
stos
mov
jmp
xchg
mov
jge
xchg
ret
inc
jmp
mov
xor
mov
rcr
cmp
xor
adc
pop
shll
inc
or
inc
push
not
hlt
cmp
add
cmpsl
test
rcrl
gs
jne
aaa
flds
pop
stos
jecxz
mov
pop
push
xchg
fistpl
dec
in
jb
mov
ja
loope
sub
mov
pop
popa
iret
inc
cwtl
nop
bnd
test
mov
es
xchg
mov
pop
inc
mov
mov
repz
leave
add
jns
lea
pop
xchg
nopl
pop
sub
sbb
loop
aaa
fiadds
mov
pop
add
pop
loopne
arpl
out
cwtl
sub
hlt
icebp
mov
push
jo
vmovaps
sub
pop
pop
ja
xor
dec
cmp
call
enter
xchg
push
or
popa
lret
jnp
loopne
imul
cmpsl
cltd
xchg
rcrb
aas
mov
mov
push
push
xchg
cmc
popa
pop
inc
jecxz
mov
out
insl
jle
popf
jbe
dec
cmp
xorl
dec
adc
pop
jl
gs
push
hlt
nop
stc
lock
pop
cmp
mov
shll
jle
movsl
dec
xor
inc
mov
add
add
jb
shlb
sbb
cmp
and
int
out
xchg
out
mov
movsb
loop
or
dec
xor
inc
arpl
loop
mov
add
and
and
xchg
push
and
out
lea
fsts
jmp
out
adc
pop
je
xor
push
jp
ud2
insl
iret
add
jle
test
aaa
insb
jecxz
jb
lret
xor
int3
ja
fdivl
xchg
gs
ljmp
xchg
inc
hlt
sbb
in
fdivs
pop
mov
rcll
insl
dec
mov
mov
test
loopne
lds
lods
sub
test
xor
jns
lock
adc
xor
in
les
xor
pop
add
ja
and
jb
jg
push
mov
sub
hlt
subb
ret
adcb
es
rorl
inc
sub
insl
cmp
sti
test
daa
js
ljmp
iret
add
scas
inc
fistpl
movsl
pop
adc
and
cmp
cmp
xchg
xor
xchg
sub
int3
test
lret
push
mov
leave
sub
jl
mov
aaa
imul
test
in
sahf
lret
sub
dec
jle
popf
jns
ss
mov
bound
addr16
pop
pop
jnp
std
adcb
mov
lcall
or
jbe
mov
xchg
xlat
add
mov
pop
mov
pushf
dec
and
aad
xchg
test
lock
sbb
fsubrs
cmp
pop
imul
fs
rorb
mov
clc
pop
add
and
popf
pop
negb
sti
jo
mov
hlt
je
xor
lds
pop
xor
inc
movsb
jbe
shll
inc
mov
hlt
outsl
lcall
mov
es
adc
xchg
adc
mov
cltd
mov
or
fisttps
inc
aaa
mov
fistpl
xor
leave
add
test
or
jl
jno
mov
add
pop
push
loope
jmp
mov
dec
shrb
xchg
dec
xor
imull
dec
lret
mov
jo
je
mov
dec
cmp
jecxz
push
mov
jo
mov
icebp
daa
pop
cmp
add
test
test
mov
mov
mov
stos
movsl
fisubs
push
jo
add
dec
rcrb
js
cltd
jbe
dec
loop
movsb
ss
sarl
jg
into
stos
mov
and
sub
in
ds
sahf
movsb
in
push
or
clc
cmc
dec
mov
fwait
inc
pop
xchg
jecxz
imul
xchg
ljmp
jle
mov
jg
js
cmp
jg
jne
dec
loope
in
add
and
cmpsl
cmc
adc
xchg
test
add
sub
lea
dec
stos
cs
dec
ds
enter
mov
int
push
test
and
aam
movsb
xchg
pop
int
adc
enter
std
fs
bnd
sarb
jb
adc
leave
push
mov
sub
and
dec
bound
sub
sub
xor
jmp
cmp
fdivr
mov
das
inc
xlat
movsl
adc
mov
inc
pop
lods
notb
jge
stos
mov
das
test
and
sub
mov
xor
js,pt
dec
ljmp
imul
ret
inc
mov
je
sbb
rcl
cwtl
adc
movsb
or
push
and
in
sbb
mov
fldt
clc
test
mov
fwait
xchg
dec
dec
das
movsb
mov
and
push
jno
xor
jl
dec
inc
shrl
jg
pop
push
ret
xlat
sahf
cmp
sub
lock
iret
inc
adc
lcall
jl
inc
insl
mov
imul
dec
xor
xor
pop
push
mov
daa
lret
inc
sbbb
mov
xor
pop
pop
jae
sbbb
aam
jle
clc
adc
xor
aam
mov
std
cmp
int3
push
dec
jns
mov
xchg
scas
clc
mov
je
stc
inc
push
push
lret
imul
in
ja
push
inc
out
mov
adc
fadds
jae
repz
dec
dec
adc
sbb
sub
jae
imull
ljmp
cmc
adc
bound
cld
pop
cmp
push
test
movsb
movsb
jns
inc
imul
or
outsl
lahf
push
xor
cmp
test
jno
and
dec
inc
leave
into
mov
mov
das
and
pop
mov
js
xchg
sbb
shrl
and
mov
mov
outsb
ds
xchg
arpl
sbb
ds
jno
mull
and
push
cmp
cmovl
cld
or
xor
inc
fsubp
jb
pop
negb
sbb
stc
lock
movsb
lret
outsb
shlb
filds
into
xchg
mov
imul
lahf
in
jnp
pushf
mov
xchg
dec
fstps
stos
xor
fnstsw
insb
sub
add
inc
stos
or
push
and
lock
lds
divb
test
orb
subb
xchg
aam
add
xchg
cmc
aaa
add
aam
cwtl
lds
bound
sahf
stos
test
sbbl
xor
mov
and
leave
inc
clc
inc
ds
arpl
popa
push
in
and
adc
push
xchg
lea
xor
sub
pop
pop
sub
inc
or
mov
nop
dec
in
pop
scas
daa
nop
insb
fsubrs
imul
cwtl
pusha
out
add
sbb
in
add
test
pushl
mov
aam
popf
lods
aas
mov
ljmp
les
mov
popf
mov
cmp
stc
sti
xchg
mov
imul
lret
movsb
or
imul
int
outsb
int3
mov
xchg
mov
cltd
cwtl
inc
xor
mov
or
dec
into
and
out
inc
ret
xchg
sub
pop
sahf
mov
push
add
and
outsb
and
call
sub
inc
cld
loop
pop
stc
cmp
mov
fdivrs
popa
stos
jo
mov
mov
out
pop
mov
jg
push
hlt
adcb
pop
sbb
adc
mov
std
sti
push
mov
icebp
add
test
fdivrs
scas
aas
enter
pop
mov
pop
pop
mov
xchg
pop
push
mov
push
sar
add
mov
mov
jae
adc
push
push
int
xchg
out
insl
mov
mov
xor
insl
je
enter
les
push
orl
add
xor
push
mov
negb
xchg
push
push
jg
rcl
add
pop
shrl
cmp
mov
dec
cmovns
add
roll
adc
ja
xor
inc
fs
and
push
push
xchg
movsb
inc
cli
daa
adc
jbe
mov
sub
pop
pop
xor
mov
aam
xchg
mov
loop
pop
aad
out
jo
mov
jl
daa
add
dec
sbb
sbb
inc
dec
xor
enter
mov
aaa
jp
es
test
xor
idivl
repnz
lahf
jne
dec
xchg
jbe
xor
sbb
aam
shrb
lock
sarb
fwait
out
mov
sbb
subb
push
jle
xor
cmp
mov
cmpsl
ja
xchg
push
les
inc
out
mov
repz
addr16
dec
addr16
clc
or
cmp
push
mov
add
ret
xor
sub
out
and
mov
jo
iret
dec
cld
lods
jae
add
lock
xchg
pop
pop
jp
cmp
adc
jae
mov
xchg
mov
xchg
add
out
fnstsw
shll
ret
je
inc
mov
shl
leave
popf
mov
lea
dec
pop
and
or
aas
push
pop
add
incb
flds
loop
mov
pusha
enter
push
loopne
in
lock
sub
les
adc
ficompl
dec
jg
stos
mov
sahf
sub
pop
sbbl
or
jl
dec
adc
jmp
leave
sub
sti
ret
mov
jo
xchg
xlat
test
adc
xchg
dec
movl
dec
adc
popl
arpl
lds
hlt
ret
aaa
test
fimull
or
pushl
jp
add
testl
imul
or
push
pop
pusha
lock
mov
jp
bound
les
pop
pop
sub
xchg
scas
mov
ljmp
popa
cltd
add
xchg
add
cmp
xchg
and
jge
out
into
and
xchg
inc
cli
insb
xchg
pop
or
adc
inc
mov
subl
inc
cmp
fistpll
mov
movsl
xor
inc
or
push
fcomps
aam
jg
pop
push
aaa
rcrl
stos
loope
leave
incl
xchg
xor
pushf
sbb
xchg
jns
aam
dec
cltd
cmp
shl
xor
add
sub
adc
shrl
jmp
es
sub
popl
bsf
test
pop
cmc
pop
pusha
aam
inc
fwait
pop
js
inc
and
scas
lds
hlt
cltd
or
mov
ja
dec
dec
and
push
movsl
fs
rclb
adc
mov
nop
fnstsw
mov
jecxz
std
push
cmpsl
mov
pop
sbb
ret
jge
movsb
lret
mov
mov
ret
xchg
daa
xor
ja
bound
loope
not
daa
xor
cmp
jns
mov
test
jle
jns
adc
clc
pushl
mov
or
idivb
mov
mov
mov
subb
xchg
jno
fldenv
cmc
inc
push
push
aaa
imul
popa
xor
xchg
dec
mov
ss
les
mov
call
les
dec
popl
adc
mov
xchg
cmp
mov
cmp
loop
xorl
andl
imul
test
jg
jl
or
es
sbb
push
rol
add
cli
mov
ss
or
xchg
push
cmc
adc
cmp
cmc
inc
push
popa
int3
xchg
xor
add
xchg
aas
insl
jmp
jae
mov
cld
shlb
push
lea
das
imul
leave
cmp
mov
lods
lret
aaa
push
sahf
sub
push
xor
mov
jno
pop
lock
jbe
stos
jmp
or
cwtl
and
mov
and
mov
aaa
lret
mov
adc
notl
lret
jns
push
xor
lods
mov
stos
outsl
mov
shrl
aam
sub
data16
lret
adc
nop
pusha
xlat
jge
xchg
bound
add
inc
dec
adc
mov
and
cld
sbb
push
sub
daa
imul
je
lods
ljmp
push
pushf
inc
es
lret
lods
inc
sub
push
jae
loop
adc
push
adc
rorl
mov
je
cmp
fdiv
pop
sbb
jne
adc
and
imull
imul
xor
mov
sub
push
bound
addr16
frstor
mov
cmpsl
xchg
loopne
push
std
inc
daa
leave
jae
das
or
sbb
mov
outsl
adc
scas
out
sub
sti
pop
push
and
loop
dec
mov
lahf
fnstcw
adcb
cmp
repz
pop
ds
xor
mov
and
imul
das
pusha
or
pop
or
mov
in
orb
packuswb
lea
and
and
inc
push
cmpsl
or
ds
fldenv
fs
insb
xlat
push
imul
imul
ds
adc
enter
lcall
dec
sahf
inc
popf
mov
lret
mov
inc
or
out
cli
nop
stc
pop
mov
mov
push
sub
jbe
adc
mov
push
add
xchg
pop
or
testb
enter
dec
lahf
or
jns
or
adc
add
fisttpl
std
outsb
imul
fnstcw
shlb
jno
clc
outsb
jecxz
sub
mov
mov
repz
lcall
out
add
mov
sbb
dec
or
sub
xchg
enter
push
popf
ja
ja
stos
push
sbb
inc
stos
push
mov
dec
lcall
fwait
insb
shll
mov
and
ficomps
sbb
lcall
out
and
mov
jns
icebp
and
rcr
jle
lods
cld
daa
das
push
ret
jo
add
pop
jle
fildll
out
mov
arpl
mov
xor
mov
push
bound
out
xchg
sbbb
jp
push
dec
int3
fisubrl
sbb
jne
pushf
xchg
sub
clc
jle
add
imul
sub
outsb
loope
cld
loop
decl
jo
mov
jmp
pop
xchg
pusha
jo
js
das
popa
add
xchg
push
xor
pop
out
outsb
sahf
jmp
orl
int
repz
mov
leave
sub
pop
int3
jbe
cltd
ss
je
xor
in
jp
imul
adc
mov
mov
add
pop
cld
dec
cs
sub
and
in
and
cmp
xor
popf
lahf
sub
mov
xchg
cmp
sbb
lcall
data16
inc
hlt
lods
nop
dec
es
cmp
scas
cmpsb
mov
mov
fadd
or
outsb
fisttpl
push
mov
enter
and
sbbl
hlt
ja
les
retw
adc
out
sbb
stos
lahf
mov
out
das
imul
ret
push
add
pop
std
je
and
xlat
shl
mov
lea
test
and
add
sub
rcrb
popf
insb
inc
cmpsl
xchg
push
mov
outsl
fs
xor
adc
outsl
sbb
add
aam
jb
test
and
shll
repnz
repnz
fwait
shlb
inc
repz
inc
cmp
mov
mov
aam
dec
jno
mov
lock
inc
daa
xchg
outsl
popf
cmc
mov
fst
mov
loopne
or
repz
scas
sar
arpl
push
out
rcll
and
cltd
pop
cltd
fcoml
cltd
or
stc
cmc
jge
lods
sahf
movsb
in
push
aam
cmp
lods
mov
jg
xor
sahf
and
pop
jne
lahf
xor
lock
iret
sub
push
sahf
xchg
mov
js
adcl
movsb
mov
mov
ds
add
or
sti
rorl
jb
sti
mov
ficompl
adc
loope
sub
xor
xchg
imul
negl
push
sbb
push
sub
cs
fsubrl
jmp
push
push
xor
adc
xchg
enter
push
inc
and
jle
cmp
dec
mov
cmpsb
or
rcr
lret
dec
movsl
inc
lds
add
sahf
adc
jno
or
pop
inc
push
push
jle
aam
out
sub
push
cwtl
sbb
pushf
mov
mov
lahf
mov
scas
lds
push
dec
xchg
dec
je
and
js
sbb
inc
pushl
ss
shlb
push
data16
stc
shr
movsb
or
loope
push
lret
ds
lahf
icebp
fsubs
cmp
jle
jb
jp
dec
scas
stc
andl
cmpsl
cld
lock
dec
mov
jno
cmp
jmp
or
pop
push
mov
xor
jge
mov
mov
mov
mov
daa
sub
cmp
adc
daa
sub
adc
ljmp
mov
mov
add
push
jp
pop
sub
lcall
jno
adc
sub
dec
and
imul
rcr
loop
inc
inc
sbb
mov
int
das
imul
or
pushf
ja
shlb
xor
adc
sub
mov
cli
aaa
mov
popa
gs
fadd
xchg
shrl
dec
addb
aaa
jo
orb
jbe
loope
fistpll
inc
cwtl
jbe
pop
jno
mov
test
xorb
cmp
mov
adc
minps
inc
mov
stos
jnp
push
and
es
addr16
aas
mov
orb
fbld
or
out
jge
outsl
pcmpgtd
or
frstpm(287
std
mov
mov
test
lods
or
in
xor
mov
push
arpl
mov
dec
std
fidivs
pop
adc
or
sbb
lcall
insb
mov
sbb
mov
addr16
push
mov
dec
repz
in
mov
mov
fdivl
mov
mull
repz
or
aad
mov
add
loopne
mov
repnz
add
fimuls
sub
xchg
cwtl
mov
mov
das
adc
and
call
outsl
subl
fs
sti
imul
xchg
imul
lock
call
movsb
xlat
push
sbb
sub
jge
jle
sub
sbb
scas
mov
and
cmp
or
dec
adc
push
add
jle
ss
stc
ja
daa
pop
ds
xchg
jo
cmp
dec
sbb
call
adc
xchg
jne
xchg
in
push
adc
xor
cld
lods
push
inc
mov
and
mov
and
dec
testl
or
das
in
je
mov
xor
mov
or
inc
push
cmpsb
jbe
lret
scas
in
test
mov
das
or
pop
mov
stc
mov
int
push
std
jbe
out
sub
push
mov
movsl
lock
sbb
sub
pop
inc
leave
rolb
sahf
mov
dec
sbb
jle
rcll
shll
jne
dec
pop
pop
jae
js
adcl
sbb
lods
sbb
sub
xorb
shlb
or
rorb
out
pop
add
sub
fs
sbb
push
or
and
or
push
sub
lret
push
xchg
push
or
cmp
lods
add
cmp
dec
ficompl
fcompl
fs
les
shrl
sbb
inc
push
add
push
in
mov
xchg
adc
test
sub
push
xor
and
dec
insb
sbb
mov
mov
lahf
shlb
cmc
jae
bound
int
sub
xchg
std
or
sahf
mov
je
jbe
mov
js
in
clc
mov
mov
jp
sahf
fwait
jae
out
xchg
adc
push
out
dec
leave
add
add
or
imul
test
jbe
sbb
jo
sub
cmpsl
push
rclb
movb
mov
dec
mov
inc
sarl
lds
outsb
jb
shll
dec
adc
rcrl
pop
call
sub
lahf
stos
aas
outsb
sub
pushf
nop
and
bound
aam
cmc
sbbl
jl
lds
out
cmpsb
lds
and
lcall
pop
imul
cltd
sbb
popa
dec
leave
lods
ja
pop
frstor
gs
out
test
arpl
test
lret
sub
ljmp
popf
add
jo
cmc
repnz
in
push
fstl
mov
or
cmc
add
xchg
add
pop
jecxz
loopne
adc
cmc
dec
scas
mov
push
daa
divl
stos
lods
lods
inc
mov
jbe
or
mov
ret
fsqrt
gs
imul
sbb
or
jo
cltd
repnz
inc
ds
push
add
push
cld
jne
cmp
imul
push
mov
jecxz
rcrl
sub
lods
addb
iret
pop
scas
test
iret
das
add
and
test
lcall
or
fs
stos
test
pop
sbb
iret
mov
repz
pop
mov
pop
xor
mov
sub
and
iret
out
cmp
xchg
lahf
lock
push
pop
nop
dec
test
das
and
js
enter
popa
adc
iret
ss
xchg
stos
and
in
jnp
rorl
xchg
add
push
iret
mov
sbb
out
pop
cld
mov
bound
divl
adc
out
shrb
pop
push
mov
hlt
xchg
lahf
in
mov
mov
in
mov
ljmp
mov
mov
arpl
ja
testl
les
icebp
cmp
popf
push
jg
cs
mov
and
mov
in
jmp
in
push
xlat
ret
jae
push
mov
mov
mov
jbe
das
test
xchg
cmpsl
sub
faddl
arpl
jae
mov
jg
add
cmp
lods
mov
cmpsb
add
loopne
mov
gs
std
enter
insl
hlt
mov
arpl
push
sub
loop
mov
mov
xor
lret
ret
sahf
inc
stc
lods
lahf
mov
dec
rorb
fdiv
adc
lock
and
cmp
test
pop
xchg
xor
cmc
repz
andl
or
out
pusha
adc
cltd
push
ss
daa
stc
test
mov
scas
push
mov
xchg
std
sub
clc
dec
iret
push
xchg
stc
repnz
xchg
adc
mov
xor
jns
jae
stc
repnz
adc
mov
adc
js
mov
add
sbb
mulb
idiv
mov
testl
push
out
inc
adc
repnz
xor
inc
aad
push
or
inc
ljmp
cmpsl
ss
inc
js
in
add
mov
sahf
das
xor
mov
push
pop
into
fmuls
cmpsl
lock
cmp
in
andl
push
xor
icebp
fsubr
jg
popa
mov
cli
mov
stc
mov
rol
or
jmp
push
es
add
outsl
ret
cmpb
jns
mov
loope
movsl
push
mov
mov
or
lret
cmp
jo
inc
movsb
test
sbb
push
pop
add
jb
xchg
sbb
or
lds
push
js
sbb
dec
xlat
icebp
mov
shl
popa
int
pop
and
testb
rorl
inc
dec
pop
mov
inc
push
push
cmp
cmp
stos
sbb
lock
clc
repz
lcall
inc
sbb
ret
mov
add
jns
mov
fldt
jmp
setns
adc
cmp
stos
pop
and
cli
cmp
jp
jg
movsb
push
inc
pop
es
xor
sub
sbb
ja
cli
jbe
or
jno
push
xor
adc
dec
mov
lea
fildl
mov
adc
dec
fisttpll
out
pusha
std
mov
and
or
inc
and
cmpl
and
dec
std
icebp
adcl
icebp
push
xchg
bound
je
and
outsl
push
aaa
cmc
pop
pusha
inc
andl
inc
push
cmp
dec
add
bound
xchg
push
pop
in
xor
push
movsl
or
jp
addr16
sbbb
jecxz
sub
pop
ret
sub
or
mov
pop
mov
inc
and
cmpl
invd
lcall
sub
fiadds
test
shll
fiaddl
shl
mov
repnz
cwtl
popa
jae
mov
ja
add
adc
lcall
and
jae
jno
or
fs
inc
mov
bound
cmp
push
pusha
push
andb
jno
sub
imul
adc
sub
out
ds
sub
cwtl
iret
jp
pop
outsl
outsb
int3
push
cmpps
clc
add
dec
aaa
not
push
fcmove
sub
mov
jae
jne
in
fiaddl
adc
push
idivl
out
inc
dec
in
xor
xchg
xchg
jge
insl
cmc
hlt
jecxz
cltd
pop
aad
test
jno
sbb
das
jbe
in
ret
inc
movsl
ja
inc
mov
in
xchg
push
addr16
je
rorb
sub
push
xchg
jns
adc
mov
loope
push
lahf
imul
mov
adc
push
pop
adc
xchg
sbb
inc
mov
rcrb
shr
or
sbb
ss
std
js
outsb
sub
fisubrs
jae
bound
testb
stc
sub
mov
sbb
cmp
cmp
sbb
lahf
lds
js
outsl
xor
push
insb
je
loope
cmp
xchg
xor
shrb
mov
sub
inc
jno
xchg
cmpsb
std
or
test
push
iret
test
ret
movsb
cmc
mov
jb
inc
xchg
and
clc
cmpsl
xchg
mov
lcall
out
add
sub
repnz
arpl
pop
daa
movsl
test
or
iret
inc
imul
mov
out
js
mov
nop
xor
mov
mov
aaa
and
test
dec
cmp
xor
pop
xor
imul
sbb
cmp
fistpll
push
adc
add
ss
cmp
adc
xchg
sbb
mov
xor
xor
outsb
ljmp
repz
mov
mov
ljmp
jnp
or
mov
and
ljmp
cmc
fsubrl
subl
stos
push
repnz
xorl
jle
mulb
clc
fiadds
dec
cmp
sbb
clc
xchg
aaa
fwait
jp
mov
cmp
and
sbb
in
das
mov
sbb
mov
imul
out
in
call
test
pop
jns
cmpsl
jmp
cmpsb
push
lret
inc
lcall
inc
push
sub
xor
arpl
mov
push
sbb
push
shrb
insb
jge
jg
and
lcall
cmpl
dec
in
pop
fcoms
mov
nop
in
add
fistpll
xor
push
dec
cmpsb
out
lahf
jl
or
lea
pop
shlb
mov
nop
movsb
fmulp
jno
jo
rolb
mov
enter
clc
sar
inc
repz
xchg
mov
mov
adc
movsl
adc
mov
jno
sub
jge
int3
stc
cwtl
loope
fcoms
xor
jnp
cmp
ret
and
sbb
push
fwait
push
dec
dec
in
fldl
data16
daa
insb
cmpsl
pushf
mov
gs
mov
leave
cmc
in
add
xchg
enter
and
jno
loop
push
mov
aam
add
mov
xor
xor
mov
shll
stc
cmp
sbb
mov
lods
mov
lods
mov
imul
cmpsb
xchg
xchg
enter
mov
lods
fiaddl
mov
mov
cmpsl
fisttpll
iret
sub
js
shll
enter
insl
outsl
and
pop
lods
lahf
lea
dec
in
jb
cmp
xor
es
push
pop
xor
fs
ret
mov
scas
dec
repnz
pop
lods
xor
jle
iret
jge
jmp
mov
sahf
cwtl
and
push
adc
sub
adc
fld
scas
pop
fcom
lods
xchg
sub
imul
adc
add
push
shr
xlat
ret
mov
addl
or
movsl
fadds
mov
sub
stos
ljmp
imul
add
fisubs
push
cmpsl
sub
inc
in
adc
and
pop
and
inc
fistpl
jmp
add
or
dec
cmpb
outsb
mov
push
push
add
cmp
fdivr
movsl
jns
movsb
mov
add
paddsw
mov
fisttpll
aam
shrl
mov
mov
jno
fsubl
and
adc
rclb
mov
cmp
mov
mull
dec
mov
xchg
dec
or
call
stos
push
cli
sti
mov
xchg
stos
fldcw
idivl
cmp
sub
sub
jle
sub
cmp
testb
rcrb
movsl
and
dec
call
pop
cli
xlat
dec
ret
sub
loop
cli
xor
fimuls
insl
xor
jg
mov
sti
jge
and
imul
sbb
push
lods
adc
movsl
sbb
mov
add
ret
loop
jmp
push
pop
dec
pop
push
push
add
popf
pushf
sbb
dec
add
add
lret
cmpsb
pushfw
imul
add
push
orb
cld
clc
call
push
xor
out
sbb
fsub
lret
mov
movsb
push
jnp
rcrb
popa
ds
sub
jecxz
insb
add
ljmp
test
out
sti
inc
fnstenv
mov
inc
push
invlpg
sub
push
add
test
add
iret
push
clc
stos
and
movsb
out
mov
xchg
sub
in
test
imul
mov
cmc
idiv
jp
mov
fstl
pop
iret
call
mov
fisubrl
jbe
push
cmp
dec
dec
cmc
xchg
push
je
in
inc
jecxz
enter
shlb
inc
into
das
jns
dec
nop
ja
mov
push
inc
mov
mov
xchg
ja
mov
ret
xor
das
lods
sub
popa
sbb
insl
mov
dec
ljmp
out
xchg
leave
out
mov
or
sub
jae
cltd
addl
ret
pop
jle
or
imulb
addr16
sub
push
mov
and
push
dec
das
mov
or
mov
mov
in
in
inc
jg
pop
inc
inc
mov
mov
cmc
inc
in
cld
xor
mov
jae
or
lock
push
lret
outsl
rclb
push
push
addl
sub
dec
ds
out
testl
movsb
sbb
pop
pop
jb
add
js
push
mov
fcomps
popa
jnp
pop
hlt
push
or
add
jmp
push
stos
jnp
xchg
adc
lret
sbb
outsb
out
push
mov
testl
sbb
xor
push
jge
fstpt
push
jae
mov
xor
dec
jns
mov
add
mov
xor
loope
sub
push
sbb
cwtl
sub
xor
mov
data16
daa
sbb
jg
lods
sbb
shrb
arpl
mov
sbb
fstpt
and
out
push
pop
mov
imul
popf
in
out
mov
cmp
mov
aas
pop
in
and
decl
xchg
addr16
decb
and
pop
mov
imul
jge
xor
loop
adc
mov
fdivrl
out
cwtl
outsb
icebp
hlt
mov
jb
xor
imul
fxsave
cmpb
in
in
dec
jp
push
xor
pushf
in
jecxz
add
testl
cltd
mov
xor
fdivrl
and
pop
jmp
lret
stos
adc
push
adc
test
mov
push
jmp
in
xchg
repz
and
push
push
fildl
imul
cmp
loop
stos
jne
jae
add
inc
add
inc
aad
ja
clc
jge
pop
jp
fisttpl
xchg
shrb
mov
lret
rorb
push
sub
pop
xor
in
dec
out
std
adc
ss
or
fdivp
sub
ret
out
push
js
push
xor
or
imulb
pop
imul
shl
jae
xor
mov
mov
push
pushf
insb
lods
loope
mov
mov
adc
inc
add
rcrl
imull
es
pusha
repnz
cmc
pop
enter
xlat
cmpsb
pop
push
daa
mov
sub
jmp
shll
sbb
inc
sar
xor
sub
push
push
xchg
fsubrl
in
pushf
cwtl
mov
cmp
ljmp
dec
pop
insl
xor
xchg
xchg
dec
add
rcl
mov
stos
les
mov
push
lahf
pop
mov
das
push
mov
imul
ja
pop
popa
aam
and
cmp
sub
pop
jo
fs
lods
mov
mov
ljmp
push
fidivl
mov
icebp
mov
lds
dec
movsb
sub
orl
add
pop
cmp
inc
jo
pop
cmp
es
pop
mov
xchg
inc
les
cmp
in
dec
mov
stos
loop
lcall
test
pop
adc
mov
rep
xchg
xchg
out
fsubrp
jmp
mov
addr16
gs
mov
jns
imul
lods
bound
xor
lahf
push
stc
add
sub
push
cltd
push
mov
jnp
imul
scas
aas
jno
das
adc
xchg
inc
and
ret
pop
pop
dec
xchg
cmp
nop
sbbb
lock
pop
sub
cld
andl
mov
popa
pop
inc
scas
shrb
int3
out
shlb
mov
mov
add
pop
add
mov
or
sub
aam
pop
lea
mov
outsb
enter
xchg
cmp
sub
and
in
mov
mov
inc
outsl
int
arpl
lcall
fiadds
xchg
inc
mov
ja
int
icebp
pop
jecxz
sub
and
mov
cmp
clc
test
mov
cs
add
add
leave
xchg
and
lds
xlat
pusha
inc
loopne
xlat
mov
jge
dec
jmp
imull
iret
inc
rcll
and
icebp
test
jo
mov
xor
push
js
out
sti
adc
xchg
insb
jbe
jo
mov
or
xor
icebp
test
inc
mov
loope
gs
xchg
mov
dec
pop
pushf
loope
xchg
pop
xor
mov
inc
ds
dec
data16
sti
mov
jb
mov
xorb
jnp
lods
push
add
sahf
mov
ret
pusha
jns
call
scas
rcrb
sbb
mull
out
xor
inc
subl
repnz
pop
call
xchg
shlb
mov
sar
frstor
iret
fstpt
mov
loop
cmpsb
jg,pt
jecxz
mov
adc
in
pop
jo
inc
bound
ljmp
cmpb
jge
pop
sub
mov
sbb
aad
xchg
adc
aaa
int3
pop
out
or
lret
lahf
dec
gs
orb
adc
pushf
mov
mov
ja
insl
cld
push
inc
fisubl
into
iret
xor
insl
repz
xor
int
push
outsl
fistpl
lea
mov
sahf
dec
inc
inc
cmc
push
jo
and
sub
jmp
jmp
or
repz
adc
gs
loopne
add
pop
data16
movsl
ror
cmpsl
jns
and
gs
lods
iret
and
adc
in
pop
lahf
mov
cmpl
pop
addb
adc
dec
xor
inc
sub
adcb
or
mov
lock
pop
adc
mov
fidivrs
adc
mov
les
cli
dec
bound
orb
int3
mov
xor
mov
pop
mov
jecxz
loopne
outsl
push
and
imul
mov
das
addr16
lcall
pusha
jp
and
xchg
mov
inc
in
xchg
mov
ss
jns
cmp
jne
ljmp
and
or
xor
icebp
test
lods
iret
xchg
or
push
inc
pop
cmp
imul
or
jne
sub
xchg
sub
negl
xor
inc
cmp
inc
inc
xor
or
inc
pop
loopne
pop
jae
xor
dec
jo
insb
or
lcall
icebp
and
xor
inc
aam
lods
pop
int3
adc
add
push
or
and
dec
sbb
push
mulb
mov
cmc
add
adc
dec
adc
rcl
jb
shlb
jle
add
dec
cltd
call
div
decb
cmp
adc
jne
jae
add
faddl
adc
inc
fldenv
testl
cmp
xor
mov
or
mov
xchg
xchg
out
call
mov
push
pop
out
jno
dec
pop
inc
push
insl
gs
add
shll
add
sti
mov
lds
and
xchg
jo
inc
loopne
mov
sub
mov
mov
rolb
mov
shll
repz
mov
imul
ds
push
fisubrl
insb
bound
cld
repnz
xor
add
xchg
notb
xor
and
das
test
push
xchg
xor
xchg
ljmp
cmp
mov
insb
mov
mov
pop
pusha
lods
in
les
add
jg
mov
sti
mov
mov
in
lret
mov
push
pop
ret
lds
out
inc
lods
push
or
and
shrl
push
ret
xchg
stc
popaw
or
out
out
pop
inc
ja
adcb
pop
bound
pop
enter
movsl
mov
out
mov
rcr
dec
pop
xchg
dec
xor
fidivl
pop
mov
mov
jl
cmpsb
mov
repnz
dec
leave
lret
into
sbb
cwtl
andl
dec
and
inc
je
pushf
test
loope
push
cmp
pop
and
repz
and
call
cmp
loopne
test
icebp
xchg
pusha
mov
sarb
jbe
inc
pop
gs
cwtl
fisttpll
jae
cmp
pop
jmp
sbb
mov
in
lret
add
lock
out
add
sbb
jno
or
adc
fs
aad
fs
insb
jae
dec
out
lock
int
dec
inc
dec
mov
inc
orl
shll
inc
mov
adc
inc
mov
push
addr16
fnstenv
mov
and
movsb
sub
push
out
pop
imul
sarl
sbb
insl
jge
dec
sahf
jecxz
call
lcall
in
dec
mov
push
hlt
les
jns
in
ret
pusha
lods
popa
xchg
loop
xchg
movsb
mov
push
xorb
data16
cmc
popa
in
push
sub
pop
xchg
in
dec
les
or
scas
ljmp
aaa
ret
iret
lcall
lar
enter
addb
outsb
pop
xchg
pop
pop
arpl
sub
cmp
adc
mov
jno
cld
out
loopne
push
adc
and
xlat
mov
lods
jmp
cmp
sbb
insl
arpl
xchg
iret
cli
add
jno
sub
iret
hlt
clc
pop
mov
movsl
mov
insl
divb
fsubrl
imul
inc
lahf
sti
in
shrl
dec
cmp
or
sub
out
jb
or
xor
int3
sbb
xchg
push
in
or
inc
out
cmpsb
test
inc
outsl
push
mov
insb
cmp
add
icebp
pushf
push
mov
movaps
mov
popa
pop
cli
pop
sbb
push
inc
xchg
lea
cltd
lea
lock
sbb
sti
js
mov
je
mov
pushl
pop
aad
fs
pop
cmp
xlat
subl
cltd
sarl
sbb
mov
int
out
clc
push
pop
xor
les
arpl
in
imul
mov
lret
outsl
ljmp
loope
lock
add
mov
std
mov
roll
das
mov
jnp
out
mov
mov
mov
xchg
mov
xchg
inc
arpl
push
les
mov
jae
xchg
subb
cld
insb
leave
inc
add
mov
adc
fs
cmp
xchg
sahf
fsubrs
enter
dec
mov
lock
and
lret
loopne
gs
outsl
sub
push
pshufw
repz
cmp
xor
js
mov
inc
or
mov
pop
xchg
mov
out
insl
aaa
std
jle
mov
scas
cmp
fidivrl
dec
iret
adc
adc
lret
in
in
sub
or
adc
sbb
out
cmp
jg
cmp
or
test
adc
popf
jmp
into
mov
or
xor
push
lds
push
movsb
in
cmpsl
fs
push
jns
lret
mov
fdivl
das
test
adc
imul
jo
ret
repnz
and
iret
cmpsl
mov
fcompl
xlat
mov
mov
push
std
xor
jbe
and
fwait
push
cmp
sbb
adc
add
jl
cmc
fnstcw
jg
push
lretw
fisttpll
push
jg
push
test
outsl
adc
mov
inc
inc
adc
in
shrl
sbb
cwtl
int
test
stos
ja,pt
js
xorb
and
lods
aas
pop
out
adc
out
xchg
xchg
stc
in
insl
ss
lret
js
sarb
out
inc
repz
jge
fidivrl
cmpsb
xor
xchg
nop
pop
insl
out
mov
mov
dec
mov
lcall
repz
sahf
ljmp
fucom
or
fdivr
inc
std
or
das
out
adc
pop
sub
xchg
fisttpl
adc
jmp
int3
or
es
xchg
jmp
dec
jge
add
ds
jns
push
ds
mov
cmp
dec
sbbb
stos
iret
jp
jl
cmp
jbe
xchg
stos
test
ljmp
mov
cmpsb
lcall
mov
mov
loopne
das
fildll
fs
sbb
mov
arpl
and
sub
xchg
sbb
mov
xchg
mov
mov
cmp
ret
mov
adc
cs
lods
mov
push
push
fimuls
pusha
push
xchg
pop
push
pop
inc
adc
inc
addr16
inc
push
xor
mov
xlat
mov
cld
sbbl
dec
std
subl
loop
push
or
push
clc
fidivrl
rolb
mov
je
mov
movsl
sbb
fildll
idiv
mov
and
aam
mov
stos
push
dec
imul
dec
negb
test
mov
add
jg
inc
xor
push
mov
stc
sbb
stc
push
sbb
jecxz
add
jl
test
sbb
fmul
add
adc
adc
punpckhdq
arpl
in
aas
popf
inc
imul
dec
inc
jnp
imul
add
std
out
cmp
dec
and
scas
cmc
dec
repnz
pop
inc
stos
inc
hlt
mov
out
lret
pusha
jo
mov
rolb
pop
push
mov
or
jecxz
xlat
jb
shrl
mov
mov
sarl
xor
sahf
pop
jecxz
jo
jmp
and
xchg
daa
loop
test
lea
jge
inc
mov
aad
into
jns
push
and
arpl
mov
mov
push
pop
inc
sub
inc
mov
das
sarb
outsb
mov
adc
rorl
sub
popf
cmpsl
dec
cmp
sti
sbbb
cld
inc
inc
sub
xchg
add
xor
imul
popf
jp
dec
push
testb
iret
sbb
jecxz
vpcmpgtb
sub
out
arpl
fisttpll
into
cld
outsb
cmp
mov
pop
mov
sub
insb
xchg
test
jl
in
xor
mov
mov
sbb
mov
enter
inc
add
xchg
test
mov
test
fistpll
mov
arpl
push
repnz
icebp
popf
fcomi
stos
xchg
mov
fisttpll
loop
cli
push
repz
pop
xor
jmp
mov
cmpb
test
sahf
decb
xor
dec
rcl
repnz
pop
cmp
add
mov
out
push
rcll
fabs
testb
mov
push
mov
subl
out
rcll
push
ljmp
test
cmpsb
pop
pop
inc
cmp
insb
call
inc
out
or
mov
int
in
mov
stos
add
test
mov
xlat
jb
cmp
dec
adc
mov
idivl
ds
lods
das
aaa
push
test
mov
iret
or
fucomp
pop
rclb
movsl
les
shr
lret
adc
jmp
inc
aad
scas
in
push
jecxz
pop
and
loopne
dec
fnstcw
fbstp
mov
mov
cltd
lock
addr16
sub
cmpsl
aam
dec
mov
cmp
inc
ja
sti
xchg
test
ds
and
inc
out
xchg
mov
sub
loop
outsl
pusha
jo
pop
pop
hlt
inc
mov
mov
dec
jge
test
aaa
pop
cmpsb
les
bound
jae
cmc
and
repnz
inc
sbb
imul
adc
and
inc
add
lahf
cltd
mov
or
adc
lret
mov
inc
mov
push
and
loope
int3
hlt
pop
jns
inc
mov
and
mov
rcrb
out
and
cmp
xor
push
sbb
xchg
add
repz
or
mov
push
xor
ljmp
in
xor
std
push
jb
ljmp
and
dec
xor
fisubrs
test
fildll
imul
mov
int
or
shr
cmpl
arpl
cs
sub
je
scas
ss
xor
jmp
sbb
pusha
out
or
cwtl
bound
xchg
in
clc
push
es
sahf
gs
ss
stos
mov
data16
and
mov
sbb
jb
je
mov
xchg
or
pop
lea
movsb
sub
mov
jno
cld
and
pushf
xchg
inc
sbb
adc
xlat
lret
pop
pop
push
inc
mov
ljmp
push
fistl
aam
fwait
jo
inc
add
inc
inc
xbeginw
int
mov
scas
fwait
sbb
mov
lods
mov
orb
fistpl
jae
mov
sahf
imul
xchg
mov
loop
jg
push
fstpt
add
jnp
int3
sub
hlt
test
movsb
add
ficompl
push
hlt
fsubrl
sbb
clc
xchg
ret
push
push
frstor
outsl
adc
int
xor
mov
imul
mov
xor
mov
xchg
and
dec
testl
hlt
ds
fs
dec
adc
cmpsl
mov
add
and
jl
xchg
mov
add
inc
rorb
mov
add
int3
mov
les
je
insl
jl
scas
mov
sub
xor
mov
pop
mov
ds
pop
addr16
jge
mov
inc
clc
push
daa
out
mov
adc
dec
inc
cltd
addr16
sahf
mov
ss
js
sbb
add
mov
dec
push
repz
and
pop
cwtl
sub
cmp
sbb
cmp
mov
je
pop
xchg
mov
or
mov
clc
mov
outsb
mov
cmp
inc
sbb
adc
push
cli
ficompl
test
dec
stos
adc
pop
cmpsl
xchg
out
dec
push
cmc
cmpsb
sbb
pop
dec
inc
inc
fiadds
sub
mov
mov
mov
mov
js
arpl
mov
push
pushf
xor
in
out
inc
lds
cmp
std
mov
cmc
or
dec
sbb
cmp
popa
sbb
pop
and
popa
push
data16
xchg
inc
xchg
jl
imul
sub
cmp
aaa
out
stc
js
add
shll
pop
jmp
out
out
add
popl
cltd
sub
ds
loope
cmp
xor
jg
mov
ffree
ret
popf
jns
pop
je
je
movsb
dec
mov
and
not
movsl
jp
fistps
fsubs
shl
cmp
add
push
aad
pop
xchg
pop
add
stos
lret
sbb
movsl
adc
cld
or
ds
push
mov
lock
xor
shr
aas
xlat
mov
dec
and
or
cmc
es
test
jle
sub
mov
aad
outsb
loope
outsb
ljmp
fcmovne
repz
xor
mov
inc
fidivrl
and
jnp
stc
cmc
mov
fisubs
add
add
inc
mov
xor
or
out
popa
hlt
push
mov
lcall
fcoms
outsb
insb
and
fwait
mov
mov
push
sub
lea
pop
xor
mov
rorl
fisttps
jae
jmp
std
jl
mov
loopne
mov
and
fdiv
add
stos
lahf
test
mov
cmp
xchg
or
sub
jp,pt
pushf
mov
ljmp
leave
stos
push
fiaddl
sub
pusha
xchg
out
into
mov
gs
daa
int
iret
subl
test
sbb
push
push
inc
sbb
mull
shrl
lods
mov
inc
loop
orb
xchg
adc
cmp
mov
es
imull
xchg
mov
xor
jbe
or
jae
xor
stos
adcl
ret
leave
xor
xchg
jmp
jmp
or
pop
aaa
jmp
sbb
sahf
push
fwait
xchg
test
rcrb
dec
and
add
adc
xchg
xchg
mov
stos
jmp
inc
jno
leave
enter
push
cmc
mov
jge
mov
add
fwait
lcall
push
and
push
inc
jne
lds
xor
into
fstpl
jo
push
xchg
mov
pop
and
adc
push
pop
insl
dec
mov
out
adc
adc
mov
jecxz
jne
mov
movsl
scas
lods
add
or
rorb
mov
xchg
mov
add
pop
mov
aad
es
out
push
mov
xlat
mov
push
and
cmc
mov
ds
xchg
xchg
lods
cld
in
call
data16
ds
test
dec
lds
lcall
outsb
fsubs
jmp
fdivl
addr16
jnp
lods
rcl
dec
mov
cmc
mov
es
aas
xchg
stc
inc
cmp
call
out
cmpsl
cmp
aad
cmc
jno
repnz
add
pop
add
enter
fstpt
pop
sbb
in
and
xor
cwtl
jo
loope
pop
lret
xor
jns
out
mov
rorb
imul
push
and
cmp
sbb
lock
js
fistpl
dec
test
ret
lods
cwtl
movsb
mov
clc
rcr
mov
jo
lds
xor
iret
fwait
jno
stos
inc
int3
lahf
pop
pop
fisubl
cmp
xor
cmp
in
not
cs
lret
in
das
cmp
enter
sbb
jbe
rorl
mov
and
popf
pushf
repz
addr16
lret
mov
outsl
cmp
out
into
lea
arpl
xor
pop
in
aad
jo
inc
xor
mov
sbb
cwtl
inc
cwtl
pop
mov
mov
pop
or
test
xlat
and
andl
dec
pop
fwait
roll
push
adc
or
insl
cmp
fisubrl
rcl
fisubrl
sbb
push
sub
repz
insl
pusha
icebp
pop
cld
mov
jb
cmp
ljmp
adc
pop
rol
in
fsubl
cmp
xchg
out
fcomip
inc
push
test
sub
push
push
pop
in
push
rclb
jecxz
push
out
in
testl
or
sub
mov
in
jno
inc
js
loopne
ds
out
in
filds
int
mov
or
fs
dec
fldl
out
test
daa
hlt
sub
inc
pushf
popf
pop
arpl
xchg
dec
xchg
jnp
jb
into
icebp
out
inc
inc
nop
psubd
mov
pop
mov
cwtl
bound
xchg
pop
jo
mov
repz
sbb
jmp
pop
push
mov
xchg
js
imul
pop
sub
shlb
mov
sbb
sbb
shlb
jl
inc
aas
jl
and
repz
add
and
in
or
fwait
jmp
inc
mov
push
add
lcall
fcomps
adc
push
xor
cmpsb
lret
shrb
pop
xor
jno
rcll
xchg
jmp
dec
jg
xchg
ljmp
sbb
insl
adc
cmp
xchg
cwtl
fwait
xchg
mov
xchg
dec
stc
fbld
jne
fcom
xorl
lahf
cltd
cmp
pop
mov
inc
pop
xor
enter
pop
lret
mov
cwtl
int
out
sub
adc
xor
xchg
inc
dec
sbb
sbb
adc
repz
push
in
lods
dec
dec
jl
jne
push
xor
imul
inc
sub
adc
push
or
jns
push
xorl
test
into
leave
dec
push
mov
jb
xchg
ja
aad
shll
aad
shrl
dec
ret
insl
imul
sbb
push
push
fcmovbe
inc
into
inc
mov
arpl
dec
mov
insl
xor
movsb
ret
insl
push
lret
int
inc
pop
idivl
add
decl
rolb
and
aas
add
addl
in
popf
clc
and
clc
cmp
fs
cmp
addr16
test
add
mov
jle
mov
cmp
jbe
ja
jae
sbb
sub
data16
popf
out
or
insb
jle
jno
push
xchg
jmp
pop
jmp
aam
push
push
pushf
out
push
jns
call
mov
mov
adc
mov
dec
inc
sub
mov
scas
xor
push
fs
or
add
leave
nop
mov
imul
int3
jo
push
mov
fisubrl
jmp
lret
data16
mov
out
dec
lcall
pop
push
sbb
sahf
sbb
test
cmc
cmp
mov
adc
mov
xor
pop
add
fld
shlb
test
sub
cmpsl
in
mov
jmp
stos
dec
xchg
xor
xchg
lods
dec
enter
cwtl
xchg
push
mov
lea
lret
mov
mov
and
sbb
testl
ss
fsubrs
or
enter
sbb
adc
fidivs
mov
divl
std
sbb
add
cli
popf
insl
inc
lcall
push
inc
repz
in
jg
clc
inc
inc
mov
insb
lods
xor
clc
inc
or
gs
sbb
movsl
cmp
jns
xor
sbb
hlt
cmp
xchg
out
stc
pop
clc
test
in
out
jp
mov
cmpsb
adc
pop
push
xchg
mov
and
mov
fistpl
mov
add
push
cmp
test
in
xor
push
in
xor
mov
push
xchg
add
loopne,pt
mov
push
xorb
das
jns
xchg
mov
push
jl
out
into
xchg
inc
orl
std
inc
push
cli
ror
insl
out
lods
ja
sub
mov
jo
fisttpll
mov
mov
push
cmpsl
jno
or
or
dec
jne
dec
imul
cmp
pop
push
xchg
addl
stos
ja
lods
gs
sbb
and
lea
repnz
mov
xorb
jmp
lret
cld
out
arpl
cmc
mov
xchg
stc
xor
in
cmp
cld
cmp
sbb
xor
add
ret
mov
jle
mov
inc
pop
or
mov
test
fabs
dec
loopne
pusha
pop
add
arpl
fs
out
push
jbe
inc
scas
or
lock
orb
add
push
scas
and
pop
sahf
mov
jo
mov
fs
bound
cli
arpl
lock
push
in
pop
add
inc
hlt
sahf
push
test
cmc
push
xchg
fcoms
pop
daa
aas
loopne
flds
arpl
push
into
scas
and
mov
imul
sbb
jmp
xchg
fildll
je
pop
xchg
dec
or
fbstp
inc
xor
leave
mov
adc
mov
jge
stos
enter
repnz
and
lret
aas
mov
pop
sbb
fwait
call
aas
lret
mov
pushf
cltd
mov
call
xchg
pop
or
push
insb
mov
sub
dec
and
jp
popf
in
push
popf
ds
lcall
popf
or
and
in
cmp
imul
push
fs
cli
fsubs
int
jle
cmp
ss
or
in
adc
inc
jbe
inc
lds
push
daa
pushf
cmp
mov
mov
mov
adc
xorb
scas
out
mov
sbb
xchg
inc
fcoml
aad
mov
push
js
jecxz
xchg
gs
pop
cmp
fdivrp
push
enter
fwait
aad
jae
pop
ret
ja
pop
inc
fildl
sub
mov
call
repnz
jl
xlat
andl
push
aas
xchg
fistl
dec
sub
cmp
mov
add
ret
insb
cmp
mov
adc
outsb
inc
mov
add
and
push
gs
jb
jecxz
sub
loop
mov
push
in
cmc
lods
sub
add
add
jle
popf
out
call
mull
mov
aaa
fcomps
fistl
dec
call
mov
out
ja
xor
cmp
add
cmp
jo
cwtl
outsl
sbb
aam
inc
push
mov
or
push
xor
mov
or
mov
jl
cmpsb
cmp
in
std
out
notb
outsb
inc
cmp
mov
pop
push
xchg
repnz
dec
jmp
pop
dec
push
and
arpl
mull
movzbl
mov
in
and
mov
leave
lea
sbb
pop
lcall
mov
popa
icebp
fnstsw
stos
cld
daa
or
cmpsl
adcl
lods
ljmp
jbe
jge
loop
jl
shrl
add
cmc
mov
scas
arpl
addr16
xor
adc
stos
mov
xchg
xchg
imul
jae
lret
jbe
call
pusha
and
stos
aam
jne
sbb
mov
shl
cwtl
push
dec
cli
hlt
cli
dec
lahf
scas
rorb
int
cmpsb
cwtl
movsb
mov
push
adc
ja
or
adc
fcomp
or
push
xor
mov
jp
cmpsb
xor
add
int3
sbb
aam
data16
orb
aam
loop
mov
jmp
scas
pop
sbb
inc
loope
orb
xchg
inc
sub
sub
lret
jl
std
pushf
fsubrs
mov
dec
push
fnstsw
loope
push
pop
sahf
jle
test
call
cmpsb
adc
push
and
es
and
roll
push
jl
inc
cmp
ljmp
test
pop
mov
movsl
adc
add
movsb
push
scas
popf
mov
pop
mov
into
jg
outsb
sbb
mov
jmp
test
bound
cmp
bswap
push
leave
or
insb
mov
call
aas
and
ret
sub
stos
adc
cmp
lods
push
mov
ss
or
dec
adc
stc
mov
enter
repnz
ja
push
sub
jno
cmp
sar
fnstenv
ret
mov
andl
repz
les
pop
shl
loope
pop
adc
fisubrs
adc
gs
fisubrl
jnp
mov
popf
or
mov
inc
mov
hlt
xor
push
jp
cmp
adc
mov
lret
push
add
push
or
xor
push
std
and
lret
pop
data16
mov
sbb
imul
add
cld
mov
adc
xchg
or
out
adc
add
xchg
push
call
jg
pusha
jne
xchg
mov
xor
je
push
aas
jp
add
sahf
jge
or
pop
xor
ss
sbb
cmp
jbe
imul
mov
sti
lcall
and
insb
pusha
sbb
dec
fnstcw
int
fimull
push
mov
inc
push
jbe
jo
xor
adc
cs
mov
sub
cmp
xor
xlat
es
mov
imul
cmpsl
xchg
pop
fsubp
cmc
repnz
jnp
and
sbb
inc
inc
repnz
mov
jns
dec
dec
pop
and
enter
test
addr16
je
lods
lret
ss
sbb
loope
movl
mov
std
cmp
sub
mov
cs
pop
cmp
mov
sti
sti
or
pop
and
mov
mov
hlt
icebp
ss
ficompl
push
lods
dec
xchg
pop
sbb
call
jns
fsubrl
pop
loop
xchg
xchg
in
stos
adc
sar
push
jb
push
cmp
pop
lret
test
dec
gs
hlt
cmp
outsl
fcmove
xor
jecxz
cmc
setle
xchg
es
pop
rolb
insl
mov
mov
xor
mov
mov
rcll
inc
out
out
mov
sbb
pop
jmp
jb
lock
enter
jp
fstl
stc
dec
ret
imul
pmulhw
xchg
sub
sub
sub
pusha
int
and
xor
test
int3
movsb
push
arpl
mov
inc
aam
cmp
adcb
sub
add
push
rcl
mov
clc
mov
out
and
test
lcall
cltd
pop
dec
mov
fisubrs
movsl
mov
cmp
into
arpl
xchg
fidivs
shll
or
or
xlat
cwtl
push
xor
sarl
call
inc
inc
ljmp
pop
arpl
pop
push
or
and
daa
fstps
mov
cmp
adc
mov
fwait
push
outsb
pop
inc
push
vpsubsw
push
jno
pop
orb
movsl
pushf
sbb
add
cmp
adc
fisttpll
repz
cmc
nop
jns
aaa
imul
addr16
shrb
xchg
cmp
lods
jmp
mov
pop
add
rcll
xor
cmp
sti
jb
cwtl
idivb
int
cmpsb
jmp
jnp,pn
or
sub
mov
mov
scas
sbb
lret
test
jno
or
inc
sti
scas
mov
adc
decl
adc
add
in
jl
mov
in
daa
add
pop
dec
out
repz
aam
nop
into
lret
out
push
fadds
sahf
fsubrl
fisttps
imul
add
and
fistl
data16
and
nop
and
jne
xchg
hlt
out
adc
cmp
mov
xor
rolb
pusha
jmp
adc
push
mull
add
and
loope
inc
and
add
mov
pushf
or
aas
inc
jge
rcr
enter
xchg
inc
mov
cmp
cmc
mov
mov
addr16
js
jnp
pushf
mov
jae
js
and
pop
scas
mov
in
es
and
lea
ja
lea
push
jmp
call
outsl
pop
xor
sahf
lods
adc
push
add
loopne
mov
js
dec
push
pop
fcoms
in
outsb
add
test
pop
xlat
cmp
addr16
cmp
stos
sbb
es
loopne
push
test
sbb
mov
repnz
imul
cmpsb
std
push
mov
mov
dec
dec
in
or
mov
add
cmp
mov
incb
ficomps
rorl
adc
mov
movsl
mov
mov
mov
in
fcmovu
lcall
shl
jp
jg
dec
test
out
mov
pop
mov
mov
push
mov
mov
lds
fs
roll
test
mov
mov
mov
icebp
push
fmul
out
testl
push
xchg
fcmovnb
loopne
jnp
test
mov
pop
xor
enter
mov
ret
mulb
insb
xchg
stos
jle
mov
push
xchg
pop
enter
dec
data16
xchg
inc
cld
aaa
add
lea
lret
mov
je
pusha
imul
xchg
addr16
xchg
jge
mov
shll
aaa
cmp
jg
imul
mov
outsl
push
cmpsb
cmpsb
outsb
iret
jae
mov
lods
int
jge,pt
pop
mov
and
fisubrl
mov
mov
jo
dec
lea
dec
cmpl
mov
aad
popf
fadds
xchg
and
jmp
fsts
leave
push
dec
ret
dec
cmp
cmp
push
push
test
scas
aaa
lret
dec
mov
push
mov
fnstsw
xlat
xor
mov
push
clc
paddw
jmp
out
push
mov
sub
dec
aas
jmp
add
push
bound
jo
stc
mov
imul
inc
js
stos
add
repnz
pcmpgtb
repnz
rol
and
mov
pop
mov
stos
out
cmp
mov
mov
rcl
in
xchg
leave
test
fmuls
ret
adc
or
imulb
arpl
adc
cmpl
dec
sub
popa
bswap
pop
enter
sbb
ljmp
or
cli
adc
pop
mov
cmpsb
sub
sbb
pushf
sub
pop
lea
sbb
mov
out
mov
inc
repz
loopne
push
sti
scas
sbb
xchg
inc
out
mov
lcall
mov
daa
js
nop
xchg
cmpsl
das
sarb
xor
or
xor
pusha
and
cmp
cltd
lods
sti
adc
das
lcall
inc
pop
add
sub
subb
loopne
nop
aam
mov
xor
in
pop
inc
lcall
in
lods
inc
test
lret
jp
fs
adc
cltd
out
xchg
pop
and
dec
xor
into
and
aad
jle
leave
ret
cld
and
adc
scas
jne
gs
std
inc
xchg
jo
cld
xchg
or
adc
fnstenv
mov
xchg
repnz
xor
dec
and
aaa
jecxz
add
lds
mov
and
cmp
fsubp
and
jle
xor
ret
add
mov
sub
stos
mov
jge
jge
in
xor
orl
in
push
stos
and
out
lods
imul
in
push
mov
scas
xor
mov
jo
push
push
hlt
pop
das
push
fucom
iret
xor
xor
inc
sub
jno
mov
stos
cmp
insb
mov
xor
mov
sbb
popa
sbb
test
jge
pushf
push
xor
das
push
add
paddd
push
xor
xor
adc
fdivrs
aam
ja
and
pop
push
xchg
xchg
int3
mov
jne
xor
inc
cmpsb
idivb
push
in
sti
xchg
mov
pop
push
popf
mov
push
dec
in
cmp
pop
dec
out
mov
sbb
dec
pop
fstpt
or
out
pushf
bound
stos
scas
sbb
stc
push
inc
mov
adc
js
dec
pop
into
outsb
add
test
sahf
les
jne
adc
out
mov
pop
pop
jne
sbb
rcll
mulb
adc
iret
pop
fmul
jnp
adc
insl
inc
push
or
dec
mov
dec
es
lods
pop
test
js
adc
jae
add
push
cld
cmp
icebp
sti
inc
lret
repnz
ja
and
addr16
sbb
orl
pop
int3
mov
push
adcl
mov
dec
mov
pop
add
pop
data16
xor
xchg
xchg
lock
mov
out
fsubp
icebp
inc
ja
sbbl
pop
je
and
cmp
cmp
add
aas
mov
stc
jns
xor
dec
and
cmpsl
push
cmp
jmp
ss
xchg
adc
aas
cmpsb
cmc
pusha
adc
or
out
mov
xchg
mov
stc
xchg
repz
fmulp
and
or
pop
sbb
xchg
push
pop
call
rcll
icebp
adc
insb
repnz
or
test
stos
lret
xor
clc
jl
xlat
fcmovne
divl
test
push
lods
adc
dec
insb
push
stc
daa
sti
jne
cli
out
push
test
subl
movsb
sub
xor
push
nop
dec
ss
and
xor
rcl
mov
lret
rorl
cmp
mov
lock
push
test
movsb
pop
jg
jge
cli
lcall
es
test
ljmp
insb
rorl
sbb
or
lock
in
and
fsubrl
add
inc
or
nopl
sbb
inc
and
cmp
cmp
adc
inc
cs
lock
mov
jecxz
jecxz
sub
loope
mov
js
push
daa
sahf
jno
xor
outsl
mov
popa
and
loope
add
pop
and
cmpsl
pop
aam
nop
xor
cwtl
loopne
data16
xchg
pop
add
push
popf
pushf
jge
push
xchg
idivb
loop
jne
loope
loop
lea
icebp
lea
fs
scas
icebp
leave
lods
testl
adcl
mov
lock
rolb
mov
sarl
in
movl
cmp
jl
push
inc
mov
popa
outsb
push
test
add
mov
jmp
adc
push
xchg
pop
test
jl
lock
dec
cmc
adc
std
mov
data16
jecxz
push
imul
rol
push
push
cmpl
add
cltd
cmpsl
clc
insl
call
sub
mov
fildl
insb
sub
xorb
pop
adc
mov
dec
pop
dec
xlat
stos
and
hlt
jbe
mov
icebp
sahf
fmull
test
push
int3
inc
push
and
das
pop
jno
imul
xor
cmpsl
mov
inc
add
mov
scas
icebp
and
jmp
lods
dec
or
sbb
push
or
leave
adc
push
inc
out
mov
push
xchg
cmp
push
sub
rol
or
fstpl
negb
les
sbb
push
ds
ret
shl
int
inc
add
pushf
subl
inc
adc
jo
xchg
sarl
icebp
jne
sub
das
push
add
sub
repnz
movaps
pop
inc
int3
pusha
xchg
pop
aas
push
sub
dec
adc
in
int
rcrl
in
hlt
add
mov
jl
lcall
sub
adc
and
and
cs
inc
xchg
iret
cmpsl
or
loop
movsl
inc
push
pop
add
and
lcall
imul
mov
mov
and
xor
xor
mov
push
scas
and
jl
dec
mov
in
jbe
dec
fcomps
movsl
stos
pop
xrelease
cs
pusha
sarb
mov
cmc
ljmp
inc
sbb
xlat
repz
imul
xchg
push
test
and
dec
sbb
inc
in
mov
add
aam
popf
jne
lods
pop
loope
cmp
imul
psubsb
call
push
sbb
popa
fcmovb
shl
sub
mov
pop
loope
inc
pop
and
aad
add
push
fildll
sbb
mov
cmp
mov
mov
mov
jecxz
xchg
xlat
sbb
pop
outsb
mov
cli
push
jae
inc
xor
movsb
and
fsubr
call
fisubl
adc
sbb
sets
scas
dec
paddusw
lock
inc
adc
mov
xchg
data16
or
sub
dec
adc
inc
pusha
xor
je
cmp
and
out
inc
loopne
jae
add
sahf
out
mov
fcmovu
je
mov
scas
mov
stc
dec
xchg
or
add
aas
cmp
test
int3
imul
xchg
test
je
loope
pop
lods
pusha
fsub
jge
push
cmc
int3
dec
movsb
pop
pop
pusha
ds
mov
adc
das
sbb
pop
push
pop
std
sub
mov
xor
jo
dec
inc
mov
aaa
pop
ja
mov
add
mov
filds
cld
in
leave
loopne
fidivs
leave
loop
mov
nop
ss
aam
loopne
mov
inc
mov
daa
fisubs
jbe
push
pop
cli
out
fwait
xor
lret
pusha
into
fwait
add
ja
jno
test
leave
cmpsl
fldenv
mov
push
cmp
pop
or
imul
outsl
inc
dec
jg
iret
mov
icebp
enter
out
cwtl
adc
call
dec
repnz
push
and
out
insb
xor
fmulp
xchg
pop
cmp
and
and
xlat
rcrl
xor
leave
insb
cwtl
cli
les
mov
loopne
sub
adc
out
pop
jne
xchg
xlat
pop
adc
je
js
cmp
and
adc
lods
movsb
inc
fisubl
sub
in
test
adc
jl
jno
or
inc
js
test
sub
jg
mov
call
repnz
enter
seto
adc
jl
shrl
mov
xchg
movsb
int3
lret
inc
mov
xchg
and
adc
rolb
test
cs
cs
icebp
scas
jns
xchg
add
push
mov
mov
call
stos
mov
xchg
add
xchg
jmp
add
shlb
push
pop
out
mov
jno
jge
push
jo
das
outsb
mov
daa
mulb
xor
push
sub
pop
mov
push
adc
outsl
jecxz
add
adc
cmp
arpl
sub
lea
mov
sbb
dec
inc
cld
xchg
pop
clc
push
cmp
push
scas
inc
push
pushf
push
xchg
mov
out
mov
mov
mov
nop
mov
fdiv
sub
add
pop
aam
ret
push
rcl
mov
inc
jb
repz
xchg
pop
cmp
hlt
pop
loope
mov
or
pop
pop
jnp
jnp
dec
sub
cld
dec
out
icebp
fstpt
pushf
xlat
daa
cmpl
jmp
cmpsl
pop
mov
fcoms
dec
dec
dec
int3
pop
nop
dec
das
scas
outsb
loopne
lcall
mov
stos
dec
pop
in
pop
pop
add
mov
aas
pop
pop
push
stos
nop
sub
inc
jle
jmp
xchg
outsb
fcomi
lods
pusha
jl
mov
and
pop
cmp
nop
sbb
cmp
and
leave
dec
clc
movsl
lahf
pop
dec
arpl
scas
cltd
mov
shlb
xchg
pop
js
add
xor
lods
fcoms
mov
cwtl
jbe
sbb
test
mov
lock
inc
gs
test
cmp
mov
gs
cltd
outsl
pusha
fdivrl
adc
shrl
ret
shr
pop
test
and
es
pop
mov
arpl
xor
addl
nop
and
inc
loope
out
mov
fst
jmp
dec
testl
pop
das
dec
movsb
leave
mov
mov
xchg
xor
ret
in
out
sub
adcb
push
call
cltd
pop
cmp
loope
push
dec
js
imulb
and
push
test
je
jne
icebp
test
adcb
in
rcll
push
push
stos
push
mov
inc
cmp
jbe
xor
mov
sbb
jg
sbb
scas
adc
mov
test
jmp
or
xor
mov
fs
outsb
cmpsb
and
js
xchg
push
rcrl
pusha
out
or
dec
jbe
in
xchg
in
add
dec
pop
push
imul
add
sub
or
stos
pop
push
or
push
and
mov
push
and
lret
jmp
enter
xchg
mov
pop
jno
dec
jl
push
jbe
dec
lds
rcll
jle
adc
adc
gs
outsl
in
push
js
lods
mov
ja
mov
xor
push
or
push
movsl
cwtl
mov
in
out
and
fldenv
jge
dec
mov
stc
in
test
js
lcall
setno
insl
jbe
es
or
add
and
lcall
ss
push
or
dec
gs
mov
dec
sub
out
sub
adc
add
cltd
mov
insl
xchg
sub
dec
mov
rorb
arpl
xchg
rorl
pushf
sbb
push
pop
call
mov
mov
gs
fsts
or
jae
jo
cwtl
jns
push
inc
jg
xchg
lret
pop
jg
mov
repz
aad
stc
notl
pop
out
fldln2
push
cld
rorl
jecxz
scas
fpatan
add
gs
mov
jl
outsb
mov
sbb
adc
rolb
adc
cmp
jecxz
dec
inc
pop
mov
xchg
aad
repnz
sub
jecxz
cltd
push
pusha
dec
testb
sub
mov
aam
lea
fisubl
loopne
fwait
jge
out
mov
pusha
shl
pop
pop
mov
mov
out
mov
push
add
push
ret
push
daa
or
sbb
mov
aaa
ja
pop
or
dec
and
push
rcrl
cmpsb
push
out
inc
cmp
ja
nop
ds
and
gs
scas
js
shr
repz
pop
arpl
dec
and
shlb
jne
and
ret
add
into
add
fsts
push
rclb
inc
ss
mov
in
addr16
test
daa
xor
jae
mov
inc
sub
out
mov
insl
mov
ret
test
int
in
lods
xor
lock
test
leave
fisttps
sahf
ja
std
add
jae
mov
inc
inc
add
outsl
outsl
dec
dec
ja
xor
inc
mov
out
inc
or
incb
pop
inc
adc
sbb
adc
iret
std
out
and
cltd
test
loopne
outsl
pop
sbb
push
in
idivl
push
push
fdivl
cmp
pop
fistps
lods
enter
ljmp
addr16
jecxz
loop
mov
out
outsl
andl
ret
push
push
sub
mov
mov
daa
shlb
push
stos
negl
pop
adc
es
in
inc
jg
iret
outsl
cltd
mov
out
jecxz
push
stc
and
and
ds
jbe
fwait
scas
movsl
nop
jo
xor
ja
inc
push
mov
sub
dec
mov
jle
sub
xchg
lahf
cmp
mov
xor
xchg
mov
aad
xchg
dec
pushf
test
lahf
add
xor
fs
imul
into
lret
jnp
xchg
cmp
xchg
stos
xlat
call
cmpsb
cmc
mov
cmp
sub
in
shlb
mov
pop
roll
push
dec
mov
pop
lret
arpl
mov
inc
and
xor
iret
nopl
pop
jnp
stos
push
xlat
sub
adc
pushf
dec
xor
sbb
ds
imul
push
incb
je
fistps
aad
outsb
ret
dec
fcompl
out
ss
xchg
lea
dec
decb
push
push
lahf
cli
es
dec
cmp
adc
pop
movsb
call
or
inc
push
inc
mov
jmp
cld
jl
jmp
hlt
mov
idivl
dec
out
and
test
inc
aas
leave
shll
lcall
ja
loop
xor
popa
and
ss
jae
mov
lret
mov
es
pop
or
jle
lds
hlt
leave
mull
pushf
mov
or
xchg
sub
out
cmp
inc
cmp
or
jmp
add
inc
sub
push
sbb
xchg
arpl
add
loop
hlt
push
std
pop
sahf
loopne
stc
bound
gs
pop
dec
or
addr16
pop
xchg
mov
outsb
add
imulb
mov
or
testb
xor
mov
mov
mov
loop
xor
push
xchg
mov
daa
cltd
mov
in
xchg
sub
adcb
add
ja
out
das
jle
mov
dec
ja
dec
rolb
xor
lods
mov
add
pushf
out
daa
dec
mov
and
push
xchg
inc
gs
pop
dec
out
mov
cmp
jo
inc
fstl
jns
mov
test
movsb
stos
sbb
pop
outsb
lret
push
shll
and
add
jle
mov
lds
lahf
adc
cmp
ret
data16
call
iret
push
mov
divl
mov
test
sbb
outsb
add
jne
mov
lea
and
je
roll
add
cmp
cs
xlat
xor
inc
inc
sbb
mov
sbb
adc
mov
sub
or
push
movsl
enter
add
arpl
and
xor
leave
bswap
xor
jns
repz
daa
cmp
xor
dec
pop
mov
jnp
xor
mov
mov
int3
xchg
loop
insl
inc
psraw
inc
inc
outsl
xchg
jo
add
xchg
pop
and
pshufw
stc
xchg
sbb
aad
mov
adc
outsb
fstpl
ret
and
insb
lea
jle
fcomps
jb
pop
mov
sbb
push
adc
in
adcb
mov
insb
xor
sahf
or
ror
pusha
dec
outsl
lods
and
fdivp
bound
add
mov
sbb
sbb
fwait
sahf
bound
fmul
xchg
or
es
pop
sbb
out
push
mov
stc
mov
fwait
lock
or
fadds
pop
push
int
aad
jbe
jmp
push
insb
addr16
stos
sti
adc
ljmp
inc
mov
push
fucomp
add
adc
fcmove
jb
jne
push
pop
mov
dec
testb
or
mov
mov
mov
cmp
pop
scas
rorl
cmpb
pop
mov
test
xlat
push
and
out
add
inc
cmp
stos
aaa
popa
inc
mov
push
mov
fsubrs
test
int
xchg
adc
mov
pusha
dec
imul
push
clc
lret
gs
call
pop
pop
fwait
stc
leave
push
test
cmpsl
pop
add
jns
iret
xchg
cmp
mov
mov
aam
sub
mov
shll
adc
mov
mov
pop
repz
pushf
cwtl
pop
enter
fsub
imul
nop
sbb
mov
ficomps
loope
inc
insb
fdivs
adc
mov
ss
xchg
fwait
stos
cmc
mov
pop
sbb
nop
lea
sbb
and
pop
or
fdivs
cmp
or
outsb
inc
add
repnz
ficompl
and
adc
es
mov
sahf
pop
test
clc
pop
cmp
shll
mov
lods
xor
or
pusha
pop
test
orl
cwtl
cltd
mov
ja
mov
outsl
cmpsb
inc
push
pop
push
and
int
jl
pop
push
inc
mov
mov
roll
test
daa
cmpsb
sbb
rcl
add
lods
sub
xchg
xchg
cwtl
cli
and
aam
sub
push
fistl
int
dec
jecxz
or
mov
and
adc
jo
xchg
cld
mov
dec
cmp
sub
fwait
push
insl
fadds
push
cmp
cltd
pop
and
and
jecxz
lock
insl
mov
stos
ljmp
or
pop
sub
aad
out
or
jbe
js
jg
roll
ficoms
sti
or
gs
repz
cltd
sbb
fmuls
iret
addr16
mov
dec
cli
inc
hlt
add
shlb
cmp
roll
nop
cmp
sub
aas
stos
les
insl
fdiv
movsb
cmp
mov
xchg
push
jecxz
dec
xchg
xchg
pop
mov
xchg
shll
xlat
pop
fsubr
les
sub
jmp
sub
mov
push
in
fdivl
xor
push
fadds
ds
das
in
adc
lea
sub
fcmovnu
out
test
push
adcb
outsl
and
mov
jne
fisttps
push
push
pop
call
or
imul
insb
in
cmpsl
mov
xchg
ja
jae
fiaddl
sbb
addb
cmpsb
mov
stc
inc
scas
lret
fadds
ret
xlat
out
pushf
out
stos
js
test
gs
jbe
xchg
pop
dec
stos
je
xchg
pop
repnz
or
movsl
jne
movsb
ds
cmp
cmp
rorl
out
jno
cld
repz
ss
movsb
push
insl
cmp
movsb
sbb
jb
js
ds
das
ss
call
mov
enter
mov
jb
dec
sbb
hlt
inc
jge
dec
xlat
and
into
popa
jle
sarl
nop
gs
sub
adc
test
int3
outsb
cmpsl
insb
jno
ss
loopne
xor
clc
sbb
mov
in
xchg
or
lea
pop
dec
pop
test
bound
sub
mov
lcall
dec
decl
scas
or
cwtl
adc
pop
and
lods
into
inc
sbb
xor
scas
std
testl
inc
pop
in
xchg
lods
lods
and
and
jns
xchg
mov
cltd
jbe
dec
push
js
cmp
and
loopne
es
ds
inc
dec
icebp
data16
fisubs
sbb
mov
pop
and
nop
pop
push
in
cs
push
pop
jg
mov
lods
mov
add
jp
sahf
test
inc
or
test
outsb
add
popa
out
push
sbb
stos
adc
sub
jmp
jo
stos
out
cmp
dec
cwtl
je
adc
adc
mov
mov
jmp
hlt
icebp
das
mov
mov
fucomp
outsl
ror
cmp
push
jp
ret
leave
in
lcall
js
data16
jo
aam
cltd
push
add
clc
inc
sbb
jb
pusha
or
es
dec
adc
mov
ret
lods
mov
adc
fcoms
stos
pushl
add
je
in
out
or
fstps
ficoml
pushf
sar
ljmp
mov
pop
imul
push
cmp
push
outsl
xor
push
lahf
mov
mov
out
xchg
cmp
pop
dec
xchg
jns
mov
dec
push
xchg
adc
lods
mov
xor
sti
sub
push
fdivl
fwait
leave
add
test
das
add
xchg
das
mov
ret
dec
sub
mov
fmuls
pop
xchg
push
into
dec
xlat
pushf
in
xor
shrl
cmp
test
int
jmp
mov
mov
pop
lahf
pusha
mulb
pop
or
adc
insl
mov
or
testl
cs
fs
out
loop
jae
push
mov
jb
cmp
mov
das
or
dec
cs
add
cltd
test
sahf
pop
mov
xchg
daa
sbb
in
push
mov
inc
out
adc
ljmp
call
cmc
cmp
in
pop
enter
xchg
loope
inc
mov
aad
xchg
dec
sbb
xchg
mov
insb
mov
popf
adc
jle
pop
test
mov
add
push
mov
jmp
jmp
aaa
sbb
cmp
in
hlt
sbbl
stc
or
mov
sti
and
cwtl
xchg
pop
es
mov
subb
andb
aam
push
jmp
into
mov
or
out
ss
aad
xor
fidivl
stc
mov
loopne
std
mov
mov
or
lcall
loopne
mov
push
fcompl
add
inc
jne
scas
testl
call
jbe
ljmp
sbb
mov
xchg
fs
mov
sub
lahf
test
incb
inc
mov
xchg
push
cmp
sub
pop
mov
mov
dec
popa
fistps
push
and
pop
iret
nop
inc
add
xor
xor
std
lods
into
mov
out
enter
inc
sbb
jl
insl
fnstenv
xchg
xor
outsb
push
lock
jo
int3
mov
rclb
mov
nop
aam
xchg
lods
in
fwait
cwtl
push
dec
je
lret
ja
outsl
xor
xchg
xchg
divl
mov
popf
push
nop
sahf
cmp
jae
pop
xor
dec
dec
movsl
inc
mul
jmp
adc
fdivl
push
es
mov
pushl
lcall
mov
sar
in
subb
xchg
adc
inc
insb
xchg
xchg
imul
std
roll
xchg
xor
push
add
shlb
mov
lea
fsts
push
rolb
ljmp
daa
inc
out
fcom
inc
repz
dec
fcoms
pop
adc
jns
aam
push
cld
sub
adc
test
cli
adc
push
inc
sub
aam
in
std
imul
lods
xchg
inc
pop
icebp
scas
jp
mov
call
inc
sub
jp
mov
lock
cmp
pop
add
popa
sti
aas
mov
pop
loope
sti
jle
push
sbb
ror
repz
xchg
adc
jae
jno
dec
mov
je
or
mov
jns
adc
or
cltd
jecxz
adc
jp
mov
lock
dec
pusha
add
imul
sbb
out
mov
mov
ljmp
cmpsl
sub
pop
inc
mov
pop
push
imul
xchg
fcoms
ret
orb
lods
data16
sub
ds
mov
data16
mov
mov
je
imul
push
dec
push
mov
push
jo
push
lret
sub
ja
or
mov
add
mov
sub
jg
mov
push
adc
dec
mov
insl
push
xchg
mov
mulb
push
push
sub
test
add
pop
sbb
addr16
mov
je
mov
test
inc
pop
arpl
push
loope
dec
push
insb
jecxz
lods
mov
pop
mov
mov
fsubrs
jp
mov
cltd
and
cmp
movsl
cmc
fldcw
loope
scas
jl
dec
shrb
mov
hlt
lods
sub
gs
mov
or
lcall
pop
or
mov
push
mov
adc
jne
jmp
stos
cmp
rorb
mov
jmp
xchg
jne
push
divb
lret
adc
testl
call
adc
and
jp
push
stos
lcall
enter
out
add
fisubs
and
mov
add
rcrb
lods
xor
jne
es
fists
xchg
dec
ficoml
mov
inc
mov
lods
mov
mov
pop
push
push
mov
leave
test
outsl
jno
cmpb
bound
or
cmp
aad
int3
jg
cltd
dec
popa
jmp
and
pop
fldcw
dec
cmp
sti
ret
out
shrw
in
xchg
xor
xor
mov
ret
pop
sbb
dec
in
ss
subl
jns
mov
mov
test
cmpsl
jnp
lods
push
jp
ret
cmp
cmp
cmpsl
iret
lret
popf
push
idivl
imul
loop
jb
in
pushl
lret
arpl
mov
pop
outsb
mov
das
and
jne
lods
fidivrs
outsb
fsub
adc
xor
inc
jg
or
dec
jo
mov
sub
push
sbb
mov
int3
mov
adc
bound
loop
mov
pop
loope
sbb
jb
cmp
cltd
fmuls
xlat
pop
or
insl
dec
pop
xor
mov
hlt
xor
dec
cld
sbbb
xchg
mov
lods
pop
xor
pop
fstp
aaa
test
fisttpl
les
cwtl
jecxz
inc
negb
xor
scas
xor
and
pop
fcmovnu
fiaddl
sub
cs
jecxz
rolb
data16
ja
jl
bound
js
iret
bound
pop
mov
imul
inc
xlat
fld
aad
xor
lret
sbb
xchg
push
sbb
data16
push
daa
mov
iret
xor
enter
aaa
xlat
pop
push
inc
test
dec
shll
rorl
jmp
lret
jno
push
ja
xor
pop
movsb
xchg
dec
fs
shlb
sbb
mov
xor
outsl
aam
cmpsb
adc
jecxz
mov
and
es
cmpsl
dec
xor
mov
add
aam
ss
roll
mov
pop
test
cmpsl
cwtl
aas
and
add
fadds
pushf
rcl
mov
ja
pop
xor
pop
rolb
pop
sbb
push
or
cli
insl
movsl
and
dec
cwtl
imul
cmpsl
fwait
push
jbe
pop
mov
xchg
hlt
sbb
fcmovnb
lock
in
push
mov
push
and
and
adc
jbe
xor
mov
iret
lods
mov
sbb
ficompl
filds
frstor
xor
adc
addr16
rcll
movsl
inc
aas
sti
into
nop
push
daa
stc
push
sahf
sbbl
jo
sbb
daa
pop
sbb
jle
aas
pop
clc
or
mov
add
inc
xor
mov
cmp
aaa
mov
jecxz
insl
out
jl
add
cld
push
pop
leave
jg
xchg
outsb
push
mov
adcl
jae
push
mov
pop
cli
sub
gs
add
cli
add
xchg
cmpsl
in
mov
sahf
lcall
dec
pop
mov
mov
movsl
xchg
push
imul
push
xor
and
inc
loopne
movsl
sbb
stos
jg
enter
xlat
mov
lods
stc
push
xor
arpl
aaa
icebp
int3
inc
in
gs
movsl
clc
inc
pushl
repz
jnp
inc
jns
xchg
mov
sbb
pop
xchg
cwtl
or
jno
hlt
rclb
mov
xlat
addr16
cmp
mov
decl
sub
xorl
sti
xor
mov
jge
sbb
pop
mov
outsl
jb
jnp
fwait
fwait
ds
adc
lcall
mov
cmp
push
int
add
push
flds
mov
scas
xchg
cmpsb
fbstp
mov
into
loope
insb
insb
push
popa
loop
mov
or
dec
sti
aam
fdivrs
push
hlt
out
stc
leave
test
push
jl
push
jae
pop
std
cmpsb
sbb
or
push
mov
mov
pop
pop
stos
jns
fcoms
push
push
push
pop
ljmp
clc
cwtl
pop
in
popa
ss
jp
add
mov
mov
fmull
orl
out
sti
xchg
leave
leave
es
arpl
gs
pop
fldenv
inc
or
add
or
and
insl
xor
xchg
and
cwtl
lret
or
cwtl
mov
into
add
add
inc
sbb
cld
into
iret
xchg
mov
testl
ret
ss
hlt
fsubr
add
and
inc
mov
mov
push
jnp
lret
push
fstps
mov
fwait
icebp
lcall
add
push
ljmp
push
inc
call
fnstsw
or
jnp
cmovnp
sbb
pop
rcr
dec
adc
lods
fxch
dec
cs
pop
lock
je
jno
mov
subl
push
sbb
xor
mov
inc
imul
mov
cwtl
push
mov
repnz
mov
lcall
popf
inc
cmp
push
int3
insl
repz
push
sbbl
in
fisubrl
cld
jbe
pop
cmp
fwait
push
lods
cmpl
xchg
mov
push
pop
xor
es
push
ficompl
add
inc
cs
pop
push
jo
sub
pop
xchg
push
mov
cmpb
push
leave
popf
mov
push
pop
hlt
repnz
lods
mov
fildl
aad
leave
pop
loop
sti
mov
xchg
popa
mov
out
jbe
daa
mov
out
mov
mov
data16
fdivs
imul
int3
ret
pop
test
movsb
lret
leave
cltd
cmp
out
xlat
sub
adc
addb
jl
push
adc
mov
xchg
push
jnp
jge
xchg
mov
pop
dec
ss
xchg
and
jns
std
aas
dec
add
adc
les
sarb
sub
in
push
mov
lods
push
lock
jmp
or
or
adc
ficoms
sbb
movsb
sub
je
out
xchg
pop
push
divb
bound
xchg
shrl
bnd
hlt
and
push
call
pop
and
pop
cmpsb
mov
sbb
sar
inc
dec
arpl
movsb
xchg
cmpsl
test
fisttpll
fs
in
mov
mov
jns
repnz
loopne
pushf
insl
ficomps
dec
dec
add
imul
lock
test
jle
loopne
orb
pop
stos
js
or
jmp
and
cld
or
stc
and
jg
call
jnp
fimull
ffree
pop
inc
repz
ss
add
lahf
sahf
xor
mov
push
and
mov
mov
cld
dec
jp
in
jb
out
ljmp
shrb
subb
push
mov
arpl
fcmovbe
and
xchg
sub
arpl
stos
sub
sub
clc
push
mov
lock
xchg
test
or
inc
xchg
insl
mov
push
or
pop
enter
inc
pushf
jb
imul
sbb
jne
rcll
popf
test
aaa
cwtl
into
rclb
or
xor
push
jmp
cld
clc
test
stc
movsl
insl
addr16
mov
inc
sbb
dec
jmp
push
fildl
lea
xor
int3
cmpsb
insb
bound
adc
loopne
inc
loop
test
pusha
inc
pop
xchg
pop
shll
jecxz
rorl
imul
lods
mov
sbb
mov
negl
rcrb
call
lock
fs
rcll
aad
mov
or
out
fsubrs
jecxz
cld
mov
jne
xchg
sbb
cmp
xor
sbb
sar
leave
aas
loope
cmc
jl
mov
idivl
and
enter
pop
negb
add
sbb
add
fldl
mov
lea
xchg
pop
cli
push
xor
call
and
inc
and
xchg
dec
add
jge
clc
int3
outsl
lret
mov
cld
cmp
fistl
insb
adc
inc
pushf
cltd
inc
repz
sbb
je
inc
sub
out
pushf
dec
shll
out
dec
iret
in
jmp
cld
adcb
push
sbb
mov
ret
shrb
add
aam
push
lods
jge
inc
out
ds
rolb
pop
gs
jns
inc
and
or
or
sub
movsl
xor
filds
add
xchg
jmp
cmpsb
adc
push
mov
jp
movsl
or
xor
cmp
push
int3
push
mov
pop
scas
sub
sbb
insb
repnz
inc
inc
fcoms
fisubs
dec
fidivrs
push
int
pop
xor
in
ds
push
add
jge
mov
push
enter
mov
loopne
bound
and
pop
rclb
mov
or
popa
lock
addr16
add
es
das
ss
sahf
jae
outsl
cs
cltd
outsb
mov
hlt
es
lret
and
movsb
cld
popa
repz
and
in
and
je
mov
sti
and
jge
dec
aad
jl
in
das
jns
lahf
xchg
test
ja
pop
sub
jns
cmc
cmp
xor
int
pop
xchg
ljmp
inc
push
and
in
inc
jle
mov
test
adc
mov
lods
iret
movsb
adc
cmp
popf
sahf
and
pop
add
push
xor
gs
stos
ret
jg
jl
data16
loopne
jbe
stc
dec
adc
xor
cmp
mov
aas
nop
cmpl
test
xchg
test
xor
insl
mov
sbb
test
sbb
cld
sti
or
fs
mov
lcall
std
xor
aas
mov
push
daa
pop
or
mov
or
pushf
insl
mov
and
cmp
loopne
xor
es
pop
add
ret
in
jle
cmp
jl
sti
xor
sbb
cmp
pushf
test
mov
jmp
pushf
inc
jne
repnz
sbb
stos
test
sbb
add
cmp
repz
push
pop
div
bound
sub
jl
inc
in
jl
outsb
mov
mov
mov
adc
filds
dec
sub
shrb
xlat
xor
jb
add
jb
sbb
lock
or
mov
shl
out
cmpsb
xchg
sbb
rcrb
mov
push
out
adc
gs
repnz
dec
adc
leave
mov
aaa
ret
fwait
add
popf
push
jl
xchg
pop
out
xchg
mov
fdivrs
roll
mov
enter
sti
xlat
inc
daa
push
stc
fisubl
xchg
sbb
adc
cli
add
or
push
insl
push
xchg
lods
fists
jp
arpl
popa
or
pop
inc
add
adc
push
inc
dec
jmp
xchg
aaa
and
push
mov
cmpsb
sbb
insb
outsl
xor
sub
jae
cmpsb
xor
je
std
xchg
aas
ja
mov
ror
adc
aaa
test
pop
int3
inc
mov
push
mov
jne
dec
mov
inc
addr16
pop
mov
mov
mov
add
push
out
jp
xchg
adc
sbb
jge
sub
fisttpll
push
repnz
sub
inc
ret
out
in
ja
imul
sbb
sahf
rcr
xchg
movsb
scas
push
call
mov
out
cmp
dec
pop
not
dec
cwtl
and
inc
mov
mov
pop
jl
popa
fdivrl
or
or
mov
xorb
dec
jp
push
fs
cs
pop
dec
aam
test
cld
clc
fs
inc
mov
sti
inc
outsb
push
hlt
outsb
add
cmp
cmp
test
out
dec
dec
leave
mov
repnz
xor
shl
and
xchg
and
mov
mov
cmp
and
or
loopne
sbb
lret
lds
insl
xor
xchg
xor
mov
fisttpl
fisttps
es
ja
inc
pop
daa
mov
loope
test
je
push
or
int
cbtw
imul
test
fisubrs
jnp
or
mov
int
mov
push
dec
sbb
sbb
pop
pushf
mov
cmp
rcl
testl
shll
push
in
inc
dec
addr16
and
out
fists
rorl
cmpsl
setb
movsl
mov
scas
pop
shlb
adc
xor
ja
jns
add
pop
push
ja
js
int
orb
adc
sbb
or
inc
test
cmp
dec
in
xchg
adc
in
push
ljmp
arpl
sarb
mov
out
iret
mov
in
negl
mov
ljmp
mov
lock
in
push
ffreep
cmpb
and
lds
push
mov
adc
mov
sub
mov
and
imulb
lods
xchg
xchg
sub
pusha
mov
test
movsl
cld
scas
mov
aas
xor
orl
sbbl
sbb
in
jo
cmp
or
ss
inc
int3
push
xchg
prefetch
data16
or
xchg
mov
in
out
xor
fwait
rcll
jnp
not
lods
add
ja
popa
sbb
xor
lret
aaa
mov
jl
mov
add
xor
mov
scas
pushf
sbb
repz
sbb
iret
in
xchg
push
push
xchg
cmp
add
sahf
out
es
addr16
push
loop
rcr
mov
mov
sub
leave
sbb
or
mov
imul
testb
add
ficomps
push
dec
or
movsl
sub
sub
inc
mov
nop
sub
aaa
dec
sbbb
scas
ja
and
xchg
rcll
add
call
ret
dec
sub
test
dec
adc
int3
sbb
cmp
dec
or
xchg
in
cmp
aas
arpl
filds
add
pop
test
mov
or
pop
xor
mov
in
jp
gs
enter
jecxz
xchg
loopne
int
arpl
shr
popa
xchg
or
test
daa
inc
push
cli
mov
scas
pushf
in
or
fwait
aad
adc
cltd
inc
nop
dec
mov
rolb
ficompl
stos
xchg
inc
lcall
orl
xchg
stos
and
sbb
clc
adc
add
fwait
add
int3
jnp
rolb
testl
cmp
lret
xlat
stos
scas
lret
push
jl
insb
jl
leave
inc
icebp
loope
jnp
out
mov
jno
rcrl
test
iret
addr16
or
mov
pushf
pop
jp
mov
aam
pop
scas
lcall
mov
pop
inc
adc
cmpb
hlt
aad
ds
int
fwait
test
sarl
call
or
or
enter
mov
mov
aas
mov
loope
out
jo
cld
xchg
lods
stos
lret
rorb
popl
mov
lret
mov
push
outsb
iret
or
ja
xor
data16
xchg
fwait
loopne
mov
sbbl
jecxz
inc
lods
sub
cmp
jne
push
stos
xor
mov
shll
icebp
pop
lea
lock
in
iret
lock
mov
std
rcll
sub
rclb
push
cmp
std
or
scas
push
test
dec
push
bound
and
pop
test
sbb
aas
repz
adc
xchg
mov
neg
testl
movsb
and
fists
pop
push
sahf
popf
test
mov
jae
addr16
scas
or
dec
xor
xchg
jmp
in
inc
and
push
add
sbb
or
mov
pop
std
ret
pop
xchg
mov
enter
lret
scas
push
cltd
cmp
add
icebp
pop
pusha
xchg
repnz
cwtl
cmp
sbb
push
xchg
ss
push
mov
xchg
dec
xchg
sbb
push
notl
loopne
pop
test
pop
fcmovu
into
scas
jns
pop
dec
jb
rcrl
loop
push
xor
add
aas
shrb
push
cmpsb
push
mov
pop
pop
rolb
jecxz
or
and
stos
fimull
mov
pop
xchg
add
push
cmp
int
mov
in
mov
unpckhps
faddp
jbe
std
add
mov
sbbb
adc
adc
cmc
addr16
mov
mov
xchg
and
popa
push
les
js
daa
dec
mov
jg
aaa
mov
sbbb
loopne
adc
movsl
inc
mov
dec
cli
in
xchg
push
mov
and
iret
pop
dec
cmp
cltd
gs
mov
and
in
iret
int
lods
ret
dec
loop
adc
dec
cld
xchg
mov
xchg
push
inc
pop
inc
mov
das
out
sub
inc
cmp
pop
pop
add
adc
sub
jecxz
repz
and
fistpll
sub
insl
dec
jle
mov
int3
jmp
dec
ror
ret
push
inc
stc
cmp
jne
loop
or
arpl
push
mov
shrb
pop
testl
cltd
dec
xor
es
fwait
sbb
cwtl
push
lock
repnz
pop
pop
out
in
stos
addr16
mov
jae
mov
dec
cmc
cmp
mov
jb
out
jo
inc
aam
push
movsb
xor
shrl
push
add
mov
and
xchg
shll
dec
xchg
jmp
into
js
std
push
jg
js
mov
jle
jp
aam
fmull
mov
cmp
adc
pop
imul
push
dec
std
repnz
adc
dec
leave
pop
test
fwait
mov
adc
ljmp
sahf
adc
ret
imul
out
imul
in
lcall
shlb
cwtl
out
jle
xchg
roll
xchg
xchg
xchg
mov
push
adcl
sbb
fnstenv
fnstenv
js
add
aas
lret
xchg
pop
clc
mov
out
fiaddl
inc
out
lahf
xchg
and
or
stc
jns
xor
dec
mov
pop
mov
sub
ret
push
push
adc
xchg
mov
sbb
adc
jns
ljmp
cmpsl
push
lcall
into
clc
xchg
push
pop
add
or
fs
jb
cmp
in
sub
inc
sti
push
sti
add
leave
xchg
inc
popf
jge
push
sub
jb
shl
dec
dec
xchg
dec
dec
daa
pop
or
enter
cwtl
rorl
fnstenv
push
inc
xchg
jnp
jecxz
mov
sbb
mov
mov
in
ret
mov
data16
jbe
dec
sub
dec
int3
xor
imul
cli
xchg
lahf
add
inc
adcl
jbe
outsb
push
xchg
push
leave
test
xchg
sahf
test
mov
ja
or
std
in
xchg
out
lea
jl
mov
adc
roll
aam
and
ja
mov
paddb
push
aaa
shr
iret
lods
out
sub
push
loopne
xor
push
push
cmc
inc
pop
test
inc
loopne
loope
shll
lods
xor
insb
stos
xor
fwait
sti
push
cmp
xor
push
icebp
ljmp
stos
stc
aam
test
pop
fs
jno
push
xlat
shll
jp
mov
dec
lock
lcall
int
mov
in
rcll
test
dec
dec
imul
or
ret
sub
mov
out
sub
addr16
mov
leave
jmp
cmp
mov
mov
cmp
movsb
stos
xlat
push
pop
outsb
dec
mov
fstp
push
inc
xchg
das
in
mov
shlb
pop
and
mov
jmp
fs
cmpsb
push
xor
push
ret
mov
cmp
subb
jnp
jne
add
cmp
jl
into
add
inc
ret
or
mov
pop
jae
mov
jnp
xchg
out
inc
sub
jb
adc
jno
ds
lcall
test
imul
xor
ja
xor
or
dec
xchg
lea
mov
xchg
scas
jle
and
add
xor
or
lock
rclb
mov
and
rorb
imul
scas
sbb
inc
ds
mov
roll
cvttps2pi
push
rcrb
pop
mov
nop
or
rorb
xchg
mov
loop
add
imul
mov
xor
cmp
sub
lahf
es
xchg
adc
add
inc
clc
sbb
xchg
and
or
dec
pop
aas
mov
fistl
hlt
insb
stc
add
adc
inc
xlat
into
add
xor
mov
in
mov
sub
rolb
in
jae
pop
push
je
popf
mov
sbb
sub
mov
sbb
dec
je
insl
fisubl
mov
shl
mov
es
pop
stos
push
lock
mov
push
sub
mov
scas
out
pop
into
or
dec
jle
jmp
sbb
nop
iret
cmp
hlt
out
adc
mov
pusha
rclb
das
xchg
imul
pop
fs
or
pop
dec
cmpsb
add
sbb
mov
pop
fs
inc
lds
test
test
or
addr16
dec
xchg
std
cmpsb
xchg
xor
mov
pop
les
cmp
cmpsl
xchg
adc
sbbl
rorb
pushf
cmpsb
inc
outsl
jo
insl
or
pop
ja
repnz
repnz
and
int3
in
in
mov
sub
lea
scas
data16
jns
jmp
in
push
rorl
out
jbe
adc
mov
test
sub
std
inc
mov
fcmovne
inc
or
test
cmp
inc
sarb
mov
inc
and
ja
xchg
jmp
insb
fs
add
xchg
sbb
jp
iret
test
fcmovu
pop
out
push
mov
in
inc
xchg
sub
fimuls
add
inc
ret
dec
push
fisubs
sbb
negb
xchg
mov
daa
mov
shlb
pop
mov
adc
adc
xor
lcall
fucomip
adc
xchg
pop
ret
push
cli
push
cmp
dec
mov
outsl
jnp
mov
pop
test
xchg
xchg
mov
ret
cmp
movsl
imul
jns
xchg
int3
cltd
lahf
std
shlb
es
jle
test
lods
inc
pop
inc
xchg
push
ret
cmpsl
ds
pop
push
outsb
jne
ret
lret
sub
dec
pop
into
mov
sub
out
jbe
xchg
xchg
test
cmc
dec
mov
pop
enter
sub
push
xchg
or
cmp
popa
mov
inc
mov
movsl
xlat
xor
out
ss
pop
aam
adc
arpl
or
xor
or
testb
push
mov
adcl
pop
xor
lcall
pavgb
in
int3
add
sub
iret
sub
mov
movl
rcll
andb
aas
call
cltd
test
cmp
mov
pop
daa
xchg
leave
and
inc
rcrl
cmp
pop
push
or
pop
nop
mov
xchg
xor
mov
cmpsl
push
std
es
xchg
inc
js
not
ss
add
popa
cmpb
dec
add
sub
loopne,pn
rcl
push
fdivrs
nop
jb
xchg
pop
lods
push
sub
xchg
add
arpl
add
call
or
mov
inc
bswap
rol
add
pop
pop
mov
loopne
mov
fs
pop
ret
loop
pop
mov
pop
adc
fmull
pop
les
and
dec
mov
cwtl
mov
sbb
out
mov
add
test
call
inc
adc
fdivl
jecxz
les
xchg
scas
lahf
int
add
jmp
or
nop
xchg
and
jmp
push
sbb
xchg
mov
popf
les
imul
imul
sahf
mov
sbb
xchg
jecxz
add
shrl
jg
negb
es
fwait
outsl
shll
cmp
cs
inc
ljmp
jae
pop
push
loop
push
call
int
out
fisttps
mov
pop
sbb
jno
dec
mov
popf
stos
adc
lahf
sbb
cmp
and
inc
push
fcmovnb
bound
iret
ds
xchg
adc
xchg
push
mov
xchg
pop
rorb
sbb
fsubl
ret
les
repz
leave
dec
xchg
pop
fisubs
insl
xchg
shr
fwait
mov
loop
jb
pop
mov
pushf
mov
dec
ss
mov
adc
dec
stos
repnz
stc
cltd
aam
cs
adc
iret
int
pop
add
pusha
icebp
nop
push
out
xor
shlb
pop
adc
loop
insl
jp
fstl
dec
in
aaa
or
pop
aaa
leave
mov
mov
out
adc
sbb
adc
rol
xchg
popf
leave
push
loopne
cli
dec
sbb
shlb
xchg
ss
in
ds
fisubl
and
lret
inc
out
adc
inc
dec
rol
pop
ret
push
mov
push
dec
test
arpl
and
xor
adc
movsb
mov
inc
pop
lahf
pop
movsb
pusha
shlb
movsl
ja
dec
xor
jp
mov
jnp
lcall
mov
mov
in
test
lahf
fcmove
dec
int
pop
das
cmpsb
cli
ret
cmc
add
lret
jno
icebp
pusha
pop
cmp
dec
jbe
lret
jae
ffreep
fwait
test
cwtl
mov
shll
scas
or
xchg
imull
divl
or
pushf
and
dec
dec
stc
jp
movsb
xor
faddl
sub
adc
lret
xor
mov
hlt
push
insb
stc
out
test
or
xchg
shlb
jb
dec
pusha
rorb
mov
adc
pusha
test
sbb
arpl
adcl
xchg
shlb
mov
or
mov
adc
adcb
pmulhuw
hlt
pop
lret
jo
pop
fnstsw
ret
and
jo
ljmp
pop
test
jb
cmp
fsubrs
sbb
lea
fnstcw
pop
push
pop
xchg
fstpl
movsl
mov
repz
push
mov
cltd
mov
mov
cmpsb
sub
gs
sub
lods
jge
dec
push
adc
cld
dec
pop
sub
es
addr16
sbb
push
cli
gs
cmc
repnz
unpckhps
mov
push
pop
pop
les
xchg
jmp
mov
repz
push
xchg
test
and
mov
adc
mov
in
mov
mov
push
mov
mov
iret
xchg
sub
jns
pop
outsl
test
sub
adc
sbb
mov
and
popf
mov
mov
cmp
aad
pop
pop
lds
adc
fldenv
adc
int3
scas
test
push
sbb
lods
mov
cmpsl
je
test
sbb
jno
sbb
mov
push
addr16
das
mov
arpl
inc
out
or
lds
test
mov
jno
push
test
sub
push
fdivl
lods
stos
jecxz
adc
repz
mov
loope
push
cmp
inc
loopne
mov
push
std
pushl
cmc
icebp
sub
lahf
jne
daa
ret
in
outsb
mov
roll
enter
popa
cmp
pop
xor
sbb
or
jns
mov
adc
lret
out
fcomip
les
mov
pmuludq
inc
ljmp
or
xor
sub
imul
push
popf
adc
popf
inc
jg
icebp
cwtl
xchg
outsl
cmpsb
jp
xor
in
sub
mov
adc
imul
hlt
jg
dec
mov
sbb
sub
scas
add
xchg
jnp
cli
je
fwait
mov
xchg
dec
loopne
mov
test
mov
sbb
push
push
dec
dec
mov
mov
push
dec
xor
or
loope
push
in
clc
gs
jno
sbb
in
adc
cmp
mov
and
sub
xchg
or
fisubrs
imul
mov
add
xchg
ljmp
adc
cmp
or
test
push
ds
ljmp
jmp
push
jle
mov
and
scas
dec
pusha
jbe
cmpsl
stos
push
les
xchg
fs
fcoml
or
cmpsl
pop
xor
mov
jecxz
cmc
enter
and
das
les
iret
fcom
pop
mov
push
jle
add
imul
xchg
popa
xor
aam
orl
fnstsw
sub
xchg
push
lock
pshufw
xchg
cmp
xor
jae
ficomps
ret
cmp
mov
dec
pushl
jnp
addr16
ret
inc
push
ror
sub
das
and
fcomip
dec
ljmp
arpl
push
das
stos
out
or
adc
les
pop
add
hlt
ffree
cmp
movsl
jmp
fldt
insb
push
das
jmp
dec
mov
cmpsb
inc
cmp
out
loopne
imul
inc
sbb
bound
pop
nop
lret
xor
jo
out
call
mov
movsl
lds
push
ljmp
xlat
fmull
fs
ljmp
cmpb
data16
dec
lock
fcompl
sbb
aad
insb
nop
mov
push
adc
in
sub
xchg
mov
inc
sub
push
pop
in
lock
mov
idivl
pop
sbb
dec
inc
shlb
cmovge
pop
push
jns
mov
pop
out
shll
adc
mov
add
nop
scas
pushf
push
ja
lret
xchg
testb
add
inc
enter
mov
aas
push
mov
sub
xor
jg
cmpsl
ret
cmpsl
insl
xor
int3
andb
xchg
jecxz
test
rol
imul
mov
imul
push
loope
xor
fnsave
jns
mov
imul
and
cld
mov
loop
inc
and
pop
bound
aas
sti
inc
pusha
pop
adc
mov
std
addr16
fldt
jl
fcmovne
or
hlt
cli
cld
xlat
xor
addr16
pop
out
dec
mov
outsl
ds
jmp
sub
rcr
mov
jne
xor
outsb
icebp
cmp
push
cld
cmp
icebp
pop
add
enter
addb
and
idivl
mov
leave
sub
pop
cmp
shrl
lret
cli
lahf
mov
dec
sbb
sti
fimull
sti
jecxz
in
xchg
outsl
xor
sub
push
sarl
pusha
jg
jnp
ret
add
mov
mov
fiadds
mov
fisubrl
xor
dec
icebp
hlt
call
punpckldq
jl
lret
jo
gs
xchg
sub
and
jecxz
dec
mov
jns
outsb
jmp
outsb
and
push
push
sarl
arpl
scas
mov
mov
popa
outsb
xor
push
adc
cmpsl
bound
push
jno
mov
inc
lock
xchg
sahf
cmpsl
add
inc
lret
adc
jne
and
jecxz
sub
mov
xor
ja
stos
push
ret
xlat
sahf
scas
aaa
cmp
push
push
iret
mov
aaa
jge
dec
adc
lea
xchg
add
dec
outsl
nop
pusha
push
add
lret
mov
test
xor
jo
data16
stos
cmp
mov
lods
sbb
mov
mov
mov
mov
xchg
leave
inc
push
mov
jb
orl
aas
in
int
leave
cmp
and
adc
fcomps
loope
ret
jl
push
pop
call
mov
gs
dec
test
dec
mov
hlt
outsl
hlt
fadds
sub
mov
data16
add
add
mov
xor
cld
push
ja
insb
stc
mov
add
inc
push
cmpsl
popa
xor
jge
lret
adc
cld
push
pop
pop
cmp
shlb
push
imul
push
mov
cmp
mov
lcall
cs
inc
or
mov
push
iret
and
ljmp
cmc
sbb
ds
mov
mov
push
jno
in
push
test
pop
arpl
sbb
or
mov
cwtl
inc
push
leave
adc
call
push
mov
sbb
jae
mov
mov
jle
xor
lahf
or
inc
mov
mov
mov
xor
cmp
pushf
cmp
popa
ss
sahf
imul
and
fldl
inc
and
aas
inc
xchg
add
shl
or
aad
in
fcmovnb
fs
ds
adc
push
scas
pop
sbb
subl
sbb
or
pop
xor
push
mov
leave
xchg
adc
push
popf
repnz
pop
cmpsl
subb
pop
ss
jbe
mov
stos
push
sti
cwtl
fs
lret
jno
xor
jl
mov
cmpsl
inc
pop
loopne
sbb
ret
xchg
mov
adc
sbb
int
and
int
je
adc
loop
pop
jge
iret
add
pop
es
mov
pop
add
jbe
xchg
cs
call
lret
outsb
sahf
iret
xchg
mov
mov
push
out
lret
pop
xor
xor
or
cmp
push
jl
add
cmp
lret
mov
jmp
jp
jg
push
mov
sub
sub
lret
and
out
mov
pop
mov
xor
hlt
scas
pop
add
dec
mov
lret
sbb
shll
cld
or
inc
lret
bound
adc
or
xor
push
shll
imul
ss
ljmp
jp
mov
popf
sbb
stos
shll
setbe
out
movsl
xchg
das
push
inc
jge
jae
jae
pop
cmp
test
aad
mov
jns
rcrl
test
add
pop
mov
rcrb
imul
shlb
adc
lods
adc
pop
sub
setl
adc
ljmp
mov
sub
xchg
dec
inc
and
push
jae
jo
fisttpll
pop
scas
aaa
mov
mov
jae
lea
mov
and
inc
mov
and
int3
fimuls
cmp
xchg
movsl
test
sbbb
int3
mov
ret
jmp
sbb
sub
shl
int
arpl
cld
mov
loopne
mov
pop
xchg
mov
push
mov
push
jl
cmp
push
mov
xchg
sti
push
ret
es
pop
fsubrl
mov
and
imul
bound
cwtl
mov
bound
mov
push
int
mull
aam
jg
push
gs
inc
cli
cltd
mov
xchg
in
push
xor
mov
or
or
pop
icebp
lret
sbb
popf
jle
xchg
sti
sbb
mov
push
cltd
into
xor
inc
jne
inc
inc
rcll
decb
mov
cmc
int3
shl
daa
xor
mov
aas
dec
sub
xor
push
mov
lods
imul
pop
pop
or
mov
arpl
mov
sbb
int3
mov
lods
out
push
cmpsb
add
inc
clc
sbbl
or
pushf
jl
jne
sarb
jbe
jge
dec
push
mov
pusha
call
push
out
imul
pop
push
dec
dec
cmp
pop
mov
pop
imulb
cmpsb
jle
jl
aas
or
lods
sbb
out
dec
push
lcall
mov
aaa
jo
pop
cwtl
loop
inc
daa
and
mov
rep
sbb
inc
fcompp
rorb
mov
pusha
jecxz
xchg
push
adc
imul
and
mov
and
adc
lds
xchg
mov
into
xor
add
xor
int
jmp
ja
fst
adcl
ret
adc
jns
mov
repz
push
aas
aad
dec
jbe
or
mov
xchg
imul
pop
dec
iret
jge
sahf
in
and
xor
dec
popa
jb
dec
nop
pusha
jns
cwtl
movsl
adc
nop
adc
outsb
pop
fmul
or
out
jns
gs
loop
sahf
stos
pop
push
or
subl
outsl
insb
dec
in
mov
mov
mov
jp
push
adcl
iret
addb
out
xchg
insl
fidivrl
inc
jl
std
test
nop
dec
cmp
adc
inc
pushf
es
mov
nop
sarl
sub
inc
jae
inc
pop
dec
sbb
lahf
add
pop
push
xchg
jo
fstl
out
aaa
incb
out
cli
pushf
dec
inc
int3
lret
inc
std
in
inc
in
pop
pusha
stc
mov
jns
movsb
cmp
in
cmp
je
rorb
dec
sbb
das
xor
mov
cld
aaa
sbb
adc
lds
je
or
in
rcll
subl
sbb
xchg
int
sbb
hlt
out
fs
out
rcrl
daa
pusha
dec
xlat
xchg
shl
or
fwait
push
out
jbe
push
lods
dec
aas
mov
and
mov
jmp
popf
jae
repz
mov
or
mov
lea
mov
xorb
inc
cmp
push
es
jnp
stos
mov
sti
stos
addb
shlb
fwait
inc
sub
add
adc
cld
jl
leave
jg
clc
mov
movsb
push
pop
push
mov
ret
js
addr16
add
mov
dec
arpl
stos
sar
daa
sub
clc
mov
sbb
xchg
sub
mov
repnz
mov
dec
fstpl
jnp
paddb
adc
loopne
mov
sahf
pop
jo
mov
dec
sub
push
clc
cmp
clc
mov
jl
cmc
enter
stc
test
mul
fdivr
std
shl
sbb
repz
leave
fmull
je
xor
and
adc
scas
shrl
mov
add
mov
lcall
pop
mov
inc
pop
adc
gs
or
insb
mov
sub
loope
clc
jae
stos
data16
aad
leave
jle
xlat
cmc
push
mov
popa
mov
mov
mov
adc
pop
dec
clc
sub
jb
fdivr
pop
popa
mov
pop
outsb
in
push
mov
arpl
lods
scas
mov
lret
or
stc
roll
inc
movsl
fistpl
sbb
cmc
or
pop
mov
pop
loopne
inc
out
rcrb
stos
in
scas
push
and
pop
push
mov
in
loop
cmp
fisttpll
scas
xchg
loope
inc
mov
sbb
jne
sbb
fstpl
pusha
lock
jnp
ja
sub
popf
pop
mov
pop
fwait
xor
sub
jl
fmul
add
pop
aam
rclb
cmp
or
cmp
out
or
sbb
push
pop
scas
add
mov
mov
mov
pop
sub
pushf
xchg
inc
pushf
jl
pushf
or
inc
mov
mov
push
adc
mov
xchg
inc
lcall
add
out
fisubs
dec
dec
dec
push
jmp
jmp
mov
subb
test
lret
push
push
jae
std
fbld
in
fisttpll
scas
sbb
adc
or
mov
and
sbb
jp
jne
ljmp
jp
cli
xchg
and
jmp
mov
lods
cli
dec
mov
add
sbb
sbb
push
ret
jp
pop
xchg
pop
xor
pop
cmp
xchg
jo
push
fdivl
and
sub
inc
mov
stos
mov
clc
and
mov
pop
movsb
inc
dec
pop
pusha
lcall
dec
add
shlb
mov
or
ret
pop
test
lods
inc
loope
jno
pushf
or
jg
sub
pushf
leave
lret
pop
or
faddl
and
aaa
add
fstl
test
xchg
leave
jle,pn
ret
mov
cld
push
pop
pop
dec
in
jns
hlt
adc
sbb
cmp
rol
pop
faddl
sbb
push
test
stos
clc
stos
loope
cli
test
mov
int
test
imul
inc
or
mov
inc
push
mov
mov
fwait
xlat
sti
inc
mov
cltd
mov
sub
mov
push
and
or
enter
int3
das
mov
pusha
or
repnz
push
es
add
loopne
xchg
test
jo
sahf
shlb
push
repnz
rcrl
pop
inc
insb
ds
into
mov
xor
ja
sti
xchg
ret
imul
add
imul
sub
mov
fisubrl
loope
lods
leave
movsb
bound
cmp
mov
dec
jns
andb
mov
inc
push
jnp
int
test
lock
and
push
cmp
sbb
es
and
fldl2t
push
inc
in
pop
aaa
nop
ds
cltd
mov
xchg
cmp
inc
pop
mov
push
jne
xor
out
xchg
mov
mov
jbe
outsb
xchg
sbb
jbe
adcb
cli
push
rorb
cmp
stc
outsb
or
sbb
mov
or
roll
xor
pop
dec
cmp
shlb
add
js
pmaxsw
jp
aam
pop
inc
out
pushl
and
xchg
xor
pop
cli
sub
and
ret
sahf
and
stc
les
dec
jg
inc
aaa
loopne
popf
mov
shll
inc
loop,pt
add
sbb
xor
add
jg
aad
pop
and
orl
movsb
pop
add
push
jnp
ljmp
mov
adc
sbb
mov
inc
pop
mov
fimuls
sbb
rorb
jp
cltd
cmpsl
mov
scas
outsl
or
mov
leave
dec
insl
mov
mov
and
dec
and
push
dec
pushf
jecxz
xchg
jo
mov
add
mov
pop
xchg
push
inc
lock
movsb
aam
jge
inc
add
icebp
xchg
mov
jg
mov
fmull
out
mov
xor
rorb
shlb
insb
pop
dec
repnz
outsl
mov
adc
lcall
daa
mov
incl
sahf
aam
and
add
pop
int
fsubl
or
inc
jg
fwait
inc
mov
repz
push
inc
loope
mov
or
imul
sbb
je
jnp
pop
in
out
jne
cltd
mov
sbb
nopl
add
int
loop
cmp
loope
or
movsb
jne
mov
sbb
cmp
daa
sub
and
cmp
gs
sbb
fcoms
imul
sarb
cmpb
pop
stos
inc
lods
popa
adc
aaa
push
jbe
push
int3
or
in
xor
xchg
dec
cmp
fildll
out
cmp
std
or
popa
mov
add
sub
js
inc
in
push
add
frstor
test
mov
lcall
scas
out
pop
ret
outsb
mov
popf
sub
dec
call
and
cltd
push
fbld
and
mov
cmp
gs
mov
pop
ficoml
subb
call
pop
mov
xor
push
inc
jo
jne
add
jge
jmp
mov
cwtl
js
fidivl
repnz
aaa
enter
xchg
jbe
vpaddusb
add
fdivr
push
pop
sahf
pop
aad
daa
in
ljmp
or
xchg
popf
mov
out
xor
lods
mov
sub
idivb
cld
mov
push
into
cmpsb
sub
mov
cs
adc
lods
push
clc
repz
in
mov
repnz
lods
out
or
jmp
fcoms
bound
xor
dec
icebp
xor
ss
call
mov
add
in
imul
lahf
xorb
es
fsin
stos
out
push
out
and
bswap
add
add
xchg
pop
nop
sahf
mov
fcmove
stos
dec
pop
lea
stc
push
aaa
stos
out
les
loopne
in
jmp
test
cmpsl
scas
lret
sarl
adc
cwtl
scas
jno
movsl
and
imul
outsl
adc
and
leave
mov
neg
mov
adc
cli
and
lret
mov
mov
outsl
inc
pop
stc
sub
in
ss
nop
call
orb
mov
inc
sbb
divb
pusha
sahf
lods
and
rclb
or
push
cmp
outsl
clc
adc
nop
or
add
fsubrs
xchg
jl
mov
int3
std
mov
rorl
fwait
sti
cwtl
cmp
push
push
sub
fisttpll
fsubs
gs
gs
sub
mov
mov
fisubs
scas
insl
int
dec
add
test
mov
cmpsb
jb
push
adc
cmpsl
sbb
in
xchg
repnz
mov
ljmp
pop
notb
in
inc
ja
std
adc
push
test
pop
in
cs
enter
xchg
in
inc
lods
repz
mov
lea
pusha
xchg
xchg
mov
xlat
nop
fucomp
push
pushf
xchg
mov
xor
push
xor
add
lds
add
pop
sub
cs
mov
aas
aad
push
rcrb
adc
rcll
mov
mov
or
pop
mov
adc
test
dec
lea
pop
idiv
push
test
xor
inc
in
push
scas
cmp
and
cwtl
jmp
shrb
pop
xor
aad
jne
xchg
add
pop
sbb
and
vorps
fwait
adc
jle
pop
in
jns
stc
adc
inc
rcll
pop
mov
dec
fsubl
push
jge
sub
and
test
jg
movsb
and
add
xor
pushf
iret
movsl
push
subl
pop
sbbl
mov
ret
inc
das
out
adc
call
je
adc
outsl
pop
aad
enter
repz
inc
leave
or
in
hlt
sbb
xchg
and
xchg
sub
scas
mov
mov
fxch
or
push
sub
gs
sbb
or
je
decl
mov
lahf
adc
cmp
mov
insb
test
sub
xchg
bound
mov
loope
push
jno
mov
dec
shlb
push
int3
xor
cltd
aad
scas
fstl
mov
adc
pop
pcmpgtb
in
gs
adcb
sub
popa
mov
mov
loope
pushf
fiadds
push
fnstsw
fnsave
pop
pop
mov
inc
push
mov
ljmp
imul
mov
data16
cmp
int
cmc
xor
shr
jecxz
xchg
mov
in
inc
dec
inc
outsb
js
stc
mov
cmp
outsb
addr16
jmp
dec
gs
fwait
and
pop
lcall
stos
pop
jl
ja
jno
mov
mov
jne
aas
fimuls
mov
lcall
popf
imul
fldcw
call
dec
pop
sti
ret
mov
mov
push
adc
sbb
sbb
enter
pop
mov
fdivl
rolb
cwtl
inc
imul
in
xchg
cltd
mov
mov
xchg
das
push
push
out
dec
inc
cmpsl
jmp
jb
push
fdivrp
sbb
cmc
cmp
add
mov
gs
push
or
test
cmp
mov
sbb
aaa
test
push
mov
imul
or
lret
shrb
lret
push
adc
repnz
lods
push
data16
xchg
loop
xchg
nop
hlt
cmp
loop
sahf
pop
pmulhw
cmpl
loope
daa
sub
outsl
test
std
ret
sbb
and
insl
jecxz
js
mov
sbb
cs
aad
add
lods
dec
in
imul
sub
xor
cli
fcomps
scas
pop
scas
inc
xchg
adc
push
jle
mov
sahf
push
push
dec
cmpsb
cmc
out
lods
xorb
hlt
mov
adc
ss
dec
pop
leave
pop
cwtl
sbb
ret
dec
cmpb
jmp
call
out
call
xor
lds
push
popf
popf
ret
push
sbb
xchg
or
insb
jno
dec
cmp
into
dec
into
sub
std
mov
lea
lods
inc
pop
inc
inc
inc
aad
pop
push
mov
or
xlat
in
xor
and
mov
testl
inc
push
add
jb
mov
mov
inc
cs
outsl
ret
loop
cld
movsl
and
sti
or
sub
sub
xchg
int
jnp
nop
test
and
pop
sbb
out
xchg
sahf
inc
loop
mov
cwtl
sub
ror
cmp
daa
pop
mov
add
cli
aas
mov
mov
shlb
jp
test
pop
or
add
cmpsl
mov
seto
ja
and
or
pushf
and
push
in
cld
mov
out
inc
in
fs
gs
in
imul
adc
orb
sub
mov
add
rcrb
js
mov
arpl
jge
faddl
adc
xchg
jo
adc
mov
pop
mov
out
fmul
lret
das
dec
mov
sub
les
xor
adc
fs
mov
out
movsl
jae
cmc
jl
pusha
and
iret
push
push
loope
andl
cmpsb
lret
popa
inc
ja
pop
popf
negl
iret
dec
sbbl
sar
xchg
loopne
in
lret
fldl
loopne
or
popf
bnd
lods
cltd
les
pop
rolb
shlb
shrb
mov
cld
adc
lcall
dec
add
mov
lea
mov
out
das
je
dec
push
mov
decb
stc
int3
mov
icebp
cwtl
repnz
add
fisubrs
in
cmp
in
jge
sub
in
cs
loop
sbb
loopne
mov
out
fwait
add
lock
arpl
sahf
lods
jnp
cs
cmp
and
add
adc
inc
jae
mov
jno
sub
xchg
scas
aas
sub
cltd
add
dec
xchg
cmpsb
and
mov
mov
lock
sbb
mov
add
ret
xchg
subb
inc
mov
aad
call
mov
shll
adc
fabs
adc
cld
cmpsl
aaa
mov
sub
iret
push
push
clc
and
mov
mov
xor
adc
adc
fldenv
repnz
in
mov
dec
leave
and
mov
push
sbb
jmp
jl
cmpsl
leave
shl
insl
std
aad
aaa
roll
xchg
or
in
jo
jle
hlt
loopne
xor
add
push
mov
inc
add
clc
stc
repz
push
stc
mov
das
mov
cmp
pop
js
jbe
pop
or
jecxz
mov
jo
jno
fiaddl
xor
aas
mov
inc
push
aaa
sahf
enter
jae
fs
loopne
cmp
call
jne
sub
sbb
jne
rcrb
sbbl
push
call
addr16
aaa
ror
push
or
js
repz
test
pop
mov
inc
and
push
jo
mov
xchg
cmp
sub
popf
push
lcall
fnclex
mov
mov
enter
fsubl
xchg
mov
mov
xor
testb
movsl
mov
lods
inc
add
test
scas
lcall
fwait
ret
inc
mov
add
push
ftst
repnz
push
add
add
fisubrl
sub
push
pop
outsb
call
in
leave
inc
iret
dec
inc
xor
mov
pop
or
cld
jecxz
icebp
rol
or
xchg
ja
imul
popa
out
cmp
sbb
ret
rolb
add
push
sbb
int3
xchg
pop
dec
mov
mov
add
jb
and
cmp
pushf
bound
mov
jge
loopne
test
fists
dec
inc
shlb
sbb
loope
mov
lret
aas
mov
mov
xchg
cmp
mov
rorb
fs
fnstcw
inc
inc
icebp
test
je
mov
mov
sub
or
ds
jg
sub
sbb
pop
fcos
jecxz
push
fstpl
push
bound
test
int
arpl
or
bound
adc
cmp
cmpsl
xorl
xchg
push
aad
stc
lret
or
mov
fildl
addr16
mov
jno
jmp
out
add
mov
sbb
sub
xor
js
inc
addb
adc
popf
into
stos
dec
pop
mov
sub
test
push
cmpsb
and
sub
jb
pop
mov
jnp
testl
push
jmp
stos
adc
imul
add
roll
lods
icebp
push
cmp
hlt
jg
lret
or
mov
mov
cld
mov
jns
cs
mov
imul
push
fcoms
lds
mov
cld
aad
std
cmpl
mov
mov
add
or
stos
call
xchg
test
mov
xchg
adc
js
das
cmp
jbe
adcl
psubusb
push
xor
cmp
mov
fbld
pop
sub
add
sahf
push
xchg
adc
sar
xchg
fldl2e
out
in
es
add
imul
add
lock
pop
pop
adc
mov
scas
roll
pop
aad
cmpsl
test
lock
and
clc
mov
jne
cmc
pop
icebp
movsb
jns
adc
sub
cmpsl
adc
call
mov
movsl
sub
repz
test
cmpsl
push
test
dec
xor
out
or
es
mov
clc
clc
pop
cwtl
js
and
pop
push
adc
rcr
lret
lock
mov
enter
hlt
adc
adc
jmp
pop
outsl
imul
mov
cs
loopne
sti
das
mov
mov
inc
push
sbb
mov
and
fcom
adc
jge
repz
or
shlb
cmp
cmp
mov
popf
jl
inc
add
cmpsl
pop
push
cli
bound
mov
sbbl
orb
inc
jnp
mov
mov
aas
mov
xchg
mov
sahf
pushf
and
in
inc
and
jbe
inc
inc
or
rcll
xchg
lret
aad
sub
mov
out
sti
mov
mov
mov
push
lods
fstpt
dec
push
into
xchg
out
mov
jae
add
push
cld
fwait
push
mov
push
movsl
dec
cmp
arpl
mov
and
push
cmc
mov
mov
cmc
cli
gs
or
loop
mov
scas
popa
ss
or
dec
scas
call
cli
xchg
mov
push
adc
xchg
xchg
les
xor
rol
pop
pop
dec
sub
in
call
dec
shl
push
adc
mov
lret
test
roll
add
shlb
add
jns
test
mov
sbb
ja
imul
adc
jmp
cmc
in
sbb
dec
mov
repnz
into
loop
leave
push
or
cmpsb
fsubrs
mov
outsb
aaa
in
mov
cmp
adc
movsl
fldt
fldenv
mov
mov
jecxz
shr
jle
je
pop
rcrb
arpl
test
cmpsb
inc
mov
int3
pop
cmc
jnp
lcall
xlat
rolb
outsl
or
popa
jmp
mov
fndisi(8087
ret
inc
xor
jo
fimull
fmul
jl
test
test
scas
imul
sbb
jbe
jb
pop
jno
add
add
cltd
in
psubusw
push
lock
ret
xchg
jae
fcmovnb
jge
add
push
loopne
sub
jnp
into
mov
repz
jmp
loop
lock
popf
adc
fistpll
mov
lods
lcall
mov
fidivs
aaa
inc
in
add
pop
inc
out
xchg
mov
adc
aam
aam
insl
dec
fcomps
push
fists
mov
int3
aaa
sbb
mov
pop
mov
sub
sub
shll
adc
sbb
rorl
inc
out
int3
jnp
in
icebp
aaa
pop
push
xor
clc
gs
lods
loop
aas
cmp
mov
pop
pop
je
cmpsb
cmpsb
cmpsl
aaa
add
push
stos
and
jne
add
or
dec
hlt
out
xchg
push
sub
stos
clc
push
sbb
or
cwtl
add
mov
cmp
mov
push
imull
cmp
xchg
and
roll
mov
sbb
add
imul
inc
cmp
jbe
push
mov
add
xchg
mov
dec
and
jmp
pop
stc
fnstsw
fwait
ret
xor
push
xor
pop
jae
lea
adc
push
mov
imul
std
cmpsl
cmpsl
loopne
sbb
sahf
inc
neg
jbe
inc
mov
insl
inc
jae
cmpsb
sub
loopne
stc
loop
sahf
xchg
mov
xchg
test
push
xor
scas
out
cmp
dec
mov
insl
push
out
ja
pop
pop
call
dec
mov
gs
rolb
insl
sbbl
scas
out
inc
cmp
ret
int
or
sarl
cmp
cwtl
push
int3
ja
and
mov
adc
movsl
mov
aas
mov
lcall
xor
mov
xor
or
mov
aam
mov
cmp
mov
sbbl
popf
cmp
int3
jo
cmc
rcrl
jle
test
into
adc
enter
jae
mov
and
cmp
dec
jl
add
mov
sahf
sbb
scas
dec
mov
ljmp
lock
pop
inc
das
pop
inc
aas
insl
and
lret
adc
jae
aas
pop
and
sbb
pusha
lods
sub
jno
push
sbb
mov
sub
xor
pop
testb
mov
inc
jns
icebp
outsb
mov
adcl
and
rcr
cltd
xchg
push
ds
jmp
add
in
sbb
and
inc
cmp
lea
ljmp
add
cmpsb
pop
daa
arpl
fwait
movsb
adc
repnz
ds
xor
shll
xor
out
jno
movw
push
adcb
shl
or
xchg
mov
loop
cmp
xor
inc
push
xchg
cmc
mov
mov
xor
sti
rcrl
jle
add
jg
ret
hlt
pop
mov
xchg
jno
sub
dec
ret
xor
std
stos
mov
jne
inc
jbe
es
xlat
mov
fmul
roll
mov
push
mov
aaa
inc
iret
fwait
pop
cli
lock
adc
mov
pop
mov
sbb
and
push
jg
in
orl
mov
lcall
push
xchg
cmpsl
pop
shrl
jae
xchg
cmp
jae
mov
mov
ljmp
in
cli
pushf
mov
adcb
js
mov
cmp
shll
popa
pop
icebp
dec
cmp
and
xor
add
das
or
cmp
dec
cltd
mov
jl
add
dec
cwtl
jle
imul
mov
lock
cli
sbb
push
jae
jp
hlt
ss
mov
jecxz
cmpsb
jnp
jne
lret
aad
adc
mov
xlat
xor
ret
movsl
push
daa
int
pop
and
aas
or
gs
outsb
sub
xchg
push
outsb
jae
push
stos
and
popf
xchg
adc
in
jae
lret
leave
mov
lea
mov
jge
mov
pop
sbb
xor
into
je
out
xchg
lcall
repz
lock
pop
jge
popf
sbb
mulb
lahf
int3
frstor
cmp
mov
push
cmp
insl
lds
xchg
or
and
stos
pop
ja
rorb
sahf
mov
xorl
jno
cmp
clc
outsb
in
cltd
mov
addr16
cmp
jno
cltd
mov
mov
mov
orl
inc
push
icebp
adc
jno
jecxz
sub
ss
push
adc
mov
adc
mov
inc
arpl
lock
sub
mov
es
mov
push
cwtl
mov
mov
xchg
cmp
xchg
in
add
jns
lahf
popf
and
xor
cmc
loopne
sbb
loopne
fldl
fs
push
ds
ret
mov
fiadds
imul
sub
pop
mov
pop
mov
cmp
push
mov
mov
cmp
xor
leave
cmp
sub
imul
dec
mov
pop
arpl
mov
xor
shr
add
lea
push
imull
pushf
pop
test
shl
sub
subl
sahf
mov
out
mov
dec
das
das
dec
add
cwtl
insl
lret
push
dec
mov
inc
jmp
call
shrl
lahf
xor
push
xchg
cmpsb
pop
lcall
adc
and
add
lds
push
in
rcrb
push
inc
arpl
mov
mov
andb
lret
dec
pop
in
and
jmp
bound
adc
xchg
cltd
mov
adc
mov
jl
cmp
stos
xor
inc
push
jl
subb
aaa
mov
mov
imul
dec
stos
fisttpl
fwait
aas
in
jecxz
or
fs
mov
mov
fwait
and
cmp
inc
loop
ds
push
push
mov
dec
loope
mov
dec
push
ret
sbb
icebp
push
xchg
sti
mov
rorb
fildl
iret
stos
pop
pop
ss
xchg
adc
add
loop
ss
in
pop
scas
scas
adc
jne
pop
mov
pop
insl
sub
cwtl
loop,pt
jmp
rcl
push
mov
in
or
cmp
out
cmp
inc
mov
mov
pop
inc
bound
mov
movsl
test
push
je
xchg
push
mov
fisubrl
mov
iret
lcall
or
loop
cmp
xorl
jno
mull
xor
or
pop
stos
lock
push
mov
jo
mov
jp
iret
pop
and
mov
pop
movsb
aas
and
cld
sub
add
jb
and
dec
sbb
popf
mov
push
shll
inc
or
inc
add
cld
lcall
dec
adc
mov
repz
frstor
xchg
ja
incb
shr
into
cmpsl
shl
push
lods
lahf
dec
lret
leave
stos
sbb
jne
jno
or
sahf
mov
cmp
or
mov
out
xchg
jecxz
faddl
push
inc
mov
data16
dec
pop
inc
mov
nop
cs
test
jecxz
icebp
shll
in
pop
repz
dec
shlb
xor
enter
mov
in
jecxz
mov
add
sbb
leave
ds
hlt
das
jne
push
jne
xchg
xor
popa
leave
bound
in
xchg
sahf
addb
or
rorb
in
cmp
decl
or
xlat
nop
notb
inc
dec
dec
lret
pop
adc
lret
adc
lahf
sbb
dec
mov
mov
ja
push
mov
int
jge
or
test
xchg
out
jge
push
out
out
pop
sbb
out
jne
nop
mov
and
inc
and
in
ja
lds
mov
sbb
mov
sbb
fcoms
jb
inc
add
stos
dec
pop
into
lret
or
mov
in
adc
dec
push
sub
test
xlat
xchg
mov
ficoml
sub
push
int3
push
lret
aad
std
orb
and
push
add
mov
daa
add
pop
adc
sahf
sub
cmpsb
mov
xchg
ss
mov
pusha
pop
shlb
jo
divb
js
jnp
sub
push
clc
stos
mov
insl
xchg
fadd
push
movsl
mov
xor
js
pop
fbld
pushf
jae
test
fwait
arpl
fucomi
test
push
xchg
inc
testl
jle
fs
imul
nop
push
pop
push
in
ds
jb
in
xchg
inc
stos
mov
push
jecxz
xor
lea
pusha
or
xor
push
pop
lahf
adc
dec
jle
and
fwait
or
sti
mov
ljmp
ret
rolb
mov
adc
out
mov
in
vpaddd
sbb
pop
fs
and
jecxz
test
loop
sarb
dec
inc
xchg
rorb
jnp
mov
in
pop
cmp
into
mov
bound
fdivrp
out
pop
or
int3
push
cmp
pop
lock
loope
scas
data16
lods
pushf
iret
sbb
dec
bound
fnstenv
sub
or
adc
xchg
and
sub
mov
jmp
sbb
xor
inc
ljmp
lods
lods
bound
mov
jg
mov
outsb
fidivl
test
cmp
cmp
inc
repnz
mov
xor
jge
pusha
push
add
aam
int3
jns,pn
jae
pop
in
xor
or
int3
pop
and
jns
repnz
mov
cmc
xlat
andl
aas
inc
jb
pop
shlb
mov
push
mov
lds
mov
out
movsl
xor
sbb
in
pop
pop
in
mov
xor
ss
aaa
stos
leave
mov
aam
push
gs
add
mov
rclb
mov
add
mov
cmp
pop
dec
ret
dec
cmp
dec
pushf
pop
xchg
icebp
mov
adc
pop
out
fstp
cltd
lahf
stos
jae
lods
shll
dec
in
insb
sub
sub
push
lock
mov
shrb
sub
add
jg
test
out
iret
xchg
mov
add
mov
fnstenv
sbb
fnsave
jp
cmp
ret
pop
inc
xor
loope
lahf
cwtl
pushf
fildl
jp
dec
in
sub
aaa
mov
add
and
pop
mov
jge
pop
push
dec
or
movsb
rcr
bound
call
xor
push
mov
fsubl
pop
add
mov
bound
cli
jb
sbb
sarb
and
pop
push
lcall
xchg
loope
sub
dec
mov
inc
inc
shll
fs
inc
push
addr16
les
rcrl
push
inc
lock
lcall
repz
fsubrs
or
hlt
xchg
lahf
mov
mov
lods
xchg
adc
ficoml
in
jmp
popa
or
xor
fstpl
call
sbbl
push
adc
xchg
mov
mov
shl
cmpsl
push
add
int
xchg
jl
cmp
je
or
shlb
push
and
push
daa
dec
outsl
sbb
imul
mov
add
das
stos
out
mov
jbe
mov
push
mov
mov
rcrb
ds
out
mov
aaa
or
fdivp
in
loopne
insb
jae
ret
outsb
pop
cmp
ja
mov
in
nop
roll
cltd
pop
shl
inc
and
lea
dec
leave
sti
cli
pop
pop
lret
decl
jno
sbb
add
ja
pop
cmp
lea
test
pop
subl
lock
push
push
xchg
into
add
xchg
push
xchg
mov
idivl
dec
scas
repnz
xchg
cmp
es
adcb
sub
imul
imul
mov
int3
add
ds
inc
sbb
das
xchg
inc
push
pop
jne
out
outsl
gs
ror
lret
mov
fcomp
aas
xor
stos
call
inc
fwait
loopne
dec
daa
cmp
shll
mov
sub
cmp
sub
fsubr
test
xchg
jae
mov
jmp
mov
pop
xor
sub
push
addr16
mov
mov
push
xchg
lods
frstor
movsl
pop
insb
xchg
and
inc
test
dec
jnp
jmp
loopne
das
shr
andl
out
ret
mov
stos
movl
sub
cmp
aad
into
jle
add
mov
mov
rcr
push
ljmp
mov
push
adc
into
mov
xchg
ret
out
and
std
test
das
mov
sbb
clc
jg
xor
inc
test
mov
aaa
cmp
lret
ljmp
addr16
sub
jl
xchg
int3
xor
mov
lret
push
sbb
add
mov
push
in
cmpsb
pop
stos
loope
mov
bound
inc
push
xlat
mov
inc
push
in
xor
out
mov
movsl
xchg
sar
sbb
icebp
dec
mov
inc
imul
jp,pt
pusha
inc
adc
add
mov
fs
stos
jae
test
jne
mov
in
nop
add
mov
mov
daa
xchg
pop
xchg
fwait
ds
adc
incl
icebp
lea
push
or
lahf
lahf
fstps
inc
gs
outsb
xor
test
inc
mov
stos
lret
inc
out
inc
stos
clc
ret
jge
or
jb
pop
jbe
sub
adc
and
cmp
and
pop
int3
cwtl
dec
fprem1
lods
mov
repnz
jb
das
clc
push
cmpl
add
pusha
push
dec
std
fsubrs
mov
negb
popa
ja
add
jle
jno
sub
imull
daa
test
bound
ja
adc
ss
das
inc
sbb
mov
mov
int
cmc
mov
cli
in
sbb
cmpsl
mov
xor
cmp
popl
jle
or
shr
push
pop
fisubl
jmp
dec
xor
sub
adc
cmpsb
movsl
aaa
ret
cmpsb
xchg
xor
adc
cmc
mov
mov
add
iret
sub
imul
cmpsl
fs
push
pop
je
xchg
stc
icebp
imul
xchg
dec
inc
cmp
lahf
test
mov
mov
mov
mov
add
leave
mov
pusha
fs
pop
andl
mov
ret
scas
sub
jle
imul
rcrl
ss
adc
and
lods
scas
cmp
adc
fistpl
mov
pop
aad
test
pop
addr16
inc
xchg
xchg
jbe
stos
adc
pusha
xor
cmp
loopne
pusha
or
xor
ss
iret
mov
sti
push
stos
mov
xor
push
mov
enter
clc
or
add
sub
cmp
mov
dec
and
push
mov
aaa
out
fisubs
sarl
and
fstpt
adc
cmpsb
cmpsb
xor
clc
pop
jns
push
mov
ljmp
rol
push
xchg
out
stos
adc
call
insb
hlt
add
outsl
ja
push
and
xlat
nop
and
clc
xchg
das
add
popa
fbstp
add
xchg
jno
addl
das
mov
fs
movsl
std
call
addr16
addr16
arpl
ret
cmp
mov
sub
xor
mov
fmull
mov
jno
push
push
adc
ja
mov
cs
pop
jp
sub
jbe
jp
sar
daa
test
add
mov
insb
sub
inc
das
jmp
inc
inc
jp
pop
lods
jl
test
or
sbb
inc
ret
lea
sub
int
pop
cwtl
addl
push
stos
sbb
push
xor
repz
inc
push
push
stos
xor
rcrl
icebp
dec
mov
push
xlat
jbe
addr16
pop
loopne
fisttpll
ret
push
icebp
jge
pop
adc
movsb
pop
mov
cs
ljmp
mov
add
inc
out
mov
ss
jmp
stos
push
dec
in
sti
sbb
xchg
arpl
scas
mov
push
int3
popa
int3
mov
addr16
lock
movsl
into
cmpsb
pop
cltd
xchg
mov
mov
mov
and
call
insl
imul
jecxz
in
mov
add
inc
negb
adc
xchg
std
fsubrl
aam
and
iret
aas
mov
adc
mov
add
aad
mov
inc
cmpsb
in
pop
push
adc
addr16
in
in
aam
inc
pop
popf
lcall
add
outsl
jecxz
enter
jmp
andb
cmp
sub
cli
stos
mov
sbb
sbb
notb
gs
mov
xchg
inc
fisubs
mov
cmp
das
sub
call
sub
lock
inc
or
push
adc
pop
push
jp
loope
mov
out
mov
stos
cs
notb
jo
movsl
inc
push
cmp
lock
inc
adc
lret
lods
push
mov
or
aam
add
scas
mov
pop
xor
subb
xchg
pop
cld
or
mov
add
sbb
push
mov
out
pop
push
pop
lea
insl
add
stos
das
mov
popa
sahf
test
sbb
mov
mov
and
cmp
adc
sbb
aas
xchg
out
jp
cmp
pop
mov
mov
add
repz
mov
mov
stc
test
push
test
sbb
movsl
stc
in
add
pop
mov
mov
js
push
ds
sub
sti
inc
mov
adc
cld
mov
idiv
loopne
xlat
sub
scas
cltd
data16
shlb
pop
cmp
icebp
popf
pop
pushf
loop
mov
and
push
arpl
cmp
aaa
pop
adc
pusha
divb
in
lahf
xor
scas
xchg
mov
rorb
pop
mov
subb
jecxz
inc
jle
pop
int3
inc
and
sbb
hlt
fsts
mov
jl
and
push
mov
inc
dec
fisubl
adc
sahf
inc
mov
xchg
pop
mov
xchg
pop
bound
mov
mov
and
mov
adc
pop
mov
mov
sbb
mov
into
mov
push
mov
je
out
sub
insb
jge
das
dec
insl
bound
xor
outsl
out
push
mov
xchg
ss
cmp
sbbb
repz
ret
pop
jae
xchg
les
sub
shll
dec
lret
xchg
flds
mov
popa
scas
sbb
les
sahf
or
dec
cmp
outsb
xlat
sar
cli
imul
mov
lds
add
mov
sub
inc
ljmp
mov
adc
push
xor
out
cmp
arpl
xor
pop
cltd
fmull
jnp
pop
jmp
jmp
ss
sbb
andb
pop
push
adc
jmp
out
lea
mov
dec
xchg
sbb
pop
dec
ljmp
cmp
pop
ss
cld
out
repz
or
gs
push
mov
pushf
sbb
test
sbb
inc
jbe
ss
inc
mov
aas
pop
pusha
inc
cmp
xor
fidivl
jle
into
imul
test
addr16
mov
add
xor
push
scas
push
lock
in
scas
out
jg
mov
xchg
mov
pushl
scas
jmp
out
in
inc
pop
nop
sbb
fs
and
hlt
pop
es
mov
popa
mov
popf
sub
les
je
fsubl
lcall
scas
or
fcomip
add
insl
and
pop
mov
xchg
cmpsl
sub
je
punpcklbw
cltd
cmc
imul
adc
nop
hlt
mov
jb
cwtl
fdivl
xchg
ja
mov
and
fcoms
pusha
push
and
sbb
insl
xchg
mov
adc
lods
sbb
adc
mov
inc
shrb
dec
out
mov
or
sbb
cmp
mov
mov
lock
jb
imul
xorb
lret
sahf
add
cmpsl
loop
push
hlt
rorb
clc
lret
push
xlat
das
decl
cs
out
subb
pop
cmpsl
or
imul
sete
xlat
push
shl
mov
test
dec
test
xchg
pop
loopne
in
mov
jo
cmp
mov
nop
scas
shrl
pop
sub
imul
mov
cwtl
mov
dec
dec
adc
or
test
mov
sub
fs
mov
aam
mov
mov
cmp
mov
adc
rcrb
sub
push
sbb
shrb
inc
insb
mov
jne
mov
cwtl
or
repz
xchg
pushf
in
push
adc
mov
subl
imull
test
xchg
and
mov
test
lahf
ss
xchg
mov
xchg
push
stos
stc
decb
xchg
shr
cli
xchg
insb
mov
pop
loope
out
cmpsl
jb
cli
fidivl
stos
mov
fs
notb
cmp
sbb
stc
adc
fistpl
xchg
test
xchg
stos
scas
int3
xchg
mov
mov
push
test
cwtl
push
add
mov
sbbl
arpl
arpl
iret
je
fldl
inc
jnp
mov
cmp
popa
data16
dec
rcrb
push
ret
out
mov
xchg
imul
shlb
pushw
add
data16
fimuls
push
push
nop
aad
int
pop
pop
pop
ret
shrl
jb
inc
icebp
xchg
call
sbb
and
sub
lea
les
jae
stos
push
mov
push
dec
or
inc
cmp
adc
sub
jb
inc
mov
and
ljmp
or
xchg
push
lret
xchg
adc
push
mov
push
cld
lret
test
sub
cmp
push
mov
arpl
lcall
fidivrl
mov
stc
lds
inc
mov
jl
mov
adc
mov
cmp
test
gs
dec
push
subl
inc
jno
out
scas
lds
xor
dec
pop
lcall
mov
xchg
rol
dec
aad
in
xor
fwait
ret
ds
sahf
adc
lret
sbb
cwtl
sbb
jbe
xor
add
sbb
mov
mov
repnz
jmp
sub
gs
and
add
ja
stc
adcl
enter
cmp
lock
ja
aas
or
inc
ret
jbe
push
dec
jecxz
scas
inc
movsb
and
cmpsb
roll
jle
cmc
sub
ds
xor
xor
sar
repnz
cmc
aas
push
mov
aas
incb
mov
jecxz
mov
and
fistpl
test
cmp
mov
mov
mov
arpl
roll
lret
shlb
ljmp
dec
lock
jno
pushl
mov
cld
inc
mov
dec
or
push
rcl
cmp
ret
sbb
dec
adc
outsb
jbe
push
into
mov
incb
add
enter
mov
and
adc
sbb
mov
bound
mov
mov
cli
push
js
loopne
into
jnp
cltd
inc
pop
das
or
dec
jbe
adc
dec
jno
and
xchg
pop
popa
outsb
inc
and
sub
in
fnsave
dec
adc
mov
idivb
inc
or
fstpl
add
cmp
xor
cmp
jp
js
shlb
leave
cmc
jecxz
pop
adc
mov
pop
jae
test
in
cmpsb
xchg
xchg
scas
jecxz
pop
sub
aas
push
popa
add
push
cmp
mov
cmpsb
ffreep
lret
popa
mov
mov
ljmp
lret
movsl
sub
fcompl
hlt
and
mov
push
mov
dec
lods
cmp
inc
test
dec
popa
inc
adc
js
movsb
insl
xor
xlat
mov
pop
jp
cmpsb
popf
dec
inc
out
fsubrl
mov
mov
and
mov
sub
dec
imul
negl
jp
stos
out
lds
sbb
rcrl
xlat
add
xchg
addr16
inc
imull
push
pop
mov
xchg
mov
jno
dec
jmp
fnstcw
or
xor
loop
mov
push
mov
je
jnp
repnz
adc
mov
mov
or
enter
mov
and
or
pop
cmp
fwait
and
mov
jo
popa
sbb
cmp
mov
movb
cmp
leave
ret
jne
xlat
push
sub
shrl
push
ret
mov
add
and
pushf
add
hlt
mov
fstl
cmp
fldt
push
sbb
ret
mov
mov
pop
push
sub
jns
push
out
in
fs
and
xor
xchg
mov
repz
fmulp
mov
or
sub
or
fstps
push
xor
jge
arpl
mov
mov
push
xchg
cmp
mov
lds
and
sbb
lods
jns
out
js
fwait
mov
ja
jnp
push
scas
jmp
adc
std
lock
push
mov
aam
cli
in
adc
mov
mov
mov
div
lret
movsb
sbb
mov
call
pop
call
iret
clc
inc
mov
das
iret
pop
es
in
je
inc
adc
mov
adc
or
push
pop
and
sahf
cmp
fwait
mov
pop
xchg
das
aaa
mov
xor
fs
lahf
adc
mov
adc
mov
jmp
dec
mov
sbb
dec
jmp
and
cmpsb
dec
sbbl
adc
push
psrlq
push
mov
ficoms
add
sub
call
mov
fs
hlt
daa
xchg
daa
clc
iret
add
inc
and
fmull
push
dec
sub
mov
test
sbb
sub
cmpsb
gs
dec
shrl
dec
sub
pop
jnp
inc
push
mov
jmp
fucomp
pop
and
or
sbb
lretw
pop
jno
mov
leave
jb
repz
or
in
repnz
adc
int3
sti
sbb
push
xor
mov
inc
or
jne
xor
cmp
xchg
inc
clc
dec
or
push
out
cltd
add
hlt
jae
push
mov
jl
xchg
stos
xchg
sahf
lcall
cli
idiv
adc
call
das
rcl
xor
jle
pop
bound
pusha
jnp
jecxz
mov
adc
or
mov
or
sbb
sbb
xor
test
pop
punpckldq
aas
jb
fistpl
inc
and
in
cmp
mov
and
pushl
inc
or
cmp
dec
adc
xchg
hlt
dec
mov
xchg
in
inc
inc
mov
pop
mov
popf
es
popf
mov
dec
xchg
cltd
dec
test
push
out
out
sbb
xchg
jg
cmp
or
outsb
sbb
mov
pop
sti
inc
test
loopne
daa
cltd
fisttpll
pop
cmp
data16
addr16
cmc
mov
push
and
xchg
test
les
mov
push
repnz
xchg
addl
mov
dec
movsl
push
icebp
out
aaa
mov
fistl
shll
jge
orl
inc
mov
xlat
xlat
mov
push
mov
xor
add
inc
adc
mov
adc
pop
xchg
test
cmp
dec
or
addr16
pushf
dec
push
movsb
int3
cmp
mov
cmp
mov
lock
movsb
outsl
and
xchg
sbb
popf
dec
adcb
adc
add
sti
ret
mov
and
lods
lods
lds
xor
or
mov
mov
add
test
rorb
outsb
sub
mov
add
jl
loop
mov
xchg
imul
rcrl
sbb
ss
jno
sti
mov
inc
mov
sahf
dec
inc
cmc
testl
inc
rcrb
sub
in
dec
adc
sahf
jb
sub
ret
mov
adc
rcll
jp
mov
scas
jp
sahf
insl
push
and
fsts
dec
jge
popa
and
inc
or
cmp
jno
add
mov
fsubr
mov
jne
dec
ljmp
negl
repz
insb
shl
sti
cmp
push
pop
outsb
and
xorb
cmp
test
cs
mov
scas
in
mov
lods
mov
push
shrl
jae
pop
xorb
adcb
out
imul
sti
rorb
inc
cmp
fistps
int
and
push
xlat
mov
hlt
rclb
push
popf
mov
lret
jge
pop
mov
add
add
stos
inc
push
cmp
popf
xchg
aas
xchg
loopne
ja
dec
push
sub
mov
push
jge
addb
push
call
xor
loope
or
mov
test
or
mov
shl
mov
add
mov
fnstcw
dec
xchg
xchg
xor
or
or
dec
ds
addr16
cwtl
pop
outsl
add
sbb
lcall
mov
cmpsl
pop
adc
cmp
add
gs
ss
push
or
pop
mov
pop
lret
pop
jbe
mov
xchg
pusha
inc
dec
pusha
daa
mov
or
xchg
data16
cmp
cmpsb
jne
imul
out
aaa
xor
popf
mov
add
jl
lcall
js
sbb
or
mov
xchg
pop
lahf
push
sti
int3
sbb
mov
les
sti
mov
cld
push
jle
nop
out
ja
pop
out
subb
push
fstp
mov
jle
jge
sarb
cltd
push
adc
jae,pt
xchg
adcb
jp
and
imul
cmp
mov
and
fstp
imul
in
pop
xchg
in
or
lock
inc
xchg
jnp
shl
xchg
mov
pop
jno
sub
js
push
mov
lds
rcrb
push
xchg
dec
pop
mov
jne
push
xchg
and
addb
inc
sub
fs
ret
out
outsl
subl
xlat
xchg
shr
and
call
or
lods
xchg
mov
cmp
addb
sub
sbb
rcrl
je
andb
andb
mov
stos
js
xor
outsb
repnz
inc
leave
or
stc
pop
in
jo
fstpt
pop
test
push
mov
jg
inc
dec
outsl
cmp
pushw
xlat
dec
icebp
sti
fprem1
xchg
jp
xchg
xchg
adc
call
sbb
clc
es
shlb
xchg
cs
fucomp
sbb
test
lock
sti
cmpsl
pop
dec
sahf
adc
pushl
int3
fwait
lret
jle
sbb
add
fwait
inc
in
imul
cmp
inc
add
pop
xor
pop
or
push
and
addr16
push
xor
cmp
sub
decb
cmp
jb
loopne
pushf
dec
sbb
mov
popf
sbb
xchg
xchg
mov
out
adc
movsb
lds
mov
or
nop
sub
bound
lods
repz
test
out
lods
cmp
ljmp
or
cld
mov
sbb
loope
imul
scas
pop
jecxz
inc
lods
lock
rcll
mov
mov
stc
test
lds
inc
xor
pop
add
inc
xchg
mov
loop
fs
imul
inc
shrl
int
mov
cmpsb
out
or
cli
lret
test
test
push
mov
movsl
ljmp
and
adc
inc
mov
stc
ret
push
adc
testl
mov
mov
mov
mov
xor
pop
inc
dec
pop
push
ja
mov
jmp
fsubs
aaa
push
sbb
jno
test
adc
repnz
and
pop
sub
rolb
int
dec
and
and
idiv
mov
js
dec
jl
ds
loopne
push
cmpsl
push
lds
into
nop
shl
xchg
stos
cmpsl
imul
iret
mov
push
lret
mov
sub
insl
subl
sbb
mov
mov
push
ucomiss
push
cmpsb
das
jnp
add
jns
leave
push
les
into
pushf
call
out
out
daa
inc
pop
sarb
and
or
scas
jb
add
fistps
orb
icebp
je
mov
xchg
jl
dec
pop
loope
mov
cli
xor
je
addl
sbb
jmp
or
mov
and
mov
fimull
cwtl
insl
aaa
pop
inc
test
xchg
xor
push
dec
dec
adc
lret
in
sahf
mov
adc
sti
icebp
add
test
test
mov
in
daa
adc
xchg
and
ljmp
test
test
mov
lret
mov
jnp
aam
insl
push
add
cmp
pop
cld
loop
sbb
jb
inc
mov
pop
pop
shlb
idiv
adc
in
lods
adc
cmp
int3
jle
cltd
xchg
movsb
mov
mul
push
and
mov
aas
xchg
mov
outsl
jns
js
insb
xchg
in
add
popf
xor
xor
hlt
pop
gs
out
xchg
out
lea
sbb
mov
ret
dec
inc
add
mov
sahf
hlt
or
fisttpll
push
adc
sbb
xchg
dec
jmp
lret
int3
adc
push
scas
dec
xchg
out
scas
lods
mov
mov
ss
sub
jo
cmp
xor
flds
pop
inc
jne
shrl
out
xor
lods
cli
test
jge
ret
ds
add
test
call
fwait
cmp
int
inc
sub
xchg
cmp
outsb
xor
call
gs
jno
int
jmp
add
inc
xor
cmp
and
push
cmp
data16
popa
cmpb
fwait
xchg
daa
ffree
dec
jle
cmp
cmc
inc
cld
dec
sbbb
test
xor
in
inc
or
xchg
es
or
pop
sbb
sti
int3
ss
mov
addr16
out
enter
out
scas
cs
or
or
push
mov
test
insl
mov
cwtl
aas
and
es
test
fstpt
or
adc
and
cmpsl
mov
ret
into
stos
outsl
stc
outsb
rcrl
fsubl
push
add
stc
insb
sahf
test
push
aaa
mov
cmp
repnz
fidivrl
jae
mov
inc
and
roll
rcrl
pop
add
out
cmp
mov
mov
jbe
sbb
out
mov
in
ret
and
xchg
pop
icebp
loop
mov
loopne
add
loopne
addr16
xchg
lods
out
insl
jnp
es
inc
jge
icebp
jle
scas
test
into
mov
ja
lds
cwtl
pop
ja
jmp
or
inc
jae
mov
rcrl
sbb
xor
push
into
mov
out
jns
pop
mull
andl
push
pop
lds
into
mov
pmullw
stos
sti
push
icebp
daa
pop
adc
gs
adc
cltd
and
cmpl
jp
mov
dec
sub
sbb
dec
repnz
add
mov
icebp
daa
pop
gs
icebp
or
iret
lock
push
jmp
xchg
mov
inc
mov
mov
xor
xor
stc
lret
and
inc
add
lahf
fs
lea
lret
enter
mov
mov
adcl
movsl
or
xchg
sub
dec
push
pop
std
std
mov
mov
sahf
lock
jmp
mov
sub
enter
dec
add
mov
mov
loopne
add
and
jmp
add
adc
push
lret
mov
sub
addl
sbb
mov
call
stos
stos
xchg
jnp
aaa
ja
addb
test
clc
jmp
jge
shrl
inc
and
add
int3
das
lret
push
mov
cwtl
int3
inc
sub
inc
mov
push
cmp
repnz
xlat
in
xchg
scas
mov
or
sbb
scas
sbb
mov
inc
ja
mov
shll
sub
jmp
aaa
enter
aad
jmp
cmp
jae
test
xchg
pusha
jo
icebp
lea
stos
clc
jae
pop
jns
fcomps
out
mov
test
jge
push
or
stos
insl
mov
orb
mov
push
add
sarb
std
jl
inc
cli
popf
mov
pop
popf
dec
dec
and
lret
xchg
test
ret
push
xor
mov
scas
mov
mov
mov
sbb
outsl
sbb
push
sbb
jns
loope
mov
sub
mov
testl
jo
fadds
mov
ljmp
sub
xchg
lock
in
jo
push
imulb
daa
pusha
mov
jmp
xchg
xor
add
adcb
inc
mov
arpl
mov
adc
lret
cs
rclb
jge
pop
outsl
push
iret
aas
add
sbb
mov
dec
add
xchg
loopne
testb
add
or
int
and
mov
rorl
mov
mov
mov
popa
add
lods
into
sti
cld
sbb
ljmp
mov
daa
or
stos
stos
and
sti
push
and
xchg
pusha
xchg
data16
xor
std
lcall
aas
jmp
push
or
fsub
mov
xlat
add
mov
cltd
shrl
push
fidivl
jecxz
sti
cmp
cwtl
int3
push
mov
sbb
add
pushf
divl
ljmp
bound
lods
cmp
sbb
aad
fwait
loopne
testl
jns
stc
in
das
pop
shll
movsl
addr16
adc
aaa
fstl
sub
push
cwtl
add
stc
adc
sbb
jno
dec
cld
inc
lcall
mov
mov
lods
sbb
jno
xchg
les
stos
mov
repz
hlt
pushf
pop
adc
fwait
xchg
dec
gs
mov
fwait
or
ret
imul
inc
xor
sbb
mov
addr16
sub
fsts
and
js
insb
cmp
fsubrp
movl
push
mov
mov
outsl
push
fstps
andb
and
add
xchg
sbb
mov
addb
mov
out
inc
daa
cmp
fadd
mov
cli
mov
jle
jne
pop
inc
pop
fwait
and
rclb
sbb
and
and
ret
pushw
js
mov
orb
jae
mov
dec
loop
into
outsl
mov
es
ret
mov
adc
imul
test
inc
cwtl
rclb
sub
xchg
adc
sbb
push
jae
pop
icebp
xor
xorb
arpl
sbb
pop
jp
mov
cmp
xor
cmpsl
test
pop
and
aam
enter
rcrl
sbb
jne
sbb
es
das
test
sub
insl
mov
popa
in
xor
cltd
fsubrs
lret
mov
dec
imul
or
pop
add
movsb
pusha
pop
add
xchg
jns
inc
call
arpl
in
jno
outsb
mov
imul
inc
bound
cmpsl
mov
nop
sub
cld
sbb
pop
mov
lea
loopne
cmp
shlb
adc
xor
xor
or
push
xor
out
xchg
dec
sub
sbb
or
add
jge
sbb
hlt
lret
insb
and
jo
mov
or
ljmp
add
sbb
dec
pop
jne
into
movsl
jmp
sbbb
imul
mov
call
jnp
adc
movsl
aas
xchg
mov
cmp
popf
jnp
insl
jo
mov
dec
pop
mov
or
addl
xor
jmp
test
adc
faddl
stos
lods
adc
loop
pop
loopne
mov
inc
aaa
pop
je
dec
cltd
fdivp
clc
divb
scas
jge
jbe
rolb
inc
or
shrl
lcall
dec
std
cld
dec
in
loope
jl
xor
aam
mov
jmp
lock
int3
pop
in
cmpsb
fmull
aad
pop
push
rol
adc
mov
in
add
mov
or
jge
jae
xchg
adc
pop
aaa
sti
insb
mov
cmp
xor
ds
mov
adc
dec
cs
outsl
mov
pop
lea
daa
pop
enter
push
or
sbb
push
jl
inc
adc
jmp
lret
dec
sbb
or
outsl
aad
sbb
ja
adc
ret
dec
imul
loop
out
adc
xchg
pop
cli
clc
test
mov
repnz
xor
clc
mov
lahf
mov
iret
or
add
adc
mov
inc
sbb
cli
sbb
and
dec
dec
or
pop
mov
in
pop
mov
testl
shrl
cmp
push
jo
push
inc
cmpsl
int
int3
icebp
dec
xor
mov
xchg
cld
fwait
push
sub
dec
ds
pop
pop
ds
nop
adc
in
aaa
mov
add
inc
fdecstp
mov
mov
jns
push
jg
cmpl
mov
cld
jmp
divl
pop
sub
arpl
pop
push
js
mov
int
pushf
outsb
sti
iret
pop
mov
or
cld
es
std
cmp
int3
mov
popa
add
mov
js
xchg
das
pusha
xchg
xchg
repnz
mov
mov
cmpsb
mov
daa
or
sub
and
in
and
mov
adc
test
dec
jno
sbb
xor
fwait
imul
pop
scas
push
int3
fsubp
fbld
cmpl
adc
inc
mov
adc
sub
jns
rcrb
xor
and
mov
out
adc
or
not
xor
jb
roll
sub
xchg
outsb
jb
ja,pt
fs
aam
jmp
pop
outsb
jmp
mul
add
stos
int3
test
inc
pop
jb
pusha
scas
and
dec
jnp
enter
pushf
arpl
bnd
sbb
jmp
mov
mov
xor
or
or
mov
push
ds
add
nop
loop
xor
add
ja
push
lcall
cld
ret
cmc
in
sahf
test
fnstcw
mov
sar
pushf
bound
cmp
clc
enter
mov
ret
roll
lds
sub
rclb
pop
jno
mov
rorb
in
lahf
mov
push
mov
mov
iret
pop
pop
mov
sbb
dec
xor
mov
out
push
movsl
ljmp
popa
pusha
sbb
cmpsb
jle
inc
nop
aas
pop
inc
dec
sub
push
xor
insb
pop
rcll
hlt
mov
in
popf
scas
outsl
push
dec
pop
inc
cmp
jge
add
inc
daa
inc
pop
push
sub
inc
mov
je
jmp
es
mov
sarb
test
fldcw
jae
cmp
lods
jnp
fdivp
push
sbb
sbb
test
in
push
cmp
and
pop
aam
mov
fnstsw
cmp
ljmp
out
mov
jp
pop
fbld
stos
pop
fwait
jne
or
jne
fs
cmp
xor
and
dec
or
faddp
scas
cli
lds
loope
xchg
pushf
cli
loopne
insb
sbb
cmp
mov
mov
imul
adc
pop
mov
xchg
jne
push
int
cmp
mov
call
jbe
scas
mov
dec
dec
push
push
jae
je
pop
and
stos
mov
inc
dec
iret
cmp
mov
addr16
lcall
and
cmp
fnstenv
xchg
mov
push
mov
or
mov
jge
xchg
jmp
adc
push
xchg
mov
mov
add
sbb
push
aam
out
dec
jecxz
mov
ret
andb
outsl
dec
loope
stos
iret
mov
sbbb
popf
pop
xor
mov
adc
test
xor
fadds
xor
aad
adcl
mov
lods
xchg
fcompl
insb
xchg
push
jg
sahf
jns
test
jmp
ret
stos
add
popa
lods
inc
mov
stos
jae
xorb
jle
in
add
negl
xor
lock
popa
push
jno
and
out
push
gs
fsts
jl
daa
inc
jmp
das
mov
insl
fucom
jae
out
and
shrb
mov
cmp
in
jo
dec
xor
mov
inc
push
xor
rolb
fistps
jne
fs
push
cmp
adc
pop
leave
cmpsl
shlb
and
fmull
rcrl
xchg
mov
adc
dec
dec
clc
add
cwtl
sahf
mov
jl
popa
out
pop
sub
scas
sti
les
fisubl
inc
cmpsb
mov
mov
pop
mov
push
xor
and
dec
jp
mov
dec
jl
lds
cmp
or
jecxz
mov
loop
pop
arpl
sub
out
fiaddl
cmovnp
sub
dec
mov
lret
mov
sbb
scas
jg
pop
mov
in
push
pop
cmpsb
jns
dec
in
shlb
sahf
push
pop
push
cmp
or
int3
dec
fcmovnb
mov
or
jns
test
js
movl
lods
and
xorb
cmpb
ljmp
mov
or
in
jge
addr16
dec
shll
daa
push
iret
nop
add
test
bound
lret
adc
push
mov
jle
push
mov
loopne
jle
fs
popf
test
push
lahf
div
ljmp
out
bound
push
cmp
pop
xor
xchg
push
fmulp
arpl
sub
push
mov
push
iret
cwtl
in
xor
aas
and
imul
fsts
jecxz
orl
cwtl
sub
xchg
jl
pop
sub
repnz
sarl
test
mov
xor
jmp
inc
and
cltd
push
pop
not
dec
cs
data16
jecxz
subl
push
ja
mov
xor
add
in
xchg
push
test
nop
loope
xlat
nop
mov
xor
mov
xor
push
aas
push
pop
jmp
int3
stc
fcoms
call
sbb
shrl
push
mov
mov
repnz
jo
jbe
jg
popa
cmp
pop
es
pop
push
insb
mov
int
cmc
jmp
dec
std
sub
testb
xor
pop
popa
negb
lods
das
or
push
sub
lock
int3
push
cmp
lods
bound
cmpsl
aam
jp
repz
jo
and
stos
int3
mov
inc
and
sub
adc
jnp
lods
dec
lret
inc
dec
or
gs
pop
xor
sbb
push
push
push
lret
inc
pop
pusha
out
mov
jo
jecxz
dec
shrl
fstpl
lock
scas
adc
lret
ret
test
roll
cmpsl
scas
stc
lahf
mov
cli
pop
sbb
add
sar
cmc
push
jns
aaa
and
stos
rolb
stos
sbb
sbb
fsubrs
mov
push
push
add
pop
pop
in
imul
fstl
fs
mov
sub
ljmp
mov
imul
mov
add
pop
add
out
daa
and
pushf
mov
cmp
outsb
xchg
and
out
xor
push
lcall
notb
jae
movsl
ret
outsl
fwait
dec
xor
stc
ljmp
cmp
add
sbb
dec
and
and
push
movsb
je
imul
daa
sbb
xchg
xor
mov
imul
add
enter
loopne
lods
mov
push
das
push
mov
xchg
sub
imul
arpl
push
inc
add
mov
xchg
cwtl
push
mov
xchg
lcall
jae
hlt
inc
dec
jle
sub
lock
movsb
add
in
je
xchg
test
in
inc
sbb
sahf
mov
cld
push
nop
xchg
repnz
imul
push
stos
movswl
cmc
push
sbb
faddp
xor
adc
mov
hlt
sar
mov
fcomps
stc
push
adc
pop
xor
mov
add
jno
dec
and
fwait
push
jmp
faddp
lcall
fidivrl
ret
out
ljmp
jo
sub
xchg
xchg
cmp
dec
daa
mov
test
mov
mov
pusha
xchg
das
cmp
adc
cmp
or
inc
mov
mov
pcmpgtd
adc
sub
ja
jno
rcrb
jle
or
pop
das
scas
pop
sahf
int
stc
pushf
xorl
inc
lock
dec
xor
mov
sti
add
sub
sbb
leave
fwait
sti
mov
mov
mov
repz
inc
dec
iret
movsl
lahf
mov
pusha
insb
fbld
ret
out
cmp
lods
inc
daa
add
fisttps
ja
sub
jp
mov
xorb
add
push
js
add
push
stc
popa
roll
mov
or
cmc
push
jbe
fdivrl
adc
shrb
cmp
jmp
popf
sub
das
dec
frstor
dec
pop
mov
arpl
sbb
cmp
dec
cmc
fnsave
dec
mov
ljmp
rcl
out
jo
aad
call
push
jbe
xchg
pop
xchg
adc
jnp
inc
pop
out
mov
sahf
or
sti
pushf
xlat
sahf
xor
jae
and
pop
scas
out
aad
jb
mov
sbb
je
sbb
js
jecxz
dec
sahf
je
pop
out
sub
shl
mov
cld
dec
xlat
mov
fisubrs
cmc
pop
scas
lcall
test
push
mov
ret
jp
dec
sbb
xchg
add
pop
mov
repz
ss
mov
es
iret
mov
mov
push
adc
in
push
call
ret
pusha
dec
xor
jo
cmp
inc
mov
cmp
cwtl
jg
aaa
push
out
insl
lret
cmp
mov
icebp
and
jne
mov
pop
jecxz
les
pusha
push
in
pop
repnz
sahf
mov
sar
fwait
aas
mov
mov
loop
imul
dec
add
clc
pop
xor
cltd
dec
test
fnstcw
mov
jge
lods
enter
rclb
mov
ss
int3
scas
push
pop
in
repnz
or
clc
lods
xchg
pop
add
pop
mov
rcrl
and
mov
jecxz
sub
jbe
mov
sti
je
adc
addb
out
cltd
mov
enter
call
insb
mov
sub
push
mov
dec
xlat
jb
lock
out
out
pop
aaa
xor
jbe
cmp
aam
test
and
daa
sbb
and
bound
and
jns
ficoml
mov
jmp
scas
sbb
lods
and
in
jmp
push
test
out
mov
jp
clc
adc
and
mov
mov
test
jmp
scas
pop
sub
rol
inc
add
inc
rcrb
ljmp
or
lods
sbb
push
test
js
mov
push
icebp
mov
xchg
hlt
cltd
cmp
jnp
push
out
lock
cmpsl
out
xor
push
lahf
test
xlat
xor
mov
push
inc
ja
dec
scas
xorb
mov
repz
loopne
jge
lods
adc
test
jl
cmpl
and
push
scas
movsb
rorb
stos
enter
lea
loope
sbb
loope
arpl
mov
les
orb
xchg
lret
shl
out
shl
dec
js
dec
js
out
cld
pop
dec
and
aaa
mov
dec
shrl
fwait
std
mov
inc
and
push
cld
add
xor
cld
inc
cmpsl
int3
jge
cmp
rorl
sarl
or
stos
push
sub
xchg
push
push
out
dec
sub
aam
scas
dec
iret
mov
push
inc
jl
and
insl
aas
aas
xchg
leave
test
ja
icebp
inc
pusha
loope
jp
stos
adc
push
mov
jne
sub
dec
ja
loopne
add
ret
mov
nop
int
dec
pop
and
jne
icebp
outsl
fcmovu
fisubrs
sbb
mov
sub
and
inc
out
leave
xor
int3
fistpl
bound
cmpsb
sti
sti
js
lret
jecxz
adc
xchg
jb
repnz
stc
cmp
cmp
rcll
mov
rorl
pop
popa
jbe
mov
cmpsw
shll
cld
aam
push
ret
inc
popf
iret
pop
test
mov
in
sbb
mov
lret
jbe
leave
jns
rcll
sub
outsb
jno
pop
in
push
cmp
cmc
out
jp
pushf
movsb
out
scas
fs
int
add
inc
lea
jb
lods
test
repnz
dec
push
add
push
mull
jb
inc
sbb
in
jbe
sbb
mov
or
sub
xor
mov
movsb
mov
mov
dec
push
mov
mov
fwait
jmp
test
scas
xlat
mov
mov
xlat
sub
xlat
pop
mov
insb
sub
sbbl
insl
pop
mov
mov
push
ja
mov
xor
fs
jecxz
jae
mov
pop
add
jmp
xor
fwait
daa
adc
cmp
jne
loope
push
ds
mov
lcall
mov
sbb
ret
je
mov
adc
add
aaa
loope
aam
inc
out
movsb
aam
popf
orl
cltd
stos
jne
sbb
cmp
add
sub
shll
dec
pop
inc
cmpsl
out
cltd
loopne
jbe
pop
lahf
stos
repnz
gs
pop
loope
in
inc
and
mov
mov
add
inc
lods
stos
jbe
sbb
loop
in
pop
loopne
fs
push
jb
call
add
cmp
add
xchg
dec
mov
iret
add
insl
pop
loope
pop
int
xor
cmc
lcall
mov
xchg
daa
outsl
pusha
test
std
sub
rclb
mov
int3
fwait
push
popf
pop
fdivs
iret
or
add
fstl
and
insb
cltd
rorb
ljmp
sbb
mov
stos
sub
cwtl
cli
cmp
mov
mov
add
mov
xchg
cwtl
nop
mov
gs
not
popa
in
popf
sub
stc
jge
repnz
push
jge
in
in
mov
mov
js
out
cmp
add
and
jmp
pop
push
or
xor
sub
add
or
adc
push
movsb
mov
scas
arpl
and
enter
addl
movsl
insl
call
stos
fwait
sti
push
adc
push
arpl
mov
dec
and
pop
das
mov
dec
or
outsl
dec
and
ja
das
aad
sub
add
push
insb
repz
lret
pop
cmpsl
pop
out
cmp
jp
inc
push
mov
dec
cmp
in
xor
cmp
mov
call
in
mov
sarb
test
sub
xor
adc
lock
scas
adc
sahf
push
jecxz
cli
nop
dec
adc
aad
test
lods
aam
cli
sub
pop
dec
data16
inc
xchg
nop
mov
adc
popl
mov
lods
mov
push
cmpsb
cwtl
push
arpl
repnz
fucom
adc
sbb
outsl
cmp
test
or
jae
xchg
xor
div
pop
fcomp
out
fwait
repnz
dec
pop
inc
sub
jae
or
cwtl
fldl
lret
in
mov
sahf
loope
addb
subb
adc
add
mov
adc
ljmp
rclb
mov
mov
loopne
sbbb
mov
dec
jno
sbb
xlat
mov
add
outsl
mov
sub
xchg
xchg
inc
mov
das
orb
out
adc
and
inc
adc
add
pop
shrl
mov
mov
mov
aad
jnp
adc
lods
inc
mov
dec
inc
loopne
mov
outsb
dec
lret
mov
dec
fs
mov
add
shlb
insl
icebp
xor
shlb
jmp
push
mov
xchg
jle
in
mov
scas
faddl
addr16
fs
adc
jbe
int
inc
movsb
mov
out
add
push
jl
xor
pop
dec
lahf
cmpsl
jmp
je
dec
push
adc
sbb
mov
xor
jle
flds
aas
jge
inc
xchg
and
jmp
in
hlt
loope
sarl
aam
inc
fildl
fs
outsl
and
sbb
shll
add
lock
ret
or
jns
dec
and
pop
xchg
and
lahf
insl
out
testb
sbb
push
sub
rclb
pop
aam
lods
stos
cmp
jle
aad
ljmp
xchg
jns
push
inc
repz
dec
mov
data16
loope
and
adc
js
adc
dec
push
fdivl
movsl
out
push
es
mov
cmpsl
push
inc
mov
out
inc
mov
cli
sti
outsl
cmpb
push
shrb
xchg
sarb
ss
xchg
inc
push
repz
in
jecxz
add
out
repz
mov
shll
pop
push
std
loopne
cmp
xchg
sub
xchg
xor
jp
xchg
insl
or
call
iret
insb
xlat
push
rol
ss
mov
js
pop
xchg
xor
cmp
mov
sub
test
sbbb
loop
mov
je
scas
ljmp
cltd
xchg
cwtl
cmpsl
inc
enter
pop
shlb
push
adc
es
mov
mov
jge
or
fnsave
inc
mov
xchg
addr16
cmp
xor
test
rolb
mov
add
cmp
mov
lcall
out
subl
stos
into
add
pop
pop
mov
rcll
xor
push
repnz
fadds
mov
mov
mov
sbb
sbbb
jo
mov
mov
fistpll
xchg
enter
mov
pop
sbb
jmp
adc
or
and
mov
mov
sub
jbe
leave
scas
inc
sti
pop
fmulp
mov
cmp
test
push
jnp
pop
sbb
cmp
pusha
jg
outsl
rcr
mov
ja
or
lds
mov
dec
xchg
stos
clc
xor
xor
lock
addl
ret
stos
test
push
sub
aas
stos
adc
mov
jb
outsl
das
push
jne
push
fidivs
movsl
ljmp
test
bound
sub
stc
out
fldl
dec
js
ret
and
mov
aam
or
sbb
pop
jp
xor
mov
push
je
ret
or
push
mov
dec
adc
fldcw
cmpsl
pop
jg
xor
ja
insb
negb
cmpsb
mov
cmp
lods
nop
movsb
stos
add
mov
pop
adc
pusha
push
lea
lods
ja
push
push
in
xchg
clc
js
mov
mov
mov
addl
sub
out
jae
jnp
fisttpll
lds
cli
cld
adcb
test
out
mov
fnsave
fisttpl
sbb
sarl
aaa
aam
lret
fnsave
mov
lods
push
mov
dec
push
jg
xchg
or
push
andb
or
mov
jnp
loop
push
push
xchg
xor
cmpsl
jp
xchg
aas
test
cwtl
cmp
push
adc
jo
pop
stc
pop
cwtl
or
fimull
inc
inc
jge
sbb
push
outsl
in
loop
icebp
div
xorl
mov
in
jne
or
orb
jg
lds
imul
aas
xchg
push
jge
jb
adc
mov
movsb
pushl
repnz
xchg
sub
ljmp
jl
push
xchg
mov
dec
aaa
iret
sub
pop
mov
ds
imul
out
mov
inc
mov
sahf
cmp
lods
xchg
aas
mov
jno
shl
sbb
jp
popa
mov
aas
jnp
lock
mov
cmpl
sbb
cmpsb
testb
inc
shlb
jge
mov
test
clc
dec
pusha
add
xor
add
pop
negb
repz
pop
subl
cmp
inc
data16
movsb
mov
push
push
out
scas
cmp
pop
cmp
or
std
insl
divb
lods
xor
inc
xchg
adc
mov
pop
clc
sbb
loope
sbb
jbe
subb
js
stc
sbb
xchg
xor
lret
xchg
lods
jecxz
inc
sbb
aam
dec
fcoml
or
fldt
inc
std
movsb
or
lcall
inc
lds
jne
lret
lahf
sar
popf
pop
jp
nop
pop
imull
adc
jle
sub
lods
out
cwtl
lods
adc
cltd
sti
loope
or
xchg
aaa
stos
cmp
mov
mov
push
es
shlb
lcall
jmp
xor
pop
int3
jge
and
data16
jo
xchg
dec
push
stos
xchg
cmp
mov
mov
lcall
jne
shrl
adc
and
and
fdivrs
fldlg2
cmp
add
sbb
das
daa
push
inc
jns
int
test
js
push
xchg
sbb
aad
call
add
jmp
sub
mov
mov
ret
sbb
cmp
into
mov
fcom
popa
or
cmp
cmpsl
jp
jecxz
mov
ret
mov
push
imul
test
movsb
mov
xor
popl
inc
sbb
ljmp
aam
jno
or
add
dec
adc
jno
shrl
push
sub
mov
ds
repnz
jle
outsb
lock
push
or
mov
in
mov
mov
pop
inc
push
lea
and
mov
rcrl
cmp
jge
push
jne
dec
dec
sub
and
repz
push
shl
dec
sti
cmp
filds
hlt
inc
pop
scas
push
lea
stos
xchg
dec
adc
nop
sbb
add
xchg
cmp
cwtl
sbb
jp
popf
incl
mov
or
push
mov
add
ret
sahf
mov
and
cmpsb
int
and
sbb
or
mov
inc
jl
mov
inc
fiaddl
dec
xor
adc
mov
adc
pop
sub
ficoml
cmp
jl
addb
mov
jo
mov
inc
push
es
scas
popa
aad
ror
sarb
loopne
mov
adc
xchg
sub
adcl
in
mov
adc
test
out
insl
aam
xchg
sub
pop
ja
enter
inc
inc
in
cwtl
pop
test
pop
mov
insb
int
sbb
ds
ja
insb
fwait
mov
add
sbb
je
fadds
mov
and
les
xchg
push
fdivl
push
cmp
mov
mov
jo
or
cmp
out
or
sahf
loope
push
ret
xchg
subb
pop
xchg
lret
fcom
fninit
mov
jo
outsl
adc
sbb
cltd
in
bound
mov
rclb
or
or
cmpb
xchg
dec
int
shrb
xor
outsb
std
loop
inc
mov
in
inc
sti
push
sbb
pushf
addr16
outsb
cmpsb
jb
mov
nop
sti
mov
movsl
js
roll
mov
dec
sub
dec
add
add
repnz
xchg
xchg
stos
inc
std
rcrb
test
mov
aas
mov
add
xchg
jle
jmp
mov
mov
dec
pop
jp
jmp
dec
add
pop
push
adcb
and
mov
enter
cltd
mov
inc
stos
fmull
push
sub
pop
jge
enter
popf
mulb
pop
xchg
pop
or
leave
xchg
aaa
imul
fbstp
add
ja
push
int3
mov
rcrb
inc
mov
pushf
ss
or
stc
sub
dec
mov
or
das
inc
jbe
pop
pop
sbb
sbb
sbb
aas
mov
sub
xchg
in
test
stos
fwait
sbb
adc
int3
mov
sub
xor
ret
lcall
fidivrs
mov
ds
sbb
push
movsb
cmpsb
adc
inc
ja
and
ds
sub
ret
add
stos
fistpll
cmp
mov
add
fwait
or
pop
mov
push
mov
cmpb
sbbb
in
loop
sbb
loope
push
xchg
mov
ret
insl
aam
sbb
outsb
testb
icebp
jae
or
sbb
cld
push
sti
and
inc
inc
cli
and
insl
les
push
push
dec
fdiv
mov
mov
test
jecxz
cwtl
pop
iret
ds
jnp
dec
mov
mov
mov
xchg
inc
rcr
test
call
lock
std
sahf
add
adc
fistps
fwait
das
mov
in
pop
mov
and
xchg
lea
call
adc
fistpll
jbe
fiadds
dec
cmp
adc
ljmp
sub
lret
push
lock
mov
jg
mov
ret
in
ja
push
adc
lods
xor
inc
push
mov
aas
adc
sub
mov
adc
es
insl
scas
mov
push
fidivrs
std
mov
and
sti
rclb
lret
out
mov
cmp
push
xor
ds
xchg
sub
push
mov
jp
lods
xor
lea
push
enter
loopne
les
test
popf
stos
mov
dec
inc
mov
ficompl
push
dec
out
aam
sub
lret
cmp
jbe
popf
push
sbb
imul
dec
sbb
repz
ds
rclb
jno
fs
pushw
scas
mov
add
or
or
repz
in
fidivl
in
xor
scas
movsb
sbb
movsl
add
adc
dec
insb
jns
xlat
divb
ds
xchg
add
push
sbb
sbb
cmp
stos
sti
add
popa
ret
insb
jmp
lea
loop
das
add
cmpsb
cmc
adc
mov
mov
subl
in
ret
sub
js
mov
mov
adc
push
rclb
out
loope
outsl
les
push
and
jo
popf
mov
mov
js
movsb
push
jbe
dec
cli
sbb
lock
mov
pop
sbb
mov
jl
mov
push
jns
mov
jnp
cwtl
cmp
jae
push
jmp
add
stc
jae
adc
cltd
mov
add
inc
repz
ret
push
xor
pop
testb
xchg
outsb
mov
je
jp
sbb
je
ret
in
in
xor
neg
mov
in
fwait
imul
mov
pushf
je
mov
pop
popa
mov
push
icebp
ss
cli
mov
leave
sahf
and
dec
popl
sti
mov
pop
push
inc
lcall
test
test
inc
adc
xchg
int
shlb
push
sbb
push
jno
cmp
cmp
add
arpl
inc
mov
and
repz
std
jno
cltd
xor
in
loope
ficompl
daa
mov
cs
fsincos
inc
mov
pop
mov
cmc
mov
xor
insb
add
push
movsl
jno
push
xchg
aas
aaa
shll
sbb
fcompl
mov
out
dec
dec
push
ljmp
iret
pop
aas
cmp
jg
sbb
cli
in
jg
icebp
fstpt
mov
in
ret
pusha
xchg
mov
sub
xor
sbb
shlb
dec
push
fisubrs
xor
addr16
int3
mov
lods
push
dec
mov
lock
mov
cs
out
add
xchg
clc
xor
daa
or
aaa
stos
mov
cmp
adc
push
adc
or
ja
cli
ret
push
pop
mov
push
mov
sbb
push
pop
lret
out
mov
and
adc
test
xchg
cltd
xor
sbb
jl
fistpll
mov
pop
cmc
outsb
nop
jae
or
sahf
js
cmpsb
stos
mov
inc
jns
test
or
add
scas
paddw
xorl
loop
int3
pop
pop
lcall
push
add
ss
cmpsl
xlat
mov
add
cwtl
stos
and
xchg
in
xor
adc
leave
adc
cmp
sbb
dec
mov
jno
pop
push
call
std
ss
inc
mov
lcall
push
repnz
jb
out
push
stos
xchg
adc
out
push
xor
or
mov
inc
fsubrs
faddl
hlt
in
push
lahf
cmp
pop
xor
push
mov
jno
mov
mov
xchg
add
loope
shrl
and
lret
pop
lahf
bound
mov
jb
in
push
pop
jmp
in
hlt
stc
js
mov
pop
ja
inc
clc
sahf
ja
rorb
xchg
adc
jae
inc
hlt
xchg
scas
jle
jno
inc
dec
xor
xchg
inc
stos
add
xchg
std
das
mov
xchg
pop
sbb
rorl
xor
add
xchg
les
mov
out
and
push
mov
scas
sbb
adc
sbb
test
mov
fisttps
jbe
dec
popf
adc
out
call
in
imul
cli
push
xchg
push
fs
push
push
dec
sub
mov
inc
pusha
inc
jns
add
pop
insb
cwtl
sub
xor
sarb
insl
lret
inc
mov
sub
push
adc
shlb
ret
sti
mov
movsl
xchg
cld
clc
sar
aam
sarb
adc
xor
outsl
fcomi
xor
add
fisttps
fisubrs
and
and
add
jle
scas
sbbl
mov
dec
xor
adc
cwtl
test
lock
int3
jp
pop
and
jmp
outsl
ror
enter
push
subl
insb
shll
push
sub
mov
jge
aaa
lret
jae
pop
iret
adcb
and
sub
movups
loope
arpl
movsl
or
test
fcmovb
push
testb
mov
cmp
roll
sbb
inc
xor
xor
xor
and
pop
aam
int
adc
ss
lock
cmc
add
xchg
add
mov
filds
cmp
xor
imul
and
add
dec
pop
movhps
pusha
sar
mov
ja
fcmovnu
xor
pop
lock
jmp
loope
xchg
push
lcall
loope
scas
mov
sti
xlat
xor
mov
cltd
xor
pop
sbb
data16
jl
jp
repnz
popa
jecxz
xchg
mov
jl
fucomi
int
xchg
repz
addr16
lock
fstpt
push
fucomi
mov
mov
out
jp
fs
mov
ret
jle
ret
test
daa
jb
or
lock
popa
and
jecxz
movsb
lcall
pushf
xchg
mov
jge
dec
lret
rol
test
jle
pop
jmp
repz
shlb
loopne
in
movsb
xor
outsb
pop
xlat
decb
jp
sub
es
sbb
aaa
mov
dec
dec
inc
rclb
push
into
dec
imul
dec
or
push
jnp
in
push
loopne
jb
shr
dec
cli
loopne
xor
inc
shll
cmpsl
mov
aam
fbld
cltd
push
out
add
arpl
mov
in
mov
orl
mov
out
push
xor
xor
or
jmp
push
cmpl
add
cmp
loop
shrb
je
popa
shll
push
inc
xchg
adc
bound
xor
xchg
scas
jecxz
push
mov
call
cmp
xor
inc
jl
inc
jne
xor
call
fdivs
and
sub
xchg
cwtl
cli
andb
pop
cmpsb
popf
test
xor
bound
jbe
push
in
cmpsl
mov
aad
clc
adc
cmp
pop
ret
jnp
cmp
fistps
or
andl
rorb
scas
js
push
push
mov
faddp
inc
stc
mov
int
xchg
push
loope
mov
mov
subl
jne
scas
add
ret
dec
mov
inc
cmp
add
mov
clc
cld
outsl
mov
add
adc
mov
jb
fstps
in
dec
push
inc
push
cwtl
push
add
mov
add
in
fwait
icebp
jo
push
add
mull
int
adc
js
leave
dec
adc
cmp
pushf
scas
jo
lock
pop
in
push
or
inc
dec
jnp
xchg
icebp
pop
xor
mov
out
xchg
insl
bound
adc
xor
dec
movsb
test
fucom
add
lret
fbld
mov
mov
jg
outsb
inc
movsb
mov
movsb
and
or
sub
jo
fcoms
cmp
aam
sbb
xlat
mov
xor
loopne
dec
adc
lds
popf
cmpsl
inc
jp
mov
inc
mov
mov
and
jae
int
add
cwtl
xor
adc
stos
push
jmp
enter
sub
call
repnz
shrb
cmp
cmp
movsb
jae
test
ret
xchg
loopne
xor
push
jge
adc
imul
inc
jmp
push
test
push
fsubrs
ljmp
push
jb
ds
xchg
loopne
sub
sbb
imul
xchg
sbb
jo
cmpsl
xchg
xchg
pop
sbb
es
int
sahf
push
and
pop
sbb
pop
jmp
cmpsb
jge
in
sub
outsb
cmp
in
loop
jno
pop
add
lods
out
cmpsl
pushf
sti
idivb
or
push
mov
sub
mov
mov
cmp
rcr
in
pop
stc
scas
int3
cmp
mov
into
out
dec
int
jnp
loop
out
ss
jae
jmp
lahf
jmp
cmpsl
not
xor
dec
imul
je
mov
outsl
mov
stc
xchg
cmp
and
cwtl
and
sub
xor
jecxz
ss
in
lds
test
dec
aad
xorb
or
addr16
and
orb
pop
addr16
inc
rep
aaa
inc
loope
pop
push
repnz
or
cmp
gs
pop
in
pop
mov
or
pop
sub
scas
lock
mov
in
out
test
push
aaa
daa
sub
or
sub
sahf
mulb
sbb
xchg
pop
mov
inc
or
and
adc
lret
lret
mov
mov
jno
arpl
es
adc
frstor
sar
xchg
jl
lcall
and
icebp
pop
push
cwtl
hlt
jp
mov
or
xchg
leave
lods
into
fdivl
lret
in
ljmp
inc
and
mov
cmp
dec
pushfw
inc
jnp
loopne
jl
test
cmp
add
fwait
xchg
fsubl
in
and
into
inc
aad
jmp
mov
or
xchg
and
sbb
lds
cmp
cmp
add
add
jg
sbbl
stos
mov
push
ljmp
sub
sub
mov
outsl
xchg
xchg
mov
or
mov
fstps
jbe
dec
add
or
pop
shlb
adc
mov
dec
or
and
dec
sahf
leave
outsb
mov
ljmp
cmc
call
inc
shll
cmp
iret
xor
jecxz
movsb
sbb
pop
push
mov
dec
or
cwtl
inc
mov
dec
add
pop
int
bound
in
cmp
adc
cld
mov
hlt
int3
and
mov
add
mov
lock
add
ret
cmp
incb
ss
int3
cmpsb
stos
jo
ret
lock
pop
popa
xor
pop
orb
add
cmp
jmp
adc
push
jns
push
int3
lret
xlat
scas
mov
lods
sbb
cmp
aas
xchg
clc
gs
pop
adc
test
pushf
sub
jo
adc
push
pushl
lds
push
dec
or
aaa
int3
rorb
into
adc
clc
add
int
stc
loope
outsl
popf
sub
jmp
mov
shl
mov
xchg
cmc
insl
push
es
xchg
jno
paddq
ret
out
test
mov
pop
insb
lahf
cmpsb
mov
sbb
fnstcw
mov
xor
inc
or
iret
jmp
pushf
pop
fisubrs
out
add
sbb
adc
mov
nop
loop
stc
mov
into
push
xchg
das
xlat
dec
filds
mov
or
xor
sbb
das
movsb
repz
lret
lret
insb
mov
inc
rcll
cltd
and
mov
lea
jbe
push
xor
clc
aam
dec
xor
add
mov
outsb
mov
dec
lods
or
decl
mov
mov
or
pop
das
xor
dec
in
fistl
testl
stc
add
dec
movq
mov
aad
pop
mov
clc
jno
or
pop
jnp
xlat
cmp
ja
testb
loope
jp
cmp
push
les
outsb
dec
out
mov
int3
call
jge
rep
fsts
mov
dec
scas
xchg
loop
decb
sarl
inc
xchg
into
or
lret
mov
push
sbb
push
inc
mov
cmp
mov
gs
push
cmp
pop
sub
jecxz
and
lret
js
shll
iret
pop
mov
sbb
adc
ljmp
or
xor
mov
iret
sub
push
inc
out
mov
mov
in
popa
cmpsl
sbb
sbb
in
lds
or
add
push
fwait
jb
xor
dec
mov
popa
push
je
js
sbb
dec
and
add
cltd
gs
and
adc
inc
mov
mov
xchg
jp
adc
dec
jo
pop
aam
les
in
inc
sarb
add
sub
cmp
push
aas
mov
test
test
pop
jb
inc
mov
inc
cmpsb
or
gs
pop
fiaddl
movsb
out
pop
cld
scas
cmp
idivl
mov
sbb
xchg
ficomps
xchg
or
addr16
add
dec
pop
aaa
fsts
sti
or
jmp
movsb
jno
imul
ucomiss
add
mov
mov
sbb
push
data16
adc
sbb
xor
xor
and
rcll
lods
mov
divl
xchg
and
xchg
test
add
rcrb
pop
jmp
stos
add
jle
lea
jnp
sbb
sub
stos
mov
and
std
xchg
fisubrs
out
push
push
pusha
push
shrb
pop
ret
scas
lret
aas
xchg
lcall
cmp
ss
sbb
or
test
fwait
dec
nop
cs
cmpl
xor
push
pop
jbe
fcmovne
xchg
push
push
jl
mov
xor
mov
rcrb
das
loop
mov
xchg
dec
enter
adc
push
fcoms
add
and
inc
adc
push
fstps
inc
xor
or
dec
adc
rol
pop
sub
ljmp
mov
mov
std
jp
pop
movsl
push
popl
lock
data16
sub
jo
xor
sub
push
lods
inc
mov
mov
loop
fwait
xor
push
pop
jb
sbb
and
xor
lods
insb
or
movsb
rolb
xchg
jecxz
fiadds
stos
fdivl
std
dec
lahf
sub
adc
insb
sti
jno
jle
push
jo
aad
lea
mov
out
shlb
xchg
push
call
cs
cltd
fimull
insb
sbb
in
clc
cwtl
jg
clc
sahf
movsb
rolb
push
mov
jg
or
jae
leave
mov
les
fcmovb
adc
mov
mov
jg
cmc
push
clc
cmp
cwtl
js
inc
jmp
bound
clc
sahf
insl
push
cmp
sbb
lea
nop
call
add
nop
mov
jg
push
or
lahf
icebp
push
mov
dec
imul
mov
xchg
fwait
cmc
inc
mov
dec
add
jnp
data16
out
mov
sbb
lods
daa
dec
pop
push
push
xchg
sbb
mov
and
test
jo
nop
or
popa
arpl
mov
push
loopne
in
je
add
mov
mov
mov
stos
jecxz
test
leave
repz
mov
inc
inc
cld
push
xchg
inc
jl
ss
and
fbstp
and
divb
ficoml
test
rclb
dec
aaa
imul
pusha
movsl
movsl
pop
shl
int
movsl
mov
mov
mov
inc
pop
test
clc
loopne
cwtl
mov
xor
repnz
fdivs
stc
stos
stos
mov
lret
imul
push
jnp
cli
mov
sarl
inc
xchg
jae
imul
out
lock
test
adc
faddl
shr
inc
scas
jmp
pop
push
jp
xor
sbb
out
clc
adc
hlt
xor
call
ds
dec
mov
mov
mov
sub
fwait
inc
out
jne
les
push
arpl
popf
jmp
cltd
rclb
mov
push
enter
cmp
mov
lret
jmp
sarl
int3
pop
insl
cld
pushf
or
mov
lea
mov
and
mov
data16
pop
sub
push
inc
idivb
in
out
push
scas
clc
or
lods
cmp
cmp
xor
insl
loop
scas
cmp
fsubrs
mov
push
push
cmpsl
int
xor
pop
mov
popf
pop
pop
pushw
cmp
mov
ret
xchg
inc
xchg
loope
daa
clc
pop
repz
and
pop
mov
fbld
outsl
mov
push
out
fists
inc
fdivrl
or
int
inc
pop
sub
lods
pop
mov
pop
mov
sub
stos
sbbb
dec
mov
mov
loopne
mov
cmp
addb
icebp
pushf
mov
xchg
xchg
test
sub
add
fsincos
and
bound
mov
sub
scas
ffreep
lods
jno
jbe
push
popa
xchg
outsl
pop
das
or
xchg
jbe
inc
mov
pop
lahf
mov
cmc
pop
mov
sub
push
sub
push
icebp
mov
sbb
add
out
xchg
xchg
sahf
adc
mov
push
bound
inc
mov
js
cwtl
push
dec
adc
adc
ror
and
cmpb
push
mov
jnp
nop
mov
imul
mov
lahf
pop
jnp
mov
lods
jl
adc
mov
flds
sbb
mov
scas
xchg
gs
sub
dec
or
jo
push
sbb
xchg
js
push
mov
aas
gs
in
pusha
jae
shlb
xchg
push
inc
and
in
arpl
cs
dec
dec
test
comiss
mov
dec
jnp
jmp
fistl
mov
jge
clc
dec
xor
mov
aad
jne
jb
sbb
pop
and
jg
cmp
sbb
inc
jge
add
and
test
mov
lea
lock
cld
sub
xchg
enter
mov
data16
cld
insl
mov
sub
sbb
lahf
xadd
sbb
and
jns
scas
jl
xor
inc
lock
and
repnz
push
mov
jle
out
pop
mov
pusha
shrl
lret
imul
pop
rorb
popa
jp
jecxz
and
div
pop
dec
pop
aad
fs
mov
lock
and
movsb
test
jne
fstl
or
push
add
mov
and
and
shlb
scas
je
imul
push
add
xlat
push
jne
leave
ljmp
lret
and
mov
push
sub
cmp
and
dec
inc
jl
shrb
sub
xor
bound
popf
mov
aad
push
pop
or
push
enter
insb
cld
inc
cmp
jb
ss
movsb
pop
inc
je
mov
decl
sbbl
in
cli
lcall
divl
adc
lods
dec
inc
mov
xchg
sahf
mov
call
test
iret
lahf
cmp
fbld
outsl
inc
pop
test
cmp
xchg
fbld
lods
int3
jmp
or
push
movsb
push
movsb
xchg
fidivrs
add
or
shl
test
fwait
and
xor
fstl
jmp
dec
and
sti
adc
xchg
mov
popl
lahf
stos
sub
clc
cmp
mov
fadd
push
fisttpll
addb
in
pop
loop
jecxz
pop
jbe
cmp
xchg
or
cli
adc
mov
test
cmp
out
xorl
ret
jge
push
xor
mov
fdivrs
sahf
or
mov
push
cld
pop
pop
loopne
jns
xchg
push
jne
outsb
ds
mov
in
lret
sub
adc
cmp
hlt
bound
aaa
popf
scas
shl
imul
and
jnp
sti
imul
addb
or
call
gs
ljmp
and
int3
push
fwait
lods
aam
sub
pop
cli
sti
jb
ss
fbld
dec
mov
dec
lahf
hlt
ds
dec
ret
inc
mov
repnz
xor
adc
cltd
mov
or
jecxz
mov
pop
scas
and
xor
add
cmp
xor
rcr
out
dec
cmpsl
inc
jnp
mov
mov
dec
cmpps
mov
stc
sbb
int3
xchg
add
pop
mov
jo
and
addb
lret
adc
lahf
adc
mov
in
int
mov
push
jno
cltd
xchg
pop
pop
pushf
cmp
jp
sbb
repnz
and
test
and
or
jbe
jbe
ja
sbb
ds
and
sahf
or
sub
cmp
movsl
inc
cmp
jl
outsb
cmpsl
add
idivb
es
pop
jmp
out
call
stc
addr16
int3
adc
push
or
jle
fptan
shl
in
mov
pop
test
ret
mov
repz
mov
lock
iret
mov
loop
movsl
adc
orl
cmp
scas
jne,pn
arpl
imul
xor
jne
add
push
bnd
outsb
fisubrs
sub
mov
imul
dec
mull
or
sarb
push
xor
add
enter
ret
call
mov
ret
ja
xor
popa
sub
inc
pushf
call
jle
mov
mov
outsl
je
or
fnstenv
divb
clc
in
mov
inc
pop
sub
rcrl
dec
dec
adc
or
and
movsl
lds
jge
sub
loopne
mov
jl
adc
jge
mov
test
and
sub
push
aas
push
cmp
or
imul
sti
shl
and
sbb
cmp
pusha
mov
cpuid
imul
mov
in
test
enter
loop
or
jge
stc
int
arpl
jo
lcall
mov
lods
movsl
jnp
push
test
xor
sub
xchg
nop
sub
lds
mov
gs
ljmp
ljmp
mov
shlb
cwtl
test
or
int
ds
out
push
scas
mov
sbb
lret
in
xchg
xchg
and
sbb
dec
fs
lret
push
or
lea
mov
cmpsb
popf
stc
insl
cld
push
sub
stc
jb
icebp
notl
jne
jae
pop
lock
bound
icebp
push
lcall
cld
shlb
add
outsl
or
jge
xchg
jle
xor
adc
addr16
data16
clc
jp
xchg
mov
sbbb
popa
fstps
jae
push
lahf
inc
mov
test
adc
pop
xchg
or
testl
nop
push
push
fcmovbe
les
mov
sbb
hlt
nop
out
out
jne
xchg
mov
dec
pop
js
cmc
push
xor
mov
xor
popf
scas
mov
sub
jmp
aas
popf
ja
in
es
aas
nop
push
mov
in
int
mov
push
sbb
stos
call
sarl
fisubl
fmuls
mov
insb
push
inc
xchg
mov
fs
add
addb
mov
or
dec
xor
and
sbb
pop
pop
mov
fildl
out
adc
leave
or
jo
mov
or
insl
xor
cwtl
sub
pop
jecxz
pusha
lds
push
push
jo
dec
inc
xor
imul
js
mov
push
fwait
push
jae
jp
popf
js
adc
repz
pop
fbstp
xchg
push
add
sahf
enter
test
sbb
cmp
stos
fldt
mov
xchg
icebp
dec
ss
scas
or
push
cmp
jno
faddp
or
dec
addb
mov
inc
adc
rcrb
scas
or
cmp
xor
sub
sbb
or
shll
jb
push
lods
test
lret
mov
call
test
sub
mov
or
dec
sub
inc
in
pop
xor
push
pop
jle
movsb
add
std
testb
test
sbb
cs
lock
faddp
xchg
out
mov
clc
push
lock
cmpsl
jo
push
cmp
push
xchg
xchg
int3
push
sbb
stc
outsb
mul
cmp
sbb
stos
lahf
loop
movsb
out
inc
fwait
xchg
jl
popa
aas
test
add
in
dec
mov
jecxz
cmpb
dec
arpl
or
cmc
add
addr16
mov
jnp
cmc
push
add
xchg
imul
sbb
aaa
aaa
fadd
pop
cmp
push
imul
pop
fs
dec
notl
sti
xlat
add
or
pushf
pop
stc
cli
inc
xlat
fists
mov
inc
mov
decl
or
xor
cmp
pop
or
std
pop
and
jno
jg
in
mov
cmpsb
in
mov
mov
dec
push
into
adc
xchg
loop
fsubs
enter
test
xchg
xchg
je
push
fmul
mov
adc
sbb
jmp
into
cmp
mov
or
loop
sub
push
pop
add
sub
xor
push
int3
and
adc
sub
pop
dec
or
fdivr
cmp
and
lock
add
push
jmp
or
sti
jl
cmp
pushf
out
je
mov
jns
mov
std
mov
push
sbb
cmp
sbb
cld
mov
jne
das
inc
push
data16
arpl
mov
add
leave
add
add
adcb
cmp
adcl
jge
cwtl
movsl
adc
addr16
xor
lods
popf
mov
fdiv
iret
adc
push
cs
xchg
mov
insl
leave
or
adc
xor
mov
aam
imul
call
pop
pusha
mov
or
popf
xchg
je
push
push
mov
movsb
daa
mov
or
sti
cmp
xchg
dec
sub
outsb
sub
xlat
clc
xchg
imul
aaa
enter
add
insb
xlat
sub
es
mov
jnp
xor
lods
int
sub
jp
mov
xchg
add
xor
jge
mov
lahf
jl
sarb
mov
out
inc
jg
sub
jg
mov
into
and
and
pop
shll
int3
filds
push
ret
notl
in
stc
mov
mov
cmp
iret
sbb
int3
in
cmp
xor
mov
daa
cmp
mov
and
mov
push
cmp
repz
enter
icebp
insl
and
hlt
sub
xchg
push
pop
out
testb
sbb
stos
or
aas
jo
insb
sbb
mov
neg
out
loope
ret
aas
rolb
out
mov
addl
lcall
sti
push
jge
cs
jle
popf
mov
jno
sub
jns
jae
testb
mov
mov
cs
jno
inc
mov
xor
add
jp
and
mov
insb
ss
test
sbb
enter
loop
fildll
mov
inc
lcall
loopne
sbb
sbb
cld
cmp
jns
hlt
arpl
mov
faddp
add
pop
testl
xchg
inc
shll
aas
push
fistl
addb
std
mov
jne
jecxz
xor
jb
adc
fldl
jne
test
stos
adc
in
push
pusha
dec
jl
test
movsb
fs
std
cmpl
mov
stos
and
inc
fs
xchg
jmp
roll
iret
mov
hlt
push
cmp
mov
pop
jl
divl
daa
inc
into
sbb
or
leave
jp
bound
push
add
andb
dec
mov
dec
iret
xlat
cld
jp
leave
or
pushf
push
addr16
lock
test
mov
fsubrl
xchg
cmp
lret
pop
test
fcoms
fmul
dec
les
sbb
int
rorb
ss
aaa
ret
in
dec
and
inc
mov
pop
or
stos
xchg
inc
mov
sub
jo
push
inc
xchg
sbb
in
test
pusha
sub
in
dec
inc
inc
and
sub
pop
mov
cmp
pop
es
sbb
sbb
lahf
add
bound
push
adc
inc
mov
loop
cmc
ret
je
sub
mov
cmp
dec
jmp
xor
pusha
xor
dec
adc
movsb
test
aad
les
mov
enter
out
mov
std
jp
mov
std
pop
lret
xchg
les
test
jb
adc
cvtps2pi
lods
xchg
inc
das
stos
or
enter
adc
stos
jg
sbb
addr16
add
mov
iret
pop
mov
pop
mov
ficomps
mov
push
sub
mov
aam
repnz
mov
inc
in
mov
lods
loop
pop
xor
mulb
test
or
fcomps
push
or
push
out
lock
sti
xor
les
fmul
pop
call
jmp
inc
push
repnz
mov
aas
jo
sub
std
cmp
pop
mov
cs
inc
notl
xor
fcmovne
mov
in
repz
dec
cli
lret
mov
jns
test
shrl
and
shl
into
xchg
std
bound
sbb
push
addr16
xchg
mov
mov
add
jbe
scas
lds
mov
mov
xor
xchg
push
mov
sub
out
push
clc
mov
adc
xchg
or
lds
sub
fbstp
cmp
sub
cltd
and
adc
stc
movsl
rorb
leave
or
inc
mov
lds
aas
les
pop
xor
cmp
rcll
push
cwtl
jge
mov
jle
scas
cltd
cmpsb
inc
cli
mov
insl
scas
mov
cmp
mov
pop
iret
test
out
mov
lock
or
pcmpeqw
mov
dec
out
bnd
dec
ss
mov
gs
lret
cmp
inc
mov
fidivrl
inc
insl
add
mov
push
cmpsl
xchg
loop
xor
jmp
cs
mov
in
jne
ret
jno
repnz
xchg
mov
fs
add
fstl
pextrw
arpl
decb
fnstcw
testl
and
add
sub
ja
icebp
jnp
fidivrl
insl
call
cmpsb
out
xlat
inc
mov
imull
pop
push
xor
and
fldcw
xchg
and
xor
push
or
xor
xchg
adc
push
cmpsb
out
mov
icebp
mov
mov
cld
stos
and
jbe,pt
fbld
sub
mov
pop
cmp
cmp
adc
xchg
pop
or
xorl
movl
aad
jl
mov
push
mov
mov
fmulp
iret
jge
or
push
pop
or
in
popf
imull
lahf
imul
jl
ss
push
xchg
sub
mov
sub
bound
loope
fmul
iret
test
push
jns
aaa
jecxz
cmp
and
dec
inc
ja
cltd
mov
fwait
pop
idivl
adcb
adc
adc
mov
cmp
push
mov
xchg
icebp
sub
imul
shll
jg
lds
aad
jle
movb
dec
inc
mov
test
lcall
ds
nop
dec
push
idiv
sub
out
pop
iret
popa
inc
leave
add
jp
cmp
js
test
pop
mov
je
aaa
cltd
out
xchg
aaa
pusha
sbb
out
pop
inc
jl
mov
pop
xlat
pusha
mov
lcall
xchg
push
push
mov
gs
mov
inc
inc
insl
pop
je
dec
shrl
loopne
fs
lea
lea
pop
xor
dec
repz
daa
dec
sub
cmp
fdiv
or
movsb
push
popf
cld
lahf
fists
and
dec
int3
mov
sub
mov
stos
and
pop
loop
das
aaa
mov
inc
mov
pop
aam
shrb
pop
scas
mov
cmp
mov
fwait
jno,pn
push
push
sub
daa
sbb
aam
mov
sti
stc
std
jnp
dec
pop
push
jae
and
pop
add
mov
push
push
fdivl
stos
ret
push
and
lret
sub
cltd
xchg
mov
jg
fldl
push
mov
dec
add
sub
sub
daa
imul
cli
xchg
sahf
xchg
mov
xchg
or
cmp
out
jno
xor
and
ljmp
ja
outsb
sbb
lret
pop
push
nop
push
cmp
andb
dec
sarl
add
push
inc
aas
pop
lods
adc
pop
mov
loope
lods
jbe
sysenter
cmpsl
cmc
adc
int3
adc
subl
fabs
cld
inc
push
jmp
cmpl
clc
rclb
push
sar
lret
sub
sti
jp
dec
add
mov
imul
arpl
inc
and
inc
push
stos
sbb
repz
jge
xor
push
add
aad
stos
push
fisubrl
inc
iret
cmpsb
stc
xchg
inc
stc
dec
movsl
mov
popf
sub
push
pushf
or
add
push
aad
lret
sahf
test
pop
scas
sub
push
cmp
jmp
jmp
out
pop
ljmp
dec
ss
jecxz
sbb
mov
sbb
dec
ja
rcrl
outsb
iret
mov
scas
xlat
jbe
cmp
push
xchg
in
mov
cmp
cs
adc
js
sub
clc
fwait
jnp
or
jns
inc
push
or
adc
jg
push
jae
jmp
insl
mov
mov
aam
jge
negl
pop
repz
popa
dec
aaa
jp
add
xchg
inc
sahf
push
xchg
sbb
xchg
jne
clc
lret
mov
push
fsubrl
aaa
data16
or
cmp
xchg
and
pusha
push
ficomps
jmp
adc
adc
aas
add
mov
es
jbe
ljmp
dec
sbb
nop
lea
vmread
mov
push
mov
repz
mov
jmp
test
pop
sub
in
cmp
jle
mov
rcll
xchg
jmp
out
test
adc
inc
loopne
xor
cs
and
divl
stos
js
rclb
dec
mov
adc
stos
xchg
add
or
and
cmpsl
mov
imulb
idiv
stos
movsl
mov
push
repnz
push
jno
jle
adc
jo
xchg
jmp
pushf
xchg
lods
xchg
mov
stos
jne
hlt
jg
pop
sub
bnd
cltd
imul
data16
fadds
lea
out
bnd
imul
cmp
imul
and
xchg
pop
pop
lahf
add
jnp
sub
xchg
inc
sub
push
add
mov
test
sbb
sbb
jno
mov
jnp
jb
movsb
stos
jmp
mov
movsl
xor
jb
sbb
mov
fs
loope
psadbw
in
scas
mov
push
inc
rdtsc
dec
push
int
fs
lret
dec
js
pop
pusha
stos
mov
pop
shlb
pusha
subl
adc
inc
and
mov
xchg
mov
js
xor
bound
out
dec
leave
or
incl
lret
sub
xchg
xor
jb
fptan
inc
fwait
and
add
mov
fadds
jle
cmpsb
jno
mov
loopne
scas
popf
cmp
popl
lods
sbb
sbb
bound
orb
sbb
divb
movsb
lods
jl
fnsave
mov
jl,pn
and
mov
xor
mov
pop
or
fneni(8087
and
pop
popa
fisubs
in
and
mov
movsb
lret
sbb
enter
dec
xor
lock
jbe
repnz
cmp
jo
in
pop
mov
scas
jmp
aas
jbe
stos
hlt
jle
adc
das
pushf
decb
imul
pusha
int
lock
dec
icebp
push
mov
jbe
pop
sbbl
push
adc
mov
adc
out
add
in
mov
inc
imul
repz
jns
cwtl
dec
pusha
insb
sub
pop
inc
and
push
shll
aam
sub
lahf
jmpw
lock
adc
add
sbb
inc
push
repz
ja
clc
fidivrl
push
outsl
jl
inc
or
and
daa
pandn
pop
repnz
inc
pop
push
jno
fistps
ret
pop
mov
xor
das
fcompl
xor
mov
mov
test
sbb
sahf
in
rorb
pop
das
mov
out
pop
idivb
js
mov
mov
lock
pop
adcb
inc
xlat
push
pop
addr16
jp
cli
add
mov
jecxz
fidivrl
fnstsw
test
inc
pusha
jne
sbb
push
jns
mov
pop
sub
jnp
lods
jge
cmp
jge
and
pop
dec
xor
mov
pushf
sti
mov
inc
xchg
inc
mov
lret
aas
or
mov
inc
push
repz
jnp
popa
clc
popf
stos
lock
les
lret
pushf
sub
inc
or
add
pop
xor
fistpl
mov
divl
mov
loopne
lret
stc
mov
inc
fwait
lahf
mov
mov
cmpsb
stos
sbb
insl
adc
xor
lahf
out
xor
daa
xchg
fbstp
ja
int3
inc
jmp
jle
loop
mov
push
outsb
cltd
cltd
div
cmp
mov
testb
lock
imul
out
sub
cmp
push
popf
in
lret
pop
cmc
out
jb
jge
add
add
adc
arpl
mov
int3
jne
lahf
jns
xor
sbb
sbb
iret
sub
add
jo
jle
pop
inc
mov
xchg
lahf
mov
or
mov
arpl
imul
call
or
test
jmp
jmp
cmp
arpl
cs
shl
outsl
push
inc
pop
and
aaa
movsl
sbb
lods
mov
adc
adc
add
inc
jmp
xchg
jno
in
insb
stos
pop
movsb
jp
push
arpl
jno
dec
dec
lods
imul
in
das
sub
mov
mov
icebp
subb
in
aas
xchg
sbb
popf
pop
loope
mov
cwtl
int3
sbb
cmp
mov
xlat
mov
push
les
aaa
hlt
arpl
enter
jl
xchg
pop
sub
inc
aas
movsb
out
mov
gs
rorl
push
lods
ljmp
and
xlat
imul
sysret
cwtl
hlt
lahf
ss
flds
cmpsb
cmp
jae
or
cmpsl
dec
sub
das
dec
and
mov
jmp
imul
lods
movaps
inc
xchg
push
or
leave
jge
jbe
inc
mov
or
add
aas
jg
pop
fnsave
mov
repz
or
mov
cltd
repnz
int3
mov
js
flds
mov
xchg
stc
add
jne
enter
mov
inc
pusha
mov
addr16
inc
pop
clc
dec
pop
leave
push
out
pop
add
push
out
repz
and
mov
xchg
push
or
mov
lods
inc
pop
mov
mov
xchg
subl
pop
cli
cmp
sub
dec
cmpsl
arpl
xor
mov
stc
out
inc
push
and
scas
inc
lods
add
xchg
push
cmp
adc
test
stos
and
pop
subl
mov
rcrl
ja
xchg
pop
hlt
test
jb
fldl
fimull
out
mov
push
pop
fstps
in
dec
sbbl
mov
or
mov
stc
push
sub
fwait
out
mov
pop
ss
rol
adc
dec
adc
inc
psubusw
xor
aaa
call
and
ja
inc
pop
aam
aad
pop
outsb
ficoms
js
nop
cmp
mov
pop
andb
popf
aam
repnz
mov
and
push
inc
xor
out
cltd
pop
xchg
add
push
clc
inc
movsb
pop
mov
out
inc
pop
xchg
das
or
outsl
pusha
sbb
xchg
jg
jns
lcall
mov
pop
imul
push
inc
pop
orl
nop
adc
xor
in
jbe
mov
push
dec
aaa
mov
test
outsb
sub
mov
sub
jp
arpl
xlat
cli
std
rcrb
push
mov
fisubrl
push
cs
mov
pop
test
les
clc
pushf
sub
sub
and
sbb
xor
std
mov
je
pop
cmpxchg
loopne
out
jmp
dec
nop
into
pop
fists
stc
or
in
adc
test
and
pop
push
notb
push
adc
rcll
loopne
fdivs
jbe
bound
mov
insb
inc
nopl
bnd
push
add
test
mov
shl
icebp
push
pop
or
sbb
jae
rcr
test
shrb
sbb
lret
push
mov
ret
or
rcrb
mov
mov
mov
scas
adc
cmp
ljmp
pop
popa
enter
lds
xchg
rorb
loope
mov
enter
sti
in
hlt
cwtl
dec
arpl
icebp
lock
dec
movsl
cltd
and
data16
out
incw
aas
mov
aad
jnp
or
js
cmp
mov
sbb
mov
fdivs
hlt
mov
lea
lds
xchg
insb
mov
and
popa
or
sahf
add
mov
repz
xchg
mov
push
aaa
xor
inc
les
mov
imul
xchg
shll
push
insl
movsb
out
loop
sub
xor
and
mov
jne
lds
cmp
pop
pop
inc
outsb
push
xchg
push
rcl
imul
aaa
push
dec
mov
mov
xchg
fs
push
mov
pop
push
mov
lret
cmp
push
xlat
dec
popf
outsb
das
jl
mov
jl
or
ss
stos
lcall
push
jle
mov
xchg
pop
lods
fstpt
aaa
or
js
pusha
ds
in
push
das
lods
xchg
dec
mov
or
lret
in
cmp
jne
daa
cmpsl
fs
mov
cmc
push
pop
push
cmpl
loopne
mov
cli
in
xchg
xchg
adc
cwtl
repnz
dec
pop
xchg
pusha
jmp
popa
or
in
aaa
adc
popa
arpl
lcall
mov
mov
jo
cmp
sub
ja
push
mov
pop
leave
sahf
imul
leave
insb
mov
fistpll
add
lods
loop
cmp
dec
shl
xchg
add
repnz
mov
cmp
jg
push
out
imul
adc
shr
in
adc
enter
mov
xchg
cmpsb
jnp
dec
pushf
test
pushf
inc
rorb
mov
sub
push
push
push
addr16
jae
rorl
in
rcr
pop
and
out
int3
outsl
jp
pop
sbb
faddp
push
push
lret
sbb
aam
jo
addr16
jp
imul
adc
and
dec
push
pusha
mov
addb
rorb
ret
mov
pop
daa
cli
test
push
and
repnz
push
or
out
dec
not
leave
subl
test
iret
dec
adc
out
insl
scas
out
xor
adc
fcmovbe
xor
jp
cltd
lret
push
fildll
pop
testb
xor
popf
mov
mov
mov
jo
pop
scas
ret
ffree
imul
jns
and
jae
loope
xchg
adc
cmp
push
ret
nop
outsl
push
cmpsl
popl
mov
in
xor
mov
xchg
xchg
rclb
ja
mov
sub
pop
pusha
and
xchg
test
inc
inc
jnp
mov
cmp
xor
ljmp
sti
pop
xchg
push
jmp
fstp
shl
pop
insb
mov
pop
or
pushf
shr
leave
inc
outsb
test
inc
in
jns
stos
sbb
or
test
mov
adc
cs
jnp
push
push
std
pop
pop
xor
es
cmp
sub
push
pop
leave
loop
cmpsb
mov
mov
and
and
cli
add
out
pmaxsw
and
or
imul
fadd
inc
in
dec
inc
cmc
add
jbe
fwait
lods
mov
ss
loop
adc
into
roll
mov
in
stc
push
sarl
inc
add
mov
mov
adc
jne
ret
js
mov
jecxz
sub
xor
xlat
ljmp
aam
pop
sbb
lods
mov
fnsave
test
sbb
call
dec
pop
push
mov
imul
push
cmc
bound
or
sbb
dec
jno
rorb
pop
xor
cmp
inc
pop
cltd
jle
out
mov
icebp
gs
addr16
lds
lret
adc
add
push
mov
mov
fmul
lea
lods
fists
dec
ja
or
add
lods
mov
or
fnstsw
push
dec
fisttpl
pushf
jmp
fxam
adc
xor
hlt
jne
and
test
or
es
sbb
mov
or
xchg
movsb
mov
enter
or
daa
mov
inc
add
movsl
cmpsl
je
mov
clc
jge
repnz
mov
sub
js
stos
jno
dec
pop
xchg
ja
pop
sar
mov
mov
xchg
adc
btsl
push
xchg
popf
mov
or
leave
adc
push
addb
incb
out
lock
mov
cmp
mov
xchg
dec
add
sahf
bound
jne
dec
jg
jae
jbe
loop
int
mov
lahf
cmp
mov
mov
mov
mov
fistl
and
jo
int
lods
jbe
xor
mov
inc
mul
bound
push
mov
dec
or
pushf
pop
and
pop
sub
mov
sbb
mov
fisttps
ja
xor
sub
cmp
push
push
or
and
lahf
stos
jb
xor
lds
adc
repz
cmp
jnp
or
sbb
inc
push
in
pusha
jno
add
xor
xor
ret
jmp
mov
jmp
andb
std
xchg
pushf
mov
out
push
lahf
mov
fbstp
jb
jp
jns
cmpl
lret
ret
pop
or
xorl
cwtl
mov
imull
ss
push
xchg
nop
pop
inc
shrb
mov
sbb
xor
idivb
adc
mov
sarb
mov
mov
insl
pop
scas
pop
insb
jae
out
jge
dec
lds
push
xchg
mov
inc
in
stos
and
mov
inc
js
pusha
adcl
lcall
lea
out
sub
jne
cmp
adc
jp
out
mov
fs
adc
icebp
ficomps
fs
or
mov
adc
hlt
in
mov
lcall
pusha
push
jno
xor
jo
ret
and
lock
lds
fistl
xlat
sub
push
xchg
out
inc
or
lods
std
mov
lea
jae
cmp
fnstcw
pop
popa
lea
adc
xchg
jo
sbbb
mov
je
rclb
lahf
hlt
nop
xlat
repz
es
lahf
push
cmp
xor
ret
pop
cmp
out
inc
jle
inc
insb
inc
test
cmp
addr16
mov
sarb
sbb
insb
popa
dec
push
cmp
dec
js
xor
lea
jae
addr16
lret
add
adc
inc
adc
loopne
pop
sahf
shll
pop
leave
rclb
adc
imul
cwtl
jg
push
fsubr
push
dec
cwtl
in
das
imul
jge
testb
in
fdivs
or
jb
stc
and
mov
mov
pop
cs
inc
test
cmp
fs
or
push
jo
icebp
and
cmp
xlat
xchg
mov
mov
and
pop
outsb
mov
inc
scas
and
fldlg2
bound
xor
stos
aaa
pop
shr
mov
and
lds
mov
subb
push
shlb
push
mov
stos
incb
sub
jl
dec
mov
gs
mov
sbb
mov
xor
and
xchg
cmc
popl
les
mov
adc
cmpsb
enter
stos
lahf
loopne
or
lret
sub
in
pop
cwtl
pop
xchg
sbb
or
inc
cmp
push
ret
xlat
push
mov
divb
bound
sub
mov
xor
fxch
xchg
jb
mov
mulb
and
cmp
aas
or
cli
xchg
iret
push
push
mulb
out
xchg
sbb
xchg
inc
push
pop
hlt
or
mov
sub
fnstcw
mov
cwtl
or
adc
addb
mov
mov
shlb
shlb
outsb
xchg
jbe
sarl
popf
mov
popf
fisubs
and
sub
sub
pop
mov
insl
cmp
mov
pop
or
jp
xor
inc
mov
lret
sub
push
jae
xor
lea
jnp
inc
iret
xchg
adcb
test
cltd
and
dec
sub
xchg
cmp
in
fsubs
mov
pop
cmp
xchg
scas
aaa
dec
and
aas
not
cmp
icebp
fcompl
das
push
mov
push
cmp
out
icebp
into
int3
xchg
push
aas
cmpsl
int
dec
jnp
sahf
xchg
fisubl
inc
push
dec
ja
lahf
mov
add
cltd
aad
stc
loop
in
lcall
mov
mov
pop
mov
je
jae
shll
and
pop
pusha
data16
push
push
sub
fists
loop
lock
lea
pop
cmp
sti
pop
stos
das
sbb
sbb
adc
xchg
adc
inc
adc
mov
or
insl
aad
aam
test
gs
sbb
mov
clc
test
rcr
or
xchg
pop
js
adc
xor
adcb
jmp
sti
int
push
sub
dec
cmp
cltd
mov
add
test
les
push
lock
movsl
jmp
cmc
dec
imul
push
inc
add
xor
loope
push
jb
dec
cmpsb
inc
sub
cltd
mov
insl
and
adc
jbe
js
cwtl
jecxz
js
mov
fsubrl
xchg
test
and
and
push
add
sub
xor
cwtl
je
jne
inc
mov
repnz
je
or
dec
dec
dec
cwtl
dec
xchg
ret
mov
jne
outsb
lds
gs
add
shl
scas
gs
in
stos
xchg
dec
inc
mov
hlt
pop
mov
pop
jne
sub
jnp
mov
fidivrl
andb
bound
adc
leave
shrb
sub
mov
or
mov
inc
jecxz
popf
es
or
pop
pusha
add
sub
cmpsb
imul
dec
ljmp
js
popa
lret
xchg
mov
push
fucom
fucom
std
adc
dec
add
cwtl
adc
mov
fcmovnb
fcomi
aam
inc
rclb
xchg
fstpl
movsl
inc
add
scas
jge
pop
pop
mov
add
xchg
arpl
pusha
cmpsl
jl
mov
sbb
mov
pop
sbb
inc
in
lret
jae
sub
add
ret
andb
cld
scas
pop
lahf
daa
xchg
jae
sbb
adc
shl
stos
jg
test
cwtl
xchg
or
sbb
pop
xchg
and
adc
sbb
and
pusha
or
hlt
test
adc
mov
out
out
adc
inc
inc
mov
jno
sbb
sbb
or
push
andb
popf
xchg
js
push
ds
lahf
jge
fisttpll
insl
dec
pop
push
push
push
mov
adc
in
and
mov
stc
add
fs
jbe
inc
stos
frstor
jecxz
push
addr16
pop
int3
int
xchg
mov
dec
fnstsw
jno
cmc
lret
sbb
mov
lret
repnz
mov
jge
push
push
imul
add
cwtl
dec
fbstp
stc
push
xchg
lret
or
icebp
mull
jbe
insl
sbb
or
cmp
mov
dec
or
std
je
xchg
add
fstpt
ret
js
add
push
movsb
lret
cwtl
adc
jecxz
fimuls
lahf
shrb
cmc
in
inc
push
test
psubw
inc
fsubs
push
mov
lret
xchg
fsubrp
icebp
mov
push
cld
les
dec
inc
jb
cmp
mov
cmp
decb
and
add
fcompl
inc
jmp
mov
cmp
sub
fdivl
mov
mov
and
dec
sbb
push
das
push
mov
lret
jae
cmp
push
ja
sub
push
pop
inc
out
xor
pop
and
and
push
push
sub
loopne
pop
arpl
push
pop
in
mov
ret
ret
mov
cmp
js
nop
int
lea
ror
push
add
rcrl
xor
cmp
sub
mov
mov
dec
adc
in
xchg
jb
jecxz
ljmp
testl
mov
dec
xchg
mov
ficompl
stos
outsl
push
xor
cli
notb
lods
mov
sub
rcr
pop
loop
push
xchg
and
hlt
mov
and
and
aam
fcmove
ds
cltd
cmpsb
cwtl
cmpsl
mov
clc
mov
and
pop
adcb
push
push
int
mov
mov
out
cmp
test
mov
cli
lss
pop
nop
sbb
js
jb
jecxz
dec
or
jne
in
aad
mov
stos
mov
xchg
leave
sub
mov
inc
xor
dec
rcrl
lock
pop
jae
mov
mov
inc
mov
fnstsw
mov
lahf
lds
int3
dec
aaa
mov
scas
idiv
es
push
addb
pop
dec
or
idiv
jbe
pop
mov
mov
jge
fs
das
add
jp
mov
in
sbb
sbb
xchg
bt
insb
sub
out
arpl
jb
andb
scas
data16
push
pop
lret
insl
pop
call
out
jg
inc
gs
and
fucomi
fstl
int3
xchg
push
shll
or
jmp
mov
add
and
scas
ss
in
test
outsb
dec
lret
lock
cs
mov
loop
dec
push
movsl
jb
sub
out
push
inc
pusha
pushf
inc
inc
rclb
mov
jl
movsl
imul
and
fsubrl
in
popf
push
imul
mov
ss
adc
ja
push
fs
sbb
or
mov
sub
cmpsb
xor
add
jmp
dec
dec
jnp
inc
mov
cmp
adc
ja
and
jbe
mov
fcompp
cli
xor
outsl
jge
xchg
iret
imul
loope
fsubl
adc
lods
jecxz
push
stos
push
es
ror
or
repnz
add
jno
push
inc
rcr
popa
lcall
mov
cmp
mov
lcall
cmp
pop
xchg
pop
and
scas
mov
xchg
imul
push
stos
jns
mov
mov
cltd
push
mov
imul
ljmp
xor
sub
or
and
jge
push
stc
je
notb
jns
test
fmulp
or
adc
pop
sub
into
push
pop
pop
out
enter
in
stos
mov
js
mov
arpl
sar
imul
cs
cli
ret
std
fnstcw
ret
out
or
mov
or
sbb
jbe
ret
mov
leave
popa
in
lret
ret
push
jl
imul
jecxz
jns
sahf
fisubrs
pop
push
jecxz
cwtl
shrb
and
push
cmp
rcrb
js
rcl
movsl
cltd
and
jb
sub
imul
ds
lahf
jmp
mov
sub
sti
add
push
outsb
aad
jg
out
push
jle
pop
xchg
or
or
mov
mov
mov
jae
cld
push
lcall
lds
cltd
std
icebp
mov
jbe
in
cmc
add
in
mov
out
out
arpl
mov
jbe
push
cs
pop
add
cwtl
scas
mov
sub
mov
shlb
nop
xor
fidivs
out
dec
in
mov
mov
out
mov
mov
arpl
andb
add
fisubs
enter
adc
adc
je
jae
sbb
in
inc
stos
into
cmpsb
divl
jb
add
pop
decl
fisubrl
lret
movsl
loopne
imul
xor
xor
gs
sub
cld
aaa
push
jle
adc
push
test
shrb
dec
mov
and
mov
jne
pushf
ret
pop
inc
mov
nop
xchg
clc
sbbl
sti
xchg
retw
aas
add
lahf
cmp
lea
stc
push
in
out
pop
out
mov
popf
stos
cmp
xor
push
adc
int3
sub
sti
add
in
test
lods
rorb
xor
mov
xor
psubd
fdivrs
data16
lock
push
cmp
cmp
or
mov
pushf
ss
cmp
add
push
pop
jl
adc
jge
psubw
inc
jbe
push
outsb
stos
ret
pop
push
push
hlt
jge
sbb
iret
rcll
add
es
ljmp
xor
ret
mov
repnz
ficompl
fcomps
cmc
push
testl
mov
add
mov
xor
test
sar
xor
pop
mov
sub
sbb
push
icebp
push
jae
lcall
je
dec
shr
clc
cld
inc
cmp
insb
adc
aad
xorl
bound
adc
ds
daa
sbb
movsb
jno
loope
add
pop
mov
or
mov
loope
dec
sbb
je
mov
and
push
cmc
mul
outsl
or
in
or
data16
test
add
xor
mov
call
and
loope
test
ret
clc
xor
fcoml
xor
add
test
push
xor
or
and
movsl
xor
cmc
xchg
sub
push
dec
hlt
adc
or
xchg
push
add
clc
dec
inc
stos
lods
cli
mov
test
xchg
movsb
ret
cmp
data16
jae
adc
mov
hlt
popf
sarb
inc
aaa
cld
sub
shlb
aad
jo
in
sub
push
cmp
adc
lcall
imul
cmp
lods
pop
inc
rcl
dec
jg
cwtl
loopne
mov
push
fbstp
cmpsb
sub
xor
outsl
popf
cmc
in
sub
in
subl
jo
pushf
dec
leave
pop
sbb
dec
fwait
addb
mov
adc
push
call
jp
jno
mov
lods
arpl
into
sbb
loopne
sbb
inc
or
jo
push
push
mov
or
lahf
mov
adc
jb
je
aas
sub
push
pop
fwait
and
in
mov
scas
aaa
jns
push
ret
mov
imul
subl
inc
insb
popf
xchg
aas
mull
sub
loop
scas
add
je
scas
dec
cmc
imulb
xchg
imull
nop
pop
hlt
mov
inc
pop
or
xchg
cmpsl
arpl
pushf
push
lods
mov
xchg
add
xlat
dec
lea
iret
jae
mul
scas
flds
insb
pop
mov
mov
pop
add
daa
sub
fsubl
dec
xchg
inc
cwtl
cltd
push
sbb
es
sti
iret
lahf
jns
mov
in
jbe
jp
ds
std
stos
push
mov
mov
fs
out
mov
push
cmp
inc
ss
and
push
outsb
inc
jg
pop
sbb
inc
mov
imulb
jnp
cmp
sbb
inc
imul
and
inc
in
in
arpl
xchg
jge
xorl
imul
and
in
xchg
ds
in
cmp
iret
mov
fidivrs
subb
int3
hlt
and
or
or
add
mov
add
ret
mov
scas
repnz
jno
mov
mov
push
push
lret
push
mov
and
pop
mov
bound
jne
push
int
cld
test
or
dec
xor
test
push
mov
jg
lahf
pop
std
cli
inc
test
insb
sbb
jle
icebp
push
cmp
cmp
dec
ficoml
ds
nop
mov
mov
mov
push
pop
jl
sub
shll
outsb
lret
add
fcoml
pop
dec
fists
or
pop
lcall
bound
xor
sbb
push
lret
sbb
pop
fwait
push
icebp
xor
addr16
jo
sbb
dec
sbb
js
loopne
mov
ja
sti
imul
xor
ds
imul
shll
push
sub
cld
dec
imul
mov
enter
aaa
lds
mov
inc
pop
lcall
in
xorb
loopne
mov
or
adcl
stos
dec
rorb
movsl
lock
or
jo
pushf
movsb
sub
mov
lods
sbb
aaa
jnp
sbb
rcll
popf
push
iret
xchg
stos
fdivrs
add
gs
cmp
inc
lret
xor
xor
stc
or
das
adc
or
jmp
hlt
cmp
outsb
scas
and
testb
push
mov
in
pop
icebp
jecxz
mov
adcl
push
and
xor
dec
xchg
dec
sub
insb
enter
cmpsb
dec
push
cmp
arpl
loope
cmp
pop
popa
pavgw
int
dec
test
fidivs
inc
es
xchg
cwtl
lea
test
push
add
ljmp
mov
xchg
fistl
std
jnp
mov
out
aaa
sub
xchg
insl
jns
mov
pop
mov
adc
sbb
or
fstpl
in
jecxz
mov
clc
xchg
cmpsl
scas
into
sub
outsl
cmp
aad
or
inc
cmp
inc
mov
testb
push
icebp
sub
lret
mov
ds
call
movsl
sbb
gs
cmp
ret
jle
insb
pushf
push
pop
xor
inc
cmpsl
les
mov
in
inc
and
out
nop
add
xchg
rcrb
pop
loop
pop
xorl
or
add
jnp
sbb
in
cli
loope
shrb
push
pop
aas
cmp
push
lret
and
dec
test
fidivrl
push
sub
enter
inc
enter
popf
stos
xchg
pop
push
mov
add
sti
fcoms
mov
test
dec
out
icebp
test
cld
sub
jns
or
cmp
add
and
jbe
mov
rcr
mov
std
sbb
loope
stos
and
inc
push
and
repnz
fsts
out
or
cmp
pop
pop
lds
mov
mov
jbe
jnp
jl
orb
push
popa
fcmovnb
lock
icebp
adc
fildll
sub
jbe
adc
outsb
call
sbb
pop
aaa
sbb
dec
stos
outsb
push
lret
ds
pop
lret
push
dec
aam
nop
stc
fcmovnbe
pop
jne
dec
jg
arpl
or
pop
mov
aam
in
lret
sbb
cmp
in
or
jecxz
call
fwait
jl
scas
add
mov
xchg
sahf
jne
aaa
jns
cmp
xchg
hlt
mov
push
and
inc
scas
add
sub
call
or
pop
lock
lds
shl
mov
dec
xchg
popa
mov
bnd
int3
fwait
jle
fwait
jnp
nop
inc
sbb
and
fisttpl
pop
adc
mov
aad
jg
repnz
add
pop
and
jno
or
inc
lods
xor
inc
cmp
push
out
xor
pop
cmc
out
sbb
cmc
mov
outsl
int
into
jmp
popa
insb
mov
outsb
push
sub
lds
sbb
cltd
lahf
push
jae
sbbb
jmp
fsubl
sub
sbb
scas
fisubl
inc
cmp
lds
jl
mov
sub
push
mov
xor
hlt
pop
daa
cltd
pop
adc
jge
sbb
pop
cwtl
lret
icebp
enter
dec
call
push
dec
inc
pop
cmpsb
adc
dec
xchg
ss
mov
fdivrl
mov
and
or
push
fsubrs
scas
enter
sbb
push
cmp
and
push
lret
cmp
cmp
sub
cmpsb
call
or
sbb
dec
mov
or
inc
or
mov
adc
fsubp
push
push
in
xor
adc
mov
mov
ret
jmp
loope
fwait
mov
clc
cmp
fistpl
xor
jmp
xchg
test
out
xor
fisttpll
ret
cmp
sbb
xchg
pop
hlt
xchg
xor
pop
data16
daa
movsl
mov
push
loop
test
out
push
aam
mov
movsb
fimull
icebp
aas
mov
push
aam
jnp
xchg
jnp
loopne
sbb
or
jo
inc
in
lock
or
add
xor
add
aas
or
mov
test
pusha
xchg
test
in
xor
pop
into
out
cmpsl
mov
mov
sbb
daa
jbe
dec
fnstenv
jae
add
iret
adc
mov
ficompl
sar
xorb
and
or
sub
lcall
test
push
insb
jae
mov
cmpsb
mov
cmpsb
adc
mov
xor
roll
pushf
jbe
scas
mov
shrl
mov
fbstp
iret
insl
int
push
mov
fcom
add
pusha
or
mov
insl
mov
andl
xor
pop
xchg
jo
and
inc
test
bound
add
fmuls
in
mov
mov
and
add
xchg
lret
lret
cld
cmpsb
inc
dec
addl
fxch
sti
movsb
pop
cli
repnz
sub
pop
in
add
cmp
or
outsb
mov
js
mov
or
in
stc
push
fs
leave
push
fucomip
sub
xchg
pop
test
and
sbb
jo
lock
sbb
xor
bound
mov
movsb
fsubrp
outsb
push
pop
xchg
sbb
inc
mov
push
mov
int3
ja
aaa
fmuls
mov
aam
inc
mov
mov
mov
jae
lods
fistl
aaa
in
dec
imul
stc
or
lods
pop
or
mov
add
fwait
es
es
imul
mov
jnp
lods
lods
jne
pop
jecxz
pop
cmp
xor
sbb
ficoms
xchg
call
clc
and
adc
xor
loope
je
pop
jl
push
sar
lahf
pop
gs
cmp
fsts
mov
sbb
cmp
inc
mov
push
subl
incl
lods
dec
pop
jo
jmp
cmp
mov
scas
loope
ret
mov
or
insl
mov
test
out
push
jmp
mov
add
pushf
std
into
nop
xchg
icebp
fists
sub
mov
scas
pop
xor
aad
jne
lods
rcl
push
adc
scas
adc
lret
jnp
test
sbbb
sti
ja
aad
sub
outsb
dec
xlat
mov
cmc
jg
test
push
je
pop
stos
xlat
mov
sbb
adc
xor
lcall
or
and
aaa
dec
sahf
sbb
xchg
pop
movsl
shll
xchg
add
xor
cmpsb
mov
mov
mov
shr
sub
fisubrs
dec
mov
jmp
or
dec
ja
and
push
or
xorb
sbb
xchg
jno
inc
adc
sahf
mov
movsb
adc
mov
jg
cmpsb
push
sbb
ss
ret
add
add
scas
fcom
les
mov
jmp
outsl
mov
xor
daa
mov
mov
cld
or
inc
int
push
ficoml
cmp
fcmovu
aam
sahf
mov
scas
adc
out
cmpb
add
out
iret
xor
out
xchg
sub
stos
push
fcoml
or
fyl2xp1
jns
ja
loop
imul
mov
scas
sbb
push
dec
adc
fisubrl
inc
out
xchg
outsl
arpl
in
orl
mov
ret
test
pop
jge
mov
in
mov
jg
sahf
inc
mov
inc
aaa
mov
imul
loopne
jno
add
and
fiaddl
jl
xchg
adc
out
sbb
mov
sar
out
cli
in
and
pop
fsubrs
push
into
leave
jmp
movsb
or
test
mov
mov
inc
cld
mov
ss
jle
dec
lret
dec
xorps
shl
xor
negb
inc
jecxz
sbb
daa
stos
test
jle
mov
call
xchg
xlat
mov
jne
movsl
push
adc
in
push
sub
sbb
in
ficoms
int3
mov
or
shl
leave
outsb
ljmp
xchg
out
cmp
mov
rorb
adc
loopne
and
dec
cmp
mov
call
jno
jae
sbb
ffree
call
cli
ret
imul
cmp
xchg
lret
lods
outsb
std
sub
xor
arpl
mov
lds
adc
js
loopne
sbb
outsb
mov
test
pop
stos
js
mov
cmpb
jg
lods
movsb
stos
out
jo
jns
loopne
lret
cltd
int
sbb
xchg
sbb
sbb
test
push
mov
pusha
pop
test
jmp
cmpsl
jne
jae
mov
inc
mov
frstor
mov
loope
jp
aam
in
bound
popf
popa
loop
aas
or
xchg
out
cld
lret
push
inc
hlt
in
je
outsl
ss
sti
mov
jno
add
pop
arpl
cmp
push
cmp
pop
nop
push
xchg
mov
sbb
mov
push
sahf
rcll
sbb
lock
lea
shl
lcall
xor
fwait
insl
ds
cltd
jecxz
ja
sbb
fidivrs
jp
sub
or
adc
dec
jmp
inc
aaa
fcom
xchg
mov
mov
add
pop
pop
loopne
fcompl
outsl
jbe
jge
inc
arpl
inc
nop
in
sub
mov
mov
push
or
leave
cmp
fwait
mov
jae
int
outsl
pop
ljmp
sbb
add
fnstenv
arpl
movsb
shlb
jb
inc
stos
xchg
jmp
movsb
mov
pop
imul
outsb
ss
in
imul
sub
pop
mov
push
in
and
sti
and
scas
inc
fadds
dec
ds
push
add
push
sub
loope
clc
cmp
loop
fidivrs
into
push
mov
aaa
test
ja
out
in
fs
mov
jns
cmpsb
adc
cld
dec
in
dec
out
mov
ret
pop
leave
xchg
jae
cltd
mov
test
mov
rorl
scas
cmp
xor
cmpsb
fwait
ret
pop
and
sbb
push
ja
or
call
notl
fwait
jg
mov
outsb
icebp
dec
cmp
jnp
mov
jg
pop
mov
sub
mov
pop
xchg
push
cld
imul
imul
insb
jle
scas
push
xlat
xchg
repnz
inc
or
add
mov
cmpsl
orb
out
faddl
push
jle
repz
jbe
push
sub
stos
lret
outsb
jecxz
icebp
cmpb
jo
sub
shll
popa
nop
lods
mov
sub
imulb
fwait
dec
data16
call
enter
sub
sub
push
mov
sbb
add
lods
jecxz
addl
jo
mov
or
sbb
out
popa
pop
icebp
adc
imul
sub
into
xchg
stos
sahf
sub
rclb
push
inc
inc
cltd
xchg
push
and
xor
nop
inc
xor
adc
scas
call
jno
xor
add
mov
cmp
sarb
test
add
outsb
jo
hlt
sbb
fs
fisubl
adc
fistl
mov
fs
sbb
mov
iret
movsl
ja
lret
insl
push
pusha
mov
mov
daa
mov
inc
sbb
mov
inc
cmp
mov
out
icebp
sbb
or
add
pop
pcmpgtw
dec
repnz
dec
dec
sarl
ja
cs
aam
mov
jb
icebp
sub
mov
add
decb
ficoms
push
addr16
xchg
adc
ficoms
or
or
pop
clc
loopne
pop
loope
jb
or
mov
pop
fs
jl
jno
test
mov
repz
push
pop
sub
ret
out
data16
aaa
fstpl
jno
ss
cmp
insb
cmpsb
jp
push
data16
loopne
cmp
mov
push
add
cmpsb
scas
push
and
mov
inc
std
imull
loopne
xchg
dec
int3
cmpsl
shll
push
jl
in
or
push
dec
sub
or
and
das
or
test
out
loop
scas
mov
inc
inc
sbb
popf
bnd
mov
xor
push
jp
pop
jnp
xlat
and
mov
test
js
dec
aas
insb
adc
cmp
cmc
push
mov
popf
and
lret
inc
cmc
ja
mov
dec
xchg
sub
add
stos
mov
hlt
xchg
pop
push
sbb
or
xor
sahf
sub
fimuls
mov
adc
and
insl
pop
inc
push
insl
and
incl
xchg
gs
out
lcall
outsb
lds
jnp
out
mov
jae
popf
mov
rcrl
dec
jno
cmp
fiaddl
clc
sbb
sub
mov
daa
jmp
adc
in
xor
testl
cmp
repz
fidivrs
or
pop
outsl
icebp
les
pop
scas
mov
fs
das
ljmp
sti
mulb
adc
mov
push
mov
mov
stc
push
roll
jo
add
mov
jge
dec
int3
mov
out
mov
cwtl
mov
xor
push
xchg
dec
sbb
aam
adc
mov
mov
ret
fnsave
lods
xor
sahf
mov
xchg
loope
mov
xlat
sub
inc
test
inc
jmp
std
mov
sti
dec
dec
sub
jo
push
das
inc
ja
and
das
push
jp
push
jae
in
fsubrs
mov
cld
aad
movsb
or
stc
pop
pop
pop
cmp
or
cmp
in
mov
loop
inc
stc
lods
add
xlat
mov
pop
sbb
mov
scas
cmp
lds
std
mov
std
xchg
dec
push
pop
mov
push
cmp
and
dec
inc
les
pop
test
pop
mov
jne
jge
ja
and
cmp
lods
imul
mov
cmpsb
movsl
push
dec
xlat
dec
js
imul
inc
fisubrl
jne
test
lods
sub
lds
mov
jns
mov
jecxz
sub
mov
loope
stos
jmp
push
in
inc
jbe
out
je
std
sbb
aam
cmp
in
test
mov
dec
into
lcall
imul
sbb
and
lret
mov
icebp
mov
pop
ret
mov
pop
clc
fidivrs
je
lret
arpl
xchg
jns
test
jo
sub
mulps
xchg
pop
add
cmp
or
cltd
push
adc
mov
inc
jne
mov
xchg
notl
mov
jge
jecxz
mov
dec
add
cmp
cmp
lahf
adc
rorl
mov
hlt
aaa
push
insl
outsb
cmpsl
jne
push
adcb
and
pushf
cwtl
mov
ss
dec
out
cli
xchg
testb
aad
push
jns
lods
daa
cmp
or
xor
jg
dec
pop
jb
xchg
inc
arpl
xchg
jne
jne
out
leave
pop
mov
xchg
in
pusha
imul
test
push
inc
inc
pop
push
mov
and
push
lock
cmp
lret
or
xchg
and
dec
cmp
movsl
push
pop
xchg
mov
dec
sbb
xchg
pop
bound
pop
test
push
in
pushf
imul
mov
sbb
mov
adc
sub
mov
jge
jmp
push
xor
test
inc
push
sub
ds
mov
test
and
sub
push
push
mov
or
cli
fucom
inc
xchg
fcmovnbe
outsb
clc
or
mov
imul
cmp
lret
jg
sahf
jle
bndstx
sub
adc
pushf
mov
aaa
adc
xchg
push
movsb
cwtl
jnp
xchg
mov
push
sbb
adc
add
add
sarb
and
sbb
cmpb
test
jbe
xchg
sbbl
cs
test
imul
dec
jl
stos
push
jno
cmc
jno
fwait
negl
and
fnsave
dec
xor
sub
popf
jo
mov
sub
into
out
mov
insb
or
pop
ss
or
pop
push
sbb
mov
addb
pop
sub
jnp
dec
or
jmp
sub
stos
fcomps
mov
sub
push
jb
repnz
mov
and
sub
dec
bound
in
mov
or
mov
sub
scas
imul
pop
mov
movsb
add
push
jmp
int3
in
sbb
cs
roll
pop
fs
jae
jbe
testl
mov
hlt
add
mov
out
movsb
daa
mov
stc
bound
jns
popf
mov
or
scas
fbstp
inc
es
dec
js
cmp
mov
mov
push
adc
fdivrs
xchg
movsl
ficompl
ja
adc
or
aaa
jmp
xor
mov
push
fbstp
mov
mov
arpl
jmp
test
mov
mov
cmp
mov
sbb
stos
push
jae
arpl
dec
cmp
popa
repz
xchg
mull
js
popf
jae
mov
xchg
rorl
mov
int3
es
lret
push
xchg
into
cltd
cld
xor
mov
mov
mov
popf
stc
clc
jmp
dec
test
fst
fs
mov
aam
test
insb
mov
aas
mov
adc
ss
push
pop
popa
xor
lcall
into
xlat
pop
and
cmpsl
xchg
loope
mov
cmpsl
cmp
inc
or
dec
jp
xlat
mov
clc
or
lods
scas
mov
mov
lods
movsl
adc
lret
mov
cli
int
jge
pop
aam
jge
inc
addb
cwtl
lret
mov
push
cmp
shlb
sub
and
insb
dec
insl
adc
mov
pop
xor
sbb
or
clc
es
arpl
push
outsl
jmp
mov
shr
push
insl
cs
sub
sub
stos
orl
clc
loope
add
push
testl
mov
push
mov
sbb
test
adc
je
sbb
cmp
movsl
cmc
fcomi
icebp
aam
add
or
ds
sbbb
pop
sbb
xor
fdivrs
sbb
xor
jne
int
adc
jl
aad
mov
enter
jb
faddl
adc
and
pop
push
stos
addl
lcall
mov
add
fcomp
clc
js
cwtl
rorb
push
push
sbb
scas
dec
sub
jl
ret
ja
cmp
cmc
pushl
aaa
mov
ficomps
imul
sub
jl
jb
push
fldcw
in
mov
xor
into
push
jp
int
cwtl
jno
jns
xchg
in
pop
sub
mov
or
adc
dec
es
mov
hlt
push
push
loopne
jmp
das
xchg
sarl
pusha
lahf
push
adc
int
cmp
mov
xchg
imul
and
popf
daa
sub
fbld
movsl
and
add
sbb
les
roll
das
clc
mov
fs
adc
adc
pop
adc
fdivrl
jnp
jp
out
sub
push
xchg
sti
mov
add
pop
push
cmpsb
mov
cmp
in
bound
insb
pop
mov
sbb
clc
cmp
sarb
insl
repnz
xchg
fdivrp
and
cmp
add
fdivs
call
std
nop
sbb
push
daa
and
mov
jg
inc
lahf
movsb
adc
fstps
and
in
sub
fs
sbb
mov
or
and
sub
adc
lahf
dec
cwtl
mov
jno
xchg
dec
push
fstl
nop
repnz
repnz
add
add
outsl
rorb
or
mov
add
repz
sub
xchg
mov
movsl
mov
ljmp
mov
sahf
pop
pop
add
loope
inc
xor
xchg
mul
addl
std
sti
gs
js
jecxz
out
inc
add
cmp
outsl
xchg
mov
add
jbe
ficompl
lods
inc
dec
pop
inc
les
xor
stos
adc
sub
mov
add
mov
fstl
les
ljmp
sbb
sahf
dec
lea
push
and
imul
cmp
sbb
fxch
mov
ret
ds
movsl
repnz
test
mov
lea
iret
and
jp
sub
jb
xor
push
push
mov
cli
xlat
sahf
fisubl
pushf
lahf
inc
insb
lahf
testl
fisubl
fldcw
nop
lods
xchg
fcoml
pop
jge
mov
xchg
outsl
cmp
push
cli
jle
ja
scas
rclb
insl
push
ret
lds
cmc
mov
pop
push
mov
ret
cmp
push
jge
notl
xor
add
jmp
cmp
adc
mov
adc
or
mov
pop
test
arpl
xchg
push
imul
pushf
subb
adc
dec
pop
sub
decl
sbb
mov
lods
sbb
loop
mov
icebp
mov
adc
pop
add
sarb
xor
fdivr
push
hlt
push
push
addb
pop
cmp
xorb
cmp
pop
cwtl
pop
nop
and
mov
testl
dec
adc
mov
ret
jne
sbb
and
dec
sub
fmul
inc
mov
pop
pop
mov
mov
mov
loopne
or
stos
jns
lcall
lock
lret
jae
outsl
adc
pop
pop
xchg
push
in
repnz
or
bound
ja
shl
stc
or
iret
inc
cmpsl
in
push
dec
ja
xchg
inc
sub
ficompl
ljmp
cmp
clc
lahf
inc
pusha
jp
cld
xchg
movsl
cmpsl
jbe
sti
shrb
jmp
stc
sub
inc
fimuls
cmp
dec
daa
gs
or
aam
in
pop
jp
sbb
aam
dec
aad
addr16
enter
mov
jae
mov
jae
jne
sub
out
ret
xchg
mov
movsb
rol
decb
pop
mov
and
mov
movsl
ficoms
imul
stc
push
loop
or
fildll
mov
mov
cli
cmpsl
in
pop
add
fisubs
aad
mov
gs
fiaddl
mov
imul
xchg
out
xor
inc
fstp
xchg
jecxz
push
jle
fstpt
xchg
lret
mov
cmc
pop
inc
push
sub
push
dec
inc
pop
int
lods
lock
jo
jge
insl
js
testl
sub
cmpsl
movsl
xchg
cmp
add
jp
test
mov
dec
push
jno
mov
out
mov
mov
push
clc
jb
ljmp
out
pop
roll
jle
es
sub
sub
stos
out
inc
adc
lea
in
stc
push
inc
sub
out
pop
pop
adc
add
xchg
orb
sub
jno
push
or
iret
js
xor
pop
popfw
sti
and
out
inc
call
mov
dec
xchg
loopne
dec
dec
mov
fistpl
xchg
mov
xchg
mov
fwait
push
imul
imul
fnstsw
daa
out
nop
adc
stos
dec
cli
pop
xor
sub
adc
insb
icebp
mov
aas
push
and
xor
hlt
add
dec
data16
cmpsl
dec
jb
pop
mov
xchg
xchg
mov
jae
hlt
dec
leave
sti
or
mov
pop
mov
mov
push
lcall
in
add
out
push
ja
cs
xor
and
and
mov
fists
test
pop
push
mov
inc
fidivrs
sub
adc
addr16
insb
jl
xchg
inc
imul
jae
jne
jno
push
jle
fnstenv
inc
and
xchg
insl
fadds
dec
mov
cmp
jecxz
aaa
stos
icebp
xor
jnp
jne
jno
stos
sbb
std
and
add
mov
lock
adc
test
lret
das
cs
sub
test
xabort
cwtl
push
lods
scas
push
inc
adc
inc
aas
std
sarl
jne
dec
mov
push
in
mov
leave
aaa
leave
fmull
das
aas
outsl
inc
jno
push
into
andl
lea
sbb
hlt
xchg
cmp
rcrb
stos
or
ret
andb
aaa
or
into
dec
loope
or
data16
mov
or
pop
inc
arpl
std
push
fisttpll
popa
jle
mov
lods
jge
out
xchg
aaa
in
inc
call
or
ficomps
cmp
arpl
add
ds
cmp
adc
adc
loopne
mov
or
lods
popf
jmp
insb
mov
pop
jbe
test
insl
inc
dec
mov
inc
mov
inc
or
pop
and
sbb
fcmovbe
imulb
sub
jl
sub
pop
sbb
aam
pop
or
cmp
lock
mov
fs
imul
dec
out
xchg
lock
xor
xor
mov
mov
pop
push
rorl
inc
jns
int
test
or
jb
add
stos
cs
jmp
or
fwait
aas
push
jecxz
mov
jb
xchg
dec
les
inc
negl
div
mov
xor
pop
xor
cwtl
sbb
sbb
ss
ficoms
sti
jns
lds
rorl
xor
push
and
push
mov
adc
inc
rclb
dec
movsl
ds
cmp
loop
test
outsl
insb
jne
or
add
push
loope
sub
cmpsb
or
std
cmp
push
and
xlat
push
jb
and
xor
imul
out
mov
jno
ds
pop
mov
lret
add
cmpsl
sbb
adc
add
mov
or
jg
and
int3
xor
cmp
pop
xchg
lea
divb
decb
movsb
sbb
repz
add
mov
js
adc
popf
adc
sbb
fwait
arpl
mov
jg
lods
mov
jg
push
xlat
xchg
pop
mov
pop
sbb
dec
dec
xchg
dec
cmpsb
icebp
hlt
jmp
test
mov
cmp
mov
cmpsl
cmp
test
je
add
inc
loopne
pushf
mov
xor
movsl
adc
cld
pop
out
insb
dec
js
les
lods
pop
aad
into
xchg
frstor
add
and
gs
out
popa
in
into
clc
mov
push
out
dec
add
sbb
popa
jo
xor
dec
push
fcmovnbe
push
xlat
rcr
xor
imul
cmpsl
add
ficoms
cmp
flds
xlat
movsb
add
cmpsl
iret
sub
bound
mov
popa
add
and
in
icebp
loop
sti
fidivrl
popf
push
xor
test
inc
mov
int
aam
dec
das
rcl
int3
and
jbe
jno
xchg
xchg
xor
mov
rcll
pop
xchg
hlt
mov
shrl
aas
rorl
cltd
add
sub
jecxz
gs
add
mov
xchg
rclb
mov
imul
das
shlb
ljmp
xchg
jae
cwtl
pop
cmp
sub
icebp
test
inc
hlt
fistl
nop
lcall
mov
pop
ljmp
out
push
test
lods
cmp
aam
sub
insb
addl
data16
fcmove
imul
bound
cli
xor
dec
mov
xchg
push
add
adc
xor
orb
sbb
sub
aam
cmpl
mov
jno
mov
loope
ret
mov
cwtl
rorl
pop
imul
pop
jmp
sarb
adc
cmc
pushf
xor
add
pop
data16
outsb
test
jo
test
mov
stos
pop
fldenv
pop
push
sbbb
xchg
sahf
das
out
decl
lcall
arpl
sbb
add
insl
jle
jns
mov
sbb
or
imul
fdivrl
xor
push
xor
lcall
jne
aas
inc
loop
js
lret
fsts
and
or
xor
sbb
lds
pushf
xchg
stos
pop
cmp
xchg
cmp
xchg
andb
sub
arpl
xchg
dec
add
movsb
std
fs
fisttpll
and
pop
dec
cmp
and
fcmovb
push
shrb
adcl
das
mov
xor
outsb
mov
clc
push
imul
punpckldq
xchg
mov
push
dec
mov
xchg
out
sub
cmp
int3
movsb
prefetchw
xadd
and
sbb
leave
and
inc
xorl
mov
cmpsb
add
and
and
stc
xlat
enter
mov
jno
xor
imul
hlt
cmp
sub
dec
lahf
adc
call
push
push
jl
call
xlat
and
shl
cmp
rcl
sbb
xor
or
pop
cltd
or
sub
stos
push
xor
dec
xchg
aam
pop
ss
lds
stos
mov
stc
cmp
xorb
out
inc
lret
insb
ss
push
jmp
mov
push
lock
push
xchg
ss
adc
add
mov
pop
fxch
aad
mov
fists
movsl
jno
dec
in
dec
fs
stc
jnp
and
loope
pop
cmp
adc
insl
bnd
cli
repnz
mov
hlt
xchg
pop
lds
ret
xor
popf
jo
mov
xchg
ja
movsl
stos
fcompl
pop
in
jmp
shrl
pop
push
ret
pop
mov
fmul
fcoml
cwtl
pushf
mov
dec
dec
es
or
ljmp
out
push
or
mov
roll
sar
adc
xchg
enter
dec
loopne
frstor
fistpl
add
imul
lahf
out
in
out
jecxz
inc
notb
lods
add
test
xchg
xor
sub
xchg
cmc
xchg
and
sub
push
jp
mov
dec
pop
ds
push
dec
jae
pop
data16
cs
and
dec
lret
push
jno
int3
int3
sbb
fistpl
or
sub
cmpsl
movsb
xchg
xchg
mov
mov
rorb
cwtl
ret
scas
push
movsl
mov
ds
jb
mov
and
jge
mov
addr16
insl
sub
xor
push
jp
pop
leave
cwtl
jecxz
es
fcoms
cli
lods
cmp
fidivl
daa
movsl
xor
in
add
imul
ja
fs
dec
inc
cwtl
pushf
jns
fs
insb
mov
cli
sahf
or
popf
rolb
cli
fldenv
mov
jl
push
bound
jne
mov
fldcw
xchg
xchg
and
inc
bound
or
ss
fsubrs
mov
adc
jbe
and
ljmp
jle
rcl
std
dec
divl
iret
rcrl
lods
js
xlat
lock
lahf
test
std
repz
outsb
adc
hlt
in
lds
fdiv
aad
test
jle
loop
cmpsl
rcr
inc
mov
sbb
ficoml
xchg
sbbb
in
pop
jp
cmp
pop
mov
mov
mov
addr16
add
pop
mov
sbb
mov
leave
jb
sub
jb
scas
xor
add
fcmovnu
xchg
out
inc
sbb
test
push
fidivrl
fwait
cmc
and
mov
jo
xlat
mov
jge
das
mov
push
test
pop
sahf
cmp
fstpt
xchg
jp
add
pop
pop
jns
in
jg
push
fdivrl
xchg
xor
insb
stos
mov
pop
mov
in
sub
popa
mov
leave
or
cmp
in
mov
and
sbb
cltd
jbe
rorb
fcmovu
lods
jg
or
xor
outsb
add
cmp
add
repz
push
sub
daa
mov
add
stc
enter
inc
in
cmpsl
mov
lds
mov
sbb
mov
sbb
inc
addr16
enter
xlat
sub
test
pop
pop
and
pusha
inc
and
cs
jae
sub
fadds
dec
gs
inc
lds
out
jecxz
inc
cmp
ss
shlb
pop
loope
fbld
mov
dec
xor
sub
scas
aad
fsubs
fs
aaa
loop
lcall
push
movsb
pop
arpl
inc
inc
addr16
sub
not
addb
imul
push
adc
incb
sbb
aaa
enter
lahf
inc
clc
cmp
jb
and
pop
sbb
jno
es
dec
xor
imul
pushf
adc
jecxz
adc
repz
jmp
sub
cmpsb
jno
sub
pushf
cmp
or
pop
cli
jmp
into
cmp
push
sub
cmp
add
mov
push
outsl
stc
inc
push
dec
aas
push
decb
jg
sbb
out
lahf
mov
movsl
adc
and
sahf
aad
lea
stos
aad
push
jle
adc
mov
dec
sarb
in
xor
pop
dec
testb
xor
lea
cs
sti
clc
jp
repz
scas
enter
add
dec
push
cwtl
xor
repnz
enter
xchg
dec
aas
cltd
das
jo
out
psubw
stc
movsl
jo
mov
xchg
mov
push
jle
adc
inc
add
aas
jl
aad
jns
sbb
mov
stos
mov
adc
insb
pop
dec
cmp
inc
push
repnz
js
mov
popa
punpcklbw
sub
testl
sub
cmp
je
inc
xchg
adc
xchg
loop
iret
clc
lods
xchg
xor
inc
lods
inc
clc
fistl
hlt
jmp
xchg
nop
mov
out
jecxz
mov
fiaddl
inc
or
orl
mov
jns
stc
pushf
ljmp
int
popl
sbb
cmp
inc
xchg
mov
jle
or
ja
jns
or
cwtl
call
in
mov
hlt
xchg
ficomps
add
mov
daa
repz
sub
fsubrl
scas
xor
shlb
jno
xchg
jns
inc
push
add
je
das
int3
mov
test
andb
stos
pop
and
or
punpckldq
repnz
es
sbb
pop
mov
mov
or
or
inc
call
fs
mov
aas
in
and
insl
in
imul
inc
in
jae
icebp
add
test
jle
pop
sub
movsb
jl
or
lret
ficoms
xchg
pushf
xchg
in
aam
mov
fadds
sbb
sbb
lock
or
push
jecxz
fidivrs
xlat
dec
inc
mov
lret
movsl
xlat
pushf
xchg
mov
subl
mov
cmp
mov
mov
cmp
xlat
add
ret
push
dec
add
test
xchg
sub
add
lcall
add
icebp
out
rcr
cwtl
aas
add
fcomps
dec
in
rclb
or
dec
rorl
stos
pop
lret
aad
out
aas
mov
xchg
xor
xor
rorb
xchg
fwait
push
dec
imul
lret
mov
push
cmc
jb
ret
pop
addr16
push
sbb
jle
cmp
lahf
lret
les
rorb
shll
insb
dec
inc
mov
ljmp
ja
sub
push
sub
adc
int
sub
pop
test
insb
xchg
repz
out
mov
xor
and
cmp
cmp
sub
pop
pop
push
xor
jmp
inc
pusha
jle
cmp
pop
bnd
push
inc
movsb
pop
ficoml
scas
movsb
out
sub
add
fstpt
and
icebp
sub
push
xchg
xchg
xchg
sahf
pusha
adcb
push
aam
jbe
mov
repnz
fsts
repz
mov
jge
mov
movsb
and
call
push
sbb
cmp
jne
push
mov
xchg
pop
out
mov
fs
and
or
sub
jmp
or
sub
sub
aam
adcl
adc
and
test
cmp
cwtl
stos
push
sub
lahf
mov
jns
mov
jo
imul
mov
scas
out
or
fidivrs
sbb
popa
sbb
pop
test
mov
push
stos
inc
movaps
arpl
jecxz
lahf
cmp
fnsave
mov
sub
das
pushf
mov
or
inc
sub
push
mov
fstl
bound
xor
cwtl
jp
dec
dec
aam
cmp
outsl
pop
ret
pop
mov
mov
or
stos
xlat
dec
pop
testb
adc
icebp
jle
mov
dec
adc
dec
aam
pop
insb
inc
add
push
repnz
cmpsl
pop
ret
test
subb
mov
xchg
add
push
lea
int
notl
movsb
in
test
pushf
sub
push
and
mov
mov
push
lret
addb
dec
inc
add
pop
mov
jp
adc
gs
in
shrl
pop
xor
push
add
jns
inc
pop
jp
in
add
xor
sbb
out
jp
clc
xchg
xchg
scas
dec
add
or
jno
inc
sbb
pusha
adcl
in
pop
test
pop
mov
dec
adc
int3
mov
out
jl
decb
fnstsw
movsl
or
lock
jno
rolb
sbb
das
add
out
cmpl
pop
call
xchg
pand
lret
or
mov
dec
shll
lret
outsb
and
push
mov
repz
jge
mov
daa
lret
jg
pop
pop
or
cmpsb
mov
fidivrl
or
or
add
cmp
xchg
inc
in
inc
and
jnp
dec
xor
popa
inc
inc
daa
in
mov
cmpsl
inc
mov
sti
int3
in
aaa
jns
js
sbb
cwtl
adc
push
into
cmp
ljmp
int
into
xchg
ret
sbb
lods
adc
xor
dec
pop
and
aad
ja
mov
dec
scas
ss
jg
mov
movsb
add
dec
dec
lock
add
inc
push
lock
add
pop
cmp
lods
inc
jmp
or
cmpsb
sub
test
jb
aam
pop
mov
xlat
mov
sbbl
shll
sbb
pusha
mov
and
je
test
xchg
jnp
cmp
cmp
xchg
mov
jmp
jno
push
out
dec
pop
fdivr
add
mov
addr16
test
jne
xor
pop
sti
pop
fsubl
pop
mov
inc
and
imul
xor
setl
loopne
mov
pop
std
nop
sbb
mov
lods
pop
rclb
lods
xor
pop
push
sbb
ret
in
out
jp
shrb
sub
divl
shll
pusha
stos
xchg
adc
lods
and
pop
rcrl
pushf
lret
mov
imul
dec
lret
sub
cmp
mov
mov
pop
daa
and
push
xor
cld
in
mov
xchg
cmpsb
pop
jmp
inc
in
pop
dec
enter
sub
shlb
add
inc
add
cs
repz
mov
cmp
xchg
add
cmp
into
stc
ds
outsl
dec
subb
nop
fsts
dec
fmuls
xor
and
int3
mov
cld
push
loop
in
jmp
in
pop
jo
cmp
push
leave
inc
fbstp
sti
nop
jp
aas
shl
fwait
or
loop
mul
jecxz
jb
outsl
mov
mov
cs
mov
sahf
test
jae
sti
mov
cmp
xor
out
and
sahf
cmp
mov
aam
shrl
xor
xchg
call
mov
mov
lret
lcall
mov
imul
pop
out
dec
pop
arpl
adc
out
xor
lret
imul
popf
in
in
add
aad
cmpsl
cmp
outsl
cmpb
sub
ds
out
sbb
push
scas
outsb
enter
cmp
cmpsl
inc
mov
bound
fdivrs
orb
pop
sub
stos
into
push
shlb
stc
sbb
jb
mov
lods
push
sub
cmp
ret
inc
cmp
ficomps
jns
or
pop
sub
jnp
sub
sbb
repnz
dec
xor
xchg
mov
sub
test
arpl
pop
popf
sarl
mov
testb
popa
sub
push
mov
test
mov
mov
xor
mov
dec
jecxz
adc
xor
jecxz
or
push
sbb
add
jmp
push
dec
call
scas
pop
push
mov
push
xorl
es
andl
ret
icebp
es
jbe
xchg
cmp
jp
pop
mov
mov
jne
stos
subb
pop
pop
adc
or
repz
dec
jge
mov
mov
add
and
mov
mov
std
push
clc
pop
and
int3
ficoml
xchg
loop
ret
aaa
bound
faddl
inc
adc
lock
mov
jno
bound
std
fidivrs
int3
stc
mov
fwait
popf
test
mov
mov
in
rol
aas
hlt
or
lcall
gs
sbb
xchg
or
pop
jp
adc
mov
sub
popf
sbb
cmp
jge
cltd
clc
sbb
fstps
insl
fldz
sarl
repnz
enter
cwtl
jecxz
aaa
imull
popa
xchg
mov
lods
sbb
cmp
and
dec
hlt
mov
push
fnsave
std
and
xchg
push
cmpsl
inc
xor
mov
add
adc
loope
scas
mov
cmp
add
xor
mov
cld
push
mov
sub
push
pop
es
and
idiv
jge
addr16
loope
hlt
out
add
cltd
mov
mov
mov
pop
movsb
bound
cltd
jl
add
sub
mov
pop
xor
sbb
fdivrs
xor
inc
lret
mov
xchg
and
call
adc
mov
movsl
or
pop
cmp
je
rcrw
push
xor
movsb
or
sahf
aaa
cmp
test
out
sub
pop
and
sbb
sti
std
xor
ror
or
and
cmpb
fisttpll
and
subl
repz
push
jl
jg
xor
mov
int3
inc
jle
lret
jno
icebp
mov
pop
in
fwait
loop
fisttpl
loopne
sbb
push
outsb
inc
jl
test
pop
push
les
dec
xchg
xor
mov
add
je
xchg
mov
aam
cmp
push
push
in
fldt
daa
mov
rol
ds
mov
daa
push
mov
jo
push
sub
subb
adc
out
ljmp
scas
mov
adc
mov
jmp
sbb
or
bound
cmp
packsswb
test
dec
test
dec
or
push
push
mov
and
orb
call
fsubl
mov
mov
gs
cmpb
jnp
sarb
faddl
les
daa
cmp
cwtl
xchg
add
lock
push
add
jp
jecxz
push
mov
inc
mov
jno
mov
in
xchg
and
jns
mov
mov
sarl
jae
enter
inc
test
repz
aas
jmp
push
cwtl
jp
sub
adc
test
push
mov
pushf
stos
sub
jge
xor
cli
dec
leave
repnz
cmpsl
push
into
pushl
push
xchg
push
popa
imul
and
lcall
lds
jbe
cltd
mov
push
les
xor
icebp
pop
pop
pop
mov
push
mov
repnz
xchg
xchg
pushl
push
jno
stc
or
sub
mov
nop
cmpb
outsl
dec
and
jmp
repnz
lds
cmp
xchg
das
xchg
mov
repnz
sbb
cmp
mov
mov
dec
test
cwtl
inc
lea
outsb
pusha
outsb
sub
fidivrs
xchg
das
dec
pop
sbb
repz
lcall
or
les
and
cmp
and
jge
testl
popa
pop
xor
aaa
push
add
xchg
mov
ret
jmp
adc
out
lods
pop
test
pusha
ret
ss
insb
insl
pop
std
nop
imul
sbb
sub
jns
mov
scas
mov
push
icebp
adc
cmp
mov
icebp
test
jno
lods
xchg
dec
stc
testl
xor
sbb
dec
sahf
pushf
jae
push
out
sbb
lret
out
ja
popa
ds
mov
dec
xor
jmp
ds
xchg
adc
inc
ljmp
jae
inc
scas
adc
les
dec
clc
pop
fidivrl
sbb
daa
ficoms
dec
cmpsb
shll
cmp
cwtl
add
add
leave
lods
scas
mov
jnp
stos
pop
and
push
jp
xchg
out
inc
cli
aaa
repz
cmp
pop
in
sbb
popl
movsl
push
inc
pushf
stos
jb
fcmovnbe
mov
negl
lock
add
pop
sub
inc
cmc
sub
push
popa
adc
xchg
repz
cli
xchg
cwtl
sbbl
inc
das
push
push
fwait
adc
enter
arpl
mov
hlt
test
fbld
cld
sbb
mov
cld
sub
add
in
add
out
jae
lea
pop
xchg
dec
mov
push
inc
and
jecxz
mov
jno
xchg
and
pop
ja
or
popa
fnsave
inc
hlt
and
out
jae
fsubrl
std
movsl
subl
mov
lret
filds
xchg
pop
out
pop
mov
and
dec
popl
test
outsb
inc
cmp
push
mov
stc
fwait
lret
xor
lea
xchg
les
sbb
stc
lahf
adc
fldl
or
std
sub
xchg
sbb
jg
daa
jg
sti
add
push
scas
adc
add
adc
mov
fiaddl
and
movsb
std
out
xor
sbb
adc
xchg
and
roll
rcrb
inc
int
mov
mov
mov
lock
addb
adc
jl
ja
or
sahf
push
outsl
lea
mov
dec
push
scas
push
jle
push
stc
pop
cmp
and
push
cltd
dec
jge
jmp
arpl
out
xor
push
cltd
aam
aad
mov
pop
xchg
sub
insb
add
fisttps
cmp
lahf
mov
mov
aas
lds
or
push
mov
fcoms
cmpsb
xchg
or
mov
pop
cmp
hlt
or
fcmovb
popf
or
pop
pop
outsl
lods
sub
push
add
xor
lock
push
adc
fistpll
popa
cmpsb
sub
ret
xchg
inc
cli
shll
jns
sti
ret
lret
mov
jbe
cmp
sbb
stos
out
fcoms
cmp
andb
jecxz
data16
or
add
adcl
push
adc
mov
leave
jb
lds
xchg
mov
ja
imul
in
std
aas
sbb
hlt
fcmovb
js
cmp
jge
sub
icebp
sbb
mov
mov
lea
sbb
xchg
gs
pop
lods
repz
ret
out
cmpsl
sub
cmpsl
enter
enter
mov
lret
aaa
lods
popa
popf
pop
adc
add
sbb
lret
push
jg
xchg
mov
cmp
add
mov
cmp
les
lea
pop
add
xchg
loope
mov
sub
shrl
mov
inc
jns
mov
ljmp
xor
cmpb
and
dec
jp
mov
pushf
stos
inc
lods
pop
and
jne
outsl
pop
adc
cltd
in
push
insl
adcl
enter
mov
rorb
mov
jl
cltd
ds
xchg
pop
add
xchg
pushf
out
or
jno
and
je
mov
mov
ss
or
jle
mov
fiaddl
add
adc
popf
sub
xchg
jmp
push
sbb
add
pop
dec
pop
subb
or
adc
mov
sti
popf
jp
test
sub
ljmp
mov
leave
push
lods
arpl
sbb
xor
sarb
and
fs
mov
dec
add
iret
or
or
inc
xchg
sbb
sbb
shll
add
movsl
test
sbb
jp
aaa
mov
cmpb
mov
roll
push
push
stos
lds
xor
sarb
mov
push
mov
mov
pop
mov
loop
sbb
enter
or
jnp
cmp
movsl
dec
icebp
xchg
and
data16
mov
add
mov
fisubs
scas
mov
cmpsb
xor
cmp
cmp
fsubr
jnp
cmp
and
pop
mov
and
inc
inc
inc
data16
insl
cltd
dec
popa
test
mov
dec
sahf
bound
clc
xchg
add
inc
jbe
dec
out
in
loope
jge
inc
sbb
adc
xlat
push
add
mov
insb
dec
in
pusha
iret
sub
lret
std
pop
jg
and
ds
or
xor
stos
push
xchg
mov
loope
test
sbb
lods
mov
sbb
aad
xchg
pop
andl
sti
push
push
pop
enter
ja
ror
fstl
jo
xor
ret
inc
pop
repnz
lea
das
fcmovb
test
pop
or
fwait
cmpsb
test
xlat
xchg
int
in
in
mov
pop
pop
int3
nop
push
mov
mov
cmc
jnp
sbb
push
jmp
sti
imul
pop
sub
fsubrs
xor
push
arpl
adc
lret
notl
mov
jb
out
mov
ret
lock
stos
dec
and
mov
lahf
lods
fwait
clc
xlat
bound
leave
hlt
in
or
and
pop
je
xchg
lods
push
xchg
daa
xlat
cli
popa
mov
test
cmc
cmp
lock
stos
dec
mov
cmp
arpl
ljmp
dec
jns
dec
pop
xor
mov
cli
jne
das
mov
test
lock
dec
ja
mov
mov
stos
cmpb
xchg
or
xor
rcrb
xchg
out
push
cwtl
insb
das
pop
xchg
in
jno
pop
leave
cld
dec
aaa
jl
pop
fsubs
mov
stc
inc
ret
cmp
mov
test
test
mov
lods
inc
imul
cmpsl
fwait
enter
mov
xchg
mull
pop
and
inc
lock
dec
and
cs
jmp
scas
mov
mov
je
fisubrs
mov
inc
sbb
outsl
ljmp
mov
mov
pop
cld
cmp
xchg
inc
jp
aas
xor
cli
popa
mov
int3
fwait
pop
jl
push
xor
jno
shll
xlat
mov
pop
pop
xchg
cmp
push
xor
dec
es
hlt
sub
aam
mov
dec
cs
and
fsubl
in
daa
cld
add
out
push
rcll
push
je
lcall
fs
test
adc
clc
mov
jbe
addr16
iret
cmp
add
mov
jg
xor
mov
into
rclb
ret
jg
fstpt
cli
add
add
lea
xlat
xchg
add
bound
mov
pop
fwait
test
clc
mov
roll
mov
scas
jbe
cli
lea
cmp
add
sub
pop
sbb
add
mov
xlat
mov
and
loop
mov
pop
in
dec
sarb
pop
arpl
stos
cmp
pop
xor
jecxz
jmp
pop
in
lock
pop
std
cmc
sahf
subb
mov
adc
mov
mov
mov
jl
je
lods
xlat
stos
inc
vp4dpwssd
xchg
outsl
loop
pop
jmp
add
cwtl
sbb
mov
mov
sbb
nop
icebp
repz
into
xor
sbb
add
ret
addr16
mov
adc
test
decl
sub
push
xor
mov
or
push
mov
sbbl
fldt
lods
in
sbb
pop
mov
leave
push
jb
aad
insl
mov
rcr
add
stos
or
pop
mov
testb
inc
insl
subl
test
pop
mov
cli
mov
mov
pop
or
pop
mov
xchg
mov
mov
pop
fs
push
xchg
pop
mov
ffree
lret
mov
xchg
cmp
repz
push
or
lods
std
hlt
jb
subl
std
fstpt
mov
mov
or
add
mov
add
mov
mov
adc
out
cmp
xor
decl
fcoms
pop
movsl
push
adc
negb
xchg
testb
add
lahf
enter
inc
popa
push
jne
cmpsb
loop
mov
clc
aad
cld
hlt
sub
mov
fwait
xchg
mov
fidivs
sbb
testb
xchg
xor
rorb
sbb
jae
dec
arpl
incl
lods
sub
lds
sahf
cltd
andl
in
pop
icebp
add
dec
mov
pop
pminsw
fadds
fisttps
test
popa
test
mov
dec
inc
jne
daa
push
dec
xchg
add
xchg
test
iret
xchg
add
jns
imul
and
sbb
test
and
stos
test
mov
pusha
out
fmul
cmp
or
sarl
or
icebp
pusha
fldlg2
sub
int
jle
repnz
or
aad
or
stos
jg
stc
add
int3
cmpsb
fildl
fimull
testb
jg
sub
add
mov
push
add
pop
push
int3
inc
mov
sub
mov
mov
push
jp
add
rcrl
mov
sbb
push
dec
dec
sahf
lods
enter
test
bnd
cmc
sub
jne
gs
inc
and
das
mov
mov
push
cmp
xor
push
mov
mov
les
xor
icebp
push
pop
adc
or
mov
aad
ret
mov
fisubrl
mov
mov
cmp
sar
fcomps
lcall
rcll
leave
call
adc
dec
dec
pop
ret
push
aam
jl
dec
xchg
cs
mov
repz
hlt
jno
xchg
lea
call
out
and
inc
dec
mov
mov
cmp
pusha
fwait
adc
repnz
test
add
xor
dec
divl
jae
xor
inc
cmpsb
adc
fs
add
push
jge
popf
push
ja
add
js
stos
decl
loopne
mov
lret
cmp
cwtl
insb
test
pushf
adc
inc
repnz
in
test
clts
lds
cmpsb
loop
rcrl
cs
and
inc
adc
push
push
outsl
imul
data16
mov
fidivl
inc
stc
pusha
insl
xor
sub
mov
mov
add
shll
inc
sub
cmp
sub
adc
push
testb
mov
lret
shlb
inc
xor
pop
addr16
int
inc
push
repnz
cmp
sub
fldl
inc
shrl
dec
sub
fwait
push
or
icebp
push
dec
dec
ficoms
test
imul
mov
and
mov
xlat
jo
or
lock
sub
adc
inc
jbe
mov
ljmp
loopne
inc
shrl
pop
mov
int3
jmp
ja
push
inc
adc
mov
add
adc
outsl
stos
dec
ja
stc
adc
push
test
jl
iret
aaa
imul
negb
icebp
movsl
adcl
or
mov
dec
lret
mov
loope
cmp
fstl
push
xor
xchg
and
push
cli
add
adc
and
mov
cmpsb
adc
inc
push
test
rcl
xchg
mov
pushf
and
out
in
mov
cmp
cmp
loop
push
cmp
sti
dec
push
shl
jne
idivb
fisttpl
cmc
repnz
add
xchg
adc
adc
pop
in
mov
add
push
dec
xchg
jmp
ljmp
insb
mov
add
and
leave
fnstenv
mov
jecxz
fwait
movsl
mov
push
in
pop
sub
push
jg
dec
in
sahf
aaa
inc
rcll
addr16
mov
xchg
inc
daa
inc
mov
inc
popa
jo
clc
mov
jbe
or
test
sub
andb
div
or
fmulp
inc
aad
popf
lcall
pop
and
mov
call
sahf
mov
in
loop
in
imul
pop
mov
mov
push
adc
or
inc
adc
cltd
jge
add
mov
test
enter
mov
pop
in
mov
xor
push
inc
cmpsb
cmp
mov
mov
mov
out
rorl
sbb
daa
adc
and
int3
in
in
movsb
pop
scas
iret
xchg
xor
imul
xchg
and
lea
xor
push
jmp
loopne
sub
fnstenv
or
out
or
fidivrs
adc
cmp
cmp
loope
fidivrl
push
adc
aad
ret
xchg
add
mov
xchg
pop
out
push
xor
into
ficomps
jp
add
xchg
or
into
in
and
mov
jmp
fcompl
fwait
lahf
jmp
or
xchg
jb
gs
and
jno
les
test
popf
out
xchg
mov
mov
cmp
adc
fists
fistpll
add
xchg
ficoms
mov
dec
push
ficomps
out
dec
imul
pop
int3
call
shlb
xchg
icebp
ja
movsb
mov
cld
mov
sbb
call
mov
add
mov
sbb
xchg
cmp
xchg
cmc
pusha
xchg
pop
mov
pop
pop
gs
pop
pushf
and
neg
mull
xchg
fwait
stos
lahf
test
mov
insl
or
mov
in
cmpsb
addr16
jnp
jg
dec
test
push
pop
xor
in
arpl
push
repnz
das
popa
sbb
lock
xchg
mov
xlat
cmpsl
jbe
xor
lods
sbb
mov
sbb
mov
xor
dec
jmp
stos
cmpb
push
lcall
sbb
mov
pop
loopne
aas
test
lock
cltd
push
dec
push
jmp
pop
shrb
jle
loope
lea
insl
mov
ss
sahf
stc
test
xorl
xchg
pusha
test
mov
dec
mov
outsb
lret
push
dec
lds
je
lods
cs
lret
or
and
inc
ds
js
mov
mov
stos
lods
rcr
dec
leave
mov
push
sub
xchg
pop
push
jb
and
push
lret
out
push
cli
mov
jge
jb
test
cmp
mov
les
jmp
jecxz
adc
and
popa
adc
aas
movsl
xchg
pop
push
fmuls
lea
push
cmp
pusha
mov
dec
pop
push
cmp
inc
push
loope
mov
mul
add
add
loop
xor
push
imul
mov
popf
push
lds
cli
mov
dec
inc
cltd
dec
lock
es
loop
add
mov
cli
mov
test
sbb
dec
cltd
lods
xchg
std
jo
pop
int
mov
inc
add
xor
mov
dec
push
divb
jle
mov
call
bound
and
jl
sbb
scas
pop
add
dec
ret
shlb
sub
sub
cmpsb
icebp
fstpl
nop
and
fwait
inc
iret
mov
adc
cli
stos
mov
lret
inc
cmp
ljmpw
pop
loopne
inc
clc
addr16
jp
or
jo
pushf
mov
cltd
aad
test
or
scas
cs
adc
filds
mov
push
mov
aad
int
movsb
jl
dec
loopne
ss
insb
push
icebp
dec
pop
test
jo
int3
imul
mov
sub
push
push
sbb
repz
jl
inc
or
fistpll
jle
pop
pop
xchg
stos
mov
push
rorb
pop
lods
pop
mov
push
inc
add
dec
and
xorb
daa
add
mull
push
and
popa
adc
decb
inc
aas
shlb
movsl
fucom
scas
movsl
cmpl
sbb
mov
lock
add
jo
xchg
push
and
dec
jns
aam
xor
idivl
sbb
test
jp
shll
les
add
dec
add
into
mov
ret
hlt
push
lret
rorb
inc
dec
std
pop
test
add
or
js
push
das
push
or
mov
test
imul
lret
dec
aas
adc
test
ljmp
scas
dec
pushf
dec
imul
mov
or
stos
outsl
scas
push
in
ret
and
mov
push
add
orl
iretw
repnz
or
incl
pop
pop
push
adc
add
mov
pop
xor
sub
lret
xchg
int
xor
inc
mov
xchg
adc
mov
xchg
xlat
pusha
mov
lds
mov
or
lret
movl
fiadds
add
inc
jnp
jp
jge
mov
cmp
cmp
insb
pop
js
and
and
loopne
jno
aas
imul
ljmp
cmp
xor
stc
push
gs
jnp
push
mov
add
push
jg
pop
popf
inc
push
and
mov
loope
popa
push
inc
sub
subl
hlt
mov
cmp
pop
xor
mov
push
arpl
inc
insb
sub
repz
mov
inc
lods
in
push
dec
push
js
shll
stos
shll
sub
and
stos
jecxz
dec
xor
xchg
loopne
andb
out
out
or
add
test
inc
shll
daa
push
xor
cltd
fisubrs
mov
and
dec
divl
push
sbb
dec
xor
mov
sbb
test
daa
sahf
pop
ficomps
jp
or
out
jo
loopne
js
cmc
pop
inc
sti
rorl
push
jno
lods
pop
daa
sub
stos
ret
jp
adc
add
out
xor
stc
stc
inc
and
pop
arpl
test
mov
dec
push
xchg
push
lea
int
lret
mov
adc
dec
dec
mov
or
mov
sbb
ds
mov
push
jns
fwait
sub
mov
and
adc
cwtl
popa
ds
arpl
push
iret
lods
loop
test
mov
sbb
jmp
mov
jecxz
movb
sahf
in
mov
stos
cwtl
or
inc
adc
fimuls
xlat
cmp
jbe
test
das
aad
mov
mov
sbb
jp
sti
adc
xchg
mov
push
inc
jp
ljmp
cs
in
mov
outsl
xchg
jnp
pop
out
mov
pop
filds
in
lahf
out
out
push
xor
cmp
leave
push
dec
mov
dec
xchg
xlat
mov
es
fimuls
add
lds
sbb
inc
dec
in
das
jecxz
fs
or
mov
adc
enter
push
rcl
add
cltd
fildl
fisubrl
jnp
dec
inc
xor
int3
cmp
pop
popf
xchg
insb
or
adc
adcb
sarl
cmc
icebp
bound
push
shll
popa
jle
in
jmp
nop
mov
lcall
push
mov
xchg
cs
aaa
xchg
xchg
mov
sbb
add
mov
cs
add
jae
je
cltd
fimuls
andw
lds
test
xor
ss
push
cmp
xor
or
pushf
lds
pop
jb
fists
test
mov
outsl
push
jg
jne
adc
hlt
push
xor
or
mov
mov
scas
fs
negl
xchg
mov
insl
scas
inc
push
mov
push
xchg
jne
lcall
lret
or
sti
lahf
aad
xchg
pop
cmp
std
mov
pusha
sub
in
fnsave
repnz
dec
jne
dec
clc
lret
sub
and
xor
push
push
lret
mov
lock
out
sub
cmc
rcr
pop
mov
xor
cmpsl
repnz
jle
test
ror
mov
xor
imul
jmp
push
out
mov
xorb
xlat
lods
mov
inc
lcall
incb
inc
sub
icebp
cmp
jg
sbb
fisttpll
sti
push
push
xchg
xchg
mov
aaa
pusha
addl
pusha
xor
sti
out
imul
sub
add
xchg
stos
out
sahf
repnz
daa
mov
cld
ror
sbb
enter
push
sub
fmuls
cmpsl
sbb
add
cmp
jnp
inc
adc
andl
jae
cltd
mov
mov
jge
mov
cmpsb
insb
movsb
mov
mov
and
sbb
cmc
pop
aad
test
fisubl
jae
mov
adc
mov
mov
mov
xchg
xchg
hlt
pop
xchg
movsb
mov
mov
movsl
loope
dec
stos
int
int3
dec
mov
test
fdivrs
push
jne
rolb
add
out
add
lret
ror
insb
fildll
or
sbb
sbbl
int
lock
je
lret
add
xor
std
or
addb
int3
icebp
stos
cmpsb
insl
shlb
clc
pop
push
pop
or
xor
dec
je
inc
cmpsb
fs
mov
out
inc
sub
fs
lods
nop
test
sbb
mov
xlat
mov
inc
in
push
and
out
push
out
aas
pop
out
loopne
lock
or
pushf
popa
outsb
gs
and
aam
popa
push
or
je
test
sub
aad
andb
or
mull
sarb
jne
mov
xor
inc
adc
iret
sarl
jns
lret
lea
xor
bound
mov
mov
sbb
push
dec
xchg
dec
xchg
jne
pop
nop
rolb
push
dec
std
arpl
mov
add
or
lds
sbb
fsts
iret
fs
inc
lods
je
daa
pop
jns
mov
sar
xchg
push
pop
xchg
lcall
andb
out
jmp
dec
jle
adc
mov
imul
push
push
outsl
test
stc
xor
sub
sbb
add
jge
ljmp
sbb
mov
movsb
clc
mov
mov
mov
mov
xlat
sub
adc
pop
mov
or
ss
leave
clc
inc
mov
xchg
test
sub
cmp
scas
mov
out
and
inc
jge
or
mov
testb
inc
pop
jmp
test
mov
fistpll
cltd
pop
lret
es
jo
sub
das
or
daa
gs
fistps
jmp
imul
stos
sbb
pop
xlat
loope
fwait
sub
mov
xor
ljmp
cs
mov
push
cmp
vrcpss
push
out
mov
sahf
adc
mov
inc
icebp
pop
and
jmp
mov
fistl
inc
push
lret
setnp
es
int
idiv
cwtl
pushf
push
fnstenv
pop
arpl
mov
sub
mov
outsl
notl
push
jne
sub
push
mov
sbb
mov
rdpmc
hlt
cltd
js
sti
inc
sub
xchg
pop
nop
fsub
mov
add
sub
xchg
xchg
fdivrl
or
mov
add
lods
and
in
cmp
fadd
mov
daa
mov
push
mov
pop
push
adcb
fldl
pusha
inc
jnp
jg
ja
lods
jno
xchg
mov
push
mov
cltd
jnp,pn
add
push
inc
neg
stos
push
rcll
dec
andb
xor
outsb
fidivl
push
in
movsb
stos
movsb
mov
add
test
pop
enter
push
outsl
push
pop
mov
sahf
cld
cmp
test
loopne
test
stos
test
pop
sub
shr
jmp
jle
jmp
mov
cmc
or
incb
mov
lock
mov
rolb
lods
cmp
mov
sarl
cmp
icebp
shll
cmpsb
sbb
adc
imul
stos
aam
mov
and
mov
lret
in
rcl
pop
les
cmpsl
xchg
and
nop
pop
cmpsb
add
aaa
pop
pop
lea
lock
dec
lods
add
adc
sbb
mov
mov
push
test
rorl
xchg
inc
les
loopne
inc
enter
repz
mov
popf
inc
fs
pushw
dec
int
dec
jecxz
pop
andb
xor
lret
jns
jl
jns
jl
int
xor
push
scas
les
cli
jb
mov
adc
rcr
testb
or
int
pop
gs
mov
pusha
loopne
dec
mov
cmpsl
add
pop
xorl
xor
testb
loop
gs
pop
nop
mov
leave
push
push
inc
in
cli
dec
mov
fcmovb
push
rcrb
jae
popa
fiaddl
push
lea
aam
lods
push
cltd
aas
les
pop
hlt
pop
sbb
ffree
or
add
rorb
adc
xchg
jle
mov
push
add
in
ret
aad
out
cmp
fbstp
pop
call
xchg
es
leave
sar
or
rcrb
add
loop
lret
jae
pop
iret
mov
gs
or
mov
pop
and
pop
adc
test
gs
sti
addr16
pop
movsl
rcll
inc
pusha
data16
dec
mov
pop
arpl
ds
arpl
cmc
sub
add
jmp
dec
mov
rolb
sbb
rclb
es
or
je
fidivl
cmp
das
rcll
dec
jb
push
push
out
xchg
dec
mov
inc
mov
shrl
leave
mov
vunpckhps
aad
ret
push
aaa
stos
pop
cmpsb
roll
insb
shrl
icebp
movb
pop
or
add
lahf
or
cmp
arpl
lahf
or
adc
rcll
xchg
mov
pop
push
pop
jmp
xor
mov
inc
mov
aaa
mov
aaa
cmp
js
cmp
mov
addr16
jno
insl
insb
lret
mov
push
scas
ret
cli
sahf
push
mov
sbb
mov
aaa
scas
filds
stc
xor
jmp
ret
mov
or
shlb
xchg
push
cmc
or
shrl
stos
jo
xor
andl
into
jb
xorl
aad
ficompl
mov
lret
cmp
inc
popf
jp
push
aam
ljmp
lahf
and
cwtl
mul
fiaddl
jp
cmp
incb
test
andb
cmp
cmp
add
and
mov
push
outsl
pop
lock
jmp
push
jl
add
jmp
mov
int3
mov
inc
ret
inc
jns
adc
aam
stos
icebp
cmpsb
pop
dec
jmp
dec
dec
repnz
out
xlat
xor
lcall
into
inc
mov
stos
jmp
faddl
lock
cmp
fldcw
sub
outsb
push
mov
fsubr
sti
hlt
orl
popa
in
or
enter
inc
jge
lret
jbe
xor
sbb
push
das
pop
or
push
or
and
test
int
test
add
pop
fildll
out
inc
inc
lods
xchg
stos
lahf
ficompl
mov
sarb
mov
fildll
mov
jo
scas
adcb
sbb
and
in
sbb
inc
inc
sbb
leave
push
fadds
js
outsb
xchg
sub
aas
out
cwtl
push
push
mov
cli
sub
sbb
into
lahf
push
sbb
imul
je
test
push
movb
inc
mov
jmp
xchg
in
xor
std
roll
lods
scas
lret
loopne
mov
jo
fnstsw
xchg
cli
sbb
push
add
fisttpll
das
fnstenv
xor
jns
mov
popf
dec
push
push
scas
lods
cmp
dec
ljmp
in
mov
movsl
dec
inc
repnz
imul
bound
push
mov
lds
cmp
cmp
pop
loope
andl
aaa
outsb
icebp
insb
fs
cld
test
pop
xchg
push
enter
pushf
out
test
push
xchg
sub
out
and
stos
aaa
imul
push
ret
ds
fldl
xchg
je
mov
aam
test
and
ret
push
adc
xchg
mov
in
mov
outsb
es
inc
pop
lock
imul
out
mov
icebp
int
jnp
sbb
sub
bound
sahf
dec
dec
add
in
pop
add
jo
or
add
sti
lds
ss
push
jb
in
push
xchg
sarl
shll
imulb
mov
addr16
pop
das
popa
jg
psubsw
lcall
scas
sub
cmp
int3
ret
rcrl
mov
stos
in
add
or
jno
ljmp
jmp
in
cli
aad
mov
fstpl
jg
sub
mov
ret
arpl
add
cmpsb
adc
pop
adc
jp
hlt
jo
lahf
and
and
ss
push
push
clc
mov
jp
pusha
notl
xchg
fildll
test
es
nop
push
stc
pop
or
jmp
jbe
cmp
cmp
adc
roll
pop
out
and
cmp
jbe
cmc
xchg
loopne
or
xchg
pop
xor
ja
push
in
test
jo
aam
sti
sbb
loopne
sub
mov
mov
xchg
jno
jl
pop
cli
xchg
or
inc
ss
push
int3
xlat
fwait
xchg
cli
sarl
push
adc
dec
mov
dec
and
adc
adc
add
adc
outsb
call
cli
jbe
sbb
arpl
lods
inc
aas
mov
pop
dec
cwtl
mov
or
mov
add
xchg
sub
loop
mov
mov
sbb
or
jmp
mov
in
imul
data16
lcall
mov
test
rclb
aam
leave
pop
cmc
mov
push
xor
je
ds
fwait
repnz
mov
sub
push
pushf
popf
dec
push
or
cmp
dec
pop
test
push
mov
jg
sub
push
mov
jl
xchg
xlat
out
mov
pusha
rclb
divb
jg
test
fcompl
mov
pusha
sahf
stos
outsl
cmp
fstps
jg
pop
fisttps
mov
xchg
dec
and
out
sub
cli
mov
jmp
adc
sbb
mov
and
filds
jp
popf
jae
or
mov
mov
enter
cmpsl
lret
jl
jmp
pop
cmp
js
out
jo
aas
pop
mov
jle
ret
sbb
stc
test
pop
and
fisubrs
call
nop
sub
mov
jnp
or
movsb
or
cmp
dec
xor
mov
inc
clc
outsb
aad
adc
repz
cmp
inc
rorl
scas
roll
in
mov
incb
addl
push
pushf
add
aam
bound
dec
adc
das
sbb
insb
add
lret
inc
xor
cmp
ret
shrb
int3
mov
xchg
aaa
inc
xchg
inc
mov
xchg
dec
negb
dec
xchg
mov
enter
inc
and
and
aad
inc
xchg
stos
mov
das
jb
cmp
cmp
and
mov
loop
inc
bound
pop
popa
lods
insl
adc
mov
dec
inc
leave
jecxz
xchg
add
inc
sahf
rolb
sbb
inc
popa
in
push
std
dec
and
dec
xchg
out
adc
mov
mov
adc
xchg
pop
orb
and
or
jae
adc
out
cmp
xor
clc
neg
ljmp
pusha
ljmp
in
mov
imul
lods
xor
mov
stc
dec
cmp
andl
out
rcrl
out
xchg
movsb
dec
or
or
mov
scas
aad
dec
jmp
or
pop
cmp
stc
dec
jnp
xlat
push
xlat
inc
aad
pop
fidivrl
int
xlat
mov
sbb
in
pushf
fdivr
sbb
in
sub
and
mov
pop
test
ret
and
cmp
pusha
in
mov
sub
repnz
fs
repz
pop
ficoms
pushf
ja
js
adc
push
sti
or
or
dec
scas
jge
or
mov
stos
shlb
xlat
das
aam
xchg
xchg
inc
movsb
lock
xchg
or
inc
xor
loope
lea
fldl
frstor
sub
fisubs
inc
test
adc
jecxz
loopne
bound
sbb
sbb
mov
test
and
movsl
add
stc
inc
std
mov
mov
mov
mov
pop
lea
loopne
imul
mov
js
mov
inc
stc
loope
loop
mov
bound
cld
inc
rcrb
test
push
lcall
sbbl
in
lods
pand
sub
cmp
lret
xor
pop
adc
pop
mov
jne
mov
cmp
pop
loopne
push
fildll
repz
or
add
fcoms
stos
or
jmp
out
push
add
loop
rol
inc
push
jg
sub
repnz
xchg
scas
or
fisttpl
or
mov
outsl
lock
lds
dec
inc
jl
jno
daa
mov
mov
addb
dec
loope
out
push
ljmp
mov
cmc
pop
mov
in
call
jo
mov
mov
call
cmpsb
lock
out
xor
xorb
mov
ror
sub
push
or
insb
mov
sbb
lods
mov
jmp
gs
pusha
mov
dec
cmpb
je
data16
adc
mov
movsl
pop
pop
aas
and
fisttpll
fidivrs
push
daa
add
test
add
in
mov
std
push
shll
push
xchg
ja
push
rcrl
xchg
dec
xchg
pop
dec
shl
dec
std
add
pop
out
cld
xchg
maskmovq
imul
gs
sbb
mov
xor
fwait
push
imul
aam
and
adc
imul
cmp
enter
pop
pop
jbe
adc
nopl
jne
cld
xor
dec
jge
fcmovnu
out
jb
pusha
or
and
xor
cmp
fisttpll
insb
in
andl
jo
add
push
cwtl
dec
ret
mov
sbb
cmc
xchg
xchg
mov
cltd
das
xor
or
or
incl
dec
jno
adc
pop
and
push
repz
mov
adc
lds
push
or
cmpsl
xchg
pop
or
aas
mov
push
cmova
dec
scas
jge
imul
jbe
jl
fstl
push
ret
cmp
into
xchg
or
mov
xchg
jl
mov
push
mov
mov
repnz
repnz
inc
enter
loopne
bound
imul
ret
and
hlt
cmp
jnp
inc
loop
xchg
mov
xchg
jl
in
add
and
ljmp
cltd
les
fcoml
lods
cmpsb
sbb
xchg
mov
int3
sub
or
mov
jo
stos
cltd
loope
mov
cmp
fcompl
lret
rep
daa
loope
jns
and
mov
push
pop
shl
cmp
sbb
pop
sar
add
repz
push
js
cvtps2pd
movzbl
jne
xchg
push
cmp
add
xor
dec
or
ds
add
mov
xlat
mov
js
pop
mov
mov
jg
lret
lea
cmp
ror
dec
mov
clc
mov
fsubp
or
cmpsb
sub
mov
jb
sbb
stc
cmp
cmp
push
into
test
xchg
ja
and
push
pop
int3
cmp
xchg
pop
mov
pop
out
jp
adc
fidivs
cwtl
clc
call
stos
es
pop
push
hlt
adc
xor
adc
ret
sub
orb
shlb
out
in
sub
dec
push
cmc
jae
outsl
mov
inc
repz
enter
fdivrl
divb
mov
mov
jns
aad
fcomip
push
push
into
mov
sub
xor
pop
pop
cmp
inc
rcr
mov
out
hlt
fists
sbb
scas
aas
cmp
cli
shlb
mov
or
and
adc
or
cmp
xchg
lcall
pop
pop
xor
mov
mov
add
daa
jmp
mov
cmp
stos
pop
je
jle
jmp
push
push
repnz
mov
addl
mov
incb
inc
jno
rorl
pusha
xchg
mov
push
nop
daa
push
imul
cmp
in
adc
xchg
lods
mov
xchg
sub
mov
push
mov
mov
gs
sub
mov
jl
xor
jge
adc
roll
mov
aam
mov
jns
sub
and
inc
leave
lahf
gs
xchg
dec
dec
insb
stos
cli
pop
stc
push
enter
jne
lcall
xor
cmc
mov
cwtl
jp
js
mov
adc
hlt
loopne
shrl
mov
es
xchg
lret
mov
ds
adc
lret
stos
rolb
adc
jns
xchg
ds
out
mov
in
loopne
lods
fisttpll
cli
enter
dec
lcall
or
adcb
xchg
ljmp
icebp
mov
jnp
movl
xchg
xchg
pushf
je
push
push
xor
adc
imul
jo
xor
filds
test
jg
cmc
test
loop
and
les
repz
and
jo
rorb
jno
push
push
xlat
add
sbb
pop
popa
popl
popf
push
pop
xlat
inc
movsl
sbb
mov
cld
mov
add
sub
call
inc
push
xchg
jmp
imul
aam
inc
sbb
xchg
leave
sub
rcrl
ljmp
data16
mov
outsl
sarb
adc
or
addr16
fmull
ret
mov
mov
jmp
cmc
loop
shl
insb
mov
insb
adc
stos
push
adc
sub
jns
xor
jb
mov
xchg
mov
jmp
jns
or
xchg
xchg
lods
rclb
xchg
pop
adc
mov
mov
add
add
sub
test
jb
ss
loope
mov
sbb
ret
subb
add
push
push
out
das
sub
xor
xchg
into
inc
call
cmc
sbb
out
push
dec
mov
in
dec
std
add
insl
or
inc
sub
int
add
pavgw
or
les
jmp
dec
cs
aas
adc
xchg
mov
xor
aad
sbb
and
stc
mov
sub
call
punpckldq
out
dec
xchg
jo
sbb
adc
ret
jecxz
in
ss
and
popf
aas
xchg
mov
or
dec
or
mov
mov
dec
jle
mov
dec
mov
mov
inc
stos
inc
ret
repz
pop
push
sub
pop
xlat
lret
dec
adc
sub
cmc
sub
or
lods
inc
mov
decl
loop
xor
pop
popa
std
fisubrs
push
add
mov
stos
push
dec
mov
inc
scas
pop
cmpsl
jp
mov
jecxz
push
insb
mov
scas
jp
adc
jle
cmc
push
jle
sub
roll
aad
lea
test
out
stos
ljmp
adc
xchg
sahf
out
clc
mov
or
mov
inc
push
incl
cwtl
mov
sbb
test
mov
mov
or
cmpsb
sub
in
xchg
fmul
icebp
and
lock
insl
insl
sub
push
ss
dec
rolb
push
xor
insb
shll
cmp
push
enter
jno
cli
pmaxsw
out
push
sbb
mov
push
popf
xchg
jmp
neg
loope
push
out
inc
test
mov
jae
int3
jg
add
clc
in
sbb
notb
fwait
push
lods
dec
aas
add
lret
jl
add
mov
mov
push
sbb
andl
in
addb
popl
xor
or
pop
sti
frstor
mov
sbb
test
cmp
outsl
enter
clc
inc
jl
adc
repz
xor
test
mov
mov
scas
mov
aas
mov
in
scas
std
cmp
dec
adc
push
mov
cmp
jecxz
cwtl
cmp
fdivrp
cmp
test
leave
dec
add
push
imul
testl
ljmp
pop
mov
testl
cmp
sbb
leave
mov
mov
mov
xor
xor
mov
mov
add
shlb
in
daa
jne
jne
and
fimuls
in
fnstsw
daa
insb
dec
divb
cltd
push
dec
mov
pop
lahf
orb
fucomi
sbb
push
aam
inc
or
sub
out
clc
or
jo
test
pop
or
andb
push
jo
cmp
pop
jne
outsb
lds
sbb
fcmovb
lods
fsubrs
push
sbb
aaa
push
clc
adc
cld
daa
jp
mov
inc
sti
fcoml
xchg
test
mov
inc
fs
out
cltd
xor
and
arpl
jne
sbb
rcll
addr16
aas
in
out
nop
loopne
sub
fidivs
add
stc
inc
fwait
mov
inc
sub
jmp
xlat
scas
insl
push
xor
adc
mov
bound
addl
or
cwtl
or
pop
add
mov
js
call
leave
jmp
lea
push
mov
or
inc
pusha
mov
xor
movsl
or
push
in
cmp
es
mov
aas
stc
aas
jae
cmc
cmp
loopne
xor
and
fs
cmp
xor
sarb
sti
mov
repnz
inc
lods
pop
adc
lret
movsl
mov
arpl
mov
mov
cld
adc
addr16
push
add
test
gs
dec
mov
jl
ret
xchg
sbb
lock
fxch
roll
loop
jo
fwait
pop
mov
xchg
push
mov
sub
inc
jns
rcr
xor
cmpsl
push
loopne
sbb
je
and
das
loop
jb
and
arpl
push
sub
add
xchg
jnp
fs
add
mov
cmp
dec
sub
xlat
and
incb
xchg
xchg
scas
jg
pusha
jge
es
out
sbb
add
mov
inc
mov
outsl
xchg
lret
cwtl
iret
jl
push
bound
mov
arpl
or
int
mov
xor
les
sub
xor
inc
ret
iret
fmuls
loop
popa
arpl
xor
and
push
cmp
inc
mov
push
popf
dec
adc
imull
push
jo
aad
xchg
jg
les
movsl
pop
xchg
cltd
jmp
push
mov
mov
push
mov
rcr
in
ja
jnp
xchg
shlb
ja
imul
imul
scas
inc
push
mov
dec
inc
int
lods
fs
pop
fisubs
mov
clc
js
mov
insl
jg
xor
add
ss
ficomps
sub
cwtl
jne
cmc
jae
cmp
loope
sbb
push
cltd
jge
adc
sti
fdivl
xchg
dec
and
push
mov
lods
jp
xor
in
xor
data16
mov
cwtl
xchg
stos
lea
out
insb
pop
test
cmp
mov
lahf
or
inc
ja
sti
inc
mov
dec
xor
mov
adcl
dec
test
dec
xor
mov
cld
je
divl
xchg
dec
mov
and
mov
xor
jae
es
jb
adc
ret
adc
testb
adc
into
sbb
icebp
lret
or
jae
and
sbb
test
repnz
xor
xchg
cmpsl
fsubrs
mull
adc
fdivs
dec
add
lcall
or
mov
lods
jmp
inc
push
jae
or
xor
add
in
ret
pushf
pop
dec
xchg
or
sbb
mov
xor
lret
outsl
mov
or
cmp
push
lods
pusha
xor
lods
mov
stos
test
idiv
mov
arpl
push
sbb
data16
xor
cmp
cltd
outsb
push
imul
jmp
pushf
cwtl
push
in
out
je
testb
into
jae
adc
inc
mov
in
fdivp
xchg
aaa
dec
jne
repnz
mov
mov
xchg
sbb
mov
popf
mov
xlat
hlt
leave
add
cmp
jb
cmpsb
push
fbstp
add
lock
ljmp
xor
xor
lock
scas
aas
cltd
xchg
movsl
push
lcall
mov
add
enter
jno
pop
dec
jl
shlb
movsl
sbb
mov
push
xchg
jl
push
lahf
xor
dec
cmp
sub
sbb
adc
ret
mov
cmp
jmp
loop
ds
and
hlt
jmp
push
mov
sbb
and
inc
adc
cltd
or
adc
cmp
pop
frstpm(287
ret
inc
mov
iret
fcos
sub
icebp
scas
mov
das
dec
mov
scas
dec
mov
inc
xor
push
cltd
cli
call
inc
lods
fstps
mov
lods
xchg
dec
ficomps
icebp
out
pushf
lock
mov
shll
xor
mov
sub
add
pop
lea
jb
jb
nop
jl
std
out
sahf
das
push
mov
outsl
insl
jo
cld
xor
leave
inc
xlat
in
loopne
cmp
mov
call
jmp
lock
nop
call
int3
repz
ljmp
roll
rcrl
dec
lcall
sbb
in
orl
mov
dec
int3
sbb
push
adc
mov
test
lea
add
mov
push
dec
lcall
int3
dec
xchg
push
mov
sub
fneni(8087
mov
testb
dec
fadds
adc
mov
xchg
add
es
int3
in
lahf
mov
xchg
and
es
jno
test
out
les
or
sbb
push
xor
leave
add
vsubps
stos
aas
cmp
dec
or
lods
outsl
movsl
lret
aam
mov
inc
dec
shlb
rclb
pop
insl
or
scas
out
jge
dec
aas
insb
pop
ss
fs
mov
jno
sub
mov
insb
stos
dec
xchg
iret
sbb
jge
mov
cmc
aad
dec
add
aas
lock
push
enter
in
movsl
subps
in
stos
ds
or
sub
xor
push
push
mov
aas
mov
mov
jne
mov
sarb
out
arpl
pushf
xor
mov
inc
out
dec
and
xlat
jo
lcall
je
ficompl
shlb
mov
ficoml
cmpsl
xor
adc
das
lret
out
push
jge
ficoms
jno
push
ja
or
pusha
xchg
cmpps
lret
jp
clc
add
cltd
int
add
mov
cwtl
dec
dec
bound
sub
push
sub
decl
push
ret
pop
bound
js
xor
flds
stos
cli
ficompl
add
movsb
test
push
ss
mov
enter
mov
movsb
addb
cltd
enter
pop
and
imul
dec
in
sbb
inc
xor
in
push
lds
bound
aas
mov
sbb
je
xchg
cld
sahf
rol
cmp
shl
inc
and
loopne
rorb
jo
mov
fiaddl
and
inc
dec
paddw
add
icebp
pusha
insl
std
jnp
int
cmpsl
or
out
jne
dec
cmpsb
xor
and
adc
pusha
push
int
arpl
je
push
mov
and
pop
mov
inc
in
sub
daa
mov
ljmp
jg
jno
out
outsb
inc
cmp
sbbb
inc
fmuls
mull
sahf
enter
bound
les
mov
push
sub
out
cmc
shll
jno
mov
mov
hlt
sbb
cmp
jb
sbbl
pop
test
xor
push
and
incl
or
cmpsl
cmp
or
idivb
adc
insb
push
cltd
in
mov
dec
iret
adc
lea
xchg
push
mov
push
add
push
sti
pop
xchg
das
pushf
push
fcmovnb
out
mov
adc
int3
andl
aas
jl
add
stos
xor
sub
ja
xor
and
out
sbb
sbb
pop
cmpsb
xchg
xor
push
dec
sub
test
mov
call
into
test
cwtl
mov
xor
xlat
xchg
call
or
outsb
mov
loopne
cmp
add
imul
shrw
xchg
addl
pop
and
jmp
in
xor
outsb
aad
into
call
test
push
arpl
out
mov
dec
andb
push
xorb
jne
dec
incl
lahf
in
iret
inc
scas
nop
lds
cmp
cld
push
mov
cmp
xchg
icebp
inc
lods
aad
push
insb
repnz
iret
arpl
xlat
int
mov
fmuls
mov
lods
or
mov
icebp
pop
sub
xchg
mov
test
sarl
std
and
les
mov
mov
scas
mov
jge
mov
dec
push
add
push
loope
xor
decl
xchg
loop
adc
cmp
fsubrs
xor
je
pop
into
or
pop
lret
push
sbb
rol
add
sub
shl
enter
adc
xchg
cmpsb
daa
jne
test
rolb
into
and
ret
jmp
adc
insb
inc
loope
loop
adc
jmp
xor
ds
mov
dec
jnp
xor
pusha
lds
stos
push
adc
add
lret
sahf
insb
xlat
jo
mov
cmp
adc
pop
dec
out
mov
push
outsl
add
cmpsl
ljmp
int
repnz
or
jns
bound
push
jge
mov
adc
xor
nop
in
pop
cmovge
das
sbb
fnsave
pop
push
jnp
and
dec
pop
loop
sub
sar
loope
repnz
and
mov
and
fistpll
fwait
adc
sbbb
inc
mov
xor
or
inc
out
add
adc
push
fwait
pop
es
outsb
out
adcl
filds
mov
jge
adc
or
push
dec
mov
out
jnp
pop
xor
dec
mov
scas
inc
xchg
cmp
mov
out
jmp
les
addr16
cmp
ffreep
test
loopne
mov
and
and
nop
sub
and
scas
inc
mov
bound
jo
or
mov
and
xor
jle
repz
push
adc
add
mov
ret
add
insl
ljmp
shl
loope
popa
idivb
pop
lds
loope
mov
mov
enter
in
fs
add
mov
pop
ret
fldcw
xor
push
cli
adc
aam
data16
sti
adc
adc
mov
and
insl
mov
inc
pop
ss
inc
cltd
sub
mov
insb
loope
insl
inc
dec
adcl
leave
or
mov
cmpsb
repnz
pop
mov
outsl
mov
rcrw
sub
mov
movsl
jle
lock
fldenv
sti
dec
nop
je
rclb
sbb
xchg
cmpsw
js
dec
out
addr16
fwait
andl
jl
sti
aaa
and
and
imulb
in
movsb
add
inc
mov
sub
out
xchg
or
jmp
enter
ds
pop
cli
cmp
adc
iret
je
nop
filds
xchg
sub
std
sbb
and
ja
inc
popf
stos
xor
movsl
lods
mov
mov
sar
hlt
out
sub
aas
sub
in
dec
cld
aam
and
aad
loope
mov
dec
addr16
dec
pop
jmp
ja
icebp
scas
outsb
ret
sub
pop
outsl
mov
int
aaa
mov
xchg
aas
mov
inc
addr16
dec
xor
popl
push
and
jg
cli
adc
aas
insl
inc
sbb
jne
pop
pop
or
ja
pop
or
inc
hlt
sbbl
outsl
mov
inc
inc
movsl
add
adc
loope
push
ror
aam
mov
and
ficompl
xor
xor
ficompl
jno
imull
lret
sub
dec
aad
jge
mov
imul
mov
sbb
outsl
popl
adc
mov
shl
ret
insl
adc
xor
xor
inc
pop
and
adc
ja
jl
in
push
xorb
mul
xor
add
add
ss
loopne
xor
inc
leave
cmp
xor
lret
xor
mov
adcl
pusha
jnp
mov
ficomps
movsb
icebp
dec
push
out
jp
fbld
and
mov
adc
adc
sbb
or
out
bsf
mov
sub
popa
lcall
fcmovbe
and
xor
dec
out
enter
inc
inc
iret
mov
scas
insl
inc
mov
jp
jle
scas
leave
mov
mov
cltd
repz
leave
lods
les
inc
push
xchg
dec
rol
ljmp
xor
and
cmp
push
push
or
pop
addr16
xchg
jge
sub
and
scas
pop
sub
push
mov
push
or
out
jae
je
incb
add
out
mov
or
mov
mov
fsts
push
inc
cltd
iret
jge
ficomps
sbb
push
gs
push
push
cwtl
aas
popa
sarl
or
adc
add
jno
fcmovu
push
js
rcrb
mov
fstpl
lahf
data16
sbb
outsb
fwait
sbb
arpl
mov
ss
xor
sbbb
xchg
xor
insl
es
mov
mov
pop
daa
loope
sub
dec
xchg
aad
pop
mov
pop
push
mov
mov
mov
jle
add
pop
mov
cmp
mov
push
clc
mov
push
and
fisttpll
fcomip
ljmp
sbb
xchg
inc
hlt
sahf
bound
outsl
add
clc
push
add
in
push
cmp
rcl
cmc
xchg
inc
outsb
aas
jo
fsubr
push
cli
jb
gs
push
jg
cmpl
mov
jecxz
mov
jecxz
mov
scas
lret
shl
shll
movsl
shlb
xchg
dec
mov
xchg
in
add
test
lcall
or
out
dec
pop
push
pop
and
das
fmull
mov
add
lretw
cli
adc
cltd
fimuls
and
ret
xor
jo
adc
lahf
out
push
cld
push
xlat
sub
push
std
mov
aaa
or
mov
hlt
mov
out
push
aad
repz
lret
xor
jo
fldl
mov
ds
mov
cld
lret
dec
inc
mov
adc
mov
push
inc
add
rolb
jbe
cli
stos
popa
jb
cli
negb
add
jg
bound
jle
and
and
mov
and
mov
lock
lods
jae
cmpsl
data16
inc
adc
subl
dec
in
iret
lock
sti
xchg
pop
lret
pop
add
dec
jno
loop
pop
inc
divb
cltd
cmpb
push
jno
in
mov
inc
push
fcmovnbe
shll
mov
and
push
mov
and
test
fnstsw
jmp
mov
jnp
and
adc
imul
aam
sbb
inc
or
in
sub
mov
mov
or
shlb
andb
test
xchg
pop
push
mov
enter
fsts
pop
test
ss
je
mov
sbb
lahf
ja
std
sti
shrb
cmp
ljmp
mov
or
ljmp
inc
push
jb
jne
cwtl
ja
cmp
xor
je
mov
nop
mov
and
clc
aaa
inc
hlt
nop
xor
mov
jae
int3
push
or
cmc
sub
aaa
cmp
fisubrs
sbb
mov
outsb
fcmovu
cs
pop
xchg
divb
in
xchg
shr
jbe
xchg
js
dec
jno
enter
mov
push
ljmp
push
inc
jmp
test
sbb
jle
loope
hlt
inc
nop
jmp
mov
jg
shl
push
ret
mov
enter
pop
popf
in
xchg
test
mov
push
imul
sub
jb
insb
jo
in
add
jne
push
idivl
add
adc
sti
lahf
xchg
clc
ljmp
sbbl
mov
mov
aad
dec
xlat
jp
subb
push
stos
sub
push
cli
outsb
divl
or
sbb
repz
div
jb
pushf
mov
push
push
lahf
ret
in
bound
fs
push
mov
xorl
je
imul
ret
addr16
out
stos
add
mov
shlb
lds
add
mov
jecxz
mov
fwait
dec
push
mov
cmpsb
int
push
mov
daa
adc
out
std
and
push
add
adc
sbb
fistl
push
pop
inc
jle
xor
imul
inc
stos
pop
push
push
push
dec
dec
cmp
dec
in
mov
cmp
outsl
rcrl
mov
xor
mov
cltd
jbe
lahf
paddsb
jl
hlt
repnz
jl
xorl
ss
xorl
aaa
rcrb
imulb
stc
mov
pop
imull
cld
adc
int
jge
lcall
aaa
push
sub
lahf
cmp
jl
jg
es
xlat
fwait
popa
daa
imul
ljmp
lea
aas
pop
fnstenv
adc
not
es
loope
jmp
stos
inc
pop
jo
sub
jp
aad
jns
mov
stos
fadds
fcmovnbe
inc
imul
aas
xor
sbb
ret
cwtl
push
out
jecxz
lds
pop
js
movsb
fwait
add
scas
xchg
cmpsb
movsb
xchg
cmp
mov
xchg
out
xor
leave
int3
jmp
mov
sub
sti
mov
lcall
shrb
rorl
jge
insl
adc
mov
add
push
xchg
roll
jmp
cmc
test
ja
xchg
mov
sbb
addr16
cmp
sbb
sub
jecxz
push
mov
adc
dec
jg
popa
js
pop
sbb
sbb
in
pusha
in
cmc
ret
lods
pop
bound
ret
add
push
mov
push
mov
pop
inc
rclb
icebp
mov
push
jl
neg
les
and
mov
cmp
mov
ljmp
into
popf
sbb
ljmp
or
outsb
ds
sbb
insl
repz
pop
fs
mov
jge
mov
sbb
inc
mov
icebp
sbb
cmc
dec
jnp
dec
flds
lahf
sub
mov
cmp
sti
cmp
push
in
mov
pop
js
ret
fcomps
out
es
sub
sub
imul
mulps
xchg
jae
or
call
bound
out
ljmp
cmp
daa
faddl
shrl
loopne
cmp
rol
cmpsb
jbe
cltd
pop
mov
outsb
fisubrl
test
ja
sub
ret
incb
pop
les
int3
or
xchg
xchg
popa
mov
xchg
repnz
mov
cwtl
mov
dec
idivl
and
lds
inc
jle
les
cltd
mov
mov
std
adc
fcoms
jl
mov
std
lahf
mov
mov
dec
mov
int
add
xchg
xlat
push
ret
xchg
or
xchg
aaa
xor
xchg
mov
sbb
dec
outsl
mov
sbb
xor
cmpsl
shl
xorb
out
fstl
jno
adc
cli
and
hlt
cmp
inc
fwait
push
inc
test
jecxz
test
addr16
fldl
cli
inc
xor
cmc
push
push
and
test
or
lock
pusha
mov
mov
mov
popf
icebp
inc
aam
cli
pop
xchg
stc
es
out
popa
or
nop
push
jmp
test
sub
jl
insb
and
bound
mov
js
sti
dec
cmp
repz
insl
leave
in
xchg
dec
std
push
sbb
enter
pop
add
cltd
sub
pop
adcl
jns
jns
inc
mov
loope
outsb
hlt
xor
xor
lods
mov
and
sub
aaa
fs
mov
sbb
mov
arpl
add
test
cld
pop
cmp
aam
dec
mov
test
dec
popf
pcmpgtb
jo
cmpsb
mov
mov
inc
push
stc
mov
scas
rcrb
mov
xchg
in
add
add
lock
movaps
mulb
gs
repz
stos
xor
and
jecxz
dec
outsb
push
repz
jo
mov
jl
push
sti
sti
inc
mov
lcall
xchg
or
mov
clc
or
pop
adc
sub
cmp
movsl
sbb
push
push
es
xchg
sbb
sbbl
xor
or
loop
imul
sbb
out
cwtl
mov
mov
test
aas
loopne
mov
jmp
jo
push
repnz
out
aad
mov
rcll
push
in
mov
out
clc
lods
out
fcom
or
repnz
lods
shr
and
mov
jg
lods
or
subb
xchg
arpl
push
out
mov
mov
outsb
cmpsb
cmp
ret
pop
mov
push
lock
fwait
jns
mov
fisttpll
clc
inc
sahf
mov
rcr
mov
outsl
sub
in
ja
sahf
sbb
lds
nop
fadds
jecxz
out
loop
aas
push
jb
leave
fldcw
dec
ud1
inc
mov
mov
in
mov
adc
aaa
and
cmpl
fstpt
mov
and
jle
add
cmp
iret
in
mov
jne
fdivp
repnz
sub
push
add
adc
push
push
jns
std
insl
mov
lds
fsub
imul
imul
jnp
or
jnp
aas
lds
push
and
sbb
lahf
sub
pop
pop
lcall
jne
inc
adc
ljmp
sbb
jle
leave
mov
scas
dec
mov
incb
inc
mov
dec
outsl
cwtl
pop
mov
push
lds
sbb
push
or
test
mov
cs
jb
xchg
test
repnz
push
mov
mov
sub
int3
shll
stos
inc
adc
scas
repnz
outsl
push
scas
es
inc
mov
pushf
pop
mov
sub
sar
sub
shrl
into
outsb
popa
jae
pxor
cmp
lret
inc
outsb
out
dec
imul
adc
pop
xor
icebp
adc
inc
mov
outsl
xchg
hlt
rorl
push
rcl
mov
shll
testb
mov
in
stos
ljmp
gs
push
fs
in
negl
cmp
sub
mov
aam
pop
out
jmp
ljmp
imul
push
xchg
hlt
dec
pushf
mov
sbb
mov
mov
jno
adc
icebp
mov
lods
pop
decl
sub
imul
fisubrl
jge
dec
call
inc
sub
pop
mov
fbstp
pop
mov
push
inc
jmp
in
insb
ljmp
mov
mov
cld
push
dec
aaa
pop
cwtl
addr16
cli
aam
pop
lock
mov
or
call
mov
js
movsl
jmp
mov
lods
sbbb
and
lods
sbb
outsl
push
push
or
pushf
mov
sub
jnp
mov
cmp
daa
mov
mov
mov
mov
ljmp
pop
jne
rcll
lahf
add
jge
idivl
mov
aaa
fmuls
insl
cmc
fsubs
mov
arpl
jmp
int3
sbb
xchg
lods
imul
shrl
jp
or
call
xor
arpl
shrl
sbb
test
cwtl
or
ret
cwtl
xor
movsb
js
in
push
dec
or
leave
cmpsb
scas
cmp
jmp
stos
decb
fwait
leave
enter
int3
sbb
mov
mov
mov
jns
push
adc
push
arpl
dec
pop
rorb
scas
xor
cmp
popa
aaa
bound
sub
int
sarb
and
xor
rcl
mov
mov
scas
in
xchg
js
sub
pop
cs
and
jp
ja
dec
int
mov
cmpsl
out
sbb
aad
jbe
and
push
ds
fcoml
loop
xchg
test
push
stos
aaa
outsb
les
xor
mov
loopne
inc
outsb
cmpsb
cwtl
testl
push
jne
arpl
pop
lods
sub
xchg
imul
pop
shl
icebp
testl
in
loop
sbb
add
cmp
rcr
add
loopne
in
mov
mov
test
and
in
scas
xor
mov
fdivl
adc
sarl
or
mov
inc
lret
out
mov
sub
neg
add
insl
aas
sub
push
imul
mov
cli
dec
push
add
push
inc
andb
xchg
in
aad
mov
sub
addb
iret
clc
sub
xlat
cmc
rcrb
or
push
mov
cltd
scas
mov
adc
hlt
mov
jecxz
mov
xchg
and
inc
and
fidivrs
clc
mov
iret
lcall
pusha
bound
out
sbb
mov
xchg
cmp
insb
mov
adcl
dec
arpl
xchg
jp
shrl
std
push
pop
cmpl
cmp
xorb
adc
test
cmpl
sub
jmp
jo
push
xor
aaa
cmp
pop
mov
dec
pop
pop
lods
lods
sub
mov
xchg
jp
xchg
rorl
popa
inc
scas
sub
push
adc
cmpsl
mov
in
jp
pop
and
std
mov
pop
ret
add
fst
sbb
icebp
int
and
scas
mov
push
test
icebp
arpl
mov
xor
or
jmp
sub
add
rcrb
or
jp,pn
jle,pn
dec
pop
rcrl
ds
xor
pop
mov
sub
xorb
cmp
clc
lods
ljmp
gs
shrd
lods
mov
cmp
fnstcw
lds
jo
or
imul
stos
hlt
cmpsl
repnz
je
push
push
cmp
roll
fwait
push
scas
lcall
sbb
inc
loope
iret
dec
add
bound
pop
dec
int3
mov
jmp
inc
mov
aaa
lods
xorb
aaa
mov
push
movsb
mov
rorl
popf
dec
jnp
jp
cmpsb
jb
jp
push
and
xchg
stos
add
nop
push
cs
call
cs
dec
loope
and
sub
loopne
pop
jbe
ljmp
jbe
jle
enter
or
mov
and
pop
dec
dec
mov
sub
call
ljmp
ds
jbe
je
adc
xchg
aas
out
in
test
popf
fnstcw
inc
pop
mov
add
ror
xchg
inc
daa
stos
popf
lret
inc
repz
and
arpl
lcall
jb
mov
ljmp
xchg
cld
scas
adc
cmp
es
push
adc
pushf
inc
arpl
test
mov
jae
std
bound
daa
xor
pop
and
ljmp
int
and
loopne
jo
stc
mov
dec
xor
lret
aam
mov
lods
das
and
xor
mov
loopw
cld
add
ret
push
push
cld
mov
dec
das
addr16
mov
pop
inc
cwtl
jl
sbb
pop
or
dec
sub
decb
mov
lcall
push
push
sbb
inc
and
cltd
scas
lahf
dec
inc
jecxz
mov
and
mov
push
sti
cmpl
jle
call
mov
push
xchg
mov
add
or
aam
mov
mov
fsubr
push
das
mov
push
sub
xlat
xchg
roll
jo
ret
sbb
and
fdivrl
xor
imul
push
mov
out
out
xchg
xchg
push
mov
xchg
dec
mov
movsb
xchg
jbe
mov
fs
das
iret
push
aam
rorb
cli
xchg
add
xchg
movsl
hlt
test
fcompl
cmp
adc
in
inc
mov
adc
mov
aaa
pushf
cli
inc
mov
sahf
mull
lods
cld
push
push
sahf
lahf
stos
sbb
stos
jle
mov
dec
and
aas
std
into
xchg
out
push
adc
push
leave
or
xor
jg
inc
sbb
dec
adc
xchg
daa
std
lods
jmp
mov
mov
lahf
adc
cmpsl
jp
xor
and
loope
popa
fcoms
lea
repz
push
dec
sub
cmp
inc
fcmovu
xchg
ficoms
dec
sbb
push
mov
repnz
mov
mov
rclb
push
jne
or
pop
jecxz
or
insb
inc
cli
in
or
cmpsl
movsb
je
adc
imul
outsl
enter
add
mov
stos
sbb
rolb
call
jnp
xor
arpl
sti
dec
ljmp
pop
fisubrl
sbb
stc
ret
xchg
adcl
pop
inc
fistpll
jmp
sub
imul
fnsave
mov
jp
mov
mov
rcl
fiadds
and
jl
int
lret
add
lods
pop
push
enter
mov
rclb
std
and
xchg
or
mov
fisubrl
lret
movsb
lods
xchg
add
dec
ficoml
add
add
mov
iret
divb
xor
mov
xchg
jbe
sub
adc
fmull
push
out
out
and
add
jge
mov
inc
jnp
cs
loop
arpl
stos
cwtl
repz
jb
jne
mov
lods
adc
jp
std
xchg
pop
cvtps2pi
mov
pop
cwtl
add
mov
out
pushf
in
imul
xor
insl
sbbl
lods
xor
sahf
add
inc
push
mov
dec
inc
fistl
aad
insb
push
or
cmp
in
sarl
test
mov
cmc
test
jp
je
mov
test
lods
push
or
xor
sahf
out
mov
test
popa
or
inc
pop
stos
mov
add
mov
shlb
xor
das
jne
add
jbe
les
ret
lods
loopne
in
scas
dec
shrb
and
push
fisubrs
fisubl
push
xchg
dec
inc
lahf
mov
incb
mov
mov
cmpsb
idivl
adc
je
adc
ret
sub
or
jp
xchg
test
dec
push
xchg
ficoms
sub
lret
adc
jmp
inc
cmp
cmc
test
adc
sub
sbb
pop
dec
jnp
scas
ljmp
xchg
cmp
xor
and
jns
pop
test
jno
inc
lds
dec
inc
or
add
add
bound
lods
xchg
xorl
or
push
jbe
rorl
dec
bound
lds
mov
lcall
xor
dec
loopne
icebp
pop
popa
cmp
fisttpll
inc
loopw
test
sbb
rcll
clc
mov
and
loopne
xchg
or
test
mov
mov
negl
or
push
mov
paddusw
and
aas
sbb
sub
cmp
cmp
shrb
lret
sbb
cltd
push
jg
out
out
add
in
xchg
mov
nop
rorl
je
xchg
mov
popa
adc
xor
and
gs
movsb
mov
lods
cmp
cmp
roll
inc
test
cmpsb
nop
in
pop
mov
js
sub
xchg
roll
adc
sbb
rorl
mov
gs
dec
shrb
mov
mov
jae
fcomi
insb
mov
hlt
lods
add
sub
imul
test
mov
inc
add
sub
int
movsl
out
js
mov
jmp
sbb
inc
fnsave
data16
mov
and
and
cmp
adc
sahf
outsl
movsb
xor
js
addl
movntps
cli
push
jmp
inc
scas
sti
mov
mov
fdivr
xchg
jno
lea
test
insl
jnp
push
fs
cmp
pop
jbe
outsb
in
sbb
dec
cmp
adc
add
inc
icebp
popa
push
adc
adcb
jge
cltd
cmp
jns
flds
mov
push
fidivs
dec
xlat
mov
and
and
rorb
aaa
xchg
cwtl
stc
pop
push
add
pop
int
pop
mov
out
data16
or
test
test
lods
xlat
out
rcl
loopne
pop
and
les
sub
stos
in
lcall
clc
loope
push
mov
fwait
push
dec
pop
cwtl
fcoms
add
shr
pusha
int3
pusha
aam
lods
es
mov
ret
popa
pop
cmp
scas
inc
adc
fimull
imul
jmp
test
inc
rorl
jp
dec
es
xchg
out
or
jno
orb
add
inc
pop
out
movsb
jns
movsb
mov
hlt
and
test
cmp
ret
cli
and
add
testl
fldt
pusha
test
std
les
aad
lahf
movsb
scas
jmp
out
xchg
add
mov
pop
push
mov
xor
xchg
fnstcw
sti
iret
push
popa
mov
cmp
ret
push
cld
fisttpll
std
mov
sub
incb
imul
imul
or
inc
jl
jle
fisttps
jge
inc
repnz
mov
cli
mov
cmc
xchg
into
fidivrl
shl
repz
xchg
clc
aam
mov
or
mov
ret
jge
aaa
pop
adc
inc
and
push
and
sub
cmpsl
push
mov
jae
popf
or
jne
lock
mov
jl
mov
into
pop
mov
test
jg
jbe
dec
mov
dec
bound
out
insb
xchg
out
daa
dec
inc
inc
jmp
cs
int3
js
xchg
loope
sbb
mov
push
sub
mov
adcl
out
mov
pop
cmc
loopne
and
pop
adc
fs
jno
gs
pop
push
jmp
pop
repz
fldt
in
mov
popa
adc
adc
pop
push
test
sub
sbb
cvtpi2ps
lds
mov
cmp
or
fisubrl
pop
test
das
xchg
test
mov
das
and
sub
push
cmpsl
in
loopne
pop
mov
and
or
pushf
cmpsl
mov
xchg
hlt
inc
stc
mov
in
jne
iret
nop
inc
xchg
shl
daa
pop
mov
scas
push
pop
cmp
xor
mov
repz
and
imul
jo
dec
sysret
int3
xor
negb
aas
sbb
stc
std
jg
scas
and
aad
mov
shlb
jg
les
sti
add
loopne
les
mov
cmc
cmp
fmull
fbld
xor
jge
das
imul
jb
cmp
mov
cmp
jmp
inc
lahf
subb
aaa
xchg
sub
int3
jns
sbb
mov
bound
daa
ljmp
and
add
inc
pop
mov
pop
call
inc
and
push
xor
out
ds
mov
mul
xchg
mov
lret
xor
xor
loop
psubsw
test
cld
out
dec
sti
jecxz
stos
push
lahf
add
lea
or
pushf
test
int3
xor
das
test
push
fwait
push
pop
clc
scas
mov
pop
jp
lods
call
imul
or
arpl
push
stos
jmp
scas
mov
jbe
sbb
mov
insb
aam
adc
cld
aam
sarb
mov
aaa
pop
and
dec
xchg
bound
ljmp
ljmp
aaa
ret
stc
or
repz
sub
and
cmpsb
mov
add
pop
sub
adc
dec
inc
sub
pop
adc
push
dec
mov
sar
js
imulb
and
lds
cmp
pop
aam
ss
int3
push
xchg
out
std
cld
cmp
movsb
mov
or
pop
test
aas
subl
and
pop
cli
jmp
push
push
mov
jecxz
pop
dec
ds
add
enter
mov
mov
std
loopne
xor
or
jmp
enter
adc
inc
leave
and
inc
mov
dec
in
fdivr
mov
mov
fistps
mov
xor
clc
cmp
and
pop
neg
in
divl
loopne
pop
gs
jb
pop
adc
jbe
inc
jl
loope
inc
mov
xchg
mov
ret
scas
mov
jmp
cmp
and
adc
push
lcall
push
icebp
and
pop
mov
lods
push
enter
inc
add
sti
dec
scas
mov
lds
gs
jo
jg
cmpb
ret
mov
mov
mov
pop
pop
cltd
cmpsb
inc
sahf
fbstp
jb
add
ret
xor
test
xchg
xor
in
js
clc
pop
pusha
and
rorb
sbb
push
es
mov
jge
and
mov
scas
pop
pop
push
inc
out
add
aas
sub
and
cmpsl
adc
pop
adc
push
fwait
add
and
mov
mov
lods
insb
fists
lahf
fisubl
imul
stos
ret
mov
mov
sub
jp
ss
ss
fcomi
fdiv
cmp
fcoml
and
fiaddl
pop
sahf
adc
mov
jmp
cltd
rcrl
fistpll
in
adc
push
enter
cmpsb
aas
mov
sub
das
lea
dec
mov
lds
sub
sbb
jge
test
in
arpl
ds
push
ret
mov
jbe
lods
cmpsb
icebp
orb
jnp
or
pop
fdivrp
je
mov
sbb
and
dec
xchg
ds
ja
dec
ret
pop
and
movsl
orl
jp
movsb
cltd
cwtl
ret
iret
cmc
lea
fmull
xchg
cmp
aam
fcoml
popa
jle
cmp
loope
cmpsb
ror
xchg
and
scas
les
mov
pop
jle
cmc
ret
mov
mov
aam
hlt
jmp
enter
int3
rorl
jge
mov
mov
xor
push
mov
rcr
mov
push
mov
gs
xchg
icebp
ljmp
xchg
stos
mov
mov
xchg
jecxz
jns
add
mov
xor
sbbb
inc
mov
dec
jle
imulb
icebp
out
repz
mov
mov
jb
stos
adc
fcmovnb
popf
ret
inc
adc
repnz
aad
adc
sbb
xchg
jno
ds
cld
xor
rcrl
inc
aad
adc
add
dec
aas
ss
dec
cld
inc
enter
enter
cld
adc
add
mov
stos
dec
sbb
lock
into
xchg
jmp
push
dec
pop
pop
and
es
leave
mov
insb
pop
xchg
xor
cmc
mov
imul
push
lock
xchg
xchg
negl
add
push
or
sub
add
je
mov
xor
sti
or
imul
loope
mov
addr16
mov
push
dec
xor
xlat
cmpsl
lahf
push
mov
cmpb
mov
and
jecxz
add
or
in
fdivs
popa
add
xchg
mov
iret
into
cmp
push
push
mov
mov
jno
pop
subl
push
mov
cld
jne
roll
pop
mov
jge
push
mov
sbb
sub
out
sub
daa
popf
push
cld
lahf
fisttps
mov
loopne
cmpb
xchg
stos
add
test
and
sahf
aad
mov
mov
sub
sub
mov
inc
adc
cmp
xlat
adc
push
inc
mov
andb
fistl
scas
je
pusha
inc
std
ss
shll
or
dec
pop
lcall
mov
or
idivb
pop
out
arpl
call
cmp
mov
inc
popf
sbb
in
loope
in
in
lcall
mov
xlat
mov
mov
sarb
or
ret
push
jns
dec
fdivl
sbb
out
push
cmp
fdivrl
out
jno,pn
add
les
add
or
mov
fxch
or
xlat
sbb
dec
mov
je
int3
adc
sbb
dec
sub
pushf
mov
inc
or
mov
ss
call
mov
clc
mov
aam
fisubrl
sbb
and
cmpsb
mov
daa
pop
fwait
stc
xchg
std
decb
xchg
lret
sti
stc
dec
jno
add
mov
adc
test
push
fisubs
jno
xchg
xor
ds
bound
pusha
cltd
scas
in
push
add
repnz
cli
push
xlat
cltd
test
mov
cltd
cmp
mov
fistl
mov
mov
ret
push
int
js
bound
rorb
sub
xorl
movsl
or
mov
mov
mov
push
nop
es
pop
jae
pusha
into
out
and
test
stos
mov
ds
nop
pop
icebp
popa
or
clc
fisttpll
cmpsb
leave
pop
mov
mov
or
lcall
push
dec
iret
or
sbb
lret
mov
lods
in
loope
daa
adc
push
xchg
inc
pop
push
mov
adc
aad
xor
and
xor
lahf
and
ss
xchg
add
add
adc
in
arpl
add
loop
adcb
les
mov
fmul
push
movsb
es
mov
mov
stos
popf
dec
popf
sbb
stos
push
jl
je
pop
loopne
push
xor
push
hlt
cwtl
jno
aas
les
das
pop
and
pop
js
or
push
aaa
sbb
jg
int3
aaa
xor
sbb
enter
rcrb
pop
add
push
mov
pushf
sbb
rolb
into
aas
adc
adc
push
mov
sbb
xor
add
imul
cmc
fisttps
cmp
dec
push
lret
rorb
xchg
scas
mov
jl
icebp
jl
adc
daa
sbb
xlat
cmc
sub
lds
notl
fmulp
rorb
xchg
push
lods
inc
hlt
enter
jb
xchg
pop
xchg
fs
shrl
ss
inc
ficoml
sti
xor
insb
test
jae
and
xor
jnp
int3
push
push
adcl
xchg
test
jmp
sbb
ss
leave
andb
push
pop
cmp
cltd
dec
insb
addr16
fbstp
inc
lret
inc
jo
and
mov
flds
jmp
leave
sub
push
test
pushl
fyl2x
mov
ljmp
cmp
mov
sub
inc
mov
pushl
add
mov
lcall
mov
scas
push
sbb
xchg
cmpsb
mov
xchg
lcall
imul
addl
pop
jle
adc
mov
pop
les
adc
sub
movsb
in
daa
shl
aas
ja
call
and
xchg
subl
sub
cli
mov
stos
sub
pop
faddl
ja
and
mov
jb
call
push
jns
and
and
push
loop
lea
cld
sar
sub
inc
push
mov
xor
mov
mov
pushf
or
jmp
je
add
iret
loope
add
mov
push
cmp
add
orl
and
movsl
stos
leave
ss
imul
dec
mov
add
das
pusha
xchg
mov
jg
jae
lds
push
adc
repnz
out
cli
lods
fnsave
dec
mov
lahf
jno
cmpsb
xchg
push
rorb
ret
lcall
es
cmp
push
push
mov
sub
jae
loop
and
inc
daa
insl
push
mov
das
xchg
mov
popa
xchg
jmp
xchg
jns
pop
mov
jns
and
shrl
ljmp
jo
enter
outsb
and
addr16
outsb
lret
sub
or
loopne
popf
jae
sbb
pop
and
stos
jecxz
gs
bnd
lods
out
mov
mov
and
jno
adcb
call
or
popa
inc
cs
rcr
push
out
iret
nop
mov
push
test
iret
push
out
and
dec
stc
xlat
fdiv
movsl
mov
test
std
js
jle
in
add
push
mov
adc
xchg
out
add
xor
or
test
add
fdivs
std
push
popf
lcall
arpl
scas
xor
stos
xchg
xlat
ror
fdivrs
hlt
in
xchg
imul
imul
mov
push
adc
inc
cmpsl
outsb
stc
xchg
xor
add
push
sahf
mov
leave
pop
add
push
das
inc
pop
mov
inc
std
stc
setns
es
inc
jne
lret
pusha
insb
cmp
and
pop
inc
dec
jecxz
jge
push
or
xchg
or
sbb
aas
mov
mov
mov
fidivrl
push
sub
xchg
inc
mov
js
into
int3
movsl
imul
lahf
out
or
movsb
sub
ss
loopne
mov
cmp
in
scas
or
in
jge
add
mov
and
cmpsl
mov
out
insl
pop
lods
fists
cmp
sbb
out
push
jb
mov
xor
stc
les
arpl
test
fnstcw
push
cmp
jo
jne
sbb
mov
lock
jno
dec
lock
adc
pusha
ss
popf
push
ficompl
jno
and
imul
movl
pop
and
xor
inc
shlb
int
test
fdivr
add
fistpl
lods
inc
push
fcmovnu
test
loopne
jne
sub
add
mov
add
in
xchg
mov
mov
data16
dec
iret
jmp
and
sbb
repz
cmp
fstl
push
adc
out
adc
or
inc
rorb
test
inc
sahf
adc
fs
lret
jnp
push
xchg
jns
jle
mov
or
push
cli
inc
orb
fsubrs
or
jne
xor
push
stos
mov
shll
sub
cmp
jp
roll
add
cwtl
cmpl
mov
mov
leave
stc
btr
iret
enter
xor
lock
mov
int
mov
scas
inc
sysret
mov
mov
loopne
adc
push
jmp
decl
sub
ret
jg
addb
sub
nop
shlb
mov
cmp
idivb
test
mov
sbb
dec
imul
test
out
jo
add
repz
and
add
je
in
sub
inc
fisubl
insl
add
push
stos
insl
mov
nop
push
aas
pop
fidivs
pusha
and
or
inc
xchg
ror
into
mov
rcll
gs
xchg
lods
adc
pop
loopne
iret
adc
popa
mov
cmp
dec
arpl
les
xchg
xchg
stc
push
cltd
test
fwait
mov
int3
mov
sub
clc
add
in
cltd
aam
push
jl
lahf
or
mov
mov
sub
mov
inc
test
hlt
mov
dec
pop
test
fcoms
pop
pop
push
aad
or
cmp
adc
les
fisubrl
aaa
mov
arpl
xchg
lods
dec
mov
xor
int
fiaddl
adc
int3
push
sti
lods
and
cmpsb
insl
mov
ja
pop
jmp
mov
daa
xchg
arpl
or
mov
or
or
push
movsb
sub
sbb
cmpsl
adc
arpl
mov
mov
xor
xchg
xchg
mov
mov
xchg
clc
shl
cld
cli
ss
add
je
add
shl
fsubrl
sbb
jnp
fcmovnbe
mov
sbb
js
jl
ljmp
adc
mov
xor
shlb
push
inc
xor
adc
and
or
sbb
leave
mov
pop
mov
les
push
aad
or
je
rclb
in
xorb
pop
push
aad
add
mov
xor
stc
cmp
dec
fisubl
xor
icebp
inc
hlt
adc
fistpll
mov
pop
pop
and
mov
inc
or
pop
loop
push
push
sbb
pop
or
in
sbb
sub
orl
fldt
test
into
or
imul
adc
fsubrl
sahf
ljmp
push
xchg
stos
outsb
mov
cmp
in
lahf
lret
aam
xlat
popf
adc
mov
sub
push
mov
mov
rclb
mov
stos
sahf
mov
pop
lock
lahf
mov
dec
jae
mov
repnz
into
shlb
sbb
sub
fnstcw
movsb
out
ljmp
xor
sbb
out
or
bound
sbb
mov
popf
mov
inc
js
xchg
outsb
jg
push
dec
pop
nop
cmpsl
rcrl
or
lods
xchg
and
push
lods
daa
outsb
add
in
stos
inc
or
pop
stos
dec
pop
pop
push
sub
and
jecxz
adc
fcoml
leave
jnp
stos
test
int3
int3
xchg
mov
mov
call
mov
test
or
pop
pushf
mov
jl
std
xchg
fdivrl
mov
dec
xlat
ja
js
cli
inc
outsb
or
xchg
mov
dec
pop
xor
pop
sbb
aam
mov
imulb
pushl
or
shrl
in
cmpsl
add
scas
dec
cmpl
jmp
cmp
cmp
pop
dec
sbb
inc
scas
dec
mov
push
inc
into
push
pop
cltd
jne
test
mov
xchg
lret
std
jge
and
ret
inc
mov
cld
xor
rclb
adc
xchg
cwtl
mov
xchg
adc
dec
outsl
xor
dec
xchg
or
ficompl
and
add
inc
pop
inc
pop
insl
fsts
pusha
add
nop
add
push
pop
dec
aas
lods
adc
xchg
xchg
sbb
outsl
push
add
out
jl
xor
xorl
out
sub
int
outsb
cmpsl
or
jl
in
out
aas
or
pushl
mov
push
pusha
lods
mov
mov
push
lods
push
pop
imul
or
dec
push
jnp
clc
pop
mov
into
or
int
jecxz
mov
pop
xchg
xchg
in
sbb
cld
loop
xorl
cmc
lds
push
fbld
int
in
pop
cmpsl
ljmp
xchg
cwtd
cmpb
pop
mov
push
xchg
lahf
scas
mov
xchg
xor
subb
rcrb
fstl
xor
stc
adc
cwtl
or
outsb
fdivrs
test
out
mov
hlt
js
pop
mov
out
and
lret
movsl
fnstcw
addb
pop
or
cltd
ret
inc
cmp
push
ficompl
sbb
gs
nop
mov
xor
push
loopne
mov
ljmp
push
sbb
ret
repnz
test
pop
in
sub
push
xor
std
and
adc
push
iret
push
loopne
mov
je
mov
mov
push
mov
xchg
aas
mov
into
push
test
push
cmp
pop
pop
jle
ljmp
out
std
inc
mov
xor
imul
inc
int3
push
cli
jns
sub
leave
js
shrl
add
or
mov
sub
imul
inc
cmp
adc
out
jl
lock
inc
sbb
jl
jo
cwtl
cmp
jg
mov
sub
jnp
pop
sub
psraw
and
sbb
rcr
xchg
or
jle
pop
or
jg
mov
and
push
inc
mov
jae
xor
sub
cwtl
fiadds
cmp
cltd
orb
dec
popa
jecxz
dec
push
repz
ja
push
adc
aad
mov
icebp
popf
jp
mov
adc
aas
xchg
jge
mov
lea
ljmp
adc
cmp
js
sbb
icebp
xchg
pushl
arpl
aam
add
stos
lock
jle
stc
movsb
je
xor
out
jg
lods
in
cld
sbb
inc
nopl
cmp
jle
data16
les
or
sub
fldenv
add
pop
xor
loope
sub
sbb
mov
out
test
and
out
daa
lret
je
or
bound
repnz
repnz
lahf
rclb
inc
sahf
sub
ljmp
subb
mov
jle
lcall
fnstcw
jo
cmp
in
cmpsb
mov
jg
icebp
mov
pop
outsl
sbb
lret
or
out
add
test
stos
sub
pushf
stos
sub
mov
popw
ret
mov
push
mov
mov
push
mov
adc
add
shrl
int3
jmp
aaa
hlt
cmp
add
outsl
lahf
fst
dec
adc
cmpsl
adc
into
fs
sbb
shlb
mov
sub
mov
es
out
push
xchg
adc
enter
lea
push
test
mov
cs
lods
shr
nop
data16
xchg
mov
push
test
and
pop
stos
fucomi
mov
int3
fcmovnbe
stc
inc
cmp
aam
push
mov
js
xchg
inc
xor
cmp
lds
rorl
push
pop
jmp
adc
fnsave
popf
jecxz
mov
js
mov
movsb
popa
and
out
xor
add
sub
adc
sub
cmc
add
cmpsl
add
mov
push
pusha
shlb
ljmp
jno
imul
fs
add
andb
jmp
lret
add
icebp
dec
out
test
mov
dec
test
gs
pop
cltd
add
rcll
les
pop
mov
out
fdivrl
add
ja
pop
dec
leave
cmc
jno
icebp
mov
xor
jo
pusha
stos
int3
mov
in
push
xor
jne
ficoml
jmp
out
lahf
jne
add
addl
adc
scas
orl
push
inc
mov
mov
sub
adc
jo
dec
add
fdivs
push
inc
lea
mov
ficoms
dec
mov
fwait
xchg
mov
jno
std
movsl
inc
pushf
lret
pop
mov
lea
jl
negl
dec
dec
stc
cmp
nop
sbb
mov
or
test
sub
cmp
inc
fucomi
mov
jae
test
mov
xchg
and
enter
xchg
repz
cmpsl
xchg
mov
imul
cli
add
pop
push
test
xchg
stc
adc
cli
cltd
fabs
dec
xor
xlat
cmpsl
popf
inc
xor
icebp
mov
scas
add
inc
xchg
push
and
push
mov
aad
pop
loope
xor
mov
push
out
fsts
cmpb
into
sbb
add
cli
popf
pop
int3
mov
xor
adc
mov
jmp
xchg
mov
push
mov
mov
pusha
dec
adc
cmp
shrb
sub
jno
sbb
push
jb
repnz
adc
mov
xor
cmc
ss
cmp
ficompl
fcmovbe
push
loopne
movntps
and
mov
dec
fsubl
jg
push
mov
stos
cmc
or
add
out
cmp
test
dec
mov
mov
aam
call
je
in
loopne
pushf
pop
loopne
mov
test
clc
jne
jmp
jae
out
inc
sbb
dec
jl
test
jnp
mov
fldenv
ds
mov
insb
mov
mov
out
arpl
push
inc
mov
pop
testl
pop
jp
sbbb
stos
adc
pusha
jg
push
fadds
add
xor
cmp
gs
lock
fs
sbb
jne
pop
push
ss
push
testb
adc
sub
ret
mov
cmp
xchg
mov
jne
xchg
jmp
add
das
cmp
in
xor
out
movl
jne
into
cld
sbb
push
hlt
aam
jmp
int3
fldenv
fcom
mov
xchg
mov
add
je
fwait
sbb
cmp
jp
push
int
xor
inc
sbb
repnz
cmc
fcomps
stos
mov
fsubl
pop
jl
mov
adc
sub
lds
inc
mov
std
cwtl
cmpsb
iret
scas
stc
sbb
int3
addr16
iret
mov
rcrb
or
aaa
test
add
or
mov
ret
mov
dec
enter
xor
into
into
cmpsl
push
and
jo
call
mov
arpl
clc
push
icebp
xor
into
das
unpckhps
adc
shrl
push
adc
xchg
sub
adc
outsl
or
ljmp
out
popa
imul
sbb
movsb
repnz
in
jecxz
hlt
adc
js
mov
pop
sub
sbb
cmc
neg
out
lea
and
push
dec
cmovg
add
fldl
daa
lock
mov
jp
shrb
hlt
inc
cmc
or
sub
stos
mov
test
lret
mov
repnz
push
pop
iret
jmp
aas
in
pusha
ret
out
test
insl
xor
jo
lret
xor
mov
xor
stc
mov
sbb
cmp
sbb
mov
mov
pop
ret
rcll
mov
es
fwait
or
adc
jb
pusha
fs
fwait
cmp
dec
push
in
cmp
fsubrs
inc
imull
imul
mov
mov
cmp
sahf
loopne
pushf
fbld
sub
xor
pop
cmpsb
mov
scas
into
dec
xor
cmp
mov
push
clc
sbb
and
jnp
xchg
cmp
iret
arpl
stos
je
out
xchg
xorb
mov
xor
jmp
adcb
outsl
push
shlb
pop
int3
xchg
stos
ja
adc
std
test
and
mov
push
fs
mov
push
xchg
jecxz
jb
pop
mov
movsb
cmp
nop
jnp
add
lret
or
and
mov
aad
mov
pop
enter
loopne
sahf
mov
cltd
shlb
mov
subl
cmpsl
movsl
sbb
add
mov
pusha
adc
mov
call
incl
sarl
dec
mov
andb
out
outsb
and
inc
sub
sub
sub
pop
mov
aaa
sbb
jmp
shl
push
mov
jmp
xchg
test
int
dec
jg
pop
shr
sbb
jo
add
test
mov
xchg
and
je
gs
addr16
jp
hlt
inc
mov
cmc
iret
icebp
fwait
inc
popf
aam
ret
dec
xchg
or
and
test
fadd
pop
filds
std
stos
loope
push
lcall
in
sbb
ss
ss
inc
insl
adc
dec
lahf
xchg
int
push
loope
lds
xchg
sub
sub
lods
addr16
add
ficomps
push
jl
in
lret
add
pop
aad
push
push
stos
xor
and
lret
sbb
xchg
sbb
lret
scas
loopne
cwtl
mov
out
mov
repz
sbb
hlt
fcomps
mov
fadds
sbb
lcall
cmpsb
jl
jb
fistpll
inc
lret
jae,pt
dec
imul
gs
pop
test
xor
sti
sbb
stos
mov
adc
scas
popa
out
pop
outsl
pop
push
imull
or
ljmp
das
iret
mov
pushf
push
dec
push
pop
jge
inc
pop
pop
gs
push
movsl
mov
aaa
add
je
fnsave
and
jecxz
pop
xor
add
bound
dec
cmp
imul
sub
outsb
sbb
mov
add
dec
or
xor
insl
dec
mov
aam
add
push
fsubrs
sbb
pop
lcall
or
cli
jno
lds
shlb
sub
enter
xchg
sub
test
sub
dec
bnd
das
jns
rcrl
adc
les
push
mov
pushf
mov
cmpsb
in
and
mov
nop
sahf
pop
mull
xlat
ret
dec
mov
ret
iret
cmp
mov
cmpsl
insl
pusha
push
xor
xor
mov
repz
shll
jae
add
add
lcall
popf
das
jae
or
repz
pop
push
ds
mov
lods
and
adc
lcall
or
test
mov
jg
outsb
jno
fldenv
jmp
jle
shl
or
adc
or
dec
cmp
mov
mov
push
and
rcrb
lret
fxch
int
push
pop
mov
ret
sub
inc
testb
push
sbb
push
jnp
cmpsl
push
daa
sub
xchg
add
mov
jl
push
push
push
jnp
subl
or
inc
jae
xor
lea
jae
jl
or
push
aad
addr16
lret
dec
test
cltd
scas
test
jnp
xchg
xor
lret
data16
stos
add
pop
mov
pop
fsub
insb
jae
dec
sub
xlat
or
ja
xchg
subb
fdivrs
lcall
repz
xor
adc
lret
mov
push
les
and
inc
xlat
sub
data16
sbbl
cmp
xor
out
sub
mov
insl
sarb
stc
sub
mov
push
pop
cli
adcb
mov
daa
xlat
adc
jp
cltd
push
gs
push
adcb
cmpsl
lds
inc
or
xchg
push
inc
or
push
outsl
sub
loop
inc
xchg
ljmp
mov
and
sub
into
cwtl
cmc
cmp
push
loope
or
xchg
loop
aaa
inc
add
lods
mov
and
pop
xchg
jns
push
xchg
data16
rorl
xchg
add
push
addb
xorl
jecxz
add
add
test
mov
jge
push
data16
add
jl
ror
cmp
lea
push
into
push
pop
lea
mov
dec
mov
inc
adc
shrb
ret
mov
ficoml
fwait
lods
lea
or
pop
sub
ds
ds
cmp
in
rorb
jno
mov
xor
pop
sub
lcall
and
sub
inc
pop
js
insl
cmp
adc
out
pop
lock
pop
clc
in
data16
movsl
iret
xor
sbb
cli
add
mov
or
aas
adc
fs
jle
and
into
xlat
sub
xorb
jb
push
in
add
outsl
adc
mov
mov
fbstp
int
mov
int
ret
sub
mov
cmp
and
cld
mov
lods
and
loop
xor
push
or
loop
pusha
das
in
cs
or
test
imul
push
movsl
inc
in
mov
sbb
daa
cmp
and
dec
int3
xchg
cmp
xchg
push
inc
sub
lahf
mov
push
xchg
mov
push
pop
jo
adcb
lret
gs
mov
fildl
adc
adc
sub
mov
in
sarl
roll
xchg
mov
sub
std
mov
lret
push
sub
hlt
xlat
pop
mov
mov
aas
scas
cmpb
lds
sub
aas
vshufps
loope
lret
jo
arpl
movsl
imul
loope
testb
xor
js
lret
lods
lods
push
mov
roll
std
fisubs
jno
in
in
adc
and
push
addr16
jecxz
jnp
insb
fmuls
cmp
fdiv
dec
pop
push
mov
push
scas
sbb
mov
inc
pop
xor
pop
mov
insb
repnz
xchg
cmpsl
mov
push
mov
sti
xchg
loope
outsl
fwait
cmovp
push
and
jne
xor
rorl
fnstenv
and
popa
or
xchg
cmp
sti
ficoms
out
xor
mov
in
lods
movsl
test
add
jne
xchg
xlat
pushf
test
cld
clc
mov
mov
cmp
xchg
hlt
jge
test
pop
jmp
push
dec
in
or
mov
and
mov
xchg
or
int3
jo
lods
pop
push
icebp
dec
lods
testb
sub
inc
adc
cmp
jns
push
xor
and
jg
lods
jb
out
push
shrb
sbb
clc
insb
shrb
mov
rorl
or
test
adc
bnd
dec
repnz
inc
loopne
fildll
into
inc
sahf
or
ljmp
subl
push
dec
sbb
and
jecxz
lret
add
push
shr
ds
fisubs
pop
cld
into
clc
outsl
jp
push
and
aas
cmp
pop
mov
cwtl
inc
mov
in
scas
and
dec
in
daa
push
pop
fldt
pop
mov
or
mov
pop
cmp
movsl
fnstcw
and
xor
jno
mov
pop
fidivs
sti
jno
mov
addl
int3
inc
nop
and
inc
fisttpll
add
pop
in
repz
filds
sub
or
pop
rorb
adc
mov
outsb
popa
mov
cwtl
jp
inc
jae
push
cmc
insb
mov
push
mov
bnd
adc
sar
dec
xor
rcrl
and
push
daa
fsubs
mov
pop
mov
shll
jnp
push
jnp
out
mov
jne
jnp
jo
push
dec
push
dec
andb
pop
mov
and
jl
mov
out
jge
add
shll
xor
cmp
pop
hlt
inc
sub
ja
cwtl
in
ret
adc
add
pop
orl
pop
cli
call
mov
jnp
out
add
and
ror
push
and
jg
outsl
bound
loope
dec
call
into
xchg
sar
std
into
ds
aam
pop
ss
je
adc
dec
add
test
mov
inc
jl
fnstcw
mov
rcll
pushl
xchg
notl
data16
fisubrl
popf
dec
imul
inc
mov
push
out
out
sbb
and
icebp
add
and
add
cmp
lods
adc
or
ret
or
in
pop
inc
xor
ljmp
jae
pop
insb
mov
dec
mov
pop
and
sbb
xor
pop
push
je
mov
inc
cmpsb
ret
addl
pop
sbb
mov
xlat
idivb
mov
add
adc
stos
frndint
sarl
das
jg
mulb
lock
pop
in
insb
xor
push
fidivs
mov
outsb
jne
es
lods
jae
sub
xchg
aaa
test
stc
arpl
ja
and
push
jle
bound
jbe
mov
and
mov
lahf
cmc
out
lods
jne
or
add
mov
xchg
inc
sub
xor
inc
leave
bound
mov
orl
sub
imul
adc
xchg
lea
xor
movsb
adc
dec
and
imul
ret
out
loope
aaa
mov
imul
sahf
push
loope
ljmp
or
lock
cwtl
faddl
mov
divl
mov
rorl
mov
je
mov
cli
insb
orb
cltd
sahf
mov
mov
mov
dec
and
jp
cmp
repnz
scas
mov
mov
xchg
mov
outsb
xchg
inc
mov
sbb
cld
rorl
bound
fnstsw
sbb
setg
push
xor
aam
insl
dec
mov
lahf
mov
xchg
or
pop
push
mov
pusha
add
dec
fs
and
dec
fcomp
out
or
pushf
call
out
fdivrl
mov
mov
cmp
iret
jecxz
imul
std
and
in
push
pop
mov
aad
add
jno
out
lret
je
sbb
push
mov
sbb
push
iret
sti
xchg
cmc
lds
nop
dec
lret
jl
pop
jmp
xchg
cbtw
xor
jecxz
fidivl
lods
jle
int
jnp
popa
icebp
or
push
imul
ret
mov
int
fiadds
xchg
xchg
outsl
inc
xorl
dec
lea
aad
loope
rcr
loope
in
es
lret
add
mov
mov
popa
lock
lcall
lcall
jns
xchg
sub
add
in
push
rorb
ds
ret
fcompl
push
sahf
aam
subb
cs
shlb
shrb
dec
jge
or
divb
ja
fldl
and
iret
inc
fisubrs
mov
or
out
inc
sub
jg
jmp
jno
push
scas
les
es
xchg
gs
cmpsb
ja
mov
je
mov
xor
push
add
outsl
jmp
lock
jg
rorl
xor
cmp
leave
mov
sbb
ret
or
aas
popf
mov
and
jle
inc
repz
loopne
stos
cwtl
cmpsb
aad
or
hlt
push
pop
popf
sbb
les
int3
cmp
insb
push
lcall
adc
dec
bound
sub
sbb
xor
leave
xor
loop
xor
and
popf
ss
lret
cmp
and
popf
jb
loopne
shlb
inc
mov
cltd
mov
int3
jmp
mov
add
jmp
sarb
xchg
ja
cld
mov
push
xor
or
lds
ret
sahf
mov
jnp
fidivl
rcr
js
cmp
daa
push
inc
xor
out
inc
out
mov
subb
out
in
int
mov
rol
and
mov
lret
jg
mov
je
sbb
aas
cmpsl
cli
jmp
mov
out
out
pusha
ds
roll
sbbb
ljmp
xor
std
lods
sub
mov
std
mov
lods
cld
sub
dec
xchg
ja
mov
loop
jb
xchg
jae
fstps
insl
das
and
mov
adc
cmp
xchg
ja
cmp
enter
xor
add
jno
inc
jae
clc
aas
test
ja
mov
pop
test
imul
inc
in
fmull
push
ja
pop
jo
mov
mov
mov
and
aad
inc
icebp
cmpsb
clc
add
jo
lea
xchg
std
fs
data16
into
mov
call
insb
push
inc
xchg
sbb
dec
push
dec
or
cmp
push
jb
jmp
mov
lods
div
mov
xchg
call
psrld
mov
or
cmp
pop
sub
xor
sub
xor
sbb
xor
stos
push
cs
push
adc
add
push
jo
add
jne
jmp
aas
dec
dec
aas
push
pop
dec
xor
mov
fcomip
ret
test
cli
not
xchg
fldl
repnz
jmp
stos
scas
lods
shr
lret
xchg
int
push
scas
repnz
repz
inc
es
cmc
ljmp
sahf
and
lds
jp
in
sub
cmp
sbb
enter
cmp
mov
push
or
imul
mov
loop
dec
mov
rcl
xchg
add
add
lock
test
dec
ja
xchg
out
repnz
out
fidivs
addl
int3
stc
jne
inc
loop
xchg
jge
fiadds
int3
aas
ja
ret
push
cmp
mov
loope
mov
orl
imul
loopne
jno
cli
sahf
popa
cwtl
mov
xchg
sbb
test
mov
cmp
outsb
cmpsl
cmp
inc
mov
jbe
out
js
loope
rorb
sbb
cmp
int
adc
out
mov
and
dec
pop
adc
dec
sbb
movsl
imulb
mov
inc
cmpsl
shr
adc
outsb
add
nop
sub
cmpsb
stos
dec
mov
fs
adc
xor
jl
dec
ret
lret
push
roll
pop
jge
push
dec
ror
mov
sub
lcall
inc
call
mov
push
pop
ss
pop
ret
imul
int
dec
pop
loope
nop
mov
sub
sbb
jbe
ficomps
scas
sbb
mov
lahf
ds
scas
xor
lods
or
jmp
addr16
or
sbb
jge
insl
pop
cltd
add
and
test
setg
aas
adc
xor
movsl
std
push
adc
xor
test
in
cmpl
push
xchg
repnz
jno
cwtl
push
mov
outsb
call
xor
xor
mov
call
adc
mov
mov
mov
jns
negb
inc
jg
xchg
xchg
test
push
cwtl
mov
lods
mov
dec
mov
movsl
rorb
adc
jecxz
mov
mov
imul
jne
sub
dec
cmc
inc
repz
jnp
out
fists
mov
cmp
jmp
jns
and
fs
jp
add
and
dec
cmp
cltd
mov
outsb
cltd
mul
imulb
xchg
and
inc
iret
into
xchg
push
stos
loopne
xchg
fidivl
mov
sbbl
adc
mov
pop
jecxz
inc
popf
in
push
scas
test
sbb
and
iret
les
push
cmpsl
pusha
inc
jbe
hlt
lea
orb
dec
push
adc
movsb
stos
stos
rclb
fldt
cwtl
push
sbb
xchg
add
mov
xchg
xor
popf
movsb
mov
dec
jle
and
mov
push
rcrl
xchg
adc
lock
movsl
xor
xor
xor
and
jmp
imul
inc
cld
dec
xor
mov
das
xlat
jmp
xor
mov
out
aas
and
fwait
jl
dec
dec
fmuls
sbb
xchg
push
stos
jne
mov
sbb
mov
or
jecxz
or
push
lock
loop
jle
loope
dec
leave
idivb
adc
clc
call
in
xor
jle
shrb
push
lea
clc
imul
icebp
xchg
dec
out
loop
add
ds
in
adc
adc
xor
dec
pop
sub
aaa
jg
ret
js
std
pushf
pop
xor
lock
xchg
push
bound
sub
jp
lret
push
cmp
bound
enter
in
cltd
mov
xorl
out
movl
daa
push
les
lret
fsubp
out
je
adc
loop
in
dec
push
insl
cmp
nop
divb
ret
push
scas
jg
aam
add
inc
pop
push
fadd
push
jmp
rclb
lret
jmp
ret
leave
pop
mov
push
movsb
fwait
xchg
lcall
daa
sbb
sub
sub
mov
adc
les
cmp
insl
mov
daa
sub
test
sahf
pop
hlt
leave
push
pushl
dec
call
popl
push
jb
lds
xchg
dec
pop
jno
sahf
scas
sbb
lcall
mov
cmpsb
add
xchg
jae
shlb
test
xchg
add
sub
jns
popa
rclb
in
pop
outsl
xchg
fimull
jns
pusha
sti
adc
lret
insl
sbb
ljmp
idivb
imul
pushf
push
aam
and
movsb
sub
stos
arpl
xchg
push
lds
sahf
cwtl
push
hlt
lea
les
jno
mov
push
push
inc
inc
cmpsb
mov
mov
fnop
push
movsb
jb
outsl
lret
pop
and
insb
xor
mov
jle
jl
mov
fwait
mov
orb
cltd
xchg
cmpsb
rclb
int
mov
notl
pop
jo
iret
or
mov
jp
leave
pop
dec
sbb
xchg
arpl
push
lds
call
and
rorl
outsb
mov
int3
mov
and
ss
insl
sahf
cli
push
hlt
data16
cmp
mov
jbe
push
shll
jo
adc
pop
pop
pop
push
jmp
add
arpl
imulb
add
mov
aam
cs
add
ljmp
push
test
ja
subb
xchg
lock
test
aad
movsb
inc
sub
in
pop
xchg
mov
mov
sbb
pop
sub
into
repz
cmp
jne
loopne
repnz
imul
inc
sbb
xor
jl
or
enter
incl
jmp
cwtl
insl
and
push
int3
jo
mov
out
ja
add
pop
fwait
lahf
jp
imul
jecxz
fstpt
jb
out
leave
loopne
stos
xlat
jl
jno
scas
cld
push
dec
pop
xor
aam
fwait
inc
clc
ss
dec
cli
pop
adc
pushf
cmp
int
mov
inc
inc
into
mov
inc
jbe
aas
xchg
xlat
jg
std
jge
in
mov
test
sub
xchg
ret
pop
mov
or
jg
mov
mov
or
sub
sub
add
xchg
jns
lcall
and
jae
cmp
inc
jbe
enter
leave
jp
push
xchg
dec
dec
lret
outsb
bound
add
inc
cmp
hlt
inc
leave
lea
lock
loopne
ds
lds
adc
pop
push
adc
sub
hlt
setbe
xor
aad
adc
add
xchg
negl
cmp
movsb
jmp
jae
sbb
inc
jns
out
andl
pop
fmuls
stc
inc
jp
ret
xor
popf
popf
pop
mov
mov
push
filds
sbb
dec
jb
lcall
fs
sub
dec
jmp
fistps
mov
dec
sbb
in
push
cmpsl
or
mov
cwtl
enter
test
les
xor
out
dec
repz
cmp
and
or
fildll
or
pop
push
cmpsb
lret
leave
mov
lret
xchg
insb
mov
je
outsb
dec
inc
inc
ljmp
sbb
add
pop
cmpsb
aaa
and
mov
fstpt
push
sbb
aas
adc
add
inc
cmp
mov
push
xchg
xchg
cmpsl
hlt
xlat
dec
push
lock
cmp
adc
enter
xchg
mov
xor
add
roll
movsl
xor
push
jge
jo
jmp
out
push
test
sub
mov
inc
dec
mov
add
jae
sub
add
sti
in
add
rclb
sub
sub
mov
loopew
lock
sbb
and
enter
sbb
mov
push
fldt
test
pop
or
cltd
outsb
dec
mov
inc
clc
repnz
mov
or
js
inc
cmp
cli
mov
dec
push
xchg
jecxz
sbb
push
insb
js
dec
movsl
inc
dec
loopne
loope
iret
dec
xchg
aam
jmp
pop
and
test
inc
popa
ficoms
cmovge
stos
scas
jmp
inc
add
dec
xor
mov
mov
and
dec
adc
add
mov
pop
adc
lcall
adcb
lods
xlat
pop
push
stc
xchg
int3
gs
into
das
fsubl
fcom
mov
mov
push
add
cmc
cwtl
popa
les
pop
fstl
push
adc
jge
test
jne
daa
add
xlat
lahf
sbb
push
repnz
arpl
test
setle
push
daa
jle
push
fs
fnstcw
ja
and
push
pusha
sbb
cs
cli
je
imul
mov
add
mov
mov
inc
push
and
dec
cmp
insb
call
ja
sar
inc
sbb
popl
pop
bound
adc
sub
mov
negb
out
add
jp
adcl
mov
inc
jecxz
xchg
sub
test
cmp
lret
nop
insb
stc
enter
dec
pop
mov
rolb
outsl
dec
inc
mov
adc
cld
mov
scas
lcall
dec
in
sti
int3
inc
enter
rorb
jmp
or
aas
adc
fwait
adc
subb
fistpll
clc
xchg
scas
jg
movsl
xchg
xlat
jb
cli
stc
mov
stos
xlat
fisttpll
push
es
in
stos
sub
xor
out
orb
repnz
repz
out
mov
xchg
jp
je
push
mov
jge
xchg
test
push
dec
fisubrl
insb
dec
add
cmc
mov
repnz
push
inc
push
int
cld
decb
hlt
out
mov
ret
xor
imul
addr16
mov
popa
sti
jecxz
and
mov
dec
ret
out
and
test
or
jmp
add
cmp
lds
push
push
inc
shlb
push
jecxz
and
aad
int
or
pushf
pop
push
xor
test
ss
fs
leave
add
shrb
jbe
mov
xor
xchg
rcrb
shl
test
xchg
mov
hlt
dec
scas
pusha
rolb
dec
aad
inc
mov
jp
pop
sub
ja
gs
rorb
in
cli
dec
int
hlt
arpl
arpl
push
jl
pop
push
inc
outsl
add
sbb
jl
dec
int
in
push
movsl
cwtl
inc
imull
push
out
rolb
aad
mul
push
repz
jae
int
js
sahf
sub
pop
mov
addr16
mov
daa
fnstcw
sbb
inc
loop
es
and
jl
xlat
cmp
arpl
ret
loop
bound
cmpsl
sub
stos
adc
ret
jle
inc
movsl
je
adc
repz
stos
pop
fcomps
push
in
cmp
inc
cwtl
loope
call
cmc
cmp
aam
xchg
mov
mov
sbb
fsubl
outsb
add
pop
jo
pop
scas
repz
lock
inc
lahf
sbb
push
add
cld
mov
stos
mov
sub
add
pop
sbb
shl
pop
xchg
imul
adc
pop
fdiv
or
aas
xlat
xchg
outsl
pop
sbb
inc
pop
mov
repnz
loopne
pop
xchg
jnp
test
pusha
add
in
cmp
hlt
loop
pop
in
push
pop
inc
test
xchg
add
pop
pop
jle
mov
and
sub
cmp
mov
imul
sbb
dec
cmc
sbb
inc
inc
jo
add
in
pop
cs
ret
pusha
div
jo
sbbb
xchg
mov
scas
or
pop
jne
aaa
inc
lcall
mov
push
push
xchg
call
js
mov
cltd
outsl
pop
xor
loop
mov
jae
dec
fdivs
js
xor
cmpsl
add
mov
mov
outsl
pop
xchg
mov
out
xchg
jnp
push
imul
jno
enter
call
cltd
nop
push
shll
pop
loopne
popa
mov
insl
inc
add
sub
add
xor
mov
sub
stos
lods
mov
or
mov
fisttpll
mov
mov
push
pusha
cmp
cmp
iret
mov
push
movsb
mov
dec
sbb
pushf
pop
pop
std
sub
test
xor
loopne
testl
icebp
leave
dec
aaa
pop
test
dec
shll
inc
std
mov
adc
fistpl
aaa
sbb
es
dec
sub
and
std
into
jcxz
xlat
push
dec
mov
cmpsl
mov
jg
adc
adc
test
sbb
mov
icebp
pop
push
inc
dec
xchg
add
test
test
push
in
xchg
loop
mov
arpl
cmp
lea
punpcklbw
stc
dec
insl
hlt
push
jmp
lahf
aam
lock
cltd
pop
xor
imul
mov
stos
repnz
dec
vprotd
pop
pop
shl
sub
xor
xchg
jns
cmp
out
adc
es
add
fmull
xor
adc
fbld
rcrl
test
jne
loopne
insl
inc
lods
shrb
movb
mov
loop
cmp
outsl
jnp
push
dec
cmp
icebp
add
xlat
jmp
xchg
xlat
or
movsb
jp
cmp
mov
mov
dec
xlat
jnp
aad
fs
xor
es
adc
add
mov
dec
clc
dec
je
sbb
jb
gs
in
repnz
cmpsb
cmpxchg
les
lock
arpl
leave
sub
popl
imul
and
lods
add
mov
or
outsb
inc
mov
fcompl
movl
mov
stos
cmpsb
sbb
sti
idivb
mov
lds
stos
push
jecxz
cmpb
adc
cld
and
int3
imul
jbe
imul
fistl
aas
cmp
setge
xchg
fsts
fs
test
mov
mov
repnz
les
scas
imul
xrelease
imul
cmpsl
movl
out
arpl
sti
mov
mov
jns
sbb
rclb
sbb
iret
lods
mov
jns
mov
jbe
mov
js
cmp
pop
sub
and
adc
add
mov
mov
dec
ret
movsl
scas
xor
push
xor
cmp
push
adc
xor
push
jns
inc
dec
mov
dec
fists
adc
sbb
and
mov
daa
jns
sbb
sub
adc
mov
mov
mov
sub
ret
dec
cmpsb
jo
lret
mov
cs
cltd
mov
cmp
in
add
add
adc
push
mov
inc
xchg
add
xlat
cmpsb
pop
test
mov
sub
mov
out
jp
xchg
mov
push
push
call
mov
cmp
das
pop
popf
loopne
imul
or
pop
and
mov
dec
movsl
cltd
pop
and
xor
mov
in
repnz
test
stos
jbe
or
jmp
pop
hlt
xchg
sub
cld
lahf
addr16
dec
push
in
jb
push
mov
leave
fistpll
pop
and
cmp
and
clc
mov
orb
lds
fs
push
jl
cmp
les
xchg
jecxz
cmpsb
lock
mov
mov
xchg
xchg
aam
cwtl
cli
sub
mov
mov
and
addr16
dec
sub
or
xchg
mov
repz
in
lret
xchg
add
cmp
mov
jmp
and
sbb
mov
in
stos
dec
test
and
jle
cltd
add
in
adc
sbb
stc
push
out
inc
out
xor
add
daa
xor
xchg
mov
mov
xchg
jmp
into
jmp
or
scas
xor
je
rorb
mov
push
jmp
not
sub
fiadds
movsb
jne
pop
or
cmp
fcomps
ds
lcall
or
jnp
lock
cmp
sbb
sub
popa
jno
outsl
adc
std
jl
inc
leave
mov
repz
mov
insb
pop
xchg
fs
pop
nop
push
fstps
out
hlt
mov
xchg
sbb
dec
fisttps
mov
mov
push
pusha
adc
pusha
mov
bound
fcmove
mov
aam
dec
xor
js
push
dec
mov
adc
insl
pop
or
or
cltd
xor
inc
xchg
pop
in
mov
jmp
in
sbb
xor
in
cmc
loop
mov
jnp
mov
adc
pop
cmp
sub
popa
pop
push
pop
push
xor
mov
push
adc
pop
mov
sbb
push
xchg
xchg
or
mov
dec
push
icebp
fcomps
sar
movl
fnstenv
xchg
test
mov
dec
pushf
xchg
orl
aaa
sbb
cmp
push
stc
mov
rorl
iret
or
imul
mov
mov
push
fisttpl
inc
insb
push
mov
pop
stos
add
test
sbb
cmp
lret
fbstp
out
mov
hlt
or
mov
add
leave
clc
scas
std
dec
mov
nop
out
cs
loop
push
push
push
or
pop
enter
gs
xor
cmp
popa
mov
xchg
xor
add
std
push
outsl
out
jmp
movsb
add
outsl
xchg
lahf
sbb
mov
test
call
and
inc
ds
pop
cmpl
mov
ret
std
jg
das
insl
xor
ljmp
ret
and
and
sub
sbb
sbb
ret
or
mov
jl
lock
cmp
dec
test
inc
sahf
sub
xchg
fs
inc
or
dec
jmp
cmp
arpl
mov
or
sti
jmp
or
nop
stc
cmp
jecxz,pn
int3
pushf
ficoml
outsl
sbb
incl
push
inc
cmp
bound
hlt
jl
mov
push
cwtl
jb
pop
mov
xchg
cwtl
dec
push
mov
repz
push
adc
jg
mov
pop
xor
pop
sbb
mov
add
cmp
fistpl
into
xchg
mov
push
repnz
popa
test
lock
aad
cmp
pop
jmp
hlt
mov
js
or
pop
ror
scas
fwait
xchg
pop
push
adc
or
mov
sub
loopne
ret
sub
add
xchg
sahf
mov
cmpsl
inc
hlt
jp
dec
dec
adc
jp
enter
cmpsb
mov
dec
push
mov
mov
xchg
pusha
cs
es
inc
cmpsl
xor
cld
mov
fwait
and
fsubl
lret
sbb
aaa
mov
mov
cmp
xor
jbe
xchg
fsubs
push
jnp
lods
and
and
sti
and
cmp
das
mov
fadd
pop
and
push
lahf
add
xchg
mov
ss
or
jne
inc
dec
andb
add
ljmp
mov
icebp
std
add
ficoml
adc
pop
leave
scas
xlat
mov
mov
in
sub
imul
sbb
mov
xlat
pop
jno
pop
rcl
testl
xor
xchg
movsb
mov
dec
mov
inc
push
fisubs
push
xor
or
inc
daa
pop
jmp
popa
sbb
mov
mov
push
leave
rclb
inc
push
in
shrb
inc
inc
sbb
popf
outsl
mov
pop
jecxz
and
xor
cmp
sub
insl
imul
mov
pushl
loope
inc
mov
pop
in
les
and
sbb
movsb
add
idivb
cld
cmp
add
int3
mov
xlat
mov
in
jbe
adc
xor
jp
push
pop
jbe
aam
jnp
push
pop
inc
out
sbb
iret
test
pushf
or
push
out
into
jne
bound
push
repnz
std
or
push
mov
mov
mov
ljmp
mov
fcmovnbe
dec
arpl
jmp
add
cmp
jl
xor
dec
mov
cmc
pmullw
xlat
outsb
xchg
jne
jno
push
dec
dec
mov
outsb
push
idiv
xchg
push
outsb
xor
sbb
int3
mov
popf
or
pop
ja
cmc
adc
cmp
dec
pop
mov
jb
mov
pop
hlt
out
or
cltd
fdivs
add
leave
mov
movsl
mov
leave
push
jo
int3
pop
push
jbe
int3
aad
mov
popa
daa
std
fincstp
sub
jno
comiss
into
fsubl
cmp
inc
and
xchg
push
movsl
das
sub
push
enter
push
inc
or
and
or
sbb
ja
jae
aaa
loopne
stos
cli
aad
add
loope
es
std
mov
hlt
pop
xchg
mov
mov
dec
sarb
dec
out
push
dec
jle
fucom
sbb
sbb
out
mov
mov
outsb
mov
mov
ja
stos
mov
test
xlat
and
sarl
mov
jbe
js
xor
mov
mov
pop
sub
and
fildll
dec
mov
aad
jmp
into
bound
popa
and
aam
fnsave
aaa
xor
push
pop
aaa
jp
sbb
jb
test
mov
fnsave
mov
std
popf
jb
sub
sahf
or
cltd
pusha
or
lret
xchg
dec
add
in
inc
pop
xor
out
adc
xlat
dec
hlt
iret
lds
dec
stos
and
loope
push
push
mov
fsubr
xchg
andb
outsl
inc
ja
das
xor
push
das
dec
lahf
push
mov
xor
and
jne
ror
sbb
mov
cli
push
add
xor
insb
addr16
loopne
add
pop
lock
jno
cmovns
sbb
xor
push
cs
sub
sub
sti
fwait
dec
jbe
inc
xor
mov
mov
pushw
pop
insl
push
push
push
pop
fldl
and
push
jo
mov
lods
test
test
cmc
jnp
bts
mov
out
orb
mov
cmp
adc
jns
pop
mov
xchg
stc
pop
lods
dec
ja
mov
or
sbb
mov
shrb
fs
mov
leave
aaa
aad
jecxz
aad
test
adc
pop
in
and
add
mov
mov
jb
xor
jns
stc
dec
je
xor
cmpsb
jecxz,pn
enter
jmp
int3
push
xchg
mov
mov
mov
outsb
or
cmp
fcmovne
vcvttss2si
addr16
scas
jmp
das
popf
int
add
sbb
push
rorb
or
lea
movsb
jp
sub
movsb
scas
push
mov
jmp
jno
popf
xchg
push
sub
data16
cmp
int
dec
sub
mov
popf
fwait
mov
out
and
jl
arpl
and
fisttps
mov
call
or
lcall
stos
lret
xchg
sahf
les
mov
and
js
call
sub
leave
mov
mov
daa
aaa
sbb
push
pop
cmp
mov
iret
clc
mov
xchg
ljmp
data16
cld
mov
push
jp
sub
xor
gs
mov
mov
mov
push
pop
mov
push
ret
popf
mov
pop
sub
push
or
and
and
sahf
xchg
or
cwtl
mov
jmp
fcmovnbe
push
cld
pushf
mov
enter
add
push
hlt
pop
int
sbb
shrb
and
int3
stc
rorb
jno
out
popa
mov
ljmp
loop
fisubrl
sub
jae
movsb
insl
lcall
jl
popa
xor
sub
js
xchg
jne
jno
insl
nop
movsb
in
cmp
mov
enter
int
repnz
sti
push
std
in
add
inc
je
jl
inc
clc
outsb
mov
test
jecxz
imul
add
pop
sbb
jg
leave
mov
leave
cmpsl
mov
je
imul
ror
pop
pushf
rcr
les
adc
push
test
cwtl
add
push
xchg
fstpt
jecxz
mov
mov
adc
fcomps
dec
xchg
ret
rcr
out
cwtl
je
adcb
mov
aas
add
pop
lock
cmp
or
fwait
test
fsubs
cmp
jmp
sbb
push
push
add
in
jbe
int3
jmp
pop
inc
cmp
into
cwtl
lret
lock
pop
pop
dec
push
mov
add
xchg
mov
das
pop
sti
orb
dec
insb
dec
fcomip
insl
xorb
mov
mov
lea
sbb
sub
lock
ja
pop
out
arpl
int3
frstor
jno
push
rcr
jmp
xchg
sub
pop
mov
call
jp
add
fs
adc
adc
sub
cwtl
sbb
jae
test
rcrb
add
mov
subb
cs
decb
sub
movsb
xchg
dec
rol
adc
push
jle
push
cmp
lahf
sbb
adc
mov
in
aad
inc
lds
das
sahf
mov
imul
jnp
cmpsb
xrelease
popf
call
ds
out
jb
stos
mov
dec
mov
mov
dec
enter
lea
das
jecxz
dec
fsub
ret
xchg
mov
loop
mov
adc
jnp
int3
popa
sub
jnp
mov
add
jbe
xchg
inc
dec
bound
xchg
daa
push
sbb
sub
clc
sahf
xor
in
movsb
lret
xchg
xor
mov
push
arpl
push
add
clc
cmp
sub
dec
xor
in
insb
pop
mov
mov
jp
insb
hlt
shrl
push
aaa
sub
popa
cwtl
cmc
cmp
pop
xchg
lods
jb
mov
add
fistpl
and
movsl
add
and
adc
push
xor
mov
stos
xor
jge
into
paddsw
xlat
arpl
or
scas
mov
cmp
sbb
movsb
test
sbb
jb
xlat
and
and
jmp
scas
repz
pop
cmp
testb
lods
add
push
sub
stc
das
push
cmpl
push
mov
outsb
mov
jmp
pop
out
sarb
jmp
dec
xchg
mov
cmp
sbb
aas
fldl
dec
out
jmp
jecxz
cmp
scas
mov
fisubl
leave
out
sub
ret
jno
pop
adc
jl
fldcw
repnz
and
aam
and
sbb
sbb
movl
dec
fisttps
inc
xchg
cmp
sarb
cwtl
pop
in
lea
jecxz
pop
pop
stos
popa
addb
shl
sub
xor
aaa
and
lret
enter
mov
aaa
stc
test
adc
fwait
dec
fldcw
outsl
loopne
jns
dec
sub
or
loopne
adc
jb
push
subb
sub
adc
dec
jecxz
jmp
insb
mov
jmp
loope
test
test
les
les
popf
or
adc
lret
dec
mul
loope
stc
xor
ds
stos
jecxz
movsl
leave
cmp
xchg
aas
ja
scas
cs
es
dec
out
adc
mov
lds
mov
jno
jne
jne
dec
add
andb
push
rcll
stc
mov
mov
rcrb
push
rclb
dec
repz
rcrb
push
and
aad
adc
das
inc
push
sbb
pop
cmp
jmp
jl
inc
dec
addr16
lock
sbb
xchg
imul
push
and
add
dec
les
dec
mov
ficoml
lods
out
out
jg
pop
or
daa
mov
arpl
std
out
mov
inc
inc
jae
mov
in
stos
inc
jns
dec
fadds
pop
cmpsl
sbb
cmp
aad
mov
push
pop
mov
test
inc
add
mov
add
fimuls
sub
xor
daa
cmp
mov
mov
cld
mov
iret
pop
cmpsb
setnp
stos
pop
xor
iret
add
mov
test
mov
cmp
adc
mov
jl
mov
mov
pop
xchg
inc
mov
jno
add
add
push
pop
call
or
stos
push
cmp
xor
int3
fmuls
mov
push
out
jae
jg
push
push
dec
stos
les
icebp
push
or
push
fs
out
fildl
fcompl
mov
fwait
mov
mov
lcall
rcll
enter
mov
arpl
es
ss
in
add
out
les
jne
and
aas
mov
fildl
mov
xchg
jg
dec
or
test
xchg
lds
data16
out
call
out
jne
lds
cs
cmp
rolb
jno
pop
std
fistpl
sub
shll
sbb
or
sub
pushf
imul
fwait
popf
push
jecxz
mov
push
jae
mov
xchg
addb
outsl
pop
mov
xchg
notb
mov
call
daa
and
push
xchg
and
adc
popa
pop
outsl
jge
mov
xlat
cmp
gs
sbbb
dec
les
sbb
xor
jnp
fisubs
cmp
fildl
shr
inc
sbb
icebp
adc
push
inc
rolb
fcmovbe
lcall
ret
lods
jg
out
nop
aaa
repnz
dec
xchg
movsb
mov
jne
xor
jle
ss
mov
stos
jae
pop
les
pop
outsl
cmovne
lds
xlat
outsl
ljmp
ja
jecxz
adc
pop
imul
xor
or
jg
imulb
addr16
daa
mov
scas
xor
fidivrl
sbb
or
gs
ret
add
aas
jmp
pop
nop
into
aam
mov
push
sub
out
xchg
jecxz
mov
pop
icebp
sub
push
add
test
in
clc
fcoml
outsl
add
aaa
fiadds
into
xor
jne
sarl
and
mov
push
shr
push
test
mov
inc
push
add
sbb
call
jbe
xor
push
jns
lret
mov
fnstcw
mov
ret
ja
mov
push
and
lcall
inc
cmp
cmp
mov
test
or
jno
mov
fcoml
push
es
aas
push
dec
pop
xchg
ja
rcl
add
inc
inc
cmpsb
pop
sbb
push
push
jp
xchg
mov
inc
push
inc
xchg
inc
cltd
test
gs
in
lods
mov
add
push
add
xchg
out
push
incb
mov
fisttps
lds
mov
mov
cmp
adc
dec
loope
repnz
add
outsb
jb
js
xor
xchg
lahf
inc
test
sbb
add
mov
fadds
loop
pop
jmp
inc
xchg
addb
hlt
cld
imul
or
leave
cmp
jecxz
xlat
jo
xchg
dec
insl
inc
popf
jae
gs
mov
in
out
push
cmp
cmp
xchg
sbb
add
fnsave
test
xchg
sub
aad
dec
std
jnp
sbb
jg
xchg
fistpll
mov
test
pop
add
insl
les
push
add
lods
mov
mov
sub
inc
and
xchg
jo
hlt
cmp
cmp
sub
push
sub
nop
in
fsubs
orb
pop
fcmovb
inc
jg
mov
movsl
outsl
mov
and
mov
pushw
or
sub
adc
mov
sub
pop
push
add
xchg
stc
iret
dec
mov
jbe
xor
out
das
or
cmp
ret
es
and
pushl
aas
lds
and
popa
push
cmp
aaa
sbb
pop
mov
jbe
mov
sub
add
mov
aaa
mov
xchg
xchg
cld
push
pop
dec
data16
jns
hlt
lods
mov
lods
add
adc
jge
pop
div
mov
clc
pop
inc
cmpsb
dec
ds
aas
nop
fisubl
pusha
push
push
pop
add
mov
xchg
js
aaa
add
in
outsb
mov
push
test
jno
ss
rcrb
dec
push
jno
or
add
fcomip
xor
xor
add
pop
or
xor
push
imul
inc
icebp
mov
mov
cld
pop
out
inc
daa
mov
cmpsb
push
aaa
adc
adc
adc
mov
test
int
stc
adc
stc
aaa
sbb
pop
out
scas
push
cmp
rcrb
sbb
mov
sarb
loop
inc
gs
int3
pop
jp
fisubs
mov
mov
outsl
mov
inc
in
add
jns
xor
mov
int
fldcw
mov
mov
pusha
jns
in
xor
das
add
sbb
in
jno
inc
mov
jge
mov
fdivrl
add
cmp
loopne
je
in
in
mov
mov
mov
out
roll
jae
mov
stos
fwait
sbb
lea
imull
cmpxchg
add
mov
dec
stc
dec
cli
and
mov
mov
in
add
sbb
adc
mov
scas
mov
and
ss
dec
and
in
mov
popw
decl
shlb
xor
jne
xchg
iret
in
inc
shlb
fwait
shlb
mov
push
ljmp
lcall
test
xchg
int3
iret
int
dec
jb
adc
mov
sub
loop
fldl
mov
push
mov
mov
xchg
pop
pusha
call
insb
dec
and
fldl2t
xchg
outsl
in
push
fwait
push
xor
push
cmpsl
push
or
scas
add
imul
aam
push
pushf
adc
jle
sbb
push
xchg
stos
repz
push
finit
pop
js
lds
xchg
mov
leave
scas
jp
leave
ret
adc
fs
out
sbb
stc
nop
dec
push
push
loop
xlat
orb
mov
mov
add
push
fcmovne
jle
out
push
iret
mov
push
test
adc
ficompl
cmp
jns
je
adc
pusha
jbe
xor
xchg
dec
add
aaa
mov
adc
push
xchg
fwait
ja
cltd
xlat
dec
mov
sub
jg
inc
filds
inc
aaa
sbb
lahf
pusha
sarb
out
les
testl
jp
dec
mov
int
mov
pop
mov
mov
xor
mov
subb
andl
jno
push
or
enter
pop
cmp
sub
xchg
loopne
dec
ja
or
in
filds
push
push
in
gs
ss
jae
dec
jo
shll
dec
mov
leave
frstor
lods
xchg
dec
xor
xchg
clc
add
gs
jnp
ret
sub
dec
xor
add
mov
jmp
ja
pop
stos
sbb
xchg
rclb
in
bound
scas
mov
inc
inc
shlb
popa
mov
je
sbb
outsl
ror
das
div
fucom
dec
outsl
jecxz
push
mov
out
sbb
call
out
xor
cli
out
inc
xchg
dec
sbb
mov
cmp
leavew
adc
clc
fbstp
mov
or
loope
push
loope
mov
xchg
xchg
mov
shl
andl
sti
outsl
out
cmpb
stc
adc
mov
sbb
pop
nop
cmp
lahf
xor
dec
mov
mov
mov
lret
pop
jns
jae
jnp
lret
loope
xchg
hlt
popl
js
outsb
dec
push
cmp
je,pn
aas
andl
in
push
cmp
mov
mov
aad
push
mov
addr16
imul
aas
cmp
xchg
push
cmp
std
int3
push
adc
xor
je
inc
and
adc
clc
adc
jae
xchg
bndldx
and
cmp
mov
and
sbb
stos
int3
cmc
mov
xor
jae
cmp
ret
sbb
out
decl
mov
or
cmp
fwait
jle
add
cmp
and
out
test
stos
fsub
mov
xor
sbbl
xchg
jns
mov
xchg
imul
adc
lea
sahf
insb
out
fwait
push
push
in
pop
sub
lock
inc
inc
jb
dec
sbb
cmpsb
jb
mov
push
pusha
xchg
mov
fldl
mov
pop
adc
pop
out
jns
pop
shl
andb
out
repz
or
lahf
xor
test
sbb
stos
push
dec
push
xor
mov
xor
pop
and
xchg
sub
cmp
inc
fwait
inc
rcrb
cltd
cmp
dec
jno
xchg
push
into
shll
xchg
jg
mov
xchg
push
and
aas
mov
push
jmp
cld
xor
push
out
in
sub
cli
cmpsb
sbb
mov
xor
cmpsb
sbb
arpl
imul
push
icebp
sub
push
sbb
mov
xor
cld
jmp
dec
pop
pop
inc
out
dec
mov
scas
shl
xchg
sbb
test
push
lret
test
pop
gs
test
and
cmp
mov
push
fcoml
pop
movlps
jle
pop
fiadds
jne
fistpl
rcrb
xorb
aas
cmp
xchg
xchg
outsl
scas
add
ja
aaa
cmp
fsubrs
sbb
push
gs
cmp
mov
push
scas
mov
xchg
and
stos
xchg
enter
pop
scas
xchg
popa
mov
add
rcrb
aas
inc
and
icebp
js
lret
push
rolb
push
pop
pusha
sysret
daa
mov
ss
xchg
fldenv
testb
xchg
pop
mov
pusha
les
nop
int3
xchg
xchg
int3
jbe
adc
mov
push
leave
add
adc
into
cwtl
and
testl
mov
pop
or
lds
in
pop
ds
push
and
pushf
and
push
pop
adc
shl
cli
arpl
lods
ud2
pop
ja
and
stos
lods
in
pop
in
sub
imul
xchg
and
rclb
clc
mov
mov
aas
dec
xchg
inc
call
dec
call
add
jp
outsl
dec
push
test
cmp
ljmp
sbb
shlb
sti
add
pop
in
insb
lods
cs
and
aam
icebp
les
sbb
jmp
stos
fistpll
loopne
pusha
fcompl
xorb
aas
jo
inc
adc
repnz
cwtl
add
push
push
es
mov
adc
or
jns
add
sub
inc
adc
lcall
xchg
lahf
jne
push
mov
mov
aad
arpl
insb
addr16
ljmp
jae
mov
das
pop
pop
add
mov
pop
aaa
maskmovq
stc
leave
in
insl
ss
imul
pop
fs
std
adc
ja
idivl
pop
mov
mov
pop
xchg
jae
fiaddl
testl
jb
lods
pushf
insl
imul
orb
adc
mov
sbb
les
inc
and
jecxz
mov
push
data16
sub
sub
jb
cmp
addr16
insl
jb
iret
addr16
mov
jns
and
js
jne
xor
cmp
sbb
subb
inc
and
enter
cld
daa
adc
pop
inc
mov
inc
xor
xorl
rorb
ja
scas
into
mov
jecxz
lea
or
cmp
mov
fists
stc
enter
dec
addr16
out
mov
leave
xchg
mov
xor
or
pusha
orl
dec
ja
dec
lret
cmp
in
loopne
cmp
pop
push
rcrl
ds
jmp
xchg
das
rcl
mov
mov
cld
mov
in
mov
insb
icebp
iret
sub
inc
mov
pop
gs
sub
mov
fcmovb
xor
sub
jne
lret
ss
dec
lret
cli
js
fisttpll
outsb
dec
arpl
test
es
int
inc
pop
out
test
imul
lea
mov
xadd
add
mov
or
rcrl
mov
shr
mov
lock
sahf
sbb
jmp
add
loopne
inc
add
adc
lret
xchg
adcl
cmp
lods
sub
scas
mov
call
insb
mov
sub
xor
pop
test
arpl
sbb
cmp
push
rcrl
jmp
adc
inc
mov
adc
jns
pop
hlt
aad
repnz
pop
mov
cmpb
fisubl
inc
sub
loope
sub
adc
xchg
jle
pop
inc
xchg
mov
jno
das
mov
inc
xchg
sbb
mov
jecxz
clc
ja
xor
jle
xchg
sbb
loop
mov
dec
xor
das
outsb
cmc
mov
mov
xchg
mov
in
cmp
and
loop
xchg
testl
add
lcall
lret
fstpt
mov
xor
mov
mov
popl
lret
pop
in
pop
jmp
push
push
push
jns
mov
push
cmp
daa
pop
int3
or
sbb
ljmp
jmp
sbb
dec
mov
sbb
jmp
cmpsb
cwtl
cmp
adc
arpl
or
dec
dec
aad
add
outsl
xor
call
fcomi
mov
sbb
adc
out
xchg
loope
xchg
xor
or
push
in
push
out
adc
xchg
movsb
jns
mov
and
cltd
imul
rcrl
jmp
inc
je
mov
jle
adc
cli
inc
dec
or
shld
inc
and
jecxz
popa
push
or
cmc
pop
mov
cltd
mov
ja
icebp
or
insb
cmp
push
rcll
popa
jecxz
add
cli
hlt
movsl
test
push
call
outsb
fiadds
xchg
les
xchg
mov
jbe
and
dec
loop
dec
jbe
add
in
in
movsl
push
add
jbe
jle
es
xor
xchg
mov
jne
cli
xchg
cli
popa
inc
mov
loopne
mov
ss
loop
sub
xor
das
movsl
xorb
int3
in
filds
stos
jle
lret
orb
jmp
std
adc
loopne
push
sarb
jns
push
xlat
inc
mov
push
push
fadds
jnp
lret
les
inc
mov
dec
jecxz
lahf
test
stos
pop
pop
arpl
into
push
lret
mov
lret
std
es
mov
and
cmpb
pop
cmp
icebp
std
pop
or
lret
push
mov
mov
inc
sub
sbb
fisubs
shlb
push
std
cmp
test
sub
sti
adc
or
mov
out
push
or
and
lahf
mov
loopne
sbbl
lea
aas
std
jp
pop
pushf
cmp
push
xchg
shrl
xchg
mov
mov
fcomi
jae
andb
dec
fistps
pop
jg
fisttpll
scas
dec
xchg
outsb
insb
sbb
add
sub
daa
sbb
sarl
orl
roll
es
add
cmp
popf
pop
xchg
aaa
in
nop
or
mov
lret
and
das
mov
xchg
mov
leave
test
fcmovu
popf
mov
xor
or
lret
lods
movsl
cmpsb
sub
lods
insl
jecxz
stc
jns
out
ret
mov
mov
dec
or
and
fisttpll
pop
into
test
out
fwait
cmp
jne
dec
shlb
cmp
in
mov
orb
arpl
dec
sub
jmp
aam
lock
mov
cmp
sub
notb
notl
pop
rcrl
adc
pushl
jg
pop
stc
popf
inc
cmp
ds
sahf
dec
push
push
push
aam
add
cmc
aas
into
dec
mov
loope
pop
xchg
jbe
sbbb
das
push
out
and
inc
mov
aam
fsubrs
daa
inc
cmp
jns
adc
pushf
in
mov
mov
push
sbb
into
and
fs
cmp
xchg
push
fstps
sbb
fistps
dec
cmp
iret
mov
flds
jbe
or
arpl
lods
ss
sti
iret
add
mov
incb
popa
mov
mov
out
dec
outsl
pop
push
loope
inc
and
out
pop
xchg
and
popl
into
adc
xchg
jecxz
xchg
pop
or
in
jae
lahf
repnz
inc
pop
pop
pushf
dec
call
shrb
jp
sbb
scas
jecxz
pop
sbb
adcl
ss
mov
ret
sbb
inc
inc
add
icebp
push
cs
mov
pop
sti
pushf
movsl
mov
dec
leave
divb
ret
pop
pop
out
push
mov
and
dec
sbb
sub
cmp
repnz
jnp
ftst
lods
xor
movsl
and
xorl
add
pop
test
xor
push
inc
xor
test
sahf
mov
lret
sub
cmpsb
dec
inc
jb
cmpsl
out
call
mov
jp
add
dec
imul
jne
test
lcall
jnp
and
push
int
ds
imul
xchg
scas
test
arpl
testl
outsb
jle
icebp
andb
xor
popf
popf
pop
call
lock
and
xor
mov
sub
dec
and
pop
jnp
dec
inc
jmp
pop
dec
mov
xor
fsubrs
inc
in
mov
xchg
insb
mov
xor
lahf
mov
mov
mov
scas
call
ljmp
sbb
mov
stos
lods
imul
cltd
in
inc
loopne
cmp
ss
call
sarl
mov
jl
gs
xor
cmp
mov
lods
and
out
outsb
and
mov
rolb
in
aam
or
ficompl
stc
mov
mov
pop
cld
cwtl
sbbl
sub
and
jle
inc
pop
sbbb
mov
inc
adc
mov
jo
rcrb
aad
push
enter
pop
out
shll
lods
jmp
pushf
outsb
mov
pop
dec
xchg
and
sbb
test
inc
push
lds
andb
imulb
sbb
imul
jge
sub
cmp
cmp
add
cmp
fdiv
movsb
and
xor
ja
in
mov
jo
mov
mov
sub
movsl
arpl
sub
or
repnz
arpl
sbb
inc
icebp
jb
dec
lcall
lods
add
out
popf
imull
cmp
sub
aad
repz
dec
imul
or
les
adc
out
inc
lret
out
ret
sub
ret
mov
or
sub
xchg
repnz
jne
xlat
mov
inc
cltd
sbb
orl
insb
dec
or
outsl
sbb
fcoml
pop
repz
cmp
pop
insb
stc
icebp
push
mov
test
test
dec
add
pop
push
mov
pop
imul
out
push
cmc
outsl
test
pop
nop
adc
insb
iret
rcrl
loop
out
cmp
and
outsl
je
int3
dec
mov
xchg
loope
shll
push
sahf
imulb
or
add
add
ljmp
pop
inc
ret
and
sub
cmp
dec
clc
mov
sarl
stos
mov
mov
dec
iret
popa
xchg
ret
jne
sbb
inc
rolb
cmp
push
mov
add
repnz
jg
mov
pop
cmp
inc
dec
rcrb
mov
mov
cmpsl
push
fcompl
loope
dec
sub
push
out
dec
arpl
push
rorb
mov
adc
jg
mov
jge
out
jbe
push
dec
outsb
mov
xchg
add
aad
je
shrb
mov
lret
imul
pusha
insl
mov
xchg
mov
sub
lds
xchg
decl
mov
addr16
test
cmpsl
mov
arpl
xor
push
add
push
stc
lahf
loope
sbb
add
lds
add
add
inc
aad
loopnew
push
sbbb
lret
lahf
push
adc
filds
pop
cmp
mov
aam
daa
std
jne
shll
or
pop
ja
sub
mov
xchg
out
jg
inc
sarb
mov
cltd
xor
jbe
rcl
loopne
cmp
or
std
shrb
ljmp
loope
adc
pop
andb
fmuls
fwait
sbb
je
sub
into
xor
xchg
mov
xchg
icebp
imul
stos
mov
mov
sub
xor
fwait
dec
rcll
ss
test
idiv
ljmp
rorl
imul
push
pop
cmp
pop
nop
fcompl
adc
rorb
mov
and
orl
pusha
add
movsb
iret
mov
fld1
in
fstpl
mov
xchg
xor
call
iret
and
mov
pop
aas
aaa
popa
rol
adc
mov
jbe
mov
and
sub
or
jne
shlb
pop
je
add
push
sarb
jae
adc
dec
xchg
add
fs
push
mov
jb
add
mov
cli
sbb
jp
inc
sbb
and
aad
cmpsl
in
jns
sub
push
inc
xchg
mov
pop
fwait
push
and
leave
das
and
push
mov
xchg
movswl
add
dec
into
fimuls
rclb
sti
fidivl
daa
sub
adc
hlt
xchg
push
mov
call
sbb
mov
shrl
scas
sbb
xor
mov
pop
rcrb
icebp
and
insb
bound
pop
call
mov
mov
xlat
inc
pop
add
mov
stos
mov
fucom
test
cld
xchg
mov
cmpsb
shll
idivl
sub
jnp
sub
and
sub
in
lods
mov
or
jo
cmp
push
call
arpl
xchg
xchg
rcrb
stc
mov
hlt
mov
sbb
out
dec
pop
inc
in
inc
addr16
iret
adc
pusha
push
jbe
mov
lret
mov
and
add
mov
rorb
popa
jnp
mov
stos
pop
jge
test
mov
fsubrl
frstor
imul
mov
jb
gs
aas
cltd
cvtpi2ps
sahf
push
cltd
jae
fstpt
idiv
mov
rcl
jge
inc
pop
dec
xor
gs
dec
cmc
cld
ds
icebp
lahf
xchg
add
ljmp
fiadds
inc
pop
push
sbb
mov
xchg
imul
sbb
add
out
loope
popa
out
jne
inc
out
sbb
cltd
mov
sub
ss
push
ljmp
int3
addb
fildl
js
in
xchg
or
lds
mov
dec
jns
xchg
xor
cmp
xchg
and
in
dec
push
rcrb
lds
mov
dec
lcall
jecxz
test
and
mov
out
notl
insb
jmp
sbb
sbb
or
jge
jge
aaa
cmp
dec
mov
fists
and
test
push
cmpsb
inc
icebp
add
mov
pop
vpshufd
hlt
xchg
cld
fmul
data16
inc
out
cmpsb
pop
sbb
mov
mov
stos
jb
aas
es
test
add
mov
sub
stos
in
xchg
dec
push
subb
les
sub
pop
sbb
lcall
push
test
pop
pop
out
cmpsl
mov
mov
pushf
ret
jb
int3
das
test
popa
xor
fsubrl
mov
ret
pop
ret
nop
mov
cmp
dec
jns
flds
stc
jecxz
dec
cmc
mov
inc
dec
mov
mov
xor
xchg
cmc
into
ds
pop
add
std
test
out
push
loope
iret
mov
addl
jmp
add
mov
jmp
mov
aam
ds
push
shlb
push
enter
sbb
mov
fisubl
int
pop
movsb
or
enter
push
cli
adc
xlat
adc
mov
in
lret
rclb
into
mov
arpl
sub
sub
mov
pop
ljmp
and
and
in
push
dec
lret
jb
scas
testb
cmp
fisttps
lahf
outsl
cli
sub
jecxz
jbe
daa
or
inc
ljmp
in
push
loopne
ja
ret
fstpl
bound
cld
jle
int3
sbb
lods
in
inc
sahf
scas
and
lods
pop
mov
je
sahf
sub
mov
xor
lea
inc
popa
rorb
frstor
mov
jl
dec
jl
fdivr
lea
push
mov
xor
add
jo
xorb
pushf
jle
push
mov
inc
js
sbb
inc
hlt
jecxz
push
insb
dec
sbb
bound
daa
sbb
jo
sbb
sarl
or
das
insb
mov
xor
jl
popf
inc
lret
out
imul
shlb
xor
mov
out
mov
outsb
mov
xor
dec
dec
add
stos
jecxz
adc
fs
pop
popa
xchg
sbbl
mov
dec
cmpsl
mov
aaa
xchg
mov
adc
and
xor
and
int3
push
testl
and
and
mov
sub
mov
out
pop
rcll
mov
xor
les
mov
jo
push
out
add
mov
push
loopne
ficoms
inc
fistpl
popf
mov
or
sbb
jae
xchg
cmpsb
aaa
mov
jmp
inc
inc
pmuludq
idivl
xchg
mov
push
mov
mov
int3
loopne
inc
lahf
cmp
scas
cs
push
push
jns
adc
pop
jp
inc
out
fsubrl
push
push
fcompl
jbe
mov
cwtl
lock
pop
dec
push
dec
xor
iret
popa
mov
aaa
rolb
out
sub
mov
jae
test
cmpsl
push
cli
popf
shlb
fadd
mov
mov
inc
add
pop
test
dec
push
xchg
jb
call
fildl
lahf
add
mov
sar
stc
push
test
shl
stos
repnz
das
push
int
cmpb
mov
dec
sub
sbb
xor
loop
adc
shll
or
outsb
int3
icebp
push
jecxz
orl
inc
sub
jne
xorb
sbb
jnp
dec
and
push
hlt
inc
mov
data16
cs
mov
cmpb
and
insb
jbe
xchg
xchg
sti
mov
cld
subb
loopne
add
test
scas
imul
repnz
imul
and
lret
mov
inc
inc
cmp
insb
and
test
mov
insl
bound
subl
stos
lds
dec
shrl
daa
loopne
xchg
push
push
push
xchg
inc
mull
ljmp
mov
push
dec
mov
push
mov
sbb
or
and
mov
lea
push
adc
cmp
movsb
pop
sbb
mov
or
push
cmp
and
dec
xchg
mov
shll
or
mov
mov
cmp
popf
out
pop
je
outsb
xchg
xor
rcr
gs
xchg
jecxz
into
dec
fcomip
aaa
cmp
ljmp
inc
push
cmpsl
adc
pusha
iret
adc
leave
insl
jnp
and
jo
popf
dec
loop
inc
ret
sub
lods
push
cmp
inc
pushf
inc
clc
out
daa
fcmovne
mov
cmp
cld
cli
pop
fs
aad
push
sahf
lods
dec
fcoml
add
popf
insl
aam
lds
aas
ds
sti
cltd
adc
ret
and
push
mov
add
aas
aaa
lcall
fildll
dec
je
fldcw
les
iret
orb
xlat
cltd
jg
popa
mov
pop
sub
popa
xchg
pop
push
sti
xchg
sahf
jge
dec
jecxz
test
jge
dec
movsl
xchg
and
fwait
push
int
mov
es
sbb
sbbb
out
fbld
cmp
leave
xor
cmp
mov
push
jne
and
mov
sbb
lock
mov
orb
pop
ds
stos
mov
push
bound
imul
xchg
pop
std
cld
adcl
mov
pop
addl
mov
add
sarl
cltd
xlat
jecxz
pop
aas
test
icebp
jecxz
test
arpl
test
cmpsl
mov
push
pop
mov
aaa
testb
mov
in
ror
pop
mov
push
lahf
sub
gs
pop
add
pop
and
stos
pusha
shufps
jge
lret
push
das
insb
insb
ss
arpl
rorl
jp
push
daa
jge
adc
movl
fsubs
ss
bnd
icebp
dec
lea
imul
push
hlt
inc
into
js
aam
popf
push
pusha
imul
push
lods
push
idivl
and
inc
ret
aaa
fimuls
mov
push
push
arpl
in
shl
xor
sub
arpl
lea
and
dec
cmc
mov
push
push
pop
inc
sbb
mov
xchg
lds
dec
adc
dec
scas
lahf
hlt
lcall
pop
mov
shrb
imul
add
cmp
or
sub
jno
adc
pusha
repz
cmpsb
xchg
fs
mov
pop
cltd
in
pop
push
xchg
cmpsb
int3
rorl
and
lea
and
inc
imul
movsl
out
mov
in
cmp
outsb
push
add
insb
mov
jb
aam
mov
dec
xchg
out
xchg
mov
cmp
movsl
fs
mov
je
jmp
sbb
out
into
insb
lcall
insl
ss
rcrl
xor
push
mov
cmpl
aam
sub
nop
sub
ret
mov
jb
mov
dec
cmp
cltd
sahf
or
ret
cmp
jecxz
jo
inc
lret
adc
in
cmp
mov
adc
ds
movsb
pop
pop
fidivrl
sbb
sub
fnstenv
jmp
movsl
cmp
loope
scas
cmpsb
or
xrstor
test
jge
fldl
push
pop
pop
jne
dec
mov
xchg
rcrl
mov
sbb
push
jns
mov
inc
xchg
hlt
jbe,pt
add
lret
rorl
clc
std
daa
dec
fwait
push
inc
imul
insb
pusha
ss
cmp
mov
pop
xchg
fdivr
lods
jmp
int3
pop
aad
or
out
push
sbb
iret
div
imul
loop
cs
push
data16
lods
outsl
pop
int
loope
dec
shll
andl
test
jmp
and
js
inc
or
fcomi
stos
in
movsl
sub
mov
push
mov
test
cmpsb
repz
xchg
imul
insb
or
daa
pop
insb
loopne
into
cmp
arpl
ficompl
aad
and
sbb
call
inc
into
lret
loopne
add
int
rcll
pop
sbb
xchg
or
jge
or
and
mov
js
test
lods
ss
inc
sub
loop
lahf
sarb
xor
test
jns
cmpsb
mov
in
mov
sub
mov
push
icebp
js
les
cli
jnp
call
aas
pop
mov
mov
loope
sahf
sbb
loope
cmp
scas
enter
clc
aam
scas
testb
insb
stc
or
xlat
and
dec
xchg
xchg
pop
or
pop
inc
xor
dec
mov
jmp
mov
push
in
push
in
add
shll
inc
and
inc
add
add
mov
xchg
sbb
xchg
mov
fildll
lahf
and
lods
mov
inc
inc
call
lds
rolb
mov
pop
scas
pop
jmp
and
ret
sub
add
sub
imul
mov
xchg
mov
pop
add
mov
ja
push
inc
inc
sbb
icebp
icebp
or
pop
cmpsb
jno
cmp
or
dec
subb
pop
or
roll
outsb
sub
mul
mov
aas
jb
mov
fwait
jbe
pop
pop
sbb
mov
sub
int3
mov
mov
jle
sbbb
cwtl
mov
divb
mov
jae
add
sbb
mov
mov
outsl
jecxz
movsb
add
cwtl
adc
mov
lcall
cmp
ja
sbb
jnp
aam
out
mov
fcomps
mov
lret
mov
dec
sbb
mov
mov
push
cld
mov
mov
mov
test
xchg
fwait
roll
je
movsb
dec
cltd
pop
pop
out
mov
jge
ja
fcomps
sub
call
fcomip
push
je
testl
in
or
das
sub
xor
dec
pop
xor
int
enter
in
dec
leave
imul
into
sbb
and
inc
cmp
mov
mov
fldt
cld
les
xchg
push
or
dec
mov
lret
mov
sahf
inc
sti
mov
jmp
jecxz
cwtl
pop
popf
mov
in
push
loope
test
insb
pushf
jge
jnp
jge
repz
mulb
sar
xor
cmp
mov
push
loop
and
sub
out
fdivrp
and
lods
and
das
fsubrp
rclb
sub
xor
xlat
lock
adc
cmp
fidivrs
jecxz
xchg
test
test
mov
push
jmp
xchg
xor
mov
nop
enter
js
in
sub
mov
xchg
insl
imul
aam
aas
adc
pop
mov
push
mov
mov
sbb
add
inc
sbb
mov
lahf
mov
ljmp
hlt
sbb
in
lea
and
jg
push
inc
adc
pop
sbb
xor
inc
sub
lods
dec
jmp
popl
adc
scas
cmp
aaa
testb
call
dec
mov
aad
data16
loop
xor
adc
inc
jo
xchg
std
outsb
jle
addl
or
and
or
loopne
sbb
sub
jmp
pusha
cmp
xor
mov
mov
out
mov
fistpll
js
push
sbb
fidivl
fnstcw
in
cmp
enter
into
jp
out
mov
in
je
rcr
iret
pop
cwtl
lock
push
lret
dec
and
xchg
mov
mov
pop
xor
pop
fiadds
sub
xchg
and
jno
mov
sub
jle
stos
ret
push
pop
fmul
push
test
fdivs
adc
fdivs
xchg
jge
insb
xchg
push
sbbl
push
pop
mov
in
testl
dec
pop
adc
cmp
push
xchg
xor
mov
lods
or
push
add
inc
aam
sbb
arpl
pop
mov
xchg
jne
or
gs
fxch
cli
mov
sbb
adc
xchg
ja
pushf
in
int3
fisubs
mov
loope
rclb
and
sbb
jge
sbb
mov
mov
mov
dec
mov
jmp
stos
imul
sub
test
push
or
insl
or
mov
daa
ret
push
xchg
int
or
cmpsb
push
sbb
or
test
scas
shrb
xor
cmp
repnz
pop
enter
cmp
cli
test
pushf
xor
fimull
mov
jb
pop
pop
ret
xchg
lods
jge
scas
ffree
les
int3
mov
lods
mov
in
mov
add
jo,pn
test
lahf
js
out
xchg
pop
nop
les
xchg
dec
aad
test
pop
xor
pop
cmp
inc
dec
cmp
xchg
jne
add
jge
sub
adc
les
aaa
out
fdivrl
pop
mov
mov
and
xor
sub
neg
xchg
loopne
clc
jno
cld
and
imul
inc
scas
arpl
loopne
add
add
stos
jae
jns
lcall
pop
mov
int
sbbb
adc
outsb
setbe
lcall
test
mov
xor
inc
or
jge
and
sbb
push
sub
cwtl
pop
xchg
mov
xchg
mov
stos
fstpt
lods
jo
rorl
subl
mov
jae
nop
xchg
mov
insb
jno
sbb
push
dec
in
sti
or
cwtl
push
or
mov
pop
dec
das
ds
jle
aaa
cs
pusha
dec
push
jno
in
jecxz
insl
in
xchg
ret
xchg
lcall
inc
mov
dec
mov
ja
and
mov
stos
mov
idiv
stc
aad
popa
test
jns
arpl
fwait
sub
notb
lods
fistl
and
lret
mov
pop
hlt
sub
jne
icebp
cmp
pop
lods
push
bound
sub
ret
cs
test
pop
jmp
dec
sub
mov
sub
js
pop
gs
sub
mov
jp
sbb
pop
pop
clc
mov
lahf
cmp
dec
mov
add
push
pop
adc
push
or
pop
add
inc
js
pop
xor
pop
or
xor
mov
bound
js
mov
dec
lds
addl
mov
xor
jno
clc
xchg
mov
push
pop
xor
aaa
xchg
or
rclb
mov
push
add
jne
mov
stos
mov
int
testl
or
jne
cmp
push
xchg
mov
mov
xchg
sub
adc
dec
jae
cltd
std
shr
cmpsl
mov
xchg
movsl
fucomp
push
pop
inc
bound
pop
push
out
popa
mov
aas
stos
js
push
dec
mov
sub
in
pop
out
popa
rorl
push
hlt
mov
aas
pop
sbb
or
mov
mov
inc
aaa
xor
dec
add
adc
adc
xlat
or
push
das
or
mov
shl
mov
push
and
adc
out
cmpsb
inc
and
fs
imul
out
xor
add
lods
and
repnz
jp
xchg
add
aad
mov
push
jecxz
fstps
cmp
jo
aad
jno
mov
pop
sub
sahf
dec
andl
xor
pop
pop
dec
les
mov
fcomps
push
push
mov
mov
gs
mov
mov
stc
mov
aad
cli
push
mov
call
mov
popf
repz
add
in
movsl
fwait
xchg
dec
andb
int
leave
jmp
mov
clc
fcmovnbe
cmp
mov
daa
imul
filds
sarl
mov
cmovbe
stc
sbbb
loop
out
ret
stos
sub
hlt
ljmp
cmp
inc
adcb
adc
ljmp
mov
insb
ret
push
xchg
lret
clc
testb
daa
cld
push
inc
xchg
inc
jo
rcrl
rcll
cmp
jno
pop
mov
shll
pop
sarl
sbb
fisttps
jg
inc
mov
mov
imul
mov
add
fimull
mov
xor
jbe
mov
pop
ss
sbb
into
dec
test
sahf
pop
jg
push
xchg
xchg
jns
jns
repnz
xchg
ja
in
subl
loop
roll
fldl
adcb
jae
scas
push
outsb
out
lcall
pop
push
cwtl
in
or
mov
stos
sbb
jmp
xor
xchg
cmp
shl
scas
fdecstp
fnstsw
jp
mov
push
add
lods
push
push
push
arpl
adc
xchg
inc
ret
stos
lret
andl
ret
das
add
jle
js
pusha
clc
sbb
adc
xchg
insb
or
inc
sbb
push
sub
rorl
bound
pop
fs
enter
nop
jbe
mov
adc
shll
sti
data16
cs
dec
icebp
push
inc
nop
cmpsl
xchg
adc
aas
mov
loope
movsl
xor
mov
inc
xchg
pop
add
xchg
xor
dec
clc
adc
testl
sbb
jmp
aam
add
mov
cli
mov
and
push
or
cmp
mov
ret
sbbb
push
cwtl
cmc
pop
pop
test
jb
push
mov
push
call
adc
std
imul
inc
aaa
push
push
stos
and
lds
les
cmpsl
pop
sbb
or
pop
aaa
adc
insb
push
jnp
gs
enter
push
jecxz
cmp
imul
cld
inc
pop
pop
mov
sbb
jne
pop
enter
mov
fcmovnb
aaa
ss
pusha
movsb
in
push
cmpb
popf
icebp
out
es
cmp
sub
popf
movsl
cmc
fistps
mov
jno
xchg
call
testb
add
xor
lods
add
mov
arpl
pop
or
divl
dec
rcll
shl
fidivrl
fldcw
std
xor
xchg
nop
dec
idivb
sbb
mov
jno
cmp
dec
inc
out
cmp
jle
xor
or
int3
sub
push
shrb
cmc
jns
xchg
nop
push
inc
aam
push
jnp
das
and
ja
cmp
sbb
mov
pop
mov
movsb
xchg
std
cmpsl
xor
add
xor
mov
arpl
out
xor
jns
or
xchg
add
sub
jge
jl
fistpl
cmp
add
xor
in
push
popa
pop
into
jno
mov
mov
lret
call
mov
sbb
and
or
popa
lahf
jmp
into
jge
and
arpl
out
mov
popa
xchg
cmp
test
jae
mov
out
cmpb
in
xchg
mov
hlt
cmp
and
in
push
lcall
xchg
sbb
outsl
cmc
outsb
in
jbe
dec
pop
test
sbbl
adc
test
sti
add
jne
es
aas
xchg
xor
mov
imul
shrb
or
cmp
xchg
inc
lret
pop
mov
and
loope
and
int
xchg
and
inc
sub
out
clc
jg
addb
push
sbb
repz
inc
inc
adc
lcall
mov
jmp
jbe
fcmovne
ljmp
xlat
shl
aad
lods
push
jge
inc
popf
cld
push
cli
pop
jns
int3
mov
test
mov
jbe
jg
pop
out
push
es
in
push
out
inc
mov
sub
aaa
xor
push
inc
sub
jmp
xor
jo
mov
fs
mov
mov
mov
pop
dec
jle
cmc
mov
sti
cmp
inc
add
jbe
fwait
xchg
or
mov
stos
pop
adc
mov
stos
jb
jge
mov
shl
sbb
mov
add
arpl
push
adc
out
insl
mov
and
popf
inc
ss
insb
ret
roll
leave
jg,pn
pop
adc
insb
cmpsl
insb
fmull
lcall
mov
test
jo
and
adc
inc
cmp
push
ret
xor
sub
fdivl
stos
insb
insl
xor
push
xchg
fmull
and
lds
lds
and
test
lret
sbb
pushl
arpl
sub
fcoms
adc
popf
aad
sbb
ret
inc
mov
ret
rcl
out
in
and
stc
lods
out
dec
or
sub
iret
clc
les
jle
sub
xchg
les
fsts
sub
mov
and
lods
lea
sub
mov
jnp
cmp
enter
inc
stc
bound
mov
inc
js
inc
inc
arpl
and
fsub
in
addr16
mov
mov
mov
test
aad
lock
imul
cli
add
daa
dec
xchg
add
pop
inc
jg
repnz
add
test
aaa
pop
clc
lea
mov
push
cld
test
fstps
fiadds
sub
ret
cmpsb
out
std
pop
push
cmpsb
xor
fcmovb
fs
cmp
mov
mov
xor
and
stc
mov
test
mov
or
sub
js
es
mov
outsb
pop
sub
adc
fistps
andl
fdivrp
mov
jo
pushf
mov
mov
dec
cld
mov
out
pop
insl
xchg
mov
sbb
ja
jno
loopne
add
ror
add
aaa
pop
inc
xlat
out
cmp
push
test
inc
xor
cmp
jae
xorl
push
or
orb
aaa
cli
dec
dec
in
mov
xchg
lods
adc
dec
mov
cmp
inc
shrb
int
adc
out
jl
xor
jbe
negl
mov
ret
sbb
lods
dec
addr16
mov
rcl
lret
cmp
sbb
push
aaa
sbbl
dec
sub
inc
sahf
mov
aaa
mov
add
jbe
dec
cmp
popa
enter
inc
int
imul
andl
shrb
pushf
out
cmp
mov
test
lret
data16
inc
jno
pushf
pop
cltd
hlt
loope
pop
inc
stc
inc
std
mov
or
push
mov
mov
jne
test
js
scas
mov
packsswb
nop
mov
jo
jno
push
push
es
inc
out
cmpb
dec
cmp
stos
jp
rorb
xchg
sbb
adc
aas
mov
insl
ficompl
dec
jmp
add
rclb
mov
test
in
loope
imul
adc
or
arpl
mov
test
shlb
push
subb
test
int3
add
mov
pop
cmpsb
xor
cmp
sbb
ds
ret
out
xchg
sub
jg
xchg
fisubrl
je
pop
and
ret
xchg
mov
or
sub
jmp
jb
rcrl
jge
sbb
movl
es
and
pop
addb
sub
test
ljmp
into
xchg
push
xchg
adc
xor
jno
ficomps
and
das
std
xchg
stos
push
push
jg
cld
lret
in
cli
xchg
sbb
pop
imull
cmp
or
hlt
jne
std
pushf
repnz
test
loopne
lahf
stc
cmp
cmp
push
cwtl
cli
stos
xchg
fists
mov
mov
or
fwait
popa
add
jmp
lahf
mov
jecxz
iret
jbe
shl
bound
jnp
aad
push
pop
std
fisubrl
daa
or
or
addr16
je
pop
mov
dec
sbb
xchg
je
mov
cld
pop
stos
sbb
mov
pop
xchg
ljmp
out
idiv
insl
add
cmpsl
rorl
icebp
jmp
mulb
mov
jge
mov
and
mov
arpl
arpl
jge
push
loopne
add
mov
mov
sub
mull
and
das
dec
xor
pushl
pop
fwait
aaa
leave
cmp
pusha
arpl
clc
ret
aad
inc
idivb
xchg
mov
add
jne
cli
sbb
xor
jmp
add
push
inc
jle
mov
xchg
mov
sti
inc
add
mov
jge
lock
push
xchg
inc
add
mov
rclb
cli
out
cmp
inc
pop
pop
shlb
cmp
mov
mov
dec
vpextrw
lds
xchg
test
sbb
jno
sbb
int3
jno
or
jno
stos
notb
xchg
sbb
sub
adc
lods
adcb
imul
mov
dec
cmpsl
cmp
outsb
xor
fs
dec
add
inc
ljmp
and
pop
adc
andb
dec
or
int3
mov
out
lea
sbb
lea
xchg
xchg
andl
pop
or
jae
ret
jno
mov
sbb
popa
push
inc
fadd
pop
pop
and
push
cltd
push
and
addr16
sub
lret
pop
iret
rclb
push
mov
cmp
or
out
xchg
xchg
popf
mov
mov
divb
mov
js
cwtl
xor
inc
jg
js
out
ficoml
jl
jl
push
jae
orl
repnz
shl
adc
test
es
dec
push
jne
aas
push
out
or
cmp
shrb
out
cmc
ja
mov
testb
cld
mov
movsl
mov
push
lea
sbb
xor
out
fwait
mov
or
mov
and
mov
push
pusha
xor
xor
inc
dec
add
nop
sbb
fs
and
sbb
imul
mov
dec
lods
cs
iret
std
add
push
fisttpl
scas
pop
repnz
sbb
mov
inc
push
outsl
inc
in
mov
dec
stos
std
add
imul
cmpsb
xchg
mov
scas
rcll
mov
js
loopne
xchg
subb
cld
inc
jb
stos
pop
je
pop
xchg
sub
push
cmc
mov
pusha
sub
pop
cs
inc
cmpsl
mov
fstps
fdivrs
sub
sub
mov
std
mov
js
lds
fld
lods
imul
pop
mov
addr16
inc
movsl
xor
outsl
mov
mov
sbb
int
lods
aam
jae
or
xor
lret
or
jg
in
mov
stos
pop
lret
xchg
repz
jg
rcrl
je
push
mov
xorl
mov
lds
or
sarl
xor
jns
daa
mov
add
aad
adc
mov
push
sub
add
cmpsb
xchg
mov
inc
bound
rolb
sub
add
or
mov
repnz
sbb
sarl
inc
shrl
dec
repnz
addr16
adc
cltd
pop
pop
std
ret
sar
inc
mov
pop
cmp
imul
setb
sti
orb
or
mov
add
mov
cmpsb
cmp
mov
or
movsb
enter
mov
jno,pn
shlb
jns
pushl
xchg
mov
cwtl
aas
jo
xchg
imul
test
cmp
clc
fwait
pop
adc
shrb
adc
jns
in
or
adcl
cltd
popa
push
adc
in
push
dec
inc
testb
sub
mov
test
and
test
fisubrs
lods
dec
sub
push
jne
idivl
mov
cwtl
in
dec
mov
or
jbe
mov
jae,pt
pop
arpl
adc
mov
or
xor
mov
lods
rorb
lret
loope
aam
out
clc
cltd
add
in
out
dec
mov
pop
xchg
inc
test
pop
pop
popa
shlb
lret
xor
adc
lahf
dec
out
loopne
sbb
mov
jne
ficomps
inc
sarl
ds
fmuls
insl
push
inc
outsl
push
cli
jmp
mov
cs
adc
adcb
push
cli
add
outsl
or
mov
addl
sub
mov
mov
adc
xor
jmp
shlb
cmp
dec
jge
lret
jbe
sub
jmp
outsl
xor
test
outsb
adc
roll
cmp
xchg
xor
sbb
addr16
repz
sub
jmp
add
xchg
jb
loope
mov
dec
xchg
mov
mov
test
push
fsubrs
sbb
jle
xor
add
gs
pushf
pop
popa
test
push
jecxz
adc
imul
in
mov
pop
out
cmp
and
notb
and
lret
sbb
adc
inc
int
or
push
aad
fdivs
nop
xor
fmul
enter
movsb
icebp
into
pusha
lcall
fsubs
rcrl
insb
addr16
mov
shl
rcl
mov
nop
pop
dec
repz
sbb
and
jge
xlat
testb
and
lcall
xchg
paddd
shl
es
lock
jo
and
mov
pop
rolb
sub
movsb
xor
jns
dec
jecxz
push
rolb
or
xchg
aaa
cwtl
mov
sbb
sub
out
in
mov
lahf
in
decb
mov
sub
dec
cmpsb
pop
cmp
dec
mov
outsl
xchg
int
loopne
inc
adc
sbbl
jg
adc
mov
or
insb
cmp
icebp
and
scas
xor
daa
enter
insb
insb
xchg
mov
fadds
adc
jmp
xchg
sub
xor
mov
shrl
insl
scas
pop
mov
mov
cs
pop
popf
addr16
inc
xor
mov
jg
add
mov
cli
sub
ret
aas
jp
outsl
rorl
ret
jmp
xchg
sbb
or
jb
jno
pop
mov
ds
outsl
cmc
insb
fnstcw
dec
out
add
sub
inc
or
hlt
cwtl
rol
xchg
push
imul
push
loopne
dec
add
stos
cmpsl
adc
fdivr
loop
in
mov
movsb
adc
int
andb
movb
ficoml
popf
sub
lret
sbb
flds
outsb
mov
jmp
sbb
iret
mov
stc
out
jp
out
xor
inc
jle
insb
divb
test
xor
dec
sbb
sbb
cmp
sbb
push
xchg
lahf
aam
mov
mov
jne
and
xor
and
mulb
movsl
jne,pn
sub
mov
in
sub
lods
jnp
adc
pushf
pop
dec
out
inc
aad
aam
and
sahf
cmp
cmp
sbb
pop
mov
repz
in
xchg
fs
orl
jmp
cltd
test
scas
mov
test
out
jle
cmc
dec
hlt
mov
pop
loopne
adc
sbb
fstps
jbe
sub
cmp
cli
mov
sub
push
xor
jne
mov
dec
lods
cmp
mov
and
sahf
mov
pop
mov
adc
lods
push
or
je
sub
sahf
stc
mov
add
outsb
cmc
pop
mov
in
ss
int
in
pop
rorl
movsl
icebp
iret
loope
jl
imul
ja
out
jge
cmp
push
add
jl
aad
dec
fstps
adc
xor
inc
add
xor
and
sahf
fiadds
inc
sbb
jae
add
in
sub
dec
sbb
adc
out
outsl
ds
dec
jp
sarb
fdivl
inc
cmpsb
xchg
stos
inc
outsl
and
cs
js
ljmp
adc
mov
jno
mov
les
pop
and
fwait
cmp
jae
jae
push
mov
ret
xor
insb
push
mov
lods
pop
jl
arpl
inc
adc
out
mov
lds
pop
xchg
in
fwait
in
out
cmp
addb
in
cs
iret
mov
fadds
daa
and
outsl
xor
pop
iret
popa
orb
sub
jg
rcr
dec
add
xor
lods
rol
lock
scas
insb
lods
in
arpl
mov
push
pop
inc
push
dec
mov
imul
jp
std
push
push
dec
mov
push
aas
push
push
leave
jmp
mov
stc
mov
inc
pop
and
jns
sbb
lcall
sarb
and
das
sub
mov
jb
xchg
mov
mov
mov
adcl
mov
daa
push
dec
mov
sti
in
jb
xchg
cmp
adc
pop
push
add
mov
sbb
add
sbb
mov
push
clc
pop
rcrb
push
fs
mov
inc
pop
in
jg
cmp
mov
or
cmp
xchg
mov
inc
out
add
addr16
repnz
inc
push
sub
sbb
pop
lods
adc
and
aad
sub
cs
push
adc
xchg
pop
fs
jg
fstl
dec
arpl
imul
pop
outsb
sub
lret
sub
mov
bound
cmpsb
adc
push
lods
sub
mov
dec
inc
cld
shrb
push
lcall
aaa
sbb
int3
iret
test
addb
xchg
ja
jb
add
lret
es
xor
out
pop
fisubrs
push
lds
push
ret
jb
xchg
mov
sbb
cmp
xor
jl
cmc
cmp
fs
int3
mov
pushf
mov
mov
inc
nop
push
cmpsl
in
testb
sbb
mov
lret
sbb
jb
jo
push
out
mov
repnz
sbb
mov
sti
stos
cli
add
jg
in
push
and
mov
push
imul
mov
lcall
shll
cli
js
icebp
in
dec
repz
mov
push
popf
cmpsl
ror
add
jecxz
js
dec
or
dec
sbb
mov
outsl
push
dec
mov
push
cs
outsb
xchg
jno
mov
mov
jo
lcall
fstps
arpl
xchg
ds
insb
xlat
and
mov
adc
pop
iret
test
imul
mul
adc
jmp
jnp
push
in
mov
adc
inc
movsl
xchg
mov
fldcw
mov
fs
xorl
jbe
ret
push
jno
jns
movl
pusha
movsl
std
xchg
sbb
dec
jge
mov
inc
shrl
movsl
dec
std
dec
gs
pop
push
sbb
and
std
lea
mov
les
add
jo
scas
mov
hlt
cmp
adc
xchg
mov
mov
lret
fimuls
pop
xchg
int
xor
setge
xchg
dec
pushf
aas
pop
inc
push
jb
in
std
icebp
fwait
mov
orl
cmp
adc
cwtl
pusha
sbb
and
and
adc
add
clc
iret
and
outsl
and
mov
adc
ret
mov
pusha
inc
dec
mov
scas
pushf
push
lahf
and
iret
stos
les
jmp
jae
push
sahf
mov
inc
mov
loope
xchg
pop
dec
push
mov
loopne
repnz
push
inc
xorl
adc
mov
dec
loope
in
rclb
ret
push
inc
testl
testl
push
add
js
mull
pop
fisubs
into
adc
cmpsl
cld
out
out
pushw
mov
add
repz
shll
call
xchg
pop
sahf
cld
les
pop
pop
xor
in
fnsave
cwtl
mov
adc
push
lret
cmp
test
xchg
push
xchg
inc
test
shr
inc
loopne
ror
sbb
je
jge
lret
jmp
xchg
inc
out
and
outsb
add
pop
adc
loopne
and
xlat
jecxz
inc
push
aaa
call
adc
adc
inc
dec
pop
lret
sub
ja
push
xor
jo
xor
iret
add
mov
cmp
add
and
xorl
test
adc
jp
leave
inc
xchg
ljmp
iret
std
outsb
cwtl
pop
or
cltd
call
dec
cmp
data16
std
adc
adc
sahf
pushf
add
popa
rcrb
and
daa
fnstsw
nop
mov
push
add
dec
in
test
push
xchg
push
pop
pop
mov
xchg
pop
push
cmp
negl
mov
int
pop
push
push
pop
jb
jg
xchg
sub
jbe
add
pop
in
xor
lock
sti
es
inc
enter
lock
or
jb
cmc
ret
out
arpl
lea
and
xchg
push
sub
and
les
push
aas
cli
mov
xchg
cmpsl
cmpsl
dec
cltd
add
xor
jmp
pop
roll
add
cmp
adc
mov
jp
pop
or
and
jnp
mov
sbb
xchg
ret
inc
cmp
and
or
test
jae
or
fldl
fucom
stos
mov
rolb
mov
out
inc
clc
push
mov
loope
out
adc
jge
pusha
mov
push
push
add
aaa
in
xchg
mov
pusha
push
inc
inc
pusha
dec
and
hlt
or
xchg
call
shl
jbe
dec
test
dec
es
cmp
push
ret
or
or
test
test
test
scas
inc
mov
dec
xchg
arpl
mov
jle
andb
cmp
sub
sbb
into
lret
add
scas
loop
mov
cbtw
xor
cmp
jmp
mov
or
addr16
sti
inc
push
lods
xchg
cmp
ret
ss
sbb
adc
call
leave
mov
adc
jnp
inc
inc
and
push
adc
jecxz
mov
out
test
jmp
dec
sahf
repz
gs
insl
pushf
ret
scas
jmp
iret
cltd
rorb
cmpsb
inc
dec
aaa
popf
pop
mov
jnp
movsb
mov
pop
pop
out
repnz
sub
mov
push
call
stos
mov
pop
pop
xor
mov
out
sbb
mov
cmp
loope
xchg
or
add
inc
dec
xchg
in
scas
push
mov
pop
icebp
mov
loope
test
inc
pop
push
or
test
ror
push
gs
lahf
sbbb
mov
loope
mov
xchg
sbb
ljmp
xchg
dec
mov
sub
dec
idivl
xchg
xor
mov
test
mov
sbb
test
mov
xchg
push
fcompl
cmp
or
or
jl
out
xor
aad
fnstsw
fucompp
les
idiv
lret
pushf
imul
lret
dec
cwtl
push
and
sahf
pop
push
push
scas
das
sbb
fisttps
sti
in
mov
insb
cltd
dec
dec
outsb
cli
ret
adc
sub
shl
xchg
test
je
xor
aas
xorb
and
into
inc
inc
dec
or
xor
cmc
sub
cwtl
or
loopne
xchg
cmp
adc
test
aad
cmpsb
xchg
outsb
mov
repz
test
xor
ds
sahf
pop
fcompl
sub
mov
test
cli
adc
sarl
stos
dec
je
mov
das
adc
mov
cltd
jbe
add
nop
ljmp
in
sub
iret
call
cwtl
adc
je
xchg
fcoms
inc
arpl
mov
mov
scas
sbb
dec
ja
xor
in
test
mov
pushf
dec
cmp
pop
fistpll
mov
loop
or
mov
mov
lea
out
mov
cmp
stos
dec
negb
add
xchg
ret
mov
cmpsb
push
cld
xchg
lcall
and
pushl
lret
rol
adc
pop
xor
pusha
xchg
notb
mov
push
cmp
mov
sahf
scas
ljmp
push
lods
pop
adc
or
lahf
push
popa
mov
js
sub
pop
sub
fildl
dec
push
sahf
test
dec
cs
sahf
ljmp
cmp
mov
pop
addb
stc
cmc
push
sub
shll
xor
les
je
sub
and
push
push
out
mov
pop
push
mov
shl
mov
popa
clc
jl
push
and
cmp
xchg
push
push
or
in
sbb
popa
dec
imul
sub
outsb
add
pop
movsb
cmp
and
push
lcall
xchg
or
mov
stc
jns
xchg
das
negl
negb
mov
in
cli
inc
js
inc
fnsave
inc
ret
cmp
out
int
xchg
mov
mov
enter
xchg
pusha
fcomp
lds
icebp
mov
add
jns
inc
in
std
inc
ret
fisttpl
jns
jbe
data16
mov
std
outsb
mov
and
mov
out
in
scas
popa
jns
aam
xchg
imul
shl
or
jbe
sti
arpl
jg
add
in
in
dec
test
or
push
sub
jns
das
cmpsb
fs
mov
outsl
or
mov
fxch
lahf
pop
mov
jge
jmp
incb
inc
dec
into
loopne
stos
cmpsb
in
je
xor
shlb
inc
sti
loopne
sti
outsl
inc
jg
mov
jae
push
fistl
and
lret
push
mov
sub
pop
adcl
xchg
adcb
rcrb
push
pop
sbb
add
xchg
enter
rolb
jp
and
lahf
mov
daa
insl
or
xchg
xchg
lret
jle
inc
repz
pop
or
push
inc
imul
sub
sub
adc
imul
insb
insl
test
push
xor
or
push
jl
call
push
or
mov
adc
scas
movq
or
out
fisttpl
ja
or
push
retw
mov
lds
fisubrs
pop
jg
imul
ljmp
lcall
imul
test
ljmp
mov
or
movsl
mov
pop
sbb
push
es
xor
jmp
cli
mov
int
mov
mov
mov
lcall
popa
mov
sbb
and
cmp
mov
popa
cmp
inc
and
leave
out
test
out
mov
sub
mov
out
pusha
repnz
bnd
jnp
push
mov
outsl
clc
fistpl
bound
dec
in
xchg
ds
std
int3
ret
les
nop
into
fs
push
xlat
les
imul
int3
insb
rcrl
sbb
sahf
jne
iret
inc
pop
rcr
xchg
jge
aam
inc
jge
dec
pop
daa
dec
rcr
dec
add
push
and
lret
pop
fldpi
in
flds
dec
jae
movsl
mov
sub
dec
xchg
xor
leave
leave
pop
pusha
mov
cld
rep
cmp
xchg
sub
jg
lods
and
xchg
fldenv
mov
or
stos
adc
jo
lret
push
rolb
mov
push
mov
imul
enter
push
scas
sbb
mov
mov
xor
mov
push
shlb
adc
cwtl
int
cmpsl
xchg
cmp
les
es
xor
in
pushf
inc
add
or
call
xor
inc
jge
dec
sbb
fwait
or
push
ret
sbb
adc
xor
pop
stos
or
mov
pop
js
bound
pop
ja
fisubrs
imul
pop
mov
push
adc
dec
xchg
mov
dec
cmp
cmpsb
sti
dec
mov
mov
push
rdpmc
aaa
negl
cmp
mov
mov
insl
not
das
push
mov
dec
test
xor
xor
imul
icebp
ds
out
stos
insl
mov
cmp
leave
pop
out
sbb
loop
mov
pop
xchg
clc
fsubrl
lea
lret
inc
jmp
add
fnstcw
mov
stos
push
fld
adc
sbb
mov
out
aas
in
dec
int
cmp
and
ljmp
repnz
jbe
and
roll
or
push
cltd
test
sbb
mov
lods
xchg
in
nop
cld
push
xchg
cmc
xchg
jmp
rcll
or
pusha
shrl
jp
loope
mov
jnp
das
in
jns
mov
sahf
pushf
into
mov
incl
nop
aad
lea
xchg
fisubrl
jnp
fs
xor
bound
mov
sub
push
inc
cs
mov
and
xchg
fidivl
popa
jge
cli
cld
add
scas
sub
push
pop
mov
jecxz
adc
mov
fnstenv
push
mov
push
cmpsl
pop
xor
mov
jp
mov
jnp
jp
dec
pop
lahf
or
rolb
push
xchg
cmp
ljmp
dec
mov
movsl
std
cmp
pop
stos
lcall
out
int3
and
std
test
and
cmpb
cmc
mov
aas
mov
inc
mov
jmp
popf
sbb
loope
sbb
in
inc
dec
inc
les
and
mov
jecxz
dec
lcall
popf
insb
imulb
xchg
pop
movsl
add
xor
popa
test
jp
das
loope
in
lds
cs
loop
hlt
push
outsl
das
jmp
sub
cmp
cli
mov
xor
popa
ljmp
roll
lcall
xchg
mov
insl
cmp
test
pop
iret
xor
mov
push
insb
add
xor
out
lret
sbbb
fisubrl
sub
jmp
in
or
sbb
push
cmc
push
dec
adc
pushf
jge
clc
push
jmp
lret
lock
jns
jp
sbb
mov
sti
dec
or
push
cmpsb
xor
mov
sub
ret
test
insb
push
sub
pop
or
mov
nop
ret
mov
push
xchg
adc
jl
gs
adc
popf
iret
popa
ud1
aad
divb
insl
subb
xor
and
pop
mov
ja,pn
popa
movsl
mov
fcomps
push
xor
and
mov
push
hlt
pop
inc
xor
andl
jmp
dec
cmc
and
push
leave
adc
push
mov
imul
mov
jo
ja
clc
sub
mov
inc
xor
jge
pop
adc
dec
test
mov
push
nop
dec
xchg
xlat
pop
popf
dec
xchg
push
shr
test
icebp
iret
ljmp
repz
iret
inc
mov
int3
movl
sub
outsb
inc
mov
mov
add
and
jle
mov
imul
fdivs
sti
inc
fildll
jp
inc
inc
mov
mov
insb
or
cmpsl
arpl
aas
inc
push
inc
sbb
cmp
ret
mov
out
mov
sub
out
scas
ljmp
jle
mov
fldenv
test
wbinvd
mov
jae
push
sahf
sti
fcomps
insl
cmpsl
sbb
pop
leave
fstl
cltd
mov
test
adc
and
ds
fwait
jle
pop
push
repnz
and
ret
xchg
ljmp
lea
iret
sub
daa
jg
jnp
or
inc
jmp
sbb
call
pop
mov
insl
xor
pop
and
or
sub
cld
push
sbb
mov
lcall
mov
jg
addb
cmc
xchg
jo
jnp
sub
enter
xchg
add
mov
jns
xor
mov
bsf
imul
add
popa
xchg
popa
ds
xchg
dec
and
lods
inc
push
scas
push
jno
lea
in
mov
out
jno
mov
ds
je
inc
push
pusha
xlat
dec
mov
mov
ljmp
push
inc
cmp
jne
adc
adc
stc
adc
data16
lret
dec
push
inc
mov
scas
cmpsb
sbb
out
cmp
dec
add
sti
mov
push
dec
dec
fsubrl
pop
in
popf
push
cld
or
mov
or
pop
test
inc
ss
fs
jecxz
sbb
sub
test
sti
sbb
lock
test
pop
push
mov
push
lret
or
xor
dec
xchg
jge
pop
mov
add
jns
push
cltd
fldenv
dec
pop
add
pushf
in
dec
sub
sahf
insl
xlat
adc
cmpsl
jl
sbb
add
dec
xchg
pop
clc
and
bound
scas
sbb
inc
notl
test
movl
test
sbb
mov
fadds
dec
pop
push
mov
jne
push
mov
pop
test
leave
or
xchg
cmp
xchg
imul
add
in
test
inc
aad
mov
mov
push
push
bound
loope
scas
mov
add
inc
add
dec
lret
or
lods
out
dec
outsb
sbb
cmpsb
int3
out
insb
subl
jnp
xchg
mov
adc
pop
and
adc
xlat
insl
dec
int3
nop
push
push
loopne
rol
push
mov
push
les
dec
lret
inc
dec
lcall
or
pushl
addb
cmp
imul
aaa
fistps
jbe
add
xor
rcl
mov
aaa
sbb
repz
jp
iret
pop
lods
mov
mov
jne
int
shrb
pusha
outsl
add
inc
fsts
sub
jo
js
inc
cs
into
xor
cs
lds
shl
cmp
fsubrs
pop
cwtl
xchg
xor
into
pop
sahf
adc
fstp
ret
lock
lret
in
shll
inc
aam
xor
in
pop
testl
sub
movsb
pop
push
imulb
sbb
gs
int
sbb
sub
cwtl
and
pop
rclb
icebp
push
mov
adc
int3
ja
inc
cmp
pop
inc
jbe
dec
sub
cltd
mov
push
xlat
cmpsb
nop
js
rcrb
lea
sub
add
ja
cli
incb
lret
cmp
cmp
or
cmp
jmp
out
push
push
or
xor
and
cmp
orb
adc
mov
fiaddl
mov
mov
enter
movsl
int
xchg
int
sahf
mov
xor
popf
and
out
xchg
xchg
mov
mov
clc
push
mov
and
idiv
sub
and
cmc
jecxz
inc
lret
sbb
inc
adc
stc
inc
or
fcmovnb
jg
shrl
and
mov
in
loopne
inc
sub
nop
pop
mov
mov
std
mov
mov
push
in
mov
push
dec
cld
or
inc
fs
lods
adc
mov
ds
nop
scas
push
in
pop
ret
adc
daa
mov
or
mov
jecxz
mov
cli
scas
shlb
cmp
cmp
sbb
mov
add
push
sbb
mov
shll
mov
pop
xchg
xor
cmp
test
adc
aam
cmp
xchg
cmp
je
cs
jecxz
sub
mov
test
mov
sbb
xchg
ss
xor
scas
xor
sar
sahf
push
jns
jo
hlt
pop
repz
aam
into
fistpl
mov
push
lea
push
jae
test
xchg
xchg
fdivs
inc
jge
cli
ret
seto
stc
lock
stos
scas
repz
add
fadd
mov
push
jecxz
movsb
das
jb
and
or
inc
cli
stos
ljmp
loopne
push
out
lea
cs
cld
mov
aas
cmp
int3
pop
mov
dec
jle
xchg
movsl
jne
es
fucomi
sub
mov
rolb
mov
jp
scas
negb
cs
rorb
mov
pop
movsb
call
mov
insl
and
pop
fwait
mov
xlat
insl
cmc
out
mov
fwait
mov
mov
jmp
repz
dec
jmp
cs
sub
or
js
sbb
push
fildl
and
adc
adcb
push
js
into
cmc
or
sbb
mov
rcl
cltd
imul
aad
lret
jg
ss
jle
dec
push
pop
and
inc
push
dec
jb
loopne
push
lods
call
rolb
insb
or
enter
or
sub
ljmp
addb
dec
hlt
sbb
mov
jg
loopne
sub
inc
sbb
inc
test
add
dec
orb
xor
cmpsl
scas
xchg
mov
or
xchg
fstl
jl
imul
inc
mov
pop
sub
sbb
in
je
and
and
nop
jae
adc
enter
cmpsl
sub
add
push
fs
cld
pop
pop
repnz
int
insl
test
and
xchg
mov
out
sti
into
or
fildl
and
insl
inc
loope
push
mov
xchg
nop
lret
int3
dec
mov
in
cli
sbb
pop
xor
add
lods
fadds
cmp
ret
and
fwait
and
out
test
insl
cwtl
jge
imul
es
lods
insb
int3
pop
fwait
idiv
pushf
mov
clc
sbb
dec
lret
out
sbb
shl
cmp
fistps
push
xor
inc
mov
in
out
mov
test
scas
jae
out
and
pop
xor
shll
es
mov
movsl
ficomps
in
ficomps
mov
sub
sbb
mov
sub
outsl
xor
clc
push
jno
mov
mov
fwait
pop
push
cmp
outsl
adc
cmp
aas
cmp
xor
les
incb
mov
add
int3
ljmp
cwtl
and
out
cmp
pop
xor
dec
faddl
pop
aaa
in
inc
inc
je
mov
pop
test
sub
and
inc
sbb
adc
test
mov
fmuls
push
out
pop
or
adc
xor
jo
mov
movnti
aam
loopne
adc
out
xchg
pop
dec
or
push
cs
xorl
icebp
add
ret
icebp
xorb
imul
jo
and
push
sbb
not
fstpt
add
jmp
push
inc
mov
inc
lds
jp
or
call
xchg
clc
divl
and
mov
int3
cld
ret
js
mov
inc
dec
add
push
sahf
cltd
in
fmuls
movsb
cs
adc
out
std
shl
push
js
hlt
mov
lods
aaa
jecxz
loopne
mov
stos
jne
push
pop
ss
ret
gs
adc
and
pop
sbb
and
mov
fbld
in
cmp
cmc
mov
pop
push
lea
mov
adc
jmp
inc
mov
or
xchg
jbe
xchg
repnz
imul
inc
jmp
mov
fcmovnu
and
das
cmpsb
nop
call
jmp
adc
pop
push
aas
cltd
xchg
fwait
fwait
and
icebp
add
inc
sbbb
adc
add
push
in
push
orl
icebp
and
test
mov
imul
jo
mull
sbb
dec
mov
cwtl
clts
int
arpl
sub
xchg
or
dec
mov
int3
jns
cmp
inc
or
or
lret
push
sub
int3
sbb
cmp
cmp
cmp
jmp
cmc
xchg
mov
push
mov
or
cld
jae
fsub
out
cmc
bound
bound
jo
fists
ja
pop
rcl
imul
fiadds
cmp
xchg
jmp
mull
cmc
stos
mov
xor
or
hlt
pusha
sarl
inc
adc
lods
ds
jg
stc
fwait
sbb
mov
into
test
cmp
cmc
or
inc
or
cld
add
mov
or
jg
add
mov
jno
pop
jle
testl
xlat
xchg
int3
clc
sub
in
pop
fisubl
mov
pop
dec
mov
out
and
xlat
addr16
sub
lret
sbb
repnz
dec
ss
leave
xchg
in
inc
and
aaa
mov
jge
pop
push
cmp
imul
fdivr
cmp
pop
stc
inc
dec
push
cli
sbbb
flds
lahf
inc
dec
scas
inc
fiaddl
aad
dec
popf
push
incl
int
lods
adc
mov
mov
in
xor
stos
adc
test
sub
outsb
pop
cmp
lods
dec
out
inc
movsb
dec
je
cs
and
mov
stos
ds
cli
in
mov
mov
loop
mov
scas
std
loop
into
and
aaa
push
in
enter
mov
mov
jb
mov
mov
xchg
pop
adc
add
mov
xor
or
bound
movsl
dec
dec
push
sub
mov
repnz
mov
dec
out
mov
ljmp
pop
and
xor
pop
ret
sbb
in
les
mov
ret
cltd
jmp
push
testl
lods
dec
dec
out
xor
jnp
push
add
fimuls
sbb
dec
shlb
or
fwait
jb
arpl
push
nop
dec
push
shrl
sbb
out
fdivs
push
pushf
dec
sub
pop
ss
out
jb
pop
cmp
cmp
mov
jmp
sub
mulb
popa
jp
mov
or
sub
cmp
adc
lea
jns
xchg
jne
xor
imull
dec
fisubrs
mull
sti
mov
aaa
js
rcr
pop
push
or
movsbl
push
mov
cmpb
adc
jmp
sti
jns
rorb
dec
aas
insl
arpl
add
add
fisubs
lock
dec
insb
sbb
mov
pop
jmp
xchg
xlat
cld
icebp
dec
insl
adc
adc
mov
push
sbb
adc
cmp
rolb
das
xor
add
jbe
and
lods
fs
adcb
push
fldl
cmp
lock
jno
sbb
das
rol
or
mov
daa
sbb
sub
inc
lock
mov
xchg
lcall
pop
pop
cwtl
mov
in
mov
mov
push
mov
pop
mov
pop
mov
and
lcall
fsubrs
shlb
adc
pop
push
std
xchg
jecxz
push
mov
push
inc
cwtl
loope
cmp
and
mov
ja
test
pop
mov
scas
shl
neg
cmp
ja
dec
fldl
pop
or
jns
push
stos
stos
and
adc
stos
push
in
mov
rcrl
cmp
test
dec
xor
cmp
sbb
jecxz
adc
add
cltd
hlt
js
not
popf
pop
sub
bound
add
hlt
inc
out
lahf
xchg
je
insl
mov
or
adc
lret
add
xchg
and
and
cmp
xor
xor
dec
addr16
mov
lahf
add
das
pop
subb
insl
ror
xor
adc
push
push
mov
pop
das
les
jmp
int
scas
pop
cmp
int3
loop
mov
adc
jns
sbb
lock
add
shrl
lret
pop
stc
and
mov
add
jne
cld
imul
fisttpl
xchg
xor
or
mov
xchg
les
jne
adc
pop
fistpl
jmp
shll
mov
and
pop
xchg
push
popa
xchg
addb
xchg
xchg
mov
lods
test
inc
clc
add
fimull
pusha
jg
sub
fsts
les
cmc
pop
lahf
xor
jbe,pt
ljmp
jne
subb
lods
std
mov
imul
sub
lcall
mov
cmp
cmp
or
or
mov
push
mov
cmpsb
in
in
sbb
mov
jge
mov
fwait
mov
fs
jg
pop
sti
push
mov
jmp
ret
dec
inc
rcll
adc
inc
ja
xchg
jno
mov
or
pusha
test
sahf
enter
mov
xchg
sahf
aam
adc
dec
fldcw
ss
les
mov
jnp
pop
cmp
jno
ret
out
inc
xor
lcall
shr
notb
push
add
push
shl
and
stos
incl
add
jmp
and
test
jno
mov
pop
out
cli
cmpsb
dec
stc
and
test
sbb
stos
sbb
pop
frstor
sbb
inc
nop
sbb
xchg
sbb
and
cli
and
and
add
test
mov
pushf
loope
int3
outsl
push
adc
jmp
mov
pop
addr16
dec
xor
fldcw
or
call
push
rorl
fstl
int3
sarl
pusha
cmp
mov
sbb
test
pop
mov
inc
mov
loopne
test
cmp
pushf
dec
sub
addr16
fstpt
je
jns
rol
pop
jae
sub
adc
xlat
mov
lods
sbb
or
outsl
jle
jp
sub
mov
arpl
cmpsl
sti
dec
xchg
push
jns
dec
std
cmp
or
mov
mov
scas
dec
cmp
les
xchg
inc
or
mul
or
mull
sub
dec
pop
mov
cmp
cwtl
inc
add
xor
fstp
adc
jecxz
cmp
jo
movsb
js
stc
add
je
cld
inc
or
cwtl
xor
mov
adc
xor
pop
jo
pop
sub
mov
repnz
lock
int
or
add
xor
cwtl
jae
add
test
imul
mov
inc
movsl
jg
push
cmp
pop
adc
enter
push
mov
inc
sub
inc
dec
arpl
stos
inc
and
shrb
xor
lcall
and
add
jle
mov
lea
mov
mov
in
rol
add
xchg
or
mov
cld
jno
fidivrl
cmpsl
fildll
cmp
xor
sub
arpl
or
out
rcrb
jbe
adc
xchg
inc
int
jl
mov
test
push
mov
subb
pop
mov
hlt
testb
movsb
cmpsl
xor
xchg
adc
mov
jl
inc
ja
jb
mov
sub
mov
out
mov
add
push
and
xor
xchg
fsubl
mov
into
out
pop
leave
int3
stc
and
mov
sub
inc
cli
mov
rcrb
pop
add
lock
fwait
loopne
mov
add
cmpl
inc
das
test
ds
dec
mov
fdivl
pop
lahf
sbb
rolb
aaa
adc
pop
daa
rcr
sbb
ss
mov
jns
test
addr16
push
cmc
ficompl
pop
hlt
loope
adc
test
push
mov
sbb
test
or
xor
jno
sbb
roll
cmpsl
lret
push
cmp
push
ss
push
or
pop
mov
push
out
xor
pusha
inc
cmp
xor
fisttpll
cmp
pop
xlat
movsb
pop
outsb
jmp
outsl
cmpb
or
xor
mov
inc
dec
mov
xchg
fisttpl
or
mov
repz
pushf
inc
data16
or
daa
cmp
sbb
movsl
add
je
mov
jmp
jle
mov
shrl
xchg
sub
lret
dec
cmp
jg
ror
mov
mov
adc
in
xchg
sahf
push
fwait
inc
push
test
in
repnz
in
mov
or
or
xchg
daa
mov
nop
jno
push
xchg
dec
cmp
out
int
sub
sub
cmp
stos
push
clc
fs
cwtl
mov
pop
mov
insb
outsb
or
jnp
repz
cmp
mov
mov
mov
xchg
jnp
mov
daa
loopne
loop
sbb
shrl
pop
dec
cmpsl
add
pop
push
adc
pusha
test
scas
fldlg2
scas
shll
jmp
imul
aaa
outsl
mov
outsb
imul
int3
pop
sbb
push
loop
lahf
es
std
xchg
enter
sarb
pushl
popa
push
loopne
jecxz
mov
mov
in
das
shlb
orl
mov
push
int3
shrb
sub
in
sub
jnp
in
leave
mov
push
enter
sti
inc
cld
loope
in
inc
mov
sub
les
mull
mov
pushf
pop
sbb
cmp
inc
imul
add
pushf
and
push
int3
arpl
fcom
sbb
sbb
subb
mov
cmpsb
xor
shl
cmc
sub
leave
sub
icebp
cmp
and
cmp
mov
sub
mov
add
fimuls
sub
or
inc
sbb
add
or
ds
ss
cmp
ljmp
loopne
iret
push
mov
aam
sahf
sarb
fmuls
fwait
cmova
push
mov
push
push
jbe
ss
pop
mov
loopne
in
ss
jg
in
xlat
fsts
inc
data16
call
cs
mov
fildll
loop
fcompl
out
mov
lods
jle
jo
pushf
push
inc
push
sbb
xor
je
cmc
xlat
test
pushf
adc
addr16
lds
push
add
roll
in
sub
adc
adc
pop
dec
dec
mov
jns
aad
adc
xchg
lret
and
and
jnp
mov
es
repnz
aam
jl
push
pop
js
jae
sti
push
ljmp
loopne
dec
pop
inc
mov
push
pushf
mov
mov
lds
adc
jb
test
sub
stc
lock
add
mov
loopne
testl
lea
dec
adc
mov
outsb
je
mov
lods
mov
out
out
push
and
leave
pushf
xor
mov
stos
in
and
fcom
push
xchg
fiaddl
mov
jmp
jp
sbb
dec
mov
fsubrl
mov
push
push
aam
test
jg
push
sub
aas
or
ljmp
sub
outsl
icebp
sbb
imul
cmpsb
pop
push
shrl
mov
int3
popa
jge
xchg
xor
pop
leave
rorl
jmp
insl
bnd
push
pop
and
mov
add
leave
cmp
xor
iret
jp
adc
dec
stos
sbb
push
cs
pop
dec
nop
jmp
cli
add
ret
jno
dec
mov
jmp
sub
push
aad
gs
int
jecxz
mov
lods
jp
xchg
scas
push
or
jnp
fwait
lcall
adc
clc
pop
sbb
imul
iret
lock
cltd
loope
xor
cli
bound
adc
in
outsl
jns
clc
pop
mov
clc
imul
test
adc
adc
fcmovu
inc
jnp
je
out
cmpsl
jo
push
inc
and
sbb
aas
fcomp
inc
test
in
loopne
je
xchg
jp
push
fistl
aas
pop
lret
xor
movsb
lods
cmp
lea
in
adc
xchg
loop
jno
or
addl
jbe
push
xchg
stc
bound
stos
sarb
lods
insl
jae
pop
inc
xchg
mov
hlt
push
xchg
shrl
and
mov
adc
jbe
mov
lods
xor
clc
mov
pop
cmp
inc
aaa
call
icebp
pop
mov
pop
and
dec
mov
push
mov
mov
mov
lret
sti
sub
sbb
fnstsw
lcall
mov
gs
aam
adc
addr16
ret
pop
out
iret
out
xchg
dec
xchg
imul
cmp
insl
xchg
in
ffreep
pushf
dec
cmp
into
ds
or
loope
bound
cmc
mov
bound
sbb
xchg
cwtl
inc
das
sub
xchg
aaa
adc
out
xor
mov
xchg
icebp
jb
xchg
push
imul
sub
push
aaa
pop
inc
pop
dec
stc
adc
inc
jns
xor
into
in
xchg
or
dec
pop
jns
or
faddp
cmp
sbb
pop
bound
push
out
adc
xlat
pushf
outsb
xor
in
ljmp
and
dec
inc
imul
stc
in
fisubs
icebp
xchg
dec
add
movsb
aaa
sub
add
and
mov
mov
pusha
sarl
fmuls
mov
xchg
adc
jmp
cld
mov
adcl
rcl
lahf
dec
fwait
arpl
sub
jae
pop
out
or
lcall
or
inc
movl
xchg
bound
xor
xchg
mov
xor
test
dec
push
pusha
xor
jbe
cmpsb
push
pop
push
data16
cltd
rcll
xchg
imul
lret
or
add
shrb
jnp
inc
adc
adcb
sub
fsubrl
adc
icebp
fisttpll
das
clc
mov
subb
aam
adc
pusha
gs
lahf
mov
imul
adcw
inc
rep
scas
xchg
fs
push
xchg
or
pop
jecxz
cmpsb
mov
mov
xor
ret
test
xor
es
mov
adc
cwtl
mov
lar
mov
pop
notl
dec
fists
movsb
insl
xor
nop
js
adc
out
rcrl
dec
insl
cld
or
lcall
mov
adc
movsl
push
scas
jl
bound
cs
push
fsub
xorb
dec
scas
pop
cld
dec
jecxz
mov
mov
clc
out
ljmp
daa
fdivr
addb
cmp
jl
je
in
sbb
lds
adc
and
pop
pop
orl
loope
mov
clc
sbb
ja
push
and
or
insl
data16
pop
jge
sub
add
xchg
jmp
push
adc
or
cli
jnp
jbe
sub
sub
je
jb
popf
fucompp
or
xor
dec
jno
inc
mov
or
clc
mov
fisubl
cmp
into
push
clc
roll
add
mov
cmp
xchg
sarl
inc
or
ffree
push
mov
repz
rclb
jae
pop
test
fimull
cmpsl
out
jmp
and
ss
das
add
je
stc
mov
andb
incl
mov
cmp
dec
or
loopne
cld
inc
int
jecxz
jno
in
pop
xor
push
mov
jno
sbb
xchg
xor
jp
push
sub
ret
aaa
mov
outsl
pop
sub
xchg
ss
fnsave
jo
add
div
rol
mov
mov
pop
loope
pop
and
cmp
push
xor
sbb
jg
test
sar
mov
add
popa
push
inc
inc
pop
sbb
out
aam
xor
jecxz
or
leave
popa
lds
lret
and
pop
idivl
add
add
mov
or
inc
xchg
dec
lret
ret
aas
stos
xchg
faddp
push
fisttpll
mov
jle
push
mov
adc
dec
popf
pushf
outsb
andb
roll
daa
add
lods
xchg
repz
dec
rcr
insb
jmp
jno
loope
test
mov
pop
xchg
adc
std
jle
cmp
jge
dec
xor
adc
dec
jl
imul
sbb
mov
cmpl
xor
xchg
ror
in
leave
roll
jb
and
out
xchg
cwtl
outsl
mov
jne
xchg
bound
and
mov
xchg
cmp
mov
mov
add
mov
sarb
test
push
arpl
inc
mov
pop
inc
sub
ja
inc
push
movsb
shll
push
daa
jmp
jns
gs
adc
cld
jle
cmpsb
ret
push
adc
mov
aam
jecxz
hlt
andl
and
repz
xchg
aaa
loop
arpl
es
jecxz
and
push
int
and
hlt
pusha
in
sti
pop
push
testb
jae,pn
mov
dec
add
je
cmpsb
loopne
lcall
les
lods
jno
xor
cmp
jo
dec
test
push
stc
jb
mov
jmp
jo
pusha
inc
jnp,pt
imul
sbb
orb
add
sbb
test
insb
cmpsb
push
insb
test
fdivrs
stos
fs
sub
rcrb
and
and
add
sar
cli
pushf
mov
fs
and
mov
cld
shll
out
pop
jns
lret
cmovge
ljmp
adc
lahf
sbb
push
sbb
mov
in
test
roll
rclb
clc
push
sub
push
push
jne
xchg
ret
mov
fcoml
mov
dec
mov
sbb
hlt
daa
sub
clc
scas
sub
inc
test
and
pusha
pop
pop
jmp
test
or
pop
xor
int
mov
xchg
movsb
lds
mov
jae
sub
pop
mov
or
jnp
inc
pusha
xor
mov
xchg
ss
rclb
repnz
add
call
cmpsb
movsl
sbb
insb
lods
jl
repnz
leave
inc
and
jns
test
xor
shl
stos
sub
pushf
shll
das
ret
mov
test
shlb
negl
je
jae
pop
dec
pop
sbb
testb
or
xor
ds
sbb
push
ret
mov
stos
imul
mov
movsb
enter
outsl
jcxz
cld
andnps
and
xchg
outsl
jp
jnp
inc
or
mov
ret
xchg
movl
inc
daa
outsb
ss
sbb
ljmp
addr16
jle
jp
add
push
jle
push
mov
pop
pop
sti
iret
jns
jne
mov
adc
das
push
add
data16
ds
xor
cmp
loope
ss
sub
xor
pop
cltd
fnstenv
cmpsb
push
adc
jmp
fdivrs
aas
and
call
or
es
add
and
lret
xchg
jo
loopne
and
and
mov
sub
sbb
xchg
jp
insl
jp
jno
ljmp
mov
movsl
dec
ret
std
dec
inc
pop
mov
and
into
ds
push
insl
sub
or
fstpt
jb
nop
pop
pop
arpl
push
pop
ret
add
mov
lret
jnp
adc
jg
mov
lahf
loop
adc
mov
dec
jg
das
out
add
pop
sti
mov
rclb
nop
int
sub
push
imul
ret
in
icebp
and
dec
pop
lahf
jle
shlb
lret
pop
dec
push
fnstenv
sbb
and
jg
mov
fldcw
popa
jnp
fidivrs
scas
int
xchg
dec
bound
loop
add
jle
dec
pop
das
movsb
or
inc
addr16
jo
add
cmp
imul
lret
sbbl
mov
scas
sbb
mov
jns
xchg
mov
loope
pop
int
out
test
xchg
push
loop
sti
idivb
inc
inc
rolb
or
jecxz
add
adc
call
xorb
pop
stos
xor
cmp
mov
clc
pop
out
es
sbb
inc
cmp
mov
mov
mov
test
pop
xor
in
xor
cld
jp
cmp
out
lods
divl
ffree
add
adcb
cli
jne
mov
loope
or
sti
xchg
ret
mov
fisttpll
jo
push
jmp
jns
in
dec
jb
movsb
fldlg2
push
and
xlat
sahf
inc
decb
dec
xchg
mov
jp
movsl
lahf
scas
push
push
sbb
and
daa
enter
or
mov
jecxz
mov
sub
jno
mov
lds
test
daa
fisubs
add
leave
xor
ja
sarl
jae
pop
loop
rcrl
in
fdivrp
sahf
push
or
rorb
add
jp
mov
rcrl
mov
push
add
adc
outsl
and
in
mov
sub
hlt
xor
sbb
jl
pop
cltd
inc
popf
cli
inc
in
inc
push
outsb
xchg
xor
repnz
mov
push
and
pop
imul
lret
xor
pop
xchg
xor
cwtl
movsb
mov
mov
lret
icebp
xchg
insl
mov
or
inc
lods
adc
outsl
add
fstps
add
cmpsl
dec
shll
sub
add
fiadds
dec
mov
jns
bound
in
gs
std
outsl
adc
in
jmp
pop
xor
inc
jmp
or
dec
pop
mov
in
push
sbb
test
push
cmpsb
jmp
push
mul
xchg
cmp
jl
inc
call
in
and
test
adc
insb
dec
dec
push
adc
pop
loope
test
jle
ljmp
repz
and
push
sbb
hlt
subb
push
push
or
xchg
sbb
fcmovnu
add
pop
iret
pusha
cs
frstor
ljmp
mov
xchg
cmpsb
mov
push
test
lahf
clc
xor
push
xchg
test
ja
pop
movsl
sub
enter
pop
out
cmpsl
mov
and
mov
xchg
and
sub
inc
xchg
loopne
xchg
fwait
lea
pop
cmp
sbb
and
scas
pop
jle
xchg
jno
repz
dec
scas
imul
icebp
sbb
pop
mov
inc
lods
idivb
sti
cmp
sti
movsb
xchg
mov
jp
movsb
aam
arpl
inc
arpl
popf
jnp
jbe
fidivrs
mov
cmp
adc
fidivrs
xchg
cmc
lods
adc
adc
adc
cmpl
pop
lea
mull
imul
and
or
addb
cmp
out
inc
jmp
shl
in
hlt
pop
jno
jle
mov
pushf
ret
dec
sub
and
fildl
mov
mov
cmp
cltd
scas
jns
mov
jmp
orb
and
aaa
sub
and
mov
cmpsl
jg
jle
into
pop
fpatan
outsb
js
loope
and
mov
mov
test
mov
adc
hlt
sbb
out
loope
or
notb
sbb
mov
fbld
divps
adc
jge
add
sbb
addb
mov
mov
sbb
inc
inc
inc
cli
jno
mov
mov
repnz
cmpsb
sarb
push
cmc
inc
adc
in
cmp
arpl
int
lret
adc
clc
add
cmp
jg
ret
lcall
pop
mov
cmc
cltd
jns
outsl
fnsave
jae
mov
lods
xchg
push
scas
loop
push
mov
out
orb
push
push
loope
xchg
push
cli
mov
test
mov
mov
rorl
jb
push
imul
jbe
cmp
pop
mov
repz
mov
mov
lret
cmp
xchg
addb
sbb
fistpl
sbb
movsb
std
adc
push
add
loopne
shll
sub
push
xlat
and
sub
pmuludq
push
pusha
inc
cmp
les
call
mov
out
or
mov
inc
mov
stos
mov
adc
pop
dec
dec
sub
sbb
and
or
jmp
adc
dec
jns
adc
popf
insl
stos
lods
xbegin
and
in
push
mov
les
inc
xchg
rol
lock
mov
or
jno
xchg
push
fldt
int
pop
pop
jne
sub
sub
sbbb
movsb
imul
cmp
movsl
xlat
clc
xchg
pop
outsl
xchg
xchg
inc
xchg
sub
or
bound
insb
ljmp
push
addr16
call
test
mov
or
jbe
xchg
cmpsb
repz
adc
inc
xchg
aam
ljmp
loope
mov
fwait
cmp
jae
mov
pop
cli
jns
leave
fwait
out
push
test
push
sbb
arpl
jge
jns
fisttps
mov
mov
mov
and
inc
mov
jo
or
outsl
mov
jge
jae
adc
mov
sub
movsb
inc
daa
xchg
push
xor
or
lods
push
mov
fs
leave
or
push
aaa
dec
jecxz
dec
imul
mov
mov
dec
mov
mov
dec
aam
pop
out
push
stc
mov
lods
sub
cmc
and
or
mov
pop
out
mov
xor
in
and
lods
loope
int3
imul
jb
test
mov
mov
stc
imul
xlat
jo
loope
push
lret
test
xor
cmp
sub
inc
inc
inc
jo
shll
jae
pop
dec
xchg
int
divb
cmp
into
jno
mov
sbb
sti
clc
sub
iret
mov
and
sahf
add
call
test
jl
mov
ljmp
cmpps
mov
out
jno
aaa
mov
push
push
ja
or
imul
push
add
sbbb
call
clc
cltd
or
or
xchg
dec
adc
mov
in
lods
sbb
movsb
cmp
inc
mov
call
flds
fcmovu
inc
daa
mov
lods
nop
call
mov
xor
mov
fisttpl
push
movsl
mov
nop
lcall
stos
out
in
out
mov
dec
jl
or
test
std
mov
fistps
shlb
inc
loopne
mov
in
push
pop
ja
inc
int
packsswb
mov
insl
pop
add
push
adcb
loop
push
sbb
push
pop
inc
cwtl
pop
sbb
cltd
outsb
xchg
add
shrl
mov
int
pop
orb
popf
cli
xchg
jg
inc
dec
sub
lret
xlat
out
repz
jmp
leave
and
pop
ret
dec
mov
rcr
xlat
sar
mull
imul
test
and
popf
and
add
iret
sbb
ficompl
mov
test
pop
adc
pop
orb
xchg
int
push
iret
stos
inc
mov
or
add
and
push
inc
mov
or
push
mov
pop
lods
and
fsubs
outsb
hlt
cltd
popa
inc
stc
sarb
adc
ljmp
xor
add
movsb
adc
les
das
inc
pop
mov
cmp
mov
push
std
lods
xor
mov
xlat
adc
bound
shlb
push
mov
mov
xchg
mov
pop
std
mov
pop
xchg
jecxz
mov
xchg
cltd
scas
mov
jp
or
clc
mov
lods
and
sub
clc
mov
stc
push
cli
sbb
adc
or
mov
out
mov
add
xchg
sbb
pushf
sbb
mov
push
andl
inc
jo
cmp
arpl
sahf
rcrb
sbb
scas
cmp
notb
mov
mov
cli
sahf
pop
push
call
push
add
xor
ret
mov
sub
adcl
xor
sub
int3
lahf
pushf
insb
test
mov
inc
imul
addb
gs
fiaddl
repnz
aad
xor
pop
outsb
test
out
je
jne
inc
mov
xor
pop
int3
stc
jmp
and
lahf
adc
xchg
dec
jno
enter
or
xchg
inc
jne
adc
cwtl
pop
movsl
adc
call
mov
sbb
cltd
inc
xor
mov
adc
push
mov
pushf
and
aam
adc
nop
outsb
mov
enter
ficompl
les
push
sub
lret
dec
addr16
xor
cmp
push
imul
test
sbb
ljmp
scas
mov
sbb
mov
imull
idivl
cwtl
dec
lock
das
inc
jg
sub
mov
adc
hlt
xchg
scas
stos
into
push
mov
inc
sub
arpl
mov
inc
and
xor
pop
pop
xchg
xchg
lret
jae
in
add
dec
inc
xchg
repz
outsb
ss
cmp
jno
adc
cmc
dec
xor
or
addr16
push
insl
stos
pushf
insl
loopne
scas
outsb
mov
cmp
xchg
in
leave
cli
shl
imul
movsl
imul
pop
xchg
cmp
or
lcall
xchg
jo
aad
fnstcw
jl
push
cmpsl
fistl
pushf
mov
sbb
loopne
sbbl
sub
jecxz
cmp
jae
cmpb
pushf
enter
ret
test
movsl
jecxz
aam
push
inc
in
lahf
pop
inc
adc
cwtl
dec
imul
leave
lock
xchg
jo
dec
int3
in
out
jl
sbb
add
dec
and
test
jns
cmpsl
aas
mov
mov
xor
adc
and
dec
sub
mov
loop
addb
push
lahf
push
fidivs
fstpt
mov
in
out
jp
in
sahf
jg
scas
and
push
xchg
or
and
lods
push
push
test
inc
cmc
iret
cmp
std
ss
inc
sbb
call
clc
lods
leave
scas
bound
gs
jg
hlt
pop
aas
push
pop
sarl
pop
outsl
mov
xor
mov
in
pop
mov
fmull
cmp
out
sbb
or
scas
add
cmp
lods
xchg
aaa
movsl
mov
mov
mov
mov
mov
jnp
mov
outsl
push
add
pop
cmp
sbb
test
mov
mov
pop
shll
pusha
lds
and
ja
sub
inc
pop
test
push
je
pop
xchg
mov
inc
scas
and
and
mov
mov
fcoms
int3
std
push
test
call
iret
xchg
mov
mov
push
std
out
leave
fnstcw
add
fimuls
push
lock
adc
xor
and
pop
sub
jb
xchg
inc
shrl
stc
inc
adc
mov
clc
orb
mov
and
add
mov
sub
std
and
es
ja
dec
adc
dec
repnz
jnp
mov
fwait
daa
pop
fidivrl
pop
ds
mov
add
jo
inc
mov
xchg
sbb
sarb
jle
ljmp
popf
add
insb
xor
je
pop
lods
dec
jge
adc
sbb
ss
mov
imul
pop
mov
addr16
lahf
dec
push
outsb
cwtl
push
and
loopne
xchg
data16
inc
add
or
inc
xchg
clc
xor
stos
pop
push
repz
mov
pop
insb
gs
lods
movsb
fwait
mov
int3
das
fimull
andb
mov
les
push
lea
inc
mov
movsb
jg
fwait
sub
dec
jecxz
inc
mov
inc
adcb
rclb
incl
jae
sti
movsl
iret
jno
ja
leave
ds
cld
addl
and
popf
adc
pop
jmp
pop
mov
insb
mov
aas
push
cmove
sub
mov
adc
out
xor
lret
push
pop
cmp
in
lcall
das
and
mov
mov
sbb
xor
fidivrs
ljmp
inc
das
repz
and
jae
jmp
dec
mov
dec
and
sahf
int3
mov
mov
or
sub
test
int3
test
mov
sub
mov
je
xor
inc
out
loope
or
adcb
xchg
mov
mov
shll
ficompl
and
aam
mov
iret
jecxz
lret
stos
cwtl
fcmovbe
xchg
cltd
sahf
mov
rcrl
cmpsb
cs
jae
aas
fiaddl
pop
xchg
shlb
xchg
xchg
jae
cmp
out
outsl
cli
ja
ds
xor
bnd
sbbb
loopne
push
cli
dec
adc
gs
stc
loop
cmpl
and
jecxz
in
clc
dec
cs
mov
mov
xchg
adc
std
jns
lods
stos
or
push
push
mov
cwtl
mov
mov
scas
sub
arpl
aad
in
movsb
scas
mov
in
shlb
jo
jl
mov
test
shrl
adc
test
dec
lcall
int
outsl
decl
test
bound
out
subb
in
cmp
loope
cmp
lock
cltd
out
cmp
imul
jo
movsl
nop
fisttpl
or
outsl
xchg
in
ljmp
insb
stos
mov
adc
pop
mov
pop
jp
insl
popa
and
cmp
pop
push
xchg
mov
mov
cmpsb
dec
outsb
fnstenv
xchg
repz
sub
pop
jno
sbb
loopne
pop
lahf
pop
shlb
insl
push
jge
subb
cmc
sbb
rcll
out
mov
xor
xor
stc
ficoms
es
fisubrs
dec
ror
push
bound
test
mov
or
mov
dec
aam
inc
imull
shlb
dec
int3
test
jnp
mov
add
push
push
call
int3
sbb
jg
mov
sub
fcoms
les
in
mov
int
and
andb
rolb
sub
les
shrb
push
add
repz
cli
cs
dec
xor
cmp
mov
adc
aaa
sbb
adc
int
adc
push
popl
dec
pop
cmp
mov
out
pop
mov
sbb
mov
mov
and
add
cmpsl
push
push
jecxz
test
icebp
pop
stos
push
pop
pop
mov
sub
jmp
and
and
mov
ror
nop
xlat
xor
mov
fsts
sub
pop
ljmp
push
fwait
rclb
sub
scas
repnz
dec
imul
cmp
pop
setne
mov
jl
sbb
xchg
add
into
jns
jge
clc
int
cmp
xchg
notl
inc
mov
test
out
rolb
test
lret
loopne
mov
int3
loope
xchg
adc
mov
jg
xchg
loopne
out
pushl
addr16
cmp
xlat
pop
fildl
adc
add
shl
pushf
inc
leave
movsl
scas
push
dec
psadbw
sub
xor
mov
iret
jnp
imul
jge
out
sbb
movsb
roll
pop
mov
cltd
adc
lods
jge
jae
sub
or
roll
rcll
xchg
xor
outsl
ss
mov
rcl
orb
stc
fsubl
xchg
adc
jg
and
jg
push
pop
jmp
cmp
fdiv
rorl
push
mov
push
dec
mov
add
xor
sub
or
rorl
cmp
bound
push
into
xchg
pop
inc
pop
add
out
sti
sbb
pop
cmp
push
movsb
xchg
cmp
andl
sahf
inc
cmpsb
fsubr
repnz
ficoml
xchg
inc
call
jae
std
inc
ret
mov
pusha
out
xor
inc
xlat
retw
clc
mov
and
pop
ret
clc
xchg
mov
pop
xchg
scas
mov
test
mov
aad
push
pop
sahf
scas
sub
daa
sbb
shrl
mov
dec
or
and
andb
and
add
ss
adc
xor
jbe
jge
std
lret
mov
insl
cmp
out
mov
data16
mov
div
add
push
fwait
xor
call
mov
and
dec
push
pop
sub
sub
fst
scas
je
outsl
or
jl
into
rorl
xchg
lock
jecxz
push
outsb
dec
ret
and
push
xchg
adc
inc
ljmp
mov
push
add
aam
je
mov
fidivrl
lds
test
loop
mul
scas
or
fistl
lds
mov
sub
cmpsb
paddw
adc
xchg
mov
je
aas
out
inc
push
or
roll
enter
push
xor
jge
push
lret
in
outsb
push
cmp
mov
add
pop
ja
out
lock
decb
mov
and
sbb
xchg
jae
aas
lea
lret
pop
lock
cmp
jno
pop
lcall
fcmovnb
aaa
inc
xchg
sbb
loop
cmpsl
cmpl
mov
jp
mov
pop
jns
or
sub
je
rorl
pop
jg
adc
mov
test
stc
and
shr
into
xchg
and
xlat
cmp
fisubl
or
xchg
xlat
aaa
js
imul
push
aas
aam
or
dec
jb
xor
mov
cmp
hlt
imul
lcall
sahf
mov
ljmp
cmp
fstp
push
cmp
jnp
push
inc
inc
pusha
imul
mov
push
xchg
rcrb
sarb
sbb
outsb
ret
adc
pop
xchg
push
loop
stos
aas
xchg
ja
mov
inc
cmp
pop
fwait
out
loop
scas
and
lea
push
ret
icebp
movsb
lods
imul
xchg
out
fwait
stos
sub
xchg
ficoml
scas
jmp
cltd
cs
push
push
aaa
pusha
hlt
or
push
shl
mov
loope
adc
mov
mov
mov
xchg
subb
popf
push
xlat
shr
iret
mov
xor
fildll
lcall
leave
jle
daa
dec
data16
sub
cli
adc
stos
aad
fdivs
and
enter
lods
dec
fsubrl
adc
cmp
mov
das
add
add
xchg
out
cmpsl
push
or
sbb
jmp
jecxz
push
dec
sar
inc
aam
fcmovnu
adc
add
mov
and
test
mov
inc
jb
inc
insb
add
adc
mov
in
jns
mov
lret
pop
cmp
mov
arpl
mov
xchg
fisubrs
pop
dec
pop
arpl
jnp
mov
xor
aaa
jne
xor
or
xchg
or
add
sarb
pop
lahf
mov
inc
dec
dec
mov
mov
cwtl
mov
dec
inc
sbb
sub
dec
xor
fcmovnbe
xchg
icebp
gs
mov
mov
popf
xchg
mov
roll
shl
test
cmp
movsl
pusha
lahf
popf
inc
sbb
jae
jne
sbb
arpl
mov
lahf
jl
aad
scas
les
std
xchg
outsl
sbb
std
pop
mov
cmp
clc
pushf
fdivrp
sub
xor
in
ljmp
jg
loopne
hlt
call
lret
cmp
xchg
cmp
cltd
subl
ret
jl
sub
push
test
pop
mov
in
lret
and
hlt
inc
sbb
or
ret
leave
sbb
je
arpl
dec
test
insb
jge
scas
push
rorb
in
inc
daa
test
fcom
sub
nop
sarb
insb
sbb
xchg
ret
xchg
inc
push
add
sbb
add
aad
xor
bound
xchg
bound
adc
out
sub
mov
shrb
in
lcall
wbinvd
jecxz
xchg
filds
xchg
mov
fisubrl
fsubrs
mov
xchg
stos
enter
and
mov
mov
sbb
fisttps
icebp
sbb
int
enter
lock
pop
inc
gs
mov
pop
lret
push
xor
pop
dec
repz
rcll
mov
dec
push
jbe
and
xchg
mov
sub
lods
add
or
orb
cmp
pop
lods
adc
lods
icebp
out
cmp
js
mov
imul
sahf
and
out
enter
sbb
xor
jmp
gs
inc
out
addr16
out
adc
mov
dec
rclb
sub
add
inc
ljmp
jl
mov
pop
lea
in
xchg
cmp
loop
fdivl
add
pop
jecxz
rcr
push
inc
cltd
ljmp
jg
mov
or
mov
movsl
mov
mov
or
xor
popl
rol
fwait
push
mov
shrb
xor
std
mov
test
fwait
repz
pop
pop
push
or
dec
lcall
mov
out
lret
das
pmullw
push
insl
pop
dec
addl
rorb
fdivs
movq
or
js
jb
loopne
adc
xor
push
call
insl
les
adc
pop
aas
push
xchg
ret
test
test
pop
les
sbb
or
inc
push
data16
jo
fistpll
mov
rcll
dec
jecxz
sbb
cmp
fisttps
jo
addb
mov
and
sub
adc
arpl
mov
jle
movsl
mov
repnz
sbb
mov
lods
mov
pop
push
mov
call
mov
pop
xor
fldcw
sub
int3
mov
pop
adc
out
loope
popa
mov
pop
pop
imul
push
pop
ss
and
outsb
in
repz
mov
or
das
inc
adc
push
mov
xchg
rcll
mov
jge
pop
cmpsl
and
mov
jg
cmp
cld
mov
imul
xchg
cmpsl
xor
out
inc
jmp
test
sub
push
leave
mov
mov
jns
test
sbbl
dec
lret
fwait
vshufps
push
sbb
cmp
int
loope
jne
or
fs
jnp
pop
xchg
inc
mov
imul
mov
jecxz
cmp
cmpsl
cs
dec
pop
sub
add
hlt
xchg
cmp
imul
in
inc
mov
idivl
sbbl
mov
mov
pop
and
push
pushf
adc
sub
jp
daa
xor
imul
cmc
pop
pop
mov
ds
insb
mov
flds
pop
push
jle
xorb
daa
ja
add
mov
cwtl
cmp
adc
push
out
dec
xor
enter
shll
mov
cmp
jb
xchg
repz
xor
ja
jnp
push
test
repz
cmpsl
adc
in
mov
or
pushf
arpl
ja
or
insb
adc
push
fildll
adc
lds
or
mov
inc
mov
les
divb
rclb
scas
lea
adc
cld
test
mov
mov
cwtl
cmc
pop
cmpsl
or
addw
cltd
mov
push
or
aam
xchg
mov
mov
pop
in
xchg
dec
test
js
sub
filds
cmpsl
xchg
rcll
xor
cltd
fistps
rolb
mov
shrl
jae
mov
loop
mov
jb
jl
jnp
stos
jle
test
mov
cmp
sub
cmc
fs
push
mov
int
int
jmp
push
rorl
cltd
xor
adc
push
test
mov
shll
iret
test
sbb
or
fisttpl
or
inc
inc
imul
out
dec
inc
dec
add
cs
xor
sahf
mov
aam
mov
sub
mov
xchg
aas
outsb
cwtl
loope
sub
mov
cmp
xor
or
xor
mov
dec
push
inc
xchg
jg
adc
xor
les
adc
scas
cmp
pop
push
je
pop
sub
inc
inc
fcompl
jo
xchg
pushf
adc
mov
outsl
mov
or
jp
les
jg
std
out
loop
mov
std
mov
jmp
arpl
loopne
lret
lret
pop
fprem1
repz
enter
push
pop
movsl
xchg
or
sub
push
clc
test
cwtl
loopne
jg
in
xchg
mov
lods
push
div
xchg
xchg
push
shl
sti
mov
mov
mov
and
scas
or
push
arpl
mov
divl
popa
cld
test
rcl
sti
movsl
dec
push
push
or
dec
insl
mov
std
xchg
mov
scas
add
jmp
add
jo
mov
and
fiadds
stc
mov
cmp
outsl
push
aaa
int3
ret
shll
clc
xchg
repz
dec
enter
orl
je
test
lods
ficoms
sbb
jp
fwait
into
pushf
fwait
mov
ja
dec
inc
xchg
jmp
fnstcw
movsb
push
imul
mov
sbb
test
add
adc
stos
push
test
and
mov
dec
xchg
test
xchg
dec
jl
je
mov
daa
add
clc
pop
sub
cld
xor
subb
cmc
int
push
movsb
lods
jle
movsb
movsb
rolb
pop
aam
shrb
jbe
cmp
sbb
dec
mov
fsubr
in
fdivp
push
pop
xchg
cmc
test
pop
jmp
negl
push
insl
icebp
fnsave
inc
sub
js
or
mov
repnz
and
mov
jle
xchg
add
test
test
sub
fbstp
pop
mov
jge
mov
or
test
dec
dec
mov
sub
lcall
and
mov
adc
cmp
dec
aad
clc
fnsave
stc
aam
lock
mov
ret
dec
jl
jbe
popf
mov
mov
xchg
dec
sbb
repz
push
sub
ljmp
lods
sbbb
out
cs
aam
sub
hlt
test
pusha
sbb
fnclex
repz
stos
xchg
test
add
in
xchg
ret
xchg
fnsave
fsubrs
loop
divl
dec
pop
and
adc
sub
xor
mov
inc
pushf
dec
pop
stc
add
add
mov
das
xchg
inc
daa
pop
adc
enter
cwtl
adc
int
aam
hlt
and
adcb
xor
mov
ret
pusha
lods
pop
pop
xchg
in
jo
xchg
test
mov
and
mov
fiaddl
cmp
sbb
cmp
js
dec
aam
sbb
insl
jo
test
mov
jge
dec
jo
sub
notb
inc
jae
nop
xor
inc
into
mov
subb
mov
mov
xor
lods
cs
ret
call
test
adc
enter
dec
inc
arpl
add
popf
sub
jbe
scas
movsl
push
mov
rcll
loop
mov
mov
nop
jmp
cltd
into
sarb
and
sbb
fstpl
jcxz
std
insl
xchg
cmp
pop
xor
lret
push
cmpsb
push
lahf
push
cmpsl
sub
mov
rcrb
inc
jl
mov
cmp
sti
mov
jl
xchg
jge
sbb
stos
test
cmc
divl
lret
fwait
pusha
or
test
movsl
fidivs
or
rcll
cmp
mov
loop
cmp
inc
push
add
add
jg
xchg
fsubr
inc
loopne
adc
cmp
rcl
sti
imul
push
sub
push
adc
push
add
mov
push
mov
sbb
mov
push
test
repz
inc
bound
push
cmpsb
movsl
fldl
sbb
and
sbb
fldenv
sbb
loope
hlt
mov
xchg
out
pop
and
cmp
dec
and
push
aad
lahf
add
jge
pop
sbb
fisttpll
sbb
xlat
push
ljmp
iret
fsubl
in
shll
mov
sub
inc
mov
cld
mov
jae
mov
filds
loope
outsb
jle
inc
inc
into
push
sub
sbb
ret
inc
add
pop
or
and
xor
jmp
xor
je
and
xchg
fcoml
sahf
mov
sbb
rcl
jne
fdivs
jbe
ja
and
jmp
rcll
push
sbbb
adc
inc
mov
cmp
and
outsb
movsl
aaa
push
inc
sbb
xor
lea
adc
xlat
sbb
xor
scas
add
rcrb
fcompp
rcll
pusha
imul
or
jno
faddl
mov
je
pop
cmp
sbb
inc
movsb
or
add
sbb
mov
or
popa
bound
call
add
jae
mov
cli
pop
xchg
push
imul
push
cltd
pop
fmuls
jae
jnp
cmp
fiaddl
mov
lcall
jb
aaa
out
push
cmp
mov
jb,pn
jle
inc
adc
cmpsb
inc
adc
sub
add
dec
sarl
mov
and
mov
push
adcl
lcall
push
xor
push
outsb
and
inc
pusha
adc
dec
inc
iret
jl
icebp
enter
adc
add
lcall
pop
push
movsb
ja
xchg
mov
mov
add
push
repz
sbb
dec
jne
inc
adc
test
sbb
cld
pop
int3
mov
push
push
jmp
jne
mov
dec
leave
cmpsb
imul
or
add
xchg
pop
mov
xor
jne
push
loope
pop
and
mov
xchg
daa
sbb
cmp
data16
pop
xchg
mov
int3
pop
bound
rolb
fwait
push
std
pop
jg
inc
push
pop
loop
outsl
and
mov
add
xorl
rcl
popf
push
xor
test
mov
sub
inc
or
mov
cmp
icebp
cmpsl
leave
lods
jae
adc
vandps
adc
or
test
fwait
pop
and
and
bound
and
lahf
loope
test
xchg
sbb
mov
sub
cmp
jb
testb
push
fs
sub
cmp
enter
in
xlat
xchg
cli
scas
mov
shrb
mov
andl
out
push
cmp
ret
xor
icebp
pop
int3
cmp
shl
jl
notb
imul
jne
fistps
and
cmpsb
popf
inc
stos
movsb
xor
jb
scas
add
pop
mov
add
cmp
fs
sub
fistpll
jno
xor
cltd
sub
or
cmp
xchg
gs
mov
daa
cmc
js
lret
sbb
mov
icebp
cli
loope
dec
hlt
push
jle
or
int3
aam
inc
jecxz
add
rolb
xor
mov
xchg
jnp
mov
xor
jecxz
push
push
mov
shl
lea
inc
mov
in
js
adc
sbb
lods
in
mov
xchg
arpl
xchg
xchg
loop
mov
adc
jb
jae
push
xorl
mov
sbb
addr16
mov
and
hlt
push
pop
jb
or
adc
inc
add
cmp
mov
dec
and
addr16
push
dec
push
fs
mov
push
fmull
mov
jle
cmp
loop
or
xchg
fcmovb
sahf
pop
aaa
into
adc
xor
aad
sbb
mov
popf
inc
scas
dec
mov
jns
pop
cli
loop
adcb
sbb
jecxz
mov
sahf
xchg
fs
movsl
xchg
addr16
jne
mov
pop
lret
pop
or
cmp
fisubrs
dec
cmpsb
sub
insl
hlt
mov
xchg
jne
lret
movsl
into
add
in
test
jle
sub
icebp
mov
lds
stos
cld
fldl
out
push
js
sbb
jmp
push
lret
lahf
out
leave
std
aam
outsb
pop
fwait
es
sub
dec
add
fsubrs
mov
cld
sub
sarl
jle
popf
jb
pop
out
add
ret
movsb
not
js
or
insb
xchg
scas
leave
adc
pop
neg
jmp
dec
cld
in
add
fwait
pop
cmpsl
inc
jo
cmpl
es
xchg
xchg
stos
adc
and
mov
popf
jmp
and
adc
lock
inc
and
mov
pop
fadd
cli
repnz
mov
fs
mov
cmp
xchg
xchg
adc
outsb
add
pop
mov
scas
imul
loope
inc
jnp
push
jecxz
add
popf
mov
pop
out
mov
loope,pn
or
subl
sub
clc
cmp
fsts
and
icebp
sub
inc
jnp
mov
movl
adcb
cmp
fisttpl
or
mov
push
arpl
inc
fadd
or
lret
mov
test
inc
lea
ficompl
in
pop
sub
mov
xor
mov
in
repz
insb
lock
test
orb
ret
inc
rorl
daa
pcmpeqw
mov
ss
add
outsb
mov
xchg
inc
mov
nop
sahf
xorl
jmp
mov
hlt
push
cmpsl
test
jne
jge
and
imul
int3
bound
or
mov
push
mov
adc
add
adc
ret
inc
cltd
scas
vpunpckhdq
and
pusha
lahf
hlt
adc
cmp
loop
push
push
insb
push
cmp
imul
fadds
stos
and
out
fs
lcall
scas
xchg
inc
pop
pop
xor
mov
ja
hlt
out
jge
cltd
in
mov
inc
mov
int
dec
sub
push
add
clc
scas
cld
push
test
cwtl
mov
fcomi
inc
xchg
lret
pop
jne
stos
mov
adc
add
fadds
sbb
cmp
sarb
lcall
outsl
outsl
cmp
imul
pop
xchg
cmp
jmp
dec
mov
or
orl
cmp
aad
push
sbb
jge
dec
in
cld
push
stos
xchg
jl
jae
nop
inc
mov
add
out
lds
dec
mov
mov
xchg
es
or
into
testl
push
sub
dec
ficomps
inc
mov
cwtl
xor
and
int3
in
add
inc
xor
xchg
xchg
scas
cwtl
andb
cmp
cmp
lea
xor
sub
in
sahf
pop
push
push
or
scas
cli
stc
lds
nop
jecxz
jmp
lock
out
popa
and
mov
scas
dec
xor
js
int
mov
xchg
rcrl
lret
sub
xor
test
inc
mov
push
or
insb
push
cmp
imulb
jle
data16
rorl
jg
shlb
jge
dec
mov
pop
call
push
xor
outsl
jbe
push
inc
or
add
or
lock
push
inc
arpl
out
add
cmp
icebp
or
jns
dec
and
pslld
jnp
cmp
xor
inc
mov
in
mov
or
or
loop
push
in
xor
jg
pop
push
arpl
push
mov
and
or
cmpsl
jp
movsl
insb
lods
add
push
add
int3
comiss
push
push
out
pusha
shrb
xchg
and
lea
mov
pop
ss
ss
or
adc
jb
loope
lret
nop
inc
xor
jns
nop
sbb
jg
cld
jge
fstps
or
adc
dec
aaa
fidivrs
pusha
je
test
pop
in
cmpsb
out
mov
mov
xor
std
pop
xchg
in
cmpsl
and
hlt
sti
xchg
ficoms
in
mov
xchg
fsubrs
lds
cs
scas
push
mov
adc
dec
adcb
sbb
pop
sub
je
mov
arpl
call
test
ds
mov
insl
jmp
cli
aad
dec
xor
sub
push
test
pop
or
idiv
push
push
into
push
xlat
ljmp
sub
inc
lahf
or
fwait
lret
and
push
mov
inc
in
and
adc
sbb
mov
mov
xchg
aas
jge
fdivrl
repz
int
dec
mov
mov
inc
mov
mul
stos
movsb
pushf
xchg
pop
dec
dec
lods
mov
or
jo
xchg
mov
repz
out
daa
or
push
mov
aas
shrl
xchg
aam
pop
cwtl
add
push
xchg
aaa
add
xor
rcrb
mov
dec
adcb
fs
push
cmp
dec
xor
insb
mov
sub
jl
movsl
cli
pusha
jp
stos
sahf
mov
leave
loope
lods
out
or
jno
je
xlat
pop
jbe
jmp
jb
ljmp
add
fcoml
rorl
andb
out
xor
cltd
sub
jbe
sbb
jl
mov
dec
fsubl
sbb
cwtl
mov
sbb
out
stos
mov
ret
push
cmpsb
push
jecxz
cli
stc
pop
jno
pushf
ficoml
inc
cmp
inc
mov
mov
scas
popa
les
hlt
dec
sub
js
loop
popf
and
leave
test
cwtl
sahf
hlt
int
fcompl
mov
cmp
fsubl
lret
movsl
lods
and
mov
add
unpckhps
or
mov
sbb
or
repz
cmp
lahf
jecxz
dec
rcll
mov
dec
sub
stc
push
mov
shl
es
fcomi
pop
push
dec
cmpsb
movsl
ficoml
js
dec
push
jno
xor
add
inc
mov
adc
iret
cs
frstor
in
sbb
add
adc
loop
xlat
mov
xchg
pushf
add
loope
loop
popa
xor
or
std
aas
mov
push
out
jp
es
rcrl
pop
lock
mov
int
push
push
adc
lcall
loope
in
xor
rorl
mov
sub
pop
jb
push
call
push
dec
ljmp
push
sub
mov
xor
ficoml
jg
clc
int
sti
push
lods
inc
inc
out
fst
cmp
stc
adc
cmp
daa
sub
jns
push
pop
adc
leave
adc
push
and
push
dec
pop
rorb
divb
mov
xor
cmp
movl
out
jecxz
or
nop
lahf
sub
xchg
addb
mov
mov
stos
mov
add
mov
xchg
clc
fildl
mov
or
lret
jge
bound
add
int3
lods
sbb
rorl
int3
cmp
sbb
adc
aam
cmp
jb
add
push
pop
xchg
inc
or
fsubrl
sub
out
mov
and
sub
jg
and
or
ds
xchg
or
lods
push
hlt
add
mov
push
aam
rolb
fs
lea
mov
jbe
pop
xchg
push
mov
pop
jmp
enter
mov
push
dec
jecxz
jecxz
dec
cmp
mov
xchg
and
lret
out
in
pushf
adc
imull
push
je
orl
push
and
mov
test
dec
pusha
call
mov
lock
ljmp
dec
xor
ret
or
in
push
movsb
mov
cmp
dec
inc
lods
sub
shrl
fucomp
lahf
insb
imul
pop
lcall
mov
push
lahf
mov
mov
aam
nop
fdivrs
loopne
mov
and
imul
in
mov
or
add
test
mov
lret
lock
or
push
mov
xor
push
outsb
mov
or
in
mov
add
adc
fildll
pop
stos
adc
faddl
loop
das
add
in
add
icebp
dec
dec
or
pop
pusha
cltd
or
inc
bound
and
jno
ror
xchg
sbb
adc
es
bound
push
add
adc
and
lock
adc
jg
daa
lock
xchg
xor
mov
or
sarb
nop
sub
iret
jno
insl
loop
icebp
add
xchg
leave
out
dec
sub
add
andl
inc
sub
aas
pop
clc
adc
sbb
inc
jp
lock
imulb
push
daa
shll
clc
xchg
test
cmpsb
xchg
lock
ss
adc
add
mov
fdivrs
mov
sub
and
push
dec
dec
lret
enter
mov
roll
jg
xor
sbb
inc
rolb
jecxz
sbb
loope
fidivl
call
icebp
in
pop
mov
inc
or
daa
in
into
inc
hlt
push
jno
mov
adc
xor
cmp
jle
popf
roll
or
pop
jno
pop
push
mov
cmp
xchg
or
inc
notl
xchg
xchg
out
pusha
dec
or
xlat
fiadds
ljmp
cmpsl
lret
dec
xor
repz
mov
jecxz
sahf
inc
gs
pushf
sub
clc
imul
pop
cmp
cmpsb
ljmp
mov
pop
sbb
and
js
test
rol
in
stos
cwtl
pop
ficompl
mov
and
sbb
dec
test
enter
mov
or
mov
mov
xorb
xchg
add
idiv
imul
lods
or
push
xchg
and
push
outsl
dec
arpl
gs
sub
and
inc
js
inc
sub
out
push
sub
faddp
mov
mov
cmp
stc
ret
stos
mov
jg
inc
dec
mov
loopne
dec
dec
mov
mov
inc
or
jge
and
mov
test
fs
push
jl
ficompl
fadds
fs
sti
scas
adc
leave
mul
push
ja
repz
sahf
or
mov
es
aam
es
pop
pop
aaa
std
pop
lock
sar
test
daa
mov
icebp
and
std
outsl
ret
sub
xlat
lods
dec
sbb
in
cli
jns
pop
dec
or
adc
leave
test
lcall
jmp
ljmp
shlb
dec
and
dec
adc
mov
leave
out
loope
incl
inc
pop
out
icebp
sub
sbb
push
jmp
test
add
divb
mov
lcall
mov
or
push
push
lahf
push
fldt
pop
xor
adc
pop
add
lret
adc
mov
mov
sub
jno
push
cmp
jp
xchg
cmp
push
and
xchg
pop
adc
inc
cmpsl
pop
cltd
data16
in
push
into
dec
or
imul
cmp
pushf
icebp
ret
fmuls
in
stos
rcl
xor
popa
movsl
mov
addr16
test
rsqrtps
sub
pop
pop
imul
leave
scas
int
inc
aam
arpl
xchg
push
pop
ficomps
add
insl
out
iret
sti
gs
push
fsub
push
loopne
xchg
sub
cmpsl
roll
dec
jae
sbbl
iret
bound
pop
rorl
inc
and
push
or
enter
adc
in
lock
mov
inc
mov
sbb
push
imul
cmc
das
mov
shlb
dec
mov
mov
insb
jnp
ds
pop
lods
je
cwtl
int
sub
inc
mov
je
hlt
jp
xchg
push
mov
movsb
out
push
jecxz
rcrb
mov
pop
loopne
out
and
mov
jbe
ljmp
jmp
jp
sbb
in
lret
jns
popf
cmp
movsl
fidivrl
jg
aad
mov
xor
loopne
push
leave
push
fadds
rcll
daa
lds
out
pop
jge
cld
sbb
add
xor
stc
pop
add
sub
not
cmc
xlat
popf
mov
adc
push
xor
insb
add
lahf
xchg
cmp
and
sbb
jae
inc
and
cmp
adc
jl
rcrl
jle
lcall
das
cmp
pusha
dec
add
or
fistps
test
in
pop
mov
std
mov
adcl
aam
in
fs
insl
ret
cmc
daa
fadds
ja
jp
in
lret
mov
push
ror
orl
sbb
pusha
mov
test
fistpl
in
imul
sbb
shlb
cli
sbb
sub
and
mov
pop
xor
and
aaa
insb
cmpsb
je
cltd
out
loopne
push
fs
pop
pop
jns
and
call
jmp
outsl
fwait
pop
jge
mov
not
xor
hlt
cmp
fistl
int3
sub
fcompl
dec
dec
shl
sarb
dec
ret
mov
nop
pusha
imull
stc
aas
xor
jo
into
sti
mov
leave
mov
arpl
push
idivb
mov
lods
cwtl
and
outsl
outsl
shlb
mov
cmp
sarb
flds
in
enter
pop
xlat
push
xchg
ds
mov
pop
sahf
dec
inc
adc
mov
movsb
push
popf
cmp
iret
xchg
or
cmp
cltd
sub
dec
and
test
pusha
mov
ss
or
scas
push
insl
push
in
xlat
div
orl
jne
imul
das
test
pop
push
std
stc
insb
inc
inc
push
xor
jl
cmp
shl
popa
es
push
sbb
das
dec
xchg
cs
sbb
loop
movsb
in
ret
xchg
test
pop
cmp
push
push
mov
nop
adcl
rclb
adc
lret
and
push
add
cwtl
loope
mov
pusha
fwait
add
aam
mov
pop
ret
ja
push
mov
xchg
or
or
xor
outsl
popf
and
or
cmp
add
fidivs
movsl
repnz
call
rcl
push
push
dec
imul
fsubrs
test
imul
cmpsb
fbld
or
inc
outsl
cmc
cmpsl
pop
pop
fimull
mov
cmc
negb
leave
aam
int3
add
push
js
adc
pop
loopne
inc
adc
jmp
adc
addr16
into
or
sub
jno
pop
aas
dec
mov
hlt
imul
cmp
add
xchg
mov
das
ja
push
stc
or
xor
ret
insb
shl
sub
in
cmp
insb
int
mov
fdivs
repnz
pop
pop
sti
insl
adc
dec
and
jmp
mov
dec
fstp
scas
movsl
rcll
jns
pop
add
push
adcl
mov
jne
repnz
cltd
cwtl
jmp
mov
outsl
iret
pop
ja
subb
outsb
xor
fwait
dec
cmp
mov
jmp
sub
sbb
ja
xchg
and
jp
cmp
jno
or
jp
or
sbb
push
jl
inc
cmpsb
add
xlat
jl
rorl
imul
inc
roll
inc
clc
js
loopne
xchg
sbb
push
cmpsl
xor
in
push
ret
outsb
cmp
push
fidivrs
or
cmc
mov
fcomip
lret
arpl
push
jns
mov
jmp
push
mov
roll
jecxz
pop
fdivp
add
fcmovne
push
insl
neg
ret
push
or
lahf
mov
rolb
stos
cs
adc
pusha
lea
or
mov
pop
std
lret
gs
adc
mov
or
adc
fisttpll
in
jmp
lcall
inc
mov
jns
es
and
mov
in
sbb
dec
push
clc
lcall
in
aas
xor
in
mov
int3
in
shr
cmp
sub
jne
cmp
fnsave
aam
rolb
sbb
pop
mov
iret
testb
xchg
cmp
cmp
addr16
aaa
in
mov
fxch
int
insb
adc
adc
imul
add
xchg
dec
cmp
nop
and
in
jns
jno
mov
jmp
std
cmpsl
out
fcmovnbe
aas
imul
xor
jo
repz
lock
in
inc
push
push
lret
scas
outsb
jmp
dec
movb
sahf
pop
mov
fstpl
rorl
mov
push
andb
stos
push
cmpsl
push
andl
push
push
mov
outsl
and
leave
xor
imul
fbstp
nop
or
outsl
dec
jge
test
leave
jno
ljmp
arpl
xor
imul
xor
call
push
lods
push
fst
neg
dec
lea
pop
icebp
movsb
mov
jno
repnz
imul
sahf
or
movsb
out
sbb
pusha
mov
movsl
or
fsubrl
orl
inc
sbb
mov
cmp
jp
sti
add
sar
cmp
mov
dec
dec
les
jge
and
bound
adc
pop
loop
dec
or
adc
je
sub
gs
or
lret
stc
test
cli
push
add
cmpsb
mov
mov
pop
and
pusha
in
dec
pop
add
dec
fimuls
das
mov
or
mov
aam
push
rcrl
incb
push
push
push
pop
pop
push
adc
mov
and
jnp
mov
xchg
inc
das
mov
push
test
or
jmp
xor
or
mov
gs
inc
sub
cmpsl
mov
sub
shlb
mov
cmp
add
in
jmp
add
popa
jno
cmp
stos
mov
lods
ret
jnp
cmp
adc
add
adc
icebp
xor
dec
xor
mov
sbb
cmp
inc
pop
cwtd
and
ss
jecxz
mov
sub
mov
jmp
cmp
dec
or
arpl
and
push
cld
mov
jle
imul
pop
out
rcl
pusha
lea
rolb
sub
in
loope
std
sbb
jns
sub
insl
sahf
xor
sbb
dec
cli
dec
push
push
ds
xchg
scas
mov
scas
stos
sub
push
or
scas
notl
data16
mov
xor
std
sbb
sub
sub
shrb
pop
sbb
pushl
mov
push
loopne
andb
mov
push
cltd
jle
das
xchg
lods
leave
mov
xchg
shrb
aam
sar
push
jge
dec
call
aad
imul
add
cmpsb
or
in
jmp
test
das
cmpsl
mov
fdivs
xchg
imul
lods
adc
or
test
mov
mov
xorb
test
push
cmpsl
in
pop
fs
in
outsb
imul
rorb
sub
push
cs
mov
scas
ss
hlt
and
fwait
lret
pop
inc
sbb
mov
or
and
xchg
jl
out
or
cmpsb
and
jp
daa
sub
push
adc
jnp
dec
inc
fwait
stos
sahf
fildll
outsl
sbb
inc
lret
clc
in
es
popf
or
pop
and
les
movsb
jb
cld
inc
jbe
test
icebp
leave
add
xchg
cmp
mov
fstpt
jmp
decb
adc
sub
mov
stos
pop
shlb
add
out
sub
rcl
fcoml
imul
fwait
jle
inc
test
ficomps
sti
popf
mov
js
xchg
icebp
inc
adc
rcl
cmp
mov
stos
imul
add
pusha
ja
jno
dec
cld
lcall
and
test
dec
daa
pop
xchg
or
in
xchg
les
lods
push
add
dec
in
and
push
js
ss
jmp
sti
xor
pop
xchg
scas
ret
inc
xchg
jecxz
scas
add
push
mov
cs
cmp
add
or
pushf
rcrl
in
inc
pop
mov
add
jb
xor
out
lea
fmuls
mov
push
incb
insb
push
dec
jle
pop
mov
repnz
cmpsl
insl
or
bound
or
ljmp
outsl
outsl
xchg
dec
inc
or
mov
fists
addr16
pop
or
sub
lret
in
jne
cmp
mov
insb
adc
sti
imul
aas
xchg
push
stc
lret
pop
test
in
icebp
dec
dec
sub
sub
fimuls
bound
pop
mov
cmp
cmp
push
aad
out
sub
jo
insb
jmp
xchg
inc
movsb
sub
jno
adc
repz
and
mov
lock
push
mov
xor
mov
sbb
jb
aad
pop
pop
sub
push
push
dec
mov
cld
repnz
loopne
scas
add
out
fisttps
out
adc
mov
inc
lea
jne
xor
movsl
jb
sbb
enter
fchs
data16
psrlw
and
push
pop
mov
aad
mov
xor
fwait
sbb
xchg
stos
shl
adc
push
add
lret
inc
pusha
cmp
mov
pop
xchg
std
repz
sbb
in
cs
mov
mov
out
loopne
loope
leave
mov
pusha
stos
sbb
mov
add
cmp
fisubrs
push
std
in
fwait
outsl
dec
mov
test
test
adc
pop
popa
mov
stc
pop
fistl
mov
incl
lock
call
inc
jno
adc
sbb
mov
sub
lret
add
inc
lds
or
jp
inc
and
mov
scas
sbb
icebp
jge
lods
xor
lods
inc
sub
je
stos
out
jb
mov
jl
clc
aam
repz
mov
add
movsb
and
push
test
rcrl
mov
loopne
sub
orl
test
or
iret
push
mov
or
mov
adc
out
clc
mov
pop
ret
jb
or
lret
xor
in
ret
sbb
pop
icebp
cltd
repz
daa
rcrb
mov
cmp
push
stos
xor
xor
jecxz
xchg
add
sbb
out
rorb
in
loope
sub
scas
dec
sahf
xor
pop
es
add
jle
jmp
add
inc
add
outsl
out
jmp
mov
stc
test
push
mov
mov
js
cmp
out
insl
push
icebp
hlt
testl
in
out
sbb
rcrl
loop
cmp
rorb
ret
adcb
sbb
outsl
imul
loopne
sub
cmp
xor
outsb
add
push
mov
jp
imulb
mov
xchg
push
sahf
xor
adc
ds
xor
xchg
push
jb
adc
add
out
sbb
pop
pusha
cmp
inc
push
push
xrelease
dec
mov
scas
mov
or
dec
mov
xor
push
push
adc
push
outsb
xchg
jecxz
and
repnz
or
sub
mov
mov
in
push
jne
fmuls
shlb
adc
or
cmp
inc
popf
xor
int
imul
out
mov
dec
cmpsl
sahf
lret
aam
mov
jne
fildl
pusha
sbb
mov
jg
rol
mov
mov
or
jl
movb
ss
xchg
inc
or
aas
pop
lret
adc
xchg
dec
ss
les
ds
pop
push
inc
add
add
test
in
lahf
sarb
xlat
lock
adc
jle
jo,pn
outsb
inc
lods
mov
adc
cs
xchg
cmp
call
pushf
fisubrs
mov
aas
xchg
notl
or
adc
or
xchg
add
int3
flds
int
in
fs
movsb
pop
jnp
shrb
sbb
add
add
insb
cmp
or
shrb
push
push
adc
mov
movsl
xchg
inc
xorb
mov
sub
insb
movsb
jb
adc
and
ljmp
mov
inc
sub
jno
clc
inc
xor
scas
inc
push
loopne
push
sbb
ljmp
lahf
pop
es
dec
mov
sti
and
in
sahf
sub
jb
push
insb
cmp
push
rcl
sahf
pop
jmp
jno
and
or
or
aas
insb
rorb
sub
xorl
into
out
add
add
mov
xor
arpl
test
popf
movsb
icebp
xchg
xchg
mov
icebp
sub
or
mov
test
jno
ret
jmp
test
loope
lods
cmp
mov
inc
out
test
int
daa
sub
ret
sub
inc
cmp
or
or
inc
mov
fisttps
orb
sti
and
mov
and
mov
push
out
add
lcall
test
adc
test
arpl
rorb
stos
lret
xor
movb
cmpsb
push
loop
stos
inc
push
movb
pop
add
ss
push
imul
mov
or
lret
fwait
orb
sbb
jb
or
nop
lods
xchg
pop
jge
int3
adc
jp
and
insl
dec
shrb
mov
cmpsl
mov
adc
push
and
movsl
xor
mov
nop
mov
sub
adc
jne
faddl
lret
or
inc
dec
xor
hlt
sub
jle
and
mov
push
xor
in
lock
sub
mov
cmp
loopne
adc
stc
inc
jne
mov
loope
add
mov
jecxz
ds
jnp
aam
jle
inc
inc
fldenv
add
fisubl
add
sub
cli
mov
xchg
mov
ret
jb
inc
fs
mov
ficoms
push
dec
dec
fxch
mov
subl
adc
mov
dec
dec
pop
adc
sub
shlb
push
daa
icebp
add
inc
sbb
lret
jbe
aaa
aad
or
cmp
sbb
mov
sbb
add
neg
nop
dec
inc
psubusb
aas
cmp
and
test
push
cmp
pop
or
clc
add
stos
in
popf
daa
stos
negl
ret
mov
ds
out
fstpt
jbe
push
fmuls
adc
dec
imul
adc
int3
push
push
dec
xor
xchg
data16
dec
stos
jns
outsl
fdecstp
iret
xor
dec
arpl
or
mov
out
mov
mov
shrb
push
jo
add
pop
mov
out
sbb
mov
add
lret
lahf
bound
fwait
inc
sti
dec
ffreep
je
or
sti
mov
push
jl
push
sbb
sbb
dec
dec
inc
pop
shrl
fbld
cld
mov
les
and
cmp
or
cmp
imull
and
jmp
jno
or
mov
lret
push
jg
jg
dec
pop
rorb
jae
push
sub
jno
or
jne
mov
enter
mov
cmp
pop
imul
hlt
adc
test
ljmp
mov
insl
pop
fidivrs
das
imul
xchg
push
call
push
inc
pop
mov
es
sub
xor
cld
sub
mov
lock
mov
les
mov
ljmp
je
fldt
mov
inc
cltd
aaa
add
filds
lret
icebp
cmpsl
xor
mov
xchg
std
adc
aad
xchg
cmp
and
int
push
add
lods
fisubs
imul
pop
int
outsb
xchg
ljmp
in
add
btr
pop
sti
aas
lods
addr16
cmpsb
xor
push
mov
inc
cmp
dec
in
inc
mov
xchg
and
adc
jne
rcll
mov
ljmp
out
ljmp
rcll
jo
add
ljmp
insl
ja
icebp
inc
aam
fisubs
addb
inc
or
data16
xchg
xlat
out
mov
push
lahf
xor
cs
aaa
test
lcall
fs
test
mov
cmp
das
rcrl
popf
adc
mov
adc
test
popa
mov
jae
cs
push
xacquire
sub
fbld
cmpl
push
xor
mov
dec
cmpl
inc
jne
jne
test
jnp
jne
mov
cld
dec
fwait
dec
shlb
cld
or
lock
out
xchg
xlat
fsts
sub
cmp
int3
push
inc
andb
aad
adc
fmull
xchg
stc
enter
jl
rorb
xchg
and
push
mov
push
push
mov
fisubrs
adc
pop
das
mov
inc
cmpsb
enter
pop
mov
nop
push
dec
inc
xor
push
fsubrs
pop
sbb
jge
mov
sbb
fucomip
mov
or
sbb
adc
insb
dec
leave
insb
or
sbb
test
data16
hlt
into
xchg
xchg
out
movsl
sbb
lods
stc
aad
inc
test
jmp
sbb
add
outsb
xchg
subl
push
xlat
scas
lds
std
jmp
push
into
mov
sub
xchg
mov
pushf
sub
sbb
pop
add
movb
mov
dec
mov
xor
sti
cmpsb
into
or
push
out
pusha
push
sub
push
mov
cwtl
and
adc
scas
mov
sbb
filds
outsb
cvttps2pi
mov
mov
pop
pop
push
shl
test
mov
pop
mov
scas
inc
fdivl
imul
int3
pushf
ja
or
xchg
push
out
insb
aam
or
xchg
cmp
mov
repnz
test
cltd
inc
sbb
xchg
xchg
xchg
dec
mov
ljmp
fcomi
mov
sbb
stos
mov
adc
mov
sub
or
mov
mov
mov
in
pusha
jns
hlt
sub
shrl
xor
dec
mov
int3
es
add
ds
push
mov
loopne
cmpsb
int3
lret
jp
xor
loop
push
cmc
sarb
je
inc
xor
xlat
mov
lods
sub
cwtl
xor
add
lret
xor
insb
pop
dec
push
jae
cli
sub
xchg
icebp
rcrb
inc
jns
or
mov
xchg
test
lds
rolb
sbb
cmp
jns
jmp
leave
jbe
xchg
pop
movsb
dec
mov
pop
out
adc
addr16
sbb
pop
sti
adc
jnp
inc
fisubl
outsb
mov
inc
fs
xchg
cmp
ret
bound
fbld
nop
popa
dec
int3
fnstsw
mov
mov
lods
mov
mov
cmpsb
mov
shl
lock
adc
cs
sbb
lcall
dec
xchg
pusha
mov
popf
pop
jle
adc
and
subl
sbb
bound
xchg
xchg
push
test
enter
scas
insl
cmp
sbbb
adc
std
push
inc
lods
adc
sbb
aaa
inc
jo
in
std
xor
cmc
sbb
and
cli
xor
jno
jle
loop
mov
mov
fcom
cmc
mov
les
out
clc
les
xor
ficomps
adc
push
push
mov
add
adc
push
add
and
aaa
push
inc
mov
outsb
inc
enter
movsl
sub
fldcw
mov
ficoms
cwtl
popa
sub
lds
loop
push
jge
pop
push
sbb
sbb
jns
fiaddl
icebp
sahf
sub
dec
ret
push
out
inc
or
out
aam
out
pop
daa
sbb
mov
pop
dec
shlb
in
fwait
adc
or
int
push
out
mov
fmull
mov
shlb
push
insl
xchg
add
fcomp
mov
push
std
nop
push
scas
jne
mov
push
push
js
or
mov
cmp
clc
jbe
push
sbb
call
mov
out
sbb
dec
sbb
dec
pushf
jmp
mull
sub
repz
mov
xor
push
movsb
movsl
sbb
dec
xor
mov
in
shlb
adc
mov
ds
bound
nop
popa
rol
jp
jge
into
xor
in
fwait
adc
jg
idiv
repnz
in
in
sub
rolb
add
ret
jg
sub
mov
and
mov
cmp
jnp
insl
aam
inc
pop
inc
jmp
icebp
data16
lods
xor
inc
jge
push
jns
neg
xchg
adc
inc
sbb
mov
jp
sti
repz
outsb
lcall
jge
and
and
out
inc
xor
and
lock
add
cmc
pop
inc
pop
adc
xchg
xchg
cmp
je
dec
jnp
jmp
mov
lahf
push
cmpsl
cmp
fidivl
pusha
popf
jno
into
push
imul
inc
dec
imul
fisubl
jne
rcll
les
jmp
int
xor
or
dec
inc
pop
insl
push
inc
out
jnp
push
add
xor
jae
daa
adc
fldt
stc
sahf
inc
and
inc
pop
push
sbb
clc
ljmp
or
adc
jae
xlat
mov
mov
and
stos
adc
out
loop
or
mov
roll
fucom
in
push
or
int3
cmp
mov
cmp
sbb
mov
add
popf
rcl
bound
xchg
in
pop
cltd
incb
add
cmp
mov
shll
inc
or
popf
jno
jo
std
imul
jo
and
pop
add
roll
sub
pop
sub
fwait
ja
jle
shr
orb
scas
mov
ret
adc
mov
fildl
mov
leave
popl
lret
js
mov
repz
mov
pop
shrb
jo
clc
add
or
lock
outsb
insl
jl
adc
and
cmpsb
out
cmp
push
add
shll
sbb
jge
insl
add
jbe
push
lahf
scas
in
cld
insl
adc
jp
cmp
lods
xlat
jb
adc
mov
xlat
mov
jle
je
push
seto
cmp
sbb
mov
sub
ss
jb
jnp
cld
sbb
mov
addb
mov
fistpl
add
adc
push
xorb
imul
sbb
sbb
loop
dec
xchg
clc
fnstenv
lods
jno
outsl
add
or
loop
mov
cmp
out
ret
push
xchg
in
in
pop
push
call
sub
jne
sahf
fdivr
ljmp
int3
int3
fs
sti
sub
jo
cmp
xchg
xchg
dec
sbb
sbb
es
out
mov
cld
inc
cmpsl
sbb
scas
adc
test
or
dec
out
dec
mov
sbb
jns
add
lret
mov
jne
add
sub
add
sub
lret
ret
int3
stos
cmp
test
lcall
call
inc
jae
orb
sbb
cmp
mov
sbb
call
or
cs
push
jns
pop
and
or
stc
xchg
pusha
adc
add
inc
fsts
mov
mov
aam
sbb
push
loop
ror
dec
loope
pop
xor
jns
cmp
pop
push
xor
pop
fwait
inc
mov
in
imul
xor
jno
push
mov
push
test
pop
push
xchg
inc
arpl
cmp
mov
pop
dec
loope
sub
retw
dec
loope
jbe
inc
out
movsb
mov
out
and
mov
pop
push
aam
repz
pop
or
xchg
add
xlat
pop
mov
mov
lret
fisubl
inc
ja
arpl
or
jecxz
cmp
push
push
and
and
mov
bound
lcall
push
fcoms
pop
mov
xlat
mov
lds
push
xchg
inc
lods
or
adc
and
mov
mov
push
jnp
cli
fwait
xchg
mov
popf
dec
lods
lret
loope
out
js
cmc
pop
loop
xor
lock
xor
addb
fucomip
adc
int3
test
pop
pop
cmp
cld
and
loop
sub
je
jmp
mov
pcmpeqw
data16
sbb
dec
xchg
jmp
sub
ds
cld
jae
jb
and
in
rcr
push
push
arpl
sbb
dec
xchg
mov
or
aas
shrl
iret
movsb
and
popf
lods
arpl
std
xchg
xor
inc
negl
arpl
andb
adc
pushf
lds
cmp
add
rorl
pop
jecxz
push
xor
inc
aas
mov
add
lods
mov
enter
orl
xchg
movsl
mov
in
fnstsw
xlat
xchg
ljmp
sbb
push
cwtl
sub
push
lods
jecxz
pop
aaa
fs
push
xlat
xor
ja
mov
gs
mov
leave
addl
mov
jnp
in
in
cmc
fiadds
jne
adc
pusha
mov
inc
lods
es
scas
movsb
shl
mov
ror
lahf
mov
rorl
or
aas
jg
popf
shr
ficoms
lahf
mov
sub
add
mov
xchg
rorb
cmp
rcll
or
arpl
repz
mov
adc
stos
iret
or
add
mov
dec
popa
push
aad
mov
pop
nop
jbe
imul
enter
or
sub
adc
imul
sbb
mov
sub
call
or
fdivl
and
sub
pop
sbb
pop
fwait
icebp
dec
arpl
gs
and
sahf
jno
push
lds
popa
push
pop
sub
xor
and
pop
hlt
cmp
test
jge
cmp
inc
push
js
or
and
scas
pop
cmp
int3
aam
fnsave
push
push
mov
fimuls
imul
jns
xchg
out
imul
stos
push
popf
aaa
into
stos
std
sub
dec
stos
fcoms
test
mov
xchg
int3
rcrb
jp
loop
ficoml
mov
jp
jecxz
ret
push
mov
xor
addl
iret
hlt
sbb
inc
aas
in
cmp
mov
lods
lock
and
ret
mov
out
pop
and
test
mov
aam
dec
push
sub
mov
or
lods
fwait
dec
sbb
or
push
in
rcrb
das
fdivs
xchg
aas
test
dec
and
jecxz
lcall
fucomip
and
jle
push
imul
ret
arpl
xchg
loope
jbe
sub
scas
or
and
pop
jo
in
xchg
xchg
imul
dec
dec
int3
sub
les
rorb
in
cwtl
orl
push
out
pop
enter
js
aad
pop
pop
std
mov
arpl
inc
lret
sbb
push
in
adc
dec
mov
pop
sbb
xor
lock
out
fidivl
cmc
mov
fcmovnbe
mov
testl
movsb
mov
pop
mov
cmp
dec
gs
xor
xchg
loope
ss
and
fmul
adc
loope
popa
jecxz
adc
cmp
sub
fsts
dec
int3
pop
inc
and
cmp
xchg
cmp
add
inc
popf
push
enter
adc
bound
jo
xor
adc
pushf
dec
or
push
les
mov
cmpsb
jg
lea
mov
mov
aam
and
enter
rcll
mov
insb
fnstcw
loop
movsl
xor
xchg
call
outsl
icebp
jge
xchg
xorl
fwait
fs
shll
lock
lods
loopne
fcomps
push
sbb
add
mov
pop
jns
std
push
pop
daa
sub
inc
mov
lds
xchg
pop
testl
pop
pop
cltd
or
adc
sbb
mov
testl
sub
pop
js
mov
int
insl
pop
repz
push
or
or
jge
addl
andl
das
loop
xchg
xchg
aad
mov
pushf
cltd
lods
mov
js
sub
xchg
stos
and
int3
pop
inc
pop
arpl
xorl
lea
insl
pusha
mov
cmpsl
mov
jle
jge
dec
sub
inc
lahf
mov
sbb
xor
fidivl
jmp
mov
ret
scas
andb
sarb
pushf
nop
mov
iret
and
lret
rorb
pop
mov
lret
pusha
adc
xchg
ljmp
xchg
adc
aad
mov
push
xor
mov
fisubs
jnp
clc
adc
jnp
lds
dec
jns
xchg
inc
cld
xor
sub
adc
aaa
push
jmp
mov
sub
cltd
push
scas
mov
mov
movsl
in
outsb
repnz
loope
and
gs
cs
movsl
mov
sub
mov
xchg
jg
mov
push
xor
mov
sbb
cmp
push
mov
xchg
inc
jbe
daa
jbe
mov
mov
test
and
repnz
mov
sub
mov
jp
das
bound
arpl
push
imul
mov
mov
repz
jne
mov
adc
testb
and
add
lods
enter
xlat
test
fcoml
adc
in
and
gs
cmp
scas
push
xor
jo
fwait
insb
ret
jmp
xchg
negb
jb
test
jmp
push
fisubs
jb
push
jbe
imull
mov
adcb
fldcw
push
sub
fwait
cmp
and
aam
or
or
pop
mov
shl
out
jns
lss
pop
sub
jbe
jb
cmp
hlt
cmp
inc
lea
mov
enter
nop
jbe
or
cwtl
sti
push
into
inc
jmp
cltd
testb
sub
loop
mov
fldt
push
hlt
cwtl
stos
das
push
aaa
ret
sbb
or
mull
mull
mov
bound
or
xchg
in
test
pop
push
movsl
cmpsb
dec
cwtl
add
cmpsb
xor
mov
xor
jmp
jecxz
test
sbb
pop
inc
test
jmp
or
add
fisttpll
jb
testl
outsb
std
insb
mov
nop
rorb
fisttpl
hlt
fstpl
push
adc
xchg
add
mov
jecxz
mov
movsw
addl
ds
mov
mov
jle
jg
mov
loopne
insb
pop
out
xor
dec
popa
jp
aas
push
and
int
xchg
cmc
shlb
pusha
ret
test
fldl
cmp
lds
and
out
pop
push
sub
test
lret
push
adc
jbe
jp
dec
push
sar
imul
daa
xor
add
dec
sbb
cmpb
in
in
dec
icebp
mov
lock
cmpb
ret
push
mov
repnz
sbb
scas
das
mov
cmc
outsb
movsb
push
fcmove
jo
pop
cmpsl
and
sub
mov
xor
add
movsl
ljmp
or
jecxz
sub
xchg
das
cli
clc
pop
clc
pop
addl
icebp
dec
sahf
adc
outsb
arpl
add
out
jnp
xor
xchg
sub
mov
xchg
sbb
dec
ret
imul
cmpl
dec
out
xchg
filds
pop
xchg
xlat
mov
into
cwtl
stc
dec
test
cmp
loope
pushf
dec
jno
jns
lods
dec
pop
and
dec
xchg
repz
mov
push
xchg
push
fistpl
cmp
stc
add
sub
pop
adc
dec
mov
sbb
jb
cltd
cltd
cmpsb
push
icebp
pop
cmc
rol
push
fimull
aaa
iret
mov
mull
inc
pop
push
lahf
addl
fimuls
mov
fisubs
dec
jne
xchg
in
popa
sub
pop
ret
xchg
push
xchg
inc
sbb
jl
and
mov
fdiv
outsl
cmc
ja
and
sub
jae
sbb
test
shll
popf
or
iret
and
in
loopne
bnd
jle
dec
mov
cmpsb
addl
mov
mov
jmp
mov
insb
ficomps
jns
xchg
mov
lret
les
stos
fists
and
pop
dec
fucomip
subl
jo
dec
or
sub
push
in
int
sbb
scas
sti
fwait
jmp
pop
pop
push
mov
repnz
imul
ds
push
fcmovne
sub
cltd
mov
xor
lret
out
data16
fsts
lcall
jbe
sahf
adc
stc
mov
mov
jns
xchg
loopne
div
pop
stos
out
mov
and
in
push
or
adc
out
pop
imul
in
xchg
arpl
inc
das
jne
push
push
push
cwtl
jg
popf
pusha
push
movq
and
aad
jl
shrl
int
call
adc
inc
mov
cmpsl
xor
stos
jge
and
into
fnstenv
jl
jb
xchg
xchg
std
jo
pop
fistl
push
stos
andb
aaa
add
push
xchg
lods
ret
sbb
test
xchg
lock
inc
cltd
cmp
cmp
and
pushf
negl
inc
nop
pop
iret
adc
or
pop
jl
xor
lahf
push
sbb
fcomip
lcall
sbb
xor
aad
arpl
and
sbb
gs
pop
loop
dec
movsl
inc
cmpsb
lds
add
les
mov
xchg
idivl
movsl
sarl
xchg
imul
shrb
push
stos
dec
inc
push
sbb
add
jl
cwtl
in
out
mov
adc
js
scas
jbe
aad
pop
icebp
jmp
std
lret
lea
sbb
cmp
repz
push
dec
dec
add
xchg
pop
jb
xchg
loopne
stc
pop
jmp
push
mov
repnz
ret
ljmp
std
lahf
cmp
sub
cmp
push
cmpsl
addl
leave
cltd
pop
cltd
sbb
ljmp
jecxz
fstps
lcall
lret
mov
pop
sbb
cli
mov
aad
add
sub
int3
xor
dec
int3
mul
push
into
in
into
add
adc
fists
pop
mov
repz
sub
xchg
cmp
add
xchg
loopne
imul
fadds
sub
inc
xor
rcll
pusha
loop
mov
push
and
sbb
push
clc
xor
mov
negb
mov
and
js
pop
out
xor
mov
pushf
frstor
fnsave
push
mov
xchg
xchg
shlb
int3
push
mov
ret
mov
stos
mov
xchg
and
or
xor
fndisi(8087
fwait
mov
cmp
in
movsl
fidivrl
inc
cmp
es
pusha
sbb
adc
or
add
mov
xchg
xchg
dec
repz
push
in
and
lods
or
out
jo
leave
jns
or
orps
sbb
push
or
faddl
aad
movsb
test
push
addl
mov
pop
xchg
arpl
push
mov
mov
xor
sbb
ret
lods
dec
inc
add
jge
sahf
inc
xchg
xor
sbb
call
imul
pop
imul
xor
sbbl
add
cmp
shll
xchg
lret
push
cwtl
lret
xchg
inc
clc
xchg
insb
lods
mov
jl
or
mov
insl
inc
fsubrs
adc
std
pop
inc
cmc
sub
out
test
aam
or
imul
ret
daa
mov
repnz
or
mov
in
icebp
cmpsl
lea
jp
and
lret
dec
dec
pop
and
insl
inc
jne
xlat
jle
cs
les
jns
loope
cmpsl
cmp
cld
dec
jecxz
dec
mov
mov
sub
movsb
rcr
cmp
push
mov
xlat
shll
subb
bound
cld
cmp
pop
xor
dec
imul
ds
in
cmpsb
inc
push
push
ds
mov
add
int3
xrelease
fldcw
gs
loop
ficompl
pop
adc
and
push
inc
in
adc
sti
lock
cmp
rorb
push
sti
outsb
ds
clc
dec
sub
movsl
insb
jle
cmp
jecxz
mov
and
mov
pop
rcll
inc
lds
xchg
cld
stos
mov
add
fists
or
pop
pop
cmp
sbb
dec
mov
inc
push
sub
or
xchg
push
ljmp
or
je
inc
pop
push
xlat
jne
rcll
mov
push
lret
dec
xchg
pop
jno
xchg
aad
or
mov
mov
xchg
dec
add
xor
aas
mov
cmpsl
xor
xchg
cmp
xor
push
pop
xlat
stos
push
xchg
insb
add
data16
mov
lds
dec
cmp
leave
jns
inc
out
jl
mov
std
pop
dec
fs
xchg
pop
dec
lea
push
or
cs
mov
inc
fiaddl
ret
add
lods
test
lods
in
lea
pop
loope
mov
cmp
fists
pop
outsl
scas
scas
jns
jmp
xchg
add
mov
mov
jb
mov
push
dec
cli
xor
out
arpl
testb
bound
jo
push
push
xchg
and
mov
mov
imul
inc
push
jns
cmp
sub
add
popa
les
sub
sbb
sti
pop
dec
jae
fists
movsl
test
cmp
mov
sub
jne
inc
loop
rcll
cmp
cli
mov
aaa
push
ret
cmc
xchg
pop
xchg
mov
pop
dec
dec
xorb
cmpsb
mov
fcomps
cmpsb
iret
push
add
sbb
mov
or
and
idivl
into
ja
into
pop
fs
push
pop
popa
add
add
dec
mov
xchg
jg
enter
lock
fs
leave
mov
fildll
adc
enter
pop
popa
mov
adc
in
sbb
cld
test
mov
icebp
mull
movsl
push
popa
or
jp
jg
test
push
mov
and
push
or
stos
sbb
fcomps
and
xor
sub
dec
fnstcw
push
mov
mov
lahf
mov
cmpb
notl
mov
and
rol
sbb
jb
movsl
add
push
sub
enter
sti
cmp
jae
xchg
mov
jns
or
and
push
into
or
cmp
mov
dec
mov
es
adc
pop
sub
xor
xor
in
dec
cmp
daa
jne
xchg
mov
mov
dec
xchg
dec
push
add
sub
rclb
les
out
es
mov
scas
testl
hlt
enter
popa
cmp
cmpsb
stc
mov
rolb
ds
ret
and
adc
add
outsl
push
fstpl
and
dec
imul
xchg
lods
int3
xlat
arpl
hlt
hlt
stos
push
rcll
xchg
imul
or
test
jecxz
cwtl
out
sbb
jae
push
jge
enter
inc
lock
inc
rolb
int3
sub
test
mov
pushf
push
dec
outsl
ret
pop
push
xor
sar
pop
cli
mov
inc
call
lods
lock
mov
lds
xor
iret
jl
xchg
test
cmpsb
inc
loop
out
out
mov
push
cmpsb
cmpsb
fnsave
push
push
jno
int3
clc
nop
icebp
mov
es
sbb
jecxz
hlt
jae
cmc
cli
fs
les
jmp
or
mov
stc
pushf
into
orl
mov
push
in
fs
fdivl
ret
in
leave
out
mov
sub
xchg
jecxz
mov
pop
inc
or
imul
dec
sbb
push
mov
pop
cltd
adc
sahf
xchg
out
mov
add
cmp
in
into
int3
push
enter
jb
pop
xor
or
gs
daa
inc
jns
leave
sbb
jmp
loopne
lock
shll
test
fistpl
jno
data16
das
jno
jg
cmp
dec
sub
insb
jl
inc
adc
daa
fsubl
lea
shll
mov
or
mov
mov
lods
adc
push
in
cmp
sbb
aaa
mov
xor
insb
jge
push
or
cmpsb
jns
jge
push
xor
test
int3
lahf
pop
adc
cwtl
mov
mov
mov
cmp
dec
or
lret
cmpb
xor
insb
sub
pop
je
enter
push
pop
dec
mov
jbe
idivl
cwtl
iret
fwait
lods
lods
push
sub
and
mov
pop
pushf
pop
movb
lods
lahf
jno
pop
jae
pop
stos
push
or
push
scas
repnz
and
sbb
push
call
mov
mov
push
shlb
pop
push
cs
dec
mov
roll
lds
dec
mov
push
lret
lock
cmp
repz
mov
dec
xor
sub
lods
or
xor
xchg
jb
sbb
mov
xchg
shrb
push
push
xor
lods
or
xchg
lea
and
das
and
fstps
test
adc
jne
clc
lret
movb
mov
pshufw
pushf
push
inc
rcll
ljmp
lds
loop
xor
adc
sub
xor
call
int3
aas
movsl
dec
iret
and
ret
xlat
jmp
pop
xor
mov
cmp
push
inc
lret
pop
xor
repnz
sub
xchg
jl
call
repnz
inc
aam
mov
inc
or
je
jne
out
hlt
scas
pop
ds
jo
popf
adc
xor
push
inc
push
mov
aas
xor
repnz
xor
cmpsb
jae
loopne
mov
nop
fdivl
push
dec
shrb
ret
inc
lret
les
cmpsb
loopne
addr16
sub
cli
lock
lds
js
xchg
gs
scas
shll
jbe
jmp
es
stos
in
xor
mov
push
testb
mov
test
mov
mov
mov
mov
push
iret
test
dec
rolb
and
or
ja
bswap
pusha
pop
ljmp
adc
iret
push
add
shrb
xchg
call
movsb
mov
pushl
cmp
and
cs
push
push
add
cmpsl
stos
call
xchg
xor
cmp
jno
into
bound
sbb
arpl
aas
inc
test
lcall
ja
outsb
shrl
xor
je
loopne
data16
andb
add
xor
sbb
cld
mov
push
insb
xlat
out
mov
jno
lret
inc
das
popa
or
sbb
movsl
mov
fiadds
cmp
insl
test
sti
jno
pushf
mov
mov
jb
mov
jae
mov
mov
mov
mov
jnp
push
adc
stos
movsl
xor
push
sub
ret
mov
aad
xchg
sub
les
dec
jne
jp
jo
loopne
xor
push
mov
jl
lret
popa
ret
cmpl
lea
mov
cmc
sub
mov
mov
add
dec
xchg
repnz
out
sub
fsts
fcomps
fwait
ja
jg
sub
or
xor
shlb
in
leave
fs
lcall
xorb
inc
fdivs
adc
lods
and
push
mov
int
fnstenv
mov
sbb
in
insl
xchg
push
rorl
sbb
mov
test
loop
xchg
in
outsl
sbb
inc
repz
je
mov
mov
fwait
das
cmpsl
jle
and
mov
jmp
mov
adc
lea
in
xadd
je
cltd
add
mov
cmpsb
mov
imul
sbb
mov
mov
int
xor
popf
pop
outsl
pop
loopne
push
je
xchg
in
xor
in
push
imul
add
and
sub
repz
or
xchg
mov
cmp
loope
xor
jae
cmp
push
push
sub
lcall
push
fiaddl
in
adc
sbb
mov
adc
ret
rcrb
add
xchg
mov
jno
pop
lret
pop
or
push
or
sub
pop
jne
push
add
dec
and
adc
pop
xchg
xchg
shrb
stos
fisubs
xchg
push
pop
mov
lds
mov
xchg
mov
ljmp
fmull
rcrl
into
pop
push
das
jmp
hlt
mov
pop
mov
push
or
and
pushf
popa
nop
notb
xor
pushf
in
sub
fists
mov
xchg
insl
dec
jns
mov
cmp
dec
pop
mov
lcall
aaa
mov
sbb
push
packssdw
xchg
out
clc
jl
sbb
fildl
push
icebp
std
movsl
jle
or
in
sahf
loope
xchg
fwait
dec
mov
sub
cmpsb
test
sahf
jb
cld
out
add
loopne
jg
fsubr
pop
push
cmpsb
sub
xchg
or
inc
in
cmp
stos
xchg
push
repnz
mov
xor
xor
xchg
xor
push
mov
insb
ret
cltd
outsl
xchg
inc
mov
sbb
jmp
dec
mov
pushf
fisubs
fdivs
shlb
popf
sbb
adc
aas
or
cmp
loop
push
inc
stc
mov
adc
popa
xchg
xchg
outsb
jge
pusha
fmuls
fwait
push
mov
scas
mov
mov
ds
sti
and
int
mov
cmp
pop
aad
sti
dec
push
movsb
mov
cmpsb
push
xor
push
fwait
add
push
int
bound
ljmp
push
lods
in
nop
jae
dec
stos
adc
addb
add
nop
mov
lea
nop
pop
imul
adc
cmpsb
call
dec
mov
mov
inc
sti
jns
adc
insl
test
pop
pusha
jns
in
inc
push
push
xor
add
insl
ds
rcll
jns
cmp
outsb
decb
repnz
cwtl
mov
xorb
icebp
js
add
sub
or
dec
pop
lahf
out
ljmp
int3
repz
aaa
mov
mov
lahf
shl
mov
mov
jbe
pusha
mov
inc
ret
cmp
rcrb
adc
dec
testb
mov
push
nop
xchg
jno
mov
stos
push
pop
test
adc
int
das
push
clc
push
bswap
sbb
and
pusha
aas
cld
xchg
cmp
test
outsb
push
in
inc
sbb
mov
sub
clc
test
cld
shrl
stos
insl
inc
es
lock
cltd
sahf
addr16
cmp
ds
int3
xor
push
and
loop
scas
fists
movb
xchg
cs
fisttpll
nop
sbb
enter
in
xchg
xchg
rcrb
ja
dec
xchg
pop
pop
repz
and
add
add
xchg
mov
test
mov
and
jp
rcl
cmp
xchg
sub
push
popf
jne
cmpsb
jnp
les
push
xor
cmp
xor
xchg
leave
pop
lods
std
outsl
fcoml
add
clc
and
test
fwait
ret
outsl
fdiv
mov
dec
outsl
outsl
and
pop
les
into
add
xor
aam
jne
fucomip
pop
push
out
dec
pusha
js
inc
xor
mov
sub
or
pop
inc
jle
outsb
push
lret
repnz
ja
ss
pop
imul
ret
fcmovne
in
fldl
mov
jmp
cmp
jnp
fistl
cmpsl
inc
sub
imul
add
mov
add
shrb
sub
push
fstpt
insb
dec
xchg
and
sbb
mov
lret
jecxz
mov
push
pop
jg
push
out
sub
nop
sbb
xchg
jns
jnp
pop
mov
xchg
filds
ret
inc
mov
movsb
pop
xchg
mov
xchg
mov
pop
jno
xor
ret
sbb
add
mov
sub
xchg
jbe
jecxz
mov
repnz
jmp
out
push
mov
add
pop
sbb
or
mov
push
mov
inc
loop
test
dec
mov
xor
xlat
imul
adc
and
jmp
inc
out
js
aad
mov
pop
loopne
inc
add
push
mov
mov
xor
test
pusha
pop
int3
pop
jnp
in
fmuls
and
xor
mov
pop
xchg
lahf
or
jg
pushf
mov
iret
icebp
fwait
stos
out
in
pusha
jae
popf
or
call
scas
inc
das
fiadds
mov
cltd
dec
xchg
mov
icebp
mov
jg
push
loopne
popa
sub
ljmp
scas
lock
pop
push
push
es
je
dec
jg
test
jo
scas
lcall
mov
inc
jno
add
and
xorl
fmul
push
push
inc
out
repnz
sbb
sbbb
xchg
ret
cli
fdivl
sbb
push
fnstcw
imul
nop
pusha
lret
outsb
aam
ret
xor
inc
pop
mov
pop
ret
mov
mov
sbb
pop
push
lods
es
imul
imul
int
cmpsb
sub
test
dec
lcall
sub
jmp
cltd
adc
xchg
adc
pop
jmp
and
fistl
jmp
add
add
jecxz
out
xchg
call
jns
push
sbb
test
sub
shlb
or
arpl
hlt
cli
stos
loop
mov
hlt
ja
xlat
add
cmp
ds
adc
mov
xor
clc
mov
mov
ss
fsub
mov
in
jns
push
daa
je
jo
mov
je
cmp
add
movsl
into
adcl
mov
push
jo
inc
aad
cli
pop
sbb
mov
test
xchg
mov
vxorps
xchg
adc
lds
es
push
dec
cmpsl
jecxz
mov
mov
push
cmc
aaa
xorb
dec
cmp
jb
sbb
dec
ljmp
or
cmp
cwtl
mov
add
cmp
sahf
imul
sub
loopne
inc
in
movsl
pop
stos
data16
fcoml
outsl
loop
mov
int3
sub
nop
jle
push
loop
jmp
xorb
cwtl
mov
jg
add
sbb
aam
adc
jae
pushf
mov
add
sahf
ret
fsts
popa
int3
pop
loopne
jae
and
out
lods
in
mov
in
out
addr16
aaa
mov
push
mov
or
mov
popf
push
push
and
shll
in
pop
xchg
cld
xchg
inc
add
sub
outsl
mov
mov
outsb
in
aas
sbb
rorl
or
mov
adc
js
pop
mov
xor
cmp
lret
cmpsb
xor
sub
aam
in
inc
cltd
dec
pop
sahf
mov
out
pop
mov
mov
jl
sbbl
sbb
aas
cmp
and
mov
cmp
imul
or
push
lds
push
call
pop
movsl
add
xor
inc
push
mov
sbb
inc
icebp
jge
and
push
pushf
adc
andb
xchg
or
in
les
sbb
cmp
inc
fidivrs
aad
loopne
rolb
mov
xor
stos
insb
jmp
sbb
push
xchg
jnp
push
shrb
in
or
dec
jno
inc
adc
mov
out
out
hlt
cmp
xchg
push
add
dec
sbb
test
jns
and
sub
popf
pop
cmp
test
test
ja
ds
lds
cwtl
xchg
pop
das
xchg
lcall
cltd
pushf
test
push
jbe
xchg
push
sbb
jl
dec
mov
enter
inc
icebp
inc
jl
lea
mov
jns
cmp
shlb
ficomps
sub
and
cmc
push
pop
jg
data16
cmp
mov
fnstsw
cli
std
and
adc
movsl
jbe
fdivrp
inc
lcall
test
mov
mov
push
cmp
ud0
leave
mov
mov
mov
clc
rorb
mov
push
lret
repnz
lahf
pusha
and
pop
xchg
mov
fucom
and
xor
mov
inc
inc
dec
pop
fcmovb
pop
pop
pop
dec
mov
hlt
dec
pavgw
adc
arpl
mov
mul
mov
leave
test
dec
push
xchg
sbb
mov
mov
fwait
pop
popf
xor
jecxz
fnstsw
jbe
sub
ds
push
adc
in
push
jmp
insb
push
hlt
arpl
int3
jecxz
sub
sahf
cmpsb
rcrl
lods
sub
push
cmpb
shrb
cmp
lea
jmp
addr16
enter
pop
add
or
int
add
cmc
ss
mov
fwait
call
jno
adc
fcmovu
test
push
mov
int3
dec
inc
std
subb
inc
push
aaa
inc
inc
mov
xor
jnp
aaa
and
or
fsts
mov
leave
push
repz
push
ret
inc
mov
jne
test
dec
std
jp
push
sbb
push
pop
push
test
push
pop
and
mov
pop
pop
sbb
cmp
push
stc
mov
sub
lret
data16
inc
hlt
sbb
cmpsl
pop
mov
or
xchg
inc
push
out
ljmp
sbb
push
loop
jle
out
fbld
jne
push
dec
flds
jge
movsb
push
fs
lock
xchg
lods
stos
pop
cli
ficoms
repz
movsl
bound
add
pop
pop
lds
jnp
pop
adc
fs
mov
sub
dec
push
jbe
hlt
push
jp
mov
xchg
add
push
xchg
mov
jle
movl
xor
cli
shlb
xchg
lock
mov
ret
fwait
out
fdivl
pop
fs
add
and
lock
pop
arpl
inc
insb
ja
je
sbbl
adc
pop
arpl
dec
adc
stc
add
mov
lock
cs
xor
sbb
mov
mov
int
cmp
mov
in
and
test
mov
cmp
and
hlt
jg
mov
sbb
jnp
xlat
xor
mov
dec
sbb
rclb
jle
sbb
xchg
jns
cmc
jle
and
sahf
xor
pop
xchg
xchg
outsl
pop
mov
dec
into
jg
mov
push
icebp
fstps
fs
test
sub
in
sub
ljmp
jno
dec
xchg
and
sarl
aaa
or
inc
and
mov
jb
mov
pop
popf
mov
jne
mov
fnstsw
test
dec
enter
adc
test
mov
fstcw
sarb
jge
sbb
xchg
repnz
ss
fists
or
stos
scas
push
jmp
sub
push
add
mov
je
rcrl
out
gs
icebp
iret
adc
cwtl
add
sub
xchg
push
fnsave
mov
mov
pop
pushf
leave
jne
iret
popf
pushf
jo
adc
sub
add
pop
jne
mov
sbbb
lea
cli
iret
inc
outsb
cmp
xchg
imul
jb
xor
je
aam
sub
mov
sbb
outsb
in
jle
stos
iret
inc
jns
jo
xchg
or
imul
repz
push
adc
push
push
addb
andb
pop
arpl
daa
push
cmp
sbbb
lods
push
mov
pop
xor
xlat
fbld
inc
mov
jo
dec
or
and
pop
mov
loop
push
cltd
hlt
xor
repz
mov
mov
cmpb
and
xchg
outsl
sub
subl
roll
fisubs
adc
rclb
or
insb
pop
jne
mov
jmp
and
lock
add
movsb
inc
loope
xor
mov
xchg
pop
adc
adcb
push
gs
or
sbb
clc
lret
mov
pop
mov
jge
jne
cwtl
sub
sbbb
xor
lods
mov
push
pop
fistpl
lcall
fistpll
sbb
and
addb
cmpb
sti
cmpsb
movsl
mov
jo
mov
push
js
mov
outsl
mov
outsb
mov
pop
filds
sub
pop
sub
push
sbb
xchg
dec
pop
mov
arpl
xchg
dec
in
inc
fisubrl
and
or
movsl
sub
xchg
leave
dec
out
inc
cmp
insb
test
aam
movsl
or
inc
add
es
movsl
mov
mov
push
cmp
aaa
sbb
loopne
nop
mov
lcall
outsl
push
stos
in
jbe
or
and
addb
mov
pushf
in
jl
jno
shll
ljmp
mov
aaa
jecxz
pop
add
pop
inc
js
sbb
pop
lods
xor
imul
sbb
pop
int
inc
out
sbb
xchg
sbb
adc
push
push
cmp
cmp
add
popa
dec
mov
jns
enter
lods
or
mov
mov
mov
mov
and
inc
xchg
test
and
lahf
sub
imul
icebp
aas
xor
popa
js
adc
scas
into
adc
loope
cltd
imul
lea
sub
lods
loopne
in
mov
dec
mov
push
jmp
mov
ret
mov
iret
and
mov
lock
std
mov
cmp
and
jge
enter
xlat
xchg
ljmp
mov
mov
xchg
nop
jb
lds
jo,pn
mov
jae
mov
bound
and
aaa
mov
imul
jnp
cmpsl
cmp
dec
xchg
push
mov
outsl
pop
push
out
jbe
fs
pop
add
lods
pushf
imul
add
mov
xor
filds
pop
push
test
lret
nop
and
mov
test
mov
adc
sub
fcmove
adc
push
mov
pop
sbb
mov
in
add
sub
shll
jbe
icebp
jbe
loop
mov
rcl
ret
xchg
cmp
loope
lret
loope
ja
add
mov
icebp
or
pop
adc
mov
in
in
loop
mov
int3
sbb
mov
xchg
xchg
xchg
push
iret
scas
out
pop
sub
enter
add
lret
jmp
add
sub
loop
imul
dec
cmpsl
rcrl
or
pop
mov
aam
in
daa
or
mov
dec
pop
mov
push
sbb
jg
dec
sbb
in
jno
jns
sbb
fbld
and
and
shll
iret
inc
mov
scas
or
jno
add
mov
lds
pop
inc
xorb
pop
or
ljmp
shl
outsl
fildll
jnp
push
jnp
cmp
push
xchg
mov
pop
and
adc
dec
ret
aas
push
fldenv
mov
test
mov
pop
dec
fld
bound
sub
iret
sub
cmpsl
testb
push
mov
jae
cmp
pop
pop
movsl
cmpsb
mov
xchg
lret
or
push
cli
mov
mov
cld
xchg
out
aaa
sbb
imul
out
fnstsw
and
add
addb
add
scas
or
cmp
push
mov
mov
in
movsb
cld
icebp
sub
lcall
sbb
ds
fsubp
lock
or
lock
scas
mov
inc
mov
sub
mov
sbb
push
sbb
lcall
shl
pop
ja
pusha
pcmpgtb
dec
test
les
dec
test
push
adc
add
fsubrs
xchg
jl
and
fisubrl
jnp
mov
pop
or
cmpb
rcll
xor
movsl
adc
dec
int3
mov
adc
cmpsl
leave
pusha
scas
xlat
jnp
pop
js
rcll
jmp
mov
jge
mov
stos
fidivs
pop
xchg
in
out
cmp
je
lcall
or
loope
fwait
jecxz
pop
bound
fmul
int3
mov
xor
subl
jno
xor
sbb
pop
cltd
dec
ds
push
push
nop
sbb
cmp
arpl
sbb
mov
xchg
adc
sbb
fwait
xchg
and
xor
dec
lret
sbb
and
lods
faddl
outsb
mov
loopne
mov
arpl
sub
inc
mov
push
xchg
in
xchg
test
cmpsb
or
push
jecxz
scas
subl
xchg
loop
imul
mov
in
into
cmpsl
dec
mov
lahf
mov
adc
or
es
jge
add
call
inc
addb
lock
mov
ret
pop
inc
push
sbb
cwtl
xchg
adc
jne
xchg
add
in
incb
pop
lret
xor
adc
out
fsubrl
stc
dec
fnstenv
lods
popf
ret
loope
xchg
fprem
outsb
cmc
or
scas
test
mov
and
int
push
cmpb
mov
xchg
xor
pop
cmp
adc
pop
dec
pop
mov
push
into
add
pusha
lea
ret
inc
xor
sub
aam
iret
adc
xchg
pop
out
lea
or
and
pop
cmp
cltd
sub
fsubrl
shll
push
shl
stc
jecxz
inc
mov
je
pop
in
jp
cs
add
enter
push
pop
insb
lahf
in
loop
xor
imul
stc
shlb
outsl
mov
xchg
rclb
popa
popl
push
xor
mov
pop
mov
test
push
jae
pop
sti
adc
incl
outsb
push
push
or
decb
lcall
lods
mov
xchg
cmp
out
insb
push
repnz
ret
cmc
loopne
mov
or
ds
pushaw
leave
dec
out
jl
fwait
aas
inc
mov
enter
loopne
ja
mov
out
out
leave
jp
lret
pop
pop
add
jbe
call
lods
dec
dec
cmp
sbb
jno
sub
mov
sbb
inc
sub
mov
or
data16
hlt
inc
das
and
pop
xchg
jmp
adc
mov
mov
mov
fists
sar
enter
sub
dec
loopne
test
test
adc
xor
fs
add
jbe
pop
lahf
lcall
in
mov
sub
fsubrl
roll
pushf
je
int3
icebp
loopne
sub
mov
xchg
arpl
pop
scas
test
in
pop
cmpsl
sbb
fimull
lock
ja
lret
mov
imul
int
cmpsl
ds
or
lcall
inc
add
push
pop
xchg
arpl
jg
es
and
cwtl
jecxz
or
inc
pop
jns
push
xchg
rcrb
add
sub
xchg
in
negb
pop
adc
dec
mov
sub
push
add
in
enter
inc
lahf
je
xchg
inc
ss
cld
push
adc
jbe
fldenv
push
or
mov
dec
ljmp
out
push
fst
repz
cwtl
or
push
fnstenv
ljmp
add
xlat
ljmp
push
mov
or
aas
lods
dec
sbb
push
cmp
mov
jg
adc
mov
mov
ret
jle
inc
sbb
and
shl
mov
movntq
insb
cwtl
jge
add
shlb
mov
add
lock
or
loopne
xchg
lds
dec
sub
dec
mov
pop
sti
pop
insb
inc
mov
and
dec
rorl
fiaddl
mov
push
xchg
inc
into
mov
es
pop
add
mov
xchg
sbb
adc
push
jecxz
setnp
test
xor
daa
ret
pop
in
lret
jae
mov
shlb
icebp
sbb
int
inc
fcoms
loopne
or
mov
orl
dec
adc
adc
sarl
sti
dec
sub
pushf
jo
mov
pop
pop
and
pop
jnp
jmp
mov
lods
sub
test
add
push
or
push
dec
imul
jg
push
cs
scas
sbb
nop
ret
stos
fnsave
test
lcall
dec
cld
pop
bound
cmpsb
push
in
shlb
rolb
loop
push
push
negl
fldt
mov
mov
and
fldcw
sahf
addb
jae
repz
data16
fiadds
in
lahf
loopne
mov
sub
or
and
or
jo
fs
test
jl
jg
stos
xchg
sbb
and
pop
in
mov
jle
or
mov
fildll
fisttpl
mov
movsl
mov
pop
sahf
mov
sbb
mov
ds
and
movb
xchg
ja
jae
hlt
test
sbb
dec
add
push
wbinvd
cs
lods
push
movsl
ficompl
dec
jne
push
jb
cld
cmpsl
ljmp
mov
or
jb
icebp
sahf
fsubrs
mov
mov
adc
or
mov
lahf
rcrl
xcrypt-cfb
cmpsl
and
sbb
sub
push
add
mov
adc
inc
sub
cli
push
cmc
loopne
andb
mov
icebp
cmp
pop
jno
ficomps
sbbb
pop
jne
jo
mov
xor
add
in
mov
or
sub
lds
adc
xchg
xlat
filds
mull
inc
jb
push
pop
xchg
outsl
in
sbb
jbe
ja
in
addr16
adc
fld
jo
scas
movsb
sbb
mov
jp
pop
mov
ljmp
clc
jnp
cwtl
pop
pop
ljmp
xlat
out
mov
stc
mov
push
jg
idivl
inc
das
adc
push
mov
mov
xchg
sbb
mov
clc
jle
mov
movsb
out
fldt
int
iret
and
test
mov
jnp
ret
cmp
mov
push
rclb
mov
stc
adcb
xchg
and
push
jg
push
or
mov
add
and
and
inc
jmp
mov
push
pop
fs
and
divl
push
fs
ret
popa
dec
in
mov
dec
jbe
sub
mov
mov
fstpt
pop
pop
js
mull
inc
push
and
sti
cmp
push
dec
scas
xlat
movsb
xor
je
sbb
sub
pop
push
orl
sbb
inc
and
jge
cmpb
pop
mov
xor
jle
notb
cmp
pop
sub
imull
outsb
outsb
cmp
sahf
cmp
push
mov
jo
and
lock
push
das
mov
pop
and
mov
imul
addr16
loop
jbe
leave
rcr
xor
bound
lock
fnstsw
xchg
lahf
cmpsl
jno
mov
arpl
ret
fwait
test
sub
xor
add
xor
popf
mov
mov
ret
stc
sbb
jle
push
pop
insb
and
pop
push
inc
pop
cli
xchg
xor
push
sub
sub
push
ficoms
lret
fwait
sbbl
push
loop
roll
xchg
sub
lahf
fcompl
xor
pop
cld
mov
popf
scas
das
mov
inc
test
inc
mov
and
sbb
out
pop
into
lea
adcb
outsb
xchg
ret
pop
cmp
scas
and
ret
stos
cs
xor
jbe
pop
push
mov
int
in
pushf
and
aam
pushf
mov
mov
xor
add
hlt
mov
sarl
sub
es
jo
push
mov
fs
mov
add
push
mov
add
push
xchg
cmp
cmp
inc
outsb
xchg
adc
and
add
cmc
test
cmp
imul
dec
out
mov
icebp
stos
shrl
mov
xorl
in
movb
int3
push
popf
test
scas
cli
pop
repnz
lock
cwtl
jnp,pn
in
jns
test
and
mov
push
loop
clc
mov
scas
pusha
jl
cmpsl
inc
pop
push
decb
or
xor
dec
in
fisubs
cld
and
pop
cmpsb
rcr
jmp
dec
jmp
in
fisttpll
mov
sbb
and
cli
lods
xor
das
es
pop
adc
les
test
dec
int3
mov
outsl
test
push
scas
rcr
gs
or
jns
xlat
popa
js
shll
cs
fwait
mov
push
aam
add
jecxz
adc
mov
imull
scas
sbb
cmp
ret
lods
into
sub
lods
or
sbbb
fisubs
in
push
cmp
lahf
jge
or
shrb
arpl
std
dec
in
and
dec
in
aad
out
push
testl
insb
das
add
bound
push
lahf
pop
mov
adc
inc
js
jle
inc
sahf
addr16
jle
outsl
sbbl
cmc
mov
cmpsb
and
fidivl
addr16
dec
test
or
fnstenv
xor
dec
in
jg
mov
or
mov
mov
loop
ljmp
outsl
xor
bound
in
push
dec
push
out
mov
pop
fsub
clc
jno
cmp
mov
lahf
mov
scas
das
icebp
cli
mov
fmull
andb
dec
leave
lret
push
adc
scas
out
push
mov
imul
lods
xchg
sbbb
les
sahf
jno
xor
movsl
sbb
and
cmc
sub
push
in
out
into
xor
inc
push
lock
loopne
stc
aam
fs
sub
stc
and
cli
popf
add
push
stos
and
mov
cmpsl
lds
and
lret
and
test
jle
pop
xor
aaa
inc
push
cmp
sub
arpl
aad
cmc
mov
push
popf
add
imul
xor
push
sub
mov
outsl
fistps
mov
fwait
inc
lds
lock
addb
loopne
pop
cmp
adc
jne
jg
push
push
jge
pop
hlt
nop
cmpsl
lcall
imulb
andl
pop
out
push
push
adc
fdivrs
lods
mov
adc
or
mov
punpckldq
mov
les
fisubs
cs
mov
jne
adc
inc
pop
fildl
mov
cwtl
cmp
loop
pop
daa
js
add
imul
add
push
gs
fimuls
test
jnp
dec
pop
jo
and
fnstenv
mov
push
mov
jne
sbb
push
aaa
mov
xor
lds
mov
lea
gs
mov
das
lcall
loope
clc
mov
xchg
out
andl
fwait
out
push
jnp
lcall
push
dec
mulb
inc
mov
dec
sbb
mov
ss
mov
push
jl
repz
jg
sub
pop
icebp
fwait
jp
pop
fmul
mov
pop
adc
rcrl
or
imul
lret
adc
pop
bsf
imulb
repnz
mov
js
jp
inc
testl
inc
xchg
xor
hlt
in
es
dec
jnp
mul
test
inc
cmp
push
push
or
and
sbb
popf
lds
and
and
xchg
es
pusha
out
and
cmp
rolb
int3
repz
das
test
cwtl
lcallw
push
arpl
pop
cmpsb
xor
adc
dec
xor
mov
pop
push
insl
adc
lret
testl
xchg
dec
pop
sbb
imulb
scas
and
inc
xbegin
cmp
push
mov
sub
mov
jl
les
shrl
fdivl
mov
aad
mov
hlt
mov
cmp
je
xchg
sbb
push
jnp
lods
mov
xchg
mul
pop
adc
in
push
jge
test
mov
mov
aad
je
outsl
rcrl
mov
loope
fcom
roll
lds
loop
insl
sbb
mov
push
mov
dec
xchg
add
out
push
outsb
sub
les
test
jle
fstps
mov
pop
mov
xor
dec
mov
les
lahf
push
pop
push
mov
mov
jecxz
fs
hlt
lock
ss
mov
ficoms
clc
sbb
inc
mov
or
mov
pushf
vsubps
pop
pop
pop
xchg
mov
adc
lock
mov
mov
mov
pop
push
popa
or
std
fdivrs
mov
pop
fwait
adc
mov
loopne
subb
lds
adc
popa
stos
inc
pop
mov
add
addr16
fcmove
sub
ss
xchg
lods
jmp
sbbb
xchg
insl
mov
ss
pushf
cmp
pushl
or
repnz
outsb
mov
mov
push
int3
js
lock
push
inc
es
arpl
fldt
sbb
mov
std
cmp
xchg
hlt
cmp
rolw
and
mov
lret
loopne
dec
call
sbbl
fdivp
mov
nop
stos
lcall
fwait
mov
sub
mov
les
xchg
sbb
out
cmpsb
mov
mov
mov
pop
inc
test
outsb
cmp
xchg
jbe
sbb
pop
sub
in
sbb
xchg
addb
mov
movsl
stc
xchg
inc
int
inc
and
pop
mov
sti
push
scas
loop
and
add
fwait
nop
jno
xor
xchg
dec
cmp
and
and
fcomip
adc
dec
loope
pop
mov
rcrl
inc
jb
jno
movsl
push
add
aad
mov
adc
mov
adc
shld
popa
fisubrs
jmp
movsb
imul
cmpsl
or
incb
xlat
xor
mov
cmpsb
gs
adc
dec
adc
data16
and
fdiv
push
mov
leave
pop
push
xor
mov
or
movsl
push
add
movsl
jmp
cmp
gs
push
sub
js
cmpsb
stc
add
cmp
movsb
and
and
popa
xor
jnp
sahf
inc
sti
adc
mov
mov
dec
xor
adc
out
mov
hlt
lahf
test
dec
cli
pop
int
fsub
into
sub
jp
pusha
adc
in
scas
jecxz
cmpsb
cmpsl
sub
mov
cmp
push
rcrl
loop
lods
scas
sbb
loope
push
jae
xchg
negl
lods
out
pop
fs
ret
dec
lret
aas
cmpsb
test
adc
sub
mov
xor
xchg
fcmovnbe
pop
xchg
push
push
sbb
mov
in
mov
sbb
test
daa
cli
outsl
mov
xchg
sub
les
dec
loopne
dec
call
cld
fwait
rcrb
jbe
iret
pop
mov
inc
mov
sub
add
sub
xchg
mov
cmp
loope
xlat
xchg
jp
imul
mov
and
sarb
push
pushf
inc
addr16
add
pop
xor
or
ss
fwait
cmpl
pusha
dec
in
lods
sbbl
mov
jns
adc
and
aas
xor
mov
jne
stc
dec
mov
les
xchg
icebp
popa
jnp
popl
inc
and
int3
rcr
add
push
xlat
inc
ret
loop
lahf
inc
outsl
movsb
pop
sbb
push
and
mov
xor
add
ss
xor
lret
and
xchg
loope
imul
jle
addr16
les
sub
inc
and
adc
aad
pop
jbe
xchg
push
fsts
fisttpl
jbe
into
mov
and
jne
sub
sub
push
mov
add
cmpsl
or
dec
push
pop
push
ret
mov
xor
dec
ret
mov
das
push
pop
out
mov
push
add
xchg
test
or
add
mov
mov
pop
les
inc
inc
lock
rcrl
mov
cwtl
sbb
jle
inc
cwtl
sub
and
test
inc
sbb
jge
in
sub
xor
shlb
imul
or
pusha
mov
jno
lods
je
inc
jno
repnz
pop
aaa
rorl
dec
cltd
sbb
cmp
mov
dec
stc
movsl
xchg
daa
imul
call
adc
fimuls
lahf
dec
cli
shr
add
les
inc
jge
or
mov
sti
dec
pop
sarb
subb
xchg
sbb
stc
lahf
sarl
pop
mov
int3
mov
or
jg
sbb
leave
xlat
jge
cwtl
mov
int
imul
cmp
and
test
in
dec
mov
es
xchg
mov
test
inc
movsb
xchg
scas
out
xchg
sub
mov
std
imul
andb
jl
pop
jns
xor
into
jl
sub
pop
xchg
xor
dec
loop
xchg
dec
mov
mov
dec
cmpsw
ds
je
cmpl
addr16
xchg
mov
pop
dec
inc
sti
ret
mov
lahf
mov
push
fcompl
cmp
pop
jmp
add
fists
mov
pushf
mov
cmp
repnz
cwtl
das
je
cld
scas
xchg
clc
sbb
sti
divl
fisttpl
or
shrb
add
rol
xor
divb
push
mov
xchg
jmp
pop
out
iret
cli
fsubrp
push
data16
pop
sbb
and
xchg
in
iret
cwtl
inc
pusha
orb
add
push
pop
mov
jno
movsl
xchg
push
incl
loope
pop
loope
sbbl
mov
jns
aas
or
xor
add
femms
rdpmc
sti
cld
stos
sbb
mov
retw
add
outsl
adc
mov
fidivs
jge
pop
or
jl
mov
push
rclb
cld
and
jne
lods
push
sbb
shlb
cltd
ret
jo
out
stos
imul
repnz
add
mov
subl
add
int
jns
inc
xchg
ss
orl
or
pop
add
js
jne
outsl
rorb
outsl
sbb
test
pop
adc
mov
xchg
push
dec
push
popa
jo
inc
jbe
lods
pop
shl
xor
insl
bound
cmp
and
jle
test
sub
jle
hlt
lea
xchg
sbb
mov
addr16
push
and
popf
cmpsb
jno
lret
pusha
mov
push
jp
mov
test
adc
cltd
cmpb
fwait
mov
in
mov
idiv
add
pop
addl
sbb
pop
sub
mov
and
or
and
push
clc
cmp
popl
mov
jns
pop
jge
sbb
js
stos
inc
dec
jle
std
stos
dec
scas
imul
jmp
js
cmp
mov
xor
jle
cltd
push
pop
and
mov
aas
aaa
stc
xchg
aaa
aaa
js
ljmp
jbe
call
aad
leave
cmp
mov
or
fs
gs
dec
loopne
xchg
cmp
fnsave
xchg
pop
mov
inc
cs
or
fisubrl
int3
js
add
xchg
xor
repz
cwtl
adc
loop
lea
aam
and
dec
fsubr
scas
jl
or
sti
mov
push
sbb
inc
add
and
push
popaw
loopne
dec
jecxz
push
or
sbb
js
outsb
push
pop
fs
mov
xor
repz
dec
inc
lret
pop
or
jp
sub
lcall
nop
xorl
fsubl
or
pop
pop
sub
roll
pop
add
dec
aas
sti
icebp
dec
lahf
lcall
xor
aam
fdivl
mov
lret
fucompp
mov
xchg
clc
xlat
inc
sub
sti
mov
movsl
icebp
cmp
inc
cmp
lret
into
insl
pop
sbb
xor
xchg
fldl
fwait
inc
mov
and
adc
push
jb
mov
das
enter
shlb
push
fincstp
pop
mov
cs
pop
movl
insl
xchg
arpl
int
cli
jmp
int3
adc
in
fwait
sbb
repnz
cmp
data16
cmp
mov
mov
gs
mov
push
loop
lret
enter
cmp
xchg
fs
sahf
push
dec
clts
sti
pop
mov
pop
inc
pop
pop
ljmp
and
add
in
mov
arpl
or
add
and
addb
mov
in
cmp
pop
xchg
cli
push
lods
mov
pop
arpl
or
jge
leave
negl
jnp
push
pop
xchg
andb
sub
jae
lods
enter
mov
inc
or
jae
jb
les
aam
push
cmp
fisubrs
and
adc
lahf
mov
and
lea
test
scas
pop
arpl
subb
pop
add
or
test
out
int
dec
lods
or
jp
insb
js
rclb
sbb
cmp
adc
ss
and
dec
add
jl
cmpsb
popf
push
mov
in
aam
sub
xor
lock
dec
cli
lock
sbb
sub
or
imul
jne
js
push
pop
push
mov
daa
jne
cmpsb
addb
or
in
or
mov
jns
mov
inc
lods
inc
fcomp
data16
bound
inc
out
call
and
jp
and
inc
lods
mov
test
push
inc
cwtl
or
mulb
lret
inc
mov
mov
pop
dec
adc
push
mov
cli
xchg
stos
int
loopne
ljmp
faddp
mov
insl
dec
add
in
pop
dec
call
add
sub
mov
lahf
mov
fdivrp
ss
je
xchg
dec
out
mov
sbb
mov
mov
adc
jge
and
stos
add
jne
out
in
hlt
jl
mov
or
jo
inc
cld
aaa
cmpsl
push
xchg
orb
xlat
adc
and
jo
lods
stc
gs
gs
fidivl
aaa
pop
mov
pop
in
std
movsb
cmp
dec
xchg
inc
mov
and
or
sbb
outsl
inc
out
mov
test
mov
mov
xor
loopne
gs
add
or
jno
add
sub
aad
jo
stc
jmp
dec
test
pop
jbe
xorl
ret
ljmp
jecxz
add
mov
mov
insb
jae
je
outsb
mov
daa
mov
dec
inc
or
clc
jmp
cmp
sub
sbb
or
fistl
sub
cltd
xchg
fiaddl
stos
in
xor
push
scas
add
sahf
test
lret
inc
sbb
push
add
test
enter
and
mov
mov
repnz
pmaxsw
sbb
mov
xchg
mov
sbb
inc
scas
loope
xchg
test
inc
aas
imul
cmpsl
scas
adc
push
outsb
dec
xor
ja
rcr
ss
imul
cmc
dec
cmp
dec
stc
add
jle
ret
xchg
add
jp
xchg
mov
ja
xchg
mov
dec
das
cld
mov
in
bnd
sahf
or
hlt
data16
arpl
leave
and
inc
xchg
cmp
push
inc
shrl
pushf
dec
mov
or
push
jecxz
inc
bound
inc
xchg
sub
jl
aam
pop
loopne
jge
sub
jmp
fdivrp
push
std
pop
and
adc
xor
dec
repz
push
scas
pop
xchg
inc
ret
mov
stc
out
aaa
xor
pop
das
inc
cltd
or
mov
xor
mov
out
incl
jle
xchg
push
push
push
out
stc
aaa
dec
mov
mov
sahf
into
push
mov
loope
mov
lock
pop
xchg
sub
cmpsl
xchg
jns
push
inc
ret
xor
and
pop
xchg
jg
mov
or
in
addr16
inc
into
frstor
jo
ret
in
push
enter
xchg
dec
fstpl
aaa
mov
dec
imul
js
inc
rclb
imul
cmp
orl
or
fs
mov
outsb
xor
fwait
add
ffreep
adc
mov
cs
dec
sbbb
xor
mov
cmpsl
imul
push
jnp
pop
popa
mov
xchg
mov
mov
in
movsl
inc
clc
gs
sbb
sbb
mov
mov
push
lods
jmp
mov
jle
push
push
rol
nop
outsl
xchg
xchg
std
imul
int3
in
call
pop
jl
adc
cwtl
pop
aaa
mov
lock
mov
dec
hlt
jnp
outsl
fmull
fiadds
jns
mov
pusha
or
cltd
inc
cli
push
pop
addr16
and
call
ficoms
jmp
testb
lcall
loopne
and
mov
lds
sub
jp
in
or
jae
popf
push
and
paddsw
pop
repz
dec
xor
xlat
mov
xchg
cltd
adc
in
dec
or
xor
inc
dec
stc
cmp
bound
dec
cmp
in
lret
jbe
dec
or
sbb
sbb
inc
arpl
insb
sar
lea
xor
mov
push
adc
inc
lret
and
test
mov
inc
mov
das
adc
dec
jb,pn
or
insl
push
mov
xchg
addr16
fdivl
inc
or
ret
mov
jle
popf
add
stc
fcoml
iret
xor
icebp
xor
loope
call
or
jmp
enter
lahf
out
fnstsw
das
jae
xchg
mov
into
and
inc
adc
ret
cmp
inc
psubq
xlat
push
pop
fstpt
test
inc
push
stc
bsf
cmpb
sarb
mov
pusha
inc
aam
xchg
xchg
adc
addr16
out
push
mov
push
jg
out
call
mov
inc
mov
stos
jno
jne
sbb
movsl
mov
in
and
scas
aam
or
and
xchg
lods
pop
leave
jecxz
jo
in
popf
in
mov
pop
test
andb
insb
in
jno
pop
imul
push
inc
mov
insb
ja
cld
fdivrl
inc
bound
xor
xor
mov
addr16
sti
push
pusha
jle
add
popf
fisubs
inc
dec
cmp
js
in
cmc
je
frstor
in
es
xchg
inc
popf
jno
lock
cwtl
call
outsl
mov
imul
mov
daa
xor
inc
dec
xchg
cmp
jmp
pop
push
out
fcmovne
fcoms
loopne
sti
dec
and
xor
push
mov
icebp
add
pushf
mov
out
jns
aad
pop
sbb
xchg
inc
hlt
shr
iret
mov
adc
fdivrs
cwtl
jge
sub
aad
movsb
in
cmp
jl
add
dec
or
inc
inc
std
adc
lret
jg
sbb
rcll
fidivrs
repnz
push
bnd
in
and
stos
lds
or
leave
mov
jne
push
insb
sbb
adc
xor
ret
daa
add
arpl
xor
xchg
or
int
push
into
xchg
test
jae
cmp
lret
mov
mov
xor
das
mov
pop
adcl
iret
scas
sbb
loopne
insl
pop
sub
ja
mov
mov
and
and
push
shlb
mull
inc
lret
popf
sarl
adc
jo
add
pop
addl
xchg
mov
xchg
fs
divb
jae
jg
bound
xor
movsl
cmc
xchg
mov
mov
inc
loopne
rol
xor
xor
arpl
pop
icebp
pop
jmp
into
aas
cmp
aad
out
and
iret
pop
in
adc
jb
lahf
jns
xor
dec
sbb
or
imul
repz
push
ds
mov
pop
push
loopne
in
out
shrl
fdivrl
xchg
jno
mov
pop
jle
push
negb
add
cmc
add
dec
dec
fstl
in
pop
jecxz
add
jle
mov
mov
pusha
mov
push
aaa
cli
subb
fwait
mov
add
xor
add
xor
clc
rorl
mov
lods
lret
sti
shlb
stos
aas
out
lock
sti
push
mov
jl
mov
mov
ja
insl
mov
add
mov
in
ret
int
out
in
stc
dec
jle
xchg
dec
fidivrs
in
ficoml
test
or
stos
rcrb
push
outsl
addr16
sbb
cld
repz
push
test
iret
and
aas
cmp
cmp
dec
aas
into
cmpsl
mov
into
adc
mov
or
mov
xchg
or
ficoms
add
out
out
rorb
scas
je
cmp
sbb
sbb
in
jl
xchg
jae
test
or
xchg
clc
arpl
push
xchg
mov
inc
jnp
loope
shlb
xchg
jp
fisttpll
mov
lcall
xor
jmp
movsb
jge
xchg
sbb
xchg
jb
push
xor
rolb
mov
jne
mov
sub
cmp
lock
mov
inc
pop
fcomps
and
dec
mov
xchg
and
loop
popa
xor
xchg
ja
mov
lods
fisttpl
jnp
outsb
fstpl
jge
pop
je
lret
aaa
out
inc
push
cmp
add
add
mov
add
rcrb
sub
ds
fwait
xchg
in
lret
jg
cmpsb
fs
adcb
mov
mov
jl
jmp
andl
inc
loope
out
test
sub
fistl
cmp
jne
in
sub
pop
rcl
push
stc
mov
fldl
adc
pusha
loopne
fdiv
in
lods
imul
lcall
cmp
outsl
insl
sahf
addr16
xor
cltd
jmp
scas
add
inc
cmpb
mov
pmulhw
pop
cltd
cltd
aam
ss
notl
pop
xlat
lcall
into
mov
and
and
test
js
push
xchg
dec
lret
sbb
out
adc
fsubl
ret
lret
or
pop
fwait
push
xchg
sahf
scas
sbb
mov
xlat
ret
inc
mov
push
sbbl
xchg
jl
addb
lds
push
jb
sub
pop
adc
xor
adcl
push
push
add
jg
repz
mov
in
add
es
sbb
cmp
mov
aas
int
jmp
in
cli
lret
lret
pop
pop
push
sbb
ret
or
mov
mov
sub
div
int
sub
outsb
mov
scas
and
adc
and
lods
imul
xchg
jl
or
jmp
gs
stc
pop
imul
sarl
mov
cmp
xor
cmp
fsub
lahf
lret
cmp
and
jge
int3
fmuls
dec
mov
xchg
ljmp
mov
sub
es
mov
insb
add
adc
push
out
mov
pinsrw
stos
mov
mov
movsb
imul
sub
cmp
test
mov
mov
movsl
add
out
push
and
push
mov
fmull
jecxz
movsl
dec
jns
or
js
adc
sahf
dec
pop
mov
in
aas
pop
cs
aad
lcall
mov
sub
xor
inc
inc
dec
xor
xchg
into
pusha
cmp
and
lret
mov
add
dec
adc
dec
add
repnz
mov
iret
in
data16
jnp
pop
movsl
repz
xlat
ja
ret
lahf
dec
mov
insl
xchg
nop
gs
dec
loope
mov
inc
aad
dec
loop
dec
xchg
aad
jns
nop
xchg
jmp
xor
filds
sbb
jle
mov
ljmp
jmp
jbe
enter
mov
or
and
movsb
orl
stos
arpl
loopne
int
push
scas
loope
cmp
jae
xor
or
and
mov
rcrl
out
push
arpl
fcompl
cs
int
cmp
adc
in
test
fld
test
movsl
rcrl
and
lret
idiv
dec
out
cmpsb
test
adc
mov
sub
addb
pop
inc
push
stos
lahf
sub
jae
inc
enter
stos
dec
dec
mov
fadds
add
rcr
movsl
insl
pusha
out
mov
pop
add
fisttps
popf
sbbb
jbe
clc
or
imul
popa
sub
dec
cmpsl
dec
cltd
xchg
inc
std
mov
push
fucomi
loopew
push
sbb
in
je
add
vshufps
push
rcr
hlt
mov
cmc
pop
or
bound
and
test
sub
inc
add
in
ja
add
push
xor
xchg
fisubrs
insb
dec
in
iret
notb
mov
push
mov
push
push
inc
outsb
nop
or
int3
push
jo
mov
sub
daa
sbb
push
in
push
pushl
js
xor
adc
nop
mov
xchg
mov
and
out
adc
jo
cmovl
add
sub
fwait
out
stc
sbb
mov
into
cmp
push
jmp
jns
in
jecxz
cmp
stos
lods
arpl
mov
mov
cwtl
sub
aam
mov
or
pop
gs
js
scas
adcl
lods
adc
cmpsl
test
movsl
shr
mov
aaa
js
insb
mov
cmovg
mov
push
and
repnz
jnp
cmp
shr
or
mov
repnz
fucomi
inc
es
addr16
jmp
fxrstor
insb
push
rcr
push
repz
nop
add
cltd
mov
out
ss
cli
cmpsb
scas
aad
add
dec
leave
jge
clc
dec
sbb
mov
inc
leave
call
jo
jl
sahf
mov
jle
nop
gs
adc
jbe
ljmp
clc
sbb
sbbl
int3
sub
sbb
xor
xchg
ja
call
xchg
mov
mov
int
subb
push
into
add
je
aad
push
sbb
xchg
out
inc
mov
pusha
lea
inc
push
adc
inc
fucom
inc
jns
xor
inc
sbbb
cmp
sbb
sub
dec
mov
mul
add
mov
and
xor
xorb
andl
les
insl
rcll
aam
leave
sub
aam
sbb
add
xchg
je
mov
add
nop
jne
int
fcmove
push
push
lahf
fisubl
aas
push
push
lods
outsb
add
test
cwtl
mov
push
xor
jb
jecxz,pt
icebp
sbb
xchg
jecxz
sbb
inc
and
inc
push
sbb
lods
push
mov
clc
add
sbb
inc
pop
movsb
pop
mov
imul
lods
adc
test
sarl
dec
cmp
enter
mov
or
jle
notl
jecxz
add
pop
mov
mov
lds
gs
sub
insl
cmc
lcall
mov
cmp
push
cmpsb
stc
mov
adc
inc
mov
inc
rcrl
xlat
jl
loopne
imul
add
and
outsb
jp
xchg
ret
lcall
mov
call
es
lds
mov
repnz
insl
and
mov
cmp
xorb
lahf
mov
in
in
movsb
sbb
or
cmpsb
sub
mov
pop
adc
roll
mov
xlat
push
loop
pop
push
jns
in
data16
popa
dec
mov
push
negb
or
int3
pop
pop
inc
ljmp
jns
xor
inc
pop
mov
mov
rorb
repz
inc
outsl
int3
push
mov
dec
cwtl
pop
test
add
in
xor
cmp
mov
jb
jno
in
adc
jmp
test
cmpsl
mov
mov
test
xor
pop
adc
xor
xor
or
pusha
xor
jno
pop
push
pusha
mov
adc
roll
icebp
test
jno
cmc
mov
sub
mov
ret
jge
fs
gs
sub
sbb
jbe
mov
pop
push
negl
rolb
mov
stc
cmpl
mov
add
out
mov
shr
dec
rclb
cmpl
mov
sahf
cmpl
mov
mov
cmp
outsl
sbb
pop
xor
popf
divb
fwait
mov
fwait
jl
leave
jns
xchg
jp
cltd
cmpsl
and
imulb
clc
pusha
ss
xchg
add
and
mov
mov
jno
lds
imul
stos
popf
mov
lock
adc
sbb
pop
sahf
push
sub
in
sbbl
int3
mov
insb
dec
xchg
mov
xchg
data16
cwtl
and
addr16
outsl
iret
out
inc
subb
sbb
inc
cmc
nop
repz
jno
data16
jle
bound
cmp
xor
outsl
pop
pop
add
xor
pop
mov
jno
movsb
xchg
cmp
pop
xchg
jg
mov
push
xor
sti
sbbl
adc
and
out
mov
pusha
pop
cmc
lcall
cwtl
sub
insl
adc
loop
jo
dec
jne
mov
rolb
mov
sub
mov
push
outsl
repnz
mov
jnp
mov
loope
pusha
and
sub
insb
outsl
jmp
pusha
adc
jge
and
sub
andl
outsb
dec
data16
jno
jecxz
add
pop
mov
mov
mov
sub
pop
int
fs
dec
mov
lods
mov
popf
leave
sbb
fisubrl
push
mov
call
pop
ljmp
mov
ficoms
rorb
push
cli
pop
or
and
jecxz
ja
add
ret
mov
jne
or
push
inc
loop
insl
fxch
sbb
icebp
and
arpl
push
pop
icebp
xor
out
xchg
cmp
inc
into
popw
jnp
add
inc
ljmp
loop
and
mov
lahf
sbb
sub
jl
jo
xchg
pop
dec
pop
into
and
jl
sbb
xor
or
mov
mov
cli
mov
daa
cmc
dec
sahf
and
leave
aam
cmp
mov
xchg
pop
aas
insl
lret
sti
mov
movsl
pop
mov
loope
imul
push
sub
xchg
in
emms
andl
ret
cmpsl
loope
jg
mov
add
stos
ret
in
ffreep
aaa
rcll
push
icebp
je
inc
dec
leave
inc
jmp
adc
lret
sub
push
xchg
mov
jb
fsub
pusha
ds
mov
lods
cmpsb
xor
aam
call
dec
lcall
mov
lods
inc
mov
fstp
lcall
loopne
mov
sbb
mov
lock
test
test
inc
add
pusha
mov
cli
jnp
std
icebp
xchg
aad
lcall
jno
ret
hlt
mov
lea
inc
neg
xlat
inc
mov
outsb
inc
popa
mov
mov
lods
cld
test
and
mov
adc
mov
jb
dec
mov
stc
and
xlat
movsl
clc
cmp
sahf
hlt
xlat
popa
test
adc
mov
mov
insl
loope
aas
cmp
mov
lcall
jg
xor
jno
shl
int
sub
push
mov
jbe
stc
inc
mov
loopne
mov
int
jns
sahf
push
jl
outsb
jmp
jecxz
xchg
mov
fs
mov
sbb
dec
fisttps
pop
mov
xor
xchg
xchg
fdivs
pop
push
jb
les
call
mov
adc
pop
lds
ret
add
xchg
pop
inc
cmp
rol
sbbl
add
popa
lea
jecxz
mov
cmc
es
or
imul
and
push
mov
cmp
call
fcmovnbe
inc
or
negb
fwait
int3
xchg
into
scas
pop
inc
in
popa
dec
addb
aad
arpl
pop
test
mov
pop
das
movsb
inc
ss
xor
inc
adc
movsb
adc
cmp
loopne
fisttpl
loope
push
cmpsb
mov
aam
jno
sti
sar
movsl
dec
cmpsl
es
cmpsb
hlt
lahf
dec
int3
data16
mov
imul
test
push
mov
lea
iret
out
pusha
cli
mov
mov
movsb
sbb
mov
jno
movsl
aam
or
ljmp
jmp
mov
sbb
pop
outsb
sti
push
xchg
xchg
mov
mov
push
imul
mov
scas
adc
popf
mov
bound
testl
shl
lcall
int3
popa
rclb
stos
push
lods
xlat
or
sarl
or
out
and
inc
arpl
add
push
jmp
fnstenv
incb
sbb
test
idiv
cmp
stos
jns
sub
xor
lahf
out
lock
shll
popf
pushf
pushf
scas
aas
pop
cmc
outsb
insl
inc
call
std
pop
xorb
lds
push
add
xor
add
inc
movsl
xor
cmp
add
jl
pop
cmpsb
dec
mov
push
push
jle
and
mov
out
push
mov
movsl
leave
bound
adc
adc
mov
dec
les
cltd
pop
arpl
push
jae
xor
add
js
mov
adc
arpl
out
push
insl
sub
mov
repz
mov
push
push
movsb
aad
jecxz
mov
jb
call
leave
push
in
cmp
in
add
xor
lea
jl
out
imul
or
sub
and
daa
or
mov
lods
mov
sbb
fwait
vminsd
lahf
cld
mov
adc
hlt
xchg
sbb
push
jg
mov
inc
pop
xchg
scas
out
enter
test
push
mov
xchg
adc
push
jle
sbb
insl
rcrl
ja
pop
cld
xchg
jae
fcompl
and
shll
sbb
adc
add
xor
dec
adc
rcr
arpl
xor
out
inc
xchg
jg
call
popa
dec
sbb
repz
pop
mov
push
in
std
sub
scas
sub
mulb
jb
pop
inc
mov
ror
dec
sub
xor
mov
push
sbb
aaa
mov
sahf
sbb
ficomps
outsb
fisttps
sbb
push
imul
inc
xchg
xchg
xchg
push
dec
xor
xchg
add
mov
fdiv
xchg
lods
jecxz
mov
outsb
and
and
leave
add
xchg
test
adc
incb
dec
jbe
inc
mov
and
mov
lds
sti
pop
pop
lods
cmp
in
jb
sbb
push
stc
orl
vpmacssdql
pop
inc
iret
xor
fisubrs
xor
out
loope
mov
out
int3
inc
sbb
sub
push
rep
jno
scas
xor
xor
adc
imul
jge
test
cwtl
mov
jno
jns
addr16
mov
push
mov
add
jl
xchg
test
xchg
sub
les
or
cmp
or
jge
or
sub
and
dec
adc
bound
jle
lret
sub
jne
and
fistl
std
cwtl
or
imul
aam
jmp
mov
add
sub
out
ret
push
and
inc
dec
push
xor
add
enter
sarb
push
jle
push
sub
mov
pop
movb
stos
fwait
loop
jne
mov
inc
push
cwtl
cmp
fdivrs
lods
or
shll
ficoml
and
mov
sbb
test
mov
sub
mov
iret
pop
shrl
cmp
test
stc
xchg
lea
cld
inc
mov
jno
mov
imul
xor
mov
sub
scas
sub
psllq
out
cmpsb
mov
push
out
ljmp
enter
xor
popf
jne
test
add
sub
sub
fildll
test
xchg
mov
test
lcall
push
or
and
loope
xchg
sbb
mov
call
pop
mov
cltd
xor
dec
pop
mov
imul
mov
ss
jne
cmp
sbb
add
pop
movsb
push
jg
mov
stos
mov
or
pop
pushf
popf
enter
mov
loopne
cld
insb
cmp
fwait
icebp
add
inc
je
aad
orb
sub
dec
xor
pop
shll
loopne
push
daa
xor
adc
insb
je
popa
ss
xor
jo
sbb
push
pop
aad
jns
vpcmpeqw
rcll
or
popa
push
imul
and
jg
cmc
or
je
pop
cmp
adc
in
add
scas
test
cbtw
push
out
fcmovbe
js
jg
dec
gs
fisubrs
xchg
adc
add
cltd
dec
mov
out
adc
lcall
mov
mov
cmp
cmp
aaa
popf
popf
mov
push
push
out
dec
loope
ljmp
pop
aaa
add
jg
daa
pop
mov
loop
pop
ret
add
inc
push
mov
in
jae
dec
mov
sub
dec
push
loopne
cmp
test
frstor
shl
hlt
in
outsb
dec
dec
inc
stos
push
sbb
mov
cld
in
jae
enter
lock
fyl2xp1
pop
popf
and
push
pop
pop
dec
jle
cmc
inc
lcall
inc
fildl
shl
xor
outsb
inc
push
sub
or
sbb
in
push
xlat
icebp
xchg
movsb
and
sub
rcrb
pop
xchg
or
les
nop
scas
call
es
xchg
push
dec
mov
pop
pop
xchg
cld
out
mov
mov
jg
outsb
push
pop
push
mov
push
jmp
fidivrs
mov
pop
aas
and
and
pop
je
sub
mov
outsl
jae,pn
js
jnp
fisttpll
fwait
enter
cltd
arpl
les
lea
scas
mov
sbb
mov
or
lea
sbb
scas
iret
pushf
jl
sbb
mov
and
scas
pop
mov
jno
xchg
outsl
nop
xor
pop
xor
movsl
mov
xchg
xchg
adc
dec
sbb
shl
xchg
out
call
mov
dec
inc
jae
and
icebp
pop
in
fwait
dec
lea
adc
pop
sbb
pop
loope
jno
cmp
fwait
mov
fdivr
adc
rcrl
sub
pop
popa
mov
je
roll
ljmp
push
dec
push
movsl
ffree
xchg
push
fmuls
push
jle
insb
outsb
rcrl
repnz
repz
mov
test
cld
sbb
orl
out
inc
xlat
mov
mov
mov
cltd
jecxz
sbb
data16
mov
push
lods
mov
cmp
jp
add
adc
lret
arpl
int3
inc
xchg
jg
sbb
cmp
inc
stos
pop
shlb
or
adc
sahf
test
jge
fimull
inc
jns
imul
ficomps
dec
push
testl
cmp
xor
rcrb
cltd
xor
inc
xchg
daa
cmp
adc
adc
sub
scas
divb
pusha
inc
icebp
push
lcall
loope
nop
pop
and
pop
test
mov
aam
orl
insb
push
mov
out
add
stc
jbe
imul
jecxz
pop
and
inc
jmp
or
inc
lret
push
xchg
bound
pop
into
std
dec
in
aad
lods
pop
xchg
ret
mov
push
fwait
adc
mov
pop
hlt
jnp
and
fs
push
add
hlt
jg
xlat
lds
mov
cmp
add
xor
adc
pop
xlat
test
dec
sbb
jl
jae
add
outsl
and
nop
stos
int
push
loopne
ljmp
pop
stos
mov
push
loope
jb
xchg
xor
frstor
adc
jp
jbe
call
add
jbe
pop
mov
jne
xlat
mov
mov
push
subb
test
mov
scas
sbb
call
rol
test
xor
js
xor
stos
mov
out
into
ret
xchg
repz
push
scas
sbb
or
and
pop
pop
sub
jbe
lock
subb
js
rolb
add
popf
push
lds
imul
jle
or
std
xchg
mov
and
clc
pop
das
fistpl
add
imul
mov
fistl
push
testb
cmp
aam
fnstenv
popa
mov
fistpll
stc
adc
mov
pop
loopne
mov
cmp
out
and
stos
rcrl
je
mov
cmp
push
scas
add
or
mov
or
dec
in
cmp
cmp
arpl
lahf
mov
cmp
into
test
jns
ds
xor
xchg
mov
lods
or
sub
dec
mov
sub
pop
pop
xlat
and
lahf
outsl
mov
mov
cmp
mov
and
repz
sub
es
pushf
lods
cmp
ljmp
bound
hlt
aaa
fldl
or
std
jb
inc
lds
cwtl
adc
jne
aad
pop
adcb
sbb
repz
jae
in
xor
xchg
xchg
outsl
icebp
mov
pop
inc
rcr
insb
lds
xor
loope
shll
and
jge
adc
fldenv
ljmp
mov
add
xchg
test
cs
adc
pop
ret
fst
xorb
lods
cs
adc
mov
daa
into
repz
shlb
fldcw
mov
pop
sub
pop
mov
inc
lret
ret
repnz
push
xor
ss
cs
icebp
js
and
and
xorb
fldcw
ret
mov
enter
push
push
pushf
insw
cmc
sti
push
lea
pusha
jle
les
xchg
xchg
sbb
mov
js
lahf
int
adc
bound
dec
leave
fldt
das
in
or
inc
dec
mov
dec
sub
push
sub
rolb
outsl
xor
cmp
movl
mov
fiaddl
rcll
int3
nop
out
mov
sub
adc
xor
xchg
int
add
in
lock
test
xor
std
adc
xchg
scas
mov
stc
or
mov
xor
fmulp
pop
lret
cmp
mov
lret
out
sbb
rsm
mov
test
add
enter
and
out
add
and
popa
out
add
sub
in
pop
jmp
call
ret
aam
adc
out
aam
fmull
scas
or
inc
loopne
sub
inc
out
mov
push
mov
pop
xchg
cmp
mov
insb
fmul
js
insl
pop
dec
shrb
pop
clc
loope
and
mov
push
cmp
push
add
mov
cmpsl
div
fmull
jp
scas
add
xchg
outsb
fisubrs
sbb
imul
sub
push
dec
imul
out
out
mov
or
sti
or
jnp
mov
into
xchg
xor
mov
or
outsl
stc
in
popf
jbe
adc
lea
cmp
mov
add
out
cmovno
jmp
mov
ss
adc
test
sbb
cmp
push
mov
push
filds
frstor
push
clc
dec
dec
mov
pop
daa
iret
push
sbb
mov
jmp
int3
andb
notl
out
xchg
into
pop
roll
lds
mov
jge
repz
jbe
xor
ljmp
inc
jno
cmc
xchg
mov
mov
sbb
mov
inc
loopne
or
sbb
xor
roll
xchg
mov
loop
pop
outsl
ror
cli
pushf
pop
jg
cmp
adc
or
cmp
fsubl
jb
push
dec
sbb
movsb
pushf
in
add
aas
dec
hlt
dec
jae
push
ret
iret
into
sbb
out
test
dec
popa
orl
es
mov
jle
stos
add
sub
movsl
pop
xor
cld
or
dec
jecxz
mov
cli
cmpsl
cli
fnstcw
inc
or
inc
decl
adc
lock
jp
shrl
inc
mov
inc
xchg
stos
push
mov
and
hlt
add
popf
dec
movsl
push
sub
rcrb
cli
ret
mov
mulb
sub
mov
lret
fmuls
or
jge
cs
inc
pop
pop
loopne
mov
add
mov
addr16
add
mov
leave
pushw
loope
and
jmp
adc
bound
fnstenv
pop
js
fisttpl
lods
ja
sub
pop
dec
outsb
movsl
arpl
lods
mov
shl
or
js
push
rcrb
loop
cwtl
xchg
dec
int3
push
jecxz
lea
or
stos
fadd
cmp
lret
inc
xor
jnp
test
xor
test
xor
xor
mov
and
stos
xchg
dec
mov
loopne
mov
icebp
xchg
jns
das
stos
lds
or
repz
hlt
je
dec
mov
test
cmp
and
and
mov
shlb
mov
out
test
lcall
dec
or
cmp
inc
and
mov
std
scas
mov
and
popa
dec
sub
and
lret
std
xor
jmp
test
rorl
mov
or
outsb
pop
rorb
movsb
pop
out
push
test
sahf
outsl
out
or
mov
stc
mov
pop
shrl
int
pop
insb
call
xchg
push
pop
mov
ret
pop
dec
ror
scas
int3
shrl
mov
jb
rolb
jae
icebp
pop
cli
push
push
decb
cli
and
and
dec
cs
sahf
sub
mov
fmul
inc
out
ret
fcomps
or
lcall
add
xor
mov
loope
shll
or
jg
xchg
out
rcl
add
add
pop
mov
jne
jmp
addb
ja
dec
lret
das
mov
jbe
pop
adc
jle
mov
xchg
addr16
mov
aam
js
shr
sub
xchg
enter
pop
jl
gs
and
faddl
in
jle
lods
gs
lea
mov
adc
insl
inc
add
lds
insb
insl
mov
pop
mov
jle
and
add
test
xor
pop
xlat
stos
sbb
inc
scas
add
fsts
aam
push
mov
jns
add
xchg
mov
movsb
sbb
push
or
lahf
ljmp
pop
inc
pop
xchg
lods
jne
xchg
sub
je
arpl
jae
and
std
pop
or
jmp
mov
pushf
inc
data16
out
sti
stos
cmp
jecxz
insl
ret
and
push
popa
aad
jo
sbb
rcll
push
jnp
insb
xor
xor
lret
sub
arpl
addr16
jae
jbe
pop
cmp
xchg
cmp
pop
imul
cli
sbb
dec
jne
push
ljmp
sbb
push
mov
sub
cmp
jns
cltd
mov
xchg
or
fwait
sub
icebp
inc
les
jns
add
imul
push
cmpb
mov
mov
out
inc
inc
js
jl
imul
cmpsb
sti
insb
iret
jns
imul
add
xor
fildll
cmpsl
in
cmp
movsl
jmp
out
pop
xorb
mov
outsb
lret
mov
inc
pusha
std
or
add
shlb
add
imulb
push
insb
adc
cmc
push
sub
cmp
lds
dec
leave
leave
mov
add
mov
js
stos
ficomps
jecxz
es
dec
subl
in
movsb
test
outsb
jno
bound
mov
jae
dec
xor
mov
pop
out
in
inc
mov
xor
movsl
movsb
add
jmp
subl
loopne
subl
adc
jb
enter
out
into
dec
out
push
pop
pop
mov
and
movups
das
mov
sti
adc
stc
xchg
into
imul
lods
pusha
es
call
mov
and
movsl
xchg
cmpsl
lret
aaa
mov
stos
mov
adc
xchg
das
cmc
add
sub
dec
cmp
or
insl
cmpsl
xchg
sahf
mov
iret
mov
pusha
daa
xlat
push
aas
pop
xorb
insl
pop
outsl
gs
push
and
lods
sub
mov
sbb
cs
pop
in
pop
lret
bound
inc
les
outsl
sbb
test
iret
jg
sbbb
aas
rcrb
jbe
jno
mov
jnp
pop
push
xchg
cwtl
test
fnsave
out
popa
in
mov
bound
insb
dec
arpl
fists
das
jmp
sbb
js
and
push
xchg
int3
pop
or
stos
xor
inc
enter
mov
imulb
sbb
xchg
idivl
add
repnz
sahf
out
add
cmp
in
xchg
js
lret
cltd
adc
push
adc
loop
addl
inc
jo
call
dec
pop
enter
daa
test
icebp
test
jle
xor
xlat
push
lds
shl
fisubl
das
ret
aam
xor
xchg
dec
ss
mov
pushf
stos
add
sub
inc
out
add
mov
aad
sbb
or
dec
or
xlat
xor
mov
lods
lret
std
ljmp
cs
adc
adc
dec
aaa
popf
or
gs
cld
imul
into
mov
pop
loop
pop
sub
test
adc
push
xchg
stc
push
push
mov
loope
sub
sub
or
sub
movsb
sbb
out
stos
pop
mov
sub
js
sahf
fldcw
ret
pushf
push
jmp
xor
xchg
inc
roll
adc
adc
psubsb
inc
bound
sbb
pop
ret
and
pop
into
jae
scas
stc
scas
or
in
mov
adc
dec
or
push
imul
xchg
scas
fimuls
mov
mov
pop
mov
jmp
dec
les
sbb
test
lahf
nop
and
xor
mov
inc
sbb
inc
push
loope
stc
jno
ret
and
push
lret
jbe
pusha
shlb
leave
scas
cmpsb
inc
sbb
inc
inc
or
test
or
out
lea
lcall
mov
adc
push
push
std
fs
dec
mov
push
das
mov
xchg
outsb
pushf
pop
pop
sbb
sub
xor
or
ret
adc
repz
cld
imul
inc
lods
scas
push
fwait
xchg
xlat
out
ljmp
hlt
xor
pop
push
mov
sbb
push
fidivrl
sub
icebp
sub
or
and
xchg
ja
pop
fdivrs
xchg
adc
imul
test
adc
mov
ret
push
fisttpll
call
sti
es
aad
iret
add
js
lret
jo
xchg
les
mov
sub
daa
fsubs
jl
cmp
cltd
pop
sti
in
cmpsb
jae
jb
dec
lahf
pop
je
mov
ljmp
xchg
or
dec
test
ss
stos
daa
jb
xchg
cmp
xor
arpl
dec
mov
out
sbb
mov
ja
call
jle
fisttpl
sbb
dec
outsl
stc
push
sbb
insl
movsl
inc
cltd
jo
dec
xchg
or
mov
jns
cmp
sahf
and
fs
mov
inc
xchg
jbe
mov
jns
cmp
iret
adc
lea
sub
mov
imul
cmp
clc
jg
jge
and
sub
mov
enter
aas
sbb
fdivs
not
dec
jno
lahf
lret
inc
ret
mov
push
adc
ja
cmp
jb
xor
sub
je
stos
pusha
stc
inc
mov
sbbl
out
adc
ja
xchg
sub
hlt
mov
mov
xchg
jo
mov
cmp
js
stos
fdivrl
hlt
dec
push
cmp
cmpsb
pop
push
sbb
sub
cmp
jecxz
pop
fidivrl
cmpsb
fcoml
movsb
into
dec
mov
add
inc
das
fistpll
shll
gs
stos
cmpsl
push
jg
jl
mov
adc
inc
pusha
dec
mov
insb
mov
stos
loope
xchg
jnp
mov
fidivs
mov
ja
test
daa
adc
or
popa
aaa
outsl
pop
imul
mov
push
sub
hlt
xchg
lods
popa
stc
inc
call
xchg
clc
cmpsb
push
cmp
bound
fsubrs
xor
and
popf
addr16
cmp
es
iret
in
lret
xor
in
push
jg
icebp
push
aam
rcr
clc
daa
arpl
xchg
outsl
pusha
mov
outsb
pop
mov
lahf
fwait
sub
cmpsb
outsl
outsl
dec
arpl
push
frstor
cmp
mov
sahf
lahf
mov
rcll
divb
push
loope
push
mov
test
xchg
xchg
addr16
icebp
fmull
test
aaa
aaa
jnp
adc
aas
or
test
xchg
sbb
dec
sbb
ljmp
repz
mov
ljmp
loope
lcall
aam
mov
in
and
lock
movsl
inc
int3
ja
dec
gs
ror
mov
pop
cmc
mov
or
pop
adc
pop
pop
ret
ret
xor
jle
xchg
lds
std
xor
mov
gs
sbb
mov
roll
push
fwait
xchg
push
loopne
div
cmc
pop
mov
mov
ja
dec
pop
es
jecxz
fisubs
xchg
shr
xlat
pop
stos
push
adc
mov
mov
inc
popa
dec
inc
or
jmp
add
add
inc
dec
add
xlat
ret
pusha
mov
push
ss
or
inc
xchg
and
mov
dec
pop
cmp
cltd
mov
cld
add
repnz
mov
mov
adc
inc
sbb
xor
loope
mov
lock
lock
xchg
sbb
call
mov
out
ja
jno
int3
cmp
mov
cmc
je
stc
sbb
rorl
mulb
pop
mov
or
or
mov
aas
lock
jbe
xor
mov
pop
call
mov
leave
outsb
jb
pop
call
push
xchg
cmpsb
or
lcall
clc
add
movsb
and
cmp
sub
daa
mov
arpl
adc
dec
out
call
inc
xlat
pop
lret
sub
push
mov
cmovle
ret
data16
add
dec
in
and
xchg
sbb
lcall
adc
inc
mov
pop
adc
adc
ljmp
repz
int
daa
pop
lock
inc
xchg
lds
dec
mov
les
sarl
cmp
xlat
je
jp
clc
fiaddl
push
add
jle
jo
ja
inc
add
outsb
xchg
mov
and
cmp
push
push
daa
mov
push
jns
xchg
mov
sbb
sbb
in
xchg
popa
rorb
call
mul
jmp
and
pop
scas
pop
sub
push
xor
dec
in
lock
dec
sub
aaa
call
dec
inc
flds
clc
mov
icebp
mov
push
mov
aad
jae
xchg
xchg
pop
bound
fisubl
cli
adc
pop
cwtl
lret
xor
fisubrs
push
sbb
cmp
or
int3
jnp
cwtl
sub
stos
bound
xchg
cmpsl
call
push
adc
add
push
mov
aas
jae
mov
js
and
mov
mov
idiv
out
push
es
ret
or
fdivrp
pop
pop
in
shrl
xor
sbb
push
cmp
push
pop
sbb
jp
push
jbe
lahf
mov
das
lret
push
mov
test
ret
loopne
mov
xor
inc
lods
or
fnstenv
fisubrs
cmp
pop
add
pop
insb
mov
and
fdivrl
mov
jg
mov
dec
sub
leave
stos
cmp
and
test
or
jbe
loop
mov
loope
sahf
call
jge
shr
fcomp
es
adc
movsl
out
pop
imul
enter
mov
leave
call
test
lea
ret
arpl
sub
add
loop
fcomp
hlt
push
sub
insl
cwtl
xchg
sbb
cmp
pop
pop
fisubs
xchg
sarl
sub
push
push
popa
push
cmp
dec
jmp
push
aad
push
sbb
inc
inc
xchg
lea
pushf
push
std
shl
popa
imul
loope
cld
test
gs
jnp
adc
pop
cmp
push
add
pop
sub
add
test
fidivrs
bound
cs
repnz
jl
leave
sub
and
cmc
pop
cmpsl
xchg
lcall
push
fwait
cmpsl
lea
and
mov
daa
cwtl
lret
lahf
adc
jno
push
adc
in
fiaddl
scas
lods
or
rcl
pop
mov
sub
data16
in
pop
dec
bnd
lret
pop
imul
mov
aas
xor
mov
inc
adc
jle
mov
or
or
pop
xchg
dec
pop
fidivrl
push
subl
lcall
jne
mov
cmpsl
xchg
std
ja
popa
pop
mov
dec
pop
ret
mov
jns
jne
push
add
sub
imul
outsl
jg
test
mov
push
and
into
pusha
arpl
mov
ss
movsb
pusha
or
sub
fcomps
hlt
mov
lret
push
insl
ja
sbb
jmp
sub
rcrb
repnz
pop
pop
push
jb
aam
int3
int
sub
addl
sub
popl
or
sbb
test
stc
xchg
mov
lret
jae
cmp
jl
and
mov
shrl
dec
push
sbb
in
jl
inc
fcmovnu
outsl
loopne
out
xchg
mov
clc
or
jle
outsb
sbbb
inc
or
aam
lcall
lods
sub
cmpsl
jp
pop
or
push
push
push
test
xchg
or
inc
jl
mov
pop
or
mov
addr16
sbb
repnz
adc
lock
outsl
call
push
cmp
adc
in
idivb
cmp
sti
shrb
or
mov
pop
mov
jbe
jge
lods
leave
popa
and
divl
mov
push
inc
and
add
pop
or
stc
push
lods
js
mov
fildl
fsubrs
cmp
in
hlt
jo
stos
jmp
dec
ds
mov
pop
dec
xchg
or
jnp
jno
mov
cltd
mov
hlt
mov
xor
push
into
fnsave
cs
mov
cmp
int
in
cmpsb
xlat
push
testl
jno
das
pop
add
xor
xchg
repnz
push
arpl
subb
mov
sub
sub
push
xchg
add
xlat
pop
sub
pop
sub
aad
ret
push
xor
dec
aaa
mov
movsb
inc
decb
fiadds
xor
icebp
mov
fwait
rcr
jo
sbb
movsl
xchg
cmc
scas
pop
stc
pop
jp
outsb
icebp
and
xchg
lock
dec
mov
imul
in
mov
xchg
inc
add
mov
push
jmp
jo
lcall
xor
sub
mov
fwait
cld
lds
enter
shrb
shrb
cmpsb
jne
mov
cmp
lea
push
mov
pushf
cs
imul
int3
push
inc
call
xlat
and
mov
and
jge
cs
dec
orb
adc
in
std
dec
test
ss
nop
les
pop
shll
stos
mov
roll
pop
cmp
xchg
dec
mov
out
stc
dec
pop
aas
mov
lods
std
cmp
sbb
mov
push
dec
adc
push
xor
repnz
or
adcb
dec
loopne
lret
cmp
insl
stos
cmpsb
mov
pop
sbb
push
pop
test
cmpsl
xor
dec
jno
sbb
fstp
insl
mov
idivl
pop
mov
fnstenv
xor
cmp
adcb
pop
adc
fstps
push
and
hlt
sub
stos
fdivrl
push
js
addr16
xchg
lock
dec
jl
clc
push
sub
mov
clc
push
jne
mov
js
or
hlt
jg
hlt
mov
push
xchg
lock
mov
jecxz
imul
mov
jne
insl
lods
in
rcl
leave
pop
inc
sarl
ljmp
imul
popa
jae
add
test
lret
mov
jp
gs
mov
mov
cmpsl
pushf
mov
jl
test
imul
mov
pop
out
jle
in
push
and
push
mov
sbb
and
cld
stos
pop
mov
cld
mov
mov
sub
xchg
sbb
es
add
nop
ja
sub
imul
stc
cwtl
inc
mov
sub
pop
bound
daa
jno
xchg
cmp
in
fstps
xchg
inc
adc
mov
mov
mov
mov
in
sahf
fidivl
add
js
lds
inc
nop
sub
sub
sub
and
sti
iret
mov
insb
data16
add
js
mov
int
jp
jbe
dec
fcmovnb
sub
ret
cmp
mov
xor
ljmp
cmpsb
stos
in
jp
xchg
test
cmp
mov
and
dec
add
mov
or
clc
dec
cmp
xchg
pushf
insl
mov
fsubs
rcl
pop
scas
arpl
and
das
clc
push
mov
and
add
inc
push
imul
ljmp
dec
es
mov
add
mov
movsl
inc
div
int
fildl
cmp
add
addr16
sub
mov
inc
inc
pop
shl
stos
into
repnz
mov
sarb
mov
into
repz
inc
sbb
inc
inc
gs
or
movsb
out
fs
outsl
orb
mov
dec
loop
iret
mov
loop
movb
outsl
hlt
roll
xorl
fsubs
scas
sbb
adc
xor
popa
xor
movsb
jge
out
inc
pop
jp
rcrb
mov
dec
xor
inc
or
lods
inc
js
mov
mov
xchg
lahf
hlt
inc
jbe
push
xlat
movsb
push
xor
push
jge
fdivrs
xchg
xlat
ja
mov
xor
cmp
jp
shlb
jo
push
and
jecxz
and
scas
std
sbb
pop
int
les
or
cmp
fcmovne
out
cmp
push
rolb
sub
adcb
xchg
in
aas
mov
sbb
ficoml
cli
jae
loopne
stos
sub
aad
out
mov
adcb
pop
pushf
cld
xor
aam
inc
cmp
pop
test
ffreep
out
arpl
add
imul
add
shlb
inc
fmull
shll
cmp
mov
pop
fsubrl
inc
mov
push
pop
inc
es
int
mov
and
push
jbe
push
push
test
adc
dec
and
leave
mov
out
fcoml
jae
es
pop
or
mov
mov
mov
int
cmp
jo
pop
mov
lods
jl
stos
sub
mov
in
rclb
rolb
les
data16
sub
aam
jp
cmp
lea
cltd
sbb
inc
clc
hlt
cmp
aas
inc
fwait
leave
sahf
dec
cld
in
js
xor
xor
or
pop
adc
mov
cwtl
cmpsb
fs
jle
jno
pop
pop
pusha
fyl2x
jb
xchg
out
cmpsl
adc
popf
mov
push
pop
dec
sub
xor
xchg
cmpb
fnsave
cld
pop
aaa
scas
mov
and
out
cmp
xor
mov
shr
sbb
and
adcl
jb
in
xchg
jno
push
fpatan
xchg
aam
mov
dec
mov
test
hlt
orb
ss
or
jle
jmp
mov
out
cli
adc
mov
adc
xchg
jne
stos
add
cmp
mov
sub
lcall
and
aaa
je
inc
fisubs
lods
fwait
jmp
add
imul
sub
push
sbb
jae
xchg
xchg
mov
inc
dec
gs
cmp
nop
xor
cld
or
ret
push
mov
mov
movl
stos
lea
test
idivb
sbb
inc
push
sub
ss
jns
xor
lock
mov
lock
jmp
or
fdivrl
jl
sbb
lret
cwtl
stos
push
insb
mov
push
mov
inc
jne
ds
jnp
mov
pusha
popa
dec
push
das
pushf
cmp
cmp
adc
jmp
jmp
test
push
ficoml
pop
dec
movsb
imul
cmpsl
popf
adc
adc
or
and
adc
jnp
push
dec
pop
push
popa
cmpsb
jg
std
push
jae
imul
hlt
mov
sbb
push
mov
jbe
cmp
push
hlt
pop
pop
test
pop
mov
xor
in
outsb
mov
mov
mov
dec
jne
and
jno
push
sbb
mov
bnd
test
sbb
mov
ljmp
adc
popa
xchg
imulb
push
jmp
testl
mov
dec
or
shlb
and
fnstsw
jg
shlb
popa
in
xor
sbbl
andb
cmp
xchg
shl
inc
or
int
pop
push
or
jo
ljmp
test
enter
out
dec
loope
inc
call
cmc
pop
scas
push
push
cmpsl
gs
jecxz
cmpsb
shl
aaa
scas
mov
push
sti
jae
jne
jae
in
and
add
mov
fdivrl
arpl
into
sub
dec
xlat
jnp
dec
mov
add
or
push
inc
or
mov
or
bound
out
ret
adc
inc
xchg
pop
and
into
insl
pop
lods
dec
mov
pop
mov
pop
add
mov
fs
ja
in
subl
add
fwait
rolb
dec
or
call
je
fsubl
int3
cmp
pushf
pop
pop
cwtl
sbb
mov
test
mov
inc
inc
inc
sti
xchg
or
cli
divl
aad
sub
popf
lcall
pop
mov
pop
scas
inc
sub
xchg
aas
xchg
repnz
rcl
negb
xchg
shl
repnz
dec
sub
pop
frndint
cmp
sarl
daa
iret
popa
lahf
jns
pop
hlt
addr16
mov
pop
xchg
sahf
cmp
ds
lahf
sub
mov
push
shld
xchg
out
cmp
pop
xchg
mov
dec
sbb
movsl
addl
mov
addr16
pop
inc
jmp
ds
inc
aad
call
sub
outsb
out
cs
pop
cwtl
sbb
xchg
ss
sub
outsb
sbb
gs
mov
sbb
adc
in
inc
inc
lcall
stos
xchg
push
and
insb
push
jmp
loope
xchg
hlt
pop
das
pop
or
sbb
shlb
cwtl
push
cmpsb
adcl
push
mov
dec
lea
inc
repnz
cmp
out
cltd
mov
add
jp
and
shrb
mov
hlt
aam
xor
or
inc
jmp
stos
jmp
out
ss
pop
outsl
push
xor
push
jge
lret
andl
or
icebp
jb
das
xor
or
mov
ja
lods
cmp
mov
rcll
fidivrs
sub
loop
push
pop
push
psrlw
movsl
dec
sti
sub
gs
dec
scas
cmpsl
lahf
repnz
pop
data16
jg
inc
add
loop
xor
inc
mov
pushf
inc
mov
dec
bound
jnp
rcrl
mov
lcall
or
mov
pop
sti
aam
push
lahf
cmpsb
ja
arpl
ficompl
movsb
pop
mov
adc
jp
movsl
ja
in
push
je
popa
int3
fsubl
cltd
testl
push
out
dec
pusha
divb
sti
pusha
jecxz
xchg
dec
nop
push
out
mov
adc
mov
pushf
cmp
mov
jle
bound
xchg
xchg
sub
cmp
cmp
xchg
rorl
out
add
dec
pop
mov
cmp
or
pop
dec
xorb
fldt
rorl
in
int
mov
test
xorw
fwait
cmp
jp
sub
dec
mov
or
lea
in
mov
cmp
push
fnsave
adc
cltd
fistpl
mov
mov
stos
popf
push
sbb
div
int
outsb
xor
stc
fstps
inc
mov
lea
or
out
je
add
jmp
insl
mov
cltd
inc
stos
enter
hlt
push
jno
bound
out
inc
dec
std
cmpsb
arpl
ret
pop
push
push
dec
nop
ret
mov
pop
enter
or
cmp
into
fst
loopne
pop
xchg
cltd
jno
mov
push
cmpsb
gs
mov
add
jnp
ja
mov
fimuls
mov
movsb
stc
icebp
add
pop
jmp
lods
cmpsl
mov
push
pushf
dec
mov
mov
sub
inc
mov
div
negl
loope
movsl
int
xor
cmp
jmp
mov
xchg
lret
xchg
cli
ret
test
fwait
inc
push
mov
es
xlat
push
cmp
ja
ja
cmpsb
out
mov
push
or
mov
test
lret
enter
rclb
inc
out
pop
jns
out
xorb
push
add
dec
xchg
imul
xor
shlb
icebp
add
rclb
insb
mov
push
mov
enter
orb
pop
dec
jmp
push
cwtl
fimuls
out
sahf
sub
sbb
add
int
inc
pop
outsb
sbb
cmpsl
push
mov
cmp
push
cmpsl
sub
dec
sahf
cld
mov
mov
dec
in
enter
decl
xor
sbb
insb
cmp
xlat
mov
xor
sub
add
cmpsl
loope
clc
sub
cmp
adcl
hlt
and
mov
loope
enter
jbe
pop
pop
jl
and
add
cltd
inc
adc
lods
mov
inc
push
daa
mov
add
daa
push
dec
idivl
imul
add
iret
in
mov
ds
cmpsl
and
mov
andl
and
int
loopne
inc
icebp
in
mov
imul
xchg
shrb
inc
mov
insl
mov
pop
sub
jae
call
push
clc
xchg
fnstsw
ja
leave
test
testl
pushf
and
adc
pop
ret
mov
aam
sub
in
xor
sbb
add
addr16
sahf
cli
push
dec
mov
sbb
and
bound
das
pushf
insb
lock
mov
xlat
out
dec
jg
call
sub
ljmp
cmp
popa
jp
mov
mov
outsl
push
adc
out
popa
cmp
lods
xor
push
cs
jnp
test
in
jne
pop
jecxz
call
popf
gs
push
test
lret
pop
add
das
movsl
andps
mov
cmpsl
stc
mov
arpl
addr16
jge
xor
jmp
scas
push
cwtl
xor
psadbw
icebp
pop
mov
sbb
cs
clc
push
sti
test
insb
cmp
mov
dec
adc
xor
out
xchg
sbb
and
pushw
xchg
je
mov
push
test
ss
cmp
pop
ffree
sahf
iret
push
out
pushf
das
nop
push
and
sahf
mov
gs
fidivs
mov
or
std
add
sbb
and
jo
jb
pop
addr16
mov
and
insb
js
in
in
stos
addl
pop
pop
insl
adc
or
int
cmp
push
jg
push
clc
jo
insb
mov
pop
jle,pn
jle
jnp
or
xchg
int3
or
pop
push
push
push
jecxz
shl
or
and
out
jbe
add
pop
pop
jge
ljmp
nop
push
push
push
mov
jb
or
shr
pop
dec
xchg
mov
inc
popa
icebp
xor
out
adc
pop
mov
aaa
xchg
fistpl
sti
dec
clc
ret
adc
pop
jp
pop
das
fs
xor
outsb
cmp
xlat
cmp
inc
pop
scas
push
jo
in
les
pop
and
add
sarl
loope
cli
and
int
push
xchg
out
xor
repz
nop
mov
or
push
repnz
test
stos
dec
mov
orb
xchg
or
int
and
adc
das
jnp
movsl
fidivl
hlt
sbb
cmp
cmpsb
shll
bound
or
pushl
and
gs
std
popa
subl
push
mov
dec
frstor
jp
enter
out
test
inc
jne
jg
fs
mov
push
orb
aad
mov
int
inc
cmp
add
adc
std
adc
jge
hlt
adc
sbb
pop
pop
lahf
stc
xor
out
pop
fistpll
jne
out
sub
test
cmpsl
lcall
jge
les
xchg
imul
push
mov
add
adc
cmp
repz
negb
cli
xor
pop
and
pop
push
push
jb
mov
cmp
push
pop
sbb
out
clc
cmp
sti
pusha
jl
dec
jbe
jg
inc
in
inc
fdivrl
adc
fwait
lcall
test
cmpsl
mov
mov
les
addr16
cmp
adc
insb
in
pop
jle
adcb
lds
aaa
xchg
stos
mov
int3
lods
fs
fs
imul
xchg
stos
or
dec
push
and
mov
adc
rclb
mov
aam
out
jns
xchg
jne
xchg
imul
rcrl
jmp
repnz
insb
es
sbb
pop
fdivrl
jo
xor
sub
dec
popf
sbb
imul
push
or
and
sub
jnp
ja
out
int
add
inc
ret
inc
rclb
ret
test
adcb
iret
test
and
mov
fistps
addr16
cmp
std
xchg
inc
popa
inc
ret
sub
lret
mov
sub
sahf
add
les
adc
lahf
inc
add
in
pop
leave
xchg
int3
movsb
dec
cs
pop
sbb
push
std
hlt
pop
xchg
in
bnd
push
data16
rorb
push
mov
jne
daa
sbb
xchg
mov
pop
scas
sub
sub
mov
negl
mov
bound
xor
mov
rolb
mov
rolb
loope
cmp
jge
add
iret
mov
mov
cli
lds
out
xor
or
ja
rorb
push
in
jge
or
xchg
push
sub
lods
inc
rclb
mov
mov
mov
adcb
outsb
scas
mov
cmp
push
outsl
mov
call
popf
out
iret
dec
outsl
sarl
cmp
cltd
add
adc
out
dec
loop
bound
mov
pusha
cmp
stc
daa
cmc
data16
leave
mov
cmp
inc
mov
and
shlb
sti
fadd
js
js
repz
dec
push
aaa
and
sub
cmp
sbb
jnp
ret
insb
push
aaa
inc
pop
ja
ret
xchg
add
test
adc
pop
inc
rcl
inc
cmp
mov
jl
or
cmpsb
stos
adc
lea
jp
sbbb
into
mov
xchg
inc
dec
mov
or
in
lahf
lods
inc
ja
outsb
mov
or
mov
xchg
bound
xchg
jo
in
sbb
xchg
push
vshufps
mov
jl
and
movsl
in
cmpsl
jmp
lea
nop
data16
mov
sbb
iret
in
js
cmp
mov
pop
cmp
mov
rorl
inc
lea
xor
in
ss
mov
pop
mov
in
out
jl
jo
and
or
add
jecxz
push
insl
cwtl
fadds
push
cmp
icebp
pop
and
pop
scas
push
movsl
sub
hlt
inc
rcrb
pushf
xchg
lahf
xor
rcll
fidivs
lret
and
scas
fisubrl
adc
mov
enter
adc
push
cltd
pop
lret
jmp
inc
and
cmp
jae
inc
jae
add
dec
mov
jae
stos
xor
xchg
shr
push
jecxz
add
inc
push
shlb
push
xchg
fisttpl
dec
enter
or
adc
xor
lret
dec
cmp
mov
ja
and
dec
cwtl
jnp
push
jo
cld
pop
subb
lds
xor
xchg
enter
lods
lahf
xor
lcall
bound
imul
xchg
sbb
push
fiaddl
xchg
xchg
mov
in
adc
mov
iret
push
mov
or
daa
imul
clc
adc
inc
aas
imul
xchg
or
fists
cli
cmp
dec
jmp
inc
dec
clc
mov
insb
test
jecxz
lahf
jp
pop
sub
push
mov
das
push
and
outsl
cmp
push
and
xchg
pusha
xchg
out
mov
sub
pop
rcll
cmp
dec
jo
xchg
aaa
inc
insl
pop
leave
lret
jmp
and
adc
fildl
cmpsl
cmp
inc
adc
dec
out
sbbl
jo
mov
push
sti
jl
sub
xchg
mul
fisubrs
in
cwtl
ret
test
dec
pushf
jp
xor
mov
das
popa
cmp
data16
cmpl
push
cmc
inc
and
jle
dec
cmp
lahf
xchg
mov
pop
xlat
adc
sahf
jno
mov
jbe
fcomps
and
xor
cmpsb
or
cld
adc
pop
pop
rclb
dec
xor
push
pop
lods
mov
and
dec
mov
rol
out
aam
push
xchg
loop
dec
clc
les
ret
pop
push
dec
sub
mov
cmp
jmp
inc
mov
mov
sub
or
sarl
jge
sbb
sbb
hlt
int
mov
push
mov
mull
iret
and
fsubs
or
roll
pop
adc
inc
fimuls
frstpm(287
mov
mov
dec
test
sub
or
or
pop
bound
cs
push
adc
mov
inc
dec
fdivr
js
adc
stc
adc
shll
insb
xchg
adc
shrb
sub
lcall
pushf
imul
rcl
sub
pop
jno
fprem
jns
xlat
xchg
decb
hlt
jecxz
mov
testb
push
cwtl
cmp
sbb
and
mov
test
xchg
aas
cli
sahf
pop
pop
mov
mov
imul
sub
xor
in
or
xlat
test
nop
dec
xorl
cmp
std
ljmp
movsl
add
inc
or
jo
dec
loope
sub
xchg
sub
in
aas
or
sbb
push
lods
or
xchg
mov
int3
and
out
arpl
push
sti
popl
sub
cmpsl
in
mov
das
mov
cmpsb
in
cmp
xchg
loop
pop
jmp
jae
pop
fsubs
push
mov
gs
roll
inc
in
loopne
fs
xchg
xor
and
mov
ss
stos
dec
cmp
ljmp
inc
cmp
and
cltd
and
cmp
mov
sbb
xchg
mov
xor
cmp
jnp
int
push
jg
sbbl
in
test
lock
movsb
sub
pop
bound
xchg
xchg
mov
xchg
push
inc
xlat
andb
out
push
pop
sbb
sbb
adc
icebp
inc
pushf
mov
xchg
aam
inc
out
adc
lods
lds
cmp
and
add
lcall
push
fsubrl
nop
sub
out
incb
cmc
inc
or
imul
mov
clc
xchg
mov
sahf
mov
pop
jo
ss
push
lahf
cmp
add
idivl
inc
test
movsl
notb
xor
adc
mov
lods
out
xchg
fucomp
jp
mov
sub
jne
sti
lods
test
aad
cmp
adcb
jg
test
push
fidivs
scas
add
out
mov
adc
call
push
dec
sub
xor
fdivs
mov
adc
mov
mov
mov
sahf
push
bound
mov
neg
lcall
sub
aam
lret
lods
sub
outsl
subb
sub
outsl
pop
cld
ljmp
loop
rcrb
jo
mov
push
dec
sbb
mov
pusha
popa
out
ja
popf
cmpsb
cli
sub
cmp
pop
sahf
ds
je
rorb
adc
fcmovnbe
jg
cld
ljmp
mov
icebp
cmp
mov
mov
pushf
and
mov
cmp
cwtl
pop
in
arpl
mov
and
out
aas
cmp
into
ss
mov
mov
pushf
or
sbb
pushf
enter
aaa
add
outsl
icebp
es
jmp
shrl
ds
nop
inc
cmp
add
inc
cmpsb
cld
push
jae
vpmaxud
push
mov
and
mov
cltd
cmp
jge
or
iret
bound
push
add
in
xlat
subb
inc
mov
sti
lea
int
xor
xor
sbb
ret
or
jbe
and
std
mov
cli
jb
adc
push
loope
pop
pop
push
mov
aad
fucom
aam
xor
test
inc
xchg
ret
test
jecxz
pusha
sub
mov
test
add
cld
lahf
popf
inc
pop
mov
mov
movsb
sbb
adc
and
leave
mov
add
jecxz
js
xchg
push
ret
and
call
in
jmp
aad
outsb
sub
cld
push
pusha
in
ljmp
mov
cmp
lret
mov
and
pop
outsl
imul
pop
and
cmpb
push
and
cmp
xor
inc
cmp
stos
xchg
mov
fidivrl
les
jnp
icebp
cmp
xor
scas
ds
add
push
lds
push
insb
rcr
dec
mov
sub
lcall
subl
or
cwtl
test
inc
dec
push
mov
or
das
add
shr
mov
pop
insl
push
jmp
out
std
mov
fwait
cwtl
jmp
idiv
and
mov
xor
cwtl
push
sub
subb
rcl
pop
out
out
jecxz
dec
mov
aaa
mov
jecxz
mov
push
jecxz
lcall
sub
movsl
pop
or
sbb
push
mov
out
add
icebp
jg,pn
idivl
pop
and
push
mov
xor
mov
pop
js
push
cmc
lods
ljmp
jg
or
lret
jmp
ss
mov
add
sahf
bound
invd
lahf
sti
sbb
sbb
cmp
outsl
xchg
or
insl
icebp
popa
imul
lds
jns
mov
dec
add
xchg
call
aad
dec
int
lock
fmuls
subl
iret
cmp
push
adc
xchg
mov
push
lods
dec
push
in
iret
pop
imul
loop
sbb
sub
sub
or
cltd
mov
cmp
loopne
fisttpll
sti
lock
imul
push
sub
inc
movsl
ret
mov
xor
aaa
sbb
icebp
cmpsb
dec
movsl
dec
cmpb
xchg
mov
push
cmp
inc
lea
lds
xor
cmpsl
sub
sbbl
sahf
movsb
je
aaa
cltd
jmp
adc
mov
ds
mov
rorl
dec
fisttps
or
stos
popa
mov
data16
fxch
pushf
fbstp
fwait
clc
ss
mov
jl
imul
add
outsl
jmp
mov
cltd
mov
mov
xlat
sub
dec
fs
push
movsb
xor
pop
sbb
jge
mov
cmp
pusha
and
jb
stc
roll
test
sbb
sbb
dec
out
or
mov
jno
cmp
sub
xor
sarl
and
pop
call
out
push
xchg
iret
cmp
cmp
xor
push
inc
mov
rcll
mov
jns
ss
pop
cmp
das
adc
dec
fiadds
out
icebp
cwtl
push
sarb
stc
js
hlt
icebp
or
insb
jle
hlt
inc
xchg
stc
adc
fldt
aas
pusha
xor
sub
leave
add
mov
aam
jle
or
sbb
xrelease
inc
adcl
sahf
inc
adc
lock
sub
in
ficompl
dec
add
cmp
and
stos
into
jecxz
fistpll
mov
xchg
jbe
xor
xchg
cmp
bound
out
mov
rcrb
pop
bound
loopne
je
and
mov
arpl
scas
xchg
xchg
push
mov
into
jle
cltd
cwtl
push
dec
cmp
jae
sbb
add
sti
das
cwtl
lds
test
inc
js
xchg
lret
data16
cmpsl
cmp
lahf
xchg
iret
xorb
ror
test
cmpsl
cmpsb
inc
xor
test
and
inc
imul
inc
xor
out
imul
xor
push
xor
notb
repnz
cmpsl
out
mov
aas
enter
mov
or
fst
ja
sbb
push
or
and
xchg
arpl
insb
inc
sbb
mov
push
mov
or
mov
adc
imul
ror
ret
sub
inc
rcll
test
mov
cmpl
mov
push
loopne
sbb
xor
test
iret
jecxz
std
mov
sbb
cmpl
add
sub
pop
repnz
insl
sti
sti
ret
cld
daa
cli
call
cltd
test
insl
mov
push
cmc
add
xchg
inc
and
and
in
sub
loop
xor
test
adcl
adc
or
push
ss
jle
add
mov
aad
cmp
pop
mov
rcrb
outsb
in
pushl
xchg
int3
push
xor
push
stc
xchg
into
cmpb
clc
mov
roll
fstps
lahf
mov
aad
icebp
pop
mov
out
inc
mov
ds
or
sarl
test
add
jns
popa
push
loopne
pop
pop
stos
add
ja
jo
arpl
xchg
push
jp
sub
jl
dec
push
or
sbb
add
pusha
jp
push
jp
mov
lock
jge
insl
fmull
or
jns
icebp
sahf
aaa
test
pop
lods
lcall
xor
jp
add
add
pop
es
sub
xchg
jg
lret
cmp
ja
inc
xorl
adc
imul
negl
push
inc
pop
push
and
out
lret
out
sub
cmp
lcall
and
xchg
adc
in
push
dec
leave
and
ds
inc
sbb
mov
repnz
sarl
mov
jnp
cmp
repz
mov
jnp
inc
mov
pop
pop
and
pop
sub
daa
pop
pop
inc
push
lods
cld
imul
and
xchg
jo
jle
ds
in
ret
push
adcl
fsubs
mov
divb
mov
das
mov
mov
cwtl
pushf
adc
stos
push
jns
adc
sbb
and
adc
adc
lahf
xchg
and
out
outsb
cli
idivb
cwtl
push
and
hlt
pop
sbb
movsl
cltd
sbb
dec
popa
test
adc
mov
inc
and
adc
xchg
add
sbb
push
neg
mov
mov
out
jo
daa
filds
inc
xchg
mov
cmpb
jne
and
push
outsl
xor
sbb
push
fiadds
push
and
mov
or
outsb
mov
sbb
fdivl
adc
popf
out
aad
cmp
xor
cmp
int
mov
xor
outsl
mov
mov
mov
push
push
ret
adc
shll
or
pop
xchg
cmpsb
sbb
cmp
daa
shll
lock
out
rclb
pop
fs
sbb
icebp
stos
ret
jle
and
mov
cli
pop
xchg
cli
push
xchg
aad
les
adc
cltd
loope
stos
cmc
fs
scas
push
jnp
adc
mov
adc
out
pop
aam
jbe
mov
cmc
xlat
hlt
out
aad
push
inc
rcr
jge
pop
outsl
sbb
gs
orl
outsb
pop
leave
cmpsb
adc
mov
daa
shll
ljmp
divb
mov
sbbl
push
sub
je
push
adc
icebp
sbb
jp
jle
test
sbb
sub
sbb
insl
loopne
jne
or
lcall
push
push
sub
rclb
mov
jl
or
cwtl
xchg
sub
cmp
mov
push
inc
mov
adc
ljmp
sbb
sub
sbb
imul
fistl
mov
push
add
cmp
lcall
dec
add
inc
adcb
pop
lock
push
scas
xor
pop
fdivr
jmp
sub
or
dec
insb
jnp
mov
push
inc
add
cmpsl
jp
aad
inc
add
jmp
in
shr
mov
lock
push
ljmp
outsb
cmp
fbld
emms
jmp
mov
punpckhwd
mov
xchg
shlb
repz
popa
test
push
add
je
aam
sbb
jns
push
in
movsl
mov
outsl
orb
es
arpl
ret
inc
mov
pusha
mulb
enter
movsl
dec
xchg
fimull
lret
loop
dec
sub
cmp
lret
lahf
incb
mov
push
xor
lds
mov
sti
or
repz
shrb
jl
lea
sub
aas
insl
out
and
xor
xchg
inc
inc
mov
loope
cltd
in
jg
shlb
and
cmp
pushf
xchg
test
xchg
mov
and
pop
cmpsb
repz
loope
push
repnz
pop
inc
pushf
fstpt
cmp
adc
push
add
mov
nop
mov
dec
enter
mov
iret
inc
test
stc
add
adc
js
push
cmp
pop
loopne
inc
push
arpl
scas
cmp
jmp
into
mov
or
into
pop
insb
pop
mov
adc
xchg
incb
jnp
stos
xchg
sti
pop
lods
xchg
xor
enter
adc
fwait
inc
adc
xorb
xor
cli
mov
dec
loop
in
je
xchg
lods
dec
cmc
in
jae
cmp
xor
mov
mov
pop
dec
in
cmp
rorl
add
add
jns
push
gs
stc
and
sete
push
mov
fldenv
cmp
push
mov
sub
mov
pop
cmp
or
cmp
xchg
push
mov
cli
mov
push
cmp
jp
je
mov
aad
push
je
rorb
push
ja
push
dec
inc
mov
cmpsb
aaa
test
stc
dec
cmp
xchg
push
jne
or
mov
test
dec
jge
pop
gs
xor
mov
or
scas
fisubrl
pushf
inc
mov
stos
lcall
sbb
inc
xor
mov
mov
es
push
in
mov
push
inc
xchg
jns
test
xchg
push
in
jp
scas
mov
push
rol
cmc
push
mov
loope
lds
lock
xchg
out
fimull
jecxz
mov
adc
push
sbb
outsb
xor
push
imul
adc
jbe
pop
mov
out
cs
xlat
mov
subps
cli
pop
test
insl
out
inc
mov
push
push
jb
mov
or
and
push
sub
or
dec
jnp
sbb
stos
aaa
inc
xchg
pop
popl
aas
xchg
mov
in
or
leave
jmp
adc
cmp
push
rcr
pop
pushf
data16
mov
mov
mov
pop
clc
adcl
popa
mov
mov
shrd
lret
xchg
mov
shlb
cmpsl
or
cmovnp
mov
push
imul
add
cmp
fistps
push
pop
lods
inc
mov
shll
in
jns
or
roll
insl
mov
adc
test
fcomps
icebp
xchg
push
mov
xchg
out
int
aaa
fisubs
es
and
rcl
orb
call
or
lock
arpl
mov
mov
mov
js
push
notl
push
pop
rorl
aaa
push
mov
mov
pop
mov
mov
add
lods
cltd
xchg
cmp
in
or
inc
xchg
inc
push
push
mov
mov
test
cmp
mov
push
aaa
mov
push
std
arpl
pop
scas
movsl
mov
bndstx
cmp
and
jne
pop
add
cmpl
mov
dec
xchg
mov
pop
dec
dec
lret
ja
push
test
push
xor
cmpsb
jecxz
pop
fwait
xchg
aas
jno
and
add
cmc
imul
xchg
and
std
xchg
aas
pop
mov
xchg
inc
dec
xor
out
pop
and
add
outsb
sahf
jle
pop
filds
in
cmpsl
cmpsl
out
into
imul
imul
xor
cli
xor
fmuls
pop
mov
add
cmp
lret
mov
adc
jb
mov
in
cmpsl
add
jae
das
shll
mov
and
xlat
js
negl
mov
lret
xchg
mov
cwtl
xchg
fs
in
cmp
pusha
xor
push
cmp
mov
mov
popl
add
nop
mov
ds
xor
sbb
jns
nop
fmulp
iret
cmp
gs
cmp
sti
sub
xchg
sub
pushf
cmp
xor
jae
call
add
rorl
ret
aam
push
jge
sbb
adc
scas
repz
push
gs
pusha
into
mov
fimull
push
xchg
lret
bound
mov
push
inc
cmp
xchg
push
and
lods
xchg
lcall
sbb
rorl
xor
jae
mov
mov
pop
pop
mov
mov
add
dec
sbb
and
outsb
dec
mov
dec
push
cltd
arpl
adc
mov
push
pop
lds
out
gs
popf
adc
xor
iret
shlb
sub
sub
push
int
inc
js
sbb
fnsave
loop
aas
jp
inc
add
xor
sbb
jae
lods
in
jo,pn
shrl
push
cmp
lret
adc
mov
mov
push
hlt
loope
mov
inc
mov
dec
leave
clc
cmpsl
outsb
mull
inc
jmp
push
dec
cmovbe
sub
loopne
test
sahf
outsb
lds
push
out
sub
pop
pop
lcall
pusha
out
mov
or
sub
aad
push
scas
rorb
daa
addb
outsb
ficomps
cli
repz
movsb
orb
and
repz
icebp
xchg
jp
mov
push
xor
push
hlt
pusha
test
lret
push
cmp
jnp
flds
cmp
lds
xchg
pusha
adc
xor
jecxz
xchg
or
shrl
scas
sub
mov
xlat
mov
xchg
xorl
mov
negl
cmp
mov
pop
mov
scas
aas
roll
scas
lods
jmp
push
and
test
xchg
cmp
mov
rorb
icebp
cmp
imul
loop
jmp
int3
push
mov
mov
out
mov
in
negb
mov
push
push
cli
cs
addb
lods
movsb
jb
mov
es
or
les
jl
mov
and
mov
ljmp
stos
shl
std
dec
inc
fcoml
and
iret
jl
fnstsw
xchg
aam
sub
mov
int
ljmp
jle
pop
xchg
sub
hlt
push
xchg
jle
xchg
sub
insb
data16
mov
addr16
ja
or
xor
in
ja
cs
aam
mov
outsb
or
push
mov
mov
das
cmp
jns
inc
sti
mov
xchg
mov
jp
and
jge
adc
and
add
sub
or
mov
push
aas
jns
xchg
cmp
pop
ret
fs
rcl
inc
shl
inc
xchg
add
filds
dec
cmp
jmp
and
jo
pop
daa
push
out
cmp
sahf
imul
sbb
cmp
idivl
add
addl
les
imul
dec
js
iret
into
cli
and
or
and
push
and
or
in
jb
jp
and
dec
xor
and
std
mov
cmc
sbb
mov
lods
enter
mov
push
test
or
fdivp
movsb
std
pop
call
std
cmp
push
mov
in
adc
adc
mov
insl
pop
clc
cmp
sub
in
insl
clc
test
nop
aam
cmpl
leave
sbb
mov
loope
inc
push
sahf
jge
idivl
repz
fmull
inc
outsb
lret
mov
xchg
dec
pop
add
dec
xchg
stos
jg
fisubrl
dec
bound
inc
les
cmc
adc
in
cmpsb
ds
aam
les
mov
lods
lock
jno
add
xchg
add
cli
pop
adc
scas
jmp
xor
pushf
push
jecxz
push
push
or
popf
or
std
out
cltd
fbstp
inc
pop
jl
jge
xlat
pop
into
mov
and
cmpsl
push
jg
mov
popf
inc
cmp
mov
sub
aas
test
push
divb
inc
xor
mov
test
or
into
and
adc
loope
cmp
mov
iret
loope
cmpsb
push
dec
clc
jmp
xchg
ss
mov
push
xchg
mov
enter
add
mov
push
sbb
addl
stos
in
xlat
dec
inc
push
pavgw
pop
shlb
fsubl
das
push
adc
adc
pop
mov
mov
push
rol
iret
mov
into
sahf
sub
xor
pop
cmp
test
arpl
mov
push
xor
or
out
pop
rol
cmpsb
jp
pusha
and
jns
push
aaa
or
mov
fbstp
js
pop
mov
jnp
clc
push
cwtl
mov
es
lcall
data16
xor
ss
cmp
insb
mov
icebp
mov
push
mov
sub
out
es
adcb
pop
mov
and
das
aas
scas
shl
cmp
mov
mov
std
jbe
jb
inc
push
adc
scas
movsl
add
nop
xor
xchg
adc
stc
inc
push
arpl
pop
out
jb
in
and
in
mov
lret
stos
loop
xchg
loop
push
fisubl
jg
sbb
rclb
js
hlt
ud2
mov
add
cmp
mov
cwtl
lods
push
inc
push
push
xchg
jg
jb
out
add
inc
adc
scas
sbb
or
std
mov
xchg
popa
pop
sbb
xor
pop
xor
and
loopne
aaa
fdivrl
mov
fsubrs
fiadds
shll
xchg
pop
jno
pop
ret
movl
es
jg
cwtl
and
not
out
fldl
orb
mov
xor
enter
push
aas
mov
pushf
xchg
mov
sub
jns
test
arpl
dec
lock
jl
rcll
sub
testl
adc
in
mov
enter
xor
test
add
pusha
sbb
mov
mov
xchg
pop
pop
dec
mov
mov
push
mov
cwtl
mov
test
out
movl
stos
outsb
testb
ds
icebp
cmp
xor
mov
jne
jmp
into
add
cmp
dec
movsl
or
sub
dec
cmp
imul
jmp
or
ret
lea
fcoms
hlt
or
sub
mov
sbb
lea
scas
push
dec
test
hlt
mov
aaa
cmp
lds
sub
cld
mov
mov
ds
and
dec
mov
popf
enter
jg
push
inc
xor
in
fldenv
xchg
std
pop
xor
pop
ret
dec
test
mov
mov
arpl
js
outsb
roll
imul
iret
out
cwtl
gs
imul
stos
loope
or
test
mull
mov
and
xor
scas
dec
stos
bound
cmp
inc
outsb
movsb
mov
add
inc
mov
and
orb
fcoml
jae
and
mov
adc
pop
cmpsb
hlt
sub
scas
test
test
jbe
insb
jb
nop
and
test
stos
add
push
push
lods
jge
aas
test
sub
outsl
jecxz
lret
and
xor
sbb
adc
adc
mov
movsl
push
cmp
cmp
mov
or
pop
push
fistpl
inc
mov
add
addr16
loopne
stos
mov
xor
es
xchg
inc
push
sti
incb
test
mov
inc
mov
sahf
sbb
inc
popa
shrb
push
outsb
int
mov
or
sti
xchg
outsb
out
adc
icebp
cwtl
insl
ret
jecxz
cltd
or
ja
dec
and
sarb
out
or
addr16
imul
sbb
ss
cmp
xor
shrl
insl
aas
dec
xchg
push
mov
inc
fnstsw
ret
je
or
lret
out
sti
es
cmpsl
jmp
add
retw
pop
sub
clc
sbb
jmp
push
ja
push
leave
mov
ljmp
add
sti
fs
push
cmp
jno
adc
fcompl
cmc
add
movsb
jb
cwtl
jmp
mov
out
subb
or
xor
cwtl
arpl
lea
aaa
movsl
push
xor
pop
rcrl
call
ja
mov
cmp
scas
or
sahf
pop
xor
outsl
ss
push
aaa
cltd
lret
repnz
xorl
daa
jmp
mov
movsb
mov
leave
test
icebp
rcrl
dec
pop
add
adc
mov
scas
lret
std
mov
xchg
push
shll
cwtl
sarl
xlat
mov
cmpsb
pop
dec
push
push
sub
jp
mov
and
jb
push
rcr
xorl
jno
pop
hlt
in
push
mov
jp
dec
repnz
loope
int3
cmc
adc
push
inc
and
sub
stos
addr16
fidivrl
add
ljmp
pop
in
out
mov
cmpsb
test
cmp
and
pop
fcomps
repz
loopne
and
jae
daa
rol
int
pop
inc
add
sbb
mov
pop
xor
sub
mov
int
inc
rcr
das
ss
jecxz
fstpl
pop
pop
add
repnz
fidivl
lods
xorb
in
pop
repnz
cmp
sub
imul
arpl
xchg
dec
test
dec
insl
mov
gs
or
jno
pusha
cld
dec
mov
mov
nop
inc
call
cmpsb
dec
jge
jecxz
or
cmp
push
pop
sbb
or
mov
sbb
sti
jmp
or
jmp
push
call
add
jo
xor
jnp
mov
jnp
aas
rcll
push
sbb
cmp
pop
adc
or
adc
mov
sbb
es
mov
jns
into
cmp
or
mov
sub
enter
insl
sub
stc
push
mov
lds
stos
scas
and
test
dec
jl
and
jns
xlat
sub
mov
test
lret
mov
popa
in
sub
or
mov
in
cmp
xchg
xchg
movhps
leave
gs
addl
inc
cmp
mov
push
jne
and
push
scas
jmp
das
into
cmp
aas
int3
fyl2x
mov
pop
pop
cmp
or
rcrl
sub
jmp
xor
pop
jae
pop
push
mov
dec
xor
int3
nop
push
inc
mov
cs
cltd
push
pop
jno
test
adc
dec
int3
fcmovnb
and
or
sbb
add
mov
popf
out
cvtdq2ps
repnz
mov
ret
mov
and
in
dec
pushf
hlt
movsb
mov
popa
sub
xchg
enter
jmp
scas
cmp
push
addr16
rorb
lret
mov
xchg
mov
mov
cmpsb
filds
bound
mov
lahf
xchg
aaa
pop
mov
mov
dec
inc
inc
je
test
popl
sbb
xor
jne
add
sbb
shll
and
dec
pop
in
pusha
orb
mov
inc
inc
inc
mov
jl
jmp
and
add
loopne
or
imul
push
pushf
cmpsl
lds
mov
ss
or
cli
lds
xor
adc
push
sub
sub
mov
sbb
add
mov
fdivl
pop
jge
jle
inc
pop
jo
sahf
fs
or
push
imul
dec
movsb
ud0
imul
mov
dec
mov
cmp
std
or
adc
and
stos
js
test
sub
dec
xchg
mov
lea
jecxz
mov
ss
adc
outsb
xchg
fcompl
and
mov
push
fimuls
loopne
dec
jns
pop
imul
mov
repz
fiaddl
and
imul
sahf
aas
adc
ret
push
jle
push
adc
xchg
push
in
xchg
insb
mov
adc
leave
mov
daa
mov
enter
cmc
or
mov
sub
mov
mov
xlat
mov
mov
xor
pop
fs
out
imul
mov
int3
pushf
jno
mov
outsb
xor
push
rclb
inc
bound
mov
jo
lea
mov
pop
lahf
hlt
push
xlat
mov
popf
cvttps2pi
mov
adc
mov
fidivrs
push
int
dec
cmp
push
dec
xor
ja
or
or
popf
adc
sbb
loopne
or
push
lret
fistps
xchg
mov
inc
mov
sar
jp
and
jle
dec
clc
pop
or
addb
push
push
mov
dec
and
dec
test
int3
lds
jae
shrl
in
mov
imul
jo
nop
enter
outsl
pop
out
cmpl
push
mov
mov
pusha
lcall
fidivs
mov
adc
shll
je
and
adc
cwtl
lcall
lods
loope
sub
mov
xchg
xchg
fcoml
adc
xor
xorb
nop
inc
cs
out
ja
mov
cld
inc
sbb
cli
xchg
outsb
jns
mov
jo
test
rol
sub
pushf
add
dec
xor
mov
in
pop
lock
leave
dec
ljmp
add
adc
aaa
out
test
andl
fisttpl
xchg
jne
inc
cli
sbb
sbb
xchg
sbb
mov
mov
jl
imul
jae
aas
xor
fiadds
fdivs
hlt
ret
inc
fstpl
into
test
sub
ljmp
sub
adc
sti
divl
rcrl
adc
ljmp
xchg
adc
divb
dec
cld
int
fnstcw
mov
repz
test
loope
add
test
xor
or
adc
pop
mov
xor
mov
mov
jnp
fldt
cmp
jno
out
xor
or
das
xorl
xchg
test
xchg
iret
call
mov
test
jecxz
lea
mov
and
enter
dec
mov
cwtl
xchg
cli
notl
int
xor
fimuls
frstor
pop
and
je
sti
in
sub
mov
push
sub
inc
popa
and
out
ret
das
pop
test
das
outsl
mov
mov
jle
jbe
pop
jmp
daa
sub
repz
mov
shl
xchg
mov
clc
push
mov
push
fsubs
mov
dec
add
out
adc
push
adc
sbb
and
repnz
inc
pop
push
ror
jg
clc
mov
sbb
in
scas
ds
sub
in
mov
mov
lahf
sbb
dec
mov
jno
and
inc
mov
add
push
mov
pop
dec
lret
xchg
add
or
es
xsave
jae
cmpsb
and
insb
iret
enter
fdivrl
fcmovne
or
sti
adc
lods
popf
or
rcrb
shl
popa
fistpll
clc
icebp
shl
imul
stc
test
and
lods
add
lds
lea
test
pop
pop
ret
clc
dec
mov
clc
mov
add
mov
push
xor
mov
data16
bnd
pushf
sbb
and
mov
and
push
xor
lea
dec
jmp
inc
mov
imul
mov
dec
mov
push
adc
popa
inc
mov
sub
cmpsl
test
and
mov
pop
pop
nop
ficoms
aaa
lods
add
pop
xchg
aaa
cltd
push
add
add
push
fmul
inc
out
loope
push
nop
rclb
and
add
mull
mov
mov
jnp
mov
loop
and
int3
lea
movsb
dec
rcll
inc
jmp
jecxz
in
cmpsl
and
je
pushw
inc
jl
in
jae
and
cli
push
add
push
xor
and
hlt
shll
mov
pop
push
add
lcall
pop
mov
lods
in
or
fwait
dec
out
sar
dec
lret
jl
daa
jecxz
popa
cld
scas
fsts
cld
xor
jle
cmp
jns
push
andl
les
imul
sub
sbb
fldt
cmp
cmp
adc
xchg
shrl
add
mov
les
xchg
bound
lods
nop
fwait
add
cmpsl
sysret
int3
pop
xor
mov
xor
inc
xchg
test
push
dec
fcom
mov
rcrl
or
mov
pop
aas
gs
icebp
icebp
aas
xorb
cmp
jbe
xorl
mov
call
mov
jecxz
shlb
hlt
movsl
inc
hlt
or
cmpsb
jnp
sbb
cmp
insb
ljmp
inc
sbb
imul
mov
inc
jle
sbb
xor
jg
scas
lods
xchg
into
xchg
and
imulb
jmp
push
andl
int3
xchg
rclb
push
ret
sbb
stc
or
jne
sbb
movsl
cwtl
test
test
pop
xor
mov
arpl
adcb
ljmp
sub
fsub
and
not
pop
mov
fldcw
pop
jmp
mov
pop
fnstcw
pop
insl
int
jecxz
sbb
adc
mov
int3
pop
dec
push
sub
mov
ljmp
mov
aad
ret
pushf
pop
lea
sar
adc
dec
xchg
and
push
lahf
sahf
outsl
mov
inc
push
sbb
rorl
mov
pop
imul
pminub
dec
mov
push
fisubl
inc
test
mov
dec
out
movb
push
jle
fsts
mov
jo
mov
sar
jnp
mov
adc
test
or
rcrb
pop
aaa
jb
mov
mov
arpl
and
sub
cmp
sbb
shlb
adc
cmpsb
aas
ss
hlt
fcompl
pop
xor
jnp
cltd
shlb
in
xchg
imul
sub
pop
lds
mov
cld
sti
or
repnz
repz
pop
shll
sarl
inc
or
dec
cmc
xchg
mov
insb
mov
aad
mov
mov
mov
sub
ja
jl
shlb
adc
movsl
mov
jne
popf
bound
les
pushf
mov
cs
hlt
out
push
sti
lcall
push
cmpsl
ret
mov
sub
int3
sbb
imul
sbb
data16
sbb
lcall
adc
insw
enter
repz
jmp
jmp
test
inc
out
jnp
test
pop
ret
gs
cs
lret
jge
dec
rcrb
aad
adc
mov
or
sub
stc
sbb
adc
loop
jne
dec
sbbl
rcll
mov
jmp
lods
addr16
push
mov
pop
sub
call
mov
xchg
sub
gs
jne
mov
mov
add
sub
jnp
dec
aaa
call
ss
movsl
sub
scas
sahf
mov
popf
mov
hlt
add
dec
adc
dec
cmp
lods
imul
add
adc
pop
fcompl
mov
mov
jae
inc
rcl
sbb
mov
or
rep
aaa
inc
ljmp
icebp
pop
inc
popa
inc
or
adcl
sbbl
jl
adc
dec
and
ds
int3
pop
in
int
sarl
jae
push
and
clc
dec
xlat
lret
in
sbb
js
lret
cmpsl
iret
push
adc
insl
xchg
in
sbbl
sbbb
xor
xor
inc
push
ficoml
add
negb
sahf
cltd
int
dec
mov
xor
xchg
mov
xor
cwtl
mov
xchg
pop
lret
add
inc
icebp
pop
iret
fucompp
push
mov
add
and
adc
adc
xchg
lods
cwtl
sub
es
sub
jns
adc
sbb
xchg
push
inc
xor
out
sbb
movsb
sub
das
mov
jge
xchg
cmp
mov
mov
push
pop
mov
sti
dec
pop
orl
xchg
cmp
cmp
outsl
loopne
jmp
out
jo
imull
cmp
loop
sbb
fcoml
mov
out
std
push
sbb
lret
inc
add
mov
movsb
sub
and
call
jne
dec
insl
pop
push
dec
test
mov
inc
scas
pusha
mov
fisttps
jg
dec
movsl
daa
push
les
push
cmc
aaa
jae
test
and
aaa
andb
xor
cmp
mov
inc
pop
jge
outsl
mov
sbb
cmp
lock
push
ljmp
pop
inc
negb
pop
add
or
pusha
or
inc
test
negb
add
repz
lret
cli
ja
mov
or
sub
jecxz
cs
arpl
xchg
mov
subb
mov
add
dec
mov
xor
hlt
popa
inc
arpl
es
xchg
push
rclb
mov
dec
das
rorl
cmpsb
aas
movl
sbb
adc
sbb
in
ja
lcall
insb
mov
inc
xchg
fistps
pop
jmp
test
cmp
stc
fwait
dec
insb
adc
pop
add
shlb
call
das
aas
jae
push
inc
stos
cmpsb
lahf
jno
inc
jns
add
scas
iret
mov
xchg
and
aas
add
or
pop
addr16
out
or
test
insl
jecxz
inc
push
ret
jge
push
aad
adc
loop
loopne
ficomps
les
lahf
les
sub
cmp
dec
adc
aaa
clc
mov
mov
mov
imulb
js
divb
xchg
dec
cmpsb
hlt
adc
or
sbb
rol
add
jne
inc
cmp
push
sbb
dec
or
xor
jbe
loopne
adc
cmpl
stc
data16
fld
std
add
dec
push
dec
jns
push
pushf
inc
addr16
mov
aaa
dec
bound
cmpsl
aam
inc
mov
rcll
scas
cmpsl
testl
mov
mov
cmp
inc
xchg
push
lret
gs
or
pop
pop
sbb
inc
add
arpl
cmp
xchg
pop
fisubs
push
aas
inc
lods
fimull
dec
jnp
jge
xchg
cltd
int
and
mov
mov
das
mov
jecxz
xchg
add
push
int3
out
or
jno
xchg
mov
xor
popa
or
xchg
outsl
fldenv
enter
inc
pop
push
test
es
out
cld
aaa
lods
in
inc
arpl
pusha
mov
loope
icebp
outsb
fldenv
in
inc
inc
xchg
fstpt
dec
add
cmp
jle
dec
cwtl
inc
adc
fmuls
cmp
fsubr
int
popa
outsb
jns
out
push
cmp
aad
movsl
push
hlt
push
xchg
pop
push
data16
xchg
xchg
adc
sbb
ja
cltd
mov
jae
jg
repnz
mov
popf
push
in
jle
call
xchg
sub
pop
test
or
jbe
jb
jae
adc
xchg
in
mov
pop
fwait
test
pop
lret
int
hlt
or
xorl
iret
sbb
outsb
add
or
add
push
xor
arpl
pop
lds
pop
xor
or
adc
enter
inc
push
inc
movsb
xor
add
lods
push
jnp
es
cmp
andb
fistpll
ss
xor
addr16
cltd
movsl
call
das
add
adc
push
loop
pushf
mov
sbb
out
mov
arpl
lret
xor
shrb
and
jl
mov
adc
outsb
cltd
dec
add
test
fimull
leave
imul
dec
inc
mov
mov
push
xchg
aas
dec
insl
adc
outsb
stos
lret
mov
cmpsl
movb
int3
mov
addb
divl
jmp
dec
mov
dec
dec
cs
into
mov
fucomi
cmpsl
add
or
mov
sbb
clc
popa
pop
cmp
nop
adc
push
xchg
lock
cld
mov
sbb
xor
jge
lea
push
imul
cmc
bound
enter
lds
or
outsl
add
pusha
sub
shrb
test
or
repz
arpl
and
or
sbb
daa
xchg
shll
sbb
inc
in
jnp
loopne
sbb
xchg
push
push
ljmp
dec
mov
daa
mov
jge
shll
int3
sbb
sti
push
xor
bound
shlb
push
sahf
sub
mov
sbb
in
pop
dec
mov
enter
xchg
mov
jo
cmpsl
and
sbb
push
iret
inc
sub
loop
enter
mov
dec
mov
sub
jecxz
lods
and
sahf
test
lods
nop
loope
arpl
pop
jmp
sub
pop
pop
andb
adc
adc
aad
sti
aad
or
cld
jae
xor
add
mov
adcb
loop
mov
and
jo
sub
cmpsl
popl
mov
ret
out
sub
mov
pushl
enter
rcrb
cmp
ret
enter
inc
and
or
test
enter
in
hlt
or
mov
mov
sub
mov
aam
push
imul
in
nop
aas
mov
sbb
push
arpl
add
sub
pusha
cmp
mov
mov
fcompl
test
icebp
movsl
xlat
inc
mov
aas
add
outsl
adc
rcrb
aad
mov
ja
jg
jl
sahf
test
mov
hlt
xor
fsubs
mov
mov
inc
inc
pusha
sbb
push
sbb
rclb
hlt
stc
pop
push
mov
mov
sahf
sub
js
insb
push
mov
test
enter
pop
sti
js
test
mov
mov
or
cmp
mov
ss
scas
inc
movsb
cmp
movb
push
push
inc
or
ljmp
push
stc
sub
scas
cmp
or
movq
mov
pop
mov
pop
pop
cmp
addr16
mov
xchg
cld
fidivrs
xor
cmpb
sub
fists
jnp
outsb
and
fsubrl
call
cmp
push
lret
pop
or
outsl
xor
or
mov
es
mov
cmpsb
filds
or
jb
push
fldcw
xor
clc
mov
adc
movsl
rcrb
cmp
scas
xchg
xchg
dec
cltd
jmp
or
ds
shl
cmpsl
pop
in
push
push
cld
xchg
inc
cmp
mov
lods
fsubl
xchg
and
mov
and
int
mov
mov
call
and
call
jge
ret
cs
lods
dec
adc
mov
outsl
or
pusha
push
mov
and
adc
cmp
popf
adc
sub
mov
outsb
sub
bound
xchg
mov
sbb
inc
jae
xchg
adc
movsl
test
inc
xchg
pop
jnp
ret
les
sub
jmp
or
jmp
or
mov
je
scas
stc
adc
test
jae
mov
xlat
hlt
mov
jmp
inc
xchg
dec
mov
hlt
push
mov
in
cmpsl
in
jns
scas
or
in
into
sbb
fisubl
jb
enter
sub
mov
in
flds
mov
nop
cltd
cli
push
or
cmp
pop
or
jns
ja
dec
xor
test
adc
aad
dec
test
mov
lahf
cli
cmp
popf
jns
call
daa
sbb
xchg
and
jnp
xchg
and
dec
insb
and
aaa
cmp
stc
scas
jb
lea
pop
flds
xor
mov
lcall
cmp
adc
cld
or
daa
pop
and
mov
mov
sub
ds
cmp
js
lcall
dec
lea
test
std
sub
pop
stos
stos
adc
ficomps
xchg
mov
mov
push
xlat
mov
clc
int
addr16
cwtl
std
pop
add
inc
cltd
pop
outsb
rclb
mov
xchg
out
jle
add
sbbl
lahf
sbb
add
lret
dec
mov
cli
aaa
push
mov
mov
jmp
ret
lret
add
sbb
mov
ljmp
shll
out
fdivrs
negl
xchg
inc
sbb
mov
xchg
xchg
xchg
jne
mov
add
addb
jecxz
pop
lods
mov
inc
and
cmove
repnz
popa
xor
mov
call
mov
push
mov
mov
dec
sub
test
rolb
inc
lods
adcl
mov
or
insl
mov
inc
add
pop
mov
add
imul
cmp
mov
shll
jae
or
out
lds
cmpb
sahf
xor
jmp
lock
cmpl
rcrb
or
pop
sti
xor
and
inc
xchg
in
lods
inc
or
rcr
or
mov
popa
cltd
stos
in
sbb
stos
mov
and
in
ljmp
or
addr16
cs
adc
push
arpl
test
lahf
into
inc
cli
into
fldcw
dec
cld
sbb
xlat
es
lods
cmp
scas
sub
inc
shlb
xchg
scas
cmpsl
cmp
jmp
rcrb
fldl
cmpsl
in
call
scas
test
sbb
fmuls
mov
push
jns
jne
les
sti
sbb
bound
popf
popa
dec
call
sbb
cmp
dec
rcrl
rol
mov
jo
ss
and
mov
in
les
cmp
jns
xchg
or
or
rolb
xor
dec
test
push
sub
out
fsubl
aas
sub
push
in
mov
xlat
gs
stc
inc
push
pop
mov
cmp
imul
lahf
jae
dec
fnstenv
pusha
mov
popa
xchg
or
sbb
cmpsb
outsl
jge
push
scas
inc
dec
jno
xor
xchg
ret
aad
inc
icebp
call
mov
movsl
leave
aaa
sbb
pop
cmpsb
push
xchg
mov
pushf
fucomi
ficomps
cltd
aas
pop
les
ficoml
ret
pop
jp
push
lahf
fdivl
jbe
std
sbb
or
insl
cs
add
fs
push
push
cmp
inc
cmp
js
imul
sbb
push
in
imul
ss
insb
or
jle
dec
mov
shrl
push
pop
stc
mov
jo
aad
jb
ret
fidivrs
sbbb
movsb
sub
iret
fs
dec
out
mov
repz
jne
cwtl
repz
fwait
mov
repz
lcall
adc
enter
movsb
push
inc
dec
sbb
jecxz
jg
out
repnz
add
rol
push
push
or
mov
mov
addr16
fimuls
aam
push
mov
adc
lea
add
push
jnp
outsl
scas
les
dec
out
mov
les
sbb
testb
xor
pushf
repnz
xlat
add
sbb
in
lea
xor
jno
or
jl
adc
xchg
fimull
pop
aam
and
push
ficompl
jno
push
xchg
mov
jle
push
and
inc
aas
nop
mov
stos
nop
add
add
add
jmp
mov
dec
xchg
stos
psubw
and
push
add
fbld
aas
dec
shlb
mov
push
mov
push
mov
mov
ret
lret
cmp
scas
push
aaa
cwtl
pop
cmc
fsub
push
lret
aas
pop
jl
ja
adc
stos
mov
cmp
dec
int
std
das
adc
aaa
pop
xor
enter
add
sub
pop
jg
or
ret
jecxz
adc
repnz
daa
or
aas
and
jl
or
xchg
test
dec
push
xchg
push
mov
icebp
adc
and
sub
into
mov
psubsw
test
fcomps
push
pusha
cmp
nop
add
jmp
mov
dec
jmp
test
movsb
and
shl
lods
rcr
add
push
xchg
or
gs
in
stos
fsubl
and
outsl
insl
rcr
fbstp
mov
out
int3
and
out
add
pop
lds
pop
jo
xor
or
es
aaa
cmpsb
jl
mov
pop
loope
pop
loopne
movsb
mov
sbb
inc
add
inc
pushf
jecxz
aam
mov
add
jne
jnp
nop
xchg
fstpt
push
out
mov
popf
or
rorl
dec
xlat
adc
inc
stos
lods
jl
or
add
lods
dec
jbe
mov
sar
rcll
ret
inc
repz
cmp
lods
xchg
adcb
gs
lcall
out
cli
fs
cmp
mov
mov
sbb
repz
ja
adc
iret
xchg
pop
jb
dec
inc
scas
or
xlat
insb
imul
insb
pop
pusha
dec
xchg
clc
pop
stc
jge
mov
out
mov
xchg
rcl
and
ret
mov
lcall
out
mov
mov
jo
push
cmc
es
add
testb
je
xchg
in
mov
iret
lcall
nop
cmpsl
cmpsl
push
popa
test
stos
ret
out
aaa
inc
mov
enter
jp
push
mov
jmp
jg
clc
repnz
mov
xor
loop
mov
or
xor
cmp
xchg
test
mov
mov
inc
scas
pusha
inc
push
jno
std
sbb
or
jmp
or
cmp
repnz
jno
js
sub
sub
popf
xlat
mov
cmp
xchg
popa
les
jae
xchg
stos
fisubl
xchg
xor
xchg
leave
jg
jmp
jl
push
dec
arpl
jne
shlb
xchg
mov
xor
add
std
cwtl
into
movswl
xor
mov
and
shlb
dec
xchg
pop
rcll
daa
mov
cmp
cmp
adcl
jns
or
adcb
cmp
clc
and
cs
lods
adc
pop
data16
leave
sub
mov
dec
cwtl
fstl
das
fildll
mov
dec
pop
loop
push
push
pop
dec
icebp
ja
dec
jg
das
enter
rolb
adc
dec
pop
xchg
sbb
cmpxchg
jo
mov
hlt
mov
out
imul
repz
lret
repnz
dec
insl
push
fcmove
push
cmp
mov
dec
fidivs
xchg
cmpsl
loop
xchg
inc
daa
dec
dec
cmp
in
mov
data16
ret
cltd
sub
or
and
xor
sbb
lcallw
loope
jle
icebp
cmpsb
clc
mov
les
and
dec
test
jb
int
enter
fmul
repz
out
shlb
jl
mov
ljmp
xlat
das
aam
sub
add
cmpsl
dec
out
cltd
mov
push
ds
or
idiv
cmc
bnd
cwtl
mov
add
in
add
jecxz
sub
cmc
cmp
adc
or
mov
mov
mov
and
dec
push
iret
mov
xchg
cmp
push
cmp
jnp
and
push
or
sub
stos
or
jne
push
inc
mov
sbb
es
mov
cmpsb
into
cmpsl
mov
mov
sub
cwtl
rcrl
mov
xor
push
pushf
int3
jmp
nop
mov
cwtl
cmp
xchg
inc
pusha
es
in
inc
test
in
das
and
xor
subl
cmp
int3
fdivrl
and
popf
xor
repnz
stos
sahf
cmp
outsl
fs
jns
mov
imul
vpavgw
and
out
roll
push
adc
les
outsl
out
xchg
lret
add
jae
mov
add
mov
sub
pop
push
orb
mov
mov
call
bound
or
outsb
pusha
aad
outsl
sub
in
add
fs
sbb
mov
aad
mov
push
add
mov
mov
stos
call
test
insl
scas
negl
pop
mov
add
xorl
lret
enter
push
mov
sub
push
mov
mov
popl
pop
out
inc
sarb
xor
cli
push
ss
scas
pusha
mov
ljmp
je
push
shl
push
arpl
movsl
popf
hlt
aaa
xchg
cmp
or
push
xor
push
nop
push
js
jmp
fcoml
mov
je
adcb
roll
add
add
lods
or
mov
stc
inc
mov
adc
imul
leave
test
inc
fs
loopne
arpl
cmpsb
adc
xchg
nop
les
outsb
outsl
and
inc
and
aas
xchg
in
xor
sbb
sbb
lahf
daa
mov
mov
or
aad
rolb
popf
pop
cwtl
add
cmp
xor
push
inc
sub
fidivrs
test
or
cmp
add
fwait
repz
gs
out
push
mov
cs
je
sti
sbb
add
pop
arpl
pop
aad
aam
or
pop
pop
xchg
ds
dec
push
sbb
out
repz
sub
aad
in
lods
cmp
das
inc
pop
pushf
insl
std
fldt
lcall
push
fimuls
les
xor
outsb
jecxz
popa
repnz
jmp
inc
dec
les
mov
cmpsb
jmp
out
lcall
stos
push
jmp
sbb
fldcw
xorl
push
xlat
repnz
test
ret
rcll
mov
orl
push
das
movsb
jnp
mov
cld
sbb
mov
leave
xchg
arpl
xchg
paddw
cmp
pop
xor
adc
cmp
pop
clc
es
mull
imul
jb
add
push
inc
inc
add
pushf
jge
xor
jecxz
adc
pushl
fistl
push
adc
callw
fimull
xchg
jno
sub
lcall
or
mov
cmpsl
push
cmp
ror
mov
mov
or
je
das
and
jae
ds
shrb
sahf
xor
pop
add
push
cmp
femms
daa
mov
lods
add
mov
mov
ljmp
scas
push
adc
xchg
stos
or
add
or
mulb
pushl
cld
out
out
mov
arpl
push
es
xor
dec
sub
scas
rolb
bound
add
out
dec
sub
and
or
scas
or
fdivr
push
jne
daa
mov
mov
orl
lret
adc
add
push
arpl
into
xor
fimuls
ret
xor
cmpsl
pop
daa
mov
mov
rorl
push
dec
adc
mov
js
sarl
andl
cmp
popa
and
int
fnstsw
xor
js
xor
push
mov
insl
in
pop
xchg
aaa
lds
lcall
movsb
push
add
lock
mov
nopl
jbe
jne
sahf
addl
rorl
rorb
dec
dec
daa
inc
ss
mov
mov
leave
and
jne
cli
sub
sti
push
inc
sbb
sahf
bound
jge
neg
ret
mov
xchg
pop
mov
mov
aam
cmc
aaa
cmp
out
mov
pop
cs
sbb
imulb
mov
xchg
cmp
add
jl
inc
and
sbb
mov
ds
or
ret
xchg
je
lods
dec
or
sub
outsl
mov
das
xor
das
lock
jne
pop
jbe
mov
daa
jp
mov
cmp
in
jge
insl
shll
mov
shll
push
adc
in
xor
mov
xor
stc
add
testb
loopne
dec
out
cmp
int
stos
mov
rol
lret
bound
adc
mov
lods
loope
int
int3
dec
clc
fs
insb
subl
mov
mov
andl
sub
push
hlt
aas
nop
testb
jnp
cmp
push
in
inc
or
mov
or
rorl
ja
in
xor
mov
pop
xchg
jno
xchg
out
lret
push
mov
movsb
pop
adc
testb
in
xor
push
imul
add
and
rcrl
clc
sbb
arpl
mov
add
xor
sub
sub
ds
fldenv
fucomp
and
mov
mov
out
push
adc
fidivrs
imul
pop
scas
xor
xchg
test
cwtd
loopne
adc
std
and
cmp
add
mull
push
inc
popf
mov
in
inc
xchg
dec
rclb
pop
pop
mov
mov
fwait
aad
adc
cmpsb
pop
add
mov
adc
jno
add
in
cmp
mov
adcb
lret
insb
mov
fisubrl
inc
jg
mov
jae
mov
cmpb
jg
stos
pop
repnz
jne
inc
mov
add
popa
stos
out
inc
sbb
inc
mov
or
iret
cmp
out
mov
call
and
or
lods
add
lods
out
test
pop
fcmovb
pop
adc
cmc
xor
mov
fldt
fsubrs
cs
jmp
iret
dec
add
jmp
inc
out
sbb
adc
push
loope
std
test
and
stos
cmp
push
xchg
lahf
or
pusha
add
ljmp
int3
adc
or
jns
mov
jne
xor
mov
stc
mov
jp
adc
jecxz,pn
test
fcomps
xchg
sub
fs
xor
cmpsb
jne
leave
lods
mov
mov
sub
sbb
mov
popf
icebp
mov
lock
sahf
mov
subb
into
insl
mov
lret
mov
fcomp
arpl
jno
inc
adc
add
dec
xchg
sbb
pop
jo
popf
lock
fwait
pop
scas
shlb
adc
fwait
adc
jp
dec
sbb
outsl
cmp
sbb
mov
ss
sub
leave
lock
sbb
sbb
imul
or
test
mov
rol
imull
dec
lea
mov
lret
lret
sbb
test
jnp
in
sbb
pop
iret
out
adc
fwait
xchg
pop
mov
pop
and
push
mov
repz
adc
adc
movsb
cmc
rcll
movsb
je
and
cmp
imul
add
push
sub
insl
and
ljmp
cmpsl
repnz
das
sbb
fdivrs
pushf
call
cltd
inc
inc
adc
test
lret
into
sbb
scas
ret
fldenv
repnz
inc
dec
loop
xchg
push
stos
repnz
cwtl
shrl
xor
mov
or
or
push
out
call
sub
out
aam
add
fdivl
inc
sbb
push
iret
dec
bound
movsb
stc
pusha
scas
dec
push
ljmp
dec
jge
lcall
sbb
in
gs
test
pusha
cmc
sti
mov
cld
or
sub
and
rclb
lock
hlt
pop
in
inc
loope
cmp
and
adc
out
inc
cmp
lds
adc
xchg
mov
sub
mov
adc
push
pop
test
jns
push
repnz
mov
rclb
and
cmp
jmp
test
mov
pop
ret
lods
push
xor
jle
subl
loopne
jg
test
push
stos
popa
addr16
mov
mov
cltd
xor
xor
xchg
es
fmul
mov
es
mov
and
mov
fs
pop
ret
push
and
fstpl
pop
in
mov
dec
into
loop
test
call
je
push
mov
fldenv
aaa
scas
inc
cmp
sarb
je
aaa
fldcw
push
pop
loope
shlb
test
push
mov
push
xchg
outsl
dec
xchg
ret
jmp
test
fisubl
pop
or
fdivrl
pop
push
rcrl
nop
xchg
inc
cmpsb
inc
inc
fs
cmp
jno
xor
lock
cmp
movb
das
or
fbld
loope
mov
in
jnp
pushf
mov
lea
int3
or
inc
out
lock
push
inc
fisubrl
sbb
add
lea
fs
xor
xor
inc
xlat
fisubrs
push
adc
mov
xchg
xchg
inc
sbb
mov
fisubrs
sbbl
call
pop
rorl
fwait
pop
mov
lret
imul
dec
and
and
ret
movsb
idivb
je
jle
dec
shll
push
icebp
xor
ret
mov
lock
jmp
jbe
adc
inc
and
adc
loopne
ljmp
xor
stos
mov
repnz
rcrb
jb
int3
inc
mov
mov
incl
jle
xor
dec
popf
jle
mov
lahf
aam
adc
int
in
jne
mov
or
sbb
xorl
xchg
test
daa
andb
cli
rcll
cmp
ljmp
fst
scas
adc
outsl
shlb
jmp
cmp
lods
push
cmc
inc
ds
sub
lods
or
and
out
inc
dec
sbb
push
pop
int
push
loope
rcll
mov
pop
fisttps
hlt
ljmp
leave
lcall
adc
pop
or
cwtl
jg
dec
pop
pop
jns
insl
fisttps
aad
mov
xor
inc
sub
std
popf
lds
cmpsl
fdiv
in
sub
dec
xchg
xchg
or
inc
scas
jg
ss
cmp
or
nop
cld
or
mov
mov
in
cmp
sbb
je
arpl
jno
inc
mov
adc
lcall
xchg
jecxz
mov
sbb
mov
int3
jle
xchg
frstor
in
xor
push
cli
iret
aas
adc
pop
push
lea
test
push
dec
sub
jl
mov
decl
jb
js
rorl
aaa
cmp
aaa
adc
push
and
push
ret
adc
push
xchg
lahf
test
jg
jo
ret
add
cmc
dec
cmpsl
insl
jp
mov
andb
rcrb
je
push
sub
xor
cli
loopne
fildll
pop
and
ret
movsl
sub
lret
push
out
jne
add
cmpsl
cmp
cmp
xchg
lock
lret
int
repnz
push
add
adc
je
dec
shlb
jbe
neg
mov
xchg
pop
push
adc
pop
mov
xchg
xchg
popa
jbe
lret
cltd
repnz
inc
call
sbb
adc
mov
or
cs
mov
mov
push
add
xor
jnp
fnstsw
lret
enter
mov
sub
out
jnp
adc
mov
sbb
xor
push
enter
lret
fmul
push
cmc
cmp
bound
mov
fdivrl
push
dec
aaa
inc
fwait
pop
or
stc
jecxz
mov
in
sarl
stc
xchg
or
pop
xchg
lret
or
inc
daa
popf
or
xlat
push
add
fsubl
inc
lret
jl
jmp
or
push
je
pop
pop
jns
push
or
fsubs
sub
adc
out
mov
jno
mov
popf
jb
adc
mov
mov
jne
dec
out
jl
scas
xor
mov
xchg
and
std
sub
mov
ret
mov
xchg
ret
cltd
mov
push
inc
nopl
shlb
adc
fucomp
addr16
dec
cwtl
add
mov
lret
pop
cmp
pop
ss
int
mov
aam
adcl
mov
loopne
xor
and
xor
ljmp
stos
aam
repz
in
and
mov
jmp
out
fldcw
ret
mov
cmp
and
cmp
cs
dec
xchg
inc
push
dec
xchg
rcrb
cltd
inc
jge
mov
sti
in
movsl
pop
sahf
adc
xchg
movsl
add
std
loop
outsl
mov
jnp
push
jmp
xlat
ja
jnp
test
clc
xor
in
and
jg
mov
and
sbb
xchg
mov
add
in
mov
pop
popa
arpl
fdivs
fstpt
cmp
add
test
movsb
outsl
push
imul
cmpsl
outsl
push
pop
jl
inc
jge
int
mov
mov
je
or
dec
adc
inc
and
pop
cltd
pop
aad
imul
dec
pop
mull
mov
fdivr
lds
sbb
push
push
lods
push
xchg
jle
jecxz
inc
cmp
xor
push
xchg
insl
mov
sbb
xchg
xor
xchg
jge
stos
icebp
mov
idivl
ffreep
int3
xor
mov
mov
sbb
cmp
or
pusha
adc
fisubrs
fistpll
enter
lret
dec
jg
push
testb
fidivrl
movsl
cmp
cmp
and
ja
arpl
loopne
out
insl
pop
loop
xor
sub
subb
testb
int
insb
mov
push
dec
loope
mov
xchg
shll
lds
roll
adc
jle
ds
popa
add
movl
adc
out
ret
mov
push
and
lret
jle
and
lret
or
daa
int3
push
rcrl
das
or
inc
aas
fnsave
push
stos
cld
and
shl
mov
into
lods
push
int
inc
mov
sub
addr16
dec
cmp
mov
xchg
fiaddl
arpl
nop
jl
sarl
gs
mov
sahf
sub
scas
mov
cmp
out
xor
push
scas
fmul
add
ss
pop
scas
dec
insb
fidivrs
sub
inc
in
loope
pop
sar
gs
or
fsubrp
mov
pop
stos
sub
mov
es
xchg
push
mov
jno
test
stos
xchg
aad
push
pop
xchg
pop
das
mov
sbb
loope
daa
sar
mov
cltd
aaa
addr16
xchg
pop
aad
xchg
ljmp
cwtl
scas
leave
lds
jmp
je
lret
pop
inc
adc
fs
mov
out
pop
mov
inc
adc
cmp
cmp
in
push
push
dec
cli
push
sbb
test
mov
stos
sub
out
and
icebp
fcom
xchg
mov
inc
adc
jo
out
sbb
mov
into
pop
mov
es
in
mov
rolb
repz
aaa
inc
clc
cmpsl
nop
insb
and
pmaxsw
fisttpl
sub
mov
in
ret
rcl
imul
inc
enter
movsl
add
je
cmpsb
push
ja
aad
mov
roll
add
test
insb
mov
push
inc
je
cmp
sub
hlt
mov
pop
push
cmp
das
push
shll
enter
and
fwait
lods
xchg
test
and
cli
mov
lock
sarl
pop
dec
pop
das
cwtl
xchg
mov
mov
push
dec
js
adcb
pusha
push
in
rolb
sarb
clc
cmp
push
test
into
add
add
mov
pop
lods
in
mov
roll
es
cmp
add
jno
sbb
fiadds
xchg
adc
shr
out
xchg
jb
out
dec
test
aas
pop
lcall
xor
pusha
dec
mov
scas
jl
lds
mov
insl
fisttps
jb
xor
and
lret
js
imul
aam
push
adc
adc
loope
inc
cltd
inc
data16
mov
ja
mov
sarl
in
bound
mov
nop
inc
insb
mov
xlat
lods
sbb
xchg
loopne
pop
cmc
das
into
ljmp
int
adc
push
aad
mov
sahf
xor
xchg
mov
stos
aam
cmp
xor
fsub
test
ds
outsb
sti
dec
cmpsl
sbb
adc
insb
mov
cmpsb
xchg
cmpsb
mov
shll
jp
dec
dec
movsl
fadd
xchg
lret
loope
hlt
hlt
push
aaa
scas
sub
gs
xchg
cmp
cmp
rcll
movb
stos
outsl
add
dec
xchg
roll
jnp
dec
icebp
lahf
lahf
push
in
test
aam
cwtl
fistpl
aad
mov
push
inc
fwait
lcall
jmp
test
mov
lcall
fdivrs
dec
xchg
addr16
inc
push
mov
into
rcrl
sub
stos
cmp
cmp
rcr
xchg
push
into
or
jmp
mov
pop
dec
jns
xchg
adcl
push
jmp
sbb
or
std
cmp
repz
jmp
and
push
mov
push
pop
dec
mov
pop
jp
jnp
inc
xchg
fs
push
lcall
sbb
fnstsw
gs
into
fcmovu
pop
scas
inc
insl
push
cmp
pop
test
ret
loope
aaa
jne
adc
xor
sub
fldenv
mov
pusha
adc
fsts
shl
add
add
cs
mov
sbb
fstl
aas
pop
shlb
orb
sub
inc
jecxz
ljmp
and
or
adc
jecxz
cmp
xchg
pop
mov
dec
add
sahf
pushf
pusha
sub
call
adc
mov
pop
sub
mov
and
imul
pop
in
sbb
pushf
rcrl
fdivrs
xor
jg
push
lea
loopne
in
das
aad
sahf
ss
iret
call
mov
adc
inc
test
mov
lahf
loope
ljmp
rcll
dec
pushf
pop
pminsw
bnd
adc
cmp
stos
mov
lcall
rolb
mov
add
aas
mov
dec
insb
or
mov
inc
jae
jp
pop
movsb
push
out
xor
jmp
mov
add
subb
mov
jne
mov
stc
mov
adc
pushf
adc
xor
lcall
sbb
jl
int
sub
push
mov
repz
jno
sahf
stos
imull
andb
xor
cld
cmpsl
movsl
loop
mov
jne
rcl
repnz
setne
ror
sub
sbb
movsl
xchg
sub
lret
xor
xchg
sub
push
push
scas
shr
push
orl
bound
fcmovu
sbb
xor
dec
dec
xor
sahf
pop
in
and
cld
jle
pop
jmp
or
scas
push
push
nop
cltd
fs
es
out
into
mov
push
mov
cltd
repz
mov
pop
dec
das
imul
cmp
jne
xchg
cmpl
je
movsb
push
sbb
sbb
sub
mov
std
fs
out
dec
xchg
sbb
add
mov
mov
fistps
js
shr
mov
scas
outsb
push
xchg
dec
mov
mov
jl
testl
pop
push
cmpsl
sti
jne
dec
or
enter
xlat
cs
inc
daa
pop
sub
fldl
xchg
add
pop
push
aad
cmpsb
outsb
call
js
lea
test
psubusw
pusha
jmp
loop
cmp
mov
mov
xchg
push
out
imul
push
insl
fnstsw
adc
fsubl
cmp
cmp
cmc
in
fcoml
adc
jns
mov
shll
jle
pop
adc
popa
dec
xor
push
adc
cmpb
push
push
cvtdq2ps
sbb
es
and
gs
nop
push
daa
push
adc
or
mov
inc
scas
cmc
xchg
adc
xorl
dec
adc
mov
out
inc
test
mov
ljmp
adc
add
ret
notb
cmp
mov
test
test
lock
adc
adc
in
sbbb
lock
mov
dec
stos
out
fiaddl
sub
jmp
mov
sti
roll
add
pop
rcll
pusha
roll
in
and
ja
outsb
jo
cwtl
and
xor
add
out
test
aam
and
inc
mov
sub
mov
pop
or
fadds
cli
xchg
and
sbb
cmpsl
mov
and
xchg
sbb
lds
push
movsb
jnp
inc
movsb
test
inc
fcmovbe
push
lcall
andl
outsl
ficoms
in
es
and
popa
in
jg
jnp
mov
orl
sub
adc
pop
cmp
pop
mov
nop
int3
lods
jle
stc
test
mov
add
jp
xchg
ficomps
fwait
mov
inc
inc
int
jecxz
outsl
fwait
mov
arpl
mov
cmp
adc
dec
sbb
lods
cmp
jg
cmp
notl
xchg
add
jg
jmp
dec
push
or
adc
in
addr16
inc
sbb
add
cmpsl
in
jl
xchg
cmp
push
dec
dec
xor
push
lods
bound
push
je
mov
pushf
popa
cmp
inc
adc
or
jmp
and
arpl
div
in
rorl
jle
pop
cld
sahf
out
cld
stos
es
jle
or
pop
or
in
int
fs
sbb
stos
pop
jmp
cmpsl
scas
mov
mov
sbb
fcmovu
lods
lock
xchg
aam
push
rcrl
mov
jecxz
jnp
sbb
cmpsb
add
sti
and
out
sbb
push
adc
rcrl
bound
or
jno
sbb
xor
jle
addb
dec
addr16
add
adc
mov
pop
js
jecxz
add
xor
imul
fwait
dec
mov
hlt
fdecstp
push
inc
mull
mov
popa
jb
or
sbb
je
jbe
mov
mov
sarb
xlat
adc
mov
mov
filds
xchg
sti
scas
jbe
push
incb
push
subb
xor
xor
aad
int3
push
movl
pop
clc
jbe
mov
addr16
lds
xor
lahf
lahf
movsb
jg
daa
ljmp
push
mov
test
pop
push
and
stos
movsb
pushf
mov
das
jp,pt
aad
lods
js
jae,pt
in
nop
mov
dec
sbb
lock
nop
inc
rcrl
cmpsb
push
insl
dec
sti
jg
inc
lea
sti
int
mov
sarl
pusha
mov
cli
out
loope
pop
popf
test
jo
mov
add
fwait
lea
addr16
fsubrs
in
jne
div
inc
cmp
push
push
inc
push
out
ret
outsb
cmp
scas
mov
sub
insb
daa
dec
out
testb
sbbl
out
imull
je
inc
mov
or
jmp
loop
pop
mov
cmc
or
sbb
adc
xchg
lcall
icebp
or
int
shrb
mov
push
fcom
and
popl
movl
add
js
pop
inc
dec
jne
lret
mov
push
jne
insl
dec
mov
lcall
jmp
push
in
les
or
out
xor
push
inc
pop
lods
mov
mov
ss
xor
incb
stos
sub
xchg
add
jno
outsb
mov
mov
xchg
ja
xor
out
pop
cmp
xchg
sub
mov
popl
fistps
scas
sbb
push
loope
jns
clc
xor
inc
pop
dec
cmp
mov
ret
cmpsl
sub
imul
lock
xchg
stos
mov
lret
push
sahf
adc
cmpsb
fisubrs
mov
inc
scas
in
sbb
push
pop
dec
pop
int
cmp
outsl
pushf
sbb
ret
mov
rcr
test
push
inc
imul
mov
ss
shrl
push
je
ljmp
xchg
dec
lahf
push
pop
mov
mov
loop
mov
sbb
std
lret
cmpsl
mov
pop
push
push
imul
or
push
dec
xchg
insb
and
je
imul
fdivr
mov
out
test
dec
add
cmp
pop
aas
scas
mov
test
add
push
push
mov
ror
mov
add
or
leave
in
or
sub
adc
out
sub
ret
mov
into
cmpsl
fdivrl
or
jle
jg
cld
or
inc
xor
inc
cmp
xchg
outsb
fs
lea
inc
dec
pop
arpl
lcall
sub
movsb
fistpl
mov
mov
es
push
sbb
inc
pop
xor
jnp
push
jmp
jb
test
das
daa
inc
dec
sarl
fsubrs
mov
clc
test
and
pop
fsubrp
push
in
adc
cwtd
cmp
cmpsb
and
push
xchg
fidivl
inc
sbbl
aas
fcoml
sub
cld
int
inc
call
popf
sbb
pusha
orl
pushw
xchg
sub
mov
mov
sub
mov
or
cwtl
mov
jge
leave
sbb
std
imul
pop
jge
sbb
cmpsl
add
fnstcw
pop
or
mov
mov
sbb
mov
mov
btr
push
mov
jmp
and
lret
dec
jmp
inc
mov
inc
loop
inc
xchg
popf
sbb
es
pop
fsubrs
ret
fcom
sbb
xchg
hlt
out
cmp
insb
scas
jno
adc
sbb
shll
or
dec
movsl
add
ss
lahf
clc
ja
mov
aas
mov
loop
mov
jp
adc
sarb
icebp
lret
out
pop
scas
inc
pop
push
movsb
jl
jmp
hlt
mov
push
orl
mov
sahf
int3
adc
mov
in
cld
pop
mov
rcrb
popf
mov
xorl
adc
ret
push
outsb
leave
xchg
adc
mov
outsl
pop
add
pop
fwait
push
add
pop
out
scas
repnz
sub
pop
stc
loopne
push
xor
sub
and
fistpll
sbb
std
insb
mov
add
test
aas
aad
test
test
sbb
dec
inc
and
enter
xlat
and
lcall
enter
aaa
adc
sti
push
fidivl
loopne
sub
dec
lea
rcrb
rcr
testl
xor
push
int3
sbb
jp
cmp
lock
ja
push
addl
in
mov
out
sbb
daa
roll
xchg
jle
adc
je
jbe
mov
inc
jno
adc
xor
fcoms
add
xchg
sbb
ss
xchg
out
loopne
scas
and
inc
mov
aas
sub
pop
mov
lcall
aas
outsb
or
mov
xchg
fnstenv
cmp
mov
pusha
or
mov
mov
and
cmpl
jno
inc
adc
mov
inc
cld
psraw
sub
imul
dec
dec
mov
push
and
lods
js
dec
jg
or
test
mov
inc
mov
sub
inc
lock
pop
push
xchg
jno
cs
repnz
out
push
push
shrb
mov
mov
or
in
jg
cld
push
lret
fwait
adc
add
cmc
sub
fadds
jne
cld
pusha
add
jmp
sbb
and
inc
mov
sti
pushf
cmp
xchg
stos
test
loope
iret
xorb
xchg
leave
lds
or
stos
nop
hlt
icebp
cld
jg
inc
aad
dec
cmp
mov
push
mov
jb
ret
xchg
mov
dec
outsb
xor
push
pop
add
icebp
popa
jge
pop
mov
clc
stos
inc
jl
add
outsl
pop
stos
aas
sub
int
dec
add
mov
sbb
movsb
or
xor
xchg
mov
test
movsl
fs
fmull
pop
push
mov
mov
xchg
test
sti
xchg
mov
cmp
out
lea
cmc
xor
xchg
xor
sub
gs
xchg
push
out
or
and
adc
pop
jecxz
push
xchg
sbb
rcrb
les
and
xor
shl
insb
pop
cmpsl
mov
mov
cmp
fsts
dec
or
mov
cmp
or
xor
movnti
fdivs
jg
or
or
pusha
aad
addr16
cs
mov
sbb
and
mov
mov
mov
stos
daa
jecxz
ffreep
int3
mov
ljmp
pop
loopne
test
sbb
cmp
out
ja
aas
sub
fnstsw
cld
aad
cmp
mov
stos
pushf
push
push
pop
ds
pop
addb
or
xor
pop
int
dec
and
pushl
jmp
xchg
sbb
xor
adc
inc
mov
sub
mov
lds
cld
sub
int3
push
jno
rep
cmp
imul
adc
lods
leave
adc
jae
out
out
xor
daa
mov
pop
push
pop
jmp
sub
aad
mov
outsl
arpl
sbb
add
and
pop
call
neg
push
pop
jecxz
arpl
sub
add
push
push
in
in
push
negl
jbe
repnz
sub
jp
fistpl
enter
setle
popa
dec
xlat
mov
sbb
xchg
mov
into
sub
inc
push
bound
mov
xchg
sbb
sub
fst
sbb
and
mov
lret
push
dec
inc
mov
out
jl
into
rcr
add
stc
push
popa
mov
bound
aas
add
mov
and
jbe
xor
mov
dec
cltd
daa
icebp
jl
loop
cmpsl
jp
in
rorl
sti
shl
add
cmp
pop
adc
xorb
lret
lea
mov
aam
test
pushf
ficoms
add
or
fnstenv
sbb
subb
pop
xchg
out
stos
test
xchg
int3
scas
pop
das
cmp
sub
js
bound
lahf
inc
adc
xor
jnp
or
sbb
mov
xchg
pop
fisttps
out
loopne
inc
movsb
in
test
addr16
jmp
push
mov
nop
pop
insb
pop
hlt
xor
enter
and
add
sbb
cmp
adc
xchg
faddp
inc
cmp
and
or
and
addr16
mov
je
pop
das
fimull
cld
cmpsb
shrb
inc
xor
mov
jb
xchg
scas
daa
jno
xchg
repz
ja
adcl
xchg
dec
icebp
outsb
loope
in
mov
fdivs
mov
push
cmpsl
adc
mov
aas
cld
test
hlt
pop
add
sbb
and
jge
addr16
cwtl
stos
jne
int
and
notl
leave
jne,pn
mov
inc
or
lds
mov
jg
test
mov
movsl
sti
inc
inc
addr16
dec
add
lret
stc
cld
jb
decl
mov
and
push
in
enter
and
xchg
add
loop
orl
sbb
aam
mov
push
and
int3
or
inc
dec
jb
pop
movl
jecxz
data16
inc
inc
push
adc
inc
or
adc
scas
int
aas
push
cs
and
mov
stos
mov
adc
push
addl
xor
mov
pop
aaa
hlt
add
pop
add
push
push
pusha
frstor
sub
sub
das
mov
adc
fistpll
cmp
lcall
mov
mov
dec
jmp
cmpsb
pop
ficoms
mov
orb
mov
sbb
int
mov
jmp
xchg
lret
xor
jle
cmc
sub
dec
aas
jb
rcr
xchg
inc
adc
inc
les
mov
push
add
in
ljmp
clc
mov
or
ss
loop
scas
sbb
cmp
fisubs
mov
jecxz
mov
lods
dec
add
mov
sub
cwtl
ljmp
lds
in
les
arpl
mov
or
or
sbb
sbb
fcompl
lods
mov
sbb
clc
int
xchg
push
repnz
inc
jns
sbb
fwait
push
lods
fisubrl
es
mov
ds
pop
movsb
imul
stos
shl
sub
adc
xor
add
bound
mov
or
mov
xchg
arpl
lret
add
nop
cmp
rolb
lods
mov
jle
daa
jg
xchg
add
xchg
scas
or
xor
push
dec
pop
std
rclb
xchg
pop
xchg
fsubrl
adc
mov
sub
adc
data16
aas
xlat
and
fdivrl
inc
xorl
mov
popa
adc
sbb
mov
adc
jnp
cli
push
cmc
pop
fldt
les
adc
imull
push
mov
les
icebp
mov
pop
push
xor
pop
push
leave
push
iret
xor
dec
cmp
int
scas
andb
inc
adc
mov
arpl
cmp
hlt
jmp
ds
std
shlb
mov
cmp
stos
fwait
cmp
jne
pop
inc
aas
int
arpl
adc
sub
shlb
out
cmp
clc
and
mov
rol
repz
rcrb
aaa
mov
je
xchg
sbb
add
mov
or
and
outsl
mov
mov
lcall
lcall
leave
lcall
sbb
lret
ds
bound
js
fwait
int
or
ja
in
jp
adc
push
int3
mov
push
add
jmp
ret
pop
test
mov
jnp
mov
dec
dec
cltd
lahf
dec
scas
mov
in
insl
inc
in
sti
sub
loopne
mov
jnp
cli
xchg
call
call
xchg
movsl
aam
push
pop
xchg
js
pushf
jg
adcl
out
push
adc
icebp
lret
xor
lock
aas
dec
sti
xchg
ds
xchg
jno
shll
fidivrl
out
ss
pop
das
xor
lock
lret
dec
out
sub
sub
push
xchg
loop
decl
or
gs
les
out
jae
sbb
jmp
das
mov
xor
arpl
push
in
outsl
testl
loope
in
les
aad
aad
adc
push
pop
shll
repnz
cmp
mov
cmpsb
xchg
push
xor
inc
xlat
jl
jae
dec
xor
lret
inc
mov
std
cmpsb
test
or
test
mov
enter
and
repz
test
leave
adc
add
imul
jle
je
mov
jo
dec
mov
mov
loopne
or
test
movsb
lret
insl
stc
mov
mov
mov
fcmovnu
fdivrp
or
sbb
nop
outsb
mov
jmp
orb
mov
imul
add
les
sbb
fildll
adc
jbe
push
jo
push
inc
cmp
fdiv
push
cmpsb
pop
sub
cmpsb
inc
lret
push
push
adc
incl
mov
call
cmpl
push
aad
orl
pop
cltd
insb
lea
cmp
std
scas
xchg
mov
adc
cmp
shrl
lret
pop
push
aad
push
jecxz
data16
xlat
idivb
ja
dec
outsl
lret
cmp
push
dec
inc
arpl
or
push
imul
out
inc
jb
mov
push
in
xor
xor
popa
and
test
notl
aas
fdivrl
into
gs
mov
ror
sub
pusha
adc
es
clc
fdivrs
add
mov
add
cmpsl
in
sub
fsubrs
lcall
ds
lds
dec
sbb
mov
repnz
mov
inc
shl
jmp
and
mov
sub
pop
dec
les
testl
daa
mov
in
fwait
sub
mov
mov
stos
stc
mov
or
pop
out
sub
dec
pop
in
dec
push
mov
pop
loop
inc
iret
jp
dec
jb
adc
icebp
push
test
cltd
xchg
int3
hlt
fdivl
lock
and
pop
mov
loopne
aad
imul
jl
dec
sbb
jno
imul
cmp
cmp
xlat
push
dec
pop
and
repnz
jae
stc
inc
add
sti
lcall
mov
push
cs
lahf
scas
add
jb
popa
sbb
into
pop
inc
and
aad
imul
sahf
lret
push
mov
dec
xchg
jnp
mov
xchg
xchg
mov
pusha
imul
inc
aad
loop
rcrb
shll
jmp
adc
outsb
jecxz
jge
inc
in
mov
icebp
sub
push
decb
out
adcl
imul
push
int3
jmp
pop
xchg
adc
stos
and
xchg
ja
inc
mov
cmpsb
mov
push
add
mov
mov
xor
xchg
test
lock
mov
iret
mov
hlt
and
sub
push
push
std
iret
adc
ss
inc
loopne
lcall
add
clc
inc
outsb
data16
daa
jns
or
popf
pop
dec
movsb
stc
dec
les
loopne
xor
or
in
push
cmp
fbld
or
sub
daa
into
fcomp
pop
das
jo
sub
jle
jmp
xor
push
std
jmp
mov
ficoml
adc
or
sub
insl
add
out
lcall
iret
jp
insb
addr16
or
clc
sar
inc
pop
in
xchg
repz
pop
pop
push
ret
popa
repz
cmp
ja
push
ljmp
jge
insb
sbb
pop
loopne
stos
test
movsl
mov
into
je
jne
icebp
lea
pop
mov
ret
jns
sbb
or
js
mov
daa
adc
add
pop
andb
jne
int3
mov
sub
into
pushf
adc
xor
adc
scas
pusha
pop
fcoms
cmp
push
mov
int
andb
leave
outsb
test
cmp
pop
jle
je
mov
shlb
cmp
int
in
adc
jle
cmp
loopne
xor
ds
aam
cmp
pop
sbb
imul
repz
sub
mov
cmpl
mov
in
popa
mov
stos
cld
mov
sub
add
ret
iret
dec
in
add
loopne
lds
add
mov
cs
dec
add
sub
sahf
add
fptan
repnz
mov
aas
cmp
aad
sub
mov
bound
nop
lahf
int
enter
pop
and
mov
lods
je
xchg
and
push
imull
insb
out
loopne
int3
pusha
jecxz
les
mov
and
ljmp
mov
daa
or
scas
arpl
das
push
sbb
sbb
pop
lret
loopne
xor
fisttpll
nop
inc
adc
push
sub
jle
sub
dec
hlt
xchg
aam
mov
shlb
lret
cmp
jno
mov
insl
pushf
push
mov
add
shrb
fucompp
push
jne
mov
stos
inc
xchg
scas
lods
cmp
and
aas
insl
add
loope
loopne
pop
jmp
in
rolb
cmp
dec
cmp
movsb
sub
and
mov
mov
mov
or
push
inc
lds
cmp
bts
sub
mov
shr
sbb
add
adc
sbb
cmpsb
cmpsl
and
adc
jmp
xchg
repz
fidivl
and
mov
jbe
addr16
lahf
sbb
je
jg
shl
fsubl
inc
loope
in
push
or
dec
test
pop
lods
sbb
cmp
mov
cwtl
in
je
xchg
aas
sub
int3
out
out
cld
loope
jo
insb
insl
ds
loop
or
xchg
mov
dec
jmp
jmp
push
pop
out
test
cmp
pop
mov
push
mov
inc
push
dec
nop
jae
and
cwtl
iret
sbb
mov
add
xlat
push
mov
shlb
sub
lret
adc
xchg
aam
add
mov
xchg
add
jg
sbb
movsl
jns
clc
and
scas
gs
mov
test
push
cmp
cmp
lds
or
xor
cmp
pop
pushf
cmpsb
add
or
sbb
nop
mov
mov
data16
outsb
aam
es
jmp
sahf
outsb
mov
xchg
jle
push
outsb
mov
cwtl
lea
jns
mov
fwait
cmp
enter
add
push
sbb
ficoms
mov
in
lods
pop
or
add
mov
aaa
adc
lahf
inc
xor
jne
testl
andl
pushw
dec
xor
jno
mov
mov
vshufps
sti
loope
data16
push
bnd
sti
dec
aam
test
shll
mov
and
mov
movsbl
icebp
inc
jo
loopne
out
dec
leave
mov
dec
aam
cmp
fidivl
cmp
stos
push
sbb
and
cli
xchg
ret
mov
mov
push
mov
icebp
pop
or
lock
mov
pop
repnz
enter
jmp
xorl
lcall
stos
sbb
xor
inc
in
pop
mov
jecxz,pn
mov
arpl
mov
or
and
notb
popa
inc
sub
shrb
out
mov
mov
pop
bound
loopne
out
insl
pop
mov
jle
adc
loopne
jge
xor
ret
lret
mov
flds
push
repnz
cwtl
push
movsb
pop
dec
push
dec
lcall
ljmp
inc
in
movsb
in
xor
mov
stos
call
sbb
sbb
bound
add
popl
pop
sub
fs
adc
test
sub
cld
rclb
jmp
or
lret
mov
in
xor
mov
ds
fnstsw
mov
lret
or
fwait
mov
neg
or
push
roll
xchg
pop
gs
push
or
and
les
cmp
pop
pop
inc
sbbl
and
ss
cmpsl
in
lods
or
jno
sub
sti
jge
adc
loopne
pop
in
mov
adc
sbb
xchg
xlat
push
jge
xchg
insb
inc
repz
mov
cmp
cltd
insl
or
ss
mov
xor
movb
aad
or
xor
insl
int
lods
mov
or
xchg
push
test
popa
int
add
xchg
adc
insl
adc
outsb
pop
jmp
lcall
clc
pop
pop
pop
ja
leave
mov
test
xchg
fwait
pop
call
je
jns
pop
cmp
dec
ret
cmc
pop
cltd
in
push
mov
pop
mov
test
xchg
and
loope
cld
push
insl
pop
dec
call
orl
outsl
or
je
arpl
xor
and
cmpsb
imulb
jecxz
fcmove
mov
adc
xlat
dec
les
adc
sub
ret
xor
pop
js
loop
mov
stos
js
shlb
inc
dec
push
jge
lahf
dec
jnp
inc
xchg
sbb
push
add
inc
pop
gs
xor
sub
clc
jno
orl
rolb
inc
cmpsl
adc
ffree
test
incb
loopne
dec
rcrb
sbb
mov
jo
mov
pop
mov
mov
mov
repnz
jl
mov
inc
stos
lret
mov
sub
push
jae
jno
pusha
jnp
adcw
push
out
sarl
sbb
xchg
mov
bound
jnp
sti
jns
outsb
jg
outsl
outsl
mov
jnp
push
popf
mov
push
fmull
sar
aas
rcrb
inc
mov
dec
jmp
nop
xor
push
out
std
loope
dec
mov
ret
je
and
xchg
lret
and
adc
jecxz
cltd
xchg
int3
nop
fdivs
jne
add
xorb
sarl
sti
mov
stos
add
pop
in
out
xor
imul
sahf
scas
and
adc
adc
mov
mov
decb
sub
mov
in
js
dec
pop
adc
mov
xchg
mov
mov
push
dec
out
sub
out
push
push
rclb
adc
fs
lcall
insb
lcall
les
jbe
test
movsb
or
stos
push
shrl
popa
mov
and
mov
and
xchg
push
push
data16
lret
and
jne
fisttpll
ds
out
int
aad
push
aaa
add
stos
or
js
int3
cmp
out
lahf
sbb
fmul
mov
aad
or
popa
ror
dec
iret
in
das
lahf
fs
xchg
insl
pusha
and
adc
dec
jl
push
and
pop
dec
mov
adc
dec
mov
pop
push
add
shl
mov
fildl
popl
pushl
mov
movsb
decb
and
das
popf
fxch
in
pop
stc
sub
sbb
xchg
jmp
in
push
and
mov
sub
pop
jnp
mov
xchg
add
jecxz
lahf
add
inc
in
outsb
sbb
xchg
notl
push
xor
popa
jo
mov
mov
push
jg
dec
cs
mov
subl
dec
pop
mov
divb
movsl
push
fwait
btc
stc
in
movsb
repz
insb
add
int3
mov
loopne
pop
into
push
nop
or
xchg
outsl
pop
pushf
jmp
cmpsl
pop
mov
inc
iret
sbb
mov
dec
fsubl
cld
add
addb
mov
imul
test
jecxz
dec
or
jle
or
ljmp
fnstsw
push
dec
lods
xchg
dec
aam
mov
stc
and
mov
aam
push
cmp
loop
xchg
push
jp
pop
pop
jmp
inc
xor
scas
dec
cltd
jle
outsl
mov
outsb
mov
cmp
outsb
lahf
loop
aaa
pop
mov
fnstsw
dec
xchg
mov
push
mov
loope
xchg
or
and
or
dec
and
add
rol
mov
mov
ja
mov
xor
mov
pop
arpl
push
popa
sbb
add
gs
push
xchg
mov
push
cmpsb
enter
mov
lods
inc
fwait
xor
in
insb
mov
sbb
or
in
daa
popa
sub
mov
mov
fisttpl
inc
shll
or
pop
fdivs
in
cmp
lea
xlat
lods
cmp
icebp
pop
push
sub
inc
insl
repnz
add
jmp
dec
ljmp
jo
sahf
push
dec
scas
mov
adc
iret
mov
stc
inc
outsb
aam
push
fnstsw
outsb
test
cld
clc
xor
test
or
pop
fcoml
sub
and
mov
inc
xrelease
bound
int3
jmp
orb
int3
xor
fs
lret
bound
fsubrs
mov
or
das
jecxz
xor
cmp
jno
jmp
shll
test
out
inc
int3
and
ds
cld
rcrl
push
xlat
movsb
xchg
in
std
cli
cmp
cmp
mov
cmc
xchg
clc
inc
test
mov
sbb
cmpsl
jl
lcall
pushf
mov
inc
test
xchg
add
inc
cmpsb
cli
out
popf
into
jg
loopne
pop
cmp
add
test
mov
testb
inc
mov
mov
pop
cld
pop
sub
jnp
cs
shrl
pop
and
pop
mov
xor
idivl
data16
cld
pop
inc
sbb
test
imul
ficompl
adc
lret
ljmp
scas
mov
stos
js
jmp
dec
insl
aad
pop
jl
mov
lret
pop
int3
jnp
mov
cmp
stos
daa
loopne
fwait
ljmp
mov
pushl
jecxz
sarb
sbb
in
loopne
sub
pop
stc
test
mov
mov
push
aaa
xchg
js
repz
add
mov
xchg
loope
das
jns
sbb
adcb
jae
pop
xchg
pop
iret
popa
popa
insl
add
mov
xchg
sbb
ljmp
push
mov
push
inc
pop
push
adc
inc
jg
jnp
sbb
mov
es
outsb
insl
inc
mov
fnstsw
adc
in
fdivrs
mov
subb
stc
daa
addr16
push
sahf
inc
pop
jecxz
insb
xchg
jnp
in
pop
scas
addr16
sahf
fwait
sbb
jb
into
mov
jle
movsl
aaa
sub
push
xchg
ljmp
stos
push
addb
scas
nop
jb
sub
and
mov
lods
daa
xor
or
cwtl
mov
push
jle
mov
js
inc
jle
xor
hlt
scas
jno
popl
in
pop
sar
imul
cmp
mov
pop
jmp
inc
lcall
push
imul
imul
dec
test
aam
mov
fxam
push
pop
nop
nop
or
inc
cmpsl
xchg
std
subl
mov
dec
imul
mov
leave
jecxz
outsb
dec
cmc
stos
xchg
rclb
sbb
outsb
in
insb
imulb
fmuls
mov
pop
test
mov
sub
sbb
cmp
jno
cmp
jmp
roll
out
sub
mov
mov
setg
sub
or
dec
or
dec
jbe
inc
scas
out
adc
add
lods
das
bound
add
test
stc
scas
shl
sub
push
sahf
std
scas
sub
aad
rclb
test
lock
cmpsl
mov
addr16
mov
clc
jne
xchg
ljmp
xchg
add
cwtl
mov
mov
test
testb
fsts
lahf
or
mov
int3
adc
stos
push
push
out
lods
rorl
call
movsb
mov
cmp
sub
sarb
inc
out
fbstp
push
push
stos
call
adc
mov
add
pop
push
lret
lods
out
sarb
aaa
adc
pop
mov
fidivs
xor
cltd
aad
xchg
test
aad
fwait
jo
jns
inc
cld
mov
pop
icebp
fisttps
loopne
inc
sbb
out
outsb
adc
or
clc
cmp
int
movsb
mov
sbb
cli
sbb
stos
ljmp
jb
push
sbb
bound
mov
dec
pop
pop
mov
pop
jmp
and
push
sti
and
jbe
inc
mov
je
jns
stos
inc
jae
movsb
cmp
arpl
push
and
cmp
xchg
andl
test
sahf
std
pop
mov
push
addr16
xor
mov
fsubs
pop
jp
xor
stos
movsl
push
sbb
jmp
cmp
ds
lods
mov
cmpsl
aaa
iret
mov
and
idivb
loop
in
inc
lret
inc
xor
jbe
fwait
gs
mov
add
mov
fdivs
outsl
mov
inc
or
sbb
adc
xor
imul
adc
rorl
xor
int3
sbb
sub
push
xchg
outsl
outsb
mov
xchg
adc
and
jmp
aaa
push
loope
imul
or
data16
inc
mov
and
inc
cld
enter
pop
mov
clc
add
insb
xchg
imul
mov
sub
inc
loop
ss
push
jb
daa
dec
das
sub
pop
stos
mov
jbe
add
and
cmp
insb
push
mov
popf
test
push
cmc
add
xchg
je
insb
and
jb
imul
outsl
xor
mov
and
cmp
mov
xchg
push
or
sarl
cld
or
cmpsb
jns
ljmp
in
sti
mov
test
sub
ja
fcmovu
adc
push
mov
cmp
mov
inc
xchg
push
test
push
or
sahf
jmp
mov
jmp
dec
ja
or
nop
fstpt
xchg
sarl
mov
adc
arpl
dec
pop
shrl
or
into
rorb
pop
dec
mov
lret
cmpsl
or
jecxz
or
cmp
cmp
jecxz
sti
cmpsl
or
xor
pop
or
push
je
fisubrl
xor
mov
pushf
bound
je
in
dec
scas
xchg
outsb
inc
fisttpll
dec
cmp
mov
dec
mov
mov
sub
push
sbb
shll
sub
add
and
inc
add
sarl
fmull
jecxz
xor
imul
sub
std
sbb
or
jmp
mov
mov
and
jecxz
xor
dec
mov
xor
cmp
pop
test
jns
repnz
pop
xor
pop
push
int3
or
into
and
sub
and
xchg
add
bound
aam
pop
sub
and
add
cmp
pop
or
insl
push
fsubs
dec
pop
aam
add
jge
cmpsb
movsl
push
mov
faddl
mov
cwtl
add
inc
and
adc
mov
jnp
sub
sbb
pop
xchg
jo
pop
jmp
popl
adc
ret
inc
add
cmp
jo
mov
and
and
xchg
out
jae
xchg
testl
mov
jbe
pop
sbb
je
aam
fdivl
inc
sub
lret
xchg
fistpl
mov
repz
sbb
lods
enter
fadds
push
andb
bound
inc
pop
in
addb
cmp
add
das
inc
lret
lret
ljmp
cli
or
sub
adc
and
push
inc
add
jb
rcrl
mov
stos
jns
bound
jno
push
mov
fbld
push
xchg
push
xchg
inc
jnp
movsb
dec
into
mulb
sbb
xor
sub
add
int3
xchg
inc
scas
xor
and
xor
ds
jns
jle
je
stos
inc
or
loop
loopne
roll
repnz
pushf
test
scas
clc
hlt
sbb
push
into
jl
jge
jno
pop
mov
out
adc
fwait
push
and
cmp
lods
cmp
or
test
outsl
push
loope
stc
popa
cli
sbb
xchg
xchg
sarl
mov
pop
cmp
imul
push
xchg
jmp
ret
jecxz
xor
in
mov
xchg
inc
stos
xchg
loopne
ds
jle
lods
jbe
xor
jp
inc
lcall
adc
gs
jb
pop
out
insl
cs
sbb
into
jb
je
ficomps
pop
or
shlb
mov
loop
push
dec
jl
push
leave
pop
pop
imul
ss
or
and
pop
lret
push
or
pop
and
scas
dec
push
jns
cmp
popl
or
add
notl
jmp
lahf
sub
mov
dec
in
ss
insb
mov
dec
lret
das
lods
ja
push
pop
inc
jle
subl
add
add
adc
xor
xchg
inc
mov
sbb
shlb
mov
mov
or
outsb
inc
lret
stc
sub
movsb
sahf
sbb
or
rclb
sbb
push
sub
es
rcrb
mov
xchg
adc
or
subl
push
lcall
fildll
dec
sbb
inc
push
push
loope
mov
fst
jl
xorb
xchg
jbe
mov
pop
and
xchg
sub
pop
xchg
mov
mov
sbb
jae
and
das
mov
dec
icebp
and
pop
lret
hlt
aaa
sub
xchg
scas
in
jecxz
add
or
jb
xor
popf
jge
pop
mov
or
ror
fidivrs
xchg
mov
mov
inc
jno
subb
lret
and
xchg
inc
pusha
push
call
cld
lcall
outsb
mov
and
fs
jge
mov
cld
xchg
lahf
rcrl
enter
jae
sahf
mov
jecxz
xor
aad
sti
push
push
dec
cmp
push
data16
lret
das
nop
mov
mov
mov
mov
decb
cmp
cmp
pushf
shrd
jmp
mov
or
repz
std
scas
aad
cmp
push
jmp
mov
pop
cltd
shr
and
mov
cmp
sub
ds
add
pop
ret
pop
cmpsb
dec
push
int
and
pop
scas
fbld
and
ret
cmp
jns
jmp
push
fcmove
pop
mov
and
or
adc
lea
mov
sbb
jecxz
test
arpl
inc
mov
mov
push
pop
loope
sbb
cmp
outsb
xor
out
mov
pop
hlt
lahf
cld
stos
aas
inc
cmp
gs
pop
push
and
sub
dec
andl
sti
dec
popa
pop
add
pushf
ret
aad
pushf
sub
ss
mov
ret
dec
mov
cmp
call
cmp
sub
lods
leave
add
xor
es
and
cmpb
in
sbb
cmp
inc
faddl
out
dec
out
push
xor
cmpsl
jmp
xchg
scas
cwtl
fwait
nop
fs
insb
cmp
mov
pop
xchg
test
adc
mov
sub
dec
ds
int3
cmp
push
cs
mov
loope
daa
cmp
orb
mov
out
es
jns
addr16
add
pop
loope
je
jb
cmp
or
jbe
rcll
sarb
cld
jb
mov
jge,pn
mov
icebp
lcall
loop
notl
dec
push
mov
in
sbb
mov
xorl
sbb
xor
in
cmc
test
adc
loope
hlt
rcll
mov
fisubrl
in
loop
mov
cld
lods
pusha
push
pop
push
pop
stc
pop
out
sbb
push
das
sbbb
int3
movsl
stos
inc
lcall
sbb
cmpl
imul
and
sbb
int
fdivrl
scas
dec
pusha
idivb
jg
push
add
push
hlt
xchg
mov
jbe
das
fwait
int
imul
add
xor
xchg
cmp
notl
or
mov
cs
push
popf
movsb
popa
ret
push
aas
aad
inc
jne
aas
lcall
fmulp
add
movsl
fs
outsb
rorb
dec
mov
ficoms
scas
clc
jmp
jecxz
ss
adcl
mov
mov
scas
sub
lock
daa
imul
dec
pop
mov
mov
addr16
push
adc
and
jmp
lea
mov
push
mov
imul
mov
push
or
xor
and
pop
dec
cmp
mov
inc
lea
test
mov
aas
mul
imul
add
sub
push
fnstsw
jecxz
call
push
cmp
add
ret
loop
and
sbb
popa
pusha
xchg
sbb
sbbb
gs
sbb
xlat
push
test
out
push
cmp
inc
inc
inc
mov
std
mov
mov
loope
test
test
lods
mov
mov
jnp,pt
lds
repz
daa
lret
gs
push
jmp
cwtl
insl
jns
and
pop
mov
es
jge
cld
in
fisubs
push
and
inc
scas
mov
lock
xchg
addr16
jmp
pop
sbb
pop
inc
pop
insl
xlat
ja
adc
test
inc
mov
shlb
cmp
cld
pop
fistps
xchg
add
mov
sbb
mov
stc
jmp
mov
cli
push
fnstcw
pop
adc
pop
movsl
stos
xchg
pushl
adc
mov
stos
push
push
pop
out
push
push
daa
pop
mov
popa
jne
into
addl
xchg
loope
dec
jno
jne
or
adc
and
in
ret
sbb
push
mov
jg
mov
add
push
xor
cmp
push
sub
cli
iret
push
push
scas
and
cmc
add
lret
fs
jne
idivb
fldl
rcrb
mov
fcmovbe
fisttpll
cmpb
and
adc
call
xchg
jl
les
es
cmc
xchg
or
mov
sbb
sbb
movsb
shll
pop
insl
mov
dec
out
repz
out
jmp
cltd
xchg
addr16
inc
in
hlt
or
xlat
icebp
adc
sub
sahf
mov
arpl
je
cmp
imul
jbe
push
cmp
lea
insl
jl
or
mov
cmpl
in
shr
sti
in
dec
lock
lahf
ret
xor
pop
push
inc
test
or
sub
mov
sbb
notb
and
lds
inc
push
bound
and
es
mov
xchg
stc
and
pcmpgtb
mov
inc
push
mov
in
fdiv
xor
je
cmpsb
lods
aad
or
enter
sub
push
daa
pop
sbb
mov
flds
mov
add
mov
cmpsl
lahf
mov
daa
sub
mov
xor
divb
stos
push
mov
sbb
mov
clc
loop
movsb
mov
cmp
scas
xor
shrb
popl
sahf
gs
sbb
push
xor
int3
lcall
and
pop
jge
push
stc
cmpsb
xor
xchg
xor
push
inc
mov
cwtl
push
scas
mov
xchg
jno
aas
dec
arpl
stos
xchg
pusha
add
inc
pop
xchg
mov
enter
test
out
subb
in
xor
or
es
into
mov
movd
outsb
lcall
pop
mov
adc
cmpsl
cmp
sub
mov
pop
rcll
pop
jecxz
out
loope
dec
and
push
xchg
jnp
divb
adcl
jne
sbb
imul
mov
lds
lods
fistl
fsqrt
and
shl
push
lds
mov
shll
fistpll
jns
and
mov
pop
rcrb
incl
mov
scas
pop
dec
lahf
ret
pop
xchg
filds
hlt
mov
xor
xor
cwtl
jmp
cmp
mov
cmpb
mov
pop
and
clc
addr16
notl
add
orb
orl
xor
iret
cmp
sub
mov
aad
mov
scas
push
leave
frstor
cld
test
mov
imul
pop
fadd
adc
jne
dec
fisubrs
push
insl
mov
mov
cwtl
cmpb
jle
mov
inc
sbbb
sbb
xchg
xor
imul
aad
int
push
andl
stc
sbb
push
sbb
jp
jg
hlt
ds
test
and
sahf
repz
int
sahf
jnp
bound
and
push
inc
aam
pop
out
stos
popf
in
ljmp
add
or
out
outsl
es
in
jb
ret
mov
mov
mov
and
jno
mov
mov
pop
sub
in
push
mov
stos
movl
pop
mov
xchg
cli
fcoms
aam
ja
jecxz
jb
cmpl
aad
ljmp
pushf
xor
mov
popf
stc
test
jmp
loopne
jnp
lret
sbb
pop
in
adc
outsl
ret
mov
mov
shr
std
pusha
push
and
push
adc
xchg
mov
test
adc
sub
inc
jl
push
cltd
addr16
dec
aas
pop
lcall
jnp
ja
pop
sti
popa
imul
stos
mov
xchg
lock
repnz
popf
inc
xor
pop
xor
adc
scas
test
imul
iret
mov
sbb
cs
push
aas
filds
jg
aas
sub
jb
xchg
inc
mov
xchg
mov
les
inc
xchg
fnstenv
xchg
insl
ljmp
std
pop
mov
scas
fists
out
xchg
jmp
loop
jnp
repnz
xchg
push
sahf
fcompl
js
sub
daa
out
popa
push
cmp
pop
add
pop
mov
mov
loopne
and
sbb
push
jg
push
mov
jo
aaa
xor
addr16
mov
data16
xor
sbb
imul
fwait
xchg
xlat
nop
es
insl
add
mov
and
repnz
jne
dec
push
xor
mov
push
inc
or
or
std
inc
jb
and
ficoms
xchg
call
push
in
outsl
jmp
pop
fbld
cmpsb
scas
xor
je
pop
pop
xchg
push
scas
jne
lods
rclb
jmp
jne
sub
scas
idivb
jnp
xchg
sbbb
gs
aam
mov
shl
js
push
mov
adc
cmp
loop
aad
loopne
sub
mov
fsin
sbb
sahf
push
mov
ret
pop
push
fildll
xor
pop
add
rorl
mov
dec
push
pop
jae
cmp
dec
xor
test
inc
jg
sbb
mov
push
adc
mov
stos
outsb
fldl
dec
out
and
pop
test
ja
pop
sub
lds
add
movb
sbb
sub
and
leave
inc
gs
ljmp
sti
dec
or
dec
pop
negb
mov
jmp
out
add
sub
mov
inc
fstpt
sub
roll
imul
mov
cmp
adc
pop
adc
sbb
popf
add
xchg
aad
ret
ljmp
sub
adc
jo
mov
mov
sbb
cmc
push
test
bound
push
mov
dec
pop
std
mov
inc
das
cwtl
in
xor
out
push
jl
mov
adc
pop
aaa
jmp
lahf
arpl
adcb
loope
fbstp
bnd
in
daa
fwait
inc
inc
into
or
dec
in
push
movsl
or
scas
orb
inc
addr16
xor
lret
hlt
mov
sub
dec
lods
fldt
ds
cmp
or
jmp
mov
jmp
jle
in
das
insl
fstpl
test
mov
and
out
in
sbb
in
pop
rcll
add
hlt
test
jmp
iret
mov
add
and
jecxz
lds
mov
enter
jne
dec
jl
inc
loop
lods
pop
rcrl
push
fstpt
scas
iret
int3
ljmp
mov
sbb
std
pop
xchg
pushf
stc
addr16
test
pop
pop
add
das
and
mov
push
xor
arpl
sub
sidtl
cmp
jbe
pop
sbb
repnz
pop
mov
outsb
cli
pusha
push
sub
dec
adc
fwait
sahf
sahf
push
xlat
mov
push
idivb
cmp
pusha
xlat
cmp
add
stc
and
addr16
int3
sub
rclb
sbb
adc
lods
mov
lods
mul
xchg
and
inc
incl
dec
inc
fdivrl
sub
std
cmc
push
mulb
inc
ja
push
lret
push
cmp
inc
movsl
cmp
lods
aas
push
shr
test
aas
sbb
mov
aaa
call
in
sbb
into
push
inc
jae
pop
cmp
adc
imul
insb
or
sbb
jl
xor
shll
sub
xor
push
into
inc
and
and
mov
inc
mov
mov
mov
pop
mov
pop
mov
stc
mov
and
cli
cld
js
sbb
popa
sub
jecxz
mov
out
push
add
push
addr16
push
movsl
stos
push
and
pusha
sti
mov
adc
and
leave
push
loope
mov
jno
mov
jmp
dec
adc
xchg
sbb
mov
and
shr
ss
jge
cli
pusha
les
cmp
mov
sahf
push
cmp
sbb
in
xchg
dec
jmp
rorl
jg
jns
in
ss
cwtl
std
imul
cltd
jmp
insb
inc
xchg
xchg
movsl
fwait
ror
mov
icebp
or
int
movsl
sub
or
in
jne
shll
icebp
pushf
ds
mov
pop
je
adc
jg
dec
out
mov
mov
pop
or
pop
movsb
cwtl
loope
xor
ja
adcl
push
xor
push
sar
shlb
xchg
adc
scas
inc
flds
xor
xor
jnp
and
rolb
cmpsb
outsl
out
lret
jl
out
pop
stos
jns
jg
mov
gs
mov
pop
push
jg
into
rorl
cmpl
lcall
mov
xchg
or
int3
divb
jmp
add
cwtl
adc
mov
arpl
inc
scas
hlt
pop
pop
repnz
add
mov
shlb
mov
divb
add
insl
cli
subb
xchg
fimuls
pop
aad
cli
xchg
pop
inc
test
xor
outsl
cmc
scas
cmp
mov
sbbb
popf
adc
into
mov
jecxz
aaa
push
das
pop
in
sub
les
ljmp
movsb
fistps
lock
jo
stos
test
adc
pop
addr16
dec
cmp
rcr
shr
loop
testl
cltd
test
push
and
bound
push
les
xlat
nop
jmp
mov
nop
dec
and
xor
rol
hlt
ljmp
pop
jno
lcall
or
loop
shr
in
repnz
mov
testb
mov
xchg
or
stc
ja
adc
call
aaa
imul
out
shl
fistpl
xchg
adc
pop
roll
mov
cmc
push
cwtl
pop
fisttpll
cmp
int
in
mov
ss
jmp
xlat
std
pushf
inc
pop
sub
inc
lea
and
and
jo
int
nop
cli
hlt
cmc
lock
inc
and
push
rorb
stos
repz
movsb
xor
popf
adc
in
inc
sbb
mov
repz
cmp
hlt
ljmp
mov
aam
push
pop
jl
sbb
popf
sub
mov
xor
jo
mov
add
xchg
mov
sbb
fsubrl
insl
mov
mov
dec
ss
leave
out
repnz
adc
imul
dec
not
shrl
fucomi
sarb
add
jp
mov
add
push
loopne
pop
adc
or
enter
xor
pop
mov
sub
and
stos
in
ror
push
mov
pop
and
js
fidivrl
mov
fiadds
shlb
cmp
daa
into
std
sub
ret
pop
lret
xchg
push
scas
sub
push
outsl
push
xchg
inc
cmp
dec
ja
repnz
jns
repz
add
imul
mov
dec
mov
and
movsb
jne
push
test
or
cs
jle
jo
pop
cmpsb
or
jge
inc
push
mov
add
leave
mov
push
mov
in
and
or
fistps
jle
pusha
xchg
int3
mov
notb
or
insb
push
jnp
rcrb
pop
repz
xor
pop
push
cld
and
inc
fidivrl
mov
add
mov
mov
out
arpl
std
xchg
dec
sub
stc
out
adc
mov
push
out
push
clc
sub
xchg
sbbb
fsubrs
rorl
xchg
cmpsb
pushf
or
icebp
jge
cwtl
fs
mov
xchg
cld
and
or
xorl
div
pop
inc
mov
jne
aad
rorl
addl
insl
loope
lods
adc
lods
mov
ret
repz
and
add
xchg
js
pusha
clc
inc
fistpl
push
icebp
adc
mov
cmp
push
and
fsubp
or
mov
and
xchg
movsb
pushl
mov
test
out
std
rcll
push
push
add
ss
add
or
jg
pop
fnstcw
jl
loopne,pn
lea
mov
pop
and
inc
fimuls
cmp
cmp
fwait
sbb
mov
push
xchg
jg
mov
mov
xor
pop
and
xchg
fistl
mov
addr16
jl
dec
subb
movsb
mov
dec
rep
cmp
rorb
xor
ds
mov
fidivrl
orl
fcompl
sti
iret
popa
repz
or
inc
or
imul
insl
jbe
jns
inc
push
pop
lret
arpl
push
or
or
in
sti
lret
sbbl
clc
leave
push
enter
push
jg
subb
es
aas
pop
inc
sbb
jge
sub
js
adc
pop
adc
enter
and
test
scas
fs
cmpsb
insl
pop
pop
ret
jns
shl
mov
sub
inc
xchg
pusha
mov
in
mov
loope
push
xchg
mov
cli
arpl
xor
push
push
jo
jae
shll
pop
pushf
sub
mov
mov
scas
fwait
inc
sahf
bound
cmp
jns
pop
cwtl
push
pop
inc
dec
pop
jp
mov
mov
jl
daa
cld
negl
movsb
int3
jmp
lods
loop
dec
pop
push
push
iret
adc
xchg
xor
dec
xchg
in
loope
push
push
and
lds
jp
je
mov
inc
jp
xor
sbb
test
sub
ret
fnstcw
xor
imul
mov
fcomps
es
mov
scas
inc
fidivl
push
add
xor
sbb
je
data16
adc
xchg
pop
push
add
nop
jl
push
jae
cwtl
rolb
or
loope
sub
iret
into
adc
mov
cmpl
cmp
int3
fnstsw
hlt
ret
imul
es
fs
sub
sub
mov
test
cmc
adcl
push
and
mov
scas
push
out
dec
sbb
adc
jp
sbbl
sub
sub
lret
lcall
stos
pop
ret
mov
cmpsl
test
enter
ja
sbb
aam
sbb
cmpsl
daa
inc
outsl
scas
push
sahf
dec
fisttpl
pop
jge
pop
cwtl
leave
fwait
in
sub
ljmp
adc
xorb
mov
cmp
out
xchg
xor
std
mov
jge
insl
xchg
fdivr
mov
es
out
lock
or
shrl
or
sub
enter
pop
mov
pop
jb
jo
jge
test
adc
loopne
stos
add
jl
xlat
jle
addr16
push
stc
ljmp
sbbl
test
rolb
adcl
xchg
das
push
les
ficoml
sti
and
jns
lcall
adc
jbe
xchg
xchg
pop
es
fstpl
sbb
push
mov
call
je
shr
xchg
fsubl
loop
sbbl
out
pop
cmp
mov
inc
fidivs
xchg
cmp
add
lods
jae
call
sub
nop
ljmp
sti
int3
inc
xor
sahf
xor
std
dec
dec
sbb
icebp
les
sbbl
xor
cli
loopne
jae
sbb
xchg
movsl
add
dec
pop
push
xor
lcall
jne
mov
xor
jns
inc
push
leave
call
xchg
xor
push
out
adc
add
adc
mov
jmp
ja
pop
jecxz
pop
cmp
adc
fisubrl
adc
cmp
movsb
mov
push
repz
shr
fcmovnb
in
inc
cmpsl
dec
sbb
cmpps
icebp
jge
ds
movsl
sub
inc
dec
xchg
or
mov
mov
cmc
fcomps
jbe
lcall
mov
cmp
lret
jge
cs
dec
cmp
icebp
les
fdivl
or
or
inc
cmp
xchg
aaa
movsl
cld
es
test
mov
daa
jge
repz
ret
dec
out
jae
movl
sbb
mov
sbb
mov
pop
mov
add
push
ja,pn
jmp
push
sbb
aas
shlb
int3
std
mov
shll
aad
inc
mov
movsb
push
mov
mov
or
cltd
lock
mov
mov
adc
lahf
test
aaa
inc
ja
sbb
pop
fsubrs
dec
rcll
mov
lock
push
dec
clc
xchg
ret
xchg
ss
push
jl
and
or
pop
pop
push
std
or
ds
mov
sahf
jge
jmp
fs
int3
subb
mov
push
push
mov
jne
clc
lret
mov
pop
fldl
add
aaa
dec
pop
cmpsb
ds
xor
xor
and
xchg
ja
cmpsl
cld
aam
int
mov
cmp
test
test
cmp
and
shrl
fnstsw
repnz
inc
xor
add
adc
cltd
testl
jae
pop
sarb
call
stos
dec
aam
ret
push
popa
push
icebp
mov
xchg
push
push
adc
push
std
mov
lret
ficoms
test
and
dec
inc
mov
sub
xlat
repnz
mov
sub
xlat
mov
cmpsl
addr16
rcr
shl
push
loop
add
data16
jmp
push
or
pop
roll
xchg
sub
and
adc
dec
add
outsl
ss
andl
in
or
lret
cmc
push
sbb
outsb
push
cmp
add
jmp
push
sub
lock
aaa
add
sbb
mov
pop
out
repnz
pop
pusha
pop
sub
adc
jns
aaa
cld
add
das
mov
push
fidivrl
mov
push
dec
sarl
insb
movsl
xchg
sbb
xor
mov
cmp
fwait
pop
les
jle
inc
icebp
fidivrs
into
jecxz
mov
jl
xorb
mov
outsl
stos
mov
rcl
cmp
pop
hlt
imul
mov
push
cmpl
push
cs
in
xchg
jg
adc
addr16
jle
rclb
push
push
cmp
pushf
xlat
sbb
leave
cltd
jl
fnstenv
out
out
ja
inc
mov
pop
cwtl
push
mov
js
out
pop
lahf
inc
inc
call
jns
push
dec
data16
dec
inc
push
mov
push
aas
dec
push
test
iret
mov
xchg
insl
dec
jecxz
and
scas
mov
xor
xor
xchg
jp
int3
xchg
inc
pop
mov
leave
mov
lahf
in
jnp
cmp
jecxz
movsb
dec
mov
movsl
out
adc
sahf
gs
sbb
in
out
lret
cmpsl
lcall
mov
faddl
or
fildl
dec
cmp
add
movsb
xchg
mov
mov
mov
enter
sarl
cltd
xchg
add
gs
sub
cmp
lds
loopne
pushf
and
lea
push
cld
daa
mov
hlt
add
mov
inc
scas
pop
inc
addr16
xchg
imull
ret
lock
or
sbb
jle
inc
mov
push
mov
in
sub
insb
mov
testb
sub
in
test
mov
loope
and
in
cmp
xchg
mov
sahf
cmp
mov
mov
mov
inc
popf
inc
or
int3
or
dec
fdivrs
iret
dec
push
xchg
in
sbb
test
jl
pusha
aaa
test
add
fwait
xchg
pop
or
call
pushf
int
jns
in
mov
xchg
stc
lahf
inc
mov
into
fs
and
jge
fidivs
push
out
push
aam
mov
jb
jge
cs
xchg
or
or
std
sbb
and
inc
ljmp
fcomps
xor
xchg
jle
mov
cmp
inc
lahf
cmpl
adc
mov
push
subb
popa
icebp
sub
mov
insl
inc
add
fdivl
xchg
test
sub
andb
fistpl
mov
jge
pushf
in
sti
inc
inc
loop
test
dec
sbb
xchg
mov
jmp
fistpl
or
sbb
pop
hlt
loope
fstpt
adc
sarl
div
xchg
testb
dec
icebp
shlb
inc
jle
pop
add
dec
enter
push
test
call
in
mov
std
mov
push
repnz
add
dec
xchg
xorb
mov
std
aaa
sbb
push
imul
jmp
test
cmc
mov
sbb
popa
mov
lahf
pushf
loope
in
jp
jmp
xor
or
sbb
fsub
mov
xchg
mov
in
dec
xor
lahf
fsubrs
fiadds
test
or
fdivs
aam
sahf
adc
test
cmp
jg
jnp
movsl
and
cmp
ss
cmp
mov
in
mov
mov
fldt
add
mov
hlt
not
and
sub
cwtl
xor
pop
sub
aas
pop
lcall
xchg
insb
jb
gs
mov
inc
loop
mov
xchg
add
or
dec
int3
xchg
lods
fdivp
in
popa
or
iret
cli
lret
es
or
stc
lods
call
add
hlt
pop
pop
push
stc
movsl
fnsave
dec
in
dec
scas
jb
gs
jno
aam
lock
xchg
sub
jbe
adc
sbb
mov
mov
scas
mov
clc
lea
dec
mov
sub
cmpsl
xor
aaa
iret
cmp
into
pop
imul
dec
loope
or
or
ret
cmp
call
add
es
sarb
pop
lret
cmpsb
cmpsl
ss
cmp
fsubs
call
test
mov
inc
pop
jge
push
cmp
cmc
inc
sbb
sti
imulb
push
or
mov
sub
mov
xchg
fcomps
test
ss
sbb
fstpl
repz
pop
out
dec
shl
adc
mov
mov
sub
add
stos
xor
inc
lods
insl
inc
pop
add
sub
jo
pop
cmp
cmp
addr16
push
ljmp
cld
xadd
stos
lds
pushf
shl
outsl
jns
mov
hlt
pop
jecxz
icebp
cltd
ljmp
sbb
cmp
sub
cmp
fmuls
mov
popf
adc
pop
or
xor
loope
mov
mov
pop
dec
xlat
pop
adc
mov
mov
push
clc
arpl
in
faddl
mov
pusha
insb
scas
xchg
pop
pop
pop
imul
loopne
or
cmp
fwait
cs
pop
gs
fidivl
push
add
mov
inc
daa
aad
pop
xor
and
xorl
mov
cmp
aam
roll
xlat
cmp
cwtl
pop
lods
sahf
out
sub
ja
adc
scas
ja
jge
les
bnd
lret
lods
ljmp
repz
xchg
pop
xor
sti
adc
imull
xor
add
dec
dec
jp
pop
mov
cld
inc
add
xor
inc
xor
mov
xchg
adc
push
or
shl
sub
lock
test
les
dec
mov
pop
xor
push
xor
repnz
jae
insb
jae
div
les
cmpsl
pushf
mov
pop
cmpsl
mov
lret
ljmp
fisubl
iret
leave
out
lock
fucomi
popf
sbb
and
xor
adc
push
in
insb
fldt
xchg
adc
jo
xor
jle
cmc
push
lcall
xor
call
pop
sub
aas
inc
mov
jp
pop
jne
push
scas
or
js
stos
or
mov
xchg
mov
ja
arpl
xor
cmp
sbb
stos
xchg
adc
add
sub
xor
and
hlt
push
lret
nop
mov
out
jnp
icebp
out
sbb
lfs
std
popf
adc
or
test
cs
je
lcall
adc
es
out
mov
cmpsb
leave
iret
cmp
into
fwait
sub
jl
adc
fwait
rolb
cmpsb
mov
mov
into
mov
mov
push
into
fcompl
loopne
ljmp
cmp
mov
pop
add
jbe
sub
cli
arpl
pusha
imul
rorb
push
mov
mov
std
mov
sahf
inc
xor
jnp
adc
insl
or
int3
ja
xor
test
shlb
iret
sub
sbb
mov
iret
adc
mov
fucomi
push
xor
mov
xchg
fcmovne
lds
ret
adc
stos
lock
mov
mov
push
mov
fdivp
or
cmp
jp
fimull
pop
inc
data16
push
clc
adcl
push
sar
mov
push
add
mov
aad
mov
dec
jns
fwait
test
pop
jmp
push
mov
cmp
cltd
and
lcall
stos
inc
fbld
nop
xchg
dec
pusha
adc
mov
push
dec
jmp
movsb
or
dec
xchg
shrl
xchg
adc
mov
fisubrs
movsl
jl
sbb
and
repz
push
stc
sbb
pop
dec
shlb
lret
ror
leave
fs
sti
push
push
nop
repnz
pusha
popf
push
in
adc
fwait
cmc
outsl
mov
cltd
xchg
lahf
bound
dec
adc
inc
fdivl
jmp
or
push
push
adcb
cmpsb
aaa
pop
jle
movsl
mov
out
popa
divl
adc
in
imul
shl
mov
lahf
hlt
fcoml
cli
mov
pop
add
bound
add
cld
notb
jne
rclb
mov
sub
mov
sbb
int3
mov
inc
push
xchg
mov
test
jge
std
xchg
pop
loope
dec
test
push
and
xchg
pop
mov
jl
pop
jmp
cwtl
xchg
dec
test
mov
fiadds
and
and
push
movsb
scas
cmp
fcmovb
aaa
jne
mov
ljmp
pop
leave
insb
aaa
loop
daa
loope
adc
jae
vpcmpgtd
push
pop
movsb
ljmp
addr16
mov
les
dec
xor
lret
push
mov
hlt
inc
fcoml
cmpsb
inc
aam
fimull
jae
cmp
push
push
xor
jo
mov
push
imul
fldenv
mov
lds
mov
xchg
sahf
into
in
inc
push
decb
xlat
mov
push
jo
in
push
add
in
sarb
jo
popf
imul
and
aas
sbb
movsb
test
and
inc
mov
imul
fsubl
ficoml
stc
test
test
shrb
shl
mov
sbb
xor
jmp
or
mov
pushf
popf
daa
repnz
lods
mov
out
pop
test
mov
pop
dec
into
mov
jb
inc
mov
fsubrl
pop
ret
xchg
test
mov
xchg
pop
std
sbb
push
shll
pop
pusha
push
fnstsw
cmp
pusha
jl
pushf
add
mov
shlb
rcll
dec
stc
xchg
adcb
mov
dec
xchg
lahf
cs
and
ss
mov
imul
lds
pop
inc
lret
jle
loope
cmpsl
push
popa
cwtl
les
jnp
sbb
out
lret
lret
hlt
rdmsr
sub
adc
xor
push
jecxz
jno
leave
pusha
mov
xor
mov
pop
mov
shrb
and
test
aas
and
push
lret
add
mov
cmp
shrb
lret
int
ret
add
daa
jnp
fidivs
pop
mov
cld
push
add
dec
rorl
push
add
pushf
das
lods
push
cmp
sub
dec
aaa
pop
jbe
fwait
lea
or
movd
add
jecxz
push
std
xchg
push
or
test
jb
xor
mov
mov
and
jmp
rcll
shl
add
sar
mov
jge
jb
aas
lock
jb,pn
clc
dec
inc
add
stc
pop
mov
jle
jmp
or
mov
mov
adc
ja
ret
jmp
cmp
lock
leave
or
fidivl
mov
out
stos
cmp
jb
adc
jnp
and
out
lds
pop
pop
xor
push
add
nop
add
mov
ficoml
xor
push
sbb
or
stos
or
sbb
cs
faddl
fisttpl
lea
aad
ja
faddl
add
xchg
sub
jge
lret
and
scas
push
xchg
test
test
cli
adc
inc
cld
mov
loopne
mov
xchg
outsl
cmp
adc
mov
aaa
lds
xor
into
push
push
cmpb
orl
aad
and
loop
jp
add
mov
ss
jnp
xchg
fsubr
xchg
push
pop
or
fwait
push
xor
jnp
mov
popf
aas
push
mov
in
or
cwtl
flds
js
test
cs
xlat
sub
cmp
and
mov
cs
clc
ds
rcll
sbb
lret
add
pop
lea
shlb
cltd
mov
push
or
xchg
sub
pop
xchg
jno
or
mov
mov
mov
in
or
sar
stos
sbb
cmp
xchg
sbb
jg
push
imul
xchg
cmp
jecxz
fs
adc
cmp
add
or
xor
pushw
mov
push
dec
push
out
rol
pop
ffree
dec
cmc
sti
pop
hlt
or
sbb
clflush
pop
mov
imul
cmp
push
mov
jg
pop
sarl
hlt
test
mov
std
mov
cmp
cmp
int
mov
push
mov
and
mov
out
imul
nop
fwait
fwait
add
lret
jo
push
stc
push
xor
cmp
pop
xor
jns
cwtl
xchg
cmp
jmp
addl
adcb
xchg
jge
fisubrl
int3
jle
leave
jecxz
int3
inc
adc
cld
lea
outsl
mov
push
cld
fcoml
sarl
cltd
in
dec
xchg
sub
and
repnz
pop
add
jo
pop
lds
dec
mov
xchg
aad
jae
inc
sub
inc
push
jae
inc
xchg
enter
stos
dec
orb
mov
add
mov
push
in
nop
dec
inc
cmp
xchg
aad
adc
xchg
pop
xor
ficoml
addr16
add
bound
mov
adc
mov
push
mov
jno
test
mov
repz
mov
ret
jecxz
stc
stc
leave
repnz
jno
push
sbb
fdivr
or
popa
call
push
xchg
adc
lods
out
inc
pop
pop
mov
push
lods
xchg
inc
pop
cltd
shrb
and
or
pushf
cmp
mov
jnp
cltd
jae
dec
js
push
mov
pop
lea
test
clc
mov
fsubr
sbb
outsl
cltd
sub
test
pop
jecxz
inc
adc
inc
add
das
loope
dec
scas
lahf
xor
test
push
sbb
jle
into
or
int3
jmp
arpl
cmp
pop
xchg
sbb
arpl
xchg
dec
rcrl
icebp
push
inc
inc
test
mov
insb
mov
sbb
mov
cmpsb
mov
je
lret
frstor
jge
push
add
pop
int3
xlat
xor
lahf
shlb
jle
test
clc
in
adc
mov
notb
mov
in
push
xor
push
add
push
je
fmull
fnstcw
dec
imul
dec
test
cmp
insl
js
inc
push
or
dec
mov
adc
xor
loope
fisttps
mov
pop
test
mov
mov
pushl
push
jae
cmc
ret
push
adc
xor
sub
lods
mov
cmp
jae
fadds
mov
adc
test
sub
adc
mov
sbb
mov
aad
or
inc
arpl
movsb
jp
testl
mov
jmp
clc
mov
cmp
jmp
adc
mov
pop
cmp
mov
and
in
inc
pop
das
repnz
jmp
shll
lret
lcall
fdivr
xor
cltd
repz
cmc
or
jae
scas
scas
int
mov
mov
jecxz
gs
loope
ljmp
xor
cmp
rorb
pop
mov
fidivrl
sub
clc
fidivrl
loope
mov
push
sub
xlat
push
sti
iret
mov
pop
ret
addr16
fstpl
roll
add
dec
cld
fimull
pop
arpl
fcmovb
jmp
pop
xchg
pop
jge
test
cmpsb
sbb
xchg
aam
mov
xor
dec
push
lock
mov
lock
xor
pop
xor
xchg
enter
cs
mov
dec
fstpl
testb
pop
popa
or
pop
add
inc
xor
mov
xchg
aaa
cs
and
adc
aaa
in
shl
fs
lods
outsl
push
mov
in
jl
repz
shlb
sahf
add
aaa
mov
das
in
js
orl
cmp
lea
mov
pop
and
cmpsl
push
add
cmp
mov
cs
push
or
popf
mov
nop
xor
push
pop
cmpl
cs
incl
adcl
into
mov
push
mov
mov
lret
imul
idivb
lods
les
pop
shll
dec
and
adcb
lcall
std
icebp
push
por
adc
add
mov
pop
or
xor
ret
pop
cld
xchg
push
cmp
jle
sti
jmp
sub
jp
addr16
dec
call
push
pop
pop
out
popf
sbb
jecxz
add
dec
cs
daa
or
shlb
mov
cmpsl
or
inc
sub
add
loop
mov
fs
cmp
push
movsb
adc
stc
add
push
pop
add
imul
jbe
addr16
jmp
imul
loope
rcrl
das
dec
cmp
cmp
fs
ficoml
cmc
or
sti
stc
int
je
adcl
in
mov
or
inc
adc
mov
xchg
push
stc
mov
in
sbb
jecxz
sub
stos
stc
xchg
mov
fidivrl
xchg
mov
pop
aad
shr
outsl
cmc
push
lret
xchg
dec
pushf
rcrl
mov
addr16
push
jae
cmp
leave
and
xchg
frstor
mov
das
gs
pop
jmp
adc
add
jo
add
inc
cmp
addl
xor
stos
movsb
sarl
inc
roll
test
lahf
stos
rclb
fmulp
mov
xchg
into
and
mov
pop
sbb
pop
rorb
stc
mov
mov
pop
lcall
adc
pushf
xchg
mov
loopne
mov
icebp
lahf
push
and
dec
je
xchg
in
ret
dec
sbb
test
or
add
inc
xchg
cmc
jl
inc
imul
mov
arpl
addr16
stos
jp
or
cmp
mov
ret
sbb
or
dec
add
lds
cmp
dec
push
daa
xchg
cmp
sub
movsl
mov
aas
sub
lret
dec
scas
mov
divb
popf
aam
sub
or
mov
sub
inc
jnp
cs
push
sbb
hlt
scas
sub
ret
and
pop
inc
orb
xor
scas
mov
or
add
cmp
repz
xor
call
and
ret
jae
iret
dec
fwait
dec
mov
out
inc
dec
lock
std
mov
movsl
cmp
push
lret
movsl
sbb
les
cmp
jnp
loop
inc
cld
inc
mov
xchg
push
psubq
inc
push
push
pop
scas
push
gs
cmc
cmpsl
sbb
cltd
call
aas
mov
mov
pop
je
cli
adc
dec
mov
xchg
lcall
lret
jbe
adc
add
push
in
add
aam
adc
jg
test
jae
popa
cmp
or
lret
fsubrl
lock
rclb
jecxz
pop
ds
pop
cwtl
bound
sbbl
ja
cmp
adc
sub
fiaddl
outsb
mov
inc
or
sbbb
xchg
push
in
outsb
push
adcl
les
sub
mov
sub
imulb
lods
or
push
cmpsl
cli
mov
inc
cmp
mov
repz
ficomps
testl
sbb
mov
movsb
add
mov
imul
cwtl
ficoml
clc
dec
mov
xchg
pop
outsb
fcmovbe
xchg
adc
or
mov
loope
jbe
xor
insl
lea
inc
loopne
int3
test
jecxz
xchg
stos
dec
and
les
pop
cld
addr16
sti
into
jle
xor
inc
jecxz
sub
arpl
lea
jne
sahf
sti
mov
arpl
mov
cmp
loop
pop
ficoms
das
sub
out
and
jecxz
push
scas
aad
and
imull
sahf
mov
cmpsb
and
es
push
imul
xchg
cmc
mov
test
fwait
js
push
fstpl
xorb
std
dec
scas
adc
xchg
add
cwtl
stos
mov
sbb
sti
cmp
inc
mov
shr
pushf
cmc
lahf
fs
repnz
mov
push
mov
jnp
fdivrl
jmp
push
cmpsl
adc
lods
lods
adc
icebp
clc
stc
cmc
mov
scas
jp
rolb
mov
sub
arpl
and
mov
dec
aaa
inc
mov
xchg
test
cmc
xor
les
xchg
mov
repz
adc
jb
mov
imul
in
cmp
aad
inc
sbb
sbb
scas
jae
je
xor
arpl
pop
add
mov
mov
or
test
and
cmp
add
fsts
ja
push
dec
shll
leave
cltd
sahf
adc
lods
add
inc
dec
dec
outsl
cmp
push
mov
and
add
jb
int3
push
fmulp
adc
push
mov
sub
sbb
mov
mov
sbb
mov
popa
jl
lods
or
or
subl
mov
push
cmp
xchg
cld
pop
dec
xlat
lret
mov
stos
pop
adc
leave
subl
pop
jno
pusha
mov
addr16
lds
xchg
ljmp
cmpsl
in
faddl
sub
insl
adc
cmp
xchg
inc
mov
clc
jp
repnz
dec
inc
push
nop
inc
xchg
call
inc
xlat
or
mov
repz
mov
shlb
call
dec
mov
pushf
xchg
cmp
pop
or
push
movsl
lods
xchg
js
cltd
inc
pusha
mov
mov
xor
cmpsl
cmp
mov
or
mov
loope
add
movsb
out
mov
push
and
mov
dec
mov
xchg
scas
xor
test
jl
xchg
xor
popf
std
mov
adcb
cmc
and
lds
cmp
or
add
cld
aam
mov
mov
adc
pusha
and
cmp
imul
cmp
icebp
adc
push
sbb
cmp
xor
mov
pop
sub
ja
dec
jecxz
insl
sub
push
inc
xor
cmp
lahf
jp
pusha
jp
call
repz
cmpsl
in
es
add
inc
pop
clc
adc
fmulp
or
aas
lret
push
cld
mov
push
push
add
inc
xchg
pop
push
or
xor
inc
aad
fsubp
push
int
and
pop
rolb
sti
mov
hlt
inc
movsb
imul
fcmovne
insb
mov
sub
pminsw
or
rcr
popf
inc
cmc
lds
add
xor
into
xor
out
or
fildl
lds
cmpsl
jle
fwait
pop
jne
fcmovb
sbb
icebp
sub
ret
inc
cwtl
dec
int3
loop
imulb
cmpsb
bound
mov
sbb
mov
stos
add
out
lahf
add
adc
xor
lcall
hlt
add
push
mov
sbb
cmp
push
daa
fwait
scas
scas
ds
dec
loop
pop
dec
aaa
mov
pop
imul
jno
xor
pushf
jb
popf
xor
sbb
out
data16
xchg
out
add
in
xchg
adc
repz
clc
and
fisubl
xchg
or
pop
dec
es
imul
jbe
lret
cmc
xchg
adc
mov
mov
inc
fbld
mov
je
ret
jl
int3
cs
cs
cmp
jno
je
xchg
ret
cmp
cmpb
lret
in
cmp
mov
or
repz
cmpsl
mov
stos
mov
xchg
jo
cmp
int3
mov
loope
out
cmpsb
insb
jmp
iret
and
jnp
out
push
xchg
xor
lcall
cltd
mov
test
push
pop
xchg
movsl
ffree
pusha
or
push
jecxz
inc
pushf
rcl
cli
out
jl
rolb
pusha
jnp
bound
and
lods
sub
out
pop
out
mov
push
jg
push
mov
jg
mov
jmp
repz
pop
jb
push
adc
lock
das
addb
pop
push
fnstcw
add
adc
sub
mov
sub
jp
imul
repz
jb
push
rcrb
sbb
jecxz
sbb
pop
sahf
cmp
and
pop
insl
mov
dec
mov
mov
test
movsl
sub
cmp
xchg
sub
test
in
add
jnp
pop
into
out
lahf
movsl
fs
mov
cs
lds
sahf
fs
aaa
push
into
scas
xchg
xor
mov
adc
cs
andl
dec
daa
das
scas
fcmovne
jp
and
inc
push
lds
adc
pushf
mov
in
idivb
mov
add
mov
mov
dec
ljmp
push
dec
adc
js
int3
lret
sarb
mov
out
int
pop
push
pop
push
aam
rclb
mov
mov
push
sarb
cltd
push
sbb
jmp
scas
xchg
in
jae
das
popf
movsb
mov
test
jno
jle
and
lods
pop
shrb
jno
bound
sbb
xchg
push
xlat
cwtl
mov
cltd
cwtl
aas
adc
sbb
mov
pop
hlt
dec
or
int3
cmp
imul
and
pop
mov
mov
mov
leave
mov
shlb
inc
inc
ret
fcmovnu
adc
mov
sbb
inc
ds
pop
or
push
rcrb
adc
inc
push
or
and
loope
daa
and
inc
or
movsb
mov
insb
vmovaps
push
mov
scas
add
push
in
mov
jns
mov
add
es
in
popa
das
mov
add
mov
and
int3
pop
jno
aas
add
and
jae
je
fisubl
frstor
mov
lret
mov
lds
mov
add
loopne
and
add
or
xor
js
icebp
pop
aad
inc
das
mull
mov
and
ret
jb
imul
hlt
sbb
push
fcomps
lcall
in
xchg
dec
dec
sub
dec
ss
pop
mov
add
out
xchg
stc
rol
pop
daa
mov
or
cmc
insl
pop
dec
out
repnz
mov
sarl
xorb
hlt
pop
ss
dec
jecxz
add
mov
xchg
ret
int
lret
jne
out
test
repnz
std
fbstp
mov
cmc
xchg
xchg
mov
mov
inc
pop
ds
pop
xchg
xor
test
xchg
cld
cld
xchg
and
addr16
pop
shlb
fdivrl
mov
test
add
add
lret
les
aad
nop
sbb
push
testl
push
outsb
and
push
jle
ror
push
out
sbb
xor
push
test
mov
push
insl
xor
fdivs
stos
cld
popa
jge
fstl
sub
mov
pop
jb
dec
mov
dec
push
pop
mov
push
jne
lret
xor
outsb
insl
pop
or
xor
add
or
xchg
icebp
mov
or
mov
stc
or
add
push
jb
xchg
and
push
lods
mov
jo
fdivrs
lcall
push
pop
push
sub
jae
jne
movsb
je
mov
sti
movsl
stc
stc
enter
cmpsb
jne
mov
ficomps
lods
sahf
sub
push
mov
scas
xchg
in
xor
or
inc
or
pop
add
test
scas
int3
mov
mov
or
push
xor
jns
mov
incl
jmp
lret
and
cmp
leave
cmp
jb
jge
jns
bound
and
or
leave
or
daa
lret
fadd
loopne
pop
dec
mov
and
mov
mov
jno
xchg
cld
pushw
xor
fwait
scas
into
scas
dec
aas
mov
ficoms
inc
sub
fmuls
sub
test
pop
dec
shrl
jne
jmp
and
popa
imul
out
in
inc
jp
ror
fidivrs
lods
insb
cmpsb
icebp
out
add
lret
repnz
cwtl
sub
cmp
pop
leave
push
pop
imul
or
sbb
sbbl
push
imul
fcom
imul
mov
dec
or
les
push
icebp
lods
stos
mov
xor
aaa
inc
xchg
ss
outsb
gs
cwtl
sbb
mov
adc
fisttpll
in
and
lods
mulb
pusha
lock
xor
loope
jnp
mov
jae
inc
in
sub
test
ss
jg
mov
aaa
xchg
fcmovnbe
mov
mulb
lahf
js
cmp
imul
nop
mov
pushf
cmp
imul
pop
xor
loop
xchg
mov
and
push
jo
and
nop
outsb
inc
mov
mov
jmp
enter
pop
jle
mov
mov
dec
push
add
sub
xchg
xchg
dec
mov
push
faddp
jmp
insb
pusha
dec
mov
rol
dec
movsb
push
ljmp
fcoml
sub
nop
fisubrs
shl
mov
push
jecxz
cmpsb
adc
shl
and
cmp
xchg
xor
mov
fsubs
into
insb
xor
test
aam
or
mov
mov
sahf
lret
into
add
gs
jmp
cmp
fnstcw
and
out
and
mov
adc
jmp
mov
xchg
push
dec
jbe
clc
xor
pop
jo
mov
arpl
push
popa
mov
icebp
mov
mov
sar
aam
adc
orb
push
sbb
fidivrl
cmp
push
stos
in
cmp
xorb
loop
out
lret
or
inc
or
mov
mov
stc
insb
test
lds
outsl
outsl
test
icebp
dec
push
xchg
test
out
bound
and
out
inc
in
jb
dec
negl
out
mov
sub
push
mov
adc
xor
cmp
and
sbb
push
jmp
xchg
and
cmpsl
bnd
inc
fs
cmp
stc
lea
adc
pop
fwait
xchg
xor
xchg
xchg
ficoms
outsl
call
nopl
xlat
loope
and
sbb
push
jnp
into
adc
push
scas
pop
jne
xchg
lods
xor
lea
push
cmp
incl
mov
cmc
cwtl
std
adc
rorb
cs
mov
jmp
cmp
out
loop
cmpb
enter
xor
add
aam
outsl
dec
repz
leave
mov
push
xor
pop
mov
push
clc
inc
xlat
ret
sbb
adc
xchg
xchg
lcall
ficoml
push
enter
sub
sbb
aad
sbb
lea
test
inc
daa
rcll
repnz
ljmp
mov
jne
sub
sar
pop
mov
push
cmp
or
dec
aaa
fs
dec
adcl
adc
negb
pop
fists
fsubrs
bound
adc
js
sub
dec
std
jmp
sub
xchg
push
jb
ljmp
fistpll
xor
xchg
sbb
mov
fisubrl
int
and
in
mov
test
lods
or
ds
pop
jge
sbb
insl
lcall
jle
cmp
push
lds
push
cmp
and
pop
mov
outsb
in
cli
inc
mov
jo
pushf
movsl
add
pop
cmp
xchg
cmp
xchg
mov
stc
xchg
cmp
loope
xor
add
mov
jp
std
loope
inc
mov
pop
add
adc
jp
sti
loopne
pop
sbb
xor
inc
leave
notb
in
out
jecxz
mov
sub
push
adc
jg
andb
push
jb
loopne
xchg
or
mov
negb
jnp
jg
or
xchg
pop
stos
nop
jle
in
fcmovnb
rolb
mov
andb
je
mov
jno
xlat
ss
mov
js
test
jl
sbb
out
outsl
xchg
or
add
and
enter
insb
test
movl
xor
jmp
pop
xchg
loop
inc
jl
sub
sbb
adc
fisttpl
dec
pop
add
xchg
cmpsl
aaa
jp
xchg
jp
xchg
fdivs
mov
lock
cwtl
mov
insb
mov
loopne
mov
dec
icebp
jge
xchg
ja
push
into
cmp
test
insb
in
movb
cltd
adc
adc
jl
mov
sarl
imul
xchg
das
adc
xor
inc
cmp
aaa
mov
xchg
je
pushf
adc
inc
xor
xchg
int3
or
je
stos
imul
jg
shr
and
add
ja
nop
fcomi
jnp
fldl
push
ret
pusha
insl
push
jae
dec
sub
insb
jns
pop
insl
xchg
shrb
xchg
or
data16
sbb
sahf
fistpll
mov
sub
xlat
mov
into
pop
testb
dec
jge
pusha
sub
icebp
js
outsl
push
imul
stos
sub
push
stos
cmc
lahf
mov
xorl
out
sub
cwtl
popf
push
fs
pop
shrl
loop
mov
xchg
adc
sub
pop
adc
faddl
sub
shrl
cli
pop
lods
push
fsubs
cli
fsubs
adc
ss
add
cmpl
out
mov
cmpsb
aaa
xor
cs
pop
mov
push
xchg
or
int3
cmp
fisubl
mov
jp
cmpsb
int3
pop
inc
cmc
bound
pop
in
and
pop
out
or
jbe
cli
mov
scas
or
push
dec
and
rolb
mov
hlt
mov
dec
cli
scas
cmc
stc
mov
shrl
mov
stc
sbb
xchg
sub
adc
push
pop
and
cmp
add
nop
sub
das
sub
lret
in
cmp
lds
or
lock
movq
mov
jge
mov
inc
mov
test
push
jp
cmp
fnstenv
int3
sbb
pop
sahf
xchg
adc
mov
aad
ds
cmpl
dec
rcrb
popa
pop
aad
cs
mov
mov
rcrb
out
mov
mov
imul
out
or
sbb
push
lods
push
and
jo
mov
dec
and
popa
sbb
xchg
xchg
movsb
rclb
popa
lret
int
test
xor
xchg
and
inc
xchg
dec
and
mov
ficoms
mov
data16
inc
jns
fwait
stc
stc
and
push
jae
cmp
inc
or
mov
jl
jp
sub
or
lods
popf
adc
xchg
mov
jge
xchg
lcall
repz
popf
mov
movsb
xor
add
fcoms
cmp
dec
cmpsb
insb
push
mov
mov
movsl
jae
mov
cmp
mov
jmp
xchg
cltd
aas
dec
mov
cmp
mov
mov
dec
inc
mov
push
mov
popa
inc
pop
and
mov
andb
and
jne
cmpsb
xlat
sub
pushf
mov
add
pop
add
testb
xchg
add
repnz
cmp
push
fsubl
cmovne
jmp
xor
inc
sarl
xchg
call
test
adc
gs
mov
sub
push
pop
jecxz
push
sub
push
cmpsl
lds
pop
loope
cwtl
icebp
sti
push
xchg
pop
mov
xorl
lcall
xor
in
jmp
enter
xor
mov
or
xor
cmp
lds
inc
push
cmp
in
cld
dec
into
cmp
push
lock
dec
xor
in
mov
jle
icebp
jl
clc
fisttpll
mov
insl
sbb
cmp
jge
into
pop
stos
sar
jb
push
cmp
call
sahf
or
xor
pop
movsl
xchg
cmp
add
mov
jne
fsub
push
repnz
pop
pop
std
xchg
pop
mov
js
mov
xchg
xchg
int
dec
mov
cmp
fiadds
stos
insl
pusha
mov
mov
jecxz
fcom
jo
test
and
divl
arpl
orb
cmp
cmc
arpl
jg
inc
insl
lret
cmpsl
in
sub
fstps
mov
adc
push
and
insl
sub
mov
or
jae
mov
clc
cmp
std
lods
es
int
outsb
jno
daa
xchg
ss
jge
xor
mov
jge
mov
jo
push
roll
ljmp
rolb
xchg
addr16
push
sub
xor
inc
sbb
jo
adc
clc
ret
lds
repz
jmp
mov
into
add
jecxz
daa
out
xchg
pop
out
jecxz
or
cmp
cmp
cwtl
pop
xor
in
stos
int3
daa
lahf
lods
xchg
inc
repnz
cmp
dec
mov
or
movsl
in
or
aam
sarl
pop
dec
jae
xchg
fnstenv
call
rcl
sub
movsb
add
jmp
push
loope
cmc
dec
outsb
sbb
mov
xchg
or
out
dec
pop
in
push
pop
enter
inc
sbb
fistl
mov
push
pop
push
cmp
add
sbb
pop
pop
jnp
out
inc
dec
inc
push
xchg
xchg
lret
cltd
push
jmp
loope
popa
dec
rclb
mov
push
lcall
xor
repnz
repnz
cltd
xchg
cmp
in
sbb
gs
mov
inc
leave
ljmp
push
xchg
outsb
enter
adc
add
xchg
jp
arpl
test
pop
imul
and
inc
leave
andb
imul
lahf
setb
iret
fistpl
jo
sub
inc
xorl
xchg
lret
icebp
cmp
enter
add
mov
es
mov
sahf
sahf
add
xchg
cmp
push
cli
adc
adc
inc
xchg
adcb
cmp
jg
xor
push
stos
xor
dec
mov
aas
and
xor
scas
jno
mov
lret
cmp
in
xor
fucomi
call
iret
or
dec
insl
icebp
cmc
jo
push
push
mov
popa
decb
jmp
adc
inc
popf
jecxz
mov
aas
fwait
dec
dec
les
aad
icebp
fwait
inc
cwtl
movsb
sbb
push
addr16
test
insb
adc
test
dec
jl
cmpsl
mov
push
jbe
jecxz
and
jae
sub
ret
or
pusha
jo
ret
imul
lods
imul
xchg
sub
insl
scas
dec
cmp
ljmp
sarl
adc
lds
inc
pop
jp
fstl
icebp
int3
inc
xlat
and
jbe
jle
cli
ss
mov
adc
and
push
leave
mov
pop
mov
adcb
repz
addb
push
dec
jp
jno
int3
inc
sbb
fs
fidivs
sbb
andb
rol
pusha
adc
movsb
aam
and
mov
es
cs
shl
rclb
or
adc
cmc
cli
pop
enter
dec
mov
rolb
sbb
addr16
fst
inc
inc
dec
pop
pop
mov
pop
pop
adc
rclb
inc
jg
fs
jecxz
orl
jge
mov
sub
and
cwtl
mov
fildl
jo
pop
fcoml
mov
xchg
test
clc
shr
lods
inc
sbb
loopne
lret
pushf
cmpb
adcl
and
decb
push
mov
std
add
loop
push
andl
and
pop
jge
jg
cmc
in
dec
pop
shlb
mov
sbb
push
stc
test
pop
mov
adcl
jg
pop
mov
jno
sub
outsb
jmp
mov
mov
fdivs
cld
jmp
add
inc
mov
adc
js
lret
scas
and
jmp
adc
sti
in
je
dec
xor
leave
mov
ret
jbe
xchg
or
dec
cmpsl
std
xor
rorb
idivl
xor
lret
push
in
das
pop
mov
and
sub
xchg
fnstsw
fiadds
ss
jnp
andl
scas
std
mov
xor
testb
push
adc
testb
xor
jno
add
adc
lahf
pop
jg
mov
cmp
iret
pop
daa
xor
add
dec
add
jns
movsl
xor
movsl
or
push
addb
out
and
fidivrl
mov
xlat
mov
lea
jne
add
dec
adc
ja
sbb
pop
hlt
loop
mov
inc
push
jo
or
push
jne
jmp
mov
push
jecxz
lods
mov
js
sahf
lods
or
pop
push
and
or
sub
jno
in
sti
lahf
add
push
insl
or
into
cmp
xor
stc
js
dec
nop
sti
push
push
jbe
xchg
rolb
test
es
or
push
push
das
and
inc
push
xor
bound
loop
adc
pop
jno
jecxz
iret
ret
jmp
hlt
loopne
cmpsb
out
or
les
aas
lock
push
aam
aam
mov
std
jg
aaa
jmp
push
imul
and
iret
cmc
into
mov
clc
jg
and
test
rcrb
push
push
sbb
push
sub
lret
sahf
push
sti
dec
xchg
sbb
sub
aad
xor
test
xor
int3
mov
push
aad
dec
xchg
iret
cwtl
xlat
pushf
out
js
cmp
jb
movsl
faddl
gs
ret
je
sbb
addps
or
xchg
pop
test
call
loop
sbb
and
or
dec
pop
sbb
pop
push
dec
lods
es
or
and
jg
test
shr
push
out
push
adc
jmp
sbb
cmp
push
popf
push
add
inc
inc
into
loopne
mov
lcall
lds
xor
xchg
push
fbld
jns
xor
icebp
push
mov
xchg
iret
mov
adc
nop
adc
test
mov
dec
lods
bound
adc
rcrb
das
push
fwait
adc
and
push
adc
mov
js
jne
loop
jl
movsb
jg
loope
mov
push
popf
xor
sub
inc
insl
shl
jg
dec
dec
lods
pop
std
outsl
aaa
cld
pop
pop
or
insb
xor
inc
enter
push
push
jp
or
sbb
push
and
pop
xchg
ret
inc
das
adc
dec
pop
or
outsb
xchg
daa
js
sbb
adc
mov
jl
lcall
sub
jmp
jbe
jnp
sub
xor
sbb
mov
test
sbbb
mov
int3
inc
pushf
or
xchg
daa
loop
sub
cmp
dec
shr
loope
lret
repz
testl
push
gs
cltd
decb
arpl
stc
test
scas
sub
popa
xor
dec
inc
fcmovne
ret
push
out
int
cmp
loope
push
sub
dec
push
and
push
or
dec
lea
lcall
cmp
popf
mov
ja
cmovae
pop
mov
sub
out
gs
pushf
call
sub
push
int3
jmp
cmpsl
sar
insl
jae
stos
sub
cmp
jp
imul
imul
fwait
stos
pop
push
dec
daa
std
add
pop
daa
bound
out
fdivrl
dec
popa
outsb
lret
add
push
hlt
push
mulb
arpl
fisubs
fstpl
sub
xor
xor
lods
lret
xor
mov
and
out
mov
out
ret
lds
test
add
popf
adc
mov
enter
cmp
mov
push
pop
fidivs
jecxz
sahf
arpl
repz
push
push
add
aas
jg
lcall
adc
lahf
lret
and
insl
pop
fsts
mov
js
mov
iret
jmp
mov
push
cmpsb
cmp
push
into
ss
jae
fs
pop
movsb
pop
mov
cmp
gs
popl
and
nop
jb
dec
lods
fcmovnu
inc
movsl
iret
repz
xchg
mov
out
out
or
jle
das
pop
js
jno
jnp
cltd
pop
xchg
xchg
rcll
sub
xor
pop
cmpsw
ror
xor
testb
in
les
dec
into
leave
mov
and
ret
dec
arpl
es
insb
push
xchg
xchg
es
bound
cmp
stc
mov
cli
lods
clc
mov
pop
outsb
cmpsb
insb
ja
mov
add
mov
lret
adc
and
mov
inc
pop
incl
inc
and
insb
and
add
fdivl
movups
ljmp
and
pop
shr
push
je
imul
dec
push
mov
fidivs
fucompp
add
mov
pop
add
lret
xchg
adc
ficomps
gs
or
jg
pop
pop
push
jp
iret
loopne
pushf
jl
mov
or
mov
inc
adc
xor
nop
and
insl
in
shlb
cmpsl
and
xor
jge
lret
inc
cltd
sub
mov
xor
xor
out
imul
inc
iret
in
inc
jmp
push
out
sub
sub
mov
into
mov
in
enter
push
ret
movsl
sub
pushf
sbb
jp
hlt
push
mov
add
mov
mov
add
data16
mov
pop
mov
bound
or
mov
mov
test
push
jge
mov
mov
xchg
hlt
adc
inc
and
dec
sbb
fdiv
into
cmpsb
in
sub
in
test
inc
adc
fmull
xchg
cli
dec
pop
scas
pop
or
pop
xchg
loope
fmull
dec
movl
mov
dec
enter
push
mov
lds
xchg
aas
xor
fdivrs
dec
iret
flds
push
add
mov
in
dec
test
sti
mov
mov
iret
xor
imul
int3
notb
mov
jge
push
fsubs
sbb
and
xchg
int
push
inc
shll
imul
ret
mov
fimull
shll
sar
stc
push
push
fsts
mov
sahf
sub
lock
mov
fldenv
inc
pop
jl
cmc
imul
stc
shlb
pop
lret
orb
fwait
ret
popf
jl
adcb
inc
cmp
arpl
pop
fdiv
inc
adc
dec
sub
rcll
rcl
cwtl
mov
hlt
mov
ds
mov
leave
fs
loop
sbb
stos
dec
fmul
mov
and
mov
in
inc
xchg
adc
ds
movsl
mov
pop
jge
lret
shlb
sub
ljmp
mov
cmpsl
js
cmpsl
add
imul
lahf
sub
pop
cwtl
popf
jle
xor
mov
jp
cwtl
rcr
insb
sarl
hlt
lea
lds
pop
mov
pushl
push
dec
fcoml
imul
sub
push
pop
les
repz
enter
dec
test
adc
addr16
jl
gs
test
in
push
jmp
xor
or
dec
mov
xor
insl
and
fs
cmp
sub
imul
mov
pop
out
aam
cmp
sbb
stc
in
mov
fstps
orb
into
add
jbe
add
mov
in
dec
and
cmp
aas
rclb
mov
popf
call
mov
xor
lret
sub
adc
ljmp
ljmp
push
xchg
push
cmpsl
dec
nop
pop
sub
repnz
insb
lods
sarb
call
cmp
dec
sub
sbb
rcr
mov
mov
fstp
outsb
hlt
add
in
outsl
pop
aaa
mov
push
mov
jbe
push
mov
fscale
or
or
pop
lods
faddp
cmpsl
negb
outsl
cmpsl
stos
fidivrl
add
mov
mov
fldl
dec
movsb
dec
cmp
jo
movsl
gs
add
leave
ja
jmp
outsb
mov
mov
mov
inc
or
repnz
or
cli
xchg
jb
push
insl
cs
addr16
push
mov
cmpsb
hlt
rcrl
dec
ret
cmc
faddp
stc
pop
and
mov
std
lret
jp
mov
stc
or
or
pop
xlat
xor
mov
int3
and
inc
sbb
pop
or
mov
xchg
mov
jne
xchg
add
fildl
mov
movsb
pop
ds
add
fistpll
pop
sub
or
in
outsb
in
mov
and
enter
mov
dec
fwait
std
inc
adc
pop
std
aad
int3
jne
mov
xchg
ja
mov
cmp
leave
icebp
jecxz
mov
sub
xchg
xchg
jb
ljmp
les
ret
stc
jne
test
cli
fcom
cwtl
push
pop
fwait
outsb
cmp
out
adc
jno
push
jne
inc
cs
popl
sbb
mov
inc
jecxz
out
addr16
cmc
outsl
jecxz
push
xchg
lcall
fst
adc
pop
imul
push
add
add
call
mov
adc
xor
dec
imul
inc
mov
minps
push
rep
icebp
add
push
jmp
cmp
jecxz
test
ret
mov
adc
outsl
mov
sub
scas
ljmp
call
push
cli
mov
jns
dec
mov
cmp
mov
sub
rolb
and
mov
shl
aad
sub
rcrl
jne
jmp
loopne
mov
fs
inc
shlb
ja
ret
mov
scas
sbb
inc
push
fldt
cmp
mov
loop
xor
jnp
nop
cmc
insb
jnp
repnz
cld
imul
ds
les
cmpsl
fucom
pop
xlat
xlat
sub
in
in
cwtl
test
shll
xchg
inc
fimull
lcall
out
push
sub
pop
inc
enter
jno
mov
sarl
test
inc
or
clc
pop
inc
sub
jp
mov
ret
outsl
les
daa
cmp
adc
stc
loopne
in
jnp
lods
faddl
or
sub
insl
sbbb
xchg
dec
icebp
sbb
loopne
adc
arpl
pop
sub
cwtl
pop
call
and
mov
outsb
movsb
lods
ffreep
andb
xor
or
lcall
movntq
pminub
cmp
sub
out
cmp
push
add
adc
lock
cmpsl
push
jne
out
add
lock
jns
push
add
das
mov
imul
cmp
cmp
push
aas
jmp
mov
dec
and
adc
int3
lods
sahf
in
jnp
pop
adc
ljmp
insl
pop
mov
jle
jl
xchg
jg
decl
sbb
dec
xor
inc
or
stc
pop
repz
pushw
outsl
loop
push
xchg
and
test
jns
pop
adc
popa
mov
call
lahf
nop
ds
push
xor
add
dec
dec
imull
mov
cmpsb
mov
mov
xchg
imul
fcoml
adc
dec
mulb
adc
imul
fidivrl
xchg
inc
fwait
lds
out
outsl
jecxz
jecxz
sarl
sbb
sub
inc
and
in
push
sti
pop
fistps
scas
push
andl
jnp
mov
scas
xchg
std
add
mov
xchg
lods
ds
mov
jbe
ds
adc
imul
jbe
clc
jae
xchg
aam
scas
fnstsw
and
push
rcll
xor
dec
test
ret
mov
pusha
sub
fst
cmp
decl
push
push
repz
clc
dec
lret
mov
dec
inc
clc
sub
pop
fsubl
aam
mov
xchg
and
mov
mov
pop
adc
sbb
xor
xchg
neg
cwtl
addb
fs
testb
add
fildll
or
mov
add
sti
popa
dec
les
shll
push
out
or
xchg
inc
jg
xor
imul
mov
mov
out
inc
rorb
cmp
mov
push
mov
jp
push
xchg
xchg
cmp
add
push
add
cltd
movsb
imul
out
mov
outsb
push
ret
in
mov
cmpsb
mov
outsb
dec
xor
fidivl
adc
cmp
mov
data16
jb
mov
xchg
orb
call
inc
pop
lods
or
xor
addr16
xlat
xor
mov
mov
mov
jp
dec
and
in
xchg
adc
adc
mov
mov
aas
push
or
pop
popf
jmp
lahf
jmp
pop
insl
out
xor
or
xor
and
sbb
sbb
loopne
in
jnp
or
movsl
push
in
movaps
or
sub
xchg
lret
dec
push
fiaddl
inc
xchg
sbb
add
cld
mov
cmp
int3
xor
ret
cmpsb
pop
arpl
dec
push
push
imul
aam
int3
or
adc
sbb
mov
jns
sarl
mov
or
sbb
pop
addr16
jbe
sub
movsl
jno
xchg
sbb
scas
push
xchg
iret
mov
jnp
cli
test
push
xchg
out
add
stc
push
fwait
sbb
xor
push
into
je
sbb
pop
adc
dec
cmp
dec
mov
fptan
dec
lret
dec
sahf
jne
mov
dec
mov
call
inc
adc
je
arpl
neg
xchg
mov
into
int3
dec
int3
cmp
jbe
sub
and
shlb
xchg
mov
inc
mov
ret
cmpsl
sub
cmp
mov
add
xchg
bound
pushf
mov
jbe
mov
je
hlt
outsl
cmpsb
movl
xor
jns
stos
dec
add
imul
fnstsw
pop
add
mov
hlt
out
scas
repz
sub
or
mov
nop
movsl
jo
sub
inc
ret
sbb
dec
and
inc
cltd
xchg
iret
or
fwait
aam
scas
sarb
push
or
ud1
mov
sub
lea
jl
repz
lahf
xchg
mov
dec
mulb
cwtl
jg
adc
fsubl
xchg
xchg
sahf
inc
mov
movsb
mov
push
loop
xlat
add
mov
aas
or
mov
jbe
cltd
stc
and
in
and
out
shlb
loop
jecxz
mov
mov
push
scas
data16
dec
add
mov
das
xor
movsb
movsl
das
rorb
xchg
fstl
inc
sbb
xor
jo
pusha
mov
lods
das
mov
xor
mov
insb
mov
or
lret
add
dec
lea
and
sub
rclb
lcall
jae
dec
jne
push
fsub
jo
cmc
cli
or
xchg
cwtl
xor
lret
mov
cli
pop
mov
aam
movsl
push
mov
out
mov
inc
test
push
mov
mov
loop
lret
xchg
leave
lea
lcall
add
ja
jge
insl
cltd
inc
shl
jp
lea
fisubl
mov
dec
xchg
and
cmpsl
into
add
cmp
dec
scas
xchg
cmpsl
fmuls
stc
push
inc
hlt
pusha
xchg
mov
mov
push
ss
aad
icebp
subb
and
sarl
test
andl
push
sbb
jno
jge
lea
or
int3
repz
pop
jg
jno
test
jecxz
or
and
jle
nop
jo
sti
dec
ljmp
lods
jae
mov
jbe
xchg
out
add
xchg
lock
dec
sar
mov
mov
jne
xor
sbb
adc
fbstp
inc
mov
jp
repnz
in
mov
adc
jns
cmpsb
push
mov
fstl
inc
mov
dec
aaa
mull
insl
out
xchg
mov
jl
rolb
xor
push
addr16
addl
dec
push
cli
dec
sub
cmp
and
das
addr16
cmpsb
jmp
adc
pop
lods
mov
or
sahf
cmp
pop
dec
mov
cmp
xchg
ficoms
or
add
xor
mov
enter
shr
mov
test
ret
pop
or
xchg
test
imul
sarl
imul
and
jle
pop
mov
repz
push
xor
enter
mov
out
xchg
xor
and
mov
enter
and
xchg
jmp
dec
add
fs
into
xor
mov
cld
sbbl
or
xchg
rolb
inc
leave
mov
int3
pop
dec
sbb
add
mov
cs
sbb
mov
popa
test
daa
add
mov
add
cmc
cmp
mov
push
in
jne
gs
pushl
inc
mov
mov
or
pop
dec
xor
xchg
sbbl
lds
pop
xor
sbb
and
dec
cltd
pop
lods
je
adc
mov
mov
and
aam
pop
sahf
fstpt
mov
pop
dec
or
outsb
mov
outsl
int3
dec
push
or
enter
sbb
std
sbb
cmp
imul
push
adc
add
in
xchg
jnp
out
int
add
adc
pop
aaa
sbb
daa
das
xchg
sub
or
into
aas
pusha
pop
pop
js
adc
das
or
sbb
and
sbb
int
icebp
orl
test
cmp
mov
xchg
or
inc
ds
mov
faddl
mov
inc
outsb
xchg
adc
enter
xchg
das
add
push
or
sbb
xor
inc
pop
cmp
push
and
sub
sbb
in
clc
push
cltd
cmp
mov
int
fstl
in
push
or
lods
mov
xor
rclb
test
sbb
cmpsl
sbb
add
mov
fdivl
lret
test
test
fists
insl
in
scas
jbe
jbe
sahf
add
sub
mov
push
ja
sti
push
int3
fisubrs
or
xchg
icebp
pop
adc
daa
idivb
mov
outsl
fimuls
mov
pop
fcoms
inc
sub
push
mov
mov
xchg
pop
test
mov
das
mov
fistl
cmp
fldt
add
rorb
push
jge
mov
or
das
dec
dec
xlat
in
das
adc
mov
inc
push
or
cmpsl
add
out
iret
cmc
cmp
loop
imul
testl
out
shlb
bound
xchg
cmp
and
or
popa
adc
or
in
xor
pop
stos
adc
sbb
jnp
test
mov
imul
test
mov
push
inc
cmpb
popa
adc
jg
mov
pop
aas
scas
and
jp
xlat
push
inc
cmp
pop
into
xchg
repz
mov
add
fcom
xlat
cmp
or
jg
inc
js
nop
mov
cld
mov
dec
in
stos
pop
clc
out
add
xor
adc
xor
adc
enter
clc
xlat
inc
test
push
ret
sbbl
mov
out
enter
mov
mov
in
das
into
and
mov
adc
mov
mov
dec
mov
add
add
leave
dec
jp
mov
out
dec
mov
cmp
mov
sbb
inc
out
idivl
movsl
add
mov
pop
movsb
das
roll
addl
xchg
jbe
adc
lods
outsb
vmovd
neg
dec
and
adc
xlat
push
xchg
scas
loop
sbb
inc
push
mov
pop
mov
mov
scas
call
in
add
je
cmp
call
pusha
test
mov
fcoml
inc
pop
push
stc
xchg
jmp
xchg
sub
fnstenv
or
cmp
jne
lds
cli
mov
pop
push
cmp
jb
push
incl
cmp
push
into
mov
addl
data16
push
or
dec
push
out
dec
cltd
jle
lcall
call
test
movsbl
scas
cmp
jle
jns
std
cmp
adc
or
inc
dec
add
jne
std
mov
rorl
out
rcrl
and
decl
and
mov
xchg
lock
sub
les
cmp
jg
das
pop
movsl
in
loopne
inc
orl
inc
jb
rcrb
jmp
push
pop
stc
outsl
in
jp
movd
ret
mov
jp
ljmp
lahf
cmp
movsb
sahf
pop
jecxz
lret
sti
flds
loope
mov
sub
pop
aam
filds
lock
les
push
xchg
fs
mov
or
add
cmp
movsb
ds
dec
clc
add
insl
ss
fwait
cmp
shlb
xor
adc
aas
je
jo
inc
hlt
mov
mov
stos
fwait
mov
mov
xchg
out
xor
mov
mov
or
jbe
lds
mov
rcrl
xchg
add
pusha
daa
ficomps
setbe
arpl
sbb
and
dec
aas
lods
nop
xchg
lock
add
or
and
mov
loop
add
pop
push
pushf
push
push
adc
pop
nop
ret
or
imul
das
sbbb
stos
cld
dec
stos
popa
out
add
add
pushf
popa
mov
lcall
sub
xchg
std
dec
xor
cmpsl
ljmp
hlt
xor
mov
mov
mov
mov
dec
in
dec
pop
mov
jge
sbb
mov
sahf
adc
out
notl
lret
xlat
lcall
push
pop
cwtl
cld
fs
pop
ss
adcb
push
pop
mov
mov
or
push
mov
ja
adc
pop
arpl
ljmp
test
stc
subl
sbb
loop
push
mov
sub
and
hlt
add
arpl
mov
jb
sti
insl
lea
insl
faddl
ret
cmc
cmc
xor
pushl
loopne
push
popa
xchg
jb
ja
fimull
pop
cltd
xchg
sub
adcl
jecxz
inc
clc
out
es
lods
wbinvd
aaa
mov
aam
and
mov
loop
nop
rolb
test
inc
and
arpl
or
hlt
mov
xor
inc
pop
loope
cmpl
aaa
push
jl
xor
add
push
mov
out
push
rol
jmp
or
movsb
push
push
addl
sub
loop
mov
into
mov
adc
aad
mov
sbbl
sub
push
pop
jne
fidivl
push
sbb
or
fsubr
pop
push
mov
pusha
cmp
packsswb
shl
push
aaa
mov
imul
sbb
loope
xor
test
mov
xor
or
arpl
push
pop
dec
ret
or
mov
xor
out
inc
int3
scas
cli
je
inc
outsl
jno
cs
fimuls
int3
scas
pusha
into
stos
dec
lret
dec
jp
das
and
adc
and
in
mov
jbe
or
push
jno
jnp
mov
add
imul
stos
push
bound
sub
cmp
jmp
jbe
flds
and
mov
rolb
sarl
pop
dec
xchg
int
push
xorb
adc
mov
stos
cmpsl
inc
mov
fldl
movsl
push
jne
push
mov
inc
outsl
js
scas
xlat
out
shrl
daa
test
mov
into
insb
jo
xlat
jnp
loop
mov
sarl
rcrb
push
sbb
mov
sub
adc
sub
jae
xchg
sti
imul
mov
aad
addl
dec
das
xlat
adc
sbb
xlat
cmp
add
jl
nop
pushf
adc
test
cmp
js
imul
imul
out
mov
cmp
shll
xchg
jmp
jns
dec
jne
mov
mov
add
daa
rorl
cs
ja
mul
sbb
lods
mov
fdivr
fildll
push
clc
mov
jb
cmp
call
sti
xchg
sub
jmp
adc
call
ljmp
sub
cmp
mov
stos
lahf
add
mov
icebp
cmpsb
scas
addr16
lods
and
dec
inc
fdivl
imul
jne
insl
ror
dec
out
mov
xchg
test
sbb
add
mov
add
pop
dec
imul
in
add
jmp
bound
mov
incl
mov
or
pop
sbb
movsb
mov
ds
xchg
pop
push
inc
jecxz
aaa
pop
sbb
mov
dec
and
lret
ds
xchg
xor
push
xchg
inc
cld
xchg
shll
xor
loopne
fdivrp
ret
movsl
push
fiaddl
ds
dec
xchg
adc
cmp
jg
and
pop
sbb
fmull
jno
add
pop
icebp
inc
shrb
pop
subb
inc
lods
jne
addr16
cmp
dec
xor
push
inc
dec
outsb
mov
or
mov
inc
sub
cld
ja
js
jl
jge
fistps
dec
sbb
jo
scas
xor
es
movsl
scas
dec
inc
jns
add
movhps
ret
mov
fidivrl
in
loopne
and
xor
sbb
push
test
pop
sbb
out
xchg
jge
sbb
shll
int3
ret
fwait
data16
xor
nop
xor
sahf
stos
cmp
das
jecxz
xor
jo
fs
fbstp
xchg
fstpl
imul
data16
add
ret
sub
inc
popf
mov
ljmp
jbe
sarb
adc
sbb
cmp
push
into
stos
daa
mov
push
sub
jle
mov
lret
pop
data16
jmp
dec
add
inc
sub
daa
adc
test
jae
inc
push
stos
cmp
rorb
mov
lret
push
xchg
pop
je
call
pcmpeqd
mov
fs
mov
pop
popf
pop
das
jmp
sbb
push
mov
cwtl
pop
lea
movsl
pop
outsb
cld
fwait
inc
and
push
or
lea
and
jno
sbb
and
cltd
lock
clc
adc
mov
push
lcall
or
push
mov
leave
shll
cmp
jno
xor
jns
pop
xor
adc
sbb
xchg
fstps
rclb
inc
xor
lcall
daa
pop
iret
int3
aaa
and
jmp
insb
iret
in
sbb
sub
stc
pop
and
push
mov
inc
addr16
mov
dec
testl
test
jb
addr16
sarl
cmp
jo
mov
push
lea
jp
add
sti
clc
inc
sub
mov
push
sbb
arpl
movsb
out
out
call
xchg
les
out
mov
mov
wrmsr
pusha
sti
pop
jne
xchg
and
add
mov
daa
mov
cmpl
cmc
jmp
lods
sub
mov
jo
push
xchg
leave
jbe
enter
cli
mov
xor
fldt
or
or
mov
jno
cmpl
aas
test
dec
popf
sahf
mov
js
scas
xor
pop
and
js
cltd
leave
sbb
cmp
jns
stos
shl
mov
scas
icebp
out
in
dec
cli
adc
mov
arpl
mov
mov
cmp
in
nop
mov
dec
out
xchg
xor
dec
gs
mov
jne
jge
in
xor
repnz
mov
mov
lret
sub
add
cmp
and
repz
ret
stos
test
xor
xlat
mov
ficompl
cmp
shrl
sub
out
push
jo
jp
push
push
adc
pop
es
lret
cmpl
leave
inc
xchg
dec
xor
cmp
ret
gs
mov
js
icebp
in
push
and
dec
test
lea
fistps
adcb
ret
scas
pop
or
negb
mov
ds
inc
mov
jae
movsl
and
push
lods
jp
inc
jge
push
loope
jbe
ret
mov
addr16
pop
push
sub
xchg
in
mov
dec
xchg
pusha
cs
outsb
jns
dec
sub
or
or
push
mov
pop
cmp
inc
lret
mov
scas
and
push
je
xchg
or
or
popf
fcompl
arpl
mov
mov
pop
sub
cmp
sub
lock
and
xchg
in
push
outsb
sub
mov
stos
addr16
or
hlt
mov
push
xchg
sbb
scas
pusha
lcall
inc
inc
lret
negb
das
ds
repz
sub
pop
sbb
xlat
popf
subb
push
push
or
into
jecxz
ljmp
add
iret
js
js
xchg
jnp
inc
or
sub
scas
imul
mov
out
mov
cmp
sbb
ljmp
mov
xchg
movsl
xor
out
lcall
std
push
push
push
test
pop
mov
adcb
repnz
repz
jns
bound
mov
mov
mov
adc
and
jge
lahf
orl
push
adc
in
lcall
jbe
sti
cmp
mov
mov
mov
movsl
ret
das
bound
and
jmp
and
std
cmc
push
pop
push
sbb
pop
mov
add
addr16
in
outsl
sbb
ljmp
stc
xchg
or
stc
and
mov
and
mov
cwtl
lcall
cmp
jno
inc
mov
mov
add
push
pop
ret
jmp
lock
ljmp
aad
sub
mov
shrb
shll
dec
es
mov
adc
fnstenv
icebp
in
int
cs
pop
test
test
xlat
mov
sbb
lea
mov
adc
jecxz
xor
lods
cmp
xor
adc
nop
sti
or
add
adc
jb
mov
test
mov
mov
lret
jmp
lds
dec
test
mov
leave
imul
pop
cmp
push
movsl
jmp
andb
jbe
negb
lcall
cltd
imul
pusha
jecxz
sbb
and
jge
jge
fs
mov
dec
mov
rcll
xchg
jbe
pop
test
gs
iret
push
jle
or
add
mov
ljmp
adc
pop
js
mov
mov
pop
loope
shl
jb
xorl
push
insl
mov
fistps
insl
lods
add
xchg
test
test
and
lret
mov
or
gs
cs
nop
add
sbb
fdivr
and
and
out
in
jle
push
sub
mov
lahf
and
xor
fldt
xchg
ss
adc
rcl
cmp
imul
dec
fidivrl
lea
aam
mov
push
aad
sub
add
sub
out
jecxz
lods
push
adc
dec
inc
mov
leave
dec
insl
xchg
sub
daa
pop
xchg
icebp
xchg
mov
fnstenv
xlat
call
fcmovne
dec
fistpl
imul
mov
inc
adc
cmp
clc
ss
loope
xchg
adc
jge
push
cmp
cmc
jno
cmp
xchg
xor
mov
aaa
pop
mov
repz
stc
in
ret
xor
outsl
jbe,pn
lahf
test
xchg
dec
push
jmp
dec
les
jle
cs
xlat
shll
sub
xchg
bound
xchg
lcall
sarl
mov
jne
add
dec
dec
pop
dec
pop
push
cmp
dec
scas
cld
notb
das
test
cld
test
fdivrs
or
data16
es
ljmp
std
loop
inc
cmpsl
rcrl
sub
in
pop
leave
jge
in
sahf
pop
cmp
pop
adc
or
cmp
push
inc
decl
dec
fs
les
lcall
es
cmc
lret
cmp
pop
adc
xor
and
paddq
arpl
faddl
or
jb
push
fucom
fwait
and
clc
je
enter
pop
in
push
jle
movsl
pop
add
or
xchg
cmp
fnstsw
cmp
adc
outsl
mov
add
int3
and
jae
pushf
je
arpl
cli
sbb
mov
lcall
sbb
stos
sti
rclb
push
jge
cltd
popf
and
lahf
out
push
add
rcrl
mov
xor
cmc
mov
les
fmull
cmp
out
push
jmp
fbstp
flds
pop
xor
add
pop
cmpl
push
scas
ds
or
push
mov
adc
dec
add
aam
mov
add
gs
ret
push
or
enter
scas
test
adc
mov
push
pop
inc
pop
cld
cmp
and
mov
and
das
gs
cmp
mulb
pop
and
dec
loope
jne
setbe
pop
mov
daa
mov
out
mov
aas
jb
inc
sbb
fadd
adc
xchg
fwait
dec
out
adc
mov
fimull
mov
add
sbb
int3
jle
lods
lcall
pop
cmp
dec
addr16
std
testl
jns
fdivl
orl
test
and
cli
es
insl
mov
jecxz
push
push
into
cltd
iret
lret
fs
in
hlt
and
aaa
sbb
mov
sbb
test
pop
insl
out
in
fsubrs
cmp
sti
jp
mov
push
ss
or
or
das
loope
adc
and
ret
mov
popf
pusha
imul
iret
out
roll
mov
rorb
test
movsb
addl
push
sub
or
aad
push
fwait
sub
lds
clc
mov
out
fbld
pop
in
sub
decb
aas
cmp
hlt
or
mov
jmp
sbb
pop
lea
or
pop
adc
pop
sbb
rol
shr
pop
outsl
addr16
mov
mov
push
out
test
fstl
inc
jle
addl
or
lcall
jg
mov
stc
dec
add
fistpll
inc
pusha
jle
xor
ret
xor
aad
mov
xor
jl
xorl
add
and
fcoms
hlt
addr16
push
movsb
repnz
psubb
adc
xor
cli
inc
cli
repz
xchg
int
mov
popa
jle
sbb
imul
add
mov
call
arpl
das
cwtl
xlat
add
mov
ret
daa
daa
lcall
fmulp
push
add
call
push
xor
and
sbb
les
out
xchg
hlt
mov
and
dec
arpl
mov
lret
enter
add
push
cmp
xor
mov
jle
mov
lret
inc
popf
ja
xchg
int3
adc
testb
lods
jne
mov
test
js
bound
ljmp
pop
mov
mov
jne
clc
int
shll
add
ret
arpl
and
or
andl
and
cmpsb
or
outsl
mov
cmp
aaa
lret
sbb
adc
clc
aad
ljmp
or
loop
aaa
pop
ret
js
adc
mov
pop
and
jge
fdivs
jae
insb
xchg
mov
push
les
jg
push
mov
rorb
mov
filds
shrb
pop
sub
hlt
push
cmp
imulb
push
cmp
sahf
xor
mov
test
imul
mov
inc
cltd
test
adc
mov
inc
in
mov
mov
mov
cld
and
movl
dec
fildl
outsb
and
rclb
rorl
in
test
ja
push
cmp
cmp
sbb
add
pop
inc
lods
sub
jns
cld
pop
xlat
orl
pop
push
imul
mov
cmpsb
dec
notb
mov
pop
aas
pop
and
jno
sbb
rcrl
or
jns
fbld
les
sub
jne
lods
shlb
sahf
sub
mov
xor
and
adc
mov
jge
ret
and
stos
xor
pop
and
pop
adc
cmp
js
lods
mov
mov
mov
leave
inc
jecxz
sbb
jns
push
dec
cwtl
pop
inc
jns
ljmp
push
out
xchg
out
adc
inc
repz
cmpsb
movsb
das
and
in
lods
push
popf
ds
out
movsb
adc
dec
pushl
mov
dec
cs
pop
or
sub
adc
add
pop
sub
and
mov
jb
sar
inc
ret
pop
xor
xchg
pop
in
add
fprem1
add
mov
iret
negb
inc
int
iret
and
push
popf
adc
push
insl
hlt
nop
out
push
mov
adc
inc
loopne
jno
adc
jecxz
fsubs
mov
movsb
cmp
or
inc
aas
mov
shlb
inc
push
ljmp
jmp
lret
sbb
add
mov
and
fsts
mov
pop
jne
and
ja
popf
repnz
add
pop
int3
ds
xchg
adc
push
adc
sub
or
sub
repz
push
pop
fistl
push
stc
sub
aas
stos
das
sti
jp
icebp
fistpll
cmp
inc
scas
sbb
in
cld
cld
mov
aas
test
je
sub
stos
add
cmp
pop
push
lcall
sbb
sub
and
jno
jno
pop
dec
cmp
inc
stc
pop
decb
imul
xor
xchg
cmp
adc
cmpsb
mov
ss
das
inc
dec
push
push
fcmovbe
xchg
xchg
push
xor
and
cmp
jmp
shl
sarb
das
mov
mov
into
sahf
and
pop
fstpl
xor
push
fldenv
and
push
jb
ret
leave
orb
pop
jg
test
or
adc
pop
je
adc
ret
popa
jb
or
push
jg
jg
pushf
mov
mov
or
fisubrs
xor
imul
ss
in
adc
mov
push
push
xor
fidivs
dec
push
adc
in
xor
lock
aas
test
out
push
push
or
push
inc
repz
cs
bound
push
mov
xor
lock
push
cmp
fcomp
push
nop
push
sbbl
mov
dec
shrl
jmp
cmp
xor
push
aas
xor
test
dec
add
inc
xor
or
xor
xchg
icebp
ja
inc
movsl
scas
or
js
mov
mov
mov
lret
dec
popf
fidivs
popl
jb
sub
add
ss
and
push
jl
adcb
or
dec
sar
ret
mov
push
add
and
mov
in
inc
ficomps
jne
cli
mov
loope
es
mov
lahf
les
sub
adc
pop
and
loope
sub
fisubs
aaa
iret
ja
push
rcr
inc
jmp
ret
inc
jno
cld
mov
int3
or
adc
int
push
mov
cmp
cmp
cmp
adc
shrb
jmp
std
out
mov
in
xchg
cmp
dec
andl
repz
inc
xor
push
out
or
jb
cmp
insb
push
and
jp
les
ds
into
xor
push
cmpsb
lahf
test
in
pop
jo
clc
jno
pop
nop
xchg
imul
les
jge
xchg
adc
fldl
push
daa
xchg
clc
movsl
fdivs
es
dec
dec
push
cmp
fucom
inc
call
sbb
gs
dec
enter
sub
fmull
les
in
adc
test
sub
pop
dec
jno
sub
xchg
loop
leave
sbb
repnz
pop
jl
pop
pusha
sbb
ds
dec
sbb
movsl
mov
outsl
mov
pop
shrl
or
add
mov
mov
sub
push
inc
int3
arpl
and
mov
sbbb
fld
sbb
add
lock
or
cld
in
pop
jo
add
sub
out
addr16
and
mov
sub
aas
xchg
cmp
jns
icebp
arpl
pop
out
sbb
sbb
pusha
add
out
jne
push
out
add
push
dec
sbb
cs
lcall
outsl
lods
sarl
mov
xchg
idivb
push
sub
outsb
test
aas
add
fldl
sbb
lea
jo
lds
cld
mov
mov
std
mov
adc
enter
and
pop
pop
mov
mov
loope
push
cmp
fdivrl
mov
test
jl
jg
mov
and
xor
add
adc
dec
cmpsl
jbe
xchg
cmc
adc
mov
push
sub
sti
and
push
out
cmc
loope
jmp
sub
loopne
mov
into
dec
adc
push
fstps
cmc
sub
pop
in
push
lods
jno
fildl
cld
jecxz
adc
mov
sub
flds
jb
mov
lret
dec
cmc
aaa
cs
shr
test
incl
pop
adc
xlat
in
insl
lods
xchg
enter
ja
xchg
cli
cli
sbb
push
inc
sub
sahf
cwtl
divb
jbe
mov
fs
mov
pop
into
mov
imul
ja
addb
dec
add
test
test
shll
jo
inc
insb
adc
add
lahf
push
lahf
xchg
xchg
xlat
outsl
jmp
mov
mov
lods
jns
sbb
popf
jecxz
fdiv
stos
push
mov
inc
filds
repz
xchg
nop
push
pop
pop
pop
roll
into
cli
sub
out
adc
or
in
push
xlat
fsubrp
gs
sub
sbb
mov
inc
mov
into
fsubl
out
jae
dec
xor
or
or
sbbb
dec
and
ret
fsts
dec
psubusb
or
stos
aaa
rolb
jecxz
andb
fidivrs
pop
inc
gs
test
pop
jbe
sbb
ror
cld
mov
mov
add
adc
in
das
mov
test
clc
mov
ret
ljmp
mov
jae
cli
inc
movsl
inc
sub
jno
call
or
inc
and
stos
mov
imul
push
jle
lods
cmc
mov
imulb
xor
sti
lret
iret
add
jnp
lock
in
js
adc
ds
xchg
xor
mov
inc
xchg
dec
fs
add
aas
xchg
in
push
and
stos
push
pop
inc
add
rcrb
insb
sub
add
frstor
sti
jmp
aaa
pop
out
cld
shrl
popf
fisttpll
rcrb
aam
test
xchg
and
sbb
in
xchg
incb
cmp
inc
dec
movsl
xchg
pop
add
stos
jne
js
pop
dec
dec
mov
inc
xorl
xchg
sub
das
pop
enter
cmp
adc
daa
mov
aaa
int
enter
int3
or
cmp
aas
ljmp
in
dec
subb
mov
mov
xor
mov
mov
pop
fs
pop
fcomps
cs
test
push
das
pop
or
jnp
mov
call
hlt
jae
or
sbb
out
out
xchg
adc
xchg
aaa
out
mov
dec
fiaddl
mov
mov
adc
inc
in
inc
stc
lods
dec
xlat
pop
iret
leave
orb
sti
mov
lock
or
inc
jge
lret
adc
dec
pushf
xor
jno
cld
sahf
push
mov
inc
mov
xor
mov
inc
shll
cltd
mov
dec
mov
hlt
ret
jecxz
and
mov
mov
dec
mov
lret
mov
xchg
repnz
shl
push
cmc
jbe
sbb
test
out
sub
push
push
lret
cmp
mov
cmp
cmp
cltd
mov
scas
in
nop
repnz
pop
cli
enter
xchg
xor
cmp
data16
jne
scas
cltd
lods
sbb
or
popf
adc
cli
call
out
pop
lea
xchg
in
or
jno
lds
jecxz
ret
imul
loop
or
imul
stos
adc
mov
or
jg
or
mov
lret
push
shlb
and
rcl
xlat
dec
out
push
lock
ljmp
lret
ud2
mov
lret
xlat
inc
fs
loope
pushf
data16
mov
loopne
xlat
dec
mov
mov
pusha
or
lds
rolb
xlat
mov
jne
dec
push
imul
out
sub
sub
add
xchg
out
mov
test
jmp
mov
cmpsl
push
push
adc
loopne
sti
repnz
or
cs
mov
mov
inc
std
sbbb
mov
shll
jne
mov
xchg
in
int
shl
ret
into
dec
hlt
shl
fwait
fwait
aam
into
mov
xchg
xor
into
jo
or
mov
cltd
and
dec
faddl
sub
mov
jmp
lea
sbb
jo
lds
outsb
addr16
fnsave
ds
cltd
cld
decl
out
pop
mov
mov
mov
add
loopne
inc
xor
xor
mov
xor
psubusb
jge
mov
sahf
mov
lods
mov
jb
shl
gs
sarl
ja
or
and
cmpsb
lods
dec
stos
mov
clc
stos
jno
ret
jl
push
pusha
jmp
mov
xor
or
repnz
aam
enter
insb
mov
mov
jnp
fsub
arpl
jns
inc
add
push
push
mov
shrb
dec
stos
pop
jbe
add
loopne
popa
jno
adc
inc
adc
ds
mov
and
push
xor
adc
dec
jns
fcoms
in
shlb
shl
jle
daa
in
inc
mov
mov
cwtl
pop
sbb
insl
out
add
add
cmp
push
es
jmp
in
daa
test
and
mov
or
fcomip
mov
sbb
loopne
fwait
lea
pop
mov
jo
imul
push
shll
push
pusha
jl
cld
es
or
adc
nop
inc
push
inc
mov
jp
add
mov
cmp
dec
jb
testb
lahf
pop
mov
sub
inc
enter
js
xor
rcrb
movsb
mov
and
sub
or
ret
push
pop
jne
and
pop
test
insb
xchg
je
leave
loope
mov
pushf
add
and
fwait
enter
cli
enter
sub
sbb
hlt
add
jb
adc
inc
cmpsl
mov
int
test
lcall
sbb
xchg
ror
mov
cmp
mov
movl
clc
adc
push
mov
sbb
pusha
cmp
adc
gs
or
icebp
mov
xchg
add
add
mov
push
add
sub
mov
insb
lds
repnz
jb
jg
dec
shrb
nop
sbb
xor
dec
jno
cmp
dec
cltd
mov
mov
mov
test
push
sti
sbb
adc
mov
pop
cmpsb
sbb
mov
shrl
in
push
jns
mov
jle
or
lods
aas
inc
mov
mov
in
inc
lahf
shl
int3
and
sub
jge
xor
pop
lock
sub
lods
out
jnp
adc
or
xor
les
xor
icebp
dec
lret
push
jae
xchg
xchg
mov
decl
loopne
xor
push
push
xor
adc
dec
fisttpll
sub
lcall
lea
xchg
aam
pop
mov
mov
inc
sub
sti
sti
fcomps
scas
sbb
push
add
iret
add
fldpi
in
push
pushf
dec
fcomps
aaa
movsl
inc
inc
ret
pop
js
pop
les
cwtl
mov
mov
pop
mulb
idiv
mov
cwtl
push
inc
adc
movsb
push
dec
adcb
jnp
mov
jecxz
or
push
rcr
dec
int3
dec
repz
in
in
les
pop
push
sbb
push
lock
int
movsb
out
in
dec
dec
test
vpsraw
rorl
mov
andl
divl
ficomps
sub
lds
cwtl
stos
jo
adc
adc
lock
mov
aaa
aaa
arpl
dec
mov
scas
les
pop
add
cs
mov
cmp
mov
mov
mov
mov
aas
out
push
frstor
add
stc
and
and
lret
scas
dec
jmp
lret
fmull
sti
arpl
jnp
mov
and
mov
ja
xchg
addr16
jnp
out
cmp
push
mov
xchg
add
or
pusha
push
ja
lahf
data16
addr16
es
test
dec
int
stos
mov
aaa
mov
shr
aad
xorl
xorb
aad
push
rcr
dec
mov
sub
dec
sub
inc
jns
sub
pop
iret
cmp
loope
xor
push
and
cmp
xchg
in
sbb
ja
addps
push
dec
xchg
adc
mov
jns
xor
loopne
scas
daa
cld
test
repnz
xchg
xchg
push
aas
sbbl
inc
int3
movsb
imul
out
lea
xchg
les
aas
repnz
iret
imul
lods
jae
cmc
outsb
pop
es
movsb
jo
sbb
inc
outsb
sti
mov
push
adc
pop
addb
xchg
jle
lret
and
pop
push
insb
mov
test
and
fwait
repz
push
orb
pop
sbb
fstl
lock
in
imul
push
adc
sub
or
iret
js
lcall
rcr
faddp
stos
cmc
sub
cld
jno,pt
mov
jno
adcl
push
popf
lds
fwait
js
cmp
movsl
push
sbb
dec
negb
arpl
cmp
mov
test
test
cmp
pop
inc
stc
pushf
adc
cwtl
mov
pusha
jle
test
aaa
stc
orb
xchg
loopne
aam
enter
inc
sbb
mov
or
push
cmp
filds
pop
sti
pop
mov
sbb
push
xor
gs
fwait
inc
cmp
xchg
imul
js
cmp
cmp
cmpsb
repz
sub
push
push
mov
sub
shll
sbb
out
insl
cmp
add
gs
movsl
jbe
sbb
pop
xor
movsl
jb
jle
fnsave
fstpl
push
or
xor
adcl
sub
mov
pop
das
notb
mov
mov
cmc
js
jmp
mulb
mov
sub
imul
jp
jmp
pop
mov
xor
fwait
dec
test
push
enter
sarb
dec
test
inc
jno
xlat
in
loopne
pusha
scas
out
or
inc
adc
cltd
push
ss
push
mov
outsl
movb
test
mov
dec
repnz
pop
pop
je
repz
push
scas
adc
pop
sbb
bound
adcb
shll
enter
adc
stos
xorb
inc
test
adc
mov
jno
sahf
fdivrs
loopne
jae
cmpsl
cmpl
in
loopne
jmp
cmc
stos
xor
adc
std
push
into
inc
insb
roll
in
fucom
enter
jae
inc
xchg
mov
or
aas
adc
push
aam
nop
mov
div
stc
xchg
inc
push
mov
sbb
add
enter
push
inc
lock
fs
jge
dec
inc
adc
mov
lds
cli
ja
ret
lcall
mov
pop
pop
repz
stos
stos
daa
adc
in
sub
xorl
jle
enter
jo
maskmovq
testl
xor
pop
jmp
xor
pop
leave
mov
sub
leave
push
mov
out
iret
imul
push
jb
mov
sti
adc
std
das
add
inc
sub
stc
call
sarl
divb
ret
lahf
sti
out
adc
mov
pushl
fcomi
adcl
loope
mov
lret
push
incl
test
int
decl
cmp
outsl
je
push
inc
fldl
pusha
mov
sub
jp,pn
and
cmp
push
mov
cmp
jge
cwtl
dec
or
insl
scas
jnp
mov
into
enter
jns
imul
ficomps
in
cmp
pop
jns
dec
jmp
add
cli
pop
add
push
jb
sub
je
lock
scas
jns
mov
cli
ret
shrb
xor
int
mov
dec
cmpsb
cmpsb
fdivrs
sahf
mov
mov
mov
outsb
mov
aad
dec
dec
in
sub
push
inc
mov
popf
sbb
sahf
adc
pop
or
jno
mov
jmp
add
insb
movsl
pop
add
mov
test
adc
mov
lcall
mov
mov
decb
out
lret
lods
and
inc
sub
dec
shlb
outsb
push
scas
mov
ficompl
adc
repz
inc
xchg
dec
stos
scas
dec
or
mov
lods
mov
lock
pop
pop
fidivrs
mov
sub
cwtl
testb
icebp
insl
mov
xchg
ds
scas
fstl
dec
or
sub
mov
sbb
arpl
inc
mov
mov
push
push
cmp
fucomi
test
mov
xchg
mov
fiadds
mov
inc
mov
xor
or
sbb
stos
sbb
aad
inc
push
stos
jo
or
loopne
pop
add
shlb
push
out
mov
test
jbe
or
movsb
stc
push
mov
jne
popa
jo
rorl
lea
cmp
sub
pop
pop
into
cs
and
jp
mulb
pop
lea
cmp
add
push
mov
or
sub
xchg
adc
inc
leave
addl
jg
daa
push
outsb
mov
jo
scas
cmp
outsb
fdivl
dec
pop
enterw
sti
cmp
pop
add
imul
dec
stos
test
jmp
jae
jne
rcr
into
mov
fsts
cmp
cmp
mov
pop
push
rcrb
adc
mov
movsb
es
ljmp
int3
and
dec
or
popa
sub
mov
cli
sub
insl
ja
push
push
mov
dec
andl
sbb
repz
arpl
inc
fstl
enter
scas
mov
add
xorl
sub
jae
dec
jle
fbstp
enter
lock
adc
ja
sub
ret
sbb
sbb
andb
push
imul
and
shrd
push
fwait
cmp
rorl
cmpsb
int
out
jecxz
dec
pop
xchg
inc
sbb
fbld
sbb
inc
cmp
cmc
sbb
in
aaa
dec
lods
pop
or
arpl
pop
fs
mov
outsl
fistl
out
dec
notb
data16
das
mov
ror
dec
fwait
push
data16
dec
adc
les
lret
xorl
mov
arpl
or
nop
mov
and
mov
mov
mov
pop
test
jl
mov
pop
loop
cmp
cmp
cmp
jecxz
xor
xlat
xchg
loop
test
xor
adc
jp
repz
das
and
or
mov
add
push
cmc
fdivs
cwtl
push
movb
pop
mov
pop
loop
leave
ficoml
popl
and
mov
loop
fldenv
ret
jbe
popa
push
lret
sbb
pop
pop
aam
gs
imul
aam
jo
mov
jbe
js
or
add
push
aas
sub
and
popf
mov
out
mov
popf
mov
icebp
and
les
lock
jbe
jg
fmul
mov
mov
dec
imul
mov
cmpsl
adc
push
xorb
inc
sbb
inc
das
jns
lret
sbb
ss
mov
dec
out
or
call
aaa
sti
jbe
subb
stc
pop
loopne
hlt
pop
mov
xchg
push
mov
mov
inc
dec
mov
int3
js
mov
popf
rcll
cwtl
dec
sub
pop
mov
ja
mov
jmp
data16
pusha
cli
add
cmpsl
dec
ljmp
imul
negl
cmpsl
cmpsl
pop
inc
hlt
adc
xor
jo
pop
inc
imul
ss
fisubl
test
xor
sbb
lret
xor
add
sub
repz
pushf
test
jbe
loope
xchg
jo
or
lock
push
add
in
clc
jmp
jecxz
jge
arpl
jbe
pop
or
cmp
xchg
call
pop
loop
xchg
leave
adcl
cmp
les
jl
push
sbb
imull
and
jo
pop
sbb
mov
fisubs
pop
nop
fimuls
mov
insl
subl
dec
ficomps
stos
jnp
mov
js
repz
imul
arpl
or
jg
test
lock
cmp
sar
idiv
inc
push
arpl
pop
lahf
sti
jle
sti
movsb
pop
mov
inc
cmpsl
out
aam
mov
dec
adcl
mov
hlt
pop
sub
ss
jge
mov
pop
jb
mov
mov
jp
push
adc
lock
jmp
or
push
fildl
mov
mov
repnz
xchg
pop
gs
jae
xchg
fdiv
jp
test
inc
dec
orl
mov
mov
outsb
add
sti
inc
shr
fidivs
loop
push
push
mov
add
xor
test
jnp
cltd
cmp
arpl
pop
data16
or
sbb
xlat
les
add
loop
push
hlt
or
push
adc
addr16
data16
pop
jne
push
call
and
xor
xchg
mov
orb
aam
jb
stos
inc
jecxz
test
push
mull
xlat
cld
jg
notb
xchg
or
rcll
test
push
in
sbb
cmpsl
jno
rcr
adc
adc
adcb
sbb
mulb
inc
adc
push
pop
or
jg
mov
or
cmp
push
dec
jl
pop
ja
xor
mov
mov
stos
loopne
pop
jns
insb
mov
pop
jp
mov
cld
xchg
mov
mov
or
lock
pusha
cmp
rcl
movsl
dec
adc
pusha
and
or
xor
cmp
sbb
in
in
push
scas
aas
and
subb
or
arpl
fnstenv
sti
jo
in
xchg
push
lock
pop
xchg
stos
movsl
sti
and
mov
or
xor
cli
sub
mov
inc
xchg
insb
inc
pop
bound
out
or
ret
ja
jbe
into
jb
loope
xchg
sub
pop
mov
mov
mov
or
adc
sbb
xchg
fidivrs
xor
mov
int
hlt
leave
in
pop
lds
es
ror
out
add
push
cmc
add
or
jl
negl
inc
and
add
push
sbb
xor
lea
and
mov
aas
push
test
cltd
and
jecxz
movsb
jl
xchg
and
sbb
xchg
fnstenv
push
jp
jbe
jmp
mov
cld
xor
std
mov
dec
and
xchg
adc
pop
out
xor
mov
inc
sub
cmpsl
fdivrl
inc
in
sub
jne
addr16
inc
cmp
xchg
mov
or
push
les
gs
lret
popa
and
mov
in
mov
stos
shl
sbb
xchg
sub
je
mov
les
pop
mov
mov
xorb
dec
into
je
stos
xchg
push
push
sbb
addl
xchg
or
sarb
pop
lcall
out
fwait
xlat
icebp
jl,pt
addr16
mov
sub
decl
imulb
mov
int
fucompp
fiadds
stc
jl
cmp
mov
pop
cmp
dec
imul
data16
clc
cmp
pop
inc
jle
mov
sbb
or
push
ret
xor
lret
cwtl
jg
xor
or
testl
scas
jnp
sub
inc
xor
repz
cmpsl
cmp
mov
push
repz
shll
jae
cmp
xor
push
cmc
lods
lods
xor
stos
add
inc
adc
push
push
adcb
aas
mov
shr
pop
inc
xchg
neg
add
push
pop
jle
notl
movsb
shrb
cmp
insl
push
or
lock
popa
aam
pop
inc
in
adcl
aas
sub
movsl
jle
nop
xchg
into
sbb
sub
jb
adc
dec
outsb
in
ret
and
xabort
mov
xor
push
stc
mov
pop
fs
popa
push
adc
push
data16
stc
rep
scas
arpl
add
and
andb
xchg
roll
pop
adc
insb
jnp
fidivrl
pop
daa
cmp
fs
mov
dec
pop
push
inc
ja
cmp
ret
insb
add
mov
inc
shld
xor
mov
xchg
mov
mov
fs
sarl
les
cmp
adc
scas
xor
sbbb
aas
movsl
pop
adc
sub
fs
fcoms
dec
subb
cmp
mov
aas
sub
out
mov
imul
pop
mov
cmp
loope
sbb
movsb
or
adc
in
push
jg
test
adc
xchg
inc
lods
mov
lret
add
test
roll
push
xlat
xor
rcll
fcmovu
add
arpl
scas
pusha
cli
jns
or
sbb
cmpsb
sbb
cmp
bound
loope
movsl
ret
sub
cmpsl
mov
xchg
jge
xor
mov
mov
insb
ljmp
xchg
stc
jg
add
lahf
push
and
inc
sbb
jb
or
fcmovb
insb
lods
lods
and
sbb
push
test
or
outsl
xor
pop
fbld
jae
in
sbb
int
add
std
cmp
inc
inc
loop
cli
cwtl
or
push
sub
loope
jecxz
repnz
pop
inc
clc
fistl
cli
or
loopne
push
jnp
and
cs
cmpl
sbb
push
mov
loopne
ret
mov
popf
mov
mov
popf
pop
mov
add
aaa
fildll
mov
jnp
jl
push
cmp
in
repz
push
jge
mov
cld
arpl
jne
jns
scas
cmp
mov
inc
insb
push
xchg
dec
aaa
sub
mov
pop
or
repz
mov
lahf
cltd
mov
cmpsb
jecxz
xor
xchg
cltd
adc
test
push
push
mov
cwtl
push
stos
and
jg
push
push
add
sub
dec
jle
xorb
dec
jo
mov
mov
push
sahf
jp
stos
mov
mov
sbb
dec
sub
adc
and
push
adc
in
jne,pt
xor
cli
int3
je
stos
insb
mov
sarb
pop
inc
dec
add
push
dec
lret
out
xor
mov
adc
adc
or
or
xor
cli
add
in
scas
and
aam
das
out
fimull
in
sub
add
cmpl
cmp
scas
popf
outsl
inc
push
xor
lret
and
inc
fcmovnb
jnp
ret
sbb
mov
and
cmp
mov
dec
xchg
pop
xchg
aad
imul
inc
outsl
fld1
push
out
cmp
bound
xchg
sub
and
in
inc
ficomps
xor
push
adc
out
test
push
mov
shlb
out
pop
add
or
mov
mov
cmp
loopne
rorl
mov
add
loop
xor
mov
xchg
or
jp
mov
push
and
insl
fwait
sub
pop
scas
push
push
cmp
mov
idivb
mov
mov
or
fucom
mov
pop
xor
pop
lods
call
pushf
mov
sbb
inc
into
xor
push
cmc
out
xor
xor
clc
adc
aad
fwait
xor
xchg
sbb
inc
mov
cmp
mov
jecxz
or
mov
addb
lcall
push
hlt
pop
popf
pop
jns
ltr
jne
pop
push
loope
mov
stos
cmp
inc
and
mov
lcall
enter
fsubl
mov
das
lahf
fstps
test
mov
mov
out
ret
aam
sbb
xchg
data16
loope
add
cmp
leave
unpckhps
lea
mov
mov
push
mov
add
gs
jl
faddl
jo
arpl
jle
aas
xlat
push
dec
inc
mov
dec
add
cmp
stos
dec
sahf
pop
dec
aad
xlat
aas
iret
fsts
es
adc
inc
mov
stc
mov
std
lahf
mov
jno
and
loopne
push
aad
aam
jb
dec
mov
data16
loope
push
push
rcrl
sbb
pop
push
test
data16
aad
mov
sub
cmp
ja
test
cs
out
xchg
nop
inc
shrb
push
mov
cmp
std
insl
stos
xchg
divb
test
jo
je
mov
mov
xlat
das
test
in
hlt
add
mov
mov
imul
add
cmpsb
mov
stos
sbb
test
and
pop
push
inc
insl
ret
scas
dec
lods
xchg
inc
imul
mov
dec
shrb
xor
clc
scas
pop
xchg
inc
add
cmp
aaa
push
or
add
mov
inc
test
and
frstor
imul
inc
push
mov
out
pop
add
outsb
cmp
sbb
stc
xchg
shr
ja
in
ljmp
sbb
jbe
push
jns
xor
in
inc
push
dec
mov
iret
jecxz
outsl
lret
repz
nop
fidivrl
sbb
test
stc
leave
popf
mov
mov
push
mov
in
xor
std
or
dec
xchg
divb
ret
pop
pop
aaa
xchg
jge
inc
cmpsb
sub
sub
xchg
ret
lods
pusha
call
stos
sarb
xor
mov
stos
adc
nop
or
movsb
ret
dec
xchg
push
pop
mov
sbb
and
mov
outsl
jl
xor
adc
push
mov
add
or
sti
ds
jmp
xchg
negl
pop
cmpsb
bound
pop
pop
into
daa
or
xor
sub
sub
aad
add
clc
rolb
rclb
scas
aam
insl
sub
jns
das
xorb
movsl
test
call
cli
add
or
pop
and
out
jbe
inc
inc
scas
mov
loop
xor
test
inc
lea
sbb
fimull
call
xchg
ljmp
imul
ja
xor
xchg
or
add
fidivl
mov
xchg
dec
notb
cmpl
test
inc
xchg
scas
jo
cmpsb
xor
ds
fsubr
xor
fisubrl
enter
adc
push
xor
or
and
js
aaa
leave
mov
push
inc
lret
or
adc
xor
mov
lods
cli
jae
xchg
mov
ret
cmp
pop
mov
mov
enter
inc
js
pop
fs
xlat
jp
repnz
xchg
xchg
mov
int
int
popf
jbe
adc
cmpsb
loope
pop
in
jle
jns
hlt
loopne
dec
inc
cs
fs
mov
call
xor
jo
dec
jmp
jmp
jns
ljmp
clc
pop
jg
dec
jae
push
lods
imul
cmp
sarl
push
adc
mov
in
cltd
push
push
mov
cmp
in
dec
push
test
push
nop
xor
dec
or
sbb
inc
stos
push
sub
aam
ds
or
pop
mov
mov
jge
xor
adc
lea
sbb
mov
inc
out
in
mov
js
fxch
inc
test
ds
xchg
xor
xor
jno
insl
psrad
std
sub
add
fmull
xchg
shll
in
scas
pop
push
fcomps
mov
and
imul
adc
sbb
jecxz
out
int3
jle
xor
jno
xlat
in
cltd
repnz
stos
dec
iret
pop
fdiv
sti
sbb
push
lahf
aad
inc
jecxz
out
decb
repnz
les
jmp
je
repnz
inc
pop
aam
cltd
bound
gs
adc
cltd
or
scas
pop
inc
int3
aad
mov
sti
lods
stos
xor
sbb
sti
mov
xor
mov
add
add
ja
mov
and
lret
mov
inc
pushf
pushf
inc
insl
shlb
push
add
push
jns
popa
cmpsl
mov
jp
mov
pop
fsubrs
push
cwtl
pop
push
imull
sub
push
mov
pop
sbb
push
jne
inc
into
jne
dec
mov
pop
test
jl
shrb
push
ret
cmp
inc
push
inc
mov
sbb
lock
scas
sahf
pop
nop
mov
std
xchg
xor
test
mov
add
lahf
cmp
hlt
inc
fidivs
push
push
sub
mov
add
or
adc
sub
lahf
in
aas
insl
lret
test
aam
repnz
mov
jno
lret
add
cmp
arpl
xor
xlat
jb
mov
xchg
xor
negb
sti
pushf
add
push
cmpsb
sbb
sbb
add
xchg
mov
cmpl
stos
je
jge
add
dec
mov
fbstp
repnz
inc
and
in
jecxz
sbb
push
mov
jle
mov
mov
xor
es
cli
adc
js
aam
cmpsl
aaa
cmp
or
and
clc
jno
cmp
sbb
push
movsb
ljmp
rcl
mov
or
dec
mov
push
cwtl
imull
lock
cmc
es
sbb
sbb
mov
mov
adc
dec
lods
aad
sbb
xchg
iret
aad
push
inc
std
data16
scas
pusha
adc
inc
sbb
inc
imul
pop
xchg
scas
stos
push
mov
or
daa
aam
daa
jle
arpl
pop
mov
xchg
sub
dec
sub
popf
divb
xor
cmc
push
mov
mov
dec
mov
enter
repnz
inc
sub
cmp
cmp
aaa
or
ficompl
cwtl
pop
xchg
pop
xchg
call
lahf
loope
loope
pop
pop
inc
push
xchg
aad
add
icebp
cmc
xchg
into
mov
sub
push
lock
cmp
call
in
std
sar
jns
dec
pop
add
out
mov
dec
sbb
fnsave
inc
sbb
call
aam
mov
jge
int
mov
fsts
xchg
push
data16
jno
pushf
push
fldl
nop
xor
xchg
scas
sbb
lret
out
mov
sub
inc
mov
mov
fidivrl
cmc
jbe
repnz
dec
insb
jle
sbb
mulb
int
or
xor
addl
pop
mov
mov
lcall
and
dec
mov
or
gs
popf
out
cmpsl
xor
ret
mov
ret
test
fstps
or
scas
push
shrl
add
cmp
cmp
mov
lock
iret
iret
xchg
cmp
shll
lock
pop
add
dec
cmp
xchg
jno
push
xor
popf
xor
or
push
jae
xchg
pop
jl
add
mov
out
fisubl
clc
jg
insl
jmp
and
stc
lock
adc
in
sub
or
bound
and
cmp
pop
mov
jnp
and
divl
enter
or
xchg
sbb
fnsetpm(287
sbb
mov
mov
mov
idivb
mov
out
jp
xchg
fldl
and
xchg
inc
fldcw
pop
push
stos
sti
cmp
aas
dec
js
rcrb
cmp
adcl
scas
mov
rorb
cld
lods
scas
jnp
addr16
jno,pn
and
in
and
lahf
aad
sub
ret
inc
xor
call
loopne
lahf
mov
xchg
movsl
cmp
test
inc
mov
pushf
rcrl
testb
stc
dec
inc
rorb
out
lods
shll
jge
shl
test
aam
mov
std
xchg
mov
out
mov
xchg
stos
push
mov
movsl
add
mov
es
cmp
cli
add
gs
daa
mov
adc
orl
inc
xorb
insl
cmp
stc
or
arpl
sub
push
imul
movsb
ljmp
inc
dec
lret
test
dec
mov
adc
bound
test
jl
xor
and
sbb
out
outsl
sub
clc
inc
sbb
mov
push
lret
decl
jbe
jecxz,pn
inc
scas
mov
mov
rorb
iret
ret
sti
hlt
pop
push
or
mov
orb
mov
mov
cmp
inc
or
push
lret
cmp
mov
mov
pop
ja
int
je
dec
in
push
xor
repz
cmp
in
sub
into
pop
xchg
fisttpll
mov
ret
add
jmp
xchg
andb
repz
sub
add
adc
adc
test
inc
sbb
lods
pop
cmp
iret
xor
jmp
sbb
repnz
sub
ljmp
lods
aaa
inc
test
mov
mov
inc
cmp
mov
sti
inc
iret
insb
add
fcompl
xchg
ret
loopne
jno
adc
lock
call
out
push
int
data16
xchg
stos
movsb
adc
push
mov
fldenv
lods
scas
pushf
out
cld
cmp
js
sub
lahf
pop
imul
mov
or
daa
adc
mov
fs
idiv
pusha
or
ss
jns
mov
test
cli
decb
dec
cmp
cltd
sbb
inc
mov
jle
jnp
add
inc
push
cli
imul
jne
inc
sub
and
mov
mov
ljmp
mov
and
bound
inc
pop
push
pop
mov
in
and
inc
push
mov
dec
dec
jnp
cld
xor
fnsave
pop
jg
add
ss
mov
mov
movsb
fwait
and
cmp
ffreep
xlat
push
sub
arpl
out
test
imul
cmpsl
notb
mov
push
iret
ss
jo
sbb
scas
sbb
xor
xchg
movsb
adc
sbb
addr16
repnz
lock
push
jnp
push
pop
mov
lret
lcall
loopne
cld
std
out
mov
inc
sbb
arpl
ret
aas
stos
pop
cmp
stc
nop
popa
xchg
pop
stos
mov
sahf
out
lds
pop
adc
mov
inc
xor
jge
xor
fstpl
dec
popa
stos
out
scas
aad
mov
lahf
dec
in
sub
aaa
xchg
add
stos
inc
test
mov
js
sbb
in
cmc
push
in
leave
push
fbld
dec
aad
jo
add
jno
jns
repnz
repnz
push
and
inc
pop
inc
movsl
pop
ret
data16
adc
daa
adc
sbb
fwait
add
testl
das
add
lcall
mov
mov
test
fst
mov
lret
or
cmp
pusha
divl
mov
rcrb
xlat
or
or
out
aam
nop
lods
xor
cmp
xlat
inc
shlb
scas
jg
ret
pop
stos
pop
cmc
xor
xor
loope
or
lds
adc
out
lea
inc
data16
cmpsb
out
mov
mov
cmp
decl
enter
push
sub
or
add
pop
xorb
mov
inc
pop
jbe
mov
push
and
lods
cmp
fnstcw
push
jge
xor
call
mov
jmp
or
mov
pop
jp
sbb
jne
mov
iret
aas
mull
xor
shlb
pushfw
rorb
push
orl
push
imul
xchg
mov
push
add
rclb
lock
aam
xor
outsb
xor
inc
lcall
lods
dec
mov
push
pop
and
ret
js
and
popf
xor
or
or
fimull
jg
jbe
cmc
cs
jne
mov
cmpsl
push
xchg
push
sbb
je
adc
cld
mulb
push
bound
add
inc
fcomp
xor
mov
inc
nop
gs
pusha
mov
inc
daa
enter
or
cs
xor
ds
sbb
repz
dec
inc
sysenter
mov
sub
sti
int
and
xor
dec
sub
xor
stc
lock
xchg
cmp
sti
adc
jnp
xor
popf
out
jo
push
xor
jo
sbbb
ss
pushf
xchg
std
mov
rol
cmp
inc
pushf
adc
jmp
mov
mov
into
inc
mov
mov
imul
pusha
adc
cs
push
xchg
pop
notl
or
xor
mov
outsb
push
divps
sbb
rolb
stos
mov
or
data16
add
push
fstl
jg
mov
mov
aam
add
sub
inc
enter
xlat
hlt
jecxz
arpl
idivl
adc
pop
adc
jno
and
vcmpeq_uqss
iret
push
jo
mov
push
sbb
gs
and
mov
cli
or
xchg
outsb
mov
mov
xchg
inc
aas
int3
jecxz
aam
data16
sahf
les
jns
mov
fs
pop
js
icebp
inc
movb
push
ss
scas
mov
jg
fists
mov
xchg
dec
iret
aam
int
pusha
sub
cs
inc
iret
lahf
vdivpd
lret
cmp
inc
jp
pop
aas
cli
and
loope
xchg
shrb
loopne
pop
fwait
sub
ss
imulb
gs
push
push
sub
mov
js
orb
stos
imulb
loope
mov
mov
sbb
pusha
lcall
ficompl
test
shlb
fwait
fwait
push
lcall
movsl
inc
jecxz
repnz
addr16
lods
rolb
cmp
and
pop
testl
lds
stc
and
das
inc
scas
mov
cmpb
mov
inc
leave
sub
dec
cmc
mov
push
ror
iret
scas
sbb
sahf
mov
sbb
gs
mov
lods
scas
push
int3
inc
sub
popf
mov
cmp
dec
cli
testb
sub
pop
iret
mov
ret
data16
leave
mov
scas
pusha
or
xchg
and
and
cmp
imul
test
mov
fnsetpm(287
loopne
pop
jno
xor
bound
out
stc
or
lret
mov
out
lret
hlt
es
pop
pop
cmp
mov
in
and
mov
or
cmp
cld
bound
or
out
repnz
cmp
mov
sarb
pop
in
icebp
jecxz
adcl
add
jg
mov
fwait
cmp
test
in
sbb
xchg
xlat
fsubrs
dec
cli
stos
xchg
xor
lock
cwtl
lock
imul
pop
cld
movsb
stc
fidivs
lret
jmp
sbb
adc
sbb
xor
mov
push
clc
loope
imul
and
or
adcl
daa
insl
inc
lret
dec
mov
negl
ret
cmp
sbb
lods
inc
outsl
mov
jecxz
cmpsb
sub
or
gs
in
ljmp
inc
pushf
push
pusha
push
je
jecxz
jnp
sub
add
pop
pushf
dec
into
mov
stos
mov
loope
sub
xor
xchg
les
fwait
aam
sbb
inc
mov
xor
dec
dec
lods
lret
das
mov
rorl
sub
fsubrs
lahf
icebp
pop
inc
imul
les
mov
call
test
jnp
test
mov
fwait
insl
adc
andl
add
push
nop
fdivr
jle
stos
cmc
leave
stc
pop
es
fwait
repnz
aad
jge
mov
fidivl
jno
fists
sti
insb
xor
sub
pop
mov
loope
mov
out
in
imul
dec
xchg
rorb
scas
cld
dec
in
enter
mov
mov
push
xor
dec
loop
ja
xor
popf
adc
scas
lcall
mov
sbb
add
inc
dec
pop
push
inc
stos
mov
xchg
sub
fcmovne
xor
repnz
aam
out
mov
cs
fwait
repnz
mov
dec
stos
mov
adc
mov
cmp
sarl
push
sbb
outsl
jns
mov
cmpsl
lcall
jle
add
xchg
or
cs
add
insl
and
or
js
sti
scas
adc
push
je
mov
inc
int3
pop
movsl
sub
sub
xchg
mov
addr16
fwait
mov
xchg
mov
mov
leave
cmp
in
gs
add
arpl
xor
cs
cmp
jl
loop
xchg
repz
das
and
jne
iret
or
insb
fsubl
xor
ret
fcomps
mov
jno
or
inc
ss
mov
xor
fildl
push
addl
jb
push
jbe
sti
push
cmp
in
loopne
mov
inc
jb
or
dec
cld
and
jo
and
mov
dec
adc
lock
call
addr16
leave
jmp
jne
roll
push
and
xlat
sar
or
xchg
test
rorb
ret
repnz
ds
cwtl
mov
test
ret
movsl
push
sbb
lret
cli
leave
jp
push
lock
gs
and
ds
mov
mov
and
cmp
inc
mov
lahf
mov
insb
jbe
push
push
mov
pop
lahf
int
imul
cltd
loop
cltd
faddp
invd
js
movsl
jns
xchg
hlt
imul
sbb
fs
bound
clc
insb
cmpsl
xchg
dec
rcrb
ret
leave
jns
xchg
jmp
loope
pop
push
ret
aaa
mov
call
sub
sub
scas
mov
lret
or
addr16
aad
mov
out
sahf
movsb
jns
lret
mov
sbb
addr16
int
cmc
jb
stos
nop
pop
push
cmpsl
push
pushw
stos
in
jne
mov
popa
ljmp
pushf
lods
fmuls
out
sahf
out
lret
cwtl
insb
add
inc
sub
sub
and
movsb
or
xchg
std
addr16
insb
ret
sbb
scas
rol
cmp
push
adc
lcall
and
push
fisubl
pushf
mov
inc
in
fstpl
cmp
ret
pop
jle
cmp
or
test
je
addl
xchg
fidivrl
or
enter
xor
mov
stc
mov
sbbb
dec
shl
sub
ret
fidivrl
add
ret
ss
popf
push
or
jo
stos
iret
in
or
sbb
fldenv
xor
push
stos
dec
dec
aas
cltd
outsl
idivb
and
push
test
mov
xor
mov
popa
sub
sarl
sbb
cwtl
ja
mov
cmpsl
test
mov
shlb
hlt
pop
dec
rcll
add
add
xorb
pop
mov
sub
imul
aad
std
arpl
popf
ljmpw
sub
push
lret
icebp
ss
dec
jmp
imul
cmpsl
std
mov
addb
movsb
mov
and
pop
inc
cltd
push
aas
dec
add
std
add
andl
sub
data16
cld
call
rorl
lods
mov
jecxz
lods
push
pusha
cmc
xchg
aad
or
xchg
xchg
inc
and
negl
xor
pop
cld
lock
and
and
stc
in
dec
mov
cmp
xchg
sub
push
jo
ret
shl
fwait
sti
jge
dec
les
mov
inc
ss
sbb
repz
push
fmul
mov
mov
shr
mov
gs
and
xchg
shlb
clc
dec
add
out
ja
fsincos
pop
sbb
jmp
xor
les
jno
mov
ficompl
or
mov
push
xor
arpl
mov
xor
or
cwtl
dec
lcall
and
outsb
stc
in
rorb
mov
xor
adc
xor
pusha
iret
jp
popa
das
dec
in
ss
js
in
inc
sbb
push
mov
jl
xor
xchg
in
pop
gs
sbb
sub
pop
add
add
push
mov
sbb
rcl
pop
sbb
mov
adc
xor
inc
dec
les
xor
jne
pop
jno
les
cmp
arpl
adc
and
dec
scas
scas
fstl
aad
ds
dec
dec
jg
sbb
push
mov
addl
mov
in
mov
pop
or
mov
hlt
xchg
testl
adc
sahf
xor
int3
neg
xor
adc
pop
in
shrb
out
pop
mov
inc
ret
mov
sbb
icebp
and
cmpsb
arpl
popf
mov
icebp
add
sub
push
dec
adc
xchg
adcl
ficomps
repz
jmp
pop
push
xchg
jp
push
in
jle
addr16
call
inc
pop
adc
dec
lret
xor
les
mov
jne
sarb
bound
pop
xchg
int3
fidivs
mov
outsb
aad
sbb
roll
es
jp
jl
fldcw
outsb
jg
lcall
mov
push
js
sub
adc
scas
pop
xchg
and
sub
cld
repz
cli
add
cmpl
fs
dec
jb
sbb
test
push
daa
sbb
xor
mov
sbb
stos
idivl
jne
pusha
jnp
fidivs
sahf
dec
pop
leave
sbbl
mov
xchg
xchg
dec
xchg
or
cmp
adc
mov
inc
int3
stos
cmpb
rorb
cltd
sbb
push
mov
inc
ret
int
in
adc
xchg
lods
cld
jmp
push
int3
add
sbb
sbb
xchg
and
test
lahf
imul
popa
out
sarl
adc
adc
out
pusha
xor
mov
cmpsl
bound
int
lret
test
popf
push
sub
mov
cmc
jmp
pop
lods
dec
xchg
or
cmp
jle
mov
ficoml
pop
sbb
decb
inc
in
mov
jno
mull
pop
and
jne
sbb
sbb
out
outsl
test
in
outsl
pop
and
adc
xchg
sub
push
jae
push
rorl
and
cli
in
pop
dec
ds
test
pusha
jle
icebp
pop
mov
je
icebp
clc
aad
daa
pop
dec
sub
sbb
jo
mov
sar
insb
je
mov
push
sbb
movsl
test
movhps
in
aas
aad
in
lcall
inc
mov
and
jmp
out
xor
out
test
loop
jo
inc
pop
mov
push
cmpsl
cltd
inc
imul
and
cmpsl
pop
mov
sarl
or
jp
pop
stos
inc
jmp
mov
fcmovbe
pop
inc
aas
sahf
ljmp
orl
xor
add
pop
jge
or
scas
aam
pusha
push
les
in
and
add
enter
sbb
loopne
jbe
push
out
out
sti
cmpsb
cmp
xor
push
cmpsb
js
pop
mov
mov
push
mov
rolb
adc
lods
sub
mov
pop
cld
mov
lcall
int
pop
cltd
stos
in
dec
xor
int3
fcoml
add
fists
adc
shl
movsb
mov
mov
out
fdivrl
or
sar
cmpsb
mov
or
push
js
cmp
push
psubusw
loope
fiaddl
jle
bound
loopne
jmp
mov
js
cltd
ficomps
pusha
ret
jge
je
repz
test
divb
inc
fidivrl
inc
push
jbe
sub
pusha
fadds
lcall
xchg
in
fldcw
lds
lea
xor
fdiv
add
mov
fmuls
mov
xor
pop
pop
mov
push
cwtl
lret
jge
dec
xchg
push
xchg
fists
test
cmp
lock
lcall
push
rolb
xchg
daa
pop
fisubl
xchg
pop
jbe
imul
cmp
gs
and
inc
outsl
outsb
icebp
push
lea
mov
int3
sub
fwait
into
int
push
adc
mov
inc
mov
add
in
daa
clc
cmp
ljmp
clc
xchg
cmpsl
mov
mov
pop
sbb
sub
adc
mov
mov
insl
dec
pop
repnz
iret
sahf
in
inc
movsl
movsl
lea
jl
movsb
xor
daa
inc
dec
loope
or
fildl
xabort
fiadds
push
cs
dec
dec
shlb
add
push
outsb
push
dec
mov
add
faddl
sub
orl
sub
push
xorb
stos
imul
mov
inc
xchg
inc
and
repz
mov
sub
sbb
sbb
push
adc
out
push
and
stos
pop
enter
movsb
lcall
push
mov
xor
sbb
scas
pushf
pop
and
outsb
xchg
ret
adc
rolb
arpl
push
leave
mov
sar
xchg
xchg
jmp
stc
jae
sbb
pop
iret
inc
test
push
int3
push
cmc
into
pushf
int
mov
dec
mov
dec
mov
adc
mov
adc
mov
sbb
sti
jae
fldl
cmp
jae
data16
out
dec
and
xor
sti
lods
dec
mov
push
into
mov
fdivs
push
repnz
push
sbb
lret
cmp
imul
dec
xchg
mov
mov
es
and
pop
jge
jge
pop
fs
cmp
outsl
mov
add
in
outsl
inc
push
aaa
aaa
in
inc
cmc
pushf
mov
add
in
test
xor
jecxz
inc
mov
cld
cmp
into
fsubr
test
loope
xor
aas
pusha
push
call
xor
mov
jno
mov
inc
mov
xor
pop
push
jns
testl
dec
adc
sarb
ja
shll
mov
fnstsw
dec
and
push
push
ljmp
mov
mov
mov
pusha
sub
cmp
aas
movsb
push
pop
dec
sbb
xlat
jae
inc
push
outsb
scas
and
adc
les
inc
mov
pushf
or
cmpsb
pop
fisttps
adc
fs
mov
dec
inc
sub
push
pop
jae
scas
xchg
fstpt
into
mov
jmp
outsl
aaa
push
scas
daa
int
repz
notl
aaa
int3
add
mov
fcomps
mov
iret
hlt
daa
ret
jge
icebp
add
pop
mov
inc
mov
push
fcoms
and
test
adc
jp
call
lods
fcomp
and
testb
pop
sub
cmp
inc
inc
mov
mov
dec
xor
adc
sub
les
data16
xlat
mov
mov
sbb
cltd
lds
dec
or
adc
ja
idivb
fsubr
mov
jb
hlt
popa
repz
emms
sbb
cmp
sub
stos
push
inc
jb
roll
or
jae
lahf
shrl
xchg
test
andl
gs
mov
roll
pop
gs
push
or
int
xorl
push
das
lea
inc
mov
fdivrl
ds
sti
icebp
mov
loope
mov
or
push
add
pandn
xchg
jle
sbb
in
out
lcall
das
cltd
push
mov
cmp
ret
jp
mov
lcall
sbb
push
fidivl
mov
and
xchg
adc
clc
addr16
lret
cmp
in
aaa
arpl
cmc
jns
scas
adc
pushf
cli
adc
xchg
test
dec
rcr
dec
pop
fstps
jge
jo
in
scas
cmp
in
sahf
adc
jnp
ja
and
sbb
cli
ret
mov
dec
cmpsb
movntq
lods
add
and
sub
hlt
sbb
add
pushf
and
stos
mov
mov
iret
mov
xchg
clc
test
lods
lahf
cmp
or
dec
imul
mov
jg
daa
in
sub
push
in
sub
adc
jno
push
aas
cmp
or
mov
cmp
sub
inc
mov
sahf
addr16
dec
repz
mov
and
push
mov
loopne
aad
les
adc
ljmp
out
xchg
sbb
xor
cmp
xor
cmp
lahf
outsl
and
out
jmp
scas
cmc
addl
adc
xchg
xor
loope
jg
roll
sub
lret
into
icebp
ffree
sub
adc
aam
mov
pop
jnp
test
aad
daa
push
data16
pop
mov
or
pop
mov
paddsw
add
int3
aad
push
aad
jg
sahf
lods
cmp
and
sub
xchg
add
movsb
stos
test
jb
jecxz
cmp
push
push
adc
jo
arpl
aas
sbb
in
lods
imul
shrl
jns
popf
mov
insb
xchg
jae
adc
mov
sbb
fisttpll
addb
add
ja
loop
imul
sti
add
mov
movsb
sub
dec
cmp
mov
inc
call
das
outsl
fstps
mov
xor
sbb
mov
mov
subl
cmp
mov
adc
push
cmp
pop
rolb
jmp
stc
xor
jmp
das
in
test
dec
push
lcall
fstpl
jl
push
gs
mov
pop
mov
sbb
or
inc
repnz
or
aam
push
icebp
mov
into
mov
sub
or
jmp
mov
fsubrl
lahf
mov
out
sub
and
cs
ret
pop
ror
mov
cmp
les
jle
cltd
pop
mov
push
cld
leave
dec
mov
xor
repz
aam
mov
adc
dec
mov
add
lods
cmpsb
addl
push
lods
mov
push
mov
cmp
and
dec
into
mov
and
sub
mov
cmpsl
out
pop
js
pop
bound
cmp
shll
lea
gs
frstor
push
pop
add
sub
and
pushf
imul
add
inc
aaa
mov
inc
jbe
fimull
movsl
jns
int
pop
aaa
fcmovu
sub
insl
pusha
cmc
cmp
mov
xor
pop
pop
push
shrb
lods
xchg
adc
xchg
repz
jg
movsb
std
jle
jle
push
pop
sbb
cmp
test
sub
dec
imul
outsl
sbb
cmp
outsl
jbe
dec
mov
test
dec
mov
cmc
push
mov
scas
repz
stos
cwtl
insb
xchg
stc
xor
scas
xchg
in
sbb
mov
popf
xchg
xor
xchg
int
sbb
mov
enter
mov
enter
xchg
or
insl
popf
mov
jns
mov
sub
mov
ja
stos
inc
rcr
inc
xor
popa
add
and
loopne,pn
dec
sub
and
ret
cmp
sahf
pusha
cmpsl
test
jecxz
cmpsb
jb
das
push
or
cmp
and
btsl
inc
inc
jns
or
pop
sbbb
mov
and
add
pop
rcll
mov
ja
mov
cvttps2pi
mov
pusha
sbb
aad
mov
and
loope
adc
pop
es
clc
and
and
fisubrs
arpl
and
mov
and
call
and
xchg
in
sub
mov
mov
fsubrl
fdivl
xor
sahf
cmpsb
xchg
cmp
push
pop
gs
pop
cmpsb
leave
dec
imul
mov
inc
mov
pushl
pop
gs
xor
mov
das
or
or
cmp
push
scas
gs
insl
sub
cmp
gs
jle
movsb
fcoms
mov
cltd
sub
daa
ja
scas
cmp
adc
xor
and
insl
rcrb
pop
in
jno
faddl
in
mov
fbld
adc
mov
leave
std
push
rcrl
add
in
pop
mov
cwtl
cmp
cmp
in
jns
mov
sbb
popf
mov
pop
sarb
enter
inc
adc
scas
push
movsl
in
jo
ret
pop
sbb
pushf
adc
cwtl
mov
in
push
dec
and
pop
sub
popa
push
or
out
adc
aaa
push
lods
xor
lcall
sub
pop
xor
outsb
and
test
pusha
loop
dec
jno
insl
xor
inc
sub
and
clc
sahf
rorl
int3
jno
mov
pop
xchg
ljmp
mov
or
push
xchg
ss
push
sbb
inc
push
fs
stos
popf
jle
xor
or
pop
mov
dec
hlt
out
mov
add
push
enter
out
adc
in
xchg
cli
sbb
and
sbb
push
xor
push
mov
xlat
iret
mov
adc
ja
mov
ret
cmp
fstps
jo
cmp
je
mov
cli
aam
dec
adc
sub
addr16
and
jo
and
mov
xchg
push
and
rcll
iret
sub
arpl
fists
sti
and
push
clc
adc
popf
inc
es
stc
push
pushf
or
iret
into
sbb
into
imul
lret
jb
pop
pop
mov
sub
push
jb
pop
cwtl
rorb
dec
cld
dec
mov
dec
in
stos
jmp
leave
enter
pushf
dec
das
dec
push
inc
into
adcl
mov
call
sbb
adc
fiaddl
int
and
jns
leave
xchg
push
sub
pop
out
jb
ret
lret
mov
movsb
mov
pop
adc
fisubrl
orb
inc
dec
jnp
sub
mov
in
popa
and
fnsave
in
popf
lcall
mov
adc
dec
push
cmp
add
inc
sbb
in
mov
sub
loope
and
mov
cmp
shufps
scas
les
loopne
pop
enter
ds
xchg
xchg
nop
stc
adc
dec
mov
dec
pop
mov
scas
push
cmpsb
dec
mov
rol
cs
outsl
xor
jmp
jne
push
mov
in
xchg
cwtl
mov
aas
divb
mov
call
sbb
scas
inc
sbb
rep
push
jo
imul
scas
loope
or
mov
stc
cmp
stc
enter
mov
adc
cmc
cmp
and
sbb
mov
mov
push
int
int
jne
leave
popa
in
lds
pop
sbbb
push
fdiv
and
adc
push
pop
mov
xchg
xor
fs
sub
xor
jle
fildll
pop
mov
lret
pop
fisttps
and
jno
fstps
pop
lods
cmp
popf
pop
ret
xor
or
test
pop
mov
insb
mov
sub
negb
pusha
dec
loop
in
inc
ds
sub
mov
jo
pop
stos
and
fwait
jnp
mov
aas
push
sub
jecxz
pop
push
xchg
add
mov
cmpsl
xchg
test
sub
shlb
push
loop
add
pop
jmp
stos
inc
jp
mov
or
mov
pop
es
js
in
lret
addl
rclb
data16
lods
fadd
adc
cmp
lock
push
leave
mov
andb
mov
shll
mov
sub
cmp
insb
sub
adc
adc
sbb
xor
std
neg
xor
stos
lcall
xor
push
in
lcall
mov
stos
xchg
cmp
cmp
sbb
xor
inc
out
jp
aam
fdivrl
jo
js
int3
add
fiaddl
incl
test
xor
lods
in
jns
icebp
orl
xor
cltd
in
cltd
cmp
aad
mov
icebp
aas
mov
das
adc
and
add
add
cltd
into
outsl
es
mov
aam
insb
inc
add
dec
addb
and
cmp
in
pop
test
inc
xchg
iret
mov
sub
add
xchg
mov
push
pop
pusha
dec
adc
stos
sbb
mov
dec
ror
outsl
clc
xchg
int
xchg
fs
push
and
movl
adc
int
mov
loopne
addl
adc
icebp
pusha
mov
mov
aaa
inc
dec
mov
pusha
pop
adc
adc
fisttpll
jnp
pop
lods
sbb
lds
cmpb
gs
and
lcall
shl
mov
or
sarb
dec
lahf
or
jl
jle
xor
push
mov
jle
ljmp
cmp
mov
addr16
out
adc
sub
dec
xchg
out
sub
cmp
iret
cmpsl
push
pop
nop
push
jg
pop
push
subl
mov
cmp
inc
cmp
daa
movsb
inc
push
lret
hlt
cmp
les
xchg
fmull
jo
mov
sub
lock
jmp
cmp
adc
stos
inc
movsl
xor
stos
push
add
push
xor
xchg
adc
dec
sub
popf
xorl
addr16
movsl
div
out
sub
test
sti
mov
mov
push
aad
inc
mov
and
cmp
xchg
aam
or
aad
outsl
inc
shll
subb
xor
adc
pop
xchg
jo
mov
sbb
daa
sub
dec
push
inc
xchg
mov
xchg
les
or
mov
test
push
jle
fcmovne
lret
sti
fdivs
mov
and
sub
cmp
loope
frstor
bound
shlb
add
js
sub
push
push
aas
pop
movl
negb
and
pushf
lods
xor
lahf
ficomps
sbb
es
mov
pop
mov
shll
mov
ret
pop
mov
mov
inc
mov
lret
push
push
sarl
add
inc
mov
dec
jmp
clc
cmpsb
in
sbb
fld
nop
cld
dec
subl
mov
and
lods
inc
hlt
call
js
inc
ret
mov
sarl
mov
or
fldt
shlb
pop
inc
dec
ror
push
adc
lret
xchg
insb
inc
cmp
rcll
cmp
loope
bound
out
xor
fisubrs
gs
cmp
fmull
push
ja
idivl
shrl
and
rorb
lahf
fsubl
mov
scas
into
pushl
sub
shll
ret
mov
dec
ds
mov
test
mov
jno
out
jae
ss
xor
popa
flds
mov
insl
and
sub
xchg
jge
cmp
mov
xchg
cwtl
adc
sbb
shrl
in
inc
rcr
test
lds
in
fwait
imul
out
pushf
loopne
dec
insb
sbb
push
stos
or
sbb
lock
xchg
jo
jg
pop
addr16
or
or
jb
pop
lcall
mov
movsl
push
pop
sub
into
js
nop
orl
into
xchg
mov
and
ffreep
or
das
jp
xor
mov
mov
outsl
aad
scas
dec
js
adc
fsts
pop
adc
shll
call
es
dec
pop
push
rep
shl
lea
sub
vmwrite
lea
xor
imul
inc
lods
pop
jne
add
mov
test
or
push
aad
and
lcall
sub
fs
xor
cs
fsubrs
pusha
xchg
jge
and
popa
arpl
pop
stos
inc
movsb
out
rorl
or
lret
mov
or
push
ljmp
hlt
xchg
outsl
pop
inc
insl
jecxz
roll
jnp
shr
inc
or
and
push
arpl
adc
rorb
pushf
test
mov
xor
inc
iret
inc
mov
xchg
sar
outsl
lds
mov
cmp
lea
cmpsl
sub
call
nop
lret
dec
push
das
jo
test
xchg
mov
jae
clc
fdiv
mov
cltd
sub
sub
es
add
lods
add
jge
mov
push
test
and
pop
repz
in
scas
mov
mov
pop
push
mov
divb
mov
ret
nop
or
pop
pop
inc
mov
or
test
aad
jbe
push
test
hlt
cld
push
dec
mov
dec
sbb
aad
fldenv
and
and
inc
orl
loop
dec
pop
jae
push
lds
negb
adc
fisubrs
faddl
cwtl
inc
hlt
xchg
aaa
stos
push
push
inc
int
pop
and
xlat
sbb
outsb
iret
enter
popa
push
dec
fsubr
data16
gs
shrl
inc
stos
clc
lahf
pop
lock
lods
push
adc
pop
aad
scas
pop
jo
inc
movsb
push
jl
inc
inc
andb
je
movsb
rdpmc
sti
js
mov
es
das
jmp
jle
ret
or
enter
stos
idiv
sub
call
add
inc
inc
and
jp
jmp
call
push
cmp
shll
daa
xchg
mov
push
xchg
inc
fimuls
fnstsw
or
xor
ret
fdivrp
sub
scas
addr16
mov
jecxz
push
dec
ljmp
loope
aas
push
mov
push
push
sti
mov
cwtl
push
add
pop
add
inc
xchg
xor
imul
push
xchg
mov
addr16
daa
int3
in
inc
iret
mov
push
sti
icebp
fwait
jae
outsl
push
mov
add
xchg
sbb
mov
imul
mov
icebp
sub
pop
mov
arpl
hlt
fwait
add
add
sub
and
jne
mov
adc
movlhps
sbb
pop
out
sub
js
lock
pop
fsin
dec
mov
xchg
mov
mov
adc
stos
mov
add
mov
mov
pop
loopne
shlb
clc
push
out
lret
cli
mov
or
mov
sub
sti
test
loope
sbb
add
adc
jns
mov
test
aaa
out
out
mov
mov
leave
jnp
pop
inc
push
pop
insl
shr
mov
or
daa
and
and
sbbb
lret
fbstp
jae
mov
pop
imul
push
addb
mov
mov
sub
test
jg
xchg
mov
cld
orl
inc
add
icebp
inc
loope
push
es
rcl
pop
xor
push
fdivr
xor
nop
adc
gs
fnstenv
fistl
mov
repz
cmp
iret
cmc
xlat
imul
mov
xchg
xchg
repz
add
xacquire
sub
and
les
push
outsl
pop
sahf
xchg
mov
sarl
cmp
aaa
popa
rcll
cwtl
sbbb
cmp
stc
fmuls
out
pusha
sbb
int
ficoms
movsb
inc
xchg
lahf
jge
pushf
and
cmp
mov
test
sub
insb
repnz
inc
inc
and
adc
mov
divl
lea
leave
xor
pop
shlb
cmp
mov
sbbb
aas
inc
xchg
jno
push
aas
jge
enter
jmp
xor
cvtdq2ps
push
mov
aad
fucomp
pop
inc
inc
mov
xchg
insl
stos
or
mov
out
inc
or
mov
sahf
imul
jbe
repz
inc
stos
push
cmp
or
sahf
aaa
mov
mov
test
sub
inc
mov
jb
popa
mov
pop
pop
pusha
mov
and
jp
mov
mov
xchg
push
repz
int
aam
pop
lock
enter
loope
fdivrp
dec
mov
lock
in
mov
cwtl
jno
iret
push
adc
jb
dec
xchg
test
mov
dec
mov
loop
int3
and
int
movzbl
and
scas
pop
cmp
mov
shll
mov
push
repz
lret
xlat
add
ret
cmp
aaa
mov
sbb
sub
jo
xchg
or
repnz
test
repnz
or
das
push
mov
scas
push
cmp
das
jb
in
cmpsb
mov
rol
fdiv
inc
jmp
in
cmp
repz
push
mov
pushf
ret
push
sahf
mov
jnp
xchg
out
ret
or
test
mov
mov
mov
cmp
test
aam
addr16
push
push
pop
xchg
cmp
pop
dec
sti
jp
or
lahf
in
in
cmp
pop
cmpsb
rorl
ret
mov
jae
push
jnp
add
sbb
mov
leave
in
add
inc
fwait
pushf
icebp
fsubrp
dec
xchg
xor
add
mov
pop
or
or
inc
aam
rcr
push
adc
clc
xchg
inc
scas
into
xor
shll
xor
fsubl
pushf
into
xchg
push
adcb
adc
xor
jbe
cli
push
and
pop
stos
aas
fsubl
or
sub
pop
jbe
jb
imul
jg
cli
and
xor
je
test
test
push
idivl
add
sub
dec
mov
outsb
sbb
jg
or
das
inc
cmc
dec
loope
stos
sbb
dec
cli
xchg
out
mov
in
pop
insl
ja
std
mov
dec
xchg
test
sub
ror
out
movsl
int
adc
fs
cmp
lock
dec
dec
insl
add
adc
ret
xchg
inc
lcall
ret
dec
lea
xchg
negl
movsb
ds
mov
lcall
lods
xlat
mov
inc
mov
push
mov
loop
mov
push
xchg
sbb
xor
mov
lods
es
inc
or
mov
outsl
sub
clc
hlt
push
push
cmp
push
orl
outsl
push
out
xor
sbb
add
outsl
mull
mov
movsl
div
pop
mov
xor
jl
or
cs
mov
sbb
je
adc
scas
dec
sub
fstl
and
orl
pop
jp
add
or
mov
mov
in
out
int3
fwait
cs
pop
push
popa
jmp
sub
sub
fnsave
out
add
jne
std
push
or
shlb
pop
cmpsl
jne
mov
pop
nop
jo
and
push
mov
sbb
sbb
enter
jbe
sub
scas
pop
xor
outsb
or
adc
testl
sti
inc
sub
ljmp
dec
push
pop
negb
xchg
test
dec
sbbl
inc
repnz
xor
das
movsb
inc
adc
adc
inc
and
or
pop
hlt
bound
sbb
fstpl
pop
pusha
lock
mov
inc
mov
and
adc
jmp
add
xchg
mov
jmp
nop
xchg
add
outsb
pop
insl
xchg
sub
push
sbb
sbb
ret
xchg
xchg
or
cli
repnz
push
adc
add
fisttps
xor
add
aam
repnz
daa
fsubrs
jmp
out
out
lds
and
push
in
jnp
or
sbb
pop
insb
mov
arpl
xlat
jno
fwait
cwtl
sub
mov
mov
addl
dec
xchg
into
ja
out
or
rolb
shlb
xchg
push
cmp
ja
add
roll
pop
sub
inc
mov
sub
push
rcrl
xchg
cmp
ja
ret
add
rcrb
adc
add
inc
lret
cli
mov
push
jnp
out
and
subl
shll
xchg
call
mul
ss
mov
loopne
adc
and
out
push
ljmp
sub
xor
and
push
imul
mov
rorb
pop
push
nop
adc
ficomps
or
dec
cld
pop
xor
jb
cmp
lods
shlb
stc
push
jbe
mov
inc
pop
aad
popa
ss
and
bound
ds
dec
rorl
dec
movsb
cmpsb
scas
push
stc
mov
fwait
cmp
fistl
repz
movsb
test
loope
xchg
das
and
push
jmp
in
dec
mov
std
faddp
in
dec
in
sarb
and
bound
jle
push
sbb
xor
lret
push
and
loope
dec
lahf
mov
int3
mov
jl
out
adc
add
mov
and
test
cmp
push
add
out
lahf
fdivl
aad
push
pop
imul
cmp
mov
popa
mov
cs
pusha
outsl
popf
js
push
xor
xchg
sbb
sbb
jae
sarb
push
mov
jbe
popf
push
fcmovnu
dec
std
add
adc
popf
xchg
push
addr16
add
xor
xchg
sbb
sbb
roll
lret
cld
daa
pop
adc
pushf
daa
mov
aaa
dec
sbbb
jno
pop
nop
insb
and
sbb
jp
jo
hlt
xor
dec
jge
dec
add
scas
lcall
mov
xlat
adc
dec
jl
jnp
outsb
dec
jp
fmull
push
adc
dec
pop
dec
mov
dec
adc
out
mov
out
sub
mov
jb
push
xchg
shl
xor
cmp
ss
icebp
loop
pop
jg
add
sub
out
movsb
aaa
inc
cmp
fisubl
inc
add
sub
jne,pn
das
pop
dec
leave
xor
movsb
lret
and
xor
ret
xlat
pop
pop
pop
xor
mov
and
sbb
cmp
jl
jae
mov
mov
enter
loop
mov
inc
dec
sub
aaa
fs
xor
andl
lahf
or
clc
mov
enter
out
xor
or
pop
xlat
push
je
cmp
loope
inc
ds
push
sub
pop
sbb
stos
inc
jae
inc
push
lret
sbb
push
leave
popf
movsb
hlt
or
push
adc
sbb
jns
mov
nop
or
lods
lock
mov
out
pop
scas
sbb
inc
dec
or
popf
xchg
popf
mov
xchg
cmp
sbbl
sbb
pop
xchg
cmpsb
push
call
dec
pop
mov
and
or
int
mov
xor
jb,pn
fcoml
outsl
test
fcmovbe
lahf
daa
repz
cmpsl
popf
nop
push
jb
out
shrl
ljmp
jb
dec
sarb
popf
sbb
and
inc
rorl
mov
add
pop
jb
insl
pop
inc
push
mov
insb
imul
or
arpl
jne
jp
fstps
mov
lcall
jmp
adc
sub
in
mov
xchg
pop
and
inc
xor
gs
pop
push
mov
push
cmp
pop
nop
jns
and
pop
cltd
pop
pop
cmp
sbb
adc
inc
cmp
fsts
pop
xchg
mov
in
fldl
ja
mov
mov
push
add
movsb
ss
clc
iret
cmp
clc
fildl
ret
mov
jp
in
popf
pop
adc
rolb
jge
rcrb
sbb
pop
cmc
adc
cmp
pop
xchg
dec
mov
pop
pop
mov
mov
dec
fwait
inc
mov
test
daa
outsl
test
repz
dec
mov
sub
cld
sbb
jne
sub
sbb
mov
daa
sarb
add
sub
lods
cli
into
stos
into
shrb
lcall
push
mov
mov
inc
dec
and
lods
sub
loop
sub
mov
ja
shll
iret
daa
push
stos
inc
mov
clc
lret
lahf
sahf
lahf
shrl
scas
sub
mov
loope
xor
arpl
dec
sti
push
stc
ret
sub
inc
dec
cmpsl
call
jbe
jl
aam
repnz
ljmp
jecxz
or
adc
shl
js
push
int3
sbb
std
push
push
arpl
adc
and
dec
decl
inc
in
in
aas
or
scas
pop
inc
xor
jnp
pushf
rorb
or
push
std
xchg
cmc
movsl
and
nop
test
or
or
out
and
rcll
and
jecxz
cmc
stos
lds
and
in
jle
test
test
imul
sbb
mov
cmp
in
mov
inc
jg
int3
cmc
push
sub
js
jbe
mov
mov
cmp
push
das
popa
push
add
sbb
cmp
lea
push
test
nop
or
and
push
sub
mov
je
daa
sub
adc
cltd
xchg
mov
jno
lods
ret
shll
cmp
leave
roll
cmpsb
cs
mov
pop
pop
faddl
push
es
ret
push
dec
mov
shlb
and
std
sbb
bound
pop
xchg
shlb
lock
pop
inc
sahf
icebp
test
push
call
sbb
push
lock
and
cmpb
xorb
pop
mov
das
sti
dec
cli
jb
mov
cmp
loopne
or
mov
dec
lea
inc
aad
mov
pop
mov
xor
or
jle
xor
push
cmc
xchg
push
out
std
lret
stc
lods
xor
mov
pop
jge
xchg
stc
cmpsl
ljmp
fs
rcrb
add
push
xchg
ja
add
jmp
mov
push
push
jecxz
lds
add
scas
ljmp
xor
lret
and
enter
dec
push
clc
aas
adc
ret
stos
or
adc
ljmp
push
popa
fwait
ds
stc
test
dec
ret
fstpt
fdivr
mov
push
les
and
dec
aad
mov
test
mov
into
enter
aam
jno
pop
outsl
pusha
cmp
jno
test
int
ja
loop
movsb
push
dec
mov
mov
dec
hlt
pop
xor
repz
outsb
mov
jb
cmpb
push
xchg
call
test
mov
in
mov
inc
roll
add
adc
pop
or
fidivrs
mov
sbb
xchg
sbb
or
adc
cmp
push
test
cmpl
inc
cmp
in
jo
cli
jne
xor
in
ret
popf
sub
inc
or
loop
push
loop
mov
cmp
iret
gs
push
mov
jmp
ret
insb
or
xchg
jecxz
cmpsl
push
mov
ljmp
mov
cmpsl
xchg
out
ret
jns
std
mull
je
adcl
aam
sub
and
push
or
and
and
adc
stos
adcl
les
inc
stos
and
jge
push
out
and
int3
inc
loop
xor
mov
jp
push
push
jno
jne
movsb
ret
ss
out
xchg
or
pop
aam
lods
imul
mov
xor
sbbb
out
outsl
cltd
and
mov
in
mov
cmc
int3
call
icebp
mov
xchg
mov
aad
adc
mov
call
add
sbb
mov
inc
and
stos
rclb
fimull
std
shrl
jp
lcall
mov
sbb
jb
mov
outsb
xchg
dec
mov
ja
inc
sbb
inc
test
and
test
repnz
or
xchg
jmp
cmp
out
xchg
ds
dec
mov
and
mov
mov
xor
jg
jl
cs
adc
idivb
pop
push
std
jp
push
xchg
cs
mov
add
rcr
mov
xor
sub
pop
xor
mov
pop
jnp
xchg
mov
jmp
sub
scas
push
pop
mov
add
sub
sub
gs
jl
sbb
and
mov
fimuls
mov
fnstcw
icebp
cmp
enter
loope
sub
icebp
sbb
dec
sub
push
movsb
out
fwait
sub
jb
pop
fwait
roll
mov
dec
mov
lods
mov
popa
pop
add
rcr
add
jp
int3
fldl
sti
sub
fcomip
jg
stos
nop
repz
nop
shrb
cmpsl
jnp
xchg
mov
lea
push
movsl
lock
sbb
sbbb
roll
ret
cmp
push
push
and
push
sub
mov
add
xchg
and
arpl
sbb
mov
cwtl
into
mov
iret
mov
test
mov
int
push
push
xorb
mov
mov
inc
push
xor
xchg
add
jl
jae
xor
sub
mov
scas
jno
test
mov
dec
mov
and
bound
sahf
cltd
mov
push
dec
cmc
cmp
or
popa
push
pinsrw
jo
pop
add
lds
outsb
test
pop
dec
test
dec
pop
inc
imul
ret
or
and
xchg
loopne
sub
or
inc
lods
das
add
sarl
cs
fidivl
ficompl
fldenv
pop
sbb
inc
ja
test
insb
in
push
pop
aaa
jne
aad
repz
jl
cmpsb
mov
idiv
stos
lds
sbb
add
jae
pop
jb
roll
add
pop
icebp
mov
fdivrs
and
iret
or
out
iret
mov
outsb
rolb
movsl
dec
lcall
aam
iret
dec
mov
call
or
or
pop
pop
aad
pop
fwait
cwtl
aam
cltd
mov
adc
adc
dec
pushf
cmc
ss
mov
mov
addr16
jmp
sub
gs
incl
sub
aad
lret
lods
adc
lret
mov
sub
inc
push
cs
xor
ds
pop
xlat
dec
pusha
sti
adc
addr16
add
or
mov
sahf
pop
jecxz
stos
sbb
leave
loop
add
scas
xchg
xchg
jbe
xor
and
rolb
mov
divb
and
andb
lock
test
xchg
shld
sbb
hlt
scas
cs
in
scas
sbb
adc
mov
testl
mov
pop
inc
cmp
push
shrl
hlt
cltd
iret
cwtl
imul
es
xor
sbb
jno
mov
push
pop
dec
xchg
sahf
and
rorb
push
movsb
ljmp
fisubrl
xchg
push
clc
push
lcall
xchg
pusha
loop
aad
and
xchg
insl
jne
xor
mov
fdivrs
sub
std
int3
test
xchg
jmp
test
inc
sub
adc
loope
xchg
fimull
roll
ret
sbb
pop
inc
out
or
ljmp
stos
push
sbb
adc
mov
out
push
sbb
adc
xchg
stos
sub
jge
iret
push
adc
callw
out
sbb
out
int3
add
xchg
fmull
mov
jge
jns
cld
mov
fisubrl
sbb
mov
sub
add
cltd
sar
into
movsb
add
cmc
iret
or
ret
loopne
mov
fbld
in
lods
ret
sub
mov
orb
and
sub
jge
negl
lds
inc
arpl
xor
arpl
test
cmp
and
add
sahf
jle
cs
dec
movsl
aaa
scas
testl
mov
sub
stos
fldl
lods
fmul
xor
loop
mov
in
xchg
fistpll
cmp
cmc
daa
andb
adc
or
xlat
push
pop
inc
aad
pop
jae
sbb
xor
xchg
loop
sub
cwtl
and
sahf
sbb
test
rcr
adc
addb
push
aad
mov
inc
in
xchg
jge
cmpxchg
fldt
out
dec
sbb
xor
xchg
cmp
ljmp
mov
insl
pop
clc
mov
jge
dec
cmpl
mov
mov
jb
and
inc
ret
and
imul
inc
cmp
rcrl
mov
ss
dec
push
addl
or
mov
adc
add
data16
xchg
cwtl
jp
jb
add
and
mov
fwait
pop
jb
mov
je
pop
das
loop
jbe,pt
push
dec
mov
imul
cmpsb
popa
sbbl
je
stos
pop
adc
cmp
lcall
dec
aaa
and
add
stos
mov
out
push
pop
js
jb
jne
popf
in
cs
pop
jp
sahf
xor
inc
xor
scas
cmp
pop
mov
adc
mov
lods
pushf
xchg
pop
shll
inc
or
pop
add
test
out
cli
jb
in
push
cmpsb
into
inc
out
pop
out
mov
fsubrl
pop
pop
cmp
test
stc
sub
idivb
dec
mov
add
lea
adc
je
xor
add
loopne
pop
sarl
stos
adc
insl
mov
call
test
push
sbb
cmp
cmp
sub
cwtl
enter
test
xchg
sbbb
push
xor
jmp
mov
mov
mov
pusha
push
mov
fcmovu
out
rclb
testb
cmp
xchg
cmp
test
and
mov
shlb
cltd
sub
fiadds
add
fldcw
sbb
jns
jb
out
fwait
imul
scas
lods
jp
js
popf
sbb
jne
outsb
cld
or
xor
adc
notl
xchg
jg
adc
js
push
push
xor
push
xchg
xchg
pop
mov
rolb
inc
and
cli
outsb
scas
out
popf
test
fistl
xchg
lahf
mov
repnz
out
mov
out
dec
fdivs
insl
popa
fidivrl
adc
xor
or
fdivl
out
pop
jg
mov
test
ja
mov
add
aas
pop
iret
pop
mov
push
and
or
adc
mov
notb
stc
xchg
jbe
mov
sti
sbb
mov
fidivrl
loopne
hlt
xor
pop
cmpsb
jo
mulb
leave
cmc
xor
outsl
cmpsl
and
jl
fcmovu
adc
jnp
jb
sbb
mov
pusha
jae
outsb
add
jecxz
cmp
lahf
add
mov
push
rcrb
scas
cmp
xor
je
and
adc
adc
or
pop
repnz
jmp
cltd
lret
push
addr16
mov
sbb
push
nop
xor
xor
popa
in
fcomps
xchg
mov
call
sub
push
ud0
mov
xchg
movsl
leave
cmp
inc
push
test
sub
push
push
mov
lahf
sub
loope
lret
xchg
lahf
mov
decl
int3
out
mov
mov
lahf
daa
out
in
int3
xor
out
or
inc
and
or
pop
jnp
xchg
in
es
jecxz
push
mov
xchg
xchg
cmpsl
add
je
jnp
imul
out
push
mov
loopne
into
inc
addr16
sarl
pop
fadds
loop
enter
fcoml
sahf
or
and
lcall
insl
popf
mov
das
sbb
roll
mov
sub
jg
cmpsb
jge
orb
push
ret
lcall
shrb
mov
pop
mulb
insb
add
aad
add
cmovae
inc
and
in
push
cwtl
inc
ret
je
addr16
iret
dec
leave
mov
or
cmpsl
repnz
xor
icebp
ret
inc
bound
or
and
xchg
cmp
or
pushf
inc
pushf
jl
add
mov
repz
adc
mov
mov
insl
and
xchg
sub
loope
jp
adc
in
clc
pop
jnp
pop
rcrl
mov
iret
xchg
adc
inc
mov
mov
fdivs
fnsave
jg
jge
iret
dec
push
xor
bound
pop
inc
std
lret
je
stos
out
add
clc
push
jno
sub
and
and
pop
ret
dec
insb
push
insl
mov
or
popf
mov
inc
mov
fstp
inc
loop
pop
ja
pusha
push
in
fcomps
jmp
push
cmp
shrb
and
sub
mov
fidivrs
xchg
adc
imul
add
std
push
cmc
cmc
je
jecxz
addr16
xor
pop
xchg
mov
shll
push
dec
mov
cmpsl
jo
addr16
icebp
dec
adc
xchg
repnz
fisttps
sub
fnstenv
gs
fcmovu
adcl
jge
das
push
fnstsw
idivb
int3
imul
sub
mov
xchg
xchg
in
int3
and
pop
sbb
adc
and
or
ljmp
pop
jns
or
pop
mov
push
mov
cmp
mov
sbb
add
pop
pop
in
xchg
stc
mov
push
js
jecxz
ss
dec
test
sub
cli
add
enter
cmpsl
popf
mov
lret
sbb
dec
push
aas
pushf
in
out
xor
pop
outsb
mov
lcall
mov
cli
adc
mov
daa
popa
fnstcw
sbb
dec
or
and
jbe
in
ja
int
dec
cmp
lods
pop
imul
xchg
or
xor
pop
pop
cwtl
iret
or
mov
in
mov
push
add
sub
sbb
js
xor
aaa
pop
ret
testb
dec
or
mov
inc
addr16
mov
sub
mov
pop
shrb
es
push
ss
add
xchg
pop
xchg
jecxz
dec
stc
adc
es
push
add
out
je
mov
lods
ret
jmp
jle
pusha
xchg
sub
mov
jmp
scas
sub
xor
insb
repz
fisttpl
mov
cmp
imul
es
pop
dec
aas
jmp
stos
lods
dec
xlat
test
imul
scas
sarb
out
fildl
pop
push
push
data16
mov
mov
mov
xchg
lods
push
push
mov
jecxz
sahf
sbb
and
xlat
push
movsb
sarb
out
xlat
inc
into
adc
mov
sbb
xchg
repnz
xor
mov
xchg
fstpt
repnz
xchg
xlat
adc
inc
out
mov
xchg
cltd
imul
stc
fists
push
jmp
icebp
mov
pop
popa
add
outsl
jb
mov
sub
adc
iret
fwait
mov
add
jo
push
in
mov
mov
xchg
xlat
addr16
inc
daa
filds
jmp
std
or
or
int3
rcll
pop
nop
iret
stc
push
sbb
mov
push
out
in
push
outsl
sbb
xchg
mov
inc
stc
call
xor
sar
data16
out
or
xchg
leave
mov
fwait
inc
mov
popa
cmp
push
mov
xor
ljmp
cmpsb
mov
xor
out
push
lret
dec
xor
cltd
pop
and
inc
pop
call
xchg
bound
mov
bound
mov
cwtl
je
rorb
mov
cwtl
test
rcl
xchg
fildl
push
cmp
sar
xchg
pop
arpl
int
in
jb
icebp
insl
test
cltd
imul
cli
ss
mov
ja
mov
dec
or
test
jge
sbb
sub
std
sub
and
push
and
xor
sub
hlt
xchg
fmuls
sahf
mov
outsl
mov
setl
mov
cmp
test
and
and
push
cmp
rclb
push
push
stos
and
adc
sub
dec
lea
loope
mov
xor
jmp
test
sbb
out
js
add
out
insb
mov
out
enter
das
loopne
jmp
cwtl
xchg
xor
sahf
push
add
pop
stos
insb
xor
cmp
xchg
loope
cmp
xchg
xchg
xor
arpl
dec
push
mov
xor
mov
and
loop
add
mov
test
cmp
nop
clc
pop
add
adc
sbb
jne
pop
adc
hlt
add
mov
add
pop
jae,pn
dec
mov
sahf
outsl
repnz
movsb
push
loope
inc
push
mov
test
std
mov
jno
into
pop
hlt
lret
pusha
rcrl
out
imul
pop
insb
jbe
into
pop
xchg
or
test
mov
outsl
jb
aas
outsb
xor
xchg
jmp
or
je
jnp
jmp
inc
pop
out
xlat
fildl
sub
lahf
pop
dec
cmp
mov
sbb
nop
mov
lret
in
push
mov
data16
int
inc
sub
sub
scas
dec
push
cmp
stos
rorl
mov
insb
jg
bound
xchg
pop
cmp
mov
sti
cmp
jp
insb
nopl
xchg
adc
push
mov
repz
ret
out
pop
outsb
lds
add
lea
lea
jb
dec
lcall
xor
add
les
and
scas
jbe
sub
cmp
shrl
inc
pop
cmp
pop
pop
push
arpl
xor
data16
decl
mov
mov
sbb
xchg
xchg
mov
addb
push
daa
inc
fildl
sub
stos
int3
repnz
mov
jge
xchg
fsubrl
sub
daa
fcmovnbe
sub
and
jbe
adc
jmp
xlat
dec
lea
bnd
sub
mov
sbb
jmp
int3
mov
es
in
sub
cmp
xchg
shl
push
mov
loopne
decb
mov
and
in
ret
push
iret
sbb
xchg
mov
and
shrb
mov
xchg
jg
xor
sbb
addl
add
or
sti
lret
xchg
fistpll
mov
push
fsubr
ret
enter
mov
sti
in
ret
aam
add
xor
push
and
sbb
mov
test
jnp
push
into
nop
inc
out
in
fstl
int3
je
fs
dec
sub
pop
clc
imul
ljmp
lahf
lods
ds
ljmp
popa
in
in
sub
sbb
inc
repnz
cmpsl
ret
rolb
iret
daa
out
dec
push
ljmp
inc
mov
out
gs
sbb
pop
sbb
pop
out
adc
jne
xchg
xchg
jb
sbb
imul
push
gs
test
pop
mov
ja
ret
aas
adcb
clc
cmpps
testb
and
push
mov
nop
lea
insl
popa
push
shr
xchg
mov
int
je,pn
push
push
inc
mov
lods
sub
int
and
cmp
sub
shl
mov
push
sub
call
nop
xor
push
movb
daa
lds
cmp
sahf
sub
xor
and
pop
call
xchg
inc
xchg
xchg
cld
xchg
inc
mov
cmc
adc
xor
jmp
nop
push
add
or
movsl
sti
mov
rcrb
imul
pop
test
daa
ss
jne
add
in
or
sbb
aad
ljmp
es
push
std
mov
pop
jp
repnz
mov
jb
dec
adc
daa
jne
loope
and
xor
cs
pop
pop
xor
inc
pop
jmp
idivb
mov
mov
pop
popa
push
pop
cli
rcrb
mov
cltd
dec
in
shl
sbb
sarb
pusha
scas
loope
sbb
es
into
dec
idivl
ljmp
aaa
fwait
and
mov
aam
xor
cld
inc
inc
dec
or
fstpl
sub
test
std
test
sub
scas
mov
cmp
sbb
and
sub
outsl
aaa
mov
sbb
or
adc
pop
fucomi
pop
sti
mov
push
fdivl
clc
sub
mov
dec
adc
xchg
les
mov
jecxz
sub
cmp
daa
sahf
cmpsl
sbb
add
js,pt
mov
lods
xor
pavgw
adc
pop
or
testb
jmp
filds
jmp
pushf
push
adc
add
pop
jns
add
pop
mov
cmp
shll
cmp
xorb
in
das
in
push
jecxz
movsb
and
mov
pop
rcrb
lods
mov
add
and
pop
sbb
jge
loopne
addr16
adc
jbe
push
and
cmp
mov
rcll
or
rolb
cmp
mov
push
sbb
lcall
mov
jnp
pop
mov
popf
adc
cmpl
jl
fwait
jp
out
dec
push
fisubl
loope
mov
int
add
lods
je
cmpl
push
and
ljmp
push
sub
imul
push
lcall
xor
or
loopne
in
loope
aam
pushf
sub
dec
sbbl
inc
mov
cmp
dec
cwtl
pop
lret
pop
outsl
fwait
xchg
cltd
repnz
cmp
sbb
das
outsb
add
call
test
mov
sbb
xchg
jge
cmp
mov
loopne
inc
pusha
cmp
nop
enter
or
pop
arpl
inc
cmc
push
std
fildll
iret
scas
push
out
fisttpll
mov
pop
cltd
test
xchg
je
push
addr16
test
inc
stos
imul
mov
or
pop
in
mov
call
cmpsb
repz
outsl
mov
sub
sbb
out
inc
sub
test
jge
sbb
inc
xor
push
subl
jl
push
cmpsb
and
test
stos
xor
mov
jp
insl
or
or
stc
cli
pop
fcomps
lahf
fs
dec
jne
push
xor
rolb
inc
lock
cwtl
inc
xchg
dec
sub
dec
sbb
jle
pop
push
cwtl
push
shrl
nop
lret
bnd
mov
ljmp
mov
xor
loop
stos
cmp
test
xchg
mov
inc
lret
or
sub
dec
and
xor
out
mov
jl
and
mov
lret
dec
mov
lahf
out
jae
adc
inc
imul
fldenv
adc
pop
cmpsl
fwait
mulb
jp
jmp
mov
test
pusha
in
xchg
mov
jge
jbe
add
pushf
push
inc
jecxz
pop
ret
adc
xchg
out
fsubs
push
in
jl
cmp
jno
mov
imul
pop
mov
dec
jbe
lods
push
sbb
jnp
mov
pop
xor
lds
push
mov
mov
mov
jecxz
and
pop
pop
cmp
mov
mov
bound
insl
fbstp
shr
arpl
xchg
jmp
mov
or
test
dec
mov
mov
push
cmp
jge
fstpl
mov
ds
aaa
xchg
cs
shrb
xor
jle
sbb
mov
jns
dec
sahf
cmp
inc
mov
outsb
or
pop
pop
sub
pop
mov
ret
sti
jns,pn
ror
lods
movsl
sbb
sbb
pop
out
call
mov
icebp
lahf
into
std
sbb
push
ljmp
and
xchg
fcoml
cli
ss
and
inc
jg
mov
filds
or
out
mov
pop
daa
mov
adc
rol
idivl
sbb
and
push
pop
cmp
mov
mov
fwait
stos
repnz
imul
inc
shrb
sti
sbb
jo
repnz
cmp
loop
in
leave
sbb
xor
inc
cmc
jge
lods
scas
push
rorl
adc
push
test
arpl
or
inc
adc
repz
add
push
pop
push
ror
or
push
into
xor
cltd
pushf
cmc
sbb
sbb
and
outsb
out
fsub
cld
pop
cltd
das
jo
dec
xchg
jmp
hlt
repnz
adc
test
sub
sahf
andb
mov
jo
test
lret
aaa
cmc
mov
jno
jns
int3
sbb
es
mov
cmp
push
mov
push
daa
jne
jmp
rorb
mov
jbe
sub
sbb
clc
cmp
cmpsl
and
push
mov
lret
lock
in
xchg
jne
stc
aam
negl
js
dec
stc
fnstcw
in
jle
sbb
adc
out
roll
xor
jmp
cli
dec
repz
inc
lahf
mov
imul
cmp
and
rcrb
psrld
fstps
add
xchg
push
sbb
aaa
mov
clc
jno
xor
mov
lea
divb
adc
jbe
fwait
cli
sti
outsl
jno
dec
jmp
inc
push
outsb
push
cmp
fdivp
mov
xor
mov
pop
or
mov
call
dec
mov
insb
sub
push
test
sahf
lock
scas
std
push
cmp
mov
inc
repnz
push
push
push
xor
fisubs
mov
xchg
insl
mov
shlb
fsub
cmp
jbe
xlat
sub
clc
lret
dec
push
mov
add
jmp
arpl
outsb
cmp
ljmp
inc
daa
out
cmp
mov
add
inc
push
je,pt
lret
arpl
icebp
cwtl
inc
mov
mov
clc
shrl
xchg
popf
fstl
repnz
mov
or
cmp
mov
or
rclb
adc
jnp
rol
cwtl
cli
sub
popf
cltd
mov
movsl
les
mov
clc
push
faddl
out
dec
icebp
jae
mov
push
movsl
je
out
inc
test
inc
mov
es
push
pop
fldenv
aam
arpl
test
enter
xchg
pushf
xor
movsb
adc
sahf
cmpsl
sbb
jno
std
lods
loope
cs
pop
push
in
xor
xor
mov
insb
iret
jle
jb
mov
fs
lea
sti
push
jne
sbbl
ljmp
outsl
mov
jne
xchg
adc
push
out
in
xchg
cmp
popf
inc
pop
add
cwtl
xor
lahf
clc
addl
fdivrl
xor
in
lret
js
adc
or
lea
push
mov
lds
or
xchg
addl
subb
and
bnd
aam
movsl
es
xor
mov
les
bound
fsts
sbb
test
stos
neg
pop
loop
mov
shrl
push
nop
push
scas
loope
cwtl
jo
popa
ret
or
sbb
pop
repnz
pop
in
mov
push
cld
adc
inc
sbb
outsb
das
xchg
movsl
mov
xchg
movsl
aad
push
inc
ljmp
or
push
mov
pushf
or
int3
and
jle
add
jae
test
arpl
and
outsb
inc
adcb
fistps
mov
imul
lea
cmpsl
clc
dec
aam
popf
sbb
push
sbb
roll
fs
shr
cld
adc
jns
sbb
jle
lods
das
push
insb
xchg
fmul
jmp
sti
ljmp
scas
inc
adc
jbe
pushf
sahf
shlb
mov
push
or
or
add
xchg
push
mov
fadd
not
xchg
push
aad
or
pop
sbb
or
pop
jmp
jae
jnp
imul
lock
js
in
ja
orb
psllw
pop
shll
orb
cld
and
scas
jg
lret
out
jae
out
inc
adc
mov
push
mov
cmpsb
clc
mov
fldt
cmp
dec
push
inc
punpckhbw
xchg
dec
dec
inc
cs
fs
mov
add
test
xor
add
push
inc
or
popa
push
mov
adc
xchg
dec
pop
dec
sub
add
imul
sbb
pop
xchg
push
mov
cwtl
pushf
je
dec
loop
mov
push
mov
sub
sbb
test
dec
cwtl
xchg
sarl
cmp
divb
aaa
jp
and
loope
fs
cmp
adc
adc
sub
test
xchg
cmp
ljmp
jo
movsl
push
jecxz
popf
cmp
js
xor
xlat
xorb
insl
ret
iret
push
pop
mov
es
inc
mov
jns
stos
sub
push
and
call
cmpl
mov
and
nop
out
push
mov
pop
xchg
pop
mov
mov
cmp
cmpsb
mov
addr16
icebp
jbe
jge
repnz
clc
fcoml
pop
pop
out
lea
xchg
insb
jle
pop
jmp
mov
scas
cmp
lahf
ss
loop
sub
jg
adc
cmpsb
stos
inc
stc
or
xchg
movsl
ljmp
insl
data16
dec
fdiv
sbb
mov
xchg
pusha
xchg
push
adc
call
dec
in
pop
sbb
jae
mov
mov
xchg
mov
movsb
push
inc
add
sbb
jae
inc
jo
dec
and
addr16
fstpt
dec
ds
int
jb
test
lock
rcrb
sbb
push
cld
sub
jl
mov
outsl
das
ss
ret
pop
test
pop
mov
rcrl
and
jae
and
sub
and
jge
mov
out
mov
shrl
orl
clc
arpl
int3
dec
imul
movb
ja
push
sub
sbb
fldenv
add
jne
jmp
mov
adc
inc
push
ljmp
xchg
inc
adc
jo
data16
je
jmp
test
mov
ret
testl
push
cli
adc
in
dec
add
iret
lods
lods
in
stc
or
mov
fstps
loopne
fistps
repnz
das
push
test
ja
push
lds
xchg
loopne
or
dec
mov
loop
sbb
push
or
fs
pusha
mov
dec
lods
movsb
jp
mov
mov
xor
push
std
sbb
or
cmp
cmp
push
testb
dec
mov
fwait
inc
mov
mul
mov
fimuls
add
loope
jne
xchg
xchg
in
add
dec
mov
sti
loope
rcr
pop
arpl
xlat
inc
loope
dec
jne
out
aad
push
mov
aaa
push
icebp
xchg
dec
int3
pop
bound
mov
sahf
rclb
int3
mov
sbb
xlat
lret
imul
ret
ror
jb
mov
loope
addr16
cmp
cmp
inc
adcb
or
add
add
mov
add
leave
or
shll
xor
leave
mov
testb
mov
cmp
test
push
pop
adc
sbb
sub
pop
jecxz
lods
mov
mov
fwait
adc
xchg
mov
xchg
push
and
pop
mov
mov
cli
jmp
movsl
push
adc
xchg
js
jp
mov
mov
cs
pop
sub
jle
hlt
lock
sbb
or
dec
fnsetpm(287
adc
cmpsb
mov
mov
pop
adc
sbb
stos
lds
daa
sbb
jo
outsb
stos
int
add
sub
shlb
mov
sahf
clc
in
push
aaa
orps
pop
int3
stc
add
jle
popa
add
imul
scas
mov
loopne
mov
cmc
shrl
cld
lea
hlt
push
test
xor
pushl
mov
sbb
or
lods
dec
xchg
mov
and
push
sbb
orl
test
pop
add
jbe
adc
pop
adc
sahf
ljmp
out
and
pop
inc
clc
lock
jecxz
cmp
rcrb
stc
add
xor
lods
leave
movsl
push
and
int3
sbb
adc
mov
ret
mov
push
cld
push
jne
sti
push
enter
cmpl
lahf
stos
ljmp
cmp
cmc
ret
xchg
ljmp
and
int3
dec
pop
das
mov
xchg
imul
ljmp
mov
mov
adc
xor
mov
jge
jb
cli
leave
in
jnp
popa
dec
cmp
xchg
test
adc
into
lahf
pop
dec
mov
cmp
pop
cmpsb
scas
js
loopne
sti
addl
push
iret
test
adc
scas
jle
inc
call
dec
push
adc
xor
outsb
add
ds
shl
sbb
or
inc
mov
insl
addl
cltd
and
add
out
decl
push
leave
sbb
lea
push
xchg
fs
das
inc
adcb
cmpsb
and
in
faddl
shlb
push
and
jae
mov
popa
popa
cmpsb
and
xor
inc
inc
test
mov
insb
idiv
cmc
push
xchg
lock
mov
pop
sub
mov
sub
push
push
shr
xchg
stos
push
scas
outsb
loope
xchg
dec
loope
xor
jns
sbb
in
pop
ja
movsl
ljmp
xor
jnp
adc
int3
jno
daa
cmp
pop
jecxz
push
mov
fdivrl
sbb
popf
paddw
insb
daa
dec
lods
push
popf
repz
mov
xor
jl
pushf
enter
call
in
popf
int
xlat
xorl
sbb
cmpsb
inc
mov
fdivs
sbb
fadd
mov
cmp
mov
faddl
push
pop
clc
sub
sbb
mov
cld
xchg
pop
xor
rcll
outsl
ret
xor
lret
gs
nop
popl
mov
leave
xchg
loope
sub
jmp
jae
je
int3
imul
fsub
jno
stos
sahf
xchg
leave
push
inc
push
and
lods
insl
movsl
add
add
fdivrl
jg
sbb
sub
or
mov
pop
jle
addr16
xchg
push
and
in
sub
leave
jecxz
jnp
add
sarl
dec
adc
clc
push
pop
add
sub
mov
jb
xor
stos
cwtl
pop
pop
mov
mov
loopne
and
sti
sbb
sti
and
out
xchg
dec
mov
sbb
push
sub
cs
ss
shrl
cmc
js
jecxz
test
outsb
pusha
js
in
cli
dec
cmp
out
into
icebp
rcrb
push
pop
loope
sbb
shrb
push
xchg
mul
inc
cmpsw
pusha
lea
fs
cmc
sbb
lods
movsl
xchg
sub
adc
pop
cmc
and
clc
lcall
mov
stos
xchg
sub
stos
ret
lods
shll
not
push
mov
or
cmp
loop
xchg
sbbb
das
xor
stc
cmp
sub
out
fwait
icebp
outsl
jg
addps
sbb
outsb
mov
pop
xlat
adc
jle
arpl
lea
jnp
mov
cs
iret
outsb
jmp
int3
push
out
inc
sbb
sbb
jg
loop
mov
inc
stos
test
repz
cmpsb
pop
lret
or
pop
xor
mov
push
leave
ds
aas
sti
lcall
push
jl
mov
dec
push
test
push
inc
in
mov
filds
or
push
test
repz
or
bnd
les
cltd
jo
test
in
mov
lea
cmp
mov
std
fstl
mov
rol
jo
and
inc
aaa
mov
test
iret
xor
pop
mov
fwait
sub
lea
mov
ja
inc
cmp
pop
mov
mov
cli
inc
fs
jbe
jge
adc
mov
or
cmpsl
lods
pop
int
xor
xor
add
fadd
in
adc
cbtw
sub
sub
iret
filds
push
jne
lret
mov
sbb
je
testb
arpl
add
or
jae
gs
sahf
add
cmp
add
push
xchg
push
aas
xchg
jbe
mov
add
cli
sahf
lret
jecxz
and
add
cs
fbld
cld
dec
in
test
push
or
xorl
ds
notb
jle
xchg
adc
mov
movsb
jns
push
out
movsb
cmp
dec
sahf
leave
int3
cmpsb
xchg
imul
lret
or
outsl
daa
add
ja
clc
cld
movsl
pop
add
cltd
inc
sub
ljmp
mov
int
enter
push
in
clc
popa
cltd
sbb
adc
jp
mov
jecxz
push
adc
mov
push
cmp
test
test
push
push
inc
jb
lods
adc
jmp
xor
incb
mov
and
stc
test
xchg
xor
addl
addb
push
sahf
iret
sbb
fnstsw
cmp
dec
mov
jo
out
or
xor
and
push
and
js
repnz
pop
or
xchg
inc
leave
popf
pusha
fisubrs
dec
out
outsb
pop
fstpt
inc
inc
dec
adc
and
mov
je
outsb
fs
shlb
rcrb
fistps
testl
aaa
inc
movsl
and
xor
cmpl
addr16
insl
xlat
inc
add
and
xor
pushf
add
sub
xor
addb
pop
fistps
dec
cmc
roll
nop
cmp
and
lahf
sub
test
stc
jle
add
dec
rep
xchg
les
xor
mov
leave
cmpsb
das
xor
sbb
clc
jle
inc
mov
mov
adc
mov
push
clc
mov
testb
pushf
xchg
push
enter
push
ficoml
std
mov
insb
je
xlat
outsb
into
enter
inc
loop
push
xchg
lea
push
jns
xchg
loop
stc
fildll
scas
mov
cmpl
clc
push
mov
mov
orb
ret
fsubs
pusha
adc
sub
lods
pop
xchg
xchg
sarb
in
add
in
pop
xor
popl
sar
scas
ja
rcr
and
lret
pop
xchg
sbb
jb
jmp
adc
incl
mov
pop
fimull
jge
xchg
adcl
stos
jmp
mov
xor
mov
mov
jb
dec
add
xchg
aaa
jp
sbb
test
dec
push
mov
xlat
xor
and
lods
je
jge
jae
or
ja
add
push
inc
cmc
insl
into
push
xchg
xchg
mov
jb
jne
mov
outsb
add
jecxz
pushf
mov
test
imul
lods
mov
mov
or
out
aam
int
sub
mov
push
adc
loopne
rorb
and
test
in
fstpl
push
xchg
in
cmp
add
arpl
jle
push
std
or
xlat
pop
stos
mov
stc
fs
pop
rcr
cltd
mov
out
rclb
add
jmp
xchg
inc
dec
fiadds
adc
push
xor
adc
push
icebp
cmpsl
add
hlt
in
jae
ljmp
sbb
roll
pusha
std
mov
adc
cmc
pop
push
loopne
and
push
pop
xor
movsl
or
notb
cli
sub
xchg
in
test
pop
or
push
sti
mov
lods
je
cmpsl
mov
clc
ds
stos
push
add
lret
lods
stos
mov
mov
sub
adc
mov
pusha
fdivrl
pusha
test
movsb
mov
push
popa
fimull
lret
push
mov
fstps
daa
sub
adc
fiadds
dec
adc
das
lret
js
jle
sbb
sti
push
lahf
mov
mov
shl
jecxz
adc
bound
jecxz
loopne
push
add
or
pop
inc
inc
xchg
add
mov
and
inc
enter
mov
test
ret
mov
push
inc
incb
out
movsb
cmp
adc
mov
repnz
adc
out
mov
jb
or
imul
and
dec
loop
clc
add
shlb
push
rcrb
imul
leave
iret
dec
dec
mov
jl
mov
and
jbe
cmc
or
push
jns
ret
lds
sbbl
xor
jge
push
repz
mov
mov
ss
mov
jle
cmp
ret
sets
nop
js
sbb
cli
stos
pop
out
mov
rcl
push
lds
cwtl
rolb
movb
xor
fsts
pop
test
cwtl
mov
pop
ja
pop
sbb
fistpl
addr16
enter
mov
mov
pop
mov
adc
or
push
mov
inc
cmp
cmp
div
cwtl
xor
les
icebp
add
stos
xchg
mov
adc
lea
outsb
sahf
test
rclb
cmp
mov
lods
daa
xchg
push
dec
in
dec
ret
sbb
push
push
pop
pop
lods
cmp
fxch
dec
pop
push
dec
loopne
mov
sub
lds
jo
aas
adc
pushf
das
jae
jecxz
orl
aaa
mov
mov
mov
jbe
test
mov
pop
pop
inc
xchg
mov
iret
jb
mov
sbb
adc
out
fisubrl
mov
inc
push
adc
loop
lret
jo
enter
xchg
lods
inc
mov
popf
or
es
test
and
jnp
ret
cld
stos
popf
cs
pushf
movsb
rclb
mov
dec
mov
addb
insb
icebp
std
popa
cli
je
adc
mov
xchg
push
or
add
mov
repz
lods
push
jmp
outsl
cmp
lods
add
cld
xor
or
push
push
mov
daa
mov
fwait
loopne
mov
out
cmp
add
negb
adc
insl
jno
fsubrp
leave
mov
mov
add
in
or
stc
lds
adc
dec
bound
inc
mov
mov
push
jl
cmpsb
fadd
cmpsb
pop
push
xlat
or
fstps
mov
aaa
fwait
js
xor
in
sbb
or
mov
ret
mov
mov
icebp
fldcw
mov
mov
inc
shrb
cld
clc
jp
arpl
add
add
cs
push
addl
in
popa
xchg
and
cmpl
mov
addr16
lret
jecxz
pop
cmp
insb
out
sub
adc
mov
out
dec
cmc
cmp
popf
int3
movsb
inc
push
cli
jae
pop
icebp
sub
loopne
popa
cmc
out
push
sbb
sti
mov
push
push
xchg
push
cmp
jo
test
iret
push
mov
adc
rorb
cmp
mov
repz
jnp
pop
out
cmpsl
nop
pop
or
fnsave
test
pop
loopne
stos
daa
jne
jp
nop
int3
sub
ja
cmp
loope
mov
repnz
je
jle
push
into
push
decl
test
xor
push
cwtl
rcrb
out
xchg
adc
jl
or
xchg
adc
fs
out
cmpsl
mov
and
test
sbb
and
jo
xchg
mov
rolb
adc
mov
scas
jb
cmp
loopne
jo
xchg
add
movsl
mov
mov
hlt
xchg
or
sbb
mov
dec
inc
add
fimuls
mov
arpl
cmpsb
mov
repz
xchg
fidivrl
mov
movsb
je
xor
clc
inc
rclb
mov
ljmp
xchg
jmp
into
bnd
orb
push
mov
cwtl
jmp
xor
and
pop
jmp
mov
ss
pop
loop
loop
fiaddl
xor
out
sub
cmp
dec
mov
faddl
dec
inc
es
inc
pushf
lcall
lea
cmp
sbb
cmc
mov
jp
in
test
ss
mov
bound
aad
push
in
insl
test
fimull
inc
cmpsb
push
sbb
push
push
mov
das
mov
cli
repz
in
push
pop
pop
shll
push
dec
jb
out
mov
test
xchg
clc
push
cmp
adc
and
cli
outsb
push
jae
das
cmp
pop
dec
sub
lret
sbb
std
js
mov
pop
xchg
scas
mov
notl
lcall
or
adc
push
test
fs
jg
mov
scas
je
dec
or
adc
mov
fs
fwait
lods
popf
mov
mov
rcll
or
xchg
push
and
int
mov
stc
mov
clc
nop
ds
rclb
insb
aam
mov
jmp
push
jnp
hlt
loope
scas
jp
mov
jecxz
jno
sbb
add
mov
dec
hlt
xor
cmp
mov
repz
sbb
dec
je
mov
push
xor
loop
cwtl
jnp
repnz
dec
stc
xor
fwait
lahf
jbe
dec
in
jl
test
pop
ljmp
sub
movsb
xchg
int
jecxz
ficoml
insl
pop
jmp
call
shll
pmaxsw
xchg
dec
cmp
dec
mov
jnp
adc
push
xor
or
lds
jne
sub
or
icebp
fbstp
loopne
jle
add
dec
popa
test
jge
pop
movsb
movq
cmpb
push
enter
test
addb
xchg
test
push
pushf
es
cltd
jae
in
aad
cmpb
cmp
xor
pop
and
fwait
dec
jle
dec
pop
divb
cmpxchg
test
mov
jp
and
adc
outsb
mov
sbb
repz
pop
pop
inc
cmovl
and
lcall
icebp
add
mov
test
jns
lahf
ret
mull
insl
and
cli
out
jmp
cmp
and
shrl
aaa
and
pop
xlat
push
add
into
fninit
mov
out
mov
pop
xchg
adc
push
add
int
sub
lds
out
addr16
inc
mov
and
cmp
push
sub
loop
ja
mov
xchg
aaa
lcall
repnz
les
mov
arpl
mov
adc
daa
push
lods
pushf
in
daa
dec
mov
fstl
loop
adc
fcomps
loope
test
sbb
fwait
dec
cmp
cmp
imul
xchg
in
imul
adc
rcr
test
push
mov
adc
mov
fiadds
rclb
cmp
xchg
cmp
push
mov
mov
int3
pop
sbb
ljmp
aad
cmp
mov
add
jmp
lea
xchg
mov
inc
xchg
mov
or
shlb
ss
scas
cmp
fs
mov
xor
std
cmc
sbb
pop
daa
jo
data16
sbbl
sub
pop
or
nop
jb
jge
sub
xor
jo
cs
dec
test
add
dec
pop
out
add
xor
or
xchg
push
adc
mov
cmpsl
mov
lcall
push
dec
popa
mov
fucomi
inc
lds
cli
jno
insb
mov
mov
fisubrs
sahf
jp
fsubrl
adc
lret
lds
gs
jmp
roll
mov
cmc
xchg
or
sahf
lock
lahf
dec
cmp
sub
stos
adc
stc
cltd
call
sub
and
dec
push
and
sub
pushf
outsl
mov
repz
adc
jnp
cs
dec
add
popf
mov
pxor
adc
mov
mulb
cld
mov
nop
loopne
cmpsl
sub
adc
xchg
stos
mov
aas
cs
shlb
sbb
cmpsb
loopne
loop
cld
clc
repnz
jbe
jg
loop
mov
js
sub
andl
aaa
or
dec
adc
arpl
aam
pop
movsl
fmull
in
mov
sub
cld
call
and
add
mov
xchg
and
xlat
xchg
xchg
sbb
data16
mov
jo
xorl
inc
test
cwtl
imul
popa
add
fdivrs
pop
lahf
ret
std
or
mov
outsb
mov
fsubl
sti
mov
lret
sub
add
and
out
pop
cmove
sub
dec
mov
jns
inc
out
pop
and
push
lds
andb
adcb
arpl
inc
cmp
adc
int
shl
mov
fnstcw
xchg
sub
jecxz
add
or
mov
cmpsl
aam
sub
or
pop
and
xchg
sub
xchg
dec
adc
cltd
inc
cmp
jne
sahf
dec
jbe
pop
ret
dec
enter
cmp
out
fcmovb
or
lahf
repnz
mov
inc
lock
xchg
movsl
mov
pop
std
cld
das
dec
push
repnz
out
or
clc
push
notl
sbb
adc
mov
into
xchg
in
leave
and
out
and
or
inc
cld
fs
mov
icebp
jo
xchg
cmp
cld
into
jne
dec
fisttpll
push
adc
sbb
int3
int
mov
hlt
sub
enter
cld
jns
rcrb
rcrb
jo
inc
out
repnz
andl
xlat
and
outsb
mov
faddl
movsl
adc
fisttpll
ds
aad
ror
std
les
shl
xchg
jo
sbb
xchg
aas
sbb
sbb
mov
mov
lret
lret
add
jae
fwait
inc
outsl
sahf
rcrb
jmp
repnz
lock
sbb
add
xor
dec
call
ret
ljmp
cwtl
pusha
movsb
pop
scas
jns
bound
pop
not
jmp
leave
loope
fwait
adc
leave
loope
xor
imul
pop
test
fwait
jnp
imull
mov
lock
push
push
loopne
inc
or
stos
xchg
loopne
prefetchnta
or
inc
lods
cmp
jae
mov
push
mov
inc
lahf
arpl
mov
inc
sub
jle
jmp
cmp
pushf
cmc
cwtl
mov
jbe
cmp
rcrl
mov
test
mov
and
sub
dec
cmpsl
cmc
lcall
enter
add
mov
cmp
xchg
out
inc
test
outsl
mov
sbb
or
push
or
movsl
stos
fcmove
popf
mov
out
iret
lahf
insl
cmpb
or
pop
lods
push
les
rorb
push
sbb
out
fidivrs
sbb
in
xchg
js
xchg
fwait
cmp
jle
push
loope
adc
sbb
in
jg
movsl
mov
push
cltd
sub
pop
push
mov
lret
sub
insb
xor
and
jne
adc
cs
neg
and
dec
decl
ret
mov
inc
seto
fidivl
loopew
inc
jecxz
popa
sbb
in
xchg
adc
sahf
add
popa
scas
outsl
pushf
cs
lret
lock
cmc
push
add
or
call
repz
jle
aad
xor
pop
mov
xchg
test
lds
jle
rorl
xor
shr
daa
out
ret
fnstenv
jge
inc
push
xchg
popf
lods
movsb
cld
push
pushf
insl
int3
sbb
or
or
popa
xor
cmp
fisubrs
jge
cltd
leave
add
pop
jmp
sub
xchg
lods
mov
sbb
pop
loopne
and
bound
enter
push
test
lods
inc
outsl
sti
enter
jl
push
inc
fiadds
mov
sti
outsb
fistl
pop
xor
cmp
out
xor
xor
xor
xlat
pop
mov
hlt
or
test
jmp
mov
aad
sub
push
inc
inc
out
lret
lcall
gs
cmc
rolb
and
or
jl
jg
dec
adc
out
jge
adc
mov
loopne
iret
cli
std
jg
sarl
or
icebp
mov
push
pushf
cmpsl
jg
fdivrl
mov
inc
lahf
outsl
shrd
sbb
xor
inc
ja
mov
js
jge
pop
and
jecxz
fs
jb
cmp
in
adc
dec
adc
mov
mov
mov
stos
push
fwait
adc
imul
mov
fwait
cmp
xchg
xor
out
mov
lods
sahf
ljmp
das
int
sub
aam
repz
push
pop
hlt
out
test
pop
xchg
mov
pop
push
gs
sbbl
cmp
mov
mov
inc
lret
fs
jo
adc
mov
out
aam
pop
push
lcall
push
rcr
pusha
xor
and
addr16
lods
xchg
rclb
mov
xchg
push
or
dec
adc
push
mov
rol
ds
scas
js
into
insl
mov
out
or
add
loope
add
and
mov
or
fwait
inc
inc
or
cmp
jl
xchg
fdivrs
cmp
dec
inc
cmp
subl
inc
leave
nop
jmp
adc
add
xchg
and
mov
std
cmp
popf
or
stos
enter
sbb
mov
xchg
adc
inc
movsb
or
add
insl
mov
outsl
xchg
loope
mov
hlt
sbbb
cmp
jb
fdiv
lahf
push
inc
push
out
cltd
inc
push
push
push
cmpl
jno
xor
xchg
cmc
adc
or
jmp
mov
adc
cltd
mov
js
mov
jnp
insb
mov
aas
sub
and
adc
shlb
pop
lret
pop
fsubrs
mov
loop
push
mov
lret
out
leave
cmp
or
in
dec
jge
addr16
inc
popa
insl
mov
iret
inc
sub
mov
mov
sub
push
jae
fisttpl
std
xor
add
lret
cmp
add
sub
xor
adc
dec
and
sbb
mov
dec
jo
or
inc
ret
xor
xchg
push
mov
push
pop
mov
jb
lock
lcall
pop
call
mov
adc
pop
rep
sbb
out
and
repnz
mov
dec
adc
fiadds
lds
cmp
cmp
std
outsb
cmp
js
mov
imul
pusha
ljmp
cs
sbb
jnp
or
out
andl
cld
inc
pusha
push
rcrl
jae
fsubrs
hlt
pop
movsl
inc
push
jbe
push
or
pop
ret
jmp
jae
divb
imul
rorl
cmp
mov
mov
aam
cmpsb
adc
out
jecxz
inc
dec
adc
cli
pusha
cmpsl
rcll
cmp
fs
sbb
lret
insl
jecxz
sub
or
movsl
data16
int3
pop
jp
or
cld
inc
push
test
cmp
jp
cmpsb
xor
cld
inc
pop
cld
rcrl
cld
push
lcall
pop
cltd
mov
mov
int3
fnstcw
cmc
jmp
jg
ffree
nop
inc
mov
push
sbb
cli
jmp
cmc
push
imul
add
lds
scas
jle
fistpll
ljmp
mov
add
mov
push
pop
add
fsubrp
adc
rclb
imul
push
fdivp
mov
pop
popa
and
dec
mov
in
sub
or
out
mov
stos
adc
popl
xor
out
dec
jmp
int3
adc
int3
data16
or
xchg
push
pop
inc
orl
inc
pop
or
xor
ljmp
pushfw
push
pop
aam
cmpsl
aam
imul
jbe
stos
hlt
bound
cmp
cmc
pop
or
pop
js
addr16
inc
jle
xor
push
jmp
imul
cwtl
lock
mov
push
rorl
push
xchg
popa
inc
fcompl
aaa
rolb
adc
mov
lods
dec
sub
cmp
inc
lods
dec
dec
adc
enter
std
sub
cmp
scas
adc
sahf
push
movsl
cmp
outsl
sub
mov
in
mov
and
cmp
leave
and
neg
or
sub
push
fs
imul
xchg
push
mov
pop
jb
in
xor
add
cmpsl
aam
xchg
ljmp
pop
sbb
cld
inc
dec
inc
inc
fstpl
aam
adc
out
rcrl
push
mov
out
jge
mov
iret
pop
jb
clc
or
adc
xchg
arpl
loop
xchg
outsl
out
cmc
ss
or
sbb
pop
cmp
pushf
lods
les
sbb
insb
jmp
dec
addr16
das
pushl
and
jb
mov
lea
jns
pop
mov
lcall
filds
filds
mov
test
movsb
gs
cmpsl
aas
jle
nop
bound
notl
ret
xchg
incb
aas
jne
popa
out
ja
mov
dec
enter
ret
pop
xchg
inc
aad
mov
out
and
aad
push
lret
test
fimuls
jnp
xchg
pop
das
mov
sbb
pop
gs
adc
cwtl
xor
ja
sbb
adc
dec
dec
es
out
scas
pusha
xlat
jl
test
loop
les
ficoml
in
data16
sbb
data16
xchg
popa
pop
jmp
jp
repz
pop
mov
es
outsl
xor
or
add
fcomip
imul
lret
dec
aas
test
out
call
sbb
add
in
sub
mov
or
dec
and
dec
or
rclb
mov
sub
mov
and
xor
jecxz
mov
sub
outsb
sub
rorb
popl
outsb
xor
shl
sbb
push
loop
sahf
inc
add
out
cmp
cmp
and
insl
int
adc
mov
jbe
mov
testl
mov
inc
notb
in
and
or
stos
inc
ds
xor
mov
xchg
js
out
aam
jge
xor
testb
scas
xor
sub
cmp
inc
jo
fwait
test
lcall
ljmp
sti
jns
jle
scas
inc
mov
inc
pop
ret
jle
pop
mov
mov
ja
xchg
push
sub
jno
xchg
inc
mov
add
cmc
call
call
sbbb
mov
sub
xchg
jp
push
or
stc
addb
adc
das
push
xchg
or
int
int
add
ret
loope
stc
pusha
dec
enter
adc
shlb
scas
repnz
adc
lahf
lods
mov
push
cltd
xchg
fcmovbe
mov
outsl
cmpsl
jl
mov
inc
mov
movsl
inc
and
jno
fcmovne
and
sbb
or
mov
jmp
pop
xchg
mov
mov
leave
dec
inc
jp
and
or
lods
ss
xor
enter
fwait
push
dec
cs
jae
pusha
daa
scas
js
and
es
ds
dec
scas
jge
in
ficomps
xor
sub
mov
les
xor
inc
dec
inc
fcmovnbe
cmp
mov
dec
lret
notl
cmp
jl
sub
clc
jge
dec
jecxz
das
mov
or
cmp
iret
test
adc
repz
inc
test
fbld
into
scas
out
fisubl
outsl
out
es
cld
or
fcoml
and
xchg
mov
je
xchg
sar
popf
lahf
and
movsl
ficoms
xor
shlb
dec
scas
jmp
int3
sub
cs
dec
shll
push
fwait
ret
jmp
sbb
jo
push
pop
enter
imul
cs
loope
xchg
lret
push
cmp
pop
and
fidivrs
inc
jp
sub
mov
je
in
mov
stos
inc
lcall
in
clc
xchg
xchg
push
decb
test
gs
sbbb
pusha
mov
mov
jns
bound
jno
add
lcall
dec
xor
nop
jns
lret
cmpsb
push
and
jnp
rol
mov
test
enter
or
adc
xorl
sub
jl
cwtl
xor
insl
xchg
inc
inc
stos
inc
gs
pop
mov
inc
inc
sbb
je
jo
pop
das
jl
push
adc
sbbl
out
jnp
mov
xchg
or
and
jecxz
into
scas
bound
pusha
jno
jmp
clc
icebp
call
pop
and
mov
xchg
mov
mov
insb
mov
filds
sbbb
xor
jae
mov
jmp
clc
lds
rol
sub
pop
mov
call
mov
or
push
test
test
clc
pop
sahf
sub
ror
and
addr16
fs
push
inc
dec
dec
mov
cld
cmp
outsb
dec
inc
sbb
mov
dec
int3
sub
mov
mov
imul
mov
test
gs
mov
push
or
pop
call
sbb
and
xchg
divb
cmp
movsb
movsl
jne
das
cmp
lret
inc
ret
jp
push
pop
mov
inc
push
in
fidivs
addb
xor
and
cmp
leave
test
aaa
cmpsb
mov
xor
cs
adc
xchg
shll
and
aaa
pop
push
fdivp
stc
cmp
mov
mov
ret
cli
fwait
insl
ret
movsl
fnstsw
aas
insb
inc
mov
adc
pop
mov
imul
xor
cltd
lret
dec
inc
inc
je
push
sbb
sbb
call
sub
pop
mov
add
sub
inc
test
imul
mov
push
adc
iret
popf
pavgw
imul
cmp
sbb
dec
push
mov
jge
loopne
std
ret
mov
pop
inc
imul
popl
out
mov
pop
push
or
data16
mov
fldt
mov
jno
dec
xchg
outsl
in
jo
loope
popa
xchg
shl
rcll
popf
inc
adc
pusha
outsb
cs
xor
sub
add
out
dec
inc
stc
xchg
fbstp
jns
lds
and
inc
and
into
rcrb
sub
testb
cli
popf
dec
add
movsl
shll
sbb
and
inc
mov
or
gs
xor
cmp
ja
std
adc
dec
mov
dec
mov
jge
imul
pop
lds
lods
xchg
imul
pop
or
xchg
clc
out
jns
dec
pop
pop
dec
cs
test
mov
hlt
fiadds
push
pop
stos
sub
jne
scas
adc
push
lods
pop
into
out
pop
jnp
dec
stos
lods
pop
std
add
sahf
dec
or
mov
lds
jbe
push
sarl
add
insb
mov
pop
sub
pusha
ljmp
out
scas
ljmp
jbe
int3
out
pop
xchg
filds
hlt
sbb
scas
scas
testb
pop
fsubrs
fnstsw
pop
call
sbb
fsubrs
out
push
stc
loopne
xlat
daa
inc
and
mov
inc
inc
xchg
mov
add
test
ljmp
loop
fsubrs
mov
mov
cmp
sub
ss
jg
adc
aad
jle
test
cmp
mov
pop
insl
icebp
addr16
lahf
fdivl
inc
pop
fdivrs
nop
xchg
pop
push
sub
sbb
bound
sub
in
lcall
rcll
xchg
xchg
mov
jnp
inc
push
sbb
push
mov
outsl
rolb
shll
inc
loop
leave
dec
adc
hlt
fimuls
out
pop
jne
mov
stos
dec
inc
or
push
popf
sar
cld
adc
cld
loope
xorl
and
gs
cwtl
sub
cwtl
xchg
xlat
ret
cmp
inc
fs
outsb
jecxz
dec
jge
ja
adc
mov
push
popf
das
mov
mov
adc
sub
and
inc
decl
and
dec
or
pop
call
cli
subb
in
out
aas
or
inc
dec
xor
fdivrl
enter
add
push
mov
fsubr
pushf
sbb
mov
aas
out
popf
sbb
pop
pushf
push
fisubrs
ror
lds
jo
outsb
mov
clc
dec
and
jle
mov
lea
addr16
es
cmp
mov
aad
sub
test
sahf
xor
pushw
pop
enter
in
test
aaa
int
nop
das
dec
mov
into
add
sbb
test
sub
hlt
push
and
mov
pop
adc
push
pop
jg
cwtl
jle
fwait
insb
push
mov
adc
jns
xchg
repz
pop
cmpsl
shr
jl
rorb
movsb
mov
dec
in
or
push
or
jae
cli
stos
popf
cmpb
inc
loop
insl
and
mov
imul
std
hlt
push
movl
sub
int3
mov
cmp
xchg
xor
and
pop
push
aad
imul
lahf
or
fnstenv
dec
add
fwait
enter
dec
inc
cli
movsl
cmc
daa
daa
cs
mov
or
jg
xchg
arpl
dec
aad
adc
loopne
adc
lea
add
idivl
movsl
fisubrl
sbbb
mov
test
leave
shrb
mov
push
aad
mov
cmp
repnz
add
sbbl
sbb
or
lods
cmpsb
xor
sahf
lds
shrb
or
int
ret
repnz
ljmp
push
or
pop
dec
jmp
scas
sti
sbb
cwtl
into
data16
loopne
fsubrp
pop
cld
xor
mov
push
mov
pushf
cwtl
jge
lods
out
ror
out
mov
mov
int
jl
repnz
rorl
jmp
call
cltd
inc
loop
out
pop
jmp
xchg
sbb
lret
sbbl
bound
inc
loopne
stos
mov
pop
add
test
test
ret
mov
addr16
and
lea
fistpll
push
mov
push
cmp
fstpt
fnsave
pop
cmp
pusha
dec
out
dec
inc
insl
loope
xchg
lods
fs
popa
and
adc
inc
cmp
lods
std
mov
sti
sahf
push
ss
xor
jns
into
das
push
test
jne
lods
pop
std
push
jno
hlt
rorb
mov
push
outsl
xchg
sub
jl
add
mov
in
mov
sub
rclb
sub
imul
stc
xor
out
es
out
sub
or
sub
mov
into
dec
mov
clc
cmc
cmp
mov
int3
not
push
in
pusha
fadd
cld
icebp
mov
pop
movsl
sub
imul
into
arpl
lods
into
hlt
lds
cmpsb
ficompl
ja
jp
push
clc
cmp
test
pop
call
xor
adc
jnp
mov
std
dec
push
xchg
int
adc
int
xchg
rcr
sahf
or
or
inc
leave
push
jge
orl
sti
push
or
jge
jb
nop
dec
add
ret
adc
inc
add
inc
mov
outsl
jae
bound
es
fstl
hlt
imul
inc
imul
add
data16
imul
jmp
xor
into
xchg
cmp
add
shll
lret
adc
cmovnp
ds
clc
movsl
pop
sbb
in
addl
xchg
imul
adc
mov
mov
xlat
das
sub
pop
adc
shlb
int
lcall
and
lds
or
lds
in
inc
xor
ret
shlb
push
mov
cmp
repnz
aam
lods
lods
sbb
cld
gs
pop
pop
testb
stos
insb
ja
pop
mov
xchg
jno
jg
push
les
shl
mov
sub
pushf
jg
push
lods
aam
jmp
out
stos
push
rcrb
nop
mov
out
in
pop
fwait
loopne
add
xchg
dec
pop
std
test
je
mov
pop
shl
pop
mov
jle
pop
or
pop
dec
fildll
movsl
xchg
inc
and
popa
outsl
fwait
xchg
stos
testb
push
ret
jle
inc
xchg
push
lret
sub
push
pop
ds
cmpsl
lcall
pushf
notl
in
cld
and
xchg
adc
imul
stos
cmp
xor
ret
ret
testl
push
lods
test
jnp
dec
sbbl
add
xor
js
not
rolb
and
sbb
jnp
call
loope
mov
jb
out
dec
repnz
cmpsb
rorl
stos
nop
inc
jecxz
dec
jecxz
inc
popf
jb
inc
pushf
sarb
xchg
cmp
out
loope
mov
or
lock
pop
mov
cmp
and
in
into
aad
int
adc
mov
lods
pop
pusha
add
in
ret
daa
inc
mov
mov
test
add
leave
mov
adc
jbe
out
nop
das
sub
jns
inc
enter
add
adc
add
add
lret
add
push
repnz
pushf
sbb
xchg
rolb
xor
out
out
mov
xor
in
lods
push
push
jno
outsl
push
adc
jae
push
sbb
pop
and
aam
scas
es
or
mov
pop
out
cmp
daa
mov
mov
cld
cmp
inc
mov
mov
add
std
pop
jb
sub
or
dec
test
repnz
pop
daa
mov
jl
adc
and
stos
outsb
jae
or
mov
xor
das
clc
jl
and
or
sub
lea
mov
test
rorl
mov
jno
lahf
jne
andb
jne
das
pop
or
fidivs
or
popa
and
outsl
in
fcoml
push
mov
mov
pop
mov
fldl
inc
icebp
xchg
scas
push
pop
and
pop
push
das
xlat
jecxz
mov
jle
push
jg
fidivrl
dec
scas
into
jmp
push
jp
cmpsl
xchg
mov
out
bound
xor
int3
mov
inc
movsb
jg
aaa
ret
idivl
mov
rcll
cmp
inc
cmp
mov
and
pushf
jno
add
repnz
rcrl
and
cbtw
lods
mov
fwait
sahf
mov
and
jne
push
lcall
lret
cmp
xor
mov
mov
lock
xor
adc
cwtl
orb
enter
fisttpll
sarb
inc
pop
mov
push
enter
or
fs
int
loopne
sub
int
sub
lods
arpl
adc
jl
push
adc
fwait
data16
shlb
mov
mov
shll
out
cmpsl
jge
cltd
shll
and
lcall
insl
push
incl
aam
or
mov
sub
fstpt
cmp
ds
scas
xor
xchg
rcrb
push
fldenv
sbb
pop
inc
or
scas
lea
push
pushf
icebp
in
or
xor
push
mov
fs
xor
lea
xchg
ficoms
mov
pop
cmp
jae
mov
adc
shr
xor
movsl
jbe
or
dec
lock
stos
pushf
idivb
fnstsw
aam
jmp
mov
mov
aad
jo
sub
and
xor
aas
ret
inc
inc
rorl
cmp
inc
out
popf
add
inc
xchg
test
jb
shlb
psubsw
icebp
dec
movl
inc
mov
sbb
jae
xor
mov
mov
jle
insl
lcall
stc
bound
pop
lahf
pusha
jb
in
jae
adc
pop
mov
mov
xor
inc
loope
sti
cmp
test
and
adc
push
push
sarb
mov
dec
or
jl
and
pop
aam
mov
lahf
cmp
jp
movsl
sub
cmp
push
xlat
mov
out
xchg
orl
mov
ret
push
and
aas
cs
jecxz
scas
in
mov
loop
fucom
cmc
aad
adc
lock
jnp
daa
mov
test
push
mov
mov
xor
push
pop
pop
push
in
call
cmp
out
or
mov
outsl
jg
push
gs
mov
push
daa
shld
ret
jbe
push
movsl
stos
jne
and
les
imul
pop
leave
outsl
push
sub
and
and
dec
jno
out
leave
aad
lds
add
les
pusha
cltd
aad
fwait
mov
fcmovb
xor
pushf
add
test
nop
mov
pop
pop
cmp
jo
pop
xchg
xchg
je
cmpsl
ds
subl
push
jbe
add
test
mov
popa
push
out
cld
out
push
add
jno
nop
scas
jbe
fs
mov
sub
cmpsb
inc
xchg
hlt
cli
mov
pop
repz
pop
push
jl
rcr
stos
mov
push
ds
sahf
sub
xor
cmp
fiadds
ljmp
fxch
xchg
inc
test
inc
stc
cmp
mov
dec
inc
cmp
hlt
fcomip
shll
int3
mov
rcll
cld
pop
dec
push
jl
mov
xor
sbb
js
add
xor
enter
sub
adc
sub
sbb
in
add
and
jae
push
cpuid
shl
pop
shll
sub
pushf
repnz
adc
xlat
fisttps
insl
xchg
sbbb
or
movsl
cmpsb
cwtl
jmp
sub
sub
inc
out
pop
ret
pop
bound
cmp
mov
sti
imul
or
xchg
repnz
jge
jmp
shl
sti
fistps
fld
dec
int3
sbb
mov
mov
and
inc
push
call
add
jns
ljmp
sbb
mov
repz
or
dec
dec
cmp
adc
xchg
cltd
mov
rol
mov
mov
fwait
nop
pushf
sbb
or
xlat
adc
in
fcom
cmp
pop
leave
loop
xorb
dec
fsubrp
lods
pop
das
xlat
mull
jmp
mov
dec
rorb
dec
mov
adc
mov
in
lds
iret
aaa
xor
lds
add
js
outsl
pop
jp
mov
xchg
fsubrl
mov
or
pop
lods
mov
sub
push
aaa
jbe
int
add
adc
imul
nop
cmp
cld
jb
mov
jl
out
ljmp
mov
push
inc
dec
cmc
int3
xchg
pop
xor
jg
insb
and
cmp
dec
mov
clc
fiadds
pop
mov
xor
sub
cmp
jecxz
jmp
mov
pop
shr
pushf
push
dec
andb
push
push
lahf
or
mov
push
bound
add
xor
hlt
add
rol
je
fists
dec
sub
sbb
sub
test
scas
stos
push
dec
mov
das
dec
je
xor
addr16
cwtl
ss
sbb
cmp
or
loope
and
jns
outsl
mov
xchg
and
jmp
mov
mov
outsb
push
call
dec
ficomps
into
std
arpl
rclb
mov
sahf
bndldx
push
pop
pop
stos
ret
outsb
inc
xor
rolb
test
call
jns
inc
xor
cmp
test
mov
ret
xor
cs
add
insl
pop
aad
insl
cmp
jne
push
fmul
sbbb
aaa
rorb
int3
cmpsl
fadds
jg
int3
xchg
sub
dec
out
mov
mov
loop
gs
inc
insb
add
pop
adc
dec
ja
notb
dec
pop
xchg
lea
sbb
pop
scas
sbb
push
ja
push
ja
jo
push
loope
dec
int
hlt
jb
sub
imul
aas
or
popf
or
and
cs
adc
stos
out
fidivrl
fmuls
mov
outsb
hlt
lcall
jecxz
adcl
pop
in
xchg
inc
movsb
sbb
out
inc
mov
bound
js
and
arpl
inc
xorl
aaa
mov
hlt
xor
jbe
xchg
loopne
push
sbb
push
mov
mov
test
pop
outsb
xchg
jl
dec
fistpll
test
test
mov
push
int
ret
xchg
popf
int3
mov
cmp
into
insb
dec
scas
jl
fsubl
and
or
jo
iret
push
jg
into
xor
out
hlt
push
int
outsb
push
mov
imul
pop
js
xchg
inc
xchg
int3
test
fmull
adc
mov
push
ss
icebp
dec
dec
in
stos
int3
leave
sbb
or
pop
pop
pop
movsb
out
in
pop
scas
cltd
dec
daa
mov
mov
xor
aam
inc
xor
xlat
sti
mov
inc
sbb
pop
mov
data16
adc
mov
imul
orl
jg
jecxz
jge
inc
sub
aaa
push
xor
imull
sti
sub
pop
or
or
sbb
imul
test
push
sbb
xlat
sub
xchg
enter
adc
sub
and
fwait
mov
hlt
cld
or
pop
popa
pop
inc
fimull
lahf
and
xor
inc
mov
and
test
xor
test
insl
int
rolb
xor
add
pop
or
lock
aam
mov
push
sahf
cmp
or
pop
into
scas
je
les
push
ja
das
jp
mov
mov
mov
or
pusha
jae
aam
add
dec
scas
dec
mov
out
push
mov
push
aad
adc
dec
push
jae
scas
aam
jle
shrl
dec
push
jae
test
sbb
xor
jb
mov
gs
mov
pop
rolb
pop
mov
jns
pop
adc
inc
insl
fimull
mov
fdivp
addr16
ja
ljmp
sub
push
shrb
cmpl
jp
add
cmp
sahf
add
mov
ret
fldcw
ljmp
movsl
mov
shr
in
pop
data16
sti
pop
pandn
mov
dec
aam
mov
gs
and
frstor
sub
daa
fucomi
push
jl
inc
xor
cmp
popa
scas
xor
fistl
adc
inc
inc
mov
sub
aas
clc
test
or
fcmovnbe
shr
clc
inc
add
xor
push
mov
aad
xchg
lret
add
mov
or
mov
shll
xchg
jmp
imul
in
mov
mull
lods
push
cmp
call
pop
xchg
ljmp
lahf
arpl
push
sub
movl
test
lahf
sbb
inc
push
mov
mov
adc
mov
das
cmc
adc
popf
push
xor
jp
lahf
push
xchg
pop
mov
lcall
xchg
mov
or
push
jmp
fldenv
jbe
xchg
fs
mov
popf
fs
sbb
mov
cmp
je
scas
mov
lock
inc
mov
in
cwtl
mov
ficompl
dec
xchg
mov
pop
mov
aad
addb
inc
inc
mov
sbb
cmp
negl
mov
dec
sbb
rorb
arpl
dec
leave
test
mov
ljmp
leave
xlat
jne
adc
add
pop
sti
cmp
in
jo
loopne
jno
jmp
test
pop
sbb
test
outsb
outsl
xlat
cmpl
std
xor
cmc
mov
push
adc
mov
mov
push
shll
ds
stos
jl
repnz
les
push
mov
sbb
jmp
mov
cmp
and
int
movsb
push
pop
out
or
and
orb
sbb
imul
js
je
xor
test
sub
cmpsb
mov
pop
aas
fadd
incb
fidivrl
xchg
ffreep
xchg
shll
and
mov
aas
push
cmp
xor
pop
dec
mov
shr
push
jae
push
dec
push
sbb
pop
cmp
jle
cmp
das
ret
js
xor
pop
adc
mov
cmpxchg
jmp
cmp
add
sub
adc
inc
jo
add
leave
pop
jecxz
out
push
fisubrl
aaa
pop
cmpsl
mov
pop
cwtl
sbb
cwtl
cs
mov
aam
rolb
dec
lcall
pop
es
mov
pop
jb
adc
test
into
mov
xchg
unpckhps
ss
les
add
cmpsl
fidivrs
mov
adc
fildll
les
inc
dec
mov
fldenv
mov
in
adc
ds
out
add
popf
xchg
sbbl
aam
mov
fdivs
test
push
fwait
sub
es
adc
subl
mov
out
jle
or
push
xor
loope
aad
outsl
adc
out
repz
pop
outsb
lahf
dec
dec
cld
or
nop
repz
bound
stc
inc
jo
shl
or
xor
mov
xor
inc
mov
mov
sub
clc
pop
shr
add
inc
or
jl,pt
mov
fadds
iret
js
xchg
push
or
pusha
pop
jl
outsb
movsl
cmpsb
outsl
xchg
ret
adc
and
stc
xchg
mov
dec
call
rorl
adc
pop
mov
and
cmpsb
ja
jmp
xchg
leave
ret
ss
mov
xor
xor
push
mov
xor
insl
jns
inc
and
in
and
inc
in
add
add
jns
flds
cmp
inc
mov
scas
movsl
xlat
ss
leave
push
adc
ret
xchg
mov
imul
pop
cmp
std
mov
movb
dec
daa
fucomip
cltd
inc
push
push
fmuls
ret
add
cmp
sarl
dec
hlt
pop
add
mov
ret
es
pop
xchg
add
mov
stos
mov
ret
xchg
cli
std
movsb
bound
cmpsl
mov
repz
dec
push
mov
mov
insl
push
sbb
fstl
inc
adc
xor
mov
xchg
adc
dec
add
pop
sub
inc
pop
inc
lods
mov
push
and
xchg
mov
xchg
push
and
inc
pushf
sub
pusha
ret
mov
pop
push
mov
int
out
lcall
shlb
sub
push
jo
and
lods
not
jge
inc
mov
aas
jae
sbb
and
mov
mov
or
out
shll
sub
insb
arpl
inc
test
mov
jno
cmpl
test
mov
idivl
bound
jge
xor
into
fxch
outsl
loop
xchg
lahf
pop
shrb
mov
or
loope
nop
sub
das
iret
lahf
xchg
xchg
sarl
rcl
ja
sub
jne
cmp
inc
test
dec
dec
cld
in
sti
subl
fsubr
repnz
repnz
jae
dec
int
push
scas
idivl
lcall
sub
mov
and
push
xchg
stos
in
xchg
repz
fldcw
jne
dec
fdivs
notb
roll
inc
xor
add
fdivrs
ljmp
shrl
stos
xchg
stos
mov
mov
enter
mov
out
lahf
cmpsb
insb
cld
cmc
jo
lcall
mov
xchg
sbb
mov
out
sub
sahf
push
aas
mulb
fisttpl
xor
and
mov
mov
mov
imul
lret
scas
mov
mov
daa
xor
mov
stc
cld
imul
or
movsl
mov
fmuls
subb
gs
mov
ret
xchg
test
loopne
enter
mov
cmp
mov
add
sbb
mov
adc
pop
std
repz
and
fcoml
mov
xor
sbb
aaa
enter
sub
xchg
jle
ret
xchg
adc
orb
jae
int
loop
push
mov
xor
test
ret
sub
lcall
pop
scas
stos
mov
orb
sbb
jno
cli
mov
loopne
xor
mov
lret
mov
push
scas
push
or
out
xlat
sub
testb
push
pop
rcll
mov
xchg
inc
cli
sub
cmp
aas
pop
add
pop
int
or
push
test
fs
jmp
in
push
in
std
dec
fisttpl
leave
fcoms
xor
mov
fwait
push
std
lock
or
adc
sub
mov
mov
pusha
mov
mov
or
or
out
rcll
cmp
aam
sub
mov
sbb
hlt
mov
add
adc
dec
and
cld
add
jge
or
mov
sub
sub
sub
loope
xchg
lock
sbbl
stos
sarb
and
ret
pop
sub
ja
leave
imul
shl
jle
xchg
jecxz
das
mov
das
arpl
loop
jns
xchg
xchg
pop
sbb
and
pop
or
push
imul
push
fadds
and
stc
push
call
fstpt
aam
or
mov
das
and
in
mov
je
int3
mov
arpl
es
das
lods
xchg
cmpsb
out
sarb
in
and
push
push
stos
mov
mov
fwait
pop
fnstenv
fists
mov
addr16
mov
test
mov
sarb
shlb
jmp
scas
sahf
inc
fiaddl
pop
addr16
add
inc
add
gs
push
imul
cmc
push
insb
pusha
test
or
push
pop
mov
icebp
lahf
lods
adc
cld
cs
and
jbe
push
into
arpl
aam
push
int3
dec
fsubrl
jle
jge
cmc
in
addl
pop
xlat
popa
call
int3
popf
imul
js
push
stos
dec
repz
xchg
jno
mov
addb
push
enter
orb
xor
sahf
fwait
mov
insl
mov
sub
mov
lds
idiv
xor
clc
pop
adc
jno
xchg
shll
in
shll
testl
cmpsl
mov
test
xchg
notb
push
cmp
push
enter
and
stc
fcomps
out
lahf
pop
xchg
dec
xor
insl
ds
idivb
sbb
es
push
dec
adc
test
movsb
adc
and
add
inc
push
jne
xchg
inc
repz
add
or
mov
sub
stos
repnz
idivb
and
subb
loop
test
movb
mov
stos
cmp
cmp
mov
jne
int3
repnz
dec
jno
pop
push
div
cmp
push
push
or
pushf
and
xchg
xor
push
sarb
cld
mov
dec
mov
xchg
lods
add
test
mov
jns
fucomp
adc
das
loop
divb
loopne
sub
andl
ret
pusha
jge
loopne
mov
decl
clc
mov
scas
mov
lods
add
jg
faddl
out
das
push
mov
and
sub
sub
jmp
or
jnp
outsl
xchg
inc
jne
test
xchg
mov
sub
test
jl
mov
adc
je
ljmp
xchg
ljmp
sahf
or
les
mov
fnop
cmp
lret
fcoml
ficoms
xor
cmp
inc
rolb
xor
jg
pop
cld
inc
shrl
push
popa
hlt
inc
push
andb
sahf
inc
mov
fsubrs
xlat
out
xchg
cmpsb
out
sarb
jg
movsl
cmp
sbb
push
pop
dec
int3
cltd
lcall
push
add
insl
jbe
leave
fisubs
outsl
cmp
xchg
test
icebp
popa
cmp
fstpt
data16
lahf
dec
mov
adc
fmull
ficompl
push
leave
pushl
int
adc
mov
call
xor
adcb
into
dec
mov
sub
sub
and
sti
jg
push
sti
idivl
es
xor
ficoml
ror
push
lret
cmpsb
loop
shl
subl
cmp
cs
sub
pop
sub
lock
adc
out
loopne
es
fidivrs
cmp
sahf
or
loop
fistl
lret
dec
cmp
pop
outsl
jmp
xor
mov
repnz
lock
dec
inc
ficoms
push
incl
xchg
leave
int
ljmp
mov
push
popf
and
sub
dec
fadds
clc
sub
popa
pushf
mov
movsl
lock
xchg
addr16
scas
lock
and
aad
fsubs
in
insl
dec
popf
es
jno
cmpb
adc
lea
repz
cmpsl
jecxz
ljmp
xchg
sbb
add
insl
and
out
movsl
xor
xor
cmp
or
iret
cli
test
mov
mov
push
mov
icebp
or
sub
shlb
sub
je
lret
pop
cmp
lret
jae
fnstcw
icebp
or
pop
movsl
dec
sbb
fwait
ljmp
lret
loop
sub
cmc
je
pop
nop
lcall
push
orl
jnp
adc
out
xlat
test
sbb
push
jecxz
xchg
pop
lret
or
or
xlat
ds
jb,pn
shr
or
int3
sub
dec
mov
cld
call
sbb
imul
push
insb
icebp
outsb
xchg
xchg
stos
push
xlat
pusha
mov
nop
ret
pop
sub
inc
ljmp
mov
fcoml
pop
adc
sbbb
pop
inc
enter
aad
out
imul
jae
and
test
xchg
mov
jae
lret
mov
nop
pop
ficomps
sti
pushf
repz
daa
push
insl
sarb
jecxz
es
je
mov
popf
hlt
aad
xchg
sbb
jo
sbb
jae
insl
adc
clc
sbb
inc
adc
jge
jbe
lods
cli
mov
adc
mov
scas
orl
andl
mov
das
cmp
mull
mov
jbe
cs
mov
and
aad
inc
push
ficoms
jno
insl
cld
dec
mov
loop
cmc
xor
popf
cli
pop
sub
movsb
cmp
pop
jge
mov
or
out
jnp
or
cld
mov
jp
lods
xchg
cmc
js
pop
push
in
inc
dec
mov
pop
in
pop
test
xor
or
cld
lds
pop
inc
testl
lret
jae
roll
jnp
ffree
out
in
pop
xchg
in
xor
pop
jle
ds
int
mov
sub
dec
movsb
mov
dec
xor
stos
sarl
adcl
jns
dec
xor
les
test
dec
mov
fldl
and
xchg
pop
mov
movsb
pop
addr16
push
cmpsb
ss
fmul
push
pop
jns
sti
aam
and
mov
or
data16
mull
out
insb
ret
ret
mov
rcrb
inc
fsubr
pop
pop
xor
test
mov
mov
jne
arpl
lcall
hlt
movsb
mov
push
dec
js
inc
push
jae
sub
int
cmpsl
lods
aas
fistps
fdivs
mov
mov
in
xchg
dec
test
adc
sub
mulb
add
sub
jae
jmp
outsb
adc
push
sub
pop
hlt
and
lret
add
sbb
pusha
jle
icebp
add
in
aas
aaa
mov
lods
inc
daa
ljmp
sbb
cmpsb
jnp
and
sbb
stc
lahf
test
jae
sbbb
sub
insl
inc
sti
adc
aaa
xchg
stos
js
test
xchg
adc
les
xor
sub
or
adc
aaa
dec
xchg
xor
inc
test
mov
clc
ds
mov
jno
jl
sub
mov
movsl
xchg
test
shll
xchg
cli
into
jl
lods
dec
mov
outsb
inc
cmc
inc
insb
xchg
mov
push
enter
mov
in
mov
sbb
gs
mov
or
popa
lret
pop
std
mov
jno
ljmp
jge
in
lea
aam
inc
dec
mov
mov
inc
aad
popa
push
xor
adc
jno
lds
std
mov
ja
mov
jb
jne
sbb
or
call
dec
xchg
shrb
cmc
jecxz
adc
xor
pop
dec
and
add
rol
lods
test
daa
imul
hlt
out
std
nop
cltd
sbb
jmp
notb
pop
imulb
ret
fstpt
iret
ret
inc
cltd
sub
pop
jo
fsts
mov
pushf
jns
jns
xor
inc
aaa
mov
push
shrl
bound
cli
shl
add
push
xor
data16
mov
push
xchg
ja
push
mov
sbb
shr
mov
dec
in
data16
pusha
mov
jb
xchg
lahf
out
push
mov
lahf
mov
pop
outsb
sub
ret
and
notb
sbb
dec
push
cmpsb
lds
pop
les
icebp
daa
movb
xor
arpl
pop
adc
pop
js
jno
lds
outsl
xchg
dec
sub
push
lods
push
stc
imul
inc
in
incl
shrb
mov
cmp
mov
out
roll
cltd
mov
je
and
cmp
add
scas
and
cmp
add
cmp
mov
movsl
clc
add
mov
dec
jl
loop
leave
mov
loopne
jle
push
inc
loop
sti
pop
insb
outsl
je
jo
rcrb
pop
xchg
out
test
push
mov
push
rep
xchg
mov
dec
add
jecxz
xor
subb
adc
movsl
rcrl
mov
cli
inc
jle
stc
push
mov
or
ss
jecxz
fcmove
jbe
xor
jmp
add
out
push
fs
pop
xchg
in
movsl
fmull
sbb
out
jbe
xchg
add
pop
arpl
movsb
push
jbe
mov
xchg
mov
int3
roll
out
mov
les
mov
sahf
xor
or
jle
jl
jno
push
jbe
gs
loope
jp
dec
mov
sbb
pusha
adcb
mov
adc
lods
adc
dec
jmp
lods
adc
lcall
mov
mov
mov
ja
call
aaa
adc
mov
cmpsb
mov
inc
mov
clc
jno
loope
aad
ja
or
aam
mov
push
mov
jns
inc
mull
pop
jg
out
in
dec
cmp
adc
or
adc
fistps
lcall
cltd
push
mov
scas
lock
lahf
mov
out
adc
jp
xchg
push
cmp
dec
push
inc
int3
pushf
roll
inc
repnz
leave
aas
loop
inc
or
iret
add
adc
popf
loope
roll
mov
pop
jns
sub
jp
aad
dec
cmc
cld
inc
les
inc
mov
ret
sbb
mov
push
push
xchg
mov
xlat
mov
sbb
fnsave
aam
ret
movsl
notb
addb
out
loope
stos
fildl
push
lods
adc
and
add
and
test
or
repnz
sub
xlat
inc
cwtl
dec
mov
stos
and
adc
cmp
cmpsb
cmc
lods
cwtl
pop
sub
test
imul
into
xor
clc
or
dec
dec
ss
jnp
imul
aaa
pop
inc
mov
jno
sub
ljmp
sbb
xor
sbb
dec
and
lds
and
pusha
pushf
sbb
and
fcmovbe
push
mov
sahf
testl
rcll
mov
sbbl
sbb
add
inc
stos
js
push
out
mov
adc
aas
ret
fldlg2
loope
sbbl
loop
cli
mov
daa
mov
movnti
mov
mov
into
arpl
push
shlb
aaa
jnp
out
add
add
push
mov
inc
int
push
aad
push
push
sub
leave
out
pop
int3
mov
jbe
idivb
gs
sbb
repnz
lahf
mov
imul
inc
mov
gs
out
push
add
xor
loopne
and
jnp
out
inc
es
jb
loop
fistl
mov
notl
aaa
and
cmp
out
cltd
jo
jl
test
xchg
mov
pop
fldenv
sub
cmpsb
cs
pushf
imul
inc
aad
es
lock
ss
jne
pushl
sahf
aaa
dec
arpl
pop
inc
jnp
sbb
mov
dec
mov
daa
inc
out
outsl
adc
jns
mov
push
sub
cmp
cs
add
or
adcl
idivl
pushf
repnz
fxch
outsb
or
aam
clc
xor
out
pop
aad
sbb
popa
xor
pop
inc
push
stos
adc
xor
adc
repz
pop
cmp
mov
pusha
in
jge
rclb
shrb
mov
adc
ss
or
stc
sub
sbb
push
out
adc
xchg
push
dec
jo
push
xchg
pop
mov
sub
dec
pop
inc
mov
repnz
push
cmpsb
cs
je
repnz
ret
add
jg
int3
nop
subb
push
push
test
pop
neg
outsl
in
and
imul
cwtl
sub
icebp
in
xor
dec
sub
xchg
cmpsb
jecxz
mov
sub
cli
lret
out
mov
push
daa
and
add
sbb
lret
lea
jns
pop
sbb
or
daa
enter
out
das
jecxz
jne
testl
lods
int3
je
mov
push
nop
dec
xchg
push
leave
or
bswap
or
out
loop
xlat
xor
sub
pop
sahf
cmpsb
xor
or
mov
cs
push
pop
lods
jnp
movsl
cmp
adc
mov
sti
out
adc
or
int
mov
mov
mov
mov
fnstenv
push
add
insb
mov
int3
hlt
into
dec
sahf
ja
ja
xchg
fcmovnu
clc
mov
aad
push
push
mov
dec
mov
push
orb
inc
push
mov
mov
out
into
dec
and
push
ret
add
test
pop
xchg
das
sub
les
test
imul
repnz
push
sbb
xor
dec
je
cld
push
or
cmp
mov
stc
adc
insb
push
xor
mov
or
in
inc
pop
in
gs
hlt
icebp
scas
test
mov
add
hlt
pop
sub
fcom
jp
pop
xchg
sbb
mov
inc
das
push
ret
push
in
inc
add
adc
div
mov
rorb
inc
fwait
int3
popf
sub
cmpsb
dec
in
push
iret
pop
cmc
popa
jge
fbstp
cwtl
jecxz
fadd
dec
arpl
cld
out
xchg
fs
mov
aaa
cmp
xor
sahf
xor
pop
mov
loop
jmp
aad
push
lcall
test
add
sub
int3
push
jmp
add
sti
sbb
push
pusha
dec
repnz
loopne
movsl
outsb
inc
cwtl
push
or
in
mov
in
jb
rcr
push
fcomps
cmp
out
repz
cmp
inc
shlb
js
mov
int
jbe
decl
cmp
in
or
mov
xchg
lcall
lcall
insl
push
jge
ret
pop
ds
mov
push
in
mov
push
mov
cmp
sub
and
sub
push
in
dec
jne
mov
fdivr
pop
out
arpl
mov
dec
in
jbe
mov
or
cvtpi2ps
mov
dec
lock
pushf
lret
rcrb
add
cmp
dec
ret
pushf
daa
sub
pop
loop
adcb
push
and
lcall
idiv
hlt
fistl
repz
mov
dec
sbb
pop
movsb
scas
xlat
insb
pop
jns
xor
or
inc
sarl
daa
movsb
or
sub
mulb
cmp
cmpsl
ret
pop
cmp
dec
and
sbb
mov
stos
pushl
xor
mov
stc
mov
sub
xchg
mov
mov
mov
dec
jo
in
mov
lds
lret
ret
test
fsubrs
jnp
inc
rol
fs
and
adc
movsb
pop
in
hlt
loope
jmp
adc
repz
and
cmp
or
in
in
int3
idiv
mov
sub
test
aas
mov
cli
xlat
mov
cltd
jecxz
nop
xchg
iret
test
scas
fsubrs
cwtl
xchg
inc
gs
inc
fisubs
push
xlat
out
xchg
test
rclb
inc
ficompl
mov
inc
pop
jns
clc
xor
mov
dec
inc
rcrl
into
fidivrs
in
nop
cs
xchg
movsb
mov
lret
sbb
and
aad
mov
push
pop
insl
dec
jns
jg
jnp
clc
fcmovnb
insb
std
push
jp
lods
dec
inc
out
call
rcl
aaa
xchg
ret
mov
sbb
sbb
inc
cmpsb
cmpsl
xlat
cwtl
pop
add
jne
cmp
mov
xchg
fidivrs
cmp
jne
jnp
pop
ret
jecxz
xchg
fsincos
fwait
js
push
mov
outsl
scas
and
fld
push
sub
pop
fs
jp
adcb
fadd
in
pop
dec
outsl
iret
scas
inc
fwait
jbe
or
xor
mov
pop
das
out
les
inc
aas
int3
xor
push
sti
out
lods
pop
pusha
xor
sub
mov
jle
es
push
mov
imul
dec
cwtl
shrl
dec
and
xor
xchg
outsb
leave
popf
xor
lea
ret
sbb
in
jge
aad
fcom
arpl
jo
mov
hlt
xchg
ret
mov
mov
cmp
or
sarl
jae
aam
adc
or
hlt
sbb
and
sbb
js
push
jmp
imull
dec
push
add
in
mov
dec
mov
add
mov
sti
jns
xchg
and
pushf
push
std
andb
mov
sbb
les
inc
push
pop
add
je
int
fdivl
xchg
sub
fstl
pop
xlat
jnp
xor
andl
fwait
js,pt
sub
xchg
pop
repz
push
push
mov
jge
xor
rcrl
or
stos
imul
das
jo
push
mov
pop
mov
movzbl
inc
push
insb
adc
lock
icebp
cmp
mov
add
xor
lret
xor
pop
xchg
mov
sbb
or
mov
imul
inc
pop
or
push
test
push
loopne
lods
and
dec
std
push
xorl
mov
cmp
cmp
outsl
test
ds
push
out
iret
cmc
adc
sahf
xor
hlt
sbb
clts
sahf
mov
frstor
xchg
lcall
add
mov
dec
mov
leave
xor
fxch
xchg
xor
fs
int
mov
ds
shlb
add
or
jnp
nop
pop
cmp
xchg
push
cwtl
push
push
test
push
dec
or
mov
aam
repnz
push
and
cwtl
sahf
daa
aam
in
adc
inc
std
pushf
add
push
daa
repz
int
in
and
outsl
ror
dec
jne
into
test
pop
inc
xor
mov
imul
jnp
insl
cmc
inc
data16
mov
sub
xor
pop
mov
mov
add
mov
jno
outsl
shlb
pop
xchg
xchg
mov
dec
xchg
adc
lock
sbb
push
mov
and
jge
sub
cwtl
mov
mov
sar
mov
and
xor
ds
out
rolb
scas
fnstsw
sbb
sahf
push
lods
pushf
popf
mov
mov
andb
shlb
pop
inc
push
scas
or
cmp
lock
adc
fmul
cmc
pop
ret
les
daa
loop
imul
jb
pop
mov
mov
lahf
adc
or
pop
rcrl
push
arpl
or
shr
adc
or
xor
sahf
push
lods
xor
sbb
or
and
outsl
mov
pop
dec
sub
loope
and
ficomps
sub
xchg
fbstp
and
inc
mov
aam
dec
pop
xchg
roll
aam
loop
je
pop
subl
fcmovnu
gs
mov
loopne
mov
mov
fbld
movsl
js
xchg
xchg
mov
cmp
lret
insl
push
or
test
in
xchg
or
test
adc
mov
jne
cmp
mov
aaa
rol
mov
call
jg
out
dec
jnp
inc
scas
fistpl
pusha
push
xor
popf
leave
sbb
pop
inc
setg
std
push
in
jp
push
in
add
push
stc
cltd
xor
jge
insl
or
dec
sbb
in
fmuls
std
mov
lods
cmc
pushf
jae
sub
jno
sbb
int
fmull
dec
mov
fnstsw
mov
push
mov
mov
add
jle
dec
movsl
and
or
jle
scas
mov
int3
lret
mov
arpl
xor
and
lret
xlat
fs
cltd
sub
xor
shlb
or
adc
and
pusha
sbb
inc
pop
push
inc
fisttps
cwtl
test
jp
ss
icebp
test
mov
repnz
adc
xchg
pop
and
adc
js
cli
gs
xchg
sbb
clc
push
rolb
pop
xor
nop
movsl
out
imul
cld
fcomps
shrb
scas
jno
fsubrl
xchg
lods
adc
sub
gs
xchg
adc
loope
orl
in
int3
xchg
and
cmpsb
adcb
xchg
push
fwait
inc
push
add
cmp
push
and
jle
js
inc
xchg
mov
subl
jne
jg
fidivrl
inc
jmp
sub
cli
sahf
fidivl
or
andl
lahf
inc
inc
test
arpl
int3
push
mov
movsl
xchg
test
push
call
mul
mov
inc
jae
popf
mov
adc
imul
arpl
dec
or
push
out
scas
push
cld
fwait
or
stos
mov
inc
call
pop
xor
mov
shrl
mov
test
dec
test
pop
mov
push
pop
adc
xor
lods
mov
stos
pop
daa
jg
lret
xchg
cmp
push
jle
outsl
adc
fxch
and
sub
nop
in
mov
cwtl
pop
imulb
ficoms
mov
and
sti
das
popa
mov
insb
sahf
fistpll
sub
add
js
jl
inc
adc
push
adc
ljmp
fidivl
js
sub
lock
mov
or
cwtl
or
inc
jp
sub
adc
lea
cmp
loope
pop
cld
enter
fwait
pop
std
xchg
jo
xchg
sub
outsl
jbe
fmull
push
pusha
test
aam
xchg
jae
scas
ficoml
stos
pushf
pop
stos
stc
cmpsl
outsl
jb
adc
bound
lods
inc
loopne
adc
fisubrs
xchg
inc
cmp
mov
outsl
push
stc
xchg
aam
and
dec
inc
mov
sbb
mov
jae
xchg
dec
lret
aas
inc
dec
inc
add
adc
mov
ss
xlat
aaa
fstl
testb
lds
mov
mov
mov
xchg
shll
ja
aam
call
add
rol
and
add
gs
aam
or
push
out
iret
cmp
or
xlat
iret
popa
sbb
mov
push
dec
xchg
add
xlat
enter
loopne
xor
xchg
loope
adc
fbld
test
mov
jmp
fwait
sub
lret
sub
sbb
scas
stc
mov
push
jns
loop
xchg
adc
push
add
loopne
sub
les
xchg
cmp
aaa
xchg
shl
cmp
xchg
repz
imul
jle
jp
loope
cld
pop
sub
and
add
mov
sbb
mov
std
insl
push
lahf
mov
dec
sbbl
xchg
push
ss
pop
ret
or
push
in
nop
mov
jb
test
push
or
rorb
and
xchg
xchg
dec
push
cmpsl
mov
fists
sbb
push
repz
jb
fcom
shrl
xlat
and
mov
adc
stc
stos
jge
mov
ret
mov
push
je
aaa
shlb
mov
out
mov
dec
ret
cmp
stos
mov
xor
ljmp
mov
mov
movsl
add
adc
mov
adc
mov
adc
or
bound
arpl
push
xchg
inc
test
adc
ljmp
int3
rcll
pop
dec
movsb
xchg
cwtl
mov
mov
lahf
shr
insl
into
cli
filds
shrb
int3
cld
lock
stos
adc
int
lock
xlat
enter
mov
mov
fbld
xchg
or
pusha
lock
bound
fnstcw
popa
filds
cmp
push
pop
cltd
adc
jg
adcb
addr16
adc
mov
mov
and
add
xor
jae
movsl
cli
icebp
xor
xchg
xor
std
push
pop
pop
adc
popa
and
shrb
dec
pop
jae
pop
sbb
fdivl
adc
sarb
ret
or
mov
jge
pusha
lock
adc
nop
mov
jo
jno
xchg
xor
addr16
xchg
loope
outsb
inc
jle
cmp
out
fists
dec
add
cwtl
int
rcrl
arpl
cmpl
jbe
mov
shll
push
aaa
jl
int3
sbb
mov
push
cmp
add
mov
shlb
mov
mov
sbb
in
adc
std
xchg
mov
xor
mov
in
jge
push
stos
or
xchg
push
sub
movsb
iret
or
pop
pushf
mov
sbb
push
sbb
xlat
or
or
in
aas
lahf
pop
cmc
inc
les
pop
sub
jno
popf
sbb
add
lret
leave
add
lahf
cli
arpl
cmovne
mov
mov
xlat
jmp
cmp
jnp
lods
lods
xor
and
in
addr16
in
lods
cmp
sbb
and
add
jmp
aas
mov
and
xchg
mov
sahf
jae
mov
lods
or
mov
imul
sti
jg
dec
in
sub
stos
ja
repz
or
out
mov
mov
es
xchg
std
adc
or
adc
movsb
stos
movsb
push
arpl
dec
imul
cmpsb
test
and
leave
outsb
insl
push
sub
aad
insl
scas
enter
movsl
pop
inc
mov
cmp
xor
pop
fsub
push
out
sbb
adc
iret
adc
mov
enter
and
in
and
iret
jns
xor
sub
shll
mov
push
mov
mov
or
orl
outsl
es
pop
out
lcall
cmpsb
data16
xor
es
inc
sti
movsb
mov
mov
adc
adc
aas
mov
cmpsl
pop
lcall
mov
pop
enter
in
cwtl
sub
cmp
mov
mov
push
mov
mov
xor
xchg
mov
int
lcall
out
leave
adc
ja
xchg
repz
jecxz
and
stos
nop
jns
cmp
aad
addl
test
imul
mov
jno
fwait
dec
clc
add
fs
testb
cmp
repz
test
xchg
push
repnz
pop
out
div
cld
xchg
push
dec
pop
sub
repz
test
dec
decb
xor
fldenv
repnz
mov
cmp
xor
push
out
push
call
popf
leave
push
popa
or
inc
int3
and
mov
mov
aad
testb
mov
in
jge
mov
or
imul
and
push
test
jb
sub
add
fsubl
fwait
bound
xor
dec
or
adc
movsl
aaa
je
data16
imulb
inc
push
dec
movsb
or
popa
inc
cld
or
daa
inc
jg
bound
inc
mov
sbb
sbb
mov
lcall
cwtl
xor
int3
xchg
loope
sub
popa
pop
aad
nop
pop
add
mov
ret
xchg
or
test
cmp
add
cs
into
ret
leave
mov
and
jns
jns
mov
and
jb
jb
xchg
push
or
push
pop
divb
pxor
stc
xchg
adc
incb
arpl
sbb
out
xchg
outsl
iret
dec
into
adc
out
push
mov
out
ret
lods
sahf
jle
sarb
pop
dec
or
or
sbb
in
jns
dec
les
or
inc
fists
dec
das
push
pop
in
cmp
jns
mov
aam
lahf
pop
jmp
jae
stos
movsl
inc
mov
mov
or
lret
inc
and
inc
outsb
cwtl
fsubrl
and
cmp
xlat
sarb
enter
jne
push
or
inc
das
dec
pop
xlat
popa
sbb
shl
in
push
inc
pop
cmp
mov
xlat
dec
mov
xchg
xchg
and
test
subb
mov
lret
or
adc
xchg
pop
add
dec
pushf
negl
outsb
or
xor
inc
cmp
aas
mov
stos
or
jns
lea
adc
xor
and
in
cmp
inc
sbb
add
xchg
into
mov
out
sub
jae
xchg
test
mov
mov
xchg
popa
pushf
inc
sbb
out
arpl
sti
stos
lods
xchg
inc
js
scas
imul
jb
mov
inc
add
or
enter
inc
xlat
std
stos
sbb
push
out
out
mov
and
cmp
push
dec
movsl
insl
es
adc
push
in
lods
jne
or
rclb
push
imull
ja
out
scas
xor
and
adc
pop
push
pusha
js
in
push
out
stc
mov
pusha
in
dec
xchg
sti
in
rcl
fnstcw
push
out
dec
stc
shlb
popa
cld
in
test
push
push
pushf
out
cmp
int
mov
push
fildl
aam
xchg
pop
xor
xor
fidivl
ds
fisttpl
std
sbb
jae
mov
clc
shrl
cmp
flds
xchg
shlb
add
pop
inc
pushf
xchg
cmp
cli
pop
push
les
or
mov
jmp
sbb
rcrb
mov
jb
loopne
or
or
int3
mov
inc
sbb
mov
mov
and
std
cmc
mov
add
dec
mov
pushf
pop
std
pop
dec
aas
hlt
xchg
mov
xor
or
xchg
sub
adc
pop
cld
adc
es
out
fcoml
aaa
xchg
mov
aam
sub
jbe
push
sbb
xchg
or
stos
push
loopne
jae
lods
sbb
jne
mov
push
jbe
xlat
inc
leave
lods
mov
xchg
cmp
rorb
jo
jno
insb
jp
cld
lahf
mov
mov
xchg
out
insb
popf
fiadds
mov
or
dec
jle
jae
cwtl
lods
lcall
add
push
sti
and
mov
push
mov
inc
imul
scas
rclb
xor
into
sbb
push
push
jmp
cmp
adc
xor
and
data16
aad
xchg
fdivp
lods
movsl
cmp
xchg
xlat
fwait
lahf
pop
test
lock
inc
jne
cmp
mov
cld
out
scas
cmp
adc
xlat
cld
inc
incl
vmread
sub
push
xor
fcomps
add
push
filds
push
bswap
mov
hlt
cwtl
rolb
insl
adcl
notb
stc
adc
mov
mov
sahf
pop
aaa
mov
cmp
jecxz
fcmovnbe
addr16
add
aaa
loop
icebp
pusha
xchg
mov
mov
mov
adc
or
roll
xor
rolb
mov
and
scas
hlt
and
and
inc
pop
add
ja
scas
imul
push
inc
and
cmc
jno
push
pop
cmp
inc
sti
setne
les
adcb
je
inc
or
xchg
imul
inc
pop
int3
filds
adc
jl
neg
dec
cmp
pop
inc
roll
lcall
jl
xchg
mov
rol
iret
insb
pop
rolb
inc
adc
or
mov
arpl
pop
pop
sbb
es
imul
hlt
add
adc
add
imul
cld
fyl2xp1
push
pop
mov
pop
dec
inc
push
mov
das
sbb
jmp
je
dec
mov
cmp
dec
push
pop
add
into
xchg
sub
mov
lret
push
fimull
mov
lds
ljmp
jg
mov
jl
cmp
fwait
fwait
je
movsl
lahf
and
or
dec
dec
xor
mov
ljmp
add
pop
mov
lods
aam
sbb
sbb
lret
xlat
dec
and
popf
es
rcrl
lock
sub
rcr
sbb
inc
or
rcll
cltd
sbb
mov
aas
test
jo
mov
rorl
pop
ds
fsincos
mov
dec
mov
mov
jb
fbld
or
cmp
sbb
xlat
fldl2e
sub
xchg
mov
mov
in
out
pusha
jg
xor
jno
mov
lock
inc
aad
cli
mov
mov
and
mov
jp
or
ja
lea
push
out
inc
mov
xchg
outsl
daa
sub
test
daa
rol
xlat
mov
ss
mov
loopne
jbe
xchg
test
fbld
les
in
mov
movsl
dec
outsl
lock
cmp
imul
rol
test
sub
stos
mov
cmp
mov
fmuls
inc
mov
jge
jb
popa
lock
pop
lret
js
imul
sbb
insl
addr16
xchg
dec
fmulp
adc
mov
push
and
movsb
popf
loope
js
fwait
icebp
lods
repz
mov
les
add
shlb
aaa
ja
inc
jle
sbb
ret
jnp
nop
std
dec
xchg
cltd
lds
sub
in
loope
xchg
push
adc
xchg
mov
mov
mov
mov
out
jne
inc
popf
sub
int
idivl
inc
in
les
jp
jg
cmp
jl
xchg
push
adc
mov
push
sub
fsubr
add
add
lock
mov
jb
jb
jecxz
fsubs
lods
inc
inc
push
cltd
jnp
push
dec
sbb
xor
rcrb
leave
add
add
xor
into
add
outsb
xchg
ffree
dec
cmpsl
pop
push
jns
das
ss
decb
jp
pop
addr16
mov
sub
xchg
lock
pop
xchg
bound
cmpsl
aad
push
iret
lds
imul
call
fwait
xchg
pop
jge
out
insb
jmp
shrd
cvtps2pi
mov
int3
fs
repz
push
jbe
add
aam
mov
dec
mov
psubusb
vmovups
mov
inc
es
add
scas
bound
addb
push
dec
lods
mov
test
jne
xor
lea
mov
mov
xlat
cwtl
inc
out
jl
scas
bound
mov
lock
cltd
das
mov
aaa
sbb
aam
lods
xchg
popf
outsl
adc
repnz
inc
out
add
mov
fldl
fdivs
daa
imul
xchg
dec
mov
cld
sub
int3
popf
fstpt
sbb
lds
push
push
shll
rcrb
gs
adc
mov
icebp
xchg
inc
dec
and
xchg
fsubrl
loopne
aas
fwait
or
mov
adc
popf
jnp
adc
int3
mov
sbb
clc
or
daa
inc
insl
mov
insb
xlat
xchg
xchg
out
sahf
jp
sbb
jno
dec
fmuls
mov
int3
inc
dec
call
pop
adc
pop
cli
xchg
rcrb
xchg
cmp
fists
movl
stc
pop
mov
pop
js
push
pop
test
push
sbb
adc
pop
mov
add
cmp
popf
test
cmc
push
jmp
shrb
sub
and
push
or
add
mov
nop
aad
outsb
mov
js
or
xor
pop
jbe
mov
push
ja
push
mov
aaa
push
lret
push
lock
mov
subl
imul
sbbb
test
xor
pop
loopne
out
fisttpl
jnp
data16
push
stos
pop
xchg
and
data16
adc
mov
mov
sbb
fldenv
and
pop
pop
jecxz
jns
push
or
out
push
mov
mov
outsl
and
or
dec
mov
pop
fwait
sub
mov
jle
push
sbb
or
scas
aaa
fwait
mov
fcmovb
cmp
ret
and
shll
mov
aad
mov
inc
int3
mov
sbbl
mov
cld
in
imul
xchg
cmp
es
pop
and
mov
xorl
into
call
xchg
dec
lods
imul
mov
mov
pop
jns
mov
pop
rorb
push
es
and
mov
push
clc
push
mov
test
sub
out
dec
lock
aad
xor
pop
jg
lock
movsb
rcr
push
pop
fldenv
sarb
jecxz
ja
mov
mov
out
int3
jbe
arpl
lahf
push
notl
mov
add
outsl
mov
mov
rclb
pop
pop
xchg
sahf
fdivl
popa
popf
repz
insb
adc
sub
xor
sub
push
adc
dec
mov
into
mov
movntq
clc
jb
mov
dec
xchg
add
jne
add
fildll
cli
pushf
dec
pusha
notb
xchg
push
xchg
mov
inc
ret
jb
xor
cltd
int3
icebp
aaa
xor
std
aad
or
stos
and
test
mov
and
push
test
insl
or
sbb
jge
xchg
sti
adc
sub
insl
lods
ja
aad
cltd
push
andb
enter
repz
xchg
mov
inc
jg
call
loopne
push
add
xchg
push
scas
xor
xchg
es
dec
or
xchg
lcall
cs
test
outsb
and
xchg
and
xchg
mov
aaa
andb
mov
inc
push
hlt
sub
adc
ret
aam
aad
gs
dec
xchg
xlat
in
adc
add
add
jno
add
adc
sbb
or
sbb
sbb
push
mov
jmp
push
pop
pop
xor
xor
sbb
inc
add
push
dec
mov
andl
xchg
aam
sub
add
push
and
jns
sub
stos
in
inc
popa
stos
pusha
sub
fsubr
mov
sbb
in
pop
orl
pop
fisubs
push
lret
js,pt
mov
ret
mov
xchg
ss
addb
add
pop
mov
sarl
dec
cwtl
pop
jge
and
inc
jecxz
push
and
jmp
outsb
push
inc
js
stos
dec
sub
out
fmuls
pop
je
inc
push
jp
test
popf
inc
mov
mov
or
dec
in
add
lahf
in
lahf
mov
mul
out
dec
sti
pop
dec
dec
xor
inc
dec
dec
mov
and
and
cmp
pop
out
cmp
pop
sbb
fxch
fldenv
das
sub
pusha
popa
mov
ljmp
sbb
bound
dec
je
stos
sbb
test
test
mov
jp
jns
adc
xchg
sbb
sub
mov
lret
fstpl
rcrb
out
int3
mov
imul
xchg
inc
lds
shr
daa
cmc
mov
push
cmp
mov
mov
jno
mov
ss
das
sbb
pop
psadbw
mov
jl
into
daa
push
adc
pop
lahf
test
or
loope
das
sbb
dec
addl
int
sbb
xchg
jl
and
and
enter
push
inc
cld
outsb
daa
inc
das
adc
mov
sbb
xchg
sub
mov
rcrl
pop
inc
inc
add
leave
iret
mov
xchg
dec
cmc
int
and
int3
rolb
popa
cmp
lahf
int3
movsb
adc
push
xchg
cmp
orl
mov
mov
imul
and
push
and
icebp
jg
sbb
daa
nop
push
add
pop
jg
daa
and
or
daa
je
lcall
jg
faddl
inc
lret
inc
dec
inc
xchg
mov
pop
test
xchg
sub
push
aam
dec
xor
cld
xor
lahf
insl
pushf
enter
lahf
push
loop
call
jecxz
inc
jecxz
add
int
jecxz
or
int
popa
fimuls
jecxz
scas
ret
or
test
and
and
repz
repz
repnz
scas
jmp
inc
dec
sbb
jns
mov
leave
or
aaa
cmp
dec
test
and
jecxz
xchg
sbbb
push
scas
jbe
xlat
jp
mov
inc
fsubr
jbe
aaa
mov
insl
mov
ror
pop
shll
dec
or
mov
push
std
pop
add
pop
mov
lods
xor
push
fucomip
mov
repnz
loope
loopne
lahf
and
jecxz
inc
xor
add
cwtl
mov
fwait
stos
sub
sbb
dec
test
inc
lcall
scas
outsb
xchg
sbb
into
add
fwait
adc
test
adc
popf
ret
not
cmp
icebp
shl
adcb
dec
jo
fwait
add
jle
loop
or
mov
stc
enter
sub
fwait
les
fs
add
cmp
sub
jnp
cmc
jl
mov
sahf
xchg
and
push
mov
xlat
cmpsl
ss
dec
jns
push
arpl
into
out
fisttpll
sub
in
add
sub
rol
inc
xchg
jno
fldcw
movsb
bound
or
adc
rorb
sub
mov
idiv
outsl
out
jmp
mov
mov
xor
add
lods
nop
or
lcall
popa
cmpsl
xchg
je
or
pop
push
shlb
inc
add
add
lock
cmp
js
cmp
fs
and
ret
jo
ljmp
outsb
or
test
sti
mov
testb
add
mov
mov
mov
int3
adc
sti
pop
dec
sub
xor
mov
push
out
sbb
out
xchg
cwtl
jge
pop
pusha
shll
adc
dec
jnp
aas
es
subl
imul
push
movsl
inc
cld
mov
or
push
or
lret
and
int3
icebp
dec
roll
or
jle
mov
cs
cld
test
push
mov
cltd
jae
jmp
into
lods
inc
or
iret
fsubs
push
in
adc
sti
xchg
add
out
jbe
cwtl
test
xor
cmp
mov
jle
orb
shlb
pop
ljmp
sarb
adc
jae
cltd
sbb
pop
add
mov
xor
jp
test
sub
adcb
pop
js
adc
mov
xchg
cltd
outsl
xchg
sbb
push
test
cli
inc
push
es
lds
cwtl
add
xor
test
xchg
mov
js
xor
mov
adc
imul
loopne
mov
push
pop
mov
pop
xor
bound
and
xchg
xlat
cwtl
and
popf
cli
fidivl
fmuls
leave
inc
test
pop
inc
xor
lea
cmp
in
mov
sti
out
movsb
aaa
and
inc
and
sub
es
dec
pop
and
hlt
setg
cwtl
inc
leave
or
cli
outsb
xchg
inc
dec
and
in
test
popa
pop
lret
and
mov
and
push
adc
jge
pop
test
inc
ret
xchg
mov
ja
push
and
mov
fst
insl
pop
xchg
mov
jno
sub
or
jg
mov
jmp
mov
sbb
into
adcl
or
out
jne
inc
mov
push
push
mov
jge
leave
in
or
dec
scas
add
repz
sbb
sub
sarb
adc
xlat
cmp
mov
pop
add
stos
aas
adc
es
add
out
lahf
stos
mov
cmc
inc
xchg
sub
add
clc
xlat
fs
fcmovb
sub
gs
ret
lods
mov
jno
cmp
push
push
test
ss
cwtl
jmp
adcl
pop
add
ja
stos
sbbb
add
jmp
div
lcall
jns
jp
out
fnstsw
ds
pop
xchg
xor
outsl
js
inc
pop
loope
xor
mov
test
add
sub
push
stos
xor
lea
and
es
add
mov
xlat
cmpsl
jne
inc
hlt
push
xor
or
push
sahf
stos
xor
popa
dec
into
xor
dec
inc
js
mov
push
dec
lcall
jbe
test
in
adc
mov
push
int3
mov
jp
mov
in
dec
int
lock
and
xor
cmpsl
ror
in
clc
mov
inc
shlb
int
into
stc
out
bnd
divl
in
and
mov
dec
pop
imul
ss
cmp
test
inc
insl
lea
sbb
mov
mov
push
clc
mov
dec
fsubr
dec
push
sub
mov
adc
jo
cmp
call
jmp
clc
int
cmp
pop
mov
iret
aaa
rorl
xor
add
sbb
je
scas
dec
inc
fdivs
dec
dec
mov
cli
mov
xor
mov
icebp
xor
shl
push
shrl
in
fimull
hlt
xor
in
lret
je
sbb
jae
repz
insb
iret
push
mov
mov
cmc
mov
test
push
popf
pop
dec
mov
pop
cmp
cmp
insb
popa
fsubs
cs
dec
lahf
stos
scas
add
xlat
cmp
arpl
xchg
lcall
movsl
fucomip
cltd
jmp
inc
dec
push
sahf
pushf
lcall
jne
fmul
pop
adc
mov
in
jecxz
push
inc
or
or
shll
or
dec
mov
ds
jb
xchg
jae
push
cltd
jno
pop
lock
out
jns
adc
add
sub
jno
push
test
gs
mov
sbb
mov
adc
mov
hlt
outsl
popf
jmp
fiaddl
int3
xorl
jnp
inc
lcall
dec
nop
jo
in
add
mov
dec
insb
cmp
sub
mov
pop
aad
scas
mov
clc
cld
push
sar
pop
dec
pop
jne
cmpsb
xchg
loopne
push
sub
aam
scas
call
adc
cld
inc
gs
imul
sub
mov
mov
shrb
and
sub
xchg
je
mov
mov
stos
popl
inc
xchg
fbld
loop
ss
insb
pop
cmpb
sbb
pop
imul
sbb
loopne
pushf
fcoms
ror
insl
scas
and
testb
rclb
pusha
ds
inc
call
call
movsl
xchg
sub
arpl
ss
pop
adc
mov
addr16
sub
jne
pop
into
mov
push
insl
sbb
scas
push
xchg
cltd
add
jmp
gs
adc
dec
and
or
adc
inc
rclb
cld
aaa
or
and
cmpsb
push
mov
out
imul
mov
mov
sub
sahf
in
test
in
mov
sbb
mov
xchg
std
aam
dec
xchg
mov
stc
jbe
cmp
push
mov
leave
jno
cmp
mov
pop
dec
dec
xchg
mov
cli
pushf
mov
push
imul
sahf
test
xchg
jne
jmp
pop
pop
ljmp
and
and
mov
xor
adc
inc
sub
lock
cmpsb
fistl
mov
xor
cmp
in
add
xchg
mov
add
jmp
sub
in
mov
xor
dec
or
dec
test
bound
sub
cmp
dec
loope
pusha
test
repnz
out
jmp
jge
inc
xchg
add
xor
fs
pop
push
jg
jns
cwtl
out
fldt
dec
movsb
stos
xor
cmp
pop
mov
push
adcb
test
mov
mov
pop
test
push
jbe
dec
data16
jbe
aaa
js
ja
cmp
sbb
btr
lcall
pop
daa
movsb
or
xchg
cmp
mov
pop
dec
lret
mov
arpl
rorl
and
pop
lods
or
jge
ja
jl
xor
ja
loopne
lahf
lods
sbb
inc
jg
aam
pop
jg
or
mov
movb
mov
lcall
test
movsl
frstor
adc
xchg
sbb
and
pop
or
in
push
in
jp
sub
aaa
sub
add
fdivp
mov
adc
xchg
pusha
arpl
jecxz
dec
addl
call
jae
jae
cmp
out
xor
adc
mov
mov
out
roll
cwtl
cmpsl
adc
push
pop
sbb
call
xor
icebp
mull
mov
out
lret
jl
das
push
out
sub
test
inc
cmp
push
dec
cmp
cmpsb
push
ljmp
dec
jne
fcmovne
mov
iret
mov
mov
push
fs
mov
popf
jle
sub
fsts
cli
pop
sbb
mov
cmp
jb
or
sub
popl
xchg
rorl
lds
imul
fyl2x
inc
mov
popf
ja
and
xchg
or
push
outsb
sub
mov
and
xor
xchg
lds
hlt
and
jnp
push
add
xchg
hlt
clc
xchg
clc
push
enter
xor
cmp
jbe
movsb
imul
adcb
mov
lret
fisubrl
sbb
fsubl
nop
jae
xorl
std
jecxz
and
hlt
inc
adc
xorb
stos
add
fldcw
cwtl
pop
cmp
adc
out
xchg
inc
ror
mov
stc
add
stc
dec
aas
test
lea
dec
icebp
rcrl
mov
stos
cmp
xchg
aam
test
dec
sar
inc
sahf
nop
adc
mov
mov
push
out
jb
dec
fnstsw
sti
rcrb
or
xor
sub
dec
add
jmp
mov
add
pop
jns
mov
lret
jge
rorl
leave
jo
aaa
fldl
adc
es
xchg
out
pushf
ret
cltd
mov
pop
push
mov
jge
push
mull
inc
divl
dec
adc
sbb
sub
cmp
scas
push
inc
inc
repz
call
and
sbb
ja
scas
add
mov
xchg
or
xchg
pop
xor
push
cmp
lahf
adc
fmull
les
xchg
test
mov
int
sbb
mov
lock
add
xchg
and
dec
sahf
pop
push
jns
mov
movsl
xchg
mov
ret
sbb
adc
lahf
cmpsb
cmp
push
add
xor
leave
or
iret
jae
cmpsb
iret
mov
add
adc
inc
incl
loop
imul
insb
mov
inc
icebp
andl
repnz
mov
arpl
in
adc
sahf
lcall
xchg
mov
sbb
sub
cmp
and
mov
mov
cmp
lds
inc
pop
outsl
sub
hlt
xchg
push
pop
jg
inc
call
lret
and
mov
jo
mov
stos
je
cmp
adc
sti
mov
xchg
add
ja
sub
jno
imul
mov
js
dec
mov
adc
pop
sbb
cmp
add
lcall
jbe
leave
add
sub
pop
adc
push
jne
cmpsb
cmpsb
xchg
in
and
jl
ret
jg
add
jnp
mov
sbb
fstps
loopne
xchg
xchg
lcall
pop
inc
lods
xorb
xlat
call
mov
sub
fadds
mov
pop
jns
call
jno
stc
inc
lock
fcomps
cmp
icebp
gs
inc
jnp
andl
outsb
insl
sbb
dec
xor
dec
ljmp
in
push
jecxz
int3
popa
into
gs
add
mov
and
dec
pop
xor
stos
adc
jg
push
inc
push
cmp
jne
jns
cmp
pop
das
cld
cmp
xchg
mov
xchg
mov
push
xchg
or
mov
int
adc
rclb
cmp
push
add
push
aam
jb
xchg
fsubs
out
inc
xchg
rcll
push
das
and
int3
shr
popa
rorl
push
insb
clc
push
mov
cmpsb
push
pop
fisubrs
in
xchg
mov
sbb
shl
xor
mov
jne
fisttpll
push
scas
cmpsl
xor
shll
shlb
jp
sub
stc
mov
shlb
inc
leave
test
mov
repz
dec
stos
pop
lds
imul
jae
jnp
inc
das
pop
cmp
imul
in
fldl
aam
jbe
jmp
movsb
hlt
lret
das
xchg
sub
fcmovnbe
pop
bound
in
cmp
leave
add
jp
adc
cmp
fadds
and
int
movb
clc
push
push
adc
push
test
sbb
fcmovnbe
and
mov
cmp
push
push
sbb
inc
jg
addr16
rcr
pop
pop
push
jl
das
dec
push
xor
or
in
into
pop
repz
dec
dec
and
es
xchg
testl
dec
jae
ret
out
into
les
mov
xchg
popf
mov
xor
lods
cmp
add
sahf
insl
rolb
jl
test
adc
sub
xor
call
test
sbb
dec
adc
jp
lret
xor
sub
inc
sbb
dec
lods
mov
inc
repnz
rolb
mov
fstp
cld
xchg
ljmp
adc
lret
out
lret
xor
add
sbb
loopne
shlb
ja
nop
aas
mov
xchg
daa
sub
jo
adc
xchg
in
hlt
mov
fdiv
jmp
outsl
jl
xchg
sub
dec
xor
shll
lret
movsl
inc
pop
into
je
outsb
adc
push
or
cmpsl
mov
sbb
sar
xchg
mov
mov
push
movsl
cmp
cmpsb
das
shll
stc
pop
mov
sub
xorb
lods
add
rorl
mov
sti
inc
mov
out
lcall
test
sub
xor
and
dec
outsl
sti
or
push
fdivl
cld
das
rcr
mov
mov
shlb
pop
xor
jge
and
mov
pop
and
mov
dec
mov
sub
pop
jge
xchg
dec
xchg
lret
mov
ret
xor
cmp
add
fistps
andl
test
int
pushf
repnz
sti
loop
aad
pop
popa
lret
xor
dec
and
out
out
sbb
jb
sti
fidivl
adc
movsl
or
int3
sbb
mov
ficompl
or
repnz
and
gs
test
repz
imul
adc
iret
pop
ss
mov
mov
mov
mov
mov
clc
fcom
cmpsl
aad
mov
pusha
rolb
scas
addr16
ljmp
ds
sbbl
push
fnstsw
ds
sub
lret
mov
daa
dec
mov
cli
xor
cmp
inc
in
test
test
mov
and
testb
outsb
repz
sbb
or
fwait
div
cmpsl
mov
xor
test
mov
lods
cmpsl
icebp
cmp
push
mov
cmpl
mov
jo
stc
pusha
jo
cmp
push
scas
out
sub
push
mov
popa
mov
push
xor
cli
adc
mov
adc
adc
cltd
arpl
shrb
leave
cltd
or
xchg
enter
pusha
cltd
inc
inc
xchg
fmuls
cs
fimull
int
cld
cmp
ja
or
inc
push
mov
sub
lcall
push
dec
add
lods
insb
out
lods
shl
mov
insb
cpuid
mov
lods
ret
or
mov
mov
jg
js
push
mov
movsb
add
iret
outsb
bound
cmpl
xchg
loop
mov
in
test
lock
dec
sub
or
bound
fcmovnb
jns
mov
jo
mov
iret
fistpll
test
hlt
movsl
lcall
sbb
push
je
rcrl
ud0
jle
testl
lcall
lods
fwait
jne
push
inc
pop
dec
shlb
ret
adc
mov
insl
lret
inc
cmp
jb
sub
xchg
sub
pusha
aas
data16
mov
or
push
insl
cld
sysret
jl
sbb
repz
dec
sbb
ret
test
fnstcw
scas
dec
adc
inc
push
mov
mov
dec
lds
add
mov
lods
adc
jbe
dec
je
xor
mov
mov
sbb
xor
lods
jl
aaa
add
pop
mov
ja
sub
in
ljmp
push
or
sbb
cld
pop
xchg
pushf
adc
pop
dec
addr16
shl
movb
das
orl
xchg
nop
dec
pop
cmp
xchg
ja
push
pop
mov
xchg
outsl
movq
mov
mov
mov
mov
mov
xchg
mov
test
cmp
test
add
inc
and
mov
inc
sbb
mov
pop
jo
add
movl
mov
jno
repz
adc
inc
sbb
lock
lods
or
pop
subl
cltd
mov
jl
aas
mov
stc
mov
test
xchg
inc
mov
int3
cmp
out
sbb
cld
inc
in
xor
daa
mov
or
out
lcall
mov
cld
imul
inc
repz
jmp
enter
jae
clc
and
xor
shll
mov
xor
popf
and
imul
es
sub
mov
sub
stos
sub
sahf
pop
in
sub
dec
cmp
and
dec
dec
add
dec
jp
sbb
sbb
mov
clc
or
push
call
ret
push
add
mov
orb
daa
mov
out
aam
lea
movsb
cmp
inc
repnz
push
popf
jl
xchg
test
sbb
adc
jecxz
mov
into
insb
data16
pop
icebp
pop
mov
inc
in
ljmp
inc
sar
addr16
js
jbe
arpl
stc
rcl
in
lret
movb
test
outsb
mov
icebp
mov
and
movsb
adc
cmp
stc
add
xchg
adc
inc
das
push
loop
ficoms
push
cmc
adc
aad
or
pop
popa
and
jo
xchg
flds
xchg
mov
dec
sub
insl
dec
cltd
std
in
push
stc
lcall
shrb
repz
lea
pop
mov
cli
ret
cmpsl
test
pop
add
fsubr
es
and
xchg
ds
adc
push
push
popa
out
dec
mov
popa
add
or
or
fildll
hlt
fldt
sbb
jns
mov
inc
xlat
sbb
enter
push
aaa
add
push
xchg
rcr
lcall
test
outsb
inc
ror
mov
push
mov
jae
push
cwtl
je
mov
stc
call
dec
popa
out
orb
imul
xor
lock
xchg
jb
xchg
pusha
iret
cmpsb
push
sbb
and
dec
ljmp
imull
pop
cmpb
out
mov
leave
pop
push
pop
lock
cld
fsubl
xchg
mov
sub
cli
int
jmp
jnp
cmc
sahf
pop
es
pop
push
dec
cmpsb
int
sbb
mov
imul
mov
jae
cmp
fidivl
into
and
xor
pop
icebp
rorl
lret
sub
fs
or
repz
iret
mov
fsubr
jb
jno
cmp
mov
data16
push
in
or
shlb
adcl
mov
test
dec
mov
sub
xchg
cmp
sti
jne
repz
dec
xchg
adc
xchg
imul
lahf
sub
and
pop
scas
daa
ret
subb
daa
leave
fdivs
sub
mov
shl
or
mov
out
adc
bound
dec
stc
fisubrl
add
xor
ret
and
adc
mov
movsb
stos
sbb
int
sub
out
adc
mov
cs
subl
jmp
pop
in
scas
inc
icebp
fldenv
xchg
mov
lds
add
or
pop
fs
movb
test
mov
icebp
xorb
pop
adc
out
jl
pop
push
sbb
mov
sub
sahf
cmp
lock
xchg
cmpsb
mov
xchg
pop
jo
sahf
jp
xchg
imul
cmp
adc
cmp
mov
mov
xlat
cmc
adc
adc
adc
popa
jnp
inc
push
sub
and
xor
imul
imul
int
xor
iret
mov
out
mov
jecxz
xchg
adc
sub
stc
pop
pusha
es
decb
mov
jae
mov
mov
sbb
jns
ror
jo
imul
push
cmc
dec
mov
mov
jge
sarb
cmc
loopne
mov
push
insl
pusha
stc
mov
cmp
mov
incl
or
loop
pop
sbb
jmp
lods
sub
rcll
int
int
icebp
jbe
cltd
insb
mov
cmp
lret
mov
cmp
test
clc
pop
pop
dec
add
adc
notb
cmp
push
push
mov
sti
and
jbe
add
mov
std
and
stos
adc
idivb
push
xor
repz
dec
sti
aas
cmp
jno
es
adc
aad
pusha
push
pop
jne
xor
push
add
mov
movsl
lret
in
orl
jns
adc
das
scas
sti
xor
jl
popa
inc
xor
push
xor
loop
movsb
les
leave
or
bound
loopne
and
push
or
cmp
xchg
dec
cmp
pop
cmp
shl
adc
jmp
sub
jbe
mov
jp
ret
cmc
push
mov
inc
lret
jmp
iret
je
mov
fsubrl
lods
sbb
cmp
fcomps
pushf
push
inc
in
fisubrl
inc
adc
pop
lods
add
sbb
jae
test
pop
inc
pop
in
and
jns
push
xchg
dec
ljmp
lock
cwtl
mov
and
fisubrl
sub
mov
add
in
xor
daa
dec
mov
add
mov
pop
inc
stos
xor
sub
or
scas
stos
cmp
hlt
cmovns
ss
mov
je
add
jns
outsb
mov
pop
xor
mov
add
divb
adc
inc
sbb
mov
cmpl
xor
cmp
les
push
push
inc
test
push
addr16
std
jbe
rol
mov
int3
cmp
mov
test
and
repz
lods
loope
fimuls
mov
insb
sbb
out
imul
or
jno
pop
or
leave
mov
movl
mov
add
addl
sub
jp
sti
arpl
andl
repnz
sub
sbb
or
dec
jns
mov
xchg
mov
mov
pop
cmp
fldl
mov
aas
sarl
daa
test
mov
insl
dec
in
dec
jns
adc
scas
sub
icebp
das
adc
lret
lds
nop
xchg
fwait
in
outsl
ss
stc
insl
jge
mov
push
mov
ja
mov
push
or
push
pop
push
push
cmp
lods
xchg
mov
aas
jg
pop
shll
clc
jmp
sbb
data16
add
adc
push
jge
jbe
jno
sub
xchg
lret
push
mov
adc
cld
pop
addr16
sub
cmc
push
mov
out
xor
adc
lods
mov
imul
in
lea
fwait
aad
imul
sub
cli
or
mov
mov
mov
and
xchg
adc
adc
addr16
js
mov
and
xchg
out
sbb
mov
and
outsb
cli
or
pop
bound
mov
dec
push
ljmp
adcl
nop
es
insb
popl
loop
sbb
adc
or
push
jl
xchg
mov
setge
clc
test
call
xchg
jo
lods
push
lahf
mov
push
lahf
push
out
xor
xor
dec
ds
or
loope
inc
stos
add
cmp
mov
jmp
inc
sub
in
xchg
pop
xor
cmp
jno
mov
sub
xor
jg
inc
sarl
sti
fwait
add
pop
aam
lea
dec
adc
pop
mov
mov
arpl
fcomip
add
loope
push
sub
push
jmp
les
cld
loop,pt
repz
clc
test
addb
cmp
idiv
fcmovu
popa
int
sbb
pop
sahf
lods
mov
lcall
rcl
or
pop
push
std
push
xchg
in
pop
outsb
push
mov
jns
cmp
jo
push
jle
pop
out
aam
add
test
mov
loope
icebp
leave
mov
in
jo
movmskps
mov
sti
pop
divl
sbb
add
call
push
cmp
roll
cmc
aad
or
sti
lds
dec
lret
adc
fnstsw
jae
fdivrl
dec
lret
lds
push
jl
lahf
jmp
cmpsl
in
mov
jecxz
sahf
dec
in
jmp
add
inc
out
pop
push
mov
cmp
sbb
lret
mov
add
jle
scas
fcoml
mov
and
aad
pop
fcmovbe
sahf
adc
dec
mov
cmpsb
xchg
loop
mov
je
push
cmp
add
popf
es
mov
pop
mov
jo
cmp
and
nop
fwait
outsl
pop
mov
test
aaa
jg
pop
push
rolb
xchg
out
es
fcmovb
jb
adc
fcom
out
sub
mov
push
shll
adc
movups
xchg
xor
notb
inc
mov
in
mov
jno
bound
test
xchg
movsb
jmp
das
js
clc
lods
iret
dec
sub
ret
and
rclb
mov
push
mov
repz
test
inc
xor
je
icebp
test
inc
call
fcomps
sbb
scas
mov
jge
xor
add
fcmovnu
movl
pop
and
stos
ret
arpl
mov
movsb
mov
leave
push
and
push
nop
sbb
or
cmc
mov
mov
mov
jge
dec
fistpll
std
aaa
fstpl
mov
and
inc
cld
add
mov
popf
cmp
inc
divl
push
cmc
outsb
outsl
cmovb
cmpsb
scas
test
lea
insl
push
or
je
cld
and
push
lods
jo
or
out
cmp
or
dec
int3
out
pushf
aam
das
pushf
lds
push
or
rorb
popf
add
dec
lds
and
cmp
arpl
push
subl
push
mov
cmc
lock
insl
mov
jns
icebp
sbb
lods
in
cli
test
pop
or
pushf
data16
xor
inc
scas
pusha
sub
imul
xor
ret
ret
sbb
je
and
dec
fs
jg
xchg
call
xor
pop
ret
dec
xchg
jmp
clc
push
stos
xor
dec
sbbb
push
mov
fwait
adc
sub
repnz
pop
sub
dec
sbb
dec
in
lock
jmp
js
mov
dec
mov
dec
pop
sub
pop
pop
push
adc
insl
push
xchg
mov
jl
lret
call
or
mov
xchg
popa
pop
sahf
or
aam
sahf
push
or
ficompl
xchg
pushl
cltd
inc
inc
sub
lea
das
or
loope
pusha
sub
out
adc
sub
pop
mov
cmp
jge
pop
stos
and
sbb
xchg
jp
xchg
fcomps
sbbl
in
hlt
sarl
outsl
pop
mov
mov
addr16
xchg
xorb
es
mov
movsb
pop
mov
repz
jbe
mov
in
pop
shll
call
sub
notl
or
in
push
test
sbb
outsb
or
push
adc
inc
adc
aad
push
les
mov
add
test
imul
push
rorb
js
sbb
sub
add
inc
lret
jp
imul
mov
das
pushf
or
cmp
jmp
in
lods
xor
or
or
test
cltd
sub
xor
icebp
and
in
pop
jo
sub
xchg
cmp
or
or
movsl
pop
and
sub
iret
and
scas
inc
repz
int3
fiaddl
ret
mov
mov
nop
int
icebp
in
and
or
jmp
jmp
and
and
lods
mov
mov
fidivrs
ljmp
mov
fistpll
xorb
xchg
pop
lahf
les
out
stos
adc
testb
cmc
int3
lods
lods
lret
ret
sbb
int3
out
subb
xchg
mov
adc
cmp
mov
sub
xchg
hlt
push
sbb
jp
pop
insl
mov
and
mov
sarl
push
dec
call
push
pminub
mov
in
fistps
lock
sbb
hlt
sahf
cltd
add
sub
popf
fsubrs
fstpt
bound
xchg
mov
fsts
fwait
xorb
sbb
pop
movsb
jbe
mov
jmp
mov
cmp
dec
outsb
pop
repz
push
stos
jnp
adc
lods
fadd
stos
imul
lahf
mov
add
out
pop
sbb
ret
rcrb
in
cmp
mov
sub
movsl
test
repz
add
pop
fnstsw
xor
cmp
aad
into
xor
push
jnp
lods
loop
ror
mov
mov
jmp
mov
dec
inc
sub
mov
jg
inc
lods
mov
rcll
loopne
or
add
incl
xchg
xor
cmc
pop
fnstenv
cmp
mov
aas
sub
fwait
daa
xchg
bound
push
dec
mov
add
lret
fcoml
mov
les
mov
or
imul
orb
pop
test
mov
xor
push
mov
pop
push
repz
cmp
in
jmp
pop
daa
or
xor
cli
mov
inc
mov
adcb
dec
test
xchg
push
jl
mov
pop
pop
vdivss
icebp
push
mov
add
push
and
into
push
lcall
lret
movsb
jo
mov
jbe
and
dec
pop
in
and
push
cmp
fcoml
sti
popa
xchg
pop
incb
inc
cmpsb
out
aas
movsl
scas
mov
mov
sub
test
cmp
inc
addl
inc
repnz
cmc
loope
and
ret
sub
leave
imul
jle
clc
cmpsb
call
jns
inc
sbb
sub
mov
xor
xchg
inc
dec
movsl
adcl
sbb
add
mov
cmp
scas
hlt
loope
mov
fcompl
cmp
addr16
mov
xchg
loopne
inc
push
xor
fs
pop
imul
ss
mov
push
jecxz
cli
cld
inc
in
sub
and
ds
loope
xchg
inc
xchg
stos
dec
shr
rorl
int
sub
aaa
fwait
xchg
cmp
ret
fcomps
imulb
pop
sar
adc
lea
cmp
push
push
test
pop
inc
mov
clc
repz
mulps
cwtl
in
or
and
push
sbb
test
lods
lods
addr16
pop
inc
into
stc
imul
popa
shrb
aad
mov
popf
sahf
jb
pop
mov
dec
pop
inc
lea
call
add
test
sbb
inc
js
add
call
and
jns
jp
sbb
sbbl
xor
push
push
pop
mov
cmp
jecxz
test
icebp
pop
jns
hlt
dec
cmpxchg
adc
mov
xchg
pop
int3
xchg
jns
in
or
push
or
es
fistpl
cld
scas
and
push
push
stos
in
outsl
pop
ds
sub
ret
xor
mov
ficoml
out
inc
dec
sti
cltd
lea
outsb
lret
xor
xchg
cwtl
cmp
pop
pop
outsl
outsl
icebp
xor
jo
and
jg
cmc
cmc
cmp
stos
jno
sub
push
movsl
in
mov
xchg
add
cwtl
adc
jo
jge
jnp
aam
sub
clc
cmpsb
jne
pop
add
push
and
iret
into
shlb
sub
mov
cwtl
out
shlb
cmc
cld
lods
aam
push
mov
nop
imul
pop
pushf
addr16
leave
or
cmpsl
outsl
dec
mov
lcall
lock
cmp
jo
mov
test
dec
fdivrl
int3
mov
jmp
pusha
sub
pop
in
inc
push
outsl
mov
jne
jnp
or
dec
adc
pop
jecxz
sbb
fisubs
hlt
daa
in
hlt
int3
imul
xor
call
sub
dec
dec
fists
out
in
adc
sub
aaa
lock
pop
inc
in
inc
int3
mov
cmpsl
cmp
testl
sbb
repz
out
add
iret
jno
cmp
mov
sbb
loop
fisubs
inc
loope
cmp
cld
cli
fimuls
outsb
testb
mov
add
pop
add
mov
dec
pop
andb
insb
fdecstp
leave
scas
in
sub
mov
add
sarl
daa
mov
ljmp
cld
insl
ret
add
push
mov
push
xchg
mov
fnsave
lahf
dec
std
mov
inc
lods
and
movsb
std
stos
fbstp
test
adc
imul
fisubrl
push
dec
inc
in
or
call
push
xchg
movsl
sub
sbb
lods
pop
in
ss
shl
xlat
pop
in
mov
mov
pop
jecxz
mov
mov
dec
pushf
iret
testb
loop
jecxz
sbb
sub
insl
dec
mov
xor
rcr
insl
inc
ret
enter
xchg
jno
inc
stc
cmp
jg
loop
pop
push
add
lods
push
cmp
xor
push
dec
mov
lods
mov
out
shr
inc
cs
ret
pop
mov
lret
fdivs
mov
jb
inc
mov
popa
sbbb
cmpsl
lret
lock
gs
stos
aam
dec
dec
stos
into
int3
xchg
adc
ljmp
arpl
inc
add
cs
sbb
mov
scas
pop
mov
and
add
push
xor
ljmp
inc
mov
cmpsl
fsincos
xor
inc
divb
and
inc
mov
shlb
push
mov
push
loope
movsl
add
js
xchg
in
dec
push
popa
sub
mov
jae
mov
sbb
sbb
xor
scas
inc
inc
andb
lds
fistpl
rcl
orl
inc
out
xchg
jbe
xchg
scas
test
dec
and
mov
daa
jge
mov
sahf
pop
xchg
movsl
push
cmc
sbb
sti
pop
inc
mov
fwait
cltd
imul
dec
pop
loop
dec
add
mov
das
in
fldl
mov
mov
mov
sub
lahf
pop
cld
es
outsb
sub
orb
inc
fdivrp
xor
mov
xchg
cmc
sarl
ds
ljmpw
sub
adc
sub
jns
xchg
jnp
pop
sbb
insb
sub
jmp
enter
lret
jb
xor
scas
cld
lea
jle
shll
mov
push
lock
sub
sub
orl
pop
sub
cmc
pop
sbb
cmpsl
outsl
xchg
add
jle
mov
shll
add
jl
add
loopne
cmc
in
stc
cmp
or
push
insb
xor
sub
jl
pop
outsl
std
pop
cs
sbb
roll
or
shll
insb
fldl2t
push
mov
cmc
sbb
pop
sbb
jnp
aas
int3
in
cmp
pop
pop
repz
movsl
jbe
fs
daa
inc
in
sbb
cmc
adcb
in
sbb
js
in
loop
adc
lods
xor
or
cmp
and
xor
jl
daa
xlat
cmc
popa
out
iret
popf
dec
stc
pop
cld
jl
xlat
sarl
mov
lods
lret
mov
push
adc
pop
dec
mov
fcmovu
mov
cmpsl
mov
mov
lds
xorb
cld
cli
gs
xor
add
clc
bound
push
cmp
xor
mov
mov
sbb
das
lock
dec
dec
or
add
push
cmp
or
xchg
ret
sub
adc
fisubrs
jecxz
call
scas
mov
stos
push
js
xchg
sahf
dec
sarl
stos
dec
cwtl
mov
das
jmp
fdivs
fsubrl
mov
mov
out
lock
mov
hlt
cmpb
pop
inc
int
mov
pop
jl
gs
into
mov
or
xchg
jnp
push
sub
or
xor
xor
clc
push
cld
dec
sti
mov
sub
arpl
test
xchg
adc
pop
les
and
mov
hlt
cmp
push
inc
adc
add
adcl
xchg
mov
fnstenv
incl
adc
cwtl
or
loopne
xor
pushf
repz
pushw
cmp
loope
jmp
out
push
rolb
enter
push
sub
pushf
mov
mov
enter
test
dec
xlat
xchg
ja
ljmp
xorb
cmp
cmp
lahf
and
add
ds
mov
je
dec
xlat
dec
push
push
jno
adc
sbb
cltd
or
dec
sbb
cli
jg
sbb
iret
insl
push
mull
test
mov
or
mov
sbb
movb
mov
sub
add
out
mov
and
and
inc
pushf
xor
lahf
xor
paddusw
out
dec
jno
cmp
or
mov
imul
sub
ret
fistpll
mov
test
in
or
jae
jp
jo
icebp
and
fsts
and
fmull
sbb
iret
movl
jmp
mov
cmp
xor
jo
pusha
xchg
movsl
pop
cmp
loop
push
push
xchg
jbe
mov
call
cmpsb
test
aaa
loop
in
es
lods
xorl
fcoml
jge
test
sbb
mov
cmp
push
lods
xchg
mov
inc
add
stc
pop
call
sbb
fisubl
inc
dec
mov
lods
pop
movsb
push
inc
insb
cmp
inc
jo
leave
xchg
and
mov
outsb
xchg
mov
leave
out
cmp
jmp
cli
mov
sbbb
inc
out
adc
mov
xor
mov
movsl
mov
mov
cmc
cli
adc
mov
ret
aad
ja
push
inc
pop
push
xchg
ficoms
hlt
and
cmp
or
inc
mov
mov
xorl
cmp
xor
push
in
test
fs
pop
xchg
adc
adc
das
adc
loopne
in
sbb
dec
in
fdivr
xlat
loope
mov
push
outsl
outsl
xchg
xchg
and
imul
jns
fistl
fs
or
and
sbb
sti
jno
popf
mov
ds
pop
mov
and
shr
xchg
ret
sub
cmp
sub
popa
dec
out
mov
xor
jl
pop
test
test
loopne
loop
xor
jl
js
mov
insb
dec
out
cmpsl
inc
int
fsub
xchg
add
jmp
jmp
mov
pop
lock
notb
pop
sahf
or
shll
xor
nopl
push
in
push
mov
lods
clc
mov
push
stc
movsl
mov
daa
inc
inc
lret
or
xchg
mov
in
push
mov
mov
sbb
mov
or
sub
xchg
or
and
and
das
int3
cs
mov
cmp
xchg
or
mov
push
repz
pop
aad
leave
ja
sub
push
fidivrs
mov
ljmp
and
outsl
test
jns
xor
inc
js
pop
mov
ljmp
leave
jmp
mov
repz
test
lret
sbb
xchg
notl
in
repz
ds
call
and
flds
js
ret
pushf
add
or
test
mov
arpl
push
sbb
inc
mov
jbe
aad
mov
mov
cmpsb
cmp
movsl
push
clc
les
push
inc
add
or
mov
lret
enter
daa
pop
cmp
mov
or
aam
es
cmc
repnz
push
fwait
cmp
leave
pusha
inc
add
icebp
fcomps
rcrl
mov
aas
xchg
and
iret
sbb
sub
xchg
push
inc
and
xchg
scas
lahf
xlat
push
mov
popf
xor
dec
sbb
imul
pop
test
sub
js
or
inc
lds
popf
imul
sarl
push
sbb
jo
push
mov
cmc
cmpsl
mov
pop
repnz
pop
std
hlt
and
push
mov
push
cmpb
aad
xchg
lods
gs
test
stos
cmc
jnp
mov
cwtl
inc
and
mov
xchg
notl
xlat
mov
test
mov
lock
mov
sbb
ja
stos
fs
ds
or
cmp
xorb
jbe
mov
pop
mov
je
js
es
cmovp
mov
cmpsb
leave
sbbl
mov
dec
mov
lcall
jne
ds
lock
inc
clc
cmpsb
sbb
ret
aaa
fwait
imul
xchg
xchg
cli
sub
or
pop
mov
stos
cwtl
nop
xor
dec
adc
xchg
stc
pop
iret
sarl
push
hlt
test
test
lods
mov
jecxz
mov
divb
fisubl
clc
movsb
scas
push
ljmp
incb
test
sbb
push
push
xor
js
nop
incl
jecxz
or
xchg
loopne
leave
mov
mov
pop
insl
cli
adc
mov
dec
rcrb
jge
mov
pop
dec
outsl
fs
out
add
mov
jge
sbb
movsl
movsb
sub
xor
ret
jns
mov
or
aas
push
jge
xchg
sbb
ror
add
mov
fidivs
push
fisubrs
in
push
dec
mov
punpcklbw
ss
cmpsl
insl
repz
adcb
jo
js
sti
ret
add
push
inc
sbb
pop
push
mov
icebp
mov
pop
mov
and
or
outsl
int
xchg
xor
loop
es
pop
mov
imul
mov
popa
push
xchg
or
jae
fisubrl
or
mov
jns
sbbb
ror
dec
sub
xchg
cmp
cmp
je
sub
mov
les
sbb
dec
stc
test
cmp
mov
mov
popl
es
in
jbe
faddl
jb
pop
arpl
lcall
cmc
lret
andl
jge
call
nop
cmp
cmp
jl
ret
mov
cli
cli
xchg
enter
or
addr16
or
mov
mov
lahf
mov
cmp
cmp
xchg
xchg
rolb
movsb
inc
mov
aaa
inc
fwait
stc
xchg
pop
stc
ret
adc
mov
das
or
cmp
popa
pop
stos
xor
or
inc
ss
jo
add
lcall
or
aam
scas
or
pop
out
les
xor
cmp
xchg
fs
mov
andb
dec
cmp
je
pop
add
cld
mov
xor
clc
lret
push
mov
jns
sarl
pop
fdivrl
pop
aad
xor
std
add
mov
out
pushf
cmpsl
aas
xor
mov
or
add
std
jb
sbb
pop
xchg
mov
loop
insb
shl
test
cmp
aaa
xchg
mov
gs
fldt
inc
mov
imul
fwait
int
mov
iret
pop
in
dec
rcl
repnz
xchg
loopne
mov
test
int3
rcrl
add
mov
xchg
out
and
aaa
push
sbb
repz
out
imul
and
adc
sub
mov
mov
test
std
mov
outsl
cmc
imul
aaa
pop
orl
popa
gs
rolb
hlt
xchg
push
xchg
and
push
jle
lret
adc
jmp
je
scas
not
lock
push
das
mov
pop
test
stos
loopne
test
std
cmp
xor
clc
loope
and
ja
ret
repnz
sbb
push
mov
in
xchg
add
dec
test
lods
jmp
jae
add
imul
adc
mov
aaa
jecxz
dec
lret
ds
cli
movsl
push
bound
and
mov
adcl
fs
cmp
and
and
jecxz
add
xorl
mov
push
mov
jae
adc
mov
push
sbb
ret
xchg
call
and
cmp
fists
sub
aas
xchg
addr16
shrb
sbb
fwait
push
jae
inc
mov
aas
or
insl
jnp
mov
insl
adc
mov
cmp
into
push
icebp
mov
cli
cmp
adc
in
test
arpl
cli
lods
push
mov
lret
aam
adc
pop
cmp
push
jmp
mov
pop
fs
loopne
in
adc
and
sbb
or
and
or
mov
cmp
outsl
adc
inc
ficompl
fnstcw
jb
imul
dec
ja
cmp
icebp
mov
mov
mov
sub
js
test
mov
inc
loop
xor
nop
or
insl
xor
shll
dec
aad
mov
rorb
and
or
ds
and
cwtl
enter
mov
dec
cmp
xchg
adc
push
aam
xchg
or
ss
adcb
cmp
lret
inc
loop
jbe
and
cmp
mov
rep
dec
aad
fnstsw
repnz
sub
push
dec
or
es
stos
mov
cwtl
mov
sbb
lret
mov
lea
jns
sub
dec
sub
mov
dec
sub
jmp
shl
sahf
pushf
lret
jg
cmpsl
xchg
add
jb
or
mov
cmpsb
xor
in
jmp
xchg
push
hlt
ja
ret
ss
test
lcall
pop
mov
sub
sahf
jle
mov
pop
mov
sbb
jns
cltd
xchg
cmp
jnp
push
outsl
leave
mov
popa
sbb
mov
and
xchg
jle
pop
mov
sbbl
clc
xchg
inc
pushf
mov
aam
sbb
out
dec
pusha
xchg
mov
cmp
bound
mov
cwtl
shr
out
out
lcall
idivl
mov
push
push
shl
andl
es
adc
fs
leave
mov
jb
add
rcl
aad
mov
dec
imul
test
xchg
adc
add
xlat
std
or
dec
or
sarb
rorl
orl
fldenv
mov
pop
jbe
lcall
sub
fwait
mov
inc
mov
std
cld
int
sbb
push
add
or
hlt
and
pop
imul
push
addl
or
adc
ss
repz
stos
outsb
vmovaps
lods
es
lcall
fdivl
mov
cld
xchg
cmp
daa
insb
xchg
xor
push
aad
fs
scas
mov
jno
pop
pop
je
adcl
or
out
sbb
mov
loopne
jns
dec
imul
cli
push
sbbb
das
leave
cmp
pop
in
sub
in
mull
mov
test
pop
inc
jnp
xchg
xor
sbb
loop
inc
cmp
push
inc
mov
jmp
fwait
cmpsb
fcmove
ret
loop
push
lds
sub
pop
mov
les
cmp
mov
jno
mov
fimuls
push
fs
out
pop
clc
lcall
sahf
inc
lock
mov
sbbl
inc
pop
cwtl
bound
loopne
pop
dec
add
add
shll
xchg
loopne
jns
decl
sub
ficompl
loopne
mul
mov
data16
lods
push
mov
test
dec
out
dec
std
in
movq
inc
insb
push
mov
hlt
jb
jnp
call
rep
lcall
adc
jge
adc
loop
loopne
pop
addr16
arpl
leave
ror
ljmp
jmp
clc
stos
dec
and
push
leave
out
mov
pop
fisttps
pop
mov
add
pop
jae
xchg
in
xor
nop
xor
aaa
cmp
dec
std
cmp
dec
pop
repnz
lahf
sti
pop
dec
jp
or
jg
cmpb
pop
popl
or
mov
imul
icebp
dec
iret
gs
adc
pop
out
mov
jg
je
rcrb
mov
shrb
push
pop
add
loope
nop
push
xor
in
mov
sbb
sub
cwtl
xor
imul
inc
jp
mov
lods
repz
add
arpl
scas
fwait
mov
add
insl
xor
sub
popf
pop
push
xor
mov
cs
add
adc
xchg
sub
cmp
push
fldl
adc
mov
jg
pop
int
pop
pop
inc
repnz
jmp
mov
jmp
rolb
imul
movsb
call
push
xchg
out
rorl
or
or
jle
test
rcll
sahf
outsb
adc
xchg
sbb
or
out
pop
stos
sub
fwait
dec
mov
sbb
insb
lahf
int3
and
imul
fdivrp
push
insb
sub
mov
loop
testb
push
in
adc
rol
cmpsb
lods
push
pop
sub
mov
pop
repz
out
jo
mov
ss
pop
adc
mov
dec
adc
fcmovu
push
shll
dec
and
repz
orb
cmc
xorb
pop
lods
jno
icebp
inc
cld
ret
imul
cwtl
push
or
fcompl
adc
ds
out
enter
xor
or
mov
pop
in
pop
mov
incl
push
sub
insl
int3
jb
out
hlt
movsb
stos
leave
push
sbbb
mov
jbe
arpl
xchg
mov
push
pop
xor
stos
call
xchg
in
lcall
fisubs
ret
inc
and
inc
aam
inc
sahf
mov
jae
roll
push
sbb
data16
add
or
push
aas
stos
push
pop
test
jns
stc
jo
into
lods
cmp
xrelease
or
jnp
xchg
jb
or
call
mov
sub
sbb
mov
into
mov
les
out
push
add
inc
sbb
push
jmp
sbb
shrl
jp
jp
std
in
xlat
xchg
inc
xchg
ljmp
sub
xchg
lds
int
xchg
aam
xchg
jns
jge
push
mov
shll
ret
sbb
fucomp
out
push
pop
jo
adc
test
jp
outsl
jbe
xor
push
sbb
nop
cli
and
dec
push
xchg
cmp
loopne
inc
pop
push
into
mov
sub
sbb
aaa
lock
add
repnz
mov
iret
es
imul
test
pop
mov
pop
popf
out
orb
pop
lds
in
scas
cmp
cmp
lods
cmpl
aam
je
inc
sbb
mov
jp
jg
cmpsl
std
clc
cli
jl
cmpsb
push
dec
lods
jmp
ret
jmp
roll
cmp
xlat
roll
push
mov
insl
adc
aad
je
lods
mov
fistpl
daa
jmp
sub
clc
dec
push
mov
je
push
stos
or
dec
xor
xchg
inc
lods
dec
and
mov
ret
or
cmp
mov
repnz
sbb
out
adc
xchg
push
mov
mov
adc
sbb
mov
inc
out
into
scas
outsb
ror
sbb
adc
stos
call
and
jl
dec
mov
pop
shrb
dec
push
xchg
mov
inc
insb
cwtl
push
push
ljmp
inc
adc
pop
mov
xchg
fsub
jp
jno
enter
and
gs
mov
xchg
sbb
cld
pop
cmpsb
pop
sbb
lret
out
out
and
mov
jl
neg
into
dec
pop
shrl
cmp
test
arpl
xchg
int3
pop
shll
clc
cmc
popf
sub
xchg
or
dec
repz
scas
push
sbb
sub
ja
int3
add
and
lahf
cmp
and
test
iret
stos
leave
imul
fcoms
xchg
pop
dec
cld
mov
mov
or
cmpsl
mov
insb
popa
pop
and
and
pop
jg
sub
fdivrl
xor
aaa
cmp
cli
jns
test
adc
stos
sbb
dec
or
mov
mov
pop
xchg
popa
xchg
call
dec
outsl
test
sub
sub
ret
inc
shlb
icebp
call
inc
push
or
cld
or
push
jo
dec
cmp
pop
push
stos
dec
nop
push
pop
fcoml
in
and
data16
inc
arpl
fwait
inc
mov
fldz
pop
pusha
stos
sub
jnp
jg
adc
pop
fwait
inc
add
out
xor
sub
aas
dec
test
xchg
lds
cmpl
incl
iret
and
inc
js
xor
and
xchg
xor
ficoml
adc
jecxz
mov
sbb
push
cmpsb
adc
jle
pop
pop
inc
add
mov
jle
push
and
pop
in
int3
xchg
pop
add
push
movsb
cmp
push
mov
push
fs
fmul
dec
sub
outsl
das
fwait
mov
push
or
push
sar
test
lds
lock
lods
sbb
fiadds
scas
mov
mov
mov
mov
cwtl
loope
mov
fwait
loop
pop
or
fsubs
mov
dec
xor
ret
add
pop
or
cmp
iret
testl
and
push
mov
mov
sbb
cld
bound
inc
xor
shll
push
test
test
das
xor
lret
test
and
and
pop
call
lret
inc
mov
jecxz
divl
enter
frstor
xor
loope
add
scas
or
sbb
dec
dec
xchg
jecxz
lret
loopne
adc
mov
movsl
loop
fcom
pop
mov
xchg
add
adc
iret
jae
mov
pop
mov
repnz
test
out
jae
or
mov
data16
inc
mov
stos
pushf
cld
lret
xchg
pop
hlt
lret
pop
movsl
xor
pop
ss
xlat
and
pop
dec
push
clc
lahf
les
pop
les
mov
add
out
sbb
aam
orb
imul
jae
inc
mov
pushf
std
arpl
rorl
push
dec
cld
cs
xor
pop
mov
cmp
mov
jbe
inc
mov
cmp
out
jb
pushf
mov
cmp
jg
adc
addl
inc
xor
jecxz
ja
or
dec
mov
pusha
test
aaa
mov
jl
sbb
mov
push
popf
gs
or
clc
or
int3
test
pop
nop
mov
jo
push
in
pusha
add
jns
rorb
mov
adc
loope
sbb
lock
iret
outsb
mov
dec
and
pop
dec
movsl
xchg
data16
imul
adc
xchg
mov
add
pop
dec
sub
sbb
cmp
mov
lock
pop
adc
cld
and
xor
fldln2
out
inc
cmp
mov
push
dec
push
call
jle
add
add
xor
test
xchg
movsb
gs
test
pop
push
frstor
add
ja
gs
int3
cmp
bound
mov
movsb
sub
and
cmp
adc
xchg
dec
inc
xchg
mov
sub
out
aam
test
cmpb
cli
ficompl
popa
add
outsl
ret
dec
pop
cmp
shl
in
jge
int
in
sbb
ret
sti
mov
cmp
mov
das
adc
adc
sbb
or
mov
stos
jns
mov
ret
dec
dec
pop
xchg
push
inc
jo
pusha
inc
cmp
stos
fstpt
jmp
shlb
outsb
sahf
xchg
jecxz
or
sbb
pushf
sub
repz
push
popa
mov
push
xchg
cmp
jb
lds
mov
pop
cli
mov
or
lods
or
pop
sbb
mov
inc
repnz
dec
mov
mov
inc
mov
push
fdivrl
or
std
movsb
pop
cmc
jae
sbbb
jp
pop
ss
clc
jecxz
and
aaa
or
ds
lds
insb
test
lds
and
dec
addb
insl
and
mov
pusha
and
xlat
fsubrl
jmp
and
fs
or
stos
rorb
cmpsl
in
ss
push
add
imul
or
push
jb
stos
movsl
cmpsl
sub
push
rol
pop
mov
ret
loop
adc
inc
push
mov
xor
lahf
jp
add
leave
gs
cmpsl
and
scas
push
sbb
hlt
outsl
enter
add
cmp
stos
lock
mov
xchg
add
popa
mov
push
bnd
ds
leave
fsubrl
or
mov
dec
std
div
cmp
outsl
mov
rcrb
add
in
imul
jnp
and
cwtl
lahf
mov
cld
jmp
pop
icebp
fwait
cld
and
test
shll
push
imul
mov
pop
adc
daa
mov
addr16
divl
sub
rolb
shlb
push
inc
ss
rorb
popl
pop
add
cmp
mov
mov
movsl
nop
pushf
imul
cltd
in
fwait
mov
xchg
mov
xchg
movsb
sahf
aam
pop
jmp
insl
pop
mov
mov
push
xchg
je
or
xchg
adc
xchg
cmp
fisubs
aad
xor
fcom
and
ja
aaa
cmp
sbb
cmp
stos
mov
xrelease
pop
mov
cmp
push
xchg
add
mov
jmp
dec
ss
ljmp
jns
sbb
pop
mov
push
and
inc
les
jecxz
shll
int
dec
mov
arpl
jbe
out
jae
in
jns
push
lds
mov
push
pop
pop
arpl
sub
jnp
aam
icebp
stc
cltd
jg
sub
test
push
and
xor
mov
sbb
pop
adc
jge
stos
lock
sti
fistpll
adc
cs
mov
repz
ljmp
arpl
mov
mov
shrl
dec
das
mov
dec
jmp
js
xor
in
mov
test
xor
loopne
and
fildll
addr16
cmp
int
enter
lcall
and
scas
addr16
jno
xlat
xchg
dec
mulb
cmp
dec
jno
adc
xor
add
lds
andb
push
fnstcw
pop
iret
dec
add
leave
pop
repnz
xchg
mov
je,pt
push
xlat
mov
dec
call
jmp
mov
xor
lret
data16
rcrl
cli
cmp
xor
fld1
mov
ljmp
jae
ret
call
and
dec
xchg
adc
stc
pop
inc
jmp
addr16
aaa
sbb
cmp
adc
cmp
int
sbb
and
pop
cli
fisttps
notl
dec
mov
es
jno
adc
roll
or
out
outsb
sahf
int
mov
test
int
negl
dec
pop
jp
ror
in
pop
adc
nop
pop
push
aam
test
aas
pop
jo
xchg
aaa
outsb
cltd
cli
icebp
jae
xchg
imul
loope
dec
addb
fsubl
xchg
jno
jge
lods
xor
cmp
and
pop
in
sub
sbb
and
pop
in
inc
movsb
inc
pop
cltd
inc
ds
push
sbb
sub
sbb
cli
adc
jnp
xor
adc
sub
shl
mov
inc
sti
mov
mov
jnp
sub
inc
leave
mov
push
lods
cmp
mov
shl
mov
push
jl
rcll
out
ljmp
dec
std
cmp
mov
push
mov
mov
dec
mov
mov
mov
lods
mov
ja
in
adc
lcall
add
dec
mov
xchg
pop
testb
push
jbe
fs
icebp
lahf
xchg
mov
xchg
xchg
adcl
shrb
or
loop
pop
mov
mov
stos
pop
xor
mov
fidivl
xlat
mov
inc
cmp
adc
cmp
out
mov
rorb
jbe
pop
inc
icebp
cmc
and
jmp
add
scas
orb
push
orb
fstpt
mov
adc
mov
jns
jne
sbb
cld
inc
sbb
fiadds
in
aad
adc
and
in
cmp
std
pop
adc
lret
xlat
sti
xor
test
dec
push
arpl
test
fsub
cli
out
fisttpl
test
xchg
orl
mov
hlt
cmpb
or
inc
mov
cltd
push
sbb
xchg
lret
xchg
sahf
mov
jb
lds
xchg
lods
mov
adc
pop
ror
por
push
leave
pusha
int
mov
lock
pop
fisubs
pushf
lcall
and
jne
mov
dec
inc
stos
rcrl
jae
fwait
and
and
or
xchg
scas
mov
jbe
xlat
lret
jnp
pusha
inc
jl
das
or
mov
test
xchg
or
stos
clc
jmp
repz
or
movsb
in
movsl
mov
or
mov
cmp
cmp
mov
adc
xlat
xor
stos
jge
xchg
bound
icebp
stc
movsb
insb
adc
int3
inc
dec
sti
popf
dec
mov
cmpsl
push
cmp
test
adc
loopne
dec
ret
add
push
cmp
mov
add
push
add
jp
jg
imul
mov
ret
jp
cmpsl
jae
pop
mov
fdivrl
jl
orb
ret
sbb
mov
outsl
mov
dec
ss
sbb
push
mov
jg
xchg
arpl
lahf
sub
pop
adc
dec
add
add
xor
mov
cld
and
xchg
adcl
insl
cmp
fstp
insb
outsl
xchg
aad
data16
xor
dec
mov
xor
cmp
pop
fldcw
test
aas
pop
das
pop
out
test
pop
mov
loopne
mov
scas
cmpsl
jp
xchg
xchg
data16
scas
cmp
ljmp
cmpsl
pop
mov
or
stos
movsl
add
mov
mov
xchg
leave
leave
inc
fcmovbe
or
call
mov
into
jne
add
ljmp
dec
dec
scas
add
cmp
push
enter
jo
and
inc
cld
divl
push
adc
cmpsb
mov
push
mov
sub
cmpsb
decb
xchg
dec
add
sbb
shll
mov
mov
sbb
jecxz
cmp
cwtl
and
xchg
jo
adc
jne
ss
aas
femms
add
or
adc
mov
icebp
adc
fwait
sahf
inc
mov
mov
cmp
cmp
dec
add
jnp
add
mull
inc
call
mov
mov
icebp
xchg
insl
add
or
insl
dec
adc
rol
mov
movsl
xor
enter
jo
lods
sbb
pop
cli
icebp
mov
or
xchg
and
ja
adc
addr16
aam
lea
imul
in
addr16
lret
outsl
push
sbb
mov
pushf
jbe
sub
inc
cli
dec
push
mov
insl
ret
dec
mov
jecxz
shrl
pop
cmp
xor
out
ret
clc
add
mulb
and
insb
pop
mov
sti
adc
xchg
les
insb
in
and
jge
xchg
xlat
add
lock
dec
jl
pop
xchg
jae
push
sahf
out
sbb
xor
ljmp
mov
in
sti
sarl
fs
or
repz
outsb
cmpsl
mov
mov
and
inc
lahf
pop
cld
jge
pop
mov
mov
cs
cmp
mov
adc
insl
and
testl
sub
add
dec
lret
in
lock
rcr
xchg
xchg
mov
pop
dec
cmp
in
sahf
cmc
sbb
inc
arpl
or
adc
pushf
sub
pop
sbb
adc
aaa
xor
testl
adc
bound
and
push
dec
fisubrl
repz
sbb
cmp
lea
repz
out
pop
sbb
mov
adc
cld
push
or
std
cmp
mov
sbb
lahf
xor
rcr
cld
div
push
mov
adc
lea
cs
adc
adcl
std
sub
mov
lret
jmp
into
mov
hlt
ds
enter
inc
clc
inc
js
imul
cmpsb
sub
adc
insb
mov
adc
data16
push
clc
inc
addb
jbe
xchg
push
jmp
test
mov
lret
pop
pushf
ficompl
xchg
outsb
inc
stos
lcall
mov
pop
push
adc
jg
xchg
lds
iret
cmp
leave
leave
inc
mov
daa
call
loopne
data16
or
push
dec
cmp
add
sbb
pop
add
fdivr
pop
pop
gs
xchg
addl
in
out
jo
push
jno
and
shl
movsl
leave
xor
sbb
shl
dec
cmp
jg
lcall
and
cli
xchg
pop
out
adc
mov
les
xor
xor
push
xchg
push
or
out
xchg
mov
adc
inc
iret
inc
mov
dec
orl
insl
inc
or
bound
add
dec
icebp
add
addb
es
fs
pop
jle
inc
sahf
fimull
popf
popa
gs
pop
push
dec
andl
stos
jl
or
dec
push
imul
ret
dec
rcrb
adc
mov
jns
outsl
lea
sub
xchg
movsb
es
or
out
and
icebp
aas
mov
mov
ret
nop
cmp
cmpsl
xchg
pusha
mov
pop
js
daa
data16
out
inc
or
add
pusha
stos
cmpsb
pop
dec
xchg
aas
sub
cmpsb
and
dec
das
fldl
jmp
stos
rol
test
xchg
fbstp
hlt
xchg
fwait
pop
xchg
jle
dec
push
fs
fcomi
mov
and
mov
pop
lock
pop
shrl
iret
pop
les
out
mov
xor
adc
aaa
push
movsl
fnstsw
loopne
pop
or
je
clc
std
push
sub
xor
cs
cmpsl
fmull
push
mov
lods
jbe
ds
push
cli
test
jecxz
or
cltd
jns
push
ljmp
shl
jp
mov
dec
shrb
push
pop
sbb
pop
pop
andl
cmp
add
jmp
cld
out
adc
and
lahf
push
jo
add
pop
imul
imul
int
cmp
mov
sahf
xor
jae
xchg
lea
pop
stos
sbb
shl
daa
in
mov
and
push
nop
sub
sub
sahf
fs
movsb
add
ret
and
pop
js
movsb
sti
bound
stos
stos
fdivp
push
mov
dec
mov
xor
lock
hlt
inc
das
stos
imul
cmp
pop
sbb
pop
test
jne
push
test
pop
add
fwait
cld
cmp
daa
rcrl
or
cli
pop
inc
or
into
shrl
stos
movups
lock
out
jb
xor
jg
dec
ss
ror
stc
loope
imul
dec
fstl
lods
fiaddl
dec
jbe
inc
stos
fcom
loopne
and
add
shl
lcall
jbe
jmp
sbb
xor
addl
insb
gs
gs
mov
cli
addr16
ds
pop
mov
cmp
sub
xchg
or
aad
sarl
lahf
or
lret
jmp
jns
in
out
leave
cmpsl
xchg
iret
inc
jp
jo
or
loope
cmp
test
in
cmp
mov
lods
stc
cs
insl
push
inc
sub
outsl
mov
jb
xchg
sub
pop
les
lret
fsubl
cwtl
pop
sub
push
sub
adc
js
dec
loop
ss
shrl
mov
inc
outsl
inc
gs
mov
stc
dec
fcmove
dec
sub
dec
and
pushf
jns
in
pop
testb
inc
popa
call
sub
lret
jmp
ss
out
iret
jg
repnz
xlat
mov
pop
jl
jno
sbb
stos
jne
lret
jns
or
push
mov
and
xchg
call
cmp
scas
scas
int
add
push
push
aam
xchg
mov
sbb
stos
daa
inc
xchg
jo
jbe
aam
call
ds
mov
jb
add
lods
sub
cmp
rcrl
add
stos
lods
xchg
fldl
cmpsl
fucomi
cmp
insl
and
adc
ret
jno
ljmp
and
jae
jb
pop
or
fstps
dec
test
rol
lret
mov
jnp
sahf
mov
push
adc
push
cmp
sbb
adc
ja
mov
push
jecxz
cmpl
mov
sahf
lods
jl
adc
sbb
aad
aaa
orb
xchg
shlb
ja
mov
insl
xchg
cmc
clc
jb
push
push
shll
inc
scas
fs
jl
adc
sti
jecxz
mov
dec
jmp
loopne
dec
lods
lcall
add
jns
jg
inc
ljmp
je
jno
loopne
mov
inc
cmp
mov
xchg
jbe
adc
movsb
sbb
xchg
cmpsb
shr
cld
int
mov
dec
inc
inc
int
adc
mov
inc
loopne
jo
js
xor
gs
xlat
movsb
push
lods
ret
sbb
iret
sub
mov
js
dec
fsubr
ljmp
xchg
mov
daa
rcrb
adc
int
mov
jbe
xor
roll
test
xor
lock
imul
ret
and
pop
jmp
jbe
lcall
enter
pop
sbb
mov
push
mov
xor
mov
das
add
push
mov
nop
lcall
push
pop
adc
mov
lret
xor
sti
pop
push
fmull
pop
adc
jmp
fcompl
mov
ds
sarl
fidivs
movsb
fdivrs
loop
dec
push
jae
sar
in
cmp
jp
sub
movl
push
imul
or
pop
add
mov
xchg
adc
mov
or
cmp
dec
adc
xchg
psrld
test
inc
push
mov
je
xchg
loopne
cmp
cmp
loop
call
jbe
sarb
pop
insl
call
push
jl
cmpsl
xor
push
add
repz
leave
in
stos
shl
lds
push
pushf
test
or
adc
pop
and
fiadds
not
push
repnz
aad
fistps
push
and
ret
push
add
inc
std
inc
and
outsl
jbe
add
movsb
dec
insb
sbb
outsl
mov
fcoml
es
mov
loop
stc
pop
and
ret
icebp
shrl
je
lds
push
mov
cmp
pop
xchg
lret
add
lea
aad
mov
xor
push
in
pop
les
fwait
jns
dec
ss
add
xor
dec
lods
loope
sub
mov
adc
jb
inc
pop
in
insl
fidivl
shlb
out
aaa
imul
mov
lahf
ljmp
inc
adc
add
lods
repz
das
xchg
xor
test
addb
and
cmp
in
out
cmc
in
cmp
xchg
dec
xor
scas
lods
mov
or
fcompl
stos
pusha
fcoms
or
idiv
ficoml
adc
add
jecxz
stc
push
pushf
out
popf
mov
ljmp
imul
pop
addr16
cmp
lcall
call
cwtl
xchg
mov
push
pop
insb
push
enter
sbbl
push
outsl
or
imul
or
std
repnz
mov
lods
fwait
inc
xlat
fcoml
pop
out
dec
stos
mov
and
mov
inc
jb
lods
cmp
push
fldt
cmp
call
ds
sbb
cmp
clc
jmp
push
lods
mov
inc
cmc
cmpsb
mov
xchg
lock
dec
lret
das
mov
loopne
das
add
stc
shll
pushf
sub
push
sbb
xchg
jp
stc
xor
addr16
out
cmpsl
sub
leave
fidivrl
mov
clc
cmpsl
mov
pushf
mov
mov
sbb
call
cmpsb
test
sub
add
lock
inc
cmpsb
cmpsb
push
push
punpckhwd
loopne
push
hlt
into
ds
and
dec
inc
aam
out
iret
sub
push
adc
lock
pop
sbbl
enter
mov
add
mov
les
pop
aam
sub
ljmp
dec
call
daa
jle
fcompl
xor
sbb
push
xchg
lods
or
jle
gs
lahf
xor
pusha
stos
dec
mov
xchg
out
jmp
sbb
out
adc
outsb
out
xor
cmc
mov
pop
cmpsb
mov
xor
and
push
out
jbe
stos
stos
sti
lcall
xor
mov
call
pop
mov
aad
jne
xor
pop
mov
adc
inc
push
push
es
mov
rolb
int
push
cmp
or
mov
dec
aas
pop
sti
pop
mov
and
inc
or
test
cmp
adc
dec
div
flds
dec
bswap
adc
mov
and
mov
ja
cmpl
and
sbb
fsts
sarl
push
inc
das
test
or
xor
enter
mov
in
sbb
std
xchg
mov
lret
and
mov
pop
mov
add
push
inc
ret
jno
mov
dec
push
add
popa
or
int3
sub
icebp
adc
out
iret
and
xor
inc
int3
repz
sub
sarb
mov
insb
mov
push
sti
and
lahf
out
std
out
jp
imul
add
enter
or
inc
std
adc
cld
movsl
or
xchg
jbe
jbe
mov
stos
xor
or
xchg
xlat
or
ret
push
pop
and
jp
in
xchg
pop
xchg
adc
arpl
mov
dec
jp
cmp
xor
inc
mov
cmp
sbb
sahf
cwtl
inc
mov
or
jg
fmull
push
mov
mov
mov
inc
repz
sub
or
cld
dec
mov
rdtsc
xchg
cld
and
mov
fnstsw
cmpsb
cltd
adc
fistpl
sbb
jb
and
add
pushf
dec
iret
cmp
je
jnp
jecxz
xchg
cli
jb
add
popf
push
mov
xchg
ret
dec
xchg
jl
mov
dec
js
out
jns
stc
testb
pop
jle
or
dec
cmpsl
sbb
push
inc
aam
aam
mov
inc
loope
lods
jno
lcall
mov
loope
hlt
loopne
stc
and
inc
clc
lahf
push
hlt
lods
mov
mov
pop
shl
popf
sahf
mov
sub
in
cmp
push
jbe
repnz
aam
mov
xchg
bound
pop
mov
mov
mov
outsl
outsl
and
sub
sub
dec
sbb
push
pop
repz
push
enter
call
ror
mov
mov
inc
mov
xchg
mov
lds
aaa
mov
inc
jno
inc
imull
cmpsb
addr16
out
test
ljmp
and
jno
pop
call
sbb
jo
inc
decl
adc
aaa
aaa
pop
sbb
gs
dec
in
lock
stos
push
push
int3
pushf
jle
jg
and
shll
adc
mov
pop
call
pop
mov
pop
sub
dec
mov
inc
push
sbb
imul
cmp
cmpsl
pop
ret
jnp
cmpsl
out
out
in
loopne
mov
insl
pop
mov
pop
mov
jo
dec
push
and
inc
pop
cmp
pop
test
loope
gs
jp
inc
rolb
push
mov
xchg
out
jp
sbb
pop
mov
pop
mov
xchg
imul
xlat
or
mov
movsl
and
sti
inc
mov
outsb
and
das
ja
shll
pop
rcll
xchg
sti
and
sub
adc
out
sbb
and
push
mov
mov
les
sub
add
mull
out
inc
inc
fstl
add
addb
sbb
sbb
mov
jns
jp
mov
js
sbb
repz
fdivl
mov
mov
jge
inc
dec
outsl
xchg
xchg
mov
sbbb
jecxz
and
push
movsl
fidivrs
scas
mov
ljmp
ret
es
ja
pop
movsl
jg
cli
adc
inc
rclb
cmp
and
xor
cmpsl
aaa
adcb
fildl
lret
xchg
mov
sahf
xorb
or
inc
call
lahf
hlt
jno
out
out
cmp
xchg
mov
or
xor
dec
lar
pop
call
ljmp
xor
rorb
outsb
add
dec
jmp
adc
mov
outsb
fadd
aam
test
filds
loop
pop
out
adc
add
sarl
jae
cmp
addr16
nop
call
leave
pop
add
inc
divl
jge
addl
aas
cwtl
add
lock
and
pop
call
and
fistl
sub
cld
insl
adc
sbb
or
fsts
xchg
jg
jp
in
fidivl
sbb
push
les
repnz
das
scas
sbb
push
mov
add
hlt
repz
xor
out
mov
push
or
inc
push
add
xchg
int
inc
pop
shll
cmp
push
mov
xor
xchg
enter
or
insl
adcb
aaa
ds
in
dec
mov
inc
mov
mov
mov
sub
cmp
sbbb
notb
xchg
or
adc
jmp
and
dec
mov
push
ror
sub
cs
in
sbb
sbb
sarb
jmp
pusha
fsubr
or
mov
pop
test
push
adc
sub
adc
fsubrl
mov
addb
sub
mov
pop
inc
daa
mov
inc
test
or
inc
insb
pop
movsb
xchg
movsb
mov
cmp
pop
loopne
mov
push
outsl
add
aaa
pusha
mov
push
and
jns
cmp
aam
in
in
daa
arpl
fs
mov
mov
cmp
pop
xchg
icebp
cmp
roll
pop
cmp
movsl
mov
imul
jnp
addr16
icebp
fwait
mov
loopne
into
and
fisubrs
ljmp
scas
lahf
ja
cld
aaa
xor
fwait
dec
dec
out
push
leave
decl
stc
mov
mov
inc
adc
pop
pop
xlat
push
push
fsubrs
add
lcall
pop
cwtl
outsb
in
cmpsb
push
jmp
jp
push
test
pop
cmp
sub
movb
pop
inc
xchg
out
outsb
adc
fwait
stc
inc
rcll
dec
dec
in
fcmovbe
sbb
jg
inc
add
sub
ljmp
fwait
das
xor
add
lea
sbb
xor
lret
inc
push
cmp
jl
jecxz
aaa
imul
xchg
sub
sbb
mov
dec
ja
lods
daa
enter
loope
outsl
xor
fisubrs
testb
pop
xor
ss
icebp
lahf
mov
mov
mov
mov
push
push
pop
mov
dec
cmpb
add
les
sbb
push
push
jmp
push
stos
mov
cmp
lret
inc
fwait
pop
cmp
fdecstp
fidivs
adc
sbb
sub
test
push
test
adc
pop
push
mov
dec
rolb
cmpsb
xlat
mov
or
pop
cmp
pushf
pushl
stc
xchg
pop
or
push
test
out
mov
or
add
push
imul
mov
push
mov
repnz
jl
popf
cmp
ret
jp
addl
and
cmpb
insl
pop
in
xor
push
sub
test
incb
sub
mov
and
sarl
jb
jo
call
imul
aas
cld
xchg
mov
xchg
loope
es
mov
jbe
jg
cld
mov
push
mov
jnp
xchg
scas
fsubrl
mov
sbb
divb
add
push
inc
jo
inc
push
rclb
leave
add
orl
mov
sub
sbb
mov
adc
dec
and
mov
jp
in
dec
clc
add
mov
mov
xchg
xor
cmp
fstpt
les
dec
das
mov
loopne
cmp
sub
mov
and
and
inc
cltd
movl
lods
mov
mov
and
sub
or
and
adc
shll
jmp
cli
pop
sbbb
nop
and
mov
xor
stos
adc
sarb
inc
or
ljmp
bound
loopne
sub
sub
stos
and
or
int3
push
sbb
mov
loopne
dec
aad
cmpb
inc
jecxz
inc
in
in
iret
or
loopne
shrl
dec
fst
lds
mov
xchg
dec
repnz
mov
ret
xchg
or
repz
add
imul
adc
adc
jne
mov
sbb
out
inc
push
xchg
imul
out
add
sahf
icebp
xor
or
push
sub
std
out
mov
jne
jecxz
cmp
inc
pop
loop
fs
mov
out
xchg
repz
jecxz
pop
push
clc
daa
jmp
sti
scas
lock
sub
xchg
inc
out
dec
xchg
inc
leave
mov
push
fstl
into
xchg
in
int3
ret
mov
mov
pop
push
or
mov
push
or
sub
outsl
outsb
pusha
jne
mov
adc
or
movsl
ret
loope
xchg
std
xchg
cwtl
add
icebp
stos
scas
shr
sub
or
add
into
push
loopne
mov
pop
popa
mov
or
mov
dec
popa
aam
xor
loop
mov
xchg
xor
xor
pop
or
mov
adc
fimuls
mov
dec
and
shrl
mov
dec
and
mov
ss
loopne
sbb
addr16
mov
mov
in
push
mov
inc
jp
jl
imul
daa
cmp
or
in
mov
bt
adc
cmp
imul
adc
in
push
fs
sub
scas
jns
push
pop
negl
add
stos
div
push
xchg
xor
xor
xor
imul
int
int
movsb
fbld
xor
rclb
sbb
fxam
push
es
mov
cmp
sub
popf
lcall
std
inc
dec
inc
cmp
repz
aam
daa
mov
xchg
mov
gs
fnstenv
mov
mov
popf
mov
je
dec
push
cmp
jo
fcoml
adc
cmp
dec
xor
mov
stc
test
add
arpl
and
fidivrl
inc
imul
add
mov
mov
jns
fistpl
fwait
pop
subb
fsubrs
xor
rcrb
outsb
lods
dec
inc
xor
sbb
lds
test
stos
not
lret
mov
jnp
add
sub
inc
mov
xor
add
das
adc
xchg
shlb
sbb
inc
mov
xlat
cmpsl
xchg
std
add
test
cmp
dec
mov
pop
ret
dec
add
pop
mov
lcall
and
test
iret
pop
mov
push
sub
jns
sti
mov
mov
addr16
mov
xor
jmp
xchg
int3
data16
dec
or
aas
sub
stos
cltd
cli
jne
or
mov
mov
loopne
dec
push
outsb
jmp
sahf
mov
mov
stos
test
dec
negb
dec
xor
or
int3
inc
test
in
cmp
das
xchg
cmp
fnstenv
mov
fldl
aam
push
loop
fcmove
jb
inc
rorl
mov
movsl
and
sub
or
cmp
ljmp
jno
push
mov
mov
repnz
cmpsl
std
mov
mov
pop
data16
inc
adc
sbb
push
dec
cmp
cmp
adc
push
cmc
mov
ja
or
add
xor
push
add
adc
adc
push
jp
jne
stos
pop
outsb
lahf
lock
mov
mov
cmpsl
or
sub
or
jb
add
loope
setae
xchg
jl
pop
jns
aaa
inc
pop
popf
add
jmp
nop
jns
dec
lock
push
and
or
push
int
mov
decb
push
mov
inc
divb
movsl
js
ror
dec
mov
fsubrl
push
mull
push
int3
rorl
ds
mov
mov
nop
les
ror
imul
les
aad
imul
mov
mov
lret
add
fsubr
sub
cld
pop
stos
jp
push
out
sub
mov
pinsrw
jb
outsl
or
das
insb
or
lods
pop
lret
test
test
int3
sub
push
sbb
lret
cmp
mov
repnz
sbb
cld
jmp
lret
fdivrs
add
sbb
fwait
dec
xchg
mov
cmp
jne
inc
ret
sub
mov
sub
push
shll
fidivs
or
les
adc
fcmovbe
out
or
jmp
hlt
add
ljmp
sbb
imul
scas
aas
mov
push
pop
mov
add
jo
out
gs
inc
fildll
ficoms
int
in
xchg
rol
sub
dec
movsb
inc
push
and
iret
idivb
dec
jne
xor
test
push
dec
mov
add
inc
mov
mov
iret
fwait
inc
mov
cmp
cmp
mov
sbb
pusha
pop
test
jo
xor
jne
xchg
sbb
sbb
stc
lock
jg
jg
jecxz
jge
sub
and
stos
pop
ss
jge
iret
ret
sub
xor
fidivrl
cld
arpl
jo
test
pop
xor
pop
das
jno
jge
gs
pop
lock
xchg
sub
sbb
pop
and
test
cmp
mov
pop
sbb
or
std
popa
sub
cmpsb
out
jge
popa
dec
stc
sbb
insl
jecxz
cmc
rcll
sub
sbbb
enter
sub
sti
iret
push
push
and
loope
clc
jg
jp
dec
push
mov
nop
ret
xchg
in
addr16
mov
inc
repnz
lock
aam
lds
and
mov
out
adc
aad
gs
or
jns
lea
jl
adc
jecxz
sub
cwtl
inc
add
add
mov
iret
adc
jle
les
fnstsw
ss
fnstcw
js
sbb
ja
call
ja
std
sub
inc
in
add
jmp
movsb
dec
scas
mov
je
adc
ficomps
pop
repnz
loopne
push
daa
lea
in
inc
sub
dec
sar
jno
out
cmpsb
xchg
cltd
fsubl
popa
in
xorb
cmc
inc
les
mov
pop
rclb
ds
push
sbb
fisubrl
cld
ja
sub
mov
lret
or
add
aad
movsb
and
lret
ja
inc
mov
sbb
jbe
push
lock
inc
xlat
pop
pop
inc
xchg
mov
aad
fwait
cwtl
jno
sub
clc
push
push
mov
rcr
mov
das
pop
out
adc
add
dec
fcmovnb
mov
fmuls
js
mov
dec
mov
mov
xchg
std
adc
sarl
jne
dec
jnp
outsb
mov
icebp
adc
jecxz
mov
or
into
int3
sbb
daa
and
mov
xchg
xor
pop
out
push
ds
sbb
jle
lods
adc
add
xchg
push
mov
dec
rcll
cmpb
shrb
fsubrl
testl
cli
xchg
sub
sbb
push
mov
pop
xchg
gs
stos
mov
dec
gs
dec
call
jno
mov
hlt
pop
cmp
sti
das
int
dec
jle
js
lahf
push
jns
sub
jno
mov
shlb
scas
test
popa
jnp
ljmp
jge
fsubl
punpckhbw
inc
or
aaa
in
repnz
cld
xorl
jnp
and
loope
add
xchg
in
jbe
add
mov
aaa
call
push
adc
jae
fildll
in
adc
xchg
sub
push
mov
jp
fdivl
std
add
in
call
mov
jbe
sbb
push
inc
outsl
or
cmp
ljmp
mul
int
jmp
mov
sbb
inc
mov
sarb
cmp
sti
mov
jb
cmp
or
lret
jae
mov
and
andl
das
push
shlb
mov
in
popf
sbbb
pop
rorb
pop
pop
icebp
stos
cmpsl
adc
dec
jno
stc
xor
sbb
and
cmp
cs
dec
das
and
ret
inc
fisttpll
pop
cmp
and
aam
or
cli
and
cmc
dec
ds
mov
pushf
lret
dec
mov
push
add
scas
movb
push
int3
push
mov
sub
pusha
inc
push
frstor
addb
add
sub
and
jae
add
fs
insl
scas
mov
sbb
ja
sbb
jl
xchg
cmc
fcomi
push
xchg
je
ljmp
cmovno
call
aas
jmp
and
push
push
in
sub
mov
pop
movsl
cld
sbb
pop
pop
scas
imul
std
push
mov
bound
jp
mov
mov
jg
imul
xchg
shlb
repnz
ja
jp
pop
aaa
mov
sbb
dec
jns
add
out
ljmp
push
adc
outsb
xor
mov
scas
insl
pop
and
xchg
inc
xor
clc
pop
sub
cli
dec
jns
and
imul
adc
ja
icebp
xor
loope
nop
bound
xlat
test
and
mov
sub
popa
out
in
cs
jge
adc
shrb
xor
mov
popf
cmova
imul
je
dec
arpl
jo
sarl
xchg
xchg
mov
nop
test
xor
cwtl
cs
mov
push
ret
dec
or
pusha
cltd
filds
mov
adc
fcoms
sbb
ljmp
sub
dec
aas
pop
pushf
test
fimuls
or
out
adcb
and
jl
test
cmp
mov
mov
mov
int
fisubrs
jge
fiadds
add
cwtl
mov
sub
push
dec
xor
sti
fldlg2
fimull
lds
xor
icebp
out
push
js
add
sub
aam
jle
pushf
mov
pop
mov
jns
dec
dec
xchg
mov
in
fsubrs
add
xchg
into
rcrb
push
nop
jns
mov
mov
pop
ret
jmp
fiadds
cwtl
sub
or
negl
fs
test
lods
mov
gs
fdivrl
push
sub
mov
std
push
xlat
push
adc
jg
enter
loope
or
adc
aaa
fisubl
imull
lcall
cwtl
test
mov
pop
rep
or
aad
xor
push
test
add
lahf
cmc
push
leave
sbb
xchg
fcmovu
xor
outsl
pop
gs
lock
jp
push
sbb
mov
cmp
out
popa
pop
jg
insb
jne
sbb
pop
les
xor
test
iret
and
push
and
pop
push
push
test
and
cmp
ret
dec
push
nop
inc
jge
xor
push
test
jecxz
xchg
or
jo
xor
fisubs
test
scas
push
or
daa
mov
je
push
pop
mov
and
jne
in
mov
fimull
stc
mov
mov
mov
sbb
lcall
fsts
cli
dec
scas
dec
pusha
inc
mov
jo
xor
mov
mov
iret
pop
cmp
jb
scas
loope
mov
cwtl
push
aaa
sub
sbb
scas
ret
movsb
insb
sbb
mov
adc
xchg
pusha
ljmp
and
out
add
mov
push
cmp
aaa
enter
scas
jnp
xor
sbbl
jbe
push
xchg
inc
xlat
clc
stos
push
sti
sub
mov
rolb
mov
sti
ss
push
andb
dec
pop
out
add
idivb
cwtl
push
mov
inc
in
xchg
push
out
and
pop
nop
or
rcl
rcll
stos
xor
cmp
dec
ds
push
scas
push
js
push
and
sub
cs
and
add
mov
jno
out
leave
addr16
out
icebp
xchg
insb
adcl
mov
dec
je
xorl
mov
add
cmpsl
or
add
jmp
scas
mov
ds
jg
sahf
fisubrs
cmc
addb
and
cmpsl
sub
loopne
mov
je
mov
mov
sub
inc
ret
jnp
fstpt
addr16
mov
xchg
push
or
dec
add
add
jge
jo
fildl
rcr
test
cmp
mov
popf
std
jge
sub
xchg
test
in
sbb
fmull
mov
cmp
fsub
ja
xchg
xchg
sbb
mov
pop
jmp
int
sbb
aad
sub
sub
xchg
or
scas
stos
shll
imul
data16
mov
sbb
nop
cmc
test
fidivs
xor
les
fadd
data16
add
adc
pop
mov
call
xor
ficomps
out
pushf
pop
xor
push
fidivrl
aam
test
and
xchg
pop
xchg
push
rcr
sub
push
std
mov
and
mov
movsb
dec
mov
imul
sar
mov
mov
out
inc
xor
ret
es
divb
jge
mov
mov
jmp
push
rolb
push
loop
ds
xchg
inc
push
testb
call
in
dec
mov
fisubrs
sahf
sti
or
add
outsb
dec
and
adc
aaa
icebp
xor
sti
out
dec
inc
add
or
cmp
sub
arpl
pop
push
cld
and
sub
pop
sub
scas
mov
dec
notb
icebp
mov
xchg
fbld
and
push
aas
pusha
pop
lcall
int
sahf
pop
jne
push
pop
out
sbb
sub
sbb
sub
pop
arpl
fnsave
push
outsl
hlt
scas
ja
push
mov
sub
cmp
add
out
aaa
push
or
aam
stc
imul
cmp
jae
or
pop
out
or
adc
or
jbe
push
sbbl
fsts
mov
adc
sbb
xor
mov
jp
jbe
ret
add
push
mov
hlt
gs
xor
push
cltd
or
sbb
add
cmc
xchg
push
dec
push
fwait
in
lea
sahf
or
std
aam
xchg
movb
mov
inc
and
mov
sub
pop
and
jne
cli
mov
sbb
test
mov
jnp
lds
jns
lret
cmp
push
mov
test
pop
sbb
mov
dec
push
jle
sahf
mov
mov
sbb
sbb
test
dec
mov
rclb
insb
mov
cmp
dec
adc
inc
sbb
adc
xchg
in
hlt
out
sbb
xchg
cmp
dec
test
push
mov
scas
decl
mov
std
cmp
push
out
lea
pop
cltd
jns
inc
mov
xchg
mov
aam
pop
jecxz
clc
inc
sub
leave
cmp
addr16
aam
test
pusha
dec
jle
jno
xchg
rcrb
dec
or
ss
xchg
pop
add
push
inc
sbb
testb
add
iret
aaa
lea
cmp
fs
add
cli
pop
stos
sahf
sbb
xchg
jmp
loope
dec
cmp
pop
fs
cs
sbb
mov
sub
int3
les
je
testb
daa
xchg
add
add
repnz
jle
mov
mov
outsl
cltd
mov
fs
test
mov
sbb
dec
push
rcl
call
ficoms
nop
mov
jbe
mov
mov
outsb
sbb
and
cld
pusha
cmp
adc
mov
and
sbb
pop
out
sahf
das
icebp
mov
mov
dec
mov
dec
decb
ficomps
lcall
cmp
popa
push
and
adc
push
push
sub
popf
js
lret
mov
mov
mov
pop
and
adc
sub
int3
fldt
iret
loop
ljmp
mov
cmp
add
mov
addr16
imul
mov
push
add
pop
push
jne
loopne
mov
fistpll
or
pusha
mov
lea
clc
bound
pushw
push
push
ret
arpl
xor
cli
pop
mov
cs
jbe
pop
cld
jle
fwait
int
frstor
sti
jle
lret
iretw
mov
cltd
imul
sub
add
add
dec
aaa
test
movsb
insl
clc
or
cwtl
mov
add
mov
lods
sub
orb
cmp
xchg
cmpsb
in
pop
or
lcall
fisubrs
outsl
xor
out
fsts
cmp
xor
jg
jmp
mov
mov
jge
mov
sbb
mov
nop
push
cs
push
mov
pop
cli
mov
aaa
sbb
es
push
fnstcw
aas
pcmpgtw
cmp
or
fisubrs
cld
int3
iret
adc
pop
mov
iret
cltd
mov
cltd
jns
add
pop
pop
adc
jle
je
fcmovu
push
sbb
sbb
mov
imul
repz
lea
inc
out
xor
into
jge
int3
sub
mov
xchg
inc
outsb
adc
xchg
push
mov
mov
cmp
scas
jecxz
lds
mov
mov
lret
mov
jbe
add
dec
sub
jp
mov
loopne
roll
in
xchg
aam
add
imull
ljmp
adc
push
lret
pushf
mov
pushf
out
inc
cwtl
jge
mov
mov
mov
sbb
pop
daa
fwait
or
test
inc
lcall
out
ret
lock
jmp
jecxz
jge
mov
sub
cmp
mov
ret
mov
cwtl
js
dec
je
fdivs
roll
in
mov
div
push
dec
out
mov
out
jnp
jnp
lret
int
repz
dec
sbb
inc
fbstp
fucomp
jmp
scas
sbb
mov
mov
inc
dec
push
mov
mov
adc
inc
rcl
outsb
movsl
sub
mov
outsl
sbb
mov
fs
mulb
psraw
dec
mov
xchg
xlat
in
add
xchg
stos
push
repnz
mov
pop
jb
lods
inc
push
in
aad
push
pop
or
sub
cld
roll
xchg
mov
mov
pop
sbb
cmp
cli
lret
jb
or
inc
dec
scas
ljmp
fcomp
push
stos
or
adc
addr16
sbb
push
jl
jo
pusha
or
frstor
add
les
mov
ds
add
idiv
sub
jp
dec
lret
popa
cmp
jae
pop
icebp
imulb
std
pop
xor
ljmp
jmp
aaa
jne
cmc
shrl
js
hlt
ret
aaa
mov
in
testl
fnsave
jl
mov
imulb
mov
jecxz
jmp
cmpl
lock
subl
pushf
aaa
std
xchg
mov
scas
cltd
das
add
ret
fsubrs
cwtl
inc
flds
jp
mov
daa
pop
pop
fs
sub
lods
sub
sub
fldt
jecxz
jb
push
xlat
outsl
mov
lods
adc
daa
adc
mul
sub
arpl
popa
xor
add
jge
loope
xchg
mov
mov
out
scas
jne
imul
testl
xchg
in
fisttpl
dec
cmp
ret
mul
mov
pop
xor
mov
aam
jecxz
out
mov
outsl
iret
lock
pop
lock
dec
insb
inc
push
xchg
lret
xchg
or
inc
scas
ja
jae
std
pop
sub
or
adc
mov
xlat
lods
sbb
xor
incb
mov
std
loope
mov
and
cmpsl
mov
fcomps
ret
je
in
and
xorl
loope
add
sbb
mov
jge
inc
dec
out
or
push
pop
pop
dec
fidivl
ret
push
lods
mov
loopne
cmpsb
sbb
cli
inc
mov
inc
xor
dec
loope
es
push
and
inc
stos
sbb
sti
out
in
and
jns
pop
jae
pop
rcrb
out
in
xlat
bound
mov
or
add
adc
mov
leave
gs
dec
inc
test
sar
pop
sbb
dec
mov
push
imul
mov
xchg
pop
scas
movsb
pop
notl
int3
mov
pop
mov
mov
sar
scas
adc
das
addr16
mov
hlt
mov
and
aas
lret
add
add
imul
imul
mov
lods
inc
das
or
mov
adc
scas
mov
jmp
lods
mov
cmp
sar
idiv
adc
push
enter
sub
dec
or
pushf
jl
fdivl
jno
scas
cmpsl
pop
dec
jle
sub
test
cli
adc
fisttpl
fcomp
pop
movntq
leave
cs
xchg
mov
xchg
jbe
dec
lds
push
jge
das
cmpsl
jle
lea
out
fcmove
test
inc
outsl
cltd
scas
sahf
push
inc
mov
imul
xchg
cmc
scas
dec
popa
scas
cmp
aaa
jo
fildll
shrb
cmpsl
fucomi
rorl
xor
cmp
icebp
in
dec
cmpsl
lahf
aas
xor
pop
lock
jecxz
adc
mov
imul
cmp
push
stos
adc
dec
jbe
gs
pop
cmpb
jno
or
or
stos
out
push
push
cli
pop
ret
mov
jne
lods
out
xchg
popa
jge
jge
cmp
jno
mov
jp
cld
push
stos
shr
addb
mov
lret
inc
xor
lock
add
lods
pop
and
imul
ret
insl
popa
mov
iret
mov
iret
mov
nop
insl
cmp
jo
lahf
pop
xlat
mov
shlb
mov
adc
test
sub
xorl
pop
jbe
adc
lds
xor
scas
rcrl
or
mov
cwtl
setl
nop
xchg
add
and
and
push
fistps
leave
ds
push
adc
stos
jl
jnp
imul
or
fdivs
inc
leave
lods
loop
int3
jle
dec
mov
xor
pop
push
xor
aam
xchg
mov
push
lahf
stos
adc
pop
add
cmp
sbb
negl
push
push
sub
pop
inc
mov
loope
dec
out
push
movsl
inc
mov
cmp
int
shr
aam
andl
push
aad
mov
test
cltd
jge
cli
rolb
and
lock
mov
rcll
cmp
dec
fsubrl
push
dec
dec
arpl
popf
pop
mov
add
arpl
or
add
icebp
add
outsl
xchg
mov
pushf
in
insb
or
pusha
mov
lock
hlt
es
data16
xor
scas
out
jnp
test
test
mov
retw
xor
test
sub
lret
adc
lret
test
stc
xor
in
adc
adc
subl
andb
inc
fmul
dec
xorl
cli
int3
jp
mov
sub
and
xor
jnp
sub
movups
mov
addl
hlt
mov
add
mov
in
dec
push
ret
sahf
cmp
xorl
movl
pop
lcall
cmp
test
aas
test
jmp
pop
mov
pop
fstpt
out
pop
out
daa
ret
rcrb
fabs
inc
insb
popf
in
add
adc
out
sub
adcl
and
sbb
inc
mov
in
cmc
int
fsubrl
shll
xchg
adcb
sbb
mov
pop
nop
lods
fmul
movsb
xor
push
fs
sub
sbb
imul
sub
mov
out
gs
pop
rcrl
movsl
sub
rcrl
add
dec
pop
ficompl
sbb
sbb
inc
mov
lret
pop
push
cmp
mov
sbb
adc
jbe
les
out
movups
inc
loopne
test
adc
mov
aam
in
mov
std
dec
js
push
cs
xlat
clc
icebp
dec
dec
jnp
fcoms
mov
cltd
jmp
sbb
nop
test
aam
sahf
cmp
daa
orb
sub
mov
rcrb
cmc
shll
jp
mov
int3
xor
dec
cmp
rorb
mov
dec
or
loopne
adc
adc
pop
test
jne
mov
jl
fidivrs
outsl
xor
fmull
jmp
xor
mov
push
cmp
lahf
push
jnp
xor
call
test
lds
fidivrl
mov
cmc
jns
jne
adc
xchg
adc
and
dec
loope
and
or
push
pushf
cmc
les
addr16
jle
lods
addr16
shl
shl
or
add
inc
pop
cli
mov
xchg
mov
jmp
push
rol
icebp
aam
cmp
aaa
xchg
jne
lahf
jle
mov
and
ret
sub
xor
mov
sti
movsb
pop
jg
mov
in
and
pop
mov
pop
xchg
pushf
and
xor
push
xchg
add
arpl
test
popf
mov
xchg
pusha
and
std
add
hlt
es
push
fldcw
leave
push
gs
aaa
sub
or
sti
mov
in
cmp
fnsave
test
iret
push
pop
aad
dec
mov
fnstsw
mov
inc
jg
dec
mov
jecxz
insb
filds
cmpsl
mov
shr
ret
rolb
shlb
sbb
cltd
jo
xchg
push
test
and
stc
xlat
dec
enter
cmpsl
or
aaa
jmp
bound
pop
jno
dec
sub
cltd
test
xor
jne
jno
into
es
dec
push
jge
hlt
sub
and
or
outsb
sub
dec
jae
sub
ljmp
mov
call
push
sarb
decb
push
mov
or
add
and
sub
ljmp
sub
dec
or
jl
je
ja
in
mov
addr16
jae
cmp
std
outsl
or
xor
ret
in
jecxz
push
dec
into
leave
sahf
pop
mov
add
sub
jecxz
mov
jb
iret
cli
std
and
mov
movsl
sub
xor
push
fs
movhps
pop
pop
sub
stos
aas
mov
in
fstpl
into
push
and
movsl
xor
imul
insb
out
sbb
pushf
out
ficoms
mov
sarl
sub
fs
shrb
test
dec
das
inc
scas
scas
pop
jg
dec
xor
cmpsl
iret
pop
inc
push
dec
mov
push
in
pushf
test
leave
imul
cmp
push
aad
js
test
pop
add
pop
stos
mov
xchg
inc
mov
push
dec
test
ss
xchg
imul
das
sub
repnz
sub
xchg
adc
rolb
or
and
lret
cwtl
jmp
fmuls
test
xor
lcall
lret
jmp
in
pop
or
popa
xor
cmc
fmull
sti
jl
movsb
stos
outsb
cld
cmp
cltd
or
pop
repz
int
outsb
rorl
and
and
inc
sbb
clc
sti
out
adc
adc
and
outsb
adc
dec
loop
pop
shrb
cli
out
ljmp
aaa
sub
lds
test
inc
mov
cmp
stc
test
mov
push
push
and
roll
lret
push
cmp
cmovno
repz
lcall
or
imul
test
xor
clc
jb
dec
xchg
mov
ret
cmpsb
add
mov
pop
pop
jg
mov
out
mov
bound
gs
rol
mov
mov
xchg
pop
xor
ja
cltd
ret
pop
adc
cwtl
or
movsl
mov
data16
jmp
out
cmc
push
imul
lea
inc
andb
sarl
fwait
clc
xchg
and
cli
icebp
sbb
mov
mov
pop
add
cmpsb
inc
call
btcl
sub
cmp
dec
scas
jne
cwtl
daa
inc
rcrb
xor
and
lea
and
pop
add
adc
adc
pusha
adc
jmp
loope
sub
cmp
or
aas
int
push
std
neg
dec
stc
pop
xchg
insb
jge
push
xorl
mov
xchg
fidivl
out
loope
cmc
cmp
out
clc
mov
jmp
add
les
outsb
mov
cwtl
xor
mov
and
idiv
scas
fists
add
push
inc
fcompl
and
fisttpll
pop
push
push
icebp
sub
scas
cmp
and
xor
mov
and
xor
and
inc
mov
cld
int3
sbb
adc
or
iret
fildl
cltd
inc
int3
xchg
add
xor
ljmp
xlat
popf
cwtl
inc
xor
inc
cs
push
push
lea
mov
inc
ds
sub
sub
add
cs
jmp
popf
mov
outsl
xchg
pop
mov
cltd
andb
push
pop
scas
lods
xor
push
aam
jb
outsl
fbstp
cli
cmpsl
scas
gs
std
mov
xor
ss
into
js
cmp
outsl
cmpb
dec
jne
xor
mov
sbb
cmp
fstps
cmp
je
call
xchg
push
fstpl
mov
into
lcall
imul
ds
jns
jecxz
fldl
in
and
mov
dec
arpl
daa
jb
test
clc
mov
and
imull
pop
inc
cld
xor
out
xchg
xchg
popa
shlb
iret
out
mov
stos
lcall
int
test
loopw
lahf
jae
pusha
xchg
sbb
dec
into
fs
jno
adc
and
sahf
cmp
dec
cmp
sub
sbb
int3
sbbb
bound
dec
pop
out
mov
aad
scas
inc
sti
imul
fdiv
pop
imul
mov
jl
jp
sbb
lret
lds
mov
mov
aad
aas
mov
adc
shrl
and
sbb
push
pop
subb
jecxz
icebp
add
xor
mov
jecxz
and
sahf
dec
mov
pop
or
mov
mov
mov
push
adc
sub
leave
mov
outsb
push
lahf
call
shrb
cmp
push
std
add
lock
inc
cwtl
jmp
cmp
insl
daa
and
leave
movsb
cli
shrl
int3
in
push
inc
inc
xor
inc
in
das
das
dec
jmp
fcomip
inc
shr
repnz
mov
and
cmp
or
out
push
sti
sbb
int
loopne
call
movl
test
or
pop
or
inc
push
enter
adc
es
push
test
cwtl
call
and
xor
mov
sub
dec
adc
cwtl
push
out
icebp
jl
mov
fs
outsl
mov
not
out
sahf
rcrl
mov
jle
notl
jnp
jbe
adc
adc
ljmp
fs
jns
outsl
popf
cmp
mov
add
loopne
jae
and
push
aam
aas
pop
je
shll
fs
pop
mov
lods
dec
loope
dec
inc
inc
cltd
pop
jl
imul
inc
es
jae
imul
dec
mov
inc
or
or
imul
insl
dec
rorl
mov
stos
adc
ret
cli
decl
adc
pop
hlt
dec
mov
add
and
aad
fidivs
inc
out
mov
xchg
cltd
sahf
and
data16
adc
mov
inc
push
pop
ss
mov
inc
cmp
mov
insb
pop
cmp
push
pop
imul
repz
icebp
xor
inc
mov
xchg
out
icebp
aas
out
incl
mov
xchg
outsb
dec
push
adc
in
cmp
inc
xor
adc
jnp
mov
sbb
mov
push
or
sbb
jge
mov
sub
jge
mov
cmp
cltd
xchg
or
mov
into
insl
xchg
cmp
cmp
popf
or
xor
arpl
mov
push
or
adc
js
adc
repz
push
sub
test
or
lock
push
fs
cltd
lock
lahf
sbb
cmp
add
movb
js
and
mov
add
mov
cmp
xchg
stos
test
shrb
int
out
mov
mov
add
loop
in
cmp
gs
and
repnz
insl
inc
fildl
sub
stc
jg
ljmp
jns
sub
adc
cmp
out
inc
lods
add
in
sub
je
add
stc
das
aam
inc
adc
push
nop
lcall
xor
call
pop
arpl
xchg
cmpsb
mov
shll
ds
loopne
in
push
adc
jmp
sub
mov
pop
jle
div
sbb
les
mov
adc
cmpsl
add
and
pop
out
cld
mov
jmp
fwait
sub
mov
cwtl
fadds
sbb
rclb
ljmp
mov
outsl
das
mov
stos
lods
fildl
dec
add
sub
add
je
jg
cmp
aaa
and
mov
ljmp
cs
jecxz
lret
pop
and
xor
pop
sub
dec
cmp
imulb
push
xchg
frstpm(287
inc
fsub
fisttps
add
mov
hlt
adc
pop
xchg
mov
shlb
sti
jl
es
rorl
jge
lods
daa
lcall
hlt
adc
push
fildll
jle
addl
push
enter
outsl
shll
mov
dec
cmc
nop
movsl
sub
imul
or
rcrl
cmpsb
or
mov
adc
fldl
jg
nop
int
rol
add
mov
mov
sbb
out
dec
in
xchg
call
clc
shl
mov
in
add
aas
inc
add
out
jns
mov
add
or
lea
fidivs
gs
cmp
or
hlt
xlat
mov
pop
addb
push
mov
in
loope
add
imul
mov
movsl
adc
ljmp
pop
stos
push
xor
xor
dec
fcoms
js
das
dec
test
pop
das
test
shl
sub
js
lock
pop
or
sub
cltd
or
push
js
cmp
sbb
jecxz
rcrb
add
inc
pusha
fdivrl
add
rorb
sbb
push
pop
and
jle
or
inc
loope
insl
insb
mov
fdiv
iret
xchg
push
push
popa
lcall
pop
out
inc
jmp
xchg
repnz
mov
add
jnp
imul
pop
cmp
das
sbb
in
jo
mov
stc
mov
fs
mov
xchg
pushf
into
mov
data16
mov
test
or
sub
mov
push
in
xchg
dec
mov
das
sbb
sbb
xchg
iret
lods
fidivrl
inc
inc
data16
jle
sbb
imul
ljmp
arpl
aas
dec
jb
or
mov
mov
cmp
repz
sbb
sub
movsb
mov
pop
push
or
xchg
ss
xor
inc
push
mov
scas
js
dec
testl
dec
mov
call
cmp
jnp
dec
dec
jp
add
mov
fwait
lea
inc
jge
std
in
push
and
testb
pop
jb
xchg
mov
cmp
sub
cmp
cld
out
sub
jbe
cmpl
outsb
adc
mov
push
in
aam
xor
mov
sbb
add
mov
cmc
out
dec
xchg
cmp
clc
xlat
nop
outsb
test
loop
mov
movsl
out
adc
loop
nop
icebp
and
je
ljmp
int
pop
dec
ficoms
pop
int3
sub
add
cld
popa
or
sbb
cwtl
pop
dec
or
rorb
rcrb
jbe
xchg
cmp
xor
pop
dec
and
add
test
push
add
stos
jo
lea
jno
fwait
xchg
lds
mov
shlb
adcb
lret
fs
mov
movsl
xlat
fistps
pop
lock
daa
call
sbb
test
je
lods
std
icebp
cmp
loopne
pushf
pop
lcall
cmp
sbb
mov
xor
testl
neg
ljmp
push
lds
inc
jg
add
movsl
daa
or
stc
sub
das
jbe
xchg
sbb
fidivs
xor
pop
lahf
jecxz
jae
and
adc
aam
iret
negl
push
shrb
fs
out
sbb
inc
les
dec
scas
jb
mov
addr16
fsubr
test
ds
ret
xor
or
add
lods
test
stc
pop
xchg
jge
jmp
decb
mov
jg
adc
pushf
idiv
push
pop
std
push
mov
and
mov
mov
rcrb
fidivrl
cmp
nop
pusha
push
test
dec
xor
cs
and
mov
jns,pt
mov
and
enter
push
inc
int
fucomi
hlt
push
sbb
cmp
loop
mov
lock
ljmp
repnz
cmp
addr16
lock
ret
mov
aaa
roll
idivl
jno
adc
pop
mov
jae
imul
mov
ja
aam
je
iret
dec
add
out
xchg
rcl
inc
xchg
or
sbb
sarb
andb
adc
or
cltd
add
jp
stos
and
push
pusha
js
rclb
pusha
jg
aas
sahf
fisttpl
push
jecxz
and
cmc
pop
dec
mov
jb
dec
adc
cli
or
mov
cmp
in
test
in
aam
cmp
inc
mov
mov
test
xlat
inc
mov
cmp
scas
mov
xchg
push
into
es
lcall
iret
jg
xor
sbb
dec
arpl
pop
mov
mov
pop
ret
dec
jb
divl
sub
in
loope
xor
inc
push
lret
clts
adc
mov
push
clc
jge
scas
sbb
and
lods
and
call
xchg
sbb
xlat
andnps
push
fstps
inc
and
xchg
xchg
fcomip
pop
push
mov
pop
and
mov
loopne
bound
outsb
xor
sbb
pop
int3
shll
mov
pop
data16
in
lea
test
icebp
mov
inc
and
insl
jnp
xchg
push
inc
andb
pop
rcl
out
add
mov
outsb
ljmp
mov
outsl
movsb
insb
or
add
sub
sub
cmp
stc
cli
jns
pop
jge
or
inc
jmp
and
icebp
adc
jg
cmp
in
sbb
adc
xor
inc
lcall
cld
test
cmpsl
add
das
dec
idivl
dec
in
testb
mov
jle
mov
in
cltd
lret
mov
imul
out
push
cli
lea
fdivl
add
in
pop
jo
push
insb
adc
pusha
xchg
arpl
arpl
dec
inc
jne
or
xor
outsl
adc
insl
mov
add
test
dec
push
popa
loopne
push
xchg
stos
stos
jmp
mov
les
cmpsb
pop
gs
adc
cli
mov
stc
iret
in
lds
or
repz
rorb
xchg
fwait
stos
in
pop
push
xor
xchg
and
pushf
das
jno
imul
jnp
out
mov
sub
jne
into
mov
scas
adc
dec
or
or
mov
xlat
dec
or
push
sub
pop
mov
fisubrs
test
inc
add
jg
push
xchg
sbb
jp
cmp
shl
dec
pop
or
std
pop
dec
ja
enter
sbb
xor
je
pop
dec
and
mov
sbb
gs
adcl
js
fdivl
mov
xchg
roll
pop
jecxz
mov
xchg
cvtps2pd
push
xchg
loopne
mov
or
pop
es
push
stc
sub
stos
pop
sub
sub
or
es
ljmp
test
aas
xor
adc
lds
cmp
add
or
in
mov
out
fsts
or
ds
pop
mov
push
add
fs
loopne
in
test
inc
sbb
sbb
and
mov
mov
sub
or
mov
mov
outsl
sbb
shlb
cld
xchg
or
pusha
movb
adc
sub
sub
stc
lods
cmp
pop
xchg
popf
in
cmp
hlt
iret
and
loop
dec
pop
jb
stc
and
xchg
cmpb
and
push
insl
push
sti
dec
sub
pop
jge
add
and
inc
sub
pop
icebp
repz
jbe
cs
pushf
insb
mov
insb
sub
sti
mov
cmc
mov
hlt
pop
aam
hlt
mov
sub
xchg
jg
mov
popf
pop
and
hlt
fdivr
xchg
pop
or
fcoml
mov
sub
movsb
cmp
test
in
mov
popf
jecxz
or
add
jl
lods
push
sbb
adc
inc
lds
dec
pop
gs
movsb
test
dec
cmp
filds
push
cs
sbb
negl
aad
xlat
lds
push
in
dec
sbb
mov
pop
inc
pop
aas
int3
lret
cmpsb
dec
jecxz
add
sub
cmp
lods
mov
icebp
xchg
and
inc
jp
xchg
shrl
sub
leave
xchg
stos
jo
repnz
lods
mov
loope
adc
stos
mov
push
rcr
and
test
mov
shll
ret
cwtl
jg
fcompl
fnstsw
test
cmp
mov
fisttpll
movsl
mov
mov
jne
inc
cmp
out
aaa
repnz
jno
jnp
cmp
arpl
push
sub
idiv
xchg
push
push
leave
dec
fstps
inc
mov
mov
jmp
icebp
inc
fcoml
mov
and
push
pop
rcr
push
dec
sub
test
addb
and
pop
rcrl
mov
sub
shlb
jle
pop
mov
stos
mov
stos
fdivrp
ficoms
pop
mov
cmpsl
mov
ret
xchg
cwtl
or
jle
push
jg
and
mov
xchg
cltd
cmp
adc
add
in
add
add
repnz
pop
lret
loopne
inc
dec
cmp
xor
xor
push
repnz
and
cli
xchg
xchg
hlt
incb
mov
sbb
push
adc
xchg
xor
aam
in
repnz
psubw
and
jo
adc
mov
cmc
xchg
inc
bound
mov
or
adc
es
pop
inc
sbb
xchg
shlb
or
stos
in
and
or
add
push
cmp
sbb
dec
xor
xchg
test
inc
adcl
ret
cltd
jbe
ljmp
pop
inc
add
xchg
xor
ficoms
cmp
jns
jmp
add
push
loopne
das
sarl
xchg
js
mov
cmpsl
inc
mov
test
sbb
lea
imul
jo
adc
mov
push
add
mov
and
mov
hlt
push
stos
jmp
imul
adc
sub
jae
mov
test
gs
pushf
movsl
fisubl
xor
pop
and
cmp
and
or
cmp
jmp
incl
push
shll
fisubs
pop
sub
mov
mov
jns
cmp
test
adc
xor
cs
jae
and
jo
out
sahf
xorl
push
sbb
movsl
push
ds
xor
in
movsb
mov
sbb
inc
pusha
jecxz
jmp
sbb
lea
dec
stc
int3
gs
jbe
stos
in
pop
ret
scas
xchg
aam
test
add
int
insb
fwait
ja
pop
loop
inc
insb
rorb
ss
sti
add
ret
sti
sbb
shrl
mov
sarb
sahf
jle
mov
mov
lock
xor
cmp
or
xlat
gs
stos
xchg
add
es
icebp
mov
xchg
mov
pop
push
xlat
sub
sbb
adc
xchg
push
mov
xchg
push
add
inc
mov
aas
or
in
add
jb
jmp
dec
sarb
subl
adcb
xor
push
pop
aad
sbb
mov
test
inc
pop
andb
fadd
sub
stos
and
rorb
pushf
mov
sub
test
pusha
aad
jb
mov
xchg
dec
gs
push
xchg
notl
sbb
jne
push
dec
pop
xchg
inc
dec
mov
push
xchg
mov
in
mov
inc
inc
in
mov
cmp
fidivl
insl
out
jle
inc
jl
push
std
push
aaa
mov
add
mov
adc
inc
in
lea
sub
ret
lcall
in
dec
jmp
push
mov
xor
sub
sar
mov
mov
mov
mov
jae
ficoms
pusha
test
add
pop
inc
cs
cld
and
outsl
mov
cs
push
mov
push
repnz
mov
fxch
mov
pop
dec
cmpsb
sub
xchg
mov
adc
inc
sahf
cmp
fsubs
mov
out
push
inc
je
mov
scas
movsb
loopne
movsl
and
and
pop
aad
stos
xchg
jge
repz
stc
cmp
int3
adc
dec
arpl
jne
leave
dec
inc
aas
push
push
cmpsb
loop
out
outsb
inc
mov
jb
in
rorl
stc
jns
xchg
hlt
sbb
or
imul
jbe
push
dec
imul
ret
imulb
sbb
cmp
jg
push
cmp
aam
xor
ljmp
sbb
xchg
jl
jge
and
jb
sub
sbb
jmp
in
lds
dec
test
test
out
mov
daa
jno
test
mov
scas
mov
mov
lret
out
or
and
dec
jne
movsb
pusha
icebp
inc
xor
xlat
popf
in
test
xchg
xor
push
leave
xor
jo
imul
pusha
or
cmp
imul
or
test
mov
cs
xor
test
shll
fnstenv
in
aad
scas
lahf
mov
mov
or
cmc
lcall
lods
insl
mov
lahf
and
nop
hlt
ror
add
jecxz
cmp
dec
xlat
xor
push
mov
jne
mov
mov
mov
pop
adc
leave
les
in
loope
in
insl
lahf
mov
adc
dec
popa
lods
push
int
scas
imul
lods
xlat
ljmp
mov
sbb
inc
mov
lea
out
push
push
add
std
xor
sub
mov
scas
aam
das
hlt
negb
stos
insl
dec
outsl
cmpsb
adc
sti
lods
aas
add
out
in
rcll
push
jae
push
adc
scas
jns
mov
sbb
mov
dec
sub
mov
jmp
popa
xchg
imul
adc
fimuls
gs
ljmp
add
and
inc
push
inc
dec
cmp
leave
push
mov
outsl
cs
xchg
dec
fsubrs
pop
inc
pop
psadbw
roll
xchg
movsl
jecxz
xor
orb
adc
dec
adc
or
cmc
loopne
mov
sahf
pop
jmp
lret
mov
mov
xorb
jmp
call
and
addr16
cmp
inc
fidivrs
outsl
aaa
dec
xchg
push
mov
pop
lock
mov
ret
inc
mov
aad
mov
adc
punpckhdq
jmp
jmp
dec
aaa
lret
je
ficoml
inc
push
movsb
data16
xor
mov
sbb
addr16
jb
inc
mov
aas
clc
jbe
sub
add
iret
loop
sbb
jb
loope
sub
xor
mov
dec
xor
outsb
jmp
std
jae
add
cltd
divb
cmc
jns
sub
and
xor
sti
xlat
push
std
push
outsl
cmp
repnz
inc
popa
xor
sub
cmp
xor
movsl
ljmp
add
outsl
adc
loope
test
lock
inc
xchg
gs
movsb
xor
pop
and
into
sahf
cltd
mulb
or
clc
xchg
outsb
sub
inc
pop
cmc
inc
call
inc
aas
mov
mov
xchg
add
movsb
sbb
lahf
ja
enter
testl
pop
gs
push
lds
add
daa
jo
into
sarl
adc
into
fbld
mov
mov
sub
mov
dec
lods
or
xchg
mov
jbe
cmpsl
mov
pop
mov
dec
adc
jp
mov
cmpsl
and
rorl
mov
cltd
inc
sti
lods
push
sbb
das
jmp
stc
ficoms
jge
inc
mov
ds
dec
dec
pop
mov
sar
inc
popf
fidivs
in
mov
lds
fadds
lahf
scas
jl
xchg
popf
push
scas
gs
das
jge
ss
mov
notb
fwait
dec
hlt
hlt
or
mov
loop
mov
ltr
in
sbb
or
cmp
adc
in
outsb
xor
lods
into
xchg
mov
inc
jp
mov
mov
mov
xor
mov
xchg
ljmp
aam
fldenv
sbb
in
push
lods
xchg
cmp
hlt
das
cmp
stos
in
cmp
str
jnp
int
jl
or
sbb
dec
pop
jmp
clc
into
inc
dec
sub
mov
cmp
popf
push
xlat
xor
pop
push
jmp
das
leave
fistl
mov
iret
ss
jg
pop
and
mov
insb
fiaddl
add
cmp
and
mov
push
lock
mov
mov
insl
ljmp
call
dec
inc
cmc
dec
add
fnstsw
sbb
or
or
es
xor
mov
andl
jle
cmp
jnp
rcll
in
sub
inc
fbld
pop
mov
cld
adc
ljmp
shrl
push
daa
lahf
lods
fmuls
jmp
inc
int
mov
and
div
mov
int3
fdivp
mov
outsb
inc
hlt
scas
xchg
xchg
and
mov
jb
inc
jo
mov
ja
test
in
test
sub
xchg
lds
scas
in
xchg
ret
cltd
adc
jecxz
fstl
adc
push
adc
xor
movsb
add
mov
repz
scas
add
mov
mov
test
call
push
repz
adc
mov
rclb
adc
push
xchg
cwtl
xor
push
mov
ljmp
lock
insb
mov
inc
clc
cmp
repnz
ret
icebp
and
xchg
sarb
into
push
addr16
sbb
fnsave
filds
sub
adc
test
aam
mov
xchg
std
jae
or
ss
mov
lahf
loope
adc
or
sub
fcmovu
push
out
jg
loop
dec
jbe
aas
xchg
mov
or
pop
or
add
cwtl
adc
outsb
ffree
in
adc
popa
xor
sub
inc
and
jb
xorb
and
mov
or
mov
pop
xchg
dec
push
mov
bound
jae
faddp
mov
cld
inc
lret
jge
scas
mov
push
outsb
cmpsl
not
mov
xlat
inc
sbb
mov
add
dec
test
pop
decb
cmp
dec
pop
sarb
dec
and
xor
lods
cmp
dec
xchg
mov
xor
sbb
xor
shlb
jo
cli
jbe
mov
decb
dec
lock
hlt
sbb
inc
bound
sbb
xlat
sbb
or
xor
mov
mov
cmc
mov
push
mov
das
mov
aam
cli
bound
mov
in
aad
fcmovne
and
xchg
dec
jae
jbe
dec
push
sub
rcrl
xlat
push
pop
xchg
pop
push
lahf
dec
es
push
ret
popa
and
jge
push
pop
clc
repnz
adc
pusha
xchg
sti
movsb
repz
outsl
loop
data16
es
lahf
inc
inc
xor
sub
and
or
mov
repz
fucomp
push
mov
decb
fs
cli
cmp
mov
lds
std
into
cmp
xchg
les
ret
int
lds
push
popa
arpl
in
mov
inc
lods
and
adc
dec
and
or
xor
xchg
ljmp
lcall
dec
mov
mov
jb
out
hlt
sbb
and
sub
xlat
jmp
mov
inc
pop
rorb
cmp
lcall
cmp
or
push
out
negl
je
int3
cmp
sbb
jo
popa
iret
pop
aam
pop
xchg
std
mov
int
inc
jo
es
enter
aaa
pop
dec
popf
idivb
ljmp
test
mov
jl
add
inc
popf
or
dec
mov
test
sti
or
pop
mov
push
outsl
mov
fs
int3
scas
test
clc
ds
fst
mov
fsub
add
dec
sbb
scas
push
fldcw
cli
xor
mov
add
in
xchg
or
cld
jge
mov
cmp
rclb
jecxz
dec
in
ror
lods
lds
pop
inc
dec
lock
leave
pop
xchg
jp
insb
mov
inc
pop
cli
pop
mov
mov
pop
add
adc
jmp
cmp
adc
jbe
je
pusha
lea
stos
sti
sub
pop
aad
cmp
or
mov
push
adc
and
testb
add
jle
add
cmp
pop
xor
fbstp
jnp
in
jle
inc
inc
mov
lds
jecxz
jnp
enter
mov
mov
xchg
sub
repz
negb
lret
push
jae
movsl
adc
and
ds
in
xor
fidivs
mov
or
lret
mov
sbbb
jns
das
add
add
push
xchg
lods
pushf
ffreep
adc
inc
push
int3
cmp
and
ss
add
mov
push
arpl
or
dec
cmp
inc
in
imul
xchg
push
test
or
mov
les
int3
cs
push
pop
adc
fsubrs
add
inc
add
mov
jb
leave
mov
mov
out
push
call
sub
jmp
shl
ret
and
outsl
daa
out
inc
jge
sti
mov
sti
dec
mov
adc
fsts
out
test
ret
dec
push
test
pushf
sahf
cmp
xor
int3
xchg
flds
mov
jmp
cmp
dec
es
add
mov
pop
cmpsb
iret
mov
add
mov
insl
cld
shlw
pop
dec
fwait
imul
out
jo
xchg
cs
negb
mov
mov
mov
push
add
xchg
dec
mov
adc
cmp
sbb
sbb
jge
ss
ret
lds
sbb
shrb
inc
movl
repnz
mov
sahf
repz
adc
hlt
jp
jns
mov
fidivl
movsl
mov
loopne
cwtl
sbb
ljmp
mov
push
push
sbb
xor
jbe
pusha
int
not
or
push
out
mov
bound
jne
pop
adc
fst
fs
inc
mov
test
sbb
dec
jns
dec
cltd
jp
xor
movsl
es
sbb
outsl
cmpsl
jl
arpl
imul
scas
js
xchg
movsl
es
shl
sub
cli
jno
sbb
mov
maxps
adc
movsb
ds
sbb
pushf
inc
int3
cltd
stos
cld
cmp
mov
cmpsl
sbb
call
xchg
lea
mov
shld
stos
mov
in
inc
mov
loopne
xchg
or
push
jmp
pushf
pop
xchg
fwait
repnz
loopne
and
jl
fwait
sar
les
out
in
cmpb
inc
int3
inc
mov
ret
xchg
mov
testl
dec
dec
enter
xor
flds
mov
xor
or
fwait
xchg
push
aas
sbb
mov
test
mov
stos
popa
jno
adc
pop
test
cmpsl
xor
push
insb
xlat
ror
fcompl
sub
les
mov
pop
daa
cli
filds
lcall
repz
lea
sub
jnp
add
xor
jecxz
call
rcrl
rol
push
js
xchg
cmc
rorl
sbb
pop
xor
aas
mov
ret
xchg
fstps
shlb
cmc
xlat
mov
loop
dec
inc
fsubl
add
addr16
xchg
das
dec
outsl
fcomps
sbb
fsubrs
aaa
enter
jo
cmp
stos
fwait
ja
inc
sbb
aaa
das
pop
pop
lahf
data16
hlt
dec
jecxz
mov
mov
inc
pushf
sub
add
add
lahf
sbb
push
mov
push
out
rclb
xchg
enter
xchg
and
push
addb
xor
out
mov
cwtl
mov
sbb
and
mov
xor
push
push
pop
sub
cs
add
adc
mov
add
push
es
adc
sbb
pushf
sub
xchg
jno
mov
push
into
pop
pusha
imul
popa
incb
lret
push
add
arpl
dec
inc
jnp
bound
pop
and
jb
andl
sbb
loop
jle
sbb
out
mov
adc
cmpsb
outsb
mov
mov
sub
sub
inc
add
pusha
xchg
jns
pop
mov
mov
aas
insb
add
add
ficoms
or
adc
ds
es
jnp
jae
ret
mov
mov
int
mov
cmpb
xchg
pop
cmp
add
dec
adc
add
mov
jo
adc
push
push
xchg
xor
push
jge
add
push
stos
stc
push
xor
xchg
insl
in
and
movsl
subb
imul
push
jmp
outsb
je
xor
pushf
or
xchg
xchg
repnz
lcall
push
lahf
xchg
inc
sbb
mov
nop
mov
stos
stos
popf
insl
mov
div
jbe
lret
cmpsb
lret
dec
dec
mov
mov
or
loopne
jne
cmpsb
popf
adc
in
add
nop
jne
pushf
push
inc
add
and
and
and
movsb
movsb
loop
push
out
nop
dec
out
cmp
mov
into
cmpsl
in
les
push
jnp,pn
test
loope
lods
and
sbb
mov
and
jp
cmp
adc
nop
ljmp
jbe
out
adc
xchg
push
in
pop
cmp
sbb
xchg
or
xor
push
pushf
and
daa
inc
mov
cmp
div
loop
jae
sbb
mov
fistpll
push
adc
and
int
adc
pop
fcmovnb
cmpsl
adc
aaa
pop
lods
add
and
and
push
popf
imul
push
cmp
loop
jl
ds
push
or
dec
and
jp
fisttpl
fisubs
adc
push
or
jle
out
mov
cmp
or
push
aam
fadds
or
test
mov
pop
imul
pop
mov
jg
cmp
pop
fisubs
mov
fistps
push
pop
ja
adc
pop
jne
in
mov
incb
mov
test
aam
mov
in
and
add
leave
scas
es
orl
inc
sbb
jb
xor
fwait
xchg
das
mov
loope
jne
lock
inc
shrb
dec
sbb
pop
lds
xchg
jbe
cmp
jnp
push
add
out
cmp
and
lahf
jmp
ljmp
inc
in
pop
cmp
into
and
aam
dec
jns
jo
sbb
mov
in
shl
inc
out
fwait
movb
mov
mov
fwait
mov
call
sub
push
sahf
std
jecxz
inc
popf
outsl
mov
mov
les
ss
mov
adc
cltd
and
repnz
jo
xchg
loopne
aaa
jmp
add
lock
add
lds
jge
insb
xchg
push
stos
jae
xchg
ret
lods
idiv
and
pop
jle
cmpsb
aam
fistps
adc
test
inc
or
data16
push
jge
adc
ds
sub
into
mov
aas
popf
adc
mov
or
mov
xchg
push
jo
xor
jae
addr16
mov
push
movsb
sbb
dec
cmpb
das
popf
ret
sub
lret
inc
mov
or
cltd
xor
je
inc
aam
aam
es
xchg
sub
pop
mov
push
rorb
mov
mov
push
sbbl
inc
pop
das
filds
push
lret
pop
jle
out
inc
mov
iret
int
call
xor
dec
enter
lcall
or
repnz
xchg
mov
sub
mov
jnp
jmp
mov
sarb
rcll
push
leave
into
push
test
js
loopne
jns
aad
aaa
or
mov
jle
mov
dec
cmp
out
repnz
jp
aam
sbb
out
adc
sbb
mov
stos
lcall
jns
mov
fsts
in
mov
jmp
xchg
cltd
push
mov
inc
lods
loope
and
or
decb
insb
lock
iret
adc
lds
mov
add
gs
arpl
jl
es
lret
cli
jae
ljmp
mov
movsl
cmc
mov
jo
add
jmp
ret
insl
in
lret
push
outsb
imul
inc
enter
shlb
js
imul
xchg
sub
pop
shr
icebp
fs
leave
inc
or
push
adc
int
xchg
xor
mov
mov
fimull
inc
stc
mov
mov
push
repnz
and
mov
mov
bound
or
andl
xchg
inc
xchg
sub
jmp
mov
int3
push
push
call
loope
add
arpl
adc
gs
xor
push
push
mov
insb
mov
test
pop
mov
fcmovnb
sbb
push
push
sub
push
mov
test
jl
adc
fstp
mov
aam
cmpl
jns
cwtl
adcb
fsubrl
mull
imul
imul
rol
and
push
inc
sub
mov
jecxz
das
and
es
sbb
test
xchg
mov
add
es
inc
idivb
cmp
inc
mov
adc
loop
pop
dec
cmp
out
and
sti
test
out
out
jge
ret
xchg
ljmp
adc
test
dec
push
int
xchg
sub
test
inc
fmull
and
mov
mov
jmp
cmpsl
xchg
daa
add
dec
inc
scas
in
mov
xor
mov
xchg
nop
movsl
jmp
sbb
ljmp
and
aam
das
pop
movl
test
inc
jno
cltd
aam
mov
jne
lret
adc
inc
adc
and
push
xchg
rcrl
test
push
or
ds
fldl
or
aam
fadds
ja
lods
xchg
jbe
jle
test
cmp
stc
pop
cmp
pop
cltd
in
jae
aaa
leave
add
negl
xor
xchg
xchg
jg
cmp
xor
pop
lods
mov
test
ds
cwtl
cmp
out
lods
es
pop
xor
out
xor
loop
push
jmp
sbb
subl
insb
pushf
cmp
or
sahf
inc
daa
js
cmp
loope
stos
sbb
or
insl
xor
dec
or
mov
ret
and
push
loopne
out
inc
outsl
in
test
mov
xchg
sbb
fisttpll
mov
ss
in
ljmp
adc
daa
imul
jb
xchg
sti
push
mov
stos
stos
ret
push
popa
out
test
jl
adc
adc
fcoml
inc
mov
xor
popa
push
mov
dec
dec
jle
jno
jmp
cli
les
push
sub
dec
jns
and
hlt
movl
sbb
movl
js
cmp
xchg
fadds
sub
cld
fwait
ja
dec
inc
mov
sbb
mov
out
fisttps
dec
sbb
cwtl
ljmp
jmp
mov
cmp
mov
jmp
mov
stos
icebp
xchg
mov
and
js
cmp
cmp
push
pop
pop
xchg
test
and
inc
ret
iretw
sub
mov
movsb
jecxz
repz
lcall
sti
out
xlat
and
jae
imul
sbb
cmp
xor
or
add
mov
jle
sbb
aad
imul
scas
push
adc
dec
int
jle
test
cmpsb
fsubs
dec
xor
and
or
test
pop
in
cmp
jae
pop
jecxz
enter
inc
divw
in
pop
sahf
andl
fnstenv
movsb
pop
ljmp
inc
or
cmp
stos
mov
jno
cmp
cld
fildl
ficompl
mov
adc
in
inc
outsl
imul
fadd
jbe
sbb
pop
stc
jne
push
mov
adc
push
sub
mov
lcall
xchg
sub
cld
sahf
xor
sub
mov
fdivl
stc
stos
mul
dec
js
les
cmp
dec
push
mov
clc
lock
dec
mov
insl
pop
mov
and
pop
and
loop
cmp
clc
pop
test
sbb
int3
jecxz
aam
ljmp
rclb
or
subl
andl
ss
push
pop
mov
roll
mov
dec
add
pop
pop
cs
out
addr16
or
and
int3
pop
in
jmp
cmp
ret
movsl
cli
shll
insb
adc
mov
popa
rorb
push
popf
inc
ret
push
add
jmp
clc
and
jbe
dec
dec
sbb
mov
sahf
mov
add
xor
test
dec
cmpsb
ret
sbb
gs
leave
outsb
xor
rol
fld
push
cmpl
mov
or
inc
cli
jo
mov
cli
sub
jecxz
movsb
push
mov
cmp
fstpl
inc
sub
out
xor
inc
push
and
or
mov
xor
fwait
cmp
adc
les
aaa
or
mov
and
sbbb
mov
lods
popa
mov
cmc
fimull
aas
dec
mov
push
iret
push
adc
dec
mov
imul
insb
add
ljmp
cld
cmp
hlt
push
and
mov
pop
inc
mov
out
mov
insb
cwtl
and
stc
or
imul
movsb
mov
loopne
jno
mov
fwait
inc
outsl
push
xlat
test
movsb
push
push
cmpsl
dec
lods
sub
fnstcw
xchg
mov
jge
mov
sub
mov
shrl
push
mov
pop
jo
add
cmp
and
dec
stc
repnz
push
jle
in
push
push
inc
inc
ljmp
mov
mov
aad
mov
dec
mull
lret
insb
outsb
sbb
stos
lds
outsb
xchg
js
movsb
pop
ds
jp
push
js
sub
cwtl
out
cs
xorb
jmp
lock
pop
stos
sahf
movl
mov
scas
jae
mov
cli
mov
xchg
push
test
cltd
sbb
dec
jno
insl
ss
idivl
dec
xlat
js
dec
jo
fwait
daa
scas
cld
inc
cmp
dec
mov
inc
aad
dec
add
xchg
das
push
push
mov
push
pop
xchg
cmpsl
push
adc
aas
inc
and
mov
lahf
pusha
inc
lret
outsb
cwtl
bt
int
dec
or
je
mov
sub
mov
add
pop
rclb
or
lcall
or
popf
hlt
lcall
cs
mov
sbb
jmp
cmp
ret
pop
insb
or
dec
xchg
and
and
mov
mov
cmp
ret
jo
push
inc
bound
test
xlat
cli
aam
icebp
cli
loopne
stc
jae
lret
cwtl
ret
loope
cli
movsl
outsb
cmp
movb
test
or
mov
and
cmp
idiv
popf
stc
adc
xchg
bound
lds
in
pop
inc
repz
pusha
mov
push
push
insb
sub
cli
sbb
pop
or
mov
nop
int3
cltd
inc
sub
pop
rol
push
add
xor
in
jae
xlat
in
mov
lods
mov
fstps
shl
xchg
je
xor
iret
lea
es
jns
sarl
in
pop
iret
jp
test
jno
std
mov
sbb
adc
jb
push
notl
inc
roll
push
mov
adc
data16
shrb
mov
push
jae
adc
out
mov
lcall
mov
fidivrl
mov
mov
hlt
mov
lods
sbb
or
mov
imulb
xor
mov
dec
cld
inc
fimull
setno
add
xor
add
outsl
iret
lcall
jae
push
in
out
mov
fwait
jp
ljmp
sub
inc
shll
imul
mov
push
add
stos
scas
call
add
mov
lahf
jb
popf
cmpsl
sub
ds
and
sbbl
ja
fisttps
neg
pop
in
inc
cmpsl
mov
push
sbb
addl
mov
xor
in
sbb
cmp
xchg
out
push
push
shr
pushf
xor
jnp
sbb
add
mov
int3
imul
jecxz
call
ficompl
shr
and
mov
push
mov
mov
xor
cmpsl
or
push
ss
jno
xchg
in
adc
pop
mov
cmpsb
jbe
or
mov
or
sub
pop
pop
cltd
mov
jge
nop
ja
rclb
scas
shl
xchg
lcall
mov
push
adc
les
push
mov
cs
sahf
push
cmp
sarb
cmp
cmpsl
test
xor
dec
les
xchg
std
loope
xor
out
xchg
adc
imulb
push
ret
inc
in
cmp
pusha
sti
jo
bound
lea
cli
sub
mov
repnz
clc
and
fidivs
push
loope,pt
mov
pop
ss
pop
cwtl
cmpsb
jne
in
pop
or
inc
xchg
inc
enter
adc
mov
xor
inc
orl
rorb
push
mov
mov
xchg
pop
inc
leave
pop
inc
push
in
outsl
sbb
pop
push
jecxz
fstpt
lea
push
sbb
push
sti
jb
cmp
lret
xchg
and
cmp
roll
mov
ds
sbb
arpl
xor
scas
addb
lret
push
imul
jg
adc
lret
inc
push
adc
rcrl
jnp
mov
je
add
xor
addl
mov
jo
jbe
jns
dec
scas
mov
in
stc
shll
inc
js
dec
addr16
push
mov
inc
push
xor
sarb
jnp
lea
imul
scas
jg
mov
push
addr16
mov
data16
mov
mov
dec
mov
adc
gs
xchg
xchg
mov
stc
jnp
add
pop
lcall
into
mov
dec
cwtl
fistpl
jp
aaa
xlat
inc
push
mov
lcall
insl
pop
sar
sub
stc
xor
cmp
cmpsl
scas
dec
mov
adc
ret
push
out
inc
adc
jle
mov
mov
fucomi
faddl
mov
jle
mov
and
loopne
push
mov
addb
adc
push
or
es
xchg
imul
clc
ja
push
int
sarl
dec
mov
aad
clc
push
sub
mov
mov
push
ds
cwtl
mulb
sub
xor
or
int
push
mov
cmp
sbb
aas
mov
sbb
repnz
jg
cmp
pop
sahf
xchg
pop
push
std
add
faddl
push
xchg
jbe
dec
loop
jmp
pop
test
mov
inc
cmpsl
shll
fs
jne
mov
fwait
mov
fsub
out
inc
ja
mov
pop
in
cmp
adc
insl
es
jne
repz
pop
add
pop
rorb
test
push
xchg
test
jp
mov
outsb
add
jg
mov
dec
pop
push
stos
cmpsl
add
mov
mov
cmp
popf
cmc
cmp
rcrl
sub
mov
pop
rcrb
stc
negb
std
and
inc
sub
dec
xchg
std
mov
lahf
adc
mov
test
paddw
lcall
stc
or
cwtl
fcmovnbe
add
insb
fxch
xchg
xor
sahf
xor
ss
dec
or
and
mov
pop
add
leave
add
jecxz
fcoms
push
loope
loop
push
xchg
jge
jle
cmp
scas
jns
push
cld
xchg
in
sbb
in
xchg
push
dec
dec
jecxz
ret
sub
sbb
mov
xchg
outsl
xor
fisubs
pop
push
fisubs
cmp
ja
mulb
insl
mov
inc
data16
fbstp
movsl
out
bound
gs
pop
ss
mov
mov
push
call
cmp
insl
cmp
mov
mov
and
stc
ret
aam
cmc
pop
data16
inc
std
mov
xorl
call
in
dec
bnd
sub
lods
sub
int
lea
cs
mov
or
push
jecxz
movsl
xchg
or
hlt
mov
leave
ljmp
fbstp
cmp
and
xor
scas
cltd
pop
jae
orb
fldenv
push
movsl
push
jnp
push
imul
jno
xlat
cmp
push
scas
ja
jle
xchg
mov
push
jmp
lahf
cmp
cmp
aad
jae
add
pushf
lock
popf
jbe
outsb
repnz
dec
and
push
xchg
dec
rcrb
bound
insl
neg
pop
xchg
shlb
fisubrl
loope
or
test
xor
stos
cmp
ja
mov
cmc
clc
jmp
repz
xor
sahf
adc
pop
push
sub
pop
mov
cmp
mov
dec
hlt
fs
and
add
dec
xlat
arpl
push
ja
leave
or
std
mov
pop
data16
add
inc
pop
es
mov
mov
or
mov
out
dec
aas
dec
hlt
popf
mov
hlt
movsl
cltd
sbb
xor
and
push
jp
cs
pop
jg
movsl
add
mov
or
mov
cmp
sbb
aas
int
por
fsqrt
cltd
leave
shll
sbb
dec
hlt
bound
mov
dec
arpl
adc
arpl
outsl
jbe
cltd
clc
mov
mov
or
fsub
dec
iret
and
lret
negl
sbb
sahf
ja
push
push
sbb
pop
cmpl
pop
outsb
sub
stos
ljmp
shlb
repnz
adc
xrelease
pop
sub
cltd
lods
icebp
jno
rclb
enter
jmp
sub
xchg
xor
call
fidivs
xor
mov
sub
mov
jbe
into
pop
inc
mov
sahf
ljmp
icebp
repnz
mov
cmc
or
scas
stos
mov
pop
inc
jb
lret
jns
sbb
adc
and
sub
adc
add
imul
inc
outsb
mov
ss
lcall
fmuls
jbe
test
mov
or
rol
loopne
add
mov
push
mov
fisttpll
pop
arpl
sahf
mov
pop
xchg
pop
adc
daa
or
add
mov
addr16
insl
inc
cmp
fmuls
jae
push
and
in
pop
mov
dec
jmp
inc
xchg
xor
push
lret
jmp
subl
pusha
pop
test
push
test
xchg
mov
int
lods
fldl
dec
adc
dec
or
int3
fwait
mov
adc
sbb
aaa
push
ret
repz
sbb
and
rolb
xor
bound
std
push
clc
sbb
cmp
mov
test
fildll
imul
and
mov
cmpb
jnp
fbld
pop
pushf
mov
pop
hlt
cmp
hlt
cli
jp
aaa
jg
lds
push
test
test
test
aad
das
jo
mov
pop
in
fnstsw
dec
aaa
pop
xchg
inc
dec
cmpsl
jbe
mov
or
pop
jo
adc
sbb
pop
inc
scas
or
mov
in
jecxz
mov
ret
push
mov
lea
xchg
orb
sub
jnp
fs
xor
data16
loop
and
pop
dec
sub
loopne
mov
jno
fisubrs
sub
add
pop
clc
jmp
pavgw
stos
sbb
aaa
or
test
test
mov
dec
out
sub
enter
ja
ret
stos
loop
cmp
xor
pop
sub
je
jecxz
fwait
inc
fimuls
fwait
inc
xor
mov
sahf
fsubs
pop
imul
out
cmp
mov
and
push
arpl
adc
pop
and
roll
dec
stos
add
add
cld
xchg
pop
inc
filds
cli
xor
mov
cltd
and
or
add
dec
xchg
cmp
loop
xchg
test
stos
xor
mov
adc
jnp
cs
lods
mov
or
mov
daa
add
mov
dec
push
imul
mov
push
mov
ljmp
clc
cmc
push
adc
mov
mov
popa
or
or
jo
stc
jns
lock
cmpl
imul
rorb
dec
dec
push
daa
sub
push
test
insl
ss
repz
imul
mov
jl
out
and
ds
les
cmp
lds
repnz
fsin
inc
outsb
or
orb
into
fcomp
dec
sbb
xor
das
lods
out
push
xchg
or
les
negl
mov
push
in
mov
jno
scas
dec
lods
in
int3
inc
js
mov
sbb
ret
or
rorb
arpl
jo
fs
shlb
popa
arpl
ja
sub
stos
dec
jl
inc
dec
hlt
out
aas
std
stos
popa
shrb
push
popf
adc
cltd
shrl
pop
and
mul
add
jne
das
fimull
outsl
enter
lcall
mov
movsl
popa
sub
daa
inc
enter
sub
lock
out
pop
or
dec
xchg
sub
xchg
insb
out
mov
imul
cmp
adc
xchg
out
jnp
inc
dec
push
cmp
add
pop
int3
or
jecxz
lret
add
fmull
jg
jge
insl
jb
dec
ljmp
repnz
xor
lea
jecxz
divb
hlt
jg
mov
mov
lahf
pop
in
adc
mov
es
daa
leave
imul
push
xor
mov
and
pop
ljmp
pop
insl
shll
imul
cmpsb
adc
mov
and
dec
call
push
inc
sub
pop
inc
addr16
data16
ss
lahf
xchg
dec
xchg
jns
cltd
xchg
pop
jno
mov
call
mov
push
in
sbb
sub
cmp
push
pop
inc
pop
stos
enter
enter
cmpsl
sarl
or
cmpsb
cmp
sahf
lahf
mov
in
loop
shl
dec
inc
sarl
add
mov
push
repnz
and
idivb
rolb
ret
adc
jae
call
movsl
cmp
pop
dec
fsubl
icebp
jmp
orb
aam
and
jmp
push
push
fidivl
xchg
inc
sub
fs
inc
rclb
in
mov
xor
inc
pusha
mov
jmp
lock
popf
call
sub
fimuls
cmp
out
mov
scas
mov
inc
ss
fwait
pop
sbb
cmp
xchg
inc
pop
adc
rcrb
jle
jg
dec
and
ss
mov
icebp
inc
lds
jbe
mov
cltd
test
inc
fisttpll
push
pop
gs
mov
adc
mov
jge
sti
outsb
fwait
adc
mov
mov
mov
cli
mov
jp
jmp
into
jmp
fadd
addr16
or
xchg
rolb
and
mov
repz
and
add
inc
stc
cmp
mov
sbbl
lock
popf
jae
dec
cmp
inc
into
daa
mov
lods
sub
inc
jp
das
inc
jge
les
divb
divl
xlat
lods
lahf
std
push
pop
mov
or
shr
shll
lahf
add
inc
add
sti
push
push
cmp
fnsave
je
iret
int
jb
fidivrs
mov
js
xchg
aaa
rep
test
daa
popa
xchg
dec
push
test
out
daa
inc
xchg
xchg
repz
insb
pop
lock
cmpsl
std
add
fisubrl
pop
leave
inc
mov
mov
movsb
sub
loop
mov
lods
jl
sbb
stc
pusha
in
in
dec
cltd
data16
add
jecxz
jb
ja
daa
push
mov
loopne
add
iret
jb
sahf
ss
fnstcw
fwait
push
mov
fisubrl
mov
add
cmpsb
icebp
fwait
outsl
call
insb
inc
test
push
and
inc
pop
jns
gs
int
inc
jge
jg
sub
lcall
mov
dec
mov
test
xchg
mov
shrl
sub
push
sub
loop
pop
cmp
mov
popf
cmp
sbb
sbb
and
insl
js
pop
fsts
in
add
jns
pop
je
out
mov
xor
push
int3
cmpsb
and
aaa
dec
call
push
pop
jns
push
sub
add
in
stos
xchg
xchg
cld
sbb
dec
testb
dec
or
cld
xchg
lea
cmp
iret
lea
xchg
xor
test
in
mov
lods
cmpsl
imul
addr16
scas
leave
dec
jmp
inc
sub
outsl
into
ja
mov
pop
sbb
rcrl
cmp
loopne
fidivrl
or
jecxz
or
adc
mov
leave
sub
sarl
mov
cmp
fcmovnb
sbb
jne
sub
or
mov
sub
mov
addr16
mov
cmp
roll
push
cld
jnp
dec
add
out
into
or
iret
or
addb
and
pop
or
shlb
iret
lock
adc
addl
adc
inc
cmp
lcall
lret
inc
mov
movsb
js
mov
daa
sbb
mov
push
or
pop
shrl
pop
repnz
cld
pop
fidivl
cltd
leave
xchg
mov
xchg
test
jae
cmpsb
adc
lds
xchg
or
jno
nop
mov
mov
or
mov
push
mov
nop
lea
js
cmpsb
insl
dec
cmpb
pop
inc
fdiv
xor
dec
and
fimuls
imul
pushf
stos
test
and
cmp
dec
lods
push
lcall
hlt
mov
in
mov
cmp
test
ret
jb
pop
in
hlt
test
rorl
xor
sti
xor
xchg
pop
mov
dec
inc
stos
and
mov
les
push
add
or
filds
and
test
scas
ds
test
sbb
and
lods
popa
into
and
movsl
insb
loopne
or
jl
xchg
movsl
fsubrp
add
test
adc
int
ljmp
lret
icebp
lahf
xor
popf
in
enter
std
dec
in
popf
push
inc
push
enter
popf
es
data16
js
into
mov
pushf
aaa
mov
pop
mov
xchg
shlb
pop
inc
push
dec
fs
and
push
sub
dec
test
stos
test
pop
ljmp
push
jmp
pop
mov
and
pop
stc
inc
bound
mov
mov
adc
icebp
dec
add
sbb
push
add
xlat
push
les
add
lcall
out
std
nop
outsl
add
mov
sbb
xchg
jge
push
xchg
ja
cmp
stos
hlt
xchg
or
popa
ja
faddl
iret
mov
daa
and
jl
and
xchg
test
or
dec
rcll
fsts
pop
and
orb
sub
loop
xor
dec
imul
sbb
inc
mov
rclb
dec
out
pusha
xchg
ror
xchg
lcall
mov
sbbb
sbb
sbb
lahf
in
push
push
push
es
aam
orb
in
sub
sub
in
cmp
cltd
scas
mov
and
sbb
popa
jge
popa
cmc
xchg
xchg
enter
sbb
sbb
imul
sub
ljmp
or
xchg
sub
repz
ljmp
fwait
or
sahf
jb
test
or
sbb
test
jle
inc
rcrb
bswap
dec
inc
int
int
mov
fldl
rcll
aas
cli
stc
or
addr16
xchg
adc
repnz
inc
push
lea
cmp
test
mov
lods
push
in
cs
negl
mov
mov
push
scas
jnp
imul
sub
cmp
push
xchg
in
push
das
call
sbb
pop
sbb
mov
inc
test
shlb
das
mov
cmp
scas
out
push
mov
jns
mov
je
enter
jne
mov
push
mov
jecxz
pop
push
lods
ja
xchg
sar
outsl
fsubrl
ret
mov
and
mov
xor
repz
in
lea
dec
fisttpll
inc
sub
push
rolb
or
das
jo
pop
cmp
jmp
xchg
sub
cmpsb
aaa
xor
std
out
dec
fwait
pop
ss
aad
sbb
pop
lds
xor
xor
in
mov
hlt
loopne
ds
push
dec
nop
jb
lcall
outsb
jae
add
and
xchg
loop
inc
push
and
lret
xchg
xor
mov
and
mov
xor
les
inc
rorb
aam
adc
gs
clc
into
ss
xchg
jecxz
movsb
inc
sbb
gs
jne
and
shr
scas
push
inc
mov
lret
scas
lds
inc
in
fdivrs
ds
bound
imul
sub
mov
mov
push
leave
mov
mov
enter
jg
or
int
rcrb
divl
cltd
pop
ds
lret
cmp
jp
int
ror
call
adc
sbb
mov
pusha
clc
fs
btc
fisubrs
xor
xlat
std
aaa
pop
mov
mov
daa
adc
jecxz
mov
sub
mov
cmp
lret
sbb
movsl
sub
les
stos
adc
dec
cs
cltd
movsb
stos
pop
aas
push
repz
adc
push
add
pop
inc
sub
push
cmc
loop
outsl
sbb
ja
sbb
jbe
daa
xchg
jg
fsubrl
test
mov
mov
cmp
icebp
adcb
pop
mov
dec
daa
sbb
or
fwait
sub
stos
and
insb
push
jbe
add
mov
and
jecxz
cmp
in
ret
enter
and
hlt
mov
mov
das
cmpsl
test
pop
popf
dec
jnp
xchg
pop
clc
enter
pop
std
outsl
or
mov
adc
push
test
push
push
or
pusha
shrl
lcall
cmp
sub
repz
xchg
push
xchg
mov
in
nop
sub
loope
fnstsw
pushl
out
std
int
dec
sbb
scas
loope
mov
pop
jge
mov
nop
jl
popf
jo
xor
inc
mov
push
push
and
pop
sbb
rcrl
push
or
cmpsb
sub
mov
or
cli
lds
cmp
add
les
add
mov
push
xor
fsubs
mov
pushf
push
push
or
and
fwait
mov
or
nop
adc
dec
ficomps
fidivrl
or
sbb
into
insb
orl
mov
imulb
mov
aam
gs
pop
mov
xor
pop
repnz
adc
xchg
cmp
stos
xchg
mov
mov
int
ret
jle
out
idivl
xchg
and
pop
ljmp
std
mov
xchg
sti
fwait
sbbb
mov
jle
lret
pop
and
mov
clc
adc
repnz
pop
rcrl
mov
xor
add
adc
pop
add
and
icebp
and
outsb
fidivs
push
and
pop
movsb
subb
scas
jo
jecxz
mov
bound
rorb
pop
into
ds
sub
cs
adc
in
jecxz
pop
cld
dec
insb
push
add
cmp
push
add
pop
mov
jns
repz
jne
pop
test
roll
movsb
out
test
cltd
fistl
xchg
insl
or
mov
mov
and
adc
adc
or
and
out
cli
pop
clc
sarl
add
sub
repz
jmp
inc
pop
or
mov
roll
cmp
and
push
lods
shlb
fdivl
stc
rol
inc
jmp
push
lahf
cli
lret
dec
nop
push
arpl
ljmp
dec
jbe
jbe
stc
fcmovnbe
lods
cwtl
and
push
ds
mov
jle
mov
ja
add
push
dec
fs
rcrl
mov
and
mov
cwtl
sub
cmp
xchg
sbb
insb
push
sbb
add
ljmp
repnz
or
cmp
pop
ret
fs
arpl
cmpsb
sbb
sbb
xor
adc
mov
shrb
push
mov
add
je,pn
movsb
xchg
xor
std
sahf
add
flds
xor
lods
xchg
leave
negl
xchg
in
mov
xor
sbb
sbbb
fdivrl
scas
arpl
in
fldcw
push
popf
and
mov
and
mov
sub
or
imul
inc
int
xor
add
inc
lock
insl
int3
imul
les
data16
jo
in
std
push
and
js
inc
xor
movsb
out
das
mov
adc
mov
sbb
lods
mov
pop
iret
push
or
and
pop
mov
push
add
mov
xchg
out
push
xorl
mov
mov
mov
icebp
sbb
jb
pop
adc
jge
add
popa
test
out
mov
push
addr16
jae
movsl
and
pushf
jl
mov
fisttps
insb
shl
pop
add
pop
sbb
xchg
inc
ja
and
add
jle
hlt
push
les
mov
stc
clc
movl
mov
sub
push
das
insl
sub
insb
test
arpl
int3
inc
mov
lahf
into
or
xchg
cmp
pushf
aad
int3
xchg
inc
xchg
sahf
adc
aad
imul
cli
cmp
xchg
ret
cmp
inc
ret
jecxz
mov
cmc
pusha
in
cmp
push
dec
cmpsl
xorb
fcoms
jg
mov
bound
push
dec
jo
add
es
repnz
mov
loop
cmpsb
mov
mov
cltd
dec
xchg
call
loop
rolb
icebp
int
fnsave
pop
mov
and
out
and
sti
inc
push
addr16
int
outsl
int3
jne
xor
std
or
subl
push
lds
mov
imul
mov
jg
lods
cmp
push
sti
pop
xchg
aam
lods
dec
sub
and
push
jecxz
xor
popa
push
inc
mov
subb
mov
aad
pop
insl
pop
mov
outsl
fdivrs
pushf
sbb
and
lahf
cmp
xor
push
shr
ret
test
rolb
mov
popf
mov
std
sub
lods
clc
mov
outsl
sti
aas
jbe
adc
inc
rorl
aas
dec
push
adc
inc
rorb
insl
push
loope
arpl
das
jmp
decb
jb
adc
ret
scas
cs
inc
pop
test
test
cld
clc
out
mov
inc
repz
mov
sub
sbb
cmpsb
bound
push
push
sub
add
jne
pushw
jb
pop
das
out
mov
popf
dec
or
mov
mov
dec
sbb
xor
out
xchg
mov
add
les
les
and
pusha
inc
ret
sub
fs
in
out
dec
ja
pop
hlt
xchg
or
push
mov
add
or
aaa
jmp
jmp
arpl
int
stos
out
mov
adc
jbe
jp
cmc
mov
data16
mov
mov
int
faddp
or
scas
outsb
cmp
add
xor
cmp
pop
dec
jae
inc
lcall
jge
xor
orl
ds
in
or
mov
ret
jnp
aam
in
sahf
gs
lds
loop
nop
adc
setl
xlat
mov
arpl
es
mov
adc
iret
test
jns
ret
mov
and
cwtl
movsl
inc
pop
xchg
add
idiv
jne
sub
insl
jno
repz
pop
sbb
fdivl
mov
pop
and
addr16
or
mov
xor
sbb
push
jb
je
popa
cmp
jle
cmp
mov
aas
push
push
or
fidivs
aam
daa
mov
addl
and
mov
or
mov
rcll
leave
mov
test
test
pop
shrb
lret
push
ss
mov
testl
cli
test
inc
inc
fwait
scas
mov
mov
xchg
mov
pop
mov
nop
dec
ret
fisubs
xchg
or
jbe
mov
fadds
inc
int3
dec
outsb
mov
lods
jne
cmp
pop
out
inc
or
std
int3
add
push
mov
out
xchg
add
xor
cmp
cmp
xchg
js
xor
inc
adc
adc
inc
mov
and
imul
rcll
mov
lret
add
pop
push
stos
icebp
add
or
movsl
int
pop
mov
hlt
inc
pop
les
pop
je
jl
push
mov
outsl
div
loopne
jo
and
xor
fdivr
test
rclb
outsb
divw
fdivr
inc
pop
jne
xchg
flds
mov
dec
sbb
in
push
cwtl
xchg
and
lods
loope
mov
push
arpl
mov
je
imul
jnp
loopne
push
shrl
outsl
sub
mov
lcall
pop
cltd
sahf
rcrw
mov
dec
in
lret
xchg
cmp
cld
dec
push
cmpsb
aad
inc
cs
jno
mov
adc
ret
hlt
sub
fnsave
imul
sarl
inc
adc
and
lods
mov
je
ror
daa
push
cmpsb
xchg
mov
add
divl
rcrb
out
mov
mov
xchg
mov
aad
add
test
daa
test
lcall
sbb
mov
xor
dec
pop
xchg
fstl
addr16
xor
scas
fldl
shlb
aam
test
push
pusha
dec
enter
test
cmp
mov
aaa
mov
iret
sub
hlt
stos
test
iret
iret
cmc
pop
pop
mov
sub
push
fcoms
xchg
adc
sub
fsubrl
imul
ljmp
inc
dec
push
add
stos
jae
mov
mov
out
popf
jg
mov
jo
fs
mov
add
mov
cmp
pop
lret
stc
adc
gs
ja
adc
xor
pop
xor
xchg
test
xor
imul
movsl
ds
loop
xchg
stos
inc
pop
dec
dec
lea
push
cs
cmpsl
popf
or
outsl
icebp
pop
lock
out
and
pop
xchg
add
jp
mov
ss
sbb
arpl
aad
push
pop
shll
mov
es
lret
ss
or
inc
push
or
or
mov
mov
fadds
sub
jecxz
mov
xor
stos
push
dec
pop
lcall
pop
sahf
jle
jge
test
or
inc
daa
out
cltd
dec
hlt
mov
mov
sub
rcl
add
mov
rolb
xor
cmp
cs
dec
outsl
in
in
pop
xchg
xchg
jmp
push
mov
imul
xor
sub
pop
stc
pop
arpl
jmp
imul
push
sbb
jl
arpl
cltd
mov
add
fbstp
and
neg
mov
repz
dec
jbe
jbe
and
stc
movsb
cmp
stos
or
lahf
push
cmp
mov
out
int
mov
xchg
jae
push
push
test
mov
pusha
sub
ficompl
pop
inc
sti
mov
popa
fsubl
sbb
stos
add
pop
ljmp
testl
mov
lock
dec
adc
outsl
sub
xlat
lods
xchg
jecxz
jmp
push
add
xor
movsl
cmp
pop
xchg
sahf
jno
sahf
cmp
repz
adcl
inc
mov
sbb
push
add
loop
dec
inc
mov
push
insl
imul
fcomps
out
sbb
mov
je
imul
mov
and
push
call
push
push
mov
lcall
aam
and
mov
inc
mov
loop
lcall
lods
data16
cmp
out
cltd
mov
inc
mov
cmpsl
inc
out
push
pusha
dec
jmp
imul
movsb
int3
movsb
ror
cld
repnz
and
sub
out
jmp
pop
mov
dec
add
fxch
insl
xchg
jne
ret
jne
das
or
sbbl
pop
xchg
fcomps
push
sbb
dec
hlt
or
or
fdivr
pop
into
and
shl
cmc
push
fisubs
add
dec
ret
sbb
shll
mov
or
add
mov
dec
dec
xchg
push
sub
jg
add
mov
mov
mov
bswap
adc
test
mov
sbb
lea
fs
shrb
push
cmp
inc
pushf
xlat
push
jg
lea
or
clc
or
inc
pushf
or
adc
push
mull
pop
xchg
push
xchg
mov
push
sub
pop
movsb
ja
fldl
mov
pop
xchg
out
pop
add
add
mov
push
sbb
std
jge
test
es
fmul
sbb
loope
sub
mov
pop
or
pop
inc
into
jb
imul
inc
out
sub
dec
sub
xchg
movsb
push
or
mov
outsl
test
xchg
daa
not
push
loope
adc
outsb
imul
inc
or
mov
mov
test
pusha
adc
jno
xchg
loope
idiv
dec
in
fs
mov
iret
cwtl
pop
and
lods
mov
xor
pop
xlat
mov
fdivl
sbb
ficompl
xlat
dec
mov
and
imul
sbb
hlt
dec
jmp
gs
imul
rol
mov
dec
stos
fadd
mov
mov
sub
fldl
rcll
push
lahf
pop
or
das
imulb
push
xchg
stos
scas
add
pshufw
repz
fdivp
out
cmpsb
sub
pop
ljmp
mov
mov
push
mov
leave
jle
jno
cltd
mov
cli
imul
repnz
bound
rep
push
mov
js
ja
out
ds
fwait
xor
scas
or
arpl
or
loopne
lret
cld
adcb
sub
stos
fwait
sub
cmp
movsb
inc
scas
dec
nop
mov
idivb
or
sarl
push
push
or
add
scas
dec
jns
sub
out
mov
mov
and
fisttpl
fwait
bnd
sub
in
mov
cli
cmp
sub
lahf
push
push
dec
mov
add
mov
mov
lret
jp
stc
and
inc
icebp
push
sbb
in
mov
jae
xlat
ret
fisttps
mov
cmpb
cmp
mov
lods
shl
xchg
icebp
clc
dec
push
test
imul
xchg
jae
mov
call
lahf
add
lahf
cmc
fstl
ficoml
shrl
and
out
xchg
dec
es
jae
inc
fstps
xchg
xchg
inc
or
mov
daa
divl
xlat
jl
push
pop
or
ja
sub
jnp
enter
sbb
sti
scas
xchg
and
sbb
push
mov
inc
xor
jbe,pn
dec
xchg
adc
xchg
out
xchg
mov
cmp
in
icebp
push
daa
pop
pop
cmp
popf
push
pop
into
cmp
popa
fsub
mov
inc
cmp
adc
loope
adc
xchg
jl
sbb
popa
jo
insb
xchg
jl
in
mov
mov
jecxz
outsl
clc
pusha
jp
fucomi
int3
adc
scas
dec
and
pop
decb
cmp
ja
or
ja
out
sbb
cmp
in
dec
mov
ja
mov
nop
popa
mov
inc
cltd
shl
cmp
mov
fbstp
adc
ds
fdivs
insl
and
faddp
sbb
repnz
add
inc
xchg
outsb
adc
pusha
lret
sub
fwait
aas
dec
notl
cmp
lahf
les
adc
xor
sbb
aam
ret
sub
fmuls
inc
aam
test
stc
sbb
inc
sarl
pusha
dec
lahf
in
and
dec
add
iret
mov
or
or
pop
xor
inc
pop
fnstcw
rclb
xchg
jb
cwtl
test
mov
fiadds
sbb
cmp
lahf
adc
jb
mov
fisttps
fwait
mov
xchg
lods
filds
add
jne
icebp
adc
mov
pusha
xor
ljmp
lods
xor
in
imul
xor
push
push
decl
into
lcall
dec
icebp
ljmp
push
jg
pop
negb
xchg
push
jg
mov
sub
add
loopne
clc
sbbl
rcl
stos
popf
sub
sbb
out
leave
dec
test
add
adc
xorb
test
mov
xchg
xor
orl
adc
int
cwtl
lahf
push
test
aam
mov
mov
pop
inc
and
fwait
xchg
pop
stos
mov
mov
mov
dec
fstl
lods
ss
enter
stc
and
pushf
push
std
inc
mov
inc
cmp
pop
popa
mov
lock
push
mov
out
rcrb
push
bswap
mov
mov
or
sti
and
dec
int3
into
xchg
shll
jge
push
dec
cwtl
inc
fcmovbe
sub
cwtl
addr16
push
addr16
sub
outsb
shr
push
lahf
in
out
pop
jmp
scas
jp
outsb
mov
xchg
repz
nop
cli
call
sub
fxtract
aam
and
inc
mov
add
pop
jmp
bound
in
pop
push
aaa
sarl
mov
sahf
stos
call
or
hlt
sbb
sub
xchg
or
and
push
flds
out
mov
scas
jle
add
jo
xlat
jp
les
lods
pop
sub
jecxz
leave
mov
mov
pop
cli
push
push
in
out
mov
pusha
xlat
mov
and
mov
sbb
test
or
sbb
add
adc
mov
bound
dec
push
xor
push
inc
xlat
nop
clc
ss
and
mov
and
movsl
jo
sub
add
mov
mov
mov
das
fcompl
mov
cmpsl
cmp
push
loop
adc
and
int
dec
xchg
add
and
lea
daa
subb
lods
xchg
loop
jns
repnz
mov
fistl
sub
and
jbe
jge
inc
add
ss
jbe
notb
mov
in
push
iret
adc
lret
mov
lea
ds
mov
fwait
or
sbb
inc
ljmp
sub
pop
lret
enter
cwtl
jb
ja
clc
out
xor
jp
enter
dec
popa
mov
push
out
pop
pop
dec
xor
ds
es
jge
pop
push
xlat
cmp
call
jb
fnstsw
and
dec
pushf
test
lahf
pop
jmp
pop
pop
pop
std
inc
mov
inc
mov
ds
in
add
adc
outsb
mov
pop
mov
lret
rolb
inc
scas
test
sub
ja
add
loop
out
jle
mov
xchg
mov
lds
dec
repnz
push
in
in
mov
pushf
xchg
sbb
not
inc
fiadds
js
das
cli
pop
pop
fcom
cs
add
cli
push
aad
out
inc
imul
test
xchg
pop
pushf
add
sahf
sahf
bound
out
xchg
adc
sub
or
mov
pop
lcall
sar
add
idivl
xchg
mov
adc
sbb
sbb
test
into
jecxz
adc
mov
jno
test
pop
arpl
cmc
jb,pn
and
inc
outsb
mov
adc
outsl
int3
cmp
and
ret
lods
sbb
add
inc
into
and
ljmp
fidivrs
popf
ret
stc
lret
mov
imul
je
and
stos
mov
mov
lea
xchg
icebp
adcb
call
ds
cmpsl
add
enter
test
and
stos
fimuls
testb
sub
imul
ljmp
cmp
cmp
and
cmp
or
shl
jge
xchg
mov
es
xchg
dec
jl
addl
idiv
jmp
add
xchg
jae
je
push
xor
mov
push
or
sub
inc
sub
pop
mov
ss
cmp
mov
adc
cmpsl
in
rorl
push
cmpsl
mov
add
inc
stc
mov
cltd
cmpsl
and
insb
jo
stos
fmull
sahf
lock
in
push
icebp
enter
subl
shlb
push
fadd
dec
cmpb
xchg
inc
shl
xlat
push
cmp
sub
movsl
mov
stc
ret
mov
sub
xor
mov
test
push
or
xchg
adc
addr16
jb
and
lea
nop
mov
jbe
jo
push
xchg
fistps
inc
mov
fisubl
push
les
mov
lods
in
jne
int3
scas
call
pop
loope
mov
add
addb
dec
dec
sub
or
rcll
push
fmull
mov
cmp
mov
add
test
jecxz
pop
sub
dec
in
push
dec
dec
inc
mov
adc
cmp
ret
push
sahf
call
enter
jecxz
or
cmp
pop
insl
mov
mov
and
int
pop
push
mov
mov
mov
mov
jecxz
dec
sarb
sti
xchg
and
mov
adc
pop
jl
lret
frstor
push
je
into
pop
cltd
cli
nop
ds
cwtl
ss
mov
sbb
int3
nop
test
mov
scas
mov
xlat
test
mov
in
fdivr
inc
mov
mov
xor
sbb
or
fdivr
dec
fwait
es
xchg
test
dec
or
and
ror
and
pop
iret
popa
popa
nop
add
dec
cmc
pop
fwait
sub
sbb
fiadds
mov
aas
xchg
sub
jb
push
std
xchg
and
aam
mov
inc
out
and
xor
test
in
lock
jg
mov
adc
sub
leave
ja
ss
into
mov
gs
add
mov
and
sti
fiaddl
ja
xor
mov
mov
inc
jae,pt
js
jo
pop
roll
test
inc
std
repz
inc
mov
mov
sbb
xor
aad
mull
cmp
ror
fldcw
lods
pushf
add
sbb
das
xchg
xchg
lock
or
mov
mov
movsl
inc
or
mov
dec
jbe
mov
mov
popf
dec
rclb
and
jo
sbbb
arpl
notl
pusha
jl
notl
cmp
dec
sub
mov
pop
lret
in
hlt
xchg
cmp
aaa
or
mov
dec
lret
adc
idiv
sub
xor
pop
clc
jns
dec
pop
stos
cmp
sub
dec
dec
loop
jge
sahf
or
push
mov
sbb
add
hlt
push
clc
enter
jmp
notb
mov
test
mov
mov
test
lret
jne
les
sbb
push
mov
into
fcoml
inc
push
xor
mov
add
jecxz
pushf
pop
sbb
jns
std
loop
adc
xor
insl
and
inc
scas
and
fcomps
adcl
jae
xchg
cld
mov
xor
repnz
xlat
das
in
sub
loope
stos
iret
xchg
sqrtps
push
adcl
fildl
sbb
xor
ja
pop
pop
test
push
add
mov
nop
shrb
out
adc
dec
sahf
cmp
and
movsb
lock
pop
and
cmp
pop
cmp
test
fsub
std
stos
mov
mov
mov
hlt
sub
in
mulb
add
cld
dec
iret
fisttps
lcall
push
jno
dec
mov
fiaddl
xor
out
scas
jno
mov
dec
or
inc
sub
xor
rcrb
push
push
or
fsubrp
xor
sub
or
int3
ret
adc
cmp
push
ja
and
js
adc
sub
or
and
int
cmp
mov
inc
xor
faddl
jmp
fists
fcoml
mov
test
cli
enter
es
pop
or
xlat
leave
or
lcall
lcall
xchg
mov
mov
sbb
scas
in
xchg
xor
out
mov
pop
fdivs
cld
dec
xchg
aam
inc
iret
mov
sbb
outsl
xchg
jne
dec
mov
and
adc
fadds
mov
shl
nop
pop
push
addb
inc
in
ret
ljmp
andb
cli
jecxz
sti
mov
adc
imul
cmp
notb
cli
divl
lret
xchg
dec
push
ss
out
ss
ret
imul
adc
dec
ret
lret
addr16
insl
xchg
pop
bound
mov
push
lret
mov
jnp
pop
dec
mov
imul
loope
repz
bound
xor
lea
lds
subb
mov
add
mov
sub
aad
ja
sub
xor
jmp
mov
xchg
ret
scas
and
or
fs
popf
in
or
movsb
pop
fmull
jl
push
sti
mov
xchg
adc
lcall
or
in
inc
push
pop
aad
cld
sbb
xchg
outsb
in
es
popa
jle
mov
sti
pop
dec
sti
fwait
sbb
mov
cmc
stc
add
leave
hlt
aam
sbb
movsb
sti
mov
jbe
lea
aas
imul
stc
cmp
ljmp
xchg
pop
sbb
cmc
push
pop
testl
xor
push
cmp
mov
pop
mov
dec
negl
sahf
dec
add
jl
and
stos
dec
mov
push
jnp
das
fbld
popf
adc
push
jnp
cwtl
test
test
add
pop
callw
cmp
scas
pusha
lea
add
sbb
pop
divl
fmuls
mov
imul
js
cmp
mov
xchg
cs
and
push
movsb
lods
lods
and
cmpsb
push
outsl
xor
push
xchg
xor
sub
dec
aam
xlat
clc
mov
sbb
push
push
divb
jmp
test
jne
xchg
iret
pop
int3
push
dec
cmpsb
popf
inc
dec
aad
lret
int3
hlt
enter
dec
sub
cwtl
fists
test
mov
data16
add
test
xor
fld
test
cmpsl
pop
rclb
or
xchg
icebp
adc
jg
push
pop
xor
ja
pop
xchg
and
xchg
daa
lods
dec
cltd
fmuls
aas
leave
in
and
jg
sbb
inc
jg
push
xor
add
sub
mov
inc
jle
pop
add
mov
or
hlt
xchg
cltd
scas
add
jb
push
sbb
mov
mov
jg
sbb
jne
cwtl
cmp
cmp
push
xchg
jge
fcoms
xchg
fisttps
mov
cltd
popf
repz
xchg
pop
sarb
inc
inc
inc
or
inc
pshufw
lahf
add
or
jb
daa
xchg
dec
nop
rcrb
mov
fadds
outsl
in
pop
dec
mov
test
xchg
mov
cld
adc
ljmp
out
xchg
shr
in
xchg
pop
out
int
push
mov
cmpsb
insl
movsl
mov
pop
dec
stos
into
shll
jbe
dec
xor
in
inc
and
fchs
daa
mov
movntq
cmp
pop
shll
pop
adc
aaa
jae
pushf
inc
addl
mov
and
and
int3
lret
leave
cmpsb
dec
mov
arpl
shlb
pop
dec
aaa
xor
jecxz
mov
cmc
mov
inc
mov
retw
push
fnstsw
lds
and
jno
add
dec
arpl
jo
and
aad
ds
pushf
xor
cmpsl
imul
sbb
xchg
insb
aas
fcomi
scas
and
dec
and
xchg
inc
jb
jb
or
imul
push
hlt
mov
and
inc
push
cmp
xor
jge
adc
jg
and
sub
clc
ja
mov
outsb
jbe
dec
pop
shlb
mov
movsl
cs
jge
sbb
cmp
mov
mov
arpl
lds
int3
imul
js
pop
sbb
popf
pop
mov
hlt
jmp
xchg
sbb
xchg
dec
imul
sbb
ss
jnp
add
jmp
xchg
scas
adc
jne
xor
imul
push
cmp
mov
sub
ret
xlat
test
rolb
or
pop
leave
imul
xor
push
imul
subl
and
xor
stos
cld
adc
in
jns
jbe
dec
lds
cs
int
orl
repz
cs
rcll
enter
sbb
mov
lock
repnz
hlt
mov
cld
shlb
mov
enter
adc
xor
xor
dec
mov
jae
lds
imul
jg
or
fucomp
jae
xchg
mulb
lods
repnz
xor
test
push
sub
lock
inc
xchg
into
cmp
sub
testl
adc
sub
arpl
sahf
andl
movsb
mov
or
fdivl
adc
adc
or
mov
push
dec
xchg
lgs
or
mov
cmp
xchg
into
iret
es
movsl
mov
sar
aas
iret
jb
dec
fxch
fidivrs
mov
gs
sbb
pop
cmpsb
pop
dec
rorb
add
pop
ret
icebp
pop
mov
frstor
fs
sbbl
jp
xchg
faddl
xchg
xor
pop
std
lcall
bound
mov
mov
iret
jns
flds
cwtl
push
out
lcall
neg
ret
enter
push
mov
les
pop
adc
in
cmpsl
lret
roll
outsb
rolb
int3
jbe
insb
flds
push
pop
sti
rorl
xor
add
psrlw
inc
jg
mov
add
int3
sub
xchg
scas
xor
cmc
sub
shlb
cmp
add
inc
icebp
jle
cli
dec
mov
xor
loopne
fadds
int3
mov
rclb
xor
jbe
ret
jmp
enter
fs
push
mov
jno
mov
sbb
aad
pop
fimull
push
mov
mov
sbbb
and
push
dec
pushf
dec
or
movsb
enter
lcall
test
pop
push
and
inc
scas
leave
data16
adc
push
insb
lods
inc
out
mov
loopne
jae
or
shll
or
mov
arpl
stos
and
add
xor
cmovnp
cmp
push
pop
jnp
lods
out
pop
in
pop
lret
and
mov
xchg
adc
test
sbb
fstpl
xchg
mov
lds
test
push
test
arpl
mov
cmc
into
fisubrl
out
mov
insb
push
jp
in
rorb
pop
xor
xchg
pop
and
and
insb
stos
adc
or
xor
adc
and
pop
jp
adc
fisttpl
push
adcb
ja
cwtl
sub
std
pusha
fnstsw
sahf
in
pop
fcomip
xor
sbb
and
dec
mov
jp
sbb
cli
das
jp
or
mov
xchg
sub
adc
jmp
in
call
and
cmp
mov
scas
dec
jnp
mov
cmp
add
fsts
jo
xchg
pop
scas
les
mov
mov
das
xchg
cld
and
lret
pop
repnz
sti
mov
push
rclb
ss
or
mov
inc
nop
fucom
jg
pop
inc
iret
mov
and
repz
sub
xchg
es
int
inc
orl
push
jp
push
ret
dec
inc
dec
and
jno
xchg
cli
mov
cmp
xchg
jle
mov
or
push
sub
inc
push
fildl
jb
es
fs
enter
cmpsb
cwtl
mov
mov
cmp
pop
mov
repz
pop
jnp
sub
das
addb
fisttps
sub
ja
pop
xchg
pop
int3
es
adc
push
push
pop
ret
fmull
insb
sub
daa
int3
scas
pop
cmpsl
mov
lock
das
jb
xchg
hlt
sbb
lahf
outsl
ret
ftst
push
shrl
bound
xchg
jge
sub
jns
mov
pusha
xchg
stos
inc
inc
cmp
xlat
jmp
loop
mov
or
pop
jbe
xor
enter
sti
or
in
jno
add
in
cltd
dec
les
xchg
ss
pop
sub
gs
push
jge
push
push
pusha
pushf
pop
fisttpll
mov
xchg
cli
xchg
inc
inc
std
add
mov
mov
mov
lods
clc
stc
inc
or
add
popf
xor
xchg
sub
lock
imul
mov
cmp
shrl
inc
sbb
call
imul
jae
lock
mov
xor
out
xor
paddd
in
maxps
pop
or
adc
adc
daa
enter
cmp
jno
or
test
xor
hlt
mov
pop
pop
aad
sbb
shlb
or
push
add
push
fiadds
lea
lods
call
ret
jb
adc
xor
out
inc
lock
xchg
fisttpl
pop
cmpsl
repz
push
dec
sbb
lods
adc
cmp
sub
xchg
sbb
mov
sahf
xchg
data16
or
or
js
inc
mov
mov
adc
adc
cmp
aad
rcll
xchg
test
xchg
mov
xchg
xchg
jmp
int3
nop
repz
out
cmp
stc
das
push
add
and
jecxz
mov
push
sbb
fadds
ss
scas
lea
sti
inc
mov
pop
mov
fbld
xchg
fsts
mov
test
insb
cltd
cli
sbb
push
dec
mov
mov
jge
mov
cmp
in
cli
jl
dec
out
mov
loope
inc
fwait
shll
aaa
lcall
xor
scas
testl
sbb
mov
ljmp
int
adc
popa
mov
data16
js
fistps
add
addl
mov
add
push
cmpsl
xor
jns
out
fbstp
push
rcrl
outsl
aam
ret
or
ret
inc
mov
push
hlt
sti
xlat
and
lock
push
jle
cs
stos
sub
xchg
int
lcall
dec
jns
push
or
mov
jb
lret
test
mov
sub
cmpb
ss
push
mov
jnp
cmc
cmp
jle
cmc
xor
dec
sbb
std
sbb
push
int3
fcmovbe
push
divl
orl
ljmp
daa
push
rcrb
dec
popa
jle
mov
and
aas
stos
jle
mov
std
jb
mov
pop
xchg
not
in
sbbl
jb
ret
iret
sub
ds
jne
xor
xchg
xchg
rcll
xor
stc
fwait
cmpsl
iret
sbb
cmc
dec
insl
dec
int
popa
stos
dec
inc
push
stc
add
aas
arpl
xchg
nop
in
scas
cmp
adc
jb
repz
aad
sbb
push
gs
test
dec
imul
push
lea
lahf
dec
dec
sahf
pushf
test
pop
push
ja
sbb
dec
sub
dec
int
nop
stos
cmp
fcomi
lahf
fdivrp
call
sbb
xlat
inc
lock
lea
jmp
ds
jge
pop
pop
faddl
fisttps
movsb
clc
add
mov
dec
inc
test
xor
add
xor
ret
inc
push
repnz
xor
out
sbb
call
mov
sbbl
jne
imul
xor
lahf
xlat
fcomi
lods
les
std
nop
mov
jmp
xchg
xchg
push
aas
xchg
adc
icebp
mov
xor
xchg
cmp
jne
frstpm(287
out
icebp
out
push
test
out
icebp
pop
loopne
push
out
cmp
pop
push
xor
jae
pop
pusha
inc
push
or
adc
faddl
dec
fbld
pop
mov
out
jl
movsl
test
cmpsb
pop
rcrl
mov
push
mov
mov
fs
mov
imul
xor
int
sbb
dec
outsb
adc
add
mov
push
stos
adc
inc
cld
arpl
xor
lahf
insb
jecxz
adc
dec
mov
mov
or
cmpb
jb
mov
stos
dec
faddl
out
push
sub
sahf
xor
add
sbb
xchg
and
in
outsb
neg
xchg
push
push
js
mov
mov
cmpsb
scas
pushf
je
xchg
mov
xor
orl
int
aas
push
xchg
xchg
rcrb
movsl
jl
push
orb
adc
mov
ljmp
mov
fs
roll
mov
decb
test
xor
adcl
ret
inc
xchg
xchg
xor
push
push
out
push
dec
pushf
cmp
in
data16
xchg
and
dec
and
xchg
mov
repz
in
or
mov
sbb
imul
icebp
add
subb
or
gs
push
dec
jno
mov
rolb
sahf
hlt
inc
sahf
pop
cwtl
xor
sub
mov
jns
insb
mov
stos
xchg
call
jae
cwtl
and
push
inc
in
inc
add
mov
jae
jno
jmp
push
cld
pop
adc
test
dec
call
in
xor
outsl
std
inc
xchg
mov
push
popf
mov
xchg
mov
sub
rorl
loopne
addb
cmpsb
push
pop
loope
or
mov
fs
cmp
lea
data16
clc
jmp
stos
jge
inc
mov
mov
mov
inc
cmp
jp
pop
insb
mov
inc
bound
aad
popf
adc
dec
and
or
das
cmc
movsb
outsb
outsb
jae
jl
mov
insb
or
cmp
jne,pn
push
xchg
scas
stos
xchg
addl
jmp
cmc
and
inc
or
cld
fstl
or
xor
push
popf
js
dec
dec
data16
or
out
pop
push
enter
or
dec
std
jp
pop
pop
test
imull
fiadds
push
mov
xlat
stos
dec
and
inc
xchg
and
pop
lea
mov
cmpsb
lcall
stos
loop
cmp
fisubl
in
fisttps
popa
cmpsl
cmp
ss
push
pop
sbb
mov
fiadds
add
aas
fadd
jne
subb
jb
aaa
or
ja
xchg
rorb
fbld
xor
dec
in
jle
test
cs
rcrb
leave
cld
aas
adc
dec
jl
pushf
adc
iret
les
adc
repnz
cmp
pop
xchg
or
outsl
orl
imul
dec
mov
movsl
push
add
jl
lds
mov
mov
push
jnp
in
xchg
stos
in
xor
jl
out
xchg
movsb
sub
pop
rorb
cmp
lods
orl
push
loop
xorb
rorb
or
rcrl
push
sahf
push
xchg
mov
and
cmp
mov
mov
rolb
cmpsb
mov
lods
push
daa
jmp
int3
lds
dec
push
jns
clc
cmc
mov
mov
inc
xchg
cmpsl
adc
cmp
dec
scas
sub
ds
imul
int
fadds
sti
push
loop
cmp
push
jo
pop
push
aas
rol
insb
fists
mov
lock
add
inc
xchg
xlat
sbb
mov
int3
jo
adc
out
inc
and
jg
dec
test
fidivrs
or
dec
insl
mov
sbb
or
rorb
lret
stos
xchg
or
int
sub
mov
xor
test
lahf
pop
adc
mov
icebp
roll
push
adc
inc
inc
addr16
push
test
add
inc
jp
das
cli
out
jo
cmpsl
inc
stos
sbb
or
popf
fcmovnbe
mov
adc
addr16
cli
pop
sbb
adc
popa
jp
dec
stos
add
movl
or
icebp
sbb
cmp
repz
pop
mov
insl
push
jmp
insb
loopne
mov
outsb
mov
std
sbb
addr16
or
test
call
jge
clc
jmp
lret
iret
jns
nop
rcl
push
shll
xchg
into
subl
mov
sub
jae
push
mov
mov
sahf
repz
adc
xor
addl
cs
cmp
in
stc
xchg
push
negb
loope
stos
push
fdivr
or
sbb
sbb
dec
shlb
cmpsl
mov
test
gs
inc
mov
xor
shrb
cltd
mov
mov
add
mov
xchg
pop
shlb
cmp
nop
pushf
in
jnp
std
dec
ret
push
ret
lahf
add
xor
cmpsl
mov
loop
dec
out
fsubl
bound
scas
pop
fisubl
jg
or
fmulp
mov
mov
mov
mov
nop
daa
imul
mov
mov
inc
stos
push
or
mul
push
push
dec
lret
dec
and
xor
adc
xor
pusha
adcb
sub
mov
inc
jle
je
mov
dec
addr16
ret
inc
and
movsl
in
pop
and
nop
mov
aam
sbb
out
jnp
shrl
pop
fldl
xchg
arpl
iret
stos
fiaddl
add
mov
push
cmp
mov
loopne
xchg
fstps
hlt
push
or
adc
or
dec
leave
lods
ds
mov
jb
xlat
sub
cmp
cmpsl
cmpsl
lds
xchg
lods
jo
sbb
insl
mov
mov
dec
dec
and
sbb
push
push
aas
daa
jae
xor
push
mov
push
sub
into
add
sbb
aam
pop
jns
lcall
loop
mov
icebp
inc
lds
test
mov
jnp
es
sahf
jp
dec
push
xlat
mov
pusha
imul
lds
mov
inc
stos
je
or
repz
sbb
jbe
sub
mov
cmc
xchg
cmpsl
mov
xchg
lea
stos
outsl
add
lret
lahf
enter
mov
dec
mov
int
js
push
cmpsl
mov
dec
fistpll
push
loopne
xchg
pushl
mov
imul
inc
jmp
push
add
mov
cmc
adc
das
enter
push
in
mov
mov
cmc
cmc
and
add
sub
xor
clc
add
push
mov
push
dec
sahf
fistl
loop
dec
pop
jl
mov
sahf
and
rcll
repnz
xchg
mov
sbb
in
lcall
mov
mov
fs
xchg
bound
test
test
popa
leave
fwait
and
jno
cmp
mov
jbe
into
hlt
cmp
cmp
cmp
xlat
mov
insb
add
je
mov
xlat
pop
sbb
fwait
gs
and
nop
fisubrs
adc
cmp
pop
jmp
jns
inc
jmp
jo
arpl
mov
mov
in
rorb
lahf
daa
movsl
xchg
push
sub
mov
inc
jmp
jmp
cli
jne
pushf
sub
fcoms
xor
or
fucomp
and
lods
in
adc
dec
push
xor
shll
inc
cmp
out
movsl
test
xor
pop
and
xchg
sbb
ds
enter
cmp
sub
mov
inc
sbb
push
push
jg
aad
xor
aad
popf
mov
mov
jg
adc
clc
jae
aas
pop
repz
or
and
sarb
inc
sahf
icebp
gs
outsb
push
stos
inc
rcrl
mov
adc
cmp
xchg
or
das
sub
push
mov
js
or
mov
cli
mov
or
pop
or
or
sbb
cmc
jne
mov
aaa
addr16
enter
sti
push
aad
adc
int3
iret
in
sbb
cld
sub
xchg
sub
sub
int
rclb
jmp
mov
dec
push
cmpsl
xchg
xor
call
cmp
pop
mov
dec
shlb
sarb
lret
mov
and
mov
push
int
mov
movsb
jge
lret
pop
lret
pop
adc
mov
ja
ret
mov
aas
adc
lret
movsl
adc
aam
pop
cmpsl
pop
adc
mov
stc
xchg
xor
xchg
scas
xor
insl
sub
mov
mov
fsubs
mov
ljmp
xor
and
stos
adc
fstps
inc
jb
dec
inc
shll
xchg
fwait
pusha
cltd
shl
or
dec
cltd
imul
xchg
jp
dec
sbb
cmp
mov
add
sub
enter
out
mov
and
arpl
mov
sub
fnsave
mov
xor
push
adc
gs
add
mov
jg
jmp
cs
xchg
faddl
scas
inc
divb
inc
pusha
cmpsb
mov
les
mov
outsl
dec
and
jmp
arpl
in
orb
pop
aas
hlt
fimull
arpl
out
int3
ds
popa
push
cmp
fldt
mov
xor
fdivr
sti
popa
es
ljmp
jae
mov
mov
dec
stos
mov
xor
testb
xor
add
sbbl
fdivp
sub
mov
movsb
and
mov
inc
inc
sbb
out
xchg
rcr
push
enter
jp
xlat
pop
movsb
outsl
mov
pop
les
push
sub
iret
test
test
add
mov
pop
repz
sub
lret
pop
repnz
dec
int
outsl
popf
int
jmp
mov
lret
push
jmp
mov
pop
jno
shlb
cmpsb
sbbb
and
dec
ljmp
out
pop
repz
and
jp
outsb
sbb
outsb
pop
jp
insb
sub
cmp
pop
sub
and
sbb
lock
fstpl
addr16
or
aaa
mov
cwtl
scas
leave
add
out
pop
stos
xlat
adc
mov
out
inc
pop
ja
cmp
loope
jecxz
xor
dec
or
movsl
xor
push
push
mov
int3
cmp
lcall
jb
adc
push
push
int
push
addr16
pop
out
jge
jo
pushf
pop
fcoml
add
es
sub
sti
push
inc
mov
cltd
push
test
xchg
bswap
stos
mov
mov
push
aam
pop
sub
ret
aas
lds
adc
pop
pop
aas
daa
jo
loope
scas
stc
jg
xchg
mov
mov
imul
cmpsl
call
cmc
fidivrs
cmp
pop
call
jg
pop
mov
adc
shrb
adcl
inc
es
in
push
jns
lahf
test
add
andnps
xchg
addr16
imul
jl
lret
fnstsw
fistps
std
jne
xchg
cmpsb
icebp
dec
test
dec
and
int3
mov
into
pop
adc
dec
add
lods
xchg
cli
inc
pop
push
pop
push
fwait
cmp
aaa
xchg
push
fs
clc
pop
sahf
out
sbb
sub
aaa
rorb
xchg
lea
mov
dec
out
push
jg
cmpsb
sbb
mov
not
leave
pop
add
mov
mov
ja
movsl
cmp
pop
cltd
dec
outsl
sub
pop
test
fisubrl
cmp
push
repnz
pop
je
inc
mov
and
jo
push
lcall
sbb
mov
adcl
cwtl
cld
notb
test
push
jmp
inc
push
pop
xchg
jl
sub
cli
movsl
test
or
jnp
lret
adc
push
decl
out
inc
fcomp
daa
mov
push
add
es
cmp
and
cmp
gs
jg
call
xchg
in
mov
loopne
rorl
dec
lret
pushl
xor
pop
ret
cmp
sub
fidivl
mov
inc
jle
lahf
fiadds
mov
fcmovnbe
loope
add
out
fildl
mov
cmpsl
imul
cli
cmp
jne
pop
mov
fmull
icebp
gs
xchg
cmp
xchg
gs
jge
js
fildl
aas
jg
clc
das
mov
fwait
dec
pop
repz
cmc
lret
jb
cltd
adc
and
fcomip
inc
test
repz
pusha
mov
cmpsl
add
imul
push
mov
ja
clc
and
xor
shl
push
test
imul
push
push
xor
lods
push
sbb
lods
mov
popl
lods
or
loopne
pop
fldcw
or
xor
cmp
scas
jnp
lret
xchg
lea
es
sub
push
cli
push
jbe
out
fwait
out
push
add
nop
ljmp
pop
int3
dec
lds
pop
mov
lret
sub
cmp
cmc
push
in
or
fbld
movsb
jl
movsl
lret
subb
cmp
mov
sbb
push
sub
mov
dec
mov
sarl
mov
ret
cmpsl
fstps
sbb
cltd
sahf
icebp
cmp
dec
mov
ret
xor
cmp
jno
insb
dec
out
mov
mov
dec
pop
pushf
fidivrl
fistpll
jno
mov
out
mov
mov
in
ja
xor
dec
jo
jb
xor
sbb
push
dec
mov
mov
in
call
aam
push
sub
sahf
adc
xor
push
test
in
scas
out
enter
xor
add
dec
in
mov
push
mov
mov
xor
xchg
jo
sbb
mov
dec
sar
dec
bound
rcrb
hlt
loope
js
pop
xorl
fdivr
inc
add
insl
mov
mov
xchg
iret
mov
test
mov
in
mov
xor
push
daa
insb
mov
mov
sub
inc
leave
sub
and
inc
out
fists
ret
xchg
inc
stos
bound
pop
push
push
push
pop
nop
xlat
inc
nop
mov
mov
cld
in
scas
rcrl
dec
pop
jecxz,pn
sbb
mov
shlb
js
inc
scas
inc
xor
dec
mov
xchg
sti
jno
lds
jge
lahf
xchg
das
dec
test
jbe
add
mov
pop
and
sarb
mov
lods
pop
aas
mov
dec
pusha
lea
dec
xlat
incb
mov
movsb
push
cmp
ss
sbb
ljmp
sar
push
inc
mov
mull
ret
lods
cmp
mov
adc
loop,pn
shrb
jno
flds
mov
test
mov
call
jbe
out
aam
pop
mov
mov
in
add
sbb
or
push
xor
xchg
jge
out
je
push
adc
aad
and
xchg
movsl
sub
push
sub
fldenv
gs
ss
fimull
in
test
mov
icebp
xchg
cmp
cmp
nop
stos
inc
inc
or
mov
imul
xchg
mov
scas
cmp
push
icebp
mov
xorl
cmp
stos
cltd
or
pop
mov
jmp
adc
pop
int3
in
imul
pop
les
fwait
jbe
aas
lock
adc
enter
ss
addr16
lret
bound
les
mov
xor
nop
ljmp
and
mov
mov
sbb
addr16
adc
xlat
sub
sub
add
out
dec
jle
xchg
adc
adc
sbb
jl
push
icebp
push
mov
out
or
test
shll
in
std
mov
dec
xor
lret
lcall
push
lods
les
or
test
or
in
insl
movsl
sub
aas
data16
cmp
cmp
lods
loope
cmc
call
iret
pop
lock
cld
mov
mov
out
loop
mov
loopne
mov
loope
je
in
in
test
aas
xor
mov
xorb
das
add
add
std
rcl
popf
nop
jp
lcall
out
iret
scas
dec
stos
pop
cmc
mov
push
scas
pusha
test
xchg
cmp
push
inc
jo
push
sub
jo
loope
mov
pop
sbb
jp
xlat
pop
sbb
insl
aaa
sub
ja
out
or
and
pop
dec
add
add
adc
adc
xor
jg
sbb
pop
xor
gs
adc
outsl
out
std
sahf
lods
jg
rclb
mov
mov
sub
dec
aas
sub
les
mov
in
adc
add
cmp
int
rcll
ror
pop
sbb
testb
mov
dec
scas
and
sbb
mov
test
cmp
nop
int
push
dec
fs
xchg
js
push
mov
push
mov
addb
push
xor
push
inc
and
push
lret
push
shr
shll
xorb
call
aas
dec
test
lret
xor
mov
ds
mov
mov
outsl
mov
jmp
or
mov
aam
out
into
hlt
adc
sbb
movl
adc
mov
jecxz
xchg
pop
jmp
adc
fs
xchg
sbb
cmc
imul
cld
jns
xor
xor
mov
andb
fsubrl
lea
leave
mov
js
xor
pop
cwtl
fs
pusha
aas
loope
inc
lret
xor
lock
ret
stc
loope
pop
mov
or
mov
cmp
arpl
or
xorb
gs
mov
sbb
outsl
arpl
xorb
jno
sti
fimuls
dec
incb
fldt
xchg
pop
js
lcall
movsl
xor
jae
mov
int
pop
pop
sbb
pop
out
adc
pop
test
shlb
xor
outsl
jae
mov
popf
mov
shll
pop
dec
fs
ret
sti
inc
rorb
cmp
pop
inc
add
mov
lds
shl
jecxz
and
lea
bnd
sub
leave
lret
into
mov
stos
sarl
and
jnp
call
shlb
lret
ret
ds
imul
inc
adc
pop
xor
imul
js
sbb
jb
lret
mov
adc
lods
xchg
jecxz
pop
sbb
push
arpl
scas
cmpl
icebp
inc
jo
cwtl
outsl
pushf
hlt
xchg
ja
adc
xorl
sbb
xor
pop
push
test
fdivrl
sbb
int
dec
out
call
fwait
xor
sbb
xchg
lods
psubusw
enter
sbb
mov
in
cmpsl
add
stos
inc
add
xchg
inc
loope
rclb
add
gs
dec
pop
ficoml
dec
inc
push
sbb
ja
rcll
shrb
xchg
add
loope
inc
mov
push
jb
sti
xor
movsb
cli
mov
dec
push
lcall
cwtl
mov
lods
movsb
mov
sti
pusha
adc
cmpsl
loope
cltd
and
or
lcall
mov
movsb
dec
hlt
movsl
ja
shl
xchg
mov
les
pop
xchg
imul
ret
xor
sahf
fwait
icebp
add
lods
cltd
sbbb
shll
orb
dec
mov
xor
cmp
pop
add
inc
mov
lret
or
add
cmp
fimuls
mov
loope
or
jge
imul
les
inc
jge
mov
cmpsb
mov
lods
sub
xor
adc
push
js
test
mov
adc
add
frstor
push
add
lea
popa
push
adc
in
mov
cmp
nop
sbb
mov
fdivl
in
mov
jmp
mov
cmpsl
scas
dec
into
ja
insb
or
pop
inc
adc
pusha
or
mov
xchg
in
mov
mov
ss
cmp
sub
ja
add
inc
decl
dec
sub
dec
das
rcr
je
test
pop
xor
dec
cltd
xchg
out
scas
mov
sub
xchg
pop
std
xchg
lret
xchg
inc
jne
and
icebp
xor
out
outsl
adc
cmp
loop
inc
negb
and
inc
cltd
sbb
dec
lea
insb
fsubl
cmpsl
es
mov
popa
inc
je
xchg
sarl
fdiv
sbbb
mov
dec
sub
lgs
pop
xor
insl
push
mov
xor
lcall
aaa
lret
ret
imul
addl
rorb
sub
cmp
mov
scas
cmp
or
and
stos
iret
outsb
push
pop
adcb
pop
lret
ret
lahf
pop
outsl
pop
sbbb
fisttps
in
sub
and
sub
sti
push
test
sub
mov
or
pushf
shll
sub
cmp
add
xchg
ljmp
lret
add
rorl
pop
cmp
pusha
mov
das
jl
mov
sbb
add
push
flds
roll
jmp
push
xchg
gs
pop
adc
je
cld
push
int
mov
or
sarl
push
jmp
push
pop
hlt
incb
xchg
jns
lea
pop
xchg
cmpsl
push
inc
cmc
fcomps
pop
or
cmpsb
mov
sbb
dec
inc
mov
or
rcrl
rep
leave
in
mov
in
jno
or
jle
in
xchg
orb
fidivrs
loope
arpl
pop
xor
hlt
mov
add
sti
add
aaa
xchg
mov
hlt
sahf
mov
movsb
jb
movb
push
cmp
mov
jno
js
scas
rsm
push
and
rorl
cld
in
xchg
ret
sub
sbb
cmp
mov
fisttpll
lret
dec
data16
fnstcw
mov
xchg
in
fldenv
dec
imul
mov
sbb
mov
cmp
jo
jnp
or
pushf
shll
jg
inc
sahf
aaa
daa
in
mov
test
jo
out
cmp
jmp
push
sub
xchg
or
or
lcall
mov
mov
mov
xchg
aas
push
je
imul
jg
sub
inc
jmp
xchg
xor
mov
in
xor
movsl
scas
or
sti
xlat
rcrb
fucomp
sub
fs
hlt
mov
inc
mov
inc
ret
mov
or
push
mov
or
in
scas
push
push
sbb
ss
xchg
cmpsb
arpl
dec
insl
xor
lea
je
jo
cwtl
lahf
pop
mov
lds
sub
dec
inc
shl
insl
lds
imul
or
aam
push
cmpsl
lahf
mov
pop
mov
les
scas
insb
jmp
lds
mov
add
sbb
lock
fwait
loopne
dec
pop
pop
mov
mov
aad
mov
fisttpl
rclb
cltd
sbb
ret
pusha
repnz
xchg
enter
jbe
in
or
hlt
inc
in
xor
push
movsb
mov
sub
aaa
test
adcl
repnz
xor
jnp
push
pop
pop
das
and
daa
ja
xor
mov
into
adc
mov
daa
push
faddp
push
dec
clc
fistpll
xlat
pop
in
std
lret
iret
adc
jbe
aad
xor
ja
out
test
push
cld
jnp
jns
adcl
inc
hlt
adc
jnp
dec
aaa
sbb
add
movb
into
in
push
cltd
rolb
movsb
out
into
pop
int3
jmp
lret
nop
rolb
sbb
lret
cmp
das
popa
in
mov
push
test
dec
sub
pop
mov
daa
and
pusha
add
fbstp
or
xchg
mov
dec
lds
inc
rclb
cmc
jle
pop
or
int3
adc
cmpsb
leave
nop
sbb
xchg
cmp
xchg
test
scas
cmc
push
fwait
imul
jp
sub
icebp
pop
movsb
cmp
daa
aam
add
jns
cld
cwtl
dec
jle
fldl
dec
fbstp
or
adc
cmpsb
stos
int
jge
xchg
subl
jp
lcall
xor
push
add
mov
or
cld
pop
push
es
repnz
lahf
jg
jo
push
clc
mov
or
sbb
adc
test
popf
in
leave
dec
mov
or
mov
jle
scas
in
push
and
lret
imul
adc
jbe
jg
mov
aaa
cmpb
push
push
ljmp
in
mov
mov
rcll
aaa
xcrypt-cbc
cmpsl
adc
mov
ljmp
and
sbb
dec
mov
test
sbb
inc
pop
mov
lret
jle
dec
mov
add
pushf
push
mov
push
cmp
dec
aad
xchg
adcl
sbb
pop
cmc
dec
jg
lock
add
mov
in
js
mov
xchg
mov
jmp
in
andb
call
dec
mov
dec
xchg
mov
out
sub
lods
cs
push
test
dec
and
push
jl
js
mov
push
cmp
mov
hlt
pop
mov
mov
mov
lods
xchg
mov
scas
je
int
out
cmpsb
insb
mov
add
out
fimull
push
sub
ja
shr
mov
mov
pop
add
lcall
mov
ffree
inc
jae
iret
dec
dec
push
xor
add
sbb
mov
stc
adc
jle
icebp
push
loop
mov
sbb
clc
and
bswap
mov
pop
mov
fcompl
gs
jae
push
mov
cmc
or
ret
mov
cmpsl
cli
mov
push
mov
xor
adc
sub
mov
adc
jmp
movsb
incb
test
push
fs
fnsave
jl
pop
imul
pop
add
push
mov
icebp
mov
clc
cmpsl
movsb
and
add
cs
test
sarb
adc
testb
mov
cwtl
xchg
or
dec
add
fmuls
or
fists
mov
les
jp
xchg
daa
inc
dec
mov
adc
push
stos
jbe
cli
and
lock
addr16
test
mov
xor
pop
mov
mov
fcompp
fldcw
enter
mov
jge
push
jb
lcall
pop
inc
sub
jg
loop
aam
arpl
stc
mov
int3
fistl
adc
fs
push
xor
loope
into
imul
push
test
cmpsl
push
add
and
cwtl
adc
add
jo
xor
enter
cltd
or
jmp
rcl
mov
adc
jne
lock
scas
xchg
xor
cmp
jg
ja
imul
mov
mov
and
jecxz
lret
sbb
inc
out
in
imul
xor
sbb
loop
inc
pop
pusha
out
mov
pop
pusha
lea
mov
push
mov
dec
fnstsw
jecxz
ss
cmovge
inc
push
or
fxtract
rclb
nop
adc
or
test
or
inc
popa
mov
mov
addb
shr
dec
dec
gs
into
pop
or
cmp
pop
incl
mov
xlat
pop
ret
and
test
or
jle
xchg
ja
sbb
add
out
jne
or
jp
jbe
iret
xchg
push
mov
mov
cltd
clc
jl
xchg
pop
and
jno
mov
sbb
ffreep
push
sbbb
mov
dec
push
jl
add
test
pop
mov
leave
dec
jge
shl
jns
pop
push
or
add
jg
mov
pop
sub
lret
data16
iret
testb
jnp
mov
outsl
test
jl
enter
mov
fadds
pop
out
shrl
mov
xor
cld
test
rorl
insb
fcoms
pop
nop
lods
add
lahf
jnp
icebp
and
insl
push
mull
loopne
adc
push
and
xchg
icebp
and
inc
pop
or
aad
sbbl
add
js
js
and
fmul
add
add
sbb
fcomi
push
scas
mov
xorb
pop
orb
xor
data16
push
pop
mov
cmpsb
and
adc
rclb
jns
pop
pop
mov
xchg
aad
xor
sbbb
fsubrl
dec
out
cmp
fdivrl
sbb
testl
jbe
cmp
push
test
xor
mov
add
outsl
pop
je
inc
aas
aad
xchg
jl
lods
outsl
adc
notl
or
xor
ss
inc
les
mov
in
mov
arpl
pop
push
movsl
mov
pop
xchg
lods
in
jo
sahf
dec
jb
ja
xchg
adc
adc
fsubl
sub
inc
pushf
xor
jl
jp
sbb
mov
lret
mov
mov
jno
loope
jns
or
les
repnz
stos
cmc
out
icebp
test
out
push
fwait
and
cmpsl
push
pop
pop
mov
or
stos
pop
stos
popa
repnz
xor
ja
push
loopne
inc
data16
jmp
sbb
sbb
in
cmp
cmp
cmp
mov
movsl
cwtl
es
mov
das
inc
jae
ret
sbb
call
or
jge
mov
popf
out
jecxz
mov
mov
adc
sub
pop
and
pop
fidivrs
outsb
in
mov
lcall
mov
scas
pop
xor
push
ret
dec
dec
subb
js
jnp
jnp
cmp
inc
push
sbb
sub
std
roll
mov
jae
mov
dec
dec
or
inc
aaa
stc
mov
push
xchg
fcompl
xchg
lock
dec
xlat
sarb
fidivrl
adc
jecxz
pop
xorl
fisttps
dec
loopne
nop
lahf
and
hlt
xchg
int
roll
inc
inc
dec
inc
test
cmpl
flds
ja
cwtl
ljmp
int3
mov
ljmp
and
mov
mov
mov
in
out
cs
pop
jb
lret
mov
jecxz
pusha
aaa
fwait
push
fists
icebp
loopne
push
jmp
int3
mov
add
or
inc
lea
arpl
and
pop
cmp
push
mov
inc
jo
jmp
inc
xorb
cmp
lods
cmp
hlt
cmp
in
repz
mov
mov
out
inc
aad
shrb
ror
mov
lea
mov
repz
xchg
lahf
push
popa
lds
push
dec
es
jno
pop
cmp
push
aaa
je
mov
js
mov
mov
test
lds
mov
pushf
jle
inc
jl
hlt
rorb
sub
xor
jo
repz
je
push
and
add
inc
sub
je
leave
sbb
and
dec
mov
shrb
mov
add
lods
push
fisttps
loop
jge
packuswb
roll
cli
xchg
fcomps
ret
mov
bound
pop
xchg
dec
imul
xchg
and
test
or
outsb
pop
mov
lea
mov
xchg
ss
sti
or
test
push
imul
cmpsb
or
aaa
repz
lods
hlt
pop
fcomps
xor
enter
xchg
adc
enter
lcall
xor
adc
hlt
mov
mov
dec
insl
call
mov
in
inc
cld
xor
xchg
popa
pop
cmpsb
js
cli
aaa
bound
fld1
pop
jnp
int3
and
outsl
lea
inc
sub
dec
out
dec
ret
std
or
cmc
mov
pop
mov
int3
sub
in
out
stc
fmull
in
pop
xorb
xchg
inc
cmp
pushf
rorb
cmpsb
insb
cmp
clc
push
dec
and
pop
js
add
jns
rcrl
lret
mov
xor
dec
pop
bound
sub
xlat
mov
jl
jmp
mov
pop
dec
dec
dec
lahf
aas
mov
sti
lret
dec
fidivrl
sbb
add
int3
xor
pop
or
xchg
ror
sbb
adcb
ficompl
mov
bound
adc
dec
insb
scas
mov
cmp
mov
insl
mov
push
shlb
push
sbb
or
sarb
jg
mov
iret
jo
xor
adc
andl
lock
enter
lods
xorb
or
xor
sub
jae
stos
and
enter
imul
fsubl
push
sbb
cmp
mov
pop
aad
lret
es
out
cmpxchg
push
xchg
in
pop
push
hlt
push
or
popa
loope
aaa
fldlg2
aaa
sub
cltd
mov
fnsave
cmp
mov
das
ret
aaa
movsb
scas
or
push
jecxz
repnz
mov
sti
sub
int
pop
sbb
adc
data16
xchg
imul
push
pop
push
pop
cs
or
es
test
jmp
insb
decl
jb
aad
push
push
test
cmpsb
pop
add
test
xor
out
les
mov
mov
jnp
mov
xchg
add
mov
push
adc
push
add
mov
xlat
jb
arpl
xor
xchg
mov
fdivrs
cltd
jge
xor
bound
jmp
jns
mov
je
push
dec
mov
pushf
loopne
push
and
sahf
leave
pop
jl
push
jns
xchg
mov
add
sbb
outsl
cwtl
dec
add
dec
das
cld
pop
push
out
sbb
adc
hlt
fwait
add
mov
push
pop
lahf
push
cmpsl
aas
outsb
aas
dec
xchg
fxch
fmul
mov
push
fcomp
fsubl
sub
iret
adc
roll
popf
rcrb
adc
adc
ret
je
test
bnd
sub
jae
push
dec
jns
sub
jne
mov
testl
aas
inc
cld
adc
test
aad
rcl
push
je
scas
stc
mov
incl
mov
or
inc
fidivrl
xchg
test
repz
clc
arpl
xchg
call
adc
adc
mov
jle
jno
and
cli
adc
inc
pop
popa
pusha
popa
mov
lock
out
repz
fldt
es
call
in
int3
cmp
out
nop
rcrb
sbb
ret
and
movsl
inc
sti
push
lret
mov
sub
enter
xchg
xchg
adc
lret
arpl
mov
dec
dec
and
and
leave
dec
mov
fnsave
dec
or
das
add
andb
arpl
xor
jmp
lods
push
in
out
or
xor
cmp
mov
mov
jo
lock
or
cmp
mov
mov
out
in
mov
jne
inc
jl
dec
jmp
icebp
xchg
add
aaa
daa
icebp
stos
subb
repz
inc
push
das
xchg
inc
inc
xor
fidivrs
outsb
sbb
dec
pusha
pop
rcrb
add
inc
in
stos
adc
insl
pop
or
sub
ds
jmp
outsb
cltd
sub
pop
or
rolb
ja
cmp
sbb
repz
dec
mov
add
test
fbstp
push
adc
xor
pop
lret
lcall
mov
enter
aam
fdivs
mov
dec
test
fs
imul
push
hlt
inc
cmp
pushf
rclb
imul
stc
lds
sub
xchg
adc
call
out
lea
std
lods
pop
adc
out
insl
test
jp
insl
lods
mov
andb
cmp
int
mov
call
cmp
repz
and
xor
lods
cwtl
cmp
pop
pop
mov
andl
push
cltd
mov
push
adc
cmp
cwtl
cmpxchg
push
xor
dec
mov
daa
nop
jp
insl
xlat
cmp
push
jle
ds
jl
cmpsl
pop
pop
jns
mov
push
xor
push
or
mov
adc
lcall
push
pop
je
push
shll
cltd
add
xor
mov
jo
into
dec
xlat
sbb
loope
lahf
fs
lret
adc
call
inc
lret
push
inc
cmp
jbe
cwtl
push
push
xor
movsl
jbe
out
pop
ret
sti
jecxz
dec
loop
cmp
and
mov
sarl
lds
dec
jp
aas
pusha
pop
or
push
bound
es
clc
les
push
fstps
into
xor
adc
movsl
rclb
xchg
sahf
loope
or
xchg
les
adc
jo
out
and
mov
pop
mov
sub
aad
mov
insl
cmc
idivl
xor
rcll
and
ret
sbb
mov
sbb
add
sub
xor
xor
inc
js
enter
xor
mov
xor
inc
jb
push
repnz
add
cmpsl
jp
mov
filds
xlat
jp
repz
push
mov
mov
dec
loope
movsb
out
sbb
add
out
jp
lds
insb
push
jbe
mov
repz
in
inc
jg
pop
mov
imul
push
testb
mov
sub
data16
in
test
ja
mov
xor
int
movsl
and
in
mov
mov
dec
cltd
clc
sbb
aaa
mov
ja
inc
mov
add
add
mov
sub
cmc
add
dec
ret
cmp
xchg
outsb
xchg
add
mov
and
xor
jne
sbb
pop
or
cmp
inc
loope
nop
mov
lcall
dec
pusha
and
and
nop
dec
jae
mov
xchg
fcmovu
mov
pusha
lods
cmp
jb
nop
inc
jg
repz
push
dec
jb
andb
dec
negl
xchg
les
cmpsb
pop
add
xchg
repnz
sbb
std
jbe
cld
scas
dec
mov
lcall
push
mov
mov
and
fld
inc
mov
in
stc
inc
test
pop
add
mov
shl
in
push
popf
add
fs
into
jl
or
or
inc
pusha
call
pop
jecxz
mov
jmp
dec
js
mov
cmp
xchg
push
pop
popf
xor
lcall
jb
adcb
lods
into
push
movsl
and
cli
mov
push
jle
adc
mov
scas
mov
test
push
pop
push
jae
xchg
imul
loop
loopne
loop
cmp
mov
mov
invd
and
decb
fnstcw
in
cmp
rolb
sbb
inc
sub
test
in
mov
dec
jg
xchg
xchg
insl
mov
mov
js
dec
ljmp
pop
lret
mov
mov
gs
jecxz
jo
call
rcr
popa
push
push
jns
push
movsl
nop
pop
scas
ret
xchg
popf
loop
enter
add
cmp
push
inc
stos
push
out
pusha
pop
jecxz
inc
imul
dec
dec
es
hlt
lret
xchg
icebp
dec
lods
cltd
or
push
scas
xor
jecxz
mov
movsl
xchg
ret
iret
fnstenvs
sub
lret
int
or
gs
shll
sub
mov
sarb
fldl
pop
add
loopne
mov
xlat
loop
or
sbb
jp
mov
add
div
daa
cmp
cltd
fwait
xor
or
jnp
pop
push
mov
lods
jle
pop
imul
push
test
sub
and
gs
cltd
xchg
aam
adc
jns
xchg
adc
mov
inc
push
xor
pop
push
dec
cmp
push
inc
xchg
loop
push
add
mov
aad
xchg
inc
xor
lods
daa
pop
jns
insb
mov
or
jp
shl
cld
push
pusha
andb
imul
inc
mov
xchg
rcll
rcl
jb
lcall
cmpsb
mov
rcl
ds
push
iret
or
fldcw
sbb
cwtl
or
jmp
cmpsb
repnz
hlt
leave
pop
sbb
cmp
dec
jb
outsl
pop
test
jns
mulb
push
jle
int3
add
das
sti
add
fdivp
rorb
pop
pop
xlat
or
jo
xchg
lret
sti
dec
shrb
movb
or
lcall
es
hlt
jns
shlb
outsl
mov
inc
cld
dec
fiaddl
lock
sub
andb
dec
imul
repz
mov
and
repnz
mov
je
aaa
in
xchg
mov
iret
adc
pushf
shrb
ss
sarl
icebp
mov
cmpb
out
es
or
divl
push
imul
leave
mov
or
dec
or
jecxz
jbe
andb
ret
fldenv
mov
add
push
sub
sbb
out
sub
pop
sub
or
sahf
adc
stos
mov
mov
push
ljmp
sbb
xorl
daa
xchg
mov
dec
daa
and
fcomip
std
mov
mov
cmp
mov
xchg
xor
pop
dec
pop
fistpl
mov
xor
mov
cmpb
push
sub
test
outsl
ret
psubusw
push
arpl
dec
adc
cltd
rorl
mov
inc
adc
pop
cmp
push
or
xor
dec
xor
mov
mov
xchg
sahf
mov
dec
mov
xchg
or
lret
fst
add
push
dec
push
js
xor
jb
lcall
into
in
xor
dec
lret
inc
stos
aam
jno
push
sub
es
push
lret
in
aas
scas
lds
mov
repz
jg
popf
inc
rclb
movsb
imul
mov
push
add
enter
movd
lahf
lods
and
adc
jb
aam
push
pop
enter
out
fcmovb
notl
push
es
pop
js
mov
mov
out
lods
xorb
lahf
mov
sbb
add
push
pop
icebp
pusha
stos
pop
cld
and
adc
arpl
stos
push
iret
test
add
pop
imul
aaa
sahf
popf
push
sti
shlb
lds
subb
subl
sub
push
mov
sbb
lcall
mull
xchg
test
inc
xchg
ret
push
xchg
mov
nop
cwtl
cltd
dec
and
stc
cmp
call
push
lods
pop
xchg
or
xor
sub
int3
xchg
push
adc
push
inc
loope
xchg
fistpl
loop
jecxz
ds
ja
lock
inc
sbb
jl
and
les
shrb
adc
mov
jecxz
dec
scas
push
filds
ret
add
arpl
xor
and
fwait
dec
fucomi
mov
mov
std
sub
mov
xor
mov
gs
pop
movsl
mov
daa
repz
sbb
nop
pop
mov
add
sub
xchg
inc
cld
jnp
fdivrp
adc
jno
cmc
leave
cmpsl
jbe
pusha
jle
sbb
push
in
lahf
icebp
or
cwtl
leave
mov
cmpsl
stos
dec
or
push
mov
bound
fdivs
cmp
xor
mov
mov
or
les
int3
js
or
mov
push
ret
xchg
cmp
test
or
xchg
jns
dec
push
and
pop
fcoml
push
and
repnz
jno
mov
loopne
and
mov
es
adcl
xchg
adc
jmp
mov
aad
outsl
or
mov
movsb
addb
pop
sbb
mov
lahf
xor
cs
mov
mov
adc
jp
imul
aas
popa
inc
daa
ss
outsb
rol
mov
sbbl
aad
insb
dec
jle
movsb
insl
fldln2
inc
sbb
insl
push
rcr
jno
lea
inc
in
lea
mov
cli
push
and
xchg
imul
ds
sub
sub
orl
pushf
sbb
pop
add
cmp
mov
aam
das
sub
addr16
mov
pop
pop
loop
mov
aad
inc
add
fstpl
mov
push
in
mov
lret
fs
mov
loope
int3
sub
xor
idivb
sub
sub
lock
jns
shlb
cmp
dec
fisubrs
loopne
insb
lret
sub
xchg
outsb
movsl
inc
mov
mov
sahf
das
popa
movsb
movsb
shll
mov
mov
minps
pushf
jbe
jg
scas
xor
outsl
xor
test
rcrl
stos
mov
jp
sub
repnz
iret
push
mov
sub
int3
movb
dec
daa
jb
int3
push
xchg
int
js
clc
mov
sub
or
lret
loopne
rcll
aaa
lods
repz
in
in
imul
push
js
rcrl
leave
or
add
testl
xlat
add
scas
mov
inc
daa
xor
xorl
cmp
mov
pop
pop
mov
subb
mov
mov
mov
in
in
call
lea
push
addr16
shll
or
imul
mov
mov
outsb
mov
pop
fsubs
enter
fimull
dec
out
gs
addr16
xchg
cs
jp
sub
mov
mov
jbe
shrb
test
mov
psrlq
xor
enter
and
or
xlat
lods
sub
xlat
hlt
hlt
lahf
out
bound
adc
sub
adc
mov
and
and
mov
lds
dec
stos
scas
sbb
and
jnp
or
ret
jae
sbb
loop
int3
inc
repz
lods
and
mov
and
ret
cs
out
pop
scas
ret
in
mov
sahf
mov
xor
mov
xor
into
push
scas
stos
or
insl
add
mov
dec
shl
addr16
sub
sub
push
sbb
aam
dec
loopne
sar
mov
xor
into
pop
nop
xor
sub
outsl
and
aam
cmpsb
jne
mov
xchg
les
outsl
cmp
mov
daa
ficoml
add
out
scas
mov
pop
rclb
icebp
std
imull
lock
add
xchg
das
sub
jno
xchg
mov
and
pop
inc
in
jecxz
iret
out
shrb
daa
fnstsw
nop
inc
ds
xor
mov
cltd
cmp
out
dec
sbb
push
push
xchg
xor
xor
xchg
call
sbb
das
jb
fisubrl
lret
test
mov
sbb
xchg
out
xchg
stc
sbb
mov
xchg
mov
push
or
out
arpl
into
iret
jle
arpl
xor
sarl
fstps
xlat
scas
dec
filds
loop
std
in
mov
mov
adc
inc
arpl
cmpsl
iret
ja
xor
sub
loope
xchg
out
es
xchg
jmp
xchg
inc
inc
cmp
xchg
arpl
and
fidivrl
sub
cmp
pop
xchg
repnz
mov
ret
ret
aam
push
leave
jbe
rcrl
push
sub
and
jbe
pop
pop
shll
shl
lret
jg
xchg
cmp
mov
inc
stos
mov
rcr
jmp
mov
sub
mov
hlt
daa
adc
push
jne
aam
les
fcoms
pop
testb
mov
js
dec
ja
notb
xorl
jb
xchg
adc
mov
push
call
jb
data16
mov
pushf
push
fldt
mov
push
adc
cmp
xchg
lcall
and
mov
test
inc
and
neg
xor
mov
inc
jmp
add
out
mov
mov
add
or
dec
adc
xor
cwtl
or
arpl
sub
xor
and
stc
cmpsb
gs
sbb
outsb
sar
and
sub
xlat
lcall
mov
mov
jb
es
aam
pop
cs
shl
xor
fs
lret
loopne
cmc
lds
dec
xor
or
dec
repz
ds
sbb
inc
lods
ja
fmul
inc
test
aaa
pop
into
out
ds
mov
mov
add
pushl
add
cmp
push
cwtl
shlb
dec
xchg
fisttps
lods
out
dec
test
scas
fistl
pop
inc
mov
push
cs
stc
iret
mov
lea
out
andl
inc
push
inc
xchg
push
outsl
push
xchg
pop
dec
mov
inc
xchg
stc
sahf
mov
movsb
fistpll
or
lods
dec
push
inc
fnstsw
ja
and
push
jns
cld
insl
rcll
lahf
dec
js
outsl
ljmp
add
mov
inc
imul
xchg
repz
incl
leave
jl
leave
fdivrs
mov
push
adc
iret
ljmp
sarb
es
xchg
lds
dec
and
fadd
mov
mov
mov
repnz
leave
dec
fcompl
test
cmpsl
jae
pop
pop
rcll
lods
xchg
pop
mov
add
fildl
subb
push
pop
fs
sar
pop
fwait
mov
movsb
loop
in
mov
xchg
jnp
adc
nop
adc
mov
fiadds
int3
mov
and
loopne
xor
jmp
jl
jg
imul
jg
add
push
mov
pop
pop
test
mov
cli
jns
icebp
test
cmp
xchg
sbb
shl
int
jno
out
mov
cs
addl
adc
mov
xchg
inc
lods
orb
sbb
cmpsl
mull
gs
push
stos
inc
or
in
pusha
jecxz
test
and
shlb
or
push
pop
test
mov
outsb
pop
mov
push
enter
das
fadd
in
fs
pop
pop
xchg
pushf
adc
pop
fisttps
mov
fstpl
popf
add
fwait
jns
or
dec
pop
shlb
dec
mov
xor
xor
pop
adc
ret
cmp
push
mov
sub
mov
push
in
in
popf
adc
orl
imul
jns
ds
shlb
lahf
mov
dec
jg
sbb
ds
xor
dec
out
or
mov
jne
jmp
movsl
pusha
std
pop
mov
jecxz
fldl
fnstenv
jns
xor
pop
and
sub
in
sbb
push
shl
push
shl
mov
rcll
call
cmpsl
test
lock
lds
rcrl
pop
leave
xchg
rcrb
je
outsl
push
lea
pop
or
mov
subl
or
shll
mov
aam
jmp
imul
cmp
push
std
fildll
popf
aad
dec
cmc
sbb
push
inc
jecxz
in
xchg
push
adc
leave
lea
lods
test
icebp
movswl
mov
push
icebp
xorb
mov
test
push
mov
imul
icebp
mov
addl
inc
add
popf
jns
add
sbb
inc
repnz
jle
inc
aas
jle
pop
sub
fcomps
stos
push
iret
push
in
or
repz
jno
pusha
jecxz
or
jne
xchg
ja
xlat
loope
bound
movsb
mov
jmp
cmpsl
testl
sub
jne
sub
in
add
or
flds
bound
rcrl
jno
lock
in
xchg
pop
push
pop
loop
push
ja
fstpt
or
mov
lahf
mov
mov
and
lret
sbb
arpl
mov
push
mov
sub
xlat
aas
fcmovnu
cwtl
rcrb
lock
jae
stos
lret
add
dec
aam
push
or
test
sub
call
adcl
sbb
xor
pop
pop
enter
shrb
jae
icebp
icebp
mov
jno
sar
je
mov
shlb
daa
sahf
rcll
unpckhps
mov
dec
stos
in
mov
ds
adc
rorl
mov
cmpsl
es
push
stos
push
cld
mov
les
xchg
loopne
in
lods
pushf
push
and
fnsave
mov
push
mov
neg
or
jmp
jne
mov
jecxz
inc
fcmovb
xchg
add
adc
mov
fcompl
cld
shl
lods
in
cmpsl
cltd
das
or
or
mov
imul
inc
ljmp
push
xor
fs
bound
jecxz
aam
je
jge
pop
stos
in
pop
es
sahf
ja
or
loopne
add
mov
push
adc
stos
jmp
iret
xor
out
or
je
sbb
data16
insb
lds
ds
pushf
sbb
inc
jae
inc
adc
mov
jae
insb
call
add
jo
shlb
mov
push
lods
jg
lds
mov
sub
je
out
xchg
mov
cltd
mov
ja
rcr
imul
add
xor
inc
mov
cwtl
xchg
cmp
dec
jbe
les
mov
sbb
pop
test
mov
inc
mov
sub
pop
push
pop
aaa
faddl
mov
push
out
xorl
lods
push
addr16
std
icebp
movsb
xor
int
sahf
mov
loop
addb
sbb
xor
les
dec
or
insb
lds
push
movsl
add
mov
in
sub
add
loope
inc
gs
add
xchg
fadds
in
pop
lea
mov
dec
jae
stos
add
jmp
mov
mov
mov
mov
jp
daa
push
js
bnd
enter
sbb
xor
repz
inc
mov
xor
test
inc
mov
xor
jo
adc
lret
inc
mov
mov
js
or
push
jp
sbb
jo
shrb
push
mov
movsl
fdivl
bound
push
cmp
pop
mov
or
mov
cmp
pop
jns
mov
ja
add
sbb
inc
sub
insb
cs
inc
mov
pop
add
xorb
lea
lcall
js
lret
int3
mov
mov
mov
sahf
sub
add
dec
add
cmpsl
in
fisubrl
lea
mov
jne
jl
xor
test
mov
inc
push
or
test
fcoml
inc
insb
push
jg
and
pop
pop
jae
jl
xchg
pusha
outsl
push
daa
lahf
loope
xchg
leave
int3
xchg
add
sarb
cmp
es
and
outsl
rol
add
nop
push
adc
cmpsl
cmpsb
inc
push
xchg
inc
mov
push
mov
mov
sub
test
int3
fmulp
sub
filds
testl
mov
or
and
ret
bound
push
jle
movlps
not
or
in
mov
incl
mov
or
pmulhuw
inc
cmp
cld
in
jbe
cmpsb
repz
dec
push
arpl
push
mov
test
shl
rolb
cmpsl
jno
mov
jne
sbb
mov
xchg
mov
rcr
sbb
stos
cmpsl
jecxz
sbb
fmul
out
fidivrl
ret
add
in
leave
xor
fnstcw
pop
test
sahf
adc
popa
jge
cmc
push
lods
in
stc
dec
inc
out
cmp
adc
sti
pop
loopne
loop
jg
sbb
in
into
stos
pop
sahf
mov
into
lahf
leave
fstps
cmp
out
dec
dec
and
xchg
sbb
nop
es
ss
lea
fiaddl
jecxz,pn
xor
cmp
sbb
out
and
push
cwtl
mov
test
mov
mov
fs
mov
adc
out
xchg
mov
in
mov
sbb
jo
push
ljmp
int3
call
sub
dec
mov
inc
notb
mov
out
mov
cmpsl
cmpsb
inc
sbb
gs
sub
repz
xor
mov
push
adc
adc
inc
sbb
mov
jnp
cmp
aas
aaa
mov
mov
adc
pop
imul
insl
jbe
mov
insb
push
and
loope
cld
mov
or
cltd
mov
adc
push
ja
mov
xlat
push
iret
jo
ljmp
test
xor
aam
cmp
repnz
pushl
daa
jle
cmp
xorb
push
mov
sub
xor
stos
das
jns
inc
push
push
fidivs
sbbb
mov
icebp
and
mov
js
adc
aas
sbb
xchg
and
xor
nop
notb
test
into
or
int3
push
daa
inc
int
push
xchg
add
and
cmpsl
popa
cmp
imulb
pop
mov
add
mov
jo
mov
dec
inc
mov
mov
and
mov
sbb
mov
or
and
sub
xor
push
loopne
sub
jae
jp
cld
jp
add
imul
das
adc
sbb
cmp
and
xor
sbb
sub
in
fadds
dec
mov
or
pop
xor
cmc
gs
sub
js
and
dec
inc
cltd
cltd
cwtl
lret
int3
mov
pop
outsb
insl
jo
xor
jno
outsb
lcall
sub
inc
mov
std
loop
mov
lock
gs
sub
push
push
in
in
mov
dec
shrl
cs
jmp
push
pop
pusha
imul
mov
or
dec
ret
mov
xchg
inc
fs
jg
out
std
pop
lret
or
mov
xchg
aaa
or
jg
adc
inc
js
bound
pusha
call
stos
jno
in
dec
push
mov
pop
scas
dec
cmc
sub
lds
fs
leave
dec
arpl
fadds
pop
push
push
cmp
test
or
dec
loop
cwtl
std
enter
add
and
add
xchg
xchg
inc
clc
sahf
sub
in
scas
out
inc
jne
push
xchg
stos
insb
and
mov
icebp
xchg
cs
dec
push
divps
inc
xchg
int
in
lock
ret
orb
sbb
xchg
leave
push
or
arpl
scas
sbb
dec
sahf
lods
je
inc
adc
push
movsl
push
fs
cmpl
xchg
jg
out
cld
lcall
into
push
clc
pop
adc
mov
mov
cmpsl
icebp
cs
and
call
int
int
xchg
scas
stc
rcrb
add
nop
push
stos
or
test
pop
mov
stc
loopne
adc
shr
xchg
sbb
ret
mov
ss
ljmp
repnz
aaa
mov
add
repz
je
shlb
push
aaa
push
movsl
cmp
push
cmp
inc
xor
and
rcll
test
xor
ret
pop
mulb
inc
sbb
dec
adc
das
xor
insb
fs
push
inc
push
push
rolb
inc
jge
lds
pop
insl
sahf
ljmp
out
outsb
mov
jnp
sub
outsl
and
xor
in
int3
inc
or
mov
jb
dec
xor
xorl
xchg
xor
push
xchg
daa
lahf
mov
sub
xchg
shl
out
or
mov
mov
add
push
mov
pop
pop
and
lret
jg
gs
pop
cmc
arpl
xchg
adc
movsl
cmp
push
xchg
add
das
sub
cld
aaa
movups
int3
outsl
mov
jmp
stos
popf
out
or
out
out
pop
jbe
shll
xchg
dec
add
and
inc
pushf
jne
or
fistpll
leave
dec
sub
xor
and
adc
dec
repnz
cmp
jecxz
aam
mov
loop
out
repnz
out
xchg
sarb
int3
lret
push
test
popf
mov
dec
add
jl
dec
jmp
pop
adc
fs
add
mov
cmp
or
test
inc
jle
mov
jns
xchg
cmp
inc
shlb
lods
lcall
and
push
scas
cmp
shlb
or
scas
leave
int3
les
in
cmp
lea
lods
and
push
and
mov
jae
adc
outsl
addr16
xchg
out
inc
dec
mov
mov
iret
sti
cwtl
shrb
inc
out
xchg
push
loope
jge
xchg
lock
push
fcoml
xor
mov
pop
or
xchg
sub
mov
adc
aas
sbb
in
dec
push
lcall
jg
pop
loopne
addb
icebp
sahf
sub
out
aaa
sti
mov
imul
sbb
dec
jbe
outsl
push
push
fsubp
daa
mov
inc
addr16
ret
pop
adc
xor
mov
lods
jnp
rol
jg
mulb
cmp
jecxz
js
jl
and
cmp
cwtl
dec
jne
lret
inc
adc
add
rorb
iret
jle
arpl
jnp
negl
dec
push
sbb
test
inc
sub
add
mov
cli
and
rcll
dec
imul
mov
cmp
fstl
cmp
mov
lds
push
es
les
clc
push
xchg
dec
mov
test
or
add
add
cmp
or
lds
or
inc
adc
sub
js
jg
inc
xchg
test
xor
mov
jg
dec
xlat
sbb
or
fwait
outsb
mov
add
mov
cmp
repz
inc
sbb
ss
sarl
mov
cmc
pop
out
fldenv
gs
pop
mov
pop
or
adc
rol
pop
in
fsubl
jg
push
push
cmp
test
imul
mov
cwtl
adc
sarl
jge
inc
aaa
test
pop
sub
mov
cmp
push
andl
mov
adc
jno
lock
jp
int3
push
jo
mov
push
mov
push
jbe
dec
push
adc
shll
imul
mov
inc
in
call
cmp
fwait
xchg
mov
pop
xor
mov
scas
hlt
mov
dec
scas
gs
xlat
js
clc
stc
xor
mov
popf
cmp
cld
mov
mov
fadds
pop
push
jne
inc
and
out
jl
lret
or
addr16
arpl
pminsw
in
push
aad
out
or
insl
mov
cld
adc
or
cmp
xchg
ljmp
xor
and
scas
cli
js
mov
out
adc
ret
mov
cmpsl
xor
jns
jnp
fsubs
scas
and
adc
sbb
mov
mov
out
aas
xchg
test
or
je
push
ret
push
mov
xchg
add
cmc
push
jo
xor
mov
ret
sbb
dec
outsl
clc
fisttps
sub
adc
pop
in
mov
popf
xor
aas
lds
mov
lret
xchg
cmp
cmpsb
bsr
inc
loopne
xchg
xchg
push
lods
lret
outsb
cli
mov
adcb
cmp
jo
dec
fisttps
pop
and
rolb
test
inc
fdivrs
fcmovne
arpl
xlat
rcll
jno
loop
loop
xchg
push
jbe
and
xor
pop
dec
sbb
pop
sbb
add
fucomp
jns
or
loope
xchg
inc
xchg
jmp
and
mov
imul
mov
das
sbb
jp
jl
sbb
mov
cltd
sub
sub
pop
stos
in
cs
pop
das
add
lcall
jg
pop
xchg
xor
lock
cs
and
out
adc
and
cs
loopne
icebp
inc
jl
sbb
cs
push
dec
xchg
sahf
rcrl
adc
push
xchg
cwtl
out
movsl
or
into
xor
sbb
pop
cltd
pop
sbb
outsb
xor
movsl
cmp
in
push
lcall
cld
imul
jg
es
jnp
jmp
adc
sbb
cmp
sbb
js
mov
ret
lock
movsl
and
mov
aad
jbe
gs
xchg
fcoml
inc
out
push
lds
inc
xor
adc
dec
stos
add
inc
jge
pushf
bnd
inc
arpl
xchg
xor
and
dec
mov
xor
jg
rdtsc
mov
in
push
jp
dec
loop
dec
rcr
dec
in
shlb
add
in
sti
cwtl
test
pop
xchg
movsl
jns
div
pop
test
add
pop
mov
ss
and
mul
inc
js
jg
pop
xor
ret
test
sub
xchg
jge
xorl
mov
cli
popf
xor
jmp
jmp
mov
lods
aam
pop
inc
and
push
pop
pop
loop
imul
lock
and
ret
fildl
mov
test
cmc
in
sub
icebp
mov
pop
pop
or
pop
jg
test
icebp
into
or
mov
push
movsl
repz
dec
sub
cmpsb
sbb
daa
cmp
jmp
jnp
in
int
ss
enter
jne
sbb
rcl
xchg
jnp
push
lods
rorl
add
hlt
cmp
inc
xor
add
cmpsl
xchg
test
jle
outsl
into
mov
ljmp
leave
xchg
push
scas
mov
dec
xchg
aas
call
jnp
mov
mov
sti
insb
and
jo
ljmp
arpl
int3
in
movsl
in
pop
shlb
sti
shrl
sub
fiaddl
lods
mov
xor
mov
pop
ret
ds
je
mov
push
add
xchg
hlt
dec
xlat
adcl
or
cld
jno
lret
sahf
push
cli
das
cmp
mov
adc
lcall
pop
into
in
decl
xor
add
scas
push
movsl
or
loopne
push
fsubl
arpl
jne
stos
sub
daa
arpl
je
cmpsb
into
fstl
ja
lods
ret
mov
je
mov
lods
idivl
and
sbb
mov
xchg
xchg
dec
add
dec
mov
jmp
fldt
fiadds
daa
int
dec
sti
add
shrd
out
das
movsl
fxch
adc
mov
ljmp
dec
push
lcall
mov
cmc
loope
jmp
dec
mov
sti
mov
lahf
mov
ficompl
loop
xor
ret
mov
mov
mov
adc
mov
or
ret
inc
jnp
test
fmuls
xor
ljmp
add
pop
mov
sbb
int
push
mov
pop
test
jo
scas
imul
dec
dec
outsb
sbb
stos
je
xor
add
sub
fwait
das
pop
push
addr16
jo
pop
aaa
xor
xchg
leave
les
enter
repz
sub
sub
dec
push
in
add
mov
into
loopne
and
cmp
xchg
cmp
jg
jge
cmp
jnp
mov
int3
test
xor
jp
fs
inc
xchg
mov
cmpsb
rorb
mov
jl
leave
mov
cltd
jb
push
xchg
loopne
gs
callw
out
lcall
aas
mov
push
fidivs
mov
push
shrb
jne
jle
pop
js
mov
and
ja
mov
jmp
testl
idivl
out
xchg
sub
pusha
test
cmp
jns
jae
jle
cmpsb
lock
std
out
lahf
adc
andb
cmp
dec
ss
icebp
pusha
stc
fildll
dec
and
psadbw
jl
xchg
lret
stos
push
sub
xchg
xor
or
mov
xchg
mov
pushf
push
imul
push
push
inc
mov
sti
js
jle
das
nop
notb
push
ret
cmc
add
sbb
adc
into
loope
out
iret
inc
andb
lret
push
pop
ja
mov
aam
cmp
pop
pop
ss
in
adc
fsubrp
sar
mov
in
mov
scas
xchg
lret
inc
mov
orl
stc
push
xor
pop
xchg
mov
adc
lock
cltd
orl
jl
mov
inc
jbe
aas
out
lods
xlat
pop
add
push
es
aad
add
out
test
fadd
lock
shrb
adc
mov
push
and
in
jbe
inc
push
sbb
lret
cmp
dec
hlt
jle
sti
sub
pop
push
fbstp
mov
in
test
loop
inc
jp
inc
push
ss
xlat
icebp
and
push
std
arpl
sub
cs
in
nop
enter
push
stos
xchg
push
outsb
cli
adc
sub
cmp
push
lods
mov
dec
movhlps
js
jae
xchg
jl
or
or
fnstsw
loop
xchg
imul
fstpt
push
add
sbb
push
adc
push
dec
xlat
movsb
push
dec
popa
or
adc
xlat
insl
ret
mov
jae
xchg
mov
lret
adc
sti
and
test
ss
push
aam
pop
dec
ret
inc
dec
mov
adc
mov
test
sub
sahf
xor
sub
scas
lds
arpl
les
xchg
push
and
out
clc
movsb
fsubrl
js
lock
xchg
into
cwtl
pop
xor
adc
cmpsb
cmp
pop
jge
addr16
or
call
pop
and
dec
sahf
std
inc
pop
shll
jno
cltd
outsb
mov
xchg
cmp
sbb
mov
clc
jo
xchg
in
mov
sbb
jae
mov
in
out
jecxz
pop
roll
pop
xor
mov
inc
xchg
sti
arpl
lock
pop
negl
cmp
mov
adc
jle
jmp
mov
in
aas
push
movsb
jbe
pop
mov
test
pushf
in
xor
and
sub
push
lcall
movl
in
push
add
insl
inc
mov
cwtl
les
nop
adc
addb
sbb
jno
daa
mov
mov
mov
xor
jbe
fwait
pop
mov
ljmp
les
out
jbe
sbb
push
push
imul
test
jp
inc
pop
push
sub
out
sbb
xchg
lods
in
pusha
mov
js
sub
fwait
ret
jne
jg
jnp
mov
sub
rclb
lcall
or
cli
mov
lds
jmp
out
iret
pop
loope
sbb
loope
cld
popa
mov
popf
call
inc
or
ficoms
pop
pop
lcall
fld
stos
cmp
dec
and
mov
stc
pop
cmpsl
push
mov
xor
jl
jmp
push
lea
inc
jmp
jge
jb
xor
adc
addr16
mov
inc
push
mov
xchg
out
and
sbb
aas
das
stos
add
cmpb
jnp
mov
pop
push
es
ret
sbb
or
ret
test
adc
sbb
lock
cmpsb
inc
cmp
shl
mov
shlb
cmp
xchg
popf
bound
out
inc
cmpb
popa
outsb
sbb
jl
jmp
out
mov
mov
dec
popa
xchg
ret
mov
or
jg
lods
cmpsl
pop
clc
enter
xor
in
push
out
inc
das
out
mov
icebp
sbb
inc
xchg
sar
mov
add
cmp
xchg
or
lahf
lcall
iret
and
aas
sbb
mov
push
add
std
rorl
push
jmp
mov
push
mov
dec
pop
leave
rorl
stc
mov
xchg
test
rcll
adc
fs
loope
or
inc
mov
test
or
jb
jecxz
pushf
out
popa
mov
xchg
faddp
inc
insl
push
mov
mov
sub
xor
cwtl
or
and
cli
js
or
fistpl
nop
sbbl
push
cltd
and
movsb
cmpsl
pop
out
push
inc
test
test
and
adc
adc
pop
xlat
das
aaa
push
mov
fisubrl
inc
in
movsb
sub
pop
mov
or
jecxz
lcall
or
pop
lahf
add
push
mov
call
inc
cmpsb
cld
xchg
test
mov
xlat
dec
gs
push
mov
shlb
mov
jmp
out
mov
clc
test
and
loope
cmp
shrl
mov
pop
xchg
cmpsb
push
out
push
inc
cmpsb
push
fst
xor
mov
mov
cmp
or
inc
adc
sub
push
add
mov
push
dec
push
adc
in
sahf
inc
xchg
flds
sbb
enter
xchg
inc
sarb
loop
aam
cmp
mov
pushf
adc
mov
adc
arpl
cmc
dec
mov
jp
mov
shlb
inc
outsb
loopne
outsl
es
dec
pop
stc
pop
mov
or
push
inc
clc
popf
fiadds
mov
jbe
cwtl
test
mov
clc
pop
pop
and
repz
pop
mov
push
add
ficomps
out
jo
push
xorl
and
sahf
subl
or
ret
into
jmp
data16
call
les
xchg
push
mov
and
fs
and
sub
mov
int
mov
repnz
test
add
cmp
int
mov
int3
pusha
sbb
and
adc
icebp
fisttpl
add
mov
sti
xchg
call
cmp
imul
sub
xchg
cmpsb
daa
pop
jns
sbb
and
inc
xchg
lea
jp
scas
sahf
xchg
pop
lods
leave
pusha
xchg
push
adc
scas
mov
or
and
fisubs
add
push
stos
mov
aad
pop
xor
dec
inc
daa
in
loop
and
xor
cs
imul
inc
mov
jg
cmp
push
das
mov
dec
jecxz
push
xor
mov
mov
mov
inc
int
sbb
cmpsb
ljmp
xchg
mov
mov
adc
lret
das
cmp
dec
inc
mov
xchg
pop
out
insb
or
push
mov
add
repnz
sahf
repz
adc
push
xchg
and
or
cmp
outsb
cwtl
rclb
lret
mull
add
pop
aam
lods
or
and
jne
ret
loopne
mov
lods
lock
sub
jnp
xchg
sbb
lods
ret
xchg
daa
nop
out
sbb
insb
stc
push
pushf
roll
fiaddl
mov
add
fucom
and
adc
xchg
mov
shll
dec
mov
pop
jbe
icebp
in
xchg
push
or
cmp
ds
xor
pop
lret
and
add
xrelease
xor
icebp
mov
in
and
mov
ret
or
mov
cmp
ss
xor
test
xchg
and
adc
sub
mov
xchg
and
je
addr16
mov
adc
mov
push
xchg
push
lea
dec
pop
dec
stos
fsubrl
xchg
dec
test
push
pop
push
jg
stc
aad
pop
ficompl
jb
gs
enter
je
mov
mov
pop
insb
or
cld
dec
xchg
lods
and
and
adc
js
repnz
xchg
mov
mov
cmp
push
cmpsl
pop
sbb
add
lock
adc
mov
popaw
jo
or
or
add
dec
inc
push
adc
sub
mov
xor
es
jbe
sub
xor
push
push
mov
sbb
pop
jmp
jb
neg
test
ljmp
inc
xchg
cmp
je
inc
mov
mov
je
pop
xchg
stos
lcall
loop
mov
clc
mov
outsb
adc
sbb
insl
outsl
push
sbb
out
stos
or
aaa
cmp
clc
jo
cld
mov
lahf
imul
mov
stos
adc
pushf
out
pop
aam
mov
push
pusha
stc
adc
and
data16
mov
pushf
or
pop
mov
push
bound
icebp
cmpsb
rcr
sub
fistl
andl
jmp
xor
mov
mov
mov
aaa
rol
push
push
negl
add
xchg
inc
mov
sar
subl
cltd
mov
cmpl
hlt
sbb
fcomps
lods
mov
lock
mov
popf
mull
fisttpll
cmp
sub
push
or
add
inc
mov
in
inc
int3
adc
xchg
fwait
sub
into
cwtl
pushf
leave
inc
sub
ret
andb
pusha
push
data16
dec
ret
aas
push
mov
mov
pop
clc
inc
xchg
bound
jno
adcb
jp
rcl
sub
fldenv
das
mov
or
jno
cld
cmp
add
jp
mov
and
jnp
sbb
jg
pop
push
dec
loope
push
jecxz
sahf
and
cmp
mov
leave
cmp
daa
test
pop
ljmp
push
int3
jmp
jecxz,pn
jnp
add
int3
sub
repz
sbb
dec
sbb
subb
lret
add
push
ja
pop
movsl
incb
mov
fldl2e
ljmp
or
xorb
ret
insb
pop
mov
sbb
add
je
add
jns
adc
imul
ror
cmpl
sbbl
dec
std
into
fmul
scas
push
dec
sbb
jle
cmp
jbe
add
xlat
inc
gs
mov
add
arpl
std
dec
xchg
and
or
outsb
sbb
shrb
push
out
push
insl
bound
outsb
push
mov
sbb
jle
outsl
rcl
pop
xchg
dec
fiadds
mov
les
testl
xchg
popa
cmc
and
out
movsl
ja
sbb
test
mov
push
leave
and
mov
cld
pop
inc
sbb
fwait
in
dec
aad
add
fistl
into
les
out
inc
adc
fadd
mov
ja
jp
xor
lods
in
imulb
out
mov
leave
adc
inc
idivb
scas
jb
pop
aad
rorb
ss
out
mov
mov
test
negb
fistpl
sub
dec
loope
jecxz
loop
xchg
xchg
adc
ret
cmp
or
jge
rclb
aad
ds
push
test
je
push
aad
out
cwtl
fmull
fldln2
cmpsb
push
pushf
jae
lods
repz
icebp
dec
movsb
sbb
sbb
jo
ja
or
xor
adc
leave
cmp
sub
push
xor
xor
xchg
sub
cmpsl
inc
jb
sbb
jmp
mov
sub
push
in
dec
loop
fwait
int3
dec
aas
aaa
stos
inc
hlt
popa
dec
push
es
sarb
shll
cwtl
ss
pop
dec
ret
jg
orb
xor
std
cmpsb
cmp
push
cmc
push
pop
lcall
pop
lahf
sbb
dec
ja
xor
mov
inc
mov
in
nop
inc
mov
or
daa
sbb
cmp
test
pop
imul
dec
push
hlt
inc
test
jnp
jge
shrl
jge
repnz
push
filds
sbb
adc
sub
xchg
push
mov
adc
xchg
pop
mull
and
out
pusha
and
pop
orb
pop
in
or
fsubr
jmp
and
inc
dec
popa
mov
rcr
inc
mov
dec
push
mov
stos
mov
lret
mov
orb
sbb
jb
test
enter
je
pop
cmp
addb
jl
in
pop
sub
in
pusha
ljmp
or
insl
pop
adc
insl
dec
lret
out
dec
call
cld
fsubr
xchg
sahf
or
jno
in
jae
xlat
cmp
sahf
cmpsl
pop
js
hlt
pop
push
xchg
in
jg
add
sbb
mov
push
push
mov
dec
dec
or
sti
push
dec
out
dec
adc
pop
jnp
adc
dec
jp
adc
pop
add
rcll
fs
cmp
mov
movsl
mov
xchg
add
addr16
daa
ret
mov
mov
pop
push
out
fwait
movsb
leave
xchg
into
push
test
push
mov
inc
fwait
out
xor
and
in
cmpsb
out
cmc
or
jae
fildll
es
insl
pop
sub
out
popa
cwtl
xchg
cltd
jbe
outsl
xchg
outsl
or
testl
mov
nop
je
push
enter
mov
aam
sub
out
mov
jl
repnz
adc
adc
push
int
mov
stos
and
push
fmuls
or
or
mov
xor
bound
jge
add
in
pop
mov
out
sar
push
lods
pop
fisubrl
sub
inc
ret
das
mov
lcall
jbe
mov
add
jle
das
in
xor
push
stos
cmp
xchg
jp
insb
mov
inc
rcl
imul
push
and
sub
pop
mov
add
xor
repz
fdivr
mov
or
jg
cld
xchg
fcom
sbb
shlb
mov
iret
hlt
stc
out
dec
shrb
inc
push
mov
mov
out
ds
lds
imul
sbb
lret
lcall
pop
fldt
andb
jns
fnstcw
xchg
rcr
or
enter
adc
mov
push
jge
mov
test
push
insl
cli
loop
push
jne
inc
push
cld
or
jle
outsl
js
adc
hlt
and
fidivrs
loopne
push
pop
negl
lds
mov
lret
sub
push
iret
dec
pop
gs
outsb
or
pop
sub
in
cmp
xor
inc
xchg
fbld
dec
in
in
ffree
xor
and
in
rolb
repnz
mov
cmpsl
cmc
jge,pn
or
jl
jecxz
std
dec
stos
inc
or
cmp
lahf
or
ret
int3
jnp
pusha
enter
cmp
out
fildl
or
jae
dec
lahf
pop
push
inc
dec
das
ret
stos
cmp
xchg
mov
or
arpl
sbb
push
xchg
pop
repnz
pushf
call
push
jmp
aaa
js
xchg
mov
jmp
pop
pop
cmp
inc
pop
lock
xlat
inc
mov
jge
nop
clc
cs
in
xchg
pop
cld
cmpsl
mov
popf
mov
insb
and
xor
insl
ret
and
frstor
decl
sbb
sti
sti
mov
ret
push
js
jecxz
adcb
sub
popa
mov
dec
popa
jmp
cmovge
lahf
mov
dec
fisttps
xor
movsl
xlat
je
adc
xchg
mov
mov
loop
dec
cmpsb
fldt
cmpsb
xor
ds
ret
mov
inc
test
repnz
push
pop
dec
pop
mulb
ficoml
dec
cs
add
xorl
adc
cmp
repnz
test
clc
popa
mov
cmp
push
jnp
test
xchg
inc
jb
xor
sarb
sbb
in
scas
add
xchg
out
out
dec
push
sub
dec
daa
or
popf
jp
jl
cmp
aas
outsb
aas
scas
mov
loop
sub
lea
mov
adcb
jl
xor
std
lcall
pop
pop
arpl
and
mov
jmp
mov
inc
mov
jg
add
add
add
mov
jmp
xchg
xor
pushf
test
and
iret
and
adc
int3
mov
scas
enter
jno
sub
fisubs
push
sbbb
add
and
dec
add
mov
push
add
sub
mov
cmpsb
or
std
fldl
fs
cld
mulb
imul
jle
or
and
sarl
jle
bound
je
xchg
jl
rcrb
cmp
jp
lcall
xlat
jmp
xor
call
cmp
popa
mov
in
or
cmp
dec
shrl
pop
addb
push
sub
outsb
pop
in
sbb
ficoms
add
repnz
repnz
sub
cvttps2pi
push
jbe
hlt
loop
bound
or
nop
sub
test
movl
loope
fisubrl
int
dec
pop
dec
out
rol
ja
dec
lods
push
adc
inc
daa
loop
out
int3
test
mov
std
pop
pop
inc
lea
imul
cmp
mov
mov
and
and
xlat
adc
test
pusha
xor
test
dec
push
sub
es
pop
pusha
lret
pusha
cmpsl
sbb
mov
sub
mov
bound
cld
jecxz
jb
rorl
insl
fs
xchg
fldl
repnz
lret
xchg
stc
enter
jne
ss
rcrb
ss
or
ret
vsubps
lret
cmp
dec
testl
fldz
and
sub
cmovo
popa
orb
mov
call
inc
push
lret
sbb
mov
mov
jb
repz
fs
cmp
mov
push
xchg
out
enter
fnsave
push
or
addr16
lahf
enter
xor
icebp
out
sub
jp
int
fnstcw
jecxz
iret
jp
jmp
addr16
int
mov
jg
lea
pop
arpl
sbb
dec
push
lret
inc
or
and
add
bound
enter
or
xor
es
lret
xchg
stc
das
adc
loopne
es
into
dec
adcl
push
sub
or
inc
in
cld
scas
scas
mov
ret
pop
push
icebp
test
fistl
cmp
lods
popa
push
push
sub
xlat
rcll
pop
xchg
push
loop
mov
push
lret
adc
popf
inc
iret
fimuls
sub
dec
scas
mov
inc
dec
add
and
inc
mov
jge
xor
outsl
pop
fwait
insb
mov
xchg
cmp
and
mov
daa
xor
in
jbe
mov
mov
fnsave
int
popf
mov
mov
fildll
cmpsl
clc
arpl
sub
into
or
mov
pop
dec
xchg
addr16
jmp
cmp
xchg
popf
mov
mov
push
xchg
std
mov
xor
add
xchg
xor
lock
aad
sub
pop
or
lea
xor
sub
lret
push
ja
andl
mov
sbb
dec
dec
cld
cltd
call
lcall
daa
loop
push
aas
xor
fs
adc
lret
or
jo
mov
sahf
stos
fldt
mov
scas
movl
insb
data16
mov
jp
pusha
shr
ljmp
pop
xchg
add
jns
mov
push
inc
mov
xchg
mov
insl
mov
jmp
sahf
rclb
test
push
and
jne
adc
outsb
mov
pop
jg
lret
ljmp
push
jb
inc
enter
mov
pop
insb
cli
cmp
xor
popf
scas
pop
sbb
ljmp
cmp
rclb
jo
ret
subb
rcl
cmp
xchg
sbb
add
jle
negl
cmpsb
ss
xlat
in
jno
xchg
mov
or
jbe
push
push
sub
mov
xlat
push
sbb
outsb
sahf
jns
hlt
xchg
or
loope
dec
test
mov
lods
jl
sub
into
push
mov
sub
cmc
out
push
sbb
xchg
dec
inc
pop
push
jbe
aad
inc
jl
jg
cmp
insl
bound
or
jns
mov
mov
clc
js
pushf
mov
data16
aaa
pop
bound
sbb
adc
and
negb
inc
test
jecxz
les
loope
out
jno
jmp
scas
daa
jp
add
roll
jbe
sub
cmp
scas
jle
push
xor
jmp
pop
loopne
addl
mov
push
je
gs
inc
xchg
call
adc
push
pushf
mov
push
insl
xlat
ss
fmull
cs
xchg
add
and
aaa
adc
test
push
cs
sub
outsl
jmp
cmpsb
jle
gs
jne
int3
stos
mov
add
testb
xor
cmp
jmp
je
daa
mov
mov
inc
loop
adc
inc
or
scas
pushl
inc
das
jne
push
xchg
int3
scas
and
pop
cmc
out
mov
mov
inc
jo
xor
jg
jo
lahf
push
ret
stc
test
outsb
in
fsub
push
add
lods
rclb
fdivs
xchg
mov
mov
mov
cmp
popf
test
daa
push
push
iret
pop
loop
add
outsl
or
jne
fdivrl
mov
pop
das
lods
push
call
push
insb
inc
add
scas
xchg
mov
dec
adc
jne
pop
jnp
shrb
or
add
fsubrl
push
xchg
ljmp
jns
mov
push
jecxz
movsl
mov
call
pop
adc
test
or
add
push
test
jge
lret
roll
loop
pop
add
test
and
push
xor
outsb
rcrl
fiaddl
lret
mov
cmp
fucom
outsb
leave
popl
push
sub
imul
xchg
add
pop
or
adc
mov
rclb
jmp
add
xchg
sbb
popf
jmp
jo
in
dec
into
in
lret
lea
inc
dec
xchg
testb
mov
push
and
and
nop
xchg
dec
mov
popf
pop
test
pop
jg
cltd
int3
scas
imul
mov
fldenv
push
xor
cmpsb
dec
sahf
adc
add
fstl
idivl
add
mov
mul
adc
bound
jle
jge
cltd
out
lret
jle
pop
sub
fs
rcr
xchg
push
stc
pop
imul
jno
es
push
iret
fdivl
es
mov
ljmp
cli
sbb
jbe
into
icebp
imull
xchg
nop
and
sbb
aas
insl
inc
jge
stc
divb
aaa
hlt
jo
push
dec
movsl
dec
inc
xchg
xchg
test
cmp
mov
mov
or
ja
jae
push
stos
pop
mov
fucomp
inc
pop
out
pop
or
jne
ja
mov
ret
data16
fs
push
xchg
out
mov
clc
jp
into
mov
je
sbb
xchg
sarb
stos
adc
shlb
mov
mov
adc
mov
shr
add
ljmp
add
imul
test
test
loope
shl
adc
insl
fidivrs
cld
add
testb
jmp
or
pushf
das
add
or
aaa
push
sub
repnz
xchg
lcall
xchg
insb
xor
or
mov
xor
jbe
shlb
outsb
lcall
les
adc
enter
lret
aaa
in
or
jo
mov
scas
pushf
in
mov
mov
adc
pop
mov
pusha
push
sahf
push
or
sbb
lea
popa
aam
mov
push
fmull
rep
std
mov
test
popa
dec
xchg
and
jno
cs
ja
cs
jecxz
pop
pop
insb
aaa
cmp
jg
stc
stc
push
out
int3
pop
inc
mov
push
adc
sbb
dec
jnp
aas
sahf
lds
clc
loopne
insb
and
leave
loopne
enter
fidivl
sbbl
xchg
imul
mov
in
add
shl
nop
fdiv
pop
mov
xchg
mov
cltd
call
xor
jae
mov
test
lahf
scas
xchg
gs
bnd
pop
insb
xchg
arpl
jp
xlat
sbb
push
mov
lcall
cmp
mov
cmp
idivl
and
pop
pusha
cmpl
xor
add
mov
jbe
and
or
mov
mov
out
fsubrl
movsb
std
popa
push
mov
mov
fidivl
and
adcl
int
nop
mov
xor
popf
fwait
ja
or
jp
dec
and
add
and
fdivp
sub
mov
leave
lahf
in
adc
or
mov
leave
pop
cmc
lret
jnp
dec
sahf
and
or
xchg
insl
xor
loopne
das
dec
inc
add
rorb
cmp
aad
dec
cmp
xor
movsl
pushf
loope
xchg
sbb
mov
mov
and
pushf
cli
iret
fmul
iret
cltd
fsubrs
flds
adc
loopne
popa
mov
jo
mov
jo
cmp
sti
push
cltd
movsl
imul
sub
cmc
lcall
add
inc
jno
mov
push
cmp
xchg
xchg
insl
in
int3
aas
mov
pop
mov
popf
jbe
pusha
mov
ds
pop
clc
gs
mov
ds
into
xlat
lods
hlt
iret
add
dec
ret
test
pop
mov
stc
loope
lret
dec
xchg
inc
xchg
jb
movsl
cmp
mov
fisttpl
out
xchg
jecxz
cli
ss
lods
inc
sbb
or
test
push
pushf
mov
mov
dec
mov
or
cmp
das
cmp
inc
call
ss
pop
into
sbb
mov
orl
push
mov
lret
cmpl
cmp
push
add
arpl
stos
adc
xchg
dec
push
mov
outsl
scas
add
or
scas
mov
mov
not
fstl
shll
sbb
scas
inc
stos
xor
xor
test
adc
mov
enter
mov
insb
sbb
fistpl
decl
fisubl
push
xchg
in
outsb
xor
sub
outsl
loopne
xor
minps
push
xchg
pop
jp
and
lods
push
out
dec
and
xchg
add
cld
jb
cmp
mov
decb
shll
xor
sbb
push
ss
scas
inc
iret
add
add
cmp
out
stos
lods
pusha
hlt
cmp
mov
pusha
inc
in
jbe
je
dec
mov
pop
ficoms
outsl
outsb
push
bound
pushl
adc
mov
push
test
mov
sub
call
pop
repnz
push
dec
add
dec
mov
sub
sbb
push
int
adc
dec
pop
out
ficomps
cmp
or
dec
lds
gs
pop
mov
adc
es
push
push
add
in
cwtl
jecxz
cmc
sub
pop
jmp
or
mov
or
cmpsb
jmp
jae
xchg
sub
jb
int3
push
jl
jl
lcall
cltd
pop
dec
clc
add
mov
sbb
aas
ret
cmpsl
mov
sti
adc
and
jmp
push
adc
std
or
sub
mov
push
sbb
mov
pop
pop
imul
loop
or
dec
adc
jle
lock
shll
mov
scas
pop
lret
push
xor
icebp
je
outsb
lods
dec
and
push
jg
lret
dec
adc
fldt
push
pop
sbb
cli
inc
jp
ret
dec
sub
inc
dec
ljmp
mov
aaa
mov
jbe
and
mov
cmp
sti
dec
jns
xor
pushl
rcrb
stos
push
es
sbb
popf
fmul
mov
aad
mov
and
cmp
scas
push
int3
jg
loop
mov
std
inc
rorl
test
fists
adc
cs
jne
int3
movsl
nop
mov
mov
cld
xchg
push
xchg
shrd
xor
sbb
mov
xchg
insb
stos
jnp,pt
pop
push
mov
and
mov
mov
lods
std
sti
cmc
push
xor
lcall
cli
push
cli
idiv
adc
and
mov
fsubl
cmp
mov
sub
add
and
and
mov
in
mov
fs
idiv
aaa
in
cmp
pusha
dec
fsts
sbb
cmp
popa
lods
jnp
sub
or
iret
fidivs
pop
mov
adc
in
mov
cmp
add
movl
lahf
push
inc
mov
mov
mov
subl
xor
pop
mov
mov
cmc
jne
enter
mov
inc
or
dec
cli
add
xlat
push
mov
push
dec
mov
fnsave
or
clc
aam
pop
adc
sbb
xchg
ljmp
insb
inc
shll
pop
test
mov
dec
cmpsb
ss
mov
shrb
movsb
loope
shl
and
push
cmp
les
aam
or
cmc
sub
inc
jno
fidivs
out
aad
out
and
cltd
xchg
push
clc
test
je
addb
xor
pop
arpl
imul
call
jl
out
nop
call
cli
lock
mov
mov
imul
addr16
and
inc
jmp
movsb
cmpsb
call
dec
or
and
cmp
push
fsub
addl
sbb
jp
call
inc
mov
insb
test
out
sti
lea
aad
or
cmp
rcll
add
daa
push
add
aaa
bnd
outsl
pop
pop
jp
or
popw
lahf
mov
sbb
sub
mov
sbb
lea
iret
sub
int3
push
xlat
loope
jmp
adc
bound
fs
scas
adc
pop
cmp
clc
sbbb
addr16
jecxz
xor
sub
sub
xor
cltd
lcall
mov
cs
adc
subl
insl
addr16
push
lods
and
jecxz
or
mov
xor
xor
js
bound
pop
fnstcw
jle
sub
jmp
xchg
sbb
and
mov
testl
xlat
das
nop
dec
mov
and
push
push
adc
fistps
mov
pop
popf
sahf
cmc
or
cmp
push
and
popa
sub
add
iret
pop
cltd
arpl
add
cmc
and
fdiv
mov
lahf
mov
mov
and
das
test
int
jge
jmp
jle
adc
cli
dec
fimull
loop
inc
lock
push
xor
push
mov
mov
out
mov
push
daa
scas
mov
imul
push
pop
and
dec
xor
mov
pop
loope
gs
cltd
dec
pushf
xchg
sub
add
add
xlat
or
cwtl
lods
rclb
inc
lock
and
js
fdivrs
mov
sub
mov
sub
inc
and
sbb
jl
sbb
rcrl
lahf
mov
mov
xor
pop
and
or
add
ret
and
and
inc
movsl
aam
aam
loop
and
cmpsl
fwait
xchg
jae
aas
sub
inc
pusha
and
hlt
pushf
dec
stc
push
nop
jbe
inc
fildl
mov
cmp
cli
in
testl
mov
lods
ret
rcrb
and
push
fs
into
push
enter
lea
mov
push
inc
jnp
lret
shr
sbb
ret
mov
add
jb
pop
test
pop
sbb
cwtl
cmp
fwait
divb
es
inc
out
fmuls
test
call
mov
outsb
inc
mov
arpl
in
inc
cmpl
xor
sbb
and
fwait
adc
ret
push
mov
pop
xchg
and
hlt
in
push
dec
add
dec
insb
fistpll
lods
mov
sbb
or
add
mov
push
mov
popf
pop
repz
popf
mov
pop
or
push
movups
pop
scas
insb
ret
dec
inc
fwait
adc
mov
bound
xor
movsb
jno
xor
mov
call
popa
int
jo
pop
mov
out
das
aaa
std
shll
xchg
lret
push
xchg
repz
lcall
shl
mov
inc
push
jno
jge
sbb
and
shll
add
lds
imul
insl
jle
mov
outsl
add
dec
lds
iret
ss
ss
jecxz
add
incl
lcall
push
lahf
scas
xor
ret
pushf
loopne
aad
lret
mov
mov
fs
fwait
ja
pop
push
push
outsl
pop
lds
loope
sbb
adc
mov
ret
lret
std
test
call
dec
addl
jae
stos
and
pusha
das
les
xor
inc
jb
dec
sub
cs
pop
mov
sbb
jmp
add
pop
sbb
and
je
enter
fsubs
mov
pop
adcb
imul
mov
cmp
clc
out
mul
fs
cs
adc
ja
stos
rcrl
or
jbe
scas
sbb
outsl
cmp
jns
ret
neg
mov
lods
mov
and
lock
mov
daa
scas
insl
mov
enter
push
sbb
pusha
push
popa
adc
cmp
pop
rcrl
int3
push
cmp
int3
mov
mov
dec
or
inc
pushf
pop
cmp
idivb
sub
or
dec
ja
adc
aas
jbe
incb
pop
divb
pop
or
adc
cld
mov
frstor
xchg
inc
fstps
mov
sub
push
iret
push
stc
adc
dec
js
xchg
movsl
cmpsb
cltd
in
fsubp
jp
daa
cltd
push
test
pop
pop
and
aad
insl
stos
cltd
jbe
stc
sbbb
jnp
and
sbb
xchg
or
sub
pusha
lea
fldenv
lea
stos
sahf
pop
fmul
xor
je
dec
scas
lret
jns
les
and
andl
out
shlb
stos
jg
popf
insb
lea
rorl
out
or
or
add
add
jno
push
or
int
div
ficompl
inc
ds
int
jmp
sub
pop
xchg
insb
sub
cmp
pushf
xchg
sub
rolb
hlt
cmp
ja
jbe
inc
testb
popa
jae
popf
adcl
loopne
subb
js
sub
fcom
lds
mov
push
mov
adc
sbb
inc
les
aaa
icebp
pop
cmp
loopne
icebp
dec
cld
jmp
cmp
cmpsl
inc
sbb
or
mov
stos
icebp
addl
test
enter
fcoms
in
cmp
xlat
repnz
jbe
sbb
inc
loopne
repz
cmc
sub
pop
mov
cli
outsb
xchg
dec
push
cmpsl
pop
inc
cmp
inc
add
pop
push
mov
mov
pop
fs
xchg
aad
dec
or
push
hlt
out
push
scas
movsl
dec
out
sbb
imul
and
xor
inc
ja
call
gs
bound
test
test
inc
daa
out
jnp
and
xor
cmp
arpl
adc
inc
frstor
fcomip
push
ficompl
inc
cmp
mov
cltd
scas
scas
call
stc
testl
out
out
test
add
mov
in
mov
push
test
lahf
or
shll
sbbl
test
or
jle
rclb
mov
cmc
pop
or
das
cs
iret
inc
inc
push
cli
shl
ret
mov
fisubs
das
lods
mov
out
xor
push
stc
adc
cs
hlt
jecxz
mov
inc
movsl
popa
mov
in
push
lahf
push
inc
or
inc
test
pop
hlt
jg
cmp
xor
and
sahf
push
xchg
stc
mov
std
out
cwtl
loope
mov
add
test
xor
jno
sbb
dec
stos
lret
mov
mov
pop
das
in
sub
scas
cld
std
cmp
add
xchg
mov
scas
xchg
aad
ja
outsb
xor
pop
pop
popa
add
ljmp
cltd
clc
adc
out
cmpsl
jecxz
xlat
mov
sbb
jmp
lds
lret
in
mov
arpl
push
int3
ret
lret
sti
into
je
popa
popf
and
jg
outsl
mov
out
je
xchg
insb
push
mov
sbbl
and
xchg
roll
push
aad
or
cli
aas
inc
dec
sbb
test
inc
pop
mov
fs
lea
xor
movsl
faddl
out
daa
push
jns
mov
push
add
xor
adc
xchg
inc
out
popf
sarl
inc
lcall
mov
jge
pop
into
jle
sbb
ret
inc
lret
jb
add
outsl
jle
cmc
out
pushf
and
iret
sbb
sbb
pop
mov
sti
jp
jmp
pop
xchg
push
pop
fsubs
jmp
jbe
sbb
jo
std
rorl
je,pt
push
ss
leave
pusha
jge
not
push
sub
push
mov
in
test
jle
faddl
cltd
ss
push
xor
xchg
cmpsb
add
mov
xor
xchg
jno
imul
inc
fwait
mov
jo
push
in
xchg
inc
bound
aaa
cmp
dec
je,pn
push
mov
enter
xchg
mov
sub
out
lds
adcl
in
pusha
and
or
jnp
sub
xchg
mov
imul
add
mov
ds
lcall
jae
cli
push
pop
xlat
jmp
sub
pop
loop
das
les
lcall
sub
lods
or
cmp
inc
push
insl
push
ds
fdivrl
scas
pop
pop
adc
pop
negl
cmc
les
xchg
push
mov
sub
sub
lea
adc
xor
fstpl
push
cmc
sub
sbb
stos
shll
xchg
mov
or
stos
enter
insl
daa
push
jecxz
sbb
sbb
pop
inc
push
inc
inc
imul
data16
xor
mov
mov
mov
stos
jge
mov
shr
jl
dec
test
and
adc
mov
adc
mov
push
jo
scas
push
je
test
inc
mov
inc
mov
dec
push
inc
inc
lcall
mov
in
push
fucomi
xor
js
and
insb
inc
jne
inc
rcrl
sahf
dec
or
pop
pusha
add
cld
idiv
cltd
pop
xchg
in
std
sbb
test
inc
pop
mov
inc
push
inc
push
xor
pushf
push
xchg
sbb
xchg
xchg
in
push
faddp
push
pop
mov
leave
jl
fidivrl
pop
call
mov
mov
scas
mov
aas
mov
dec
fbld
or
cmp
ja
loope
and
inc
ret
sbb
loope
mov
mov
imul
daa
push
mov
sbb
outsl
insl
bound
in
cwtl
sub
clc
sbb
mov
jmp
mov
loope
nop
sub
cmp
into
and
sbb
cmc
sbb
jnp
fstpl
in
std
push
sbb
dec
adc
add
repz
inc
cmp
xchg
shrb
mov
push
pop
push
sbb
data16
inc
out
jae
call
jo
fwait
sbb
push
clc
cwtl
enter
dec
movsl
ret
mov
dec
hlt
orb
lods
cmc
lcall
mov
repnz
adc
test
adc
loopne
jno
jne
jns
out
shll
rorb
fsubrs
nop
add
es
xchg
mov
inc
and
mov
lds
pop
iret
stc
push
fs
scas
mov
push
mov
sbb
and
enter
xchg
loopne
aas
mov
jne
imul
cmpsl
out
pop
clc
mov
push
cwtl
mov
push
inc
sti
cld
test
inc
push
xor
xor
fcomps
lods
shl
rcr
jg
xchg
repz
pushf
fwait
mov
sub
push
or
xchg
cmc
outsl
pusha
jb
scas
pop
adc
stos
repnz
sahf
jecxz
xor
dec
jae
cltd
and
push
mov
xchg
adc
sub
movsb
mov
sbb
enter
add
xchg
es
and
push
loope
ror
adcl
xchg
mov
ja,pt
push
mov
hlt
clc
push
leave
ja
aaa
or
pop
aas
push
dec
mov
mov
adc
push
add
dec
pop
iret
ss
fildl
or
xchg
test
push
stc
adc
bound
sbb
inc
dec
xchg
loop
xchg
push
push
cmp
inc
xchg
scas
adc
or
jns
ret
push
cwtl
stos
pop
stos
aas
test
mov
mov
pop
push
iret
sub
fdecstp
orb
inc
sar
and
inc
cwtl
sub
rolb
mov
push
cmp
push
adcl
js
bound
pop
mov
jnp
lock
aaa
aad
pop
mov
pop
xchg
pop
cmp
cs
add
imulb
insb
inc
mov
iret
stos
push
push
inc
scas
mov
shll
insl
inc
sbb
imul
int3
or
add
pop
dec
leave
xchg
popa
lds
jmp
dec
fcmovne
in
or
movsl
cmp
dec
xchg
jns
fstl
cmp
push
lret
push
scas
pop
shl
inc
dec
ss
xor
imull
cmp
repz
stos
fsub
and
dec
ss
sbb
shlb
mov
negb
mov
pushf
lahf
bound
sub
call
xchg
cmpsl
pop
shl
dec
xor
int
fdivrp
into
pop
mov
dec
daa
fwait
hlt
inc
shll
sub
scas
cmp
xor
and
arpl
add
loope
mov
std
adc
dec
shlb
xlat
add
ss
data16
inc
cmp
ficoms
cmp
jge
insb
cltd
stos
fcomip
mov
mov
sbb
dec
mov
sub
std
xor
mov
aad
or
mov
sub
jnp
dec
insl
out
xchg
push
xchg
sub
imul
cltd
adc
cmc
cmp
leave
or
in
dec
pop
mov
rorb
add
pop
inc
imul
pop
push
popa
cmc
cli
and
sbb
cmp
push
loope
and
and
dec
push
enter
pop
xchg
dec
call
mov
fildl
sub
lods
adc
lret
jno
mov
and
ja
jle
loop
cmp
popf
sti
cmp
loope
fstpt
es
shr
mov
mov
popa
sbb
movl
addl
icebp
sbb
out
mov
cmp
push
fcoms
mov
inc
rclb
movsl
out
sbb
test
push
into
addr16
push
arpl
in
test
push
mov
jecxz
sahf
mov
sbb
dec
add
daa
fcomp
out
xchg
lret
imul
mov
inc
push
js
shrb
pop
lds
jno
jl
fucomi
push
out
or
rol
jns
es
aaa
and
loop
outsl
jmp
xor
insl
fs
mov
xor
mov
adc
das
pop
pushf
negl
dec
push
adc
mov
aad
mov
mov
mov
mov
sahf
inc
lods
test
mov
jg
testb
adc
xchg
dec
in
repz
adcb
push
xlat
sub
inc
mov
jbe
mov
add
je
dec
cld
aas
movsb
sub
sub
fldl
pop
pop
fnstcw
xor
xor
cmp
mov
test
cmp
orb
sub
push
popf
jo
xchg
inc
jl
push
mov
jns
jbe
out
int3
ror
in
mov
icebp
aad
or
loop
flds
xlat
adc
jp
sbb
or
jb
mov
pop
xchg
xchg
dec
loop
cs
sbb
div
aaa
lds
int
testl
fisttpl
aam
into
adcl
imul
mov
and
cwtl
mov
fcompl
adc
int3
pop
mov
inc
pop
lods
xchg
outsb
push
mov
fadds
out
and
out
adc
sarl
lret
adc
in
lods
inc
leave
lods
pusha
cmpl
xchg
lock
push
cltd
push
dec
jmp
scas
cmp
pusha
pop
mov
xchg
test
test
xchg
sbb
mov
stos
rcrb
xchg
repz
mov
push
mov
jle
lds
sbb
or
pavgw
sub
pop
scas
mov
dec
outsb
in
shr
push
pop
ljmp
push
insb
and
test
cmp
das
mov
outsl
lods
jmp
sub
push
sbb
mov
pusha
loopne
cwtl
or
std
xlat
jle
cmpsl
fucompp
inc
jecxz
sub
inc
sbb
xchg
mov
out
mov
inc
ljmp
in
dec
lods
push
jl
mov
lods
mov
adc
lahf
mov
insl
jg
test
nop
insl
xor
cmc
fstps
cwtl
mov
insb
dec
test
ds
leave
mov
js
sub
inc
xor
addr16
mov
push
leave
sub
leave
xchg
sbb
xor
dec
out
add
inc
cwtl
sbb
jno
movsb
enter
cmpsl
adc
mov
addr16
loopne
dec
pop
jae
or
mov
sarb
out
mov
push
pusha
pop
stos
mov
pushf
test
push
pop
cmp
jle
adc
mov
sti
jmp
shll
bound
add
sbb
pusha
and
cmp
stc
mov
in
stos
nop
mov
push
int
or
adc
xchg
pop
adc
push
mov
mov
hlt
add
aaa
cmp
js
jmp
in
mov
stos
insb
jns
stos
push
loopne
test
add
mov
mov
mov
rorb
out
pop
cld
push
push
inc
cmp
xchg
es
outsb
adc
into
rcrl
lods
popa
mov
test
push
lea
std
dec
adc
call
scas
mov
dec
stc
ficoml
repz
jp
test
outsb
lods
aas
imul
aas
test
inc
pop
adc
dec
insl
sbb
jb
push
lret
sti
mov
cmpsl
mov
sbb
jg
in
pop
idivl
in
in
cli
aam
ds
popf
inc
sub
popf
pop
push
sub
push
lret
js
xor
pop
cmpsb
iret
outsb
push
cmpsb
push
sub
imul
leave
cmp
clc
std
pop
add
inc
imul
test
ss
cmp
insl
cmp
std
jb
je
xchg
loopne
or
adc
roll
and
jns
pusha
shlb
daa
push
push
mov
in
push
loope
imul
out
aaa
outsl
dec
test
cli
fldenv
pop
loopne
xor
inc
popf
cmpl
xor
test
mov
jne
mov
cmpsb
stc
aam
mov
cmp
cmpsb
xlat
vxorpd
out
mov
push
cs
inc
out
sbb
mov
or
sbb
and
dec
rcr
popa
mov
stc
rol
pop
pop
cmp
lcall
cmp
stos
clc
mov
orb
fcompl
outsb
das
xchg
int
lahf
ljmp
in
popa
pop
cli
sub
int
arpl
out
cmp
dec
mov
mov
and
lods
movsb
out
les
aad
sbb
or
imul
cmp
daa
dec
jae
clc
movsl
push
push
jecxz
sbb
lahf
mov
xlat
loop
imul
aas
cmc
xlat
lds
mov
xchg
jg
dec
inc
insl
cmp
repnz
imul
push
fistpll
inc
rol
gs
in
icebp
scas
in
inc
mov
mov
lea
aam
mov
pop
mov
mov
jecxz
movb
pop
xor
lods
mov
xchg
push
popa
cli
mov
test
push
sti
pushf
and
into
daa
xlat
or
fdivrs
cmp
mov
adc
or
call
mov
ja
movsb
bound
in
and
jae
mov
movsb
test
stc
lock
adc
push
adc
jecxz
mov
pop
dec
subl
sub
mov
int3
push
insl
cli
mov
ret
into
rcrb
mov
sbb
lds
in
lods
pop
cmp
adc
mov
xchg
les
and
mov
outsl
or
cmp
jno
scas
movsb
push
ret
ret
pop
stos
jge
pusha
jg
insb
push
clc
sub
sub
dec
xor
sbb
enter
arpl
xor
or
inc
ljmp
fiaddl
dec
jmp
xchg
push
fidivl
mov
mov
dec
fwait
push
int
inc
sub
pop
push
outsb
fimull
and
icebp
loopne
ds
sub
and
adc
das
sahf
and
insl
in
fadds
mov
into
test
mov
fsubrl
cmp
pop
ret
aam
repnz
jmp
dec
cli
mov
inc
lods
push
divl
cld
xor
insb
push
pop
jns
mov
jb
inc
add
popf
stos
cmp
cmp
jge
in
dec
xlat
loope
cltd
fisttpll
ds
push
lods
push
pop
mov
mov
cmpsb
stos
cmp
in
inc
jns
add
adc
and
xchg
in
loopne
xchg
lahf
xchg
inc
imul
into
repnz
jb
mov
xor
sbb
sbb
out
hlt
xlat
out
or
pop
dec
std
out
mov
out
fldcw
fnsave
fimull
inc
or
cld
xchg
push
pop
fsubrl
pop
xchg
fsubrs
fimuls
pop
js
and
mov
add
mov
push
pop
and
add
lahf
loope
test
loope
push
jp
addr16
fisubl
adc
repz
xchg
notl
mov
and
std
xor
pop
stos
out
lds
hlt
sti
or
jmp
out
lahf
pop
mov
cmc
or
test
inc
push
mov
addb
aam
js
pusha
sbb
in
jg
or
push
jbe
pop
sahf
int3
movsb
inc
cwtl
jns
add
dec
bnd
icebp
xchg
hlt
rolb
test
std
stos
push
and
loop
sarb
divb
cmpsl
outsl
xchg
mov
push
fdiv
mov
pop
adc
mov
or
push
add
inc
aam
insb
fisttpl
cmp
inc
icebp
push
xor
cwtl
pop
jnp
in
ficoml
xchg
add
orb
sub
add
loopne
sub
rcll
jb
ret
mov
pop
inc
mov
mov
out
pop
mov
js
mov
mov
or
mov
cmp
in
push
daa
mov
scas
idivb
add
jecxz
mov
adc
push
mov
movsb
out
inc
insl
aas
or
std
loopne
ljmp
push
or
das
cmp
inc
daa
pop
imul
call
sahf
stos
fidivs
push
imulb
cmp
add
push
outsb
and
clc
es
ja
inc
addb
cwtl
sbb
mov
outsl
hlt
mov
scas
lahf
out
xchg
stc
fidivs
std
sti
mov
iret
inc
push
outsb
lods
adc
xchg
cltd
movsb
dec
hlt
dec
add
jge
sbb
jns
dec
inc
test
jmp
xchg
sub
xchg
xchg
sub
push
xchg
jle
jp
faddl
clc
xchg
cltd
sub
jg
cwtl
aad
mov
addb
dec
cld
sbb
std
push
es
cmp
inc
push
xlat
adc
jge
stc
cs
push
int
enter
int
and
mov
rcll
mov
in
inc
mov
jecxz
jg
sub
in
fisubrs
movsl
mov
adc
pop
addr16
shr
movsl
adc
pushf
lcall
stc
leave
daa
push
pop
inc
push
icebp
push
imul
mull
test
push
jne
cli
pop
push
lods
xor
movsl
xchg
pop
aas
dec
sub
mov
lds
test
xor
or
inc
mov
sarb
popf
outsb
add
in
lret
cmpsb
sub
call
mov
outsl
cmpsb
hlt
orl
adc
dec
sti
into
cwtl
pop
inc
scas
test
dec
out
rolb
mov
scas
into
sub
mov
xor
mov
int
push
hlt
push
aam
mov
repnz
add
push
ret
mov
pop
or
sbb
aaa
mov
mov
sbb
loopne
adc
mov
iret
xchg
shrl
lods
mov
push
dec
lcall
shrl
into
xchg
push
stc
mov
roll
stos
add
mov
xor
jg
ficoml
pop
inc
mov
orb
cld
mov
add
imul
gs
dec
test
or
adc
and
mov
xchg
pusha
push
xor
sub
sub
pop
dec
cmpl
cmc
mov
in
mov
lret
push
sbb
and
push
xor
adc
jae
addr16
adc
cmc
dec
xchg
jnp
cmp
cmp
lock
dec
and
xor
adc
jo
outsl
leave
cmpb
popa
js
add
fwait
pop
pop
pop
push
add
arpl
pop
add
inc
adc
jecxz
popa
pop
inc
movsb
ffree
mov
movsl
dec
out
loopne
int3
jo
xor
mov
stc
pusha
cmp
int
jno
sub
rcl
push
xchg
insl
xor
mov
in
inc
mov
mov
in
xchg
fisubs
sub
aaa
jne
push
adc
jo
sub
stos
lods
adc
xchg
js
movsb
js
adc
push
pop
mov
pop
cmp
fldt
in
mov
sar
and
jl
adc
push
inc
sub
or
xor
add
mov
sbb
push
pop
pushf
push
enter
pop
xchg
popf
dec
es
hlt
mov
imul
enter
adc
sub
adc
cmpsb
jbe
shrb
cltd
xor
sub
and
imul
xor
les
shlb
insb
add
dec
fbstp
loop
push
sub
fistps
mov
ss
or
jo
sbb
dec
xor
test
std
sbb
xor
xor
push
popf
cmp
add
repz
dec
xor
push
mov
out
jae
lods
cmp
mov
xchg
lcall
loope
jns
int3
cmp
mov
mov
ds
jo
std
stc
mov
stos
dec
sub
inc
js
decb
sbb
sub
in
fxtract
push
bound
xchg
push
fistpll
sbb
add
les
pop
push
xlat
dec
push
add
test
pop
outsb
lods
rorl
stos
int
xor
or
fnsave
into
sbb
jo
fbstp
lods
test
jge
jge
sbb
test
mov
popa
push
cmpb
add
and
dec
push
add
mov
push
jbe
test
cmp
mov
fistpll
cmpsb
xchg
xor
call
pusha
adc
dec
shll
mov
cs
dec
mov
and
cmpsb
pop
aad
int
push
mov
push
jp
into
push
adcb
adc
imul
movsl
fwait
inc
sbb
insl
or
jo
out
sbb
adc
jge
fmulp
ss
push
or
std
jge
inc
lret
aam
dec
mov
outsb
sti
mov
insb
cmp
sbb
daa
add
sbb
cwtl
mov
insb
cmp
pop
stos
out
clc
gs
cmp
js
cmp
arpl
jnp
data16
popf
inc
sbb
mov
rcll
stc
aam
lods
mov
call
or
xchg
or
and
arpl
mov
faddl
xor
fldl2t
lahf
sub
fsubl
mov
jecxz
andb
out
in
ret
pop
mov
gs
shr
pop
mov
adc
push
jmp
mov
xor
or
sbb
and
mov
adc
rcll
mov
aas
or
inc
mov
outsl
sbb
je
dec
lret
sahf
xor
inc
pop
mov
sub
je
push
cmp
push
push
test
fcompl
add
aaa
lret
sbb
xor
dec
hlt
fs
scas
pop
adc
xchg
sub
mov
xor
xchg
aas
lods
and
cmp
sub
adc
xor
dec
pop
mov
rcll
mov
adc
or
cmp
je
hlt
lods
adc
pop
xchg
mov
xchg
adc
fisttpll
and
ret
test
nop
je
sahf
divl
out
mov
push
jle
inc
jge
push
inc
mov
jge
insb
call
pop
mov
sbb
dec
mov
movsl
inc
lods
ficoml
xchg
mov
push
adc
das
sbb
sub
xor
fnstenv
and
movsl
adc
jne
loop
ret
loope
stos
clc
cmc
push
mov
and
adc
add
push
xor
aam
mov
fimuls
cld
xchg
xchg
mov
push
cmp
lret
repz
lret
in
sbb
sbb
push
outsl
sbb
push
xchg
dec
icebp
frstor
inc
mov
movsb
hlt
dec
xor
sbb
shl
xor
dec
sarb
push
push
ret
lock
dec
push
dec
pusha
pop
std
sbb
lods
scas
mov
push
adc
notb
push
movsb
dec
out
mov
or
jl
add
dec
jg
div
sub
xchg
mov
arpl
sbb
adc
cmp
out
leave
cmp
mov
jnp
insl
sbb
inc
ja
xchg
int3
in
aad
add
mov
mov
gs
inc
stos
insl
jecxz
dec
mov
push
mov
sub
jns
dec
push
mov
jbe
stos
repnz
push
loopne
gs
imul
mov
out
push
testb
add
jmp
dec
mov
sub
mov
in
xor
mov
adc
ret
dec
mov
lret
pop
lods
dec
test
dec
ret
lret
inc
cwtl
js
inc
mov
sub
push
imul
xchg
and
sahf
cmp
mov
scas
or
je
or
inc
lods
and
cmc
mov
push
mov
aas
inc
aas
les
pop
and
scas
mov
shlb
je
sbb
stos
sub
inc
in
lock
add
dec
ss
adcb
jge
out
int
repnz
inc
inc
fbld
mov
das
jbe
mov
cmpsb
mov
stos
push
scas
fdivrs
xchg
hlt
pop
and
shrl
rorl
jnp
push
mov
or
add
adcl
xchg
xor
mov
xor
add
aad
sub
jne
mov
pop
add
and
ds
jmp
mov
lods
dec
into
in
es
loope
ror
and
mov
dec
cmp
test
out
adc
inc
adc
mov
mov
out
add
out
stos
scas
mov
movb
lcall
add
adc
mov
xor
xchg
cld
rcl
dec
adc
jne
mov
push
push
mov
pusha
loop
dec
or
jno
pop
cld
jle
mov
mov
shrb
mov
adc
dec
imul
and
mov
aad
ret
inc
ljmp
mov
xchg
enter
cmp
jbe
ret
inc
out
jnp
loope
pop
fsubr
add
leave
popf
xor
push
sbb
xor
inc
mov
rcrb
jg
push
nop
sti
xchg
mov
mov
fisttpll
xchg
mov
sbb
xor
mov
sbb
add
out
loop
mov
test
bound
sti
xchg
sbb
cmp
xor
push
int3
jge
inc
stc
add
movsl
xchg
lret
xor
cltd
jl
rcr
cld
sub
mov
incb
rorb
imul
push
in
lods
scas
movsb
mov
test
subb
nop
and
pop
popf
or
repnz
test
push
inc
lcall
pop
lods
or
sbb
nop
jmp
jo
fsts
mov
dec
add
push
xchg
scas
imul
inc
jne
xor
mov
xor
out
inc
scas
div
push
or
dec
std
mov
loope
shll
scas
loopne
stc
repz
jg
lret
or
ficoml
lret
daa
aas
pop
movsb
add
or
pop
dec
outsl
pop
fmuls
movsb
aas
sbb
mov
lock
rorl
sub
dec
mov
adcb
insl
jbe
jmp
sahf
in
xchg
cwtl
leave
sbb
xor
test
ljmp
loopne
mov
iret
nop
imul
xor
jne
mov
mov
pop
adc
insl
jno
cmpb
lcall
adc
cmpsl
test
in
in
test
nop
cltd
xor
aaa
adc
mov
push
mov
or
movsb
fimuls
shlb
jbe
in
int3
pop
push
sbb
pop
jmp
stc
push
mov
xor
push
jnp
jecxz
cmpsb
xchg
cmc
repnz
incl
xor
aas
sub
pop
mov
loope
mov
and
ret
dec
mov
add
pushf
or
fld
cld
adcb
test
cli
shlb
fwait
and
jmp
sbb
inc
dec
xchg
push
xlat
add
cmp
in
mov
add
pop
cmc
jle
pop
adc
pop
fdivl
test
xor
fmull
ss
mov
testb
mov
repz
inc
push
pushf
push
jp
cld
pop
fld
repz
jle
sbb
push
sbb
lahf
adc
xchg
jmp
cmp
movsl
lahf
cltd
inc
xlat
xchg
or
dec
xor
daa
mov
daa
push
jmp
js
inc
jl
or
cmp
jmp
mov
out
popa
mov
mov
adc
scas
mov
mov
push
xor
popf
lret
mov
in
jbe
sub
out
lahf
xor
adc
incl
dec
cmp
nop
and
out
out
pop
jecxz
sub
test
mov
shll
or
sbb
add
mov
adc
push
outsb
sti
lods
cmp
imull
into
into
push
inc
movaps
xchg
sbb
mov
add
fwait
jno
test
jmp
cmp
stc
sub
inc
cmp
cmp
inc
jbe
xor
pop
pop
decb
adc
movsl
add
xchg
jbe
ret
lods
mov
stc
cli
and
adc
cltd
rclb
cmp
or
aam
hlt
lock
xor
fcmovbe
cltd
lock
mov
mov
push
or
ret
jecxz
sbbb
arpl
enter
push
jb
js
divl
notb
outsb
mov
arpl
sub
inc
dec
mov
enter
lods
sub
aaa
fdivp
ss
push
lds
fwait
leave
push
or
adc
stc
rcrb
pusha
and
dec
mov
ret
sbb
sahf
sbb
pop
sbb
loop
popf
scas
in
jle
cmc
jmp
sub
or
sbb
ss
sub
in
dec
mov
add
sete
out
sub
add
fidivrl
mov
loopne
pop
xchg
push
mov
xor
add
mov
js
outsb
mov
outsb
test
rcrb
lea
rorl
cmp
ret
lds
mov
fidivl
add
mov
pop
sti
mov
int3
adc
dec
adc
xchg
movsb
rol
mov
or
popl
leave
jno
push
test
lret
add
mov
and
subb
outsl
outsb
popf
jns
mov
or
imul
mov
fs
xor
jbe
out
ja
mov
or
xchg
outsb
xor
xchg
cmp
mov
xor
in
int3
or
cmp
jecxz
repnz
enter
jae
rcll
or
xchg
js
inc
in
or
and
neg
sub
mov
movl
lods
in
rolb
test
jo
aam
lcall
cli
cmpsl
mov
stos
jb
xor
or
mov
cmp
jae
shrb
mov
adc
xchg
scas
out
push
add
sbb
sub
mov
lock
int
fildll
pop
gs
test
enter
test
mov
and
xor
cltd
push
arpl
and
mov
scas
shl
push
es
ja
xchg
dec
adc
jns
xor
jne
xor
aas
sbb
jns
mov
push
ja
push
mov
addb
cmpsb
div
push
mov
fldl
pop
inc
xchg
lret
cmp
mov
sub
lea
fisubrs
movsl
mov
es
add
aad
pusha
jl
hlt
enter
dec
daa
inc
xor
outsl
fmuls
push
jb
je
or
mov
popf
and
xchg
push
aad
ss
out
andl
mov
ljmp
orb
popa
ret
cmpb
movsl
jnp
jmp
cmpb
lret
xchg
lret
push
stos
int3
addr16
movsl
pop
test
xor
mov
jb
sbb
add
jle
jp
xchg
ljmp
xor
push
fwait
inc
sbb
arpl
cmc
hlt
out
jle
pop
aas
and
lds
lods
mov
enter
mov
mov
inc
adc
mov
mov
mov
popf
out
dec
fstl
and
cld
fwait
sar
cli
xor
outsb
inc
push
int
or
aaa
pushf
add
movsl
rcl
jae
clc
adc
lahf
cmp
cmp
call
dec
cmp
loopne
sbb
xor
push
pop
sbb
fwait
xchg
lods
push
dec
push
jbe
fbstp
shll
push
pop
ret
ss
std
dec
sbb
movsl
jae
inc
repz
in
xchg
push
lcall
popf
in
push
inc
mov
xor
hlt
aad
xchg
inc
faddl
mov
pop
shll
test
imul
sti
loop
mov
cmpsl
into
push
sti
out
cmp
stc
cmp
cmpsl
dec
cmc
jecxz
dec
nop
push
adc
sbb
jne
lret
outsb
dec
add
jns
and
xor
call
mov
mov
xchg
adc
mov
insb
push
cwtl
ret
push
mov
outsb
nop
push
sbb
adc
or
mov
fcomip
insb
pop
hlt
std
adc
lds
jmp
push
test
xchg
repz
jnp
orl
inc
and
mov
or
les
clc
stos
iret
jae
push
push
pop
sub
pop
cmp
xchg
scas
xchg
push
push
mov
in
jl
xchg
inc
or
jbe
pusha
fsubl
jo
jo
pop
mov
fwait
jns
adc
test
jp
sbb
adc
cmp
movsb
sbb
pop
xchg
outsb
cmp
test
xchg
sti
les
mov
push
cld
cmpb
les
jecxz,pn
sti
shll
inc
xor
adc
jbe
lods
sbb
pop
shll
jp
push
jne
sub
dec
push
xchg
sbb
cltd
jmp
cwtl
jecxz
icebp
es
stos
or
adc
mov
adc
cmp
mov
aam
push
in
dec
repnz
repnz
jge
sbb
sub
dec
adc
push
mov
out
mov
or
cmp
dec
and
outsb
mov
inc
sahf
mov
pop
sub
and
push
xor
cmp
aas
daa
sbbl
xchg
inc
fstpl
dec
adc
xor
mov
not
cltd
push
sub
push
sahf
sbb
cmc
fdivs
pop
cmpsb
mov
inc
sbb
or
das
jb
cs
sbb
add
sbb
push
pop
repz
cmp
xchg
mov
pop
adc
shr
add
xchg
xchg
clc
adc
adc
gs
popa
jmp
aam
and
lods
aam
and
cli
js
cwtl
sbb
aam
ficomps
pop
adc
add
jecxz
push
jno
mov
push
sbb
cmp
sub
push
dec
sub
data16
mov
lret
push
dec
push
lods
loope
dec
idivl
je
sets
dec
fsubs
adc
mov
stos
adc
mov
mov
jecxz
pop
movsb
push
loop
cwtl
js
jp
add
out
xchg
arpl
out
call
outsb
mov
jmp
add
fs
or
or
shr
inc
call
xchg
cmp
xchg
loopne
mov
sub
fs
les
scas
mov
in
shrb
xor
test
inc
push
mov
std
rcll
in
mov
cmp
pop
gs
imul
mov
out
fsub
fs
inc
mov
xor
shlb
mov
cmp
cmp
loopne
xor
pop
clc
aas
jno
xor
push
leave
mov
fwait
testl
push
inc
sbb
aam
or
xor
or
jl
sbb
lock
pop
in
sub
sbb
subb
add
cltd
repz
das
and
call
mov
lods
xor
mov
daa
xchg
jno
cli
mov
into
pop
movsb
xchg
jbe
push
and
mov
mov
cmp
jnp
jae
pop
xor
dec
rcrb
or
enter
sbb
lret
push
fsubs
xchg
jns
xor
xchg
loop
and
mov
dec
push
sbb
cmpsb
fbstp
clc
and
and
jns
rolb
mov
fidivrl
xchg
xchg
fcomp
pop
data16
in
push
loop
stos
aas
push
push
xchg
addr16
dec
adc
jo
pop
dec
push
std
jbe
pop
dec
fnstcw
insb
xor
call
jl
mov
pushf
xor
mov
push
adc
iret
mov
movsb
push
insl
pop
aam
mov
loopne
into
mov
add
mov
and
jl
mov
std
adc
sub
fdivrl
mov
call
adc
sbb
call
cmp
xchg
lock
xchg
sahf
ss
stos
dec
push
sbb
mov
movl
dec
pushf
lods
fadds
pop
xchg
aam
lcall
add
mov
pop
insl
mov
rcr
or
test
pop
jge
call
imul
and
cmp
aas
dec
cmp
cmp
pop
lcall
cmc
sbb
cltd
mov
add
incl
add
or
scas
test
movsl
dec
xchg
insl
sbb
pop
push
loopne
ret
les
jbe
es
xchg
insb
ljmp
loop
cmp
push
inc
in
dec
xchg
rcll
aas
cld
bound
repz
lock
js
dec
inc
lods
sarl
pop
cmp
ljmp
aas
add
out
scas
fists
pop
push
mov
inc
into
mov
lods
imul
mov
jg
cmpsl
jge
ret
add
push
shrl
or
jmp
adc
into
fldl
pop
add
pop
xor
pushf
scas
aaa
pop
and
push
jbe
and
and
mov
pop
push
jo
test
in
shl
stos
cmpsl
push
out
adc
sbb
std
pop
pop
inc
push
cmp
push
jecxz
add
das
test
dec
inc
rolb
mov
xchg
mov
sbb
xchg
and
push
mov
outsl
mov
xor
dec
cmp
lock
cmp
mov
adc
js
mov
push
pop
dec
test
fldenv
ljmp
or
inc
pop
in
cli
inc
inc
xchg
dec
xor
in
mov
sub
cld
ljmp
fs
sub
xchg
lea
adc
mov
mov
push
mov
fsubs
mov
les
pop
loope
cmp
int3
pop
or
fsubrs
pop
and
mov
repz
pop
mov
daa
das
adc
mov
sbb
cmp
lret
xor
sbb
mov
mov
imul
das
push
aaa
ret
repz
dec
ss
add
fcmovne
hlt
cmovns
imul
je
push
dec
and
xor
or
scas
sub
mov
or
fnstcw
nop
xchg
push
xor
mov
pop
xor
and
xorl
xchg
cmp
mov
rcrl
adc
fwait
dec
gs
jae
addb
ljmp
dec
xchg
mov
inc
add
test
mov
or
loop
cltd
cmp
xchg
ss
jl
sahf
je
and
leave
int
pop
fists
inc
data16
push
andb
stos
repz
jp
sub
jl
add
aad
hlt
dec
push
hlt
xor
lods
mov
mov
shll
sbb
sub
push
lods
es
inc
pop
adc
mov
sbb
or
insb
adcb
call
push
mov
dec
aas
js
dec
call
bnd
cmc
sub
add
push
or
cmc
repz
das
subb
addl
sti
or
loop
pop
sbb
pop
push
inc
xchg
jne
retw
int3
and
jge
mov
adc
jne
lret
aas
rorl
test
shll
out
fs
jbe
or
loope
pop
daa
pop
mov
add
sub
jo
adc
sbb
pop
sub
jp
or
es
out
fidivrs
into
test
loop
mov
sbb
xchg
push
or
jmp
fstpl
xchg
push
out
mov
push
fucom
call
std
fs
or
outsb
xorl
das
adc
mov
call
mulb
sbb
mov
dec
notl
insb
jns
and
out
es
push
mov
lret
jle
lret
sbb
adc
push
cmp
nop
mov
mov
jae
push
loop
outsb
mov
cltd
dec
dec
daa
push
loop
inc
repz
scas
push
icebp
dec
sahf
scas
or
or
dec
ljmp
or
stos
sbb
xor
pop
add
call
or
cs
mov
repnz
and
adc
pop
jnp
lret
add
mov
lret
orb
lods
mov
sbb
jmp
dec
mov
and
xor
in
cmc
push
jl
idivl
aas
adc
and
jno
mov
test
fcomp
xchg
cmpsb
out
cli
fisubrs
add
imul
dec
rcrb
sahf
ss
decl
sbb
inc
pusha
mov
xchg
pushf
jp
hlt
jge
jno
jbe
subb
fldl
addb
fs
enter
mov
inc
pop
mov
xchg
adc
mov
iret
sub
pop
lds
jae
test
aam
inc
push
pop
shll
push
add
mov
pop
push
iret
call
lcall
clc
jg
inc
movsl
adc
pop
adc
xchg
outsl
mov
or
movsb
mov
inc
hlt
popf
mov
fildl
iret
jno
or
insl
cld
outsl
xchg
leave
sbb
movsb
divb
push
and
push
and
mov
fucom
pop
jecxz
cmp
sub
mov
dec
push
mov
lret
les
mov
pop
mov
cmp
xchg
dec
cmp
ss
incb
add
adc
jnp
add
pop
inc
sbb
sbb
ret
and
dec
clc
adc
adc
into
inc
add
pusha
sahf
jns
jle
aaa
xor
cmp
lahf
cltd
popa
insb
and
lret
mov
cmpsl
xor
js
jge
enter
movsb
or
std
push
fcomps
and
jno
add
sbb
pushf
push
into
sbb
xchg
pop
or
cmp
pop
xor
and
dec
sub
movsb
out
sub
mov
out
or
nop
pop
xchg
enter
and
loopne
cs
in
cmc
xchg
pop
dec
daa
fsts
xchg
daa
std
fwait
std
roll
inc
sbb
sbbl
xlat
mov
inc
call
stc
pop
sbb
mov
push
mov
sbb
jp
sbb
ljmp
jae
cs
popf
pop
add
cs
dec
mov
sbb
nop
and
xchg
or
jbe
mov
mov
insb
movsl
jmp
dec
sbb
in
outsl
add
and
jl
inc
or
pop
push
add
push
pusha
dec
sbb
lods
hlt
fadds
jbe
xlat
in
gs
mov
ret
ljmp
out
ret
xchg
add
and
outsl
sub
add
inc
inc
or
and
xchg
out
addr16
sub
addl
addr16
push
push
jl
sub
out
aam
mov
hlt
dec
jbe
mov
insl
cltd
cltd
mov
inc
dec
add
jecxz
loop
out
loop
and
popf
mov
sub
arpl
mov
aaa
dec
into
shrl
push
mov
jp
pop
jno
lahf
push
xor
out
call
lock
mov
jecxz
jecxz
sbb
shl
inc
lahf
cmp
xchg
movsb
ret
sub
mov
ret
imul
jns
jae
insl
gs
pop
cmp
call
mov
add
cmp
loope
cmpsl
negb
jbe
insl
jl
rol
cmpsl
dec
push
addl
cmpsl
nop
sbb
or
inc
jmp
jns
add
jae
adc
pop
or
idivl
movsb
adc
push
aas
iret
std
sbb
lret
fists
js
pop
cltd
pop
jbe
xor
xchg
push
xor
enter
cmp
inc
dec
or
jge
dec
add
jmp
das
aas
les
xor
pop
or
iret
stc
mov
fstps
sbb
xchg
jecxz
lahf
push
or
cmovno
imul
dec
lock
add
repz
incb
or
sbb
in
fildll
aad
mov
fwait
add
std
movsl
jp
mov
hlt
xor
and
lcall
cmp
jns
pop
test
and
pushf
daa
adc
fcomp
loope
popa
test
aaa
push
push
lods
mov
or
shll
scas
lods
pushf
mov
xchg
in
pop
mov
cmp
stos
negb
xchg
nop
arpl
xchg
sarb
cmp
das
push
push
push
popf
mov
test
into
pop
pcmpeqw
mov
jne
jmp
cmp
sti
push
xor
in
push
dec
sub
sarb
movb
imul
adc
std
fnstcw
sbb
scas
mov
js
test
fstpl
fnstsw
cmp
xor
daa
lods
scas
inc
xor
fmull
shrl
fildll
outsb
cmp
jae
or
mov
movsb
adc
lea
arpl
jp
roll
rolb
pop
sub
cmp
fdivs
lock
loop
or
pushf
pop
sbb
test
imul
loopne
mov
cmp
pop
std
mov
sbbb
adcl
xlat
pop
loopne
lea
js
xor
insb
cltd
data16
add
scas
or
push
xor
lahf
frstor
cwtl
cld
mov
push
mov
mov
adc
mov
push
inc
rcll
insl
inc
push
fwait
jmp
fldcw
rcll
cmpb
mov
mov
test
sub
int3
aam
cli
lock
inc
mov
hlt
xor
in
mov
aas
mov
mov
pop
pop
lahf
cmpsb
mov
imul
imul
in
ret
cmpsl
add
cmc
lds
jae
dec
pusha
adc
lods
addr16
loopne
divb
iret
sub
ds
mov
mov
fcomps
pop
movl
mov
outsl
cmp
int3
pop
push
cmp
sub
jp
mov
popa
pop
jmp
js
imul
cmpsl
loopne
cs
aad
sub
jecxz
lock
cmp
bound
aaa
xor
adc
pop
int
xor
bound
f2xm1
je
std
xchg
or
or
andl
xlat
cmp
adc
out
jbe
xor
dec
subb
ss
lea
js
jnp
dec
lret
fdivr
and
add
repz
push
pop
push
add
push
jge
enter
outsb
inc
fsubl
icebp
mov
pop
das
inc
xchg
repnz
jb
push
iret
sub
arpl
mov
and
sub
aad
std
scas
dec
enter
xchg
int3
inc
jge
or
xchg
sti
insb
xor
popf
sub
mov
pushl
xor
dec
mov
xchg
flds
jnp
jbe
in
sbb
pop
sbb
scas
out
flds
cmp
in
sub
les
testb
test
and
add
push
or
xor
into
into
in
test
add
xor
das
xchg
fstp
arpl
lret
cmp
stos
sbbl
sbb
jl
ljmp
mov
xchg
jae
push
pushf
mov
lock
movsl
add
cltd
and
xor
loope
gs
loop
aas
sti
ret
imul
call
jo
int3
or
arpl
fidivrs
mov
loop
daa
dec
mov
dec
mov
xchg
adc
pop
mov
jecxz
adc
adc
mull
ret
mov
adc
sbb
push
mov
arpl
mov
jge
mov
cld
adc
pop
and
daa
jecxz
xor
ds
dec
or
test
lods
and
or
mov
adc
pop
add
iret
xchg
mov
mov
cmp
push
cs
mov
pop
test
clc
dec
movsl
sbb
stc
pop
call
adcb
sub
mov
daa
fisubrs
push
and
std
pop
scas
cmp
push
mov
lret
add
out
jb
add
add
mov
push
loopne
add
mov
lahf
sti
xchg
andl
fwait
lea
sbb
andl
in
aam
push
sahf
into
dec
fstpl
xor
das
std
jge
inc
cwtl
mov
lds
xchg
leave
mov
mov
push
dec
pop
adc
imul
cs
daa
outsl
push
daa
movsb
lock
dec
outsb
pushf
cmpsl
ficoml
mov
arpl
lcall
dec
out
repnz
sbb
sti
imul
sub
jmp
push
dec
mov
aam
mov
xchg
pop
pop
inc
popf
loopne
cmp
adc
mov
push
call
mov
scas
out
jecxz
imul
jne
jmp
je
lret
clc
in
mov
pop
xor
sub
and
iret
xchg
push
xor
repnz
fldenv
xchg
mov
xor
adc
mov
sub
sub
mov
pop
enter
mov
data16
out
bound
inc
test
outsb
add
mov
cs
imul
fistpll
mov
mov
outsl
icebp
out
fs
mov
shlb
stc
aad
add
clc
fsubrs
dec
mov
out
push
dec
adc
jg
int3
aad
call
xor
mov
stos
fs
call
dec
cmp
fwait
popa
xor
mov
stos
stc
xor
dec
push
in
outsb
cmp
sahf
or
into
icebp
jo
pop
mov
push
pushl
mov
aad
jnp
add
add
or
ret
lret
incl
mov
mov
jno
out
xchg
adc
mov
jb
mov
ret
mov
sbb
cs
iret
insl
and
inc
inc
imul
dec
popf
fstps
xchg
shlb
jecxz
out
add
sbb
and
pop
mov
or
negb
cmpsb
adc
or
movsb
mov
jns
push
mov
lret
push
jmp
stc
shrb
aas
fisubrl
dec
dec
sbb
pop
sub
out
cltd
mov
pop
out
popa
scas
movsl
cmp
ljmp
dec
js
inc
jp
dec
fcmovne
inc
in
out
imul
pop
test
rorl
pop
mov
and
cmpsb
sbb
xchg
mov
mov
sahf
or
icebp
jb
pop
call
out
stos
icebp
and
psraw
inc
test
mov
lea
pop
les
test
addr16
xchg
movsb
sarl
cmp
jno
dec
jl
add
arpl
fs
test
out
mov
loop
and
lret
or
cmpb
sar
pop
sahf
bound
or
fsubrl
rorb
stos
mov
and
imul
mov
pop
fwait
fs
add
addr16
pusha
add
add
adc
inc
lock
xor
cmpsl
and
je
dec
push
push
cwtl
xchg
ja
test
mov
scas
loop
frstor
outsl
sub
fimull
mov
fistl
pop
and
add
loop
add
jp
inc
add
or
ss
ljmp
xchg
fwait
cmpsl
mov
dec
cld
shl
adc
xor
fcoms
xchg
mov
push
sub
xchg
aas
stc
loopne
sub
cmpsb
jo
aad
inc
xchg
test
inc
mov
add
fs
loop
xor
in
test
test
scas
mov
in
das
std
sub
add
stos
cmpsb
adc
sub
inc
outsb
adc
movb
xchg
in
push
setge
mov
out
add
sahf
xchg
cmp
cltd
into
pop
ret
or
aad
sar
aaa
lret
xchg
xor
stos
xlat
add
push
mov
push
cli
mov
mov
mov
scas
xor
mov
sub
aam
cmp
mov
pusha
loopne
add
rclb
mov
sbb
add
push
sub
idivb
jne
or
aas
mov
and
xchg
dec
add
xchg
outsb
jmp
arpl
and
xchg
cwtl
out
out
aaa
outsl
mov
or
and
mov
jecxz
jmp
jmp
es
dec
pop
jb
push
outsl
cmp
ret
push
and
pushl
inc
iret
mov
and
pop
cmp
xchg
add
mov
insb
dec
nop
pop
inc
cmp
and
or
jmp
and
iret
mov
jnp
mov
dec
sub
mov
and
test
sti
dec
inc
sti
mov
leave
or
adc
repz
mov
or
mov
bound
rorl
js
loopne
pop
xchg
cmc
jbe
nop
mov
sbb
xchg
insl
js
xchg
sbb
fimuls
push
fcmove
dec
jge
into
out
iret
sub
fwait
sahf
or
jecxz
enter
mov
int3
xor
fbld
in
inc
mov
or
mov
dec
adc
mov
add
mov
push
fisubl
mov
inc
or
out
xchg
js
lea
xchg
negb
daa
insb
and
in
inc
xchg
or
xchg
test
fadd
aaa
sbb
lret
je
jge
xor
hlt
repz
mov
adc
mov
mov
mov
or
fcoml
dec
lods
ljmp
pop
rcrl
sbb
outsb
dec
mov
sub
xor
mov
frstor
mov
and
outsb
cmp
add
gs
sbb
push
xchg
es
leave
jp
mov
xchg
xchg
xchg
push
push
jno
mov
sbb
das
data16
adc
fimuls
lret
sub
int3
leave
gs
inc
lahf
dec
sub
adc
adc
push
and
mov
data16
lods
mov
pop
inc
sub
movsb
sub
repnz
sbb
sbb
mov
popf
cmp
pop
outsb
xchg
pop
pushf
sbb
push
sub
jge
push
inc
xchg
nop
pop
and
ret
int3
test
xchg
sub
cs
inc
cs
xor
and
sbb
add
insb
loop
fistps
in
pop
jb
repnz
cmpsl
push
xor
movsl
jge
rorb
mov
mov
sbb
insb
into
inc
fbstp
inc
enter
sbb
xor
jle
shrl
dec
xchg
dec
enter
sub
inc
push
jae
repnz
sbb
out
adc
cvtdq2ps
inc
jb
ljmp
fsubrl
imul
push
or
xor
push
xor
push
jne
fstl
mov
rcrb
leave
push
je
fidivrs
fldl
xchg
jb
mov
test
dec
test
sub
pop
movsl
rolb
jbe
gs
out
bound
sub
sarl
or
sahf
or
xor
push
inc
testl
imul
push
data16
insl
jb
sbb
fldt
xchg
mov
js
lods
fs
pop
aad
jnp
iret
cmpsb
mov
cltd
cmpl
jo
mov
ret
pop
push
iret
cmp
loop
jo
int
xor
inc
out
pop
fsubs
or
std
mov
or
not
push
and
pop
xchg
and
pop
pop
xchg
or
or
jge
add
lret
xor
pop
test
jae
ret
mov
aaa
cmp
sbb
jo
icebp
daa
cmpsl
in
sbb
ds
pop
pop
fists
push
and
dec
lret
push
test
orb
daa
loop
sar
loop
mov
mov
cmp
pop
andb
pop
sub
xchg
mov
movsb
adc
dec
sbb
ss
jle
bound
imul
popf
mov
aad
aas
push
mov
xchg
xchg
insl
mov
fsubr
stc
pop
mov
out
fisubrl
xlat
aam
mov
xor
lret
inc
jmp
dec
mov
icebp
lock
in
xor
arpl
iret
jl
cltd
xor
pushf
rolb
push
or
dec
movsl
xchg
jae
lods
jmp
cltd
xorb
ja
testb
or
xchg
into
aam
and
jb
lds
cld
out
movsb
clc
in
ret
mov
add
xor
push
sbb
aam
out
jns
jle
fwait
aad
inc
mov
les
xor
pop
pop
inc
into
out
outsl
pop
xchg
inc
xchg
iret
fldt
inc
sbb
test
cmp
iret
cmpsl
pop
jp
popa
nop
cs
rcll
addr16
xchg
mov
lret
and
cmc
test
fucomp
loopne
scas
pop
mov
mov
inc
lods
inc
loop
nop
sub
into
sar
pushf
in
cmp
xor
mov
xor
arpl
call
shrl
add
mov
dec
or
dec
mov
pop
dec
mov
push
jmp
movsb
jmp
mov
fisubrs
fwait
pop
test
daa
popa
cmp
push
jge
outsl
imul
pop
xlat
ret
lret
arpl
cld
jmp
out
aam
dec
mov
jle
fdiv
sbb
sbb
push
push
adc
sbbb
leave
sub
enter
xchg
push
mov
xchg
pop
jge
mov
mov
sub
movsl
loopne
data16
daa
and
out
test
popl
and
jnp
inc
pop
xor
js
add
push
push
fwait
inc
or
push
out
or
clc
rorl
pusha
and
mov
jns
jbe
pop
mov
leave
pop
push
add
jns
stc
cli
out
popa
sbb
pop
or
sti
loop
jo
ret
leave
sbb
aam
mov
les
das
xchg
iret
pop
cmc
iret
lock
or
shl
xchg
daa
ror
cmp
aaa
or
inc
faddp
push
mov
cld
nop
inc
mov
test
add
lcall
inc
pop
mov
xor
push
add
aam
inc
aas
mov
adc
pop
xchg
jmp
jbe
rolb
jg
cli
lret
bound
inc
fstps
push
xchg
scas
gs
mov
sub
xchg
ss
mov
add
repnz
adc
and
pop
mov
nop
push
or
jo
sub
or
mov
call
hlt
ret
push
and
lahf
ljmp
cmp
xor
les
cmp
loop
ss
cmp
push
iret
cmc
cmp
loop
mov
inc
jmp
sub
mov
push
xor
fcompl
shl
add
outsb
test
xor
xor
ret
push
inc
lock
sub
xchg
movsl
cmc
sub
sbb
nop
fdivrs
divb
cmp
divb
in
push
mov
xor
sub
adc
ljmp
mov
movsl
mov
das
fstpt
adc
ja
or
cmpsb
mov
js
les
imul
nop
jecxz
dec
jmp
xor
mov
cmp
and
mov
sub
jge
xor
jno
xchg
loop,pn
bound
call
popa
mov
clc
dec
lods
fwait
and
mov
dec
push
mov
and
in
rep
pop
jecxz
int3
adc
sar
pop
pop
push
pop
mov
push
scas
rorl
dec
icebp
sub
and
sub
ficompl
add
inc
mov
ja
lods
in
call
jb
xchg
pop
outsb
mov
dec
nop
int
ja
add
hlt
dec
push
push
fsubrs
into
push
xor
mov
pop
cltd
mov
push
daa
lret
rcr
jae
test
jg
popa
dec
cltd
fcomip
mov
movsb
add
add
jl
ret
call
add
fwait
push
sub
pop
inc
cs
sbb
movsl
cbtw
dec
sub
cmp
or
testl
aaa
adc
push
inc
into
ret
roll
dec
rcr
mov
in
call
push
lods
mov
jbe
std
movsb
test
sbb
sahf
cwtl
out
mov
in
dec
dec
pop
stos
add
rcrl
cmp
repnz
aaa
outsl
mov
sub
rcl
push
push
adc
xor
push
adc
cmc
jge
ds
pop
adc
push
negl
push
and
mov
shrb
add
ret
in
int3
inc
pop
jg
xchg
gs
dec
lahf
daa
icebp
push
inc
mov
ds
sub
jb
popf
pushf
sbb
push
mov
adc
cwtl
push
lock
xchg
dec
mov
push
leave
xchg
inc
pop
add
sbb
push
mov
mov
addl
add
add
push
push
mov
jbe
jbe
sbb
jmp
imul
ret
out
xlat
lcall
mov
and
push
arpl
loope
shr
roll
adc
mov
rolb
iret
pop
out
mov
call
iret
mov
and
hlt
mov
sub
or
lret
cmpsb
xchg
in
xchg
pop
add
jecxz
divb
sub
cmp
loopne
clc
nop
in
mov
mov
mov
jmp
movsb
inc
shrl
jb
ss
stos
clc
adc
mov
pop
les
cmp
es
sub
cmpsl
dec
adc
adc
loop
cmpsl
jbe
mov
sub
mov
testb
andl
add
mov
xor
cltd
dec
out
std
mov
adcl
cmc
hlt
je
dec
rcll
cltd
addr16
insl
push
xchg
jo
movsl
mov
jecxz
jo
pop
push
and
mov
mov
mov
cli
and
mov
mov
push
stos
xchg
rcrb
cltd
adc
dec
cmpl
jae
jbe
mov
pop
pop
call
xlat
repnz
dec
sub
mov
mov
test
inc
and
fdivs
and
or
aam
add
loope
arpl
jne
and
ret
scas
dec
xorb
andl
fildll
sub
push
xchg
in
xchg
repz
or
cmp
adc
mov
inc
lock
jae
movsl
mov
xchg
sbbl
jo,pt
pop
shr
into
loope
pushl
dec
stos
push
and
jae
cmpl
fsts
sarb
scas
push
sub
cli
mov
pop
shll
dec
lahf
mov
and
pop
out
or
mov
mov
inc
aas
outsb
push
xor
inc
mov
les
adc
mov
sti
int3
adc
idivl
dec
sbb
in
xor
popf
aam
out
sbb
sub
or
fildll
std
inc
dec
cmpsl
call
cmp
xchg
or
inc
push
sahf
ds
mov
or
or
inc
mov
jbe
push
cmp
xor
daa
sbb
add
mov
lcall
jns
inc
xchg
xchg
mov
insl
or
fildl
pop
in
imul
xor
lock
addl
mov
mov
push
insb
imul
add
jge
lcall
mov
ds
add
cmp
fdivrl
cli
jg
inc
add
mov
setns
xor
arpl
sub
test
enter
cmp
mov
xchg
xor
mov
pop
xchg
fisubl
push
lret
dec
adc
xchg
inc
push
and
mov
mov
scas
sub
sub
mov
xchg
jp
jae
push
adc
in
sti
lods
mov
cmpsl
ficoms
xchg
gs
and
cmc
sub
sbb
jmp
bound
test
push
mov
dec
ss
mov
xor
cwtl
repnz
fsubp
rclb
push
in
sbb
adc
std
sbb
xchg
push
mov
fidivrl
mov
repnz
test
popf
push
movsl
aaa
das
popf
cmp
add
xor
dec
dec
subl
adc
nop
sbb
int
inc
and
push
cmp
pop
sbb
pop
mov
mov
adc
bt
add
mov
mov
xor
and
xor
push
in
mov
cli
push
pop
inc
andl
mov
icebp
outsb
mov
mov
frstor
mov
test
lahf
mov
jno
lock
jle
aas
push
iret
jb
jb
push
lock
arpl
xor
int3
push
adc
inc
fdivs
ficomps
mov
idivl
test
imulb
sub
adc
out
outsl
andb
loopne
jnp
pop
js
sbb
test
mov
and
push
call
fmull
inc
aad
movsb
ss
push
repz
cs
add
repz
xchg
add
bound
and
sub
pop
mov
mov
push
adc
jl
inc
pushf
cld
mov
adc
cwtl
mov
das
mov
daa
mov
inc
add
test
mov
jne
sbb
cmp
in
jp
daa
mull
mov
adc
xchg
jge
fiaddl
outsl
and
std
xor
cmp
jmp
pop
xor
fiadds
fidivs
je
mov
xorl
cmp
aas
sahf
push
out
repnz
idiv
and
mov
xor
push
out
test
adc
test
jns
popa
xchg
or
leave
cmp
insb
test
jg
sub
or
xor
popa
into
xor
pop
jnp
or
lock
dec
pop
mov
mov
sub
int
pop
nop
out
sbb
in
push
in
xorb
xor
in
iret
push
gs
push
mov
enter
loopne
in
mov
inc
xor
xchg
sarb
cmp
leave
jle
adc
mov
sbb
pop
stc
stc
inc
bound
or
mov
daa
mov
aad
push
lcall
mov
in
je
jmp
cld
sub
arpl
test
cmp
std
sub
and
out
jne
mov
cmp
sub
mov
loope
addr16
mov
jmp
movsb
aaa
mov
push
aad
adc
sbbl
cmp
and
fdivr
push
aad
adc
aaa
fstps
sbb
stc
insl
mov
cmp
scas
push
push
pop
jae
jmp
outsb
in
jb
pop
and
movsl
fcmovu
imul
cmpb
loope
addr16
clc
jle
xchg
cli
das
stos
repz
inc
fwait
pop
jl
sbb
jp
mov
je
movsl
cmp
lock
push
lods
mov
js
icebp
fisubl
add
sub
movsl
xchg
pop
out
out
fdivr
xor
sub
add
lret
sub
mov
sub
les
mov
call
sbb
jg
dec
test
insl
push
and
and
mov
test
mov
lds
xchg
stc
outsl
incl
stc
dec
aas
iret
mov
cltd
lret
jb
xor
mov
inc
es
and
loopne
mov
and
pop
xchg
lahf
xchg
push
inc
and
sbb
sub
loopne
sub
fnsave
js
add
int
in
repz
mov
pop
dec
or
push
cs
fcmovu
nop
pop
repnz
subl
mov
hlt
jl
xchg
xor
xor
mov
jmp
hlt
dec
xchg
cmpl
push
std
int
dec
notb
loopne
mov
jmp
add
adc
icebp
dec
fucomip
sub
cmpb
jmp
add
out
sahf
inc
adc
xor
je
mov
dec
mov
repz
int
div
inc
cmc
mov
movsl
lock
jns
xor
or
push
add
push
mov
mov
js
call
or
dec
sub
pop
xor
cld
mov
stos
sarl
xchg
mov
or
sbb
enter
xorl
push
aaa
and
pusha
mov
movsl
popa
inc
addr16
int
rcrb
iret
mov
in
jbe
push
sub
and
and
or
pop
cmp
fcomps
notb
xlat
inc
pop
and
ss
call
mov
xor
roll
mov
into
xchg
dec
jmp
scas
add
fistpl
mov
adc
push
sbb
lcall
sarl
xlat
push
or
aaa
je
mov
cmp
cmp
mov
aas
inc
loop
mov
lock
mov
ret
push
cmpsl
leave
push
jle
cmpsl
mov
pop
mov
add
push
enter
jns
hlt
sub
mov
mov
sbb
mov
adc
adc
xchg
adc
leave
xor
sti
cltd
jmp
mov
inc
jle
out
out
shrl
andb
xor
xchg
mov
mov
out
je
pop
add
dec
aad
xor
mov
mov
fistps
sub
push
popf
popl
mov
cld
inc
les
mov
mov
pop
push
in
and
cli
enter
in
or
lcall
jno
dec
cs
cmpsb
imul
add
and
and
out
mov
clc
xor
cmp
sbb
rcl
rorb
jp
imul
add
adc
aad
iret
int
fstps
xchg
mov
jmp
xchg
call
and
cltd
xor
rcrl
shll
dec
pop
in
test
xchg
jg
xorl
fnstenv
std
rcl
jae
jmp
pop
mov
mov
add
xchg
jge
pop
jmp
hlt
popa
aaa
data16
mov
movsb
pslld
hlt
dec
xor
sub
adc
out
adc
sub
jne
aad
in
jle
or
out
pushf
enter
outsl
mov
fstpl
push
adcb
divl
popa
popf
xchg
xor
cmp
jbe
stos
cli
test
mov
push
and
jecxz
mov
inc
mov
mov
cmpsl
dec
aad
or
cld
jo
xchg
rcll
sahf
mul
outsl
loop
test
cltd
aas
adc
fsubrs
cmp
mov
enter
fadd
xchg
jb
pop
mov
mov
sbb
int3
pop
jbe
outsb
xor
and
or
mov
dec
jno
scas
inc
enter
out
sar
inc
and
pop
push
outsb
mov
adc
sbb
jno
cmpsl
dec
jl
call
pop
or
test
stc
cmp
shll
cltd
dec
rorl
or
push
sbb
jno
mov
fsubr
dec
add
push
cmp
or
std
xor
inc
mov
inc
cmpb
ja
cmpl
mov
push
xorl
mov
aaa
dec
lds
stos
and
and
ret
inc
dec
pop
push
cmp
std
das
pushl
mov
or
out
adc
sub
inc
push
shrl
push
jp
out
loope
pop
shr
iret
cmpsb
fbld
pop
push
inc
ds
pop
lods
clc
les
jg
dec
jg
and
dec
mov
int3
cmpsb
push
add
aad
mov
jmp
jg
jmp
fnstsw
or
mov
mov
stc
push
push
mov
popf
or
mov
lret
pop
sbb
dec
in
cmp
lods
inc
aad
mov
jge
mov
mov
mov
out
lret
repz
mov
jns
pushf
add
sarl
jne
and
add
or
out
add
adc
xchg
and
adc
rorb
push
cwtl
inc
shrb
iret
pop
pushf
xor
les
adc
arpl
lahf
out
bound
jmp
sti
enter
int
jnp
xlat
mov
lds
ret
bound
popf
rolb
call
ljmp
jb
sbb
pop
push
movsb
scas
in
je
clc
push
adc
shrb
sbb
and
pop
jp
lea
jecxz
pop
and
rcll
xchg
sbb
test
mov
es
in
or
push
pushf
sub
and
jp
movsl
jbe
inc
xchg
ret
push
or
xchg
scas
popf
jmp
movsb
lahf
cmp
push
mov
roll
movsl
aad
sbb
sub
inc
mov
insb
out
fs
and
xchg
pop
push
mov
cmp
cmp
outsl
pushl
and
fsubs
out
push
xchg
std
imul
mov
dec
mov
in
test
ds
mov
push
lcall
into
scas
sub
cwtl
mov
lods
jl
inc
fistl
rol
and
push
adc
rolb
mov
ds
xchg
sub
cwtl
push
cmp
enter
cmp
in
sti
mov
nop
in
bound
flds
sub
dec
das
shr
in
adc
adc
sub
mov
sbb
in
in
dec
ljmp
sub
pop
das
lods
dec
dec
mov
ret
sbb
cmc
addr16
scas
lds
fisubs
xchg
sbb
mov
fs
sub
push
out
xor
jl
add
inc
push
pop
cmp
fs
pop
jge
ja
xor
sti
mov
mov
mov
pop
popf
dec
lahf
stos
leave
mov
jno
and
jnp
pop
popa
mov
and
lcall
jl
pushf
out
cmpsl
imul
mov
test
mov
repnz
adc
out
mov
repz
loopne
out
inc
ja
adc
push
pop
mov
lret
lcall
mov
add
or
lahf
mov
inc
pop
push
les
mov
cmp
in
and
aad
xor
sbb
push
xor
fstpl
mov
sub
les
adc
das
or
inc
repnz
and
push
rorl
pop
xchg
lahf
or
pop
mov
or
add
or
stos
leave
in
in
adc
xor
mov
mov
sti
lock
in
sahf
cs
push
lcall
dec
out
dec
mov
pop
loop
ret
faddp
icebp
push
xor
mov
dec
xchg
mov
mov
xchg
push
mov
sbb
mov
dec
mov
sahf
test
sub
cmp
ljmp
hlt
loopne
fsubrl
adc
popa
es
sub
pop
push
mov
adc
std
ja
mov
vpunpckldq
dec
repz
loopne
in
ret
pop
lock
mov
pushf
add
shll
into
lea
xchg
shrb
sbbl
call
cmp
sub
jmp
inc
xchg
mov
inc
mov
add
xor
call
sub
loop
imul
into
int
in
divl
ret
jb
xchg
out
enter
mov
push
xor
ss
imulb
pop
test
dec
pop
mov
push
xchg
insb
add
stos
outsb
out
lods
subl
shll
dec
xchg
dec
fisubrs
cmp
push
inc
xor
push
sub
jg
das
shll
pusha
int
jns
or
mov
ret
test
add
out
movsb
cld
mov
ret
std
inc
ljmp
push
lret
mov
ror
repz
xchg
xor
repz
icebp
loop
sti
jno
adc
in
mov
xlat
inc
into
pop
mov
mov
inc
sarb
jnp
jle
xchg
mov
pop
out
mov
pop
ret
lds
mov
and
insb
sbb
cld
sbb
mov
pop
cs
loop
in
pop
dec
lds
dec
scas
mov
movsl
push
and
leave
int
sarb
outsb
pop
mov
lahf
fbstp
lcall
mov
mov
sub
mov
cli
ja
push
sbb
mov
loop
xor
push
mov
fisttpl
dec
inc
adc
adc
sub
cld
pusha
js
push
js
clc
daa
xchg
repz
into
lods
jnp
shrl
loope
sti
ss
clc
scas
push
mov
movl
inc
cmp
xor
shrl
mov
jecxz
mov
jmp
fnstsw
mov
cmp
jle
pop
lods
xor
jbe
inc
cmp
inc
in
mov
pop
inc
ss
rcrb
push
xor
dec
aaa
pop
sub
in
repz
popa
and
mov
mov
icebp
mov
and
and
cli
popf
aad
xchg
pop
leave
inc
out
repnz
pop
cmpsl
push
into
fistps
adc
aam
mov
notl
decb
pop
mov
lea
adc
das
pusha
dec
fcmovbe
inc
fstp
and
and
and
cs
lea
dec
lock
adc
das
jmp
sub
mov
or
daa
pop
dec
mov
cmpsb
mov
add
cmpsl
stos
out
sbb
lret
sahf
jne
inc
jp
mov
jbe
xor
jge
mov
mov
add
aas
xor
adc
jno
push
mov
insl
js
mov
mov
insb
sub
push
icebp
enter
repz
sub
in
dec
push
imul
xlat
fstl
sub
push
icebp
xchg
fidivs
aad
xchg
xor
mov
add
in
mov
clc
add
xor
xchg
rcrl
popa
insb
pop
and
pop
add
insl
and
mov
cmp
jo
jg
stos
sub
arpl
bound
jge
xchg
shll
pop
add
add
aas
xchg
imul
push
xlat
mov
cmp
mov
xor
loopne
mov
dec
cltd
ljmp
xchg
adc
sbb
sbb
popf
sub
aad
cltd
jecxz
xor
test
dec
std
imul
cwtl
inc
push
dec
jae
inc
imul
mov
or
pop
mov
mov
mov
mov
pop
sahf
adc
cmp
aas
adc
push
mov
adc
lret
or
lods
addr16
je
stc
adc
push
mov
ljmp
mov
push
sbb
ds
pop
je
add
and
loop
jns
push
imul
mov
mov
leave
das
adc
mov
clc
mov
push
ret
mov
cmpl
jns
ret
imul
jg
mov
mov
mov
lret
push
jge
lds
jo
test
jecxz
xor
stos
push
mov
push
pop
xchg
mov
jnp
in
mov
dec
cmp
adc
push
cmp
dec
pop
dec
or
inc
es
daa
addr16
in
ljmp
add
test
adc
mov
mov
push
lret
push
xchg
fxtract
test
test
inc
cmp
jp
ds
int
subl
or
inc
rcrb
out
test
in
pop
mov
into
nop
mov
and
faddp
inc
test
out
lahf
jne
cmp
mov
fisttps
mov
movb
iret
imul
in
sti
xor
mov
or
movsb
xor
test
cwtl
imul
lcall
inc
adc
push
adc
pop
sbb
add
in
sti
mov
in
movsl
mov
pop
fwait
xor
mov
pop
repz
add
jne
out
or
lret
data16
leavew
call
std
push
mov
mov
ja
or
ret
mov
out
ret
cltd
xchg
sarb
jne
rcrl
sbb
lcall
push
shl
jbe
lahf
dec
movsl
mov
push
sub
rcl
jge
add
xor
cmp
outsl
out
sbb
xchg
inc
fldcw
mov
jns
andl
cmp
addr16
stos
mov
adc
inc
out
jns
divb
pushl
jnp
ds
xor
push
pop
test
or
dec
inc
mov
xchg
mov
mov
xchg
stos
mov
loop
pop
cs
dec
pop
orl
dec
inc
pop
addr16
in
fwait
fs
or
ret
mov
shlb
pop
leave
or
mov
sahf
or
sub
lods
mov
test
sub
or
fmuls
nop
jecxz
push
dec
inc
outsb
call
cmp
push
lock
push
or
xchg
or
jns
data16
jb
mov
jne
cmp
push
ja
das
les
enter
mov
xor
add
jb
call
enter
test
xchg
dec
orb
cltd
mov
in
out
sub
adc
mov
xchg
push
negb
or
lea
rcll
cltd
loop
cmp
add
fiadds
ret
sti
dec
arpl
lods
push
inc
mov
mov
fsubrl
hlt
fdivs
xchg
hlt
arpl
cmp
ljmp
dec
and
jbe
xchg
cld
adc
sub
push
mov
fnsave
mov
mov
jg
and
push
push
imul
cmp
pop
adc
jg
sub
test
mov
adc
ds
sahf
jp
insb
dec
dec
dec
or
roll
mov
mov
lahf
push
roll
out
mov
mov
pop
imul
and
pop
add
shlb
repz
sarl
andb
popf
mov
lret
pop
fwait
push
aas
pop
shlb
pop
nop
jbe
imul
inc
push
dec
in
and
leave
rolb
jle
ret
jbe
xchg
out
fisubrl
or
xchg
mov
and
mov
ja
fisubs
cwtl
in
add
pop
div
jge
pop
movsl
popa
xchg
aaa
push
pop
mov
push
and
and
pop
subb
pop
movlps
test
pop
js
lea
sbb
ljmp
repnz
inc
add
pop
mov
pop
lret
push
and
sbb
mov
jno
fsubrs
es
inc
cmp
dec
imul
xchg
movsl
dec
lock
or
rorl
loopne
or
add
xchg
and
sub
stos
out
fstpl
lret
cmp
sub
sbb
inc
adc
xor
mov
inc
xchg
xchg
xor
and
inc
stos
outsb
insl
imul
dec
test
inc
test
push
arpl
ja
or
leave
aas
xor
movsl
pop
dec
xor
mov
in
mov
dec
mov
sbb
out
push
pop
je
mov
neg
and
arpl
push
sub
xor
jp
inc
cmp
pushf
cmp
mov
and
daa
jg
cmc
lods
jl
ljmp
aam
push
mov
stos
adc
xlat
test
xor
pop
cmp
push
pop
fwait
mov
lea
btc
and
sbbb
xchg
mov
mov
out
or
shlb
xchg
out
stc
lds
push
cmp
add
adc
cmp
adc
xor
xor
cmp
test
mov
rorl
shr
loopne
in
fiadds
cmp
cmp
mov
sysenter
mov
cmc
gs
repz
pop
bound
movb
bound
jl
cmc
jnp
dec
stos
xchg
pop
or
sbb
push
cmc
mov
pop
cmp
es
lods
fdiv
mov
loope
mov
xor
stos
enter
pusha
dec
fwait
or
cmpsl
push
out
jp
cmp
in
jb
mov
push
push
push
icebp
loope
repnz
test
xor
cmp
fidivl
test
mov
pop
les
cmp
repz
adc
call
popa
imul
inc
mov
cwtl
scas
adcl
and
or
lret
mov
lods
aas
pop
outsb
mov
and
push
lods
jmp
hlt
fsub
fcoml
inc
inc
mov
fisubrl
shll
aaa
pop
mov
movsb
lods
subl
stos
test
inc
push
lods
frstor
xor
addr16
xor
cld
inc
pop
lcall
std
dec
pop
push
lods
mov
inc
into
dec
pop
loope
adc
xchg
repz
push
xorl
in
mov
outsl
lods
shll
sbb
mov
mov
out
xlat
incb
cli
loop
push
aam
pop
shll
add
and
ja
and
push
mov
adc
and
and
inc
jb
pusha
mov
ret
adcb
movl
outsb
pop
mov
jmp
int3
sub
cmp
push
das
inc
stos
xchg
sysexit
icebp
test
in
ss
cmp
std
rolb
xchg
ds
loope
shll
jno
mov
cmp
les
int3
enter
in
insb
scas
sub
xor
test
push
xchg
or
add
pop
pop
jle
add
fsub
adc
mov
sti
lods
mov
or
add
mov
push
in
fildl
sub
inc
out
jno
and
and
dec
addr16
lret
dec
inc
es
divb
jnp
or
mov
xor
popl
fisubrs
mov
int3
and
cmp
xchg
popl
ja
cmp
je
sahf
xchg
add
lods
and
in
shl
lods
ficoml
fdivr
ljmp
pushf
fidivrl
jl
test
cmp
push
not
or
enter
mov
popa
lcall
xchg
in
inc
scas
jp
frstor
push
inc
xchg
shrb
cmc
sbb
adc
pop
test
in
lret
lret
xor
fisubs
das
cmp
insl
mov
or
mov
outsl
out
movsl
inc
nop
pop
xchg
sbb
pop
push
in
mull
mov
out
jbe
sahf
fistpll
in
shl
loop
cmpl
push
pop
dec
cs
mov
jo
les
movsb
ljmp
fnsave
xor
push
pop
mov
pop
push
cmp
inc
inc
mov
nop
cs
add
and
int
icebp
xchg
and
repnz
sub
sgdtl
mov
add
sbb
xchg
push
fistl
xor
adc
adc
fnsave
and
xchg
mov
addr16
pop
imul
xchg
rcll
jp
sahf
mov
cmpb
sbb
aas
inc
push
push
pusha
mov
dec
sahf
mov
pop
test
inc
jo
cmc
dec
sub
test
xchg
lret
jns
jle
cmp
pop
das
pop
pop
insb
cli
gs
sahf
iret
jno
nop
ss
mov
in
or
rorl
cmp
pop
shrl
ljmp
mov
mov
and
pop
popa
lret
fildll
mov
in
dec
pushf
jae
lock
mov
mov
mov
sub
dec
xchg
ret
or
in
xchg
or
pop
xchg
addl
sbb
cmp
lods
adc
lret
sbb
loope
push
and
mov
sub
enter
mov
dec
imul
vprotb
imul
mov
jmp
mov
adc
inc
sbb
mov
lock
jbe
clc
sbb
jp
push
movsb
sub
push
sbb
jno
scas
push
pushf
push
in
popf
xchg
addr16
loopne
dec
pop
mov
cld
mov
sarb
pop
push
mov
cmp
xchg
mov
mov
pop
aam
hlt
and
cmpsb
dec
add
cli
into
std
aaa
nop
jno
icebp
pop
cwtl
and
jne
cmp
pop
sti
leave
pop
jg
fildll
test
icebp
movsl
sub
in
jmp
add
rolb
mov
push
sti
and
cmp
cli
cs
cmp
aaa
mov
sarl
push
insl
cltd
dec
out
shrb
jns
sbb
cli
and
dec
jns
mov
lods
lret
lret
adcl
ljmp
and
test
mov
repnz
jg
jbe
jmp
xchg
mov
sbb
popf
daa
sbb
cmc
lds
aaa
push
inc
sahf
mov
loope
cmpsb
sti
cld
dec
pop
add
sub
push
push
cmp
fucom
pop
ljmp
cwtl
xor
push
lcall
jecxz
mov
in
jno
loop
mov
sti
push
pop
in
test
inc
jb
adc
inc
sbb
repz
fists
repz
stos
sub
or
popa
dec
scas
fcmovb
fadd
pop
jae
sarb
int3
repnz
xchg
jmp
sahf
add
inc
xor
les
push
pop
int
loop
dec
add
adc
jae
clc
and
sahf
adc
push
int
dec
inc
lret
sti
subl
add
jle
xchg
xchg
ds
xchg
imul
dec
shrb
out
clc
sub
dec
jle
push
test
adc
mov
out
add
dec
inc
jmp
test
cmp
add
sub
scas
push
movsl
lret
xchg
call
pop
mov
sbb
cli
clc
xchg
mov
cmpl
stos
or
loop
int
rep
ret
xchg
and
in
mov
xor
xor
jno
mov
cs
test
sbb
xor
jne
je
call
xor
mov
mov
movsl
dec
xor
jecxz
xchg
enter
sti
popa
loope
les
sahf
jmp
mov
leave
or
jae
jne
repz
xchg
sbb
movsb
push
out
mov
hlt
outsl
int3
lock
pop
sbb
mov
hlt
lcall
int
mov
dec
jecxz,pt
or
mov
into
int3
push
sbb
mov
sub
loopne
add
pop
sbb
inc
inc
push
xor
outsl
cmp
fisubrs
fbstp
cmp
mov
sahf
cmpb
enter
cmp
mov
loopne
test
in
enter
pop
jbe
dec
mov
in
adc
xor
mov
sarb
imul
mov
pop
loopne
xchg
fs
outsb
into
ljmp
dec
pop
pop
sbb
mov
lods
and
iret
cli
or
aad
lret
out
fcmove
and
and
dec
xor
sahf
push
scas
sub
xchg
ss
sbb
adc
pop
insl
pop
pop
sub
xor
sub
mov
jo
xchg
sub
cli
mov
orl
xor
roll
lahf
jp
mov
sahf
mov
stos
filds
ljmp
es
int3
jmp
call
or
dec
shll
and
pushf
insl
rcrl
mov
dec
outsl
xchg
andb
test
mov
inc
dec
mov
fadd
leave
jne
dec
pop
pop
mov
movsb
sub
mov
repz
sbb
imul
aad
xlat
jg
daa
lret
pop
mov
push
dec
inc
pop
add
fcoml
jmp
stos
adc
fucom
pop
outsl
push
shrb
pop
lahf
scas
rol
loop
es
jne,pn
imul
xor
xchg
mov
mov
add
lahf
add
and
mov
mov
loop
add
adc
aaa
inc
int
cmp
iret
inc
jo
dec
inc
fs
mov
mov
jno
sub
sbb
inc
xchg
clc
mov
cmp
imul
stos
xor
mov
push
xor
xor
sbb
cli
jb
arpl
cmp
stos
arpl
mov
out
gs
xchg
fisttpll
or
mov
or
in
mov
sahf
mov
je
dec
xor
stc
jle
mov
xchg
inc
push
outsl
out
fmul
inc
je
loop
aad
arpl
pushf
insb
xor
out
rorb
xchg
je
mov
enter
jg
sbb
or
push
push
xlat
and
lods
add
xchg
xor
mov
cmp
out
clc
sbb
dec
push
rcl
sbb
xchg
sahf
je
sbb
mov
out
sub
repz
mov
in
inc
and
mov
inc
ret
jle
cmp
mov
daa
add
mov
cwtl
clc
les
test
and
push
and
pop
mov
jne,pn
out
jl
pop
fdivl
fmul
enter
nop
jns
or
jmp
cmpsl
fs
lea
in
nop
imul
fs
fistps
ret
lods
jmp
mov
lods
cs
jnp
xchg
out
jbe
shll
xchg
mov
xlat
call
je
mov
adc
sbb
arpl
cmp
in
hlt
push
jmp
in
and
pushl
aaa
stos
jle
pop
push
idivb
mov
sub
pusha
aaa
push
fcompl
mov
loop
xchg
dec
mov
mov
mov
scas
or
mov
or
movsl
pop
in
cmpb
dec
cmp
loop
lret
sbb
mov
adc
inc
jns
daa
xor
sub
dec
sub
jno
lret
add
xlat
xchg
mov
test
les
iret
sbb
subl
dec
jl
bound
cmp
mov
fistpll
add
sub
shr
aad
dec
pop
test
cwtl
and
pop
fwait
cmc
push
in
mov
mov
or
mov
call
aas
xor
cmp
adc
pushf
dec
mov
repz
pop
int3
pop
shrl
subb
pop
enter
filds
int
jecxz
adcb
outsb
jp
pushf
inc
pop
jae
push
addr16
bound
insl
cmpsb
int
mov
push
pop
or
iret
es
fistpll
xor
jle
xor
fwait
sbb
stos
daa
lret
ss
mov
xchg
jne
stos
sub
movsl
and
scas
negb
sub
mov
jno
sbb
push
add
xor
imull
xchg
repnz
mov
mov
and
push
push
inc
pushf
scas
pop
mov
add
outsl
pop
movsl
call
add
leave
lret
fs
in
ret
cli
lds
aaa
pushl
ret
jg
fstenv
fists
dec
ret
lods
cmpsb
lcall
add
add
fstpl
xchg
js
aam
mov
sbb
sti
dec
mov
into
sahf
jbe
mov
or
sbb
pop
jne
pop
fldcw
mov
in
mov
xchg
sahf
xchg
sbb
pop
sub
pop
stos
lods
mov
inc
cmp
xor
lods
xorl
dec
inc
inc
fwait
and
ret
push
mov
scas
push
jbe
sbb
ss
adc
in
xchg
add
out
daa
mov
xchg
cwtl
jnp
push
adc
pop
das
adc
popa
cmp
mov
jg
popf
andl
pop
aam
add
out
int
cmc
jge
xor
ds
sbb
ljmp
movl
lods
sub
out
push
pop
js
mov
push
cltd
repnz
mov
push
arpl
icebp
sbb
sbb
int3
pop
pop
sub
mov
pop
jecxz
popa
mov
xchg
ss
jb
notl
dec
fstp
loope
jl
lret
and
adc
push
dec
mull
in
cmp
push
nop
movsl
xor
mov
jno
ret
ja
dec
mov
cmp
aam
test
jae
adc
sub
mov
or
adc
push
jl
add
cmp
mov
xor
mov
cmp
out
enter
in
add
cltd
les
gs
xchg
mov
imul
inc
add
lods
scas
in
lods
in
lods
jge
std
pop
push
data16
add
cmp
lods
mov
jg
les
dec
dec
lea
test
aad
or
das
dec
outsb
jnp
mov
loop
repnz
daa
jno
out
add
bound
adc
gs
ficoms
xchg
nop
inc
lret
test
test
lahf
out
inc
das
adc
sti
or
cmp
mov
inc
jge
lods
movsb
cli
mov
add
push
mov
fwait
icebp
pop
out
xchg
ljmp
je
stc
bound
mov
jmp
out
fnstcw
cli
mov
stos
cmp
dec
cmpsl
pop
imul
add
inc
shl
sahf
pusha
dec
push
outsb
and
lahf
sbb
pop
sub
and
inc
or
addr16
add
dec
xchg
ret
sub
or
ja
ficompl
or
mov
mov
jle
push
add
jns
lods
inc
sti
dec
and
js
shlb
xor
dec
mov
push
sub
lods
rcrb
xchg
loopne
xchg
adc
nop
pop
jb
add
pop
and
or
jecxz
icebp
repz
hlt
inc
or
test
dec
in
jno
push
xor
fdivrs
add
fadds
rcr
dec
jecxz
and
mov
sti
icebp
push
sub
popf
ret
out
adc
movsl
or
xchg
mov
andb
imul
dec
cmp
mov
test
cmp
jle
jl,pn
aas
nop
jmp
out
sub
lods
std
cmp
xor
in
or
mov
mov
or
test
mov
xchg
xor
push
ljmp
xor
mov
bound
jnp
addr16
pop
xchg
adc
lret
cwtl
icebp
ja
and
or
jg
push
fs
push
loopne
sub
xlat
movsb
mov
adc
adc
lea
shll
mov
out
inc
xor
stc
loop
stc
mov
enter
aad
dec
ret
cmp
cmp
and
ja
dec
je
adc
insb
jecxz
stos
outsl
cmp
jmp
sbb
sti
and
xchg
cwtl
lods
mov
shlb
push
icebp
popa
dec
adc
rclb
or
or
push
add
lret
leave
xor
test
adc
xchg
rorb
mov
stos
fwait
outsb
push
aad
jnp
jecxz
out
jbe
mov
sub
int3
push
mov
pop
sbb
insl
in
sbb
sarl
sbb
scas
pop
outsb
test
inc
andb
xchg
sbbb
loope
adc
cmc
xor
test
fs
div
pop
cmp
push
sar
jg
das
push
addr16
sbb
pop
mov
jae
mov
xor
enter
xlat
and
popa
test
in
gs
xor
dec
lret
sti
gs
dec
fldcw
gs
lret
outsb
pop
pop
adc
add
sbb
jnp
ljmp
mov
hlt
jae
sub
pop
pusha
aam
cmp
mov
mov
int
or
mov
mov
cld
sbb
outsl
leavew
cmp
icebp
in
dec
jnp
cmp
jbe
ret
imul
test
xor
mov
aad
dec
lock
mov
sti
jle
or
ds
or
cvtps2pi
mov
stc
xchg
repnz
leave
cmp
js
push
aad
aas
and
jnp
ficompl
scas
pop
pop
cwtl
pop
cmc
fs
inc
mov
test
mov
mov
pop
pop
add
push
nop
push
xlat
movsb
add
pop
xor
jo
in
mov
jle
fnstenv
or
daa
cmp
js
lods
ljmp
in
sub
imul
mov
imul
imul
sub
sahf
pop
jle
fistps
inc
jmp
shll
pop
push
push
mov
xor
loopne
cmp
adc
fstps
inc
popa
adc
push
add
shrb
cmp
sub
ss
or
ror
popa
scas
lahf
pop
push
imul
sbb
cmp
add
or
adc
dec
adcb
sub
jge
ds
fcmovnu
cltd
cli
lea
pop
push
lret
mov
push
jl
das
jge
movsl
or
or
jecxz
lcall
popaw
ret
adc
mov
pop
jo
sub
dec
fnsave
iret
pop
fwait
pop
daa
dec
add
jae
and
loope
ficompl
fdivrl
leave
xchg
sbb
cmpsl
adc
sub
pop
push
inc
inc
and
es
sub
adc
pop
push
sbb
lcall
dec
loop
cmp
xor
js
test
shll
xchg
xchg
jbe
xor
jbe
xor
out
ss
xor
or
mov
ljmp
popa
push
xlat
outsl
pop
outsl
fstpl
adc
es
or
mov
or
fidivs
adc
jne
in
daa
pop
jae
pop
sub
fwait
and
adc
push
and
adc
popa
lea
mov
add
jbe
cmp
jge
aaa
xor
das
fdivl
cmp
xchg
jnp
dec
bound
addr16
jb
std
push
adc
rcrl
mov
imull
pop
mov
icebp
ror
cmp
add
inc
sbb
or
mov
mov
xchg
jge
inc
xor
aam
mov
jbe
sbb
out
mov
lret
out
sbb
push
js
sub
pop
mov
and
aam
mov
inc
insl
out
pop
mov
mov
mov
loop
xchg
adc
add
stc
bnd
mov
stos
dec
repnz
out
dec
ja
pop
sbb
mov
popa
push
je
fldt
cmpsl
jbe
aam
add
adc
rcll
xchg
repz
lods
pop
mov
dec
mov
mov
and
xor
sbbb
adc
fadds
mov
xchg
sub
aas
fistl
popa
stos
cmp
fcmovnbe
xadd
mov
inc
mov
mov
fsub
and
lea
cmc
outsl
adc
cmpsl
mov
mov
movsb
clc
jmp
jno
add
sarl
mov
xchg
call
enter
in
jmp
adc
push
fnsave
jecxz
cmp
sub
mov
test
int3
pop
and
xor
push
sub
sbb
cmp
sbb
mov
xor
inc
xor
pop
xchg
inc
xchg
xor
jge
fucomi
clc
int
adc
nop
or
xchg
imul
push
mov
pop
inc
add
scas
notl
jl
pop
mov
jecxz
xchg
or
mov
xor
push
ss
aaa
insl
addb
cmp
loope
ds
imul
ret
jbe
mov
lock
jb
sub
pop
dec
nop
jbe
push
mov
enter
test
in
fildl
test
rcrl
int
mov
mov
lods
mov
sahf
xchg
leave
pop
xlat
cmp
and
push
jmp
push
in
or
lcall
mov
sbb
mov
inc
outsb
je
push
imul
pop
movsb
cmp
cmp
scas
inc
cmp
or
gs
jg
and
clc
inc
gs
inc
jo
fcoms
lahf
cli
fcompl
and
ret
test
mov
adc
lods
arpl
out
sub
out
mov
dec
inc
sti
movsb
ret
mov
jnp
lcall
orb
roll
mov
jl
sub
stos
cmp
mov
out
dec
loopne
clc
cld
and
sbb
adc
push
cmp
jo
cmp
out
lods
xchg
push
or
shll
lods
in
adc
push
subl
insb
je
sbb
loopne
and
and
push
sti
add
jns
mov
jg
lahf
ret
orl
loop
mov
sbb
push
imul
jns
cli
scas
jae
jmp
ja
ret
add
inc
int
iret
jmp
into
icebp
push
loope
addr16
push
pusha
shlb
push
sub
call
stos
mov
xorl
shrb
or
aam
xor
sub
jle
std
sub
mov
and
pop
cmp
lods
je
sub
xchg
adc
rorb
jmp
and
int3
subb
bound
add
push
sbb
outsb
ss
push
decl
sub
popf
push
sub
mov
mov
inc
iret
data16
into
mov
mov
hlt
push
daa
cmpsl
stos
ret
in
fldenv
and
dec
dec
adcl
in
inc
sub
or
sub
inc
xchg
test
aas
xchg
int3
cmpsb
ja
xchg
repz
insl
int
outsb
bound
mov
andl
mov
pop
jge
xor
fstpl
ss
jg
xchg
push
fisubs
loopne
into
add
stos
jb
adc
in
push
inc
xchg
lds
into
xor
lret
xchg
scas
pusha
push
jnp
cmp
loopne
jnp,pt
push
imulb
shlb
cs
mov
jne
mov
dec
fcomi
aad
loop
or
sbb
or
xchg
or
sbb
sahf
fwait
and
fwait
inc
loop
add
sub
or
push
addr16
ljmp
mov
cltd
repz
dec
clc
mov
inc
mov
ss
bound
fsts
adc
inc
mov
ret
cmp
mov
cmp
stos
mov
pushf
xchg
sbb
mov
out
shrb
sbb
fwait
push
mov
jne
psrlw
xchg
shll
imul
sbb
in
sub
popf
fidivrl
cmp
leave
in
in
stc
mov
scas
adc
jo
shrl
rorb
fsts
aad
pop
lea
jge
or
out
mov
pop
or
dec
mov
imul
bound
jno
mov
stc
cmc
xchg
inc
cmc
imul
sub
or
mov
cli
or
gs
adc
loopne
shrl
fldl
lds
pop
dec
push
jne
aad
stos
addl
pusha
mov
sbbl
mov
mov
inc
cmp
push
jle
test
enter
insl
bnd
jae
mov
cmp
cwtl
dec
lret
sar
and
pop
cmpsl
or
add
shl
shl
loop
mov
sub
xor
mov
xchg
sbb
test
nop
add
mov
pop
dec
lret
fwait
and
daa
xor
mov
pop
dec
movsl
mov
dec
mov
in
hlt
lahf
mov
loop
out
sbb
stc
enter
mov
sbb
imull
push
inc
mov
jge
test
cmp
cmc
jmp
sub
nop
pop
pop
pushf
stc
mov
jb
ror
mov
mov
mov
pop
test
mov
aam
lret
ja
dec
jbe
pop
ss
sar
imul
nop
and
movsb
sbb
in
loop
cmpsb
sub
test
mov
bound
int
xchg
add
xchg
mov
and
jae
jl
and
sbb
sbb
xchg
pop
mov
jbe
mov
cmp
stos
loop
and
std
push
iret
sbb
pusha
fistpl
jns
lods
sti
pop
sbb
and
outsb
cmp
rcl
cmp
enter
in
decl
mov
shll
icebp
dec
fnstsw
jb
test
into
lea
cmp
popf
cmpsb
adc
jne
cld
xor
dec
jnp
mov
sbb
mov
or
jecxz
mov
push
mov
imul
xchg
adc
notl
mov
push
arpl
es
xor
jbe
cmp
sub
ja
inc
push
lods
sub
and
js
popa
push
mov
inc
pop
xor
jns
sub
push
xchg
inc
cmp
cmp
mov
jmp
cmp
es
dec
mov
inc
pop
and
movd
sub
add
mov
out
xor
adcb
cli
and
push
lods
mov
xchg
mov
in
lods
popf
ss
data16
xor
mov
sbb
adc
cmp
testl
and
or
jmp
sub
xchg
sbb
dec
or
inc
cld
sar
mov
aam
mov
enter
popf
insb
sbb
hlt
psubd
inc
mov
das
push
jne
mov
ljmp
outsl
sbb
mov
inc
loop
mov
push
mov
bound
pop
in
stos
xchg
popa
cltd
add
ja
cmc
jmp
jmp
shll
inc
mov
xchg
pop
dec
cmpsb
hlt
cmp
ljmp
rolb
push
push
jecxz
pusha
push
xor
out
incl
fnstsw
loopne
jae
adc
aam
and
mov
mov
lods
sbb
jne
mov
push
lea
das
pop
hlt
cltd
cmp
pop
adc
and
cmc
sbb
xchg
ret
movsb
xlat
push
inc
dec
xchg
test
jns
pop
leave
mov
fwait
addb
in
mov
pop
addb
aam
int3
mov
arpl
push
addr16
popa
in
and
lock
sbb
jg
push
hlt
jno
sub
pop
and
xchg
jbe
push
add
punpckhdq
sti
jo
jb
xlat
dec
push
or
sbb
outsb
stc
sub
inc
fidivrl
cmp
mov
pop
push
xor
cs
mov
sbb
aad
cltd
repnz
ljmp
dec
sub
scas
mov
pop
outsb
out
push
sub
xchg
and
xchg
add
in
cld
popa
mov
cmp
adcl
inc
and
pop
sbb
sbb
dec
imul
gs
daa
sub
pop
xlat
int
and
push
outsb
mov
mov
out
adc
sarb
push
shll
jns
sbb
rcrl
loope
shll
add
xlat
lahf
lods
arpl
enter
cwtl
push
in
sarb
shlb
inc
sbb
lods
lock
sub
dec
ret
xchg
pop
test
loop
xor
inc
lahf
sarl
add
xchg
jo
dec
and
lea
xchg
jae
bound
mov
daa
test
mov
dec
mov
and
scas
ret
jmp
pop
or
scas
sarb
push
les
adc
into
dec
js
int3
dec
dec
out
pop
fstl
push
jmp
bound
je
addr16
ss
shlb
loop
push
stos
inc
mov
or
inc
mov
scas
and
sbb
outsl
xor
dec
aam
into
int
lret
jecxz
xchg
sbb
and
add
jl
add
fidivrl
push
gs
lea
test
adc
test
and
or
add
mov
icebp
shlb
dec
xchg
test
adcl
xchg
jecxz
push
leave
dec
cmp
movsl
sbb
scas
arpl
lods
or
pop
pop
stos
hlt
add
mov
scas
fbld
push
mov
pop
insb
push
pop
repz
aas
pop
mov
and
and
jecxz
scas
xchg
cmp
ret
dec
imul
fisubs
es
aad
sbb
ljmp
sub
jbe
push
arpl
adc
sub
movsb
and
jmp
push
inc
nop
pusha
mov
jns
ja
imull
jle
test
jbe
or
adc
sahf
xchg
icebp
cmp
addr16
push
hlt
pop
push
mov
clc
mov
xchg
push
push
cvtpi2ps
sbb
addb
fldt
popf
hlt
adc
adc
mov
icebp
loop
into
lock
sbb
lcall
pushf
jae
mov
sbb
sbb
push
fcompl
push
cmc
ret
xor
dec
pushf
addr16
xor
aas
sbb
scas
pop
je
std
sub
adc
jne
scas
fnstcw
jmp
stos
mov
xlat
push
movsb
xchg
xchg
mov
sahf
int
cmp
jnp
test
mov
rcll
dec
stos
lret
std
sub
setae
dec
cmp
sub
test
ss
adc
test
mov
add
shll
adc
icebp
iret
roll
mov
pop
xchg
jnp
push
out
xlat
mov
lods
lret
push
mov
inc
enter
stos
mov
dec
adc
dec
hlt
cmp
inc
inc
in
xchg
ja
icebp
jl
push
cwtl
or
lods
scas
cmpsl
push
dec
and
inc
adcb
push
add
add
hlt
js
inc
adc
mov
les
sbb
dec
add
sub
push
xor
lods
push
in
jns
lods
lock
inc
pop
push
aas
xchg
movsl
inc
inc
cltd
sub
test
sub
enter
mov
mov
push
inc
jl
daa
inc
subb
loope
sbb
lret
xchg
adc
push
sub
sbb
shll
sub
rcrb
cmp
xor
dec
jno
or
out
jbe
ret
lods
add
cmp
test
cld
push
lret
test
pop
push
add
add
ret
fwait
dec
push
sub
aaa
pop
icebp
sbb
mov
xor
xor
movb
jmp
in
mov
jno
loopne
mov
add
insb
sti
jl
call
cltd
aam
pop
int
fidivs
jle
imull
ljmp
jae
sbb
roll
mov
jo
lret
push
or
cmp
and
pop
es
data16
mov
cs
aam
jae
jb
push
stc
loopne
jae
sbb
popf
in
imul
mov
pushf
mov
dec
add
pop
imul
jbe
jp
les
and
paddb
sbb
cmp
pop
jg
dec
icebp
xchg
filds
cli
aad
aam
cltd
ret
popf
xchg
pop
push
lret
adcl
or
fstpl
dec
jno
inc
lea
jns
dec
into
jns
movsl
jb
stc
add
or
sbb
add
dec
pop
stos
aam
dec
fdiv
pusha
mov
cmp
in
add
out
nop
mov
push
loope
mov
or
rcrb
std
mov
mov
loopne
dec
dec
cmp
xor
insl
shll
mov
mov
aas
pop
stc
iret
imul
vorps
xchg
mov
mov
sbb
mov
mov
je
sub
cmp
or
cmp
cltd
cli
outsb
and
dec
add
adc
enterw
lods
pop
jns
ficoms
dec
cli
fdiv
inc
push
in
jns
fbld
cmc
jbe
push
xchg
test
jmp
rcl
adc
rorb
xchg
out
jne
pushf
sbb
push
pop
pop
loopne
xchg
or
push
mov
or
jge
jo
adc
loope
push
call
or
mov
sbb
xchg
pop
pop
dec
adc
xor
mov
loopne
ficomps
jne
lahf
test
mov
xchg
mov
aad
fndisi(8087
lret
lods
bnd
je
jge
xlat
pop
lods
lret
inc
and
lock
sub
scas
lods
adc
icebp
out
jmp
shll
mov
in
add
push
stc
movsl
out
lret
xchg
jge
loope
aad
mov
pop
mov
mov
pop
mov
dec
lds
cmc
add
jns
inc
or
adc
dec
add
push
inc
or
mov
inc
sub
pop
rorl
dec
add
nop
pop
and
push
jne
shrl
jge
outsl
adc
daa
cmpsb
add
mov
lret
insl
fwait
xchg
push
add
imul
jno
lret
dec
lods
push
inc
and
in
in
ljmp
popf
push
das
ljmp
jl
mov
test
scas
sub
repnz
ljmp
lock
out
loopne
mov
mov
dec
fwait
je
or
daa
hlt
add
movsl
inc
out
data16
clc
jne
xchg
mov
xchg
int
pcmpeqb
jle
pop
movsl
orl
sahf
xchg
in
dec
scas
shll
jmp
dec
pop
int3
scas
mov
fdiv
test
cltd
cli
xchg
inc
icebp
and
pusha
dec
dec
jge
mov
xchg
iret
xchg
or
pop
add
repnz
mov
sbb
cmp
or
inc
mov
fimull
push
fists
testb
flds
out
xor
pusha
mov
not
test
lahf
adc
out
daa
jbe
out
out
mov
lds
insl
out
imul
jle
cmc
lret
add
adc
insb
or
xchg
lahf
xor
out
dec
test
and
add
jbe
or
repnz
fisttpll
leave
cmc
std
jle
push
cmp
lods
sbb
lret
aas
dec
and
and
pusha
or
aas
popf
mov
insb
mov
mov
dec
inc
add
pop
mov
movsb
jmp
shl
gs
xchg
lds
ficoms
outsb
ret
test
jne,pn
call
add
pop
inc
into
mov
scas
data16
scas
cmc
jmp
sti
test
loopne
sub
das
xor
js
xor
pop
mov
movsb
jno
fidivrl
sbb
orb
mov
repz
and
sbb
popa
and
xor
packuswb
ss
out
mov
ret
imul
dec
ret
dec
push
sarb
fisubl
stc
sbb
orl
pop
dec
mov
outsb
popl
scas
notl
and
push
inc
ljmp
xor
pusha
subl
add
daa
outsb
push
fildll
in
aam
add
fistpl
aam
mov
das
push
mov
into
pop
inc
jae
je
movsb
mov
sbb
mov
stc
cmpb
xchg
xchg
mov
mov
add
pop
ret
add
jns
sbb
mov
jl
aam
mov
insb
movsl
aas
or
scas
inc
pop
push
xorl
lret
push
out
shrl
nop
and
cld
xor
je
jmp
jg
imul
xor
lods
pcmpeqw
and
and
fimuls
inc
xchg
rolb
jb
sar
movsl
mov
testl
mov
lahf
mov
xor
push
mov
cmp
fisubrs
nop
mov
jo
fsubrs
adc
test
jo
cwtl
pop
mov
pop
push
cmp
loopne
stos
mov
repnz
adc
gs
dec
cmc
mov
mov
subb
mov
stos
and
cmc
popf
and
mov
inc
sbb
mov
cmp
dec
cld
rolb
inc
out
test
cmp
jmp
imul
push
in
inc
mov
jbe
dec
imul
daa
inc
repz
jg
and
imul
pop
mov
sbb
sti
dec
or
push
outsb
and
idiv
push
jle
int
xor
mov
sbb
pop
or
dec
aas
fistpll
push
dec
mov
xchg
mov
pop
lcall
dec
fsubs
out
lds
and
hlt
xor
adc
lea
cmp
sub
cmc
jmp
xchg
mov
mov
and
and
inc
inc
mov
xchg
adc
cmc
mov
inc
dec
or
dec
push
add
out
add
inc
cmp
les
testl
ds
stc
xchg
lods
ljmp
cmp
insl
sti
sbbl
nop
mov
xchg
rclb
ja
mull
dec
mov
psubb
sbb
lds
ds
jno
mov
sub
inc
scas
fnstcw
jne
sbb
fisttpl
fnstsw
lods
jns
bound
in
sti
push
pop
dec
push
mov
dec
jle
xchg
fstl
pop
scas
sub
cmp
xchg
daa
popf
dec
mov
in
xorb
inc
or
mov
mov
js
fisttps
setno
js
xor
xchg
cmp
sbb
aad
inc
mov
lahf
ret
das
or
inc
mov
mov
jns
stos
dec
mov
shl
mov
mov
fstpt
and
add
repnz
shrb
mov
ret
xor
add
cmpsb
shl
jne
cmp
es
test
ja
ss
sub
cmp
adc
lds
and
jp
loope
sti
adc
iret
cld
stos
cmp
mov
inc
mov
cmp
fucomip
cmpxchg
pushf
rep
insb
and
xor
pop
adc
in
adc
xor
and
out
xchg
cmpsb
cmp
mov
roll
cmp
shrb
js
adc
test
fwait
into
or
xor
inc
mov
dec
xchg
xlat
jo
aas
movsl
rorb
adc
lea
cmpsl
mov
pop
popa
daa
pop
xor
jecxz
mov
sahf
xorl
aam
or
dec
add
cltd
cmpsb
test
dec
xor
fldt
and
xchg
adc
sub
faddp
fs
mov
lea
sbb
arpl
inc
iret
dec
aam
push
pop
cmpsb
fldt
enter
push
mov
cltd
pop
pop
push
xorl
adc
xchg
imul
xchg
adc
cld
pop
leave
data16
ljmp
roll
mov
adc
add
pop
lods
push
mov
or
xchg
loope
xchg
in
sbb
mov
cmp
add
mov
jecxz
addr16
jmp
and
xchg
iret
pop
mov
pop
pop
add
lret
dec
rcrl
xchg
lret
adc
aas
xorl
push
movsl
and
adc
mov
lds
dec
test
mov
and
inc
jle
cs
sahf
jns
and
gs
jb
fadds
clc
loop
mov
ficoms
xchg
mov
aas
sbb
or
testb
clc
add
add
test
add
pop
jmp
and
jmp
test
cmp
aad
popa
jecxz
aaa
or
xchg
roll
arpl
xchg
pop
cltd
std
cwtl
push
enter
adc
incl
jge
pop
dec
std
enter
roll
in
push
lea
es
into
cltd
push
inc
movsb
adc
xchg
mov
xchg
loope
push
out
cmpsl
mov
pop
loop
aad
push
cmp
aam
pusha
icebp
and
hlt
lcall
push
insl
scas
mov
hlt
insb
in
mov
mov
out
sub
pop
cmp
popa
inc
dec
out
jbe
cmp
lret
call
ja
arpl
inc
subb
test
sub
fdivs
jle
sub
jbe
dec
nop
xchg
imul
fdiv
adc
rcrb
xchg
inc
pop
icebp
aam
mov
push
shr
push
std
push
addb
mov
dec
cmp
push
sbb
mov
add
ds
and
fnsave
jo
ds
mov
cmc
sbb
insl
jns
inc
xor
fs
cmc
xchg
pop
push
cmp
imull
aam
fsubs
cmp
mov
cmp
pop
add
insb
sbb
insl
out
mov
adcb
lock
and
shl
or
cltd
lcall
sub
cmp
add
stos
and
mov
mov
jns
xchg
enter
cmp
add
out
int3
fs
pop
sbb
adc
mov
aaa
call
inc
and
sub
pmaxub
pop
and
scas
fmuls
cwtl
jecxz
outsb
mov
cmp
aas
inc
add
mov
outsl
xlat
adc
sub
inc
xor
out
push
subb
lods
pop
cli
xchg
cmpsb
pop
mull
into
fadd
pop
sub
sub
cmp
cmp
neg
fsubrp
lods
cmp
push
lock
sbb
xor
adc
mov
mov
pop
scas
mov
jb
sub
js
and
jbe
mov
ficoms
call
rorl
stc
ja
repnz
in
bound
outsl
and
pushl
mov
jecxz
nop
mov
test
iret
popa
cwtl
aad
xor
pusha
add
inc
addl
dec
mov
adc
pop
ljmp
aad
ss
daa
mov
imul
jmp
gs
and
ss
adc
mov
popf
mov
sbb
enter
scas
mov
mov
push
or
iret
aam
fnstenv
daa
push
ds
test
cmp
aam
mov
pop
xchg
rcrl
push
test
test
add
jb
add
or
cmp
aam
andl
push
incb
fistpl
loope
xor
push
cli
mov
rcrl
stos
stos
scas
cmp
mov
fimull
dec
or
mov
and
or
repnz
stos
adc
sti
sub
inc
sub
jns
sub
jmp
jg
mov
mov
pop
aad
xchg
sub
xchg
or
aas
out
imul
pop
imul
scas
cwtl
loope
imulb
sbb
cmp
pop
ficoml
mov
pop
lret
fbstp
shll
pop
ret
out
cld
mov
push
mov
jo
pop
pop
jns
daa
dec
mov
shrb
xor
scas
rorb
pop
xor
enter
shrl
jno
aas
cmpsl
mov
sti
pop
mov
loopne
xchg
mov
cmp
add
jb
sarl
and
daa
push
clc
add
add
mov
in
in
in
adcb
or
ret
lret
push
cli
dec
pop
dec
insb
fsts
mov
loopne
gs
or
sbb
sub
subb
xor
test
and
xor
and
push
adc
outsb
jae
lock
pushf
jno
ret
xchg
stos
lahf
and
pop
gs
and
cmc
lock
movl
mov
dec
adc
xchg
nop
cmp
mov
cmp
xor
xchg
and
ds
push
inc
loop
in
mov
jle
xor
scas
cmpsl
mov
xchg
pop
mov
arpl
push
mov
jmp
add
nop
fimull
loop
and
fiaddl
pop
sub
xchg
sbb
lcall
insb
push
mov
loop
inc
pop
es
popl
or
jmp
lahf
push
addr16
loopne
jne
cld
outsb
lock
sahf
jns
nop
cmp
test
shlb
push
pop
push
fldl
cmp
mov
mov
movsb
add
mov
add
xor
push
jb
jne
bnd
outsl
add
and
fs
sbb
xor
pushf
test
push
lods
dec
insb
dec
mov
je
inc
xor
jbe
mov
dec
fwait
pop
xchg
and
cmpl
fs
jge
lret
incb
mov
scas
adc
xor
js
jae
lret
mov
pop
daa
sub
cmpsb
hlt
dec
mov
fcoml
ds
out
das
pop
adc
mov
mov
dec
cli
loopne
inc
mov
popf
cltd
mov
xor
push
sbb
in
fisubrs
test
jae
push
mov
bound
addr16
aam
lods
sub
inc
stos
add
movsb
ja
or
mov
push
and
fldenv
cli
shl
out
call
jnp
addb
lret
imul
sub
xchg
lock
jbe
in
dec
xchg
sbbb
jae
sub
xchg
and
add
mov
dec
lods
movsl
lret
clc
push
xchg
and
inc
test
mov
sbb
and
add
lock
hlt
cmpsb
dec
add
push
xlat
lahf
cli
jne
sbb
push
sub
lock
loop
ljmp
ret
test
ja
loopne
test
or
rcrl
shl
int3
mov
adc
call
mov
sarb
pop
into
jb
repnz
loopne
mov
fsubrp
lcall
aaa
jo
sahf
decb
sub
jg
test
push
jnp
mov
sarl
in
fstl
rcl
mov
in
pop
fwait
mov
mov
pop
dec
fnstenv
jns
daa
iret
push
mov
incl
insl
and
cld
jno
ds
outsb
mov
sub
push
shrb
test
jae
cmpl
out
add
ret
sahf
xchg
push
mov
xorl
jb
cld
and
repz
mov
cmp
jmp
shlb
xor
test
test
frstor
pop
xchg
mov
jns
mov
out
pavgb
enter
sbbl
imul
leave
sbb
imul
push
ficoms
das
or
add
xor
and
sar
mov
cltd
mov
ss
sbbb
pop
xlat
mov
adc
cmp
ficompl
shrl
push
jge
sub
xchg
lahf
rcr
int
lods
push
pop
mov
divb
push
cmp
push
xor
xor
jmp
gs
or
jp
push
out
mov
repnz
sbb
addr16
push
cvtps2pd
cmc
cwtl
jnp
sahf
out
pop
rorb
test
cli
int
arpl
aaa
in
dec
test
imul
cmp
int3
jg
mov
cltd
sub
adc
push
dec
xor
and
push
pushf
arpl
pusha
or
mov
pop
fisubrs
dec
lods
pop
insb
jne
cmc
mov
mov
pop
notb
push
add
mov
sbb
insl
out
cs
mov
adcb
arpl
mov
and
int
sub
lahf
inc
test
fucomp
mov
and
test
mov
insb
push
clc
cltd
js
xchg
aam
sbb
cmpl
in
divb
xor
mov
mov
sbb
dec
lds
mov
insl
and
mov
or
push
or
fistpll
ret
fstps
stc
mov
lea
sbb
loop
ss
xchg
cmpsl
popa
out
adc
lret
add
scas
xor
pushf
mov
stos
add
jo
ljmp
insb
mov
jo
mov
mov
add
ret
mov
xor
inc
fldcw
lcall
pop
out
in
rcrl
imul
cmp
pop
lock
or
fwait
clc
das
push
dec
sti
in
movsb
xor
or
aam
cwtl
jae
rclb
test
jbe
aad
daa
mov
incb
js
push
out
fiaddl
bound
in
jae
imul
cli
push
not
lret
mov
jae
xor
sub
test
cld
dec
cmc
xor
mov
mov
push
loop
dec
repz
in
inc
pop
outsb
xchg
outsb
icebp
outsb
mov
dec
pushf
cmc
fisubl
out
shlb
xchg
dec
imulb
xchg
mov
inc
and
mov
rcl
addl
aaa
add
dec
gs
mov
lahf
mov
insl
cs
ret
xor
shrd
cld
mov
ficompl
dec
mov
sbb
sarl
cmp
dec
out
inc
pop
xchg
xlat
ret
xchg
mov
ss
sub
pop
pop
out
subb
dec
lret
or
push
mov
cmpsl
or
mov
scas
sbb
addb
cmc
mov
pop
in
and
or
dec
push
sbb
lcall
dec
lret
stc
jg
fdivrl
scas
add
dec
cmpsl
sbb
push
mov
aad
out
nop
jle
jge
loop
xchg
fdivs
inc
repz
pop
jns
out
push
fisubs
outsl
sub
je
aaa
aam
int3
int
fimull
push
pop
push
xchg
ss
and
loopne
cmpsl
clc
sub
push
mov
and
mov
stos
and
leave
test
addr16
pop
fimull
fwait
call
dec
call
test
nop
in
call
cs
cmp
pop
movsb
loop
pop
add
sbb
aaa
enter
push
dec
test
and
sti
push
out
shl
inc
sub
cmp
in
pop
arpl
out
push
cmc
dec
js
insb
mov
stos
xlat
pop
lret
js
cmc
sbb
cmp
subb
xchg
test
aam
push
aaa
pop
test
std
add
xor
enter
scas
dec
je
imul
out
bound
sub
hlt
push
fistps
cld
in
dec
and
scas
fcmovnbe
or
mov
test
popa
addr16
mov
adc
leave
xor
lea
js
pop
cmc
fistps
or
jmp
add
ja
adc
mov
fsubr
pop
add
mov
ss
adc
add
je
push
add
push
inc
adc
or
in
pop
fnstsw
or
mov
add
movb
daa
inc
sbbb
sahf
mov
scas
jns
cs
mov
sahf
sub
repnz
inc
pop
nop
mov
gs
cmp
jne
adc
push
loope
fldl
js
pushf
mov
inc
lds
orb
pushf
movsl
dec
pusha
adc
xchg
es
test
test
and
cmp
nop
pop
jmp
jae
leave
mov
fidivs
shlb
das
jb
lahf
and
shlb
adc
and
mov
dec
push
imul
out
and
js
lcall
mov
daa
and
pop
nop
or
leave
mov
or
mov
jecxz
push
rcrl
test
or
jle
rorl
fucom
adc
jb
sbb
mov
jb
jbe
clc
mov
popf
call
loope
sub
xchg
lea
add
or
bound
daa
js
and
lret
fisttpl
jne
jmp
inc
test
clc
lcall
dec
stos
in
fldl
adc
adcb
enter
add
subl
jle
test
mull
test
sub
xor
or
aaa
mov
mov
sub
loopne
mov
inc
icebp
xchg
loope
ljmp
addb
aas
sbb
psubsb
and
scas
cmp
or
xor
dec
vmread
mov
das
js
int3
hlt
mov
push
in
ja
xchg
cltd
out
sub
cmp
mov
jmp
or
pop
jne
in
sub
add
in
loop
push
inc
xchg
clc
pop
and
dec
sbbb
inc
lds
sub
cld
inc
xlat
daa
lret
repnz
push
or
jmp
insl
and
aam
aad
arpl
push
xchg
andb
mov
orb
rcll
mov
xchg
xor
xor
ds
aam
popf
cli
addl
fdivrs
mov
cmpsl
xor
je
sti
xor
mul
cmp
mov
int
xchg
scas
lahf
into
mov
test
cmpsl
aas
ds
lods
push
into
gs
shll
fldt
jge
cmp
push
or
mov
xchg
loopne
scas
xchg
cvtdq2ps
loopne
pop
xchg
loopne
lcall
sarl
push
adc
test
call
das
push
lahf
aaa
jmp
ret
mov
cmc
xchg
or
scas
mov
sarl
push
dec
jns
cmp
fiadds
js
push
jnp
mov
mov
into
dec
int
insl
inc
push
hlt
outsb
sahf
popf
pop
xchg
test
push
push
int
xchg
cmpsl
das
aam
inc
scas
mov
outsl
adc
or
cmp
inc
lods
inc
lret
lcall
test
inc
xor
inc
push
xor
add
cltd
mov
fistps
sbb
jno
aas
popa
pushfw
pop
mov
mov
mov
xor
cmpsb
outsb
cmp
shl
mov
jb
inc
mov
out
push
mov
pop
add
xor
and
mov
cmpsl
decb
arpl
das
lds
icebp
add
pusha
arpl
enter
icebp
mov
dec
mov
out
push
adc
mov
jg
mov
xor
loop
lds
adc
lret
xor
ret
cmp
lods
je
push
test
ficoms
xchg
mov
dec
daa
outsl
loopne
mov
jo
dec
mov
inc
xchg
mov
fcomps
pop
xlat
fnsave
and
add
xchg
cmp
out
mov
cld
neg
push
les
inc
xchg
sarb
test
loopne
sub
push
pop
jb
fidivrs
dec
mov
loope
pop
pop
mov
stc
mov
mov
cmp
push
call
addr16
pop
adc
sbb
mov
sbb
cmp
int
ljmp
cmpsl
and
lahf
mov
and
sub
push
pop
sub
adc
std
sahf
popf
test
loop
je
xchg
lock
mov
cmp
xchg
add
xchg
test
jb
stos
das
mov
jg
mov
add
negl
fwait
push
shrb
xchg
icebp
pop
out
jnp
nop
adc
int3
push
pop
xor
jg
jmp
mov
call
add
test
add
adc
push
das
fistpll
sub
arpl
cwtl
fmuls
fsubr
lret
arpl
mov
push
xor
ficomps
sti
xchg
mov
imul
push
cmp
push
pop
roll
iret
stos
mov
repnz
lods
call
popa
gs
mov
out
inc
or
pop
enter
ret
pop
repnz
xor
pop
repz
sahf
ljmp
imul
or
or
mov
sbb
stos
xchg
ficoms
test
int
jecxz
aad
sbb
repnz
mov
fcmovb
xlat
out
setle
das
movsl
lret
xor
inc
arpl
in
xor
je
out
sub
pop
mov
dec
cmpsl
fnsave
xchg
dec
pushl
pop
mov
push
in
test
out
dec
adc
arpl
xorb
ret
pop
xchg
sub
loope
flds
ficoms
sub
sub
add
mov
adc
cmp
add
and
jo
stos
adc
sbb
fsts
or
jns
mov
lahf
mov
popa
and
dec
hlt
inc
mov
and
dec
into
in
setne
xchg
shlb
scas
data16
pop
cmp
jbe
xchg
push
xchg
fidivs
loop
xor
mov
mov
jae
mov
mov
jb
mov
pop
aas
cmc
push
nop
push
popa
jbe
test
outsl
lods
jg
fistl
dec
push
in
pop
pop
scas
rcl
sbb
xchg
cmp
and
or
push
lahf
cmp
les
movsl
or
add
out
mov
or
call
xchg
xchg
pop
xchg
jnp
jbe
mov
cmpsb
sbb
xchg
push
adc
mov
push
loopne
mov
xchg
xor
stos
fistl
popf
mov
lock
push
imul
test
sub
mov
mov
incl
xlat
dec
mov
enter
pop
lods
popf
mov
push
clc
loopne
and
jmp
loop
cld
fwait
cmp
or
pop
xor
cmp
push
lret
adc
mov
mov
iret
addl
iret
mov
lret
jle
push
mov
lret
mov
add
and
or
ja
add
lea
out
sub
adc
loop
lcall
or
outsl
aaa
adc
mov
cmc
hlt
sub
xchg
subl
test
dec
repnz
sub
notl
sti
mov
xchg
xchg
fadds
dec
das
enter
lock
add
and
mov
cmp
gs
adc
je
loopne
pop
xor
mov
sti
outsb
fdiv
mov
daa
mul
adc
mov
in
mov
rcl
sub
test
daa
push
jne
sub
xchg
enter
inc
sbb
and
mov
testb
fimull
leave
mov
ret
popa
sub
sub
stos
sub
sub
jnp
in
xchg
pop
pushf
pop
mov
pop
xor
incl
aad
adc
aaa
inc
test
aad
movsl
out
jg
dec
aaa
xchg
push
std
push
pusha
mov
mov
adc
push
mov
cli
outsb
sbb
shlb
daa
xor
sub
ja
out
add
mov
mov
push
dec
xchg
jecxz
ja
dec
fs
add
rorl
lea
pop
dec
lea
outsb
or
lea
adc
xor
fistpl
aam
dec
mov
mov
sbb
sub
inc
xchg
lods
xchg
adc
shll
ja
outsb
orl
mov
sahf
sub
jno
int
jnp
adc
mov
ds
insb
push
in
push
daa
das
mov
bnd
clc
sti
les
cs
imul
mov
arpl
and
das
sti
loope
scas
adc
fmuls
adcb
outsb
pusha
pop
mov
arpl
cmp
push
push
xor
push
call
mov
dec
popf
cmc
jle
xchg
adc
mov
pop
adc
dec
out
test
arpl
jnp
cmpsl
cmc
sbb
xchg
sub
je
add
push
xchg
addr16
pop
subb
mov
cmc
mov
jl
mov
push
fisubl
xor
mov
adc
call
sbb
repnz
xlat
inc
lahf
es
jp
mov
cmp
jl
test
xchg
mov
neg
or
jno
inc
cmc
mov
cmp
sahf
mov
ljmp
shlb
lds
pusha
movsb
mov
dec
jle
jmp
mov
jl
les
outsb
cmp
out
adc
sbb
pop
dec
cmp
je
pop
fwait
xchg
and
jecxz
or
loope
or
in
mov
jmp
sub
leave
shll
popf
fs
mov
mov
enter
dec
mov
dec
test
movsl
jmp
mov
sbb
jbe
sbb
adc
cmp
dec
push
sbb
mov
cmpsb
push
xchg
icebp
xchg
sub
xor
adc
xor
test
pop
mov
xchg
cltd
inc
int3
popf
ja
cltd
loop
popa
or
mov
daa
cmp
lret
mov
mov
movsl
das
mov
cmp
mov
jmp
and
mov
or
inc
shll
subb
dec
xor
and
or
leave
int3
or
insb
in
mov
jno
ss
sbb
test
bnd
or
sub
into
insl
lds
das
adc
and
add
xor
pop
leave
sbb
hlt
pop
test
xor
push
cmp
aad
sbb
out
scas
push
fwait
push
cli
adc
mov
cmp
mov
dec
mov
xchg
mov
jmp
loopne
cld
sbb
inc
clc
cwtl
xchg
adc
mov
shll
inc
pop
test
push
int
lahf
jnp
addr16
xor
or
cmp
shlb
pop
dec
leave
inc
in
roll
test
into
cmp
jno
enter
in
loope
inc
mov
lret
jle
inc
mov
xchg
xlat
adc
mulb
fmull
push
xchg
daa
out
inc
aaa
jno
pop
pop
rorl
out
push
add
push
dec
jg
add
or
in
jmp
lds
stc
mulb
fisubs
shr
inc
or
aad
mov
andb
leave
hlt
push
std
cmp
dec
cli
adc
loop
or
mov
cli
inc
mov
xor
mov
sbb
data16
cmp
gs
ret
outsb
and
roll
lds
or
gs
sbb
xor
iret
xor
adc
push
repz
pop
enter
cmp
add
rcrl
and
les
and
loope
cmp
sti
or
mov
lods
adcb
sub
lea
ret
push
push
inc
add
xor
mov
das
lret
jg
mov
add
ljmp
sti
ljmp
pop
add
sbb
inc
fimull
push
out
aam
nop
inc
xor
movsl
pop
jns
into
stos
push
push
sbb
mov
mov
dec
cmpsb
dec
mov
outsb
das
ror
rcrl
mov
xchg
xor
movsb
adc
insl
cmpsl
and
mov
js
ja
mov
cli
mov
sarl
dec
rclb
xor
mov
dec
sub
leave
push
mov
sbb
or
jae
cmp
push
out
icebp
add
sbbb
in
xor
les
xor
shr
jnp
adc
int
dec
inc
dec
insl
adcl
inc
loope
mov
adc
cmpsl
jl
lock
cltd
add
daa
push
divb
add
xchg
xor
lds
scas
les
pop
outsb
in
jle
test
mov
push
scas
push
dec
test
push
in
dec
xor
dec
mov
pop
mov
pop
sbb
test
lcall
cmp
and
mov
cltd
mov
pop
cmp
add
nop
cmp
popf
mov
leave
outsb
ja
es
cli
hlt
in
popf
or
xchg
fwait
leave
test
shrb
add
adcl
dec
pop
fsubrl
mov
adc
arpl
push
jg
mov
cli
shll
out
inc
das
scas
cltd
lock
icebp
mov
pusha
or
scas
sbb
xchg
cmp
fdiv
into
dec
fstpl
andl
jmp
popf
aad
xchg
or
je
scas
js
or
jbe
ljmp
iret
gs
xchg
icebp
mov
mov
daa
lds
sub
loopne
cli
lea
fcoml
push
mov
xchg
dec
adc
xchg
mov
rcrb
in
and
int
pop
sbb
rcl
push
js
jg
jg
pop
dec
in
popf
rorl
ds
popf
fld
push
add
stos
ret
shll
or
popf
jl
aas
xlat
andl
ret
cmpsl
data16
and
mov
js
pop
sub
mov
jp
fstpl
psubsw
pop
or
cmp
movsb
outsb
mull
je
insb
sti
dec
xchg
and
dec
repz
jo
sti
mov
in
call
ja
push
inc
lock
out
pusha
dec
cmpsl
push
lea
dec
mov
mov
xchg
mov
lea
jge
outsb
dec
ds
cwtl
xor
mov
dec
jle
sahf
rolb
cli
ds
xor
sbb
jecxz
sub
dec
jbe
testl
pop
mov
jp
rcrl
pop
mov
dec
outsl
or
pushf
cmpsb
icebp
mov
lret
pop
idivl
push
ja
inc
add
sub
shlb
sbb
dec
xor
popa
in
ja
push
and
push
pop
pushf
xchg
jmp
mov
jnp
insl
push
adc
cld
ret
fsubrl
les
xor
mov
bnd
mov
dec
rcrb
aad
xchg
int
ds
ficoml
les
inc
inc
repnz
push
push
clc
stc
lods
mov
js
into
dec
sbb
xor
fdiv
ljmp
mov
outsl
fmull
mov
mov
jae
push
shlb
or
sbb
into
push
mov
loopne
lds
aaa
lcall
fisubl
add
jle
adcl
cld
ret
fstp
adc
xor
fadd
out
in
or
push
loope
popa
push
insl
adc
inc
cmp
cmp
int
fstps
das
pusha
call
sti
stos
lock
roll
lock
and
cmp
sub
lret
push
jae
and
mov
scas
mov
stos
adc
jns
lock
aam
add
cli
mov
popa
repnz
push
and
nop
add
test
inc
leave
repz
pushl
ret
out
xor
push
cli
pop
cli
mov
dec
outsl
sbb
aaa
mov
mov
pushf
lods
cmp
xor
dec
push
movb
or
movsl
xorb
lcall
test
aaa
call
dec
cli
fstpl
inc
pop
sub
loope
sbbb
movb
test
insb
and
clc
shrb
fst
enter
shr
test
mov
jp
call
cmpb
sarb
fdivl
ret
jo
jg
das
outsl
jmp
stc
loopne
je
imul
sbb
jmp
and
xor
insb
mov
je
pop
cs
ljmp
aad
jmp
mov
inc
xchg
or
std
inc
sbb
cmp
int3
cmp
pop
test
dec
push
pop
push
xchg
sub
fcompl
cmp
mov
push
fidivrs
pop
stc
jmp
loope
lea
sbb
imul
imul
pop
sub
sbb
mov
pop
jns
cltd
cmp
push
inc
mov
popl
cltd
mov
add
mov
or
lret
out
sbb
fsubrp
pop
cmc
jb
arpl
inc
mov
mov
lods
xchg
adc
movsb
and
loope
push
std
pop
test
loope
repz
lret
mov
xchg
jbe
fwait
mov
movsb
inc
popf
inc
push
cmpsl
out
mov
cmpb
sbb
xor
xor
imull
scas
int3
mov
mov
mov
cmp
inc
jmp
xchg
stc
push
leave
sbb
loopne,pt
mov
rorb
jmp
cmpsb
ret
mov
imul
ds
or
xor
and
outsb
ret
loopne
cmp
mov
jl
sub
jne
lret
xchg
ja
cltd
cmp
shrl
jbe
cmp
pop
mov
mov
outsb
xchg
cmp
dec
mov
out
lds
in
xchg
aaa
in
repnz
jmp
add
xor
sbb
and
xor
arpl
sarl
aaa
repnz
fdivl
mov
hlt
cltd
cld
cmc
mov
dec
add
inc
fsubr
popa
ja
scas
jmp
jmp
push
cwtl
or
lds
cmp
shll
in
fildl
ljmp
inc
in
add
and
enter
sbb
dec
faddl
xchg
add
arpl
je
sahf
adc
imul
loopne
lret
jbe
hlt
pop
in
aam
arpl
cli
cmp
testb
jmp
negl
inc
pop
ds
dec
add
mov
aaa
cmp
sti
push
xor
lret
cmc
push
add
mov
jno
fnstenv
enter
rcll
shlb
inc
movsl
iret
cmpsb
and
dec
out
enter
ret
jecxz
test
movsl
daa
hlt
mov
push
mov
inc
xchg
das
mov
xchg
imul
jne
inc
or
xlat
ds
jp
jns
pop
xchg
dec
jnp
test
inc
jmp
shll
mov
out
out
rcr
divb
pusha
or
add
mov
or
ret
sbb
push
aas
jmp
rorl
xor
outsl
addr16
push
shl
and
push
test
mov
lcall
mov
lea
ret
or
push
and
mov
pop
dec
pop
repz
leave
fbld
leave
push
xlat
repnz
xor
shlb
adc
mov
jecxz
popf
mov
rcrl
pop
jg
mov
cltd
frstor
xor
or
enter
das
xchg
add
or
pop
push
push
gs
sbb
push
mov
or
cmpsl
arpl
pop
cmpsb
mov
dec
loop
sub
xchg
ret
das
sti
xchg
dec
cli
call
lahf
sub
dec
pusha
mov
mov
jne
push
add
mov
mov
mov
imul
gs
cmpsb
mov
xor
fstpl
in
enter
xchg
pop
data16
out
mov
push
insl
push
push
pushf
xor
dec
inc
xchg
mov
adc
jo
sub
mov
scas
addr16
rcrb
insl
sbb
outsw
sti
outsb
jecxz
hlt
ret
cmp
imulb
out
out
lds
mov
xor
ds
dec
ss
sbb
or
xchg
fcmovbe
mov
pushf
les
adc
mov
lcall
sbb
adc
roll
out
xor
mov
sbb
out
dec
rclb
iret
stos
and
cmc
add
aaa
mov
inc
rcrb
sbb
notb
xlat
lahf
mov
daa
lock
xor
lods
ljmp
cmpb
or
sub
jns
inc
mov
dec
mov
xchg
movsl
popf
lcall
scas
addr16
push
mov
data16
push
and
dec
outsb
sbbb
mov
pusha
mov
push
aaa
sbb
in
cmc
iret
push
inc
punpckhbw
cli
rclb
sbb
inc
sti
xor
push
daa
out
ds
sub
adc
pop
pop
xlat
test
or
push
and
stos
xor
sbb
lods
dec
fstpt
push
cli
sbb
rolb
sbb
mov
addb
pop
gs
out
push
aas
mov
bound
sub
sub
addr16
push
lret
xchg
jl
iret
cmp
out
lods
mov
call
sbb
lock
or
mov
repz
xlat
into
sub
movl
cli
shr
mov
mov
xor
or
decl
lcall
pusha
sub
xchg
cmpsb
adc
add
ret
push
jbe
mov
clc
std
xor
hlt
inc
mov
or
mov
out
mov
cmpsb
les
andl
in
jmp
adc
and
pushf
ds
jae
pop
pop
jge
js
or
aaa
mov
ljmp
xlat
daa
test
xchg
add
mov
mov
adc
dec
mov
sbb
mov
arpl
ja
cmp
push
mov
out
dec
aaa
gs
rorb
stos
fwait
adc
jns
ficoms
push
push
jecxz
sub
icebp
aad
mulb
adc
fmull
cltd
inc
push
xor
test
add
inc
add
adc
mov
jle
jecxz
popa
pushf
data16
add
and
xlat
sub
or
out
shrl
imul
aaa
jl
in
ljmp
mov
loopne
push
movsb
movsl
adc
imul
mov
adc
lret
xchg
in
adc
roll
jae
adc
mov
jg
sub
es
pusha
cwtl
in
outsl
fxch
lods
sahf
int3
bound
xlat
std
cmpsl
ja
pusha
ds
loopne
sbb
push
jecxz
fcomip
test
fistpll
add
sub
flds
add
daa
leave
cmp
nop
lock
popf
in
pavgb
mov
sub
mov
add
pop
xchg
adc
xor
xchg
xor
pop
outsb
pop
out
enter
ja
sbb
dec
cmp
ljmp
sti
adc
aas
loope
xchg
xchg
inc
aad
jmp
and
pop
xor
lcall
xor
lret
std
jo
sbb
aad
dec
fidivl
in
mov
dec
xor
sub
mov
sti
jbe
xchg
cmp
shrl
inc
pusha
xchg
add
mov
into
enter
lea
add
mov
cld
dec
push
fcmovu
test
inc
lock
push
add
mov
ds
jle
idivb
pop
dec
test
jle
aas
pushf
leave
add
icebp
push
and
cmp
test
in
dec
popf
mov
sub
mov
outsl
jl
inc
sub
stos
loop
and
push
mov
cld
iret
leave
and
push
pop
shlb
pop
in
pop
arpl
mov
or
pusha
mov
or
subl
pop
vmwrite
pop
and
mov
repz
lds
add
jns
repnz
scas
jns
inc
in
popf
sub
inc
fs
in
pop
lret
fnsave
nop
push
pop
xor
pusha
out
leave
xor
ja
insb
stos
mov
aam
cmp
sub
fcomps
push
fnsave
or
int
fisubl
test
leave
xor
pop
xchg
add
xchg
inc
loop
enter
lret
ret
and
jns
lds
popa
dec
sbb
repnz
pop
lret
cmc
lods
jo
pop
push
imul
aas
mov
scas
lods
out
sbb
gs
add
add
adc
push
mov
aad
and
pop
or
cmp
adc
cwtl
pushf
xchg
std
jp
sub
in
sub
pop
pop
push
fs
add
fidivrl
aas
stos
cmp
repz
int
cmp
jle
call
cli
dec
xor
xlat
mov
lahf
hlt
or
mov
xor
pusha
xchg
hlt
and
lea
jns
push
iret
mov
ljmp
pop
mov
xor
enter
dec
call
pop
enter
xchg
add
jge
xor
es
xor
popf
repnz
call
inc
jge
xlat
sbb
mov
inc
cld
push
aad
jae
clc
adcb
fs
rolb
xchg
test
fnstcw
in
push
sbb
adc
fsub
jge
int3
lahf
fs
jne
iret
pop
stos
or
sbb
addr16
add
cmpsb
push
rcrb
add
inc
fsubrl
test
mov
adc
sub
lods
pop
imul
rcll
and
jae
jnp
push
jp
jg
add
push
xchg
test
cs
popf
scas
cwtl
xchg
lret
cld
mov
shll
cld
cmpsb
jp
sub
insb
aaa
in
jns
inc
fcomp
ljmp
and
jb
shlb
aaa
lods
fidivrl
addr16
mov
sub
pop
iret
daa
pop
int
mov
in
jo
ja
movsb
xchg
lret
cmpsb
shll
xchg
mov
hlt
das
pop
mov
sbb
inc
int3
push
push
mov
push
idivl
loope
movsb
add
jne
int
and
inc
outsl
js
jnp
lock
inc
jnp
adc
push
out
mov
int3
into
jg
cld
xor
add
pop
mov
aam
mov
pusha
lcall
push
jmp
jns
shll
fildll
push
inc
outsb
popf
stc
jmp
mov
inc
push
shlb
clc
mov
cmp
mov
pop
pop
add
jno
pop
cltd
mov
into
xor
jg
xor
push
stc
imul
mov
or
xor
sti
ret
call
xchg
jns
or
int
hlt
xor
inc
push
push
ds
fists
add
cmpsl
decl
lock
sbbb
sbb
jmp
jo
lcall
insb
aad
pop
sub
mov
std
or
arpl
mov
scas
pop
mov
ss
lahf
add
add
lods
push
scas
xchg
ret
xor
xchg
repz
das
lcall
or
les
loope
jmp
je
rorb
imul
repz
icebp
cmc
les
add
mov
jge
int3
push
or
dec
adc
xor
lahf
and
cld
dec
call
or
inc
mov
mov
sub
in
push
cmpsb
cmp
mov
adc
mov
and
sahf
loope
lret
sbb
adc
push
test
or
fisttpll
sahf
xorl
adc
mov
aam
mov
adc
mov
and
icebp
sbb
push
mov
dec
movsl
inc
inc
repz
xor
jno
out
repz
stc
pop
mov
ljmp
push
test
sub
add
push
nop
fstpl
jo
pusha
pop
cmp
sbb
xor
pop
jg
xchg
aam
xchg
xor
push
mov
mov
sarl
imul
rclb
xchg
lret
xchg
push
cmpsb
cmp
data16
ds
dec
enter
sub
cli
mov
cmp
dec
std
es
sti
push
hlt
jmp
hlt
sbb
int3
jle
repnz
in
pop
mulb
adc
insb
into
scas
sub
rcr
out
mov
icebp
repz
outsb
es
xor
popa
pop
leave
xchg
jp
sti
cltd
sub
addr16
shr
ja
or
mov
xorl
outsl
jg
aad
jmp
cltd
in
mov
outsl
mov
push
js
stos
jo
pop
mov
shl
pop
rcll
fstpl
lea
lret
mov
int
loop
cmpsl
pop
stos
xor
adc
imul
pushf
lret
daa
adc
lahf
leave
cmpsb
sbb
jg
jp
movsb
lcall
jp
ret
pop
outsl
push
jmp
mov
adc
shrl
imul
jo
shrl
jae
and
add
iret
andb
jne
mov
repz
or
jecxz
add
and
xor
pop
inc
sbb
insb
mov
inc
adc
imul
loop
push
adc
cltd
outsl
mov
jno
add
jecxz
mov
dec
cmp
aas
jnp
xor
xchg
and
pop
jg
push
jnp
cmp
rcrl
cmpsb
jle
in
test
sub
xchg
or
es
rcrb
xchg
push
jge
fidivrl
mov
push
jg
adc
ror
cmp
arpl
inc
out
mov
mov
xchg
dec
push
inc
or
jge
cmp
pop
mov
dec
mov
inc
push
push
xlat
cld
pop
push
pop
data16
scas
mov
nop
aaa
push
insl
jecxz
flds
pop
test
mov
jmp
daa
xchg
arpl
loope
fisubrs
out
sub
outsl
push
out
pop
sti
dec
cmp
test
fistps
inc
and
sub
cmp
outsb
fnstcw
shll
test
xchg
mov
repz
rclb
push
dec
and
repnz
shr
aad
loope
incb
clc
fisubs
ja
inc
in
outsb
scas
cmp
out
stos
sub
pop
push
leave
jecxz
add
fwait
dec
scas
mov
fdiv
ror
into
pop
pop
lods
push
mov
push
jbe
mov
fidivrl
pmaxsw
xlat
cwtl
and
cmp
xchg
fsubs
cmp
inc
jae
adc
adc
orl
sbb
icebp
pop
mov
push
add
fists
cmp
leave
out
mov
cmp
in
dec
cltd
popa
loope
sub
pop
and
inc
dec
adc
jg
push
test
jae
inc
divl
lahf
sbb
push
dec
outsl
push
cltd
push
push
decl
inc
push
adc
movsb
jg
shlb
dec
mov
sbb
adc
movsl
jnp
mov
sti
mov
add
out
outsl
jno
lret
adc
push
dec
sub
push
fmull
xlat
fadd
jg
aad
nop
sub
inc
leave
xor
mov
mov
push
hlt
aas
es
mov
mov
jecxz
cmp
aam
fldenv
pop
call
jb
xor
in
sub
aaa
sub
push
fnsave
mov
or
cmp
fs
test
and
test
jge
xor
shrl
sarl
jae
aad
mov
ficoms
mov
mov
adc
cmp
movsb
fldt
aam
clc
mov
inc
ror
sub
mov
mov
add
jae
out
xchg
dec
sub
xlat
pop
mov
test
pushl
push
sub
adc
je
dec
xor
adc
ljmp
pop
mov
pop
sub
inc
adc
or
cmp
icebp
mov
in
clc
popf
icebp
mov
cmp
dec
sbb
sbb
in
fdivrs
fs
sti
add
or
repz
lods
sahf
or
jge
ljmp
lock
out
lahf
xchg
dec
mov
adc
jae
jns
jo
mov
mov
xlat
or
jno
lret
stos
out
inc
xorb
ljmp
nop
mov
fwait
cmp
mov
xor
jge
movsb
mov
add
enter
or
out
outsb
dec
out
pop
pop
dec
jle
rcr
cmp
xor
mov
shlb
arpl
push
outsl
pop
jl
push
shll
inc
mov
in
or
insb
call
decb
pushf
das
bound
push
push
mov
jp
bound
lret
test
sahf
dec
mov
xchg
jge
push
sub
fwait
mov
pusha
daa
sub
outsb
add
in
push
into
inc
nop
xor
jl
adc
xchg
sub
test
cmp
push
xor
jmp
and
test
cwtl
mov
js
int3
out
jmp
push
lods
pop
loope
mov
add
dec
push
xchg
dec
fnstcw
cs
dec
cmpsb
mov
adcb
mov
push
push
aad
sub
dec
stos
sub
jns
add
mov
lea
stos
dec
enter
adc
fadds
xchg
insb
es
or
popf
stc
test
out
addr16
imul
or
or
call
push
pushf
flds
and
pop
dec
xchg
data16
mov
into
sbb
xor
out
cmp
ret
sub
jl
aas
jl
inc
lret
jmp
xor
or
jno
xchg
add
lods
jmp
mov
mov
mov
sbb
inc
inc
movsl
outsl
imul
mov
fistps
or
orl
bound
inc
test
xor
dec
adcb
leave
lahf
mov
sbb
xor
iret
and
fnsave
mov
das
sub
in
cmp
fsubrl
aam
add
stos
xchg
dec
sub
mov
fistpll
into
mov
add
fidivs
xchg
fcmovu
or
hlt
dec
sbb
xlat
ror
rorb
pop
das
mov
dec
popa
jmp
mov
push
negl
outsl
add
mov
gs
push
mov
outsb
mov
jl
gs
cmpsb
mov
inc
mov
push
pop
sub
mov
jne
mov
notl
imul
aas
popa
sbb
mov
and
xchg
sti
js
inc
lea
xor
push
out
jle
sti
lcall
ds
mov
rol
and
out
fbld
sub
dec
pushl
into
imul
mov
clc
divb
sbb
adc
mov
and
push
xor
or
adc
addr16
lock
push
xlat
sbb
add
fbstp
mov
adc
pop
sbb
jle
sub
push
cld
repnz
pop
dec
mov
cld
cmpps
push
jle
aas
or
xchg
mov
icebp
cmp
daa
xorb
and
imul
dec
adc
test
mov
xchg
loope
mov
cld
jnp
jns
adc
sarb
sub
cltd
and
rcrl
mov
push
push
ds
mov
inc
dec
xchg
cmpsb
sbb
push
iret
push
or
scas
mov
mov
mov
jns
dec
repnz
das
mov
fildl
xchg
scas
sbb
test
cltd
lcall
inc
pop
hlt
push
xor
add
push
cmpb
js
xchg
pop
push
outsl
iret
loope
insb
sbbl
cmpsb
xor
xchg
stos
dec
fsubrs
divb
push
mov
pop
or
imul
fisubrs
xor
packssdw
mov
ljmp
insl
sub
lcall
loop
push
xor
ja
mov
pusha
push
icebp
mov
dec
dec
pop
fnstcw
dec
les
fstpl
mov
fstpl
inc
popf
push
cwtl
xchg
mov
in
sub
add
dec
or
shrb
sub
jne
popf
jbe
push
mov
push
lahf
xor
sbb
xchg
cmc
rol
cmp
mov
sub
ss
mov
insb
fs
sub
mov
jl
fbld
popf
mov
push
jo
jp
stos
add
stc
stos
push
fs
xor
push
mov
pop
push
xchg
gs
imul
loope
scas
xchg
in
ret
cmp
daa
jp
cmp
lret
fsubs
mov
cmp
sub
jl
cli
mov
jb
mov
and
or
lcall
xlat
outsb
xchg
inc
mov
in
cmp
loope
dec
and
std
jl
cmp
sub
mov
leave
sub
aam
pop
mov
test
fistl
arpl
pusha
inc
push
add
insl
pop
movsl
cmp
cmp
push
push
cmc
xor
movsl
cmpsb
aaa
in
fildl
push
jmp
or
pop
push
inc
out
jle
sbb
roll
sub
std
cmp
daa
cmp
mov
mov
imull
into
repz
sub
and
jmp
insl
popa
mov
sahf
int3
adc
adc
pop
notl
adcl
dec
ds
sub
jne
test
dec
jle
dec
inc
adc
cmp
mov
pop
xchg
popf
jmp
pop
sub
cmp
push
loope
sbb
stos
out
sub
pop
jmp
in
mov
mov
scas
mov
add
push
pop
fmul
mov
loop
xor
inc
mov
and
data16
or
test
std
fdivrl
adc
fisubrl
andb
add
mov
mov
fdivl
test
bound
mov
push
lods
or
mov
mov
add
rol
call
call
push
rorl
cld
mov
jb
test
cwtl
ljmp
mov
and
rorb
sbb
jns
mov
jae
into
adc
and
out
push
inc
adc
outsl
inc
loop
jle
addl
or
fsts
push
aaa
and
out
lahf
dec
pushl
jg
dec
pop
xor
je
dec
dec
adc
xchg
aaa
aas
xchg
xchg
and
repnz
xchg
mov
mov
popa
adc
ret
sub
faddl
dec
xchg
idivb
jl
in
sub
dec
push
pop
sub
push
xchg
and
xor
dec
into
fwait
pop
jecxz
sbb
aas
pop
outsl
int
push
jae
sub
xor
adc
mov
cmp
int3
in
leave
adc
in
mov
mov
jp
inc
sub
push
jp
stos
and
sbb
inc
lds
jg
cmp
or
ss
xchg
add
rcrl
inc
jo
ds
lret
and
pop
jmp
int
je
dec
mov
lret
pop
cmpsb
scas
stc
das
testl
xchg
inc
insl
or
dec
push
aas
and
loope
pop
in
mov
push
lods
sbb
xlat
push
inc
out
out
push
mov
and
sbb
and
popf
jle
inc
pop
dec
dec
sbb
outsb
fcoml
movsl
mov
inc
jns
sbb
add
aas
mov
sub
stos
cmpsl
or
cmc
xchg
cmp
add
jne
stos
or
cld
push
aaa
dec
stos
cmp
and
sbb
mov
lret
aad
pushf
jae
mov
icebp
cwtl
ljmp
or
out
mov
pop
jg
rcrb
mov
xlat
inc
mov
ret
dec
mov
js
xchg
fsubrs
fs
addr16
and
imul
push
push
mov
adc
push
sti
lret
inc
dec
lea
lods
in
xor
mov
cmp
stc
jge
loopne
dec
mov
aad
sbb
je
aam
or
sub
sub
arpl
jmp
mov
pop
push
jbe
ficoms
loope
dec
inc
rolb
cmpsl
ror
lods
shl
xchg
ja
shll
mov
cmpb
ja
xchg
mov
inc
xchg
push
add
fsubl
ret
xor
fsub
sahf
icebp
out
nop/reserved
call
sub
out
lret
andb
sbb
fs
sti
dec
dec
test
push
test
push
add
shrl
insb
xor
test
into
mov
int
adcb
icebp
push
daa
xor
dec
mov
rcrl
test
add
out
cmc
sbb
jle
jns
daa
fistps
inc
lods
push
xchg
fisttpll
cmpsl
aad
in
movsb
and
into
push
and
dec
aad
mov
jmp
sahf
cmp
fs
pop
repnz
push
sbb
ret
in
push
cmp
orb
add
sbb
xor
mov
movsb
dec
inc
fs
inc
movl
loop
adc
push
int
xchg
icebp
dec
xchg
cmp
les
jne
repz
xor
js
xlat
int
dec
fisttpl
xchg
arpl
nop
jmp
push
fs
jmp
lahf
aaa
dec
mov
push
gs
ja
pop
sub
fsubrs
cmpsb
out
xchg
testb
shll
mov
pop
or
lret
ljmp
sub
jae
andl
das
xor
adc
js
add
push
es
fidivrl
jl
cmc
mov
mov
lock
sbbl
cmpsl
loop
js
scas
xchg
sbb
ljmp
cmpsl
notl
mov
xchg
fists
pop
mov
xchg
sub
daa
out
cmp
scas
nop
js
jmp
clc
sarl
movntps
dec
push
repnz
cmp
mov
push
enter
jae
push
jo
mov
testl
mov
data16
outsb
enter
and
sbb
fisubrl
jmp
sub
jle
adc
pop
pop
sbb
fstpt
and
mov
jmp
adc
xchg
lods
xchg
orb
mov
aaa
outsb
bound
mov
mov
insb
adc
or
mov
mov
push
lock
pop
ja
call
inc
jns
aaa
mov
xchg
fbstp
or
inc
enter
mov
xchg
inc
xchg
in
pop
addr16
idiv
sti
xor
dec
cmpsb
dec
mov
mov
je
sbb
pop
insb
cmpsl
mov
xchg
cmp
inc
mov
cmp
sub
test
mov
push
adc
mov
std
insb
mov
xchg
das
jns
xor
jo
mov
jno
arpl
sti
xor
in
fidivl
popf
ja
iret
mov
pushf
dec
pop
xor
jmp
pop
cltd
and
xor
enter
arpl
sbb
mov
imulb
addr16
in
jnp
cwtl
icebp
xchg
cwtl
test
and
mov
push
pop
sti
scas
dec
lea
lea
scas
rorl
pop
sahf
and
fadd
lds
lds
incb
je
mov
arpl
push
cmp
daa
aas
xchg
jecxz
lock
push
xchg
xor
subb
notl
inc
dec
jg
add
and
lret
leave
daa
jl
lea
inc
movsb
cwtl
inc
pop
xchg
sbb
not
xor
enter
aaa
inc
and
insb
cmp
aam
fwait
xchg
inc
out
mov
and
lock
jne
push
sarl
ds
cs
pusha
mov
movsb
popf
mov
enter
hlt
sbb
mov
cli
add
shrb
lret
fcmovbe
ljmp
add
mov
dec
cmovg
xchg
cmp
jns
add
sub
xlat
mov
divb
push
cld
xor
ja
stos
mov
jns
or
mov
xor
ud1
cmpsl
push
and
shll
lods
push
jge
stos
popa
dec
jnp
pop
lds
shrl
aam
outsb
push
jecxz
das
imul
dec
push
adc
adc
test
jns
mov
push
call
frstor
inc
or
mov
imul
sbb
and
and
adc
int
rorl
addr16
xlat
xchg
xor
icebp
adc
push
cmp
or
data16
loopne
cwtl
or
loop
daa
sbb
push
movl
push
dec
in
push
out
std
mov
xchg
imul
push
pusha
addl
int
xchg
xchg
daa
add
mov
adc
aad
or
out
scas
xchg
daa
out
lret
stc
or
aad
test
and
xchg
jl
pop
arpl
idiv
fstps
sub
sbb
jecxz
jo
and
ret
mov
or
movsb
lahf
arpl
mov
fistl
dec
nop
or
pop
adc
mov
add
adc
pusha
int
push
push
imul
scas
add
pop
mov
inc
scas
in
cmpsb
outsl
push
jb
lock
lret
test
mov
and
add
stos
dec
xchg
arpl
pop
mov
scas
out
sbb
jnp
dec
rcrb
jp
in
adc
add
jecxz
dec
aas
or
mov
mov
mov
and
cld
mov
jle
mull
dec
add
js
pushf
sbb
loopne
push
rcl
jge
adc
imul
and
cltd
mov
pop
repz
rorb
mov
lsl
inc
cmp
mov
aas
pop
mov
movsb
xor
cmpb
ja
mov
cmp
dec
and
mov
scas
out
jle
mov
mov
push
mov
call
pop
adc
or
or
shlb
inc
in
jmp
jecxz
lods
out
xchg
cwtl
ret
test
adc
bsf
sub
arpl
aaa
test
push
dec
fisubrs
cmp
sbb
and
mov
dec
ljmp
cmp
inc
ljmp
pusha
je
and
lret
and
jb
pop
notl
ret
daa
pushf
fsubrs
dec
loopne
shlb
sub
lahf
aad
mov
adc
sub
add
ret
das
pop
and
pop
movsl
outsl
fdivrs
jl
icebp
les
daa
fildll
lahf
punpckldq
jge
push
pop
inc
xchg
lcall
inc
mov
dec
or
aad
mov
sub
test
imul
push
add
add
xchg
in
pop
ljmp
ljmp
mov
out
leave
fwait
pop
int3
mov
imul
out
dec
lcall
xchg
repz
call
mov
jmp
cltd
sbb
jo
lds
sahf
mov
dec
add
mov
pop
push
clc
ss
sbb
lret
push
add
xchg
insl
add
cmp
jnp
loope
shrb
nop
leave
dec
pop
sub
movsb
cs
xor
mov
scas
adc
push
jb
icebp
fidivs
pop
pop
mov
and
and
dec
lds
push
adc
mov
inc
push
repnz
inc
and
ret
pop
cmp
and
pop
icebp
cwtl
push
cmc
call
adc
popa
ja
cmp
push
jno
jge
inc
push
sub
sub
repz
add
inc
notb
inc
cmpsb
and
dec
bound
iret
xor
outsl
ret
pop
cmp
push
jae
inc
lods
pop
xor
imul
shrl
mov
out
icebp
xchg
out
push
or
ja
pop
sbb
popa
enter
or
dec
out
in
sbb
testl
mov
negl
lret
mov
bound
mov
lret
ja
adc
jb
add
or
in
pop
shl
pop
xchg
mov
test
cli
in
jnp
push
mov
jno
sbb
in
mulb
dec
ret
push
jp
push
gs
xchg
and
es
aas
inc
push
add
pop
insl
in
lret
mov
out
in
mov
mov
std
sbb
xchg
int
aam
inc
pop
and
adc
lcall
test
int
jb
push
popa
jp
jno
dec
loop
pop
cltd
jo
lcall
add
orb
mov
xor
jmp
xchg
and
pop
push
dec
adc
cmp
cmp
or
mov
in
or
jo
cwtl
loop
mov
sbb
out
icebp
mov
lret
fmul
rcr
cs
clc
push
push
or
enter
mov
jmp
push
or
jns
push
aas
push
mov
mov
cmc
jl
add
sub
clc
lods
repnz
test
pop
jo
mov
cmp
call
add
loop
lcall
rep
mulb
fldl2e
cld
xor
leave
andl
cmp
jecxz
scas
iret
add
scas
pop
cmp
mov
mov
out
add
cmp
sbb
mov
pop
jbe
iret
adc
xchg
mov
add
mov
mov
pop
and
sub
lea
inc
inc
mov
pop
mov
into
out
mov
sbb
cmp
dec
fs
jne
xor
out
push
xchg
fdivrl
jbe
dec
stos
insl
adc
push
or
adc
pop
xor
dec
adc
inc
ficomps
pop
jnp
push
cmp
and
mov
ret
cmp
mov
ret
mov
or
int
push
fildll
lds
push
jl
mov
mov
repnz
and
xchg
lcall
pop
lret
mov
mov
movsl
mov
loop
push
inc
imul
repnz
or
repz
push
cmc
insb
inc
ds
mov
sbb
mov
arpl
lea
ljmp
pop
jmp
jmp
mov
xor
push
jle
push
loop
inc
mov
out
clc
mov
bound
mov
pusha
jmp
xchg
pop
push
xchg
popa
sub
inc
call
mov
insl
lahf
or
lods
add
mov
mov
test
insb
xchg
dec
mov
xchg
or
popa
sbb
pop
lock
popf
clc
imul
jle
fbld
xor
pop
push
sbb
and
mov
xor
out
dec
xchg
adc
cmc
xor
aad
lds
dec
lds
aad
cmp
xor
sbb
lock
shlb
fldl
shll
xchg
hlt
es
imul
mov
mov
sti
add
lcall
popa
fistpll
movsl
sbb
push
jb
popa
fdiv
iret
mov
pop
lods
psadbw
les
push
test
xchg
and
mov
xchg
ficoms
cmp
in
xchg
insl
decl
push
lahf
movsb
insb
fistpll
sbb
mov
push
adc
push
aaa
xchg
ds
icebp
leave
mov
les
call
inc
jle
sbbl
movl
out
inc
popf
repnz
jg
lret
pop
push
arpl
sahf
lret
jo
xchg
daa
add
cwtl
inc
jle
xchg
fmul
or
test
xlat
out
sahf
adc
pushf
shll
mov
cwtl
inc
inc
add
mov
ljmp
xor
out
sub
pushf
fnstsw
mov
mov
aad
test
lock
sbb
fimuls
clc
int
mov
dec
mov
sub
dec
ret
rorb
aas
shrb
add
orl
cmp
mov
and
out
dec
or
push
fisttps
sbb
cmp
out
xor
mov
lahf
mov
es
mov
iret
out
mov
sub
xchg
imul
sbb
cwtl
rorb
call
in
push
les
cmpsb
stos
mov
sbb
icebp
mov
push
xor
add
ret
in
add
push
dec
movsb
adc
fldl
outsl
xchg
aam
xchg
sahf
in
pop
or
add
xchg
in
cmpsl
mov
or
adcl
add
imul
shrb
cmp
sub
xchg
daa
mov
pop
enter
jg
push
pop
push
in
ljmp
mov
int3
mov
cmpsb
mov
fstpl
push
or
pop
cmp
ds
inc
xchg
test
or
mov
cltd
and
sub
frstor
inc
inc
aas
xchg
sub
call
cli
jb
testb
cmp
call
sub
pop
shlb
or
push
test
sahf
xor
bsf
sbb
cmovb
mov
test
mov
and
push
icebp
dec
aam
dec
dec
mov
sbb
fbstp
lods
lret
push
mov
negb
cltd
xor
and
add
out
adc
dec
aas
popf
xor
adc
add
call
jp
sar
inc
clc
not
pusha
xchg
insb
push
or
fstl
jmp
adc
ret
sub
add
mov
bound
jbe
adc
mov
lea
and
dec
xchg
adc
scas
mov
pusha
fstps
sbb
push
push
xor
inc
adc
loope
add
pop
xor
pop
xor
and
in
xor
loope
in
xor
test
jns
jg
push
push
test
outsl
pushf
ja
in
js
int
mov
sub
sahf
sbbb
jle
adc
lds
pop
or
mov
out
jbe
push
pop
andb
mov
inc
push
cmp
cmp
or
in
lcall
adc
fldt
mov
pop
fdivs
faddp
lock
in
nop
in
in
cmp
repz
scas
fyl2xp1
loopne
and
daa
mov
outsb
xchg
testb
sub
dec
test
lcall
adc
mov
add
xor
add
push
jne
in
popf
je
fldz
rolb
loope
push
cmova
cwtl
std
jle
ja
int
add
outsl
ja
mov
mov
inc
or
int3
pop
scas
xchg
xchg
and
sbbl
pop
mov
lods
insb
pop
out
mov
pop
sbb
add
fcoms
adc
addr16
call
andb
popf
xor
leave
adc
mov
ret
andb
fwait
cld
in
or
popf
ss
adcl
add
pop
push
cmpb
imul
and
das
out
mov
fcmovne
add
mov
jno
add
test
jecxz
aam
pushf
xchg
ljmp
mov
aad
cwtl
in
push
test
push
je
ss
clc
test
call
jbe
stos
movb
push
mov
icebp
sub
popf
cmp
cmp
out
fldt
sub
pop
pusha
test
cmp
and
mov
jo
xor
jbe
call
test
and
loopne
fisttpl
jnp
scas
mov
jnp
mov
fsubr
negb
dec
pusha
mov
push
fisubrs
cmp
inc
and
adc
fbstp
jb
cli
fbstp
les
push
sbb
sub
test
push
fnstsw
sarl
je
lds
xchg
enter
sub
add
aad
mul
jp
aad
push
push
sub
nop
adcl
shrb
dec
sub
push
rorb
stos
ret
xchg
pop
sbb
data16
add
lret
enter
dec
jns
in
push
call
stc
jno
adc
lret
shl
and
xor
adc
add
and
xchg
jnp
sub
adc
popa
jge
push
addr16
pop
or
or
lret
in
lret
outsl
push
fcmovu
sahf
out
out
or
adc
in
push
arpl
xchg
ljmp
xchg
pop
mov
push
daa
decb
pop
and
loope
dec
mov
bound
movsl
mov
insl
test
sbbb
push
mov
push
and
pop
adc
cmpb
mov
adc
bound
mov
xor
mov
out
sub
add
xchg
add
out
xchg
and
stc
in
and
xor
stc
push
cmp
lea
cld
pop
add
int3
jo
insl
cs
push
ljmp
fwait
cmp
sbb
mov
cmp
call
mov
push
movsl
out
mov
mov
sti
mov
xchg
xlat
pop
pop
ficoms
and
and
mov
test
jae
dec
icebp
leave
push
int3
cltd
aad
jne
adc
and
data16
xchg
dec
mov
pop
lock
inc
mov
int3
and
and
push
xlat
mov
sbb
inc
sbb
lods
mov
push
test
cmpsl
xchg
neg
mov
sub
push
int
lods
movsb
movsl
andl
jg
js
movsl
mov
adc
inc
jmp
sbb
outsb
stc
scas
sti
lahf
out
and
sub
popl
adc
pop
lret
pushf
sbb
mov
ss
xchg
iret
mov
pop
stos
and
mov
ss
fmuls
jp
jae
addl
sbb
or
or
xchg
mov
shll
and
nop
scas
stos
lret
dec
fdivl
repz
adc
les
inc
cli
inc
out
fsubrs
push
ret
jbe
dec
inc
js
push
bound
daa
mov
jmp
sub
dec
cmp
dec
push
and
das
pop
xchg
cs
loope
xor
bound
decb
std
adc
dec
xchg
cmp
jmp
lods
mov
hlt
or
rcrl
inc
xchg
cmp
sbb
jecxz
jp
cmp
and
inc
dec
rorl
sbb
ss
cmp
mov
push
dec
jne
jnp
std
leave
pop
scas
neg
mov
xchg
jmp
repz
test
jg
fstl
jo
cmp
aam
addl
lret
xchg
sarb
add
testb
call
fdiv
xchg
push
jbe
pop
mov
imul
and
lock
push
loope
and
lds
push
stos
pop
sbbl
mov
popf
lea
pop
aaa
lods
and
push
cmpsb
cmp
cmp
xor
fcmovnu
cld
mov
add
mov
loope
adc
jl
xor
push
sub
bound
loopne
push
dec
mov
jnp
pusha
jo
scas
hlt
jnp
dec
and
mov
cmp
dec
scas
outsb
fcomi
jbe
mov
pop
scas
adc
inc
scas
ljmp
add
repnz
in
dec
fisubrl
inc
or
lds
mov
push
dec
jp
mov
stos
jns
insl
stos
arpl
mov
sahf
das
pop
call
and
add
ret
movsl
xchg
pushf
xchg
sub
sbb
cmp
inc
pop
scas
sub
aas
ficomps
xor
xor
jo
fildl
cld
dec
stos
aas
fidivs
repnz
call
inc
into
daa
icebp
shlb
xor
ret
mov
pop
mov
sub
sbb
fidivrl
push
and
stos
or
dec
pop
out
pop
dec
fcomps
and
jnp
call
and
and
or
pushf
mov
test
xchg
or
fsubl
cmpsl
inc
insb
adc
lods
mov
dec
int
sbb
es
imul
pop
lahf
rcl
xor
pop
sub
aaa
xor
cmp
test
fimull
ja
cmp
mov
push
popf
fwait
ret
pusha
jmp
js
jno
leave
movsl
jno
and
pop
push
xchg
adc
scas
pop
fs
mov
bound
insl
ret
pushf
int3
nop
inc
frstor
pop
fsts
gs
dec
cltd
lret
jl
in
inc
movsb
and
fnsave
int
and
mov
mov
les
sbb
stos
addl
jl
inc
filds
push
fcmove
test
xchg
adc
dec
cmc
loopne
insl
in
cmp
mov
hlt
dec
mov
cmp
or
dec
xchg
leave
imul
mov
imul
add
icebp
std
adcb
jnp
mov
aas
pop
mov
sub
cmp
pushf
call
inc
jae
enter
pop
xchg
lahf
xor
pop
dec
fistpll
test
xchg
cld
dec
mov
xor
cmc
aam
sbb
mov
mov
and
sti
mov
and
je
repnz
or
mov
xor
adc
fmull
pop
jl
pop
mov
aad
mov
in
sub
xchg
mov
push
xchg
mov
mov
dec
sub
push
pop
pop
repnz
fwait
cmc
or
data16
pop
fisttps
xor
in
mov
and
mov
in
jmp
pop
call
js
pushf
leave
mov
aas
adc
mov
cmpb
and
mov
cmp
fistps
jnp
and
lods
int
fcmovb
cmp
adc
imul
sub
dec
mov
mov
shlb
in
inc
imul
xor
sub
in
mov
lods
dec
lods
cwtl
and
lock
repnz
xchg
sbbb
out
mov
xchg
add
mov
sub
jmp
lds
bound
push
mov
sarl
xchg
mov
ss
repz
cmp
test
inc
jo
scas
repnz
or
mov
sbb
push
sub
loopne
daa
loopne
cmp
mov
clc
jmp
cltd
mov
rcll
cld
test
fsubrl
inc
push
cmpsl
lret
pop
xor
and
inc
fwait
xchg
in
jnp
addr16
ja
clc
adc
pop
lret
push
cmpsb
aam
xor
inc
mov
jnp
sahf
sbb
iret
stos
mov
loop
and
pop
mov
mov
pop
jns
stc
sarb
push
dec
mov
push
and
inc
inc
dec
fucomi
jae
shrb
pop
leave
je
pushf
mov
cltd
addl
xor
jp
push
sahf
mov
out
push
jecxz
pop
push
push
inc
sahf
jmp
repnz
stos
orl
jmp
add
mov
inc
and
mov
shrl
xlat
arpl
mov
mov
and
out
loopne
fs
sbb
jnp
fisttps
pop
aaa
mov
sbb
pushf
es
add
sbb
jae
push
outsl
mov
into
and
fdivs
pop
stos
or
sbb
xor
cli
jge
xchg
pop
or
rolb
fsubs
mov
outsb
xchg
push
dec
sub
mov
or
andb
fildl
call
or
xorl
xchg
adc
lock
gs
aaa
movntq
sub
fcompl
ret
mov
fnstsw
lods
out
pop
cmc
fsubrs
xchg
cmpsl
dec
cli
std
inc
and
test
xor
pop
frstor
sub
mov
movsl
sub
cmp
idiv
movsw
leave
int
ljmp
mov
cltd
pop
jge
and
add
or
pop
repnz
mov
pop
jbe
jge
sub
pop
lea
sub
xor
or
dec
and
iret
repz
jmp
popa
test
aaa
cmp
cld
dec
dec
xor
jl
sbb
mov
push
lods
inc
xchg
and
push
jp
popa
inc
js
dec
jge
aam
mov
into
and
xchg
sarl
mov
clc
dec
push
push
daa
mov
and
push
or
mov
adc
dec
xor
push
sbb
jno
lret
or
cmp
and
lods
and
xchg
dec
mov
and
fwait
push
add
in
sub
ret
mov
ljmp
jle
xor
jle
mov
or
aaa
xchg
sbb
adc
jbe
rorb
mov
xchg
pop
fcoms
mov
sbb
divl
inc
add
inc
xlat
dec
ljmp
pop
mov
inc
test
push
jnp
das
fadds
pop
xchg
in
call
cltd
dec
ja
xchg
ja
add
cli
and
or
mov
loopne
mov
inc
mov
fucomi
inc
pusha
sbb
push
in
enter
add
call
daa
xchg
out
icebp
inc
movsb
xor
adc
ja
push
cmp
jne
add
mov
popa
out
push
or
das
lahf
pop
or
scas
mov
pop
add
insl
cld
mov
imul
cmp
out
inc
das
out
cmpsb
and
test
sbb
pop
push
mov
dec
iret
cmpsb
or
xchg
xor
mov
enter
xlat
push
cmp
test
push
pop
jge
les
sub
fwait
scas
loopne
adcb
ret
movsl
lods
add
inc
out
sti
push
mov
clc
incl
and
bound
lret
xlat
hlt
dec
jno
mov
or
subb
jge
fistps
sbb
mov
pusha
lcall
add
icebp
xchg
sbb
pop
push
pop
and
sbb
mov
ja
cmc
pop
cmp
pop
pushf
jle
int
int
ds
inc
xchg
in
mov
sbb
pop
shrb
cmc
pop
stos
mov
add
fsubrs
add
or
or
and
sbb
hlt
and
xor
dec
fs
ljmp
popa
jne
xlat
dec
jecxz
rcrl
fadd
lods
test
adc
pop
push
add
bound
pop
mov
sub
adc
addr16
mov
mov
mov
mov
or
sti
mov
std
or
sub
pushf
lret
ret
inc
clc
stos
fwait
inc
jne
iret
popa
dec
daa
xchg
sub
aaa
fnstsw
and
popa
add
sub
lea
mov
push
pop
test
lcall
add
subb
insb
stos
xchg
outsb
lock
mov
xchg
or
jns
inc
sub
sub
push
out
iret
test
lods
xlat
xor
in
imul
fnclex
push
inc
iret
pop
or
enter
xchg
daa
xchg
push
cmp
outsb
and
adc
and
test
jle
fwait
ja
cmp
jle
sbbb
jecxz
jmp
push
sti
xchg
fisubrs
mov
dec
and
fucomip
das
adcb
fbstp
orl
clc
pop
leave
pop
das
inc
xchg
inc
jl
push
aam
cmc
mov
out
dec
ficomps
rorb
pop
pop
test
bound
or
or
pop
icebp
imul
lods
mov
mov
cmpsl
mov
shll
loopne
out
dec
jg
cld
insl
sbb
filds
sbb
jle
shll
push
fdivl
stos
enter
push
mov
imul
sub
mov
inc
adc
stos
dec
inc
das
fistl
jle
sahf
outsb
jne
sub
cmp
and
addr16
cmpsl
frstor
or
xchg
mov
or
sbb
sub
fistps
jg
or
jb
adc
xlat
dec
adc
jo
xchg
sub
xor
dec
fwait
iret
jp
push
jmp
scas
mov
xchg
pushf
dec
push
inc
mov
mov
push
leave
arpl
sub
jns
dec
cld
aad
je
mov
dec
rorl
jl
lret
inc
adc
dec
js
mov
fstpt
sub
iret
and
mov
jbe
mov
decb
pop
jge
and
ret
dec
sub
fpatan
sbb
or
mov
jmp
pop
xor
mov
jne
repz
in
movsb
ret
mov
pop
sub
pop
addr16
lds
fwait
push
stc
cmp
push
or
xor
stc
nop
pop
incl
or
mov
test
and
out
fwait
dec
pusha
xchg
leave
movsl
ljmp
sub
rolb
or
std
mov
jb
xor
addr16
jae
scas
push
les
push
pop
mov
jp
sub
pushf
inc
push
mov
rol
mov
add
mov
enter
cmp
std
dec
xor
fs
cmp
jo
push
mov
xchg
push
sub
jle
adc
xchg
cmp
sbb
arpl
mov
lods
xchg
sub
gs
pop
push
nop
lahf
movsl
imul
mov
arpl
jno
add
jb
xorb
aam
jp
into
xor
rclb
inc
stc
add
mov
pop
pushf
notb
loopne
mov
cmp
cmc
mov
or
mov
add
lret
sub
or
jae
add
xchg
movsl
bound
lret
repz
repz
adc
hlt
dec
cwtl
jns
sahf
dec
push
ds
outsl
cmp
scas
jge
shlb
cmc
mov
popf
pop
mov
andb
cmpsl
and
push
roll
xchg
std
mov
adc
leave
lds
jbe
mov
inc
mov
dec
mov
dec
negb
lods
fwait
repz
jge
sub
xchg
repnz
ds
mov
std
sbb
jb
out
and
call
loop
mov
jecxz
cli
mov
pop
mov
adc
jns
pushf
aaa
cld
xorl
dec
loop
cmp
ret
in
pusha
adc
add
faddp
test
mov
or
cmpsl
dec
sub
test
dec
adc
inc
adc
sbb
insl
mov
lret
lcall
push
data16
cmp
adc
cmp
push
jmp
insb
fiaddl
jg
lods
mov
pop
in
jmp
daa
sub
aaa
aam
jg
jnp
in
ljmp
movsb
adc
push
push
xchg
int3
pop
aam
cmp
hlt
stos
cmp
mov
das
xor
sub
mov
or
test
mov
push
call
mov
jmp
shlb
xor
ret
cmc
jg
lock
or
pop
enter
cmp
sbb
mov
cmp
add
or
or
sbb
adc
mov
ja
sbb
hlt
adcb
sub
in
push
lahf
movlps
dec
push
adc
sub
jnp
dec
push
int3
bound
mov
leave
sub
cmp
insl
aas
dec
nop
adcl
aaa
shrl
clc
cmpsl
data16
scas
das
add
inc
adc
mov
xor
roll
xor
jnp
pop
xchg
popa
pop
cltd
push
cmc
negb
imulb
filds
adc
pop
enter
lds
js
daa
roll
stc
ret
enter
pusha
or
ret
or
mov
cwtl
roll
test
ficoml
shlb
in
test
mov
pop
mov
pop
cmpsb
mov
sahf
jmp
or
mov
nop
jge
push
push
stos
lret
or
aas
jmp
jno
out
mov
lahf
mov
push
stc
in
mov
pop
out
add
or
xchg
jge
pop
test
jae
mov
pusha
js
jmp
std
add
sbb
shrb
mov
scas
or
loop
push
std
fldcw
mov
cld
or
cmpsl
add
dec
data16
jecxz
dec
xchg
aaa
out
inc
mov
add
sahf
loope
jne
bound
notb
adc
and
jg
mov
cmc
enter
fstpl
lds
insl
cmp
mov
sub
rolb
mov
jg
ljmp
pop
adc
and
dec
adc
popf
sub
repz
lods
ret
shlb
xchg
insb
mov
cmpsb
xchg
aas
inc
cltd
stc
inc
pop
out
add
xor
movsb
add
mov
adc
jbe
in
inc
push
mov
inc
loop
cwtl
je
icebp
lret
mov
hlt
jbe
push
adc
clc
fadds
scas
into
scas
add
add
mov
mov
mov
aam
xor
cmp
cmp
mov
sbb
lock
push
fwait
mov
jnp
dec
jmp
mov
mov
roll
sbbl
sub
aam
jmp
cmp
or
jl
adc
or
dec
sub
and
and
out
add
dec
push
inc
or
add
fcoms
cld
outsl
ret
jecxz
rcl
jle
bound
sub
jnp
out
xlat
out
fwait
sbb
shl
decb
dec
out
jne
movb
xchg
add
iret
push
pusha
inc
jmp
xor
inc
sbb
adc
pop
mov
or
cmp
andb
loopne
call
movsb
rep
jbe
jb
rcrl
bound
cmp
and
into
jg
jne
into
lods
jno
mov
int3
imull
sahf
std
mov
push
push
pushf
loopne
inc
in
test
inc
leave
push
pop
rcll
sti
mov
inc
cmp
nop
mov
shlb
push
scas
leave
or
out
pop
mov
push
inc
pop
xor
jne
fadd
push
xchg
push
stos
imul
test
cmpsl
mov
nop
dec
in
fwait
leave
mov
ficoms
mov
pop
pop
sub
ja
and
or
ljmp
loopne
push
push
sbb
mov
or
outsb
and
es
int
fnsave
popf
mov
popf
ds
dec
fstp
sbb
jp
cmp
lods
out
pop
adc
cmpb
or
cld
mov
push
cmp
xor
lods
test
push
test
sub
dec
lods
inc
xor
and
adc
lret
mov
enter
pop
cwtl
mov
movsl
pop
jne
sarb
je
psrld
les
jbe
jb
bound
jp
pcmpeqw
dec
loopne
push
pop
push
pop
xor
imul
cmpsb
add
adc
jg
xor
dec
call
repz
mov
movsb
movsl
test
call
lods
test
out
adc
into
bound
xchg
stos
sub
mov
jnp
addr16
loop
pusha
mov
lea
cmpsb
mov
popa
cmp
mov
jg
hlt
xor
pop
mov
les
mov
jp
repnz
sbbb
shlb
stos
push
stos
inc
cmpsl
sub
pop
mov
cmc
xor
mov
mov
popf
std
shl
imulb
sbb
jne
mov
sbb
sub
mov
cmp
sbb
jle
dec
dec
cmp
sub
pusha
push
push
push
jge
push
popf
mov
jle
int
jmp
xchg
fisttps
dec
insb
bound
or
int3
cmp
or
and
out
xor
xor
dec
enter
mov
sarb
jl
and
inc
xchg
test
and
adc
mov
fwait
push
int3
mov
xor
int
mov
loop
out
adc
xchg
push
mov
int3
push
in
cmp
cmpl
push
pop
les
mov
push
cmp
lahf
shrb
dec
pushf
test
imul
jle
jno
dec
loop
lret
lock
jecxz
sub
cmpsb
mov
loopne
lahf
ljmp
aad
sahf
cmp
add
jns
cmp
mov
push
push
inc
add
pop
or
adc
pop
clc
sbb
mov
pop
lods
adc
stos
lods
mov
inc
xor
mov
test
andl
push
adc
mov
fisttpl
fldl
cmpsl
cld
mov
into
out
cwtl
addr16
jns
scas
ds
cmpsl
out
xchg
xchg
inc
push
xor
push
lods
imul
xchg
sbb
and
lahf
scas
ja
pop
mov
sbb
adc
ud2
leave
rcrb
xor
push
daa
push
lea
jp
rolb
lods
cmp
inc
or
movsl
jns
xchg
mov
outsl
or
lahf
fs
lahf
fmul
adc
popw
push
jl
scas
push
or
cmpsl
cmp
jno
pop
adc
mov
xor
jle
repz
sbb
mov
outsb
sub
and
fldt
incb
mov
pop
adc
mov
inc
cmp
push
ret
jo
dec
mov
fdivrs
xor
sub
add
dec
pop
or
and
aaa
ja
inc
imul
jmp
call
cmp
cmp
mov
fwait
out
cmp
movsb
sub
imul
xchg
mov
jg
xchg
test
clc
or
add
mov
mov
adc
test
xchg
adc
xchg
xor
xor
xchg
jp
adc
xor
rorb
stos
aam
cmpsb
es
sbb
in
insl
shll
data16
out
imul
sti
inc
jle
lds
ja
xorb
or
daa
dec
jp
xor
sub
inc
pop
xchg
lds
inc
mov
sbb
add
xchg
jns
outsl
mov
lahf
rorl
push
inc
test
adc
mov
xchg
jle
mov
std
add
push
data16
mov
xor
cmp
and
outsl
sub
sub
fwait
out
sbb
aas
test
and
xlat
outsl
fcmovnu
into
js
sar
aas
inc
sub
filds
add
rorl
pop
pop
pop
stos
aad
mov
out
aas
cmc
sub
jg
and
mov
jno
loope
ja
sbb
in
push
mov
mov
mov
jbe
sbb
out
fsts
adc
mov
mov
mov
mov
sub
and
sti
push
xchg
stos
fbstp
dec
js
insl
sbb
push
mov
mov
das
hlt
ljmp
cmpsb
insl
les
dec
subb
mov
sbb
xchg
xor
fmull
sbb
icebp
inc
mov
xlat
cltd
test
clc
push
popf
sub
shlb
pop
pop
nop
sub
mov
cmp
push
enter
add
lods
cltd
xchg
sub
jge
inc
repz
and
or
jnp
or
daa
repz
pop
mov
pop
jns
inc
jecxz
sahf
lods
sbb
xor
add
add
inc
fcompl
xchg
mov
repz
nop
movsb
mov
push
sbb
adcb
aad
fs
xlat
fidivrs
lock
inc
pushf
pop
cli
jmp
loope
sbb
push
test
cld
fadd
mov
outsl
testl
jp
add
mov
in
stos
repz
mov
jecxz
aam
jmp
and
xchg
pop
add
jbe
fistpl
dec
lds
cs
mov
rclb
push
xchg
jb
push
jmp
call
fldt
fcmovu
scas
movsb
popl
subb
jns
rcrl
push
cmp
adc
aad
jns
pop
shr
sti
aas
mov
sbb
inc
sar
push
jmp
in
cmp
inc
mov
pop
push
out
inc
cmp
out
jecxz
xchg
mov
mov
test
jbe
dec
enter
push
arpl
xchg
sub
nop
movsl
jae
inc
xchg
sti
push
mov
jb
add
in
cmp
test
loope
mov
add
sarb
sti
test
or
jno
xlat
notl
arpl
testl
inc
lea
sbb
mov
xchg
xchg
loope
nop
jbe
adc
xor
sub
xor
mov
pop
aad
dec
arpl
cmp
in
leave
mov
mov
pop
dec
aaa
mov
rol
repnz
ja
mov
inc
adc
mov
cs
sub
bound
sbb
sbb
jbe
mov
push
fcomps
fsubr
stos
mov
inc
fisubl
stos
popa
xor
dec
shl
cmp
push
push
pop
jg
jnp
xchg
scas
out
cli
jle
roll
shll
push
insb
test
xchg
negb
adc
roll
and
test
jae
add
imul
jmp
je
pop
add
imul
mov
and
and
cmp
pop
cltd
scas
dec
cmp
sub
fistps
pop
inc
fsts
mov
jl
ror
mov
cmp
xchg
xor
adc
clc
push
out
pop
add
and
cs
xchg
sub
push
mov
mov
cld
dec
fidivrl
call
push
xorb
mov
sub
jb
and
and
mov
jle
xor
jg
mov
sub
insb
mov
fimuls
add
sub
sub
fwait
test
push
pop
adcb
cmpsl
adc
pushf
or
aas
lcall
jne,pt
lret
jmp
sub
hlt
lods
mov
xor
jne
jg
fsubrl
sahf
push
aad
movsl
adc
fisttpl
out
and
or
push
xor
jno
cld
mov
fiaddl
test
cmp
xchg
test
les
or
fs
movsb
popa
mov
mov
ss
cmp
jge
inc
je
imul
pop
pop
aaa
and
mov
nop
fisttpl
test
imul
lock
adc
sbb
mov
repz
pop
fwait
addb
pop
mov
and
mov
sti
in
ljmp
pusha
fmuls
jge
sbb
dec
fs
add
out
sub
add
pop
push
dec
xchg
fiaddl
iret
push
mov
std
mov
cmc
cmc
fidivrs
push
dec
fwait
ljmp
je,pt
jg
sbbb
mov
xchg
add
sahf
xchg
pop
pop
pop
inc
stos
js
fcoms
dec
cmpsl
inc
pop
test
push
mov
jecxz
jns
mov
mov
mov
clc
fisttps
ljmp
pop
mov
sub
andb
dec
in
mov
adc
cs
cmpsl
xor
jb
xchg
mov
and
fbld
loop
bound
or
imul
outsl
adc
rcrb
imul
adc
stc
adcb
jg
xchg
push
jnp
loop
push
push
int
repnz
movsb
dec
mov
ds
leave
lods
dec
push
pop
lods
test
stc
sbb
nop
aam
aaa
cmp
jle
into
push
dec
popa
pushf
push
dec
add
inc
out
daa
inc
out
xchg
add
in
testb
jge
adc
xchg
cltd
popa
inc
imul
rcll
pop
lcall
push
shl
out
push
sarl
iret
insb
hlt
daa
cltd
sub
push
jle
lock
ret
pop
in
jge
mov
jmp
dec
xor
hlt
push
insl
push
and
adc
lahf
push
sahf
adc
into
ljmp
xor
repz
sub
loop
add
push
pop
push
loope
jmp
scas
jae
jns
orb
aam
movsb
dec
mov
jecxz
lods
nop
lock
dec
push
cmpsb
jno
fwait
jno
or
lcall
xchg
lods
xlat
les
das
dec
push
mov
adc
pusha
xchg
adc
test
das
repz
loopne
mov
fcmovbe
adc
das
inc
push
mov
or
gs
mov
add
xchg
mov
xchg
mov
stos
dec
inc
pop
filds
jmp
pop
cmpsl
stos
lea
popf
std
jmp
cmp
test
fs
add
shl
adc
sub
inc
or
lea
cmp
push
hlt
std
xchg
pop
dec
add
or
pmuludq
adc
jo
cmc
fiadds
push
jl
daa
inc
pop
xchg
stc
and
cmpsb
outsl
into
and
les
cltd
les
xchg
cmp
sbb
and
push
pusha
fidivl
mov
mov
mov
or
xchg
dec
movsl
push
push
mov
adc
les
sub
imul
inc
mov
sbb
xor
pop
mov
mov
fld
arpl
popa
adc
or
and
add
xor
pop
mov
das
lcall
mov
cmp
push
xorb
test
mov
dec
push
mov
test
jns
data16
xchg
jnp
xchg
mov
scas
or
sbb
push
adc
gs
sbb
ficoml
xor
orl
mov
xor
push
push
adc
cmp
jle
mov
jbe
jl
xchg
cld
clc
sbb
cmp
mov
sub
jg
fdivs
je
int3
out
jl
lock
fildl
or
arpl
fidivs
test
test
loope
leave
mov
jmp
xlat
cmp
test
arpl
pop
imul
mov
mov
ss
test
xor
pop
int
cmpsb
xchg
int
inc
sahf
mov
mov
ret
add
and
in
das
addl
mov
sub
push
push
dec
pop
scas
cmp
aad
movsl
lcall
out
cmc
pop
push
jb
xor
rcl
add
mov
or
test
gs
aas
and
inc
pop
pusha
test
jmp
push
add
mov
and
imul
sbb
das
jp
cmpsl
adc
mov
stc
dec
add
pop
sub
push
xchg
and
xor
ljmp
test
dec
into
mov
push
or
cld
rolb
sbb
mov
jl
jae
test
jo
pop
xchg
cmp
rorb
push
mov
dec
mov
lods
lock
mov
loopne
stc
jb
mov
jne
sub
jnp
daa
ffree
into
inc
lods
xchg
or
mov
push
xor
ljmp
dec
fdivl
daa
pop
or
dec
cmpsb
mov
daa
mov
andb
dec
ds
cmpsb
test
and
stos
sbb
ror
movsl
outsb
sub
sub
dec
sbb
pop
cmp
sbb
cmp
mov
inc
outsb
add
pop
es
das
mov
lds
inc
mov
sub
ret
lds
jae
cmp
jae
mulb
xor
enter
pop
or
shlb
jg
arpl
int
cmp
cmp
mov
xchg
addr16
jnp
jecxz
and
out
rol
xchg
xor
xor
sub
sbb
pop
out
imul
popa
popf
cmp
xchg
jno
xchg
jl
inc
lds
xor
push
lea
inc
dec
rcrl
aam
repnz
cmp
fwait
lret
and
mov
mov
scas
test
dec
out
mov
fisubs
shrb
movl
jb
jns
xchg
daa
aaa
in
fistl
pop
out
mov
lock
in
adcl
dec
ret
lock
lret
xchg
test
loopne
xor
mov
mov
jecxz
nop
cmpsb
std
pop
jae
outsb
sub
or
pop
pop
sbb
add
outsb
add
cmp
ss
outsl
into
sbb
jo
xchg
add
je
jg
adc
jp
pop
pop
xchg
stos
inc
cltd
stos
or
jae
mov
pop
fidivrs
outsb
daa
movsl
inc
cltd
dec
adc
add
and
or
and
and
outsb
xor
js
xchg
test
lods
call
adc
sbb
add
std
adc
hlt
cmp
in
mov
ret
dec
lods
call
sbb
cwtl
pop
aam
jmp
sahf
push
cmp
or
pop
pop
xlat
jle
dec
sbb
lret
pop
test
cmpsb
mov
das
jo
test
lret
mov
loopne
sbb
loopne
lods
lods
imul
stos
cmp
jmp
je
pop
push
mov
sub
pop
or
xlat
xchg
cmpsb
andl
fisubrs
sbb
stos
fdivrs
or
inc
notb
ja
push
mov
mov
push
repz
mov
push
pop
push
pop
lcall
movsl
cld
pop
xor
daa
jl
ss
subb
push
mov
fs
pop
sbb
testl
lea
out
shlb
das
push
jbe
add
in
push
lods
daa
iret
xchg
push
jg
imul
leave
outsb
lcall
adc
sub
fstpl
cmp
stc
idiv
inc
mov
stos
rclb
hlt
inc
into
repnz
test
insl
loop
adc
lods
adc
and
or
inc
mov
sarb
insl
out
mov
jl
into
fiadds
pop
stos
push
mov
faddl
call
adc
adc
push
inc
fisttpll
mov
mov
test
inc
pop
pop
lahf
popf
int
or
scas
add
in
lea
dec
mov
je
inc
xor
lahf
stos
cmc
popf
or
xchg
insb
sub
jp
push
jb
outsb
ss
es
jno
mov
or
cmpsb
popa
inc
jp
negl
outsl
nop
pop
mov
add
mov
repnz
pop
jo
add
or
scas
add
mov
pusha
es
push
in
cld
or
push
cmp
jno
mov
and
mov
mov
fwait
push
fistl
pop
ds
call
mov
mov
iret
sbb
xor
sbb
insl
and
icebp
loopne
mov
sub
push
cmc
xchg
lock
xor
insb
popa
mov
loopne
pop
mov
sbb
sub
xor
xchg
sti
imul
data16
or
movsb
mov
sbb
or
push
xor
das
push
fcmove
adc
fwait
rclb
jbe
xor
push
push
stos
inc
into
inc
rcrb
and
ret
hlt
add
and
pop
hlt
or
xchg
pop
rolb
loope
fnstcw
mov
cmp
cwtl
inc
sahf
lods
and
lret
sti
sub
lods
mov
shll
sahf
aam
mov
pop
fwait
mov
push
in
inc
mov
loope
idivl
xchg
or
negl
lea
sub
push
or
imul
cli
dec
pop
sbb
mov
add
add
mov
dec
mov
inc
jb
mov
mov
dec
loopne,pn
insl
imul
in
into
mov
sub
xchg
std
or
mov
xor
outsb
xchg
add
cmp
xor
jne
out
dec
leave
lods
ljmp
jae
lds
xchg
inc
mov
inc
sbb
mov
pop
call
and
xor
cmc
dec
daa
aam
sub
adc
push
movsb
in
push
scas
push
jecxz
xchg
mov
or
xchg
jnp
push
push
scas
mov
je
in
mov
aad
jnp
jmp
and
fildl
dec
je
mov
mov
loope
jecxz
mov
inc
adc
outsb
test
arpl
mov
xor
mov
out
mov
push
rcl
inc
add
nop
or
adc
popa
mov
mov
out
inc
ja
fists
enter
inc
adc
and
jmp
loope
iret
mov
out
add
sub
in
out
enter
mov
xor
push
sub
cmpsl
arpl
mov
jg
sbb
lods
es
mov
insl
jl
pop
xor
or
loop
ret
ss
mov
ret
ja
pop
jl
leave
shlb
test
mov
mov
rorl
cmpsb
dec
sub
adc
push
mov
stc
test
dec
stc
in
out
ljmp
ss
into
jae
xchg
fwait
ret
push
insb
mov
js
sahf
gs
push
lock
mov
cmp
ss
test
leave
xor
inc
loopne
mov
jmp
fstcw
scas
cli
add
pop
xchg
adc
push
repz
inc
xchg
cmp
scas
pusha
push
sub
std
xchg
lret
xor
pop
cwtl
sbb
mov
mov
adc
in
icebp
add
push
jmp
adc
ds
fnstenv
imul
test
imul
or
outsl
dec
stos
xor
cmpsb
xchg
test
sbb
xlat
inc
fs
mov
sub
xor
in
cmp
sub
and
mov
jae
xchg
movsb
leave
dec
test
std
jl
adc
push
sbb
jmp
movsb
outsb
pushf
lahf
into
mov
sub
dec
in
daa
inc
jae
jge
movsl
addb
movb
mov
pushf
adc
iret
pop
scas
lret
cmp
jbe
mov
test
loopne
rcl
xor
cmc
mov
mov
add
adc
sbb
sbb
int3
jae
pop
xchg
adc
push
test
inc
xchg
loope
lret
sahf
insl
insl
pop
xlat
pop
add
sub
icebp
xchg
int
jb
scas
add
jl
aam
xor
mov
and
jecxz
mov
or
outsb
sub
fsts
jno
add
push
andl
jns
dec
loop
mov
xchg
pop
sbb
jge
cmp
and
pop
pop
add
aas
adc
repnz
sbb
inc
mov
cmp
mov
adc
adc
inc
add
lret
imul
cmpsl
loopne
fwait
sarl
divl
cltd
aas
fwait
xchg
cmpsl
push
insl
fnstsw
pushf
add
inc
cmp
mov
fldcw
pop
lods
loop
dec
mov
push
shlb
lcall
test
ficompl
call
hlt
mov
inc
add
movsl
inc
gs
cmp
or
in
cld
mov
cmp
xchg
and
mov
loop
mov
dec
sub
test
xor
mov
mov
fcoml
dec
push
xlat
push
push
in
pusha
or
pop
sbb
imul
frstor
jo
or
repz
jb
das
inc
mov
inc
outsb
sahf
add
adc
leave
ds
lds
xchg
sub
mov
mov
addb
push
push
addr16
sub
cwtl
xor
scas
adc
jp
pushf
cli
jne
nop
mov
popa
ret
sbb
sahf
mov
sti
pop
xlat
popf
int3
fadd
in
data16
sub
pop
jl
push
inc
sbb
jno
push
xchg
mov
pop
sub
push
cltd
push
stos
insb
bound
dec
call
xchg
ss
out
fimull
js
add
mov
xchg
out
add
fistps
mov
adc
cld
push
pop
mov
mov
lock
fadds
dec
fcmove
cmp
jno
sub
push
loope
out
ljmp
pop
fmull
lahf
pop
push
aas
sub
test
push
sahf
cmp
jne
jecxz
in
lock
add
pop
push
aad
cli
and
rclb
sub
leave
std
adc
ret
jo
xchg
mov
dec
cmc
aaa
rolb
aas
ficoml
sti
call
popa
fstpt
aaa
mov
cmp
mov
jnp
ds
or
je
mov
out
sbb
cmpsb
repz
ficoml
notl
lahf
mov
push
in
gs
test
and
adc
push
pop
lock
insb
in
push
das
out
cs
lods
xchg
jnp
xchg
add
or
add
stos
sub
fcomps
push
ljmp
jge
shrb
xchg
or
jbe
or
xor
inc
mov
push
ficompl
and
in
mov
lcall
xchg
mov
in
mov
pop
ret
dec
vpunpckhdq
daa
add
mov
pop
pop
into
pusha
loope
fisttps
push
jecxz
dec
dec
clc
push
sahf
loopne
scas
jb
pop
std
lea
call
jno
data16
dec
xor
fmull
lret
into
sbb
sbb
rorb
popa
lods
les
in
sbbl
rcll
cmp
and
pop
test
mov
sub
scas
xchg
iret
dec
mov
inc
xor
lcall
ljmp
xor
das
gs
pop
fiadds
jnp
lcall
test
sbb
dec
inc
cmp
or
adc
ds
popf
cs
popf
cmpsl
lock
roll
imul
jg
call
mov
mov
mov
and
je
lds
mov
xor
xor
pop
out
xor
sub
sbb
gs
insl
and
push
xchg
insb
out
incl
icebp
fisubrs
inc
jb
jle
sub
pushf
pop
xchg
push
mov
bound
adc
xor
popa
inc
out
inc
shlb
jmp
lods
or
clc
test
jnp
sub
hlt
xlat
out
mov
inc
inc
repnz
mov
sbb
leave
dec
add
add
xchg
cmc
add
cltd
jl
icebp
pop
xorl
cwtl
xchg
sarl
pop
and
rclb
lret
rcr
rcrb
filds
bts
test
inc
aad
dec
lods
ja
ds
sbb
dec
lods
adc
dec
sub
mov
mov
std
insl
push
addr16
popa
xchg
call
and
scas
cmp
push
jb
mov
insb
out
xlat
inc
or
daa
or
je
or
fs
in
pop
in
mov
mov
lcall
and
push
lds
int
into
pop
add
icebp
insb
push
roll
inc
jecxz
dec
das
xor
mov
gs
adc
add
roll
push
and
mov
pop
sahf
sub
rcrl
lods
leave
mov
mov
push
bnd
sub
popa
cmp
mov
mov
cmpsl
jb
ret
test
repnz
sbb
cmp
cmc
xchg
xchg
jae
sbb
lret
xchg
hlt
loope
push
cmp
xchg
inc
sub
sub
sbb
ficoml
imul
mov
mov
dec
repnz
std
push
fdivl
or
rolb
mov
fildl
subl
lret
stc
jmp
pusha
imul
add
inc
int3
push
rolb
fadd
movsb
fimull
std
mov
mov
int3
jae
pop
add
pop
icebp
cli
sub
xchg
jmp
sub
mov
pop
sbb
ret
shrl
je
or
jecxz
in
jne
fstpt
inc
mov
mov
push
mov
test
xor
mov
pusha
jb
mov
jns
lea
push
andb
xchg
cmpl
mov
out
cmp
mov
sub
pop
adc
insl
cmp
lods
out
std
dec
inc
insb
cltd
xchg
mov
pop
nop
dec
pop
add
jl
loopne
pop
xchg
insl
mov
ja
gs
es
mov
add
jecxz
cmp
xchg
in
jl
dec
je
mov
pop
jnp
sbb
cmp
sbb
mov
jp
sahf
sahf
test
cwtl
sub
sbb
stos
shlb
in
jo
pop
mov
xchg
jne
sub
push
arpl
inc
pop
leave
and
std
xor
out
sub
fiadds
insl
lods
mov
rcrb
jb
fcompl
pop
mov
loopne
lcall
push
pop
imull
sbb
lods
add
or
xorb
lock
or
push
sub
shlb
jae
scas
sar
aas
cmp
add
add
in
icebp
mov
or
nop
xor
add
fwait
and
insb
je
cmp
xchg
sbb
dec
inc
stos
push
pop
mov
mov
repz
ret
and
fsubl
arpl
inc
inc
and
jle
mov
push
xor
dec
data16
adc
and
insb
rcr
loope
sarb
ss
test
or
or
mov
xlat
xor
adc
cmp
cmp
jne
xor
ljmp
mov
in
ljmp
insb
sbb
das
sub
mov
subl
divl
jno
jmp
add
mov
dec
or
xor
or
addb
andl
sub
addr16
mov
fmull
cli
fldcw
and
mov
pop
cmp
mov
test
add
jne
jbe
sbb
pop
mov
pop
jae
jecxz
push
icebp
sarl
cmc
pop
dec
test
xchg
rorl
cmc
dec
aad
pusha
movl
cld
add
push
dec
pushf
and
cmp
lea
dec
sti
jg
mov
popf
lret
ljmp
sbb
jne
push
cli
loop
xorb
fcoml
pop
ret
sub
je
push
fs
lret
cmc
cli
add
cmp
pextrw
cltd
cmp
mov
add
loopne
mov
mov
jle
fadd
cmp
lods
addr16
mov
xchg
jb
mov
cwtl
push
cmpsb
or
pop
sbb
aad
cli
pop
xchg
push
fs
filds
xor
adc
aad
add
in
fstpl
push
shlb
orl
mov
or
int3
lds
ljmp
pop
mov
lret
pushf
mov
jo
fcoml
sub
push
nop
push
xor
xor
and
pushf
mov
xor
pop
or
fistl
sub
inc
or
fldcw
sub
and
jo
jae
paddusb
or
mov
adc
mov
inc
and
jnp
in
mov
jb
xor
je
jne
das
jp
jle
pushf
outsw
repz
inc
and
inc
xchg
addr16
in
out
nop
add
push
out
push
es
lret
imull
std
pushl
lcall
sti
rcrl
iret
sub
call
movsl
xor
in
push
adc
loopne
jno
or
ret
rcrl
inc
xchg
and
cli
or
push
lods
jg
repz
testl
aam
inc
movsb
movsl
lea
stos
clc
jmp
andl
xchg
or
xchg
movsb
sbb
push
pop
popf
lds
xor
dec
jle
test
and
mov
xor
cmpsb
xchg
or
sbbb
mov
mov
popa
in
jge
push
addb
adc
cmp
jo
push
movsb
mov
imul
and
xrelease
test
dec
xlat
xchg
push
sahf
lods
les
mov
xchg
insb
pop
or
lret
dec
sbb
outsb
test
cmp
fisttpll
xchg
fstpl
cmc
inc
ficoml
rclb
mov
adc
das
inc
popf
jb
aad
imulb
outsl
jo
mov
cmp
in
cmp
sarl
repz
repnz
outsb
into
mov
rol
sti
add
ds
mov
lret
dec
hlt
or
jp
mov
xor
jg
addb
mov
pop
lods
jecxz
xchg
push
mov
fnstsw
cli
mov
fistpll
pop
movsb
repz
xlat
pop
lods
sahf
andb
jecxz
push
cmp
adc
inc
mov
add
jbe
arpl
dec
xor
inc
xor
xor
fwait
sub
pop
in
imul
popa
lret
xor
cmp
xchg
sbb
add
dec
rcll
pop
inc
adc
mov
mov
pop
in
aas
mov
push
push
test
cmpsl
fidivs
pop
loopne
inc
inc
insl
jge
das
push
std
insb
lods
or
jne
mov
scas
mov
push
push
sbb
fsubs
insb
repz
push
jge
leave
aas
in
mov
mov
icebp
push
call
out
jae
stc
imul
and
int
sbb
pop
aas
movsl
dec
xor
clc
cmp
imul
xchg
popf
inc
mov
add
mov
sbb
xchg
iret
jbe
lahf
mov
mov
dec
xor
mov
jmp
mov
sti
in
cmc
ds
enter
inc
pop
adc
cwtl
jg
xchg
push
sbb
lods
js
ds
jp
in
xor
lahf
int
stos
pop
mov
lret
mov
lret
push
adc
test
mov
shrl
jo,pt
into
or
aam
and
ds
incl
dec
cs
inc
add
mov
in
pop
lods
insb
fidivrs
shlb
mov
scas
xchg
and
lcall
jle
dec
test
f2xm1
std
xchg
jmp
sarl
adc
pop
mov
fstpl
sti
mov
cli
xor
sbb
jns
pushf
rcr
leave
sbb
jbe
push
pop
mov
out
push
add
and
mov
adc
lcall
imul
clc
jecxz
aad
mov
add
add
ljmp
fistpll
mov
popl
in
xchg
fwait
orl
mulb
push
inc
xchg
and
outsb
fwait
add
adc
outsl
fwait
jg
insb
and
mov
mov
mov
inc
xchg
stos
movsb
sarl
push
pop
sub
pop
adc
push
jl
incb
roll
cmp
adcb
bound
mov
push
adc
jo
mov
cmpsb
icebp
mov
dec
shrl
xor
add
in
cmpsb
scas
sti
dec
ror
xchg
push
popf
push
and
repnz
out
fstpl
out
xor
outsl
movsb
insl
loopne
icebp
lcall
outsb
sahf
xchg
or
mov
pop
push
sti
loopne
mov
popa
mov
insl
fsubr
add
mov
xchg
push
push
sub
add
in
fldl
and
push
popf
cmp
jp
cli
mov
subl
xor
gs
and
push
inc
movsl
push
pop
mov
mov
imul
and
xchg
lret
or
lret
les
xchg
inc
hlt
scas
loope
and
loopne
fists
xor
outsb
push
and
stc
inc
xor
inc
imul
cmp
pop
repnz
pop
mov
popf
add
cwtl
add
cmpsb
ljmp
pop
stos
adc
add
fistpll
adc
scas
jmp
inc
inc
push
sbb
and
jne
lahf
into
xchg
jge
int
or
inc
push
fdivl
out
jbe
ds
xor
popa
mov
js
out
int3
addb
neg
inc
lods
dec
repz
push
jnp
cwtl
inc
jo
and
inc
testl
leave
pop
popf
mov
insl
sbb
jmp
sub
out
xor
rolb
mov
pop
lods
loop
pop
xchg
inc
fwait
pusha
mov
scas
jle
mov
cwtl
test
mov
mov
adc
jp
scas
cmp
cmp
xlat
mov
xlat
mov
scas
icebp
fwait
rorb
inc
in
invd
in
or
int3
out
enter
dec
out
cltd
arpl
cli
cmp
ficompl
fmull
imul
pop
jge
cmp
hlt
pushf
mov
jns
cmp
dec
int
mov
test
in
test
ja
xchg
imul
loope
sbbb
pop
dec
out
inc
cwtl
inc
cmp
mov
int3
lret
push
adc
dec
std
in
fdivrs
adc
and
jne
push
push
mov
push
jae
fistps
fisubs
xchg
mov
jbe
adc
mov
insl
mov
popa
shrb
push
inc
aam
data16
sarl
sbbl
mov
test
pushf
cs
mov
xchg
mov
xchg
jae
adc
imul
in
outsl
enter
lds
call
mov
push
js,pt
insl
rcrb
into
jb
xchg
xchg
push
mov
and
xchg
mov
adc
xchg
xlat
adc
test
ret
in
sub
test
out
xorl
rcrb
adc
lcall
push
aad
icebp
es
or
ljmp
lea
push
mov
das
inc
jne
lcall
lcall
decl
adc
ret
cmp
add
xchg
xchg
aas
push
or
lcall
ja
sbb
inc
daa
fwait
adc
xor
add
aam
pop
lret
ljmp
das
js
push
adc
jae
mov
loope
out
in
addr16
clc
mov
int3
push
jae
pop
pop
and
ror
dec
fwait
cmp
in
dec
mov
and
int
jnp
fs
iret
rcll
sub
mov
clc
scas
sbb
fbld
call
xor
xlat
mov
or
cmp
dec
pop
mov
mov
pusha
icebp
xor
ret
lcall
imul
dec
leave
mov
jbe
cld
repnz
mov
xchg
aam
insb
in
popf
xchg
push
ljmp
aaa
pop
pop
outsl
lods
mov
andb
push
ljmp
push
stc
stos
scas
jae
dec
or
in
mov
xchg
xor
xchg
jp
add
es
ffreep
jne
lret
sarb
fidivrs
popa
cltd
jle
push
lea
mov
adc
xchg
cmp
dec
fucom
icebp
icebp
fsubrp
inc
xor
sub
in
lret
mov
xchg
decl
shl
fildll
and
push
out
jl
aaa
cmp
pop
mov
xchg
scas
pop
ss
pop
sub
imul
cli
jg
xchg
in
jle
imul
aam
je
test
mov
bound
ja
lahf
movsb
xchg
inc
add
sbb
in
mov
jmp
clc
xchg
out
cmpsl
inc
cmp
inc
jb
mov
test
icebp
dec
xchg
cwtl
into
test
mov
inc
pop
cmpsb
and
or
loop
pop
dec
mov
cs
xchg
cmp
cmp
adc
in
xchg
ja
arpl
inc
cmp
sub
xor
jns
mov
mov
aaa
inc
xchg
outsl
aam
inc
shl
jp
std
pushf
xor
cmpsl
mov
pop
pop
inc
repz
cmp
jecxz
cmpsb
dec
sbb
fmuls
mov
dec
hlt
cmp
fbld
xor
fstpl
push
les
cwtl
pop
flds
call
ror
imul
bound
xchg
add
mov
hlt
pop
jg
pop
jge
enter
iret
lret
xchg
adc
push
sub
mov
xchg
cmpsb
sahf
sub
sub
inc
scas
es
push
ficomps
loope
das
icebp
daa
or
adc
mov
cmpsl
stc
iret
inc
cltd
and
or
je
sub
stos
inc
cmp
add
into
push
loope
arpl
adc
cmp
scas
dec
inc
pop
mov
incb
cmp
dec
and
xlat
in
out
mov
loop
inc
mov
xor
push
mov
inc
dec
insl
stc
or
mov
jp
and
mov
shrl
rcll
push
xchg
push
movsl
xor
push
fisttpll
cmp
jle
mov
inc
rcll
sbbb
push
mov
mov
xchg
sbb
or
icebp
out
mov
add
inc
mov
xchg
sub
cmpsb
mov
pusha
cltd
push
pop
int3
pop
cmp
inc
or
xor
popa
dec
or
int
ficompl
adc
test
mov
lods
scas
jmp
xor
in
xor
pop
dec
enter
addb
into
xlat
add
or
mov
cmp
std
xchg
or
int
in
insl
and
lret
fs
and
call
shlb
push
pop
and
mov
fwait
test
cmp
dec
enter
xor
jmp
lcall
stos
xor
push
scas
fcmovbe
inc
clc
inc
popl
xor
pop
adc
push
cmp
iret
rolb
sbb
movsl
loop
test
adc
inc
fmull
test
fisttpll
xor
mov
inc
pop
mov
add
icebp
push
xor
mov
pop
enter
dec
xor
or
test
push
dec
out
mov
jmp
rorb
mov
mov
or
push
inc
and
mov
sbb
add
cmp
test
test
mov
leave
ret
add
les
inc
js
mov
popa
lret
inc
shlb
cld
or
jo
movsb
adc
mov
and
add
jp
inc
pop
outsb
shlb
es
xchg
dec
fs
push
in
cmp
ss
sub
ljmp
js,pt
push
sbb
addr16
addr16
push
jbe
adc
aad
mov
mov
inc
outsl
int3
jne
xor
int3
or
lahf
inc
jle
mov
arpl
out
insb
sub
stos
pop
outsl
push
lods
xor
xchg
sub
mov
sub
pop
sti
andl
shlb
in
push
push
cmp
imul
push
in
roll
aad
and
fistpll
pop
fildl
mov
sub
mov
je
mov
sub
mov
call
or
or
imul
and
cmp
dec
add
dec
popa
add
into
jle
lock
mov
cs
imul
lret
ret
sub
mov
cmc
adc
adc
out
fimull
push
dec
xor
mov
lods
fldt
test
and
fdiv
jnp
jae
mov
test
es
aam
inc
dec
jno
adc
lret
pushf
out
push
cltd
mov
ljmp
lret
adc
lret
lret
cli
pushf
push
cmp
or
xchg
lret
mov
into
add
jge
pop
inc
mov
imul
stos
mov
mov
fidivrs
cltd
enter
adc
xchg
pop
fcomps
pusha
xchg
icebp
call
xor
pusha
sub
stos
sub
sub
dec
sbb
test
jne
xor
and
ficomps
push
dec
cs
add
and
lods
in
inc
imul
push
cld
bound
icebp
add
push
cmp
enter
inc
add
push
mov
pop
adc
xor
test
shr
push
pop
and
orb
xchg
pushf
cmpb
es
push
cwtl
mov
stc
lods
mov
daa
mov
push
inc
pop
jge
int3
arpl
cmp
scas
sub
icebp
xor
xchg
sbb
inc
hlt
mov
test
mov
movsb
mov
rclb
insb
rorl
adc
test
dec
pop
std
test
push
sub
sub
inc
je
lahf
jp
sbb
dec
jl
xlat
vphaddubw
fisubl
xchg
xor
stos
rolb
jecxz
pop
int3
es
sub
mov
and
andb
loope
pop
into
cmp
push
repnz
cltd
mov
add
rorl
repnz
out
clc
cmp
jns
xlat
push
push
lock
repz
mov
loopne
cmpsl
addr16
lcall
pop
or
mov
inc
inc
inc
arpl
jno
fildl
fisttps
popf
cltd
add
mov
or
mov
sbb
mov
adc
jae
scas
push
push
nop
jge
mov
das
dec
rcrl
inc
cltd
inc
xchg
add
mov
inc
xor
push
insb
inc
mov
rcrl
mov
cmpsl
fs
xlat
imulb
or
dec
fisttpll
cltd
daa
stos
adc
jge
cmpsb
mov
xor
dec
jne
ss
in
jecxz
xchg
inc
out
pop
jae
xlat
mov
mov
in
hlt
jno
popl
lods
std
mov
push
jno
ds
xchg
pushf
aad
sub
cmc
xchg
dec
adc
in
jbe
js
int
imul
push
xlat
adc
xchg
jno
cs
dec
xor
out
add
sbb
push
arpl
jns
movsb
cld
into
xlat
sbb
push
push
js
dec
call
mov
jg
sbb
or
xlat
push
jge
scas
and
std
xlat
mov
roll
into
jle
test
leave
cmpsb
adc
and
pop
movsb
shll
lret
adc
and
das
imull
lock
sbb
inc
cld
inc
pop
inc
sbb
mov
and
int3
pop
inc
lea
rolb
add
lock
imul
push
xor
andb
fs
add
fwait
push
sbb
add
xor
jno
xchg
adc
push
pop
and
loop
outsb
insb
and
cld
das
leave
ret
xchg
cmp
popf
arpl
rolb
mov
in
call
mov
pop
sbb
shrb
xchg
push
movlhps
das
hlt
mov
sarl
xor
int
mov
push
and
rol
adc
jae
fwait
mov
mov
lock
pop
arpl
rcrb
pop
cli
rorl
lret
sbb
add
inc
sbb
and
mov
cs
subl
push
mov
mov
mov
in
testb
mov
sahf
and
pop
pop
loopne
jns
sbb
les
iret
push
cmpsl
push
das
lds
jnp
lcall
mov
test
ja
and
jns
xchg
xchg
mov
xchg
notb
push
stos
aad
add
gs
rcl
psubd
push
push
pop
push
or
and
lea
loopne
fsubrl
sbb
fistps
push
xor
lcall
mov
out
cli
in
sub
mov
jmp
mov
pop
sub
sub
sti
xlat
push
adc
add
lods
add
enter
arpl
push
inc
mov
sbb
or
push
xlat
icebp
clc
dec
test
jmp
rorl
xor
jl
push
push
xchg
movb
loop
pop
cmpsb
mov
aam
pop
mov
cwtl
outsb
data16
or
mov
inc
das
mov
and
mov
dec
clc
or
and
mov
cwtl
cmp
cmp
adc
mov
loopne
sbb
mov
cmp
and
lret
je
jo
adc
data16
pop
mov
or
ret
fstps
idivb
in
mov
jl
in
or
jg
je
cmp
mov
xor
ss
mov
push
adc
adc
mov
adc
filds
cmpsb
jmp
ret
lcall
aad
lahf
mov
mov
out
jg
int
push
rcll
lret
js
fcomps
adc
mov
in
push
pop
in
dec
sbb
mov
loopne
cmp
mov
out
xor
mov
aaa
movsl
and
in
and
fimuls
push
out
hlt
int3
push
movsl
sbb
lahf
mov
push
lods
das
mov
call
pop
pop
sub
sahf
xchg
sub
insb
add
rcr
leave
rclb
xchg
dec
and
mov
and
jp
push
clc
icebp
stos
sub
jnp
mov
dec
jo
ss
dec
sti
cmp
mov
mov
dec
sbbb
leave
test
nop
inc
idiv
xor
jae
mov
inc
adc
dec
fidivl
sub
adc
xor
or
out
icebp
sub
mov
lds
sbb
aas
pop
ficomps
adcl
cmpsl
sbb
cltd
dec
jmp
xchg
icebp
inc
fidivrs
ret
dec
cmp
sub
fisubl
add
cmp
dec
mov
jae
mov
icebp
mov
scas
jecxz
adc
adc
sarl
add
and
cmpsb
pop
outsl
test
xchg
dec
push
mov
shr
push
push
adc
sub
imul
pop
icebp
mov
adc
push
push
data16
insl
stc
inc
push
or
mov
mov
adc
shlb
add
mov
sub
add
repnz
xlat
and
adc
insl
out
add
pop
scas
shll
sbb
xor
mov
jp
clc
cltd
sub
mov
shlb
xchg
xor
or
in
jne
dec
addr16
and
je
orl
pop
mov
jb
dec
adc
pushf
sub
mov
mov
stos
ljmp
lret
sub
push
test
filds
push
push
pop
adc
sbb
sbb
ret
cld
mov
and
stc
jl
dec
push
enter
mov
stc
aas
sub
pusha
ds
adc
sbb
cmp
movsb
stos
adc
xchg
cmp
out
shl
les
dec
outsb
fnsave
mov
or
into
cmp
dec
xor
outsl
cmc
outsb
dec
ja
or
inc
leave
ss
cmpsl
jp
jecxz
scas
sub
cmp
pop
mov
testl
xchg
push
xchg
sbb
bswap
sub
decl
jp
shrb
adc
jmp
mov
jo
adc
dec
mov
test
outsl
ficomps
and
sbb
gs
mov
and
and
jae
shrb
inc
addb
mov
push
xor
cmpsl
mov
sbbl
leave
pop
loop
inc
cmc
ret
xor
dec
xor
pop
push
push
in
inc
pop
testl
xor
enter
cmp
fwait
dec
cmp
adc
pushf
jno
scas
xor
sub
outsb
ja
add
cmpsl
fcoms
push
dec
pop
int
inc
mov
adc
movsb
das
sbb
inc
cli
in
jg
dec
adc
ja
fisubrl
mov
add
inc
sbb
ficoml
push
lea
xchg
xchg
push
mov
adc
into
mov
roll
xor
stc
test
xchg
inc
sbb
aam
add
xor
repnz
imul
dec
xchg
pop
jae
pop
or
xchg
clc
lret
mov
and
sbb
repnz
jmp
mov
add
decl
addb
imul
and
and
pop
negb
mov
mov
stos
and
xor
push
push
push
or
subb
int3
dec
in
pop
push
fsin
sbb
lcall
sub
or
mov
sub
insb
dec
fs
add
imul
in
cmp
and
xorb
mov
push
cmp
push
in
jno
sub
ja
dec
in
pop
jl
mov
aad
mov
xor
rcrb
fadd
jns
das
jb
gs
add
frstor
push
sbb
cmpsl
call
call
js
movsl
test
stos
out
andl
cmp
js
fwait
scas
cli
rcrl
cli
sbb
pop
push
mov
pop
ret
cmp
xor
movb
mov
pop
pop
inc
mov
push
incl
pop
cmp
cmp
add
adc
fldt
mov
popf
xchg
inc
sub
xchg
adcl
jbe
popa
sbb
adc
int
jp
push
inc
xchg
sbb
pop
push
dec
mov
imul
imulb
pop
inc
jmp
sbb
popf
in
add
sub
and
xchg
sti
push
pop
adc
movsl
mov
jae
mov
mov
and
lcall
jg
clc
dec
outsl
js
gs
mov
rol
mov
test
xchg
es
repnz
mov
lods
xor
sub
inc
fcomip
push
jecxz
out
repz
fcmovu
ret
jle
int
inc
sarb
jbe
or
pop
inc
stos
rcll
adc
int
push
lods
xchg
mov
adcl
dec
push
pop
pop
mov
adc
cmp
negl
sbb
mov
xor
ret
or
shlb
repz
aaa
in
outsl
fimuls
sub
fcoml
les
adc
push
adc
push
pop
adc
or
xchg
jge,pn
iret
test
adc
ljmp
dec
xlat
mov
test
cmp
arpl
push
leave
or
xlat
inc
in
rcrb
pop
mov
pushf
stos
out
add
dec
jl
fiaddl
xor
xchg
cmp
cmp
push
mov
fs
pop
inc
in
xor
sbb
mov
xor
jne
sbb
add
fnsave
inc
mov
dec
mov
pop
stos
nop
xchg
jno
or
xchg
push
mov
ds
repz
stos
in
mov
aam
adc
rcrl
in
push
jns
int3
push
aad
clc
sub
scas
addr16
inc
or
pop
and
mov
and
xchg
int3
jge
rdpmc
jge
jecxz
mov
ret
pop
imul
sub
lea
sbb
cld
push
testb
repz
jb
ss
fstl
hlt
cld
adcb
enter
cmpsl
push
or
loop
sti
mov
mov
mov
jne
dec
cmc
dec
mov
dec
push
fisttpl
push
sarl
adc
scas
cmp
mov
or
push
mov
pushf
or
mov
jp
pop
call
pusha
aaa
ds
mov
stc
push
sahf
push
test
js
arpl
jb
fwait
std
push
ret
loope
clc
mov
dec
and
and
aad
dec
std
int
mov
push
dec
loop
add
lahf
jge
dec
cwtl
loope
inc
and
push
or
cld
addr16
cmpsb
orb
js
mov
aas
jp
xor
daa
movsl
or
loopne
in
dec
dec
mov
insl
ret
sti
xorb
and
mov
cmp
push
adc
roll
leave
cmc
loop
out
xchg
fdiv
sub
xchg
mov
adc
xchg
ret
or
jmp
pop
mov
loope
ret
das
add
cmc
scas
loopne
leave
lods
jo
sahf
iret
add
adc
or
sbb
gs
fcoml
pushl
dec
xor
fmull
mov
add
push
rcr
arpl
adc
aas
inc
xchg
pop
cmp
iret
and
imul
insl
fiaddl
mov
sub
lahf
push
stos
push
fstpt
in
int3
mov
test
sbb
and
sbb
adc
ja
pop
les
fisttpl
jne
shll
or
in
xor
loope
xchg
pop
cmp
ret
in
push
in
xor
sti
push
mov
push
pop
inc
insl
stc
ljmp
push
repz
rcl
ret
push
je
popa
jge
lret
cmp
out
add
rorb
out
imul
mov
dec
dec
or
push
xor
or
pop
stos
inc
xchg
ds
inc
hlt
jno
dec
sbb
mov
icebp
mov
gs
lods
stc
fnstenv
push
ror
xlat
ja
dec
std
dec
vpshlq
sbb
adc
fists
push
cmp
mov
idivl
aas
insb
imul
decb
mov
les
and
mov
out
xchg
out
xor
loope
cli
adc
jmp
mov
movsb
outsb
pop
cmpsb
pop
mov
push
push
cmp
mov
adc
out
mov
fwait
pop
sbb
sub
in
add
out
clc
xor
mov
fdivl
outsl
and
jo
xor
aaa
xor
and
fs
inc
leave
lock
mov
xorb
je
addr16
sub
test
mov
fidivrl
sub
movsl
mov
neg
xchg
hlt
aaa
mov
rcr
mov
mov
mov
dec
mov
movsbl
xor
jne
xchg
jp
and
out
pop
dec
fistl
movsl
loope
aad
mov
sub
jne
sbb
push
adc
adc
dec
ret
push
sub
cmpl
stos
cmc
mov
mov
push
xor
out
scas
push
or
pop
loope
or
mov
jp
xor
repz
mov
psrad
mov
xor
mov
sbb
je
mov
outsl
jecxz
mov
lods
mov
xchg
outsl
jge
js
stos
add
push
and
and
out
insl
out
inc
dec
jle
imul
pop
icebp
movsb
xchg
je
dec
loope
mov
adc
pavgw
sarl
bound
mov
pusha
jle
cmp
imul
lds
add
inc
pop
cmp
pop
sub
mov
mov
xchg
xchg
xchg
jne
xor
jecxz
shr
xor
ljmp
jo
ja
lret
pop
int3
jle
test
fwait
push
cltd
sub
dec
mov
test
inc
out
roll
or
ficompl
cmp
out
pusha
rorl
inc
outsb
por
pop
xchg
and
pop
iret
xor
out
pop
cmpsl
gs
lods
stos
mov
dec
xor
mov
lock
repnz
testb
mov
inc
into
push
stos
jb
add
repz
das
jb
lods
pusha
psrlw
out
cmp
enter
and
test
fcmovnb
stos
les
in
das
lcall
lahf
pop
cmpsb
aaa
sbb
xchg
imul
jl
mov
sbb
jmp
cmp
and
sbb
je
cmp
push
hlt
std
lock
in
inc
jmp
push
rorb
adc
and
xor
leave
or
ja
sub
jno
xor
or
pop
negb
xchg
hlt
jo
cli
iret
lods
mov
icebp
xor
jmp
lods
jle
scas
ret
push
idivb
sub
out
into
stos
shlb
add
add
mov
out
shl
inc
sub
nop
pop
stc
push
or
add
sbb
jp
and
or
jo
inc
jmp
in
push
mov
inc
push
aad
mov
into
add
int3
mov
xor
jno
dec
add
shlb
dec
adc
dec
cmpsb
adc
pop
gs
test
jno
cmpsl
repnz
cmp
addl
lret
cmp
cmp
add
sub
orl
fisubrl
int
xchg
xchg
push
cmpsb
pop
jmp
popf
roll
test
xlat
mov
cmc
jns
ret
pushf
ss
gs
dec
adc
adc
jno
fiadds
andl
mov
jmp
sub
sub
dec
mov
mov
stos
je
jbe
dec
sti
fimull
bswap
xchg
aam
rclb
int
pushf
lea
lods
mov
imull
mov
pop
pop
lock
sbb
cwtl
inc
dec
jmp
or
sbb
or
xchg
sub
sub
out
in
arpl
in
pop
pop
je
mov
ds
ljmp
sbb
cltd
jg
or
and
dec
cmp
cltd
and
fdivrl
pop
dec
adc
enter
add
push
jmp
in
fidivrl
jb
cwtl
fsubs
mov
imul
jp
out
jle
scas
frstor
fldlg2
call
scas
inc
and
mull
imul
jl
test
xchg
or
test
xchg
popa
mov
jp
nop
mov
jle
push
jl
outsl
lods
xchg
daa
jmp
in
aam
popa
ret
xchg
aam
push
xor
adc
fwait
sub
fisttpll
jg
push
daa
add
xchg
mov
xchg
enter
loop
jne
pop
cmp
fistl
jbe
cwtl
stc
lcall
mov
push
mov
add
cmp
inc
and
xchg
ljmp
or
xor
aam
jmp
sti
fadds
xor
sub
adc
add
add
and
test
mov
lock
sub
jmp
jo
sbb
mov
aaa
xor
pop
mov
out
test
in
lea
jo
std
mov
xchg
int3
icebp
out
cmp
push
jg
in
adcb
test
jnp
nop
add
or
xor
add
hlt
mov
mov
pop
sub
sub
ss
dec
push
nop
popa
push
cmp
jmp
ret
dec
or
cmp
xor
out
pop
movsl
or
fwait
adc
lret
in
jnp
sbb
xchg
int3
push
pop
hlt
or
mov
fmuls
arpl
in
int
lret
or
les
jecxz
pushf
lea
cmc
push
or
mov
rolb
mov
iret
sub
insb
jnp
pop
cmp
lcall
inc
gs
or
bound
adc
dec
out
cmp
push
test
loop
mov
sbb
fsubp
push
out
repnz
addb
mov
xchg
adc
jmp
xor
jo
mov
ss
pop
outsb
pusha
add
lret
fcmovnu
data16
adc
and
test
push
flds
or
push
mov
bound
lock
adc
and
pop
rcr
popa
ret
mov
dec
or
mov
shr
pop
xchg
hlt
push
cs
dec
jne
les
and
out
push
pop
jge
outsl
sbb
mov
push
dec
push
outsb
std
pop
and
push
xchg
cmp
mov
loope
push
ret
jle
sbb
inc
push
cmpsb
push
fld
sti
xchg
cmp
movb
notb
xor
insb
icebp
pop
imul
out
andb
pop
mov
adc
mov
mov
pop
or
push
or
cs
testl
cs
mov
pushf
rolb
mov
adc
lret
leave
out
xor
fidivl
mov
or
in
mov
cmp
pop
int
add
xor
in
sbb
out
and
inc
cmp
mov
or
pop
lea
xchg
clc
cmp
adc
xchg
loope
dec
sti
adc
or
lahf
pop
cmp
inc
pop
out
shrl
sarl
push
jg
dec
and
cld
pop
lods
into
ret
sbb
and
and
mov
jge
pop
out
add
sub
xchg
xchg
in
dec
dec
dec
subb
pop
stos
cmp
sbb
mov
outsb
fidivrs
lds
imul
cld
out
stos
mov
jb
popa
adc
stos
and
mov
pop
mov
pop
add
ret
addr16
ljmp
sbb
dec
lds
sub
and
dec
mov
ret
mov
lods
fwait
cld
incl
mov
outsb
out
js
outsb
aas
ret
push
and
jmp
adc
push
dec
mov
xor
pop
mov
cmp
xchg
bound
fwait
push
push
sub
sbb
inc
lret
mov
out
dec
add
pop
jne
insb
sar
sbb
decb
xor
xor
addr16
fisttpl
stos
movsl
les
xor
sbb
jne
inc
cmp
lcall
push
adc
pushf
add
or
ret
nop
outsb
mov
jno
xchg
cmpsl
and
push
mov
mov
inc
sub
and
clc
or
out
std
clc
cmpsl
divl
pop
push
cmp
repnz
mov
jl
lcall
jmp
xchg
or
cmp
mov
std
add
aad
inc
adc
lods
add
lods
pushf
pop
xor
test
jl
mov
icebp
pop
push
add
in
push
stos
add
fisttps
adc
in
cmp
dec
and
add
jo
testl
repz
adc
fwait
cmc
mov
rorl
ljmp
out
inc
mov
mov
sub
pop
mov
loopne
mov
aam
xchg
pop
test
push
fwait
pop
cs
ret
sbb
jno
cmc
cwtl
dec
lods
push
sarb
push
or
aaa
and
jecxz
adcl
rorb
mov
cltd
sub
inc
clc
dec
fisttpll
jb
lods
jecxz
pop
mov
outsb
inc
ljmp
lea
stc
adcl
inc
dec
or
pop
inc
add
insl
imul
mov
push
sub
jl
stos
or
cmpsl
movsl
mov
mov
mov
cmc
mov
add
not
clc
xchg
imul
insb
push
pop
icebp
sbb
and
cmpsl
mov
in
and
int3
rcrl
lret
xchg
cmp
ret
lds
cmpsb
lret
clc
popf
push
es
or
and
std
fmull
xor
dec
add
mov
cmp
imull
call
sbb
and
call
mov
pop
aaa
sbb
imul
cmp
ret
adc
fcmovnb
arpl
in
stc
mov
lds
push
push
push
arpl
bound
jne
gs
in
repz
push
lret
inc
fnstsw
mov
dec
call
xchg
jge
push
test
jo
iret
data16
loop
mov
mov
push
loope
mov
gs
jecxz
xor
jns
adc
inc
mov
rorl
jae
add
outsb
push
adcl
push
out
push
sub
nop
xchg
jl
jge
or
pushf
icebp
das
xchg
cmp
cmp
xor
orps
sub
push
in
aaa
or
repz
jecxz
xor
in
push
sbb
xor
icebp
icebp
arpl
arpl
mov
in
and
xor
inc
dec
mov
jl
push
or
dec
xchg
jl
jmp
ja
std
jp
mov
xor
push
insl
dec
push
push
push
pop
lds
add
lds
inc
xchg
or
or
lods
repz
xor
enter
fadds
mov
pop
data16
imul
xor
fnstenv
add
sub
dec
sar
adc
adc
xchg
pop
add
xchg
xchg
mov
scas
sub
push
push
dec
arpl
into
icebp
and
sti
sub
xchg
pop
lock
pushl
cmp
push
mov
test
cwtl
cmp
ja
mov
dec
out
outsl
call
ret
sarl
cmp
mull
aam
shrb
mov
lret
adc
or
pop
pop
cmp
mov
add
sbb
mov
test
mov
inc
xlat
mov
and
rcrl
dec
and
popf
mov
lds
pop
inc
sub
mov
out
mov
pop
cmc
es
mov
incl
sub
movsl
dec
mov
popf
addr16
xchg
out
sub
mov
aam
jecxz
mov
call
dec
in
push
sbb
in
nop
adc
xchg
daa
mov
leave
inc
out
dec
ljmp
subb
xlat
pop
and
cmp
lret
hlt
pop
out
mov
jae
icebp
je
pop
inc
cmp
cmp
and
hlt
idivb
jmp
shlb
push
mov
stos
roll
inc
push
bound
dec
cmp
shll
inc
push
add
add
subl
dec
shl
iret
sti
fimull
jmp
pop
cltd
push
mov
sub
test
das
lahf
cmp
int3
jnp
cmp
jmp
shl
pop
sahf
jle
jmp
adc
jg
outsb
sbb
sub
cltd
cwtl
xchg
push
mov
cmp
xchg
xlat
sbb
dec
cmp
cmp
in
lahf
negb
arpl
ret
jbe
sbb
dec
sbb
sbb
add
mov
pop
rclb
lcall
inc
cmc
movsb
add
adc
rol
jne
mov
das
ss
je
stos
lods
pop
sti
ss
jb
mov
flds
addr16
dec
xlat
mov
adc
in
lock
test
pusha
imul
dec
ficompl
lahf
push
dec
add
clc
bound
jg
out
mov
faddl
jne
sub
cmp
ds
out
xor
dec
inc
add
pop
dec
aas
add
mov
out
fnstsw
jbe
popa
movsl
xlat
daa
les
in
out
cmp
pushf
mov
rclb
cmp
inc
sub
pop
in
xor
or
stos
orl
mov
ss
jg
push
jbe
inc
lret
cmp
idivl
pop
adc
jg
xchg
xchg
mov
mov
sahf
sarb
movsb
adc
push
sbb
mov
add
test
xchg
xor
xor
in
cmp
pop
and
out
or
ret
lret
jno
test
ficoms
ret
pop
push
add
test
and
loopne
test
mov
mov
mov
adc
cwtl
fmulp
lea
xor
cs
xchg
push
cld
arpl
fiaddl
mov
jb
cs
push
push
mov
push
mov
xor
mov
popf
push
imul
outsb
lret
imul
jge
mov
add
bound
clc
mov
xchg
ficompl
sahf
call
jno
cwtl
lods
rorb
test
leave
mov
push
ret
mov
sahf
pushw
cs
lahf
not
mov
add
push
mov
sahf
call
outsl
cmp
sub
or
sub
popf
shll
lahf
loope
ss
sbb
and
imul
movsl
leave
or
aad
les
fimull
inc
dec
and
push
jmp
xorl
dec
lock
inc
pop
fwait
jl
fidivl
mov
test
leave
xor
loop
fwait
outsl
jbe
mov
clc
xlat
and
pop
cltd
out
rolb
clc
rcrb
lea
add
xor
subl
repnz
inc
inc
orb
cmpb
pop
dec
out
divb
fmul
ljmp
push
test
fisttps
leave
lret
jge
stos
mov
je
inc
ret
mov
repz
jae
movsl
add
dec
push
adc
sbb
sbb
repz
movsb
hlt
enter
leave
pop
movsb
iret
xchg
adcl
mov
out
js
mov
dec
mov
xor
cltd
dec
test
jg
xchg
cli
rcrb
nop
cmp
xor
in
jp
insl
pop
mov
sahf
lea
pop
test
lds
divb
fs
fmulp
test
or
lcall
ss
pop
arpl
test
sub
stos
fwait
aad
mov
ja
jo
sub
aas
or
pop
dec
jl
add
stos
std
mov
mov
movsb
push
sbbb
shll
movsb
add
test
popf
cltd
in
mov
decb
in
nop
or
jno
mov
mov
mov
ficoml
std
in
push
lcall
popa
stc
stos
pop
and
rolb
lods
xchg
mov
xlat
xor
daa
subl
adc
xchg
xchg
xchg
adc
fadds
mov
push
push
repz
in
jb
push
push
fsubrs
mov
fdivs
push
aas
jo
cwtl
out
test
mov
sbb
das
mov
out
jge
xchg
imul
inc
orb
push
nop
imul
mov
adcl
pop
cli
lea
cwtl
mov
sbb
adc
sete
mov
or
notb
pop
jmp
out
xor
jl
clc
jmp
sti
cli
mov
loopne
xchg
ljmp
data16
mov
jo
jmp
mov
out
enter
out
mov
sub
outsb
and
mov
mov
loope
fwait
xor
stc
data16
testb
inc
cld
push
adc
bound
sbb
mov
aaa
ljmp
aaa
sti
idivb
repz
sbb
xorb
psrad
cs
stos
stc
jle
ss
adc
xor
jo
popf
pusha
hlt
ret
dec
out
cwtl
les
mov
cmp
js
test
jg
push
gs
xor
add
je
sbb
cmp
gs
rcl
int3
out
mov
add
mov
or
lea
lods
movsl
les
popf
das
dec
push
out
fimull
pop
mov
das
rcl
xor
cmp
jo
insb
insl
mov
mov
sbb
xchg
mov
jmp
dec
jae
in
loop
push
push
arpl
xchg
or
pushf
push
cmp
into
sbbl
sub
mov
fidivrl
cs
scas
loop
push
inc
xchg
adc
lods
and
sbbl
cli
idivb
mov
js
in
test
push
adc
shll
sub
scas
adc
mov
push
pop
std
loopne
lods
enter
in
addr16
or
mov
orl
push
cmpl
movsb
jle
popa
stos
push
stc
lds
add
scas
push
add
push
addr16
mov
inc
push
add
mov
dec
in
sub
loopne
adc
test
aas
mov
push
les
jg
xlat
jge
fildl
mov
inc
push
movsl
dec
sbb
subb
scas
ja
sbb
and
fildll
test
mov
pop
mov
jp
in
cli
int3
jns
pop
aam
sub
add
sub
andl
sarb
cmpsl
rorb
jle
outsb
pushf
rolb
jge
icebp
dec
je
sub
fldcw
dec
inc
sarb
mov
sbb
loopne
shlb
lock
lret
inc
dec
sbb
jge
iret
dec
pop
or
nop
mov
jge
lods
outsb
rolb
popw
push
jae
out
inc
add
inc
mov
and
inc
mov
push
mov
cmp
jg
xchg
or
jmp
shlb
and
sub
mov
arpl
cmpsl
jne
lock
or
xor
movsb
loope
inc
mov
xchg
or
and
js
push
jbe
mov
cmpsb
push
or
cmp
xchg
out
jno
enter
cmp
nop
sbb
push
clc
and
xorb
movsl
sub
in
and
push
mov
movsl
fs
das
jo
cwtl
and
push
xor
sti
jge
enter
aaa
push
insl
and
mov
pusha
or
pop
leave
inc
cmc
mov
xchg
rcr
jl
in
and
lret
or
cltd
sbb
dec
push
adc
xor
loope
outsb
mov
pop
mov
lods
lea
xor
xor
stc
in
fnsave
loope
es
dec
icebp
popa
cmpl
inc
loop
xchg
fsubr
or
fcomi
les
adc
clc
jecxz
jmp
mov
lcall
clc
lret
int3
xchg
pop
mov
and
adc
iret
add
les
dec
fs
loope
clc
jge
xchg
ljmp
dec
xor
xchg
push
pop
jae
daa
mov
shl
jb
mov
jo
adc
popf
jp
jecxz
xor
sub
icebp
fisttpll
shl
sbb
iret
cmpsb
cwtl
out
cmp
push
std
fildl
sbb
mov
fucomip
inc
push
add
js
clc
mov
cld
mov
adc
sbb
test
outsb
les
mov
mov
shr
cld
lods
jae
cltd
mov
cmc
sbb
cmp
dec
pop
cmp
pusha
data16
dec
cmp
stos
xchg
pop
sub
movsb
loope
cmpsb
mov
std
mov
adc
xchg
push
lods
loopne
xlat
in
lea
cmp
in
dec
rcrl
js
fstps
and
pushf
sbb
mov
ss
sub
mov
xor
pop
ja
adc
mov
add
shrb
imul
mov
dec
lea
test
pop
imul
sub
into
push
pop
ret
stos
xor
aaa
lahf
out
mov
ror
add
je
jmp
ret
mov
and
aas
ss
fstpt
add
lret
in
movsb
pop
inc
mov
jne
ret
mov
pop
insl
stos
out
push
ss
push
inc
cs
xor
into
mov
pushf
dec
test
and
jle
lea
icebp
pop
ljmp
pop
mov
sbb
push
fimuls
push
stos
dec
leave
mov
mov
add
lock
jnp
push
in
insl
mov
outsb
push
add
lock
cmpsb
scas
or
loopne
fidivrl
xor
orl
fcom
mov
pop
pop
sub
lock
daa
pusha
insl
insb
xchg
xor
lock
popf
push
push
fcoml
aad
in
aad
lds
hlt
fisubl
push
jno
inc
mov
clc
pop
jle
mov
es
jb
inc
and
lock
mov
popa
imul
or
and
sbb
movsl
push
addl
or
mov
add
push
aaa
pop
inc
div
mov
xor
lea
xor
push
push
and
sbb
mov
cli
dec
shlb
das
stc
es
mov
pop
pop
dec
popf
bt
or
push
and
xchg
and
adc
pop
scas
cmc
inc
cs
add
shr
stos
mov
mov
fsub
les
dec
les
jmp
push
pusha
and
adc
aas
in
not
pop
fildll
inc
cmp
icebp
in
fdivs
mov
xor
dec
in
jg
inc
xor
sahf
int
aas
in
sar
pop
mov
addr16
icebp
xchg
lds
repz
xchg
popa
sub
pop
iret
call
ds
movsb
lods
add
subb
sbb
test
push
stc
push
pop
mov
mov
or
repnz
xchg
pop
sbb
rcl
adcl
cltd
shrl
sarl
sarb
test
in
sti
and
xorb
jg
pop
lret
loop
jl
and
out
orb
in
cmp
mov
push
or
lds
es
adc
pop
cmp
sbb
les
fwait
mov
and
mov
aaa
xchg
or
dec
and
mov
mov
ss
jge
dec
fbld
dec
imul
inc
dec
mov
push
fxch
pop
cmp
jg
xlat
mov
or
int
adc
and
inc
jb
inc
pop
mov
mov
cmc
pusha
xor
mov
adc
mov
test
inc
shll
imul
xchg
xchg
mov
xchg
ret
add
jecxz
movsb
and
pop
in
popf
mov
aam
cmpsl
jne
or
jle
mov
jg
push
stos
ja
fsts
subl
push
ret
jmp
xchg
jecxz
js
jmp
stos
or
xchg
add
outsb
arpl
out
gs
mov
icebp
stos
aam
xchg
push
js
leave
or
xor
mov
dec
lcall
imul
iret
std
add
hlt
insb
ret
les
jne
iret
inc
cli
ds
jmp
iret
xlat
mov
mov
push
outsb
clc
daa
pop
into
cmc
lock
dec
jmp
insb
xorb
lock
pop
lcall
stc
cmp
das
inc
cltd
mov
fsubrl
mov
or
add
cld
mov
sub
or
pop
pop
es
shll
sbb
jmp
xor
repnz
nop
jae
dec
add
fdivrs
mov
sbb
testb
push
movsb
in
mov
push
fcompl
cmp
jp
pop
repz
lret
pushf
repz
jp
popa
in
test
lock
xchg
and
mov
dec
mov
pop
pop
cmp
ficoms
movsl
lcall
jecxz
add
bound
out
outsb
lret
shl
cmp
jle
sbb
inc
insb
int3
push
sbbl
add
inc
pushf
dec
outsb
sbb
lcall
xor
dec
sub
rclb
int
ret
push
push
addb
and
out
or
jp
je
jb
mov
scas
nop
and
jmp
sbb
fwait
and
es
push
xchg
fsubr
test
cli
lea
jo
vsqrtpd
jno
lea
arpl
xchg
data16
jne
popf
mov
ljmp
test
xchg
dec
cli
pop
popf
push
jg
data16
ret
pushl
sub
sub
jns
mov
mov
jnp
and
in
outsl
pop
or
hlt
popw
iret
jbe
xor
not
xchg
dec
rol
and
call
push
out
scas
ljmp
xchg
addl
cs
out
data16
add
pop
pop
add
lods
jmp
push
add
fwait
imul
cmp
jl
xchg
cmpsb
mov
mov
add
and
fisttps
dec
adc
cmp
sar
cli
int
rclb
loopne
jmp
pop
add
push
das
mov
inc
ss
push
dec
xchg
mov
loopne
lds
dec
shl
jecxz
or
or
xlat
loope
fwait
push
push
jno
adc
push
in
daa
xchg
lods
imul
pusha
add
in
fwait
jns
pop
or
hlt
adc
xor
je
jnp
jecxz
lock
ss
inc
sbb
ss
add
cmp
and
pop
rcl
pop
adc
mov
xchg
dec
shlb
int
sbb
addr16
and
add
pop
leave
sbb
js
jno
jg
cmp
pop
xor
dec
cmp
sbb
cmp
movsl
dec
mov
pushf
orb
sub
insl
pop
xchg
fs
adc
cmp
push
lock
xchg
insb
pop
outsb
jmp
aam
lds
cmp
es
dec
lock
add
addr16
adc
pxor
pushl
int3
jge
push
mov
lret
and
lahf
lcall
mov
cwtl
out
aas
por
xchg
xchg
mov
dec
js
das
enter
pop
and
xor
mov
or
add
inc
ss
repz
push
aam
sbbb
je
or
sub
jg
mov
dec
push
push
jns
jno
out
lcall
mov
inc
stc
sahf
lds
loop
insl
shlb
lods
data16
shl
xor
movsb
inc
test
mov
or
decb
ljmp
add
stc
gs
mov
xor
loopne
push
xor
cltd
ja
sbb
in
mov
jae
pop
mov
push
aas
push
cltd
xchg
xchg
outsb
pop
jo
fs
adc
mov
mov
and
xorl
xchg
arpl
repz
enter
cmp
nop
fucompp
test
ror
out
xchg
aam
sub
mov
cld
loop
jno
out
xorl
daa
inc
dec
mov
sbb
push
mov
call
lds
mov
dec
mov
pop
xchg
insl
dec
loop
divb
inc
lods
mov
pop
push
in
in
nop
ficoml
call
fwait
getsec
inc
jl
cmp
nop
cmpsl
jbe
cmp
jle
push
lret
mov
add
add
and
cmp
xor
xor
sar
sbb
dec
jmp
push
lret
xchg
push
pop
sub
cmp
dec
mov
leave
loop
cmpsb
mov
loope
sub
fdivl
scas
leave
sub
mov
sub
inc
gs
mov
frstor
xchg
jb
push
push
adc
movsl
popa
mov
cmpsb
push
push
mov
xor
adc
cltd
push
into
inc
cli
jne
adc
pop
mov
enter
cli
mov
lret
sub
xor
xor
repz
addr16
gs
push
or
inc
retw
jns
sbb
xlat
out
aaa
mov
jg
fists
mov
stc
sub
push
jle
sbb
mov
jge
inc
push
ret
rclb
cmp
inc
jbe
sub
mov
ret
in
xorb
xchg
mov
scas
cld
movsl
popf
out
sub
push
sbb
dec
and
jle
imul
mov
xchg
dec
inc
add
xchg
into
aas
jno
lcall
out
lods
popa
enter
or
jbe
stos
loope
dec
clc
dec
xor
xchg
arpl
ret
sbb
dec
cltd
adc
xor
clc
dec
dec
test
sbb
push
ja
int3
lahf
out
imul
inc
in
outsl
fadds
xlat
cmc
movsb
jmp
mov
in
aas
popa
int3
fsub
xor
push
sub
insb
xor
xor
add
cs
shlb
test
stos
xchg
andl
mov
es
dec
sub
xchg
vpaddusb
cmpsb
mov
mov
mov
inc
fcom
test
insl
mov
add
fs
and
mov
or
mov
jmp
inc
out
push
lods
mov
test
inc
dec
in
or
js
out
add
popa
xchg
pusha
lock
push
loop
rclb
xor
lret
jnp
mov
mov
mov
insb
xor
xor
sub
cmpsl
inc
sub
enter
xchg
jmp
mov
adc
out
aas
test
pop
xor
ss
and
mov
and
mov
ss
mov
adc
and
test
das
repz
int3
xlat
or
push
gs
int
lret
cli
sbb
pop
mov
cmc
pop
push
cld
daa
push
loop
jno
test
loope
or
sub
test
sub
mov
in
es
jns
in
imul
pop
mov
mov
cmp
and
ja
mov
movsl
push
aas
cmc
mov
inc
ret
sti
pop
pop
inc
sti
hlt
pop
lcall
pop
lock
sbb
add
xor
rcrb
dec
jbe
xchg
adc
outsb
je
imul
lahf
fidivs
pop
insb
leave
fs
aam
mov
dec
rorb
push
add
or
out
inc
xchg
movsb
dec
xchg
fists
in
push
push
lods
cmp
ss
jno
dec
outsb
jecxz
in
idivl
in
in
sub
xor
dec
xchg
ljmp
xchg
cmp
jbe
sarl
enter
mov
push
pop
lret
out
lods
adc
lock
xor
adc
add
lcall
xlat
adc
out
inc
jmp
aaa
outsl
mov
and
addr16
jnp
je
sub
lock
fiaddl
xor
push
push
adc
insb
mov
sbb
mov
mov
stc
mov
jecxz
pop
pop
sbb
out
sub
fucompp
or
stc
xor
sub
lret
xchg
or
jno
jno
movsb
push
or
xchg
and
js
rolb
hlt
inc
dec
and
rcr
mov
jmp
mov
cmp
int
cmc
faddl
imul
jnp
andb
and
jb
pushl
arpl
pop
repz
ljmpw
push
out
insb
clc
mov
mov
cmp
push
js
icebp
xchg
scas
and
sbb
cmp
jp
in
mov
jnp
loopne
adc
in
dec
aad
out
js
lahf
mov
shrb
popf
loop
idivl
cmp
jge
lock
mov
push
negl
mov
dec
pop
xor
and
pop
lcall
fsts
sbb
xchg
xchg
fstps
cld
mov
lds
sub
dec
addr16
mov
loop
repnz
divb
icebp
pop
ret
xor
push
test
popa
dec
jge
sti
out
sub
lcall
jmp
or
enter
lret
int3
mov
sub
sahf
fldenv
lods
push
dec
out
and
push
int
lcall
xor
imul
push
mov
inc
xor
inc
pop
mov
pop
loopne
cmpsl
test
test
push
in
xor
jecxz
stos
ss
adc
sbb
outsb
or
scas
sbbb
inc
lea
dec
jmp
push
mov
cltd
hlt
xor
xor
mov
push
pop
inc
xor
loopne
xchg
or
sub
loop
call
negl
and
cmp
add
sbb
data16
and
add
or
lahf
mov
xchg
repz
inc
xor
dec
and
pop
ja
test
rcrb
ja
lds
or
fiadds
jne
icebp
icebp
stc
jecxz
mov
xchg
and
jp
xchg
inc
push
test
gs
incb
test
bound
ds
je
jle
sarb
cmp
push
orb
ja
int
pop
lds
subl
mov
ja
ds
mov
adc
lea
or
and
pusha
repnz
mov
adc
int3
arpl
jge
ljmp
test
mov
jb
cmc
mov
and
cmp
pop
add
mov
xchg
mov
jle
test
loopne
mov
or
jne
and
jo
gs
mov
pushf
insl
mov
flds
mov
lret
clc
int3
or
mov
xor
adcb
lock
pop
test
ret
push
mov
into
in
push
add
das
inc
test
sbb
cs
lods
jns
mov
adc
lret
cmp
mov
loop
and
leave
mov
pop
mov
add
test
test
jle
sti
mov
sbb
addr16
inc
pop
xor
rorl
imul
fldenv
dec
cs
out
sub
negb
push
mov
and
xor
popf
fidivs
fnsave
or
hlt
notb
jns
mov
dec
mov
mov
roll
nop
cltd
inc
mov
cmpsl
cmp
dec
test
inc
jno
jp
sbb
mov
sub
or
pop
pop
mov
mov
loope
mov
sub
lock
sbb
mov
mov
lock
test
mov
mov
ret
shlb
scas
mov
cmp
add
mov
fcom
movsb
bound
cld
adc
dec
ja
jp
lcall
xchg
sbb
dec
out
icebp
jno
hlt
cmp
fisubs
ss
rdpmc
xor
xor
testl
jecxz
sub
arpl
push
jecxz
aas
fildll
mov
js
cs
pop
cmpsb
adc
mull
iret
rolb
mov
fcomi
sbb
out
movsl
inc
add
arpl
inc
lret
jno
or
popf
shll
inc
aaa
lock
or
int
dec
fistpll
push
xchg
sub
popa
out
rcrl
sbb
add
add
scas
loope
movsb
push
fld
jb
jo
and
das
sub
sbb
xchg
repnz
test
jl
cltd
fwait
xorb
mov
jmp
ds
adc
cltd
inc
mov
add
repz
cmp
fimull
mov
lret
loope
xchg
cmp
mov
push
cmp
out
aas
sub
stos
mov
outsl
adc
or
orl
popf
mov
mov
cmp
out
fsubl
jecxz
repz
data16
out
test
xchg
pop
push
jbe
aad
inc
out
xchg
xchg
ja
adc
fstpl
cltd
test
adc
sbb
mov
pop
inc
mov
xor
data16
aam
je
push
or
xor
cs
imul
lea
bnd
repnz
iret
aas
popa
test
stos
dec
mov
sarb
add
mov
rolb
sub
pop
std
mov
push
xor
dec
pop
mov
je
mov
xchg
incl
mov
hlt
repz
adc
js
insb
pushf
lds
leave
cmp
fsubr
add
icebp
xchg
adc
mov
jle
push
mov
cmp
out
xchg
lahf
add
mov
call
inc
mov
and
pop
mov
mov
pop
fstps
divb
adc
out
push
repz
lock
lock
mov
jb
lea
aaa
or
xchg
or
jo
or
xor
out
push
lcall
stos
fucom
jmp
pop
inc
sub
rorl
push
xlat
pop
movsl
js
fildl
mov
mov
outsb
push
lods
jmp
pop
lock
outsl
dec
js
adcl
imulb
out
ljmpw
inc
push
sbb
pop
dec
mov
jb
cmp
or
and
test
lds
add
xchg
sti
mov
xor
cmc
in
pop
push
shrl
imul
popa
icebp
add
push
repz
sbb
or
dec
lret
cli
mov
out
cmpsb
jmp
icebp
aaa
jbe
inc
fst
fsubl
push
stc
push
mov
scas
jp
loope
sarb
xlat
and
stos
push
dec
sbbb
sub
sahf
ret
and
adc
mov
jns
clc
cltd
out
das
pop
mov
sarb
adc
sbb
push
fcmovb
mov
pop
mov
insl
subl
lahf
jg
scas
popa
lods
dec
in
cmp
js
repnz
mov
xchg
xchg
cld
fstps
not
sbbl
sbb
mov
add
cmp
fimuls
jle
fistl
dec
pusha
scas
jg
fiadds
hlt
lret
outsl
push
int
cs
pop
ret
addl
sbb
in
and
xchg
dec
aam
mov
or
scas
fisubl
sub
xor
jge
and
mov
fidivl
sub
xchg
repnz
mov
push
call
in
test
pop
in
sub
int3
xlat
fcomps
shll
lea
minps
or
and
movsl
push
insb
imul
adc
xlat
aad
fcoms
cmp
sbb
xlat
jecxz
sbb
popf
mov
movl
rcrl
jl
jl
xchg
mov
push
addr16
pop
add
lret
dec
pop
sbb
andl
jmp
movsl
aaa
pop
push
jmp
push
push
sub
or
adc
outsb
xchg
lahf
sub
mov
popa
pop
popf
repz
sub
xor
testb
mov
aas
cmp
fsts
in
pop
push
dec
mov
rcl
faddl
push
xchg
aad
pop
mov
mov
shrl
inc
pop
fidivrs
sbb
sbbb
inc
pusha
mov
push
xchg
stc
xorb
push
xor
lds
pop
js
jne
roll
push
ja
and
in
add
mov
mov
movsb
mov
sete
stos
aaa
add
pop
mov
idivb
aaa
mov
push
cld
shlb
mov
mov
leave
popf
cmpsl
mov
in
mov
das
test
pop
sub
or
add
xor
pop
jno
adcl
mov
jmp
pop
mov
cmpl
pop
leave
adc
repz
jno
arpl
xchg
rcrb
jo
mov
fcompl
inc
cmp
or
push
fisttpll
jb
in
lds
sbb
jle
subb
cli
dec
or
fcoms
popa
inc
lcall
ja
pop
pop
or
xor
cmpsb
arpl
cltd
test
xchg
mov
mov
fucompp
xchg
repz
nop
insb
scas
push
pushf
or
pushf
loope
les
cwtl
out
sub
pop
pop
sarb
daa
push
pop
cmp
lods
addr16
push
mov
mov
fs
add
nop
sar
cmp
data16
jle
inc
push
std
sub
imulb
rcll
inc
cld
inc
pop
jl
adc
or
or
fisubs
cmpsl
push
jno
inc
mov
jns
pushf
mov
jne
daa
xchg
popa
sub
xchg
dec
ret
ds
std
cmp
jne
je
mov
stc
sub
jmp
data16
mov
pop
loopne
addr16
mov
xchg
movsb
lret
scas
inc
shrl
xchg
loop
rcll
cltd
lret
test
stc
pop
add
xchg
ficoms
jne
and
sbb
and
xchg
cmp
inc
adc
imul
sub
xchg
imul
cld
mov
fnstsw
adc
adc
jp
and
movsb
xchg
notl
and
mov
into
test
adc
xor
xchg
xorb
in
mov
clc
push
pushf
adc
inc
das
imulb
pushf
mov
ret
cmp
dec
mov
dec
scas
into
jns
ss
jo
das
fsin
in
mov
into
aas
out
rorl
stos
push
adc
in
popf
loop
ds
hlt
mov
inc
popf
mov
in
jns
stos
push
test
cmp
adc
xchg
das
jge
lods
lcall
pop
sub
mov
pop
jnp
lods
clc
test
jno
or
arpl
subl
hlt
inc
shr
ljmp
xchg
add
mov
mov
dec
clc
cmp
dec
push
repnz
mov
fldz
cmpsb
jo
iret
inc
mov
dec
add
out
mov
fildll
das
xor
dec
inc
adc
orb
leave
add
in
fucomp
fdiv
and
push
cltd
adc
repz
test
call
das
roll
inc
insl
inc
dec
xchg
lods
mov
jp
into
aas
jle
andb
pop
test
fsub
mov
sub
inc
sub
adc
insl
cs
adc
add
ljmp
push
in
rol
or
xor
sbb
imul
xchg
lret
cmp
shl
je
andl
ret
cli
loopne
pushf
push
gs
imul
cmp
mov
je
mov
lret
push
arpl
jge
js
xlat
lcall
dec
sbb
call
dec
rcl
and
movsb
add
dec
add
fdivs
insb
movsb
xchg
sub
jmp
cs
push
push
mov
nop
sbb
jl
inc
jmp
lock
movsl
inc
cmp
xlat
subb
loopne
pop
call
xchg
or
aam
push
sub
mov
clc
mov
ljmp
push
mov
push
bound
pop
out
imul
mov
adc
enter
outsb
add
adc
sbb
inc
inc
dec
and
out
data16
inc
leave
xor
pop
mov
cmc
dec
sub
push
mov
inc
int
push
sub
int
inc
or
add
lret
jge
ficomps
sub
and
ret
icebp
shlb
sub
pop
jmp
pop
movsb
pop
dec
sbb
int
dec
faddl
xchg
dec
add
leave
nop
and
rorl
push
mov
xchg
jl
cmp
shlb
icebp
push
dec
adc
loopne
pushf
cmp
in
hlt
adc
xchg
add
or
popa
ja
adc
popa
loope
dec
bound
inc
push
xchg
push
push
gs
aas
ss
jecxz
xchg
pusha
fimull
mov
push
or
jns
sub
pop
lahf
xchg
sti
cmp
in
xor
mov
sub
movd
fcomip
xchg
mov
jnp
sbb
xor
cmp
dec
add
leave
add
mov
adc
xchg
aaa
mov
add
sbbb
outsb
data16
cmp
sub
sti
and
add
and
lods
call
rcrb
push
push
adc
dec
lods
jo
mov
aam
sbb
mov
pop
lcall
push
or
jns
mov
sbb
xor
rolb
notb
pop
mov
mov
cmpl
ficoml
imul
xor
sbb
movsb
inc
add
mov
dec
sub
push
cli
aad
pop
xchg
push
orl
stc
xchg
and
js
dec
in
test
mov
and
xchg
divl
ret
adc
repz
add
popl
xor
jnp
ret
loope
dec
mov
jnp
addr16
scas
or
lcall
add
dec
add
adc
and
push
mov
daa
pop
and
jp
fcoms
xchg
mov
sub
test
insl
mov
out
jne
mov
data16
inc
ljmp
mov
stos
mov
xchg
sbb
add
jb
mulb
pop
add
movsb
or
rcrb
push
sti
sbb
rorl
inc
jbe
sahf
nop
adc
mov
je
nop
in
int
pop
fxch
adcb
mov
dec
and
mov
ret
lcall
sahf
mov
pop
in
movsb
inc
adc
sub
testb
imul
mov
push
enter
jp
pop
outsl
dec
pop
fs
sub
push
push
dec
cwtl
out
fwait
jbe
insb
sarl
addl
icebp
mov
adc
out
loopne,pn
outsl
add
sti
push
in
ret
notl
fldenv
mov
dec
cmp
mov
ljmp
dec
mov
ljmp
mov
insb
dec
int3
les
fmulp
inc
cmpsl
cli
je
je
or
cmp
xchg
loope
mov
pop
mov
nop
out
cwtl
inc
cwtl
loopnew
dec
and
inc
rolb
pop
aam
inc
dec
inc
mov
out
pop
call
dec
ficomps
scas
jp
imul
xchg
aaa
clc
xor
mov
cs
in
mov
decb
add
inc
das
mov
inc
lea
sub
mov
mov
sbb
cmp
push
inc
xor
inc
pop
cbtw
rorl
fwait
xchg
scas
mov
iret
adc
pushf
inc
iret
sbb
xor
dec
and
sbbl
dec
push
xchg
call
pop
xchg
mov
jae
xchg
push
lret
mov
mov
arpl
scas
xchg
cld
les
and
inc
lock
mov
int
add
loopne
push
xlat
fcompl
adc
aaa
mov
popa
repnz
push
add
iret
jo
int3
scas
loopne
lret
xlat
jne
sbb
sub
test
and
fmull
mov
mov
pop
mov
lods
xor
add
push
inc
push
pop
inc
adc
dec
movsl
js
std
sub
aas
xchg
pusha
jge
lahf
arpl
es
insl
or
adc
ljmp
sub
fldt
cmp
movsl
jp
sti
push
lret
aam
add
sarl
inc
cltd
add
addr16
push
sbbl
jns
out
xor
lods
dec
fcmovbe
insb
lret
and
xchg
fcomps
or
imull
roll
sahf
dec
and
lods
pusha
mov
cmpsl
or
imul
data16
pusha
xor
ret
mov
gs
sbb
mov
hlt
ljmp
insl
mov
or
dec
hlt
cwtl
shl
xor
mov
dec
je
inc
lahf
mov
jp
out
add
jge
rcl
flds
into
in
adc
ret
nop
mov
stos
mov
out
dec
out
rcll
jae
dec
adc
add
rcr
mov
and
and
cmp
shlb
xchg
test
fistpl
fdivp
in
sbb
movsb
inc
cmpsb
fcmovnb
or
test
push
xor
add
and
xlat
jl
adc
dec
push
and
popa
or
call
cmp
cmp
cltd
sub
insb
movsb
aas
cmp
jle
jns
and
aaa
sbb
std
in
xchg
adc
xchg
sti
insb
movsb
push
insb
pop
xchg
lds
inc
shll
int
xchg
lea
movsl
jne
data16
movl
ret
push
xor
xchg
jnp
mov
jmp
push
or
roll
les
nop
mov
call
xor
dec
and
push
or
xor
inc
aaa
aam
mov
fisubs
xchg
andb
stc
inc
fsubrl
cmp
mov
dec
mov
mov
push
xor
lods
xor
pop
dec
push
in
inc
aam
sbb
pop
in
sti
and
ja
fistpl
pushl
sahf
sub
fdivs
jns
mov
fdivr
sub
mov
repz
call
pop
jg
push
fidivs
xchg
loopne
jno
xchg
push
mov
jns
jbe
test
jb
loope
imul
push
ds
fsubs
mov
jg
push
lret
jae
rcl
aas
push
insb
cmp
ljmp
int
mov
push
test
adc
aad
adcb
enter
cwtl
mov
sahf
fistl
loopne
ja
cmpsl
cmp
loop
loopne
cli
jle
jnp
in
shrl
cmp
xchg
cltd
stos
cmp
jo
int
imul
sti
rorb
add
mov
and
xchg
loopne
cmp
xchg
repz
jmp
stc
popf
xor
pop
add
test
stos
ret
and
add
sbbb
stos
loope
fmuls
pop
jns
or
in
pushf
gs
ret
repz
push
lcall
lahf
cmp
jne
sbb
fs
xor
jae
cwtl
jle
lods
inc
inc
fnstcw
cwtl
xlat
fdivrp
mov
cwtl
push
cmc
test
arpl
dec
xor
andb
adc
mov
mov
push
add
cmovns
popf
sbb
mov
cmp
pop
xlat
mov
dec
jge
or
pop
lods
sbb
push
mov
sub
sub
dec
mov
fdivl
pcmpeqw
pop
cwtl
rclb
out
push
aaa
out
xchg
bound
std
out
pop
xchg
rcll
lods
jg
frstor
add
rcl
xchg
inc
leave
sbb
cmp
mov
sub
xlat
out
lcall
in
jne
push
pop
imul
xor
jecxz
push
sub
push
leave
push
adc
arpl
iret
rorb
lea
clc
sub
mov
push
cmove
or
sbb
loopne
dec
es
mov
imul
or
mov
push
mov
call
xor
scas
mov
sbb
push
out
pushf
test
xor
xchg
into
jg
ds
jmp
push
xor
loopne
fldl
bound
pop
push
pop
pusha
sub
inc
aas
rclb
sub
in
sti
push
dec
mov
mov
outsl
mov
lods
loopne
shll
roll
ljmp
fstl
cmc
cmpsl
jecxz
adcb
int3
incl
lcall
jne
cmp
imull
test
xorl
push
cltd
aad
jmp
push
aam
pop
or
xchg
inc
fistpl
stos
adc
iret
adc
pop
hlt
mov
push
push
ss
test
mov
mov
in
fstpl
ljmp
mov
out
sbb
mov
dec
into
mov
shl
lret
insl
imul
cmp
pop
mov
aad
pop
les
in
inc
or
push
pop
ljmp
imul
test
out
or
mov
and
movsb
dec
pop
arpl
and
adc
add
rolb
cmpsb
cmp
imulb
dec
out
xor
add
pop
scas
mov
flds
and
and
sbbl
sub
popw
dec
pushf
mov
shrb
imull
aas
decl
shrb
lret
mov
and
pop
cmp
sahf
pusha
push
jmp
ret
fsts
popf
mov
dec
stc
enter
mov
add
inc
lods
inc
mov
in
adc
test
ljmp
aad
xchg
loop
inc
push
pop
sbb
sub
fwait
sti
in
cmp
push
jg
movsb
pop
xchg
push
jns
es
adc
jne
xchg
lret
jne
fidivs
xor
outsb
jp
fiaddl
cli
jl
out
adc
clc
leave
jp
jmp
in
jbe
sbb
add
cmpsl
xor
hlt
sbb
pop
fadd
push
cs
test
gs
mov
xor
xor
rcrb
shl
lret
push
ljmp
sarl
pusha
sub
js
mov
ljmp
mov
mov
xor
jmp
mov
mov
dec
push
aaa
icebp
fxch
adc
ret
mov
sub
popf
add
xor
ds
psubb
mov
inc
push
insl
pop
pop
push
mov
mov
ret
enter
xchg
xchg
cmp
pop
arpl
push
sub
jo
fildl
andl
leave
fs
outsl
sahf
std
mov
add
pop
ror
cmp
out
rorl
jge
sub
rolb
inc
xchg
jg
frstor
scas
roll
dec
cmpsb
fstpt
stos
jno
loopne
adc
pusha
sub
cmp
xchg
or
repnz
push
fisttpl
div
aaa
fdivr
push
cmp
inc
pop
pop
lods
int3
movsl
sub
add
sbb
cwtl
pop
loop
sahf
mul
xchg
popa
jl
mov
pushf
imul
loop
xor
lea
aas
cli
cli
adc
inc
mov
pop
das
cwtl
jecxz
pop
xchg
pusha
sahf
out
pop
ja
jae
or
iret
xchg
or
mov
pusha
bound
and
cltd
lret
push
inc
mov
jo
fnstcw
movhps
lret
jbe
enter
lods
ds
mov
sub
xchg
mov
ds
mov
adc
sbb
sub
fdivs
and
pushf
sbb
adc
data16
jns
mov
test
adc
mul
dec
push
imul
push
sar
outsl
jne
popf
repz
es
ficompl
push
add
inc
lods
inc
push
jp
mov
push
js
add
and
lods
xchg
mov
push
repnz
sbb
jbe
ret
rclb
rcrl
sahf
cltd
cwtl
mov
mov
arpl
add
add
mull
xchg
inc
mov
test
mov
mov
cmp
xchg
shrl
add
rcr
inc
push
sub
jne
xor
jle
test
enter
mov
adc
cltd
xchg
push
jns
push
dec
lds
mov
sbb
pop
cli
sub
fwait
stos
xchg
hlt
mov
add
cmp
adc
mov
inc
mov
pop
out
jg
les
test
or
mov
cmpsl
mov
and
shl
inc
out
add
loope
xchg
xchg
fucomip
pushf
add
popa
sbb
shll
mov
sub
lods
test
xchg
aas
xor
jmp
mov
movq
sti
push
mov
or
jo
js
inc
rcrl
and
in
push
incl
inc
insl
popf
outsl
je
xchg
fwait
sub
pop
pusha
xor
hlt
out
jle
xlat
pusha
loope
addr16
testl
and
or
adc
test
loope
out
outsl
std
xor
sbb
mov
xchg
lods
mov
pop
sbb
dec
pop
icebp
mov
repnz
adc
sbb
mov
pushf
lret
mov
jmp
nop
push
push
or
pop
push
add
jmp
pusha
leave
nop
idivb
cld
clc
xchg
add
mov
or
int3
jle
repnz
xlat
cld
negl
pop
push
and
ret
orb
les
popa
insl
push
jle
dec
es
xchg
fcmovu
xchg
in
mov
je
mov
or
das
dec
push
movsb
lea
mov
ds
arpl
sub
and
pop
mov
mov
fcmovu
push
pop
stos
insl
cld
inc
or
mov
rcrl
inc
xchg
or
int
cs
test
pop
adc
cmp
mov
pop
dec
or
and
add
icebp
push
pop
dec
fists
rorl
insl
inc
xorb
xchg
sub
push
in
and
add
push
jle
sbb
int3
inc
jne
mov
push
mov
iret
cmp
fisttps
out
mov
int3
rcll
xchg
or
in
push
mov
call
lahf
addr16
dec
cmp
jge
push
sbb
push
shll
jmp
fnsave
push
sti
jecxz
gs
mov
mov
mov
arpl
aad
xor
in
xchg
mov
sbb
pop
cmp
sub
sub
shll
adc
pop
testb
mov
mov
int
xchg
cmp
fildl
loopne
mov
in
mov
rcr
rcr
xchg
xchg
loop
xchg
fdivrs
or
in
leave
cmpsb
mov
or
movsb
xor
testb
pushf
movsl
dec
inc
xor
xchg
fdivp
js
push
enter
push
mov
mov
lret
ret
sarb
rorl
cltd
jle
mov
dec
xchg
pop
fsubs
cmp
xchg
in
or
mov
jb
cltd
xlat
stc
cmp
test
stos
sbb
testl
adc
les
fwait
sbb
into
xchg
mov
sti
and
and
scas
cli
fbstp
inc
mov
clc
dec
push
xor
out
adc
mov
ja
add
mov
dec
lock
or
sub
imul
lods
add
xor
push
add
stos
es
repz
sub
test
and
div
add
mov
in
jbe
lret
fsubs
stos
roll
mov
call
test
hlt
sub
insl
aaa
or
popf
out
dec
add
jecxz
negl
push
pop
mov
adcl
push
inc
lods
pop
xchg
lds
out
iret
mov
cmp
dec
sti
rcl
int3
add
sub
push
sbbb
lds
mov
push
repz
fisttps
ja
mov
fnsave
pop
mov
cmp
xchg
rcrb
popf
bnd
mov
cmpsb
test
dec
inc
xor
cmpsl
dec
mov
out
sbb
mov
push
ret
out
aad
xchg
test
arpl
call
adc
mov
push
inc
sbb
faddl
stos
shr
cwtl
lret
mov
mov
pop
jbe
mov
dec
jb
xchg
aam
pop
leave
cmpsb
xor
shrb
pop
push
mov
adc
rclb
fcmovnbe
xchg
cmpsb
cmpsl
cltd
add
lods
mov
push
mov
inc
test
loopne
test
sarl
jbe
sbb
xor
rorl
sbb
int
insb
mov
or
fsubr
or
sbb
jmp
add
insl
xchg
jge
or
das
push
push
and
fisubrs
arpl
loope
fcomps
cmp
mov
movsb
xlat
jno
lret
test
xor
and
mov
pop
and
pop
jns
cmc
add
xor
mov
pusha
mov
shr
jmp
ret
test
shrb
and
call
shrl
ds
add
imul
loop
sub
fsubr
test
xchg
mov
or
repnz
sahf
dec
sub
add
stos
dec
clc
inc
mov
inc
mov
or
cmc
xchg
adc
mov
lods
push
mov
push
insb
mov
fbld
add
in
sub
add
lock
ljmp
and
repnz
das
in
xor
fmulp
and
push
sbb
xchg
mov
mov
enter
xor
call
xor
daa
cmp
inc
hlt
xor
adc
ror
js
lods
pop
inc
imulb
mov
cmp
adc
subl
cmp
ret
lahf
jecxz
inc
inc
stos
loope
out
subl
fcoml
es
in
repz
loopne
pop
iret
add
pop
mov
jb
sub
mov
insl
jb
addr16
sub
push
jp
mov
outsb
test
push
retw
adc
mov
pop
sahf
lret
xor
scas
xchg
xchg
fstp
leave
out
popf
xor
mov
inc
dec
mov
adc
in
notb
or
js
divb
fsubs
shlb
jl
xchg
outsb
pop
inc
sub
jl
push
push
and
cmp
push
cmp
inc
mov
rol
hlt
gs
jmp
push
or
mov
movsb
dec
ret
xor
jbe
jl
adc
fiaddl
ja
mov
sahf
xchg
fimuls
xor
insb
inc
inc
adc
lock
adc
movb
mov
xchg
xchg
insl
xor
cltd
arpl
xchg
ljmp
sbb
ret
icebp
je
mov
scas
ds
push
pushf
aam
mov
or
xchg
les
or
fs
cwtl
loopne
mov
inc
mov
jecxz
cmp
rorb
mov
jl
daa
lea
dec
sub
jo
sub
ret
out
mov
sbbb
sahf
jo
iret
in
sbb
or
lgs
mov
iret
jns
cmpl
popa
push
mov
dec
mov
aam
bndstx
cmp
or
dec
pop
dec
jmp
js
push
sub
and
pusha
imul
out
aas
dec
fndisi(8087
sub
push
es
movsl
sbb
std
js
sbb
lock
mov
push
arpl
movsl
adc
dec
imull
jmp
or
or
clc
mov
shrl
cld
test
push
cmpsb
jp
out
add
mov
mov
adc
inc
idivl
scas
jbe
cwtl
out
mov
xchg
cs
adc
enter
mov
pop
pop
xchg
cld
jmp
sub
clc
les
push
xchg
imul
rol
movsb
aaa
cltd
jp
and
cltd
xlat
xchg
and
aam
jg
jle
jl
fs
adc
jmp
icebp
jbe
lret
xchg
popa
cs
xchg
in
stos
and
jo
jns
pop
bound
and
outsb
rcl
xor
enter
pop
mov
out
into
xchg
loop
int
mov
jne
mov
subb
lock
cltd
mov
jmp
inc
out
mov
push
sti
jmp
push
sbb
jne
fidivrs
pop
mov
insl
jae
cmp
lret
jnp
lret
mov
bswap
push
jg
in
push
cmp
or
dec
xchg
cmp
in
pusha
and
dec
lods
ret
xlat
popf
xor
push
sahf
cmp
dec
shll
js
rorl
xchg
icebp
adc
mov
cmp
dec
arpl
lock
pushf
stos
cmp
movsb
add
inc
or
lret
shl
outsb
clc
adc
jo
mov
adc
repnz
sub
lahf
lcall
mov
inc
pushf
jnp
sub
cld
mov
xor
pop
mov
mov
ret
xchg
sbb
sbbl
dec
and
pop
jecxz
fwait
scas
and
int
sahf
xor
rorl
lret
xchg
xchg
or
inc
je
xchg
xchg
je
sbb
mov
and
test
aad
addl
xor
cmc
std
jns
aas
insl
pop
sahf
loope
aaa
scas
jle
fcmove
cvttps2pi
mov
and
jmp
or
pop
insl
dec
mov
cld
push
in
inc
inc
clc
js
pop
leave
lods
aas
cmp
adc
mov
fwait
lods
pop
fnstsw
cmp
out
lahf
pop
cmp
sub
push
mov
add
jmp
push
loop
popa
lret
in
clc
addl
shll
lods
aam
cmpl
and
out
xor
or
add
rol
add
insb
in
aaa
inc
sub
dec
pusha
int
sub
repnz
cmp
xchg
into
out
push
pop
mov
js
jp
xchg
and
repz
insl
pop
xchg
jle
ret
and
fdivr
jmp
fistpll
inc
and
and
and
pop
xchg
inc
mov
cmp
cwtl
lods
and
loopne
int
lcall
xchg
ss
mov
in
add
dec
xchg
dec
imul
das
mov
sbb
or
enter
fsubs
ror
lds
aas
inc
add
mov
push
in
ret
and
mov
pop
ljmp
int
mov
aam
xlat
mov
fs
dec
mov
cmp
jl
mov
xchg
int3
lret
and
loop
or
pop
push
mov
lds
xor
scas
jo
xchg
daa
dec
enterw
icebp
pop
fmul
testl
add
inc
les
or
sbbb
mov
pop
xlat
mov
aas
out
dec
push
cs
xor
sub
mov
xor
out
mov
push
cmp
sub
jmp
lods
aam
inc
insl
or
and
xor
outsl
xchg
pop
scas
cld
mov
mov
pmulhuw
lods
mov
push
ljmp
mov
push
insl
cs
je
mov
dec
and
add
push
arpl
cmp
cmp
inc
jae
mov
add
and
ss
shl
push
ffree
inc
repz
out
xchg
in
hlt
movsb
mov
pushf
mov
mov
inc
aaa
es
push
lahf
pop
test
dec
cmc
pop
mov
cmp
push
jp
push
fwait
dec
jmp
sbb
sbb
add
popf
xor
adc
lods
push
add
jns
pop
push
cmpl
mov
lret
mov
sbb
int3
in
inc
cld
ficoml
stos
cwtl
push
inc
sbb
mov
movsb
mov
push
push
dec
inc
cmpsb
push
repnz
cs
shr
mov
dec
inc
sbb
jg
sti
inc
jae
loopnew
add
cmp
push
jbe
cmc
inc
sti
fbld
repnz
std
mov
or
shrl
push
add
xchg
sar
adc
mov
icebp
lret
pop
stos
popa
addr16
add
mov
fimuls
stos
or
sub
push
roll
or
add
sbb
shr
mov
or
lods
aaa
xor
adc
mov
scas
lret
sub
jbe
jne
or
pshufw
inc
xchg
movsb
fdivrs
jmp
xor
mov
adc
inc
inc
dec
cmpsl
xchg
fldcw
pusha
lods
cmp
inc
push
loop
pop
in
mov
call
push
jno
mov
movsl
jge
out
jo
mov
idivb
xchg
jl
add
xchg
mov
dec
lcall
jb
dec
jle
bound
and
push
imul
mov
push
out
jnp
mov
jle
test
or
mov
xchg
adc
mov
out
push
and
outsb
push
pop
lea
cmp
sbb
push
pop
pop
rcrb
xor
lahf
lahf
mov
adc
add
xchg
xor
jle
xor
xchg
mov
xchg
cmp
arpl
pop
and
test
cmc
or
sbb
cmpsb
test
decl
insb
inc
add
lock
mov
mov
sti
shll
inc
inc
xchg
std
js
xchg
pop
mov
sub
pushf
or
mov
jmp
mov
repz
dec
cmp
out
xor
shlb
xchg
xchg
testl
mov
cwtl
push
mov
push
aas
out
push
add
jbe
imul
xchg
cwtl
jecxz
pop
pop
ljmp
inc
pop
shll
push
sub
inc
mov
push
mov
pop
daa
inc
loopne
loop
rorl
jmp
xchg
xor
xor
cs
mov
mov
shrl
push
add
jl
fs
mov
jne
loop
xchg
movsb
lret
and
push
es
inc
or
int3
adc
cmpsb
pushf
arpl
push
in
inc
ljmp
clc
or
cltd
stc
int3
mov
nop
scas
adc
mov
movsb
mov
sub
mov
jns
insl
aaa
pop
or
and
js
mov
bound
imul
gs
fsubp
test
xor
sti
shl
in
dec
mov
lahf
loope
fstl
cwtl
push
enter
xor
fidivs
cli
test
in
int
push
add
jns
fdivr
je
cltd
ja
xchg
inc
je
insb
xchg
cmc
insl
mov
test
adc
inc
paddw
out
roll
cltd
notl
repz
xchg
push
sbb
lahf
xor
jnp
movsl
aam
cmp
clc
mov
adc
add
insb
insl
cli
filds
ljmp
mov
push
flds
adc
pop
rorb
xor
mov
mov
dec
cwtl
sbb
addr16
adc
cmpsb
and
xor
add
mov
sbb
push
mov
aam
fucomi
and
idiv
sub
xchg
pop
scas
ficompl
ss
in
push
or
and
repz
movsb
mov
in
push
xchg
mov
mov
xor
pop
cmpl
fs
xor
cwtl
xchg
fdivrs
sbbl
clc
or
adc
push
pop
mov
lret
xchg
outsl
test
dec
dec
add
sbb
popl
popa
sbb
add
mov
lea
shlb
ret
inc
mov
std
mov
pusha
cs
mov
sub
and
sbb
lret
adc
stos
stos
mov
fmull
dec
daa
cmp
jge
jge
aad
les
or
jnp
push
cmp
inc
in
jl
xlat
cld
lret
push
mov
imul
mov
es
pop
int3
std
push
inc
pop
jo
lods
insl
dec
repnz
es
or
int
sbb
ficoms
movsl
push
or
pop
cmpsl
pop
maxps
sbb
push
jecxz
es
dec
mov
inc
loopne
fisubrs
or
aas
adc
leave
push
leave
in
int3
cmp
lds
mov
ret
add
std
nop
jns
sub
push
jo
test
pop
sbb
xorl
cli
add
jne
dec
and
jne
js
test
lret
repnz
mov
aad
enter
inc
mov
ficomps
push
enter
dec
lret
add
cmp
or
repnz
loope
pop
xchg
mov
mov
lods
push
xor
in
lods
insb
cmp
dec
loopne,pt
adc
pop
mov
scas
popa
sub
jno
sarb
fisttps
cltd
cmp
in
inc
jne
and
sub
sbbl
add
jecxz
rclb
cmc
or
in
xor
push
mov
xchg
add
lea
test
popa
mov
popf
fnstenv
sbb
xchg
and
add
leave
sbb
jne
gs
test
fcoml
shlb
mov
push
pop
mov
pop
sbb
dec
cli
sub
shll
xchg
push
seta
sti
imul
jo
mov
je
cltd
es
out
aam
and
mov
vaesenc
shll
adc
fsubl
out
inc
mov
push
xor
inc
test
out
mov
pop
cmp
or
dec
or
and
push
push
jecxz
pusha
out
sub
inc
mov
in
or
mov
and
cltd
mov
mov
xchg
jbe
div
sub
dec
roll
cmp
mov
imull
ds
out
dec
inc
pop
cmp
out
sbb
hlt
scas
jno
sbb
ds
insl
inc
or
cmc
mov
pop
mov
je
inc
adc
pop
ret
call
fwait
imul
push
mov
pop
cmp
xor
pushf
cmpsb
stc
pusha
dec
push
and
pop
in
or
popf
ret
pushl
pop
mov
add
loopne
cmp
jbe
int3
dec
sub
mov
nop
adc
lret
ja
inc
mov
testl
push
insb
and
cltd
in
out
or
test
mov
jo
pop
rcr
mov
push
negb
mov
jb
sub
imul
loopne
out
pop
push
cmc
xchg
je
pop
pop
jge
jbe
imul
add
jb
fcmovnb
aam
dec
jae
fstpl
cwtl
mov
mov
sbb
daa
pop
xor
dec
sub
insb
or
shll
xor
test
cmp
sub
sbb
xchg
fcoml
sub
sti
dec
movsb
ljmp
push
jnp
sub
popa
or
call
test
fimuls
addr16
out
sbbb
sbb
inc
movsl
and
adc
insl
pop
leave
dec
or
aas
xchg
dec
add
leave
jne
xlat
inc
aad
add
out
fsubrp
push
push
imul
movb
jnp
sub
adc
and
xchg
js
mov
insb
and
inc
pop
adc
mov
cmp
data16
in
xchg
and
mov
ret
movsb
inc
add
in
xor
pop
cmp
out
dec
sub
or
insl
or
jns
push
and
clc
aaa
ret
lret
clc
pop
test
and
scas
fisubl
cli
cmpsl
addl
mov
cmp
fwait
lret
xchg
ret
or
add
imulb
shlb
ret
loope
jae
xchg
pop
push
sahf
movsb
inc
jo
jno
std
adc
cmp
or
add
push
or
mov
sbbb
sbb
cmp
scas
push
jp
jl,pt
mov
xor
mov
mov
jb
mov
frstor
jnp
test
cmpsb
push
test
out
or
shrb
push
fisubl
cmp
xchg
push
ds
aam
aaa
xor
cmpsl
inc
pop
pop
xchg
inc
fcoml
cs
nop
dec
es
fiaddl
into
call
xchg
xchg
jg
cmc
fldt
mov
jmp
and
jle
dec
jl
or
repnz
jbe
push
movsl
loop
inc
leave
insl
popa
adc
xchg
jo
pop
int
and
les
jne
pop
jecxz
cmp
dec
dec
push
hlt
add
cltd
mov
pushf
test
imul
xchg
mov
lret
test
lock
cli
or
cmpsl
pusha
jnp
inc
pop
repz
mov
push
sub
flds
movsl
pop
push
insl
mov
cmc
add
out
inc
mull
int
loopne
cmp
movsl
mov
movsl
loope
int3
jae
cwtl
scas
pop
jge
cmp
xchg
aam
call
repnz
insl
inc
xor
mov
sbb
idivb
int
ds
repz
jb
test
cld
pop
xchg
or
add
lods
loop
cs
pusha
inc
sub
mov
sbb
rcrb
cs
pop
pop
push
pop
arpl
inc
adc
jae
ds
fs
push
fsubl
fstpt
nop
iret
test
sbb
pop
test
xlat
mov
cmp
pop
xchg
out
inc
dec
cli
cmc
mov
mov
inc
pop
push
orb
pop
pop
roll
loop
xchg
out
frstor
or
fidivrs
inc
popf
js
fistpll
scas
mov
sbb
clc
cmpsb
jns
xchg
or
mov
sub
leave
repnz
jge
test
repz
sub
jmp
into
cmc
add
sub
push
incb
cmp
testb
inc
ret
adcb
in
movsb
sbb
ds
inc
cmpsb
sub
add
or
sbb
shl
fst
out
or
movl
xor
xlat
dec
jne
mov
gs
rolb
dec
fsubs
dec
js
imul
xchg
in
pop
jl
mov
int
push
xchg
test
cld
popa
push
call
mov
sbb
mov
dec
or
sub
lret
ds
mov
xchg
jmp
rcr
in
pop
lcall
inc
or
fidivl
push
and
inc
loop
add
jge
jno
push
setae
sbb
ljmp
jbe
xchg
and
sub
or
repz
and
or
cmpsl
sti
push
outsb
pusha
jbe
aas
cli
jge
inc
ja
dec
xor
jecxz
dec
out
push
and
in
ret
cs
lahf
sbb
jp
mov
pushf
jl
inc
push
fldl
sub
fstps
aam
movsb
xor
mov
adc
xor
addr16
mov
and
xchg
popf
idivl
loop
icebp
adc
int3
lret
movsl
lods
push
sub
js
sbb
sub
dec
and
outsl
fst
mov
sets
gs
mov
pop
cmc
sti
stc
out
cld
push
mov
popa
inc
shlb
sbb
clc
call
pop
mov
mov
in
addr16
pop
jns
daa
lret
sub
aad
fcmovnu
jecxz
sbb
jg
and
cmp
lret
popa
insl
lods
out
pop
dec
jmp
jns
mov
fsts
pop
lea
jg
sub
mov
jge
clc
and
or
in
movsb
xor
sub
leave
cmp
mov
hlt
mov
or
cmpsl
sti
mov
hlt
cmp
aad
jl
sahf
sti
jge
sub
or
lcall
ficoml
out
notl
popa
mov
div
test
scas
aaa
sub
movsl
inc
adc
std
adc
push
enter
lret
xchg
cmc
loop
test
mov
xor
mov
sub
lret
push
out
outsb
popf
mov
gs
std
cmp
cld
movsl
cmpsb
test
sub
test
mov
xchg
clc
push
pushf
adc
cld
cmp
into
scas
mov
mov
in
add
cmp
push
mov
cmp
sbbl
test
and
sahf
lea
ljmp
pop
js
test
cld
cmpsb
fcoms
mov
push
push
scas
fldcw
cmp
add
jle
dec
hlt
insb
sub
jg
ds
mov
nop
inc
pushf
lock
push
inc
arpl
pushf
jb
dec
sbb
dec
push
mov
mov
hlt
movsl
insl
negl
outsl
popl
ret
jbe
sbb
cmp
in
push
pop
rcrb
cmp
xor
sub
or
cmp
pop
push
cmpsb
out
sbb
jbe
and
and
leave
sub
jae
loop
sub
xor
add
inc
pop
cmp
ret
sub
cmpsb
pop
orb
lcall
aam
lods
add
es
sahf
shll
inc
fadds
pop
sbb
sar
cwtl
ret
cmp
addps
dec
loop
cmpsb
incl
enter
jbe
lock
pop
xor
lods
fsts
fldcw
cmp
fs
pop
sarb
fwait
stc
cmc
cmp
cltd
sbb
jle
rcrl
xor
sbb
stos
gs
out
sub
xlat
andb
push
push
icebp
stc
notl
jecxz
xchg
and
cwtl
and
orb
in
call
fildll
aad
dec
add
mov
and
imul
pop
jle
add
ret
inc
icebp
movl
shrb
divl
in
pusha
test
xor
jbe
xchg
xchg
mov
mov
jge
inc
sub
mov
pop
mov
lcall
call
xchg
jecxz
stos
pop
jnp
jne
std
adc
call
sbb
pop
neg
mov
pop
mov
shlb
lret
sti
mov
int
imul
cmc
in
mov
insb
repnz
shl
fucom
adc
xlat
mov
ds
lods
add
testl
int
cmp
test
mov
dec
outsl
mov
daa
sub
int3
xor
popa
mov
inc
insb
push
mov
and
and
fsubrl
repz
add
stos
fmul
xor
mov
js
jle
addl
push
xchg
pop
fldenv
fdivs
mov
cld
cmp
sbb
sbb
sub
iret
sti
and
ss
adc
out
and
mov
aas
adc
ja
dec
push
aas
dec
loope
jo
test
pop
jae
mov
dec
test
in
pushw
cltd
jmp
sub
cli
nop
mov
ss
pusha
xchg
pop
stos
xor
jo
jle
fs
push
inc
pushf
push
andb
or
cmp
cmp
cld
arpl
mov
mov
aaa
push
sbb
push
push
movsl
movsb
clc
arpl
pop
mov
adc
loope
cltd
lret
loopne
xchg
mov
xchg
sbb
sub
cmp
fisubrl
mov
sarb
mov
aaa
cmpsb
fsubrs
movb
int3
ja
cmp
outsb
out
xchg
mov
negl
cld
push
inc
rcrb
and
fimuls
ja
mov
pop
clc
pop
idivb
test
inc
dec
or
loopne
xor
cs
cwtl
mov
pop
test
ja
dec
je
sub
push
push
fnstsw
in
fistl
cmp
test
push
aaa
add
and
outsl
and
call
mov
imul
add
decb
lcall
add
fisttps
sti
pop
push
mov
dec
movsb
jge
imul
inc
add
xor
and
lahf
dec
orl
cmp
inc
pop
xchg
out
lret
cs
rcr
sub
mov
out
xor
lcall
mov
and
adc
or
scas
push
and
js
jnp
test
fwait
loop
icebp
or
rcl
gs
mov
xchg
shll
test
sub
stos
shrl
xor
repnz
adc
dec
icebp
ds
das
mov
adc
ret
lret
push
add
das
sub
in
divps
jo
pop
lret
stos
movsb
cmp
mov
sbb
hlt
inc
sub
std
jne
in
sub
mov
sbb
test
clc
fadds
pop
sub
dec
mov
lret
add
jb
fldt
in
jno
xor
add
pop
mov
inc
in
fistps
or
push
and
mov
mov
pusha
into
adc
mov
shr
popf
outsl
jo
or
aas
stc
fsubs
pop
loop
hlt
movsl
cmp
adc
sahf
adc
pop
fcoms
xchg
shr
lahf
test
fs
cmp
or
mov
push
add
ret
mov
shrl
dec
adc
cmp
and
dec
ret
cmc
lcall
inc
nop
sarl
pop
iret
popa
mov
jp
repz
adc
and
pop
lret
jl
in
jge
out
jb
jnp
scas
xor
ret
dec
mov
or
or
sbb
push
sbb
js
and
fs
push
cmpsb
mov
mov
movsl
into
mov
imul
int3
fidivs
mov
pop
mov
stos
aaa
cmc
pop
adc
push
adc
stos
test
inc
push
sbb
jg
sub
push
stc
movsb
icebp
mov
xor
xchg
loopne
cmp
inc
insl
aam
xchg
add
les
push
mov
cwtl
dec
inc
add
adc
inc
iret
push
adcb
je
call
inc
clc
adc
or
xor
shlb
adc
and
mov
repz
gs
fildll
aaa
adc
add
imul
in
cs
jmp
xchg
inc
pop
sub
cltd
mov
lret
push
adc
push
or
arpl
xor
je
mov
repz
pushf
popf
mov
cld
adc
pusha
jns
movsl
pushf
arpl
xchg
ret
xor
cli
in
fsubrp
xchg
test
push
rcll
icebp
mov
insl
mov
mov
or
push
test
js
daa
pop
adc
mov
mov
popf
mov
repnz
push
jne
out
gs
mov
insb
test
lahf
mov
arpl
sub
cli
pop
inc
and
jle
test
lods
or
mov
inc
cmpb
jae
js
test
adc
mov
popa
lret
imul
jne
add
pop
out
xchg
shrl
mov
cltd
pop
fistl
pop
fwait
test
stc
mov
arpl
lds
mov
and
lret
hlt
sbb
pop
adc
cld
jnp
add
out
adc
mov
cs
pop
xchg
out
and
maskmovq
shlb
lods
xor
bound
pop
in
inc
repnz
pop
ljmp
push
jno
je
in
arpl
jo
adc
push
push
pusha
cmp
out
jo
js
fisttps
sbb
mov
addr16
out
xor
xor
mov
or
mov
je
scas
mov
mov
mov
rcrb
xlat
inc
enter
add
out
pop
push
ja
mov
fs
loope
pop
xchg
cmp
aaa
cld
pop
add
mov
add
gs
xor
jg
fnstcw
jns
iret
add
push
or
loop
jg
bound
mov
inc
inc
ss
je
cmp
pop
into
insb
into
les
xchg
test
sahf
pop
adc
jle
and
push
lds
loop
mov
inc
mov
rcl
fincstp
imul
jne
mov
cmp
ljmp
ret
lock
repnz
out
or
mov
and
out
lret
decb
pop
clc
and
xlat
inc
ficoml
push
sub
push
jp
mov
sbb
jno
mov
pop
sbb
jg
pop
pop
dec
repnz
mov
push
arpl
testl
jbe
out
or
or
int3
fdivs
pop
mov
outsl
mov
cmp
in
test
pop
xor
mov
sub
fistps
ss
push
xorl
scas
cmp
or
std
mov
lahf
repnz
cmp
in
add
pop
in
neg
xchg
pop
mov
sbbb
push
push
out
jae
inc
push
xor
add
cs
cmp
scas
xchg
fisttps
lea
sub
inc
sub
cli
jnp
mov
sbb
inc
testl
lods
das
mov
push
lret
cli
test
pop
sub
push
cmp
int
dec
je
dec
es
mov
lods
adc
dec
pop
add
rcrl
mov
jno
cmovp
xchg
pop
mov
das
test
ds
adc
mov
pop
cmp
pop
and
cmpsb
lcall
inc
xor
mov
in
mov
or
lcall
push
aam
inc
mov
sub
pop
cwtl
repnz
adc
push
jecxz
ret
mov
add
xchg
mov
jb
adc
mov
jge,pn
bound
cmp
mov
xlat
xor
pop
sbb
xchg
xchg
repz
aam
into
cmp
leave
inc
into
js
sbb
insb
pop
loop
fcmovnb
push
mov
lods
mov
inc
cmp
lcall
mov
jecxz
das
jo
cld
mov
movl
add
test
sub
mov
pop
mov
jae
fildll
add
xor
iret
dec
adc
inc
mov
test
pop
popf
dec
cltd
out
cmpsl
ret
sbb
dec
shrb
mov
call
out
outsl
cmp
pop
mov
lret
mov
xchg
mov
aad
test
lea
icebp
mov
test
shll
shlb
jl
dec
xor
lods
das
imul
dec
lahf
insb
mov
test
popf
jmp
divb
cmc
sub
xchg
xor
push
mov
out
adc
data16
jl
xchg
sbb
int
jns
mov
loop
mov
frstor
ret
xchg
push
clc
stos
adc
out
testb
jae
lcall
insb
xchg
sbb
fcoms
mov
pop
push
aam
mov
jl
or
je
lret
and
lcall
lret
adc
popf
mov
cmpsb
pushf
popf
or
xor
jge
pop
mov
cld
adc
leave
stos
inc
push
xchg
xor
mov
int3
outsl
push
clc
adc
adc
in
ret
popa
inc
push
ret
xor
insb
or
mov
int3
inc
fisubs
dec
dec
sbb
outsl
rcrb
into
iret
xlat
rolb
insb
push
outsb
and
insb
or
test
ljmp
jp
or
pop
pop
inc
in
rol
popa
mov
test
ljmp
mov
jno
frstor
inc
and
sub
orb
clc
aas
or
and
mov
fidivrl
mov
mov
adc
xchg
stos
adc
jbe
stos
inc
out
int3
out
pop
lahf
jns
dec
dec
shlb
pushf
out
loope
retw
test
jge
xor
mov
cmp
es
mov
dec
push
rol
shr
add
sbb
outsl
and
test
mov
pushf
icebp
call
lret
cmp
lds
cmp
cmpsb
scas
cmp
sbb
aam
jae
or
test
out
mov
pop
jb
addr16
jle
add
popf
fstps
inc
mov
xchg
in
or
lods
sbb
daa
xor
int3
aaa
iret
cmpsl
inc
jno
je
imul
xor
jns
pop
lds
outsl
int
inc
mov
add
jbe
mov
leave
pusha
cmp
mov
es
cmp
pop
nop
inc
movsb
mov
mov
xchg
retw
push
in
xchg
loope
sbb
push
imul
sub
pushw
cli
mov
inc
test
lret
mov
xchg
mov
pop
mov
push
clc
mov
ljmp
in
jb
inc
scas
mov
jge
cs
xchg
xchg
pop
cwtl
cmp
repz
enter
lea
or
dec
cmc
cmp
push
pop
pop
xor
mov
repnz
clc
int
pop
adc
xchg
mov
nop
je
push
sbb
pop
cltd
pop
push
incb
mov
hlt
xchg
ret
nop
xchg
dec
jnp
xchg
nop
mov
cmp
jmp
and
movsb
add
add
xchg
out
fcmovnbe
and
mov
addr16
stc
lods
aas
push
mov
mov
movsl
ja
sub
jne
push
rcl
inc
call
mov
std
or
cmp
jle
incb
jg
and
mov
mov
std
ret
xchg
or
les
inc
fwait
add
mov
xchg
cld
mov
push
mov
sti
scas
mov
es
ljmp
test
jp
ficompl
cli
sbb
adc
inc
or
int3
loop
xchg
cmpsl
push
lea
das
mov
dec
inc
mov
cmp
xchg
mov
call
js
xchg
pusha
jo
leave
stos
xor
mov
lea
or
loope
icebp
cmp
aaa
sub
or
dec
into
or
loopne
fnstsw
ret
adc
call
inc
mov
idivl
test
stos
jecxz
pop
dec
push
movsb
inc
sub
into
xlat
xor
cmp
in
iret
scas
cmp
xor
jg
and
sbb
pop
out
xor
aad
test
add
arpl
inc
rcr
sarl
fwait
imul
and
mov
jns
lcall
adc
jbe
push
das
sti
out
cmp
aaa
rcrl
jle
or
mov
subl
or
imul
into
out
or
mov
and
js
aad
or
mov
xor
lods
fstps
leave
xor
insl
addl
mov
pusha
jmp
pushf
xchg
insl
iret
jp
xchg
push
clc
rorl
dec
fisttpll
jo
daa
mov
cmp
cmpsb
mov
cltd
pop
sbb
lret
jp
sarl
jge
push
inc
inc
pop
mov
xor
scas
add
pushf
jne
sti
mov
aas
mov
dec
dec
mov
push
in
daa
int3
das
lahf
rol
lret
mov
xor
adc
adc
scas
mov
lret
inc
jb
dec
dec
cmp
test
imul
cmp
pusha
pop
lea
push
xchg
hlt
mov
or
and
in
lret
pop
xchg
out
ja
sub
aas
stc
fs
sub
jg
xor
mov
test
add
inc
xchg
mov
mov
rcr
mull
xor
lock
lcall
mov
sub
or
inc
xor
push
mov
stos
and
mov
sub
dec
push
out
push
pop
addr16
mov
aaa
push
and
mov
ljmp
and
lea
les
push
repnz
das
jns
xor
cmp
mov
repnz
js
bound
dec
push
sbb
fldl
jne
nop
mov
rcll
pop
pop
out
jge
pslld
in
mov
adc
iret
inc
jae
and
xchg
xor
pusha
lods
call
xchg
jb
sbb
cmp
cs
xchg
fs
sub
mov
leave
cmc
in
out
cs
adcl
jl
push
imul
sti
leave
jo
popa
dec
cmpsl
xchg
mov
push
and
jl
xor
dec
xlat
fidivrl
rorl
sarl
dec
pop
sbb
pusha
sbb
test
xchg
dec
dec
cmpsl
sbb
out
aam
pop
mov
pushf
push
xchg
fldt
pop
adc
ret
movsl
in
fs
shlb
xchg
jnp
adc
xor
lea
idivb
sub
push
lret
xchg
mov
adc
sbb
mov
cltd
jp
inc
std
sub
sub
pop
jmp
ret
in
cmp
dec
hlt
call
in
sbb
pusha
xchg
sbb
in
shld
inc
or
mov
xor
fisubrl
dec
movsb
lret
fidivrs
cmp
mov
rcrb
sub
jno
flds
pop
pop
mov
pop
xchg
cltd
pop
rcll
bound
mov
mov
loopne
xchg
shll
cli
and
cmp
add
xchg
dec
out
bound
ret
in
lret
fbstp
jne
mov
mov
jo
sub
pushf
aam
in
sbb
adc
pop
mov
xchg
sti
push
push
loop
cmp
fidivrl
lahf
popf
push
mov
pop
pop
loopne
add
pusha
xor
or
push
cmp
mov
cmp
test
push
xchg
jnp
mov
leave
jge
mulb
pop
adc
dec
pop
lcall
lds
mov
les
xchg
add
xorb
jns
ficomps
gs
popf
inc
aas
cmp
dec
inc
add
or
inc
and
scas
jmp
outsl
imul
fdivrs
in
jb
or
push
faddl
insl
lret
fisubrs
mov
adc
pop
and
repz
inc
jle
ss
sbb
stc
mov
dec
ret
js
or
ljmp
aam
sbb
xchg
test
sbb
and
stos
movsl
mov
mov
adc
cmp
fisttpl
int
repnz
inc
mov
shl
inc
xlat
aad
add
cmp
adc
mov
xchg
or
cs
inc
mov
addl
push
sub
inc
bound
call
dec
sub
clc
jne
mov
or
and
mov
scas
jbe
or
int
push
cltd
sub
movb
out
sbb
push
jne
pop
enter
add
insl
pop
mov
stos
and
add
mov
xor
cmp
push
jmp
out
rol
lods
mov
adc
inc
add
dec
adc
xchg
mov
lahf
jl
jo
xorl
sbb
sarl
imul
and
dec
jmp
mov
mov
add
cmp
loopne
push
insl
fimull
dec
xlat
je
pop
cmp
test
xor
sbb
lcall
nop
sub
jnp
cld
and
pop
push
scas
out
in
loope
ret
stos
fsubrl
fwait
push
mov
inc
adcl
nop
aas
mov
push
jno
jb
popf
pop
xchg
push
mov
mov
repz
mov
sarl
fmull
loopne
or
or
js
sub
loopne
std
xchg
xchg
xchg
cmp
mov
xchg
or
out
xchg
mov
adcl
out
ja
pop
fdivl
adc
push
insb
mov
hlt
cmpb
out
xor
cwtl
adc
stos
sub
rcrl
xor
scas
repz
call
das
push
mov
out
add
movsb
xchg
imul
notl
cmp
mov
dec
sbb
dec
sbb
xchg
mov
inc
xchg
shlb
int3
sbb
mov
and
push
pop
out
jg
xchg
sub
fcom
add
or
or
xor
cli
clc
fwait
sub
pop
cmp
pop
jo
mov
cmp
cli
xchg
js
fcoml
or
add
lcall
mov
scas
movsb
cmc
scas
and
scas
jne
dec
in
mov
fwait
push
fwait
inc
testb
jecxz
das
sbb
in
xchg
lods
nop
cwtl
fimuls
cmp
sbbb
push
pop
out
mov
jo
jo
ret
scas
pop
out
xchg
daa
lret
int
test
orb
lock
out
inc
insl
pop
pop
or
inc
movsl
movsb
nop
dec
sbb
lret
sbb
nop
inc
add
sahf
aad
jno
pop
cmp
sub
ljmp
cmp
pop
mov
test
push
xor
sub
arpl
xorb
idiv
pop
jle
jg
xchg
cmpsb
pop
mov
call
lret
xor
pop
lods
push
xlat
xor
jnp
pop
mov
sbb
rcrl
xor
enter
ljmp
mov
xchg
inc
in
dec
dec
out
xchg
stc
jb
sub
idivl
fcom
dec
mov
and
fistps
xchg
jmp
out
icebp
sub
sub
fcomi
jnp
mov
pop
pop
lds
mov
outsb
imul
sbb
outsb
dec
mov
and
mov
sbbl
sti
movsl
push
sub
enter
push
add
imul
pop
jo
push
sub
xchg
je
sbb
mov
data16
push
mov
pop
sbb
mov
popa
jno
mov
addr16
nop
in
pushf
sbb
push
ss
shll
push
pop
lcall
xor
movsb
fwait
push
test
push
xor
and
andb
push
lahf
mov
add
push
sbbb
inc
test
lods
sahf
divl
xchg
int3
add
sub
jg
mov
daa
inc
repz
sar
push
int
lea
into
push
push
shl
pusha
and
aam
int3
push
mov
nop
loope
arpl
xor
lods
leave
stc
pusha
sbb
stos
adc
sarl
dec
jnp
mov
add
call
xor
sub
out
and
xor
fcoms
xlat
lock
inc
into
out
jne
xchg
mov
sahf
pushf
cs
xchg
scas
sbb
lret
enter
mov
mov
add
in
fistpll
push
xchg
fisttps
inc
pusha
imul
jg
add
adc
push
sub
mov
xchg
mov
push
cmp
mov
dec
test
xchg
dec
les
ret
enter
and
movsl
xor
lret
lods
scas
push
popa
push
sub
cmp
fwait
cmp
cmpsl
mov
jbe
push
mov
add
mov
repnz
pop
lock
pop
enter
pop
ss
inc
ja
in
inc
jbe
or
mov
jmp
aam
sub
lods
jge
mov
add
jno
into
js
add
sbb
into
adc
fnstcw
ja
cmp
push
data16
repz
inc
jg
inc
jo
pushf
imulb
adc
push
stos
inc
test
js
jbe
lahf
hlt
stc
sbb
mov
rorb
iret
xor
mov
cmp
and
out
fidivl
mov
enter
cmpsb
and
xor
mov
out
mov
js
sahf
jecxz
mov
je
into
inc
xor
loopne
clc
jns
jne
stos
mov
imul
sarb
and
mov
js
push
xor
adc
fldl
adc
dec
cmp
stc
ret
sar
fists
push
add
add
lret
popa
xchg
bound
ret
in
mov
and
fsts
jg
cld
jmp
lret
push
or
add
jns
test
push
add
jg
adc
fnstenv
mov
or
pusha
and
and
cmp
adc
cs
adc
fsts
and
pop
mov
addps
and
mov
das
xchg
mov
pop
es
dec
push
loopne
push
jbe
mov
mov
pushf
outsb
movsb
test
or
out
test
inc
shlb
mov
enter
mov
and
add
ja
leave
enter
xor
sub
ljmp
push
loop
mov
in
xchg
aad
or
lods
lock
clc
loope
jae
fstps
dec
rcl
and
cmp
push
popaw
mov
lds
sub
test
jne
mov
inc
mov
loope
das
call
gs
pop
sbb
jns
adc
pop
jmp
mov
sub
jl
loop
mov
pop
push
fiadds
adc
iret
dec
push
idiv
js
dec
or
in
adc
ljmp
xchg
cmp
pop
cltd
fadd
cmpsl
into
sbb
movsb
dec
mov
mov
mov
xchg
mov
sbb
pop
ret
and
test
aas
or
pop
inc
mov
shlb
insb
mov
mov
mov
jbe
orb
jp
pop
adc
jbe
sar
inc
shlb
inc
divps
mov
xchg
cld
mov
inc
popf
pop
js
lahf
lock
test
js
rorb
int3
xabort
cmp
xchg
sbbl
sub
lds
dec
mov
mov
inc
cmpl
in
popl
mov
cmpsb
int
in
clc
rclb
repnz
push
pop
cltd
fdivrl
cmp
repnz
mov
push
dec
pop
addr16
arpl
add
movsl
fs
and
clc
pop
inc
adc
incb
sbb
in
gs
ss
and
jle
ret
aad
push
lcall
pushf
sbb
add
pop
xor
adc
sub
sub
xchg
lods
add
dec
outsl
into
sahf
inc
push
out
rcll
mull
pop
rorb
mov
out
fdivs
repz
hlt
add
stos
and
fstpt
lret
sbb
popf
pop
add
adc
sub
fdivrs
pop
lret
inc
push
mov
cmp
xor
sbb
pop
mov
add
fstpl
xor
mov
add
pop
push
dec
add
or
test
push
pop
or
repnz
lahf
pop
push
loopne
hlt
inc
jmp
push
cmc
leave
jno
push
fldt
fdivl
mov
rclb
psubusb
pop
mov
pop
adc
sbb
lds
add
dec
scas
push
outsl
lahf
push
dec
sub
fsub
es
cmp
xor
xchg
jb,pn
cmp
fadd
fldcw
cmp
pop
lods
sub
mov
mov
inc
mov
sub
xor
sbb
in
sub
hlt
mov
ret
nop
cwtl
imul
stc
dec
push
pushf
bound
scas
fwait
dec
jmp
cmp
dec
insl
js
insl
rcrl
mov
ljmp
jg
insb
lahf
lret
pop
fwait
lods
stos
mov
push
push
mov
and
sbb
repnz
pop
out
mov
nop
scas
aas
pop
jo
pop
xchg
test
fldl
and
mov
sbb
ret
adc
dec
mov
adc
ljmp
lods
jle
xchg
mov
cld
xor
pop
xchg
fcmovbe
mov
dec
xchg
fiadds
out
xor
sub
push
xor
ficoms
or
ret
push
mov
outsb
xchg
cwtl
scas
jae
imull
adc
out
and
xor
push
sub
sbb
push
and
and
imul
xchg
data16
repz
xor
scas
mov
lret
mov
fwait
jbe
es
jle
cmc
jo
xchg
ljmp
outsb
ja
mov
mov
cmpsl
dec
and
xchg
xor
jae
js
sbb
add
mov
and
xchg
rclb
arpl
ljmp
cmp
das
push
ret
cmp
mov
add
hlt
scas
call
cmp
pop
add
dec
mov
loope
mov
dec
add
mov
adc
scas
lods
cli
stos
push
movsb
popf
mov
out
jge
mov
sbb
dec
aam
fprem1
in
mov
mov
dec
pop
dec
adc
mov
mov
cld
ds
jmp
imul
fidivrs
test
xor
int3
sbb
daa
cltd
fdivl
push
add
es
test
int3
sub
adc
inc
and
in
sti
shll
inc
jo
push
fxch
fsubs
mul
and
and
popf
les
adc
jp
mov
pop
push
mov
mov
jl
fldenv
leave
adc
fsubs
add
dec
or
jp
pop
int3
out
out
sub
imul
outsl
and
pop
fwait
dec
cmc
cmp
das
cld
lods
negb
or
push
pushf
xchg
lods
mov
inc
xchg
repz
leave
test
push
dec
and
mov
nop
pop
arpl
das
enter
js
outsl
pop
daa
shrl
sub
fmuls
xorl
adc
jl
aas
inc
dec
mov
adc
fsubrs
jnp
jp
add
add
pop
ret
push
mov
addb
lock
jns
xchg
and
xlat
in
imul
push
jecxz
jmp
push
add
jb
xchg
pop
mull
add
inc
andl
fcoms
pop
repnz
cwtl
push
pop
cmp
in
push
insb
aad
rcrl
sub
pushf
std
js
aad
push
cltd
subb
mov
scas
call
ret
out
jbe,pt
insb
mov
xor
fchs
jl
mov
fcmovb
out
sub
jno
divb
lea
arpl
stos
stos
adc
je
icebp
insb
xor
or
in
sarb
rorl
mov
test
test
ficoms
cli
push
push
rolb
scas
rcl
in
xchg
out
in
xchg
mov
push
hlt
or
fadd
push
mov
sahf
mov
fimull
test
mov
pusha
mov
int
clc
scas
ficompl
imul
jae
in
push
mov
push
xchg
int3
add
addl
mov
sub
jmp
mov
out
mov
mov
xchg
dec
push
adc
and
cmp
nop
push
mov
jns
enter
movsb
mov
lcall
lods
movsl
xor
cmp
cmp
pusha
hlt
xchg
in
sbb
inc
ficoml
aaa
lret
xor
enter
push
xor
cmpsl
mov
out
cld
sbb
and
adc
in
popf
sbb
sbb
adc
out
int
adc
push
iret
xor
xor
lods
or
popf
push
push
int3
xor
loope
push
test
repnz
add
ja
xchg
cmp
icebp
cli
scas
jae
stc
call
adc
jnp
cmpsl
mov
inc
jnp
xor
inc
jl
jno
pushf
jnp
out
add
fcmovnbe
push
fsubl
mov
les
xchg
nop
repz
cmp
cmpsb
jg
xchg
pop
ss
dec
pop
dec
or
mov
xor
and
adc
mov
pop
addr16
jg
jmp
jle
xor
push
xchg
add
negl
test
out
mov
arpl
lds
insb
push
fwait
or
js
or
mov
cs
stos
xor
into
popl
nop
insb
push
test
fimuls
dec
scas
sbb
xchg
adc
sub
fcmove
insb
and
pop
shr
cli
sub
xchg
pop
sub
ljmp
cmpsl
popa
fbstp
mov
inc
mov
mov
dec
clc
push
movsl
stos
xor
scas
fsubs
shrb
insb
xchg
add
and
cmp
dec
dec
inc
cmp
adc
xchg
filds
mov
mov
test
adc
sub
xlat
xchg
sbb
mov
xchg
rcrl
add
jmp
sub
jp
inc
clc
pop
mov
cmpsb
inc
adc
cli
dec
hlt
xor
mov
out
add
inc
lahf
jmp
mov
pop
arpl
mov
mov
xchg
lcall
mov
outsl
adc
pop
add
sbb
mov
aad
dec
shll
pop
jl
dec
rorb
hlt
sub
pushw
push
xorb
data16
pop
in
mov
aas
out
cmp
fdivr
xchg
jl
icebp
js
push
sub
sub
mov
adc
sbb
mov
pop
popa
cwtl
sub
data16
icebp
test
cwtl
push
call
jae
aad
xor
shll
xchg
or
pop
push
hlt
jecxz
popf
xchg
and
mov
sub
mov
xor
pop
cmpsl
fs
push
cmp
call
lcall
push
push
fdivrl
jo
mov
mov
jo
push
cld
notl
pop
popf
mov
and
rcrl
ja
test
fistpll
and
notl
mov
dec
popf
adc
mov
add
out
pop
or
xor
mulps
sub
mov
mov
cmc
mov
jne
add
daa
loope
psubw
jo
test
or
push
std
jle
aad
inc
xchg
adc
or
ret
sbb
stc
jle
inc
mov
in
into
cmp
mov
call
mov
pop
pop
push
jnp
and
push
add
xor
out
add
lock
cmpsl
mov
aaa
sbb
fs
sub
mov
aad
xchg
mov
jp
ret
in
outsl
mov
xchg
xchg
cmp
mov
outsb
push
sub
je
cli
test
sbb
cli
aaa
jnp
loope
aas
mov
cwtl
inc
shlb
lret
fsubrl
push
add
movsl
push
jp
pop
jg
loope
inc
sub
aas
out
sbb
bnd
shlb
xchg
sub
repnz
insb
stc
inc
fsubrp
sub
stos
outsb
mov
cmpsb
cmp
aam
add
roll
and
out
pop
lods
cmp
xchg
das
aam
hlt
icebp
ljmp
adc
mov
clc
repnz
mov
iret
mov
out
push
xor
lret
fisttpl
cli
imul
inc
hlt
xor
into
pop
jo
xor
add
mov
fdivrs
stc
popa
cmp
outsb
out
xor
cld
sbb
mov
push
dec
iret
lock
imul
push
aas
push
inc
mov
movsl
add
cmp
out
sbb
bound
lcall
fdivl
loopne
das
dec
out
xor
cwtl
std
loopne
xchg
mov
fidivs
push
jo
pop
xchg
repz
ljmp
push
sbb
clc
dec
cltd
or
fisubrl
sarl
loopne
int
test
add
mov
je
loop
fstl
push
divb
mov
push
idivl
push
ret
ja,pt
push
push
clc
lds
inc
pop
add
xchg
pop
iret
jg
mov
xchg
iret
cmp
jbe
int3
jecxz
inc
jns
insb
sti
leave
cmp
scas
push
fwait
pop
cmp
movsl
adc
call
lods
lcall
xchg
pop
stos
lds
push
pusha
mov
into
std
mov
pop
int
jg
aaa
iret
xchg
pop
mov
jns
in
mov
popa
repz
sarb
imul
xor
mov
das
push
xor
popa
adc
xor
jns
int
aas
jl
cld
lods
push
popf
inc
shrb
gs
and
fists
outsl
mov
xor
push
aam
int
in
pushf
lock
icebp
aas
int3
mov
fsts
dec
outsb
in
ss
cmp
sub
lcall
inc
mov
lea
mov
mov
clc
ret
dec
testb
fists
ds
mov
cli
fwait
cmp
mov
movsl
mov
mov
push
adc
adc
jecxz
rclb
in
dec
pusha
add
xchg
stc
stos
cmpsl
lahf
mov
jb
mov
pop
popf
stos
aam
mov
out
aam
das
xchg
push
test
xchg
shll
dec
mov
gs
sbb
mov
push
stos
or
add
mov
pop
push
mov
test
sti
negb
rolb
mov
popa
and
xor
push
jl
sub
push
add
fs
dec
sarb
stos
jae
pop
inc
or
push
loope
jge
shl
jns
jb
jno
adc
in
mov
mov
sub
inc
or
cltd
jo
mov
mov
out
fistps
pop
rcrl
push
mov
sbb
sbb
jns
lods
mov
mov
mov
push
fs
pusha
sbb
inc
popf
push
xchg
mov
push
sbb
adcb
loopne
rorl
lods
out
lahf
sbb
faddl
inc
pop
nop
iret
pushf
xchg
push
out
test
jbe
jl
in
jge
sub
xor
scas
or
lock
mov
sub
das
mov
xorl
push
fsubs
push
cmpsl
shl
in
loopne
into
jecxz
stos
push
popa
push
xor
sbbb
subl
imul
or
hlt
and
xchg
dec
dec
push
nop
outsb
aaa
repnz
pop
std
mov
shrl
arpl
adc
pop
inc
rclb
adc
stos
adc
int3
push
pushf
insb
lret
mov
add
push
jecxz
add
les
cld
out
in
pop
mov
xchg
lcall
and
push
stc
ljmp
xchg
cmpl
addr16
stos
rcll
fsts
sub
push
xchg
xor
out
cmp
enter
jle
adc
jb
add
out
xchg
sub
mov
out
cmc
mov
mov
js
or
dec
mov
jae
jmp
cwtl
fisubrl
xchg
jge
mov
lods
mov
push
loope
clc
mov
imul
push
xor
lea
loope
mov
dec
jmp
cwtl
dec
sbb
pushf
lods
mov
js
test
cmp
and
into
inc
movsb
pop
push
mov
in
es
dec
xor
or
loop
mov
inc
adc
sbb
ret
xchg
xchg
xchg
xor
add
fwait
test
ret
js
mov
or
push
pop
inc
dec
dec
cmp
stos
call
lods
jl
mov
mov
inc
inc
mov
lds
and
mov
lods
push
sub
test
insl
mov
aaa
bound
dec
inc
dec
insb
mov
jmp
fwait
pop
sbb
jbe
bound
jmp
and
ffreep
bound
lods
shr
cmp
jno
rorb
mov
pop
xchg
and
jbe
mov
push
adc
mov
xchg
lods
cmc
lods
and
fistps
loop
sbb
les
scas
jbe
pop
pop
push
rolb
inc
fxch
dec
cmp
insb
pop
lret
push
add
ljmp
movl
sbb
inc
cwtl
imul
jle
lahf
shrb
inc
push
adc
test
sub
mov
or
jle
cld
add
dec
xor
pushf
imul
outsb
cbtw
inc
je
enter
clc
mov
xchg
lret
pop
push
pushl
aaa
lods
fidivrs
test
mov
push
adc
int
cltd
sbb
aas
add
push
ds
pop
pop
test
pop
xor
cmp
addr16
xchg
nop
or
mov
push
jecxz
sub
data16
inc
stos
adc
inc
mov
mov
inc
mov
mov
xchg
inc
push
pop
outsl
scas
ja
int3
shlb
adc
out
cmp
adc
pop
in
out
dec
mov
loope
sbb
call
mov
push
mov
adc
je
push
aas
dec
es
sub
sub
push
pop
fcmovb
test
repnz
scas
sarb
add
inc
das
or
hlt
inc
mov
or
xchg
je
subb
ror
mov
jl
es
jb
rcll
push
jl
push
out
add
push
mov
dec
ret
xchg
fwait
mov
xchg
inc
movsb
jns
and
mov
pusha
cmp
inc
or
sub
push
outsw
pop
mov
insl
ficoml
mov
pop
into
rorb
sub
and
mov
jge
cltd
dec
int
sbb
xchg
lret
js
in
int3
ret
sbb
push
or
in
mov
leave
push
mov
repz
push
aam
or
adc
jg
out
xor
fmul
dec
aam
popa
cmp
or
xchg
mov
fiadds
xor
out
xchg
dec
sub
out
jae
mov
sub
dec
dec
and
insb
or
out
loop
and
xlat
js
sub
sbb
pop
shr
sbb
imul
cli
imul
or
mov
test
inc
and
leave
roll
jns
stos
jb
movsl
stos
sbb
mov
mov
int
loop
movsb
pop
or
adc
jge
xchg
add
fs
out
sub
sub
adc
mov
popf
minps
push
movsb
es
cltd
pop
pop
test
mov
fadds
push
aaa
pop
push
cmp
lcall
shll
notb
sub
mov
cwtl
pop
xchg
and
out
clc
and
jae
xchg
mov
cwtl
pop
enter
xchg
adc
stc
sbb
mov
in
rcll
insl
adc
mov
aad
pop
fisubs
lds
in
push
lcall
sub
popa
je
jne
paddw
or
test
mov
lds
cmp
push
mov
dec
lcall
lock
rclb
sub
shll
or
pop
jne
outsl
cmp
clc
testb
push
rorl
in
shll
stos
adc
inc
add
mov
lea
imul
loopne
dec
push
std
jb
test
jp
adc
or
xlat
das
xchg
jge
xor
push
mov
xchg
push
push
cld
rolb
lret
test
iret
popa
iret
push
rcr
dec
stos
push
cld
sub
add
xchg
push
outsl
pop
popf
fst
mov
shl
jae
movsb
pop
or
xor
in
xor
leave
les
adc
in
adcl
or
jno
mov
enter
out
out
add
inc
sbb
ds
or
push
ljmp
mov
call
lcallw
out
push
sahf
cmp
jg
sbb
push
in
push
jge
sub
cmp
mov
shlb
lcall
rol
out
dec
jne
xchg
jge
lcall
push
jle
dec
xchg
out
iret
stc
mov
dec
mov
lret
push
das
inc
dec
adcl
mov
shrl
xlat
out
mov
jecxz
push
sarl
dec
xchg
jle
inc
mov
cld
lahf
and
pop
push
xchg
push
jbe
xchg
mov
rcl
out
inc
bnd
mov
cli
lea
adc
mov
int3
xor
mov
cmpsb
pop
and
popa
outsl
mov
adc
out
testb
inc
sub
lock
popf
xchg
add
xorb
push
call
outsb
push
dec
push
rorl
in
lcall
movsl
out
sarb
xor
add
sub
dec
or
add
inc
shrl
inc
dec
fucompp
ss
leave
or
stc
rclb
xor
out
jnp
out
inc
xor
mov
insb
or
jns
fidivl
push
sub
lods
cmp
iret
adc
xor
leave
ret
adc
stc
lcall
scas
dec
test
lock
push
sbb
xor
scas
lahf
pop
jge
jmp
push
out
mov
aam
js
std
pop
sbbb
add
xor
out
test
mov
adc
cmp
into
adc
lods
push
movsb
cmp
sahf
test
daa
or
data16
jns
hlt
or
fnstenv
insb
push
loopne
xchg
sub
leave
in
out
push
sbb
out
sub
negb
lea
mov
dec
test
fimuls
dec
shlb
out
ror
sub
jno
dec
movsl
adc
fildl
pop
cmp
and
rdrand
test
sti
bound
or
rol
pop
sbb
popf
dec
xchg
insl
outsb
push
xchg
jae
imul
insb
daa
dec
pop
adc
sbb
push
mov
test
xor
cmp
push
dec
les
jmp
popa
mov
mov
push
xor
mov
cmp
cmc
sqrtps
rcll
sbb
lea
outsb
inc
cmp
mov
mov
fldenv
mov
sbbb
dec
xor
sub
fistps
int
cwtl
or
adc
bound
sbb
sbb
xor
lock
int3
notl
test
and
imul
push
or
repz
pop
addb
mov
mul
stos
or
orb
xchg
out
popa
xchg
mov
lret
cmc
xchg
bound
call
addr16
pop
mov
pop
push
cmp
and
js
pop
sahf
and
negb
pop
lcall
ljmpw
repz
shll
jle
lds
sbb
test
or
insw
dec
push
pop
sub
pop
aam
in
xchg
call
xor
notb
push
mov
imul
mov
xchg
inc
pop
ja
sbb
adc
cmp
fbld
and
test
push
xchg
sub
pop
ret
jecxz
imul
test
mov
push
movsl
insb
pop
push
lds
ja
gs
cs
mov
adcb
xchg
pop
inc
sub
or
and
lods
fistpl
outsl
pop
and
mov
xor
cmpl
sub
js
or
leave
dec
or
sbb
xor
scas
pop
insl
dec
lret
hlt
pop
mov
and
or
int3
outsl
xor
cs
pop
lds
fdivrl
shll
imul
jae
xchg
in
shrb
mov
subb
clc
xchg
pop
add
push
int
les
jno
into
add
lret
insb
cwtl
push
jae
ljmp
mov
mov
je
adc
ljmp
xorb
dec
loope
icebp
dec
or
aaa
arpl
jns
pusha
dec
mov
mov
mov
aam
jns
jmp
dec
dec
in
push
xchg
inc
adc
xor
mov
pop
mov
je
cmp
or
xchg
pop
cmpsl
in
ljmp
mov
arpl
fstpl
mov
mov
push
sahf
loopne
clc
sbb
cli
repnz
push
jns
test
mov
mov
mov
cmp
sub
and
push
mov
jl
mov
loop
in
data16
jne
dec
pop
cmp
fldcw
mov
addb
out
lcall
mov
notl
jae
adc
shlb
sbb
cmp
dec
mov
or
mov
sub
outsb
cli
dec
in
add
mov
pop
orb
xchg
jns
xchg
loopne
int
stc
sub
sbb
mov
ret
mov
mov
notl
neg
jnp
add
int3
js
pop
lds
fnstenv
pusha
in
mov
cld
into
lahf
sti
loop
sub
hlt
clc
dec
insl
ljmp
and
mov
jns
int3
scas
nop
test
pop
je
notb
andb
mov
loopne
mov
js
jl
cmpsl
loopne
mov
aad
daa
notl
sti
jl
adc
fcomp
pextrw
cmp
aad
sbb
movsl
jecxz
mov
jb
outsb
outsb
pusha
out
ja
sub
nop
cltd
sub
pop
ss
sahf
mov
mov
and
cmp
and
dec
xchg
mov
cli
loopne
adc
fsubrl
jl
pushf
negl
mov
int
inc
pop
data16
jns
jnp
sub
inc
xchg
inc
in
std
pop
nop
sbb
sub
in
push
and
mov
cmpsb
in
add
cmp
pushf
pop
inc
mov
dec
jecxz
add
popa
xor
sbb
fs
dec
jb
inc
pushf
fisubl
push
xchg
decb
fmull
enter
into
fisttpl
ljmp
cmp
xchg
sub
xor
or
jbe
data16
and
cld
enter
mov
push
pushf
xchg
scas
xor
cmpsb
into
dec
sti
rcll
imul
clc
clc
ds
das
jecxz
push
xchg
mov
ss
mov
in
scas
xor
jb
mov
roll
iret
call
std
xor
clc
ret
lret
movsl
jb
and
cli
jb
adc
mov
and
cltd
inc
add
adc
mov
mov
js
cltd
mov
gs
in
dec
je
inc
fs
sbbl
in
push
pop
xor
mov
dec
lea
addr16
stc
cltd
or
xor
jmp
pop
mov
mov
pop
mov
in
sub
cltd
cld
push
jbe
inc
mov
cmp
sbb
sbb
sub
ja
call
fcompl
enter
mov
xchg
mov
mov
jnp
inc
inc
add
adc
outsl
dec
mov
mov
repnz
ret
inc
inc
cmc
xor
xchg
mov
cmpsb
pop
lock
es
lahf
bound
stc
xor
loopne
fisttpll
dec
jns
jmp
add
fildl
iret
and
cmp
sbb
mov
nop
mov
and
xchg
xchg
popa
stos
rcrb
xor
pusha
inc
dec
push
adc
and
xchg
mov
adc
mov
ret
pop
mov
lock
xor
cmp
mov
xchg
sub
cltd
aad
fnstsw
adc
ljmp
push
add
mov
mov
jo
aam
fstl
push
mov
test
stos
loop
gs
sbb
xor
mov
inc
ljmp
and
mov
rcll
inc
ss
popf
xchg
andl
sbb
jp
aaa
aaa
push
and
or
mov
std
and
pusha
dec
mov
data16
push
ljmp
hlt
xor
add
inc
je
mov
mov
pop
in
sahf
shr
sbbl
mov
sbb
mov
rclb
es
push
mov
pop
fwait
xor
xchg
in
mov
lods
es
and
mov
arpl
mov
xlat
inc
sub
push
xor
push
into
loopne
jae
fisubl
xchg
jg
mov
mov
lcall
cmp
fsub
jb
add
cmp
and
loop
push
pop
insb
repz
in
and
loope
aam
xor
pop
cmp
cmp
or
arpl
add
pusha
sub
repz
cwtl
test
or
xchg
sti
push
jo
pusha
cmpsb
cmp
push
push
fildl
jle
arpl
lea
push
xchg
cmp
xor
nop
xor
pop
push
mov
pop
std
push
jnp
inc
cmp
ja
add
fisttps
dec
push
scas
mov
lods
nop
add
dec
pop
out
bound
mov
std
and
fidivs
stos
inc
data16
stos
pop
lahf
lret
or
add
aaa
push
push
sbb
movsl
cmc
inc
adc
inc
jae
xor
test
dec
repz
leave
xor
inc
lahf
dec
add
lahf
movsb
cmpsl
es
mov
push
ljmp
inc
push
aas
xchg
cmp
mov
pop
ljmp
jle
or
xor
pusha
ficomps
out
out
test
cmp
push
cmpsl
mov
push
cmp
and
int3
pop
add
outsb
arpl
mov
nop
lcall
test
ret
int
mov
nop
mov
push
sbb
in
popf
icebp
aaa
test
pop
jno
dec
sbb
jbe
outsl
mov
ret
sbb
push
stos
repnz
adc
int3
mov
sti
mov
inc
mov
scas
mov
mov
out
mov
pop
std
jle
std
jge
cwtl
sbb
insl
rolb
and
sub
jno
cmp
cmp
mov
mov
adc
aas
aad
pop
imul
repz
leave
or
sbb
ja
mov
stc
repz
mov
test
xchg
mov
ljmp
cli
loope
je
jp
xchg
pop
imul
cmc
js
inc
mov
pop
mov
pop
mov
or
push
lahf
out
pusha
xchg
or
popf
pop
cs
test
cli
int
in
stos
lcall
and
out
mov
dec
sbb
dec
data16
js
xchg
mov
xchg
aam
loop
mov
dec
jo
fwait
popf
je
and
add
in
aaa
push
rcrl
or
ja
fdiv
add
cmp
mov
cwtl
push
stos
pcmpeqd
pop
daa
cmp
mov
mov
xor
pushf
pop
jmp
sub
es
mov
cmp
jmp
cmpsb
inc
inc
sets
jne
sahf
dec
js
pop
call
sub
call
pop
push
enter
push
jno
mov
push
fnstsw
sahf
pop
mov
cmp
shll
and
sar
lcall
inc
clc
js
pop
insl
les
int
inc
adc
sbb
das
jb
cwtl
addr16
popa
push
sbb
jge
into
jae
jg
mov
mov
lret
sub
dec
in
add
sub
adc
xchg
sub
push
add
leave
test
lds
jo
or
in
pushf
fwait
push
ret
fimull
ret
pop
fbstp
cmpsl
std
js
push
jle
dec
and
ja
xor
pop
lods
jecxz
jbe
xor
push
adc
fistpl
jmp
cmp
lea
or
xchg
jecxz
test
pop
fsubp
lahf
clc
mov
and
lds
xor
mov
mov
inc
fmul
orl
out
mov
ficompl
pop
andl
mov
das
mov
insl
in
cmpsb
push
out
test
pop
cld
lret
or
in
mov
in
jecxz
ljmp
dec
mov
dec
pop
dec
xor
add
std
add
jecxz
xor
insl
add
inc
es
cmp
push
jl
into
jg
inc
cs
jns
into
lods
push
sub
adc
jnp
xor
int
mov
imul
icebp
cmpsb
push
push
loopne
je
test
adcb
jp
je
int3
mov
in
aad
sub
inc
out
arpl
mov
popf
aam
test
dec
or
psraw
jge
out
mov
pop
jmp
xlat
shlb
and
sbb
enter
test
mov
mov
mov
cmp
mov
mov
pushf
int3
movsb
jmp
rolb
fmul
iret
pop
addb
lods
stos
and
in
inc
enter
fucomp
and
les
xchg
lock
pop
lods
mov
in
ret
mov
pop
dec
das
scas
loopne
jmp
mov
cmp
hlt
lods
mov
pop
xor
mull
out
ret
dec
add
xchg
pop
fildl
ljmp
or
pushf
inc
and
mov
int3
fmul
lahf
sub
jne
xchg
aad
xor
std
mov
data16
ficomps
sub
xor
stc
adc
cmp
mov
cli
jge
dec
push
data16
lods
mov
inc
mov
dec
lcall
outsb
jns
push
xchg
inc
leave
and
cld
mov
sub
pmaddwd
test
cmpl
sti
dec
jmp
mov
call
mov
or
lods
cmp
fimull
mov
cmp
js
clc
rcrb
sbb
cmp
stos
add
jg
test
or
nop
mov
repnz
div
and
mov
cmp
lods
xchg
out
lds
cwtl
imul
add
stos
loope
outsl
iretw
cmp
jge
stc
xchg
push
mov
add
cli
jns
jbe
out
insb
test
pop
imul
loope
pop
fidivrs
xorb
outsb
dec
adc
loop
mov
mov
xchg
push
sub
in
adc
push
inc
test
mov
imul
aam
cmp
cmp
scas
or
xchg
cmp
fnstenv
adc
shl
push
jecxz
cmp
cli
push
sub
mov
adc
adc
inc
cli
lods
dec
mov
popl
scas
movsl
xor
in
repz
ss
mov
fistl
sti
ljmp
sub
add
outsl
jmp
push
or
or
sti
leave
and
mov
sub
nop
mov
leave
adc
shll
ret
pop
je
inc
aam
test
flds
les
mov
ds
cmp
jnp,pn
jle
clc
xor
sub
mov
les
jb
and
lcall
jmp
popf
in
js
ret
in
divb
cwtl
or
sub
ljmp
cmpsl
call
jmp
test
xchg
adc
sarb
int3
add
inc
cmc
imul
decl
icebp
lret
enter
das
fwait
lahf
shll
test
adc
dec
sub
scas
add
mov
ja
cs
mov
js
in
sbb
xchg
inc
and
popf
pop
lea
or
cmp
sbb
outsl
cmpsb
das
mov
xchg
sbb
dec
jge
mov
popa
push
jp
cmpsl
aad
repz
sarb
call
fldt
jno
mov
mov
or
stc
mov
out
jb
call
addl
mov
std
inc
icebp
adc
jge
roll
leave
cmp
push
cmp
jo
jp
mov
nop
outsl
push
adc
les
ficomps
into
add
lds
lock
and
aam
pop
mov
mov
and
xacquire
dec
std
test
mov
movsb
add
mov
push
xlat
stos
xchg
adc
xchg
push
mov
sarl
mov
fmull
je
jle
or
test
mov
inc
or
cmp
cmpsl
test
add
mov
mov
add
rol
sbb
ret
sub
not
mov
cli
add
mov
jle
dec
in
jno
ss
pop
adcl
mov
or
push
cmp
inc
lock
fildll
jecxz
xchg
ljmp
push
loope
mov
fdivrl
and
inc
sub
and
outsl
mov
dec
adc
adc
and
cmpb
jmp
sub
scas
imul
jae
daa
fld
jmp
lret
or
mov
testl
dec
addl
inc
mov
ret
cmp
inc
push
pop
dec
mov
push
enter
push
mov
jp
xor
testl
cli
arpl
bnd
daa
je
ss
jno
jle
inc
fnsave
dec
push
jns
sub
dec
scas
or
nop
adc
fs
pop
mov
out
ljmp
xchg
adc
nop
fsub
sub
mov
jno
imul
out
inc
pop
int3
test
pop
xchg
repnz
xchg
pop
jp
std
pop
arpl
cmpsb
cld
cmp
cltd
ljmp
push
sbb
pop
hlt
daa
jb
pop
xchg
adc
or
xchg
add
call
dec
insl
mov
xchg
sub
jbe
push
sbb
ljmp
xchg
dec
lahf
mov
push
jno
mov
pop
test
mov
mov
out
or
mov
fisubs
cmp
xor
push
xor
fildll
add
sbb
int3
sbb
je
popf
shll
lds
fimuls
or
push
add
inc
mov
leavew
cmp
add
nop
dec
dec
pop
pop
xchg
fidivrs
popf
sbb
xor
jle
lea
cmp
leave
cmpl
lock
and
add
outsl
pop
cmp
jl
pushf
xor
insb
inc
sarl
pop
xor
insb
enter
mov
outsl
jge
dec
dec
lods
inc
xor
xor
inc
mov
loop
scas
ret
lcall
xor
pop
dec
inc
pop
into
cs
or
xchg
mov
lret
lret
pop
lds
xor
pop
in
fisubrl
psrlw
fsub
adc
dec
insb
lods
mov
dec
push
cmp
mull
sub
pop
lock
test
imul
into
fsubrl
sub
xor
mov
pop
enter
sub
xchg
in
mov
rorb
fadd
xchg
adc
inc
rcll
repz
push
loopne
into
fisubl
sub
js
jmp
sub
jecxz
mov
and
xor
lea
dec
or
jmp
xlat
aas
mov
jecxz
out
adc
cmp
loopne
sub
shrb
mov
sub
popf
shll
xlat
cmpsb
fmulp
in
xchg
jo
dec
in
dec
cli
push
mov
test
cmp
dec
test
imul
test
jg
cmpl
adc
cld
jl
push
push
push
push
push
or
aam
scas
in
in
daa
ret
pop
push
xchg
lcall
fidivrl
sbb
dec
xor
jle
inc
iret
test
das
pop
mov
mov
dec
cwtl
inc
cmp
and
fsubs
push
lret
jl
cmpsb
jmp
mov
pop
lea
in
loopne
inc
in
cmp
insl
jbe
outsl
cld
and
lock
xchg
lahf
dec
push
pop
xor
mov
mov
and
xlat
popa
lods
imul
loopne
add
adc
xlat
add
jo
pop
mov
xchg
hlt
xchg
cmp
xor
nop
push
dec
repz
das
sbb
mov
mov
inc
pop
pop
cmp
insb
sub
aaa
fsubrs
xchg
mov
mov
mov
pop
pop
push
cltd
and
aas
icebp
adc
mov
sti
jecxz
jmp
sbb
mov
and
out
add
lock
lods
jne
stos
pop
outsl
push
push
fdivs
ror
lret
jno
out
fs
les
cmpsb
mov
push
mov
cmp
jl
adc
lret
push
in
jne
in
pusha
out
sub
mov
notb
out
aad
adc
mov
movb
fiaddl
adc
hlt
add
add
int3
rorl
sbb
loop
fisubs
add
mov
lds
and
cmpsb
imul
push
jmp
das
out
fnstcw
jp
out
lea
adc
push
cmp
or
stos
stos
add
xor
pusha
or
adc
push
lea
sbb
leave
and
fdivp
div
fwait
pop
sbb
sub
dec
out
sub
mov
push
rorb
cmp
lock
jge
adc
inc
cli
jg
ret
lock
pop
sti
mov
ds
std
popf
and
sub
rorb
xchg
sbb
icebp
sub
pop
pop
push
or
push
jmp
xor
loop
add
mov
mov
insb
mov
jbe
aad
xchg
mov
mov
stos
mov
push
pop
mov
xchg
frstor
cltd
sbb
cmp
xchg
jmp
aas
lods
iret
dec
popa
dec
inc
jae
mov
jge,pt
orb
push
into
arpl
jne
xlat
mov
push
ds
or
xchg
inc
shll
jecxz
add
jmp
mov
sbb
jp
push
ds
or
rcrb
xchg
pop
lods
ficoms
aad
call
inc
mov
mov
xchg
mov
mov
cmp
dec
xorb
in
and
ret
cmp
mov
ljmp
test
mov
daa
adc
mov
cltd
iret
push
test
arpl
aad
jo
xor
cwtl
sahf
adc
xchg
imul
mov
lods
cmc
cwtl
rcrb
mov
xchg
sbb
outsl
fmulp
adc
add
stos
movsl
in
or
jae
mov
aaa
pop
lcall
lahf
mov
pushf
enter
arpl
push
jge
int
push
insb
mov
out
ret
scas
daa
jmp
jno
inc
inc
cmp
je
rcr
js
mov
sub
jns
add
ljmp
sub
lock
out
add
pop
jmp
lret
lock
push
mov
mov
stc
push
add
push
mov
ffreep
inc
and
add
pop
mov
das
cmpsb
rclb
add
inc
scas
sbb
test
sub
mov
dec
mov
out
sub
lds
xchg
insb
cmpsl
aas
clc
insl
fstps
mov
cld
mov
sahf
pushf
cmp
adc
inc
xor
ret
rol
rcr
or
push
cmc
mov
mov
xchg
ret
dec
push
lock
ljmp
pop
adc
fstpt
or
xlat
inc
repz
push
and
mov
in
divl
je
in
pushf
cltd
sbb
repz
daa
add
jns
xchg
popa
push
xor
mov
jbe
add
enter
adc
sbb
repnz
subl
or
xchg
pop
sbb
add
loope
fidivs
xor
fsubs
mov
stos
hlt
pop
scas
mov
xchg
sub
int
cmp
enter
inc
sbb
ret
pop
inc
xor
pop
xor
mov
xchg
pop
cmp
jo
mov
mov
push
orl
call
and
xchg
dec
pop
push
xchg
add
shlb
in
push
dec
sub
movsl
data16
xchg
testl
ret
xchg
cmp
bound
in
in
cmp
inc
mov
add
ret
outsb
inc
mov
test
push
lret
add
xchg
movsl
inc
mov
dec
mov
ret
jle
mov
popa
mov
dec
movsb
and
ja
leave
hlt
stc
popa
inc
imul
adc
push
pop
mov
or
dec
and
xchg
dec
iret
popf
inc
popf
cmp
sbb
jg
mov
iret
ret
push
and
bound
leave
dec
lock
pop
mov
fs
mov
xchg
jns
popa
and
xor
jge
and
mov
push
xor
jbe
mov
das
add
js
cltd
ret
pop
into
mov
adc
add
jecxz
iret
les
call
push
insb
mov
negb
insl
cmpb
cmp
adc
and
loop
cwtl
mov
xor
and
xchg
jge
fsubs
testl
jb
dec
insb
and
and
mov
cmp
shl
fisubrl
test
movsl
xchg
pop
test
rol
jbe
test
inc
sbb
adc
addr16
mov
faddl
aas
push
adc
test
in
dec
fldt
cmpsb
pop
mov
fsubrl
push
outsb
add
js
cmp
ja
in
xchg
fadd
or
pop
fsubs
dec
insb
imul
sbb
dec
push
movsl
fisubs
xchg
sbb
jb
push
sbb
mov
or
add
leave
popa
or
or
stos
mov
dec
ds
inc
and
imul
jns
hlt
and
mov
fwait
xor
mov
mov
hlt
cmpsb
and
push
out
ret
repz
test
fldl
rcll
push
iret
outsb
scas
mov
xor
orl
add
adc
add
push
out
jmp
clc
adc
lahf
fnstcw
mov
xor
lcall
add
dec
jbe
and
push
sbb
inc
xor
test
add
sbb
pushl
inc
jmp
xor
test
insl
sbb
mov
dec
or
mov
xor
push
test
cs
sbb
test
push
inc
fidivl
lea
lods
lods
cmp
stos
mov
mov
jmp
imul
pop
not
mov
imul
mov
daa
fiadds
push
jb
sbb
mov
pop
xor
lods
jb
pop
or
pushf
andb
rolb
bnd
pushf
cmpsl
lcall
loope
jle
mov
icebp
xorb
and
sbb
stc
sbb
or
push
push
popa
add
push
jno
xor
xchg
rcrl
cwtl
adc
arpl
mov
sbb
lock
push
sti
push
jno
cld
sub
dec
into
mov
lods
mov
add
push
xchg
add
jmp
jmp
sahf
ljmp
shrl
pop
gs
je
or
hlt
jne
addr16
push
insl
xor
aaa
mov
ret
xchg
and
cmpsl
sub
mov
pushf
subl
add
insb
cmp
mov
mov
push
and
xchg
insl
movsb
pusha
xchg
repz
in
and
cli
mov
sbb
pop
or
gs
xchg
enter
loopne
inc
js
xlat
sbb
int3
loope
loop
sub
pop
insl
or
call
test
jmp
aad
dec
xchg
add
inc
subl
andl
into
or
mov
repnz
push
call
dec
inc
arpl
cmp
out
cld
or
push
repnz
aad
jbe
repz
fldcw
lods
inc
push
insb
test
dec
movups
jecxz
imul
aam
inc
and
inc
add
aas
imul
aaa
lret
test
mov
sub
das
and
xor
dec
xchg
out
mov
clc
jae
mov
xchg
outsb
pusha
andl
push
adc
xchg
fisubl
pop
popf
lret
fildll
push
sarb
xor
push
pushf
pop
fwait
pop
enter
int3
add
out
stos
pop
imul
jge
outsb
fwait
push
aam
mov
hlt
je
je
inc
add
xor
inc
jle
xchg
test
pop
stos
inc
inc
stos
lock
adc
jo
mov
outsb
pop
shll
icebp
mov
jne
sub
xor
test
fmulp
sbb
sti
push
mov
scas
mov
jmp
mov
and
add
fsts
inc
js
ds
pop
xchg
inc
mov
nop
adc
jae
in
sub
shlb
dec
mov
bound
jne
cmp
mov
adc
addl
sarb
mov
clc
inc
test
fistl
inc
js
or
lret
data16
arpl
xchg
imul
mov
xor
dec
gs
or
cmp
mov
es
mov
mov
hlt
jne
dec
jmp
es
popa
repz
xchg
es
xor
adc
dec
inc
in
movb
xchg
mov
jne
push
jg
cmpsl
pop
pop
outsb
push
lea
iret
jmp
pusha
in
rcll
nop
sbb
push
jle
push
dec
shll
and
subl
cli
jnp
mov
jb
push
ja
pop
test
xchg
cs
out
cmp
mov
add
or
stc
je
lock
js
pop
pop
adc
mov
or
insb
fisubl
mov
jno
cmpsb
fadds
push
addl
adc
adc
adc
daa
dec
or
imul
bound
add
or
cli
mov
fistpl
cmc
pop
mov
sti
in
insl
dec
sbb
xchg
mov
lods
ds
jno
push
xchg
mov
mov
pop
gs
mov
sbbb
hlt
lcall
push
mov
push
fs
pop
xchg
repz
insb
mov
js
and
ljmp
add
icebp
xchg
leave
ret
and
pushf
add
mov
pusha
movsb
fimuls
push
add
lret
xsha1
bound
mov
stos
sub
mov
add
movsl
jmp
jo
mov
fsubrl
xor
push
dec
and
loopne
mov
imul
pop
ds
xchg
test
push
adc
cmp
dec
call
in
imul
divb
in
push
pop
hlt
mov
sbb
sub
pop
lock
dec
adc
repz
scas
data16
push
adc
adc
test
popf
mov
mov
push
add
lahf
xchg
fsts
dec
cmp
sbb
fmul
fidivs
mov
fstps
lock
aaa
test
subl
test
test
or
push
loop
nop
mov
xor
mov
test
cs
jae
gs
push
adc
lock
push
int3
xchg
sbb
imul
cmp
and
add
out
mov
jo
jl
call
mov
cmpsl
ret
xchg
clc
fs
stos
mov
sub
or
ss
jns
inc
mov
or
adc
jle
cmp
push
lcall
xchg
clc
dec
or
xchg
mov
or
mov
mov
add
ficompl
sbb
outsb
mov
jo
addl
sub
jg
rclb
mov
lods
mov
lods
leave
icebp
ds
bound
popa
fdivl
inc
cwtl
out
fisttpll
ret
dec
rcll
or
ljmp
loope
cmpl
ds
fdivl
enter
in
jae
fnstcw
pop
inc
test
mov
mov
push
stos
nop
jnp
lock
jmp
jno
int
dec
sti
sbb
int3
lret
and
enter
dec
lret
mov
addr16
sub
daa
xor
movntq
xchg
xor
xor
sub
test
sub
jg
fidivl
dec
lcall
cmc
addr16
incb
rol
inc
jbe
jno
cmpsl
cltd
cmpsl
fisttps
shlb
je
pop
stc
cmc
gs
lock
jg
sarb
jle
push
ljmp
add
inc
cmp
push
test
orl
cli
loopne
push
fucomp
jp,pt
aaa
adc
fwait
stos
push
mov
lret
cs
cmp
pop
leave
pop
loope
rol
call
cmc
xor
pop
iret
loope
sbbl
cmp
push
xlat
fidivrl
mov
je
stc
xchg
xchg
add
inc
imul
lock
out
sub
dec
les
fistpll
xor
loopne
imul
out
mov
ja
fdivrs
xor
dec
add
and
jns
mov
mov
aam
leave
js
movsb
test
lea
dec
insb
in
scas
jl
sbb
add
ret
cmp
lock
lock
dec
hlt
jle
or
pop
data16
jle
daa
jbe
mov
pop
enter
and
mov
out
test
orb
out
aaa
and
arpl
or
mov
mov
gs
xor
adc
ja
in
std
ljmp
or
lds
into
mov
pop
mov
sub
mov
push
sub
inc
or
insb
rcrl
aas
cltd
mov
adc
std
jg
stos
dec
pop
pop
cmp
dec
or
notl
or
lods
mov
pop
push
movups
inc
add
rcll
insl
fmuls
out
xlat
rep
ficomps
pop
cwtl
out
add
mov
inc
add
xor
inc
xchg
and
sub
jge
jmp
sbb
cli
sbbl
mov
push
pop
cmp
call
popf
adc
outsl
mov
pop
xchg
inc
adc
lcall
scas
lcall
incb
jno
pop
cmc
cmp
cwtl
or
xor
andb
mov
fnsave
jno
fdecstp
ljmp
mov
push
int3
and
cwtl
sub
mov
mulb
push
push
inc
and
cmp
loope
xor
push
mov
lock
adc
nop
hlt
pop
xlat
mov
cmc
cltd
lods
mov
aaa
pop
das
test
insl
in
fisttpll
mov
into
push
insb
stos
or
bound
mov
ss
inc
bound
aad
ljmp
out
sbb
dec
fwait
inc
mov
test
mov
stos
sub
jo
call
in
pop
adc
push
or
cmp
adc
sbb
test
or
and
movlps
jg
cs
ret
jo
jg
push
push
dec
push
ljmp
xchg
bound
mov
jb
adc
pusha
sahf
scas
fbld
jnp
jge
mov
gs
inc
xchg
sub
jge
cltd
mov
lds
mov
lods
shlb
hlt
xchg
int
cmp
ret
push
cmpl
out
stc
or
sbb
xor
xor
test
iret
filds
and
sub
leave
loopne
mov
int
jle
jo
push
sub
adc
mov
pop
inc
and
in
jno
mov
lret
pushl
dec
mov
xlat
xchg
mov
in
xor
xor
cwtl
data16
jae
bound
pushf
fwait
and
jnp
push
out
gs
jl
mov
imul
xchg
mov
decl
dec
push
push
pop
mov
xorl
lds
and
mov
lods
sub
nop
jmp
cmc
sbbb
pop
sub
sar
jne
int3
in
xor
sbb
xor
dec
xor
sarb
sbb
aas
daa
sarb
cltd
xchg
jmp
call
out
mov
or
jo
dec
pop
addb
mov
or
jp
in
hlt
fiaddl
lret
or
mov
jns
dec
imul
push
inc
sbb
cmp
stos
pop
fiaddl
les
adc
jnp
add
lds
lock
inc
fcmovnu
ja
mov
push
pop
insl
lods
xchg
lcall
jp
sbb
call
fcomps
out
sub
aas
iret
enter
add
outsb
xor
inc
jle
daa
xchg
xchg
dec
or
and
fld
mov
mov
test
rolb
cmpsl
cld
das
popa
cld
pop
sbb
scas
mov
cmc
jg
lods
mov
lea
mov
sbb
sub
pop
mov
xor
xlat
fwait
sub
dec
xchg
push
cmp
push
cli
mov
pop
inc
inc
add
nop
jo
es
jno
xchg
into
mov
mov
clc
pop
adc
lret
push
dec
cmp
jne
enter
mov
cmc
push
dec
movsl
aam
xchg
jbe
test
xchg
cmpsb
sti
sbb
es
pop
popa
sub
dec
repnz
ret
adc
in
mov
xchg
bound
cmp
mov
pop
jg
xor
add
stos
lods
das
sti
xor
mov
retw
bound
cs
inc
ret
inc
cmovl
andl
ja
sub
cltd
stos
inc
jnp
mov
fildll
or
ds
and
into
and
xchg
in
mov
orb
xchg
outsb
cmpsb
movups
subb
mov
cmp
and
cltd
subb
xor
add
popa
div
pop
dec
jae
sbb
es
fimull
cmp
mov
outsl
repnz
dec
or
cmp
adc
mov
subb
les
fbld
ret
adc
jl
lods
rcll
inc
imul
sub
push
movsl
shrb
jae
ror
jo
jp
std
imul
cwtl
xchg
cmp
mov
daa
call
mov
pop
in
pusha
add
or
dec
es
xchg
jae
jb
shlb
add
jmp
mov
dec
pop
xchg
and
sub
out
inc
sub
dec
and
lret
ret
lods
pop
push
jo
xlat
cmp
push
sub
adcl
pop
test
nop
scas
mov
fsubrl
test
cmp
cli
add
ljmp
xor
aam
push
test
jae
or
pop
dec
sub
cmpsb
popl
jne
pop
fmul
cmp
adc
dec
sbb
inc
inc
sub
jg
out
push
xor
in
fimull
adc
push
scas
xchg
enter
add
push
pop
or
mov
in
mov
adc
cwtl
in
mov
cmp
dec
test
sub
inc
push
subl
aam
out
setae
loopne
xor
aam
clc
sarl
mov
xchg
adc
test
scas
inc
pop
mov
mov
dec
cli
pusha
pop
pop
ret
dec
leave
rcl
and
test
scas
pusha
rclb
cmp
test
mov
pop
nop
cltd
loope
pop
lcall
insb
or
jno
data16
and
mov
jbe
mov
xor
pop
sbb
xor
dec
mov
fldenv
bound
es
stc
mov
ljmpw
and
jo
ds
es
repz
pop
jo
and
scas
mov
jge
mov
xchg
pop
mov
mov
add
addr16
in
clc
xor
adc
jmp
ret
stos
int
sti
cmp
popf
push
movsl
fimuls
jo
pushf
pusha
ficoms
ljmp
pop
rorb
jno
lret
or
sbb
lea
sub
mov
shlb
frstor
in
pop
pop
adc
cmpsb
dec
add
mov
loop
cwtl
addl
xchg
popf
pop
jg
scas
xchg
jnp
dec
add
xor
xchg
aaa
jns
push
ds
or
lods
pop
loop
in
loopne
mov
aaa
adc
fcmovbe
sub
push
sbb
jne
adc
pop
les
leave
mov
and
lcall
dec
insl
in
cld
dec
or
mov
mov
std
pushf
enter
add
pop
aas
shr
xchg
add
pop
push
std
nop
mov
mov
loop
xor
mov
add
xchg
jecxz
mov
mov
and
rcr
jbe
cmpsb
add
cmp
cmp
sub
mov
aaa
stos
scas
movsb
adc
cmc
pop
popf
sbb
roll
cmp
out
js
je
mov
cmp
dec
imul
push
cmc
sahf
push
cld
pusha
pop
push
lds
mov
sbb
sbbb
scas
mov
imul
aas
add
iret
scas
call
aas
or
in
push
fisttps
add
mov
insb
rcl
sub
and
xchg
mov
and
push
jb
adc
iret
sbb
jo
stc
xor
lcall
jge
sbb
push
fisubl
loope
inc
cli
inc
mov
push
sub
jno
mov
inc
adc
mov
fwait
sahf
xorb
scas
gs
out
jns
xchg
sbbl
les
call
push
rorb
mov
pop
test
jl
divl
add
and
push
dec
aad
stos
in
jle
mov
jb
add
adc
sarb
adc
aad
jl
jp
inc
insl
and
cli
movsb
lods
loop
push
xchg
or
mov
jecxz
or
aaa
push
mov
push
mov
aaa
or
iret
mov
stos
xchg
nop
xor
inc
das
xor
add
push
movsl
mov
popa
testl
movsl
dec
push
sahf
aad
xchg
popa
sub
mov
xchg
jo
mov
pop
jmp
das
inc
xchg
xchg
xlat
push
cld
xchg
clc
mov
mov
nop
decl
jecxz
mov
movsb
or
cmp
push
adc
xchg
inc
std
cmpsl
test
jge
rcll
xor
mov
fcompp
in
int
cmpsl
push
pop
mov
mov
xchg
push
ds
cmpsl
jp
fadd
jge
jge
mov
xor
mov
popa
push
test
or
mov
test
pop
push
aas
sbb
mov
sbb
pusha
jb
jecxz
rcr
or
push
aad
lods
scas
cli
mov
mov
wbinvd
cmp
cmpsb
scas
lock
aam
push
adc
jns
cmpsl
shll
or
ficompl
push
and
adc
lea
add
jmp
xor
xchg
mov
cmpsb
jae
inc
xor
fincstp
imul
xchg
lret
ret
ja
cld
jg
int3
repz
and
das
arpl
mov
lods
mov
loop
nop
arpl
push
lret
dec
or
scas
xchg
adc
push
inc
loope
incl
fistps
mov
mov
push
mov
or
fiaddl
leave
imulb
and
push
xchg
rcrb
add
jecxz
insl
adc
dec
rep
mov
call
mov
push
cmp
or
dec
sbb
ret
dec
bound
out
or
xchg
arpl
ljmp
ss
xchg
hlt
fcoml
jg
aad
mov
pop
enter
sbb
push
daa
shrl
mov
inc
hlt
adc
outsl
jo
ret
jns
sti
clc
adc
sti
cmpsb
scas
mov
push
icebp
or
jmp
adc
or
sub
arpl
fisubrs
cmp
repnz
divb
outsl
adc
ds
mov
adc
lcall
or
insb
push
mov
dec
push
pusha
xchg
popf
cltd
push
sbb
jne
jae
clc
gs
xchg
adcl
gs
inc
jno
lds
mov
and
dec
lret
jge
xchg
aas
jae
mov
xor
scas
xchg
jmp
add
mov
aad
testb
cmp
add
aas
rcll
ja
push
push
adcb
or
fnsave
push
ficomps
shl
cmp
test
xchg
push
inc
stos
dec
push
fcoms
in
scas
lret
lahf
mov
cwtl
jae
in
lahf
fs
add
mov
xor
mov
leave
popf
jns
mull
or
or
pop
jl
nop
sub
add
pop
jbe
je
fidivl
mov
inc
adc
xchg
dec
bound
pop
jb
dec
mov
pop
aaa
sub
xchg
scas
ret
or
adc
dec
jp
in
insb
push
test
shll
lcall
out
or
roll
inc
es
test
aas
in
icebp
pusha
mov
and
ja
sbb
mov
sbb
loope
or
mov
inc
mov
inc
add
addr16
shlb
cli
nop
std
pop
loope
pop
aam
lcall
lret
or
mov
mov
adc
and
and
inc
cmp
dec
movsl
mov
lahf
cmp
xor
mov
cmp
jno
mov
cmp
loope
fst
scas
pop
push
setne
push
pmulhuw
sub
mov
and
imul
xor
mov
testb
sbb
cltd
push
sub
inc
sbb
outsl
aad
add
mov
imul
fs
lret
mov
adc
xchg
sbb
outsl
push
and
test
add
pop
xchg
test
inc
xchg
ret
negl
mov
xor
dec
mov
mov
cmp
popf
mov
fmuls
outsw
pop
mov
aad
subl
xchg
or
ficompl
fistpll
popl
mov
push
push
xchg
and
cmpsb
inc
jae
xchg
xorl
dec
cmc
scas
lea
push
and
xchg
fdivr
in
mov
lret
xlat
inc
add
movsb
in
dec
aaa
pop
shl
movsb
push
adc
add
sbb
call
xchg
cs
roll
mov
rorb
mov
shl
mov
cld
mov
sub
das
fst
sub
or
and
push
mov
jno
jbe
popf
pusha
mov
mov
dec
inc
push
data16
cwtl
es
jne
das
mov
pop
daa
jne
nop
test
test
ljmp
push
cmp
lea
inc
xchg
pop
rcrb
std
or
inc
jmp
or
push
imul
and
inc
mov
and
sub
fldt
adcb
sahf
cmp
popf
mov
and
ljmp
out
movsb
stos
fisttpll
pop
jno
or
lret
mov
rorl
mov
mov
jp,pt
adc
js
jbe
jg
xchg
out
inc
sub
cmp
inc
mov
push
push
pop
push
inc
fs
jmp
xor
dec
insl
and
lcall
mov
fldenv
std
add
out
dec
mov
iret
out
imul
jl
repnz
jecxz
jp
ret
push
cmpsl
in
inc
cmpsl
sbb
insl
dec
adc
into
adcb
sbb
stc
mov
inc
mov
out
cmp
ds
or
push
in
or
idivb
out
cmp
leave
into
jle
imul
cwtl
mov
fisubrs
fcoms
and
mov
cwtl
in
or
adc
or
in
inc
xorl
out
pop
test
xorb
push
enter
gs
adc
icebp
or
adc
outsl
popf
adc
pop
enter
adc
xchg
adc
out
mov
rol
sbb
add
out
stos
ret
insl
xchg
stos
insb
jb
push
adc
add
cwtl
jl
hlt
and
push
iret
dec
and
xchg
aaa
mov
xchg
stos
push
inc
sub
adc
jg
and
jl
and
pop
repnz
xor
xchg
repz
stos
sbb
sbb
int
mov
insl
in
subl
cwtl
add
or
jle
and
dec
mov
adc
es
sti
sub
cltd
mov
dec
sub
sub
les
adc
adc
inc
sub
add
cmp
bound
sbb
cmp
xor
movsb
pop
das
arpl
pop
movsl
int
jne
sti
call
mov
dec
add
aad
push
into
inc
sbb
hlt
imul
inc
or
xor
scas
fstl
push
inc
test
dec
adc
push
xor
push
stc
cmpsl
inc
xor
mov
dec
push
jbe
jbe
mov
adc
je
insb
add
lods
outsb
loopne
cmp
adc
and
inc
movsl
sarl
addr16
stos
daa
cld
lock
aas
popf
mov
cld
fldt
popa
jp
or
mov
sarl
dec
sub
dec
or
sbb
fisubrl
cmp
cmp
sub
jbe
add
jne
mov
adc
lods
call
push
lcall
repnz
inc
add
sti
lea
mov
xchg
adc
mov
mov
mov
jae
in
aaa
mov
inc
jmp
jge
xor
sarl
adc
push
xchg
enter
std
xchg
mov
aad
fs
inc
push
sahf
popa
sbbl
push
mov
inc
or
or
and
mov
aad
std
orl
or
mov
fs
sub
jle
loopne
nop
pop
pushf
mov
sub
or
fwait
lods
cli
mov
das
pop
hlt
out
dec
les
ds
push
pop
inc
mov
mov
cmp
add
push
das
lods
push
inc
fucomi
add
int3
adc
mov
inc
and
enter
stos
sbb
mov
mov
xor
into
sub
std
mov
jbe
push
popa
jb
lea
dec
inc
pop
xchg
mov
call
pop
js
popa
loopne
and
mov
popf
pop
mov
dec
inc
testl
daa
stos
bound
jg
aad
mov
in
inc
fbld
pop
rorb
sub
xor
xchg
fdivs
mov
ds
int
outsb
sbb
cwtl
mov
mov
xchg
adc
fcom
pop
call
jbe
cmp
xchg
lret
lret
hlt
sub
jl
leave
mov
push
addr16
dec
test
mov
popf
dec
iret
jne
mov
xchg
test
xor
cmp
aaa
clc
xor
lock
sarb
mov
adc
gs
jg
xchg
pop
jg
xlat
movsb
xchg
pushf
mov
mov
jnp
push
movsb
lret
pop
lock
adc
xor
pop
test
arpl
dec
jnp
xchg
mov
mov
mov
add
fists
in
pop
pop
pop
fsubrs
lods
scas
mov
in
mov
xchg
sbb
pop
popa
push
testl
stos
cmp
pop
push
fisttps
imul
mov
popa
or
xor
bound
xchg
and
xchg
add
jle
jmp
cmpsl
lds
hlt
lret
mov
call
pop
icebp
pop
adc
adc
xor
pop
push
lods
ds
addl
scas
aas
push
push
repz
insb
scas
insb
ret
cmp
dec
es
movsl
pop
or
inc
lock
mov
movsb
call
scas
lcall
push
inc
adc
push
push
push
cmpl
pop
sub
inc
push
dec
leave
mov
mov
stos
insb
scas
add
pop
sub
cmpsl
cmpl
es
and
mov
push
mov
xor
test
jge
inc
xor
sbb
popa
scas
je
sbb
fiadds
xchg
das
or
cld
insb
xor
lds
and
xchg
add
lods
pop
into
mov
lods
cwtl
data16
mov
ficoms
and
xor
inc
cmp
push
push
movsb
loope
cmp
or
test
ljmp
cmp
aad
mov
mov
shlb
jg
dec
andl
sub
adc
std
jbe
adc
rcl
shll
pusha
ja
sub
or
or
stos
mov
movsl
stos
adc
add
xchg
out
in
dec
mov
jbe
inc
xchg
inc
adc
insl
sbb
out
push
adc
mov
jnp
orl
mov
xchg
movsl
push
cmp
loopne
inc
icebp
test
push
fsubrl
xchg
inc
stos
sahf
ljmp
ljmp
stc
push
push
xor
adc
out
or
sbbb
es
popl
aas
popa
in
pop
cmp
sbb
jmp
and
daa
inc
loope
enter
xor
xor
mov
cmp
sahf
dec
aad
inc
adc
jp
cltd
mov
sub
pushf
push
push
or
pop
add
fwait
inc
negl
sub
mov
call
ss
push
sbb
sub
enter
outsb
in
dec
push
and
test
mov
sub
cld
push
mov
les
mov
push
or
jg
add
cmp
dec
jge
push
dec
out
inc
cmpsb
mov
xchg
cmp
adc
sub
lods
imul
arpl
loop
or
adc
xchg
jle
mov
pop
adc
int
add
push
shl
mov
adc
sub
jl
or
or
cmp
in
add
xor
add
add
pop
lods
pop
pop
mov
repnz
mov
sbbl
pop
lds
cmp
sbbl
insb
inc
dec
push
mov
xchg
adc
inc
xor
loop
xchg
pop
in
or
lods
stc
xchg
mov
loop
xchg
dec
dec
cltd
and
xchg
jns
xchg
sub
lcall
and
cmpsb
jge
lods
jg
cmp
inc
ss
adcl
mov
jp
mov
out
xchg
cmp
aam
ljmp
fsubrl
jne
loop
jnp
lea
xor
nop
sarb
jmp
cwtl
adc
sysenter
outsl
pop
pop
sbb
outsl
cmp
and
jnp
dec
sahf
cmp
mov
mov
xchg
jne
cltd
leave
mov
mov
addr16
mov
gs
mov
ret
into
mov
and
ret
dec
cmp
loope
in
add
mov
call
stos
call
xor
cmpsl
sub
fdivrl
mov
fimull
dec
fiadds
sub
mov
dec
lods
loop
bound
in
data16
mov
jbe
inc
sub
push
sti
mov
add
je
xor
cmp
or
scas
cmpl
push
shrl
xor
cs
leave
dec
pop
mulb
arpl
movsb
ret
ss
das
in
dec
push
leave
enter
xchg
ret
leave
lock
pop
and
mov
dec
xor
xor
movl
jns
adc
lahf
pushf
xor
fisubl
shlb
bswap
pushf
insb
sahf
jbe
xchg
mov
dec
enter
sti
das
mov
divl
mov
pop
push
push
cmp
pop
subb
jnp
dec
mov
bound
dec
jecxz
xor
movsb
jge
inc
push
jg
cmp
ljmp
dec
mov
rorb
inc
mov
xor
pop
hlt
rcrl
add
dec
cmp
mov
inc
cmp
test
mov
adc
and
xchg
sbb
les
dec
jne
lock
fwait
minss
sub
mov
xchg
lock
inc
add
add
adc
lock
in
xchg
enter
rcl
xchg
je
movsl
popf
sahf
test
mov
jns
repnz
jnp
push
andl
into
sbb
mov
adc
sbb
sbb
out
mov
jg
hlt
jp
mov
jmp
mul
mov
mov
addr16
mov
je
ljmp
lahf
fiaddl
lret
inc
xchg
imul
push
insb
jbe
lahf
dec
xchg
inc
inc
pop
and
dec
inc
mov
cmpsl
inc
add
cs
nop
mov
xchg
ficomps
xchg
push
sub
pop
push
mov
push
bound
cmc
mov
or
mov
call
aam
xchg
repz
stc
fistl
adc
shlb
arpl
add
or
aas
aad
pop
mull
in
data16
xorb
jg
lcall
mov
fsubrs
sbb
push
adc
loopne
cld
cli
nop
inc
xor
mov
adc
push
sbb
pop
mov
jl
movb
data16
inc
pop
xchg
mov
sbb
sbb
or
leave
mov
fwait
repz
mov
fsubr
dec
add
imul
add
gs
push
sahf
adc
jmp
arpl
jns
add
cwtl
dec
mov
outsl
andb
cmpb
push
lret
or
push
sbb
and
xchg
mov
fisubrl
and
sub
mov
sub
xor
and
mov
es
ljmp
lock
int3
and
sahf
dec
jae
scas
popf
push
cli
cmp
xor
xlat
lds
jge
cmp
into
adc
inc
mov
gs
xchg
sub
idivl
xor
aaa
cmp
xor
dec
sbb
in
mov
xor
xor
mov
fsubs
mov
inc
cmp
mov
jp
ret
mov
adc
and
sti
sahf
dec
cld
inc
in
mov
pop
sbb
mov
sbb
addb
lods
xchg
pushf
inc
lds
mov
pop
cmpsl
mov
push
cmp
dec
cmp
stos
pop
adc
xlat
jae
pop
mov
push
out
mov
lahf
ret
in
or
aad
jne
jle
jbe
xchg
out
sub
jne
push
or
pop
sub
mov
xchg
leave
mov
aad
mov
pop
std
fcoml
testl
je
add
push
xor
jge
sub
mov
or
mov
insl
jno
mov
jne
fs
lret
cmpsl
cld
enter
adc
inc
enter
fnstsw
dec
xchg
add
scas
jmp
ljmp
movsl
dec
rcrl
xor
add
div
stos
movsl
stos
mov
mov
add
pop
or
pusha
sbb
cmpsl
sub
sahf
insl
jno
mov
jmp
es
hlt
mov
out
inc
ds
push
pop
inc
cmpsl
xchg
popf
xchg
and
aas
sub
dec
mov
or
push
cmpl
std
add
xlat
stc
cmp
es
arpl
sbb
push
inc
xor
dec
in
lods
lods
or
xchg
and
jae
negl
xchg
rcrl
dec
sahf
imul
mov
jne
jge
sbb
cmp
xchg
ljmp
xchg
popf
lea
pop
sbb
push
dec
dec
mov
and
cs
cmp
decb
dec
shlb
in
pushf
inc
lret
push
mov
dec
mov
sarl
aam
cmc
pushf
pop
outsl
jb
cltd
adc
in
mov
pop
jp
mov
data16
xchg
test
mov
jne
fsubs
adc
addr16
mov
dec
cmpsb
ret
hlt
lahf
aas
adc
int3
xchg
pop
pop
push
xchg
sbb
pop
lahf
xor
ja
push
mov
or
xchg
imul
enter
pop
xchg
movsl
push
in
es
pop
push
stc
cli
rcrb
xlat
mov
sbb
fisubl
sti
cmp
pop
test
fidivrl
loop
pop
cmp
ror
inc
cwtl
test
fstps
adc
inc
je
scas
clc
iret
and
xchg
nop
leave
cmc
test
leave
leave
inc
sub
cmp
jno
inc
push
push
sub
sahf
xchg
imul
lcall
jnp
or
mov
imul
out
rcrb
repnz
cwtl
shrl
ja
pop
push
movsl
aas
es
sbb
dec
orb
xchg
sub
push
orl
push
aaa
cwtl
adc
add
data16
mov
pushf
popf
push
push
sub
dec
int
push
lret
lcall
adc
add
mov
or
sbb
inc
jnp
jae
inc
movsl
push
fs
outsl
lea
dec
jnp
outsl
mov
dec
mov
jge
lret
fwait
out
adc
sub
jbe
sbb
fimuls
lock
lcall
lds
mov
push
je
sub
sub
dec
shrl
and
or
jg
mov
xor
dec
in
mov
mov
stos
cmp
and
xor
xchg
dec
cmpsb
inc
adc
mov
aas
pop
mov
inc
lcall
fbld
rclb
add
adc
mov
xchg
cli
or
mov
adc
pop
pop
mov
insl
shrb
xchg
sar
mov
or
popa
add
mov
pushf
addr16
loop
js
popa
jle
int3
adc
mov
repz
lcall
lcall
mov
mov
cmpsb
dec
testb
add
push
js
aas
das
or
jnp
test
or
cltd
sub
idivl
mov
enter
mov
arpl
pop
jl
repz
mulb
jmp
mov
stc
lds
scas
push
test
int3
mov
mov
shr
pop
sbb
cmp
mov
jns
jmp
inc
mov
loope
xchg
lret
pusha
jbe
lret
cmp
and
movsl
pop
mov
loope
cmp
xor
test
pop
clc
shrb
push
shrl
mov
jl
stos
push
sbb
sub
xchg
dec
xor
mov
adc
pop
adcb
inc
push
jge
cltd
cltd
enter
inc
mov
in
or
adc
pop
insb
imul
sbb
adc
std
adc
add
sbb
fs
fprem1
xor
insb
aad
sarb
lret
les
mov
addr16
pop
push
nop
xchg
pop
pushl
cmp
lcall
lahf
sub
outsb
xchg
jb
testb
rorb
subl
sbb
sub
psubusw
xlat
aaa
repz
jge
mov
sarl
and
xlat
sar
add
sub
push
and
icebp
cs
mov
lret
xchg
inc
pop
aad
dec
lods
orb
push
sbb
cltd
jge
mov
xchg
xor
adc
sub
into
jecxz
or
add
cs
scas
mov
lds
loop
test
pop
stos
adc
pusha
mov
adc
inc
imul
inc
cli
fwait
inc
cmp
loope
pop
xchg
repnz
inc
jno
subl
leave
xor
imul
jg
and
aam
flds
dec
popf
and
int
xchg
imul
lods
push
xchg
fs
or
repnz
push
cmpsl
fldt
or
push
xchg
outsl
insl
adc
or
bound
cmp
pop
les
sbb
push
push
mov
fwait
cmpsb
in
or
dec
andb
add
mov
adc
sbb
outsb
into
dec
add
orb
cmp
dec
mov
mov
jae
leave
inc
mov
inc
push
or
mov
nop
inc
sub
lahf
cs
xchg
xor
xchg
mov
lock
arpl
jl
sub
xchg
ja
and
rorl
fucomp
cmc
loope
lret
sti
xchg
dec
mov
sbb
fildll
lcall
cmpsl
cmp
add
fstps
mov
test
pop
stos
popa
sub
lret
or
inc
or
imul
imul
lds
mov
and
mov
dec
push
mov
stc
stos
jnp
arpl
bound
inc
add
adc
cmp
mov
fcompl
push
movsl
and
popf
test
test
ja
imul
jge
popf
inc
mov
sub
ss
or
loope
jne
lods
xchg
subl
rcl
movsl
lock
push
inc
ret
aam
push
ljmp
lock
popa
mov
or
movsl
mov
in
mov
fnstsw
dec
mov
cli
dec
pushf
test
fsubs
or
sub
jo
imul
movsl
out
pop
xchg
lret
testb
cmpb
mov
iret
lret
mov
rsqrtps
mov
cmpb
sub
mov
pop
test
movq
sahf
test
movsl
push
add
mov
push
cli
mov
gs
adc
jno
inc
rcrl
and
das
jb
xor
dec
enter
cmp
fisttps
nop
mov
mov
pushf
push
outsl
jmp
sbb
adc
mov
jecxz
fucompp
xchg
dec
mov
mov
out
stos
jecxz
jbe
in
jg
addr16
jae
pop
cmp
cwtl
nop
mov
data16
mov
and
loop
negl
je
daa
repz
adc
shlb
pop
aad
dec
inc
mov
xchg
sub
test
xchg
push
jmp
mov
cmp
call
pop
sbb
cli
cmp
add
mov
pushf
xor
loop
push
inc
mov
in
mov
push
pop
fbstp
fstps
push
xor
pop
iret
lock
cmpsl
mov
loop
jmp
mov
mov
loopne
cltd
outsb
aam
adc
mov
mov
orl
xchg
dec
test
jae
and
pop
mov
fwait
lds
mov
pop
pop
adc
imul
dec
inc
pop
pop
pop
sbb
bound
imul
xor
movsl
jecxz
pusha
xchg
test
jne
xlat
test
aas
pop
test
xor
or
pop
sub
pushf
stos
mov
adc
mov
pop
into
js
cmp
mov
cmp
rcll
repnz
xor
fxam
jl
inc
pop
cmc
divl
cmpsb
push
sbb
mov
ljmp
mov
aam
fisubrs
sub
sbb
aad
add
cmpsb
push
mov
mov
hlt
in
or
push
dec
dec
and
rol
adc
and
xchg
mov
pop
add
bound
mov
and
and
leave
xor
mov
dec
lods
repnz
lods
outsl
insl
cmp
adc
cmp
ja
out
mov
sbb
xor
out
aad
cli
clc
sbb
and
lcall
jl
in
ficomps
mov
out
push
sahf
pop
dec
jnp
repz
lahf
js
rcrl
dec
lcall
xorl
pusha
aam
adc
ja
movsl
adc
inc
xchg
shlb
adcl
movb
test
sub
roll
stos
loop
and
pop
push
test
sahf
frndint
stos
mov
repz
ss
xor
stos
push
data16
hlt
or
pop
pop
pop
sub
cmp
and
cmp
mov
push
cmc
dec
jg
jae
adc
jecxz
cld
or
int3
lret
aad
push
add
xchg
inc
cmc
sub
cmp
xchg
mov
popa
mov
jbe
inc
inc
push
xchg
fstl
in
sbb
pop
lods
js
aad
mov
iret
xor
cmc
scas
aam
mov
ljmp
out
popf
xchg
cwtl
lret
mov
or
mov
xor
xchg
lods
inc
jns
mov
pop
popa
cmp
pop
xor
orl
mov
andb
dec
dec
repz
or
cmp
out
iret
sbb
lds
mov
es
sar
push
sahf
push
xor
mov
xchg
mov
dec
xor
loope
out
popa
add
lcall
loopne
lods
int
jge
dec
pop
lods
xchg
inc
les
ljmp
xchg
fdivs
imul
fmul
shl
push
inc
enter
or
fstpl
mov
notb
or
sbb
adc
fidivrl
inc
inc
push
cmpsb
loopne
mov
mov
test
leave
into
push
sub
in
xchg
inc
and
sub
cmp
out
mov
sahf
stos
mov
or
pushf
stos
outsb
sbb
sub
dec
xchg
jmp
sahf
lock
dec
inc
push
dec
xor
leave
in
cmp
cmpsl
xchg
ja
fcomps
xchg
in
and
faddl
jmp
cltd
iret
adc
xorb
js
sbb
dec
mov
lods
jge
gs
loope
jle
dec
sti
lahf
cmpsl
mov
gs
outsb
ret
loope
push
mov
rorb
mov
stos
pop
xchg
out
and
rcrl
lahf
add
push
push
fbstp
xchg
repnz
mov
fcomp
rorb
xchg
dec
pop
push
jl
mov
jecxz
adc
xor
fiadds
jbe
cmp
add
addr16
rcrl
arpl
push
and
mov
sbb
fidivrs
test
push
mov
sarb
or
das
cmc
leave
xchg
cmpsb
xchg
mov
xchg
inc
fmuls
sbbb
pop
div
aam
and
loop
sub
or
mov
notb
push
jge
dec
ret
push
bound
dec
in
js
ljmp
cmp
mov
repnz
fadd
subl
add
mov
xchg
xchg
sub
addr16
stos
lock
nop
inc
add
jb
test
mov
int
mov
mov
dec
or
lcall
das
das
rcrl
pop
sarb
mov
and
jg
in
jb
repz
add
push
jbe
clc
mov
gs
gs
inc
int
adc
push
fbld
sub
ss
fisubs
pushf
xchg
cmc
pop
cmc
dec
lods
and
adcl
popa
cmpsb
xor
inc
repz
xor
and
add
pusha
xchg
fwait
cmp
xor
insl
sti
jecxz
pop
xor
push
mov
arpl
xchg
xchg
pusha
cli
mov
subb
cli
mov
in
cwtl
iret
xor
in
loopne
adc
mov
mov
insl
movsl
cmp
inc
jg
jle
je
mov
mov
pushf
jne
aam
xchg
dec
sbb
test
test
fnstcw
jo
or
sub
inc
push
push
or
mov
push
or
fcom
mov
ret
push
xchg
xchg
pop
daa
sub
pop
mov
in
outsl
enter
or
aaa
push
push
ss
ljmp
daa
dec
add
stos
xchg
xchg
push
add
xor
jns
fdivrl
daa
sub
mov
fucom
mov
cmpsb
scas
sub
mov
test
adc
cwtl
cwtl
aas
push
mov
popf
loope
sbb
sub
in
mov
mov
sbb
and
and
mov
outsl
repz
scas
aam
mov
je
xchg
movsb
shlb
insb
hlt
fadd
dec
into
scas
test
sarb
movsl
cmpsl
dec
inc
mov
ljmp
jl
mov
imul
les
std
sub
not
shl
lret
push
daa
ror
fstpt
dec
mov
mov
sub
and
and
pop
out
clc
scas
aas
push
cld
dec
sti
jecxz
push
mov
les
xorl
test
adc
arpl
pop
sbb
fcmovnbe
pop
inc
pop
sbb
or
insl
imul
xchg
mov
sub
daa
lahf
xchg
push
je
hlt
mov
dec
cmp
adc
pop
sbb
shlb
sarb
push
js
movsl
dec
out
into
pop
scas
cmpsb
add
aaa
cmpb
jmpw
push
shrl
fcmovne
popf
int3
mov
seto
add
adc
push
std
push
aas
shr
cmpsb
xlat
stc
pop
jo
aaa
lahf
aas
mov
jno
jb
rcrb
lds
xor
rep
xchg
iret
mov
ss
das
jns
imul
jle
lods
je
lods
dec
jmp
sahf
jnp
outsl
xchg
push
sub
in
jmp
test
fsubrs
mov
or
dec
jno
mov
movsl
ss
sbb
std
leave
imul
sbbl
lcall
ret
xor
xorl
mov
aam
inc
pop
ljmp
clc
shll
xchg
cmpsb
movsl
xchg
stos
sti
pushf
orb
mov
aam
cmp
and
arpl
add
ret
mov
retw
jno
aam
and
pop
cs
outsl
mov
mov
or
pusha
iret
fcoms
lock
negl
and
iret
mov
lock
loope
daa
and
xor
out
test
xor
push
call
mov
cmp
push
lods
cwtl
mov
dec
stc
fstl
sbbb
or
pop
popf
sbb
dec
jnp
mov
test
addr16
xchg
faddl
xchg
stc
enter
push
ss
adc
ficompl
dec
xchg
pop
test
fcompl
lods
int3
je
mov
jnp
iret
and
add
sbb
cmp
xor
sbb
push
inc
lret
jae
daa
pop
scas
mov
movsb
inc
xchg
outsl
js
les
jo
or
fcmovb
in
cmp
sub
sbb
push
loope
push
mov
cmp
push
inc
mov
sub
shrb
dec
aad
nop
dec
dec
pusha
jp
mov
pop
xchg
lahf
add
lahf
int3
into
fdivrs
inc
sbb
aas
adc
cmpsb
pop
outsb
jns
jno
lock
mov
mov
push
inc
sti
pop
jecxz
push
jae
xor
popf
imul
int
les
cli
cmp
inc
pop
stos
cltd
fldcw
scas
adc
mov
gs
sbb
sub
push
jmp
sbb
sub
psrlw
pop
mov
pop
call
sbb
mov
insl
movsl
jecxz
push
pop
fs
push
push
sbb
pusha
hlt
je
mov
mov
push
push
xchg
fs
sbb
mov
mov
push
mov
sbb
add
or
sbb
push
cwtl
jo
loop
sbb
mov
es
sbb
hlt
and
mov
xchg
pusha
mov
sub
inc
or
push
xor
repz
cmp
inc
dec
into
mov
sub
xor
ret
pop
fdivrs
faddl
sahf
dec
rcrl
and
test
mov
jge
sub
loope
aam
mov
mov
or
push
jnp
enter
adc
mov
in
icebp
dec
jmp
test
loopne
dec
pop
ret
push
cmp
rol
inc
sub
ret
decl
pop
push
lods
xor
adc
fs
mov
mov
mov
mov
loop
mov
gs
xor
adc
in
pop
inc
popf
xchg
inc
inc
mov
mov
aad
ret
roll
mov
mov
dec
adc
cltd
out
shll
pushf
cld
stc
stos
xchg
dec
mov
sub
aaa
daa
sti
add
inc
mov
out
sub
jl
mov
leave
mov
imul
shlb
ret
push
lea
xchg
fst
sub
mov
adc
push
movsl
xchg
lcall
ja
cld
push
jbe
movsl
aad
repz
mov
inc
mov
nop
cmp
dec
negb
stc
add
adc
sbbl
imul
push
inc
loop
cwtl
sbb
fsts
push
mov
lods
add
loope
enter
push
sbbb
fstl
popf
into
es
cmp
xchg
inc
aaa
inc
adc
or
sbb
add
fsubrs
mov
or
scas
adc
xchg
loope
and
call
lods
ror
ds
fldenv
addb
pop
jns
xchg
ds
mov
outsb
ss
xchg
std
adc
mov
sbb
inc
stc
lods
daa
mov
pusha
xchg
adc
test
or
cwtl
sbb
cli
push
pop
pusha
inc
imul
lahf
fs
js
mov
in
push
jns
je
cmpsl
imul
cld
pop
and
incb
mov
mov
negb
popa
or
sbb
pop
jnp
or
pop
mov
xor
mov
add
popa
pop
push
data16
aas
ljmp
push
cmp
sbb
sbb
jmp
mov
cmp
lds
out
aam
sub
add
mov
sarl
in
shlb
sub
ficompl
mov
inc
nop
cmp
lock
mov
lcall
sbb
dec
aad
loop
inc
cli
gs
enter
adc
mov
and
mov
or
cwtl
insl
mov
sbb
xor
mov
pop
dec
mov
mov
scas
inc
xchg
jl
adc
fsubrs
leave
mov
mov
pop
sub
movsl
xor
xor
icebp
jmp
mov
jno
xor
mov
hlt
jno
mov
mov
ljmp
jg
loopne
pusha
fisttpl
inc
and
or
lods
jg
scas
lea
in
push
out
push
xchg
stos
andl
mov
cmpsl
xor
icebp
inc
bound
lcall
popf
jo
shrb
inc
inc
icebp
mov
pop
popa
aaa
std
pop
mov
or
addr16
xchg
and
cmc
repnz
sbb
out
das
adc
inc
xlat
mov
movsl
mov
jbe
jno
fsubs
jl
divb
dec
leave
sbb
jnp
sahf
xor
xchg
lret
add
out
inc
adc
mov
and
scas
pop
icebp
fdivrs
xchg
sbb
loopne
jecxz
sti
adc
call
cmp
les
pop
movsl
das
lock
fldenv
sbb
ficoms
sbb
jbe
jne
leave
adc
sub
dec
cmp
testb
aas
test
add
xor
fwait
xchg
jns
int
pop
xor
sbb
sbb
in
push
test
sbb
cmp
add
ss
mov
aas
xor
pop
ds
jb
scas
out
dec
cmp
fimuls
sub
mov
sub
sti
cmp
xor
mov
cs
jp
test
por
adc
inc
stos
sub
inc
bound
cmp
pop
push
push
scas
mov
pop
push
sbb
mov
incb
aam
ret
outsb
into
or
lock
outsl
test
mov
in
inc
fadds
lea
dec
mov
sub
jbe
insb
add
aad
jmp
add
add
addl
pusha
sub
inc
cmp
lods
dec
out
ss
mov
or
inc
mov
je
ljmp
xchg
fldenv
cmc
out
sahf
fbld
mov
es
cmpsb
hlt
xor
dec
inc
xor
cltd
lods
mov
outsl
add
inc
insb
out
ret
jae
xchg
ds
push
sti
aam
in
inc
xchg
in
aas
jb
out
push
into
aam
push
cli
push
push
adc
jb
cmp
xchg
cltd
movsl
dec
push
jmp
addl
ja
lea
in
inc
iret
mov
adc
int
mov
jmp
sti
or
mov
stos
test
sbb
jbe
je
inc
push
jno
fldenv
add
stc
lock
xorl
aad
fisubrl
lret
mov
or
xchg
add
xor
fdivs
mov
jmp
jnp
test
loopne
loop
loope
lcall
ds
push
aam
hlt
add
inc
popa
jno
mov
addr16
loop
ljmp
movsl
int
stos
scas
adc
jl
mov
fdivrl
add
sub
inc
aad
cwtl
cmp
pop
and
add
sub
imul
cld
or
sub
push
push
das
xchg
or
xchg
shll
dec
push
inc
inc
repnz
push
lcall
into
or
adc
fcom
inc
add
mov
jle
sub
bound
jp
inc
push
add
push
sub
xor
arpl
mov
xor
jae
jl
add
mov
sbb
sub
insl
and
mov
dec
sahf
stos
cld
loope
sbb
pop
inc
inc
aas
fwait
jp
aas
ds
sbb
jmp
movsl
scas
je
mov
popa
ret
loope
mov
sbb
lret
shlb
fstl
mov
jge
mov
mov
rorl
jmp
push
divb
in
fs
push
jne
arpl
sbb
fnstenv
dec
xchg
mov
and
jne
dec
push
out
lods
and
jg
outsl
dec
cmp
dec
sbb
inc
into
ror
mov
stos
lea
xchg
adc
cli
jl
mov
les
and
pop
push
stos
fiadds
adc
push
mov
pop
shll
mov
fsubrl
mov
and
sarl
adc
pop
inc
add
pop
insb
pop
mov
pop
add
shrb
lock
mov
push
xor
movsb
imul
dec
cmp
dec
xchg
mov
movsl
mov
mov
xchg
and
sbb
dec
ljmp
xor
jbe
xchg
mov
jbe
push
ss
cmpsb
sub
stos
mov
cmp
adc
repnz
fstps
pop
push
fcmovb
xchg
mov
test
push
hlt
xor
sbb
daa
ja
mov
fstpl
orb
das
jns
fmull
fdiv
add
or
cmc
xor
mov
ljmp
rcl
xchg
stc
arpl
cmp
push
push
pop
inc
sub
das
mov
adc
inc
mov
lret
out
mov
adc
pop
dec
adc
movsb
loop
xor
scas
pop
cltd
in
insl
hlt
jge
pop
mov
int3
lea
mov
cmpsl
movsb
sbb
jecxz
outsl
test
in
jmp
inc
jmp
mov
test
es
mov
ret
pop
hlt
mov
or
push
cmp
xchg
xchg
pop
pushf
mov
push
jg
jne
cmp
add
out
sbb
sbb
mov
add
ret
sbb
out
xor
mov
test
jae,pn
xchg
cmp
fnstsw
pop
or
cmpsl
mov
or
stos
or
cmpsb
test
inc
gs
dec
lret
jge
lods
es
data16
sub
cld
in
fists
xchg
iret
sti
add
fnstsw
xchg
push
pop
add
movsl
out
mov
mov
add
mov
cmp
testl
arpl
popa
fsubs
lret
dec
sbb
jmp
fistps
mov
enter
sbb
cmp
stc
mov
xor
adc
popf
push
mov
dec
dec
ucomiss
push
cmc
mov
mov
inc
ja
adc
cmpsl
xorb
xchg
inc
push
cli
pop
push
jl
jp
add
js
or
out
xchg
icebp
xor
adc
hlt
add
addr16
sub
in
pop
loop
call
insb
pop
test
popl
and
cmpsl
jnp
sbb
xor
mov
clc
in
pop
cld
push
pop
mulb
dec
cmpsl
dec
cmp
xchg
adc
and
or
and
cmp
mov
dec
insl
test
call
jle
aas
je
enter
lret
pusha
mov
jae
int3
std
xor
mov
and
xor
repz
out
lret
push
mov
ds
adc
pop
repz
xor
in
push
popa
jecxz
inc
repz
subl
loop
fiaddl
xchg
xlat
mov
fisttpll
popf
rcll
icebp
or
adc
mov
ret
int
fcmovnu
add
xlat
xor
jmp
jmp
cmpsl
mov
aam
and
cmp
stc
inc
sub
cmpb
cmpsl
dec
inc
outsb
mov
xchg
subl
xchg
jno
addl
mov
rolb
outsb
lret
adc
cmp
sti
adc
lret
jmp
jecxz
sub
lods
mov
sti
repz
cmp
xor
jmp
mov
test
cs
jle
rclb
add
push
mov
fsubrp
int
jmp
push
lahf
dec
cmp
fwait
sbb
and
nop
inc
lret
mov
add
mov
dec
fdivr
aam
pop
ja
test
or
mov
mov
xor
lea
inc
repz
xchg
addb
and
repz
pop
popa
jmp
bound
sahf
dec
sbb
pop
fs
notb
adc
xchg
push
stos
out
sbb
test
mov
je
pop
adc
sbb
pop
in
pop
jno
xchg
sub
dec
mov
jne
aaa
or
sarl
mov
scas
pop
dec
xchg
mov
or
add
mov
out
push
lds
mov
js
fsubp
and
imul
and
mov
cltd
push
movb
pop
sbb
ja
and
in
rcrb
in
insb
test
ret
cld
jg
pop
popf
cmc
jecxz
mov
jbe
das
sub
cli
and
add
mov
push
jae
es
xor
adc
daa
arpl
mov
pushf
out
in
jo
pop
sub
repnz
repnz
cltd
je
push
enter
mov
xchg
lret
movsb
gs
adc
sarb
mov
popf
xchg
popa
decl
aas
cmp
hlt
ljmp
lahf
das
cltd
lods
xchg
jne
int
gs
push
pop
outsl
movsl
lea
stos
test
aam
inc
les
push
mov
jp
inc
popf
and
out
push
nop
ja
or
mov
push
cld
dec
mov
dec
scas
sbbb
xchg
sbb
enter
pop
enter
test
add
testb
sbb
loope
pushl
sbb
popf
mov
imul
mov
movsb
std
bnd
jo
pop
and
push
test
ss
ss
jns
js
pop
mov
pop
push
adcb
ds
jle
cmpsb
fildl
sub
push
dec
pop
repnz
or
adc
test
xchg
and
fistpl
popa
xchg
dec
insl
or
test
sbb
cld
aaa
aaa
jnp
fcomps
sbb
push
dec
push
and
jecxz
imul
mov
adc
or
adc
add
jmp
and
or
cwtl
jnp
jne
and
push
add
sbb
lret
add
adc
sbbl
or
adc
lods
cwtl
lret
cmpsl
decl
mov
sbb
and
cmp
jmp
not
mov
cmp
sub
aaa
dec
xor
out
clc
sub
inc
mov
jbe
mov
fsubl
mov
out
out
xchg
xchg
mov
aas
lret
ret
cmc
add
mov
push
sbb
lock
loopne
repnz
mov
mov
lock
movsb
ret
sbb
addb
adc
jp
jge
mov
jecxz
ret
pop
movsl
jl
inc
in
push
adc
mov
jle
mov
adc
xor
push
nop
mov
jmp
mov
adc
push
push
sbb
add
inc
testb
or
loopne
fnclex
ficompl
push
and
push
dec
xor
adc
lret
inc
mov
jns
jmp
insb
mov
std
stos
out
push
movsl
dec
dec
mov
and
push
movsb
cmpl
jnp
call
out
cmp
int
stos
sub
cmpsb
jle
mov
rep
lock
les
jbe
and
inc
sub
xorl
movsl
stc
gs
xchg
cmp
jae
mov
jecxz
push
pop
cmp
jno
pusha
mov
push
push
mull
xchg
cld
mov
insl
popf
mov
mov
stos
mov
inc
imulb
lret
cmp
ds
daa
jno
aaa
push
sahf
add
rol
popa
push
or
lahf
xor
cmpsl
in
lcall
das
adc
and
pop
mov
scas
mov
ss
enter
test
add
sbb
repnz
into
cmpsl
adc
mov
lret
out
inc
dec
insl
xchg
and
int3
push
xchg
insl
test
hlt
shrl
bound
adc
xchg
mov
test
jp
cmpsl
inc
not
xchg
mov
ja
repz
incb
int3
cmp
fbld
hlt
adc
cli
add
cli
cmp
cmovne
mov
lods
out
iret
mov
push
std
sarl
push
int
mov
iret
dec
jbe
adc
jl
mov
fisubl
jmp
push
jns
or
mov
add
xchg
sub
pop
stos
add
cld
lock
lret
lods
add
jae
out
mov
loop
lret
je
scas
or
shll
orb
xchg
jb
dec
pop
mov
mov
loope
pop
mov
dec
cmp
testl
and
bound
roll
cld
push
test
cmp
or
mov
sub
mov
cmp
adcl
movsl
sahf
push
out
imul
mov
lret
or
shll
or
xchg
les
clc
sbb
add
cmp
cltd
pop
insl
mov
call
fwait
xchg
js
je
scas
fs
add
dec
scas
or
test
and
adc
cmp
and
gs
adc
mov
dec
jo
dec
mov
xchg
popa
jmp
adc
in
cmp
push
aad
ljmp
lock
xchg
ljmp
int3
pop
sub
mov
shr
push
data16
aam
in
cmp
xor
and
adc
aaa
outsb
mov
push
inc
dec
mov
repz
mov
int3
sar
xchg
int3
les
push
test
neg
stc
inc
xchg
adc
sbb
sbb
mov
loopne
push
lahf
sahf
sbb
shrl
cmp
repz
jne
mov
xor
sbb
repz
leave
sbb
insb
mov
pop
jbe
rcr
adc
jmp
add
pop
lods
aam
fdivr
outsl
jnp
ja
pop
lcall
xchg
xor
sbb
sahf
jl
mov
cmp
jge
add
aad
js
mov
mov
adc
xchg
ljmp
ret
out
ds
sub
fcmovnu
data16
rcr
outsl
add
or
push
xchg
sarb
mov
mov
test
shll
sbb
add
mov
fimuls
jnp
sbb
movsb
fiaddl
out
mov
in
fs
js
arpl
cmp
push
cli
pop
mov
sbb
mov
movsl
xor
iret
xchg
lods
jb
mov
rcrb
shrl
add
or
gs
cmpl
pop
je
xor
shr
inc
in
std
xchg
mov
or
icebp
int
mov
mov
fstl
in
jno
xchg
xlat
cld
xlat
mov
sbb
inc
stos
out
xchg
leave
adc
nop
leave
loopne
insb
data16
inc
or
mov
pop
xchg
inc
neg
lahf
les
mov
in
movb
push
fcom
call
repnz
adc
and
add
das
ljmp
out
jns
mov
xchg
mov
aas
push
out
lret
out
adc
pusha
adc
nop
aam
in
inc
test
inc
adc
pusha
fprem
jns
int3
adc
and
mov
cmpsl
out
scas
mov
int3
out
mov
cmpsl
mov
call
mov
jbe
mov
out
add
jp
and
ljmp
or
sbb
gs
inc
push
or
push
push
into
fsub
push
mov
insl
dec
lods
popf
jns
jae
lret
or
lahf
and
adc
push
repz
movsl
nop
inc
cmp
dec
sbb
pop
mov
xchg
std
stos
in
pushf
repz
pushf
notb
mov
lret
mov
jns
pop
push
push
jmp
popa
sbbl
pop
rolb
repnz
roll
adc
enter
adc
cmp
sbb
lret
repnz
adc
sarb
push
ljmp
adc
mov
inc
fstpt
mov
adc
rcr
mov
mov
mov
pushf
cltd
push
push
add
mov
in
cs
add
cmp
jecxz
mov
loop
pop
scas
mov
addr16
clc
mov
mov
iret
inc
dec
jge
ja
pop
and
pop
xchg
push
xor
outsb
xor
jmp
xchg
inc
jmp
in
xor
inc
test
sbb
xor
cmp
push
push
cmp
inc
and
sbb
out
sub
cmp
lods
movaps
popa
lahf
test
sbb
sahf
loopne
inc
movsl
pop
mov
cmp
jne
pop
inc
dec
es
pop
shlb
lds
or
push
xor
lret
push
jmp
lock
cltd
scas
inc
arpl
nop
aam
popa
shlb
or
aaa
inc
loope
adc
dec
push
loope
dec
dec
je
pop
or
add
ret
fcompl
aas
mov
or
rcrb
leave
xchg
enter
data16
add
xor
xchg
lret
jle
cmp
aas
xadd
stc
xchg
pop
loope
mov
cmpsb
idiv
into
cli
pop
fistpll
xchg
scas
cmp
rorb
xorb
lret
mov
adc
cmpsb
loopne
mov
push
sub
sub
xchg
pop
fisttps
sahf
mov
and
mov
push
stos
mov
mov
push
out
ss
outsl
cmp
dec
sarl
sar
xor
dec
cmp
sub
pop
test
jp
into
jge
mov
mov
pop
xchg
es
adc
add
add
xchg
push
fcmovbe
xor
mov
ret
int3
xor
sub
sub
in
dec
inc
add
mov
push
xchg
sub
into
mov
fsts
inc
scas
popf
imul
cmp
inc
jae
gs
mov
sub
inc
mov
push
push
xchg
stos
inc
dec
pop
pop
xor
icebp
decb
movsb
sbb
loopne
sahf
sti
fidivrl
stos
sub
inc
xor
xchg
sub
stos
push
idivb
pop
inc
ja
call
cld
jp
inc
push
xor
subl
or
lea
adc
fidivs
cs
inc
mov
xor
jae
jp
bound
mov
test
ficomps
or
mov
jge
pushf
out
mulb
sarb
movsb
imul
pop
and
mov
fsubrl
inc
cs
mov
scas
ss
lret
and
dec
ret
in
pop
mov
cs
call
fbld
mov
and
push
cmp
adc
mov
jno
xchg
aas
sub
shll
fs
mov
bound
adc
bound
stos
pop
icebp
in
and
int3
or
in
pop
mov
sbb
xor
repz
xlat
divl
les
sbb
pop
in
fcoms
add
std
test
inc
inc
enter
gs
and
cwtl
xchg
pop
subb
in
shll
push
imul
dec
adc
lock
test
cmc
loopne
sbb
mov
ljmp
xor
sbb
lahf
lret
test
imul
fisttpl
jl
fldl2e
les
mov
les
leave
scas
nop
and
sub
daa
lods
push
push
sub
div
push
add
das
xchg
cmpsb
xor
in
lcall
cmpsl
inc
test
sub
sub
xorl
stos
jecxz
pop
filds
cli
cmp
push
cmp
dec
repz
stos
jns
fmull
stc
xor
loope
sbb
cmp
fchs
outsl
cmp
pushl
push
xchg
out
scas
test
jecxz
int3
push
cld
test
add
enter
jecxz
mov
jb
push
cmpsb
inc
leave
add
out
aad
dec
int3
cmpsl
dec
xchg
push
daa
push
jns
sarl
or
mov
cmp
mul
inc
fiaddl
sbb
xlat
cli
scas
test
jno
adc
bound
leave
cs
cmp
inc
pop
ds
sub
mov
enter
imul
push
cmp
mov
xor
cmp
cmpb
icebp
dec
stc
sbb
aam
call
and
int
sub
stos
inc
in
sbb
mov
divb
or
jb
imul
fwait
insb
mov
sti
push
mov
mov
jp
and
leave
stos
cmc
sbb
mov
imul
pop
fdivr
test
scas
lods
xchg
ret
adc
jmp
xchg
bound
cmp
mov
dec
mov
popa
daa
pop
jp
add
fnstcw
push
shl
leave
mov
or
jl
ds
out
cld
sbb
sbb
add
sbb
mov
mov
ret
shrb
dec
add
imul
pop
cmp
mov
or
mov
faddl
insw
insb
xor
xor
xchg
dec
or
sti
aaa
mov
arpl
or
and
mov
pop
movsb
push
adc
sub
popa
mov
mov
je
xchg
insl
dec
mov
adc
stos
rorb
cmp
mov
repz
test
mov
cwtl
add
inc
les
punpckhwd
adc
xor
out
mov
sub
sub
imul
int3
pop
rol
std
push
pop
pushf
pop
inc
daa
or
cmpsb
add
je
das
add
or
push
jg
cmpsl
or
mov
jmp
xor
roll
ret
mov
mov
testl
mov
cmp
cmp
loope
push
cmp
push
in
push
push
xchg
ss
aad
mov
xor
js
insb
adc
mov
std
sbb
pop
push
jmp
ret
in
inc
jecxz
inc
addr16
lcall
js
aam
adc
cmp
lahf
add
xchg
lock
movsb
cli
lods
dec
stc
cmp
adc
outsl
and
add
xchg
in
xor
call
jecxz
data16
cs
mov
pushf
sub
cld
sti
xchg
dec
scas
lods
fisttps
jbe
popf
lods
mov
lods
cltd
lock
call
and
jl
enter
push
addl
mov
jo
mov
or
push
fbld
scas
inc
fs
fldenv
std
enter
push
shll
fs
test
pop
cmp
add
sbb
xlat
data16
mov
arpl
xor
es
mov
es
ljmp
fisttpll
jecxz
outsl
push
or
pop
sti
push
inc
ja
bound
out
mulb
push
mov
jge
jo
inc
iret
jp
or
shlb
sbb
sbb
je
or
outsb
xlat
or
cmp
ds
push
jmp
mov
shrl
inc
lcall
mov
sbb
aam
repnz
ljmp
stc
inc
and
jae
sub
add
aas
in
mov
es
adc
mov
lea
xor
cld
test
sbb
mov
std
inc
pop
imul
int3
call
adcl
loope
bound
xchg
mov
std
mov
aad
dec
aaa
mov
push
adc
mov
pop
inc
pop
fwait
xor
pop
or
add
cmp
cmpsb
adc
jno
rorb
data16
shrl
subps
pop
push
add
jecxz
shll
xchg
outsb
cmpsl
insl
cmp
inc
xchg
or
mov
dec
fstps
and
lret
push
pop
sti
dec
popf
and
mov
test
out
adc
pop
xor
add
mov
mov
iret
dec
xchg
iret
in
cmp
out
mov
push
jno
je
sbb
and
pop
bound
adc
call
push
mov
jno
jmp
mov
repnz
sbb
mov
mov
xor
mov
mov
push
lods
daa
cmp
in
xchg
pop
push
sub
xor
inc
push
inc
dec
mov
loope
andl
jne
bound
jg
sbb
push
pop
sub
sub
adc
lock
call
dec
or
cmp
ss
ds
stc
push
lds
sbb
pop
push
fisttpl
rorb
or
sbb
cmp
int3
in
cs
xchg
fs
inc
sub
shlb
jg
or
adc
cmp
pushf
imul
das
inc
sub
dec
jp
mov
ljmp
sbb
mov
mov
xchg
enter
pop
xor
xchg
aad
ja
jns
sbb
jae
or
hlt
jnp
or
scas
insl
cltd
mov
mov
push
mov
dec
cs
sti
mov
shrb
imul
inc
adc
ret
rolb
sbb
sub
scas
cwtl
iret
xlat
filds
xchg
cld
mov
arpl
jae
or
mov
movsl
push
mov
xor
es
adc
stos
xchg
lods
mulb
mov
bound
cmp
inc
adc
aad
mov
adc
aaa
icebp
push
movb
or
sbbb
ret
sbb
stc
jmp
dec
cmp
xchg
int3
hlt
loopne
cmc
testb
mov
sbb
adc
adc
movsb
push
ret
shll
out
scas
sub
in
mov
sarl
cli
arpl
mov
cs
cmpsb
lahf
fsub
dec
add
lods
rcrl
ret
sub
mov
rcrl
or
xchg
incl
and
push
add
mov
movsl
jmp
xchg
stos
xor
repz
es
or
out
shrb
adc
test
add
repz
call
pop
inc
js
fs
xor
jns
dec
test
push
cltd
rcll
mov
out
sub
icebp
xchg
insl
rcrb
or
dec
ds
xchg
lods
test
sbb
xorl
fwait
mov
iret
xchg
jecxz
lcall
push
push
test
xor
test
aam
scas
in
addb
and
daa
mov
or
scas
inc
mov
add
pop
fadds
push
enter
arpl
ret
insl
jbe
dec
inc
aam
push
dec
rcll
adc
sbbl
aaa
ja
sarl
dec
jp
mov
in
mov
addb
push
cmp
mov
sub
cmc
cltd
int
xchg
in
outsl
add
dec
xchg
jne
fwait
int
xor
pop
mov
mov
leave
xor
icebp
or
rcrl
sbb
add
jns
jo
inc
mov
jns
xor
jl
inc
shll
xchg
js
jmp
mov
je
pop
les
sti
push
xor
sub
push
mov
pushl
xlat
jmp
cld
mov
test
lcall
enter
movsb
andb
mov
fldcw
insb
sub
mov
test
xor
cmp
mov
xchg
or
dec
jnp
dec
jns
adc
add
mov
adcl
mov
cmc
pop
sub
xorb
jmp
test
mov
bnd
sbb
mov
sarl
cs
test
aad
rol
or
mov
pop
js
jnp
jnp
leave
vpminub
xchg
in
lds
adc
dec
out
nop
daa
pop
lock
mov
sub
mov
movmskps
pusha
pop
pushf
push
aaa
sbb
jge
push
sbb
enter
mov
dec
sub
cs
add
xchg
stos
arpl
in
jnp
push
fnstsw
imul
js
filds
aas
into
out
fcmovu
cld
in
mov
mov
out
inc
mov
cli
pop
and
int3
sbb
arpl
stc
movsb
dec
lods
rorb
mov
xchg
or
or
cli
in
mov
aad
pusha
into
mov
jbe
ljmp
pop
jmp
and
dec
fwait
lret
xchg
jo
inc
sbb
sub
scas
dec
pop
push
ret
insb
xchg
mov
movsl
lahf
mov
test
mov
cli
pop
or
adc
mov
insl
jnp
lret
xchg
push
inc
enter
mov
roll
test
cmpb
jp
xchg
xor
cmc
repz
daa
sahf
pop
je
mov
mov
adc
std
jae
pop
scas
push
jecxz
sbb
in
inc
mov
stc
in
push
pop
lret
jo
into
sub
mov
sub
push
fdivr
and
mov
mov
mov
jmp
mov
cli
and
pop
pop
push
je
cmpsb
jns
test
jmp
loope
lcall
cmc
xchg
sub
sti
test
jno
icebp
nop
pop
xchg
insb
ret
add
pop
aam
rorl
js
aam
leave
cmpsl
mov
clc
fcomip
lret
outsb
test
arpl
inc
and
mov
mov
and
inc
shll
nop
add
outsl
jl
mov
ss
or
addr16
xor
mov
add
aam
sahf
or
dec
es
adc
aaa
es
std
or
mov
popf
mov
fcmovbe
jno
jae
pop
lods
daa
push
movsl
pop
mov
sbb
xor
ss
jbe
jno
xchg
xor
jg
outsl
outsb
jg
movsl
add
cld
mov
data16
jae
mov
loopne
ja
fildl
clc
jb
ds
aas
mov
sub
jne
shl
scas
lahf
pop
inc
inc
movups
js,pn
lea
cld
mov
test
sub
mov
add
jne
or
dec
in
and
out
pop
aam
mov
dec
fsubrs
and
mov
imul
add
inc
dec
mov
outsl
jnp
in
sub
push
out
fldl
mov
mov
cld
filds
aas
out
push
out
jae
xchg
mov
gs
icebp
and
ljmp
adc
cmp
add
jnp
mov
stc
sbb
or
sbb
adcl
mov
xchg
jno
sbb
or
aam
push
clc
pusha
mov
fistpll
sub
xchg
fbld
rcl
pop
sbb
mov
out
out
pop
hlt
jge
xchg
and
aas
jbe
dec
das
pop
roll
xchg
xchg
leave
inc
jmp
jns
mov
aaa
inc
mov
popa
jae
mov
xor
inc
icebp
dec
mov
sub
xorl
test
mov
adc
insl
cmp
pop
mov
xchg
push
jae
call
xchg
push
cmpsb
add
cmp
arpl
movsb
sub
jno
incl
dec
sub
add
mov
mov
pop
sar
jge
loop
movsb
cli
sbb
inc
lret
xor
aad
outsb
cmpsb
dec
add
add
lcall
xor
fsubrl
aad
out
push
ljmp
repnz
scas
push
mov
mov
outsb
xorb
es
adcb
push
je
cli
xlat
xchg
jg
mov
pop
xor
mov
pop
adc
or
scas
push
sti
rorl
lods
ljmp
fidivrs
cmp
pop
add
ds
lods
dec
test
sti
xlat
mov
int3
xchg
hlt
fnsave
jg
les
scas
pop
out
add
mov
mov
jl
cs
sbb
jecxz
mov
sahf
and
xchg
jb
push
adc
xchg
bound
aas
popa
dec
nop
xlat
rorl
sbb
inc
cs
inc
xchg
clc
sub
mov
pop
xchg
push
mov
xchg
xchg
push
and
mov
jecxz
mov
dec
jb
stc
notb
push
fs
aas
fidivs
sub
mov
mov
pop
or
dec
or
push
add
dec
fbstp
push
and
mov
movl
aaa
jne
cmp
addl
sub
pusha
stos
inc
dec
dec
je
dec
sbb
xor
inc
mov
hlt
ret
cmc
adc
stc
stos
imul
mov
daa
sbb
ss
xchg
jo
mov
cmp
xor
push
adc
into
mov
adc
add
lcall
jnp
repnz
pusha
pop
xchg
inc
adc
add
xchg
fwait
push
push
push
inc
mov
push
int3
nop
xchg
mov
inc
xchg
leave
xchg
jns
aas
scas
push
sbb
add
sti
je
or
test
stc
inc
jp
sbb
dec
add
add
out
ss
push
mov
movsb
aad
scas
stos
ret
sbb
rorl
xor
fdiv
call
xchg
mov
bound
pop
sbb
test
jo
sbb
jb
call
rclb
pop
icebp
shrb
or
mov
fnstsw
mov
sarl
add
and
mov
cmpsl
dec
mov
lahf
shlb
xchg
lret
xchg
rcr
ret
push
xorl
scas
cmp
push
rorb
push
mov
pop
adc
push
popa
iret
pushf
inc
add
or
and
xor
ret
outsl
inc
movsb
cmc
sbb
xchg
pushf
in
mov
fsubrs
adc
sbb
leave
mov
out
shlb
lret
pop
lds
call
cmp
mov
jmp
fdivrl
xchg
and
lret
cwtl
rolb
mov
adc
ds
xchg
mov
mov
pop
jnp
push
repnz
js
dec
popa
rorl
divb
jg
jle
repz
loop
push
dec
or
into
push
fwait
sar
dec
jbe
cwtl
aad
repnz
out
pop
xchg
mov
insb
cmp
mov
pushf
mov
cmp
xor
or
adc
push
popa
ljmp
cmp
scas
int
aad
push
ljmp
mov
xor
aas
fstpl
and
insb
sub
rorb
push
lcall
ret
sub
xor
push
fimull
jb
loopne
repz
repz
and
lea
aam
outsl
int
sbb
ds
cwtl
in
ljmp
lcall
rclb
push
ret
rorl
mov
or
jg
shrb
mov
lods
int3
push
daa
cmp
outsl
push
ss
dec
rorl
add
dec
leave
xor
mov
aam
stos
mov
int3
nop
shll
rorl
xchg
imul
and
fsubrs
addl
cmc
das
sub
std
js
mov
push
cmp
push
sbb
je
out
stos
push
fsubl
inc
leave
stos
dec
mov
into
lods
pop
icebp
xchg
ja
in
xchg
divl
sub
cs
and
fdivrs
fwait
push
jl
cmp
push
shr
popf
add
jo
stos
pop
xchg
outsb
push
mov
xlat
pop
sub
in
cmpsb
in
repz
jmp
negb
pop
insl
fisttpll
inc
push
push
and
outsl
cmp
das
stc
push
mov
test
push
jnp
iret
ror
dec
les
test
movsb
jg
rclb
insb
in
jecxz
adc
or
mov
add
push
into
insb
or
pop
loopne
pusha
lods
push
push
mov
sbb
jp
inc
aam
daa
fs
imul
inc
fiadds
push
popa
xchg
ret
jne
cmp
cmp
lret
adc
inc
mov
mov
outsb
pop
or
leave
fisubrs
mov
jp
pop
xor
push
ror
sub
jns
dec
xchg
mov
mov
push
add
jns
imul
sbb
fxch
mov
stc
addb
in
sub
cld
sub
lcall
pop
inc
movsl
outsb
inc
mov
xor
mov
loopne
imulb
or
inc
or
fidivl
popa
mov
jo
addr16
sub
mov
cmpb
sbb
mov
xor
sub
dec
loop
dec
mov
jns
in
and
je
add
mov
arpl
adc
and
sbb
ja
xorb
jmp
std
pop
dec
daa
mov
inc
jle
in
mov
sbb
cli
lea
setg
dec
popf
mov
lods
or
cmp
jmp
inc
ret
test
cmpsl
daa
mov
mov
cmp
sub
or
std
movsl
fsub
adc
dec
outsl
scas
daa
sub
rcl
or
insb
pop
xor
push
xchg
into
pop
stos
inc
les
mov
test
int
inc
dec
fdivr
jp
or
movsl
cmp
push
inc
jo
clc
idivl
outsl
push
inc
mov
mov
mov
push
in
stos
test
je
popf
pminub
bound
mov
ds
fldlg2
test
sbb
mov
dec
or
inc
mov
add
push
fs
in
ljmp
cli
popa
insl
jbe
mov
adc
mov
push
testb
scas
dec
lcall
les
scas
enter
mov
mov
jmp
pop
call
lret
push
les
js
inc
jg
into
sarb
lret
and
lret
loopne
mov
sbb
jg
sub
pop
lods
pop
gs
adc
pop
xchg
pop
aas
inc
sbb
xor
inc
test
or
fwait
mov
aaa
pop
das
pusha
dec
xchg
ja
ss
mov
popa
xor
into
out
rcl
fwait
out
pop
lods
pop
jno
imul
inc
cwtl
push
inc
xchg
pop
dec
lods
loopne
jmp
cmp
jmp
adc
lods
pop
sbb
push
leave
cmp
mov
das
pop
jp
addr16
push
sub
out
pop
mov
mov
mov
sbb
mov
cmpsl
fisubl
cltd
enter
lahf
lcall
sub
les
jge
cmpl
jg
mov
and
jne
in
in
sbb
sbb
out
adc
sub
jbe
stc
push
out
cwtl
jmp
lock
jge
scas
push
mov
xorb
aas
dec
push
xchg
arpl
and
popf
dec
pop
sub
xchg
repnz
mov
add
cli
test
adc
ja
ret
cltd
xchg
sar
mov
jne
jl
int3
jb
call
adc
adc
xor
jnp
cmpsb
inc
dec
cltd
pop
punpcklbw
jp
std
and
dec
mov
in
xchg
push
lahf
jp
push
mov
aaa
dec
insb
jns
js
or
jge
xchg
stc
nop
insb
pop
xchg
in
cmp
dec
fstps
test
sbb
jecxz
test
out
pop
pop
ss
sbb
pop
dec
dec
out
pop
add
nop
sub
lret
aad
jecxz
insl
adc
jae
cs
pushf
mov
pop
xlat
adc
psubusb
sbb
dec
lret
adc
and
repz
inc
aad
dec
pusha
mov
jne
popf
lods
hlt
or
push
or
jg
and
sbb
xor
ljmp
shlb
leave
mov
aad
jns
lock
sti
ja
in
daa
inc
int3
jl
pushf
mov
pop
icebp
inc
ss
int3
add
or
jg,pt
push
push
sbb
jae
lahf
mov
dec
jnp
jle
and
mov
jns
xchg
jo
pop
jg
or
lock
inc
fimull
sub
stc
jg
mov
jle
push
push
bound
imul
mov
push
fsubrp
dec
iret
xchg
sti
ficompl
jg
adc
mov
inc
lahf
dec
and
out
or
cmp
mov
xchg
xlat
lret
lahf
test
jge
loope
jl
push
rorl
lcall
xor
pusha
loopne
mov
adc
pop
jg
test
test
mov
and
pop
test
mov
mov
aam
scas
leave
cmp
jbe
loopne
adc
and
ja
orl
pop
mov
mov
fisubs
push
in
insl
cmpl
popf
xchg
mov
add
shr
pop
fisttpll
aas
bound
insl
fimuls
or
push
mov
mov
adc
sub
fisubl
out
pusha
sub
mov
xor
push
inc
pushf
aas
insb
add
popa
lods
jp
sarb
jp
inc
fs
ret
stos
popa
setno
les
enter
pop
sti
int
mov
shl
negb
test
ljmp
adc
sbb
data16
xorl
loopne
jge
jnp
lock
test
test
inc
jecxz
lcall
pusha
lret
repnz
xor
push
or
push
add
lea
mov
fidivs
sarb
jecxz
inc
mov
js
mov
movsl
mov
stos
add
jno
rorl
mov
popf
push
pop
data16
out
pusha
cs
mov
in
adc
std
mov
or
and
gs
push
stos
inc
jbe
shl
mov
xchg
cmp
sub
scas
inc
jecxz
ljmp
add
pop
stos
xchg
enter
and
push
enter
das
add
cld
lods
xchg
inc
cli
push
jb
sbb
mov
cmp
lea
mov
xchg
sbb
out
xchg
mov
stc
cmp
stos
jno
icebp
lds
mov
loopne
add
mov
inc
mov
scas
sub
pop
dec
ss
inc
subb
cmpsb
jmp
ret
sub
or
pop
or
into
ror
jns
sysenter
push
mov
and
enter
dec
xchg
sbb
and
pushf
dec
adc
fistl
pop
je
pop
cs
jecxz
xlat
into
movsb
sti
cmp
sub
loopne
enter
mov
push
ret
jo
xchg
mov
sub
icebp
int
xchg
jl
adc
or
xchg
repnz
icebp
cli
sub
je
data16
cmp
stos
push
lret
loop
cmpsb
cmc
cmp
dec
shrl
and
sbb
mov
jae
jecxz
fmuls
mov
pop
fucomip
out
dec
or
ljmp
dec
inc
inc
dec
xor
mov
test
mov
and
pop
push
adc
mov
popf
cmp
rcrl
dec
outsb
dec
pushf
ja
popf
push
pop
mov
loope
js
mov
push
in
pop
mov
nop
mov
cmp
xor
or
mov
sbb
sbb
jle
int
pop
sti
cmc
push
inc
inc
aam
imul
or
popf
arpl
lds
int
loope
out
lahf
sub
add
mov
xchg
test
push
fmull
sbb
cmp
stos
ds
jae
les
and
out
sbb
imul
cmc
ljmp
mov
mov
push
ror
int3
arpl
adc
jg
jge
mov
out
and
xchg
push
dec
rorl
dec
fstl
sub
stc
xchg
mov
int3
fsubs
xchg
jp
push
mov
dec
mov
push
movsl
aas
movsb
xor
jecxz
lods
push
push
and
cmp
fadds
jg
mov
lock
cmc
jbe
enter
ds
jb
add
lret
call
test
xchg
jno
pusha
xor
dec
or
xor
ja
stc
push
in
mov
lea
nop
sahf
mov
in
cmp
inc
in
lcall
int3
jo
mov
notb
or
fsubs
push
push
into
int
movsl
into
pop
cltd
popf
jp
hlt
cs
and
sbb
mov
jae
pop
jne
inc
std
loope
and
repz
in
shrb
rcll
sar
or
jns
inc
out
or
ljmp
add
push
xor
mov
roll
cli
sub
js
iret
inc
popa
and
add
cld
out
mov
xchg
hlt
mov
push
pop
xchg
and
shlb
dec
aam
sub
cmpsl
cli
pop
cld
inc
js
lahf
and
add
mov
push
fdivr
fstpl
fst
xor
mov
inc
sbb
add
fs
iret
stos
sub
jp
pop
mov
push
ret
or
push
incl
mov
jecxz
cmp
scas
out
xchg
ss
js
enter
nop
fcom
mov
iret
imul
and
out
fwait
push
push
fdivrp
cmc
stos
push
gs
sbb
pop
adc
mov
inc
scas
jge
punpckhdq
mov
push
or
int3
fnsave
or
sbb
ljmp
shl
inc
aam
pop
ret
dec
fsubr
mov
call
push
ret
mov
iret
fcom
clc
outsb
xor
push
hlt
test
push
inc
stc
push
into
jns
int
cltd
imul
and
and
lcall
sarl
fstpt
adc
lds
outsb
push
add
xchg
xor
mov
mov
xchg
lock
fs
fucomp
rorl
sti
ljmp
or
push
mov
or
leave
movb
pop
in
jbe
scas
inc
inc
idivb
adc
iret
sbb
xchg
fmull
sub
jp
cs
iret
or
in
mov
loop
push
cmpsb
lea
mov
lock
scas
pop
inc
cmp
test
leave
pushf
out
orl
cmc
lock
ja
sub
pop
fwait
xor
or
popa
sub
mov
pop
pop
int3
stos
xlat
lcall
jmp
or
mov
or
xchg
fbld
or
mov
out
popa
xchg
pop
mov
push
dec
in
mov
pop
adc
pop
sahf
adc
dec
cld
repnz
imul
mov
test
sbb
mov
mov
aam
cmp
rolb
xchg
adc
jbe
out
in
adc
lahf
push
scas
jl
stos
or
lds
in
or
xchg
push
js
mov
mov
xor
mov
call
mov
adc
cmp
push
fmuls
xor
mov
cmpsl
outsl
sarb
jle
dec
and
sub
xchg
test
or
dec
xchg
shll
lret
lcall
jnp
fwait
aas
aas
xlat
pop
jmp
jge
or
call
sbb
mov
ljmp
outsl
xchg
mov
mov
ss
leave
jmp
sbb
fstl
test
sbb
into
loop
or
insb
or
or
mov
mov
fldenv
and
fbld
xchg
mov
ljmp
sbb
push
outsb
pop
cwtl
xchg
pop
jecxz
and
lock
and
jp
push
cmp
jo
jg
cmp
xor
loopne
mov
cld
jge
mov
ror
cmp
pusha
pop
test
jecxz
add
inc
cmp
enter
add
test
int
dec
inc
fs
mov
cld
shlb
out
push
or
pop
push
dec
shl
fisubrl
inc
cmpsb
cltd
mulb
jbe
jp
lret
jmp
adc
jbe
std
mov
sbb
xor
push
sub
stos
adc
mov
stos
xchg
pop
mov
mov
mov
jo
adc
inc
out
cmpl
sub
pop
mov
mov
aad
aad
jo
push
jmp
mov
jecxz
push
sti
mov
lret
xchg
out
pop
push
imul
popf
stos
cmp
cld
jecxz
sti
lds
fcompl
sub
sbb
push
add
cmp
sbb
insb
fistps
sbb
lcall
xchg
sbb
cmp
addr16
or
mov
or
dec
add
iret
ret
insb
cmp
es
and
repz
push
jns
out
or
dec
pop
cld
push
fiadds
mov
or
leave
divb
inc
arpl
xor
rcl
pop
mov
mov
jle
out
add
insb
or
add
push
subb
sbb
pushf
xchg
jmp
push
test
and
push
adc
jle
popf
leave
cli
das
or
xchg
mov
test
insl
mov
mov
and
or
mov
mov
cmp
mov
and
adc
leave
cld
cmp
sbb
add
ficomps
sub
sbb
lock
imull
mov
mov
pusha
jg
or
push
rcrb
mov
in
xor
jne
nop
sub
xor
xor
cli
add
std
jg
adc
add
lds
jge
or
sti
push
mov
cmp
xchg
xchg
mov
jmp
jne
rcrl
push
andb
pop
push
lcall
fsubl
pop
sbb
push
outsb
mov
xchg
jne
daa
inc
sub
and
out
shl
in
jno
pop
push
sbb
pop
scas
insb
call
mov
test
jmp
loope
shrb
aad
dec
cs
std
and
mov
aad
jp
xor
push
andl
mov
cwtl
ret
outsb
push
xchg
lret
xchg
jge
cmp
push
sahf
ljmp
int
or
push
ds
scas
cmc
je
ds
cld
test
and
leave
mull
movsb
cmp
cld
int
adc
cmp
test
sbb
adcb
mov
arpl
xchg
orb
push
push
fstpt
pop
push
sub
jmp
add
xchg
and
cld
inc
jns
mov
pop
fldt
dec
inc
xchg
mov
xor
xchg
lods
mov
cmp
and
mov
sahf
jns
mov
into
push
ficomps
aam
push
shl
jge
stos
lds
mull
sti
clc
bound
sbbl
xor
iret
inc
aas
cmp
lods
sbb
sbb
jge
and
or
inc
push
popa
sbb
ljmp
lea
insl
nop
ss
cwtl
sub
jecxz
cmp
mov
int
or
push
out
xor
add
cmp
sti
cmp
pop
lods
mov
or
cmp
iret
aad
shll
xchg
cmp
int3
xchg
cmp
or
out
cltd
fcomp
cmp
movhlps
shrb
fprem1
jb
pop
dec
add
sub
xchg
inc
or
addr16
inc
adc
popf
xchg
or
dec
movsl
inc
adc
out
sqrtps
jp
or
pop
push
fwait
push
sub
adc
jmp
outsb
aad
loope
pop
add
sub
and
jge
or
test
sub
mov
dec
je
mov
repz
pop
add
test
aaa
inc
icebp
jmp
int3
and
or
dec
push
inc
xchg
sub
mov
dec
fsubr
es
jge
call
jp
aad
xchg
ja
lds
addr16
mov
mov
dec
and
lods
and
jl
xchg
pop
mov
js
inc
sahf
enter
adc
jb
cmp
std
push
push
outsl
or
mov
mov
jg
adc
xor
jg
mov
ret
lret
xchg
mov
jnp
cmpsb
push
sti
lret
out
push
cmp
xor
adcl
pushf
sbb
icebp
notl
or
xchg
jp
ficomps
fistps
clc
mov
fildl
jmp
xchg
mov
lret
jbe
ret
test
insb
xor
xor
movsl
dec
pop
lods
adc
cld
adc
mov
jae
faddl
insb
jo
jno
stos
repz
xchg
loope,pn
test
movsl
cld
aas
mov
arpl
lods
xchg
xchg
popf
mov
mov
add
mov
push
out
push
sarl
push
ds
pop
out
inc
ss
jne
xor
movsb
sbb
jecxz
jecxz
insb
je
aas
cmp
scas
outsl
add
loop
pushf
loope
lret
cmc
push
push
pop
subb
adc
sbb
enter
xchg
sbb
cmpb
cmp
or
aam
jp
mov
dec
xchg
sbb
cmp
xor
gs
push
cmp
dec
push
pop
adc
cs
add
inc
mov
stos
inc
jmp
insb
cvtpi2ps
cmpsb
lds
or
int3
lret
jp
or
loope
int
inc
adc
jae
add
xchg
or
pop
test
fildll
mov
lods
sbb
je
fdivrl
add
insl
fcmovnb
mov
lea
dec
xor
mov
inc
cmpsb
sahf
ret
notl
and
stc
in
cmp
sub
sub
lea
mov
roll
xchg
lock
mov
shrb
aaa
mov
std
arpl
jmp
jmp
pop
xor
and
push
cmp
rcrl
mov
adc
in
mov
mov
outsl
mov
jge
jp
mov
insl
fisubl
aas
cmpsl
addr16
jp
mov
ja
xchg
out
outsl
or
sub
mov
bound
jecxz
jle
xor
lods
rcrb
mov
icebp
xchg
lahf
repz
fcmove
das
xchg
cmp
xorl
sbb
mov
cs
xor
leave
nop
cmpsl
insl
clc
xor
pop
out
sbb
jp
lods
xchg
jae
in
lea
nop
cmpsb
ficoms
in
jne
mov
xlat
into
cli
outsb
mov
pop
fs
push
cltd
pop
add
fsubrl
dec
inc
add
push
jbe
push
mov
jno
inc
imul
sub
pop
pop
cli
cmp
mov
cltd
sub
push
xchg
mov
jbe
fcompl
daa
xchg
xchg
add
int
jo
clc
stos
icebp
stc
filds
lret
push
xor
cmp
lods
sub
inc
aad
fsubrs
inc
pop
xchg
out
and
pop
pop
jmp
mov
stos
iret
xchg
les
cmp
lcall
mov
bound
xor
jle
out
and
xor
dec
cmp
pop
mov
lret
or
cmovs
cmp
or
scas
jp
sti
xor
push
out
mov
ds
jecxz
icebp
fwait
mov
and
sub
sub
ret
in
mov
push
stos
lret
sub
push
clc
sahf
xchg
jns
lock
xchg
dec
fsubrs
cmp
iret
cmpsl
lret
xor
pop
mov
jecxz
jp
cltd
adc
or
jb
xchg
jle
mov
cmpsl
stc
mov
jp
in
push
or
insb
or
or
out
dec
mov
add
cmp
stos
adc
out
adc
cs
js
push
mov
jne
mov
cs
cltd
pushf
mov
dec
fwait
mov
pop
mov
ds
push
sbb
adc
or
cmpsl
pop
sbb
inc
jp
or
loope
pusha
sbb
data16
fcompl
divb
mov
jge
sub
ret
cld
xor
aas
push
lea
int
or
fdivrs
lods
inc
pop
dec
add
movsb
and
pop
xor
inc
std
mov
push
pop
fistpll
pusha
add
test
outsl
adc
pop
imul
cmpsb
outsl
dec
sarb
xchg
test
loope
add
or
xor
js
jmp
ljmp
mov
mov
pop
mov
jmp
mov
out
jmp
pop
mov
icebp
in
or
push
movsl
shlb
mov
lret
or
es
mov
pop
bound
cld
push
cmpsl
jae
aad
xor
push
leave
lods
mov
mov
mov
and
psubw
dec
and
in
xor
push
pushf
aad
in
add
cmp
lret
xor
pop
mov
lret
cwtl
stos
and
not
add
jb
pop
mov
cltd
or
les
pop
stos
pop
nop
pop
call
lcall
and
lret
fstpl
dec
mov
pop
sbb
jne
inc
shl
sbb
test
and
jl
rorl
push
out
stos
cld
mov
or
in
rorl
aas
lods
push
inc
add
movsb
sub
mov
jge
nop
icebp
pop
js
ss
test
pop
push
xor
pop
pop
xor
pop
push
and
pop
mov
jge
pop
shlb
adc
enter
jb
aaa
mov
mov
sub
fcomps
pop
pop
xchg
loopne
dec
adc
mov
mov
inc
call
add
inc
or
loopne
jnp
sub
jl
cs
cwtl
lahf
mov
push
jo
in
fisubl
fcomp
cli
lods
push
daa
inc
sbb
jl
rcl
or
aad
pop
cmpsl
and
mov
clc
mov
pushf
testb
out
adc
pop
mov
pop
addb
xor
ljmp
insb
push
push
adc
mov
decl
out
pop
hlt
pop
push
sbb
add
xchg
pusha
leave
inc
dec
sub
jl
shlb
mov
mov
mov
or
xchg
adc
jae
in
and
mov
movsb
in
sub
vpminub
mov
adc
mov
cmc
mov
or
add
push
sbb
push
shrb
jmp
and
into
dec
call
jbe
fimull
je
adc
rcrl
push
pop
mov
xor
sarb
and
lds
mov
jnp
jno
shr
js
and
adc
mov
xchg
sbb
adc
jecxz
es
cs
cmpsl
cld
aad
nop
inc
push
rolb
fbld
jmp
xor
and
in
jae
pop
fiaddl
je
stos
leave
mov
jecxz
stc
mov
add
fstpt
test
ret
jge
sub
mov
pop
jmp
bound
into
or
sbb
mov
and
push
loopne
adc
mov
movb
jl
lock
cmpsb
loop
inc
int3
dec
fwait
inc
insl
jp
insl
lock
lret
jo
popa
dec
mov
psrlq
lds
jne
pop
jno
sbb
jmp
mov
push
sbb
or
or
sbb
cmp
pop
inc
adc
fwait
cmpsl
cltd
in
pop
cmpb
dec
cmp
cli
sub
mov
xchg
pop
insb
add
cmp
dec
out
mov
imul
push
jl
test
sub
dec
mov
or
inc
imul
fs
repz
mov
cld
ja
loop
adc
stc
mov
ss
cld
sti
movb
je
dec
mov
aad
jmp
jl
stos
sub
xor
frstor
negl
add
out
xor
cli
cmpsb
xor
add
cmc
xlat
lds
sbb
test
cmp
dec
ljmp
mov
clc
push
xchg
int
sbb
cmp
aas
daa
or
jp
pop
data16
mov
out
mov
cmp
rcll
sub
cmpl
xor
fdivrp
fsubp
repnz
in
outsb
out
aas
iret
lret
int3
cld
hlt
mov
sub
inc
inc
sarl
cmp
jb
xchg
adc
movsl
push
jp
xor
fwait
mov
cmpsl
rcrb
jns
pop
inc
out
pusha
add
lcall
lods
stc
addb
sbb
mov
in
mov
sub
sahf
cltd
cwtl
scas
cmp
adc
and
sub
int3
adc
stos
adcl
dec
push
scas
stos
add
xor
jmp
shlb
mov
cmc
jle
xlat
and
xor
insb
jnp
mov
mov
mov
rorl
jge
or
out
xor
je
push
jmp
mov
cmc
int3
outsl
or
leave
cmp
inc
cmp
adc
ror
dec
out
adc
loope
or
add
and
mov
stos
lds
xchg
cmp
sbb
jge
and
fldcw
pop
or
mov
dec
push
leave
fidivs
jo
inc
gs
mov
fcoms
or
lret
mov
mov
das
push
cli
gs
push
and
lds
push
in
pushf
addr16
jno
pop
fsubr
xor
insb
xchg
adc
cmpsl
xlat
mov
fcmovu
add
pop
add
lcall
sub
or
add
dec
push
cld
decb
mov
and
lcall
arpl
xchg
jmp
sahf
int
subl
push
mov
lcall
or
inc
sbb
adc
mulb
sub
js
icebp
push
int3
cmp
cmpsb
loop
or
jp
loop
shlb
xchg
jge
jno
loope
sar
out
mov
test
xchg
mov
inc
push
add
mov
repz
xchg
pop
fistpl
cmpsl
cs
mov
shll
mov
push
lds
arpl
data16
add
or
mov
jnp
mov
push
leave
lret
out
inc
or
repz
and
and
iret
sbb
inc
int
in
adc
fdivs
popa
sub
xor
push
cmpsl
push
pop
mov
push
pop
mov
mov
test
sub
test
push
insb
fidivrl
xor
testl
fstps
jp
sti
clc
popa
arpl
insb
in
sarl
les
insl
iret
jne
adcb
out
mov
push
sub
push
cmc
push
jns
data16
in
xchg
cmp
fsubrl
loope
leave
xor
dec
sbb
lcall
inc
shrb
cmp
jne
mov
loope,pt
in
lret
pop
paddb
ds
sub
sub
inc
loop
insb
frstor
sbb
in
mov
xchg
cld
ss
cmp
fwait
outsl
push
dec
sub
or
ds
xchg
inc
or
call
jns
lcall
lods
mov
or
pop
inc
stc
fwait
xor
push
push
jecxz
sarl
stos
inc
test
dec
loopne
push
shrb
sarl
mov
fwait
sbb
movsb
fs
push
out
sarl
xchg
add
repnz
divb
out
dec
arpl
dec
ljmp
ljmp
pop
jp
xchg
mov
rcll
xlat
adc
cmpb
jle
cltd
aas
and
in
push
mov
and
aaa
add
mov
lds
sbb
lea
add
jbe
negb
jae
loop
sub
mov
test
rolb
leave
sub
std
ljmp
xchg
xchg
xchg
outsl
div
fiadds
add
pushf
mov
je
dec
icebp
adc
inc
add
cltd
add
mov
push
mov
xor
addr16
stos
mov
or
aam
cmp
cmpb
loop
pop
fnsave
sub
pusha
xchg
lock
loopne
cli
xchg
data16
xor
jle
das
cli
dec
inc
xchg
in
push
test
loopne
bound
and
rcr
and
dec
jp
jnp
movsl
jnp
arpl
xchg
mov
lret
out
decl
push
jle
add
insb
insl
into
pop
loopne
pop
pop
ja
hlt
add
stos
repnz
jns
cmc
mov
xchg
imul
and
jne
or
cwtl
test
mov
ret
repnz
data16
lods
inc
jmp
mov
mov
mov
in
mov
adc
outsb
mov
push
sub
adc
push
push
pop
add
xchg
and
icebp
add
dec
or
lds
mov
mov
pop
sub
icebp
add
test
xchg
scas
mov
rcll
fidivl
push
imul
pop
or
fldenv
lret
leave
lcall
inc
mov
ljmp
push
fadds
inc
push
ffreep
pop
insb
xchg
enter
fbld
xlat
loopne
and
mov
bound
jge
jb
out
divl
icebp
lret
sub
sub
arpl
aaa
out
in
jb
aaa
mov
jno
pushf
mov
sbb
aaa
pop
mov
aas
pop
adc
sti
scas
test
adc
icebp
test
or
sub
ds
arpl
or
and
repz
scas
ret
cli
xchg
dec
in
or
insl
xchg
sahf
sub
call
mov
cmp
xor
pushf
cmpb
pop
jle
iret
cwtl
negl
fs
xchg
cld
mov
mov
rorl
mov
sub
sub
rcrl
sti
jns
in
faddl
sub
loope
push
pop
cld
test
or
jp
pop
dec
addr16
mov
sub
dec
fnstcw
addl
sahf
int3
popa
dec
leave
pop
adc
es
daa
orl
fwait
mov
ret
aam
scas
addb
jb
push
movsl
xor
add
jb
arpl
pushf
andb
adc
pop
lds
out
or
jno
mov
loop
jae
enter
test
fistl
out
jl
sbb
out
notl
scas
daa
test
mov
leave
adcl
add
fsubs
cmp
out
fistpl
cltd
sbb
sub
cmp
inc
mov
xchg
lods
and
push
lahf
hlt
arpl
popa
adc
cmpl
cmp
int3
push
sbb
mov
pop
and
lret
xchg
sbb
movsl
in
fsubrs
popa
int
mov
cmp
aaa
int3
out
inc
cld
push
push
loop
cld
cs
push
xor
decb
fnstsw
shll
das
xchg
inc
mov
shlb
sahf
lds
inc
mov
movsl
mov
adc
mov
jp,pt
mov
jle
sub
xor
inc
vpextrw
sub
jo
push
mov
ljmp
ss
mov
push
les
hlt
test
inc
sub
mov
pusha
ret
hlt
sbb
stos
mov
adc
arpl
jnp
mov
sbb
movsl
or
lahf
sbb
insl
stos
clc
test
push
ficomps
push
sbb
aam
or
xchg
je
add
imul
xor
and
jecxz
jl
or
push
mov
jae
mov
inc
mov
cmp
adc
test
fidivrs
dec
jg
es
sub
pop
shlb
and
adc
cmpl
mov
test
pop
mov
pushf
out
add
inc
faddl
xor
xchg
pop
mov
rcll
fwait
les
cmpsb
mov
or
push
mov
scas
lret
in
and
and
jg
and
jl
xor
mov
add
addr16
and
ljmp
bound
outsl
std
test
insb
aad
push
inc
mov
in
inc
shrl
iret
jmp
sti
sub
or
daa
jbe
add
das
stos
or
add
lret
clc
cmp
dec
cmp
negl
push
loope
stos
adc
adc
sub
mov
jge
xorb
outsb
jge
lea
sbb
ljmp
icebp
stc
and
jp
out
dec
subl
ja
mov
mov
shll
mov
push
aaa
inc
add
insb
mov
jo
cmc
jp
stc
adc
and
sub
jge
loope
mov
cmpsl
repz
add
mov
es
loopne
sbb
in
sahf
movsb
shrb
int3
adc
sbb
stc
mov
cli
mov
das
mov
cld
cs
lahf
lahf
lea
push
test
or
arpl
sbbl
xchg
out
rolb
js
sub
mov
ftst
fistpll
fldt
loop
cmp
cld
lods
mov
aad
mov
sbb
dec
arpl
bound
xor
rcrl
push
push
jge
or
leave
ja
rcrl
push
jbe
fs
in
sub
sub
mov
mov
icebp
inc
jnp
mov
out
fisubrs
int3
jno
jae
fcompl
fidivl
mov
stc
fmuls
test
and
xor
adc
mov
adc
sbb
lds
or
pushl
fdivl
daa
shll
sub
or
pop
mov
mov
dec
enter
mov
lods
shrl
ret
callw
outsb
sbb
mov
int
lret
sbbl
mov
je
loope
insb
shlb
and
ficoms
enter
jns
cmp
int3
iret
inc
push
push
lcall
lea
or
mov
mov
sub
push
jb
movsb
adc
pop
sbb
aam
inc
repnz
rcl
jb
cltd
xor
xchg
cmp
cmp
pmulhuw
add
shrb
in
loopne
out
cmp
xchg
enter
hlt
lods
sub
inc
xchg
cli
sbb
pushf
mov
mov
sbb
imul
lret
sub
jg
mov
or
stos
repz
sub
divl
jb
lahf
mov
pop
or
pop
and
das
pop
in
fs
push
mov
inc
je
mov
add
mov
popa
leave
push
insl
and
std
sub
ret
shll
orb
push
das
jle
mov
imul
or
lcall
les
jbe
sbb
pop
lea
push
add
imul
xor
loop
xor
sub
xlat
jae
pushl
push
push
roll
add
fmuls
fnstenv
sti
mov
cmp
inc
sbb
mov
adc
inc
call
lret
call
dec
mov
push
jns
sar
cli
fistpll
jae
jns
mov
mov
mov
cmp
clc
imul
pop
adc
out
insl
pop
cmpl
enter
pop
fbld
hlt
shlb
movb
scas
xor
cmc
jne
lret
imul
movsb
xchg
stos
cmp
rcr
lea
test
sub
pushf
xlat
rol
es
push
es
add
hlt
push
mov
iret
xor
or
inc
sbb
adc
mov
mov
faddl
jp,pt
pop
movsl
adc
xchg
mov
ret
lcall
pop
cmc
rcl
je
je
adc
xor
movsl
sbb
lret
xchg
xlat
das
shl
xchg
dec
jmp
mov
mov
mov
pop
inc
pop
insb
mov
ja
sub
jb
cmp
int
lods
cld
hlt
mov
out
aam
push
data16
xor
test
fwait
andl
sub
js
cltd
nop
mov
push
xor
mov
jnp
xchg
scas
push
inc
outsl
stc
inc
aad
ss
inc
xor
popf
sbb
or
lcall
vcvttpd2dqx
fcmovnu
aam
out
lcall
cmpsl
xchg
mov
or
sbb
push
sub
inc
xchg
or
pop
push
dec
pop
jmp
pusha
scas
dec
xorl
decl
lds
push
push
cmpsb
xor
jle
in
test
jp
and
or
subb
push
pop
decb
push
sub
mov
adc
mov
dec
enter
and
sbb
rcrb
cmp
clc
rcrb
xor
cld
add
inc
inc
rcrl
mov
xor
jp
fcoml
scas
bound
sub
mov
rcrb
add
lock
testb
aam
xchg
cmp
test
loop
sub
adc
and
mov
xor
jnp
lret
leave
lahf
jae
cmp
xchg
cmp
xor
xor
add
scas
and
cmpsb
sub
pop
sub
js
es
in
cmp
outsb
decl
rorb
roll
out
je
aas
dec
cmp
ds
aaa
rcrl
inc
pop
push
fs
dec
sub
jl
mov
daa
lahf
mov
and
lock
push
dec
in
mov
decb
pop
push
jmp
daa
inc
sbb
daa
inc
cwtl
inc
cmp
mov
mov
mov
and
sbb
lahf
ds
das
idivb
push
xchg
add
mov
xlat
cmpsl
loop
lods
and
sub
pop
call
leave
xor
ja
dec
jmp
fstl
add
jnp
scas
dec
push
and
inc
push
push
xor
inc
inc
sub
roll
outsl
filds
push
negl
call
cltd
ror
enter
xchg
xlat
iret
or
sti
idivl
push
test
xchg
orb
push
leave
cmovg
pop
popa
lods
mov
data16
pusha
jg
shlb
jl
or
inc
stc
sub
ror
mov
mov
fistpl
ja
stos
sbb
icebp
repnz
gs
fstpt
mov
dec
into
pop
mov
and
add
push
or
mov
or
xlat
cmpsl
hlt
js
ficompl
out
pop
and
sti
aaa
mov
loopne
mov
loopne
into
orl
aam
jbe
jecxz
aad
movsb
gs
repnz
sbb
dec
cmp
xchg
dec
jp
push
add
pcmpeqb
stc
mov
mov
lock
xchg
and
sti
andl
xor
cmp
or
cmp
je
add
shl
xchg
mov
lcall
or
jns
or
sahf
and
mov
dec
jmp
cmp
fs
mov
mov
pop
mov
mov
pop
scas
and
ljmp
fisttps
fisttpl
insb
lods
sbb
sub
lods
arpl
xchg
popf
call
aas
mov
jns
xchg
inc
testl
push
mov
loope
push
push
dec
xor
sbb
inc
pop
mov
jle
lcall
enter
pop
adc
xor
dec
mov
cmp
cmp
xor
add
mov
dec
sub
add
data16
rcll
pop
push
jg
dec
mov
and
inc
incb
les
mov
jecxz
pop
and
movb
icebp
movsl
jb
jb
cmc
cmpsl
sub
sbb
adc
flds
sahf
cld
dec
jnp
out
mov
testl
jne
cs
lret
mov
adc
jl
fcmovnb
push
jb
pop
loopne
pop
xor
stc
adc
ret
xor
jae
push
adc
lcall
pop
xor
in
sub
xchg
stos
add
jae
sub
sahf
mov
iret
cmp
add
popa
jno
insb
int
dec
cmc
jbe
shrb
pop
add
mov
pop
test
sub
push
jbe
hlt
cs
xor
sub
lret
adcl
ret
ds
rcrb
movsb
jge
push
push
mov
in
xor
adc
mov
movsb
test
arpl
mulb
loopne
aam
add
jbe
xchg
out
in
cmp
orl
pop
cmp
in
sbb
mov
orl
into
in
sbb
xchg
pop
mov
adcb
sub
or
sub
xchg
roll
ja
jns
mov
dec
mov
mov
mov
sahf
shll
out
sti
xchg
mov
pop
cmp
cmp
and
inc
mov
push
popa
movsb
stos
dec
xchg
push
jle
leave
daa
loop
dec
fdivr
xchg
mov
or
ret
push
mov
clc
aam
pop
ficoml
stos
push
inc
push
in
movsb
or
ficoms
rcr
adc
xchg
push
xchg
fwait
add
mov
push
push
sub
in
pop
ja
pop
stos
jecxz
or
mov
pop
cs
imul
push
lods
cwtl
inc
jg,pn
jge
xchg
lret
popa
sti
fidivrs
out
repz
je
icebp
mov
mov
sar
sub
dec
and
cli
pop
mov
mov
cmp
int
aam
dec
mov
lods
fs
inc
pop
fsub
loop
add
ret
dec
in
imul
cmpb
xor
add
or
insb
loop
shrb
es
or
add
std
test
xchg
add
jmp
aad
inc
sbb
dec
lcall
pop
lods
push
fwait
sub
inc
sub
aas
cltd
les
cmp
outsb
hlt
negb
dec
xor
ss
sub
add
push
mov
lret
or
test
stc
test
xchg
mov
push
xchg
in
mov
xchg
rorl
xchg
fs
xlat
aad
sahf
mov
repz
sbb
leave
xor
or
sub
sahf
inc
ds
fbld
iret
cmp
loop
cmp
push
fists
cmpsl
jmp
stos
dec
ljmp
pop
adc
push
and
mov
fimuls
bound
pop
inc
sub
testl
stc
in
inc
jge
in
adc
jns
rcrl
lahf
ja
int
mull
and
add
fimuls
and
adc
sbb
popa
xor
outsl
call
cltd
xchg
xchg
out
cmp
dec
xor
dec
lods
sbb
orb
mov
notl
push
into
repz
clc
outsb
inc
cmp
xor
mov
xor
xor
daa
jg
stc
arpl
lds
test
cltd
mov
int
jns
push
push
push
sub
jl
dec
jle
push
push
outsl
push
jmp
jg
or
mov
add
out
sub
lods
mov
pop
mov
pop
out
push
shll
data16
icebp
jb
aas
loope
rol
dec
rolb
jmp
and
mov
outsb
sbb
andl
popf
mov
mov
dec
mov
add
imul
scas
cmpsb
and
xchg
fdivrs
inc
push
xchg
in
mov
adc
in
stos
out
jecxz
jecxz
fs
sub
cmpsb
aad
adc
push
cli
and
cmp
pushl
mov
fwait
push
mov
mov
pop
inc
loop
into
pop
dec
xchg
leave
mov
sbb
mov
mov
cmpsl
pop
push
addr16
lretw
xor
jp
jecxz
movsl
aaa
scas
sub
in
adc
test
cmp
push
jg
cmp
and
fdivr
ds
xchg
sbb
cmc
loope
or
add
leave
xchg
scas
es
jle
cwtl
sarb
insb
adc
mov
cltd
pushf
cmp
das
and
or
movsl
insb
mov
decb
in
mov
ss
fimull
sbb
insb
cltd
sub
inc
pushf
lcall
loop
loopne
mov
xor
ljmp
push
xor
push
sub
insb
adc
xchg
jae
jae
incl
test
or
or
pop
sub
cli
adc
int3
aad
andl
orb
gs
sbb
nop
ljmp
xchg
push
jb
jmp
shrb
in
mov
push
jo
xor
jle
loope
gs
push
jb
cmp
xchg
lahf
rorb
int
outsb
adc
ljmp
ja
dec
mov
xchg
mov
jge
sbb
add
jne
je
pop
in
faddl
cwtl
sub
invd
pop
jg
pop
in
lea
gs
sub
fwait
pop
aad
push
jp
xchg
adc
mov
fcoml
rcrl
les
dec
adc
pusha
ret
inc
sub
jnp
sbb
add
icebp
cli
scas
or
lahf
mov
scas
mov
enter
and
xchg
mov
rolb
rclb
dec
pop
mov
mov
inc
stos
insl
psubsw
xlat
sub
xchg
cmp
mov
push
out
push
sti
fsubl
testb
aaa
lcall
sbb
fs
data16
push
int3
xor
mov
sbb
push
pop
sub
out
cs
cmpsl
pop
ret
add
inc
ror
push
int
ficomps
mov
cmp
in
repnz
pusha
ret
xchg
jns
pop
push
xlat
mov
das
lahf
leave
lods
call
jmp
xchg
test
jg
fiadds
inc
int3
and
and
pushf
mov
das
test
js
mov
push
xchg
fwait
popa
cmp
fildll
xchg
dec
jns
adc
dec
in
sub
pusha
and
pop
mov
jmp
or
fwait
cwtl
mov
call
or
jge
repnz
lret
inc
mov
fwait
mov
idivl
inc
xchg
fistpll
bound
add
pusha
mov
sub
rcrl
dec
lcall
xchg
loope
inc
push
cmp
shrb
mov
lea
sub
inc
lahf
pop
out
push
push
mov
pop
push
and
mov
lcall
jae
ja
sarl
mov
outsl
into
add
mov
aad
dec
hlt
or
sbb
cmp
inc
cmpsb
mov
loop
loope
sbb
aaa
and
dec
es
xchg
repnz
push
stc
ss
or
add
ficoms
out
xor
xchg
dec
pop
xchg
jbe
pop
inc
shll
cmp
dec
gs
xchg
stc
or
jno
pop
pop
mov
jmp
lock
jmp
iret
in
inc
push
call
xor
pop
mov
push
jae
mov
outsl
mov
mov
adc
scas
lahf
mov
mov
out
out
push
push
pop
sbb
inc
push
inc
shr
call
rcrb
sub
sbb
add
xor
and
add
mov
fwait
jecxz
es
mov
negb
or
mov
iret
mov
rcrl
cmc
cld
sbb
ss
or
in
push
or
and
pop
loope
jmp
loopne
add
cmp
cmp
jl
ror
lret
addr16
jle
movsb
lret
mov
fs
rolb
inc
pop
iret
sub
dec
loope
xlat
sub
clc
xchg
jg
pop
push
pusha
sub
repz
js
les
icebp
das
stc
and
push
adc
ds
roll
das
test
mov
mov
xchg
je
xor
loopne
jg
mov
mov
jp
faddl
xor
add
push
add
je
dec
aad
push
jo
cltd
mul
xor
shld
das
sbb
push
out
inc
cmpsl
sbb
loopne
add
test
dec
push
out
stos
lods
xchg
add
fisttpl
xchg
pop
ss
xor
add
scas
adc
jg
add
pushf
mov
divb
mov
lcall
mov
jo
pop
cmp
and
shrl
inc
es
jp
mov
inc
add
pop
fisubrs
inc
pushf
xchg
mov
js
push
lea
mov
fstl
dec
xor
int
loope
xorl
pop
cmp
or
mov
jecxz
add
rorb
rcr
pop
xor
xor
inc
imul
test
inc
sbb
mov
loopne
jge
jg
mov
mov
test
adc
iret
add
jne
xchg
jg
enter
and
es
lahf
push
pop
fisubl
test
mov
jbe
out
cmp
out
lea
inc
repnz
pmuludq
aad
fstl
dec
mov
sbb
fdivrs
cmpsb
shl
jb
adc
lock
jmp
sarl
adc
stos
dec
mov
dec
out
fs
jbe
cmp
jno
or
jno
add
sbb
hlt
movb
sub
and
push
sarl
sub
cwtl
scas
pop
jmp
bound
or
enter
insl
pop
sahf
xor
mov
pop
sbb
cltd
inc
enter
jl
rcll
or
ret
addr16
inc
outsb
aas
std
jae
xchg
and
aaa
std
fs
cmp
mov
push
jl
in
dec
lock
mov
push
ja
or
or
push
or
mov
cmpsb
mov
xlat
stos
fdivl
and
fldt
push
add
ret
jne
in
cmp
pushl
fcmovnb
stc
push
icebp
inc
or
inc
push
ret
arpl
fadd
pop
fildl
lcall
jnp
je
add
orb
dec
adc
movsb
lret
out
inc
sub
adc
int3
ret
out
insl
adc
push
xchg
mov
bound
or
fsubp
jg
jmp
pop
inc
loope
push
icebp
fdivrs
sbb
call
jle
and
mov
mull
scas
xchg
int3
or
jbe
leave
out
sbb
jp
cli
js
add
mov
or
xchg
or
cmp
loope
out
shll
xchg
or
dec
dec
stos
pop
mov
insl
push
jb
imul
andl
gs
mov
out
in
and
daa
stos
xchg
xadd
jge
filds
in
pop
push
add
pop
mov
push
dec
add
mov
lcall
test
lcall
mov
sub
aas
sahf
repnz
mov
iret
cltd
xchg
lcall
aam
adc
ret
lds
testb
fldcw
or
lea
xchg
add
fstpl
xorl
jne
fbstp
xlat
fisubs
mov
mov
repz
cmc
or
int3
jnp,pt
out
push
sub
or
cmp
imul
mov
push
mov
outsl
fbld
sub
sarl
xlat
jecxz
jg
in
adc
jae
dec
jo
and
lea
push
std
xor
in
data16
jp
addb
jecxz
cmp
lock
inc
fcmovbe
repz
ret
gs
lock
inc
pushf
movsb
popf
mov
je
or
notl
shll
dec
test
sub
outsb
add
and
sahf
pop
xor
sbb
push
or
into
jo
roll
addr16
fwait
adc
dec
cmpsl
xchg
aam
or
dec
sub
int3
cmpsb
cld
add
adc
cwtl
test
mov
ficoms
clc
add
cmp
mulb
aam
xchg
mov
ret
xor
rorl
mov
insl
out
xchg
xchg
add
stos
sahf
sub
bound
lds
xchg
adcl
fmuls
mov
arpl
icebp
cwtl
or
fistl
mov
jecxz
pop
xor
and
add
mov
imul
sub
lahf
add
in
dec
mov
pop
jecxz
inc
sub
aad
cmp
adc
into
xchg
pop
iret
fistl
movsb
sbb
mov
mov
cmp
sub
pop
jle
fwait
mov
into
lcall
fists
cmc
add
mov
aam
sti
mov
cs
into
into
call
dec
and
das
lea
and
mov
aam
stc
mov
shll
test
inc
xchg
cmp
hlt
or
push
lahf
lret
add
sbb
loopne
mov
sbb
lods
std
xchg
push
mov
loopne
test
jno
push
stos
je
adc
cmp
cmp
bswap
pusha
lcall
xchg
add
orl
xchg
add
mov
cmp
mov
andl
sarl
mov
scas
adc
push
jb
mov
mov
mov
inc
sub
icebp
xor
pop
ds
fcomps
shll
je
mov
or
inc
inc
push
xlat
add
and
mov
cmp
push
mov
fisttpl
mov
ret
pop
les
dec
push
cmp
mov
fwait
xor
mov
insb
scas
sbb
and
popf
jns
inc
lods
icebp
out
lcall
mov
mov
mov
sarb
int3
aad
jge
pop
sti
aad
int3
xchg
rcrl
out
push
repnz
aaa
fidivrs
xchg
es
xor
pop
jecxz
pop
into
and
pusha
icebp
mov
mov
adc
test
scas
mov
int
scas
fcmovnbe
sub
push
movsl
fistps
imul
add
xchg
orb
lods
daa
pushf
xchg
cmc
icebp
out
or
mov
rcr
fnstcw
adc
mov
dec
or
jae
jg
and
inc
pop
jp
scas
inc
push
pop
add
xlat
jmp
bound
sub
xlat
sbb
or
lods
add
loop
jbe
pop
push
js
mov
lret
outsl
inc
mov
sbbl
pop
mov
jg
or
and
and
imul
leave
xchg
adc
xor
mov
lret
sarb
ret
int
aas
repz
shr
ret
lea
inc
lcall
lea
sbb
test
gs
mov
jg
mov
jae
imul
xor
lock
cmp
js
cmpsl
mov
mov
push
inc
fwait
cltd
mov
out
xlat
fs
add
ja
mov
mov
pop
dec
xchg
mov
pushf
fsubrs
ljmp
mov
xor
std
outsl
scas
jl
push
ret
lahf
insb
dec
stos
mov
mov
inc
int3
ljmp
out
pop
push
or
mov
or
cmp
lahf
aaa
inc
xor
cmpsb
movsl
sbb
mov
imul
jmp
and
fisubrl
cs
subl
push
inc
mov
mov
jo
std
cltd
movsb
mov
push
inc
mov
stos
or
aam
les
jecxz
sub
sub
inc
xchg
mov
and
dec
push
push
pop
addr16
adc
xlat
lods
test
out
adc
ret
mov
sub
icebp
sub
mov
lcall
mov
fwait
loop
in
push
in
bound
push
cmpsb
fdivs
jno
test
inc
aam
xchg
push
out
xor
nop
in
mov
and
push
mov
loopne
xlat
hlt
dec
mov
outsb
push
pop
cmp
inc
xor
or
or
inc
push
test
fisttps
or
inc
cltd
dec
push
adc
nop
xor
sub
sub
inc
inc
lret
sub
pmaxub
daa
test
lea
mov
outsb
mov
mov
sbb
mov
adc
pop
sar
mov
fs
fs
push
loopne
push
pusha
mov
sub
imul
adc
cmpsl
cli
lock
push
mov
pop
insb
jmp
and
sbb
push
loopne
rclb
scas
dec
ja
and
xchg
test
sub
clc
loope
sahf
ja
outsl
rolb
jae
or
daa
mov
mov
addr16
pop
fsubrs
sub
mov
or
pop
xchg
rolb
xchg
add
sub
xor
scas
lahf
mov
pop
cmpsl
loopne
ss
das
fidivs
shll
daa
inc
xchg
push
jmp
negl
pop
cmc
nop
dec
pop
clc
fisubrs
mov
jo
stos
pop
inc
je
fcmovne
aas
test
frstor
dec
mov
aas
out
push
iret
dec
loopne
mov
fsubs
mov
rcrl
clc
jl
insb
fistl
pop
hlt
jno
shll
xor
je
pop
xchg
pop
or
mov
sti
adc
cli
push
inc
clc
mov
inc
pop
dec
dec
mov
and
pop
lea
outsl
push
jno
mov
adc
xchg
enter
jbe
xlat
scas
xchg
cmp
outsb
or
xlat
adc
xchg
scas
cmp
lods
cwtl
xchg
imul
into
mov
sbb
push
sub
mov
jge
test
cli
pusha
fidivrl
jmp
scas
dec
inc
cmp
xchg
dec
pusha
inc
cmp
les
sbb
in
pop
iret
mov
js
insl
mov
jecxz
sbb
mov
lds
dec
jmp
enter
addb
scas
jae
and
mov
stos
mov
mov
nop
stos
xchg
xchg
pop
clc
push
int3
xchg
xchg
ds
sbb
sti
sbbb
enter
jl
sahf
outsw
fsubs
fincstp
cmp
sub
dec
mov
orl
xchg
push
rcll
mov
rcll
cmp
sbb
jmp
sub
inc
inc
sub
sbb
cmpsb
int3
sbb
pusha
xchg
jge
pop
inc
inc
xor
ljmp
adc
dec
enter
pop
sub
sbb
push
fadds
daa
cmpsb
in
sbb
add
xor
repz
xor
test
scas
aas
stos
arpl
push
ret
daa
xchg
jbe
imul
sbb
add
push
fcoml
ds
daa
ja
ret
xor
xchg
int3
cmp
jo
lds
inc
mov
inc
mov
mov
cmp
mov
jl
mov
mov
imul
cmpsl
mov
lods
daa
or
cmp
inc
movsl
push
outsl
adc
enter
inc
sbb
mov
cmp
sbbb
pop
imull
fbld
mov
imul
ficoms
cltd
adc
push
ljmp
clc
sub
ljmp
cld
cmp
xor
dec
pop
pop
das
pushf
ret
xchg
xchg
cmc
clc
push
std
mov
inc
jp
pushf
repnz
movsl
adc
xchg
inc
imulb
fidivl
xor
orb
adcb
outsl
outsb
popa
push
xchg
std
sbb
pop
repz
shr
loope
subb
outsb
test
fldenv
cs
pop
nop
repz
mov
sbb
out
shl
lea
mov
pop
out
aam
pop
mov
in
sub
stos
sbb
and
rorl
cs
fistpl
mov
or
ja
xchg
lds
repnz
cld
fldcw
enter
push
out
mov
xor
test
mov
out
jmp
fisttpl
insb
ss
or
rcll
xor
nop
lock
mov
iret
xchg
or
mov
les
lods
mov
sub
cmpsl
jmp
push
adc
popw
hlt
inc
jbe
arpl
adc
push
test
ficoms
iret
les
lret
lods
xchg
dec
jecxz
xchg
push
jecxz
outsl
mov
arpl
jno
cld
fs
jp
in
mov
pop
jmp
mov
jp
add
sub
xchg
hlt
bound
lods
in
inc
lods
outsl
out
test
cltd
jge
cld
pop
adc
mov
js
shl
mov
jae
les
xor
imul
jne
inc
sbb
mov
sub
adc
jl
jnp
stos
pop
loope
sbb
pop
or
cmc
mov
repnz
stc
push
adc
xchg
and
sarl
mov
xor
lcall
insl
or
mov
imulb
mov
test
push
das
ja
lock
ja
jnp
adc
in
add
mov
fwait
rcrb
insw
fs
xor
fcoms
push
mov
fcmove
loop
mov
jmp
arpl
cwtl
fwait
js
test
sub
clc
les
sbb
add
mov
mov
push
push
sub
aad
cltd
pop
sbb
pop
or
lods
test
and
into
pop
pop
adc
str
lret
add
adc
dec
mov
daa
fcomps
push
push
mov
ja
aaa
inc
cmp
xchg
and
stc
pushf
adc
movsb
push
mov
cmp
fldenv
inc
sti
fstpt
jmp
xchg
xchg
enter
jb
xor
iret
int3
mov
or
mov
neg
inc
lock
in
cmp
jae
push
mov
add
mov
mov
add
pop
out
enter
xchg
inc
lea
mov
out
xrelease
ficompl
jbe
rorl
mov
adc
xchg
dec
cmp
jns
daa
ss
fcmovu
cmpsb
inc
push
push
pop
or
cmp
inc
js
jb
adc
insl
sbb
in
lret
mov
mov
pop
push
pop
xor
pop
push
xor
jg
xchg
cmp
test
repnz
scas
stos
pop
in
jp
daa
xchg
cmpsl
mov
mov
incb
mov
sti
or
inc
jae
jecxz
lods
int
mov
mov
sbb
mov
je
lahf
jbe
sub
xchg
xorb
and
mov
test
mov
or
push
shl
das
cld
xchg
in
daa
sub
mov
popf
sub
adc
cmpsb
and
repz
push
ljmp
xchg
xor
jo
out
adc
stc
cmp
popa
popa
push
xor
repnz
mov
jg
fsubrl
xchg
mov
mov
pop
in
or
leave
fldt
jae
addl
mov
ret
test
sarb
movsl
or
outsb
mov
xlat
dec
rep
mov
add
sub
fstps
nop
sub
fsub
pop
andl
xchg
sbb
cs
out
jne
mov
sbb
push
addr16
fs
outsl
insl
mov
mov
leave
out
xor
add
sbb
xor
add
jo
and
mov
sub
or
lods
cmp
push
pop
sub
fisttpll
dec
xchg
cwtl
stos
xchg
jno
inc
popf
in
fistps
cmp
mov
sub
mov
sub
movb
mov
dec
push
imul
xor
pop
jnp
mov
call
cmp
xchg
fbstp
cli
sub
xor
dec
call
nop
mov
cmp
fisttpll
gs
test
lcall
ja
subl
cs
lods
int3
add
adc
sub
lret
push
add
push
aam
push
xorb
push
leave
mov
adc
or
xor
insb
jno
lea
and
pop
sbb
imul
jge
insb
out
xor
and
and
sbb
mov
xor
cmp
sarb
orb
pop
add
int3
mov
sbb
inc
lds
add
mov
mov
jne
addl
push
ret
mov
pop
push
in
jae
jbe
out
aad
mull
push
sub
inc
push
mov
mov
xor
in
or
lods
mov
stc
push
aaa
or
test
out
xchg
test
mov
rol
cld
pop
lahf
jecxz
mov
ret
sbb
nop
xchg
imulb
iret
outsl
mov
outsl
sti
pop
push
movsb
and
mov
mov
nop
pop
pop
xchg
outsb
outsl
xchg
popa
daa
lahf
fidivrs
mov
adc
out
jmp
mov
xchg
add
jl
cmc
mov
fsub
xchg
mov
or
shl
movsl
fmull
fmul
leave
pop
push
adc
mov
or
int
cltd
mov
insb
das
les
cmp
addb
add
cmpsb
or
lcall
test
lret
neg
xor
loopne
imul
pop
sahf
mov
out
aam
jo
jg
shl
cmpsl
jbe
aaa
fsubrs
ja
mov
adc
push
adc
mov
lret
jne
lea
jnp
mov
mov
addr16
adc
jp
pop
dec
lock
xor
int3
sbb
jb
shlb
es
mov
fisubl
adc
sbb
sub
daa
mov
daa
fnstenv
fisttpl
int
in
dec
cmp
jno
ret
xchg
xchg
jae
xchg
inc
or
push
push
push
aam
pop
std
jnp
int
xchg
and
inc
inc
dec
xor
leave
das
add
fistps
addr16
jbe
addr16
int
int3
sar
cmp
aad
nop
mov
xorl
xchg
ret
sbb
push
mov
cmp
mov
cmp
stos
adc
pusha
xorps
cmpb
and
xchg
add
jl
cmp
nop
mov
rclb
jmp
or
aas
cmp
cmp
xchg
jl
insl
mov
mov
xor
pushf
in
sti
push
xchg
adc
pushf
sahf
movb
inc
push
cltd
lds
jno
movsl
inc
adc
jmp
or
mov
sub
adc
push
insl
rcl
jae
shll
sahf
lods
sbb
out
aad
movsb
dec
arpl
xlat
mov
xchg
add
pop
bound
jmp
cmp
lret
adc
addr16
pop
add
or
cs
cltd
xchg
fidivrs
add
jbe
fstpl
cld
mov
popa
sahf
stc
push
xor
push
pushf
xor
or
movsl
push
fiadds
fstpt
test
loope
cmp
lcall
inc
push
pop
jno
mov
mov
dec
int3
inc
add
mov
enter
mov
pusha
jne
mov
inc
scas
and
mov
mov
mov
std
dec
ss
add
shrl
test
dec
outsl
jp
scas
jle
ret
mov
jmp
lock
cmpsb
hlt
jl
push
mov
aas
rcll
fidivs
dec
xor
insl
in
jle
ja
inc
decl
and
sbb
sub
clc
cmp
mov
aaa
es
dec
jge
loopne
xor
lods
fnstenv
stos
ja
sub
sub
stc
popf
mov
add
push
rol
insb
scas
aad
ret
pop
fidivs
ja
shrb
adc
xchg
mov
xchg
dec
jno
outsl
inc
ss
out
xor
jne
sbb
insb
loop
sahf
cwtl
stc
les
and
insb
or
leave
lods
and
cmpsl
mov
in
jnp
inc
ret
in
cmpsb
jo
imul
fsubp
xchg
or
mov
jns
in
lea
mul
jno
stos
je
lahf
lahf
or
cmc
lcall
mov
and
dec
pop
insl
jbe
jge
lods
mov
push
shufps
orl
clc
sub
movsb
mov
cs
into
sub
cmp
inc
les
dec
pop
mov
sbb
sbb
mov
sub
push
lds
gs
pop
rcrb
movsl
mov
fwait
gs
mov
and
divl
loopne
dec
xchg
ja
mov
imul
sbb
into
xchg
jge
aas
sahf
jb
xchg
dec
sbb
pop
xchg
loopne
pop
push
icebp
jmp
add
rol
sbb
fwait
movsl
cmp
ja
or
add
outsb
adc
rolb
add
call
hlt
and
adc
push
leave
lret
jo
xchg
fildll
sub
jnp
lods
cmpsb
jno
adcb
rolb
xor
out
mov
insl
in
nop
test
andb
daa
mov
adc
popf
cli
lods
divl
nop
mov
dec
mov
jnp
int
in
pop
imul
xchg
inc
xchg
or
imul
stos
dec
flds
push
cmp
sub
cmpsb
xchg
jne
push
mov
cmp
and
fadd
pushf
mov
pop
pop
add
xchg
push
das
dec
adc
testb
sbb
lds
push
dec
out
cli
leave
push
sbb
and
cltd
and
stos
xor
iret
xor
test
xor
sarl
jg
iret
loop
xchg
dec
mov
dec
cs
lret
jle
loopne
and
scas
inc
pop
inc
out
xor
adc
xor
or
mov
aas
insl
cmpsl
outsl
sub
inc
xchg
mov
sub
add
cmpsl
mov
and
mov
shlb
mov
stos
xchg
adc
xor
mov
aas
clc
jo
jae
faddl
push
adc
in
outsb
pop
cltd
push
mov
xlat
sbb
mov
jnp
clc
push
mov
mov
adc
addr16
rcrb
inc
hlt
pop
sahf
push
jp
jle
pusha
mov
sbb
daa
movsl
aas
scas
jno
mov
cmp
int3
and
dec
cmp
ds
aam
into
aaa
pop
mov
xor
xor
notl
push
inc
pop
in
mov
out
push
mov
es
cmpsb
mov
pop
fdivrp
cmp
inc
pop
sbb
popa
dec
je
sarb
add
cmp
push
pop
fisubs
mov
mov
jno
pusha
subl
mov
mov
xchg
mov
pop
stos
cmpsl
js
leave
insb
mov
mov
inc
fcoml
lock
and
add
and
call
xchg
adc
mov
imul
inc
mov
mov
mov
xor
daa
mov
pop
dec
or
xchg
aaa
xor
in
or
out
jo
sti
rorl
xchg
scas
fs
es
inc
lea
cmp
popf
imul
push
orb
sti
jae
dec
xchg
jge
xor
fwait
pop
add
jecxz
ss
pushf
in
loopne
std
hlt
icebp
addr16
xchg
jne
fldlg2
and
rclb
jb
imul
das
stos
into
je
cmc
xorb
xchg
jns
orb
cs
xchg
cmp
mov
jmp
test
push
add
movsl
and
adc
call
es
inc
cltd
mov
ja
icebp
mov
das
pop
adc
mov
mov
dec
lea
xchg
les
xor
jge
xor
pusha
into
xlat
inc
out
mov
mov
jecxz
push
add
shrb
mov
jae
mov
xchg
lock
ds
or
push
sub
cmp
jmp
ss
jae
fiaddl
pop
fidivrs
or
aaa
cli
xchg
push
push
lock
fdivs
sahf
adc
outsb
adc
loop
scas
cmp
jne
mov
add
rcll
pusha
or
and
bound
inc
shlb
lock
xor
jns
adc
andl
aas
scas
call
push
push
cmc
xor
sbb
lret
out
lcall
and
mov
add
fbld
mov
movsb
and
adc
in
xchg
and
cmp
scas
cmp
ss
add
sti
pop
pop
aas
adcb
lods
jmp
aad
push
hlt
push
cmpsb
sbb
inc
sti
pusha
add
test
and
pop
pop
adc
add
jne
or
lea
sbb
mov
lahf
arpl
adc
sub
sbb
data16
xchg
stc
std
test
cmp
cld
xor
and
adc
in
outsb
imul
inc
in
decb
sub
jno
sub
sub
mov
cmp
cmpb
mov
jp
and
ss
jmp
out
mov
mov
int3
sbb
adc
stos
int3
cwtl
test
sti
sbb
stos
aad
je
sbb
daa
sub
std
pop
lahf
or
jne
mul
jns
jbe
repz
jb
xchg
lds
hlt
mov
andl
cmp
idivl
out
jmp
dec
xor
pop
push
popa
jge
outsl
sarl
xchg
cs
xor
cmp
push
pop
dec
mov
inc
push
test
test
sbb
mov
cmp
iret
mov
dec
inc
pop
cmpsb
test
ret
imul
jp
xor
add
or
mov
dec
adc
shlb
rcll
inc
or
movsl
mov
ja
push
push
dec
xchg
or
push
icebp
pop
mov
shl
test
pop
and
bound
sti
sbb
cmpsb
fidivl
hlt
dec
mov
cwtl
sub
int3
inc
mov
push
adc
test
lret
xor
cmp
adc
lock
adc
inc
xchg
cmp
into
add
mov
stos
ficoml
xor
lock
mov
sub
jg
outsl
jp
es
bound
fsts
mov
stos
lods
xchg
fdivl
in
negb
stc
or
adc
pop
pop
pop
bound
add
fwait
mov
mov
cmp
daa
mov
insb
push
sbb
mov
cwtl
sub
ret
mulb
jmp
pop
sti
pop
js
stos
pusha
scas
in
outsl
cwtl
lret
jmp
clc
lods
adc
out
adc
jae
loop
sbb
outsl
inc
xchg
lret
bound
mov
xchg
push
and
add
int
fbstp
mov
sti
mov
jo
enter
loop
mov
xor
cmp
pushf
in
ljmp
jp
ss
into
push
xchg
sbb
xchg
enter
stos
jno
dec
sbb
test
jns
sbb
int
sub
push
shr
xchg
ja
fnsave
inc
jmp
pop
jmp
pop
lea
das
insl
adc
std
xor
push
imul
jo
mov
out
fistl
jnp,pt
call
fists
fiaddl
cwtl
dec
addr16
sub
xchg
pop
xor
insb
cmp
add
popa
jns
lea
mov
mov
test
leave
nop
sarb
push
cwtl
loopne
sub
push
dec
xchg
sbb
movsb
cmp
aad
scas
dec
arpl
ret
out
negl
and
mov
xchg
imul
fbstp
inc
cld
ret
jne
out
add
cmpsb
ljmp
iret
push
cmp
shll
dec
sbb
mov
ds
out
mov
jo
cwtl
xchg
sub
pop
hlt
push
lahf
pop
shrl
test
xor
cmpsl
hlt
adc
push
adc
lret
mov
push
mov
in
lock
and
dec
bound
fwait
lods
fs
mov
xchg
sub
mov
cmp
call
test
mov
dec
out
mov
sub
jbe
xchg
xor
inc
jp
movsl
push
lcall
add
das
repz
push
add
or
sub
aad
or
jns
roll
pop
sbb
lods
or
mov
mov
mov
in
jo
ljmp
fbld
xchg
jmp
out
inc
pop
inc
dec
hlt
inc
out
fstpt
decb
sbbb
scas
sahf
shlb
clc
mov
jecxz
repnz
and
add
jno
dec
rorb
imul
pop
inc
shld
inc
mov
aad
cld
out
mov
push
adc
insb
mov
inc
out
pop
pop
in
xchg
or
in
scas
push
cmpsb
inc
adc
in
adc
test
sbb
pop
or
or
cmp
je
xchg
and
xlat
rclb
cmp
out
jle
loope
jl
cs
ljmp
or
icebp
pop
mov
xchg
sub
inc
rclb
or
dec
pop
push
and
jne
pop
sub
nop
jno
xchg
mov
or
rcr
sub
in
adc
adc
cmpb
push
lods
test
scas
mov
inc
lret
xchg
bnd
mov
mov
inc
mov
mov
xchg
insb
sbb
and
movsl
sahf
adc
xor
push
cmp
cmp
pop
iret
push
inc
jns
jmp
cmp
leave
stc
jnp
add
jle
pop
popf
and
mov
jg
inc
mov
test
imul
push
add
jb
mov
pop
mov
pop
xchg
xor
gs
mov
mov
outsl
or
jns
shrb
ljmp
xorb
pop
mov
nop
dec
fsubrs
imul
jmp
xchg
lock
inc
adc
push
std
sub
fidivrs
cmp
movsl
cmp
bound
lods
sbb
cmpsl
and
icebp
mov
cmp
push
imul
jecxz
stos
leave
je
add
xchg
jecxz
test
pop
xor
xor
cs
xchg
adc
sbb
jmp
outsl
subl
mov
cmc
sub
inc
mov
dec
sub
insl
fidivrl
shrb
frstor
mov
cmpsb
add
in
sarl
aad
call
mov
je
popa
rcrb
push
mov
mov
scas
push
xor
nop
mov
push
lahf
dec
xor
int
jmp
jno
sbbb
pop
mov
imul
jb
daa
loopne
outsl
jg
mov
inc
cmp
jb
test
ss
daa
rol
dec
insb
bnd
mov
movsl
push
movsb
lods
mov
mov
aam
cmp
loop
popa
test
add
mov
test
jo
sahf
jmp
mov
test
jno
int3
pop
mull
cmc
push
je
mov
xchg
mov
push
cmp
lret
sbb
daa
push
sbb
in
mov
mov
arpl
xor
cmpsl
jno
cwtl
in
xor
lods
call
cmpb
stos
insl
sbb
rcll
movsl
add
scas
nop
lahf
jmp
movsb
sbb
out
stc
imul
xchg
dec
push
mov
int3
cs
enter
fs
mov
cmp
mov
in
sub
lcall
ret
ret
aam
fistpll
sub
loopne
and
shll
repnz
aad
mov
mov
dec
sub
in
and
or
push
pop
xor
cltd
jo
arpl
jae
jns
in
js
cmpl
popa
test
sub
mov
sub
or
sbb
mov
mov
cltd
enter
inc
mov
push
scas
cmp
test
pusha
push
outsb
enter
and
xlat
push
movsb
mov
clc
add
mov
dec
adc
ja
cmpl
adc
jae
inc
push
mov
dec
jne
xchg
repz
mov
jmp
mov
lods
aas
js
std
xchg
fwait
jb
lock
or
aaa
loopne
test
popf
imul
pop
sti
test
call
cmp
jns
pop
sub
std
gs
pop
add
fdiv
xlat
pusha
aas
xchg
js
mov
ja
push
cwtl
loop
adc
push
add
adc
jge
stc
mov
adc
or
je
lods
cmp
fnsave
mov
mov
movsb
cmp
jl
fdivl
jne
fstpt
pusha
shl
test
sub
popa
das
insb
push
dec
xlat
xor
repz
adc
add
add
lret
data16
xchg
inc
mov
mov
call
jbe
or
cmpsb
shll
pushf
xor
cmp
and
sub
test
jnp
add
adc
mov
mov
in
mov
fdiv
sub
in
fnsave
mov
dec
test
aas
and
ljmp
filds
loopne
push
xchg
pop
xor
in
add
pop
cmp
jmp
inc
imul
and
pushf
mov
int
lahf
dec
cmc
lcall
mov
sbb
pop
add
cmp
loopne
xchg
shrb
adc
and
ret
push
je
jnp
xor
dec
push
mov
cmp
mov
jne
ljmp
and
lret
push
jns
cmc
jle
dec
pop
outsl
pop
mov
cs
ja
cmpsl
mov
push
cmpb
insb
shrb
push
lods
xchg
add
imul
and
lock
je
cmpsl
hlt
mov
addr16
cwtl
rolb
add
and
je
daa
test
popf
dec
xor
in
fwait
into
jne
jnp
scas
or
fistpl
cmc
sub
movsb
into
sahf
lds
movsl
push
sub
mul
dec
nop
and
sub
pop
in
sarb
loopne
inc
push
mov
outsl
sti
pop
inc
aaa
lea
or
push
imul
rorl
mov
xor
data16
movsl
mov
gs
push
dec
incb
jb
in
leave
jge
push
jle
loop
cli
push
nop
adc
in
mov
dec
push
jp
jns
cli
sub
jne
and
pop
jbe
mov
dec
sbb
and
fs
test
test
or
xchg
add
or
stos
dec
das
sahf
fsubl
icebp
jle
push
sbb
sub
jns
pushf
sub
int3
push
adc
adc
jle
orl
mov
mov
jo
inc
iret
jno
call
in
mov
or
loopne
lea
jne
leave
pop
call
mov
addr16
lahf
add
inc
jb
xchg
mov
lods
ss
dec
int
imul
fldt
ret
mov
aas
cmp
pop
jmp
xchg
ret
mov
notb
ficoms
and
mov
xchg
repnz
dec
sub
das
addr16
jg
sub
sub
fsubs
inc
imul
cwtl
jecxz
roll
dec
out
out
jno
push
inc
mov
lcall
xchg
inc
cmp
fcoml
cmp
icebp
fsubrl
xor
lret
test
lea
sub
xor
add
inc
out
je
int
cmp
cltd
test
gs
insl
fs
insl
mov
cmp
push
jle
mov
mov
aas
cmp
enter
stc
mov
jno
lret
cltd
dec
pop
enter
push
jb
dec
or
xor
inc
lds
rcrb
xchg
mov
and
fmull
in
rcrl
fidivl
outsb
daa
js
mov
jnp
adc
nop
icebp
cmpsb
xchg
std
std
popf
pop
ljmp
and
sub
fcmovbe
xor
in
jb
fdiv
aaa
xchg
sbb
dec
add
mov
mov
or
or
aam
push
pusha
mov
je
out
and
sub
addb
jae
jnp
mov
push
out
add
lods
mov
push
cmp
fsubrs
sahf
into
sbb
mov
loope
loop
dec
fisttpl
test
dec
popf
ficoml
push
dec
andl
or
dec
es
push
lret
xor
gs
int3
add
mov
cs
mov
das
and
push
and
mov
or
mov
xchg
rcll
mov
mov
add
xchg
inc
rcr
mov
sub
ss
push
jle
xchg
ljmp
push
jo
js
jo
mov
pushf
popa
xchg
sbb
cmpsl
push
adc
or
inc
imul
xor
ds
shll
jg
dec
dec
xchg
xchg
ret
fwait
pop
adc
test
xchg
mov
mov
xchg
repz
imull
adc
add
cwtl
jo
shll
jle
mov
pop
pop
dec
push
test
cwtl
and
das
inc
jnp
addr16
outsl
jmp
xor
mov
lret
push
jo
mov
jecxz
mov
sbb
and
and
mov
lock
insb
pop
loop
mov
loope
inc
xor
pusha
xor
sub
or
mov
inc
rclb
or
incl
mov
hlt
xlat
pop
jmp
fstl
je
adc
mov
add
lret
push
xor
jnp
in
lea
fwait
jg
and
sahf
test
jne
xor
xchg
pushf
cmp
sahf
ret
push
pop
or
sar
inc
aam
mov
ja
je
pop
jp
pop
mov
add
push
jecxz
int3
sub
pop
jno
ret
call
nop
inc
cli
sbb
mov
mov
add
gs
cmp
inc
push
sub
mov
out
rclb
aad
mov
mov
dec
xchg
push
xchg
movsb
rorb
mov
data16
fstps
inc
iret
add
sub
jne
fucom
int
iret
sbb
into
and
fcoms
push
jne
icebp
repnz
loop
out
lcall
mov
rclb
enter
outsb
pop
dec
add
or
or
and
frstor
sub
in
dec
push
adc
lret
xor
aam
jge
lock
test
mov
cmp
aam
dec
jo
movb
pop
call
mov
bound
sbb
mov
inc
push
stc
cmp
dec
shrb
push
scas
cmpb
test
dec
and
and
inc
outsb
pop
xchg
pop
mov
mov
cmp
mov
pop
aad
cltd
js
jecxz
std
xchg
shlb
pop
push
and
pusha
cmp
inc
pop
pop
pop
add
pop
into
dec
cmpsb
adc
cltd
mov
in
mov
rcrb
dec
cmp
test
cwtl
data16
lret
mov
cli
rcrl
mov
enter
ret
icebp
inc
pop
lcall
jle
mov
subl
aas
dec
test
bnd
inc
mov
js
push
test
dec
jecxz
lret
mov
xchg
xor
push
les
sbb
sbb
mov
lahf
iret
push
cld
rorl
mov
outsb
hlt
ljmp
push
xchg
mov
and
fistpll
pop
aad
or
cmp
dec
shrb
push
and
pushf
lods
out
lea
sbb
pop
inc
mov
xchg
mov
test
xor
popf
addr16
and
cs
pop
sub
or
lea
or
adc
cmp
sahf
dec
mov
jb
fstps
lock
push
pop
cmp
rcrl
mov
clc
fnsave
in
cmp
js
in
bound
loopne
test
push
std
int
dec
mov
sub
ss
pop
push
ss
movsl
push
imul
sahf
adc
and
cmp
mov
xchg
pop
imul
lret
xchg
inc
ds
mov
call
shlb
xchg
cli
pop
xchg
mov
cltd
mov
add
xchg
xchg
sub
ret
sbb
shll
mov
imul
mov
inc
or
dec
shrb
repnz
cmpsb
mov
mov
mov
lret
es
mov
add
xor
xchg
dec
mov
and
lea
jne
jne
inc
xchg
dec
and
les
xchg
mov
mov
stc
add
sti
inc
inc
push
pop
shll
iret
sbb
aas
jmp
rcrl
jbe
dec
push
cltd
pushf
adc
in
jae
gs
mov
jl
add
jbe
js
fwait
clc
push
in
add
call
gs
inc
jo
jne
pop
inc
sti
push
xchg
xor
stc
mov
sub
nop
mov
dec
jne
mov
hlt
mov
loop
stc
sub
push
data16
movsl
nop
into
push
int3
psrlw
jmp
imul
jno
fisttpl
push
fwait
in
push
xor
iret
out
dec
add
adc
xor
mov
dec
xchg
jecxz
in
mov
mov
sub
jl
insb
xor
xchg
in
mov
xor
jno
jge
outsl
out
roll
dec
imul
aam
fcompl
push
and
mov
out
daa
lahf
sub
jns
into
lcall
cmpsb
out
mov
fwait
popl
pop
push
je
jnp
jnp
out
sbb
add
inc
ss
dec
pop
push
out
pop
dec
cmp
test
jl
movsb
scas
gs
and
push
add
shrb
push
cmp
adc
and
jmp
and
test
fsubrs
sbb
and
dec
adc
mov
ja
push
pop
sub
or
jns
test
push
mov
xchg
fsub
jle
mov
cmp
cmp
fdivr
mov
pop
inc
and
das
mov
dec
decl
xchg
xor
xchg
fistpll
or
cli
xor
add
popf
mov
rcrb
cmpsb
and
cld
mov
lea
pusha
inc
fmuls
push
or
push
into
cld
push
jo
xchg
and
xchg
mov
int
and
mov
push
xchg
pop
jnp
sub
cltd
xorb
pop
lcall
sub
add
daa
and
inc
sub
push
cltd
stos
shll
and
mov
adc
test
ds
cmc
cltd
or
lock
std
jecxz
pop
fisubrl
cld
dec
adc
mov
mov
sub
das
les
mov
pop
add
dec
mov
xchg
insl
lods
out
fisttpll
dec
mov
pop
je
outsb
js
add
movsb
stos
sbb
les
jmp
adc
arpl
pop
ds
mov
xchg
jo
mov
push
adc
mov
imul
sub
popw
or
addr16
outsl
sbb
repnz
cmpsb
inc
insb
jle
jle
push
lahf
adc
mov
mov
push
xor
push
clc
mov
push
enter
mov
in
mov
push
or
jb
inc
sbb
outsb
rorl
and
dec
mov
pop
mov
pop
cmc
inc
cmp
leave
inc
mov
jns
dec
rcr
xor
fs
lahf
ds
pop
jp
add
insl
dec
mov
loopne
and
cmp
frstor
cmc
jns
nop
inc
fldenv
push
jecxz
mov
fildll
test
aaa
mov
push
jo
xchg
call
cmc
popa
outsb
sub
inc
xchg
xor
sub
dec
adc
das
imul
pop
arpl
lret
idivl
dec
ljmp
sub
icebp
xchg
loope
pushf
mov
adc
push
xchg
mov
xchg
jnp
data16
lods
arpl
clc
sarb
ss
ljmp
xchg
popa
push
mov
push
inc
orb
jge
test
lea
pop
pop
adc
xchg
dec
jbe
sub
inc
subb
cwtl
nop
fnstenv
mov
sti
mov
adcb
cld
cmp
push
push
pop
jbe
adc
push
mov
fs
scas
jmp
pop
cmp
pop
call
bound
push
jmp
out
cmp
enter
sub
scas
pop
xchg
movsl
dec
lock
and
add
inc
ret
mov
mov
dec
fcomps
lret
mov
std
mov
repnz
cmpsl
and
xor
push
sbb
jne
ljmp
jg
or
sti
or
fisttps
mov
and
or
push
fbld
cmp
push
adc
loope
dec
fcmovu
lods
les
and
notl
lret
sarb
cmp
jecxz
mov
push
mov
decl
lret
jecxz
sub
fs
or
addr16
mov
fcmovnbe
jb
mov
inc
push
push
xchg
jg
sub
or
pop
sbb
cmp
cmp
repnz
or
xorb
sbb
ficomps
add
out
push
pop
push
mov
or
push
daa
sub
pop
mov
jg
ret
jnp
sahf
xchg
arpl
adc
push
adc
dec
aam
in
insl
hlt
rcr
xchg
test
lret
jle
shr
fildll
gs
add
sbb
and
push
jg
mov
int
pop
push
arpl
sub
and
xchg
xor
pop
inc
pop
and
lret
loope
mov
icebp
sub
shl
and
fisttpl
pop
lds
repz
popl
pop
cld
add
out
jmp
mov
fs
icebp
int
inc
popf
pop
ds
xchg
inc
or
push
dec
mov
lock
cwtl
lods
jmp
pop
jg
stos
dec
clc
cmp
iret
mov
jle
lock
out
movsb
jle
cli
inc
clc
out
out
pop
cmp
arpl
push
xchg
into
pop
fdivl
pop
jae
jb
dec
sub
cmp
xlat
sub
in
or
pushf
inc
das
out
enter
cmp
ss
inc
jb
or
adc
fistl
mov
mov
out
sbb
jp
lcall
int3
xor
adc
pusha
cmp
adc
sbb
mov
daa
loop
out
imul
dec
flds
or
mov
inc
shll
add
clc
jle
jmp
mov
mov
test
sub
push
pop
notb
and
mov
gs
mov
ljmp
out
popf
xlat
mov
xor
lahf
je
out
xchg
gs
or
repnz
pop
sbb
sub
ret
push
rcrl
jbe
mov
ljmp
xchg
pop
fdivl
mov
rolb
repz
add
adc
and
adc
mov
cmp
jp
daa
ljmp
imulb
sub
cwtl
sbbb
std
adc
xchg
jl
pop
xlat
ror
pop
jnp
mov
mov
lcall
dec
mov
loopne
and
pop
jle
inc
aaa
cwtl
push
cs
clc
outsb
iret
or
ds
inc
jb
repz
add
cmp
ret
sbb
fs
andb
fs
cmp
mov
inc
lock
movsl
inc
or
sti
lcall
or
shll
mov
cmp
push
sub
mov
jp
test
fistpl
movsb
andb
inc
inc
pop
lods
out
lret
popa
adc
sub
ja
sti
fisttpl
les
lods
add
dec
psubw
mov
pop
leave
out
aad
pop
inc
addr16
sbb
and
stos
rolb
stos
pop
fcmovnbe
je
in
insl
or
sub
sub
outsb
aas
mov
mov
jnp
dec
fcoms
xor
lcall
and
push
arpl
stos
cmp
mov
inc
dec
arpl
fimull
insb
lea
enter
lcall
enter
insb
xlat
pop
pop
mov
stc
cmp
mov
add
outsl
mov
test
xor
xchg
jecxz
imul
adc
lds
sbb
push
mov
add
rcll
addr16
lahf
pushf
lret
cltd
push
xlat
leave
fidivs
add
andl
add
js
pop
adcb
xor
mov
and
out
sbb
xchg
inc
sti
xor
les
iret
icebp
add
and
rcll
stos
inc
rolb
adc
adc
push
cmp
pusha
fimuls
aad
sbb
jmp
aam
or
dec
sbb
decl
scas
adc
add
xor
int3
es
pop
pop
movsb
cmp
sbb
inc
aaa
or
jne
cwtl
mov
cmp
pop
push
jns
vsqrtps
sub
out
sbb
jo
shlb
and
jecxz
mov
cmp
loop
insl
lods
push
rcrb
push
and
cmp
jecxz
idivl
test
and
pop
jge
test
cltd
repnz
dec
test
stc
pop
xor
pop
or
or
es
xor
lahf
pop
hlt
pop
test
add
xorb
iret
cli
test
adc
inc
jo
sahf
sub
loopne
addr16
lods
mov
sahf
mov
lcall
movsb
push
pop
loop
inc
inc
loopne
in
into
in
or
aaa
lea
mov
cmc
mov
adc
clc
dec
lds
mov
pop
add
movb
sbb
xlat
xor
into
sub
movsl
pop
push
shll
fwait
rclb
sub
push
aam
sub
scas
out
xor
xor
pop
push
sub
push
nop
pop
or
cmpsb
mov
nop
notb
add
xchg
mov
mov
enter
jecxz
pop
mov
push
jae
cmc
out
sub
lahf
mov
sub
xor
sub
imul
cli
sar
pop
jae
adc
pop
loopne
shll
inc
dec
xchg
sub
inc
aam
sub
std
push
adc
loop
stos
shlb
sar
dec
pop
enter
in
pop
push
cmp
xor
jle
daa
sti
mov
xchg
out
cmp
repz
xchg
out
aam
cmp
test
in
and
xchg
mov
loopne
xor
xor
hlt
pop
je
je
aad
dec
inc
arpl
push
pop
les
or
aam
clc
adc
adc
dec
shlb
cmpsb
and
jo
ret
lcall
daa
mov
mov
mov
mov
mov
scas
jnp
insl
inc
lcall
jns
add
out
fsubs
jmp
negb
sbb
add
cltd
jo
ret
jo
inc
pop
push
pop
add
push
out
icebp
lea
das
xlat
dec
mov
repz
xor
sbb
stc
mov
and
hlt
aaa
add
inc
aam
in
or
mov
inc
in
insb
xor
xor
jns
pop
push
in
dec
sbb
add
mov
fwait
push
lea
add
movsb
xor
dec
xor
dec
addr16
or
cmp
sbb
cmovl
out
fadds
inc
pop
jg
dec
adc
xchg
lret
sbb
mov
outsl
cltd
incb
pop
push
outsl
nop
loop
push
cmp
pop
pop
mov
push
scas
int3
das
outsb
pop
xchg
pop
das
pusha
mov
insb
cmp
lcall
push
test
pop
push
pop
je
sbb
inc
icebp
push
ss
aam
popa
cwtl
cmp
adc
adc
add
test
out
inc
push
ror
cmp
mov
mov
add
imul
sub
imul
xchg
test
inc
clc
sub
mov
xchg
lahf
insl
mov
ja
dec
sub
mov
or
dec
inc
mov
jl
pop
scas
mov
call
mov
and
mov
das
pop
mov
std
jmp
int3
stos
inc
jbe
jne
cmp
inc
add
addr16
outsb
xor
push
lock
jae
rorb
repnz
pop
orps
lds
inc
push
mov
sti
test
mov
gs
mov
mov
insb
pop
rorb
ljmp
bound
xchg
jo
dec
repnz
mov
ss
dec
outsb
jno
xor
push
add
push
push
stos
js
scas
cld
lds
sti
imul
mov
and
and
lds
and
jecxz
xor
jae
out
add
lcall
es
cmpb
xchg
cmc
pop
xor
fidivl
adc
in
add
je
les
pop
out
jb
fwait
std
mov
into
jns
sub
in
sbb
cwtl
imul
pop
mov
stc
add
aaa
or
imul
pop
fcmovu
pop
jnp
sbb
jbe
outsb
inc
cmp
xor
xchg
daa
addr16
inc
sbb
sbb
lea
jno,pn
and
je
jo
push
sahf
xchg
and
call
out
fisubrs
lds
inc
mov
mov
lods
call
lock
insl
cwtl
cltd
xchg
pushf
pop
push
flds
movsb
or
xchg
loopne
cmp
jp
sub
cld
mov
cmp
mov
movsb
jae
test
dec
jae
daa
xchg
mov
jns
push
adc
xchg
inc
push
daa
imul
xor
outsl
mov
mov
jmp
aad
inc
sbb
pop
xor
addl
pop
stos
adc
dec
pop
and
fwait
push
cmpsb
push
lea
fcomps
loopne
call
mov
push
xchg
mov
sahf
sub
fsubrs
daa
popf
js
jns
mov
hlt
idivb
jl
scas
in
or
sar
mov
or
test
ficompl
dec
jns
jne
add
fiadds
add
das
das
daa
das
push
lock
mov
push
loop
mov
or
shlb
adc
sbb
mov
push
mov
ljmp
jb
in
sbb
data16
ss
dec
adc
lods
push
add
xlat
push
cmc
pop
into
test
mov
bound
outsl
rolb
bound
add
mov
sub
mov
xchg
loop
pop
imul
in
dec
or
sbb
xchg
adc
inc
out
sbb
shl
out
sub
loop
test
aas
mov
jb
and
xchg
pop
ja
rclb
pop
int3
push
loop
les
xchg
cmc
dec
icebp
cmp
sub
insb
outsl
int
call
outsl
icebp
int
xor
pop
pop
ss
cmp
iret
icebp
mov
enter
sbb
insb
mov
jns
arpl
jbe
dec
jl
popa
int
inc
dec
repnz
mov
imul
mov
int3
mov
shrl
and
jp
cld
loope
xor
adc
mov
idiv
push
sbb
adc
push
or
and
or
xchg
bound
dec
sbb
or
movsb
data16
inc
hlt
mov
inc
mov
and
xchg
xchg
repnz
xchg
xor
insb
test
ret
xchg
out
mov
push
dec
popa
aaa
addr16
push
xchg
and
arpl
aad
push
cmp
pushf
jmp
xor
scas
xor
jmp
pop
mov
leave
push
sub
iret
adc
xor
sbb
jb
xorb
rol
mov
fwait
mov
lds
jle
mov
lret
mov
enter
lods
push
test
lods
jnp
mov
loope
xor
int3
push
sbb
movsl
icebp
fwait
iret
movsl
push
js
lcall
xor
mov
shl
mov
push
test
push
mov
imul
lret
js
fwait
dec
jne
push
mov
mov
ficomps
dec
enter
inc
cmp
mov
jmp
gs
cmp
mov
int3
jno
imul
mov
dec
jae
jo
fcos
lods
adc
mov
push
test
xor
fwait
stc
scas
cmpsl
sbb
inc
mov
pop
outsl
daa
lods
xlat
dec
mov
repz
lock
sbb
jecxz
mov
in
shl
xchg
ds
lods
clc
insb
or
cmp
sti
out
dec
int
add
out
repz
xchg
cmpsl
pop
das
ljmp
ret
lcall
rorb
cmp
cmc
jae
lods
bound
ret
lret
mov
dec
lcall
and
pusha
jecxz
lock
fprem
test
jns
sbb
dec
adc
out
int
je
call
or
scas
dec
cmp
dec
sub
mov
or
push
push
adc
popf
xchg
dec
pop
mov
imul
lret
fxch
js
cld
xchg
in
mov
cmp
mov
das
cmpsb
jne
mov
stc
jg
dec
adc
aad
pop
daa
inc
or
fsubs
out
adc
fstp
push
sub
out
pop
mov
sahf
xchg
mov
add
aam
push
sub
push
sub
jl
out
sub
dec
ret
sbb
int3
mov
pushf
dec
nop
mov
in
call
scas
cmp
push
add
imul
negb
pusha
and
sub
jge
sarb
lds
cmp
cmp
jl
sbb
or
push
sbb
xchg
mov
mov
add
pushf
iret
inc
addl
mov
aam
add
fidivl
mov
jmp
jmp
push
jmp
dec
mov
mov
cmp
aam
push
cmp
in
adc
add
call
test
xchg
dec
or
int3
sti
add
jmp
lea
xor
push
xchg
push
add
jl
fistpl
leave
movsb
mov
jmp
cwtl
mov
push
xchg
mov
cmp
mov
cmpsb
mov
out
xor
xor
fwait
pop
call
mov
pop
sahf
adc
adc
and
inc
outsb
push
mov
rol
nop
cmp
cmp
pop
int3
fbstp
pop
call
pop
jl
sti
mov
xor
out
adc
rolb
imul
mov
into
mov
dec
or
xchg
data16
xchg
jo
das
cmp
call
or
xchg
popf
or
xor
shr
or
dec
lods
mov
pop
sub
inc
aad
dec
cmp
addl
or
push
adcb
cmp
popl
sti
pop
mov
pop
mov
mov
jle
sbb
sarl
mov
lret
xor
inc
stc
lods
or
mov
mov
sbb
rol
xor
add
imul
adc
aaa
cmp
fidivrl
cltd
or
push
jecxz
or
insl
loop
in
push
cs
sub
in
lahf
je
pop
nop
sbb
fldt
push
adc
add
test
push
les
movl
ss
shrl
or
mov
pop
cld
fldl
mov
push
pop
outsl
into
adc
idiv
xor
fidivrs
xor
jo
jp
push
push
fistps
gs
xchg
mov
push
inc
cmp
sbb
pop
dec
push
inc
xchg
out
sbb
inc
test
jmp
add
jnp
fs
addr16
sub
addr16
cmp
fnstenv
mov
ret
das
sub
sub
and
cltd
test
or
and
pop
xor
pop
hlt
popw
in
xchg
sarb
xor
xchg
sub
ljmp
sub
insl
mov
outsb
das
popa
mov
lahf
fdivs
and
xchg
and
test
js
pop
test
loopne
or
jo
mov
ds
jge
xor
testb
mov
and
xchg
cld
sub
clc
jg
and
out
imul
lods
test
or
and
push
filds
mov
loop
xor
shl
lea
mov
xlat
xor
jb
pop
cmc
sarb
sbb
and
dec
sahf
sub
mov
enter
int3
dec
push
jmp
sbb
movsb
push
pop
fwait
ja
or
adc
test
pop
push
add
pop
cmp
lods
aam
mov
in
test
cmp
push
ljmp
jne
cwtl
test
jb
pushl
inc
jmp
jo
mov
clc
jbe
lret
or
movsl
lret
mov
in
jne
sub
push
adc
data16
mov
and
leave
mov
cmp
nop
and
or
cmp
sub
cmp
out
xchg
sbb
xchg
jbe
inc
pop
xor
jge
adc
inc
xlat
add
mov
lret
xor
mov
mov
fwait
neg
mov
fsub
das
outsl
mov
fstpl
stos
shlb
pop
nop
pop
push
out
dec
iret
jl
pop
lret
pop
adc
popf
rcl
xchg
mov
mov
adc
mov
shrb
inc
test
js
loope
cmp
cmp
test
sub
in
sbb
pushf
xchg
ss
cmp
or
les
inc
dec
mov
cltd
lcall
je
and
loop
jg
out
outsb
cli
cmpsl
andb
pop
es
pop
data16
test
inc
lret
xchg
cli
ret
xor
xor
sahf
push
stos
lea
inc
inc
jp
jl
stos
iret
jne
or
dec
or
cld
jno
inc
test
lea
mov
fisubrl
lahf
push
sbb
into
stos
jo
mov
cmp
lock
pusha
pop
repz
xchg
and
pop
sub
xor
idivb
mov
sub
mov
pop
fldt
ficomps
fnstcw
insb
sub
sub
mov
lahf
inc
adc
or
pop
adc
xor
mov
in
and
dec
aaa
popa
fimull
and
test
cmp
pusha
outsb
ss
push
inc
push
in
pop
movsl
cmp
lds
stc
add
cmp
les
dec
aaa
xchg
rorb
popf
xchg
mov
je
sub
jns
mov
in
adc
stos
and
mov
mov
daa
out
enter
in
rorb
js
mov
sbb
es
or
dec
sub
xor
sbb
loop
mov
mov
add
xlat
xor
shlb
outsb
aad
jae
jns
dec
dec
pop
loopne
push
adc
nop
sbb
testl
xchg
sub
lahf
in
inc
push
sub
repnz
imul
js
push
and
sbb
aam
test
lock
adc
push
aaa
xchg
loopne
fcomip
mov
cmp
cmp
mov
sub
andl
xor
es
push
in
je
jno
dec
inc
xchg
mov
push
adc
int3
in
push
cmp
sbb
setnp
popa
adc
xchg
and
adc
rolb
jmp
inc
xchg
pusha
push
pushf
gs
pop
repnz
mov
xlat
sahf
mov
arpl
push
add
sub
pop
dec
test
mov
loopne
dec
into
stos
scas
or
decl
add
xor
jge
addr16
xchg
imul
fstpt
je
insb
cmp
movsl
lock
mov
popf
aam
stos
imull
pop
mov
mul
add
nop
imul
stc
dec
pop
adc
ret
adcl
std
push
mov
jl
mov
mov
sti
imul
hlt
int
adc
dec
add
cmpsl
popa
and
in
add
ja
push
mov
clc
add
rorb
xchg
cmpsb
test
cmp
sub
fldl
add
adc
push
loope
dec
pop
push
test
adcl
shll
imul
and
mov
rorl
cmp
inc
adc
pop
lds
stos
add
out
push
push
ja
sub
lods
mov
mov
inc
sub
mov
scas
pushf
jp
fs
aad
cwtl
shlb
jmp
cmp
add
inc
lret
mov
inc
push
jne
mov
dec
or
stos
jl
test
pop
mov
aad
shlb
mov
je
clc
push
shlb
shlb
xor
stc
js
add
mov
sbb
jp
fidivs
mov
adc
mov
cld
testb
mov
or
pop
scas
insl
sbb
out
pop
jae
xor
xchg
jg
ja
aam
push
jnp
imul
cli
mov
mov
mov
xchg
and
add
inc
sbb
loop
jno
imul
insl
xor
movsb
ret
cmp
jae
movsl
out
nop
out
loop
add
adc
shl
jns
jb
cmp
or
int
andb
push
cmp
pop
inc
sbb
outsl
mov
xor
push
push
jge
shrd
data16
or
nop
inc
repnz
sbb
sti
movsl
ret
ret
xchg
dec
jl
in
sbb
stos
inc
in
int3
loopne
sbb
enter
push
and
arpl
push
call
or
adc
out
push
cmp
mov
push
jp
xchg
push
jmp
inc
jne
and
mov
pusha
push
push
test
jle
sub
push
mov
push
pop
pop
call
lea
pop
or
repnz
enter
mov
xor
adc
cmp
mov
xor
mov
push
xchg
fistl
xor
idiv
test
cs
in
out
sbb
or
add
popa
sub
stos
mov
push
out
cld
cmpsb
cmp
sub
pop
cmc
daa
adc
scas
xor
add
sub
lret
dec
out
aaa
arpl
ljmp
jge
push
xchg
push
or
int
shll
lret
in
or
movsb
mov
sub
daa
dec
lods
jne
push
loop
notb
pop
jmp
mov
pop
lods
arpl
outsl
lock
sub
sub
mov
imul
pop
aaa
stos
dec
and
je
imull
mov
push
push
add
jmp
push
out
dec
cli
add
sti
ja
shl
inc
jne
nop
fst
sarb
and
pop
jecxz
sub
pop
sub
addr16
outsb
movl
int
xchg
sbb
add
add
mov
sub
dec
in
sbb
sbbl
push
pop
cltd
sub
rcll
adc
loope
gs
stos
or
xlat
out
xchg
lret
shr
call
or
rcll
outsb
xchg
sbb
fimull
stos
cld
sub
mov
out
push
mov
pop
or
insb
fs
adc
mov
push
ja
or
insl
cmp
add
add
fwait
je
repz
and
mov
lret
jns
rolb
pop
pushf
dec
popf
int
or
push
mov
dec
sbb
add
mov
das
pop
add
ljmp
pop
mov
sahf
jns
xor
jle
dec
lods
enter
mov
repz
shlb
cmp
out
sbb
xchg
sbb
cltd
lcall
cmc
lret
nop
mov
loope
iret
sub
ds
pop
pop
out
or
mov
in
je
adc
rolb
mov
inc
add
sbb
mov
lods
ljmp
test
insb
shlb
lock
xchg
test
sbb
popa
pop
icebp
cmc
inc
lds
push
fldl
icebp
add
cmc
dec
xor
adc
ret
dec
and
push
jmp
push
rol
icebp
cwtl
mov
sub
mov
ficomps
or
pop
and
add
clc
ss
loopne
xchg
cmpb
ds
bound
push
frstor
pop
jg
loop
xchg
dec
mov
inc
push
dec
mov
jp
adc
in
mov
sti
arpl
movsb
mov
gs
pop
jle
in
add
adc
cmp
fisttpl
daa
sub
cmpsb
test
push
rcl
mov
inc
movsb
xor
cs
pop
add
push
cwtl
dec
jp
arpl
test
inc
jecxz
push
lea
adc
fidivl
cmpsb
add
mov
frstor
rclb
repnz
xchg
cmpb
jg
xor
popf
or
aaa
lods
stos
mov
mov
lea
imul
or
sub
push
pop
scas
pop
shlb
mov
xchg
ret
push
std
xor
or
cwtl
hlt
pushf
fimuls
hlt
sarb
lods
in
mov
cmpsl
dec
add
adc
ret
subl
xchg
lea
shll
push
lcall
pop
inc
lds
leave
cmp
cltd
jmp
test
or
jne
push
xchg
cmp
ret
dec
lahf
insb
fnstcw
adc
adc
xor
loope
jmp
mov
or
and
inc
adc
pusha
inc
inc
outsl
mov
jecxz
aaa
ja
jl
push
inc
arpl
sarb
pop
pushf
mov
cmpsl
dec
std
pop
and
dec
insb
popf
push
mov
and
mov
mov
xor
push
xchg
repz
adc
mov
lods
mov
cmp
add
scas
xorl
sahf
cmp
pop
les
xchg
jb
rep
stos
xchg
mov
rorb
icebp
jge
cmpsl
and
out
jae
rclb
outsl
mov
xchg
sub
jne
dec
std
jo
ljmp
gs
inc
jmp
sbb
sub
lcall
int
inc
cmp
test
cmpsl
inc
xorb
sbb
and
adc
jns
jg
or
loope
in
sarb
ss
or
jno
xchg
in
lods
in
or
pop
ror
iret
es
sbb
sub
clc
mov
in
adc
sti
and
in
cltd
hlt
sbb
push
movsl
cmpsb
add
cmpsl
and
xor
out
dec
mov
divb
mov
mov
sub
jb
lret
cli
fwait
mov
cmpsb
jnp
loope
lahf
rcll
add
addr16
ficoml
stos
into
jmp
pop
pushf
lret
push
add
xor
lret
mov
sub
xchg
sub
shrb
cmc
call
int
outsb
mov
arpl
arpl
or
in
lret
outsb
test
decb
popf
mov
jmp
int3
sbb
loopne
iret
sbb
pop
bound
idivb
xchg
sub
mov
mov
lods
push
mov
push
jae
jle
insl
out
adc
xchg
mov
out
jbe
adc
ds
movsb
fidivrs
and
hlt
in
out
xor
aad
inc
fwait
stc
rcr
adc
jmp
int
leave
jmp
pop
in
lret
or
cltd
pop
jno
in
mov
jno
dec
mov
xchg
popf
out
push
inc
push
mov
ds
dec
das
xor
dec
mov
outsw
cmp
aas
jp
test
or
xchg
push
sbb
add
aas
cmc
test
fwait
xorl
int
pop
lock
lret
sahf
mov
cmp
roll
push
into
into
jno
dec
sub
mov
fisttpl
pop
mov
push
push
sysret
xlat
or
jecxz
lahf
xchg
mov
pusha
cmpsl
jge
mov
or
add
mul
aas
dec
push
fnsave
cmp
adc
paddd
mov
xchg
divb
outsb
popa
add
not
fcomp
pop
pop
or
mov
add
lret
shrb
in
push
fsubrs
mov
or
or
ret
sti
mov
outsl
push
test
dec
imul
lock
int3
lret
jp
xor
addr16
adc
aas
lret
imul
mov
adc
pushf
call
mov
mov
cmp
cmp
xchg
dec
daa
mov
xor
fs
out
rcrb
push
sub
imul
ficoml
mov
mov
aaa
push
cmc
add
enter
ss
cmp
mov
sbb
inc
int3
loope
sbb
xorb
lds
or
cmp
nop
mov
jnp
xor
fisttpll
fidivrl
mov
and
dec
arpl
inc
lret
lock
jmp
xchg
or
outsl
cmp
inc
popa
dec
in
xchg
mov
rcrb
repz
addr16
stc
outsb
xchg
sub
sub
repnz
push
ficompl
mov
aam
popf
cmc
shl
xchg
xchg
inc
mov
cs
dec
pushf
call
push
inc
lods
jnp
adc
cld
mov
aaa
pop
or
pop
jb
or
mov
inc
lret
loope
sahf
cmp
sahf
je
fnsave
test
cwtl
mov
je
xor
in
stos
dec
mov
or
loope
movsb
test
and
mov
pop
lods
out
gs
xchg
data16
data16
icebp
pop
out
dec
xchg
mov
insb
arpl
insl
ss
inc
sub
repz
imul
mov
clc
fwait
repnz
outsl
jg
cmp
bound
incb
sahf
sbb
rcll
add
dec
inc
pop
jns
mov
jne
or
ss
jno
xchg
dec
cmp
jbe
stc
aad
out
jb
enter
mov
sbb
cmpl
pop
or
cmp
jmp
cltd
fcmove
dec
push
lret
enter
fmull
push
pop
int
int3
aas
movsl
mov
cmp
push
xchg
jbe
jns
test
jl
mov
ret
add
cs
jne
cltd
cmp
je
fbld
fldcw
jg
mov
inc
mov
dec
loopne
mov
iret
cltd
outsb
add
int3
popa
icebp
popf
or
cwtl
shlb
mov
hlt
incl
lds
mov
lock
dec
xorl
jae
jle
rol
jo
mov
scas
inc
jp
xor
sub
xlat
ret
push
arpl
and
ficoml
cmc
les
mov
sub
in
popa
xor
and
jb
std
inc
inc
jbe
aas
divl
ja
mov
stos
jns
mov
fistps
sbb
jnp
rolb
jecxz
pop
lods
lds
jbe
repnz
dec
sbb
add
adc
sub
inc
xor
and
imulb
add
arpl
dec
adc
out
dec
aam
and
fildl
push
lcall
fsts
ficoml
ljmp
and
pop
rcrl
js
xchg
add
mov
push
ss
or
jb
mov
lcall
add
pusha
inc
ret
fadd
neg
xchg
xor
sbb
mov
js
out
sub
pushf
sub
and
rcrl
push
jo
ret
decl
mov
xor
mov
fcompl
scas
shrb
xor
push
repz
push
and
rcl
rorb
ja
ret
inc
mov
pop
mov
push
sarb
iret
pop
fbstp
sub
repnz
jmp
enter
lahf
imul
mov
jb
out
mov
lret
mov
rcl
les
test
ja
jmp
mov
dec
sbb
sub
pop
mov
pop
lods
les
xchg
test
repnz
mov
adc
pop
sar
push
pop
mov
lods
cmp
insl
out
out
xchg
mov
mov
mov
xchg
loope
stc
lea
add
jae
xorl
mov
dec
push
adc
and
jns
add
pop
outsl
xor
dec
stc
rep
jmp
jae
dec
std
aam
dec
mov
faddl
pop
scas
into
mov
sbb
popa
mov
addr16
lea
or
mov
repz
or
lea
xor
xor
cmp
imul
jle
aam
dec
imul
int
push
rclb
sbb
cmp
jns
xor
pop
cltd
dec
jecxz
aas
xchg
pop
push
out
and
push
xor
sub
test
stos
jmp
ror
aam
and
xchg
pushf
mov
subl
sbb
ret
icebp
leave
cltd
loop
push
outsl
subb
cmp
xor
dec
mov
adc
call
jle
int3
scas
mov
lea
cmp
cmp
imull
es
popa
rclb
mov
sub
pop
icebp
add
mov
xor
sbb
xchg
xchg
ret
in
and
sahf
adc
push
adc
cmpsb
adc
in
ss
sub
sbb
outsb
and
add
lret
test
aam
int3
in
sub
push
xor
adc
mov
cmp
mov
add
sub
mov
aaa
xchg
adc
inc
ljmp
fidivs
xchg
xor
repnz
mov
pop
in
pop
testl
imull
pcmpeqb
pop
sbb
inc
out
lods
dec
bound
jbe
daa
cwtl
imul
mov
xchg
adc
mov
aas
push
and
subl
nop
fwait
push
sbb
imul
push
push
jge
ret
mov
ret
inc
lds
xchg
pop
mov
clc
jnp
setno
add
out
sub
push
push
stos
mov
cmp
adc
mov
cmp
mov
or
sbb
jl
push
mov
mov
mov
sbb
arpl
in
dec
add
sub
sub
aas
adc
pop
pop
jl
fs
int
repz
pushf
std
or
ja
sbb
inc
add
je
xor
loopne
lock
fs
test
call
push
inc
inc
adc
sbb
cmp
or
orl
push
out
mov
outsb
or
nop
movb
or
mov
pop
enter
push
loop
cmpsb
add
cmp
cmp
ljmp
movsl
std
and
lock
and
fcomps
dec
add
and
aaa
or
xor
pop
loop
jne
mov
outsb
rcr
fidivl
pop
xor
test
das
sbb
test
add
jecxz
shlb
xchg
mov
xchg
test
out
test
or
movsl
jo
or
leave
inc
push
call
aaa
sub
sbb
decb
add
jmp
add
cmp
xor
aad
test
mov
dec
push
jns
bound
jns
mov
lods
xor
in
jo
clc
aaa
int3
xor
xor
push
or
test
inc
ret
jg
mov
std
jmp
xchg
arpl
imul
add
or
sub
jmp
movsb
xchg
adc
jbe
and
dec
xorl
sbb
mov
jne
mov
mov
lahf
sbb
fimull
xor
addl
testl
and
mov
ds
hlt
call
arpl
jo
pushf
rcr
dec
pop
or
jecxz,pt
insb
sbb
lock
loop
mov
out
or
xor
mov
test
hlt
lcall
sub
nop
jno
aas
push
fdivrl
mov
and
cmp
mov
adc
repz
lea
xchg
jg
mov
jo
mov
sub
ficoms
int3
mov
add
out
in
and
aam
clc
les
adc
sbb
aam
sbb
pop
and
cmc
push
int
pop
fistps
pop
push
cmp
xchg
or
divb
and
imul
arpl
and
jge
lahf
adc
pop
xchg
lea
fidivs
cmp
and
test
adc
adc
mov
jl
shll
cmpsl
pop
xlat
insl
or
fcomip
cmc
gs
add
cmp
jns
jle
and
stc
cmc
repz
data16
cli
loop
daa
out
sub
jae
jno
adc
cmpsl
push
stc
shll
push
jmp
pop
fwait
lods
mov
call
js
fdiv
decl
loop
and
jecxz
sahf
and
pop
dec
push
jb
jl
xchg
xchg
mov
pushf
dec
pushf
loopne
mov
mov
push
cmp
jecxz
mov
iret
mov
packuswb
sub
jbe
jbe
je
es
test
shlb
push
aas
or
mov
std
les
mov
enter
ja
jo
cli
shll
fmuls
fs
xchg
dec
pop
sub
mov
repnz
sbb
inc
lock
ret
inc
hlt
add
dec
sbb
test
fcoml
int
xchg
or
jg
pop
out
mov
ljmp
aam
test
call
jae
and
lds
imul
sub
xor
pushf
dec
sbb
push
push
xrelease
sbb
xor
sbb
sbb
add
sbb
inc
roll
add
mov
mov
enter
dec
mov
insl
mov
pop
in
cmc
enter
xchg
or
stc
popw
nop
inc
and
ljmp
in
in
or
and
cmp
mov
pusha
mov
repz
mov
in
cmpb
imul
imul
test
loop
fcmovnbe
lock
outsl
xor
fcmovnb
mov
sub
fistpl
mov
or
mov
mov
mov
or
fwait
sub
repnz
xchg
adc
add
ficompl
gs
imull
out
in
or
dec
and
xchg
add
xor
rcl
inc
sbb
iret
mov
fisubrl
movsb
lea
lahf
push
jo
sub
leave
jb
cs
and
nop
pop
sbb
int
dec
push
aad
push
test
and
dec
jmp
into
outsl
inc
test
les
das
repz
out
mov
dec
push
leave
ret
add
xor
or
popa
pop
mov
daa
movsl
sbb
jge
xchg
sbb
scas
cli
lahf
adc
or
lahf
pop
sub
xlat
popl
cli
jle
xlat
pop
cld
sysenter
in
mov
pusha
lods
push
and
movsl
leave
out
fstpl
inc
mov
std
cld
movsl
les
sbb
mov
leave
arpl
jbe
lret
fwait
popa
jne
mov
jb
lcall
das
push
icebp
test
sarb
mov
and
sub
loopne
je
mov
cmovnp
es
bound
mov
sti
pop
mov
jge
les
popa
xor
mov
fwait
aas
jl
sbb
ja
push
std
cltd
arpl
pushf
jns
ja
mov
add
pop
insl
fisubrs
xor
push
push
dec
adc
ret
cltd
pop
js
int
or
imul
adc
dec
pop
adc
imul
xlat
fdivr
insb
fadds
jl
popf
cmc
cmpsl
mov
lds
pop
jmp
pop
pop
rcrl
jne
stc
jl
mov
and
xchg
push
jbe
test
sub
rcll
pop
lods
inc
lcall
int3
in
xor
jne
push
outsb
push
int
pop
sbb
hlt
mov
sub
out
sbbb
idivl
dec
sub
scas
mov
flds
jns
scas
daa
dec
das
rcrb
dec
xor
pop
add
lea
xor
mov
aad
dec
stos
rcrb
cli
push
inc
int
stos
mov
rcrb
hlt
lods
jb
mov
adcl
test
leave
cmp
stos
cmp
and
sbbl
push
fsub
cmpsb
je
test
push
adc
pusha
inc
test
xor
mov
icebp
fisubl
pusha
dec
xchg
jae
push
jnp
and
push
stos
jbe
jle
dec
into
repz
arpl
cmp
out
pop
and
pop
mov
in
sub
lea
aam
js
cmpsb
mov
cmpsb
ja
inc
inc
testl
add
push
add
push
lods
pushf
jge
pushl
or
in
cmp
enter
xor
jmp
inc
jb
fnstsw
jmp
cld
pop
lcall
movsb
pop
dec
fcoms
stc
lds
dec
fildl
push
sahf
adc
lds
clc
jb
into
xor
push
cmp
cmp
stos
adc
fdivrp
cmp
out
push
into
xor
sbb
mov
xor
lods
push
xchg
add
push
int3
loop
stos
jmp
jno
lahf
call
loop
loopne
mov
mov
aam
aaa
cmp
les
sbb
mov
pop
ret
and
js
dec
int
ret
or
divl
les
stc
mov
mov
xchg
mov
je
mov
adc
and
shll
mov
fcomip
or
aas
lret
test
enter
jle
out
dec
mov
sbb
arpl
pop
fists
xor
sahf
cmp
outsl
jg
cmpsb
shlb
xchg
fs
fadds
in
lock
daa
mov
scas
pop
std
sbb
jp
stc
jecxz
lahf
inc
inc
sub
cmpl
repz
dec
xchg
rorb
mov
pop
fmul
out
sub
stos
in
and
test
movsl
iret
js
sbb
test
cltd
sbbb
xchg
mov
bound
and
cmp
mov
sbb
iret
inc
dec
push
cmp
sbb
in
push
sub
add
xchg
sbb
shl
ds
or
scas
push
jl
les
cmc
fstl
lds
push
enter
orb
subb
fisubl
sbb
aam
adc
mov
cmp
sbb
push
imul
or
or
push
clc
add
dec
fbstp
sbb
push
int
push
jecxz
imul
or
mov
cltd
cli
mov
andl
xchg
push
gs
mov
addl
arpl
mov
lret
stos
push
inc
int
xor
sbb
cmpsl
or
out
fsubs
fldcw
lret
xor
jne
fmull
sbb
xor
jecxz
hlt
inc
xchg
hlt
shl
sti
ljmp
stc
xchg
adc
inc
out
lock
jae
sub
notl
add
inc
sbb
mov
rcl
pusha
insl
mov
mov
xor
jge
into
cli
std
movb
dec
clc
xchg
leave
cmp
stc
push
adc
cmp
mov
jno
arpl
into
fcmovnbe
push
add
in
sbb
xchg
inc
cmpsb
and
pop
test
outsb
jns
sub
pop
cmp
outsb
icebp
dec
jmp
stc
gs
or
test
jmp
addb
xorb
push
pop
aas
xor
sbb
mov
mov
enter
popa
xor
inc
adc
xor
pushf
fisubrl
cmp
ret
xchg
sub
dec
xchg
ljmp
and
ja
or
and
pmulhuw
push
xor
push
out
out
pop
cmpsb
mov
jns
sbb
mov
sahf
pop
scas
movsb
out
shll
xchg
arpl
adc
mov
push
adc
cmp
inc
xchg
movsb
pop
xchg
cmp
push
push
jge
mov
xchg
xor
cmp
fwait
xor
xor
test
clc
mov
pop
cltd
jae
jnp
pop
arpl
jp
sti
cmp
cmp
or
or
loop
mov
rcll
shlb
in
xor
lcall
inc
lret
outsb
outsl
pop
int
pop
dec
jo
mov
movl
sahf
jnp
out
movsl
cmp
push
aad
dec
sbb
xchg
jo
shrl
arpl
pop
aas
push
mov
sub
inc
aaa
sub
jecxz
xchg
xchg
sbb
popf
mov
inc
test
dec
test
inc
ror
jns
lret
jbe
ja
out
mov
sub
mov
adc
mov
sub
adc
roll
mov
sbb
cld
adc
insl
data16
test
je
xchg
cmp
daa
enter
int3
or
push
jg
cld
and
jno
push
and
faddp
mov
movsl
sub
leave
mov
hlt
sbb
add
inc
mov
scas
push
xchg
call
gs
aaa
hlt
xor
loop
shrl
andb
in
mov
mov
sti
lock
popf
pop
pop
add
das
cmp
jmp
bound
mov
and
test
daa
push
cmp
pusha
jmp
imulb
out
scas
and
imul
mov
lds
xacquire
mov
jb
in
fwait
push
and
cmpsb
inc
mov
and
js
sahf
pop
negb
les
loope
gs
or
loope
inc
or
push
pop
pushf
mov
mov
cltd
pop
or
roll
mov
mov
adc
push
dec
scas
lock
mov
int3
lock
roll
and
jl
roll
mov
mov
sub
sub
push
lcall
cmpsb
lods
or
jns
xchg
stc
fbstp
rep
jno
mov
xchg
push
incl
sarl
imul
dec
pop
imul
pop
xchg
lock
fwait
nop
sbb
aas
enter
mov
daa
jge
cmp
mov
addr16
xchg
pop
sub
je
xchg
jle
mov
add
sahf
cltd
ja
in
mov
xor
xchg
inc
lea
stos
into
cli
fstl
sbb
es
pop
inc
jecxz
xchg
mov
test
jp
sbb
dec
rclb
and
push
fcmovb
jmp
in
xor
cmpb
jns
xchg
push
inc
popf
xchg
sbb
loop
es
fpatan
mov
in
orb
mov
test
loopne
ja
pop
xlat
cmp
add
xor
test
push
push
sahf
or
push
js
dec
into
pop
mov
les
push
scas
mov
push
sahf
dec
inc
int3
mov
pop
push
aaa
sbb
mov
inc
fidivrl
fsubl
jns
call
gs
dec
jmp
mov
mov
data16
stos
aaa
lret
es
adc
in
inc
ret
add
jno
gs
dec
mov
sub
ds
outsb
sbb
mov
adc
lret
pop
insl
loopne
orl
xlat
iret
or
sbb
mov
movsl
add
arpl
adc
adc
fstps
inc
sbb
mov
cmpl
sbbb
cmp
sub
mov
lods
mov
scas
xchg
fld
iret
dec
mov
sub
popf
dec
xchg
jbe
ss
fistpl
lods
mov
push
es
jb
repnz
add
mov
aaa
cmpsl
in
insb
wbinvd
hlt
pop
in
cltd
lea
adc
and
mov
or
and
das
cmp
into
testl
adc
and
sahf
sbb
mov
dec
js
pop
ss
or
test
lcall
dec
fcmovbe
ret
adcl
or
xlat
xor
rclb
xchg
lock
adc
fmul
aaa
divb
scas
push
mov
js
mov
ret
cmp
mov
jp
std
pop
repz
outsl
dec
pushf
adc
push
and
pop
mov
and
cmp
test
jg
sbb
cmp
icebp
arpl
or
pusha
inc
mov
jmp
adc
and
les
inc
pushfw
pop
orl
lods
addr16
jmp
inc
mov
jne
call
fdivs
or
jecxz
or
add
add
lret
hlt
rcll
loop
aas
jnp
fstpl
addb
imul
repz
rcrb
push
call
xchg
std
hlt
sub
xchg
add
ret
cld
mov
sti
adc
sbb
mov
mov
jle
popa
or
jge
mov
xlat
sub
jae
xlat
sub
aas
jge
mov
pop
lea
and
loopne
nop
xchg
loope
mov
sti
push
jge
add
jo
push
sbb
sbb
adc
adc
andb
int3
repz
jno
cltd
jge
sub
shl
ljmp
iret
mov
je
enter
enter
cmp
cmp
xchg
xor
cli
dec
jno
mov
dec
push
leave
sub
or
lods
clc
pop
idivb
int3
push
icebp
cmp
push
inc
rorb
pop
xchg
and
add
pushf
push
repnz
loope
ja
add
push
xchg
jne
jb
ret
dec
and
inc
xlat
xor
mov
dec
add
popf
in
push
fadds
and
es
pop
stc
fwait
xchg
adc
loop
dec
daa
or
loope
add
adc
test
dec
out
repnz
jb
xor
inc
pop
cltd
int3
adc
pop
mov
pop
jp
pop
push
pop
or
out
fidivl
sbb
in
xor
insb
or
mov
xchg
xor
push
cmc
mov
nop
mov
shrl
xor
push
jne
inc
movsl
cmp
bound
mov
dec
mov
clc
out
pop
push
xchg
imul
test
js
mov
call
add
loope
arpl
xchg
aam
test
and
into
mov
outsb
aaa
and
les
pop
ret
lock
mov
adc
sub
adc
and
outsb
mov
int3
das
lods
push
mov
mov
std
lret
into
dec
push
insl
rolb
mov
mov
mov
jmp
lods
aad
and
nop
add
sub
or
adc
jno
pop
gs
add
enter
and
mov
out
sub
jne
sub
nop
mov
into
mov
cs
xchg
in
lahf
rol
push
out
mov
mov
jmp
dec
sub
test
stos
push
ffreep
pop
mov
inc
repz
pushf
lea
jbe
lret
sbb
jns
sbb
test
out
stos
es
movsb
cmp
in
xchg
stc
enter
mov
add
mov
int
dec
aam
cmp
cmp
mov
sub
ja
lret
xchg
sbb
mov
mov
iret
fwait
xor
and
xor
imul
popf
and
outsb
ss
add
ljmp
and
mov
push
xchg
mov
cmc
repnz
or
out
adc
shr
test
push
mov
aam
stos
add
and
push
inc
icebp
pop
jno
fmull
push
pop
push
push
or
xchg
pop
enter
loopne
lret
insl
push
xor
mov
icebp
lods
mov
cld
push
inc
xor
loopne
xorb
movsb
pusha
jge
rcrb
lret
icebp
xor
aad
loop
and
mov
sbb
mov
mov
cli
cmp
mov
sub
jle
jle
mov
cld
or
lahf
ret
push
jp
jge
stc
in
adc
sbb
loop
push
mov
sbb
push
xorl
in
bound
push
cli
in
xorl
push
mov
shrb
adc
mov
rcl
sub
inc
jecxz
and
repnz
orb
xchg
mov
jbe
inc
sbb
or
enter
mov
pusha
addr16
jge
or
cbtw
out
sbb
inc
xor
and
adc
cmp
aas
mov
fcmovnu
add
stos
fucomi
das
cli
add
or
fbstp
mov
sahf
nop
movsb
les
in
push
icebp
inc
sbb
dec
mov
jbe
or
dec
jae
aas
mov
imull
dec
sbb
jo
or
in
test
arpl
jmp
mov
out
xchg
xor
jl
dec
loope
rclb
sbb
sbb
inc
push
clc
sub
jmp
std
push
mov
xchg
jo
add
aas
sub
leave
add
adc
or
dec
icebp
dec
sub
cwtl
add
rcl
div
push
in
lcall
sub
out
loope
mov
loop
lret
pop
mov
pop
pop
and
gs
jmp
incl
cmc
mov
std
lock
mov
jge
sub
mov
mov
loope
int3
addr16
in
scas
imul
fidivrs
sub
notb
lahf
lret
aaa
loope
mov
inc
sbb
pop
outsl
movb
mov
push
test
inc
xor
mov
out
sbb
xchg
and
xchg
lods
cmp
fucomip
lret
cltd
mov
out
xchg
cmc
cli
mov
and
dec
mov
jno
jmp
gs
jl
cmp
ret
aam
pop
icebp
popa
pop
pop
fs
mov
inc
jbe
in
sub
dec
pop
outsl
pusha
mov
gs
or
das
aam
movsl
mov
nop
pop
push
or
mov
jge
mov
test
ret
js
stos
negb
jne,pn
fwait
xor
das
pop
lods
sub
addl
incl
inc
ja
icebp
sub
xor
sti
mov
xchg
cld
pop
fdiv
adc
lea
out
aad
loope
roll
lock
aas
movsb
mov
inc
add
cmc
push
nop
popf
roll
dec
dec
pop
pop
je
inc
xor
mov
fildll
mov
or
push
jge
enter
push
stos
popf
pop
xchg
lret
add
mov
cmp
adc
in
fnsave
push
test
fldt
pop
jl
and
movsl
sbb
por
adc
pop
xchg
mov
add
test
or
mov
mov
fiaddl
rcr
pop
sbb
test
or
outsl
sti
add
jp
ljmp
inc
scas
shlb
ret
pusha
scas
pop
int3
scas
dec
and
mov
jmp
outsb
enter
push
xchg
test
inc
outsl
nop
shll
lret
test
pusha
cmpsl
test
fidivrl
test
aas
ds
loopne
shll
lret
or
xor
das
js
jle
shrb
mov
push
jnp
adc
pop
shl
sub
xlat
cli
push
xchg
movsb
scas
fwait
bound
andl
subl
ret
arpl
ja
por
mov
sbb
lret
rorl
out
xor
repz
mov
and
pop
mov
sub
imul
inc
ret
inc
jo
je
das
adc
xchg
pop
push
pop
xchg
faddl
xchg
pop
mov
adc
push
add
icebp
inc
scas
adc
std
sub
jbe
mov
push
std
cwtl
add
adc
adc
fldenv
pop
daa
mov
xlat
in
test
orb
fwait
js
mov
mov
cli
push
push
int
mov
push
jg
insb
cld
lcall
into
inc
stos
lea
inc
jg
add
adc
int
loope
mov
ss
mov
sarl
push
mov
dec
sub
xor
mov
cltd
cmp
and
dec
jmp
les
insl
sub
stc
sbb
dec
in
call
cli
repnz
jge
push
mov
aad
ss
sub
xlat
mov
xchg
cmc
repnz
bound
filds
dec
fidivrl
ret
aad
jns
rcrl
fld
dec
sbb
cmp
lcall
imull
addl
xchg
jo
mov
imul
lret
hlt
out
scas
dec
cmp
pop
in
sbb
adc
push
fs
addr16
inc
dec
leave
cltd
dec
ret
in
mov
int3
idivl
mov
cmp
sahf
mov
sub
fmuls
mov
mov
out
or
dec
push
scas
in
mov
out
pop
pusha
out
mov
aad
or
mov
cs
add
clc
dec
ja
outsl
sti
adc
mov
pop
hlt
or
movsl
dec
add
aam
sub
cmp
cltd
sti
mov
cmp
test
mov
gs
fnstenv
inc
jl
mov
flds
aaa
dec
push
sbb
aad
out
jmp
repnz
fidivrl
aas
sbb
dec
fisttpll
sarl
dec
xchg
out
ret
push
push
out
mov
mov
inc
sti
pop
push
jp
mov
add
adc
divl
in
cmp
mov
sahf
call
pop
fs
test
jne
test
add
loope
data16
push
cmp
inc
cmp
pop
dec
push
mov
mov
je
sub
mov
pop
cs
push
push
cmp
jge
es
andb
jmp
jecxz
cmpsl
dec
aam
push
mov
out
in
insl
ret
cld
clc
mov
cmc
mov
scas
xchg
push
dec
inc
js
adc
or
mov
fcoml
mov
fs
in
outsl
pop
mov
mov
sbb
sub
shl
xor
ds
push
cmpsb
jnp
stos
or
and
add
aaa
or
fwait
sbb
test
ss
and
inc
fmuls
pop
mov
mov
adc
lods
fcomps
sub
cmp
xchg
xor
mov
aaa
in
adcb
jmp
das
push
xor
pop
sbb
xchg
and
mov
mov
inc
je
mov
loop
or
xlat
jmp
xchg
jg
mov
enter
pop
enter
add
sbb
idivl
cwtl
inc
shll
or
aas
jp
arpl
or
jmp
xor
mov
outsb
adc
outsb
push
repz
lret
mov
mov
imul
mov
cmp
inc
and
mov
enter
cmp
js
mov
push
dec
daa
fcomps
mov
pop
push
mov
stc
xchg
jmp
stos
sahf
or
jecxz
imul
xor
mov
int
sub
cmp
mov
mov
scas
xchg
shlb
push
repnz
shl
outsl
push
jg
in
xchg
pop
cmp
and
pop
mov
rorl
lret
cmp
xchg
adc
add
int
sbb
or
sbb
sub
add
bound
mov
aam
jl
cmpsb
cmc
dec
push
add
xchg
imul
jg
cwtl
pusha
fwait
adc
jbe
ret
leave
push
sub
enter
leave
dec
bound
push
imul
adc
dec
jle
lds
sub
mov
notb
je
sbb
pop
and
push
test
mov
daa
and
cmp
sahf
sbbl
aas
dec
sbb
repz
mov
add
cmpsl
jbe
sbb
imul
addr16
mov
cmpsb
pop
xchg
xor
push
xchg
cmp
jge
add
out
bound
mov
mov
test
mov
xor
fidivrl
pop
mov
inc
jne
ret
jmp
lcall
pop
leave
lds
jmp
rcl
enter
je
rol
push
ljmp
int
jge
push
popa
imul
loop
mov
repnz
bound
inc
jns
cmp
pop
mov
fidivs
mov
fadds
clc
shr
test
pop
stos
jno
imul
pop
dec
in
mov
lret
movsb
cmpsb
lds
or
fdiv
daa
pop
jo
aad
addb
repnz
mov
loopne
pop
xchg
sub
js
stos
cli
outsb
or
mov
dec
cmp
test
and
adc
mov
adc
push
inc
inc
sub
imul
je
or
add
in
fsubr
jl
jl
jmp
jo
cltd
mov
stos
outsb
scas
iret
jbe
sbb
jb
je
stc
icebp
jns
test
mov
inc
ljmp
xor
test
add
das
inc
jo
enter
popa
int
ret
xor
inc
imul
imul
and
mov
aad
shlb
out
push
and
xchg
fs
je
pop
mov
mov
adc
jne
xchg
and
hlt
jnp
pcmpgtd
data16
pusha
add
jp
pop
inc
inc
std
in
test
mov
in
adc
adc
pop
insb
aam
lods
js
mov
push
dec
aam
push
dec
shlb
scas
mov
nop
xchg
mov
repz
pop
test
leave
xchg
mov
in
jge
xchg
jnp,pt
gs
mov
adc
adc
adc
je
in
negl
mov
mov
in
xchg
mov
sub
popa
out
pop
or
mov
cmp
dec
out
and
adc
stc
leave
rcl
jbe
jne
adc
mov
and
sti
ds
pop
les
jl
enter
stos
sub
imulb
inc
enter
aaa
mov
scas
sub
sbb
mov
lret
sbb
adc
into
jl
aam
mov
je
jo
mov
fnstsw
add
mov
push
mov
enter
cmc
mov
mov
sbb
lods
enter
fldcw
decl
xor
pop
fcmovb
daa
arpl
sbb
data16
outsl
xchg
lea
xor
jae
adc
mov
scas
lahf
push
or
ss
push
ficoml
inc
adc
ror
popf
cmp
xchg
xor
add
jp
xchg
mov
push
dec
jecxz
mov
push
bound
shrl
adc
in
insl
scas
pop
adc
ja
je
inc
imul
mov
sub
fdivrs
js
adc
fs
mov
mov
pusha
pop
xor
fisubrs
inc
cwtl
dec
fdivs
cmp
mov
nop
iret
xchg
jns
push
shlb
int
cli
mov
je
fcmovnbe
scas
fistps
ds
pop
sub
mov
rcll
fstpl
xchg
jne
jge
inc
xchg
mov
test
fnstenv
push
dec
rorl
mov
pop
cs
xor
pcmpgtb
jmp
push
dec
xchg
mov
and
sbb
js
jl
rcll
mov
cld
mov
int3
orl
push
mov
inc
mov
pop
mov
bound
testl
out
lods
test
loop
xor
or
enter
push
repz
inc
inc
imul
scas
adc
sbb
and
clc
daa
scas
pop
xor
aaa
rclb
mull
out
into
adcb
leave
ror
bound
add
mull
shrl
andb
movsb
cli
push
cmpsl
insb
jecxz
xor
sbb
pop
scas
push
cmpb
arpl
pushf
sub
lret
cltd
cmp
sti
xor
cmp
fdivr
dec
lods
adc
data16
jo
mov
ljmp
dec
and
cmp
pop
adc
js
iret
xor
inc
push
push
pop
cmp
add
loop
xor
dec
adc
pushf
mov
mov
repnz
mov
leave
pusha
mov
icebp
arpl
rcrb
adc
shr
pop
cld
sbb
fidivl
fidivrl
jp
sbbb
maxps
movsl
fistps
or
sti
and
fs
and
sbb
popf
repz
js
or
mov
sahf
mov
pop
fwait
add
pop
or
sub
mov
sbb
fmuls
in
test
aam
out
xor
ds
out
pop
cwtl
sbb
pop
push
push
dec
imul
xor
rcrb
sbb
dec
test
call
sub
in
jmp
xor
push
pop
aad
pop
addr16
cmpl
or
subb
and
xor
lock
sbb
cli
aad
fnstsw
push
out
pop
xor
mov
pop
inc
push
dec
aaa
mov
push
mov
dec
ret
adc
dec
rolb
hlt
mov
cmc
jge
jmp
movsl
cld
jg
pop
int3
aam
adc
xchg
scas
push
nop
imul
or
adc
dec
clc
adc
rcrl
mov
adc
in
sub
push
outsl
cmp
or
adc
iret
xor
ret
inc
pusha
xchg
and
shlb
add
and
in
mov
cs
add
pop
nop
outsl
mov
es
jae
ficoml
clc
mov
cmpb
orl
push
aaa
mov
aaa
xchg
mov
or
or
pop
cmpsb
shl
addr16
fsubrp
or
movsb
and
push
sub
dec
xchg
pop
cwtl
jg
dec
inc
das
and
mov
mov
lret
inc
pop
ljmp
pusha
jbe
push
mov
test
adc
roll
push
data16
dec
jecxz
jns
lea
mov
mov
iret
mov
mov
cmp
mov
and
sti
fiadds
adc
sub
in
jb
sbb
mov
mov
jae
pop
adc
dec
inc
je
mov
ret
mov
xor
bound
out
movsb
loop
pop
into
inc
push
jl
lds
xchg
xlat
adc
or
push
mov
in
imul
mov
dec
add
sbb
dec
or
lds
pop
mov
fidivrs
add
mov
sub
pop
movsb
mov
adc
arpl
xlat
and
ret
sbb
jb
xchg
push
xchg
aas
mov
jmp
xor
imul
add
fadds
pop
das
aam
pop
xchg
xchg
mov
and
mov
cltd
mov
adc
dec
jmp
or
sbb
xchg
pusha
bnd
cli
std
cli
stos
mov
fld
push
push
inc
pop
mov
mov
int3
into
mov
les
call
andb
outsl
icebp
jecxz
mov
loopne
jno
inc
xchg
ds
cmc
enter
mov
rcrb
in
mov
bound
outsb
icebp
lock
mov
mov
sub
scas
rcr
int3
mov
ficompl
out
sar
repnz
pop
icebp
dec
xchg
scas
out
jo
jp
xor
lcall
daa
pop
fwait
or
fildll
adc
movsl
cmp
lock
xchg
pop
inc
mov
mov
pop
mov
sbb
dec
pop
mov
mov
mov
inc
pop
cltd
sub
jle
inc
sbb
lcall
pop
jns
scas
cmp
test
dec
jle
and
fdivrs
int
jmp
mov
cmp
adc
xchg
and
cmc
add
fsubrl
fptan
pop
xchg
adc
xchg
xchg
xor
add
mov
mov
frstor
mov
lods
imul
das
or
xor
sbb
fdivrs
add
xor
dec
dec
enterw
mov
pop
inc
push
mov
dec
out
fmull
fidivrs
xchg
sub
jge
cmp
fldcw
insl
add
orl
sub
outsb
xor
adc
push
clc
jne
inc
ret
jbe
scas
cmp
dec
out
fcoms
mov
xchg
imul
dec
sbb
xchg
loopne
mov
lods
pusha
pop
cmp
pop
ljmp
sub
fldt
mov
jno
lahf
mov
push
mov
sti
add
notb
cltd
cmpsb
fstps
data16
mov
jecxz
push
int3
insb
out
aas
fs
xor
and
stc
and
cli
mov
push
subl
xchg
mov
sub
adc
rcrl
ret
gs
popf
xor
jecxz
daa
in
push
mov
push
lods
inc
push
sarb
outsb
inc
pop
inc
xchg
xchg
mov
in
cld
mov
lahf
aad
sbb
mov
xchg
out
test
pop
pop
repz
push
int3
fstps
dec
sbb
jl
xor
mov
out
out
loopne
xchg
sahf
int3
das
lds
push
fstpt
test
call
push
bound
lahf
adc
sbb
sub
jnp
lea
mov
pusha
les
xchg
cwtl
test
into
ja
test
fldl
clc
in
imul
movaps
cmp
sbb
add
lods
or
mov
andb
adc
mov
jge
mov
in
push
inc
rclb
and
or
popa
out
push
push
push
fcompl
mov
pop
mov
js
inc
mov
jne
jmp
popf
stc
sub
xor
rcrl
jae
push
mov
push
lret
and
cmp
cmp
rol
mov
shl
jae
lcall
mov
dec
inc
into
add
out
mov
dec
dec
in
jmp
mov
aaa
pop
testl
xchg
sub
scas
fistpl
ljmp
ret
xor
aaa
adc
adc
or
in
lahf
jne
jge
test
xor
jecxz
mov
ja
cmovo
insb
jne
add
pop
aad
lock
stos
mov
add
mov
push
mov
test
cmpsl
hlt
mov
aas
data16
pop
fiaddl
pop
dec
sbb
in
cmp
push
repz
jnp
inc
push
xchg
dec
jbe
mov
adc
pop
inc
test
addr16
mov
das
inc
ds
out
xor
pusha
in
dec
data16
enter
push
fs
push
inc
jo
mov
ret
out
mov
popf
add
cmc
mov
jae
fimuls
lret
xor
lds
mov
sbbb
test
xchg
and
sub
pop
mov
out
loope
or
pop
mov
out
or
out
test
adc
cmpb
mov
add
jbe
sub
cmpsl
leave
out
call
mov
bound
mov
or
leave
mov
adc
outsl
dec
lahf
lea
jp
scas
pop
test
add
xor
mov
xor
ja
jg
dec
push
fucomip
xchg
and
inc
shrl
or
dec
lock
xor
push
sti
out
fidivrs
dec
popf
push
add
insl
xorb
hlt
mov
mov
mov
sbb
es
out
mov
popa
addb
sbb
ret
loopne
je
xchg
int3
mov
mov
pop
jnp
rcrl
arpl
push
sarl
cmp
rclb
arpl
dec
out
inc
ja
inc
pop
iret
mov
jnp
pop
xchg
fcmovne
sub
inc
cltd
dec
xchg
enter
pop
mov
add
shll
inc
icebp
mov
jns
mov
scas
call
lahf
dec
add
popf
fdivrl
into
mov
xor
adc
jecxz
movsb
add
lock
dec
cmpsl
out
loope
xchg
add
leave
je
sub
xorb
push
je
je
xor
test
xchg
shll
sub
xchg
rcrl
fnop
dec
cmp
jg
mov
push
mov
imul
push
dec
test
mov
push
insb
in
push
and
or
xchg
mov
ljmp
into
aaa
lahf
out
jmp
adc
addr16
or
adc
pop
sahf
jae
pop
xchg
jae
mov
sbb
test
in
stos
iret
sbb
mov
ljmp
lcall
andb
icebp
xchg
pop
xchg
push
movsb
jecxz
sbb
rol
xchg
js
pop
in
mov
mov
out
xor
scas
insb
lds
cs
fisubrl
add
gs
gs
imul
fldt
loop
add
mov
in
cltd
push
cmp
adc
jg
ret
call
ret
jbe
dec
xchg
add
cmp
scas
stc
pop
jns
mov
sub
mov
in
xorb
mov
mov
out
add
mov
imulb
aam
or
popf
in
out
cmp
xacquire
out
mov
in
cli
jp
pushf
fdivrs
or
cld
cmp
sbb
push
sub
pop
cmpsb
decb
fldcw
cmpsl
dec
xlat
dec
dec
mov
sub
imul
push
outsb
lret
lea
sub
jb
jmp
xchg
pop
leave
popf
and
int
dec
pop
mov
mov
bound
loop
add
bound
insb
mov
inc
mov
xchg
rclb
cltd
cli
ljmp
jb
fcoms
pop
xorb
aas
and
cltd
push
lea
movsl
push
in
mov
ja
insl
fstl
jbe
movsl
sbb
scas
mov
arpl
movsb
cmp
testb
fildl
icebp
push
ret
imul
arpl
movsb
adc
jae
xor
xor
sbb
ret
ja
lods
pushf
cld
lea
cld
xor
push
or
std
xchg
xor
lods
push
jecxz
dec
shll
sbb
js
xchg
iret
adc
inc
and
xchg
pop
into
imul
adc
sub
push
mov
dec
mov
fwait
jge
or
into
sub
jns
lcall
int3
add
pop
cld
dec
ret
pop
rolb
mov
adc
movsb
xor
imul
les
or
enter
arpl
pop
in
xlat
iret
cbtw
cs
in
inc
outsb
std
pop
mov
inc
push
mov
xchg
pop
cmp
mulb
push
fwait
movsl
push
pop
adc
gs
push
push
adc
push
imul
lods
xchg
loop
sahf
push
fstl
jecxz
mov
xchg
rcll
test
xchg
sbb
xor
repnz
jg
shl
lods
mov
xchg
pop
repnz
jg
xorb
popa
lret
lret
call
sbb
xor
lret
jge
int3
and
andb
cmp
aam
xchg
mov
dec
mov
cmpsl
sub
sbb
jbe
xor
sub
shr
jg
movsl
or
aas
xor
xchg
jnp
mov
lgs
and
nop
inc
mov
add
inc
mov
fdiv
loop
lret
xor
in
sub
dec
push
add
jnp
cmc
pop
add
rol
scas
adcl
xchg
xchg
arpl
dec
aas
xchg
sarl
add
adc
in
stc
dec
jecxz
dec
push
stc
push
loopne
mov
repnz
in
add
sbb
mov
xor
rorl
call
sub
test
fisubs
or
mulb
movsl
lcall
leave
push
clc
scas
lock
cmp
xchg
mov
jne
mov
push
aad
int
mov
or
jl
bnd
xchg
in
lock
mov
or
and
test
sub
or
jecxz
or
inc
and
xor
jl
repnz
lret
xchg
and
and
daa
mov
mov
paddusw
ja
inc
push
jnp
out
push
xchg
xor
imul
stos
movsb
ljmp
lods
xorps
mov
cmpsl
push
sub
or
and
aam
push
mov
mov
icebp
not
and
or
or
xchg
adc
add
inc
xor
sbb
pop
lock
sbb
jge
lock
pop
fidivs
ja
cli
add
cmp
loop
out
je
cmp
ja
out
xlat
lcall
lods
sbb
jae
pop
lods
movsb
sbb
inc
sbb
aas
xchg
mov
mov
adc
or
pushf
push
int
pop
std
jmp
insb
add
aam
and
jb
addl
sbb
sub
cmpsl
dec
je
and
push
dec
pop
sbb
std
adc
test
pop
or
scas
mov
cmp
jbe
lret
pusha
sub
lcall
jb
cmc
sbb
pop
es
cmp
popf
dec
add
xchg
push
or
sub
outsl
scas
arpl
aaa
cld
pushf
xchg
mov
mov
lret
jno
icebp
stos
es
lahf
or
popf
stc
stos
sub
mov
movsb
cmp
aad
lods
mov
loop
cwtl
sub
ds
mov
test
gs
mov
rcll
lret
mov
and
stos
cmpsl
test
inc
hlt
push
and
test
movsb
pusha
roll
hlt
scas
fidivrl
mov
idiv
adc
or
sbb
in
jnp
sbb
cmp
xchg
sub
adc
sub
add
jno
mov
inc
push
stc
cmpsb
jno
and
les
mov
je
les
adc
xchg
sub
mov
inc
mov
or
and
jne
int3
addr16
scas
sbb
mov
pushf
insl
inc
jb
int
xchg
adc
fwait
stos
outsl
pop
xor
mov
ljmp
hlt
mov
add
mov
jl
add
aas
je
out
sub
idivb
mov
mov
hlt
adc
add
cmp
in
xchg
aaa
jbe
sbb
test
pop
cmpb
fiadds
jae
je
sub
icebp
int
jecxz
lods
mov
int
add
mov
xor
adcl
cmp
mov
inc
sub
mov
adc
cs
ja
call
lods
xlat
dec
pmaddwd
test
or
dec
mov
in
fwait
outsl
or
fs
adc
pop
cmp
push
mov
into
fisttpll
mov
shrd
cmp
cmp
int
fisubl
dec
xor
test
and
dec
fistpll
jecxz
xchg
stos
xchg
or
mov
pusha
push
xor
cmpsl
xor
iret
or
adc
jae
shlb
adc
stc
in
imul
notl
adc
add
enter
dec
add
and
mov
pop
sbb
je
jecxz
cmc
cmp
je
adc
sub
int3
mov
rcl
xchg
jae
jbe
test
std
inc
xor
es
mov
mov
popf
mov
cmc
pop
pop
loope
mov
js
js
out
dec
xchg
add
mov
push
mov
fsubrl
pop
cmc
fcmovnu
xor
imul
in
jl
add
repnz
aas
mov
mov
cmp
repz
inc
les
push
xchg
fs
add
cltd
cli
bnd
mov
movsl
adc
xchg
sarb
push
and
dec
loop
lds
mov
sub
sub
insl
sub
push
lods
out
shlb
subl
or
pop
aas
push
in
icebp
es
es
enter
sub
fwait
pushf
lock
push
jnp
or
leave
push
jmp
subl
les
cmpsb
repz
and
sbb
popf
dec
add
rolb
clc
outsl
aad
adc
mov
lcall
jmp
jge
mov
dec
xlat
lds
test
mov
movsb
int3
popf
xor
and
jmp
imul
add
ret
gs
and
cmp
cmp
mov
dec
scas
scas
mov
jbe
sbb
mov
dec
dec
mov
adcl
call
fwait
mov
sub
jle
xor
mov
mov
xchg
cmp
push
push
fcoml
inc
adc
aad
loope
add
push
cmc
inc
or
ljmp
push
nop
mov
xchg
scas
adc
xchg
jl
inc
jmp
rol
inc
dec
mov
outsl
iret
fldcw
mov
or
roll
andb
clc
pop
adc
push
cs
loopne
dec
pop
es
icebp
gs
insl
add
jo
jmp
jne
xor
mov
xchg
push
inc
jnp
jmp
je
in
int
jb
sbb
xchg
into
or
pusha
xor
lcall
jb
jg
jle
cli
dec
or
or
mov
mov
jmp
pusha
or
cs
ja
in
jnp
mov
hlt
ds
jmp
mov
mov
das
shlb
jle
jbe
or
add
adc
idivb
xabort
scas
and
mov
inc
sbb
adc
push
cmp
inc
sti
rclb
aaa
ret
xorl
mov
push
rcrl
push
mov
imul
xor
or
sub
dec
fldl
or
mov
xor
aam
pop
and
and
in
pop
cmp
test
jo
adc
mov
fwait
xchg
bound
xchg
shl
xchg
mov
xchg
inc
and
jp
std
mov
sti
xchg
dec
xchg
push
adc
jp
push
aas
cld
push
add
mov
xlat
add
push
adc
cmp
in
dec
pop
push
add
inc
std
cmp
and
cli
push
cmp
cmp
addr16
ss
add
fsubl
cmc
jg
mov
out
cmp
cwtl
cmp
push
sub
sti
stos
scas
jno
adc
mov
adc
dec
lret
test
or
pushf
insl
xchg
rcll
pop
aas
xchg
loope
ja
clc
loope
pop
mov
adc
xchg
jl
jbe
shlb
inc
xor
adc
cs
leave
lahf
roll
dec
ds
dec
and
in
push
roll
xor
pop
fcmove
pop
mov
shl
cmpsl
pop
ret
or
sub
jmp
and
push
ja
xchg
inc
hlt
pushf
push
mov
mov
xchg
mov
mov
mov
fldt
push
xchg
fstl
and
sub
call
mov
fmuls
or
inc
sub
or
in
sbb
js,pt
adc
rcl
sbb
clc
pop
or
sbb
inc
sbb
sbb
sti
dec
dec
test
movsb
push
adc
mov
mov
test
insl
jg
lret
push
jle
sub
jl
dec
lahf
jno
outsb
push
nop
cld
jmp
inc
fistps
sub
jecxz
lret
fwait
call
jecxz
inc
push
mov
inc
xchg
insl
sbb
cmp
or
shll
xchg
mov
mov
dec
cs
jl
pop
and
and
loop
xor
xchg
test
mov
fwait
movsl
lcall
xchg
ljmp
push
pop
imul
mov
xlat
push
pop
testb
add
std
leave
jnp
decb
aam
mov
iret
int
adc
mov
pop
insl
mov
mov
lcall
push
daa
add
and
js
and
mov
imul
shll
out
out
out
shr
ljmp
jle
cmp
inc
sub
push
or
cmp
test
pushf
cmp
aaa
outsb
insl
lcall
xlat
xchg
or
add
xchg
jge
cld
cmp
mov
add
push
mov
pop
pushf
int3
jo
push
test
adc
sub
loope
or
leave
cmpsb
sbb
lcall
movsb
adc
mov
mov
fdivrl
out
ljmp
outsl
mov
dec
dec
inc
lret
lock
mov
jmp
sbb
pop
je
fdivl
in
nop
push
xor
or
fimull
cmc
fdivl
test
gs
insb
dec
popl
outsb
cmp
xlat
mov
sub
xor
insb
push
dec
ljmp
jl
out
fstl
or
cmc
adc
pushf
push
fdivrs
repz
cs
aaa
xchg
mov
dec
ljmp
lahf
and
es
pop
insb
push
xchg
xchg
and
cmpsb
and
cld
lahf
push
add
mov
nop
mov
std
insb
push
jne
ficompl
call
xor
out
xchg
sub
xchg
fcomps
movsl
inc
cmpsb
sub
jl
xchg
adcl
icebp
push
mov
sbb
jb
jp
dec
rcll
outsb
or
stos
sti
mov
inc
jo
mov
xchg
cmp
adc
and
shlb
jns
push
jl
lock
inc
addr16
jmp
ja
ljmp
cltd
adc
pop
push
jl
lret
dec
jecxz
leave
sub
pop
icebp
inc
adc
sbb
xchg
dec
jecxz
dec
pop
mov
jmp
in
xor
ljmp
cld
rolb
cmpl
repnz
stos
inc
lahf
mov
add
mov
scas
aas
and
data16
lods
je
call
jg
dec
push
mov
inc
sub
jmp
mov
repnz
add
dec
xchg
pusha
gs
push
cwtl
push
adc
push
fstps
loope
jge
mov
repz
jl
mov
test
lds
dec
ss
roll
jge
insb
lcall
call
jge
inc
loope
test
fldenv
ljmp
or
aad
pop
mov
mov
xchg
in
push
out
and
mov
ret
test
pop
xchg
mov
adc
aas
or
repnz
push
mov
push
cmp
xor
or
lds
lret
mov
cmpsl
pop
in
lahf
fmuls
mull
push
or
xchg
inc
mov
push
xchg
push
pop
cli
add
and
or
mov
inc
stos
jl
and
mov
loope
addr16
data16
mov
mov
call
mov
pop
in
insl
pop
pushl
mov
mov
loop
ret
aam
pop
addl
cmpsb
sub
pusha
xchg
xor
inc
jmp
pop
xchg
and
xchg
cwtl
loope
ret
mov
and
mov
pusha
stos
daa
cmp
cmp
push
int
lods
cltd
inc
gs
imull
fdiv
inc
fs
pop
divl
es
xor
xor
in
cmp
movl
mov
and
in
jecxz
out
popf
sub
leave
push
aas
outsl
and
jmp
test
add
dec
xchg
lds
xchg
sbb
enter
jmp
je
incb
jecxz
push
inc
or
adc
or
push
cmp
add
pop
aaa
sbb
scas
test
enter
call
adc
and
push
ficoms
add
sub
or
xchg
sti
js
jg
adc
es
ljmp
add
das
inc
add
or
addr16
jns
fwait
fwait
sub
mov
outsb
dec
adc
add
adc
sub
ds
mov
leave
scas
mov
es
jno
test
sbb
fiaddl
stc
sbb
popf
mov
scas
cmpsb
test
pop
bound
jmp
push
into
stc
out
shrd
push
lahf
mov
pop
jo
jae
fucomp
cmp
out
push
loopne
sbb
sub
fidivrl
inc
jb
push
pusha
test
inc
shll
stos
mov
cmp
fs
vunpcklps
add
out
test
ss
fstp
pop
in
jge
loopne
pop
inc
push
xchg
sbb
fmul
pop
data16
cmp
ret
adc
mov
fisubl
and
pop
fdivrs
iret
mov
aam
dec
jmp
dec
cmp
and
and
sti
mov
fimull
mov
lret
pop
jo
sahf
ja
mov
cmpsl
adc
stc
repnz
in
cld
jl
mov
fadds
cld
ljmp
mov
hlt
dec
or
mov
in
dec
jmp
inc
sub
or
aas
xchg
nop
cwtl
jnp
fnstsw
adc
jg
ljmp
sub
lret
xchg
adc
sub
jg
lods
aad
test
mov
inc
cmp
mov
add
jg
in
xchg
dec
fmul
xchg
pop
pop
mov
cmp
jg
sbb
or
out
add
inc
mov
ljmp
roll
jae
out
inc
adc
jnp
popf
pop
scas
fnstsw
lds
sub
mov
dec
xor
or
cmp
xchg
adc
loop
adc
mov
aas
into
jmp
mov
cmp
dec
xorb
ljmp
cmp
xchg
inc
ja
dec
push
cmp
pop
lret
mov
stc
mov
loope
sahf
iret
push
aas
fwait
and
arpl
out
lahf
loopne
lahf
movsb
inc
rclb
fmull
and
push
or
mov
stos
lret
add
sbb
mov
sbb
out
pop
push
xchg
std
inc
adc
aas
pop
sahf
test
iret
and
rcrb
and
dec
mov
aam
arpl
or
xchg
pop
inc
add
lcall
mov
jne
les
sub
rcrl
jae
push
clc
lock
adc
mov
push
in
pop
jmp
mov
jb
scas
pushf
push
mov
add
sbb
adc
movsb
add
repnz
stos
push
int3
mov
fimuls
imul
bound
scas
mov
xchg
adc
push
lret
sbb
inc
jnp
dec
push
and
or
inc
and
pop
outsl
pop
aad
jg
and
jne
shll
inc
aam
inc
sahf
cmp
in
imul
pop
ja
daa
lcall
bound
dec
pop
xor
sbbl
sbb
sti
pop
ljmp
ja
testb
dec
jle
in
or
mov
int
fstps
add
adc
cmp
dec
xor
push
lret
arpl
cmp
mov
pop
inc
dec
daa
sbb
pop
mov
inc
xchg
outsl
pusha
std
aad
movsl
inc
xchg
xchg
push
adc
int3
xorb
aad
ds
dec
mov
mov
dec
push
aaa
or
es
rcll
and
outsb
icebp
std
push
nop
mov
scas
xlat
xchg
xchg
sbb
lods
push
adc
pop
inc
xchg
add
sub
cmp
fcmovb
ljmp
aas
loop
pop
lods
in
js
sub
jbe
aad
mov
xorb
xchg
sbb
out
adc
fdivl
in
test
out
fwait
pop
test
sbb
mov
xchg
push
cmpsl
shl
fbld
std
mov
cli
fldt
or
add
std
xor
in
xchg
testb
insb
sbb
jo
or
insb
xor
ja
sahf
mov
cld
cli
insb
push
jb
adc
mov
inc
sti
xchg
push
clc
sbb
jge
cs
stos
imul
fcomps
mov
icebp
add
sub
sub
or
ret
pushf
pop
mov
dec
repz
movsl
cmp
or
in
mov
movsb
or
lock
mov
jno
sub
adc
aad
adc
bound
or
test
int3
jmp
xlat
imul
daa
xor
push
aas
ljmp
loop
and
fs
push
sbb
fnstcw
mov
loopne
pop
and
jle
mov
lahf
and
nop
cmp
jge
sbb
cld
loopne
add
inc
leave
stos
nop
seta
int3
hlt
xor
xchg
movsl
scas
ret
or
dec
ficompl
mov
loopne
or
xchg
jge
or
lea
cwtl
pop
mov
fcoml
xchg
xchg
jmp
sbb
xchg
sub
or
pusha
jge
mov
test
stc
and
lahf
cmp
and
test
add
adc
pop
js
mov
inc
scas
inc
adc
into
mov
dec
lods
fcmovbe
mov
cmp
jp
and
dec
rorl
clc
xchg
inc
xor
jge
ret
inc
ret
divb
insl
pop
xor
out
cmp
ja
inc
mov
sub
popa
mov
push
add
mov
popa
pop
rcll
inc
loopne
push
jmp
or
dec
dec
dec
outsl
ror
ja
pop
imul
subl
xchg
dec
std
jge
enterw
push
lock
mov
and
mov
cmpsb
xor
lahf
aaa
xchg
dec
andb
push
jns
jmp
xchg
lret
mov
cmp
cmpl
dec
jecxz
push
xchg
and
enter
adc
fcom
and
or
pop
popl
aas
sbb
pop
scas
ja
sbb
lock
vucomiss
popa
mov
setae
jecxz
xchg
push
loope
and
jg
push
ja
pop
js
int3
jge
xor
cmp
or
test
or
mov
mov
ja
push
iret
cmc
jns
xor
les
mov
test
int
mov
test
pop
popf
repnz
into
inc
lret
pop
cmp
in
dec
iretw
sbb
sahf
push
mov
cltd
mov
imul
or
xchg
sarb
or
call
and
push
aaa
cli
push
push
testl
cmpsb
in
xchg
bound
add
addb
or
add
sti
lds
mov
leave
sub
fs
in
outsl
mov
insl
loop
subl
ja
jle
stc
cmp
int
lods
pop
lea
push
and
adc
popf
lods
leave
xor
sub
pop
sub
repnz
dec
mov
inc
dec
pop
jp
pop
repz
dec
addr16
add
pop
dec
sti
sbb
and
push
mov
mov
or
cmpsl
xchg
cwtl
mov
in
adc
mov
xor
push
push
hlt
adc
jno
into
push
pushf
shlb
fidivl
out
outsb
call
ret
sub
dec
sub
in
incb
rcrl
cmc
mov
add
jb
aaa
leave
cltd
loope
out
cmp
jge
add
push
repz
movsl
mov
mov
popf
inc
xor
dec
or
cmp
lock
pop
sbb
cli
cwtl
pop
pop
sub
test
add
mov
cltd
fs
add
inc
fwait
jle
mov
shlb
and
mov
lahf
ss
idiv
or
fadd
movsb
cmpsl
loopne
and
rcr
dec
enter
fwait
inc
inc
bnd
es
mov
dec
das
xor
movsb
push
and
push
xchg
dec
fmull
mov
dec
stos
popf
bound
popa
cmp
dec
lea
push
test
mov
xchg
shlb
hlt
dec
jp
or
or
std
fistps
mov
addr16
ret
xchg
mov
out
loopew
dec
xor
cli
adc
xor
adcl
test
icebp
and
popf
or
jmp
pop
shl
ljmp
clc
insl
out
lods
fisubs
dec
idivl
pop
sti
xor
daa
daa
cmp
and
sub
mov
pop
aas
push
jbe
cwtl
ret
push
addr16
xor
lahf
dec
mov
jp
sub
mov
mov
mov
add
or
and
ficoms
sti
mov
bound
aas
and
jb
les
mov
xor
xchg
loop
adc
scas
mov
xor
mov
dec
push
aaa
cmc
xchg
push
sbb
mov
lds
lret
bound
adc
jl
das
outsl
cltd
add
mov
cmp
out
xchg
frstor
mov
pop
stos
pop
push
push
aad
pop
ljmp
pop
push
mov
loopne
push
sub
aam
pop
xor
in
add
xchg
or
insl
cld
cmp
jp
sub
push
imul
sub
lods
arpl
pop
xor
test
nop
xchg
gs
xchg
sbb
push
adc
mov
cmp
iret
popa
inc
in
popa
push
mov
out
dec
popf
icebp
addr16
inc
cld
sub
or
in
adcb
out
xchg
and
int3
jl
int
loope
push
add
inc
fstpt
fxch
mov
sub
mov
push
sbb
inc
rcrl
inc
mov
rcll
dec
xchg
clc
ds
push
xor
lock
test
dec
jmp
je
popl
imul
fadds
pop
enter
xchg
imul
lods
sub
add
jp
repnz
faddp
adc
sub
fcoms
jne
inc
jno
out
rorb
fld
xchg
mov
fstpt
and
mov
jp
or
jmp
pop
stc
jmp
jmp
inc
inc
cmp
mov
andl
sub
pop
imul
bound
sub
popf
or
or
lods
data16
repnz
std
cmp
or
test
insl
lcall
mov
iret
loop
xchg
int
pop
push
out
xor
dec
imul
xor
push
jg
sub
jno
jns
pop
dec
mov
ss
sbb
sub
jle
and
pop
cmp
insl
add
dec
js
jg
arpl
fildll
imull
sbb
fisubrs
pop
mov
out
cmp
or
inc
mov
mov
jns
and
dec
or
dec
jns
push
add
xor
popa
ret
mov
loopne
push
mov
es
fists
sub
popf
sub
rcrb
xchg
imul
xor
hlt
repnz
je
js
add
fwait
jl
cld
mov
fsubp
int
in
xchg
daa
xchg
jno
sarb
xchg
loope
leave
or
aam
or
ja
push
ficomps
mov
ja
lods
inc
cld
cmp
mov
cmp
leave
pop
sar
dec
inc
popf
inc
jbe
and
stos
rcrl
testl
insb
je
inc
xchg
mov
mov
xor
mov
pop
jae
hlt
mov
in
add
setbe
push
ja
rcrl
cmp
fwait
pop
pop
add
in
mov
scas
faddl
movsb
test
push
daa
rol
mov
cld
push
test
int3
pop
inc
cmp
jns
clc
jae
inc
fldl
xor
jb
and
cmp
insb
cmp
adc
popa
jb
or
push
ss
inc
loop
std
test
adc
int
fisttps
inc
hlt
mov
insb
mov
or
cmpb
cltd
addr16
sahf
andl
aaa
loope
daa
aas
ret
outsl
mov
aaa
arpl
add
mulb
imul
adc
xchg
mov
sbb
dec
mov
mov
dec
in
movsl
fiaddl
lcall
jno
adc
cmp
test
adc
test
sub
call
dec
and
popf
imul
es
adc
cs
fidivrl
insl
lcall
aam
cmpsb
shlb
push
jo
bound
test
lock
pop
and
mov
mov
stc
xor
ja
inc
or
jbe
dec
inc
push
in
incl
mov
leave
pop
mov
aad
cs
adc
outsl
push
mov
test
inc
dec
in
mov
rcll
mov
add
mov
lock
sbb
clc
bound
scas
aaa
jnp
insl
test
or
gs
and
sbb
mov
out
xchg
lods
jo
out
pop
das
push
jae
pop
lahf
xor
lret
and
lahf
adc
mov
mov
add
stos
xchg
xchg
sub
xor
fdivrl
jl
test
out
add
sbb
mov
lods
in
mov
add
xchg
xor
mov
sub
mov
mov
jne
push
adc
and
xchg
push
mov
stc
fisubrs
mov
pop
sub
incb
shlb
jnp
sahf
jl
fdiv
xor
and
push
inc
push
les
push
xchg
push
cmpsl
jns
stc
int3
mov
xor
jg,pn
scas
push
pop
xor
jl
imul
inc
icebp
sub
mov
jge
rcll
into
and
push
push
adcb
rcll
xlat
push
lods
fidivrl
xor
pop
xor
jg
ret
mov
fbstp
ret
popf
int3
ss
mov
pop
scas
jne
push
in
scas
add
flds
push
lcall
test
ret
shl
xor
cld
or
push
mov
shll
cltd
insb
jb
mov
xchg
repnz
and
sub
fstps
mov
ja
subb
fidivrs
xor
push
dec
ret
jmp
sub
int3
push
push
cld
ljmp
sbb
js
mov
mov
jns
mov
mov
pop
adc
adc
inc
mov
mov
push
xchg
cmp
or
cli
xchg
pop
jne
xor
inc
lea
fidivs
movhps
lret
adcb
cmpsl
pop
cmp
test
pop
and
fsubs
lret
adc
dec
add
sbb
out
scas
lahf
xor
adc
cmp
mov
or
inc
xchg
outsb
xchg
push
loopne
pop
mov
add
fsubp
sahf
sub
out
pop
and
lret
lods
lea
popa
sbb
inc
pushf
mov
int3
pop
xor
mov
push
sbbb
lcall
les
cmp
stc
or
adc
cmp
add
push
jbe
aam
fistpll
in
test
sub
dec
lcall
je
cwtl
or
push
push
add
aas
mov
cmp
push
repnz
mov
sub
rorb
cmp
pop
push
imul
stos
enter
xchg
pop
shrl
fcmove
xchg
loopne
jge
sahf
lahf
xor
movl
xchg
shrl
mov
shrb
jae
sbb
adc
out
xlat
rolb
push
fldl
iret
ja
mov
fwait
cmpsb
adc
fsubrl
or
add
es
push
jmp
dec
js
xor
faddl
cmpsl
dec
insb
ljmp
lock
into
add
shrb
mov
pusha
icebp
jbe
rorb
stos
mov
test
pop
sub
pop
jns
shr
jmp
fsts
int
sbb
negb
andl
sti
pop
sub
inc
test
rorb
imul
fidivrs
inc
sub
pop
mov
jmp
scas
in
or
cmp
in
sbb
adc
cmp
shll
adcl
lcall
xchg
lahf
xor
sahf
stc
testb
push
inc
mov
inc
sti
xchg
rcll
roll
icebp
fsubrl
nop
fs
pusha
ljmp
imul
pusha
cmp
add
mov
push
outsl
aaa
dec
mov
mov
pop
ljmpw
xchg
sub
inc
adcl
sbb
mul
stos
mov
fstl
fnsetpm(287
dec
bnd
add
loope
cld
jp
mov
stos
out
mulb
cmp
lcall
cwtl
stos
mov
idiv
pop
les
dec
mov
lods
xor
test
dec
in
push
pop
cmp
nop
sbb
fdivs
sub
mov
xor
xor
icebp
pop
ss
es
jns
insl
adc
jo
aad
jbe
add
fnstsw
push
cmpsl
adc
dec
and
and
jle
in
insb
mov
dec
or
xor
test
mov
or
add
pop
inc
dec
push
pusha
repnz
mov
stc
mov
push
mov
outsb
xchg
cltd
push
cmpsl
mov
dec
lods
mov
rcrb
in
sub
pop
sub
dec
adc
jb
mov
lret
push
push
mov
push
scas
mov
inc
xchg
jge
test
cli
pop
out
jl
adc
push
test
mov
bound
add
movsb
inc
in
fcomps
mov
jo
lods
iret
je
xor
nop
sub
movsb
dec
pop
cmp
call
cwtl
jecxz
pop
mov
fwait
add
and
gs
sub
sbb
aaa
scas
sub
and
ror
pop
mov
cmp
cmp
mov
repz
pop
jmp
shll
adc
nop
lds
addr16
mov
jnp
rcrl
shr
stos
pop
or
lahf
notb
shll
out
dec
pop
sub
lock
xor
inc
mov
dec
cmpsb
jne
nop
nop
mov
push
lret
jecxz
or
data16
ss
sbb
mov
orb
mov
stc
pop
dec
cmp
scas
pop
repnz
repnz
add
sarl
dec
sbb
jno
push
mov
mov
sbb
out
cmp
xor
pushf
push
pushf
cmp
add
fcmovnu
mov
mov
sti
add
das
negb
call
dec
rorb
or
push
jp
mov
sbb
test
mov
sbb
dec
cwtl
call
xchg
cmp
xlat
lea
testb
mov
je
shll
add
jnp
mov
mov
lds
daa
mov
incb
inc
add
jo
mov
or
xchg
and
sub
jb
xor
dec
fstl
push
cmc
jp
lods
push
dec
mov
dec
jno
call
icebp
fcomps
je
inc
sub
adc
xchg
in
imul
fistps
jl
lods
cmpsb
push
mov
dec
jb
loopne
sbb
xchg
push
xor
mov
loope
lods
sti
and
sbb
hlt
mov
into
out
sub
jmp
or
lds
push
aaa
mov
idiv
cwtl
sbb
sbb
pop
mov
jp
adc
test
test
mov
push
jecxz
sbb
movsl
cwtl
mov
test
xor
dec
icebp
jge
push
push
ljmp
and
xor
es
cmp
dec
mov
cmp
pop
cmpsb
and
and
je
scas
mov
adc
inc
enter
mov
js
mov
inc
pop
out
cltd
test
imul
mov
lret
dec
orb
push
xchg
adc
sub
xor
bound
push
jno
sub
aam
pop
sub
sub
rorb
cmp
pop
jmp
jae
fsub
fcmovnb
mov
jns
cmp
xorl
cmp
divl
insb
cmpsb
enter
repz
mov
pop
mov
out
pop
cld
dec
insb
arpl
sahf
adc
enter
sub
aas
mov
xchg
and
lock
pop
add
mov
mov
cmpsb
dec
out
pop
scas
cmp
sub
jl
in
mov
xor
jecxz
shl
out
sub
mov
pop
inc
inc
cli
mov
jbe
std
adc
and
inc
leave
jl
outsl
mov
insl
push
jbe
imul
add
inc
inc
int3
add
pop
or
fsubrs
pop
int3
mov
mov
mov
jg
arpl
pushl
lods
add
movsb
xor
ja
push
cmpsl
scas
push
je
sbb
outsb
in
mov
mov
or
rcrl
sti
pop
push
dec
pushf
mov
cmp
cmp
rcll
cmp
out
and
out
pop
jnp
or
pop
cmpsl
loope
mov
arpl
jge
inc
fwait
je
cmpl
jp
lock
enter
add
test
in
test
stc
cmp
ror
mov
stos
adc
adc
inc
pop
sbb
scas
lods
add
fsubs
jecxz
mov
fnstsw
cmc
mov
and
fcomps
rcr
std
les
sbb
mov
lds
ss
push
movsb
xchg
dec
mov
jae
sub
fs
push
mov
jae
arpl
iret
lock
pop
dec
jle
cltd
jp
fistpl
and
dec
push
xor
jle
mov
push
dec
movsb
repz
adc
out
leave
mov
cmp
mov
or
jle
mov
pusha
or
sub
popf
pop
push
pop
scas
sbb
adc
inc
dec
add
mov
mov
jns
movsl
cmp
outsb
xor
lea
dec
xor
in
insb
sub
in
in
pop
mov
pop
aam
jae
lds
adc
roll
mov
adc
mov
pop
add
push
mov
out
mov
bound
imul
mov
andb
and
stc
add
sbb
dec
xor
pop
or
dec
mov
cmp
jecxz
add
pusha
sub
xor
jmp
cmp
xchg
and
mov
dec
and
sbb
ret
pop
and
rcrl
jo
dec
pop
adc
nop
call
aaa
pop
mov
shll
adc
sbbl
pop
sub
insb
rorb
lds
sbb
pop
xchg
insb
rcll
data16
dec
cmp
jl
test
outsl
inc
arpl
rorl
jb
pushf
jo
xchg
dec
cmp
jg
data16
or
cmp
ds
pop
sbb
adc
jg
lret
xchg
cli
jns
sbb
and
xchg
lods
push
pop
dec
lret
cmp
fwait
lods
cli
jns
mov
add
jmp
cmp
jecxz
or
dec
add
pop
fs
push
mov
mov
jl
mov
xchg
aaa
lds
dec
mull
data16
sub
dec
jl
add
or
jnp
dec
mov
mov
add
push
int
xchg
popa
stc
cmp
ljmp
repz
mov
xchg
and
lahf
outsl
jecxz
mov
fdivrs
aad
scas
in
gs
int3
mov
in
jb
addr16
cmp
inc
jae
sub
inc
out
js
outsl
add
mov
mov
sub
inc
pop
int
lds
aad
outsb
dec
sar
fstl
aad
mov
popa
push
mov
push
mov
loopne
scas
inc
add
pop
sub
inc
inc
ret
das
inc
int3
gs
lock
repnz
repz
jle
js
lods
jge
leave
mov
cltd
mov
dec
std
dec
jne
jae
and
or
xchg
mov
push
cmc
and
xor
pop
std
repnz
rolb
pushf
jg
mov
jae
mov
sbb
rolb
sub
push
fdivs
mov
mov
xor
pop
mov
aaa
xchg
sub
repz
fdivr
cmp
test
mov
out
cmp
fs
cmc
loope
mov
jbe
mov
addr16
lret
xor
or
sbb
shlb
es
mov
jne
out
ret
cli
lods
pop
out
pop
ja
into
mov
and
cmc
dec
cwtl
pop
mov
jge
mov
leave
dec
cmp
aaa
aad
mov
sbb
sbb
shrl
out
lret
mov
jns
pushf
sti
stc
push
imul
mov
test
data16
xchg
xchg
or
cltd
inc
mov
dec
push
adc
sbbl
dec
inc
sbb
js
and
notb
add
int
cmp
cmpsl
aam
incl
jo
enter
stos
inc
test
sub
xor
das
lea
adc
cli
cmp
imul
andl
push
and
lods
mov
adc
jns
inc
int3
ret
mov
lock
ja
adc
out
gs
xor
mov
xchg
icebp
push
adc
lret
and
test
pop
fs
into
mov
sub
push
or
jno
push
movsl
and
popa
fistpll
enter
mov
inc
aad
sbb
fld1
sub
cmpsb
fldenv
inc
js
out
scas
leave
jg
mov
cld
cmp
cmp
sub
dec
jge
into
fiaddl
sbb
lds
mov
inc
dec
out
jne
push
sbb
enter
outsl
mov
add
lock
test
ret
test
aas
test
or
popf
mov
cltd
sbb
add
mov
lcall
fidivrl
sbb
sub
sti
outsb
pop
jb
rcl
pop
cld
and
rclb
movb
rcrb
push
inc
imul
add
stc
fdivr
fadds
push
mov
sub
push
and
stos
fsts
gs
jbe
adc
dec
pop
add
into
jecxz
cmc
jge
sbb
dec
jnp
sbb
push
jb
ljmp
jecxz
adc
add
es
popf
daa
mov
sarl
bound
mov
insw
lcall
imul
pop
add
mov
imul
stos
jecxz
mov
push
clc
pop
shr
sbb
xor
sbb
fidivl
pandn
ljmp
faddp
push
sub
jp,pn
clc
mov
inc
cmp
adc
jno
dec
adc
mov
int3
insl
test
xchg
repz
pop
and
loop
lods
fistl
dec
in
sbbl
mov
xchg
imul
jo
in
mov
lods
cmp
testl
leave
pop
stc
fdivs
or
and
int
dec
cmc
xor
pop
rolb
rcr
cmp
fists
xchg
bound
dec
mov
test
dec
adc
cltd
cmp
mov
inc
xchg
movsb
adc
loope
xchg
popa
jbe
dec
sub
rolb
mov
cmp
dec
cwtl
dec
mov
pop
daa
rcll
dec
mov
aas
and
sub
pop
dec
sbb
or
outsl
rcrb
enter
fs
fimull
jbe
fistpl
add
fwait
and
inc
les
or
pop
inc
lcall
sbbl
mov
add
jp
mov
jo
xchg
test
jnp
pop
cmpsl
loop
fwait
sbb
and
xlat
inc
iret
xchg
mov
pavgw
push
inc
cmpsl
jp
push
xchg
test
and
add
test
pop
mov
mov
stos
jns
decb
rclb
int
push
sub
gs
push
mov
rcrl
ja
jl
int
cmp
gs
int3
lods
cs
mov
pop
pop
xor
scas
adcb
cmp
shlb
popa
aas
add
mov
repz
aad
inc
dec
adc
sbb
mov
fisubl
xor
push
fldt
aam
xlat
lock
dec
insb
jno
das
mov
or
pop
and
add
in
ja
mov
push
rolb
push
bound
push
inc
mov
and
ja
into
pop
js
mov
xchg
inc
jnp
out
adc
cmp
cmc
cld
jp
dec
lds
add
mov
push
fs
lods
addr16
add
xchg
sbb
sti
inc
mov
xlat
add
cmp
out
mov
es
in
icebp
pop
jbe
inc
cmp
aaa
fldenv
jae
mov
out
mov
sbb
adc
fdivl
or
push
mov
stos
push
pushf
lods
mov
js
pusha
test
or
inc
es
fcoms
and
pop
ret
mov
pop
xor
dec
stos
lret
and
ret
movsl
xchg
push
rcrb
cmp
mov
pushf
int3
test
mov
dec
dec
andl
mov
and
cmpsb
ret
test
sbb
or
push
loopne
daa
stos
xchg
xchg
dec
arpl
addr16
or
cwtl
push
rcrb
push
repz
iret
or
inc
jnp
mov
leave
insl
or
repz
xor
sahf
mov
cmp
lea
movsb
leave
scas
inc
stos
mov
arpl
dec
or
adc
push
sti
lods
add
jbe
mov
push
loopne
jbe
divl
adc
std
outsb
iret
pop
test
sbb
shrb
push
jns
cmp
mov
or
mov
xchg
xor
movsbl
dec
adcl
and
dec
ret
cwtl
jp
mov
sahf
and
jge
and
lret
cld
and
mov
and
sbb
xor
icebp
mov
pop
sub
pop
int3
sbb
outsb
sbb
test
xchg
xor
lcall
hlt
inc
pop
fstpt
jo
mov
pushf
jmp
xchg
nop
loop
gs
cmp
out
ds
test
push
cmc
lds
sbb
mov
push
sbb
imul
sub
xchg
sub
xor
andl
fiadds
cmpsl
in
pop
jle
pusha
pop
xchg
push
adc
add
aaa
xor
xchg
xor
mov
divb
or
push
jle
xchg
icebp
lds
mov
dec
int
shrb
xor
jo
or
dec
movsb
rcl
mov
aaa
outsb
push
int3
out
les
dec
or
sbb
outsb
sub
xchg
inc
adc
add
fcmovb
inc
adc
jnp
jmp
push
mov
adcb
xor
jno
pop
push
dec
jmp
add
pop
mov
mov
in
pop
enter
push
inc
pop
sub
aas
mov
xlat
fimuls
leave
sbb
loopne
mov
or
inc
cmc
fucomp
aam
xchg
rclb
mov
imul
iret
loop
sub
sbb
mov
roll
xchg
ja
xchg
mov
pop
push
outsl
push
das
dec
loopne
dec
mov
fmuls
aam
div
in
adc
fwait
lret
pop
fwait
notl
fmull
sbb
enter
jno
push
test
inc
adc
orb
test
aaa
sbb
adc
notl
add
clc
add
test
xchg
inc
mov
sarl
add
fnstsw
loope
jmp
gs
fs
inc
mov
push
test
jecxz
mov
test
mov
rclb
imul
push
cmp
incb
loop
pop
lods
dec
aad
lret
pop
stos
sub
fcomps
jl
fists
std
dec
sub
out
loopne
in
or
iret
jecxz
daa
mov
shlb
cmpsl
add
adc
jno
pop
lcall
fsts
bnd
xchg
ds
jb
fnstenv
mov
pop
cmp
clc
sbb
push
or
mov
imul
les
mov
mov
push
or
pop
les
fnsave
add
and
pop
stos
adc
push
mov
xor
sbb
add
je
mov
push
sub
shrl
test
xchg
loop
es
sub
movsb
push
mov
sti
push
sbb
roll
adc
and
push
mov
mov
fisubs
movsl
and
jbe
cmp
jbe
cmp
adc
mov
xor
ret
outsl
xchg
adcb
push
add
roll
std
inc
lods
aad
mov
lea
pusha
jne
pop
jnp
dec
imul
insl
lret
loop
and
xor
inc
jle
enter
jecxz
fucom
insb
data16
aas
dec
movb
mov
inc
fildl
sub
or
iret
lret
pop
xchg
cmpsl
add
punpcklbw
xor
and
repz
mov
ret
ds
in
jl
pop
or
das
xchg
aaa
pop
add
jl
addr16
hlt
mov
push
repz
mov
sub
pop
pushf
jns
dec
cmp
fistl
jle
push
test
pop
sbb
dec
pusha
repnz
cmp
sbb
ljmp
or
ficoms
dec
sbb
imul
pop
cmp
push
adc
cmp
mov
dec
lods
insb
movsb
pusha
les
sahf
sub
ljmp
mul
movsb
mov
mov
cmp
xchg
mov
hlt
cli
adc
add
sbb
mov
arpl
iret
jbe
jbe
fldl
out
or
mov
cmp
test
pusha
dec
sbb
mov
pop
xchg
cmp
mov
mov
mov
mov
jb
sbb
inc
loop
insl
sbb
xchg
hlt
fnsave
lods
xor
mov
jmp
mov
cmpsb
jo
xchg
pop
pop
aad
popf
stos
dec
loope
lret
ds
pop
rcrl
out
jbe
xchg
adc
xor
setl
cwtl
fbstp
push
jg
push
test
xorb
mov
es
rcl
push
add
hlt
push
cmp
popl
jl
lret
jns
fstl
mull
sbb
mov
lock
ror
mov
sub
and
cld
mov
sub
ds
sbb
lahf
and
xlat
push
pop
int
mov
sub
add
add
inc
test
dec
lock
sub
mov
xor
mov
es
inc
mov
xor
lcall
into
aam
xor
jg
stos
sahf
je
inc
push
or
push
das
sbb
rcrl
cwtl
aaa
insb
ret
js
push
das
sbb
jl
mov
xor
push
jg
data16
lret
nop
stc
sbb
roll
stc
scas
popf
push
imul
in
add
shl
mov
and
xchg
sub
aam
daa
pop
xchg
adc
rol
cmc
mov
mov
sbbb
or
stos
mov
in
cmp
outsb
insb
sub
ret
inc
inc
or
mov
pop
iret
dec
pusha
shlb
cs
dec
and
sbb
mov
jp
mov
sub
dec
mov
mov
dec
popa
xchg
push
jnp
mov
repz
cmp
pop
fwait
push
popf
mov
xchg
jno
scas
mov
test
add
in
leave
fsubl
cmc
inc
repz
jecxz
jle
mov
sti
mov
cmp
leave
jae
fs
lods
pusha
dec
inc
jmp
aas
jl
push
mov
dec
fdivrl
mov
scas
testl
pusha
pop
mov
pop
int
push
jbe
sahf
out
imul
adc
dec
sub
push
sub
jge
mov
xor
popf
add
sarb
stos
popf
dec
cmpsl
test
in
or
mov
mov
shr
xchg
ja
xor
pop
movsl
imul
ss
nop
sub
mov
aas
sbbl
jp
jbe
dec
ficoms
adc
mov
ret
xor
sbb
sub
jmp
jl
xchg
fldt
in
inc
pop
inc
inc
lahf
sbb
dec
jecxz
fwait
shlb
sub
cmp
sub
retw
leave
push
xor
xor
mov
lds
add
lds
cmp
addl
rcl
mov
pop
arpl
out
dec
add
ret
sub
shrl
push
pop
dec
cs
and
push
push
add
or
aad
loope
ret
test
pop
push
or
sbb
addr16
enter
inc
flds
push
shll
scas
call
adc
xlat
dec
iret
pop
lcall
sbb
insl
pop
sbb
mov
dec
outsl
fincstp
xchg
cmp
in
pushf
lahf
ja
dec
enter
lret
cwtl
lret
notb
not
xor
lea
int
das
pusha
add
mov
into
cli
outsl
add
xchg
add
inc
pop
shlb
cmp
push
xchg
pop
sub
add
sub
mov
dec
outsb
pop
fs
ljmp
dec
aad
inc
or
pop
in
jp
popa
pop
ret
mov
cmpsb
out
test
mov
cs
inc
aaa
rcrl
int
dec
negl
add
and
repnz
inc
cwtl
cs
jo
sub
fisttpll
sbb
inc
cmp
mov
mov
jnp
mov
int3
cmp
cmpsl
jno
in
or
cld
mov
adc
mov
pusha
loope
not
test
push
test
mov
and
push
inc
or
adc
mov
adc
jne
xlat
mov
or
mov
add
pop
stos
pop
mov
stos
sbb
roll
es
sahf
orl
xchg
fstl
lret
fwait
xchg
jle
lods
add
mov
pop
xchg
lods
js
jnp
jp
push
sbbb
push
and
aaa
jne
movsb
mov
enter
cmp
popf
iret
loopne
adc
xor
pop
sub
jo
add
push
rol
push
das
xor
dec
pop
inc
sub
in
xlat
int
andl
bound
ss
fistl
insl
lret
lods
mov
mov
sbb
es
leave
enter
shlw
daa
xchg
cs
ret
xchg
push
dec
fs
or
cmp
mov
les
jno
gs
dec
inc
imull
rolb
pop
and
cmp
arpl
jne
rorl
fiadds
mov
and
jp
sub
ret
cwtl
outsl
jp
ret
inc
sbb
std
pop
shll
cwtl
pop
xor
pop
xor
hlt
aas
cmpb
das
movb
push
dec
daa
sub
cltd
dec
cld
and
xchg
jo
adcb
test
leave
into
mov
pop
int
out
push
fdivrs
xor
and
and
push
daa
subb
shrl
mov
inc
cmp
das
cmpsl
das
xor
pop
test
out
mov
xchg
or
ret
das
sti
cmpsb
sbb
inc
dec
cmpsl
cld
repz
sub
ja
mov
cbtw
movsl
test
cmpsl
jns
inc
mov
cwtl
pop
mov
rorl
ficoms
rolb
int
test
out
pusha
xchg
incl
inc
pop
cmp
and
sub
cltd
mov
int
icebp
ss
lea
push
outsl
pop
xchg
lahf
xor
pop
pop
cmp
insb
dec
lret
pop
or
js
fldl
xor
xchg
scas
ljmp
add
arpl
xchg
sbb
rep
scas
xchg
fldl
xlat
cmpsl
or
repnz
movsb
call
sbb
mov
pop
in
imul
lahf
cmpsl
or
fidivrl
xchg
and
loope
push
lret
fstps
leave
sbb
loopne
mov
jb
dec
xor
sarl
pop
pop
jg
pop
dec
lock
in
ljmp
aad
mov
mov
stc
insb
cmpb
fcoms
adc
and
xchg
fadd
ret
or
stc
ficompl
inc
test
fsubl
cmpsb
jge
cmpsb
sub
daa
dec
and
rorl
cmpsl
cwtl
out
mov
sbb
mov
jg
mov
mov
sbb
iret
inc
add
push
rcrb
mov
imul
push
das
or
mov
adc
stos
jle
testb
sti
cltd
dec
pop
push
inc
lds
add
subb
fisubrl
push
xor
sbb
add
inc
outsl
popf
lods
mov
out
jg
lods
inc
inc
mov
addb
push
lea
xor
inc
insb
inc
mov
fwait
cmovge
in
dec
movsb
popa
xor
and
cmpsl
push
out
punpckhbw
cmc
mov
repz
mulb
sub
je
mov
ss
in
push
enter
cmp
push
clc
into
lods
push
out
shl
mov
daa
add
xchg
push
push
ds
call
inc
or
jb
aas
sar
mov
cli
inc
inc
dec
xor
inc
cmp
sub
in
xlat
int
jnp
pop
push
pop
push
sbb
lahf
jo
arpl
sbb
filds
movsl
out
jg
test
outsb
fwait
cmp
mov
add
sub
stos
mov
pushf
out
ret
xor
cli
lods
mov
outsb
jbe
insl
xchg
lods
in
js
stos
rclb
jno
sbb
in
lret
push
imul
cld
and
pop
mov
aam
push
mov
test
mov
enter
dec
sbb
cmpsl
scas
loopne
add
adc
and
and
pushl
adc
std
lods
jb
push
fcom
pop
mov
stos
jbe
pop
push
xchg
cltd
cmp
adc
insb
mov
push
jno
xchg
xchg
lock
adc
es
enter
les
divl
inc
or
inc
dec
lahf
test
dec
mov
xor
or
test
ss
adc
dec
jp
dec
roll
call
inc
inc
xor
aaa
das
add
and
in
push
jno
fmull
or
push
jle
mov
mov
imul
and
lret
mov
push
lock
pusha
sub
jbe
les
je
loope
jne
aas
sbb
jge
std
pop
mov
inc
nop
jno
cmc
sti
xchg
scas
xchg
xchg
xchg
xor
cld
or
aad
pop
mov
in
cmp
addl
sub
jmp
fdivrl
or
xlat
cmp
sahf
pop
das
aaa
pop
or
jae
mov
sub
imul
ljmp
lcall
add
push
pop
fsubl
push
call
cmpsl
stos
dec
in
dec
repnz
mov
cmpsb
xor
dec
cmp
cmpsb
mov
adc
inc
dec
pcmpeqb
in
popf
xchg
adc
adc
xchg
mov
jp
jnp
xor
loopne
scas
sbb
je
dec
mov
jg
cmpsb
mov
les
pop
std
addb
xchg
jae
aas
xchg
and
sbb
adc
jno
lea
jmp
adc
add
shlb
addr16
stos
push
inc
sub
push
mov
pop
jmp
call
xor
lds
jmp
int
add
sahf
into
sahf
dec
sub
sbb
xchg
inc
mov
push
mov
dec
notb
sub
pop
psllw
shr
adc
sub
mov
mov
out
or
cmc
xchg
mov
imul
xchg
xchg
xor
and
orl
lock
mov
push
imul
out
movsl
shll
out
push
mov
mov
test
gs
push
and
clc
mov
ret
arpl
in
or
pop
mov
adc
and
push
adc
push
arpl
std
pop
out
aaa
sahf
lret
movsb
aaa
adc
mov
lock
push
push
or
pop
scas
push
push
pop
ljmp
insl
scas
int
mov
roll
mov
sub
sbb
push
sbb
add
jb
fwait
movsb
sbb
mov
mov
je
call
fcomps
mov
xor
fadd
xor
mov
jae
fstpt
dec
cmp
das
pushf
pushf
movl
in
inc
push
xorl
pop
nop/reserved
lods
insb
cmpl
pusha
mov
xor
push
lea
rcrl
or
xor
push
rolb
sbb
aam
adc
jb
push
mov
lahf
push
repz
test
std
lret
arpl
idiv
inc
loope
mov
mov
mov
cmp
lods
xor
call
jmp
test
or
inc
mov
loopne
into
or
js
xor
sub
sarb
jb
sar
mov
jne
ljmp
fadds
sahf
cld
pop
pop
rcrl
loopne
jle
fnstenv
pushf
scas
loop
stos
push
mov
inc
pusha
cmc
xor
repz
xor
xchg
in
in
sti
movsl
jo
mov
adc
and
imul
inc
or
pop
out
pop
xchg
dec
adc
scas
ljmp
jl
iret
add
in
adc
rcll
cltd
ja
adc
stos
push
inc
push
dec
js,pn
push
xlat
xchg
jle
lods
adc
dec
jbe
jne
enter
sub
sbb
fcompl
mov
fsubr
sub
lods
lcall
adc
jecxz
clc
xchg
dec
xor
out
push
xor
pop
lret
mov
add
and
mov
inc
jb
mov
jecxz
je
arpl
push
je
cmp
adc
dec
mov
lock
xor
rcl
sbb
testb
shrb
pop
xchg
cmp
cmpsl
inc
aas
aaa
arpl
and
xacquire
push
pop
les
pushf
mov
pop
inc
sti
test
arpl
jns
xchg
sub
sbb
daa
dec
jmp
xchg
insl
mov
dec
sub
call
rcl
sahf
ds
xchg
arpl
int
into
loope
ud0
mov
xchg
test
je
inc
lcall
mov
jg
lock
pop
repnz
cmp
fwait
jecxz
mov
cmpsb
sbb
mov
test
xor
sbb
in
fmuls
dec
lods
sub
fistpl
adc
enter
jg
shrb
adc
lret
xor
push
or
hlt
in
lret
mov
repz
pusha
fimuls
mov
icebp
shlb
clc
popf
ficomps
outsb
mov
movsb
lahf
out
or
lcall
mov
js
push
imull
repz
pop
push
jbe
xor
cmp
int3
jmp
mov
jo
pop
ret
dec
dec
xchg
and
loopne
in
filds
fldt
cs
push
jns
dec
fdivl
loop
sbb
mov
mov
ret
xor
inc
jp
rclb
pop
adc
notb
fcoms
pusha
cmp
sbb
stc
fnstcw
and
repz
aaa
aad
in
out
cmpl
addr16
push
inc
daa
jmp
mov
dec
or
xor
push
aam
stos
das
pop
sbb
fcmovb
fists
dec
pop
xchg
imul
andb
and
xor
xor
ret
stos
arpl
sub
lcall
pop
xor
jno
mov
mov
dec
cmc
fucomi
insb
pop
popf
in
addr16
loop
push
addl
xor
jmp
lea
shrb
xor
call
int3
mov
fcomps
mov
retw
arpl
cmp
fidivrs
inc
inc
leave
stos
nop
movsb
shl
pop
daa
jo
inc
adcb
jae
out
jo
stos
lods
cmp
iret
xchg
inc
or
xor
pushf
push
push
xor
movsb
mov
int
cmp
aam
test
sub
jge
aaa
mov
bound
xchg
dec
mov
nop
out
jae
mov
fstps
jp
cmp
rorl
aas
push
add
sub
js
push
sbb
jnp
inc
test
dec
roll
jmp
popa
add
sbb
pop
icebp
dec
cmp
xchg
mov
push
add
mov
fadds
lods
ds
jp
dec
jle
shl
out
and
cmp
sarb
mov
test
js
push
int
ss
pusha
cmpb
jp
sub
sbb
xchg
cs
out
fstpt
inc
push
out
fs
adcb
es
stos
mov
push
mov
test
xchg
dec
push
adc
jnp
or
xchg
lret
push
inc
mov
jns
enter
stc
push
js
inc
shl
cmpsl
push
pushf
lret
cltd
xlat
mov
pop
jp
mov
lcall
and
jo
xor
cltd
dec
dec
fsubl
imul
insb
in
cmp
in
fs
aas
inc
iret
jns
jo
lods
inc
js
int
mov
loop
dec
xor
dec
mov
fiadds
aam
adc
push
jo
xchg
jbe
fldt
mov
add
cmp
jb
js
movsl
xor
adc
mov
dec
pop
push
push
xchg
xchg
inc
jle
ffree
jmp
jmp
ss
mov
xor
aas
fnstsw
in
and
mov
imul
daa
mov
jle
add
push
or
fwait
mov
sub
loop
mov
dec
shll
cwtl
xchg
leave
xchg
cmp
adc
inc
fs
mov
shlb
xor
clc
rcr
pop
xchg
sti
jo
dec
imul
es
pushf
ljmp
mov
lahf
in
mov
lea
imul
sbb
jg
pop
lcall
movsl
ret
repnz
adc
pushf
mov
es
inc
mov
jle
mov
push
mov
adc
mov
jle
and
in
lcall
pop
cmp
pop
mov
data16
dec
sub
ljmp
lea
subb
loop
jp
popf
pmaxub
mov
bound
loope
push
imul
pop
outsb
jbe
push
pop
lods
xor
lret
pop
push
push
and
inc
cmc
add
inc
cmp
daa
push
aad
mov
cmc
xchg
sarb
fdivs
addr16
movsl
push
arpl
fistps
cmp
xor
and
jnp
or
int3
ss
scas
pop
jb
scas
xlat
int3
push
pop
jcxz
mov
repz
int3
sbb
adc
mov
cmp
jne
or
jl
jnp
adc
cltd
push
mov
lahf
imul
lods
and
daa
shld
lods
fcmovne
mov
gs
mov
push
jnp
daa
pop
popa
push
ficompl
sbb
fcmovb
add
dec
outsb
stos
std
rcrb
jb
and
rorb
mov
das
or
jp
or
shrl
je
fs
rclb
lock
fdivrl
push
sti
cmp
xor
dec
xor
aas
lea
into
xchg
std
sbb
lcall
outsb
jl
jle
sbb
mov
jno
mov
cli
or
add
pop
adc
leave
push
test
mov
mov
mov
and
out
xor
pusha
movsb
faddl
in
and
jge
or
stc
sub
rcrb
bound
dec
jecxz
lretw
stc
pop
dec
sbb
aad
push
cmp
clc
dec
jp,pt
repnz
fmull
push
and
rcrl
push
adc
ret
es
sub
andb
and
scas
repnz
rorl
add
sahf
ja
fisubrl
das
aaa
lcall
js
jmp
dec
sbb
sbb
and
movsl
adc
loope
pop
and
jmp
lea
xchg
ret
icebp
dec
jnp
imul
push
jno
adc
add
aam
pop
in
push
or
adc
adc
out
data16
int3
xchg
insb
addr16
cmp
addl
aaa
test
cmpsb
dec
push
jmp
fs
enter
mov
jecxz
mov
mov
out
xor
fucomip
cmp
pop
inc
xchg
or
out
cltd
repnz
pop
int
xor
test
inc
jmp
sbb
outsb
insb
and
stc
xlat
stos
sub
add
mov
push
push
test
add
cwtl
subb
inc
sahf
mov
arpl
push
pop
cltd
push
andps
sti
scas
cmp
loopne
mov
push
push
dec
push
aad
jae
adc
pop
pop
pushf
lods
sti
sub
push
xor
xchg
mov
sub
fcoms
clc
xchg
aad
and
mov
adc
xor
in
xor
out
sahf
sti
add
push
add
into
add
xchg
jno
jns
jle
and
jecxz
sbb
xor
sbb
aas
dec
pop
or
dec
lock
clc
testb
fcmovnbe
mov
lret
repnz
push
or
xchg
mov
adc
xorl
data16
sub
lock
cmc
mov
or
mov
adc
dec
mov
imul
loope
fldenv
dec
nop
js
nop
adc
mov
in
aad
in
pop
or
pushf
mov
dec
mov
dec
jp
in
stos
cli
push
scas
lds
stc
add
xchg
push
mov
sub
daa
pop
mov
test
aaa
pushl
sub
out
fmuls
lret
cmpsl
rcll
andl
sub
aad
push
scas
push
jg
xor
adc
mov
add
push
je
je
xchg
popf
dec
xchg
filds
ss
out
jle
adcl
fdiv
popf
test
cltd
int3
rorb
int
cmpsl
mov
jbe
mov
outsb
jp
xor
popf
mov
push
jnp
into
xchg
ret
mov
dec
inc
insl
popl
push
and
dec
add
cmp
fidivs
insb
fwait
jmp
fdivl
sbb
jmp
movsb
push
add
xor
test
lock
pop
dec
test
xorb
clc
push
aaa
push
int3
jnp
lock
xorl
je
jmp
ja
fs
gs
pop
cwtl
cmp
mov
xor
cli
inc
repz
push
xor
popf
or
xchg
push
add
or
gs
xor
and
push
push
aad
jge
ret
cli
jg
jnp
fidivrl
js
std
push
adc
vmovsldup
and
jb
sbb
test
int
fldt
outsl
pusha
xlat
sbb
jns
cmc
push
gs
ljmp
dec
jno
dec
shr
inc
xchg
jnp
aas
mov
mov
jnp
push
loop
mov
loopne
add
adc
fsubl
pop
sub
pop
movsl
xor
jmp
stc
inc
rclb
lea
sub
cmc
lahf
or
outsl
mov
mov
push
sahf
adc
out
inc
inc
xor
xor
data16
adc
bound
mov
push
mov
aam
js
mov
rclb
jmp
pop
insl
icebp
xor
mov
loopne
mov
outsb
lds
aam
cli
arpl
mov
jecxz
pop
insw
add
xchg
push
clc
cmpsl
jo
push
dec
xchg
and
xor
jg
call
inc
idivb
lcall
sti
sbb
aad
or
test
movsb
mov
jbe
xor
fdivr
hlt
jge
aas
rolb
stos
int3
jl
ja
mov
inc
cmp
icebp
in
xchg
lods
jg
hlt
scas
mov
popf
ljmp
cli
mov
js
push
in
xchg
jne
or
sbb
xor
dec
sub
inc
fnsave
jne
lock
clc
or
cmp
jmp
push
xchg
adc
shlb
cmp
xchg
mov
add
aaa
dec
mov
mov
pop
das
ret
imul
sub
cltd
enter
push
iret
test
pop
push
insb
paddusb
ja
push
mov
dec
mov
out
in
stc
popa
arpl
sbb
pop
add
test
cmp
dec
outsl
or
sub
out
xor
adc
mov
inc
lock
push
addr16
je
jb
dec
repnz
test
leave
imul
or
popf
popl
jnp
mov
inc
mov
pop
add
or
xor
outsl
sbb
frstor
xor
ss
inc
es
lcall
mov
cmp
orb
cmp
push
aad
push
fcmovne
lods
clc
into
clc
repz
or
js
and
lods
addr16
cmp
into
sbb
lret
mov
imul
adc
stos
fstpt
test
cmpsl
aam
and
insl
xchg
add
xchg
movb
decb
les
out
loop
jns
sub
aaa
in
fstp
dec
les
in
cmp
sbbl
xchg
cwtl
loope
inc
push
sbbl
and
loopne
in
test
push
int3
loopne
orb
aad
pop
stos
xchg
ret
mov
cmp
cmp
xor
dec
insb
mov
mov
mov
pop
into
mov
or
test
sarl
jns
xchg
repnz
xchg
adc
or
dec
inc
in
leave
add
sbb
stc
xchg
sbb
bound
inc
adc
mov
jae
cmp
dec
mov
ret
shrl
je
fidivs
jge
cmp
sub
call
inc
xchg
adc
jmp
rol
popf
xor
dec
cmpsb
sub
and
lods
sbb
xor
xor
filds
adc
xor
fldl
mov
aas
ret
xor
rolb
test
fs
jge
lds
or
mov
sahf
adc
out
mov
jbe
adc
cmp
lods
add
stos
or
loope
jle
add
sbb
mov
nop
aad
mov
leave
pop
push
pusha
int
shll
mov
aad
loope
gs
aaa
cmp
mov
into
xor
mov
out
adc
das
xor
jp
test
lret
adc
inc
pop
sub
mov
jae
mov
adc
ror
leave
sub
or
mov
arpl
ljmp
imul
test
dec
lock
push
pop
push
cmpsb
cmp
lods
pop
mov
xor
loope
mov
pop
sub
adc
scas
ret
flds
mov
std
js
and
and
jle
out
fs
push
cmpsb
fnstenv
mov
pop
fsts
les
jne
pop
sub
add
daa
add
xchg
loope
push
subl
mov
cmp
mov
stos
out
sub
arpl
push
mov
pop
les
mov
adc
sbb
ret
scas
in
mov
dec
and
mov
pop
adc
cltd
push
dec
mov
push
popf
cmp
out
fisubl
push
pop
mov
add
inc
aas
cmp
xor
dec
lods
jae
push
loopne
mov
add
pushf
outsl
in
mov
push
adc
push
lcall
pusha
sub
cmp
hlt
sbb
mov
cs
icebp
push
out
push
aad
xlat
addl
xor
jmp
push
ljmp
mov
xchg
jne
inc
cmp
push
mov
aaa
enter
xor
in
add
dec
ljmp
clc
jle
out
les
testl
xlat
loopne
pop
nop
out
xchg
push
jecxz
jge
test
cmp
sub
adc
push
sbb
jge
bound
jp
inc
pop
rep
rclb
xchg
andb
cmp
ja
mov
call
scas
inc
sub
and
loop
mov
xchg
cld
rcrl
inc
cmp
sbb
mov
fsubs
dec
jg
out
out
dec
loop
xor
push
jg
mov
xor
pop
popa
and
cltd
stos
sbb
sub
sub
pushf
sbb
in
daa
test
les
sbb
pop
adc
or
or
pop
in
cmp
je
pop
loop
enter
mov
cmp
adc
sub
bound
ret
xor
adc
ret
mov
bound
mulb
jmp
jns
lods
jl
sub
data16
dec
inc
and
mov
jp
inc
lock
cmp
pop
jl
fisttpl
mov
jno
inc
inc
inc
mov
mov
loopne
sbb
pop
xor
in
add
sbb
lret
insl
sub
cmc
cmp
push
fdivrl
mov
fstpl
mov
std
mov
push
sub
fwait
js
mov
shll
jle
dec
push
mov
sarb
xor
fst
add
xchg
adc
lret
test
xor
push
push
dec
rcr
adc
mov
ja
xor
clc
lods
jne,pn
gs
icebp
or
idivl
dec
xchg
inc
insb
stos
mov
lret
fldenv
test
shrl
mov
div
enter
sbb
pop
in
movsb
mov
xchg
or
lods
lock
scas
loopne
rcll
push
lret
push
fisubs
adc
in
push
jecxz
jg
call
dec
mov
xor
pushf
loop
dec
les
sub
sub
mov
data16
cmp
insb
jo
sarl
mov
mov
cld
movsb
xchg
pop
ret
push
mov
stos
loopw
mov
dec
icebp
xor
test
push
mov
mov
sbb
sarl
repnz
and
jbe
lods
sub
pusha
jno
aas
pop
and
movsb
jmp
jns
fldcw
push
ficomps
mov
cmpsl
jns
lcall
jae
test
pop
fcmovbe
inc
hlt
shlb
lods
in
sub
jmp
int
movsb
xorl
testb
rorb
aad
hlt
loop
in
faddl
notb
push
sub
pop
mov
mov
das
inc
lea
addl
cmp
fsubs
lods
fnstsw
lret
int
aaa
mov
jecxz
dec
negb
adc
mov
mov
xchg
mov
xchg
cmpsb
mov
push
push
test
mov
push
mov
sti
xchg
fnstcw
cmovns
shl
mov
inc
das
iret
xchg
leave
mov
aaa
jl
pushf
lret
addr16
adc
dec
lret
add
sbb
fdivs
adc
insb
sub
in
bound
hlt
cmc
and
icebp
cmp
dec
mov
dec
push
add
lds
pop
push
iret
mov
idivb
add
shlb
jbe
adc
xor
pusha
sbb
xchg
adc
xchg
and
pop
xor
movsb
mov
mov
adc
inc
sti
pop
push
mul
clc
aas
sbb
orb
mov
inc
stos
ficoms
andb
imul
xchg
movsb
int3
mov
sti
int3
scas
jmp
loope
push
aad
jmp
scas
enter
sbb
mov
int3
xchg
stos
sub
je
cmp
dec
jg
mov
jp
hlt
xchg
jnp
sub
sbb
daa
pusha
xor
iret
cmp
call
sub
insb
hlt
sbb
rcr
fstp
jbe
jnp
cld
int
fimull
pop
popf
scas
pop
stos
and
cli
call
sub
and
fidivl
pusha
insl
sbb
test
hlt
xchg
in
jmp
mov
mov
in
out
mov
mov
xor
dec
mov
push
ror
stc
jge
mov
mov
xchg
repz
cmp
inc
lahf
or
lahf
testb
dec
lea
adc
push
mov
jl
push
inc
div
adc
adc
cmp
adc
sbb
mov
jl
or
add
push
outsl
in
mov
push
xchg
inc
xor
ds
jo
push
mov
push
es
clc
sub
mov
push
movsl
pop
in
add
ror
shlb
nop
jge
ja
sub
adc
add
pop
push
lods
xor
shl
test
adc
jle
lock
aad
cs
jle
loop
inc
mov
lds
ds
dec
mov
jb
inc
sbb
mov
jg
hlt
xor
ficompl
jl
fisttps
dec
jg
test
testl
and
icebp
or
sahf
popf
dec
insl
dec
pop
cli
cld
sub
mov
int3
rcll
cwtl
je
rorb
scas
rcrb
mov
or
ja
adcb
fdivrl
mov
repnz
or
stos
adc
mov
mov
mov
lret
jo
push
add
mov
dec
xchg
and
push
xor
mov
mov
loop
push
imul
pop
cmc
pop
in
nop
ror
insb
ret
daa
in
ja
sti
lahf
enter
xchg
pop
xchg
repz
cmp
cmp
add
fiaddl
adc
arpl
mov
inc
js
push
popa
and
ljmp
insb
xchg
cli
and
dec
adcl
pop
repnz
mov
push
sbbb
jmp
cs
sti
les
dec
xchg
loop
movsb
dec
cmp
jnp
dec
push
or
mov
push
pushl
into
vmovntps
je
popf
std
jmp
pop
outsb
push
loope
out
and
mov
icebp
mov
ret
push
pop
mov
fs
out
cmp
mov
dec
popf
stc
mov
mov
notb
movsb
fstp
adc
lret
je
movsl
les
push
add
mov
loopne
fstpl
xor
cmp
push
test
push
pop
int
push
mov
data16
xor
add
and
imul
ficoml
sub
loope
dec
cmp
jp
mov
shrd
push
fimull
lcall
out
sbb
inc
subb
icebp
ja
movsb
loop
fidivl
mov
jge
movsb
pop
movsb
es
in
in
adc
pop
jl
sub
imul
and
cmpsb
rclb
scas
and
mov
xor
js
les
cmp
leave
sbb
mov
mov
das
adc
cwtl
mov
ja
out
fs
lods
mov
les
mov
fildl
daa
jl
stos
mov
cmp
add
ret
xchg
sub
sti
int3
push
xchg
adc
cmp
push
inc
add
push
fcmovnu
mov
rol
negb
lods
mov
dec
xor
push
mov
negb
ja
movsb
push
outsl
or
fcmovne
add
mov
pop
jb
mov
jmp
or
bound
adc
sbb
sti
pop
xchg
pop
or
jae
jecxz
sbb
rcrb
je
jp
add
add
push
mov
sbb
dec
sbb
mov
mov
jns
dec
cmp
idivb
adc
xchg
js
cs
cmp
outsb
js
cwtl
loope
inc
pop
shr
into
jmp
movsb
test
pop
lahf
rcrb
mov
pop
test
popf
push
es
and
fwait
jo
xor
xchg
roll
fldenv
xchg
mov
and
xor
inc
popl
fisubl
cmp
xor
mov
sbb
ret
in
ja
push
jp
jbe
xchg
pusha
insb
jp
mov
in
xchg
inc
insb
mov
push
push
popf
inc
iret
test
enter
xchg
pop
hlt
xchg
push
sub
in
xchg
fs
xlat
mov
hlt
pop
mov
sub
xchg
loop
xchg
jne
js
stc
push
daa
aam
xchg
outsl
adc
inc
movsb
fildll
test
fldenv
inc
jle
popf
jno
ds
adc
je
pop
sbb
iret
adc
pop
jl
leave
or
pop
addb
mull
loope
sub
sbb
out
addr16
inc
inc
or
pop
popa
jb
cli
mov
push
in
aaa
push
inc
adc
cli
sub
pop
sbb
lods
inc
out
mov
inc
pop
dec
mov
out
push
or
jmp
push
sbb
or
repz
mov
fcomps
mov
out
pusha
mov
out
mov
cmp
pop
fbstp
jp
sbb
loop
icebp
lods
notl
xchg
add
add
push
cwtl
xchg
xchg
xchg
jns
or
sub
jp
mov
jno
jmp
pop
xchg
rep
ss
scas
lock
lcall
mov
add
shll
test
repnz
lret
mov
iret
hlt
in
fucom
insl
and
aaa
inc
scas
jmp
mov
popf
and
cli
lahf
pop
add
add
ja
push
lahf
inc
sub
rclb
pop
shr
cli
cmp
cmp
cmp
cmp
dec
ficoml
push
lock
lret
test
sbb
loop
mov
ds
dec
xlat
arpl
test
adc
lds
sarl
sarb
mov
inc
rep
add
mov
push
mov
cmpsl
sti
movsl
and
sub
sub
xor
sub
fistps
push
xor
mov
and
sbb
xchg
addr16
lds
mov
and
fnstsw
pop
mov
test
imul
pop
pop
aam
mov
sub
xchg
ljmp
dec
add
pop
imul
inc
mov
mov
lret
popa
dec
loop
lods
jle
test
cltd
cmpsb
mov
in
mov
lret
stc
fs
mov
in
inc
push
jmp
mov
fsubrl
jo
xor
js
sub
push
sar
mov
fs
inc
mov
cli
outsl
xchg
cmpsl
sub
sbb
jne
inc
lods
rcrl
ficompl
lret
loope
fstl
and
mov
xor
rcrl
ds
je
sbb
not
or
inc
and
je
jle
xchg
push
call
sbb
popf
dec
stc
stos
fsub
cltd
or
lods
sbb
nop
add
jecxz
sbb
mov
int
outsb
orl
xchg
mov
dec
mov
dec
imul
xchg
ljmp
xchg
fmuls
iret
inc
adc
cmp
pop
push
jo
jle
push
or
and
enter
push
pusha
xchg
sub
push
outsb
in
sbb
xabort
add
test
rol
pop
push
inc
xchg
or
ljmp
push
dec
inc
test
insb
cmp
mov
and
fistps
pop
int3
xor
dec
cmpl
jne
sbb
popf
in
stos
cmp
adc
stos
dec
dec
insb
pop
gs
aam
mov
mov
stos
lcall
js
push
out
popa
dec
or
mov
xchg
xlat
xlat
loopne
lea
jb
inc
xchg
loopne
jnp
enter
daa
lcall
sbb
loopne
sbb
shrb
cmpsl
pop
ds
ljmp
cmp
inc
push
lahf
test
cwtl
sbb
push
or
mov
xchg
sbb
inc
xor
fwait
inc
inc
aas
imul
add
pushf
xlat
out
inc
add
mov
mov
or
gs
push
adc
inc
jle
iret
and
inc
cmp
loop
jge
sbb
cmpl
push
mov
testb
ret
stc
and
into
mov
and
in
push
add
lret
fmuls
flds
out
and
sub
in
xchg
xor
push
jnp
dec
clc
out
pusha
in
not
inc
adc
cltd
jg
mov
int3
mov
sub
xor
push
xchg
sbb
xchg
aaa
cmp
es
inc
jge
ljmp
mov
adc
outsb
sub
jo
je
sbb
pop
fcmovne
mov
ret
jp
das
call
cmp
xor
xchg
xor
leave
int
lahf
out
dec
pop
jmp
mov
mov
insb
imul
test
cmc
mov
jge
idivl
test
cmc
xchg
scas
jnp
lcall
loop
leave
das
and
movsb
mov
mov
inc
dec
and
or
fistps
xor
out
rol
int3
das
pop
or
adc
enter
subl
lds
aam
mov
outsl
xor
mov
push
push
add
pop
mov
cmp
xchg
fistl
fwait
lods
clc
fsubrl
divb
insb
mov
in
push
mov
mov
pop
sbb
adc
je
lcall
xor
inc
fdivr
push
test
cmpsb
es
dec
mov
arpl
adc
roll
movsb
test
fisttpll
loop
or
inc
lods
in
fisubs
ja
sbb
popf
fimull
push
adc
push
lea
xor
lcall
test
pop
push
cs
cmp
mov
xlat
cmp
into
mov
popa
loop
pop
pop
mov
outsb
stc
fs
scas
mov
sbb
js
mov
clc
cmp
push
loopne
push
mov
adc
ficoml
xor
dec
movsl
push
mov
mov
push
mov
scas
adc
ljmp
inc
mov
sbb
mov
fnstenv
mov
cltd
arpl
inc
lret
or
sti
and
testb
push
cs
push
lcall
lcall
xchg
sbb
mov
adc
mov
add
jg
xchg
fwait
sub
dec
and
lret
fstl
shlb
xchg
lret
sbb
mov
dec
dec
fadd
mov
mov
lahf
jmp
int
push
cmpl
inc
mov
xor
daa
dec
popf
push
ret
rcrl
nop
es
ss
out
dec
dec
jecxz
adc
js
sbb
adc
sahf
js
leave
aaa
mov
adc
subl
push
jno
out
or
lret
arpl
adc
loopne
cmp
xlat
insb
adcl
jecxz
sbb
clc
loopne
pop
jg
xor
dec
int3
cmp
or
cmp
enter
add
fcomip
aas
cmp
cld
insb
cwtl
popa
cld
scas
loope
lret
movsb
mov
jbe
lahf
pop
repz
fistps
mov
ss
repnz
cmp
pop
dec
testb
repnz
and
sub
and
xlat
cmp
out
push
fcomi
jae
fiaddl
lds
jl
lea
shlb
mov
iret
loopne
nop
ret
cs
push
dec
or
mov
mov
sbb
lret
and
inc
or
and
adc
andb
adc
jge
or
jp
stos
dec
aaa
xor
rclb
and
or
dec
jbe
xor
sub
sub
int
imul
jge
pop
or
ljmp
aad
add
or
in
sub
add
jne
cltd
mov
mov
jmp
push
sbb
push
lods
sub
cmc
mov
jnp
or
mov
in
jns
push
addr16
cmc
add
stos
or
dec
mov
sub
xchg
jge
aam
repnz
sub
inc
sbb
imulb
mov
dec
loop
out
stc
bound
std
jbe
sbb
add
lods
jb
fists
jo
mov
loopne
or
add
std
pop
mov
xor
nop
loop
xchg
lock
add
xchg
lcall
popw
pop
lods
jne
inc
ja
push
lds
mov
push
mov
sbb
mov
sar
xchg
mov
cld
icebp
or
inc
cwtl
gs
aaa
movsb
ds
mov
add
sti
aaa
sub
or
sti
data16
mov
scas
lret
js
pop
push
push
jmp
push
dec
sbb
js
xchg
dec
inc
jne
lcall
pop
inc
cmpsl
adc
cld
test
cltd
mov
dec
lock
jp
mov
movsb
mov
outsl
test
xchg
xchg
repnz
lock
int3
xor
roll
mov
lret
and
xchg
inc
pop
jmp
pop
jmp
test
in
xchg
insb
rorl
and
push
in
fisubrs
or
mov
jne
mov
pop
outsl
scas
jns
inc
stos
adc
adc
xchg
rclb
mov
cltd
rcl
shlb
das
and
sub
std
mov
aam
mov
pushf
xor
xor
shl
or
arpl
clc
out
pusha
int3
iret
repz
and
out
mov
inc
lcall
jno
and
push
inc
into
hlt
sub
stos
scas
pop
std
cmc
int3
dec
sbb
adc
adc
setbe
test
lea
or
push
mov
push
xor
xchg
aad
push
and
shrl
jl
mov
adc
scas
clc
fcompl
adc
jno
aas
shrl
mov
sub
add
mov
mov
xchg
es
xchg
xor
push
push
and
leave
jb
popa
jbe
inc
rcrb
dec
fdivr
sub
inc
daa
sub
gs
stc
jne
and
lea
loopne
dec
dec
dec
gs
lea
jp
jle
out
test
push
mov
sub
nop
aad
mov
pusha
mov
outsb
faddl
mov
test
push
rcrb
dec
push
call
test
mov
jnp
cmp
test
mov
sbb
mov
mov
cltd
jp
and
and
jl
xchg
add
cli
mov
rcrl
and
arpl
mov
inc
xor
outsl
sub
cmpsb
jl
int3
fwait
lds
xor
cs
pushf
jno,pn
ret
pop
stos
mov
cld
insl
pusha
divb
clc
or
fisttpl
mov
adc
adc
sbb
xchg
cmp
adc
push
jecxz
test
shlb
pusha
jbe
mov
xchg
out
pusha
ss
pushf
roll
add
push
loop
and
mov
inc
pop
rcll
stos
enter
sub
mov
mov
add
arpl
add
cmp
loop
into
clc
roll
nop
sbb
lea
cmc
movsb
outsl
pop
loope
pop
inc
cmc
xchg
push
push
sti
push
cmpsb
es
inc
cwtl
mov
testb
push
mov
pushf
enter
repnz
sbbb
lods
xor
xchg
xchg
js
adc
inc
jl
insb
pop
and
pop
or
xor
mov
and
pop
inc
push
jecxz
push
add
push
dec
les
inc
pop
lret
stc
pusha
push
gs
mov
aad
cmp
popf
or
sbb
xlat
sbbb
dec
mov
cmp
sbb
fldenv
add
sbbb
sub
lahf
inc
leave
xor
xor
dec
and
hlt
jns
xchg
mov
cmp
in
test
xchg
mov
dec
cli
fsub
add
xlat
fmul
mov
call
mov
jp
les
cmpsb
mov
shlb
mov
mov
mov
jne
or
imul
sub
fdiv
mov
push
sarl
ret
rol
pop
iret
push
test
mov
repnz
pop
cs
outsl
out
jbe
inc
lea
add
negb
ficomps
adcl
mov
sti
ss
inc
xor
inc
cmp
sti
gs
adc
mov
pop
mulb
or
rcr
mov
pushf
inc
in
loopne
idiv
or
shr
and
mov
or
rolb
add
stc
jnp
in
imul
cmpsl
push
push
das
mov
cld
mov
push
jnp
jns
sub
cmp
movsb
adc
cmp
aaa
cli
dec
or
mov
jg
cwtl
stos
and
mul
test
sub
rolb
cwtl
or
mov
sti
mov
fsub
lea
sbb
outsl
inc
mov
xchg
mov
add
mov
mov
pop
adc
pop
pusha
xor
popa
adc
and
sub
mov
ret
or
jns
xchg
inc
xchg
cmovs
ficompl
mov
cmp
cmpsl
jno
roll
xchg
add
inc
inc
aam
mov
xchg
dec
cmp
cmp
stc
lds
inc
sbb
scas
or
sbb
popl
push
jno
sti
xchg
jmp
movsl
cmp
xchg
xchg
js
xchg
xchg
xchg
movsb
cmpsl
jb
push
or
in
pop
into
add
push
mov
out
push
sti
aas
mov
mov
xor
and
dec
call
scas
mov
jno
add
shl
sub
cld
rolb
sbb
push
push
repnz
push
movsb
jg
fmul
adc
mov
divl
jae
mov
mov
fmulp
scas
add
or
adc
es
negl
push
xchg
mov
and
or
pop
jnp
sbb
rcr
pusha
dec
push
mov
dec
ds
jmp
mov
mov
mov
mov
mov
or
mov
cmp
or
loopne
movsb
add
out
cmp
dec
jne
je
add
imul
xchg
sbb
mov
cmp
out
cmc
xchg
pop
in
adc
xchg
insb
add
xchg
push
mov
jecxz
fadd
mov
push
pop
push
jle
dec
add
push
add
lock
push
pop
fcmovu
lock
dec
std
nop
loopne
jae
subl
mov
shrl
pop
mov
adc
adc
fnstenv
fs
mov
fwait
jmp
ja
dec
jp
jb
jne
cmp
test
scas
ret
xchg
dec
push
xchg
stos
lret
pop
mov
lret
jg
push
cltd
cmc
decl
scas
jecxz
out
inc
jns
mov
sbb
push
pop
int3
mov
scas
push
xor
jnp
ffreep
pop
xchg
lods
mov
mov
addr16
aam
test
inc
loope
fdivs
divb
ja
and
shll
xor
pushf
add
add
stos
in
push
ja
xchg
ret
push
mov
sub
scas
lock
div
insl
fptan
mov
cltd
ret
or
idivb
mov
jbe
xor
or
cmpsb
xchg
sub
add
or
rcrb
jl
ror
push
mov
sbb
das
shr
cmpl
xchg
shll
xor
rorb
imul
cmp
loopne
insl
int
cli
sbb
sahf
mov
or
imul
add
jnp
call
cmpsb
pop
bound
xchg
fdivl
add
aaa
arpl
shrb
jmp
outsb
rclb
pop
adc
pop
insb
das
das
inc
icebp
frstor
xchg
and
jmp
test
xlat
scas
scas
jbe
aas
cmp
aaa
mov
adc
int
stos
fldenv
int
xchg
cld
xchg
or
cli
push
ret
rcl
stos
cmpsb
repz
pop
das
dec
int
test
clc
cltd
andl
pop
jle
jno
and
in
js
mov
jge
xorl
iret
push
push
sub
loop
inc
outsl
sub
shr
add
lret
into
shll
dec
call
test
jae
mov
sbb
sub
mov
daa
or
jno
jmp
jo
sbb
pop
outsl
idivl
cld
and
ds
mov
orl
ret
out
xchg
jg
adcl
dec
loopne
and
bound
repz
cmp
inc
mov
cmpsl
mov
lcall
sub
ret
adc
pop
xchg
je
pop
mov
in
jnp
sbbb
add
fwait
sarl
xor
mov
std
dec
rcll
mov
dec
mov
adc
xlat
sub
in
sub
inc
pop
or
mov
idivl
aam
int3
iret
icebp
js
cmp
mov
mov
fcomps
dec
mov
das
ljmp
jo
packuswb
in
sti
xchg
cld
mov
popf
mov
or
mov
icebp
cmp
les
das
mov
adc
pop
sub
push
dec
inc
outsl
lahf
movq
pushf
mov
clc
jno
ds
movsb
mov
inc
or
pop
push
xchg
pop
cmpsb
aas
movsl
sbb
pop
mov
mov
aas
sahf
cmpb
fs
aaa
loop
repnz
gs
xchg
inc
cmp
mov
xor
fdivl
xchg
push
aam
ret
cld
icebp
xor
mov
jg
imul
dec
shll
or
in
outsl
call
mov
loopnew
call
ret
shll
test
jmp
out
jnp
cmp
cmp
mov
mov
movsb
fdivl
push
push
movsb
mov
xlat
mov
and
mov
push
push
dec
jg
fnstcw
in
sbb
into
scas
mov
mov
stos
in
inc
lods
repnz
push
cli
in
roll
and
jmp
push
sarl
mov
mov
loopne
fsubs
jne
or
cltd
aas
mov
cmp
cmp
in
scas
into
cs
push
xor
jnp
mov
cli
or
popf
ret
push
rcrb
test
bound
sub
out
fldl
dec
lahf
xor
rcrb
ret
push
imul
jl
xor
inc
mov
mov
out
dec
dec
mov
xor
dec
lcall
xchg
ds
push
int3
mov
jnp
xchg
pushf
mov
pop
push
xchg
icebp
sbb
xchg
repz
cmp
adc
xchg
insb
mov
test
roll
pop
dec
and
adc
cmpsl
and
sub
call
mov
cmpsl
mov
sti
dec
jno
mov
sub
cmp
sahf
mov
test
pop
push
adc
pusha
pmuludq
in
cmp
insl
hlt
xor
loop
test
xchg
lods
sbb
sar
inc
aaa
inc
icebp
xor
icebp
insb
or
fcmovu
into
in
fistpll
add
xlat
mov
push
notb
arpl
jnp
es
leave
mov
stos
add
cli
add
aad
loop
bound
sarl
lcall
jno
into
enter
lahf
sbb
adc
jecxz
dec
jg
lcall
aam
out
ss
popa
xchg
pushf
test
push
jb
mov
push
push
aad
or
lock
mov
cltd
cld
mov
lds
dec
mov
addr16
subb
notl
insb
dec
movsl
sbb
or
inc
or
inc
mov
xor
mov
out
fsubl
pop
outsb
arpl
jle
shrb
and
mov
ret
cmp
mov
rorb
cmp
mov
xlat
push
push
rorl
and
or
sbb
insb
cmp
insb
push
push
out
xchg
mov
or
std
or
ss
hlt
ja
inc
roll
pop
xor
add
fcomps
mov
cmp
dec
push
adc
imul
rcpps
aad
outsl
adc
xchg
pop
enter
push
cwtl
mov
or
test
mov
in
popf
push
pop
pop
jp
mov
adc
add
mov
roll
sbbl
xchg
es
shr
negl
stos
sarb
or
dec
lcall
cmp
xor
xlat
in
jmp
jg
jae
mov
xor
scas
xchg
jle
shll
scas
push
fs
pop
adc
xchg
jl
je
repnz
movsl
out
mov
psrlw
dec
cvtdq2ps
add
inc
adc
cli
jle
xchg
push
push
sub
mov
or
cwtl
push
je
mov
mov
ret
cmpsb
mov
adc
push
test
sarl
lcall
stos
jns
and
or
pusha
cmp
inc
pop
fucomip
lahf
jle
outsl
pmulhuw
push
pop
inc
push
jl
sub
cld
out
jae
rcll
adc
mov
dec
ja
mov
push
aas
xchg
push
aas
aaa
fdivs
test
inc
mov
dec
lret
imul
fcompl
mov
add
movl
das
mov
xlat
xchg
xchg
lea
inc
nop
jecxz
aam
jecxz
push
mov
subb
push
sub
adc
fdivrs
push
movsb
mov
inc
cmp
adc
mov
je
or
lcall
pop
int3
and
repz
jo
cmp
testl
fdivl
ljmp
sarl
sub
call
in
pusha
mov
out
xchg
jae
faddl
jns
lods
mov
bound
sbb
int3
mov
movsl
and
mov
es
lret
jp
cs
adc
cli
xchg
mov
jmp
ja
stos
leave
xchg
push
pop
pop
sbb
test
hlt
std
jnp
fisubrl
aam
sub
insb
add
cli
xor
dec
adc
imul
out
loopne
es
jmp
mov
add
adc
add
mov
movsl
add
out
mov
pop
mov
mov
jmp
mov
mov
sbb
mov
movsl
mov
push
sub
mov
imul
sbb
inc
mov
push
imul
mov
add
push
dec
cmp
enter
or
inc
fwait
outsb
inc
jno
adc
pop
xlat
mov
inc
add
scas
addr16
arpl
fidivs
stc
cmc
mov
mov
lcall
add
call
insb
jecxz
cmpsb
inc
add
in
lahf
adc
aas
fildll
out
pop
xchg
insl
outsl
sub
push
inc
lret
xchg
and
pop
dec
addb
idivb
fists
xor
or
mov
sbb
mov
xchg
mov
outsb
cmp
mov
or
inc
cmpsb
lret
loop
dec
inc
mov
inc
cld
adc
mov
leave
enter
xchg
cmp
mov
push
shlb
repz
sahf
das
fisttps
daa
imul
fisttpll
cmpb
cmc
stos
sbb
ds
jecxz
movsb
push
out
sbb
xchg
xor
mov
mov
imul
adc
adcb
lret
lahf
cwtl
push
int3
xor
adc
mov
xchg
mov
movsl
mov
mov
and
adc
and
lock
cmp
fcomps
xchg
mulb
dec
sub
inc
fs
outsb
inc
pop
inc
loop
adc
movsl
das
jmp
add
xor
push
mov
std
cmp
jns
pop
movd
scas
test
enter
mov
cmp
addr16
inc
aad
mov
test
push
jns
addr16
pop
adc
push
push
vcvtss2sd
inc
scas
andw
mov
mov
and
scas
jp
add
dec
mov
jbe
into
std
out
fcmovnb
inc
movsb
jl
into
ret
mov
or
scas
cmpsb
ret
xchg
scas
dec
xor
repnz
fstpt
push
inc
in
mov
pop
mov
add
push
mov
push
je
dec
mov
and
xor
xchg
inc
lock
movsl
in
mov
jnp
sbb
mov
and
outsl
dec
adc
into
sub
xor
test
lret
int3
mov
jns
push
mov
sub
arpl
jo
fmuls
jg
jmp
enter
fwait
xchg
xor
mov
push
or
mov
jecxz
push
pusha
lods
mov
xchg
pop
lods
dec
and
icebp
repz
inc
xor
sbb
push
xchg
out
xor
cmp
adcb
pop
jno
stos
push
sti
add
mov
mov
movsl
scas
sbb
jle
adc
and
fsubrp
cmp
pop
decl
jmp
xorb
dec
lret
mov
mov
sub
mov
mov
pushf
in
sbb
jae
jecxz
insl
mov
sahf
aam
and
inc
mov
cmovo
iret
lods
push
test
out
test
mov
push
adc
mov
loope
xor
sbb
mov
jl
outsl
add
mov
jnp
stos
cld
mov
jo
addr16
mov
jmp
and
int
xchg
mov
ljmp
add
push
popa
sbbb
push
cwtl
inc
mov
dec
jmp
mov
mov
sbb
add
mov
test
jb
push
mov
inc
cmp
pop
jmp
std
lea
jo
pop
mov
cld
hlt
loop
int
sub
rcrl
xchg
sub
loope
pop
outsl
jno
lahf
das
xchg
mov
cmc
cs
lcall
aaa
ja
pop
mov
dec
stos
lcall
loope
loop
jg
fsubrs
popf
adc
shll
add
loopne
daa
xchg
mov
neg
xchg
imul
adc
popa
int
out
push
xchg
push
sub
dec
sub
int3
jecxz
jo
cmpsl
ljmp
jp
in
cmp
push
out
push
mov
mov
fbstp
cltd
and
out
push
jbe
mov
out
and
shlb
sarl
cmp
mov
aas
mov
xchg
in
imul
ds
int3
jno
lahf
in
push
cmc
pop
arpl
push
jae
xchg
or
push
cmc
and
popf
pushf
scas
shlb
mov
out
pop
pop
mov
push
jnp
sbb
scas
call
sbb
enter
sub
mov
push
mov
mov
nop
mov
and
movsb
hlt
xchg
push
dec
cmp
add
jp
pop
mov
pop
dec
dec
out
xchg
ret
adc
adc
scas
jmp
mov
inc
ret
ffreep
jmp
xchg
inc
fdivrs
dec
stos
mov
mov
mov
fidivrl
mov
test
addr16
sub
stos
xchg
mov
jmp
inc
fs
cmc
add
and
decl
icebp
out
inc
aas
cmp
bound
aam
jmp
push
mov
push
jmp
test
xchg
cmp
imul
out
mov
lods
lods
mov
scas
inc
dec
xchg
push
mov
sbb
dec
and
das
sbb
dec
xlat
mov
leave
test
mov
mov
jge
das
mov
nop
mov
cmp
dec
dec
mov
mov
or
test
mov
mov
sbbl
cwtl
mov
adc
insl
imul
data16
pmulhw
jmp
dec
mov
add
scas
fld1
mov
loop
call
inc
push
cmp
sbb
jnp
sbb
mov
add
shrb
push
js
fwait
addps
inc
mov
aaa
into
loope
add
mov
push
mov
loopne
movsb
jg
jns
test
in
inc
jl
mov
pusha
pop
imul
outsl
mov
mov
std
movsl
leave
xchg
out
clc
or
movsb
jno
fstpl
lret
rcl
and
push
or
outsl
pusha
sub
mov
jb
ror
mov
mov
mov
call
jl
dec
mov
aaa
mov
scas
cld
sarb
xor
loope
or
pop
in
into
pop
out
xchg
pop
jbe
out
and
movsl
movsb
inc
pop
mov
lds
shrb
leave
fcoms
mov
je
mov
inc
dec
xlat
call
and
fwait
inc
xchg
enter
sbb
cmc
xor
and
jg
and
dec
loopne
lea
aaa
and
mov
mov
push
rcrb
push
in
pop
enter
adc
sub
int3
aad
insl
jae
jp
mov
xchg
pop
shl
insl
mov
mov
aad
stos
test
mov
xchg
dec
hlt
fcomip
pop
in
sbb
adc
shlb
stc
inc
jge
and
fimull
ret
push
xchg
les
lods
stos
xchg
ret
call
add
outsb
bnd
dec
mov
fdivrl
push
mov
sub
jnp
cld
add
xor
pop
sbb
mov
and
mov
cmp
jg
ret
xchg
push
dec
jp
scas
adc
out
mov
sbb
fs
add
fldcw
movb
loopne
stos
adc
addr16
inc
imul
mov
sbb
adcl
aas
int3
sbb
cmp
ror
jg
pop
loope
push
dec
loopne
orl
xor
mov
into
lods
mov
scas
adcb
pop
xchg
jo
stos
push
pop
out
shll
jns
popf
push
outsb
jp
and
xchg
sbb
mov
or
sbb
cmp
mov
inc
scas
add
push
xchg
cmpb
xor
test
push
nop
ljmp
adcb
sub
repz
inc
lret
incl
push
add
mov
fisubl
outsl
int3
sbb
in
sbb
sbb
pop
mov
mov
mov
pop
jbe
int3
sahf
fldenv
movsb
cld
dec
xchg
xor
dec
dec
aam
test
iret
dec
jae
lock
outsb
add
mov
and
lcall
push
jae
cmp
jecxz
and
fs
dec
dec
in
addr16
dec
push
lret
cltd
push
push
ja
js
dec
sub
push
das
ss
stc
add
mov
xor
cli
arpl
js
jbe
fdivr
pushf
subb
into
gs
aas
mov
fs
inc
push
lds
mov
dec
popa
and
push
push
jge
xorl
lock
das
shlb
arpl
arpl
xchg
mov
fnstsw
cmp
loopne
out
xor
jns
sub
pop
pop
lahf
pop
cli
mov
push
ficoms
shl
imul
mov
popf
fs
xchg
or
jnp
lret
imul
sub
repz
insl
mov
jp
lret
push
mov
pop
mov
lret
fdivl
cmp
stos
inc
jg
mov
daa
mov
test
pop
pop
jecxz
clc
add
pop
sbb
pop
sub
push
pop
lret
or
aaa
dec
jae
xchg
cmp
scas
cmp
xlat
xor
arpl
mov
cltd
mov
dec
sahf
sbb
pushf
pop
outsb
add
lahf
push
mov
xor
int3
dec
add
push
and
pop
and
lahf
cld
aam
adc
loop
inc
inc
out
push
add
lret
das
add
pop
insl
inc
in
test
aaa
outsl
mov
setg
and
cmpl
inc
rol
fisubrs
out
das
sbb
outsb
fisttps
pop
js
test
nop
jmp
out
sbb
fidivrs
push
out
clc
pop
icebp
repz
inc
dec
cs
clc
pop
imul
sub
scas
sub
out
jg
scas
int
inc
mov
cld
and
xchg
jg
test
aad
sbb
ficomps
cld
fsubr
negl
out
jle
push
cmp
xchg
imul
jmp
xchg
push
push
mov
daa
inc
stos
xchg
xor
add
push
jge
sbb
cmpsl
xor
push
call
xchg
enter
sub
lret
dec
add
and
shlb
mull
sbb
mov
clc
adc
sbb
insb
jns
xor
and
pop
xor
outsl
or
movsl
jnp
int3
test
roll
pop
je
mov
mov
inc
nop
mov
sub
ficoms
and
ds
fsubl
mov
outsl
mov
adc
fcos
lahf
inc
jl
and
lods
enter
insb
xchg
xor
cmpsb
xor
enter
ds
or
in
cmp
mov
and
pop
dec
lds
loop
lret
fdivrs
ja
push
leave
push
cmpsl
fstpt
insl
repnz
mov
pop
outsb
scas
mov
aaa
mov
jmp
sub
leave
fdiv
push
and
jb
orb
mov
aad
pop
mov
movsb
push
sti
add
or
lahf
in
cmpsl
inc
push
xor
mov
rorl
lds
out
repnz
xchg
jmp
int3
mov
and
sbb
cmp
lock
sbb
cli
add
fsubrl
stc
mov
scas
stos
pop
fidivrl
outsb
js
mov
pop
dec
arpl
jae
rorb
das
repz
sbb
mov
cli
lods
in
mov
in
out
jg
mov
or
bound
gs
push
in
xor
test
cmc
mov
arpl
mov
sbb
les
jns
ror
cwtl
repnz
shr
sub
push
sbb
mov
std
pushf
bound
mov
mov
inc
and
lret
mov
and
add
fnstcw
arpl
cmp
cltd
sub
lret
lea
lods
cmpsb
stos
pop
pop
es
mov
mov
test
xchg
in
push
push
scas
pusha
cmp
dec
pop
xchg
ret
jno
push
out
insl
pusha
sbb
bound
dec
ja
dec
insl
mov
lret
and
imul
inc
cld
movsb
mov
jmp
jns
inc
push
mov
and
jl
repnz
test
jbe
add
popa
fimuls
cmp
aam
mov
push
jl
ds
sbb
pop
xchg
sub
pop
pop
lock
adc
xor
jl
inc
roll
je
out
pop
das
mov
xor
jg
dec
adc
ficompl
gs
ja
call
test
and
sbb
add
mov
ret
or
jge
inc
and
stc
sub
sti
clc
fwait
aad
mov
gs
sub
adc
lcall
sub
mov
lret
jns
ds
fdivr
sub
dec
testl
push
aaa
int3
leave
pop
cld
in
int
mov
das
pop
jecxz
sub
test
xchg
insl
clc
xchg
xor
jmp
push
loop
push
push
sbb
and
cwtl
add
xchg
int
loopne
sbb
jmp
sbb
add
mov
jbe
push
adc
stos
sti
xor
and
xchg
add
push
add
mov
push
xchg
mov
pop
adc
fs
rolb
sahf
imul
scas
pop
test
xlat
fwait
clc
inc
cli
pop
mov
jae
or
mov
or
and
mov
leave
xlat
aas
pop
fisttpl
je
sub
or
roll
leave
je
push
mov
andb
test
or
and
mull
cmp
xchg
cmpsl
sub
xor
popa
adc
call
sbb
vpaddsw
jae
xchg
sbb
std
test
xchg
sbb
mov
test
pusha
cmc
push
aam
xor
sub
lock
loope
mov
bound
testb
mov
mov
idiv
outsl
add
mov
xchg
jle
add
and
ret
es
or
sbb
frstor
test
mov
ret
in
xor
jle
jmp
jno
jl
mov
test
xchg
jne
mov
inc
mov
cmp
mov
mov
in
sbb
inc
jg
mov
xchg
mov
cwtl
lds
insl
cmpsb
sahf
jecxz
sbb
sbb
mov
push
mov
push
outsl
or
call
stos
push
ds
popf
daa
add
lret
or
or
loopne
jbe
pop
cs
lret
jo
push
ror
mov
int3
sbb
lds
ljmp
or
test
mov
test
les
xchg
mulb
sub
xor
and
and
nop
mov
cli
mov
mov
adc
ljmp
xchg
dec
pop
jbe
fs
out
loopne
pushf
add
ss
mov
cmp
in
in
mov
nop
add
xlat
cmp
jbe
std
jae
pop
inc
cld
push
dec
push
push
scas
push
lock
rorl
pop
lock
sbb
sbb
nop
adc
mov
adc
repnz
push
sbb
stos
lret
negb
xchg
or
xchg
pop
in
mov
inc
in
jmp
lret
jp
mov
jbe
mov
jae
popf
leave
sub
dec
dec
xlat
pop
mov
ret
jle
or
pop
fyl2xp1
lods
mov
sub
dec
inc
sub
in
cld
out
mov
ds
push
sbb
dec
sahf
mov
sub
sahf
or
mov
sub
and
or
mov
or
movsb
jnp
je
lea
cwtl
std
sbb
jb
push
imul
adc
sbb
cmp
mov
cltd
dec
stos
sub
in
mov
aam
insl
and
xchg
loope
sarl
lock
data16
fsts
jle
stc
push
mov
add
mov
rcll
sub
jmp
in
inc
sar
adc
testb
xchg
lods
adc
in
jle
xor
sbb
sub
in
sbb
jnp
dec
push
mov
sbb
xor
jp
and
adc
mov
icebp
mov
pusha
loope
stos
push
push
sbb
add
pop
fdivr
inc
and
pop
push
push
loop
add
pop
outsl
outsb
add
fisttps
fadds
and
mov
adc
adc
xchg
fbstp
mov
pop
mov
push
xchg
les
mov
test
adc
dec
enter
mov
mov
ds
out
mov
fimull
cltd
mov
outsl
das
dec
fisubs
push
or
and
iret
test
clc
inc
fcoms
stos
cmpsl
dec
mov
lock
out
sbb
inc
out
xabort
push
mov
mov
fsubp
dec
or
inc
sbb
aas
jl
fmul
jnp
test
jmp
push
aam
cltd
adc
repnz
aaa
jg
mov
add
enter
pop
sub
mov
fstps
lcall
enter
push
sbb
mov
popf
jno
or
cwtl
hlt
and
push
repz
sub
ljmp
divb
jecxz
in
pop
add
aam
pop
gs
and
les
xor
subl
xchg
mov
in
and
push
imul
repz
mov
add
test
cmp
fs
ljmp
xchg
out
insl
or
lret
add
pop
cs
mov
js
sub
dec
ds
dec
sbb
movl
int3
loop,pt
jecxz
or
call
and
mul
cmp
adc
arpl
xchg
jbe
xor
stos
adc
dec
outsl
call
fnsave
push
sub
cmp
dec
pop
push
mov
sub
push
cmpl
sub
pop
mov
cwtl
push
xor
roll
push
mov
enter
xorl
cmp
sti
lcall
cmp
inc
scas
cmp
mov
out
lcall
add
loopne
mov
jge
inc
fiadds
push
insl
inc
subb
sub
test
lock
push
add
pop
icebp
mov
mov
into
scas
imul
arpl
push
decb
cmc
lcall
popl
repz
test
push
hlt
test
xchg
inc
inc
sub
lods
pop
inc
rorl
xchg
ret
jae
int3
sarl
pop
pop
popf
jmp
pop
cs
insb
xchg
inc
rcll
cltd
imul
jbe
rcrb
jp
or
in
dec
popf
in
mov
xor
sbb
inc
pop
mov
or
xorb
sbb
xlat
out
insl
mov
out
into
xor
and
rorb
test
xchg
iret
cmp
jge
add
xchg
stos
sbb
in
pop
in
out
inc
pop
inc
mov
sub
pop
aad
cmc
mov
in
popf
lcall
sub
nop
push
lods
scas
rorl
jmp
ret
xchg
out
sbb
xor
fs
mov
jmp
adc
mov
mov
xchg
mov
bnd
pop
test
pop
ret
les
subl
xor
jo
push
xchg
push
adc
popa
leave
ljmp
fnsave
xchg
sarb
sub
push
adc
daa
enter
scas
das
cmp
xchg
imul
iret
push
or
pop
jge
iret
or
adc
sbb
rcrl
fwait
mov
and
daa
sbb
in
test
cwtl
lea
pop
idiv
ja
cwtl
mov
or
out
jb
cmp
mov
jmp
in
push
out
jne
ror
outsb
rorl
ja
mov
mov
jbe
mov
sub
outsb
jne
imul
jno
aas
outsb
and
push
mov
nop
mov
mov
mov
mov
clc
xor
or
jge
bound
push
xchg
xor
inc
lock
xchg
jne
inc
lods
mov
or
sub
das
sub
fsubrl
int
scas
jmp
xor
inc
cmp
cmp
or
and
jns
pop
subb
mov
fdivr
dec
pushf
out
xor
rep
jg
xorl
cmp
test
mov
fs
dec
lock
daa
dec
mov
mov
fisubrl
out
cwtl
je
dec
mov
mov
jno
mov
and
arpl
jbe
scas
in
lods
out
add
cmp
aaa
push
popf
fldt
clc
xlat
mov
iret
adc
sub
push
xchg
ret
ljmp
nop
lds
ficomps
push
scas
fdivl
out
sbb
fisubl
les
xor
fidivl
push
scas
sti
or
push
fwait
data16
ret
mov
aad
insl
iret
cmp
cs
and
add
in
int
and
jl
mov
and
xchg
sahf
or
cmp
cmp
mov
ret
insl
or
cltd
aad
in
xchg
clc
xchg
sbb
fdivrs
jae
bound
cmc
daa
sub
mov
addr16
push
bound
sarb
pop
adc
adc
jne
and
leave
ret
adc
pop
xchg
aaa
andl
mov
dec
xchg
cmp
fwait
stos
xchg
push
stos
pop
aaa
js
mov
xchg
clc
mov
push
xor
fisubs
fs
cltd
mov
rclb
mov
or
sub
push
xchg
in
lods
push
test
dec
jmp
add
jmp
jecxz
in
neg
push
lock
jle
call
stc
inc
lahf
leave
ret
sbb
add
es
jmp
cmp
ret
xchg
xchg
addl
mov
mov
dec
es
and
fistl
fwait
mov
add
xchg
sub
inc
popf
or
rcl
jmp
adc
cmp
hlt
push
cli
mov
sbb
leave
sti
cmpsl
sbb
cli
jle
jae
aaa
mov
leave
fdivl
xorb
out
and
sbb
aaa
stos
stc
out
lret
dec
stos
fs
adc
xchg
sub
jg
mov
mov
sub
sahf
test
inc
fisttpl
enter
in
pushf
sbb
jnp
xchg
jno
ljmp
or
pop
mov
and
cli
scas
shll
mov
and
ja
lea
mov
les
sahf
fwait
aad
push
sub
call
sub
xchg
pop
jmp
je
in
in
mov
mov
mov
cs
pop
sub
inc
sub
pusha
dec
xchg
push
adc
push
xchg
lahf
loop
test
gs
repnz
mov
das
inc
aad
inc
push
loop
lea
je
xor
mov
sbbb
stos
mov
xorl
xlat
push
in
cli
int
pop
jle
add
jbe
pushf
cmp
xor
int
aam
es
shl
cmp
pushf
or
or
xchg
imul
add
cs
xchg
mov
imul
imul
jae
nop
mov
adc
add
inc
repz
outsb
cwtd
xchg
and
jnp
dec
mov
aaa
push
aaa
andb
js
imul
in
out
call
or
bound
movb
lret
inc
aaa
jmp
psubsb
aad
aam
pop
rolb
std
lahf
sub
sbb
jp
dec
dec
dec
xchg
sub
inc
lea
pop
loop
popf
pop
gs
stos
fdivl
in
adc
lock
int
inc
imul
fdivrs
adc
xchg
push
fdivs
mov
jbe
frstor
aad
es
imull
mov
adc
push
mov
or
or
addr16
out
jle
push
stos
lcall
popa
and
aaa
inc
or
stc
push
fld1
pop
sbb
iret
or
lods
in
add
mov
jae
cmp
inc
test
pusha
addl
adc
mov
xor
notb
or
lahf
xchg
std
arpl
jnp
int
ret
jae
sbb
xchg
movsb
mov
xchg
add
imul
cmpsb
jge
add
mov
and
pusha
repz
ret
loope
lahf
mov
cwtl
xchg
mov
ss
add
fs
aam
mov
jg
and
pusha
cmp
in
out
mov
sti
xor
sbb
sub
add
mov
jne
mov
xor
cmp
lds
lahf
int
loop
clc
fisubrs
ret
or
fdivl
jns
ljmp
mov
mov
hlt
lods
lods
push
mov
pusha
fwait
fcomps
ret
fwait
jl
pop
insl
xor
aas
stos
movsl
insl
or
pusha
mov
mov
pop
sbb
push
mov
push
dec
aam
push
mov
iret
dec
sahf
sub
mov
adc
lahf
sub
out
lcall
dec
mov
pop
inc
enter
jmp
movsl
pop
mov
and
push
outsl
push
inc
and
mov
jnp
fwait
mov
scas
test
cmp
sub
sub
pusha
jb
sbb
sti
push
scas
push
ret
push
push
pop
gs
xlat
sub
lods
sub
or
cli
mov
pop
mov
dec
xor
xchg
aaa
rcrl
jmp
ja
fwait
stc
or
xchg
or
scas
movsl
pop
pop
push
jge
push
data16
xor
data16
pop
decb
add
and
lock
lahf
stos
inc
jecxz
cmp
push
jbe
lahf
test
sbb
xor
aas
push
pop
push
ljmp
sbb
sbb
cli
in
test
scas
inc
pop
pop
aas
les
iret
mov
cs
lret
fisubrs
jns
inc
adc
dec
push
arpl
xor
cmpsl
cmp
push
sbb
jmp
call
cmpsb
int
xor
lds
mov
gs
fcmovnb
sarl
lock
popa
sbb
push
xchg
arpl
fwait
arpl
jo
ret
lahf
or
int
cmp
dec
je
mov
outsl
mov
ja
test
movsl
mull
jb
enter
je
push
or
shrb
mov
jne
mov
adc
sbbl
bound
incb
je
aad
test
dec
loopne
inc
lock
sub
push
sbb
pop
jge
jno
fisttps
mov
insb
cmp
push
aad
sbb
mov
push
lcall
jp
shrb
sarb
xor
repz
insb
iret
add
push
lahf
pop
push
xchg
sbb
sbb
xor
imul
movsb
mov
push
imul
adc
cmp
add
dec
mov
cmc
xlat
push
dec
push
xor
dec
imulb
je
xchg
xchg
mov
or
cld
or
cmp
test
pop
xor
cmp
jmp
adc
fstpt
mov
or
push
push
jns,pn
les
sbb
jmp
mov
lret
sub
sahf
push
adc
clc
cli
mov
aad
sbb
or
adc
or
int
pop
adc
sbbl
pop
dec
dec
and
or
out
data16
adc
jg
mov
pop
repnz
in
lods
jl
cmp
in
imul
popa
inc
cmpsb
rol
inc
mov
push
pop
in
cmpl
mov
loope
push
btc
lock
jge
add
jbe
aaa
push
ljmp
test
sbb
mov
dec
enter
inc
adc
stos
nop
incl
dec
in
inc
dec
cs
into
cwtl
idivl
test
jb
adc
or
mov
and
jp
push
insl
cmc
xor
mov
mov
jno
filds
fisttpl
out
adc
fs
bound
jbe
sbb
jle
lock
test
cmp
xchg
dec
cwtl
test
out
sbb
clc
loopne
xor
outsb
subl
inc
pop
adc
mov
subb
sub
sar
mov
jl
mov
sub
jb
lods
les
mov
dec
jno
inc
mov
sti
jne
add
loope
outsb
arpl
pop
pushf
mov
ljmp
push
sahf
push
mov
jne
out
push
jg
fisubrl
orl
add
dec
jo
jb
jge
pop
icebp
add
inc
in
pusha
dec
shlb
out
and
in
lock
xchg
push
or
jo
pop
push
das
aam
pop
arpl
ja
push
xor
enter
and
sub
fdivs
stc
xchg
daa
xor
xchg
rorb
sti
lods
pushf
rclb
jle
jp
arpl
loopne
into
mov
xchg
rolb
push
push
stos
cmpl
cld
cli
pop
inc
and
mov
adc
xchg
inc
xor
mov
and
jnp
loop,pn
test
out
imul
sub
push
iret
out
lret
jmp
stos
xlat
fs
repnz
push
mov
clc
pop
das
inc
add
in
push
repnz
xlat
lods
and
sahf
out
sub
scas
push
clc
dec
adc
cmp
out
or
lods
push
in
icebp
mov
mov
or
test
xor
inc
xchg
inc
push
out
mov
std
fldl
jecxz
sub
inc
mov
pop
pop
in
xchg
jge
mov
push
jg
mov
push
pop
and
sbb
roll
into
subb
mov
xchg
shl
add
sub
cli
mov
rolb
jnp
inc
mov
bound
and
push
xor
inc
lcall
or
jbe
cmp
push
xor
mov
push
sbb
inc
arpl
fcmovb
int3
fcoml
cmc
inc
mov
call
add
mov
bound
mov
imul
inc
dec
andb
pop
repnz
popa
mov
jb
repnz
fistpll
push
aas
xor
out
rclb
daa
and
push
jp
aad
sbb
fs
negb
xchg
add
shrb
jne
sahf
bound
lea
adc
lret
loope
fcoml
mov
shl
mov
sbb
push
push
addl
xchg
stc
shr
push
inc
or
pop
int3
sarl
imul
repz
bound
fldt
inc
inc
jmp
push
xlat
xchg
pop
out
mov
mov
clc
inc
jb
clc
mov
adc
inc
rolb
out
adc
in
dec
test
leave
stos
pop
mov
popa
pop
push
mov
add
xor
lcall
mov
push
push
push
test
fldcw
xchg
in
push
cld
test
mov
jo
jmp
jnp
xor
dec
dec
adc
jg
cli
sub
pop
xor
xor
push
sub
out
sub
sub
sbb
or
clc
in
add
rclb
or
imul
mov
sub
into
or
das
minps
cwtl
cmp
stc
push
xchg
dec
js
fisubl
call
xchg
jg
xchg
add
mov
aaa
daa
mov
add
int
nop
rcrb
cmp
mov
test
rorl
inc
loope
loope
inc
jno
sbb
cmp
push
lds
add
or
insb
fistpl
add
add
mov
rclb
and
sub
inc
jae
dec
sbb
ljmp
mov
pop
lds
xor
and
push
pop
xchg
mov
mov
adc
movsl
fidivs
fiaddl
enter
std
cmc
leave
in
nop
mov
mov
adc
out
jle
ja,pt
cltd
aas
cmc
in
sbb
into
jmp
pop
push
aam
idiv
push
xchg
pop
dec
xchg
lods
jle
jo
inc
add
or
inc
lods
lret
roll
call
push
bound
aaa
int
ds
mov
inc
push
push
mov
pop
insl
adc
loop
outsb
popf
push
aam
repnz
loop
cltd
xchg
sbb
cs
sbb
in
rcrb
sub
add
lds
add
jle
iret
push
rorb
jnp
in
popa
xchg
cmp
add
mov
lods
stos
add
or
sbb
lea
cmp
popf
pop
lcall
mov
andb
xchg
clc
xchg
ljmp
dec
push
lret
mov
pop
inc
add
imul
cmp
or
dec
nop
cmpsl
inc
ja
and
inc
mov
lcall
popa
push
lahf
inc
push
call
iret
pop
mov
in
js
andb
jnp
lret
mov
add
loop
loopne
push
sub
add
call
out
std
dec
jo
iret
lods
mov
xchg
sub
sub
lcall
sarl
cmp
sbb
inc
aam
adc
fidivl
sub
sub
mov
xchg
cmp
pop
mov
mov
shlb
ficoml
insb
mov
cmp
push
cmc
pushf
pusha
ds
int
lods
loop
int
stos
mov
jae
add
hlt
inc
lcall
call
gs
lods
loopne
jns
cmp
imul
scas
pop
mov
xchg
xlat
shrb
repnz
inc
mov
xor
xchg
lock
jg
into
stos
pop
pushf
dec
gs
cld
ret
mov
mov
mov
inc
inc
mov
rcrb
sbb
stc
dec
add
mov
dec
imul
subb
loopne
outsl
jne
push
out
cmp
insl
sbb
cmpsb
inc
mov
int3
fcomps
or
push
or
mov
out
mov
and
mov
stos
cli
stos
scas
ficompl
pop
jo
mov
mov
addr16
xlat
repnz
adcl
insb
xchg
fdivl
stc
mov
mov
and
mov
js
xchg
test
arpl
aaa
fidivrl
inc
and
add
jp
add
adc
sbb
adc
aas
adc
pop
pop
mov
xor
mov
sarl
lds
arpl
xlat
fcoml
cmp
arpl
pop
sub
das
dec
lcall
push
jl
out
mov
aad
fnstenv
fldl2e
movsb
mov
push
mov
push
dec
adc
xorl
testb
bound
gs
push
dec
cmp
das
mov
xchg
xor
hlt
pop
jno
fists
mov
jne
movsl
or
mov
and
std
arpl
scas
mov
mov
mov
int
pusha
das
mov
or
cmp
adc
sti
xchg
cmpsl
cmpsb
inc
out
mov
sub
sbb
dec
loope
rcrl
or
add
mov
jp
test
inc
jge
cmp
not
stc
cs
xchg
push
pop
push
rcrl
mov
add
mov
mov
fcoms
fidivrl
add
cmp
fdivl
sarb
je
jns
xchg
or
cmp
adc
jecxz
repnz
adc
pusha
pop
fsubs
fwait
pop
adc
lcall
pop
xor
enter
sub
push
shr
into
xchg
mov
cmp
ja
push
cld
test
fisubrs
push
pop
int
incl
inc
push
fsubrl
dec
lods
cmp
dec
or
cmp
mov
pop
mov
loopne
scas
das
test
xchg
and
xor
fs
cmp
scas
cmp
in
add
lahf
addr16
test
mov
adcl
xchg
xchg
movsb
cwtl
jae
cmp
or
xchg
pop
inc
push
inc
mov
std
cmpb
push
rclb
gs
inc
pop
andb
incb
scas
repnz
adc
or
movsl
mov
cs
insb
rcll
pop
mov
adcl
and
or
lret
dec
add
setnp
jg
cld
mov
fwait
jnp
call
push
push
or
mov
adc
pop
out
das
mov
mov
insb
rcl
sub
mov
or
in
adc
and
mov
and
rcrb
xlat
mov
mov
movsl
mov
cmp
add
jne
sub
xchg
testb
sahf
mov
and
pop
jns
clc
cld
cmp
fnsave
scas
mov
test
mov
out
test
cs
nop
lcall
sbb
add
adc
lock
repnz
test
bndldx
pop
jb
mulb
ljmp
nop
mov
jbe
lods
sbb
fcompl
pop
push
aas
cmp
loope
aam
push
pusha
loop
aaa
icebp
in
jmp
sbb
dec
orb
aad
sahf
mov
in
out
cmp
push
js
lds
inc
fimull
sub
mov
push
shl
dec
push
js
dec
addr16
push
dec
inc
pop
push
mov
sbb
pop
dec
xchg
add
repnz
mov
fists
sarl
push
or
mov
ja
js
adc
aad
and
sbb
xor
mov
jecxz
sbb
cmp
ret
jnp
xchg
sub
test
lock
sarb
sbb
mov
mov
rorl
out
pop
sahf
imul
pop
loop
es
call
mov
movsl
xlat
loope
xchg
pop
push
ljmp
push
xor
repz
mov
mov
mov
pop
xchg
cld
sbb
imul
addr16
rorb
cltd
xchg
mov
mov
xchg
in
loopne
orl
xchg
sahf
push
in
sahf
repnz
mov
cmp
xchg
movsb
neg
sbb
popa
or
cltd
sub
pop
adc
sbb
pop
cs
outsb
push
mov
orb
dec
popf
mov
jecxz
add
imul
or
mov
loope
push
das
pop
loopne
mov
loope
xchg
int3
das
xor
aaa
xlat
int
sbbb
loop
pop
xor
xor
test
in
mov
call
cld
hlt
movsl
lds
mov
pop
mov
pushf
sub
xor
sub
mov
add
dec
data16
adc
fidivrs
repz
dec
mov
and
insl
push
loop
scas
and
and
arpl
arpl
pop
sarb
mov
mov
xchg
cmp
jg
or
push
inc
mov
lods
xlat
dec
xchg
push
fsubr
das
mov
mov
popl
lods
xchg
mov
xor
mov
aam
jno
cmpsb
jecxz
xchg
push
arpl
pop
cs
xchg
mov
mov
lods
xor
nop
mov
jae
mov
roll
movsb
lahf
fisttps
sub
icebp
xchg
lods
fmull
sbb
dec
mov
jno
push
push
add
rcll
out
inc
or
mov
jne
call
loope
popf
xchg
mov
lret
cmp
mov
inc
or
mov
lods
out
pslld
xor
imul
in
das
mov
outsb
cmpsb
das
or
cmp
cmp
sbb
out
loop
push
scas
push
sahf
mov
shlb
pop
xor
lods
cmpsb
push
xor
jmp
je
fwait
jne
pushl
orl
sbb
fs
sbb
lods
insl
inc
sbb
arpl
in
mov
pop
mov
xor
mov
fbld
jle
into
and
fbld
pop
inc
lret
outsb
daa
test
in
pop
mov
cwtl
out
or
xchg
imul
fdecstp
out
in
and
int
test
scas
push
scas
pusha
cmp
popf
out
mov
bound
mov
adc
pop
push
inc
in
fstl
mov
shrb
mov
sbb
push
cwtl
xor
add
lcall
or
icebp
pop
jb
lea
addr16
cltd
add
cmc
jl
jno
pop
mov
push
jnp
in
and
stc
pop
lods
insl
mov
fldl
xor
fldcw
sub
mov
cmc
dec
lock
mov
xor
sub
and
fdivr
xchg
sub
jo
inc
out
clc
pushf
sbb
stc
mov
jnp
sub
loopne
sub
pop
lret
inc
aaa
aad
stos
adc
or
clc
cltd
sub
mov
push
sahf
sbb
sub
pop
test
jb
jp
push
bound
and
dec
and
mov
loop
mov
insb
repz
add
jmp
insl
pop
aad
ja
push
jle
ret
cmp
mov
xor
dec
sbb
xchg
jno
and
sub
in
pop
pop
das
jp
rorl
sub
pop
std
adc
sbb
icebp
sub
xorb
clc
idiv
stos
add
cmp
scas
aam
and
aaa
stc
enter
andb
inc
xchg
stc
and
add
push
jns
inc
inc
xchg
cli
inc
adc
cmpsl
xor
into
add
or
xor
inc
mov
xor
cmp
pop
cmp
and
sub
and
add
pop
out
lods
sbb
mov
iret
push
mov
loopne
fcoml
push
add
lret
clc
push
xchg
fnstsw
imul
xor
dec
pushf
sti
inc
cmpsl
dec
seta
mov
repz
lcall
adc
dec
and
fdivrl
add
dec
test
inc
scas
pop
cs
xchg
loopne
pop
int3
mov
insb
mov
popa
push
enter
or
push
loopne
xor
mov
scas
or
in
imul
imul
adcl
pop
sbb
es
repz
stos
lds
push
push
mov
mov
rclb
sub
sbb
jle
mov
jl
pushf
mov
mov
push
push
jae
test
ret
mov
pop
movsl
daa
and
inc
pop
dec
push
pop
jb
es
cs
out
push
out
std
ss
jbe
push
mov
outsl
rol
xor
pop
int
jb
cmpsb
push
mov
loope
add
in
add
incl
pop
push
subb
and
jge
sti
nop
push
cmpsb
dec
mov
rolb
inc
xor
adc
inc
lret
sub
cmp
adc
jbe
cli
dec
test
cmpsl
lahf
ljmp
mov
push
cwtl
cwtl
in
push
xor
sbb
or
xchg
dec
mov
pop
cli
push
xor
pop
loop
jnp
jle
mov
ljmp
ret
movsl
aaa
aam
aas
lods
and
xor
imul
cmpsb
data16
xchg
leave
in
enter
nop
out
adc
leave
cmpsl
jmp
xchg
mov
add
inc
je
inc
dec
iret
jns
pop
mov
adc
bound
sahf
mov
aaa
out
cmp
xchg
mul
mov
lods
sub
cli
insl
and
das
pop
xor
dec
icebp
stos
add
jne
dec
push
ss
imul
into
inc
add
and
jecxz
mov
mov
mov
pop
int
shrl
out
cmp
out
mov
ficompl
inc
dec
js
mov
inc
xorb
fcoml
cmc
cmpps
cmp
mov
and
dec
pop
sub
pop
mov
push
jmp
add
test
ljmp
or
pop
ljmp
mov
dec
jbe
mov
insl
rorb
jecxz
mov
or
movsb
cmp
lahf
push
sub
or
aad
jnp
cmp
out
cmp
iret
and
frstor
pop
xor
or
mov
sub
mov
inc
xor
loope
stc
decl
sbb
sub
subb
outsb
fs
fwait
add
dec
das
mov
push
testl
sbb
dec
pop
inc
fdiv
gs
loop
push
sbb
iret
jle
fidivs
xchg
sub
and
fsubrl
stos
lahf
xor
dec
push
mov
dec
ret
push
dec
sub
addr16
sahf
jno
sub
dec
mov
or
pushf
sbb
jo
mov
xor
xchg
lcall
fs
int3
adc
mov
popf
scas
inc
mov
mov
inc
ucomiss
push
outsb
rcrl
test
inc
adc
arpl
xchg
inc
or
mov
cmp
addr16
ja
and
loopne
sbb
aas
xchg
mov
fsubrl
sqrtps
mov
clc
mov
sbb
sahf
adc
xor
lds
lahf
lea
fdivl
leave
imul
pop
aam
pop
pop
xor
cmpsl
sbb
add
xchg
popa
call
les
jno
scas
movsb
cmp
pusha
aam
xchg
mov
sahf
sub
jp
lahf
imul
mov
push
add
sahf
cltd
rcl
fsubr
int
xchg
xchg
fisubs
out
jnp
mov
mov
mov
sub
sbb
mov
mov
cwtl
sbbl
xlat
idivb
push
mov
cmp
xchg
sti
mov
in
mov
lahf
inc
imul
popa
faddp
cmpb
cmp
mov
loope
mov
xor
test
sub
ss
xchg
icebp
inc
xchg
mov
lods
mov
loope
addr16
lods
mov
into
cmc
mov
pop
lahf
cmpsb
xchg
sub
push
idivb
and
scas
jno
cmp
out
out
popa
cltd
mov
adc
mov
mov
movsb
mov
sub
in
jmp
out
clc
imul
out
inc
jge
leave
int3
mov
leave
add
stos
leave
lcall
sarb
int
and
mov
loope
sbb
out
sub
popf
ds
cmpl
lahf
scas
sub
mov
mov
rcrb
ja
stc
lea
xchg
inc
stc
aaa
push
adc
inc
fistpl
xchg
cltd
pushf
push
add
jb
in
sbb
xchg
push
adc
push
out
mov
mov
cs
clc
ror
outsl
call
jp
bound
mov
stos
and
mov
fs
pop
jnp
orb
lea
mov
addr16
scas
push
or
pop
lret
cmp
push
jecxz
lret
in
stos
and
push
jecxz
fcmovnb
enter
lods
aad
mov
add
or
out
imul
imul
cmp
popa
push
or
test
hlt
dec
out
ds
pushw
jo
mov
insl
and
icebp
or
jb
add
dec
lock
ljmp
enter
out
fwait
inc
fiadds
push
mov
lds
lahf
mov
sbb
aad
aaa
add
dec
mov
jae
mov
xor
sub
add
cwtl
insb
pop
das
jmp
scas
mov
ja
xor
dec
sub
shll
imul
subb
dec
arpl
mov
push
test
sahf
pusha
add
mov
test
clc
mov
mov
scas
fildl
mov
nop
mov
or
lods
lcall
xor
xor
pop
shrb
popa
std
mov
sbb
lea
xchg
xor
test
ss
inc
mov
test
mov
xlat
ja
shr
je
mov
xchg
pop
repz
mov
icebp
into
push
inc
adc
aaa
and
push
leave
jne
push
insl
inc
pop
ret
sbb
out
cs
cmp
jne
movsl
inc
shl
ret
imul
jmp
jg
lods
test
pop
adc
daa
mov
repz
inc
cmp
mov
sub
arpl
stos
fisubl
lods
mov
ficomps
push
mov
push
cwtl
shrb
cmpsb
pop
inc
lret
daa
lcall
cmp
mov
insb
push
fs
xor
mov
sbb
outsl
std
cltd
lea
jb
sub
js
jb
into
iret
pop
xor
mov
std
pop
fcoml
sbbl
push
xchg
xor
jle
xchg
cwtl
loope
pop
mov
dec
jecxz
mov
mov
ljmp
inc
mov
mov
or
sub
add
sbb
bound
and
outsl
push
push
outsl
mov
sti
out
add
rcrb
inc
loope
add
mov
mov
dec
ljmp
jecxz
divl
ss
cmp
loopne
daa
imul
mov
add
popa
nop
ljmp
add
adc
push
enter
rclb
jo
push
xchg
in
cmp
and
bound
push
adc
hlt
mov
cmpsl
ja
push
movsl
js
into
jns
sbb
add
pop
jl
mov
dec
inc
movsl
jle
add
shrl
fs
mov
cmp
sub
clc
mov
pushf
fstpl
cmpsl
mov
push
mov
jle
adc
shlb
pop
fiadds
test
dec
xor
pop
adc
add
sbb
mov
push
push
inc
adc
repnz
xor
jns
or
mov
adc
and
mov
pop
xchg
push
jmp
inc
js
mov
dec
lods
jle
cld
lcall
nop
shl
into
mov
dec
adc
cli
add
aam
outsb
sub
dec
inc
cmp
xor
outsl
mov
pop
imul
xor
xchg
inc
aaa
fildll
push
test
movaps
cmpsb
sub
mov
cltd
sarl
inc
out
inc
negl
push
sub
cmp
xorb
stos
sbb
mov
push
repnz
das
in
ret
movsl
shl
lret
mov
push
popf
pop
inc
adc
mov
dec
jge
mov
lea
imul
lock
data16
mov
dec
cmpsl
mov
pop
pop
push
aaa
iret
lret
lods
mov
bnd
filds
pop
es
mov
push
in
dec
add
decb
and
cltd
dec
call
mov
outsb
mov
shlb
aam
mov
sub
jne
dec
mov
ror
jbe
adc
int3
mov
lcall
aam
lods
rolb
jb
loope
fimull
jns
popa
jnp
in
shlb
lods
pop
mov
jns
ss
aam
mov
pop
out
je
fisubrl
jecxz
ja
or
dec
stos
shrb
pop
scas
inc
mov
and
cwtl
out
out
pushf
xor
and
push
test
popa
ja
jmp
lahf
jp
dec
jl
cmp
pop
jb
int3
add
mov
es
xchg
aam
mov
or
adc
inc
pop
dec
fsubl
jle
inc
movl
fmuls
dec
repnz
movsb
out
xor
pop
add
subl
jne
sbb
push
cmp
pusha
xchg
rolb
xchg
mov
mov
sti
int
jnp
imul
out
insl
adcb
hlt
fistpll
loop
xor
out
dec
sbb
pop
arpl
hlt
ficoms
push
and
mov
dec
test
xchg
inc
xor
mov
xchg
cmp
push
and
sbb
sub
inc
mov
jmp
and
mov
stos
push
stos
cli
fadds
sub
xchg
je
or
fbld
sti
ljmp
fcomps
hlt
cmpsb
adc
mov
pop
inc
ja
and
das
frstor
ja
cvtpi2ps
mov
dec
leave
scas
jno
sbb
cmpsl
mov
mov
mov
adc
inc
mov
movsb
ret
outsb
sbb
add
inc
add
or
mov
add
into
fildl
jnp
mov
add
sti
dec
mov
in
jnp
test
add
sbb
fwait
mov
popf
jmp
push
xor
add
popf
adc
xchg
mov
mov
mov
push
adc
ljmp
arpl
or
ds
push
into
inc
mov
push
test
fwait
fwait
lds
sar
jbe
adcb
cmp
gs
push
jne
or
aad
test
jle
sub
sub
es
jge
punpcklbw
pop
out
dec
fwait
cmp
xor
adc
mov
xor
loop
jno
cmp
or
inc
movsb
push
dec
cs
sarl
and
and
sbb
adc
das
inc
and
sbb
push
movsl
inc
test
repnz
je
scas
adc
sbb
pop
loop
pop
xchg
mov
aas
into
jne
pop
mov
int3
mov
push
pop
and
or
or
inc
scas
imul
push
add
movups
inc
imul
inc
add
leave
test
mov
push
cs
push
popf
xchg
clc
sub
lret
pop
pusha
outsl
xchg
pop
call
popf
push
rcrl
sbb
sub
in
fldenv
shrl
out
daa
addl
xchg
adc
mov
mov
and
xor
sub
out
dec
nop
sahf
orl
cmc
ljmp
push
sbb
or
mov
cmp
pop
iret
and
cmc
loop
mov
mov
fstps
sbb
xchg
insb
sbbb
pusha
adc
cld
stc
xchg
jle
aas
imul
into
push
and
roll
movsl
dec
sbb
repnz
cmp
enter
and
stos
mov
add
aaa
movsb
sub
mov
hlt
sub
stc
fwait
mov
filds
addb
sub
cli
enter
clc
jmp
dec
and
push
into
dec
lret
jp
add
cmp
fistpl
loop
inc
mov
bound
cltd
cwtl
inc
mov
xor
pop
and
hlt
idivb
lea
rcrb
adc
mov
clc
xchg
bound
out
push
daa
gs
xor
ret
cli
lahf
or
sub
or
test
andl
pop
push
pop
lahf
xchg
xlat
out
push
xchg
push
jnp
fs
fadd
mov
sbb
dec
jecxz
test
je
inc
in
nop
rorb
mov
xor
dec
or
iret
adc
or
fwait
mov
or
aam
inc
mov
in
sub
lods
ficomps
shlb
xchg
aaa
cmp
or
test
mov
andb
adc
adc
inc
insl
inc
dec
mov
add
pusha
cmp
insl
push
aas
fcomi
pop
out
sub
pop
push
cmp
int3
push
aad
or
fs
jp
out
loopne
scas
in
mov
div
mov
sbb
mov
std
mov
orb
pop
jle
testl
and
popf
or
shlb
push
fmul
push
push
xor
push
mov
sbb
add
mov
sarl
push
inc
popa
lock
aaa
mov
jecxz
xor
adc
aam
movsl
mov
arpl
mov
mov
lcall
ja
or
dec
xor
fmulp
xchg
pop
movsb
sbb
add
sbb
cli
sbb
leave
push
loope
sub
lods
mov
in
pop
js
fwait
push
ljmp
inc
sbb
aas
lahf
mov
inc
mov
out
fnstcw
and
test
sub
jns
cmp
arpl
ret
hlt
dec
and
pop
xchg
fstl
sub
sbb
xchg
cmp
sbbl
outsb
cmpsb
scas
int
mov
or
pop
push
sbb
and
std
call
mov
dec
pop
ds
sbb
push
icebp
inc
mov
leave
push
dec
int3
push
xlat
pop
das
and
mov
in
cmp
mov
daa
jnp
and
or
dec
sti
jne
shll
notl
push
push
and
cs
pop
dec
ja
lret
test
pop
ljmp
jae
xor
mov
cmc
inc
mov
xchg
movsb
jnp
addr16
push
aaa
cmp
es
mov
icebp
xlat
aam
dec
mov
lds
mov
clc
mov
leave
add
dec
push
cwtl
and
mov
cmp
popa
ljmp
mov
jecxz
leave
sbb
in
iret
cmp
mov
in
jb
mov
fcomi
mov
insb
je
inc
jge
mov
insl
jbe
mov
rclb
mov
pushf
stos
addr16
jno
inc
jbe
mov
jns
mov
stos
mov
cltd
out
dec
xor
cwtl
xlat
xchg
into
mov
or
out
mov
popf
out
pop
xchg
fcoml
call
jo
repnz
ret
arpl
fisubl
inc
int3
scas
int
je
sbb
sti
ret
mov
adc
xchg
int
xchg
push
or
add
cmp
mov
dec
push
add
inc
cmp
sbb
cwtl
aaa
fwait
in
cmp
push
loopne
aaa
cmp
lret
pop
jge
pop
inc
pop
mov
fildll
inc
rcll
orl
and
int3
inc
leave
mov
es
mov
sarb
xchg
daa
aas
cmp
inc
or
les
mov
xor
sub
dec
dec
inc
stos
popf
sub
inc
push
popa
out
add
ficompl
add
int
push
lret
lods
sbbb
mov
bound
test
inc
dec
fsubs
jae
in
cld
leave
jle
push
mov
dec
rcr
cmpsl
test
mull
ret
dec
flds
movsb
stos
inc
stos
gs
pop
cmp
sbb
push
insb
add
in
mov
popa
lods
push
call
push
add
sbb
cmc
mov
inc
mov
mov
insb
xor
xchg
enter
inc
and
loop
or
lret
sbb
cmp
and
jg
inc
and
outsb
aaa
sbb
test
loopne
xchg
and
repz
rolb
inc
sub
in
push
mov
leave
into
add
sub
sbb
jp
out
adc
js
clc
inc
rolb
push
loope
out
out
clc
dec
cmp
xor
adc
lods
push
mov
inc
lahf
imul
test
out
inc
xor
adc
into
int3
test
xor
icebp
sbb
xchg
sub
pushf
pusha
sarb
clc
dec
rorb
mov
rcrb
out
int
loopne
adc
mov
cld
call
pop
dec
mov
pop
mov
dec
out
daa
mov
daa
mov
scas
lock
mov
test
clc
bound
dec
and
int
jecxz
lret
imul
sub
test
push
fwait
insb
fwait
test
in
ss
fwait
scas
arpl
sbb
movsl
leave
or
lret
inc
hlt
movsl
js
lret
push
or
xchg
insb
sahf
out
xchg
xlat
lahf
das
in
sti
dec
inc
std
pop
imul
xor
jmp
imul
or
cmp
push
rcrb
mov
test
andb
dec
pop
xchg
dec
addr16
int
dec
pushf
ret
jecxz
aaa
sub
and
pop
in
xchg
or
bound
sahf
call
lock
cwtl
bound
bound
sub
mov
xchg
sub
pop
lods
pop
cmc
and
xor
dec
pop
cmp
out
mov
xor
sub
divl
jmp
jg
mov
stc
dec
mov
mov
mov
jge
out
repnz
enter
and
push
ret
outsb
mov
fs
push
jb
mov
push
les
pop
aam
mov
push
xor
rolb
pop
icebp
inc
mov
out
dec
lds
xor
imul
daa
jmp
bound
loope
jo
lret
icebp
mov
adc
inc
xor
lret
mov
cwtl
inc
mov
adc
mov
loopne
mov
jno
daa
dec
out
loopne
xchg
or
and
stos
out
dec
sbb
aad
mov
push
pushf
scas
decb
lahf
pusha
mov
rcll
mov
xchg
and
sti
mov
repnz
or
lods
hlt
xchg
adc
cmpsb
in
mov
mov
add
sbb
jge
push
fistl
or
cwtl
popl
leave
or
lock
xchg
lods
bound
int3
xchg
lods
rcr
cmp
pop
dec
dec
imul
push
mov
add
push
loop
mov
add
add
sahf
aad
gs
fimull
sub
outsl
cmpl
inc
or
pop
mov
sub
jns
cmp
xor
adc
cmp
mov
roll
int3
sub
daa
mov
mov
dec
aas
pop
xchg
xchg
sbb
sub
push
test
in
lret
jl
cmp
imul
popf
inc
adc
cli
out
push
imul
inc
sub
or
daa
repz
adc
rclb
mov
push
push
adc
lea
mov
nop
xor
sbb
pusha
rclb
cmpsl
fbstp
loop
imul
add
fildl
adc
ds
int
cmp
gs
pop
lahf
lahf
mov
sub
out
into
or
or
and
das
cmp
clc
es
xchg
out
xlat
loope
xor
scas
daa
std
inc
mov
in
pop
xor
xchg
cmp
out
and
pop
lret
gs
rcrb
fdivs
loop
push
lahf
pop
add
jnp
sub
loope
mov
pusha
loop
rcrl
enter
stos
lret
inc
subb
jbe
add
lret
xchg
adc
loope
les
test
flds
fbld
sahf
pop
xchg
jg
aaa
push
push
js
shrb
fdivs
mov
daa
xor
rcll
mov
cmp
inc
arpl
mov
jo
fs
adc
push
sub
push
out
daa
pop
test
jge
mov
das
aad
es
jl
insb
cmp
pop
cmp
sbb
cmpsb
stos
jno
stos
xchg
outsb
dec
inc
cld
scas
xchg
cmp
cmp
ret
gs
adc
jl
stc
subl
cmpl
inc
dec
mov
mov
shll
jo
imul
data16
cmpsl
std
nop
jecxz
int3
lea
test
dec
xchg
mov
jmp
lods
add
sub
mov
int3
mov
stc
fmulp
decb
mov
ficoml
data16
les
lock
mov
pop
and
cmpsb
and
add
or
pop
fdivr
add
inc
out
loopne
fs
sbb
push
rcrl
fdiv
gs
jmp
push
test
and
test
inc
cmp
lahf
jno
fidivl
ret
fwait
push
push
inc
fs
sbb
mov
shr
push
mov
inc
cmpsl
outsl
jbe
xor
ljmp
ret
stos
ss
jle
sub
jecxz
dec
stos
lret
cwtl
sbb
push
push
ja
jle
jb
ret
andl
outsl
jp
fistps
mov
pop
or
clc
push
mov
cmp
lcall
jecxz
shlb
iret
loope
outsb
sub
jp
jle
hlt
xchg
sbb
adc
push
adc
ja
push
add
sti
or
or
cmpsb
adc
gs
inc
in
push
pop
into
out
mov
mov
das
les
aaa
iret
flds
jb
dec
int
add
insl
mov
fucomip
out
and
cltd
sub
arpl
fiadds
xor
and
and
cmp
sbb
fdiv
enter
loope
push
cmp
or
or
repnz
aad
ds
cmovp
xchg
xchg
pusha
sarb
dec
and
jmp
mov
int3
cli
sbb
or
cld
dec
shrl
push
lock
pop
jb
jnp
jmp
int3
jp
add
outsb
repz
jg
add
mov
add
lds
mov
xor
dec
dec
leave
pop
sbb
inc
or
sti
loope
or
pop
lock
cmp
mov
pop
nop
mov
xor
inc
outsl
fisttpl
sbb
jle
rcrb
cmp
out
arpl
das
idivb
pop
add
mov
jnp
cwtl
sbb
mov
cmp
push
jo
cli
dec
jns
ja
adc
xchg
xor
loope
test
xchg
fiaddl
jle
hlt
mov
test
loop
jo
dec
xor
and
cltd
cbtw
sub
mov
dec
xchg
cmpsl
hlt
mov
push
fdivrl
dec
jne
sub
out
add
mov
fs
cmp
dec
xor
cmpl
add
insb
es
addl
in
push
xor
inc
mov
mov
sbb
adcb
mov
ljmp
cmpsb
mov
pusha
jecxz
rcrb
xchg
movsb
insb
cld
jno
xor
xor
push
xor
lods
sbb
sub
push
stc
xorl
or
mov
pop
pop
loopne
mov
inc
cmp
movsl
sti
fdivrs
push
divl
dec
lahf
xor
xor
shll
popf
push
fwait
or
pop
push
sarl
aam
inc
xchg
aam
sbb
ja
jo
mov
in
rcrl
mov
adc
sub
fdivl
xchg
jecxz
jecxz
dec
shlb
lds
xchg
stos
ficoms
jae
lds
lock
mov
jns
jno
mov
ret
cmc
jle
dec
daa
inc
call
mov
jg
sahf
mov
push
fxch
sar
shr
inc
add
cmp
mov
lock
aaa
dec
dec
cmp
xchg
shlb
mov
fadd
jae
and
aaa
sub
in
mov
test
add
insb
sbbb
imul
imul
lahf
jne
mov
fs
fiaddl
sahf
addr16
dec
xchg
push
mov
jle
inc
stos
fisubl
repnz
push
daa
lcall
inc
inc
jle
cmpsb
lds
in
aaa
push
cs
cmp
pusha
negl
xor
ss
sub
mov
imul
ffreep
jbe
mov
cltd
push
mov
insl
icebp
ja
mov
popa
push
scas
ds
mov
cmp
mov
or
mov
sub
movsb
xchg
push
rolb
inc
cwtl
movsb
mov
cmc
je
nop
test
add
inc
aas
sbb
jne
mov
or
add
sub
out
cmp
ss
shlb
mov
push
or
dec
mov
addr16
popf
cli
xchg
out
sti
mov
lcall
dec
mov
inc
daa
inc
test
add
and
in
mov
in
sub
test
inc
icebp
ficoml
repz
pop
pop
xor
sbb
xchg
or
cltd
dec
aas
fistps
lods
cs
sub
push
std
dec
iret
add
popf
lods
dec
arpl
fisttps
mov
leave
or
pop
loope
add
push
xor
jb
xor
repnz
mov
das
pop
add
je
cs
cli
ret
adc
mov
jae
mov
ret
and
or
cli
fdiv
push
sti
xlat
lcall
pop
sub
addr16
xchg
ja
fcoms
mov
add
xor
aam
xabort
aad
sbb
loope
clc
and
mov
xchg
arpl
push
data16
mov
sti
xor
leave
jo
or
mov
lods
dec
dec
sahf
mov
and
and
xor
int3
adc
xchg
sub
lret
push
addr16
stos
mov
sbb
xor
shl
and
jmp
pop
sar
jns
cmpsb
data16
and
mov
sub
aad
push
dec
dec
mov
cmpsl
xor
sub
enter
cmp
cmp
and
cmpsl
jp
cmp
lock
gs
xchg
inc
mov
or
dec
xor
fsts
out
inc
enter
sub
in
scas
mov
push
sbb
ret
or
iret
sti
push
insl
lods
jl
adc
scas
cwtl
imul
nop
or
mov
int3
mov
adc
add
loopne
stc
mov
loop
mov
test
mov
or
xor
fstpl
add
add
lret
and
int
rcll
lahf
xchg
mov
in
cs
xchg
xor
push
adc
pop
sahf
decb
fstl
xor
add
xor
sbb
movsb
and
xchg
xor
insb
scas
jp
roll
cmc
add
jp
mov
jbe
push
enter
jp
xchg
outsl
dec
shlb
mov
adc
push
arpl
bound
cltd
adc
lock
mov
inc
add
pop
pop
mov
jb
insl
bswap
xlat
cmp
inc
cmc
movsb
pop
push
lods
ja
add
repnz
loop
pop
adc
loope
outsb
outsl
sbb
insb
imul
cmp
adc
xchg
xchg
push
add
mov
nop
adc
or
jp
sar
sbb
xor
das
sahf
mov
dec
mov
push
sahf
repz
call
adcb
add
mov
lds
dec
es
loop
mov
dec
push
test
not
fsubl
push
movsb
outsb
sbb
xor
cli
ja
sbb
mov
orl
xlat
xchg
inc
sahf
pop
mov
add
addb
insl
movsb
lock
xor
push
jmp
dec
inc
jmp
divb
jmp
rcrb
xchg
cmp
mov
leave
cmp
cmp
adc
fidivrs
sub
loop
jmp
out
mov
mov
mov
cld
pop
idivl
es
test
rcrb
outsl
loop
cmpsl
mov
and
call
sahf
pop
mov
cmp
pop
sub
adc
xchg
mov
mov
outsb
out
jecxz
test
shr
sub
ja
das
cmp
out
mov
test
xchg
inc
out
dec
mov
call
jae
lds
xchg
sahf
movsl
jns
add
in
push
pop
cs
push
or
test
cmpsl
popa
loop
or
out
je
xchg
popa
clc
imul
shll
test
roll
insl
dec
xchg
das
iret
cmpsl
aas
repnz
popl
fwait
pop
ret
fisubs
or
inc
clc
fmuls
xor
int3
xchg
lahf
xor
sbbl
dec
jg
sub
add
test
scas
or
out
adc
inc
iret
jmp
fadd
loop
xchg
and
sub
sub
popa
and
mov
repnz
xchg
jg
std
into
lea
xor
dec
push
xchg
mov
loopne
gs
dec
ds
push
adc
push
sti
or
icebp
xchg
cmp
fnstenv
xor
sub
jmp
xor
fistpll
js
insb
push
dec
mov
sub
test
ja
ss
addr16
mov
fisubl
repz
jb
pop
mov
cltd
mov
imul
inc
fmuls
push
add
sbb
jmp
dec
lods
fwait
mov
dec
lret
cmp
inc
xchg
xchg
es
fs
sub
call
adcb
xchg
imul
popa
test
adc
loope
sub
jmp
xor
dec
popa
push
mov
mov
lds
and
es
out
gs
sbb
lock
jle
shll
cmc
mov
xchg
cmp
scas
cmpsl
mov
popa
pop
clc
and
cmp
sti
xor
scas
push
adc
xor
dec
sbb
cld
xchg
mov
stos
mov
hlt
aam
in
dec
in
pushf
in
push
loop
pop
dec
cwtl
jno
push
sbb
imul
js
mov
mov
loopne
push
mov
lock
fwait
dec
or
pop
add
inc
and
shl
popf
jne
pop
fnsave
je
fcmovnb
sarl
je
rorb
pop
and
pop
fsubl
movsl
cmpsb
out
gs
hlt
sub
sbb
fisubrl
ret
and
popf
jmp
fs
push
das
pop
addl
jmp
call
loope
cwtl
mov
cmp
xlat
fwait
lcall
mov
mov
icebp
xchg
xchg
sub
sahf
cmpsl
xchg
fidivl
sub
scas
jb
iret
jl
cmpl
scas
adc
repnz
repnz
and
or
repz
mull
jl
pop
fdivrp
lret
pusha
sti
cmp
shlb
je
adc
adc
fwait
xor
ljmp
pusha
mov
movsb
pop
sub
test
dec
and
ss
push
pop
xor
sub
mov
lods
sbb
das
out
outsl
cs
fcomi
xlat
xchg
push
in
and
push
enter
enter
sbb
push
and
imul
mov
lods
adc
jl
nop
lret
xchg
jp
mov
inc
jb
dec
jno
lcall
sbb
mov
xor
adc
test
push
pop
pop
mov
mov
loope
mov
add
jle
and
pop
cs
scas
pop
dec
mov
pop
hlt
pop
mov
mov
daa
push
mov
pop
mov
repz
push
cmp
push
sbb
in
sub
jb
cmpsb
dec
mov
insl
add
lds
xchg
imulb
jo
xchg
call
add
xchg
aaa
les
and
fnstsw
xchg
jae
lret
cmp
loopne
sbb
in
addr16
cmp
xchg
push
scas
jo
and
adc
pop
pop
cmp
jbe
addr16
loop
rorl
xchg
rcll
rorl
cmp
push
test
mov
cmp
pushf
pusha
sti
mov
inc
addr16
into
jl
push
adc
andb
dec
adc
cltd
decb
cmp
mov
sub
repz
frstor
cmpb
push
xor
lcall
push
in
push
hlt
sbb
ret
jl
push
das
ds
mov
gs
mov
lret
or
iret
cmc
popa
scas
pop
or
outsb
mov
sub
pop
push
xchg
and
loopne
imul
pop
mov
xchg
push
imul
jo
es
push
pop
lahf
dec
cli
scas
mov
fdiv
mov
cmp
push
lods
movsl
or
dec
rcr
pop
push
jne
add
xchg
ja
and
xchg
pop
stos
inc
das
xchg
dec
jns
fwait
mov
imul
shrl
shlb
dec
inc
mov
xchg
and
js
add
js
stos
xor
xchg
dec
test
pushf
bswap
pop
cmpsl
addr16
jmp
imul
dec
mov
push
push
repz
inc
mov
xchg
or
xchg
clc
mov
testb
jo
fwait
sbb
push
mov
cmp
loop
ja
cltd
inc
sub
or
mov
adc
or
int3
push
push
repnz
jmp
cmp
lret
fisubs
jge
dec
call
fldl
push
test
test
rcrl
sbb
out
cli
cmp
lret
loope
insb
cmpsb
or
xchg
adc
std
shrl
das
xchg
jb
add
pop
insb
stc
jg
in
xchg
in
sub
jmp
push
push
mov
shrl
or
sub
and
mov
mov
pop
mov
call
lods
add
dec
loopne
pop
xchg
fs
out
andl
mov
mov
repnz
lret
xchg
hlt
fstpl
sub
dec
xor
out
fwait
shrb
jne
inc
loope
icebp
daa
stc
ret
iret
mov
and
push
mov
in
mov
cmpsl
mov
cmpsl
icebp
add
jge
push
pushw
dec
rol
inc
jmp
push
call
dec
ljmp
sti
dec
shll
mov
inc
dec
or
fisttpll
pop
pop
jo
inc
add
dec
adc
push
adc
test
je
xchg
jp
adc
imul
and
inc
jl
scas
add
xchg
jno
fcoms
lock
sub
push
push
jp
scas
lahf
mov
nop
pop
sarb
sbb
pop
xor
mov
inc
je
sbb
popf
mov
fadds
test
arpl
dec
cld
cwtl
push
xchg
addr16
xor
or
cmp
inc
iret
call
inc
adc
cltd
sub
jbe
mov
imul
pop
cmp
mov
repz
cmp
jnp
sarb
mov
dec
xchg
jecxz
aam
fmul
pop
pop
or
loopne
mov
pop
pop
inc
imul
sbb
jns
sub
or
sub
dec
cltd
out
repz
cwtl
or
imul
mov
pop
jae
nopl
fs
mov
cmc
fs
jg
or
jae
lds
pop
fnstsw
cmp
jg
push
test
push
out
sub
xor
int
and
jge
mov
out
scas
sbb
lea
testl
xchg
cwtl
int3
sub
in
fstps
adc
movsl
adc
xor
enter
gs
xor
stos
ds
mov
testl
std
pop
in
pop
roll
jne
mov
and
pop
adc
ljmpw
movsl
test
ljmp
mov
dec
enter
xchg
adc
and
sub
mov
inc
mov
push
sbb
mov
xchg
in
sub
inc
push
das
in
mov
cmp
rcrb
cltd
pop
insl
bound
stos
loop
bound
mov
sahf
movsb
xchg
xor
adc
xorl
aad
mov
addr16
aad
cmp
popl
test
loop
cmp
adc
xor
testb
imul
mov
mov
jp
subl
pop
sub
inc
rorb
push
hlt
mov
mov
or
in
jo,pt
scas
lahf
inc
fisttpl
pop
xor
out
aas
loop
mov
xor
cwtl
loopne
mov
push
mov
sub
lcall
in
inc
adcl
test
pop
pcmpeqd
adc
jne
dec
cmpsb
add
pop
adc
js
sbb
js
cmpb
ret
loopne
mov
mov
pop
mov
xchg
out
out
pop
fcmovnb
mov
xchg
test
js
out
jno
adc
mov
or
sti
push
and
jl
cmpsl
movntq
std
push
gs
fnsave
inc
fidivs
and
sub
push
sub
add
popf
sti
mov
frstor
lahf
int3
imul
fnsave
std
sbb
mulb
sbb
cmpsl
movsb
sbbl
jae
inc
dec
lret
enter
mov
xchg
inc
loopne
stos
xor
fcompl
fcmovbe
inc
lret
xor
stos
dec
mov
leave
or
add
cmc
adc
or
pushl
fnsave
xchg
movsl
or
mov
adc
repnz
nop
push
decl
add
rcl
mov
into
pop
mov
rol
add
xor
adc
jg
xor
mov
xchg
sub
divb
adc
sub
sub
mov
mov
je
mov
mov
mov
mov
jecxz
push
shll
negb
pop
pusha
out
stos
xor
pop
cmp
sbb
test
push
leave
adc
scas
push
popa
out
mov
push
les
push
pop
popa
jnp
mov
fwait
mov
ds
arpl
xchg
ret
enter
int3
pop
cmpsb
ret
mov
ja
lcall
inc
aad
addr16
pop
ja
or
jne
gs
lcall
lods
xor
sbb
lds
aam
mov
add
jg
mov
cmpsb
cmp
jnp
aad
out
arpl
sti
push
psubusw
jp
mov
xlat
outsb
dec
arpl
cmovs
jmp
dec
or
nop
pop
jmp
int
shrb
pop
xchg
xchg
pop
lcall
testb
mov
loopne
sbb
cld
aaa
cwtl
inc
lret
test
js
int3
jp
pusha
jae
mov
xor
imul
nop
pop
bswap
cs
push
scas
sarl
mov
add
and
sub
ret
cs
sbb
ja
cli
adc
gs
mov
push
pop
lods
push
mov
hlt
lcall
cmpsl
aad
jo
mov
insb
add
push
mov
xchg
scas
pusha
mov
decl
outsb
aas
clc
xor
push
lods
mov
inc
insl
sahf
mov
call
in
inc
push
js
add
push
outsb
mov
dec
add
in
fwait
in
xor
popf
nop
jno
pop
xchg
add
bound
sub
xchg
in
inc
in
dec
icebp
cli
je
sti
cld
mov
cmp
imul
rclb
pop
jbe
cwtl
pop
out
out
scas
cmp
frstor
or
call
mov
push
cmpsb
pop
and
lods
div
xor
daa
adc
repz
inc
jb
notl
ret
js
jb
add
ficoms
pop
xor
adc
insb
mov
sub
int
xchg
or
test
mov
push
mov
adcb
xchg
pop
inc
imul
inc
fnsave
pop
sbb
mov
or
mov
inc
stc
out
outsb
xor
stos
sahf
pop
push
popf
cmp
xor
jge
cmp
dec
fwait
int3
js
jns
movsb
loope
add
xchg
pop
dec
or
sbb
jb
push
fnstsw
popa
add
pop
cli
xor
add
jle
fld
and
sub
das
lea
dec
testb
xchg
cmp
sub
dec
lret
iret
and
fistpll
loope
rcrl
sub
fwait
pop
jle
mov
xchg
xchg
fnstsw
or
dec
ret
cltd
loope
mov
icebp
test
in
pop
test
aaa
fidivl
fcoms
ret
in
inc
adc
dec
adc
leave
int
ret
in
scas
push
out
xor
lods
lret
dec
xchg
mov
jnp
test
scas
and
into
jae
inc
loope
jmp
in
outsl
bnd
das
mov
loope
in
add
test
in
inc
icebp
bound
jb,pn
mov
jecxz
push
or
xchg
add
test
fcoml
inc
xchg
mov
mov
inc
add
adc
aad
inc
cs
pop
jbe
outsl
mov
out
dec
jmp
sbb
push
jle
cmovp
dec
test
mov
xor
adc
pusha
mov
scas
mov
mov
divb
aam
sbb
adc
mov
loopne
dec
std
push
mov
push
and
subb
adc
or
jo
das
cld
sub
into
insl
ja
je
out
or
push
movsb
push
aas
in
or
mov
jne
jmp
test
pop
xchg
mov
popf
and
ret
or
ret
cmp
lds
sub
sub
dec
mov
mov
xchg
call
adc
pop
xchg
and
outsl
add
int3
pop
dec
and
jmp
xor
int3
jle
pop
lds
inc
add
arpl
mov
push
in
cwtl
incl
fwait
out
lcall
shll
sub
loop
movsb
add
lods
inc
hlt
ljmp
mov
aaa
lret
xchg
mov
jmp
add
mov
bound
dec
les
jmp
jae
mov
push
js
add
mov
aas
loopne
nop
inc
pop
add
cmc
shll
out
xor
add
sbb
dec
xchg
test
out
sub
jae
int3
cmpsb
pushf
adc
and
xchg
sahf
inc
jb
dec
jnp
shlb
cmp
stc
push
popa
mov
stos
pop
push
and
test
xchg
and
in
or
mov
pop
jbe
jecxz
xchg
mov
out
test
pop
xchg
sarl
cmp
xchg
push
dec
scas
mov
iret
or
inc
imul
insb
nop
push
mov
push
ud2
jo
pop
shlb
sti
xor
dec
nop
enter
das
cltd
outsl
repnz
and
pushf
cmpsb
test
fistl
lds
jbe
add
shll
inc
cmpsl
sub
inc
fiadds
scas
push
mov
jge
pop
cs
mov
les
fwait
add
xor
sub
or
xor
xor
mov
cmp
xor
jne
mov
mov
fwait
sub
int
fmuls
jp
mov
mov
inc
inc
aam
pop
andb
ficompl
pop
leave
ret
cmpsb
mov
fnstenv
push
xchg
stos
inc
sub
mov
push
cwtl
jmp
adc
inc
pop
push
test
mov
lcall
sahf
decb
cmpsl
mov
and
xchg
clc
shlb
mov
inc
imulb
inc
imul
xor
sti
pusha
cmpsb
test
dec
hlt
lods
aas
nop
test
mov
inc
popa
and
push
xor
es
mov
addl
push
pop
js
fldt
icebp
or
shufps
pop
jne
push
sahf
ds
push
push
jmp
les
jge
enter
cld
outsb
pop
push
and
add
mov
mov
mov
pop
pop
mulb
and
sub
divl
mov
sub
ds
or
adc
or
gs
xchg
push
scas
pop
mov
push
mov
in
mov
sbb
xchg
jp
mov
aaa
jl
fwait
mov
ljmp
xor
jmp
add
loopne
xor
sbb
sbb
and
jge
sub
jp
jae
enter
cmp
mov
lods
cmpsb
lea
insb
mov
nop
hlt
std
inc
cltd
mov
push
mov
shll
aas
int3
popa
cmc
push
cmp
mov
out
movsl
call
jecxz
push
xchg
icebp
mov
add
out
sbb
mov
aaa
pop
pop
adc
out
lea
out
mov
or
jmp
jo
jns
push
cld
and
inc
jb
xchg
jno
mov
adc
mov
pop
sbb
bound
sub
pop
push
mov
popf
mov
fwait
cmpsb
lcall
fcomp
lea
mov
cmc
xchg
xor
xchg
popf
outsl
fwait
repz
mov
loope
cmc
dec
lods
and
ret
inc
movsl
imul
fstpt
mov
push
aas
inc
pop
inc
int
jb
sub
add
lds
test
push
pop
jae
lods
ja
enter
inc
pop
sub
pop
sbb
outsb
mov
imul
adc
inc
int
loope
insb
popa
in
xchg
lret
loopne
mov
inc
mov
push
or
insb
popa
pop
add
pop
mov
xor
sbb
adc
mov
xor
ret
dec
sarb
pop
sahf
rcll
in
sahf
movsb
add
sbb
push
orb
ja
imul
mov
int
cmp
or
and
stos
sub
call
add
scas
xor
dec
xchg
sbb
loopne
pop
inc
dec
push
sub
les
loopne
lret
adc
repz
and
inc
mov
xor
stos
mov
mov
das
xchg
sub
push
sbb
inc
popa
pop
xorb
jo
jmp
das
popa
movsl
inc
stos
cmp
fsubl
ret
jmp
test
jbe
add
lret
lahf
push
mov
mov
and
fnstenv
dec
cmpsb
ret
pusha
jmp
mov
nop
lods
mov
fs
or
and
dec
fdivl
xchg
pop
jle
push
ret
cli
cmp
frstor
subl
xchg
sbb
xchg
iret
push
cmovge
dec
xchg
push
sub
xchg
mov
scas
jns
call
lret
lahf
xchg
lods
jnp
jbe
push
js
fists
push
das
jecxz
xor
and
pop
push
cs
jle
cmpsb
rolb
pop
xchg
addl
jmp
jbe
add
xor
or
inc
lahf
loop
aam
incb
ljmp
pop
shrl
add
outsl
jmp
mov
mov
pop
nop
je
jae
repz
pushf
clc
pushf
fisttpll
shll
jnp
add
scas
mov
gs
dec
xor
jne
cmpsb
mov
popf
xor
mov
inc
push
sbb
lods
push
and
mov
xor
ret
sbb
rcrb
test
in
and
hlt
dec
aas
ret
adc
scas
inc
mov
cmp
or
icebp
mov
xorl
add
pop
mov
clc
fmull
lods
add
sbb
sahf
mov
or
cld
mov
nop
out
fs
lahf
and
loop
mov
xchg
fstl
jl
movsl
outsb
and
outsl
aad
or
sarb
xchg
outsb
dec
dec
rol
xchg
push
hlt
push
xchg
pop
sbb
mov
push
loop
fsubr
xor
sbb
mov
push
testl
lock
imul
test
lret
push
aaa
push
pop
pop
jno
jns
mov
jno
mov
sbb
sahf
push
scas
pop
jg
loopne
cs
dec
sbb
out
or
mov
sbb
xor
jns
in
cmp
push
add
inc
ss
pop
outsl
inc
das
or
or
jp
sub
ja
cmpsb
stos
xor
sub
shrl
movb
jbe
rcll
cmc
mov
pushf
into
pop
cmc
dec
fisubl
xor
adc
ljmp
repz
pop
fildll
xor
mov
and
loop
clc
ja
or
jmp
cmpsl
nop
lea
aam
xor
lods
jmp
mov
mov
cmpsb
mov
imul
les
addb
push
ja
sbb
shlb
jecxz
movsl
inc
out
mov
pop
mov
jge
xorb
in
cwtl
mov
xchg
inc
movsb
aam
inc
mov
xor
ret
bound
aad
jecxz
push
dec
out
add
loope
js
mov
pop
repnz
or
mov
mov
jne
addr16
push
leave
adc
push
add
and
das
jnp
jecxz
fistpll
in
fcompl
push
adc
sbb
fisubl
and
jb
test
cmp
rorb
push
push
jne
cmp
sti
leave
repz
adc
fiadds
cli
add
daa
mov
jbe
es
outsb
les
popf
cmp
leave
lret
stc
repz
xchg
or
cwtl
lcall
loope
ljmp
insl
jp
ret
or
jge
pop
jl
xchg
or
jg
jnp
mov
inc
mov
aaa
subl
rorl
or
bound
sbbb
sbb
mov
lcall
mov
mov
push
fisttps
xchg
sub
movsl
lret
xchg
mov
into
dec
or
dec
mov
nop
mov
test
div
push
les
xchg
ret
sbb
data16
cwtl
inc
andb
sub
stc
inc
inc
push
cmp
repnz
xchg
xchg
xorb
fbstp
dec
sbb
and
repnz
jl
push
nop
adc
lods
shll
lds
mulb
sub
xchg
test
xlat
inc
mov
repz
fcoml
xchg
fwait
inc
repz
lret
inc
dec
rcl
fidivs
add
inc
stos
inc
es
fwait
pop
out
jo
popf
push
rcrl
jae
sub
rcll
rol
stos
push
js
testl
ja
xchg
icebp
sti
and
outsl
adc
sub
out
adcb
sahf
dec
xchg
pop
inc
imul
push
or
jle
mov
cmpsl
sbb
repz
push
add
lret
xchg
sub
mov
les
dec
inc
mov
xlat
ret
cmpsl
fwait
xchg
mov
cmc
jns
shlb
adc
mov
pop
jbe
lods
or
dec
inc
loop
fucomp
mov
jmp
jno
and
addr16
push
in
nop
add
inc
and
mov
and
xlat
loop
mov
jl
and
gs
mov
fsubr
pop
pushf
loop
test
push
or
mov
and
jmp
data16
mov
popa
dec
and
push
into
icebp
repz
fnstcw
dec
jmp
daa
pop
inc
adc
lea
pop
mov
dec
mov
sbbl
sbb
adc
adc
mov
xor
xor
in
sub
mov
ljmp
mov
loop
push
lahf
add
arpl
std
mov
fsts
fstps
push
shll
push
sub
sbbl
jg
sbb
dec
movsb
ret
mov
out
xchg
adc
jmp
ljmp
add
or
jge
xor
aad
stc
pop
push
push
pop
rol
jle
jo
xchg
aaa
sub
xor
xchg
jecxz
mov
push
add
jb
das
vsubss
shll
push
mov
mov
xchg
inc
loop
dec
stos
fstl
jae
dec
push
shlb
lds
push
dec
sbb
jb
sbb
ret
mov
lock
xor
add
dec
insb
xchg
mov
cld
xchg
xchg
adc
nop
loop
push
les
addr16
outsl
lock
fcoml
dec
cs
mov
pop
mov
insb
inc
iret
js
cmp
in
dec
lods
adcl
ss
lahf
outsl
jbe
loop
add
in
orl
fisubs
mov
test
test
hlt
push
call
push
cmpsl
psubb
lret
xor
int3
mov
mov
fwait
dec
mov
ret
inc
pop
div
xchg
xor
cmpsb
data16
mov
mov
mov
xor
ds
inc
scas
push
dec
out
repz
mov
push
iret
sub
fcoms
sub
lcall
gs
sub
in
stos
mov
push
cwtl
inc
mov
cmpsb
cmp
in
pusha
push
mov
repnz
mov
cs
mov
inc
cmp
enter
add
cltd
scas
jl
pop
or
jmp
jecxz
into
aaa
push
xlat
daa
outsb
jle
or
sbb
pop
nop
into
rcr
sub
mov
js
add
cli
cmc
adc
inc
mov
gs
inc
xchg
aam
push
jns
sbb
das
cmp
nop
dec
sti
orb
dec
mov
out
cld
adc
clc
pop
insb
out
or
push
inc
cmpsb
sbb
loop
adc
and
scas
pop
sbb
inc
pusha
fnstcw
fimull
add
inc
and
fimuls
push
rcrb
test
fsubrl
xor
lods
imul
imul
push
push
call
jge
jne
out
adc
lock
popl
outsb
jne
or
pop
cmp
jno
lock
out
push
push
add
sub
ret
mov
or
cmc
cmp
icebp
and
orl
fwait
cmp
and
rorl
inc
mov
aam
pop
xor
mov
movsl
mov
outsb
imul
sbb
mov
xor
jl
mov
xor
lret
and
jmp
test
sbb
push
mov
fcmovnbe
rorl
es
adc
jo
faddp
lret
push
iret
js
cld
adc
scas
shlb
and
cmc
subl
xlat
dec
inc
fdivrl
and
clc
jl
add
icebp
push
cli
out
adc
imul
mov
push
mov
insl
fs
sub
lods
test
ret
aas
adc
sub
and
fdiv
mov
ret
push
xchg
mov
sbb
jmp
test
mov
mov
jle
lods
mov
movsl
pusha
shll
pop
int
dec
div
inc
pop
push
js
lea
xchg
cli
xor
mov
sub
fsubrl
ljmp
lahf
lds
fildll
mov
lahf
subb
or
xor
and
sahf
pcmpgtb
outsl
push
shlb
or
sbb
outsl
insb
dec
test
jbe
xor
adc
inc
movsl
or
xchg
ret
add
sub
jbe
pop
jge
xor
bnd
pop
push
and
mov
dec
stc
xchg
jno
addr16
push
xor
inc
sub
inc
mov
mov
mov
insl
fiaddl
mov
mov
aam
gs
icebp
jmp
lods
mov
movsl
pop
dec
pop
out
ja
pop
scas
js
popf
sbb
subb
clc
add
imul
test
pop
jle
adc
mov
or
inc
inc
adc
cmpsl
sub
cmpsb
fildl
xchg
inc
scas
dec
sbb
cli
mov
out
xchg
scas
imul
std
test
mov
or
or
push
lea
rclb
mov
sahf
out
sub
add
arpl
icebp
sub
sub
mov
cmc
test
fisttpll
and
adc
push
imul
mov
call
or
adc
pop
pop
add
aad
cmp
dec
movsb
aas
lret
jb
dec
shr
out
push
adc
push
mov
push
sbb
and
aas
loopne
inc
mov
enter
popf
jns
adcl
jge
jnp
clc
std
cmp
pop
scas
lahf
stos
mov
test
jle
movsb
je
jmp
cltd
cmp
daa
xchg
sub
mov
in
jge
sub
shll
arpl
cmp
into
lock
mov
repz
out
dec
push
lcall
leave
test
and
popl
xor
or
shrb
cli
sub
lock
in
femms
mov
fsubrl
clc
fcomi
cmpsl
xor
jg
cltd
mov
push
add
fsubrp
xor
lret
inc
loope
inc
xchg
and
mov
xor
cmp
outsl
inc
lock
cli
aam
sbb
pop
sub
mov
sub
lret
mov
scas
test
dec
push
jp
jge
adc
push
adc
and
outsb
dec
popa
popa
cltd
push
or
insl
aas
sbb
das
fadd
dec
xchg
jl
jns
sbb
xchg
loope
mov
mov
add
push
clc
inc
and
xadd
stos
sub
icebp
aad
push
pop
rolb
std
popf
sub
mov
iret
push
cmp
dec
or
cltd
aam
sbb
jg
nop
mov
mov
mov
clc
jmp
lret
sbb
test
mov
lods
and
sbb
and
rolb
fimuls
lods
int3
sbb
and
sbb
repnz
jo
pop
sub
or
push
popf
xor
int3
pop
lods
or
or
sbb
idiv
stc
inc
pop
pushf
lahf
inc
repnz
mov
inc
insb
addr16
push
dec
mov
jb
add
push
xor
cmp
push
mov
inc
lret
out
je
or
popa
mov
dec
dec
mov
pushf
xor
andl
ret
adc
bnd
fs
fidivrl
dec
leave
lahf
mov
mov
dec
test
xor
mov
loopne
pop
sbb
add
out
dec
inc
mov
mov
fbstp
mov
fstl
shll
dec
xor
xchg
outsl
test
sub
rolb
imul
gs
xor
pushw
pop
cwtl
stos
mov
pushf
pop
idivl
cld
stc
in
jns
xchg
sub
mov
jmp
dec
sarl
mov
mov
pop
xchg
jp
mov
mov
into
gs
int3
sbb
mov
out
pop
jno
dec
dec
push
cmpsl
mov
test
mov
push
inc
sti
pop
int
lret
pushf
xchg
xchg
mov
mov
lods
and
xchg
pop
mov
mov
push
and
lds
out
lret
mov
and
dec
push
pop
shrl
in
dec
xor
test
or
xorl
popf
xor
fs
call
jo
mov
jnp
imul
mov
pop
arpl
sbb
clc
cmp
ror
jnp
and
add
mov
push
addr16
es
add
roll
in
repnz
push
xor
and
loopw
outsb
push
flds
jns
sbb
cwtl
sbb
jl
fbld
fdiv
in
out
loopne
fnstenv
movsl
mov
and
cmpsl
add
mov
add
push
in
mov
xchg
call
movsl
or
dec
add
dec
aam
inc
xchg
and
fimull
lret
clc
and
negb
out
adc
adc
pusha
mov
mov
in
pop
aaa
cmp
sub
dec
scas
mov
test
mov
lea
sub
sub
add
inc
sub
pop
sbb
xchg
jbe
mov
xchg
jb
lock
cmp
push
pop
addr16
add
sub
mov
lcall
cli
sarl
dec
loopne
cmpsb
cmpsl
cmpl
movb
mov
xchg
imul
adc
or
and
jl
loope
cli
sub
scas
in
pop
xorb
jbe
addr16
mov
jmp
xchg
std
sbb
cmp
lret
adc
sti
jo,pt
cmp
movsl
xchg
add
mov
rcll
push
lds
push
jae
and
fnstcw
fbstp
aaa
mov
lcall
mov
add
imul
inc
sbb
add
lret
jecxz
pop
mov
cwtl
push
jle
sub
loop
pop
cmp
ds
cwtl
iret
in
push
fstpt
daa
jmp
push
dec
and
aas
add
jge
cmp
lret
mov
lahf
insl
and
fadds
testl
mov
push
mov
mov
lods
lahf
shl
xchg
and
push
xchg
inc
mov
dec
cmp
mov
pop
or
xchg
sbb
dec
add
and
adc
inc
jmp
mov
iret
sub
and
jbe
fcoms
das
mov
adc
mov
icebp
cmp
in
adc
mov
inc
mov
nop
mov
fwait
mov
outsb
fadd
iret
sbb
mov
fadds
and
adc
test
insl
lods
sub
mov
cmp
stos
outsl
mov
adc
call
test
pop
repnz
push
popf
xor
push
jmp
mov
into
mov
push
add
lds
stc
mov
outsb
xchg
mov
adc
add
xor
scas
push
mov
int3
pop
lret
xor
jbe
popa
push
jbe
sbb
pop
push
fwait
sbb
sub
out
xor
adc
lea
and
mov
cld
in
and
mov
xchg
mov
ljmp
or
rcll
or
scas
in
jmp
dec
fxch
shl
int
xor
pop
mov
jmp
mov
movsl
cmp
and
leave
loope
dec
leave
inc
mov
lret
pop
mov
sub
mov
adc
ds
scas
mov
dec
sahf
gs
lret
movsb
push
pop
inc
jno
pushf
in
push
pop
pop
or
cmpsb
icebp
mov
mov
inc
sbbl
ljmp
test
push
scas
cmp
gs
xlat
pop
ds
sub
mov
add
out
ret
and
and
lds
scas
dec
jo
lea
pop
xchg
inc
fs
jne
sbb
popl
imul
push
imull
sbb
jae
fidivl
ffree
orb
xchg
test
icebp
xchg
xchg
mov
inc
into
cld
jg
jl
push
scas
fisttpll
daa
push
add
sub
ret
outsl
jecxz
jle
shll
sub
test
clc
subl
jae
ljmp
mov
imul
xchg
lea
jecxz
add
movsl
jecxz
sbb
mov
cmc
mov
gs
movsb
data16
lret
pop
jmp
cld
enter
lcall
dec
jmp
pop
les
jl
lret
loop
idiv
insl
and
mov
sub
insl
or
dec
jbe
out
xchg
mov
scas
jle
addr16
adcb
mov
rcr
inc
cmc
push
insb
or
shlb
les
pop
xchg
out
mov
lret
xor
into
imul
sbb
sbb
pusha
xor
aad
lea
jle
int3
cmp
movsb
cmp
xchg
pop
cmc
mov
pop
jmp
pop
mov
xor
pusha
cmp
mov
push
push
out
leave
enter
mov
adc
xchg
push
in
mov
pop
fwait
stos
sbb
xor
fcoml
or
and
std
popf
pop
mov
adc
mov
fs
inc
mov
inc
adcl
mov
sarl
aaa
ljmp
jge
fisubrs
mov
cltd
test
mov
lds
mov
sub
sub
mov
xor
mov
cmp
mul
outsl
inc
fwait
popa
cmc
cmpsb
mov
xor
jmp
test
xchg
movsb
sbb
test
xchg
cmp
aam
mov
shrl
dec
movsb
or
mov
das
inc
and
in
mov
fnstcw
add
inc
push
push
inc
rclb
int3
insl
cwtl
adc
mov
xchg
add
cltd
enter
inc
test
pop
mov
std
or
repnz
mov
mov
pop
into
pop
and
jne
faddp
and
rcll
sub
adc
cmpb
ja
inc
cltd
pop
pmulhw
iret
sti
data16
daa
jl
add
das
pop
cmp
cmp
ja
fdivrl
daa
lds
xor
stos
xor
mov
subb
xchg
xchg
jge
sahf
lods
sbb
lods
in
ss
xor
cmpsb
ret
scas
xorl
imul
pop
jnp
testb
or
outsb
bound
sub
dec
pop
or
nop
xlat
fsubrs
xchg
pop
call
test
jne
daa
sub
add
jecxz
cmp
mov
mov
movsl
icebp
sar
scas
jecxz
arpl
mov
out
mov
xor
addr16
mov
dec
xchg
or
push
cmc
es
loopne
push
idiv
stos
ror
lahf
xchg
jl
pop
ret
rolb
fnstenv
fwait
iret
inc
sub
xchg
xor
ss
sar
push
sub
fcoms
shrb
push
mov
es
xchg
fwait
movsl
push
cmp
cwtl
mov
adc
push
jae
orl
add
test
mov
dec
mov
jp
pop
mov
dec
loope
or
dec
inc
add
mov
and
adc
int
in
mov
inc
addb
mov
mov
cwtl
jl
adc
gs
test
inc
sbb
dec
pop
pop
mov
and
ret
mov
push
sub
dec
cwtl
imull
gs
jns
or
add
push
imul
mov
adc
loop
mulb
sbb
sub
push
lock
sbb
lods
aas
and
adc
or
and
and
jecxz
lret
jnp
sbb
mov
jl
out
pop
and
shl
mov
dec
loop
mov
pusha
sti
cmp
mov
cmp
test
fldl
mov
mov
mov
xchg
and
jle
ljmp
pop
and
mov
lods
repnz
cld
lds
ret
cmp
fmulp
sub
mov
lret
scas
out
pop
jo
add
cs
imul
in
ficoml
xchg
popl
dec
pop
lret
inc
dec
mov
in
jp
sub
cmp
pop
pop
fistpl
dec
xchg
cmpsl
ja
fwait
lret
push
pop
inc
icebp
cmp
fcompl
fcmovne
xchg
jle
test
in
pop
add
mov
in
lods
int3
cmc
mov
sub
fistpll
lds
adc
mov
js
jge
and
dec
in
pop
or
fs
test
scas
les
push
stos
lret
or
popa
aam
in
mov
push
cmp
bound
mov
aam
push
cmp
or
sub
leave
fcomps
vsubps
popa
sub
sbb
lods
ljmp
sahf
adc
mov
push
lret
es
bound
cwtl
mov
cwtl
lcall
ret
test
ja
fidivrl
sahf
data16
and
sbb
iret
mov
negl
pop
push
out
or
sbb
out
cmp
ficoms
enter
sbb
inc
sti
jge
mov
in
or
sti
aas
outsb
int
aaa
es
ret
or
lcall
ret
adc
jne
ds
idivl
lret
or
cmpb
orl
lretw
sahf
jmp
sub
push
stos
jno
push
sbb
push
data16
scas
push
xor
lea
mov
jmp
gs
cmp
subl
sub
push
pop
stos
cwtl
nopl
dec
pop
mov
fs
test
adc
ret
mov
adc
inc
sarb
cld
inc
test
into
push
mov
gs
xor
inc
sub
inc
mov
or
cmp
ret
inc
ds
xor
jge
call
or
lahf
dec
pop
aad
mov
out
mov
push
or
jle
pop
mov
and
xor
ror
cmp
cmpsl
test
addr16
or
xchg
popf
sbb
xchg
insb
imulb
test
cmc
adc
dec
je
test
mov
fwait
mov
in
movsb
pop
pushf
cltd
pop
and
shrl
xor
ss
sub
je
test
mov
mov
xor
sub
daa
je
pusha
push
mov
xchg
nop
mov
jne
pop
mov
popa
insl
stc
cmp
adc
xorb
ja
aas
fs
lods
sub
sbb
push
xor
lahf
push
idivl
ret
dec
jns
add
inc
jae
push
lret
jecxz
pop
cmp
pop
clc
inc
add
mov
mov
push
cmp
jnp
sahf
inc
push
or
imul
push
fisttps
imul
ja
push
cmp
std
adc
fnop
movsb
test
jb
mov
popf
sub
pop
imul
sub
mov
mov
in
test
xchg
sbbl
loope
dec
daa
jmp
inc
sbb
jp
lcall
push
pop
or
std
dec
hlt
mov
test
outsl
shll
lock
aas
xchg
mov
jo
std
mov
int3
inc
repnz
push
clc
out
and
cli
adc
ffree
dec
hlt
cmp
xchg
cmp
repz
inc
ja
cltd
roll
iret
aaa
cmp
lods
test
shrb
mov
ja
push
outsb
cmp
cmpsl
fisttps
sbb
cmp
lret
sbb
jle
add
cmp
imul
outsb
jmp
movsl
inc
push
test
cmpsl
ss
cmp
mov
pop
sub
cmp
sub
xchg
cmp
loop
push
stos
cmp
sub
std
jmp
cmp
xor
lret
data16
adc
cmp
aas
in
xlat
sbb
loope
inc
sbb
into
push
jb
cmpb
hlt
ds
sbb
cmp
ja
mov
inc
jnp
icebp
loopne
xlat
mov
cmpsb
lcall
push
sub
mov
sub
fldl
pop
into
daa
es
push
adc
jge
pop
into
cmp
pop
les
xchg
mov
sbb
or
adc
stc
test
nop
jno
cmc
mov
fdivp
and
jmp
pop
vminss
sahf
out
not
out
dec
xchg
leave
div
test
add
push
out
jg
pop
and
stos
sbb
cmc
sarl
add
fildl
sti
nop
xor
add
or
loope
stos
imul
hlt
movb
stos
jae
jge
dec
repz
sub
cmpsb
bound
clc
out
jns
adc
sub
dec
loop
mov
es
insb
cmc
sub
test
or
repnz
stos
subb
mov
pop
and
mov
mov
jbe
dec
dec
inc
pusha
fwait
sbb
push
jb
mov
mov
xor
add
push
in
mov
mov
mov
iret
push
movsb
pop
scas
stos
jmp
add
pusha
scas
sarl
sub
sarl
push
leave
and
mov
aas
cmp
cmp
aas
mov
pop
xlat
xchg
shlb
sub
push
adc
imull
push
call
enter
fsubrs
add
insl
cmp
adc
clc
js
jbe
push
repz
movups
push
sub
scas
push
nop
pop
movsl
inc
iret
insl
push
push
cmc
dec
arpl
adc
cmp
cmpsb
xchg
jge
iret
addr16
and
mov
cmpsl
div
je
xor
jg
insb
pushf
mov
pop
adc
popa
jo
sarb
cmp
in
not
mov
loopne
aas
movsb
mov
jmp
mov
outsb
add
jnp
jns
cwtl
xchg
push
rcrb
xor
insb
sub
movsl
sar
mov
stc
sahf
jge
sbb
jmp
add
nop
jns
imul
xchg
mov
in
pop
insl
into
push
daa
outsb
addl
inc
in
in
insl
ror
pushf
mov
sub
andb
inc
int
fisttpll
pop
pop
xor
and
sbb
mov
dec
fildl
inc
or
and
jge
xor
pop
xor
incb
in
pop
cmc
jecxz
pop
inc
and
xchg
mov
fbstp
pushf
mov
enter
fdivs
adc
add
cmp
mov
pop
push
lods
cmpsl
jp
movsb
and
mov
out
jmp
push
inc
pusha
bound
aam
mov
shll
and
cmp
incb
jmp
mov
aaa
sbb
mov
int3
popf
pop
stos
lods
stos
int
push
pop
push
out
mov
or
ja
jne
push
xor
mov
pop
jb
push
sti
fs
std
pop
jp
fidivl
inc
cmp
add
mov
icebp
xor
sub
pusha
es
fs
add
sbb
js
mov
mov
mov
dec
xchg
arpl
xchg
xchg
mov
xchg
xor
mov
dec
int
or
push
repz
int3
pop
cmp
xchg
mov
mov
jae
fcomi
inc
and
fisubl
outsb
int
ss
pusha
loop
jbe
inc
insl
int
fstpl
and
data16
movsb
mov
or
mov
xor
icebp
push
ret
js
fimull
leave
push
mov
sbb
add
pop
push
cmp
int
or
movsl
pop
pop
pop
push
in
clc
pushf
push
pop
popf
cmp
and
cmc
cmc
popa
lds
outsb
std
jp
fldt
xor
mov
fwait
mov
jo
pcmpeqb
mov
not
pop
popa
test
adc
in
sti
test
cmp
daa
lock
inc
ja
mov
push
mov
add
aam
and
xchg
loopne
cmp
ret
pop
popf
lea
imul
push
and
stos
call
jo
dec
adc
or
loope
jo
cmp
push
fwait
push
adc
mov
mov
sub
sub
dec
int
jno
daa
jno
or
cmpsl
enter
pop
or
orl
lcall
iret
cmpsb
js
mov
xor
sub
fsubrl
xor
addr16
sbb
push
gs
push
push
add
xor
and
add
pop
or
fidivl
insl
mul
adc
aam
sti
xor
mov
sahf
int
sbb
xchg
adc
xchg
sub
or
adc
lods
repnz
xor
xor
adc
sub
mov
fs
xor
jno
aas
jmp
sbb
test
imul
mov
pushf
jle
cmp
push
mov
int
out
dec
xchg
int3
xchg
cmp
call
add
jo
stos
lds
adc
inc
call
test
push
dec
jbe
push
out
fwait
sub
jnp
push
test
bound
sahf
cmp
push
dec
std
popa
mov
sbb
cmp
sub
sub
xchg
add
inc
xchg
repz
cmp
mov
xor
je
mov
cmpsl
xor
enter
lods
push
movsb
xor
in
jo
xor
popa
lret
lods
mov
out
xor
jno
jo
inc
stc
arpl
push
jnp
in
out
inc
in
mov
cmc
fs
inc
xlat
mov
mov
jne
lods
inc
pop
fists
add
cmp
pop
pop
mov
push
jl
mov
dec
or
mov
ss
xor
jl
pusha
sbb
sbb
jl
aam
push
cmpsl
pop
movsb
jg
mov
and
stos
jno
cmc
mov
sbb
adc
lea
lds
xorb
fnstcw
arpl
xor
test
adc
ficoms
mov
mov
or
std
xchg
inc
movd
xorl
aad
push
mov
jp
hlt
scas
sti
out
xor
pop
xchg
lea
js
jmp
push
and
das
inc
push
add
jge
xor
lods
inc
push
pop
inc
xlat
xor
cmp
jne
jg
xchg
loope
and
nop
jae
lahf
shll
out
mov
lock
fmuls
rcrb
lds
add
jle
jge
insl
jmp
or
push
ja
jb
push
or
pusha
out
loop
lea
into
inc
jnp
push
and
sbb
scas
icebp
stc
aaa
push
jecxz
jb
xlat
xchg
fwait
outsb
push
stos
shll
roll
jge
ret
xchg
mov
lods
pop
arpl
add
inc
lcall
bnd
adc
clc
lahf
dec
pop
aas
jo
out
das
imul
stos
inc
out
out
pop
jle
xlat
leave
cmp
push
jno
mov
data16
inc
rcr
push
dec
xor
adc
mov
jb
push
and
mov
pop
aas
adc
jb
nop
add
ja
or
pushf
popa
mov
pop
lods
dec
mov
mov
fs
push
dec
or
pop
sbb
outsb
sub
xchg
std
rcrl
dec
add
fldenv
in
jne
aad
xchg
pop
inc
xchg
adc
adc
fisubl
decl
das
js
mov
dec
sahf
lds
leave
cli
out
outsb
dec
hlt
or
push
mov
inc
inc
or
pop
sti
jmp
outsb
adc
pop
xchg
xlat
or
or
add
cmp
fdivrl
xchg
push
xchg
lret
out
push
leave
notl
xchg
daa
bound
shlb
cmp
jns
push
or
jno
repz
in
or
and
pushf
pop
rcll
jnp
scas
xchg
gs
push
mov
push
mov
sub
aaa
mov
clc
popf
jbe
mov
add
push
lock
mov
hlt
shll
xchg
cli
sub
pop
and
push
xor
dec
sbb
les
mov
adc
add
lods
mov
outsl
mov
shrl
daa
shlb
mov
clc
std
arpl
jmp
add
mov
push
nop
jo
mov
lret
mov
outsb
shl
pop
cwtl
cmpsb
cmpsl
jnp
nop
ret
in
cmp
test
outsb
je
push
lock
or
imul
pop
dec
cmc
fwait
dec
xchg
push
cmp
xor
lea
push
jecxz
fdivrl
in
mov
fmull
gs
push
push
loop
jmp
cmpsb
pop
lcall
addb
jne
xchg
mov
pop
add
repnz
dec
hlt
fistps
stc
cmp
inc
fwait
push
ja
ds
fcmovne
or
add
add
mov
jne
sub
out
stos
hlt
aam
lods
enter
enter
jle
fsts
xchg
and
jns
insl
pop
std
nop
or
xor
pushf
xchg
sbb
sub
cmp
sub
das
jmp
and
mov
addl
out
test
mov
or
add
mov
jmp
xchg
inc
cmp
shrb
and
leave
pop
mov
loopne
push
fisubrl
jp
xchg
push
pop
or
mov
cmpsl
mov
fsubr
das
push
movsb
addr16
es
jns
aad
cvtps2pd
or
call
push
cwtl
sub
outsb
je
ds
dec
mov
or
mov
dec
stos
pushf
jbe
mov
arpl
movsb
or
xchg
das
sub
dec
dec
xchg
cld
js
pop
addr16
pop
lahf
mov
adc
negl
mov
pop
repz
adc
lahf
mulb
adc
and
mov
cmp
mov
out
push
pushf
cmp
mov
and
sbb
dec
push
mov
dec
bound
push
lds
fsubrs
cmp
dec
cmp
adc
xor
and
add
lret
sub
adc
scas
sbb
loop
test
add
xor
nop
push
stos
jae
pop
xor
mov
loop
add
xchg
mov
mov
repz
lret
mov
les
in
jnp
mov
sbbl
xchg
jb
mov
imul
sub
fdivl
leave
stos
subb
pop
incb
sbb
pop
sub
mov
call
or
add
aam
lods
aad
iret
jp
sub
sub
enter
adc
repnz
adc
sub
pop
mov
imul
adc
mov
gs
mov
mov
xchg
jecxz
sbb
loopne
push
sbb
fwait
adc
xchg
sub
inc
fucomi
dec
dec
cs
inc
fadds
and
outsl
jle
dec
mov
adc
data16
mov
mov
int
ffree
jmp
sub
outsb
pop
pop
outsl
lret
shl
popf
xlat
push
mov
icebp
cmp
mov
mov
int
fdivs
lcall
jle
dec
push
push
cmp
sub
sbb
cld
sub
and
and
push
cmp
inc
lahf
dec
adc
xchg
add
insl
dec
fsubl
jnp
pop
add
lods
fstpl
or
jns
cltd
call
jmp
xchg
mov
lahf
cwtl
std
xor
das
in
xor
shl
xchg
je
pop
andl
dec
push
repz
dec
xchg
mov
xor
pop
stos
stos
inc
rclb
mov
aaa
pop
sub
xlat
out
test
aad
fs
neg
xor
rol
nop
mov
cli
fs
add
push
fsts
cltd
enter
sbb
movsl
in
inc
int3
push
sub
in
test
test
xchg
push
cli
jbe
movsb
out
ret
insl
jmp
pop
jmp
inc
mov
das
bound
orb
popf
dec
mov
mov
mov
pop
ficomps
cmp
cwtl
inc
cltd
outsb
sub
das
outsb
shr
idivl
push
and
xor
adc
dec
es
mov
cmp
cli
orb
dec
inc
loop
or
rcrl
icebp
popa
and
int
incl
and
inc
push
jp
cltd
and
adc
shrl
sbb
inc
add
ds
dec
mov
fisttpll
and
and
pushf
cmp
fsub
dec
adc
sub
jno
or
lods
icebp
lds
jmp
negb
shll
sbb
mov
xchg
pop
scas
push
stos
cmpb
and
mov
adc
cmp
mov
xor
and
jae
jns
mov
or
aam
sbb
test
xor
xor
in
push
clc
fisttps
sbb
mov
fistl
cs
data16
fiaddl
jl
and
shlb
mov
sub
sahf
lahf
jp
sub
arpl
or
aad
mov
adc
ret
or
ret
leave
push
movsb
push
aas
xorl
adc
repnz
jno
iret
std
lret
cmp
mov
sbb
xor
and
sub
mov
iret
fmull
test
test
push
stos
cmp
jg
pop
mov
pop
jbe
shrb
ja
push
push
dec
or
jmp
xchg
jnp
jnp
popa
push
movsb
clc
or
shl
adc
cmpsl
pusha
mov
and
mov
mov
cmp
addl
inc
jl
imul
ror
cmpsb
aas
sbb
icebp
cmpsb
stc
popf
sahf
pushf
insl
mov
subb
je
sub
push
mov
fldl
aam
repz
cmp
inc
lds
mov
lock
repz
push
and
cld
lcall
lds
dec
jl
daa
aam
aaa
jns
add
jb
fcomps
sti
add
sub
or
test
adc
lods
jmp
stos
jnp
clc
iret
loop
sbb
loop,pn
mov
jbe
sti
adc
inc
imul
mov
and
mov
push
xchg
cmp
pop
xlat
lods
xor
add
inc
cmp
ret
and
jnp
push
and
add
scas
adc
lcall
lret
jns
or
cld
ljmp
sub
dec
sub
test
aad
adc
cmp
push
cmp
or
sbb
mov
test
rolb
leave
push
ds
mov
inc
lret
cmp
incl
out
adc
mov
pusha
popf
leave
test
lret
lock
loopne
cmp
jmp
push
push
or
mov
cltd
fldt
jmp
dec
ss
mov
pushf
out
js
sbb
cvtdq2ps
fcmovbe
jge
add
out
repnz
push
jle
lea
sbb
or
jae
lock
jae
jl
sbb
mov
mov
add
xchg
and
imul
sarl
or
imul
add
xchg
xor
push
loopne
mov
clc
mov
jo
pop
mov
push
xor
sbb
push
fwait
outsb
bound
or
mov
jns
int
shrb
xchg
mov
in
lcall
jae
mov
cmp
inc
mov
test
repnz
outsl
push
jbe
jmp
or
jecxz
fisubrl
orb
xor
in
iret
lcall
xchg
ret
je
xchg
and
sbb
adc
xchg
sub
lahf
repnz
jl
sub
jle
jp
mov
mov
iret
mov
les
fwait
mov
aas
lea
ja
testl
xchg
mov
test
mov
arpl
out
sbb
aam
add
xor
xor
mov
sti
mov
jae
lcall
inc
hlt
add
sub
xor
insb
add
xchg
xor
sub
mov
inc
fwait
jp
inc
or
cli
dec
inc
sub
add
fsqrt
cmpb
jp
mov
insb
sbb
mov
push
addl
call
lret
addl
clc
jnp
mov
mov
ret
repnz
cld
ret
xchg
and
jecxz
jecxz
cmp
cld
adc
dec
dec
pop
sti
int
pop
dec
aad
inc
subb
adc
sub
mov
insl
call
mov
push
test
fldcw
and
loopne
xchg
outsl
dec
popf
movlps
enter
mov
int
jae
repz
add
pop
ss
xor
loopne
mov
inc
mov
hlt
xor
test
sbb
sbb
aad
rolb
outsl
scas
mov
sarl
je
test
test
ret
sub
flds
jns
sub
add
pop
loope
mov
pop
mov
aad
outsb
mov
aas
gs
mov
std
pop
mov
js
shr
fwait
mov
sbb
scas
pop
sarb
stc
inc
mov
lods
dec
je
mov
pop
adc
sub
fidivl
ror
mov
pop
leave
cltd
dec
jnp
pop
push
mov
sbb
test
cmp
inc
call
subl
push
popf
sbb
stc
dec
inc
or
data16
and
sub
andb
pop
sbb
inc
sbb
mov
das
addr16
test
and
popf
lods
fisttpll
in
jno
pop
mov
inc
ds
jnp
cmp
jbe
jl
fisttps
test
movsl
fs
out
xchg
pop
jle
jle
or
push
scas
inc
sarl
mov
fdivs
fisubrl
shl
sub
mov
or
mov
jnp
scas
push
in
es
sbb
and
test
xor
imul
lods
mov
push
stos
jmp
add
test
add
xchg
ljmp
or
nop
xchg
repnz
jle
lahf
sub
in
sub
and
pmuludq
icebp
outsb
dec
and
add
aam
push
inc
dec
mov
xchg
loop
clc
pop
sbb
sub
subb
sbb
push
add
sti
jno
outsl
or
arpl
or
mov
scas
inc
scas
push
xor
es
popf
inc
loopne
or
adc
xor
lcall
clc
test
sub
fidivrs
aas
push
ss
ja
daa
movsl
aad
bound
loopne
pop
inc
nop
push
or
mov
daa
les
das
lea
dec
movsb
push
enter
imul
xor
aas
sbb
sbb
pop
test
jl
jbe
dec
loop
sbb
sti
imul
cmp
sbb
pop
outsl
test
mov
fldenv
test
and
fidivl
dec
cmpsl
sbb
adc
dec
mov
sub
rcrl
popf
adc
lret
inc
cld
mov
mov
movsb
cmpsl
fnstsw
lods
imul
cltd
mov
rcrb
add
sub
dec
fwait
mov
mov
xor
stos
bound
pusha
das
or
in
in
loop
lret
cmp
or
int3
fsubrl
shlb
pop
cmp
xor
xlat
dec
adc
andl
dec
call
pushf
scas
in
inc
jp
mov
test
repz
nop
jmp
push
mov
fstpt
inc
imulb
lcall
cmp
mov
fisubl
cld
ja
xchg
cld
jecxz
lock
mov
pop
clc
cltd
orl
lock
mov
sub
aam
repnz
or
or
nop
push
aas
jnp
mov
add
mov
push
js
cvtdq2ps
mov
add
insl
in
push
mov
cld
xor
loop
fbstp
mov
das
pusha
push
cltd
push
mov
pop
shrl
cld
sub
bound
dec
add
adc
aam
out
adc
push
fwait
aam
movsb
jb
add
fsubp
lcall
ds
jmp
dec
lods
stos
gs
outsl
sar
rcrb
xchg
mov
dec
mov
or
mov
ret
stos
pusha
andl
mov
mov
mov
xchg
cmp
movsl
arpl
ss
sbb
add
push
sbbl
pop
std
outsl
nop
fdivs
inc
push
xchg
data16
ljmp
inc
and
push
mov
mov
stos
push
mov
imul
idiv
dec
dec
jmp
js
rcr
mov
pop
cmp
push
cmc
mov
leave
in
aad
push
cmc
aad
insb
aad
sbb
xor
rolb
jl
outsl
in
xor
mov
sbb
push
nop
pop
stos
and
push
mov
or
jecxz
sti
xor
jl
cmc
dec
mov
xor
clc
jo
fsubl
cmp
inc
cmp
lods
and
push
jb
jnp
es
popf
push
xchg
iret
ret
jmp
lahf
data16
daa
xor
cmp
sbb
cli
push
sub
ficomps
stos
or
jge
cmp
inc
mov
or
mov
hlt
mov
push
ret
pusha
stc
es
sub
insb
std
add
sbb
cld
jb
std
sbb
adc
int
xor
adc
jecxz
dec
repnz
incl
cwtl
ss
std
xor
inc
add
stos
jecxz
test
jnp
hlt
push
out
fdivl
fcmovnb
dec
xlat
ljmp
xor
fwait
int
les
orb
sub
and
inc
fisubs
or
mov
dec
jl
dec
gs
loope
rep
in
inc
sbb
mov
and
cmp
loope
mov
inc
cli
xchg
cli
rcrb
inc
in
fs
into
mov
sbb
jns
nop
stos
rorb
cmpsb
rcrb
mov
mov
jo
cwtl
test
out
rolb
bnd
mov
and
adc
xor
pop
jno
inc
dec
jg
imul
dec
int
inc
sub
iret
data16
jmp
jne
ret
push
jo
cmp
sbb
xor
sub
cmc
xchg
mov
or
xor
fsubrp
xor
and
jg
bound
lock
mov
mov
imul
fs
dec
mov
scas
mov
xor
repz
sbb
cmpsb
push
xrelease
loopne
es
gs
dec
stos
cmp
cld
jp
lods
cmp
cmpsb
jmp
subl
andb
jp
das
inc
ljmp
out
xorl
fimull
out
cmpsl
mov
sbb
sub
loope
popf
pop
pop
dec
jns
xchg
dec
mov
outsl
mov
mov
pop
rcll
pop
xor
hlt
push
std
push
cmp
adc
stc
js
sbbl
mov
lahf
mov
xlat
pushl
lcall
stc
xchg
adc
jae
add
push
cmpsl
or
xor
stc
dec
jg
fbld
inc
ss
loopne
dec
lcall
cmpsl
ret
shlb
jecxz
sqrtps
jp
or
dec
imul
mov
dec
xchg
or
sbb
stos
in
pop
aaa
test
add
cmp
dec
pop
or
push
mov
test
shrb
jmp
fsubrl
mov
dec
cs
aaa
xor
hlt
add
sbb
sti
pop
cmp
dec
cmp
lock
push
and
sti
aam
xor
jle
or
popa
jle
inc
ljmp
mov
mov
mov
imul
push
cmpsb
mov
in
and
push
jb
mov
mov
subb
stos
push
mov
pop
push
fdivr
mov
mov
test
jp
cmp
push
cli
jae
outsl
jg
rclb
std
inc
scas
inc
sub
jb
xchg
out
mov
clc
in
pop
mov
add
mov
adc
mov
xor
movsl
fstpl
push
sub
inc
jg
and
and
cs
orl
dec
stc
xchg
movsb
into
mov
mov
jno
rcll
push
xchg
xor
xchg
rolb
jmp
enter
pop
xchg
mov
clc
ret
dec
fwait
xchg
inc
or
psrld
movsb
xchg
dec
call
jmp
mov
mov
sub
fidivrs
xor
popa
add
mov
pop
ret
fwait
push
es
and
sbb
test
and
push
imul
dec
cwtl
pushw
mov
fisttpll
inc
sbb
adc
dec
xor
aas
in
rcr
insl
test
jbe
inc
in
adc
jbe
aam
pop
fnstenv
inc
push
arpl
pop
aad
orb
adc
mov
sbb
xchg
lds
inc
mov
clc
repnz
int
cmc
rorl
sub
dec
xor
shrb
inc
lods
cmp
addb
mov
pop
mov
inc
data16
push
insl
cmc
stos
dec
int3
and
cs
mov
fsubl
mov
xchg
mov
xor
cmp
add
std
fdivs
neg
or
and
push
mov
dec
cmpsb
adc
sub
imul
xchg
or
adc
mov
mov
dec
cmp
dec
jnp
sbb
xchg
mov
adc
inc
in
testl
xor
jae
mov
pop
xchg
shrl
or
or
sub
jb
test
inc
fisttpll
push
mov
leave
mov
pop
gs
clc
adc
fiadds
aad
sub
push
adc
xadd
sub
mov
add
push
addr16
jmp
cmpsb
sub
fs
mov
mov
stos
fninit
inc
or
lret
push
mov
rcl
pop
fst
push
addr16
pop
ret
lahf
popa
xchg
push
jmp
mov
incl
daa
mov
ficomps
jge
sbb
icebp
jno
jns
mov
jecxz
lock
sbb
test
mov
pusha
push
dec
xchg
in
xor
jge
xor
movsb
call
xor
out
sub
sbb
rorb
inc
pop
loope
jae
push
sahf
movsb
mov
lds
mov
js
jge
adc
ds
rolb
std
icebp
sbb
mov
fldl
sbb
fmuls
cmpsl
stos
add
cmp
test
mov
dec
jl
popa
xchg
mov
mov
mov
icebp
out
mov
in
repnz
add
xchg
mov
rcll
cltd
es
push
add
or
shll
mov
dec
jbe
out
add
test
ret
xor
shll
push
jecxz
jle
mov
sbb
lret
jbe
pop
rcl
dec
fisttpll
addr16
mov
ficoml
mov
dec
jnp
jecxz
sub
in
sbb
fidivs
jge
adcl
cmp
out
imul
cmp
test
inc
xor
scas
mov
int3
dec
push
or
and
repnz
mov
dec
repz
call
aas
or
lock
push
push
pusha
js
jecxz
cmp
popl
xchg
mov
cmp
das
push
mov
add
insl
fucomip
add
bound
repz
mov
push
loop
jns
lea
scas
mov
push
mov
xchg
cld
call
pushf
jl
ds
fists
cmp
popa
rcrl
shlb
push
testl
mov
insb
test
cmc
aaa
push
pop
test
cmpsb
inc
jmp
aam
jmp
ficompl
ds
addr16
aaa
sub
pusha
adc
or
inc
in
es
test
fnstcw
xchg
outsb
adc
push
addr16
sbb
lahf
add
movsb
ret
or
jbe
das
sbbb
mov
dec
inc
loop
movsb
aam
xchg
mov
subl
outsb
inc
jg
lea
out
icebp
insl
loope
shlb
int
std
aas
hlt
call
repz
mov
mov
adc
repnz
cmp
or
pop
add
mov
repz
or
cld
shrb
das
adc
sbb
out
ret
shll
repnz
mov
outsl
in
out
mov
sar
dec
pop
ret
or
inc
cwtl
and
loopne
dec
pop
aaa
mov
out
arpl
and
ss
sbb
cmp
frstor
jnp
jmp
jne
mov
and
int
shlb
arpl
adc
clc
bound
mov
hlt
xlat
scas
adc
aam
or
or
nop
sub
stos
adc
insb
shll
push
cmp
fwait
cmpsl
pop
mov
pop
std
and
jl
mov
aas
addr16
jp
sti
mov
add
fsubrl
dec
mov
sbb
push
in
inc
adcb
cmpsl
dec
xchg
xchg
xchg
std
pop
dec
shlb
das
or
mov
lock
es
mov
int
and
leave
push
dec
adc
jne
fsubs
leave
psllw
sbb
in
ja
fisubrs
ljmp
das
jp
out
jg
cmc
pop
mov
dec
sahf
shrl
sbb
mov
rorl
mov
sahf
mov
leave
add
jne
cwtl
fcmovnb
ret
int
dec
push
mov
sub
sub
leave
mov
push
mov
rcl
lcall
xlat
jo
std
and
push
test
sbb
lea
call
fdivl
aaa
push
inc
adc
sub
jbe
clc
loope
pop
add
inc
adc
and
gs
xor
fsubrs
mov
inc
jb
popf
sbb
negl
cmpsb
sbb
xchg
and
popa
inc
aas
cltd
xorb
imul
cmp
sbb
pop
sbb
push
mov
flds
jmp
ja,pt
gs
lcall
pop
ss
jo
sub
imul
aad
sbb
mov
stc
ss
in
call
cmpsb
push
inc
leave
addl
sbb
stos
ss
sbb
push
lcall
les
int
push
or
fs
pop
psubsb
lret
push
pop
fs
lret
mov
fistl
dec
es
push
and
inc
orb
or
add
sub
add
stos
fwait
pushl
js
enter
loop
inc
movsl
mov
sahf
les
inc
sbb
out
mov
in
notl
test
ss
out
je
push
lahf
cld
iret
leave
stos
xor
mov
dec
aas
lahf
inc
or
adc
xor
pusha
and
out
mov
lds
fadds
pop
and
inc
shll
push
test
jp
mov
mov
xor
out
cmp
test
xchg
mov
mov
add
mov
data16
cmc
imul
xchg
push
insb
xor
dec
ds
fistpl
rorb
push
xchg
cwtl
clc
insb
scas
cmp
subl
xor
jecxz
aaa
jnp
push
mov
in
cltd
push
rclb
sysret
pop
mov
add
in
mov
fwait
and
icebp
jmp
nop
into
add
and
dec
popa
mov
push
push
lret
push
lods
out
aas
mov
mov
inc
mov
imul
inc
scas
in
aad
in
popa
jecxz
mov
cmp
fisubrl
and
cmp
scas
inc
push
out
sti
lahf
pop
loopne
pop
movsl
shll
adc
adc
fwait
ss
xchg
cmpsb
aaa
push
inc
jle
lcall
psubb
pop
test
xchg
sub
rorb
mov
adc
arpl
mov
ret
ds
or
dec
mov
or
add
xchg
xlat
mov
xorb
icebp
movsl
pop
fucom
in
add
mov
dec
and
or
mov
arpl
outsl
aas
lret
mov
fs
push
mov
pop
push
lea
inc
stos
loop
add
xor
jae
pop
and
in
jo
mov
xor
je
add
ja
inc
imul
jnp
mov
mov
ljmp
cltd
sbb
add
daa
dec
jl
adc
lods
xchg
jg
orb
xor
hlt
cmp
stos
push
movsl
cli
aas
mov
fimull
fiadds
std
fdivrl
enter
ret
outsl
ja
popf
scas
push
add
sti
js
push
mov
fstps
repz
add
outsl
rcl
mov
mov
aam
fadds
mov
dec
data16
cli
ja
dec
xchg
mov
xor
push
jl
lods
push
sub
mov
sbb
lods
or
je
aas
pop
insb
cmpsl
jge
jnp
fdivrl
imul
and
ljmp
in
jnp
lds
pop
xor
loope
mov
dec
mov
and
in
pop
sbb
xlat
adc
lods
inc
cmp
iret
loop
fs
and
lea
je
jg
mov
sti
cmp
mov
xor
dec
int
or
test
push
fisubrl
out
jmp
loope
aas
sarl
insb
add
lods
insl
push
xor
inc
mov
push
pop
xchg
addr16
push
leave
mov
sbb
or
rorl
or
loop
xchg
inc
mov
fcoms
daa
sbb
aas
cld
sub
stc
jbe
imul
dec
mov
jo
push
dec
xor
dec
aaa
jno
iret
mov
ja
cmc
sub
cmp
push
push
fimuls
xchg
jmp
inc
cmp
jne
loop
mov
add
add
dec
cmp
xchg
test
mov
mov
mov
aaa
add
std
int
and
mov
xchg
adc
idivb
imul
sbbb
push
dec
imul
adc
lock
pop
lods
sub
daa
popa
out
sbb
and
std
negl
and
dec
cmp
movsb
adc
in
scas
dec
movsb
lock
mov
xchg
inc
add
fidivs
push
in
popf
xor
cs
xchg
cld
dec
daa
mov
ds
jnp
insl
mov
push
pop
push
outsl
xlat
xor
shll
dec
sub
or
arpl
jecxz
mov
outsb
mov
fisttpl
cmp
xor
cmp
sarl
add
xor
xor
ljmp
jnp
push
ja
cld
out
pop
sbb
adc
push
lahf
push
jle
pop
sarb
push
das
std
gs
aas
mov
sbb
roll
xchg
mov
pop
prefetchwt1
and
xor
sub
sti
xchg
dec
or
addl
in
and
xlat
pop
push
in
and
sub
fisubs
cmp
inc
out
sbb
mov
add
aas
inc
in
xchg
lods
xchg
std
push
cmp
jbe
or
fcmovb
cltd
popf
xlat
mov
cmp
adc
dec
pop
jae
ret
inc
jle
out
aam
mov
inc
test
xchg
aad
cmpsb
test
sub
jmp
jno
xor
cld
add
sbb
mov
or
sbb
arpl
int
pushf
movsb
notb
iret
and
inc
push
dec
sub
mov
push
clc
jmp
mov
pop
imul
in
and
outsb
mov
lahf
dec
ljmp
jbe
push
popf
scas
out
sbb
popf
inc
decl
idivb
jge
sub
jmp
pop
insl
loopne
fxch
dec
pushf
sub
iret
int3
inc
push
out
jl
shl
sbb
xor
pop
add
xor
sub
sub
pop
outsb
fwait
dec
and
jo
adc
shrl
mov
mov
pushf
push
and
stc
shl
fcoms
xor
imul
scas
lea
sub
addl
jne
sbb
jo
xchg
mov
test
ret
daa
aaa
movsl
xchg
ret
cltd
mov
movsl
sahf
mov
pop
sbb
push
mov
les
jmp
mov
hlt
cmp
add
mov
inc
shlb
dec
lret
pop
sub
arpl
cmp
adc
mov
hlt
adc
mov
sub
mov
cmpsb
jge
sub
mov
xor
ret
pusha
jecxz
inc
pop
sbb
clc
and
mov
pusha
mov
adc
inc
out
shr
dec
cmp
decl
sbb
adc
push
push
loop
inc
sbb
outsb
mov
xchg
or
xchg
imul
jle
fs
ror
mov
mov
cmp
jmp
out
pushf
xchg
stos
xor
xchg
or
call
dec
lods
jl
popa
xor
in
sbb
ds
mov
into
ret
mov
xchg
inc
popa
leave
or
push
fsub
sub
xlat
lcall
and
push
hlt
in
pop
adc
adc
idivl
mov
dec
mov
xchg
adc
push
shr
push
imul
mov
nop
add
in
lea
push
popf
or
ja
lcall
and
lret
and
int
ss
stc
pop
lret
mov
rcrb
pusha
fstps
bound
mov
inc
mov
js
ljmp
addr16
call
add
add
inc
data16
cltd
popf
or
pop
mov
inc
mov
push
leave
inc
cmp
or
cmpsl
adc
aas
jae
lods
bound
mov
jbe
roll
cmpsb
dec
orl
or
call
jle
in
jl
cmp
adc
inc
ljmp
jb
aaa
pop
push
xor
jno
push
popa
jae
adc
mov
cmpsb
cmpsl
jmp
int
packssdw
xor
xchg
jbe
jmp
out
mov
mov
test
in
jb
popf
fsub
ror
push
out
push
mov
sub
dec
push
add
xor
popa
adc
fildl
enter
cmp
aaa
mov
outsl
das
cltd
inc
dec
aaa
push
jmp
mov
scas
shlb
pop
mov
jg
nop
stos
aaa
push
repz
pop
hlt
mov
xor
sbb
jg
jne
call
leave
jns
outsb
dec
mov
xor
and
popa
mov
jns
lret
inc
movsl
aas
dec
gs
stc
xchg
out
or
or
test
rol
xor
mov
cmpps
mov
lock
sahf
mov
out
loope
cli
mov
cmc
push
mul
fidivrl
push
add
into
insl
cmp
mov
and
mov
les
ja
or
or
mov
jge
lods
movsb
lcall
clc
fwait
inc
ss
sahf
add
mov
aad
or
cmp
sub
mov
xor
sbb
and
pop
cltd
mov
fmuls
inc
aas
mov
xor
dec
or
cmpsb
ret
sub
cmpsb
lahf
or
push
ds
dec
pop
mov
push
outsl
cmpl
push
sahf
adc
mov
imul
popa
pop
push
outsb
fiadds
xor
js
pop
sub
sbb
pop
pop
fcompl
aas
sti
incl
int
inc
add
jl
xchg
fmuls
scas
xchg
lds
xchg
xor
movsb
ret
lock
xchg
sub
fsubrs
sbb
std
cli
outsl
insb
sub
data16
push
sahf
dec
adc
mov
jbe
xor
flds
adc
xchg
mov
incb
sub
decl
jbe
sbb
iret
sahf
ja
pop
insb
lods
jns
test
stos
jns
scas
das
mov
int3
and
out
dec
mov
lods
adc
enter
mov
cld
inc
xchg
mov
addr16
or
insl
arpl
pop
lds
sub
adc
je
cmpsl
xchg
pop
daa
scas
cld
add
mov
push
out
xlat
jmp
arpl
mov
loop
in
in
pop
aas
lret
push
adc
inc
popf
test
fcoms
add
pop
shlb
fmuls
mov
out
mov
sub
sub
cs
cmp
inc
push
pop
fmuls
shlb
mov
sbb
and
pop
ljmp
xchg
sub
fsubrl
hlt
pop
add
cltd
outsl
mov
and
pop
data16
xlat
imul
pushf
adc
test
out
pop
xchg
mov
xchg
mov
fbld
in
jl
cmp
insb
and
inc
pop
gs
out
pop
divb
mov
das
lock
ds
mov
aaa
ficomps
push
lret
ss
mov
xchg
mov
addr16
mov
and
ficoms
dec
mov
add
fadds
loopne
add
fnsave
pop
insl
scas
add
sub
dec
dec
scas
cmp
test
adc
icebp
jmp
aam
mov
sbb
int3
push
or
lahf
ds
flds
lods
mov
data16
inc
int3
loopne
push
inc
popf
pop
lret
les
out
mov
pusha
vcvtdq2pd
xchg
in
lahf
fidivs
cmp
aas
sub
ljmp
mov
sub
stc
jge
pop
add
lcall
in
and
hlt
mov
movsl
mov
cmp
gs
out
pop
cli
mov
inc
or
push
sbb
jle
ror
popf
cmp
testb
lds
and
xor
mov
mov
push
fsubr
add
sub
add
mov
lret
cld
int3
jg
test
jp
rcl
jmp
outsl
jg
mov
or
mov
inc
add
and
lock
jo
loopne
popa
es
add
cld
sub
mov
loop
lods
fidivrl
mov
dec
jbe
pushf
out
adc
jl
sbb
inc
outsb
ret
mov
adc
and
int3
mov
or
jne
es
in
dec
incl
repz
jl
movsb
jg
xor
leave
jmp
loop
stc
sti
jl
out
lahf
dec
jae
sti
insl
flds
jmp
movsl
jo
sbbb
in
les
cmc
inc
inc
out
xchg
jno
and
je
mov
or
xchg
pop
sbb
mov
adc
push
sub
lahf
xchg
std
push
cltd
es
inc
mov
jns
xor
mov
sub
mov
push
dec
mov
pop
sbb
jl
jle
ljmp
sti
cmpsb
hlt
add
stc
add
jle,pn
iret
aam
inc
sub
xor
xor
push
dec
or
divl
je
add
imul
subl
mov
lret
adc
xor
bound
data16
and
fmull
mov
in
xor
ja
jle
out
lock
inc
pop
xchg
pop
or
push
xchg
push
inc
jb
popf
sbb
stc
mov
cmp
or
mov
stc
lahf
fdivl
lret
inc
stos
xor
and
pop
insl
push
lret
sub
push
inc
add
cltd
mov
mov
sbb
xchg
xchg
enter
or
jb
xchg
int3
rol
jge
dec
sub
ret
jb
je
or
aaa
js
mov
mov
imul
ljmp
mov
jo
add
je
cli
adcl
add
inc
fisubrs
lret
icebp
lea
xlat
jno
clc
test
push
jg
std
add
and
xchg
jle
dec
test
and
mov
movl
push
fdiv
scas
sbb
scas
bnd
pop
adc
mov
xor
es
fyl2xp1
mov
sahf
gs
fs
jl
aad
sahf
rolb
push
arpl
rolb
es
mov
les
or
sbb
sahf
insb
in
add
int
mov
mov
mov
js
scas
insl
xor
mov
pop
and
sti
mov
popa
cli
and
lret
lea
pusha
test
jle
hlt
inc
sub
inc
add
ret
sub
and
mov
mov
les
sub
sbb
in
lret
inc
pushf
or
aaa
lds
push
mov
lret
es
in
cmp
push
sbb
aaa
sub
mov
inc
or
push
and
hlt
outsb
xchg
jle
jns
cmpsb
roll
pop
inc
push
scas
sbb
out
addr16
into
dec
jno
adc
paddsw
ret
sbb
out
cmp
push
cmc
aad
push
dec
jbe
push
inc
arpl
jbe
sub
xor
addl
or
xchg
jmp
inc
jle
xchg
push
movsb
pop
fcompl
pop
push
cmp
fbstp
mov
jl
cmp
outsb
cmp
mov
sbb
fsubrl
lcall
ds
xchg
lahf
push
and
dec
das
fwait
jl
pop
xlat
mov
dec
and
jno
stos
mov
imul
js
jg
test
test
mov
sub
dec
stc
and
ja
rcrl
add
test
rorl
shll
add
pop
xchg
cli
or
pop
push
pop
hlt
sub
cmp
mov
mov
enter
xor
push
sti
ret
sub
inc
inc
test
mov
pop
jl
xor
dec
fldl
pushf
loop
ja
add
push
mull
pop
aad
inc
out
sbb
ljmp
pop
pop
jb
cmp
fwait
xchg
push
imul
cld
shrb
decl
jmp
pop
mov
pop
xchg
pop
leave
mov
insl
cmp
flds
jecxz
out
xor
push
das
test
push
sar
repz
and
dec
mov
push
jae
dec
xor
and
lods
insl
clc
or
or
jmp
jecxz
sub
in
mov
push
cmp
jp
cmp
ret
lret
jae
je
jno
gs
std
xchg
pop
test
inc
jmp
sbb
mov
push
int3
rclb
leave
cmp
loopne
jmp
add
xor
cmp
mov
movsl
pop
loopne
popf
cmc
jo
pop
repnz
movsl
mov
jle
inc
add
jecxz
ja
sub
fs
movsl
aam
sub
rcll
jo
fidivs
or
sahf
stos
pusha
or
mov
aad
fstpl
call
sbbb
push
xchg
lret
xchg
mov
out
push
hlt
leave
je
cli
jne
and
es
or
nop
push
lods
loop
enter
jmp
test
inc
xor
int
nop
into
cli
mov
arpl
pusha
lahf
inc
pop
push
rorl
outsb
out
adc
dec
popf
insb
into
pusha
push
aaa
loope
xchg
outsl
mov
jg
push
sbb
mov
adc
sahf
adc
in
or
cmp
daa
data16
fstl
ret
jb
jae
cmp
data16
lock
lods
xor
mov
xor
xor
xorl
aaa
sbb
xor
inc
out
inc
mov
xchg
test
aas
mov
push
cmp
sub
sbb
jbe
sub
das
xchg
outsb
outsl
adc
and
push
mov
mov
lret
icebp
xchg
lcall
mov
ljmp
insl
lea
cwtl
add
subb
out
testl
sbb
cmp
add
ret
push
lea
sahf
loopne
adc
mov
dec
sbb
mov
pop
pop
lahf
inc
cmc
pop
xor
or
sbb
mov
clc
push
mov
scas
inc
pop
outsb
aas
popf
loope
push
or
cs
pop
jmp
mov
test
xor
inc
lcall
or
js
mov
int
dec
and
mov
pusha
leave
rcll
push
ret
cmp
in
jle
push
sbbl
lods
xchg
fcmovb
xchg
cmp
adc
or
mov
out
lcall
add
add
out
sbb
fs
lret
adc
push
jmp
push
hlt
ds
scas
lret
sti
hlt
insb
mov
movsb
pop
out
imul
ljmp
xor
pusha
adc
adc
movsl
fisubs
sbb
sub
cli
iret
mov
lods
adc
jns
push
outsb
mov
add
push
pop
pop
sub
mov
movsb
push
or
or
mov
outsb
movsl
lods
daa
cmp
add
pop
lret
orb
mov
sub
pop
js
xor
insb
out
mov
sbb
cmc
stc
mov
cwtl
push
test
xor
xorl
dec
shlb
leave
es
addl
dec
pop
sub
dec
adc
xchg
subb
lahf
adc
ret
jnp
ljmp
fdivl
clc
add
out
sbb
test
dec
loopne
mov
dec
lods
enter
jbe
cmpsl
es
pop
ljmp
rorb
dec
std
lods
jb
or
ljmp
out
push
mov
and
mov
jmp
in
int
xor
dec
cmp
sbb
sbb
jge
add
push
jno
lods
scas
movhps
outsb
ret
jmp
inc
lods
inc
pop
adc
xor
cs
sub
outsb
push
push
push
iret
cmpsb
mov
or
inc
gs
push
into
pop
dec
mov
mov
jge
dec
adc
sbb
push
mov
loop
push
jp
insb
mov
or
jp
xor
mov
xchg
or
mov
mov
mov
pop
fsubl
aaa
jnp
mov
sub
mov
mov
mov
mov
mov
sbbb
xchg
jg
cs
mov
and
push
lret
xor
sbb
sbb
stc
sub
cmc
repz
adc
jae
cmc
cmp
mov
and
sub
dec
sub
xchg
fsubl
jp
and
pop
pop
fs
cmp
xchg
dec
sub
cmpl
cmp
lock
fdivl
pusha
xor
jl
cli
jl
jb
jmp
repz
jbe
adc
adc
pushf
and
sbb
jecxz
fs
fdivrl
loopne
sbb
dec
add
mov
shlb
arpl
enter
arpl
push
jb
mov
loope
or
sub
mov
lcall
rcr
mov
rcll
movsl
ljmp
aad
repnz
cs
in
cld
xor
cld
clc
push
ja
add
in
or
jp
icebp
fcmovbe
lea
clc
push
call
cmp
loopne
push
jns
push
repz
js
inc
sbb
fwait
push
inc
mov
mov
lock
cmp
mov
sub
cs
xor
pop
ret
dec
lcall
sbb
loope
inc
jmp
outsb
pop
rolb
out
or
mov
ja
sbb
dec
mov
scas
scas
pop
xor
push
and
sahf
aas
mov
and
xchg
mov
sbb
cmpsb
add
sbb
pop
push
cmp
sbb
xchg
push
lcall
jl
mov
cmp
dec
daa
movd
adc
sti
mov
xchg
xchg
xorl
or
dec
mov
pand
rcrl
adc
cli
jmp
cmp
stos
adc
mov
dec
sbb
aam
push
mov
gs
loopne
sub
push
cmp
push
cli
cli
stos
xchg
mov
xchg
xchg
add
mov
lds
ss
pop
mov
ljmp
inc
xor
push
hlt
inc
adc
xchg
ja
add
leave
rcr
shl
cwtl
dec
or
gs
push
mov
sbb
insb
cmp
mov
hlt
pusha
dec
add
mov
adc
mov
das
pop
bound
cmovl
push
cltd
mov
out
add
aad
sahf
test
xor
and
cmpsl
sub
gs
loope
rcl
pusha
insb
mov
pop
xor
and
mov
inc
dec
mov
pop
jb
xchg
mov
and
push
xor
out
dec
push
push
daa
ret
test
arpl
mov
mov
sub
xlat
int
mov
mov
jne
dec
call
jl
mov
mov
mov
clc
test
gs
repnz
hlt
outsl
sahf
xchg
xor
sar
xchg
xlat
not
loopne
mov
sub
push
jns
inc
inc
mov
push
pop
rdpmc
fisttps
loope
out
mov
mov
xchg
dec
std
cmp
aas
sub
idivl
dec
inc
xlat
iret
movsb
or
add
jne
dec
outsl
and
cmc
sub
imul
and
test
and
out
jl
arpl
flds
pop
in
adc
adc
mov
movsl
and
add
daa
popa
popa
xlat
stos
push
insb
stos
mov
fsubrl
push
and
loop
xor
xchg
sbb
mov
add
cld
je
mov
stos
loop
inc
mov
or
js
mov
xor
scas
cmp
aas
jg
mov
or
and
jbe
shlb
xor
mov
mov
ret
push
push
rcrl
mov
add
arpl
mov
sub
push
sbb
insl
pop
xchg
and
mov
pop
sbb
xchg
dec
mov
mov
arpl
jno
and
pop
xchg
cmp
add
mov
arpl
ljmp
es
cwtl
cwtl
das
xor
sti
xchg
ret
aad
pop
mov
in
fnclex
push
and
cmp
push
sub
push
shrl
mov
aaa
mov
mov
jb
mov
xor
jnp
outsb
fisubrl
ja
int3
fidivrl
loopne
mov
je
movsb
aaa
or
and
data16
mov
das
insl
pop
imul
xchg
js
sti
pop
jge
cmp
xor
cmc
mov
jnp
scas
sub
inc
aam
add
imul
lcall
fistpl
pushf
fldl
jae
stos
xchg
lret
test
lods
das
mov
int3
lods
inc
testl
dec
dec
ret
out
mov
pop
rorl
loopne
adc
arpl
inc
out
lods
lock
lcall
icebp
mov
mov
jecxz
mov
jb
inc
les
xchg
cmpsb
lcall
or
adc
dec
dec
pop
es
sub
jne
jo
ljmp
mov
jae
lret
cmp
and
mov
cwtl
xor
jmp
inc
jp
movsl
pop
imul
stos
xchg
jbe
sti
pop
cld
cmp
mov
test
inc
push
call
rcr
sub
repz
jmp
mov
cmpsb
inc
inc
push
test
inc
push
mov
addr16
sub
outsl
scas
mov
in
mov
dec
scas
insb
xor
mov
push
repz
and
mov
pop
ja
rol
pusha
jbe
enter
jge
or
shr
push
aam
mov
lret
repz
jmp
or
nop
adc
sbb
fidivrs
fsubp
cmp
mov
xchg
dec
xlat
fs
sahf
adc
out
out
xchg
sbb
sbb
add
popa
je
pop
or
xor
push
mov
and
test
int
push
mov
ret
adc
mulb
inc
sub
mov
xchg
sub
push
jb
xchg
shlb
out
lret
or
mov
mov
loopne
or
andl
mov
repnz
cmp
idivl
push
jnp
push
iret
xchg
mov
sbb
dec
push
lods
mov
xchg
lahf
mov
cwtl
add
push
adc
cltd
jae
jnp
in
inc
dec
ficoms
jnp
lret
sti
or
mov
sbb
xchg
mov
dec
jo
sahf
jne
push
jmp
pop
lock
cmp
inc
pop
xor
imul
nop
pushf
dec
das
push
mov
jecxz
imul
shrb
mov
push
pushf
add
stos
sub
inc
bound
mov
add
scas
jae
or
ja
dec
mov
jbe
dec
inc
pop
xchg
and
inc
or
ret
loop
out
cmp
sub
scas
xcrypt-cfb
cmpsl
loop
in
ljmp
inc
enter
lds
sbb
dec
cmp
mov
pushf
jmp
inc
and
or
int3
mov
cwtl
add
clc
xchg
dec
scas
les
inc
xchg
call
mov
cmp
fistpl
out
sbb
clc
push
cmp
repz
orb
loopne
inc
iret
imul
jae
je
dec
jle
and
mov
dec
cmpsl
dec
xchg
pop
movsb
or
sub
push
repnz
and
ljmp
mov
mov
cltd
scas
xor
jae
xchg
bound
shlb
faddp
or
fcmovnb
rol
adc
xchg
fs
mov
cs
hlt
out
push
jecxz
lahf
xchg
fcmovu
xchg
rcll
test
daa
aam
dec
jp
xchg
pop
cmp
pusha
lret
out
ljmp
xor
test
sbb
iret
sub
adc
rdtsc
inc
adcb
rorb
enter
mov
inc
dec
sub
fistpll
fucomp
arpl
test
inc
stc
cwtl
mov
out
add
xlat
test
sbb
fmuls
ljmp
and
push
push
pop
or
fsubrs
fnstcw
scas
inc
xlat
push
sbb
dec
mov
mov
std
ficompl
mov
out
lret
imul
mov
aam
dec
mov
popf
ljmp
in
stos
test
aam
sahf
fisttpll
mov
add
add
cmp
stos
cmc
das
aas
sbb
xor
and
and
adc
jge
push
pop
addr16
test
adc
out
scas
cmp
fnstcw
adc
push
neg
or
aas
aaa
cvtps2pd
xchg
sbb
cmpsl
xchg
popf
inc
jmp
es
xchg
adc
xor
insl
cmp
sahf
cmp
jnp
scas
roll
shr
sti
fcoms
and
cmp
pop
xchg
cli
popa
jle
cmc
pop
adc
or
and
jns
mov
dec
jnp
rclb
sbb
outsb
loopne
sarl
mov
xchg
pop
mov
repnz
js
mov
std
cmp
jbe
mov
repnz
or
mov
fldenv
mov
rolb
fistpll
scas
je
icebp
jle
and
mov
and
jb
cmp
std
inc
outsl
sub
outsl
pop
pop
push
mov
mov
and
popa
or
add
das
adc
xorl
into
pop
inc
adc
adc
lret
sub
pop
je
mov
xchg
mov
es
mov
pop
push
xor
inc
xor
adc
or
dec
push
jb
push
sub
fdivs
jo,pn
cltd
pushf
mov
dec
pop
pop
pop
jmp
add
mov
jle
inc
lods
cwtl
cmp
test
enter
das
std
dec
fsubrl
lahf
xchg
add
lock
mov
sbb
hlt
aaa
dec
push
and
dec
xchg
mov
fmulp
dec
lea
jno
cs
jle
in
fsubl
std
shrb
andb
mov
lods
scas
add
push
inc
in
js
lods
pop
es
lock
push
push
pusha
scas
cmp
fists
ljmp
xchg
pop
mov
sbb
daa
xchg
xor
cmpsl
sub
repnz
mov
fwait
xlat
js
sub
sub
pop
popa
or
jge
lcall
inc
mov
shl
pop
xor
imul
sub
xor
xchg
and
popa
sub
and
ss
sarl
and
pushf
xchg
jno
cmp
sub
lret
bound
mov
sub
insb
das
mov
jecxz
sarb
movsl
enter
aam
pop
repnz
mov
inc
pop
xchg
cmpsb
fcomi
into
mov
push
clc
popf
into
add
orb
les
sub
push
aad
sub
mov
and
mov
fs
enter
sub
out
add
dec
sbb
cmpsb
add
push
inc
andl
enter
mov
leave
sub
add
repnz
mov
out
pop
push
leave
movsl
arpl
aaa
adc
dec
movsb
or
call
clc
add
sbb
nop
cwtl
or
icebp
lcall
add
xchg
stos
call
push
push
add
icebp
orb
mov
mov
mov
pop
mov
mov
jp
fwait
pusha
sub
adc
lock
out
push
jecxz
bound
scas
add
in
lret
jl
lds
mov
imul
jle
dec
mov
jge
ss
pop
dec
add
movl
faddp
add
lret
xchg
pop
inc
push
inc
xchg
xchg
insl
cmpsb
sbb
in
sub
xor
test
ljmp
and
mov
xchg
xor
sbb
cmp
xchg
push
mov
cmpsl
data16
xor
sub
xchg
mov
adc
or
iret
mov
dec
push
xor
inc
xor
rorb
daa
scas
in
mov
in
out
or
aas
pop
mov
dec
imul
stos
loopne
pop
push
icebp
std
pop
xchg
ficoml
inc
adc
jmp
test
mov
bound
arpl
dec
ret
xor
inc
pop
imul
sbb
add
adc
xchg
cmpsl
ret
repz
dec
inc
jne
adc
mov
jmp
adc
cli
lret
cmp
cmp
mov
jae
aaa
nop
call
lock
pop
dec
insl
leave
mov
out
xor
incl
xchg
sub
pop
into
lock
sub
lds
jge
daa
pop
jl
jl
bound
dec
ret
div
loope
outsl
pop
mov
jl
xchg
rcll
sbb
jbe
jmp
dec
or
fdivrs
sbb
aas
and
jp
push
stc
mov
cmpsl
mov
lods
ret
fnclex
jl
mov
jae
jecxz
inc
fcmovu
or
sbb
and
inc
das
ds
mov
loope
test
add
aam
test
xchg
outsb
add
test
lea
lahf
in
idivl
pop
int3
sbb
out
jb
sub
scas
push
rcr
dec
adc
fildl
sub
test
adc
rolb
xor
imul
sub
push
sub
xchg
and
sub
orl
gs
insb
dec
xor
not
shll
push
scas
jo
ret
sub
inc
stos
mov
fadds
push
fdiv
stc
fcomi
xchg
mov
xor
jg
jno
insl
bound
cmp
mov
popf
mov
sti
lock
jg
sub
inc
sub
pop
outsl
sub
into
aas
repz
shlb
and
loopne
out
adc
fwait
jp
lods
outsl
adc
ficoml
cltd
jmp
push
mov
push
mov
adc
mov
inc
loope
jno
sub
inc
aad
push
dec
pop
gs
lock
lds
dec
js
cli
jmp
cmpsl
mull
fsubrl
xor
jns
mov
rcl
or
cmp
sub
jg
mov
xchg
in
sub
outsl
mov
pop
notl
fistl
repnz
mov
adc
inc
mov
mov
jo
fcmovu
xchg
fstps
repz
push
lods
jnp
test
lret
cwtl
cli
in
movsb
rep
inc
dec
sub
call
stc
in
mov
mov
sbb
pop
jg
rorl
std
pop
ja
scas
fs
and
sbb
ja
push
sbbb
pusha
cmpsl
lods
mov
fidivrl
mov
cmp
bswap
push
clc
sub
jg
movsl
scas
dec
sbb
into
mov
lcall
mov
pop
jle
aas
cmpsl
mov
idivl
cltd
mov
jbe
out
stos
jg
call
cs
fdivrs
outsl
test
fyl2x
inc
shll
xchg
and
or
idivb
push
mov
leave
push
mov
adc
jne
sub
add
mov
or
pop
mov
stos
faddl
out
jecxz
sub
dec
xchg
mov
lock
dec
getsec
cmc
push
outsb
mov
aas
xchg
imul
hlt
sub
mov
sub
dec
addb
cltd
test
arpl
push
imul
pushf
pop
sbb
idiv
ret
jbe
ljmp
jle
sub
and
xchg
bound
pusha
ljmp
and
pop
das
fisttpl
jae
xor
jl
aam
cld
jg
insb
in
daa
std
xor
jae
push
lret
push
inc
adc
sub
test
std
mov
add
and
outsl
sbb
addr16
lahf
les
in
pop
insb
mov
cltd
mov
aaa
push
and
rclb
add
mov
push
aad
xchg
stos
cs
in
adc
sbb
dec
cmp
mov
pop
mov
negl
test
push
std
paddw
mov
dec
data16
sar
or
cli
sarl
pop
ret
xchg
cwtl
aas
dec
add
repnz
mov
pop
arpl
mov
jmp
loope
pop
push
mov
pop
mov
clc
sbb
xacquire
out
jo
insb
out
aam
push
or
xchg
imul
jl
sahf
mov
pop
adc
jge
sbb
js
loop
stos
jnp
call
clc
pop
inc
vpsllq
inc
push
sub
push
sub
jecxz
jns
and
stos
mov
or
in
stos
stos
in
ja
xor
pop
cs
std
hlt
daa
and
mov
xchg
into
loop
jmp
mov
test
ljmp
jge
jg
dec
sbb
int
das
fdivs
mov
cmc
je
sub
out
sahf
jg
jbe
cwtl
jg
pop
inc
lods
test
fimull
stc
imul
jmp
adc
sbb
pop
lods
sbb
jb
cmc
jnp
sti
stc
call
cmc
aaa
mov
pop
jmp
push
cmp
inc
lods
dec
push
and
xchg
sbb
adc
push
pushf
std
jle
lods
or
mov
lret
imul
pop
inc
popa
fistpll
in
pop
imul
xchg
mov
test
sub
stos
mov
cs
ficompl
leave
cli
cwtl
aaa
sbb
popf
in
test
movsb
bswap
and
inc
sub
jmp
lea
fiadds
paddq
ljmp
nop
mov
leave
inc
lods
push
cmp
scas
sub
mov
ss
sbb
shrl
scas
nop
and
rcll
rorl
mov
mov
aam
sti
and
ror
inc
stos
or
pop
push
sbb
cmc
popl
cmp
xor
sub
or
or
sub
push
inc
aas
lods
stos
fiaddl
dec
imul
dec
aas
das
jb
xchg
insl
dec
lret
dec
fdivs
into
xor
pusha
mov
and
xchg
shlb
push
mov
sub
push
inc
inc
mov
dec
mov
sub
je
das
in
sub
out
mov
sbb
les
and
pusha
popf
adc
jmp
push
dec
xor
cli
cmp
pop
push
xchg
add
test
cs
xor
out
mov
sbb
jae
mov
sub
jo
sub
xor
test
sahf
jecxz
xchg
lret
inc
scas
inc
rcrb
mov
insl
sbb
shrl
xchg
sub
xor
cltd
or
mov
mov
add
mov
ffree
sub
cltd
fcmovb
jb
push
add
sub
aad
cld
and
or
sub
push
lds
scas
dec
movsb
mov
cld
jno
sub
mov
ret
test
pop
out
dec
jae
enter
mov
fistpl
jns
cmp
xor
push
dec
enter
ds
loope
and
pop
xchg
mov
outsb
or
xchg
mov
xchg
mov
std
movd
sbb
out
xchg
cmpsl
lret
sub
lds
aam
pop
cli
hlt
xor
popa
cmc
mov
dec
mov
xchg
xor
fisubs
rcrl
jnp
insb
jp
movsb
cmp
inc
mov
out
mov
jno
sbb
daa
mov
sbb
icebp
jecxz
inc
inc
sahf
xchg
sub
xor
mov
lds
popf
out
push
inc
add
push
ds
out
push
scas
jg
test
ss
outsl
shrb
mov
ret
adc
xor
cltd
sbb
int
add
fildl
sub
imul
ja
and
jnp
lcall
pop
imul
in
push
or
and
and
lods
stc
jmp
jo
pop
push
pop
adc
pop
push
sbb
leave
mov
jecxz
mov
mov
hlt
push
jge
mov
cmpsl
dec
in
dec
xchg
mov
sbb
shl
and
popf
ljmp
enter
push
fmull
xchg
cltd
aam
dec
pop
pusha
mov
mov
loope
sti
jp
imul
pop
or
aam
cmp
icebp
popa
inc
mov
in
or
mov
insb
adc
lea
or
addl
mov
fldt
cmp
mov
xchg
ret
imul
lcall
loopne
adc
int
mov
adc
sub
pop
mov
icebp
dec
cmc
ror
mov
call
push
jno
sbb
enter
mov
enter
push
inc
pop
loopne
pop
lret
movsl
das
sbb
mov
push
sarb
adc
movsl
sahf
mov
fisttpll
xorb
cld
loop
fdivrl
or
fisttps
jo
or
jbe
jo
cmp
jg
adc
std
pop
popa
push
or
cmp
mov
dec
and
repz
cmp
push
pushf
and
sti
push
and
sahf
push
rclb
adc
testb
iret
lret
xorl
dec
pushf
scas
and
add
xchg
jmp
mov
imul
jno
int3
fldt
inc
sbbl
adc
rol
nop
ret
int
mov
jmp
insl
mov
stos
shrl
ja
test
inc
jo
and
lret
test
jg
sahf
and
outsb
enter
sbb
decb
lahf
add
mov
pop
jmp
sbb
adc
xor
outsl
ja
jle
cmp
faddl
jno
and
mov
cmp
cmp
shll
pop
jae
lret
cltd
push
ficoml
rcll
jp
push
xchg
mov
xlat
mov
lds
aaa
js
jae
aaa
jbe
jne
in
stc
mov
stc
loopne
inc
jecxz
in
fistpll
cmp
pop
cmp
pop
out
out
sarl
dec
mov
rclb
test
aas
pop
and
push
and
je
push
jmp
xor
daa
addr16
lock
mov
fidivrl
and
cmp
int3
pop
jg
jno
and
xor
mov
jnp
mov
lods
stos
dec
dec
mov
xchg
js
or
xchg
cmp
ljmp
ror
xor
mov
pop
ss
add
and
push
xlat
in
sub
sub
adc
lds
mov
daa
adc
stos
mov
arpl
sub
addr16
mull
mov
inc
mov
mov
lea
fimull
aas
aam
push
pop
mov
outsb
sub
cmp
jnp
jg
lret
ret
sub
mov
or
mov
insl
pop
cmp
adc
mov
repnz
out
scas
ret
and
pop
aam
mov
mov
frstor
es
push
pop
cwtl
lcall
dec
daa
cmp
call
push
pop
data16
or
mov
mov
je
testb
aas
js
pop
mov
mov
cli
stos
cmp
ja
xor
mov
mov
fdivrs
sub
rcrl
xchg
aam
mov
push
jg
in
add
jecxz
dec
cld
lds
jmp
idivl
jb
xchg
insl
ljmp
dec
test
and
fistps
and
xchg
mov
aam
pop
mov
ret
lods
sbb
pop
pop
add
mov
jmp
scas
push
pop
ja
mov
shlb
inc
mov
mov
imul
les
sbbb
mov
jne
or
popf
pop
cwtl
pop
jb
fs
mov
add
push
loop
fldenv
mov
cmp
and
jbe
cmp
mov
mov
sub
jo
lods
cmp
fidivl
cltd
mov
daa
pusha
jmp
jae
adc
pop
lahf
cli
and
repnz
xlat
clc
ja
adc
pusha
test
lock
jge
icebp
xor
fildll
clc
pop
xrelease
mov
cld
push
jle
push
ljmp
jl
inc
mov
mov
adc
cmpsb
mov
inc
mov
or
std
push
mov
leave
cmc
mov
gs
jne
pop
enter
idivl
xchg
arpl
gs
dec
sub
into
add
or
fwait
dec
xchg
cmp
or
mov
into
arpl
mov
movsl
ja
mov
fwait
ljmp
loopne
add
into
push
jg
mov
sbb
sbb
int
xchg
les
jmp
stos
xor
sbb
mov
loop
pop
sub
and
push
sub
test
dec
or
pop
push
push
mov
popf
or
scas
fcoms
fildl
popf
mov
mov
adc
and
pop
pop
push
jae
outsb
data16
andl
insb
fcmovbe
jnp
mov
mov
xor
mov
ds
jp
xchg
iret
flds
and
fwait
pop
aaa
push
cli
xchg
cld
shrb
jb
lods
into
fisttpll
lods
mov
push
or
ret
dec
and
inc
fadds
jg
rorl
jbe
fsubrl
xor
adc
test
in
mov
rolb
in
xor
lret
sub
dec
stc
add
xlat
flds
dec
mov
mov
inc
popa
or
inc
jp
les
hlt
push
xchg
ljmp
mov
insl
mov
cmp
ret
adc
test
mov
xor
scas
sub
cmp
mov
jmp
inc
fdivrs
popa
ret
lock
test
mov
or
aad
jp
and
xchg
xlat
cmp
mov
mov
std
pop
sbb
xor
bound
pop
sub
cmp
pop
cltd
xchg
xchg
xor
jp
mov
arpl
sbbl
cmp
in
mov
push
jno
mov
imul
cmp
pop
lret
pusha
jns
mov
jge
arpl
int
cmp
call
cmp
cwtl
mov
pop
inc
rcr
mov
into
adc
cmc
fcmovnb
or
push
call
cli
sub
in
cmp
sbb
add
call
add
xor
push
imul
icebp
adc
jo
rorb
cmp
out
inc
dec
aam
mov
inc
sbb
cmpsl
je
loope
pop
mov
or
xchg
add
xadd
pusha
cmp
aam
out
cmp
dec
mov
push
cli
inc
mov
xchg
dec
jae
imul
xor
int3
sub
or
mov
fidivrl
bound
jne
push
insl
and
test
or
xchg
xchg
test
add
xlat
add
jg
push
out
std
pop
push
fiadds
mov
push
rcll
mov
mov
fdivs
add
fwait
pop
in
pop
in
adc
xor
mov
dec
cmp
sbb
nop
cmpl
and
xchg
out
xchg
mov
jbe
fcomps
sub
adc
cs
jae
lcall
inc
inc
mov
xchg
fcoml
dec
sub
mov
xchg
mov
in
mov
dec
je
movd
out
lret
jno
jae
cmpsl
mov
enter
imul
mov
addb
lods
dec
jb
push
loop
nop
ret
push
dec
mov
test
sbb
push
test
outsb
push
mov
in
sub
insl
add
cmp
mov
push
jg
repnz
jns
stos
subb
fwait
test
roll
jns
mov
pop
out
leave
jl
decl
sbb
and
ljmp
jg
dec
fisttpll
xor
dec
xchg
mov
mov
or
mov
xor
push
mov
out
fs
out
and
add
fwait
adc
push
test
mov
push
loopne
int
jne
push
in
dec
sahf
or
adc
or
adc
mov
pusha
fs
fcomps
les
movsb
push
daa
pop
xor
insl
inc
adc
push
cmp
sbb
or
jmp
pop
arpl
std
jp
cld
int3
mov
out
mov
xor
sub
lahf
fiadds
jl
push
fldt
inc
push
sub
clc
rcrb
fst
cmp
mov
push
and
insb
pop
ja
aad
addb
fsubrs
mov
in
and
ret
es
jmp
push
in
add
data16
cwtl
movsb
shr
bound
add
jmp
cs
jg
push
hlt
hlt
add
dec
xor
jb
or
pop
outsl
fcomip
sbb
insl
xchg
pusha
add
loop
sbb
rclb
add
and
fldt
jns
xor
pop
mov
push
lcall
fbld
call
es
mov
fnstsw
fstpt
sub
into
popf
daa
xor
inc
pop
mov
dec
mov
pop
jg
jnp
aaa
fistpl
aam
out
scas
push
jp
jl
mov
or
cmc
pop
jmp
jg
push
cmp
add
test
jne
sbb
adc
inc
adc
cmpsl
sub
mov
and
movsl
cmp
mov
sarl
ljmp
xor
mov
fs
or
mov
push
push
in
cltd
shlb
push
imull
jp
cmc
clc
xlat
rorb
or
lahf
lds
hlt
repz
sbb
shlb
mov
xchg
mov
and
push
push
ss
adc
decl
pop
cli
jge
jb
div
icebp
hlt
cmp
or
xchg
jmp
xor
adc
test
aam
xor
js
lods
push
fcmovb
jmp
pop
gs
mov
orb
into
aas
jg
or
sbb
sub
inc
jl
test
lods
push
cmpsl
sahf
dec
inc
inc
dec
out
in
jae
outsl
aad
jo
loopne
pusha
cmc
mov
jbe
mov
mov
scas
sbb
cmc
mov
adc
ret
adc
jne
outsb
xchg
mov
sub
ret
and
jno
in
scas
add
insl
push
fldcw
in
xchg
or
in
adc
aad
cmp
jns
bnd
mov
fistps
aaa
sbb
cmp
inc
lods
jno
in
push
mov
jno
test
add
fsts
repz
ret
psubd
outsb
push
mov
test
adc
cmp
addr16
addl
and
push
pop
mov
pop
push
add
sub
add
pop
cmc
lcall
xchg
scas
data16
roll
xchg
imul
ret
jne
xchg
fimull
enter
push
push
lret
push
fcmovb
cmp
out
inc
loope
ja
nop
cmp
lcall
testb
dec
leave
fimull
stos
ja
cmp
dec
fstps
aas
jnp
repnz
mov
pop
and
and
fwait
mov
push
stc
jge
sti
jo
gs
icebp
sub
dec
divl
or
jne
xchg
jns
pushf
js
movb
push
inc
mov
xor
enter
xchg
add
cmpsb
cmp
mov
cltd
pop
fwait
stos
lods
int3
pop
scas
filds
pop
pop
ljmp
cmp
mov
outsb
movsb
out
xlat
ret
or
stos
mov
inc
pusha
pop
push
rolb
sar
mov
xorb
dec
in
ret
adc
push
pop
jg
adc
mov
loopne
mov
rolb
sub
adcb
lds
add
and
orl
hlt
mov
xchg
adc
pop
movsb
inc
or
popa
pop
dec
pop
negl
loope
xchg
mov
lea
cmp
pop
cmpsl
ds
pop
and
test
sub
xor
shll
fsubl
add
xor
jns
push
and
mov
ja
loop
lret
popf
test
sbb
lahf
aaa
ja
dec
lcall
jae
mov
mov
shl
clc
mov
shll
adc
cs
mov
mov
jmp
jmp
inc
jle
test
sahf
pop
test
inc
movsb
sbb
and
xor
cmp
xchg
jae
negl
cmc
mov
mov
jae
mov
clc
mov
sar
sub
lea
loope
cmp
leave
adc
mov
cmp
jge
fsubr
xchg
mov
pop
mov
xlat
ds
stos
fdiv
ds
xorl
loopne
sbb
jle
inc
mov
push
adc
clc
sbb
loope
andl
pop
xchg
mov
or
pop
fildl
cltd
jnp
mov
aaa
je
mov
xchg
sbb
xchg
hlt
popf
fbld
outsb
dec
mov
fwait
dec
stos
xchg
xchg
call
pusha
movsl
mov
jae
sahf
enter
jae
mov
fbld
mov
pushf
test
in
lahf
add
bound
jg
cmp
or
aam
mov
loop
pop
cli
add
repz
inc
int
jge
ret
xchg
dec
pop
lds
inc
lret
orb
cmp
nop
adc
call
pusha
xchg
in
into
dec
aas
add
jle
push
inc
into
or
sbb
xchg
fcomi
pop
outsl
cmp
shlb
xor
pop
popa
test
leave
xchg
sbb
addr16
xchg
pop
push
cmpsb
iret
mov
pop
fists
loopne
push
fimuls
push
fcoml
dec
out
inc
inc
add
lea
jl
sar
and
or
or
lods
inc
out
fwait
mov
rorb
loope
jecxz
mov
jecxz
jmp
fstl
mov
push
add
scas
sub
sar
xchg
jbe
dec
nop
fists
outsb
lret
bound
cwtl
lock
inc
fwait
mov
and
enter
shll
xor
movsb
xlat
fbld
mov
sub
sub
gs
nop
mov
xchg
inc
adc
push
xchg
xlat
add
std
mov
add
inc
dec
call
and
sub
xor
sbb
inc
ss
mov
ret
or
mov
push
jecxz
stos
pop
cmp
push
inc
stos
and
or
adc
cmp
mov
pusha
or
add
cli
sub
scas
sbb
cmp
inc
pop
xchg
out
sub
xchg
clc
nop
cld
mov
faddl
icebp
fisubrs
popf
jo
shrb
mov
cmp
mov
cwtl
mov
outsb
outsl
cmc
ffree
inc
dec
cmp
addb
mov
orl
jb
test
sbb
cmp
pop
ret
lret
sbb
ss
pop
xchg
and
das
orl
in
stc
repnz
add
inc
mov
xchg
and
insl
in
hlt
xor
or
add
pop
in
mov
btr
cmpsl
ss
call
jge
add
pop
repz
xor
mov
fs
xchg
pushf
fisttps
sub
mov
jnp
icebp
movsl
jp
dec
jg
cmp
jecxz
mov
sub
std
int
xor
or
jno
outsl
jns
cmpsb
adcl
pop
in
ret
inc
xor
jmp
jge
insb
je
lret
scas
push
or
inc
jne
fwait
push
enter
popf
cmp
push
mov
sub
testl
sbb
push
icebp
add
aas
push
test
lcall
push
imul
std
xor
adc
dec
ds
stos
cmp
mov
fisubrs
fbstp
mov
insb
cwtl
ja
ljmp
mov
repnz
stos
push
int
mov
das
int
scas
inc
mov
mov
inc
call
and
out
push
cmp
pop
jg
rcrb
incb
mov
ljmp
push
add
and
mov
jns
jnp
sahf
pop
dec
mov
push
fwait
and
es
xor
inc
push
or
icebp
in
push
cmp
aad
add
mov
sbb
jecxz
mov
in
loop
rorl
add
ja
mov
jns
clc
and
pop
insb
cmpsl
sahf
mov
in
inc
jg
inc
lea
xchg
push
mov
cmpsl
pop
inc
cmc
scas
and
xchg
pop
push
repz
mov
cwtl
inc
inc
cmp
sbb
sbb
repz
pop
pusha
rcrb
arpl
jo
sbb
xor
dec
jecxz
pop
xor
add
mov
test
stos
out
jg
sbb
jno
jle
sub
in
or
and
test
mov
jl
idiv
sub
sbb
mov
push
iret
je
dec
adc
je
sahf
inc
mov
mov
xchg
arpl
icebp
jo
xchg
xchg
jo
testb
lods
cmp
test
aas
jns
enter
add
adc
cmc
add
mov
mov
fidivrs
sbb
adc
mov
mov
push
mov
scas
jmp
adc
sbb
test
cmpl
and
jp
sahf
push
mov
ret
testb
bound
xorl
cld
push
mov
push
pop
leave
aas
and
pop
lret
insb
sub
std
fdivl
negl
popa
mov
out
adc
or
mov
push
scas
inc
imul
jnp
fwait
cmpsb
push
insl
mov
shrb
mov
xchg
in
jp
pushf
pop
push
cmpsb
loop
sub
cmp
shll
adc
fistpl
cmpsb
xlat
cmp
sub
pusha
popf
sbb
push
xchg
imul
mov
inc
movl
bound
or
mov
pop
insb
dec
or
jp
adc
jno
rorl
loop
les
lods
cmc
and
stos
dec
insl
cltd
addl
imul
cmpsb
pop
mov
ffree
dec
push
sub
sbb
mov
bound
push
fildl
stos
mov
adc
xchg
pop
dec
jb
jns
mov
cmp
push
xor
or
outsb
add
arpl
or
jne
out
imul
push
call
cmc
jbe
std
outsb
xor
movsl
push
push
je
mov
jp
mov
and
mov
mov
loope
and
or
shrl
test
lret
lahf
outsl
je
iret
insl
and
inc
mov
scas
rcrl
mov
jb
jo
bound
lret
and
sbb
in
push
push
int
pushf
sub
ret
roll
push
repnz
inc
and
addl
cmc
sbb
jnp
into
imull
lea
shll
xchg
scas
subl
jle
push
das
jns
mov
pop
inc
xlat
jp
xchg
inc
or
loope
in
inc
aad
mov
les
adc
inc
outsb
xchg
rcr
xchg
lret
jecxz
xchg
lods
cmp
out
xchg
pop
out
sub
stos
xchg
push
enter
pop
inc
imul
or
scas
sbb
fscale
mov
and
sti
or
inc
ror
push
loopne
or
mov
fcom
push
xor
loope
xchg
pop
les
sbb
testl
shrb
jbe
iret
jmp
jle
jns
call
out
ljmp
add
call
push
jo
jmp
in
aad
inc
into
mov
into
adc
jnp
xchg
addr16
ret
stos
cmpsl
dec
shll
adc
movsl
mov
scas
pusha
mov
jl
push
mov
adc
fs
int
jp
xchg
and
jns
add
ret
fmuls
pavgw
popa
shl
scas
xor
enter
inc
and
push
scas
scas
cmp
fistpll
or
mov
mov
mov
sbb
je
mov
out
push
jne
jb
fcoms
daa
xor
xchg
and
mov
es
insb
outsl
xchg
pop
hlt
sbbl
outsl
inc
pop
xchg
ljmp
xchg
inc
call
cmp
mov
enter
sbb
mov
push
and
or
inc
cmp
cmpsl
jne
fists
shl
jbe
add
and
pop
xlat
fwait
xchg
sbbb
enter
cmp
push
push
xchg
mov
mov
mov
mov
cmc
mov
repnz
pop
add
push
push
dec
mov
xor
aam
and
cmp
mov
cld
in
jbe
ja
fnstenv
mov
mov
xor
in
cmpsl
leave
shlb
repnz
adc
pop
jecxz
push
insb
adc
mov
fsubr
popl
and
inc
and
imul
cmp
ss
in
mov
push
adc
push
mov
adc
aaa
mov
aad
push
jbe
adcl
adc
pop
movsb
icebp
cmp
sbbb
data16
in
lods
inc
inc
mulb
pop
dec
pushf
inc
xchg
xchg
inc
aam
jnp
pop
mov
inc
outsl
xor
iret
dec
cmc
inc
mov
jg
test
lods
xlat
jecxz
rolb
adc
cmp
mull
insb
lods
dec
add
inc
mov
dec
xchg
rcl
jmp
pop
ljmp
inc
and
push
repnz
cmp
and
mov
popa
xor
in
scas
cmp
xorb
cmp
out
ja
and
pop
sub
sub
insb
movsb
imul
sti
notl
jecxz
in
lahf
fwait
cmp
hlt
test
xor
xchg
mov
adc
mov
and
cmp
push
sbb
ja
pop
aam
mov
mov
hlt
jbe
xchg
sbbl
xchg
mov
lods
jo
jge
adc
insl
cmc
pop
and
shlb
push
hlt
xchg
xor
out
or
dec
divb
sarb
sbb
or
sub
cmp
test
loope
mov
cmp
fsubr
sub
xor
out
lcall
repnz
aad
cmpsl
ljmp
push
in
data16
xchg
push
cmp
mov
pop
clc
out
xor
mov
push
add
and
lret
cwtl
shrb
leave
pop
jb
xorb
into
or
dec
pop
xor
cwtl
js
subl
popa
push
xchg
xchg
and
mov
mov
or
adc
mov
mov
xor
push
fimuls
mov
sarb
and
cmp
dec
pop
neg
pop
inc
mov
mov
pop
inc
push
jb
rolb
stc
adc
je
insb
mov
mov
dec
cmpsb
xchg
cwtl
pop
cld
std
stos
les
mov
icebp
pop
subl
sahf
mov
std
hlt
std
mov
dec
mov
test
add
xor
ss
pop
movsl
nop
mov
jno
cmc
xchg
divb
mov
in
dec
pop
cwtl
mov
insl
movsb
subl
jge
xchg
lds
adc
stos
push
inc
rcl
cmpsl
out
inc
xchg
jmp
out
dec
dec
into
insb
xor
xlat
inc
mov
mov
dec
popa
stos
sbb
jo
cli
xor
dec
jne
aad
in
js
lret
gs
push
daa
pop
loope
lds
lea
ljmp
jmp
test
push
daa
pusha
jne
xchg
jmp
les
xchg
push
mov
pop
adc
sub
xchg
xchg
test
mov
sbb
rol
fsub
rcr
in
sbb
lret
push
mov
mov
jae
outsb
mov
out
cmp
movsl
push
bound
lahf
mov
mov
cmpsl
or
ljmp
or
dec
or
lahf
xchg
scas
insb
jge
rorl
mov
outsl
movsl
mov
pop
mov
pushf
inc
in
std
mov
out
sub
sarl
into
hlt
into
mov
ss
mov
mov
sahf
mov
inc
jmp
mov
inc
repz
out
in
cmpsb
xor
jnp
nop
jmp
mov
push
jl
in
clc
mov
cld
out
xor
pusha
lods
test
lds
cmp
movsl
mov
cmp
add
outsb
aam
pop
outsb
lods
js
lods
adc
inc
pop
pop
jb
push
xorl
lods
push
mov
inc
orb
lods
cltd
in
icebp
int3
clc
dec
jmp
fbstp
rorl
jbe
jns
cmp
repnz
inc
cmpsl
push
in
clc
data16
into
popa
and
pop
jo
roll
pop
fcompl
xchg
fmull
scas
pop
je
add
and
cmp
imul
sbb
adc
inc
jg
ret
cli
loope
shl
in
test
cs
and
mov
dec
inc
mov
pop
jge
or
pop
dec
mov
rcr
cltd
add
mov
loope
scas
into
pop
sub
jge
aas
jns
pop
daa
add
repz
pop
dec
xlat
and
mov
loopne
out
out
stos
movsb
push
mov
sbb
adc
lock
lock
and
dec
pop
mov
pop
or
mov
xchg
hlt
or
push
adc
jg
cmp
and
lods
lods
test
in
ret
sbb
mov
pop
leave
mov
fwait
into
sbb
gs
inc
leave
xchg
mov
push
inc
push
sub
xor
mov
mov
adc
jns
sbb
stos
sarb
aaa
pop
fadd
call
inc
or
pop
inc
push
jl
pop
pop
cmp
pusha
test
dec
mov
sahf
push
and
mov
jnp
push
out
bound
xchg
add
jmp
rcrl
mov
and
push
adc
push
in
adc
push
and
pop
and
hlt
pushf
xorb
add
adcb
mov
push
test
jb
fdivl
rorb
dec
cmc
enter
inc
mov
mov
adcl
add
inc
sbb
jno
jle
lret
xor
int
push
sbb
mov
dec
into
or
leave
cmp
mov
cmp
pop
cmpsl
mov
xor
mov
cmpsb
jle,pt
cmp
outsl
ljmp
js
jbe
out
xchg
mov
scas
scas
xor
sbb
or
xchg
push
sbb
ret
mov
cmc
push
sbb
repz
stos
repz
push
mov
test
push
cltd
pop
add
and
pop
xor
and
add
xor
push
out
cli
push
inc
push
push
sub
subb
movsl
sub
jae
lds
addr16
adc
xor
xchg
out
cmp
dec
in
popa
mov
iret
push
jb
stc
nop
or
xchg
jae
adc
and
xchg
shrl
push
push
mov
mov
jmp
xor
in
ss
push
cmp
es
movsb
mov
push
and
jns
adc
cld
pop
mov
in
imul
iret
sub
push
inc
mov
icebp
jg
pop
cmpsb
je
inc
addr16
and
fincstp
test
int
test
arpl
lods
pop
sbb
jg
fs
mov
outsb
orl
cmp
dec
pop
jl
add
and
aam
and
dec
imul
sbb
shlb
xchg
adc
mov
xchg
pop
das
popa
outsb
jmp
dec
into
add
repnz
push
mov
xchg
inc
cmc
int3
or
xor
or
lods
ret
popl
lret
std
dec
jmp
rclb
jno
js
dec
imul
push
mov
inc
or
pop
fwait
test
scas
testb
cmp
inc
lret
xchg
cmpsb
ss
add
and
icebp
test
sarb
sarb
inc
je
int
test
test
iret
add
mov
repz
fnstsw
jns
jb
fnstcw
add
mov
or
cs
xchg
and
push
inc
enter
xor
loopne
adc
aam
repz
adcb
inc
sub
mov
or
xchg
adc
dec
pop
pop
pop
xor
cli
loop
call
jl
sahf
call
push
cltd
mov
sahf
jg
in
lods
and
movl
pop
push
mov
test
ret
test
mov
xor
ljmp
aad
test
je
add
xchg
int
jns
jmp
shll
sbb
cld
mov
and
hlt
xchg
sahf
outsb
xchg
or
dec
xchg
add
adc
cmp
mov
js
jns
sbb
inc
fs
inc
fnsave
fdivl
cmp
ret
mov
inc
pop
dec
mov
sub
outsb
sub
inc
mov
push
inc
add
jl
cmc
adc
test
mov
ret
mov
vunpckhps
adc
xchg
aam
mov
jp
jg
cmpsl
scas
clc
dec
adc
int3
or
fwait
out
lds
fcmovbe
pusha
pop
mov
pop
loope
cli
out
jg
test
cmp
add
mov
aam
sub
adc
mov
out
cmp
fwait
sub
shll
std
jne
cmpsl
mov
call
ret
in
add
mov
lea
imul
test
mov
adc
xchg
mov
dec
clc
lahf
pop
loop
fidivrs
test
cld
jmp
inc
xor
lahf
jecxz
jns
fidivrl
xchg
sub
dec
sbb
push
jl
xor
xchg
pusha
dec
iret
and
xchg
mov
loop
loopne
mov
lret
dec
out
xor
sbb
mov
mov
inc
inc
mov
push
inc
dec
mov
pop
sub
inc
daa
pop
jl
sbb
cmp
lea
sub
mov
test
clc
sbb
and
xchg
pop
stos
fcoms
jne
inc
jg
push
test
aaa
mov
xor
push
jb
mov
loop
adc
jl
push
lods
test
fldt
test
std
push
ret
mov
stos
out
or
push
pop
orl
test
cmp
jnp
adc
jnp
push
or
cmp
inc
loope
pop
pop
pop
int3
std
cmpsl
arpl
cmpsl
adc
rclb
jno
into
shl
xchg
out
lods
scas
push
cmp
popa
mov
dec
push
sahf
sbb
add
xchg
jno
add
mov
add
xchg
sub
inc
and
mov
pusha
ss
xlat
jb
and
es
push
adc
loop
int3
lea
ds
sub
add
lods
xchg
lcall
lahf
adc
fs
inc
dec
test
loop
pop
ret
push
fs
stc
call
ljmp
lahf
push
sbb
iret
data16
inc
sahf
js
sbb
xor
sub
xor
pushf
inc
pop
add
ljmp
mov
pop
or
xor
pop
xor
xchg
inc
cmp
and
jno
fcomps
jg
test
repnz
int
pop
xor
mov
sti
bound
or
test
out
mov
sub
mov
fcomi
fidivs
into
dec
mov
adc
or
jae
push
mov
mov
xor
pop
shrb
fsubs
shl
xor
call
inc
notb
xchg
inc
out
dec
in
cmpsl
adc
test
mov
cwtl
add
pushf
ja
ds
lret
cs
pop
add
inc
pop
loopne
les
pop
jnp
inc
fimuls
adc
push
aad
mov
sbb
in
mov
inc
cli
mov
jle
lret
gs
jl
xlat
scas
call
and
sub
pop
and
pop
in
xchg
dec
jns
int3
xchg
pop
cmc
jns
loope
pop
mov
loope
and
xlat
dec
adc
mul
dec
bound
adc
sarb
xchg
lret
gs
mov
mov
mov
dec
loopne
pop
out
cmp
mov
pop
scas
sarb
xchg
movd
mov
push
xchg
test
nop
mov
pushf
cmp
outsb
add
out
repz
or
mov
inc
pop
push
scas
and
fucomp
add
inc
mov
xor
pop
loop
cmp
push
popf
push
jge
dec
ds
sub
test
js,pn
ja
push
inc
stos
push
sub
test
sub
xchg
add
loopne
push
sbb
imul
loope
and
outsb
inc
adc
and
mov
push
and
loopne
outsb
xchg
outsl
mov
ja
dec
jo
pop
enter
xchg
out
pop
adc
push
lock
cwtl
and
mov
cmpl
pusha
mov
fucomip
jle
into
ss
icebp
in
jmp
loop
fstpl
aam
push
jmp
xchg
fdivs
dec
add
or
aam
fxch
xchg
add
sti
inc
insl
add
cs
movsb
out
mov
call
insl
cmpsl
xor
leave
mov
mov
jnp
test
pop
pop
roll
dec
dec
data16
scas
xlat
push
pusha
lds
push
rorb
stos
and
push
xchg
mov
inc
ljmp
inc
cmp
idivb
cmc
inc
in
out
sub
push
push
mov
aas
popf
and
mov
cwtl
inc
cli
sub
lock
mov
dec
popa
ds
and
adcb
lds
cmpsb
or
jb
pop
adc
es
pop
lds
sbb
insb
inc
test
and
push
xor
and
outsb
add
pop
ret
mov
push
enter
das
cmp
xor
fistpl
loop
pop
xor
rclb
cli
fistpl
pop
or
data16
hlt
cltd
add
lock
add
cwtl
add
les
cmc
ret
xchg
or
ljmp
cltd
and
xchg
cmp
sahf
daa
lods
pop
dec
and
cmpsb
or
pop
aas
sbb
sub
outsb
adc
sub
sbb
adc
data16
jns
inc
fildll
out
cmp
lods
xchg
xchg
in
adc
neg
lods
xor
jge
imul
sbb
cmpsl
loopne
dec
in
lahf
push
mov
push
xchg
inc
daa
jbe
mov
notl
stos
jl
leave
movsl
xchg
jns
xor
inc
mov
orb
jae
imul
mov
cmc
and
and
push
sub
aam
adc
out
stos
nop
test
cmp
xchg
lods
push
sbb
outsb
iret
test
int3
divb
dec
into
push
es
mov
repnz
sti
sub
xor
or
add
fs
ss
dec
ret
mov
mov
into
js
xchg
sub
frstor
lds
loop
fisttpll
sub
jg
adc
inc
xor
lods
fmull
xor
je
test
negb
cmpsb
and
jbe
adc
adc
aad
cwtl
ret
test
dec
or
inc
xor
adc
sbb
jnp
dec
xchg
mov
andl
ds
cltd
fmull
jp
pop
xchg
mov
cmpsb
or
dec
out
add
mov
dec
sti
int3
mov
ja
add
repz
ds
push
stos
addl
lods
mov
js
test
jge
rcll
inc
xchg
ror
cmc
lcall
and
in
fdivl
test
test
stos
mov
adc
or
push
dec
inc
das
xchg
xor
add
nop
int
cmp
hlt
movsb
test
push
push
xchg
dec
nop
repnz
loopne
popa
mov
popa
insb
popa
sub
sbb
xchg
fs
xchg
sbb
xor
dec
xor
mov
push
cli
out
lods
fiadds
das
add
and
pusha
push
mov
icebp
into
push
mov
in
in
repz
or
fbstp
pop
stc
sub
sbb
or
jl
pop
sarl
xchg
pop
lea
mov
adc
int3
adc
sub
shl
sbb
ds
push
mov
mov
pop
ljmp
mov
or
xlat
sub
out
pop
clc
scas
out
jmp
inc
pop
sub
cmp
pop
mov
mov
stos
pop
push
push
mov
jle
adc
dec
loop
jmp
lods
inc
movsl
adc
movsl
sbb
pushf
push
dec
mov
fnsave
dec
and
adc
jp
pop
adc
lahf
push
inc
inc
arpl
push
mov
mov
in
fs
ret
mov
jae
or
push
loope
shrl
dec
push
xchg
in
pop
fld
cltd
sbb
adc
mov
in
leave
and
sahf
lods
pop
jno
mov
xor
sbb
out
mov
jb
ljmp
popf
int3
push
ss
repz
and
ljmp
out
rclb
adc
and
pop
das
xchg
inc
jle
cmp
push
sbb
jae
cmp
pop
aas
jmp
dec
sub
sbb
je
testb
push
mov
xor
mov
dec
je
movsl
add
gs
test
adcb
pop
jne
mov
lcall
xor
adc
fdivr
lret
lret
adc
nop
mov
or
sbb
fwait
arpl
gs
sahf
jge
and
leave
xor
outsl
dec
repz
cmp
fdivrl
aad
push
jle
mov
in
mov
loope
inc
mov
pop
inc
sbb
pop
jb
in
es
push
test
push
dec
sbb
inc
mov
fimull
ret
or
cmovle
sub
and
add
jmp
push
dec
pop
add
mov
push
sti
cmpsb
xchg
shrl
les
mov
push
std
jae
mov
inc
outsb
mov
in
jge
imul
ss
inc
scas
jo
push
mov
dec
dec
pop
xor
sub
int
or
lods
sbb
mov
inc
in
mov
aad
pusha
out
sarl
xor
stos
das
push
rcrb
insl
out
pop
mov
stc
dec
sbb
inc
xchg
fbstp
lds
sub
loop
cmp
bound
xchg
jle
xchg
es
ds
mov
filds
cwtl
fs
mov
pop
dec
pop
mov
sti
inc
mov
call
pop
addr16
cld
std
mov
sub
mov
fcoml
aas
push
cld
sbb
inc
mov
cmp
movsl
nop
or
sti
jle
mov
int3
mov
js
iret
push
out
ja
lahf
fistpll
jp
adc
ljmp
mov
scas
xor
cmp
loopne
fisttpll
sub
sub
popa
mov
adc
pop
aas
sbb
cmpsl
inc
adc
mov
and
adc
adc
cmc
in
xchg
or
mov
out
cmc
in
xchg
popa
cmpsb
test
add
inc
lods
test
cmp
pusha
and
scas
ljmp
mov
loopne
aaa
push
push
fwait
fs
imul
es
movsl
lcall
or
repnz
arpl
pushf
dec
cltd
lock
cmp
filds
shlb
pop
dec
js
and
jns
cmp
mov
subps
dec
jl
fcomps
push
mov
lahf
movsb
fsubrl
dec
jl
dec
xor
repnz
xchg
jnp
mov
xchg
sub
push
and
jb
inc
cmp
adc
test
iret
mov
mov
mov
scas
mov
cmpsl
push
pop
add
cld
mov
adc
mov
inc
sub
imul
add
cmp
in
dec
fs
sbb
pop
xchg
fisubs
xor
repz
divb
in
repnz
sub
nop
mov
mov
movl
jmp
mov
xchg
in
push
mov
add
adc
push
imul
dec
adc
cmp
xchg
push
shrl
je
cmp
mov
lcall
or
popf
mov
add
xchg
and
mov
shl
add
insb
adc
jmp
push
xchg
mov
sbb
int
sub
daa
lock
pushf
sub
jmp
outsb
jmp
test
js
or
push
leave
rcll
push
lods
and
cli
and
mov
push
and
test
hlt
mov
aam
cmp
xchg
cmc
test
and
test
js
test
and
adc
mov
adc
dec
stc
push
popa
mov
test
cs
div
sbb
mov
cmp
mov
mov
cltd
xchg
jle
jle
pop
jle
sbb
push
leave
adc
push
sbb
leave
adc
add
and
into
aaa
adc
push
mov
imul
ds
imul
negl
pop
dec
fidivl
sbb
inc
mov
xchg
dec
inc
push
lds
mov
mov
pop
dec
cmp
test
cs
ja
jo
aaa
push
imul
lods
jmp
cs
xchg
insl
repz
add
xchg
dec
cmp
fisubl
loopne
les
out
push
jp
repnz
cmp
add
mov
sbb
and
jns
add
mov
xor
sub
add
and
loop
mov
int3
sarb
jp,pn
mov
sahf
fldenv
mov
push
mov
mov
cltd
pop
jmp
sti
sbb
cmp
xor
pop
jb
and
loopne
dec
int
leave
dec
push
and
push
push
imul
push
mov
mov
mov
repnz
ret
es
xchg
add
stc
out
jae
adc
mov
push
bound
mov
dec
add
stos
xchg
xorb
sub
push
sub
addr16
jns
je
outsl
push
xor
out
xor
notl
nop
sbb
push
hlt
pcmpeqw
stos
xor
add
std
push
adc
call
mov
cmp
xchg
push
mov
adc
lcall
jae
cmp
scas
sahf
pop
adc
arpl
jecxz
mov
js
scas
dec
jp
xor
sub
mov
popf
pop
sahf
push
mov
or
je
pop
sub
push
and
inc
std
push
cmp
mov
popf
pop
data16
in
push
cmp
outsl
lds
insb
sbb
cmp
out
cmp
xchg
mov
ret
inc
xchg
jge
stos
insb
sbb
push
mov
sub
pop
std
repz
mov
jo
popa
jno
fbld
sbb
std
das
sbb
dec
sbb
sbb
dec
mov
pop
scas
shlb
pop
cltd
cmp
icebp
adc
xorl
adc
cmc
cmp
pop
xchg
pop
pushl
arpl
adc
ret
popf
pusha
shrb
test
jb
mov
cmc
mov
loop
jge
aas
insl
sub
fdiv
mov
pop
sbb
xchg
add
mov
mov
or
xor
xchg
jb
movsl
pop
sbb
mov
popa
mov
loopne
int3
fs
push
or
ds
cmp
lods
lods
sbb
lea
fs
lcall
dec
pop
sbb
xor
test
cmp
push
stc
jns
mov
mov
push
jp
mov
push
mov
push
ja
js
call
pop
lods
push
hlt
pushf
fdivp
sbb
inc
sbb
sub
lea
pushf
jmp
cmp
call
cmp
jne
ret
adc
pop
jmp
loop
jge
push
sbb
mov
adc
xchg
dec
rolb
mov
cmc
push
mov
add
lds
xlat
adc
test
push
pop
bound
lea
shll
push
enter
in
popa
sbb
pop
mov
cmp
dec
pop
and
into
cli
outsl
push
inc
sub
cwtl
leave
lods
xlat
xlat
mov
je
imul
pop
sti
fsubp
js
fstps
and
mov
fdivr
loope
hlt
repz
dec
rorb
xchg
mov
loope
aaa
mov
jae
enter
idiv
dec
xor
sbb
cmp
push
jno
cmpsl
and
jecxz
cmp
sti
push
dec
adc
add
es
lods
insl
push
pop
push
iret
dec
fsubrs
out
or
dec
sub
inc
xlat
bnd
test
pop
popf
fistl
in
push
inc
jns
add
roll
test
jns
pop
aam
in
dec
cs
cmp
sahf
lds
repz
or
cmp
mov
sub
or
sbb
sbb
pop
imul
jp
mov
sbb
daa
sarl
add
jb
xchg
mov
daa
cmpb
cmpsb
sar
push
mov
jno
inc
sti
fildl
lock
mov
add
fcomps
sahf
movsl
dec
dec
or
sub
dec
inc
add
push
cmpsb
adc
in
xor
push
and
sub
scas
popf
jp
aas
sbb
push
jg
jecxz
xadd
js
movsl
outsb
mov
daa
mov
sub
jno
hlt
or
lods
mov
jp
aad
cld
loop
in
cld
jmp
out
icebp
repz
cli
mov
std
sub
das
xchg
rorl
loopne
jae
jmp
jmp
iret
push
sbb
in
std
push
push
xchg
lock
mov
rcrb
xor
sbb
ds
mov
jns
cld
jae
ljmp
inc
sub
pop
push
shr
pop
or
pop
lods
fdivs
stos
movsl
push
xor
outsl
xor
push
xchg
dec
lds
lcall
and
rclb
scas
ret
xlat
jnp
mov
lret
xchg
mov
inc
sbb
adc
push
xchg
add
sub
add
jcxz
out
cmpb
xor
push
pop
xchg
sahf
fiaddl
xor
pop
adc
xchg
hlt
pusha
leave
sub
push
jbe
mov
addl
outsl
test
subl
lret
shll
jns
int3
push
xchg
add
pop
mov
sub
leave
shlb
popf
xchg
mov
sub
mov
sub
add
into
lret
or
push
lret
xchg
sti
xchg
push
cmp
lods
lret
and
loop
push
mov
pop
ret
jle
fmull
out
mov
fldl
add
sahf
mov
and
pusha
push
adc
xlat
mov
xor
dec
jp
push
hlt
gs
mov
js
jb
or
and
or
out
popa
mov
xchg
outsl
push
cltd
out
sub
push
adc
jge
cmc
bound
inc
mov
ss
out
fists
adc
rolb
sbb
addb
sarb
imul
pop
insb
sub
ret
pop
sub
mov
add
js
cmp
lret
mov
push
jmp
mov
adc
jmp
stos
movsl
push
aaa
cmc
push
insb
sbb
pop
ret
clc
popa
sahf
mov
sbb
arpl
out
rol
lods
mov
cmpsl
int3
mov
lcall
hlt
cmc
loope
dec
pop
xchg
es
push
inc
pop
xor
jo
icebp
popf
dec
pop
sbb
fsubp
les
pop
mov
out
scas
out
div
dec
jne
repz
mov
xchg
rcll
ja
pop
or
shl
lret
stc
push
push
fists
sub
or
loope
arpl
pushf
movb
cli
mov
mov
fwait
sub
sbb
in
lret
fcmovbe
into
es
sbb
lfs
stos
mov
push
sahf
pop
pop
push
test
dec
mov
cltd
lods
mov
ja
sub
xchg
adc
rclb
sub
std
lods
xchg
and
fcompl
add
xchg
add
js
lret
mov
loopne
push
push
push
xor
fninit
gs
pusha
scas
push
int
lea
mov
icebp
pop
jg
shlb
xor
pusha
push
les
inc
push
jae
sbb
jecxz
in
dec
push
add
hlt
cwtl
fldcw
fdivr
ret
arpl
xor
in
je
cwtl
hlt
dec
sbb
andl
fwait
out
lea
xchg
mov
xchg
ficomps
clc
and
cmp
ret
jmp
and
in
sbb
sub
xor
std
inc
dec
fidivrs
add
clc
jmp
cmpsl
test
pop
dec
cmp
pop
xorb
and
test
xor
aam
aas
push
mov
xor
in
sbb
add
int3
aas
aaa
or
jmp
add
and
and
call
xor
cli
dec
lret
scas
push
sub
clc
sbb
xor
cli
cwtl
dec
xchg
aas
in
pop
aad
lret
dec
cli
push
into
test
hlt
adc
les
outsl
sub
or
mov
aam
data16
outsb
mov
es
xchg
push
jae
mov
testb
orl
cmpsb
sub
cmpsb
jmp
into
add
push
dec
jmp
insl
jl
setno
fmull
jecxz
push
cmpl
xchg
adc
fsubs
and
push
cmpsb
aad
and
xchg
mov
pop
mov
enter
cmpb
out
stos
push
sbb
loope
jmp
mov
xor
insl
cwtl
cs
xlat
lret
push
mov
fildll
shll
shrl
int3
cli
cli
fmuls
or
sub
fs
cmp
and
push
sub
inc
xchg
and
inc
popf
inc
xchg
call
aad
push
push
lret
cmp
dec
mov
test
mov
mov
outsb
cli
mov
inc
lock
and
aas
dec
cmp
pop
cmpsl
fwait
enter
push
daa
adc
jmp
gs
inc
pop
xor
jb
in
jns
xchg
push
add
push
add
stos
clc
mov
rep
lret
cs
add
stc
loop
rcl
sti
and
cmp
je
pop
aas
lret
adc
jmp
testl
stos
aad
inc
stos
push
hlt
cmp
popa
or
jl
fbld
rol
pop
add
shll
andb
gs
jmp
loop
mov
andl
imulb
and
or
jo
mov
imul
push
inc
add
incb
or
ljmp
xchg
sbb
and
out
jbe
mov
ret
les
fnstenv
cmp
call
ds
pop
icebp
in
inc
pop
pop
inc
sbb
inc
xchg
jg
jbe
xchg
cmp
sbb
inc
cltd
dec
repz
pop
stos
sar
repz
jecxz
decl
popa
enter
push
cmp
clc
adc
mov
cli
xorb
or
xchg
popa
into
adc
add
xor
mov
xchg
mov
arpl
pop
lea
dec
sub
sub
mov
xor
cmp
jge
call
ja
lds
cmp
fmull
mov
jno
jnp
adcb
out
mov
scas
mov
xorb
jg
mov
into
call
adcl
pushf
or
scas
jne
cmp
fistpll
call
and
sbb
mov
xchg
jae
fcmove
lea
scas
jb
or
xor
addr16
push
subl
popf
jae
mov
pop
rclb
lret
or
sub
hlt
and
dec
jbe
mov
pushf
or
imul
mulb
cmp
aaa
mov
pop
dec
and
xor
leave
movb
mov
jle
push
and
cmp
ret
and
jnp
cli
popf
inc
dec
mov
sub
adc
sarl
pop
movsl
mov
jne
int3
push
push
pushl
hlt
or
inc
leave
pop
das
loop
xor
pop
dec
pop
adc
dec
cli
int
xlat
dec
jle
pop
int3
fcom
loope
push
fsubrs
pop
push
inc
push
cld
sub
fxch
aad
fcomps
xchg
outsl
sbb
pop
in
popf
push
inc
push
xchg
mov
ficompl
xor
pop
and
call
sahf
fcom
sub
cmp
mov
mov
push
mov
xor
pop
jmp
test
mov
sub
sub
sub
in
add
cmpsb
mov
leave
xchg
addb
rcrl
gs
and
sahf
hlt
int3
xor
cmp
jno
fadds
jo
shl
mov
mov
loope
sub
mov
inc
sbb
adc
sub
jb
or
andl
aam
sub
loopne
and
jno
aad
xchg
dec
icebp
add
testl
loop
out
addr16
icebp
scas
lret
inc
cltd
pop
pop
pop
leave
push
push
jmp
or
inc
jp
repnz
call
hlt
pop
testb
imul
sbb
mov
adc
add
fmulp
aam
mov
movb
mov
push
cmpsb
and
mov
movsl
push
jmp
clc
lahf
cltd
sub
adc
aam
adc
mov
inc
sbb
jb
loop
clc
pop
push
orl
bound
and
shlb
gs
popl
stos
or
pop
enter
dec
sub
mov
lcall
and
inc
daa
stc
subl
and
sahf
sbb
cmp
out
mov
jbe
dec
mov
pop
pop
add
xchg
pop
or
in
mov
daa
out
mov
ljmp
xchg
push
cmp
and
sbb
icebp
push
inc
dec
xor
push
in
out
movsl
stos
inc
inc
xchg
into
push
add
call
in
cmpsl
push
sub
fistpl
inc
mov
dec
ret
call
fdivrl
cltd
mov
mov
and
sbb
pop
mov
xchg
sar
std
rcr
mov
add
jg
mov
xor
daa
jb
repnz
iret
fs
cmpsl
loop
dec
div
nop
add
scas
lcall
movsl
inc
call
fwait
lock
movsb
sub
sahf
push
pop
lret
lds
jmp
cmp
xor
inc
mov
and
es
adc
mov
les
mov
add
fisubl
push
inc
add
data16
mov
out
fwait
das
aam
mov
ss
adc
push
sahf
mov
inc
cwtl
push
and
inc
xorb
loop
aad
loopne
mov
and
xchg
flds
mov
iret
scas
sysret
call
dec
aad
add
push
xor
jg
movsb
sti
push
or
pop
psubsw
jmp
repnz
jne
lcall
cmpsb
dec
popf
shrb
add
sbb
mov
jno
mov
ficomps
xchg
cmp
xchg
jp
xor
inc
sbb
or
push
or
cmpsb
shlb
jns
or
mov
stos
pusha
xchg
loope
pop
aam
cs
and
pop
pop
sub
push
aas
jns
iret
imul
jl
jno
mov
out
mov
leave
icebp
dec
xchg
dec
mov
push
mov
shrl
rcrl
xor
dec
hlt
add
sbb
push
mov
cmp
or
jbe
insl
pop
gs
cli
das
jmp
inc
mov
fldt
or
in
inc
mov
mov
add
add
push
pop
xor
jno
pop
jns
into
pop
jmp
jo
out
push
inc
and
inc
ja
mov
popa
in
outsl
and
sbb
cmp
das
ss
cmpsb
sub
add
inc
shr
leave
xchg
cmp
ja
jo
in
add
pop
icebp
xchg
dec
and
std
cmpsl
inc
cld
push
sar
fbld
push
cld
mov
push
ljmp
or
mov
jmp
repnz
push
sub
les
testl
mov
inc
jae
xor
xchg
dec
pop
pop
mov
sbb
xchg
aas
mov
mov
add
pop
shlb
je
xchg
jae
push
xor
fdivl
xlat
cli
mov
or
adc
cld
xchg
dec
popa
lahf
int3
dec
inc
out
rcr
mov
xor
outsb
jg
gs
mov
xchg
mov
stos
mov
rorb
leave
dec
xchg
loopne
sub
pop
sub
mov
push
mov
test
mov
gs
push
sti
mov
sub
inc
add
fsts
in
bound
jo
ret
iret
lods
pop
ret
fimull
movsl
jp
mov
decl
cmp
scas
out
ljmp
fists
aad
pushf
sbb
ret
mul
test
arpl
mov
mov
in
in
xchg
ja
fldenv
mov
or
les
push
stos
push
sti
mov
push
arpl
xorb
fadd
shll
mov
sbb
popa
cmpsb
cmpsb
mov
lds
and
xchg
mov
or
adc
notb
mov
jns
loope
xchg
movsb
push
adc
test
lret
ds
ds
stos
faddl
and
jbe
pop
test
imul
outsl
push
and
inc
sti
jle
sahf
mov
push
add
mov
sbb
lods
mov
daa
mov
push
cli
enter
push
in
nop
testb
cmpl
mov
sbbl
adc
or
lods
insl
in
mov
fsubs
xchg
cs
push
mov
lret
leave
sbb
jge
lret
repz
push
std
mov
mov
jp
sahf
cmc
pop
imul
push
outsb
or
and
xor
outsl
les
fidivrs
lahf
fadd
cmp
xchg
add
pop
cmp
imul
loopne
jnp
sbb
in
mov
mov
insb
dec
mov
mov
dec
faddp
cmp
mov
add
dec
imul
test
jae
insl
sbb
add
out
and
mov
xlat
ret
push
mov
push
mov
pop
jns
inc
sub
sbb
mov
mov
divl
mov
push
sbb
inc
aad
leave
je
fildl
xor
inc
mov
into
bound
xchg
xchg
in
les
xor
mov
push
adc
test
int
mov
cli
fistpl
sbb
lcall
xchg
popf
pushf
inc
inc
xor
xlat
mov
mov
cmc
push
sub
movsb
outsl
mov
js
in
xchg
stos
inc
shlb
xchg
and
adc
dec
rorl
mov
push
les
outsl
jb
scas
mov
xchg
sbb
cmp
jne
cli
cwtl
arpl
mov
insb
and
lcall
lret
jne
and
test
data16
sarl
xchg
mov
xchg
insl
outsb
jbe
sbb
out
rcrl
sbb
adc
cli
adc
xor
inc
mov
inc
push
lcall
adc
pop
int3
push
pop
pop
adc
repnz
xor
cmpsl
lret
push
add
xchg
shrb
dec
dec
jecxz
mov
testl
and
rclb
fisubl
fcoml
int
jnp
inc
dec
xchg
push
outsl
test
jmp
and
leave
mov
mov
mov
int3
push
cmc
iret
push
imul
push
or
je
fisttps
sti
pop
arpl
mov
pop
outsb
test
pop
or
or
stos
mov
push
sbb
mov
shlb
jo
xor
test
test
insb
adcb
loop
mov
cmpb
loopne
fdivrs
cmp
mov
sub
jb
popf
fidivs
cmp
jle
lds
je
mov
mov
sahf
sbb
das
cmp
and
xchg
lret
pop
pushf
imul
push
adcb
inc
xchg
cmp
fwait
sti
mov
push
out
mov
enter
sbb
cmp
xor
pop
popf
cld
int3
sub
dec
adc
es
jecxz
push
jae
push
mov
daa
jg
mov
sbb
inc
cmp
add
mov
xchg
stos
stos
or
jmp
lods
in
cs
jg
sbb
pop
mov
sub
imul
popf
xor
xlat
fiadds
cmc
sub
popa
dec
loop
jle
shl
pop
test
and
pop
inc
dec
xchg
cmpsl
and
loop
jns
fxch
adc
aad
and
add
scas
sti
mov
xor
add
adc
adc
dec
fmuls
daa
iret
repnz
insl
hlt
xchg
loopne
scas
or
mov
or
stos
dec
add
mov
or
and
aaa
and
sbb
mov
lret
xor
push
adc
notb
data16
lahf
mov
dec
les
and
loope
xchg
mov
mov
or
cs
pop
pop
dec
push
iret
add
hlt
jge
lcall
dec
movsl
xchg
clc
test
xor
pop
lret
fcmove
xchg
stos
xor
cltd
and
out
pusha
xchg
daa
mov
dec
cmp
aam
cwtl
add
test
outsb
cmp
js
xorb
hlt
andl
shl
sbb
pusha
mov
stos
test
push
movb
pop
and
dec
icebp
idiv
and
dec
jle
jnp
cmp
mov
xchg
or
repnz
out
enter
pop
ss
sbb
es
cmp
stos
push
push
mov
jae
ror
lahf
movsb
addb
jmp
popa
stos
fnstenv
mov
faddl
loopne
scas
mov
dec
pop
mov
es
push
push
pop
mov
lock
adc
xchg
lret
leave
mov
or
dec
es
aas
mov
rcrb
stc
mov
pcmpeqb
test
push
ja
adcl
into
mulb
cmpsl
out
jle
jle
mov
jns
jle
imul
out
inc
mov
inc
dec
cwtl
inc
mov
inc
inc
xor
loopne
data16
and
lea
repnz
sub
jge
add
idivb
sub
add
fmull
enter
into
pop
cmpsl
mov
call
inc
stos
xchg
jno
pop
shl
push
rclb
dec
hlt
enter
mov
andb
cwtl
and
jno
lcall
test
adc
outsb
mov
lea
loop
in
dec
movsb
cli
cmp
sahf
fcmove
adc
pop
xor
xchg
jecxz
sub
inc
xor
in
je
leave
push
pop
xchg
mov
dec
mov
cmp
sub
cli
push
arpl
xchg
push
cmp
aam
mov
adc
mov
scas
push
push
or
arpl
movb
sub
les
lret
int3
mov
out
ss
mov
or
mov
jno
les
push
popa
fstpt
xchg
dec
jo
scas
sbb
pop
popa
fld1
inc
and
movl
in
xlat
sbb
mov
pop
push
push
outsb
fsubrl
and
pop
jns
das
or
out
xchg
in
lock
repz
in
pop
repz
out
fnstcw
shrb
add
mov
loop
inc
rolb
cwtl
test
lahf
outsb
ljmp
ret
and
enter
aam
push
leave
xor
jp
ss
mov
out
leave
stos
sbb
imul
loop
mov
sahf
dec
sub
lret
jae
jae
inc
ret
pop
xchg
std
arpl
push
sub
push
inc
gs
out
jmp
int
std
sti
mov
dec
adc
ljmp
scas
push
orb
add
outsb
adcl
pushf
inc
mov
test
insb
sar
push
js
pop
scas
pop
inc
lcall
sub
sub
mov
xchg
and
insb
jno
inc
insb
pop
mov
scas
xchg
sbb
xor
aas
push
js
gs
insl
adc
loope
fsubs
ss
adc
lcall
in
bound
mov
push
xchg
pusha
xchg
xchg
jecxz
iret
xor
adc
incl
sub
pop
pop
daa
mov
jmp
inc
lea
ljmp
xor
jno
xchg
cmpb
movsl
nop
addr16
xor
xchg
mov
loopne
inc
mov
lahf
fs
fmull
xchg
jo
fsubrs
pusha
mov
cmp
fs
fs
pop
jp
jnp
ret
sub
cmc
inc
sbb
add
add
test
sub
adc
bound
dec
cwtl
jle
mov
clc
cld
test
inc
dec
adc
push
jg
scas
fcmovnu
imul
push
push
mov
rol
xchg
dec
sub
sub
std
lods
lods
push
jp
aaa
sbb
shrl
push
dec
xchg
and
lcall
lock
insb
rclb
mov
imul
xor
jnp
jo
lret
inc
cmp
or
and
lret
stos
mov
mov
ss
imul
scas
add
es
pusha
leave
dec
test
or
outsb
mov
mov
xchg
dec
int3
test
mov
dec
rcl
std
das
aas
outsb
xor
icebp
inc
inc
xlat
and
leave
mov
insl
rcll
pop
or
in
aas
adc
add
mov
or
inc
and
cmc
sub
nop
dec
repz
xchg
pop
fstps
pushf
push
sbb
pusha
jle
lock
xchg
ja
xor
push
andb
xchg
test
push
mov
andb
mov
mov
lea
mov
lret
cwtl
xchg
sbbb
mov
jb
jmp
lods
adc
sbb
cwtl
or
pop
cwtl
pop
sub
push
stos
test
aaa
shll
push
mov
xchg
into
push
shl
mov
push
out
inc
add
call
loop
mov
and
pop
cli
xor
fwait
jle
sti
cmp
stos
sub
es
repz
jge
imul
fucom
add
fistpl
fucomip
mov
dec
fbstp
leave
push
and
push
cs
cwtl
popl
xchg
mov
subl
sti
and
adc
xchg
call
fldcw
jnp
cltd
orb
hlt
cmp
cmp
mov
mov
xor
add
andb
ret
inc
push
movsl
push
pusha
out
lock
fs
mov
pop
inc
push
and
or
test
roll
mov
adc
pop
imull
mov
loopne
sbb
inc
push
sti
and
shlb
xor
jmp
lods
xchg
sahf
xchg
cmp
push
ljmp
sbb
stos
mov
cwtl
cmp
sub
add
lahf
negb
outsl
jne
imul
popa
jne
pop
scas
xor
add
je
notl
jp
jae
lods
aam
push
out
push
mov
pusha
or
push
or
sarl
inc
clc
mov
add
loopne
and
add
cmp
push
sahf
mov
imul
jae,pn
pop
mov
hlt
int
mov
mov
bound
clc
sub
outsl
jge
and
shlb
repz
pop
popa
pop
jne
fisttpll
xchg
dec
ds
pushf
xchg
imul
mov
add
pop
push
dec
push
jp
ja
push
jmp
adc
testb
fnsave
adc
sub
mov
das
das
insl
clc
sbb
addr16
add
add
fsub
add
sbb
sbb
inc
inc
aam
lahf
popa
cld
shr
loopne
inc
jecxz
xor
subl
inc
cmp
jb
add
sub
insl
loope
pushf
cmp
mov
push
push
daa
dec
jp
ljmp
add
sarl
xor
sub
xchg
out
scas
dec
leave
rol
jno
ret
repz
cmpsl
jmp
cmpsl
cmp
jo
icebp
cld
cmc
cmpb
mov
mov
repnz
cmp
adc
shlb
aas
xorb
aam
faddl
sub
bnd
sbbb
mov
or
sub
dec
repnz
mov
inc
mov
out
imul
sbb
pop
les
arpl
xchg
mov
xchg
divl
and
mov
mov
dec
out
lahf
xchg
add
mov
scas
jb
out
ljmp
sub
sbb
clc
mov
jno
lods
xchg
lds
popa
out
aaa
pop
lahf
dec
and
mov
mov
lret
insl
cmp
arpl
clc
adc
arpl
mov
arpl
mov
fcomip
std
arpl
mov
arpl
outsl
cmpsl
push
ljmp
cmp
cli
jle
add
push
mov
shll
push
loopne
in
js
roll
push
icebp
ss
add
jne
jae
push
ret
ljmp
pop
or
push
repnz
mov
cmp
mov
xor
int
cmp
sbb
or
jae
ret
or
inc
gs
ja
jne
lods
lods
push
and
inc
push
enter
ds
std
loop
push
lds
dec
cli
out
lods
cs
mov
shl
cld
mov
add
mov
mov
or
ffree
cmc
test
gs
imul
dec
lods
inc
into
inc
sar
or
loop
and
mov
es
mov
pop
push
test
in
cwtl
add
cmp
add
dec
test
pop
xor
sub
hlt
pop
daa
stc
jno
bnd
inc
inc
sbb
negb
xchg
sarb
mov
mov
lret
fwait
pop
xor
cmp
iret
xchg
xor
pop
std
rcll
out
sbb
pop
sub
xor
test
dec
jno
cmp
jbe
xorl
out
out
jecxz
mov
dec
jl
pop
fstpl
insb
dec
insb
lods
call
adc
jb
or
mov
adc
lock
jb
xor
xor
jp
pop
sbb
or
decl
cmpsb
inc
inc
dec
mov
adc
outsl
push
mov
mov
jne
dec
hlt
push
fcomps
testb
rorl
pop
movsl
les
stc
scas
mov
mov
cmp
xlat
add
push
sbb
or
in
out
aam
gs
inc
cli
test
xchg
aaa
sbbl
pop
or
sarb
fimuls
sbb
bound
adc
int3
inc
icebp
insl
pop
xchg
rcll
fimull
aam
or
inc
mov
jge
adc
cmp
ret
cmc
or
outsl
ror
das
sub
or
jle
jl
nop
sar
dec
sbb
pop
js
pop
xor
aad
out
cmpsl
dec
mov
sub
outsb
add
jne
push
subl
insl
add
movsb
shll
rolb
adc
ja
insl
mov
scas
lock
in
repnz
test
pop
gs
sbb
arpl
lods
dec
sbb
mov
bound
js
filds
pop
xor
inc
orl
mov
xchg
cwtl
push
jg
addb
movsl
push
lods
pushf
push
fisttpl
pop
pop
jno
adc
pop
int
dec
setb
sbb
or
push
xchg
not
clc
data16
cmp
in
xchg
add
push
or
iret
sub
icebp
dec
fwait
jne
fsubs
cmp
popa
insb
loope
repz
hlt
daa
pop
movsb
xchg
call
sahf
xor
or
adc
pop
adc
lahf
and
push
sbb
jmp
dec
lahf
into
lods
scas
scas
testb
and
arpl
test
inc
int
mov
or
fcoml
inc
sti
loopne
scas
jbe
insl
adcb
add
arpl
dec
jl
xchg
dec
xlat
dec
sbb
lahf
add
mov
mov
xchg
addl
mov
nop
cmpsb
sub
fsubrs
fsubrs
xchg
pushf
in
sub
mov
mov
and
mov
mov
mov
fcomi
sbb
jae
clc
adc
xor
and
dec
sub
sbb
lahf
lcall
cmp
mov
add
sub
mov
movsb
push
mov
cmp
pop
out
mov
rolb
cltd
and
adc
pop
mov
sarb
inc
sub
and
loope
adc
jmp
pop
popa
sub
bswap
and
enter
stos
xchg
sbb
jae
stc
inc
inc
adc
loope
dec
clc
sbb
inc
sti
popf
adcl
sbb
xor
push
push
into
ds
or
inc
icebp
mov
jp
fwait
scas
clc
mov
mov
sbb
pop
adc
adc
pop
pop
sub
aas
xchg
xchg
or
jb
push
push
adc
pop
push
pop
mov
dec
flds
sbb
or
lods
rorb
out
mov
inc
icebp
sub
addl
neg
sub
lret
jp
or
inc
out
adc
out
dec
push
pop
push
fidivrs
pop
add
inc
sbb
pop
insb
cmpb
shl
inc
pop
push
adc
movsb
out
sarl
lock
mov
clc
out
inc
sbb
add
or
lcall
lcall
push
cmp
push
in
ficoms
xchg
dec
cltd
lret
dec
ret
outsl
sti
test
inc
sbb
xchg
insb
js
dec
add
adc
pop
sbb
inc
sbb
call
pop
test
sub
push
jo
and
or
mov
sub
and
jnp
int
push
fcomps
shlb
pop
add
mov
sub
and
shl
xchg
dec
cs
sbb
sbb
in
and
cmpsl
mov
mov
outsl
mov
out
sbb
fs
xchg
xchg
pop
dec
loop
rcrl
aad
and
pop
push
cmp
and
mov
mov
push
xchg
sbb
out
jle
pop
aam
ficoms
add
icebp
pop
insl
cld
jnp
xchg
push
jg
leave
ret
sub
push
rcrb
leave
test
arpl
ljmp
jno
cmc
mov
in
loope
cli
lret
pop
lea
jmp
shll
cmp
lcall
cmp
pop
xor
push
subl
jnp
mov
xor
add
mov
lret
rclb
push
jecxz
push
inc
mov
ret
push
mov
ret
in
fisttpl
popa
push
or
pop
push
dec
mov
add
sub
xor
shll
or
aas
in
push
mov
nop
popa
pop
xchg
dec
jb
fwait
mov
add
out
rolb
push
popa
cmovp
or
es
push
mov
cmp
jl
add
cld
cmp
in
lods
pop
cmp
sahf
out
arpl
fsubr
push
cmc
mov
outsl
stc
pop
imul
cli
sub
dec
insb
inc
pop
pusha
ficompl
test
adc
loop
add
and
add
inc
jae
jnp
xchg
xor
inc
stc
mov
push
cmpsb
inc
shl
xor
sar
jo
in
je
jo
dec
dec
sahf
and
lock
mov
push
sub
gs
imul
and
leave
cli
lcall
and
daa
push
inc
xor
dec
sar
scas
sub
nop
mov
mov
mov
in
outsl
les
sbb
jg
into
mov
push
call
icebp
mov
mov
jmp
es
mov
scas
xchg
sarl
cmpsb
jbe
ret
test
push
sbb
xchg
out
nop
sub
das
insl
adc
cmp
out
pop
jo
test
inc
mov
sti
lods
mov
dec
dec
xchg
fstl
ficoml
subb
andl
jnp
fisttpll
jns
lcall
or
inc
fildl
or
or
jmp
add
mov
mov
data16
mov
stos
leave
mov
pop
jnp
and
xor
and
pop
ljmp
js
sub
push
mov
inc
es
mov
je
xor
mov
mov
xchg
mov
movsl
insb
jbe
scas
arpl
and
es
sahf
cli
test
and
sarb
addl
das
mov
cmp
cli
mov
subb
lods
jno
dec
imul
fdivrp
repz
leave
fwait
inc
mov
fnstenv
insl
inc
scas
mov
inc
lods
pop
insb
cmp
popf
mov
adc
jns
out
lods
movsb
addb
fildl
pop
pop
mov
nop
cmp
cwtl
ss
xlat
xchg
adc
out
dec
aas
jecxz
std
push
xchg
repnz
sbb
scas
ret
dec
dec
imul
jp
add
add
push
movb
loopne
addr16
cmp
insb
inc
push
cmpsb
loope
xor
movsl
ret
lret
mov
mov
pushf
inc
ljmp
iret
cltd
addr16
shlb
push
imull
xor
and
jno
mov
loopne
dec
cmp
cmc
into
repnz
add
scas
mov
std
in
jb
add
cmp
loope
movsl
scas
in
dec
or
stos
sarl
inc
mov
lods
inc
or
sbbb
outsl
subl
or
dec
dec
add
outsb
ret
push
std
test
cmp
imul
mov
aas
popf
aad
pop
push
adc
das
arpl
jp
test
outsb
pop
sbb
mov
xchg
add
sub
aaa
pop
or
push
push
in
fimull
mov
sbb
pop
pop
or
mov
cmp
jge
clc
stc
inc
mov
mov
mov
push
add
clc
mov
and
jbe
dec
dec
pop
cwtl
enter
xor
insb
inc
adc
sti
repnz
jae
add
insb
aas
xchg
jge
cmp
data16
adc
inc
mov
inc
jne
pop
filds
mov
mov
mov
mov
cs
inc
inc
movsb
sbb
push
push
push
jo
movsl
cmp
dec
mov
lods
aad
cmpsl
xor
int3
mov
enter
pop
xchg
lahf
lea
outsb
loop
scas
xchg
inc
lea
shrl
fwait
jl
jmp
pop
or
jno
adc
dec
sbb
push
xor
outsl
aas
push
cwtl
mov
pushl
push
das
lahf
adc
mov
adc
or
call
adc
fdivl
scas
jle
dec
roll
dec
pop
and
and
push
xchg
mov
je
cld
inc
shrb
add
jo
daa
jmp
mov
push
mov
adc
xchg
mov
mov
imul
fimull
mov
mov
push
movsb
xchg
test
es
pop
push
fadds
jecxz
xor
out
ss
dec
mov
imul
insl
movsl
xchg
mov
add
cli
push
push
mov
notl
xor
xor
inc
inc
push
stos
cmpsl
jmp
and
cmpsb
inc
pop
aad
in
jmp
rorl
inc
fistps
push
cld
xchg
rorl
jo
cltd
clc
outsb
icebp
dec
adc
push
mov
or
aas
pop
adc
sbb
insb
popa
lahf
divb
stc
jb
jb
xorb
cmp
bound
mov
or
nop
jno
sar
push
pop
mov
adc
add
scas
shr
cli
pop
mov
int
mov
fwait
call
mov
lcall
out
mov
imul
icebp
sar
loopne
das
cmp
insl
pop
lods
imul
lcall
mov
and
cmp
shrb
sub
sbb
mov
cs
imul
imul
push
shrb
nop
lock
and
test
or
ret
xchg
das
fistps
nop
sbb
mov
jp
push
mov
cmp
arpl
and
pop
mov
mov
aad
cmpsl
pop
xor
pusha
cmpsb
clc
hlt
scas
pop
in
inc
pushf
mov
sbb
xchg
mov
test
aas
inc
or
mov
cmp
fbld
mov
jb
xor
mov
cmc
cwtl
xchg
popf
or
aam
sub
mov
jo
cmc
out
lock
inc
repz
sarl
sub
add
push
push
outsl
loopne
mov
inc
in
popf
fwait
xor
adc
imul
add
cmp
movsl
xchg
loopne
es
rcll
fnstcw
xlat
pop
mov
sbb
push
sbb
cwtl
int3
cmp
jmp
add
mov
ljmp
paddusw
push
jp
xchg
add
call
ljmp
neg
ja
imul
dec
lcall
out
inc
popf
cmpsl
dec
xor
cmp
sub
jle
aaa
ret
mov
inc
mov
fsubl
push
addr16
shll
jl
xchg
mov
or
test
clc
dec
inc
mov
inc
repz
pop
xor
out
pop
xchg
sti
add
and
sub
mov
aaa
dec
push
jecxz
sbb
sub
mov
cwtl
inc
data16
and
lret
and
ja
dec
clc
sbb
in
push
vpshuflw
stos
pop
je
inc
outsb
insl
pop
addr16
cli
movsb
sahf
push
popa
jne
and
pop
das
incl
enter
jo
repnz
ds
adc
mov
or
hlt
mov
mov
inc
pop
push
jge
mov
mov
xor
shll
out
push
and
jae
adcb
sbb
jmp
sub
and
and
xchg
inc
test
dec
push
out
std
jge
dec
mov
jno
pop
and
push
adc
enter
xorl
mov
push
mov
enter
xor
andb
jae
mov
jb
push
enter
cltd
pushl
in
mov
pop
ljmp
sbb
sarb
cmp
aad
sub
loope
orb
pop
mov
pop
test
fs
push
ror
adc
js
jbe
stos
push
out
popf
mov
std
pop
and
insl
out
adc
sub
movsb
stos
int
adc
adc
sbbb
rorb
pop
fnstcw
ds
mov
jg
fidivrs
ret
addr16
pop
adc
mov
push
mov
inc
mov
pop
loopne
movsb
jge
stc
jns
outsb
cmp
cmp
jnp
imul
adcb
rol
out
dec
and
imul
nop
cmp
mov
in
imul
loope
sub
push
daa
jne
sti
shll
out
out
test
sti
lock
inc
xchg
or
pop
enter
push
push
je
addr16
mov
movsb
test
ret
mov
data16
xchg
daa
adc
loop
arpl
inc
movlpd
cmp
xlat
sbb
cmp
add
aaa
inc
stc
aam
push
aas
clc
jl
popa
fcomi
or
xchg
jp
negl
inc
or
inc
sbb
hlt
je
mov
loope
sarl
mulb
test
cmpsl
jl
ljmp
mov
fstl
jg
mov
mov
xor
fwait
mov
cli
sbb
fimull
dec
mov
aas
jg
cmpl
pop
fstpl
mov
push
mov
mov
and
lods
jbe
xchg
xor
fldenv
movsl
test
ja
mov
bound
inc
lea
ror
mov
xor
faddp
in
jne
adc
cmpsb
pop
or
std
insl
sbb
mov
outsb
int3
arpl
nop
arpl
lea
inc
sti
xor
popa
push
neg
jg
xor
push
pop
jl
push
jge
adc
outsb
xchg
xlat
mov
in
xchg
test
inc
xlat
int
jnp
insb
jb
xchg
xchg
xorl
jg
pop
sub
outsl
mov
lcall
mov
repnz
lods
jecxz
int
sub
sub
stos
scas
iret
loope
pop
fstl
fsub
mov
inc
fstl
and
lods
mov
sub
stc
mov
cmp
test
xchg
push
lret
sbb
sub
clc
flds
and
loop
add
divb
mov
bound
inc
shrl
push
fcomps
setnp
movzbl
lret
pop
mov
aam
or
xlat
popa
or
push
jmp
rcll
adc
jge
sbb
ljmp
addr16
push
add
mov
loope
ds
mov
fcmovnbe
mov
shll
xchg
nop
outsl
or
aaa
sti
scas
jo
sbb
and
jle
adc
mov
movsl
inc
or
test
cmp
xor
mov
jbe
xchg
add
aas
movsb
ljmp
sar
ret
ret
in
mov
test
cmc
mov
mov
cmp
rcl
xor
adc
jae
es
sbbl
lds
je
sbb
ret
insb
ja
aaa
dec
sbb
pop
xor
sbb
jle
cmp
fcos
out
mov
lock
aas
scas
push
stos
xchg
int
cmpsb
les
push
or
push
das
mov
clc
sub
std
mov
inc
sbb
je
adcl
je
jne
fidivs
out
add
sbb
movb
int3
jae
scas
roll
aas
in
sub
or
xchg
or
loope
ret
cmp
iret
or
rorl
push
sub
ss
mov
or
leave
repz
mov
inc
adc
notb
push
mov
sub
imul
push
jnp
ljmp
push
sbb
fidivl
mov
fwait
and
sbbb
mov
dec
inc
outsl
pusha
insl
stos
xchg
and
mov
test
cmpl
stc
add
add
repz
pop
sbb
scas
xchg
leave
gs
add
and
mov
xchg
cmp
jl
add
mov
xchg
mov
dec
aaa
out
mov
shll
jmp
adc
or
or
xchg
inc
cld
mov
mov
hlt
outsb
mov
cmp
in
jb
dec
mov
lea
cmp
loopne
xchg
subl
xchg
jnp
inc
xor
fisubs
jo
push
scas
fildll
mov
cwtl
mov
aas
scas
iret
dec
inc
mov
popf
and
pop
int
cmc
or
adc
inc
rolb
or
in
sub
sub
cmpsl
das
pop
mov
lret
in
xchg
sub
xchg
in
push
test
xchg
cmc
sti
clc
subb
gs
fisttpll
xor
dec
sbb
leave
mov
movsl
outsl
iret
aad
lods
dec
xchg
sub
inc
mov
rolb
loopne
sarb
test
mov
xchg
pop
cmp
test
add
dec
jb
fs
pop
jmp
xor
movb
xchg
mov
out
xchg
imul
aam
dec
daa
in
int3
xor
testb
lahf
ret
in
test
xor
lds
ret
sbb
sti
pop
fildl
or
faddl
icebp
sti
cmpsb
jg
dec
mov
push
outsl
js
call
and
and
hlt
cmp
inc
dec
nop
das
fstpt
pusha
mov
jl
fcoms
idivb
out
xchg
cmc
sub
movsb
sbb
test
ror
movsb
scas
push
mov
add
fsubrl
xchg
daa
push
stos
fdivl
adc
pmaddwd
jnp
scas
jb
dec
rorb
jae
push
fimull
jns
fisttpl
lods
insl
rolb
cmp
lret
xor
outsb
or
mov
rolb
in
daa
sti
xchg
hlt
fldenv
dec
xchg
jne,pn
out
cmc
js
sub
aas
push
xchg
ljmp
mov
jg
mul
mov
fwait
cmp
push
mov
insl
inc
xorps
into
jl
jg
xchg
push
mov
sbb
stos
or
ds
outsb
fcmovbe
sbb
or
xchg
pop
andb
xchg
loop
push
and
ljmp
mov
push
outsb
scas
rclb
jle
add
aas
add
ja
cmp
or
lret
rolb
push
xchg
push
push
push
sbb
or
push
fcmovne
cld
push
movsb
outsl
push
push
adc
jle
aam
lret
ffreep
ljmp
dec
jl
dec
mov
fs
add
inc
enter
jl
lods
add
jbe
mov
xor
xor
enter
or
cmp
aad
cmp
iret
push
insb
out
push
repnz
dec
insb
jns
pusha
in
push
pop
inc
std
or
pop
push
cmpsb
movsb
repnz
insl
jo
ror
sbb
or
fldt
and
and
mov
xor
loop
jmp
loopne
popa
inc
rorb
and
fiaddl
dec
ds
aad
test
mov
mov
fwait
aad
sub
or
xchg
orl
and
pop
out
jnp
dec
cmp
mov
push
lods
addr16
push
pop
rorb
fdivp
test
mov
push
adc
mov
mov
pusha
mov
icebp
ret
xchg
loope
test
cld
or
adc
cmpsl
daa
pop
jl
add
ret
add
xchg
imul
test
stc
in
ret
lock
or
pop
mov
test
xor
sub
sbb
in
pop
push
jne
test
sbb
mov
test
inc
stc
or
test
outsl
xchg
hlt
and
mov
adc
dec
mov
bound
mov
sub
jg
or
jns
adc
sbb
pop
pop
sub
mov
pop
dec
lret
cmc
jge
pop
pop
jmp
pop
out
xchg
or
pop
jle,pt
imul
jno
rcrl
add
xchg
push
jo
roll
xlat
sbb
and
fwait
sub
test
mov
shlb
into
arpl
and
inc
lahf
pop
popa
js
lods
repnz
sub
popa
sbb
and
xorl
jo
xchg
das
xchg
dec
lcall
push
int3
xor
cld
sub
xchg
fs
std
xor
pusha
das
sub
pop
jge
and
int3
das
xor
dec
dec
movsl
arpl
inc
lea
push
add
cmp
mov
mov
stos
out
pop
push
mov
movsl
jmp
popa
mov
xchg
call
popf
cltd
sarl
popa
or
add
jecxz
inc
pop
out
dec
push
cmp
jmp
outsl
sub
fldl
and
fsincos
rcl
mov
push
or
pop
xchg
sbb
push
lods
jb
jg
fcoms
xchg
cmpsl
xor
mov
or
outsb
andb
sbb
mov
push
inc
mov
pop
mov
sbb
subb
arpl
jns
into
inc
fcmovnu
fstpt
adc
lahf
sarb
fcompl
sub
jb
and
js
ret
cwtl
mov
pop
jmp
ljmp
test
jmp
movsb
jmp
popf
std
sar
mov
xor
add
push
and
xor
fsubr
lods
push
lods
test
es
dec
mov
cmp
and
or
rorl
icebp
sub
push
das
test
push
push
mov
push
xlat
or
sub
mov
shl
cld
xchg
dec
lea
mov
int3
xchg
lcall
xchg
lods
stos
clc
loope
jae
cli
sti
pop
mov
push
cmpsb
jl
dec
arpl
mov
dec
push
xor
lods
push
mov
das
cmpsl
push
aad
push
ret
daa
jecxz
xor
lea
adc
mov
pop
fmul
inc
int
or
push
mov
and
jmp
cmp
mov
mov
stc
mov
test
mov
mov
push
jbe
lock
cmp
jecxz
fldt
lret
aad
lret
jecxz
ret
pusha
push
xor
xorb
movsb
sbb
sbb
mov
mov
fucomp
jp
push
in
imul
ret
push
mov
lock
fcmovnb
lahf
mov
sub
mov
mov
adc
push
insl
jne
rcl
mov
xor
fdivrl
jns
xor
push
pop
pop
and
mov
lret
in
inc
roll
repnz
push
fnsave
or
inc
cmp
imul
push
mov
cmp
push
xchg
ret
in
mov
mov
inc
cld
dec
mov
xchg
dec
push
rorl
out
dec
mov
jl
jns
jp
mov
addr16
cmp
pusha
pop
pop
adc
in
fiadds
lods
aam
lock
mov
push
movsl
and
inc
nop
nop
add
push
mov
js
add
lods
and
in
cmp
push
hlt
aas
scas
fisttpl
dec
test
jle
pop
sbb
ret
dec
test
negl
xchg
mov
pop
xchg
xor
or
insb
loopne
rclb
neg
pop
xlat
aam
lahf
push
xor
push
out
xor
sbb
daa
pop
mov
lret
fs
or
jo
inc
stos
sarl
push
fcomps
sti
jae
ljmp
add
clc
adcb
jne
xor
adc
aad
ret
mov
xchg
pop
sarb
mov
push
sub
ja
scas
ret
in
scas
push
push
xchg
jp
mov
cmp
push
test
mov
xor
daa
inc
or
pop
or
test
jae
push
sbb
dec
lcall
and
ljmp
xchg
scas
sbb
stc
jb
add
mov
sahf
mov
lret
mov
ret
mov
push
mov
test
lret
call
cmp
out
std
shrl
rolb
movsl
dec
add
xchg
dec
js
inc
sbb
pusha
push
jns
cmp
sub
jmp
mov
push
outsl
mov
sbb
insl
sub
mov
hlt
fwait
scas
fisubl
fwait
pop
adc
call
sub
dec
jp
xchg
je
add
outsb
test
cld
adc
xchg
adc
dec
loop
sub
jmp
das
cmc
push
popa
push
mov
push
ljmp
jecxz
out
dec
mov
sbb
xor
and
in
fimull
data16
mov
leave
dec
push
mov
cmp
xor
lods
js
and
out
test
push
lahf
iret
mov
dec
roll
cwtl
imul
sbb
clc
dec
sbb
fdivs
mov
mov
gs
pop
xchg
mov
mov
sbb
ja
lods
mov
les
je
xchg
mov
jmp
sub
xchg
hlt
lahf
scas
in
stos
or
lods
fidivl
pop
loope
mov
pushf
in
jle
or
out
outsl
aam
call
test
adc
sbb
jecxz
dec
pop
loop
adc
leave
aas
pushf
es
jg
rorl
addr16
cmp
mov
fs
xchg
push
dec
in
push
and
mov
sahf
dec
shll
fnstsw
lcall
jl
das
mov
stos
mov
push
pop
pop
std
mov
sti
mov
mov
and
stos
jg
loopne
mov
add
mov
lret
adc
in
lahf
sbb
repnz
bound
sub
xlat
in
inc
fmull
mov
js
aaa
cmp
sbb
mov
inc
scas
xchg
and
sbb
fidivs
addb
sahf
in
jg
loopne
push
lock
out
aas
aaa
xor
ret
push
push
addr16
dec
add
jbe
dec
rcr
sbb
int3
lea
addr16
fistps
or
pop
in
lods
pop
and
loopne
scas
xor
xchg
test
imul
dec
cmp
fst
pop
mull
xor
sbb
mov
mov
sbb
cli
mov
vpinsrw
mov
shlb
lds
pop
dec
out
push
mov
ss
call
test
or
mov
sarb
pop
cmp
aas
pop
sti
add
and
arpl
dec
adc
push
cmc
push
ror
mov
ds
mov
sub
inc
dec
add
and
leave
jle,pt
std
sahf
adc
aaa
push
daa
mov
sub
adc
mov
xchg
mov
bound
std
ret
icebp
lret
pop
lock
jp
pop
mov
xchg
bound
shl
inc
xchg
loope
push
aad
lret
shll
int
test
push
test
mov
into
test
xor
mov
mov
popa
or
or
dec
and
testl
adc
test
adc
sbb
addr16
ret
jbe
imul
sub
add
jb
jb
add
mov
inc
xchg
xchg
fcmove
and
das
jb
fildl
or
xlat
je
mov
cltd
push
mov
mov
unpckhps
stc
ja
lret
scas
aad
push
and
inc
cmp
cmp
add
jo
add
cmp
stos
stc
loopne
mov
pop
ficoml
mov
and
data16
das
add
cmp
cmp
inc
test
das
xchg
pop
mov
cmp
push
add
out
fisubl
pushf
mov
ret
mov
imul
inc
mov
mov
jbe
clc
pop
dec
das
mov
pop
cld
lods
aad
and
mov
into
and
jge
lcall
notl
es
mov
enter
std
inc
rorl
mov
and
movsl
xchg
jp
inc
dec
inc
or
lcall
stos
mov
cmp
out
dec
jl
dec
cmp
jle
adc
int3
push
push
mov
les
and
stc
mov
mov
bound
pushw
jp
leave
push
imul
in
or
sar
jno
call
lret
call
repz
frstor
fisttpll
ficoml
pop
lret
push
popa
outsl
cmp
mov
dec
lock
adc
mov
adc
int
cmp
jo
js
add
bound
push
leave
pop
sub
xchg
stos
mov
leave
sub
scas
lcall
andl
scas
ljmp
je
adc
push
pushf
cmp
lret
or
fstpl
sub
lods
and
aad
push
inc
mov
mov
call
cld
xor
in
mov
cltd
out
mov
lock
mov
bound
jb
dec
xor
ja
xor
mov
push
rol
gs
rorb
mov
and
push
ror
into
das
lea
jl
xchg
dec
int
cmp
dec
sbb
mov
mov
or
pop
lods
adc
int3
cmp
push
sahf
xor
jmp
sub
add
pop
xchg
sbb
stc
leave
fwait
popf
mov
negb
xchg
sbbl
ja
or
xchg
xchg
ljmp
adc
push
mov
mov
adc
jo
jmp
mov
sarb
enter
aam
cmpl
pop
jbe
and
jnp
push
jnp
ja
outsb
cmc
dec
int
fs
mov
lods
mov
aam
int
ds
sbb
lds
mov
dec
cmp
xchg
into
ret
inc
nop
es
mov
cmp
sbb
stos
mov
sub
sti
cmp
pop
clc
popf
js
ficompl
js
jbe
sub
out
pop
stc
repz
add
mov
pop
rolb
loop
or
and
imul
lahf
ffreep
jp
jo
sbb
pop
out
jae
insb
xorb
stc
aaa
test
pop
xorb
jle
roll
clc
push
mov
cli
xor
push
std
popf
push
addr16
inc
push
mov
and
popa
fmuls
cmp
pop
fiaddl
hlt
in
popa
dec
hlt
add
pusha
out
sub
sub
fstps
add
add
fimull
xor
mov
jbe,pt
mov
enter
arpl
addl
lret
mov
push
add
dec
js
rcrl
dec
sbb
repnz
sbb
inc
lcall
sbbl
in
int3
out
xor
xor
adc
into
xor
pop
dec
xchg
inc
in
iret
popf
sbb
clc
outsl
std
cwtl
bound
fwait
xchg
scas
popa
inc
xor
or
stos
jge
stos
mov
repnz
pop
lea
adc
push
push
call
sbbl
adc
add
mov
scas
in
sbb
fmull
out
arpl
adc
daa
lcall
xor
ret
sub
push
shlb
push
add
mov
in
inc
jmp
in
pop
xchg
or
pop
popa
mov
dec
mov
lret
fcomps
addr16
insl
adc
dec
pop
mov
fs
scas
std
xlat
cpuid
fwait
shll
mov
lods
or
fsubr
pop
aam
fistl
mov
or
lret
test
icebp
mov
outsb
add
insb
lock
add
mov
or
movsb
or
pop
and
loop
insl
xchg
adc
nop
dec
gs
jp
lcall
inc
push
inc
sub
pusha
push
das
xchg
sub
mov
jbe
shlb
leave
jbe
mov
inc
rcrl
bound
mov
pop
and
sub
sbb
in
daa
fwait
enter
aam
xchg
stos
jle
jecxz
cmpsl
ret
push
insl
jnp
mov
mov
addl
sub
xor
repz
into
add
dec
cmp
shrb
dec
call
fwait
mov
fs
and
push
cmc
cmpsb
addr16
mov
in
adc
pop
stos
fidivrl
mov
je
test
aam
in
fadd
cmp
daa
xchg
jae
jb
mov
lock
icebp
iret
outsb
stos
es
mov
lods
or
cmc
add
aam
lahf
dec
push
aad
lods
mov
xchg
call
pop
repz
dec
loopne
or
adc
inc
lea
pop
das
and
cmp
and
loop
sub
xor
sti
stc
pop
add
mov
or
pusha
fcomps
and
clc
sbb
repnz
pop
dec
push
inc
lods
sub
inc
dec
jo
test
jp
das
mov
sbb
and
jle
in
mov
roll
mov
icebp
mov
daa
jne
test
stos
aaa
cmpsb
fmul
int
lahf
inc
sbb
sbb
dec
mov
xlat
xlat
mov
jno
adc
mov
test
in
repnz
mov
mov
mov
or
leave
push
loopne
fimuls
dec
xchg
ss
dec
cmp
lea
jge
int
cmp
adc
mov
fwait
in
sbb
nop
pop
rorb
adc
jle
lahf
imulb
jg
lds
cmpb
in
inc
add
bound
imul
aam
ror
stc
out
dec
mov
ja
mov
subl
cld
mov
sbb
ret
andb
rcrl
bnd
test
push
mov
push
out
out
into
int
lcall
movl
dec
add
stc
aam
in
sub
mov
aas
out
dec
movsl
lahf
push
lcall
or
add
popa
push
fdivrs
pop
cmp
insl
subl
in
xor
mov
popf
popf
scas
jns
sbb
outsl
push
adcb
popl
imul
push
aaa
sti
adc
bound
inc
loope
inc
add
rclb
cmp
inc
sub
xchg
ja
adc
mov
inc
add
clc
cmp
out
popf
sahf
push
jge
sub
outsl
mov
sub
call
mov
xchg
xchg
outsl
push
jle
mov
push
jle
hlt
and
xchg
mov
mov
sub
fdivl
xchg
and
sbb
xor
mov
test
lret
lret
fyl2x
xchg
or
add
adc
jge
mov
xchg
push
jb
add
inc
shll
mov
lock
jno
jae
dec
testb
mov
in
mov
aam
ret
add
jns
push
jg
out
jb
cmpsb
stos
jle
repz
fwait
enter
cwtl
mov
inc
jno
adc
aas
add
push
in
fisttps
push
mov
mov
iret
je
das
sbb
cli
out
stos
jg
addr16
cmp
mov
sbb
inc
loop
mov
xchg
push
push
mov
js
stos
in
sbb
pop
out
lods
sub
std
lret
hlt
shll
jo
aas
aam
cmpsl
imul
inc
ret
rorl
add
sbbb
test
out
jg
rcl
xchg
rep
fisubl
pop
adc
jg
sub
int
fldcw
test
cmp
xor
popa
int3
mov
cmp
cli
sub
call
inc
pop
xor
push
and
pop
pop
aam
mov
enter
pop
repz
shl
xchg
mov
push
xchg
sahf
adc
xchg
hlt
push
adc
jbe
sbb
adc
aad
xchg
shrl
inc
ljmp
xchg
js
rclb
sbbl
push
ds
sbb
test
and
imul
jle
xor
xor
jge
add
out
inc
sub
out
or
push
pushf
cwtl
sbb
push
cmp
xor
mov
add
jmp
fisttpl
popf
jno
cmp
lods
movsb
pop
outsb
pop
aam
add
arpl
push
lea
rorb
jge
stc
push
mov
hlt
addr16
pop
lock
insl
sub
cltd
push
lcall
mov
jo
outsb
inc
pop
outsb
pop
jmp
call
xchg
leave
lock
sub
xlat
jg
sbb
sub
and
fcmovnb
in
bound
jl
inc
jbe
mov
insb
sbb
jae
xchg
xchg
xchg
pop
mov
sbb
jmp
push
bound
jae
js
xchg
pop
lcall
mov
cmp
test
imul
cmpsl
dec
cmp
aad
mov
aam
jne
pop
mov
jle
sub
push
cmp
sub
dec
jo
pusha
test
pop
fcoml
xchg
push
cmpsl
or
adc
inc
bnd
call
xor
inc
ja
mov
mov
mov
in
roll
mov
xchg
push
jae
mov
pop
mov
fcomip
sti
pop
lea
ss
std
and
sbb
mov
add
adc
lahf
dec
adc
scas
mov
inc
imul
bound
shrl
mov
loope
cmp
jge
cmp
cmp
in
adc
pop
push
sbb
inc
je
movsl
mov
shll
cmp
ret
push
mov
fcomps
out
adc
add
inc
push
push
dec
gs
sti
xchg
xchg
outsl
push
fistl
sub
out
lret
xor
orb
enter
andb
jo
jge
jno
int3
cmp
jmp
dec
gs
mov
lods
mov
inc
inc
insb
movsl
xor
ds
xchg
arpl
cmp
mov
pop
push
sbb
aaa
mov
pop
sbb
xor
adc
xor
nop
fs
jmp
pop
push
aam
cs
mov
insb
mov
cwtl
xor
andl
andb
jg
pusha
in
mov
lret
adc
push
insb
inc
pop
mov
lea
adc
mov
jnp
test
in
push
fisttpll
lds
dec
xchg
movsb
ds
cmp
cmpsb
fdivrl
mov
mov
repz
xchg
test
push
or
push
cs
sbb
in
lcall
jecxz
add
testl
pop
mov
mov
roll
push
dec
mov
jns
push
shrb
in
push
outsl
pop
sub
insl
xchg
and
fbstp
mov
sbb
inc
adc
ret
mov
mov
or
pop
dec
dec
rcrl
nopl
sbb
mov
cli
adc
adc
lahf
mov
lock
or
jmp
and
in
xchg
mov
mov
loope
rol
push
pop
test
mov
adc
lahf
cmc
fwait
or
jecxz
gs
xchg
mov
jecxz
pop
push
pop
or
pusha
enter
add
hlt
int
jmp
cmc
jnp
push
int3
ds
pop
sub
or
or
adc
clc
cvttps2pi
daa
mov
jns
movsb
shlb
jmp
gs
mov
fistps
and
dec
es
js
imul
movsb
mov
stc
pop
pop
addr16
push
insl
mov
jecxz
repnz
sub
mov
imul
pop
in
enter
mov
or
cmp
fsts
repz
mov
into
add
jecxz
jmp
cli
aad
xchg
sub
mov
lods
out
fiaddl
mov
dec
jns
movsl
shlb
pop
inc
add
pop
mov
bound
cmp
mov
xchg
xor
loope
sub
mov
pop
test
xor
ljmp
mov
cmpsb
int
push
leave
out
stos
xchg
mov
mov
pop
addr16
enter
xor
test
jbe
das
pop
sub
xchg
inc
loopne
sub
pushl
push
icebp
jg
adc
dec
or
subl
mov
popf
mov
stos
jg
jb
add
idivl
insl
aad
mov
pop
movsl
lret
rcrb
insl
xchg
pushf
push
cmp
lea
hlt
ljmp
out
stc
jmp
add
in
inc
xor
in
push
xchg
cmc
fsubr
mov
mov
or
or
lcall
xchg
icebp
or
jns
push
in
mov
mov
and
bound
mov
dec
lods
cli
mov
xor
or
cwtl
cmp
rcrb
sbb
pop
push
popf
ficoml
jae
insl
mov
lcall
inc
mov
mov
dec
xchg
fsubl
mov
mov
mov
aad
sub
sub
std
push
cltd
sub
bound
adc
sub
clc
icebp
fwait
inc
hlt
xchg
ret
movl
call
lds
xor
mov
imul
fcos
xchg
mov
push
fcmove
add
out
addb
or
inc
jp
jae
les
xor
jne
xchg
jns
xor
xor
cltd
mov
rcrl
pop
dec
mov
scas
adc
dec
xor
dec
lcall
sbb
rcrl
sahf
jecxz
into
fldl
jne
call
inc
sbbb
mov
add
mov
fidivl
jbe
pop
fwait
push
ret
imul
lret
repz
popa
mov
push
sub
push
sbb
fmulp
iret
in
xchg
imul
mov
and
pop
shlb
repnz
ja
dec
mov
push
test
scas
popa
xor
adc
push
jl
sahf
insl
add
outsl
sbb
mov
xor
mov
fs
sbb
scas
pop
pushf
dec
inc
push
dec
aas
xchg
mov
loope
lcall
mov
lea
shr
in
lods
fs
imul
pop
cmpsb
add
fsts
mov
dec
xor
add
xchg
inc
je
sbb
or
mov
xchg
lahf
pop
stc
dec
dec
fdivrs
shrl
pop
inc
inc
adc
adc
cld
xorb
gs
into
dec
xor
xor
dec
int
sti
out
xor
add
xchg
fcmovnb
cmpsl
sub
and
or
js
in
lds
js
push
adc
shr
push
mov
xor
sbb
les
jbe
mov
mov
inc
imul
repz
dec
jb
ds
leave
xor
adc
je
mov
aas
push
push
stos
jp
jae
stos
mov
xor
jnp
pop
mov
fwait
lds
dec
data16
je
orl
nop
jb
push
mov
fidivl
testl
sub
ljmp
and
inc
lret
and
xchg
xchg
push
jbe
jge
sahf
dec
push
and
cmp
mov
dec
or
push
push
add
xchg
bound
adc
mov
or
and
and
dec
lcall
nop
lea
or
les
stos
icebp
movb
xchg
push
mov
mov
xor
add
and
aas
lcall
nop
ret
rcrb
add
push
cmp
mov
and
loopne
jge
insb
aaa
in
add
add
lcall
lea
aad
xor
sub
mov
push
xchg
inc
push
pop
dec
lods
jg
mov
mov
xor
xchg
cmp
ret
lret
cltd
xchg
ljmp
aad
mov
sub
out
insl
cmp
adc
mov
xor
add
mov
and
cli
cmp
xchg
adc
je
loopne
cmp
je
push
xchg
arpl
cmp
or
xor
inc
stos
add
in
sub
std
ficomps
and
fwait
lock
out
xor
or
add
sub
dec
je
add
push
adcl
xor
inc
jo
iret
test
add
nop
scas
or
mov
outsb
and
mov
adc
mov
mov
fcoml
push
jb
mov
and
test
mov
cs
inc
mov
es
sahf
pop
fists
or
and
jo
adc
xchg
cmpb
xchg
in
out
mov
xor
mov
test
jnp
test
and
aas
add
repnz
lcall
notl
mov
push
lods
mov
inc
mov
lods
ja
mov
mov
or
and
mov
out
pop
cmp
rcll
movsb
push
out
movsl
or
jmp
adc
out
xchg
cmc
pusha
mov
daa
add
xchg
ss
push
sub
decl
lret
xor
jb
inc
fstps
mov
je
ds
cmc
int3
je
pop
out
xor
pop
mov
xchg
cld
cmp
and
xor
in
inc
notb
sti
adc
xchg
lret
mov
lret
jo
lea
movsl
pop
xor
xchg
inc
jg
pop
loope
aaa
jnp
pop
xchg
cmp
cmc
xchg
sbb
and
push
mov
imul
fxtract
push
push
xorb
cld
loop
adc
bound
js
ja
xchg
jne
sub
xorl
jge
cmpsb
xchg
shrl
jp
cmpsb
rcr
push
add
add
cmp
icebp
mov
cmp
nop
mov
mul
imul
bound
out
sub
into
rorl
adc
add
dec
lods
inc
jno
add
pop
mov
or
int
push
lret
in
push
iret
adc
jae
mov
leave
pop
jnp
mov
sti
out
lea
inc
icebp
xor
sbb
inc
mov
lret
cmp
or
pop
xor
jmp
inc
shll
or
test
jb
dec
pop
loope
pop
jge
cli
pusha
lods
adc
jp
mov
cli
inc
pop
mov
jno
les
adc
andl
cmpl
mov
fdiv
scas
into
pop
xor
lock
shrl
hlt
sbb
pop
jmp
dec
insb
gs
cld
mov
idivl
jb
fdivrl
cmp
push
fwait
je
jmp
rorl
roll
cs
cmp
lret
test
lock
jg
shlb
jne
xor
mov
push
mov
ds
outsb
inc
sub
cs
aaa
push
sahf
push
sbb
xor
js
cmpsb
sti
xchg
cs
outsl
outsl
adc
dec
ljmp
mov
fiadds
mov
ds
pop
push
lods
iret
cltd
sbb
nop
or
adc
sub
sub
add
sbb
lcall
int
pop
dec
fisubrl
add
mov
cmp
lea
jb
sarb
mov
mov
sti
jle
add
mov
scas
cwtl
fcomp
idiv
mov
pop
adc
loopne
ret
mov
mov
cmp
jns
dec
rorb
test
and
das
repnz
pop
pop
and
repnz
and
ret
scas
xchg
fldcw
addb
test
mov
mov
sbb
repz
out
xlat
mov
pop
mov
mov
add
jb
xor
dec
mov
jno
mov
push
in
daa
testl
icebp
sub
jno
ret
repz
pop
cmp
inc
inc
push
pop
add
lods
pop
cmp
dec
das
std
inc
pop
pop
iret
repz
jno
stc
mov
push
fdivs
in
jmp
jg
inc
mov
xor
jp
fists
jns
movb
testl
inc
mov
ds
sbb
insb
or
pop
faddl
or
data16
dec
into
cmc
jecxz
pop
enter
int3
ja
dec
xchg
sub
sub
aaa
push
lods
push
out
pop
and
jecxz
push
and
pop
imul
out
mov
test
dec
loope
lahf
and
scas
pushf
and
adc
out
dec
push
movsb
fbld
cmpsb
add
ljmp
push
dec
sbb
cmp
cld
fisubrl
sarl
mov
mov
jle
inc
and
lods
push
pop
mov
roll
xor
inc
std
addr16
cmc
sub
int
cmc
mov
cwtl
daa
hlt
or
push
mov
or
mov
mov
jae
jle
addr16
shr
shrb
mov
outsb
outsb
mov
pop
imul
aad
cwtl
mov
mov
xchg
dec
adc
repz
xchg
mov
imul
popf
push
dec
push
xchg
push
mov
adc
enter
adc
loope
push
inc
adc
out
aas
pop
insl
lock
sarb
xchg
pop
call
xchg
shlb
and
fwait
cwtl
sbb
outsb
loope
jg
testb
ficomps
popf
call
mov
xchg
movsb
rorl
movsl
mov
in
scas
sub
push
lcall
outsl
pusha
movsl
popf
dec
push
jns
insl
pop
testl
insl
into
dec
xchg
cmp
call
insl
mov
aaa
pop
ds
adc
sbb
mov
mov
out
mov
scas
cmpsb
mov
xchg
add
les
fstpt
dec
les
outsl
ret
lret
stc
dec
int3
jecxz
xchg
orb
cld
inc
adcl
jg
rolb
aaa
out
pop
fwait
adc
repz
dec
out
add
inc
jnp
fldenv
arpl
fldenv
or
out
fcomip
stc
andb
add
imul
xchg
ftst
out
pop
stos
xchg
cltd
xor
inc
bound
sarl
sti
push
scas
jbe
std
jae
test
xchg
fisubl
add
lods
lahf
int3
in
mov
out
sub
dec
dec
jge
pop
xchg
cmp
out
mov
movsb
clc
pushf
out
je
dec
dec
push
pop
fdivrs
lahf
mov
or
data16
in
pop
sarl
loope
cwtl
pop
movsl
jge
sbb
sub
sub
js
fstl
int3
sbb
fst
movsl
xchg
stos
mov
xor
dec
pop
add
pop
inc
mov
inc
scas
lock
outsl
shlb
fstpt
and
test
clc
pusha
fstpl
leave
push
rclb
add
jge
stos
xchg
pop
mov
cmp
mov
add
pop
mov
inc
shll
rorl
mov
cmp
mov
je
in
cmpsb
mov
sbb
aam
mov
lret
inc
fmulp
rcll
test
push
xor
pop
icebp
rclb
ds
adc
mov
rcll
fists
or
mov
pop
sub
dec
and
rolb
roll
into
adc
push
lock
push
test
and
sbb
pop
or
ret
ja
mov
pusha
loope
and
xor
roll
outsb
pop
movsl
lods
scas
int3
pop
pop
dec
fs
xchg
pop
pop
cwtl
xchg
andb
jmp
and
mov
add
jno
cmp
mov
movsb
jmp
cmp
mov
sbb
mov
and
pop
mov
loopne
scas
add
fs
test
stc
pop
lock
popa
call
or
aad
cli
test
das
push
lods
ds
fcmovnu
andl
cmp
fmulp
test
mov
aad
or
cmpsl
xor
xor
outsb
fwait
dec
inc
dec
pop
lds
rcll
insb
xor
mov
cltd
and
bound
mov
cmp
add
lods
iret
dec
inc
imul
inc
jb
mov
xchg
out
pop
sub
les
inc
push
pop
int3
mov
iretw
mov
sbb
mov
loopne
mov
mov
stos
inc
rcrl
add
xchg
insb
fdivl
fs
popf
xlat
movsb
xchg
lds
sti
je
sbb
scas
and
fsubrl
xlat
push
das
or
movsl
sub
or
imul
dec
shld
lahf
orb
mov
xchg
mov
xor
lret
sub
call
subl
cmpsb
stc
inc
push
fs
mov
xchg
sbb
fadd
dec
mov
mov
jmp
sahf
jne
sub
cli
fwait
mov
aas
sbb
shlb
mov
nop
sbb
jae
std
lock
es
xchg
iret
sbb
fimuls
mov
push
xor
pop
jno
push
jbe
dec
lods
out
sbb
fists
testl
bound
add
jne
dec
push
imul
shll
push
in
xchg
mov
mov
hlt
jnp
add
sub
and
mov
iret
cmpsb
jecxz
fs
cmp
xchg
xchg
xchg
add
add
jmp
call
pop
test
xchg
add
cmpsl
fldt
jle
sbb
and
adc
adc
sahf
fbstp
sbb
push
and
cmp
pop
xchg
jo
add
in
fidivrs
in
rolb
arpl
xchg
xchg
add
insb
test
test
in
inc
pop
inc
pushf
xor
sub
scas
fisttpll
mov
adc
adc
pop
sahf
or
pop
cmp
push
ret
and
cmp
call
subb
sbb
xchg
and
lahf
outsl
scas
lock
mov
xchg
iret
insl
das
pop
xor
mov
mov
pop
negl
adc
xchg
ret
arpl
or
scas
or
rorl
sbb
push
add
arpl
xor
pushf
sbb
and
inc
adc
inc
sub
insb
mov
mov
cmp
mov
xor
adc
pop
mov
mov
ret
push
outsl
adc
nop
test
cmpsb
mov
es
int
pop
es
mov
lods
repz
inc
lret
fnstsw
dec
lods
jmp
or
cmp
adc
stc
les
call
loope
sbb
mov
movsl
sbb
adc
xchg
mov
cmp
cmp
xchg
cmp
es
mov
sbb
or
jl
lret
shlb
inc
lret
scas
jge
jns
cmpsl
loope
pop
lods
sub
pop
sub
add
scas
inc
sub
neg
jp
fmull
int
fdivs
dec
push
jns
push
cmp
jle
loop
mov
mov
mov
imul
jnp
mov
cmpb
decl
movsb
xor
lahf
bound
sti
xchg
enter
in
stos
call
jnp
hlt
rcrl
mulb
call
or
ret
sub
jo
jnp
or
leave
mov
rol
xor
xchg
int
test
leave
aad
inc
push
and
lods
test
movsl
cmp
fwait
sbb
xchg
loope
aas
fwait
cmpsb
cld
ret
fwait
add
cltd
bound
inc
dec
dec
movaps
ljmp
cmp
rolb
dec
cmpsl
sub
test
lock
in
dec
sub
sbb
lods
insl
in
fidivs
repz
jle
loop
sbb
fildll
fsubrs
lods
jl
stos
push
sbb
test
cmp
repz
push
in
add
mov
inc
test
mov
sub
stos
cmp
mov
xlat
dec
cmp
dec
xchg
cmp
daa
inc
scas
xchg
clc
popa
pushf
pop
lock
jo
cmc
push
mov
xor
jle
scas
loopne
pop
pop
add
and
xor
push
sbb
ds
dec
jns
test
fsubrl
cwtl
loop
out
dec
xor
rcrl
cmpsb
inc
je
jns
in
sub
ljmp
jnp
sub
ljmp
test
sbb
mov
mov
add
xor
jo
js
mov
adc
lcall
or
sarb
jl
mov
dec
or
rcll
pop
stos
push
jno
dec
sbb
sti
or
and
icebp
push
cltd
test
aaa
jo
mov
lret
push
scas
repz
in
mov
jne
mov
or
pop
add
mov
push
inc
popa
push
idivl
adc
scas
cld
jb
ss
jb
leave
ffreep
and
add
or
pushf
inc
lods
pop
xorl
cmp
fisttpl
and
ja
fcompl
mov
leave
jmp
shlb
cmpsl
popf
push
enter
lahf
fstps
fstpl
rcrl
fadds
stc
push
insl
adc
mov
inc
cmp
push
mov
pop
inc
pop
into
int3
int3
popa
pop
sbb
aam
mov
iret
inc
sbb
fldl
pop
jge
lods
adcb
fsubp
les
mov
in
jp
cmp
xchg
push
jg
cmpsl
cwtl
xchg
aaa
push
lea
adc
xchg
jg
fcomps
test
fwait
xor
sbb
call
cltd
addr16
insl
and
dec
lock
int3
mov
jl
pusha
clc
call
sbbb
xor
fnstenv
lock
pop
jl
pushf
and
stos
lds
xchg
andb
xchg
mov
xchg
sar
pushl
push
mov
daa
or
sub
clc
insb
mov
adcb
loopne
stc
mov
cmp
sbb
jle
mov
cmpsl
in
lods
and
in
inc
pushl
pushf
cmpsl
mov
mov
xor
ljmp
cmp
out
wrmsr
adc
in
push
sub
dec
out
pop
cltd
mov
lret
sbb
mov
inc
push
adc
das
loopne
inc
jge
aad
in
fimull
aaa
std
mov
outsb
lcall
xchg
mov
cmc
in
in
mov
cmpsb
ret
pop
pcmpgtb
sub
sar
push
mov
xchg
mov
sbb
stc
fs
or
inc
mov
cmp
insb
add
add
push
sub
xchg
setp
ss
or
xchg
mov
dec
stos
add
xchg
ss
fildl
aas
movsl
cmp
es
int
outsl
push
pop
decb
fwait
ret
xlat
movsb
xor
into
jge
div
jb
sarl
jp
inc
xor
cmp
sbb
push
mov
jp
ss
sub
inc
rcr
xor
or
jbe
ds
and
sub
inc
xchg
push
and
sub
arpl
lret
addr16
rolb
scas
jnp
cwtl
inc
and
push
pop
js
pushf
cld
fwait
sub
push
jmp
xor
add
lds
push
outsb
cmp
sbb
pop
insb
dec
hlt
dec
mov
inc
call
movsw
xchg
adc
cld
imul
rcll
jns
mov
out
ljmp
push
inc
aam
in
bound
sub
dec
jns
push
pop
adc
test
mov
iret
ljmp
and
sub
rolb
jo
dec
enter
lret
mov
mov
dec
mov
push
sub
cld
into
rorb
nop
or
leave
out
pop
lock
and
movsb
movsb
mov
and
inc
mov
fnsave
mov
dec
out
shlb
sub
clc
mov
add
mov
mov
add
pushf
scas
mov
out
mov
mov
xchg
sbb
repz
push
push
jno
push
xchg
iret
ret
pushf
pop
lahf
scas
ss
mov
test
inc
gs
ret
icebp
pop
negl
jnp
ror
mov
inc
js
xchg
xor
dec
negb
movsb
std
mov
pop
dec
and
je
pop
test
sbb
lods
mov
lcall
stos
lods
cmp
add
fstpl
xlat
and
loop
leave
aaa
and
mov
push
out
iret
div
popf
push
inc
pop
out
scas
fisttpl
or
pop
adc
cmp
rcrb
mov
out
sbb
push
in
shrb
push
xor
jb
mov
sub
js
push
popa
mov
fidivrs
roll
loope
js
mov
adc
test
cld
cmp
pushf
pop
pop
inc
inc
xor
je
jo
or
mov
mov
add
fwait
je
or
jmp
push
or
insl
cwtl
movsb
dec
mov
inc
mov
xchg
int3
push
rcr
xor
lret
pop
cmc
and
dec
pop
jp
pop
adc
repnz
adc
or
jle
xchg
jns
je
pop
add
xor
int3
sub
inc
aam
cmc
roll
scas
jle
push
out
xchg
push
movsl
cmpsl
jbe
mov
icebp
mov
xor
lahf
dec
and
jmp
hlt
loop
stos
xor
test
movsl
mov
out
add
int3
and
cmp
stos
or
xor
mov
das
pop
mov
mov
push
xor
jne
jp
xor
gs
lcall
and
lock
lea
mov
call
adc
mov
add
aas
mov
popa
xor
jae
push
adc
inc
jns
fcomip
push
out
ret
adc
dec
xchg
aas
add
aad
sbb
adc
inc
push
xchg
xor
lock
lahf
adc
icebp
push
icebp
jnp
testb
inc
lea
mov
and
imul
adc
repz
sub
popa
push
lcall
in
mov
inc
dec
xchg
xchg
testb
test
fsub
cmc
ljmp
add
std
jb
mov
adc
mov
mov
mov
popf
sbb
test
mov
shlb
inc
inc
mov
and
mov
inc
pushf
xchg
mov
scas
lea
mov
xor
fbld
shr
adc
jae
jecxz
cmp
sbb
jmp
jl
lea
jae
mov
push
cltd
fidivrs
fstps
sti
adcb
sub
imul
cmc
ret
idivb
push
xchg
shrb
leave
jo
lods
push
js
cmp
test
pop
clc
fidivl
call
int
push
push
push
xor
mov
ss
test
mov
inc
rorb
add
xchg
ret
pop
pop
jno
arpl
imul
shl
inc
push
jbe
jae
in
xor
dec
test
jnp
stc
stos
movsl
popf
pop
lock
test
inc
mov
push
rorl
xchg
aaa
adc
xorb
movsl
xor
inc
inc
jle
jbe
pushfw
mov
jl
sbb
in
outsb
test
nop
inc
adc
mov
fwait
stc
ficoml
and
xor
push
inc
xchg
ficoms
incb
mov
gs
ds
mov
std
jg
mov
mov
xchg
ljmp
push
sbb
jo
xchg
je
mov
or
js
jo
clc
xlat
xchg
xchg
enter
mov
push
test
xor
arpl
repz
punpcklwd
and
mov
mov
scas
nop
testl
sub
mov
je
push
out
in
dec
jno
xchg
mov
imul
pushf
out
rolb
fbld
xor
test
test
jg
cli
adc
mov
sbb
int3
or
sti
sbb
dec
mov
mov
stc
jns
ret
jmp
inc
sbb
cmp
movsl
jecxz
mov
sarb
xchg
popf
pop
jl
arpl
shlb
pop
and
xor
fdiv
stos
leave
push
icebp
icebp
in
dec
lea
inc
insl
lret
sbb
aam
bound
stos
jno
mov
jbe
std
mov
ja
in
mov
cmp
sbb
outsl
popa
ret
movsl
xor
sub
in
add
mov
xor
jle
icebp
mov
rclb
pop
sbb
mov
add
push
dec
cs
arpl
xchg
add
mov
jo
jmp
cmpb
xchg
xor
push
mov
xchg
pop
in
test
jno
mov
and
xor
pusha
cli
nop
loop
cwtl
outsl
dec
insb
das
subb
pop
imul
xor
imul
mov
aaa
neg
dec
insb
inc
loop
adc
sbb
cmp
pop
lods
jle
fisubs
xor
add
sbb
js
xor
adc
ret
push
jecxz
popf
aaa
add
push
and
js
cs
gs
xchg
inc
mov
orl
inc
ja
push
xchg
stc
rcrl
std
repz
jns
outsb
in
lcall
xlat
shll
rclb
adc
jmp
push
cmp
mov
push
cwtl
inc
mov
cmp
cmp
jae
lock
add
xchg
lahf
stos
pop
arpl
or
ds
dec
jl
ljmp
lcall
dec
xchg
pop
in
lcall
in
rol
xor
sarb
add
xchg
cmp
faddl
pop
jle
fs
pop
jle
in
not
jns
in
fs
mov
scas
adc
enter
mov
or
leave
ret
mov
pop
fnstenv
in
inc
jbe
cmpl
test
cwtl
cwtl
add
fwait
xchg
or
jecxz
push
pop
push
and
jno
clc
clc
add
daa
jp
xchg
sbb
mov
ficoms
xor
lret
mov
scas
xor
fmuls
pop
cmp
inc
aam
xchg
mov
push
outsl
mov
adc
in
xor
lods
test
cmp
pop
or
adc
or
ret
sub
dec
sbb
bnd
sub
pusha
push
xchg
jae
dec
mov
aad
ret
and
xchg
sbb
xchg
sub
cwtl
adc
inc
sub
jg
in
btc
cmc
inc
xchg
test
inc
imul
ljmp
push
dec
sub
fisttps
shr
xor
lcall
jnp
and
pop
jae
outsb
or
mov
fidivrs
xchg
xor
cld
pop
icebp
and
pusha
pop
popa
fdivs
cs
cmpsb
data16
pop
adc
lret
mov
enter
decb
sbb
loopne
jbe
cmpsb
mov
jecxz
cmp
ss
fistps
xor
xchg
or
adc
lret
jle
cmp
and
ficomps
movsb
add
je
movsl
push
lods
push
push
xchg
idivl
mov
in
pop
lock
inc
jge
outsl
mov
mov
pop
jae
xor
subb
cmp
movq
sub
xchg
inc
rol
lcall
cld
fwait
inc
mov
and
dec
gs
and
push
push
xor
mov
jl
scas
sti
jp
data16
leave
popf
stos
add
ja
fimuls
jno
sub
add
push
jnp
je
in
cmp
scas
mov
cmp
sub
jb
push
int3
pop
mov
jb
test
jecxz
jnp
push
cmc
fbstp
imul
add
outsl
or
mov
lea
adc
lock
dec
jbe
aam
adc
pop
out
scas
sbb
xor
aad
mov
stos
push
xlat
and
scas
mov
inc
mov
dec
ja
movsl
xlat
mov
repz
pushf
xchg
sahf
sub
inc
movsl
fiaddl
jge
or
sub
fadd
and
jne
mov
cmp
in
insb
aam
dec
cwtl
fs
add
ret
imulb
mov
testb
cmp
ret
sbb
mov
aaa
mov
ret
lret
scas
add
jb
loope
inc
and
dec
xor
xchg
aaa
dec
insl
stos
add
inc
ljmp
mov
cld
dec
inc
insb
int
xchg
adc
int3
sbb
fbstp
jge
cmpsb
sbb
fdivl
jne
jo
dec
cmp
call
and
xlat
bound
test
mov
jnp
lods
xor
xchg
mov
movsb
and
jbe
repnz
movsb
hlt
jp
fs
or
and
cmp
sbb
fcmovnb
mov
xor
ss
movsb
cmp
inc
push
xchg
and
mov
dec
test
mov
sbbb
mov
push
or
mov
and
test
mov
jecxz
or
sub
bswap
cmpsb
mov
jp
push
sahf
xor
ds
iret
adc
nop
and
sahf
mov
cmp
fs
rclb
aas
mov
fs
pop
cvtps2pi
lds
cmp
out
ss
pop
mov
add
aam
rcll
mov
jg
cmp
add
push
jb
loope
das
pop
pop
scas
mov
pop
fs
popa
subb
sbb
aam
or
add
insb
fcomi
int3
cmp
test
int3
addb
mov
mov
addl
lds
push
movl
sbb
pop
push
adc
and
sub
sbb
dec
add
scas
cmp
sbb
push
xor
inc
negl
mov
add
aad
std
add
jo
dec
pop
add
fwait
cltd
neg
popf
inc
shll
xor
iret
jl
test
loop
push
mov
fwait
mov
jle
sbb
and
mov
mov
jnp
push
aam
xor
rclb
fwait
or
out
nop
gs
js
gs
jge
adc
and
jge
push
pop
pop
mov
cmp
pusha
outsl
stos
sub
mov
or
mov
dec
xchg
xor
cmp
lcall
fs
insl
mov
push
and
pushf
mov
jmp
or
xchg
jo
cld
or
lods
jle
into
sbb
repnz
mov
mov
outsl
mov
and
aad
outsb
push
jl
js
stos
dec
pop
mov
mov
lods
shrl
fildll
dec
and
fdivp
dec
jge
in
in
cli
das
cli
sbb
pop
out
dec
ljmp
jns
aad
mov
arpl
rcrb
ret
aam
rclb
cmp
je
mov
je
mov
dec
add
or
mov
pop
jl
aam
cmpl
fs
add
mov
popf
in
fldenv
pop
in
sbb
mov
adc
lds
cmp
dec
sub
cltd
push
pop
cmp
sub
ds
loopne
mov
popf
mov
jo
jecxz
loop
int
sti
cmpsb
push
lret
fdivrs
xchg
insl
add
daa
lret
xor
mov
push
inc
int
lods
xor
sbb
cli
movnti
int
stos
xor
popf
insb
xchg
and
lods
xchg
inc
push
sbb
and
dec
je
pop
push
push
mov
test
pop
cmp
test
push
mull
movsl
dec
adc
loope
adc
inc
fcmovnbe
rcll
fidivs
ret
fs
sub
xchg
jmp
sbb
loopne
sub
les
and
les
neg
adc
pushf
sbb
out
push
xchg
dec
pop
lea
andb
in
sbb
movsl
adc
push
mov
mov
enter
ds
fxch
xor
in
dec
mov
dec
gs
rolb
jbe
je
add
nop
imul
sti
hlt
cld
nop
addr16
mov
lods
iret
rorl
fdivrs
fisubl
mov
xchg
scas
add
ror
in
add
sbb
inc
shl
sbb
es
and
lcall
std
mov
imul
mov
idivl
in
inc
jecxz
sti
ret
mov
fwait
cli
and
subl
and
ljmp
enter
or
fidivrl
ljmp
cld
mov
mov
int
inc
out
xor
aam
pop
movsb
loope
pop
pop
int3
lods
lock
aaa
or
jae
lahf
mov
pop
xchg
out
dec
dec
lret
adc
sbb
xor
dec
enterw
data16
cmpsl
mov
jg
sub
dec
adc
push
imul
sub
cmpl
and
push
add
or
jg
test
dec
movsb
cmp
inc
pop
mov
and
es
mov
jno
lods
mov
xor
aaa
loop
es
pusha
and
out
xor
mov
lods
into
out
xchg
je
sbb
ror
jbe
pop
pusha
adc
xor
orb
mov
cmc
jae
pop
mov
lds
pop
fucomi
pop
mov
jg
inc
xchg
push
adc
pop
cmp
adc
inc
shrl
cmpsl
enter
or
adc
pop
mov
and
lods
inc
in
add
mov
scas
push
adc
sahf
jae
adc
jb
int
add
and
or
add
sub
jl
push
xor
adc
movsb
adc
outsb
sti
mov
dec
shl
sub
cld
and
sub
mov
adc
mov
scas
and
and
xchg
mov
and
cs
in
push
sub
out
xadd
inc
ja
add
xchg
fnstsw
xchg
lea
mov
add
inc
ja
sub
pushf
adc
push
mov
outsl
xchg
in
push
xlat
xchg
adc
and
adc
cmp
cmp
add
shlb
notl
insl
cmp
and
lret
adc
lahf
fdiv
jl
jle
xchg
jle
cli
cltd
push
push
pop
pop
sub
js
maskmovq
mull
add
in
out
ror
adc
cmc
and
inc
lea
mov
into
mov
sahf
jns
outsl
add
adc
push
out
add
out
cmp
push
add
adc
nop
mov
mov
mov
rclb
jp
pop
jns
pop
xor
xor
inc
sub
mov
push
lret
icebp
pop
imul
fstps
xchg
push
lds
test
xchg
fwait
dec
inc
lret
arpl
cmc
mulb
or
imul
idivb
movsl
cmp
jcxz
jb
jecxz
shrb
add
insl
mov
pushf
jge
xchg
sub
shrl
movsl
inc
scas
hlt
leave
pop
mov
movsl
mov
jp
mov
mov
inc
fbld
mov
sub
outsb
les
mov
lock
aam
dec
scas
movsb
js
out
adc
mov
pop
push
sub
jg
adc
add
out
sahf
lods
call
cmp
add
inc
mov
mov
jmp
imul
ret
or
cwtl
push
mov
shll
sbb
mov
and
or
call
jg
sub
cmc
fdivrs
cwtl
mov
mov
les
popa
ffreep
es
xor
dec
cmpl
scas
sub
daa
cmpb
lret
into
pop
aad
lods
or
ss
or
xchg
addr16
mov
mov
or
adc
vprotq
jns
testl
push
mov
and
out
jne
in
xor
pop
es
pop
and
icebp
add
cmp
push
mov
enter
enter
cmp
pop
jb
loopne
test
inc
ret
jb
push
inc
daa
mov
fisttpl
pop
cli
lods
jecxz
dec
out
insl
test
pusha
outsl
or
xchg
cltd
sbb
es
inc
jns
push
add
adc
ret
jmp
mov
mov
add
and
push
sbb
pop
xchg
outsb
sti
in
jg
mov
int3
sub
pop
lret
sbb
fcmovbe
inc
addr16
out
ficoml
sub
jnp
mov
test
movsl
loop
out
dec
cmp
add
mov
fistl
jmp
arpl
test
xchg
cmp
cmp
inc
pop
pop
out
test
mov
mov
mov
psrlw
and
xchg
repz
in
inc
insb
and
ljmp
sbb
sar
xchg
iret
aad
mov
adc
daa
ljmp
mov
div
cmp
icebp
pop
inc
mov
xlat
sub
mov
jne
dec
dec
dec
repnz
jg
movsl
mov
jns
sub
jg
lret
cmp
push
push
rorb
in
sbb
les
ja
xchg
jl
sar
repnz
lcall
xchg
sub
cld
or
sbb
cmp
inc
dec
mov
xlat
xor
aad
or
cmc
addr16
leave
jae
aaa
push
sub
add
inc
or
adc
insb
mov
ljmp
movsl
sbb
pop
dec
jno
push
adc
xlat
mov
cmp
popl
xor
inc
jg
lock
cmc
out
rcll
frstor
out
mov
adc
xchg
repnz
cld
iret
aam
loop
mov
sbb
mov
xor
scas
jg
push
lret
fnsave
mov
aad
fistps
lahf
push
jecxz
inc
out
pop
adc
xor
push
in
cmp
add
mov
out
scas
out
lcall
sbb
and
inc
fs
test
dec
aad
ret
push
sub
sub
cmpsb
into
test
jge
bound
mov
jge
pop
movsb
cmp
pushf
cmp
jle
shlb
out
lret
mov
idivl
xor
sbb
adc
cmp
ss
inc
adc
enter
aaa
mov
jl
bound
and
mov
imul
xor
ss
jecxz
add
sub
scas
movsl
sub
aad
popf
pop
push
ret
imul
roll
jp
cld
xchg
fs
int
and
out
sti
test
push
out
mov
fwait
push
mov
icebp
push
xor
in
ss
jmp
xchg
inc
out
push
cld
mov
cmp
popa
xchg
aad
cmp
sbb
sbbb
xchg
inc
sbb
or
into
or
xor
adc
test
in
push
cmp
pop
lock
pop
daa
sbb
in
or
dec
or
cmp
adc
addb
shll
imul
mov
lock
and
xchg
adc
xchg
ljmp
inc
and
cmp
pop
aam
push
aas
mov
fsubrs
xor
dec
lods
aad
jbe
and
sti
sub
jno
loope
fs
addb
add
sub
dec
pushf
stos
daa
pop
mov
shr
jb
and
lds
xor
push
inc
dec
in
pop
mov
aaa
ficompl
mov
scas
hlt
div
data16
movsb
fs
inc
pop
push
stos
mov
sbb
adc
dec
shll
jno
cmpsb
pop
xchg
movsl
add
pop
out
adc
fnstcw
into
fadds
call
mov
js
or
xchg
mov
enter
movb
jle
push
inc
movsl
jne
and
scas
pop
mov
xor
pop
adc
cmp
xor
mov
pop
sti
je
fisubl
fistpll
int
inc
lds
xor
repnz
add
addb
enter
xorl
sub
outsl
inc
cmpsl
jo
lahf
mov
popa
dec
push
iret
leave
ja
lret
mov
cmp
add
sbb
sub
dec
loope
or
inc
adc
scas
fcomi
cmpsl
adc
insl
adc
aas
mov
xchg
icebp
cmc
jecxz
push
push
or
xlat
outsb
cltd
jnp
or
jmp
xorb
ret
jle
adc
btc
xchg
sbb
pop
fmull
or
and
sbb
pop
or
nop
pop
repnz
mov
es
jp
mov
adc
cmp
add
adc
adc
pusha
rol
lret
cmp
loopne
push
lods
or
int3
out
pop
jl
cmpsb
pop
mov
jmp
and
das
insl
add
es
and
in
scas
add
sub
out
push
adc
ds
adc
sarl
nop
sub
test
out
mov
push
out
inc
pop
pop
mov
sarl
adc
push
sarb
stc
pop
cmpsl
inc
ficoms
xchg
xchg
fdivrp
ss
sub
imul
out
xchg
jo
dec
insb
mov
add
and
push
repz
sbb
mov
mov
adc
popf
adc
inc
or
push
xchg
sbb
mov
cmpsb
sbb
aam
inc
movsl
insl
outsb
enter
mov
cld
ret
mov
jns
pop
inc
pop
int3
xor
adc
xor
xchg
mov
popa
pop
cmp
sub
mov
mov
sbb
leave
adc
mov
push
cwtl
push
mov
mov
shlb
les
sbb
loope
mov
cmp
sub
push
or
mov
pop
mov
lcall
cmpsl
std
jae
pop
lods
pop
mov
fcmovnb
lcall
xchg
mov
mov
and
scas
xchg
add
pop
scas
pop
sahf
nop
cmpsb
call
and
sbb
mov
cmpl
cmp
out
pop
shlb
push
sbb
pop
test
xlat
scas
xchg
movsb
push
lret
inc
out
mov
shl
imul
mov
aad
roll
lahf
sbb
popf
mov
xchg
nop
ja
jns
int3
jge
cld
fldenv
lea
das
mov
int3
push
out
rorb
adc
sti
popf
pusha
pop
or
fisubrs
in
cmc
aaa
jb
and
dec
jbe
je
lret
in
jnp
inc
bound
jne
in
test
aam
test
or
call
jp
pop
push
sub
mov
inc
ljmp
rorl
jo
pushf
lea
repnz
mov
pop
push
ljmp
dec
fcoms
dec
dec
dec
test
imul
mov
adc
sub
pop
test
xchg
data16
bound
jnp
ret
movsb
cmp
jl
arpl
roll
stc
mov
int
adc
xor
test
test
jecxz
mov
add
cwtl
xlat
and
push
cmp
pop
dec
inc
test
sbbb
pushl
jns
cmc
or
pop
loope
cmp
pushf
pop
pop
lods
cmp
xchg
mov
xchg
ret
inc
fwait
arpl
sarb
ret
cmpsl
int
inc
fs
sub
push
sbb
jle
push
sbbb
xlat
push
inc
enter
inc
adc
pusha
and
jl
ja
jns
xorl
lods
cld
rorb
mov
dec
mov
xchg
enter
sahf
add
cmp
sub
je
or
enter
jmp
cmp
mov
or
sbb
subb
fmul
fildl
out
jl
jb
jno
or
sbb
aas
jle
pop
aad
push
cs
fiadds
xorl
mov
push
cmpsb
mov
sub
fsubr
jo
cmp
and
bound
out
loop
int
inc
mov
rcll
and
cmpsl
aaa
mov
jae
inc
sarw
decb
inc
sbb
cld
int
int
jno
nop
stc
enter
ret
stos
loope
sub
fistpl
inc
andb
es
cld
sub
outsl
or
pop
adc
loop
popa
sti
and
adc
repz
pushf
mov
arpl
rcl
sub
sahf
mov
jo
testb
add
les
xor
jne
or
into
inc
sbb
repnz
cmp
sbb
out
rcrb
jne
sahf
cld
js
aas
test
and
subl
and
sarb
push
jecxz
das
jl
test
inc
filds
xchg
arpl
scas
loope
outsl
int
push
mov
movsb
bound
mov
das
std
mov
jno
push
and
mov
or
jno
xor
sarl
stc
js
je
mov
test
sub
out
inc
enter
cmp
ret
pop
inc
sbb
mov
aas
sub
add
push
popf
pop
sahf
daa
xchg
fnstcw
lret
xor
push
mov
loopne
cmpsb
lret
mov
repz
in
ljmp
repnz
sbb
inc
mov
cmp
ret
popf
in
pop
and
in
lahf
push
sarl
out
pop
in
xchg
mov
loop
mov
lock
push
fnstenv
xchg
jno
popa
inc
xchg
test
shl
dec
mov
xchg
xchg
or
sub
jecxz
pop
idiv
pop
out
push
add
fimull
add
cltd
jle
movsl
xor
cmc
and
adc
sub
sbb
iret
lahf
mov
or
aaa
enter
pop
ss
test
dec
mov
jbe
std
dec
cmp
rol
or
lret
inc
push
clc
push
mov
xchg
enter
or
fwait
rcll
pushf
push
es
addr16
je
dec
test
mov
push
and
sub
rcr
ret
jp
xor
jmp
adc
in
and
sti
cmp
fdiv
cmp
dec
or
aam
cmpsb
aam
cmc
adc
push
add
add
in
sbb
lret
mov
xchg
stos
fdivl
in
jle
mov
adc
outsl
call
dec
xchg
and
lcall
shr
je
lret
sub
dec
shll
iret
imul
jo
out
sbb
sbb
mov
test
shl
test
add
mov
outsl
xchg
or
mov
dec
mov
inc
or
ret
or
xchg
in
out
dec
mov
push
adc
in
and
xchg
push
mov
and
jge
loope
js
fdivrp
pop
in
in
mov
movsb
jns
dec
dec
jl
lahf
es
roll
push
xor
push
adc
lods
movsl
int3
in
leave
lea
jmp
insl
or
mov
dec
data16
add
daa
and
js
mov
je
psubw
sub
dec
adc
pop
into
pop
jp
cld
in
cmp
xchg
nop
cs
push
cmp
adc
aas
movsl
icebp
fnstcw
dec
add
rcll
xchg
sbb
mov
dec
repnz
mov
inc
pop
mov
sbb
imul
push
cmpsb
jecxz
sahf
lds
mov
shlb
adc
scas
test
push
jo
sti
jae
xlat
out
jno
mov
test
and
test
adc
xchg
push
inc
pusha
dec
xchg
dec
adc
ljmp
scas
dec
lret
mov
cmc
call
pop
popf
jmp
xchg
or
lcall
out
ds
test
push
decb
xchg
inc
push
push
jnp
mov
lods
pop
push
out
jae
addl
adc
popf
loop
push
xchg
sti
pushf
mov
push
sbb
lahf
fwait
mov
add
xchg
fsubrs
mov
xlat
rcr
cmpsb
aam
xchg
ss
enter
scas
pusha
outsl
sub
xchg
fisubs
sub
dec
xchg
xchg
ljmp
push
and
shl
in
xor
and
sbb
mov
sub
pop
addl
divl
xor
imull
add
add
xor
jo
fld
push
push
sub
cmp
adc
loope
das
xor
dec
pop
int3
arpl
push
jns
rcrl
xor
cld
push
ss
or
icebp
es
adcl
add
in
add
jns
inc
out
sub
notb
mov
and
mov
clc
mov
rcrl
push
mov
gs
cs
insl
nop
jo
mov
add
out
scas
out
sub
insl
test
and
sbb
sub
test
mov
subl
push
mov
cmp
cmp
sbb
xchg
cmc
and
cltd
and
ffree
lods
mov
jo
pop
cmpsb
pop
sub
mov
mov
in
and
jns
dec
push
dec
pop
dec
jecxz
int3
xor
int3
mov
cmp
inc
sub
dec
in
popf
cmp
gs
aas
mov
in
dec
lret
xchg
mov
ljmp
and
cmpsl
sub
push
test
mov
inc
or
or
test
add
rcrb
pop
cli
sti
enter
mov
jno
or
icebp
and
repnz
lock
aaa
loope
pop
test
div
xchg
lock
and
es
jg
mov
outsl
and
stc
into
mov
or
inc
pop
stos
arpl
push
or
pop
ds
sub
add
mov
fistpl
aam
call
sbb
cmp
jle
ljmp
popa
fidivrs
sbb
ss
xchg
and
mov
pop
cmp
xor
inc
movsb
jge
or
mov
out
push
cs
lea
sub
jmp
or
inc
imul
pop
repnz
mov
sub
inc
pop
inc
add
loop
outsl
cltd
jno
out
mov
aam
jno
and
out
or
or
mov
xchg
enter
andb
pop
mov
inc
jne
ljmp
xchg
daa
jge
orb
push
add
cmp
fidivrs
xchg
mov
mov
cwtl
movsb
nop
lcall
sbb
lock
loop
orl
fidivrl
std
shll
imul
pop
xchg
leave
movsb
popl
mull
add
fisttpll
ss
pop
js
cld
fists
mov
or
jns
mov
lods
inc
rcrb
ficoms
cmc
fisubl
or
mov
cmp
push
test
fldenvs
rorl
sub
sti
add
cmp
shll
sbb
add
iret
lea
loope
subb
inc
js
push
in
inc
fwait
rorb
sbb
mov
xlat
mov
inc
adcb
mov
dec
into
enter
loop
cmp
pop
push
pop
test
in
ftst
and
vmwrite
xor
jp,pn
adcl
movl
mov
ljmp
push
push
mov
aam
push
or
push
aam
mov
xchg
adc
jb
fstpt
push
jnp
jl
add
push
gs
clc
ja
jo
addr16
mov
inc
insb
inc
icebp
and
aas
fwait
out
fsts
data16
lcall
adc
sbb
fcmovb
dec
xchg
xlat
arpl
into
push
dec
adc
dec
fmull
cmp
xchg
pop
out
lods
cmp
xor
mov
ljmp
cmp
and
out
jg
push
mul
outsb
push
ret
fs
fs
jmp
jecxz
pushl
or
scas
inc
ljmp
cld
xchg
int3
cmp
or
xchg
and
cmp
push
fsub
fimull
dec
sbb
test
xchg
cmp
push
mov
mov
cs
lret
mov
ficomps
pushf
sbb
clc
sbb
mov
pushf
or
mov
ds
mov
mov
inc
mov
push
nop
pop
mov
setae
in
push
mov
jmp
sahf
gs
xor
jae
pushf
add
xchg
dec
int3
inc
and
or
jg
xchg
lock
popa
mov
sub
jae
fs
and
xchg
lds
jne
or
xchg
clc
mov
out
into
mov
cltd
cmp
inc
pop
mov
nop
cmp
inc
push
pop
in
pop
mov
pop
roll
mov
popa
dec
ja
jns
or
movsl
loope
mov
lcall
add
lcall
imul
jmp
push
push
pop
fnstsw
leave
mov
or
cmp
out
xor
sub
mov
outsb
push
dec
loope
jbe
add
jg
shl
mov
lds
add
inc
sti
pop
mov
cmp
mov
movsb
mov
add
sub
sbb
dec
in
push
dec
call
push
sub
fwait
xor
cmova
insl
clc
mov
xchg
mov
out
push
je
dec
into
mov
and
pop
adc
ret
aad
lret
sti
fisubrs
lret
cmp
ja
xor
and
mov
or
xchg
pop
jae
arpl
cmp
scas
hlt
sub
in
jno
out
mov
push
mov
lret
dec
dec
xor
icebp
xchg
or
add
aad
pop
enter
test
stc
test
pop
es
and
xchg
std
loop
out
jmp
ja
fstl
int
cmpb
inc
daa
jl
dec
cli
xorb
lods
addr16
jmp
sub
in
sbb
out
xor
icebp
and
jp
std
and
or
cmp
cmpsl
lcall
in
in
cli
dec
fdecstp
jbe
push
fs
push
rcll
xchg
mov
xchg
int
adcl
or
cltd
aas
aas
pop
in
adc
mov
lods
outsb
sahf
jle
xor
js
sarl
pop
cs
adc
push
jbe
mov
into
pop
imul
imul
mov
xchg
lds
push
sub
fsubr
jl
test
sahf
arpl
xchg
aam
push
and
rcrl
inc
out
into
aaa
jle
cmp
lea
jno
and
scas
add
aam
fwait
movsb
rclb
scas
icebp
cmpsb
sbb
fidivrl
sti
inc
pop
out
mov
mov
or
mov
pusha
mov
push
mov
cmp
mov
push
mov
jnp
pop
push
or
shl
and
incl
or
mov
int3
mov
orb
sub
adc
jns
inc
arpl
lret
push
sub
enter
push
ss
sbb
pop
and
lcall
jmp
mov
adc
sub
jb
xor
pop
movsb
pop
push
adc
das
das
jns
movsl
mov
mov
dec
je
in
cmp
pusha
jp
ja
call
iret
xor
jb
jne
adc
adc
divl
push
xchg
cli
pusha
popa
xor
xchg
fildll
push
sti
jns
add
cld
dec
pop
or
mov
mov
in
iret
mov
xchg
dec
xor
mov
add
clc
out
mov
adc
mov
aad
enter
xlat
leave
lret
stos
xchg
cmpsl
jmp
movsb
cmp
inc
call
pop
xchg
das
xchg
data16
cmc
jg
xorl
jl
adc
mov
insl
push
enter
push
or
inc
mov
inc
enter
sub
in
push
insb
jg
or
push
jp,pt
sub
loop
mov
dec
loope
cwtl
mov
jae
not
call
push
mulb
xorl
add
fidivrl
dec
xchg
sub
fimull
add
lea
lret
xor
aam
lsl
in
fcoms
lods
xchg
adc
je
scas
xor
pop
jle
rol
and
lods
lret
pop
or
in
jp
aas
sbb
sub
mov
sub
cmp
aas
push
sbb
sub
inc
lret
jp
mov
enter
cmp
adc
subl
xor
push
aam
mov
jns
push
ja
outsl
xchg
and
andb
and
jo
and
sahf
jle
scas
fsts
in
mov
push
mov
add
pop
cmpb
adc
inc
aam
mov
shrb
aaa
lock
push
ret
call
xor
in
mov
jl
mov
nop
or
test
cmp
pop
sbb
ret
repnz
les
jnp
gs
dec
test
std
push
xchg
clc
xlat
pop
xchg
and
fidivs
sub
js
mov
int
lods
mov
pop
clc
xchg
adc
test
fwait
xlat
pop
mov
je
dec
xchg
mov
dec
aaa
sarb
cld
lds
mov
mov
icebp
fwait
in
jmp
push
adc
jl
xchg
inc
adc
cmp
lds
cli
mov
loop
mov
insl
sub
mov
mov
loopne
or
add
rcll
ror
and
lock
stos
shlb
cmpsb
mov
xor
in
cltd
cmp
adc
and
or
cmpsb
adc
pop
cmc
loopne
xchg
adc
punpckhdq
pop
dec
adc
in
shl
outsb
test
shrl
dec
insb
mov
pop
sbb
aas
xchg
ficoml
sbb
pop
cmp
gs
dec
sbb
mov
and
add
or
addr16
or
cmp
pop
aad
xchg
dec
xchg
hlt
xor
lds
sbb
lahf
dec
cmp
pop
notl
xchg
push
in
mov
xchg
inc
xor
aam
push
cs
push
sbb
bnd
rcl
and
add
jo
adc
push
lds
les
lcall
xchg
push
popa
dec
add
data16
and
fldenv
jb
jmp
adc
cmp
or
test
add
xchg
mov
ret
fisttpll
xor
pop
pop
mov
clc
fcomi
aaa
push
fsubs
loope
mov
lea
fwait
in
jp
mov
jge
popa
cmp
aas
cmc
stc
jno
les
test
sbb
pop
das
add
int3
icebp
test
pusha
sub
mov
lds
loope
das
in
jae
imul
lcall
imul
xchg
mov
pop
hlt
fiadds
mov
repnz
fldl2t
sbb
mov
jle
xchg
lods
in
cmpsl
xchg
push
mov
xchg
mov
nop
push
push
mov
push
cmpl
jbe
cmp
push
pop
nop
cltd
subb
and
jne
and
xchg
movsb
mov
inc
fwait
cld
push
negl
sbb
or
mov
into
rolb
fwait
sbb
out
mov
mov
arpl
mov
daa
and
shrl
xchg
add
das
pop
cld
pop
cltd
ror
or
jecxz
pop
shlb
dec
test
push
movsb
xor
test
iret
lea
xchg
hlt
push
xchg
sbb
cltd
js
lods
hlt
add
jae
mov
pop
inc
xchg
in
repz
movsl
dec
jecxz
fisubrs
imul
fbld
mov
imul
mov
std
pop
orl
mov
lret
jne
ds
fcomps
inc
pushf
repnz
sbb
sub
jecxz
cwtl
jecxz
pushf
hlt
out
cmp
mov
stc
mov
xchg
int
daa
push
fdivrl
dec
or
inc
xchg
xchg
addr16
pop
push
jl
push
outsb
mov
arpl
scas
cltd
jb
xor
xchg
int3
xor
add
jae
dec
mov
push
ret
ffree
loopne
loopne
out
mov
lcall
pop
ss
out
dec
inc
pop
pop
jecxz
js
rorb
in
and
ja
lods
inc
mov
xor
cmp
xchg
in
push
ja
xor
pop
push
sbb
mov
cmp
push
clc
loope
xchg
fcmovnu
pop
adc
or
stos
xor
repnz
add
jbe
jbe
enter
sysexit
enter
andl
lods
shl
jne
xor
adc
sbb
xlat
fld
data16
iret
out
repz
cltd
add
fisubl
mov
xchg
pop
idivb
in
std
loop
fucomip
push
pusha
mov
mov
or
push
jb
insb
or
push
subl
jmp
movsl
pop
inc
xchg
or
sar
jecxz
scas
jns
sub
inc
test
add
cmpl
into
sarl
out
aas
or
adc
cmp
sbb
push
cmpsl
jp
fisubrs
cli
jp
lods
pop
and
xlat
out
xor
lods
data16
imul
jg
sbb
push
fwait
popf
outsb
and
fiadds
ds
cmp
scas
cmp
adcl
sti
gs
andl
mov
cli
push
loope
fistps
aad
call
push
push
js
out
adc
sbb
push
xchg
dec
sti
jns
jmp
mov
and
or
mov
repnz
sbb
xchg
jp
mov
bound
aaa
sbb
mov
test
jmp
push
outsb
aam
mov
push
mov
sub
xchg
dec
xor
mov
and
or
inc
movsl
cltd
dec
jbe
cmpl
sub
mov
call
dec
fprem1
call
mov
daa
adcl
int
out
or
int
xor
and
test
pop
notl
js
cld
lds
push
push
ljmpw
jecxz
je
in
test
jl
pop
lahf
ja
mov
je
add
loope
mov
dec
mov
data16
inc
daa
or
mov
sbb
cli
cld
jg
mov
out
ja
cs
mov
mov
mov
ret
int3
cmpsl
popa
stc
jns
icebp
jo
sahf
fsubs
xor
add
sub
std
cmp
loope
ret
cmp
pop
mov
popf
clc
xor
call
mov
gs
and
outsl
popa
and
mov
and
insl
jmp
mov
or
and
dec
pop
repnz
xadd
dec
icebp
mov
pop
push
cwtl
cmpsl
add
movsl
xor
test
mov
inc
imul
sahf
pop
jle
jo
xchg
enter
xchg
out
sub
shrl
jmp
xor
adc
add
mov
fisubs
jae
popf
imulb
mov
mov
popf
rclb
add
push
push
or
dec
std
loopne
repnz
push
mov
inc
addl
sbb
ljmp
sbb
push
cld
stos
jp
jecxz
icebp
out
roll
add
arpl
test
pop
jg
imul
insb
scas
push
jg
les
test
xchg
jnp
shll
push
pop
roll
and
add
jmp
adc
sti
stos
jecxz
add
imulb
add
mov
out
sbb
cmp
jbe
out
sbb
adc
pop
inc
out
dec
xor
add
rol
mov
xchg
and
aam
aaa
rclb
mov
lock
scas
pop
or
cmp
pop
imul
outsb
movsb
inc
mov
cmpsb
cli
stc
jmp
outsl
outsb
push
rorl
ret
enter
push
pop
cltd
in
ret
ds
test
data16
mov
xlat
data16
arpl
push
sub
in
scas
jns
cmpsl
pop
mov
sti
xchg
hlt
push
push
jl
addl
jmp
call
jmp
xchg
xchg
or
daa
ljmp
scas
rcrl
shl
adc
leave
es
or
or
dec
pushf
in
cmpsl
int
loopne
and
pop
sbb
xchg
idivb
xor
subl
mov
lock
pushf
les
push
ds
cpuid
mov
loopne
inc
jle
push
or
sbbl
movsb
mov
sub
lret
ja
fdivp
pop
cli
ja
test
iret
mov
xchg
ss
sbb
aas
pop
fwait
jbe
sarl
push
jecxz
pop
or
jo
scas
xacquire
adc
mov
jo
jne
sbb
add
rorb
shlb
rorl
xchg
add
mov
and
sbb
mov
rcll
fidivrl
popa
out
xchg
mov
inc
push
push
xchg
pusha
cmp
push
mov
and
mov
inc
repz
and
add
aaa
fimull
pop
jb
gs
dec
inc
adc
popf
xchg
add
sub
sub
mov
fistps
pop
mov
mov
pop
jno
dec
lret
jmp
lahf
mov
and
push
nop
sub
lret
sub
mov
popa
xchg
push
push
cmp
and
sbb
add
adc
pop
cld
imul
cli
mov
subb
xlat
mov
out
mov
jne
dec
sbb
pop
mov
cmp
pop
sub
xor
mov
mov
lret
add
repz
ljmp
rcll
popa
addr16
xchg
cmp
jne
stc
xchg
test
mov
ss
pop
addr16
shrl
scas
inc
cld
decb
lods
mov
mov
dec
dec
add
sub
jge
arpl
jns
jnp
pop
xchg
mov
repnz
pop
push
dec
pop
or
sub
xor
xchg
ret
or
ja
repnz
fbld
fnclex
aas
outsl
lahf
pop
fwait
add
pop
adc
lods
mov
push
jp
lock
dec
jne
pop
jg
repnz
out
ficomps
aas
sbb
cmp
mov
mov
out
hlt
add
mov
sub
es
testl
enter
repnz
mov
sbb
das
loope
sarb
sbb
dec
clc
inc
jnp
shlb
inc
fwait
mov
and
mov
and
xor
call
shl
dec
int3
aad
dec
enter
sbb
xchg
pop
sarl
pop
insb
mov
ds
cmp
xchg
test
shrl
dec
out
lcall
fidivrl
lret
jge
jmp
add
jge
push
pop
pop
lcall
add
enter
stos
add
dec
and
sub
adc
mov
int3
or
call
mov
or
cwtl
jne
sahf
nop
cmp
dec
psrad
out
jns
fsubrl
cmp
aas
cmpsl
pop
inc
mov
in
mov
es
lods
inc
mov
scas
lret
cmp
aaa
clc
add
bound
push
xor
push
mulb
loopne
dec
pop
xchg
mov
cmp
mov
fisubrl
inc
out
lds
adc
jp
mov
jnp
mov
aam
stos
xchg
movsl
jns
js
sbb
cmp
stos
mov
sti
dec
roll
sbb
int3
sbb
xchg
xchg
push
and
pusha
sub
dec
js
sbb
insb
jne
dec
xchg
sbb
jp
xchg
jbe
sub
out
call
mov
inc
push
pop
inc
dec
imulb
sub
js
adc
cmp
les
sub
je
jnp
lods
cmp
iret
iret
or
daa
fcmovb
xor
fs
mov
loope
xchg
pop
push
and
fdivl
ja
or
or
add
insb
push
repnz
inc
cltd
pop
stc
adc
xchg
jmp
outsb
pop
insl
adc
aad
jle
sub
add
cltd
ret
pop
add
and
pushl
inc
add
loope
xorl
repnz
jp
sub
mov
jmp
ret
mov
js
fcoms
out
ror
cld
xchg
arpl
xor
pop
and
into
out
cmpsb
pop
sbb
pushf
divl
pop
or
jmp
xchg
cltd
fwait
add
outsb
fisttpll
daa
aam
rcll
mov
jp
xchg
pop
popa
mov
insb
jb
out
enter
ds
pop
fwait
add
roll
int3
mov
movsl
into
sub
mov
push
jno
sbb
sbb
xor
aad
adc
push
inc
xchg
int
lea
lahf
xor
dec
jg
je
sbbl
lods
ss
roll
push
fisubrl
lock
xlat
or
sahf
cmp
mov
sub
add
ret
push
sbb
call
dec
ja
push
mov
mov
adc
push
adc
das
xchg
xchg
insb
pop
sub
mov
test
cmp
mov
pushf
xlat
mov
cmp
lea
xchg
jle
mov
jnp
insb
hlt
dec
imul
mov
jmp
stc
jmp
or
lahf
mov
rcr
jle
movsl
popa
out
mov
mov
inc
icebp
rclb
rolb
push
pop
cmp
mul
fimuls
dec
jp
fisubrl
jge
mov
jae
loopne
pop
test
divl
mov
jne
fisubl
in
sti
xchg
add
lods
add
insb
cmpsl
mov
jmp
jns
jmp
xlat
and
sbb
adc
xor
cmpsl
jecxz
ret
notb
ficomps
in
add
adc
dec
shlb
cli
mov
or
jno
fmulp
cs
lods
cmp
dec
mov
sub
fdivs
idivl
bnd
mov
jl
dec
push
sub
jg
sub
dec
inc
pusha
xchg
pop
lret
pop
pop
xchg
mov
or
shll
sub
dec
xor
pop
lods
or
fidivrs
out
ret
inc
outsb
aad
lds
ja
cmpb
jmp
iret
sub
cmc
iret
jne
popf
cmpsb
xor
add
fs
cmpsl
sbb
jmp
mov
fwait
xlat
insb
fidivrs
sbb
cmp
pxor
xlat
dec
jo
fsub
add
fimuls
or
adc
fsts
pop
xchg
mov
mov
dec
into
pop
jne
mov
or
dec
mov
ja
pop
scas
xchg
leave
adc
in
das
mov
mov
sbb
sahf
test
xor
adc
jnp
adc
sub
xor
mov
and
and
adc
push
pop
mov
loope
ret
xor
dec
jle
jmp
cmp
adc
mov
pop
jmp
sarl
adc
and
jge
stos
in
add
pusha
push
push
popa
in
test
in
dec
or
pop
dec
or
and
sbb
or
arpl
ja
es
pop
mov
jl
jg
dec
into
cmpsb
loopne
decb
shll
xor
pop
nop
mov
xor
pop
iret
lret
pop
xchg
lds
hlt
mov
add
mov
sub
hlt
sahf
pushf
std
push
push
push
or
fisubl
imul
and
mov
adc
std
cmp
iret
jnp
add
imul
arpl
inc
cmp
adc
scas
mov
cmp
cwtl
pop
nop
jns
adc
icebp
push
test
mov
js
in
ljmp
dec
sub
mov
jo
jg
scas
sti
xchg
outsl
cmpsb
push
inc
or
fdivp
and
xchg
mov
push
mov
int3
add
dec
es
push
cmpsb
divl
xchg
insl
je
ret
cmpsb
pop
je
ss
inc
aaa
mov
xor
cs
jnp
mov
mov
pop
pop
add
mov
mov
mov
add
xor
add
pop
aam
and
add
and
sbb
cmp
cld
int
mov
ja
sub
or
adc
movsl
clc
cmp
and
sbb
mov
pusha
pop
sbb
imul
test
push
push
or
pusha
test
xchg
shl
fnsave
inc
mov
pushf
test
pusha
divb
fisttpll
xlat
xchg
jns
stos
pop
movsl
testl
movsb
jecxz
jo
xchg
and
push
ficoms
inc
xor
ret
jmp
mov
sbb
or
sbb
pop
mov
in
xchg
or
adc
push
mov
or
shrl
aas
dec
mov
xchg
shrb
es
shlb
call
dec
pop
xchg
imul
xor
enter
ja
cmp
push
push
sbb
data16
or
aaa
add
xor
push
and
lods
mov
jmp
inc
dec
pop
xor
fnstcw
lret
leave
jle
ficompl
mov
sbb
xor
mov
add
popf
push
ljmp
je
iret
sbb
and
jae
adc
aas
fidivrs
nop
push
imul
xchg
imul
mov
cmp
jnp
imul
adc
dec
scas
js
push
cmpsl
xlat
dec
mov
add
dec
mov
sahf
inc
aas
es
arpl
dec
imul
enter
imul
jns
inc
das
out
subb
shll
shl
lods
and
stos
pop
fnstcw
pop
xor
arpl
jo
jb
stc
aas
lahf
adc
out
cmp
sub
or
fisttps
cmp
lea
lods
sar
xorl
repnz
add
loope
lahf
sub
and
inc
dec
mov
cmove
mov
mov
dec
cmp
jnp
and
cld
data16
fsubrl
lahf
mov
divl
es
out
mov
add
adc
fsubl
stos
mov
jbe
mov
pushf
xchg
fwait
jg
push
inc
ja
cs
xchg
xor
xchg
mov
push
aad
leave
push
andl
pop
hlt
loopne
xchg
out
inc
cmp
ret
jb
out
pop
ffreep
mov
test
sub
sbb
leave
xchg
jb
out
ret
mov
bnd
cmc
div
inc
push
inc
jg
imul
fsubs
cmp
imul
or
jl
sahf
adc
jne
xchg
cmc
dec
mov
mov
cmc
repnz
push
fdivrl
incb
sbb
fisttpll
or
shlb
and
mov
outsb
loopne
scas
fisttpll
sub
pop
sub
stc
test
lret
test
mov
fcoms
add
sub
sub
and
inc
jo
push
pop
je
int3
fildll
xchg
and
aam
lahf
jae
add
mov
into
cmpsb
dec
pop
xor
lahf
sub
iret
mov
hlt
jo
jnp
cmpsl
insb
lds
in
jbe
mov
scas
cmp
iret
out
mov
xchg
dec
frstor
lock
mov
nop
inc
and
scas
sub
ss
mov
mov
mov
push
mov
aad
mov
ljmp
push
mov
addr16
repz
xor
push
pop
adc
cs
pop
insb
leave
inc
ljmp
pusha
mov
mov
in
mov
aad
mov
cmovg
add
test
fldenv
lods
adc
and
or
push
les
lods
mov
cmp
cmc
das
push
or
pop
push
sbb
loop
neg
int
mov
out
sbb
xor
xchg
push
cmp
sti
nop
mov
add
test
sbb
shrb
out
xchg
out
fwait
jne
and
push
mov
push
sub
cmp
jae
cmp
xchg
mov
mov
mov
mov
mov
data16
and
push
mov
push
out
insl
inc
addl
xchg
sub
mov
push
in
sbb
ljmp
jns
lahf
jnp
in
fcomps
ljmp
lods
jne
sub
cwtl
fbld
in
clc
fsubs
mov
mov
outsb
cli
mov
jno
xchg
xchg
rorb
insb
mov
lahf
nop
arpl
sbb
and
adc
sbb
and
pop
mov
popf
imull
movsl
push
inc
add
les
and
xchg
pcmpeqd
inc
js
aad
inc
mov
aas
outsl
cld
fistl
pop
sbb
mov
rorl
xchg
fmulp
dec
mov
or
push
into
jecxz
and
and
sub
fldcw
mov
pusha
add
cmpsb
dec
je
test
dec
mov
mov
mov
lock
js
and
xor
mov
jp
outsl
pop
dec
or
lods
mov
in
jl
pop
ret
das
movmskps
or
push
pop
mov
insl
pop
sub
adc
jp
leave
subps
add
push
out
lea
pushf
lahf
xor
mov
push
leave
and
mov
push
adc
mov
arpl
push
jmp
sbb
mov
mov
das
pop
pop
jnp
shlb
sub
lret
ret
or
xchg
mov
sub
or
lret
dec
and
or
pop
jecxz
mov
rcrb
loope
cmp
pop
sbb
xchg
add
and
jne
or
xchg
fistl
jns
cmpsb
push
sbb
rcl
jo
mov
ljmp
imul
insl
fimull
push
dec
and
pop
mov
scas
mov
pop
repz
ss
adc
dec
mov
cli
or
cmpsb
jno
inc
and
push
sub
lds
xchg
insb
out
mov
shr
pop
iret
les
push
fmull
xor
ficoml
out
lea
and
cmpsl
xor
fildl
pop
xchg
jmp
push
jb
shll
push
ja
sti
rorb
lcall
and
ret
cmp
jle
dec
xor
test
fdiv
lcall
add
aad
ret
push
inc
push
jl
pop
mov
inc
jae
and
xor
and
or
sbb
mov
xchg
sahf
xchg
push
cmc
imul
loopne
setno
mov
scas
mov
out
in
and
test
in
dec
xchg
mov
xor
push
pop
adc
aaa
jmp
or
xlat
inc
mov
in
cs
mov
pushf
sbb
xchg
fxch
insl
pop
movsb
shrb
cmp
sahf
rorb
dec
cmpsb
mov
fdivs
fsubrl
cmp
or
filds
sbb
mov
movsb
sub
fdivl
and
mov
notl
sub
inc
adc
movb
push
test
jg
jecxz
insl
dec
add
sbb
jp
scas
inc
add
shl
rclb
es
lcall
icebp
sbb
ds
lret
dec
loope
fmull
mov
jle
repnz
test
cld
xchg
push
push
sub
icebp
add
lock
not
mov
and
jge
add
ficompl
rcrl
jnp
xchg
xor
sub
icebp
mov
push
pcmpgtb
push
dec
movhps
xchg
cmpps
mov
inc
leave
cmp
and
xor
xchg
dec
mov
xchg
into
sti
rorl
xchg
test
in
jns
fucomip
cmc
cs
cmp
or
xor
or
push
scas
call
int
movsb
push
je
mov
pop
pop
std
inc
fstl
xlat
xchg
push
outsb
in
pop
insb
add
fcmovne
cmp
jb
inc
xchg
and
cltd
add
and
or
jle
sub
mov
nop
incb
fcomps
cmpsb
sub
mov
rolb
push
xchg
sub
inc
and
push
icebp
push
add
xor
pusha
pop
std
loopne
and
jle
in
ljmp
sub
sahf
stc
dec
lods
push
or
pop
mov
outsb
sbb
jle
inc
test
popl
lock
hlt
mov
das
and
pop
leave
jo
jb
lods
add
mov
popa
inc
dec
inc
add
popf
out
jl
mov
cmp
pusha
xor
jae
adc
sub
or
and
out
adc
jp
pop
add
mov
aaa
lahf
les
mov
arpl
jbe
xchg
dec
mov
xchg
pop
stos
cmp
fldenv
cmpsb
xor
bound
cmp
ljmp
mov
hlt
pushf
or
mov
aaa
leave
pop
mov
jmp
fucom
inc
cmp
mov
push
insl
imul
adc
das
jne
gs
cmp
xchg
mov
repnz
xchg
mov
push
icebp
mov
mov
adc
inc
stc
or
stc
push
iret
xchg
jbe
cmp
cmpsl
psllq
sti
push
cltd
jge
scas
inc
clc
insl
cmp
jbe
cmp
inc
jle
mov
push
mov
faddp
lcall
inc
and
mov
aaa
clc
scas
mov
ret
in
mov
mov
test
mov
scas
enter
pop
sarb
and
cmp
lret
jb
shrb
stc
lret
cld
out
inc
cmp
out
xchg
mov
js
xchg
arpl
adc
std
lcall
gs
call
daa
add
pop
dec
negl
shrb
xor
xor
lea
or
paddw
shl
inc
push
mov
lret
mov
mov
dec
adc
cli
leave
lds
adc
div
lods
xor
xchg
test
out
dec
push
xor
sbb
jne
scas
pop
jg
scas
mov
push
sbb
fsubl
test
sti
call
int
scas
js
add
cwtl
or
cmp
icebp
jnp
push
adc
shrl
push
aas
sbb
pop
popa
flds
insb
jb
clc
inc
push
inc
test
lcall
out
mov
mov
push
sbb
mov
out
and
fcomip
loopne
testb
loopne
xor
mov
push
enter
xor
xor
dec
loop
adc
dec
popa
mov
cmp
cmc
dec
mov
dec
mov
mov
icebp
fidivs
shll
xchg
orl
sbb
mov
mov
pop
or
jp
xor
push
push
loop
stos
mov
mov
fs
mov
out
dec
cmp
mov
scas
shll
fisubs
or
add
cmp
cltd
push
repz
std
inc
stos
push
pushw
push
les
cwtl
xor
xor
mov
jo
add
sub
mov
pop
mov
shl
cmp
sahf
shlb
arpl
xchg
jno
jmp
pop
jnp
xchg
adc
xchg
fld
sub
mov
sbb
xchg
es
mov
sbb
push
pop
xor
das
inc
stc
decl
loope
jnp
hlt
push
inc
inc
aam
pop
lods
xchg
test
fldcw
sub
filds
call
insl
sti
xor
pop
fwait
cmp
adc
shlb
movsl
push
xlat
inc
jge,pn
loope
push
xchg
je
push
mov
sarb
dec
adc
dec
mov
insb
pop
ficompl
decl
stc
ja
xchg
fcomps
mov
fisttpll
or
cmpsb
sbb
aad
imul
inc
lret
adc
hlt
mov
xchg
in
jmp
aam
inc
cltd
jge
mov
fcmovu
fldcw
clc
fmulp
pop
inc
je
loop
push
ljmp
aaa
push
cltd
sbb
mov
ss
into
mov
xor
mov
insb
jge
cmc
xchg
sub
xchg
test
insl
mov
shll
xchg
mov
dec
aaa
add
or
jle
xor
add
lcall
push
in
js
push
sbb
mov
cs
shll
and
inc
stos
iret
ret
outsl
repnz
inc
das
xchg
sbb
popa
std
xlat
add
xor
cmpl
lock
leave
mov
clc
repz
cmp
pop
xchg
inc
iret
mov
inc
mov
fcmovnb
sub
mov
add
xor
dec
scas
mov
cmpsl
out
inc
call
and
inc
push
ret
fmul
xlat
xchg
movswl
mov
pop
jb
adc
stc
xchg
add
jnp
mov
es
or
and
sar
jno
in
aad
fsubrs
daa
imul
inc
shll
sub
pop
int3
mov
jnp
mov
cmpb
add
cmp
pop
pop
fmul
cmpsl
mov
in
rcl
inc
aam
gs
rol
push
adc
imul
arpl
or
mov
rcrb
sbb
cmpsb
repz
test
push
ret
in
xchg
bound
jle
or
cld
cli
add
xchg
mov
ret
mov
ds
jns
pop
cmpsl
jbe
insb
pop
mov
icebp
call
jmp
out
push
das
pop
popa
or
and
sub
jnp
xor
lahf
das
sbb
subl
mov
inc
popfw
std
adc
ljmp
insl
nop
dec
cmp
cmpsl
mov
mov
cwtl
rolb
xor
fisubrl
loopne
enter
test
stos
adc
jecxz
out
xorb
inc
mov
push
pop
jp
xchg
sets
in
mov
dec
jmp
negb
add
lods
loope
xchg
dec
cli
lret
sbb
fldcw
sub
ret
jl
jo
stc
movb
pop
clc
aam
iret
sti
fldl
lock
push
mov
aad
xor
shlb
jae
push
jnp
inc
and
iret
add
addr16
stos
inc
or
aas
cmp
movsb
mov
xchg
addr16
icebp
aaa
fstpl
popa
xchg
cmp
ds
out
stc
pop
inc
jmp
push
notl
outsb
and
and
xor
bound
inc
dec
and
adc
mov
js
xor
out
stos
jo
fld
test
push
cli
and
sbb
lret
jne
jmp
cld
and
imul
push
and
ds
xor
and
pop
inc
cwtl
mov
or
ljmp
pop
jae
ljmp
ds
sbb
shll
fwait
icebp
xchg
aad
scas
ljmp
push
lahf
orb
divl
or
xchg
push
xchg
cwtl
sbb
pop
add
inc
test
pop
mov
xor
ja
movsl
nop
fnstenv
rcl
js
push
pop
imul
add
into
bswap
std
in
xchg
jmp
push
arpl
repz
hlt
xor
lahf
jp
mov
lds
ljmp
nop
inc
mov
add
cmp
jge
xor
aas
pop
lea
leave
mov
xchg
ljmp
adc
in
in
push
xchg
loopne
cmp
out
and
mov
pop
dec
sub
dec
mov
into
sub
sub
cmp
dec
daa
ja
xchg
ja
stos
mov
push
mov
xor
mov
mov
sti
jmp
mov
fistpll
sub
push
xor
push
mov
and
dec
sarl
out
add
pop
rclb
and
mov
push
inc
movsl
jae
sbb
scas
bound
sti
arpl
lcall
sub
or
cmp
loop
popl
mov
aam
push
sub
loopne
adc
das
mov
inc
sub
mov
loope
stc
dec
push
data16
sti
in
fldt
jg
jecxz
push
pop
xchg
fwait
dec
cltd
leave
out
addb
dec
mov
daa
enter
ljmp
out
testl
push
lret
push
movsl
xor
test
js
pop
cmc
fsubrp
enter
pop
les
je
inc
sub
rcr
or
sub
sub
xor
cmpsb
push
outsb
out
xor
std
ret
stos
pop
clc
movsb
pcmpgtb
movl
xchg
andl
push
add
mov
sbb
sub
fidivrl
insl
and
gs
out
in
mov
enter
jp
or
push
push
adc
mov
dec
mov
fdiv
bound
or
sahf
scas
xchg
jns
hlt
iret
popa
out
bound
jns
movsl
add
and
pop
popf
jne
int
cmp
or
loop
in
pop
sbb
stos
xor
mov
or
push
scas
mov
icebp
pop
push
jecxz,pn
sub
shll
xchg
sbb
enter
push
pop
pushf
movsl
dec
popa
btr
mov
ss
iret
dec
shlb
fdivrs
cli
cmp
mov
add
fadd
sub
push
xor
jno,pn
add
ss
add
lret
dec
mov
mov
std
mov
mov
setle
das
fs
or
pop
mov
dec
cmp
add
aaa
mov
cmpsb
outsb
js
in
jns
cmp
pop
cmp
popa
inc
out
in
inc
cs
add
rcrl
push
pop
in
sbb
add
outsb
or
xchg
mov
into
fwait
dec
pop
iret
mov
movsl
sub
popf
inc
ja
sub
lcall
cmpsb
and
jb
imul
js
push
adc
movb
mov
adc
fdivp
ds
filds
lahf
adcl
mov
mull
xor
or
jle
out
dec
dec
sub
das
dec
pop
dec
daa
xchg
mov
inc
sarl
rep
xor
mov
out
lods
sbb
loope
loopne
cmp
lods
imul
mov
and
or
jne
dec
js
dec
sbb
in
icebp
push
sub
bound
or
inc
xchg
xorl
lea
jo
add
jge
mov
mov
and
out
lds
pop
lods
and
insb
dec
pop
sub
shr
push
daa
pop
fldt
cmp
pop
stos
outsl
mov
or
add
cmpsl
inc
inc
push
jmp
outsb
push
push
test
mov
xchg
mov
fidivrl
cmc
mov
cs
in
add
js
xor
inc
jmp
je
and
mov
mov
sub
fisttpll
pop
pop
xchg
mov
addr16
add
insl
push
xchg
add
pop
in
arpl
push
inc
and
test
cmp
iret
xor
dec
adc
mov
aad
jae
sbb
dec
popa
daa
gs
repz
dec
clc
shlb
xlat
inc
fcoml
mov
mov
int3
fcomi
mov
mov
adc
dec
ljmp
scas
pop
xchg
nop
adc
cmp
leave
into
aas
cmp
adc
add
mov
inc
cld
adc
aad
loopne
mov
cmp
addr16
push
cwtl
mov
jle
ljmp
push
mov
cwtl
into
push
push
jge
xchg
push
and
jge
jge
inc
and
pop
xor
xchg
mov
dec
hlt
stos
and
test
cmp
loop
arpl
fucomi
in
lcall
cmpsb
push
jbe
mov
cmp
inc
sub
dec
jp
sub
mov
mov
add
xor
xchg
repz
and
add
cmp
xchg
cmpsl
sar
add
addl
inc
sbb
mov
scas
dec
push
popf
test
aas
or
loope
out
xor
xchg
in
dec
andb
inc
pop
dec
les
add
lea
lret
mov
ljmp
sub
mov
mov
add
ss
or
mov
mov
adc
and
movsb
shrb
push
mov
lods
daa
xor
out
mov
and
icebp
scas
test
mov
lahf
aad
mov
ret
sbbb
cltd
add
sti
cwtl
cmp
jp
mov
mov
mov
jae
dec
shrb
jmp
loop
push
adc
nop
sarb
std
jnp
sahf
adc
push
arpl
and
sbb
test
add
aad
repz
add
insb
or
insl
flds
frstor
fdiv
cmpsl
inc
rol
cmp
adc
mov
iret
adc
inc
add
push
stos
sub
add
mov
sbb
ret
int3
fdivrl
out
inc
lret
add
mov
fistps
sbb
in
xchg
cmp
xchg
orb
xor
sbb
ret
pushf
or
negb
aad
cmp
scas
popa
lcall
dec
add
dec
sub
mov
dec
in
pop
add
rclb
insl
mov
mov
sub
daa
loopne
dec
jg
fs
push
mov
sbb
pop
lods
dec
sub
cmp
sbb
je
pushf
es
filds
cmp
cli
pop
sti
cs
sub
xchg
lods
movsl
stc
dec
or
aad
mov
mov
orb
sahf
cmp
fmull
jmp
fdivp
xchg
mov
mov
data16
into
pop
pop
out
xchg
adc
subb
sbb
and
and
mov
test
mov
push
sarl
cltd
mov
fnstcw
mov
xor
sub
sub
and
insb
and
pop
hlt
js
inc
leave
ljmp
xor
lock
in
movb
call
or
mov
xchg
movsl
ja
in
clc
cmp
fiaddl
ja
lret
xlat
rclb
cmp
test
xor
push
sbb
test
sub
and
push
push
sub
xchg
dec
sbb
mov
sub
scas
push
pop
adc
sbb
lcall
mov
xor
sbb
dec
scas
dec
jmp
add
sbb
nop
and
pushf
shll
sahf
adc
in
mov
in
jne
pusha
gs
aas
xchg
sub
pop
push
xchg
jne
add
daa
sbb
push
scas
jg
stc
and
lods
in
inc
lds
gs
imul
adc
lock
and
sbb
pop
mov
sub
or
imul
adc
outsl
outsb
sti
pop
mov
out
lret
loop
mov
mov
add
add
mov
add
adc
es
rorl
jb
pop
loop
lcall
jno
mov
mov
lods
add
xchg
and
adc
pop
push
mov
jno
cmpsl
dec
sar
lods
pop
add
out
xor
inc
movsl
ret
and
xor
add
sti
loopne
mov
scas
dec
xor
mov
lcall
mov
sbb
cli
xchg
and
rclb
cmc
repz
roll
or
mov
loopne
std
xchg
xchg
cmpsb
mov
iret
adc
jo
sbb
icebp
xor
add
xchg
push
jl
in
mov
inc
pusha
pop
pop
and
cwtl
testb
cmp
add
movsb
pop
adc
add
jae
loopne
faddl
jne
mov
and
ret
cwtl
arpl
mov
aas
jecxz
sub
jecxz
imul
adc
jae
add
lahf
cmpsb
bound
test
test
hlt
add
inc
insb
or
ret
popf
adc
pop
fmuls
loopne
mov
js
jnp
sbb
xlat
mov
ret
xor
mov
mov
add
dec
pushf
fistpll
nop
stos
stos
add
fcomip
outsl
out
mov
mov
xchg
pop
jp
icebp
stc
dec
and
mov
xor
jae
and
incb
mov
fcompl
mov
out
mov
stos
mov
or
mov
mov
aad
loopne
loop
push
sbb
subl
leave
in
aaa
sahf
fldt
jno
movsl
dec
bound
dec
pop
push
insb
mov
push
or
aaa
dec
iret
cld
fidivrs
outsl
jae
xor
ret
push
mov
xchg
jl
js
xor
adc
push
or
popa
ljmp
pop
icebp
stos
loop
fucomi
out
ret
fldt
push
or
cmp
fmuls
sub
js
xlat
mov
mov
movsl
out
loop
test
dec
hlt
fisttpl
pop
adc
loop
pushl
out
insb
into
cmpsl
repz
push
xor
stos
mull
lock
les
les
dec
stc
stos
and
adc
jbe
pop
insb
lret
dec
stos
sbb
mov
push
cmpsl
lret
int3
test
cs
xor
aaa
add
mov
int3
push
sub
int3
js
jo
idiv
pop
pop
add
ljmp
dec
es
rclb
mov
add
filds
lcall
mov
daa
sbb
jbe
shll
bound
cmp
rcr
or
adc
sub
jl
test
adc
dec
xchg
push
push
fdivrs
movsb
mov
mov
fnstsw
mov
lds
addr16
mov
or
push
ss
cmp
ljmp
dec
jmp
insb
adc
dec
dec
mov
xchg
add
je
sub
scas
lea
dec
out
sbb
pop
jns
aad
ror
cmp
sti
add
dec
xchg
push
jp
mov
imul
mov
fstl
xor
xor
push
cmpsl
inc
incl
fdiv
add
in
mov
jmp
int
mov
mov
jo
movsl
test
mulb
bound
cmpsl
push
xchg
imul
enter
add
adc
jge
fidivrs
dec
mov
inc
pop
jo
lahf
jecxz
dec
sub
imulb
cmp
jnp
jo
test
mov
movsb
jp
lock
sbbl
adc
cmp
mov
cmp
jg
inc
or
scas
aaa
fcmovbe
pop
push
mov
sub
testl
movsb
cmp
xchg
outsb
arpl
mov
sbb
mov
lds
decb
fucomi
cmpsb
out
cwtl
cmpsl
ret
mov
lock
ficoml
mov
negb
loopne,pn
push
sahf
mov
add
rcrb
jge
cwtl
dec
sbb
pop
sbb
push
ficomps
push
inc
out
pop
icebp
aas
and
jg
in
jnp
cmp
jno
mov
fsubrl
and
mov
div
lods
xor
call
bound
insl
add
movsb
xor
js
xchg
fldenv
lret
mov
rolb
xchg
sub
dec
out
sub
cmp
pop
clc
pop
jno
nop
adc
ret
mov
nop
in
icebp
adc
repnz
addr16
arpl
and
xchg
rcl
fimull
xchg
dec
mov
xchg
std
push
push
jmp
push
int3
mov
stos
xlat
lcall
popa
xor
mov
testb
mov
sbbb
pop
call
mov
xchg
insl
lods
xchg
dec
sbb
jle
lods
stc
mov
cmpl
or
jb
repz
shrb
add
push
mov
lret
lret
jge
ja
and
insl
push
xchg
sbb
and
and
lcall
ljmp
and
pop
fimuls
negb
or
lock
xor
repz
lods
cmp
jl
mov
mov
adcb
mov
jns
sahf
and
dec
adc
or
stc
jb
xchg
cltd
aad
push
clc
test
mov
sub
sub
jns
lods
sub
cwtl
xorl
repnz
neg
adc
mov
dec
xchg
jge
pop
mov
push
in
insb
rorb
xor
mov
dec
xchg
xchg
xor
pushf
repz
cmp
dec
dec
adc
test
aas
sbb
xor
in
mov
jge
and
dec
jno
pushf
je
imul
dec
xchg
test
or
aas
fisubrs
scas
mov
xchg
add
ffree
aad
inc
aam
push
fbld
sbb
loopne
out
scas
testl
out
mov
movsb
push
adc
aam
xchg
subl
cmp
pop
pop
les
pop
sahf
cmp
or
repz
mov
or
jge
cmpsl
pusha
in
daa
sbb
and
aaa
lea
mov
or
jb
in
mov
popf
dec
pusha
xlat
aas
outsl
cmpsb
sub
mov
daa
mov
scas
inc
mov
lods
lea
jae
popf
test
and
fs
adc
cmp
inc
xchg
cmpsb
pop
pop
in
mov
jg
enter
push
cmp
or
js
js
int
mov
cmp
imul
test
ficomps
add
orl
xor
xchg
xchg
shl
inc
dec
xchg
mov
je
inc
test
jns
mov
jns
mov
cmp
push
scas
hlt
icebp
jmp
xchg
clc
roll
mov
add
insb
lea
push
shlb
pop
mov
insl
cmpsl
lret
insb
fs
or
fidivs
mov
jmp
fldt
imul
ss
pop
mov
out
test
orb
adc
dec
cmp
cmp
adc
jp
sub
lea
push
jno
mov
cmp
jp
aam
stos
mov
pop
push
adc
cmp
push
dec
pop
inc
xchg
imul
ja
fdivrl
push
mov
and
sub
sub
mov
in
sub
mov
es
scas
mov
jmp
jb
ja
lahf
jle
cmp
and
out
mov
sti
fs
sbb
adc
jmp
xchg
das
push
pop
and
ret
leave
push
and
dec
or
ss
fstp
aas
adc
jle
outsb
inc
push
andb
push
pop
addl
adc
dec
adc
hlt
dec
cs
sbb
adc
sub
push
inc
sahf
mov
movsb
pop
mov
sub
cmpsb
in
add
clc
mov
pop
arpl
stc
ss
inc
aad
mov
mov
add
inc
inc
push
adc
add
jmp
push
nop
cld
dec
push
ljmp
out
dec
xchg
outsl
repnz
push
into
mov
or
fistps
lret
cmpsl
add
dec
mov
aam
scas
pusha
push
add
mov
test
loop
sub
or
mov
mov
dec
jae
dec
mov
push
mov
mov
fdivp
sbb
sub
or
out
inc
lcall
xor
ljmp
pop
insb
out
ret
stos
push
mov
jnp
movsl
push
pop
add
sub
mov
sbb
cmpsb
add
sub
mov
dec
add
and
jb
pop
dec
ret
add
dec
sub
jecxz
aam
cmpb
mov
add
push
adc
xor
jae
das
mov
mov
scas
cmp
inc
push
inc
data16
clc
sti
lret
xchg
jl
in
shl
stos
pop
mov
adc
mov
repz
popf
mov
pop
mov
xor
iret
fs
pop
mov
mov
jp
jno
cmc
mov
fs
jl
mov
je
and
xchg
fidivs
shl
inc
pop
jg
sahf
inc
mov
push
test
inc
shrb
xor
subl
fimull
mov
out
jo
xchg
in
push
push
hlt
mov
lret
shrl
adc
dec
nop
in
aad
mov
lock
loope
fcomps
lahf
gs
mov
xor
mov
lret
sar
cmp
xor
dec
repnz
and
pop
mov
and
sahf
cmp
sbb
fwait
movsl
push
sub
cmp
pop
pop
add
pop
lock
mov
mov
andl
call
in
addr16
scas
cmp
xor
dec
fwait
popf
jmp
mov
xor
cmpsb
push
dec
dec
repz
push
add
xlat
shlb
mov
xlat
in
cld
cld
aad
shlb
sbb
jge
sub
sbb
int3
das
and
jne
insl
sbb
jle
cwtl
lea
enter
out
mov
add
adc
add
nop
stos
cmp
xchg
testl
dec
fdivp
imul
ja
inc
pop
jge
mov
pop
iret
shr
std
jge
out
mov
dec
daa
sbb
push
frstor
push
cltd
insl
fbld
popf
rcrl
cmp
mov
loope
cld
rcrb
inc
xor
xchg
dec
mov
inc
insl
inc
clc
pop
mov
sbb
xchg
cmc
aad
xchg
mov
cwtl
outsb
mov
cmp
repz
sbb
xor
scas
push
mov
mov
int3
lock
in
lahf
mov
cmp
inc
divb
jp
sbbl
sar
fbstp
inc
es
sarl
inc
scas
or
cmp
icebp
lods
pop
push
xor
dec
mov
push
popa
sbb
mov
push
dec
icebp
std
mov
mov
push
mov
xchg
push
xchg
or
sbb
pop
clc
cld
jo
and
xor
divb
sub
push
mov
add
sbb
add
jl
pop
mov
cld
mov
push
inc
es
jl
rorl
imul
fcmovu
jmp
dec
mov
pop
popa
imul
pop
sbb
push
ljmp
fdivl
inc
cmp
or
arpl
xchg
cld
not
bnd
sbb
popf
pop
xchg
sbb
loopne
xchg
sbb
fwait
push
enter
jno
arpl
mov
mov
mov
jg
gs
lret
ret
mov
jnp
mov
imul
mov
jo
cmpsl
push
push
sub
mov
decb
mov
pop
jl
xor
jno
mov
mov
pop
adc
dec
scas
ficoms
pop
push
xchg
mov
fistl
pushf
ss
lods
jge
push
rcr
mov
sarl
xor
and
inc
or
addr16
outsl
push
xchg
cmpl
mov
scas
mov
sbb
iret
xchg
imul
out
dec
jmp
imul
xor
pop
xor
insl
cld
fisubl
mov
andl
stc
lds
cmp
dec
out
jg
out
or
jge
inc
jae
movsb
add
sahf
mov
and
fcomi
dec
mov
cmp
movsl
add
mov
sahf
arpl
out
mov
loop
mull
insb
jb
lock
xorl
add
cmpsl
ja
pop
pop
in
enter
pop
loop
divb
stos
xor
ja
inc
scas
sbb
lahf
cmp
int
jne
pop
cltd
sub
inc
lret
pop
mov
inc
pop
out
shr
dec
jae
pop
je
pushf
cmpsb
sbb
mov
mov
pop
pop
outsb
sahf
out
rorb
insb
or
mov
lods
adc
sub
mov
test
aas
push
shlb
add
js
sbb
pop
and
je
lods
aas
jmp
dec
push
xchg
push
and
mov
inc
push
mov
dec
push
cli
dec
aad
and
sub
xor
pop
jnp
xchg
dec
fsubl
pop
jmp
in
jmp
icebp
pop
push
fisubrl
add
pop
jbe
mov
dec
xor
sub
jge
dec
mov
in
idiv
leave
add
mov
cmpsl
sbb
rcrb
dec
and
jmp
add
imul
data16
jo
mov
xlat
adc
mov
adc
clc
and
cmp
jecxz
test
add
mov
mov
sub
pop
adc
push
popf
repz
jmp
lds
adc
inc
outsl
mov
sub
dec
sub
into
add
adc
cwtl
repz
test
xchg
mov
add
xlat
in
sbbb
push
sub
inc
mov
and
mov
jge
push
outsl
call
adc
jns
xor
jae
jbe
fstp
and
cli
inc
jno
sbb
adc
ja
adc
sbbb
xchg
push
push
cmp
inc
cwtl
aaa
mov
int3
push
repnz
pop
gs
daa
dec
cwtl
push
sahf
movsl
cltd
xor
ficoml
insl
jl
mov
and
or
xchg
int3
imul
sbb
xchg
add
aas
lcall
rclb
iret
mov
ljmp
std
adc
lahf
fisubrs
cmpsb
xchg
cmp
push
mov
push
jg
and
pop
adc
push
stos
inc
shrb
pop
ss
or
pushf
jno
testb
mov
int3
mov
scas
fsub
sahf
movsb
xchg
shl
fwait
movsb
inc
xchg
pop
test
adc
mov
lret
aaa
lret
andl
out
in
lods
adc
lods
imul
call
pop
aad
test
icebp
jnp
mov
movsl
mov
xchg
pop
mov
mov
mov
imul
fildll
push
stc
mov
mov
add
divl
sub
imul
je
push
stos
imul
lahf
int
lahf
add
ss
das
pushf
mov
xor
insb
stc
inc
jp
sbb
jl
or
subb
xor
testb
ds
cmp
sbb
xchg
mov
pop
add
cmp
jo
cmc
insb
mov
es
or
lcall
and
aam
dec
imul
sbb
cmp
les
es
cmp
shll
and
jnp
cmp
ldmxcsr
movb
add
sub
fldcw
sub
jb
adc
push
enter
or
xchg
xchg
lods
jae
mov
adc
xchg
ret
inc
sub
movsl
arpl
pop
pop
pop
jno
inc
jge
xor
cmp
fists
or
adc
ja
xchg
ljmp
enter
xchg
sti
repnz
mov
hlt
sar
ja
or
adc
bound
subl
xor
mov
sbb
jle
cmp
push
ret
and
dec
enter
jb
fstpl
or
push
and
fmulp
loopne
dec
iret
hlt
sub
add
shrb
les
jge
add
ds
dec
cmp
jns
dec
aam
xlat
movsl
loop
out
cmp
cs
lahf
sub
push
jnp
out
adc
and
cwtl
mov
je,pt
dec
sar
int3
pop
adc
pop
mov
mov
pop
shrl
pusha
out
test
xchg
sti
pusha
mov
lods
push
jne
mov
cmp
adc
jbe,pt
adc
daa
xorb
dec
inc
inc
dec
lods
dec
pushf
cmpsl
xor
test
clc
popa
pop
cmpsb
fistpl
jno
cmpsl
mov
push
add
clc
cmp
adc
mov
xchg
xchg
mov
sbb
mov
jne
cli
mov
loop
push
lahf
mov
dec
lods
mov
sub
lret
and
movsl
and
cwtl
lods
fdivs
dec
fnstcw
arpl
mov
pushf
or
pop
repz
out
inc
push
fsub
lcall
lea
inc
pop
test
movb
scas
rcrb
pop
bound
mov
inc
jae
arpl
aam
lds
xchg
xor
sub
in
cmp
mov
xor
std
xor
cli
and
sbb
push
or
es
mov
push
push
int
sbb
cmp
xor
arpl
in
mov
push
outsl
push
cmp
inc
pop
xchg
fmul
mov
imul
cmp
addl
push
mov
enter
xlat
lea
fstpl
mov
test
fucomp
js
jg
sbb
and
stos
dec
jno
imul
mov
in
lods
hlt
sbb
xchg
fucomp
inc
sub
fs
movsb
dec
mov
sbb
test
notl
pop
cmp
or
js
ds
mov
mov
add
imul
jne
lahf
push
std
xlat
int
cmp
and
in
dec
push
xchg
adc
mov
push
int3
mov
push
jmp
push
or
mov
push
jl
notl
pushf
or
mov
pushf
inc
outsb
xchg
mov
mov
jg
loop
push
add
fsubl
cs
cwtl
cmp
test
push
sahf
les
in
pop
and
mov
push
push
in
and
sbb
mov
pop
ret
xchg
sub
pop
pop
mov
add
orb
ds
movsb
sbb
xor
jge
push
movb
test
adc
xchg
mov
xchg
imul
cmp
cmp
aas
ret
jae
push
dec
adc
adc
mov
xchg
fisubl
and
add
jne
out
repz
push
stos
cmpsl
ljmp
fidivrl
mov
popf
fdivr
push
pop
mov
sti
flds
mov
lea
divl
jo
lret
pop
mul
jg
mov
pop
lcall
jb
stos
mov
sub
or
repnz
nop
and
lock
pop
push
mov
aad
jo
adcb
mov
jb
cmp
sbb
cld
xchg
inc
sbb
and
and
jb
xchg
jge
pop
lods
fs
jbe
lds
cmp
scas
pop
dec
mov
mov
shrb
and
dec
add
jno
pop
ja
jl
in
mov
pop
gs
stos
loop
and
add
in
adc
push
les
push
scas
mov
lock
aam
sahf
lods
adc
lods
fdivr
pop
clc
dec
cli
mov
or
fwait
pushf
test
cld
ret
movsl
push
std
xor
rorb
jl
lret
fwait
jecxz
or
mov
repz
loopne
cltd
sar
in
mov
leave
xchg
sub
loop
inc
sbb
insb
mov
jne
push
les
adc
fcmovb
subb
setle
stc
and
jo
sahf
lret
in
testl
mov
aad
mov
imul
inc
jge
mov
popa
mov
ss
push
sbb
sub
mov
cs
test
jno
lret
xchg
dec
dec
loope
imul
add
mov
xor
lods
jle
insb
rep
mov
push
cs
dec
insl
push
icebp
mov
or
cmp
and
pop
or
fldcw
lea
cmp
cmp
jbe
faddl
sub
xor
sbb
mov
jne
movsl
shll
xor
sbb
popl
xlat
mov
xor
aas
push
adc
sbb
jbe
add
out
repz
and
push
push
jae
cmpb
and
negb
addb
and
jo
int3
fcmovbe
mov
mov
mov
xchg
out
shlb
xchg
test
push
pop
gs
pop
outsl
ss
xor
jne
add
add
icebp
mov
push
pop
pop
jg
xlat
jg
cmp
fdivs
mov
cltd
xor
xchg
push
adc
fldenv
cmp
pop
test
insl
push
cli
jo
dec
jo
add
mov
xor
cmp
cwtl
jge
stos
push
mov
jle
int
sub
and
testb
lods
insb
gs
mov
add
pushl
ljmp
cmpsb
nop
cs
rorb
lahf
sub
sti
sub
dec
mov
jne
adc
jnp
add
jnp
push
jbe
test
stc
sbb
inc
movsb
jbe
dec
jmp
mov
pop
push
fs
cltd
mov
lds
add
pop
mov
pop
pop
pop
xchg
jl
std
outsb
push
ds
jg
in
bound
sbb
shr
sub
lcall
into
jnp
lcall
les
nop
push
jb
add
jnp
call
int3
xchg
sub
mov
fildll
arpl
iret
dec
add
bound
xor
scas
ja
sub
pop
lahf
adc
and
xor
and
dec
sbb
pop
sub
test
scas
jmp
leave
loopne
aaa
pop
lea
mov
fcmovnu
shlb
fdivrs
inc
rcrl
or
or
movsl
or
shrb
inc
or
inc
out
in
ss
mov
or
leave
ja
xchg
xchg
mov
out
std
stos
mov
adc
lcall
xor
mov
cmpsb
lret
arpl
pop
clc
sbb
sub
mov
push
popa
cmp
into
cwtl
sti
push
sti
jnp
add
popa
rorb
js
loope
jno
mov
push
bound
mov
cltd
pop
fiaddl
insl
jmp
lock
test
mov
sub
movsl
lret
cmp
pushf
mov
jle
repnz
dec
pop
mov
aaa
mov
hlt
add
lret
rcll
mov
inc
or
lcall
xchg
xchg
pop
jp
popa
jmp
add
sar
jg
cmpsb
dec
push
add
roll
cmp
push
orb
and
gs
cli
mov
mov
push
fadds
stos
addb
insb
xor
test
xchg
pop
stos
fcoml
negb
insl
xchg
inc
mov
dec
inc
mov
cmp
in
addr16
pusha
aas
popa
scas
jecxz
xlat
pusha
cmp
add
pop
movsl
sub
fildll
mov
push
call
jle
push
fidivrl
and
cmp
addl
shrl
mov
das
xor
jecxz
aam
dec
xor
cwtl
add
int
test
ret
lock
popf
mov
cmpsb
xchg
sar
aas
xchg
mov
arpl
clc
pusha
add
xor
mov
jne
sbb
fistpl
sub
push
lods
insl
adc
lods
mov
in
inc
leave
sbb
int3
mov
jbe
out
add
into
out
xchg
jae
cmc
add
sub
jns
push
jo
cs
or
push
pop
sub
jne
int
out
leave
lcall
jne
idiv
cmp
loope
sbb
and
loop
shl
loope
dec
and
sub
repz
lods
jbe
lds
push
mov
or
sahf
jmp
cmp
addl
insb
add
sub
inc
insl
icebp
dec
or
push
cmpsl
jmp
enter
mov
push
sub
xlat
sahf
mov
dec
inc
xchg
or
mov
rcrb
push
xchg
add
mov
and
mov
sti
mov
cmpsb
into
cmpsb
or
sarl
lea
nop
jecxz
mov
jns
push
jmp
lea
dec
aad
cmp
pushf
fnsave
fcoml
adc
sbb
cmp
xchg
ljmp
cmpb
xchg
pop
addr16
pop
pop
lret
loopne
mov
xor
fisubl
xlat
push
orb
cld
adc
neg
inc
mov
stos
out
add
gs
and
dec
cmp
pop
scas
rclb
addb
int3
adc
mov
mov
jmp
mov
or
mov
test
fwait
inc
and
add
mov
mov
bound
add
xor
rolb
inc
pop
push
cli
push
das
mov
aas
jbe
jne
movsb
inc
in
je
scas
movb
cmc
adc
iret
fiaddl
stos
lahf
pop
nop
stc
dec
fs
daa
or
cmc
and
sub
outsl
cmc
mov
xchg
test
insl
mov
lret
jno
clc
inc
dec
xchg
mov
xchg
sbb
push
pop
jl
out
sub
mov
and
lds
push
mov
daa
fildl
aas
shlb
fisubrl
lock
inc
dec
scas
mov
mov
xchg
mov
mov
imul
or
aam
imull
stos
or
jle
xchg
mov
push
lret
and
shl
pop
insb
sbb
int3
mov
lods
adc
leave
add
adc
scas
out
dec
push
xor
dec
out
sarl
or
cmpsl
daa
mov
pop
sbb
xchg
pop
and
sub
aad
scas
gs
mov
jae
pop
fdivs
out
fst
je
jnp
test
pusha
imul
jbe
popf
sub
mov
cltd
or
push
mov
ret
les
jnp
pop
dec
push
mov
mov
sti
sub
xchg
mov
cmp
je
push
rclb
nop
dec
jmp
rcll
push
jge
add
push
fisubs
add
lcall
jno
push
bound
cld
ds
or
arpl
xchg
fcmovnu
aas
ret
cli
mov
imull
xchg
imul
test
cmp
dec
inc
ja
icebp
in
adc
mov
into
pushf
out
and
inc
test
addr16
xchg
aaa
and
push
test
jo
mov
xor
nop
or
lods
jno
ja
adcb
adc
std
ret
adc
call
andb
and
lods
jg
daa
incb
push
das
jne,pn
mov
xor
jl
adc
imul
and
xor
div
leave
loope
push
jg
cmp
mov
jmp
dec
pop
cld
ja
nop
mov
sub
sarl
pop
mov
sbb
lods
inc
dec
hlt
imul
insl
fnstcw
addr16
cmpsb
into
push
test
ret
pop
pop
into
test
xchg
cmc
ja
jne
xchg
jp
or
stc
jge
shrd
sbb
pop
shlb
loope
sti
mov
xchg
inc
cwtl
or
cli
jmp
or
lds
pop
xchg
sbb
cmpsb
lcall
out
lcall
mov
pop
jbe
jae
mov
lahf
mov
add
ror
push
add
xchg
movb
icebp
push
popa
ror
xor
mov
popa
repnz
pushf
sbb
cmp
adc
mov
fisubrs
adcl
xchg
push
daa
test
sbbl
xchg
cmp
outsb
mov
mov
sub
pop
fwait
cwtl
xorl
cld
xor
xchg
fisubs
jo
scas
dec
jl
adc
add
fnstsw
sbb
insb
int3
hlt
dec
shrb
dec
sti
inc
imul
and
xchg
push
lods
inc
lret
jecxz
nop
xlat
mov
or
scas
outsl
ret
rcrb
mov
ja
jnp
fistpll
jle
mov
loopne
sbb
iret
arpl
push
sahf
ljmp
stc
icebp
shlb
mov
fsts
jge
jb
inc
pusha
jo
lods
jmp
lret
mov
pop
fcomps
cmc
aaa
pusha
adc
push
aam
fbld
adc
cmpsb
jecxz
jecxz
popf
in
xchg
inc
push
call
or
xchg
cmc
clc
or
and
jno
stc
mov
icebp
jle
pop
fbstp
sbb
pushf
pop
out
cli
mov
jle
iret
mov
inc
test
jbe
mov
roll
push
jge
lock
popa
int
in
adc
inc
bound
es
mov
mov
sub
sahf
pop
sbb
mov
rcl
jns
ret
mov
inc
test
mov
nop
adc
data16
insl
cmpb
faddl
daa
repz
xor
das
cmc
sub
jecxz
testb
sbb
fimull
xchg
jo
adc
jo
enter
test
cmc
and
mov
movsl
adc
int
jle
inc
out
or
mov
aas
imul
sbbl
cmc
push
xchg
cmc
jnp
push
pop
fisttpl
lret
in
xor
mov
ficomps
int
iret
sub
cmp
cmpsl
fs
adc
dec
inc
cmp
je
sarb
lahf
adc
sbb
lahf
pop
or
push
mov
mov
gs
inc
adc
iret
sti
or
rorb
sbb
jo
dec
inc
iret
dec
aas
dec
mov
mov
shll
mov
and
fsub
sbb
mov
dec
lds
sbb
mov
push
fnstcw
mov
movsl
jo
mov
and
push
ljmp
repnz
cmpsb
dec
add
andl
scas
and
lahf
lcall
and
or
mov
inc
pop
dec
rolb
jge
mov
xor
xor
insl
enter
cmc
pop
jmp
and
push
sbb
inc
fucomi
fdivrs
cmpl
or
aam
or
mov
arpl
jge
insb
stc
shll
xor
mov
sbb
xor
loopne
and
je
aaa
fs
jmp
adc
sbb
xchg
adc
or
out
mov
dec
shrb
fs
push
stos
loop
jne
jl
ret
jge
sbb
loope
fisubrl
in
push
mov
jl
mov
sti
test
xorl
addl
jp
cld
es
xorb
mov
adc
jno
xchg
pop
sbb
mov
sbb
pop
int3
mov
jbe
or
lods
daa
scas
fsubl
sahf
gs
or
lahf
out
hlt
jmp
outsl
mov
ja
stos
lret
lods
stos
lcall
icebp
jns
loope
mov
movl
mov
icebp
jbe
adc
sbb
jb
clc
ficoml
scas
gs
fdivrl
mov
ds
adc
loope
or
sub
add
imul
out
jmp
sbb
push
dec
cmp
jb
push
xlat
xor
js
cmp
je
jo
jmp
inc
mov
inc
add
pop
int
outsb
push
roll
hlt
sahf
mov
xor
call
out
xor
sub
sub
divb
xchg
outsl
mov
ljmp
cmc
ret
scas
lahf
dec
test
insb
pop
mov
cmpsb
fmuls
dec
jb
imul
out
adc
mov
imul
mov
pop
das
inc
test
arpl
inc
pop
pushf
gs
jmp
mov
xor
subl
jno
mov
adc
sbb
outsl
push
mov
xorb
dec
movsb
outsl
loop
insb
out
aam
sbb
pushf
pop
in
faddl
lock
xor
lods
mulb
sub
or
outsl
in
jnp
xlat
pop
jno
stos
leave
leave
jnp
fucomp
mov
jbe
fnsave
sub
sarl
sub
out
test
sbb
push
fwait
idivb
nop
flds
scas
outsb
icebp
test
fidivs
pushf
adc
loopne,pn
pop
test
fcomps
gs
ljmp
adcb
rolb
or
imul
push
scas
add
mov
mov
lds
mov
sbb
sbb
cmp
repnz
adc
aad
lds
cmpsl
notl
mov
cmp
inc
mov
outsb
std
dec
add
test
and
and
push
dec
cmp
inc
or
arpl
out
mov
ljmp
sub
and
fs
mov
and
dec
movsb
lock
vpor
mov
dec
jp
mov
pushf
jmp
push
inc
outsb
mov
fucomip
fs
add
push
popf
into
fwait
push
scas
adc
lds
cmp
into
into
std
movsb
dec
stc
mov
leave
sbbb
push
cmc
out
and
push
adc
lcall
ss
pop
mov
fisttpl
push
cmp
dec
loop
mov
aaa
mov
nop
daa
shll
je
or
cmp
in
sbb
lea
cmpsb
sbb
aas
rcrl
fstps
jns
ss
push
out
dec
xchg
add
movsb
test
xor
fstpl
pop
inc
push
mov
push
std
pandn
add
and
loop
inc
and
jb
stos
xor
into
mov
out
sbb
je
push
xchg
mov
xchg
and
mov
mov
pop
imul
movsl
aad
pop
xchg
mov
mov
stos
repz
cmpsl
xlat
pop
sbb
das
and
cmp
sahf
mov
push
insl
push
xchg
xor
mov
and
sets
and
or
cs
mov
je
sub
aas
ja
cltd
sub
insb
aad
xor
stc
fmuls
cli
sbb
xchg
mov
pop
inc
xchg
int
jl
movb
jb
fdivrl
incb
into
ljmp
clc
add
leave
xor
or
test
scas
jnp
daa
pop
push
jb,pn
or
pop
shll
iret
loop
jbe
mov
aam
lret
xor
aam
inc
das
ss
cmp
mov
adc
push
cmpsb
cmp
sub
pop
pop
push
mov
iret
push
out
lds
sub
jle
mov
out
dec
cmp
jns
pop
jbe
test
lahf
mov
adc
inc
jecxz
xchg
icebp
in
sub
cltd
mov
arpl
fucompp
orl
loop
adc
jle
xor
enter
je
dec
lea
sbb
loopne
frstor
push
negb
incb
xor
cltd
nop
dec
jmp
out
out
pop
dec
push
add
and
pushf
mov
sub
and
sbb
sub
pop
or
sbb
mov
jbe
pop
lret
sub
mov
jae
aam
pushf
mov
dec
sbbl
aas
call
loopne
ret
addl
cld
je
xchg
jae
pop
jnp
lods
sbb
pusha
and
insl
out
push
push
and
push
movsb
fnstsw
xchg
or
mov
shrb
sbb
xchg
daa
mov
imul
in
fs
inc
cmp
lods
pop
outsl
stos
dec
and
outsl
mov
stos
icebp
sbb
mov
xor
xor
push
mov
loopne
stos
divl
xchg
sbb
or
call
js
mov
pusha
out
sub
icebp
lea
lods
mov
in
mov
pop
icebp
aaa
xchg
ljmp
cwtl
clc
inc
fs
or
xor
inc
add
sbb
mov
leave
loope
jnp
lods
dec
je
xchg
rcr
repz
out
sbb
lods
mov
loopne
mov
xchg
add
adc
jo
sahf
xlat
mov
shrb
adc
repnz
or
adc
outsl
fs
push
clc
mov
dec
das
add
popf
adc
mov
push
xchg
mov
neg
js
mov
xchg
rcrl
shl
dec
cs
aam
xchg
pop
and
lea
inc
xor
gs
adc
das
jb
cmp
xchg
xor
lods
jge
enterw
fldl
mov
les
fstpl
mov
dec
testb
inc
cmc
enter
adc
inc
es
inc
sarl
call
es
sbb
ficoms
xchg
rcrb
jnp
or
cld
out
mov
push
aaa
ficoms
in
cmc
push
jns
dec
nop
aas
push
pop
testb
imul
fidivrs
aam
sbb
leave
fsub
inc
int3
lret
popa
push
outsb
out
mov
or
movsl
scas
fisubrl
test
add
cmpsl
mov
cmpsl
mov
mov
rolb
push
addr16
sub
test
int
lahf
xchg
sub
enter
movsl
repz
cmp
into
xlat
je
fldt
or
xchg
stc
lret
xor
popf
ficoml
fstps
cs
sahf
fwait
xchg
adc
fstpl
ljmp
adc
roll
mov
xchg
sbb
cmp
dec
push
xchg
jne
dec
adc
pop
push
or
dec
leave
mov
repnz
pop
test
stos
mov
imul
mov
les
enter
rclb
outsl
repz
mov
stos
lods
lea
ljmp
cli
pop
add
push
cmp
mov
push
add
pop
repz
clc
inc
iret
jbe
call
push
mov
mov
push
clc
mov
pop
cmp
int3
inc
cwtl
pushf
lock
xor
mov
fimull
cmc
popf
insb
mov
rorl
adc
add
pushf
les
pop
fidivrs
xor
popf
cmp
in
mov
das
aaa
aas
cmpsb
xchg
dec
test
push
sub
push
mov
sbb
mov
and
std
cmp
mov
cmpsl
hlt
mov
xor
pop
dec
scas
xchg
sub
pop
dec
push
and
fwait
cmpsb
jg
divl
scas
inc
into
pop
and
jmp
aas
xchg
adcb
jno
push
sbb
jmp
mov
lea
xchg
loop
scas
ret
adc
mov
sub
shrb
imul
out
cmp
push
and
out
adcl
out
cmp
sbb
inc
push
inc
xchg
sahf
xor
dec
xchg
cs
dec
fidivl
mov
mov
movsb
daa
dec
lds
jbe
iret
adc
shll
ja
mov
clc
test
mov
xchg
push
jg
stos
cmpsl
ljmp
cli
sub
cs
call
fmull
inc
xchg
jmp
pop
mull
addr16
xor
repz
dec
xchg
push
adc
cmp
or
push
cmp
ja
mov
push
data16
sub
push
and
mov
add
mov
xchg
dec
dec
cwtl
or
push
fisubl
jnp
call
push
inc
mov
jmp
in
add
mov
mov
jle
cwtl
and
sub
loope
lea
ficompl
out
push
jne
mov
jo
cmpsl
rcr
dec
add
popf
mov
xchg
aaa
push
js
pop
xor
jmp
std
out
cmpl
repz
jbe
fcoml
sbb
dec
inc
xchg
pop
inc
cmp
pop
cltd
push
lret
fs
and
jae
int
in
mov
icebp
sbb
lods
pushf
inc
mov
jne
cmp
cltd
cmpsl
test
adcb
mull
shrb
mov
and
push
pop
pop
or
insl
mul
or
mov
insb
xor
repz
cmp
or
and
cli
cmp
xor
daa
adc
pop
xor
inc
xor
orb
xlat
and
cmpsl
push
pop
lcall
xchg
mov
jne
or
mov
sub
lret
sbb
call
or
fnsave
mov
das
push
pop
rcrl
dec
adc
lahf
test
js
rorb
imul
add
pop
sub
call
push
inc
dec
sub
ret
inc
outsb
xchg
inc
test
adc
arpl
loope
leave
outsl
in
adc
mov
in
je
nop
mov
mov
fldt
jge
jno
sbb
jp
enter
adc
addr16
fstp
mov
adc
daa
xor
pushf
mov
popa
aam
popa
pop
cltd
pop
lcall
push
rclb
pop
cmp
cmp
and
and
xor
in
and
arpl
ja
dec
pop
sub
adcl
push
push
or
in
aaa
sub
mulb
pop
rolb
or
xchg
es
mov
push
pop
clc
pop
cmp
jo
pop
cmpsl
ret
xchg
inc
icebp
jecxz
outsb
inc
fmuls
aad
loopne
mov
jne
pop
push
clc
dec
jb
cmp
sarb
jecxz
sbb
int3
mov
cmp
mov
mov
loopne
mov
cmpsb
test
aam
sbb
ret
mov
mov
int
sbb
and
fldcw
test
test
xchg
fnsave
mov
dec
insl
mov
dec
adc
cmpsb
ljmp
fidivl
lock
push
mov
outsl
adc
shrb
outsl
aad
push
add
fisubrl
aad
pop
mov
into
xor
in
inc
mov
inc
enter
ffreep
mov
cmp
loop
adc
aas
push
outsl
std
mov
pop
jbe
stos
jle
xor
inc
ret
fstpt
sti
gs
rclb
mov
sub
or
mov
pop
pop
jnp
aaa
push
mov
jl,pt
sahf
inc
loope
es
xchg
cmp
in
push
test
icebp
adc
fbstp
ss
gs
aaa
out
fdivp
popa
mov
arpl
sbb
add
sub
out
inc
jle
sbb
stc
ja
idivb
adc
sbb
arpl
xchg
ret
andb
roll
pushf
adc
mov
sbb
or
lcall
jle
mov
mov
jl
aaa
jecxz
add
ficoms
and
mov
pop
daa
mov
xchg
cmp
movsl
adc
dec
pop
rcl
sub
imul
idivb
ret
sti
or
clc
pop
xchg
insl
gs
push
jo
je
repnz
dec
insl
xchg
jmp
aam
hlt
loope
icebp
fcomps
loop
sbb
je
xor
pop
lea
push
bndstx
sub
dec
bound
call
out
pop
and
mov
out
jl
mov
push
test
or
cltd
fs
call
xchg
push
mov
adc
je
xchg
fucomp
adc
stos
mov
jb
ja
and
in
popf
adc
xchg
xchg
ret
add
xor
and
stos
mul
lea
clc
addr16
mov
push
mov
add
mov
xchg
test
inc
ds
dec
pop
push
scas
and
dec
loop
loopne
shr
sbb
stos
xor
adc
sbb
mov
insb
and
std
rcrb
dec
fsubrp
push
add
xchg
fsub
adc
push
jno
fstps
popa
in
popa
sub
inc
aam
cmp
jmp
xor
push
pop
cwtl
and
add
jne
mulb
cmp
test
sbb
iret
cmp
and
xor
xchg
addb
pop
fistpll
adc
inc
jo
insb
lea
movsl
les
xchg
in
cld
xchg
xor
xor
pop
inc
leave
cld
jne
rcll
fwait
or
pop
fdivs
stos
push
dec
adc
sub
gs
dec
lcall
push
cld
nop
or
xchg
lret
pop
push
or
pop
push
mov
out
lcall
xchg
mov
inc
push
xor
lret
dec
mov
mov
je
mov
ds
or
pop
shr
pushf
pop
sbb
jmp
pushf
cmp
pop
jo
outsl
lahf
lock
jns
notb
ret
push
jbe
hlt
mov
mov
inc
test
int3
into
jmp
pushf
out
aam
popf
fcmove
in
inc
adcl
fcoml
adc
jp
sarb
lds
inc
lods
arpl
shll
push
cmp
or
add
stos
mov
jmp
insb
jge
pushf
das
jnp
out
mov
mov
ret
lods
push
std
push
cmp
cld
test
das
mov
leave
inc
mov
mov
es
or
xor
cwtl
das
pushf
test
pop
pop
dec
mov
shlb
or
or
and
in
jl
hlt
adc
das
ss
loope
mov
jg
mov
xor
xorb
push
arpl
sbb
ret
cmp
ljmp
popf
test
sbb
call
jmp
xor
mov
mov
push
xor
sti
leave
sbbb
data16
inc
inc
into
ss
fstpt
ret
stos
imul
adc
mov
cmovnp
arpl
cwtl
add
xor
add
mov
dec
cmp
xor
push
cmp
test
adc
and
daa
rol
adc
cmp
ret
fisubrl
or
adc
pop
mov
outsb
mov
cs
mov
dec
push
jnp
mov
dec
das
sub
mov
vrsqrtss
or
daa
xor
cmpsb
jmp
cmc
and
sub
pop
xchg
fwait
sbb
dec
mov
mov
rolb
sbb
mov
pop
leave
mov
xor
adc
movsl
sbbl
stos
dec
pop
cmp
sub
and
repnz
nop
and
mov
push
mov
pushf
cwtl
jb
repz
push
outsb
xchg
xor
mov
ret
cmpsb
add
push
inc
stc
xchg
aas
pop
fnsave
dec
push
adc
mov
mov
fldl
into
lods
push
add
mov
int
ret
pop
movsl
out
ror
js
pop
pop
outsl
mov
imul
out
jno
xchg
ds
jmp
sub
or
lods
inc
add
lcall
es
clc
ret
jo
lds
jmp
push
out
repz
mov
pop
mov
mov
inc
mov
cmp
cmp
jne
cmp
add
push
add
enter
cmp
cmp
iret
cmp
test
test
jmp
pop
sbb
dec
adc
mov
jp
cli
xor
int3
and
adc
mov
das
stc
pop
mov
pop
push
mov
test
out
push
cmp
aam
fwait
xchg
or
jp
cli
push
repnz
pop
pusha
lods
ret
inc
mov
rcll
int3
jle
push
gs
cwtl
jge
sbb
lcall
sub
pop
test
aas
in
push
xchg
mov
xor
and
xor
xchg
mov
flds
aad
mov
jae
xlat
jb
loope
xor
dec
mov
faddp
mov
add
inc
adc
jecxz
ret
pop
and
lea
fsts
push
mov
lods
jo
inc
mov
add
or
fmull
mov
imull
push
push
outsl
adc
mov
in
mov
stos
push
aas
nop
inc
sbb
lret
ja
inc
mov
sbb
gs
dec
enter
in
pop
sbb
lds
ja
cmp
out
or
jno
stos
xor
mov
std
out
filds
mov
loopne
cwtl
int
push
cmp
out
pop
mov
and
int3
add
mov
movsl
xchg
and
push
jge
add
adcb
and
rorb
cld
jbe
mov
cwtl
mov
jns
xor
addr16
test
push
xor
xchg
out
adc
dec
jmp
call
dec
mov
repnz
add
adc
or
loopne
icebp
cwtl
xlat
and
cli
mov
push
jnp
pop
testb
sbb
pop
aad
cltd
jo
test
push
sbb
insb
mov
sbb
cli
outsb
loopne
add
je
ret
mov
cli
mov
fimuls
sbb
or
push
lret
sub
cmp
insb
push
fisttpl
lret
lahf
cmpl
imul
jmp
icebp
adc
xchg
int
cs
dec
sbb
dec
adc
xchg
cmp
inc
jno
arpl
sub
mov
cmp
je
push
scas
cmp
cld
fs
mov
sub
push
ljmp
inc
pop
sar
stos
inc
push
nop
ret
dec
cmp
fists
push
mov
test
test
xor
jae
movsb
pop
arpl
test
std
or
inc
icebp
out
out
in
mov
inc
iret
ja
xchg
xor
mov
sub
fldt
push
jno
gs
sbb
fisubrs
pop
je
hlt
sbb
cmp
or
ret
cmpsb
popf
pop
fwait
dec
xor
insl
insb
pop
ljmp
pusha
in
fcomp
xor
xchg
xor
jb
inc
sarb
in
movsl
pop
lcall
push
stos
xchg
xor
jp
stos
jp
dec
andb
outsl
jp
pop
rclb
inc
les
jae
lret
stos
rorb
mov
inc
mov
cmp
dec
movsb
stos
push
add
in
or
and
push
scas
push
pop
jg
sbb
inc
push
mov
in
fldlg2
push
sub
andl
jl
push
cwtl
mov
mov
scas
ljmp
jne
jg
ret
inc
mov
adc
push
push
xor
sahf
fbstp
in
or
xchg
subl
insb
cmp
gs
add
xor
ret
ret
jmp
mov
hlt
dec
sbb
sub
mov
dec
mov
aaa
jns
rcll
add
or
test
pushf
lret
shlb
pop
pushf
shlb
mov
mov
shlb
out
sti
push
jp
scas
ja
int
xchg
cwtl
cltd
lcall
ret
inc
add
push
cld
adc
ljmp
or
inc
xchg
rol
daa
dec
std
jg
xchg
pop
out
sub
fidivl
or
and
jle
jmp
push
jb
xchg
pushf
inc
das
push
adc
pusha
sbb
out
mov
loopne
inc
stc
repnz
imul
lods
push
sub
loope
sbbb
xor
dec
pop
movsb
cmp
test
shlb
adc
call
mov
adc
es
out
into
mov
cltd
mov
enter
jge
cmc
test
xor
push
adc
inc
add
cmp
add
dec
loope
adcb
leave
andb
sbb
xchg
mov
scas
or
inc
mov
icebp
scas
sub
and
and
pop
sbb
out
jmp
les
mov
icebp
in
pop
stc
test
fcomip
mov
xor
fistpl
ss
xchg
test
insl
pop
ret
addr16
aas
jbe
inc
mov
add
xor
sub
aas
and
dec
ds
jmp
sub
push
cmp
sub
pop
jnp
jl
sbb
test
sub
roll
aaa
cltd
mov
dec
cmp
mov
movsl
lcall
dec
jns
pop
sbbl
mov
notb
xchg
mov
aas
xor
lea
das
cmpsl
add
cs
mov
inc
sub
jae
mov
cld
dec
mov
in
push
aaa
adc
inc
mov
aam
mov
fstl
iret
ret
or
mov
lcall
movsl
shl
insl
push
add
jne
and
xlat
out
call
cltd
rorl
or
sbb
inc
pop
or
pop
dec
xor
sub
arpl
ljmp
and
and
das
insl
pop
and
addl
sbb
or
fdivrs
jp
dec
push
sti
mov
cmp
mov
pop
and
aaa
sbb
dec
hlt
jae
push
loop
cli
lods
or
cmp
sti
sbb
jmp
jmp
lods
cs
and
loop
xor
not
sub
mov
ljmp
push
cmc
lds
lret
stos
shlb
js
jnp
in
and
das
stc
daa
mov
or
in
sub
aad
push
or
xor
sub
mov
lods
lock
imul
ficomps
push
es
lcall
lcall
or
js
or
gs
jno
sbb
xor
mov
and
push
xchg
std
inc
jge
rcrl
pop
xlat
jge
add
mov
cmc
aam
add
aaa
repnz
fcoms
fwait
popa
mov
dec
mov
mov
imul
mov
cmp
enter
in
clc
xchg
xchg
sub
xchg
mov
jle
and
int3
ss
pop
mov
dec
repz
xor
in
xchg
mov
pop
xor
loopne
ret
xor
or
add
sbb
jns
lods
fbstp
in
inc
mov
pop
stc
pop
and
mov
adc
fs
stos
jg
add
xor
shl
js
xlat
pop
add
out
fwait
jl
xchg
das
or
jecxz
and
mov
inc
leave
inc
xchg
inc
loope
test
sbb
dec
lock
xor
xchg
mov
ja
pop
sbb
lds
xor
and
ss
into
jb
add
cmp
jge
mov
sub
sbb
mov
rorl
inc
mov
mov
stc
cmpsb
aam
mov
pop
cmp
sbb
pop
das
pusha
fwait
outsl
dec
jne
stc
dec
push
aas
sahf
call
mov
rorl
cmpsl
mov
out
dec
adc
std
push
ja
in
ffreep
sbb
loope
mov
insb
movsb
sahf
cmp
inc
cmpl
enter
inc
adc
insb
mov
mov
mov
adc
lods
dec
fdivl
outsl
jae
inc
sub
sbb
add
push
pop
sub
mov
movsl
push
pop
jns
call
push
inc
xchg
jecxz
cli
iret
frstor
arpl
dec
lds
aaa
add
cmp
loope
imull
push
cmp
jae
mov
pop
pop
jo
pushf
aas
das
jmp
inc
ds
es
xor
sub
insl
cmp
leave
or
jns
bound
dec
jbe
ret
movsl
mov
shrb
or
insb
xchg
clc
mov
fdivl
mov
subl
jl
xor
pop
scas
xor
and
iret
cmp
push
dec
ret
jns
adc
sbb
lods
jo
lahf
pop
hlt
pop
clc
mov
ret
push
outsb
sahf
mov
data16
adc
pop
faddl
add
mov
int3
repz
test
push
mov
pop
pop
mov
fidivrl
mov
dec
mov
push
xor
ss
mov
sbb
fldl
ret
pushf
xchg
xchg
dec
jnp
pusha
xchg
lcall
cmp
pop
jge
adc
add
mov
lea
push
loope
dec
push
xchg
andl
mov
mov
pop
sub
and
lahf
push
movsb
scas
insb
xchg
scas
adc
dec
mov
mov
fildll
and
rol
shlb
and
aaa
imul
jl
decl
cmp
dec
inc
lret
jno
fwait
arpl
pop
mov
sub
into
lcall
call
push
insl
nop
jns
loope
das
pop
aaa
out
cmp
add
fstpl
xor
subb
dec
sbb
pusha
nop
xchg
sbb
mov
das
jo
mov
xchg
cld
in
loope
add
imulb
sub
pop
ja
stos
mov
jp
add
jp
shrb
rcr
pop
ss
adc
ja
push
pop
cwtl
jecxz
das
ja
nop
cltd
adc
mov
mov
rcll
adc
fdivs
mov
imul
and
jo
pop
insb
push
dec
lret
test
ficomps
jno
pop
lock
sub
inc
or
mov
sbb
cs
xchg
add
popa
popf
nop
xor
pop
js
out
inc
xchg
int
imul
xchg
xchg
sub
push
adc
imul
stos
inc
es
ret
cmp
mov
pop
dec
es
hlt
mov
pop
inc
lret
insb
andb
fcomps
dec
rorl
push
or
xlat
fisubl
sbb
pop
sbb
notl
and
jp
pop
aas
shll
push
pop
xor
cmp
rorl
mov
push
data16
popf
aas
hlt
and
cmpsb
cmp
cmpsb
pop
xchg
xchg
stos
out
mov
mov
jo
cmp
push
adc
out
pushf
outsl
popa
dec
cmp
mov
mov
inc
xchg
sarl
addr16
jbe
push
xchg
iret
bound
fldl
dec
es
add
cmpb
fwait
xor
push
xor
dec
inc
xchg
xor
sbb
add
shlb
inc
inc
test
xor
loop
nop
in
pop
and
jo
jg
ret
repnz
lea
shrb
xor
call
or
sbb
mov
leave
jle
test
and
aas
sub
mov
pusha
loope
shr
dec
mov
stos
mov
cmp
jo
jo
aam
call
lds
pop
mov
insb
arpl
push
ret
inc
dec
lods
imul
add
dec
dec
push
cmp
add
xor
sub
aam
mov
xchg
pushf
mov
xchg
call
adc
out
into
mov
push
das
loopne
adc
insb
jo
push
jle
xchg
push
ret
mov
loope
stos
popa
push
and
sub
sub
sbb
pop
lock
mov
pop
sarb
and
xor
jg
bound
out
push
arpl
lds
sbb
outsb
xchg
mov
mov
inc
adc
gs
iret
mov
leave
add
jl
loope
fwait
mov
jns
mov
push
push
movsb
jno
loope
je
nop
aam
shrb
test
cmpsl
pop
sub
jne
repz
sub
or
mov
cld
test
jo
fwait
cmp
add
cmp
je
inc
pushf
mov
es
std
and
inc
jle,pt
popa
pop
in
fs
jae
rorl
mov
mov
inc
jp
fiaddl
inc
xchg
push
stos
fisttpl
out
adc
rclb
xor
cld
mov
or
adc
xchg
lcall
cltd
shrl
shl
mov
insl
daa
and
jno
fiadds
in
cmp
mov
ss
rclb
rorl
data16
hlt
xor
sub
lods
lods
sbb
int3
in
in
pop
call
jle
ljmp
mov
aaa
push
lods
sbb
test
xor
out
out
sti
lea
jbe
pop
xor
pusha
outsl
xchg
jnp
sub
lahf
push
fistpl
gs
aad
xchg
push
sbb
in
enter
movsb
sub
lret
and
add
adc
call
in
cvtdq2ps
sub
call
inc
sahf
dec
and
and
sbb
xchg
and
lret
mov
and
inc
jmp
xchg
int3
iret
out
adcl
lods
insb
mov
push
adc
ds
test
test
or
push
call
dec
sbb
jle
es
sbb
dec
pushw
negl
sbb
mov
cmp
scas
xchg
lock
ffree
and
in
lds
jno
mov
dec
push
push
inc
mov
enter
daa
cmp
cmp
xchg
pop
sub
cwtl
daa
in
pop
jecxz
jns
or
pop
out
sarl
cli
cs
lods
imul
das
iret
mov
sbb
je
xor
xor
int
ss
fisubs
and
sbb
xchg
fwait
adc
mov
xor
es
cmp
mov
pushf
cs
xor
xchg
loope
addr16
lock
imul
sbb
push
adc
into
inc
lods
aaa
push
rol
sbb
jmp
ja
push
mov
lret
or
cmpsl
ret
fs
pxor
lret
jmp
aaa
push
leave
cwtl
fidivrl
inc
cwtl
mov
jnp
dec
testl
outsb
push
stos
mov
pop
cli
rcrl
rcrb
addl
shll
in
xlat
jecxz
mov
mov
notb
gs
loopne
lcall
std
cmc
or
aam
push
int
aad
mov
stos
xor
out
adc
jns
icebp
test
cltd
test
xchg
lods
inc
insl
or
cmpsb
jg
fcomip
std
stos
jmp
jle
jae
and
mov
cmp
popa
or
ljmp
stc
push
xchg
mov
lds
mov
in
jge
mov
scas
mov
dec
pandn
cmp
pop
loope
test
pop
xor
adc
aaa
push
negl
sub
mov
fcoms
icebp
jmp
inc
push
sti
adc
sti
adc
aas
sti
mov
repnz
sbb
dec
jmp
scas
inc
cmp
xchg
scas
mov
or
ret
stos
xchg
lret
xor
sub
das
or
cmc
int3
adc
subb
les
stos
xchg
push
mov
test
xchg
or
pcmpgtw
movsb
cs
sbb
push
add
xchg
and
xorl
sbb
aad
ret
sbb
and
test
push
cmp
ja
sbb
mov
add
gs
mov
mov
jnp
xchg
push
dec
enter
dec
adc
jle
xor
outsb
test
movsb
sub
dec
into
loope
mov
sbbl
call
push
adc
test
xchg
inc
xor
mov
cmp
insl
stos
xchg
jb
out
stos
je
pop
push
dec
or
push
jbe
aas
jne
inc
daa
insl
push
or
fisttpl
popf
cmpsb
addb
out
lods
sbb
push
jnp
mov
aaa
mov
mov
bound
or
adcb
adc
test
test
dec
rorb
push
dec
sub
dec
enter
enter
xor
jl
mov
and
mov
insb
dec
sub
hlt
loope
gs
movsl
out
mov
inc
aam
mov
fildll
fidivrs
mov
out
xchg
in
movl
ret
aaa
fcmove
xchg
or
insb
or
xor
add
xchg
ja
adc
mov
jno
fidivrs
cmp
push
jae
std
mov
inc
sub
jge
jbe
mov
mov
pop
ljmp
jbe
dec
mov
pop
or
mov
lods
mov
jnp
push
pop
sbb
div
jbe
adc
push
jne
mov
fwait
sarb
out
lds
or
mov
xchg
shll
lret
mov
or
xchg
sub
mov
sarl
cwtl
loopne
loop
adc
push
mov
das
mov
js
loop
loop
not
jno
pop
orl
js
xchg
ljmp
sbb
fadds
pusha
das
movsb
push
les
push
inc
pop
fldt
mov
rclb
jp
loop
pusha
js
and
repz
call
cmp
sti
sub
aam
push
pop
sub
mov
stc
xor
into
jae
shr
sbb
push
lds
and
dec
xor
je
lret
mov
je
das
push
add
push
sbb
roll
fst
sbb
icebp
fistps
xorb
mov
add
cmp
movsl
push
das
xchg
sbb
mov
jbe
jae
movsl
cmp
imul
outsb
inc
push
sbb
daa
orb
jl
fnstcw
sbb
lahf
inc
add
mov
or
dec
add
push
and
jae
cmpsl
fcoml
popa
mov
leavew
in
fcmovu
mov
mov
sti
aam
push
or
jp
and
mov
je
rolb
mov
inc
inc
pop
lahf
outsb
cli
adc
inc
lret
xor
cmp
sub
pop
fbstp
in
mov
jb
push
ja
sti
push
shr
rcl
dec
pop
mov
inc
xor
lahf
pop
mov
test
dec
fs
movsb
push
mov
adc
jmp
loope
in
mov
test
cmpb
lock
cmpsb
push
xor
test
xchg
outsl
lds
sti
mov
imul
sbb
sahf
sti
and
cmp
xchg
addr16
push
dec
std
repz
gs
nop
sbb
pop
mov
leave
sub
adc
mov
ret
mov
vmovaps
cld
sbb
adc
adc
adc
push
test
cmpsw
test
jl
push
loope
adc
gs
push
push
mov
jbe
int3
clc
xlat
enter
xchg
ljmp
addr16
lods
sbb
or
mov
icebp
vmread
dec
shll
fcmovbe
repz
xor
cmp
loopne
mov
push
or
out
jle
or
insl
and
xchg
cmp
and
and
mov
mov
inc
shlb
fcmovnb
or
xor
mov
or
bound
dec
pop
lock
adc
pop
xor
cmc
mov
cwtl
push
rorl
rorl
xchg
ret
ja
enter
movsl
adc
xor
mov
push
mov
fisubl
dec
push
insl
jle
pusha
sar
jb
mov
pop
hlt
fidivl
mov
aad
por
add
pop
sbb
lret
aam
xchg
push
lock
mov
jno
sahf
lds
mov
adc
jecxz
es
push
xor
mov
jnp
dec
dec
xchg
cmpsb
mov
andl
enter
pop
inc
rolb
xchg
fstl
fwait
repnz
vcvtpd2dqy
imul
ja
and
jecxz
js
or
icebp
dec
dec
cmp
inc
fxch
fidivl
popl
das
test
popa
fisubs
cmpsl
pushf
sub
mov
dec
je
aam
adc
mov
cmpsb
inc
jg
incb
push
outsb
or
inc
lret
or
nop
jl
dec
in
dec
mov
int
sub
pushf
dec
sbb
push
popa
xchg
stos
jne
fwait
add
push
testl
sub
popa
jmp
fwait
repnz
scas
push
sub
fdiv
sbb
lock
sub
pop
shll
xor
xor
nop
adc
pop
add
pop
jl
dec
fcoml
xlat
nop
andl
xchg
xor
repz
xor
cmp
ljmp
in
lahf
out
xchg
mov
loope
out
ja
dec
shrl
sbb
cmpb
adcb
divl
xor
cmp
or
adc
lods
inc
bound
out
jge
push
and
jecxz
and
cld
ret
mov
pop
pop
push
dec
or
mov
xor
enter
shlb
iret
mov
push
mov
subl
scas
aas
push
fwait
xchg
sbb
aam
adc
xor
daa
dec
shll
in
mov
out
addr16
jns
ja
orb
sbb
cli
and
stos
push
inc
out
shl
push
add
sub
and
mov
xchg
dec
mov
pop
faddp
mov
or
pop
shlb
cwtl
movsb
and
sub
adc
gs
cltd
out
fbld
shrb
frstpm(287
mov
mull
dec
xchg
cmove
popf
add
les
data16
pop
push
push
jo
shlb
jb
jecxz
pushf
fisttps
mov
arpl
mov
sub
clc
sub
leave
ror
sub
fs
je
loope
jo
out
icebp
xchg
rolb
mov
cli
iret
mov
ret
or
mov
jmp
out
dec
gs
into
cmp
add
lock
aas
inc
mov
loop
inc
inc
ss
nop
xlat
push
xlat
es
call
ret
idivb
mov
xchg
gs
fyl2x
mov
es
sub
xchg
punpcklwd
xor
sub
sbb
stos
stos
mov
repz
adc
in
loope
mov
jo
add
push
inc
popa
leave
mov
jecxz
push
icebp
sub
xor
lret
xchg
fucomip
es
and
stos
in
es
dec
popf
or
fucomp
das
popf
fwait
pushf
push
outsl
sbb
push
pop
decl
xor
xchg
sbb
into
add
lea
fdivrl
ja
push
mov
cmp
jno
xchg
and
push
sarb
dec
stos
out
cmpsl
add
movmskps
sbb
xor
pop
and
xchg
pop
fsubs
lcall
outsl
cmpsb
push
pusha
sbb
imul
out
or
pop
mov
inc
in
lock
cmpsl
lock
jb
test
cli
mov
int3
add
ss
mov
mov
and
aas
jnp
imul
or
lcall
mov
sbbl
mov
ret
xchg
mov
icebp
loop
push
sub
push
sub
in
fcmovb
aaa
xor
pop
cmp
jae
mov
clc
addr16
popa
jnp
and
lock
in
sarb
aaa
jo
out
lcall
stc
inc
mov
ja
inc
fsts
hlt
pop
sbb
sub
adc
int3
mov
xchg
cmpsl
mov
add
sbb
loope
inc
shll
cmp
loop
aaa
add
dec
fsub
shl
and
inc
sbb
imul
sub
and
insl
out
jns
pop
jb
sub
scas
cmp
cwtl
push
jns
cmp
mov
rolb
jb
mov
sbb
imul
inc
add
mov
clc
inc
jne
xchg
fisttpl
pop
xor
fsubr
push
pop
sub
adc
into
pop
or
mov
mov
loopne
mov
les
stc
and
mov
inc
loopne
shll
test
sub
and
jne
sbb
push
xor
push
sub
in
lea
aas
add
lock
loopne
fbld
mov
fidivl
add
jb
or
mov
fnstenv
cmpsb
mov
inc
inc
sub
je
sub
ret
mov
fdivrl
lods
xor
jecxz
and
mov
jne
insl
mov
cmpsb
inc
adc
mov
sbb
les
test
lods
dec
data16
cld
mov
pop
cltd
adc
push
sub
adc
sti
movsl
and
sbb
pop
stc
popf
add
mov
popa
sub
add
clc
dec
mov
and
fsubrl
or
mov
lock
push
cs
sbb
fsubrl
cwtl
mov
imul
mov
cmp
je
or
and
jne
add
sub
ret
cmp
or
je
jp
mov
les
out
ja
pop
jg
mov
add
xor
pop
sbb
push
inc
mov
dec
cmp
mov
pusha
imul
loope
or
addl
mov
bound
pop
or
xor
test
jns
ret
mov
or
jle
inc
mov
loopne
fdivrl
ss
call
cltd
ljmp
adcb
sub
mov
jne
data16
push
and
lods
fwait
nop
push
in
ret
out
jo
imul
cwtl
scas
xchg
insl
and
ja
stos
notb
pop
movmskps
add
or
adc
xchg
jmp
cmp
jns
adc
addr16
sub
cmp
inc
adc
in
push
int
and
and
aas
push
leave
xorl
sbb
mov
mov
cmp
pusha
dec
dec
jg
aad
add
lods
adc
mov
push
mov
stos
jae
dec
fcoml
ret
fstps
scas
and
dec
adc
js
jns
les
popa
inc
dec
push
adc
andl
jae
repz
mov
inc
shlb
mov
cmp
jg
xchg
inc
sbb
mov
shrl
std
cmp
cmp
cmp
into
push
imul
push
push
stos
repnz
cmpb
lea
add
inc
rolb
test
or
mov
cmp
fmull
fwait
cmpsl
adc
mov
sub
rcrl
jb
inc
pop
pop
popa
push
adc
sbb
popf
xchg
or
xchg
bt
test
test
into
ret
mov
call
das
xchg
aas
mov
jns
mov
adc
aam
sub
pop
in
cmpsb
arpl
test
les
mov
inc
or
jo
push
push
xchg
mov
jge
repnz
jle
jp
or
adc
pusha
adc
pop
xchg
jne
imul
fwait
jnp
cmc
adc
pushf
cmpsl
or
pop
mov
mov
sahf
mov
mov
call
jo
cmp
testl
pop
je
iret
mov
mov
jno
lds
or
adc
pop
popa
dec
lea
dec
mov
pop
lahf
addb
cld
icebp
push
inc
dec
pop
pop
repnz
pop
cltd
ljmp
add
dec
mov
ss
loop
push
ljmp
test
cmp
push
mov
mov
pop
push
and
cs
push
xor
xor
dec
out
xchg
mov
adc
lcall
int
out
mov
mov
or
push
sub
test
pop
movups
mull
mov
adc
adc
pushf
fld
inc
in
cmpsb
aas
and
mov
std
inc
sub
adc
cmp
rcll
jge
adc
and
clc
pop
outsl
jbe
push
cmp
loopne
pushf
in
cmp
push
fimuls
xchg
lods
jo
pop
addb
mov
test
or
fldt
mov
mov
and
mov
pop
inc
jo
dec
and
mov
jecxz
pop
and
flds
jl
dec
insb
inc
testb
popf
pop
imul
sub
add
xor
mov
or
dec
sbb
dec
sub
popf
inc
pop
push
cmp
adc
mov
repz
mov
add
stc
mov
insl
and
jp
ljmp
inc
adcl
adc
lods
xchg
out
pop
cmp
cmp
inc
push
shlb
sub
addb
adc
inc
pop
mov
dec
xchg
cmp
pop
adc
aad
popa
cmpsl
jge
jbe
push
xchg
push
imul
sub
pusha
popa
push
es
pop
ds
sbb
adc
pusha
xor
cmp
sub
jg
outsl
push
iret
imul
out
scas
inc
mov
or
inc
imulb
xor
lret
xor
inc
xor
insl
aaa
vmwrite
dec
sti
outsl
push
loope
jg
aam
cmp
movsl
loopne
rorb
insb
fcompl
pop
sub
pop
push
out
add
fdivl
mov
inc
jne
pushf
push
xor
sbb
cltd
jg
or
add
mov
sub
pop
iret
adc
cmpb
xchg
out
shlb
popf
sub
mov
imul
add
pop
sarl
add
mov
push
sti
cmp
arpl
ss
fcoml
pop
es
outsl
rol
jnp
xor
mov
pop
jo
mov
fisttpll
inc
sub
hlt
test
in
cltd
dec
mov
dec
repnz
rol
mov
sbb
sbb
ss
aad
lock
adc
jb
jmp
mov
xchg
lret
pushf
call
fidivs
inc
pop
int3
push
scas
adc
xchg
xchg
pop
in
daa
andl
mov
xor
jmp
movsb
shlb
xlat
les
sbb
mov
mov
push
push
dec
or
cmp
sub
fiaddl
sub
movsb
xor
test
outsb
arpl
mov
insl
clc
sbb
stc
movsl
pop
rcll
dec
das
iret
push
mov
into
sub
sbb
in
sbb
out
in
cmpsb
cmpsb
xor
fildll
mov
jbe
lods
push
inc
mov
mov
pop
cs
out
adc
cmp
cmpsl
cs
xchg
and
inc
inc
ficomps
dec
lods
nop
pop
mov
jge
and
mov
cmpsl
xor
in
mov
call
and
iret
addr16
mov
jecxz
push
ljmp
jle
test
cmpb
rorb
movsb
xlat
lret
stos
loop
dec
cld
fsub
mov
dec
pop
push
dec
addl
gs
pusha
push
mov
lcall
int
and
push
push
pop
pushf
ljmp
fmul
mov
jns
aad
shrb
inc
mov
stc
aad
lahf
add
in
arpl
lods
iret
popa
js
inc
mov
mov
outsb
sbb
daa
std
loope
insl
adc
mov
sub
push
mov
cmp
ret
stos
add
mov
mov
test
push
insb
and
jae
mov
and
pop
addb
mov
imul
pop
ss
faddl
cmp
jg
cmp
xchg
adcb
jmp
mov
sar
mov
xchg
imul
fldenv
ret
add
repnz
fs
xor
and
mov
jne
pop
rolb
mov
dec
inc
cmpsb
inc
add
js
mov
loop
push
imul
mov
daa
pop
out
mov
iret
jl
movsl
test
pop
shll
cld
inc
popf
inc
adc
push
stos
int
xor
lahf
cld
sarl
fdivs
sub
adc
push
or
cmp
push
stos
movsl
lods
add
adc
fistl
and
pop
fmull
pop
movsb
sar
adc
bound
rcrb
bound
adc
lds
sbb
int
jo
fistps
sub
xorb
cltd
fwait
sub
call
ds
and
adc
mov
rcr
push
pop
movsl
and
les
xchg
jno
cmp
jns
mov
sub
cmp
sbbl
jo
rcl
insb
leave
push
add
mov
mov
sub
das
add
mov
stos
mov
mov
push
sbb
lea
and
ljmp
ficoml
xor
xchg
sub
mov
xor
bound
inc
aas
inc
xorl
push
sbb
sbb
test
loop
sbb
lds
xlat
out
sbb
adc
aad
cli
add
lods
aad
test
push
and
dec
mov
xchg
gs
out
inc
scas
push
jb
out
test
xchg
add
or
in
xor
in
sahf
andb
fildll
xchg
cmp
add
jnp
jo
lret
stc
jno
inc
mov
add
pop
jnp
std
inc
pop
xor
lahf
cmp
pushl
lret
lret
in
mov
pop
add
lods
lret
lret
xchg
adc
or
and
push
inc
jo
cmp
adc
push
incl
jns
adc
cld
sub
jecxz
icebp
mov
xchg
pushf
xor
das
fbld
clc
mov
pop
punpckldq
in
dec
xchg
mov
cmp
inc
testl
mov
or
pop
mov
fwait
test
add
mov
xor
pusha
dec
inc
ret
idivb
mov
xor
lea
inc
bound
repnz
fcmovnb
js
scas
dec
out
add
xchg
pop
lods
pop
rorl
dec
out
xlat
shll
cmp
aas
push
pop
in
mov
sub
and
sti
jg
in
and
lods
enter
lods
pop
test
arpl
shrl
mov
ss
icebp
into
jmp
loope
sbb
pop
sahf
cmpsb
rcrb
mov
jmp
movsl
aas
add
sub
push
dec
iret
pop
mov
inc
out
push
ror
mov
aaa
add
out
testb
or
fldenv
push
insw
or
jb
out
std
sarl
data16
lea
jp
int3
add
aaa
movsb
out
shrb
sbb
jecxz
dec
pop
lods
sub
inc
sbb
lcall
xchg
testl
adcl
push
pop
mov
jnp
sbb
faddl
add
icebp
xchg
call
mov
cmpsl
push
je
cmpsl
inc
dec
xchg
cwtl
cs
and
cmp
sti
rcl
out
out
mov
push
dec
int
into
fcompl
and
jae
pop
and
cmc
fnstsw
ret
push
cmp
inc
xchg
enter
je
xor
sub
xorb
lods
push
sarl
das
rcl
adc
pop
lahf
dec
jns
jb
xchg
leave
lea
pop
or
push
sub
std
adc
jo
inc
fdivrl
sti
ljmp
movsl
or
inc
out
sub
scas
jg
ret
scas
outsb
push
imul
lahf
mov
enter
lret
xor
scas
hlt
movsb
or
mov
fcoms
adc
cmp
arpl
xor
call
scas
inc
out
loopne
lock
mov
push
sbb
dec
popa
adc
fsubrl
mov
and
or
mov
sbb
xor
stos
dec
ljmp
sub
sub
inc
dec
popf
mov
push
jo
fnstenv
leave
scas
inc
mov
in
int3
inc
leave
scas
mov
ds
cmp
sets
push
cmp
jns
jmp
les
mov
pusha
dec
cli
stos
sub
aaa
int3
stos
fs
mov
in
mov
push
imul
cmp
inc
cmp
adc
and
cli
les
and
pop
repnz
mov
test
sbb
jl
add
leave
stos
mov
inc
rclb
mov
sbb
subb
jne,pt
ret
repnz
rcll
pop
lahf
push
int3
dec
pop
jne
rcrb
dec
ds
mov
mov
imul
jbe
xor
into
mov
bound
pop
mov
xchg
jno
fstpt
adc
or
cmp
lds
mov
mov
inc
add
mov
xor
shl
add
mov
andl
aad
jns
stos
jno
jle
cmp
pop
clc
mov
iret
iret
das
xchg
mov
in
sub
adc
xchg
mov
lea
out
rcrb
aaa
inc
mov
xor
push
xchg
push
sbb
mov
mov
mov
cmp
push
das
insb
test
mov
mov
adc
test
ret
dec
in
repnz
adc
fucomi
lods
xchg
paddusw
adc
or
inc
xchg
sbb
imul
jmp
push
mov
cmc
add
mov
inc
cmp
or
test
jp
inc
addr16
dec
and
pop
add
and
sub
sub
sahf
mov
std
lea
call
clc
and
sbb
jmp
mulb
out
push
call
sbb
adc
xchg
mov
push
enter
xchg
xor
lea
movsl
sub
icebp
or
add
ret
jb
rorl
push
cmp
frstor
xor
mov
sub
cmp
jp
je
push
or
les
int
mov
xchg
jmp
loop
sti
dec
and
cmp
loopne
cltd
out
lcall
add
dec
es
pop
mov
movd
scas
xchg
sub
neg
adc
cwtl
add
sbb
cli
lcall
adc
ds
xlat
xchg
iret
ret
outsb
fstpt
movl
mov
jno
push
xchg
rcl
jne
iret
sbb
sahf
nop
inc
sbb
std
mov
les
mov
inc
jecxz
jecxz
addl
out
pop
daa
rclb
lods
mov
int
xor
scas
gs
cmp
daa
in
mov
jne
lods
dec
add
mov
mov
or
xor
sub
xchg
cwtl
pop
xor
cmpsl
jb
popf
lret
inc
push
xchg
in
mov
sbb
push
inc
out
xchg
loopne
lods
stc
sub
cmc
push
jle
xor
cwtl
jle
loope
stos
inc
movsl
push
addb
dec
adcl
lock
xchg
in
add
sub
fbstp
stc
cmp
push
sub
int3
andnps
xchg
mov
sub
test
or
xor
das
push
imul
xor
fnsave
push
mov
or
repz
or
inc
adc
or
sub
cmpl
insb
movsl
lods
xchg
sub
push
int3
out
sbbl
xor
and
mov
cmp
mov
push
adc
cmp
or
adc
andb
xor
arpl
in
das
addl
jno
mov
repz
cli
pop
sub
movsl
dec
sub
in
xchg
dec
sub
roll
push
repz
adc
sbb
dec
dec
jnp
outsl
jl
mov
cli
sub
imul
fimuls
add
enter
leave
mov
fcmovu
xchg
mov
adc
xchg
and
test
setge
add
inc
sahf
clc
repz
jge
xor
ret
push
out
mov
notb
mov
push
cmc
jnp
mov
mov
pop
and
lods
mov
cld
lock
mov
dec
fstpl
cmp
mov
mov
and
lahf
jb
mov
or
mov
out
cmpb
mov
mov
fldenv
mov
jg
inc
mov
repz
sbb
jno
xor
pop
mov
roll
sbb
push
stos
push
imulb
and
cs
and
inc
js
in
xchg
jmp
add
sub
adc
push
mov
es
mov
xchg
sub
mov
fwait
sahf
inc
outsb
cmpsb
enter
outsl
out
in
pop
je
add
rcr
push
push
pop
or
pop
jo
xchg
xor
xchg
fcmovnbe
je
xor
and
or
cmpsl
xor
addr16
xchg
jnp
mov
test
pop
mov
fidivs
cmp
lock
ret
add
dec
add
cmc
and
es
daa
xchg
insb
int
shlb
pop
mov
roll
rolb
mov
aaa
push
stc
addr16
pop
cld
ja
jmp
add
cmpb
in
cmpsb
aaa
push
xchg
insl
shll
cltd
scas
test
dec
movsl
out
pop
cld
mov
and
cmp
add
stos
mov
xchg
or
xor
jb
ss
insb
mov
pusha
cmp
adc
sub
and
repnz
idivl
cmp
push
ja
xchg
pop
xor
sbb
aaa
lods
mov
mov
inc
push
push
sub
mov
push
movsl
lods
lea
loop
aaa
add
mov
jecxz
es
or
stos
test
push
scas
dec
dec
sbb
cld
movsl
xorl
sar
mov
or
jbe
in
push
adc
enter
mov
push
and
gs
mov
jbe
cltd
in
and
mov
rcl
dec
dec
sbb
iret
stos
in
push
testb
fildl
gs
lahf
lds
mov
xlat
fnsave
lahf
sub
inc
subb
and
jno
lods
jb
jle
cmp
stc
addr16
cmpb
lcall
mov
push
or
ljmp
mov
pop
notb
push
int
mov
or
stos
out
gs
sbb
lds
mov
mov
xor
lods
fwait
dec
xchg
divl
mov
jbe
lret
int
cmp
pop
cs
mov
sub
jmp
shl
jb
dec
xor
add
lahf
mov
pop
inc
mov
sbb
pop
mov
aam
enter
test
and
push
pop
pop
adc
fwait
and
pop
inc
cltd
inc
push
push
add
mov
dec
or
loope
jp
mov
inc
popf
adc
lds
mov
dec
pop
or
jg
es
data16
cli
sub
pop
pop
cli
das
add
mov
pusha
push
pop
shl
movsb
push
inc
inc
mov
movsb
inc
sub
cmp
fwait
lret
mov
or
sahf
mov
adc
mov
mov
shll
movsl
inc
add
shlb
xorl
shlb
and
insb
push
lods
scas
mov
jb
or
fs
lret
mov
pop
arpl
je
push
xchg
xor
xchg
mov
and
call
inc
jns
sub
xchg
xor
inc
pop
jge
xchg
ret
lock
inc
mov
loopne
leave
pusha
add
sbb
out
add
cmpsb
and
push
stos
add
data16
mov
sbb
jnp
fldl
daa
adc
mov
mov
mov
or
rcll
pop
out
fnstsw
in
jg
pop
pop
mov
lret
jnp
push
call
pop
xor
fstl
cmpsb
cmp
es
pop
filds
aam
mov
jo
mov
fs
nop
jnp
cs
or
nop
mov
mov
and
dec
shrl
cld
mov
lods
mov
push
push
rorb
in
jecxz
dec
loop
test
inc
xchg
lods
lods
subb
push
gs
mov
dec
sbb
xchg
xor
jae
in
es
stc
sub
mov
in
sub
hlt
jns
fcmove
and
sub
mov
sub
stos
sub
cmp
mov
aam
and
jbe
pop
test
call
xchg
pop
adc
lea
popf
movsb
or
dec
cs
nop
cltd
mov
mov
out
sub
test
add
or
js
movsb
out
jno
dec
ror
xor
fcoml
cmpsl
loop
iret
les
jbe
cmp
adc
das
dec
das
xor
jp
lcall
push
lret
pop
popf
dec
xchg
mov
cmpsb
scas
lods
int3
shlb
lods
pushf
xor
ret
sbb
sbb
aam
xor
add
xchg
mov
xor
cwtl
cld
xchg
and
jmp
mov
das
xchg
mov
add
arpl
cmp
jle
or
sti
jne
inc
in
and
es
js
ljmp
out
adc
ja
in
gs
mov
cli
dec
sub
or
sbb
sbb
fwait
popa
imul
and
psllq
push
inc
jmp
xor
out
outsb
sbbl
cld
lcall
cld
mov
mov
jns
into
mov
inc
sahf
int3
lea
lret
sbb
int
or
push
lea
xchg
mov
lods
rcll
sahf
rol
xchg
sbb
or
xchg
cmp
push
iret
and
out
inc
xchg
cmp
lcall
mov
push
mov
mov
dec
xchg
call
xchg
mov
insl
pop
filds
dec
inc
add
shrl
int
je
sub
shl
jne
mov
ljmp
and
hlt
push
sub
inc
les
mov
inc
cmp
dec
ret
xor
xor
inc
inc
loope
arpl
sbb
add
jnp
xchg
xor
lret
test
es
hlt
pusha
cmpsb
sub
ds
aad
push
imull
out
push
add
lods
ss
xor
les
push
shl
iret
jae
js
cmpsl
lcall
push
dec
dec
cmpsl
lea
inc
add
pop
push
mov
mov
jne
push
stc
outsl
jae
adc
stos
subl
pop
scas
cmp
cs
repnz
pushf
sub
cmpsb
pop
add
adc
ret
mov
shrl
fildl
int
inc
xchg
not
adc
pop
pop
loop
xchg
std
jae
sahf
je
repz
ds
adc
inc
push
and
lock
pop
cmpsl
mov
adc
inc
mov
loop
aaa
andb
fildll
nop
paddusw
out
dec
xchg
ret
add
adc
mov
je
adc
pop
test
lret
je
adc
jl
ficompl
or
lcall
jae
popa
outsb
push
ret
add
pop
lods
aad
sbb
lret
sahf
pop
and
aam
add
ret
sbb
jae
mov
lahf
in
dec
inc
jmp
jne
sarb
roll
iret
fs
xchg
sub
and
adc
loope
inc
mov
pop
push
and
mov
call
push
inc
fmul
popf
pop
or
sub
lret
pushf
mov
dec
xchg
mov
imul
mov
sub
and
add
pop
js
and
jg
add
sub
fucom
call
or
ljmp
dec
jns
and
in
and
repnz
xchg
addl
jnp
xor
dec
mov
std
scas
lds
cmp
push
mov
xor
jp
sbb
xchg
out
lods
insl
test
shrl
add
xchg
and
xor
test
inc
mov
sub
jns
imul
cmpsl
nop
lret
daa
cs
popa
xchg
jne
xor
mov
lods
xchg
push
fs
xchg
stos
test
mov
bound
or
xor
shrb
cmpsb
add
mov
out
xchg
mov
cmp
repz
movsb
pop
rorb
inc
enter
in
imul
mov
iret
in
sbb
movb
pop
mov
stos
xchg
mov
jo
lcall
rcr
sarb
addr16
imul
pushf
add
lds
xor
fs
ja
outsl
xchg
jbe
push
mov
ret
faddl
int3
mov
inc
mov
adc
dec
xchg
push
pop
movsl
test
mov
lods
add
ljmp
test
adc
movsl
fbstp
mov
in
and
xorl
inc
xchg
pop
sarb
movsb
mov
adc
jp
push
mulb
in
shrl
adc
jae
mov
fnsave
inc
jg
fdiv
or
push
or
dec
lea
or
fwait
lods
cmp
pop
sbb
nop
push
cmpsl
fwait
nop
shlb
jg
ror
push
scas
cmpl
push
mov
pop
mov
or
out
cld
xor
dec
mov
inc
icebp
pop
into
neg
pop
pop
mov
icebp
je
mov
in
jecxz
loope
inc
mov
ss
and
lret
test
jns
xorl
scas
ja
fwait
rol
stos
test
insl
sbb
push
xchg
mov
addr16
and
xchg
je
sbb
sub
pop
leave
mov
push
jge
je
sbb
mov
sbb
inc
sbb
mov
mov
inc
aaa
aaa
sub
leave
lcall
jecxz
std
jbe
pop
cs
arpl
loop
adc
int
xor
jbe
xchg
pop
hlt
lret
lods
es
xchg
jl
pop
mov
and
pop
push
push
psllq
insb
loopne
jb
ja
fdivs
jp
jb
mov
std
adc
test
xchg
push
mov
in
fcmovu
mov
movsl
fst
cli
cld
dec
hlt
and
mov
push
out
mov
repnz
test
fldl
pop
pop
cmp
dec
sub
jecxz
add
sub
xchg
repz
inc
mov
xchg
repnz
fbld
mov
outsl
stc
xor
jb
daa
mov
gs
mov
cmc
adc
push
scas
cld
in
sbb
rolb
pop
std
sti
push
jg
jns
sarb
imull
sub
pop
adc
sbb
loopne
jnp
pop
and
jge
dec
int
pop
xchg
sbb
stos
inc
push
adc
pop
test
testb
cmc
test
repz
mov
mov
cmpsl
adc
mov
sub
jne
xchg
gs
add
rcl
in
push
addb
je
insl
sbb
out
or
loop
or
xchg
pop
cmp
xchg
sub
icebp
sbb
sub
subl
cmp
faddp
jl
fldl
jb
xor
push
add
test
andb
mov
imul
ds
les
cmc
bound
jns
and
push
mov
mov
mov
in
stos
xor
movzbl
jge
pushf
xchg
jmp
insl
cmp
push
mov
lds
mov
out
cli
stos
and
mov
shl
and
inc
aas
enter
jmp
sbb
dec
cmpsb
cmpsb
std
cmp
or
push
push
push
loop
popf
push
outsb
mov
xchg
inc
scas
std
sub
aaa
jae
imull
fs
xchg
xor
cld
sbb
lahf
pop
jns
pop
jo
add
mov
call
cmp
into
pop
push
cmp
inc
push
mov
insl
rorl
cmc
xor
mov
push
test
scas
adc
aad
mov
cmpsl
fldt
clc
inc
lcall
push
iret
jno
mov
in
lret
mov
int3
inc
stos
cmp
nop
faddl
add
clc
loope
mov
in
repz
add
fiadds
arpl
dec
jo
cmpsb
sahf
imul
icebp
push
sbb
inc
sub
ja
pop
arpl
ss
stc
das
test
roll
or
xchg
popa
pop
stc
mov
xor
xchg
testb
repnz
mov
xchg
cmp
pushl
clc
test
fdiv
add
stos
pop
enter
fistps
ss
stos
inc
jge
pop
mov
int3
jnp
mov
int
jecxz
cmpsl
add
pop
jae
push
ficoms
test
cmp
jle
inc
jmp
or
dec
pop
jnp
dec
mov
sarb
call
or
repnz
mov
sub
loope
popf
jmp
dec
imul
testb
dec
inc
ss
mov
cmpsl
xlat
cmpsb
fldl
cmp
dec
loop
fdivs
popf
dec
cltd
add
stc
jmp
fsubr
jl
pop
test
rcrb
stos
push
xor
pop
aas
dec
hlt
loop
dec
cmpl
jnp
fcompl
test
ret
lds
and
stc
js
aam
or
mov
in
adc
or
add
mov
ds
lcall
aaa
inc
add
pop
lods
lcall
pop
cmp
and
jg
cmp
in
inc
jne
xor
xor
ror
jmp
pop
ret
test
sbb
pop
lret
mov
inc
push
jp
stc
scas
or
sub
jbe
add
sbb
outsl
out
gs
ljmp
fcoml
add
cmp
jnp
stc
popa
or
shll
subl
xor
fbstp
cmpsl
les
mov
aaa
dec
mov
in
adc
sbb
imul
cmp
adc
test
sub
dec
and
sub
ftst
jne
cmp
push
and
insb
lea
mov
mov
repnz
dec
mov
fwait
sub
and
aas
cmp
ret
xor
sbb
pop
pop
arpl
pushf
jo
mov
mov
and
cmp
mov
pop
int
jns
fwait
and
shlb
in
cld
test
ss
scas
das
sbb
adc
mov
rorb
call
jl
mov
fcmovu
sar
cmp
cmp
xchg
and
push
enter
lret
inc
fisttps
xchg
cmp
pop
push
dec
mov
pop
lods
inc
fwait
icebp
pop
or
pushf
je
out
dec
mov
add
scas
mov
xor
xchg
aad
sub
xchg
leave
jno
lcall
inc
mov
inc
out
pop
xor
sbb
mov
loop
nop
and
dec
mov
cwtl
imull
cli
stc
pop
arpl
mov
cmp
push
aaa
xor
aaa
inc
pop
xchg
test
ficompl
pop
xchg
or
cltd
addb
insl
pop
fdivl
xchg
test
pop
dec
repnz
lock
xchg
mov
aad
daa
cmp
sbb
cmp
out
out
adc
sub
adc
pop
pop
jge
fsubrl
dec
sahf
ja
jo
xchg
adc
iret
pop
lods
adc
jecxz
push
cmc
dec
inc
dec
and
insl
jne
push
pop
imul
mov
aas
lods
sub
xchg
jns
or
inc
test
stc
add
xor
pop
lods
jae
and
ja
outsl
adc
in
sbb
dec
popa
jl
sarl
mov
mov
ja
inc
xchg
movsl
jg
les
les
cmp
pop
push
push
ljmp
jo
sbb
icebp
xor
insl
dec
xchg
sub
call
and
popa
or
out
or
cmpsl
cmp
jne
jmp
addr16
out
mov
dec
or
stos
outsl
fildll
jl
sbb
data16
pop
push
cs
or
loop
mov
cltd
inc
sub
mov
or
add
mov
insl
fwait
in
jae
sub
cmpsl
loop
sbb
pop
aam
and
mov
pop
inc
pop
push
in
pusha
jbe
mov
or
or
cmc
xchg
jns
fld
mov
push
lcall
pop
lods
dec
push
adc
fmull
mov
xor
ljmp
add
mov
inc
scas
add
dec
mov
pop
push
xor
xor
dec
clc
in
sahf
jo
cs
and
out
ret
cltd
movmskps
xchg
fstl
and
iret
add
pop
popa
push
pop
fstpt
jns
push
mov
mov
sub
and
ds
cmpsl
repz
dec
lods
loop
add
loop
loop
jmp
data16
push
pop
sar
jge
cmp
arpl
adc
loop
push
popa
test
es
jno
inc
fnstsw
mov
xor
int3
jb
loope
mov
and
and
gs
int
ret
inc
push
pop
pop
stos
jb
jbe
popa
gs
mov
clc
outsb
lret
cmp
cld
lcall
xor
ds
loope
enter
aas
sub
or
lret
ss
add
pop
jl
push
cmpsl
lret
je
cld
imul
cmp
sarb
cs
aaa
xor
add
notb
sub
jl
scas
push
test
inc
outsl
mov
out
push
pop
insl
xchg
cmpsb
jmp
jb
repnz
sub
dec
shl
notl
leave
pop
adc
insl
and
outsl
je
jns
fistpl
adc
xor
mov
pop
or
jns
or
test
js
out
mov
mov
adc
mov
sti
lds
mov
mov
out
lods
push
es
das
jp
sbb
hlt
les
scas
pop
adc
cs
arpl
stc
xchg
sbb
faddl
mov
push
insb
inc
neg
adc
push
mov
das
das
xorl
arpl
pop
add
rcll
add
mov
lds
or
or
cltd
stos
push
stos
jge
test
daa
cwtl
notb
push
imul
mov
gs
inc
jns
mov
sbb
cld
int
sbb
jmp
aad
mov
push
mov
shlb
scas
fstps
cmpsb
mov
cmp
xchg
xchg
inc
push
xchg
dec
outsb
xor
ret
in
mov
or
roll
lahf
clc
scas
test
adc
inc
mov
xchg
mov
jmp
fidivrs
out
mov
ret
ficompl
dec
sub
or
push
xor
popa
pop
xor
or
test
out
cmp
mov
dec
aaa
lcall
and
outsb
rorl
mov
push
andb
xor
and
stos
pop
ja
cmp
outsb
push
jp
test
push
mov
lods
aad
cmpsl
pop
mov
adc
fincstp
arpl
mov
push
addl
cmp
mov
add
mov
cmp
orl
xchg
rcll
cltd
or
or
jnp
sti
jne
add
mov
pop
pushf
notb
jmp
pop
jge
stos
ret
sbb
popf
sub
shll
popf
push
popf
out
xor
jae
jle
repnz
testb
adc
stos
pusha
rolb
out
push
or
iret
ret
int
dec
ror
push
mov
push
add
jg
mov
sbb
addr16
test
stos
sbb
push
xlat
sub
sti
lahf
push
outsl
and
std
mov
nop
or
popa
adc
or
jnp
inc
cld
aas
mov
inc
push
jl
mov
xchg
js
xor
pop
jno
mov
imul
into
ja
sbb
xor
mov
nop
cltd
arpl
rcrb
not
or
lcall
cmc
jno
adc
aas
dec
jecxz
push
aaa
push
cmpsl
jl
jge
jne
les
ja
scas
js
gs
push
iret
clc
pop
fiaddl
dec
sub
pushf
add
cwtl
js
inc
xchg
ficoml
aaa
cmp
nop
sbb
dec
lock
scas
mov
add
adc
pop
cmp
mov
cld
pop
xchg
and
sub
jl
pop
sbb
xor
adc
xor
ret
popa
inc
mov
add
ficomps
and
outsl
inc
insb
push
pop
mov
cmp
ja
call
pop
movsb
in
dec
mov
test
cli
inc
fdivl
or
sbb
int3
popa
pushf
repnz
dec
es
mov
ds
xor
sub
jmp
out
das
add
scas
xor
adc
aas
xor
xorb
mov
add
jecxz
movsl
lds
insb
or
out
call
xchg
cs
jl
sub
xchg
pop
sub
cmp
push
adc
jb
add
fidivrs
sahf
nop
ds
jle
mov
lds
push
mov
xlat
ret
movsb
mov
ljmp
icebp
dec
ja
mov
ds
mov
pop
popa
std
cwtl
call
cld
maskmovq
divl
loopne
outsb
jo
xchg
ret
pop
aam
out
enter
dec
push
mov
or
in
insl
adc
pop
mov
cmpsl
push
in
push
mov
jmp
test
cli
ret
mov
lret
jmp
pop
addr16
mov
fmull
mov
inc
mov
out
fs
dec
in
add
dec
adc
inc
pop
jle
lret
xchg
add
cld
popa
xor
cld
inc
stc
and
fs
push
inc
push
stos
push
adc
cmp
clc
lret
xchg
dec
out
std
pop
repnz
cmp
push
or
cwtl
dec
jae
xor
xchg
bound
jo
jo,pn
stos
xor
adc
push
sbb
nop
inc
ja
sub
sub
flds
out
std
insb
mov
pop
imul
fisubs
faddl
stos
mov
mov
jae
in
xacquire
mov
in
push
cwtl
mov
mov
dec
lock
dec
sub
or
sbb
fldcw
sbb
mov
inc
adc
jle
in
sbbl
lret
test
cmpsb
mov
pushf
mov
mov
push
adc
push
js
mov
jmp
lahf
push
cmc
pop
in
dec
pusha
sbb
push
add
loopne
ret
pop
adc
mov
push
mov
out
mov
and
inc
and
test
pushf
push
lss
aad
sub
lock
pop
cmpsl
js
test
jns
or
mov
jae
pop
idivb
push
jne
sbb
loop
sub
les
fcomi
pop
and
or
pop
xchg
lret
or
mov
jl
movsl
xor
and
adc
xlat
xor
cmpsb
or
push
and
or
lods
int
mov
mov
sub
xchg
aaa
je
inc
xor
mov
ja
dec
sub
dec
movsl
sub
into
sub
or
mov
stc
and
push
shrb
pop
jg
fbstp
sbb
xchg
cmpsb
test
scas
pushf
mov
dec
mov
jo
adc
aas
jae
mov
dec
jg
and
jb
invd
inc
decl
sbb
mov
adc
add
xchg
adc
in
addr16
inc
mov
xchg
repnz
cli
fistl
mov
jnp
flds
fisttpl
add
out
pop
rcr
mov
cli
or
gs
ret
repnz
dec
stos
mov
les
loope
out
dec
dec
xchg
clc
pop
test
xchg
icebp
dec
mov
test
je
mov
lods
out
xchg
pavgb
aas
mov
pop
pop
hlt
movsb
sub
lods
inc
sbb
cld
in
xor
mov
loope
out
aam
testb
jnp
loop
insb
dec
fisubl
mov
sti
push
xor
jle
or
or
xchg
jg
sbb
push
int
pop
adc
push
cmp
xchg
ja
shlb
aam
adc
pop
jmp
icebp
and
cmpsb
cmp
push
fnstcw
ret
mov
mov
xchg
lock
push
rorb
dec
dec
mov
mov
xchg
pop
push
loope
lds
repz
push
xchg
call
xchg
xchg
scas
mov
jnp
push
xchg
or
pop
ret
xor
mov
sub
lret
mov
lcall
scas
mov
push
pop
rolb
jo
lret
fstpl
movsb
movsl
fstl
pop
lcall
cmpl
sbb
out
cmc
sbb
fstpt
rcr
mov
inc
sbb
dec
jne
and
push
js
es
push
mov
aaa
pop
ja
jmp
jnp
scas
in
int
or
mov
xchg
jne
and
cmp
mov
sti
out
sti
call
movsl
mov
jmp
xlat
adc
xor
ds
cmp
ds
aam
imul
cld
movsl
insb
mov
push
rcrl
rclb
xor
cld
fldt
scas
add
push
andb
cld
shrl
xchg
xor
insl
and
ror
add
nop
mov
cli
jle
out
jb
dec
negl
in
mov
cltd
test
pop
roll
dec
mov
out
mov
push
jmp
mov
fidivs
sbb
test
push
add
push
sbbl
js
ljmp
or
xor
cmp
gs
inc
lret
pop
lock
inc
test
gs
inc
and
sub
in
lods
jo
int3
mov
shlb
in
sbb
push
daa
mov
inc
mov
not
lods
mov
sub
mov
test
mov
and
jne
das
fmuls
mov
push
fnstsw
callw
jle
mov
push
mov
enter
mov
ja
push
adc
jo
pop
and
negb
push
jecxz
cmp
stos
lret
dec
adc
cwtl
cmpsl
addr16
shrl
loop
in
fwait
int3
fs
in
cmp
arpl
loop
xchg
push
loop
in
xchg
pushf
pop
add
xchg
lods
int3
stos
adc
adc
insl
leave
cmp
ret
inc
cmp
orl
fucomi
mov
clc
ror
ss
jecxz
xchg
pop
xlat
notl
jmp
pop
jge
mov
bound
jmp
dec
into
sbb
cmp
lds
das
sbb
add
inc
rcrl
inc
pop
pop
jne
popa
fucomp
add
stc
insb
or
js
xchg
push
out
xor
stc
xor
push
xor
xchg
jle
jp
adc
nop
rclb
outsl
push
mull
aad
mov
in
pop
and
cmp
fisubl
inc
iret
int3
xor
test
mov
cmp
imul
sub
pop
jae
push
fistl
push
pop
lcall
xor
jg
jne
fists
pop
mov
iret
or
movsl
roll
in
xchg
subb
and
jo
mov
add
cmp
or
imul
cmp
push
sbbb
fnstcw
pop
sbb
or
imul
shrb
mov
mov
mov
mov
push
cmp
sub
das
fnstcw
int
int3
lea
fldl
lahf
int3
mov
sbb
sub
or
xchg
test
std
cmp
sbb
push
push
cmc
in
xchg
les
dec
orb
nop
jge
or
mov
stos
push
testl
pop
arpl
and
dec
cltd
or
add
je
xor
outsb
stc
mov
fwait
cmp
mov
xchg
xlat
js
ret
popa
pop
pop
push
ljmp
pop
subl
sbb
inc
add
in
int3
push
je
repnz
mov
pop
mov
push
xchg
add
in
rorl
sti
fiaddl
lret
pop
xlat
mov
in
test
ja
dec
mov
mov
or
xor
fidivrs
cs
loope
pop
pop
sub
cmc
and
xchg
inc
insl
stos
rcl
bound
xchg
hlt
and
sbb
push
fld
jl
repz
xlat
mov
cmc
repnz
test
and
xchg
pop
mov
add
lret
sub
and
inc
cmp
imulb
jg
adc
xchg
arpl
ds
lahf
aas
out
mov
mov
push
je
sub
fimull
cmc
mov
loop
mov
addr16
or
mov
adc
dec
push
out
sbb
test
sub
jb
dec
adc
xchg
sub
pushf
je
leave
cs
cmp
or
jno
push
ds
pop
sbb
adc
dec
mov
xchg
mov
xchg
or
scas
fstl
sub
jl
cmp
jo
xor
xchg
test
push
sub
in
in
imul
lret
or
notb
dec
decl
stos
pop
aam
test
lods
mov
mov
loopne
inc
mov
aad
lds
sbbb
or
and
fwait
cld
xlat
dec
jb
ret
mov
lret
ss
int3
fdivrs
push
xor
dec
cmp
push
jge
sub
sub
mov
fldl
jo
insb
push
aad
adc
in
inc
mov
shl
dec
mov
xchg
data16
popf
adc
cmp
ja
push
pop
jae
xchg
cmp
jnp
arpl
sbb
sarl
sbb
push
pop
jp
mov
mov
jge
mov
mov
sbb
jbe
mov
inc
adcl
in
and
jmp
sbb
xchg
or
adc
sub
sbb
jmp
pop
pop
or
jecxz
xchg
repz
mov
call
dec
je
test
cli
mull
mov
fmul
fadds
dec
inc
ljmp
xchg
fadds
and
dec
icebp
or
sub
scas
aas
js
stos
mov
scas
cmp
inc
loopne
imul
mov
mov
mov
fldcw
mov
pushf
and
out
inc
dec
movl
pop
ds
fninit
pushf
push
les
adc
icebp
movsl
push
push
xchg
jl
xchg
ds
lds
pop
repnz
fdivs
into
test
scas
out
push
adcl
lds
xchg
add
stc
test
push
cmp
lods
jno
and
push
jp
imul
push
sbb
mov
and
dec
pop
mov
sub
jbe
ret
cmp
in
pop
test
out
mov
jb
mov
adc
fs
push
pop
shrl
ljmp
repz
loop
loopne
iret
pop
mov
lods
push
adc
add
roll
mov
add
adc
cmp
xor
lcall
jl
pop
daa
hlt
data16
add
push
sti
xorl
mov
cld
mull
or
xor
dec
imul
int
iret
add
dec
dec
ret
pusha
xor
andl
out
sahf
sbb
or
ds
jl
bound
vmaxps
mov
mov
mov
pushf
or
sbb
pop
xchg
nop
xchg
aad
sub
jge
jns
outsl
outsb
sahf
pop
movsl
repz
lods
stos
xor
bound
lret
or
xlat
addr16
cwtl
xchg
xchg
out
cmp
fs
mov
arpl
repz
popa
out
subl
pop
fwait
mov
sbb
xchg
xor
mov
in
add
or
push
jl
out
mov
insb
leave
sub
pushf
cmp
daa
into
and
fucomi
push
popa
add
dec
bnd
es
sbb
push
xchg
adc
or
fsts
xchg
push
push
pop
jo
int3
mov
mov
dec
shl
sub
mov
fs
loopne
pop
mov
adc
cmp
movl
inc
pop
into
add
sub
xlat
inc
ret
stos
mov
out
push
sub
jne
mov
aam
dec
fstp
rcll
sahf
dec
and
icebp
push
mov
hlt
loope
inc
dec
pop
jbe
dec
ja
fadd
ds
inc
es
in
push
loopne
movsl
xchg
sub
adc
shr
pop
xorb
dec
popf
or
xor
xchg
inc
lds
and
bound
cmp
test
lret
test
xor
mov
push
adc
jo
mov
scas
mov
add
dec
mov
or
je
jmp
es
jg
imul
mulb
adc
pop
inc
filds
sbb
stos
add
inc
mov
into
arpl
je
sub
xor
mov
sbb
fisttps
in
sbb
stc
mov
xchg
and
inc
es
xor
fs
pop
movsb
dec
lods
push
lcall
hlt
add
inc
pop
mov
xchg
aas
je
mov
add
addr16
push
cmp
clc
xchg
cmpsl
hlt
pop
addr16
inc
add
call
inc
mov
sbbl
and
cld
mov
mov
iret
jbe
mov
and
cwtl
aad
imul
pop
mov
insb
push
gs
mov
adc
add
test
and
test
add
jno
inc
xchg
inc
ret
adc
test
sub
cmp
adc
inc
xchg
fstps
mov
cmp
imul
inc
lock
bound
pop
ds
pop
cld
daa
add
cs
bound
dec
lcall
cmp
loop
leave
or
dec
out
pop
sub
cmp
inc
cmp
jb
lods
adc
cltd
dec
lahf
insl
or
inc
add
xchg
jp
stos
mov
xor
mov
pop
sub
push
rolb
mov
inc
xor
sahf
cld
sbb
mov
inc
or
das
stc
popf
rcll
pop
loope
or
mov
mov
pop
adc
lea
lods
mov
popa
test
cmc
fwait
add
mov
add
fnstcw
mov
scas
xchg
call
and
popf
xchg
xchg
icebp
iret
in
lock
ja
jg
xlat
inc
fidivs
and
cmp
mov
sbb
dec
and
out
inc
push
jne
aad
dec
or
sarl
aad
mov
dec
imull
add
fcomp
pop
pop
jno
cmpsl
ss
loopne
cwtl
pop
js
add
cmpsl
pop
inc
xor
lcall
insl
adcb
loope
mov
push
inc
andl
mov
push
test
outsb
dec
and
fisubrs
jmp
cmp
imull
fists
mov
movl
sub
icebp
fisubrs
cld
push
mov
lea
jo
mov
lods
ljmp
xchg
outsb
xchg
dec
js
mov
ret
cmp
js
fldl2t
xchg
iret
into
xchg
lea
rorl
add
adc
inc
pop
or
fnstcw
cld
add
imul
repnz
xor
pop
fs
insb
adc
xor
nop
jo
enter
fcoml
push
jle
js
sti
fstpl
pop
cmpsb
mov
push
sub
test
inc
mov
leave
jno
ret
add
mov
cmpsb
inc
or
leave
jecxz
out
outsl
mov
das
ljmp
add
pop
out
out
dec
dec
jne
mull
mov
int
mul
ret
in
xchg
imul
scas
lret
in
pusha
insl
jmp
push
movsb
fbld
sub
xlat
pop
push
ficomps
je
and
sub
inc
out
sbb
test
notb
mov
mov
dec
push
loopne
test
insb
int
push
push
mov
loop
daa
mov
sbb
dec
jle
ja
add
shll
cmp
mov
lds
mov
dec
mov
jnp
nop
push
push
les
mov
enter
cmc
jo
pop
or
aaa
push
pop
sarb
and
xchg
pop
jl
aas
jge
sbb
lcall
movb
ret
sbb
nop
pop
cmpsb
mov
aaa
adc
lret
pop
cmp
fcom
push
pop
sbb
cmova
xor
lret
js
inc
dec
sbb
test
call
push
in
jl
adc
add
insb
add
imul
aaa
add
mov
jg
push
loop
icebp
inc
sub
pushf
mov
hlt
lock
sub
loop
shl
mov
ds
ljmp
outsb
cmc
std
es
cmp
add
xor
cmpsl
repnz
jle
dec
lret
into
bnd
in
sahf
push
call
or
xor
mov
mov
mov
cmc
mov
fisubrs
inc
subb
push
jge
jnp
pop
rcr
xorb
sub
mov
mov
pop
inc
push
inc
ss
inc
repz
popf
jne
mov
mov
in
data16
fsts
sub
add
sub
push
xchg
add
insl
insl
fs
enter
jg
mov
ja
repz
mov
test
ds
xlat
cwtl
movsl
bound
sti
jns
add
dec
imul
jo
mov
jo
fsubs
test
mov
data16
push
sub
sbb
dec
gs
push
inc
aad
mov
push
add
es
stos
outsl
mov
movsl
and
and
add
sbb
sbb
pop
mov
movsb
popa
jo
dec
ret
dec
sbb
loope
addl
mov
pop
lret
mov
adc
jmp
cmpsb
sbb
mov
cli
loopne
nop
jnp
jne
sub
xchg
flds
in
outsb
rol
ret
mov
xchg
and
xorb
push
loop
cwtl
mov
gs
sarl
mov
out
das
xchg
leave
aaa
rorb
inc
pop
test
cmc
jne
inc
aad
repnz
lcall
lods
aaa
outsb
and
ds
push
js
mov
xchg
fbld
movsb
mov
pusha
add
addr16
int3
and
gs
ret
or
jmp
insl
pop
dec
shrb
pop
lds
cli
ja
mov
mov
dec
or
add
addr16
cmp
lret
sti
loopne
leave
adc
push
mov
xor
mov
test
lds
js
dec
lods
xchg
add
dec
xor
xor
jmp
jg
lods
nop
mov
test
fnsave
sbb
mov
scas
cmp
xchg
enter
adc
aas
mov
rorb
call
adc
aad
sub
jg
cmpsl
lock
daa
rorl
pop
out
repz
insl
adc
mov
sbb
push
push
mov
data16
je
addr16
xchg
aaa
mov
ss
jo
cs
in
cmp
push
hlt
xchg
out
lahf
test
addl
cli
mov
mov
test
lods
fsubl
dec
data16
adc
out
scas
xchg
mov
jo
push
out
sub
rclb
ss
mov
inc
pushf
jb
mov
jb
sbb
cmp
lret
inc
cmpsl
pop
mov
sbb
cs
add
cmc
and
neg
push
test
or
out
shr
and
xchg
jne
nopl
add
bound
cmpb
sbb
pop
pop
xlat
inc
movsl
xchg
test
xchg
mov
mov
inc
jl
jge
xchg
subb
sbb
sub
movsl
mov
cs
or
test
out
or
int
push
push
movsl
fsubs
dec
push
pop
cs
jg
mov
aad
outsl
pop
ss
dec
fdivrl
jp
rcrb
dec
lcall
jae
ss
or
xor
dec
loop
leave
ja
dec
stos
decl
ret
test
push
shr
inc
lahf
xchg
je
mov
or
in
fsubrl
inc
rcl
or
sbb
push
xor
jb
adc
dec
ret
cmp
or
notb
and
cmc
data16
cli
aad
in
or
inc
sar
movsb
jb
cmpsl
dec
sub
cltd
jne,pn
mov
jmp
imul
adc
xchg
push
es
sub
stos
scas
fucom
lds
sbb
stos
adc
add
add
xchg
jae
pop
mov
outsb
xorps
ret
mov
std
aad
push
popa
aas
sbb
jb
xor
mov
daa
pop
sub
cltd
addr16
add
movsl
add
pop
mov
sub
mov
pushf
in
xchg
inc
dec
hlt
jp
push
insb
push
mov
nop
loop
pop
jno
mov
in
or
or
int
lods
mov
dec
mov
insl
inc
cli
jne
mov
lds
jecxz
pop
leave
test
in
lods
pusha
inc
xor
shr
pop
pop
loop
xchg
pop
scas
sub
ljmp
std
adc
test
rol
out
pop
call
pop
mov
adc
adc
repnz
cmpsl
pop
in
cli
cs
adc
jl
icebp
mov
clc
scas
xchg
mov
out
jns
ja
xchg
aam
sbb
pop
ja
lods
stc
outsb
lret
test
mov
xor
mov
addl
sahf
inc
rep
xlat
fdivs
mov
fs
xor
scas
cmpsl
clc
movsl
dec
dec
out
push
cwtl
pop
push
pop
sub
lock
dec
add
jle
sub
push
xchg
je
rolb
add
loop
cmpsl
xchg
stos
rcl
push
rol
xlat
insb
lret
outsl
sti
dec
arpl
mov
mov
dec
sbb
ljmp
mov
shlb
test
xchg
shll
mov
pop
add
pop
cmp
inc
push
inc
enter
in
lcall
into
add
mov
clc
sahf
mov
xor
or
repz
add
and
shl
adc
vpmacsdd
mov
fisubl
test
cmp
fwait
push
iret
mov
cmp
cmp
dec
int3
std
outsl
dec
or
xchg
sahf
fs
aas
in
xchg
xor
mov
ja
in
fadd
in
mov
lahf
push
dec
lock
mov
mov
and
push
jo
push
mov
or
mov
data16
int
call
dec
loope
fadd
ds
jmp
mov
lods
ljmp
dec
xlat
inc
addr16
mov
sbb
fstpl
pop
jns
sbb
js
in
data16
scas
repnz
jnp
ss
xlat
xchg
lret
inc
dec
xchg
test
mov
adc
stos
push
into
test
fnstsw
into
pusha
dec
cmpsl
movsb
adcl
inc
les
ja
jg
inc
inc
mov
repnz
sbb
inc
mov
flds
dec
xor
pop
xchg
cmpsl
jmp
sbb
fnstcw
outsl
ret
jo
sbbb
fistps
fwait
add
adc
xor
cmp
xchg
lret
xchg
icebp
aas
cmp
or
arpl
pop
pop
or
fistpll
cmp
xchg
jae
test
add
inc
push
arpl
xor
xchg
mov
xor
insl
mov
xor
add
call
pop
push
adc
jnp
mov
sbbl
dec
jb
pusha
add
insl
mov
repz
fsubrs
pop
rclb
dec
xor
popf
jbe
nop
and
and
pop
pusha
inc
popa
scas
pop
jae
nop
pcmpgtw
cmp
incb
rcrb
lret
icebp
add
inc
xchg
sarl
or
jnp
std
outsb
sub
mov
scas
jo
call
jnp
movsl
xchg
dec
jno
jo
aas
jecxz
insb
fldl
lock
and
shl
fwait
inc
pop
std
xor
repnz
cmp
xchg
ds
jbe
xor
xor
jecxz
mov
cs
fnsave
stc
fwait
push
dec
arpl
mov
inc
movsl
cmp
jl
pusha
or
mov
ret
je
mov
inc
imul
dec
mov
popf
jo
mov
ds
std
ret
scas
dec
sub
inc
jno
and
xchg
les
or
rcr
mov
xlat
cmpsl
aad
ss
xchg
call
inc
cmc
sti
loope
mov
jl
cwtl
rolb
gs
jg
mov
jo
imul
inc
dec
jecxz
pop
xor
stc
push
adc
cwtl
decl
outsb
push
aas
test
scas
xor
mov
lock
std
push
push
scas
sub
incl
ficoms
xor
jns
cmpb
add
xor
aam
add
fucomi
rorb
ficoms
push
jecxz
jne
jno
pop
addr16
mov
test
inc
aam
cmp
mov
ficoms
mov
jnp
pop
movsb
mov
fs
mov
in
push
push
push
dec
jno
imul
pop
mov
pop
jne
gs
mov
push
cmpb
xchg
daa
lods
jp
sahf
adc
jae
mov
jno
mov
dec
sub
lock
jg
sti
dec
ss
das
xchg
test
aaa
leave
mov
add
movsl
js
mov
cmp
jne
lret
popa
idiv
js
and
addr16
movsl
imul
xor
jp
and
hlt
mov
xchg
mov
gs
aad
out
testl
jecxz
or
sbb
add
or
adc
push
jnp
lea
pop
call
sbb
gs
sbb
and
or
mov
cmp
push
xchg
xor
addl
and
es
push
or
push
lahf
movsl
jg
leave
or
outsl
loop
insl
push
sub
rorl
dec
mov
mov
push
andb
je
sub
and
out
push
jnp
jmp
mov
std
lahf
cmp
sub
push
xchg
lock
repnz
test
lods
adc
arpl
and
jge
insl
mov
sbb
orl
mov
call
aaa
stos
add
enter
lods
pop
test
jmp
imul
decl
dec
inc
push
cmp
mov
mov
imul
in
pop
jge
ljmp
push
cmpsb
push
insb
ficoml
or
je
push
mov
jae
jo
jle
mov
jp
sub
add
mov
cmc
std
or
jg
das
xchg
stos
dec
in
cmc
cwtl
cmpl
repnz
sahf
push
and
xchg
fsts
adc
push
lods
mov
mov
test
jb
dec
xlat
in
addr16
in
orb
push
cwtl
add
fwait
movsb
inc
pusha
inc
add
inc
dec
pop
cmp
mov
jo
lcall
ss
push
adc
xor
push
jmp
inc
ds
cmpb
fisubl
rcrl
cmp
roll
inc
iret
mov
pop
dec
arpl
xorl
push
comiss
fstps
dec
push
push
push
jnp
pop
xor
jecxz
idivb
or
push
xor
insb
or
xchg
sahf
push
pusha
dec
sti
xor
add
push
pop
arpl
mov
stos
dec
or
fs
jae
jae
sahf
shrb
jmp
mov
push
mov
test
outsl
mov
adc
test
mov
pushf
rcr
test
dec
ljmp
xchg
jmp
jmp
pop
mov
and
mov
ret
or
adc
pop
mov
inc
adc
lods
push
sahf
and
jb
mov
jge
fwait
xor
cwtl
fsts
clc
jecxz
cmp
lret
stos
dec
mov
insl
test
cmp
leave
hlt
push
cmp
inc
jne
inc
lods
hlt
fsubrs
mov
mov
dec
ljmp
pop
jge
xor
aam
out
js
or
inc
cli
or
jbe
sarb
shlb
loope
adc
cmp
or
pop
or
lds
sahf
dec
scas
sbb
stos
loope
and
lods
out
fcmovnb
sbb
cmc
aam
sub
add
stos
and
or
mov
pop
inc
push
lea
sbb
popf
xchg
dec
je
sbb
dec
xlat
jmp
dec
add
jp
jno
mov
mov
adcl
imul
outsb
std
xchg
cmp
xchg
jp
dec
cmc
insb
adc
fcoml
pushf
or
jg
jbe
pop
sub
mov
into
pop
or
jnp
push
jle
fnstcw
lds
mov
fiaddl
fchs
cmp
fwait
push
out
cld
lock
xor
push
pop
jae
lret
negl
sarb
arpl
mov
fwait
jae
xor
and
sub
jns
dec
xchg
ds
sub
shll
fwait
add
testb
adc
aas
test
jge
xor
enter
cltd
mov
mov
xchg
jo
into
inc
push
clc
pop
mov
fisubl
cmpsl
xchg
hlt
shlb
mov
dec
xchg
push
lret
push
inc
cmp
push
lcall
aam
adc
push
jecxz
fsubrs
sbb
jge
pop
inc
push
pop
flds
mov
adc
sbb
hlt
in
ja
cwtl
adc
pop
sti
inc
cmpsl
jbe
aam
pusha
dec
push
jb
iret
lds
sarb
vorps
ja
or
push
movsb
cmp
sub
jg
and
add
mov
lods
xor
ficompl
mov
jl
adc
pop
mov
andb
fmuls
outsl
insl
repz
fcoml
push
pop
push
into
sub
inc
sti
or
std
push
imul
stc
mov
xchg
lds
pop
cmp
out
ret
sti
andb
pop
out
fsts
cs
dec
iret
jb
incl
jle
shl
jle
adc
push
out
test
stos
mov
jg
lret
lds
out
scas
test
cwtl
xor
pop
add
ds
mov
xchg
rcll
jae
fnstenv
push
roll
xchg
jmp
lock
fxch
sub
cwtl
mov
loope
cmc
add
cmc
dec
call
movsb
mov
and
jns
lods
imull
fisttpll
xor
in
pop
leave
and
adc
sbb
loopne
popa
mov
xchg
and
ja
decb
stos
mov
jle
jp
cmpsl
jb
jmp
inc
cmpsl
sub
dec
mov
push
int3
pop
mov
int3
lahf
mov
pop
out
lods
sbb
jo
mov
ret
ss
mov
push
fldenv
adc
mov
out
out
mov
and
lret
ss
jb
ret
cmp
rcll
or
pop
flds
mov
mov
jmp
add
xchg
mov
xor
mull
push
stos
das
call
inc
mov
aad
pop
jb
out
mov
int
addr16
add
mov
adc
mov
test
pop
cwtl
test
push
jnp
mov
adc
flds
mov
fiadds
or
scas
testb
xchg
jo
loop
cmp
lods
push
pushf
cwtl
push
sbb
addr16
cmp
pop
outsl
mov
pop
movsl
cmp
and
dec
mov
push
ret
fistpll
xor
dec
stos
add
mov
jmp
pop
pop
cltd
mov
xchg
and
inc
outsb
sub
aad
lods
or
addb
call
fs
clc
orl
pop
lcall
push
inc
xlat
and
pop
xlat
push
xor
pop
aas
lds
fwait
shll
nop
cmpsb
stc
pushf
push
mov
xor
adcb
les
ljmp
cmpsb
clc
addr16
test
outsb
pop
cmpsb
out
hlt
ja
mov
sub
cmp
xchg
outsb
mov
imul
repnz
inc
cmp
jp
xlat
int3
hlt
arpl
mov
mov
adc
sti
xor
lods
shrb
pop
adc
jne
mov
insl
rclb
frstor
jp
cmp
insb
push
mov
jns
add
out
ljmp
mov
add
mov
dec
in
pcmpgtd
lods
imul
pop
test
cmp
cmp
outsl
orl
sbb
and
adc
xchg
movb
sbb
sub
dec
push
mov
into
lret
sub
xchg
fisubrl
pop
mov
inc
icebp
js
cmpsb
pop
or
mov
lcall
add
jns
ljmp
push
dec
dec
cmpb
out
jg
add
mov
inc
cmp
stc
push
inc
xor
and
or
mov
or
jns
add
xorl
ljmp
lods
add
jbe
cld
xchg
dec
xchg
jmp
jae
mov
mov
je
adc
shl
fstp
ljmp
mov
hlt
stc
inc
mov
or
cmp
fs
mov
jle
jle
fs
enter
loope
icebp
daa
cmp
dec
test
xor
xchg
js
cld
loop
das
fdivs
loop
not
outsl
shrb
sub
xchg
dec
out
pop
push
out
push
fisubrs
cwtl
cli
mov
lods
cwtl
push
pop
xchg
jno
aas
xchg
fwait
cld
and
cmc
sbb
test
fidivs
mov
push
std
fld1
addr16
test
xchg
ja
rcrl
and
pop
cld
aas
jns
and
mov
push
pop
pop
sahf
gs
xchg
sub
lods
stos
mov
inc
aaa
and
scas
iret
fsubp
shl
xor
std
shl
mov
mov
dec
xchg
aad
cld
xlat
lret
dec
dec
clc
pop
pusha
mov
sub
test
sub
mov
out
insl
cmp
clc
xor
dec
int
mov
pop
mov
or
xchg
pop
mov
push
push
cmp
push
add
inc
aaa
das
rcrb
rolb
mov
aad
mov
jg,pt
xchg
sub
add
sbb
in
mov
and
jl
popf
mov
fiaddl
xor
adc
in
xor
xchg
push
xchg
xor
add
mov
or
decb
mov
lea
cmpsb
loopne
add
leave
mov
pop
sub
lcall
fistpll
mov
jg
ss
jmp
mov
cmp
inc
jnp
mov
das
adc
mov
mov
pop
sub
and
jnp
push
int
mov
daa
cmp
mov
sqrtps
cmp
push
insb
sbb
jno
imul
mov
mov
inc
pop
pop
in
sub
add
testb
pcmpgtw
jge
mov
xchg
sub
kmovb
insl
or
test
arpl
push
cmp
enter
mov
adc
repnz
jae
add
adc
nop
data16
push
sarb
cmpsb
pop
lret
cwtl
mov
shll
out
mov
xor
out
insb
push
std
lahf
sub
xchg
xorl
mov
jmp
xlat
sbb
fisttpll
xchg
jge
mov
loop
dec
add
hlt
sbb
test
lods
std
and
cmp
in
outsb
icebp
addb
fmulp
in
scas
outsl
or
mov
xor
fcompl
jl
fmuls
dec
loopne
sbb
jg
mov
fwait
and
dec
inc
mov
loopne
pop
dec
add
adc
outsl
out
sub
bound
lcall
test
adc
hlt
sti
jb
insl
xchg
int
pop
hlt
pop
xor
jg
ds
mov
xchg
inc
push
iret
sbb
or
mov
mov
into
sahf
cmp
ret
push
daa
test
inc
xor
cli
pop
jl
adc
jb
mov
push
sub
sub
mov
imul
sub
jg
pop
daa
sbb
stc
test
call
repz
mov
outsb
adc
sub
mov
rcll
popw
mov
adc
mov
adc
xchg
mov
jmp
xor
push
loope
scas
enter
imulb
adc
mov
in
js
jle
push
sbb
xchg
cld
pop
mov
add
mov
push
xlat
mov
xor
ds
out
adc
int
jmp
lea
xor
jge
jl
pop
dec
mov
add
push
bound
mov
pop
mov
in
sbb
mov
shll
or
into
in
out
lock
aam
jl
pop
xchg
lods
test
sbb
lret
out
adc
pop
cmp
jns
adc
push
in
pushf
jno
xchg
xchg
adc
arpl
movsl
fnsave
dec
out
xor
dec
cwtl
push
pop
lods
test
sub
fidivrs
pop
sbb
xor
sahf
test
dec
jnp
je
lock
jecxz
mov
outsb
mov
nop
push
bound
test
imul
dec
jns
in
mov
imul
inc
lret
push
add
nop
pushw
loope
mov
lcall
jp
mov
push
cmp
mov
in
in
das
vmread
pop
clc
inc
sbb
cmp
pop
sbb
adc
xchg
push
and
or
popa
xchg
lret
mov
jno
call
adc
or
or
cmpsb
jp
cmp
call
inc
sub
aam
insl
test
mov
ljmp
enter
ja
shll
mov
scas
add
mov
xchg
mov
inc
mov
popf
es
out
fsubr
and
in
dec
pop
adc
es
mov
jo
insl
les
or
popf
xchg
and
stos
aad
jg
aam
jl
and
mov
bound
mov
out
roll
test
lret
mov
xor
cmp
xor
pop
dec
lcall
popa
insl
push
ret
out
std
rol
mov
popf
sbb
or
sbb
ds
out
out
push
dec
push
mov
xchg
adc
sbb
lods
pop
into
and
inc
inc
jno
cmp
sub
sbb
or
jb
adc
cmpsb
adc
dec
cmp
repz
and
lret
adc
sub
rclb
mov
hlt
out
dec
jbe
inc
in
mov
cli
mov
lahf
bound
pop
cmp
subb
std
int3
mov
inc
cmp
or
or
jne
push
push
sub
out
jecxz
cmc
mov
xchg
repz
xchg
cmp
inc
xor
fdivs
pop
popf
inc
xor
sub
and
aaa
add
ljmp
fcoms
outsb
xchg
or
xor
sub
add
mov
testb
mov
outsl
icebp
mov
lcall
push
arpl
test
ret
add
nop
subl
or
and
fcoml
mov
jae
hlt
shl
xchg
inc
insl
and
nop
rcrb
jge
cmc
push
leave
push
push
xchg
jle
out
or
roll
push
mov
and
pushf
lods
push
jno
das
inc
leave
and
xchg
aas
push
push
std
xor
or
fbstp
aad
fdivrl
mov
inc
xor
jge
add
lcall
or
jae
or
fstl
push
fnstcw
xchg
neg
jb
xchg
jns
sbb
rcl
pop
dec
sub
lcall
mov
push
scas
les
shll
fildl
sbb
pop
adc
ljmp
adc
shl
pop
dec
and
lret
sbb
in
mov
popl
jle
mov
bound
inc
dec
cmp
ficoml
lahf
ret
mov
push
jae
jnp
push
lret
pop
mov
add
rcll
sahf
je
fisubrl
cli
xor
xchg
out
inc
inc
cmp
jmp
pusha
and
mov
xchg
stc
and
mov
sbb
daa
lcall
mov
pop
out
jp
mov
out
insl
jecxz
int3
das
mov
pop
shr
add
sbb
in
push
inc
cmp
fildl
movsl
mov
jne
inc
or
mov
fisttpll
inc
xor
je
push
rcrb
fs
pushf
cmp
dec
jnp
cmp
lods
rsm
adc
or
xor
xchg
jp
fnsave
cmpsb
mov
rcll
cmp
xchg
pop
pop
dec
jb
aas
pop
adc
sbb
push
lods
lock
sbb
cs
pushf
push
mov
or
push
mov
dec
add
pop
enter
std
nop
ljmp
xchg
mov
lahf
mov
xor
imul
aas
pop
xor
outsl
ljmp
lock
mov
inc
addr16
pop
mov
jbe
mov
stos
fmul
mov
mov
inc
popf
add
jae
inc
xor
cmp
pop
xor
mov
mov
roll
push
push
fisttpll
stos
and
or
push
std
js
push
mov
sub
fdecstp
lea
rclb
jne
rorb
or
and
adc
cs
jns
rcrl
push
pop
sti
push
inc
push
addr16
push
jg
and
push
mov
lret
mov
lea
ret
sbb
add
loope
mov
sub
sti
shlb
push
add
cmp
scas
mov
cld
fprem
repnz
dec
cltd
pop
cmp
dec
popa
and
les
shlb
pop
fs
or
pop
push
ret
andl
xchg
inc
add
inc
jno
out
push
rcr
aas
std
fidivs
shll
and
mov
add
iret
sbb
fld
shrl
dec
nop
test
repz
or
idivb
cmc
mov
lcall
push
imul
mov
mov
outsl
es
dec
xor
roll
in
and
or
jmp
andb
scas
sbb
int
loop
sarl
sbb
push
or
add
push
ss
dec
sbb
sbb
and
and
lcall
je
jno
dec
cmp
divb
dec
pop
inc
sub
mov
loop
add
and
mov
loopne
fsubrp
and
inc
in
repz
lods
push
out
lret
add
iret
jns
adc
roll
leave
cltd
mov
hlt
in
jl
mov
into
ret
fistps
cmp
or
int3
mov
add
in
scas
scas
sub
xor
repnz
xor
out
jns
lock
sarl
loopne
cmp
sub
xchg
aam
pushf
hlt
jo
lds
loope
inc
aad
xor
cmp
lahf
movsb
add
aaa
sub
xor
ss
jo
xchg
add
or
cmp
inc
movb
stos
sub
dec
pushl
jbe
pop
pop
lods
testb
pop
push
push
xchg
imul
flds
ret
push
xchg
push
mov
dec
imul
xor
mov
in
sbb
pusha
push
and
repz
push
js
movsb
jg
and
aam
test
add
cmp
push
xorb
inc
dec
fisubs
ficomps
xor
mov
stos
ds
xchg
stc
xlat
mov
adc
push
imul
lcall
enter
cmp
add
ss
sbb
rcll
int3
das
icebp
sbb
push
lods
xor
out
mov
mov
in
xlat
pop
mov
stos
daa
jp
jg
adc
pushf
loop
sub
pop
mov
cmpsb
fistpll
inc
dec
cmc
cmp
roll
ljmp
push
jl
fstps
add
dec
cmp
xlat
and
cmpb
add
outsl
pop
push
lods
pushf
iret
sub
fwait
jne
push
pushf
fsubrl
ss
fisubl
scas
xchg
cmp
outsb
xor
fstpt
add
pop
sub
mov
jne
ret
dec
mov
int3
nop
loope
mov
fwait
mov
pusha
adc
aam
pop
push
mov
gs
shlb
pop
xchg
mov
push
out
andl
cmc
inc
loop
inc
push
aaa
cmp
sahf
xor
notl
jnp
push
mov
mov
int
imul
arpl
into
pop
mov
xchg
pop
push
ja
jmp
fwait
dec
push
fwait
push
out
fsub
xchg
mov
and
cmpsl
mov
gs
inc
mov
jno
push
js
or
fcomps
insl
mulb
mov
xchg
lret
add
jg
push
lods
adc
verw
mov
jo
subl
add
dec
add
in
mov
jnp
mov
stos
pop
out
test
cmp
shll
stos
push
jae
and
insb
xchg
test
xorl
ret
std
sahf
sbb
fisttpl
cmpsl
sub
inc
fldt
and
out
mov
jp
testb
sbb
jne
out
insl
add
shl
jg
adc
aas
jo
pop
popa
jle
mov
adc
pop
xor
dec
cmp
icebp
jmp
adc
and
add
xor
mov
add
loop
push
lcall
test
shlb
mov
mov
jg
loope
movsb
aas
stos
lds
jg
test
mov
and
popa
sub
dec
out
dec
jbe
int
jl
in
scas
out
in
ret
and
or
xchg
pop
pop
in
jl
fwait
push
and
mov
into
scas
daa
push
fnsave
cmc
icebp
xor
mov
xor
ljmp
or
insl
lods
loop
insl
shlb
dec
jo
mov
push
int3
fucomi
outsl
std
sbb
scas
dec
pop
dec
rorb
pusha
push
outsb
xchg
lret
outsl
adc
mov
mov
lret
sbb
dec
adc
mov
xchg
cmp
or
movsb
adc
loopne
not
out
mulb
adc
and
fdivs
cmpl
lret
pop
add
mov
jno
add
ja
test
in
in
sahf
pop
xchg
movsb
add
in
ljmp
and
and
jae
jg
mov
clc
or
mov
aas
pop
push
mov
mov
hlt
cmp
push
adc
dec
das
add
dec
fsts
test
jge
mov
mov
add
xchg
dec
daa
cmpsb
push
inc
lret
clc
cld
mov
jns
xchg
psubsw
jno
dec
mov
daa
cld
xor
sub
rcll
test
cmc
sub
mov
mov
std
dec
fs
jo
inc
ljmp
mov
adc
sahf
inc
cmpsb
adc
mov
fwait
cmp
inc
scas
dec
cmpsb
sbbb
mov
pushf
cmp
xorb
add
adc
inc
and
imul
fisubrl
movsl
loop
adc
sub
jns
test
and
add
cwtl
pop
mov
and
xchg
push
pop
inc
les
and
adc
pop
outsl
mov
mov
sub
roll
out
mov
mov
repz
jmp
jp
pop
cltd
addl
fisubrs
lea
sbb
jle
mov
jns
mov
mov
out
ja
pop
push
pushf
jp
cwtl
pop
mov
test
test
repnz
xchg
dec
jnp
inc
push
adc
adc
or
cld
mov
add
or
cmpsb
std
and
insl
inc
xchg
or
or
sbb
std
pop
lock
sbb
fcmove
andl
aas
stos
dec
pop
or
repnz
loope
mov
dec
mov
int
leave
mov
mov
loop
mov
mov
lock
dec
or
lea
pop
pop
js
inc
dec
mov
pop
and
lret
ja
fisttpl
cld
int3
lret
add
into
push
add
pop
mov
push
jl
jns
or
enter
std
mov
xor
roll
mov
cmp
push
int3
lret
fdivs
cmp
pop
mov
jg
inc
std
aaa
insb
xchg
outsb
sub
push
dec
xlat
xlat
add
add
shll
imul
stc
icebp
in
jmp
in
ret
xor
inc
scas
sti
jbe
cmp
lcall
rol
test
sbb
insl
push
icebp
xorb
or
loope
adc
fs
popa
jg
cmp
xor
fwait
call
mov
or
mov
sbb
call
sahf
jl
cmp
jo
sar
sti
push
loop
inc
cmp
mov
pop
insb
xor
and
ret
sbb
and
insb
hlt
sbbl
addr16
pop
or
or
xlat
mov
push
sub
sbb
xor
ds
jmp
std
in
mov
sub
popf
nop
mov
out
xchg
inc
sti
cmp
mov
cwtl
inc
insl
test
xchg
jnp
push
pop
test
sti
push
xchg
aad
mov
sbb
les
and
stc
repnz
iret
cmp
popf
shlb
push
xorb
ja
outsb
ret
adc
mov
cmp
and
push
rorb
jecxz
mov
movsl
cmpsb
add
jge
or
cmc
mov
cld
movsw
inc
add
mov
add
xor
loope
lds
bound
les
loop
std
sbb
outsb
jno
leave
scas
cli
icebp
int3
and
loope
mov
test
add
das
fcoms
imul
mov
inc
out
xchg
jmp
mov
outsl
rolb
add
mov
ret
push
scas
lahf
lret
out
adc
inc
aas
mov
lcall
popf
pop
les
fwait
in
movsb
lods
add
jg
fstl
mov
outsb
cmp
fs
cmp
pop
leave
pop
mov
mov
notb
cmc
int
mov
mov
lock
das
in
add
pusha
or
lret
movsl
call
sbb
xor
pop
jae
mov
jecxz
inc
lds
scas
mov
add
mov
jno
jge
jp
sbb
fsts
enter
lret
sbb
daa
add
in
cmc
cmpsl
movsb
mov
mov
adc
xchg
sbb
fldcw
out
mov
ja
jecxz
mov
mov
adc
fsubrl
and
mov
mov
xor
and
std
add
jecxz
popa
jbe
push
jecxz
mov
loope
add
arpl
mov
incl
ficompl
loope
add
xchg
cmpb
cmp
push
cmp
or
das
push
xor
shr
jmp
mov
cld
adc
push
sub
mov
bound
lret
scas
mov
xchg
mov
fs
xor
xchg
jg
stos
mov
js
std
fcompl
mov
shlb
jb
aad
pop
loopne
jl
addr16
or
sub
xlat
sbb
jle
ljmp
jmp
push
mov
nop
add
out
out
std
inc
insl
sbb
jmp
repnz
aaa
outsb
hlt
gs
test
ret
in
jbe
push
lret
outsl
stc
xchg
sub
mov
mov
inc
mov
ja
or
push
insl
mov
andb
test
adc
outsb
adc
sub
loopne
inc
and
inc
das
mov
jecxz
and
fdivs
dec
mov
dec
mov
leave
sub
dec
es
sub
jb
or
mov
cmpsl
fwait
loope
jg
jb
lcall
test
mov
pop
test
popf
les
pop
sub
sub
fcmove
lods
addr16
push
adc
cmpb
fs
lcall
or
in
and
mov
popf
lods
cmp
shll
lret
mov
clc
xor
fdivrp
or
mov
push
mov
in
cmp
sub
mov
movq
lds
xchg
push
jo
daa
jp
jbe
stos
cmp
cltd
ret
jg
inc
add
cltd
shlb
aaa
testb
fildl
cpuid
mov
sub
adc
mov
notb
push
dec
sub
aas
or
repnz
loope
int
and
adc
pop
jg
sbb
add
out
xor
scas
cmpxchg
add
mov
popa
insb
jne
cmp
pop
sub
sub
mov
push
pop
fld
call
xchg
xchg
mov
mov
cmp
sbb
add
fstl
fisttps
jae
sbbl
test
in
popa
xor
lret
fdivr
adc
push
sbb
nop
clc
sub
mov
and
and
pop
push
fldl
aas
add
mov
dec
and
push
push
fwait
adc
aam
mov
orl
test
pop
pusha
ljmp
push
das
cmpsb
inc
test
push
or
mov
inc
jle
mov
mov
pop
aam
cmpsb
aas
andb
push
in
mov
pop
jmp
insl
hlt
or
es
jl
fwait
push
mov
fidivl
in
enter
ja
int3
sbb
sbb
or
cmp
aas
or
out
in
sub
std
mov
cmpsb
mov
stos
rol
and
pusha
roll
clc
movsb
out
jnp
mov
pop
push
shrl
pushf
sbb
xlat
push
hlt
mov
sub
lea
and
leave
bound
ret
pusha
jns
xchg
add
mov
push
adc
mov
icebp
repz
jmp
mov
pop
les
mov
in
cmc
stc
inc
test
imulb
js
mov
mov
inc
inc
cmpsb
nop
out
inc
push
ja,pn
add
pop
outsl
lret
mov
out
shl
fistpll
test
popa
std
rolb
cmp
mov
add
mov
insb
pop
mov
clc
pop
xor
test
xor
movb
not
xlat
inc
repnz
jmp
call
pop
jnp
mov
jno
pop
dec
jmp
mov
sqrtps
sahf
loopne
jnp
aad
clc
jae
or
xchg
mov
test
sbb
ljmp
lods
push
dec
loope
ficoms
pop
sbb
mov
xor
pop
push
jmp
inc
shlb
mov
push
clc
fistpll
out
cli
sub
xchg
lock
cmpsb
in
sar
adc
xchg
in
pop
or
sahf
and
movq
dec
sub
test
ja
pop
loop
push
xchg
sub
fwait
cmp
jnp
jnp
xlat
js
lahf
test
fcomi
or
push
push
mov
lods
mov
test
call
test
outsb
clc
xchg
imul
and
jl
fs
das
int
scas
mov
loope
popl
mov
mov
out
test
add
sub
jp
jno
ret
lods
repnz
movsb
jle
aad
shl
adc
call
cwtl
idivl
sub
cmp
incl
xor
push
add
mov
push
jg
or
and
sub
mov
pop
lods
adc
inc
mov
mov
inc
add
inc
je
shufps
sbb
mov
addr16
jae
shlb
adcb
and
fwait
fs
xchg
ret
outsb
cmp
out
std
test
pop
imul
and
mov
inc
jecxz
cmpb
xchg
pop
nop
fwait
xchg
adc
jl
shrl
pop
push
inc
and
lret
fcmove
repz
xchg
mov
fmulp
adc
add
lret
inc
stc
push
mov
cmp
push
pop
popa
shll
sub
inc
cmc
cmp
mov
adcl
and
inc
push
rcrb
jp
and
jl
imul
dec
xchg
xchg
fiaddl
lret
mov
mov
pushf
imul
push
inc
stc
mov
dec
mov
gs
adc
imul
pusha
divl
push
test
adc
dec
mov
jne
das
adc
and
jnp
jno
mov
shl
or
es
jne
adc
dec
loopne
dec
ljmp
adc
mov
adc
lods
jg
sub
leave
xchg
or
xchg
jg
dec
imul
out
inc
test
ret
adc
mov
inc
lret
cmp
cmp
movsb
out
insl
loopne,pt
inc
roll
shll
orb
and
xchg
push
cld
movsb
jmp
or
sub
xchg
fsub
cltd
ds
insb
inc
or
js
lret
mov
push
inc
lahf
push
xchg
pop
inc
cmp
loopne
push
xorl
orl
mov
ret
ret
popa
mov
bound
lods
or
or
cmp
lret
les
jge
xchg
cmpsb
push
mov
mov
xorl
sub
cmp
aam
lods
repnz
dec
mov
lret
ror
jno
push
push
loopne
mov
add
xchg
fimull
icebp
daa
sbb
mov
jmp
xor
push
mov
das
stc
pop
and
ja
jnp
cld
mov
jge
mov
and
daa
enter
pop
bts
pop
sar
inc
inc
es
and
and
push
jle
xor
iret
mov
cld
xchg
xor
cmp
mov
mov
mov
and
pop
mov
pop
or
in
popa
stos
imul
and
mov
das
jbe
lods
popf
repnz
dec
test
cmc
sarb
push
cs
lahf
xchg
sahf
shr
jnp
repnz
aas
or
mov
les
cmp
jns
xchg
mov
sub
into
fs
popa
fsubrs
addr16
sbb
lods
or
add
fdivr
xorb
mov
insb
sub
movsb
xchg
or
fists
pop
cltd
les
pop
inc
and
jp
push
add
adc
mov
and
mov
cmpsl
lret
pop
test
xchg
in
sbb
cmp
lods
pushf
xchg
lods
cmp
out
js
ret
ljmp
mov
push
fs
mov
ret
sbb
out
pop
dec
ficoms
mov
mov
dec
xchg
arpl
aad
lahf
in
scas
add
outsb
in
inc
movsl
dec
mov
xchg
push
in
adcl
cmpb
lods
popf
test
cmp
cmpsb
stc
push
jg
add
es
push
shlb
or
mov
adc
and
ret
mov
jg
fmulp
aas
lret
and
push
sbb
adc
nop
dec
pop
push
ja
mov
sahf
sub
lods
insl
dec
xchg
dec
arpl
jnp
lret
jle
dec
xor
loop
adc
pop
push
std
add
pop
inc
outsb
pop
mov
xchg
fsubs
ja
xor
mov
and
adc
in
out
push
out
inc
movsb
fs
ja
sub
mov
in
dec
nop
into
mov
add
push
lret
xchg
ja
popl
out
shr
xor
iret
leave
jmp
dec
or
lods
stos
or
xchg
imul
test
dec
cld
sbb
and
jmp
sub
sahf
loopne
insl
in
loop
and
pop
mov
jg
jnp
jecxz
inc
xlat
jg
or
jecxz
add
and
and
and
sub
fmull
pop
sbb
pusha
mov
test
loope
and
pop
das
inc
sub
adc
hlt
pop
xchg
pushf
jecxz
mov
xchg
bound
test
mov
out
jmp
pop
cmp
mov
dec
jmp
mov
das
pop
jl
xor
cli
stc
jnp
clc
insl
mov
dec
inc
in
jnp
lods
bound
addr16
cmp
dec
mov
or
adc
syscall
pop
mov
aas
stc
movsl
mov
bound
int3
mov
mov
sub
shll
push
cmp
sub
dec
xchg
pushf
mov
popa
sti
dec
movl
in
out
out
cmp
add
push
mov
push
jg
pop
movsb
jmp
cmp
mov
mov
adc
repnz
out
mov
aaa
es
pop
testb
mov
aad
add
xor
out
jno
xor
jo
jns
sahf
out
or
pop
scas
adc
push
ret
inc
pop
xor
and
shlb
fnstsw
imul
cs
insl
mov
cli
shlb
cmp
lea
cmp
add
roll
push
fldcw
mov
test
hlt
xchg
mov
neg
mov
cmpsl
imul
call
out
call
add
int
mov
mov
lock
aaa
sbb
shrb
dec
mov
shll
loop
jge
orb
sub
and
inc
fstpt
sbb
sbb
hlt
lea
mov
xor
fstl
sub
rolb
or
xchg
pop
iret
jo
or
pop
cmp
inc
incl
sub
adc
roll
les
int
jb
test
loope
xor
jbe
adc
jnp
ret
cwtl
xor
cmp
add
xchg
lock
fistpl
adc
sbb
xor
jno
inc
popf
cli
shlb
mov
int3
xchg
push
sbb
fisubrs
xor
clc
cmpb
test
in
lods
hlt
scas
into
adc
adc
shlb
pop
cmp
dec
rorb
out
push
adc
inc
dec
out
pop
jo
jne
or
iret
inc
ror
incb
dec
repz
mov
xchg
jl
dec
daa
std
lea
mov
xchg
mov
call
and
pop
loopne
outsb
in
xchg
and
fiaddl
and
dec
pop
mov
push
aaa
cmp
dec
incl
shll
xlat
push
fdivp
push
cmp
jg
repz
push
xor
roll
sub
inc
xor
rorl
fidivrs
jne
lods
loope
xor
fstps
int3
dec
pop
loop
mov
sbb
imul
jl
push
xor
scas
lret
nop
imul
jp
pop
push
loope
rcrl
scas
popf
add
xchg
in
and
xchg
mov
adc
xchg
mov
push
adc
lods
das
hlt
xor
mov
in
lea
xchg
sub
mov
or
fists
dec
jmp
popa
and
call
stos
mov
lods
aad
cltd
ret
jae
add
enter
movsl
push
cmpsl
push
rol
pop
jno
popf
ss
push
xchg
jb
inc
mov
aas
fdivrs
add
aas
adc
cmp
popa
pop
inc
inc
jge
xchg
bound
cld
and
or
push
jb
js
pop
dec
repz
mov
lock
fsubl
in
stos
pop
cmp
addr16
test
aam
das
and
leave
fs
imul
cmp
into
mov
cmpsb
fidivrs
loope
cmp
aam
inc
popa
mov
rolb
pop
xlat
xchg
rcll
xchg
xchg
out
je
repnz
outsb
fwait
das
push
add
lock
fdivr
lcall
cmc
and
push
push
dec
xchg
add
jg
inc
daa
mov
adc
cwtl
jecxz
iret
mov
cs
push
lock
jb
xorb
sbb
shrb
mov
clc
dec
dec
lock
hlt
addr16
test
and
dec
insb
negb
ja
mov
gs
inc
das
and
ja
out
hlt
xor
scas
push
and
aas
mov
leave
loop
test
mov
clc
mov
test
mov
in
jl
stos
sbb
sub
test
in
fwait
inc
inc
mov
inc
pusha
gs
fs
mov
loope,pt
pop
jmp
push
in
fdivl
mov
and
js
bound
out
dec
fsubrs
out
ret
ret
or
mov
push
cli
push
mov
lods
aas
notb
and
icebp
es
stos
jle
sub
mov
jmp
sub
subl
jns
xor
test
das
mov
lock
inc
and
mov
rorb
sahf
out
jno
dec
cmp
or
mov
fildll
cwtl
add
stos
cmp
lods
repnz
and
leave
add
mov
fisubrs
shll
xchg
js
sbb
stos
xor
xchg
cwtl
add
xchg
jne
inc
fisttps
jae
mov
dec
push
mov
test
adc
lcall
push
sbb
mov
pop
add
jp
into
jecxz
mov
jae
mov
jecxz
cltd
adc
into
fstp
dec
xchg
adc
and
mov
test
data16
or
repnz
and
rep
adc
rorl
fdiv
jae
mov
fnsave
pop
inc
adcb
int3
pop
pop
xchg
loopew
mov
lret
clc
rolb
call
fcomps
cmp
pusha
imul
mov
lods
into
cld
fsub
add
push
mov
jge
dec
jge
pop
out
mov
es
popf
divb
repz
rep
mov
aam
fisubs
mov
jmp
dec
push
fistl
andl
cld
push
and
xlat
lcall
int3
cwtl
in
mov
or
insl
jmp
lahf
fstpt
out
insl
popf
jns
insb
imul
xor
jl
and
mov
mov
lcallw
inc
pop
incb
es
inc
cmp
insl
push
mov
pop
sbb
roll
fwait
xchg
imul
lret
mov
out
push
xor
inc
pop
push
jp
xchg
jmp
mov
jo
adc
inc
and
outsl
repz
inc
cmp
fisubl
sbb
and
sti
push
and
push
arpl
jmp
xchg
mov
rolb
xor
sbb
inc
stc
jecxz
xor
pop
inc
stos
sub
test
btc
adc
pop
sub
and
inc
shrb
pop
xchg
popf
add
movsl
jo
and
rcrb
xchg
mov
xchg
add
push
jb
dec
lahf
shl
sub
testl
adc
ljmp
or
mov
shlb
sahf
cmp
repnz
xorl
mov
dec
cld
jle
in
in
mov
inc
xchg
aam
mov
subb
stc
push
std
add
xchg
daa
lds
cmp
test
gs
popf
dec
jo
mov
sub
inc
and
jb
push
stc
clc
test
nop
shrl
ss
call
push
xchg
mov
arpl
ret
push
or
push
pop
cld
dec
xlat
push
icebp
push
fistl
pusha
pop
lea
imul
aaa
into
cld
out
lods
cli
push
pop
sbb
fstps
repz
sub
jno
mov
sub
mov
push
inc
push
outsl
adc
xchg
nop
mov
das
adc
fwait
or
jnp
movb
mov
adc
repz
or
mov
xlat
xchg
nop
or
xchg
das
shll
pusha
xchg
mov
das
cld
cmp
dec
int
mov
adc
leave
scas
scas
adc
jae
call
sbb
xchg
adc
mov
and
push
pop
jns
jno
out
jb
pop
xchg
mov
mov
mov
popf
cs
aas
inc
jmp
cmp
pop
mov
mov
add
dec
mov
pop
scas
pop
scas
fnstsw
sbb
aam
push
andl
rorb
dec
fdivrs
ss
clc
outsb
cmp
insb
in
cmp
mov
dec
xchg
adc
lds
adc
mov
sub
mov
in
xor
popf
dec
test
imul
mov
push
add
jp
in
sbb
dec
mov
push
mov
sahf
daa
mov
dec
pusha
outsl
es
jb
dec
lahf
dec
fsubl
les
sbb
insl
lret
fadds
iret
out
xchg
lahf
jg
scas
mov
pop
fcmovnbe
cmc
mov
outsl
cli
fnop
dec
mov
test
dec
xchg
pop
fdivr
adc
lret
mov
stc
push
and
sub
lods
jmp
mov
or
dec
shl
pop
push
jp
rcrb
test
push
test
adcl
mov
jecxz
jnp
pop
sub
int
loop
sbb
fwait
xchg
mov
jno
int3
xchg
pop
mov
cmp
pop
jns
loope
cwtl
xchg
and
and
enter
lret
cmpsl
cmp
push
push
scas
push
dec
dec
jmp
inc
pop
loop
add
mov
outsl
add
in
inc
dec
popf
sub
aaa
push
or
jmp
ljmp
bound
sub
mov
inc
or
dec
das
xchg
std
xchg
sbb
xchg
lret
mov
popa
inc
dec
or
push
mov
add
jo
pop
pop
inc
xor
jge
inc
imul
cmpl
mov
adc
jae
fs
xchg
or
sub
mov
test
add
mov
cmp
inc
pop
dec
push
pop
cmp
movsb
icebp
or
jno
mov
adc
add
inc
mov
cmp
test
push
sub
int
pop
dec
fwait
inc
dec
sbb
out
ljmp
lcall
and
adc
bound
aaa
inc
mov
sbb
jecxz
inc
push
stos
daa
clc
pop
andl
lret
xchg
xor
int
mov
sbb
lea
fwait
bound
mov
mov
lret
lods
out
fdivp
xor
stc
dec
lret
outsb
sub
bound
mul
dec
sbb
mov
cwtl
nop
outsl
pop
push
test
ja
out
and
mov
les
test
cmpsl
cmp
loopne
test
ret
push
push
popa
xchg
push
test
sub
mov
mov
cmc
pop
jl
imull
mov
adc
add
or
and
out
daa
pop
icebp
mov
jmp
mov
ljmp
inc
xchg
sub
lcall
sub
inc
test
aad
and
and
stos
ret
shrb
ja
aas
mov
jg
sub
ret
popf
fucomp
adc
and
add
jp
sub
sub
popf
and
inc
ret
push
sbb
sbb
sub
std
pop
xlat
pop
cmp
inc
out
jle
or
inc
insb
xlat
outsl
push
cmp
mov
pop
lahf
sti
adc
cli
ror
or
lea
mov
rcl
xchg
out
popf
sub
inc
bound
inc
and
pop
inc
xchg
xor
cmp
xchg
dec
sub
dec
mov
pop
stos
mov
add
and
scas
mov
xorb
or
cmp
out
fistpll
dec
sbb
add
jne
fistpll
fisttpl
jb
insb
push
cmpsb
mov
ljmp
pop
in
mov
imul
fwait
sbb
cmovs
ds
fnstsw
jl
add
adc
pop
push
rcrl
sbb
xchg
loopne
addr16
mov
repz
push
scas
mov
and
cwtl
aam
leave
repnz
cmp
pop
or
mov
divl
fldcw
mov
inc
pop
repnz
xchg
pusha
pushl
or
xchg
jle
and
test
and
pop
pop
mov
cld
xchg
lahf
mov
push
push
hlt
jg
outsl
or
push
in
pushf
fidivl
pop
dec
cmp
arpl
test
ja
push
add
lcall
inc
xchg
mull
fisttps
scas
and
add
out
fidivrs
les
std
sub
imul
and
hlt
movsl
pop
ds
rcll
shll
dec
int3
cli
xor
push
lds
inc
fwait
xchg
pop
add
ret
or
cmp
lds
insl
and
push
aad
jbe
xorl
lock
fwait
loope
xor
rcll
xchg
xchg
and
jb
rorl
sub
jp
pop
sbb
lcall
inc
and
loopne
cmpsb
test
jp
adcl
icebp
fwait
mov
cmpsl
divb
inc
repnz
mov
inc
shlb
mov
das
lea
adc
dec
jb
mov
inc
repz
xor
shrb
insl
or
nop
je
vpackuswb
sti
cmp
out
cmp
mov
jl
add
inc
mov
fisttpl
ljmp
cmp
popa
cmc
std
and
mul
xchg
adc
cmp
xchg
int
rorb
in
mov
mov
pop
mov
lret
sub
jo
adc
or
int
jg
jg
or
push
repz
popf
adc
jecxz
and
push
mov
or
or
repz
inc
lods
mov
adc
add
icebp
xor
ret
int3
inc
cltd
xchg
call
cmc
and
jmp
jl
cld
adc
or
mov
dec
xchg
addr16
out
ja
outsl
adc
pminub
dec
add
pop
jmp
xchg
pop
cld
jge
sub
popf
arpl
add
inc
ss
add
or
xchg
xchg
and
negl
mulb
inc
inc
push
xchg
xor
shrb
aad
hlt
lcall
in
adc
iret
or
add
mov
dec
ret
int
add
mov
xchg
xlat
fmull
pusha
xchg
loope
dec
cs
and
hlt
aas
es
pop
dec
lods
insl
imul
test
pop
pop
std
scas
ss
lret
in
rolb
mov
pushf
mov
enter
dec
sti
dec
in
das
inc
and
scas
sbb
jecxz
test
or
scas
xchg
nop
dec
jmp
push
mov
int3
sahf
xchg
add
mov
sub
cwtl
loopne
mov
and
leave
jmp
in
cmovs
mov
inc
push
adc
add
and
enter
xor
xorb
push
pop
loop
fbstp
jno
jae
mov
mov
gs
clc
dec
aam
subb
sub
dec
dec
push
cwtl
or
inc
cmc
add
movsb
pop
std
clc
loope
idivb
jmp
add
xchg
pop
xchg
sbbl
js
inc
data16
adc
repz
dec
xor
rolb
mov
loop
movsb
mov
nop
jae
sbb
inc
add
lock
lds
cmpsl
cmp
mov
adcb
arpl
andl
or
cwtl
add
mov
fs
jno
or
sbb
inc
into
adc
xor
aas
lock
dec
jle
add
and
mov
dec
mov
or
or
shl
or
sub
fdivs
pop
adc
test
pop
adc
popa
mov
in
mov
push
shld
lock
shlb
ljmp
fistl
data16
jne
cmp
push
ja
cmp
pop
add
ret
add
mov
jp
stos
repz
mov
test
jl
cmp
aas
mov
jle
fucomi
stc
sar
pop
dec
cmpsl
mov
fldenv
dec
inc
fs
fs
mov
fisttps
int
lock
sub
add
ret
ror
mov
incl
jmp
mov
xor
loope
mov
in
or
inc
adc
lds
mull
xor
xchg
ret
repnz
adc
shrb
inc
push
pop
push
mov
mov
pushf
ss
lock
mov
in
adc
gs
push
shrb
mov
test
sub
negb
dec
subb
out
dec
out
sub
arpl
fcomip
sbb
out
xchg
lret
xor
pop
push
jp
decb
jl
sub
lret
loope
ret
rep
popa
stos
test
popa
or
mov
mov
pusha
lahf
ret
ret
iret
mov
or
out
inc
aam
mov
stos
lods
fcmovnb
mov
lret
or
add
inc
or
mov
data16
mov
mov
rclb
sub
call
movsl
mov
pop
mov
push
dec
arpl
scas
loop
addr16
add
imul
cmc
sub
push
insb
inc
xor
fcos
sub
add
mov
push
add
push
je
sarl
mulb
push
pop
xchg
pop
and
aas
bound
lods
mov
mov
sub
push
loopne
dec
push
cmp
into
mov
jmp
ret
call
mov
out
cmp
scas
xchg
xor
rcrl
mov
cmp
inc
push
ret
mov
mov
sub
shlb
int
push
in
jl
mov
mov
pop
mov
xchg
inc
rorb
sub
lea
das
es
orb
jae
daa
call
ficomps
xchg
jno
imul
in
insb
sbb
jae
lds
dec
xor
aaa
jg
stos
sub
movsb
test
sbbb
out
inc
fstps
aaa
psrlw
push
vorps
sbb
jns
add
test
call
xchg
fistpl
mov
test
les
arpl
fidivrs
ljmp
daa
movsb
mov
cmp
and
movsl
scas
mov
mov
xlat
cmp
popf
data16
fistpl
dec
in
lods
push
cmp
xchg
bound
stos
mov
bound
fwait
jg
and
xchg
push
pop
lds
hlt
scas
lret
mov
fdivl
jns
push
movb
orb
jbe
add
pop
push
movsb
rcrb
mov
sbb
xchg
cmp
arpl
cmp
lods
fldenv
inc
dec
mov
pop
scas
and
pextrw
shrl
dec
or
adc
cmp
mov
dec
dec
ljmp
or
push
inc
lret
push
mov
add
fidivl
dec
fisubrs
inc
adc
sub
sub
sub
test
adc
movsl
fsts
pusha
sub
movsl
adc
sub
inc
les
sbb
bound
jp
sbb
sbb
loopne
data16
jmp
push
hlt
xor
iret
jg
mov
loope
test
daa
iret
dec
jns
data16
scas
lcall
incl
idivl
mov
cmpsb
and
dec
cmp
insl
stos
aam
xchg
mov
jo
loop
std
lret
mov
test
negb
dec
cmp
and
imul
jb
push
dec
lea
loope
movsb
negb
stos
cmp
mov
xorb
arpl
mov
divb
pop
pop
xchg
xchg
or
cwtl
adc
pusha
imul
sbb
inc
dec
fbld
fiadds
stos
xchg
test
adc
sbb
repnz
xchg
leave
mov
ficoml
sbb
movsb
lret
stos
in
sub
sub
in
test
orl
in
mov
je
aam
jg
add
sbb
stos
jbe
repz
in
and
xchg
pushf
add
addr16
xchg
rcll
test
ret
inc
stos
cmp
je
sbb
or
in
add
mov
xor
fldl
jne
xchg
push
sti
and
frstpm(287
popl
jo
out
mov
rclb
je
add
mov
or
mov
add
mov
inc
arpl
aad
sub
jne
xor
lret
das
icebp
and
jb
in
repz
adc
das
fsubrs
cmc
icebp
test
mull
dec
xchg
std
cmc
mov
into
dec
push
in
loopne
stc
mov
scas
push
fstps
jecxz
rorl
mov
xchg
jp
jne
pop
inc
out
stc
push
dec
pushf
sbb
pop
pop
fnstsw
jl
and
inc
pop
mov
pop
ffreep
cmp
fisubrl
call
sbb
cmp
neg
mov
lret
mov
add
mov
xchg
add
loop
std
fisttpl
inc
int3
pusha
aaa
push
mov
je
out
adc
mov
mov
or
add
cmpsl
mov
repnz
les
inc
jae
stc
test
jge
cmpb
movsb
pop
stos
lods
sbb
daa
and
sub
in
out
xchg
pop
and
or
adcb
fst
lret
push
das
sub
add
stc
nop
mov
lods
cmpsl
dec
lds
popa
push
outsb
pop
mov
inc
sub
sub
addr16
loop
pop
nop
cmp
faddl
and
inc
sarb
leave
push
int3
mov
pop
bound
ret
xchg
shrl
xor
rol
or
mov
add
in
mov
or
push
mov
mov
cmpsb
or
jle
mov
pop
bnd
cs
xchg
out
adc
adc
adc
xchg
stos
xor
lahf
xchg
jbe
mov
pop
fldenv
and
stos
fsubs
in
dec
or
aad
lea
jns
jle
nop
jmp
testl
stos
mov
mov
das
test
ss
cmp
fwait
dec
out
adc
inc
sarb
inc
add
push
adc
mov
mov
dec
out
mov
pop
xchg
es
into
jo
std
dec
pop
and
xor
imul
cmp
js
sbb
mov
das
lods
aad
fnstenvs
adcb
pop
adc
scas
jg
lea
mov
cld
inc
shrb
sbbw
dec
mov
sub
or
mov
push
sbb
and
stc
push
dec
int
aaa
rcrb
cltd
jno
fistl
movsb
xchg
lds
insb
mov
jb
cmp
gs
fisttps
stos
popf
jmp
dec
inc
test
xor
ret
in
stos
rorb
dec
mov
xchg
mov
jnp
cmp
or
fs
add
pushf
int
inc
pop
cmp
and
cmp
jo
data16
int
lret
ret
sti
mov
out
mov
insl
test
mov
or
sbb
daa
dec
ret
shlb
sub
stos
dec
jmp
push
cmp
xor
dec
cs
enter
fisttpl
mov
orb
lock
jmp
je
les
std
jl
dec
xchg
call
lea
ss
out
and
add
test
stc
test
push
mov
xor
push
subb
mov
std
ss
jnp
sbb
cmp
jbe
jnp
and
cmp
pop
shrb
shrb
mov
cmc
sti
mov
push
push
add
jnp
cmp
push
mov
push
sbb
shrl
inc
lea
test
pop
popf
add
in
lret
xor
jo
int
repz
arpl
pusha
scas
mov
clc
das
mov
mov
sbb
sub
ja
xchg
ret
in
mov
add
std
dec
push
hlt
jg
outsb
lock
xor
sub
sbb
xchg
icebp
nop
pop
mov
lock
xchg
lods
pushf
cmc
div
sub
vpmacsswd
shl
dec
pop
add
repz
fiaddl
test
imul
mov
enter
and
adc
sbb
sub
inc
dec
aas
adc
mov
into
and
dec
xlat
cmpl
sarl
test
jmp
adc
les
mov
cltd
daa
dec
dec
sub
dec
and
lods
pop
stc
shr
mov
xchg
pushf
js
pop
movsl
pop
stos
rclb
add
mov
sub
mov
push
sub
push
loop
mov
jecxz
lahf
cmp
mov
jecxz
in
pop
mov
adc
sub
mov
sub
cmp
clc
aas
adc
ret
in
sbb
push
push
lods
ss
mov
movsb
lahf
xor
sbb
rorl
and
xor
cmp
adc
xchg
pop
jns
mov
movl
pop
cmpsb
enter
or
xchg
mov
repz
test
lock
test
scas
aaa
push
out
lds
aas
stos
jle
rorb
into
mov
cltd
adc
jp
sub
mov
fcmovnbe
and
stos
add
add
cmp
jnp
popa
or
sbb
sbb
cmp
enter
fimull
mov
test
in
jge
push
outsb
les
dec
sub
jmp
sbb
or
mov
and
fidivl
icebp
rolb
push
insb
pusha
es
scas
add
sub
inc
pop
dec
ret
add
test
mov
xchg
and
push
cmp
xor
inc
push
jno
jnp
aaa
stos
sbb
andl
push
or
inc
fstpt
mov
outsl
cmp
and
xor
mov
pop
stos
lock
jne
jmp
inc
add
jle,pt
inc
pusha
fcmovu
in
add
inc
pop
inc
out
jmp
aas
mov
setno
xor
xlat
jle
mov
mov
jo
data16
fnsave
rcl
adcl
inc
add
loope
adc
xchg
test
call
lea
jnp
add
ffreep
pop
movsl
test
ja
inc
pop
and
push
inc
sti
mov
lahf
popa
or
dec
sahf
jb
movsb
inc
inc
adc
sarb
xor
shrb
nop
rol
icebp
sub
xchg
fsts
leave
dec
inc
jne
or
inc
mov
add
out
adc
cli
cmp
arpl
adcb
ds
mov
push
mov
jns
les
mov
data16
cld
stos
jmp
add
jae
jmp
pusha
and
in
inc
fs
push
sub
jp
aaa
pop
or
lods
lds
push
jns
mov
jmp
add
into
ret
add
adc
sub
out
xchg
cmp
loop
inc
vpmuludq
cmp
and
cmp
outsl
jp
xchg
cmp
push
xor
sbbl
push
addr16
test
sub
jle
insb
mov
fs
shrl
pushf
loope
mov
push
pusha
or
add
or
pop
lcall
loopne
push
jo
xlat
sahf
clc
movsl
and
mov
mov
inc
movsl
dec
add
xchg
xor
sub
lods
idivb
mov
stos
mov
cmp
adcb
jae
cld
cwtl
cmp
jne
mov
loope
xor
fucompp
push
push
jno
dec
inc
fbstp
fnsetpm(287
and
xor
and
fwait
inc
xor
je
xor
shlb
dec
test
sub
das
pop
int
out
push
sbb
xchg
ret
mov
xchg
lret
jecxz
divl
lcall
xor
clc
ja
scas
pop
std
ret
leave
stc
loope
mov
inc
xchg
daa
mov
jl
push
and
or
mov
fisttps
arpl
fdivrl
je
loope
add
mov
sti
je
sti
push
mov
push
inc
seto
iret
sub
sbb
add
xchg
popf
sarl
shlb
lods
mov
fdivl
test
sti
mov
xchg
in
ror
inc
arpl
jl
mov
aad
in
sbb
dec
sbb
add
push
lret
jno
enter
adc
rol
inc
es
jns
xchg
ss
rcll
push
pop
push
pop
sbb
ljmp
shl
cmp
mov
js
clc
lret
jo
mov
dec
mov
xor
std
mov
sub
loop
push
test
cmpsl
test
mov
mov
push
mov
xchg
icebp
rcl
int3
jo
xchg
in
iret
lock
jbe
jmp
mov
add
ja
add
out
sti
cmc
xchg
jle
mov
adc
arpl
and
pushf
dec
jae
pop
jns
jmp
push
fs
and
loop
fnstenv
jle
call
xor
sub
lock
dec
mov
ret
cli
pop
and
cmpsl
test
adc
jl
xchg
aad
icebp
and
sbb
push
mov
jo
cltd
push
and
sub
xor
mov
repz
and
xor
nop
testb
loope
mov
int3
adc
mov
andb
mov
jns
cld
xor
add
mov
jo
cmpsl
push
xchg
popf
fistpl
sbb
imul
fs
rorl
sbb
sbb
daa
bound
sub
sub
out
fwait
jle
inc
sbb
sub
sub
jge
pop
or
xor
das
hlt
iret
arpl
xorb
sbb
sbb
sub
xchg
fisttpll
pop
sbb
adc
mov
push
fcmovnbe
cmpsl
xor
decl
addl
xchg
sbb
fimuls
pop
lcall
xor
stos
dec
xchg
jp
pushf
inc
mov
cld
enter
jne
loop
mov
leave
and
test
mov
push
in
mov
mov
xchg
sbb
movsb
sbb
ds
leave
lock
test
fsubr
push
add
fisubrl
popa
pop
add
out
lret
cmpsl
xor
pop
cmc
pop
in
das
into
fisubs
out
or
test
cmp
xor
sbb
cmpsl
and
js
jb
and
and
jg
in
insb
jle
jle
fwait
jbe
xchg
pop
mov
mov
scas
pusha
rcr
incb
push
cmp
test
xchg
xchg
orb
test
xor
arpl
push
mov
ds
rolb
sti
pop
mov
adc
pop
je
outsl
int3
cmp
mov
les
repz
sbbb
mov
cmpsl
xchg
sbb
fisttpl
xchg
in
sub
inc
lds
fistpl
and
arpl
adcb
jae
xchg
add
rclb
cld
iret
pop
loopne
test
adc
jo
push
pop
out
push
jbe
pop
mov
or
pop
es
pop
subb
jecxz
jg
test
inc
cmp
push
daa
sbb
stos
rep
idivb
or
inc
aam
xor
iret
add
ret
aam
fbld
stc
lds
lods
das
xor
sbb
loopne
filds
jno
inc
fisttps
mov
leave
repz
scas
sub
push
cmpsl
stos
lahf
mov
and
sub
dec
ffreep
xlat
add
aad
or
dec
cltd
sub
inc
jp
rorb
sbb
test
and
push
inc
jbe
add
cmp
dec
in
xor
aad
cwtl
mov
mov
dec
and
inc
or
push
outsl
sbb
inc
hlt
cmp
and
test
lret
mov
lds
push
and
leave
test
stos
out
mov
mov
push
xor
jge
mov
adc
pop
mov
xchg
mov
mov
hlt
inc
mov
ret
mov
push
aaa
cmp
xorl
mov
adc
arpl
sarb
sbb
repnz
jmp
dec
jns
std
movsl
inc
les
sub
jmp
mov
cmc
sbb
sahf
in
cmp
jge
outsb
cmp
push
icebp
sub
pop
cmp
std
aaa
push
sbb
adc
jb
rclb
sub
mov
add
push
mov
push
iret
aad
std
imul
inc
out
ljmp
into
cmp
mov
mov
xlat
jo
repz
xchg
sub
or
lret
xchg
sbb
dec
roll
xchg
push
or
js
adc
adc
std
pop
inc
lods
cmp
ret
das
scas
js
rorb
lcall
cmp
nop
pop
push
fmul
lds
repz
sub
dec
aad
shrl
insb
xorl
sarb
in
cmc
push
int3
xchg
fidivrs
dec
aad
orb
mov
jne
adc
mov
in
insl
in
clc
das
mov
jns
sar
ret
sarl
mov
out
cltd
mov
cmc
mov
push
pop
in
adc
xor
add
mov
cmpsb
mov
popf
outsl
clc
add
in
in
aaa
jmp
aam
mov
cmp
icebp
fadd
and
push
shrl
xchg
ljmp
into
jp
mov
mov
jne
mov
cmp
fadds
sbb
mov
sbbl
call
mov
adc
lret
mov
lahf
clc
sbb
cltd
mov
leave
xor
mov
push
mov
mov
scas
fstpt
aad
sti
movsb
mov
jno
lcall
cmc
mov
je
test
cld
ret
sbb
imull
movsl
fidivrs
push
shrb
or
dec
push
adc
mov
dec
lods
sub
sahf
inc
inc
aas
push
dec
cltd
gs
dec
fsts
stc
push
insl
fs
and
jl
test
adc
or
ficompl
les
out
outsb
add
and
push
pusha
sbb
mov
enter
push
xchg
jl
mov
adc
pop
lock
popf
or
xor
or
push
jb
sbb
fldl
xor
push
outsl
cmpsb
cli
xor
arpl
stos
pop
outsl
adc
pushf
out
sbb
sbb
pop
mov
cwtl
rcl
push
dec
mov
pop
mov
push
mov
shlb
lcall
aam
aad
or
jecxz
outsl
adc
mov
sub
dec
xchg
stc
loop
dec
in
pop
sub
repnz
push
mov
adc
push
mov
push
mov
popf
es
xor
mov
mov
lcall
inc
in
les
fdivl
push
adc
pusha
jne
sub
push
push
cmpsl
rorb
aaa
jge
repnz
add
or
jnp
push
push
sub
or
icebp
pushw
jb
mov
dec
push
push
jle
mov
stos
mov
rcrb
jp
iret
push
fadds
inc
dec
and
push
pop
pop
shrl
dec
gs
sahf
jl
andb
daa
push
mov
push
push
inc
cli
jg
push
cltd
sbb
std
dec
sbb
fs
push
and
sub
sahf
adc
cwtl
cs
xchg
out
ret
jl
and
mov
mov
out
fcoml
cld
push
adc
pop
out
sbb
dec
mov
in
sbb
sarl
xchg
cmpsb
addl
scas
jo
sbb
pop
xor
iret
lock
out
push
xor
inc
cmp
out
or
rcrl
jge
xchg
xchg
push
into
out
into
dec
pop
popfw
les
adc
inc
orl
icebp
aaa
cld
movsb
cwtl
jecxz
inc
mov
mov
xchg
mov
ja
push
push
pop
cmp
cltd
or
xchg
add
iret
push
push
enter
in
sub
jmp
xchg
jg
ljmp
stc
and
cvtps2pi
fimuls
cmp
orb
inc
cli
xor
insl
or
add
int
sahf
xor
jmp
test
arpl
in
or
pop
add
or
push
je
dec
rcrl
xor
test
mov
sbb
stos
bound
mov
dec
cltd
dec
test
xchg
test
xor
dec
xchg
jno
inc
cmpsl
mov
scas
cmp
inc
repz
sub
call
in
pop
lds
sub
aaa
addr16
mov
fwait
dec
jp
arpl
pop
mov
pusha
add
dec
or
dec
daa
sub
bound
addb
movsl
push
gs
sahf
stos
imul
dec
sarb
xorb
push
mov
loopne
cmp
add
movsb
jge
cld
test
pop
ret
cmpsb
sub
jl
hlt
out
arpl
add
nop
cmp
mov
jbe
xor
sbb
pop
shlb
lcall
lods
and
adc
lret
and
or
call
cmpsl
jp
mov
icebp
sbb
ret
cmpsb
dec
pop
or
sahf
imul
xchg
jle
push
stos
jg
mov
inc
jecxz
push
inc
dec
inc
fsub
les
xchg
and
outsb
xor
lock
pushf
cmp
dec
cmp
xchg
jns,pn
or
mov
xor
dec
mov
mov
jne
je
lds
xchg
or
out
cli
sti
rcr
xorb
dec
int3
lds
ret
jno
lcall
popa
pop
inc
cvtdq2ps
and
gs
jns
pop
mov
push
js
xor
aam
into
mov
xor
into
test
or
mov
push
adc
sbb
xor
xchg
pop
ja
aad
jne
pushf
push
sbb
xchg
cmp
fistps
mov
pop
jmp
hlt
xchg
dec
mov
sub
stc
movsl
add
fnstenv
xchg
mov
sbb
ret
inc
push
in
mov
into
std
lock
lcall
lret
lea
in
or
orb
dec
mov
test
pop
cmpb
test
scas
inc
ljmp
jno
je
inc
ja
cmpsb
push
sub
imul
into
pop
xchg
mov
fisubl
sub
xchg
push
and
aas
sub
in
xchg
dec
outsl
aam
enter
pop
pop
popa
testl
push
pop
clc
or
aam
cli
jg
pop
mov
dec
cltd
subl
div
out
mov
sbb
adc
lea
xchg
xchg
cmp
pop
scas
pop
sbbl
inc
ljmp
cli
sub
push
cmc
add
mov
cli
lds
xor
repnz
xor
push
xor
fsubrl
sbb
into
jle
aas
popa
push
push
add
add
xor
gs
add
jno
lret
imul
push
fmull
push
adc
iret
pusha
jg
and
movsl
sub
movsb
mov
popa
loop
sahf
js
pop
mov
repnz
ljmp
leave
sub
ss
insl
mov
push
cmpsb
in
imul
xlat
jge
in
scas
fadds
repnz
outsl
gs
stos
clc
imul
repz
out
rcl
adc
ja
jecxz
lahf
aad
lcall
jo
adc
shr
aas
aas
rcrl
mov
sub
test
adc
push
sbb
clc
lret
shl
mov
ficompl
pushf
and
push
mov
aas
out
fs
int
xchg
arpl
pop
pop
jmp
sub
pop
xor
lock
mov
and
pop
mov
xor
jge
cltd
mov
mov
insl
mov
jp
lea
outsl
dec
aam
mov
ljmp
rcll
mov
je
popa
sbb
mov
addr16
adc
cmpsl
repnz
je
mov
ffree
sub
cmc
outsl
jo
repnz
mov
and
and
sbb
xor
dec
jmp
mov
and
popa
mov
add
std
mov
and
jp
imul
imul
mov
test
aas
xor
jg
inc
mov
fnstcw
pop
decb
xchg
inc
jge
xchg
gs
aam
and
sbb
inc
mov
mov
sbb
pop
push
testb
loop
cli
fcmovne
aam
cmp
jne
scas
sub
shlb
sub
xlat
mov
push
adc
mov
movsl
mov
cs
rclb
sti
mov
push
clc
mov
pop
pop
orb
mov
mov
pushf
aas
roll
scas
and
push
jecxz
push
push
ret
scas
negl
xor
push
mov
icebp
popa
test
sub
imul
mov
arpl
xchg
movsb
shlb
popf
push
push
pusha
sahf
icebp
and
cmc
mov
push
lea
outsb
inc
repz
jae
push
and
sti
hlt
scas
dec
pop
ds
mov
enter
xor
dec
lret
or
xchg
imul
dec
inc
add
push
cltd
fs
and
cs
gs
cmp
aam
fisttpl
cmc
dec
rorb
adc
stc
inc
pop
outsl
mov
add
rcr
mov
jbe
add
cmp
icebp
sbb
je
rcrl
dec
dec
xor
xlat
fcom
xchg
sbb
hlt
fcomps
mov
into
push
xor
add
stos
adc
fistpl
mov
orb
push
lods
repnz
inc
sar
clc
xchg
cmp
les
push
clc
mov
movsl
aaa
cmp
rol
icebp
enter
adc
mov
adc
or
jge
movsl
aaa
js
orb
cmp
dec
mov
mov
test
jno
cmp
sub
ds
shll
ret
lcall
in
cmp
cmpsl
das
jp
mov
cli
dec
add
test
add
lds
test
cli
repz
movsb
jp
dec
fmul
push
fistl
pop
jnp
or
enter
dec
sub
push
cwtl
mov
xor
add
pop
adcl
addr16
mov
jnp
inc
inc
bswap
mov
lds
lds
pop
ds
dec
das
test
aad
sbb
xor
iret
out
jg
cmp
mov
mov
and
js
jmp
cmp
push
loope
orb
mov
and
and
adc
jmp
stos
popf
cmp
cmp
mov
lcall
repnz
bound
sbb
mov
out
jbe
push
adc
add
xchg
loope
shlb
mov
lcall
enter
xlat
pop
xor
xchg
add
push
call
push
rep
dec
dec
sbb
cmc
xchg
cmpsb
sbb
jb
dec
outsb
xchg
rol
pop
les
jl
rol
out
inc
jl
out
lret
test
gs
mov
stos
push
xchg
mov
fisubrs
jne
pop
stc
push
and
xor
ret
sahf
lahf
jecxz
and
cwtl
mov
adc
jle
or
hlt
daa
sbb
faddl
adc
push
mov
adc
jo
stos
lds
iret
cmpb
hlt
adc
adc
je
dec
stc
ljmp
test
aas
popf
es
xor
call
loopne
mov
inc
sub
lahf
inc
pop
fcomps
push
dec
jnp
cwtl
movsl
adc
stc
mov
cmpsb
dec
pushl
xchg
dec
jns
jae
sub
add
outsb
sub
mov
cltd
dec
cmpsl
mov
lods
dec
std
popl
pop
push
popa
jg
xchg
lret
pop
fstl
add
jb
in
int
les
mov
jmp
sbbb
mov
cmp
xor
nop
mov
push
in
aad
fbstp
fstp
inc
movsl
stos
push
mov
cltd
push
and
xchg
dec
dec
aad
loopne
hlt
sbb
add
xchg
movsw
inc
pop
dec
loopne
rolb
scas
mov
mov
sub
ja
hlt
scas
mov
sub
jno
jb
mov
cli
stos
aaa
sub
xor
in
out
flds
mov
repz
xlat
dec
fmul
adc
adc
or
in
fadds
lret
jg
mov
repnz
mov
mov
fsubr
fcomps
mov
inc
cmp
cmp
pop
shlb
adc
lds
stc
call
push
and
add
push
jne
add
xor
dec
jbe
mov
faddl
mov
push
fimuls
inc
mov
cmp
dec
dec
mov
rolb
mov
cmp
arpl
xor
mov
pop
or
lock
hlt
popa
mov
call
jmp
fldenv
pop
ds
ja
mov
mov
ficoml
mov
cmp
jl
sub
push
fnstenv
and
mov
ficoml
dec
nop
aaa
shlb
pop
popf
dec
push
sub
out
shrl
imul
mov
stos
loop
into
push
adc
pop
mov
mov
arpl
sbb
or
pop
bound
lds
or
dec
sbb
jmp
dec
dec
arpl
xchg
push
xor
cmp
lret
aas
popf
adc
jmp
xchg
dec
pop
jp
dec
cltd
rorb
jbe
jns
lret
inc
bound
out
xchg
mov
enter
push
pop
xchg
add
dec
and
adc
add
insb
mov
rcrl
push
adcb
shl
dec
sub
push
inc
xor
js
popf
repnz
mov
fdivrl
lock
ja
neg
jb
xor
push
cmc
test
dec
sub
cltd
jmp
xchg
pop
rcrb
je
fdivl
xchg
test
pop
push
push
outsb
adcl
mov
pop
and
jp
jl
inc
adc
movsb
and
rcrl
sbb
repnz
xchg
inc
sahf
add
aad
mov
mov
adc
xchg
sub
insl
inc
pushf
sub
int3
fcoml
in
gs
pop
xlat
loope
pop
out
or
lret
shrb
bnd
adc
cmpsl
inc
lret
xor
out
fidivl
xchg
sbbb
fcmovne
pop
mov
mov
fdivl
std
or
add
cmp
adc
and
outsl
lds
stos
cmpl
out
mov
insb
cmpsl
scas
cmp
inc
pop
loopne
loopne
pusha
inc
push
ss
mov
dec
iret
xor
sub
add
lret
push
add
jae
aad
push
test
pop
leave
psubusb
popf
push
push
cmp
xlat
jle
enter
mov
cld
das
mov
movsb
rcrl
push
dec
test
inc
mov
jecxz
lret
cli
hlt
pushl
pusha
or
ficoml
andl
daa
xchg
inc
test
and
pushf
aad
mov
adc
cmp
xchg
mov
and
mov
xor
outsb
jb
test
cmpsb
push
jae
movsb
xchg
shlb
jae
cmp
sarb
and
sbb
test
int3
cwtl
call
jnp
movsb
sbb
inc
sbb
hlt
pop
dec
adc
outsb
dec
jp
add
jae
mov
ja
repnz
inc
sub
xchg
pop
jmp
stc
add
in
sarl
pop
dec
sub
cmp
aam
nop
aas
mov
jmp
repnz
mov
into
lea
pop
xchg
cli
and
cli
scas
fstpl
dec
and
add
insl
push
shl
cwtl
lods
jg
and
loopne
push
pop
ret
repnz
xor
mov
adc
jmp
sub
add
nop
xchg
gs
mov
out
inc
mov
sti
inc
mov
js
sub
into
add
add
sub
sti
xchg
mov
xchg
iret
cwtl
stos
call
aas
mov
cs
out
mov
cmpsl
lahf
fldt
test
ljmp
dec
pushf
xor
pop
xchg
js
in
or
mov
rolb
cmp
and
jno
test
cmp
or
in
dec
idivl
pop
iret
cmc
cwtl
mov
loopne
or
popf
stc
sti
cmpsb
iret
mov
jecxz
arpl
inc
scas
pop
pop
add
mov
loope
jo
enter
or
cld
mov
pop
add
popf
in
mov
les
ljmp
xor
rolb
dec
sarl
mov
dec
xorl
orb
mov
add
lahf
mov
cltd
jle
sub
add
fistps
dec
mov
sti
scas
pop
pop
lods
push
pop
jns
aaa
pop
lods
ljmp
mov
popf
ret
xchg
out
dec
leave
and
je
and
sub
movhlps
xchg
out
sbb
fs
pop
mov
or
pop
or
add
inc
xor
sbb
fs
add
xchg
xchg
cs
data16
rolb
xchg
shl
mov
pop
lcall
push
xchg
mov
pop
movsl
scas
sbb
or
out
fwait
add
jne
lock
jge
fistpll
push
cmp
rcrl
sbb
jb
or
addr16
sarl
js
fcomi
je
pusha
or
popf
loopne
insl
cmc
pop
and
cmp
mov
mov
dec
dec
and
iret
icebp
mov
stos
xchg
adc
popa
int3
mov
add
or
mov
aaa
adc
popf
sarb
push
sbb
mov
daa
add
out
mov
repz
sbb
jne
subl
fs
mov
inc
fsubrs
dec
out
mov
ret
mov
nop
cmc
sub
push
nop
xchg
dec
xchg
mov
add
xchg
ds
stos
hlt
mov
loope
cmp
push
jle
xchg
sub
cmc
fwait
sti
adc
push
mov
pop
lahf
xor
mov
fstps
lock
stos
xor
shll
or
int3
aas
jge
mov
subl
pop
fcoms
or
inc
dec
notb
dec
jnp
ljmp
sub
pop
dec
fsubr
dec
andl
mov
hlt
or
inc
push
out
xor
call
cs
dec
lds
int
loop
arpl
hlt
mov
lcall
cmp
das
loope
pop
pusha
xchg
cmp
sub
out
lret
test
orl
sub
inc
leave
xchg
dec
xchg
shlb
lds
push
xchg
or
mov
mov
jmp
jmp
fwait
sbb
sbb
sbb
lret
imul
or
andl
imul
mov
rorb
jecxz
xchg
xor
mov
dec
adc
lds
test
xchg
mov
mov
and
mov
xor
cmp
xor
in
sbb
stos
fisubl
adc
ja
adc
fsubrl
push
pop
ficompl
nop
inc
in
push
in
mov
or
sub
add
adc
js
mov
mov
ja
out
es
mov
mov
mov
iret
lahf
imul
aam
icebp
and
pop
jns
lahf
daa
ret
fists
mov
cld
adc
loop
loop
mov
insl
mov
add
jcxz
addr16
jle
loopne
mov
inc
lret
je
pushf
daa
cmp
push
mul
lret
xchg
mov
icebp
in
jecxz
mov
movsl
cmpsl
cmp
fwait
inc
xabort
shlb
aaa
sbb
pop
add
xchg
pop
sahf
pop
lods
sub
mov
mov
mov
ds
add
loopne
lds
add
repz
js
sbb
mov
push
ds
mov
sbb
out
repnz
and
ret
mov
xchg
cld
mov
test
into
xor
inc
sbb
lock
mov
pop
xor
test
mov
hlt
push
cmp
xchg
leave
sub
in
pop
les
mov
lea
in
cmp
loope
repz
stc
imul
in
pushf
adc
out
repz
aam
ret
loope
adc
mov
lods
xchg
inc
scas
adc
push
insb
pop
sahf
dec
out
repnz
xchg
xchg
sahf
cmpsb
cli
adc
jnp
add
mov
push
push
movq
aaa
push
and
inc
sbb
testl
xchg
test
sub
mov
push
aas
inc
sub
shr
xor
stos
lret
mov
pop
dec
lret
imul
pop
jle
fs
push
adc
jmp
mov
mov
in
jne
pop
inc
mov
outsl
adc
xchg
inc
mov
xchg
aas
daa
mov
loopne
rcll
pop
sub
xor
movsb
test
cmp
mov
pusha
in
xor
or
inc
fistpl
test
enter
inc
fnstsw
pop
mov
out
dec
sarl
inc
pop
and
cmp
mov
sub
push
aad
stos
sub
imul
mov
bound
or
xlat
sti
lods
mov
mov
out
xchg
aad
fadd
jp
push
lods
push
scas
xor
mov
mov
jg
xchg
js
mov
mov
inc
imul
xchg
test
adc
mov
push
jns
dec
les
xor
cmp
lahf
cltd
xchg
dec
mov
xlat
dec
cmp
inc
xorb
cmpl
pmullw
ja
out
mov
orb
inc
fisttpll
das
into
push
mov
push
mov
aam
push
das
mov
mov
pop
mov
xor
pop
mov
pusha
enter
or
leave
fstps
inc
adc
adc
pusha
adc
inc
mov
int3
dec
xor
imul
mov
jo
mov
sub
mov
movsl
sti
pop
popa
inc
ficoms
mov
daa
cmp
xorb
xor
mov
rol
and
push
ret
movsb
js
inc
inc
test
pop
les
mov
jmp
outsb
stos
xchg
xor
pop
pushf
push
xor
in
jecxz
mov
xchg
mov
mov
jbe
xor
fcomps
jb
mov
mov
push
adc
aas
jp
aaa
dec
inc
sub
dec
fisubrl
cmpsb
add
in
mov
sbb
lods
std
daa
fldcw
mov
je
lea
scas
and
cmc
notl
loopne
js
pop
fs
or
test
test
push
inc
icebp
in
xchg
jmp
jae
fwait
xchg
xor
jo
xchg
dec
mov
push
rcrb
mov
push
test
pop
jae
cld
jge
test
ljmp
sbb
pop
pop
pop
xchg
mov
lock
inc
test
lds
js
mov
iret
mov
call
jp
ss
repnz
xor
pushf
mov
incb
inc
push
gs
call
mov
dec
jle
mov
shll
jg
cmp
pop
mov
cltd
cmp
mov
fwait
xchg
test
jae
xchg
mov
data16
mov
jle
pop
int3
mov
xchg
es
or
in
lea
dec
rclb
outsb
pop
sbb
mov
cmpsb
xchg
repz
out
jge
rolb
jmp
lods
inc
rcrb
mov
push
les
mov
inc
add
jmp
rorb
cmpsb
inc
push
cmpsl
adc
mov
aam
gs
in
dec
inc
push
or
clc
cld
out
jmp
ljmp
xor
fsubs
jle
sti
jle
dec
lods
pop
and
lret
lds
rolb
xchg
fcmovnbe
mov
jb
jecxz
jne
lahf
lds
dec
fldcw
movsl
test
dec
add
mov
mov
jo
insb
xor
xchg
dec
nop
mov
pop
cli
movsl
add
int3
inc
add
add
repnz
ret
add
mov
fwait
jns
ljmp
pop
pop
iret
jle
xchg
sahf
dec
mov
adc
rcpps
sbb
pop
pop
xor
mov
aas
xchg
jae
call
and
lret
out
push
inc
test
scas
js
jo
add
arpl
pushf
add
pop
fisttpll
mov
mov
add
pop
or
loope
loopne
hlt
add
sub
and
jae
push
xchg
or
dec
rorb
fmuls
dec
pusha
adc
mov
xor
es
loope
scas
in
dec
test
mov
cmp
cmp
adc
ret
pop
sahf
addb
fsubr
nop
adc
mov
mov
aaa
outsb
and
sahf
out
xchg
jp
xchg
pop
push
out
sub
bound
mov
ret
sub
push
sbb
hlt
in
roll
stos
lcall
mov
mov
stos
das
or
ljmp
xor
push
dec
mov
sub
aas
mov
push
dec
push
mov
addb
enter
bound
sbb
scas
outsl
push
out
lods
mulb
lock
scas
inc
clc
cmp
cmpsb
dec
shlb
cmp
sti
and
out
lods
sahf
pusha
aas
xor
lcall
lea
mov
xor
push
jbe
xchg
lret
dec
lcall
add
adc
jl
insb
jp
add
fbstp
mov
iret
data16
mov
std
xchg
and
jmp
pop
pop
lock
flds
enter
mov
mov
stos
xor
adc
jb
jge
ret
mov
cli
popf
out
cmc
ret
out
adc
and
cmpsl
cmp
ja
test
sub
out
cwtl
aad
adc
jno
ljmp
push
int
inc
push
pop
dec
iret
aam
roll
xor
mov
in
call
shll
subl
gs
mov
test
xchg
pop
lret
push
inc
lea
push
or
mov
inc
cltd
in
cs
iret
mov
out
lods
iret
mov
gs
scas
filds
rcll
lcall
and
jle
pop
and
bound
dec
ljmp
sub
push
lods
add
jl
dec
rorl
hlt
ficomps
loop
sub
mov
fisttpl
cmpl
jns
ljmp
adc
lret
xchg
hlt
cmp
daa
insb
mov
decb
daa
hlt
xor
inc
mov
jb
jle
cmp
push
cmpb
daa
stc
movsb
mov
outsl
mov
jo
gs
sahf
insl
or
mov
mov
inc
sbb
inc
ja
ret
negl
sbb
xchg
mov
sbb
sarb
inc
mov
jp
push
aad
mov
fdiv
mov
lods
arpl
sub
mov
inc
pop
mov
cmc
pushf
movsb
push
shll
inc
sub
dec
imul
jae
mov
mov
jle
scas
mov
jo
mov
outsb
stos
mov
pop
imul
inc
and
mov
stos
sub
push
cmp
or
push
or
push
in
dec
sbb
gs
cmp
movsl
mov
xchg
std
inc
popa
and
pop
ss
shlb
jmp
sub
ficoms
mov
mov
loope
loope
cmp
jns
fcmovnbe
fcmovne
arpl
jle
in
pop
or
lea
lods
and
dec
test
jae
push
mov
leave
sbb
jge
mov
add
outsl
nop
jbe
rcrb
aam
stc
out
aad
sbb
xor
dec
push
imul
push
int3
xchg
sahf
ret
int3
out
adc
les
pop
pop
aas
mov
or
inc
fnstcw
push
lret
inc
xor
sub
shll
ljmp
leave
mov
mov
pusha
cltd
push
adc
cmpl
mov
mov
das
fadd
pop
and
bnd
mov
das
lods
aaa
repnz
cmp
pop
pusha
inc
jmp
and
in
adc
xchg
test
push
ljmp
filds
inc
dec
movsb
adc
bound
add
stos
pop
sbb
sub
jecxz
leave
bnd
push
cmpsb
and
pop
xor
gs
cs
add
decb
lea
xchg
orb
sbb
jae
pop
popf
sbb
das
aam
ret
mov
lret
shll
fcomip
sar
cmp
test
mov
xchg
cmp
pop
incb
pop
out
neg
orl
sub
dec
mov
xor
push
rolb
adc
mov
mov
xlat
sub
nop
add
idivl
jne
mov
out
push
add
inc
sub
xchg
test
pop
rcrb
lahf
bound
lds
xor
pushf
aad
leave
push
or
aaa
xchg
mov
mov
scas
divl
into
mov
jnp
jno
sub
cmpb
sub
loope
pop
cmpsb
push
inc
pop
and
mov
imul
lds
and
push
popa
cmp
inc
cli
aas
mov
testl
sarb
inc
jbe
sbb
cmp
inc
subb
adc
fmul
push
pop
jg
lahf
pop
lods
xchg
scas
cld
xchg
or
mov
hlt
push
stos
push
mov
iret
sub
ret
sub
ds
cmp
popf
jns
xlat
sbb
jne
sahf
aad
ret
sbb
inc
pusha
dec
cmpsb
addl
jb
popa
aam
push
xchg
jae
push
ret
repz
mov
cmp
das
dec
fisubl
iret
test
sub
test
fbstp
adc
sbb
rolb
dec
std
pop
xchg
int
sub
and
cltd
and
in
into
adc
add
arpl
addr16
adc
pop
xchg
cmp
sahf
add
clc
pop
adc
sbb
pushf
cwtl
mov
pop
roll
repnz
and
cmp
imul
add
xor
mov
lods
cs
add
lret
and
xchg
dec
push
sbb
push
dec
dec
loop
or
lret
push
lcall
fcmovnbe
aaa
or
mov
cmp
xor
lds
insl
mov
sbb
inc
adc
jnp
xchg
leave
pop
jo
mov
jnp
adc
xchg
rclb
mov
mov
jle
dec
or
pop
push
jmp
addr16
mov
push
in
mov
inc
cmp
rclb
adcl
adc
shll
cmp
xor
inc
and
icebp
mov
je
jmp
cmpsb
test
add
inc
and
les
cmpsb
mov
clc
add
scas
fistpl
and
xor
shll
mov
sub
inc
xor
fcmove
les
mov
gs
xchg
cltd
cmp
or
out
pop
mov
call
jne
mov
xchg
aad
outsl
iret
jb
and
loopne,pn
sahf
ss
adc
daa
or
pop
jo
imul
sbb
push
mov
loope
dec
rcrb
popf
test
jnp
xchg
cmp
push
bound
and
loope
push
ret
lcall
sbb
pop
mov
jae
enter
push
mov
pop
decl
push
jmp
mov
js
scas
mov
jns
and
adc
inc
out
movsb
xor
nop
xor
ficoms
test
shrl
cltd
enter
jno
sub
pop
ds
mov
into
in
and
rcrb
jnp
gs
pop
jae
sub
inc
push
sub
dec
mov
or
push
inc
pop
adc
orb
call
outsl
in
gs
negb
es
ficomps
dec
out
mov
push
push
lds
cmc
xchg
pop
mov
xchg
clc
fnstenv
inc
jae
fs
dec
leave
push
pop
cmp
cmc
push
fs
test
ret
xor
lds
pop
shrb
mov
loop
sub
cmp
out
mov
inc
push
xchg
and
xchg
jb
push
push
dec
dec
add
adc
mov
xchg
cmpsb
roll
inc
push
jno
add
daa
pop
mov
fstps
faddl
and
outsl
xor
jno
mov
dec
clc
mov
nop
shl
adcb
loopne
loopne
imul
rorb
inc
xchg
sub
pop
xchg
jne
cmp
push
imul
or
cmp
inc
or
es
scas
inc
add
fwait
or
mov
lods
fisubs
scas
xchg
mov
dec
jle
scas
and
je
fnsave
outsl
sub
sbb
cmp
dec
out
int3
or
shrw
out
push
popf
out
dec
idivl
out
sbb
add
mov
inc
pop
test
testb
inc
sbb
scas
fst
insb
arpl
xor
sbb
jg
and
pop
in
jle
outsb
fbld
shlb
push
les
dec
jl
pop
jo
loope
scas
dec
push
insb
fwait
pop
jbe
lea
or
dec
jb
push
push
mov
popf
and
sub
pop
or
fdiv
cli
pop
repz
out
cli
inc
pop
lret
push
xor
inc
mov
nop
mulb
jae
jge
or
shlb
or
test
scas
inc
and
lods
aam
jnp
xchg
mov
inc
sub
xlat
push
mov
enter
mov
sbb
mov
loope
jb
and
mov
pop
add
mov
xchg
xchg
mov
aas
adcb
fldcw
lcall
adc
mov
mov
scas
sahf
mov
dec
aaa
mov
push
mov
fsubrp
pop
lods
lret
jmp
in
sub
scas
fwait
jp
es
rcrl
aas
xor
je
js
cld
scas
mov
inc
add
jns
sahf
gs
mov
sbb
ror
add
lods
test
mov
inc
pushf
stos
movsl
push
sbb
xchg
mov
lret
push
xchg
jo
mov
mov
lret
cmp
test
imul
and
or
dec
int
sbb
jge
xchg
pop
mov
dec
or
pop
loopne
cmp
mov
ffree
mov
dec
jns
or
mov
in
sub
mov
lock
scas
pop
movsl
mov
push
aam
jl
pop
movsl
xchg
mov
ljmp
fsubrp
leave
sarl
jmp
mov
mov
mov
dec
xchg
in
fwait
xor
cmpsl
test
xchg
lds
mov
lea
pop
lret
inc
dec
sub
adc
and
fisttpll
adcb
sti
arpl
mov
imul
pop
mov
scas
testb
inc
cmp
and
lret
jnp
mov
addb
pop
mov
jno
faddp
es
daa
xor
xlat
sbb
lahf
mov
mov
add
fcmovnu
adc
push
call
add
call
inc
aad
push
mov
mov
or
pop
hlt
mov
inc
repz
mov
xchg
cmpsl
fidivl
hlt
xlat
imul
pusha
pop
jge
mov
sbb
stos
das
mov
jmp
jge
loope
push
aaa
lock
mov
int3
aaa
sbb
inc
mov
out
aas
or
aad
punpckhdq
pop
lods
cmc
mov
outsb
push
adc
adc
fildl
xor
jle
sahf
daa
dec
stc
pop
jmp
cmpsb
xchg
push
mov
pop
adc
sbb
sbb
pop
enter
mov
iret
inc
adc
hlt
out
mov
rcr
mov
push
mov
pop
or
mov
js
aam
dec
fsubs
lods
pop
inc
mov
mov
adc
dec
dec
test
mov
popa
je
inc
out
pop
xor
cmp
cmpb
mov
ds
xchg
pop
mov
lahf
inc
dec
add
adc
pop
popf
movsb
xor
pop
jl
pop
orl
sub
jbe
ret
shl
ret
outsl
mov
xchg
xchg
adc
daa
inc
dec
or
aad
push
sti
sub
jg
mov
lock
jb
xchg
shrl
leave
dec
fisttpl
mov
mov
cmp
mov
iret
fisubrl
xchg
repz
xchg
mov
jo
or
and
and
xor
inc
push
std
xchg
cmp
test
xchg
ds
pop
jb
or
cmp
lods
gs
jo,pt
hlt
mov
adc
add
ljmp
pusha
dec
sub
pop
add
iret
and
mov
xchg
push
push
dec
mov
sbb
pop
orb
xor
jmp
insl
idivb
and
ds
imul
lds
adc
mov
dec
or
xor
jmp
push
cmp
ss
push
lds
and
clc
mov
adc
hlt
imul
loop
dec
sbb
in
outsb
dec
mov
lods
dec
pop
mov
dec
push
out
repnz
push
mov
mov
xchg
icebp
out
movsl
mov
fsubl
mov
jae
aad
pop
test
arpl
add
cmp
out
mov
mov
cmp
and
aaa
pop
loope
xor
sti
xor
or
mov
jns
push
inc
es
clc
jae
push
sub
and
rcr
mov
ja
and
adc
mov
sar
int
nop
sahf
mov
test
lds
mov
mov
pop
inc
or
sub
push
xor
mov
mov
mov
dec
xchg
sahf
cmp
jle
adcl
insl
lcall
sub
cmpxchg
jo
cwtl
sub
inc
pop
sarb
xlat
jo
stos
mov
loope
push
outsl
inc
push
rcrb
cmpsb
sbb
jl
push
push
insl
fdivrs
push
sub
pop
adc
out
inc
push
cmpsl
sub
mov
push
pop
jae
jg
jno
out
xor
inc
sub
movsl
adc
shlb
mov
jns
inc
ret
or
test
mov
outsb
jae
jnp
cmp
mov
xor
dec
mov
push
pushf
psadbw
mov
cli
or
cld
adc
rclb
stc
sub
decb
outsb
int
push
push
and
cmp
sahf
cmp
push
mov
lret
shlb
mov
addr16
outsb
call
xchg
sti
ficoms
sarb
xor
rcl
aaa
cmp
cmp
push
add
fwait
ret
jp
xor
push
cmp
push
fs
scas
push
into
xor
int3
out
mov
adc
xchg
mov
dec
xchg
js
inc
push
or
jmp
or
in
adc
insb
in
xchg
lret
aam
add
push
pop
fcmovnbe
jg
out
ret
into
push
loope
dec
loope
mov
fists
jp
cmp
mov
mov
int3
or
or
in
sahf
or
xchg
mov
sub
jg
loopne
jmp
mov
cmpsl
or
loope
ljmp
jo
mov
add
cmc
jns
sti
mov
aad
in
jmp
add
rclb
ret
cltd
rcrb
sbb
cmc
scas
rol
ja
mov
pop
jbe
sbbl
bound
push
mov
sti
fnstsw
or
mov
lds
mov
sub
aas
mov
push
jo
mov
fsubrs
loope
clc
push
adc
xchg
dec
adc
jmp
push
push
leave
inc
leave
lahf
fnstsw
sub
cld
orl
xor
scas
mov
xor
out
lcall
cmp
or
into
cs
ficomps
mov
insb
stos
lods
xchg
mov
sub
sbbb
push
xor
test
outsl
dec
cs
sbb
fs
sahf
mov
sar
stc
outsb
icebp
pop
mov
pop
push
jnp
inc
div
or
inc
imull
les
xor
push
or
roll
pop
daa
sahf
jmp
roll
pop
or
adc
pop
aam
adc
cmp
sbbl
dec
fcmovnbe
mov
shrl
jge
daa
jno
in
mov
xorb
insl
rcr
in
jo
orb
roll
mov
sbb
jl
movsl
rolb
aaa
std
push
imul
repz
mov
xchg
and
out
xlat
adc
dec
jp
sti
cmp
in
jo
cmpsl
sbb
cmp
imul
sbb
and
mov
rcrb
sub
loop
or
fisubrl
addr16
cmpsl
and
test
jne
js
pop
pusha
and
inc
loope
push
arpl
push
adc
lahf
les
iret
jne
mov
inc
mov
repnz
jbe
je
xor
ljmp
mov
mov
andl
pop
das
std
int
jo
fwait
into
sbb
xchg
jmp
jne
gs
push
lret
scas
sbb
mov
jns
jmp
push
movsl
aas
sarl
or
mov
in
sbb
adc
fisttps
mov
xchg
shrb
cmp
jae
and
inc
sub
inc
jge
sysenter
xchg
cld
jnp
scas
subl
mov
and
jbe
sub
lahf
xchg
xor
into
adc
sub
jge
cbtw
out
fsts
subb
push
adc
int3
out
fcomps
orl
cmp
fldcw
pop
int
mov
xchg
fidivrl
mov
add
xchg
push
in
das
mov
jg
movsb
out
dec
or
das
cli
out
lds
or
in
xchg
stos
push
mov
enter
cld
ljmp
out
xchg
cmp
cmc
jae
imul
pop
test
aaa
mov
lea
mov
mov
pop
sbb
inc
cmp
xchg
clc
ja
add
mov
sbb
dec
fs
pop
xor
mov
jo
repnz
inc
jns
lcallw
lret
outsl
adc
stos
inc
das
mov
mov
enter
sub
popa
lret
mov
lea
inc
test
push
xchg
int
pop
notb
outsl
fadds
add
xlat
movsl
hlt
dec
aaa
sub
movsb
sub
pushf
daa
hlt
pop
fwait
cltd
sub
jbe
cmp
repnz
jmp
aas
and
bnd
mov
dec
cmp
pop
sbb
dec
xchg
xchg
cltd
arpl
and
lea
xlat
add
stos
in
mov
xor
in
sarb
repz
outsb
mov
dec
pusha
shlb
mov
mov
adc
data16
loope
xchg
push
nop
fdivrp
icebp
repz
out
idivb
and
mulb
stc
pop
add
stc
lret
pop
mov
xchg
fs
pushf
xchg
cmp
jecxz
icebp
scas
popa
sbb
sti
adc
lods
lock
icebp
cmp
push
mov
inc
sub
adc
popf
test
sbb
mov
cmp
sub
sbb
pop
aam
ljmp
scas
dec
pop
shl
outsl
mov
or
insb
mov
scas
inc
mov
xchg
mov
ret
xor
sti
insl
mov
outsb
sti
lret
ret
movsl
add
inc
add
setne
mov
cwtl
cmp
xchg
andb
push
negl
push
mov
fcoml
or
stc
stos
xor
sub
push
movb
roll
clc
jecxz
cmp
mov
idivl
call
pop
aad
test
xchg
les
repz
mov
shll
mov
icebp
push
clc
push
out
mov
fwait
mov
out
push
lcall
xchg
adc
fiaddl
pop
xchg
push
jo
icebp
mov
aam
ror
cli
inc
mov
mov
push
cwtl
inc
pop
imul
das
mov
sbb
jmp
aaa
js
and
lock
stos
mov
cmp
adc
push
rolb
xchg
jge
xor
mov
or
icebp
mov
scas
pop
pop
jmp
repnz
lret
cmp
rorb
ds
cli
popa
jo
std
dec
cmpb
sbb
loopne
sub
push
jb
std
ja
orb
fisubrl
xchg
pop
cli
js
pop
jp
mov
hlt
dec
xlat
lret
cli
pop
rcrl
ljmp
idivb
jl
cltd
jge
xor
mov
cmc
sbb
adc
or
fdivs
add
sub
and
mov
mov
dec
aam
dec
mov
adc
sub
popf
xor
loop
ja
and
cwtl
inc
popf
xor
mulb
adc
popa
xchg
sbb
inc
sbb
loope
inc
mov
inc
jae
mov
ss
mov
mov
push
cmp
outsb
es
addr16
sub
jg
stos
mov
lds
xor
or
and
pop
idivl
xor
mov
fs
jnp
or
xchg
nop
add
mov
cmp
jp
repnz
mov
ds
inc
int
lods
xchg
addl
scas
push
inc
push
mov
insb
fstpl
scas
gs
pop
repnz
arpl
inc
dec
in
enter
lock
xchg
movsl
or
dec
xor
ja
or
add
xchg
fistpll
in
fistps
xlat
mov
cmp
jge
shrb
stc
add
insl
adc
dec
lock
push
stos
push
sti
mov
mov
xchg
push
dec
mov
mov
push
fistl
test
lret
rcrb
jl
es
and
jecxz
test
imul
idivb
and
mov
mov
aam
cmpsl
mov
popa
pop
mov
mov
and
cmp
iret
push
or
cmp
arpl
xchg
xlat
popa
pusha
ja
les
popf
or
or
push
adc
xlat
adc
push
int
or
pop
pop
pop
dec
cltd
push
dec
and
xchg
mov
daa
lret
xchg
ret
sbb
jmp
ljmp
je
jne
inc
xor
addl
push
dec
mov
lods
push
divb
loopne
test
mov
xchg
mov
add
aaa
outsb
xor
push
dec
fs
cmpsl
inc
adc
jl
ja
mov
or
mov
dec
outsb
into
loop
subb
xchg
lret
mov
lock
dec
adc
lods
push
sub
dec
sub
adc
sbb
or
and
dec
repz
ficoml
and
pop
dec
push
cmc
hlt
in
movsl
lea
jecxz
je
mov
ret
daa
lret
sub
clc
dec
scas
push
popf
loop
in
leave
ja,pn
dec
in
nop
std
inc
test
negb
sub
test
loope
stc
push
fisttps
push
cld
push
imul
dec
or
mov
cmp
push
adc
xor
dec
movsl
cltd
dec
or
inc
and
scas
mov
lods
pushf
cmpsb
xor
jecxz
test
push
arpl
loopne
dec
mov
test
enter
xchg
ret
dec
xchg
fcompl
test
nop
insl
clc
mov
cltd
mov
and
fdiv
mov
dec
fisubl
loopne
push
mov
xor
enter
dec
test
fs
xor
push
lds
aad
or
dec
cmp
xor
mov
sub
lock
mov
in
cmpsl
stos
pop
int
hlt
outsb
cwtd
mov
mov
data16
jg
in
jp
stos
dec
enter
adc
test
mov
ret
lods
aas
rcll
pop
xor
insb
shrd
sti
nop
xchg
rclb
cs
pop
mov
dec
and
adc
test
cmpsb
lret
push
imul
scas
dec
jle
mov
add
nop
dec
subb
jo
jne
je
sub
push
pop
push
dec
xchg
scas
xchg
sbbb
out
jl
fucompp
outsb
nop
mov
jmp
push
ret
clc
xor
loopne
or
dec
cltd
call
jp
outsl
shlb
das
dec
sub
js
mov
inc
andb
icebp
aad
insb
roll
or
pop
and
mov
cmpb
sbb
ret
xchg
pop
push
jb
jl
lods
scas
jmp
push
lods
inc
ret
das
xchg
jae
push
in
cmp
outsl
cmp
or
inc
dec
xchg
jns
test
je
jg
sub
lds
lods
lret
cmpsb
push
in
mov
aaa
imul
pop
dec
sbb
das
and
rolb
out
adc
xchg
leave
pop
and
xorb
jmp
push
cmp
stc
sbb
inc
rcrl
push
sbb
lods
jl
outsl
add
daa
aaa
pop
test
shll
mov
sahf
daa
lock
mov
arpl
cmpl
mov
mov
dec
hlt
mov
cmp
inc
cltd
in
mulb
and
outsl
es
jns
lcall
push
push
call
xor
jbe
insl
sbb
rcrb
dec
ret
cltd
push
xchg
mov
cld
popa
lret
sbb
divl
out
aas
aas
out
aaa
mov
stos
inc
or
int3
jp
addb
dec
jmp
sub
ja
jecxz
inc
bound
movsl
lret
cwtl
test
loope
dec
repz
jnp
call
jbe
lcall
or
pushf
jg
lcall
cmpsl
or
scas
stos
inc
jp
hlt
mov
add
enter
sub
aad
add
ds
jns
dec
in
sub
hlt
sti
cltd
xchg
test
outsl
mov
mov
xor
into
repz
lods
stc
daa
scas
push
sbb
insl
call
push
into
scas
or
movb
pop
push
fsubl
mov
sub
pop
call
sub
xchg
mov
xor
out
mov
mov
mov
addr16
aaa
sbb
xchg
jp
in
test
xor
or
mov
push
inc
notb
arpl
lea
lods
jge
rcrb
or
mov
xor
cli
sbb
mov
cmp
xor
adc
scas
xchg
jmp
xchg
jne
xchg
out
adc
sub
div
xchg
sbb
jle
jns
inc
push
fnstenv
push
or
push
fdiv
inc
dec
repz
mov
sub
adc
and
push
inc
inc
mov
js
popa
sbb
and
sub
sbb
cmp
xchg
mov
loope
out
mov
ret
cmpsl
test
arpl
repz
gs
fbld
dec
or
inc
jl
enter
mov
sub
or
sub
inc
and
jl
sbb
es
ljmp
ret
pop
sahf
je
inc
or
ja
inc
add
mov
xchg
testl
mov
xor
out
fadds
push
cmpsl
sbb
add
push
or
push
mov
scas
inc
lahf
jg
xchg
nop
or
and
mov
addr16
dec
push
pop
outsb
std
pslld
dec
mov
cld
jge
cli
pop
push
test
pop
cltd
push
inc
fwait
adc
cltd
mov
scas
xchg
jmp
or
adc
popf
mov
mov
inc
inc
cld
aam
pop
xchg
outsl
sbb
out
cli
cmpsl
pusha
out
sub
xchg
inc
mov
sub
push
push
aas
jmp
xor
shlb
testl
insl
mov
or
lods
inc
idiv
mov
jno
push
xor
pop
cwtl
dec
pop
mov
ret
mov
and
cld
mov
dec
push
insb
sahf
lods
hlt
scas
mov
hlt
aam
jno
clc
or
xlat
movsb
sub
inc
in
add
jnp
pop
movl
mov
out
outsb
dec
inc
adc
in
mov
test
test
dec
dec
sbb
lahf
mov
or
scas
sarl
out
loopne
fdivr
dec
jmp
jnp
mov
pop
es
loope
ljmp
movsl
outsb
or
xchg
cmp
mov
push
fs
insl
int
xor
adc
sbb
cmp
das
inc
inc
mov
orl
cmp
gs
je
test
into
daa
push
push
fdiv
sti
test
sub
arpl
loopne
ficoml
lea
xchg
ret
mov
jbe
js
repnz
sbb
push
cmp
mov
jmp
cmc
jecxz
frstor
mov
call
stc
aas
repnz
xchg
pop
mov
aas
out
add
pop
inc
inc
jmp
add
fiaddl
bound
jno
xchg
mov
xchg
cwtl
mov
inc
xor
movsl
pop
add
dec
pop
test
ja
push
loop
std
dec
inc
lret
push
cmc
outsb
jbe
shlb
test
xor
pop
cmp
or
sub
outsl
cmp
lret
mov
ret
in
mov
adc
cmp
pop
inc
mov
dec
jne
jb
into
xchg
in
aaa
pop
pusha
and
xchg
and
jne
imul
push
imul
ret
sbb
lds
jle
mov
loop
cmpxchg
add
mov
mov
adc
mov
mov
xchg
xchg
xchg
adc
std
hlt
pusha
movsl
push
xchg
mov
inc
icebp
flds
fcomps
int3
sbb
inc
mov
aad
inc
cmp
rorl
and
or
mov
unpckhps
loope
sahf
sbb
std
dec
test
in
sub
lock
push
int
mov
cmp
fs
xchg
mov
in
mov
cmp
jp
push
in
cmp
cmp
test
sub
shl
shll
icebp
add
jne
mov
es
cld
cli
loop
xlat
sbb
aad
push
and
pop
pop
xchg
ret
push
adc
inc
shll
sbb
push
pop
jle
xlat
pop
outsl
subb
jbe
out
testl
add
popa
add
loopne
jle
mov
push
test
stos
inc
pop
imul
lds
in
fcompl
mov
fisttps
lods
xchg
repnz
fcmove
in
call
mov
and
fnsave
rcr
push
stos
andb
clc
xchg
dec
in
dec
dec
inc
nop
cmc
or
dec
push
mov
adc
push
or
testl
in
xor
rcr
push
pop
cltd
fnsave
adc
ds
popf
mov
dec
adc
add
inc
or
xor
fisubrs
xchg
dec
fdivp
test
inc
sbb
mov
shlb
lret
adc
test
xlat
cmpsb
sub
std
lds
out
sbb
aad
sbb
ljmp
or
or
jle
cld
inc
std
loopne
imul
ss
mov
dec
inc
daa
adc
aas
dec
pop
ljmp
mov
push
mov
sar
cld
jo
mov
stos
cmp
enter
inc
cmp
pop
mov
sub
scas
xor
and
shr
enter
aas
xchg
repz
jmp
in
cmp
cli
dec
inc
repz
rcrb
data16
xor
icebp
test
aad
mov
xchg
shl
mov
mov
ljmp
mov
xor
jp
fstpt
push
mov
stos
push
mov
inc
jno
cmp
xchg
call
push
test
push
test
and
cmpsb
add
mov
int
sbb
je
push
rcl
icebp
hlt
sub
dec
out
int3
xchg
ret
jge
add
pop
cld
movl
dec
lret
pop
in
scas
or
sub
sbb
pop
xor
scas
iret
outsb
popa
hlt
fmuls
and
pop
mov
cli
popa
mov
test
andl
jae
jle
mov
xchg
mov
movsb
mov
push
sbb
scas
adc
pop
inc
iret
adc
neg
scas
stos
sub
lods
or
mov
outsl
mov
movsb
inc
mov
mov
mov
sub
es
in
icebp
jne
cmp
or
addl
jp
insl
sub
aad
mov
fdivl
sub
adc
inc
enter
in
xchg
int3
mov
rcll
dec
xchg
movsl
sub
dec
int
jle
int
xor
lods
push
out
in
loop
cmpsl
jbe
mov
aaa
out
xchg
repnz
into
mov
push
mov
imul
jne
cmp
in
std
sti
sbb
fcmove
adc
pop
loope
insl
and
xchg
leave
mov
mov
cltd
push
adc
out
cs
retw
data16
scas
call
or
mov
or
push
adc
les
ret
outsl
lcall
pop
inc
mov
mov
inc
loop
dec
dec
lock
lret
leave
mov
fs
xor
cmp
cmp
pop
mov
add
adc
fcompl
sub
call
sarb
add
jmp
push
test
lods
icebp
jnp
jno
pop
xchg
mov
or
movsb
mov
fstpt
jge
test
in
mov
xchg
cmc
mov
outsb
bound
jge
jnp
mov
fdivl
jmp
push
xor
shl
dec
cmpl
nop
movsb
int3
jns
out
ss
xchg
sub
jge
out
mov
dec
lret
jge
push
pop
lret
lea
nop
mov
pop
movsl
or
lcall
adc
mov
sbb
mov
jp
js
leave
mov
push
push
push
lcall
adc
pop
sub
lea
loop
and
addr16
dec
mov
jnp
mov
jge
mov
xor
out
in
insb
mov
in
out
mov
shr
pop
gs
jne
out
lcall
xchg
mov
mov
xchg
dec
sbb
subb
xor
sub
adc
inc
jno
adc
adc
mov
fildl
mov
lahf
cwtl
stc
or
inc
movsb
mov
xchg
nop
shl
je
loop
ss
pop
scas
push
nop
sbb
push
jmp
jne,pn
fsub
cs
jge
rcr
das
adc
int
xor
orb
test
mov
and
pop
arpl
add
adc
cld
outsl
and
cld
pop
xor
add
xchg
or
aaa
mov
mov
cld
mov
insl
mov
shrb
stos
mov
add
xchg
sub
mov
inc
push
jno
push
or
popa
sub
ret
pop
mov
cmpsb
fiadds
mov
bound
ret
popf
ficompl
xchg
out
data16
test
sbb
sbb
cmpsb
xor
or
imul
fbstp
mov
ss
test
pop
mov
out
mov
aad
out
adc
addr16
xlat
mov
mov
or
jns
frstor
push
jg
push
int3
iret
loope
jns
sub
push
into
sti
xor
mov
xchg
mov
pop
adc
adcb
adc
pop
bound
or
enter
iret
jno
mov
bound
cmp
lret
add
fadds
dec
out
push
dec
adc
rcrl
popa
mov
sbb
mov
adc
hlt
sbb
inc
int
cmp
push
fdivl
dec
xchg
mov
push
insb
push
and
xchg
inc
adc
adc
push
add
test
mov
mov
rorl
push
hlt
cmp
adc
cmp
stos
push
test
std
movsb
add
mov
xchg
das
shlb
mov
adc
xchg
lds
mov
mov
xor
lea
jecxz,pn
pusha
test
jae
and
and
dec
movsb
sbb
test
vmread
ret
test
inc
push
ss
pushl
pushf
imull
and
orb
into
pop
inc
ds
adc
mov
jne
nop
sub
push
call
jg
xchg
shl
les
test
loopne
loope
mov
jp
inc
push
xchg
pop
sub
sbb
sbb
xor
aaa
rorb
push
movsb
movntps
std
jbe
jbe
les
inc
aas
iret
and
sub
push
fucomi
or
std
jecxz
mov
aam
jne
adc
ljmp
jp
sub
leave
sub
pop
xor
arpl
test
mov
sub
imul
aas
jmp
insl
mov
rcrb
inc
xchg
jnp
dec
add
decb
mov
and
loope
or
rol
xchg
fsubs
dec
or
or
push
and
addr16
cmp
cmp
divl
int3
dec
inc
adc
scas
nop
sahf
inc
loopne
adc
xchg
orl
in
xchg
daa
cmp
push
arpl
mov
jecxz
xchg
and
rcrb
push
cmpsb
adc
ja
cltd
ficoms
xchg
or
es
pop
pop
imul
or
vpavgb
adc
lcall
adc
imul
jecxz
xor
aam
xchg
push
push
stc
fdivrl
leave
in
mov
xor
cmp
jmp
sbb
xchg
cld
mov
sub
jge,pt
iret
int3
ret
cltd
int3
addr16
mov
cmp
push
cs
loop
cmp
mov
outsl
cltd
xchg
pop
pop
data16
lea
xchg
mov
xor
gs
mov
incb
js
adc
cwtl
xchg
aaa
lcall
cmc
arpl
test
call
lret
pop
cli
dec
inc
jae
out
xor
ret
stos
std
test
fsincos
dec
shrl
out
xacquire
dec
mov
xor
push
icebp
out
loope
xchg
inc
jnp
xchg
scas
arpl
stc
in
test
test
cmp
inc
std
lret
jne
pop
aam
loopne
data16
cmp
jg
mov
in
and
pushf
mov
mov
cmc
or
mov
ljmp
fisubrl
or
cwtl
sub
aas
rol
push
fstps
ja
inc
mov
xchg
sub
int3
xor
push
mov
and
and
pop
in
and
inc
das
hlt
lcall
xor
sahf
cmpb
daa
xchg
mov
pop
push
std
aaa
dec
sub
cmpsb
sbb
cmpsl
pop
cmp
push
or
inc
ss
orl
sub
addb
and
popa
lock
iret
jle
adc
test
pushf
jp
scas
dec
push
test
jge
pop
inc
lret
popf
mov
push
xchg
imul
jl
sbb
sbb
dec
push
jno
add
sti
pop
mov
mov
dec
adc
hlt
xchg
aas
and
jmp
movsl
xchg
mov
pop
jo
push
lret
pop
gs
call
mov
jo
into
lods
inc
adc
ljmp
lods
and
and
cmpsl
cmpsb
in
sbb
sbb
mov
sub
out
imul
call
neg
mov
jmp
lcall
sti
jmp
adc
push
outsl
leave
iret
insl
shrl
pop
mov
jle
push
mov
adc
push
or
test
repz
push
sub
std
idivl
in
loope
sti
dec
xor
aas
gs
lods
dec
leave
dec
xchg
in
outsb
aaa
xchg
cmp
xchg
push
pusha
sti
lods
push
mov
inc
push
fwait
sub
rcrb
call
cmp
dec
lock
loope
cmp
hlt
adc
xchg
test
test
ret
popa
ja
cmp
in
test
out
loopne
and
pop
mov
add
mov
scas
int3
icebp
xchg
adc
mov
jecxz
sbb
ja
cmp
push
push
xchg
stc
daa
loop
mov
pop
xor
call
adc
jae
push
push
ror
mov
ds
add
push
iret
dec
mov
int3
leave
in
cli
add
in
arpl
popa
mov
add
in
test
daa
mov
dec
dec
insl
push
pop
int
push
movsl
ret
cltd
mov
std
decl
sub
xor
and
push
testb
imul
and
jecxz
cmp
cwtl
sub
mov
add
mov
int
stc
jne
rcll
scas
dec
shlb
adc
pop
xchg
sbb
cmp
pop
and
or
jno
ss
push
pushf
daa
sbbl
fwait
test
test
int
lcall
mov
mov
int3
sbb
dec
dec
leave
mov
push
int3
xlat
popa
pop
repnz
popf
ffreep
int3
lcall
js
imul
aam
cmp
jnp
test
xchg
jge
and
and
push
hlt
ficompl
ficomps
push
xchg
or
add
jbe
add
xsha1
cmpsb
mov
inc
add
movzbl
and
dec
lret
lret
mov
mov
rcrl
xchg
jbe
adc
and
cltd
push
inc
add
and
push
test
lods
xchg
and
movsl
cmp
daa
add
mov
fucomi
inc
push
movsb
je
jge
cmp
push
inc
mov
mov
ficoml
lahf
pop
fsubrs
enter
lret
jp
insb
loop
nop
adc
inc
imul
mov
rol
jne
and
xor
mov
xchg
jbe
xchg
cmpsb
mov
pop
fwait
cmp
dec
dec
dec
sbb
in
cmp
push
stos
sub
xlat
jecxz
mov
xor
pushf
into
sbb
std
shl
and
insl
inc
test
fisubs
aad
les
icebp
pop
in
aam
pushf
cmp
das
cmpsb
hlt
cmp
jnp
jp
rolb
xchg
int3
pop
fs
or
fsubrl
mov
xchg
fsub
sti
mov
sub
sub
fnsave
ss
push
dec
inc
mov
mov
movsl
mov
das
ret
ror
lds
icebp
inc
inc
xorb
mov
pop
data16
dec
xor
jo
pop
out
jmp
hlt
rorl
test
xchg
and
jnp
movsb
mov
inc
mov
xchg
lods
out
icebp
int
inc
pop
scas
bound
cltd
repnz
mov
repnz
mov
clc
mov
jae
stos
mov
inc
inc
repnz
je
jmp
pop
outsl
and
jb
call
out
lret
and
xchg
jge
pop
xchg
mov
movsl
out
jno
add
popa
das
push
sahf
and
call
jae
mov
es
mov
xor
popl
mov
fstpl
les
mov
xchg
loope
pop
pop
out
fstpl
jae
jbe
ret
mov
clc
or
push
pop
dec
sub
push
add
fcoml
out
or
mov
aas
mov
loope
mov
pusha
add
fidivrl
pop
sub
xchg
inc
imul
rcll
push
and
push
dec
fcompl
insb
pop
andl
outsl
pop
inc
testb
push
add
and
fsubs
arpl
aas
pop
sbb
lock
mov
int3
mov
inc
dec
jmp
fstl
cwtl
adc
clc
dec
daa
negl
out
adc
and
into
push
icebp
nop
nopl
xchg
sub
xlat
mov
jae
pop
dec
jo
lea
roll
test
jno
ret
enter
lret
test
daa
jne
int
mov
data16
sub
adc
dec
xchg
pop
sbb
mov
shl
js
ret
inc
sbb
adc
sub
xlat
sub
xor
aaa
pop
mov
mov
add
pushf
dec
lock
dec
fdivs
lahf
shll
sbb
pop
aad
mov
scas
and
es
addr16
pop
lret
xchg
popa
xchg
or
dec
fcmovb
cmovp
cmpsl
loopne
pushf
repnz
jmp
sbb
out
ds
jge
repz
and
test
pushf
ljmp
in
add
sub
cmp
ljmp
jg
ret
push
mov
push
sub
adc
pop
mov
loopne
xchg
fsubrl
insl
mov
les
and
das
or
std
mov
dec
scas
sahf
push
test
adc
adc
dec
imul
test
out
inc
ja
inc
in
mov
mov
and
rcr
imul
mov
idivb
std
adc
mov
sti
insl
pop
adc
int3
pop
ja
add
fwait
shlb
lods
adc
dec
or
sbb
adc
mov
push
ljmp
push
inc
add
or
mov
xchg
cltd
negl
das
lock
mov
in
dec
push
dec
movsl
imul
jle
fmul
add
cmpsl
movsbl
hlt
xchg
inc
pop
add
inc
movsl
push
imul
adc
roll
repz
and
cmp
mulb
dec
or
popf
rorl
sub
mov
loopne
movsl
fwait
hlt
insl
cs
fnstenv
push
int
adc
insb
fsubs
repnz
out
mov
in
in
fwait
lahf
push
dec
sarl
insb
jno
cld
or
adc
mov
lds
lods
sbb
sub
dec
pop
adc
test
shlb
inc
xor
int
jne
sub
fcmove
inc
xchg
rcrl
sbb
fistpll
popf
pop
rorl
mov
loop
xor
dec
call
fwait
push
pop
add
pop
test
call
xchg
int
or
cmc
jno
in
dec
and
cs
in
jbe
inc
xor
dec
xor
stos
ret
jge
pop
sub
in
inc
sub
jo
stos
aaa
mov
jns
xor
arpl
fisubrl
inc
pop
and
sbb
push
pop
xor
lahf
stos
dec
xor
jns
sbb
cltd
push
inc
jg
imul
bound
out
xchg
cmp
cmp
add
sahf
les
mov
fistpll
movsb
push
rcr
and
mov
pop
and
adc
pop
mov
sub
fsubrs
jg
stc
push
mov
add
push
shlb
jne
in
mov
addr16
int3
sbb
test
push
xor
mov
dec
mov
fisubl
rclb
jecxz
lea
xor
mov
dec
stos
int
ret
je
jmp
in
icebp
orb
pop
cs
mov
inc
pop
inc
mov
mov
dec
cmp
mov
dec
sub
cmpsb
mov
sahf
xchg
pop
outsl
cmovl
jl
mov
mov
xor
mov
jno
or
sbb
cltd
mov
ss
enter
adc
jns,pn
shr
sbb
nopl
mov
jne
jb
daa
dec
adc
adc
sbb
sub
maskmovq
idivl
push
sbb
xor
pusha
call
push
and
and
sahf
lcall
std
and
sub
pop
rcrl
mov
xrelease
std
stc
aaa
mov
sarb
xor
mov
lret
inc
pop
mov
aaa
nop
rolb
in
xchg
mov
dec
ss
add
in
lods
xchg
js
lret
in
cmp
mov
scas
aad
sbb
jnp
out
mov
imul
push
cld
mov
inc
sbb
cmpsb
or
in
add
cmp
int3
xchg
outsl
jl
push
inc
mov
pop
jnp
je
int3
pop
bound
xchg
lcall
sbb
in
mov
sbbb
sub
push
push
arpl
dec
mov
xlat
sub
mov
shrb
pop
push
imul
and
insb
ss
fmuls
adc
mov
mov
cmp
mov
dec
push
cmp
hlt
mov
sub
xlat
mov
arpl
pop
insb
fisubs
jnp
push
lss
out
out
pop
out
cmp
ret
dec
pop
jg
or
sbb
in
xchg
mov
push
push
sbb
sbb
outsl
dec
fchs
insb
mov
xchg
add
movsb
shl
jg,pt
sub
out
push
jge
xchg
xchg
popf
out
inc
add
fldl
pop
es
jo
push
cs
movsb
int
xchg
and
xchg
roll
sbb
outsl
mov
sbb
addl
repnz
rcrb
jecxz
ds
pop
cmpsb
mov
in
fs
js
push
shrl
cmp
dec
dec
sub
mov
mov
sbb
push
xor
cld
fucomp
cmp
cs
jno
push
rcrb
cmc
mov
fsubp
arpl
je
in
and
pop
fisttpll
pop
sahf
adc
jl
cmovle
shll
push
inc
jl
movsb
cmc
enter
mov
fdivs
jnp
in
adc
xor
notb
pop
outsb
jbe
sarb
iret
add
pop
jne
sbb
sbb
loope
xor
cmp
mov
jl
push
dec
push
rcll
push
mov
push
cmp
cli
dec
js
pushf
rol
sti
inc
lahf
out
xor
xchg
pushl
inc
mov
pop
jp
pop
dec
dec
add
or
aaa
stos
call
sbb
enter
cli
or
dec
xlat
ficompl
leave
inc
push
push
xor
das
jmp
mov
repnz
xchg
cmpsb
insl
inc
movsb
pop
test
andl
mov
pop
mov
sub
jns
cmp
adc
shl
inc
mov
fsubrl
movsl
adc
pushf
jb
lret
adc
dec
movsb
dec
popf
xor
cmp
in
add
pop
inc
test
adc
hlt
cmp
gs
mov
ret
adc
adc
mov
repnz
and
gs
xchg
test
mov
out
out
pop
push
cmp
jne
xor
mov
test
divb
outsl
ret
sbb
popf
push
cmp
stos
cmpsb
xchg
add
dec
pop
and
pop
or
jns
xor
loopne
xor
xchg
pop
cs
aam
scas
sti
es
pop
loop
adc
dec
xchg
arpl
bound
dec
sbb
cmpsl
mov
out
lods
cmp
sbbl
sub
cmp
test
mov
sub
popf
mov
adc
outsl
loopne
lret
sti
cmp
cmp
jle
inc
mov
out
cmp
mov
hlt
insb
and
pop
sbb
cmp
insb
in
xlat
xor
mov
call
test
fld
mov
and
fistpl
inc
push
shrl
sbb
xor
out
pop
ret
arpl
jb
sub
out
cwtl
pop
cmp
aam
fisubl
mov
sti
inc
push
and
stos
leave
inc
lock
lods
jb
inc
lret
jmp
stos
or
scas
mov
inc
bound
pushf
pop
inc
mov
xchg
mov
insb
fsubs
adc
sbb
sbb
sub
movsl
imul
jmp
in
mov
lcall
cmpsb
test
aaa
push
and
xor
dec
aad
popa
mov
cmc
xchg
mov
shlb
xor
orb
xchg
xchg
pushf
shrl
loope
pop
sbbl
je
jg
push
imul
sti
adc
xchg
cmpsb
pop
imul
add
sbb
aam
out
test
ror
mov
push
dec
mov
xor
sbb
jo
cmpsl
gs
nop
add
mov
in
jbe
and
imul
cltd
jbe
out
and
xchg
popa
pop
mov
lcall
or
jmp
or
inc
adc
push
outsb
mov
pop
xchg
repnz
std
loope
mov
cmp
pusha
cmc
add
call
sub
leave
stos
add
xor
fisttps
mov
add
xchg
ljmp
xchg
test
int
decl
jb
je
ret
push
imul
mov
sahf
jns
jmp
cmc
fsubrl
mov
call
je
add
fadd
dec
fstps
mov
push
int
sbb
mov
push
ret
shl
js
pop
mov
je
int
jb
xor
cmp
popa
lea
mov
mov
leave
dec
jo
enter
adc
in
les
jle
mov
pop
fdivs
lock
xlat
add
or
out
sti
xchg
aad
mov
bound
pop
jne
pushf
pop
mov
test
adcb
pushl
inc
lock
and
movsb
xor
and
xor
inc
mov
mov
add
sub
cmpsb
sbb
lret
ret
out
add
aaa
pop
out
inc
and
cmc
test
ficompl
pushf
mov
inc
push
xchg
pusha
popf
jecxz
ret
cmp
nop
pop
mov
xchg
add
push
and
rcll
pushl
imul
js
lea
cmc
cmp
shll
test
pop
sub
sub
adc
iret
mov
insb
popa
in
xor
insb
out
lahf
mov
das
and
test
pop
and
xchg
and
lahf
mov
mov
ret
lret
sbb
sbbl
loope
mov
cmp
sub
xor
jo
pop
pop
pop
or
adc
add
sub
jmp
hlt
push
sub
xchg
sbb
inc
sub
dec
pusha
xchg
add
and
stos
out
xor
add
sub
aas
fcoms
movsl
mov
rorl
adc
adc
pop
fmul
lds
call
sbb
fcmovne
jge
mov
pop
jae
dec
mov
jnp
cmp
adc
sti
mov
dec
es
shrl
rclb
cli
movb
mov
lahf
leave
pop
jnp
jae
repnz
inc
sub
pop
dec
scas
lea
add
ffreep
sbb
sub
and
int
or
sarb
mov
into
aas
mov
fyl2x
and
fistpll
fisubrs
pop
clc
sub
and
mov
adc
int
adc
roll
xchg
repz
and
out
xor
out
push
ljmp
pop
scas
arpl
sbb
mov
mov
push
pushf
sub
sub
push
mov
and
imul
mov
mov
mov
or
lret
lock
decb
mov
sahf
movl
xchg
mov
fsubs
inc
xlat
shrb
adc
jb
mov
or
push
mov
je
arpl
mov
repnz
inc
xlat
stos
adc
data16
repnz
cmpsb
pusha
std
divl
jecxz
sub
or
lods
cmp
fwait
mov
mov
and
add
es
mov
outsb
jo
sbb
jmp
push
popf
je
pop
adc
lret
insb
cmpsb
mov
das
add
xor
mov
lcall
fiaddl
imul
lcall
ds
sbb
jne
push
add
adc
push
sahf
fs
cltd
inc
inc
lahf
dec
or
push
and
pop
flds
pop
xchg
inc
cmp
outsl
pop
jmp
cmp
movsl
fidivs
aam
stos
pop
loope
test
jg
mov
out
xchg
ret
dec
xchg
cmp
pop
cmp
cmp
push
fld
fwait
inc
lret
ja
or
push
adc
cltd
das
lret
jnp
divl
pop
leave
mov
repnz
jp
and
jne
es
sub
gs
jb
and
pop
dec
fbld
lret
xchg
xchg
xor
std
dec
pop
sub
lods
lods
ret
test
dec
dec
adc
jae
mov
imul
adc
adc
push
pop
inc
adc
dec
cwtl
addb
mov
rorl
xor
test
jnp
daa
scas
hlt
pop
mov
int3
mov
fbstp
mov
mov
cmpsb
movsl
sahf
std
roll
add
add
pop
and
icebp
xchg
lahf
shrl
dec
lcall
and
jne
stos
ja
mov
add
insl
dec
call
mov
dec
mov
jle
das
sub
lods
sbb
cmp
insb
shl
add
aad
jecxz
sqrtps
cmp
insb
addr16
test
fidivrs
ja
jae
cld
out
jp
fldenv
xchg
scas
add
xchg
dec
push
and
pushf
sbb
sub
push
xor
hlt
rclb
mov
mov
sub
mov
subb
dec
mov
xchg
movsl
mov
push
push
scas
punpckhwd
cmp
stc
or
ret
push
xor
sti
loop
sahf
movsl
mov
filds
into
loop
xchg
lds
into
ljmp
in
arpl
sub
pop
mov
sahf
mov
inc
adc
loop
adc
jns
or
and
stc
lods
lret
push
pop
or
and
dec
mov
xor
lds
outsb
xchg
dec
pushf
inc
mov
cmpsb
ret
sbb
cli
push
adc
cmpsl
mov
mov
add
hlt
icebp
test
fs
xor
mov
jmp
dec
mov
in
popf
jbe
inc
mov
sub
sbb
jae
sti
cmovp
daa
jno
lret
adc
jmp
data16
cmp
adc
mov
hlt
inc
jp
inc
fisubrl
setnp
adc
sub
sbb
out
jmp
test
ds
mov
leave
shlb
mov
dec
ret
mov
pop
lcall
jbe
dec
or
gs
mov
int3
loopne
orb
repz
dec
insb
out
pop
xchg
sbb
sub
in
sub
push
add
pushf
dec
aam
pop
sbb
sub
mov
ffreep
xchg
push
mov
adc
dec
sub
fwait
and
pop
ffree
sarb
loopne
orl
in
rclb
cmp
mov
and
mov
mov
out
test
out
out
rclb
arpl
fwait
repz
call
sti
out
dec
xor
in
cld
or
outsb
mov
mov
add
sar
or
in
sbb
inc
sub
enter
aaa
push
mov
adc
movsb
jp
roll
ror
dec
and
add
push
sbb
ja
rsqrtps
xchg
jecxz
inc
fiaddl
inc
inc
add
push
out
sti
and
enter
add
xor
sti
fucomp
xchg
outsb
adc
mov
jg
hlt
das
push
loopne
fcomps
jae
aad
or
push
in
test
test
and
sbb
call
arpl
or
fwait
rol
add
int3
gs
stc
and
and
xchg
test
add
sbb
cmp
and
jnp
or
or
js
shlb
mov
and
inc
push
in
iret
pop
outsb
mov
mov
mov
lods
pop
push
mov
push
pop
add
test
sti
pop
jmp
mov
adc
call
das
mov
mov
sub
into
stos
push
jl
pop
fwait
mov
incb
popf
leave
lcall
mov
push
pop
aad
loope
jae
aad
and
sbb
sbb
xchg
mov
sub
scas
pop
sub
xor
pop
std
aas
sahf
faddp
loope
int
jns
popf
dec
ret
dec
adc
lds
add
adc
hlt
enter
pop
inc
pushf
aas
fxch
xor
das
aaa
daa
cmp
mov
in
in
add
pop
cmp
aaa
mov
cmpsb
orl
mov
lock
jbe
cmp
mov
lcall
mov
fnsave
xchg
fildll
or
mov
adc
fs
jl
inc
dec
aad
fnstcw
dec
pop
and
dec
dec
mov
jecxz
and
sub
mov
imul
aam
movsb
roll
lahf
dec
fwait
push
jae
out
pusha
push
adc
repz
lds
push
icebp
sub
leave
mov
mov
imul
inc
dec
pop
pop
in
aad
aaa
pop
std
jl
sbb
popf
les
movsb
push
cmp
mov
mov
cmp
ljmp
or
jl
inc
mov
add
jne
test
scas
push
xlat
add
sar
cmc
push
or
fistl
xlat
mov
test
mov
pop
stc
jnp
popa
xor
enter
incb
lcall
adc
pop
fst
stos
out
mov
adc
dec
cltd
sbb
xor
xchg
xchg
mov
ret
xchg
or
adc
lds
ss
jbe
pop
jp
jmp
arpl
mov
lods
outsb
push
andb
xor
dec
push
jle
leave
call
insb
add
xchg
inc
add
push
repz
dec
inc
mov
hlt
adc
jmp
inc
mov
pop
xor
or
mov
hlt
rol
fwait
pushw
dec
in
loopne
bswap
mov
bswap
jl
in
idivb
dec
outsl
clc
xchg
dec
jno
mov
mov
outsb
adc
je
jg
dec
cmp
in
mov
inc
fs
mov
pop
jle
inc
dec
jo
inc
sbb
leave
cmp
pop
jmp
push
mov
into
in
lcall
cld
mov
lods
sub
notl
gs
sahf
fsubp
sub
popf
or
dec
lods
mov
jo
dec
push
xchg
ljmp
leave
push
ret
pop
mov
and
aas
dec
xor
cmpsl
lea
mov
pop
jmp
jns
mov
in
jne
test
adc
mov
rolb
ret
inc
and
mov
cmp
test
push
insl
sub
dec
insb
imul
cmp
js
xor
fsubrp
mov
jge
add
sbb
dec
sbb
xchg
cmpb
cmpsb
cmp
insb
rcr
pop
testb
dec
bound
push
sub
push
pop
dec
and
push
lea
dec
repz
ret
popf
ds
jnp
mov
out
push
xchg
mov
std
imul
fs
xchg
mov
jnp
stos
xchg
aaa
enter
aam
es
xor
xchg
push
or
repz
lret
push
outsb
adc
mov
mov
push
scas
cmpsb
ret
jmp
scas
xlat
inc
mov
enter
iret
fsubs
jae
shll
leave
mov
xchg
add
xor
sub
jp
cmc
outsl
shl
andl
push
pop
pop
iret
jb
cli
mov
and
fsts
roll
inc
mov
scas
push
and
ficoml
xor
mov
dec
cmp
xor
andl
hlt
andb
add
negl
push
inc
and
xorl
cmpsl
sub
jno
lret
and
lods
leave
into
mov
fst
push
or
ss
dec
xchg
inc
icebp
xchg
stc
push
cmpb
imul
jl
mov
scas
mov
jecxz
mov
push
mov
outsb
in
add
sub
sub
test
cvtpi2ps
xor
shlb
xor
jge
ret
scas
xchg
pushf
xor
mov
pop
or
pop
fcmove
cmp
and
pusha
inc
jb
std
lret
cmp
scas
js
sbb
stc
xchg
adc
lds
xor
cmp
fistl
repnz
test
jle
aaa
lock
and
lret
imul
and
popf
addr16
push
sbb
in
xor
imul
hlt
fiadds
and
xchg
lahf
mov
lret
fs
std
xor
cli
and
cwtl
push
push
jg
mov
mov
jbe
imul
jle
sbb
loope
jl
pusha
adc
hlt
inc
ret
and
mov
add
mov
pushf
js
push
lea
outsl
enter
and
xlat
and
insl
icebp
loopne
or
rolb
ljmp
imul
int3
add
mov
pusha
pop
xchg
iret
inc
xchg
pop
aam
pop
lret
and
ja
in
pop
ljmp
sarb
incb
ret
pushf
or
into
fcmovb
scas
test
ret
cld
fdivrp
daa
adc
mov
pop
cmpsl
push
cmpl
stos
cmp
lods
sub
bound
scas
mov
loopne
adc
jecxz
mov
or
jns
shrl
call
pop
fistpl
es
imul
clc
dec
and
leave
mov
mov
push
sub
pop
stc
pop
outsl
xlat
pop
adc
mov
movsl
jno
pop
or
jne
jae
sub
mov
pop
ss
push
lea
addr16
cmp
out
pop
mov
sbbb
ss
outsb
or
imul
stos
xchg
cmp
hlt
popf
inc
lcall
mov
pop
cs
hlt
inc
mov
pop
pop
cmpsb
dec
clc
and
jmp
cs
negb
xchg
sbb
xor
mov
dec
mov
mov
rclb
int
jecxz
icebp
pop
in
out
jg
pop
jl
xor
pop
jmp
sbb
ret
fsubrp
sbb
push
xor
dec
aas
jno
fwait
jo
ret
fsubp
mov
jge
push
push
pushf
hlt
test
xchg
and
leave
xor
ja
stc
std
jno
in
mov
mov
stos
push
lcall
sub
sarl
push
testl
mov
dec
fxch
sub
out
ljmp
or
and
lahf
adc
test
fmul
pop
or
pop
sub
roll
shlb
mov
mov
mov
stos
mov
xchg
dec
sarl
mulb
sbb
mov
mov
sbb
pop
xchg
adc
aad
cmpsl
cs
mov
adc
test
aaa
cltd
cwtl
jb
inc
pop
sub
inc
insl
mov
inc
fstps
insb
test
and
andl
mov
jae
sub
loop
int3
or
push
fs
in
cpuid
pop
pop
lret
test
push
xor
ljmp
ljmp
adc
pop
out
pushf
loopne
add
add
ss
subb
pop
rcl
add
pop
jp
rcll
mov
or
push
push
sbb
out
cmp
pop
cmpsl
mov
div
mov
jae
xor
xor
push
outsb
out
loop
outsl
nop
cmpl
loopne
adc
adc
lret
push
sub
ret
jno
shlb
imul
lea
lahf
movsl
xor
cli
cmp
movsl
outsl
js
add
int3
ljmp
pop
sub
cltd
clc
push
aam
jns
es
mov
xor
mov
ficomps
sbbl
nop
outsb
aam
push
lock
mov
xor
mov
cltd
loope
aas
mov
arpl
sub
dec
xor
inc
mov
pop
xchg
sar
jo
dec
jns
xchg
push
roll
imul
mov
xchg
clc
mov
cmp
cmp
loopne
adc
inc
mov
int
xor
pop
popf
imul
mov
mov
jmp
sub
xor
andb
cmp
pop
or
xor
push
cmp
mov
sub
nop
jg
xor
sub
xchg
test
jl
inc
mov
pop
mov
test
movsl
ret
xchg
sub
sbb
testb
fsubp
enter
add
cmpsb
rorb
out
out
pop
idivl
ret
pop
rcr
shl
or
cmp
loopne
and
sbb
mov
adc
inc
lds
or
insb
ja
insl
inc
cmpsl
bound
jl
inc
mov
push
inc
jbe
dec
clc
sbb
mov
movsl
push
test
std
lods
xchg
sub
jp
xchg
and
and
pop
out
mov
ret
mov
sbb
push
stos
lods
push
loope
jg
xor
sub
divb
xchg
mov
outsb
xor
adc
ret
aad
push
aad
jp
insl
rol
push
pop
jl
xchg
and
dec
vcmpss
test
jno
jno
cmp
pop
lret
pop
mov
lahf
cltd
add
sarb
in
mov
sbb
sub
jge
mov
jns
je
add
and
sbb
inc
mov
scas
xchg
or
mov
fstps
xchg
push
mov
sub
pop
pusha
dec
push
xor
xor
lods
or
dec
mov
sub
in
mov
sar
mov
arpl
xor
and
xor
mov
int3
cmpl
or
cmp
shlb
jo
mov
stos
fwait
ljmp
pushf
fcomps
pop
inc
adc
roll
inc
shr
add
xchg
std
or
add
or
sub
je
loope
or
mov
push
ret
int3
mov
xchg
inc
jle
ljmp
adc
lahf
adc
pusha
sbb
pop
cmp
push
rorb
jmp
sbb
fstpl
fwait
cmp
pop
scas
sub
roll
mov
jb
leave
or
pushf
icebp
sub
dec
inc
mulb
movsb
cmp
adc
arpl
inc
or
into
repnz
jb
gs
mov
sbb
sahf
xor
adc
stos
les
lock
and
movb
sbb
loopne
xor
push
daa
mov
je
loope
mov
adc
dec
push
out
push
mov
and
mov
pextrw
ss
sub
xchg
and
out
adc
pop
sub
adc
inc
push
mov
lcall
ljmp
repz
das
mov
daa
dec
mov
stc
inc
dec
dec
aaa
pop
rolb
mov
inc
test
xchg
push
mov
jmp
mov
lret
ficomps
sub
mov
mov
int
stos
inc
js
inc
sub
mov
rolb
xor
int3
mov
xor
ret
pop
std
insl
mov
aas
and
ljmp
adc
cwtl
out
cwtl
scas
cmc
stos
out
cmp
jle
adc
gs
mov
mov
lea
cmp
movsb
push
mov
xor
ds
fs
in
clc
mov
lock
sub
pop
loopne
lods
sti
loop
jmp
sti
pop
push
addr16
out
int3
sub
cmpsl
fisttpl
cwtl
loop
js
inc
test
xchg
add
mov
aas
int
repz
xor
not
aad
lcall
aad
mov
push
shr
add
push
in
test
roll
inc
add
push
loopne
fidivs
stos
clc
fidivrl
xchg
aas
cmpsl
nop
aas
add
scas
mov
cmp
sbb
loopne
lock
cwtl
dec
inc
or
dec
or
aas
lods
mov
sub
jge
fadd
and
jne,pn
sbb
inc
mov
mov
sbb
gs
cwtl
and
xchg
jg
pop
ror
mov
fdivrl
jno
hlt
pop
rolb
out
push
sub
mov
push
cmovg
test
dec
das
push
fisubl
mov
mov
pop
add
jmp
xor
sbb
shlb
lods
sub
dec
dec
or
arpl
lds
sub
xor
dec
sbb
sbb
ret
ds
push
in
sbb
lahf
rclb
ljmp
mov
sti
addr16
in
or
xorb
mov
dec
push
lret
inc
into
shrb
je
push
push
sub
addr16
or
pop
adc
cmp
movsb
mov
jl
push
into
adc
loop,pn
xlat
mov
sub
stc
flds
adc
loope
jle
je
adc
fcomps
mov
icebp
lods
push
jecxz
dec
push
pop
fiaddl
sbb
xchg
movsl
jo
rcl
scas
test
mov
jecxz
sub
nop
or
lret
push
xchg
stc
loopne
movsl
mov
shll
lret
add
and
shlb
scas
repz
outsb
xor
lcall
xchg
int
xor
movsb
not
iret
inc
sahf
pop
jbe
sbb
add
pop
notl
and
loop
sar
rcrb
and
and
cwtl
rclb
mov
mov
and
cli
repnz
rolb
mov
cld
das
dec
cmc
insl
out
loop,pn
sbb
clc
jmp
inc
sub
add
xchg
loop
mov
sahf
sub
jecxz
rolb
inc
dec
sbb
mov
or
aam
aaa
push
cltd
loopne
or
xor
outsl
mov
xchg
mov
cmp
mov
add
stos
shl
fcomip
and
sbb
add
xchg
xchg
or
pop
mov
cmp
push
faddl
sti
sub
sub
in
ja
hlt
lock
sbb
jns
test
mov
push
ret
sbb
fs
jnp
mov
jecxz
adc
push
push
sldt
shlb
and
in
les
push
and
out
bound
cli
xchg
jnp
cltd
sar
dec
jmp
xchg
sub
outsl
mov
jnp
lds
add
or
pop
pop
jp
mov
fwait
je
pop
xor
fisubl
das
sub
mov
adc
push
pop
ss
test
cmp
xchg
int
push
and
daa
shll
clc
test
das
rcrb
inc
aam
xor
sar
xchg
out
xchg
daa
mov
add
or
sahf
orl
and
cltd
rorb
lods
subl
sahf
cli
cmp
adc
imul
lods
movups
inc
sub
ss
jmp
or
mov
test
xchg
adcl
mov
jmp
pop
pop
push
push
imul
inc
ss
les
insb
lahf
add
or
icebp
xchg
les
cwtl
sti
inc
shll
adc
stc
adc
dec
mov
push
shlb
and
mov
pop
and
jecxz
lods
mov
mov
sbb
out
push
jecxz
fimull
xchg
xchg
pop
sub
adc
jl
or
jge
cmp
lock
mov
incb
adc
dec
mov
mov
or
sub
and
jl,pt
pop
mov
js
divl
dec
inc
lahf
outsl
mov
test
jns
cltd
and
dec
nop
cmp
and
ret
movsb
xchg
and
pop
push
popf
sbbb
inc
clc
and
cmp
sbb
jne
sub
pop
lods
test
and
xor
jmp
in
pop
adc
out
pop
movq
pop
add
jecxz
pop
negl
jno
je
or
addr16
imul
frstor
jge
mov
icebp
xchg
fidivl
les
jecxz
add
movsb
daa
imul
mov
jno
ds
mov
fcoms
gs
push
ja
and
std
and
sub
pushf
dec
out
ret
inc
into
notb
inc
jno
rcll
mov
push
adc
call
sbb
sarb
and
mov
jp
xor
mov
das
sbb
xchg
xchg
lods
inc
jae
inc
bound
cld
imul
pop
pop
add
lea
mov
addr16
jne
fsubs
pop
rolb
aas
in
push
std
loopne
loop
and
fwait
in
push
inc
adc
push
sarl
push
mov
xchg
sbb
in
xor
xchg
jne
pop
inc
les
mov
push
movq
fbstp
roll
jbe
and
pop
data16
aam
int3
hlt
cli
inc
cmp
mov
int
pop
bound
ja
mov
lret
ljmp
es
sbb
pop
or
bound
loop
jbe
test
cmpsb
loopne
xchg
jae
outsb
inc
pop
and
aad
mov
test
add
ljmp
push
sub
insb
cmp
fwait
push
in
in
add
pop
or
inc
add
pop
subb
js
dec
xor
mov
and
push
lds
scas
or
outsb
or
inc
sub
dec
clc
inc
ds
js
push
test
clc
fldl
lcall
ja
bnd
fildl
push
repnz
pop
jo
popa
mov
fnstsw
xchg
icebp
add
mov
sub
lret
mov
mov
mov
jecxz
dec
xchg
xchg
sub
pop
cmpsb
inc
pop
xor
mov
add
ret
repnz
enter
xor
je
sahf
pop
ficoml
stos
in
xchg
outsb
jbe
fistps
loopne
dec
xor
xor
scas
repnz
and
rorl
jg
lods
adc
imul
sub
sub
ror
jmp
out
push
mov
add
fidivrs
xor
mov
adc
sbb
repz
out
jns
sub
xchg
mov
pop
icebp
leave
xlat
push
fisubrs
xchg
jecxz
sbb
mov
xchg
mov
sub
push
rolb
mov
aas
fdivrs
test
orps
cmpl
sub
int3
cmc
mov
mov
and
dec
popa
out
stc
cli
popa
jno
cmpsl
mov
xor
outsl
mov
mov
jo
xchg
push
lret
cltd
and
loopne
mov
aas
cmc
sub
ljmp
ds
mov
mov
sub
adc
in
sbb
mov
fdivrs
pop
mov
int
rolb
jl
push
xor
imul
cmp
or
scas
outsb
sbb
mov
inc
cmp
adc
leave
scas
insl
push
inc
cmp
and
gs
roll
inc
dec
xor
outsb
lea
in
test
sbbb
inc
pop
xchg
cmpxchg
popa
push
sub
aam
push
inc
add
inc
roll
mov
stos
xchg
push
cmpsb
fcompl
xlat
pop
icebp
dec
mov
lds
int
hlt
jae
push
cmp
xchg
in
dec
and
sub
popa
push
into
or
push
shll
pop
xchg
stos
pop
sbb
out
arpl
dec
jo
jne
inc
repz
jecxz
sahf
adc
push
lret
sbb
cltd
test
cltd
mov
test
push
cld
filds
sbb
fistpll
lods
pusha
xor
fidivs
dec
jae
push
popa
int
pop
xor
imul
or
cli
jnp
mov
lods
ds
loop
mov
jns
add
jmp
adc
inc
das
clc
ds
in
rclb
leave
inc
jnp
push
arpl
mov
xor
jmp
or
std
and
leave
xchg
push
inc
test
push
xor
cmp
cmpsl
or
test
fsts
jb
mov
sub
and
pop
loopne
enter
daa
fwait
mov
cs
lods
dec
stos
lret
std
imulb
xchg
in
xchg
mov
xor
sbb
sub
insl
adc
outsb
test
add
mov
pop
mov
rorl
ljmp
std
jo
adc
mov
out
xor
or
fyl2x
sub
inc
out
mov
out
cmpsb
lods
pop
lods
scas
mov
cli
movsb
jg
in
pop
adc
ficomps
lcall
bound
jg
test
stos
mov
fisubl
pxor
jecxz
ja
call
ds
push
add
ss
sbb
sti
adc
mov
mov
lods
inc
add
adc
inc
icebp
xchg
mov
add
test
fdivrs
pop
mov
xorb
sti
clc
inc
mov
fdivrl
mov
pop
fadds
es
cwtl
cmp
mov
add
call
mov
rorb
cs
xor
lock
addl
xchg
out
cmp
jns
arpl
inc
into
xchg
xor
paddsb
icebp
fsubl
rcrb
xchg
fs
adc
scas
mov
mov
andb
jge
mov
aad
push
inc
mov
and
xchg
add
andl
and
test
and
push
or
loopne
inc
mov
pop
xor
cmp
adc
jo
clc
sarb
lea
out
bound
das
jle
fsubs
adc
inc
xchg
or
jmp
leave
and
lds
push
push
fmull
in
mov
xlat
mov
inc
adc
and
cmpsb
arpl
les
dec
icebp
cs
sub
insl
push
icebp
dec
sbb
rclb
add
lods
jnp
pop
jge
mov
inc
insl
adc
ret
ljmp
or
lds
addl
inc
cmp
push
cmpsb
mov
mov
push
xchg
xchg
dec
gs
testb
mov
cmp
sub
adc
xor
and
ficomps
sbb
inc
inc
scas
inc
adc
add
decl
cltd
push
dec
dec
push
cli
pop
push
test
cwtl
ja
pop
mov
mov
mov
inc
sbbb
or
fwait
mov
jg
mov
push
mov
push
maskmovq
imull
add
out
mov
lret
in
je
imul
iret
push
xchg
out
inc
pop
shll
add
enter
jne
and
sar
aad
icebp
ja
nop
orb
in
adc
imul
ret
add
andb
sbb
adc
xor
sbbl
dec
mov
pop
lea
jae
push
mov
mov
xor
xchg
mov
inc
cli
adc
rcrb
stos
ja
pop
sbb
imul
mov
push
inc
fsub
pushf
and
or
pop
adc
orb
pop
cld
mov
dec
cmpsl
sub
sub
rcrl
xor
and
mov
cmp
pop
icebp
sbb
lods
daa
scas
outsl
popf
aas
out
or
movsl
pop
xor
jmp
leave
xor
pop
dec
loop
int
sti
or
test
cli
dec
push
aaa
xchg
push
inc
push
jne
mov
pop
jb
icebp
call
jno
mov
repnz
aas
das
or
test
xchg
rolb
aam
das
call
push
outsb
and
mov
jg
or
negb
sahf
jne
pushf
iret
xchg
std
mov
cmp
fs
mov
jg
fmulp
int3
fcoml
cmp
out
int3
data16
and
sbbl
les
mov
dec
mov
dec
arpl
sub
add
daa
pushf
mov
push
adc
xchg
xchg
enter
xor
sbb
test
in
xor
mov
push
inc
jo
push
pop
xchg
jne
fidivrl
pop
daa
xor
lea
xchg
mov
sub
jge
cmp
inc
mov
jl
dec
cld
gs
dec
jecxz
jp
jbe
lcall
gs
cmp
es
push
cs
add
cmp
and
jl
jns
cmp
aam
cmp
mov
mov
fidivrl
lock
pop
mov
ja
mov
stos
test
lock
in
xchg
leave
ret
mov
iret
sub
jae
shlb
pop
mov
outsl
imul
sub
test
inc
mov
mov
in
xor
stos
xor
or
hlt
leave
cli
cwtl
arpl
cmpsb
in
xlat
imul
bound
adcb
push
outsb
dec
sti
push
jnp
outsb
cmc
mov
repz
or
gs
insl
cmp
xchg
dec
lods
ja
dec
add
insb
repz
sub
dec
add
mulb
mov
mov
hlt
dec
data16
push
xor
std
inc
jb
insb
sub
out
lock
test
imul
icebp
ja
jbe
jl
scas
int
lods
pop
cmp
out
dec
mov
sbb
lahf
scas
or
xchg
rdmsr
xor
arpl
in
data16
mov
fsts
sub
pop
repnz
pop
outsl
mov
jns
loope
or
int3
filds
sub
arpl
xor
orb
xor
and
push
enter
ret
scas
movsb
add
fwait
addr16
stos
sbb
push
pop
adc
data16
lds
lahf
jnp
std
mov
subl
cmpsl
loope,pt
ja
xchg
addb
insl
clc
xor
xchg
push
add
mull
aam
add
aaa
es
lds
test
cmc
cmp
shlb
lds
inc
mov
inc
adc
loope
iret
daa
aam
xchg
shl
mov
push
je
inc
imul
and
fcoml
push
xchg
aam
and
fnstsw
pushf
push
push
mov
xorb
pop
stos
jns
xchg
cmp
aam
and
ficoms
or
mov
mov
mov
sub
lcall
lret
dec
adc
in
rcrb
aad
sti
push
xchg
loop
lahf
outsl
std
or
clc
stos
mov
inc
xchg
daa
dec
sbb
cmp
mov
nop
pop
mov
je
imul
enter
repz
push
cltd
push
lds
jp
mov
pop
into
les
mov
mov
cs
out
fldl
dec
mov
fcomp
cmp
mov
je
popf
ds
jb
adc
call
out
mov
jecxz
sahf
mov
imul
mov
push
inc
xor
mov
in
push
loop
mov
out
pop
repnz
cld
addb
mov
jmp
cmc
jecxz
sbb
ror
or
push
jmp
xor
data16
fisubl
cmp
push
jne
pop
int3
aad
fnstcw
lahf
sbb
sbb
icebp
pop
pushf
clc
push
ds
push
jns
or
in
rclb
xor
dec
es
fistpl
pop
push
pusha
arpl
cmp
jns
pop
pusha
push
fidivl
xor
mov
xor
orb
cmp
lock
xlat
push
cli
cwtl
inc
cmp
ret
ss
aad
mov
mov
and
dec
popl
lcall
xor
cmpsl
adc
and
outsb
mov
pop
ja
adc
cmc
cwtl
inc
out
out
or
xchg
shlb
pop
fldcw
mov
ljmp
loopne
cmp
and
sbb
or
pop
add
clc
inc
mulb
adc
xchg
ljmp
jmp
arpl
fbstp
add
jo
cs
or
add
ret
imul
mov
adc
idivb
push
insb
mov
adc
inc
cmp
loop
add
stos
int
stos
scas
movsb
cmp
shl
lret
testl
sbb
inc
in
stos
lods
mov
addr16
ror
and
add
gs
out
mov
push
das
push
pop
or
sbb
or
jmp
xor
mov
out
pop
mov
jae
cmp
orb
test
fwait
xlat
jns
jo
out
dec
pop
dec
imul
gs
adc
mov
int
inc
mov
cmc
xor
or
mov
movsl
adcb
or
mov
shll
imul
rcll
inc
sti
xchg
add
lods
loop
and
mov
addl
daa
sub
dec
pop
insl
adc
jo
mov
aaa
mov
adc
aam
les
add
stos
mov
nop
lds
imul
xor
inc
jge
mov
xchg
mov
xchg
pop
jg
inc
jecxz
cwtl
lret
and
add
lods
sbb
mov
inc
loopne
sbb
mov
std
adc
subl
ds
les
mov
mov
rcrl
mull
jae
idivb
jmp
scas
fdiv
xor
mov
pop
pop
xchg
inc
ret
dec
call
pop
in
mov
or
subl
std
jbe
in
test
rcrl
add
push
cwtl
ja
ud2
lcall
mov
out
push
arpl
test
jle
adc
iret
arpl
cmc
cmp
add
pushf
movl
cmpsb
loop
je
mov
pop
mov
nop
or
adc
insl
rcll
xchg
jbe
lahf
and
shrl
ss
dec
jl
dec
and
sub
mov
pusha
or
pop
push
inc
daa
and
mov
pop
adc
lahf
bound
loope
xchg
out
mov
sbb
xchg
xlat
mov
lret
mov
jbe
lods
cld
insb
and
mov
stos
imul
jo
pop
call
test
push
out
pop
out
fbld
pop
mov
dec
popf
or
sbb
xor
or
pop
ret
int
cltd
fidivs
push
push
add
push
stos
out
mov
xchg
sbb
inc
lcall
int3
addr16
inc
cmc
jnp
sbb
mov
xchg
stc
int
mov
pop
out
adcl
je
xor
not
pop
fdivs
aad
addr16
inc
mov
lods
scas
push
fidivl
icebp
push
mov
decl
pop
mov
mov
movl
push
jg
mov
dec
sbb
outsb
cli
mov
fwait
xchg
loope
dec
fiadds
movsb
pop
imul
pop
mov
shr
sti
dec
cs
xor
popf
cmc
dec
stos
jnp
adcb
insl
std
xlat
jb
add
adc
mov
mov
bnd
sbb
jnp
inc
pop
mov
ss
frstor
mov
imul
andl
addr16
adc
leave
lds
test
rcr
or
mov
loop
cltd
push
sub
cs
and
jbe
mov
rcrb
xor
lods
xchg
leave
sbb
push
outsl
cmp
push
int3
mov
push
int
or
fcom
cltd
sub
jg
decl
inc
daa
insl
push
stos
inc
add
pop
or
jg
jnp
fdivs
sbb
pop
ret
dec
aad
inc
push
dec
mov
adc
lret
jae
cmpsb
mov
mov
sti
lods
cmpsl
enter
mov
inc
dec
or
notl
xchg
mov
int3
xlat
jns
outsl
iret
nop
and
mov
inc
stos
mov
icebp
jne
into
sbbb
sub
mov
pushf
in
jecxz
stos
cmp
mov
push
fdivl
jle
add
out
stos
pop
and
fldenv
jb
pop
divl
fstpl
icebp
aam
push
inc
pop
mov
lahf
or
cmp
lods
xor
imul
addr16
insl
icebp
mov
les
pop
inc
aad
lods
out
xchg
je
mov
popf
loopne
push
xor
ss
push
xadd
iret
gs
and
adcb
mov
xorb
lods
adc
add
push
mov
pop
insb
or
mov
xchg
pop
cmp
inc
std
jg
mov
sub
lcall
lods
xchg
sbb
in
das
sbbb
mov
xchg
jo
xchg
sbb
jp
sub
fs
lods
sub
push
arpl
cmp
loopne
mov
cmp
loopne
icebp
mov
test
lahf
mov
popl
mov
inc
test
loope
shll
test
pop
mov
outsl
hlt
cmp
pop
wbinvd
out
popa
out
ret
dec
jecxz
jmp
dec
xchg
sbb
pushf
sti
xor
data16
sbb
dec
inc
in
push
and
push
inc
add
push
out
add
inc
rcrb
popa
jnp
fbld
push
iret
cwtl
fsubl
add
push
or
and
push
add
push
or
inc
cmpsb
insb
jb
lds
aam
add
js
ljmp
add
lret
test
test
xchg
or
movsb
mov
xorl
insb
into
cmp
pop
je
add
jne
lahf
or
pop
add
data16
shrl
addr16
into
cld
xor
and
jmp
outsb
ret
push
repz
clc
xchg
sub
or
jge
mov
push
call
addr16
pop
or
stos
rcpps
jge
mov
cmp
cmpsl
out
sahf
cmpsl
mov
dec
pop
in
dec
xchg
mov
or
out
enter
xchg
lods
xor
sub
add
xchg
sub
mov
in
push
jl
add
jle
lcall
or
cli
inc
push
rcl
scas
out
push
fisubs
mov
and
or
ds
push
xchg
jae
into
imul
mov
jns
mov
ret
test
mov
cmp
fmul
dec
inc
mov
fs
scas
mov
jge
decb
test
jns
push
add
add
jmp
arpl
leave
push
xchg
int3
adc
sbb
icebp
xor
or
scas
pop
fcmovnu
int
rcrb
mov
mov
out
jno
icebp
aad
imul
shll
enter
cmc
sbb
mov
sub
push
loopne
or
jecxz
pop
cld
push
push
and
cltd
subl
in
insl
and
ja
fsubrs
or
xchg
repnz
icebp
je
hlt
cmp
adcl
gs
inc
repz
add
out
cmp
mov
jnp
push
mov
pop
push
mov
xor
addr16
roll
cmp
mov
idivb
push
pusha
iret
ja
or
add
aas
rorl
arpl
das
and
add
xchg
lods
fstpl
fistpl
lods
out
jmp
ror
push
adc
sahf
sub
mov
mov
xor
jb
movsb
inc
or
insl
push
cltd
sbb
jle
xchg
pop
add
in
verw
orb
inc
repnz
ja
pusha
out
aad
mov
pop
mov
leave
inc
xchg
bound
out
les
jl
stc
sbb
imul
mov
inc
xor
movsb
addr16
lahf
lret
knotw
cmc
add
push
in
test
sub
add
sub
pop
sahf
aam
jbe
in
into
inc
jne
push
jae
mov
jno
push
add
dec
pop
jg
cmp
push
add
loopne
xor
push
add
mov
ss
xchg
mov
jb
mov
test
inc
or
lret
pop
sub
cltd
shll
mov
rolb
scas
test
fdivrs
fbld
ja
jecxz
sub
inc
xchg
cmp
sub
out
mov
jge
inc
mov
insl
pop
mov
cld
lcall
cmp
ret
and
dec
sub
arpl
jns
aad
repz
imul
xchg
mov
mov
shrb
sbb
cmpsl
pop
fidivrl
std
dec
and
or
fists
add
fcompl
daa
dec
mov
pusha
cmp
add
std
divl
sub
popa
cmpsb
pusha
subb
xchg
pop
std
xor
negl
and
pop
dec
or
mov
mov
ret
out
fdivs
jge
inc
pop
pop
stc
inc
jo
dec
test
je
lret
inc
cld
adc
popa
dec
rorl
push
or
mov
icebp
mov
mov
inc
aam
push
pushl
outsl
call
cli
sub
shlb
cmp
or
xlat
jmp
lahf
pop
arpl
add
in
xchg
or
dec
or
mull
cld
ljmp
popa
je
mov
imul
test
or
les
ret
fisubrs
jmp
imul
nop
js
insl
fwait
push
shll
or
pop
fwait
lods
xor
mov
popa
pushf
ret
or
inc
or
xor
shll
or
je
push
and
push
mov
or
arpl
cmc
add
dec
sub
addr16
xchg
mov
rolb
jge
pushf
pop
mov
adc
or
mov
test
pop
mov
xchg
mov
ficoml
int3
fnsave
data16
pop
repz
loopne,pn
icebp
push
mov
sbb
cwtl
pop
insl
es
in
xor
dec
adc
pop
jp
lahf
add
mov
inc
dec
xor
out
js
pushf
or
cmpsl
jo
mov
sub
ljmp
clc
mov
in
les
popa
popa
sbbl
fstpl
loope
xchg
push
and
add
mov
cmp
aas
imul
push
xor
mov
cmp
xor
shlb
dec
xchg
mov
sbb
mov
mov
inc
mov
lock
es
xor
mov
push
dec
pop
fs
xlat
mov
and
mov
xchg
mov
xchg
lahf
rcll
dec
mov
pop
jnp
shll
sbb
push
and
inc
mov
mov
ljmp
ret
lret
test
inc
nop
dec
jae
je
add
xchg
ljmp
outsl
insb
jno
scas
out
sub
daa
pusha
mov
pop
testb
push
add
lcall
stos
mov
in
mov
dec
lds
cmc
mov
nop
and
mov
or
out
jns
mov
fildl
xor
jo
stos
adc
cmp
sahf
pusha
jg
pop
push
push
pusha
int3
sbb
sar
cmpsb
test
ficoml
movsl
sbb
movsb
out
lea
out
lock
neg
adc
das
or
ja,pn
loopne
repz
call
and
sub
test
push
mov
testl
add
mov
push
les
out
mov
aas
call
pop
nop
xchg
les
sbb
pop
and
xchg
push
mov
data16
out
pushf
xchg
cli
scas
cmp
cmpl
test
lods
fsubrl
js
xchg
xchg
xor
or
inc
jmp
in
cmp
mov
cmp
xchg
jmp
xor
dec
xchg
es
testl
dec
data16
loop
gs
in
divb
stos
jbe
cmpsl
sbb
or
pop
mov
add
xor
jne
mov
dec
push
aad
les
stos
mov
sub
add
fldl
pop
clc
das
sub
iret
mov
add
xor
imul
arpl
xchg
jno
lret
gs
lods
jnp
or
popa
sbb
loop
arpl
scas
xchg
sahf
push
and
or
pop
add
sub
xchg
mov
in
fcmovnbe
jnp
cmpsl
jl
sub
jno
fcmovbe
xor
jbe
in
jae
sub
dec
adc
jmp
dec
inc
lods
int
loopne
pop
test
sbb
cltd
repnz
add
enter
add
mov
enter
out
pop
aaa
mov
not
pop
loop
leave
jns
or
jg
mov
mov
enter
adcl
xchg
bound
faddl
scas
inc
mov
xchg
sub
xchg
push
ds
dec
pop
mov
jae
inc
inc
cmc
sub
in
and
xorl
sbb
lds
cmpsb
scas
rcrb
jbe
jnp
mov
sub
dec
jp
ficoml
jb
repnz
inc
inc
test
cmpsb
jmp
sti
fstpt
adc
adc
aas
cmp
movsl
in
xchg
ror
mov
inc
pusha
pusha
xor
in
add
dec
mov
sbb
test
dec
daa
ret
xchg
and
dec
dec
jle
cmp
leave
inc
jb
push
mov
jnp
adc
push
loopne
insb
call
sbb
out
or
or
aad
push
xchg
insb
xchg
or
push
mov
mov
fdivrl
add
xchg
shrl
je
and
mov
push
mov
filds
sbb
cmp
sub
dec
and
xor
fwait
push
rorb
popl
jo
in
loop
aad
int
mov
call
js
js
decl
adc
in
jge
test
aas
rclb
shl
sub
push
ss
repz
imul
popf
pop
jl
inc
mov
dec
pop
jae
hlt
push
lock
cmpsb
popf
push
jl
jnp
push
test
roll
js
bound
cmpl
test
xor
lds
jmp
jp
andl
mov
lret
mov
xchg
adc
into
mov
jl
inc
pop
lock
enter
int3
lods
mov
mov
lods
push
inc
sub
sti
lahf
jle
jle
mov
mov
aam
mov
sub
dec
dec
ss
adc
inc
fsubr
or
xor
add
jmp
in
test
jno
xor
inc
fstl
ficomps
add
pop
mov
hlt
pop
fcmovbe
fst
or
lods
pop
into
jg
mov
xchg
lret
cmp
movsl
aam
addr16
scas
adc
mov
add
cmp
pop
scas
sub
loopne
popf
mov
add
popa
fs
testl
cs
mov
mov
mov
push
ret
mov
out
out
mov
push
sub
push
xor
push
ret
es
ss
xchg
xlat
add
cmpsb
in
mov
imul
pusha
js
jle
dec
aaa
stos
sbb
cmp
xor
dec
inc
imul
sbb
pop
pop
jp
or
add
sete
push
push
insb
aad
das
lret
xor
mov
add
negl
xor
xor
aaa
dec
mov
jge
insb
rorb
add
sbb
adc
std
inc
ja
call
cmp
bound
mov
dec
inc
jl
ficoml
jne
sbb
jecxz
mov
jno
jmp
out
ret
scas
xchg
push
xorb
outsl
ljmp
loopne,pn
add
mov
out
add
lret
aad
pop
repz
addr16
sub
loope
adc
mov
insl
or
mov
leave
out
pushf
rorl
pop
in
roll
xchg
dec
mov
and
jg
int3
pop
jnp
cmpl
into
jmp
popf
mov
or
out
mov
mov
pop
mov
aam
test
ret
ret
mov
adc
jle
inc
cmpsl
mov
in
icebp
movsl
movsl
inc
pushf
stos
sti
out
jecxz
cld
lcall
mov
scas
dec
test
cmc
sub
cmp
idivl
xor
mov
pop
dec
ljmp
movsb
or
nop
inc
mov
xchg
inc
dec
cmp
dec
shrl
rorl
add
popf
sub
sbb
add
mov
push
jnp
mov
int
pop
cltd
xor
andl
loop
lea
lock
jne
xchg
jl
dec
imul
int3
das
in
cltd
repz
in
push
sub
ss
arpl
and
sbb
sub
iret
cltd
mov
mov
jg
jnp
or
cmpsb
sti
das
adc
cmc
dec
sbb
call
repnz
jl
mov
icebp
or
stos
lcall
pusha
scas
jl
imul
jmp
adc
mov
sahf
pop
dec
add
lock
fs
aad
insb
test
mov
test
rcr
dec
outsb
aam
stos
rol
mov
pop
xlat
mov
leave
mov
movsl
nop
and
std
out
nop
addr16
sbb
bnd
sub
sub
dec
push
cmp
lret
mov
or
sub
cmp
push
xor
or
push
jo
out
inc
mov
clc
mov
lret
fwait
test
loope
repz
push
sbb
mov
add
popl
mov
add
repnz
loopne
adc
dec
mov
insl
jne
push
push
test
shrb
xchg
leave
push
inc
lock
addl
loop
cmp
mov
mov
xchg
pushf
add
jmp
fiadds
jbe
sub
adc
xor
add
pop
cmpsl
insl
fs
cs
xchg
cmp
jb
pop
jnp
lods
js
mov
cmp
sbb
xchg
xchg
and
add
fisttpll
or
dec
jno
dec
add
sbb
lods
cmp
rcrl
add
mov
inc
lods
jle
dec
xchg
and
sbb
xor
push
mov
xlat
push
aas
xchg
inc
stos
stos
inc
ret
xor
xlat
das
xchg
and
daa
test
sub
adc
sbb
mov
std
jnp
lock
fsubl
lret
insb
mov
xlat
mov
mov
aad
inc
pop
mov
adc
jle
adc
lahf
xor
pop
cmc
rorb
xchg
out
sub
daa
gs
cli
cmp
iret
add
xchg
ret
sbb
shrb
fcomip
mov
lcall
int
js
scas
repnz
in
add
or
clts
sti
sub
pop
js
or
cmpsb
out
and
inc
add
xchg
cltd
xor
mov
adc
pop
push
cmp
sbb
add
lcall
push
notl
aaa
cld
shl
pop
int3
ret
pushl
jns
test
mov
dec
push
sar
test
rcrl
lret
into
stos
scas
mov
call
jae
mov
push
ljmp
push
inc
lds
pop
ljmp
xor
mov
pop
js
xor
jb
lods
pusha
xchg
fdivrl
pop
insb
ljmp
call
or
adc
int
sarb
push
sti
push
pop
jbe
sub
jge
inc
lods
sub
xchg
xorl
dec
pop
push
inc
lock
call
dec
dec
repz
pop
mov
cmc
pop
es
or
xor
dec
mul
push
cmc
jns
sub
pop
pop
stos
cmp
or
fisubrl
lea
test
jb
cmp
xchg
mov
push
nop
jne
stos
out
jno
dec
push
aam
fcmovbe
subl
xor
lret
stos
fs
xorl
sub
sub
sbb
jmp
mov
andb
repz
aaa
outsl
out
outsl
stos
push
cmp
ja
js
pop
cwtl
xchg
rorb
mov
or
jg
xchg
adc
cmpsl
in
and
mov
scas
inc
adcl
mov
rcr
mov
xchg
cs
in
es
push
pop
gs
outsl
push
sub
je
lahf
lods
daa
or
out
inc
mov
daa
jns
repnz
add
mov
inc
push
sub
dec
jno
enter
pop
jmp
inc
cmc
mov
shll
sbb
mov
lods
test
mov
loop
lcall
repz
mov
and
add
fcmovbe
fs
test
sar
add
imul
hlt
pop
inc
sarb
stc
pop
insl
std
daa
push
xlat
sub
outsb
sub
xchg
hlt
push
sub
inc
cwtl
lea
or
test
add
gs
mov
add
gs
adc
dec
push
mov
push
dec
leave
or
push
cs
scas
sub
push
pop
cmp
mov
es
jecxz
into
hlt
or
scas
push
ret
inc
inc
or
xor
fs
stos
scas
dec
aaa
rcl
dec
call
push
ds
outsb
cmp
push
test
ficomps
cmp
and
mov
mov
lret
push
lahf
enter
insb
stc
cmp
xchg
pop
adc
into
rcrb
mov
out
into
jb
cmp
jg
jns
rcl
pop
mov
pushf
in
pop
fsubs
aam
push
pop
lret
mov
dec
cmp
adc
repnz
or
imul
sbb
aad
jmp
out
xchg
enter
aas
jb
jg
test
mov
jns
jmp
test
popf
fstpl
cltd
sub
addb
push
add
imul
cmp
insb
stos
adc
pusha
or
loopne
mov
mov
es
rcrl
add
mov
mov
pusha
mov
push
call
fiaddl
addr16
dec
and
lahf
add
push
jle
es
in
xchg
mov
mov
xor
in
loop
scas
pop
cmpsl
lds
repz
or
aad
xchg
sbb
pop
in
jo
daa
jle
movsb
xor
mov
and
adc
sbb
jmp
jns
adc
pop
leave
sub
ss
adc
sarb
shll
daa
orl
mov
xor
jae
add
cmp
sbb
out
push
outsl
mov
and
test
pusha
aad
or
sarl
pop
cmpsl
dec
cld
add
adc
add
or
dec
aad
es
sbb
dec
test
and
divb
mov
lods
jne
dec
cmc
pop
mov
fwait
push
jns
stos
popa
lret
ret
push
movsb
push
aam
push
es
mov
insb
insl
nop
fistpl
xlat
ret
test
lret
push
loopne
ss
inc
sub
hlt
repnz
push
cmp
and
mov
sbb
lret
mov
mov
push
or
sub
mov
fdivs
xorl
sbb
jae
fmull
mov
test
and
inc
popf
push
cmp
add
rcrl
xchg
mov
loop
push
push
out
sbb
inc
adc
push
and
rorl
jae
pop
sub
dec
test
insl
push
xchg
jmp
add
jle
mov
jecxz
test
psubsw
std
push
or
cld
fs
or
out
mov
and
xor
and
sub
jbe
ds
jge
jg
fs
and
pop
inc
inc
sbb
out
pop
std
das
shrb
iret
les
mov
je
add
adc
dec
mov
mov
adc
cld
test
mov
test
out
dec
mov
lea
repnz
add
xor
hlt
fsub
scas
xor
aas
cmp
in
dec
xchg
out
cmp
daa
out
pop
xchg
pop
stos
adc
fildl
cs
ficoms
fistps
imul
mov
mov
sub
lods
pop
pop
rol
pop
sub
mov
push
outsl
outsb
std
xchg
sbb
pop
cld
pop
push
mov
adc
vdivsd
cmp
hlt
mov
cs
lret
inc
jl
add
addl
sbb
daa
cmc
cmc
sub
dec
lea
test
lods
jp
and
imul
cmp
inc
and
push
repz
bound
sbb
imul
push
fistps
stc
dec
enter
xchg
bound
lcall
mov
lods
sbb
cmp
mov
mov
jg
push
int3
xor
fldenv
popa
lret
fcomi
or
inc
inc
insl
andl
sbb
arpl
or
mov
cmp
adc
loope
xchg
movsl
arpl
cmp
adc
ds
push
cld
test
mov
mov
sbb
xchg
testl
call
fidivl
lods
xchg
mov
xchg
and
aam
cld
jno
in
aaa
out
nop
cmp
jl
push
or
loop
pop
test
sbb
in
fwait
cmpsb
es
add
int
repnz
outsl
lods
bound
lret
cs
or
add
mov
xor
sbbb
pop
jmp
aaa
mov
xchg
repz
mov
adc
fdivrs
aaa
inc
sti
jl
rorl
sahf
pop
fcoms
jle
inc
cmp
jb
arpl
nop
sti
mov
xor
mov
mov
ror
inc
or
mov
dec
insb
push
rcrl
test
lcall
pop
cmp
jecxz
push
push
ret
xor
jg
jecxz
and
xchg
ret
sahf
fisubs
int
xor
mov
repnz
lods
dec
add
adc
mov
shrb
loope
decb
repz
add
pushf
dec
lcall
popf
dec
jg
je
test
dec
push
xor
sbb
test
repnz
jp
ficoml
inc
popa
jl
jl
add
pop
rcrb
cld
mov
push
inc
xlat
mov
push
or
daa
repz
xchg
fists
xchg
out
add
push
les
jae
push
push
fcmovbe
cltd
outsl
fimuls
inc
sahf
cld
mov
lret
pop
nop
or
push
es
lods
je
jge
xchg
pop
or
pusha
mov
lret
mov
add
mov
aam
sbb
test
addr16
mov
sti
and
cltd
pop
sub
xchg
jp
je
xchg
inc
xchg
out
outsl
lret
out
mov
pop
cmc
mov
cmp
js
fmuls
clc
adc
and
in
sbb
xor
jmp
add
stc
pop
sbb
lds
inc
xor
add
push
jmp
adc
cmp
xor
dec
out
xchg
mov
inc
jp
cmp
inc
push
mov
dec
lock
adc
sbb
stc
rcl
xor
adc
or
mul
aam
sahf
add
stos
jge
mov
dec
addl
test
loop
sub
lahf
xlat
mov
or
fwait
in
outsl
or
mov
and
repnz
test
cmp
shl
inc
mov
xor
ficoml
mov
ret
mov
mov
cld
out
push
jmp
loopne
shll
xor
add
fidivl
push
xor
imul
sub
test
xchg
lret
scas
mov
jp
xchg
leave
mov
fstpl
mov
loopne
out
cmc
cmp
inc
pop
xchg
outsb
pop
rcr
jmp
pusha
xchg
adc
inc
cmp
mov
loope
in
jmp
or
cwtl
arpl
push
popf
push
xor
and
repnz
shll
sbb
mulb
push
xor
cmc
fwait
nop
inc
and
dec
shll
mov
inc
xor
dec
enter
push
add
call
repnz
into
mov
xor
cmp
xchg
xchg
std
xor
mov
daa
leave
add
xchg
les
adc
ds
pop
rcll
pop
fisttpl
adc
inc
add
mov
mov
mov
addb
iret
leave
notl
mov
adc
mov
pop
in
pop
shll
mov
dec
out
iret
cmp
jb
ficoml
les
add
shl
push
inc
pop
insb
out
pusha
mov
js
addb
mov
and
push
ret
enter
imulb
push
add
lods
sbb
hlt
jmp
cmp
inc
les
inc
xlat
scas
loope
cmc
push
mov
aam
mov
push
in
std
fwait
nop
jmp
sub
pusha
and
add
sarl
push
sbb
movsb
out
or
dec
inc
ret
and
out
stc
adc
sub
jnp
divl
jp
cmp
imul
inc
popa
dec
push
mov
adc
loop
pmaxub
cmp
mov
dec
or
mov
sahf
jbe
aaa
loop
push
pushf
push
add
push
in
lds
add
in
mov
test
mov
out
lret
push
into
stos
out
sahf
add
das
mov
push
cmpsl
sti
decb
out
ds
jno
test
iret
mov
gs
repz
inc
mov
lret
jns
mov
in
fistpl
enter
sbb
add
popa
lock
cmpl
and
arpl
push
addr16
lea
roll
adc
stc
sub
das
arpl
cmp
lret
and
sbbl
fcoms
adc
push
movsb
xlat
mov
dec
ret
int
repnz
push
mov
and
aas
into
xchg
mov
mov
sarb
or
jae
cwtl
xchg
and
or
sbb
popf
lret
mov
loop
mov
push
dec
rcr
into
loopne
mov
push
data16
jb
mov
repz
jle
push
aam
call
call
jno
popf
imul
mov
or
and
xor
mov
jecxz
inc
pop
mov
sub
jae
lds
sbb
push
pushf
in
stos
lds
lea
cmp
les
add
cmc
sub
jno
or
out
pop
adc
mov
sti
inc
enter
push
test
repz
mov
xchg
lock
mov
xchg
cs
fsubrs
popf
pop
mov
mov
ds
cmp
pop
jns
mov
inc
and
xor
and
arpl
dec
adcl
adcl
cmp
cwtl
add
bnd
rcrl
movsl
addr16
mov
cmp
push
movsb
out
arpl
xorl
push
pop
iret
pop
mov
dec
push
arpl
test
iret
xchg
dec
ficomps
leave
jno
add
inc
or
out
mov
xor
rcll
mov
lahf
jnp
xor
ljmp
shll
daa
cltd
xlat
in
jecxz
cmpb
xchg
push
pop
in
add
ret
mov
xor
int
sbb
mov
call
cmp
and
cmp
pop
mov
sub
mov
stos
les
test
gs
and
out
cmp
out
enter
or
or
pop
push
dec
inc
pop
iret
data16
cmp
push
cltd
cmp
xchg
cmc
push
mov
push
fstl
xchg
sarl
xor
push
push
rcrl
pop
dec
mov
mov
xchg
mov
jmp
mov
popa
add
jbe
stos
loopne
arpl
sub
movb
loop
nop
add
dec
mov
push
cld
sti
add
pop
daa
cmp
push
add
mov
int
dec
int3
jmp
fisubrs
cmc
and
push
xor
or
mov
mov
iret
mov
ja
jns
pusha
jo
leave
jne
test
nop
call
nop
jo
stos
cs
mov
daa
pop
or
or
imul
mov
inc
push
mov
mov
mov
mov
sub
jb
jg
adc
out
add
shrb
out
jno
xor
inc
push
ja
ja
pop
dec
aam
xchg
cmp
fstps
out
add
pop
mov
cs
cmovns
aam
or
mov
jp
xorl
imul
jae
mov
add
mov
cmp
and
dec
ljmp
push
in
mov
and
pop
push
testl
syscall
daa
pop
fistpl
fucom
xchg
add
cld
mov
stos
jle
cli
inc
push
hlt
pop
outsb
pop
jecxz
inc
sub
nop
mov
and
dec
cmp
in
test
jmp
mov
xchg
clc
imul
push
xchg
xor
xchg
push
lods
or
xchg
in
pop
in
jo
jo
insl
scas
add
ljmp
xor
sub
cmp
jns
jg
dec
push
jb
jae
dec
insb
sar
enter
pop
outsb
outsb
gs
movsl
and
jecxz
movsl
mov
mov
pop
xor
int3
pop
outsb
ljmp
cmpsl
jns
xor
dec
in
jecxz
sbb
cmc
scas
les
adc
jne
ja
cmp
mov
xchg
jbe
ljmp
mov
inc
loope
mov
adc
les
fists
dec
or
imul
push
dec
and
push
aaa
or
xlat
incb
mov
cwtl
mov
xchg
push
mov
loope
leave
cmpsb
xchg
sub
xor
sbb
xor
int3
cs
pop
mov
lcall
addr16
jecxz,pn
cmp
fwait
xlat
stos
int
mov
mov
and
lret
adc
and
sbb
adc
leave
test
mov
ficoml
insb
rorb
outsb
dec
or
lock
xchg
rol
mov
jno
insb
sub
outsl
in
mov
add
mov
jnp
inc
out
cmpsb
jnp
cmp
jno
or
test
dec
es
dec
call
das
loop
pop
inc
mov
into
and
inc
adc
inc
out
aad
cmp
insb
and
cmp
aad
xchg
fnsave
cli
or
xchg
adc
lock
cmp
inc
mov
lds
jp
fbld
or
mov
adc
mov
imul
scas
sahf
push
add
cmpsl
into
mov
aam
jns
pop
lret
adc
int3
push
jecxz
xor
adc
and
daa
push
testb
decb
mov
mov
inc
pop
add
out
aad
dec
jmp
dec
sub
loope
nop
repnz
imul
lret
jle
pop
sub
lods
arpl
pop
imul
call
faddl
cmpsb
cmpsb
data16
imul
or
js
mov
xchg
mov
xchg
repz
mov
add
xchg
bound
fldt
xchg
xor
dec
jmp
sub
xorl
loopne
lods
loop
add
or
test
jl
jae
ret
in
ret
movsl
ljmp
pusha
jae
iret
inc
test
sti
ja
xor
adc
add
cltd
mov
mov
jecxz
ja
ficompl
pop
push
jb
adc
push
cli
jo
sub
mov
inc
pop
dec
jo
das
cmp
xor
pop
xchg
fsubr
les
addb
in
pop
xor
lds
sub
pop
test
inc
lods
mov
int3
in
ljmp
outsb
mov
sbb
insb
jl
das
scas
fbld
adc
xchg
inc
or
or
inc
loope
test
xchg
xor
lret
ss
xchg
xor
mov
push
sbb
int
scas
xchg
sub
mov
sbbb
daa
adc
mul
sbb
add
dec
jge
push
cmp
movsl
fadds
sub
mov
lcall
hlt
sbbl
les
push
movsb
and
pop
pusha
loopne
ds
mov
xor
dec
jnp
stos
aaa
sub
xchg
cmp
mov
adc
daa
cmp
mov
adc
xor
adcb
pop
insb
mov
dec
clc
push
imul
sub
mov
xor
lds
cmc
jl
ret
mov
mov
push
add
push
xor
aad
mov
shlb
push
cmp
rcrl
adc
aam
inc
jge
jecxz
std
or
xlat
shr
mov
cmc
cwtl
mov
xchg
jecxz
scas
pop
dec
lds
shrb
inc
mov
data16
adc
xchg
dec
jecxz
test
loopne
adc
adc
cmp
imul
xchg
and
cld
inc
dec
sub
daa
mov
inc
loop
inc
jle
fsub
inc
fidivl
ret
fmull
xchg
push
lock
lods
movsb
out
fwait
adc
popf
xchg
add
jo
sub
push
ds
jne
daa
fiadds
lret
outsb
fcmovnbe
jo
mov
xchg
and
xchg
inc
xchg
ds
inc
xlat
xchg
mov
sub
loope
xchg
pop
xor
clc
testb
jno
or
jbe
or
push
es
mov
mov
out
gs
or
ja
and
out
xchg
push
icebp
aam
test
push
jge
aaa
xlat
sbb
call
movsb
test
stc
xchg
out
rol
jb
and
push
inc
jecxz
xlat
flds
push
sub
push
cmp
and
test
xchg
inc
xlat
xchg
dec
cmc
xchg
out
or
xchg
call
sti
bound
and
sahf
push
cli
push
pop
int3
xor
sbb
sub
rolb
xor
pop
mov
bound
fbstp
stc
push
cmp
addr16
movsl
xor
cmp
jge
xchg
add
gs
mov
sbb
mov
xchg
ja
mov
out
xchg
mov
dec
cmpl
pop
mov
inc
pop
popf
lods
cmp
sbb
test
cmpsl
outsb
push
jl
mov
mov
adc
into
dec
inc
in
jecxz
lea
pop
jb
mov
mov
lcall
mov
or
icebp
and
sub
test
push
mov
outsb
jle
or
js
lds
setne
pop
shrb
adc
pop
lock
nop
cwtl
sub
pop
sti
jns
gs
bnd
clc
imul
pop
rcrl
jmp
loopne
stc
popa
in
mov
inc
pushf
mov
cmp
movsl
mov
scas
xor
fwait
mov
in
stc
nopl
jo
and
out
push
scas
xchg
jmp
inc
mov
cmp
jmp
add
call
dec
aaa
cli
mov
jo
int
fmul
dec
cmpxchg
test
negb
in
push
lahf
roll
cli
in
mov
inc
inc
cmp
sbb
jmp
sbb
mov
fdivrs
sub
mov
xchg
dec
mov
push
movsb
push
jnp
lock
pop
mov
mov
ss
push
pop
hlt
outsb
repz
mov
arpl
lcall
inc
add
cmp
fdivs
sub
popf
iret
xchg
out
dec
inc
inc
mov
push
xchg
add
lock
fs
ja
lret
lcall
ss
into
pushf
fbstp
loope
mov
dec
pushf
or
inc
je
ljmp
sub
xchg
adc
add
cwtl
fsubrs
lods
fsub
mov
mulb
jnp
and
mov
xor
ja
lods
imul
insb
add
pop
inc
in
outsb
loop
ficompl
rorb
testl
rol
xor
dec
xchg
jns
sti
and
iret
add
cltd
cltd
addr16
mov
xor
aas
clc
pop
sub
jnp
loop
lock
fs
add
xchg
subb
xor
dec
and
adc
xchg
out
or
bound
xor
sbb
lret
es
aam
xlat
arpl
push
ret
adc
in
lret
jecxz
rol
inc
out
inc
push
xor
mov
sahf
stos
add
and
xor
jle
adc
mov
xchg
out
fdiv
push
mov
mov
mov
push
push
or
push
jmp
in
adc
inc
stos
xchg
cltd
sub
out
dec
and
jp
xor
stc
mov
repnz
in
pop
and
adc
add
adc
sub
push
lds
xor
cwtl
in
cltd
fs
adc
iret
es
test
ds
notb
nop
test
jno
jnp
dec
mov
mov
mov
filds
mov
fldcw
push
lods
loopne
shlb
shlb
fldt
stc
pop
sub
and
push
call
pop
popf
addb
mov
cmp
and
je
fistpl
mov
popf
sbb
gs
jecxz
push
mov
sub
cmp
cmpsl
in
cmp
dec
adc
jns
xchg
cld
stos
jle
xchg
mov
xor
loopne
mov
lods
fs
repz
imul
aam
pop
cmpl
add
imul
xor
cmp
adc
cmpsl
aam
lock
push
int
fxch
clc
inc
xchg
mov
fldcw
mov
inc
sti
leave
push
rorb
adc
cmpsb
pop
sub
dec
ret
sbbl
jge
data16
js
add
mov
sbb
les
dec
mov
xchg
push
cmp
jmp
lret
stos
or
xchg
mov
scas
adc
orl
scas
mov
mov
jmp
fsub
fsubrs
xor
mov
cmp
mov
les
orl
jno
rclb
sti
sbb
shrl
fstpl
ljmp
xor
pop
shll
cld
xchg
mul
es
fsubrp
in
bound
adc
push
jno
loop
daa
fists
stos
sub
sbb
std
mov
in
mov
loope
xchg
pop
mov
xor
dec
popa
pop
mov
out
loop
shll
pop
stc
mov
or
mov
into
jg
into
sub
and
out
ljmp
push
je
jle
out
mov
inc
lock
mov
cmp
sbb
add
enter
in
roll
dec
rcr
in
notl
mov
je
lahf
int3
mov
test
jnp
andb
test
ret
adc
mov
push
shrb
idivl
out
inc
lock
xchg
mov
push
xor
sub
push
movaps
xchg
mov
and
std
mov
push
adc
xor
popl
mov
xchg
daa
mov
jnp
packsswb
aam
mul
mov
shll
gs
int
daa
jbe
in
cmp
and
xlat
mov
pop
jmp
popf
cmp
xor
hlt
or
add
jbe
xchg
jmp
mov
std
push
repnz
mov
loopne
cli
les
andl
jnp
mov
out
mov
xor
aaa
imul
dec
mov
cmp
mov
inc
or
sub
xchg
jnp
mov
inc
cld
or
adc
mov
mov
shll
stc
hlt
je
and
jg
add
xlat
in
add
add
xchg
push
xor
nop
call
sbb
cmp
mov
shlb
push
out
orb
leave
je
push
adc
mov
mov
lock
xor
and
cmp
call
pop
and
pop
cmp
xor
jns
sub
adc
stos
push
mov
out
in
lods
popa
insb
push
mov
fdivl
fldt
loope
stos
aad
call
rcrl
out
and
mov
mov
test
repz
jl
arpl
popf
or
das
sub
cld
adc
scas
dec
aaa
mov
jge
mov
popf
add
test
sbb
data16
and
scas
ret
mov
out
xchg
and
mov
xchg
sbb
stos
and
sbb
iret
test
sub
jle
mov
mov
out
fwait
test
sub
pusha
push
dec
xchg
pop
test
jbe
or
cld
mov
fnstsw
jg
test
mov
mov
loop
sti
mov
and
pop
insl
icebp
pop
rclb
enter
inc
mov
jmp
loop
cmp
sub
cmp
test
inc
xchg
idivb
push
lock
inc
cmp
aaa
out
cmp
ds
mov
sub
adcl
push
xchg
fstpl
cmp
movsb
xor
xor
xchg
call
push
shl
cli
stos
xchg
fstpt
out
shlb
movsb
dec
loopne
dec
and
add
dec
pop
xor
xchg
pop
jge
arpl
inc
je
pop
mov
lock
push
aaa
or
pusha
sahf
mov
lahf
push
sub
mov
fnstcw
and
pusha
fdivs
fstpt
push
lcall
mov
outsb
sbb
or
xchg
jo
negl
mov
sbb
inc
decl
fisttpll
ss
xor
sub
test
inc
sub
nop
int3
inc
adc
js
dec
mov
loope
sbb
push
jp
stc
fnsave
in
and
pop
add
rorl
jae
fdivl
mov
xor
shll
add
push
mov
rcl
or
or
outsb
outsl
inc
loop
push
jno
jns
xchg
cmp
or
pusha
push
jge
test
cmpsb
dec
push
loope
dec
gs
repz
inc
jbe
rcrb
inc
decl
mov
xchg
lock
out
sub
ret
push
push
inc
into
pop
shl
cmpsl
sahf
xor
mov
ds
or
cli
mov
xchg
mov
ficoms
mov
shrl
orb
sbb
loope
inc
in
lret
loopne
cwtl
ret
in
data16
dec
hlt
and
in
enter
inc
cmp
adc
pop
inc
mov
aaa
add
imul
xor
enter
jmp
pop
stos
mov
push
xor
xchg
sbb
es
jno
sbb
push
scas
cmp
leave
and
push
pop
mov
or
push
lahf
lea
jae
push
xor
jecxz
scas
jae
xchg
cli
or
jecxz
pop
mov
xor
idivb
xchg
dec
test
dec
xchg
sub
mov
movsb
pop
jmp
dec
jno
imul
lcall
mov
in
adc
dec
nop
and
popf
cmpsl
jns
sarb
imul
xchg
jne
sub
cmpl
stos
and
sub
into
cwtl
testl
pop
push
xor
jae
or
xchg
jae
ficomps
aam
push
pop
fildl
push
add
mov
call
lcall
sbb
mov
add
mov
push
add
pushl
xor
in
cwtl
push
jmp
add
mov
arpl
xchg
or
aas
push
sub
outsb
outsb
hlt
xchg
aam
inc
pop
test
push
xor
mov
dec
packsswb
mov
out
clc
pop
cmc
test
fbstp
mov
aas
arpl
shlb
outsb
xchg
sub
jo
sub
in
jns
sbb
aam
add
outsb
mov
jae
fcmove
fistpll
sbb
lods
out
inc
pop
or
cmp
outsl
leave
arpl
aad
out
ss
insb
stos
pop
and
cmp
je
or
add
pop
xor
in
xchg
sbb
xor
cmpl
std
jbe
cltd
adcb
push
sbb
adcl
lods
xchg
icebp
inc
cmp
cmp
and
fiadds
int
mov
data16
xchg
xlat
xchg
sub
cmp
mov
pop
xchg
mov
lret
dec
add
mov
or
cmc
in
jns
pop
jno
add
cmp
mov
mov
xor
push
xchg
fnstenv
les
xchg
ret
inc
ja
xchg
pushf
mov
mov
pusha
inc
mov
cmp
push
push
test
scas
dec
add
sbb
stos
scas
arpl
out
iret
sub
shll
sbb
into
repnz
or
mov
enter
movsb
out
pushf
jnp
add
outsl
inc
aaa
psubusw
or
add
add
lds
hlt
inc
das
adc
mov
sbb
ja
clc
sub
push
imul
dec
sub
jmp
xchg
mov
inc
fwait
mov
adc
cld
sbb
jns
test
inc
lahf
mov
mov
fsubs
or
mov
in
ficoms
jp
in
outsb
negl
mov
xor
mov
aas
add
aad
sbb
dec
mov
mov
mov
ficompl
les
sub
adcb
xor
sahf
cmp
nop
rcrb
add
sbb
inc
mov
inc
ret
push
lret
test
mov
pushf
lahf
fsubp
adc
out
cmp
adc
add
dec
push
dec
fdivrl
mov
and
dec
clc
in
js
je
mov
aaa
out
out
int
int3
das
cld
mov
push
aas
mov
sub
xor
xchg
push
pop
js
adc
jmp
sbb
pop
pusha
fisttpll
aas
mov
push
pop
dec
add
sbb
mov
aam
testb
adc
dec
fcmovbe
shlb
jmp
call
rolb
in
test
ss
cmpsb
scas
ficoms
cwtl
addr16
mov
pop
loope
prefetchwt1
or
lods
sbb
xor
mov
pop
dec
int3
punpckhbw
les
daa
jle
mov
cld
arpl
imul
int3
and
and
sub
les
mov
jnp
or
mov
xchg
or
int
iret
addr16
sub
jle
movl
addb
cmpsb
jp
movsl
scas
and
rclb
cli
shrb
nop
sub
sub
push
pop
ja
scas
mov
sbb
cmpsl
lea
outsb
xor
push
js
nop
iret
or
jecxz
aas
movsl
or
sub
scas
out
mov
jo
mov
pop
sbb
adc
rcll
add
sbb
fsubs
int
and
test
ret
or
sbb
enter
cltd
inc
add
lahf
loope
cmp
loope
int
sbb
or
fisubl
sbb
inc
fdivs
test
addb
popf
and
scas
sbb
fldt
cld
or
fcmovu
lret
add
xchg
mov
push
mov
xor
scas
lock
stc
pop
mov
pop
jns
sub
loope
sbb
dec
js
jp
je
outsb
outsl
mov
pushf
sub
mov
shrb
push
or
cmpsl
icebp
xchg
out
jne
stc
cs
xchg
into
jg
dec
cmp
push
fdivrs
pop
lods
sbb
xchg
das
in
inc
fsubl
jp
aam
rclb
or
inc
sarl
push
movsl
sub
gs
add
sub
mov
hlt
mov
movsl
fxch
or
cld
push
and
sahf
mov
jns
mov
arpl
cmp
std
push
icebp
mov
mov
imul
lock
dec
push
jns
in
arpl
mov
rorl
inc
xor
ds
xor
or
repnz
jmp
xchg
mov
popa
test
out
mov
shrb
sub
loope
in
int3
and
or
add
jecxz
mov
mov
xchg
ret
hlt
lock
cmp
enter
sub
adc
or
cmp
adc
inc
lcall
addr16
arpl
sbb
adc
and
and
cmp
push
jl
ds
ret
nop/reserved
lcall
sub
loop
mov
push
or
mov
cwtl
in
push
lods
addb
imul
pop
pop
mov
ja
or
movswl
sbb
bound
pop
jae
cmp
les
jge
cmpsl
xorb
inc
or
orb
ficompl
hlt
in
outsb
lea
mov
or
mov
xlat
movsl
push
js
enter
pop
sbb
adc
push
cld
adc
and
and
inc
das
jle
mov
xor
xchg
loope
in
xlat
daa
ret
subb
ljmp
adc
loopne
mov
sub
into
push
dec
popa
stos
add
aam
sub
sbb
shll
scas
call
adc
sbb
xchg
or
loopne
adc
xchg
push
xchg
xchg
push
cmp
inc
pop
xchg
lods
cmp
pop
push
cpuid
adc
pop
dec
imul
lahf
cs
mov
pop
push
pop
lods
lahf
into
push
sbb
jle
jmp
pop
jb
or
pop
cmp
fcomip
test
pop
adc
adc
jno
mov
scas
aaa
dec
pop
std
lock
adc
iret
test
inc
and
in
mov
outsl
lahf
scas
dec
stc
aaa
add
inc
fidivrs
loop
rorl
sub
outsb
pop
sbbl
sahf
ret
pop
dec
stos
mov
add
mov
dec
cmpsb
sbbl
pop
movsb
daa
mov
nop
add
repnz
sub
or
test
test
cmp
cmp
lds
pop
or
popa
ja
mov
adc
jl
add
pop
mov
ljmp
cltd
push
aam
sub
decb
addr16
adc
ja
stos
pop
into
gs
sub
mov
call
lret
inc
test
ret
xchg
adc
push
add
out
pushf
pop
imul
or
xchg
fwait
cmp
nop
push
push
xor
sbbb
std
jl
mov
pop
push
scas
lret
nop
push
push
lahf
or
cltd
mov
jns
repz
sbb
test
pop
mov
out
fdivrl
jno
pop
mov
push
xor
loope
xchg
cmp
sub
pop
push
dec
cs
lret
pusha
jg
inc
xor
das
addr16
mov
into
in
mov
jno
addr16
stos
push
and
mov
ljmp
scas
negl
lret
cli
jo
sbb
in
jge
mov
xor
push
mov
mov
hlt
xlat
push
in
sbb
or
imul
icebp
fisubrl
xchg
xor
imul
ss
into
mov
sbb
dec
jmp
jecxz
mov
inc
push
jnp
pop
lock
and
int
jae
les
adc
hlt
dec
mov
sbb
rorl
test
out
adc
outsl
icebp
jno
out
scas
jae
and
xor
sahf
push
in
shlb
call
and
dec
lea
cmc
dec
data16
into
push
sti
nop
sahf
pop
mov
movsl
jnp
pop
sbb
test
sub
out
dec
lret
out
pop
lret
aaa
repz
push
mov
or
test
addr16
out
mov
sahf
hlt
dec
xor
lcall
mov
and
add
rcr
sub
dec
std
loope
daa
and
mov
inc
out
shl
lock
loope
mov
pop
mov
mov
lahf
movsb
ja
aas
repnz
adc
and
stos
jbe
nop
sbb
popa
adc
out
lret
push
push
xor
adc
or
inc
int3
aad
pop
jno
push
mov
push
scas
mov
xchg
lock
lret
lahf
imul
sbb
dec
lds
cmp
jae
xorb
rcl
or
cmp
xchg
push
popa
mov
ja
push
gs
mov
mov
and
std
adc
je
add
mov
addl
fwait
cmp
xchg
lret
push
fnstcw
popf
repnz
fmull
pop
aas
lret
jno
mov
inc
cmp
imul
icebp
xchg
sbb
data16
dec
cmpsl
xor
push
scas
mov
add
or
push
mov
ljmp
sub
add
outsb
or
sub
int
pop
popf
loopne
shl
cmc
adc
jl
jo
jae
and
mov
jl
mov
mov
and
lea
add
pop
fstpt
inc
dec
ror
and
movsb
push
rolb
sbb
cmp
xchg
mov
or
push
add
cmp
pop
sub
push
sarb
jp
jmp
loopne
mov
cmp
pop
mov
popf
push
insb
shlb
inc
negl
xchg
adc
lea
out
add
test
and
inc
and
arpl
cltd
cmpl
dec
or
in
lds
fwait
cmpsb
out
jge
adc
xchg
pop
inc
mov
aad
arpl
ljmp
sub
or
jne
mov
out
loopne
or
jo
xorl
adc
or
jge
push
pushf
loope
es
out
push
mov
test
mov
jmp
xor
lock
jne
push
xchg
mov
pop
and
pop
pop
pushf
inc
hlt
aad
push
xchg
das
jbe
mov
pop
xchg
and
or
call
xchg
fnstcw
ja
lret
push
sub
xchg
ud1
idivb
add
adc
jb
jle
adc
push
sti
add
mov
xlat
std
xor
mov
sbb
add
insb
sarb
cld
inc
cltd
ja
test
mov
pop
mov
repz
dec
jl
insb
pop
loope
adc
adc
push
test
mov
loopne
dec
test
inc
sub
lds
mov
inc
mov
jbe
mov
push
push
mov
pop
cld
or
mov
xchg
lahf
out
je
pop
adc
test
fdivl
aad
mov
inc
std
arpl
jbe
jns
mov
jae
lret
ja
lret
jle
mov
xor
iret
pop
jle
or
daa
into
lahf
mov
cmp
mov
inc
in
in
xor
call
out
popa
cmpl
mov
sub
jne
inc
inc
es
scas
push
xor
mov
loop
jns
sti
jge
aaa
sti
mov
fstl
sub
aam
mov
out
push
cmpb
iret
jmp
and
mov
test
nop
mov
sbb
shlb
mov
scas
xor
push
fst
and
inc
cmp
pop
dec
out
xchg
repnz
in
testl
in
fwait
je
xchg
jl
adc
stos
xor
and
mov
in
std
lret
xchg
pop
xchg
cwtl
test
out
push
push
push
mov
mov
xor
testb
sub
nop
stos
push
movsb
sbb
dec
push
js
fadds
pop
call
pop
je
sbb
lods
push
lahf
pop
fisubrs
mov
sub
bound
cltd
dec
cld
ret
shlb
movsb
out
aas
mov
pop
lock
adc
add
mov
inc
ljmp
fwait
ss
jmp
inc
aad
out
and
inc
shlb
aam
cmp
shlb
pop
das
int3
add
and
aam
stc
ds
jle
pop
shlb
lea
dec
lea
and
mov
addr16
or
add
cmp
xor
cmpsl
call
iret
loope
add
test
pop
lea
cmp
push
mov
inc
jne
mov
fs
push
in
sub
push
ljmp
dec
in
enter
adc
and
and
jno
imul
xchg
sub
lret
fbld
dec
in
into
jns
mov
sbb
xchg
mov
stos
inc
mov
popa
mov
repz
inc
cmpsl
fs
mulb
sbb
push
or
in
inc
addr16
aad
cwtl
cwtl
lret
sub
cmp
icebp
repnz
or
dec
leave
gs
in
jbe
or
xchg
adc
jbe
leave
loop
add
jb
sub
sbb
pop
dec
cld
dec
jno
dec
add
add
mov
fmul
rcr
ljmp
in
jne
dec
xor
fsts
dec
insb
lcall
orl
inc
cmp
es
mov
repnz
aaa
sbb
xchg
push
inc
aad
inc
nop
cmp
xor
aad
addr16
sub
out
cmp
mov
push
cli
data16
mov
inc
fimuls
mov
sarb
cwtl
loope
fcomps
je
mov
pop
and
lret
sub
stos
sub
fisubrl
fisttpl
orl
jnp
mov
xchg
mov
jb
mull
test
push
fsubs
lahf
xchg
cmp
insl
int
sbb
jle
or
xchg
push
add
mov
inc
cmp
mov
push
xchg
stc
clc
jae
push
dec
repz
clc
sarl
cmp
or
jo
pushf
cmp
sub
pop
ljmp
adc
xchg
mov
xchg
jae
fbstp
xchg
adc
pop
and
stos
stos
ljmp
mov
outsb
adc
rolb
sbb
pop
xchg
xor
shrb
lock
or
fsubl
cmp
mov
popf
adc
mov
daa
scas
mov
jecxz
ss
lret
push
fwait
mov
sub
cli
pop
and
shrb
shll
test
jp
imul
enter
movsb
mov
mov
jmp
push
mov
mov
daa
inc
jle
fwait
jnp
loope
fcmovnbe
nop
mov
repz
pop
mov
ja
in
mov
cmp
or
cmpsl
lcall
stos
xchg
lods
adc
sarb
jecxz
hlt
leave
loopne
fisubrl
xlat
push
and
dec
rcrb
repnz
subl
xchg
jbe
outsl
dec
lods
xchg
or
jae
pop
das
push
loop
inc
fwait
in
mov
add
pop
pop
jo
stc
inc
mov
shlb
cmp
test
jg
xor
or
dec
mov
fcoms
out
cmp
pop
sub
mov
adc
inc
push
dec
xchg
or
dec
jmp
sbb
in
ret
call
dec
adc
cmp
add
fidivrl
push
mov
add
jno
or
rclb
fbstp
jp
enter
inc
push
mull
sub
xor
push
push
mov
mov
fwait
in
and
fs
pop
cs
adc
bnd
xor
div
pop
inc
inc
in
scas
mov
pop
lods
xor
jns
icebp
push
sub
add
imull
xor
jo
std
xchg
push
mov
mov
test
dec
xchg
xlat
pop
or
add
dec
pop
pop
icebp
testb
mov
xchg
imul
pop
cwtl
jg
gs
mov
or
in
adc
fsts
jecxz
mov
lcall
fwait
pop
adc
ss
sub
mov
push
add
adc
cmp
and
dec
shlb
bound
mov
dec
cwtl
fidivs
out
or
test
inc
mov
call
arpl
sbb
add
xor
pop
fiadds
cmpsl
hlt
pop
cmp
or
xor
xor
mov
stos
xchg
cwtl
adc
push
xchg
push
xor
ret
loopne
leave
pushf
mov
sbb
mov
jg
jge
push
push
or
xchg
push
scas
pusha
sbb
mov
movsb
stos
and
fdivrs
jle
fnsave
xchg
xchg
mov
aad
aas
gs
popa
ret
adc
sub
enter
cmp
or
andb
or
aam
out
mov
mov
inc
sub
sti
dec
xchg
xchg
mov
movb
pop
inc
rcrl
lods
stos
lret
mov
js
adc
dec
jbe
fstpt
es
sbbl
dec
and
mov
xor
inc
movsb
xchg
scas
jno
jno
imulb
dec
cmp
add
dec
dec
aaa
mov
divb
imul
cmpsl
lret
cmp
cld
or
cld
hlt
and
push
push
loopne
mov
das
repz
fmuls
pop
rorl
jno
add
mov
add
call
mov
pop
or
movb
mov
pushf
cwtl
lods
insl
sub
or
xchg
sbb
mov
inc
xchg
clc
data16
out
sbb
test
shlb
lahf
stos
xor
bound
cmc
int3
or
jns
sarl
dec
ret
lea
repnz
test
push
ljmp
imul
gs
push
arpl
decb
out
xor
in
mov
push
push
sti
dec
push
sub
sub
pop
dec
repz
fdivrp
xor
cmc
xorl
jg
add
fcoml
cmp
mov
jge
rolb
push
mov
xchg
adc
sahf
inc
fcomps
or
push
mov
shrb
es
neg
or
ljmp
pop
clc
dec
xor
jbe
jns
mov
add
add
jl
jge
dec
test
mov
or
sub
inc
pop
xor
jp
mov
leave
fwait
sub
outsb
fstps
lds
and
std
call
xor
cli
xchg
push
aas
pusha
jge
jmp
jo
enter
or
mov
xchg
pop
mov
sbb
adc
sbbb
out
sbb
pop
adc
jmp
lods
subb
inc
pop
rorb
data16
loope
aam
bound
jne
mov
or
adc
enter
sbb
fisubl
fs
test
dec
mov
test
hlt
cmp
scas
adc
inc
inc
in
bound
pop
pop
outsl
cmp
fsubs
or
and
jp
test
inc
fdivr
or
ss
cwtl
inc
xorb
int
sub
outsb
lcall
jp
lret
xlat
in
les
push
add
mov
push
shr
cwtl
in
sub
mov
or
pop
jmp
jl
push
call
xor
or
push
cmp
shrl
repnz
lahf
pop
cmp
or
je
adc
fcmovbe
std
shl
xchg
jae
ret
cmp
sub
test
cltd
in
fldenv
imul
cmpsb
sub
adc
fwait
inc
fidivrl
fdivrs
jmp
push
xor
pop
fmul
xor
shl
pusha
btr
push
mov
sbbl
push
sub
push
cmp
mov
jae
jp
test
dec
pop
pop
mov
sub
sti
addr16
xchg
inc
inc
repnz
jecxz
lret
in
sub
mov
add
leave
push
icebp
inc
sbb
adc
loopne
sub
xor
push
int3
inc
xor
test
mov
mov
rcr
fs
pusha
mov
add
addr16
scas
pop
xchg
add
jmp
jnp
aaa
popf
mov
iret
adc
push
sahf
das
jmp
push
les
aad
negb
out
lods
mov
fstpl
ret
stc
iret
pusha
push
lcall
clc
dec
adc
xchg
pop
js
xor
test
sub
js
mov
sti
inc
ja
or
cmpb
fwait
sbb
adc
lock
cmp
pop
lods
nop
push
scas
or
and
repnz
mov
lret
popa
xor
aam
xchg
add
jmp
cmp
into
outsb
mov
inc
lock
rcll
cltd
es
leave
cmp
jno
add
stc
xchg
aas
mov
loope
out
fmulp
mov
mov
daa
lcall
pop
mov
bound
ja
add
incl
xchg
push
push
mov
bound
mov
xor
adc
lds
jb
scas
in
arpl
and
xchg
pop
mov
jmp
xchg
fs
int
mov
adc
mov
cmpsb
cmp
sbb
clc
cmpsl
mov
adc
sbb
stos
outsl
hlt
fmull
xor
out
or
in
pop
in
imul
mov
cmp
mov
inc
incl
mov
or
mov
mov
mov
out
loope
test
stc
jae
push
adc
and
dec
jl
xor
or
sarb
cmp
inc
xor
mov
and
or
pop
inc
adc
jnp
adc
pop
sub
and
and
lds
lods
jae
dec
sbb
negl
xor
jge
push
sbb
sub
test
push
imul
and
fisttpl
ljmp
dec
mov
cltd
sub
out
dec
out
outsl
push
jb
xor
jnp
and
inc
and
mov
add
adc
stos
je
sbb
push
xchg
stos
pop
cmp
jmp
xchg
xchg
adc
stos
sbb
mov
or
sahf
addr16
or
mov
push
jno
test
je
out
loope
xlat
lea
push
mov
sarl
and
shrl
cmp
xor
push
lds
sahf
arpl
xchg
iret
mov
mov
inc
push
push
sbb
adc
mov
rclb
in
xchg
cmc
cmp
or
pop
mov
mov
jecxz
fsubs
adc
mov
and
push
pop
ja
push
ja
out
lods
fildll
adc
mov
fisubrl
out
sarl
lret
mov
outsb
mov
in
pop
in
fs
rcr
push
clc
push
and
adc
sbb
insb
push
jge
cltd
xor
push
xor
mov
dec
lods
mov
stos
sub
xchg
int3
jnp
adc
cltd
jo
pop
mov
sahf
and
inc
push
mov
insl
pop
aas
and
mov
out
sub
pop
push
insb
divl
sub
add
popa
lret
or
mov
imul
rorb
scas
das
jmp
mov
test
jns
pushf
sbb
out
push
divb
sub
es
push
mov
cmc
outsb
pop
fsin
out
fimull
inc
lods
outsb
stos
aas
fcoms
mov
imul
int
mov
mov
push
pop
pop
loope
sub
pop
add
mov
fldl
inc
loop
jnp
inc
jne
push
push
mov
repz
sbb
scas
xor
sbb
sub
pop
jp
inc
fxch
add
fldt
fwait
imulb
mov
jl
jl
ja
and
jne
inc
std
dec
cld
pusha
push
cwtl
jmp
es
mov
rol
sub
sub
pop
mov
pushf
xchg
jnp
je
sahf
mov
sbb
fsubr
inc
jle
adc
sub
pop
mov
or
ret
xchg
push
add
adc
out
jge
mov
mov
jle
xor
push
js
outsl
aam
test
call
pop
pop
xlat
xchg
mov
mov
clc
sbb
mov
xor
xchg
fstpt
lea
stos
add
shrl
hlt
xchg
jnp
arpl
stos
push
adc
mov
xchg
scas
cmp
fstl
lock
sbb
adc
iret
xor
mov
ljmp
mov
outsl
adcb
pop
xchg
jbe
icebp
cmp
jle
or
mov
mov
mov
dec
pop
roll
xor
sahf
pslld
push
jnp
jb
loope
xor
and
pop
rcll
xchg
aaa
sub
rol
mov
loopne
aas
mov
sbb
jb
adc
and
faddl
je
dec
stos
dec
push
add
inc
xchg
movsb
and
sbb
test
lcall
sbb
inc
add
jg
mov
scas
imul
out
pop
adc
lea
std
adc
mov
fsincos
out
lods
mov
bound
rclb
push
lret
xchg
lods
gs
sti
lods
sbb
inc
jbe
sub
mov
inc
dec
cmp
pop
pop
mov
test
adc
or
sbb
mov
add
dec
repz
cmpl
mov
xchg
fcompl
push
and
push
stos
xchg
pop
std
xor
xor
fs
daa
movsb
inc
popa
push
popf
add
clc
fcomps
aam
xchg
cld
sar
icebp
repz
subl
dec
rcll
lret
adc
mov
dec
mov
xchg
xchg
popa
scas
sub
leave
rcl
inc
and
icebp
lret
mov
test
xor
ror
jb
pop
mov
repnz
data16
push
inc
pop
js
push
jae
out
pop
mov
xor
or
cli
ja
xor
inc
jne
sub
out
xor
orb
xor
out
inc
shlb
mov
ss
adc
cltd
movsb
bound
xor
lcall
cmp
mov
rclb
dec
and
out
sti
adc
dec
sub
test
sbb
arpl
add
mov
mov
jo
scas
xor
stos
aas
orl
mov
jecxz
pop
mov
pop
ret
cmp
jle
fnstenv
in
ja,pn
lret
jle
mov
jge
mov
and
psraw
gs
and
andl
pop
dec
fisubs
cmp
mov
push
aad
cmp
dec
daa
jo
sbb
sbb
jne
dec
fs
pop
xor
dec
lcall
imul
fs
movsl
ret
adc
cmc
xchg
lods
jbe
xchg
ss
mov
testl
or
loop
xchg
xor
xor
aam
loope
pop
sbb
cmp
dec
fs
test
pop
sub
jmp
shr
adc
sbb
xchg
cmp
int3
sahf
add
inc
scas
mov
aas
mov
sbb
lods
lar
adc
mov
dec
push
cmp
jb
daa
xlat
outsl
lods
mov
fildll
xor
xor
movsb
jne
mov
jg
add
jle
inc
adc
lret
fisttpll
sub
ret
aas
leave
repz
sbb
movsl
jnp
scas
jne
xchg
ds
adc
mov
subb
xchg
mov
fisubrs
insl
and
iret
outsb
sbb
sub
dec
push
cmp
addr16
mov
jecxz
fstpl
movsb
insb
and
fcoml
lahf
pop
push
mov
bound
sti
xor
iret
lret
and
pop
divb
shll
jns
iret
stos
ficompl
pop
lock
cmp
or
test
addr16
xor
pop
mov
xor
lock
and
hlt
mov
dec
or
lods
mov
std
sbb
push
mov
aad
mov
insb
icebp
pop
push
std
out
mov
jne
jb
xor
pop
or
call
mov
mov
push
negl
adc
aaa
mov
lock
shrl
adc
clc
xchg
add
inc
cmpsb
in
pop
into
dec
mov
aam
dec
fidivrl
scas
mov
pop
jp
stc
mulb
test
in
mov
aam
mov
mov
out
ds
sbb
ret
sub
movsl
jmp
jne
adc
ret
jge
mov
add
ret
mov
test
mov
insb
pop
xchg
sub
mov
ret
push
jne
inc
jbe
loopne
test
std
sti
mov
rcrl
add
adc
push
push
loop
insl
js
pop
ds
call
cmc
xor
add
and
daa
gs
test
or
mov
mov
leave
js
cld
pop
arpl
push
jp
enter
icebp
icebp
sti
mov
dec
xchg
fidivs
repnz
mov
sbb
mov
jge
pop
sub
hlt
push
scas
inc
call
andb
outsb
push
fsts
add
call
test
stc
inc
mov
loop
jae
insb
push
fs
mov
cmp
sbb
or
push
xchg
in
outsb
or
cmc
mov
fisubrl
sub
sbb
mull
mov
movsb
aam
add
pop
push
enter
fbld
and
lahf
push
sbb
mov
pop
nop
addb
ficoms
cmp
aad
clc
push
fwait
xor
test
iret
mov
xor
mov
inc
mov
test
into
sbb
out
adc
push
mov
jnp
test
pop
addr16
cmp
mov
arpl
int3
lods
xor
inc
push
loop
orl
push
or
repnz
sbb
int
fs
sbb
scas
mov
icebp
in
fdivrl
and
lock
cld
lods
cmp
pminub
divl
aas
sub
lcall
jae
sbbl
nop
and
mov
xlat
dec
rcll
mov
pusha
and
jne
cmpb
jns
aad
hlt
sub
adcl
cmpsl
cli
mov
push
pop
sti
push
jo
pop
mov
push
jo
and
xor
lret
aaa
dec
mov
mov
push
test
push
stc
pushf
mov
jmp
xchg
mov
loopne
or
xor
aas
bound
mov
arpl
adc
loop
sbb
cmp
cmp
test
popa
or
icebp
or
nop
dec
das
xor
icebp
push
jnp
cld
divl
mov
jns
dec
lods
mov
fmulp
fcompl
pop
pop
hlt
dec
cs
pop
negb
push
xchg
jb
in
pushf
push
mov
or
loopne
movsl
scas
es
int
scas
sbb
mov
add
and
movsl
push
and
cmp
repnz
aaa
sbb
adc
cmc
inc
or
mov
test
mov
mov
aad
sysenter
es
mov
scas
bound
cmpsb
or
jnp
popf
in
fstpt
pop
leave
sbb
dec
sub
addr16
cmp
cltd
inc
xchg
sbb
into
outsl
leave
ficoms
adc
fidivs
or
lea
jl
out
adc
fisubrl
jp
jb
inc
fnstcw
jbe
ds
xor
or
stos
ror
shrb
xlat
in
in
cld
cmp
mov
jne
sub
push
push
imul
mov
fbstp
inc
xor
mov
mov
cmp
jne
fstpl
ds
loopne
dec
test
cli
cmp
add
jmp
das
je
sub
pop
nop
popa
ss
test
loopne
cwtl
sarl
add
pop
cltd
add
adc
and
dec
jp
pusha
clc
loopne
popf
popf
test
inc
mov
push
nop
scas
clc
fs
and
and
mov
div
mov
movsb
test
xchg
adc
fistps
ja
sbb
jns
sbb
jnp
push
mov
sbb
imul
pop
jae
adc
fsubrs
jne
icebp
inc
inc
jmp
data16
sarl
mov
fdivl
jmp
gs
scas
aad
adc
scas
push
dec
aaa
scas
cmpsb
popw
inc
jle
or
outsl
inc
fisttpl
cmp
jmp
push
faddl
ljmp
aad
imul
add
inc
mov
mov
imulb
adcb
jge
fidivs
pushf
mov
stc
lods
dec
ja
out
leave
insb
adc
xchg
or
popf
mov
mov
negl
mov
lea
or
dec
cwtl
push
scas
jg
fidivs
push
push
mov
adc
inc
mov
cltd
mov
popa
push
mov
sub
lock
mov
jo
daa
sbb
dec
mov
stos
xor
push
cli
push
pop
push
adc
and
ja
cld
cmp
mov
cmpsl
ret
sarb
xorl
pop
push
jbe
stos
sahf
jge
sbb
push
jmp
and
icebp
or
and
cmp
inc
sub
mov
cmp
sbb
sub
mov
call
pop
pushf
pop
call
ret
sbb
icebp
lcall
mov
mov
mov
dec
sub
mov
inc
out
loope
int3
cwtl
sub
xor
xchg
jg
mov
gs
push
stos
adc
xchg
sub
loopne
cltd
xchg
shll
fs
xor
push
stc
sub
add
stos
lret
and
je
shlb
dec
fs
jns
lock
addb
mov
mov
aad
int
out
sahf
cli
and
or
sub
loope
push
fisttpll
mov
push
cld
roll
nop
sub
adc
test
loope
push
cmp
jbe
add
jo
or
fisubrs
mov
add
mov
ja
xchg
sub
sub
les
sub
shlb
pusha
or
push
mov
test
lcall
jns
jo
adc
add
popf
xchg
hlt
dec
jg
mov
aad
hlt
push
not
sub
mov
push
add
out
lods
cmpsl
push
in
sub
pushf
fildl
out
add
mov
push
outsl
clc
mov
sub
cmp
mov
mov
mov
sahf
xchg
push
pop
add
hlt
js
inc
and
mov
movd
mov
lods
shrl
loop
rcll
or
mov
lea
mov
adc
mov
mov
lcall
je
popf
scas
mov
add
pusha
pop
mov
inc
xor
cmp
pop
lds
stos
sub
in
inc
push
popf
inc
aaa
inc
add
ljmp
add
xor
mov
mov
sahf
and
fidivl
jg
stos
inc
aad
pop
push
dec
dec
jmp
lds
lea
mov
pop
dec
push
dec
sarb
sub
stos
sbb
cmp
scas
fisttps
in
xchg
dec
xor
icebp
mov
cld
push
jecxz
jge
sti
pop
xchg
fildll
test
mov
ja
lds
lret
je
je
cs
cli
popf
aam
ss
mov
test
push
sub
fildll
test
dec
lods
rorl
das
cmp
adc
enter
arpl
inc
cmp
pop
sbb
mov
mov
mov
sahf
js
sti
mov
cmpsl
inc
ficomps
fistpll
push
leave
outsl
mov
sbb
into
enter
mov
sbb
imul
mov
jge
xchg
jg
test
xorl
xchg
ds
mov
cmp
cmp
mov
test
dec
cmp
clc
cmp
dec
push
rorl
mov
pop
jae
push
mov
mov
pop
mov
push
cmp
in
mov
inc
inc
cmp
bound
in
leave
aas
sbb
pushf
test
adc
les
pop
pushf
aad
test
in
inc
lret
jmp
ss
aam
gs
mov
call
mov
fcmovnu
popa
sub
xor
sub
clc
mov
test
jp
fnstcw
mov
movl
xchg
xchg
jecxz
dec
sbb
mov
ret
aad
sbb
sub
lods
cltd
dec
test
into
cltd
push
pop
jg
sub
adc
stos
icebp
sbb
or
divb
arpl
daa
xchg
xchg
mov
repz
or
movsl
mov
test
push
or
fstl
mov
lds
jno
mov
pushf
mov
imul
xor
es
push
in
aaa
fildl
int3
adc
insb
insl
xchg
cmp
jb
inc
fcompp
sbb
or
jo
fdivs
sub
cmp
flds
data16
adc
pusha
xor
cmp
mov
push
push
dec
js
dec
fdivrl
ds
xchg
ja
es
push
out
xor
xchg
cmc
fbld
lret
fimuls
pop
add
in
dec
out
cmp
jl
int
in
and
in
aad
loopne
mov
inc
lcall
mov
dec
dec
cmp
sbb
jmp
stos
push
int
push
cmp
cmp
mov
adc
lahf
test
or
aam
dec
out
call
jg
jg
mov
enter
sub
out
ljmp
xchg
fsubr
sahf
loope
add
or
push
fimuls
fsts
jmp
inc
or
xor
fcoml
pusha
lret
ror
mov
mov
mov
test
add
jmp
ljmp
mov
cltd
xlat
inc
hlt
cmp
or
inc
ret
sahf
sub
sub
mov
xchg
push
out
and
or
lods
into
shr
lret
xchg
fdivp
nop
sbb
lret
enter
aad
lea
jb
xor
scas
jne
into
xor
mov
inc
jns
sbb
cmc
pushf
fidivs
call
push
adc
mov
jne
test
adc
xorb
ret
cltd
sbb
or
jnp
and
notb
cs
adc
sbb
jne
sbb
mov
sarl
and
rcrl
dec
xor
movsb
das
mov
adc
push
mov
xchg
test
mov
push
popf
call
xor
and
mov
xchg
xlat
cmpb
fcomps
aas
adc
xor
in
aas
sbb
dec
adc
inc
shrb
ds
aam
loop
pop
loop
pop
fcmovne
inc
and
cmp
xor
aaa
jo
jle
ret
jnp
fwait
dec
inc
inc
push
shrl
push
cli
imul
sbb
bound
imul
add
std
add
and
fidivl
pusha
daa
in
sbb
test
xchg
jl
outsb
pop
lods
cmp
add
dec
xchg
adc
clc
hlt
adc
jl
cmp
push
xor
ja
mov
leave
jno
xchg
jmp
stos
loope
pop
sbb
xchg
ret
xchg
jge
jnp
dec
sbb
mov
dec
fstpl
push
test
cmpsl
mov
mov
test
cmpb
std
xor
in
mov
nop
jne
js
hlt
and
push
mov
cmp
jmp
mov
enter
mov
mov
lock
mov
mov
mov
pop
out
pop
push
ljmp
add
addr16
sbb
scas
xchg
frstor
adc
xchg
lcall
daa
inc
cld
leave
cmp
scas
test
imul
lods
inc
lret
add
sub
lods
rcrb
pop
mov
dec
in
aad
sbb
push
push
push
ja
hlt
jp
push
es
fneni(8087
rcrl
frstor
out
dec
ret
mov
ffree
and
pusha
lds
test
or
push
je
mov
in
jp
sub
cmp
ret
testl
inc
je
outsb
mov
leave
cmp
pop
mov
imul
pop
xchg
rolb
dec
sarl
sub
or
repnz
push
or
mov
sbb
repnz
in
mov
fs
lret
in
out
sub
stos
sbb
jmp
xchg
ljmp
add
lock
xchg
in
dec
push
jbe
adc
ficoms
mul
mov
mov
add
sar
push
sar
add
dec
cmp
or
int
or
int
repnz
fsub
pop
stos
mov
xchg
cmpsl
in
inc
sbb
push
xchg
stc
lds
jl
mov
aam
sub
sub
js
xorl
mov
or
xor
adc
lea
out
mov
movsb
sbbl
adc
nop
mov
lea
arpl
push
dec
inc
es
and
rcll
jae
jno
sub
adc
add
mov
fbstp
mov
dec
sbb
das
lea
xchg
icebp
mov
push
lret
outsb
popf
cmp
jnp
xlat
add
stos
xacquire
gs
mov
fcompl
out
jno
loope
into
dec
jecxz
lock
ret
lods
loop
aas
inc
rcr
mov
push
inc
pop
jle
rorl
cli
outsl
or
insb
jbe
pop
cmp
inc
jl
jb
pop
add
and
adc
add
scas
xchg
mov
ljmp
les
jno
cmp
incb
scas
mov
xchg
ret
adc
cmp
scas
cmp
out
xor
out
test
lock
mov
pop
iret
jae
inc
mov
jl
dec
daa
fsubrl
or
inc
push
inc
addr16
lea
stos
ds
mov
push
or
mov
imul
and
sbb
dec
dec
cmc
inc
pusha
mov
jge
orb
lret
jp
pop
movsl
and
sub
pop
mov
dec
sbb
fnstenv
leave
aaa
inc
or
mov
lods
sbb
lahf
fisubrl
xor
lods
ds
pop
jg
xor
mov
lcall
dec
jae
sub
inc
std
inc
fisubrs
jbe
sbb
sbb
or
xchg
sti
xchg
in
push
scas
inc
pusha
popf
repnz
addr16
xchg
lcall
cmpsb
pop
add
jnp
mov
outsl
sti
hlt
setb
inc
or
pusha
jbe
push
cmc
add
cmc
subl
cmpsl
mov
jnp
add
xchg
sbb
adc
cmp
mov
mov
fsubl
inc
orl
mov
mov
out
fldcw
jge
lods
push
inc
xor
flds
pop
cmp
jns
hlt
dec
sti
inc
mov
xchg
mov
in
shld
cmp
stos
daa
rcrb
and
dec
int3
push
test
adc
inc
aas
pop
sbb
mov
in
push
and
cmpl
inc
mov
sbb
cli
inc
or
mov
inc
push
push
cmp
add
mov
lock
insl
popf
test
and
push
push
cli
shlb
xor
dec
and
and
cltd
jns
shr
jnp
push
inc
jg
pop
repz
adc
cld
test
cmpl
aas
fstl
jbe
mov
loope
xchg
adc
lods
mov
xor
cmp
rorb
aas
cmp
stos
setl
mov
mov
or
jb
scas
leave
mov
add
lods
mov
stos
mov
aas
mov
sub
test
pop
cli
lret
or
scas
jl,pn
push
daa
dec
sahf
in
aaa
dec
push
and
inc
andps
ret
imul
into
in
das
jne
enter
dec
sub
xchg
loope
push
adc
pop
inc
mov
int
les
mov
pop
add
enter
popf
adc
iret
bound
pop
jge
sbb
sub
lock
push
jns
add
aas
and
dec
pop
daa
rcl
fmul
mulb
xor
rcll
call
fldenv
js
sbb
and
push
arpl
adc
sub
pop
aas
test
sub
in
mov
jno
pop
adcl
adc
xchg
movsl
sub
daa
jmp
pop
xor
aas
ret
lods
add
daa
mov
inc
pop
cmp
sub
dec
push
dec
insl
jae
add
scas
aad
jecxz
jl
shl
xchg
stc
pop
fsubs
dec
cmp
stos
insl
lock
stos
fnstsw
add
rorb
fcmovne
dec
outsb
notb
js
es
xlat
or
cmp
imul
cs
lcall
not
dec
jne
and
cmp
arpl
cmp
adc
jl
aad
pop
cmpsl
std
inc
in
push
mov
shlb
decl
pop
xchg
fwait
mov
jno
mov
insb
xchg
xchg
inc
loop
xchg
je
rorl
test
flds
clc
clc
sub
bound
xchg
add
in
fnstsw
sbb
fiadds
adc
es
cmc
aad
pop
loopne
cmp
icebp
pop
inc
mov
xchg
adc
inc
xor
in
scas
lods
push
mov
mov
xor
fdivl
xchg
rcr
rcl
in
roll
jg
movsb
pop
testl
daa
sub
and
fmull
ret
rcll
popa
fidivrl
push
mov
rorl
movsl
jecxz
or
ss
xorb
sarl
or
aam
jbe
xor
cmpsb
mov
insb
in
repz
or
rcrl
mov
cli
lock
mov
inc
dec
inc
mov
ja
fmul
cli
xor
das
lock
mov
add
dec
add
repz
pop
dec
cwtl
insb
fwait
xor
out
sahf
add
push
in
loop
sbb
xchg
add
aas
add
arpl
jae
enter
movsb
mov
xchg
movsl
insl
sub
aas
icebp
push
sub
jg
jno
sbb
sbb
outsl
lcall
xchg
cmp
xchg
out
js
imul
lock
jo
shll
insl
mov
adc
xchg
jl
ljmp
js
xor
mov
adc
rorb
nop
scas
cltd
xor
xchg
add
or
icebp
pop
mov
xlat
jno
clc
cmp
or
jecxz
rcrb
repz
xorl
dec
je
fcoms
aaa
mov
ss
shlb
or
jmp
mov
cwtl
and
xor
cld
sub
lea
insb
pop
xor
mov
fildl
mov
pop
push
sub
mov
fdivr
mov
fisubrs
mov
int
rcl
xor
pop
xchg
ficompl
push
add
pop
mov
mov
jl
push
std
ret
insl
sbb
adc
dec
mov
scas
sti
push
rcll
pop
jne
dec
nop
jno
sbb
icebp
insb
aad
lret
mov
pop
mov
mov
out
mov
icebp
hlt
mov
pop
rorb
rclb
cmp
dec
inc
mov
test
lock
orl
inc
mov
cmpsl
sahf
xchg
outsb
inc
sub
sub
push
loop
adc
or
jl
push
jmp
push
jg
imul
mov
lock
imul
negl
jo
cld
inc
xchg
cli
inc
jle
sub
sbb
xchg
sub
push
adc
inc
pop
jnp
in
jns
sbb
cmp
fadd
pushl
xchg
fistpl
pop
and
lret
arpl
pop
movsb
sbb
ds
mov
adc
jge
sti
or
dec
stos
pop
pusha
and
inc
scas
fimuls
or
into
cmp
iret
mov
pop
dec
jmp
cmp
shll
stos
shlb
push
push
xchg
dec
mov
in
lret
xor
push
lea
mov
mov
mov
clc
sub
push
cltd
rclb
fdivrs
mov
sbb
xchg
push
adc
pop
inc
test
cwtl
jecxz
adc
aam
jae
dec
aas
stos
mov
repz
push
or
stos
pushl
cmp
xchg
inc
xlat
dec
mov
mov
rcrb
push
insl
mov
ret
lret
and
out
jge
movsb
or
cltd
dec
stc
leave
xchg
into
pop
bound
push
in
cmpsl
push
das
mov
pop
test
fnstsw
fwait
popf
pop
fmulp
mov
fwait
mov
xor
fisubl
push
push
testb
rorl
cmpsb
inc
mov
xchg
mov
fucom
mov
cmpsb
loopne
jb
clc
sbb
xor
inc
pop
pop
xlat
cld
cld
add
mov
or
lea
movsb
push
xor
mov
sbb
add
notb
movsb
aad
xor
jmp
fsubs
lds
jg
sbb
into
xchg
or
add
add
mov
xchg
popa
push
adcl
dec
aaa
ja
and
sub
insb
sarl
out
shr
mov
aaa
xchg
mov
mov
mov
jbe
int3
mov
jecxz
mov
rorw
sub
dec
mov
ljmp
mov
jge
jb
push
pop
in
in
int
xchg
lods
mov
in
js
sub
lock
dec
cmp
pop
sbbb
inc
push
pop
les
fucomi
mov
nop
outsl
test
jp
sub
sub
mov
add
push
shrl
add
loope
sbb
lahf
adc
shr
xor
in
addr16
or
or
int
ror
push
dec
pop
xor
mov
mov
fldenv
fsubrl
xor
mov
mov
add
push
inc
jg
icebp
pop
xchg
and
lret
lea
les
leave
mov
lods
arpl
adc
xchg
rolb
stos
scas
push
pop
ss
push
or
dec
fdivl
inc
pop
sbb
into
jnp
push
lds
insl
cwtl
sbb
imul
push
fisttpll
ja
push
add
ja
dec
cli
jne
insb
pop
and
dec
add
mov
adc
push
inc
leave
icebp
lcall
scas
push
push
lcall
or
xor
dec
adc
cmp
loop
lea
out
imul
sbb
pop
inc
test
and
cmp
or
xor
mov
push
sahf
pop
add
jmp
adc
inc
movsl
ret
xchg
mov
add
push
lea
add
push
jb
mov
shlw
nop
jnp
jne
xor
cmc
das
call
adc
sub
mov
sbb
adc
das
inc
shl
mov
das
jne
icebp
xchg
or
outsb
xor
stos
leave
es
xchg
lods
sbb
sar
aaa
stos
je
xrelease
shr
fstps
mov
xor
jne
stos
sbb
int3
or
es
jge
daa
pop
pop
pop
insb
punpckhdq
jo
aaa
pop
ljmp
push
addb
mov
shll
adc
sbb
call
fs
inc
mov
stos
mov
stc
jno
hlt
push
inc
nop
fbld
stos
xchg
inc
inc
in
dec
dec
outsb
pusha
outsb
mov
int
lds
jo
inc
sub
testl
scas
pop
fwait
dec
popa
add
and
pop
out
mov
test
jne
mov
xchg
dec
push
pop
outsl
pop
and
test
or
test
sub
sbb
inc
lock
and
mov
push
leave
adc
repz
arpl
test
out
repnz
cmp
fdivl
jbe
or
mov
mov
pop
xor
cli
dec
jp
jge
and
out
idivb
dec
push
clc
cmp
sub
push
call
push
outsb
repnz
in
mov
je
cld
neg
jp
jle
enter
cmp
daa
testl
inc
jge
out
mov
xchg
xchg
std
inc
inc
repnz
std
or
dec
stc
mov
adc
sub
sbb
movsl
and
mov
ljmp
and
jg
or
dec
inc
jns
jge
jg
enter
rcr
rcrb
jb
or
mov
cltd
aas
and
aaa
pop
fldenv
mov
dec
push
daa
push
pop
jecxz
imul
xor
dec
cmp
fwait
jle
out
mov
sbb
pop
cmpsl
or
xchg
pushf
rorl
ja
loop
inc
or
push
cwtl
mov
fs
out
dec
stc
xchg
dec
popf
fwait
sbb
cld
rorb
jno
scas
mov
loopne
mov
inc
je
aam
mov
loope
test
mov
shll
xor
std
daa
mov
js
push
scas
jecxz
inc
shrl
push
bound
jmp
enter
jmp
les
cwtl
and
xchg
xchg
cwtl
and
jne
mov
dec
add
repz
jne
mov
sbbb
fcoms
add
push
or
xchg
sahf
dec
out
fwait
pop
cli
add
dec
jno
out
push
sbbb
mov
lods
mov
push
inc
push
xchg
mov
pop
push
cmp
faddl
movsb
fldl
mov
shrb
xchg
pop
lea
out
push
icebp
pop
scas
cmp
mov
mov
pop
inc
mov
mov
insl
add
jnp
mov
repnz
std
mov
xchg
xchg
mov
outsl
shll
cli
pmuludq
cmpsb
pop
xor
stc
cwtl
add
in
sub
jl
push
addl
mov
jecxz
clc
ror
xchg
js
push
ficoml
cli
push
or
lods
dec
cltd
cmpsb
jno
sbb
into
es
scas
mov
icebp
sbb
shrb
pop
pop
xlat
add
pop
sub
xchg
sub
mov
sbb
inc
stos
ja
pop
push
cmp
dec
push
es
inc
xor
and
push
fwait
sub
nop
jg
add
sbb
in
lock
mov
cmp
flds
and
xor
ret
jmp
mov
mov
test
pop
dec
cld
rcrb
mov
add
sbb
shrb
pop
add
in
sbb
cmp
divb
and
push
push
pop
pop
int
icebp
inc
cmp
loopne
loopne
sub
int3
fcmovnu
mov
stos
ljmp
mov
dec
lahf
push
mov
je
mov
lahf
xchg
xor
mov
cld
xor
cmp
dec
stos
fst
stos
movsb
mov
ficomps
insb
cmp
add
test
xor
inc
xchg
mov
pop
mov
mov
cmp
sbb
add
add
xor
lea
xor
push
sub
cmc
adc
mov
scas
push
mov
fisttpll
adc
or
jb
xlat
add
and
imul
xchg
aas
loop
insl
dec
test
cmp
cmp
je
xor
ds
nop
lods
into
cmpb
lcall
fidivrl
fwait
add
stos
rorb
enter
or
mov
sti
setl
mov
mov
push
push
pop
mov
pop
test
addb
push
fistl
mov
pusha
lret
sub
or
stos
mov
mov
sti
je
dec
xchg
daa
mov
add
mov
orl
xchg
lea
xchg
movsl
popf
dec
pop
nop
mov
into
and
test
sbb
mov
sub
sbb
lods
subb
push
push
dec
or
sub
cs
movsb
inc
sbb
xlat
pop
inc
push
es
pop
or
sub
inc
ds
inc
pop
mov
int
flds
out
shl
stc
jge
jb
lods
xchg
incb
push
int
pop
fdivl
cwtl
jecxz
inc
dec
inc
ss
adc
add
stos
mov
dec
cltd
sti
mov
push
ds
mov
fbld
push
mov
push
jae
xchg
sbb
movl
jae
loopne
dec
outsb
insl
les
int3
dec
jns
popa
inc
sbb
mov
mov
insb
mov
sahf
mov
push
rolb
cmp
or
or
hlt
sbb
jns
adc
xor
shlb
and
stos
sbb
pop
push
rolb
scas
les
das
push
in
push
pop
stos
outsl
negb
test
test
jbe
clc
or
stos
test
mov
aad
movb
sub
aam
loopne
fadds
xor
movsl
push
jae
andb
xor
jbe
pop
inc
adc
daa
and
in
lcall
adc
lods
sub
cmpsb
sbb
leave
sub
xchg
pop
call
dec
fisubrl
nop
mov
inc
push
jmp
jno
xor
dec
aam
stc
outsb
adc
cmp
mov
cs
xor
bound
into
in
mov
push
lock
rcll
out
es
lret
mov
push
ja
jne
and
inc
dec
leave
cmp
test
daa
or
dec
andb
pop
sbb
es
fcoml
pop
or
movsl
stc
ljmp
cltd
or
je
or
leave
adc
lahf
arpl
jecxz
mov
fcomps
mov
cmp
pop
sub
lock
inc
ret
fdivrp
pop
in
in
pop
jns
dec
iret
lock
lcall
rorb
and
push
out
das
add
jne
out
shlb
pop
add
jl,pn
scas
repnz
mov
fildll
pop
movsl
add
mov
ds
mov
xchg
lcall
dec
test
outsb
adc
fildll
jns
fstps
out
repnz
ss
jecxz
stos
inc
shlb
fs
mov
push
fcoms
ret
scas
bound
pop
cmc
sub
xorl
std
int3
stc
dec
cmpsb
inc
sub
and
sub
sub
pop
les
and
loopne
gs
add
cmp
fs
mov
aad
inc
repnz
ja
adc
mull
lret
imul
pop
cli
mov
xchg
repz
push
xor
cmpsl
jle
mov
sahf
sub
rolb
sub
adc
enter
stos
rol
shrb
mov
pop
ds
fsin
push
out
push
or
mov
mov
out
pop
adc
or
push
pop
push
add
mov
out
pop
cmp
or
lret
imul
imul
inc
sarl
mov
stc
aas
sub
xchg
mov
push
nop
mov
sub
daa
mov
and
rcpps
mov
mov
mov
cli
addr16
aad
sub
lret
mov
hlt
and
pop
rolb
and
in
aas
jg
cmpsl
fimuls
lcall
mov
and
sub
cmpsb
lret
out
out
in
push
sub
lcall
mov
sahf
sti
dec
push
xor
push
aam
insb
dec
inc
pushf
push
in
sti
mov
js
mov
sti
repz
mov
out
ja
push
mov
add
ret
adc
mov
add
popa
js
jns
fisttpll
loopne
mov
lcall
sub
inc
ds
sarb
xor
mov
mov
jp
jle
and
push
lret
ficompl
hlt
inc
inc
pop
jecxz
mov
or
pop
fisttpl
clc
aaa
cmpsb
das
or
mov
mov
xlat
add
cld
test
jb
cli
mov
clc
or
inc
lock
mov
ror
mov
jp
in
hlt
inc
insl
ficoml
outsl
addb
and
dec
dec
stos
cli
inc
adc
adc
into
adc
mov
cltd
gs
stos
in
les
negl
sbb
pop
lahf
adc
sub
inc
mov
mov
test
xchg
add
ret
push
mov
gs
and
fstpt
adc
dec
enter
cld
into
sub
jle
cmp
sti
mov
jmp
and
shrb
stos
rorl
push
mov
inc
xchg
mov
jge
inc
and
pop
mov
pop
pop
iret
mov
mov
pushf
add
stos
jmp
repz
or
les
repnz
mov
jl
std
or
jp
out
loopne
int
nop
mov
std
pop
lret
push
xor
je
and
mov
inc
std
xchg
stos
outsl
push
popa
out
scas
fdiv
loopne
test
mov
xlat
call
cmp
idivb
lock
or
or
and
push
cwtl
inc
adc
mov
adc
add
jge
adc
push
sbb
dec
dec
out
sahf
loope
adc
xor
sti
bound
jbe
aad
in
stos
ljmp
mov
mov
or
xchg
pop
mov
mov
adc
rorl
stos
movsb
xor
add
shll
and
lods
push
std
mov
aas
xchg
sbb
sbb
call
or
iret
iret
mov
ret
mov
popf
jl
lret
jo
ds
inc
je
cli
data16
and
aad
mov
inc
cmp
ret
xchg
pop
nop
or
mov
lea
hlt
lahf
insl
push
xchg
stos
and
push
out
lahf
sub
push
mov
cmpsl
call
popf
pop
sub
adc
repnz
add
pushf
es
and
inc
shl
mov
frstor
int
adc
js
sbb
rcrb
ret
adc
lret
and
inc
dec
sbb
mov
jecxz
fistps
jle
in
enter
dec
sarb
cmp
mov
or
icebp
dec
mov
data16
inc
mov
mov
sbb
mov
mov
rcll
stos
les
loopw
fimull
not
insb
out
stos
jnp
bound
fisttps
and
pusha
in
cmc
fs
mov
xchg
adc
rclb
mov
mov
aam
lods
mov
out
icebp
ficoml
cmp
ret
cmp
loope
lods
sub
inc
jmp
and
in
stc
inc
pusha
jge
push
stc
mov
pop
pop
out
sub
xchg
push
repnz
dec
roll
popa
out
fnsave
push
mov
xor
ficompl
mov
aad
jecxz
fs
cmp
addr16
addl
inc
mov
xchg
add
cmc
int3
ljmp
sarb
xchg
add
testb
pushf
outsb
je
or
pop
int
ret
push
mov
ja
out
aad
push
cltd
sbb
jbe
decl
into
fbld
fs
sbb
adc
js
mov
fstl
call
pop
fwait
push
push
dec
mov
fildl
in
xchg
add
pop
pushl
inc
into
xchg
mov
mov
or
xchg
arpl
sub
pop
pop
inc
int
and
aas
je
mov
mov
cmp
xlat
sahf
loopne
movsb
lea
push
and
movsb
add
sub
push
xchg
push
mov
push
jecxz
scas
pop
xchg
mov
cmc
or
enter
push
hlt
aas
rorb
das
push
call
aam
loopne
out
jne
or
lcall
mov
dec
pop
pop
fadds
or
hlt
test
push
cltd
aam
fwait
ja
xchg
pop
and
out
test
push
aas
int3
or
push
jl
test
inc
notb
xchg
clc
dec
mov
arpl
xchg
iret
inc
dec
bound
mov
add
jl
inc
out
out
pop
jnp,pt
sub
fmulp
cmp
sar
inc
push
dec
xchg
xor
cmc
mov
lds
test
test
int
xchg
stos
enter
inc
dec
mov
jmp
adc
fildl
add
push
xor
mov
xlat
dec
push
sub
outsl
aas
push
jmp
xor
jo
mov
inc
es
cmp
push
push
dec
fisubl
out
shlb
pop
inc
test
dec
ret
sub
dec
addr16
and
mov
xchg
cmc
mov
inc
insb
daa
aaa
jge
inc
cli
and
mov
sub
fisubrs
xlat
jg
insb
sub
sbb
stos
mov
out
pop
xchg
xor
mov
sbb
fpatan
pop
mul
mov
movsl
add
add
or
cmp
lcall
or
xchg
jge
xchg
pop
loop
call
dec
cmp
adc
mov
push
pop
dec
jae
or
mov
push
in
testl
pop
outsb
pusha
or
dec
aam
or
std
pop
dec
clc
jb
mov
pop
pop
push
test
jmp
push
imul
dec
dec
pop
jmp
loop
xchg
jge
pop
jae
pop
lret
cmpl
and
hlt
sub
insb
js
jo
lret
hlt
pushf
out
jne
cmc
inc
and
pop
jnp
jmp
sub
icebp
adc
mov
scas
jnp
sub
sahf
jg
inc
jns
repz
pop
jmp
xchg
mov
and
lods
xchg
pop
pop
pop
push
mov
lea
insb
adc
and
cmp
push
ret
orl
cmp
test
call
sub
adcl
adc
mov
sbb
add
lea
sti
and
stc
add
mov
jb
mov
roll
or
cld
jl
dec
mov
sbb
in
scas
das
cmp
repnz
jbe
inc
cmpsl
lock
jno
std
test
and
or
fsubl
push
cli
and
pop
and
sub
sub
jo
test
or
ret
mov
repnz
bound
mov
adc
fsubl
aad
imull
xchg
aam
popf
imul
les
mov
fdivrl
fisttps
xchg
gs
cmp
movsl
inc
sub
cmpsl
push
mov
and
insl
mov
nop
jge
xor
push
insb
loopne
inc
xchg
jge
lahf
jmp
jecxz
inc
mov
or
popl
inc
pusha
mov
leave
mov
mov
out
add
movsl
jae
jmp
stos
sbb
ss
inc
pop
jo
fisttpll
js
fnstenv
xor
fistps
popf
stos
lock
jge
iret
or
cmp
mov
insl
fadds
lcall
subl
mov
or
aam
push
sbb
xor
arpl
xchg
in
xlat
hlt
dec
or
add
mov
jl
jno
mov
out
dec
fwait
shl
mov
pop
mov
push
and
adc
xchg
inc
xor
call
dec
cmp
sbb
push
movsl
jp
clc
imul
xor
inc
neg
iret
sub
lods
cmp
in
xchg
mov
jnp
fldl2e
int
xor
cmp
jmp
jns
pop
or
bound
jo
lret
xchg
out
aad
mov
pop
lret
subl
ret
cli
sub
aam
mov
pushf
or
frstors
popa
fdivs
leave
mov
aaa
out
inc
sub
pop
lahf
sub
icebp
xlat
xor
lds
sub
dec
mov
pop
sub
nop
dec
dec
inc
sarl
xchg
popf
push
out
and
mov
adc
sbb
xchg
insl
and
push
push
daa
lods
mov
jbe
stc
add
xlat
mov
xor
cld
and
mov
lret
aam
push
fdivs
call
and
fcoms
mov
je
or
pusha
not
das
dec
or
adc
jg
divl
xchg
mov
movl
popa
inc
ds
ret
movsl
cmp
daa
cmpsl
outsl
sbb
xor
popa
popf
dec
je
cmp
loope
clc
ret
loope
xor
sbb
jle
lahf
pop
pop
pop
popf
jae
test
test
or
adc
and
fidivl
movsl
jmp
mov
dec
push
cmp
push
das
mov
push
inc
loopne
data16
in
rorl
mov
f2xm1
ss
xor
mov
aas
test
ja
sti
mov
adc
jp
jge
std
push
dec
xor
push
lods
and
movl
lahf
pop
jp
repz
ret
xlat
mov
sbb
icebp
push
fs
cmpsb
fistps
sub
shll
lret
jle
push
mov
nop
adc
dec
mov
dec
in
cmpsl
adcb
cltd
jle
mov
loopne
dec
inc
roll
push
cmp
loope
out
in
jae
mov
pop
inc
sbb
add
nop
sbb
xchg
push
push
shrb
pop
mov
ds
xor
sbbl
cmp
or
push
inc
adc
jle
loopne
push
push
out
xchg
punpcklbw
fwait
adc
outsb
imul
adc
mov
aas
cmp
lahf
pop
xlat
adc
xchg
mov
pop
jecxz
js
cmc
xor
hlt
test
gs
call
mov
sbb
les
sbb
fs
add
jno
icebp
mov
pop
notl
cmp
mov
adc
jns
push
xor
std
pop
aaa
loopne
push
jle
adc
negb
mov
loop
dec
sbb
or
or
mov
andl
xchg
and
push
inc
or
mov
mov
pop
imul
xchg
sarb
jno
push
inc
sbb
icebp
stos
leave
js
daa
mov
insl
jl
rol
fmulp
and
outsl
dec
sbb
rcll
popa
sbb
mov
in
mov
in
pop
cltd
popa
xchg
mov
adc
out
call
add
hlt
clc
int3
push
xor
jbe
mov
mov
pop
orb
cmc
test
mov
sub
sar
aaa
ds
xchg
mov
jbe
outsl
adc
dec
jp
ss
add
sub
iret
jle
jo
xor
mov
in
dec
push
cld
inc
jbe
xchg
rclb
incb
mov
or
xlat
add
push
dec
jo
push
sti
nop
and
scas
cmpsl
les
fwait
push
dec
in
lock
mov
inc
xchg
in
sarb
cmpsb
icebp
push
test
xor
add
scas
dec
stos
pop
xor
jae
shlb
sti
mov
dec
data16
ss
jb
dec
adc
pushf
xchg
ss
cli
jl
jae
in
lahf
int3
push
out
js
orb
mov
paddq
je
in
cmp
movsl
xor
stc
sub
rol
push
mov
or
dec
stc
sub
out
repnz
cld
in
fdivs
adc
lock
push
cs
cmp
repz
aad
inc
es
mov
mov
mov
mov
mov
sahf
fsts
pusha
fmul
pusha
pinsrw
jl
bound
pop
repnz
xchg
mov
cmp
sub
clc
pop
jo
lret
daa
pop
mov
sub
fildll
loope
mov
into
mov
jmp
mov
jo
ficomps
xchg
jb
sub
repz
mov
sub
cmpsl
mov
popf
je
cs
cmp
out
mov
addl
rorl
call
mov
dec
or
pop
pop
jge
dec
mov
jg
stc
scas
mov
jnp
xor
loope
pop
lea
sbb
mov
jecxz
push
inc
gs
jns
mov
js
sub
sub
mov
mov
jno,pn
testl
fists
xor
outsb
mov
xchg
jle
push
push
inc
mov
and
hlt
inc
jl
js
jp
movsb
adc
pop
int3
jo
push
pop
in
push
scas
jmp
lods
fdivs
mov
mov
jbe
cs
lea
jae
xor
push
pop
push
ficoml
icebp
add
push
cmpsl
mov
call
out
in
ret
adcb
stos
cmp
xlat
cmp
fisubrs
test
add
mov
dec
fnstcw
jge
lea
jecxz
stc
mov
mov
outsb
push
arpl
les
adc
jmp
inc
sbb
inc
test
xor
dec
pop
test
push
adc
gs
ror
fdivrs
mov
push
xchg
les
aam
stos
cmp
je
push
hlt
mov
fimull
add
lahf
or
cmp
out
dec
imul
loop
and
shll
popa
jns
push
fcomip
push
xchg
mov
jo
jo
jnp
ds
bound
lret
mov
movsb
jp
jg
dec
sarl
jno
out
inc
cmp
jo
dec
jno
mov
sbb
mov
jecxz
stos
dec
cltd
mov
cltd
in
fbstp
mov
pop
repz
gs
neg
jnp
fwait
shrl
mov
and
mov
lds
mov
mov
jg
fsts
sub
sub
pop
sbb
loopne
insb
add
int3
xor
push
into
or
lock
add
xchg
js
into
mov
sbb
cltd
cltd
sub
sub
adc
mull
and
insb
pushf
daa
test
stc
data16
fadds
adc
cmp
push
pop
pop
and
jbe
ret
lock
test
push
jns
inc
mov
sub
aad
inc
stos
out
mov
cmp
mov
cltd
push
inc
pop
and
int
mov
aaa
xchg
clc
popf
jp
fcompl
sbb
in
xchg
mov
es
xchg
mov
pop
das
sti
jmp
in
add
jge
and
sahf
scas
lret
outsb
or
daa
pop
lods
pop
imul
in
mov
push
enter
xchg
dec
jns
or
dec
mov
ret
dec
out
js
mov
test
outsl
in
inc
std
mov
jl
aaa
adc
or
mov
int
mov
inc
pop
lahf
jmp
xchg
or
addr16
out
mov
bound
adc
adc
mov
cmc
in
jb
leave
ret
sarl
mov
adc
or
push
ret
outsl
pop
ljmp
adcl
addr16
jae
faddp
adc
movsl
push
in
mov
idivl
or
sub
push
inc
pusha
loop
ss
mov
inc
out
hlt
aam
adc
xchg
loope
jle
adc
mov
paddq
dec
inc
lahf
imul
movsb
adc
sbb
mov
mov
jmp
xor
shlb
lds
stos
imul
aaa
icebp
pop
loop
jbe
in
add
cld
cld
dec
jbe
mov
mov
je
call
addr16
subb
je
xchg
mov
lds
and
fcomi
jg
xchg
out
cmp
fstpl
push
ficoms
xor
ss
imul
leave
mov
push
cmpsl
repz
push
lahf
fdivrl
das
mov
xor
enter
fildll
dec
clc
jb
jnp
mov
aas
aam
inc
sti
dec
out
mov
jne
cld
mov
push
sbb
sti
adc
decl
lods
jl
cmp
test
sarb
ss
xor
xchg
xchg
ds
xor
adc
inc
xlat
inc
push
jnp
or
or
fs
mov
push
lea
int3
jmp
push
aas
sbb
insb
daa
lret
jp
pusha
pop
enter
fcoml
mov
cmp
mov
and
mov
ret
in
xor
arpl
in
enter
popf
in
call
jb
mov
xchg
dec
dec
ficomps
lock
lock
hlt
mov
and
iret
fildll
inc
ljmp
xchg
sbb
mov
loope
jp
into
repnz
fldl
cmp
jb
sub
cwtl
cmpsl
add
push
loope
aam
lods
fcoms
adc
and
dec
inc
out
mov
mov
push
mov
aaa
cli
sbb
fnstsw
lock
enter
sub
mov
xchg
adc
xchg
clc
scas
pop
lea
adc
mov
mov
mul
xor
inc
mov
push
int
in
sarl
dec
into
sahf
decl
loopne
add
xor
jecxz
lods
mov
pop
adc
les
sbb
mov
sub
mov
jecxz
sbb
inc
hlt
aam
mov
addr16
mov
dec
decl
or
jno
fidivl
push
ds
and
cmp
inc
test
jge
ja
rolb
xor
cld
push
iret
cmp
push
jno
arpl
imul
sbb
jl
adc
data16
testl
pop
pushf
sub
push
sub
mov
jne
xchg
xchg
and
mov
mov
insb
sahf
sub
test
xor
cmp
stos
hlt
aas
dec
in
adc
cltd
pusha
and
xchg
jl
bound
stos
lock
je
test
aaa
sub
xor
lds
das
arpl
cld
sub
arpl
dec
jb
push
jl
xor
add
xchg
mov
pop
pop
call
cmp
mov
sahf
popa
stos
sbb
testl
inc
retw
push
int3
pushf
pop
lods
jl
out
jns
cmp
xor
into
ds
cmp
dec
dec
jbe
daa
cmpsl
or
sbb
adc
push
pop
iret
xchg
cmpl
lods
xor
inc
aad
hlt
dec
sbb
xor
xor
aaa
xor
roll
in
push
inc
adc
xor
mov
mov
fcoms
inc
loop
pop
xchg
pop
icebp
inc
mov
test
sub
js
test
jmp
sub
push
jns
cld
imulb
pop
mov
push
popf
add
insb
into
bound
cmovle
mov
inc
jae
add
stc
iret
js
jns
mov
mov
les
dec
xor
mov
cmp
aas
mov
xor
in
dec
aas
adc
popf
out
cwtl
sbb
mov
mov
in
je
sub
or
pop
frstor
popa
jne
cmp
inc
lret
mov
dec
dec
imul
jp
adc
adc
push
and
imul
push
divb
dec
test
adcl
test
inc
or
add
scas
pop
jge
dec
and
lcall
xchg
and
jecxz
adc
in
popf
pop
inc
movsb
inc
xlat
pusha
push
mov
xchg
adc
dec
or
pop
pop
stos
push
push
sarb
adc
add
cmp
popa
cmp
in
push
je
lods
dec
sub
outsb
sbb
lea
out
cwtl
mov
mov
lea
insl
adc
jae
ja
pop
std
cmc
cmpsb
xor
mov
xchg
aam
int3
repz
lods
sub
dec
sbb
inc
cmp
adc
mov
xchg
sbb
or
pop
pushf
jg
int3
xchg
or
dec
pop
or
adc
cmp
or
movb
sahf
mov
or
inc
adc
jb
mov
out
xor
test
inc
aad
inc
loope
xor
scas
and
ret
lret
xor
cmp
sbb
add
jmp
inc
icebp
stc
cmp
mov
dec
xlat
dec
ffree
nop
ja
mov
vshufpd
incl
aam
imul
nop
rcr
mov
dec
push
xchg
fisubl
adc
pushl
shrb
scas
add
add
xor
or
idivl
adc
pop
add
xor
in
add
in
notl
xchg
ret
aaa
xor
mov
lds
sbb
adc
arpl
mov
inc
cltd
out
negb
mov
out
mov
pop
push
mov
dec
xor
insb
and
sbb
cld
imul
into
test
fldcw
pop
mov
sub
sahf
in
cwtl
imull
bound
pushf
lret
ficompl
jl
repz
dec
pop
lret
mov
mov
or
xorl
js
push
loopne
sbb
andl
cld
push
inc
mov
push
mov
in
jbe
test
gs
enter
es
fwait
cmp
pop
mov
cmc
sub
pop
pop
jg
mov
sbb
mov
mov
aam
push
mov
jmp
and
pop
sti
xchg
sub
cltd
aad
out
out
aas
pop
mov
push
adc
loope
mov
xchg
mov
jb
mov
into
aad
jae
push
lock
push
test
adc
lret
sbb
xchg
inc
jnp
sub
xchg
xchg
cli
mov
mov
sub
mov
bound
je
dec
testb
adc
push
xor
js
shlb
xor
mov
jecxz
push
fistps
push
test
push
rcll
stc
push
mov
nopl
mov
dec
iret
ret
out
sbbl
bound
sar
pop
pop
outsb
xchg
pop
loop
pop
in
and
inc
std
push
enter
xlat
clc
or
lea
inc
loope
mov
sbb
fs
adc
rolb
add
jecxz
mov
filds
data16
testl
loop
fidivl
adc
jbe
xchg
fcom
repz
mov
iret
icebp
fs
js
adc
dec
sub
fwait
dec
dec
mov
dec
push
cwtl
pop
sub
leave
sti
sbb
jae
inc
xor
aam
inc
nop
test
sbb
dec
dec
sarb
js
sbb
cmp
xchg
loop
xchg
fstl
out
loop
jne
test
and
insl
xor
inc
out
lods
stc
jne
jo
ss
xchg
loope
inc
cmp
push
les
cld
mov
sbb
xchg
ss
inc
mov
int
mov
push
test
popf
cmp
fucom
scas
sub
ret
test
imul
cmpsb
pop
xlat
cmp
jg
xchg
and
sbb
loop
lahf
push
adc
sub
dec
or
aas
mov
lret
fbld
loope
mov
xchg
xchg
cmp
push
sub
std
mull
repnz
je
sbb
into
js
push
mov
and
mov
movsb
and
add
xor
fidivs
mov
mov
fidivrl
mov
cmpsl
sbb
cmc
and
out
mov
das
insl
lcall
adc
pushf
stos
test
mov
mov
push
sub
dec
and
sahf
std
jno
les
mov
or
sahf
sbb
cmp
pushf
and
xlat
call
shlb
int3
xchg
push
xchg
dec
push
ficoml
add
pop
stos
es
sbb
cli
movsb
or
mov
sbb
xchg
adcb
in
aas
adc
rcll
jl
and
in
dec
push
lret
xchg
pop
dec
or
mov
mov
cmp
xor
imul
int
and
out
mov
mov
jecxz
push
testl
cmp
divl
or
mov
movsb
bts
test
pop
sbb
pop
out
fcomi
xchg
mov
es
shr
and
mov
add
and
loopne
adc
movsl
repz
and
adc
xor
shlb
mov
ret
loopne
fucomi
test
fimull
pop
adc
hlt
mov
ret
rorl
pop
dec
dec
das
cmpsb
or
lret
fcoms
cwtl
cmp
jb
jmp
pop
sbb
dec
sbb
jb
test
ljmp
addr16
lea
out
insb
sar
aad
jno
das
sbb
mov
pop
adc
xor
fisubs
adcl
call
pop
es
pusha
pushf
cs
lret
hlt
or
out
mov
add
lret
push
push
mov
idivb
and
jno
sbb
ss
fwait
loop
xchg
sbb
cmp
push
or
jb
movsl
adc
fs
popf
fdivr
jns
mov
leave
popa
ret
std
lahf
or
dec
xacquire
mov
in
push
cli
push
js
xor
test
dec
dec
inc
xchg
pusha
cld
lds
add
jp
shrb
inc
jmp
fnstsw
xor
dec
xchg
xor
in
adc
adc
jp
or
dec
cmp
cli
jae
xor
test
or
daa
rclb
popa
cmp
lret
push
push
fdivs
push
imul
leave
xchg
jg
push
xorl
lock
xorb
sub
aaa
sbb
fwait
xchg
jle
sub
jbe
ss
lods
sbb
pop
out
inc
and
sbb
loopne
or
out
outsl
and
movsl
aad
xchg
cmpb
ficoml
lret
rclb
sbb
cmp
fistps
mov
pop
xor
mov
mov
and
dec
push
or
enter
inc
aad
mov
cmp
mov
xor
loope
insb
pop
adc
sub
mov
shll
js
push
jge
xor
jnp
and
xor
xor
jmp
jge
xchg
cltd
or
cwtl
es
aad
mov
mov
stc
adc
xchg
push
addl
cmp
test
out
test
mov
outsl
enter
xchg
cs
sub
pushf
in
repnz
arpl
sbb
push
inc
adcb
xchg
push
and
or
pushf
mov
jge
out
in
push
int
mov
loope
jno
jne
sti
aaa
dec
out
xchg
and
xor
sarl
das
movsb
pushf
jne
xor
addb
imul
aaa
push
inc
fcmovnu
hlt
loop
loope
add
xor
scas
dec
jne
addr16
mov
jmp
gs
lret
jecxz
sub
subl
sbb
ret
lock
movsb
aas
in
in
test
jmp
aad
pop
mov
mov
leave
lcall
mov
xor
push
cmp
adc
sbb
into
or
enter
adc
dec
lret
sahf
mov
push
pop
jecxz
lock
push
jno
jg
dec
lret
rcrl
sub
push
mov
enter
js
ds
push
outsb
andl
xor
es
clc
int3
movsl
in
mov
ljmp
movsb
xchg
negl
xchg
xchg
sarl
sbb
mov
inc
mov
dec
dec
or
cmpsl
rclb
push
scas
cwtl
xor
mov
les
pushf
mov
icebp
jg
lahf
or
or
sbb
xchg
lods
mov
mov
ja
xchg
inc
cli
je
inc
adc
jne
movsl
xor
xchg
rcrl
mov
outsl
mov
js
orl
js
outsl
lcall
cs
lods
or
xchg
fdivrl
iret
mov
cmpsl
mov
cmp
lea
xor
mov
cmpsl
mov
jns
movsb
ret
in
mov
popf
xor
lahf
cmpsl
adc
push
cld
jnp
push
or
pop
dec
xchg
outsb
es
inc
std
sbb
push
or
rol
sbb
sub
adc
push
xor
or
mov
lret
add
lods
cmpsb
test
jl
inc
inc
cld
push
dec
dec
jecxz
cld
sbb
stc
jl
add
push
loope
pop
enter
push
cs
shll
cltd
sbb
xchg
inc
add
pushf
mov
lea
jne
shrl
xchg
pop
imul
xor
ret
adc
pop
and
add
pop
jle
push
xchg
inc
shl
outsb
fimull
xchg
push
mov
test
and
popf
mov
mov
jp
mov
out
sbb
add
cmp
and
into
les
adc
rorl
mov
addr16
pop
and
xchg
sub
arpl
fxtract
xchg
cmp
aas
cs
cmp
and
iret
jnp
add
mov
cmp
insl
xor
popa
rcrl
inc
push
in
outsl
xchg
add
push
mov
pop
push
int
xchg
xchg
iret
in
mov
push
sub
push
mov
and
push
push
sub
in
mov
fidivrs
xor
test
imul
cltd
push
and
mov
outsl
imul
or
sbb
faddl
cltd
dec
xlat
mov
push
incl
sbb
adc
out
insl
out
insb
dec
add
jne
lods
lods
xlat
and
out
bound
shll
mov
pop
arpl
insl
loop
mov
fiadds
outsb
ljmp
aas
jno
sahf
or
mov
ret
movb
mov
cli
cli
mov
rolb
mov
xchg
pop
cmp
repz
mov
jle
icebp
in
aaa
popl
cmpsb
sbb
sbb
push
mov
out
inc
mov
call
add
into
push
and
push
dec
arpl
xchg
and
mov
loopne
ss
push
mov
out
mov
outsl
jmp
adc
addr16
movsl
or
push
jg
inc
xchg
call
pop
jb
inc
jl
ror
or
and
push
sub
sub
sbb
or
dec
mov
cmp
orb
jp
inc
scas
ja
push
dec
out
scas
pusha
aaa
addb
nop
dec
dec
imul
push
jbe
call
shll
and
nop
aas
popf
aam
xchg
xor
add
mov
xchg
icebp
sahf
in
add
imulb
inc
mov
arpl
and
lcall
aam
dec
leave
push
fcomps
inc
lods
dec
and
outsl
outsl
dec
add
fimull
ror
outsb
fists
push
fsubrs
ror
pop
cmpsl
add
xchg
pop
sti
xchg
cmp
adc
fstl
sub
push
sbbb
xchg
in
sbb
lea
or
mov
and
mov
into
stc
movsb
fdivrs
and
push
or
jg
mov
daa
or
sti
aaa
inc
daa
pop
subl
pop
movsb
arpl
test
dec
jp
daa
xchg
sub
dec
divb
pop
mov
jb
test
repnz
jno
inc
test
mov
dec
movsl
loope
inc
stc
or
or
mov
jae
cmp
mov
push
mov
push
dec
or
mov
subl
js
pop
bound
clc
mov
daa
dec
jns
outsl
out
inc
aas
jae
sbb
sti
xchg
xor
xlat
clc
or
cwtl
ret
lds
stos
outsl
mov
jecxz
fxch
cli
pop
out
lods
into
push
jl
stos
incb
mov
icebp
mov
addb
in
fisubs
add
fcompl
clc
negb
sarl
lcall
push
divl
test
adc
push
shl
pop
mov
lea
mov
or
push
xlat
into
mov
dec
lahf
lock
out
cwtl
test
movsl
lcall
leave
xchg
cmp
xchg
nop
orb
mov
je
dec
insl
pushf
xchg
cmp
icebp
call
fdivrl
dec
or
mov
sub
mov
mov
rorb
repz
gs
int3
jmp
inc
or
inc
or
stos
push
lcall
dec
sub
jnp
push
dec
jno
test
xchg
cmpsb
jg
xchg
insb
stos
icebp
scas
sub
jmp
loope
ja
adc
fisttpl
lret
add
jle
sbb
in
sahf
in
ljmp
addr16
mov
mov
lahf
fldt
cld
daa
nop
mov
xor
sub
sub
xor
aaa
add
das
lcall
and
jecxz
adc
cmp
push
mov
mov
test
sahf
insb
test
jb
push
mov
jecxz
sti
push
xchg
cmp
leave
dec
inc
sbb
jmp
jae
or
mov
mov
mov
rcl
cltd
lret
push
pop
ss
movsb
lcall
pop
rcrb
add
xchg
loope
mov
lds
jae
gs
push
pop
push
sbb
loope
adc
popa
cmpsb
inc
and
sub
aas
pushf
dec
adc
hlt
mov
scas
cmp
out
cmpsl
cmp
sub
and
pop
push
mov
sbb
jne
addb
xchg
out
fdivrs
adc
das
adc
inc
and
jmp
jne
push
leave
mov
mov
mov
cmpsb
mov
mov
inc
inc
out
jbe
or
std
loope
jno
mov
sti
arpl
stc
mov
mov
xor
test
mov
or
pop
leave
rorl
cmp
cli
add
dec
dec
popa
push
or
cwtl
divl
int
cs
repnz
jg
inc
jmp
inc
fcompl
pop
inc
movsb
sbb
adc
addl
in
adc
dec
and
stc
xor
lea
jb
xor
jne
sti
negb
scas
adc
out
xchg
mov
xchg
fldl
fs
push
pusha
std
sbb
sbb
dec
mov
adc
xchg
ljmp
cs
loopne
push
outsb
and
or
les
mov
iret
mov
add
and
insb
push
stos
adc
out
insl
dec
push
lds
rcrl
sbb
shll
mov
mov
sub
cmpsl
xchg
imul
dec
cwtl
call
jae
and
in
fwait
xlat
fs
pop
ret
or
fs
mov
mov
mov
test
das
loopne
add
dec
addb
adcb
adc
je
mov
jb
jo
rolb
aaa
stos
sbb
dec
xchg
sbb
push
out
xchg
loope
pop
and
pop
movsl
lcall
jno
stos
push
movsl
sub
cmp
sahf
out
fstpt
gs
push
adc
cmp
dec
ss
jecxz
imul
pop
or
push
in
dec
int
or
btr
mov
imul
mov
sub
mov
xchg
push
or
adc
notb
cmc
jg
and
repnz
mov
inc
roll
int
xlat
subl
imull
jge
push
xchg
adc
mov
aas
pop
nop
stc
insb
xchg
in
ss
das
hlt
aam
pop
data16
cmp
fwait
sub
dec
test
cmpsb
movl
out
jns
add
shl
imul
xchg
pop
sbb
fisubs
pop
add
dec
xchg
mov
push
lahf
stos
push
cmp
jp
movsl
sbb
stos
movsl
popa
stos
add
fcompl
mov
aad
les
dec
xchg
dec
lret
sbb
stos
sahf
sar
push
jbe
inc
mov
std
fimuls
popa
mov
sqrtps
push
xchg
pop
cmp
cmp
fwait
mov
int
stos
test
xchg
lods
std
test
mov
into
mov
push
inc
fisubs
js
rol
jl
out
xchg
pop
stc
pop
rcr
inc
dec
sbb
pop
lock
sar
add
sti
enter
mov
cmpsb
out
or
mov
fimuls
lahf
pop
sarb
sub
cmp
repnz
ljmp
imul
xchg
hlt
insl
hlt
lds
jnp
xor
loop
stc
xor
add
int3
inc
push
clc
lcall
xor
xor
out
lea
push
pushf
mov
pop
cmp
mov
jno
lea
push
subl
xchg
mov
xor
and
pusha
cmp
insl
negl
lcall
cmp
xchg
dec
push
pop
jb
jb
push
out
je
push
jnp
outsl
hlt
in
pop
shll
sar
ljmp
adc
mov
leave
cmpsl
jb
ja
lahf
imul
int
fsubl
jnp
mov
pop
int
inc
push
fdivl
in
push
inc
fucomip
orl
xor
mov
rolb
shrl
mov
lods
mov
adc
jg
cmp
pop
daa
iret
mov
aad
lods
pop
dec
je
pop
pushl
sahf
sub
lea
mov
out
xchg
mov
push
and
lahf
outsl
sbb
fdivrl
fisubrl
movsb
dec
dec
mov
sbb
dec
adc
js
fcompl
add
gs
mov
sbb
movsl
and
ret
movsb
sub
dec
ficompl
lcall
push
jl
pusha
cmpsl
ss
in
int3
mov
and
pusha
loopne
inc
xor
pop
jbe
fwait
repnz
or
mov
das
sub
add
lcall
sti
aas
lods
cli
test
insb
negb
sbb
or
mov
gs
sahf
mov
scas
movsl
pop
addr16
inc
fcomip
xor
and
lods
cli
movsb
hlt
bound
xlat
mov
cmp
mov
daa
cmp
and
test
mov
fwait
out
movsb
ss
lock
inc
ds
fstl
outsb
test
out
and
shll
repnz
test
dec
ret
fwait
test
in
inc
and
cmpsb
jl
push
rcl
fldt
mov
rep
sti
jle
push
fimuls
ljmp
dec
in
xor
jno
add
xor
sub
inc
jns
scas
jmp
lods
add
xchg
push
bound
ja
lock
mov
fcomp
out
das
pop
lods
xchg
xor
lret
cmpsl
dec
jg
xchg
push
mov
cmp
add
xchg
cmp
fcomip
ljmp
in
enter
mov
ret
or
xchg
dec
add
sub
push
push
dec
mov
mov
dec
or
pop
adc
adc
xchg
add
ja
inc
sbb
and
sbb
jg
fidivs
dec
xor
inc
add
ficompl
adc
mov
inc
adc
xor
and
sbb
pushf
outsb
adc
inc
jp
xchg
sub
push
mov
test
or
test
adc
dec
lock
or
cmp
hlt
dec
push
dec
adc
mov
arpl
test
mov
ljmp
aam
outsb
jg
out
sub
adc
and
and
mov
fisubrs
lret
push
scas
mov
add
ficoml
dec
loopne
lds
add
pop
je
and
mov
xlat
in
scas
mov
push
fildll
mov
cld
iret
ret
pop
ss
ret
cmp
cmp
adc
je
call
pop
xor
cmp
daa
loopne
rcrl
into
pop
insl
movsl
std
push
dec
out
fldcw
mov
inc
pop
mov
adc
dec
pusha
sub
sti
sbb
outsb
sub
notb
shrb
cmc
in
push
repz
loop
nop
or
bound
ret
sar
jg
add
sbb
lods
mov
adc
orl
imul
imul
pop
xchg
push
xor
xchg
sub
cmc
scas
addr16
sub
mov
mov
and
in
inc
jbe
xor
repnz
jno
sti
fnstsw
dec
rcll
pushf
arpl
fcomps
sahf
push
sti
inc
inc
jno
and
cmpsb
cmp
int
fimuls
fnsave
negb
push
sub
in
je
mov
jg
fcmovb
stc
sub
jne
dec
mov
out
mov
jge
in
scas
mov
jge
test
fldcw
sahf
in
js
sbbb
push
orb
cmp
mov
jg
xchg
adc
cmp
jnp
dec
dec
lret
dec
ljmp
xchg
adc
mov
out
mov
push
mov
inc
sub
test
clc
pop
pop
xor
sub
mov
pop
test
xor
push
mov
cmp
inc
shrl
sbb
fwait
or
jge
mov
mov
leave
dec
xchg
popa
cld
jp
pop
ret
mov
sbb
loop
aas
pop
adcl
test
repz
decb
sbb
adc
xchg
and
mov
cwtl
or
sub
inc
push
push
fwait
push
icebp
lods
leave
ficoml
dec
std
inc
fstp
stos
fstl
pop
lea
or
push
andl
sti
ret
ljmp
mov
cltd
clc
jbe
fnstenv
mov
js
push
popa
movb
lret
fcmovu
out
sbb
pusha
sbb
adc
sbb
inc
lods
scas
roll
scas
shlb
in
jnp
pushf
sbb
loope
sti
xlat
jae
ret
or
pop
nop
out
lea
je
clc
add
jmp
mov
fisttpl
pop
arpl
addl
add
int3
jb
lahf
sahf
xlat
dec
push
xchg
pusha
dec
popf
aas
enter
testl
dec
mov
add
filds
adc
dec
cmp
lcall
es
mov
fstpl
mov
pop
lock
test
scas
inc
cmovle
aad
push
lods
hlt
push
sbb
stc
jp
cmc
jns
nop
sbb
iret
mov
sub
push
js
inc
mov
push
test
add
jl
cmc
mov
push
or
stos
popf
out
aad
mov
push
and
dec
xchg
shrb
or
dec
mov
sysexit
fcmovnb
mov
mov
bound
push
push
cmp
mov
xorl
orl
test
push
mov
xor
imul
or
jbe
mov
repnz
adc
sub
xchg
add
sbb
pusha
push
add
xor
std
aas
sub
mov
xor
mov
test
lods
mov
out
aad
push
xlat
jb
test
jne
jle
cmp
testb
push
mov
mov
mov
mov
adc
mov
roll
ficoml
stos
bound
sahf
repnz
xchg
mov
cld
push
sub
or
lahf
xchg
push
jnp
mov
add
jnp
mov
test
cwtl
fldenv
faddl
repz
aas
xor
adc
sub
out
pop
dec
aaa
into
inc
test
fwait
sbb
sarb
popf
rcrl
xchg
xchg
ja
inc
push
loop
stos
push
pusha
mov
push
imul
not
test
rcrl
adc
xchg
pop
cmc
cmpb
and
mov
push
lret
into
adcl
cmp
dec
jb
jle
adc
mov
test
sub
inc
lds
addl
adc
arpl
fs
loope
pmulhuw
pop
in
stc
dec
push
mov
jne
inc
enter
jge
loop
sub
add
jne
and
sbb
sub
jge
push
cmp
mov
out
jl
and
and
imul
sti
xchg
lods
fimuls
test
mov
pop
adc
stos
ret
or
enter
xor
inc
jbe
xor
jg
jecxz
xor
cs
and
mov
fistpl
lds
out
and
inc
test
jo
shll
sub
xchg
repz
insb
push
add
cmp
lret
dec
jp
shll
imul
std
stos
jl
inc
stos
inc
out
cmc
add
sbbb
mov
test
negb
icebp
jno
clc
jbe
xor
imulb
add
rorb
pushf
sti
ljmp
mov
or
idiv
mov
ja
add
cmp
test
cmpsl
adc
rorl
or
jp
mov
pop
shrl
fwait
fwait
insl
enter
xor
das
dec
and
mov
sbb
aas
les
lea
subl
push
out
bound
lret
das
leave
push
jle
adc
ljmp
cmp
cmpsb
in
test
cmpsb
call
lcall
inc
repnz
pop
lods
in
xlat
sti
movsl
stos
stos
jb
lahf
icebp
sub
add
clc
mov
dec
mov
jae
push
fists
sahf
jg
popa
xor
enter
pop
lods
sub
mov
and
push
int
lea
mov
cmp
xor
lea
pop
add
int3
jecxz
dec
and
daa
jge
adc
mov
jmp
cmpsl
sbb
mov
loopne
test
jae
insb
outsl
push
add
inc
hlt
adc
outsb
cmp
xor
pop
les
rep
lea
push
push
lods
aaa
add
js
jne
insb
adcl
jecxz
xor
xor
rcll
xchg
sbb
out
xor
push
jmp
jmp
dec
pop
rcrb
hlt
adc
cmp
ss
or
jmp
add
push
pop
cmp
cs
lock
and
in
dec
mov
pusha
push
enter
cld
int3
mov
xchg
pusha
or
xchg
mov
and
in
pushf
fiaddl
rolb
pop
push
ja
inc
sbb
xor
test
clc
dec
dec
and
fucomi
out
sub
mov
dec
or
xchg
dec
lods
inc
dec
addr16
pop
mov
inc
add
xor
fstp
leave
jle
jno
sub
lock
jl,pt
lret
xorb
in
je
cmp
inc
jbe
clc
ret
or
in
gs
mov
shrl
shrl
enter
mov
add
inc
fldlg2
mov
jbe
scas
or
adc
adcl
fisubrl
jno
cwtl
push
xchg
sub
xlat
mov
fisubl
unpckhps
fcompl
iret
cli
or
fildll
loop
insl
inc
add
ss
imul
or
sbb
xor
mov
divb
cmp
ljmp
push
lcall
mov
lods
cmp
lcall
cli
cld
push
cwtl
add
xchg
insl
adc
out
lods
dec
xor
cmp
fwait
enterw
mov
cmpsl
jmp
push
dec
cwtl
mov
lds
insl
arpl
and
dec
and
inc
jbe
ficoml
mov
jmp
notl
sub
lea
jne
push
sbb
fisubrs
les
jo
add
or
mov
and
in
dec
mov
stos
sub
in
fucomi
cli
mov
pop
push
pop
fucomi
insb
sbb
sbbb
mov
push
push
dec
rcrl
mov
int
push
and
xchg
aaa
jno
mov
inc
punpcklbw
out
jle
xorb
mov
xlat
mov
in
and
cmpsb
in
jns
adc
rorb
sbb
cmp
cmpsb
dec
xchg
inc
cmp
mov
cmp
out
mov
and
scas
xor
repnz
repz
jg
mov
gs
sbb
sbb
xor
out
pop
mov
cmp
push
shlb
mov
add
xchg
mov
test
and
test
add
test
stos
cmc
icebp
arpl
in
pop
repz
cmp
push
xchg
jb
les
jg
adc
jnp
ret
and
fildl
push
sub
mov
stc
cmp
dec
adc
adc
mov
mov
cmpsl
mov
daa
xor
int
in
xchg
jbe
int
das
addr16
or
call
out
lahf
or
scas
aam
out
xor
cwtl
xchg
out
xchg
sbb
scas
or
pop
mov
lock
lcall
in
clc
dec
cmp
in
jle
adcb
push
and
shll
in
pop
xchg
jecxz
filds
std
or
adc
add
jo
inc
lods
icebp
lods
mov
jecxz
sbb
hlt
fs
cld
push
stos
push
mov
xchg
daa
inc
arpl
pop
jmp
vpmulhuw
add
sbb
mov
cld
out
mov
mov
cmp
push
lods
pop
icebp
sub
sbb
or
fidivrl
lahf
test
mov
mov
imul
ret
icebp
ret
add
cltd
adc
leave
sbb
andb
or
pusha
and
popa
xchg
loopne
inc
mov
inc
inc
adc
std
mov
dec
inc
mov
inc
aad
adc
rorl
pop
cwtl
xchg
mov
test
fstps
push
mov
fsubrs
jns
push
ds
add
mov
out
mov
jl
mov
clc
push
cmp
rcrl
stos
pushf
sti
mov
or
xchg
shrl
sahf
xchg
nop
mov
cs
push
mov
imul
frstor
call
mov
repz
cmpsl
or
mov
ret
loop
mov
mov
movb
sbb
jecxz
out
adc
subb
stos
repz
jl
out
push
jbe
leave
xchg
faddl
movsl
mov
int
pop
int3
pop
push
cmp
rcr
lret
mov
push
nop
jbe
mov
lods
fnstenv
fadds
loopne
jmp
add
mov
pop
insb
loop,pt
mov
cld
mov
pop
sub
sub
cmpsl
mov
jl
sbb
mov
sarl
call
push
mov
mov
sub
xlat
ret
aas
shll
adc
nop
adcb
push
inc
lret
push
cmp
popf
and
inc
jno
andl
rcll
in
dec
test
sahf
lcall
lret
pop
imulb
in
aas
xor
aas
xchg
sub
push
sti
mov
lret
cmpsl
mov
sub
push
std
sahf
outsl
pop
fcmovbe
lock
cmp
inc
pop
sbb
cmp
cmp
loop
mov
and
xchg
inc
dec
in
loop
xchg
rcrl
push
repz
loopne
xchg
aas
adc
nop
das
iret
pushf
xor
out
lea
dec
pop
push
ficomps
mov
sbb
xchg
xor
add
or
out
in
and
jb
fstl
mov
data16
out
subb
pop
cmp
add
test
cmp
frstor
jl
cli
mov
xor
xchg
inc
imul
paddd
mov
jl
xchg
cmp
aad
in
add
cmp
outsb
aas
std
inc
frstor
mov
mov
negb
mov
inc
orb
sub
push
mov
mov
dec
mov
pop
add
xchg
js
mov
xchg
push
adc
add
stos
lret
or
mov
aam
xchg
pop
mov
fcompp
iret
enter
shr
scas
popa
sbb
cmp
pop
xchg
aam
push
dec
daa
ret
cmp
rcll
fwait
int3
mov
inc
paddsw
xor
out
mov
pusha
out
int3
push
pop
inc
dec
addr16
out
es
imul
mov
sbb
subb
fwait
push
push
call
xor
pop
test
rcl
cld
call
mov
push
ss
push
lock
jo
xchg
int3
cmpsb
into
out
hlt
sti
pop
cmp
fdivrl
out
out
pop
je
jno
sahf
mov
scas
hlt
and
je
fnsave
in
stc
test
or
and
sbb
out
into
insb
and
mov
lret
mov
dec
pop
add
leave
cmp
iret
xchg
loope
adc
xor
mov
bound
sbb
push
into
out
adc
mov
add
pop
lock
mov
jo
and
mov
adc
cmp
dec
and
test
mov
push
lods
mov
out
dec
test
nop
xor
and
inc
lock
in
cmp
pushf
adc
pop
jbe
pop
mov
lods
mov
sarb
flds
enter
inc
insl
mov
cmpsl
lret
mov
scas
mov
mov
jno
pop
mov
out
in
mov
push
sbb
push
imul
das
and
push
data16
push
add
dec
jmp
loope
and
imul
jp
mov
stos
xchg
lods
and
push
fiadds
mov
test
mov
mov
lock
aas
pop
out
xchg
cmpb
cmp
cmp
push
mov
and
jnp
mov
outsl
int
xchg
pop
decb
aam
push
xor
mov
insb
mov
cmp
ret
xchg
lahf
popf
movups
test
iret
rcrb
aas
les
inc
insl
mov
inc
outsl
test
cmc
adc
inc
inc
outsl
cmp
ret
loop
repnz
and
lods
sahf
cmp
cltd
fildl
inc
fistpll
dec
jne
add
pop
fstp
mov
adc
fistpll
add
cli
imul
fbstp
dec
jge
xchg
sbb
adc
icebp
mov
loope
imul
js
push
jg
inc
movsl
cltd
test
lock
push
push
jae
gs
pop
mov
mov
jb
cmp
and
shl
sub
rorb
sbb
jmp
loope
mov
scas
faddl
hlt
sbb
add
ss
flds
and
mov
hlt
dec
mov
fisubrs
ss
add
mov
cmp
in
jns
shrl
sub
notl
or
ljmp
insb
push
pop
add
or
or
stc
mov
sbb
cmc
push
bound
lea
lea
lret
lahf
xchg
rolb
repz
daa
inc
shll
imul
add
aad
testb
cmp
lcall
mov
xor
xchg
mov
push
adc
mov
add
sbb
aam
cltd
fwait
cmp
fcmovnu
push
and
jge
xor
nop
mov
lock
mov
jmp
mov
push
std
divb
stos
sub
js
test
adc
cmc
adc
subl
jmp
and
addr16
and
xor
dec
outsl
fwait
aad
daa
aad
mov
lret
int3
add
xor
cltd
insl
mov
mov
or
mov
fimull
test
xchg
leave
cmc
ja
gs
popf
mov
insb
in
insb
mov
sub
stc
inc
pop
inc
fiadds
bswap
or
dec
jl
fdivrs
jle
jnp
jo
adc
sbb
aas
out
stos
stos
jle
push
int
xchg
add
pusha
sbb
sub
repnz
jnp
outsb
mov
shlb
push
mov
xor
ss
adc
xor
push
pop
ror
sbb
mov
xor
lds
mov
ror
loopne
nop
or
sbb
loop
xchg
jmp
in
es
lock
std
fldcw
sub
pop
leave
negl
mov
cs
inc
loope
cwtl
pop
in
andb
add
pop
clc
inc
les
mov
ss
repz
jle
les
jne
adc
dec
lcall
mov
push
push
subl
aas
int
add
jae
mov
out
nop
gs
xchg
jge
adc
bound
push
pop
adc
andl
or
arpl
movsl
mov
mov
cmp
mov
aas
and
nop
bound
mov
fimuls
adc
jp
lods
repnz
roll
fs
outsl
mov
adc
cmc
dec
inc
xchg
insb
dec
xorl
cmp
aas
inc
cmp
mov
pop
andb
ret
or
repz
and
repnz
shlb
ds
in
les
add
aad
xor
fdivl
sbb
xchg
lret
inc
adc
ret
test
or
jbe
mov
pop
or
shlb
and
sbb
mov
mov
data16
insl
orl
dec
pusha
loop
sub
push
sub
testl
pop
call
aam
push
xchg
shl
cmp
out
arpl
fidivs
hlt
mov
fwait
stos
popf
es
cld
pop
add
loopne
sub
mov
xchg
lret
repnz
mov
int3
popa
imul
bound
loop
jle
xchg
mov
or
pop
pop
shrb
mov
inc
aad
orl
clc
sbb
ss
cltd
loop
add
imul
and
adc
sub
cmpsb
push
mov
push
lods
pop
loopne
jmp
lods
out
rcr
xor
lods
jp
icebp
mov
pop
stc
and
mov
mov
loop
rolb
mov
scas
sbb
lds
cmpsl
mov
and
jecxz
or
aaa
loop
mov
popf
mov
jl
mov
xchg
inc
jg
mov
bound
loop
or
mov
ret
lea
xor
out
mov
inc
jo
lea
xchg
pushf
cmpl
adc
icebp
sub
sbb
aad
jns
and
nop
sub
cmp
mov
scas
push
xor
push
ljmp
andl
xor
std
inc
icebp
test
inc
push
add
ja
inc
movsb
fnstsw
es
add
cmp
sbb
sbb
adc
xchg
pop
mov
mov
sub
rdpmc
mov
dec
out
cmp
les
out
pop
mov
daa
mov
xchg
mov
dec
dec
fisttpll
mov
or
call
lcall
push
push
adc
mov
or
loop
aas
push
andl
jb
mov
loop
je
xor
adc
adc
sbb
arpl
mov
out
push
inc
mov
adc
je
xchg
pop
cmpsl
out
shrb
mov
pop
lret
jns
unpckhps
out
adc
mov
pop
adc
xchg
popl
mov
sti
fdivs
jnp
mov
xchg
fcmovbe
cmp
out
aam
jle
shl
add
jl
popa
das
aam
lcall
shl
xchg
enter
mov
xchg
mov
mov
sti
int
ret
jmp
pushf
stos
fisubrs
jg
rolb
or
pop
repz
add
or
outsb
inc
mov
add
shll
icebp
cmpsb
stc
push
mov
inc
mov
cmpsl
in
xorb
sti
ret
shr
lds
les
xor
mov
insl
push
xchg
jae
lahf
inc
jb
xor
lret
add
out
ret
shll
leave
add
inc
jle
lea
push
adc
mov
icebp
nop
scas
inc
mov
pop
add
leave
jp
lret
repz
xchg
lcall
mov
test
mov
clc
pushl
lock
adc
add
mov
and
pushf
ds
sub
adc
jp
lahf
sarb
mov
cwtl
inc
pop
push
or
xor
jp
ja
shll
jp,pn
stos
mov
xchg
imul
or
pop
jp
ss
xchg
xchg
fdivl
jl
arpl
adc
jns
insb
cmp
pop
jecxz
mov
xor
imul
jae
push
mov
outsl
decl
push
xor
leave
sarl
xchg
cmp
sub
cli
push
jne
lahf
inc
push
mov
mov
out
iret
or
loopne
and
cmp
jbe
bound
sub
ror
mov
addr16
fcomip
jge
sarl
xchg
sub
sarb
and
push
ret
mov
data16
cmc
pusha
fisubl
pusha
shrb
loop
xor
or
mov
pushl
mov
add
push
int
aam
or
pop
es
inc
shrb
aas
out
sub
icebp
daa
mov
xchg
pop
fs
mov
adc
cmp
stc
jo
inc
outsb
mov
movb
ret
xchg
out
xor
jp
in
test
add
pop
pop
xchg
mov
stos
push
in
int
jo
clc
icebp
mov
out
hlt
popl
roll
push
pop
adc
sahf
jnp
pop
and
aam
rcll
cmp
enter
sub
jl
mov
mov
aad
shl
or
loope
test
sub
adc
rcll
mov
mov
popa
jo
or
mov
leave
mov
jb
sub
pop
dec
push
sarl
into
test
scas
cs
mov
jmp
mov
shl
or
lods
nop
inc
cmp
mov
push
xchg
xchg
jmp
mov
xlat
aam
mov
inc
fstps
shlb
mov
sub
jnp
mov
push
jbe
cli
inc
sub
das
fst
or
enter
pop
or
sbb
xor
dec
jnp
jne
icebp
data16
mov
xlat
push
cmpsb
in
sub
mov
push
cmc
fsts
xchg
sbb
insb
jno
mov
sbb
enter
pop
cmpsb
cmovno
push
outsl
loopne
jbe
ret
fcomps
std
insl
fmuls
xchg
pop
add
aam
aad
cli
jnp
lret
into
sub
rcrb
call
mov
iret
mov
sub
mov
mov
jp
out
xor
push
push
arpl
int3
sub
sub
pushf
test
nop
out
and
pop
in
and
jnp
sub
lahf
pop
inc
mov
aam
jl
cltd
repz
mov
jl,pn
pop
mov
push
ret
adc
inc
cwtl
mov
mov
decl
xchg
add
mov
inc
mov
notb
lahf
jg
dec
cmpl
mov
inc
push
fsubl
jg
clc
out
inc
mov
pop
subb
pop
mov
cltd
sbb
je
mov
cmp
cld
mov
stc
js
jb
cmp
add
movsl
int
test
adc
mov
loop
lods
push
lods
out
pushf
inc
pushf
jle
lds
xor
sub
or
in
ljmp
fsub
in
pop
mov
adc
insl
mov
rclb
lock
or
and
cmp
js
data16
jb
enter
cmp
mov
add
movsb
leave
enter
es
jns
mov
repz
fstps
mov
out
and
sub
aaa
push
pusha
enter
sarb
add
jle
dec
test
mov
and
in
xchg
cmpsl
jmp
xor
in
test
dec
pop
stos
ja
sahf
fdivrl
jecxz
mov
lods
sub
in
and
stos
into
imul
push
push
pushl
mov
jne
jmp
inc
cmp
enter
sbb
into
pop
pop
test
and
testl
aam
push
mov
mov
fdivp
pop
subb
daa
jbe
icebp
loopne
pushf
jne
repz
pop
ss
push
shrl
pop
or
mov
cwtl
test
xchg
mov
sub
test
sub
add
aam
xchg
fsub
ljmp
or
lods
enter
cld
out
pop
mov
test
pop
jmp
stos
inc
jge
push
insl
clc
xlat
dec
repz
cmp
ja,pt
lret
fld
or
ret
xor
test
cmp
mov
push
mov
lahf
mov
jge
jns
imull
lret
mov
xchg
test
pop
push
mov
jb
movsb
push
inc
dec
mov
xor
rcr
mov
cmpsb
pop
xchg
data16
mov
popf
mov
les
inc
sbb
jbe
hlt
or
sahf
or
sub
mov
mov
adc
jo
lock
sbb
cmp
insb
and
or
and
sbb
jnp
adc
cmp
cli
outsl
mov
pusha
in
pop
je
or
xchg
scas
stos
in
je
call
pop
mulb
sarl
out
mov
mov
mov
pop
ss
xchg
push
pop
loop
mov
sbb
mov
xchg
test
sbb
lahf
mov
or
sub
movsb
in
sahf
mov
outsb
mov
adc
repz
xchg
and
jge
xchg
fldl
or
loopne
dec
ja
test
js
pusha
int3
mov
fnstcw
jle
sbb
cs
test
jae
jns
pop
icebp
dec
insb
mov
out
outsb
icebp
pop
jecxz
adc
mov
cs
mov
push
inc
xchg
cmp
push
outsb
mov
jb
out
mov
call
test
dec
inc
stc
jle
adc
lret
xchg
call
idivl
in
jge
lods
or
sub
xor
hlt
cmp
test
sub
mov
or
jns
sbbb
lcall
mov
push
movb
fistpll
sub
xor
add
mov
imul
mov
adc
or
inc
sbb
shlb
addr16
rcll
movb
or
enter
mov
xchg
mov
scas
cltd
out
and
xor
push
mull
xor
adc
dec
xchg
add
popa
mov
cmpsl
insb
mov
xor
adc
pushf
and
stos
aam
addb
or
push
fdivs
outsb
fisttps
mov
lods
add
adc
or
ss
in
pop
sbb
in
call
mov
outsb
aas
aas
movsb
sarb
das
push
into
in
out
push
bound
xchg
dec
in
out
fnstcw
je
xlat
mov
inc
dec
clc
xor
pop
mov
xor
vmovapd
shrl
out
int
sbb
cltd
imul
xchg
stos
insl
sub
push
jbe
test
clc
int
xchg
mov
push
rcrl
or
adc
inc
jl
sbb
mov
xor
dec
lods
sub
in
dec
sub
pushf
cli
scas
mov
ret
js
mov
mov
aas
call
cwtl
imul
jecxz
adcb
mov
stos
lock
test
shll
shufps
movsb
mov
jbe
out
or
jne
scas
enter
dec
xchg
mov
xor
mov
jne
mov
pop
shrl
lret
js
das
mov
lahf
iret
jge
lea
jae
mov
es
les
pop
push
decl
enter
pop
dec
xchg
test
repz
insb
xor
jge
cmovp
lods
xor
jl
insb
mov
movsl
popa
movsl
xchg
test
fucom
pushf
aam
adc
clc
sbb
aas
sahf
push
adc
and
xor
mov
ret
or
out
pop
dec
jp
jp
jns
push
mov
and
les
aaa
dec
clc
popf
mov
jnp
or
add
popa
scas
pop
loopne
adc
pop
and
outsl
int3
roll
mov
xchg
xor
xchg
movsl
repnz
cwtl
andb
cwtl
movsl
imul
std
jne
cmp
add
out
push
ja
pop
xor
in
bound
push
add
add
cmc
aam
xor
loope
loope
imul
jo
lods
movsl
push
sbb
pop
bound
mov
test
punpckhdq
cltd
inc
shlb
cmp
jp
cmp
xchg
pop
scas
test
and
xor
cltd
cmc
fidivrs
shl
sub
mov
inc
mov
insl
sbb
jmp
or
stos
mov
sbbl
cld
cmpsl
nop
cmc
sbb
or
lret
add
mov
jno
jp
das
push
movsb
sub
int
dec
xlat
aas
adc
jp
jle
or
adc
scas
out
xchg
call
outsl
fcmovbe
inc
sbb
test
sbb
fdivrs
call
pop
push
test
je
jo
xchg
pop
xor
faddl
popf
ficoml
test
mov
pop
mov
xor
sub
call
push
outsb
in
jo
fwait
and
mov
lock
fimull
xchg
mov
aam
loope
push
fnstsw
jns
cmpsb
inc
xchg
imul
rorl
add
jmp
inc
dec
out
ret
iret
jmp
inc
in
out
jo
mov
push
icebp
cli
push
rorl
aad
int
mov
sub
fwait
in
fs
lea
leave
cltd
in
fdivl
gs
xchg
or
sahf
imul
loope
imul
cmp
inc
pop
sbb
in
stos
push
xchg
xchg
popa
lcall
pop
mov
lret
pop
dec
cmc
inc
jbe
sub
or
mov
xchg
xor
fucom
xor
jb
inc
cs
cs
bound
int3
jg
xchg
push
jle
daa
ljmp
mov
arpl
xchg
and
bound
xchg
mov
movsl
sub
test
jge
lret
lock
adc
outsb
dec
xchg
or
xchg
sbb
cltd
or
push
inc
jl
jae
call
jae
leave
js
loop
jmp
and
leave
adc
sbb
dec
sbb
sbb
cmp
cld
iret
dec
xchg
adc
addl
es
adc
inc
or
addl
push
mov
popa
xchg
stc
add
repnz
xchg
sub
stc
nop
xchg
pusha
sbb
dec
cmpsl
cwtl
dec
hlt
inc
outsl
mov
jmp
jmp
cmc
shll
std
add
inc
lcall
or
jle
add
or
lahf
in
ror
xchg
mov
fwait
cs
lods
cmc
sub
stos
push
aas
inc
and
adc
into
pop
inc
sbb
cli
and
or
lret
addr16
add
push
call
xchg
xchg
in
lret
rcll
bound
push
call
xor
cmp
std
push
mov
rcl
mov
in
enter
xor
sub
loope
in
movsb
into
add
test
fsts
je
adc
sbb
sub
jmp
xor
push
test
push
jp
cli
std
rcrl
mov
out
mov
lea
sbb
adc
cmc
sti
movsl
jo
out
add
fimuls
pop
dec
push
xor
pop
rcl
dec
lcall
pop
xor
sub
mov
mov
enter
mov
shl
jno
pusha
xor
mov
xor
adc
test
into
dec
outsl
daa
push
int
xor
jle
scas
cmp
adc
xchg
add
adc
push
add
lea
sarl
and
pop
mov
add
dec
ja,pn
push
in
jge
pusha
ror
out
dec
pop
aaa
jb
fldcw
mov
xchg
cs
mov
and
imul
add
clc
pop
stos
sbb
sbb
inc
mov
outsl
fcomps
jne
xor
pop
mov
or
loop
and
xor
pop
imul
mov
cmp
lret
mov
ror
roll
imul
jl
lret
xorl
xchg
jp
dec
lret
cmc
add
xchg
shrb
pop
bnd
jge
cmpb
push
rcrb
mov
insb
shr
jg
xchg
inc
jle
fnstsw
mov
sbb
mov
dec
inc
mov
mov
out
mov
xor
loopne
inc
mov
xchg
pop
push
stos
pop
mov
mov
pop
es
xor
lcall
scas
sbb
dec
and
mov
movsl
pop
xor
shrb
addr16
dec
pushf
repnz
mov
test
dec
xchg
mov
stos
jne
push
adcl
shlb
jno
jg
jnp
sbb
scas
ds
mov
repz
jne
mov
lods
jae
lcall
pop
enter
pop
neg
adc
jl
xchg
shlb
or
lahf
or
pop
test
scas
lods
add
mov
add
icebp
mov
shll
lods
rcl
in
aam
imul
adc
addl
subb
or
xchg
mov
test
jl
mov
dec
jle
out
sub
out
fs
scas
jo
push
dec
std
adc
iret
add
lahf
stc
cltd
ds
stos
pop
fstps
add
lock
mov
mov
xchg
int
js
int
lahf
mov
inc
dec
aam
add
pusha
pop
lahf
jae
movsl
push
hlt
inc
bound
lea
stos
adc
pop
pop
pop
cmp
jg
in
popfw
push
out
jmp
out
mov
fmull
cld
int
dec
aam
pop
xor
shlb
fs
les
outsl
lods
test
stos
fwait
out
lods
icebp
fnsave
mov
or
adc
pop
mov
mov
arpl
jl
insb
or
push
repz
inc
ss
inc
or
inc
lea
push
cmp
adc
mov
dec
stc
lret
out
scas
xchg
cmp
hlt
dec
cwtl
xchg
stos
jno
dec
lods
inc
mov
cmc
cli
pushf
cmp
or
adc
adc
enter
push
xlat
push
mov
sub
rclb
adc
fldl
jl
je
imul
stc
sti
cmpsb
in
andl
cmpsb
mov
popa
ja
cmpsb
cmpl
fdivr
add
imul
xor
pop
rcl
rol
cltd
add
add
rcrl
pushf
fstpt
mov
inc
or
fsubl
xor
xor
lret
imul
dec
inc
call
inc
in
sbb
add
push
pop
jno
addr16
adc
lods
cmp
cltd
push
push
xor
test
mov
or
sub
std
xchg
out
jne
xchg
cmp
addr16
out
cmp
push
loopne
cmp
dec
aaa
add
push
addb
and
imul
ficoms
lods
das
aad
addr16
sbb
push
or
push
hlt
push
fisubl
orl
xchg
pop
fcom
int3
sbb
jbe
inc
mov
mov
sub
stc
out
pop
dec
dec
iret
jne
push
xchg
xor
jp
jle
sub
stos
jnp
stos
push
mov
xchg
and
jp
pusha
sbb
push
or
jno
cli
adc
and
jbe
fisubrs
cld
movsb
dec
pop
js
roll
mov
sti
add
add
pop
xchg
cmp
sub
adc
sub
lea
fildll
fcmovbe
stc
push
and
inc
gs
mov
fisttpll
jl
orb
in
adc
repnz
call
mov
and
pop
and
dec
inc
xchg
mov
xchg
jmp
enter
lock
lret
cmp
jecxz
push
push
inc
lahf
subl
inc
jo
int3
scas
repz
push
lahf
aad
dec
cs
push
sahf
stos
popa
sahf
mov
mov
jbe
inc
adcl
jbe
push
sub
mov
and
sbb
cmp
call
mov
rcrl
push
int3
fnstenv
loop
inc
insb
lret
scas
sbb
fcompl
or
jmp
aad
loope
jg
inc
clc
or
pop
js
dec
daa
mov
sbb
stos
dec
daa
jae
stos
aam
in
push
push
lods
cwtl
gs
scas
sub
nop
cmp
call
push
mov
xchg
pop
xchg
aas
xor
fistpll
mov
push
sub
repz
aas
add
fldl
jmp
aaa
out
lahf
mov
ss
sbbl
sub
nop
mov
addr16
adc
ljmp
mov
push
jp
mov
mov
and
mov
ret
xor
push
mov
mov
pusha
dec
inc
inc
xor
ds
inc
cwtl
jl
cmp
mov
xlat
fldcw
rcr
je
flds
notb
mov
jg
adc
jp
mov
pop
xor
mov
or
sahf
pop
cmp
adcl
mov
sub
arpl
inc
xorl
add
shlb
inc
mov
jecxz
es
mov
daa
mov
in
xor
ret
jb
cmpsl
mov
mulps
shrl
pushf
pop
dec
mov
fwait
data16
dec
sub
dec
fwait
scas
xlat
les
xchg
xor
dec
fwait
sub
insl
cmp
fnstenv
push
out
pop
insb
mov
pop
sarl
cld
jge
pop
adc
inc
mov
sbb
das
loop
adc
insl
sti
mov
lret
cmp
mov
icebp
jno
and
mov
xor
or
int3
lock
mov
mov
sbb
rcrl
imul
stos
in
and
lret
movsb
inc
daa
jle
ljmp
scas
scas
in
out
mov
movsb
stc
dec
shl
jge
mov
pop
out
jne
test
mov
repz
fnstsw
daa
jo
cmp
ss
cwtl
xor
and
test
ljmp
sub
mov
sbb
repz
and
leave
xchg
int3
mov
add
pushf
jb
add
jno
aam
ja
jbe
push
or
imul
sarb
repz
or
enter
xchg
icebp
pop
das
xchg
sbb
jg
mov
lret
insl
fs
lea
cld
mov
mov
stos
xchg
in
add
and
xor
sbb
js
data16
or
js
mov
loop
sbb
test
xorb
jle
in
dec
mov
add
pop
push
fnstenv
cmpsl
add
add
imul
push
data16
pushf
dec
add
add
pushf
ret
push
clc
adc
inc
add
ret
push
test
icebp
jne
inc
scas
sub
subl
or
pop
mov
push
aas
push
mov
jecxz
popf
or
xchg
inc
xchg
push
dec
daa
cmpsl
dec
jne
mov
arpl
inc
sub
fistps
mov
add
dec
sbb
in
test
pop
test
clc
lods
lods
mov
push
mov
cs
dec
push
mov
mov
andb
adc
in
mov
jp
mov
mov
jnp
adc
cmp
inc
jnp
mov
pop
popf
add
imul
pop
mov
lds
sub
mov
sbb
push
rorb
jl
jmp
xchg
int3
inc
mov
inc
aad
fs
ja
mov
stc
aad
int
ljmp
fnstcw
inc
cmp
or
sbb
lods
scas
xchg
outsb
mov
leave
outsl
dec
add
or
dec
sti
pop
cmp
rcrb
or
cmpsb
mov
push
pop
add
gs
jno
pop
push
xor
js
pop
sar
mov
popfw
push
mov
enter
pop
xlat
jo
push
in
inc
inc
mov
mov
in
ja
mov
dec
out
pop
xchg
or
stos
lcall
stos
sahf
xchg
push
cmp
or
xorl
add
inc
and
insb
push
jle
dec
test
andl
mov
lret
lahf
ss
mov
mov
mov
mov
mov
xchg
shr
int3
sbb
xchg
add
sbb
dec
movl
sahf
mov
ljmp
daa
mov
repz
mov
push
jno
aas
loop
cmpsl
dec
mov
in
stc
jns
lods
xchg
mov
adc
enterw
xor
jecxz
rcll
rcrl
pop
adc
call
mov
repz
push
fwait
jecxz
mov
insl
test
and
cmpsb
popf
scas
push
popf
xchg
fnsave
jge
jle
fcoms
stc
fnstenv
push
xchg
push
arpl
out
cmp
adc
push
push
push
mov
and
jno
data16
pushf
add
lds
lea
int
ficoml
test
xchg
add
jl
xchg
fldcw
or
repnz
insb
cmpsb
jno
cs
cwtl
addr16
fdivr
xorl
lret
fs
and
sbbb
add
pop
mov
loopne
aam
mov
shll
mov
push
ss
loopne
or
aad
lds
in
cmp
add
std
mov
push
push
imul
sbb
cltd
mov
push
inc
adc
mov
mov
adc
imul
inc
pop
sahf
dec
mov
push
outsb
add
mov
dec
add
testb
ficoms
add
inc
cli
jmp
mov
inc
sti
push
imul
pop
mov
or
adc
add
int
xchg
imull
mov
sub
add
jo
icebp
cmp
adc
mov
out
leave
xor
dec
out
adc
lcall
cmp
je
mov
sub
subb
orl
inc
sarl
test
adc
rcll
inc
jo
jg
out
xchg
mov
adc
or
fadds
cmp
sbb
add
or
int
jge
mov
out
push
cmp
xorl
cmp
push
sahf
mov
or
je
xchg
cmp
jmp
fidivrl
pushf
dec
call
adc
mov
adc
cmp
ret
test
or
lret
cmp
repz
pop
repz
add
cli
shrl
cwtl
pop
sbb
aad
orl
xchg
pop
xchg
xchg
add
paddusb
push
add
out
sbb
cli
cmp
mov
int
sub
mov
mov
xchg
dec
lds
pop
fs
jnp
or
push
adc
push
xchg
into
adc
jo
scas
adcb
sti
mov
test
call
subl
xor
push
pop
mov
jbe
adc
fsts
rcl
addb
popf
inc
fidivrl
test
and
insb
mov
loope
sbb
bound
mov
mov
xchg
bound
cmc
mov
pop
push
jns
pop
adc
mov
fmulp
icebp
jb
sub
sub
inc
enter
pop
neg
call
jl
push
insb
dec
xlat
cmpb
ljmp
pop
pusha
popf
cs
or
jbe
into
iret
sub
mov
bnd
push
pop
xchg
insl
mov
leave
roll
mov
dec
leave
xchg
dec
cmp
pusha
in
testb
mov
dec
addr16
fucom
popa
cld
mov
es
sbb
mov
mov
push
xchg
rorb
iret
adc
sbb
sbb
sbb
stos
pusha
and
xchg
cmp
xor
rcrl
int3
push
mov
les
push
pop
addr16
out
ljmp
sbb
jns
loop
sbb
pop
add
test
xorl
inc
mov
not
mov
adc
movsb
or
sbb
jo
xlat
cmc
icebp
push
inc
xlat
dec
andb
lds
cmp
ret
push
xor
adc
push
loop
xchg
push
aaa
push
sbb
sbb
jge
repnz
fldcw
loopne
cmp
test
scas
sub
lret
mov
push
mov
fadds
and
mov
movsb
andl
push
in
scas
cmc
pop
test
mov
mov
jae
loope
out
mov
mov
add
sbb
and
out
test
lods
movsb
fildl
test
jl
push
pop
mov
sbb
in
inc
lret
mov
mov
cmp
je,pt
cmp
bound
movsl
cmp
shlb
or
test
addr16
adcb
outsb
js
mov
cmp
je
inc
sbb
jmp
ljmp
adc
sbb
out
mov
xor
mov
push
mov
insl
sbbb
jae
stc
inc
sub
xchg
mov
test
jne
pop
enter
rolb
jecxz
es
and
in
cmp
add
scas
mov
or
movsl
in
movsb
mov
xchg
lods
adc
pop
inc
cmp
iret
cmc
enter
subl
popf
mov
inc
in
adc
mov
es
out
in
push
hlt
inc
rolb
mov
jmp
jo
cmpsb
mov
sub
cmp
adc
sub
stos
pop
clc
xchg
jne
mov
cmc
fcmovnbe
hlt
sarb
and
ret
xchg
test
addr16
scas
daa
and
loopne
inc
repnz
sti
xor
push
test
movsb
in
int
xchg
aas
add
icebp
adc
int
ss
push
das
loop
cmc
loopne
cmp
sarl
call
dec
push
lret
mov
push
lods
mov
xor
mov
and
mov
icebp
add
scas
adc
xor
js
iret
dec
sub
push
cmpsl
pop
xchg
inc
xchg
pop
and
lret
jmp
dec
in
insb
jle
jge
inc
out
sub
adc
adc
and
sti
lock
hlt
pop
lds
or
test
sub
aas
fsubs
cld
pop
xchg
mov
iret
movl
mov
test
jge
mov
rcl
outsb
push
daa
outsb
fisubs
aam
pop
jae
cld
inc
jle
add
push
fisubrs
push
ja
stos
push
or
cmp
idivb
cmp
jo
sti
cmp
mov
sbb
rol
jge
mov
and
ss
ds
push
cli
fdivl
pop
ljmp
aas
inc
adc
jnp
mov
in
dec
shll
ficomps
cmpsb
or
aaa
fsubl
sub
cltd
adc
leave
fdivrl
out
mull
cmp
loope
push
xchg
cmp
cs
ficomps
iret
cmp
aaa
jecxz
gs
xchg
jns
clc
sbb
fisttpll
test
mov
jecxz
push
mov
call
adc
imul
cmp
cmc
xchg
mov
cmpsb
cltd
inc
sbb
fcmovnbe
addr16
outsb
fs
xor
mov
shrb
or
push
xchg
mov
and
and
sub
aam
mov
lock
ss
and
pushf
sbb
adc
mov
xor
or
dec
cmp
xorl
icebp
call
outsl
movsl
xor
jge
cmp
lea
es
sub
pop
loopne
mov
push
test
jno
mov
cmp
mov
cmp
js
add
stos
mov
repnz
ror
mov
loop
addr16
xchg
inc
xor
fistps
pop
xor
iret
out
in
dec
frstor
in
cmpsl
add
mov
push
add
mov
push
gs
mov
jp
or
fdivrs
push
adc
out
xchg
cmp
lods
rcll
cmp
sbb
push
cmpsl
mov
jns
outsb
std
cmp
jp
or
mov
sahf
cld
xor
loop,pn
pushf
xchg
push
mov
movsb
xchg
sar
mov
aad
mov
push
sub
lret
pop
cs
arpl
dec
in
sbb
mov
out
aaa
jns
lret
out
mov
cmovg
outsb
mov
aas
mov
mov
mov
push
std
dec
movsb
pop
les
cmpsb
cli
inc
mov
rorb
cltd
jp
xchg
imul
xor
sarl
clc
out
arpl
aaa
dec
cmp
cwtl
pop
xor
out
sbb
add
bound
push
lods
fisttps
idivb
scas
dec
jmp
fildl
mov
push
mov
mov
es
sarl
inc
xchg
xchg
push
sub
cmp
mov
push
push
xchg
sbb
outsb
inc
inc
push
xor
xchg
or
sub
cmp
xor
jge
ror
adc
xchg
repz
or
or
sarl
or
push
cmp
xor
sub
cmp
ljmp
cmp
add
push
cmpl
mov
mov
ljmp
stc
sahf
popf
xchg
out
sbb
adc
fidivrl
and
arpl
subb
inc
aad
mov
in
or
add
pop
mov
or
jo
adc
cmp
or
arpl
cmpsb
mov
mov
mov
or
xchg
cs
leave
pop
mov
xchg
inc
cmpsb
iret
pop
pop
pop
push
into
stos
gs
fidivrs
out
das
cwtl
cmp
cmp
or
and
cld
push
xchg
push
adc
imul
or
jae
mov
fdivr
and
cmpsl
les
dec
test
jle
loope
jmp
pop
out
pop
xor
xchg
dec
mov
daa
inc
test
ds
cmp
adc
pop
les
cmp
xchg
adc
cmovs
ficoml
lock
loope
pop
jns
test
dec
cli
jmp
in
jmp
mov
cmp
xchg
js
fs
cmc
push
aaa
pop
ja
xchg
sbb
in
out
outsl
or
imul
cmp
gs
add
mov
inc
adc
addr16
xchg
cmp
std
push
scas
dec
into
ds
xchg
scas
hlt
mov
or
and
cmp
and
push
jns
stos
sbb
fcomp
js
data16
mov
inc
push
lret
and
mov
bnd
sar
sub
push
and
in
push
and
pop
das
inc
xchg
pop
cld
sub
jnp
jle
stc
mov
out
cwtl
fsqrt
pop
mov
jl
repz
ret
cmpsl
dec
fisubl
xor
pop
das
inc
xor
jmp
push
aas
stos
fisttps
xchg
mull
mov
mov
add
jmp
out
jbe
testl
popaw
cmpsb
in
sbb
idivb
adc
mov
push
in
mov
jns
arpl
mov
in
mov
jae
cmpb
ljmp
push
cwtl
jmp
fbstp
jl
fcmove
sub
dec
xabort
cmp
inc
jl
adc
shrb
dec
cmp
sahf
sbb
adc
pop
add
pop
in
int
mov
in
shl
icebp
xchg
rcll
inc
cmc
add
sub
pushf
ja
jo
stos
daa
push
xchg
dec
push
dec
dec
push
push
aad
cwtl
add
pop
push
xchg
mov
jp
xor
inc
or
setne
push
repnz
adc
mov
pop
cwtl
sti
push
fsts
out
inc
cmpsl
push
lods
mov
inc
dec
outsb
test
sti
mov
cld
lret
lods
add
jnp
push
push
aaa
push
lea
lock
sbb
scas
cmpsl
movsl
sahf
inc
fs
cmp
divb
xchg
pop
sbb
imul
rorb
jbe
pushf
pop
outsl
mov
addr16
iret
push
cmp
in
xchg
add
repnz
xor
inc
jg
insb
shl
lret
stos
repnz
dec
ss
mov
push
insl
jo
inc
pop
adc
mov
push
pusha
lcall
jl
or
fistpl
dec
adc
into
cmp
jae
pop
fdivs
push
add
insl
mov
ds
sti
nop
sbb
pop
inc
pushf
mov
sahf
sahf
fnstcw
in
ljmp
fwait
jnp
cmp
adc
dec
or
shrl
add
lret
xchg
cmp
xchg
outsb
test
dec
imul
cmp
outsl
aad
lcall
sbb
inc
negl
imul
jne
jnp
cmp
cmp
mov
out
cld
loope
aas
shrb
inc
mov
and
sub
outsl
cmpsl
testl
fsubl
pop
cmp
fildll
enter
fwait
aaa
loop
dec
jmp
cmp
sub
clc
pop
pop
gs
into
add
leave
sbb
lock
xchg
jnp
pop
icebp
jne
sti
jmp
mov
vmmcall
pop
jo
aas
push
push
mov
es
sarl
adc
dec
enter
inc
das
mov
js
xchg
incb
aaa
in
push
xchg
outsb
push
mov
xchg
fistpll
stos
xchg
test
out
aad
adc
xchg
push
push
pop
stos
stc
pop
mov
inc
cmc
inc
mov
dec
stos
sbb
add
lret
stos
mov
xor
stos
sub
or
mov
in
stc
in
jecxz
repz
aad
pop
sub
push
dec
pop
and
mov
fcoms
cmp
test
mov
in
mov
aas
in
xor
push
jb
push
cmp
ret
cmp
jb
mov
or
in
xchg
xchg
sbb
imul
mov
fptan
insb
lods
pushl
cmp
sub
jne
lock
dec
pop
imul
cli
dec
es
out
dec
imul
cmp
xchg
movsb
rcrl
dec
push
cmp
push
mov
stos
pop
add
sub
push
and
scas
lods
xchg
push
xlat
test
in
or
dec
jge
adc
push
or
je
lods
mov
push
test
cmp
daa
sub
andb
out
mov
inc
xchg
xchg
mov
ret
fidivrl
jge
mov
test
cli
in
aaa
mov
rcl
mov
or
push
imul
mov
inc
jnp
test
mov
add
scas
leave
mov
dec
adc
fwait
aas
mov
or
push
std
outsl
int
mov
push
pushf
xor
lock
and
push
leave
fs
sar
negl
in
push
jnp
xchg
mov
test
push
sub
sub
xchg
xchg
jmp
mov
sarb
out
jno
mov
hlt
outsl
inc
push
cmp
lea
inc
dec
sub
dec
mov
mov
insl
fldt
mov
popl
jne
cmp
jecxz
adcl
jnp
shl
jl
scas
subl
and
mov
imul
dec
push
cmp
in
xor
jle
inc
movsb
jecxz
inc
push
daa
cmp
fisttpl
jae
mov
xchg
pop
xor
das
mov
lods
movsb
mov
push
ds
xor
sbb
push
movsl
repnz
inc
add
testl
pop
test
stos
loop
jecxz
sbb
in
push
pop
imul
stos
push
xor
push
in
sbb
mov
fldenv
cmp
sub
push
insl
sub
inc
xchg
dec
popf
sbb
mov
sti
xor
test
cld
push
push
icebp
loope
enter
sub
push
xor
xchg
sar
jecxz
mov
xchg
out
push
add
jnp
pop
or
loop
inc
push
movsl
inc
pusha
inc
pop
mov
shll
scas
dec
bound
in
outsl
cmpsl
inc
xor
jb
fmuls
dec
push
sub
mov
daa
sub
test
and
test
daa
std
jl
push
cld
aam
fnstcw
mov
ja
ficomps
cwtl
pop
repnz
bound
ja
xchg
xchg
xchg
pop
and
adc
add
cmp
push
jecxz
jmp
cltd
fldt
sub
stc
xchg
shlb
pop
sub
mov
in
dec
imul
repz
je
sub
mov
dec
cmp
or
dec
mov
sti
push
iret
xlat
and
icebp
adc
fnstcw
xchg
gs
fiaddl
and
lahf
icebp
out
hlt
bound
outsl
inc
sbb
das
out
pop
mov
scas
icebp
sub
sahf
and
mov
xor
jl
jp
adc
das
sbb
cld
outsl
loopne
shl
test
add
ja
inc
pushf
sub
add
or
in
or
adc
or
add
jle
mov
inc
add
nop
movsl
jge
orb
in
divl
ret
imul
test
ss
dec
fsubrl
push
push
outsb
test
ljmp
push
sahf
mov
pop
movsl
lahf
mov
mov
jg
mov
arpl
jo
movsl
das
stos
imul
jecxz
dec
sbb
xchg
sbb
pop
add
dec
dec
sub
add
rcrl
lods
test
push
js
xor
repz
mov
and
xchg
adcb
popf
and
push
pop
rcr
shrb
xcrypt-ctr
cmpsl
pushf
bound
dec
cmp
and
jl
mov
xchg
imul
into
int3
mov
push
and
pop
mov
xor
push
nop
sub
cmp
dec
dec
fistps
xchg
dec
push
mov
fldenv
insb
je
add
mov
xchg
aas
pop
sahf
sub
gs
outsb
ljmp
shlb
iret
inc
lret
lcall
aad
mov
pop
daa
lret
lcall
stos
mov
jl
and
fldcw
adc
and
push
inc
cmp
jecxz
and
inc
mov
mov
nop
je
jg
pop
cwtl
aas
dec
push
pop
test
push
aaa
and
in
pop
jge
xchg
mov
cs
stc
inc
mov
aam
fcomp
repz
push
lret
cmp
pushf
stos
xor
dec
xchg
popf
or
or
insw
test
aad
test
cmp
push
and
mov
inc
xchg
pop
pop
add
xor
pop
add
cmp
fildll
movsb
push
jnp
jmp
repnz
jo
jbe
repz
jno
ret
add
or
mov
fldenv
fsubrl
dec
pop
push
stc
pause
mov
inc
sbb
mov
mov
dec
and
sub
mov
stos
mov
js
in
xor
fstpl
pushf
adc
and
mov
enter
jp
addr16
sbb
xor
inc
jnp
fwait
cli
insl
sbb
push
lds
jge
push
and
imul
xchg
into
stos
xchg
ret
in
mov
cmp
lock
mov
stos
push
iret
mov
pusha
xchg
ds
stos
adc
and
ret
cmp
inc
gs
pop
jae
sub
gs
inc
fbstp
and
addr16
repnz
arpl
test
data16
mov
sbb
test
cld
inc
pusha
dec
cmp
inc
cwtl
sbb
and
mov
rcrl
pop
lods
mov
cmpsb
pop
sub
mov
jg
add
addr16
sbb
insl
xchg
sbb
outsl
dec
stos
mov
cld
push
mov
pop
cmp
cmp
mov
mov
dec
jne
adc
or
sbb
loopne
cld
es
repnz
and
inc
repnz
scas
and
sub
out
fcmovbe
sti
push
repz
loopne
jbe
inc
ret
push
xor
out
xor
dec
sbb
dec
xchg
ret
xchg
mov
iret
fbstp
dec
lock
dec
dec
in
fs
les
push
loope,pt
dec
mov
pop
jo
lcall
out
in
lods
jb
fdivr
notl
pop
in
movd
movl
or
pop
in
inc
push
jno
fisubs
out
mov
push
fistl
aam
leave
pop
push
mov
fstpt
aaa
sahf
add
jb
lods
lds
add
pop
dec
push
or
sub
rolb
inc
xchg
or
xor
loope
adc
pop
ret
aaa
xlat
pop
mov
popf
jmp
pop
icebp
jae
iret
and
lret
lods
aad
cmp
xor
xchg
and
movsb
or
ror
jbe
cld
xor
lret
mov
imul
lods
aas
lods
loope
loopne
rolb
jno
cmp
sbb
add
sahf
push
cmpsl
cltd
je
xor
jno,pt
test
loopne
sub
jp
lret
xor
hlt
and
jo
test
iret
mov
sub
cs
mov
jae
lods
add
scas
jmp
jns
fmuls
mov
stc
clc
xor
mov
fisubrl
mov
jne
popf
jp
dec
xchg
cmp
xor
incb
rcr
inc
and
out
mov
aaa
xchg
xchg
dec
roll
adc
mov
pop
sub
into
mov
cltd
or
dec
xchg
cwtl
mov
dec
pop
out
mov
mov
lods
mov
sub
dec
into
xchg
psubw
bound
hlt
sbb
sub
cmp
push
popa
xchg
sub
nop
mov
sbbl
mov
divl
jno
sbb
dec
pop
inc
gs
mulb
jnp
mov
fcomi
stos
scas
pop
cmp
adc
clc
in
in
xor
sub
mov
andl
cs
ds
bound
pop
mov
cmp
std
jmp
xchg
in
dec
pop
xor
stc
xchg
lds
pop
push
das
add
je
xchg
iret
ja,pt
xor
add
xor
adc
outsb
shrl
test
ljmp
or
test
icebp
stc
push
adcl
jb
leave
sahf
es
jnp
inc
leave
adc
hlt
add
testl
ljmp
cmp
jo
popf
and
cmpsl
adc
pop
and
inc
inc
push
adc
push
inc
insl
xchg
sub
popf
dec
fdivrp
insl
or
imul
cs
ficomps
pop
jnp
js
enter
aam
jno
and
dec
xchg
push
sbb
jo
in
in
aad
cmp
mov
repz
inc
xchg
lcall
push
out
pop
adc
xlat
cmp
add
add
jo
mov
loope
cmp
sbb
xor
popf
pushf
cld
je
into
out
sub
lahf
ret
cmpsl
daa
jb
fsubrl
daa
inc
xorl
mov
push
adc
sub
loop
lods
out
or
inc
fs
mov
mov
push
cmp
fisubrs
pop
in
mov
lods
imul
orl
pop
loope
sbb
aas
push
and
jecxz
lret
dec
adc
dec
jo
push
push
fstl
out
js
fists
lods
adc
jmp
sbb
push
in
lret
push
pusha
mov
fsubl
push
inc
cld
sbb
add
mov
pop
aaa
jg
dec
inc
stos
adc
mov
cld
cld
mov
jb
cli
jnp
shlb
jl
in
inc
cwtl
call
and
inc
mov
xchg
cmp
push
jne
pop
lds
cmc
mov
fwait
or
mov
aaa
and
mov
jle
dec
popf
in
mov
xchg
mov
and
int3
xlat
push
outsl
lahf
ss
push
sahf
push
insb
out
mov
and
ljmp
xorl
int
adc
test
adc
lods
push
jo
js
test
nop
sub
scas
repz
lret
xorb
jle
dec
push
xchg
jnp
fcmovnu
mov
and
imul
push
sysenter
xor
out
mov
sub
ror
mov
sub
lock
mov
and
addr16
sub
xchg
xchg
test
dec
clc
loopne
or
cs
cs
insl
lret
jecxz
or
lret
into
scas
in
lock
add
push
popa
adc
pop
mov
pop
inc
jmp
push
shl
fwait
shrl
jb
dec
aas
aas
ljmp
aas
scas
pop
pop
adc
clc
and
dec
push
out
andb
fisttpll
xor
fcoml
sbb
xchg
cmpsb
addr16
mov
in
in
cmp
sbb
xchg
mov
add
add
shlb
ret
jecxz
sbb
mov
xor
push
xchg
test
cmp
inc
push
cld
inc
lahf
divl
sub
adc
and
push
mov
cltd
imul
lea
mov
loope
or
jg
aam
jbe
inc
hlt
pop
sbb
mov
inc
dec
dec
xor
push
fmull
xchg
popa
pop
clc
pop
outsl
jbe
int3
sahf
inc
loopne
imul
mov
cmpsb
aad
lds
pusha
jns
dec
mov
aas
xor
pop
insl
shrb
lcall
stc
out
or
lret
adc
and
popf
jno
mov
in
imul
xchg
or
add
pop
mov
ds
push
test
rorb
fcoms
cmpsl
fists
setae
dec
mov
mov
xlat
dec
mov
js
call
fstps
mov
mov
aaa
loope
stos
aad
jge
or
pop
push
jle
mov
or
dec
stos
fadd
jp
loopne
sub
jmp
shlb
add
jl
kxorb
sub
push
lock
fcoml
mov
mov
je
add
xlat
add
popf
xor
push
pop
adc
jmp
sbb
mov
dec
xor
inc
sbb
and
sub
add
mov
jp
fsubs
push
adc
jns
mov
inc
out
fisubrl
xlat
lea
fabs
push
cmp
movb
nop
xlat
push
and
mov
sub
mov
fsubrl
inc
fldcw
xchg
lock
pop
aas
cltd
mov
sub
insl
push
add
scas
cwtl
clc
rcl
sub
jecxz
push
jae
add
clc
jo
and
out
pop
dec
filds
ss
dec
pop
push
std
movsl
mov
ret
inc
jb
push
shr
ja
jbe
lcall
ja
or
sub
and
xorb
fcompl
into
loopne
sub
orb
adc
inc
cmpsb
mov
push
fs
dec
lret
cwtl
xchg
js
add
push
mov
stos
push
dec
push
pop
dec
cmp
into
push
or
inc
aaa
popa
enter
ficoml
inc
gs
xlat
pop
cmpsl
adc
sbb
inc
insb
orb
jg
pushl
out
cmpsl
xchg
push
sub
aam
or
dec
cmp
mov
out
inc
addr16
aam
inc
ds
xor
push
sbb
in
mov
lock
mov
cwtl
fldcw
in
pop
xor
lock
pop
xlat
mov
stc
and
js
pop
pop
xor
mov
std
add
sbb
xchg
dec
jnp,pn
add
insl
push
mov
cmp
push
out
repz
xchg
das
pusha
iret
add
dec
inc
out
scas
out
inc
or
sub
cmpsb
mov
add
stc
sahf
lea
xchg
imul
clc
push
sbb
or
loop
cwtl
testb
mov
xchg
mov
cmp
xchg
lea
loop
fcompl
add
arpl
adc
sbb
shr
mov
cmp
adc
mov
ds
rcr
cmp
push
data16
pop
cmp
fisubrl
add
cmpsl
loop
cvtdq2ps
xchg
sub
sub
sub
and
in
rcrl
mov
mov
or
loop
sarb
notb
rcr
les
subl
in
cmp
add
xorb
scas
dec
mov
leave
cmp
mov
and
sarb
adc
mov
xchg
fidivrl
or
lods
and
fisttpll
adc
push
std
lcall
addr16
pop
jmp
enter
mov
adc
cmpsb
jecxz
aaa
daa
and
js
fisttpl
pop
rolb
jmp
push
lret
and
or
aam
adc
icebp
sub
std
arpl
sbb
adc
jae
lock
roll
int3
aaa
cmp
jb
in
cmp
xchg
enter
inc
inc
mov
gs
arpl
cmpsl
jl
lret
pop
cmpsl
repz
jbe
into
lret
roll
test
push
cmpsb
aas
test
test
add
in
adc
sbb
outsl
mov
and
hlt
popa
dec
add
mov
cmc
xor
push
add
out
out
aam
or
jle
mov
and
imulb
push
in
ficoms
vsubsd
fidivs
je
pop
cmc
jns
xchg
les
pop
jb
jno
push
jnp
outsb
pop
loope
xor
enter
mov
sub
imul
lahf
fisttpll
xor
cmp
dec
or
sub
fisubl
xor
jmp
dec
push
pushf
mov
nop
aas
pop
fimuls
dec
sbb
inc
xchg
or
rcrb
bndstx
int3
dec
cld
pushf
cmp
xlat
xchg
xor
xchg
mov
cltd
pop
jp
out
xchg
add
cmpsb
jbe
lea
adc
dec
es
in
mov
out
push
mov
push
iret
sahf
mov
pop
outsb
andb
xchg
mov
cvtps2pd
scas
mov
js
push
mov
jl
fdivrs
lods
movsl
je
push
cmp
or
imul
stc
out
mov
fnstenvs
popf
lret
cmp
int
cmovge
call
push
jecxz
mov
fimuls
pop
fdivrl
hlt
sub
or
imul
movsb
xchg
xchg
lret
or
mov
cld
mov
mov
je
dec
xor
testl
stc
cmc
loope
and
mov
mov
inc
icebp
lods
dec
dec
xor
and
and
mov
in
pusha
in
gs
adcl
gs
movsl
xorb
gs
jns
push
pop
outsb
lds
scas
lock
pop
cmpsl
sbb
test
mov
mov
in
cmp
cwtl
xlat
hlt
daa
icebp
pusha
gs
sbb
test
cmpsl
xchg
insb
fiaddl
int
cmp
fistpll
mov
dec
mov
int3
repnz
sub
dec
jmp
cmp
jl
rolb
ret
arpl
sbb
leave
sbb
dec
cmp
mov
fbstp
adc
gs
daa
dec
jge
mov
dec
je
outsb
jle
sbb
cmp
outsb
shlb
pop
and
dec
repnz
sub
mov
rcr
push
and
push
mov
pop
fadds
out
es
fisttpll
out
jbe
mov
out
push
xchg
out
pop
adc
imul
pop
pop
rorl
rcrl
sbb
bound
cwtl
inc
and
cld
push
inc
fstpt
jbe
pusha
sti
xchg
mov
iret
push
mov
pushf
pop
das
movsl
sub
pop
fcoms
push
sub
mov
adc
xchg
or
loope
loop
ficomps
mov
dec
popf
int3
jb
scas
pop
ret
and
xor
insl
sahf
pop
sbb
gs
lock
imul
pop
pop
inc
xchg
lea
scas
out
inc
xchg
ljmp
or
or
sbb
jnp
pop
aad
je
mov
testl
cmc
mov
rcll
jmp
pusha
pusha
loopne
xchg
ret
adc
cmp
movsb
rorb
xchg
cld
or
fdivrs
sbb
xor
clc
push
fnsave
dec
mov
jl
mov
frstor
aas
mov
xchg
ja
jg
pop
or
sbb
mov
stos
imul
jne
sub
fwait
orl
movsl
mov
fcoms
inc
jp
lret
fdivrs
mov
pusha
push
pop
in
cmp
fmuls
popa
mov
ss
add
cmp
fstpt
cmc
push
fwait
push
pusha
pop
pop
fucomip
inc
loop
shlb
push
in
sbb
jae
xchg
lock
vminpd
lds
icebp
arpl
lods
pop
xchg
out
inc
inc
push
aas
and
ret
lea
loop
jp
out
mov
sahf
mov
fiadds
or
notl
dec
test
lahf
pop
cmpsl
sub
sub
lahf
rcr
lcall
or
cmp
sbb
xchg
arpl
mov
into
add
adc
add
adc
mov
and
idivl
mov
outsb
adc
add
scas
dec
xchg
iret
jge
ja
scas
test
movl
ds
int
fcompl
aam
lahf
xor
xchg
mov
lret
jne
pushf
test
pop
jle
jecxz
jmp
sub
iret
in
fwait
test
jp
cli
popf
jle
adcb
jg
jae
push
aas
xchg
aaa
mov
cld
dec
inc
loopne
outsb
mov
pop
aam
push
sbb
adc
dec
fisttps
movsl
push
pushf
jo
mov
push
pop
pop
and
leave
push
stos
sub
jno
mov
rcl
loopne
and
popf
lcall
ss
lahf
xchg
jmp
jnp
imul
repz
push
imul
out
xlat
xchg
jne
jae
out
cmpsb
mov
stos
mov
xchg
scas
test
jne
aad
addr16
push
iret
mov
mov
adc
pop
xchg
pop
lcall
fs
cmp
aam
in
aaa
mov
enter
dec
inc
dec
dec
push
repnz
push
mov
in
stc
adc
cli
xor
insb
ffree
into
cld
pop
cmp
movb
add
movsl
bound
dec
pusha
xor
jmp
out
mov
push
cli
xor
sti
or
orb
add
push
mov
jecxz,pn
insl
xchg
out
push
jp
imul
mov
cmc
popl
and
mov
sbb
xor
aaa
jo
xlat
int3
sub
jbe
cli
lds
imul
mov
clc
jl
pusha
xchg
jge
sysenter
cmp
inc
sbb
add
idivb
xchg
sbb
cmpb
sub
out
sbb
arpl
mov
lret
jno
ret
mov
cmp
mov
adc
xchg
pop
cmp
push
push
loope
out
out
mov
fisttpll
lea
aam
xchg
movsl
adc
push
mov
xor
inc
pushf
fsubs
inc
imul
stc
adc
aas
js
sbb
out
stc
ja
mov
mov
jmp
jne
mov
test
mov
loop
cmp
jg
mov
dec
pop
jne
inc
jo
rorb
sar
das
inc
jge
inc
sub
sbb
out
push
jg
mov
in
lea
mov
shll
mov
sbb
xchg
in
push
gs
or
add
test
test
cmpsb
adc
lea
push
mov
sub
cmp
popa
cli
scas
ret
sbb
out
fisttps
mov
pushf
push
iret
pushf
push
shll
pop
cltd
inc
lret
fisttps
pop
fidivrl
mov
jmp
sub
lea
xchg
rorl
clc
jns
inc
aas
pop
or
loope
gs
adc
out
push
gs
aas
cwtl
jecxz
or
jnp
cld
shll
add
xchg
scas
xor
xor
cmp
add
fdivrp
jecxz
insl
inc
push
pushf
mov
scas
fistpl
add
jle
mov
add
imul
mov
cmp
mov
fdivr
sub
inc
sbb
mov
enter
test
test
adc
xor
mov
daa
xor
and
stos
sub
fisttpll
fsubl
mov
add
jg
test
test
ficompl
loopne
pop
or
daa
xchg
cmc
bnd
lods
lea
flds
pop
xor
and
mov
out
lods
fbstp
enter
out
cltd
sub
outsb
sti
pop
jno
ror
push
mov
jp
and
xchg
les
or
mov
daa
faddl
mov
xchg
sahf
mulb
cmc
scas
add
cmp
pop
rcll
mov
or
sbb
sbb
push
mov
or
filds
dec
xor
mov
out
push
cmp
stos
nop
fdiv
inc
adc
and
or
inc
push
std
sti
aam
dec
scas
jo
add
and
ss
aam
mov
inc
adc
jp
cld
out
icebp
xchg
out
lock
imul
jmp
or
xchg
adc
cmpsb
cmp
fnstcw
add
and
add
punpckhwd
xchg
jmp
stos
dec
cmc
loop
push
and
js
sub
fdivp
push
cmpsl
cmpsb
sbb
xor
dec
sahf
ljmp
xchg
cwtl
xchg
inc
push
xchg
pause
addr16
fsave
loopne
pop
jns
fsubl
and
cmpsl
or
ret
test
faddl
mulb
ret
inc
jb
out
popf
in
mov
sub
pop
sarb
std
pop
or
adc
xorl
jb
sub
loop
jle
out
mov
loopne
aaa
ds
dec
sti
jmp
xchg
pop
rorl
repz
loop
xchg
sbb
dec
jno
cmp
and
pop
push
nop
mov
es
add
mov
or
add
add
leave
mov
outsb
and
jmp
inc
xchg
xchg
pusha
test
xchg
jg
mov
aas
mov
push
test
les
insl
loop
int
repz
frstor
ret
movsb
jb
in
cmp
cs
xchg
test
or
cmp
add
mov
and
pusha
dec
and
test
jne
jae
aaa
out
mov
push
aas
dec
add
loope
loopne
repz
in
int3
arpl
mov
or
ja
ljmp
lods
xorl
out
pop
mov
cmp
mov
fdivs
push
mov
incb
add
scas
push
dec
cmp
push
sbb
sub
xchg
mov
sbb
das
insb
imul
pusha
out
cwtl
mov
cmp
mov
iret
mov
or
roll
lcall
jno
lahf
scas
push
mov
lret
lret
loop
jnp
incl
dec
inc
dec
stos
movsb
ss
sti
inc
mov
cmp
bound
addr16
insb
push
aad
adc
xor
push
mov
cmc
popf
lods
pxor
push
jbe
repnz
imul
pop
pmaxsw
inc
and
mov
xchg
testl
push
mov
outsb
add
adc
pop
adcb
xchg
fistpll
mov
fsts
fdivs
mov
and
sub
fbld
sbb
fdiv
out
lret
sbb
mov
dec
lds
lea
out
xchg
sub
xchg
cs
ds
mulb
lahf
sub
xchg
mov
pop
test
dec
and
fwait
shll
jns
xchg
pop
ss
and
mov
xor
daa
adc
inc
push
popf
xchg
rcr
lret
outsb
pop
dec
pushf
pop
pop
adc
ljmp
or
cmp
jecxz
and
stc
mov
sahf
mov
leave
das
push
in
nop
out
xchg
or
pop
pop
pop
cmc
jae
and
adc
sub
push
add
adc
les
outsl
dec
stc
pushf
push
pop
push
add
aaa
mov
notb
cmp
sbb
lock
es
dec
mov
ljmp
push
rorb
in
int3
cs
pushf
pop
shr
inc
cmp
shlb
call
imul
sbb
adc
rol
xchg
call
fistpl
loopne
aas
mull
or
aaa
xchg
mov
int
add
inc
push
dec
push
clc
dec
rclb
mov
pop
cmp
daa
pushf
cmp
cmp
push
scas
daa
movl
popa
cmp
pop
aaa
xor
mov
pop
cs
dec
cmp
fsubrs
aam
loopne
cmpsl
fsub
sub
pop
repz
add
jae
out
and
push
push
inc
shl
push
aam
adc
test
mull
dec
pop
xor
pop
popf
ret
mov
arpl
xchg
test
inc
sbb
in
or
iret
mov
insb
sahf
sub
cmp
stos
and
ds
dec
orb
xchg
test
mov
icebp
mov
xor
stos
and
insl
jno
adc
ret
in
add
fldcw
jne
push
mov
mov
dec
xchg
ret
pushf
je,pn
cli
rcr
pop
mov
loope
dec
xchg
rcrb
ret
cmpsl
inc
push
jp
fildl
ficoml
sahf
pop
cltd
sub
loopne
lret
lock
add
adc
sbb
das
inc
inc
in
push
adc
jno
shll
aad
push
stos
or
dec
adcl
jp
ret
dec
xor
xchg
sub
dec
xchg
xchg
or
xlat
xlat
lea
lea
xchg
pop
inc
out
add
add
cmp
mov
loopne
mov
sub
add
dec
mov
push
popf
xor
stos
cld
adc
jecxz
cwtl
repz
movsl
inc
cmp
jp
sbb
adc
out
xor
scas
mov
mov
jae
pusha
and
cmp
lcall
sub
pusha
or
jo
clc
push
and
xor
cmove
jb
imul
add
popa
stos
sbb
out
call
adc
iret
push
and
jl
ds
cmp
inc
xchg
int3
cltd
test
rcrb
dec
out
cmp
cli
push
loopne
enter
pusha
cli
imul
push
int
push
movsl
stc
jp
jne
mov
cmp
mov
add
fsubrs
pop
and
int
lods
jbe
dec
and
sbb
dec
and
sub
ljmp
cld
jo
sub
hlt
adc
mov
mov
sbb
aas
call
leave
add
out
rol
pop
mov
inc
mov
dec
dec
push
pop
addr16
adc
ror
cmpb
imul
ss
mov
mov
fsts
repnz
and
push
jg
bound
add
hlt
leave
or
orl
outsb
add
inc
imul
std
or
dec
mov
testb
sar
rclb
aas
lcall
sbb
mov
xor
iret
sub
xchg
mov
scas
outsl
cs
int
outsl
and
iret
sahf
mov
mov
pushf
xlat
in
push
sbb
fnstenv
and
or
jbe
adc
mov
pop
and
movsl
sub
cmp
jno
adc
fdivl
push
fucomi
lea
xor
and
pop
xor
in
test
jno
andl
adc
roll
sub
fidivrl
lds
xchg
and
enter
cmp
push
and
jno
enter
xchg
aam
popw
int
addb
ss
cmp
fsubrs
jg
cmp
dec
mov
dec
sbb
jno
insb
pop
lcall
fisubrl
nop
out
add
int
or
loope
jae
sahf
push
in
sbb
dec
out
dec
jns
cmp
rorl
pop
rcrl
dec
jg
xlat
mov
gs
lret
outsl
pop
das
add
dec
daa
mov
dec
mov
sbb
andb
xchg
lock
cld
dec
push
inc
fadd
xchg
push
jbe
pushf
hlt
gs
loope
pop
shl
call
fs
xor
outsb
or
in
pop
aaa
inc
dec
xchg
xchg
test
jge
stos
fs
inc
mov
icebp
cmovns
andl
js
sti
pop
addr16
rorl
shrl
add
cmpsb
lret
rcr
pop
dec
xchg
push
fnstsw
scas
mov
bound
mov
sub
fcmovnb
cli
dec
pop
loope
mov
call
and
dec
enter
mov
push
sarl
in
lahf
aam
lret
das
sub
mov
mov
arpl
jmp
rcrb
test
dec
mov
shr
iret
lahf
aam
adc
xor
adc
mov
icebp
subb
or
lds
xchg
nop
push
jmp
ja
in
in
outsl
push
xor
and
mov
lcall
mov
jecxz
movsb
gs
dec
push
mov
pop
out
scas
or
push
pop
test
adc
jl
and
sti
push
mov
nop/reserved
fisubl
jge
call
sahf
jbe
mov
inc
cmp
lcall
pop
aas
roll
and
lods
lods
inc
pop
adc
dec
mov
in
cld
insl
je
push
ds
jb
xchg
jge
push
mov
mov
in
cmpsl
add
xchg
jge
out
dec
out
insl
xchg
ds
adc
mov
cmpsl
aad
mov
xchg
mov
stc
addr16
push
inc
sub
fs
dec
ret
jle
test
and
jl
sarl
pop
jbe
adc
jmp
adc
jo
aad
pop
nop
fisubrl
mov
mov
push
fnstenv
mov
dec
mov
insb
and
mov
pushf
leave
iret
adc
sti
xchg
pop
loopne
pop
pusha
xchg
pop
push
jbe
shlb
and
popf
rcll
pop
in
add
pop
sub
inc
lods
movsb
pop
cmp
in
ret
das
test
hlt
dec
inc
daa
add
pop
dec
loopne
and
xor
pop
mov
mov
mov
popf
or
fcmovnu
dec
adc
push
out
mov
test
bound
cmp
adc
cmp
mov
dec
sahf
mov
lds
lcall
inc
jb
push
ja
mov
ret
negb
dec
call
pop
pop
or
or
xchg
sarl
outsl
bound
insb
pop
sbb
pop
into
mov
jge
mov
scas
adc
scas
mov
stos
cli
loop,pn
mov
jns
sbb
sbb
fstpl
add
pop
mov
or
lahf
dec
sbb
movsb
cmp
aam
and
pushf
aad
lret
mov
pusha
mov
inc
sub
jo
sahf
stos
xor
sbb
sub
jg
stos
mov
ljmp
dec
decl
adc
push
fdivrp
jb
rclb
push
pushf
mov
lock
je
repz
fwait
loopne
mov
push
fs
repz
ss
jno
jo
add
insl
adc
fnstenv
test
enter
sub
dec
orb
mov
or
lret
xor
cltd
mov
ljmp
jmp
jne
jecxz
inc
or
lea
sti
jbe
sub
enter
jg
pusha
cmp
repz
jne
xchg
sub
sub
dec
mov
lods
dec
imul
dec
pop
jg
xchg
fbstp
jne
negl
cmovp
push
xchg
jge
std
inc
scas
rcrl
cmp
xor
stos
adc
pop
adc
lods
jg
sub
push
out
push
dec
add
jns
negl
sbb
jge
outsb
lods
mov
in
mov
rcr
ljmp
mov
pusha
cmp
sbb
fsub
jae
cwtl
movsl
gs
lods
dec
cmpsb
cmpsb
orb
pop
sbb
xor
stos
call
push
cmp
jne
nop
jnp
jmp
mov
dec
test
sub
fsubl
jmp
aas
jne
push
test
movsb
sbb
xlat
scas
jl
or
pop
sahf
push
data16
sub
test
add
daa
push
jbe
xlat
inc
stos
lcall
mulb
xor
fidivs
or
jg,pt
fsts
jbe
adc
mov
insb
mov
stc
fs
mov
push
iret
std
out
xor
xor
aaa
sbb
clc
ret
push
ret
sub
sti
sahf
sub
adc
sub
sbb
mov
sbbb
daa
mov
ret
mov
inc
fisubrl
dec
rcl
inc
fnsave
mov
mov
xchg
push
ficompl
lds
mov
mov
jp
scas
outsb
movsb
aaa
dec
jmp
sbb
cmp
es
xchg
sahf
sarb
ficomps
int3
int
mov
mov
cmp
and
inc
dec
subl
mov
cmp
pop
cmp
cmp
lods
sbb
dec
inc
push
addr16
ljmp
mov
dec
cltd
nop
jge
cmp
cmc
and
add
and
xor
xor
data16
outsl
test
insl
xor
cwtl
jge
or
dec
mov
or
add
lret
push
js
mov
sbb
cld
lret
filds
in
fadds
pop
das
xchg
stc
jmp
push
mov
cmp
xor
sbb
push
mov
adc
rcll
aas
push
jnp
xchg
aad
adc
data16
add
cmp
sbb
in
sbb
push
fs
fs
pop
ror
jae
insb
call
and
push
data16
scas
out
mov
out
jp
scas
call
dec
jl
adc
xor
cmp
dec
dec
fnstsw
add
add
leave
mov
xor
mov
push
insb
fmuls
int
std
sbb
mov
mov
imul
lock
insl
scas
cli
mov
mov
in
cmpsl
adc
pop
adc
pushf
cld
xor
iret
aad
je
jp
fnstsw
out
pop
and
rcr
jns
hlt
cmp
mov
fs
ss
adc
movsb
pop
test
outsl
cmp
sub
test
lea
les
xor
pop
xchg
dec
push
mov
jnp
cmp
int
clc
leave
push
aaa
xchg
ja
int
iret
ja
or
in
and
sub
xlat
cmpsl
ret
xchg
cmp
ret
daa
fcoml
xor
or
inc
cld
mov
mov
ret
divl
mov
inc
test
jnp
addr16
test
outsl
adcb
aaa
xchg
icebp
negb
adc
dec
enter
pushf
movb
xor
aaa
jo
inc
jae
daa
pop
sbb
lods
jns
scas
clc
push
arpl
xlat
insb
dec
aas
mov
int
inc
xchg
stos
mov
out
sbb
dec
sub
ja
and
fistpl
sub
jg
gs
xor
xchg
int3
xchg
push
scas
add
mov
mov
cltd
xor
and
dec
aam
pop
lods
mov
inc
mov
or
adc
jo
cmpsl
popf
mov
push
cmpb
leave
xor
adc
sub
jo
cmp
pop
mov
loope
aas
mov
and
mov
cmpsb
adc
sub
pushf
jecxz
adc
pop
or
daa
mov
and
sub
cmpl
outsb
pop
sbb
daa
popa
scas
inc
into
xor
push
into
cmc
mov
mov
aas
mov
mov
jns
addb
lahf
cmp
rcrb
lods
int
shlb
loop
les
je
shll
sbb
mov
xchg
xchg
sti
dec
pushf
ja
cmpsb
leave
push
dec
mov
cmpsl
adc
adc
add
push
out
cmp
cmpsb
xor
xor
mov
fisubs
dec
cmp
push
out
in
lcall
fisttpl
inc
or
xchg
inc
aad
inc
lds
mov
cmpsl
fsubrl
xor
es
fstpt
lods
iret
lea
sti
mov
add
sbb
or
adc
clc
fnstcw
in
les
popf
sbb
dec
gs
dec
popf
or
jb
aad
out
jecxz
jae
shrb
add
sub
push
and
xor
adc
adcb
shll
scas
sub
jne
in
mov
adc
ret
scas
inc
push
addr16
add
mov
jmp
push
mov
sbb
adc
jge
and
jo
push
mov
scas
rcrl
and
pop
inc
pop
push
iret
sbb
dec
cmc
xchg
mov
lds
imul
xor
mov
fildll
pop
jb
ficompl
out
mov
inc
int3
mov
loope
movsl
or
fcoml
pop
std
dec
xchg
mov
mov
push
cmpsb
add
sub
insl
sub
aas
popl
mov
movsl
adc
cli
out
pop
sahf
test
aaa
movsb
dec
out
or
mov
pop
aas
outsl
inc
push
fstpt
xchg
add
mov
sbb
call
pop
jge
add
mov
pinsrw
xor
fistps
jl
inc
inc
pop
ret
leave
sti
icebp
sbb
xor
pop
sti
mov
lret
sub
cmovb
jae
sub
cwtl
nop
add
out
add
cmp
add
leave
and
rcrl
ja
mov
ficoml
dec
movsl
push
imul
ljmp
cmp
sub
hlt
fists
popf
int
mov
ds
or
sub
repnz
sub
gs
push
add
movntq
out
adc
jno
hlt
mov
into
stos
js
sub
sub
sub
dec
sbb
fstps
int
mov
js
dec
lods
jbe
mov
lods
into
mov
pop
sub
fmulp
and
nop
mov
push
push
rorl
sbb
std
ja
mov
fistpll
lock
rcrb
out
out
in
xchg
icebp
mov
jg
xor
xlat
jl
push
push
push
cltd
lcall
orb
lret
and
push
in
mov
aam
adc
lea
mov
jp
add
or
ja
loopne
push
arpl
imul
mov
mov
popf
jbe
cmc
pop
dec
cmc
pop
dec
insb
push
inc
adc
sub
ss
clc
push
pushl
stos
mov
sbb
adc
push
xor
xchg
and
nop
sbb
sbb
es
adc
test
push
mov
je
jmp
sub
imul
insb
jb
mov
push
in
or
pusha
insb
mov
jmp
mov
lods
jo
and
loop
lret
in
fincstp
xor
push
jbe
add
mov
pop
iret
cmpsb
xor
mov
xchg
cli
cltd
cli
pop
dec
cld
sahf
add
insb
add
ret
pop
test
inc
pop
xor
inc
movsb
stos
cmp
out
cmp
test
jecxz
cwtl
xchg
daa
adc
pop
dec
cmpsb
stc
fwait
lret
mov
out
adc
mov
inc
inc
scas
out
or
movsl
sahf
pop
cmp
fsubrp
sbb
dec
shr
fnop
fcomi
mul
add
testl
or
dec
cmpsl
data16
mov
jne
in
js
adc
pushf
cmp
lods
mov
cmp
dec
mov
inc
mov
cltd
fcomip
lock
cmp
popf
sbb
jecxz
into
enter
sbb
loopne
jmp
loope
jae
adc
mov
and
dec
cmpsl
mov
out
xor
mov
inc
lds
out
xchg
repnz
pushf
xlat
repz
jns
mov
xchg
or
fdivrs
les
sub
orb
adc
ret
xchg
pop
jl
push
push
pop
push
das
clc
dec
stos
cmp
js
jns
add
sub
jne
pop
jno
arpl
push
or
dec
inc
hlt
out
xorl
jg
sbb
fildll
ljmp
jno
fnstenv
push
jmp
push
outsb
mov
push
inc
ret
and
lret
lods
jno
inc
adc
cmpsl
dec
or
inc
vpmaxub
cmc
mov
cmp
pop
push
sub
scas
daa
loop
shrl
xchg
jle
loope
and
sbbl
aaa
jmp
incl
repz
push
adc
mov
stc
les
adc
add
pop
cmp
loopne
push
inc
inc
xchg
push
jb
jae
fcomi
xchg
insl
pop
stc
xorb
aas
stos
and
push
popa
mov
fbstp
mov
jmp
pusha
xor
andb
out
sbb
js
mov
jge
sub
addr16
xor
pop
arpl
stos
or
inc
cmc
jecxz
push
dec
add
jo
mov
imul
dec
in
push
mov
es
lahf
dec
sbbb
imul
scas
leave
cmp
cmp
jmp
dec
jbe
mov
sar
icebp
dec
repz
int
fistl
dec
je
xor
fnsave
jae
cmpsl
lret
and
mov
dec
mov
mov
arpl
cmpsb
mov
jmp
or
pop
scas
aas
jae
enter
or
mov
insl
or
test
mov
hlt
push
push
outsb
cld
cld
movsb
mov
arpl
lcall
push
cmp
test
pop
mov
andl
popf
inc
push
sub
lcall
jns
aad
push
and
xor
mov
lahf
adc
pop
stc
stos
mov
ja
movsl
cmp
shl
pop
ss
jno
scas
rol
push
mov
lds
das
test
cwtl
adc
lods
arpl
lock
test
cmp
lods
ds
add
repz
mov
xchg
push
ljmp
mov
std
jnp
ss
popa
push
push
dec
sahf
imul
aas
pop
into
ret
adc
es
jp
lods
jge
test
adc
out
xchg
sbb
mov
pushf
cltd
aaa
jp
xchg
pop
mov
pushf
pop
sub
jge
mov
mov
jnp
nop
adc
add
pop
jmp
push
dec
inc
adc
xchg
fs
nop
mov
arpl
mov
loop
jge
ret
dec
xchg
cwtl
popa
xchg
lcall
call
inc
push
jae
ss
inc
aaa
fsubr
mov
pushf
aaa
or
adc
out
cmp
dec
inc
cmp
leavew
jg
int
and
and
push
pop
mov
add
sbb
shl
jo
xchg
ret
adc
lods
xor
iret
test
inc
cmp
jae
pop
mov
and
cmpsb
dec
ret
hlt
data16
sbb
push
icebp
sub
or
lock
mov
inc
dec
test
test
popf
dec
add
jnp
xchg
fsts
out
mov
stc
sbb
movsb
scas
imul
xor
or
ficoml
es
jg
lret
mov
lahf
push
int3
sbb
arpl
mov
cmp
hlt
lret
hlt
xor
mov
jae
popf
add
cld
fdivl
cmpl
pop
arpl
mov
push
imul
shll
scas
dec
out
sub
pop
jle
xchg
inc
lea
sub
lea
orl
ds
mov
stc
fs
mov
xchg
add
mov
dec
xchg
push
mov
push
shrl
inc
xchg
or
lods
push
popf
mov
cmp
aaa
cmp
ficoms
aam
mov
pop
std
mov
dec
test
fidivl
iret
sbbl
jbe
div
inc
adc
std
xlat
or
rcrb
push
loopne
jmp
add
fadd
loope
pop
call
push
lods
cwtl
xchg
push
mov
adc
dec
arpl
insl
int
dec
inc
jl
jmp
mov
lahf
loope
sub
adc
xchg
jl
data16
xchg
into
jg
dec
rcll
mov
fildll
pop
into
jae
push
scas
dec
push
xor
test
sub
dec
mov
sbbb
mov
add
addr16
jecxz
dec
xor
cmp
xlat
add
adc
jl
jo
cmp
in
jmp
add
xor
pusha
addr16
add
cwtl
adc
pop
or
mov
les
fdiv
and
mov
sub
outsb
jecxz
mov
sbb
mov
lods
jno
mov
inc
push
jmp
jmp
and
xor
out
dec
out
test
lods
push
cmp
orb
loopne
pop
mov
push
das
je
nop
pop
inc
cmp
mov
dec
cmc
push
fdivr
inc
jle
pop
xorb
jg
mov
ret
inc
aad
xchg
push
mov
cwtl
lcall
sbb
inc
imul
pop
leave
rcrl
jns
lock
aaa
xchg
sbbl
or
iret
das
jl
push
test
aad
cmp
ret
scas
and
jae
push
xchg
rdtsc
dec
repz
lret
xchg
repz
and
jnp
in
neg
stos
add
xor
clc
icebp
outsl
es
jmp
pop
orb
fistpl
xchg
mov
dec
mov
fistl
lcall
sub
cmp
stos
or
jns
cmp
icebp
imul
or
movsl
cmp
fisubrl
or
cmp
dec
cmp
mov
xchg
es
repnz
lds
adc
add
xor
xlat
sti
sbb
repnz
mov
inc
rorl
mov
aam
imul
rclb
int3
pop
xor
rcr
or
add
pop
mov
push
scas
or
fldenv
mov
pop
dec
xchg
pusha
or
icebp
adc
pushf
sub
sbbb
and
adc
out
outsb
icebp
int3
imul
lods
jns
push
pop
xor
test
xchg
xor
adc
or
fiaddl
loopne
inc
lahf
in
cmpps
pushf
ret
inc
sarb
mov
jno
fs
imul
adc
jmp
mov
sahf
aam
shl
inc
in
push
pop
push
and
outsb
mov
unpcklps
movsb
cltd
lcall
add
popf
mov
and
dec
cwtl
mov
or
fwait
cltd
or
mov
xchg
adc
xchg
cmpsb
cwtl
fnstenv
sub
ds
xor
or
xchg
mov
incb
lss
jbe
call
lods
mov
xchg
cmp
sub
sub
ljmp
sbb
xor
push
jnp
fidivrs
movsl
jp
adc
int3
cmp
xor
stos
or
frstor
xor
rcrb
ret
dec
loop
repz
push
push
mov
shrl
inc
mov
call
jle
insl
or
add
xorb
push
repz
push
cmp
aaa
cmp
cmp
rorb
adc
into
clc
test
pushf
fimull
sbb
adc
mov
xor
clc
imul
push
dec
or
xchg
je
insb
sub
cmp
cmp
stos
in
into
mov
push
ljmp
test
xchg
jnp
sub
popf
sbb
xor
nop
or
mov
pusha
sti
notb
mov
xchg
sub
lods
mov
mov
jbe
icebp
xor
add
sti
stos
push
pop
mov
aad
or
das
insl
push
xchg
mov
pop
push
jne
adc
or
or
outsl
pop
xlat
add
or
dec
jg
sub
jb
jg
jmp
sarl
inc
les
mov
sbb
popf
iret
es
mov
rorb
sbbl
mov
sbb
inc
movsl
pop
pusha
loope
shrb
test
mov
out
sbb
xchg
mov
loop
xchg
dec
je
push
and
cmpsb
add
xchg
aas
cmp
insb
out
in
push
mov
push
sub
test
xchg
mov
imul
and
es
outsl
ss
leave
jl
lods
jecxz
lret
push
sbbl
or
mov
repz
push
and
outsb
push
jecxz
xor
xchg
dec
pop
jb
sbb
sbb
mov
pop
icebp
in
lret
pop
adc
ret
mov
adc
shll
xor
dec
mov
dec
adc
fdivrs
sahf
hlt
dec
or
mov
fisubrs
pop
out
nop
or
and
lea
pop
aad
int
xchg
mov
adc
das
xchg
adc
mov
push
sub
int
lea
pusha
je
dec
sub
xchg
stc
aam
in
mov
in
out
std
jbe
cmc
movsl
mov
lea
iret
hlt
sub
shlb
push
aad
xchg
imul
xor
inc
jb
daa
jae
sti
outsb
inc
lods
mov
add
xchg
loopne
push
jbe
insb
push
out
ret
or
or
lods
fxam
std
lock
lcall
dec
or
arpl
add
aam
stos
push
mov
mov
fwait
rcll
lds
cmp
push
sbb
out
mov
scas
mov
pop
dec
pop
fistpl
inc
inc
fwait
test
loop
adc
popf
dec
jp
push
cs
mov
push
sbb
cmp
in
and
fsts
daa
sub
jp
xchg
xchg
int3
in
xchg
ds
pop
int
sub
push
pusha
imul
out
adc
pop
dec
aad
xchg
inc
mov
add
in
mov
push
mov
jmp
rol
pusha
adc
outsl
xor
scas
fbld
xchg
stos
sbb
addr16
mov
pushf
inc
scas
xchg
mov
mov
dec
jns
test
mov
ret
pushf
shrl
jmp
adc
inc
pushf
adc
pop
subl
push
mov
sarl
out
movsl
cmp
xchg
sti
jl
and
pusha
and
add
and
pop
add
inc
jno
push
pop
in
xchg
cmp
into
or
test
lods
dec
iret
jecxz
inc
out
jne
mov
loopne
pop
mov
or
sub
xor
fnstsw
stos
repnz
bound
jge
mov
in
test
push
jno
or
mov
out
mov
and
pop
int
mov
dec
mov
xor
adc
cltd
push
cmp
test
imul
ja
xchg
cmp
dec
cld
jno
add
ss
dec
jno
jp
xchg
jae
inc
add
mov
ret
enter
jmp
popa
jp
repnz
cmp
outsl
aad
out
xor
cmpsb
pop
lods
test
sbb
mov
add
ret
inc
repnz
out
test
ljmp
xor
jle
aaa
sub
mov
xlat
xlat
test
jmp
movsl
cld
xor
jb
lahf
stos
popa
inc
int3
cmp
pop
fiaddl
lods
dec
in
fimull
mov
in
iret
imulb
jle
mov
push
jb
or
xor
shll
and
jmp
mov
xor
js
nop
mov
push
mov
push
insl
push
xor
and
fnstenv
pop
mov
mov
insb
cmp
decb
adc
scas
hlt
and
aam
sub
sti
or
andl
cmp
push
pop
call
adc
dec
je
ret
inc
add
inc
push
sub
lods
sub
mov
push
cmpsb
adc
rcr
filds
sbb
xor
mov
lods
dec
repz
sbb
fs
movsb
test
out
or
bound
insl
dec
je
xchg
sti
mov
mov
pop
neg
and
sbb
ds
shrb
fbld
in
push
and
sub
add
pop
sub
cmp
and
fidivrs
testb
sbb
push
ret
arpl
cs
lock
int
pushf
sbb
fidivrl
push
adc
and
xchg
ret
sti
or
pop
or
jl
cmp
divb
add
stos
ljmp
cmpsl
sbb
outsb
pop
ja
js
fnstcw
stc
loop
hlt
add
pusha
mov
pushf
orb
cltd
lods
mov
ljmp
sbb
inc
mov
xlat
arpl
outsb
imul
xor
std
cli
aad
jb
inc
in
pushf
ret
ret
mov
pop
arpl
add
lcall
pop
pop
test
mov
mov
mov
xor
mov
jmp
out
or
pop
pop
mov
leave
ja
dec
jnp
inc
pop
insl
xchg
jmp
jne
xchg
pop
mov
popf
sahf
sbb
fsubrl
cmp
iret
iret
out
xchg
lret
pop
stos
insl
xor
jbe
mov
jb
std
push
out
shl
lret
jne
in
xchg
jge
icebp
mov
cmp
xor
faddl
fyl2xp1
push
ret
xor
pop
ss
xchg
iret
or
ret
push
dec
scas
test
ja
out
adc
jae
icebp
sbb
xchg
dec
dec
addr16
cmp
imul
push
cli
adc
mov
pop
iret
jmp
leave
aas
or
mov
test
rcrl
jle
sub
mov
add
out
pandn
jbe
fildl
mov
jnp
inc
fs
aaa
cwtl
sub
ss
rcrl
outsl
lret
mov
fmulp
dec
into
or
mov
pop
aam
xor
and
scas
mov
in
rorb
leave
pop
push
es
xchg
mov
stc
rol
xchg
imul
inc
mov
repnz
jmp
pop
loope
movsb
sbb
dec
and
sub
add
push
pop
aas
int3
pop
add
daa
pop
adc
cmp
testl
jl
stos
fisubl
adc
test
mov
pushf
push
nop
pop
fstl
mov
jge
cmp
jbe
mov
inc
xchg
pop
fwait
ja
les
cltd
xchg
push
mov
lods
xchg
add
fsubr
cmp
xlat
add
inc
mov
jb
pop
inc
jl
mov
aaa
inc
fsts
add
cmpsb
xchg
mov
sbb
arpl
leave
ja
test
ja
sbb
sbb
sub
adc
mov
js
xlat
xchg
sarb
xor
dec
sbb
jae
js
movsb
cli
stos
mov
test
jl
aas
cmpsl
cs
sti
jbe
bound
dec
adc
jno
ss
out
jmp
mov
pop
add
mov
sub
out
or
jle
jnp
pop
mov
rcl
sub
mov
test
cmc
push
in
cmp
lcall
inc
jmp
clc
jle
movb
adc
jl
mov
insl
in
lods
ret
pop
vmovd
call
jne
sbb
xor
jge
pop
ss
scas
nop
testb
push
repnz
daa
sbb
mov
loop
xchg
fisubrl
aad
sub
repz
mov
push
fwait
aaa
push
shlb
mov
jge
test
jg
in
daa
repnz
js
and
inc
jecxz
jp
movsb
inc
ljmp
jmp
enter
stos
shrl
cmpsb
add
add
fisubrs
fs
fwait
js
daa
test
aas
arpl
lret
jmp
adc
pop
push
aam
repz
stc
mov
sahf
or
cli
pop
cmp
jnp
mov
or
jo
pop
scas
fiadds
ljmp
out
test
jp
cmp
and
xchg
test
aas
pop
or
lods
push
xchg
pushf
lcall
repz
js
pop
xchg
out
or
adc
jl
xchg
clc
mov
loop
jl
ror
pop
adc
cmpsb
test
lds
or
movsl
scas
sub
imul
repz
or
mov
xchg
xor
roll
aam
jno
or
push
adc
mov
and
enter
sbb
xor
xchg
jmp
mov
imul
jl
fsubs
mov
and
pop
les
das
pop
or
sbb
or
pop
fwait
pop
gs
loope
jge
je
and
jp
shrb
fsub
sub
mov
ficoms
xor
or
push
jmp
mov
dec
call
fmul
jmp
and
sub
aad
cmp
jae
jo
pop
mov
les
mov
add
xor
cld
int
xchg
lcall
mov
and
div
fisttps
mov
and
xchg
sub
sbbb
xor
jle
sbb
jae
dec
mov
sub
lods
mov
push
and
sub
inc
mov
scas
sub
push
adc
cld
shr
lahf
or
pop
hlt
mov
jmp
push
leave
lret
mov
push
movsl
lea
aam
fisubs
js
notl
push
xor
movsl
push
mov
ds
add
outsl
and
or
dec
cmpsl
push
push
jp
pop
mov
inc
daa
pop
shll
clc
cmpl
sarb
inc
or
shll
ljmp
mov
xor
push
ds
xlat
loopne
push
pop
jnp
out
cld
movsl
enter
rolb
insl
jge
fiadds
jnp
rcll
add
jp
negl
cli
rclb
icebp
lock
jg
pop
outsb
std
clc
stos
js
add
sbb
sbb
jle
in
aas
movsb
faddl
xor
fld
xchg
dec
imul
das
and
push
aam
push
cmpsl
mov
xor
jns
sub
hlt
into
popa
mov
sub
xchg
cmc
mov
mov
dec
xorb
insl
outsl
ret
ret
imul
mov
ret
in
pop
xor
add
outsb
inc
push
out
ret
sub
loope
cli
jo
cmc
daa
and
add
jnp
and
pop
shll
mov
xchg
push
jp
insb
fists
mov
das
mov
push
mov
fistl
xlat
dec
xchg
mov
adcb
cmp
sbb
das
lds
bound
aad
fdivl
paddsb
out
cmpsb
jnp
scas
and
cs
pop
clc
outsb
inc
mov
mov
xorl
jg
dec
push
adc
scas
inc
sbb
mov
xor
mov
push
aad
jecxz
rolb
das
jnp
lods
or
mov
aas
das
add
pop
dec
jnp
or
or
aam
push
adc
jl
cld
push
xchg
adc
sbb
jmp
xor
shlb
test
into
add
cltd
adc
xor
insb
inc
mov
and
stos
icebp
dec
inc
adc
jg
push
addl
mov
in
jp
fldt
jnp
jne
mov
xor
lcall
xor
stc
or
push
or
aam
sbb
pop
lea
pushf
bts
out
jo
repz
cmpsl
loop
cld
adc
rcll
shrl
push
mov
imul
cli
and
cmpsb
xchg
push
cltd
mov
jno
fwait
cltd
daa
ss
and
jge
mov
push
adc
popf
mov
jg
mov
cs
push
lea
cmp
sbb
dec
ljmp
adc
add
or
call
call
pop
test
cli
xchg
hlt
pop
cmp
sbb
mov
xor
inc
adc
xlat
mov
ficoml
and
mov
sub
sub
sti
insb
in
or
sbb
jo
imul
stc
je
mov
lods
ss
inc
lods
or
shrb
lahf
xchg
pop
jg
sub
inc
jle
cld
push
mov
call
inc
xchg
adc
add
push
popf
daa
xchg
push
pop
inc
ret
cmp
mov
mov
fwait
enter
fdivl
xor
inc
add
bound
push
or
in
push
in
aad
adc
out
mov
aas
mov
mov
std
xor
mov
mov
push
dec
xchg
lahf
enter
lahf
sarl
enter
je
sub
mov
fdivrl
push
stos
pop
and
and
shrb
sub
fldt
ret
lahf
cmpsl
call
xlat
test
in
int
and
imul
rorl
cmp
xchg
mov
sub
rol
bound
or
jns
sbbb
pop
mov
jg
inc
ret
ret
test
adc
fisubrs
xor
push
xor
lcall
mov
jns
jmp
cmp
push
mov
int
mov
mov
jno
nop
pop
pop
add
sub
dec
pop
loop
fstpl
sub
xchg
and
adc
sarb
je
imul
adc
pusha
cld
inc
xchg
adc
andb
mov
aad
dec
cs
rorb
rcll
daa
imul
subb
repnz
pop
mov
orl
test
pop
repnz
pop
ret
pop
data16
jg
mov
lods
pop
sbb
inc
in
pop
sub
enter
rorl
sbb
dec
ja
movsb
jecxz
lret
int
jmp
cmp
addr16
push
adc
push
pop
or
mov
xchg
xor
repz
mov
loopne
push
popf
es
repnz
add
push
jns
xor
jnp
dec
addr16
mov
cltd
cmpsl
xchg
aam
cmp
inc
lods
into
mov
arpl
mov
in
fs
lds
out
pusha
push
adc
inc
movsb
icebp
mov
std
mov
imulb
xor
dec
shl
mov
mov
fdiv
cli
push
mov
mov
adc
mov
cmpsb
xchg
stc
cmpsl
sub
scas
in
in
cmp
call
test
jl
popa
cmp
inc
pop
jecxz
dec
lods
xor
mov
outsl
es
jae
loop
xlat
pop
test
xchg
cmpl
lds
aas
cmp
lds
add
inc
push
mov
cmp
jns
xchg
insl
jmp
adc
imulb
push
pop
dec
push
mov
push
cmp
int
xchg
into
lahf
dec
imul
mov
push
and
lds
or
in
jo
push
cmpsb
hlt
cs
ficompl
adc
dec
loope
rolb
xchg
jae
push
inc
out
sbb
cmp
xchg
call
mov
call
xchg
out
inc
jg
mov
cli
cs
lods
xor
not
pusha
ljmp
mov
xchg
adc
addb
fsubrl
mov
in
mov
mov
push
movsb
and
insl
dec
in
shr
jo
test
xchg
notl
dec
jge
dec
arpl
scas
ficomps
adc
pusha
push
loopne
mov
les
stos
ja
push
lods
lahf
jmp
dec
xorps
movsl
test
jp
push
in
jae
mov
call
pop
cmp
outsb
jno
fldl
and
popa
clc
cmp
fnsave
inc
mov
or
pop
jecxz
pushf
mov
ljmp
mov
int3
mov
or
cmp
inc
ss
fidivrl
xchg
neg
mov
test
xchg
pop
sbb
sub
rclb
cmp
cld
pushf
rcll
mov
aad
push
or
out
jp
cltd
jle
push
inc
jge
mov
ret
loope
stc
movsb
xchg
cmpsb
cmp
fldenv
in
jb
push
sbb
cmp
mov
pop
push
hlt
push
mull
daa
mov
aas
insl
push
mov
xchg
loope
push
int3
push
movl
inc
addl
xorb
mov
and
iret
adc
cmpb
inc
pop
mov
push
add
ret
flds
outsb
mov
fildll
test
iret
mov
push
fucom
jo
push
and
fcompl
sbb
cmp
sub
fildl
mov
dec
rolb
sub
leave
add
stos
sbb
cld
push
xor
push
inc
pop
push
xlat
sub
out
inc
push
cmp
xor
rcrl
lahf
sbb
testl
imul
add
sbb
mov
xor
sbb
pusha
stc
push
iret
std
cmp
dec
dec
cli
dec
and
pop
jl
shl
adc
test
pop
or
sahf
cmp
rorl
popa
cwtl
int
gs
scas
pushf
pop
mov
xchg
jle
pop
out
into
repnz
fmuls
clc
lcall
push
pop
jb
add
shrl
mov
mov
pop
sub
xchg
sbb
popa
fdiv
pop
push
leave
leave
dec
inc
sahf
hlt
in
lahf
lods
sub
dec
faddl
fstpt
mull
adc
into
dec
dec
pop
push
es
ja
insb
sar
jnp
repz
cmp
jb
cli
push
mov
sub
pop
fdivrl
push
pop
xchg
daa
inc
data16
jb
mov
or
std
push
std
add
clc
xchg
inc
jl
pop
lret
aam
add
mov
dec
lahf
and
inc
push
fstl
shrl
aam
mull
cmc
push
arpl
leave
inc
sbb
sbb
mov
adc
adc
push
out
inc
xor
mov
mov
xchg
in
rcrl
or
fistpl
xchg
loopne
or
out
daa
cmp
bound
rcrb
mov
aas
adc
jb
cmp
mov
cmp
push
sub
push
js
adc
pop
dec
subb
inc
fcompl
int
icebp
shrl
stos
andb
jae
push
sti
and
rcrl
xor
sub
push
cmp
cmpsl
hlt
add
cmpsl
int3
sbb
lds
imul
push
add
fidivl
into
mov
out
bound
pop
sub
das
and
fildl
add
inc
in
flds
movsb
mov
push
stc
mov
sbb
jle
sub
outsb
sub
add
cmp
push
outsl
inc
lods
jge
sub
hlt
je
daa
jnp
push
dec
jecxz
fidivrs
push
cs
xchg
ljmp
popa
aam
mov
out
push
xor
pop
outsb
or
xlat
dec
and
push
pop
addr16
jo
ret
jns
pusha
mov
popf
data16
mov
push
mov
shlb
xchg
and
dec
adc
fdiv
cli
bound
repz
aam
adc
push
fnsetpm(287
xor
lahf
mov
and
sahf
jmp
add
test
inc
push
in
and
push
push
in
cmpsl
lcall
cld
notb
jb
aas
jne
xchg
repnz
repz
std
scas
cmp
cmp
nop
mul
mov
cmp
into
cwtl
divl
bnd
loop
fbstp
movsl
fnstenv
insb
jle
xchg
jns
jecxz
stos
dec
icebp
aam
adc
push
push
shlb
faddl
arpl
insl
or
stos
icebp
cmp
pop
adc
call
jge
icebp
lods
push
xchg
mov
sti
xchg
call
mov
xor
xor
adc
xlat
xor
or
pop
arpl
jne
dec
mov
add
into
insl
sbb
mov
lahf
push
and
jge
adc
test
clc
sti
xor
movsl
fcmovbe
repz
push
dec
add
sbb
adc
push
jns
leave
pop
fwait
cld
cmp
sub
xchg
mov
fldenv
sbb
lcall
dec
js
adc
sahf
testl
inc
mov
cmp
xlat
pop
mov
arpl
or
mov
mov
lds
subb
pushl
xchg
std
push
mov
aas
fwait
icebp
lret
mov
inc
inc
nop
imul
test
cmp
fs
insl
xchg
fidivrl
xchg
sub
cs
imul
out
sub
xor
lcall
jae
and
and
filds
inc
sbb
dec
push
xchg
inc
sub
sub
loope
scas
test
push
lcall
cmp
sbb
cmpb
cmp
adc
xchg
xor
into
push
adcl
cmp
cwtl
dec
cld
adc
inc
inc
xchg
push
add
push
xchg
fdivl
mov
inc
cmp
icebp
in
out
cmp
aad
mov
cmp
jecxz
jmp
es
jb
adc
cli
repz
push
lahf
mov
lcall
into
and
leave
pop
cmp
jmp
adc
cltd
fucomp
dec
sbb
rolb
out
psubusw
mov
sbb
int3
repz
bound
pop
fsubl
mov
into
das
bound
notb
xchg
inc
out
dec
movl
mov
cwtl
dec
pop
in
cmpsb
pop
fisubs
and
add
icebp
mov
jns
inc
push
xchg
mov
enter
pusha
push
loope
adc
in
in
std
sbb
xchg
pop
sahf
mov
jg
out
in
jecxz
dec
ret
ss
lds
call
mov
sbb
ror
mov
imul
stc
int
fxch
push
mov
jg
xchg
outsb
and
pop
mov
fisttpl
pop
mov
push
cmp
fcomps
cwtl
andl
push
push
dec
popf
scas
dec
shl
xor
scas
pop
mov
stos
dec
mov
outsb
out
hlt
mov
js
loop
xchg
jb
xor
xchg
cli
clc
in
mov
mov
aas
dec
push
shlb
sub
add
lahf
mov
enter
mov
negl
test
pop
push
loope
pop
adc
push
insb
sub
push
inc
dec
push
ret
lods
jnp
out
mov
inc
icebp
mov
cmp
enter
fmuls
outsl
xchg
out
es
xor
sub
ret
sub
daa
shrb
cmp
sbb
nop
sub
insb
lret
mov
cmpsb
imul
cmpl
xchg
inc
out
int3
xchg
mov
pop
shrl
mov
lods
mov
and
jmp
orl
jmp
popf
outsl
mov
push
sbb
int
shlb
ja
stos
imul
fists
pop
dec
int3
lret
push
popf
stc
out
xor
sub
jmp
push
rclb
cltd
jl
sub
mov
js
sbbb
outsl
les
and
mov
cs
xor
pushf
in
daa
inc
leave
lcall
sahf
fnstsw
jb
aas
and
dec
inc
mov
popf
ret
xlat
aam
adc
pusha
data16
push
xbeginw
scas
mov
jns
inc
mov
mov
cmpsb
rcl
sub
jle
cmpsb
cmp
mov
ljmp
adc
gs
push
dec
adc
pusha
insb
add
mov
in
xchg
gs
push
loopne
lcall
bnd
out
push
loopne
cwtl
lret
xchg
push
mov
and
sub
ss
jg
jg
dec
cmpsl
push
or
roll
incb
xor
sub
xor
scas
call
cmc
fst
imul
mov
adc
add
popf
sbb
jp
lock
in
jge
je
inc
sub
sub
jmp
stos
ret
aas
cs
in
and
mov
outsl
ljmp
add
jae
movsb
pusha
dec
push
dec
fstpl
lock
sbb
cmc
loopne
dec
mov
push
hlt
xchg
aas
sub
push
dec
adc
adc
pop
jmp
lcall
lea
rclb
mov
gs
fistl
insl
adc
inc
mov
jle
dec
cmp
cmp
mov
cmovp
push
jp
das
inc
inc
stos
xchg
lahf
dec
sub
call
cwtl
stos
adc
iret
xlat
xchg
mov
les
pop
or
lds
sbb
mov
inc
cld
sub
stos
sbb
xchg
sub
faddl
leave
es
mov
mov
xlat
ret
outsb
or
or
jb
mov
and
rcrb
xchg
xor
inc
sub
push
mov
push
add
sbbl
aas
mov
out
xor
mov
cmc
add
inc
xchg
in
add
bound
sub
sbb
das
mov
inc
push
rol
lea
xor
pop
dec
xor
or
adc
jp
xor
popf
cmp
push
sbbl
andb
and
cmp
ljmp
iret
subb
loop
stos
sbb
in
xchg
xchg
xorl
mov
and
sbb
in
test
gs
mov
cmp
inc
nop
mov
js
stc
adc
inc
fwait
add
stc
mov
cmp
cmp
frstor
dec
and
mov
dec
sub
dec
cmp
fistpll
insb
divb
mov
sub
mov
in
das
xor
gs
cld
int
insb
jle
adc
imul
dec
out
out
mov
in
pop
cli
fwait
xor
pop
mov
inc
rcll
jmp
mov
std
mov
insl
leave
jb
nop
aam
sti
xchg
xorl
sti
js
mov
xor
shlb
test
adc
ss
imul
arpl
adc
test
dec
je
mov
sti
pop
dec
inc
cmp
jge
add
and
imul
jo
or
stos
cltd
stc
mov
dec
rclb
aam
adc
daa
stos
call
adc
ret
mov
push
mov
dec
in
mov
repz
popf
mov
mov
pop
lods
cmp
push
sub
loop
mov
push
xchg
ret
stos
mov
add
ds
sbb
pop
xchg
xor
xor
sub
xchg
stos
cltd
stc
negl
fcoml
outsl
jae
push
cli
jae
fidivrl
mov
cli
cmc
inc
push
addl
xor
mov
in
or
push
out
fs
cmc
push
in
push
cmp
inc
pop
je
mov
xchg
stc
repnz
fucom
je
scas
and
stos
ret
mov
xchg
insl
pop
mov
int
lea
stos
jg
cmp
inc
and
xor
sub
add
cmp
enter
jmp
insb
lods
sbb
push
add
das
subps
ja
and
pop
add
je
call
outsb
jge
movsl
daa
sub
mov
mov
sbb
adc
loopne
adc
inc
int
les
and
ss
or
lods
sbb
jle
dec
cwtl
in
mov
test
cltd
movswl
insl
cltd
mov
xchg
inc
daa
inc
aaa
sub
into
ret
in
push
andl
cmp
stc
inc
sub
add
bound
das
lods
rorb
pop
mov
push
movsb
jl
sbb
js
mov
mov
fnstenv
jl
iret
jno
int3
cli
sahf
cmp
in
cmp
jmp
inc
lock
xor
js
pop
bound
xor
or
popf
fwait
in
repz
mov
jo
xor
fwait
dec
inc
mov
aaa
jmp
fwait
fsubr
sahf
jne
or
adc
push
jae
adc
fwait
jmp
pop
cvtpi2ps
movl
fsubrs
or
and
lock
jl
jmp
in
insl
inc
and
arpl
sub
and
loope
lods
xor
in
stos
pop
xor
fldl
sbb
outsl
movsl
jp
jmp
xchg
inc
outsl
mov
inc
mov
cltd
scas
cmp
jge
sahf
add
xor
jle
cmp
xor
lret
xchg
push
push
mov
idivb
loope
scas
mov
icebp
test
popa
sbb
jecxz
push
stos
sbb
out
xchg
inc
sahf
nop
cmp
leave
sub
jo
sahf
not
shll
cmc
mov
push
push
int3
dec
jns
cwtl
lods
inc
clc
enter
adc
cltd
push
jge
stc
movsl
loopne
ds
xorl
sub
mov
adc
push
lods
mov
xlat
jae
mov
fcomps
push
push
jbe
jns
dec
mov
xor
add
sub
sti
and
push
mov
lcall
sub
mov
pop
popf
push
inc
adc
adc
iret
les
repnz
jl
adc
add
mov
xlat
jnp
push
cmp
dec
jg
scas
stc
push
push
rcr
sub
lea
sub
adcb
xchg
mov
push
xlat
push
xchg
lods
pusha
xlat
sbb
loop
mov
mov
out
mov
je
dec
or
out
mov
ljmp
xchg
mov
mov
pop
and
repnz
push
negl
inc
mov
vcvttss2si
jns
outsl
or
call
jle
les
js
dec
sbb
xchg
fisubrl
adc
pushf
cmp
ja
and
sub
mov
xchg
pop
shll
sub
push
xchg
mov
test
imul
and
inc
loope
add
dec
add
sbb
pusha
cmp
push
out
stos
pop
xor
jns
push
sub
xchg
jle
fstl
icebp
pop
add
mov
adc
hlt
dec
jno
out
fldenv
jne
xchg
push
jecxz
jmp
sbb
xchg
xchg
push
cmp
lret
mov
push
in
out
dec
jbe,pn
scas
add
jne
test
pop
push
test
sbb
imul
mov
packsswb
das
test
push
les
cmp
jae
adc
adc
lahf
xor
xchg
jge
xor
sbb
dec
jg
xchg
mov
lods
and
cmp
test
hlt
mov
pop
jae
mov
push
sbbl
cmpsb
sub
stos
add
inc
aad
pusha
in
rcrl
lea
gs
jge
cmpsl
mov
dec
pop
adc
lcall
xor
repz
insb
mov
repz
addb
mov
lock
mov
clc
push
mov
mov
cmp
push
fstp
or
jbe
cmp
mov
push
add
cld
sbb
cmp
push
imul
je
mov
imulb
pop
adc
add
mov
stc
out
mov
xorl
pop
cmc
fmulp
sti
cmp
or
stos
cmp
loop
fs
pop
cmp
lods
mov
jno
outsb
inc
adc
sbb
cmp
jge,pn
pop
and
es
push
dec
lahf
xchg
mov
cli
cli
fsubrl
fwait
popf
dec
fdivrs
xor
mov
loop
fyl2x
push
push
push
ret
cltd
mov
sbb
negl
mov
add
mov
aad
adc
in
or
push
adc
leave
push
push
xor
inc
mov
faddl
jle
les
inc
and
repz
enter
fxch
xchg
daa
cmpsl
push
jns
push
push
mov
cmp
cmp
nop
dec
mov
inc
dec
pop
pop
xchg
xchg
jecxz
repz
lds
stos
add
popf
out
lods
sbb
xor
adc
xor
jo
popa
fidivl
cmc
testl
lahf
pop
pop
mov
mov
enter
cmp
fcomps
xor
lock
pop
mov
mov
xchg
inc
inc
mov
adc
inc
lret
jnp
ret
or
adc
adc
into
add
clc
loope
or
inc
clc
sbbb
dec
shlb
inc
push
sub
fcoms
xor
sub
pop
inc
push
rcrl
jg
sbb
dec
xchg
sub
in
mov
cmp
sub
sti
sbb
mov
enter
mov
shr
enter
dec
mov
notb
in
push
test
xchg
xor
dec
lods
bound
int3
sbb
jo
mov
data16
or
lods
imul
push
xor
sub
mov
arpl
cmpsl
mov
nop
fisttpll
push
xor
mov
lea
into
outsl
jmp
js
mov
aaa
jbe
or
jl
stc
add
jp
add
shrb
push
mov
pop
mov
imul
sub
ret
jbe
sbb
cmp
test
jecxz
dec
test
insb
ljmp
sub
and
movsl
negb
scas
andb
lcall
in
lret
and
cmpsb
push
rolb
aam
mov
repnz
es
aaa
or
imul
stos
pop
jne
xorl
or
imul
push
cwtl
inc
adc
movsb
enter
fs
xor
mov
cmc
imul
inc
inc
fwait
nop
add
lods
addr16
sti
or
mov
cwtl
push
mov
dec
in
mov
cmc
sbbl
negl
das
jl
ret
mov
or
stos
outsb
mov
jno
mov
mov
fidivrs
and
dec
pop
lahf
xchg
xlat
cmp
jmp
mov
xchg
pop
or
shll
int
adc
mov
popl
out
dec
imul
movsl
jg
xor
lret
aad
cmp
fsubl
stc
out
nop
outsb
iret
add
fsubp
test
test
push
xor
mov
fdivl
sbb
cmp
adc
outsb
into
push
aas
outsb
jb
mov
aad
dec
push
enter
sbb
sbb
sbb
mov
scas
cmp
fs
mov
and
addb
inc
cmp
ffreep
mov
das
push
popl
data16
jae
sbb
xorl
jns
pop
fnsave
popf
stos
cltd
xchg
pop
pop
pop
aad
sbb
leave
pusha
les
dec
pusha
dec
cltd
and
and
into
or
fsub
mov
mov
pop
out
mov
push
imul
out
mov
jmp
add
push
fnsave
cmp
push
cmp
sub
loopne
dec
mov
int
fdivr
call
mov
lcall
movsb
mov
andb
std
jb
mov
or
std
es
test
xor
fidivs
jle
nop
movsb
loope
pop
jecxz
adc
cmc
jns
pop
aaa
seto
cli
ja
out
jno
imul
sbb
scas
and
adc
test
dec
sbb
dec
xor
roll
jo
pop
xchg
xchg
pusha
push
jae
shlb
arpl
out
xchg
inc
pop
dec
sarb
xor
shlb
mov
push
jp
cli
sbb
mov
shl
clc
daa
loop
cmpsb
inc
aad
cld
mov
jmp
addr16
repnz
xchg
pusha
imul
mov
and
mov
movsb
fldenv
inc
stc
gs
ss
dec
add
aas
jl
sub
popf
mov
call
out
ja
cmp
adc
dec
scas
ss
inc
rcr
cltd
dec
mov
mov
mov
jno
and
outsb
dec
inc
test
jle
ss
repnz
test
sti
fldt
xchg
sbb
fists
or
lret
stos
adc
test
inc
dec
ds
mov
roll
xchg
pop
add
pop
xchg
adc
fwait
push
lret
fwait
shlb
int3
sub
pop
pop
push
dec
lods
stc
test
insb
mov
push
xor
in
shll
push
adc
sub
rclb
shll
jno
shrl
sub
int
inc
call
out
jmp
and
push
es
pushf
shrl
jl
loop
sbb
lcall
jnp
or
xchg
lods
sub
push
add
mov
cmc
outsb
adcl
repnz
adc
mov
xor
jge
lea
lahf
cmp
push
sbb
es
and
mov
and
outsb
xchg
push
sub
add
ret
call
push
mov
jl
jo
dec
subb
int
xor
fstpt
pop
push
lea
ret
or
dec
dec
icebp
or
jge
or
mov
inc
out
sub
fs
movsb
adc
femms
shrl
imul
xor
mov
bound
fisubrs
lret
lret
int
stos
lods
movsb
gs
mov
lcall
iret
inc
in
mov
aaa
roll
outsb
test
mov
add
lods
adc
jno
test
fistps
mov
xchg
xor
and
cmp
daa
out
mov
fildll
jnp
test
pusha
mov
rcrl
int3
and
fdivp
mov
leave
sub
add
cli
xchg
cwtl
inc
xor
push
testl
test
aas
xchg
sbb
popa
and
ret
lods
xor
sub
mov
gs
jmp
ret
inc
sub
cmpb
xor
lods
test
xchg
cmp
sbb
shlb
adc
xor
jno
sub
push
shl
jno
ja
jb
mov
inc
and
sbb
fnstsw
enter
jne
sbb
fs
les
shll
fdivp
mov
ret
fistpl
lcall
inc
or
lret
cmpsb
cmp
dec
call
cmpsl
dec
dec
ds
jle
jb
lcall
dec
aad
call
sub
ret
mov
add
ds
sarb
cli
mov
loope
xor
and
xor
sub
fldenv
jecxz
mov
rolb
jecxz
aaa
mov
cmpsb
xchg
cmp
dec
insl
jle
nop
int
lahf
lock
push
xor
push
and
dec
adc
xchg
inc
xor
test
xchg
mov
pop
push
lods
test
adc
std
rorb
cmp
xor
lods
js
das
nop
test
sarb
pusha
jno
pop
mov
stc
and
stos
add
mov
xor
dec
and
sbb
push
push
andl
push
shrl
lcall
mov
aad
test
pop
and
stos
dec
push
cmpl
notl
or
inc
sub
or
add
jno
aaa
mov
hlt
pop
mov
jne
in
stc
fcomps
bound
cmpsb
sub
loope
inc
cltd
sub
stos
xor
jns
data16
mov
pop
push
dec
nop
test
mov
inc
lods
jecxz
fiadds
xlat
or
pushf
iret
pushf
mov
loope
in
mov
and
pop
pop
dec
jns
leave
movsb
cmp
fwait
subl
leave
add
bound
lcall
lea
cmpsl
mov
mov
shrb
in
inc
pop
icebp
adc
cmp
aam
xor
fcmovnbe
xchg
pop
dec
lods
cs
pop
jg
lahf
adc
fs
sub
cs
mov
in
sahf
enter
scas
ret
push
jl
icebp
and
ljmp
call
pop
fiaddl
adc
loope
fs
rcrl
sbb
and
xchg
inc
inc
lea
insb
adc
mov
dec
mov
daa
repnz
aad
sti
mov
sbb
pop
inc
out
jg
adc
sbb
mov
arpl
mov
ret
jb
call
imul
push
lcall
push
dec
and
mov
mov
sub
mov
mov
xor
pop
or
mov
call
repz
push
adc
movsb
xor
push
mov
pop
add
pop
movsb
pusha
out
xor
in
jnp
pop
xchg
jae
jmp
lea
movsb
dec
inc
xor
cwtl
enter
mov
sub
ja
mov
mov
push
pop
dec
jne
pop
jno
fisttpll
xchg
aaa
fcmovnb
popa
out
add
push
xor
dec
inc
adc
sbb
jmp
add
sub
and
sub
push
xlat
imul
movsl
pop
pop
arpl
push
mov
outsb
adcl
xchg
rclb
inc
dec
adc
or
jb
imul
fldenv
movsb
inc
mov
ret
cltd
xlat
mov
je
add
fsubrs
imul
lods
aam
aam
adc
shr
aas
cli
lcall
mov
push
dec
mov
mov
push
lret
aas
add
xor
lods
add
fs
lret
xor
bound
shlb
out
stc
enter
fnstenv
cld
enter
ljmp
xchg
dec
xchg
xchg
mov
lds
and
jle
clc
leave
lods
ret
push
shll
decb
cmp
mov
mov
xchg
dec
cmp
loopne
cmpsb
dec
pop
jno
lret
ss
pop
cmp
aam
jo
jmp
arpl
xchg
xchg
mov
in
js
push
les
xchg
daa
or
push
jle
ja
dec
notl
or
xchg
outsl
pop
adcb
add
mov
xor
lods
sbb
mov
and
test
sti
xchg
mov
xchg
std
repnz
imul
enter
mov
out
ss
fwait
jno
add
repz
mov
lahf
push
repz
insl
push
or
xchg
and
pusha
xor
popf
lods
push
mov
adc
push
inc
mov
or
jmp
sbbl
aaa
in
xchg
add
or
add
test
popa
lret
or
mov
in
sub
lods
and
cmp
push
fdivp
dec
in
orl
sbb
mov
scas
fcmovnbe
mov
jmp
js
or
cmp
or
int3
and
fldcw
mov
ficoms
fcmove
in
sti
pop
gs
xor
xchg
pop
inc
pop
jno
and
mov
loopne
sbb
lea
push
int3
jo
adc
add
pushf
fisubl
aad
xor
add
jecxz
scas
pop
push
push
xchg
mov
sub
lahf
push
stos
jno
out
xchg
mov
jecxz
stos
sub
lret
fistl
addr16
ja
fwait
out
jo
out
out
mov
addb
fsub
mov
or
iret
mov
jae
test
lret
or
ds
call
and
dec
add
sahf
repz
lahf
lds
xor
xlat
test
shlb
loopne
xchg
jae
sub
mov
mov
aaa
roll
sbb
mov
js
icebp
mov
push
jo
js
jl
add
mov
int
mov
stos
leave
das
icebp
and
cmpsl
adc
cmp
inc
mov
and
pop
addb
fidivrs
cli
rcl
and
ds
test
jbe
cmp
push
jns
add
cmpsb
in
lods
pushf
push
inc
xchg
and
push
insl
aad
subl
sbb
lcall
push
mov
pusha
add
pop
xor
sub
inc
ret
arpl
mov
cmp
mov
dec
enter
jno
push
inc
mov
adc
idivb
lods
mov
fisubrl
incl
adc
inc
in
add
push
push
dec
imul
add
mov
call
fnsave
xor
mov
push
and
test
push
fstl
push
les
fdivl
loope
shlb
cld
aad
jb
jmp
push
mov
imull
mov
sbb
sub
jbe
repnz
movsb
negb
xchg
out
pop
mov
adc
mov
lock
outsl
adc
aas
dec
sbb
sub
push
adc
push
js
cmc
mov
pop
insl
sti
jge
in
or
jge
fucomip
dec
jbe
pop
xchg
jp
pop
adc
test
or
cld
in
cmp
in
jge
pop
mov
cmc
pop
rorb
mov
dec
cs
jp
ret
lods
in
mov
ss
add
hlt
sahf
push
inc
ja
inc
xlat
dec
fisttps
add
xchg
and
cmc
dec
add
sbb
rcrb
xor
or
mov
sbb
sub
pop
inc
mov
scas
adc
xorl
or
mov
mov
push
pop
cld
adc
lds
loop
xor
sub
lock
mov
sub
rolb
testb
xchg
insb
xchg
mov
push
iret
sbb
pop
mov
into
adc
rolb
movsl
sarl
jg
ja
mov
lret
icebp
adc
fadds
js
aam
ss
les
les
les
dec
push
lods
aad
lods
fmuls
add
dec
sub
mov
shll
add
aam
std
dec
xor
flds
dec
sub
jecxz
fcompl
call
mov
es
and
xchg
sbb
je
xor
int3
repz
sub
fwait
xor
sub
adc
pop
inc
mov
xchg
scas
xor
int
insb
push
sbb
mov
jmp
lock
lret
pusha
ss
xor
push
or
mov
push
pop
push
orb
mov
mov
das
out
or
xchg
icebp
xchg
popf
and
mov
mov
cmp
and
xchg
push
daa
std
scas
loop
fiadds
add
xchg
pop
pop
out
cltd
add
loope
int3
cmpb
int3
cmp
call
pop
sti
pop
sub
mov
dec
popa
out
xor
fsubrl
dec
loop
jb
je
test
jge
mov
mov
cli
xchg
push
sub
movsb
adc
xchg
pusha
lods
xchg
xchg
lods
jne
ljmp
pop
mov
adc
rcrl
loop
sub
cli
sarl
push
cmp
or
jne
lret
popf
push
sahf
push
dec
das
in
cmp
inc
outsl
mov
mov
dec
fnstsw
mov
and
lret
orl
mov
sbb
dec
pop
xor
inc
sub
add
mov
cmp
xchg
in
fimuls
nop
mov
vmovapd
add
je
arpl
xor
into
xor
lcall
xchg
mov
push
sahf
pop
ja
xchg
testl
in
mov
ret
daa
mov
mov
mov
mov
call
fnstcw
and
mov
dec
mov
or
loop
mov
adc
fdivs
mov
add
push
and
out
mov
jmp
pop
push
jge
lret
mov
add
inc
xlat
stos
gs
outsb
add
mov
push
jg
push
or
ss
mov
mov
push
nop
or
inc
je
ds
inc
push
pushf
push
inc
push
fcoms
sub
std
jmp
std
mov
sbb
jecxz
bound
cmp
test
call
jmp
sub
cmp
pop
cmp
call
mov
or
mov
mov
mov
dec
mov
stc
insl
cmc
pop
orl
mov
or
test
fistpl
push
in
dec
add
jmp
jmp
fs
cld
movsb
out
lcall
in
cmp
mov
inc
fcoml
push
js
push
xor
outsl
pop
into
leave
or
icebp
push
fists
pop
test
mov
ret
shrb
sahf
push
data16
cmp
sbb
iret
mov
sub
mov
pop
test
cmp
insl
cmp
rclb
clc
je
and
cld
movw
pop
ljmp
push
fsubr
add
sahf
sbb
mov
mov
and
outsb
xor
mov
ja
adc
jge
cs
ret
je
into
inc
lret
push
xor
js
pop
push
arpl
push
cmpsl
push
stos
jo
hlt
mov
mov
xor
pop
cmp
cmpsb
aaa
xchg
sub
inc
sbb
mov
repnz
ret
and
addl
mov
shll
lods
dec
loopne
pop
sub
xchg
fs
jge
xor
and
and
mov
jg
pop
mov
orb
arpl
mov
out
cs
pusha
and
jb
in
pop
pop
scas
mov
sbb
jae
push
and
mov
cmp
movsb
daa
ss
dec
cmp
fstp
out
and
push
adc
and
std
and
push
mul
out
jns
movsb
aam
loopne
pop
cmpsb
adc
imul
adc
bound
mov
jmp
dec
pop
ret
mov
inc
mov
outsl
fidivs
fisubrs
into
mov
xor
lahf
push
and
mov
int
sbb
movsb
dec
in
mov
ja
mov
popf
mov
in
loope
ror
jmp
mov
loope
in
sub
jae
aaa
pop
mov
test
xchg
push
push
pop
in
movsl
cwtl
nop
shl
jmp
or
int
call
lahf
push
aad
mov
aad
fistpll
sub
jl
arpl
add
add
lret
sbb
lcall
in
dec
push
mov
sarl
inc
je
sbb
stos
fisttpll
jl
xor
iret
popf
lock
test
cmp
xchg
inc
sarb
icebp
push
lret
add
bound
scas
mov
outsl
mov
addl
mov
cld
adc
pop
xchg
int3
jmp
lcall
sub
push
jno
mov
pushf
add
subl
test
inc
add
popf
es
fs
inc
arpl
test
xor
in
mov
jle
cli
popa
dec
mov
xor
pop
int
fdiv
movsb
and
push
cmp
imul
mov
fcomip
xchg
mov
lret
and
jle
or
fiaddl
mov
mov
pop
cmp
pop
rolb
inc
push
sub
xchg
iret
ds
pop
sub
xchg
js
pop
xchg
and
xor
or
sub
js
int
xor
xchg
enter
jl
xchg
mov
jp
loope
out
add
pop
push
pop
add
into
cmpsb
iret
hlt
outsb
push
cmpsl
dec
in
or
test
aad
push
enter
jg
in
nop
stc
dec
push
xor
or
xchg
aam
aas
lret
jne
hlt
std
loope
int3
pop
sub
cmp
sub
or
outsl
and
and
ret
cmp
add
sub
orb
dec
sbb
iret
pop
push
test
aaa
jmp
int
mul
push
gs
jo
fcoml
adc
popa
mov
stc
sbb
xor
inc
loope
adc
icebp
out
jl
iret
stc
inc
xchg
xor
jno
and
gs
fildl
push
xor
adc
js
loope
inc
into
jl
mov
mov
jge
es
ret
dec
jne
je
test
xor
mov
in
cmc
jo
ss
xchg
mov
xor
test
adc
xchg
jnp
jae
je
pop
out
fmulp
push
sbbl
movsl
sub
add
jbe
into
addr16
mov
inc
pop
lahf
aam
jns
testb
data16
int3
ss
aas
stc
inc
sbb
scas
cmp
pusha
mov
ret
jl
movsb
push
aas
dec
enter
mov
rcr
xor
into
pop
lcall
pop
inc
movl
jle
adc
dec
arpl
dec
push
call
xor
cmp
sbb
je
mov
loop
and
imulb
push
push
jl
faddl
xchg
jmp
icebp
mov
xlat
aad
jmp
cld
or
mov
lea
jmp
mov
dec
add
xchg
in
push
sub
push
orb
loop
cwtl
add
cmpl
test
inc
or
outsb
dec
je
mov
ret
mov
shl
add
lea
push
arpl
shrb
scas
inc
int3
outsb
push
sbb
jne
dec
cmp
add
insl
jo
ss
xorb
mov
and
fmull
mov
jp
cmp
insb
push
mov
imul
jmp
out
push
mov
stos
daa
jmp
std
cmp
scas
into
enter
insb
rcl
mov
add
inc
jns
out
pusha
test
shrb
push
adc
les
inc
fdivl
sbbl
out
rorl
pop
adc
rolb
xor
pushf
xchg
xor
inc
lds
popf
jp
ror
jbe
sub
cmp
xor
lret
mov
clc
mov
push
call
adc
callw
aas
push
mov
into
shrb
or
ret
loope
jecxz
mov
jecxz
sbb
xchg
test
pop
in
lahf
out
stos
out
enter
push
fwait
jb
jecxz
xor
add
iret
outsl
sbb
add
in
add
fs
scas
cmp
pop
shrl
adc
sbb
or
xor
fldl
mov
adc
repz
cltd
addr16
sti
mov
jne
xor
addr16
jg
adc
xor
jp
lcall
int
push
test
inc
sbb
jno
jge
fidivs
loope
je
dec
cmc
mov
inc
out
inc
std
or
cmc
and
sbb
shrb
mov
cli
outsl
mov
mov
jle
enter
test
jne
enter
mov
in
mov
push
sbb
in
push
cwtl
mov
mov
dec
mov
sbb
fwait
aaa
xlat
push
fld
adc
dec
sarb
test
insl
fisubrs
scas
rcrb
gs
push
push
lahf
add
xor
mov
jmp
push
pop
pop
add
adc
fsubs
out
sahf
pop
ret
lods
es
or
addr16
and
xor
bound
sbbb
adc
push
pop
jge
xchg
push
pop
add
sbb
sbb
sbb
jmp
mov
js
lret
dec
pop
rclb
aad
push
or
pop
rorl
cmpb
jo
idiv
scas
popa
out
mov
mov
mov
aam
xor
das
dec
push
lret
fstps
stc
adc
roll
xchg
in
push
loop
and
jb
test
add
daa
jae
sbb
adc
adc
mov
add
shl
adc
cwtl
jle
out
xor
sbb
lcall
adc
stos
inc
int3
sub
sub
jp
push
xlat
gs
adc
testb
or
sub
cmc
cmp
testb
arpl
scas
or
xor
clc
jmp
xchg
jecxz
loope
ret
out
ret
aam
pop
decb
xchg
xchg
pop
or
popf
faddl
fucomi
popa
mov
hlt
test
out
fcmovu
adc
das
and
lea
je
jg
cs
jne
jnp
push
pop
cmp
cmc
xor
jae
hlt
outsb
sbb
jno
jmp
stos
in
cld
xor
adc
lods
and
adc
or
add
cltd
xchg
enter
icebp
mov
into
dec
mov
sub
les
ss
pop
je
push
cmpsl
in
and
ret
inc
cmpsb
fmulp
or
inc
pop
pop
arpl
mov
int3
inc
or
push
cmp
push
dec
mov
pop
push
rorb
in
dec
sbb
enter
in
push
xchg
xor
into
pop
mov
cmp
out
xchg
inc
aas
jno
dec
mov
fistpll
or
inc
inc
adc
xchg
pop
or
mov
xor
repnz
or
dec
mov
adcb
or
in
out
or
pop
push
push
adc
add
and
inc
js
add
jle
ss
cmp
push
mov
int
shrb
add
push
pop
lock
push
sbb
test
test
arpl
mov
pop
pop
jae
ret
imul
lret
fiaddl
ficoms
shlb
xchg
leave
addl
ljmp
loope
xorb
adc
xor
mov
mul
jmp
lods
xor
sub
adc
aam
jo
mov
sub
pop
lcall
popf
push
jge
fnstsw
ja
or
push
xor
aas
in
mov
lret
inc
xchg
fidivs
xor
incl
mov
cmp
pop
adc
stos
jge
ljmp
movsl
popf
or
jae
loope
add
je
mov
cmpsl
pop
stos
shll
mov
jae
mov
mov
scas
subl
jnp
mov
sub
stc
dec
jno
fdivrl
mov
mov
push
mov
jno
mov
jecxz
adc
sub
mov
not
cmp
sbb
cmp
icebp
aaa
into
sub
xchg
rorb
dec
into
xor
mov
fidivrl
adc
dec
cmp
scas
jno
cmp
in
ds
cmp
pop
cmpsb
push
out
cmp
jae
outsb
sub
push
sub
mov
mov
xor
jnp
jmp
or
xor
cmp
dec
and
or
add
sbb
adc
cmp
mov
sbb
or
xchg
cmp
lcall
mov
jl
lods
mov
add
lcall
out
shlb
ss
into
push
int
mov
outsb
xorb
add
lock
xchg
movsb
jle,pt
inc
dec
stc
in
jmp
cmpl
ss
cmc
ja
jge
cmp
mov
insb
lcall
cmc
lds
adcb
daa
mov
and
sahf
xchg
es
push
dec
and
cs
stos
mov
xchg
hlt
xorl
aad
fdivl
out
push
and
mov
xchg
insb
mov
xor
fldcw
hlt
repnz
scas
test
lahf
xchg
pop
in
inc
push
xorb
add
ret
mov
shlb
xchg
ret
gs
push
imul
cli
addr16
aam
gs
cmp
sarb
sub
and
pop
jno
jbe
je
or
lods
fistpll
lods
inc
into
or
cmpsl
lea
cmp
pop
sub
pop
dec
cmp
ss
push
mov
sbb
fisubrl
mov
sub
outsl
adc
mov
lea
daa
popf
cld
xchg
jg
rcll
loope
adcl
lods
pop
hlt
xchg
imul
xchg
pop
push
or
sbb
and
pop
dec
fdivrs
push
cmpsl
ljmp
cld
clc
and
arpl
sub
mov
call
pusha
xchg
adc
sbbl
sub
pop
sbb
loopne
popf
into
jp
xor
mov
in
fcoml
adc
mov
ds
mov
sub
xor
push
dec
push
cld
cmp
xlat
ja
mov
loop
adc
test
mov
or
jp
inc
aaa
in
pusha
pushf
ret
call
push
xor
lcall
gs
or
js
aaa
sub
mov
ret
ret
popa
pop
lock
lea
icebp
cli
cmpsb
sbb
mov
mov
jle
jns
pop
divl
add
dec
lret
xor
repz
lock
pop
xchg
aad
jg
fnstsw
test
icebp
daa
in
mov
imul
mov
movsb
push
inc
es
mov
xchg
lds
mov
sbb
jb
and
aad
push
jle
mov
mov
jo
xor
lods
int
test
test
mov
xchg
rcrb
lret
rcrb
cmp
jae
jg
sub
fnstcw
fcomps
leave
addl
out
push
lea
and
sbb
inc
jne
xor
pushf
jmp
ljmp
sbb
repnz
imul
mov
inc
sub
outsb
movsb
ss
stc
rorb
lods
jle
mov
push
jge
mov
arpl
mov
sub
jmp
cmc
jg
xchg
int
pop
cmpsb
repnz
addr16
jnp
xor
mov
shrb
test
inc
insl
mov
mov
xchg
mov
inc
and
loop
aas
cli
add
dec
mov
out
in
in
push
shr
xchg
ret
scas
cmp
ret
mov
popf
enter
aas
sub
sbbl
push
test
jle
lods
cmp
pop
pop
sbb
cwtl
xchg
adc
stos
xorl
push
adc
mov
cld
xchg
push
test
lcall
jae
xchg
stc
ss
pop
jbe
mov
cwtl
sbb
pop
cmp
and
cltd
add
push
aaa
stos
insb
xor
test
inc
push
aad
push
lock
movsb
or
int
push
and
mov
inc
inc
stos
dec
jl
push
lahf
adc
pop
leave
pusha
sahf
pop
arpl
and
jl
xchg
mov
fbstp
pop
mov
addb
inc
add
mov
jle
mov
mov
mov
movsl
add
mov
push
jecxz
lods
scas
dec
fwait
mov
sahf
jnp
pop
or
ss
xchg
xchg
out
aad
xchg
cs
insl
push
push
lds
sbb
jmp
pop
lret
clc
je
leave
push
cmp
adcl
add
push
cmp
pop
lods
mov
jne
jnp
and
fbstp
ljmp
jnp
in
cld
rorl
stc
adc
jg
sbb
inc
data16
and
xchg
sbb
out
mov
js
fs
mov
pop
jge
aad
sub
mov
push
dec
in
inc
add
ljmp
rcr
ds
adc
mov
xor
dec
idivb
add
imul
enter
nop
fbld
rorb
fsubr
jo
setnp
leave
sub
fcomip
or
cmp
lds
push
ss
mov
jns
lret
mov
xor
cld
test
add
xchg
test
lock
push
xchg
xchg
inc
enter
xchg
faddp
imull
pushf
cmp
add
mov
mov
das
adc
out
loop
cmp
mov
xchg
cli
sahf
fcomp
insl
mov
sbb
jns
pop
mov
xchg
cmp
and
dec
sbb
mov
pop
mov
pusha
jns
mov
stc
push
subb
cmp
cmp
or
fistps
sbb
mov
loope
add
add
and
out
push
and
out
add
adcb
in
jmp
lods
push
enter
cmp
jno
mov
pop
ds
cmp
and
das
push
push
aam
pop
add
sub
pop
jle
jnp
mov
mov
repnz
lds
xchg
fbld
sub
jecxz
mov
pop
enter
imul
rcr
cmp
xor
adc
mov
mov
lret
loop
aad
fstpt
lea
shll
sub
pop
imul
add
lods
jecxz
pusha
ja
shll
mov
ret
lods
stos
fmull
bound
in
std
outsl
inc
ja
mov
jl
stos
mov
leave
enter
cmpsl
mov
call
push
inc
pop
mov
sub
repnz
nop
lret
mov
jmp
mov
mov
mov
cmpsb
hlt
mov
dec
popl
lcall
or
sbb
popa
and
xchg
xor
inc
inc
ret
adc
lcall
mov
enter
cmpsb
mov
push
sbb
dec
lock
or
sbb
push
sbb
ficompl
dec
fimuls
stc
lret
das
mov
cmp
adc
movsl
push
es
mov
cmp
adc
pop
and
in
test
push
adc
mov
test
movsb
push
pop
daa
leave
add
pop
mov
stos
test
scas
inc
push
mov
repz
popf
pop
fistpl
outsb
mov
add
lods
xchg
stos
int3
cli
add
add
adc
cld
or
pushf
mov
push
sbb
loop
in
es
stos
out
daa
outsl
nop
mov
das
jo
lea
test
jecxz
mov
mov
and
fsubrs
pop
sub
push
adc
sbb
sbb
sbb
aam
add
mov
mov
add
pop
or
fs
ret
and
push
jnp
rolb
mov
pop
cltd
test
xor
dec
sbb
scas
or
add
mov
and
push
pop
sarb
mov
pop
ret
mov
loopne
sarl
cli
mov
gs
cmc
inc
mov
pop
sbb
dec
adc
sbb
into
mov
in
out
cwtl
lods
cmp
test
in
dec
scas
mov
inc
dec
xchg
push
jg
xor
sub
mov
push
nop
dec
iret
fisttps
mov
std
xorl
dec
clc
push
dec
movsl
mov
push
sub
scas
mov
jbe
int3
testl
arpl
mov
aam
jmp
addr16
mov
mov
inc
mov
mov
or
pop
xor
pop
add
popa
icebp
in
mov
xor
shl
js
sbb
arpl
pop
test
mov
sbb
sbb
mov
arpl
inc
sub
jno
addr16
inc
pushw
xor
inc
rcll
es
sbb
jb
cmpsl
jae
dec
bound
push
out
jmp
call
push
or
ficoml
adc
stos
test
popa
ja
or
xor
push
sbb
xchg
and
mov
aaa
jmp
pop
xor
enter
es
jbe
test
fucom
push
gs
dec
jns,pn
xor
icebp
rcrl
ljmp
jge
dec
int3
xor
imul
or
mov
sti
pop
mov
pusha
lods
xchg
push
cltd
push
jg
xor
pop
or
dec
mov
dec
rorl
xchg
push
dec
or
stos
shl
pop
sub
js
lret
lds
mov
mov
fwait
xchg
cltd
fiadds
xchg
roll
mov
rcrl
push
sub
nop
jb
cmp
cmp
flds
and
sub
push
cld
in
pusha
ret
sub
mov
or
or
pop
adc
je
xchg
cltd
adcb
jle
cmp
xchg
adc
sub
int3
dec
addr16
movsl
push
imulb
in
cld
sub
fstpt
xchg
js
test
push
or
jg
sub
cmp
nop
cs
call
scas
fdivs
mov
mov
ds
sub
adc
data16
xor
test
jb
push
pop
mov
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
in
or
aaa
or
xchg
clc
adc
jns
push
imul
push
iret
sbbl
das
mov
lods
mov
fst
inc
fs
xor
movl
scas
shlb
inc
pop
fldcw
rolb
outsb
clc
mov
add
mov
incl
add
cli
mov
cmp
mov
mov
cmc
mov
xor
or
fbstp
repz
add
jb
rcrl
push
repnz
mov
or
sub
inc
jne
rclb
lods
dec
mov
stos
lea
add
test
and
rcl
int
js
cmpsl
push
or
sub
mov
adc
push
and
mov
ffree
pop
xchg
es
orl
mov
out
mov
outsb
push
mov
enter
and
jno
sbb
loopne
stc
pop
jl
nop
loop
and
mov
lret
cmpsl
sub
sub
movsl
dec
ret
xchg
lods
dec
cmp
xchg
mov
jne
mov
and
add
lods
loope
pop
inc
mov
pushl
pop
adc
push
jne
mov
add
lods
mov
sub
stc
mov
aad
shll
cmp
lods
out
test
pop
rcrl
clc
jns
into
rclb
outsl
jecxz
xlat
ror
cmpsb
push
mov
and
mov
in
and
push
dec
call
mov
cmp
in
pop
add
mov
sub
outsb
xchg
cwtl
repz
js
mov
jns
xlat
fwait
add
and
xchg
ret
out
stos
mov
stos
shl
xchg
inc
cmp
hlt
cmp
dec
cmp
mov
and
mov
mov
dec
ljmp
in
stos
mov
dec
call
push
stos
add
aaa
loopne
notl
pop
jne
cmp
xor
data16
jno
push
cmp
add
scas
mov
adc
push
jle
js
iret
dec
sbb
adc
inc
mov
leave
pop
out
push
into
cmp
add
rolb
lds
les
dec
inc
jge
xchg
arpl
pop
or
mov
out
xchg
into
les
ds
out
mov
xchg
mov
gs
in
jae
sub
movsl
mov
clc
cld
cmp
mov
daa
cld
jbe
push
xor
insl
mov
fstl
dec
inc
pop
adc
jmp
fisubs
aaa
pop
cmc
xchg
rol
add
pop
mov
mov
mov
mov
test
cmp
pop
aam
mov
pop
or
sub
das
push
mov
jge
push
fstps
pop
jb
ret
mov
bound
dec
fdivr
lahf
adc
inc
xlat
adc
pop
into
ja
xchg
jae
add
or
jge
jp
cmp
aam
or
aas
xor
loop
stos
push
mov
mov
mov
push
lcall
fs
test
and
xchg
int
mov
mov
mov
jl
xchg
rcll
fdivs
push
sarb
xchg
hlt
aad
jbe
xchg
loope
test
mov
xchg
pop
outsl
sbb
cli
xchg
pop
jb
andb
outsl
mov
mov
and
scas
daa
into
icebp
repnz
enter
pushl
push
inc
push
pop
dec
sbb
pop
jmp
jle
dec
cmpsb
aad
movsl
add
popa
pushf
mov
enter
sti
sub
inc
jle
jl
das
ret
cmp
jl
sub
mov
test
and
ljmp
jg
sub
mov
jno
mov
cmp
test
cmp
loop
push
sbb
or
sub
pop
or
cmc
outsl
add
pop
or
xor
xor
xchg
jns
pop
xor
movsl
scas
mov
and
adc
jnp
mov
test
or
and
xchg
mov
cmpsl
dec
xlat
aas
inc
lret
fdivl
lods
enter
inc
pusha
leave
nop
stos
cvtps2pi
lcall
bound
jle
mov
pop
adc
js
add
mov
push
lea
repnz
outsl
mov
and
add
sbb
sub
inc
mov
jmp
sti
push
adc
mov
dec
inc
add
repnz
lods
inc
sub
sub
shll
jno
cld
jmp
imul
and
ljmp
cs
arpl
dec
aad
push
fsubrs
xor
xor
or
sbb
jno
es
repz
decl
shrb
mov
stc
adc
fdivs
mov
mov
sub
jge
xchg
in
adc
rol
mov
out
clc
out
jge
ss
mov
mov
mov
and
add
inc
mov
xor
sbb
push
scas
jl
lods
dec
adc
jmp
push
ss
cld
cltd
sub
xchg
xchg
mov
in
push
cmpsb
pushf
xchg
scas
and
inc
das
inc
sbb
nop
xchg
xor
popf
push
mov
addr16
mov
scas
and
lcall
mov
dec
stc
popa
je
sub
clc
inc
ja
pop
pop
jb
mov
xchg
jp
test
jmp
in
xchg
sar
fisubrl
add
mov
sbb
popa
out
std
dec
int3
dec
mov
jg
fs
call
gs
gs
add
cmc
ss
add
mov
scas
outsl
fisubrs
int3
dec
jmp
incb
cltd
inc
movsl
pop
test
xor
lret
ds
cmp
and
dec
push
push
jmp
xor
pop
orb
push
add
mov
or
mov
adc
jmp
ljmp
xor
int
xchg
push
faddl
int
lret
pop
jmp
arpl
xlat
and
cmp
rcrb
cmp
xchg
stc
jno
inc
mov
ds
push
test
fwait
dec
or
mov
xchg
push
ret
mov
mov
stc
jns
push
mov
jo
enter
inc
jmp
pop
unpcklps
loop
lret
pushf
aam
xchg
popf
mov
jo
lock
mov
movb
cmpb
ljmp
jg
jae
repnz
insl
test
popf
int
leave
stc
gs
xor
sar
fcomps
lret
mov
pop
mov
aaa
push
mov
xchg
mov
ljmp
adc
lret
hlt
rorl
addr16
cld
sbb
pop
adc
pop
push
out
mov
xor
test
add
cmpsl
rcrl
in
lds
sub
jmp
or
xchg
mov
insb
mov
pop
mov
jg
cmp
pop
daa
lret
pop
pop
sbb
dec
dec
push
scas
fs
sbb
jo
insb
jns
pusha
into
cltd
dec
cs
jl
mov
inc
into
hlt
dec
popa
add
movsb
flds
test
push
iret
adc
aaa
mov
adc
cmpb
out
repnz
cs
and
xchg
loopne
adc
push
sbb
cmpsb
sbb
push
pop
mov
lea
fnstsw
out
xchg
push
and
dec
push
jbe
lret
hlt
jns
imul
sbb
pop
pop
out
out
and
dec
js
mov
pop
int
loop
mov
xchg
push
push
xor
jne
push
xchg
cmp
push
test
aas
dec
xor
add
adc
hlt
pusha
jmp
test
sbb
xor
repz
jg
inc
xchg
cmp
dec
pop
cmp
dec
push
and
stos
loop
shlb
sbb
lret
test
imul
out
push
dec
push
aaa
add
cmp
xchg
mov
lods
addr16
cmp
pop
cltd
test
mov
jb
jno
mov
ret
loop
out
inc
adc
adc
cmp
xor
repz
rcrl
mov
loope
xchg
lret
jnp
daa
mov
xor
sbb
pushf
mov
cmp
in
sbb
arpl
test
pop
sub
sarl
popf
clc
jle
sub
hlt
xor
pop
push
xchg
sub
adc
repnz
jge
xor
scas
out
arpl
inc
ror
xchg
and
push
lock
ja
call
cmp
sbb
cmpsl
xlat
mov
mov
add
sub
lods
or
in
cli
mov
sar
mov
ror
in
aaa
aam
fwait
idivb
pushf
ret
negb
mov
imul
adc
pop
push
sarl
fdivrp
push
push
push
scas
mov
mov
push
xlat
or
loop
or
dec
push
out
pushf
mov
push
cmp
loop
and
jae
sti
push
popa
ljmp
int
nop
rcrl
les
mov
and
cmpsl
xorl
in
and
repnz
push
push
or
jb
cmp
imull
push
xor
repnz
notb
sbb
scas
pop
cmp
fwait
dec
fwait
stc
das
xchg
in
addr16
add
dec
mov
cmpsb
pop
dec
repz
outsl
mov
pop
pop
cmpsb
inc
stos
daa
dec
mov
dec
pop
push
cltd
push
xchg
rolb
jae
ljmp
jg
inc
cmp
adc
imul
push
fs
mov
inc
sub
bound
int
mov
mov
test
pop
ss
jbe
push
call
xchg
xor
lods
dec
xchg
mov
dec
sub
pop
lahf
mov
pop
in
dec
mov
jno
adc
or
gs
lret
cmpsl
xchg
dec
cli
dec
clc
aam
inc
mov
cmpsb
fdivrs
ja
cmp
mov
out
mov
push
movsl
fstl
cld
pushf
das
mov
push
shlb
lock
cwtl
adc
negl
sti
jnp
stos
cmpsb
pop
pop
xlat
andb
mov
xchg
add
mov
pop
test
dec
in
mov
repz
fnsave
pop
sub
jae
imul
testb
push
iret
punpckldq
arpl
cmpsb
mov
push
cmovp
fistl
jge
cmp
mov
aas
hlt
int3
lock
pavgb
add
mov
sub
sbb
mov
xchg
pop
mov
dec
jg
xor
xchg
mul
aas
xor
lret
jne
xor
xchg
sub
jb
in
cmpsl
cli
pop
and
sub
outsl
push
push
lea
mov
loope
dec
or
jo
jl
ss
adc
inc
mov
repnz
loop
fldcw
xchg
xchg
mov
mov
jge
aaa
dec
cmp
pop
stos
jg
cwtl
adc
popf
and
pop
mov
aad
shrb
lods
xchg
inc
inc
ss
shl
loop
add
aaa
fwait
pop
das
mov
dec
or
fsubl
push
repnz
test
cltd
jg
pop
inc
jecxz
add
xor
out
test
loopne
or
lock
adc
fucomp
or
inc
lahf
test
clc
imul
sbbb
mul
cmc
cmpsl
dec
mov
push
iret
mov
addr16
bound
ret
test
xchg
push
movsb
and
push
sbb
mov
sub
jns
sub
lret
lea
push
and
out
inc
data16
out
push
adc
pop
aaa
fsubs
rorb
push
lea
sub
jp
ret
jp
xlat
shl
or
fdivl
xchg
dec
jb
stc
inc
test
jecxz
and
jle
ja
mov
cmp
dec
ljmp
jp
mov
lret
cwtl
ret
inc
sbb
inc
out
repnz
lcall
xchg
mov
out
int3
cld
jnp
mov
or
pushf
xor
repz
movb
in
push
push
lock
jl
push
jge
arpl
addr16
in
xor
mov
pop
lock
or
mulb
add
cli
insl
push
dec
jne
in
xlat
jle
cmpsb
std
add
loopw
pop
cmp
test
cltd
add
add
add
inc
xchg
mov
incb
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
addb
mov
lret
insl
