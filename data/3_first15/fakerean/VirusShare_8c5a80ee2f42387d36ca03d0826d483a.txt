xchg
mov
push
push
call
push
neg
xor
lea
and
lea
xor
add
mov
jmp
mov
shr
mov
mov
xor
add
mov
mov
adc
xor
xchg
neg
xor
push
mov
jmp
shr
xor
push
lea
not
mov
jmp
shr
not
lea
mov
xor
adc
mov
popl
rcr
add
mov
jmp
mov
xor
not
add
ret
lea
lea
xor
mov
lea
call
mov
and
lea
jmp
lea
lea
neg
xor
xor
shl
push
push
xor
not
jmp
xchg
mov
xor
neg
ror
add
shrl
mov
jmp
mov
xor
call
adc
mov
rcl
jmp
lea
mov
shl
add
mov
xor
adc
xor
rcl
jmp
neg
xchg
xor
mov
lea
lea
push
push
pushl
pushl
jmp
movl
lea
lea
mov
movl
mov
mov
and
lea
mov
jmp
mov
pop
xchg
rol
xor
lea
lea
lea
lea
mov
or
je
jmp
call
add
add
xor
rcl
mov
lea
xor
mov
not
xor
jmp
add
xor
lea
shl
ror
shl
mov
lea
xor
mov
not
mov
decl
jmp
mov
not
add
xchg
xor
not
mov
not
jmp
jne
lea
ror
neg
xchg
adc
mov
lea
rol
xor
shr
xor
jmp
push
mov
sub
pusha
not
not
lea
rol
jmp
lea
xor
neg
shr
mov
mov
add
mov
neg
xor
xor
lea
shl
mov
xor
mov
lea
not
mov
jmp
int3
orps
jp
or
fcoms
push
mov
and
xlat
das
xor
popa
mov
outsl
lahf
or
jle
sbb
add
ss
pop
xchg
cmp
lock
sbb
aas
fcmovnbe
jecxz
or
or
mov
mov
insb
fwait
js
jo
cli
or
adc
iret
rcll
xchg
jmp
jmp
rcrb
fistpl
push
out
mov
stos
mov
push
imul
sbb
push
out
das
sub
fsts
sub
jg
scas
or
xchg
jo
cmp
jo
stc
xor
mov
and
and
adc
xchg
shrb
ljmp
movsb
jmpw
xchg
push
mov
and
and
repnz
push
sbb
push
pop
xor
add
fcmovb
lods
add
xchg
in
fistl
push
into
push
je
mov
fndisi(8087
es
in
insl
scas
repnz
je
sbb
fndisi(8087
pop
push
test
push
xlat
pop
sub
bound
inc
and
inc
xor
dec
sarl
or
std
or
fisttpl
ficoml
xor
cltd
xchg
clc
adc
mov
test
fsqrt
sbb
pop
fwait
mov
test
jecxz
clc
rclb
push
repnz
dec
fldenv
xchg
sbb
mov
adc
push
inc
fnstsw
mov
push
or
and
xchg
dec
dec
fldcw
cmpsl
xchg
adc
cltd
xchg
mov
adc
sbb
cmp
cmp
lods
push
pop
into
dec
dec
fstps
adc
pop
notl
rcrb
imulb
sbb
sub
add
jns
or
jp
sbb
lahf
out
jae
test
std
jmp
outsl
lahf
pop
cli
cmp
mov
lret
and
orb
push
and
sub
in
or
dec
sbb
pushf
xchg
push
jl
lea
mov
push
push
lret
jns
lret
in
pop
in
adc
adc
inc
outsl
lahf
or
cmp
adc
cld
adc
add
add
outsl
lahf
outsl
fadd
stc
add
xchg
or
adc
loop
fstl
jnp
push
lds
imul
xchg
add
jnp
sbb
or
cli
gs
pop
ljmp
add
jl
out
loop
jno
xor
jb
mov
lret
addl
lahf
movsb
jb
xor
mov
ljmp
sub
lahf
pop
cltd
inc
pusha
testb
dec
jmp
cmp
insl
pop
jmp
cli
outsl
pushf
lret
mov
or
mov
xchg
loope
nop
pusha
idivb
sub
in
in
add
ret
out
lods
rcl
fcompl
or
cltd
lods
rcrb
cmpl
xchg
or
in
sub
insl
fidivrs
jno
leave
add
dec
loope
outsl
lahf
or
ljmp
test
inc
bound
pop
jmp
jno
lahf
xor
adc
cmc
je
cltd
mov
or
cli
cwtl
mov
or
loop
insl
dec
jl
in
dec
arpl
ja
mov
js
mov
jecxz
pop
out
sub
jns
lret
in
pop
std
adc
fiaddl
push
outsl
outsl
testb
jmp
cmp
or
lahf
mov
int3
adc
outsl
les
jb
hlt
adc
outsl
push
inc
mov
lahf
or
add
push
add
out
cmc
cld
fmul
adc
outsl
adc
in
icebp
jb
mov
or
mov
je
or
jno
or
outsl
leave
loope
xchg
pusha
testb
adc
outsl
nop
mov
insl
lahf
or
outsl
cmc
dec
sbb
mov
xchg
testl
inc
popf
or
addr16
xchg
testl
ljmp
cltd
loope
testb
lahf
push
hlt
insb
popf
or
lret
mov
fisubrs
pop
out
and
mov
xorb
stc
xorb
adc
test
sbb
arpl
nop
out
pop
mov
xchg
popa
pop
add
testb
ljmp
in
pop
or
push
jns
les
jle
in
sbb
daa
ds
jns
loope
cli
and
or
scas
jbe
inc
scas
insb
mov
packsswb
gs
ljmp
rorl
sbb
in
jno
push
mov
adc
jno
lahf
ljmp
lahf
or
adc
jge
imul
pop
out
insb
neg
ja
mov
xchg
pop
sbb
and
dec
xchg
hlt
mov
popl
jae
push
je
ret
add
jo
or
sub
pop
sbb
lock
mov
sbb
test
and
adc
jns
les
and
nop
mov
jns
jnp
in
and
jno
lahf
or
insb
sub
jno
lahf
orb
add
and
loopne
dec
xor
pop
jmp
push
nop
nop
or
mov
xchg
adcl
jno
lahf
or
lret
lahf
or
outsl
jnp
in
int
outsl
lahf
ljmp
lahf
or
adc
jne
xchg
mov
pop
scas
jge
adc
lea
mov
cli
xchg
xor
jno
lahf
andb
pop
or
lahf
or
pop
adc
mov
lahf
or
xchg
addb
xchg
incl
sbb
arpl
sahf
testb
fsts
test
pop
lahf
or
filds
cmp
pop
jns
iret
adc
daa
xchg
les
jb
xchg
subb
push
push
jne
push
cmp
outsl
test
adc
pusha
idivb
lds
insl
clc
or
nop
push
mov
mov
daa
sahf
dec
xchg
jne
add
outsb
orl
jg
pop
outsb
fistl
outsb
cmp
pop
idivb
dec
out
jnp
or
mov
dec
imul
push
pop
negb
pop
sbb
xchg
sub
adc
fiaddl
jns
sahf
add
rorl
mov
xchg
loopne
mov
popf
adc
call
subl
xchg
xor
imul
fs
cmp
xchg
jns
stos
add
fldl2t
rcrl
pusha
pop
mov
sbb
test
dec
xor
ja
fbstp
mov
dec
dec
cs
pop
jge
enter
jmp
and
pop
dec
and
add
sbb
pop
push
subl
daa
pop
test
arpl
jge
mov
xor
jmp
add
sbb
and
xchg
add
jbe
and
pop
and
repz
dec
push
inc
pop
and
sbb
pop
jecxz,pt
popf
xor
xor
or
xor
cmp
push
jne
aas
scas
jnp
mov
sbb
xchg
xchg
popa
add
cmp
pop
xchg
leave
ret
pop
popa
inc
out
sbb
rorl
pop
ds
jmp
sbb
popf
mov
mov
sbb
notb
cmp
in
leave
popa
ret
in
mov
ljmp
add
jmp
mov
jnp
push
sbb
or
fdivs
pop
push
jge
pop
jnp
add
cmpsb
insl
insl
movups
dec
cwtl
and
sbb
fildl
loopne
push
dec
xchg
mov
jmp
ljmp
or
in
pop
mov
stos
ret
add
jae
lahf
dec
push
inc
sahf
jge
pusha
sub
je
xorb
mov
inc
or
and
adc
dec
sbbl
xchg
arpl
mov
dec
sub
cltd
movl
push
leave
adc
push
test
jae
xorb
add
dec
xorb
pop
or
push
imul
jl
push
loope
popa
or
dec
push
imul
popf
das
rcrl
fcmovnbe
leave
cli
jns
pop
jns
leave
outsb
jne
xchg
mov
mov
inc
das
or
iret
stos
jns
xchg
out
and
sbb
or
cltd
es
lret
sahf
js
push
cmp
sub
cs
lret
xor
int3
add
xchg
sub
xchg
lods
enter
pop
mov
fwait
loop
insb
xchg
push
dec
ljmp
xchg
inc
adc
ljmp
cmp
sbb
mov
sub
mov
sbb
mulb
inc
insb
aad
cltd
hlt
add
push
sbb
adc
xlat
sahf
mov
aad
in
push
jle
ss
xor
push
cmp
dec
test
and
sbb
fnstsw
mov
jbe
push
outsl
sub
add
je
jg
pop
mov
adc
adcl
rsm
in
inc
cltd
sub
loop
iret
je
pop
mov
sbb
popa
sti
fwait
arpl
or
jecxz
fcmovne
mov
sbb
dec
pop
fcmove
orl
push
mov
xor
data16
or
cmpb
sub
test
or
and
aas
add
and
push
or
adc
out
in
movsb
and
sub
std
fldcw
xchg
add
or
ja
xchg
divb
stc
repz
iret
jo
mov
add
popa
mov
into
inc
sbbb
lahf
sbb
in
mov
mov
stos
testl
jp
jg
add
xchg
add
ja
sahf
xchg
sbb
test
shll
adc
repnz
ljmp
jg
jne
pop
sbb
pusha
mov
sbb
mov
sahf
insb
sub
mov
jnp
and
mov
jg
mov
lods
inc
push
push
dec
jge
popl
push
cmp
inc
int3
int3
aaa
adc
cmp
push
mov
add
outsb
sbb
repz
push
testb
xchg
pop
pusha
aaa
enter
mov
loop
pop
pop
push
not
iret
mov
arpl
fwait
jmp
aad
cli
popa
int
rcll
pushf
jl
aas
sarb
push
xor
sbb
dec
filds
jno
sbb
cld
xchg
enter
mov
ret
xor
mov
jl
push
loop
pop
dec
lret
sbb
arpl
out
pop
testb
out
jge
push
mov
lods
xor
dec
dec
mov
jecxz
call
dec
push
sub
clc
pop
sti
add
pop
loope
xchg
mov
push
mov
lret
dec
repnz
mov
cltd
jge
ja
ljmp
fistl
dec
jno
lods
mov
imul
and
ljmp
pusha
adc
stos
mov
sub
inc
ja
icebp
dec
sub
jge
lret
ss
mov
mov
sub
dec
repnz
fnstsw
cltd
aas
mov
in
dec
inc
jno
pop
repz
sbb
nop
addl
lods
clc
bound
jae
jl
push
popf
insb
sub
mov
in
cmpsl
flds
mov
js
int
stc
cmc
xorb
sub
pop
pop
fcoml
adc
xor
jae
loope
mov
add
inc
jp
cwtl
pushf
fldenv
testb
xlat
fildl
outsl
jecxz
adc
mov
lods
cld
pop
cmp
shrb
lods
ret
jle
mov
jns
push
sbbb
sbb
mov
aam
adc
dec
sub
jne
cmpsb
lock
mov
ja
decb
mov
gs
and
xchg
nop
insl
mov
dec
pop
and
push
xchg
cmc
inc
daa
inc
jb
adc
shlb
std
xor
or
arpl
cmp
ja
iret
je
push
cmpsb
jo
xchg
push
sub
add
loop
shr
jns
lret
loopne
sub
sbb
sub
pop
pop
or
jmp
fldenv
test
or
popa
xchg
into
cmp
push
sub
mov
aas
push
cmp
push
push
mov
fwait
xchg
push
pushf
orb
ljmp
sbb
add
data16
ljmp
fcom
pop
jns
dec
xorl
sub
push
lcall
in
mov
jl
inc
addr16
lock
ret
dec
in
push
hlt
cmpsb
out
repnz
js
mov
fmul
mov
jbe
cmp
cmp
repz
xlat
in
inc
loop
fcmovbe
leave
pushf
scas
in
push
push
insb
clc
add
lock
ficoms
add
jmp
xchg
stos
and
or
mov
jle
pushf
push
jae
pop
andb
aas
and
incb
incl
add
push
mov
mov
xor
sbb
loopne
data16
mov
fnstsw
mov
pop
fwait
movsl
or
das
lea
cmpsl
or
sbb
or
lods
call
add
sub
and
cmpsl
cltd
cmp
pop
imul
jecxz
loop
cltd
sahf
into
mov
dec
outsl
in
add
movsb
jns
aaa
orl
adc
and
sti
jb
mov
or
push
jnp
sub
adc
icebp
adc
mov
adc
sub
jp
jns
mov
push
fbstp
or
or
test
in
adc
ret
cltd
push
mov
and
add
xchg
pop
repnz
xchg
sbb
je
lock
jnp
mov
aaa
dec
mov
gs
ljmp
pop
mov
xor
pop
push
scas
add
test
dec
loope
mov
push
addl
arpl
insl
in
test
xor
pushf
iret
repnz
inc
xor
testl
sbb
cmp
pop
das
mov
push
or
imul
into
add
xor
adc
sub
sbb
vcvttpd2dqy
jge
add
jne,pt
arpl
mov
pop
movsb
sbb
shl
xor
popa
jae
ja
or
add
add
jbe
je
sarb
mov
sub
cmp
into
sbb
push
arpl
cltd
jb
outsl
into
push
loop
sub
cltd
and
jg
inc
fimull
add
xchg
pop
mov
xor
inc
xchg
imul
add
out
mov
or
or
testb
mov
or
mov
mov
outsb
push
mull
mov
andb
and
aam
aas
in
int
cmp
imul
sub
das
mov
sub
inc
push
mov
xchg
and
enter
or
cwtl
jbe
jns
jge
cmp
inc
jns
jmp
xchg
sarb
sub
js
adc
jl
adc
jmp
xchg
das
jo
orl
mov
mov
push
add
or
pop
cmp
in
sbb
nop
faddl
or
imul
pop
cwtl
dec
lcall
cmp
pop
inc
incb
lea
clc
pop
ficompl
push
dec
addl
ljmp
lcall
shl
xchg
pusha
or
cmp
lea
jecxz
cmp
xor
inc
popa
mov
in
cmp
jl
xchg
fsubrp
xchg
xchg
out
xchg
jbe
cmp
jbe
fisubs
mov
out
psignw
pop
sub
push
adc
xchg
inc
add
mov
loopne
rcrb
jmp
jecxz
mov
jb
xor
add
shlb
push
bound
mov
sti
and
arpl
dec
gs
loope
dec
movntq
xchg
mov
mov
xchg
mov
sub
cmc
jle
adc
xchg
scas
sub
jno
cmp
cmc
orb
inc
cmp
sub
jl
mov
rolb
add
sub
adc
push
sti
cmp
cmp
cmp
pop
in
repnz
int
lock
outsl
xchg
pop
pop
xchg
mov
push
push
xchg
nop
xchg
mov
inc
imul
test
pop
or
scas
loopne
fs
add
out
lret
add
flds
sahf
jge
xor
in
es
add
call
jne
push
in
inc
pop
lods
movsb
dec
jle
mov
and
aaa
sbb
jmp
xchg
movsb
xor
daa
xchg
jl
gs
pop
mov
aam
ret
mov
sbb
push
loope
mov
jns
sub
xorb
lret
jae
cmpl
gs
jbe
sbb
jo
mov
mov
out
cmpsl
inc
xchg
scas
or
mov
jns
mov
xchg
push
pop
xor
gs
jno
scas
dec
into
mov
sub
js
push
xchg
mov
pop
add
nop
sbbb
sbb
inc
sahf
pop
or
xchg
and
jbe
pop
lret
mov
in
sbb
cmpsb
inc
dec
into
cltd
xchg
xchg
add
and
pop
sbb
sahf
lds
and
add
andb
popf
push
add
cmp
icebp
mov
pop
jno
test
sub
mov
in
fs
or
mov
xor
iret
in
mov
inc
xchg
adc
inc
mov
pop
pop
sub
inc
mov
mov
jl
leave
stos
lods
inc
ja
jns
or
push
in
pop
test
adc
int3
or
xchg
into
fildll
xchg
loop
xchg
sub
cmp
or
cmp
and
cmpsl
mov
cmpsb
fsubs
int
callw
bound
lds
rorb
call
jg
sbb
cmp
push
loopne
shll
outsb
adc
dec
hlt
jge
fwait
subb
aas
mov
and
xchg
sbb
or
cmpsl
sahf
cmc
dec
mov
cltd
dec
jbe
data16
bnd
loop
out
dec
jmp
sub
jae
push
insl
mov
cmp
leave
insl
adc
inc
pop
jmp
add
and
out
mov
mov
pop
jae
xchg
sub
sbb
pop
clc
cmpsl
iret
dec
pusha
ss
xchg
pop
jbe
or
in
jmp
xchg
inc
sbb
mov
adc
jnp
cltd
cltd
je
es
in
stc
xadd
shll
push
filds
mov
jle
or
fistl
negl
andb
fistpll
aam
and
dec
and
or
or
cmpsb
dec
data16
xchg
out
ljmp
cmp
call
pusha
add
hlt
sbb
loop
out
fs
sti
lods
fsts
bound
ja
and
or
loopne
sbb
mov
and
fwait
sub
mov
mov
adc
and
pushf
cli
fiadds
pop
test
cltd
inc
sub
inc
mov
fldl
add
ja
or
das
fists
jnp
enter
fbstp
nop
dec
or
sbb
lcall
incb
pop
push
xor
gs
pop
es
stos
mov
movntps
or
js
mov
scas
mov
pop
insb
lods
stc
in
jle
stos
fists
cmc
notb
cmpsb
inc
push
add
mov
and
stc
and
add
mov
adc
or
icebp
push
mov
imul
pushf
loop
pop
jb
mov
fdivl
jge
popw
loope
popf
mov
shll
mov
mov
pop
mov
fadds
test
mov
push
rcll
lcall
mov
fsts
pop
fs
cmp
sub
call
enter
call
inc
mov
lock
pop
icebp
fsubs
lahf
sbb
cmp
movsb
outsb
sbb
add
testl
adc
pop
mov
cmp
pop
lahf
ds
push
inc
dec
or
bound
jmp
test
jbe
scas
adc
imul
in
jae
mov
in
mov
mov
inc
cld
and
js
daa
fstpt
sub
pop
pop
call
dec
mov
pop
push
bndldx
dec
subl
pushf
decl
mov
sub
in
aaa
nop
popf
push
cmpsl
and
int3
xchg
mulb
xchg
adc
jae
repnz
or
fidivrs
cmpsb
fldl
sub
mov
ljmp
xchg
sbb
pusha
mov
outsl
popa
jns
in
addr16
add
xchg
dec
mov
jge
sub
jge
shrl
arpl
dec
mov
jns
jbe
mov
cmpsb
into
es
aad
xchg
stc
or
jecxz
ljmp
lods
adc
mov
sar
sbb
insl
mov
pop
xchg
movb
add
mov
mov
cmp
inc
sub
jbe
push
outsb
movb
lods
cmp
xor
mov
cs
push
sub
in
jae
pop
xchg
pop
sub
jg
xchg
push
dec
push
lea
inc
cltd
je
mov
pop
into
sbb
aas
adc
jns
loope
mov
cmp
pop
add
adc
lret
pusha
jne
mov
dec
inc
xchg
inc
pop
das
fucomi
pop
pop
mov
jp
popf
dec
int
lods
sahf
and
cmp
int
push
mov
xor
jmp
mov
and
insb
dec
xchg
push
jo
je
sbb
outsl
pop
dec
aad
clc
mov
inc
add
je
cld
jmp
xchg
mov
mov
sar
test
bnd
cmc
push
and
mull
pop
shrl
imul
lcall
shlb
sti
xchg
and
jg
or
cmp
adc
add
dec
test
test
jl
fcomps
in
push
xchg
cmp
aaa
mov
cld
in
xchg
inc
sbb
out
mov
sub
out
pop
cltd
sub
cmpsb
cmpsl
mov
addr16
adc
xchg
daa
out
cs
fists
and
jg
pushf
inc
imul
mov
ficoms
or
ret
xchg
rorl
pop
inc
fldenv
stos
adc
or
and
mov
xchg
fiaddl
aas
xor
sti
daa
lds
daa
or
stos
or
dec
imul
popa
sbb
shlb
ljmp
pop
idivb
mov
mov
addr16
fs
xor
jmp
aas
dec
pop
cmpb
sbb
out
or
and
lahf
into
mull
mov
push
aad
mov
outsl
aam
and
sbb
insb
test
les
jmp
mov
pushf
xor
lret
xchg
cmp
dec
mov
cs
stos
jae
notb
cmp
cltd
inc
fucomp
jbe
mov
and
into
lcall
scas
dec
scas
stos
ljmp
mov
push
arpl
dec
shl
mov
insl
mov
xchg
jae
addr16
xor
repz
nop
mov
mov
sub
daa
shll
xchg
aas
mov
mov
rep
jbe
or
in
sbb
inc
pop
mov
jne
fwait
adc
in
jo
add
lahf
xchg
push
mov
addl
cwtl
xor
jmp
sbb
cmp
mov
adc
test
xor
inc
mov
pop
mov
pushf
jmp
mov
fdivl
pop
lret
sti
bound
fwait
icebp
dec
std
xor
jmp
loopne
out
loope
ljmp
mov
dec
sbb
add
xchg
nop
fstl
mov
cmp
xchg
aad
mov
gs
nop
into
mov
orl
xchg
sub
push
inc
jmp
dec
cs
sbb
das
lds
cmp
cmp
mov
push
sub
pushf
rcll
fwait
ss
dec
aad
dec
xchg
jle
push
fsts
loope
dec
outsb
pop
aas
test
mov
add
cmp
out
cltd
test
jo
and
sub
xchg
and
inc
jmp
mov
jnp
mov
and
add
jg
push
je
dec
scas
mov
cs
mov
jg
jge
insl
add
inc
inc
repnz
pop
pop
lahf
cmp
and
and
xchg
int
or
cld
gs
xchg
adc
sub
dec
or
jg
cmp
aaa
insl
imul
adc
gs
add
push
push
jbe
outsb
xchg
ss
mov
insb
sbb
jge
mov
push
jl
inc
loope
idivb
sbb
sahf
inc
jge
addr16
sub
xchg
mov
jle
cmpsb
outsl
enter
loopne
jne
sub
fldenv
dec
sbb
lods
mov
sarb
in
and
sbb
xchg
clc
dec
outsl
inc
sub
add
mov
shr
inc
jnp
sub
icebp
jmp
cmp
inc
lcall
and
hlt
pushf
cmp
jl
xor
sahf
testl
jnp
in
inc
sbb
clc
lods
nop
dec
outsb
xor
stos
ret
int3
sbb
rcl
rcrb
pop
jle
xchg
sub
lods
adc
jmp
inc
fidivrs
inc
and
fstpt
insl
lahf
data16
push
inc
shr
les
sbb
aad
mov
dec
mov
or
jae
dec
je
add
sbb
pop
dec
jle
mov
lahf
jmp
shll
adc
jecxz
cmpsl
pop
cli
mov
dec
lret
dec
pop
sbb
mov
mov
cmc
decb
mov
fwait
mov
or
pop
ss
xchg
pop
xchg
or
lcall
int3
pop
rorl
push
pop
push
hlt
add
imul
ret
pop
loop
ret
icebp
adc
dec
shll
pop
out
push
call
xchg
ss
ss
icebp
into
jb
mov
and
cmc
jnp
push
and
push
fmul
mov
ret
dec
lea
pushf
icebp
or
mov
insb
test
push
mov
imul
and
dec
out
push
dec
lea
lock
or
mov
sbb
dec
scas
mov
mov
mov
jnp
int3
les
push
fsubrp
std
xchg
push
mov
iret
xor
and
jns
sbb
add
or
adc
add
sahf
xor
sti
mov
push
lret
mov
es
ret
adc
sbb
popf
mov
cmc
out
adc
gs
dec
cmp
jo
xor
xchg
stos
pop
repz
add
xchg
dec
movsl
pushf
sahf
lcall
imul
cwtl
or
sub
jo
cmp
cltd
js
adc
pop
cmpsb
xlat
inc
xchg
enter
push
stos
mov
or
xchg
xor
xchg
jecxz
cmp
jno
mov
adc
ret
xchg
inc
outsb
mov
mov
adc
int
sbb
lahf
imul
ret
or
adc
inc
push
call
xchg
cwtl
jl
sahf
sahf
clc
xchg
xrelease
mov
jmp
and
sahf
cwtl
and
mov
mov
aad
addr16
push
arpl
sbb
negl
int3
jl
loope
mov
mov
and
lea
push
test
dec
test
xchg
imul
stos
pusha
cli
in
sbb
pop
fwait
stos
pop
loopne
xchg
lret
dec
xor
rcrb
movsb
sbb
cli
and
gs
add
in
add
int3
push
ds
pop
icebp
cmp
cwtl
jnp
push
icebp
insl
repnz
mov
pop
div
and
inc
jno
iret
pop
cmp
in
bound
or
rclb
push
mul
shrl
sbb
addr16
outsb
scas
sar
fdivrp
aad
int3
mov
adc
xchg
lock
pop
dec
adc
inc
repz
jb
push
adc
xchg
xor
jae
leave
mov
int3
fildl
cmc
mov
mov
in
xchg
push
ret
outsl
mov
lahf
fldenv
es
xchg
aam
jno
pop
pop
mov
popf
inc
adcb
lea
or
mov
push
lods
pusha
cld
or
dec
mov
xchg
mov
lods
cmpl
xorl
in
clc
pop
cwtl
sub
jl
int
pop
icebp
xorl
sbbl
jae
mov
jmp
test
sub
loope
sbb
mov
jbe
nopl
cmpsb
sub
or
scas
sahf
enter
sbb
xchg
jmp
adc
sub
ret
testb
cmc
xchg
adcb
dec
push
push
fimuls
ret
pop
addr16
arpl
pop
mov
jne
jne
mov
cld
or
pop
loope
mov
lret
add
test
daa
pop
cmc
ret
mov
jne
pusha
inc
in
mov
push
mov
sarb
sub
pop
adc
scas
add
sub
js
frstor
xor
daa
inc
inc
xchg
stos
outsl
jo
push
xchg
push
fwait
addb
jmp
mov
fistps
loop
dec
aad
mov
jae
mov
in
pop
or
gs
push
xor
aaa
sahf
push
mov
push
popl
test
push
dec
push
dec
out
test
mov
dec
test
pop
icebp
iret
cmpsb
pop
std
imul
lret
lods
js
sbbl
push
mov
mov
lret
xorb
sub
mov
pop
and
aaa
or
sbb
insl
cli
jne
subb
add
mov
xor
arpl
js
imul
push
push
and
add
and
outsl
push
aaa
das
sub
cmp
nop
int
mov
icebp
andl
mov
cltd
xor
mov
jg
pop
cmc
mov
pushf
popa
pusha
sbb
jnp
mov
dec
xor
std
pop
fsubrs
mov
jno
or
movl
xchg
and
sub
adc
cld
int3
stos
lods
std
fucomip
push
push
cmpsb
loopne
arpl
mov
scas
jl
scas
adc
add
dec
subb
jg
mov
arpl
cli
push
and
ljmp
cmp
mov
ja
pusha
sbb
xor
xor
outsl
lret
inc
gs
cmc
push
xchg
jp
inc
adc
xchg
push
cmc
sahf
into
testl
outsl
push
lock
cmpsb
mov
mov
sub
mov
jle
loop
dec
and
adc
pop
xor
clc
lods
fnstenv
jp
loop
fs
xor
les
nop
gs
dec
mov
mov
inc
push
imul
addr16
test
or
popa
push
call
xchg
ja
loope
fstp
testb
adc
cltd
sbbb
aas
push
insl
imul
and
lret
dec
scas
add
fistpll
xor
or
sbb
aas
add
addr16
fcoms
mov
cmpsb
add
add
cmc
aad
cmp
dec
lret
xchg
add
push
add
mov
pop
shll
sbb
xor
rcrl
out
fistpll
dec
mov
cmp
iret
ja
aad
adc
jno
xchg
mov
imul
dec
and
addr16
sub
mov
test
jg
xchg
arpl
sbb
es
insb
mov
orl
aas
cmpsl
sbb
jge
aam
loope
sbb
icebp
sbb
and
test
or
jge
stc
mov
jae
or
xor
js
mov
es
lcall
push
xlat
std
aas
arpl
push
or
jbe
ja
add
cmp
inc
mov
inc
inc
fstps
jle
mov
push
push
dec
addr16
pop
pop
push
cld
nop
mov
outsb
pop
out
dec
test
cmpsb
jo
push
mov
lea
gs
xchg
imul
pop
dec
sub
sub
nop
push
bt
add
bound
push
and
movsl
neg
addl
jmp
movsb
fstpt
push
cmp
xor
jmp
adc
xchg
inc
cmp
cs
lahf
flds
cmc
pusha
bound
pop
pop
dec
xchg
mov
daa
add
das
jnp
ja
stc
mov
push
pop
lea
mov
int
add
ds
xchg
jg
loop
pop
call
sub
mov
cmp
and
or
data16
mov
xor
ljmp
sbb
gs
push
inc
push
std
sub
xchg
cmc
inc
out
or
hlt
outsb
sbb
aam
jl
fcmovnbe
jne
pushf
xchg
mov
mov
loop
jnp
or
and
movsl
movsl
call
cmp
out
popl
ljmp
inc
mov
sbb
xor
ja
jb
xor
sub
adc
dec
add
gs
loopne
adc
cmp
arpl
mov
jns
sbb
leave
jg
xchg
gs
rcll
fcoms
xlat
shl
jo
xchg
inc
push
ja
jecxz
test
je
mov
imul
pushl
cli
push
adcl
sbb
scas
jbe
ss
or
sub
ljmp
ljmp
lcall
dec
cwtl
sarl
test
lods
jmp
loope
imulb
mov
pop
icebp
mov
adc
imul
mov
jns
inc
addb
or
fsub
or
call
mov
fstl
std
push
mov
test
shlb
mov
xorl
dec
mov
enter
adc
bswap
xchg
rorl
jmp
dec
mov
push
gs
shlb
fs
jmp
or
int3
cmpsl
inc
jl
adc
pop
cmp
mov
bound
push
dec
das
pop
mov
scas
in
stc
sbb
cmc
push
ds
ret
mov
insb
cmp
jl
jno
mov
rcrl
into
daa
pop
icebp
adc
jg
jns
rorl
jno
xor
pushf
loope
mov
cmp
jne
std
cmp
fistpl
add
int3
mov
inc
insl
out
repnz
mov
fsub
fadd
xchg
and
jmp
sbb
push
xchg
adc
cmp
out
xchg
pop
imul
cmc
aad
mov
sbb
xor
shlb
mov
outsb
cmp
test
lods
out
sbb
das
jecxz
cld
std
mov
xchg
pop
loopne
cmp
loope
mov
ds
cwtl
jne
add
jg
and
lods
aad
cmp
sbb
aas
adc
xchg
cmp
xor
cli
jl
pop
imul
test
mov
mov
lods
fimull
jne
push
sub
insb
push
loope
xlat
sbb
mov
jp
test
jne
jnp
int3
iret
movl
popf
arpl
outsl
adc
or
add
inc
cwtl
push
pop
test
or
mov
pop
xlat
in
inc
mov
fwait
ljmp
or
mov
mov
mov
rcll
add
sbb
lahf
inc
movsb
in
rorl
and
inc
dec
jns
jecxz
js
pop
aad
sub
xor
mov
out
pop
mov
add
xor
lods
xlat
jle
push
data16
cmc
outsb
push
loop
loop
or
pop
mov
icebp
or
and
repz
xor
push
fistpll
test
rolb
movsb
ja
clc
dec
je
and
mov
fucom
jbe
lods
adc
leave
scas
sbb
stc
shrb
jmp
cmp
cmp
xchg
repnz
imul
dec
int
jnp
mov
jnp
popf
dec
jp
add
cltd
sub
lds
adc
pop
cmp
outsl
dec
or
mov
pop
jl
pushf
cmp
jnp
pushf
sub
jmp
cmpl
mov
popa
divps
push
fidivs
insl
cmpsl
popf
sbbb
cs
dec
push
lea
ss
rolb
lea
stos
push
cmc
int
dec
sub
cmp
xor
cmpb
cli
and
bound
dec
xchg
lock
arpl
jl
mov
jle
push
dec
jg
push
and
imull
push
lock
xchg
stos
inc
fidivrl
xchg
pushf
dec
adc
cmp
divl
outsb
ljmp
sub
push
adc
jmp
push
cwtl
cmpb
mov
insl
scas
sub
and
add
or
dec
lea
mov
js
mov
sub
xor
aam
dec
loope
mov
mov
andl
insb
addb
inc
sbb
insb
add
cli
sub
adc
popf
adc
mov
aam
cwtl
test
aam
jb
mov
shl
push
cmp
movsl
cmpsl
fnstsw
and
nop
pushf
pusha
sti
popf
shl
xlat
xor
aaa
mov
lea
pop
push
and
inc
je
inc
dec
pop
jmp
xchg
stos
into
push
repz
je
inc
sbb
xchg
out
xor
mov
inc
cmp
dec
sbbb
inc
cmp
lea
out
sti
imul
sub
mov
int3
cwtl
sbb
add
jno
rcrb
pop
mov
aad
inc
cmc
loope
push
xlat
sbb
lret
rcrl
data16
lods
xchg
sub
out
cmc
mov
insb
loop
orb
jp
sbb
pop
sti
fisttpl
adc
cltd
xchg
adc
mov
shlb
jae
mov
jno
out
jp
mov
shrl
xchg
es
lds
jle,pt
data16
mov
cs
xor
test
ja
mov
dec
xchg
adc
aas
push
daa
pusha
inc
fstl
notl
sub
std
mov
xchg
in
sbb
adc
ds
mov
in
sbb
sbb
xchg
cmp
xor
dec
jbe
fptan
push
adc
enter
cmp
sub
inc
fs
movsb
addr16
dec
cmp
xchg
dec
cwtl
jp
lods
cmpsl
dec
mov
test
xchg
cmp
lret
pusha
jp
cmpsb
pushf
sub
cltd
push
roll
mov
push
jge
std
movsw
push
jmp
loope
aam
mov
push
inc
dec
lods
mov
xor
mov
pushf
fstpt
in
xchg
inc
jns
sbb
mov
adc
and
inc
cmovs
sub
mov
loope
lret
call
stc
inc
jae
je
lea
push
lods
jo
int3
cmpl
lods
mov
inc
jmp
adc
pop
ja
lock
push
pop
push
add
add
mov
adcl
inc
clc
cmp
das
cs
cltd
dec
dec
mov
cltd
fs
andl
cmp
pusha
data16
insl
pop
jb
scas
inc
arpl
xchg
je
scas
jnp
inc
ret
imul
cmp
dec
andb
jmp
jecxz
jecxz
aas
mov
test
aaa
test
aam
xorl
ucomiss
in
add
xchg
pop
repz
mov
ja
scas
out
lock
sub
mov
xor
jge
sub
sub
in
mov
clc
cmc
add
jl
ja
xchg
mov
jl
ss
lret
jb
test
xchg
pushf
loop
inc
stos
xchg
js
icebp
and
mov
cmpsl
lock
fldt
push
xchg
sub
sub
pusha
mov
je
shrl
loope
arpl
xor
pop
dec
in
mov
ja
outsb
loop
fs
popf
lock
lods
pop
arpl
cwtl
gs
lods
jns
mov
push
mov
push
xlat
fdivl
loop
jne
xor
inc
mov
into
add
pop
ja
stos
mov
jo
sbb
loope
les
frstpm(287
xchg
mov
xchg
mov
inc
gs
and
fsubl
cmp
add
cmp
cmp
std
xchg
push
ffree
inc
sbb
pop
and
inc
pop
sets
inc
jbe
jnp
mov
jns
push
icebp
fs
sbb
dec
sub
pop
add
adc
ds
aad
push
daa
dec
scas
push
jae
mov
push
dec
mov
sbb
jle
dec
bound
lahf
xor
repnz
inc
jle
mov
in
xchg
fistpl
daa
jnp
dec
sub
jnp
pop
jle
push
dec
xor
adc
call
cmp
movsl
loope
lcall
add
stos
loopne
sub
push
rcll
dec
mov
jg
call
notb
popf
arpl
jle
fwait
cld
mov
inc
sub
xchg
push
stos
mov
push
jmp
mov
jp
pop
lret
adcb
pop
jnp
adc
or
cltd
loopne
lcall
push
push
sbb
cwtl
iret
int
or
push
dec
dec
inc
sbb
test
jne
sub
mov
and
jp
jns
sub
xchg
and
jne
sub
push
aas
xor
mov
and
int
je
lock
mov
push
push
sbb
out
es
push
insl
std
push
out
in
xor
sti
xor
outsb
testl
xchg
pop
rclb
mov
lahf
lods
test
and
cmpsl
mov
jp
push
and
out
jecxz
mov
fidivrs
xlat
sub
sti
popl
test
lcall
mov
pop
imul
sub
daa
stos
loopne
xorl
add
gs
jp
jg
cli
push
minps
fwait
gs
sbb
jg
sub
in
mov
subb
inc
rcr
add
cmp
pop
xchg
mov
insl
add
mov
pop
imul
adc
mov
mov
sbb
add
xor
test
lods
rolb
stc
jo
int3
jno
ljmp
push
jge
xchg
pop
mov
jmp
pop
add
or
fildl
jmp
inc
mov
inc
sub
pop
jmp
loope
add
into
ja
inc
cli
mov
lcall
lcall
push
sbb
xchg
push
jg
pop
loop
roll
dec
mov
push
inc
pop
cli
popa
add
xlat
push
fwait
mov
vaddsd
repnz
addr16
jmp
ds
orb
jle
pop
imul
test
mov
xchg
xor
sbb
xor
xor
push
imul
jns
cwtl
mov
cmpsb
or
cmpsl
sub
cmp
aaa
in
xor
adc
push
sahf
inc
mov
sub
jb
lret
arpl
xchg
xor
sub
fs
and
clc
sbb
dec
lock
cmp
dec
xchg
pop
loop
movsb
or
stos
subb
je
cmpsb
andb
jnp
cmc
stos
iret
pop
adc
lods
gs
fs
mov
lock
movsb
push
cld
sub
and
lock
lcall
in
movsb
std
mov
aad
xchg
into
pushf
ret
and
cmp
jbe
inc
jne
xor
jge
or
jle
mov
and
popf
fisubl
and
shrl
aam
sbb
je
lret
aas
pop
gs
pushf
insl
mov
movsl
dec
repnz
mov
jns
fwait
cltd
cmp
shlb
jp
mov
sbb
sbb
adc
mov
ss
inc
push
clc
movsb
push
adc
xchg
in
popa
repnz
mov
mov
mov
cmp
es
lock
movsl
and
pop
pusha
jle
pop
or
sti
dec
jbe
lds
sbb
bound
test
push
popa
imul
sbb
jg
sbbl
xchg
sub
xor
fstl
sahf
push
adc
add
inc
and
jns
ror
jle
pop
mov
mov
stos
nop
fidivrs
in
cld
iret
arpl
outsl
daa
jmp
xor
mov
int
outsb
jnp
cmp
arpl
arpl
mov
loop
insl
mov
sbb
out
or
xchg
ret
jl
lock
fisttps
mov
lock
pop
sbb
fldt
push
fwait
addb
add
push
out
lret
xor
or
push
fs
jnp
mov
push
jbe
and
orb
pop
sahf
xchg
hlt
mov
sub
outsb
pusha
or
out
mov
test
ja
and
rcl
gs
cmp
adc
fcompl
xchg
popa
cltd
aas
ret
leave
cmpsb
dec
imul
fwait
or
xchg
xlat
scas
jle
adc
aad
add
aad
dec
daa
sub
add
jmp
jmp
jg
and
jne
mov
iret
cmc
jb
cmp
lods
cli
inc
testb
loope
and
cmp
aad
sub
cli
mov
jl
in
lret
in
addr16
inc
sti
call
sbb
popw
or
jle
push
testl
leave
daa
sub
loop
ljmp
pop
dec
lahf
shlb
inc
xchg
pop
xchg
int3
dec
push
cmp
cmp
cld
push
cmp
mov
aaa
inc
mov
shll
outsl
fiadds
mov
stos
hlt
jnp
cltd
in
mov
dec
cli
inc
push
stc
insb
into
xchg
hlt
cltd
inc
dec
mov
dec
mov
fsubrs
adc
stos
clc
add
std
lret
nop
push
out
ret
inc
jo
loop
mov
test
cmc
or
pushf
cwtl
or
xchg
and
cltd
repz
iret
std
loop
negl
imul
and
test
mov
test
pop
repz
push
sub
dec
add
mov
dec
and
jmp
lds
inc
jmp
imul
pop
gs
and
push
push
push
es
mov
push
pop
and
outsl
add
inc
push
sub
cmp
in
call
add
sub
cmp
xor
mov
add
push
xor
cmpsb
cmpsb
mov
adc
mov
lock
mov
in
mov
pop
push
into
and
dec
xorb
aam
adc
push
mov
gs
movsb
push
push
jmp
add
pop
push
lcall
dec
outsb
into
mov
jecxz
fcompl
cli
jg
pop
arpl
mov
fwait
mull
icebp
and
mov
daa
popf
ss
pop
push
jae
mov
add
bound
jo
push
pop
fsubrl
int3
inc
iret
jmp
jle
in
int
and
lods
xchg
push
xchg
push
jmp
arpl
clc
xchg
lret
out
dec
lea
xchg
mov
inc
dec
adc
mov
jmp
loope
xchg
push
add
xor
test
lock
subb
jmp
ja
test
bound
xchg
fistpll
xchg
push
sbb
jmp
cmp
add
orl
insb
cld
in
sbb
std
fdivs
inc
jno
lret
popf
cld
cli
loope
movsb
jo,pn
cmpb
cmc
push
push
lds
enter
and
mov
lock
out
sbb
adc
xchg
xlat
enter
insl
or
or
mov
cltd
repnz
faddl
jo
xchg
int3
out
out
or
inc
or
ret
das
imul
data16
rorl
cltd
inc
inc
push
push
pop
mov
lods
rcr
and
jl
fisttpl
dec
shl
mov
cmp
es
addr16
adcb
jo
jmp
cltd
cmp
sbb
repnz
fwait
jg
adc
sbb
push
xchg
fwait
jmp
nop
loop
in
sbb
cmp
jle
enter
push
orl
sub
push
fbld
loope
mov
add
addr16
test
scas
jmp
repnz
mov
adc
push
adc
lods
lret
and
sbb
dec
je
and
and
jns
cmpl
clc
jl
cmp
inc
inc
pop
std
imul
pop
cmp
jns,pt
xor
sub
mov
pushf
xlat
dec
jbe
inc
leave
cmc
pop
ja
stc
xor
and
xor
mov
mov
cmp
int
sti
movsb
shll
test
push
mov
push
cs
ret
dec
inc
dec
jp
mov
pop
mov
or
loope
mov
cltd
jge
repz
pop
fstl
jae
jge
loopne
sbb
cmp
incl
xchg
dec
mull
jne
daa
dec
push
jmp
mov
sbb
dec
sbb
adc
lret
xor
jae
xchg
daa
mov
xor
dec
pop
andl
mov
jnp
push
adc
push
sti
push
cltd
mov
ljmp
sub
xlat
jg
out
mov
adc
int
fldl
cmp
jmp
adc
ficoml
pop
iret
inc
aas
sub
inc
shr
lods
imul
add
ret
sub
fldenv
lods
mov
mov
cwtl
or
pop
xchg
popa
xor
add
mov
stc
mov
xchg
dec
orb
cmpsl
imul
sbb
xchg
repz
push
cmc
xchg
xchg
in
testl
sub
sub
jp
xchg
mov
cltd
push
jbe
fwait
loope
loop
orl
mov
mov
adc
dec
dec
cwtl
movsb
mov
cwtl
cmpsb
cmpsl
inc
in
test
inc
xor
mov
xlat
loopne
push
leave
xchg
scas
in
lret
dec
lods
or
sub
mov
pop
sarl
push
adc
push
mov
jnp
add
cmpsb
mov
les
cmpsl
daa
in
enter
lret
xchg
sarb
xchg
into
in
stos
dec
int3
subl
cmp
mov
push
xchg
jmp
sub
push
sbb
cmp
aaa
pop
push
ret
adc
cmp
adc
or
or
or
sbb
popw
jae
xor
jg
popa
cs
dec
sub
or
jns
xor
cli
das
xor
xchg
mov
sarb
stc
or
repnz
jbe
movsl
xor
ret
movsl
xlat
enter
xchg
dec
cmp
inc
mov
sbb
rcll
xor
or
add
adc
call
dec
cmc
jg
imul
push
jnp
adc
lret
jmp
sbb
addr16
adc
lahf
add
idivb
push
iret
push
lret
cltd
in
inc
popf
jg
lahf
leave
and
icebp
outsb
adc
enter
jae
xchg
arpl
add
aas
jmp
pushw
sub
inc
adc
cmc
dec
adc
and
inc
fmull
test
xchg
xchg
std
push
cmp
mov
jbe
insl
ds
divps
test
and
inc
pop
xlat
lds
loop
mov
frstor
push
pcmpgtw
mov
add
insl
push
ss
sub
pusha
lcall
add
mov
cmpsl
ret
sahf
jge
scas
ret
jge
pop
dec
and
repz
loopne
insl
leave
push
pop
add
sub
test
xor
ss
das
adc
xchg
jg
dec
sub
ror
jp
fwait
incl
cld
adc
push
pop
add
out
adc
jnp
loope
sarb
cmp
jge
or
popf
lock
and
xor
xor
call
bound
inc
mov
icebp
push
aad
cmp
add
movsl
mov
lods
rol
lods
push
dec
shll
mov
inc
adc
mov
popa
lea
xchg
inc
adc
and
loope
ret
pushl
divl
fisttpll
sub
std
sbbl
push
loope
out
adc
setge
jb
test
jne
enter
push
add
sbb
cltd
in
cmp
dec
not
insb
cmp
mov
mov
outsl
xchg
or
and
mov
pusha
movsb
sub
cmc
cltd
mov
mov
rorl
aas
gs
mov
pusha
jge
jecxz
shlb
gs
pop
sbb
insl
mov
mov
sub
sbb
sbb
insl
subl
mov
dec
cmp
push
xchg
push
test
push
cmp
test
jns
dec
and
jp
xchg
arpl
sarb
lahf
cltd
mov
cli
sbb
fildl
cmpsb
outsl
and
jne
pop
test
stos
cmp
and
push
jb
dec
xor
jbe
jns
jge
mov
adc
pop
jns
outsl
je
aas
cmpsl
mov
jmp
dec
push
dec
add
test
push
jl
js
leave
or
rcrl
inc
fiadds
lods
pop
mov
xchg
pop
dec
cmp
mov
pushf
sbb
mov
daa
sbb
sub
clc
jo
jmp
cmp
out
cmp
sbb
sbb
push
out
repnz
and
div
adcl
push
push
lret
mov
gs
lds
jp
sub
mov
push
xchg
pop
lahf
ret
ret
jnp
mov
and
cs
jns
sbb
sub
pop
out
out
xchg
pusha
gs
fiaddl
push
insl
pop
stos
js
sbb
lcall
in
mov
stos
lock
jne
sbb
jae
lods
inc
aad
in
adc
mov
maxps
mov
xchg
add
rorl
sbb
mov
je
xchg
in
je
sahf
test
divl
into
jo
push
dec
iret
or
sub
cmp
cmpsl
add
rclb
or
jmp
mov
dec
in
cltd
inc
pop
add
dec
dec
loope
lods
add
jge
add
pop
xchg
sub
imul
push
cltd
dec
les
call
decl
adc
shr
stc
jecxz
xchg
sbb
daa
sbb
mov
hlt
xchg
ljmp
xchg
fs
dec
dec
fimull
or
xor
xchg
popa
ljmp
add
fstpt
js
iret
dec
je
daa
sub
cli
sarl
pusha
mov
popf
sbb
or
cmp
sub
jno
dec
imul
subl
mov
neg
dec
pop
ret
sbb
cld
xchg
inc
addr16
xchg
cmp
dec
icebp
inc
outsb
mov
sbb
inc
adc
cmp
dec
mov
or
lcall
inc
jno
cltd
test
arpl
cmp
mov
mov
push
and
pushf
adc
inc
dec
or
pop
roll
repz
das
clc
ja
lea
and
mov
adc
loop
jle
popf
push
push
sub
pop
sti
outsb
or
in
into
popf
sahf
xor
fs
cmc
imul
imul
cltd
pop
dec
mov
fisttpl
jmp
cld
sub
xchg
add
fnstsw
movsb
mov
hlt
out
loope
sti
xor
mov
repnz
ds
pop
sbb
jbe
mov
pop
xchg
mov
jae
test
dec
test
sahf
xorl
and
adc
xor
jmp
mov
add
test
inc
iret
movsb
imul
jl
or
sahf
xchg
jmp
inc
lret
jae
pop
dec
mov
cmp
lods
sub
not
in
stc
out
mov
lahf
ret
mov
jmp
xchg
pop
add
int
popa
enter
andb
ja
adc
clc
iret
cld
lea
stos
iret
mov
sbb
jmp
sbb
xchg
mov
sub
rcll
ficomps
scas
leave
js
mull
inc
or
inc
push
mov
mov
cmp
mov
addl
orl
gs
jg
jns
sbb
jb
xchg
mov
mov
inc
aas
sub
xchg
jge
dec
pop
mov
jg
mov
mov
insb
loope
insb
jo
test
xchg
or
fstp
mov
mov
xchg
sar
scas
jb
ss
add
fists
jle
mov
rorl
xchg
cmpb
jbe
fdivrl
inc
sub
outsb
ljmp
pop
mov
jl
fwait
adc
add
add
jge
or
es
.byte
repnz
