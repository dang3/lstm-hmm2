add
mov
jmp
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
movl
mov
movl
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
je
push
push
lea
call
push
lea
mov
call
mov
mov
push
push
push
push
call
or
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
cmpl
je
lea
call
mov
push
push
lea
push
push
movb
call
test
je
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
cmp
je
cmpl
jne
mov
mov
lea
movb
call
mov
mov
inc
add
cmp
mov
mov
jb
mov
cmp
je
mov
push
mov
mov
push
push
push
call
mov
call
lea
movl
call
pop
pop
mov
pop
pop
mov
add
ret
nop
mov
test
je
jmp
ret
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
xor
test
sete
mov
mov
push
push
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
cmp
je
mov
lea
push
mov
lea
mov
testb
je
movl
test
je
movl
mov
mov
test
je
mov
testb
mov
je
mov
push
mov
shr
and
mov
mov
mov
test
pop
je
movl
test
je
mov
testb
je
movl
mov
push
shr
and
mov
mov
call
mov
call
pop
pop
ret
push
mov
cmpl
je
push
push
call
mov
mov
cmp
mov
ja
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
mov
jmp
mov
mov
lea
mov
mov
mov
lea
lea
mov
neg
sbb
and
or
mov
sub
pop
je
dec
je
dec
mov
lea
je
mov
mov
jmp
mov
movl
jmp
mov
mov
lea
movl
jmp
mov
lea
mov
mov
mov
mov
lea
lea
mov
neg
mov
sbb
and
or
mov
pop
ret
lea
ret
cmp
and
fdivrl
and
push
and
push
mov
mov
test
je
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
mov
call
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
xor
test
setne
mov
mov
xor
test
setne
add
lea
push
mov
call
push
mov
call
mov
call
pop
ret
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
xor
mov
mov
mov
test
setne
mov
mov
mov
xor
test
setne
mov
mov
mov
add
push
push
call
add
pop
ret
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
call
mov
test
je
mov
test
jne
mov
test
je
mov
jmp
xor
test
je
mov
test
je
mov
jmp
xor
test
je
mov
test
jne
test
je
mov
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
call
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
cmp
jbe
mov
push
lea
add
mov
push
mov
call
cmpl
jne
mov
mov
test
jne
movl
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
push
push
call
mov
add
cmpl
jne
cmpw
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
mov
xor
cmp
sete
mov
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
movl
mov
mov
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
mov
mov
mov
cmp
jbe
mov
mov
mov
push
mov
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
push
call
mov
mov
mov
mov
cmp
jg
test
jge
xor
jmp
cmp
jle
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
push
mov
call
mov
mov
xor
mov
push
push
push
push
call
lea
call
push
lea
mov
call
lea
call
movb
mov
push
push
lea
push
push
call
mov
mov
test
je
push
mov
push
push
push
call
inc
cmp
jle
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
call
mov
mov
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
push
push
call
test
jl
mov
lea
push
push
call
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
call
test
jl
mov
test
je
mov
mov
push
push
call
mov
push
mov
call
pop
pop
add
ret
push
push
push
push
call
mov
lea
test
push
push
setne
push
push
mov
mov
call
add
test
je
xor
call
mov
pop
pop
ret
mov
push
push
push
call
add
test
jne
xor
mov
push
call
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
call
push
lea
movl
call
lea
xor
mov
movl
movl
mov
mov
mov
movl
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
mov
movl
lea
movl
mov
lea
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
lea
movb
call
mov
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movb
call
mov
movl
call
mov
pop
pop
pop
mov
add
ret
nop
push
push
push
push
mov
lea
push
call
push
push
push
push
push
call
mov
mov
add
test
je
push
push
call
add
push
call
lea
mov
xor
mov
push
push
rep
push
call
push
push
push
push
push
call
mov
add
test
je
push
push
push
push
call
add
push
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
mov
push
call
mov
mov
add
test
je
lea
push
push
push
call
add
push
call
mov
push
push
push
inc
push
push
mov
call
mov
add
test
je
push
add
push
push
push
call
add
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
call
add
test
jne
mov
mov
push
push
push
call
mov
add
push
call
pop
add
ret
nop
push
push
mov
push
mov
sub
push
push
push
push
push
push
mov
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
push
push
call
add
mov
mov
push
call
test
pop
je
mov
mov
cmp
je
lea
push
call
add
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
mov
call
mov
test
je
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
mov
call
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
call
mov
test
jne
movl
jmp
movl
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
mov
jne
lea
mov
push
push
push
push
push
push
push
push
push
call
test
jne
mov
test
je
mov
push
mov
call
xor
pop
ret
cmp
jne
mov
mov
push
push
push
lea
push
push
mov
push
push
mov
push
push
mov
movl
call
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
call
mov
push
push
push
test
push
mov
jne
lea
test
je
mov
test
je
mov
push
call
xor
jmp
mov
call
lea
lea
push
push
mov
call
mov
call
mov
lea
push
lea
push
push
push
push
push
movl
call
push
call
push
mov
call
test
jne
cmpl
jne
mov
mov
mov
lea
mov
jmp
movl
mov
mov
call
cmp
jne
mov
call
push
push
push
push
push
push
call
add
push
push
push
push
push
push
call
push
call
push
mov
call
xor
jmp
cmp
jne
lea
call
mov
movl
test
jne
mov
push
push
call
or
test
je
push
push
lea
call
push
mov
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
jmp
push
push
lea
call
mov
push
mov
push
push
call
or
lea
push
call
mov
push
push
push
push
push
call
add
cmp
jne
mov
push
push
call
test
je
push
push
lea
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
call
mov
call
lea
mov
call
xor
jmp
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
movl
movl
movl
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
push
mov
push
call
mov
pop
test
setne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
and
push
mov
call
mov
movl
call
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
push
push
push
push
call
mov
call
mov
pop
ret
push
mov
call
test
jne
pop
ret
mov
call
mov
push
call
add
test
jne
mov
test
jne
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
call
mov
mov
neg
sbb
and
push
push
call
mov
call
pop
ret
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
neg
sbb
neg
cmp
je
mov
mov
call
pop
ret
nop
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
add
lea
call
neg
sbb
push
neg
mov
mov
mov
lea
push
push
push
push
call
push
call
add
pop
pop
pop
add
ret
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
setne
push
lea
call
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
xchg
and
pop
and
fcompl
and
pop
and
jmp
pop
and
jbe
and
sbbl
xchg
pop
and
enter
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
mov
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
push
jne
mov
pop
mov
pop
ret
mov
test
movw
movw
jbe
push
mov
push
mov
push
push
push
call
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
xor
test
jbe
mov
mov
test
jle
mov
push
push
push
call
add
test
je
jmp
cmpw
je
inc
add
cmp
jb
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
nop
push
push
push
mov
push
cmpw
jne
add
cmpw
je
mov
mov
push
push
call
mov
add
test
mov
jne
push
push
call
add
mov
mov
mov
sub
sar
cmp
jbe
mov
mov
mov
push
push
push
push
call
add
test
jne
mov
lea
lea
lea
mov
lea
mov
shr
rep
mov
and
rep
mov
add
lea
mov
lea
movw
mov
inc
mov
mov
cmp
jae
mov
cmpw
mov
jne
lea
cmpw
jne
pop
pop
pop
pop
ret
nop
mov
push
mov
xor
mov
push
push
push
rep
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
mov
push
mov
and
push
push
push
push
push
call
mov
add
and
test
je
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
add
push
push
call
push
lea
push
push
push
call
add
and
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
mov
push
push
push
push
push
call
mov
push
lea
push
push
and
call
push
lea
push
push
push
call
lea
lea
push
lea
movl
lea
lea
push
push
movl
movl
call
lea
push
lea
push
push
call
add
add
lea
push
push
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
ret
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
call
mov
inc
lea
push
call
mov
add
test
jne
mov
pop
pop
pop
add
ret
push
push
push
call
mov
mov
add
lea
mov
mov
push
mov
push
push
lea
push
mov
mov
push
push
push
push
push
mov
mov
call
test
je
mov
push
call
mov
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
push
mov
cmp
jbe
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
test
mov
je
lea
push
push
push
call
add
jmp
movw
test
je
mov
push
mov
mov
push
lea
shr
rep
mov
and
rep
pop
pop
mov
lea
push
mov
lea
add
push
push
mov
lea
push
push
push
push
push
push
call
test
je
xor
pop
add
ret
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
lea
push
lea
push
push
push
call
add
test
je
xor
add
ret
push
mov
test
je
mov
lea
push
push
push
call
add
test
je
mov
xor
test
mov
setne
mov
pop
add
ret
movl
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
xor
push
push
mov
mov
call
mov
add
cmp
jne
pop
xor
pop
add
ret
mov
cmp
je
cmp
je
push
lea
push
push
call
add
jmp
lea
push
push
push
push
call
add
test
jne
mov
lea
push
mov
push
mov
test
je
cmpw
je
mov
xor
test
jne
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
lea
push
push
call
add
test
jne
mov
mov
neg
sbb
lea
and
add
push
mov
push
push
push
call
add
test
je
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
mov
test
je
mov
inc
test
je
jmp
mov
test
jne
mov
test
je
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
jmp
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
neg
sbb
mov
and
lea
add
push
mov
push
push
push
call
add
test
je
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
mov
test
jne
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
cmpw
jne
mov
lea
push
push
push
call
add
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
push
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
lea
movl
push
call
xor
mov
xor
lea
add
mov
rep
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
mov
movl
test
je
push
call
add
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
test
push
jne
pop
pop
pop
xor
pop
ret
mov
test
jne
mov
lea
xor
test
je
push
call
mov
add
inc
test
jne
lea
push
call
mov
add
test
mov
jne
pop
pop
pop
pop
ret
mov
xor
mov
shr
rep
mov
and
rep
mov
test
mov
mov
mov
jle
mov
mov
mov
mov
add
dec
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
xor
mov
push
mov
test
jbe
lea
cmp
je
inc
add
cmp
jb
jmp
mov
lea
mov
test
mov
jne
mov
call
mov
test
jne
mov
mov
movl
call
mov
add
test
je
mov
jne
xor
jmp
mov
push
call
test
je
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
mov
cmp
jae
xor
ret
mov
push
mov
cmp
pop
je
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
lea
push
call
add
cmp
mov
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
test
je
mov
add
test
jne
mov
mov
cmp
jne
push
call
mov
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
mov
push
push
push
mov
mov
call
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
test
jne
mov
test
je
mov
mov
cmp
ja
mov
call
pop
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
mov
call
ret
jmp
nop
nop
nop
nop
nop
push
mov
test
je
cmp
je
mov
push
call
push
call
mov
push
push
push
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
mov
push
call
test
jne
mov
mov
cmp
je
push
call
cmp
je
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
push
cmp
push
push
mov
je
call
pop
pop
pop
pop
ret
call
cmpl
jne
mov
test
je
push
call
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
mov
mov
call
jmp
push
mov
call
test
je
mov
mov
call
push
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
call
pop
ret
nop
nop
nop
nop
sub
push
push
push
mov
call
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
test
je
push
lea
push
push
mov
push
push
lea
movl
movl
mov
mov
call
mov
push
push
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
sub
mov
push
lea
push
push
push
call
lea
push
push
movl
call
mov
add
test
je
push
call
add
cmp
je
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
movl
push
call
add
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
lea
push
push
xor
call
mov
add
test
je
push
call
add
cmp
je
push
call
mov
add
test
je
push
push
push
push
call
mov
push
push
push
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
push
call
mov
add
test
je
mov
mov
push
push
push
push
mov
mov
call
add
mov
mov
pop
pop
pop
pop
add
ret
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
push
mov
test
je
mov
push
call
push
call
add
pop
ret
nop
nop
nop
push
push
push
push
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
push
push
push
push
call
add
test
jne
cmp
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
dec
push
cmp
push
ja
mov
mov
mov
jmp
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
push
push
push
push
call
add
test
jne
push
push
call
add
mov
pop
pop
pop
ret
mov
mov
mov
push
push
push
call
add
pop
pop
pop
ret
xor
pop
pop
pop
ret
pop
jnp
and
and
fwait
jnp
and
and
nop
nop
nop
nop
push
mov
push
push
test
push
je
mov
mov
test
jne
test
jne
mov
test
je
mov
mov
movl
lea
mul
shr
lea
cmp
jae
mov
pop
pop
pop
xor
pop
ret
mov
xor
mul
xor
shr
je
mov
jmp
mov
xor
xor
mov
mov
inc
mov
inc
xor
mov
mov
sar
and
and
shl
mov
inc
mov
mov
sar
and
inc
or
and
shl
mov
mov
mov
sar
and
inc
or
and
inc
mov
mov
mov
mov
mov
inc
dec
mov
jne
mov
mov
mov
xor
mov
div
dec
je
dec
jne
xor
mov
mov
xor
mov
mov
sar
and
and
shl
mov
mov
mov
sar
and
inc
or
inc
and
mov
mov
mov
mov
jmp
xor
mov
mov
and
sar
and
inc
shl
mov
mov
mov
mov
inc
movb
inc
movb
inc
mov
movb
pop
inc
pop
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
test
je
mov
mov
test
jne
test
jne
mov
test
je
mov
movl
cmp
jne
or
xor
repnz
not
dec
mov
mov
lea
shr
lea
cmp
jae
test
mov
jbe
mov
cmpb
jne
dec
jne
mov
and
jbe
shr
add
lea
add
mov
cmp
jae
mov
pop
pop
pop
xor
pop
add
ret
xor
cmp
mov
mov
mov
jbe
xor
xor
xor
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
dec
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
push
push
call
mov
lahf
add
je
add
out
xchg
add
add
xchg
jbe
js
in
add
cltd
add
add
add
add
into
push
stc
jmp
scas
mov
add
ljmp
loope
gs
call
add
call
iret
add
gs
add
add
call
cld
jmp
push
mov
add
popl
push
push
lea
push
push
push
push
push
push
call
mov
test
lahf
add
add
fdiv
cli
add
sahf
out
testl
imulb
mov
add
popa
add
imul
add
add
ja
add
sub
pop
push
push
push
push
lea
push
push
call
mov
roll
mov
in
sti
add
out
movsb
std
aam
test
mov
add
enter
cmc
push
add
xchg
cmc
lahf
outsl
add
sbbb
xchg
add
add
add
test
add
lcall
push
push
push
push
call
rcl
mov
add
repnz
rcl
mov
mov
add
add
add
jmp
mov
mov
shll
rcll
lret
stos
out
jle
add
lcall
out
add
add
add
add
je
nop
add
add
mov
lock
lcall
push
lea
push
push
lea
push
push
call
out
stos
gs
in
divb
shl
add
jecxz
add
fildl
add
stos
cltd
in
popa
add
add
imul
jle
add
testb
pop
ljmp
lcall
mov
pop
add
add
push
call
data16
xchg
fsts
fldl
test
add
lock
jns
add
addr16
cmpsb
add
popa
sub
pop
push
push
push
push
push
lea
push
call
pop
jle
mov
mov
jecxz
popl
add
fxch
add
add
call
add
enter
int3
repnz
lcall
xchg
add
loop
je
add
cld
add
jo
add
add
mov
into
cwtl
add
add
aad
flds
jns
sub
pop
call
jmp
push
push
push
push
lea
push
lea
push
call
add
movsb
adcb
add
addl
add
bound
add
add
push
mov
jno
addl
je
add
fidivrl
add
mov
ret
in
call
ret
mov
push
push
push
push
push
push
lea
push
call
add
add
jnp
mov
fldl
add
lods
xchg
add
enter
fwait
mov
jbe
xchg
add
lret
lret
mov
add
roll
aad
push
ficompl
add
jl
in
in
mov
push
push
lea
push
push
push
lea
push
call
xchg
andl
movsb
loope
add
mov
flds
pop
out
jmp
ret
add
mov
pop
add
subb
imul
add
add
mov
add
add
push
push
lea
push
push
push
lea
push
push
push
push
call
divb
add
cld
add
add
add
push
add
mov
imul
push
fs
in
fcompl
ret
addb
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
rolb
shrl
fmulp
mov
flds
mov
cltd
add
insb
testl
test
jnp
jbe
add
add
add
sub
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
movsb
lea
imul
aad
push
add
push
rolb
mov
in
je
std
jno
push
fstps
xchg
add
add
test
add
add
je
add
movsl
out
fs
mov
add
xchg
xchg
add
jns
add
pop
xor
push
push
push
lea
push
push
push
call
popf
push
add
mov
bound
mov
xchg
aad
sti
fcmovne
enter
mov
add
addr16
add
fisttpll
mov
pop
add
jl
out
nop
repnz
fiadds
mov
xchg
add
mov
add
add
out
add
xchg
add
popa
test
xchg
les
add
push
push
sub
dec
push
or
not
add
sub
shr
sub
add
add
pop
shr
shl
pop
push
push
push
push
push
push
push
push
push
call
jbe
popl
subl
mov
xchg
add
pop
add
pop
jp
je
add
addb
add
addr16
add
mov
lret
ficoms
in
fdivr
lcall
jne
push
lea
push
call
mov
roll
insb
pusha
mov
pop
mov
scas
add
popf
mov
jge
push
push
add
bound
lock
roll
add
mov
mov
fsub
add
add
pusha
add
add
add
call
cmpsb
add
add
mov
pop
call
push
lea
push
lea
push
push
push
push
push
push
push
call
mov
lods
add
jbe
add
push
icebp
add
ljmp
imul
add
pop
rorb
in
fadds
add
mov
add
add
push
mov
xchg
add
add
mov
mov
sub
pop
mov
movl
push
push
lea
push
call
rolb
lods
pusha
jbe
xchg
mov
add
jmp
lods
pop
pop
add
ljmp
add
inc
call
aas
push
push
push
lea
push
push
call
add
add
add
jnp
mov
add
enter
pop
fwait
lcall
jns
add
add
push
rolb
add
fnstsw
loope
push
add
andl
add
stc
mov
idivl
jmp
add
in
in
lcall
push
lea
push
lea
push
push
push
push
call
add
push
mov
add
add
add
xchg
add
jmp
adcb
ja
fwait
xchg
je
cmpsb
fnstcw
mov
add
add
xchg
add
loope
xorb
mov
cmc
pop
cld
push
pushf
fcoml
adc
push
add
add
std
add
lcall
jne
pushl
push
push
push
push
push
push
call
xlat
add
clc
fildl
add
xlat
int3
mov
les
add
faddp
xchg
jmp
shlb
std
add
xchg
add
cltd
sub
pop
call
pushl
push
lea
push
push
push
push
push
lea
push
lea
push
call
jp
mov
add
add
lret
add
out
add
mov
out
xor
xchg
jmp
repnz
add
in
pop
xchg
mov
add
pusha
mov
imul
add
fnstcw
loopne
lcall
jne
push
push
push
push
call
xorl
push
loopne
xlat
loop
pop
mov
add
xchg
add
in
mov
add
add
add
add
xchg
shl
aad
mov
cmp
add
lcall
jecxz
add
push
push
add
add
shl
push
or
inc
add
dec
sub
rol
sub
pop
not
lea
sub
pop
push
push
lea
push
lea
push
push
push
lea
push
push
call
mov
test
stc
out
lret
add
lea
icebp
push
repnz
add
add
pop
push
add
out
jmp
push
addl
add
in
loopne
lcall
jne
push
lea
push
push
call
imul
pusha
sahf
aad
pusha
rcr
add
add
xchg
add
loop
add
rcrb
add
rolb
insb
js
add
add
mov
add
add
add
add
add
add
pop
jnp
fcmove
push
nop
js
stc
add
add
cmpsb
push
out
mov
cmp
add
push
push
not
push
sub
add
ror
sub
sub
pop
add
dec
ror
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
push
aam
push
in
add
add
pop
ljmp
add
add
add
pop
je
add
xchg
jle
add
mov
jge
lret
add
add
mov
jo
add
lock
add
imul
lcall
push
lea
push
push
push
push
push
call
add
roll
add
les
popl
add
in
faddl
arpl
mov
ficomps
add
jb
xchg
pushf
add
jle
aam
scas
test
add
pushf
testb
push
insb
add
add
lcall
add
rclb
lea
push
push
push
push
call
add
out
loop
cld
popa
in
jb
add
add
imul
lret
add
add
fiadds
jl
add
je
enter
rol
add
mov
add
ficoms
add
stos
lahf
je
add
mov
pushf
push
shrl
sub
pop
mov
push
push
lea
push
call
add
decb
pop
add
add
test
rorb
add
add
mov
add
hlt
xchg
ja
add
push
sahf
add
mov
push
add
mov
push
jno
add
add
add
add
jnp
movsb
std
add
add
push
push
lea
push
push
push
push
push
call
pushf
jbe
iret
bound
add
imul
test
add
fcmovne
in
mov
cltd
fmul
sti
jge
push
rolb
add
push
xchg
add
lahf
xchg
add
mov
jle
ret
add
add
push
cwtl
movsl
add
add
add
fwait
xchg
add
add
into
fnop
ja
add
add
call
in
call
push
push
push
push
lea
push
push
lea
push
call
mov
xchg
add
roll
add
hlt
out
imul
add
bound
add
add
add
lcall
pop
in
add
push
push
push
call
out
push
mov
cld
movl
add
add
add
add
lahf
lods
add
add
mov
popf
add
scas
add
lahf
add
xchg
rolb
add
imul
hlt
lcall
ret
addb
mov
push
push
push
push
push
push
push
push
push
push
call
filds
mov
push
mov
add
mov
add
add
cli
mov
jns
jbe
xchg
xchg
jmp
mov
in
fdivr
lcall
xor
push
push
push
push
call
imul
popa
lahf
pop
jl
add
ljmp
test
imul
aam
out
cld
add
pop
roll
add
lea
popa
cmpsb
ljmp
mov
mov
add
mov
repnz
add
mov
lods
xchg
add
add
add
add
sub
pop
add
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
call
in
xchg
fcmovnbe
test
popf
mov
insb
xchg
mov
fst
jno
cmpsb
lods
out
add
test
test
mov
fisubs
xlat
push
add
add
mov
shl
stc
addl
add
lcall
jne
push
push
call
add
aad
out
lahf
add
add
mov
add
hlt
add
add
add
add
lods
mov
add
loope
sub
pop
push
push
lea
push
lea
push
push
push
push
call
add
addb
add
jno
add
int3
fldl
mov
les
push
xchg
pop
add
add
add
add
add
mov
addl
rcrl
add
pop
add
mov
add
mov
pop
outsl
stos
cld
popf
imul
aam
xlat
scas
add
stos
addl
or
jno
adc
xorl
ret
push
push
lea
push
call
into
enter
add
add
add
add
lock
fldl
addl
shll
add
jbe
add
jle
loope
imul
sub
pop
xor
push
lea
push
call
nop
mov
cmpl
mov
into
add
negb
add
add
test
sarl
fadd
aad
lock
pop
add
push
push
push
lea
push
lea
push
push
push
push
push
call
add
nop
mov
lock
add
movl
rolb
pop
push
cmpsb
cmc
add
imul
add
add
fsts
mov
jnp
add
rcl
jae
mov
add
lcall
lock
push
push
push
push
push
push
push
push
push
call
cltd
mov
add
rcll
add
test
scas
imul
sarb
add
jle
mov
pop
pop
mov
xor
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
add
ret
lods
mov
movsb
add
shrl
movsl
out
enter
pop
flds
mov
add
lcall
push
push
call
add
add
add
push
pushf
jb
jp
mov
outsl
add
add
fldenv
aad
in
mov
add
push
add
cltd
jbe
rorl
lret
incb
stc
add
add
add
in
clc
pop
mov
xor
push
push
push
call
cmc
lahf
add
loope
add
mov
add
imul
add
push
xchg
popf
add
pop
pushf
repnz
add
cltd
add
fwait
xlat
test
add
jbe
in
hlt
pop
sub
push
push
push
lea
push
call
clc
mov
faddl
add
mull
in
add
add
std
into
aad
add
in
cmpsl
cwtl
mov
mov
add
add
add
out
add
rolb
add
out
shlb
mov
add
add
ffreep
add
int
sub
pop
pop
push
push
push
push
push
push
call
xchg
arpl
std
stos
add
jae
shr
mov
call
add
add
cltd
clc
fmul
lds
add
xchg
push
mov
in
call
rep
pop
push
push
push
call
mov
push
add
stos
xchg
add
mov
popf
testl
add
out
add
fiadds
stos
xlat
add
add
lret
xchg
mov
add
mov
testb
jno
pop
cmc
jbe
add
mov
mov
add
out
je
test
ret
in
hlt
pop
mov
add
push
push
push
lea
push
call
lock
loop
mov
add
add
xchg
jl
add
jb
std
add
popf
pusha
test
add
xor
in
lock
add
add
push
push
push
push
push
lea
push
push
push
push
call
enter
add
mov
add
test
xchg
iret
jl
xchg
xchg
out
mov
add
out
add
jbe
leave
add
mov
in
fdivr
lcall
inc
and
adc
test
push
push
push
push
push
push
call
call
fbld
add
xchg
add
xchg
sbbb
add
arpl
xchg
pop
add
in
in
mov
push
push
lea
push
push
call
mov
ljmp
add
loop
add
fwait
mov
ljmp
mov
jnp
imul
add
add
add
pop
cmc
add
imul
add
lcall
adc
push
push
push
push
push
push
push
push
call
lea
add
add
mov
add
push
add
add
jl
add
add
aam
stos
add
add
jno
fcompl
stos
fsts
mov
cli
jge
fadds
scas
arpl
jno
jle
js
add
add
mov
loopne
add
loope
add
add
add
sub
pop
add
push
lea
push
push
push
push
push
call
mov
add
addb
add
add
add
xchg
in
add
aad
in
std
add
lcall
dec
sub
adc
sbb
cmp
push
push
push
push
call
add
pop
xlat
test
jl
add
lods
add
fsubrp
fwait
mov
scas
add
pop
push
sahf
incb
imul
add
mov
mov
add
add
jp
add
mov
out
popf
sti
xchg
aad
ljmp
aad
pop
xchg
shlb
add
jnp
testb
and
ficompl
add
push
push
push
push
push
push
push
push
push
call
add
add
mov
cmpsb
add
jp
fsubr
mov
int
stos
lret
add
out
aam
push
push
add
nop
flds
add
add
insb
add
rcll
lret
std
add
cmp
jl
nop
push
push
call
push
add
iret
add
stos
add
arpl
add
in
add
xchg
out
add
call
add
add
lcall
push
bnd
enter
std
xchg
push
jecxz
mov
and
add
lea
fsubrs
fbstp
test
push
jle
lret
add
shrb
add
enter
or
ror
sub
pop
push
push
push
call
add
lds
mov
xchg
xchg
lock
add
add
add
jmp
add
add
add
pushl
call
push
lea
push
push
push
lea
push
lea
push
call
divb
aad
push
bnd
cld
add
xchg
mov
add
add
add
add
rorl
arpl
int3
mov
mov
add
leave
pushf
xchg
cmc
mov
jno
lods
add
mov
add
add
aam
bound
add
sub
pop
push
push
push
shl
push
sub
add
add
sub
add
xor
pop
add
add
add
pop
push
push
push
push
push
call
add
imul
mov
ja
popa
xchg
test
jmp
push
addr16
lcall
jno
out
mov
rolb
add
iret
addl
cmc
addb
add
mov
add
sub
pop
push
push
push
push
push
push
push
call
jbe
add
add
add
repnz
add
test
add
popf
jmp
lret
mov
in
imul
mov
add
add
fwait
mov
faddl
jbe
mov
stos
mov
add
add
ljmp
lcall
rclb
test
cmpsl
test
push
push
push
call
aad
add
loope
jge
add
add
lea
add
cmpb
xchg
mov
add
call
lret
call
lea
push
call
jno
add
add
add
xchg
sti
stc
add
push
mov
hlt
test
jae
add
lea
rcll
mov
lcall
push
push
call
in
add
pop
data16
add
jge
jge
bound
jnp
xchg
add
addl
pop
add
cmc
add
push
iret
push
xchg
shll
add
movl
add
mov
add
add
pusha
shll
add
jmp
in
clc
pop
push
mov
push
push
push
call
ja
add
add
add
out
add
add
add
stc
mov
add
aad
test
jb
add
push
xchg
fadds
adcb
add
jno
jb
sahf
addl
add
push
lea
push
push
push
push
push
push
call
pop
int3
ljmp
add
push
add
xorb
aad
jbe
add
add
addb
stos
jl
cmc
add
jo
scas
xchg
add
sub
pop
add
push
lea
push
lea
push
push
lea
push
call
cltd
sti
jo
xchg
add
les
add
add
shlb
jmp
lea
add
add
xchg
jns
fadds
xchg
add
repnz
add
add
jnp
push
mov
in
pop
add
mov
push
push
push
call
add
add
add
add
add
add
ret
xchg
stc
add
add
add
add
jge
in
add
xor
push
lea
push
push
push
push
push
lea
push
push
push
push
call
push
cwtl
add
add
lods
cld
aam
xchg
add
gs
jmp
add
mov
add
push
bound
mov
mov
jle
add
into
in
add
add
push
jge
int3
pop
outsl
pop
sub
pop
add
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
scas
push
andb
add
mov
add
stos
arpl
add
int3
fcmovne
mov
xlat
mov
test
filds
testl
add
add
adc
push
add
test
mov
cmpsl
add
jo
add
ja
in
fdivr
lcall
jne
push
push
call
add
add
xchg
push
add
rorl
js
add
shlb
jecxz
cmc
push
jle
in
clc
lcall
push
push
push
call
add
add
add
test
out
hlt
mov
imul
add
xchg
add
out
loope
lahf
add
bnd
jmp
push
imul
gs
sbb
rolb
pop
outsl
push
xchg
add
add
jns
pop
mov
mov
add
add
add
xchg
add
add
roll
lcall
inc
adc
xor
adc
decl
lea
push
call
mov
in
add
popl
add
rcrl
aam
je
in
add
movsl
rolb
pop
scas
add
add
add
jns
in
in
pop
xor
push
push
lea
push
push
push
lea
push
push
call
push
add
cld
test
add
add
fiadds
xchg
mov
mov
roll
fiaddl
mov
mov
movl
add
mov
dec
in
jmp
add
add
cld
add
test
add
add
xlat
xlat
add
in
in
add
push
lea
push
push
lea
push
call
add
add
add
add
add
add
add
test
jbe
xchg
mov
add
cmc
addb
add
jmp
add
push
mov
xchg
sub
pop
add
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
cmpsl
jp
push
add
arpl
sahf
popl
add
add
neg
add
jecxz
xchg
add
call
call
pop
std
mov
outsl
mov
add
iret
sub
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
add
mov
outsl
add
add
jge
cwtl
mov
mov
mov
int3
repnz
add
add
mov
sahf
pushf
std
cld
push
test
mov
jmp
jmp
pop
add
add
lcall
dec
and
jno
adc
fwait
lea
push
push
lea
push
push
call
mov
call
add
add
cmpsb
add
stos
add
add
ja
add
push
xchg
loop
roll
jge
out
mov
add
add
int3
jp
jno
add
arpl
incb
stc
addl
jbe
flds
shlb
in
call
xor
push
lea
push
push
lea
push
push
push
call
add
add
loop
jecxz
add
xchg
jp
push
int
in
mov
adc
add
push
roll
adc
add
lcall
les
add
push
push
push
push
push
lea
push
push
call
add
mov
rolb
pop
pop
lds
outsl
fdivr
add
addr16
add
push
mov
enter
add
add
add
xchg
popf
add
clc
cwtl
add
aam
add
jle
pop
or
jge
nop
add
add
sti
add
loop
mov
add
mov
cwtl
xlat
add
lods
jecxz
sahf
add
sub
pop
rep
mov
push
push
push
push
lea
push
push
push
push
call
mov
ljmp
jns
out
pop
mov
pop
lret
addb
int
rcrb
add
iret
mov
out
in
in
lcall
or
push
push
push
push
push
push
push
lea
push
push
push
call
js
push
add
add
rolb
lcall
shll
add
sti
add
cmpsl
add
roll
add
out
add
add
sarb
add
mov
add
pop
pop
popf
add
pop
loopne
push
bound
add
pop
mov
sub
pop
add
push
push
push
push
push
push
push
push
call
add
add
mov
add
loopne
add
xchg
movsl
add
aam
popl
add
and
add
cmpsl
pop
mov
add
add
add
add
out
jge
mov
add
add
aad
repnz
add
xchg
fmulp
out
in
loopne
lcall
leave
je
mov
xor
push
push
lea
push
push
lea
push
push
call
add
pop
add
add
imul
xchg
add
add
adc
rolb
xchg
lods
add
lock
add
pop
testl
add
xchg
cmpl
add
pop
add
addl
mov
add
loop
mov
call
add
jnp
add
add
add
sub
pop
mov
xor
push
push
push
lea
push
lea
push
push
push
push
push
call
movsl
add
add
add
sahf
test
add
into
add
xlat
mov
ret
add
ret
add
lret
add
iret
add
add
cmpsb
add
add
mov
lds
fsubl
xorl
repnz
rol
inc
pop
add
push
lea
ror
lea
pop
push
push
push
push
push
call
xorl
add
loope
add
js
shlb
pop
fstp
in
pop
lods
fistpll
add
add
std
add
push
add
add
lcall
lods
sub
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
push
push
call
mov
mov
add
in
lret
mov
movsb
mov
add
add
add
add
add
in
fcomps
add
push
push
push
lea
push
push
push
push
lea
push
push
call
fildl
popf
pop
sbbl
add
add
jbe
popf
add
add
add
imul
add
add
add
popf
add
add
push
loop
add
lcall
les
add
push
pop
add
push
push
call
add
push
outsl
cwtl
mov
test
add
add
lahf
in
mov
add
add
leave
out
mov
pop
add
mov
add
add
add
add
fdivs
lock
shll
add
push
xor
shl
shl
pop
rep
push
push
push
push
push
push
call
cwtl
aad
add
add
loopne
pop
jo
mov
aad
sahf
add
pop
add
add
ret
mov
popf
push
add
out
sub
pop
mov
xor
push
lea
push
push
push
call
jbe
xchg
cmc
add
fldl
jp
add
add
xlat
push
mov
add
mov
fldl
fsubp
add
add
mov
add
int3
sub
pop
or
je
push
push
lea
push
lea
push
push
push
push
call
cld
imul
add
pop
mov
add
in
fucom
pop
fistpl
add
mov
add
movsb
xchg
incb
add
mov
xchg
ret
add
fs
jp
std
add
nop
clc
mov
pop
add
add
add
mov
push
sub
shr
pop
add
push
push
push
push
lea
push
push
push
call
mov
add
add
mov
mov
nop
stc
add
mov
fiadds
add
aam
add
pusha
cwtl
add
stos
jo
add
lret
add
out
add
add
out
xlat
arpl
mov
stos
mov
les
lcall
movb
add
rep
push
push
lea
push
push
lea
push
push
push
push
push
call
jns
jo
add
roll
fisubrl
jbe
push
add
insb
xchg
out
mov
push
in
add
add
add
rolb
xchg
popa
sub
add
pop
add
pusha
rorb
jae
xchg
jno
idivl
mov
fcompl
push
push
lea
push
or
not
add
xor
shr
sub
lea
sub
ror
sub
pop
xor
inc
shl
pop
push
sub
pop
pop
push
push
push
lea
push
push
push
lea
push
call
int
test
add
imul
mov
add
shr
fldl
cmpsl
mov
add
add
les
add
add
jmp
push
jl
add
jmp
fisttpl
mov
filds
add
out
insb
add
sahf
mov
jns
add
add
in
in
mov
push
add
ror
pop
mov
push
push
push
lea
push
push
push
lea
push
call
add
fwait
push
add
frstor
add
int
jb
insb
out
test
add
pop
lock
flds
xchg
add
mov
add
inc
and
jmp
push
lea
add
not
pop
push
push
xor
pop
mov
push
shl
pop
add
push
push
lea
push
push
push
lea
push
push
push
push
push
push
call
enter
fmull
mov
add
lahf
scas
in
add
std
cmc
lret
add
rcr
jbe
pop
mov
enter
add
xchg
movsl
jne
add
add
loop
movsb
add
add
les
ret
lods
pop
lcall
pop
shlb
shll
sub
pop
push
push
push
push
lea
push
push
push
push
call
shlb
add
outsl
int
mov
add
pushf
mov
mov
cli
add
add
add
popf
test
mov
add
sub
pop
push
push
push
call
lret
int3
mov
testb
xchg
rol
je
add
out
add
icebp
add
jp
add
jne
into
lods
ljmp
jne
jge
test
scas
les
call
pop
aad
pop
push
add
gs
add
xchg
negb
sub
pop
push
mov
push
lea
push
call
cmc
add
in
add
add
mov
jle
nop
cmpsl
add
add
fwait
rcrb
add
add
clc
lcall
pop
push
lea
pop
pop
push
xor
xor
pop
pop
leave
push
push
lea
push
push
push
push
push
push
call
lods
scas
add
roll
mov
add
std
pop
jmp
sahf
xlat
in
fstps
fsub
fiadds
insb
jae
add
add
pop
add
mov
mov
xchg
mov
lds
lds
popl
add
iret
lret
add
add
nop
push
add
add
push
std
add
jb
mov
add
faddl
lcall
or
push
dec
not
sub
pop
push
push
lea
rol
inc
pop
mov
push
add
sub
pop
add
push
lea
push
push
lea
push
push
push
push
call
mov
add
add
nop
in
aam
fdivl
out
lret
add
stos
add
insb
add
jecxz
fsubp
mov
add
add
out
lcall
popf
rcr
lret
add
mov
push
jmp
jl
jge
add
mov
scas
sub
pop
push
push
push
call
add
add
fmull
add
out
add
stos
add
add
add
xchg
scas
mov
push
add
add
pop
add
add
add
rolb
sub
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
mov
sar
outsl
icebp
add
roll
mov
iret
pop
add
add
jge
add
test
flds
jmp
xlat
mov
add
jno
cld
mov
add
fcompl
push
push
shr
lea
add
pop
movl
push
push
push
push
push
push
push
lea
push
push
push
call
mov
add
add
fwait
mov
add
scas
add
ficomps
jp
pop
add
add
insb
pop
in
js
mov
add
add
lods
add
stc
add
add
add
add
fmull
jns
in
fcomps
inc
clc
call
xchg
adc
push
add
add
add
aad
add
jnp
push
add
xchg
jo
add
add
int3
add
mov
fadds
add
mov
popf
add
add
mov
xchg
cmpsl
les
pop
push
add
roll
add
sar
add
ret
mov
add
sub
pop
test
je
mov
push
push
push
push
call
lock
flds
add
add
pop
gs
pusha
int3
subb
mov
add
jae
add
add
mov
in
jle
iret
add
add
sub
pop
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
rcl
clc
mov
jae
add
jmp
int3
imul
int
jnp
mov
into
add
add
fsub
add
lcall
push
push
push
push
call
pop
mov
add
add
imul
jno
add
push
add
xchg
add
lret
repnz
popf
xchg
add
notl
add
shll
mov
pop
mov
add
fldl
xchg
sti
stos
lea
in
lock
pop
leave
push
ror
rol
pop
ret
push
dec
dec
not
pop
push
push
push
push
call
fstp
mov
add
cli
push
xchg
mov
jo
jnp
add
fwait
jle
jae
jmp
fnsetpm(287
mov
add
add
mov
fiaddl
push
add
pop
add
add
mov
sahf
popa
add
pusha
add
cli
sahf
add
in
add
push
not
inc
lea
pop
push
push
push
rol
sub
lea
pop
push
push
lea
push
push
lea
push
call
mov
mov
mov
jns
add
mov
add
out
fadds
add
mov
jmp
stos
add
add
int3
out
push
xchg
addl
add
add
add
push
jo
add
jae
fldl
add
jns
mov
lock
lcall
push
inc
shl
pop
testl
push
inc
dec
pop
addl
push
dec
pop
push
push
push
push
call
add
add
add
jmp
bound
mov
lahf
xchg
add
add
push
ja
mov
mov
push
pop
add
in
xlat
add
mov
add
ljmp
add
test
add
cld
jns
add
add
fiadds
add
movsl
add
add
sub
pop
call
push
lea
push
lea
push
push
call
add
add
addl
xchg
nop
pop
add
je
push
fadds
leave
xchg
xchg
fwait
cltd
add
add
repnz
add
add
xchg
push
add
xchg
lock
add
add
mov
push
orb
mov
sub
pop
mov
push
push
push
lea
push
push
lea
push
call
add
xchg
clc
pop
add
cmc
add
add
in
xlat
xchg
stc
add
pop
add
mov
outsl
not
lods
add
add
add
mov
xchg
jecxz
mov
add
add
add
add
int
cmc
testb
push
add
add
lcall
jne
push
xor
pop
push
push
rol
pop
push
push
ror
pop
call
push
add
pop
cmpl
jne
push
dec
pop
pop
push
push
push
call
stc
mov
fiaddl
add
add
out
lret
pop
add
ja
popa
addr16
add
mov
fs
sub
pushf
cmpsl
fistpll
add
add
imul
imul
roll
add
add
mov
insb
add
popa
clc
add
add
jle
jbe
sub
pop
pop
push
push
push
call
adcl
add
sti
add
rolb
flds
cwtl
ljmp
add
add
mov
mov
jns
xchg
jl
idivl
add
cmp
pop
add
push
addr16
add
add
add
lods
pop
lock
mov
mov
insb
add
sub
pop
pop
push
sub
dec
rol
pop
pop
push
shl
pop
leave
ret
push
shr
pop
push
mov
push
push
push
push
push
lea
push
push
push
push
push
call
add
mov
add
mov
loopne
faddl
out
arpl
add
add
xchg
add
push
add
pop
in
add
sub
pop
add
push
push
call
add
jl
mov
xchg
add
jmp
mov
bound
add
mov
mov
in
ljmp
cmc
mov
add
add
push
lods
sub
pop
push
push
not
ror
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
jmp
xchg
add
add
xchg
add
add
add
lret
add
pop
cltd
mov
sub
pop
push
push
shr
dec
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
add
fiaddl
imul
add
cmpb
add
add
mov
ja
lock
les
lea
add
add
add
add
add
out
add
aad
add
lea
add
jle
imul
lcall
inc
cld
add
dec
pop
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
push
out
add
mulb
rorl
jle
add
add
mov
add
pop
aam
add
add
stc
sub
pop
call
push
push
push
push
lea
push
lea
push
push
push
push
call
add
test
addb
add
movsb
movl
add
rorl
add
enter
push
push
sub
pop
push
push
xor
not
not
pop
call
subl
push
add
pop
cmpl
jne
pop
push
push
lea
push
push
push
push
lea
push
push
call
loope
cltd
add
sti
les
outsl
loop
xchg
add
ljmp
add
loopne
lcall
pop
push
push
push
push
push
push
push
lea
push
call
add
cld
mov
outsl
ljmp
jle
add
arpl
cmc
jl
mov
push
rolb
add
loopne
mov
add
add
add
add
addl
js
add
lcall
leave
push
shr
shl
sub
shl
pop
ret
push
push
push
lea
push
push
call
orb
movsl
pop
add
ror
lods
mov
pop
add
icebp
add
add
jb
shl
mov
ljmp
fwait
out
cmpsl
add
jno
sub
pop
mov
add
push
ror
shr
sub
pop
push
push
rol
inc
not
pop
push
push
sub
inc
inc
pop
push
push
shr
lea
add
pop
push
push
push
lea
push
push
push
lea
push
call
mov
xchg
add
add
xchg
lods
gs
add
add
jno
add
add
fidivl
add
sahf
add
add
sarl
add
add
arpl
add
mov
movsb
movsl
add
add
insb
add
add
bound
stos
mov
sub
pop
mov
push
xor
add
pop
lea
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
add
add
add
push
jne
add
add
pop
loop
scas
out
add
add
jns
cmc
push
flds
iret
add
add
cmc
repnz
test
cmpsb
std
fdivr
add
xchg
test
test
add
insb
mov
add
arpl
js
stc
add
add
pop
sub
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
iret
jns
add
push
add
mov
add
jb
loop
add
rcrl
push
dec
add
gs
gs
add
jne
test
std
add
add
add
test
jns
in
addl
add
sub
pop
mov
push
not
lea
shr
pop
shr
push
rol
add
pop
add
push
lea
push
push
lea
push
push
push
push
call
add
add
add
mov
into
mov
jmp
jbe
add
movsb
add
mov
test
add
enter
pop
mov
mov
push
not
not
add
pop
add
push
dec
dec
shl
pop
add
mov
push
ror
sub
pop
mov
push
push
push
push
call
add
xchg
push
add
add
stos
jns
fidivrs
mov
add
enter
stos
add
add
stc
sahf
js
add
add
add
pop
outsl
jne
push
ror
not
pop
cmp
jne
push
lea
push
call
add
push
push
jmp
add
int
fmull
xlat
mov
cld
add
repnz
push
scas
add
sub
pop
mov
push
push
push
call
orb
cmc
in
loop
add
add
mov
mov
add
add
lods
xchg
push
add
stos
sahf
add
addl
pop
add
jmp
mov
add
add
mov
lcall
add
add
add
push
push
push
push
push
lea
push
call
nop
add
ror
add
in
jl
add
add
add
add
add
loope
bound
shlb
icebp
je
mov
add
mov
idiv
xchg
enter
add
pop
pop
out
add
data16
loope
add
out
add
lcall
ja
add
push
xor
shl
pop
mov
push
shl
sub
shl
pop
mov
sub
jne
push
add
not
dec
pop
mov
push
push
lea
push
push
lea
push
call
ret
sarl
jns
add
lea
mov
add
faddp
add
popf
pop
add
push
ja
add
add
sub
pop
movl
jmp
push
push
call
addl
add
add
add
add
add
outsl
add
add
add
jge
mov
jne
push
add
addb
xchg
nop
add
test
add
in
add
add
icebp
roll
fiaddl
xchg
flds
scas
sub
pop
mov
push
push
push
push
push
push
push
call
add
jb
add
xchg
lret
xlat
lret
mov
mov
adc
pop
add
enter
adcl
js
add
mov
imul
jb
clc
sub
pop
mov
cmp
jne
push
push
push
push
push
push
push
push
push
lea
push
call
pop
mov
test
add
rcl
add
jb
mov
cmpb
jge
jp
addl
add
add
mov
add
out
add
lcall
add
jb
pop
add
pop
push
push
scas
add
inc
adc
mov
or
les
xchg
add
push
lea
push
call
iret
mov
add
roll
add
mov
mov
mov
add
inc
fcmovnb
jnp
test
arpl
sub
pop
movl
jmp
push
sub
shl
pop
mov
push
dec
dec
inc
pop
cmpw
jne
mov
push
lea
push
push
lea
push
push
lea
push
push
call
lret
add
popf
pop
mov
jo
rolb
add
mov
add
add
mov
fsubrl
add
mov
mov
push
aad
push
xchg
push
add
iret
nop
imul
pop
popl
sub
pop
movl
push
lea
push
call
jnp
xchg
test
add
push
add
add
push
filds
jae
js
js
mov
add
pop
jecxz
rolb
rcrl
lods
pop
sub
pop
jmp
push
push
push
push
push
push
push
lea
push
push
push
call
mov
clc
cli
hlt
arpl
mov
add
lret
add
stc
fadds
popf
cwtl
jmp
add
add
aam
test
cmpsb
mov
mov
add
add
add
jmp
call
mov
int
mov
add
loop
mov
jmp
movb
pop
pushl
push
sub
pop
pop
mov
push
shr
shl
pop
mov
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
icebp
std
add
add
outsl
out
jbe
cwtl
add
loopne
mov
add
outsl
out
jo
mov
mov
popf
add
fcompl
push
or
movsb
pop
inc
push
push
sub
add
xor
add
inc
sub
add
pop
shr
shl
pop
push
sub
rol
pop
push
call
push
xor
pop
cmpl
je
push
push
rol
lea
push
sub
add
shl
ror
sub
inc
ror
dec
ror
pop
pop
push
inc
dec
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
mov
add
andl
jp
xchg
sbbb
bound
enter
push
aad
loopne
add
cmc
add
add
lcall
jns
add
cmpl
je
push
push
xor
not
inc
dec
push
push
pop
add
sub
dec
sub
lea
shr
lea
pop
shr
pop
push
sub
pop
push
push
sub
pop
call
cmpl
je
push
push
dec
push
or
inc
add
add
add
xor
sub
lea
add
pop
dec
pop
push
not
pop
push
call
push
lea
push
push
lea
push
lea
push
lea
push
call
add
movsl
rolb
add
add
add
fisubs
test
out
add
shrb
clc
add
aam
add
ljmp
xchg
loope
arpl
ljmp
clc
jecxz
addr16
add
int
jl
loope
mov
out
add
add
mov
xchg
sub
pop
cmpl
je
push
push
sub
add
push
or
not
add
add
rol
sub
xor
pop
add
sub
shl
sub
pop
push
push
lea
push
push
push
push
push
push
push
call
icebp
add
add
mov
pop
add
push
movsl
pop
lds
or
jb
add
out
add
popf
add
add
add
add
movsb
call
add
xchg
add
sub
pop
push
push
push
call
add
ja
popl
outsl
lret
jne
jne
mov
pop
std
rolb
pop
jb
lret
out
loop
xchg
arpl
add
scas
testb
add
lcall
je
add
cmpl
je
push
push
lea
sub
push
and
add
add
add
inc
sub
pop
ror
pop
push
push
push
push
call
push
add
lcall
rolb
xlat
in
adc
push
mov
jno
mov
rcrb
xchg
xchg
add
add
scas
shlw
push
sub
pop
push
push
push
push
push
lea
push
push
call
fcmovnu
mov
add
popa
mov
testl
ja
push
mov
roll
add
add
add
sarl
faddl
add
add
add
add
add
lods
sub
pop
call
push
push
push
push
push
push
lea
push
push
push
call
into
add
gs
call
rcrl
push
scas
add
add
add
xchg
add
lcall
add
mov
add
test
add
loope
add
loop
iret
add
enter
add
cmp
or
int3
je
push
push
lea
rol
xor
push
xor
add
add
xor
sub
not
inc
xor
pop
add
pop
push
sub
dec
pop
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
push
popf
add
add
stos
add
xchg
jno
add
fisubl
add
mov
cmpsb
test
pop
add
test
mov
mov
out
add
mov
mov
stos
test
mov
xchg
add
gs
fists
sub
pop
call
push
lea
push
call
mov
add
mov
in
mov
jl
add
lods
add
stc
je
add
add
add
addb
flds
jae
xchg
add
add
add
rol
pop
insb
mulb
mov
xchg
mov
fiadds
shll
lea
push
add
pop
sub
pop
cmpl
je
push
push
inc
push
push
pop
add
shr
sub
dec
sub
dec
add
shl
sub
pop
shl
sub
pop
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
lds
roll
js
add
mov
scas
add
pop
add
pop
mov
scas
add
add
add
jle
add
loope
push
mov
in
mov
scas
xchg
test
fldl
lret
add
cmpsb
add
add
xchg
add
mov
add
add
add
out
add
pop
push
push
lea
push
lea
push
push
push
push
push
call
test
mov
add
add
ficoml
push
pop
mov
in
add
pop
aad
mov
add
mov
jne
xchg
clc
lcall
pop
iret
fildll
jno
cwtl
scas
add
cli
add
pop
mov
iret
mov
pop
call
push
sub
pop
cmpl
je
push
push
xor
not
push
push
pop
add
add
xor
sub
shl
add
add
add
pop
add
pop
push
push
lea
push
lea
push
call
add
add
mov
jbe
int3
data16
xchg
mov
add
mov
add
mov
add
add
loopne
jge
add
add
cltd
mov
add
lock
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
cmpsl
sahf
add
scas
add
roll
add
add
add
add
enter
mov
addl
add
imul
jl
add
lcall
mov
cmp
rol
je
push
push
add
push
xor
add
sub
inc
dec
pop
inc
pop
push
pop
push
push
pop
call
push
dec
not
lea
pop
cmpl
je
push
push
ror
sub
push
or
not
add
not
add
sub
not
ror
inc
pop
add
pop
push
push
push
push
push
lea
push
push
push
call
lods
lock
add
add
notl
add
add
add
add
add
stos
push
add
add
add
call
cltd
push
add
sub
pop
push
push
lea
push
push
push
call
add
xchg
add
add
mov
add
push
add
add
add
cwtl
add
mov
add
idivw
add
add
iret
sahf
cwtl
filds
fs
jle
sub
pop
call
push
pop
cmpl
je
push
push
dec
sub
push
or
not
add
shl
sub
lea
shr
pop
pop
push
ror
pop
push
push
add
pop
call
cmpl
je
push
push
sub
xor
sub
push
and
add
sub
inc
sub
inc
pop
sub
inc
shl
pop
push
push
push
push
push
push
push
call
add
in
fnstenv
scas
notb
add
add
mov
lods
pop
add
out
aam
mov
in
in
lcall
call
push
lea
pop
cmpl
jne
push
push
push
push
push
push
lea
push
push
lea
push
push
call
outsl
mov
xchg
add
add
mov
rcr
add
add
add
add
add
add
in
add
add
rcll
mov
add
add
mov
mov
add
add
add
sub
fidivrl
divb
add
lcall
inc
adc
loop
shl
sub
sub
pop
movl
push
add
lea
dec
pop
jmp
push
rol
inc
dec
not
pop
xor
push
push
push
lea
push
call
jns
add
add
lods
jl
fstl
add
jmp
out
jns
mov
add
je
scas
add
in
lock
lcall
pop
push
shl
pop
pop
push
lea
push
push
push
push
push
call
jmp
add
add
out
add
jae
add
add
mov
mov
in
mov
sahf
add
fidivl
lock
lods
add
nop
add
add
jle
push
std
add
add
in
call
push
push
push
push
push
lea
push
push
call
mov
mov
add
popa
add
jmp
add
stos
add
mov
pop
mov
loope
lret
add
add
sar
add
lock
outsl
popf
out
or
jle
addb
add
add
add
jb
push
out
fiaddl
or
push
push
call
push
incb
mov
mov
jp
insb
add
popf
add
js
add
add
movl
jne
add
add
mov
push
add
call
xchg
rclb
mov
popf
fisubrl
add
jo
add
int
add
test
fwait
jmp
add
add
sub
pop
push
push
rol
pop
mov
push
push
lea
push
lea
push
call
pop
ficompl
add
push
add
out
stos
push
add
mov
pushf
mov
add
mov
fiadds
lcall
in
cmpl
jne
push
push
sub
add
push
or
inc
add
sub
shr
rol
add
sub
add
pop
ror
pop
push
lea
push
call
add
add
loope
mov
pop
mov
add
movsb
cmpsl
jle
out
add
jae
push
mov
add
lret
mov
add
add
movsl
pop
popf
jns
popf
fucomi
add
xchg
int3
add
add
aam
add
add
add
mov
push
lds
sub
pop
pushl
push
pop
call
push
rol
sub
pop
push
push
push
call
scas
movsb
std
add
mov
in
cwtl
add
ja
repnz
sarl
xchg
add
cwtl
std
add
add
sub
pop
call
push
push
push
push
call
jae
lods
cmpb
test
add
mov
lret
loope
mov
add
add
aam
add
test
add
scas
cmc
filds
cmpsb
add
sub
pop
jmp
cmpl
je
push
push
push
push
push
call
mov
lds
add
mov
add
add
mov
pop
pop
mov
jbe
add
add
add
js
loop
mov
add
imul
add
jns
add
add
js
sub
pop
cmpl
jne
push
sub
xor
not
pop
mov
call
push
push
add
push
xor
add
rol
add
rol
add
sub
inc
xor
pop
add
pop
push
xor
sub
pop
pushl
push
shr
pop
call
push
lea
pop
lea
push
push
lea
push
push
lea
push
call
mov
jge
add
add
add
add
cmc
add
cwtl
add
addr16
cmpsl
mov
add
mov
mov
add
push
fldl
test
mov
jnp
popa
add
fbld
add
cmc
jp
add
pop
fwait
mov
mov
add
push
push
push
dec
add
inc
add
pop
push
push
inc
rol
pop
call
push
push
call
lods
aam
add
add
cli
push
xchg
add
add
pop
mov
jmp
leave
xchg
add
test
test
mov
ljmp
add
add
sub
pop
ret
push
push
push
lea
push
push
push
lea
push
push
push
call
jno
add
add
add
fldenv
add
add
add
add
add
cli
push
nop
add
popl
addr16
negb
lock
jecxz
mov
jbe
out
aam
sahf
add
add
push
push
xlat
rolb
add
mov
add
fs
jmp
mov
add
add
roll
pop
jmp
push
inc
sub
add
pop
cmpl
jne
push
push
inc
inc
push
sub
add
sub
not
sub
not
pop
dec
rol
dec
pop
push
rol
not
dec
pop
pushl
push
push
push
push
push
lea
push
push
push
push
push
call
repnz
aam
jge
add
add
addb
into
jo
add
mov
xchg
popa
add
int3
add
test
les
add
add
in
fcomps
sti
sub
add
test
cmpsl
push
call
jle
push
lea
jl
into
enter
add
repnz
rorl
xchg
loopne
fiaddl
cwtl
data16
adcb
loop
pop
scas
add
push
jns
lcall
pop
pop
les
add
cwtl
add
xchg
mov
add
add
add
add
add
or
add
add
add
mov
add
add
insb
mov
addb
jb
out
mov
add
sti
add
add
add
rcrl
sub
pop
call
jmp
push
lea
push
push
push
push
push
lea
push
push
push
call
mov
add
add
repnz
rclb
cmpsl
add
push
add
gs
add
add
loop
ret
addb
add
add
mov
in
fdivr
lcall
jge
add
test
sbb
add
push
push
push
push
call
add
add
add
mov
add
jne
sbbl
cmpsb
add
int3
rolb
insb
mov
insb
add
jp
popf
icebp
add
add
mov
imul
scas
mov
test
in
add
mov
push
ror
shr
not
pop
jmp
push
shr
inc
dec
pop
push
push
push
dec
push
and
add
lea
sub
dec
sub
not
pop
sub
inc
xor
pop
push
shr
pop
pushl
call
push
dec
pop
call
push
push
not
add
push
or
inc
add
not
add
sub
dec
pop
pop
push
ror
pop
pushl
call
push
push
lea
push
lea
push
push
push
push
push
call
je
filds
pusha
xchg
popa
shll
testb
jle
add
incb
mov
xchg
add
jne
jle
add
lcall
add
add
into
add
add
fbld
push
fidivrl
bound
jmp
sub
pop
call
push
push
shl
sub
push
push
pop
add
sub
shl
sub
inc
inc
pop
not
ror
rol
not
pop
push
lea
push
push
push
push
push
lea
push
call
jmp
out
lds
out
mov
add
add
mov
add
mull
out
add
cli
add
iret
xchg
mov
add
push
add
pop
rcl
loope
faddl
pop
mov
cwtl
cwtl
add
loope
lea
push
mov
in
in
pushl
push
push
push
push
push
push
push
lea
push
call
out
sti
add
pop
aad
nop
sahf
mov
icebp
add
pop
mov
incb
add
popl
pop
mov
in
shlb
cmpsl
add
mov
add
test
popf
sub
pop
call
push
lea
push
call
lea
mov
mov
filds
add
mov
test
stc
add
stos
add
add
add
add
add
pop
jge
fildll
add
add
in
sub
pop
call
push
push
sub
xor
inc
push
and
add
sub
xor
sub
pop
sub
pop
push
lea
push
push
push
push
call
arpl
into
addr16
pop
sahf
add
mov
stos
lret
add
pop
icebp
aam
test
add
add
lods
add
add
fdivrl
add
popa
lds
add
add
shrl
jp
add
add
xchg
jecxz
add
loop
int
ror
loope
add
jne
call
push
push
push
lea
push
lea
push
call
jp
test
push
push
add
lea
test
jae
call
add
gs
into
pop
cmpsb
test
add
add
lea
insb
add
loope
mov
add
add
add
cmpsl
mov
add
add
add
xchg
add
jb
push
push
sub
pop
call
push
push
push
or
not
add
dec
sub
pop
inc
pop
push
sub
pop
pushl
push
push
push
call
add
add
add
add
add
popa
mov
lods
pop
stos
xchg
mov
add
js
mov
mov
add
jns
add
add
into
test
fs
cmpsl
movsb
jne
lock
mov
sub
pop
call
push
dec
pop
call
push
push
lea
push
push
pop
add
ror
xor
sub
lea
shr
dec
pop
not
lea
lea
not
pop
push
xor
pop
pushl
push
push
push
push
lea
push
lea
push
push
push
push
push
call
je
lods
jae
xchg
fldl
cltd
xchg
out
add
jmp
int
cltd
sti
fidivrl
add
add
mov
jo
js
add
repnz
add
add
jle
in
roll
add
pop
mov
mov
jne
bound
add
ljmp
pop
call
call
push
push
add
xor
push
or
not
add
shr
shr
inc
add
sub
add
dec
sub
pop
sub
not
rol
pop
push
shl
inc
pop
pushl
push
lea
push
push
push
call
test
popl
sbb
nop
add
add
add
push
into
add
mov
mov
pop
push
lret
add
std
mov
fidivl
mov
add
cld
movsb
jmp
add
divb
sahf
mov
xchg
out
stos
pusha
mov
sub
pop
call
push
push
push
push
call
les
add
arpl
add
cmc
add
jl
push
add
mov
add
pop
pushf
mov
lock
loop
add
fs
jmp
lods
shlb
jno
pop
test
mov
add
in
lock
call
push
push
sub
lea
push
xor
add
shl
sub
xor
pop
sub
pop
push
push
push
push
call
xchg
add
mov
mov
mov
add
addl
jnp
enter
mov
out
add
pop
add
lcall
add
rolb
add
cld
jge
push
andl
add
push
add
pop
movsl
in
pop
xchg
fisubrs
mov
xchg
mov
lock
lcall
jne
push
push
push
push
push
push
push
push
push
push
call
popa
popa
aam
mov
pop
int
scas
pop
filds
mov
add
faddl
add
mov
mov
stos
jge
xchg
add
pop
push
mov
jp
in
fcomps
mov
rol
pop
call
push
push
shl
push
sub
add
not
sub
sub
pop
add
rol
pop
push
ror
shl
not
pop
pushl
push
push
push
call
add
xchg
mov
add
shrl
add
add
add
mov
ja
rorl
lahf
mov
mov
sti
pop
bound
scas
stc
add
push
filds
repnz
sub
pop
call
push
push
push
lea
push
call
lea
jmp
add
jbe
faddl
nop
ljmp
mov
mov
add
add
add
add
mov
add
add
in
lock
lcall
shrb
adc
mov
xor
push
xor
add
inc
sub
dec
pop
xor
pop
push
push
push
push
push
lea
push
push
lea
push
call
add
cltd
add
add
into
pop
cwtl
add
pop
add
aam
add
mov
loope
mov
xchg
add
push
mov
jge
push
add
add
sub
pop
pushl
call
push
push
push
lea
push
call
xchg
roll
out
movsb
icebp
xchg
mov
in
pop
jbe
mov
add
int
add
add
add
aad
fadds
push
mov
pushf
and
call
pusha
test
mov
push
push
push
push
push
push
lea
push
call
add
add
je
add
test
loopne
ficoml
pop
mov
xchg
add
std
out
fildll
iret
sub
pop
push
call
push
push
sub
add
not
ror
push
xor
add
shl
shl
sub
sub
shr
pop
add
not
pop
push
dec
shl
pop
pushl
push
xor
add
ror
pop
call
push
push
push
push
lea
push
push
call
pop
add
ror
add
add
mov
add
add
mov
ljmp
stos
lahf
add
add
into
jnp
add
imul
out
call
add
ret
fstpt
mov
add
add
add
call
call
push
push
shr
not
shr
push
xor
add
add
sub
dec
pop
add
lea
pop
push
push
call
jle
add
stc
add
add
add
add
add
push
add
add
mov
add
mov
pop
fiadds
ret
mov
add
sahf
add
jns
fcoms
cmpl
in
clc
pop
pushl
push
inc
not
add
shl
pop
call
push
push
lea
push
push
call
add
out
add
lea
add
jle
lret
mov
mov
add
add
add
xchg
aad
addl
stos
mov
data16
mov
add
shrb
fsubs
push
dec
sub
push
push
pop
add
dec
sub
xor
pop
shl
add
ror
pop
push
xor
shl
pop
pushl
call
push
xor
pop
call
push
push
call
mov
in
add
add
add
mov
je
add
add
mov
in
add
mov
add
add
xchg
int
pop
aad
testb
add
add
testl
mov
xchg
mov
add
cld
addb
push
call
xlat
push
lahf
add
add
add
add
add
add
add
jne
ret
add
ret
add
sahf
test
sti
add
loopne
call
add
fistpl
in
clc
lcall
jne
jmp
push
push
not
dec
add
push
or
inc
add
dec
shr
sub
sub
shl
pop
inc
pop
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
addr16
and
imul
add
add
enter
add
pop
cli
add
add
test
push
add
in
in
lcall
jne
push
not
sub
pop
call
push
push
lea
push
push
push
push
push
push
push
call
mov
cmpsl
call
mov
add
xchg
movsl
add
jp
xchg
fcomps
add
leave
add
add
mov
jp
fiadds
shll
lods
add
xchg
mov
std
xchg
add
add
push
add
jmp
lahf
sub
pop
lea
push
pop
push
push
push
push
lea
push
call
add
add
xchg
add
mov
ljmpw
popf
leave
mov
mov
into
mov
loopne
add
pop
out
lds
pop
mov
add
mov
add
scas
test
push
push
push
push
push
push
push
lea
push
lea
push
call
lock
add
arpl
lahf
lea
add
add
call
add
test
in
movsl
in
add
push
stos
add
xchg
int
add
mov
add
sub
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
mov
imul
push
add
aam
pop
jo
sahf
push
add
out
ja
jnp
je
stos
mov
outsl
cli
movsl
add
gs
into
sub
pop
push
call
push
ror
pop
call
push
push
shl
push
sub
add
lea
sub
shl
xor
pop
ror
lea
shl
dec
pop
push
lea
sub
add
pop
pushl
call
push
not
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
stos
fadds
push
add
push
fcom
lods
push
add
mov
add
in
subl
add
add
fsts
pusha
call
add
mov
add
xchg
mov
add
add
sub
pop
call
push
push
push
push
push
push
push
lea
push
call
test
add
in
cli
iret
jp
add
add
jno
insb
add
pop
lahf
fildl
add
iret
jle
add
popf
add
add
shl
add
pop
mov
lret
xchg
iret
mov
add
add
push
add
add
not
add
test
xchg
fs
add
lcall
add
add
push
push
ror
add
ror
push
xor
add
inc
sub
sub
sub
pop
rol
lea
pop
push
lea
push
lea
push
push
push
call
popa
cltd
jp
add
sti
add
push
mov
mov
arpl
lea
lods
add
movl
jecxz
fdivs
add
bound
cwtl
movsl
mov
jnp
lock
sub
pop
pushl
push
push
push
call
mov
add
stos
add
ja
sarb
loopne
add
mov
mov
fildl
sar
add
mov
in
hlt
pop
call
lea
push
shl
pop
push
push
inc
dec
sub
pop
push
push
push
not
rol
inc
sub
pop
push
push
sub
inc
pop
call
lea
push
push
sub
lea
push
or
not
add
not
sub
add
pop
ror
xor
not
pop
push
push
push
lea
push
call
loop
mov
add
add
into
je
add
in
add
push
add
aam
movl
mov
fldl
lret
jb
add
add
add
add
add
data16
mov
push
jo
fsub
xchg
je
add
lcall
jne
push
push
call
add
add
cltd
test
add
int
addl
cmpsl
add
push
add
add
repnz
mov
ja
xchg
add
fdivr
mov
xchg
arpl
add
add
sub
pop
call
push
push
ror
rol
sub
pop
call
push
push
shl
push
or
inc
add
lea
dec
sub
sub
lea
pop
lea
sub
pop
push
push
push
call
add
add
add
jbe
push
xchg
popa
insb
push
idivl
pop
xchg
mov
icebp
mov
xchg
cld
rcl
lahf
rolb
pop
mov
in
popl
mov
jmp
mov
cld
pop
add
add
xchg
lods
out
mov
sub
pop
pushl
push
shr
sub
sub
rol
pop
call
call
push
push
lea
push
push
call
xorl
add
repnz
add
fwait
add
add
fiaddl
add
add
pop
xchg
add
push
sub
pushf
jge
test
shrb
cmpsb
jl
je
push
mov
out
jo
add
add
pop
mov
scas
mov
fidivl
testl
cld
push
sub
sub
not
pop
lea
push
push
not
add
sub
push
sub
add
shr
ror
rol
sub
ror
sub
inc
pop
add
ror
sub
pop
push
lea
push
push
lea
push
push
push
lea
push
call
push
mov
cmc
pushf
add
add
add
add
lds
xor
call
js
loopne
jnp
hlt
add
pop
nop
add
cltd
je
add
mov
add
add
iret
push
jnp
addb
lahf
add
in
in
pushl
call
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
xchg
notb
scas
add
add
xchg
add
cld
add
add
add
flds
into
ret
lods
pop
xchg
jnp
xchg
call
je
add
js
add
add
push
mov
sub
pop
lea
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
aam
aad
arpl
push
add
mov
cld
cli
shr
add
add
pop
incb
mov
rcll
add
jmp
add
roll
pop
add
jns
sbb
test
push
add
add
add
test
pop
push
push
push
add
pop
pushl
push
push
xor
push
or
inc
add
shl
sub
xor
pop
shr
pop
push
ror
sub
pop
push
push
add
shr
dec
pop
call
push
push
push
push
pop
add
shr
sub
rol
ror
sub
add
add
ror
pop
sub
sub
dec
sub
pop
push
sub
pop
pushl
push
xor
xor
pop
call
push
push
lea
push
push
push
push
call
shlb
add
shl
add
add
xchg
jmp
sti
jo
add
mov
addl
add
gs
icebp
lods
fsubs
xchg
repnz
jnp
mov
add
add
add
add
cwtl
clc
add
nop
sub
pop
push
push
dec
shr
lea
pop
call
push
push
add
sub
add
push
sub
add
dec
inc
rol
shr
sub
shl
add
lea
pop
rol
inc
add
pop
push
push
push
push
push
lea
push
push
call
add
add
add
add
add
push
lcall
imul
roll
add
mov
mov
add
ret
fsubr
add
sub
pop
pushl
push
sub
sub
pop
call
call
push
push
lea
push
push
call
bound
add
pop
std
popl
lock
jl
addl
sub
add
push
movsb
jbe
sti
sti
add
scas
mov
subb
xchg
add
sub
pop
jmp
pushl
push
sub
ror
pop
mov
jmp
push
push
shl
sub
add
push
and
add
xor
shr
shl
sub
add
sub
add
shr
pop
rol
dec
pop
push
rol
pop
pushl
call
push
pop
push
push
push
push
push
call
add
out
int3
add
pop
mov
jne
jmp
js
fcmovnu
jno
les
aam
add
add
sahf
mov
mov
add
push
add
add
add
xchg
in
add
add
add
jbe
add
sub
pop
call
push
push
xor
ror
add
sub
push
push
pop
add
shl
inc
sub
sub
not
pop
shr
sub
pop
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
pop
loope
clc
xchg
add
add
mov
std
push
mov
add
add
add
movsl
jbe
faddl
add
ja
push
cmc
leave
out
add
add
add
xchg
add
pushf
add
add
mov
add
mov
popa
lock
les
add
sub
pop
pushl
push
shl
dec
pop
call
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
mov
add
xchg
add
mov
testl
fsubl
add
add
jb
add
add
add
jp
jae
lea
add
add
mov
pusha
sub
pop
push
push
push
call
add
add
rolb
mov
mov
add
add
add
mov
shrl
fstl
jb
mul
pop
rolb
pop
call
leave
push
add
pop
add
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
mov
add
add
gs
add
arpl
add
add
pushf
add
popa
test
imul
jne
fildl
add
into
add
push
add
int
add
add
mov
popa
pop
test
shll
pop
pop
pop
push
lea
push
lea
push
push
push
call
mov
pop
in
add
addb
out
add
add
enter
ljmp
mov
scas
add
popf
add
add
mov
add
jl
add
ljmp
fwait
call
lcall
lds
movl
add
int3
mov
xor
push
push
lea
push
push
call
mov
push
fwait
popf
mov
sahf
add
add
add
push
scas
add
lret
mov
stos
add
in
hlt
in
jecxz
lahf
xchg
sub
pop
inc
push
push
lea
push
call
js
mov
add
mov
mov
mov
add
pop
add
add
cmc
jb
add
add
mov
jp
add
movsb
mov
pop
add
add
enter
push
add
icebp
jne
shll
leave
add
add
js
add
sub
pop
ret
push
lea
dec
add
pop
leave
push
push
push
push
push
push
lea
push
push
push
call
add
mov
push
add
xchg
jp
add
bound
add
int3
int3
bound
mov
add
call
outsl
mov
pop
add
loopne
fimuls
fcompl
or
push
push
push
push
lea
push
push
lea
push
push
call
add
push
out
mov
std
loopne
add
add
stos
stc
mov
leave
add
roll
add
nop
loopne
xchg
add
mov
pop
add
add
mov
add
add
fdivrl
add
mov
jle
add
lcall
push
push
call
pop
add
test
xchg
lds
add
fiaddl
xchg
mov
aam
jns
popl
xchg
add
xchg
neg
rolb
push
testl
pop
mov
push
not
pop
cmpl
jne
push
add
pop
mov
push
lea
rol
pop
jmp
mov
push
push
push
push
push
push
push
lea
push
push
push
call
pusha
pop
add
add
mov
jbe
add
outsl
pop
add
rcr
fdivp
jmp
clc
int
test
add
add
push
add
add
add
add
add
lds
add
add
lods
add
add
test
fcomps
and
xor
push
lea
pop
xor
add
push
xor
shr
pop
xor
push
lea
push
push
push
push
push
push
push
call
add
popa
add
lea
mov
lock
fists
addr16
addb
mov
hlt
insb
add
add
add
lcall
sub
push
dec
add
pop
jmp
sub
push
push
push
push
push
push
push
push
push
call
add
stos
push
stos
add
mov
add
jp
iret
stc
mov
lea
mov
lods
popf
in
scas
add
mov
xor
dec
sub
dec
pop
sub
push
pop
cmp
jne
push
push
push
lea
push
push
push
push
push
push
push
call
add
int3
add
loop
popa
add
mov
cmc
out
test
add
add
add
jns
scas
push
imul
lcall
enter
push
push
lea
push
call
mov
test
in
add
add
je
mov
add
sahf
mov
add
add
mov
pop
add
add
mov
hlt
pop
sub
push
shl
shr
pop
mov
shr
push
push
lea
push
push
push
lea
push
push
lea
push
call
out
lds
movb
mov
xchg
in
add
shr
cli
push
pop
push
mov
xchg
add
aam
add
pop
add
call
pop
add
sub
push
push
lea
push
push
push
lea
push
push
call
cltd
add
mov
lea
in
add
mov
xchg
lds
shlb
stc
popa
scas
push
add
add
add
enter
roll
add
push
push
jnp
mov
out
fmul
lcall
repnz
sahf
jmp
add
jb
sub
pop
pushl
pop
push
lea
lea
pop
shr
push
push
push
push
lea
push
call
in
mov
add
add
add
mov
scas
push
in
mov
add
mov
jle
add
stos
out
add
xchg
mov
mov
imul
lea
hlt
aam
sub
pop
and
push
add
sub
sub
sub
pop
sub
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
jmp
add
add
faddp
rcl
add
lea
add
repnz
mov
jmp
lods
add
pop
out
add
int3
add
xchg
test
cmc
test
fdivr
lcall
stc
sbb
test
push
lea
push
push
push
lea
push
push
call
fadds
stos
pop
loop
jns
add
out
fiadds
repnz
sahf
cmc
add
xchg
int
loop
add
add
add
clc
add
lea
jbe
iret
faddl
add
nop
mov
jo
sub
pop
leave
ret
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
mov
movsb
addl
aad
movb
les
hlt
les
out
test
outsl
add
add
add
add
add
add
in
loopne
lcall
push
push
push
push
push
push
push
lea
push
call
add
jmp
icebp
out
fwait
xchg
mov
mov
in
add
jae
add
mov
sahf
add
add
pushf
add
ror
mov
flds
outsl
pop
lcall
add
call
add
lret
arpl
outsl
push
out
xchg
loopne
addr16
pop
mov
push
ror
pop
add
push
push
add
pop
push
push
lea
dec
add
pop
push
push
shl
dec
pop
push
push
ror
xor
pop
push
mov
push
shr
pop
lea
sub
push
push
push
push
lea
push
push
push
push
push
call
ficoml
add
stos
arpl
jbe
test
add
out
out
call
rolb
add
xchg
jae
add
mov
add
add
add
add
xlat
arpl
add
bound
add
in
cmpsb
add
jne
add
std
add
roll
add
add
add
jge
add
pop
sub
pop
mov
push
add
pop
shr
add
push
push
lea
push
call
mov
mov
fistps
std
fs
mov
xchg
add
gs
add
add
xchg
shlb
lret
clc
lds
int
push
add
arpl
add
add
sub
scas
leave
stos
add
fldl
add
jle
push
mov
add
stos
lods
add
xchg
mov
hlt
pop
mov
push
add
pop
add
push
push
push
push
push
push
call
xchg
lret
loopne
mov
data16
jnp
add
mov
in
mov
test
addl
pusha
mov
push
lods
leave
sub
pop
mov
push
rol
pop
add
push
lea
push
push
push
push
push
push
push
call
xlat
rcll
lret
in
add
add
mov
mov
mov
mov
xchg
add
add
add
jecxz
mov
addl
cmpsb
add
add
push
mov
jno
sub
pop
xor
mov
push
rol
pop
and
push
push
push
push
push
call
int
add
add
add
jmp
test
mov
jmp
cltd
add
add
add
add
jmp
xchg
pop
addr16
into
mov
add
add
lea
add
outsl
shr
std
add
les
lea
in
lcall
rolb
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
push
push
mov
pop
movsl
add
add
mov
add
xchg
add
add
pusha
add
jne
cmc
in
add
ja
cwtl
add
pop
add
add
add
add
jnp
add
add
mov
in
add
mov
fdivr
lcall
rolb
push
lea
push
call
jp
mov
push
pop
xchg
add
ljmp
add
add
mov
pop
loope
add
add
add
add
lods
sub
cli
jo
mov
jns
jne
call
add
add
add
add
adc
inc
js
call
jge
aam
cmpsl
fwait
insb
add
iret
add
cmpsb
add
iret
mov
add
add
shlb
cmpsl
add
mul
jp
in
lock
lcall
cmpb
jne
push
xor
add
pop
add
cmp
je
push
push
push
call
shl
add
lds
add
add
add
call
add
mov
jo
mov
add
ret
push
add
in
hlt
lcall
ret
adc
jnp
add
test
call
or
and
in
push
lea
push
push
push
push
push
call
mov
xchg
add
imul
add
je
mov
lds
loop
add
add
add
lcall
rclb
out
dec
lds
jne
lock
push
push
push
push
call
fwait
je
fisubl
sti
xchg
sahf
stos
sahf
popf
add
add
lcall
add
add
jnp
add
rcrb
in
add
fidivl
out
add
push
sub
not
add
rol
pop
pop
push
push
lea
push
push
push
call
popf
add
add
les
pop
scas
mov
arpl
mov
bound
int
jmp
add
add
add
arpl
add
add
mov
lea
jnp
add
xchg
add
cmpsb
test
push
xchg
jp
cmc
imul
sub
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
call
add
mov
jecxz
mov
jle
xchg
add
addl
test
into
mov
rolb
outsl
add
mov
add
mov
add
add
mov
add
add
push
add
add
pop
push
cli
stos
add
add
sar
add
sub
pop
pop
push
sub
sub
pop
leave
push
push
push
push
push
push
push
push
call
cwtl
popf
mov
add
lret
xchg
add
push
loope
add
pop
mov
jae
stc
add
add
xchg
add
jnp
mov
pop
js
jp
rolb
add
call
divl
xchg
sub
pop
ret
push
push
call
mov
jb
mov
xchg
add
mov
add
add
movsl
add
cwtl
add
jno
imul
add
jne
add
mov
ficoml
add
test
and
add
lcall
push
adc
jg
push
call
xchg
jno
mov
push
mov
jne
add
xlat
xchg
add
loopne
cli
add
jnp
add
add
xchg
jne
sub
pop
add
mov
push
lea
xor
lea
pop
push
testb
push
push
push
push
call
add
addb
ja
fdivl
fiadds
add
lea
mov
xlat
ljmp
add
fiaddl
add
jns
add
insb
scas
mov
popa
pop
add
add
movsb
fidivrs
outsl
mov
add
lds
cmc
mov
sub
pop
pop
push
lea
dec
pop
call
push
xor
sub
dec
pop
push
call
push
add
shl
pop
xor
push
dec
sub
not
dec
pop
pop
push
lea
push
lea
push
lea
push
call
imul
push
out
add
add
cmpsb
in
into
jle
shr
add
lods
pop
pop
add
lahf
cmp
jns
movsl
add
cld
add
int3
add
xchg
push
shl
sub
sub
pop
pop
push
sub
sub
pop
pop
pop
push
push
lea
push
push
push
push
push
push
call
mov
push
mov
mov
add
add
push
cli
test
add
mov
mov
icebp
add
push
out
stc
addl
in
loopne
lcall
ret
push
not
pop
push
push
not
pop
mov
push
ror
pop
add
push
lea
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
add
jmp
add
roll
add
scas
push
add
test
ljmp
pop
add
enter
mov
add
cli
jbe
add
xchg
mov
add
ja
add
into
ret
add
lcall
mov
sub
pop
push
push
pop
push
push
push
call
add
add
jb
out
movsl
rorb
leave
test
popf
pop
xchg
add
add
out
in
add
cmc
add
add
add
in
mov
roll
add
cltd
fbld
mul
mov
into
add
clc
lcall
push
shr
pop
mov
push
push
lea
push
lea
push
push
push
push
push
push
call
jl
fwait
add
add
mov
add
add
movsb
fcmovne
mov
into
out
add
xlat
mov
push
add
add
cli
fwait
aad
add
cwtl
add
mov
add
pop
popa
jae
add
add
insb
ret
into
outsl
xchg
movsb
in
add
lods
shr
add
pushf
les
add
addr16
xchg
std
sub
pop
push
pop
push
shl
pop
lea
push
lea
push
push
push
lea
push
push
push
call
mov
scas
push
out
testl
lods
roll
mov
add
add
jno
flds
mov
out
mov
cli
in
pop
add
lretw
bound
push
add
pusha
add
add
add
pop
fs
add
mov
add
sub
pop
sub
push
xor
inc
dec
pop
mov
push
dec
pop
shr
push
shr
sub
pop
add
mov
push
dec
add
shl
pop
add
pushl
push
shl
dec
pop
popl
push
push
push
push
push
push
push
lea
push
push
call
jb
jbe
add
add
mov
add
mov
add
ret
add
pop
add
in
mov
jle
in
movsb
add
add
mov
stos
sub
pop
mov
add
push
push
push
push
push
push
push
push
call
jp
je
push
testb
add
add
add
add
mov
rol
fmul
fiaddl
fnsave
lret
cld
add
mov
popl
cmpsb
add
pop
loop
jae
rcrb
insb
add
push
add
push
push
pop
cmpsl
int
arpl
roll
iret
popl
jmp
addr16
pop
xor
push
dec
sub
dec
pop
lea
mov
push
ror
sub
add
pop
add
xor
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
subb
imul
mov
add
pop
cmpl
lds
cli
add
mov
cmpsb
in
mov
pop
test
add
push
add
push
std
jp
fisubrs
call
add
fiadds
pop
rol
push
push
push
push
push
call
ljmp
jae
jecxz
add
frstor
add
subl
pop
mov
sahf
add
mov
pop
mov
add
add
std
test
movsb
in
push
add
add
add
mov
cld
mov
in
sarl
in
in
pop
nop
push
add
add
pop
nop
xor
push
sub
lea
pop
nop
nop
push
pop
inc
push
sub
shr
pop
nop
nop
push
push
lea
push
push
push
push
call
add
imul
addr16
add
aad
je
jge
cld
jae
lods
loop
icebp
test
ja
loop
mov
lret
popa
sti
fldz
stos
add
rolb
out
popf
pop
call
add
pop
add
popf
scas
jnp
in
call
jne
add
push
pop
nop
push
shr
rol
not
dec
pop
nop
push
pop
cmp
je
push
lea
shr
rol
pop
nop
nop
push
push
lea
push
push
lea
push
call
mov
add
jl
fs
add
add
push
hlt
add
add
add
fidivrl
mov
add
imul
add
xchg
ja
add
add
add
add
test
add
repnz
add
sub
pop
inc
push
lea
rol
pop
nop
nop
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
push
repnz
xchg
mov
add
fwait
add
add
aam
add
ja
add
add
lcall
add
xchg
sub
pop
cmp
jb
xor
push
pop
jmp
push
ror
shl
inc
pop
mov
add
push
lea
push
lea
push
lea
push
lea
push
push
call
pop
add
mov
jle
add
js
scas
add
add
lret
lcall
add
push
loop
sub
pop
movzwl
push
lea
rol
pop
mov
push
inc
pop
add
push
ror
shr
pop
mov
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
aam
add
add
in
add
add
add
push
add
ja
add
mov
lods
cwtl
lea
jno
out
aad
xor
out
popf
lcall
add
lcall
leave
push
shl
lea
pop
xor
shl
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
lret
nop
add
add
add
movl
xchg
jmp
add
std
clc
scas
add
addb
sub
pop
xor
shl
push
inc
shr
pop
xor
push
xor
dec
sub
pop
shl
push
lea
push
push
call
add
enter
mov
jmp
shlb
mov
mov
cmpsb
add
jbe
add
stc
xchg
add
add
lcall
or
mov
push
push
push
push
push
push
push
push
call
out
add
out
add
sbbb
pop
add
mov
stos
stos
negb
mov
movb
in
loopne
add
push
pop
pop
push
push
push
push
lea
push
push
push
call
test
add
add
mov
mov
add
pop
nop
mov
xlat
jns
add
movsb
lret
movsl
roll
pop
fadds
lcall
push
sub
inc
dec
sub
pop
pop
push
lea
push
lea
push
lea
push
push
push
call
jecxz
add
add
pop
out
add
mov
add
lret
movl
les
add
out
cwtl
mov
add
in
icebp
addr16
andl
fistpl
push
push
add
add
add
cwtl
cmpl
add
lcall
push
push
push
push
call
xchg
pop
jb
mov
out
mov
add
addb
enter
add
add
mov
xchg
add
sub
pop
leave
push
lea
push
push
push
push
push
lea
push
call
add
sarl
lea
lcall
arpl
imul
add
mov
push
xchg
lret
add
add
add
add
test
add
idivl
sar
mov
mov
lcall
or
push
add
pop
push
push
shr
sub
pop
mov
push
lea
push
push
push
lea
push
push
call
lock
add
aad
out
jecxz
sti
stos
hlt
mov
roll
jo
add
xchg
repnz
add
add
repnz
add
mov
lods
stos
add
stc
jecxz
mov
add
addl
push
inc
pop
push
push
push
call
add
push
or
cli
add
imul
add
xchg
add
fiaddl
push
add
test
mul
add
add
add
int3
test
add
add
repnz
add
add
xchg
xlat
add
add
ljmp
lcall
mov
push
lea
push
push
push
call
pop
push
hlt
sbb
add
je
add
add
add
scas
fcmovnu
jmp
add
add
pop
pop
jnp
add
add
mov
in
lock
mov
push
add
not
sub
sub
pop
mov
test
je
push
push
push
call
stos
mov
mov
in
nop
add
jae
add
add
add
xchg
add
push
push
add
enter
add
filds
in
pop
add
mov
in
hlt
lcall
jno
push
shr
inc
pop
test
je
mov
push
dec
pop
mov
mov
push
push
push
push
lea
push
push
lea
push
call
add
add
ja
add
xchg
cmpsl
add
xchg
mul
je
int
fcmovnbe
add
leave
add
out
fwait
mov
test
xchg
push
add
out
test
add
jecxz
mov
in
jne
xchg
add
mov
in
in
lcall
push
lea
push
lea
push
push
call
add
addb
lods
add
pop
testb
mov
mov
mov
ljmp
les
in
add
mov
mov
mov
fadds
jl
add
add
add
add
loop
add
jmp
add
lods
jp
add
add
sub
pop
cmp
je
push
add
pop
test
je
mov
push
push
lea
push
call
movsl
mov
add
out
add
add
fldl
scas
popf
add
shll
cmpsb
popl
xchg
cld
add
add
add
sarl
add
add
data16
add
mov
jne
fiaddl
add
add
add
add
mov
jne
fs
lret
xchg
lock
mov
in
hlt
pop
inc
push
lea
push
push
push
lea
push
push
call
xchg
sarl
mov
lea
add
add
add
lret
rolb
add
mov
shlb
add
jbe
repnz
add
mov
cmp
je
push
push
push
push
push
push
push
push
push
push
call
push
add
xlat
push
add
add
sahf
add
add
add
xchg
add
push
fmull
stos
lods
jne
add
mov
jge
loop
cmpsb
mov
mov
add
rol
add
mov
fs
cltd
add
enter
mov
test
cmpsb
add
fcomps
rorb
mov
pushl
rclb
push
push
lea
push
lea
push
push
push
call
push
mov
add
add
fwait
pop
lcall
fsub
add
add
mov
xchg
add
add
add
add
mov
add
add
add
add
add
add
add
add
cwtl
add
lds
pop
add
jb
leave
loopne
sub
pop
pop
push
push
lea
push
push
push
push
call
repnz
add
enter
mov
add
add
mov
rolb
fs
mov
iret
push
add
clc
jne
lret
sub
pop
pop
pop
push
push
push
push
push
push
push
push
push
call
add
sti
add
flds
pop
cmpsb
movl
add
add
imul
mov
call
xchg
mov
frstor
add
addl
into
add
out
add
add
xchg
add
add
in
fdivr
lcall
push
push
push
push
push
lea
push
call
enter
mov
incb
mov
push
test
imul
mov
repnz
rclb
xchg
pusha
add
lds
jp
jb
in
outsl
fistpll
add
add
in
pusha
in
add
add
rolb
fcmovne
imul
lea
lods
mov
call
leave
ret
push
shr
sub
pop
mov
push
push
call
pushf
add
add
shll
push
add
add
pop
add
enter
incb
add
filds
mov
add
test
mov
std
lods
nop
add
cwtl
add
mov
mov
add
add
add
push
mov
lea
sub
pop
inc
push
xor
inc
xor
pop
cmp
jne
push
inc
sub
pop
lea
mov
push
sub
pop
test
je
push
lea
not
pop
mov
add
push
rol
pop
cmp
jne
push
sub
pop
mov
test
je
push
push
push
call
jne
jo
push
mov
test
rcll
add
push
xchg
mov
rol
add
push
cld
mov
add
cmpsl
stos
scas
out
add
loopne
int
add
add
call
lcall
add
mov
pusha
add
xchg
add
jo
add
outsl
jle
mov
pop
mov
push
ror
add
pop
add
cmp
je
push
lea
push
push
push
push
push
push
push
call
pop
in
add
xchg
arpl
add
rolb
in
scas
into
mov
add
add
pop
fisubrl
jle
add
xchg
mov
push
roll
out
pop
pushfw
lret
pop
lock
leave
out
insb
add
je
in
loopne
lcall
dec
cli
call
fmuls
rorl
push
call
mov
shr
pushf
sti
loope
xchg
inc
je
jo
add
xlat
add
push
les
jge
add
add
pop
add
lods
xchg
jns
int3
out
add
xchg
test
out
push
fadds
sub
pop
xor
pop
push
pop
pop
push
push
lea
push
push
push
push
push
push
push
push
call
repnz
rolb
add
add
clc
adcl
add
nop
repnz
add
in
push
add
popf
xchg
push
mov
mov
pushf
repnz
pop
add
add
add
loop
sub
pop
pop
pop
push
shl
inc
pop
leave
push
push
push
push
lea
push
lea
push
push
call
imul
pop
jmp
add
push
add
add
mov
add
rorb
mov
add
mov
jns
add
testl
mov
loope
jns
data16
jb
add
loop
xorl
add
add
imul
call
sub
pop
pop
pop
push
dec
dec
pop
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
add
imul
out
insb
add
add
add
add
add
cltd
add
std
arpl
mov
push
loop
stos
mov
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
out
loope
mov
rolb
mov
xchg
fwait
hlt
add
imul
lods
xchg
push
popa
add
data16
add
add
insb
add
lcall
push
push
lea
push
push
push
push
push
push
push
call
add
fiadds
add
add
jecxz
add
loope
xchg
add
add
add
lea
add
add
scas
mov
bnd
test
jne
add
pop
mov
imul
xchg
test
jae
add
imul
pop
ret
mov
push
push
lea
push
call
cmpb
popa
rorb
add
add
add
jnp
add
add
or
addl
add
int3
mov
add
sub
pop
pop
push
rol
sub
pop
pop
pop
push
ror
pop
pop
push
add
sub
add
pop
leave
push
push
push
push
push
call
add
pop
pop
flds
aad
push
out
movsl
mov
mov
rol
jo
bound
push
repnz
add
call
add
add
jmp
movsb
jne
mov
add
add
imul
faddl
enter
insb
add
mov
pop
ret
xor
cmp
incb
adc
icebp
adc
adc
adc
xor
adc
sbb
adc
cmp
xor
adc
mov
add
mov
sbb
mov
stc
mov
push
mov
pop
into
mov
fcomps
jecxz
test
bound
cld
outsb
mov
jae
mov
in
sbb
pop
xchg
mov
lods
addl
aad
dec
sub
imul
insb
mov
scas
out
push
jl
dec
arpl
mov
lahf
xlat
ljmp
stos
test
loope
popa
mov
xchg
dec
sti
std
daa
imul
push
mov
fadds
repnz
or
dec
inc
or
xchg
mov
push
outsb
lea
out
xor
xchg
push
daa
or
mov
or
idivb
add
stos
mov
fdivrs
rorb
mov
push
mov
or
imul
and
faddl
into
adc
pushf
fimuls
push
add
sub
sbb
dec
fs
aaa
adc
daa
jmp
mov
cmc
adc
stos
outsb
sbb
int
jle
jbe
or
icebp
cmp
loope
fld
out
pop
outsb
mul
in
mov
cmp
into
mov
aam
adc
mov
add
mov
out
ja
inc
arpl
jmp
pop
xor
mov
push
adc
adc
cmp
and
mov
adc
mov
cmp
add
mov
push
sarl
lret
push
call
sub
sar
sub
sbb
enter
adc
sbb
push
xor
popf
shll
pslld
aam
shrb
mov
adc
cltd
and
lods
filds
mov
sbb
cmpsl
xor
jbe
xchg
cmp
add
mov
daa
inc
test
mov
test
dec
cwtl
cmc
push
mov
and
mov
in
ja
push
inc
or
lahf
sahf
mov
jo
xchg
sarl
test
out
mov
movsb
outsb
push
or
cmc
adc
cmp
aam
cmc
in
add
or
hlt
popa
fstpt
add
lcall
les
cmp
pop
rcr
xor
dec
xchg
fwait
aas
out
mov
jbe
mulb
arpl
xlat
lret
repnz
push
push
hlt
sbb
cmp
movsl
into
scas
loope
icebp
outsl
pop
popa
cmp
jecxz
jg
ret
mov
adc
jae
hlt
filds
jg
and
ficomps
sbb
imul
es
or
or
mov
jnp
lea
xchg
xchg
out
pop
jne
lret
dec
xchg
imul
jne
add
or
ljmp
sub
mov
cmp
scas
in
in
pushf
test
imul
in
jle
pusha
and
arpl
mov
inc
jb
mov
adc
insb
dec
and
repnz
cld
cmc
shll
jg
mov
into
push
clc
gs
arpl
ja
push
mov
daa
cmp
xor
enter
pop
hlt
andb
adc
aas
adc
or
loope
jp
sbb
or
push
jmp
repz
sub
xor
int
sub
mov
xchg
push
leave
sbb
js
mov
icebp
xchg
movsb
sub
xlat
mov
decl
xchg
adc
popf
popa
popf
mov
dec
stc
inc
in
mov
jnp
sub
inc
cmp
mov
sub
ret
pushf
bound
stos
or
in
jb
sub
fmull
pop
lock
cmp
push
pop
sahf
dec
mov
pop
lea
jo
mov
add
xor
shr
arpl
jmp
and
cmp
mov
sbb
mov
xchg
mov
xor
insl
push
push
psrlw
fcoml
mov
add
jns
mov
jo
ljmp
inc
jmp
mov
loope
fiaddl
pusha
pop
pop
jle
pop
lret
or
cmp
mov
adc
shll
movsbl
bound
out
xor
pop
pop
call
icebp
xchg
outsb
aad
push
mov
sbb
mov
es
ret
add
fwait
inc
cmp
xchg
push
iret
lcall
jmp
mov
les
rcll
cmp
jg
add
ret
mov
sbb
dec
inc
dec
pushf
jge
mov
xchg
or
adcb
dec
add
std
outsb
fcomps
push
inc
aad
push
daa
xor
push
cmc
fwait
out
in
nop
sbb
mov
scas
rolb
xor
adcl
cmpsb
and
mov
dec
cmp
not
cmp
repnz
int3
es
mov
sti
adc
and
stc
push
or
enter
cld
jp
push
repnz
mov
dec
pop
sub
jl
jo
insl
jecxz
cmp
ja
sbb
leave
lods
neg
fcmovnbe
xchg
cmp
pop
mov
dec
out
xchg
leave
push
inc
cld
bound
jmp
jg
push
mov
fisttpll
push
dec
jle
addb
testl
push
fiadds
ja
jecxz
inc
mov
mov
sub
xchg
loopne
mov
aas
mov
test
imul
popa
enter
fs
out
sub
xor
mov
aad
outsl
popa
loop
add
push
xchg
aaa
dec
mov
or
cmp
mov
sahf
int
pop
arpl
add
dec
fsubl
add
dec
and
lcall
bnd
jg
push
fadds
mov
jbe
aad
insl
imul
addr16
fldl
sbb
lret
xorb
lock
mov
int3
loop
movzwl
pop
cltd
shll
add
pop
cltd
jne
xchg
sbb
outsl
xchg
adc
cmp
xchg
adc
dec
sar
pop
jae
sti
jle
push
pop
loopne
daa
mov
arpl
or
js
out
mov
cmp
inc
mov
mov
cltd
mov
pop
mov
xchg
call
fcmovnu
cltd
dec
and
es
push
or
dec
popa
push
je
cmpsl
jne
add
sbb
adc
mov
add
or
mov
pop
jmp
fidivs
stc
call
cmpsb
xor
lock
leave
mov
rcl
mov
sbb
xchg
dec
out
sti
jae
imul
push
add
pop
sahf
loop
push
scas
lcall
jns
stos
mov
xchg
pop
lock
mov
js
inc
pop
idivl
cwtl
scas
pop
push
pusha
push
mov
jge
jle
push
or
int
inc
movsl
xchg
andl
inc
fwait
jge
xor
inc
push
dec
mov
add
cltd
daa
repnz
test
adc
int
push
cmpsb
push
les
addr16
outsl
pushf
in
push
xor
loopne
daa
in
push
inc
xchg
fcmovnu
aas
adc
test
inc
rcrl
into
rolb
movsl
lahf
xchg
xchg
mov
int3
mov
mov
lret
xchg
cmpsb
jno
enter
lods
aas
jmp
push
inc
push
push
jle
inc
xchg
xchg
xor
fs
fcompl
mov
fcmovne
pusha
mulb
push
jp
sub
clc
pop
pop
xor
lret
in
lret
jne
movsb
popf
cmp
lcall
mov
stos
pop
pop
push
ja
lahf
int3
mov
lahf
jle
lea
jecxz
clc
mov
xor
adc
sub
imul
and
call
pop
or
cmc
cmp
ret
add
xchg
addr16
push
out
jne
sbb
sub
sub
and
cmpsl
test
mov
mov
addr16
ja
fdivl
cmp
cld
mov
dec
xor
pop
jno
rorb
lret
push
lret
shll
xor
add
mov
ficomps
mov
loope
jno
and
xor
inc
mov
js
lods
mov
sbb
enter
sbb
inc
xor
outsl
imul
dec
leave
push
cmp
pop
jnp
out
test
jl
hlt
cmp
stc
and
push
mov
pop
or
or
lldt
sbb
pop
insb
incb
inc
or
dec
cmc
pop
mov
pushf
jo
xor
insl
mov
jmp
scas
dec
jmp
add
or
lahf
xor
pop
adc
rorb
sub
cmp
out
mov
xor
imul
lods
push
insl
hlt
popa
jmp
dec
dec
imul
lods
clc
fsubrp
mov
mov
outsb
jmp
cmp
shr
popf
js
or
adc
movsl
test
test
adc
cwtl
mov
xchg
stos
stc
mov
stc
mov
adc
data16
or
rclb
dec
adc
lock
fisubrl
clc
test
cmpsl
fwait
mov
and
or
inc
mov
and
pop
lahf
fidivs
scas
js
dec
mov
popa
inc
fwait
jp,pn
lret
inc
sub
orl
insl
std
dec
cmp
add
sbb
dec
idivb
outsb
shrl
loopne
ret
ss
mov
aaa
dec
cs
clc
lea
call
and
push
inc
cli
aas
pop
push
lret
test
sub
push
inc
pop
or
push
cld
pop
fisubs
pop
les
imul
xor
mul
fstpl
pop
fisttps
push
ret
inc
push
pop
mov
iret
sbb
pop
cltd
jmp
aaa
stc
fidivrs
push
jp
mov
lods
cmp
xchg
ljmp
sbb
pop
xchg
inc
into
dec
pop
inc
test
push
repnz
mov
test
push
mov
lret
int
popa
push
lods
fdivl
mov
pop
and
imul
jge
addr16
icebp
xchg
jne
lds
inc
ss
aas
xchg
mov
push
jge
les
mov
mov
inc
pop
add
dec
clc
sub
or
xor
das
jg
jne
cli
sbb
jns
push
ret
sar
pop
fdiv
mov
aad
inc
jmp
js
adc
gs
call
addr16
pop
arpl
movsl
push
xchg
fdivrl
popa
pop
test
cmpl
aas
jge
inc
xor
add
ss
mov
mov
bound
push
pop
sub
mov
sti
xlat
sub
mov
fwait
popa
fs
test
test
jns
jne
mov
clc
mov
sub
clc
inc
popa
xchg
xchg
imul
arpl
or
mov
test
jb
in
icebp
jnp
cs
subb
mov
jns
jnp
push
pop
mov
inc
inc
cli
imul
mov
push
inc
and
pop
notl
in
aas
push
sbb
dec
jg
xor
je
sub
jl
mov
xor
popf
mov
or
mov
fwait
nop
and
mov
pop
push
sbb
popa
jecxz
cltd
xchg
push
out
das
imul
xchg
pop
rcrl
int3
fimuls
xlat
mov
xor
dec
xchg
mov
mov
inc
xchg
dec
in
cld
mov
xor
adc
pop
in
sbb
in
pop
pusha
test
sbb
push
mov
pushf
xor
pop
or
nop
pop
dec
pop
das
mov
lea
mov
dec
xchg
inc
in
cmp
and
mov
lea
mov
std
cmpb
pop
xchg
adc
sbb
imul
pop
sub
bound
sub
sar
repnz
ljmp
and
shrb
cmp
jle
and
cmp
mov
fsubrl
push
add
dec
sbb
and
or
mov
cmc
loopne
adc
jl
test
iret
mov
inc
movsl
pop
inc
jns
sub
icebp
sbb
push
daa
push
popl
jae
jp
push
and
cld
cmp
add
inc
rcrl
xorb
cmp
dec
daa
outsb
mov
lahf
nop
lcall
push
into
shrb
testl
add
pop
cs
push
mov
lods
out
enter
in
popf
and
push
xchg
inc
jl
push
mov
cmc
xor
or
aaa
push
mov
ss
repnz
loop
mov
lock
addb
je
rcrb
mov
imul
ljmp
fwait
mov
les
inc
inc
inc
mov
cmp
fwait
or
std
pop
xchg
sbb
sbb
leave
enter
test
stos
outsb
and
jmp
mov
cmpsb
fcompl
and
insb
inc
cmpsb
lret
ret
and
mov
mov
adc
pop
mov
cwtl
inc
sub
xchg
sti
stos
inc
push
ficompl
fstps
push
int
or
cmp
xor
repz
adc
jae
adc
clc
sub
push
cmpsl
adc
lods
stos
pop
sbb
pop
sbb
movsb
lods
fs
imul
and
pop
loop
jp
test
mov
aad
jle
fmuls
fcomp
mov
out
mov
cwtl
sub
push
mov
js
mov
mov
cmpsl
pop
sbb
dec
mov
mov
sbb
or
dec
adc
cmpb
adc
jl
mov
xorl
daa
lcall
jb
outsl
push
push
cmc
fldt
in
jecxz
nop
shll
xor
cwtl
movsb
mov
arpl
push
xchg
cmc
roll
cmp
mov
lods
iret
data16
jnp
lods
lret
sahf
xchg
xchg
mov
fstpt
mov
lcall
das
mov
fucomip
dec
lcall
sub
xor
popl
inc
cmpsb
push
in
xchg
ljmp
xchg
jns
mov
or
mov
xchg
orb
cmp
mov
add
pop
cld
fs
gs
fs
mov
pop
push
mov
decl
loope
lock
inc
pop
ja
fdivrs
pop
lods
sbbl
call
and
pusha
mov
mov
sub
or
add
subb
push
add
fcmove
mov
push
lods
sbbl
pop
imul
xor
cmp
push
pop
mov
andl
xor
mov
call
mov
dec
sahf
imul
push
dec
popf
aaa
dec
cmpsb
into
jnp
mov
push
mov
addr16
dec
ja
adc
lahf
repnz
loope
hlt
inc
push
xchg
jns
ret
sbb
bound
push
les
inc
mov
loopne
pop
xchg
cmp
mov
int
inc
aad
orl
push
dec
add
stc
fwait
loop
lahf
into
dec
or
shll
push
mov
inc
mov
pop
outsb
mov
mov
cmp
adc
add
xchg
mov
rclb
scas
fldl
jg
jae
popf
xor
je
inc
out
pop
xchg
jne
mov
push
cs
aad
enter
mov
cmp
popw
fwait
inc
leave
aad
dec
into
jmp
mov
test
imul
dec
call
sti
jge
mov
mov
shrb
and
popa
adcb
sti
movsl
std
xor
xchg
sarb
mull
pop
std
pop
mov
mov
dec
sub
in
or
repz
pop
insl
pop
mov
addr16
ret
xchg
lods
jne
mov
pop
cmp
imul
xor
mov
add
movsb
push
mov
cld
push
fnstenv
dec
pop
sub
xor
pop
xchg
dec
cmpsl
test
test
cmp
fwait
inc
addr16
mov
cmp
test
jmp
lods
inc
dec
mov
pop
dec
or
and
push
xlat
idiv
mov
jecxz
and
pop
jle
ret
stos
xor
mov
xor
mov
or
stos
push
idivb
aaa
pop
or
imul
fdivr
mov
adc
pop
and
jle
in
and
xchg
nop
test
aam
rorl
and
out
bound
test
cld
pop
sbb
rorl
cmp
enter
js
aad
addr16
adc
mov
or
pushf
mov
mov
pop
add
mov
push
fistl
fcmove
jge
jle
jno,pt
or
xorb
or
shlb
icebp
mov
xchg
outsb
inc
push
pop
mov
mov
mov
fucomi
pop
dec
add
push
jbe
mov
xchg
cld
inc
insl
repnz
jg
addr16
sbbl
xor
mov
popf
lahf
fistps
or
hlt
iret
ljmp
popa
pop
fwait
and
inc
and
mov
mov
pop
rcrl
dec
iret
out
int3
inc
mov
mov
pop
repz
push
add
jns
mov
mov
xor
jmp
popf
sub
jg
cli
xor
movsl
jns
repz
lahf
inc
enter
dec
and
les
mov
mov
mov
clc
pop
enter
jbe
gs
cwtl
int
adc
and
pop
ja
fstpt
out
lahf
insb
sub
in
mov
xchg
jo
roll
popa
adc
xchg
adc
pop
pusha
xchg
decl
in
mov
sub
push
bound
push
adc
mov
adc
xchg
iret
fucom
add
fnsave
ss
fs
mov
roll
pusha
dec
scas
inc
xor
cmpsl
dec
stos
mov
dec
ja
call
cmp
cmp
ds
aas
adc
add
out
outsb
or
imul
cmp
jecxz
mov
sub
add
nop
sbb
push
fimuls
add
dec
push
sub
jnp
lret
subl
lret
mov
adcl
jno
fisttpll
js
test
sbb
sub
ljmp
pop
addr16
inc
fsubrs
sub
push
push
add
sbb
xorb
adc
jp
cmpsb
sub
cmp
pop
lea
cmp
das
xchg
push
xor
push
imul
jbe
imul
popa
es
xchg
aaa
pop
fs
sbbb
mov
out
inc
imul
and
jno
and
inc
loop
rclb
ds
fcoml
push
jno
push
daa
call
es
jmp
nop
xchg
and
fwait
sbb
dec
add
daa
lea
push
sbb
pop
clc
cld
stc
mov
xor
and
movsl
jns
cmp
addb
cmp
in
lock
or
addb
add
jmp
jle
jo
xchg
mov
inc
mov
lods
sarl
adc
arpl
stos
pushf
or
mov
popa
and
push
sub
sbb
mov
xlat
jno
mov
and
xlat
jl
dec
fidivrs
in
ficoml
lret
std
xchg
add
mov
adc
inc
call
outsb
pop
stos
mov
rcrl
adc
aas
jecxz
mov
loope
jl
gs
fdivl
loop
leave
jecxz
sub
add
ror
xlat
dec
mov
sub
repnz
mov
pop
shlb
sub
fsubrl
sub
fdivl
ret
cmc
xlat
lods
or
loop
push
cmp
outsl
push
and
lock
push
push
aaa
mov
dec
fsubs
test
daa
imul
jl
je
pop
lea
sbb
mov
inc
dec
dec
pop
xor
sub
mov
xchg
in
mov
jb
movsb
xlat
inc
mov
orl
inc
out
loope
pop
stos
hlt
or
mov
jg
mov
mov
pop
cmp
popa
jle
push
xchg
push
pop
mov
xor
xchg
jge
sub
lock
cmc
push
or
cmc
pop
insl
scas
arpl
fbstp
pop
cmp
dec
or
push
loop
outsb
icebp
fstpl
call
test
mov
stos
mov
daa
mov
jae
popf
jl
xor
mov
fisubrl
outsb
push
and
in
sbb
sub
mov
sahf
cmp
loop
pushf
scas
mov
cmp
push
sbb
cmpsl
mov
ret
push
mov
sub
xor
mov
cli
addr16
jb
mov
xchg
mov
jle
sub
ljmp
xchg
and
sbb
lea
jae
gs
aas
call
jbe
mov
data16
pop
ret
rolb
int3
in
imul
movsb
stos
call
sbb
lods
loop
call
insb
js
mov
nop
cs
dec
push
add
dec
mov
ds
call
mov
pop
mov
adc
fildll
sti
pop
inc
push
sub
int
inc
imul
test
pop
sub
call
cmp
pop
cmp
ss
bound
insl
jg
sbb
gs
xor
std
leave
stc
addb
mov
adc
es
test
test
mov
mov
enter
push
aad
sarl
jne
out
jo
rolb
push
aad
add
dec
and
push
sub
cmpsl
stos
mov
push
push
rcrb
and
fimull
mov
jo
out
movsl
dec
or
cmp
cmp
sub
test
imul
cmc
or
cmp
js
cmpsb
dec
enter
jmp
in
dec
mov
jle
xchg
cmpsb
inc
push
test
scas
push
clc
and
and
shlb
mov
fsubrp
cmp
jbe
lret
and
je
mov
std
add
mov
inc
iret
pop
mov
inc
out
cmp
iret
inc
scas
ja
inc
lods
jle
and
mov
lret
imul
in
lcall
push
push
roll
or
sub
out
push
jl
mov
ret
dec
test
gs
jg
aaa
scas
fdivs
mov
cmpl
data16
inc
push
sub
xchg
arpl
xchg
inc
mov
jle
and
mov
popa
clc
in
inc
addl
fldcw
xorb
movsb
out
lock
lret
sarb
aas
mov
jno
inc
inc
xlat
fists
xchg
outsb
dec
jg
int
jb
ljmp
mov
dec
fiaddl
pop
adc
dec
andb
stc
icebp
mov
shlb
jle
dec
inc
or
ja
xor
outsb
add
stc
cwtl
pop
push
pop
fcoml
mov
enter
aas
add
loop
push
and
dec
dec
adc
adc
adc
aaa
enter
sbb
imul
add
pop
or
jge
sub
sbb
je
push
jbe
cmpsl
cli
and
rorb
in
ds
xor
icebp
dec
push
cmp
lods
pop
sub
mov
dec
test
popf
inc
pop
enter
sar
pop
shrl
cli
sbb
ffreep
loop
mov
sub
lret
fisttpl
pop
mov
cmp
out
jge
xchg
or
int3
test
xor
les
test
cmp
jbe
add
sbb
movb
sub
pop
or
popa
fs
lret
xchg
loopne
cmp
bound
pop
jmp
mov
xchg
pop
mov
jp
pop
stos
mov
frstor
fstpt
loop
int
xlat
xor
scas
pop
inc
xchg
shll
js
dec
push
push
push
add
test
popa
daa
sbb
sub
adc
jecxz
sbb
cmp
or
fcmovne
fnsave
cld
imul
pop
sub
jmp
cmp
ret
cltd
push
jo
insb
fldcw
sbb
test
pop
bound
or
add
add
mov
sbb
arpl
pop
arpl
dec
cmp
jo
and
mov
and
add
add
push
imul
dec
mov
xor
scas
aaa
aam
adc
aaa
jno
adc
out
mov
imul
out
mov
out
fistl
insl
xchg
pop
loope
bound
sub
std
mov
stc
inc
loope
dec
or
aaa
in
xor
sub
rcrl
mov
mov
ja
add
into
jne
jmp
sub
mov
sbb
popa
adc
sub
mov
fidivl
inc
enter
mov
or
clc
cmp
aas
adc
out
sub
in
aaa
loopne
call
into
ds
add
enter
nop
sbbb
movsl
sbb
test
adc
addl
mov
mov
push
rcrb
mov
and
daa
sub
adc
jne
insl
pop
adc
mov
sti
pusha
mov
adc
or
jbe
lds
push
mov
pop
or
push
pusha
dec
sub
jnp
sti
fstps
and
daa
pop
jg
pusha
xlat
fsubrp
or
in
mov
and
enter
and
dec
or
push
adc
les
jle
cwtl
or
sub
fisubl
push
mov
fnstenv
leave
insb
xchg
xor
outsl
xchg
cmp
loop
add
dec
aas
or
clc
ds
xchg
mov
fsubr
dec
and
dec
mov
jne
roll
testb
pop
dec
scas
pop
sub
in
sub
dec
lods
les
inc
xor
ret
jg
jge
cmp
imul
and
shlb
or
clc
in
test
in
jl
jl
add
jns
popa
jo
int3
nop
inc
fcmovu
into
inc
imul
mov
inc
mov
jno
sbb
sti
aad
nop
xchg
mov
enter
or
scas
push
daa
xlat
jnp
xchg
adc
lods
js
cltd
es
sti
push
popa
mov
add
push
popf
lods
out
mov
aaa
add
sti
pop
loopne
or
xchg
inc
out
ret
ficoms
scas
mov
fwait
popf
fildl
fbstp
movl
fists
jbe
sub
jb,pn
and
pop
pop
out
sbb
aaa
mov
mov
dec
movsl
je
data16
aad
push
movsb
mov
pop
stc
popf
cmp
iret
clc
ficomps
outsb
and
inc
hlt
fsubs
incb
in
nop
add
clc
imul
ret
das
dec
bound
jge
je
xchg
dec
fdiv
sub
sub
test
sub
xor
and
xchg
mov
idivl
lock
repz
inc
bnd
pop
insb
mov
hlt
cmp
aaa
or
lock
sub
xor
xchg
push
cmp
rorb
and
push
or
inc
int
inc
stos
fstps
mov
stc
rcrl
mov
jnp
dec
pop
lock
mov
jno
test
adc
faddl
mov
mov
stos
xchg
or
stos
mov
lret
rclb
loope
lds
rcrb
jns
lret
loopne
and
ja
std
ljmp
popf
jl
incb
jns
jmp
push
gs
fcomi
inc
data16
mov
mov
fdivs
jmp
inc
mov
es
dec
mov
dec
out
loope
lds
mov
inc
jmp
js
or
add
push
xchg
mov
mov
ds
mov
ljmp
arpl
mov
jno
mov
dec
shrb
dec
in
inc
xor
sbb
cmpsb
dec
push
adc
or
mov
push
sarb
jbe
inc
rorl
mov
and
stos
sbb
sub
jnp
or
jg
shrb
clc
fcompl
notb
dec
jg
imul
aam
push
cld
jmp
into
dec
cmp
out
cmp
and
mov
in
xor
fsubl
mov
int3
ja
ret
mov
cmp
or
fwait
pop
aam
adc
int3
pop
jle
xor
push
ret
sbb
push
xchg
repz
lds
dec
js
pop
add
cwtl
rorl
and
ljmp
xor
mov
jg
es
mov
inc
es
addr16
test
adc
test
xchg
je
pop
and
cmp
push
loope
xchg
ss
and
int3
dec
jbe
pop
push
push
adcb
mov
call
mov
mov
pop
loope
inc
cltd
mov
lock
test
dec
dec
push
add
scas
push
cli
mov
mov
sub
inc
jb
hlt
dec
cld
fs
adc
push
inc
or
push
test
das
pushf
inc
inc
mov
loope
xor
in
mov
mov
sarl
mov
mov
ss
cli
insl
cwtl
jl
cmp
cs
xchg
test
inc
sub
sbb
cmc
test
imul
cmp
ja
dec
testb
xchg
sub
push
inc
repz
and
xor
jecxz
pop
push
sbb
pop
loope
mov
mov
push
movsl
imul
aad
fyl2xp1
inc
cmc
ds
lods
push
js
pop
nop
sahf
push
push
mov
adc
push
stos
les
pop
xacquire
dec
push
push
jl
aam
dec
cmp
xchg
ret
dec
xor
inc
out
cmpsl
aaa
in
dec
lahf
loopne
shrb
mov
and
and
in
std
outsl
mov
pushl
cltd
mov
insl
cmp
push
roll
outsl
cmp
jne
movsl
lea
push
adc
popa
out
add
mov
imulb
roll
jp
push
js
sub
sub
jb
xor
lahf
rcr
xor
sub
lahf
add
inc
jbe
mov
push
cmp
mov
call
jl
jae
adc
sarb
pop
cmp
inc
pushf
nop
pop
lods
cmp
daa
jle
ret
jae
mov
push
adc
fisubrs
pusha
or
push
pop
lock
mov
and
push
mov
mov
push
add
stc
adc
dec
add
jmp
add
decb
ud2
cmpsb
aas
xorb
or
lea
mov
ret
clc
stos
out
popa
cli
icebp
mov
add
push
mov
and
or
out
mov
rcll
sbb
mov
push
cli
fwait
lods
xor
enter
lret
push
cmp
mov
xchg
pusha
inc
mov
ret
sbb
adc
adc
jle
jmp
adc
rcr
mov
dec
or
jae
std
dec
xchg
add
stos
push
mov
jge
pop
fcmovnb
dec
and
adcb
pop
sahf
inc
out
sbb
or
into
cmp
fists
out
or
add
ret
xor
in
movb
rorb
lahf
dec
pop
rorb
int
mov
add
xchg
sub
push
mov
outsl
stos
out
lcall
xchg
mov
mov
cmp
std
or
imul
lcall
je
es
sbb
xor
push
ffree
and
push
and
mov
imul
outsl
in
shll
lret
cli
or
push
push
filds
cmp
and
into
out
sti
jns
adcl
xor
lods
test
dec
ret
xor
mov
sub
adcb
mov
mov
sbb
mov
cmpl
lret
popa
pusha
xor
dec
xchg
pop
jecxz
and
in
sub
insl
xchg
iret
adc
movsl
sarl
aam
cmp
mov
sbb
pushf
pop
rcrb
mov
jecxz
sbb
cli
mov
lahf
and
mov
cmp
xchg
mov
xchg
xchg
sbb
xchg
inc
je
aaa
cmc
stc
mov
or
push
adc
shlb
push
dec
daa
rolb
adc
lcall
mov
aad
xor
icebp
cmp
sbb
cmpsl
ret
test
imul
popf
xchg
sarl
lea
pop
xor
outsl
mov
inc
pop
push
int3
das
xchg
jb
pop
es
or
pop
es
add
jg
int
push
ds
jbe
loopne
dec
mov
xchg
mov
mov
push
scas
out
mov
xor
and
xor
retw
or
out
loop
jg
mov
int
adc
push
jns
cmp
and
pop
int
js
lock
ljmp
negl
subl
jnp
inc
push
mov
sbb
jmp
sbb
lods
dec
xchg
mov
aas
repnz
addr16
fmuls
hlt
stos
cmc
mov
movsl
imul
andb
scas
sub
push
adc
and
cmp
notb
out
cmp
outsb
jns
dec
loope
mov
cmp
xor
scas
xlat
cltd
fcmovnu
addr16
ljmp
imul
lcall
insl
movsl
subb
fld
add
ss
dec
fwait
xchg
mov
lock
pushf
lahf
rcrl
inc
imul
js
leave
ss
xor
test
out
adc
cmpsb
mov
mov
cmp
je
cmp
out
stos
inc
iret
out
xchg
xchg
sti
sbb
jmp
push
cmp
dec
push
add
fisubrs
dec
push
xchg
jb
cmpsl
imul
and
fcoms
push
fidivrl
sti
mov
sbb
lods
xor
aam
insl
and
jnp
xchg
sbb
stc
adc
push
pop
jle
loopne
sub
xchg
in
cmp
and
sbb
pusha
js
add
xor
xor
pusha
ret
data16
lret
jmp
mov
lock
jnp
scas
mov
shl
xor
inc
sub
mov
jl
mov
outsb
iret
xchg
push
xchg
jae
in
mov
in
lock
jnp
andl
fwait
xchg
ss
push
bound
fwait
sub
xor
sbb
fisubl
xchg
or
flds
inc
sub
push
or
dec
in
jge
out
and
int3
push
aam
mov
popa
lock
fs
push
loop
fildll
lds
sbbb
xor
mov
xchg
ret
jae
mov
push
fucomip
ret
xchg
xchg
inc
inc
fs
nop
mov
xchg
inc
inc
int3
rcr
je
add
pop
adc
rcrb
dec
fcmovu
loop
jno
icebp
mov
and
cs
or
sti
jnp
loope
aam
in
out
test
jae
dec
out
sub
lahf
rorb
iret
jecxz
cmc
jmp
fst
ljmp
incl
inc
or
dec
out
pop
les
or
jp
aaa
jmp
jne
push
aaa
shr
arpl
adc
outsl
hlt
xchg
lret
sti
dec
imul
jmp
ds
movl
int3
cld
xchg
sub
enter
popa
push
aaa
pop
adc
jae
lahf
sub
push
jmp
jbe
scas
loopne
bound
je
push
or
push
xor
cmc
stos
xchg
arpl
daa
and
mov
cmc
shrb
sar
add
mov
push
pop
int
mov
test
cltd
jbe
add
movsl
mov
mov
sbb
and
mov
jp
cmp
in
fdiv
jnp
shl
pop
inc
jge
icebp
push
mov
cmpsl
pop
sbb
cmc
pop
pop
mov
int3
add
xchg
movsb
lret
je
adc
jl
xchg
adc
gs
add
icebp
pop
int3
or
outsb
cmp
or
stos
and
stos
mov
cmp
cwtl
jecxz
add
ss
lea
add
in
pop
scas
push
mov
mov
ds
pusha
adc
ret
stc
rcrb
jnp
xchg
std
testb
nop
lcall
and
mov
adc
mov
mov
lcall
lret
fadds
rcrl
ret
and
call
push
movsb
ret
push
daa
xchg
divb
mov
push
inc
or
adc
jo
jae
sub
rorl
rcll
inc
es
fsubl
fnstcw
stc
ret
lahf
pop
cmp
pop
xor
mov
and
in
iret
ljmp
int
pop
mov
xchg
cmc
push
inc
dec
lds
test
xchg
gs
and
in
lock
sub
int
ss
jg
push
in
imul
daa
xchg
xchg
add
pop
pmaxsw
xchg
lcall
fstp
lcall
dec
sub
push
out
mov
std
mov
pushf
push
sub
sahf
stc
out
add
cmc
pop
cli
insl
or
hlt
outsl
jae
pop
jae
xchg
xorb
or
aam
xchg
leave
shlb
mov
pusha
adc
xor
xchg
sub
pop
or
lock
add
dec
or
imul
xchg
mov
mov
repz
sbb
test
ljmp
sbb
xchg
mov
dec
test
adc
or
sub
gs
jp
dec
frstor
jg
dec
lds
std
aam
xchg
int3
add
nop
mov
mov
ja
mov
out
mov
lcall
stos
ljmp
mov
push
cmp
fadd
dec
add
ja
mov
mov
shlb
jno
sbb
lea
into
insb
cmpsl
shlb
push
repnz
fiaddl
outsl
enter
lock
jl
jge
pop
lahf
pop
cli
inc
ja
loope
cmp
cmp
fistpl
pop
and
adc
gs
push
pop
lret
and
int
sti
inc
jnp
popf
std
inc
enter
fstps
lahf
cmpsb
push
in
les
outsl
rcrb
or
pop
sub
adc
or
aaa
or
inc
jmp
add
addr16
mov
lods
sub
shrb
mov
mov
scas
sub
stc
stc
add
jecxz
repz
xchg
fsubs
xchg
loop
ficoml
pop
add
push
test
push
xor
imul
cmp
fcomps
xor
stos
outsl
xchg
push
shll
test
lcall
sbb
inc
fsubr
adc
mov
sub
jge
sub
or
inc
cmpsb
jmp
cld
dec
lock
sub
pop
test
jbe
jg
lret
add
out
inc
inc
pop
jae
test
rol
rcll
imul
inc
cmpsl
cmp
test
insb
rorl
aas
lds
mov
adc
sub
in
stos
ficompl
xor
popf
xchg
xchg
repz
loope
aaa
das
adc
xor
rcl
enter
mov
cmp
add
cmpb
sarb
lcall
cmp
fstpt
repz
test
outsl
push
jns
mov
lcall
clc
lock
call
cltd
out
xor
lds
push
divl
addl
stc
jmp
iret
repz
pop
test
jo
add
mov
rcll
or
fnsave
pop
lea
int
mov
mov
inc
arpl
loopne
lcall
cmp
shll
push
aas
adc
mov
lods
lret
jecxz
and
inc
jecxz
mov
mov
pushf
cmpsl
nop
out
sub
mov
scas
cltd
or
push
push
fistpll
adc
lods
cmp
cmp
or
cmp
xchg
xchg
adc
lds
or
xchg
jbe
mov
xchg
dec
lds
jle
mov
dec
pop
push
mov
jl
mov
add
jne
sbb
xchg
call
mov
mov
add
bsf
stos
sahf
fdivs
cmp
inc
dec
nop
je
sbb
xchg
aam
sbb
add
and
rcr
pushf
sbb
adc
loop
scas
jecxz
inc
jno
aaa
sbb
push
std
int
call
or
call
push
adc
lahf
nop
iret
inc
mov
popf
xchg
cmp
int
mov
push
ja
and
lds
mov
ljmp
adc
or
xchg
movsl
aaa
dec
jp
mov
sbb
scas
gs
scas
dec
mov
xchg
mov
lock
xor
pop
out
dec
out
stos
jne
es
jg
jno
imull
xchg
in
jecxz
inc
mov
dec
mov
and
cmovns
pop
push
jl
hlt
inc
pop
xlat
cmpsb
dec
xchg
mov
enter
xchg
out
std
mov
leave
cmp
enter
mov
mov
or
sbbb
js
in
aam
icebp
aaa
fisttpll
pop
push
xchg
test
imul
mov
test
sbb
jp
xor
and
inc
movsb
or
idivl
pop
mov
xchg
push
or
and
add
aas
mov
addr16
jl
jge
add
lds
popa
out
jae
ror
and
andb
loopne
push
mov
sub
das
mov
adc
mov
pop
repnz
push
fldt
adc
fimull
fadds
pop
and
addr16
outsb
loopne
jecxz
in
push
sub
jae
imul
cmp
mov
in
dec
and
bound
mov
repnz
orb
and
xor
dec
lods
movsl
lock
cmpsb
xor
jnp
inc
test
imul
add
notb
inc
mov
xchg
xlat
sbb
sahf
imulb
mov
popa
sbb
pop
sbb
adc
and
inc
std
fs
fists
aam
aaa
mov
ds
not
pop
mov
fimull
andb
adc
test
jae
mov
xchg
adc
and
inc
adc
js
out
xlat
fwait
pop
push
add
sub
jo,pt
inc
xchg
and
mov
xchg
cmpsl
pop
insl
adc
mov
test
push
test
inc
imul
mov
dec
popa
mov
inc
mov
and
jl
or
data16
cmpb
mov
xchg
in
inc
add
push
repz
push
cmpsl
add
int3
call
add
hlt
jbe
outsb
xor
mov
xor
pop
sahf
popa
mov
xchg
adc
mov
repnz
out
aaa
in
sbb
push
lret
push
cmpsb
lock
or
lock
lahf
cwtl
pop
inc
jb
push
hlt
mov
xchg
sub
aam
xchg
pop
lret
push
test
pop
xchg
test
or
scas
fistpl
pop
jp
int
sbb
lods
test
mov
movd
jns
mov
mov
xor
dec
jns
xor
adc
mov
sbb
mov
aaa
aaa
fldl2e
sub
sarb
cs
mov
mov
arpl
shll
and
nop
xchg
pop
mov
xchg
jle
cmpsl
cmp
inc
ljmp
and
inc
gs
ljmp
mov
push
and
pop
jns
cmp
sub
dec
mov
les
cmp
shl
jb
dec
call
fs
in
outsl
adc
xor
std
pop
loope
add
es
dec
test
lcall
jne
iret
mov
sarb
jg
adc
push
addr16
jp
fisubrs
push
pop
cmp
and
xchg
nop
add
stos
xor
out
testb
jbe
mov
inc
pop
or
dec
mov
mov
jge
push
xor
dec
lret
mov
in
mov
xchg
mov
out
xchg
cld
fidivrs
shll
inc
aaa
jmp
xor
jp
sub
xchg
addr16
in
leave
testl
cltd
bound
fisubrl
popf
loope
andb
adcb
subl
fistps
in
aad
cmp
jno
and
push
clc
pavgw
scas
mov
jbe
push
shlb
pop
jp
inc
inc
mov
push
dec
xchg
xchg
or
icebp
add
and
ja
dec
sarl
jge
mov
push
add
push
sub
aaa
xlat
mov
cmp
sbb
or
pop
lret
int3
push
cmpsb
xor
and
repnz
sbb
fsts
dec
cmpsb
js
xor
adc
sbb
sbbl
xchg
or
inc
es
mov
aad
push
ret
enter
imul
or
ja
mov
sub
shlb
or
dec
cmp
jle
and
in
inc
notb
insl
xchg
and
inc
push
lds
ja
nop
popa
jl
and
pop
mov
in
loope
dec
test
bound
arpl
mov
movsl
sub
jnp
jecxz
xor
dec
negl
pop
xchg
pop
test
mov
sti
add
ret
lret
or
or
faddl
pop
arpl
in
rclb
enter
and
dec
xor
jne
lret
clc
das
or
int
stos
pusha
xor
or
xor
adc
imul
push
mov
mov
ret
popa
xchg
fcoml
cmp
inc
dec
adc
mov
inc
mov
call
push
mov
movb
mov
jp
hlt
icebp
aas
mov
fcomps
pushf
movsb
inc
cmc
mov
pop
cmc
out
into
jo
cmp
stc
jecxz
xchg
bound
gs
push
dec
jne
jnp
mov
out
in
inc
pop
push
int
or
mov
dec
sbb
pop
cwtl
push
xor
lcall
pop
enter
jnp
lcall
ret
cli
inc
in
stos
and
pop
push
out
jmp
gs
cmc
xchg
in
mov
sete
subl
xor
jmp
or
dec
test
movsl
cmpsb
add
les
fisubs
push
fdivr
dec
add
popf
jl
sbb
mov
ror
test
hlt
fdivrl
inc
cli
mov
pop
sub
outsl
inc
mov
scas
dec
pusha
jmp
mov
enter
mov
fisubs
mov
ljmp
mov
repz
cmp
nop
add
sarl
pop
or
jg
mov
and
add
sbb
cwtl
pop
jnp
push
dec
jge
daa
fdivrs
sbb
mov
cld
cmp
mov
and
and
out
add
adc
sbb
test
js
mov
add
jg
sub
ret
push
pop
es
push
notl
jbe
cmpsl
pslld
shl
mov
dec
push
pop
jle
adc
pushf
adc
movsl
iret
loope
mov
jns
jecxz
adc
lods
dec
in
inc
jns
ss
mov
adc
ret
xchg
push
jno
fsubl
or
xor
out
add
jae
movsl
pop
test
xchg
push
add
pop
clc
sub
cmp
aad
aad
mov
sbbb
add
in
dec
push
imul
add
popa
sbb
sbb
mov
mov
and
jmp
stc
icebp
cmpsl
jmp
sbb
xlat
jb
test
test
jg
mov
push
xchg
xchg
out
and
push
xchg
jp
loop
pop
aad
mov
bnd
sbb
je
lcall
in
jp
stos
cmp
mov
ret
or
jne
movsb
xchg
insl
lods
jge
inc
cmpsb
inc
rclb
push
aas
sbb
scas
lea
xchg
jmp
mov
loop
inc
xchg
pop
fnsave
jge
jb
and
pop
and
sbb
and
aad
in
test
sbb
dec
push
dec
xor
jle
adcl
jno,pn
cmp
or
test
int
iret
hlt
cmp
and
into
js
xor
mov
lds
jnp
or
mov
addr16
dec
out
hlt
int3
movsl
int
loopne
sbb
and
test
mov
push
loopne
mov
test
adc
lods
jl
or
sbb
sbb
jl
cmp
jle
ljmp
je
stc
adc
jbe
cmp
fists
fisubl
pop
jmp
movsb
jp
jge
ret
test
cmp
xor
out
in
int3
hlt
je,pt
pop
cmpsl
gs
aam
repz
mov
xchg
inc
add
jmp
inc
divb
or
or
stos
mov
push
clc
stos
loope
mov
arpl
call
stos
jg
xor
testb
push
cmp
or
jg
pop
pop
jno
incl
ret
push
pop
push
or
jo
outsl
aaa
sbb
arpl
inc
jg
pop
or
sub
call
cmpsb
fs
inc
ficoml
mov
into
or
cmp
sbb
xchg
cmc
data16
fdiv
ja
movsl
ret
cmp
jle
cmp
rorb
and
cmp
ss
rcr
inc
or
rcrb
mov
mov
push
pop
sti
mov
cmpl
enter
xor
jl
adc
xor
add
mov
fstp
add
andl
mov
xchg
shrb
cmp
inc
xchg
into
sbb
repnz
mov
cmp
mov
test
or
fidivrs
adc
inc
or
lds
lahf
sbbb
sbb
scas
xchg
movsb
jp
adc
push
cmp
ss
push
jge
loopne
stos
xlat
mov
jnp
push
fsubrs
fdiv
dec
out
in
lea
cmc
inc
mov
cmp
sbb
pop
mov
inc
das
cmp
add
shr
add
mov
mov
cmp
jmp
popf
mov
out
pop
adc
xchg
nop
scas
mov
cmp
sahf
pusha
fiadds
push
jno
xor
fwait
cmp
jae
push
repz
out
inc
ljmp
inc
adc
sub
push
cwtl
faddl
ret
hlt
jae
dec
add
fdivl
repnz
pop
sub
mov
pop
lcall
insb
daa
jle
dec
sbb
lock
and
les
inc
pop
fcomp
loop
test
imul
aas
imul
jne
pop
sub
std
adc
adc
ret
incb
cltd
xor
in
mov
aaa
jp
imul
stos
sub
scas
push
adc
repnz
aaa
fdivl
sub
mov
hlt
adc
mov
or
add
ljmp
pop
mov
mov
daa
arpl
sub
pusha
stos
xlat
insl
sbb
xor
ljmp
push
inc
in
lock
sbb
sbb
dec
lcall
roll
jle
scas
dec
lahf
daa
sbb
fwait
pushf
adc
xchg
popf
adc
es
jecxz
pop
mov
fsubr
dec
sub
lret
aam
mov
sbb
sbbb
mov
ret
or
sbb
outsb
xor
push
jge
inc
bound
mov
sub
adc
xchg
add
aas
in
and
stc
or
fld
push
lock
cli
add
lret
insl
imul
sub
xchg
fs
ds
pop
push
jno
dec
mov
nopl
sahf
aas
repnz
mov
inc
mov
sub
sub
sbbb
inc
imul
fisubl
sub
rorb
in
ja
add
sbb
inc
ss
sub
mov
dec
dec
ja
cmp
mov
shrb
inc
loop
shlb
mov
shrl
pop
push
repz
repz
xor
in
ja
out
cs
enter
outsl
rclb
repnz
test
fiadds
sbb
xchg
leave
imul
jle
int3
fcompl
pop
xor
push
adc
lock
lahf
jmp
cltd
insl
lahf
pop
hlt
xorb
push
sbb
sub
mov
mov
add
xchg
ficompl
stc
or
nop
dec
cmc
jmp
or
or
mov
dec
pushf
pushf
mov
lock
inc
adc
lcall
add
sbb
test
mov
xor
xchg
cld
xchg
jo
jmp
sub
ffree
dec
add
adc
movb
test
out
ss
stc
js
cmp
incl
xchg
add
mov
or
dec
ret
lcall
mov
mov
sub
enter
mov
cli
adc
jp
out
scas
es
push
pop
scas
mov
ret
adc
pusha
insb
int3
rcrb
enter
sarl
data16
xchg
dec
xchg
mov
push
jnp
cmpsb
jmp
pop
es
push
out
push
cld
adc
jo
push
or
leave
xor
shl
sbb
push
bound
jmp
jno
push
mov
sarb
mov
movsb
imul
dec
cs
out
lods
nop
mov
mov
lods
je
jmp
sub
andnps
jmp
push
addb
cmc
je
shll
cmpsl
movb
and
inc
fldt
add
cmpb
bound
roll
cmp
dec
ret
daa
xlat
ret
adc
mov
mov
pop
or
and
mov
imul
or
test
in
inc
test
inc
test
pop
cltd
pushf
pusha
out
insb
fwait
sbb
add
cwtl
pop
and
ret
mov
js
dec
mov
scas
fldt
bnd
movsl
mov
js
ds
sbb
push
xchg
dec
sbbb
sbb
dec
inc
scas
imul
jbe
jno
frstor
or
adc
jne
test
add
mov
adc
and
sbb
add
pop
shll
pop
or
sbb
sbb
cwtl
cmp
jg
lods
push
bound
lahf
daa
mov
mov
lds
fbld
cltd
push
test
jecxz
add
fstl
inc
push
bound
xor
push
xchg
mov
lods
rcll
pop
xor
decb
add
cmc
lds
insl
sub
and
aas
sub
inc
sti
repnz
jo
out
fdivrs
sub
mov
push
enter
jge
sub
xchg
ds
pop
data16
rcrb
mov
push
into
dec
xchg
sub
cwtl
decl
mov
and
test
cmp
mov
jmp
jecxz
xlat
inc
push
mov
push
mov
and
jae
mov
pop
fstpt
lea
mov
cmp
pop
pop
adc
dec
push
outsl
clc
cmpsl
adcl
jl
sbb
mov
std
fwait
xchg
xchg
inc
lcall
shll
pop
push
xchg
ror
xor
rclb
sti
xchg
xchg
icebp
outsb
mov
ja
and
and
add
mov
daa
popa
lret
movsl
dec
in
sbb
dec
xor
rorb
sbb
cmpsl
sbb
inc
and
shlb
push
adc
sbb
and
inc
push
jb
jp
or
pop
lods
mov
dec
push
movsb
add
mov
popf
sub
push
mov
and
lret
push
or
cmpsl
daa
in
adc
out
add
cmp
mov
or
pop
out
jg
repz
daa
pop
push
cmp
inc
repz
sub
cmc
sbb
in
sbb
imul
cmpsl
test
push
push
daa
dec
jnp
insl
add
shl
nop
push
lea
xor
in
pop
xchg
mov
inc
lret
fnsave
or
push
jmp
loope
xchg
out
clc
out
cli
sbb
sub
jne
sbb
xlat
and
cmp
and
hlt
lret
inc
std
mov
xchg
cmc
lret
and
jno
popf
push
pop
dec
xor
inc
lcall
repz
cmc
xchg
pusha
nop
mov
pop
mov
nop
ror
rcrl
ljmp
pusha
xlat
push
fwait
pop
icebp
jae
xchg
or
jle
or
leave
les
ljmp
aas
stos
pushf
sub
pop
shll
push
arpl
call
inc
add
leave
sbb
inc
mov
or
adc
cmp
rol
fisubrs
pop
inc
push
push
outsl
jb
repz
nop
jecxz
inc
xor
arpl
jge
add
sti
mov
adc
xor
xchg
mov
push
popa
shl
push
mov
ljmp
in
or
scas
int
jecxz
sar
div
xchg
dec
mov
lods
bound
sbb
mov
nop
and
lcall
mov
scas
ds
std
popa
pushf
sbb
aas
cmp
cmpsb
inc
das
sub
int3
push
xor
or
xchg
jns
xchg
out
xorb
pop
pop
rolb
scas
shr
iret
dec
movsl
stc
mov
movsl
xchg
add
dec
shl
add
sbbb
enter
jne
push
imul
test
rcr
addl
push
ret
lret
jne
lret
sbb
in
or
pushf
and
mov
cmp
ja
dec
stc
test
mov
add
gs
mov
mov
dec
jl
and
mov
int
mov
fucomp
mov
cmp
in
leave
test
xor
fimuls
stos
mov
pop
popf
sbb
mov
shlb
sarb
cmp
or
test
leave
dec
repnz
repnz
mov
mov
push
fadd
addl
repz
jnp,pn
rol
lods
iret
out
push
adc
push
rcll
jno
fisubs
mov
or
into
and
xchg
push
daa
jp
jle
jl
or
adcl
jmp
divl
nop
dec
pushf
xchg
stc
fsubs
insl
imul
jmp
pop
arpl
in
xor
cmp
cwtl
mov
fstps
lds
jo
in
aad
adc
push
push
xchg
stos
jb
scas
inc
dec
loopne
sbb
sbb
push
push
decb
cmp
xchg
push
lods
out
and
pushf
mov
sub
fwait
xor
inc
sub
sbb
cmc
jmp
lds
pop
push
fnstenv
lock
bound
shlb
cmp
cld
movsb
jno
in
ljmp
xor
mov
sbb
dec
hlt
push
scas
xor
pop
inc
cmp
pop
xor
jge
dec
enter
shlb
adc
in
pop
ret
js
adc
int3
int3
inc
sub
pop
in
aaa
xchg
scas
push
xchg
xchg
and
jnp
cmp
cwtl
adc
sub
movsl
in
fdivp
dec
inc
sub
popa
shrb
pop
add
fdivl
xor
mov
mov
mov
inc
jns
inc
or
push
test
repnz
fwait
mov
and
das
icebp
stos
xchg
jl
std
xor
shlb
xchg
cli
nop
cmpsl
push
mov
or
xchg
mov
mov
mov
leave
or
repz
and
test
pop
jns
jmp
mov
negl
add
or
sub
cmp
lods
mov
inc
ret
mov
clc
dec
and
jns
jo
jg
sub
andl
push
sub
roll
cmp
fsubrp
addr16
dec
jb
xor
or
notb
lret
aam
js
cmp
cmp
pusha
popa
cmp
imulb
mov
pop
pushf
sti
fsubrs
int3
jns
verr
pop
ficoml
jge
adc
mov
pop
xchg
loope
or
leave
test
lcall
out
insb
and
stc
add
push
mov
jmp
xor
fsts
iret
jle
adc
jg
fwait
shlb
cwtl
inc
nop
in
push
test
sub
test
loope
inc
jbe
xlat
add
bound
inc
stos
arpl
filds
out
mov
add
jecxz
jnp
fs
xchg
jns
inc
lods
out
fstpl
and
sbb
push
leave
out
out
pop
in
out
xor
orb
mov
mov
les
push
mov
push
push
push
lea
push
mov
sub
xchg
sub
push
inc
sub
clc
cmp
fbld
jecxz
mov
and
mov
jle
sti
test
in
sbb
test
addr16
push
add
cwtl
dec
unpcklps
add
dec
insb
aam
cmpsl
pop
or
cld
test
mov
push
hlt
sub
scas
cs
in
out
push
xchg
stos
jp
jmp
jmp
insl
xor
test
add
inc
lea
pop
fs
mov
push
xchg
add
adc
cmp
scas
in
cs
outsl
mov
jecxz
push
shlb
sub
stos
aad
lret
adc
rorb
and
inc
push
mov
jae
cs
pop
xorb
cli
push
inc
xchg
gs
mov
and
insl
jmp
push
jb
xor
loopne
test
ficoml
or
aad
mov
cmp
sbb
mov
mov
xor
pop
inc
push
sub
xchg
or
inc
mov
rorl
pusha
daa
inc
xor
in
cmpsl
fxch
xor
dec
or
hlt
cmc
jb
pop
test
sub
lods
mov
push
test
push
aas
mov
jbe
lret
int
adc
lcall
inc
pop
jae
stos
dec
lods
mov
mov
mov
adc
mov
mov
sbb
std
bound
fistps
add
icebp
cli
or
xchg
push
ficoms
or
add
sub
xor
mov
insb
jnp
rclb
mov
add
dec
sbb
lea
cmpsb
inc
adc
add
addr16
addb
adcb
out
mov
loope
pop
push
rcrb
cmpsl
repz
pop
xchg
lret
and
mov
pop
lss
ljmp
repnz
inc
lret
push
xchg
mov
jns
out
insl
stos
jb
movsl
cmp
add
cmpsb
pusha
push
inc
mov
mov
cwtl
aaa
stos
int3
fisttpl
inc
push
js
push
push
jno
jbe
or
aam
mov
xchg
aaa
jnp
movntps
mov
pushf
xor
lds
mov
rorb
std
loop
add
add
xor
loopne
lods
scas
mov
stc
sbbb
jns
mov
adc
or
rcrl
inc
push
pop
jle
scas
cltd
hlt
sub
lret
or
cwtl
cmp
adc
rcr
xchg
imul
dec
jb
pop
loopne
cld
pop
cmp
add
and
lret
jge
push
fldenv
mov
jecxz
mov
jle
pop
lds
test
aam
repnz
jo
and
lret
and
rcrl
cmp
rcl
data16
lret
push
int
cs
jmp
imulb
or
in
out
dec
ret
mov
fnstenv
mov
out
stos
out
bound
sub
fwait
add
mov
pop
dec
or
lds
xlat
lret
jno
and
push
pop
xlat
icebp
or
int3
pop
stc
rorb
aas
incb
ja
lods
test
inc
jge
xchg
test
ja
push
fstpl
mov
pop
cli
lahf
jo
test
stc
sbb
and
jb
mov
fmuls
push
pop
arpl
xchg
je
mov
ficomps
or
repz
sub
dec
push
add
jo
or
mov
into
mov
mov
xchg
and
or
lret
mov
pop
aaa
dec
je
jmp
imul
fsts
lock
add
out
mov
adc
cmp
or
out
cs
stc
xchg
out
iret
popf
adc
mov
call
rcll
cmp
popf
mov
nop
into
mov
add
jecxz
stos
cmc
jno
push
push
ja
push
push
push
repz
mov
or
lret
lds
loopne
lcall
xchg
jg
pop
push
repz
mov
dec
cmp
ds
loopne
dec
in
ss
nop
jbe
adc
loop
xchg
add
fdiv
call
jmp
lea
add
sbb
and
jmp
lock
pusha
fdiv
push
bound
pop
jnp
jg
push
mov
mov
popa
addr16
mov
icebp
jmp
push
pop
cmp
lods
mov
pop
xor
enter
loope
sbbl
ret
mov
stc
fs
clc
inc
sub
mov
push
inc
mov
mov
les
pop
or
mov
shll
or
add
or
push
out
rclb
mov
jb
hlt
scas
add
arpl
inc
cmp
inc
or
div
aad
outsb
cmp
xor
dec
add
ret
lods
int
xor
mov
fs
sub
mov
addr16
ja
scas
jg
pop
push
test
pusha
lret
in
cmpb
lods
test
pop
pop
aaa
in
pop
ds
sbb
test
cmc
leave
pop
scas
orl
sub
pop
test
sarl
jg
xor
cmpsl
mov
ficoml
xchg
adc
pop
push
fwait
push
std
scas
xchg
stc
sbb
xchg
and
loopne
mov
pusha
sub
push
pop
or
pop
scas
and
aam
shlb
cltd
mov
mov
and
loope
push
aad
adc
dec
xor
dec
xchg
out
mov
push
loop
xchg
in
in
movsb
rcrb
imul
xchg
mov
sub
insb
add
jge
aam
xchg
dec
pop
push
pop
mov
iret
in
push
cmp
fwait
or
insb
data16
es
xlat
mov
imul
sti
std
xor
add
lcall
pop
push
mov
xorl
gs
mov
outsb
or
scas
shrb
xor
lods
sbb
in
mov
fsubr
outsb
scas
xor
arpl
das
pushf
mov
inc
pop
cmp
ret
inc
mov
pop
or
jp
cld
aaa
cmp
mov
inc
ret
nop
mov
xor
aam
pop
in
lret
aas
aad
push
adc
ror
sub
imul
dec
pop
in
mov
pusha
dec
xor
mov
pop
jmp
add
inc
push
movsl
xchg
mov
sub
jo
movsl
leave
adc
xlat
sbb
test
and
es
add
add
adc
sti
clc
mov
fs
arpl
js
adc
rcl
popa
fmuls
adc
lret
xor
jno
pusha
pop
mov
faddp
test
mov
push
and
repnz
jne
jbe
xor
out
ret
add
mov
test
fwait
and
xchg
jg
pop
hlt
add
add
lods
lcall
sbb
jnp
pop
push
xchg
mov
or
outsl
mov
push
mov
arpl
out
adc
les
mov
cmp
enter
ljmp
cmp
or
sbbb
fdivs
jbe
mov
test
xor
loop
dec
in
bound
and
sub
dec
mov
pop
mov
sub
dec
icebp
xor
pop
inc
sbb
gs
loop
mov
add
sbb
pusha
mov
jno
loope
inc
mov
jbe
test
mov
hlt
pop
dec
filds
push
inc
jl
fcomps
and
outsb
xchg
mov
pushf
xchg
lea
jbe
cld
dec
fstpt
movups
pop
mov
add
dec
cmp
push
push
jl
sub
out
bound
xor
fcoms
push
xchg
enter
sub
leave
mov
lea
push
xor
inc
pop
cwtl
lods
add
mov
call
out
push
fdivl
movsl
ljmpw
mov
bnd
dec
adc
repz
sub
add
and
dec
test
ret
out
or
fs
fiaddl
movsb
or
into
mov
dec
cmpb
fldenv
mov
push
pop
pushf
pop
nop
test
jno
dec
push
inc
or
mov
lcall
jp
cld
inc
jo
mov
push
xor
or
mov
ss
fcomi
push
xor
aad
cmpsl
jno
movsb
orb
mov
sbb
outsl
js
pop
insl
adc
cwtl
imul
push
inc
push
inc
and
push
cwtl
pop
pop
inc
pop
fistpl
das
fidivl
and
lahf
cltd
adc
xor
mov
cwtl
push
add
push
jns
push
and
test
pop
sub
rcrl
icebp
inc
inc
push
push
adc
mov
mov
cld
clc
lahf
inc
or
cmp
repnz
ud2
cmp
sarb
faddl
repnz
or
mov
leave
fsts
push
jo
dec
popa
leave
dec
out
in
jge
enter
add
lock
jne
adc
cltd
push
push
xchg
adc
sub
jg
inc
imul
outsl
xor
jl
xchg
mov
aas
inc
dec
fs
aaa
and
addl
lods
clc
adc
mov
dec
xor
mov
int
iret
adc
sbb
mov
cwtl
out
adc
les
push
inc
xchg
sbb
daa
jmp
jo
int3
cmp
add
stc
inc
xchg
inc
in
jb
add
and
inc
lcall
or
outsb
dec
or
andl
lds
mov
cmp
dec
mov
mov
mov
jno
sbb
or
sbb
je
or
pusha
jnp
and
movsl
out
mov
pop
enter
inc
and
addr16
shll
test
jno
pop
orl
jns,pn
sti
pop
cld
mov
xor
mov
out
inc
ret
or
mov
mov
aam
push
mov
jbe
and
push
insb
test
jecxz
mov
filds
mov
pop
mov
cmp
cmp
lret
insb
mov
cmpsb
add
or
loopne
jbe
test
mov
adc
sbb
out
cmpsl
ss
jle
mov
sub
adc
pop
popf
out
aam
addr16
mov
stc
es
punpcklwd
jbe
cmp
pop
stc
mov
out
int
xchg
jecxz
loop
mov
mov
cwtl
fldl2e
lods
cli
push
mov
push
xchg
fstpl
dec
movsb
jbe
jg
push
fbld
out
sub
mov
sbb
pop
js
push
mov
dec
enter
leave
imul
bound
shl
ret
aam
ljmp
pop
inc
jmp
fldl
xchg
mov
mov
in
fimull
xchg
sbb
fidivs
into
outsb
testb
test
insb
clc
push
hlt
cmp
mov
enter
fldl
jmp
inc
fidivrs
lahf
pop
inc
cmc
gs
xor
in
push
jg
jbe
jmp
aad
xchg
lcall
lret
in
ljmp
std
mov
ljmp
ret
cmc
sbb
ljmp
fcomi
push
clc
cmc
insl
pop
inc
clc
int
sub
pop
lret
sub
xor
fmuls
cmp
lahf
mov
stos
popa
xchg
mov
mov
inc
dec
jo
sub
xor
ror
enter
stc
test
mov
imul
pop
divl
xchg
dec
cmp
inc
fnstenv
into
sbb
fbld
repz
sub
sarl
or
push
push
ret
stos
sub
jp
repnz
aaa
mov
push
mov
iret
lods
add
lock
into
jno
adc
or
mov
lahf
test
inc
mov
cmpsb
mov
lock
inc
cs
mov
jbe
cmpsb
mov
pusha
push
pusha
cmc
test
mov
xlat
sbb
push
mov
int
pushf
jp
mov
jnp
mov
sbb
mov
cmpsl
adc
int
jbe
stc
xchg
stos
lods
loop
dec
sti
addr16
es
pusha
scas
test
sbb
idiv
inc
mov
jbe
push
clc
movsb
lock
test
mov
xchg
lods
subb
mov
xchg
sub
push
jmp
mov
mov
pop
cmp
sub
inc
lahf
inc
std
test
repz
mov
and
roll
dec
sub
inc
mov
cld
cld
add
out
xchg
xchg
fwait
mov
add
jnp
fidivrs
adc
es
mov
shlb
int
idivb
sub
dec
scas
popf
jle
mov
scas
adc
push
rol
mov
out
mov
adc
cmc
movsb
sahf
jbe
in
enter
cmp
cmp
sbb
lahf
dec
mov
jmp
sub
mov
insl
aaa
cmpb
repz
lds
mov
in
rorb
pop
insb
push
jge
xor
jmp
sbb
cltd
lock
cmpb
rcrl
sub
mov
lock
pusha
dec
pop
jp
xor
jb
add
fcmovnbe
sub
rorb
std
in
mov
scas
out
xlat
in
push
int
sub
stc
lea
fdivl
aaa
or
pop
je
jno
sub
mov
mov
cld
popa
and
in
push
popa
out
je
int
in
xor
xchg
int3
lret
mov
and
jmp
sub
pop
cld
ja
out
into
daa
pop
sbb
mov
mov
aas
pop
cltd
not
hlt
das
cltd
idivl
jne
inc
repz
into
dec
inc
adc
js
test
clc
and
jne
nop
inc
sbb
fnstsw
icebp
outsl
insl
cmpsl
rorb
push
pop
aad
outsb
loope
xchg
inc
and
mov
fbld
mov
movb
ja
aaa
mov
pop
and
cmpl
mov
addb
cli
fwait
xchg
rol
mov
inc
and
ficoml
xchg
out
or
stos
mov
in
leave
decl
daa
ja
push
mov
mov
or
jg
vcmpss
in
xchg
in
lods
cmpsl
and
mov
jge
imul
decl
sub
mov
enter
rcl
mov
sub
loope
push
sarb
xchg
scas
sub
inc
jp
dec
xchg
inc
sub
add
push
or
xor
leave
jecxz
inc
jge
xor
xorl
fs
push
je
push
das
xor
sbb
sahf
xlat
loopne
lret
mov
mov
jne
cld
subl
leave
pushf
xor
lcall
mov
add
rclb
mov
sti
xor
and
lds
icebp
nop
pop
push
es
add
jns
ret
jae
int3
mov
in
xor
mov
push
stos
inc
sbb
aam
push
jl
push
cmp
es
imul
inc
gs
inc
xchg
mov
pushf
stos
lock
shrl
insb
xchg
enter
adc
adcb
imul
inc
mov
movsl
pop
dec
inc
push
fdivr
dec
and
cli
mov
push
fcomi
mov
push
and
mov
inc
repnz
iret
xchg
shll
push
lods
jp
cmp
jmp
jg
fbld
cwtl
scas
int
mov
out
pusha
or
fisttps
or
pop
pushf
leave
push
xchg
shl
aaa
imulb
test
inc
dec
xchg
in
inc
and
mov
add
xchg
incb
jle
popf
imul
std
dec
stos
xchg
push
mov
dec
jl
jg
pop
mov
cmpsb
mov
cmp
push
fcmovb
add
movsb
sub
enter
cmpsl
mov
aam
stos
insb
inc
stc
xor
fiaddl
lret
sahf
xchg
xchg
daa
dec
lods
ret
orl
daa
cmp
cmp
ds
pop
roll
int
mov
pop
jl
sub
sbb
in
sbb
lahf
inc
mov
outsl
outsb
and
fimuls
shll
sub
inc
imul
and
mov
rcr
in
stc
add
stos
add
inc
push
lahf
enter
mov
and
mov
dec
dec
pushf
jl
aaa
fisttps
shr
add
int
daa
stos
pop
repz
jg
mov
jbe,pt
rcll
xor
int3
mov
and
pop
pop
xchg
mov
ds
fsubp
pop
add
pop
jnp,pt
pop
dec
daa
cmpsl
ds
jae
aam
fcom
aam
xor
xchg
ret
mov
nop
aad
shr
ss
mov
pop
fs
pop
xchg
sub
ljmp
out
addr16
cmp
cmpb
cs
jbe
lret
ud1
stos
sbb
sbb
mov
pop
xor
in
sbb
lret
push
mov
and
pop
jle
in
inc
hlt
push
outsl
je
je
cmc
movsl
pop
or
frstor
cmc
pop
xchg
or
sub
out
and
out
xchg
pop
hlt
popf
fs
cltd
xchg
push
push
jl
dec
xchg
enter
aaa
pop
rolb
aad
mov
mov
xor
dec
jne
and
xchg
sbb
mov
cwtl
fs
aam
sbb
sbb
add
daa
add
nop
arpl
jno
arpl
rorb
or
iret
xchg
mov
mov
add
shl
push
or
push
out
stc
not
cmpsb
rolb
scas
inc
or
nop
fadd
ret
loopne
pop
addr16
lock
and
add
cmc
adc
add
mov
aad
outsl
std
sbbb
adcb
jge
push
pop
push
jb
push
scas
xor
add
cmp
cmc
test
jg
push
sub
jb
mov
inc
pop
js
mov
push
in
mov
push
hlt
addr16
lods
xchg
jbe
das
outsl
ds
adc
xchg
add
cmp
or
es
shll
out
pushf
push
cld
imul
addr16
adc
cwtl
jnp
cs
push
sti
rcrl
rclb
cs
dec
jno
sbb
fsts
aam
mov
or
pop
cmp
lahf
mov
pop
insb
sub
in
out
lods
hlt
push
sbb
jl
punpckhbw
push
push
jo
insl
sbb
icebp
sub
xor
mov
jae
sub
popa
popa
mov
pushf
sub
sub
mov
adc
scas
int
nop
pushl
insb
adc
xor
jmp
xchg
mov
pop
add
or
mov
loop
test
loope
scas
movsl
fdivr
cmpsl
fdivr
nop
xchg
cld
mov
xchg
clc
and
popa
jne
lea
xor
es
fwait
xchg
out
push
xor
cld
mov
sti
or
stc
lds
inc
addr16
sarb
pop
push
cwtl
mov
into
bound
out
xchg
scas
shl
jmp
lcall
and
out
cwtl
rcrb
push
mov
gs
ds
ret
divl
aas
adc
mov
mov
test
mov
or
and
push
out
cmp
sub
mov
jnp
pop
sbb
jmp
rcrb
inc
shrb
xchg
or
std
sbb
sub
lds
adc
fldt
push
cmpsb
pop
int3
inc
dec
mov
inc
dec
xor
jo
jno
mov
mov
push
jb
fcoml
mov
cmc
mov
push
arpl
mov
inc
rorl
mov
stc
iret
inc
dec
scas
and
aas
sbb
lahf
in
int
pop
mov
cltd
enter
and
out
push
lds
cmp
lds
xchg
cmp
add
and
sub
repz
or
adc
ljmp
js
jo
pop
sarl
push
mov
fwait
cld
aaa
adc
shlb
stc
sar
mov
sbb
xchg
es
mov
dec
mov
mov
das
in
jecxz
pop
push
mov
xchg
dec
inc
push
sahf
dec
xchg
fildll
cmp
addr16
fildl
cld
mov
cmpsb
ror
out
push
push
sbb
aas
adc
fmull
or
push
xchg
stc
push
scas
mov
xor
and
push
cli
mov
iret
xchg
inc
mov
inc
add
add
cmp
loop
adc
add
mov
mov
lock
jg
add
push
lods
pop
fistpl
xor
cwtl
shr
lods
and
xchg
pop
jne
icebp
lea
mov
bound
inc
push
jl
pop
pushf
push
mov
in
subl
fcmovb
enter
and
mov
mov
pop
imul
out
pusha
mov
in
jmp
out
in
les
add
test
movsb
movsb
xor
push
cmpsl
aas
mov
jp
sbb
xor
mov
and
push
pop
dec
cwtl
xor
mov
adc
dec
pop
loopne
mov
mov
or
lahf
push
arpl
ficomps
gs
inc
into
shll
pushf
and
push
sbb
or
push
ficomps
push
lcall
incb
nop
and
xor
jnp
fistl
lret
and
pop
sub
adc
dec
or
stos
mov
enter
push
adc
sahf
hlt
lock
data16
jnp
mov
stc
adc
arpl
mov
mov
mov
rcrb
mov
sti
outsb
loop
push
or
xor
ret
or
andl
arpl
sahf
mov
and
pushl
inc
pop
mov
and
xchg
inc
mov
dec
xchg
std
and
and
repz
jo
push
mov
adc
push
mov
fildll
stc
dec
sbb
ficomps
imul
cltd
jnp
cmp
mov
cmpsl
mov
cmp
scas
in
lret
xor
idiv
cmpsl
mov
cwtl
fwait
pop
ss
inc
xchg
test
stc
dec
inc
in
or
movnti
inc
mov
cltd
xchg
daa
cwtl
enter
jge
inc
aad
lock
js
inc
mov
lock
mov
or
jno
mov
mov
fsubs
xchg
sbb
mov
dec
subb
scas
add
pop
mov
dec
fildl
lods
mov
dec
cmpsb
fs
jmp
sub
push
sub
call
mov
je
ds
out
cltd
pop
and
bound
ss
mov
fs
jnp
ret
ds
xor
sti
rcr
sub
pop
arpl
leave
testb
in
orl
adc
fdivl
sub
dec
aad
or
cmp
push
out
xor
addr16
inc
imul
sub
xor
enter
mov
dec
mov
pop
je
dec
loopne
mov
outsl
arpl
mov
jp
sarl
daa
lea
daa
std
fldcw
xor
push
mov
jns
dec
cli
scas
test
sahf
and
lea
scas
adc
data16
mov
sbb
repz
push
mov
mov
or
push
stc
popa
jns
cmp
int
cmc
xchg
loop
js
je
enter
and
pop
dec
cmp
repz
dec
mov
fidivrl
push
aaa
outsb
dec
subb
inc
xchg
inc
sbb
inc
sbb
xchg
inc
test
fnstcw
ret
mov
and
clc
jne
xchg
and
fidivl
int
popa
ja
add
inc
pop
xchg
popa
outsb
cmp
xor
cld
xor
loop
pop
sbbb
mov
mov
sub
lcall
shlb
int3
dec
lds
bound
xlat
push
popf
mov
jl
cmpb
xor
aad
sub
imul
inc
rorl
dec
or
hlt
out
je
xchg
cmc
push
mov
pop
push
std
pusha
and
mov
sbb
push
xor
popf
and
cmp
cltd
push
push
push
add
int3
sti
cmp
sub
dec
jno
loopne
clc
pop
mov
mov
cmc
ljmp
push
cld
imul
daa
inc
popa
nop
inc
fscale
or
ss
adc
outsb
pop
movsl
lret
sbbl
add
cmp
imul
jge
jae
rorl
jnp
fcmovnbe
sbb
mov
adc
ljmp
andps
jle
ret
out
xchg
dec
inc
in
add
jb
xor
ljmp
xor
shl
rorb
insb
sub
sbb
sbbb
std
cmpsb
pusha
pop
jnp
sub
mov
xor
sub
ret
aad
jno
adc
pop
xchg
dec
pop
xor
cli
std
shrb
pop
push
add
popl
int3
ss
mov
inc
lret
out
js
pushf
mov
lahf
test
jp
inc
mov
add
outsl
xchg
jecxz
int
xorb
add
pop
lcall
int
loope
pusha
imul
leave
mov
xchg
fldlg2
mov
push
insb
icebp
iret
mov
fmulp
mov
mov
scas
mov
jb
mov
inc
test
lret
cld
jmp
xchg
neg
push
xor
add
mov
lret
stos
xchg
js
fistps
inc
mov
test
xor
loop
dec
pop
cmpsb
add
adc
sub
sub
jg
cld
rolb
dec
inc
inc
incb
adc
out
shrb
in
cli
int
adc
pop
cmc
fsubs
ds
lahf
jbe
test
or
movsb
call
dec
int
popa
sub
and
out
cmp
sub
inc
fimuls
pop
into
cmc
pushf
mov
sbb
jmp
sarl
cmpsb
and
cli
orl
adc
sub
int3
xchg
mov
adc
cld
rcrb
sti
xor
aaa
andb
and
rorl
cmpsl
stos
dec
outsb
mov
jns
lea
fidivs
inc
mov
inc
into
mov
into
cmp
inc
sbb
out
mov
inc
mov
stc
subb
mov
pushf
lods
push
jae
dec
xchg
mov
inc
mov
cmp
rcll
sbb
bound
and
sahf
jg
and
jmp
push
add
sub
jg
jo
pop
jnp
punpckldq
cmc
andb
push
outsl
jns
cli
ja
cld
mov
cmp
mov
pop
int
and
fdivl
dec
das
mov
mov
call
dec
rolb
jno
cmp
repnz
or
test
inc
in
cmp
push
xor
enter
inc
nop
mov
pop
mov
or
ret
add
adc
push
repnz
ss
fsts
cmp
mov
pop
jb
push
mov
adc
pushf
repz
in
clc
inc
push
fimuls
frstor
lcall
lret
fnstenv
fwait
sub
dec
aam
movsl
cs
andb
pop
sub
push
mov
outsb
push
ret
cs
xchg
cs
ds
xlat
mov
push
inc
sbb
pop
pop
insb
arpl
jmp
lret
inc
or
jnp
mov
sbb
sti
stos
fisubs
add
mov
aas
out
pop
cmp
lret
xchg
xchg
push
and
into
inc
mov
add
add
fucom
mov
mov
xlat
or
mov
rcrb
bnd
sub
rcll
aaa
insl
sar
fstpl
imul
adc
iret
mov
add
imul
mov
inc
loop
mov
lea
ret
or
fcomi
xchg
cmp
das
mov
arpl
jmp
xorb
mov
icebp
xchg
jbe
mov
pop
dec
adc
mov
out
mov
dec
repz
and
xchg
push
insl
bswap
lods
push
insb
sar
outsb
adc
jnp
cmpsl
cmp
jnp
scas
fsubrl
imul
in
sbb
lret
cmp
jmp
jg
mov
inc
push
clc
insl
pop
into
cmpsl
idivb
cmp
sub
imulb
int
lret
scas
xchg
aaa
ds
mov
dec
xor
test
les
leave
out
adc
or
neg
das
pop
xor
dec
stos
sahf
outsb
ret
add
call
ljmp
sub
imul
mov
mov
add
mulb
cmp
mov
pop
mov
mov
loop
jmp
inc
fdivrl
xor
lods
aaa
or
out
es
adc
xchg
add
dec
les
dec
cli
repz
mov
xor
push
xor
sbb
dec
jecxz
cmpsb
xor
mov
inc
push
addr16
jmp
jl
fsts
mov
dec
sbb
fwait
dec
rolb
repnz
out
xor
adc
cmpsl
loope
lods
int3
xchg
orb
imul
int
test
pop
sub
outsb
ljmp
sti
scas
cmp
in
sub
movsb
push
mov
mov
shll
outsb
add
cmp
jecxz
push
daa
pushf
sbb
mov
sbb
push
xchg
dec
pop
xor
xor
hlt
or
nopl
daa
xchg
aas
adcb
cmp
mov
aam
lcall
in
aam
add
adc
push
adc
push
fldcw
repz
inc
push
sub
jne
dec
mov
fsts
and
xchg
xor
scas
adc
out
inc
and
out
and
sbb
cmpsl
lret
bound
mov
sub
outsb
shlb
out
dec
pop
mov
push
push
lods
mov
sbb
test
fldcw
fwait
sbb
pop
movl
xor
loope
and
push
cs
push
mov
pusha
xor
das
jns
jo
cmpsb
jo
cmpsl
notb
push
das
pop
xchg
and
xchg
popf
add
inc
and
scas
xor
inc
cs
ljmp
sbb
pop
xchg
jo
adc
adc
sub
xchg
js
pop
cmc
push
push
ja
add
mov
push
xor
lods
and
pop
pop
das
mov
xor
in
pop
fisubrl
dec
fiadds
dec
sbb
jns
or
jge
add
xorb
add
pxor
and
push
insl
in
fmulp
inc
aas
les
add
adc
push
out
cmc
lret
mov
push
mov
cmp
cmp
outsl
cld
hlt
sbb
push
incl
ljmp
sti
loop
cltd
xor
cmp
cmp
ret
add
mov
icebp
dec
out
xor
inc
in
inc
cltd
ds
add
jno
sub
sbb
sbb
scas
sbbb
mov
and
pop
jle
push
cltd
cmpsl
scas
aam
fdivp
loope
add
push
daa
aad
xchg
inc
inc
add
mov
pushl
sub
imul
sbb
cltd
jns
xchg
popf
fwait
dec
insl
mov
sbb
dec
mov
fstpl
mov
adc
xchg
mov
jge
fcmovne
mov
mov
push
push
sub
mov
inc
je
cli
cmp
fs
mov
hlt
jl
in
imul
arpl
push
test
push
leave
push
call
sbb
inc
ja
bound
sub
cmp
dec
repnz
cmp
jge
adcb
sbb
out
mov
push
pop
inc
loop
loope
sub
enter
inc
add
loope
addl
inc
sbb
and
pushf
das
bound
pop
andl
std
fs
jns
into
jecxz
mov
int3
xor
test
mov
insb
cld
sub
stc
cli
xchg
pushf
xchg
adc
dec
inc
out
sbb
push
mov
jno
arpl
dec
xor
and
jg
jle
jl
inc
or
lret
ja
mov
ret
std
push
jnp
mov
jl
pop
pop
lods
decl
cmp
and
jae
pusha
jb
out
mov
lret
mov
icebp
push
andl
xor
pop
lcall
hlt
dec
shlb
mov
push
sub
push
inc
dec
and
push
jo
jnp
sub
cmp
cmc
lret
or
movsl
adc
fisubl
out
test
jl
pop
dec
movsl
add
pushf
lods
mov
lock
popa
wrmsr
jmp
jae
lahf
sarb
mov
xor
pop
mov
popf
dec
icebp
sbb
scas
xchg
cmpsb
pop
arpl
inc
insl
mov
lods
rolb
inc
jno
outsb
andl
mov
mov
add
hlt
dec
pop
xchg
aaa
jns
das
push
adc
mov
mov
mov
sub
cld
sub
dec
xchg
jl
pusha
in
push
pop
fs
jno
outsl
pop
stos
cmpsl
xor
mov
je
les
dec
movsb
subb
adc
mov
inc
or
xchg
or
mov
xor
pop
jns
decl
xchg
and
pop
push
mov
lahf
push
negb
mov
xchg
sbb
jae
ja
pop
push
loope
xor
and
add
loop
mov
mov
inc
xchg
mov
outsb
add
std
iret
in
inc
and
mov
cmp
aaa
xor
lds
lock
pop
fwait
cmp
push
int
jecxz
mov
mov
add
push
scas
adcb
lret
test
cmp
into
imul
mov
jmp
or
out
adc
cmp
repz
jne
daa
inc
sti
cmpsb
std
repnz
sti
adc
insb
pop
leave
pop
stos
lods
js
xchg
jbe
mov
enter
loop
cmp
rcrb
add
rolb
loope
std
lods
ja
call
andl
int3
pushf
inc
fcoml
sti
sub
cmp
cmpsl
xorb
add
ljmp
xor
mov
cwtl
inc
sbb
cwtl
out
scas
lahf
arpl
clc
not
push
jmp
in
dec
mov
mov
mov
popa
andl
mov
xor
adc
hlt
pusha
adc
or
push
dec
cmp
mov
push
jbe
das
or
ret
jbe
cmp
cmp
mov
stos
lods
xchg
int
shrb
jmp
das
jbe
in
pop
imul
insb
pop
int
adc
mov
inc
inc
pop
ss
pop
movsl
add
or
mov
jmp
pop
sahf
outsb
sbb
dec
mov
pop
cmp
push
mov
and
mov
out
aam
lret
jae
sub
or
jg
adc
aas
jmp
ss
and
test
sub
mov
daa
mov
lds
movsl
ret
sub
test
jno
hlt
int
std
xchg
pop
pop
dec
inc
xor
movsl
xlat
push
jb
xchg
pop
sahf
sub
pop
xor
mov
mul
or
shll
lahf
xchg
cmpsl
mov
dec
push
shrb
add
fistl
cld
sub
in
sbb
cmpsl
cmc
pusha
xor
sbb
fimuls
xchg
or
pop
pop
std
loopne
bndstx
mov
cltd
xchg
aaa
fstps
cld
or
loop
pop
in
jge
dec
push
or
mov
jb
jo
in
mov
fisubrs
jb
testl
jnp
inc
and
mov
es
pop
lock
stos
fstps
ss
inc
orb
jl
add
mov
push
imul
test
das
add
rcrb
jp
pop
out
movsl
mov
arpl
ja
xchg
push
out
push
sbb
pop
xchg
aaa
cmp
pop
jmp
daa
or
lods
mov
adc
sbb
les
jl
bound
popf
sbb
mov
loope
xlat
notl
xlat
inc
and
fisttpll
sahf
xchg
pop
jecxz
xchg
and
adc
in
and
cli
test
jae
jns
pop
add
mov
lcall
mov
jns
out
cmpsl
imul
test
push
jnp
and
ss
aad
into
mov
adc
pop
pop
aaa
xchg
je
bound
insb
lret
inc
dec
lahf
sub
cmp
loop
push
movsb
sahf
insb
pop
pushf
movsb
pop
and
or
xchg
sub
call
das
inc
jp
insb
mov
insb
xchg
push
push
out
addl
sub
xchg
cmp
cmpsb
das
negl
je
xchg
xlat
jo
andl
push
pop
scas
rcrl
mov
fsubp
test
xchg
sub
push
sbb
scas
fisttpl
mov
std
jecxz
cwtl
or
enter
popa
mov
xchg
rorl
lea
ss
out
jnp
nop
xchg
sub
xor
daa
sbb
in
mov
pop
mov
xor
jae
cmp
jg
aad
sti
xchg
aas
dec
dec
rcl
fs
jae
adc
pop
jns
clc
xchg
mov
js
inc
jae
mov
xchg
enter
lahf
mov
int3
fildl
lods
pop
sbb
pop
inc
out
jecxz
sbb
fidivrl
stos
push
jg
loope
jnp
dec
pusha
adc
leave
sbb
sbb
push
ficoms
or
sbb
lret
dec
cmp
icebp
mov
sbb
push
xchg
jmp
xchg
popf
aas
add
lea
mov
xor
inc
fistpl
fiaddl
and
pop
dec
dec
add
and
mov
cltd
mov
and
jo
pop
fcoml
stos
gs
dec
nop
mov
dec
sarb
lcall
pop
push
xor
icebp
scas
sub
dec
mov
fisttpll
scas
fs
push
loope
inc
or
test
mov
pop
leave
in
ret
ret
mov
popa
jg
jmp
ss
sbb
out
loop
sbb
cwtl
adc
test
fstps
mov
cmpsl
dec
pushf
sub
fwait
cs
out
and
add
mov
push
inc
inc
ret
mov
mov
mov
inc
inc
or
xor
dec
ds
inc
test
ret
out
and
test
mov
fidivl
gs
mov
ljmp
fiaddl
push
cmpl
ljmp
add
mov
dec
xor
mov
and
pop
adc
sarl
dec
mov
fiaddl
je
shlb
test
or
fisubs
jne
mov
or
ud0
fmuls
stc
outsl
movsb
hlt
jbe
pop
jne
inc
out
xor
push
xlat
cli
push
sbb
add
jnp
sbb
add
inc
mov
sarb
sub
je
idivl
cmp
insl
sub
mov
mov
decb
int
mov
enter
xchg
rcrb
dec
andb
fdivl
int
hlt
mov
cld
mov
fwait
mov
repnz
dec
mov
pop
inc
dec
fidivl
xchg
adc
dec
icebp
aaa
lret
rcrl
push
in
sahf
enter
lods
jns
mov
pop
cmpsb
dec
jns
aam
jo
lods
pushf
lahf
jmp
mull
push
leave
data16
xor
ficompl
xchg
mov
fsubl
xor
xchg
xor
aam
out
sahf
jnp
mov
imul
jg
in
movsl
leave
addr16
addl
movsl
pop
adcb
bound
jp
sti
jecxz
push
lcall
inc
int
test
das
pop
adc
sub
lods
xor
mov
mov
lock
or
je
cmp
mov
cmp
outsl
loope
push
inc
jns
xchg
push
in
lock
cmp
mov
xchg
fs
mov
incl
jle
cltd
pop
aaa
subb
sbb
mov
in
add
cmp
pop
xchg
push
movl
mov
lock
ljmp
fwait
out
fs
inc
xchg
outsl
int3
ret
jae
cmp
pop
push
jno
xor
sbb
scas
lds
loopne
mov
adc
data16
push
repz
jp
incb
xlat
jbe
push
das
sti
xchg
cli
mov
ficoml
icebp
cmpsl
in
jecxz
testb
out
out
mov
idivl
and
lods
hlt
mov
scas
or
test
dec
pop
pop
inc
out
mov
xchg
dec
mov
jmp
icebp
xchg
pop
or
or
sti
xor
out
xchg
sti
sbb
mov
mov
pop
aas
dec
call
clc
ret
sub
push
ds
or
cld
mov
ret
mov
add
addr16
xchg
xor
lret
fsts
mov
je
pop
cmp
sbb
cwtl
push
inc
into
xor
dec
inc
insl
adc
jle
jmp
push
stc
mov
int
mov
sbb
and
pop
pop
mov
or
lahf
inc
jg
cmc
ficoms
xchg
fcom
pop
fnsave
nop
mov
stos
xlat
or
mov
mov
stos
pusha
aaa
rcrl
jg
push
sahf
push
sub
mov
sbb
loope
in
xchg
xor
jb
jp
mov
mov
mov
xchg
dec
out
adc
bound
mov
xor
aam
das
sub
xchg
xchg
insb
bound
add
xor
lock
pop
les
stos
mov
pusha
adc
sbb
jge
sub
mov
ja
push
jb
sub
jo
sub
cmp
scas
xor
cmpsl
mov
test
cmp
je
mov
inc
test
inc
mov
mov
incl
jl
loopne
out
and
std
jl
mov
std
mov
enter
sub
fnsave
int3
ss
pop
inc
lahf
pop
call
and
js
dec
test
xchg
mov
xchg
dec
inc
cli
lods
movsl
stos
in
insl
jns
lea
pushf
mov
data16
test
lcall
ret
jmp
in
cmp
cwtl
push
orl
xor
sbb
pop
jb
pop
faddp
loop
outsb
xchg
je
std
jns
add
cltd
aaa
insl
in
add
aad
jnp
daa
icebp
pop
aaa
sub
sub
insl
mov
jnp
fstpl
mov
rorb
fucomp
rcr
sbb
jge
data16
out
std
ja
dec
inc
mov
xchg
xor
inc
dec
dec
push
in
hlt
xor
cmc
cld
inc
shl
cltd
shll
mov
daa
scas
shlb
arpl
jp
insb
jnp
lods
bound
fdiv
lahf
dec
scas
cmpsb
xchg
xchg
or
cmpsl
mov
das
stc
xorl
in
or
mov
cmp
mov
push
iret
add
push
cmp
int
pop
das
iret
nop
clc
ja
inc
int3
inc
gs
add
imul
mov
ss
aaa
dec
push
rcl
xor
pop
xchg
add
sbb
fs
cmp
sbb
mov
ja
dec
xchg
mov
test
push
push
push
out
push
dec
test
dec
add
dec
aad
mov
push
fistl
push
test
push
mov
push
xchg
jge
sub
sbb
movsb
and
mov
or
inc
jp
pop
pop
add
or
inc
shr
fwait
sbb
mov
stos
orb
dec
pop
sbb
cwtl
sbb
loop
imul
stc
fisubrl
sbb
out
insb
inc
xchg
sar
lods
add
dec
fmul
push
and
jns
sbb
lds
pop
mov
pop
mov
insb
pusha
dec
jae
push
mov
les
pop
mov
inc
lea
sub
loope
iret
jo
jae
and
cmp
pop
dec
jg
pop
mov
xchg
push
fucomi
out
push
push
and
out
sub
adc
pop
mov
mov
int
ret
lret
sub
pop
movsl
cmp
mov
xchg
add
or
and
add
push
lea
outsb
mov
cmp
or
test
sub
jne
ret
sub
mov
lahf
mov
mov
lret
aad
mov
mov
movsb
das
mov
add
icebp
arpl
loop
lret
pop
cmpsb
pmaxub
adc
inc
mov
pop
add
loope
leave
push
mov
rcl
push
push
push
or
mov
sub
xor
shlb
es
mov
insl
mov
sub
decl
xlat
clc
in
mov
lret
iret
cmc
inc
faddl
and
in
xchg
pop
xchg
mov
push
push
shl
push
in
or
add
in
sbb
jmp
and
enter
and
jle
add
mov
push
in
into
cmc
int3
stos
mov
push
cmp
pop
es
mov
xchg
arpl
adc
mov
pop
adc
imul
adc
out
mov
flds
xor
push
daa
xor
repz
mov
fiadds
jmp
daa
add
jne
sbb
pop
add
je
nop
sub
inc
pop
mov
idivl
push
push
ss
pop
into
mov
mov
in
stos
les
push
fcomip
push
out
sub
out
sbb
fsubr
enter
movsl
mov
adc
push
aas
xchg
xchg
sysexit
mov
out
das
enter
aaa
push
je
push
mov
or
pop
and
push
and
dec
xchg
cmc
xchg
mov
data16
push
push
daa
adc
sbb
pop
push
adc
jle
sub
sub
mov
subl
mov
testl
sub
cmp
pop
xor
or
lods
enter
ss
add
cmpb
sub
fnstsw
mov
fsubr
inc
or
cmp
bndldx
and
adc
mov
movsb
outsl
loopne
clc
pop
clc
mov
or
and
push
mov
mov
mov
pop
xchg
push
add
or
xchg
sbbl
adc
xor
int
in
lahf
and
inc
les
ficompl
sub
insb
addr16
sub
inc
mov
loopne
das
sbb
ret
cwtl
xor
pusha
inc
movsl
jge
sub
dec
out
scas
mov
sub
test
xor
lret
add
adc
xor
lcall
fbld
outsl
add
repz
mov
cmp
out
inc
repnz
out
ja
mov
rcrb
adc
shrl
test
imul
gs
add
jbe
or
xchg
or
sub
stos
push
dec
jle
lret
jnp
icebp
adc
push
xor
push
sbb
and
into
sub
leave
bts
int3
jbe
jno
xor
test
pop
scas
outsb
fistpl
dec
sub
xor
mov
mov
shll
js
add
push
scas
lret
sbb
sub
popa
xchg
xchg
jle
pop
and
dec
fs
repnz
stos
stos
call
or
push
outsl
sti
sbb
testb
mov
mov
mov
add
call
and
inc
loopne
pop
cmp
pop
mov
cmpl
mov
push
imul
jne
in
or
int
fmull
shll
mov
gs
cltd
mov
cmpsb
insl
negl
jbe,pn
xchg
cmp
imul
inc
out
test
shlb
js,pn
push
neg
in
test
or
mov
dec
and
jmp
js
and
addr16
mov
cmc
fnsave
je
sbb
loop
dec
aam
mov
adc
mov
stos
sub
mull
inc
arpl
pusha
std
lods
fwait
test
jae
push
fists
jmp
inc
jmp
inc
xlat
push
imul
push
sbb
ljmpw
nop
pop
test
and
xchg
frstor
or
lahf
add
pushf
shrl
sub
fwait
clc
popf
aaa
mov
mov
in
xor
pop
fsubrl
in
cmp
rcrl
add
adc
add
xchg
mov
sbb
cs
emms
mov
jle
pop
addr16
and
pop
out
push
xchg
cmp
pop
test
push
and
aas
pop
add
push
popa
inc
outsl
mov
adc
mov
pop
xchg
adc
imul
mov
mov
rcrl
lods
iret
mov
in
xor
lret
push
insb
lods
xchg
loop
mov
lds
jge
leave
popf
test
mov
mov
add
or
imul
dec
xor
leave
mov
xor
shlb
mov
pxor
je
test
xor
and
lahf
scas
sub
or
mov
mov
jg
out
mov
jo
pop
test
mov
je
xor
icebp
fwait
std
dec
and
jle
addb
pop
aad
jbe
pop
xchg
xchg
jg
mov
add
xchg
inc
les
inc
jecxz
or
lock
xchg
pop
push
scas
enter
fiaddl
and
pop
and
cmp
aam
js
mov
call
out
xchg
mov
addr16
jae
jns
icebp
jnp
ds
cld
filds
push
adc
mov
xchg
call
stos
mov
xchg
shr
das
xorl
xlat
dec
lods
xchg
inc
fucomi
jg
mov
cli
daa
or
or
mov
sarb
mov
mov
push
and
and
push
jg
mov
out
pop
adcb
popa
sbb
cmpsb
adc
cmc
fcompl
andb
int
pop
pusha
xor
cmpsb
xchg
les
mov
push
call
mov
adc
insl
ret
loopne
gs
inc
cltd
mov
and
jp
std
insl
clc
and
insb
fs
aam
dec
push
cmpsl
mov
icebp
xrelease
sahf
rclb
push
jbe
push
sbb
lods
push
push
adc
push
jo
xor
das
push
dec
jmp
jnp
cs
adc
dec
shrl
dec
les
stc
cmpsb
fnstsw
and
dec
loopne
and
jb
push
push
xchg
scas
sub
je
and
daa
mov
out
inc
imul
out
inc
xor
faddl
push
jle
mov
scas
add
scas
sub
scas
mov
push
mov
push
push
pop
movsl
js
xor
jecxz
xchg
insl
pop
mov
test
inc
cld
mov
in
ja
inc
insl
repz
inc
add
pop
pop
fnstcw
out
mov
dec
jp
stc
arpl
lcall
xorl
mov
jne
push
mov
in
insl
pop
dec
movd
push
push
xchg
and
mov
jecxz
andb
divb
gs
lods
hlt
lods
fildl
mov
mov
pop
xchg
mov
add
mov
pop
mov
add
jnp
xchg
xchg
dec
dec
dec
fs
or
sbb
dec
into
cmc
dec
xor
fs
jo
sub
push
jns
fs
and
bound
inc
jae
push
cli
ljmp
cmp
jb
xchg
aas
pop
xchg
sbb
addr16
jnp
loop
adc
data16
mov
add
mov
xchg
jnp
stc
mov
andl
cmp
inc
jnp
sbb
sbb
lods
or
fdivrl
mov
icebp
jge
push
movsb
jecxz
in
in
scas
mov
mov
out
in
lcall
add
pusha
mov
imull
inc
dec
jle
in
call
mov
testl
loopne
outsb
pop
mov
popa
pop
pop
sub
icebp
addr16
iret
nop
out
fld
sbb
mov
pop
xor
adc
pop
mov
add
out
call
nop
movsb
cmpsl
mov
cmp
mov
js
jbe
xor
push
adc
cltd
dec
ljmp
mov
popf
mov
test
cltd
push
mull
adc
lock
push
xchg
adc
sub
mov
mov
mov
dec
mov
xchg
inc
sbb
es
nop
lds
xchg
std
scas
inc
adc
and
fsubrp
mov
shlb
cmpsb
add
push
into
cmpsl
gs
xlat
adc
std
cld
lahf
inc
sub
sbb
in
mov
mov
push
inc
out
mov
ds
mov
xchg
push
jbe
cmpsb
in
lret
scas
mov
lds
hlt
dec
dec
movsb
rcl
aas
push
add
in
leave
or
insb
adc
adc
bound
mov
lcall
std
jmp
cmp
out
adc
inc
jl
js
out
or
jg,pn
sub
repnz
mov
add
push
das
dec
cwtl
ret
pop
push
iret
movl
int
gs
fsubl
xchg
loopne
idivl
fsts
out
push
mov
jo
push
bound
nop
and
add
scas
adc
jo
push
cmp
std
popl
movsb
cmp
movsb
fwait
icebp
cmc
push
or
sub
adc
cmpsl
popa
xor
stos
xchg
push
imul
dec
shlb
loop
fisubl
clc
ret
andb
xor
pop
push
std
xor
stos
pop
jmp
inc
mov
popa
cmpsl
stos
jmp
jmp
mov
clc
aam
cld
jno
js
rep
xchg
outsb
cmp
fistpll
push
push
or
js
xor
pop
sub
sbb
mov
xchg
or
sbb
lock
adc
fsts
inc
fwait
divl
stc
aam
push
sbb
inc
jb
cs
lods
adc
xchg
mov
jo
in
mov
xchg
pop
xor
test
mov
data16
mov
push
push
clc
cmpsb
out
adc
fidivl
das
inc
rol
enter
fistl
imul
fsubrs
cmpsl
xchg
arpl
xchg
enter
jle
pop
mov
ss
cmp
fs
cmp
push
jl
adc
repz
stc
or
out
adcl
push
scas
filds
sbb
xchg
lret
hlt
inc
xchg
in
or
out
mov
insl
stos
into
daa
ljmp
sbb
sbb
mov
xor
out
push
push
xchg
sub
lods
lods
xor
outsl
clc
les
sub
xorb
mov
aad
mov
pop
sahf
xchg
dec
inc
rcrb
test
sub
enter
xchg
mov
loopne
int3
daa
loope
push
fs
lret
xor
dec
jne
leave
sub
shlb
cmp
rcrb
dec
out
lret
lock
cmp
ja
and
fsubs
adcl
or
cmp
mov
mov
fwait
inc
and
xchg
or
pop
pop
xchg
xor
stos
add
pusha
jne
add
xor
mov
stos
popa
int3
adc
arpl
add
popf
lds
mov
jno
inc
pop
test
inc
fisubrs
adc
pushf
cmp
test
fs
loop
mov
sub
inc
lret
stc
stc
daa
cld
aam
leave
dec
push
mov
fsubs
mov
push
mov
movlhps
push
xor
imul
sbb
mov
loopne
iret
xor
cmp
in
inc
inc
mov
push
cmp
mov
ljmp
and
cmpsl
push
xor
jp
add
pop
data16
inc
pop
outsl
stc
mov
sbb
ficomps
rorb
mov
gs
push
mov
pusha
dec
pop
ds
cwtl
add
das
mov
adcb
adc
nop
jnp,pn
inc
rcl
xor
mov
out
sbbl
leave
jno
adc
daa
inc
mov
popf
xor
outsl
mov
pop
pop
cmp
stos
adc
loopne
imul
push
outsb
cld
xchg
push
lods
and
jno
sub
cld
pop
xchg
enter
jae
push
int3
das
dec
callw
adc
mov
sbb
gs
fincstp
cmp
insl
lods
mov
in
cmp
test
pushf
es
inc
or
sub
into
stos
movsb
jecxz
push
mov
push
mov
icebp
shl
fs
clc
aas
stos
std
push
add
inc
jo
rorb
clc
mov
sti
aam
push
lods
mov
mov
fadd
insb
or
loope
add
call
pop
out
inc
sub
and
aaa
pop
test
xchg
movsb
jo
sub
sub
fidivl
adc
add
push
xor
mov
data16
mov
ss
pop
push
jae
mov
int
push
or
icebp
lret
cs
or
stos
sub
enter
mov
bound
xchg
cmpsl
scas
cmp
sti
mov
and
mov
xchg
or
jns
push
xchg
clc
popa
mov
test
dec
pushf
add
inc
lock
sbb
popa
or
imul
mov
lock
jae
xchg
loopne
cmpsl
out
and
mov
inc
xchg
insb
push
mov
dec
xchg
dec
int
and
dec
xor
pushf
and
cld
mov
cmp
jbe
inc
pop
inc
or
sub
mov
inc
rdtsc
or
adc
xor
push
cmpsl
mov
pop
std
or
cltd
mov
mov
jge
push
loope
js
leave
in
stc
sbb
adc
fidivs
mov
aas
xchg
mov
add
add
pop
mov
sbb
in
xor
sbb
or
in
popl
test
jl
xlat
roll
sti
in
aam
sti
push
sbb
adc
jo
dec
add
lock
movsb
pop
rolb
sbb
imul
call
jb
outsl
or
push
mov
stos
lods
add
mov
test
mov
dec
lods
or
push
out
jl
pop
test
mov
shll
and
repnz
std
fcoml
addr16
mov
mov
loope
mov
pushf
sbb
out
in
mov
popf
enter
mov
mov
addr16
addl
out
adc
mov
mov
pop
leave
icebp
sub
repz
mov
aad
xchg
push
rep
aam
xor
mov
and
mov
sbb
cli
cmp
mov
cmp
iret
sub
dec
cltd
xor
xchg
mov
popf
adc
jl
jmp
in
dec
sub
cmp
or
pushf
and
sub
outsb
in
incl
inc
mov
push
and
or
inc
test
inc
inc
js
xor
inc
mov
pop
popa
pop
pop
sub
fisubl
insl
std
xchg
ret
lods
mov
inc
cmp
jge
mov
sar
add
xchg
imul
jae
mov
das
test
hlt
cmp
inc
lret
mov
xor
ficoms
scas
push
push
in
or
cli
filds
outsl
mov
or
mov
push
aas
sub
or
inc
pop
mov
shll
fwait
mov
sub
cltd
dec
fcmove
daa
je
adc
enter
inc
mov
popf
dec
mov
aam
xor
jbe
xor
lret
jns
cltd
cwtl
jns
imul
and
jbe
cmp
sbb
jbe
sarb
shll
mov
imul
pop
ja
rcrb
mov
push
andl
xchg
dec
adc
repnz
mov
push
insl
rcl
loop
push
push
in
imul
shr
int
jo
rcll
xor
addr16
rorl
jl
or
adc
mov
mov
pslld
scas
adc
int3
lods
cmc
out
insl
icebp
repz
shll
icebp
or
enter
fwait
xor
arpl
iret
mov
mov
jno
out
fcompl
sbb
pop
mov
dec
jns
pusha
push
sub
adc
dec
dec
push
jb
fiaddl
lret
inc
fcomps
mov
rcr
ds
bound
mov
inc
popf
mov
dec
push
push
in
ds
cmp
and
sub
push
mov
push
mov
xor
mov
jae
lock
in
push
loope
dec
xor
or
mov
pop
sub
js
es
sbb
subb
pop
jo
mov
sbb
jg
fcoms
ret
or
cld
push
or
bound
ret
push
push
repnz
cs
jl
xchg
pop
loopne
mov
out
push
jnp
iret
cmp
fcmovb
push
clc
fcoml
pop
pushf
xor
jae
repnz
jmp
inc
scas
fstps
int
inc
inc
dec
clc
mov
mov
addr16
adc
into
ret
es
fldcw
dec
in
xchg
push
call
mov
insb
lods
adc
les
sbb
iret
sbb
sub
cmc
shrb
or
sbb
fcoms
lahf
orl
inc
popa
inc
repnz
or
sub
jge
mov
jp
arpl
mov
adcl
fwait
mov
and
test
fmull
sbb
jbe
jbe
insb
mov
xchg
adc
out
sti
dec
sbb
jecxz
xchg
aaa
shlb
std
or
test
add
pushf
adc
aaa
add
mov
cmp
cwtl
dec
movl
aas
adc
daa
jmp
mov
cmpsb
jb
mov
out
mov
out
sbb
mov
lds
repz
push
jg
xor
jl
int
test
push
stos
mov
fistpll
mov
ret
sbb
movl
test
inc
addl
and
and
enter
jb
sub
scas
or
ret
cs
lcall
adc
movsl
clc
lahf
imul
test
aam
pop
aaa
adc
and
stos
xor
lahf
outsb
pop
cmpsb
imul
clc
sti
repnz
arpl
push
or
pop
jno
in
cmpsl
fadd
dec
lods
dec
or
mov
shlb
bound
and
sbb
xchg
mov
or
mov
push
into
lahf
andb
scas
sbb
adc
fmull
adc
pop
ds
adc
sub
pop
or
inc
push
je
subb
jmp
jl
dec
loop
mov
enter
cmc
mov
jns
sub
mov
mov
dec
jnp
cmp
adc
mulb
xchg
bound
pop
lcall
or
and
out
dec
dec
mov
cmpb
push
and
aas
xor
nop
popa
xchg
lds
cmp
mov
and
shrl
jle
in
adc
sub
xchg
hlt
xchg
push
sub
xor
stc
inc
aad
jno
jmp
mov
rcrb
shl
insb
out
aad
sub
das
imul
and
jns
mov
sub
xor
out
cmp
pop
inc
cmpb
mov
sbb
addr16
push
jle
outsl
out
pop
mov
jb
lret
outsl
pop
rcl
xor
mov
jge
xor
loope
xor
mov
pop
in
adc
pop
sbb
pusha
jne
inc
lds
test
cmp
imull
or
xchg
adc
mov
push
cmp
in
dec
int
test
pop
pop
xchg
inc
ds
sub
sbb
dec
jbe
in
ss
into
push
jbe
daa
mov
mov
test
mov
push
sahf
idiv
dec
cwtl
or
andb
mov
rolb
or
push
mov
xor
jne
cmp
pop
pop
mov
fbld
shrl
sbb
mov
dec
cmp
test
cmpsl
pop
mov
hlt
out
mov
mov
jp
mov
add
or
xchg
and
addr16
pop
cmpsl
bound
jmp
or
xchg
out
sahf
lock
mov
dec
lcall
popl
loop
mov
insl
cld
ds
daa
pop
mov
push
adc
dec
push
mov
sub
call
insl
leave
test
data16
and
and
dec
jg
cmc
jne
sub
leave
ret
rcll
rorl
sub
adc
push
pop
mov
mov
out
jno
sbb
neg
test
mov
adc
aad
mov
jne
inc
mov
mov
mov
cli
repnz
ss
sbb
mov
jl
mov
mov
push
mov
dec
lret
and
cmp
adcl
ret
sbb
xchg
mov
adc
inc
or
push
xor
cmc
xchg
xor
pop
mov
jle
outsl
sbb
jae
pop
repz
shlb
pop
pushf
jmp
rcr
cs
flds
pop
xchg
jge
push
loop
mov
fstpt
pop
cmpsb
dec
enter
mov
xorb
leave
jmp
jg
mov
jne
mov
pop
out
push
fcos
dec
movsl
repnz
sarb
jmp
dec
test
iret
xchg
stos
mov
test
add
enter
adc
mov
mov
jns
cmp
mov
push
and
gs
push
das
notb
mov
stc
push
adc
inc
mov
xor
add
div
mov
pop
sbb
js
iret
cmp
xchg
std
fldcw
sbb
fistpl
or
test
leave
lods
jo
xor
pop
sub
in
jge
sub
shll
leave
pop
rolb
xor
icebp
popa
jne
mov
dec
mov
arpl
xchg
scas
or
es
icebp
sarl
jecxz
push
sbb
mov
lret
pop
push
rcrl
test
insl
rcr
scas
aas
aaa
xchg
jno
pushf
leave
mov
fcmovnu
pop
aaa
int3
out
js
lret
sub
xchg
or
lret
mov
icebp
dec
inc
push
push
add
enter
add
cmp
dec
xchg
in
cmp
mov
fisttps
dec
mov
jle
dec
cwtl
sbb
cmpsb
push
add
fidivrs
xsha1
cmpsb
or
cmc
mov
call
sub
subb
sti
inc
je
addl
leave
adc
rcrl
xlat
mov
ret
out
imul
les
and
mov
sbb
mov
jle
std
xchg
mov
das
xchg
enter
addr16
or
jnp
out
push
popf
fcmove
mov
sub
subl
in
outsl
add
mov
lahf
andb
adc
incb
sbb
incb
push
cmp
ret
shrb
xchg
jge
jo
cmc
out
mov
dec
ljmp
sub
je
xor
sbb
inc
mov
subl
in
push
out
ljmp
incb
inc
out
je
pop
repnz
fdivr
jns
scas
lods
or
push
ss
pop
jg
jbe
xor
mov
aas
fwait
adc
scas
sub
aad
sbbl
ds
mov
in
xlat
and
jmp
mov
cmp
jmp
scas
xor
sar
adc
mov
pop
in
sbb
add
adc
and
test
fcomp
loop
mov
pop
dec
inc
dec
sbb
xor
mov
jl
dec
add
xlat
mov
fwait
push
test
int
mov
jnp
pop
sub
dec
fs
inc
imul
lcall
out
dec
sub
aaa
outsl
sbb
enter
sub
jge
ret
in
test
in
sub
mov
ret
mov
mov
push
fstps
pusha
cmp
inc
cmp
cli
or
adc
stc
xchg
jb
notb
int
push
pop
adc
inc
or
pop
pusha
jg
in
clc
pushf
mov
add
adc
push
ds
adc
sbb
dec
fmul
mov
lcall
sub
xchg
mov
orl
mov
test
mov
stc
push
mov
dec
cmpsl
pop
cmpsb
fcomps
cmc
cld
clc
add
and
adc
add
pop
dec
jae
leave
mov
cmc
imul
push
movsl
inc
cs
bnd
jne
repnz
insb
mov
negl
jns
clc
stc
and
push
cld
sub
test
imul
jmp
fucomip
push
dec
sub
lret
fisubrl
es
cmp
xchg
in
and
dec
adc
arpl
outsl
add
mov
repnz
cli
pusha
push
out
out
xor
or
int
rol
mov
out
les
inc
arpl
jle
scas
shlb
mov
fwait
push
add
push
xchg
dec
cltd
pop
cmp
jb
adcb
xor
stos
sbb
bound
jl
pusha
inc
xchg
in
loop
xchg
cmpsb
xchg
leave
add
lcall
adc
jbe
dec
jl
sbb
aas
les
into
insl
lahf
ja
ja
xchg
and
and
aaa
xor
cwtl
pop
or
in
fisttpl
imul
movsl
test
pop
fcomps
mov
aam
mov
adc
lret
xor
xchg
xchg
cmp
push
xchg
addb
pop
int
movsb
dec
fldt
cmp
and
dec
pop
and
ja
dec
xchg
dec
and
add
cmp
nop
es
adc
sahf
and
add
es
out
dec
sub
mov
mov
idiv
test
fbld
ss
push
add
aaa
cmp
or
movsl
imul
fadd
movsb
popf
jnp
jmp
rorl
cltd
mov
es
push
mov
icebp
scas
fildl
lods
dec
out
jp
adc
rorl
addr16
test
cmp
adc
jns
andb
in
add
dec
aas
int
xorps
rcrb
mov
and
movsl
fadds
sahf
fsubrl
mov
orl
in
daa
ja
pop
xchg
daa
add
sbb
repz
mov
cld
push
add
inc
lcall
and
hlt
xorl
push
sti
repnz
xchg
fstpl
loopne
xchg
xor
arpl
lds
std
fcompl
fdiv
scas
dec
loop
ds
jo
insb
push
xchg
xchg
xorb
mov
mov
in
jo
lds
ret
adc
decl
inc
and
push
add
push
scas
in
dec
rcll
bound
mov
jmp
inc
imul
mov
push
dec
movsl
call
ljmp
fnstcw
push
lods
jns
mov
les
popa
mov
jge
mov
loope
std
roll
cwtl
or
add
stos
arpl
mov
loop
jmp
push
cwtl
test
sbb
adc
test
mov
cmpsb
roll
mov
cld
scas
cld
jb
shl
popa
xchg
test
mov
divl
std
rol
and
jns
jl
push
push
aam
pop
and
daa
cwtl
std
in
fdivrl
mov
mul
dec
pop
subl
repnz
dec
xor
ss
inc
dec
mov
fstps
les
jg
push
cmp
push
in
aam
pop
mov
sbb
inc
jb
ss
addr16
shr
jns
test
hlt
out
adc
push
in
lods
aad
dec
and
jecxz
rcrb
adcb
pushf
in
sbb
jbe
popf
ret
shlb
neg
inc
js
stos
dec
mov
and
pop
mov
xor
pop
pusha
jns
adc
in
xor
xor
fndisi(8087
and
bound
push
xchg
xchg
xor
push
test
cmp
roll
sar
push
rcl
xor
jecxz
push
sbb
adc
inc
jp
jp
out
leave
mov
jbe
add
fildll
bound
mov
stos
outsb
dec
and
sbb
mov
xor
cmc
ret
inc
xor
pushf
test
xor
jne
or
add
mov
mov
test
cmp
push
push
push
jnp
out
sti
pop
test
movsb
adc
pop
pop
in
and
test
pop
fstpl
add
sbbl
xchg
push
popa
pop
lock
inc
mov
iret
cwtl
pop
sub
in
jne
mov
pop
jmp
ss
adc
fnstsw
or
call
popf
xchg
jg
mov
clc
cmp
les
adc
mov
les
xchg
cld
xlat
mov
cmp
xchg
sub
test
stos
xchg
cmp
ret
jmp
hlt
adc
mov
fsubrl
in
in
dec
fstpt
ret
inc
fstpt
sahf
mov
int
aas
cld
cmc
ret
int
clc
push
lret
jp
repnz
popf
lds
orl
adc
pop
aaa
cwtl
xor
int3
xor
and
cmc
push
mov
in
xchg
repz
mov
andb
shl
adc
and
inc
cmpsb
clc
test
xor
xchg
cs
rorb
sti
cltd
inc
sbb
mov
js
arpl
incb
push
add
dec
mov
mov
push
xchg
mov
data16
cmp
int3
cmpl
push
inc
pop
fcmovnu
or
ret
pop
hlt
test
shll
test
aaa
leave
aam
ror
cmc
arpl
fstpt
int
add
lods
push
stos
pop
push
mov
insb
ss
in
adc
inc
sbb
into
sbb
lret
mov
pop
lcall
inc
sub
mov
adc
mov
fwait
inc
arpl
decb
hlt
repz
mov
push
mov
push
mov
pcmpgtb
shrb
cmp
movsl
js
ja
push
test
out
outsl
pop
xchg
insb
into
repz
mov
push
xor
or
faddl
push
add
mov
fstpt
ret
insb
mov
xor
jbe
cmc
xchg
xor
adc
push
sbb
inc
push
and
clc
mov
lock
cld
adc
dec
ljmp
inc
enter
jno
mov
add
jnp
bound
pop
xor
mov
lds
in
jb
dec
jl
imul
daa
cmpsl
pop
cmp
adc
ret
fs
inc
push
fdivs
pop
mov
rcrl
in
push
out
push
call
xchg
stos
jae
dec
repnz
in
push
sub
push
imul
cwtl
adc
or
imull
sbb
ljmp
std
adc
sti
inc
ficoms
and
fwait
sbb
mov
cltd
repnz
shll
cld
mov
adc
sbb
mov
and
inc
es
mov
adc
pop
cmc
jge
test
hlt
mov
ret
mov
jno
cmp
pusha
aas
pusha
clc
dec
mov
adc
inc
loope
into
mov
pop
rolb
lock
xchg
jo
repnz
pushf
sbb
dec
lret
cld
cli
lods
mov
sbb
xchg
test
xor
xchg
adc
iret
cltd
dec
aaa
jecxz
cwtl
sub
xchg
ficoms
ja
fmul
mov
insl
sbb
xchg
ds
inc
fwait
sub
iret
sbb
stos
mov
xchg
or
dec
mov
xorl
cmp
sub
dec
pop
or
aad
movsb
mov
out
jns
add
out
in
push
mov
xor
push
mov
lret
jmp
lock
jp
cmp
mov
jge
push
mov
inc
shlb
les
dec
cs
mov
push
pop
mov
cli
push
rcrl
push
test
mov
lods
mov
sbb
mov
mov
xchg
leave
mull
out
push
cmc
dec
fs
push
xor
push
sbb
inc
cmpl
sahf
or
scas
in
out
neg
xchg
out
xchg
xor
mov
adc
or
stc
pop
neg
sti
clc
mov
aas
inc
cmp
dec
dec
mov
arpl
adc
inc
xchg
add
add
jmp
mov
sbb
fstpl
dec
jnp
fwait
sbb
loop
mov
push
dec
jns
mov
movsb
fisubl
fnstsw
mov
and
push
cwtl
sbb
cltd
or
sub
imul
xor
and
test
cs
fsubr
pop
dec
and
mov
fsub
ss
add
mov
rclb
or
loopne
popf
mov
xor
test
push
jns
xchg
fst
mov
add
push
jbe
sbbb
fstps
push
int
adc
stos
dec
ds
mov
adc
cs
or
pop
or
mov
push
xchg
sbb
mov
sahf
mov
xchg
in
xchg
pop
jnp
jge
inc
nop
cltd
adc
jmp
inc
bound
xor
jo
in
andl
or
push
or
iret
cmp
or
sbb
jae
add
jnp
inc
lods
das
cltd
mov
inc
arpl
xchg
out
mov
push
nop
inc
inc
pop
ja
pop
add
push
jg
inc
mov
jb
mov
fbstp
loop
in
mov
repnz
ret
test
mov
lea
jbe
sbb
testl
dec
int
mov
ja
cli
mov
or
in
sahf
test
or
sti
aaa
xchg
sub
and
push
xchg
mov
or
dec
inc
pop
adc
jo
jge
mov
jp
mov
sbb
daa
mov
inc
dec
repz
into
incb
xchg
xor
xor
inc
fwait
aam
pusha
and
loopne
lahf
test
pop
xchg
pop
call
pop
notl
ja
pop
mov
mov
imul
or
repz
mov
dec
das
cmp
lret
pop
sbb
mov
and
aad
fsubr
std
lret
inc
mov
in
push
mov
inc
pop
xchg
repnz
xor
lods
cld
mov
outsl
add
cmp
pop
mov
add
addb
jp
adc
jb
pusha
inc
pop
sbbb
pop
sub
and
pop
and
clc
or
jmp
pop
aas
fistpll
and
sbb
aas
subb
lock
orb
jp
mov
popf
mov
popa
cs
nop
xchg
or
adc
ds
clc
push
push
mov
out
shll
movsb
repnz
mov
enter
cmpsb
scas
push
stc
ret
ds
cmpl
inc
sbbb
jns
xor
sub
sub
cmp
mov
lods
fs
outsb
imul
xor
std
mov
jo
mov
cmp
loopne
pop
push
fs
fsubs
cmp
in
mov
sub
std
arpl
inc
in
mov
xor
mov
ljmp
int
aaa
inc
sub
aas
rcrl
je
push
addr16
sbb
cmpsb
xor
and
push
inc
inc
mov
xchg
mov
test
jbe
test
iret
insb
stc
aad
sti
stos
mov
add
subb
and
xlat
stos
iret
fwait
inc
lret
jecxz
addr16
int3
dec
add
jb
xchg
scas
cmpsb
or
insl
sbbb
pop
rorl
fidivl
pop
dec
aam
fs
test
xor
xchg
xchg
dec
fldln2
push
test
mov
les
cld
lcall
lods
ror
mov
jge
push
push
dec
sub
aad
cmp
dec
stos
loope
outsl
test
je
xchg
mov
mov
xchg
aaa
xchg
or
dec
test
dec
xchg
and
insl
cmp
push
pop
cs
sub
jns
and
mov
stos
push
lods
pop
adc
or
data16
jl
xchg
adc
lea
jns
lods
push
add
ljmp
jb
lods
cwtl
in
mov
and
out
pushw
out
inc
popf
sub
push
sub
sbb
dec
mov
gs
jmp
mov
imul
push
xor
int3
cs
pop
mov
xchg
into
enter
pusha
push
repnz
stos
pop
data16
jns
push
imul
mov
push
out
push
xchg
addr16
enter
jl
dec
pushf
xchg
and
sbb
add
push
movsl
cwtl
jae
jp
mov
jp
inc
dec
xor
insl
push
pop
mov
inc
sub
dec
sti
mov
mov
mov
jge
sahf
xchg
fdiv
insl
jg
xchg
mov
aam
loope
adc
mov
int
cmpsl
loopne
in
xlat
rorl
xchg
leave
inc
dec
cmp
int
lret
mov
jae
xor
ds
aad
clc
lock
bswap
pop
and
sub
pop
and
push
jge
pop
inc
in
or
mov
mov
ds
or
mov
es
dec
cld
jl
jmp
cmp
mov
mov
notb
pop
and
dec
std
xor
jmp
push
hlt
cltd
sti
nop
xorb
lods
mov
fcomps
lret
mov
scas
aaa
xor
test
test
arpl
push
xor
mov
mov
and
mov
ret
push
cli
sar
cltd
ret
jne
mov
add
xlat
repnz
cmp
leave
dec
inc
loope
fcomps
mov
adc
add
push
cld
xchg
dec
loop
iret
subl
nop
cwtl
sbb
int
sbb
or
adc
pop
or
or
ret
les
jne
das
ljmp
ficomps
lret
pop
ds
jae
lods
push
adc
stos
mov
fcmovnbe
pop
fisttps
addr16
addb
push
out
pop
add
mov
mov
rcrb
fldl
inc
pusha
push
loop
lds
shll
incb
nop
mov
jbe
xchg
inc
test
xchg
sarb
mov
cmp
in
cmpsb
mov
mov
repnz
push
cmpsb
jnp
daa
das
cmpsl
dec
xchg
jge
lret
sbb
mov
add
test
jae
js
mov
inc
fidivl
ss
mov
xchg
jns
cli
sub
cmpsl
push
movsb
mov
fwait
push
lods
or
inc
lds
mov
inc
mov
imul
call
insb
aaa
mov
or
pop
jge
enter
outsl
stc
and
mov
sbb
inc
jg
mov
push
stc
popf
push
xor
mov
sbb
and
cmp
xchg
pop
or
xor
sub
incb
aad
lret
sub
lock
fwait
xchg
popa
outsl
into
ss
inc
and
jns
or
test
jae
xchg
mov
pop
or
and
inc
jno
sub
insb
fldcw
pop
inc
mov
lcall
sti
mov
test
dec
jge
mov
add
push
in
push
aad
push
loop
sub
loop
xor
test
lds
mov
jmp
sub
ret
xchg
aas
mov
mov
pop
add
mov
and
call
push
adc
fwait
int
jp
enter
push
movsb
mov
mov
movsl
popf
and
xchg
fstpl
xor
dec
jg
imul
cmpsb
sbb
jo
push
fs
push
pop
mov
push
xchg
int
mov
shrl
cmp
lods
pop
mov
add
movsl
mov
jmp
jge
mov
and
inc
ret
call
sbb
outsb
and
dec
sub
sbbb
or
call
mov
cmpsl
scas
cmp
inc
es
pop
dec
outsl
mov
cmp
lods
fistpl
test
insl
push
shr
cwtl
push
in
xor
xor
xor
leave
add
fwait
fs
xor
loope
push
rorl
imul
inc
inc
int
mov
push
push
fcoml
in
dec
js
mov
jg
cmc
popa
popf
insl
addl
ret
sub
test
push
mov
mov
and
hlt
mov
rcl
mov
sti
push
clc
lahf
or
sbb
arpl
jne
xor
pop
rorl
push
test
cmc
jbe
xchg
xor
aam
or
sti
out
inc
movsl
xchg
pop
adc
orl
dec
dec
mov
xchg
cltd
nop
imul
scas
jmp
push
push
sub
pop
xchg
rcrl
gs
mov
xchg
jb
inc
xlat
or
mov
pop
lahf
or
stos
popw
add
scas
add
cmp
dec
push
and
mov
or
pop
pop
push
fwait
xchg
jge
pop
mov
mov
mov
cwtl
sub
arpl
outsl
jnp
cld
js
fcmove
lcall
pop
mov
nop
jb
sbb
jmp
mov
loope
mov
cmp
fadd
push
cmp
jbe
sbb
push
ljmp
sub
test
add
clc
repnz
icebp
jns
insl
mov
sbb
orb
dec
pop
int3
lret
pop
loopne
cmpb
js
jne
lcall
fnstsw
push
mov
sub
shll
repz
push
leave
mov
lds
test
mov
push
imul
push
outsb
rcr
lcall
lea
mov
add
mov
test
or
dec
pushl
push
mov
xchg
xchg
inc
xchg
jl
xor
cwtl
je
push
enter
leave
add
adc
call
or
repnz
call
outsl
sbb
fistpll
sub
ja
add
add
mov
sbb
shr
jo
xlat
or
sbbb
out
lret
dec
inc
popa
icebp
xchg
cmpsl
jle
int
ljmp
pop
pop
jg
sbb
popf
test
xchg
inc
lret
out
pop
adc
nop
push
lock
enter
xlat
and
mov
shll
jg
cmp
dec
dec
sub
cmpsl
adc
iret
arpl
jns
movsb
lcall
adc
sbb
mov
out
out
jge
adc
push
push
scas
repz
mov
xchg
aas
push
mov
jbe
mov
pop
cmpsl
lret
mov
mov
xchg
in
xor
das
and
lret
xchg
sub
cmpsb
pop
add
aaa
xlat
scas
inc
sbb
push
jmp
addr16
sar
std
mov
movsl
icebp
sbb
js
xchg
fwait
sbb
movsl
mov
clc
pusha
jb
iret
out
ljmp
lock
xlat
mov
clc
rcll
add
add
aam
inc
es
fcoml
xchg
mov
mov
fsubrs
popa
dec
loope
jnp
push
pusha
loopne
arpl
sbbl
lock
xor
or
jne
or
ljmp
and
mov
mov
inc
or
sbb
sub
sbb
cmp
jecxz
jg
xor
dec
sub
xor
insb
loop
call
pop
lret
mov
aam
lahf
mov
out
aaa
scas
outsl
jne
inc
repnz
outsb
xchg
nop
sar
loopne
sbb
jl
sub
addr16
mov
in
sbb
pop
lcall
test
scas
or
pop
lock
in
inc
jmp
mov
sub
xchg
dec
stos
push
push
mov
jno
mov
or
hlt
pop
xacquire
jbe
mov
rclb
mov
shrl
dec
andl
xor
sarb
mov
test
fisttpll
and
jns
mov
xchg
xchg
cmp
add
cmp
push
leave
scas
pop
clc
js
inc
repz
movsb
les
mov
lahf
mov
movsb
int3
mov
add
nop
sbb
jmp
dec
xchg
mov
pop
test
jb
sbb
pop
mov
xchg
jnp
cld
inc
xor
or
dec
inc
popf
cld
push
rorb
pop
xchg
daa
mov
imulb
and
dec
sbbl
and
jns
mov
jmp
mov
mov
jae
xor
int3
shll
es
js
mov
cld
cld
push
add
sti
or
mov
jecxz
loopne
or
inc
out
jb
jb
call
xor
mov
cmp
lahf
lods
sbb
std
and
fsubrl
sub
inc
scas
jmp
and
clc
call
mov
repz
je
dec
cmpsl
add
aaa
psubusw
lahf
sub
or
imul
jl
jne
pop
ja
icebp
outsb
adcl
xchg
in
cmpsl
xchg
cmpsb
lock
cli
sarl
mov
popa
or
or
sti
mov
add
fld
in
dec
mov
test
xorb
xchg
ja
decb
out
push
mov
or
add
stos
hlt
aas
xchg
push
aaa
push
xor
and
cs
add
imul
sahf
scas
aam
xchg
mov
mov
loop
lea
lds
xor
sub
xchg
inc
mov
push
push
lret
push
jle
rol
mov
push
lock
jge
imul
xor
pop
jle
fiaddl
inc
popf
jg
or
shlb
mov
sbb
inc
mov
fisttps
cld
jge
andb
add
ss
popf
loope
imul
jb
sbb
rcr
sub
jns
pop
push
clc
into
in
pusha
sub
sti
sahf
rolb
mov
sub
ds
and
and
movsl
sub
xchg
xor
outsl
mov
imull
mov
sbb
cmp
xor
div
jle
adcl
push
xchg
push
rclb
aas
divb
icebp
scas
xchg
xchg
xor
cs
out
mov
xorl
rcrb
dec
mov
lds
push
mov
jnp
dec
pop
mov
movsb
sbb
adc
adc
jmp
in
adc
xchg
mov
ficoml
mov
aas
adc
mov
sbb
jecxz
int3
adc
mov
mov
movlps
pop
sarl
arpl
je
push
jbe
rcrb
inc
xchg
outsl
add
push
mov
ljmp
addb
dec
and
fidivrs
fisttps
adc
lret
and
add
cltd
cs
and
insb
pop
jb
jp
hlt
pop
add
pop
out
sbb
xchg
cmove
push
movb
jno
xor
and
call
popa
aaa
add
jnp
xorb
xor
sub
iret
or
je
out
mov
add
popf
bound
inc
jge
pop
dec
ds
pusha
or
bound
jp
mov
add
int3
ljmp
outsl
daa
xchg
imul
mov
mov
out
inc
mov
dec
aad
cmc
dec
popl
add
dec
inc
dec
sbb
stos
fcmovnu
stc
xchg
add
pop
jg
sub
out
push
push
loope
bound
popf
sub
mov
mov
insb
adc
in
pop
int
pop
outsb
sbb
pop
cmc
addr16
sub
xchg
or
fisttpl
or
jle
jno
add
sbb
mov
mov
jo
movsb
pushf
movsb
xchg
cmp
sbb
xchg
jp
loope
jmp
sbb
mov
pop
adc
call
repnz
and
and
lret
sub
xchg
ja
fs
sub
inc
push
int
shlb
out
and
pop
push
cmp
jl
out
mov
sahf
gs
mov
ret
xchg
pop
xchg
cmp
popf
mov
mov
mov
ss
pop
lss
mov
sub
and
loope
adc
jne
std
cmp
xor
and
xor
in
into
bt
fbstp
ljmp
adc
gs
cmpsl
cli
ja
jl
or
call
jmp
cmp
pop
imul
mov
sbb
pop
arpl
int3
xor
pop
mov
xorb
cs
inc
xlat
sub
xchg
aaa
jb
sub
bound
test
jns
in
enter
xchg
int3
inc
pop
push
test
hlt
test
push
rcrb
in
mov
data16
jne
popf
sbb
in
lods
or
mov
les
sub
jmp
int3
mov
sbb
jnp
loopne
add
add
mov
dec
mov
jmp
movsb
or
mov
pop
xor
std
inc
mov
adc
adc
aad
cs
mov
mov
mov
cmp
xlat
movsl
out
dec
fwait
pusha
mov
add
cwtl
sub
aas
ja
mov
pusha
sbb
adc
jmp
dec
xor
imul
cmp
ret
mov
ss
add
xchg
idiv
add
xor
mov
and
mov
cmp
pushf
mov
xlat
sbb
sub
add
xlat
repnz
arpl
pop
jb
pop
flds
pop
je
scas
sahf
mov
fdivrp
daa
mov
shlb
add
mov
or
test
sub
push
cmp
jmp
add
pop
out
add
mov
push
xor
mov
mov
push
xor
js
stc
fwait
in
inc
mov
pop
xchg
xlat
xlat
jns
out
loope
idivb
dec
jp
push
push
sbb
add
xor
jp
push
bound
pop
stos
push
repz
scas
adcl
repz
loop
iret
fisubrl
hlt
and
dec
leave
xor
test
push
movsl
sti
or
dec
mov
dec
adc
sub
adc
insb
in
mov
js
jo
or
jb
jp
sbb
cs
shr
dec
aas
jg
sbb
mov
dec
and
inc
jb
xchg
pusha
loopne
idivb
sub
pop
ret
cmpb
cld
jmp
adc
mov
movsl
jae
push
pushf
xor
mov
push
inc
sbb
icebp
dec
stos
sub
inc
mov
cmpsb
sub
inc
bound
jmp
lret
sbb
stc
dec
enter
or
lret
mov
or
pop
cwtl
jg
and
outsl
mov
sub
jnp
fucomi
add
in
stos
jne
sub
movsb
jb
orb
rcrl
mov
pusha
or
cs
les
lret
int
mov
in
fwait
sbb
pop
xor
enter
mov
and
in
inc
pop
mov
lahf
aam
fcomps
gs
loopne
std
sub
mov
add
loopne
and
test
gs
sub
push
jae
xchg
mov
and
or
sbb
jl
gs
mov
rclb
mov
xor
fistpl
adc
xor
and
in
ss
cmpsb
fsts
icebp
push
mov
addr16
sbb
xor
icebp
mov
stc
xchg
jl
iret
and
ret
add
ljmp
mov
ret
cmpsb
pop
xor
mov
dec
stc
mov
pushf
ret
out
add
cli
fwait
ss
push
ja
add
adc
inc
jl
popa
fdiv
out
mov
in
test
scas
aam
sarl
movsl
inc
idivl
shrb
push
xlat
imul
push
mov
cmpsb
in
aam
sarb
insl
std
addr16
popa
and
sahf
sub
jmp
dec
pop
jb
or
stc
sahf
sbb
push
jl
shlb
sbb
sti
fcmovb
dec
mov
push
dec
scas
sbb
push
mov
jae
and
fildll
fmull
mov
lret
test
mov
sbb
mov
out
jns
push
jne
jg
push
clc
sbb
mov
rdpmc
das
lret
jp
lds
cmp
popa
stos
mov
push
mov
out
dec
orl
jmp
add
sub
or
jnp
outsl
inc
cs
jnp
out
aad
mov
lret
in
cmp
add
push
stos
cmp
shrl
sub
call
adc
movsl
test
daa
rorb
sub
sarl
bound
pop
lock
xchg
pop
sub
xor
and
movsb
xor
add
imul
dec
sti
push
pop
jno
loop
in
pushf
ja
cmpsb
pop
in
or
sbb
mov
rol
sbb
cmp
dec
jae
lret
mov
dec
cmp
lcall
nop
push
les
sub
jecxz
push
cs
int3
pop
xor
idivl
jmp
std
in
or
push
sbb
cmc
aas
mov
inc
xchg
pushf
sbb
into
iret
push
xchg
leave
and
test
jb
ja
ljmp
andl
mov
mov
inc
pop
jne
adc
xor
repz
aas
push
sub
iret
sti
mov
mov
call
inc
xchg
jecxz
in
int3
popf
pushf
arpl
dec
and
and
lock
xchg
mov
jmp
pop
pop
xor
mull
push
lcall
rorb
add
in
sub
sbb
push
loopne
fidivl
push
int3
lock
nop
scas
or
adc
stc
pop
and
insl
mov
xchg
mov
js
inc
mov
adc
xchg
outsb
mov
lea
in
das
xor
mov
leave
jl
nop
cli
dec
lret
into
cmp
mov
mov
push
add
dec
aam
insl
mov
gs
out
gs
aam
mull
in
test
xchg
pop
ss
cmpl
ja
mov
push
inc
divl
jp
mov
test
dec
sahf
sub
jnp
mov
bnd
or
cmp
jmp
icebp
jne
out
push
push
fiadds
push
enterw
cmpsb
cmp
push
or
loop
cmpsb
add
fidivrl
cmp
pause
je
sarl
mov
xor
leave
cmp
out
ja
and
subl
pop
out
cltd
cmp
adc
je
inc
lahf
sbb
sbb
shrl
cli
cld
cmpsb
icebp
adc
lret
mov
or
repnz
out
in
xchg
int3
mov
or
cmp
push
sub
pop
mov
out
adc
dec
cmc
mov
sub
sahf
cmpsl
mov
movsl
or
js
mov
add
mov
enter
cs
add
mov
aas
aas
jae
xor
push
xor
out
lcall
push
outsb
xlat
inc
xchg
jecxz
mov
push
rol
lods
lods
mov
daa
jge
add
stos
pusha
mov
ficoms
mov
repz
pop
vmovupd
jb
popf
cmp
cltd
outsb
pop
cmpsb
out
out
mov
push
lods
xlat
push
adc
push
and
xorb
sar
xchg
and
ljmp
std
outsb
jb
dec
jne
out
push
cwtl
icebp
xchg
push
cmp
pop
dec
imul
mov
or
mov
push
sub
loop
pop
and
movsl
xor
out
cmp
add
mov
loop
lods
dec
adc
and
in
cmpb
std
push
adc
and
and
dec
roll
fcompl
adc
popa
xor
sbb
sbbl
mov
scas
or
push
bound
ss
stos
cmp
arpl
lret
push
or
enter
adc
rcll
fwait
inc
dec
arpl
shll
enter
sub
sbb
add
popf
aam
pusha
mov
and
divb
and
cmpsb
test
sarb
pop
dec
mov
sbb
in
jnp
dec
out
push
repz
jge
cmp
dec
fwait
jp
sub
orb
push
mov
mov
insl
push
dec
pop
mov
in
ds
mov
jecxz
scas
jns,pt
mov
ljmp
aam
xchg
push
in
enter
pop
or
insl
xchg
mov
mov
xchg
jne
or
insl
add
cmp
jno
pop
call
inc
push
push
cwtl
add
xchg
xchg
pop
jle
in
test
push
xor
std
scas
push
mov
out
or
sub
dec
ret
dec
xor
jp
aad
push
scas
jb
add
adc
push
sbb
test
dec
insb
lcall
push
loopne
adc
xchg
cltd
rorl
pop
lcall
mov
cli
into
dec
add
adc
movsb
push
xchg
sar
push
pop
xlat
xchg
out
inc
cmp
int3
stos
stos
insb
out
in
pop
or
pop
xchg
loop
xor
fcomi
std
sti
push
repz
into
pop
lret
shlb
push
mov
fisubrl
xchg
in
cmp
iret
adc
iret
daa
fcmovu
ret
test
xor
dec
js
dec
mov
popf
loop
lret
inc
mov
add
ja
scas
movsb
jecxz
sbb
pop
hlt
xor
aad
idivl
ret
imul
aas
jbe
push
cmp
jne
cltd
lahf
push
cmpsb
outsb
push
fwait
xor
cmpsl
sbb
dec
inc
movl
jl
stos
fidivrs
pop
in
repz
and
lcall
call
iret
je
cmp
xor
xchg
shlb
lea
lret
in
sbb
out
out
jb
xor
ljmp
shlb
jp
and
imul
lret
dec
mov
jnp
and
stos
int3
sbb
scas
repz
fistpl
mov
mov
mov
mov
and
push
sub
scas
mov
cs
push
and
into
push
add
jmp
pop
mov
cmp
xor
cs
in
pushl
sahf
pop
popf
xor
mov
inc
pusha
cmp
test
and
sub
xor
pushf
pop
and
push
hlt
or
push
cmp
in
ret
testl
sahf
dec
dec
dec
cmc
pusha
mov
and
mov
add
mov
clc
rorb
pop
fdivr
pushf
xor
jbe
sbb
jecxz
aaa
mov
or
leave
js
dec
push
testb
aas
shl
adc
or
xlat
jmp
fwait
mov
pop
aas
push
jp
daa
lahf
arpl
ds
mov
clc
or
subb
lock
jp
icebp
adc
sub
sub
mov
cwtl
leave
pop
es
lcall
jbe
jle
push
xchg
ret
ret
dec
lods
imul
mov
fwait
ror
pop
jae
jno
lret
xor
jmp
out
xchg
jb
push
fsubrl
leave
add
pop
inc
fnsave
or
sub
shll
outsl
add
jmp
xchg
cmp
lea
aaa
std
mov
sbb
out
mov
das
pop
cld
mov
ror
jns
lock
mov
inc
lods
or
repnz
cmp
repnz
sbb
je
stos
aas
out
mov
mov
js
repz
dec
es
or
outsb
xor
call
daa
adc
adc
pop
mov
pushf
insl
inc
mov
add
cmp
movsl
jg
xlat
mov
xchg
pop
dec
jnp
in
bound
xor
scas
mov
adc
push
int3
idivl
sti
and
add
pop
daa
out
dec
outsl
inc
fisubs
ja
pop
shlb
lcall
arpl
cmp
adc
mov
mov
xor
andl
jg
enter
lret
add
std
fimull
jecxz
out
push
loopne
add
dec
push
mov
pop
cli
orl
test
mov
pop
fldcw
mov
outsl
shlb
xchg
pop
je
repnz
add
pop
es
add
jb
push
cmp
dec
movsl
cmp
inc
sbb
jo
mov
xor
jnp
mov
push
jge
cltd
cwtl
sbb
xchg
repnz
out
push
fwait
int
inc
lods
cmc
pusha
dec
xchg
ja
mov
loop
xor
mov
ljmp
call
push
mov
in
mov
ljmp
cli
adc
scas
je
js
sbb
lods
mov
sbb
pop
and
push
xor
das
sub
adc
mov
push
dec
stc
call
cld
cwtl
rol
cmp
push
cmp
xor
xlat
dec
sub
fstpl
into
les
or
in
jp
out
jae
rorl
loop
or
lods
mov
sti
inc
sbb
push
jns
push
stos
out
rcrl
xchg
xchg
sarb
es
adc
xchg
xchg
rcrl
mov
pop
scas
subb
mov
clc
cmp
sbb
jge
or
cmp
mov
popf
push
add
out
mov
mov
pop
jmp
std
mov
cmp
pop
add
pop
push
in
sub
and
jecxz
lcall
pop
fidivs
movsl
frstor
inc
imul
insb
and
fistpl
cs
sbb
fcoms
push
pusha
daa
mov
lods
push
mov
testl
jl
or
bound
dec
sbb
xchg
jo
xor
pusha
insb
lret
lods
xchg
jge
fs
in
icebp
xchg
add
and
mov
das
popf
mov
push
mov
daa
xchg
xor
add
push
sub
fyl2xp1
cmpsb
mov
ss
add
pop
lods
inc
outsb
jb
lahf
push
aam
push
shrl
ficoml
imul
adc
out
dec
rcr
and
xchg
pop
lock
xchg
mov
jl
jmp
push
hlt
fiaddl
cld
mov
sub
repnz
sbb
fstpt
stc
xchg
mov
jo
icebp
and
in
jnp
inc
add
sub
and
iret
cmp
out
dec
sub
sbb
cmp
fcoml
xor
sarb
daa
adc
in
repnz
icebp
dec
sub
sarl
xorb
dec
in
mov
and
jo
mov
ret
push
loop
call
movsl
mov
mov
push
test
psubq
scas
jg
sbb
cmpsb
push
lcall
inc
dec
cli
and
jp
or
dec
jp
pop
repz
and
mov
or
mov
addr16
push
add
push
jge
cmp
mul
mov
setb
pop
daa
mov
pop
dec
xlat
data16
xchg
and
insl
in
mov
in
and
scas
inc
lods
and
dec
push
stos
leave
punpckldq
addr16
cmpsb
das
arpl
mov
sahf
xor
and
cwtl
xchg
pop
and
dec
mov
cld
popf
shl
xchg
cmpsb
int
push
adc
jnp
cmp
inc
mov
or
jnp
push
dec
fbstp
aam
mov
in
dec
push
add
scas
adc
clc
add
lock
fwait
pushf
mov
test
jmp
push
popa
test
clc
ret
shll
mov
add
cwtl
aam
mov
xor
mov
mov
cmp
rorl
stc
mov
and
cli
fmull
in
xchg
pop
mov
inc
xchg
imulb
lods
inc
outsb
adc
push
mov
shlb
xor
notw
inc
xor
mul
sub
push
pop
loopne
movsl
not
in
orl
mov
add
lods
lods
js
or
push
sbb
aam
mov
push
xchg
outsl
pop
imul
out
gs
dec
call
loope
ret
inc
xchg
add
and
sbb
icebp
xor
mov
mov
pslld
test
xchg
sahf
shll
push
sub
out
repz
xchg
sbb
adc
pop
or
xor
dec
pop
ljmp
mov
aad
sbb
scas
or
and
iret
adc
lcall
sbb
push
scas
sbb
xchg
adc
sbb
pop
lods
flds
sub
mov
cmc
and
or
repnz
mov
inc
stc
mov
mov
cli
nop
mov
int3
mov
call
add
scas
xor
dec
fnsave
pop
xchg
repz
lods
rorl
push
addr16
jle
push
xchg
stc
pop
cs
repnz
and
jl
js
pop
jl
cmpsl
and
shll
pop
fwait
roll
add
aaa
int3
pop
cmp
enter
jle
or
jo
or
and
mov
sbb
inc
imul
iret
xchg
outsb
pop
jne
add
clc
sbb
mov
inc
mov
inc
mov
jl
mov
push
push
aaa
cmpsb
push
dec
test
xor
adc
mov
jns
mov
shll
mov
pop
mov
and
cmp
lds
or
pop
push
mov
jl
int
mov
dec
outsb
and
and
jmp
push
call
mov
imul
fldt
fcoms
test
leave
mov
rcll
mov
fnstsw
ds
mov
inc
inc
cmp
dec
xor
int3
jl
test
pop
sbb
adc
xor
dec
sbb
add
rolb
cltd
pop
push
fwait
jb
mov
cmpsb
arpl
adc
adcb
dec
insl
or
and
sbb
int
popf
scas
dec
push
cmc
xchg
and
test
sahf
sub
ret
out
sub
dec
addr16
sti
nop
sbbl
into
and
movsb
dec
out
movsl
hlt
cs
dec
aaa
and
push
sbb
push
mov
and
add
dec
mov
fcmovb
dec
xchg
andb
fmull
adc
push
jnp
xor
aad
ret
push
gs
inc
aas
cmp
and
jecxz
or
and
xor
ret
pop
inc
bound
bound
pop
inc
lcall
jo
dec
push
push
sar
mov
push
cmp
pop
std
cmp
xchg
add
mov
xor
movsb
mov
xor
cwtl
cmp
pop
ret
dec
inc
out
xchg
xlat
xor
aas
push
mov
mov
inc
out
push
mov
jb
xchg
and
xchg
adc
lods
sbb
adc
mov
inc
jp
pop
mov
pop
inc
mov
stos
clc
popa
pushf
jne
rcrb
repz
adc
cmp
mov
mov
or
outsl
cli
jae
xor
fucomp
and
and
lahf
cmpsl
fadds
pop
sbb
cmc
xor
pop
movsb
addr16
cmpsb
xor
int
sub
xor
add
loope
jnp
mov
cmp
out
mov
push
push
xor
adc
in
shl
or
xchg
jmp
orb
or
dec
mov
outsb
xchg
sub
loope
pop
mov
lcall
repz
push
sbb
test
rol
adc
add
add
sbb
cmp
out
pop
pop
lds
mov
dec
add
push
dec
cld
cmp
pop
out
jae
fisubrl
pop
shl
shll
pop
inc
push
cld
push
sahf
add
push
mov
jbe
xchg
mov
sbb
sbb
or
outsl
add
jmp
jge
enter
inc
nop
dec
cmp
inc
inc
repnz
insb
into
imul
xor
push
imul
enter
lods
popf
cmpsb
adc
mov
jle
or
aad
mov
mov
mov
lahf
or
int3
cmp
cmp
and
sbb
pop
mov
in
loop
jmp
jo
out
inc
adc
xchg
inc
or
mov
out
mull
jecxz
xor
leave
jge
int
pop
inc
sub
daa
and
cmp
lods
ljmp
iret
daa
subl
inc
int3
dec
jmp
into
mov
push
adc
xchg
mov
out
movl
jne
dec
push
das
cs
mov
inc
add
pop
dec
in
xchg
lret
push
cmp
ficomps
test
xchg
jne
mov
aas
jg
xor
xor
sub
cmp
cmc
inc
lahf
divl
add
jg
int3
mov
ss
mov
mov
ficompl
adc
xor
fistl
add
mov
movsl
call
std
hlt
xchg
shlb
aas
jno
mov
out
push
outsl
mov
nop
into
ffree
lods
and
arpl
push
nop
jb
push
cmp
and
pop
dec
pop
xor
jno
jge
mov
pop
cmp
adc
scas
push
cmpsl
xchg
out
int3
and
shlb
pop
sahf
clc
enter
pusha
cmp
sahf
andb
xchg
dec
ret
imul
out
das
push
subb
out
xchg
or
test
repnz
stc
add
imul
outsl
xchg
cmp
sub
push
es
int
lea
ud2
dec
pop
cmp
fidivl
mov
and
subl
xchg
push
mov
dec
push
mov
lahf
inc
test
dec
push
jb
sarl
push
and
jle
mov
sub
pop
or
aas
rorb
pop
bound
push
jle
sahf
ret
fcomip
into
stos
mulb
push
fcomp
data16
orl
jno
mov
movsl
insl
xchg
xor
jne
lds
mov
jnp
cvtdq2ps
lret
neg
jmp
aad
cs
pop
dec
ds
mov
and
outsl
and
pop
test
js
scas
syscall
fsubs
shlb
imul
lahf
xor
in
rorl
sbb
rorl
and
jns
cwtl
scas
xchg
mov
ret
popf
push
pop
movsb
dec
sbbb
pop
in
iret
in
enter
aam
pop
add
and
or
lods
mov
in
ss
sub
and
cmp
les
sub
jl
andl
and
out
fisttpll
loop
icebp
mov
pop
jg
cwtl
sub
inc
sub
lods
jmp
repz
lea
push
dec
cmpsb
clc
imul
aas
cld
dec
mov
add
inc
or
and
xchg
icebp
cmp
or
push
es
sub
and
ss
stos
aaa
test
in
cmpl
mov
mov
pusha
push
jle
push
dec
gs
xchg
repnz
mov
mov
cmc
sbb
add
adc
insl
stos
push
in
fnstcw
rcll
gs
xor
aad
fcoml
shrb
dec
mov
ror
test
orl
in
aad
dec
or
mov
dec
or
imul
adc
jecxz
sub
pop
xchg
lcall
push
sbb
cmp
inc
jne
mov
leave
cmpsb
xor
je
push
add
or
xchg
cmp
mov
testl
out
sbbb
scas
mov
stos
mov
push
xchg
es
aad
sub
movsl
add
push
std
xor
xor
xchg
cmp
xchg
xor
dec
sbb
jmp
xchg
out
cltd
sbb
and
pushf
dec
mov
cwtl
mov
pop
or
xchg
iret
add
cs
cmp
data16
mov
cmpsb
push
es
xchg
dec
rorb
add
adcl
mov
imul
inc
sub
aad
and
push
add
aaa
aam
lret
out
std
cmp
sbb
lock
jno
rol
mov
sarb
lds
and
pop
jne
push
out
cs
push
push
inc
or
fs
xchg
enter
into
xor
pushl
or
lret
adc
int
je
lea
int
xor
filds
mov
orb
int3
or
sbbl
pop
inc
stos
pusha
setne
lcall
jno
nop
test
sbb
mov
je
cmpb
aas
fistpll
sbb
repnz
loop
inc
push
pop
adc
adc
pop
fstp
push
test
fucomi
xor
sti
add
or
ror
movsb
outsb
ficomps
sbb
rolb
test
stc
or
pop
js
dec
push
clc
inc
sub
je
mov
mov
cmp
lcall
sub
push
gs
inc
rcl
rorl
cs
fstl
roll
ds
jns
movsl
and
stos
int
fcmove
repz
add
adc
jnp
push
fisubrs
imul
test
mov
fcomip
fstpt
pop
lahf
lret
add
jnp
pop
lcall
gs
gs
sub
arpl
push
jno
push
add
mov
jg
sub
stos
ds
outsl
aas
sub
or
sbb
bound
push
push
fdivs
xchg
fsts
cmp
lret
js
inc
stos
sbb
mov
repnz
ss
and
das
enter
mov
and
push
roll
mov
mov
xor
sub
sub
loope
inc
xchg
and
or
adc
mov
fsubs
je
pop
cmpsl
in
icebp
jnp
stos
push
repnz
adc
out
aad
das
pop
pop
pop
pop
mov
jb
pop
pusha
mov
mov
mov
lahf
pop
xchg
ret
imul
into
adc
adc
insl
xchg
and
jo
push
test
mov
mov
ja
pop
cwtl
rcl
mov
popf
mulb
cmpsb
mov
leave
jmp
adc
in
dec
ret
push
lret
xor
sub
jge
cmp
pop
add
in
dec
shll
incl
sbb
pop
ret
vmovdqa
hlt
push
iret
jg
inc
adc
imull
daa
inc
movsb
xchg
mov
xor
inc
dec
gs
out
dec
jo
cld
or
iret
pop
add
rclb
iret
outsb
sub
lods
enter
ret
sub
addr16
pushf
imul
mov
mov
or
dec
adcl
fbld
xchg
inc
add
xchg
jecxz
cmc
push
sbb
loope
xchg
stc
es
clc
push
bt
lcall
xor
decl
or
and
arpl
mov
pop
insl
xor
arpl
cmp
cmp
das
adc
add
mov
pop
push
andl
push
pop
inc
out
adc
mov
hlt
shll
dec
mov
jb
xor
int3
or
out
pop
jns
mov
push
dec
cwtl
mov
sbb
enter
push
int
insl
inc
mov
push
sub
inc
sbb
inc
hlt
jmp
dec
inc
adc
sbb
pop
jnp
cli
cmp
fildll
pop
cmp
pop
add
dec
xor
loop
fnstsw
xor
xchg
adc
push
loop
enter
or
adc
idivl
mov
pop
ds
xor
shrl
xor
je
jae
dec
aam
sub
repnz
dec
out
aaa
inc
pop
call
sub
insl
add
lahf
sbbl
pop
add
mov
pop
push
sahf
andb
jns
sti
fdivs
and
cmpsb
push
xchg
in
popl
push
fsts
mov
dec
cmp
imul
and
sub
xor
orb
loopne
push
testb
sbb
adc
out
faddp
mov
aam
mov
xchg
jmp
fwait
and
fxch
stos
stc
mov
in
push
aam
cmp
mov
mov
lret
rol
and
scas
out
rcr
lret
lea
mov
loopne
lods
dec
cli
or
xorl
cld
movsb
push
les
pop
xchg
icebp
cmp
stos
pusha
subl
aam
dec
pop
jg
ret
lea
outsb
fstl
or
inc
mov
rcr
addr16
inc
movsl
imulb
jp
xor
inc
pop
jb
movsl
push
in
mov
mov
es
fs
add
dec
fdivs
hlt
loop
mov
mov
sbb
cmpb
decb
mov
rcll
mov
jb
cmpsb
jno
lahf
sti
and
into
jo
dec
push
mov
stos
sbb
ds
add
aad
in
lds
xor
pop
cmpsl
push
push
cwtl
xchg
mov
aaa
cmp
fistps
jecxz
adc
shrb
cmpsb
mov
xchg
insl
push
psubq
mov
adc
push
cld
and
mov
xchg
stc
cmpsl
and
cs
ds
mov
out
xor
pop
cmp
fdivrl
je
xor
ret
mov
lret
mov
aas
clc
push
mov
pop
push
fstps
mov
dec
cmc
mov
sahf
add
inc
pushf
adcb
or
das
mov
out
sub
loop
shl
or
or
ljmp
xor
fidivl
cmpl
fsubp
insl
jne
sar
hlt
mov
test
mov
jecxz
pop
mull
dec
enter
inc
sub
in
in
sti
pop
mov
fsubl
or
pushf
shl
icebp
xchg
mov
or
add
add
or
add
cmp
imul
mov
mov
stos
lock
sub
sub
fsubrl
lahf
dec
adcl
xchg
fisttpll
inc
push
jno,pn
cld
adc
sti
mov
sub
add
insb
cmp
test
mov
fsubs
cmp
add
imul
push
stos
notb
stc
xchg
lar
iret
aam
pop
cmp
push
pop
test
cmp
mov
jle
xchg
jmp
xchg
add
icebp
into
xor
dec
or
jmp
insb
sub
out
es
aaa
inc
adc
loope
shl
icebp
push
cs
sbbl
mov
mov
mov
ljmp
sub
fcom
adc
add
cmp
inc
jnp
adc
subb
jb
cld
lcall
inc
sbb
inc
inc
sub
in
pusha
add
add
push
jle
imul
ljmp
icebp
shrb
adc
addr16
sub
pop
mov
add
fcompl
fcmovu
sbb
loop
add
lds
outsb
sbb
adc
in
cmpsb
ret
push
pop
ficomps
cli
repnz
fnsave
inc
jae
sub
lret
js
cmp
xchg
inc
or
xor
mov
sbb
cltd
fdivp
push
daa
vpextrq
movsl
adc
pop
pop
xchg
inc
mov
lock
mov
adc
cli
loop
pushf
cmp
ss
mov
jmp
or
dec
fidivrs
xchg
jae
filds
data16
sbbl
dec
sub
test
push
sbb
xchg
clc
inc
jno
ja
jge
or
cwtl
mov
outsl
sahf
rorl
xorb
gs
daa
nop
cmp
test
jb
pop
mov
push
fidivs
nop
xchg
rolb
cmpl
mov
or
movsl
dec
mov
add
inc
mov
fnsave
jecxz
imul
rol
add
imulb
pop
cmp
cmpb
fstps
dec
js
cmp
cmp
out
inc
and
cmp
out
adc
fisttpl
out
cli
jne
cmp
enter
ja
sbb
je
outsb
lret
adc
ffreep
std
xor
and
mov
and
jnp
cmp
or
orl
notb
inc
jns
in
out
iret
and
inc
cmp
pushf
push
jp
cld
iret
sar
pushf
mov
add
cmp
inc
imul
into
daa
mov
push
ja
inc
sub
xchg
push
insl
fsubr
jmp
and
outsb
outsl
cmpb
push
repz
jne
lcall
rcrl
mov
jmp
popf
popa
ljmp
mov
xchg
push
out
jb
into
sahf
cmp
sbb
mov
addr16
xor
stos
and
clc
pop
mov
shlb
dec
ret
clc
jmp
lds
jno
nop
out
cmp
add
sub
inc
dec
ja
mov
out
stos
or
cltd
rorb
mov
ret
pop
mov
test
cmp
loop
not
pop
mov
and
cmc
xchg
xchg
inc
sar
fcmovne
push
sub
xchg
sub
nop
pop
xor
jbe
add
out
xlat
jl
sti
sti
pop
mov
call
mov
cltd
std
ficomps
sbb
push
out
xchg
push
sahf
jp
cwtl
pop
adc
arpl
mov
popa
push
mov
test
pop
out
les
jecxz
xchg
mov
sub
popa
jno
cld
pop
call
cmp
sarb
pop
out
lods
mov
cmpsl
jo
sub
xchg
popf
ds
mov
loop
and
stc
push
in
xlat
aaa
mov
xor
insl
jae
rcrl
xchg
js
js
mov
cs
jns
int
repz
pop
push
addl
add
mov
pop
xor
fistpl
jo
repnz
add
pushl
adc
pop
scas
xor
js
pop
xchg
stc
sbb
and
sbb
pop
pop
push
adcl
fsin
enter
add
and
leave
push
out
sbb
xchg
mov
fsts
nop
cmp
sti
inc
xchg
shlb
movb
movsb
cs
cmpl
xchg
mov
dec
sbb
mov
mov
xchg
or
xchg
icebp
lcall
xor
push
movsl
aaa
xor
jg
leave
jl
daa
xchg
push
mov
scas
stc
test
test
mov
pop
cmp
add
rcl
jp
or
rol
int
faddl
inc
and
aam
inc
push
sti
stc
pop
sub
ljmp
js
mov
icebp
repz
pop
mov
pushf
out
jl
cmpsb
or
pop
imul
movl
sbb
push
dec
jne
stos
lret
lcall
sbb
xchg
cmp
push
pop
leave
inc
adc
jl
outsb
cltd
fistpll
xor
sub
mov
fs
fldenv
jne
insl
loope
movsl
fistl
push
lret
arpl
in
mov
imul
xchg
cmp
sbb
fbstp
sbb
add
or
xchg
aaa
mov
stc
xor
mov
aas
sbb
sbb
dec
andl
inc
xor
push
lds
sti
cmp
push
add
dec
imul
divl
mov
mov
lea
fcomps
sub
icebp
movsl
shl
xchg
bound
jp
and
into
mov
adc
pop
jbe
incb
inc
xchg
pop
ja
ds
faddp
or
adc
insb
mov
inc
dec
push
push
fstpl
loop
mov
in
addr16
aam
adc
leave
stos
mov
out
mov
shrl
dec
mov
loope
jl
test
shrb
iret
and
jne
scas
pop
or
gs
sbb
ljmp
rorb
cmp
sahf
xchg
js
dec
dec
es
scas
testb
out
divb
movb
jecxz
cmp
pop
js
fisubl
sbb
mov
xchg
jo
mov
shll
hlt
mov
xchg
inc
aaa
inc
or
rorl
js
daa
jo
faddl
add
xor
out
sub
sahf
inc
jge
push
pop
fcoml
cmp
mov
mov
sub
cmp
notb
jnp
rol
stos
int
mov
xchg
in
sbb
hlt
jne
stos
imul
mov
bound
stc
and
hlt
sarb
ficomps
push
xchg
push
cmp
fimull
xor
dec
outsb
lods
into
jbe
xchg
cwtl
inc
int3
jne
popl
xor
inc
mov
or
inc
cmp
jno
repz
and
int3
in
push
cmp
cmc
and
push
test
xor
sbb
iret
sbb
jb
mov
push
icebp
sub
loopne
and
aad
mov
into
pusha
fldl
sar
mov
popa
xchg
pop
ret
insb
push
rorb
pop
aam
xchg
out
rorl
fucomip
sahf
ds
and
cmp
add
fidivrl
lcall
sub
mov
jb
sbb
mov
pop
cmp
fists
xchg
sbb
mov
ss
mov
mov
mov
mov
sub
fsubl
and
add
sub
sbbl
sbb
cmp
std
scas
stc
add
and
push
xor
jp
xchg
insb
xchg
xchg
and
cmp
xor
dec
fwait
orb
fiaddl
xchg
sbb
mov
out
adc
add
adc
push
mov
pop
negb
lds
out
lods
in
mov
mov
dec
mov
jg
sub
adc
je
add
cmpsb
xor
orb
lea
stos
jp
inc
paddsb
cld
fwait
enter
incb
in
mov
mov
popa
jnp
sbb
in
mov
data16
insl
mov
cltd
lock
loopne
add
cwtl
loopne
xchg
ja
sub
jg
popf
frstor
call
fisubl
js
in
gs
fimull
adc
aad
xor
std
jnp
adc
jb
jmp
mov
ja
pop
and
pop
fsubl
inc
aad
fidivl
or
pop
dec
lds
call
fs
inc
lods
mov
imul
jl
jns
jbe
lds
incb
xor
aas
jg
xchg
xchg
cmp
icebp
sbb
in
dec
push
sbb
mov
mov
xorb
push
mov
adc
push
mov
hlt
and
or
push
js
sub
inc
out
das
lods
test
cli
cli
sub
push
add
xor
push
mov
add
call
repz
sbb
lock
sub
std
not
mov
cmpsl
mov
in
add
mov
cmp
ja
cmpsb
sub
adc
fcmovb
mov
movsb
mov
mov
mov
bound
sub
jbe
xor
gs
into
fs
shlb
inc
cmp
sub
loope
cli
sub
dec
imul
push
fs
inc
mov
push
add
mov
popa
cwtl
dec
jl
shll
sub
ljmp
jp
push
adc
and
xchg
in
xchg
insl
jmp
mov
mov
or
bound
addb
stos
mov
pop
iret
push
xchg
in
mov
mov
xor
xor
imul
xor
adc
aam
mov
or
and
pop
dec
adc
and
push
xor
xchg
es
pusha
cmp
or
aad
sti
and
lcall
pop
jp
aas
jp
pop
pop
stc
sahf
js
pop
inc
in
sti
add
jno
leave
or
stos
mov
cmp
adc
add
jmp
and
popa
push
inc
enter
xchg
jge
stos
jp
or
mov
xor
ret
fwait
and
inc
test
jmp
repnz
add
jns
sbb
cmp
adc
mov
unpcklps
push
lret
and
cli
lods
pop
in
jnp
mov
out
into
cli
nop
sahf
push
push
adc
imul
jae
gs
not
cmpsl
fwait
cmpsb
and
xor
imul
jge
pop
mov
daa
sub
es
xor
rcll
mov
lahf
mov
dec
fnsave
ret
cmp
lods
insb
ror
or
fisubrs
fcmovbe
cmp
in
push
pusha
mov
mov
or
cwtl
adc
mov
dec
repz
mov
inc
push
xor
test
icebp
mov
mov
in
adc
inc
pop
adc
xchg
in
in
mov
jp
lret
pop
rolb
or
and
test
std
sub
pop
xchg
xchg
mov
mov
arpl
sub
push
rorl
es
push
or
inc
data16
ljmp
insb
gs
mov
ret
stos
int3
test
adc
or
bound
pop
jecxz
or
das
inc
cmp
les
add
es
sti
cmp
and
mov
scas
or
data16
test
or
icebp
lea
in
je
fwait
clc
jnp
push
gs
dec
cmp
fisubs
inc
sbb
dec
push
jnp
mov
jns
dec
cmp
mov
jle
jno
fmul
mov
fidivrl
jb
xchg
pop
lea
cmp
cs
mov
es
push
mov
mov
ss
in
popf
or
or
mov
rorb
stos
push
jno
gs
ret
mov
pop
pop
iret
inc
add
icebp
imul
mov
jp
outsb
and
icebp
shll
mov
mov
or
sbb
movsl
xorl
and
mov
into
dec
cmp
add
inc
inc
adc
stc
fbstp
sbb
std
push
stc
gs
xor
je
adcl
je
leave
push
jg
push
cs
inc
lahf
pop
or
adc
std
sub
outsb
pop
call
lret
dec
ret
dec
and
inc
imul
mov
stos
inc
dec
ljmp
fimuls
pop
fisubs
push
sub
mov
xchg
mov
pushf
cmp
sbb
out
rcrl
cltd
cmp
xor
xlat
mov
and
mov
pop
and
pop
add
mov
push
mull
jp
jecxz
dec
rorb
inc
cld
xor
loopw
jmp
jns
mov
fistl
or
lock
mov
outsl
add
imulb
cld
fisubrl
mov
out
mov
and
leave
push
mov
es
jo
out
popa
adc
inc
mov
sbb
lret
xlat
add
int3
push
cmp
dec
pop
inc
ljmp
ds
ja
stos
loop
or
mov
adc
sub
push
adc
aam
cmp
inc
hlt
dec
and
jmp
xchg
sub
fsts
adc
xor
push
add
inc
imulb
imul
push
dec
test
mov
mov
push
jmp
aaa
lcall
scas
mov
call
mov
mov
or
sahf
ret
push
inc
xchg
or
std
mov
pop
or
mov
jns
cwtl
inc
dec
insl
mov
mov
imul
push
jp
jg
fcom
loop
mov
fnstenv
mov
or
in
mov
sahf
fwait
repnz
call
lret
jle
je
dec
mov
mov
orl
fidivrl
push
xlat
mov
loope
aaa
mov
nop
add
sbb
iret
fdiv
push
dec
fdivs
sbb
insl
out
call
push
and
push
jo
test
scas
imul
mov
out
je
push
fdivs
jmp
repz
aam
pop
shlb
push
pushf
pusha
out
mov
and
push
mov
jbe
leave
imul
or
ret
mov
rorl
sbb
insl
into
adc
sbb
aad
or
jns
sub
jbe
outsb
aad
pop
jno
aam
inc
lea
adc
mov
ffreep
movsb
in
jle
cwtl
xchg
adc
push
lahf
inc
mov
add
repnz
stos
jmp
cmpsl
leave
scas
add
mov
inc
fadds
das
popa
jb
fwait
mov
sub
xor
mov
sbb
into
sbb
jmp
pop
pop
push
cltd
push
xor
pop
push
cwtl
jo
pop
xlat
mov
push
gs
or
hlt
in
xor
sub
lds
fistl
inc
xchg
mov
imul
sub
stc
aad
std
and
repnz
lahf
dec
outsl
cld
dec
sbb
mov
ljmp
mov
push
movsb
insl
inc
in
inc
sbb
out
pop
or
bound
add
mov
add
sbb
mull
in
adc
stc
and
lret
sbb
push
pop
push
sar
fists
adc
shlb
and
aas
add
pop
cmpsb
mov
mov
outsl
call
fisubrs
addr16
je
ss
fcomps
sub
int3
mov
pushf
cltd
lods
xor
not
mov
xor
jb
and
lods
imul
cmp
insl
popa
dec
lock
dec
fisubrl
pop
pushf
sahf
test
pop
out
add
mov
sbb
out
scas
xchg
mov
sarb
mov
nop
jg
add
mov
mov
cltd
arpl
nop
mov
or
lods
dec
xor
mov
mov
bound
in
test
lock
xchg
xchg
adc
add
pop
dec
inc
mov
pop
js
cs
in
or
jl,pt
jmp
cmp
dec
inc
jecxz
fists
adc
sub
idivl
ss
pop
inc
jo
adc
add
cs
mov
sahf
pop
adc
or
sbb
mov
aad
mov
mov
cmpsl
int3
sbb
insl
ret
push
aas
int
jbe
in
mov
js
subb
callw
insb
pop
ljmp
popa
rcrl
fcmovbe
outsl
cmp
mov
xchg
sahf
dec
bound
loop
inc
fildll
subl
mov
pusha
lea
inc
pop
pop
inc
jno
imul
mov
xlat
enter
stc
out
sub
pop
into
sub
pop
cmp
rorb
scas
push
mov
adc
xchg
xor
push
mov
sahf
jp
push
dec
push
dec
fisttps
sub
test
inc
iret
cmpsl
movsl
pop
cmpsl
mov
xor
jnp
call
sbb
adc
or
sub
sub
sbb
mov
pop
push
out
sti
negb
adc
pop
mov
sub
sbb
pop
xchg
popf
out
mov
xlat
push
jge
aad
pop
pop
xor
shrb
enter
lods
and
sub
inc
stc
mov
sbb
push
jmp
sti
xorl
jl
mov
lds
xchg
mov
dec
jecxz
pop
pop
adc
pop
dec
and
fidivs
lret
shlb
xchg
repz
xor
fistpll
stos
ficoms
pop
push
mov
stc
in
mov
test
popa
decb
test
shlb
loop
jne
pop
add
fnstsw
and
jecxz
call
rolb
pop
fs
fimuls
ljmp
das
movsb
hlt
mov
mov
hlt
xor
das
pushl
dec
cmp
sub
add
arpl
push
add
mov
pop
cmpb
test
out
stos
push
pop
cmpb
aas
div
outsl
test
pop
pop
pop
push
insb
and
leave
mov
cmp
es
loope
xchg
idivl
in
mov
push
pop
xor
xor
cmp
pop
cmpl
enter
imul
dec
je,pt
outsb
dec
pop
sbb
testl
inc
and
pop
push
pushl
scas
mov
inc
xchg
add
mov
stos
fidivrs
mov
ret
jnp
movsl
xchg
pop
test
or
cmp
jmp
fdivr
mov
in
xlat
cwtl
mov
mov
cmpl
sti
pop
lock
push
rcl
std
add
add
mov
lds
bound
mov
cmp
scas
or
std
inc
xorl
mov
out
xchg
ja
mov
mov
dec
or
test
sub
int
pop
daa
insl
je
filds
push
add
jno
adc
stos
xchg
push
xchg
mov
sub
sbb
test
and
lret
gs
pop
loop
gs
jge
cmp
lea
shrb
cmp
mov
adc
lods
inc
shll
inc
ljmp
sub
fcoml
fistl
lock
xor
aas
icebp
fnstcw
dec
cmp
icebp
jbe
pop
jno
adc
inc
sbb
lcall
xchg
jle
cmp
mov
or
pop
ja
jns
psubsw
push
mov
addr16
pop
scas
dec
fisubrs
andl
sti
add
inc
sub
into
cs
das
stos
and
xchg
sbb
les
loope
cmp
dec
adc
push
aas
sub
das
sti
insb
icebp
adc
outsb
add
je
inc
outsb
jle
xor
jg
xchg
adc
cmpsb
push
fisttpl
std
inc
fs
psubb
inc
ja
imul
inc
cmp
mov
mov
sub
int3
mov
jne
and
xchg
add
inc
jne
in
mov
jae
xchg
movsl
cmp
orl
xor
adc
sub
mov
jae
popf
jb
lahf
fs
int3
mov
mov
and
cmp
adc
xor
sub
imul
addr16
leave
or
sub
lahf
aaa
mov
mov
lea
sub
inc
mov
fwait
and
sbb
test
inc
sbb
mov
in
fildl
fldcw
push
cmp
jns
push
mov
ret
ja
rorb
iret
arpl
mov
les
fsts
inc
jne
mov
cwtl
push
adcl
mov
cltd
sti
sbb
pop
pop
movsb
call
xchg
push
lods
inc
pop
loopne
xor
cmpsb
insb
jo
enter
pop
repnz
jecxz
jl
lods
aad
loop
adc
dec
repz
inc
sbb
stc
fnstenv
mov
insb
lock
lds
xlat
cmp
mov
or
sbb
dec
ds
test
push
inc
gs
sub
or
inc
mov
orl
cmp
jmp
adc
ds
inc
out
push
xchg
imul
rcrl
ljmp
inc
sbb
fsubrs
push
dec
mov
push
test
jno
jo
out
ljmp
repz
lahf
mov
pop
sub
aad
xchg
pop
es
loope,pt
push
inc
pop
loop
mov
lds
fldl
add
rcll
movsl
loop
sub
stos
sub
jl
fisttpl
ljmp
sbb
stos
jnp
jne
push
je
push
lock
mov
lcall
data16
aaa
rcll
sbb
pop
mov
mov
mov
gs
inc
test
adc
xchg
mov
pop
lods
movl
adc
push
sub
addr16
jg
adc
pop
dec
push
pop
mov
loopne
test
fimull
cmc
adc
xchg
lods
and
bound
out
lcall
lds
pop
std
cmpsl
fucompp
or
and
sbb
icebp
sub
inc
bound
inc
add
mov
pop
lret
popf
cmp
mov
scas
popa
mull
lods
sbb
inc
lods
movsl
cmp
sub
repz
addb
out
mov
mov
loopne
push
jecxz
jmp
rolb
mov
shlb
flds
lods
pusha
insb
pop
xorb
mov
mov
fadds
in
pop
adc
andl
xchg
lret
jge
dec
movsb
orb
aam
jmp
stos
dec
fldl
push
cmp
pop
out
push
mov
pop
cmp
sbbb
jb
pop
je
mov
stc
xchg
add
scas
insl
in
or
lock
in
aaa
ficoml
or
lock
sbb
inc
mov
lods
insb
xchg
popa
mov
ss
ret
jae
sar
sub
loope
repz
dec
pop
and
mov
repz
mov
pop
jb
lods
mov
xchg
push
push
sahf
mov
jmp
inc
lea
jp
lds
in
cmc
sub
loopne
mov
scas
inc
cmpsl
dec
loopne
jne
or
daa
cs
lahf
xchg
mov
push
aam
push
add
into
and
es
scas
jae
and
dec
adc
jnp
test
adc
push
sbb
movsb
int
in
inc
bnd
stc
xchg
jmp
inc
mov
in
lret
xchg
dec
push
inc
lods
push
stc
cltd
jecxz
mov
sub
push
rcrl
and
mov
push
ja
add
icebp
les
inc
push
jle
loope
mov
mov
movsb
cltd
les
sub
fs
cwtl
add
notl
outsb
in
out
cmpb
ljmp
loope
adc
push
je
clc
insl
xor
test
fs
mov
popf
pop
add
and
fists
sub
push
outsb
lret
pop
adc
cmovle
fwait
jle
movsl
mov
jg
pusha
popa
ret
fwait
stos
mov
adc
bound
mov
xor
or
loop
addr16
daa
mov
mov
add
xchg
dec
testb
in
or
mov
xor
outsl
pop
sbb
dec
std
xchg
xor
push
sti
inc
xchg
dec
rol
stos
je
icebp
or
lock
push
popa
lock
sub
push
mov
out
jb
xchg
outsl
pop
xor
lret
pop
sbb
push
aad
mov
clc
mov
xor
cmp
jg
inc
into
negl
stc
lret
mov
push
es
jns
mov
imul
xor
sub
rolb
shrb
jp
mov
add
mov
push
or
mov
loop
roll
js
pop
imul
cld
call
aam
stos
or
dec
cld
inc
filds
xor
out
shlb
fs
and
cmpb
push
lods
or
mov
in
push
dec
adc
ret
outsl
mov
lea
in
jb
xchg
fistl
add
pop
jno
notb
inc
clc
jnp
iret
xchg
mov
out
or
popf
fucomp
mov
cld
testb
rcrb
aad
leave
icebp
fidivrs
mov
js
lret
mov
mov
lahf
mov
mulb
xorb
mov
mov
movl
jle
jp
outsl
orl
add
in
jmp
sbb
jbe
mov
or
jecxz
push
mov
loop
inc
cld
jg
xor
dec
int
popa
jmp
pop
sarl
mov
sbb
es
movb
adc
mov
pop
es
dec
dec
repz
gs
mov
xlat
stc
fidivs
loope
jg
pop
pop
ja
xorl
js
push
lret
cmpsb
xor
dec
js
pop
jp
push
stc
xchg
and
fldl
push
dec
mov
fs
mov
jns
adc
repz
inc
scas
pushf
ret
jnp
inc
xchg
ror
push
les
fisubrl
mov
mov
and
jl
jl
dec
in
xchg
outsb
popa
xor
cli
fidivs
leave
jb
loopne
adc
movsl
loop
mov
xor
es
sti
xor
xchg
cs
or
xchg
into
mov
push
fsubrl
fiaddl
je
add
or
dec
jl
pusha
jae
mov
hlt
jp
and
ss
inc
or
daa
pop
sub
xchg
or
jae
xchg
mov
sti
ret
cs
aas
mov
or
cmp
xchg
test
icebp
into
ss
ret
inc
push
loopne
mov
jbe
push
push
sbb
icebp
addr16
dec
xor
sbb
fimull
dec
popf
notb
aaa
ljmp
cmpsb
sbb
imul
repz
rclb
mov
add
into
ja
lds
mov
in
jecxz
mov
loop
repz
loop
mov
inc
repz
loop
dec
push
nop
mov
mov
and
pop
mov
lret
dec
sub
out
vorps
sbb
fimuls
repnz
popf
shrb
xor
and
stc
sub
movsl
in
xor
fmuls
std
mov
push
adc
pop
adc
push
dec
push
xchg
popa
jb
sub
pop
mov
in
mov
in
cmp
rclb
or
fisttps
mov
xchg
ljmpw
outsb
into
inc
movsl
sahf
loop
int
sub
rcrl
test
or
ror
in
sbb
inc
icebp
xchg
push
idivl
xor
repz
aad
xor
movsb
loopne
mov
fstpt
jmp
inc
mov
cmpsl
sub
aam
mov
xchg
xor
fs
int
into
lods
pop
add
jo
xchg
push
test
rcrb
rcrb
sbb
lahf
mov
test
dec
movsl
mov
dec
sahf
xchg
pop
or
pop
pop
jmp
adc
dec
jg
out
jecxz
jne
in
xchg
mov
pop
jno
mov
leave
and
jns
test
aaa
pusha
loop
xor
and
and
mov
mov
jae
sbbb
pop
call
push
or
mov
shl
bswap
in
and
and
cltd
pushf
stc
loope
cmpsb
or
pusha
outsl
scas
inc
mov
sti
iret
pushf
sub
push
mov
sub
loopne
cmp
or
pop
xor
sti
out
loop
fildl
shlb
icebp
call
cmc
dec
push
test
lock
sub
jge
pop
inc
call
rcrl
jae
xor
xor
xchg
sbb
idivl
push
adc
pushf
dec
outsb
jecxz
lret
cmpsl
loope
out
push
ss
mov
and
sub
negl
pop
pop
jecxz
test
mov
lcall
imul
jg
sbb
ss
pop
outsl
iret
mov
fldt
add
lahf
mov
sub
movntq
outsb
addr16
jne
out
shrb
pop
and
push
fstenv
jno
xchg
pop
mov
pop
addr16
jns
add
mov
mov
cmc
into
idivb
pop
out
mov
test
jno
pushf
cmpl
bound
insl
lcall
in
pop
cmp
jg
sbb
jecxz
js
push
das
pop
mov
cmp
movsb
mov
push
mov
push
xchg
bound
mov
or
jne
imul
dec
loopne
lret
outsb
into
jl
sub
mov
test
and
xor
xchg
adc
push
add
or
sbb
pop
jge
mov
mov
bound
in
mov
push
push
mov
pop
int
ss
xor
dec
aad
dec
fdivrl
dec
mov
lret
add
shrl
adcb
daa
push
ret
ret
cltd
arpl
mov
scas
lea
fstps
xor
mov
jle
imul
xchg
dec
cs
lods
or
lds
push
aas
popf
xor
inc
xlat
inc
xor
out
out
out
cmp
and
cmp
pop
cmp
fildl
lea
xchg
pusha
jne
enter
je
adc
push
test
into
add
pushf
scas
pop
xor
xchg
mov
and
pushf
aas
cmpsb
jle
inc
xchg
leave
mov
cld
push
lahf
sub
mov
loop
rolb
insl
mov
sbbl
inc
test
mov
xchg
cwtl
adc
int3
testl
lods
fcomi
cld
xor
xchg
int
dec
cmp
push
jno
repnz
push
cmp
adc
push
mov
inc
xor
and
ffreep
dec
dec
in
sub
pop
add
addb
into
movsb
test
jne
in
mov
lahf
pop
push
fwait
pop
call
sbbl
xor
bound
xchg
enter
pushf
ss
sbb
cwtl
orb
xchg
sub
shll
or
idiv
push
sub
xor
clc
sbb
push
sbb
cmp
loop
xchg
aam
fbstp
mov
scas
fucomi
in
imul
cmp
sbb
mov
cmp
pop
mov
cmpsb
icebp
xor
push
push
push
icebp
cld
pop
adc
repz
shrl
and
rcr
ficomps
mov
sti
fldcw
stc
sub
mov
xchg
pop
cmp
out
and
and
aas
les
pop
push
cwtl
andb
js
pop
mov
mov
fcoml
adc
int
sbb
dec
pop
xor
fsubl
dec
mov
lcall
cmp
lea
rcrl
ds
mov
cmp
lcall
jg
test
pop
rolb
dec
enter
mov
ret
jl
add
fidivl
rolb
cwtl
sbb
inc
adc
int3
adc
inc
sti
sub
cmp
stos
cmp
jg
fiadds
fs
lods
and
add
sahf
xlat
test
pop
fisttpll
lcall
cld
push
je
in
inc
into
jmp
mov
inc
bound
mov
nop
pusha
test
dec
repnz
jne
out
and
rcll
pop
mov
jb
rcrb
xor
dec
lahf
cltd
mov
push
push
xchg
cmp
mov
adc
lret
sbb
cltd
push
xchg
inc
arpl
adcl
add
out
imul
inc
rcrl
sahf
pop
cltd
jbe
mov
pop
pop
mov
push
ljmp
insb
push
xlat
fisubl
imul
scas
pop
dec
cwtl
jge
loope
adc
in
cwtl
inc
repz
stos
pop
sbb
idivb
cmpb
cld
or
js
or
fs
push
iret
or
sub
sahf
mov
inc
out
push
cmpsl
sub
cmp
sbb
add
andb
adcl
mov
cmpsl
loop
fildll
xor
or
xor
add
mov
jnp
cltd
call
jbe
in
gs
mov
gs
pop
push
push
push
jp
imul
mov
xchg
push
arpl
cmp
fdivl
les
lret
push
and
mov
jmp
loopne
ja
fidivs
icebp
jb
cmpl
idivb
sar
pop
mov
mov
mov
sub
push
sbb
sub
inc
dec
into
arpl
fmuls
pop
int3
inc
mov
adc
repz
rol
call
fldl
xor
jns
or
jmp
scas
push
mov
das
mov
sub
dec
std
or
out
outsb
addr16
dec
inc
inc
in
xchg
mov
cld
mov
jns
mov
mov
loope
repz
pop
in
mov
mov
sbb
dec
push
popf
pop
jmp
inc
push
sbb
loope
mov
aaa
int3
nop
nop
ja
lcall
enter
mov
gs
popa
addr16
sub
loop
inc
fists
addr16
cmp
out
inc
add
or
mov
data16
sub
insl
and
fimull
fstps
mov
inc
cs
sbb
push
cli
cmp
aad
xchg
sub
lods
mov
push
cmp
clc
and
push
cltd
loop
mov
fbld
push
bound
std
pop
adc
shll
inc
mov
dec
jo
mov
test
lock
fwait
jle
aam
mov
and
jo
fiaddl
in
add
scas
jb
nop
mov
or
jp
mov
shlb
xchg
pop
shrl
clc
lock
push
in
in
mov
leave
mov
push
sarl
fcoml
shl
or
add
dec
xor
sub
int
adc
jle
lock
jbe
jg
ret
mov
enter
add
xchg
or
xchg
daa
mov
mov
in
dec
sti
add
inc
mov
insl
mov
loope
mov
lods
sbb
mov
cltd
cmp
inc
cmc
pop
sbb
sarl
leave
stc
test
dec
dec
dec
add
jb
and
aaa
mov
fisubrl
test
lock
mov
adc
jl
ja
push
loope
repz
gs
ret
push
lcall
filds
dec
mov
loopne
testb
out
adc
sbb
ret
mov
stos
dec
lds
fisttpll
in
add
xlat
add
stc
or
inc
outsl
jno
mov
icebp
xor
xor
lret
sbb
pop
inc
ret
nop
sub
bts
bound
adc
adc
mov
cmpsl
sti
orb
pop
jae,pt
cmpsb
icebp
notb
or
adc
es
pop
push
push
cmp
cmp
lret
dec
jmp
push
mov
add
jmp
clc
js
jb
push
mov
inc
sti
es
ret
xor
fldcw
sbbl
or
jb
pushf
ficoms
mov
inc
jle
sub
shr
xor
push
xchg
ja
inc
pushf
cmp
adc
adc
cmp
jb
icebp
jp
and
xchg
dec
sbb
jle
cltd
clc
aas
dec
inc
stc
outsl
mov
out
sub
fcoml
cmp
xor
int3
add
lea
sbb
fwait
lock
dec
out
outsl
lret
jno
scas
pop
push
divl
out
push
mov
xchg
pop
xchg
cmp
test
lahf
xor
add
leave
cmp
xchg
pop
adc
jg
cwtl
mov
cli
jmp
pushw
push
out
test
cmpsl
pop
fwait
inc
bound
mov
lret
jecxz
or
int3
shll
subl
cmpsl
idivb
dec
jb
ret
or
hlt
andps
add
mov
mov
add
in
pop
and
add
mov
fmull
mov
lret
scas
jp
repnz
inc
mov
aad
mov
test
add
lock
jmp
push
xchg
outsb
out
pop
lods
aam
dec
mov
jp
mov
arpl
pop
sub
mov
xor
push
fisttpl
enter
outsb
stos
mov
jae
es
or
shl
ja
shr
out
jl
cwtl
faddl
das
xor
ljmp
lods
aam
js
lea
in
mov
pop
lods
push
mov
pop
adc
and
xor
loop
lahf
add
add
xchg
push
iret
add
repz
pop
shl
aaa
mov
outsb
xchg
psrld
xchg
jnp
push
cmp
rcrb
sbb
jnp
fisttpl
test
fcmovu
sbb
into
outsb
xchg
aam
test
cmpsl
ljmp
mov
cmc
or
fisubrs
fisubrs
cmpsl
xchg
orl
mov
fimull
jo
ss
xchg
push
inc
in
mov
pop
iret
pop
movq
fisubl
adcl
add
popf
sub
pop
ret
dec
sbb
rorb
fidivrl
iret
jg
js
mov
push
outsl
les
icebp
dec
or
sbb
inc
sub
in
pop
subb
add
into
ds
xchg
inc
cmpsb
icebp
ja
mov
out
pop
daa
fs
stos
lock
pop
das
xorl
jl
out
rcrl
gs
out
cmp
daa
leave
aad
sahf
mul
add
push
std
pop
test
push
test
out
out
ljmp
clc
repnz
lcall
jae
mov
inc
insl
xchg
std
pop
push
xchg
dec
cmpl
clc
cmp
cmc
leave
mov
mov
pop
sahf
xor
out
in
or
adc
mov
stos
dec
sub
icebp
je
cwtl
cmp
lods
lods
or
jmp
or
push
lcall
leave
sub
xor
loope
fisttps
ret
mov
mov
ds
les
inc
rclb
insl
dec
mov
gs
push
pop
or
xor
sub
ror
or
rclb
dec
std
cmp
pop
js
cld
mov
arpl
test
jp
aam
loope
test
ret
push
cmp
pavgw
xor
loopne
lea
dec
dec
pop
pop
rcrb
add
or
fs
cli
xor
dec
sub
outsb
scas
xchg
out
xchg
cmpsl
in
rorl
es
andl
push
ss
cmp
std
inc
repz
dec
rolb
mov
lods
sub
test
movsb
mov
fcomps
mov
jo
push
xchg
mov
adc
shrb
jle
in
sbb
data16
dec
mov
and
mov
ret
jle
les
lods
mov
cmpsl
and
mov
sbb
pop
popf
or
cmp
stos
jecxz
fwait
bound
push
xchg
mov
pop
insl
sti
nop
into
mov
cltd
sbb
js
lcall
xchg
rcrl
in
xor
adc
cmp
cmpl
cmp
cmpsl
idivl
push
repnz
idivl
sbb
inc
or
cmp
scas
mov
xchg
call
outsl
mov
or
and
lods
je
sbb
aaa
out
mov
dec
mov
jge
lcall
mov
data16
lcall
xchg
push
push
adc
mov
lds
repz
xchg
sub
scas
cmpsb
dec
dec
push
pushf
xchg
pop
movsb
popf
add
pop
fildll
inc
cmc
int
das
sub
pop
push
pushf
lods
and
jg
adc
je
in
cld
jnp
or
pop
fstpt
sbb
dec
add
pop
add
add
cmp
ficoml
add
call
adc
jmp
call
or
inc
mov
cmpl
dec
cmpsb
dec
pop
lahf
add
mov
xor
xor
cmp
sbb
dec
jne
jnp
in
push
and
ljmp
xchg
lcall
pop
xchg
jge
imul
or
pop
and
sub
mov
imul
in
pop
xchg
in
pop
addr16
loope
shrb
mov
stos
ja
pop
dec
pop
sub
dec
mov
mov
or
mov
xchg
push
out
dec
push
rcll
iret
pop
fistps
int3
cld
jb
fidivl
in
stc
sahf
adc
push
pop
bnd
lds
mov
test
xchg
adc
lea
pop
ljmp
xchg
sbb
push
stc
je
insl
mov
pop
dec
jg
adc
push
std
mov
outsl
popf
iret
cli
lods
sub
inc
repz
sti
js
mov
cmc
sub
fmull
andb
mov
inc
outsl
inc
xchg
jno
xchg
push
je,pt
leave
outsb
sub
in
mov
stc
bound
and
cwtl
push
inc
arpl
repz
or
pop
pusha
pop
xchg
push
rcrb
loop
and
test
cltd
daa
dec
jnp
icebp
cmp
jp
rolb
sbb
pushf
jmp
pop
daa
pop
mov
xchg
cmc
jmp
repz
cld
push
pop
fwait
in
and
push
dec
jecxz
imul
mov
sub
fmul
xor
sub
jno
sbb
popf
fnsave
les
mov
xor
jecxz
in
mov
inc
fcoml
cli
test
add
cmc
je
es
fs
cmpl
dec
fistpl
jo
dec
fldl
mov
js
outsl
pusha
lea
in
dec
movsl
stos
mov
adc
pop
arpl
jno
mov
xchg
xchg
push
dec
popa
push
imul
pop
push
outsl
xchg
int3
shll
or
dec
jle
aas
mov
loop
mov
es
out
xlat
pop
out
xlat
jl
pop
mov
mov
sbb
std
pusha
lds
aas
and
jl
mov
sbb
shrb
push
aad
cwtl
push
jmp
adc
inc
fdivrl
mov
or
dec
add
test
sub
mov
fcmovu
adc
fbld
mov
fnstcw
or
popf
mov
mov
jp
xchg
cmp
mov
xor
ret
sahf
mov
out
sahf
mov
push
mov
dec
sti
inc
imul
xor
out
push
stos
setle
decb
cmp
push
stc
jo
cmp
insl
mov
or
dec
sub
mov
out
xor
sub
sbb
push
mov
mov
inc
sti
lea
jbe
push
jl
daa
int
lock
subb
dec
push
out
lods
mov
fidivl
jns
in
mov
add
fisubrl
push
cmp
popa
das
subb
mov
xchg
push
push
fcompl
mov
add
test
ror
push
iret
jne
adc
fs
sbb
pushf
mov
or
dec
mov
push
sbb
lods
nop
test
shrb
xor
sahf
jae
fldcw
sbb
sets
popf
ret
adc
mov
lods
push
add
push
push
adc
fdivrp
aas
mov
pop
insb
xor
pop
adc
lock
xor
mov
imul
fisubrl
pop
sbb
stc
nop
xchg
lcall
lods
lea
and
mov
insl
pop
mov
je
jg
adc
imul
and
lods
pop
inc
dec
ljmp
in
out
jnp
pop
fnstcw
add
pop
or
mov
out
mov
adc
std
aas
and
aaa
dec
cmp
push
add
sub
mov
mov
inc
adc
mov
add
xor
adc
jmp
jge
lods
loopne
mov
pop
imul
test
in
stos
stc
sub
lahf
outsb
mov
jne
inc
aam
clc
sahf
cmp
jge
jg
xchg
dec
imul
cmp
mov
jne
in
arpl
int3
and
mov
or
lock
repz
mov
out
add
mov
mov
jno
or
mov
cld
in
fwait
dec
adc
jne
mov
mov
repnz
fstpl
pop
push
mov
int3
in
fdivl
mov
inc
cli
outsb
out
repnz
jle
or
push
cmp
fistl
ja
mov
jmp
jnp
pop
add
sbb
aas
and
inc
jecxz
mov
and
sub
pop
into
fmuls
xchg
imul
repnz
sub
int3
xor
xor
sub
cmpsl
jae
adc
aad
cwtl
jmp
jns
insb
jmp
ret
out
adc
xor
nop
icebp
add
jbe
fsubrl
fwait
cmp
pop
adc
dec
mov
ljmp
int3
xchg
jmp
jns
xchg
ds
rep
mov
mov
xchg
js
stos
stos
mov
cld
fs
cwtl
push
lcall
out
or
aas
jno
adc
rcll
pop
xor
adc
dec
addr16
mov
ljmp
push
ret
push
dec
xchg
stos
cmp
cs
mull
std
jbe
leave
xchg
scas
sahf
jo
mov
jne
push
pop
xchg
xor
mov
popf
or
add
jo
add
stc
outsb
sarl
xor
rorb
popf
fildll
inc
pop
mov
xor
sarb
aam
sahf
and
lcall
jbe
mov
stos
adc
dec
loop
push
paddq
lcall
xchg
test
sbbl
lods
xchg
inc
and
mov
clc
pop
enter
andl
mov
adc
jns
and
mov
imul
fsubr
in
mov
nop
out
mov
cld
push
xor
xchg
insl
outsb
jo
ja
jp
cmp
dec
and
js
mov
mov
test
cmp
popa
into
int
fsubs
jecxz
and
loopne
es
or
sub
or
lret
push
mov
stc
sbb
mov
data16
scas
push
push
scas
ficoml
testl
push
pop
in
repz
aas
jmp
or
cmp
add
mov
jp
and
jecxz
xchg
cmp
mov
jmp
aad
mov
lea
fstl
daa
shl
push
push
std
popa
lods
mov
sbb
addr16
jp
imul
dec
bound
adc
cmpsb
aad
jno
mov
inc
inc
xor
ds
nop
rcrl
cmpsl
mov
sbb
lock
mov
cmp
mov
jb
push
inc
bound
daa
andb
sbb
fmull
test
mov
inc
cmp
lds
shrb
or
rcrw
loop
sub
outsl
push
and
out
inc
lods
pop
or
fldl
std
rolb
cmp
dec
jp
loope
pop
pop
xor
ds
pop
imul
or
adc
push
jno
lret
mov
int
cmp
adc
xor
les
cmp
movsb
push
adc
aad
inc
inc
sbb
or
inc
mov
sub
and
push
sub
lcall
fwait
ret
push
mov
inc
sbb
add
push
ds
aas
fcomps
pop
mov
mov
es
arpl
adc
or
out
cmpsl
pop
inc
mov
and
inc
or
pop
mov
sub
or
fcompp
enter
cmp
xor
sub
scas
leave
push
testb
xlat
pop
movzbl
lahf
xchg
jno
mov
icebp
mov
inc
sti
sbb
push
xchg
xor
aas
inc
mov
lahf
dec
cmpsb
pop
sub
jecxz
lds
movsb
cld
sub
fldt
sbb
inc
fstl
push
sub
sub
ljmp
aaa
stc
adcl
add
mov
ds
sub
jbe
xchg
lret
addr16
mov
jns
movsb
sub
daa
out
loop
scas
add
out
dec
outsb
cwtl
arpl
cltd
or
xor
xchg
out
insl
xor
cmp
scas
mov
adc
jecxz
ffreep
call
mov
jp
mov
aaa
inc
cmp
sbb
pop
sbb
cmp
sti
adc
mov
dec
imul
push
push
adc
push
inc
cwtl
out
pop
adc
jno
or
cmpsb
mov
xchg
cli
cwtl
xchg
insb
jno
scas
add
fldl
cmp
dec
push
ds
add
mov
or
sbb
cld
xlat
jg
ss
lea
or
lods
mov
popf
sub
mov
mov
sbbl
int3
mov
sub
mov
mov
add
dec
mov
pop
popl
repz
push
ror
mov
ds
mov
out
es
stos
ja
in
mov
iret
lods
mov
jnp
je
popf
in
andb
pop
ja
jne
in
cwtl
movsl
ja
dec
push
fs
enter
stos
mov
jnp
xchg
cmp
or
mov
pop
cltd
ficoms
fimull
lea
or
or
testb
ljmp
mov
inc
lods
mov
push
push
sarb
sbb
cwtl
loopne
cmp
nop
sbb
push
lcall
push
and
std
stos
sub
imul
mov
out
lea
movsl
pop
add
insl
lret
stos
mov
lods
push
lods
pop
into
into
push
fstps
dec
outsb
push
pop
push
imul
and
jl
cmc
mov
jmp
dec
add
rcrl
pop
jo
movsl
sbb
out
dec
stos
jg
add
fiadds
sbb
sub
mov
mov
movsb
cmp
cmp
mov
push
dec
ljmp
test
push
add
fnstenv
xor
pop
mov
xor
inc
mov
loopne
and
adc
lock
sbb
sarw
and
andl
jle
and
andl
ficoml
mov
and
cltd
sti
push
in
mov
fnstsw
lods
outsl
pop
and
imul
mov
dec
mov
cmp
fisubrl
mov
push
xlat
mov
sub
cli
leave
mov
jl
arpl
call
jb
mov
add
ss
out
jbe,pn
sbb
lock
sahf
and
mov
call
jecxz
fdivs
scas
mov
sbb
jbe
lret
lahf
pop
lods
add
mov
mov
lcall
leave
jmp
and
je
cwtl
xchg
nop
dec
cmp
add
or
add
dec
mov
jle
or
mov
pop
xchg
jge
loopne
xor
push
push
shlb
adc
and
sbb
and
adc
lret
nop
sbb
scas
cmp
pop
jnp
movsb
dec
test
sti
out
inc
negb
in
cltd
js
push
mov
imul
xchg
aam
rolb
inc
repz
cmpb
lock
in
sub
int
dec
dec
in
nop
inc
fisubrl
cmp
or
cmpsl
jmp
pop
sbb
sub
and
sub
mov
inc
dec
xchg
sbb
fmuls
out
into
mov
xchg
out
pop
das
pop
or
fwait
jl
add
jo
cltd
jns
inc
and
fs
ljmp
aad
out
imul
fnstcw
pop
mov
dec
dec
pop
call
add
and
pop
popa
imul
insb
je
enter
lock
cltd
or
fisttpll
fistl
sub
rcrl
pop
dec
addl
sbb
repz
out
cmp
xchg
movsb
lds
add
popf
mov
push
jge
jecxz
mov
cltd
sar
into
xor
and
mov
ret
popf
push
bound
jnp
dec
inc
inc
inc
inc
fdivr
bound
shl
xor
cmc
gs
add
xchg
lods
inc
add
push
mov
fistl
sti
jne
movsl
pusha
and
psubq
jne
sub
mov
int3
cmp
clc
add
mov
lret
loope
push
xchg
nop
adc
add
xchg
push
lcall
and
out
test
imul
and
adc
outsb
sbb
xchg
push
lret
xchg
cmp
pusha
xor
mov
xor
inc
cs
jmp
and
cwtl
outsl
scas
pop
dec
jp
lds
or
mov
xor
js
pop
mov
mov
cmpsb
pop
cmpsl
inc
hlt
mov
sbb
aaa
sbb
cmpsl
pop
nop
add
and
neg
pop
cmp
inc
or
out
iret
rcll
mov
lahf
jle
push
int
mov
sbb
lahf
divb
mov
adc
jg
test
loop
loop,pt
mov
iret
imul
mov
push
mov
aam
fistl
lods
sti
nop
lea
shl
nop
sbb
pop
pusha
or
std
pop
out
mov
cmp
int
mov
cmc
push
mov
push
cmp
mov
out
or
es
bound
les
dec
xor
adc
outsb
lahf
icebp
cmp
test
adc
mov
push
lods
bound
xchg
cltd
xchg
push
sub
cmp
pop
pop
fistpl
test
pop
fsub
stc
roll
or
fldt
ljmp
fcoms
adc
dec
push
push
push
test
xchg
jne
aaa
inc
div
cmpb
jnp
aas
insl
int3
das
xor
into
fld
pop
push
subb
pop
sbb
outsl
idivb
inc
outsb
mov
ret
shrb
sbb
in
mov
sahf
mov
xchg
jg
jb
xor
je
lahf
inc
fsubrs
add
repnz
jmp
std
rcr
shrb
je
loope
and
xor
jo
fisubl
mov
mov
add
cmc
cmp
push
adc
push
arpl
cmp
xchg
insl
jmp
push
hlt
jmp
iret
out
inc
adc
hlt
ficomps
popf
jp
lods
xchg
xor
addr16
add
jb
pop
pop
insb
mov
gs
stc
add
fwait
out
mov
jmp
mov
adc
adc
out
ret
xchg
add
jp
aas
add
leave
sbb
or
pusha
mov
xor
in
adc
and
dec
jne
xor
movsl
or
adc
push
cld
call
or
jnp
movsb
cmp
ret
jl,pt
mov
mov
cld
mov
lods
adc
pop
aad
ret
dec
push
or
push
stos
mov
push
adc
adc
pop
mov
fidivrs
into
mov
add
add
and
or
inc
loopne
scas
xchg
stos
ror
mov
shrl
pop
js
subl
pop
sub
loop
push
jne
cmp
lret
mov
jp
pop
cld
jg
in
push
je
add
or
cmp
dec
fst
mov
cmp
sbb
aaa
and
push
nop
sbb
dec
push
aam
sahf
sahf
sbb
pop
add
push
popf
std
in
sbb
xor
fimuls
lret
loop
das
cltd
push
fdivrp
cwtl
mov
xchg
jmp
cltd
mov
arpl
mulb
sub
xchg
idiv
dec
sahf
pop
das
push
test
pop
jns,pn
inc
test
inc
bnd
mov
add
scas
mov
jnp
aam
push
fwait
outsl
insl
mov
out
mov
jl
cmpsl
sarl
jbe
fwait
out
out
mull
inc
cmp
and
adc
mov
jmp
and
sub
shrl
lcall
bound
arpl
out
or
repz
mov
jge
pusha
mov
mov
push
xor
in
mov
mov
pop
rcrb
cs
loop
shlb
sub
mov
sbb
pushf
repnz
push
int3
mov
mov
fucomp
jge
cmpsb
sub
aam
sub
js
iret
cmp
dec
fcomps
sub
test
int3
add
test
cltd
mov
xchg
mov
ljmp
leave
push
aas
test
jp
and
inc
push
jmp
dec
sbbl
push
iret
shll
gs
inc
daa
and
sub
mov
icebp
sbb
sub
inc
xchg
aam
into
lods
shl
stos
adc
pop
xor
cmp
add
repz
xor
xor
adc
in
sbb
mov
insl
dec
bound
add
fsubrs
fisubrs
or
fidivrl
vpand
sub
loop
pop
fstp
sub
xchg
cmp
imul
call
leave
pop
jle
fnstcw
icebp
ret
es
sahf
lods
aas
sbb
xor
adc
test
mov
push
insb
push
std
ret
ja
mov
or
jns
out
ficoml
enter
cld
cltd
ficoml
xchg
mov
mov
pushf
or
cwtl
inc
shr
in
clc
shll
sub
in
sbb
fcmovnb
rsqrtps
mov
in
push
adc
pop
inc
cmp
mov
jae
scas
in
push
std
mov
sarb
out
dec
xor
cmc
adc
mov
outsb
push
test
sbb
sbb
stos
jo
jo
insl
call
fistl
mov
ss
cmp
repz
push
sub
mov
repnz
test
repnz
les
xchg
push
push
das
inc
rorl
jno
inc
fsubp
or
imul
pop
sbbl
mov
cmp
cmpsl
addb
cmp
dec
jno
ljmp
inc
repnz
xlat
shrb
les
int3
mov
lret
adc
pop
scas
sti
pop
daa
shrl
pop
stos
pop
repz
iret
or
je
int3
and
mov
or
stos
adc
adc
or
jmp
or
bound
mov
push
dec
sbb
cld
jp
les
mov
stc
mov
imul
xor
flds
mov
push
jae
into
sub
pop
in
jmp
test
push
sbb
in
lahf
xchg
sbb
ljmp
arpl
mov
sbb
cmp
pop
jg
mov
mov
sub
je
sbb
out
pop
jae
inc
dec
ret
in
jmp
lds
adc
daa
fidivs
mov
rorl
ja
in
pusha
xchg
cs
lfs
add
mov
stos
in
leave
dec
push
mov
scas
sub
adc
movb
xor
sti
icebp
movsb
and
pop
arpl
push
sub
lret
sbb
mov
adc
cmp
push
sub
notl
fisttpll
aad
aam
inc
mov
movsb
test
lods
push
or
cmc
mov
adc
popa
mov
cmpsb
rcrb
mov
subl
or
rcrl
int
movsb
inc
sub
iret
sahf
aam
pop
adc
enter
int
vsqrtps
iret
pop
fcmovnb
int3
sbb
jno
pusha
xor
push
lods
ret
cli
fwait
int3
jns
inc
jmp
or
daa
js
into
pop
imul
ret
out
lret
jae
jl
sub
and
repz
inc
jl
pop
rclb
add
cli
bound
ret
xor
cmp
mov
data16
add
sbb
lock
in
dec
lock
gs
ffree
cmp
xchg
cli
xor
pop
shlb
mov
rol
rorb
jb
shrb
push
fisttps
insb
mov
fcoms
pop
aas
inc
xchg
outsl
divb
test
nop
jle
stos
sbb
in
clc
cmp
ret
jnp
aas
nop
and
sbb
jo
add
push
sub
cmc
addl
pop
inc
stos
mov
call
insb
int
jae
ret
ja
out
negb
test
bswap
add
dec
pop
xchg
adc
cmp
dec
imul
xor
pop
sub
xor
cmp
out
sub
and
add
nop
push
mov
sahf
or
mov
cmpsl
int3
pop
cmp
xchg
cmp
call
out
push
jp
cltd
push
push
add
xor
pop
imul
adc
adc
push
call
ds
clc
dec
inc
repz
dec
pop
in
dec
outsb
pop
out
rcrb
push
sbb
cmp
cld
lds
scas
jbe
push
arpl
jecxz
adc
pop
int
hlt
arpl
outsl
push
adc
mov
cmp
into
mov
cmp
jne
test
adc
scas
xor
jg
cmc
js
sbb
pop
call
inc
bound
loope
ds
aas
repnz
stc
inc
es
aaa
test
dec
sbb
inc
jbe
mov
pop
add
mov
cmp
scas
and
bound
push
mov
mov
xchg
ficoms
clc
cmp
fnstsw
mov
jne
pop
idivl
sub
inc
cmc
inc
fcomps
pop
imul
cltd
jns
sub
cs
push
jle
push
es
cmp
cmp
pop
pushf
js
mov
fcomip
ss
fs
aad
xchg
dec
pop
pop
push
cltd
test
mov
addb
push
dec
cwtl
adc
subl
ror
ds
scas
push
push
mov
pop
cmp
movsl
addr16
or
mov
cli
xchg
mov
mov
in
cmpsl
pop
pop
push
arpl
mov
cmp
cli
inc
inc
icebp
push
lahf
pop
jmp
and
or
lods
int3
mov
test
in
pushf
pop
cmpsb
cmpsl
cmp
add
aaa
fistps
mov
pushf
xlat
sbb
or
arpl
fisttpll
inc
jnp
mov
cld
lahf
lds
call
mov
and
jae
scas
push
mov
add
jg
mov
mov
std
in
mov
dec
leave
jmp
pushf
dec
imul
dec
xchg
enter
push
pushf
fucomp
and
fstpt
add
xor
mov
cmpsl
fmulp
ljmp
bound
inc
jecxz
decl
fnstenv
icebp
cwtl
pop
insb
aas
aaa
sti
pop
pop
cmp
xor
imul
stc
pusha
int
or
sbb
push
nop
aad
pop
lcall
sti
lea
js
mov
lret
or
outsb
notl
retw
nop
xchg
mov
xchg
jecxz
xor
sub
cmp
dec
adc
and
mov
pop
lret
cmpsl
adc
cmc
push
xchg
add
inc
xchg
cmp
add
scas
daa
pop
or
mov
mov
aaa
mov
push
sbb
cmp
imul
movsb
dec
sub
push
pop
dec
shrb
movsl
int
mul
lock
fildll
aaa
shrd
mov
jb
xlat
sub
shrb
sbb
rcrb
mov
add
add
and
and
push
mov
xor
cld
sahf
jne
repz
orb
les
add
lahf
cs
adc
mov
xor
dec
inc
lods
or
aam
xor
lds
cs
shrb
push
add
jb
sti
pop
sub
cmp
pop
cmp
push
dec
mov
push
orl
jo
rcll
adc
and
fbstp
push
jne
jl
mov
push
mov
rcrl
daa
cmp
and
dec
cmc
push
sub
pop
movsb
out
out
sub
adc
fsubs
cwtl
or
insl
adc
cmp
mov
fstps
jg
stc
mov
sbb
jg
nop
dec
fprem
and
inc
push
mov
and
ljmp
mov
adc
xor
sbb
sbb
sarb
pop
mov
dec
push
mov
or
add
int3
pusha
dec
test
in
jg
mov
loop
mov
shlb
sbb
dec
cmp
cmp
repz
pop
push
mov
std
jb
outsl
push
adc
adcl
std
push
push
cmpsb
movsl
stc
sbb
jg
mov
inc
into
xchg
cwtl
insl
push
inc
jmp
ror
aad
lods
mov
and
mov
stos
fisubl
lods
or
mov
pop
dec
js
test
aas
cmpw
lcall
cltd
xchg
xchg
inc
jno
sub
mov
inc
pop
ja
sub
mov
aad
ss
pop
and
mov
or
nop
sub
out
fs
xor
sbb
fcoml
cmp
sub
imul
xor
nop
pop
sub
addl
inc
inc
pushf
ror
inc
cmp
cmc
pop
pushf
jbe
sbb
das
jb
pop
cmp
lret
in
cmp
dec
add
push
push
pop
pop
and
sub
sub
cmpsl
mov
mov
push
jle
icebp
movsl
lret
fldt
add
mov
push
mov
xchg
sbb
call
les
mov
mov
outsb
mov
sti
aad
pop
sbb
inc
rcrb
jg
cmp
cmp
dec
insb
or
fwait
cmp
push
mov
jb
mov
movsb
pop
jl
nop
arpl
sahf
scas
push
lahf
xor
sbb
data16
out
inc
jnp
ljmp
scas
adc
mov
xchg
pop
es
sub
xor
mov
push
pop
and
popa
dec
fbld
cmpsb
dec
loop
nop
sub
and
mov
xor
push
mov
dec
xor
cmp
adc
bound
and
test
out
adc
mov
fidivl
sti
sub
sbb
test
sbb
aas
mov
lret
jle
add
stos
stos
jmp
mov
sub
push
push
jae
xchg
or
test
add
popa
lret
movsl
xchg
and
mov
mov
cmp
sub
jge
sbb
pop
add
fbstp
push
xchg
xchg
xor
test
or
or
fidivl
jecxz
add
jmp
jnp
mov
mov
pop
into
popf
xchg
xchg
mov
pop
pusha
or
cltd
shlb
clc
in
cmp
adc
mov
or
xor
mov
pop
stos
xor
cvtpi2ps
cmp
in
lds
mov
cmpsl
xchg
sarb
ret
add
mov
lock
pushf
fiadds
adc
mov
movsb
dec
push
jle
sub
fimuls
and
bound
sbb
mov
nop
ljmp
sbb
or
pop
fildl
cwtl
add
fdivrl
push
cmp
out
xor
sub
fisttps
jno
sbb
sbb
push
clc
jns
js
test
js
call
push
movsl
fwait
loopne
shl
sbb
mov
cmpsb
movsl
push
cmp
mov
sub
pop
and
dec
test
pushw
scas
inc
aad
leave
adc
lods
xor
and
aad
dec
outsb
dec
int
test
fxch
mov
rcrl
stos
ljmp
jle
inc
dec
jg
outsb
mov
sub
pop
ss
inc
xchg
repnz
mov
ret
push
push
push
fildll
addl
jnp
das
repz
mov
sub
pushf
xlat
test
fsubrs
cmpsl
push
repnz
inc
push
mov
loope
and
pop
push
sub
icebp
inc
jno
scas
or
mov
sti
add
sub
xor
sahf
out
mov
hlt
pop
call
sub
aam
jl
xor
gs
mov
pop
sbb
cmpsb
ljmp
xor
mov
fstl
lods
push
pusha
out
add
mov
rol
xchg
hlt
outsl
daa
mov
pop
inc
popf
in
pop
mov
shl
jo
inc
add
cmc
xchg
cmp
nop
ss
aam
inc
jmp
push
inc
stc
lods
lock
mov
int3
repnz
xchg
shr
ds
cmp
mov
push
push
cmp
pop
sub
les
mov
jmp
aam
mov
xchg
jno
test
sbb
outsb
jmp
add
jbe
sub
iret
rorl
lret
mov
push
in
xchg
add
jo
rclb
loopne
sub
int
jo
popa
sbb
fstps
and
and
xor
adc
leave
push
push
dec
xlat
sbb
xchg
cs
xchg
mov
xchg
push
cmpsb
xchg
insb
and
mov
int
push
aas
leave
xor
insb
adc
mov
pop
mov
lods
inc
mov
outsb
mov
ret
cmp
xor
inc
sahf
sbb
xorb
mov
push
rcl
aas
xor
xor
movsb
adc
flds
pop
push
cmp
insl
dec
leave
inc
mov
movsb
jno
mov
jb
push
jne
xchg
push
in
roll
lds
lcall
adc
cmp
xchg
inc
jle
es
subl
adc
mov
gs
out
jecxz
nop
inc
pop
imul
mov
icebp
xchg
insl
repz
clc
data16
adc
call
enter
push
push
popf
imul
sti
jno
outsb
test
cmp
movsb
xor
jno
mov
push
rcrl
ja
cmc
mov
cmp
mov
jge
adc
sar
je
push
out
jno
lods
inc
loopne
sbb
bound
xchg
add
imul
xchg
pop
xlat
ret
cmp
repnz
cwtl
mov
or
imul
push
loopne
push
aam
add
cmp
sub
jge
repz
sub
or
rol
push
mov
mov
clc
fists
mov
xchg
jg
push
xchg
mov
dec
dec
push
push
sbb
sub
js
mov
cmp
enter
and
insl
enter
mov
imul
xor
into
sbb
and
int3
loop
out
sub
in
fsubrl
mov
icebp
sti
inc
sub
push
pop
aas
mov
push
push
mov
out
mov
insb
adc
fildl
and
movsb
sbb
mov
aad
sbb
push
jle
subl
scas
xchg
jb
lcall
and
scas
inc
gs
int3
test
and
mov
xchg
jle
out
add
xchg
push
jmp
jp
push
lea
ret
hlt
insl
fwait
xchg
aas
jne
cmp
sub
inc
pop
adc
push
cmp
xlat
outsb
fcos
mov
dec
adc
je
test
jo
loopne
sbb
in
cmpsb
lea
mov
xchg
mov
je
ret
push
in
ljmp
lret
lret
inc
daa
into
dec
cmp
pushf
faddp
ljmp
xchg
jno
mov
pop
push
or
cwtl
push
push
push
push
ja
sub
push
jne
jmp
fs
aam
aas
push
mov
clc
hlt
and
xchg
lret
daa
sub
mov
sub
popa
push
and
jns
inc
aad
push
adcb
test
call
in
mov
lea
icebp
cld
jns
pop
cmpsb
push
jne
sbb
or
pop
xor
or
mov
sub
jle
and
js
fstl
mov
adc
pusha
cmc
xchg
sbb
cmp
outsb
push
jl
mov
xchg
mov
aas
fstl
sbb
bound
sub
mov
js
test
lret
mov
addr16
lret
out
dec
movsl
mov
cmovo
mov
aam
sarl
xchg
sbb
loopne
jbe
push
stc
xchg
sub
loope
insl
icebp
into
mov
hlt
insl
lahf
xchg
stc
mov
jmp
or
mov
xchg
fdivrs
xlat
stos
mov
daa
repnz
dec
adc
push
mov
jle
add
cmp
rep
in
icebp
leave
mov
in
movsb
or
aas
mov
mov
add
data16
cmp
sbb
adcl
sub
pushf
add
mov
jmp
push
shll
push
mov
push
aam
sbb
mov
cmp
mov
or
loop
xchg
cmp
pop
leave
cmpsb
mov
cmp
adc
jmp
xchg
mov
lret
fdivs
fwait
and
sub
inc
mov
and
cmp
test
ret
mov
inc
inc
push
pop
and
testl
or
mov
mov
mov
popf
daa
jmp
mov
lea
sarl
xor
hlt
pop
into
lds
and
rclb
inc
push
sub
aad
push
daa
push
cmc
sbb
adc
push
cmpsl
orl
stos
add
pop
jg
int
xchg
out
push
xchg
sbb
rcrb
icebp
xchg
ret
pop
mov
fiaddl
arpl
sbb
push
ret
out
mov
inc
adc
add
inc
mov
mov
jne
dec
fs
pop
jae
xor
push
or
iret
test
jp
orl
test
xchg
xor
cltd
iret
push
xchg
lcall
iret
mov
add
aas
rcrb
filds
or
cwtd
jle
xor
mov
jl
loopne
pop
lds
cmpsl
in
sbb
jmp
sbb
mov
cmpsl
xchg
mov
imul
scas
push
fs
and
sbb
or
xlat
add
pop
push
cmp
in
push
insb
inc
sub
jmp
aad
into
pushl
jne
or
fidivl
push
std
and
popf
lret
xor
jns
and
mov
lcall
jle
aam
mov
pop
adc
sti
and
pop
int
pop
sbbl
cli
xlat
into
sahf
je
in
gs
imul
pop
loop
jg
insb
mov
jl
mov
clc
shll
pop
test
outsb
sub
mov
sahf
movsl
xor
push
xchg
in
push
cmpsl
outsb
mov
inc
fwait
mov
mov
outsl
idiv
add
xchg
ja
or
xor
pop
mov
push
mov
cmc
jmp
or
lods
sbb
xchg
cmp
ljmp
out
loopne
std
in
addr16
mov
and
shlb
or
punpcklwd
icebp
and
and
outsb
std
das
sub
fnstenv
mov
mov
inc
jo
lods
jns
jbe
sub
repnz
cld
push
jns
pushw
inc
arpl
stos
sbb
rcl
shrb
bound
or
inc
ljmp
scas
and
das
in
mov
xor
mov
out
inc
push
stc
and
mov
int3
pop
fidivl
fwait
jmp
adc
mov
push
xor
dec
inc
insb
or
leave
andl
xor
aas
pusha
and
out
pop
jecxz
pop
fs
pop
mov
xlat
mov
mov
sbb
lcall
mov
flds
je
cmp
data16
adc
fxch
lahf
jmp
push
ret
push
add
stos
jle
push
add
aad
sub
pop
push
xor
jg
xchg
inc
mov
lods
repz
push
mov
aaa
movsl
pop
jb
movsl
adc
inc
jbe
in
into
inc
dec
stos
pusha
xchg
mov
add
push
inc
out
repz
or
jbe
into
pop
pop
insb
push
cmp
pop
sahf
out
js
hlt
inc
out
adc
js
adc
stos
cmp
cmp
pop
test
jecxz
rcrb
out
or
jne
pop
dec
data16
dec
mov
mov
sbb
test
cltd
cmp
int
push
mov
inc
push
lods
lods
stos
loopne
in
insb
call
xor
sbb
xor
dec
jmp
mov
ret
dec
add
stos
inc
and
xor
adc
xor
pop
clc
mov
mov
cmp
jae
cmp
cmpsb
xchg
pop
cwtl
je
mov
mov
sahf
jecxz
mov
jno
gs
add
mov
cmp
sbb
sub
cs
paddusw
out
dec
xchg
loope
xor
fildl
pop
bound
stc
jb
push
mov
hlt
jo
popa
popa
cs
inc
and
mov
out
movsl
repz
cli
int3
andb
pop
int3
dec
push
adc
mov
pop
push
stos
and
jbe
addb
test
pushf
mov
adc
pop
mov
lcall
out
mov
int3
roll
dec
cmc
jmp
cmpb
jmp
push
jae
pop
mov
test
mov
rorb
sub
loope
pusha
mov
fcmovbe
xchg
call
inc
imul
popa
mov
cltd
mov
movl
add
inc
or
movsl
or
xor
aas
ja
jmp
hlt
jnp
fmul
rorl
shll
dec
lcall
es
cmpsl
mov
inc
and
jg
insl
push
movsl
int
mov
mov
dec
in
inc
in
jae
jmp
jne
pop
mov
cmpsb
pop
mov
push
sbb
loope
or
jmp
xchg
stos
sbbl
test
and
dec
aad
xor
xlat
pop
les
fldt
jge
mov
adc
aad
std
addr16
cmp
jns
jo
inc
jge
mov
in
pop
xchg
aas
xchg
test
sbb
cmp
mov
outsl
fs
adc
add
ljmp
sub
fildl
mov
inc
push
mov
push
xchg
dec
inc
imull
mov
loopne
xchg
push
js
mov
push
sub
and
out
mov
jbe
in
cmp
int3
adc
dec
shlb
loop
inc
cmp
and
das
into
mov
inc
outsl
rclb
dec
dec
mov
fldcw
imul
insl
int3
adc
cmp
jo
dec
push
ss
xor
dec
aad
inc
mov
dec
out
xor
fisttps
adc
pushl
inc
and
jne
sub
push
imul
mov
pop
outsb
in
fistpl
pop
ror
lea
mov
push
insb
push
or
jmp
cli
ljmp
jle
movsl
jns
jmp
cmp
shl
mov
cmp
add
lret
push
jae
mov
jl
out
pop
imul
movsb
xchg
shlb
inc
out
xchg
lods
cld
in
int
mov
xchg
push
inc
jp
push
dec
aam
rcrb
testl
cltd
dec
dec
fwait
daa
dec
mulb
xchg
sub
xchg
stos
sbb
pop
mov
daa
pushw
pop
inc
leave
cmpsb
outsb
lahf
outsb
fdivl
imul
mov
lcall
call
ficomps
jmp
shll
or
enter
aaa
sbb
ds
mov
das
jp
add
jl
push
fidivs
decb
repz
xchg
cmp
lret
lret
jbe
into
push
out
adc
andb
lods
cwtl
mov
sahf
or
imul
repz
lret
sub
fnstenv
jle
lret
das
popa
pop
stos
cmp
or
mov
xor
insl
jae
xchg
jmp
dec
js
sti
adc
dec
lds
cltd
xchg
cmpsb
jecxz
cmpsb
inc
hlt
lahf
ljmp
adc
lret
xor
add
clc
gs
dec
mov
out
mov
aam
outsb
stos
cmpb
jmp
popa
test
dec
inc
cli
notb
mov
jns
rcrl
js
dec
sbb
in
test
lea
das
int
mov
sahf
test
repnz
adc
xor
mov
add
pop
dec
mov
sbb
inc
xchg
jmp
and
stc
test
sbb
shr
fldenv
leave
dec
push
loopne
movsl
icebp
cmp
xchg
add
or
fyl2x
cmpsb
cmp
cmp
cmp
push
mov
daa
or
adc
add
add
push
push
loop
out
inc
sub
dec
cld
movsl
shrb
fwait
push
fcmovnb
and
mov
insl
jge
add
xchg
addb
mov
imul
jb
daa
xor
dec
lea
push
arpl
bound
pushf
test
xchg
sarl
or
rcrl
mov
into
pop
sbb
rclb
push
cmp
cmc
xchg
mov
mov
inc
pop
cmp
push
pop
insb
adc
lds
pop
pop
mov
inc
mov
fs
fcoms
sti
adc
mov
loopne
rcrl
pusha
mov
xchg
push
call
sub
movsl
xor
or
out
nop
pop
popa
cmp
and
ret
cmp
in
mov
push
add
pop
test
mov
loopne
call
fisttpll
mov
out
imulb
mov
xor
test
pop
add
lods
dec
xchg
cmpsb
jp
ljmp
sub
sahf
dec
lods
test
sbb
or
xchg
or
and
les
lods
xchg
xchg
lret
push
je
and
push
push
pop
das
sbbl
sub
bnd
cmp
and
sti
pop
and
loopne
jno
insl
lret
add
icebp
and
fldt
ret
in
cmp
and
cmpsb
sub
mov
jmp
stos
pushf
add
dec
push
jbe
adc
je
inc
cs
in
rorb
out
push
ljmp
push
push
lea
scas
xchg
sub
jp
push
lea
sub
insl
push
sbb
cli
cmc
insl
jg
push
push
adc
push
xchg
pop
or
mov
insb
ficoml
cmp
repz
sahf
out
pop
mov
filds
add
inc
hlt
shll
xchg
mov
push
mov
aaa
adc
adc
je
gs
mov
push
jo
daa
in
mov
jne
aas
hlt
cltd
push
pop
pusha
loopne
xlat
fisttps
data16
lret
cmp
jl
daa
pop
cwtl
mov
divb
sahf
or
sbb
jmp
imul
inc
icebp
mov
push
jo
fs
sahf
daa
add
jp
dec
scas
cmpsl
add
out
aas
add
loope
mov
ljmp
out
push
out
mov
and
sbb
mov
pusha
pusha
inc
cld
inc
jecxz
ss
push
iret
shrd
jo
outsl
ljmp
movb
repnz
stos
add
dec
or
sahf
or
jbe
inc
cmc
sbb
das
imul
cmpsb
scas
mov
jnp
dec
xchg
lcall
push
cmc
push
push
enter
and
mov
les
addr16
addr16
mov
jge
inc
loopne
xchg
push
mov
dec
fistpl
sarl
popf
js
adc
or
sbb
push
popa
stc
lcall
fisubrs
rclb
push
movsb
adc
sbb
pop
out
xor
int3
mov
adc
xchg
lods
mov
inc
xlat
jne
fimull
adc
lods
xchg
mov
outsb
das
das
dec
in
dec
test
add
sarl
into
pop
adc
mov
test
mov
adc
dec
insl
sahf
fst
out
pop
ret
inc
add
outsl
sbbb
imul
fmull
mov
test
fsub
xchg
testb
adc
outsl
xchg
faddl
sub
cmpsb
hlt
rorb
mov
mov
enter
xchg
pop
inc
pop
lret
push
and
sti
dec
ret
xor
ds
cld
dec
add
aas
mov
adc
frstor
inc
pop
test
adc
mov
ret
jg
add
dec
fs
movsb
test
sbb
fwait
int
cld
movl
je
or
push
shlb
adc
or
mov
mov
nop
xor
xchg
adc
xor
push
imul
mov
mov
aaa
rol
pop
aad
mov
mov
sub
outsb
notb
xor
push
rol
mov
push
cmp
clc
inc
dec
fcoms
lea
xchg
jg
ljmp
or
adc
or
les
test
dec
sti
push
mov
xlat
sub
out
scas
and
xor
scas
stos
cmc
inc
mov
je
jno
sbb
sub
lcall
dec
fimuls
or
inc
fs
arpl
je
aad
add
jae
mov
add
xchg
sub
fldenv
pop
int
imul
lahf
cmpsl
xchg
inc
mov
aas
gs
cmp
xchg
mov
cmpsl
hlt
pushf
fprem
test
in
push
out
xorb
pop
nop
andb
push
sub
scas
mov
or
lahf
in
cmp
out
mov
sbb
mov
popf
mov
popf
sub
push
lods
xor
jb
push
jb
out
pop
ljmp
pop
mov
cld
or
push
inc
fdivrs
or
jecxz
mov
mov
cmpsb
shrl
jns
add
add
sbb
and
dec
cmp
xor
mov
push
loope
xor
jecxz
pop
add
push
adc
mov
mov
add
inc
lret
inc
or
sbbb
mov
sbb
pop
test
mov
fdivrl
das
jne
jne
xchg
call
push
stc
pop
into
aas
cs
pop
push
push
cs
xchg
and
mov
shlb
std
sub
filds
push
mov
add
sub
nopl
mov
fists
iret
jae
xchg
or
mov
lds
pop
insb
loope
out
pop
pop
pop
stos
sub
mov
into
push
jno
je,pn
jae
mov
mov
pop
mov
mov
and
lret
xchg
xor
sbb
fwait
pop
icebp
cmp
es
ja
sbb
cmc
and
adc
call
insl
xchg
and
shlb
jmp
rclb
nop
mov
cmp
mov
shlb
lds
rcrl
mov
sbb
xchg
in
cmp
inc
sub
mov
jbe
and
outsb
add
movsb
mulb
sbb
lds
cmp
mov
addl
dec
push
mov
push
mov
out
loopne
sub
mov
decl
js
pop
imulb
fabs
int
popa
fnstsw
or
mov
jb
pop
addr16
insb
push
mov
nop
mov
repz
scas
scas
sbb
mov
mov
dec
ret
ror
pop
xchg
aaa
roll
cmp
or
inc
fisttpll
loop
fwait
mov
call
jno
adc
mov
mov
and
out
scas
cld
aam
sbb
loopne
dec
or
out
add
mov
cmp
mov
pop
xor
mov
ret
aam
add
aas
cmp
mov
dec
fcompl
loope
scas
add
aad
mov
enter
jmp
or
jecxz
sbb
repz
fstpt
loop
push
in
les
les
jno
lea
outsb
sub
cmp
add
stc
jmp
xor
push
stos
push
mov
aas
xor
cmp
xor
pop
adc
cmp
dec
inc
mov
imul
stc
mov
mov
imul
or
test
adc
push
stos
repnz
lods
adc
or
movsb
imull
jmp
mov
cmp
sub
xor
fildll
in
stc
xchg
lret
rolb
xchg
xor
or
out
jge
sub
push
mov
or
inc
stos
popa
out
mov
mov
and
add
inc
cmc
mov
outsl
xchg
push
sub
xlat
xchg
mov
adc
std
outsl
iret
lret
cmc
data16
fwait
aas
inc
mov
outsb
es
dec
test
pop
xchg
es
loop
jge
inc
divps
divl
aad
xchg
imul
pop
inc
icebp
sub
jnp
add
fsubr
add
ret
xor
pop
iret
cmc
xchg
mov
je
add
mov
sub
mov
jge
or
cmc
or
stos
out
rcr
int
mov
notl
repnz
in
ss
cs
cmp
je
loope
mov
jae
popa
cmp
pop
int
mov
jl
xchg
mov
push
mov
scas
cmp
jb
pop
ljmp
cmp
dec
push
inc
cltd
add
notl
or
add
fdiv
std
lock
in
popa
mov
mov
xchg
sbb
rcl
xchg
out
out
js
or
cltd
pop
and
sub
daa
nop
jo
jp
add
testl
fs
cltd
ror
ss
sbb
and
pushf
fwait
clc
add
sub
push
dec
xchg
mov
or
cmpb
dec
mov
sub
xor
lret
pmaxub
repz
in
fadds
cli
xor
pop
or
mov
stos
or
fiadds
cld
xchg
fstl
shlb
mov
pop
cld
daa
adc
xchg
outsb
ja
mov
add
pop
xchg
sub
filds
rolb
mov
fisubl
dec
or
add
and
lea
cmp
shl
das
loope
inc
cltd
mov
jb
repnz
int
fsubrl
lods
and
out
jmp
pusha
mov
bound
inc
xchg
pop
jmp
pop
lahf
cs
test
push
popf
test
dec
xchg
mov
jecxz
imul
cmp
sbb
in
inc
loopne
filds
dec
into
sti
push
inc
inc
fwait
ljmp
imul
jbe
xor
cmpsl
dec
xor
push
or
xor
xor
dec
sub
mov
rorb
adc
pushf
xchg
pop
dec
sbb
icebp
fwait
push
xchg
cwtl
out
dec
sub
cmp
jns
inc
jecxz
rorl
sbb
push
mov
mov
xor
in
ss
xchg
leave
jns
mov
test
in
lea
dec
xchg
or
sub
and
orb
aad
gs
sub
xor
insl
mov
ret
adc
mov
outsb
cmpl
mov
push
sbbl
ss
jmp
sahf
and
lcall
cld
mov
sub
dec
sub
lahf
inc
push
dec
cmp
pusha
push
pusha
hlt
cwtl
outsl
test
add
rep
inc
adc
xchg
enter
cmp
push
sbb
and
in
dec
in
rcll
hlt
mov
add
pop
les
movsb
jg
hlt
testl
ja
pusha
out
lret
insl
hlt
sahf
push
push
es
fbstp
shl
aam
adc
js
mov
shrl
mov
inc
push
stos
cmp
mov
fidivs
fisubs
xchg
sbb
stos
inc
mov
cmp
or
or
and
mov
sbb
jmp
test
jp
xor
arpl
push
jge
xchg
mov
fists
cli
int
jl
mov
add
mov
loopne
mov
jae
pop
lcall
jno
shrl
dec
pop
ret
cmpsl
ljmp
cld
mov
cmp
or
arpl
cmpsl
ds
mov
jno
aas
lret
push
xchg
push
and
dec
cli
pop
lock
mov
mov
jo
mov
es
push
mov
push
adc
jge
aas
cmp
mov
cmp
pop
shl
dec
fwait
dec
out
push
mov
in
push
das
sbb
scas
push
sbb
push
adc
out
pop
add
loop
mov
jp
adc
test
call
sti
loopne
xchg
sub
pop
andl
mov
xadd
xchg
dec
sti
movb
out
mov
or
mov
incb
xor
gs
lea
addr16
adc
sub
ljmp
ss
mov
cs
leave
incb
imul
jmp
orb
pop
cmp
push
push
testl
aam
into
in
inc
cwtl
sbb
sub
shll
xor
or
andb
lcall
cmp
xchg
scas
ret
repnz
adc
int
xchg
mov
fmull
in
clc
stos
into
hlt
loop
es
and
lcall
sbb
popf
scas
push
adc
add
and
mov
data16
shrl
xor
xchg
push
shll
push
ljmp
add
mov
fdivp
cmovnp
cmp
enter
and
decb
sbb
lods
scas
mov
jmp
mov
or
adc
lock
loope
jbe
lds
mov
andl
or
in
xchg
pop
shrb
pop
xor
push
aas
das
xchg
mov
test
repz
sbb
fisubrl
outsl
push
fistpll
sub
xchg
mov
loopne
clc
jnp
adc
xchg
data16
xchg
mov
cmpb
mov
mov
jecxz
jb
inc
loop
loope
shl
mov
push
hlt
push
mov
ret
pop
fs
jo
dec
scas
inc
lods
jp
clc
popa
in
bound
inc
push
push
in
pop
inc
repnz
cmp
aad
notb
jbe
lcall
dec
enter
sti
mov
movsl
adc
in
ret
fisttpl
gs
orl
cmpsl
adc
push
ret
pop
and
jbe
mov
and
lea
inc
out
fimull
fmuls
jbe
and
test
or
pop
jp
and
mov
clc
psrad
xchg
mov
cmp
repnz
sti
jnp
or
std
pop
pop
rcrb
fidivrl
fs
sti
jno
cmp
jle
pusha
shl
inc
cmpsl
lods
pop
xchg
addr16
mov
in
pop
add
add
movsb
xlat
loop
lret
psubw
push
andb
jbe
movsl
dec
push
enter
movsb
jns
or
xchg
stc
xlat
pop
cli
ss
jnp
rclb
imul
adc
sbb
lods
fcmovb
pop
inc
mov
clc
fdivrs
cwtl
popa
mov
icebp
mov
jno
ja
jg
insl
mov
push
mov
lds
aaa
inc
rcll
or
lret
andb
in
dec
and
mov
mov
insb
xchg
cmp
push
and
pop
cwtl
pop
fimuls
mov
stos
loope
inc
test
fwait
daa
nop
stc
cmc
pop
adc
mov
sub
dec
call
lcall
outsb
push
pop
adc
pop
inc
movsb
pusha
aaa
popf
xor
popf
leave
push
in
pop
in
fcomps
xor
into
xchg
jnp
and
shlb
push
and
iret
cltd
out
pop
push
mov
ss
shl
iret
xchg
mov
les
cmp
in
jg
cmp
cmpb
adc
pop
bound
mov
and
inc
test
pop
cmpsl
jmp
sub
add
lcall
cmp
pop
addr16
jg
loopne,pt
cmpsl
mov
inc
sbb
sbb
push
pushf
popa
mov
xor
pusha
mov
incb
dec
adc
push
lds
mov
in
pusha
push
rclb
fimuls
ljmp
insl
jecxz
movsb
add
imul
and
shlb
or
push
lock
in
gs
xchg
cmpsl
stc
fwait
adcb
popa
lahf
insl
sbb
mov
push
push
mov
idivb
rcrl
pop
push
mov
adc
mov
and
bnd
aam
ja
mov
jb
shrb
loop
pop
mov
xor
daa
enter
dec
pop
adc
hlt
dec
ss
sub
aad
push
sbb
stc
mov
addr16
dec
shll
lahf
jmp
cs
jecxz
push
sbb
adc
loope
inc
pop
push
idivb
sbb
aas
fisttpll
sti
dec
or
bound
pusha
add
faddl
mov
scas
cmp
ss
cmp
call
cmp
xchg
int3
scas
pop
rorb
test
sbb
test
add
lret
mov
nop
pop
mov
jmp
lcall
mov
pushf
push
and
add
ret
jg
or
xchg
and
mov
push
inc
cld
cmp
mov
fiaddl
shrb
xchg
push
add
mov
sbb
in
in
inc
jo
aad
mov
mov
mov
jge
push
lock
mov
dec
fisttpll
adc
mov
adc
mull
xchg
sbb
cmpsl
sbb
xor
shrb
lahf
aam
in
cwtl
call
sahf
mov
loope
jmp
jne
inc
cwtl
mov
sub
xchg
fiadds
xchg
je
ds
add
cmp
pop
xchg
loope
pusha
out
jnp
sbb
sar
sbb
aad
scas
icebp
sub
pusha
push
adc
add
mov
out
int
mov
fstps
ljmp
xor
mov
xchg
add
daa
push
cmp
dec
call
js
push
adc
cmpsb
sub
lds
in
bswap
insb
sbb
movsl
xchg
fdivs
xlat
sbb
stc
xor
sub
call
adc
fdivrp
scas
sarl
mov
jg
jnp
stc
fdivrp
cltd
cltd
loope
jp,pn
fdiv
pop
in
jp
in
sub
adc
sbb
das
lret
clc
add
push
mov
sahf
mov
aad
pop
xor
lret
mov
addl
in
jns
daa
adc
mov
in
and
jbe
fdivrl
add
popf
int3
rdmsr
sub
mov
sbb
mov
fisubrl
push
int
sti
mov
aas
dec
cmp
ds
sarb
jnp
push
mov
cmp
adc
sahf
pop
sbb
sbb
xchg
fnstcw
xor
adcl
add
lds
out
cmpsb
xorps
jp
arpl
cmc
cmpsb
popa
inc
ret
stos
repnz
push
and
dec
push
fldcw
push
bound
push
es
aam
xor
pop
or
mov
or
mov
and
shrl
out
sarb
scas
sti
stos
gs
lods
or
or
or
and
fcomip
out
jecxz
sub
loope
adc
pop
xchg
jo
cmpsb
aas
sub
ja
inc
xor
je
sbbl
xchg
pop
movsl
jns
xchg
add
sbb
xor
mov
shll
shll
test
sub
into
dec
adcb
jge
pop
js
mov
rol
std
xor
mov
dec
pmaxsw
fyl2x
sub
mov
pop
mov
popf
adc
adc
sub
sub
sub
jno
movsl
shrl
rcl
and
xor
push
xor
pop
ja
cmp
inc
cmpsl
ja
sub
hlt
push
test
mov
popa
xor
sub
mov
adc
push
out
push
adc
sti
sub
mov
sbb
sub
jnp
outsb
xor
lock
jge
sbb
mov
xor
scas
xchg
dec
lcall
mov
xchg
movsb
jo
lock
das
adc
pop
fildl
loopne
insb
mov
or
dec
xchg
stc
dec
imul
push
add
cltd
movb
add
test
inc
xchg
mov
and
xor
outsb
cmp
xchg
lcall
add
mov
mov
mov
fbstp
adc
test
push
std
lock
out
bound
mov
or
shlb
mov
mov
aaa
test
fdivs
addr16
test
fadd
and
and
and
push
fs
scas
inc
add
and
mov
push
and
fildll
jmp
jle
pop
xor
push
mov
test
in
aaa
push
cmp
cmpb
in
out
sub
mov
mov
test
mov
in
sub
fidivrl
sbbl
or
cmp
pop
lret
je
imul
add
sbb
mov
push
push
jmp
xchg
xlat
mov
mov
xchg
jnp,pt
push
mov
hlt
rclb
repz
test
into
mov
mov
iret
pop
sbb
pop
adc
jmp
leave
mov
cmp
scas
mov
cmp
imul
adc
fdivrl
fcmovb
popf
jp
xlat
mov
les
testl
js
mov
xor
lock
cmc
xor
jb
mov
scas
jp
pop
xchg
scas
mov
cmp
jp
decl
insb
fstps
xchg
mov
hlt
push
ljmp
cmc
mov
or
mov
mov
mov
lea
jbe
mov
mov
lods
add
imul
popa
cwtl
adc
in
mov
mov
xchg
decb
movsl
sbb
out
inc
mov
in
lcall
jne
pop
cmp
jb
je
paddd
js
jnp
mov
sahf
out
push
insl
pop
dec
jbe
and
inc
dec
imul
daa
lret
repnz
cmp
rcrl
bound
outsl
push
inc
es
pop
hlt
ret
and
adc
insb
rcrl
xchg
mov
xchg
loope
inc
sbb
movsb
mov
test
pop
in
and
out
ret
outsl
mov
xchg
xorl
adc
inc
xchg
subb
cmc
andl
pop
mov
jmp
mov
push
faddl
cmp
sti
std
idivl
sbb
mov
sbbl
lahf
aad
adc
in
out
out
notl
sbb
push
std
mov
mov
sbb
stos
push
mov
push
and
loopw
insb
ss
popf
cmpsl
sub
pop
dec
xchg
inc
ret
ret
adc
ss
addr16
test
add
pop
aad
jmp
cmp
loopne
sub
jae
jae
xor
push
inc
iret
mov
insb
or
adc
cmpb
out
mov
imul
fidivs
push
xor
jnp
mov
mov
push
push
sti
inc
fstpl
pop
femms
jl
jnp
cmp
aam
addr16
fwait
xchg
xor
sub
pop
mov
ds
xchg
xchg
lahf
add
in
mov
cli
push
dec
push
sbb
aad
jae
ss
sub
lret
divl
jbe
mov
xorl
inc
pop
mov
ret
stos
mov
out
imul
shll
jge
es
pushw
std
mov
je
rclb
adc
inc
ljmp
jb
fcompl
stos
or
add
mov
add
jno
and
fstpt
lret
jle
mov
jg
jl
and
cmp
push
jle
rcrl
insl
into
pop
jge
mov
mov
inc
cmp
inc
push
loop
or
and
adc
movsl
testb
lods
sbb
jns
add
aad
inc
ds
int3
pop
push
imul
inc
mov
loop
xor
je
repnz
mov
daa
sahf
mov
xchg
pop
push
push
xchg
mov
xchg
push
dec
mull
stos
cmpsl
shl
test
dec
mov
sbb
in
adc
mov
mov
pop
int3
arpl
std
neg
mulb
sbb
mov
add
jmp
addl
push
xor
in
jmp
stos
inc
add
sub
clc
mov
dec
and
pop
sub
sub
push
xor
stos
inc
mov
dec
xlat
pop
loopne
cltd
pop
jp
repnz
fidivl
jns
pop
inc
scas
bnd
notb
sbb
movsl
lcall
call
sbb
lahf
cs
out
sbb
xchg
or
adc
pushl
fisubl
jae
icebp
mov
out
pushf
pop
popf
mov
sub
mov
mov
pop
in
nop
mov
xchg
add
inc
and
pop
or
push
jbe
loop
in
fs
testl
mov
push
test
addr16
mov
repnz
nop
outsl
imul
fisttps
int
insb
movsl
sbb
fs
push
add
mov
leave
add
inc
fldt
imul
movsb
fcoms
dec
pop
xchg
arpl
pusha
dec
insl
das
dec
dec
push
mov
dec
and
mov
push
inc
mov
ds
addr16
les
push
clc
stos
jmp
cvttps2pi
and
push
out
lock
mov
shll
shl
lahf
movsl
sbb
inc
push
cwtl
mov
pushf
out
adc
stc
inc
adc
nop
in
jmp
mov
insl
sti
fs
fdivrp
cmpsl
dec
es
arpl
mov
and
in
dec
cld
subps
jmp
xor
enter
xor
lret
scas
stc
imul
sub
dec
fcoml
sti
repnz
pop
aad
mov
jno
jns
fwait
mov
mov
inc
xchg
or
andb
xor
lret
xchg
out
cmpsb
shr
icebp
mov
or
xorb
outsb
fstps
and
mov
subb
jecxz
dec
mov
rolb
push
loop
lea
jmp
imul
add
cmp
int3
imul
jb
test
cmpsb
sbb
xchg
inc
movsl
lahf
cs
pop
adc
cmp
popa
jnp
lds
xor
push
int3
in
push
rcr
xchg
pop
frstor
pop
pop
fstpt
test
mov
scas
movsb
pushf
ret
lock
xchg
xlat
jo
xchg
enter
add
mov
clc
aas
loope
push
pop
cmp
rcll
adc
and
pop
mov
jne
iret
pop
pop
sbb
cwtl
hlt
inc
sqrtps
cs
loopne
push
pop
push
pop
jne
rorl
pop
sbb
cs
fildll
cld
enter
mov
xchg
pop
in
mov
out
inc
rorl
sub
test
ret
or
mov
and
scas
xor
rorb
rcl
pop
ret
aam
cmp
out
or
xchg
dec
jl
mov
je
dec
frstor
rolb
inc
lcall
add
xor
adc
ficoml
cmp
cmpps
sbb
fwait
insl
ret
jecxz
dec
popa
testb
pop
inc
shlb
fistps
stc
mov
orb
xchg
ret
shlb
jbe
add
jl
frstor
test
dec
enter
mov
fstl
jbe
aad
idiv
imul
pusha
fisubl
in
dec
add
cmp
adc
jbe
lock
ds
lock
stos
push
repnz
in
add
inc
jnp
adc
dec
cmpl
fidivs
gs
mov
jmp
addr16
fs
cmp
ljmp
push
in
inc
push
aam
push
mov
mov
pop
xor
aad
test
cmp
fcomi
ret
dec
dec
in
and
rcl
xchg
jg
negl
lahf
popa
mov
push
or
fimull
mov
jae
imul
pop
test
shll
push
or
pusha
iret
jnp
daa
das
rorl
decl
jo
lahf
int3
lea
outsl
and
in
cmp
sub
in
xlat
jno
xor
je
out
fs
ljmp
out
std
ret
test
outsl
jp
scas
inc
outsl
cmp
mov
test
inc
inc
loope
icebp
ds
mov
lds
push
xlat
jno
rcrl
xchg
pop
cmp
cmp
fsubrp
sub
cwtl
mov
sahf
bound
pop
das
dec
aam
dec
xor
pop
sub
lea
and
add
icebp
mov
gs
jmp
std
stc
ljmp
lods
sub
mov
add
pop
cmpsb
mov
add
jne
push
pop
test
push
adc
insl
and
adc
fildll
insb
mov
daa
pop
xlat
cmc
rorb
loopne
lea
jo
les
cld
cmp
lds
xor
inc
xchg
sahf
mov
popa
mov
push
fidivrs
fildll
add
and
sbb
lea
jnp
orb
test
mov
sub
mov
mov
mov
repz
stc
adc
add
or
xlat
stos
dec
mov
xor
jne
mov
sub
pop
inc
adc
outsl
push
and
repnz
mov
js
adc
mov
mov
mov
stos
popa
sub
push
repnz
in
push
pop
add
or
fcomps
ds
out
mov
cwtl
sbb
lock
or
sbb
mov
lret
in
lock
add
cltd
fidivl
das
movb
sub
popf
xchg
ficomps
dec
mov
aaa
sahf
mov
dec
sub
mov
mov
mov
xchg
and
cmp
outsb
sbb
and
dec
sbb
dec
cs
inc
cmpsl
popf
test
int
or
pop
lods
and
push
lcall
outsb
je
mov
cmp
ljmp
add
cwtl
sub
daa
and
mov
mov
rclb
add
and
movsl
testl
ja
test
mov
sbb
xorl
pusha
adc
inc
adc
xchg
xor
jecxz
sahf
bound
jbe
mov
pop
imul
mov
add
subb
xchg
xchg
mov
inc
pop
loope
push
jb
stos
sub
jbe
bound
mov
sub
test
dec
inc
push
push
inc
jg
js
xor
cmp
pop
adc
add
inc
sbb
fisubs
mov
jns
loopne
push
pop
push
insb
xor
and
bound
sbb
fdivrl
xor
int3
fildl
lret
add
pop
in
out
adc
jb
sub
push
sbb
pop
stos
sub
or
aaa
mov
xchg
es
xor
stos
push
add
adc
pop
hlt
and
jl
or
les
cmp
mov
or
push
xor
fcomps
jb
popa
xchg
or
jg
aam
aas
add
dec
xchg
js
push
cltd
rep
rcll
adc
pop
out
int
adc
popf
out
mov
push
imulb
adc
cld
push
dec
out
cmpsl
bound
stos
dec
mov
jbe
add
sahf
in
mov
daa
cwtl
sub
jbe
mov
push
lret
fbld
test
pushf
jae
out
sahf
pop
jl
daa
mov
add
lods
dec
xor
add
add
pop
movsb
je
mov
add
xchg
adc
mov
xor
scas
rcr
pop
addr16
xchg
push
out
and
jno
mov
xlat
dec
cwtl
dec
and
cmp
adcl
mov
fidivrl
sub
cwtl
mov
cmp
std
dec
in
or
scas
rcll
movsb
out
loop
cmc
cmp
jbe
push
jno
std
dec
mov
lret
ret
testl
push
jg
loopne
mov
icebp
push
inc
movsb
cs
in
jmp
negb
pop
movsl
mov
jp
push
movsl
mov
or
pop
cltd
jge
cmp
pop
xlat
cmp
jno
sub
adc
cltd
outsl
dec
add
xchg
mov
mov
ss
loop
popa
add
std
sub
inc
std
or
adc
lret
or
lcall
push
pop
xlat
mov
ficompl
jl
push
fcomps
cmp
pop
sbb
in
cmp
and
out
hlt
ror
pushl
cmpsl
fwait
mov
push
inc
pushf
aam
mov
sbb
push
inc
loopne
inc
sbb
fdivrl
mov
sub
aam
add
or
mov
inc
mov
xchg
dec
arpl
and
hlt
imul
pop
imul
dec
and
mov
xor
stos
icebp
stc
jo
inc
mov
inc
adc
pop
cld
and
enter
jmp
push
or
xchg
ds
push
bound
out
shlb
sti
sbb
pusha
outsb
add
inc
in
add
push
in
ror
adc
sbb
imul
out
out
pusha
mov
cwtl
push
mov
add
imul
addr16
nop
or
pop
inc
dec
push
add
dec
mov
dec
rcrl
xor
je
adc
mov
inc
jg
jns
or
sti
mov
int
cld
pusha
js
test
or
stc
jns
cmp
js
or
inc
test
jb
inc
test
jno
push
add
jmp
push
jecxz,pt
cmc
sub
inc
jecxz
pop
xchg
pop
std
and
sub
pop
mov
nop
and
arpl
push
lods
adc
mov
push
jo
and
in
inc
popf
mov
mov
push
lods
aad
push
mov
fiaddl
and
mov
int3
icebp
insl
adc
out
xchg
mov
dec
ret
in
jb
sbb
ja
jbe
adc
xchg
push
or
mov
dec
arpl
out
rcrb
dec
inc
mov
mov
pushf
call
pop
lods
shrb
xchg
sub
nop
push
xor
nop
insb
inc
xor
in
sahf
mov
pop
cmp
pmovmskb
dec
xor
push
cmp
sbb
and
sub
and
in
dec
outsl
or
jmp
xchg
lods
aas
aas
xor
fsubs
stos
push
or
int3
mov
enter
popa
stos
xchg
or
in
sbb
lea
scas
sub
xchg
in
jbe
decl
cmpb
mov
adc
ret
scas
fldcw
enter
cld
movsl
mov
add
or
jle
pop
fstps
aaa
cld
mov
xlat
xchg
dec
mov
add
xor
and
loope
push
shll
bound
jg
inc
cmp
lds
loop
enter
cld
in
and
inc
add
and
lret
int3
cmp
bound
lret
rcr
push
mov
stos
sbb
aas
jmp
movsl
scas
xchg
jo
xor
xchg
mov
shlb
xchg
xor
movsl
mov
mov
das
in
outsl
insb
aad
mov
into
pop
outsl
mov
jb
and
out
in
loope
xchg
imul
enter
mov
aaa
fsubl
in
or
sarl
mov
push
jo
in
mov
fbstp
sahf
out
add
push
shll
push
jl
fnstcw
add
pushf
adc
push
repz
in
rorl
js
cmpsb
adc
insl
pushf
sbb
in
mov
imul
inc
or
call
mov
out
cmpsb
dec
ret
aad
jno
and
sbb
pop
adc
xor
loope
pop
jnp
jne
aam
xchg
lds
fwait
out
imul
cmpsl
inc
in
mov
popa
dec
popf
sub
xor
mov
push
je
cmp
and
add
cmp
scas
or
sbb
out
lds
push
fiadds
adc
dec
stos
xchg
xchg
insl
cld
ret
testl
shl
inc
aaa
push
test
mov
push
cs
lret
or
test
mov
dec
cmpl
scas
mov
xchg
lock
daa
pusha
pop
shrl
cwtl
test
sahf
je
popf
cmp
push
rcrl
push
es
or
shll
dec
pop
aam
rcll
ljmp
jecxz
xor
mov
insb
clc
mov
or
out
cli
dec
inc
pop
imul
movsb
xor
das
lock
jmp
mov
scas
inc
mov
in
dec
xor
mov
in
mov
std
dec
push
shlb
and
scas
lea
and
or
mov
push
sbb
mov
jns
arpl
add
xorb
clc
pop
mov
insb
icebp
mov
cmp
mov
xor
dec
imul
add
ds
dec
fdiv
lcall
test
rclb
add
cmp
jle
loopne
push
push
leave
ret
lock
dec
cmc
es
sbb
inc
aas
push
pop
jb
lahf
and
daa
xchg
sub
mov
sub
mov
cmp
sti
push
ds
pop
mov
es
sbb
pop
sub
pop
xchg
push
out
or
cmp
lds
cmp
add
pop
push
mov
cli
rol
cld
iret
fcoms
divb
sbb
sbb
hlt
or
add
jbe
test
repz
ror
jo
pop
je
mov
sbb
xchg
mov
loopne
jns
xor
adc
push
fs
shll
pop
push
insb
mov
test
pop
mov
in
pop
in
iret
add
fucom
xlat
push
jae
jne
push
and
add
dec
xchg
pop
xchg
pusha
cmp
lds
jns
in
jo
xorb
pusha
sub
sahf
or
xlat
mov
mov
xor
sbb
inc
mov
jo
mov
ret
sub
push
jecxz
push
sub
xchg
inc
popa
push
cmp
aas
lret
xor
pop
dec
sub
pushf
mov
or
mov
cmp
add
mov
jbe
scas
daa
fs
sbb
sbb
in
fstps
ljmp
xchg
cmp
jno
dec
sbb
xchg
pop
push
or
and
dec
mov
dec
shlb
icebp
mov
mov
xor
inc
outsl
adc
pop
pop
fptan
and
mov
lahf
push
pop
notb
sub
mov
ja
mov
sarb
loope
into
mov
inc
add
data16
mov
shr
dec
lahf
stos
test
adc
sbb
scas
incl
fcompl
inc
std
jecxz
pop
or
mov
clc
cmp
xchg
adc
loope
push
pop
pusha
mov
jb
jmp
jge
mov
xchg
pop
mov
add
xchg
adc
jne
dec
and
jge
cmp
jo
cmpsl
inc
rclb
leave
sti
cmp
and
adc
in
fisttps
jbe
test
loope
mov
and
sti
movsb
and
xor
idivl
xor
jle
and
sub
hlt
adc
fwait
int3
loop
fstl
jecxz
pop
pop
jnp
vcomisd
roll
popf
jb
and
lods
and
pop
cmp
inc
fstpl
ja
mov
push
rcrl
mov
fs
nop
pusha
jnp
mov
pop
std
pop
jge
cmp
mov
mov
inc
inc
jg
icebp
pop
shlb
int
arpl
jae
cli
push
loope
add
lea
cmpsl
xorl
lock
cmp
jnp
scas
xor
xor
xchg
test
cmp
popf
adc
xor
pop
stos
add
or
or
js
adc
jle
cmp
jb
mov
aas
dec
and
pop
xchg
push
daa
shrb
nop
int3
and
stc
fnstenv
stos
dec
loope
gs
loope
fs
mov
adc
add
push
pop
mov
mov
ljmp
pop
dec
ds
mov
popa
in
mov
mov
lds
xlat
subl
mov
push
lods
ljmp
xchg
cmp
cli
js
sub
ret
gs
sub
aam
stos
push
dec
fsubr
jecxz
das
xchg
sahf
and
pusha
sbb
jns
add
pop
jecxz
out
fwait
mov
sti
adcl
rcl
leave
outsl
bound
pop
data16
je
xor
xor
dec
sub
fisubl
jmp
push
xchg
dec
psrld
shrl
mov
and
cmp
sahf
mov
pop
ja
mov
out
lock
pop
adc
popf
pop
notb
and
push
and
fs
adc
imul
dec
popl
jne
mov
and
les
int3
int
lcall
mov
jo
lahf
jns
into
mov
and
jb
push
fisubl
mov
test
cmp
xlat
outsb
push
movsb
xchg
or
jge
ss
pop
adc
mov
cmpsl
jns
cmpsb
sbb
movsl
cmp
and
xchg
aas
xor
out
or
loopne
xor
jmp
js
pop
inc
sti
cwtl
ljmp
outsb
out
mov
fiaddl
jle
icebp
jecxz
pop
shlb
push
push
jno
jmp
xchg
stos
cmp
mov
addr16
out
mov
pop
sti
nop
dec
stc
sub
cmp
adc
movsl
cld
lcall
scas
mov
dec
inc
negb
loop
out
fidivrl
or
in
dec
lea
addr16
dec
xor
lea
std
push
dec
imul
jp
add
test
stc
jecxz
leave
stos
decl
test
add
cmp
loopne
or
jne
mov
pop
or
and
ds
outsl
mov
adc
xor
jno
pop
in
fsincos
mov
xor
xchg
stos
inc
retw
adc
push
sbb
inc
inc
ret
jnp
add
jl
or
dec
in
sbb
divb
cltd
cmpsb
mov
test
sub
out
xor
sub
mov
adc
pop
mov
rcrb
add
movsl
sub
jne
xchg
mov
into
adcl
add
or
xchg
fdivs
jne
in
test
inc
adc
inc
jmp
and
and
inc
jno
mov
notb
cmc
xor
ljmp
xchg
or
jnp
cli
adc
and
addl
in
mov
mov
mov
cli
addb
xor
sub
push
popa
shll
adcl
jl
test
repnz
stc
arpl
out
test
xchg
pop
test
popf
add
loop
icebp
xor
mov
aad
push
adc
sbb
repz
jnp
rclb
sub
mov
jno
rorb
jnp
mov
out
movsb
fsts
bound
test
shl
iret
das
jno
push
and
push
sub
in
push
jae
rcl
fldt
cltd
jo
aaa
inc
mov
push
push
lea
in
mov
divb
insb
test
fidivs
mov
aaa
jge
mov
addr16
inc
push
nop
cld
cli
jp
and
sub
sbb
mov
jae
pop
gs
pop
rcrb
pop
sti
xchg
sahf
outsl
cmp
dec
flds
lret
mov
add
sub
and
rcl
idiv
sub
lods
adc
inc
lret
xchg
mov
xor
sbb
xchg
inc
xor
or
imul
sahf
fsts
push
or
std
xor
outsl
mov
jo
push
ret
cmpsl
imul
mov
xchg
cltd
push
jno
push
inc
and
or
mov
ja
outsb
into
addb
mov
cwtl
fisubs
pop
mov
push
adc
inc
jae
loop
mov
xor
push
test
xchg
push
mov
add
insl
and
xor
or
adc
jbe
add
adc
nop
sub
dec
test
stc
inc
scas
clc
jae
cltd
xlat
inc
jno
mov
leave
mov
stos
xchg
shl
ret
in
addb
and
mov
xlat
aaa
push
mov
or
aaa
inc
cmp
int
xchg
xor
sar
cmp
clc
lahf
add
push
scas
into
movsb
loopne
mov
cmp
pop
lcall
test
push
jecxz
dec
add
repnz
aas
jge
sub
mov
lahf
mov
sub
cmp
enter
cmp
xchg
xchg
repnz
or
dec
es
in
mov
or
and
push
sub
mov
push
jnp
inc
push
mov
hlt
mov
cmp
mov
push
push
sub
mov
mov
flds
lock
pop
in
add
sbb
daa
xchg
fs
cmp
arpl
test
lods
sarl
lock
push
dec
xchg
les
push
push
inc
cmp
dec
mov
fimuls
push
leave
add
rorl
cld
add
sbbb
cmpsb
pop
sahf
pop
cltd
ja
jne
ret
lods
fadds
cmp
cmc
repz
mov
stos
dec
insb
movl
out
mov
sub
ss
sub
out
rol
xchg
jle
mov
and
dec
cmp
inc
dec
lea
insb
roll
cmp
mov
pop
enter
inc
fwait
das
shlb
stos
mov
addr16
xchg
mov
jno
mov
mov
push
je
mov
sti
in
idivb
popf
in
ss
fsubl
fwait
xchg
inc
jno
jl
fmuls
sbbl
icebp
or
xor
add
sbb
out
xor
push
ret
bound
iret
jnp
add
sahf
fstps
std
add
cmp
aam
out
adc
mov
pop
scas
je
sub
stos
or
ror
lock
mov
xchg
clc
movsl
scas
cli
cmp
in
sub
inc
pop
mov
hlt
or
jl
add
stos
icebp
mov
ljmp
ljmp
pushl
mull
inc
xlat
filds
sub
xorl
inc
repz
outsb
rol
dec
fldl
xor
xor
jg
ret
sub
and
jb
fs
sbb
jb
lods
aad
aad
sarl
cmpsl
xchg
jecxz
in
imul
loop
leave
gs
inc
cmp
leave
mov
cli
and
push
andb
cld
repnz
xchg
mov
jb
cwtl
sahf
mov
or
push
jge
dec
rclb
jge
mov
aam
push
push
ret
aaa
mov
or
dec
cmpl
iret
fs
sub
ds
push
nop
das
push
jecxz
mov
cmpsl
pop
je
or
daa
test
cmpsl
cmp
mov
stos
push
pop
sub
jno
and
pop
push
xchg
idivb
testb
inc
cli
stc
sub
shl
mov
aad
test
push
xchg
mov
pop
xor
loopne
cld
jno
mov
insl
add
leave
outsl
shlb
mov
in
arpl
xor
les
ja
clc
cmp
imul
push
mov
cs
test
add
in
jns
inc
adc
pop
outsb
idivb
shrb
shlb
in
adc
push
push
unpckhps
dec
cmp
or
dec
pop
scas
mov
pop
iret
adc
shr
xor
mov
or
cmp
sarb
repnz
mov
ljmp
xor
es
outsb
lcall
sub
jmp
cltd
fisubrs
clc
pop
or
gs
aam
in
fwait
call
push
xchg
push
iret
out
sbb
imul
ds
xor
sahf
push
popf
mov
sti
shrl
sahf
inc
aam
inc
loop
out
sbb
lea
repnz
mov
mov
sub
out
fnstenv
imul
jg
xlat
xor
sarb
mov
mov
sub
dec
cmp
jbe
dec
mov
aaa
shll
stc
fsub
test
and
jecxz
mov
loopne
xor
xchg
inc
jl
inc
pop
xor
pop
jl
cmp
or
sub
and
fs
fmuls
jno
mov
ss
jmp
mov
and
push
mov
dec
mov
es
shrb
cmp
int
and
jo
push
sub
mov
push
jne
arpl
aam
add
pusha
mov
xor
stos
clc
cwtl
fldt
insl
sbb
push
pop
add
inc
inc
mov
cmp
js
sub
mov
popa
mov
mov
inc
xor
sbbl
sbb
stc
lds
incl
cbtw
test
adc
sbb
test
jmp
add
enter
xchg
cld
mov
or
jg
notb
or
jmp
xor
fdivrs
bt
lds
sbb
sub
cld
jb
sub
out
mov
add
push
and
hlt
mov
insb
loope
aam
add
and
inc
mov
in
xor
jae
rcrb
jno
ror
or
add
out
xchg
xor
jno
lret
pop
mov
jge
or
push
xchg
xor
pop
mov
mov
mov
xchg
es
in
lods
loope
mov
xchg
mov
mov
or
dec
outsl
xor
add
sbb
leave
sub
sub
or
loopne
les
je
repz
popf
xor
push
and
pop
dec
fisubrl
sub
into
push
xchg
daa
xchg
pop
rorl
enter
sbb
mov
mov
push
jp
mov
mov
sahf
add
lock
ljmp
mov
inc
rep
test
loop
call
push
sub
or
fsubl
lret
xchg
lods
or
popa
mov
add
xor
into
dec
out
add
rorl
cltd
ljmp
cmp
insb
int
xor
jns
cli
pop
mov
negl
test
pop
out
mov
daa
test
and
test
cmpsb
jl
pop
pushf
movsl
xchg
jne,pt
call
js
xchg
xchg
xor
repz
imul
push
cmp
jge
fcmovnu
dec
sbb
push
inc
js
lcall
out
inc
mov
repnz
out
add
popf
dec
cmp
mov
add
cs
aaa
cli
sub
xor
sbb
aaa
jno
xor
test
adc
sbb
addr16
shlb
fwait
push
lock
inc
adc
das
xchg
in
incl
jno
cmp
in
loop
test
into
add
jbe
aas
and
adc
and
orl
outsb
cld
iret
jbe
xchg
push
xchg
dec
lods
ljmp
xchg
sub
testb
xor
lret
inc
inc
xor
and
cmp
sbb
cli
and
adc
mov
mov
mov
gs
push
in
sbb
or
xchg
int3
adc
cs
loop
enter
push
mov
add
sti
push
push
pop
and
jg
push
scas
xchg
dec
loop
push
sbb
lahf
movsl
mov
mov
push
xchg
jmp
mov
lahf
arpl
push
sbb
icebp
jne
inc
lds
sbb
pop
lods
and
and
cld
xchg
jno
andl
or
sbb
adc
push
jmp
cmpsl
push
popf
popl
mov
cmp
add
mov
xor
fxch
rcl
inc
add
repnz
or
test
fisttpl
aam
fiadds
loope
cld
inc
cli
and
adc
int3
lret
lret
mov
push
jmp
sti
mov
add
mov
mov
into
test
shlb
addr16
sti
mov
cmc
hlt
in
and
xor
cmpb
sub
push
lock
and
xlat
or
stos
testb
bound
and
icebp
cmpsb
in
push
mov
je
inc
dec
fsubrl
push
add
inc
pushf
lea
test
call
or
mov
std
ret
dec
enter
cmpsl
movsl
pop
push
push
sub
mov
ljmp
inc
push
sbb
push
sub
lods
jne
mov
cmp
mov
lret
test
add
stc
outsb
iret
ljmp
bound
cli
mov
dec
test
mov
inc
push
js
outsl
jbe
adc
push
mov
mov
jl
sbb
jae
movsl
inc
dec
inc
add
mov
cmp
stos
dec
adc
xchg
xor
mov
add
cli
push
mov
fistpl
mov
mov
shll
popf
xchg
ret
dec
fidivrs
fs
mov
shlb
cmpsb
mov
cwtl
cmp
inc
dec
jl
dec
cmp
pusha
mov
cltd
jns
sahf
leave
add
dec
aas
filds
xor
jge
icebp
ret
adc
xor
repz
and
mov
test
push
mov
daa
ret
or
rcrl
rcrl
jle
dec
aam
and
sub
jg
mov
es
ror
dec
mov
insl
fildl
pop
outsb
iret
and
test
mov
mov
mov
xchg
push
lret
loopne
dec
mov
aam
test
or
xchg
and
cs
or
stos
shlb
pop
mov
pop
and
xor
pop
xlat
push
push
std
fsub
dec
jmp
jne
lahf
cs
leave
aam
and
mov
sub
testl
inc
mov
adc
ss
jmp
lret
dec
jns
repnz
inc
mov
hlt
xchg
ja
test
fimull
xchg
int3
mov
aad
xchg
mov
cmp
mov
jbe
imul
sub
lods
dec
sbbl
ds
mov
fdiv
pusha
cld
jne
mov
leave
push
mov
or
pop
es
fdivrl
mov
fstl
loop
or
push
mov
xor
add
jp
mov
cmc
xor
xorb
aas
test
aad
outsl
pop
mov
int
xor
aam
sub
inc
sub
addb
in
mov
xchg
sti
test
xor
dec
in
outsl
aam
arpl
cltd
jmp
mov
fcmovb
rolb
ds
int
mov
xor
nop
insb
xchg
scas
push
jo
fdivr
test
scas
insl
jb
shll
pop
adc
sub
push
push
notb
pushf
xchg
sarl
dec
mov
mov
or
xlat
cmp
sub
cmpsb
xor
xchg
inc
incl
ror
mov
idivl
adc
cmpsb
jmp
cmp
xchg
adc
xor
repnz
xchg
mov
sar
aad
loopne
mov
cmpl
dec
lret
or
xor
mov
ret
jge
sub
ret
jmp
mov
aam
dec
mov
pop
hlt
repnz
mov
add
icebp
mov
iret
addr16
test
outsb
xchg
mov
movsb
sarb
pop
mov
mov
movsl
ss
scas
pop
or
sub
or
mov
inc
xchg
ficomps
ret
andl
sub
pop
bound
pushf
dec
mov
roll
lds
mov
jne
pop
cmpsl
and
or
mov
insb
movsb
adc
stos
inc
movsb
sub
es
cmp
fmulp
lea
rcrb
sbb
pop
mov
lock
loope
pop
jb
and
pop
inc
ret
imul
jle
in
cmp
or
jmp
ljmp
add
sub
adc
iret
push
fldt
test
or
fisttps
cmp
inc
adc
and
nop
inc
mov
int3
sbb
aaa
jecxz
stos
and
in
mov
dec
cli
mov
decl
aam
inc
push
pop
ror
sub
or
pop
mov
sti
push
xlat
aad
call
sti
pop
rcrb
les
leave
adc
out
inc
movsb
pop
xor
sub
adc
lds
jne
lea
pop
push
cld
mov
push
test
lds
pop
jle
jno
mov
aas
cltd
sbb
ret
dec
fbld
mov
std
ja
nop
out
es
mull
imul
pushf
std
jbe
dec
clc
jl
cmp
leave
mov
push
cs
xor
shrl
xchg
scas
add
test
mov
cs
out
xrelease
shll
sub
xchg
push
ljmp
fdivr
inc
xchg
cld
fcomps
xlat
mov
cmp
mov
jno
jg
adc
mov
cmp
jp
lcall
cmp
shl
imul
pop
out
or
mov
adc
dec
std
mov
ds
mov
fxrstor
cmpsl
xchg
xchg
in
cmp
pop
push
cwtl
fwait
mov
mov
dec
mov
adc
xor
add
push
sub
jle
fsubp
push
in
dec
fstpt
outsl
test
js
pop
movsl
out
or
add
movsl
mov
inc
add
pop
inc
inc
aas
add
and
adc
xchg
and
negb
enter
push
cwtl
inc
aad
sbb
mov
xchg
or
data16
bswap
add
or
lcall
icebp
fldl
mov
das
mov
jnp
test
adc
repnz
mov
int3
and
loopne
mov
cmp
sar
push
icebp
enter
or
push
mov
addb
sub
sub
or
fbstp
jmp
pop
dec
sub
push
sti
fs
fidivrs
fcmovnb
lcall
gs
imul
ret
movq
push
rorb
jo
sub
outsb
sub
cmc
out
jns
sbb
rep
fmul
inc
jp
out
scas
xchg
add
enter
movsb
pop
bound
jae
adc
adc
jecxz
in
sbb
pop
and
out
jne
xlat
or
gs
test
jnp
xchg
sbb
mov
sti
test
lods
out
mov
xchg
movsl
cmp
test
jns
xchg
addb
cmp
push
push
fistps
sbb
iret
lock
and
adc
xchg
and
jb
pop
cmp
sbbl
pop
xchg
mov
push
xchg
push
shrl
pop
ss
das
fsubrs
inc
jbe
ja
xorb
cmc
jg
dec
pop
stos
pop
stos
or
push
fcmovne
dec
fcoml
out
faddl
dec
jl
mov
fcompl
and
xor
insl
clc
test
mov
dec
add
aam
sbb
jnp
sub
out
notb
xor
mull
xchg
xchg
das
test
sti
jmp
hlt
mov
repnz
pop
aaa
pusha
add
xchg
lock
pop
in
repz
sbbb
and
xchg
jae
cwtl
inc
and
test
rorl
jg
test
jnp
mov
loope
movl
mov
sti
xor
adc
repz
mov
pusha
scas
cwtl
lock
aaa
push
nop
push
xor
sub
incl
das
insb
or
sub
mov
push
mov
aam
jae
sti
ficompl
xchg
js
dec
pop
adc
cmpsl
in
sub
aad
arpl
nop
outsb
movsb
inc
xlat
add
mov
pop
sbb
call
mov
pop
lea
cmpb
into
andl
sub
inc
outsl
xchg
test
ja
lods
mov
bound
push
mov
add
mov
xchg
out
pop
xor
fwait
out
and
clc
sub
xchg
fdecstp
jl
add
and
mov
or
imul
adc
test
inc
or
push
cmp
or
rcl
jbe
xor
add
mov
and
xor
fmulp
push
cmpsb
jne
and
fmuls
mull
or
lahf
inc
mov
lock
or
jno
adc
iret
cmpsl
in
decl
cmp
mov
or
scas
movsb
je
bound
ss
incl
js
inc
pop
mov
mov
mov
fnstcw
sub
and
int3
test
les
sbb
sub
sbb
aam
inc
sub
xor
pop
dec
mov
into
in
pop
or
and
arpl
mov
loope
sub
scas
push
or
shl
mov
test
push
test
inc
pop
push
pop
add
idivb
xchg
aas
clc
cwtl
in
inc
pop
dec
mov
dec
adc
add
fwait
hlt
push
jle
or
cs
dec
inc
adc
or
ljmp
mov
out
pop
outsl
push
rorb
pop
jmp
sub
aas
and
push
mov
aam
jecxz
xchg
int
adc
fs
incb
add
rorl
fisubl
bnd
pusha
test
sub
fimull
fildll
pop
call
mov
lods
imul
mov
dec
push
cwtl
xor
js
aad
mov
dec
pop
sti
jmp
notl
cmp
add
push
adc
jno
insb
adc
outsl
clc
mov
jecxz
xor
ffree
in
clc
mov
arpl
repnz
clc
push
int
sbb
ret
push
adc
pop
popa
inc
lret
add
stc
push
dec
fld
push
into
aad
mov
imul
loope
cmp
xchg
and
dec
xor
ficomps
loope
adc
xchg
xor
rolb
ja
jb
xchg
out
jbe
hlt
aad
fwait
inc
mov
xchg
push
test
cwtl
dec
imul
cmp
sbb
adc
stos
cs
mov
stos
dec
out
insb
popa
xchg
adc
in
inc
mov
lahf
jecxz
fwait
aad
push
lahf
cli
add
mov
cmp
xchg
mov
lock
add
push
dec
sti
or
insl
sbb
popf
pop
shr
lock
aaa
push
sub
jns
lods
jns
mov
in
cmp
ds
mov
pop
setne
cmp
lret
orb
sarl
ss
js
fcmovnbe
test
out
jmp
lods
jb
bound
sarl
mov
addr16
adc
int3
movlhps
ljmp
jae
cltd
cmp
sub
xchg
pop
push
or
mov
adc
push
lods
mov
ret
cwtl
jae
ss
ljmp
das
sbb
in
inc
sub
ds
push
jge
jge
js
in
call
cmp
adc
push
cmp
sbb
pop
aas
push
pop
xor
xor
std
popa
subl
mov
sub
mov
push
mov
js
fistpl
lock
jecxz
mov
nop
mov
decb
and
or
mov
fsubrl
int3
loopne
mov
icebp
shrl
pop
push
pop
cmp
dec
sbb
pop
xchg
jmp
cmp
sbb
mov
pop
cs
add
ja
ja
cmp
push
mov
mov
cmp
call
push
sbb
add
das
lahf
pop
and
mov
cmp
out
repnz
sub
jge
pop
mov
popf
add
int
xchg
mov
movsl
cmp
mov
ficoms
enter
push
lods
pop
sarb
push
dec
sbb
or
out
test
fsubs
enter
pusha
pop
pop
int3
stos
in
popa
sahf
adc
pop
jno
cmp
or
out
hlt
gs
push
add
std
push
mov
push
adc
xchg
pop
lret
adc
adc
das
push
mov
orl
dec
xor
out
mov
mov
cmp
adc
jb
sub
stc
inc
mov
pop
mov
pop
pop
mov
sub
fstpt
push
push
pop
pushf
push
das
arpl
pop
jl
rorb
sbb
sub
push
dec
ret
jbe
frstor
idivb
shll
xchg
lods
or
sub
mov
push
leave
xchg
out
mov
imul
cmp
dec
dec
cld
mov
fidivrs
mov
mov
ss
jne
out
imul
sahf
mov
clc
xor
data16
xchg
scas
mov
push
inc
std
prefetcht2
push
cld
ljmp
xor
mov
insl
fldt
js
mov
inc
adc
bnd
cld
mov
test
dec
stc
out
out
push
test
outsl
and
mov
int
mov
xchg
repnz
adc
push
fucom
ds
add
pop
xchg
into
hlt
adc
sahf
stos
xchg
fstpl
clc
std
adc
scas
insb
and
lods
dec
mov
mov
jb
mov
fs
data16
mov
shrb
inc
test
daa
daa
mov
jno
xor
call
mov
ror
mov
test
sub
incb
xchg
scas
outsb
xlat
in
in
pop
or
pop
mov
xor
mov
or
jg
in
lret
adc
jns
pop
push
insb
adc
xchg
shr
dec
dec
jmp
insb
fcoms
xchg
out
cltd
sti
jle
in
popa
jmp
jb
test
cmpsb
insb
repz
xchg
dec
push
mov
test
stos
jne
std
push
jae
test
rcrl
push
insb
mov
lods
stos
loopne
jge
adc
lea
data16
cld
or
or
adc
leave
inc
mov
scas
jne
mov
jne
mov
cmpsb
push
enter
lahf
mov
int
cs
adc
insb
imul
shrl
or
cmpsl
push
cmc
cmpsb
popa
xor
sbb
sbb
jo
loop
repnz
sub
stos
das
int3
movsb
notl
and
xlat
dec
xor
aad
aad
test
pop
sbb
mov
cmp
inc
pop
jno
pop
outsb
insb
aas
iret
subl
dec
jmp
bound
and
inc
sbb
rclb
icebp
sub
cmpsb
fdivr
mov
aad
gs
cmp
jmp
stos
mov
xchg
scas
gs
add
mov
adc
or
cs
jbe
mov
push
mov
inc
sbb
in
add
fiadds
out
or
rorl
jae
jecxz
jl
xor
lods
sub
lahf
lret
inc
mov
incl
add
cltd
dec
mov
push
aad
jg
mull
cltd
jg
jle
jmp
add
xor
rorl
fnstcw
add
mov
inc
sbbb
gs
xchg
inc
pop
xor
mov
and
cmp
cld
popf
test
jbe
stc
cltd
jb
xchg
in
pop
jl
mov
jns
in
cli
adc
mov
daa
pushf
and
rcr
jns
sub
inc
mov
outsl
cwtl
int3
js
std
movsb
cld
ja
or
imul
out
jle
inc
push
xor
aam
mov
mov
shlb
push
pop
mov
xor
out
loope
or
xchg
cmp
outsb
inc
pusha
fidivrs
adc
xchg
stc
outsl
insb
lds
cmpsb
cwtl
in
xchg
mov
mov
xchg
pusha
aaa
xor
outsb
lock
push
enter
enter
std
mov
sub
inc
sub
inc
xchg
mov
out
cs
rolb
sbb
jle
sub
inc
lahf
jle
pop
enter
xchg
xchg
ret
xchg
shlb
ljmp
jo
add
jecxz
or
movsl
data16
sahf
or
jle
sub
mov
popa
mov
xor
dec
popf
xchg
pushf
mov
arpl
pop
repnz
pushf
nop
sahf
push
inc
sar
mov
add
push
add
jne
sbb
scas
and
cli
xchg
inc
stos
inc
push
push
enter
icebp
cmp
push
int
outsb
jp
and
xchg
dec
ret
andl
lods
pmaddwd
ret
enter
jmp
push
or
inc
add
pusha
dec
daa
fmull
xor
push
pop
mov
sub
xchg
sbb
outsb
fbld
fistpl
mov
xorl
std
lods
jbe
xchg
add
mov
test
cmp
mov
rcll
dec
jge
xchg
std
xor
dec
out
leave
xchg
push
lret
and
adc
test
xor
stos
enter
jb
sbb
mov
les
es
insb
inc
xchg
arpl
mov
ja
sahf
adc
cmp
sahf
sar
xchg
popf
jp
adc
jmp
xchg
inc
jb
push
imul
sub
mov
jbe
js
push
bound
xchg
pop
fidivrl
sbb
stos
cmp
push
xor
jnp
and
dec
in
lret
or
jge
lock
cmp
out
out
ja
mov
add
jae
mov
mov
call
push
inc
adc
push
sbb
or
add
mov
add
fs
in
cli
push
movsb
in
or
imul
sbb
loopne
and
sub
jae
out
pop
mov
xchg
cmp
out
jae
xor
sub
fwait
dec
or
pop
aam
fstps
ljmp
jbe
dec
scas
cli
mov
xlat
hlt
pop
pusha
mov
jle
stc
cmc
pop
jecxz
loop
aam
add
or
cmp
and
iret
jmp
push
cmp
cmp
jl
xchg
call
shll
xchg
mov
in
outsb
cmc
stc
dec
leave
stc
call
fsubs
xor
jbe
jns
out
roll
pusha
lods
mov
jg
xchg
add
mov
ret
cmp
pop
pop
cmpsb
mov
inc
xor
mov
adc
imul
lea
ror
mov
sarl
imul
sub
add
mov
pop
adc
loopne
mov
xchg
int
mov
cmp
js
adc
mov
orl
scas
lock
xorl
jno
push
dec
lea
or
pop
mov
lea
ret
filds
shll
mov
xchg
fcomps
sbb
inc
mov
jg
lea
dec
outsl
or
lret
sub
sub
fdivs
sbb
cmpsb
cmp
push
mov
push
cmp
push
add
xchg
pop
in
mov
jne
and
inc
sarb
pop
push
jg
pop
les
add
and
sar
mov
dec
xchg
dec
negb
sub
mov
sbb
pop
fcomi
push
jne
or
fs
movsb
add
fs
inc
add
rcrl
cltd
jo
inc
repz
in
fdivrp
out
xchg
mov
stos
cmc
push
jnp
idivb
imul
dec
xchg
jno
fistps
mov
ljmp
jo
jne
jne
test
loop
push
stos
nop
imul
cmpsl
ret
xchg
add
mov
add
imul
addb
cwtl
mov
lock
inc
pop
fstps
out
cmp
push
push
in
insb
mov
sub
mov
pusha
sbbb
push
mov
pop
push
repz
mov
xor
mov
test
xchg
pop
out
cld
inc
mov
xchg
inc
or
mov
stos
pop
and
movsl
jb
mov
js
pop
push
repz
pusha
xchg
push
cmc
fsub
arpl
push
push
adc
andl
data16
push
repnz
jl
test
jne
inc
ds
ds
pop
roll
cmp
aam
decb
ret
xchg
mov
fwait
sarl
pusha
add
mov
iret
mov
movsb
movsl
out
adc
nop
sub
add
jg
sub
mov
es
sub
push
lret
repnz
ficomps
fsubr
jae
aas
cli
into
negl
cmpsb
and
fimull
test
bound
dec
fucomp
stos
jmp
mov
xor
mov
test
jns
fmull
in
push
test
mov
pop
std
mov
pusha
sbb
ljmp
inc
or
leave
loop
inc
lods
into
sub
lret
xchg
xchg
inc
push
test
cmc
push
mov
dec
mov
mov
scas
inc
xchg
mov
lea
flds
xor
popf
dec
pushf
ja
in
aam
rorl
mov
mov
mov
pushf
test
cmp
xchg
push
xor
movsl
pop
jnp
xor
xor
mov
cltd
fdivp
mov
lods
sbb
mov
sbb
scas
test
sbb
adc
frstor
enter
fwait
dec
int
in
in
fldenv
xchg
mov
push
push
mov
mov
lds
es
loop,pn
dec
outsb
insl
xchg
je
or
push
push
rolb
mov
es
je
jno
adc
sbb
fnstcw
clc
mov
icebp
add
gs
sarb
cld
xor
sbb
out
hlt
je
and
sub
and
push
outsl
loopnew
mov
div
stc
aad
daa
or
shll
in
xchg
adc
in
psllw
lods
jne
call
dec
sti
imul
insb
lcall
bound
sti
dec
add
imulb
popf
andl
sub
jno
dec
inc
inc
sbb
xchg
ja
icebp
adc
mov
mov
jbe
mov
insl
cltd
ret
ret
xor
sbb
cltd
cmp
mov
frstor
je
les
jle
xchg
rorb
dec
jge
sarb
aaa
jno
xchg
jg
sub
inc
inc
shl
das
push
mov
mov
out
or
cmp
sbb
lret
and
xlat
inc
mov
inc
push
xor
loopne
les
pop
jno
fisubl
pop
mov
es
out
out
gs
icebp
or
lock
mov
outsb
xor
or
out
inc
popa
inc
sbb
xlat
out
std
cmpsl
out
das
std
idivb
ret
push
jbe
insb
jae
movsb
imul
push
cmp
ficoms
or
sbb
cs
orb
je
js
sbb
mov
arpl
int3
push
mov
xchg
mov
popl
pop
xor
adc
lcall
in
into
insl
mov
pop
add
nop
add
rcll
jb
sub
hlt
push
and
jbe
sbb
xor
jmp
jnp
xor
mov
ljmp
xchg
test
xchg
out
pop
clc
mov
in
mov
xchg
mov
and
or
adc
sbb
inc
movsb
xor
mov
jns
xchg
mov
xchg
sti
mov
nop
xorl
movb
fldt
add
inc
outsl
cmp
adc
stos
lock
jo
cmp
mov
sub
add
popa
inc
cli
ljmp
out
sahf
inc
or
mov
adc
repnz
cmp
int
mov
mov
mov
and
cmpsb
int
movsb
aaa
test
in
daa
les
rorl
push
jno
fsub
sbb
pop
pop
adc
ljmp
pop
push
insl
sub
ljmp
and
jns
idivb
pop
lret
pop
outsl
mov
xchg
or
out
adc
push
jbe
adc
xor
jmp
movsb
mov
gs
bound
cmp
cmp
enter
jo
and
repnz
xor
out
and
xchg
aad
insb
adc
popf
add
scas
lcall
mov
xlat
sbb
fidivrl
outsb
lea
and
cmpsl
fdivs
scas
fsubrl
sbb
scas
dec
ja
ror
or
sub
ret
pop
js
imul
or
mov
xor
inc
mov
mov
mov
mov
ds
pop
jg,pt
pop
pusha
jmp
push
xor
inc
pop
cmc
sahf
ss
pusha
rcrl
xor
cmc
xlat
or
clc
pop
cld
cld
imul
jae
inc
inc
shlb
xor
or
movsl
cli
rol
pop
in
adc
mov
inc
mov
cmpsl
cld
adc
fwait
sbb
mov
test
and
scas
mov
push
repz
mov
or
test
mov
fisubrs
pop
jp
mov
stos
lds
jge
mov
pop
xor
dec
jg
dec
insl
out
scas
jle
and
aaa
nop
sub
and
fistpl
mov
aas
lret
xor
js
in
data16
xchg
sbb
jp
dec
lahf
aam
push
pop
mov
and
fsts
push
iret
dec
out
dec
pop
testl
ret
fs
les
pop
insb
sbb
jmp
xlat
dec
jl
mov
rsqrtps
icebp
mov
and
pusha
jp
mov
push
inc
mov
mov
mov
push
dec
aad
es
sahf
pop
popf
mov
xchg
cmp
mov
sub
fldcw
and
ja
enter
inc
in
cmp
outsb
inc
jnp
sbb
jecxz
in
flds
mov
mov
sbb
daa
mov
mov
jns
outsb
mov
adc
xor
mov
pop
inc
fwait
es
add
sbb
fs
xchg
ret
and
jb
out
pop
scas
arpl
mov
or
ret
cli
cli
das
xor
imul
jle
les
pop
mov
jae
aaa
lods
into
dec
jne
xor
pop
pop
out
sbb
xchg
jbe
sub
loopne
int3
sbb
push
sub
xchg
xchg
fcmovnb
out
dec
mov
mov
jb
sub
mov
inc
and
adcb
and
and
dec
enter
xchg
les
xchg
xor
or
insb
mov
xchg
ret
mov
cmp
and
addr16
stc
cwtl
dec
cmp
cmpsb
aad
push
in
in
dec
fdivrl
sub
lods
cmp
lahf
pop
mov
fcoml
mov
add
in
clc
xchg
lret
andb
test
loopne
inc
jno
jl
and
std
mov
inc
addr16
mov
mov
das
xchg
out
pop
jb
push
mov
xchg
add
leave
push
sbb
push
inc
cld
xchg
fisubs
xchg
das
fdiv
mov
dec
lods
jns
sahf
push
mov
xchg
push
sub
outsb
sbb
flds
mov
jp
int3
xor
add
outsb
int
jnp
add
in
sbb
mov
jns
das
push
mov
test
lret
mov
lods
cmp
xchg
stos
test
int3
cld
add
pop
scas
xchg
jecxz
ret
rcrl
add
sbb
aas
jp
fstpl
fcoml
mov
xchg
pushl
jle
sbb
aam
lret
or
pusha
mov
pop
aam
fwait
xchg
sub
bound
pop
mov
lret
subl
inc
xchg
fistpl
insb
add
jl
rcll
push
cwtl
in
outsb
pop
test
imul
jne
mov
cmpsb
bound
aad
push
ds
xor
popf
inc
stos
pusha
cltd
movsb
lcall
test
cld
mov
dec
dec
sub
lock
popa
sub
jg
inc
inc
jbe
popa
inc
cmpsl
fsubrp
push
adc
pop
push
pop
dec
xor
incl
push
and
push
mov
jns
pop
call
jl
and
dec
aas
ds
sbb
add
cmpsl
mov
cwtl
add
xorl
out
movsl
lds
dec
mov
sbb
lret
das
jecxz
adc
dec
pop
add
pop
or
add
push
push
in
in
cli
sti
testl
dec
sub
lahf
mov
dec
mov
dec
add
xchg
jp
sbb
or
xchg
dec
pushf
cmp
leave
test
push
jmp
pop
lock
cmp
mov
xchg
iret
jp
push
mov
lods
and
jb
mov
dec
adc
add
adc
loop
inc
add
pop
or
popf
pop
sub
jnp
lock
divb
jns
push
xor
xor
cs
xchg
loop
xor
dec
cmp
xchg
call
call
mov
rclb
ja
dec
pop
test
mov
stc
sbb
pop
lea
push
int3
mov
lods
jl,pn
int
xor
cmc
int
xor
out
cmpsl
data16
pop
cli
dec
dec
rcll
sar
xor
test
cwtl
push
sub
fsubl
mov
icebp
rcr
and
frstor
mov
sub
ret
add
xlat
push
jp
fstpt
movsb
mov
push
add
pushf
inc
pop
cltd
push
xor
movsl
adc
ja
xor
push
outsl
xchg
sti
mov
lods
notl
add
mov
adc
xor
jg
inc
jne
int3
mov
lods
push
and
out
into
adc
fs
fsubrl
dec
and
in
xor
sub
xchg
lods
lods
mov
inc
aad
das
mov
mov
imul
cli
cmpsb
xchg
stc
xor
repz
jmp
adc
sti
push
xchg
shrl
movsl
pop
ss
mov
mov
int3
pop
or
or
push
fucom
out
lods
mov
xor
and
ljmp
inc
xchg
fists
inc
inc
xchg
js
leave
ret
push
cmp
adc
js
repnz
lds
xchg
popf
xchg
int
fidivrl
mov
call
dec
cld
mov
std
clc
mov
sahf
test
pop
leave
into
jg
lea
popl
cld
or
test
leave
xchg
add
xor
out
loop
or
lahf
sbb
push
scas
stos
mov
pop
das
les
cmp
call
add
mov
iret
jae
jl
fists
aam
dec
xor
or
cmc
popa
daa
stos
mov
dec
dec
sub
add
je
xlat
fstpl
sahf
inc
push
dec
or
pop
push
and
inc
xor
dec
mov
cld
sub
jg
jbe
jns
pusha
cld
push
aaa
je
std
cmp
fcomip
mov
push
enter
pop
jo
shrl
add
jle
roll
sbb
rorl
mov
mov
and
icebp
pop
add
pop
and
or
ds
dec
jp
mov
xchg
xchg
push
fnstenv
rcr
loop
jo
clc
push
push
cmpsl
repz
stos
data16
xchg
fldt
push
notb
xor
and
xchg
out
dec
adc
pop
sbb
dec
nop
dec
add
aad
add
xchg
repnz
jge
loopne
add
cmpsl
jae
sarb
push
das
add
mov
add
lds
pop
jle
fldcw
mov
inc
in
notb
cmp
push
scas
andl
fsts
jne
push
lock
lds
movsb
xor
leave
int
imul
xlat
lcall
push
pop
or
aam
add
int3
pop
cmp
push
xchg
lods
pop
mov
mov
test
adc
push
push
xorl
pop
pop
in
mov
xlat
ret
lahf
ja
andl
cmp
cmp
add
enter
fdivrl
and
cli
and
jae
mov
imul
and
mov
imul
mov
test
or
popf
loop
cmp
xchg
call
pop
sbb
jno
ror
pop
inc
jne
repz
in
jo
push
in
sbb
aad
dec
out
or
push
icebp
psubsw
out
xchg
out
std
leave
or
mov
push
ja
adc
add
push
mov
int
add
fldl
mov
icebp
fildl
mov
mov
ja
je
ret
loope
add
in
jbe
jle
pop
dec
sub
movsb
les
dec
fisubs
xchg
cmpsl
shl
and
ljmp
and
xchg
dec
clc
and
lds
or
test
scas
rol
mov
dec
sub
xor
test
pop
test
int
into
mov
sub
sub
inc
pop
mov
add
jo
repnz
fsts
jge
push
out
or
std
in
push
hlt
aam
mov
push
xchg
push
jle
push
lret
jne
arpl
xchg
mov
orl
sahf
jns
xchg
xor
loope
adc
ret
inc
ss
xchg
repnz
lret
test
xor
movsl
pop
outsb
xlat
fldt
add
mov
pop
out
lret
loopne
mov
sbb
mov
push
mov
add
test
xlat
popf
push
cmp
sub
dec
fsubs
std
mov
int
dec
iret
or
bound
clc
sbbb
fistl
inc
int3
outsb
outsb
int3
mov
cmp
movsl
adc
xchg
mov
in
xchg
or
cwtl
xchg
fxch
dec
xchg
mov
mov
mov
insl
mov
jnp
pushf
fsubrl
push
mov
or
mov
insl
out
dec
cmp
add
dec
push
js
gs
addb
jg
mov
dec
in
rcrl
inc
ret
xor
sbb
lcall
ret
outsb
fstpl
and
xor
mov
fs
and
stc
fildll
int
xor
sbb
mov
out
loope
aam
insl
inc
fldenv
out
push
adc
jae
sub
pop
cmp
sbb
cmp
xor
pop
mov
xchg
mov
cmp
mov
or
fistpll
inc
lds
inc
lds
out
sbb
out
pop
lds
mov
fstps
jns
push
sub
adc
inc
outsl
imul
xchg
mov
or
sbb
or
xor
aad
into
inc
jge
aam
cs
lds
and
cmp
ret
popa
mov
add
mov
push
sarl
out
dec
jo
mov
jmp
sub
push
dec
pop
and
push
cs
pop
ljmp
jne
cmp
iret
rcrl
loopne
fs
roll
and
sbbl
ret
into
jl
lock
sbb
xchg
and
fnsave
stos
aaa
test
cmp
pop
fimuls
dec
and
xchg
add
outsb
cmpsb
jle
xchg
xchg
sahf
fwait
xchg
jmp
jl
xchg
xchg
push
inc
or
pop
cltd
stc
cmpsl
mov
call
repz
xlat
mov
out
enter
or
xor
lahf
sbb
jp
xchg
leave
loop
leave
fdivs
mov
inc
adc
sbb
stos
add
mov
sbb
dec
fistl
sbb
or
pushf
jnp
outsb
and
push
das
es
xchg
sbbb
cmc
imul
push
xor
jmp
aaa
outsb
cwtl
push
iret
mov
repz
movsb
stos
sub
adc
xchg
sbb
dec
or
into
inc
mov
gs
mov
dec
inc
int
adc
rcll
xchg
outsb
jns
sbb
stos
mov
test
xlat
pop
pop
mov
ds
repz
mov
pop
lret
gs
xchg
mov
and
loop
pop
mov
inc
fldenv
jmp
aaa
cmp
mov
sub
xor
ficomps
cmp
pop
xchg
mov
pop
das
mov
mov
pushf
and
add
sub
add
push
inc
and
fidivrs
jl
or
hlt
dec
add
daa
sahf
mov
pusha
imul
lock
jno
fmull
mov
bound
clc
add
sub
push
call
mov
mov
fimuls
add
addr16
cmp
inc
mov
adc
test
cli
fcom
insl
outsl
aas
outsb
loopne
shll
push
scas
pusha
ss
ret
sub
sub
aad
inc
lea
js
xchg
cmp
fdivs
clc
inc
sub
lea
or
dec
fcmovnu
cmpl
inc
in
sub
test
dec
pop
dec
fadds
loop
xchg
xchg
mov
mov
mov
push
sbb
sbb
dec
mov
adc
popl
int3
cmp
sub
pop
dec
movl
fnstsw
fldl
daa
pop
xchg
insb
out
lock
mov
test
leave
filds
jns
cmp
mov
fwait
into
popa
aam
push
inc
xchg
add
sub
jge
cmpsl
sub
inc
inc
sub
add
pop
inc
scas
in
dec
mov
inc
xchg
and
adc
mov
inc
jno
movsl
test
adc
sbb
sub
shll
xor
loope
inc
and
scas
mov
mov
inc
negb
jbe
movsb
dec
jg
pop
fistpl
outsl
mov
int
and
leave
push
andb
mov
nop
push
push
mov
ss
mov
popf
je
mov
xchg
popf
test
into
push
jne
dec
mov
push
loopne
out
add
cmp
jb
and
nop
inc
iret
push
les
lahf
jle
dec
push
inc
adc
and
add
add
or
xor
clc
outsb
push
or
mov
inc
ret
loope
loopne
xchg
push
gs
insb
jae
mov
push
ret
inc
mov
fldcw
jle
pop
pushf
push
inc
inc
pushf
xor
cmp
insb
jb
jg
mov
jle
shll
pusha
aam
cltd
ret
and
fmull
movsb
push
fidivrl
mov
mov
out
jae
rorb
sti
lds
mov
sar
jbe
mov
pop
sub
jg
out
mull
push
cmpsl
stos
push
or
push
or
stc
dec
sub
popf
andnps
lods
arpl
dec
lds
sti
int3
clc
mov
lret
add
mov
fsubl
repnz
pop
sar
cmp
insl
mov
cltd
jmp
mov
cmpsl
insb
mov
test
jb
dec
mov
cmpsl
es
xor
fs
jmpw
loopne
mov
dec
movsb
jne
xchg
adc
and
imul
push
popa
aam
jmp
inc
mov
xchg
lods
cmpsl
enter
jo
mov
dec
xchg
inc
mov
xorb
xchg
jb
fwait
aad
ret
mov
loop
mov
add
insl
lds
add
cmp
in
rorl
int3
sbb
es
test
inc
ds
inc
in
xchg
xor
mov
daa
mov
jae
mov
iret
test
mov
sbb
adc
std
jns
jno
pop
sbb
pop
jo
ss
and
outsb
and
sahf
jae
pushf
test
insb
insl
and
push
insl
shrl
pop
inc
and
pop
jne
inc
mov
mov
dec
std
jp
push
pop
inc
outsl
sti
imul
push
mov
xchg
cli
lahf
adc
xlat
ss
cmp
testb
shrb
xor
mov
repnz
xor
mov
sti
pop
outsl
cmp
push
sub
aad
inc
shrb
nop
adc
dec
ja
cmp
in
orl
cmp
dec
andb
pop
add
lret
fcomip
mov
arpl
mov
jge
sub
roll
sbb
sbb
arpl
or
sub
bound
test
xor
push
scas
cmp
pop
sbb
mov
add
in
push
int
faddl
pop
sub
fs
je
push
mov
stos
bound
stos
adc
inc
pop
movsb
lret
or
leave
scas
aad
mov
xchg
mov
sub
shlb
mov
aad
into
repnz
fdivrp
orb
jge
in
inc
shr
int3
inc
dec
test
and
mov
frstor
xchg
sbb
cmpl
jg
mov
dec
and
cmpsl
aam
daa
inc
xor
shll
inc
lods
loopne
jns
adc
test
cltd
stc
and
pop
jo
int3
cmp
xor
pop
sub
inc
fists
mov
ds
scas
and
cmp
inc
jg
adc
cltd
lods
or
xchg
xor
arpl
bound
pop
ret
les
xor
push
mov
xor
fcmovb
lcall
inc
imul
adc
adc
aad
stc
iret
nop
hlt
aam
cmpsb
jb
inc
bound
das
pop
push
nop
and
pop
in
cmc
aas
mov
cmp
cmp
cmpsl
je
arpl
cmp
inc
aad
mov
test
rcll
and
dec
notl
add
andb
ja
decl
scas
cld
jne
push
push
sub
mov
stos
xorb
jne
inc
pop
jl
mov
jmp
or
cwtl
pop
jae
movsb
cmc
mov
sbb
push
jl
jns
adc
push
mov
mov
pop
std
mov
test
mov
xor
stos
sbb
jnp
jecxz
inc
and
daa
incb
or
jl
cmpsb
pop
jmp
lods
cmc
push
dec
fimull
insb
or
icebp
les
fistpll
sub
sbb
data16
jle
movsb
rol
inc
lret
rolb
jns
cmp
jmp
cmp
sar
dec
mov
int
jge
adc
xchg
push
cmc
fiadds
pushf
and
cmpsl
mov
jo
or
xchg
xor
outsl
lret
pop
fs
cmp
adc
ret
pop
push
mov
into
xchg
adc
xchg
mov
je
lods
cmp
mov
test
loop
jnp
lcall
repnz
jbe
outsb
repnz
push
jmp
cmp
dec
into
mov
inc
dec
enter
mov
sub
push
popa
adc
add
out
into
pop
rcll
js
xchg
mov
jae
add
or
dec
insb
mov
inc
mov
imul
shrl
clc
cli
test
mov
add
push
jbe
or
jno
rcrb
loopne
aas
xchg
xor
push
dec
sarb
sbb
mov
ja
add
jmp
out
test
lds
pushl
or
push
cli
pushf
sbb
imull
pop
fst
push
or
xchg
or
testb
xor
nop
loope
lret
pop
jmp
mov
inc
mov
lea
in
cmp
pushf
mov
outsl
sub
inc
dec
pop
test
inc
sbb
addl
pop
imul
xor
mov
shll
mov
sbb
and
dec
cmpsb
pop
dec
daa
data16
add
js
lahf
dec
xor
hlt
test
pop
lahf
mov
fs
es
pop
jb
push
cmpsb
lds
push
lea
mov
push
sbb
std
and
pop
stc
out
lock
or
inc
je
pop
mov
inc
jmp
pop
mov
mov
mov
test
pop
xchg
sarl
mull
mov
pushf
rcr
mov
pop
push
es
cmp
ss
cs
inc
cmp
jns
pop
push
and
adc
iret
pop
test
out
or
fmull
mov
mov
jns
push
data16
mov
push
adc
aas
push
mov
loop
push
cli
dec
mov
cltd
out
inc
sub
push
rcrb
ljmp
pop
xor
sub
adc
outsl
test
mov
outsl
xchg
xor
fisubrs
add
mov
pop
jns
add
nop
mov
mov
cwtl
outsl
icebp
mov
dec
and
aas
push
mov
rcrb
or
inc
sbbl
xor
xor
xchg
xchg
xor
packsswb
jne
push
jae
inc
stos
pusha
add
call
push
enter
test
pop
cmp
mov
mov
imul
pushf
test
xor
and
lods
push
rolb
ret
clc
pop
or
out
fisubrs
jno
mov
jmp
testl
mov
pop
js
das
jns
popa
dec
pop
adc
cmpsl
test
sti
pop
push
mov
push
fistps
jbe
movsl
cmpsl
gs
mov
les
lret
pop
arpl
cmp
fistps
mov
test
xchg
insb
pusha
mov
adc
mov
std
push
aad
and
ret
insb
add
mov
jb
ss
in
xorl
cmpsb
jmp
lock
loop
push
mov
imul
pop
sti
fmull
inc
fwait
and
aad
in
fwait
jb
aaa
enter
jb
dec
stos
out
das
sub
adc
shl
fldcw
shrl
adc
insl
add
xchg
cmp
mov
adc
mov
cmpl
outsb
neg
lahf
xor
test
int
sub
scas
dec
cmp
daa
sbb
ret
es
lea
mov
add
xor
lret
std
mov
push
mov
sti
jmp
xchg
jo
das
loope
mov
ror
lahf
adc
call
popf
pushf
pop
ljmp
out
xor
jo
pop
movsb
and
insb
clc
sti
push
inc
out
or
loope
js
push
test
pop
xchg
hlt
mov
jae
lods
and
call
fcomp
adc
mov
fsubrl
dec
cmp
outsl
sbb
xchg
cmp
repz
push
xchg
dec
cmc
stc
ds
jb
mov
mov
das
and
inc
cmp
ljmp
pop
pop
xchg
mov
push
mov
jb
lcall
aam
mov
cmp
adc
jns
cli
insb
loope
jle
lock
xchg
mov
es
bound
or
int
pop
sub
outsl
mov
dec
fsubrs
mov
dec
push
roll
into
fxch
mov
cli
add
dec
xchg
cmc
arpl
add
xor
ret
in
aad
push
and
popf
jecxz
adc
inc
xor
adc
cli
xchg
and
sub
pop
jg
hlt
fstp
in
sbb
imul
nop
dec
ret
jbe
test
js
inc
in
cli
gs
ret
inc
inc
push
inc
incb
mov
and
fldenv
cwtl
pusha
sub
roll
and
gs
lret
xor
jo
pop
mov
es
push
in
inc
jge
sub
aaa
or
jmp
push
aaa
adc
cmp
pop
mov
sbbb
mov
xor
inc
mov
ja
add
jb
inc
push
movsb
ss
lcall
xor
mov
cmp
insl
repz
into
pop
xchg
xchg
sbb
int
js
out
aam
out
icebp
lcall
iret
into
call
and
pop
cmp
sub
icebp
push
pop
lods
mov
adc
xlat
cmp
add
cmpsb
out
rorb
push
arpl
das
stos
mov
sbb
cmp
mov
mov
daa
sub
or
int
cmpsb
imul
dec
and
in
mov
cwtl
add
int3
int3
push
jbe
fidivrs
cs
jmp
mov
and
pusha
cmp
sub
or
mov
insb
cmp
xchg
sbb
dec
and
in
sub
lret
mov
in
sbb
add
andl
dec
andl
cmp
das
and
aam
subb
in
push
roll
cmpsb
mov
es
pop
lcall
cmp
mov
ror
mov
and
pop
and
lcall
arpl
inc
and
sub
mov
xor
cld
xchg
and
imul
in
cltd
pop
pop
aas
xchg
jno
int
dec
add
mov
and
lods
js
into
lahf
js
stos
mov
xchg
push
jge
jp
or
cltd
sbb
pusha
xor
and
lods
arpl
or
bswap
in
cmpsb
jg
dec
adc
adc
jmp
and
and
and
vshufps
pop
fsubs
mov
jecxz
nop
das
shl
or
add
mov
out
mov
std
pop
ret
enter
jae
fcoms
jl
outsb
inc
addb
or
rorl
addr16
stos
jge
push
cmpsb
pop
mov
sub
mov
push
or
imul
dec
push
imul
bound
sbb
dec
push
gs
mov
mov
pop
lods
fistpl
cmp
jecxz
imul
pop
adc
push
add
lahf
loope
mov
pop
mov
lock
out
sbb
imul
fcompl
mov
cmp
add
dec
imul
fldenv
mov
movsl
out
divw
out
nop
lcall
cmpsl
dec
or
fisubl
xorb
pop
dec
int
f2xm1
push
data16
mov
pop
out
out
push
repz
jecxz
fnstcw
sub
fwait
movsb
inc
mov
dec
jnp
inc
imul
test
jnp
scas
jge
sahf
dec
pop
sub
sub
fwait
pop
aaa
inc
pop
xchg
movsl
pop
bound
test
call
imul
dec
movsb
pop
dec
jno
jae
push
sbb
xor
lods
out
cmp
push
in
mov
out
jge
test
lahf
sti
dec
gs
cmpsb
push
ret
sbb
or
jae
cltd
addl
incl
lods
jno
pop
pop
scas
movsb
test
xor
aam
adc
fsubp
cltd
mov
cmp
lcall
or
ja
idiv
fwait
jle
scas
jmp
mov
lds
stos
das
jecxz
and
mov
inc
ret
dec
xor
divb
les
mov
or
push
repnz
add
xchg
inc
adc
lock
mov
inc
daa
out
popf
dec
dec
lret
jno,pn
cli
jp
jecxz
xchg
add
sbb
push
insl
mov
jp
push
mov
jnp
adc
add
enter
fsubrp
insl
inc
aad
xor
sub
sbb
pop
insl
and
pusha
jne
insb
ja
pop
pusha
mov
push
mov
jecxz
mov
mov
sub
pop
sbb
xchg
mov
mov
loopne
and
hlt
jns
icebp
push
push
lea
fdivs
push
sub
sbb
pop
scas
inc
xor
push
xor
mov
int
es
sbb
jnp
xor
int
mulb
mov
inc
sub
jmp
test
aas
outsl
lcall
adc
fildll
decl
xor
cmp
in
mov
lods
sbb
mov
push
cmp
fs
pop
les
call
popa
sbb
imul
mov
xchg
mov
shl
adc
xor
dec
adc
icebp
cld
inc
mov
loope
subb
movsl
push
push
call
pop
sets
push
or
gs
popf
ja
or
setnp
lds
stos
in
pop
js
nop
fwait
add
push
pop
test
lock
enter
out
sub
sub
imul
in
inc
cmc
enter
cmp
ss
pop
incl
in
mov
cmp
arpl
fnsave
inc
inc
jbe
lret
xor
fwait
pop
andl
add
and
mov
xchg
cmp
cmp
inc
or
adc
icebp
ljmp
dec
push
and
add
iret
pop
imul
iret
aaa
push
xchg
push
cmp
inc
add
sub
arpl
push
mov
add
mov
cmp
icebp
movsl
aaa
aad
pop
inc
inc
dec
cmp
je
cld
sbb
jae
in
xchg
les
ljmp
lods
fadds
xor
cmp
jle
adc
pop
dec
imul
adc
or
loope
out
cmpsb
xor
adcb
outsb
fs
sub
in
push
cwtl
ret
aaa
dec
inc
cs
xchg
movsb
and
leave
dec
sbb
mov
mov
pop
mov
adc
call
std
pop
jno
and
mov
dec
mov
sahf
xor
shrb
movsl
test
inc
cmp
std
data16
bound
pop
out
sub
inc
subl
arpl
icebp
repnz
adc
pop
mov
das
mov
jecxz
stos
mov
xor
xchg
cmp
ds
dec
and
push
dec
fs
push
cmp
aam
iret
xchg
bndstx
cmp
roll
mov
nop
mov
dec
out
in
sbb
insl
jbe
jg
adc
daa
mov
repnz
sbb
mov
inc
mov
mov
add
test
cwtl
scas
sub
scas
inc
push
jmp
call
imul
popa
into
pop
sbb
aad
ds
mov
xor
data16
add
push
jle
push
stos
pop
imul
out
push
mov
and
mov
cmp
pop
sub
sub
orb
test
out
hlt
pop
cltd
test
sbb
rclb
cmpsb
mov
lods
push
movsl
mov
inc
pop
shl
clc
cld
outsb
fisttpl
shll
mov
scas
lods
fdiv
cmc
call
jl
inc
std
rcrb
xorb
push
stos
fucomi
dec
pop
pop
mov
test
pop
scas
test
stos
inc
xor
sarl
or
jmp
jge
jno
adc
sbb
out
out
lret
rcr
jmp
insb
imul
aam
xor
call
outsb
ss
out
data16
int
insb
mov
lret
push
add
insb
cwtl
stos
lret
jg
and
leave
roll
dec
mov
es
jns
loope
dec
stos
out
test
adc
test
mov
iret
icebp
ret
je
jbe
fisttpl
xchg
jnp
out
adc
imul
sub
xor
pop
inc
dec
loop
xor
adc
push
jo
movsb
sti
loopne
out
fdivs
push
cltd
jp
notl
xchg
addr16
or
pop
cmp
xchg
dec
inc
jo
aam
push
imul
mov
stos
xchg
pop
hlt
xor
out
adc
pop
sub
push
add
pop
dec
dec
push
mov
mov
add
fisubl
xor
mov
orb
out
lahf
stos
cwtl
fwait
dec
or
aam
fsts
pop
mov
iret
outsb
popf
jb
add
adc
adc
shrb
xor
pop
aam
repnz
popa
lock
xlat
les
ss
cltd
test
jae
cmp
jno
cmpsb
xor
pop
sbb
push
sahf
loope
rcl
call
xchg
add
adc
jle
cmp
pop
adc
daa
lods
fsubrs
mov
sub
inc
in
insl
and
cmpsb
lds
outsl
mov
in
aaa
sub
test
ret
xchg
stos
movsl
xchg
rorb
mov
xchg
mov
xor
imul
aaa
inc
jmp
repz
mov
cld
mov
out
gs
in
lods
jb
les
call
imul
mov
sub
mov
jp
mov
dec
add
jp
cmc
loop
out
rcrl
dec
inc
xor
loope
pushf
int
sub
mov
sbb
jp
lret
fsubrl
jbe
stos
jmp
mov
inc
mov
jns
mov
xchg
sub
xchg
mov
mov
popa
jp
daa
in
frstor
adc
js
mov
popf
cmp
xor
adc
ds
fcoml
mov
jmp
aas
pop
ffreep
mov
movsl
jns
sbb
sbb
adc
jmp
inc
cli
jbe
or
mov
inc
push
leave
sub
sbb
pop
jo
ret
pop
loopne
mov
repz
mov
scas
and
mov
cld
pop
popa
jns
and
dec
in
ds
sbb
xchg
lea
faddl
nop
mov
xchg
mov
inc
adc
lcall
jnp
ja
bound
inc
push
sub
outsb
mov
fstpt
jo
popf
cmp
into
daa
js
sahf
mov
push
or
rcll
fidivl
mov
repz
cwtl
sub
dec
push
inc
repz
sbb
scas
ret
fmuls
sarl
push
repnz
or
mov
daa
xchg
adc
lds
mov
jae
sti
pop
imul
insb
inc
dec
daa
arpl
scas
jg
or
mov
push
xchg
jno
mov
push
and
pushf
mov
push
adc
les
xchg
and
pusha
int
repnz
cmc
stos
mov
jecxz
xchg
xor
mov
add
aad
mov
int3
jecxz
push
jg
xor
mov
mov
xchg
push
mov
mov
push
or
xor
mov
push
stos
xor
cmpsl
in
dec
xlat
in
xor
cmpsl
mov
scas
cli
mov
into
out
loop
rolb
mov
mov
aam
add
adc
and
sbb
sbb
push
sub
xor
add
je
mov
es
loope
mov
pop
mov
mov
xlat
mov
mov
loop
sub
loope
jnp
insl
les
mov
and
dec
ret
sbb
cmpsl
iret
mov
mov
sub
popf
dec
pushf
je
or
xchg
fwait
mov
adc
inc
push
push
adc
and
hlt
andl
int3
pushf
je
cmp
lods
hlt
add
cmp
sahf
push
add
insb
out
repnz
pop
inc
jb
push
call
push
xorb
xorb
addr16
into
int3
jl
inc
and
xchg
mov
xor
inc
lahf
jg
pop
cmp
cmp
int3
movsl
les
mov
pop
add
ljmp
or
gs
hlt
sbb
repnz
call
sbb
daa
push
pop
out
dec
out
aad
jo
jle
out
outsb
xchg
cltd
pop
jmp
clc
stos
mov
push
add
je
pop
jge
or
int
iret
rcrl
xchg
ds
mulb
ja
insb
sti
sub
arpl
jmp
clc
std
dec
add
imul
icebp
add
les
mov
mov
sbb
cmp
stos
mov
pop
xor
mov
cltd
sub
add
popf
xor
inc
inc
pop
mov
ss
mov
enter
and
fld
push
fildll
leave
cltd
or
inc
adc
mov
sbb
and
loop
mov
int
push
repnz
xchg
or
push
loop
add
inc
shl
mov
push
sub
cmp
aaa
ja
push
xor
imul
jp
cmp
jno
fmul
dec
psllq
ret
cltd
rcrb
ret
mov
mov
dec
inc
ljmp
jmp
fwait
xchg
xchg
stos
fistpl
push
rorb
data16
test
jnp
mov
in
sbb
mov
cmp
push
test
or
pop
test
fsubs
test
clc
mov
leave
test
test
xchg
push
or
jmp
ds
xchg
mov
ss
lcall
gs
in
sub
lock
mov
nop
inc
xchg
insl
lahf
insb
outsl
sti
loope
add
or
loopne
jae
pop
add
push
jmp
fyl2x
jmp
and
ret
fistl
arpl
jae
jmp
movsb
sbb
inc
ja
stos
xor
pop
mov
xor
cmp
xchg
int
arpl
movntq
and
sarb
mov
mov
cmp
rorl
mov
push
ret
rorl
or
sub
add
lret
mov
cmp
cmpsb
lret
fstpl
dec
clc
enter
xor
jnp
or
jae
addb
leave
xchg
mov
push
sbb
or
xor
jle,pt
out
test
testb
push
rclb
bound
movntps
mov
insb
jno
xor
mov
add
adc
push
add
sub
in
imul
mull
xchg
hlt
lock
add
ja
movsb
mov
jle
xchg
sub
mov
test
ror
jns
imul
scas
mov
andnps
mov
xchg
jmp
xchg
inc
outsl
inc
mov
shll
push
arpl
loopne
das
out
push
iret
pop
std
in
lcall
lret
sub
stos
adc
test
mov
ret
sub
jns
hlt
mov
dec
xchg
jb
push
std
or
into
les
or
loop
dec
xchg
daa
fwait
add
cmp
in
adc
sar
je
es
imul
call
sbb
mov
mov
cmp
lcall
inc
mov
sub
pop
cs
mov
mov
in
push
stos
xchg
lcall
lahf
or
jae
aas
inc
sti
cmp
nop
shlb
push
sti
sbb
sbb
pminub
add
hlt
pop
lods
outsl
push
add
push
cwtl
or
adc
rcll
add
movb
sub
in
cmp
stc
xchg
call
cli
adc
imul
pop
push
fbstp
mov
cmp
adc
mov
jb
dec
add
cli
movsb
jo
stos
push
cmp
pop
mov
xchg
pusha
enter
js
fnsave
call
fcmovnb
es
xchg
inc
jno
js
mov
pop
leave
ficoms
lds
inc
cltd
ja
shll
adc
or
scas
xchg
or
pop
cmp
adc
test
aaa
loopne
dec
cmp
mov
je
iret
pop
cmpsl
push
fwait
mov
xchg
mov
mov
out
loopne
add
adc
jno
repz
sub
adcl
dec
es
push
add
jp
push
cmpsb
mov
xor
sub
js
adc
sbb
inc
movsb
sbb
and
pop
jo
mov
dec
cltd
mov
jl
pusha
clc
test
push
hlt
add
scas
idiv
scas
sub
test
jmp
adc
stos
loope
in
or
filds
fs
xchg
mov
notb
es
ficompl
pop
shll
pop
mov
cmp
or
xor
loopne
pop
xor
pop
adc
outsb
in
pop
mov
scas
inc
sbb
inc
or
test
fcomp
ret
lock
add
lea
or
enter
cs
mov
jno
adc
sbb
mov
jbe
call
xor
sahf
cmp
mov
leave
mov
lods
mov
push
out
cltd
fstl
pop
dec
pop
jge
ja
pop
insl
inc
push
shlb
pop
leave
outsl
cmpsb
jb
testb
pop
shll
inc
pop
rorl
sub
fcompl
out
mov
hlt
mov
movsl
mov
mov
icebp
pop
push
cmp
xchg
jno
xchg
mov
add
cmpsb
loope
add
outsl
mov
lret
dec
dec
fildll
orb
cwtl
jl
ret
std
sbb
out
stos
push
xor
cmp
push
test
sub
jae
pop
cltd
movsl
out
rcl
xchg
insl
xor
into
pop
rol
and
or
fsubrl
or
dec
test
in
xchg
jmp
stos
inc
in
je
test
js
pop
and
mov
or
sahf
mov
sbb
imul
inc
lahf
jle
xchg
and
dec
sbb
loop
aad
fcmovu
push
dec
jbe
inc
test
jl
movsb
or
subb
pop
test
out
mov
inc
push
mov
inc
cli
xor
add
inc
sbb
sbb
pusha
lock
std
arpl
lods
mov
nop
xlat
xor
xchg
inc
stos
aas
jno
loope
and
sbb
inc
cwtl
inc
cmp
mov
jge
lret
sbb
inc
adc
add
lods
jno
sub
std
cmc
mov
enter
cmp
and
sub
inc
fists
jmp
pushl
in
es
or
addl
adc
mov
xchg
lods
mov
jecxz
sbb
fbstp
inc
test
push
in
ret
mov
dec
lods
arpl
jge
sarb
or
dec
lret
cmp
cmc
test
jle
es
cmp
xlat
ret
mov
push
or
mov
mov
mov
jle
mov
testb
mov
fcomps
mov
dec
cmp
hlt
push
ja
out
in
adc
cmp
fs
aam
jbe
lahf
or
adc
lods
cld
scas
loop
inc
mov
stos
pusha
out
push
mov
inc
pop
popa
outsb
sbb
sbb
ret
jl
mov
pop
into
pop
jmp
xchg
inc
fbstp
lahf
push
lds
js
das
scas
or
adc
inc
mov
jmp
sarb
push
sub
insl
xchg
divl
xchg
ss
inc
out
lahf
insl
inc
out
test
mov
aad
dec
or
mov
popw
xlat
fmuls
mov
mov
mov
sbb
aas
jecxz
cmc
mov
sub
fsubs
popf
sarb
push
and
dec
fisubl
test
sub
loopne
sbbl
in
xor
in
cmp
push
fistpl
xor
aam
or
add
clc
xchg
arpl
and
jns
psadbw
pop
pop
das
pushf
or
mov
ret
in
jg
xorb
push
inc
pushf
inc
test
mov
repnz
jmp
push
bound
adc
push
push
int
and
jo
mov
loopne
push
inc
xchg
xchg
mov
out
repz
adc
cli
loop
movsl
sub
in
inc
adc
jge
std
pop
or
mov
in
mov
mov
out
stc
push
add
inc
sbb
lods
xorb
test
push
xchg
sbb
or
out
lods
jg
pop
mov
mov
lret
outsl
iret
mov
push
jns
xchg
add
xchg
mov
jb
outsb
mov
add
lds
push
cmp
fisubrl
and
ret
jbe,pn
mov
divb
sbb
in
inc
xor
dec
rorl
into
out
sbb
rcl
out
xchg
xchg
subb
in
int3
cmp
mov
pop
cmp
mov
pop
sahf
cltd
dec
jns
dec
in
adc
mov
jo
mov
stc
xor
xchg
mov
test
mov
stos
pop
ss
lcall
mov
jmp
fdivr
test
rorb
and
xchg
cld
mov
lret
or
sub
and
out
pop
mov
rorb
jne
stos
lds
xor
mov
pop
xchg
mov
pop
ds
and
dec
mov
and
daa
or
xor
jno
mov
pushf
in
mov
sahf
xor
int
cltd
out
aad
rcr
mov
push
das
enter
nop
or
arpl
imull
dec
pop
cmp
mov
jle
fucomi
incb
int3
push
push
push
jp
enter
int
movsl
lods
sub
into
jmp
jne
les
jb
sbb
mov
nop
lea
jae
cmp
push
jg
mov
scas
and
insb
and
dec
sub
cwtl
nop
shl
lock
ds
xchg
aad
sbb
pop
or
imul
in
dec
jg
je
insb
int
arpl
adc
cmp
push
and
xor
fs
pop
and
pop
sbb
testl
or
adc
imul
mov
cmp
or
sub
push
sbb
movsl
stos
addb
pop
stc
pop
adc
pop
cmp
cld
ds
or
gs
ret
jg
loope
add
rcrl
add
or
mov
lcall
cmp
xchg
ds
jmp
leave
orb
dec
adc
lods
lea
dec
pop
test
jne
leave
pop
ja
fcoml
adc
in
push
sbb
out
outsb
cmc
lds
mov
push
add
fildl
cmc
sbb
mov
mov
test
add
add
out
cmpsb
loopne
xlat
shlb
or
fadd
pop
mov
push
out
adc
mov
xor
xor
xchg
aas
xlat
sbb
mov
out
xchg
xchg
bound
cmp
int3
push
pop
in
xchg
lret
xchg
pop
mov
arpl
push
add
sbb
arpl
mov
add
leave
xchg
or
js
push
fcoms
stos
in
enter
mov
cmp
into
inc
jp
jmp
stos
inc
sub
jns
fyl2x
mov
lcall
and
or
jge
jge
ja
cmpsl
je
fadd
es
outsl
and
shl
lock
push
jl
add
push
rol
movsb
imul
and
inc
jecxz
inc
sub
xchg
inc
cmp
cmc
sahf
sti
xchg
push
mov
cmp
jle
xchg
xchg
jecxz
test
dec
jp
cmpsl
sub
jp
mov
or
shlb
negb
pusha
xchg
cmpsb
nop
cmp
sbb
sbb
out
dec
call
mov
mov
test
push
jmp
ja
jg
in
cmpsl
outsl
add
pop
test
repnz
or
xchg
jmp
mov
sbb
dec
mov
adc
xor
jl
sahf
cmp
adc
xor
out
jg
mov
push
pop
negb
xor
cmp
ret
push
jmp
ja
push
sar
scas
imul
xor
cmc
cmpsl
mov
sub
mov
xchg
adc
inc
mov
mov
je
sbb
inc
xor
cltd
outsl
push
xor
dec
push
shlb
inc
mov
fbstp
ljmp
sbb
test
xchg
cli
stc
addr16
jle
add
sub
fxch
scas
push
insb
and
stc
pop
rol
jecxz
xchg
out
pop
jb
cmpsl
and
ljmp
cmp
push
mov
out
mov
jo
adc
cs
stc
mov
clc
xor
dec
add
dec
push
inc
xlat
adc
lcall
mov
inc
jmp
inc
fbstp
sbb
clc
clc
dec
sub
mov
or
loopne
mov
ret
movsb
inc
mov
arpl
xchg
pushf
sbb
repz
into
xlat
pop
pushf
xor
popf
xlat
add
inc
inc
in
enter
ja
pop
andl
repz
push
inc
iret
mov
imul
popl
pop
fisubl
in
push
jecxz,pn
push
xlat
dec
repz
stos
xchg
rolb
and
inc
xor
loopne
mov
adc
or
lret
cmpsl
adc
cmc
test
xor
jp
insl
xlat
and
js
iret
push
popa
or
or
and
xlat
roll
nop
inc
repz
jmp
xor
vprotq
and
mov
push
and
inc
rolb
es
mov
daa
or
add
imul
jae
fwait
xchg
bound
jmp
add
xchg
xchg
call
mov
mov
int3
dec
sbb
aam
inc
push
sti
xor
jbe
xor
lea
and
jle
cmp
jne
push
gs
imul
mov
and
in
addr16
push
xlat
inc
add
add
dec
jae
adc
mov
sti
jae
aas
mov
lods
insl
lcall
inc
mov
or
sub
and
ret
or
mov
stc
mov
dec
mov
xorl
jg
xlat
xchg
inc
cmp
in
push
inc
shlb
add
adc
stos
sub
or
cmp
push
mov
sub
icebp
andb
and
test
jmp
pop
out
cmp
dec
cmpsb
fisubs
dec
xchg
lods
out
lock
xlat
outsl
ret
dec
int
push
ja
mov
icebp
xchg
mov
xchg
insb
and
outsb
fmuls
sbb
lahf
xor
pop
dec
add
gs
and
cmp
repnz
fs
out
cli
xor
mov
xor
mov
pop
aas
push
mov
pop
xor
mov
dec
cmpsl
les
fldcw
push
in
mov
adc
cltd
data16
popl
out
mov
xor
dec
in
clc
in
sbb
xor
add
mov
dec
dec
pop
out
fisubrs
fnstenv
lret
movsb
inc
mov
test
incl
mov
add
pop
mov
mov
fwait
sbb
and
out
mov
sub
jno
int3
jb
xor
jno
mov
rorb
cmpsb
in
test
lret
lcall
std
pop
ret
lret
int3
dec
sub
fisttpl
icebp
in
sahf
sbb
dec
mov
aas
loope
hlt
rclb
sbb
xchg
push
sub
mov
aam
inc
adc
sbbl
mov
push
jo
test
sbb
mov
pop
inc
push
test
outsl
xchg
mov
shlb
push
and
push
cli
out
mov
imul
mov
repz
xor
imul
fimuls
xor
dec
bound
cmp
call
testb
pushf
xchg
fldenv
rclb
mov
mov
imul
pop
outsb
sub
xor
pop
mov
or
dec
ffreep
mov
jo
mov
xchg
aaa
iret
dec
push
sub
dec
insb
inc
sub
mov
movsl
pop
fbld
popf
mov
lcall
xor
xor
dec
lret
cmp
faddl
pushf
data16
sub
in
add
adc
cwtl
mov
xchg
lret
arpl
inc
push
nop
xchg
adc
and
xchg
inc
js
stc
std
aas
pop
cmp
insl
rorb
jnp
inc
mov
jp
ss
xchg
push
push
pop
push
lods
mov
das
out
dec
test
sbb
adc
dec
add
mov
cwtl
repnz
in
inc
mov
fimuls
push
cwtl
call
outsb
xor
adc
leave
pop
cmp
hlt
mov
hlt
int
insb
pushf
rcl
call
push
cwtl
shll
add
outsb
mov
mov
and
cmpsl
push
in
cmp
mov
out
mov
aam
fistps
mov
adc
in
mov
adc
xchg
bound
std
bound
sub
add
mov
cmp
fisttpll
xorb
mov
popa
fdivs
call
cmp
dec
jo
test
cli
inc
jl
rolb
cltd
add
inc
ret
xchg
call
sub
in
mov
mov
imul
fldcw
xchg
not
cltd
lahf
or
gs
xor
imull
ds
dec
sub
cmc
pop
fisubrs
mov
test
push
or
jp
je
ficoms
xchg
fdiv
xchg
cmpsb
scas
or
popa
pop
pop
pop
jnp
sbb
xor
push
dec
sub
add
sti
test
into
sub
mov
push
cmp
adc
mov
rol
inc
xchg
inc
neg
xor
cld
sbb
jmp
mov
inc
cmp
sub
jg
jp
lods
or
bound
outsl
fs
jnp
testl
cmc
xchg
jb
add
repnz
scas
outsb
sbb
lret
hlt
add
or
call
sub
cmp
into
fcomip
and
xchg
push
sub
or
fcompl
mov
mov
hlt
test
aam
pop
add
jo
xor
mov
add
sbb
cmpsl
jb
xchg
push
fs
sub
ret
cmp
mull
popf
imull
fdivrl
repnz
in
in
xchg
sub
mov
das
test
add
dec
nop
sbb
or
inc
xor
mov
push
cmove
adc
jecxz
shrl
das
shrb
xor
sub
outsl
cmp
cmp
mov
or
pop
pop
mov
sbb
jne
aad
mov
pop
xchg
inc
mov
pop
cmpsb
ror
daa
cld
js
xchg
ret
inc
movsl
fcompl
adc
mov
dec
jnp
xor
mov
ss
lods
mov
mov
pop
adcb
ljmp
imul
pop
push
sti
leave
mov
mov
loop
fdiv
js
add
es
rorb
andb
add
mov
jg
lock
dec
xchg
mov
mov
push
jns
ficoml
dec
mov
jb
pop
lret
jne
fsubp
pusha
add
cmp
aam
mov
mov
sbb
mov
adc
mov
repz
jb
test
outsb
lret
cmc
add
xor
xchg
mov
xorl
adc
rcrl
mov
sahf
pop
jnp
add
dec
enter
sbb
mov
into
push
stc
ret
push
push
mov
cmpsb
cld
movsb
add
ja
cli
cwtl
cmp
andb
add
dec
daa
lahf
lods
fsubs
cmp
sub
subb
pop
jns
mov
add
sbb
xchg
and
pop
jbe
sub
out
pop
ljmp
xchg
hlt
stos
nop
nop
jno
sub
outsl
test
jle
das
push
jne
xorl
loopne
shrl
idivl
sbb
cmpsb
inc
jno
jbe
inc
sub
es
sub
outsb
sbb
adc
mov
mov
div
daa
pop
add
xchg
mov
test
xchg
scas
sbb
es
pop
sbb
adc
ss
std
inc
icebp
xor
sub
movl
jp
cmpsb
ss
lea
mov
and
adc
neg
ljmp
movsl
jle
dec
shll
lret
daa
pause
int3
cmpsb
fnsave
shr
jl
xchg
add
jne
loop
adc
push
out
and
cmp
adc
das
lret
call
js
das
push
sbb
int3
mov
sbb
dec
arpl
sarb
push
roll
adc
push
das
neg
icebp
fsubs
out
dec
pusha
out
push
bound
inc
mov
or
or
cmpsl
lods
mov
call
stc
repnz
jg
repnz
xor
xor
cltd
push
ljmp
jl
sbb
and
fsubrl
ljmp
sti
outsl
js
int
xchg
sysexit
fs
jo
xorl
lock
cmp
shl
or
pop
ret
mov
mov
xor
sbb
imul
insl
loop
imulb
ja
mov
cmpsl
out
or
mov
sti
icebp
mov
push
xchg
outsl
and
bound
dec
cmp
inc
aad
inc
in
xor
js
loope
into
test
xchg
sub
fistl
pushf
lds
cmc
imul
iret
sbb
xor
in
out
fadds
mov
xchg
xlat
imul
and
dec
add
stos
ljmp
sti
inc
or
pop
dec
xchg
dec
mov
leave
pop
data16
pop
and
loop
movsl
inc
or
mov
dec
mov
out
mov
ja
pop
popa
pop
cmpsl
js
jne
cmp
mov
mov
and
ljmp
sbb
cmp
test
insb
push
inc
pop
js
cld
rcrb
dec
bound
xchg
sbb
add
adc
mov
jno
inc
inc
fldenv
ret
pop
add
lea
repz
dec
pop
aas
sbb
dec
push
mov
xlat
loopne
push
rol
or
fisubrs
fwait
daa
lcall
mov
adc
mov
add
xchg
add
ds
mov
sbb
push
dec
frndint
mov
int3
jmp
mov
mov
cwtl
adc
outsb
cmp
pop
pop
pop
cmp
je
test
push
lahf
push
inc
mov
je
imul
inc
cs
pinsrw
add
pop
pop
xchg
mov
sbb
and
lea
push
loopne
xchg
aas
pop
loopne
dec
call
pop
out
pusha
mov
notb
push
xchg
xor
pop
aam
das
movsl
mov
and
int3
fsubrs
out
lock
lret
dec
xchg
in
push
xor
mov
xor
imul
mov
adc
cld
mov
sbb
ljmp
jp
scas
jne
aas
lea
inc
loopne
lret
lret
xchg
dec
push
dec
jecxz
outsl
out
scas
sete
add
push
xor
das
cmp
fsubrl
adc
xor
es
or
inc
repz
mov
push
imul
jmp
xor
aaa
push
repz
shlb
xor
addr16
ret
sub
les
xor
push
adc
sbb
mov
cwtl
mov
mov
xor
xor
sub
out
push
stos
pop
das
aaa
jns
repnz
add
sbb
stos
pop
xlat
mov
shll
push
cltd
cmp
rorb
cmp
icebp
sub
sub
aas
aad
push
data16
jle
insl
and
sbb
cwtl
in
cmp
and
shlb
aas
aaa
push
xor
outsb
mov
jmp
push
mov
xchg
mov
sbb
mov
orl
aam
sub
jge
das
ror
dec
repnz
push
arpl
mov
out
mov
sbb
ljmp
dec
sbb
insb
push
jmp
and
adc
push
in
rolb
aaa
xlat
mov
cld
push
mov
ja
sbb
xchg
rorb
aas
negb
call
push
cmp
sbb
jecxz
adc
loope
ljmp
pushf
idivb
in
dec
mov
push
or
lcall
add
push
push
push
aad
lock
rcr
push
int3
or
popw
pusha
sahf
mov
iret
test
dec
jno
sbb
insb
sbb
scas
inc
adc
bound
in
ficomps
stos
js
test
inc
aam
stos
cmp
dec
mov
and
push
xlat
xor
cmp
mov
and
and
out
iret
jne
push
repnz
aaa
stos
fidivs
lret
out
aas
lock
je
lods
inc
ficoms
scas
outsl
add
in
cmpsl
test
dec
mov
add
sub
repnz
mov
adc
xor
out
and
aaa
dec
add
lret
adc
push
jl
addl
jb
xor
sub
lret
dec
leave
je
inc
mov
scas
jecxz
cmc
sbb
in
dec
mov
repnz
js
add
push
adc
push
mov
and
sub
dec
or
test
adc
or
scas
fstpt
add
push
pop
inc
push
shll
fnstenv
mov
enter
lods
dec
mov
jb
mov
adc
jns
xchg
aaa
jo
sub
lds
jp
xchg
movsb
inc
gs
lcall
cltd
push
pushf
or
jno
jb
adc
mov
push
into
mov
mov
loope
xchg
xor
pop
neg
lret
movb
ficomps
sbb
jmp
outsl
loope
jo
sub
jl
add
mov
add
sub
sti
xor
ljmp
and
insl
jns
imul
jl
add
inc
dec
xor
add
test
clc
mov
es
loope
and
lea
sub
imul
lods
bswap
fdivrl
push
out
stos
shl
adc
mov
pop
mov
cmp
cmp
xchg
push
pop
xchg
aad
fwait
lret
and
push
lahf
sti
pop
push
test
xor
dec
adc
mov
std
push
or
clc
xchg
jb
mov
cmp
bound
ret
ja
int
enter
mov
lcall
lret
daa
cmp
lea
jmp
jmp
adc
fsubl
mov
add
dec
movsl
jns
push
xlat
lcall
imul
ja
xlat
fdivrs
loopne
mov
pop
int
jl
shlb
mov
adc
lahf
cmpsb
xchg
je
add
adc
pop
es
dec
aad
dec
cmc
push
insl
xor
repz
div
jecxz
pop
std
push
push
cld
jecxz
pop
out
insl
mov
mov
cli
insl
subl
xor
dec
xor
xchg
ss
das
dec
xor
cmp
fisubrl
sub
adc
stos
dec
mov
xchg
dec
faddl
mov
mov
mov
jbe
cmpl
fwait
addr16
adc
xor
mov
xchg
mov
cmp
sarl
bswap
dec
stos
int3
dec
idivb
frstor
jno
cmpsl
sahf
adc
pop
stos
dec
push
cmp
fists
int
ds
stc
jb
lret
sahf
push
scas
pop
rorl
mov
pop
fisttpl
lods
cmp
test
cli
dec
xchg
loop
inc
and
insl
xor
sti
jo
add
mov
int
push
sub
inc
cltd
dec
push
mov
fildl
and
mov
pusha
lds
and
out
jae
lea
sbb
or
inc
aad
inc
mov
mov
test
sbb
sub
xchg
fimuls
jo
es
lods
cmpsb
insl
lret
inc
xlat
mov
pop
mov
daa
inc
js
repz
iret
xor
and
gs
push
sahf
loope
gs
loopne
adcb
aam
lods
mov
inc
insb
add
fmulp
ret
mov
inc
std
mov
push
push
jnp
mov
mov
cli
push
test
or
mov
dec
shr
add
es
jne
cld
rcrl
clc
sub
inc
xchg
pop
das
mov
mov
mov
inc
and
test
fwait
pusha
lahf
jl
cmp
outsb
jle
test
es
hlt
addr16
xchg
rolb
pop
icebp
xchg
jle
mov
jg
test
jp
jge
fstps
jo
fs
mov
dec
mov
imul
cmp
ds
mov
push
test
jg
fmuls
sbb
or
ja
pop
add
loop
orl
adc
decb
int
jmp
or
push
cwtl
sub
incb
mov
dec
es
lds
out
sbb
sub
scas
and
pop
stc
mov
add
mov
sti
cmc
add
mov
out
repz
pop
cmc
fcompl
mov
mov
dec
cltd
or
xor
insl
out
int3
cmp
or
fistl
or
dec
int3
mov
mov
jnp
hlt
cltd
ffreep
les
inc
and
push
xlat
or
cltd
scas
flds
or
mov
or
sub
sbbl
or
xor
pop
and
insl
push
inc
fistl
xor
es
outsl
jge
xor
jae
inc
repz
cmpsb
cli
xchg
adc
xchg
jl
push
repnz
inc
xlat
mov
dec
sbb
into
xchg
test
cld
popa
jmp
ljmp
cmp
xchg
shl
jl
cmpsb
jp
xor
and
scas
xor
ffree
and
inc
mov
push
jle
jnp
jp
mov
xchg
and
xor
aad
gs
in
lahf
and
pop
sbb
data16
add
rcr
in
and
inc
sbbb
jg
dec
pop
mov
mov
out
sbb
xlat
call
ss
xchg
mov
gs
xor
pop
outsb
ja
insl
stos
aas
xchg
add
jecxz
arpl
out
sub
dec
es
pop
mov
mov
pushf
shl
jmp
imul
sub
push
cwtl
sub
inc
sbb
cwtl
call
cmp
je
cmp
mov
inc
ds
lret
lods
or
sbb
mov
mov
mov
lods
or
inc
sub
push
push
sbb
mov
lock
lds
repnz
ret
ds
hlt
cwtl
xor
xlat
leave
pushf
add
imul
pop
sbb
out
lcall
out
icebp
in
pop
mov
push
lods
jno
or
xchg
mov
cmp
jp
es
les
mov
mov
sub
arpl
pop
lahf
sbb
pop
mov
addr16
inc
inc
outsb
ret
cs
cmp
adc
fcmovne
repz
and
aas
sarl
outsl
sbb
out
xor
cmp
and
xchg
mov
outsb
jmp
cmp
or
xchg
mov
mov
enter
aaa
inc
adc
cmp
or
adc
out
int3
rep
addr16
cli
fnstenv
add
jo
inc
insl
pop
pop
icebp
ss
push
adc
push
mov
hlt
cltd
and
mov
sub
outsb
cmpsb
int
jl
lea
sahf
imul
aas
je
cbtw
jp
cmc
pop
gs
ret
fnstsw
cmp
push
mov
fldt
mov
jne
aad
rcr
js
lea
shrb
cli
ret
ss
aas
jecxz
xor
scas
iret
xor
stos
inc
repz
fstpt
mov
das
cmpsb
clc
out
aaa
lds
push
cmpl
and
add
sbb
popa
mov
jg
pop
out
std
ja
and
aaa
xlat
lods
jl
push
repz
lea
jne
jbe
jp
pop
pop
sbb
je
dec
and
jmp
lea
ja
push
mov
fwait
add
stc
jnp
idivb
cmpsb
xchg
rol
iret
fabs
mov
pushf
out
pop
shrb
mov
cmp
pop
fcmovnb
scas
pop
aam
out
mov
shrb
and
and
dec
inc
insb
mov
mov
jbe
dec
fcmovne
adc
push
iret
outsl
xor
repnz
xor
jo
int3
jecxz
dec
lret
loopne
sbb
lods
sub
and
cmp
mov
xchg
xchg
mov
ja
pop
aad
js
fiaddl
sub
jnp
add
inc
pop
cltd
jbe
mov
into
enter
sti
jecxz
xor
push
movsl
xchg
xor
lock
inc
scas
cmpsb
roll
nop
jg
andl
loopne
jb
mov
xlat
cli
out
xor
stos
dec
das
jo
dec
jno,pt
sahf
and
add
lcall
pop
adc
and
les
cmp
fs
adc
adc
and
in
inc
pop
pop
stos
inc
sbb
shl
and
les
dec
cmc
pop
js
std
sarl
aas
and
push
pop
fiaddl
shll
fstl
movsb
dec
or
inc
push
add
rol
scas
push
sub
mov
mov
dec
xor
xchg
inc
sbb
sbb
mov
add
dec
xlat
mov
sahf
xchg
jle
mov
jae
mov
rcr
insl
jl
or
adc
xor
insb
push
lods
insb
sbb
add
sahf
pop
add
aad
sub
push
pushl
pop
mov
lods
sbb
mov
mov
out
pop
cmp
sbbb
mov
sub
jge
mov
leave
imulb
ror
sub
lds
notl
lea
cltd
shl
inc
mov
icebp
push
adc
mov
fs
mov
jo
xor
sbb
test
inc
lret
lcall
pop
inc
cmp
mov
pop
das
jl
mov
test
aam
lret
and
popf
lea
pop
jb
adc
jg
lock
nop
cs
mov
jno
mov
sti
push
jecxz
xor
stos
out
dec
add
cwtl
int3
xchg
adc
adc
in
sub
xchg
pop
lret
dec
repz
xor
sub
leave
inc
lods
lds
cmp
shlb
sarl
push
js
jae
mov
lds
in
mov
xchg
pushl
ljmp
jae
loopne
into
arpl
add
xchg
stos
sbb
cmp
pushf
fmulp
scas
in
pop
and
hlt
imul
mov
pop
mov
decb
fldt
cli
mov
or
mov
inc
mov
mov
mov
jo,pn
cld
imul
mov
movsl
cmpl
xchg
xor
dec
mov
mov
std
adc
inc
cli
cmp
in
jb
jle,pt
cmp
xor
mov
push
xchg
sub
iret
out
mov
in
inc
pop
dec
lret
scas
iret
and
mov
movsb
cs
add
mov
fisttps
xor
aam
inc
sbb
mov
xor
sti
pusha
fdivr
sub
or
xchg
dec
mov
test
call
push
lea
loopne
test
dec
lds
cmp
pminsw
js
and
sbb
jo
scas
popa
cmp
mov
push
dec
cwtl
mov
sub
xchg
insl
push
or
push
enter
cwtl
dec
imul
pop
stos
sub
pop
cmp
fadd
lods
mov
add
and
jle
mov
inc
cli
jae
test
sub
mov
xor
push
mov
mov
repz
dec
repnz
fldenv
add
dec
cli
xchg
xchg
pop
cmpsb
jmp
arpl
mov
inc
test
pushf
sbb
cmp
push
jle
leave
xor
test
mov
fs
sbb
jns
mov
lret
enter
enter
les
mov
das
inc
jb
inc
popl
ret
testb
ror
pop
lock
dec
jmp
or
mov
push
test
inc
add
xchg
das
mov
dec
jge
mov
repnz
fidivs
test
add
mov
sbb
lcall
inc
or
sub
or
rcr
imul
mov
repnz
jmp
xchg
and
out
xor
ja
insl
jo
lock
lahf
addb
push
idivl
flds
or
shr
sahf
pop
inc
xor
jo
lret
mov
push
xchg
adc
lret
add
daa
mov
nop
or
outsb
aad
and
movsl
pusha
addr16
cmp
out
adc
jle
icebp
adc
dec
push
das
stos
shlb
mov
sarl
in
push
push
dec
pop
cld
into
xor
mov
inc
pusha
fucomi
lods
jb
push
adc
xchg
push
mov
jle
or
imul
jl
jg
adc
sbb
dec
add
dec
lock
in
lret
cmpsl
jnp
cmp
mov
aas
mov
cmp
test
testl
jge
inc
or
pop
push
xchg
loopne
xchg
inc
adc
or
gs
pushf
push
adc
mov
xor
lea
in
dec
mov
mov
lahf
adc
sbb
mov
js
push
mov
add
repz
sbb
pop
pop
cmp
add
cmpl
adc
dec
arpl
push
push
xchg
jmp
les
adc
mov
pop
xor
pop
sahf
sti
add
rcrl
push
jno
sub
mov
inc
lahf
and
lahf
jge
mov
xchg
shrb
add
rcll
mov
and
jg
imul
inc
mov
push
enter
cmpl
in
xchg
mov
out
rorb
lock
pop
int
sub
xchg
jg
lea
test
lcall
inc
bound
sub
pop
xchg
sahf
xchg
dec
out
mov
ljmp
dec
dec
pop
or
push
lret
stos
insl
jno
pop
cmpsl
lahf
ret
mov
es
leave
out
jle
addr16
jge
push
pop
ret
int
fnstcw
out
shll
orl
push
adc
and
mov
lahf
mov
inc
lret
push
xor
iret
mov
add
xchg
jp
jo
inc
fcoms
stc
test
push
int3
movsl
popa
hlt
mov
insb
mov
fldenv
outsb
test
punpckhbw
push
mov
icebp
fidivl
test
test
popa
loopne
mov
out
pop
and
jp
call
and
jg
out
ljmp
jnp
test
mov
imul
jne
mov
add
jecxz
jp
mov
push
ss
leave
cld
mov
fcomi
icebp
cmp
iret
mov
mov
cmpsb
xchg
rolb
loope
imul
jbe
mov
adc
xor
inc
and
push
and
aas
jno
daa
jne
je
add
add
test
ljmp
jmp
dec
inc
xor
lcall
js
fstpl
jbe
ss
outsl
scas
push
push
insl
sti
inc
test
lea
ret
lock
fistl
push
xor
add
xchg
sub
pop
sbb
mov
and
jno
dec
inc
inc
repz
sub
sub
push
and
and
add
jp
push
pop
rorl
inc
mov
mov
insb
add
jae
lods
mov
fs
xor
mov
lds
arpl
fimull
mov
scas
lahf
fucom
xor
xor
shl
mov
pop
dec
cli
jns
push
std
sub
cmp
and
dec
sbb
dec
fsubrl
xchg
dec
pop
test
into
scas
sub
sub
mov
out
mov
in
cmc
inc
push
jb
imul
push
jmp
movsl
stos
sbb
test
sti
fldt
ret
negb
inc
xchg
nopl
mov
cmp
jno
lcall
sbb
rorb
xchg
lock
into
inc
in
aas
ljmp
cmpsl
out
arpl
fld
jmp
repnz
cld
lea
test
fldt
std
or
dec
or
mov
scas
xchg
xor
adcb
sbb
or
loope
dec
push
sti
push
adc
testl
inc
out
pop
mov
jo
xchg
inc
ja
shrl
mov
adc
sti
add
xchg
ljmp
cmp
pop
inc
jbe
inc
adc
mov
push
ljmp
insb
xchg
sbb
dec
mov
mov
inc
or
into
mov
out
add
or
adc
fxch
cmp
or
outsl
push
xor
push
sbb
inc
xchg
es
jmp
mulb
dec
xchg
pop
xor
xchg
es
js
and
cli
aaa
int3
mov
cmp
jae
cwtl
push
arpl
mov
lods
in
adc
aad
pxor
leave
pop
int
cmc
imul
inc
push
les
loope
jns
pop
and
mov
lds
repnz
loop
mov
mov
xchg
loop
cmp
push
test
dec
ret
cmp
imul
rcrl
and
sbb
cltd
lahf
movsl
pop
push
jmp
shll
inc
enter
imul
sti
mov
leave
and
jae
insl
or
movsb
jne
sbb
and
add
adc
sarl
pop
scas
or
jmp
loope
mov
adc
add
gs
iret
cmp
xchg
or
dec
sub
and
push
mov
dec
mov
jecxz
adc
mov
out
sub
je
jae
sub
adc
loope
mov
lahf
call
pop
push
loopne
push
gs
xchg
hlt
xchg
mov
xchg
xor
xchg
adc
push
mov
insb
sbbl
bound
rcrl
daa
and
xorb
lock
cmpsl
adc
inc
sub
es
push
hlt
icebp
mov
push
inc
loop
fwait
mov
mov
in
enter
dec
sbb
cmp
in
std
add
jo
jecxz
in
lahf
imul
jle
xchg
addr16
pop
fidivrs
push
xchg
dec
aas
jmp
and
data16
fs
jne
pop
mov
xchg
notb
or
sahf
and
and
in
lods
adc
and
pushf
repnz
jl
push
in
mov
pop
lods
arpl
jne
testb
dec
inc
sub
aaa
hlt
icebp
subb
mov
or
xor
ficompl
out
pop
lods
stos
mov
cmc
or
sbb
std
push
icebp
and
or
sti
xchg
mov
outsb
stos
insb
sub
popf
test
add
and
cmp
bound
add
push
mov
push
add
insl
pop
int3
aas
jnp
sbb
mov
lods
iret
jl
add
lods
rcrb
jg
cmpsb
jmp
cmp
or
rcll
or
xchg
cwtl
or
mov
cmp
enter
gs
cmpsl
fisubrs
ljmp
inc
fwait
in
int
shlb
pusha
scas
pop
jmp
pop
call
xchg
movsl
sahf
xchg
aad
and
mov
xor
sub
aaa
fldcw
mov
es
lahf
push
jmp
push
shlb
lret
mov
add
popf
mov
pop
cmpl
pop
cmp
jo
das
add
lahf
adc
in
inc
mov
mov
imul
push
mov
jb
or
and
ja
push
cmpsl
mov
or
push
shrl
add
rcll
adc
or
cmpsb
int
xor
mov
aaa
fcoml
out
stos
mov
add
add
pop
jg
shll
sub
push
lods
xchg
repnz
mov
xor
fwait
iret
test
cmp
pop
fldl
xor
add
ret
xchg
cmp
jle
stos
iret
es
mov
or
jbe
jg
js
jns
les
or
push
jb
mov
sti
xlat
mov
or
sets
inc
push
mov
cmp
or
mov
pushf
cltd
sti
je
aad
mulps
jecxz
nopl
dec
shll
cmp
in
push
call
insb
sbbl
std
ja
mov
mov
inc
sub
mov
and
es
movsl
dec
and
data16
sbbl
cmp
mov
std
push
inc
sbb
and
lret
loope
cmc
shlb
not
sbb
mov
inc
les
sbb
and
cmc
xor
scas
mov
in
add
pop
jp
in
ret
movsb
xchg
sbb
jecxz
outsb
fstps
cmp
testl
mov
cwtl
sbb
ret
test
jle
sbb
adc
cld
mov
addl
adc
cs
fcoms
xor
test
pop
pop
fadds
leave
test
add
jae
cmc
sbb
insb
mov
decb
fwait
inc
test
leave
mov
rcll
dec
xor
pop
pop
popa
fnstcw
into
push
xchg
lock
mov
mov
adc
std
mov
pop
sbb
pusha
jmp
xchg
jno
inc
mov
ss
mov
arpl
lret
push
shll
push
xchg
aam
mov
add
jecxz
ss
dec
scas
jb
sbb
inc
pop
push
dec
adc
je
xchg
cltd
fisubrl
fidivs
adc
test
aaa
fwait
std
mov
pop
pop
dec
pushf
adcb
rep
fsubrl
addb
cmp
pop
pop
loop,pn
push
icebp
pushf
adc
lea
sbb
mov
movsb
and
push
imul
repnz
adc
clc
call
shl
adc
dec
add
jnp
add
test
cmpxchg
sbb
push
push
gs
outsl
rcll
movsb
and
movhps
mov
jmp
sbb
mov
leave
mov
dec
mov
jae
mov
lcall
pop
mov
mov
sbb
cmp
sbbb
stos
out
cltd
das
jb
and
inc
out
out
leave
lret
lret
pop
data16
aad
push
loopne
mov
pop
cs
movsl
nop
ds
stos
sbb
dec
out
push
or
or
cmp
cmp
cld
in
test
leave
dec
mov
add
jno
jge
repnz
nop
in
or
mov
jp
mov
mov
or
cmp
in
inc
or
xchg
cli
lret
inc
pusha
pop
cmp
mov
xchg
dec
scas
cltd
mov
jle
fdiv
stc
lret
sbb
and
mov
jnp
jno
fcmovb
xor
jg
jge
mov
idivb
ljmp
cmpsl
or
push
and
push
inc
add
out
jle
dec
out
inc
sub
and
mov
in
push
mov
test
sub
mov
ja
mov
jns
pop
ljmp
dec
insb
out
dec
xlat
pop
int
add
ficompl
std
jmp
mov
rcr
xchg
daa
jo
sbb
jg,pn
and
xchg
outsb
add
jg
xchg
xchg
xchg
es
andl
sbb
mov
jnp
adc
xchg
dec
fnstsw
inc
dec
add
test
sbb
mov
shlb
sub
cmc
mov
cmp
aad
add
or
jne
sete
add
in
inc
mov
fimuls
jmp
test
mov
dec
mov
push
and
stc
xchg
mov
scas
in
jns
fbstp
cmp
jecxz
push
xor
mov
mov
testl
into
sbb
mov
pop
cmp
imul
out
mov
cmc
push
sti
cmp
loopne
pop
outsb
imul
mov
dec
mov
cld
out
sub
idiv
outsl
fs
clc
jbe
dec
sbb
int
cmp
sbb
or
lea
cmpsl
pop
dec
add
je
or
jno
rcrb
shr
cld
and
add
xchg
enter
jmp
jmp
xchg
insb
fisubrl
push
idivb
aas
clc
xchg
in
push
aad
xchg
and
xor
adc
cmp
arpl
insl
add
outsb
inc
mov
dec
mov
xorl
mov
push
sti
and
sbbl
adc
addr16
mov
mov
add
adc
add
and
lods
mov
decl
mov
adc
lods
jge
fimuls
add
in
push
xor
dec
jecxz
dec
loope
lret
mov
xchg
mov
push
adc
xor
mov
sub
xor
xor
das
add
lcall
movsl
xchg
push
into
je
xchg
push
cli
cltd
mov
pop
and
push
pop
or
test
enter
mov
adc
ja
add
jb
fwait
cmpb
lret
cltd
test
mov
stos
or
fs
scas
mov
cmp
call
aaa
xor
pop
not
xchg
fsubl
fimull
nop
aaa
mov
subb
lret
pop
mov
shl
xlat
inc
inc
push
adc
jge
add
xchg
shrb
std
bound
xchg
xchg
ffree
adc
je
xchg
push
mov
mov
dec
push
in
loop
orb
mov
mov
mov
cltd
aas
pop
push
cwtl
mov
stos
cli
bnd
xor
push
mov
adc
xor
fdivs
push
lds
in
popf
mov
mov
pcmpgtw
inc
ja
mov
xor
insb
arpl
popf
push
mov
filds
xchg
jmpw
jae
test
in
dec
cwtl
push
mov
lods
pop
sarl
out
or
cmp
jmp
sub
inc
push
jmp
adc
loopne
mov
movsb
mov
into
adc
aam
int
gs
and
push
repnz
negl
aam
xlat
pop
mov
jp
into
lret
inc
jae
sbb
filds
pusha
test
or
sbb
lret
pop
out
and
push
cmp
dec
pop
cmp
adc
rcrl
test
lds
out
imul
ret
fs
in
sti
mov
daa
mov
xor
sbb
fs
adc
sbb
mov
jne
je
popa
jno
dec
in
mov
push
or
cmpb
sbb
fsts
xor
js
fcmovnu
dec
mov
cmpb
xchg
cmp
xor
sbb
pop
loop
jns
stos
or
insl
fcmovnbe
ret
mov
xor
cs
inc
pusha
notl
sarl
lcall
mov
or
pusha
and
mov
sub
jl
xchg
mov
scas
mov
les
lea
xchg
mov
mov
mov
add
push
mov
out
aam
int
in
pop
mov
cmp
push
shl
pop
leave
out
fsubrp
xchg
outsl
mov
and
js
test
mov
stc
jae
cmp
popa
sahf
popa
mov
inc
outsb
ret
jle
dec
push
xor
ds
enter
xor
pop
insl
outsb
mov
in
out
jbe
cmpsb
sbb
ret
inc
mov
jge
popf
adc
and
inc
sbb
mov
adc
xor
inc
and
add
insl
das
cmc
mov
xchg
ror
sbb
xor
xor
jns
mov
test
jno
push
xor
jno
sbb
gs
int3
inc
push
or
leave
inc
pop
arpl
ljmp
sti
cmc
or
jmp
push
lods
inc
mov
add
add
movsb
std
cmpsb
sbbb
outsl
cmp
push
movsl
push
test
add
push
mov
ret
pop
adc
out
lcall
dec
scas
or
cltd
test
and
push
cmp
pusha
dec
lahf
mov
pop
stos
or
jp
out
adc
inc
push
popa
cmp
icebp
setne
lods
cmc
cwtl
jnp
push
test
cmp
pop
cltd
mov
mov
xor
pop
xchg
jns
mov
data16
arpl
xor
jle
call
jbe
roll
mov
jnp
sub
rorl
mov
sbb
pop
push
movsb
mov
xor
jb
cmp
mov
lods
xor
in
popa
xor
pop
push
bnd
lods
insb
fistpll
addl
add
sub
push
and
mov
psraw
sti
cs
incb
out
and
loop
scas
jnp
cmpsl
dec
je
cmpsb
sbb
mov
push
and
dec
mov
cmpsl
adc
cmpl
dec
dec
or
ficompl
inc
push
adc
pusha
add
sub
adc
jmp
mov
inc
cld
shl
stos
jo
or
in
push
cwtl
lods
gs
push
add
mov
nop
lret
jp
rorb
sub
pusha
out
add
push
roll
cld
xor
jns
cmpsl
pop
pmulhw
push
js
dec
idivl
je
mov
dec
fdivr
push
cld
xchg
mov
das
in
jb
sbb
push
jb
cmp
loopne
jo
out
push
outsb
jmp
stos
pop
sbb
fwait
push
lds
xlat
clc
pop
push
aam
xchg
es
adc
int
mov
mov
sbb
sub
bnd
cmp
lcall
lcall
pop
ds
mov
pop
dec
push
or
int
inc
push
ljmp
cmp
jmp
test
sbb
push
cmpsb
je
cld
imul
jns
stc
dec
mov
lods
mov
daa
in
into
cmp
aaa
push
in
ret
cs
inc
or
adc
loope
xor
lods
lcall
adc
scas
mov
rcr
sub
js
pop
sbb
cmp
in
movsb
sub
xor
bound
and
cmp
xor
and
adc
int
fisttpl
add
out
fmuls
les
mov
movsb
pop
inc
jmp
repz
adc
add
lock
dec
pusha
imul
xlat
js
sub
lods
cmp
nop
nop
fldln2
sbb
jg
popa
test
cld
xor
inc
mov
pop
mov
cltd
mov
into
in
xchg
imul
mov
jnp
loop
adc
sbb
mov
cld
pop
repz
inc
daa
insb
xchg
dec
and
shl
jae
jb
dec
xchg
imul
push
sub
xor
mov
fidivrs
push
and
imul
sbb
dec
push
xchg
jno
dec
push
out
test
rol
mov
cmp
lcall
fcomi
rorl
xor
movsl
pop
sub
js
cmp
sbb
icebp
mov
xchg
or
pop
aaa
cwtl
lahf
ret
leave
das
es
sub
aam
repz
pop
aad
repnz
dec
icebp
lds
fst
mov
scas
mov
jp
mov
das
push
shll
cmp
xchg
in
jne
jae
xor
inc
push
repz
faddp
cld
mov
mov
in
push
cmc
out
or
lds
test
pop
cwtl
je
out
push
inc
adc
jge
adc
jns
lcall
lahf
xchg
sahf
jp
out
addr16
cmpxchg
xchg
lock
sub
addr16
jo
or
sub
pop
pushf
rcrl
je
cmp
popa
fists
jmp
push
sbb
iret
push
addr16
xor
das
mov
dec
jecxz
stos
cmp
mov
stc
mov
lds
std
out
jo
stc
sub
das
push
cmp
call
enter
dec
mov
imul
mov
jnp
jno
and
mov
xchg
std
jp
dec
clc
leave
popa
movsb
cmc
adc
inc
or
into
scas
addb
dec
je
push
mov
inc
adc
and
in
jne
fadd
sub
js
sub
pop
cmp
and
inc
cli
sbb
cmc
adc
lret
xchg
movsl
sarb
scas
loopne
movsl
subb
sbb
mov
imulb
addr16
and
inc
push
fdivl
daa
fmul
and
cmp
or
jecxz
aas
jmp
add
sbb
cli
xlat
lret
xchg
mov
sbb
lods
xchg
out
mov
and
iret
es
mov
and
lret
cmc
leave
bound
out
push
cmpsb
cltd
jle
and
xor
pop
out
push
mov
xor
ret
cmp
or
inc
adc
or
jne
xchg
movsb
sub
popf
add
mov
sub
pop
daa
push
xchg
jg
or
shrb
std
icebp
dec
lcall
or
je
cmp
js
pushf
pop
js
rcrl
jp
add
rcl
push
pop
jg
test
lret
clc
add
stos
test
jle
out
lahf
jns
nop
jecxz
jg
pop
cmp
mov
pop
fldt
mov
sbb
hlt
mov
inc
outsb
in
xchg
sti
xchg
aam
ret
repnz
out
xchg
inc
ret
cmc
mov
jns
xchg
adc
push
mov
and
dec
sbb
in
mov
or
adc
dec
fidivs
shll
mov
cmc
imul
xor
push
xchg
dec
outsb
sarl
jge
pop
add
dec
into
ret
mov
fs
cld
mov
cs
jge
sahf
dec
push
pop
shrb
sub
xlat
sub
addr16
jnp
icebp
dec
aad
and
mov
ret
mov
out
out
jo
cltd
adc
and
push
adc
pop
out
aad
out
and
jmp
or
mov
data16
popf
pop
cltd
ja
push
sti
enter
in
ss
adc
mov
fimuls
push
rcll
adc
outsb
sbb
push
andb
repnz
sub
es
sbb
sbb
add
pop
and
and
cmc
loop
in
scas
mov
ss
sahf
notl
adc
movsl
mov
lret
push
int3
lahf
push
jle
js
test
or
dec
push
inc
outsb
pop
daa
sbb
lods
push
jp
outsl
xor
cmpsl
pusha
xlat
mov
mov
fsubs
mov
lcall
adc
cli
mov
clc
sub
xchg
inc
pop
insb
mov
cmc
cmp
inc
lods
les
lret
popa
ja
test
inc
fnstsw
dec
ss
lea
sarb
aam
rcll
ja
dec
mov
dec
test
shll
mov
repnz
inc
pop
dec
in
nop
push
cmp
aaa
insb
aam
push
cmp
shl
pop
clc
add
xchg
push
adc
cli
lret
aad
cltd
mov
and
outsl
gs
aas
aas
adc
adc
jo
adc
xor
ss
movsl
pop
pop
fcoml
jge
les
fxch
or
xorb
xchg
and
js
xchg
lret
jns
jl
lret
je
add
fisttps
pusha
mov
dec
arpl
shlb
aaa
pop
je
dec
and
loop
mov
cmp
or
cli
stos
xor
xchg
sub
sub
adc
hlt
scas
sarl
mov
mov
or
mov
jg
add
test
in
sub
inc
movsl
mov
loopne
insl
out
adc
scas
addr16
bound
mov
mov
xor
lahf
shl
std
mov
in
gs
push
or
nop
outsb
inc
jmp
cmp
sbb
sbb
lcall
das
push
sbb
mov
mov
xor
stos
or
sub
ds
cmp
sti
push
mov
es
xor
jl
jmp
xor
stos
jo
addr16
inc
xorb
call
nop
cmpsl
sti
cmp
loope
adc
mov
lock
pop
add
xor
inc
or
pop
jge
xor
clc
ss
bound
out
iret
adc
xchg
cmc
dec
add
sbb
add
mov
leave
movsl
lahf
pop
repnz
pop
xor
inc
inc
xor
xchg
ret
inc
insl
xchg
in
pop
in
xchg
mov
push
lahf
cmp
xchg
cltd
jbe
sahf
push
fs
pop
adc
mov
int3
out
or
jle
jmp
pop
jl
xlat
add
daa
jmp
ja
mov
iret
sbb
jg
jmp
mov
sarb
arpl
loopnew
insb
lods
mov
shl
lret
jae
xchg
xchg
sub
jb
cld
pop
and
pop
cmpsl
lods
jb
cmpsb
jg
into
jnp
xchg
xchg
xchg
mov
aaa
mov
cmp
jnp
sarl
add
mov
loopne
inc
arpl
or
repnz
sahf
pop
jns
pop
adc
mov
push
mov
mov
jecxz
shll
fdiv
push
jmp
dec
and
popa
dec
mov
sarl
jecxz
lock
jbe,pt
fimull
mov
sub
or
jbe
out
mov
pop
stc
mov
loopne
sti
inc
ret
xor
out
xor
pushf
fisubl
mov
mov
mov
ret
test
imul
pop
lea
push
es
frstor
frstor
fisttps
lock
sbb
into
imul
pushf
mov
ja
cmp
xor
cmp
pusha
cmp
mov
pop
cmp
sbb
pop
bnd
mov
push
test
fwait
cs
and
je
lret
sub
pop
adc
or
adc
jbe
data16
aas
loopne
mov
subb
lret
push
mov
push
adc
mov
in
push
sub
mov
andb
mov
ret
inc
into
add
push
xchg
shll
daa
mov
aaa
sti
pop
jns
mov
pop
inc
or
test
sbb
lods
enter
icebp
mov
adc
insb
cld
sbb
shlb
xor
lret
inc
push
inc
mov
jnp
test
ja
decb
mov
arpl
jne
adc
js
push
les
pop
mov
loopne
cli
loop
out
sub
ret
test
mov
xchg
stos
xchg
add
or
popf
loop
sbb
pop
cld
add
std
orl
loope
insl
sbb
adc
push
rcll
push
mov
dec
push
mov
add
fs
movsb
jl
stc
jb
shrl
push
cmp
xchg
mov
sub
das
pop
pop
movsb
aam
push
mov
gs
pushf
inc
xor
cmp
mov
inc
in
pop
js
push
pop
inc
adc
xchg
movsb
and
rorl
mov
pop
cmpsl
mov
mov
cwtl
adc
iret
int
sahf
mov
push
inc
stc
insl
roll
and
cld
jnp
jmp
mov
push
idivl
daa
sahf
cmp
jbe
mull
test
dec
jp
icebp
xchg
sarb
push
adc
mov
xor
lods
lods
ret
mov
out
insb
inc
xchg
xchg
xor
repnz
in
ret
cmp
fsts
shrl
jecxz
aad
out
imul
enter
mov
adc
sub
pop
stos
pop
subl
or
or
ror
xor
mov
fstpt
push
dec
movsl
mov
push
stos
fcomps
es
pusha
pop
loopne
out
fsubs
fisttps
movsb
rcl
sbb
cmp
enter
or
jl
jecxz
shlb
jbe
push
pop
in
pushf
out
fadds
shlb
jns
jmp
and
mov
mov
daa
mov
mov
xchg
dec
in
addr16
ljmp
popf
iret
push
gs
ljmp
jecxz
test
cmp
repz
jecxz
xor
mov
icebp
imul
daa
fsubrs
inc
mov
push
insb
mov
outsl
add
cld
pusha
sbb
decb
cmp
inc
adc
clc
pushf
lcall
cld
inc
scas
pushw
jmp
cmp
inc
push
jl
daa
pop
out
jne
adc
or
jl
test
pop
in
add
imul
ja
and
bound
xor
mov
imul
mov
rclb
das
push
clc
or
mov
xchg
pop
cs
cmp
and
jle
lea
mov
inc
add
sub
std
push
push
or
in
dec
and
push
fs
imul
adcb
push
clc
lret
dec
lods
out
imul
jb
cld
aaa
add
add
xlat
mov
popa
push
out
xchg
stos
fldt
jnp
jbe
popa
dec
push
fcomps
push
add
test
mov
pop
mov
sbb
jl
arpl
test
jge
pushf
push
addr16
or
xor
cmpsb
sub
fmull
mov
test
in
xchg
das
sti
cs
sbb
inc
into
pop
mov
cmp
imul
push
ficoml
orl
jge
ljmp
pop
aaa
lahf
cmp
ret
sub
mov
mov
push
adcl
les
scas
mov
pop
int
adc
inc
add
xchg
inc
mov
pop
scas
sub
stos
add
jnp
add
jae
adc
mov
clc
icebp
lahf
and
stos
xchg
fs
bound
pusha
out
pop
inc
inc
iret
lcall
fwait
or
test
jecxz
aam
sub
mov
fisubrs
mull
cmp
dec
add
or
sbb
mov
mov
mov
sbb
out
push
inc
mov
inc
mov
dec
hlt
mov
add
push
repnz
xchg
mov
iret
arpl
nop
ret
and
in
and
xchg
scas
shlb
out
push
mov
imulb
ret
pop
ficoms
fwait
int3
push
pusha
arpl
sub
and
add
and
push
pop
icebp
mov
xor
sub
aam
int3
and
inc
xor
aas
jae
pmullw
cmp
addb
adc
lahf
orl
pop
xlat
jecxz
outsb
sub
std
pop
sbb
out
xor
adc
jmp
scas
mov
sbb
ja
adc
idivl
xchg
or
test
and
or
and
add
sbb
fsub
xor
leave
clc
shr
test
mov
popf
out
dec
out
pushl
adc
add
lds
cmp
fisubl
push
mov
out
and
pop
daa
movsb
pop
add
dec
std
ja
jmp
adc
jmp
aad
arpl
jns
and
scas
jg
xchg
push
mov
pop
ja
icebp
addb
inc
clc
es
jmp
adc
repnz
or
inc
into
sbb
sahf
pop
dec
jno
and
imul
cli
pop
notb
fsubrl
adc
mov
icebp
daa
jbe
mov
lahf
or
sbb
ss
xor
jbe
mov
loope
pop
loop
or
mov
and
lahf
movsl
dec
stc
jge
iret
out
lods
insb
hlt
orw
repz
jmp
je
out
push
fsubrs
jo
jmp
and
js
xchg
push
jge
mov
push
aad
es
xor
mov
cmp
scas
icebp
imul
addb
sti
xor
clc
jbe
mov
iret
cmpb
sub
inc
jl
add
xor
fs
cli
inc
mov
shlb
ret
push
pushf
sti
sbb
xor
pop
pushf
xorb
mov
rorb
cmp
add
mov
mov
clc
mov
jo
cmp
pop
insl
adc
mov
nop
shrb
cs
mov
and
mov
icebp
imul
icebp
xor
inc
mov
insl
fdiv
fdivl
dec
popf
or
push
ss
cmpsl
ss
ficomps
mov
mov
int
stos
pushf
cmc
cmp
pusha
sub
sbb
pusha
push
dec
popf
push
pop
add
inc
xor
sub
push
inc
in
jno
mov
jno
lods
jne
jns
shlb
fbld
cltd
jnp
jecxz
dec
out
stos
adc
fstl
mov
adc
int
mov
in
sahf
pop
sti
jno
fmul
sbbb
pop
add
in
mov
int3
ljmp
and
adc
mov
arpl
ds
mov
shll
sub
rcll
mov
mov
cmp
iret
and
add
push
push
imul
aam
shll
xor
xchg
xchg
adc
add
pop
sub
mov
sub
or
fidivrs
pop
jge
sbb
sub
fisubs
adc
dec
xchg
push
pop
clc
fwait
dec
addr16
pop
add
push
add
js
push
mov
sar
fisubrs
lcall
push
sub
add
cmp
xor
fsubs
mov
jae
mov
dec
nop
inc
jmp
add
insb
adc
push
mov
or
jo
ss
cmp
mov
addr16
sbb
lahf
ror
sbb
call
imul
out
out
cmpsb
xlat
lret
es
repnz
sahf
dec
gs
xchg
dec
jo
sbb
fwait
cmp
inc
movsl
and
dec
lret
fs
popf
aaa
pusha
jae
rcrb
insl
sahf
adc
cmp
dec
rcll
mov
lahf
or
adc
push
jmp
xor
jnp
dec
leave
cltd
push
dec
orl
pop
jmp
xchg
aas
lds
cltd
sbb
lea
dec
inc
adc
ss
std
xor
test
mov
test
mov
mov
sbb
jns
dec
outsb
roll
sub
mov
loopne
sbb
test
test
aam
or
in
int
or
mov
repnz
test
fcomip
jg
insl
mov
retw
xchg
pop
loopne
inc
psubusw
fstpt
sbbl
mov
push
or
daa
sbb
pop
into
add
push
mov
jecxz
and
push
aad
push
popf
jg
and
stos
dec
xor
pop
jae
mov
pop
out
repz
rol
int
and
pop
jns
mov
push
cmpsb
lods
xchg
mov
or
cmp
aaa
loopne
div
popf
test
lret
out
pop
adc
pusha
imul
cmpb
push
and
mov
xchg
sbb
dec
cs
add
add
push
mov
bound
aas
jno
push
jle,pt
repz
sub
repz
int
in
popf
movsl
mov
dec
dec
and
push
lcall
push
pop
out
dec
mov
clc
sbb
lock
jb
filds
lock
mov
in
es
xorb
std
push
in
test
mov
sti
jle
adc
into
mov
cs
push
sarl
pop
mov
mov
lcall
movsb
ror
mov
add
rolb
or
popf
inc
jnp
mov
lcall
aad
adc
lcall
test
clc
xchg
sbb
ss
adc
lret
add
jp
test
sbb
mov
sbbl
hlt
dec
cmp
xchg
fisubrl
add
cmpsb
lods
ljmp
mov
pop
mov
cwtl
lock
insb
jmp
mov
std
xchg
idivl
mov
les
add
mov
sbb
or
xchg
pop
sbb
sbb
bound
cli
push
mov
js
xchg
xchg
lcall
xor
lods
or
les
fists
xlat
in
and
adc
lea
andb
adc
ljmp
push
or
push
mov
mov
sbb
mov
mov
pushf
and
dec
lods
mov
movb
jge
and
lret
pusha
lret
aas
jo
sarl
cmp
aam
or
fldt
jae
cmpsb
mov
stc
pop
loopne
in
loopne
inc
popa
ret
leave
mov
dec
jmp
mov
in
xchg
out
and
ds
mov
enter
mov
pusha
inc
stc
mov
dec
test
call
fistps
test
adc
sbb
scas
cmp
or
inc
aam
add
cmp
cmc
sbb
sub
or
pop
out
xlat
sub
jmp
arpl
gs
into
add
ret
stos
or
popf
mov
mov
dec
inc
pop
sti
xor
jnp
adc
decl
add
xchg
mov
out
mov
lcall
mov
inc
xchg
clc
shrb
cld
adc
mov
repz
pop
cmp
xor
outsb
imul
je
pop
push
or
mulb
fdiv
push
divl
add
push
mov
add
sbb
shrb
sbb
insb
mov
pop
xchg
sbb
sbb
xor
insb
push
int3
test
xchg
loop
sahf
cmp
test
mov
fsts
clc
es
addr16
mov
das
pop
int3
push
xchg
push
mov
mov
test
roll
mov
mov
sti
sbb
xor
leave
xor
xchg
push
popf
stos
and
inc
addb
add
mov
xchg
pop
aaa
jns
in
cmp
mov
in
nop
cwtl
xchg
adc
sub
xor
dec
mov
pop
jge
test
ljmp
mov
andl
jle
pop
sub
inc
loope
mov
sbb
jbe
inc
fstps
xchg
inc
fistpl
out
jmp
pop
jp
jg
scas
mov
imul
pop
fs
arpl
xchg
cmp
add
mov
mov
out
daa
sahf
cld
pop
pop
push
lods
sbb
xchg
test
mov
stc
adcl
jbe
insl
xor
adc
mov
inc
sbb
mov
adc
xor
pop
xlat
cmp
dec
adc
add
add
lods
add
loopne
in
push
into
lcall
add
cmp
movsl
iret
enter
dec
add
mov
inc
xor
pop
adc
pop
jo
or
test
das
out
push
jo
mov
cs
mov
xor
xchg
mov
jbe
mov
sarb
ret
ror
outsb
pop
mov
sub
fs
stos
jl
xor
loopne
aad
ja
data16
mov
scas
lds
lret
mov
sbb
xor
sbb
mov
mov
ss
mov
js
lock
arpl
mov
stos
out
rolb
ds
push
je
cli
std
inc
mov
cmp
cmp
xchg
push
jno
sub
pusha
push
sbb
dec
dec
or
xchg
push
cmp
dec
out
xrelease
push
stc
lcall
in
mov
xor
daa
lock
and
or
xchg
lods
inc
movsl
lahf
ja
sti
cltd
popf
aaa
mov
jmp
jae
add
insb
int
push
mov
stc
or
xor
enter
inc
jno
mov
sti
inc
mov
fcomip
pop
jl
shl
inc
add
aas
mov
jl
int3
lea
pop
mov
fdivrs
mov
jmp
out
xchg
pop
popf
test
xlat
jno
inc
pop
imul
lods
mov
jno
pop
cmp
imul
out
push
aaa
push
dec
push
and
and
dec
shr
in
rorl
das
pop
int3
js
addr16
jno
adc
repz
js
test
mov
inc
adc
cld
loopne
and
ds
flds
mov
push
jmp
jne
inc
pop
enter
cmc
jle
xor
mov
cltd
or
fidivl
jle
popf
dec
adc
sub
sbb
cmpsb
pop
lock
lcall
pop
cltd
inc
xchg
or
dec
sub
outsb
cmp
adc
mov
jnp
inc
pushf
vpcmpeqb
ds
xchg
jbe
mov
jns
fstpl
scas
loope
popf
mov
or
jbe
iret
push
add
and
rcr
aad
cmp
movsb
jbe
outsb
adc
mov
mov
insb
pop
fiaddl
in
jnp
sub
push
outsb
mov
jnp
and
fimuls
test
inc
int
mov
inc
push
scas
addr16
leave
bound
int
popa
pop
pushf
out
aam
xor
mov
cmpsb
jbe
inc
lods
mov
je
enter
push
pusha
shrb
inc
push
sub
xchg
insl
dec
subl
insl
jecxz
imul
fs
push
xchg
xchg
int3
movaps
lahf
mov
or
mov
inc
lods
add
sbb
push
bound
mov
mov
cmp
jge
xchg
fidivrs
aaa
mov
or
ja
push
jnp
das
mov
cmp
iret
push
lea
insl
xor
mov
sbb
test
xor
jne
ja
int
aaa
aas
lds
adc
inc
outsl
fcomi
mov
lds
in
enter
daa
and
and
mov
gs
xor
jae
aam
add
les
sbb
es
pop
jns
ljmp
xchg
xlat
arpl
mov
in
fistpll
in
mov
iret
adc
stos
push
xor
jbe
inc
xor
shlb
sti
cmp
xchg
sub
adc
mov
loope
xchg
insl
and
add
mov
movsb
jb
in
mov
scas
cld
xor
add
test
idivb
ss
add
pop
and
or
cltd
inc
add
xor
xor
inc
lret
out
sub
clc
inc
or
xor
dec
sbb
out
enter
add
pop
lods
xor
mov
popa
shl
xchg
ss
and
or
jb
sbb
fs
dec
mov
fcoml
iret
repnz
js
mov
mov
sbb
lods
push
mov
xchg
aas
jne
imul
outsl
jp
sbb
mov
rcl
push
and
dec
sbb
movsl
lods
sub
cmp
bswap
stos
xchg
fwait
sub
inc
inc
cli
in
imul
xor
jp
mov
sbb
lcall
pop
aas
add
pop
insl
lds
mov
lret
ffree
aaa
sbb
out
inc
jns
jns
xor
loope
or
xchg
sar
fnstenv
or
leave
mov
fbld
jns
subb
sar
sti
or
unpckhps
add
inc
mov
inc
stos
sbb
iret
repnz
push
lds
pushf
fstpt
xchg
cmp
mov
out
sbb
in
cmp
add
pusha
aaa
push
push
and
mov
cmp
jmp
imul
fwait
xor
rolb
sub
xor
pop
clc
fdivrp
jle
cmp
test
jnp
cmpb
gs
es
loop
subl
sahf
pop
mov
mov
out
inc
push
sub
and
lock
adc
add
mov
adc
mov
push
jne
cmp
dec
pop
sub
adc
add
mov
icebp
daa
pop
inc
mov
xchg
push
jbe
insl
call
lods
sub
sub
mov
les
push
adc
lds
ss
pop
leave
andb
movsb
push
cli
imul
xor
out
mov
xor
or
sbb
xlat
fsubs
cmp
xlat
test
ret
ja
and
sub
xor
shl
inc
scas
pusha
out
push
jae
dec
or
or
clc
outsb
mov
shrl
int
test
sbb
xor
push
jne
push
mov
insl
adc
xlat
sub
repnz
adc
add
mov
loop
and
push
add
out
mov
mov
orb
bound
pop
cmp
andl
sub
mov
les
xor
les
adc
mov
and
cli
sub
jle
cs
pop
fmull
cmp
rorl
arpl
inc
aad
fs
test
push
fsubrl
pop
lock
stos
add
sbb
mov
loope
cmp
fcompl
scas
rclb
jp
vpcmpeqw
ljmp
push
mov
mov
inc
cmpsb
pop
shrb
arpl
leave
pop
xor
mov
popf
cltd
mov
dec
sbb
popa
fistps
jl
add
shl
bound
jmp
shlb
mov
mov
jp
stc
and
jg
lea
add
leave
in
sub
push
ds
inc
aaa
addr16
pop
and
daa
mov
iret
jne
fldenv
sub
xor
dec
addr16
insl
lea
adc
repz
in
jle
int
push
inc
xchg
ss
inc
in
xchg
jae
arpl
add
cmp
ror
mov
mov
pop
mov
insl
mov
cmp
pop
jae
jle
jnp
fmuls
popa
imul
mov
push
mov
adc
mov
mov
mov
test
aaa
scas
push
pop
adc
repnz
mov
xor
inc
pop
cmp
and
lcall
outsb
sbb
and
out
mov
jne
movlps
lcall
mov
leave
mov
inc
inc
fsts
cmp
sub
cld
jle
aam
jo
scas
out
imul
jge
xchg
and
dec
int3
sbb
cmc
jns
es
mov
mov
faddl
stos
into
or
pop
out
adc
mov
iret
dec
push
dec
mov
and
mov
pop
inc
mov
pop
cmp
mov
adc
es
fs
sbb
mov
les
sbb
lods
or
aad
daa
das
push
ret
scas
loope
push
and
stos
and
popf
test
subb
mov
fstpl
xchg
das
cmp
adcb
lock
or
cli
mov
cmp
or
mov
mov
sub
dec
adc
movsb
dec
mov
sub
mov
stos
lods
int3
mov
mov
movsl
cld
int
sub
adc
rcll
sti
jno
adc
ret
xor
push
test
jo
sahf
cld
sbb
stc
bound
pop
pop
std
pop
pop
adc
add
inc
fstps
insl
jl
out
mov
push
bswap
mov
aam
shrl
adc
lods
pop
xlat
jge
inc
dec
enter
xlat
adcb
int
ficomps
roll
lret
stc
outsl
xor
cmp
mov
nop
call
test
cmc
jae
add
daa
into
xchg
dec
inc
shrb
pop
mov
adc
jb
or
rcrb
jb,pn
mov
je
stos
fcmovu
fidivrl
das
add
pop
stos
icebp
dec
sti
ret
movsb
pop
je
ror
icebp
mov
roll
xchg
stos
jge
or
ret
push
jns
jg
jo
lahf
ret
out
insb
xchg
popf
adc
cmp
xchg
cmpsl
adc
inc
lahf
je
sbb
sarb
pop
inc
jmp
xchg
mov
gs
push
test
scas
cltd
sub
gs
mov
shlb
xchg
and
fcmove
lea
clc
iret
aad
fldcw
lds
lds
cmp
xchg
and
dec
cwtl
mov
cld
or
sub
mov
cmpsb
lds
ds
mov
in
or
call
rcl
push
dec
mov
shrl
int3
sub
xchg
push
icebp
dec
inc
pop
adc
pop
dec
stos
out
dec
lahf
mov
das
gs
mov
aas
dec
inc
inc
add
mov
mov
jmp
pop
jl
nop
divl
dec
xor
xor
scas
stos
add
icebp
dec
mov
push
dec
lret
sarl
movsb
bound
mov
push
mov
rcrb
xor
add
fwait
idivl
pop
fidivrl
mov
aas
dec
loope
add
inc
ljmp
dec
fwait
jae
scas
adc
cmp
sbb
cmp
in
cwtl
lods
adc
enter
test
jmp
sbb
pusha
jmp
inc
xchg
inc
inc
jp
out
je
cld
icebp
pop
in
sub
add
scas
aad
mov
mov
lcall
daa
nop
and
nop
sti
sbb
cs
push
mov
pop
out
lret
xchg
gs
sub
xor
addl
ret
lea
dec
adc
sbb
jb
adc
ficoms
imul
cltd
sbb
outsb
adc
sarb
and
imul
out
cmp
push
shl
rclb
ret
jg
fiaddl
jne
pushf
jnp
jbe
or
movsb
inc
mov
adc
inc
xchg
dec
and
and
dec
je
pop
and
gs
adc
cwtl
push
mov
mov
sub
notl
stos
push
sbb
or
jge
imul
cmp
repz
add
mov
pushf
push
adc
in
mov
inc
mov
ret
jp
push
ss
adc
out
push
ljmp
addr16
jmp
arpl
xor
adc
aad
jmp
xorl
xor
out
fisubl
aas
mov
mov
in
shl
mov
mov
nop
push
xor
dec
jae
test
test
dec
xchg
sti
and
sti
in
int3
cmp
lahf
mov
cli
push
imul
mov
adc
outsl
aaa
test
add
jmp
push
adc
cmp
push
aaa
les
ss
adc
rclb
adc
lods
jmp
lret
pop
pushf
das
push
jge
cmp
mov
and
mov
lahf
lcall
ret
popa
cmp
js
shll
cwtl
lea
sub
in
std
mov
loopne
test
sbb
cld
pop
gs
jg
sub
int
xchg
jmp
frstor
push
pop
mov
test
movb
imul
jl
mov
adc
mov
out
adc
sbb
sbb
and
lret
sub
in
push
sbb
out
xchg
cmc
xor
lret
test
pop
aas
sub
cli
cmpsb
out
popf
jle
mov
mov
add
sarl
int3
popa
mov
lret
imul
stos
inc
adc
jno
xchg
adc
std
stc
mov
cmp
dec
lahf
add
or
jae
hlt
pop
jns
dec
xchg
sub
in
cmpsb
xlat
dec
add
sub
mov
inc
jno
add
les
ret
fsubl
addr16
xlat
push
jns
sbb
xchg
jp
push
xchg
test
push
leave
call
or
push
dec
insb
dec
cmpsl
inc
gs
xchg
rcrb
jae
cli
add
dec
inc
and
out
jmp
xchg
push
test
mov
subl
mov
std
test
cmc
sbb
sub
xchg
divb
call
mov
mov
mov
xor
repz
pop
add
cmp
mov
pop
fs
xor
mov
cmpb
aas
in
fdivs
or
lret
je
repz
bound
xor
call
sbb
fdiv
inc
mov
jnp
inc
ljmp
inc
roll
pop
pop
int
sar
cmpsl
mov
adc
inc
inc
mov
xor
jno
test
push
mov
inc
cmpsl
shlb
jns
pop
int
sub
push
loopne
in
xor
jle
cmp
lret
jg
into
dec
sahf
rcrb
rclb
dec
movhlps
aad
addb
ds
data16
mov
in
les
rcl
gs
in
stos
pop
out
repz
and
stos
sub
jmp
fcmovnb
cmp
jnp
icebp
jb
cmp
pop
mulb
mov
add
call
lahf
or
repz
icebp
aam
testl
inc
mov
into
add
daa
pushf
sbb
insb
arpl
lahf
repnz
shll
mov
mov
arpl
push
pcmpgtd
pop
pop
inc
in
sbb
and
psllq
lret
lea
push
rolb
adc
int
rcll
inc
jne
pop
xor
fwait
lret
popa
aaa
jae
scas
mov
stos
push
ds
sub
xor
movsb
mov
jp
lcall
leave
jl
xchg
push
add
jge
mov
shrb
aaa
cmc
jg
or
xor
iret
cmp
inc
sbb
sbb
xchg
rcrb
outsb
xor
in
sbbl
clc
pop
movsb
adc
jnp
outsl
or
mov
addr16
dec
add
push
out
dec
pop
fsts
lods
ret
in
in
in
inc
inc
jmp
and
push
addr16
push
nop
xchg
loope,pn
push
cmp
insl
lds
cmpsb
mov
xlat
test
push
cmc
dec
xchg
repnz
push
push
enter
icebp
bound
dec
xchg
in
pop
js
push
push
xor
pop
push
cmp
cmp
mov
mov
fdivl
bndldx
fstl
or
mov
adc
cmp
into
mov
push
scas
xor
andl
pop
in
mov
lret
mov
loopne
or
and
sarb
lock
sub
sahf
jg
mov
and
in
sub
iret
inc
pop
std
cmp
jae
sbb
and
push
push
sub
pop
stc
adc
jmp
insb
hlt
rolb
sbb
xor
das
ja
nop
addr16
cs
and
fists
and
pop
inc
adc
orb
les
loope
cmp
xor
mov
jle
loopne
push
lock
outsl
pop
push
add
xchg
fists
jae
aaa
jbe
pop
rolb
push
xor
mov
in
xchg
stos
or
test
jl
aaa
mov
cmpb
sub
into
ljmp
ja
cmp
lock
add
fwait
sti
int3
pop
push
ret
cmp
jle
xchg
xlat
js
lahf
lds
or
xchg
mov
rcl
and
mov
mov
shlb
fs
mov
aam
jne
flds
mov
jae
loope
dec
mov
push
or
stos
in
sbb
in
addr16
push
inc
pop
mov
push
pop
dec
in
pushf
jno
dec
je
cmp
cwtl
sbb
mov
cmp
inc
shll
jmp
dec
push
hlt
out
fsubs
lock
pop
rorl
lock
sbb
and
jae
or
mov
push
fisubs
test
scas
icebp
dec
cmp
pop
add
lret
ret
popa
jmp
sub
pop
cmc
sbb
jl
stos
sbb
push
push
mov
push
stos
stos
mov
call
sub
shl
push
stos
lahf
push
mov
lock
cld
jmp
div
and
inc
jp
aam
fs
push
add
mov
mov
lods
les
loopne
push
jo
ss
sub
rclb
aaa
adc
or
fstps
insl
push
push
das
divl
pop
or
adc
pop
jo
sbb
jge
push
xchg
cmc
cli
mov
push
je
rorl
fildll
fsubrl
iret
insb
push
push
jle
lods
sarb
mov
fsts
push
imul
scas
mov
jo
or
mov
lahf
cmp
out
pushf
xchg
sbb
sub
int3
fucom
rorb
loopne
jecxz
mov
mov
jae
push
mov
leave
sbb
pushf
pop
push
sti
ss
mov
movsl
sbb
dec
dec
add
inc
xchg
ljmp
mov
pop
out
sub
mov
data16
inc
xor
mull
cmc
jl
lods
mov
inc
add
sti
and
imul
bound
mov
push
jb
subl
lahf
jmp
sbb
mov
mov
filds
xchg
imul
fs
jnp
sbb
popa
mov
inc
addl
lret
add
dec
rcr
sbb
in
rclb
ds
dec
mov
rorl
jnp
sar
ss
lcall
out
sti
pop
enter
add
mov
aas
into
adc
rorl
push
hlt
xor
mulb
neg
inc
rorb
dec
clc
mov
lret
out
sub
or
outsb
js
xchg
lcall
xchg
lods
xor
fimull
and
push
mov
and
sbbb
xchg
ret
enter
in
push
stc
insb
pop
pop
ljmp
cs
les
jae
jns
jae
sbb
adc
and
daa
sbbb
in
int
cmpsl
fs
repz
adc
cmovl
xchg
mov
pop
jle
sub
lea
stos
lea
je
add
movsb
mov
test
xor
mov
vpunpckhqdq
sbb
sarb
std
data16
movsl
into
inc
mov
or
insb
cmp
fcmovne
bound
mov
in
and
rsm
aas
enterw
lcall
out
and
scas
data16
dec
js
addr16
or
xor
cmp
lods
dec
xlat
movb
inc
mov
shlb
mov
daa
je
jl
xchg
mov
mov
cmp
dec
or
sub
in
sbb
cmp
jne
jae
sub
imull
inc
out
push
ret
leave
push
mov
loop
xor
mov
pop
out
pop
sti
scas
cli
pop
lock
rcr
dec
push
or
aas
adc
test
lcall
aas
sbb
pop
mov
cwtl
dec
inc
fmull
rolb
das
loopne
bnd
add
mov
or
das
aam
sub
xchg
xor
les
mov
mov
jecxz
add
lds
es
shl
das
push
fsub
adc
cmp
sub
and
xlat
and
pop
in
mov
fnstcw
mov
xchg
mov
push
cld
cmc
out
mov
mov
gs
das
jb
dec
or
jb
jmp
mov
sbb
xor
fistpl
pusha
mov
cmp
mov
mov
and
cli
add
mov
out
jmp
mov
pop
int
jmp
test
jae
ss
lret
dec
dec
jae
sbbb
inc
xchg
mov
out
pop
icebp
cli
jae
bnd
inc
outsb
and
xchg
sub
inc
jmp
shll
sub
add
popa
mov
pop
inc
mov
test
inc
and
mov
mov
pop
lahf
pop
lock
cvtdq2ps
popa
and
jae
mov
jle
mov
xchg
inc
ljmp
popf
mov
add
iret
push
dec
sbb
enter
jle
jle
dec
pop
and
pop
jge
divb
jnp
inc
arpl
maskmovq
mull
sbb
mov
loope
xchg
fisttpl
fbstp
push
icebp
dec
andl
sub
add
fwait
test
jo
icebp
jl
push
cmp
mov
in
mov
push
adc
and
pop
jle
movsl
aam
jo
mov
fimull
mov
das
pop
rcrl
dec
add
data16
jl
push
aad
bound
insb
xchg
insb
imulb
out
jbe
xchg
ror
rclb
in
inc
cs
jae
mov
jns
cmp
inc
mov
and
cmpsl
das
jbe
pop
std
sub
or
xchg
jns
les
xor
cmp
movsl
pop
mov
push
inc
data16
aaa
cmp
mov
push
fdivrl
jmp
jecxz
leave
aas
mov
jl
subb
arpl
sbb
push
rorl
pop
aad
dec
roll
mov
je
xor
sub
xchg
into
subl
insb
mov
push
push
adc
into
outsb
sti
xchg
int
jg
mov
scas
dec
int3
xor
xchg
cmp
test
jno
pop
mov
adc
and
add
inc
lret
incb
add
pop
cmpsl
xchg
xor
fmull
stos
pop
rcl
mov
and
inc
jnp
addr16
cmp
sbb
and
add
das
fimull
aam
mov
pop
gs
jmp
fsub
imul
or
sbb
fisubs
sbb
shrb
pusha
fisttpl
repnz
mov
mov
aas
xchg
xor
mov
icebp
fcmovbe
push
leave
cmpsl
int3
jmp
sub
cs
adc
rcrb
data16
rcrb
jg
pop
xor
or
mov
jle
mov
scas
xchg
inc
movsl
mov
das
or
pushl
dec
add
popf
aam
int
ds
mov
push
xchg
xor
ret
cld
fs
jne
cmpsb
cltd
inc
popa
jp
push
insb
lret
mov
loopne
cmp
in
inc
lcall
mov
inc
scas
mov
dec
mov
jb
lcall
pop
sub
sub
inc
pop
mov
js
inc
cmp
cmpsl
pop
cmp
mov
sbb
and
out
mov
leave
andl
dec
mov
addr16
mov
mov
out
ja
popa
add
arpl
pop
cwtl
mov
lret
cld
adc
cld
push
daa
in
push
outsl
adc
jbe
shll
test
mov
dec
dec
adc
jns
adc
jecxz
add
xor
pushf
enter
fdivr
pop
cltd
xchg
xor
movsl
stos
inc
add
push
clc
cmp
dec
mov
push
jecxz
mov
cmp
cld
xlat
pusha
loopne
or
or
test
xlat
js
aas
sbb
cmp
push
fs
popf
xchg
sub
mov
mov
adc
mov
xchg
push
xor
push
inc
mov
cwtl
mov
push
out
sub
jp
mov
cmp
pop
adc
sub
mov
pusha
xor
aam
mov
lret
mov
inc
or
xchg
xchg
imul
mov
lock
fildll
std
push
push
imul
pop
adc
xor
xadd
jne
push
sub
mov
inc
mov
in
fldl
lods
mov
xor
xor
add
jb
push
and
dec
cmpxchg
xchg
xchg
je
sbb
lds
ret
xor
dec
ficompl
inc
je
inc
mov
lds
push
push
in
mov
movsl
xor
and
fsts
mov
dec
jp
inc
xchg
add
adc
in
or
ret
notl
push
inc
xor
cmpb
inc
push
mov
sbb
fsubrl
push
adc
mov
vphadduwq
xchg
and
mov
jl
fsubrs
lea
push
xorl
das
sub
xchg
pushl
and
xor
stc
setp
xor
popa
ds
mov
mov
int
sub
xchg
add
insb
and
xlat
dec
call
jmp
mov
stc
jmp
xchg
add
fcmovne
lock
dec
and
jno
jo
in
add
hlt
push
fists
jmp
inc
add
shl
loope
mov
adc
gs
add
jb
testb
or
mov
rclb
jo
dec
cmpsb
xor
into
shl
pop
loope
cltd
add
fcmovnb
ficoml
sbb
mov
imul
jg
inc
leave
test
xor
push
inc
lods
mov
and
jl
add
in
stos
fidivrl
adc
sub
test
inc
cwtl
in
ret
inc
xor
int
mov
shl
enter
js
inc
insl
cs
xor
stos
or
aad
sub
mov
dec
ja
xchg
jbe
mov
icebp
push
loopne
mov
cmp
sub
pop
xor
sbb
fdivl
jecxz
jecxz
movsl
push
mov
lret
fs
cmp
test
add
adc
test
movsl
jb
pop
imul
inc
sbb
push
jmp
jno,pt
fwait
aaa
jb
test
xchg
inc
xor
cmp
jp
cmp
roll
and
dec
fisttps
std
in
cmp
xor
dec
cs
add
jle
cwtl
test
es
test
sub
jge
imul
sub
leave
xchg
push
push
cmp
push
and
fmuls
and
inc
mov
dec
sbb
jns
sahf
xchg
cmpsb
in
repnz
test
pop
lods
push
pushf
aad
out
outsl
ficoms
jecxz
jo
push
sub
hlt
jae
repz
push
shlb
test
leave
dec
and
or
or
and
test
push
push
xor
or
fs
hlt
push
ds
call
aam
lods
cwtl
and
mov
jl
cld
xchg
inc
popa
sub
sbb
dec
mov
stos
jae
es
ds
lahf
jmp
mov
xchg
jmp
jmp
push
enter
mov
cmp
lret
jb
sub
sbbl
adcb
fldenv
cwtl
inc
push
scas
add
outsb
and
mov
xor
out
jg
je
std
push
dec
addl
mov
popf
xchg
jle
inc
test
ja
cmp
sahf
jns
pop
mov
std
mov
test
adc
xchg
sub
loope
fwait
mov
sbb
jnp
push
pop
jbe
sub
sbb
adc
sti
lea
stc
cmc
lret
mov
mov
bound
inc
push
dec
mov
std
cmp
push
mov
fldl
inc
fxch
scas
clc
xor
jns
out
test
lds
lcall
jo
and
pop
or
cs
in
ds
mov
push
fdivrl
jbe
cmp
pop
push
loop
lds
int3
push
pop
pop
pop
das
xor
je
inc
sarb
mov
and
xor
call
sub
mov
jne
xchg
rcrb
sti
into
mov
rcr
inc
out
mov
lods
push
rorb
fisubl
adc
mov
sub
lcall
and
outsb
les
fsubl
adc
jb
or
jp
jecxz
ljmp
sbbb
add
aaa
mov
jo
es
loope
and
sub
jb
jmp
xor
fistps
push
add
pop
sbb
mov
push
pop
cmc
fcoms
push
xor
inc
stos
ss
test
jbe
int3
xchg
movsl
xor
outsl
push
loope
jecxz,pt
out
mov
adc
mov
jo
rcr
insl
cmp
test
and
out
mov
fwait
cmp
testb
es
out
fnstcw
popa
jmp
daa
push
and
es
roll
ljmp
enter
cld
mov
add
test
push
out
xchg
jno
push
mov
fidivs
mov
or
sbbl
xor
mov
jge
jl
nop
arpl
dec
xchg
push
and
mov
fnstcw
ljmp
push
xchg
sub
cltd
jecxz
mov
lret
inc
pop
xor
insb
cmpsb
fcmovu
subb
mov
fmulp
xor
in
xor
cmp
and
mov
adc
jle
sbb
shrl
mov
mov
sbb
mov
jo
jb
pop
aam
pop
mov
addr16
iret
gs
mov
dec
xchg
xor
cltd
pop
shl
stc
sub
mov
add
cltd
popa
xchg
push
sbb
or
add
sbb
into
jl
in
loopne
and
sub
fildl
adc
push
xchg
addl
pop
inc
sti
cwtl
and
sti
jae
and
sub
cli
adc
int
into
dec
iret
ljmp
sub
notb
insl
cmp
in
sar
sub
in
mov
ljmp
das
sahf
and
push
xlat
fcompp
push
ja
xchg
pop
stc
mov
mov
loopne
sub
mov
xchg
aam
or
add
pop
sub
add
insl
ret
jecxz
xchg
adc
sbb
icebp
dec
enter
nop
cld
das
and
or
std
sub
icebp
sbb
push
xor
das
jp
loopne
or
pushf
movsb
sahf
das
in
pop
jno
mov
dec
dec
pop
lcall
mov
mov
ja
or
lea
or
fidivl
add
push
into
jmp
cmc
push
outsl
xchg
div
xor
mov
jno
mov
mov
loopne
xchg
mov
xchg
js
lret
mov
add
aad
shlb
imul
jg
ja
cld
xor
push
sahf
popf
push
fnstcw
dec
rcll
hlt
or
and
lods
mov
insb
dec
jae
fwait
xchg
imul
xchg
insb
sub
orb
cmpsb
mov
jo
jmp
push
out
push
lahf
mov
adc
rcl
les
inc
std
outsl
cmc
rcr
sbb
mov
xor
jp
mov
movsl
fildll
roll
cmp
jns
mov
mov
in
repnz
lods
pop
je
and
stc
pop
push
aas
sbb
push
dec
jns
ja
sub
mov
jle
mov
fs
lret
xlat
mov
pop
imul
mov
xchg
rclb
cmpsl
sub
jecxz
loop
lods
mov
mov
lods
and
mov
push
shrb
cmp
popa
inc
hlt
pop
cltd
and
cmp
pop
movsb
adc
decl
pop
push
in
mov
rorb
dec
or
cltd
lahf
xchg
and
inc
jb
dec
xchg
stos
jnp
into
into
sbb
xchg
xchg
scas
xchg
dec
dec
lds
push
add
mov
jmp
movsl
xchg
push
push
aam
lods
scas
and
cld
dec
cmpsl
xchg
adcb
dec
int
sub
rcr
mov
movsl
push
add
cmp
fisttpll
insb
xlat
jl
mov
mov
adc
cmpl
insl
icebp
and
inc
stos
cmp
or
loopne
and
es
jno
arpl
addr16
inc
call
inc
pusha
arpl
cmpsl
mov
mov
sub
xchg
stos
or
nop
insb
int3
sahf
and
outsl
or
push
mov
push
in
aad
jl
add
pop
or
jno
ja
leave
sbb
mov
fadds
mov
les
xchg
jae
fs
xchg
mov
jge
test
aas
mov
imul
lock
rorb
lock
aaa
test
jns
and
inc
aas
rcl
mov
je
sbb
loopne
mov
popa
cmpsb
leave
jge
push
push
stc
lock
and
mov
cmp
mov
fmull
and
jb
popa
sub
pop
cmc
cmp
out
arpl
bound
xchg
hlt
jae
inc
and
sar
lret
das
or
push
shrl
imull
lods
mov
test
dec
ljmp
jmp
stc
sbb
pop
addr16
push
repnz
repnz
mov
pop
sahf
aaa
jne
cmp
jbe
adc
mov
cmc
mov
out
ja
mov
sbb
jmp
das
cmp
pusha
mov
roll
mov
jp
mov
out
mov
dec
out
pop
xor
mov
sti
movsb
xor
fwait
push
or
fwait
add
cmc
pop
es
leave
sub
push
and
aas
lret
lods
mov
mov
xor
mov
push
cmp
hlt
aas
pop
into
movsl
mov
add
imul
aad
imul
test
and
in
mulb
sbb
stc
push
in
dec
sbbl
adc
fdivrl
add
or
pop
mov
sub
push
ds
inc
idiv
sbb
push
or
push
out
push
notb
shll
xchg
rcll
cmp
pop
push
jo
push
xchg
jo
aaa
jno
and
aas
nop
sahf
or
mov
mov
shrb
pop
jns
insl
flds
mulb
sub
js
mov
insb
jp
popf
mov
xor
mov
push
adcl
out
inc
fs
fwait
fwait
aam
popf
fs
or
mov
lds
int3
or
sti
hlt
adc
add
push
daa
xor
inc
xor
lahf
andb
pop
repnz
sub
add
nop
out
adc
test
stos
cld
fwait
xchg
shrb
in
out
pop
cld
enter
inc
mov
pop
or
sub
scas
js
test
push
insb
fists
jne
push
xorb
test
xor
imul
out
imul
mov
fcmovb
loopne
xchg
test
fimuls
sub
push
ret
pop
fwait
mov
mov
adc
xchg
rcrb
outsl
lret
lods
xchg
aad
fcompl
mov
ficompl
mov
mull
pop
test
movsl
push
cmpsb
or
inc
sbb
das
inc
inc
add
adc
mov
ja
xchg
or
xchg
mov
sbb
inc
sub
movsl
hlt
xchg
sti
adc
addr16
xchg
jecxz
add
push
mov
ret
cmp
sbb
int
push
lea
jecxz
add
cmp
cwtl
cmc
fmuls
mov
into
out
jecxz
stos
dec
jae
gs
loop
cmc
notb
jl
or
sbb
test
xor
insb
adc
ret
sub
pop
insl
fisttps
jns
add
insl
adc
rcll
lcall
jb
adc
lcall
mov
inc
sub
cltd
push
movsb
cmp
pop
data16
nop
cmp
popa
into
inc
aaa
cmp
out
mov
jp
addr16
dec
jl
xor
std
adc
xchg
cmp
dec
sbb
ret
mov
sub
or
cmp
adc
and
sbb
mov
sbb
lods
or
ljmp
das
cmc
pop
or
push
xor
xchg
sbb
testl
and
mov
sub
mov
scas
inc
xchg
mov
rolb
popa
cld
sti
dec
mov
mov
or
mov
add
pop
js
out
pop
jo
movsb
lods
sub
adc
fists
aam
mov
jne
out
aaa
adc
adc
fnstcw
pushf
pop
int3
push
xor
push
rcr
and
jmp
repz
sub
mov
sbb
xor
cmpl
dec
add
imul
nop
leave
rorb
mov
hlt
dec
repnz
jle
shrb
imul
adc
pop
mov
adc
pop
cs
xorb
sub
pop
shll
push
adc
sbb
cwtl
out
int3
repnz
jb
adc
js
in
fmuls
inc
out
nop
push
push
hlt
negl
loopne
imul
jecxz
push
xchg
sub
sub
stos
aaa
xchg
into
imul
shrb
xlat
shll
outsl
jne
shll
stos
ret
xchg
or
inc
mov
jae
lea
in
aad
fstps
lahf
xor
test
push
leave
movsl
jge
fucomp
hlt
or
and
sub
int
add
pop
iret
push
xchg
cwtl
xchg
mov
sub
or
or
notb
insl
mov
fisubrs
icebp
fs
dec
sbb
jl
xor
jecxz
pop
cmp
push
mov
das
inc
testb
cltd
mov
lret
cmp
dec
xor
pop
xchg
test
cmpsl
pushf
lock
cmp
sbb
dec
loope
stos
cmpsb
or
test
pop
sbb
xor
int3
cmp
sarb
mov
pop
out
sti
rorl
xor
mov
cmp
call
mov
lock
loopne
jb
add
inc
xchg
jns
ja
test
cmp
aas
psubb
sub
cmpb
sbb
xchg
mov
cmp
lea
mov
mov
sbb
or
mov
clc
shll
mov
push
mov
mov
cmc
nop
insb
imul
cwtl
or
adc
fldcw
xchg
loopne
iret
aas
popa
lea
pop
sub
je
xchg
cmpsl
imul
in
cwtl
sbb
sahf
sarl
or
aam
jo
addr16
pop
imul
xchg
fdivrl
jne
movsl
cmp
test
xor
adc
enter
imul
sbb
aam
dec
sahf
iret
jg
enter
xchg
lret
mov
not
pop
stos
inc
daa
into
jae
jnp
fwait
popf
fwait
adc
popa
inc
mov
fs
in
jns
lods
sub
sahf
cmc
mov
popf
adc
jb
sbb
cmpsb
sbb
sbb
xor
fidivrl
push
jne
shlb
insl
cld
out
scas
je
xchg
bound
mov
fldt
xor
fs
adc
hlt
mov
in
leave
xchg
pop
cmpsl
push
jbe
xor
add
push
mov
push
jp
les
imul
pop
popf
xor
ret
xlat
leave
lahf
jo
outsb
cld
cli
sub
das
lahf
xchg
inc
hlt
xor
in
add
push
jmp
dec
stos
adcl
orb
divb
loope
inc
and
mov
pop
ja
add
mov
imul
inc
neg
mov
pushf
stc
mov
in
mov
mov
je
aam
call
mov
inc
inc
mov
orl
dec
into
loopne
int
imul
fsubrl
jbe
enter
mov
or
js
in
int
sarb
mov
mov
lods
jns
add
sbb
sbb
ds
insl
pop
xor
jno
ljmp
add
je
in
movsb
xor
pop
mov
lret
cmp
xor
xchg
fmuls
loopne
dec
adc
and
xchg
xchg
repz
clc
xor
cmp
fcomp
cmp
or
pop
shlb
and
xchg
mov
icebp
sub
mov
popa
test
cmpb
cmp
mov
sub
pop
imull
push
imul
and
decl
sahf
mov
cmovbe
jmp
cmp
dec
sbb
jb
out
cmp
xchg
ja
lret
cs
mov
fdivrl
aas
xchg
ljmp
mov
jb
mov
sbb
les
pusha
repz
inc
pop
popf
shll
or
das
lcall
imul
mov
sbbl
add
xchg
pop
cmc
mov
xor
pusha
push
pushf
sbb
mov
inc
lds
rcr
sahf
daa
mov
int3
pop
jmp
mov
mov
call
sbb
popf
sbb
cmp
or
adc
pop
sub
adc
into
dec
stos
xchg
sub
or
pop
scas
adc
inc
mov
jmp
daa
xchg
test
mov
add
cmp
je
test
jmp
fcmove
or
push
mov
out
inc
repz
dec
ss
into
addr16
popf
cld
or
ljmp
push
dec
int3
adc
dec
xchg
push
fiaddl
loopne
sub
repz
add
sbb
pop
adc
mov
loope
inc
repz
je
lea
jl
sub
or
dec
inc
adc
popa
sub
loope
or
push
sbb
in
mov
in
mov
ret
lret
test
icebp
xchg
gs
pop
pop
jb,pt
sbb
add
mov
aad
mov
adc
loopne
xor
jmp
cmpsl
into
mov
dec
shr
insl
loop
into
mov
imul
or
addr16
lods
arpl
push
mov
addb
pop
jb
jbe
mov
out
aad
int
scas
push
dec
pop
sbb
add
mov
sbb
int
sbb
push
jbe
adc
jb
inc
mov
xchg
in
adc
frstor
inc
push
mov
aaa
shrb
cwtl
sbb
imul
sbb
insb
cs
jge
push
movsb
je
out
adc
in
xchg
mov
int3
add
cwtl
push
cmp
xor
icebp
daa
fs
es
inc
xchg
xchg
imul
jns
mov
push
inc
stc
aam
orl
div
fucomi
jge
data16
or
xor
mov
mov
adcl
aam
adc
cmp
outsb
xor
jo
or
and
dec
mov
xorl
or
lret
test
xor
xor
jne
push
cmpsl
stc
leave
repz
cmp
pop
jg
mov
scas
ljmp
lahf
push
sbb
xchg
xchg
inc
inc
dec
jae
adc
push
jg
xchg
xor
arpl
mov
inc
int3
outsl
icebp
cmpsl
add
jp
insb
sbb
out
in
lar
lret
frstor
mov
add
jb
test
push
rorb
sub
and
or
mov
and
ljmp
and
shlb
and
sub
add
jmp
das
mov
addr16
push
and
dec
jge
pop
push
lcall
aas
push
scas
shlb
or
add
test
call
push
and
pop
jbe
inc
push
mov
fildll
xchg
fidivl
loop
popf
mov
imul
jae
gs
fwait
mov
out
push
sub
jle
pop
and
cmp
mov
and
in
cmp
xchg
xor
adc
test
nop
insl
gs
mov
lds
mov
push
outsl
mov
and
xlat
mov
jae
clc
leave
cwtl
xor
mov
xchg
test
sbb
jbe
cltd
out
mov
lret
add
cli
int
cmp
mov
pop
addr16
test
loope
lret
or
aaa
xchg
mov
mov
jl
inc
mov
and
and
imul
fdivrs
rorb
mov
push
push
sub
mov
add
es
push
jnp
pop
cwtl
sbb
cmp
pushf
ja
mov
push
mov
bound
psubw
mov
sbb
xor
loope
pop
loope
mov
pop
inc
inc
test
mov
movsl
jg
int3
lea
in
pop
adcl
xor
clc
or
jp
mov
cmc
pop
xchg
mov
lret
popa
testl
cltd
out
in
dec
hlt
call
ja
xlat
mov
mov
in
cli
insb
or
mov
xor
out
cmp
fstps
sbb
outsl
jae
aaa
idiv
cli
lds
xchg
xchg
push
add
mov
mov
test
mov
mov
ja
ss
fistpll
xor
fmulp
xchg
xchg
add
xor
and
jo
mov
dec
sub
ret
jle
out
inc
or
add
jb
and
inc
stos
sub
jmp
sub
dec
xor
movsl
xor
pop
out
aad
mov
xchg
jecxz
push
sbb
push
js
jg
out
and
data16
cmpsb
dec
lret
stos
ret
xchg
and
jns
jmp
push
mov
xchg
test
movsl
push
mov
inc
dec
dec
and
rolb
add
ljmp
imul
jno
xchg
les
lea
fdivl
sbb
fcmovb
jle
mov
nop
es
mull
push
xchg
sbb
sbb
loope
popl
ja
mov
mov
movsl
dec
mov
or
add
push
hlt
or
ret
mov
hlt
orb
mull
cmp
jo
clc
adc
push
jg
add
stc
add
lea
sbb
fistps
clc
inc
rcll
xchg
mov
xor
fwait
andl
sub
inc
push
dec
add
lret
dec
stc
mov
sarb
ficoms
imul
hlt
sub
ret
es
call
add
jb
lahf
jns
ret
cmp
int3
or
mov
jo
add
cmp
mov
es
xchg
add
or
push
iret
test
xor
inc
mov
adc
jl
in
xchg
inc
push
fdivs
inc
push
xchg
cltd
push
ja
dec
dec
mov
xchg
je
pushf
aas
enter
push
mov
sub
mov
or
xchg
adc
sub
test
movsl
jp
das
imul
leave
sti
in
xchg
popa
stos
or
xor
movsl
fsubl
adc
out
jecxz
ja
pop
fldt
mov
int
popf
pusha
adcl
aad
xlat
mov
and
and
push
bound
jo
hlt
orb
pop
pop
lods
ds
out
sub
sbb
ja
jbe
int3
cli
add
mov
jns
jp
jl
sahf
xchg
test
mov
repnz
or
mov
add
repz
xor
mov
mov
mov
xchg
push
pusha
jle
imul
push
movsl
jg
lret
fwait
jl
movsl
out
pop
dec
scas
pop
icebp
adc
repnz
mov
clc
in
mov
jo
in
inc
jno
xchg
pusha
dec
lret
cli
cltd
mov
imul
pusha
dec
sbb
ror
dec
out
lods
mov
mov
ds
divl
cmpsb
cli
mov
cmpl
add
mov
filds
gs
inc
mov
sub
ret
pusha
xchg
sahf
leave
mov
std
sbb
scas
cmc
mov
lret
lret
mov
roll
xchg
shrb
lcall
mov
in
imul
in
cmpsb
sti
jne
mov
mov
mov
sub
mov
mov
ret
sbb
dec
push
add
pop
jg
pop
jg
stos
xchg
cltd
addr16
cwtl
ja
popf
or
cld
mov
xor
popf
cs
xor
imul
xchg
into
mov
dec
stos
jmp
in
shll
push
add
js
adc
int3
adc
pop
xor
mov
in
dec
push
cld
imul
jp
mov
jecxz
push
into
sti
dec
jmp
sbb
into
jno
fcmovnu
popa
add
xchg
daa
outsl
pop
pop
xchg
dec
jmp
cmp
gs
jns
fucom
lock
mov
out
outsb
mov
xor
pop
pmaxub
bound
cli
fbld
lret
xor
insl
mov
test
jne
mov
pop
mov
rcrl
sbb
push
jle
mov
adc
adcl
inc
fisubs
cmpsl
test
test
jge
jae
daa
mov
arpl
xchg
mov
outsb
scas
mov
mov
mov
and
sbb
icebp
imul
lret
add
adc
jo
outsb
cli
jge
clc
jp
rcll
or
cld
add
cmpsw
inc
push
insl
and
mov
fdivrl
push
aad
xchg
adc
shrb
bound
nop
aas
xchg
jns
in
sub
arpl
jge
scas
out
jge
mov
scas
imull
test
push
jecxz
or
xchg
fs
cltd
shll
out
rorl
mov
loop
mov
mov
pop
push
inc
pop
xor
ljmp
shrb
ss
xor
inc
dec
orb
sub
sub
xchg
stos
test
inc
test
adc
jmp
mov
ja
shlb
inc
mov
je
and
addb
test
into
enter
or
sub
int
jbe
adc
shlb
aam
dec
fwait
mov
cmp
sub
lods
pop
dec
jmp
lock
sbb
mov
mov
pop
test
in
mov
xor
inc
int3
sub
aas
sbb
xor
sbb
inc
repz
and
cld
aam
sbb
nop
test
ss
sub
ds
cmp
popa
popa
sbb
push
cmpsb
sarl
mov
inc
imul
dec
mov
mov
movsl
stos
or
adc
repnz
mov
cmp
cltd
mov
xchg
sbb
sbb
xor
mov
xchg
repnz
and
or
mov
addr16
out
adc
inc
sahf
push
xor
jp
jecxz
xor
sub
insl
add
mov
loopne
je
loop
addl
push
pop
pop
pop
mov
test
push
lea
inc
icebp
sub
or
imul
mov
adc
push
sub
xchg
xchg
push
inc
mov
arpl
icebp
adc
int3
test
shrb
testl
pop
gs
mov
repz
jp
pop
jb
cli
pop
adc
fiaddl
aam
repz
cmp
arpl
sbb
jnp
push
call
outsl
dec
pop
or
add
inc
fldl
enter
mov
push
adc
popa
push
mov
in
shll
xchg
dec
pushf
outsb
loop
repnz
jle
mov
add
gs
xchg
mov
and
mov
cmp
mov
mov
imul
ljmp
ljmp
movsl
mov
daa
push
xchg
std
or
inc
lahf
pop
mov
icebp
movsl
std
pop
pop
jmp
jae
in
test
sbb
xchg
jmp
test
test
xchg
aaa
add
jge
enter
adc
popa
movsb
dec
test
fcoml
fdivrp
dec
lret
pop
pop
jns
sub
movsb
mov
push
push
xor
mov
sub
mov
dec
and
and
inc
sub
dec
pop
jecxz
push
dec
ret
xchg
inc
sub
out
and
clc
jge
inc
test
shr
pop
xchg
mov
cld
xor
xor
and
and
pop
sbb
mov
enter
inc
sar
sbb
aas
jo
clc
int
cmp
cmp
pop
dec
or
stos
stos
xchg
sarl
jnp
shl
sahf
sub
inc
push
push
xchg
push
or
inc
cmpsl
inc
roll
stos
pop
popf
mov
adc
pop
test
fisttps
lret
sahf
mov
lea
cld
adc
stos
jp
dec
imulb
xchg
adc
mov
fnstcw
scas
inc
push
sub
insl
jnp
out
push
sub
xchg
fistpl
dec
mov
imul
xchg
inc
inc
hlt
rolb
lods
mov
mov
xchg
lds
cmpsl
xor
xor
mov
mov
lods
jb
shlb
loope,pt
fiadds
or
xlat
fildl
cltd
mov
and
loop
and
cmpsl
xor
jp
scas
bound
fcompp
cmp
in
sti
sub
inc
pop
sbb
out
sub
fcmovnu
icebp
fisttpll
mov
pop
xchg
mov
pop
aam
mov
sahf
outsl
mov
hlt
mov
inc
jnp
pop
adc
sub
cmp
and
cmp
testl
pop
push
roll
aam
std
or
sub
and
and
das
loope
or
xor
xchg
push
mov
lods
out
mov
lret
js
cmpb
in
xlat
cmp
push
out
in
add
dec
push
inc
pop
aad
testb
hlt
outsl
sub
call
push
fcoms
data16
test
daa
xor
jecxz
push
test
jne
sbb
and
arpl
iret
mov
sbb
inc
fs
notb
cmp
jle
bound
gs
sbb
or
sub
nop
outsl
xor
jbe
in
cmp
dec
loop
mov
dec
mov
dec
ret
aaa
push
lds
mov
jbe
int3
je
pop
push
pop
push
imul
inc
sbb
dec
sbb
pop
sbb
icebp
mov
push
call
push
push
pop
sbb
push
inc
pop
or
pop
mov
xrelease
push
xor
lret
ja
je
add
mov
repnz
call
mov
sti
and
push
imul
push
imul
sub
xor
mov
orb
mov
stos
cmp
decl
mov
fldl
cmp
pop
rorb
xlat
test
rclb
jecxz
int3
sarl
mov
mov
lods
lods
dec
in
es
in
mov
test
or
adc
mov
mov
inc
jp
sub
mov
pop
cmp
mov
cltd
fmul
jle
aaa
clc
out
dec
pop
fnstsw
inc
out
cld
lret
aaa
xor
aam
mov
fsub
dec
fsubr
and
in
xor
rolb
in
jle
xor
xor
add
push
mov
fistl
lods
inc
sbb
add
cmp
js
inc
sbb
jg
out
and
xchg
imul
cmc
xor
stc
test
mov
and
xor
loopne
pop
cmpsl
data16
fs
aas
mov
fdivp
cmpsb
clc
fists
pop
in
aam
dec
cld
mov
imul
push
adc
push
mov
xchg
mov
dec
lock
xchg
insl
and
sbb
mov
cwtl
mov
repz
mov
or
clc
aad
inc
cmpsb
mov
mov
adc
in
pop
adc
cmp
dec
mov
xchg
imul
push
inc
out
lock
or
add
in
mov
out
lret
mov
cmp
out
ljmp
jmp
sub
mov
sub
xor
int
mov
mov
inc
push
sbb
fstps
sub
sub
sbb
decb
fiaddl
jne
dec
pop
push
loopne
or
std
stos
mov
clc
hlt
push
mov
jmp
xor
into
push
pushf
or
mov
and
inc
in
and
inc
sbb
shlb
lea
sbb
xchg
ret
mov
gs
lods
outsl
dec
lahf
hlt
or
ret
loope
lods
sub
push
dec
dec
addl
xchg
add
test
and
mov
daa
shll
inc
inc
or
sbb
pop
popf
adc
push
sbb
adc
loop
pushf
push
xlat
insb
mov
pop
push
mov
scas
or
loopne
or
dec
lret
jno
outsl
xchg
mov
fildl
lods
test
sbb
jge
imul
sbb
jge
lods
and
mov
xor
ss
fs
xor
fsubrs
dec
pop
pop
ret
pop
pop
sub
fs
cmpsl
orb
jg
cmpsl
mov
mov
aas
cmp
bound
mov
xlat
setp
pop
mov
icebp
jp
jge
rcr
mov
nop
adc
int3
sti
push
sahf
and
xchg
ret
fs
imul
pop
mov
sub
xor
push
sarb
adc
mov
sarl
pop
jb
imul
cmp
cmp
or
dec
lret
dec
fadds
push
mov
pop
cmp
aam
movsb
test
cmc
sbb
std
mov
pop
pop
loopne
iret
inc
inc
pop
fistl
bound
bound
testl
cmp
mov
lea
push
fcompl
adc
add
in
mov
cmp
sbb
jno
frstor
jae
pushf
inc
sbb
adc
nop
mov
push
cmpsb
and
imul
aam
std
pop
xor
push
insb
cld
fnstcw
movsl
xchg
pop
xor
ret
std
cli
lock
test
push
xor
dec
cmpsl
and
mov
lods
outsl
pop
stos
jp
jmp
test
or
fidivl
lods
test
scas
push
cltd
fisubrl
xchg
dec
shr
shlb
pusha
sub
sub
in
sub
cmp
lret
sbb
xchg
aad
je
in
cli
or
inc
adc
sbb
push
pop
xor
movsl
inc
or
hlt
dec
add
add
adc
xor
mov
push
jns
jl
pop
add
les
int3
movsl
add
in
push
test
and
xor
sbb
sbb
add
adc
add
pop
mov
inc
mov
ret
shl
cs
jecxz
adc
push
insb
add
rcrb
into
cmp
aam
mov
mov
dec
pop
clc
rcl
repnz
and
in
enter
push
jl
push
cmp
dec
sub
add
and
hlt
mov
mov
std
mov
mov
pop
jle
in
shll
push
lret
xchg
jno
add
xchg
lret
add
or
mov
sub
std
xor
loope
vfrczps
pushf
mov
rorb
test
xor
mov
cmpsl
jae
std
in
and
inc
mov
add
repz
or
push
push
lcall
mov
and
ss
jne
inc
adc
ds
or
gs
add
cs
push
xor
xor
inc
scas
arpl
jmp
pusha
mov
cmpsl
lret
aad
pop
adc
dec
jo
adc
fdivl
ret
push
mov
loop
arpl
lret
repnz
cmp
push
mov
mov
sub
mov
mov
and
mov
call
aam
dec
subl
inc
cmpsl
rcrl
pop
inc
xor
cmp
xchg
inc
lahf
cli
add
push
testl
das
adc
xchg
inc
push
dec
lock
es
mov
pop
in
out
xchg
push
mov
mov
sbb
adc
ficomps
cmc
mov
add
xchg
mov
lds
cmp
out
mov
dec
pop
jbe
or
std
push
pop
xlat
push
movsl
push
dec
ds
pop
inc
scas
sti
repnz
dec
nop
lret
sbb
divb
push
test
int
stos
push
and
iret
sbb
jge
leave
lret
cltd
fisttpll
pop
scas
sub
mov
lods
fwait
pop
fidivrl
orb
setae
mov
push
xor
mov
ffree
test
mov
add
daa
inc
xor
std
xchg
jnp
and
inc
jmp
loope
dec
xchg
sub
mov
push
ljmp
mov
stos
jns
dec
rcr
adc
add
and
roll
enter
sarl
xlat
mov
sti
inc
in
mov
lods
push
insl
jae
scas
stc
lods
pusha
adc
test
sub
sbb
jno
push
mov
add
jmp
mov
js
je
add
mov
std
add
stos
adc
repz
sbb
mov
pop
gs
aas
inc
jle
xorb
loopne
xchg
insb
adc
jbe
ret
jb
inc
cld
cmc
movsb
adc
jae
xchg
enter
mov
stc
fiaddl
out
nop
neg
xor
mov
mov
lret
stos
lds
data16
adc
lock
xchg
jmp
sub
loopne
lds
gs
dec
xchg
arpl
push
or
push
jbe
mov
and
cmp
pusha
add
mov
lods
or
ret
dec
out
repnz
mov
imul
dec
sbb
pop
leave
outsb
iret
sbb
inc
jmp
pop
and
inc
out
pop
or
dec
repnz
mov
movsl
jmp
js
inc
test
sbb
in
popa
lcall
mov
pop
mov
sub
mov
or
stos
ds
jl
sbb
fnstenv
fcmovnu
inc
stc
sub
xchg
subl
cmc
push
jns
push
xchg
jne
cmp
in
pop
dec
icebp
cmp
ss
in
sarl
std
stc
xchg
xor
dec
lods
adc
insb
and
movsb
dec
test
and
fwait
stc
xor
stc
test
or
jns
rcrl
iret
std
xor
xchg
arpl
loop
das
pop
sbb
mov
mov
mov
stos
ja
shl
pop
lahf
inc
arpl
dec
ja
shrb
insb
dec
mov
lods
enter
mov
adc
sbb
shll
mov
sbb
sub
cld
xor
pop
outsl
sbb
jmp
movsl
push
ja
xlat
dec
ja
and
ret
push
shr
and
cwtl
outsb
vandnpd
sti
ja
shll
dec
adc
cmp
xchg
out
dec
sub
fsubrl
adc
xchg
sbbb
jmp
andb
icebp
inc
cmp
xchg
dec
loop
inc
sti
push
and
addr16
scas
subb
push
push
inc
xchg
mov
stos
loop
les
fildll
cmp
imul
pop
pop
cltd
lock
imul
loope
cmc
push
xchg
out
mov
cltd
pushf
mov
int3
std
xchg
push
xchg
or
hlt
je
fsubs
ds
cmpsl
shl
jo
std
and
inc
xor
les
lret
lods
pop
xchg
mov
pop
xchg
es
sub
push
jl
popf
inc
xor
ret
push
xor
loopne
mov
xchg
mov
inc
outsb
sub
adc
push
pusha
dec
in
adc
mov
inc
pop
rolb
or
dec
das
shrl
cli
rorb
rcrb
mov
pop
xor
pop
dec
pop
push
mov
inc
or
sbb
rolb
loop
filds
sti
scas
pop
out
pop
sub
pop
outsb
mull
and
sub
loopne
and
mov
scas
imul
or
mov
imul
add
scas
dec
mov
popf
jo
in
orb
mov
out
jmp
test
stc
repnz
or
lods
cwtl
stos
push
mov
cltd
lret
cs
jnp
pop
out
mov
push
cmpsl
mov
mov
mov
lret
popf
roll
imul
mov
aam
pop
cmc
sar
test
jo
iret
repnz
cmp
stc
push
jle
mov
mov
mov
sub
jp
sub
push
out
cmp
out
in
xor
cmp
das
test
xchg
clc
jmp
ret
std
subl
je
mov
mov
jbe
sbb
jne
hlt
out
lods
jo
fdivr
rcll
lds
arpl
mov
ret
pop
mov
mov
lock
sbb
mov
push
inc
or
daa
mov
and
rcrb
mov
rol
repz
fstps
mov
decl
mov
mov
pop
add
and
ror
or
mov
test
xchg
mov
movsl
pop
int
xchg
imul
push
jmp
std
jne
lods
lret
in
lcall
dec
call
lss
push
call
mul
mov
jno
mov
fldenv
jbe,pn
mov
and
in
ja
push
jmp
sub
ljmp
mov
data16
sub
insl
xchg
pcmpgtb
mov
inc
inc
mov
das
mov
or
enter
xchg
fmull
iret
pusha
dec
mov
jl
pop
lret
or
out
in
pop
pmaxub
cmpsb
push
bound
cltd
fs
stc
int3
inc
aam
inc
mov
addr16
pop
cmpsl
add
pop
mov
inc
cltd
xor
aam
jg
jo
jp
arpl
sahf
insb
lods
popa
shll
mov
out
loope
frstor
fnsave
test
and
mov
add
jecxz
pop
int
xlat
dec
loope
xlat
cmp
push
test
adc
or
roll
cmpsl
xchg
xor
outsb
sarb
xor
fwait
add
aad
lahf
repz
xlat
dec
divl
push
dec
clc
sub
jns
lret
imull
xor
add
mov
in
and
fs
outsl
push
data16
xchg
dec
mov
jne,pt
testl
mov
lds
cmp
in
movsb
push
shlb
arpl
movsb
ror
jl
add
mov
movsb
sbb
pop
adc
das
in
lret
pop
loop
scas
lock
xlat
xchg
sub
subb
fwait
jns
pop
cmp
jmp
insl
inc
mov
faddl
outsb
and
ret
bound
fsts
mov
xor
out
mov
pushf
cwtl
jmp
fdivp
xchg
mov
mov
lcall
xchg
add
cmpsb
mov
sbb
jmp
inc
mov
dec
inc
and
add
aad
add
std
jb
aad
jge
es
mov
push
ss
mov
inc
mov
cmp
cmp
scas
xor
cmp
dec
jle
add
mov
xchg
pop
fwait
jecxz
int3
pusha
mov
mov
lods
cmp
gs
sbb
imul
cmp
dec
jl
dec
fsub
mov
decl
scas
mov
addr16
or
push
cmp
dec
inc
push
xchg
cmpl
dec
adc
insl
cmp
stos
xlat
or
loope
sub
call
es
sbb
insl
push
sbb
insb
cmpsl
testb
pushf
jmp
push
xor
mov
cltd
les
cwtl
roll
pushf
pushl
es
and
push
sub
flds
jl
or
fsts
outsl
jbe
mov
sbb
pop
das
movsl
or
sub
movsl
lock
dec
add
pop
rorl
jmp
test
and
adc
cld
cmp
icebp
iret
sub
fcomp
into
mov
jmp
mov
sub
pop
push
mov
imul
jmp
shr
and
xchg
dec
addr16
ljmp
dec
mov
cmpsb
push
mov
mov
mov
mov
mov
enter
ja
pop
in
jbe
test
jns
out
les
push
xchg
jmp
cwtl
sbb
in
ljmp
loop
rolb
push
jge,pn
cli
inc
stos
dec
hlt
mov
or
stos
ds
imul
push
cld
cli
fwait
adc
xor
lret
mov
sbb
adc
dec
mov
mov
movsl
nop
mov
fs
stos
push
test
mov
or
lcall
push
outsb
fs
or
pop
sti
jb
sbb
ficoms
cld
fimull
fdivrs
jno
and
xchg
xchg
push
adc
jbe
add
gs
and
adc
js
jl
inc
jbe
inc
jp
repz
sbb
addb
mov
dec
pushf
push
xchg
mov
sbb
das
or
xor
mov
adc
mov
andb
test
push
push
jne
mov
push
sbb
adc
pushf
aam
xor
pop
jmp
aam
mov
insb
mul
arpl
shl
lock
adc
bound
or
cmp
stc
pop
and
int3
incl
pop
fbld
inc
mov
sub
sub
icebp
jmp
pop
outsl
jb
data16
and
jbe
cmp
cmp
js
xor
lds
pop
out
stos
sub
outsb
fwait
test
cmp
inc
jmp
adc
mov
call
cmp
xchg
xchg
dec
and
mov
gs
mov
or
ret
pop
push
lret
cmc
loop
jns
jg
push
xor
sahf
and
stc
inc
lods
std
cmp
add
and
flds
or
scas
loopne
push
int
xchg
adc
mov
testl
in
or
mov
pop
sti
inc
insb
add
test
movsb
adc
mov
and
add
enter
jg,pn
cmp
stos
lock
insb
inc
mov
lods
pop
push
jb
sbb
lret
push
mov
push
jno
rclb
scas
inc
movsb
arpl
test
pop
aas
test
and
movsb
cmp
icebp
cmp
subb
adc
xor
jne
and
mov
jne
aam
inc
mov
gs
lcall
lret
outsl
xor
push
int
push
cmp
stos
sbb
fnstsw
dec
push
repz
xor
sub
mov
stc
push
add
das
xor
std
imul
sbb
call
pop
push
dec
fsubrs
and
ret
test
xchg
mov
xchg
sub
jg
add
bound
decl
jbe
xchg
je
cmp
or
lcall
jae
mov
call
fcomp
and
lcall
xchg
mov
rcll
adc
sbb
sarb
orb
add
pop
js
adc
scas
ss
dec
icebp
inc
add
mov
adc
je
je
mov
das
push
bound
mov
xor
scas
jns
sub
int3
add
xor
lods
sub
shlb
xchg
inc
sub
and
mov
faddp
nop
xor
jg
pop
std
and
xor
mov
xor
es
pop
fnstenv
dec
sar
xchg
div
dec
imul
fs
shrl
imul
push
test
push
xchg
mov
in
lods
daa
movnti
push
jb
push
push
sbb
insl
fmuls
sub
iret
inc
enter
sbb
cmp
decl
cli
in
dec
xor
aam
inc
cmp
int
filds
das
xchg
inc
mov
test
jp
dec
add
mov
scas
mov
mov
adc
mov
mov
scas
xor
pop
sahf
fs
mov
notl
bnd
inc
mov
pop
mov
stos
mov
rcl
add
adc
and
pop
cwtl
mov
adc
testb
mov
jb
xchg
sub
xchg
xchg
add
sbb
pop
sub
js
sti
pushf
jns
bound
mov
repnz
imul
adc
lea
jno
xor
les
cmp
repnz
cwtl
dec
js
cmc
inc
std
mov
outsl
or
in
std
push
fisubrl
in
mov
or
push
daa
fnstsw
test
movsb
inc
sub
movsb
push
mov
mov
xchg
and
sbb
outsl
inc
cmp
dec
fdivl
xchg
xor
testl
imul
stos
andb
std
mov
inc
xchg
cmpsl
lret
mov
popa
or
cmp
or
and
jecxz
sub
int3
sbb
xchg
jmp
ds
stos
xorl
add
test
push
xchg
mov
push
or
insw
ret
dec
push
aam
xor
ja
es
lea
sub
or
xor
lcall
bound
xchg
cmp
adc
xchg
cli
jmp
mov
jb
cmpsb
adc
rcrl
add
imul
test
cli
cmp
dec
fcmovnb
ja
push
in
xchg
mov
scas
and
loop
movsl
xchg
inc
aam
push
outsl
adc
cld
jbe
cmpsb
pop
rcrb
or
and
or
or
adc
sahf
sahf
pop
xchg
pop
jl
popa
sub
daa
mov
repz
idivl
leave
pop
push
sub
mov
or
sub
clc
aas
and
push
mov
out
inc
mov
adc
mov
jnp
cmp
cmp
aas
in
mov
pop
push
cld
mov
and
and
mov
dec
or
jge
faddl
mov
movsl
iret
inc
dec
aam
jl
mov
iret
leave
push
dec
push
or
add
stc
pop
out
cmp
mov
enter
and
pusha
loope
mov
mov
sbb
mov
addr16
push
pop
fs
sub
mov
in
arpl
fnstcw
sub
mov
leave
push
in
repnz
or
inc
insb
fs
xchg
add
mov
lret
fsubrl
add
jno
mov
daa
iret
insb
test
and
popa
or
out
mov
enter
xchg
addb
hlt
insb
mov
pusha
xor
push
outsl
pop
popf
pop
loope
inc
enter
pop
insb
cmp
jl
andb
add
stos
inc
push
mov
daa
fnstenv
outsl
sbb
mov
jle
pop
xor
jle
fcmovu
push
mov
jmp
cmc
xorb
ljmp
stos
push
fistpl
dec
push
loopne
movb
stos
mov
add
in
nop
jg
lcall
jge
lret
hlt
dec
pop
push
loope
xchg
cs
and
dec
or
pop
cmp
mov
ret
jl
mov
inc
dec
outsl
or
dec
push
xchg
push
adc
fdivrp
adc
mov
xor
add
push
pop
out
cmp
sub
icebp
adc
fs
loopne
push
xchg
int
pop
test
inc
jns
sbb
pop
dec
fistpl
jb
dec
inc
add
test
sub
test
mov
cltd
nop
cmp
and
mov
cwtl
mov
rcrl
mov
dec
sub
mov
mov
xchg
push
sub
gs
mov
sbbl
pop
cmp
dec
add
cld
leave
cmp
inc
aas
insl
fwait
cmp
scas
pop
jg
xchg
rcll
js
scas
mov
rcrl
push
xchg
dec
test
push
into
adc
xchg
test
arpl
xchg
movsb
cmp
push
pop
mov
int
movsb
jg
loopne
or
test
enter
inc
cmpsl
pop
icebp
stos
add
popa
add
sub
pop
mov
das
jno
add
pop
roll
lock
push
jb
sbb
inc
mov
fwait
mov
frstor
dec
cmp
push
subl
xchg
xchg
mov
mov
mov
lods
push
cmpsb
mov
and
xor
repnz
mov
test
sub
add
popa
insl
lret
rcrl
dec
or
bound
xlat
in
loope
adc
xchg
dec
xchg
jbe
ficoml
loope
xor
sub
adc
mov
push
das
cmp
daa
xorl
movsb
popf
push
cltd
jle
inc
jae
sahf
mov
jl
out
xchg
jb
cmp
pop
and
inc
je
and
je
mov
sub
fsubr
cmp
xor
pop
sbb
pusha
aas
movsb
jns
cld
les
pop
jne
incb
or
pop
repz
sub
mov
bound
out
xchg
or
aas
aam
inc
or
push
push
pop
xchg
adc
jne
cld
sti
cmpsb
mov
and
call
shr
xchg
mov
jl
imul
mov
jae
jns
adc
xor
je
jl
or
stos
rcll
xor
aam
sbb
jmp
hlt
pushf
outsl
inc
xchg
inc
sbb
inc
mov
xchg
not
jbe
insb
pop
pop
clc
testl
jp
movb
scas
lret
pop
enter
mov
push
sti
nop
sbb
call
pop
loope
stc
jns
aaa
loopne
pusha
mov
adcb
pop
sbb
out
into
mov
andl
lds
jb
pusha
xchg
ss
pop
out
xchg
mov
inc
adc
jmp
mov
int
dec
mov
cmpb
add
xlat
ret
out
roll
fnstenv
adc
aas
sub
or
scas
push
add
pop
sub
mov
cmp
or
sub
sahf
int3
int3
inc
jp
mov
imul
sti
outsb
lods
push
and
test
push
inc
lds
scas
push
mov
pop
popf
xchg
adc
int3
sbb
xchg
jl
lods
fisubs
cmp
sbb
push
mov
mov
mov
cld
push
pop
xchg
inc
mov
adc
das
fldenv
mov
and
dec
push
repz
pusha
xchg
imul
sar
add
jno
in
lods
push
lea
pop
fisttpll
mov
inc
cmpsl
pop
outsl
ss
jo
or
xor
repz
cs
sub
fstps
sub
rcr
jo
mov
stos
loop
inc
and
clc
sub
pop
sub
xor
pop
push
hlt
mov
repnz
stos
movsl
mov
inc
int
test
sbb
dec
xor
add
jno
rorl
xchg
insl
or
fs
and
pop
test
adc
orb
roll
int3
jns
iret
adc
and
mov
fisttpl
lret
notl
add
sbb
mov
cmp
mov
xor
into
ror
jns
repnz
or
xor
mov
stc
sbb
roll
clc
adc
push
jns
and
sub
dec
sub
gs
gs
mov
fstpt
pop
in
scas
mov
cmp
cmp
data16
cmc
xor
pop
add
pop
out
mov
test
jl
push
pop
pop
xchg
pop
cmp
loop
jbe
cld
mov
pop
lods
mov
cmpsl
pop
xchg
inc
jnp
push
add
call
mov
fs
dec
xchg
stc
je
out
pop
rorl
popa
je
scas
jl
mov
pushf
cmp
lock
sbb
mov
stos
jns
subl
icebp
aas
sar
jg
int3
insl
fisubs
inc
lods
stos
dec
adc
and
das
xchg
daa
sbb
roll
gs
adc
cmc
and
fcompl
stos
jae
repnz
inc
mov
xor
push
scas
jg
call
rorb
xor
pop
sbb
gs
das
stos
in
fnstsw
imul
xchg
js
aam
rorb
dec
test
xchg
jno
into
and
test
mov
out
imul
xor
xor
int3
mov
mov
add
outsl
push
je
xchg
lock
mov
mov
add
adcl
pop
fiaddl
dec
mov
inc
and
add
js
lds
addr16
add
lds
popl
adc
enter
xor
dec
jmp
xor
shll
jo
push
push
xchg
xchg
pop
xchg
mov
pop
int3
aaa
pop
fnstcw
xor
sub
data16
clc
jg
mov
adc
lret
pusha
stc
std
xchg
loop
loop
inc
mov
fistpll
das
xchg
adc
iret
jle
mov
aam
pusha
and
pop
fsubrl
sbb
xchg
sahf
jae
pop
inc
hlt
jne
sub
stos
lock
mov
subl
sbb
xor
sbb
dec
push
sbb
cmp
aam
mov
and
mov
ja
lock
das
xchg
xlat
inc
cltd
push
adc
inc
test
enter
push
pop
xchg
fsubs
fnstcw
mov
arpl
sub
push
cmpl
sub
cmc
fisubrs
adc
je
aam
xchg
xor
dec
shll
or
test
hlt
xchg
pop
xor
in
rolb
push
aaa
inc
hlt
xchg
sti
and
pop
in
sar
mov
xor
xchg
adc
ds
mov
imul
lods
inc
lcall
xchg
in
add
push
push
or
push
lods
testl
pop
add
dec
cld
mov
insb
cli
stc
mov
sti
cmp
mov
pushf
xchg
or
daa
int
repnz
mov
sarb
in
sbb
aad
push
adc
mov
mov
mov
sarb
ss
xor
cmp
mov
dec
clc
mov
cld
cli
mov
mov
sub
inc
stc
es
loopne
dec
icebp
mov
aaa
push
test
or
jmp
mov
pop
or
push
fdivrp
xchg
push
or
in
repnz
push
pop
mov
dec
imul
es
movsb
repz
push
xorb
pushf
xlat
jae
test
xchg
cmp
in
ret
cmc
cmp
push
jno
jnp
scas
bound
mov
dec
inc
or
dec
inc
adc
sbb
mov
hlt
push
fwait
push
andb
les
ja
idivl
xor
stc
mov
or
push
mov
fsubs
aam
std
gs
pop
xor
add
loop
mov
dec
and
mov
clc
jb
xor
inc
jmp
push
rclb
inc
sbb
jae
adc
pop
jno
es
or
popf
xor
in
adc
and
leave
dec
mov
packuswb
jp
out
imul
cltd
fcoms
sbb
jno
mov
stos
mov
aas
add
sbb
pop
fistpl
les
addr16
xchg
ret
mov
cmc
in
mov
sub
mov
lahf
movzwl
mov
xchg
pushf
in
lock
mov
arpl
push
pusha
push
add
jmp
into
add
mov
aaa
xchg
outsl
mov
inc
dec
lahf
sar
sbb
insl
scas
stos
daa
push
mov
pop
jbe
decb
cs
sti
fcmovb
outsl
mov
inc
sub
xchg
xchg
scas
pop
and
cmp
mov
std
sbb
hlt
movsl
add
loope
ret
and
mov
push
inc
jae
fistps
pop
daa
sub
dec
mov
imul
and
inc
xchg
ret
add
push
clc
pusha
imulb
testl
orl
mov
movsl
scas
cltd
int3
xchg
and
in
pop
xor
testl
sbbl
popf
push
dec
inc
mov
popa
push
sbb
push
xchg
stos
lock
stos
xorb
jae
jnp
sub
mov
popf
jne
aad
je
stc
cli
mov
rorl
jle
mov
push
cltd
pusha
lcall
out
cltd
mov
into
add
jg
xchg
stc
lea
fs
test
mov
jb
adc
int
xchg
fisttpl
js
xor
js
fstps
shl
dec
fstp
mov
decl
fdivrs
imul
adc
xchg
dec
jecxz
dec
insl
push
stos
mov
mov
stos
sub
cmp
pusha
aad
pop
dec
aaa
stc
imul
adc
dec
in
inc
adc
iret
add
cmp
jno
popa
sarl
xor
mov
adc
add
dec
cmp
xchg
mov
inc
out
repz
popf
mov
sti
dec
rcr
outsb
xor
aad
lea
sub
or
mov
das
sbb
addl
xor
mov
jb
or
lahf
push
jb
mov
mov
or
pusha
mov
inc
xor
push
sbb
pop
gs
mov
xlat
subb
dec
add
jp
inc
adc
cmpsb
fwait
das
mov
jbe
fsubrp
adc
xchg
loopne
daa
push
mov
inc
mov
push
sbb
ja
dec
inc
mov
inc
cld
aad
sbb
call
repnz
sub
test
je
add
inc
xor
bound
aas
test
test
mov
mov
inc
inc
sbb
dec
insb
icebp
arpl
jg
test
lea
add
shlb
cwtl
fdivrp
inc
addr16
enter
aas
insl
das
or
mov
mov
mov
adc
scas
pop
out
out
scas
test
add
sub
xchg
add
addb
daa
push
adc
mov
adc
subb
insb
enter
insl
xchg
sbbb
nop
cli
pop
imull
jle
cltd
dec
outsl
aas
aaa
pop
cmc
fildll
xlat
in
loope
xchg
sbb
mov
xchg
inc
arpl
jo
int
pop
jmp
out
jb
jnp
testl
roll
insb
cmpsl
mov
daa
cmp
pop
and
mov
dec
ret
push
cmpsl
xchg
and
ljmp
pop
inc
push
inc
or
lods
mov
xchg
das
enter
int
inc
jecxz
cmp
in
sbb
add
adc
xor
cmc
push
adc
mov
cwtl
sbb
mov
scas
or
xchg
lret
or
fldl
inc
in
fdivrl
inc
loopne
sub
mov
js
mov
lods
mov
inc
push
mov
mull
in
sbb
aam
rorb
pop
fwait
stos
leave
hlt
mov
adc
aam
jne
sub
stc
stos
ret
loope
loopne
das
xchg
and
test
push
int3
cld
outsb
or
adc
lret
data16
add
jg
xchg
int3
xchg
and
sub
out
xor
dec
jnp
out
mov
aad
lahf
dec
stc
cli
jne
sti
mov
jno
mov
adc
jb
inc
xor
add
and
fcmovnb
mov
or
imul
inc
ret
jl
dec
enter
mov
dec
push
adc
jne
push
dec
movsl
pop
int
xchg
inc
and
das
or
jae
inc
xlat
movsb
cmp
adc
ds
or
xchg
pop
test
mov
cmp
arpl
in
loopne
push
daa
and
mov
out
sbb
fadd
gs
xchg
pop
js
ds
xchg
mov
jbe
scas
jae
cltd
jne
test
test
stc
daa
mov
xor
cmp
arpl
insb
aas
bound
cli
mov
xchg
jno
pusha
ja
lret
mov
xor
xchg
jp
bnd
mov
mov
test
cld
rorl
fwait
mov
leave
xlat
push
cmp
adc
mov
adc
out
adc
inc
or
arpl
sbb
in
and
mov
into
lods
sub
cmp
lods
cmp
popa
ds
push
jle
stc
nop
loop
and
arpl
shll
call
add
mov
xchg
jp
mov
mov
lahf
adc
insb
imul
sub
dec
mov
and
mov
push
or
inc
jnp
repnz
dec
push
inc
stos
repnz
add
test
pusha
mov
cmp
xchg
mov
pop
int3
fdivr
and
ret
mov
jae
incb
sub
sub
js
push
sub
mov
das
push
aas
bound
stc
xchg
jp
sub
fmuls
mov
dec
test
add
add
stc
push
xchg
lods
sahf
lds
mov
in
xchg
jp
sub
cltd
jl
push
mul
xchg
insb
inc
pop
mov
gs
ljmp
out
or
icebp
call
negl
jne
pop
xor
rcll
into
aam
and
fistps
inc
cmpsb
jmp
sub
outsb
lahf
mov
dec
sar
mov
mov
push
mov
sbb
addr16
jmp
ljmp
loopne
sahf
sub
filds
mov
call
ret
xchg
dec
subl
sub
add
stos
cld
xor
sub
sub
sub
cmp
jg
dec
js
test
cmc
cmp
scas
push
inc
repnz
repz
cmp
push
cwtl
in
and
mov
xchg
lods
or
sub
dec
es
mov
mov
stc
mov
jns
sub
outsl
lret
and
stc
cmp
lea
mov
adc
or
dec
dec
mov
mov
xchg
sbb
mov
or
pop
or
daa
stos
mov
cld
push
daa
or
or
cmp
push
cmc
adc
dec
adc
push
jne
mov
iret
das
or
fsts
pop
ja
insl
xor
dec
adc
fadd
inc
or
adc
mov
repz
or
loopne
stos
sub
inc
mov
jge
push
or
and
test
and
roll
gs
cmp
mov
sbb
inc
cmp
fmul
lret
loope
xchg
popa
inc
rorl
stos
pop
adc
mov
pop
add
add
and
aaa
jp
shrl
sub
add
sub
cmp
jmp
jo
cs
xchg
jg
mov
xchg
jo
mov
arpl
pop
into
iret
addb
mov
sub
mov
jge
or
pop
pop
shr
jno
scas
aad
sbb
into
jno
jne
shrb
xchg
sti
aas
xchg
jne
sub
aas
push
aaa
push
aam
mov
mov
push
lret
xchg
aaa
clc
in
ret
xchg
cmp
pop
loop
mov
sbbl
cmp
call
add
push
jl
ret
daa
addr16
sbb
jb
outsl
popa
aad
cmp
lods
es
push
pop
mov
arpl
push
int3
stos
jmp
push
addr16
push
test
sti
sarl
aam
pop
jno
nop
rcrl
xor
imull
fdiv
ja
mov
sti
jbe
pop
xor
mov
xchg
push
daa
push
fwait
cmpsb
xor
fwait
out
xlat
jns
push
in
mov
test
scas
jo
stos
dec
cmpsb
mov
mov
xor
fcoms
lds
inc
fadd
xchg
mov
sarb
daa
inc
in
bound
xchg
jns
fnstcw
insl
mov
or
lods
lods
sub
sub
mov
popa
dec
sub
xor
or
and
insl
sbb
andb
popf
adc
jg
xchg
cmp
xor
jge
jmp
add
mov
outsl
xlat
xchg
mov
cmpl
mov
lahf
outsb
mov
mov
dec
outsb
mov
mov
adc
sub
scas
sub
push
ljmp
scas
mov
xlat
cld
pop
sub
addl
sub
pop
inc
and
xor
jo
das
sbb
insl
mulb
fcmovnb
lea
or
shll
jo
xor
mov
insb
dec
mov
fwait
and
mov
dec
or
jns
push
push
dec
jns
inc
pop
jne
sahf
or
pop
ret
fisttpll
data16
andb
jecxz
rcrl
and
mov
test
fwait
pushf
push
pop
ds
and
les
jp
ret
add
fnstenv
inc
shll
sbb
jo
nop
or
xchg
mov
or
mov
mov
xor
fdivrl
lock
test
push
push
movsb
jb
mov
out
das
stos
scas
int
lret
bound
inc
mov
stos
out
cltd
jmp
pop
mov
nop
repnz
pop
or
cmpsl
mov
insl
mov
add
inc
adc
cmp
cmp
ret
lock
lret
xchg
inc
push
cmp
mov
mov
add
nop
hlt
mov
add
pop
xchg
xchg
out
cmpsl
push
and
sub
pop
xlat
mov
mov
jb
mov
out
cltd
mov
mov
roll
fucomip
xor
popf
bound
or
sub
stc
xor
icebp
push
cmp
add
xchg
std
mov
ret
jbe
sbb
sbb
adc
enter
push
stos
outsb
dec
test
inc
js
movl
dec
scas
outsb
int3
stos
sbb
push
adc
movsb
and
jnp
xchg
xor
rolb
pop
out
xchg
push
jno
lds
mov
das
out
sub
cmp
push
fldenv
adc
imul
jbe
add
jbe
aaa
mov
fxch
mov
mov
xor
and
or
xor
dec
xor
mov
jo
add
jb
cmpsb
sbb
xchg
imul
fstpt
aad
push
cwtl
cmp
out
inc
and
nop
inc
push
lds
sub
mov
enter
mov
sbb
loopne
inc
in
pop
stos
int
jno
adc
sub
inc
in
cmpsl
pusha
ljmp
insb
lahf
lahf
fisubl
in
mov
mov
movsb
out
pop
pop
test
mov
adc
mov
jmp
in
dec
xchg
dec
jne
and
aaa
xor
pushf
adc
ret
outsl
sbb
or
icebp
rolb
jnp
in
or
cmp
pop
fs
aaa
aas
lret
xchg
pop
shrb
jnp
daa
shll
cmp
fdiv
imul
std
fstpt
das
stos
mov
dec
push
add
and
adc
mov
add
mov
fstpt
jl
add
rolb
cmp
pop
ret
leave
outsb
push
outsl
nop
mov
dec
xchg
xchg
stos
mov
jecxz
cmp
test
sub
xor
cld
push
cmc
shr
iret
jno
sbb
dec
sahf
loopne
sub
stos
jns
ja
pop
mov
lcall
scas
sub
rcrl
and
icebp
dec
jbe
daa
push
mov
cmp
stc
mov
in
xchg
cmp
sahf
adc
fmull
cmp
fdivs
or
xor
fwait
cld
mov
pcmpgtw
in
mov
push
dec
xor
insl
xorb
cmp
cwtl
daa
les
rorb
xchg
outsl
push
cmc
std
adc
sbb
pop
mov
pop
mov
rorl
pop
mov
fimuls
xchg
pushf
les
xor
lods
stos
lods
push
push
fistl
cmpb
jg
sub
in
inc
movl
icebp
add
mov
xchg
inc
leave
fdivl
and
cltd
mov
sbb
pop
decb
xchg
dec
outsl
in
mov
push
imul
dec
orl
jle
fisttpll
testl
cltd
mov
inc
daa
and
ret
push
and
mov
movsb
fnstsw
popa
inc
pop
movsl
fwait
inc
dec
pop
repz
jle
test
add
sahf
push
xor
or
bound
xchg
mov
scas
fwait
outsl
and
pop
sbb
notl
push
int
in
mov
int
lea
mov
sbb
cmp
xchg
pop
popa
hlt
or
fistpl
mov
imul
test
movsb
arpl
and
je
int
test
je
lods
sbb
fisubs
pusha
mov
push
add
xchg
adc
fs
jbe
and
adc
test
push
ja
lods
jmp
jb
push
jno
adc
test
fsubrs
hlt
mov
sbb
daa
adc
movsl
xor
push
pop
imul
jae
aas
ret
popf
and
out
add
dec
loop
out
cld
std
fnstcw
pop
inc
and
leave
ja
in
lock
loopne
mov
fldl
pop
aad
mov
cmc
ljmp
mov
or
mov
jbe
adc
addr16
frstor
in
xchg
or
lds
cmp
repnz
jl
jl
dec
in
lds
dec
cmp
lods
clc
add
cmpsl
pop
and
hlt
xchg
and
shll
cli
push
aas
xchg
loopne
add
add
out
xchg
vrsqrtps
sub
das
aad
test
cmp
mov
xchg
mov
or
xchg
jns
shlb
lock
leave
add
out
cld
in
int
int3
or
cmc
pop
mov
adc
mov
je
xor
add
jl
xchg
mov
dec
iret
sub
push
mov
outsl
jnp
out
sbb
adc
add
dec
aas
cs
pop
stos
or
ret
inc
mov
push
add
and
movb
icebp
loope
movsb
or
adc
and
aaa
js
push
mov
pop
pop
xchg
dec
sahf
mov
jg
sbb
push
sbb
fs
pushf
imul
and
and
jg
ds
adc
rorl
scas
cmp
mov
daa
pop
jmp
mov
movb
fldcw
mov
push
insb
jne
std
hlt
addl
inc
mov
sbb
pop
push
push
aaa
pop
ret
sub
adcl
jnp
lods
sub
jmp
inc
jg
cmpsl
xor
sbb
stos
imul
or
jno
idivl
mov
popa
cmp
aam
and
pop
cmp
mov
sub
inc
push
sub
mov
or
xor
daa
test
insl
mov
lret
lret
jmp
idivb
mov
or
jl
sub
mov
sahf
jle
pop
bound
mov
inc
shl
ljmp
inc
mov
ds
ret
fwait
lret
out
pop
push
sub
leave
sub
lea
es
inc
add
repz
push
out
imul
rcrb
cmp
test
xlat
xchg
ret
xlat
ret
adc
pusha
scas
movsl
inc
sub
fistps
ja
lea
pop
sbb
loope
sub
cmc
idivl
cmp
xchg
ss
fwait
cmp
addr16
sub
xchg
mov
leave
push
cmc
mov
push
adc
pop
pop
dec
stc
xchg
out
or
mov
xchg
add
adc
daa
dec
dec
stos
and
sub
push
sbb
push
and
or
ss
jp
ror
xchg
mov
fdivrp
add
jae,pt
cs
or
ss
cmp
aas
mov
add
ret
cmc
jmp
mov
addr16
mov
dec
cmp
out
fildll
jp
pop
pop
pop
fstpt
jge
jns
popa
sub
xor
adc
inc
fdivrl
dec
xchg
imul
add
mov
add
movsw
sti
cmp
jnp
inc
in
bound
pop
pop
and
addb
sbb
cwtl
add
mov
inc
push
xchg
dec
loope
cmc
shl
loope
mov
mov
fwait
testb
inc
sbb
push
mov
aad
fdivrs
test
scas
out
push
addr16
mov
loop
mov
mov
push
sbb
lcall
mov
jl
inc
sub
cmp
cmc
inc
xlat
xchg
pushf
pop
pop
je
jle
push
aam
push
sub
cmp
stc
pop
sti
push
mov
aaa
push
lret
sub
mov
imul
fistps
sub
int3
dec
clc
clc
and
ja
sbb
leave
add
pop
and
popf
push
pop
jnp
cli
sub
mov
fnstsw
push
pop
sbb
loopne
xchg
xor
insb
dec
push
adc
mov
roll
pop
fsubs
push
imul
cmpsb
out
cs
xchg
jg
add
mov
divb
mov
out
outsl
push
xchg
fdivrl
fcmove
mov
lcall
xor
pop
adc
in
cmp
dec
out
or
data16
in
push
ret
jno
repz
cmovbe
fcomp
aaa
flds
insl
dec
ret
xor
jg
push
cmp
enter
jns,pn
sub
xchg
out
mov
cmp
fidivl
mov
mov
pop
int3
mov
jno
jae
jbe
pushw
stc
push
hlt
fbld
add
scas
pusha
mov
pop
inc
fistpl
stos
sar
cmpsb
std
pop
ret
ret
mov
mov
mov
adc
into
pop
sti
ret
fistps
pop
inc
cmp
movsb
push
daa
dec
push
xor
clc
adc
inc
jmp
jecxz
sub
ss
gs
lods
mov
jae
subl
fsubs
lods
jae
imul
mov
lods
xchg
mov
inc
cmp
lcall
gs
test
dec
push
loop
stos
movsb
popf
inc
add
xor
mov
imul
sarl
and
rcrb
add
rcpps
inc
ds
test
lahf
mov
repz
fldl
push
popf
ret
dec
cmp
push
cs
xor
aas
mov
andl
shl
add
push
pop
mov
nop
pushl
jg
xor
jb
adc
mov
js
icebp
xor
mov
adc
xchg
ja
push
jbe
ss
test
xor
fisubl
fdiv
xor
sbb
xchg
mov
mov
test
inc
cmpsb
movsb
out
call
add
and
aam
js,pn
xchg
hlt
dec
jae
add
adc
flds
add
hlt
inc
ja
mov
mov
adc
mov
out
xor
push
ret
and
call
std
cmp
arpl
add
mov
pop
mov
push
dec
imul
jno
mov
adc
or
add
cltd
iret
or
cmpsl
mov
mov
fmulp
shr
jl
mov
adc
scas
or
adc
out
mov
cmp
inc
push
cmp
imull
arpl
xor
push
inc
data16
cmp
ret
int3
inc
dec
push
out
cmp
xlat
jmp
sahf
dec
or
dec
loope
push
sub
imul
out
std
sbb
outsl
in
pop
mov
loope
aam
add
in
int
xlat
subb
cwtl
popf
xchg
xor
push
in
in
jnp
dec
pushf
nop
addr16
pushf
mov
push
xchg
add
in
stos
sub
mov
sub
push
mov
adc
test
mov
add
shlb
pop
jns
shrb
data16
mov
add
jae
sub
cwtl
xorb
pop
add
dec
and
sar
lea
cld
pop
sub
loop
sbb
pusha
dec
cmp
ficoms
in
in
mov
adc
jnp
adc
insl
out
mov
fwait
xor
or
movsb
scas
dec
cs
mov
and
add
xor
ss
dec
popf
or
cli
jbe
mov
je
mov
loopne
pop
sub
add
jl
add
jp
es
push
or
push
sub
dec
jne
jne
std
mov
fdivrs
popf
mov
jbe
cmp
mov
icebp
cwtd
mov
test
stc
imul
mov
jg
xchg
fcomp
mov
aaa
outsb
mov
xchg
in
mov
push
lcall
jp
in
xorl
adc
xchg
pop
and
push
in
fsubl
sub
jle
loop
mov
loopne
clc
adc
xor
in
mov
stos
push
or
xor
pusha
movsb
lods
or
cli
aas
movsb
or
mov
push
sub
xor
mov
pop
lahf
clc
xchg
sbb
mov
dec
cmp
rol
add
iret
xor
nop
popl
mov
mov
ss
or
dec
xchg
adc
mov
js
ret
cmp
xchg
jle
jg
ja
fcoms
lds
push
leave
jo
jg
cmp
pusha
in
or
inc
loop
sti
xor
ret
xchg
stos
cli
push
cmp
xchg
orb
sub
call
lds
sub
popf
insb
sub
xchg
sbb
pop
movsl
lahf
mov
mov
push
mov
gs
pop
pop
cmp
cltd
in
or
mov
inc
dec
pop
push
or
lcall
xchg
mov
push
in
arpl
add
adc
jle
lahf
sti
and
jmp
xchg
and
jmp
loope
iret
std
std
icebp
out
loopne
xchg
fdivrs
popf
pop
pop
xor
lods
sbb
loop
addb
push
rolb
jmp
adc
jmp
repz
out
mov
ljmp
jno
mov
cmc
addb
mov
sub
jno
mov
hlt
enter
fwait
imul
adc
sub
and
repnz
jg
dec
jmp
xchg
pop
pop
nop
cmpl
fisttpl
int
movsl
aaa
dec
or
jne
lret
jmp
push
js
scas
out
sbb
cmpsl
mov
jne
pop
arpl
in
jnp
lret
out
ret
cmp
xorb
leave
cmpsb
push
mov
xchg
int3
sarl
sub
in
hlt
add
daa
mov
loop
cmp
xor
cwtl
mov
lret
jl
lcall
aaa
rorl
lahf
ss
add
sub
xor
lret
test
cmpb
icebp
or
xchg
and
adc
and
ficoml
and
sub
cmp
out
mov
hlt
nop
dec
jno
addl
pop
shlb
data16
add
sub
cmp
push
outsb
imul
mov
inc
push
pusha
push
ffree
insb
jmp
cmp
xor
sarb
popa
mov
push
fwait
push
sbb
pusha
jecxz
stos
xlat
and
xor
dec
aaa
adc
pusha
xchg
jmp
or
or
mov
sbb
mov
stos
jmp
ret
incb
sbb
mov
dec
dec
call
dec
lock
popf
mov
mov
push
les
mov
aad
daa
pop
adc
add
into
ljmp
mov
arpl
neg
pushl
lods
fisubs
add
roll
sarl
mov
or
loope
shll
jae
sbb
cwtd
add
mov
sbb
stc
into
notl
push
add
imul
xchg
adc
sub
mov
hlt
mov
icebp
mov
and
mov
pop
mov
repz
inc
stos
adc
insl
pop
mov
sub
pop
inc
or
xor
mov
sub
bound
mov
xchg
scas
jp
sar
imul
xor
or
or
mov
mov
add
cmp
adc
and
movsb
add
aad
pop
dec
push
imul
sbb
push
cs
sbb
inc
dec
adc
mov
jae
aam
mov
test
lcall
inc
loop
repz
or
enter
xchg
jecxz
mov
or
das
sbb
xchg
dec
sti
mov
leave
sarl
xor
faddp
shlb
jne
cmc
cmc
add
imul
inc
push
and
pushf
rorb
je
jae
cmp
fisubrl
int
sub
and
pop
stos
pop
outsb
xor
add
mov
lods
push
mov
bound
mov
ljmp
adc
push
sub
pop
mov
mov
mov
add
adc
mov
insb
imull
ret
cld
js
out
jb
xchg
mov
cmp
jge
jne
xchg
mov
and
mov
cwtl
xor
inc
mov
mov
cmp
push
out
jmp
sti
mov
negl
jb
sti
jl
das
mov
push
je
mov
lea
scas
xlat
shrb
adc
jbe
add
mov
pop
adcb
das
xor
mov
lcall
cmpsb
insl
fildll
dec
push
mov
adc
sbb
cmp
xchg
filds
popf
mov
push
jmp
cltd
xor
push
mov
mov
sub
xchg
lods
or
dec
or
inc
aas
hlt
fdivr
mov
sbb
stos
cmpsb
xchg
decl
movsb
lret
dec
pop
xchg
cmp
out
int
sti
fwait
sidtl
xchg
mov
jns
pop
stos
add
sbb
ds
cmp
push
aaa
cmp
sti
or
and
jp
shrb
mov
xchg
xor
cmp
pop
stc
rcr
jns
es
push
js
or
aas
sbb
out
fcoms
jl
sbb
in
test
notb
test
shll
lret
mov
dec
imul
and
ljmp
adc
mov
and
lret
mov
clc
add
loope
daa
add
pop
and
clc
sub
dec
inc
push
call
jmp
cmp
lods
mov
xchg
jl,pt
out
std
mov
lahf
sub
mov
and
fmulp
mov
add
out
or
in
jo
cmpsl
fistpll
leave
pop
popa
or
das
scas
mov
cmc
fcoms
cmpsl
adc
push
dec
ret
push
iret
test
pop
xor
lahf
inc
sbb
and
mov
fwait
mov
jge
lcall
loope
cmc
add
fistpll
lods
cwtl
scas
xchg
test
iret
pushf
mov
add
sub
jmp
push
sub
sub
clc
pop
add
in
iret
pop
sub
and
mov
pop
lods
adc
adc
jl
or
je
fmuls
dec
ss
mov
push
push
mov
imul
and
mov
ret
mov
dec
add
push
pusha
dec
loopne
push
inc
jp
pop
cmp
sbb
cli
cmc
cmp
test
add
sub
push
in
mov
stos
pop
sub
mov
and
daa
fcmovnb
and
imulb
sbbb
out
xchg
incb
cltd
dec
sar
testb
cli
adc
out
mov
or
cmp
gs
push
sahf
in
push
pop
xor
faddl
xlat
test
mov
inc
punpckhwd
test
jno
test
imul
push
pop
sub
xor
xchg
test
out
addr16
mov
or
push
dec
icebp
subl
mov
shll
mov
mov
xchg
jle
jmp
push
xchg
mov
nop
sbb
mov
cmpsb
cmp
movsb
add
xchg
or
mov
jno
dec
and
adc
jp
cmp
push
leave
scas
push
mov
rorb
fdivr
in
xchg
inc
pop
pop
or
sar
hlt
arpl
jmp
ja
and
sarl
sub
repnz
inc
stos
jo
jno
cmp
shlb
rcrb
mov
sbb
and
repnz
mov
repz
insl
and
sub
cmpsl
arpl
sbb
or
mov
mov
mov
inc
ret
sub
fnstcw
fimull
adc
xor
out
xorl
bound
xchg
push
subl
fimuls
out
lock
test
out
in
rcrl
cmp
out
xlat
pop
xchg
cltd
scas
rcll
pushf
cmpsb
xchg
out
fists
lods
cs
insl
and
inc
sub
mov
adc
xchg
jle
mov
xchg
ficompl
push
popf
and
std
pop
lea
dec
adc
push
or
mov
push
jo
gs
cmp
mov
aas
outsl
cmpsb
faddl
jmp
mull
xlat
adc
stc
gs
inc
lcall
fisttpl
xchg
pop
out
lock
imul
dec
ffree
inc
xchg
jge
dec
adc
cmp
cmc
mov
icebp
sub
test
sub
sub
pop
cwtl
pop
stos
nop
or
mov
add
aaa
fnstcw
imul
pop
jl
aam
xchg
add
push
pusha
hlt
mov
stos
and
lret
cmp
xchg
xor
aam
ds
insb
inc
dec
or
jb
bound
fdivl
mov
mov
outsl
jnp
shlb
pop
jl
mov
dec
daa
xorl
and
inc
test
adc
mov
pop
sarb
cmp
popf
test
std
cs
or
cmpsb
inc
out
and
xorb
mov
pop
aaa
pop
pop
mov
push
in
enter
jb
pusha
fwait
dec
stc
mov
mov
loope
std
xor
add
mov
xor
ds
sti
fs
popf
bound
dec
mov
dec
mov
sbb
xor
cmp
arpl
and
pop
xor
xlat
mov
pop
and
loopne
andb
mov
cmp
fists
dec
int
inc
lcall
test
xor
mov
add
add
ret
loope
add
add
dec
cmpsl
push
stc
cmpl
cmp
lahf
iret
sbb
ds
lahf
mov
mov
movsl
loopne
sbb
inc
or
push
add
cli
sub
jns
leave
int3
mov
mov
and
outsl
push
out
pop
xchg
sti
test
das
repnz
fmul
fnstsw
dec
fdivr
mov
mov
pop
arpl
mov
jg
lock
sub
mov
test
idivb
fwait
cli
ret
jno
addr16
mov
sti
jnp
mov
test
ljmp
stos
test
adc
pop
mov
xlat
and
jge
xchg
xchg
inc
call
or
shlb
cmpsb
add
scas
insb
imul
das
lds
mov
sbb
wbinvd
lret
imul
int
push
fstpt
out
push
add
nop
icebp
aad
dec
mov
cmp
sbb
in
or
pop
shlb
cmpb
mov
stos
int
movb
shlb
int
mov
in
aam
data16
pop
lahf
inc
xchg
add
shlb
out
sti
add
jmp
mov
xchg
add
sbb
xchg
imul
ret
xchg
pusha
stc
sbb
daa
cmp
out
adc
je
pop
dec
adc
movsb
shll
shll
or
outsb
xchg
xor
xor
lods
mov
fisttps
add
cs
or
aaa
jo
aaa
mov
imul
dec
lcall
test
add
movsb
sub
mov
fcomps
aad
mov
cmp
ja
das
mov
xlat
outsb
ret
pop
call
pop
jle
adc
mulb
ret
push
push
lret
jg
adc
mov
lahf
fwait
xchg
lods
sbb
push
adc
dec
aaa
xor
testb
mov
out
jae
inc
scas
jns
dec
jle
xchg
mov
dec
insl
int3
xor
fs
mov
pusha
inc
sub
int
sub
mov
sarb
push
inc
add
dec
hlt
mov
out
negl
mov
push
sub
in
subb
adc
data16
xchg
out
out
in
pop
pop
addb
adc
daa
push
cltd
stos
jo
fisubrl
adc
out
push
iret
mov
fcmove
xor
lret
aas
mov
aad
les
ret
pop
sbb
pmulhw
sti
cmc
cld
cmpb
and
push
cmpsl
or
mov
push
les
dec
sbb
std
pop
push
lods
cmc
enter
and
es
mov
mov
adc
enter
mov
push
fisubs
dec
adc
sbb
sub
sbb
xor
mov
lock
shll
pushf
push
add
mov
mov
lea
jecxz
dec
js
sbbb
mov
pop
aad
popa
enter
xchg
add
sub
sub
pop
jae
jbe
out
push
sub
lret
dec
cmp
mov
xor
stos
inc
and
mov
call
decb
in
stos
in
xor
cltd
in
cwtl
push
flds
xchg
sbbb
mov
jno
fidivl
sub
sub
fsubrl
add
sbb
ljmp
cmp
repz
sahf
mov
sub
out
xor
jae
mov
xchg
jnp
mov
push
push
repnz
ror
sub
mov
je
lds
adc
inc
add
pop
iret
sbb
lcall
push
xchg
ror
push
inc
fs
div
mov
xchg
or
jne
call
sub
in
jb
mov
ret
xchg
pop
inc
test
mov
ret
mov
xor
lds
or
pop
lds
mov
out
jno
and
mov
pushf
mov
pop
add
mov
jmp
in
mov
pusha
fcompl
stos
pop
addr16
fwait
jmp
iret
sub
or
or
mov
lret
mov
jle
push
fsubr
in
push
inc
bound
insl
xorb
mov
shlb
inc
ret
push
pop
mov
out
fcomps
outsl
jp
nop
mov
mov
je
adc
and
loopne
addl
js
hlt
aas
push
aad
das
mov
ret
bound
filds
lcall
inc
push
push
mov
rorb
es
je
subb
popl
repz
test
pop
pop
inc
dec
sub
mov
mov
push
testl
mov
inc
and
mov
fnstsw
fidivl
fstps
mov
jo
cwtl
xchg
test
cmc
int
cltd
outsl
cwtl
pop
es
add
mov
int3
xor
sbb
lds
dec
xor
xor
cmpsb
xchg
stc
scas
leave
jmp
pop
xlat
xorb
std
sub
int
adc
lret
pop
sbb
int
sbb
mov
imul
ljmp
rcrl
lods
jecxz
or
inc
shl
sub
push
xor
xor
xor
into
dec
push
xchg
xor
fs
or
out
jo
push
mov
cs
mov
inc
push
shll
scas
xchg
cmp
mov
or
cmpsb
mov
xchg
dec
fcmovbe
xchg
cli
fmul
sti
repz
xchg
xchg
daa
jnp
sub
outsb
push
push
or
ret
xchg
mov
mov
add
push
ss
int
xchg
pop
mov
fwait
aam
inc
dec
gs
mov
clc
jne
or
addr16
jae
fwait
orl
inc
incb
dec
xchg
jp
mov
outsl
lods
ficomps
xchg
dec
push
ljmp
push
ret
enter
jge
enter
ficomps
xchg
inc
in
and
sti
cmp
subb
call
ret
mov
xchg
out
or
xchg
add
lcall
neg
not
pop
rorb
sub
pop
stos
jl
xor
loop
mov
test
test
or
mov
popf
repz
cmpsl
clc
jno
and
js
or
fs
mov
xor
xlat
lahf
test
xor
pop
or
orb
or
int3
and
or
repnz
jae
inc
mov
cmpsb
push
push
adc
or
adc
mov
pop
pop
sub
ds
push
mov
inc
or
jecxz
sbb
or
flds
mov
add
inc
sbb
xchg
sub
repnz
push
rcrl
shr
ja
dec
push
mov
les
adc
push
push
ss
bound
fwait
sub
push
sub
dec
imul
js
dec
xor
call
add
jb
add
xchg
cmp
mov
mov
imul
int3
andl
jne
mov
cmp
push
lea
push
mov
xorl
add
jne
push
cmp
stos
dec
aam
in
outsb
or
inc
addr16
arpl
mov
cmp
cmp
mov
cmp
mov
gs
add
cli
js
push
in
fs
sarb
and
sub
xor
dec
test
add
rcll
loope
cltd
cmpsb
dec
pop
outsb
sarl
loop
pop
adcb
jo
cmp
jge
pop
jecxz
dec
pop
push
adc
xchg
negl
lods
scas
fidivs
mov
mov
xor
or
cmp
ret
int3
xchg
iret
out
ror
xor
rcrl
cmp
jbe
xchg
mov
jecxz
shrl
mov
movsl
inc
jmp
shl
stos
add
pop
lret
data16
es
xchg
jmp
jge
cltd
out
and
add
imul
test
icebp
cmpsl
movsl
aad
mov
push
fldcw
xchg
jle
fnstcw
xorb
ficoml
popf
roll
inc
add
in
inc
pop
pushf
in
and
xchg
popf
mov
jg
xor
xrelease
aad
adc
push
nop
icebp
pop
add
push
dec
incb
lds
stos
lret
xor
cmp
ror
in
insb
xor
or
fcoml
dec
push
lahf
mov
lock
cmp
lock
stos
push
adc
loopne
sarl
xchg
and
mov
add
cmp
mov
call
inc
movsl
pop
imul
movsb
mov
add
ficoml
nop
imulb
push
dec
mov
mov
and
mov
push
or
addb
test
daa
dec
cltd
mov
mov
adc
cli
push
loop
sbb
sahf
inc
jmp
aas
mov
stos
or
jp
mov
xor
cwtl
icebp
movsl
adc
adc
popa
shll
sub
bound
call
cs
mov
repnz
pop
stos
fimuls
xchg
push
ja
ret
cmp
cmp
jb
dec
cmp
das
cld
cli
cli
scas
jg
push
out
es
inc
sub
in
rorb
or
xor
loop
fstps
outsb
xor
push
add
cmp
ss
jbe
xchg
push
adc
pushf
fildl
lret
dec
sub
shrl
addl
xchg
scas
daa
or
dec
loop
xlat
and
rcrl
and
fadds
add
in
int
jp
jne
in
inc
mov
push
les
xchg
mov
shlb
inc
and
mov
dec
shll
mov
fwait
or
sarl
cmp
inc
jmp
into
test
je
sub
xchg
notl
xchg
hlt
dec
jbe
inc
cmp
add
xchg
sub
out
lea
xor
in
aam
out
mov
aaa
insb
nop
test
push
sub
jle
pop
cmp
xchg
mov
jmp
aam
sbb
push
add
sbb
cli
cltd
pop
and
mov
jne
cmp
lret
push
xchg
inc
jne
bound
jl
ds
mov
clc
add
shrb
add
inc
and
push
cli
adc
mov
and
and
fwait
test
push
or
aaa
and
shr
push
push
cmp
outsb
insl
leave
mov
lcall
pusha
divb
push
call
and
cs
lock
in
jae
es
aad
call
mov
insb
fstps
cld
mov
mov
jl
in
sbb
dec
push
les
out
outsl
and
out
sub
movsl
jne
adc
scas
lret
push
sub
ljmp
mov
xlat
xchg
pop
scas
inc
popl
push
pop
cs
imul
sub
insl
ss
dec
in
out
fcmove
aad
jbe
outsl
bound
cs
inc
sub
aas
xchg
clc
mov
scas
div
push
mov
ljmp
inc
cmp
xchg
or
scas
add
jne
stc
loopne
iret
jp
push
in
inc
xchg
test
mov
jns
and
sbb
imul
xor
add
mov
add
xor
xor
inc
lea
sti
popf
sbb
cltd
stos
insl
rolb
xchg
cwtl
rcll
lods
insl
push
push
iret
xchg
dec
scas
lahf
xor
push
mov
push
mov
lods
stos
fisubs
xchg
scas
jno
insb
mov
dec
mov
mov
cmp
repz
lahf
mov
push
aad
pop
push
mov
xchg
pop
pause
test
fadd
outsb
inc
nop
xchg
inc
cwtl
mov
pop
xor
push
scas
lods
push
shlb
xor
cwtl
movsb
pop
jnp
jbe
pusha
cmpl
jl
dec
xor
xor
dec
stc
add
xor
cmc
dec
add
mov
data16
jmp
daa
sbb
aaa
cli
scas
or
les
pop
sub
cmp
add
xor
jo
xor
mov
jge
mov
lcall
push
inc
jmp
ljmp
fwait
or
movq
lods
out
inc
or
dec
out
sbb
cld
lds
sbb
dec
cmp
lods
aad
inc
inc
adc
sbb
sbb
stc
in
test
stos
sbb
sbb
addl
sub
inc
inc
adc
ja
rol
ja
push
stos
adc
aad
fmuls
fcmovnbe
imul
mov
imul
inc
pop
enter
stos
mov
fimuls
mov
fcmovne
mov
cmp
and
add
pop
pop
jge
sub
clc
mov
test
push
sbb
sbb
sub
into
test
stos
gs
and
je
mov
mov
push
idivb
pop
jle
xchg
push
sbb
jo
inc
mov
or
or
fcomi
shrl
adc
sbb
icebp
test
and
idivb
cmp
inc
rcll
insl
in
in
cmp
push
out
xchg
fs
push
jle
sar
lcall
lret
jb
out
call
mov
mov
jecxz
mov
sub
test
mov
in
mov
outsl
mov
rol
pusha
icebp
daa
pop
shrl
pop
mov
ljmp
push
jg
out
push
out
call
fiadds
insb
adc
bound
inc
es
mov
lock
in
xorb
sub
lock
add
ret
push
stos
in
imul
and
arpl
pop
cmpsb
cmp
push
inc
mov
fimuls
sub
icebp
xchg
dec
and
mov
ljmp
popa
mov
leave
push
xchg
out
pusha
and
js
dec
aas
popa
ret
dec
xchg
add
sarl
push
push
or
in
adc
or
data16
mov
loopne
push
pushf
insl
and
cmp
cs
push
stc
in
ret
push
sbb
adc
push
fdivl
cld
mov
stos
or
and
push
mov
leave
icebp
out
sahf
in
mov
mov
ror
ret
in
ss
mov
pop
mov
mov
scas
cmovns
mov
add
push
lea
xchg
daa
and
rcrl
adc
and
loop
out
int
jle
jmp
cs
push
adc
test
sub
cltd
ljmp
mov
ja
cs
sahf
xchg
clc
or
pop
stos
or
cwtl
xor
test
xchg
fsubrs
mov
adc
adc
cld
xor
jmp
je
test
pop
mov
pop
lods
call
push
nop
xor
mov
sbb
and
test
push
sbb
inc
aad
imul
jle
sub
outsb
sub
mov
adc
inc
loopne
int
fidivs
mov
iret
lahf
pushf
lea
scas
mov
je
js
push
scas
inc
xchg
and
xchg
out
jmp
fisttpl
or
ret
mov
cmpsb
and
pusha
mov
adc
xrelease
sub
inc
dec
add
push
mov
add
adc
addl
push
sub
cmp
dec
push
repnz
cmp
adc
scas
test
ror
mov
data16
lods
mov
and
loop
add
jp
dec
ret
cltd
lahf
movsb
pusha
scas
pop
ficompl
mov
in
adc
enter
mov
ret
dec
ljmp
outsl
cli
inc
scas
stos
mov
call
adc
decl
push
cltd
in
dec
pop
push
in
inc
add
push
loop
xchg
in
nop
adc
mov
mov
add
dec
stos
insl
ror
jecxz
and
xor
std
or
xor
aam
xchg
fwait
add
xor
loop
call
stos
xchg
arpl
pop
and
push
push
lcall
pushf
test
daa
std
mov
clc
fbstp
cwtl
lds
xchg
lret
sti
loop
push
push
push
loop
mov
jns
movl
sbb
mov
add
xchg
xchg
lods
pop
popa
inc
std
popf
stos
icebp
lret
mov
mov
lods
jns
outsb
mov
fstl
mov
pop
mov
hlt
mov
push
inc
mov
jno
repz
adc
mov
enter
push
jl
push
iret
ja
mov
jecxz
mov
mov
cmp
arpl
mov
pushf
lahf
insl
test
lret
scas
push
xlat
das
inc
dec
fnsave
popa
shlb
mov
xchg
adc
subb
pusha
mov
jmp
stc
arpl
ja
in
adc
aas
mov
sbb
jle
or
sbb
adc
mov
sbb
mov
mov
jne
pop
addl
inc
adc
xor
push
push
lret
jg
pop
jmp
lods
insb
pop
jb
imul
gs
jmp
xchg
fsubs
jl
mov
rcr
mov
pop
mov
sbb
out
and
sahf
xchg
lcall
lods
je
push
insl
arpl
jg
test
mov
adc
repz
int
pop
aas
out
sbb
sbb
dec
mov
inc
popf
xchg
fcoml
test
adc
inc
stos
shlb
or
and
test
ds
lcall
les
adc
jo
fmuls
sub
nop
inc
push
out
dec
lret
scas
mov
adc
push
jecxz
cmp
add
lock
outsb
inc
into
cmc
loop
xorb
jns
cmp
loopne
mov
ficoms
mulb
cmp
icebp
mov
or
mov
cld
push
andl
or
push
dec
shrb
inc
add
xor
lahf
lods
mov
inc
pop
mov
fst
mov
cs
add
add
xchg
push
pusha
push
ret
pop
cmp
xchg
xchg
jne
rclb
cmp
das
and
fs
adc
pop
xchg
jnp
in
inc
jecxz
push
rcll
xchg
outsb
inc
add
jg
fs
into
jle
sahf
sub
pop
cmp
out
mov
cmp
insl
add
sub
and
shr
lret
fisubrs
scas
sub
mov
jne
insb
add
addr16
and
xchg
mov
pop
jns
mov
loopne
mov
ljmp
and
cmp
aaa
out
icebp
lock
sbb
xchg
cmpsl
rolb
movsl
add
push
out
push
add
clc
mov
ret
push
adc
cli
data16
push
sbbb
addr16
in
test
hlt
popf
mov
xchg
es
push
fsubl
adc
push
pop
je
add
pop
xchg
cmp
sti
xor
and
mov
mov
cmp
pop
enter
xchg
sub
adc
adc
and
mov
hlt
jmp
sti
jno
lret
xchg
mov
adcb
int
stos
dec
lret
or
add
pop
adc
pop
sbb
ret
push
sti
xor
divl
push
jnp
das
loope
and
dec
icebp
jnp
gs
adc
movsb
jbe
sbb
xor
cmpsl
repz
shlb
andb
push
jle
pop
ja
mov
jbe
mov
sub
lock
dec
pop
dec
mull
xchg
mov
orl
nop
cld
sbb
pop
and
scas
mov
sbb
inc
adc
xchg
xchg
cmp
xchg
xor
test
sub
rcrl
cltd
and
push
mov
sbb
add
cmpsb
xor
pop
test
fistl
adc
inc
scas
movsl
leave
mov
aaa
mov
aaa
jg
movsl
jne
push
scas
xor
call
pop
mov
pop
xchg
push
cltd
push
adc
jbe
hlt
jge
loopne
arpl
push
mov
addr16
fcmovb
inc
push
jns
and
xchg
sub
insb
lods
cld
inc
jnp
sbb
inc
mov
in
outsl
mov
pop
mov
adc
mov
xchg
mov
dec
xchg
add
push
xor
cmpsb
mov
sbb
mov
inc
mov
xchg
lea
push
in
cs
lcall
push
mov
inc
ret
inc
add
ja
push
dec
dec
popf
out
fcoms
xor
pop
push
mov
xlat
les
ds
jmp
pop
mov
mov
cmc
and
pusha
test
scas
mov
push
fcmovb
jp
push
or
ljmp
ret
xchg
cmp
mov
fs
outsb
ret
xlat
sub
mov
shl
fwait
sbb
cmp
aad
aas
outsl
mov
das
pop
mov
jl
mov
pusha
xchg
jmp
mov
add
js
push
pop
mov
dec
pop
les
out
outsl
pushf
and
or
xchg
dec
pop
inc
clc
aam
idiv
loop
das
jne
rorb
popf
pop
popa
mov
jns
test
out
popa
push
jno
fsub
xlat
adc
push
push
iret
cmp
stos
loope
push
xchg
jns
and
filds
negl
mov
push
rclb
in
rcl
out
dec
fisubrl
test
sbb
adcb
repnz
push
sbb
mov
pop
mov
sbb
in
and
xchg
adc
cmc
dec
jo
out
shl
adc
movsb
aad
xchg
mov
fnstsw
jl
in
dec
cmp
jecxz,pt
pop
mov
out
push
pop
inc
xchg
setns
movsb
xor
jae
and
mov
nop
insb
push
xor
push
test
shll
test
repz
ret
mov
sub
pop
xchg
cmp
pop
js,pt
push
adc
lret
in
jns
scas
jge
es
dec
dec
or
push
ror
mov
xchg
lret
push
adc
jae
aad
sbb
jmp
pop
addr16
movsb
testb
mov
sbb
mov
dec
frstor
or
and
ds
sbb
rcrb
les
mov
mov
fcoml
lods
in
jmp
pop
repnz
pop
ret
cmp
mov
mov
xor
sub
fs
insb
ja
jae
adc
or
xor
std
mov
call
jl
in
xchg
cmpsb
mov
mov
and
and
mov
mov
jmp
lret
pop
lret
icebp
imulb
stos
aam
daa
les
mov
and
and
arpl
fsubp
jae
push
push
mov
movsb
push
push
nop
rclb
mov
insl
and
push
xchg
mov
mov
xor
sub
and
sbb
fcomi
ljmp
in
pop
ud0
gs
sbb
mov
repz
sbb
stos
lods
add
mov
in
out
mov
cmp
js
dec
sti
sbb
add
push
out
fmulp
xchg
and
in
jne
movsl
sti
xor
jnp
pop
negl
repnz
push
out
cmp
and
cmp
mov
aad
in
cltd
jge
rorb
cltd
xchg
imul
jno
jmp
test
jl
push
cli
enter
into
and
fbstp
inc
push
push
cmc
jge
cmp
cmp
into
jnp
lods
lods
sub
scas
lret
iret
mov
mov
adc
cld
fnstenv
lret
je
call
jnp
lea
cmp
in
push
push
pop
pushf
dec
fmulp
daa
sub
leave
pop
in
ja
push
jne
mov
call
imul
mov
pop
mov
sbb
sub
imul
js
lcall
bound
push
or
cmp
test
adc
dec
pop
int3
cli
imul
sbb
push
ficoml
ja
fcmovne
adc
adc
xchg
loope
jns
jg
in
xchg
jle
push
fsubl
shlb
jnp
sbb
daa
xor
push
sbb
sbb
test
in
xlat
xchg
or
int3
daa
rcrl
or
cltd
inc
adc
inc
mov
sti
cld
rolb
cmp
sub
sbb
mov
sub
fsubs
pop
xor
push
scas
lea
in
rolb
pop
clc
push
pop
and
jmp
in
int
push
and
pop
push
es
out
xor
pop
aad
xlat
outsb
xchg
shl
jae
fbstp
xlat
inc
adc
test
push
adc
loope
inc
mov
popl
jae
or
xlat
icebp
xchg
mov
xor
mov
jle
movsl
scas
aam
fisttps
xchg
cmp
shrl
call
jl
psubusb
test
and
add
cmpsl
cld
jp
inc
jo
scas
movsb
ficoms
insb
out
test
mov
xchg
cmp
orb
cld
loope
out
mov
jns
adc
jg
mov
inc
and
push
cmpl
push
mov
xchg
notb
sbb
dec
ds
push
cmpsb
sbb
pop
scas
cmp
xor
and
std
test
dec
out
lods
lods
cli
mov
es
gs
mov
ljmp
push
testb
popa
movsb
push
and
cmp
mov
ds
xor
dec
sbb
add
and
arpl
es
sbb
jge
xchg
call
sub
xchg
imul
and
js
pushf
jbe
cld
xchg
in
mov
sbb
add
jle
ret
mov
aaa
scas
cmpsb
mov
pop
mov
dec
push
in
imul
je
cltd
inc
insl
lods
fucomip
push
or
cmpsb
lahf
cmp
popa
andl
jge
xor
xchg
repz
inc
lret
sbb
xchg
int3
adc
jle
aas
aad
stos
dec
mov
cmpsl
aaa
test
dec
jg
mov
test
mov
push
or
or
sub
or
daa
pop
imul
iret
jb
adc
or
push
outsl
xlat
push
add
jbe
dec
sbb
cld
sbb
jmp
xchg
xchg
sub
pushf
scas
scas
sarl
out
testb
dec
cmp
daa
sub
enter
adc
data16
sub
jo
xchg
loopne
jge
jmp
jae
or
cmp
adc
sub
data16
jp
sahf
lods
rolb
xchg
sub
pop
ja
mov
mov
ja
jno
mov
inc
add
fdivrl
out
jg
push
stos
or
out
xchg
out
mov
cmp
sub
and
insb
xchg
cmp
clc
ljmp
mov
rep
push
add
inc
inc
aas
sbb
pop
pop
mov
pusha
int
lds
sub
std
insl
imul
int
arpl
mov
mov
xchg
xchg
fsubrl
jp
flds
daa
xchg
ret
in
cmp
in
mov
push
and
dec
mov
les
sbb
or
mov
imul
scas
mov
pop
sub
mov
ljmp
outsb
sarb
xor
push
testl
call
ficompl
adc
adc
cwtl
mov
pop
inc
in
movsl
or
cmp
sbb
lods
cmp
popf
xor
arpl
loop
xchg
cmp
ret
imul
fwait
lret
and
mov
rcrb
or
xchg
insl
imul
dec
jo
dec
xlat
call
sbb
hlt
sbb
nop
xor
imul
adc
sub
push
and
dec
mov
jmp
mov
adc
sbb
ret
stc
shl
lret
add
jno
jae
add
xchg
push
mov
lret
rcrb
orl
jnp
outsl
aam
mov
addr16
lds
clc
inc
mov
pop
inc
addb
into
pusha
sbb
adc
in
jno
les
xchg
cmc
mov
jne
sub
xchg
mov
mov
and
ljmp
jp
xchg
push
mov
leave
jp
xchg
jecxz
push
stc
dec
clc
scas
movsb
test
mov
sbb
mov
icebp
cs
mov
lahf
sti
sub
dec
scas
sub
repz
test
dec
rcr
jno
gs
sbbl
mov
iret
and
and
cmp
push
sbb
sbb
dec
ds
adcb
jo
mov
in
mov
outsl
mov
mov
out
movsb
push
stos
xor
jle
ds
mov
and
dec
adc
sbb
shll
fisubs
pop
addr16
mov
shr
imul
jno
pop
cmc
loop
inc
out
jmp
aaa
pop
movsb
fs
jb
in
pop
mov
daa
clc
hlt
fdivrs
dec
mov
iret
fmul
testb
ret
push
hlt
dec
imul
xor
and
roll
data16
aam
lret
sub
fisttpll
mov
xchg
sbb
in
xlat
lods
sub
cltd
repz
outsl
aas
les
addr16
jp
adc
cmp
gs
mov
les
fisubs
in
xor
imulb
cmp
or
or
pop
ret
mov
lods
cmc
inc
pop
and
leave
dec
jmp
xor
sbb
adc
mov
dec
push
popa
sbb
inc
mov
psrad
jnp
clc
icebp
or
shrb
cmpsb
jle
sub
jecxz
xchg
cmp
pop
cmpsl
dec
cmp
mov
adc
or
aaa
and
add
mov
xchg
and
shlb
es
test
sub
lret
pop
or
pop
xchg
clc
leave
mov
jge
add
pop
ds
negb
or
or
insl
adc
subl
xor
rcll
ja
mov
out
cltd
cmp
sub
out
call
ret
xchg
xchg
nop
xchg
nop
mov
addr16
sub
inc
cmp
pop
pop
es
inc
mov
mov
jp
jo
out
bound
add
mov
int3
cmc
insl
es
mov
jb
clc
and
mov
jo
pop
pushf
sarl
movsb
dec
rclb
xor
popf
lahf
inc
xchg
push
fsubrs
mov
push
sbb
lea
adc
add
inc
fwait
sarb
mov
in
in
insl
pushf
out
in
pop
insl
inc
lods
popf
mov
call
sub
scas
jo
sub
gs
or
and
jl
fimuls
sbb
mov
aaa
cmp
xchg
jae
orb
addr16
inc
inc
aaa
roll
stc
add
imul
sti
cmp
inc
sub
call
mov
iret
jmp
pushf
xor
sub
sub
sub
add
andps
into
out
inc
ds
movl
cmc
cmp
jno
inc
jmp
lea
cmp
mov
ret
imul
and
jle
mov
data16
xchg
sbb
ud2
lods
xor
jns
scas
int
pop
inc
jnp
sahf
adc
mov
test
mov
adc
pop
shlb
inc
adc
outsl
in
or
test
lcall
mov
pop
sbb
pusha
add
rolb
out
mov
out
repnz
xchg
lock
loop
mov
rcrl
cmp
cmp
xchg
dec
cmp
popa
mov
push
push
fwait
dec
jb
xchg
xor
aad
push
adc
and
adc
xchg
mov
dec
js
aaa
sbb
cmpsb
sub
lock
gs
ss
xchg
mov
sbb
sbb
sbb
aas
loopne
fistps
sbb
lret
jmp
dec
popf
mov
adc
daa
rcr
aad
mov
xor
jno
ljmp
pusha
je
xor
sbb
jnp
mov
adc
adc
and
lods
sbb
mov
inc
loope
mov
repz
mulb
mov
frstor
scas
imul
and
mov
xor
push
out
shll
cmp
je
test
arpl
es
ret
stos
imul
jp
shll
cmp
dec
adc
addb
sti
leave
movb
mov
outsl
sti
push
es
xchg
adc
into
ss
add
push
arpl
adc
pop
bound
shll
xchg
das
sub
and
jmp
push
mov
std
cmpsl
mov
sbb
xor
add
fcmovbe
scas
decb
call
test
mov
mov
add
loop
jl
out
fnsave
aad
and
jmp
adc
ret
ja
push
pop
lahf
and
test
sub
mov
outsl
pop
sbb
push
movb
jg
xchg
test
add
hlt
les
xchg
movb
cmp
lret
ficoml
ficoms
pushw
fs
loop
out
xlat
cltd
mov
ret
call
mov
cmp
rorl
mov
movsb
push
lods
adc
cmpsl
pop
cmp
leave
into
inc
daa
outsb
xchg
inc
inc
loopne
cmpsb
push
popa
xlat
insb
pop
push
mov
ret
aad
xchg
inc
dec
cwtl
and
addr16
data16
inc
loopne
pop
xor
inc
movsb
xor
addl
push
push
leave
adc
leave
jns
dec
mov
xchg
test
lret
cmc
sarl
vpmacsdql
fmulp
aaa
dec
and
inc
mov
lea
outsb
jmp
negl
sbb
jle
dec
push
stc
jns
sub
cmp
dec
sbb
inc
and
mov
ss
fs
out
or
ficoms
push
or
rolb
jns
int
imul
hlt
mov
push
mov
in
rcr
mov
fsubl
sbb
popa
inc
cmc
push
push
push
out
sbb
outsb
cmp
aas
cmc
cmpsl
out
cmp
mov
push
loop
xchg
fisttpll
xchg
es
inc
mov
push
into
ljmp
mov
sub
ds
jno,pn
insl
nop
inc
aad
jne
insb
cwtl
xchg
dec
pushf
mov
mov
mov
sti
mov
mov
ret
sub
repz
into
sbb
out
fwait
or
push
xchg
shll
push
addps
push
push
iret
or
push
js
xchg
hlt
adc
les
mov
jl
jne
and
test
call
pop
sbb
icebp
cltd
outsl
and
lods
je
loop
cmp
fdivrp
mov
xchg
insb
xchg
mov
or
mov
adc
ds
lock
dec
cwtl
xor
out
add
xchg
rcl
insb
test
lock
sti
sub
push
fs
push
cmp
jae
addb
mov
sub
cli
jmp
out
pop
jne
or
push
sbb
mov
out
mov
xchg
es
cmp
out
mov
rorl
sbb
pop
jbe
jmp
ds
fsubl
dec
xlat
jbe
das
fildll
push
jb
ss
test
mov
mov
xor
jg
fdivr
sbb
es
roll
push
lret
ds
imul
or
pop
mov
sbb
ljmp
test
test
fldt
or
jae
ret
mov
jg
shlb
outsb
sbb
dec
gs
dec
neg
jmp
fwait
sub
xor
loopne
sbb
test
pop
sbb
mov
stos
les
mov
xchg
jecxz
dec
pop
sub
pop
or
andb
enter
push
pop
movsl
jmp
push
add
sub
arpl
ret
xchg
in
push
cltd
mov
push
fnsave
push
mov
jns
orl
cmp
push
lahf
fbld
bound
mov
mov
out
aas
pusha
rcrb
mov
jns
lock
lods
iret
or
add
int
mov
neg
adc
add
pop
jmp
in
test
and
or
jg
std
fsubrs
rcrl
jmp
mov
outsb
add
jbe
stos
imul
push
xchg
outsl
in
int
test
cmp
in
imull
adc
cmp
jge
adc
jmp
mov
push
cmp
fadds
add
adc
jge
lcall
hlt
iret
jo
xchg
repz
js
das
mov
daa
mov
test
inc
inc
sbb
sbb
jb
jb
push
scas
aam
fnstsw
iret
call
mov
mov
ljmp
mulb
inc
outsl
xorl
fstl
in
push
and
mov
or
or
loop
pop
push
inc
push
movsl
arpl
movsl
inc
cld
mov
sub
outsl
push
or
sbbl
das
pusha
outsb
xchg
sar
jg
pop
or
sub
btc
imul
xor
or
test
movsl
add
scas
jo
sbb
xor
adc
mov
jecxz
dec
mov
loope
add
int
pcmpeqb
xchg
cmpsb
mull
jns
jns
test
icebp
mov
scas
cmp
cwtl
leave
in
inc
fcmove
enter
rcr
inc
or
pop
or
int3
and
jns
ret
les
rep
scas
jle
xor
mov
sbb
insl
jae
mov
outsb
sbb
sbb
dec
rcl
add
jne
pushf
bound
imul
imulb
hlt
repnz
cmp
dec
outsb
add
xchg
dec
mov
jnp
adc
xchg
sbb
mov
push
rorb
adc
movsb
inc
cltd
das
mov
icebp
xor
mov
mov
adc
call
loope
add
mov
cmp
jo
pop
lods
mov
aas
enter
jnp
jecxz
mov
xlat
push
mov
fwait
sarb
inc
xchg
pop
loopne
jmp
mov
rolb
data16
xor
xchg
and
cld
dec
xchg
arpl
push
in
out
mov
psrlq
jmp
fucomp
fwait
jl
leave
pop
push
in
divb
xor
test
add
add
movsb
test
enter
imul
mov
cwtl
inc
pop
xor
je
mov
xlat
cmp
adc
pop
aas
ja
loope
mov
imul
pop
leave
setp
jl
outsb
loope
popa
incl
add
mov
jmp
mov
mov
mov
fs
test
lods
mov
push
ret
pop
add
or
push
jo
bound
je
lcall
repnz
jb
popa
in
imul
cmp
add
mov
mov
movsl
das
jmp
cmpsb
cmp
fldenv
popf
push
roll
ret
mov
lock
lds
sti
or
roll
mov
xlat
or
sub
push
jmp
call
fimull
lea
insb
pusha
sub
lret
or
int3
xor
ljmp
pop
loopne
mov
fbstp
xlat
sub
popa
or
fdivs
xchg
and
data16
call
inc
mov
imul
and
mov
cwtl
fistl
repnz
dec
adc
add
enter
daa
xor
lcall
repz
sub
adc
sbb
nop
or
aad
cmp
xor
mov
sahf
mov
cmp
xchg
or
addr16
repz
out
mov
jbe
hlt
addb
ljmp
add
ficoms
mov
lret
mov
movsl
movl
call
aaa
aaa
push
fadds
jb
js
testl
add
push
icebp
pop
pop
ret
push
orl
xchg
dec
cmp
shl
popf
stc
mov
sub
pop
mov
adc
jbe
mov
lea
push
daa
filds
lods
jne
mov
sub
dec
in
repz
rcrb
dec
pop
or
das
mov
mov
push
mov
mov
scas
mov
push
jae
sbb
xchg
or
push
call
mov
std
cwtl
sub
int
ljmp
test
push
pop
add
and
cld
ds
mov
xor
pop
dec
js
ljmp
adc
lea
jg
dec
movsb
adc
fisubs
sahf
insb
and
fimull
add
sbb
sub
push
stc
inc
call
inc
std
enter
pushf
and
outsb
imul
sub
int3
dec
aam
mov
pop
adc
enter
cs
lcall
adc
imul
pushf
jae
ret
adc
mulb
in
fnstenv
push
mov
xchg
adc
inc
movsbl
repnz
sbb
xor
add
xchg
jnp
mov
scas
inc
ds
imul
icebp
push
and
lcall
sbb
or
jl
clc
les
fs
xor
lods
mov
xchg
in
sbb
jnp
popa
aam
dec
xchg
and
notb
or
mov
stos
mov
inc
cmc
bound
jbe
bound
xchg
rcll
dec
insl
add
js
test
sbb
inc
mov
pop
mov
jnp
test
inc
jge
jle
movsb
jae
jmp
frstor
in
xchg
mov
fists
fcmovnbe
sbb
pop
stc
pop
sarb
pop
imul
jns
subb
daa
clc
fdivl
pop
add
inc
test
jno
lock
sarl
addl
and
or
std
jne
outsb
push
mov
and
jmp
lcall
mov
jnp
mov
inc
lcall
data16
test
jmp
xor
lock
outsl
sbb
jle
push
outsb
aas
and
jmp
pop
leave
pop
cmp
aaa
xchg
xor
cmp
das
movsb
sub
popa
scas
mov
mov
adc
xor
dec
pop
lods
push
addb
sub
mov
or
mov
repz
cltd
mov
and
push
inc
pop
pop
sbb
in
adc
cld
insl
sbb
push
es
push
imul
fldl
pop
cmp
ss
xchg
sbb
mov
int
test
pop
leave
ret
cmp
mov
jnp
fisttpll
xchg
mov
scas
out
nop
popf
inc
das
xchg
or
sbb
adc
mov
or
jb
pop
mov
xchg
push
cmpsl
sub
or
dec
jno
flds
jecxz
aad
push
repz
les
movsl
or
mov
mov
adc
stc
mov
push
ret
fdivs
push
add
jo
and
sbb
xor
lock
mov
add
lds
pop
add
jne
fidivl
mov
push
hlt
inc
imull
popl
xchg
xorl
xchg
les
xchg
aam
fsubp
fcmovne
fsubs
xchg
xchg
fstps
mov
test
push
rcrl
push
std
add
outsl
jmp
xor
stos
aas
dec
xchg
add
add
je
sar
mov
jecxz
mov
inc
andl
push
rol
jg
sarl
add
xchg
repz
mov
inc
add
out
rorl
mov
xor
mov
movsb
stos
cmp
insl
in
shrl
fnstenv
push
mov
add
stos
stos
adc
mov
pop
sbb
cli
cmp
ret
movsl
insb
inc
push
outsl
and
sbb
ljmp
rorl
push
adc
hlt
in
inc
mov
sti
mov
lds
in
pop
mov
xchg
xor
shlb
shrb
push
out
data16
dec
dec
fcoms
leave
fdiv
cmp
sbb
mov
mov
pop
in
stos
adc
mov
test
xor
fiaddl
inc
xchg
xchg
es
add
out
jg
aaa
das
or
imul
mov
loopne
in
sbb
sti
mov
xchg
push
scas
xor
add
sub
arpl
call
fdivs
test
loope
xchg
adc
daa
and
and
xchg
add
dec
inc
out
xor
xchg
mov
daa
in
into
gs
push
mov
xchg
int
imul
sub
mov
mov
repnz
mov
fdivs
pop
push
insb
jge
test
add
adc
push
pop
xchg
dec
dec
push
hlt
adc
or
mov
inc
push
mov
push
jno
or
shll
clc
inc
push
mov
push
std
push
addl
aam
clc
int3
jnp
roll
pop
rcll
scas
ljmp
push
mov
outsl
bound
inc
mov
xchg
das
stos
mov
cmpsb
icebp
adc
cmp
roll
fcmove
pop
sbb
movsl
enter
jl
fisubrs
inc
cmpsb
dec
lret
xchg
pop
loop
pop
sbb
jnp
jo
inc
sub
lds
in
dec
push
in
push
cmp
bound
dec
pop
xchg
push
adc
cmpsl
in
std
lds
fsubs
mov
dec
inc
ret
pop
mov
and
mov
subl
clc
or
lods
rorb
cs
pusha
adc
inc
cmp
out
scas
dec
inc
jo
push
ret
addr16
jo
inc
mov
addr16
in
subl
mov
mov
loope
lcall
je
pushf
mov
add
mov
inc
int3
shll
xchg
test
test
mov
add
or
ja
mov
xor
notl
test
into
and
inc
shlb
imul
cmp
push
insb
call
fwait
adc
out
imul
inc
xchg
cmp
mov
pop
push
mov
addr16
cwtl
lret
pushf
insl
fiadds
callw
aad
and
push
mov
in
insl
sbb
cmp
add
lret
imul
ljmp
xchg
vfmadd231sd
repnz
fnstsw
jo
in
push
sub
sbb
jge
scas
lret
out
inc
inc
jnp
cltd
sbb
clc
mov
pop
outsb
enter
or
mov
ja
fs
mov
data16
icebp
les
movsb
sub
jp
mov
inc
lahf
out
jae
dec
cmpsb
mov
mov
xchg
mov
mov
and
adc
xor
push
cld
jns
mov
rcrl
in
sub
clc
xor
sub
out
outsl
jg
out
ss
and
pop
pop
daa
jae
cmp
xor
cmp
pop
out
push
into
push
jge
fidivrl
adc
fistl
cmp
ja
inc
imul
inc
gs
mov
in
mov
xchg
mov
mov
imull
out
cmp
pop
mov
pushf
les
ja
mov
pop
mov
cltd
mov
fimuls
ljmp
push
shrl
jbe
movsb
jbe
pop
stos
cmp
xchg
movsl
add
divl
push
cli
lock
fildl
xchg
xchg
call
jae
mov
scas
push
insl
repnz
xchg
int
icebp
call
xor
in
cmc
sub
lea
loop
jne
stc
sub
push
fistpll
not
ja
jnp
roll
pop
outsb
mov
sbb
jmp
cs
orl
mov
xchg
push
movsb
push
or
mov
out
je
dec
or
mov
or
pop
push
popa
pop
lea
cmp
adc
add
dec
xor
cmp
fstps
and
and
push
fldl
push
mov
xor
adc
sbb
jp
mov
sub
adc
and
pop
xchg
sahf
adc
mov
insb
pushf
cmp
lods
rol
test
xchg
or
jo
punpckhbw
xchg
xchg
aas
push
fstpt
in
aad
fistpll
mov
jnp
mov
sbb
inc
push
pop
lds
or
lock
rcr
xchg
loopne
test
rol
push
out
loopne
jecxz
mov
xchg
xlat
xchg
cmpsl
outsb
xor
jbe
cmpsl
cld
fsubr
xchg
or
enter
sub
inc
xor
popf
out
dec
adc
push
out
adc
ljmp
lret
pop
mov
aam
jecxz
jb
mov
in
or
out
stc
scas
mov
pushf
pop
fldl
sbb
lods
insl
loopne
add
adc
add
mov
sahf
pop
out
pop
stc
or
aam
mov
loop
mov
mov
pop
shlb
jne
pop
sbb
js
arpl
out
xchg
testl
jle
push
add
inc
sub
xchg
cmp
cltd
daa
pop
jb
outsb
dec
notb
sub
jp
mov
jp
popl
pop
stos
test
xor
xchg
xchg
data16
scas
lods
icebp
push
fdivrl
test
xchg
xchg
repz
xchg
test
cmpsl
jo
jmp
pop
mov
push
xor
insb
or
insb
inc
adc
mov
popa
jns
xchg
or
clc
shr
pop
mov
push
add
sbb
es
scas
mov
fwait
arpl
xor
xor
mov
inc
push
xor
inc
outsb
je
xchg
je
push
xor
clc
mov
xor
mov
push
xchg
pop
adc
xlat
pop
fmulp
pop
push
insb
jns
mov
in
add
fcoms
and
pop
sbb
addl
jle
mov
outsb
ss
dec
and
les
rolb
xchg
repz
pop
push
dec
int
cs
sbb
jg
lret
lock
lret
outsl
test
mov
iret
lahf
in
pusha
cmp
push
xacquire
call
mov
imul
ret
inc
mul
shlb
fadd
js
mov
pop
jmp
ljmp
mov
cwtl
push
mov
std
shll
mov
adc
mov
mov
test
test
arpl
xchg
mov
inc
scas
mov
fnstcw
fisttpl
cmp
inc
fs
jg
stos
insb
jns
enter
gs
lret
xor
cmc
push
jo
adc
fsts
mov
mov
cmp
sbb
test
jmp
test
or
cmp
test
push
add
ss
lcall
rcr
push
imul
add
jge
adc
mov
sbb
jge
cmpsl
and
nop
in
xchg
mov
or
ret
xchg
adc
and
or
imul
test
adcb
repnz
or
bound
push
add
loopne
xor
call
fdivrl
xchg
les
out
inc
pop
loop
mov
jle
ss
push
pop
rcrb
gs
sub
jns
inc
test
aas
negb
lea
and
test
ds
mov
xchg
push
addb
mov
enter
xorl
insb
call
out
mov
jae
imul
movb
mov
insl
lods
xchg
mov
adc
dec
mov
cli
sub
aad
in
sahf
or
dec
in
dec
sub
clc
in
in
pushl
mulb
das
pop
push
ss
add
pcmpgtb
mov
add
inc
adc
dec
xchg
call
lods
dec
xchg
xchg
jno
add
cli
add
or
fcomps
push
mov
add
xchg
sahf
cmp
lahf
movsl
inc
cmc
popf
cmc
in
hlt
mov
aam
aas
push
sub
int
enter
push
imul
aad
fistpll
repz
cmp
sbb
jbe
jle
add
std
cltd
ja
xor
outsb
dec
push
mov
mov
fiaddl
sbb
cmp
inc
adc
addr16
jns
andb
jg
jp
imul
pop
push
lock
pop
insb
fwait
scas
add
shlb
or
ljmp
cmp
and
xor
pop
test
popa
scas
movsl
add
sbb
push
faddl
notb
or
mov
push
mov
pop
es
adc
mov
es
in
les
rorb
sub
xor
loopne
lret
es
rorl
pop
inc
fst
add
inc
inc
lea
adc
mov
call
enter
mov
adc
enter
jmp
jo
mov
jmp
adc
cmpsb
adc
sub
xchg
push
mov
adc
cmp
push
cmpsb
lock
mov
cld
jne,pt
jns
cltd
dec
and
in
add
jge
in
jns
test
into
mov
fdivrs
xchg
dec
lds
shlb
pop
gs
sub
push
mov
adc
pushf
pushf
sbb
add
fiadds
jne
mov
outsb
ret
jbe
lret
loopne
or
jecxz
pop
cmp
push
sub
and
out
dec
fldenv
push
mov
sub
call
pop
not
cmp
je
adc
sub
sub
mov
mov
into
ret
dec
jns
gs
out
scas
or
jmp
addr16
jge
out
mov
cmpsl
push
ds
push
xor
and
dec
dec
xchg
sti
mov
fstpt
jno
fisubl
std
pop
xchg
inc
xor
enter
icebp
andb
cmp
adc
inc
mov
outsl
ret
sbb
xchg
adc
jb
push
jns
clc
mov
loop
lret
sbb
test
push
add
xchg
xlat
imul
dec
pop
jge
and
lcall
mov
jmp
fisubl
jno
in
sbb
setae
ss
inc
aam
push
in
xchg
push
jns
stos
adc
lods
cs
rcrl
ljmp
jae
loop
lods
lea
sti
jae
and
movsl
je
loope
pusha
inc
in
aaa
pop
cli
aad
mov
roll
dec
xor
stos
xor
sub
sbb
lret
cld
and
loopne
sub
call
inc
int3
orb
inc
xchg
xchg
jecxz
je
cmp
jl
dec
movsb
jno
inc
mov
data16
xchg
outsb
aaa
mov
ret
stos
aam
add
adc
pop
scas
push
mov
mov
lahf
and
sub
push
or
ss
mov
pop
mov
mov
pusha
out
xchg
addr16
cmpl
sahf
shrb
inc
hlt
or
dec
and
mov
fcmovbe
mov
sbb
xchg
jp
xor
fcompl
js
mov
hlt
aam
add
sbbb
std
ret
test
lds
call
rolb
js
ret
mov
mov
and
adc
out
jmp
fstpt
cmp
and
and
jp
or
sub
rorb
mov
lods
imul
cmpsl
addr16
dec
stc
adc
lea
mov
pop
dec
aas
addr16
ret
mov
pusha
add
scas
and
xchg
inc
mov
mov
push
gs
add
mov
es
ja
das
stos
cli
ja
fdiv
dec
icebp
mov
push
or
pusha
mov
push
pop
push
inc
mov
jno
xchg
shll
mov
insb
out
push
iret
pop
mov
push
dec
sub
adc
mov
in
pop
in
repz
fdivrs
add
push
and
jg
ret
repz
push
pop
adc
loop
mov
xchg
pushf
sub
jmp
out
lret
mov
xor
mov
jo
pop
adc
mov
movsl
mov
cmpsb
jne
lock
jnp
add
sbb
mov
adc
stos
cli
adc
out
push
repnz
sbb
pop
scas
lcall
adc
gs
push
out
test
push
sub
arpl
fisttpll
dec
sbb
and
jno
ja
sub
and
mov
pop
cmpsl
mov
push
sbb
mov
stos
or
fidivrs
push
aam
push
test
xor
loopne
pop
rorl
sbb
dec
fs
mov
ljmp
inc
js,pt
sub
cmp
shrb
jbe
outsl
mov
rcll
clc
aam
mov
jle
jnp
cmpsb
xchg
outsb
fstps
test
and
push
dec
xchg
push
xchg
jo
aad
or
or
popa
lret
push
das
cli
mov
inc
aaa
pop
rolb
sub
lahf
push
insb
push
cmpl
inc
xchg
stos
sbb
movsl
inc
addr16
out
mov
rcll
stos
fisubs
ret
mov
xor
jl
int3
sbb
out
shll
movsl
mov
mov
into
repnz
sbb
sub
scas
xor
mov
dec
dec
lcall
sub
repz
dec
sti
mov
out
cli
dec
cmpb
jno
or
loopne
cmp
out
sbb
mov
jb
daa
jnp
ds
pop
int3
fldl
subb
mov
mov
aas
je
push
aaa
xchg
jp
pusha
sbb
push
insb
mov
mov
aam
out
es
lret
pop
inc
inc
pop
mov
shrb
add
ficompl
xchg
imul
sub
cmp
test
jno
fisubrs
sahf
ja
out
push
and
lock
and
adcb
jnp
mov
xor
jecxz
data16
in
lock
and
inc
xor
into
cli
push
mov
push
lock
adc
ss
cwtl
gs
and
lahf
cmc
into
jl
stos
stos
sbb
bound
ljmp
out
dec
std
psllq
shrb
out
loope
add
ss
ljmp
lods
or
rorb
pop
subb
mov
dec
cmp
repnz
dec
icebp
les
lret
inc
xchg
in
push
lret
outsl
enter
and
out
lea
cmp
enter
xchg
sub
cwtl
mov
jbe
pop
and
mov
add
and
sahf
hlt
mov
sbb
ret
mov
in
cs
andb
jmp
arpl
ss
popa
mov
pop
shll
test
out
cld
xchg
imulb
xchg
jb
xchg
mov
in
mov
inc
xchg
aas
loope
mov
xchg
sbb
dec
push
mov
ret
sub
sti
mov
sub
lods
ja
cltd
sbb
sbb
or
pop
pop
cmp
xchg
xor
loopne
xchg
shrl
dec
mov
lods
leave
mov
std
repz
negb
addb
mov
cli
mov
idivb
pop
loope
and
inc
and
add
mov
in
sti
in
popf
insl
pop
pop
inc
repz
imul
jnp
jnp
adc
lret
jg
sbb
ret
xor
push
nop
ror
pop
push
test
push
lods
cmpsb
lahf
cmp
stos
in
mov
subl
dec
bound
and
out
adc
pop
xlat
sub
sahf
std
xchg
das
adc
cwtd
fxch
push
and
outsb
xchg
sbb
lds
add
sbb
fnstcw
add
pop
xchg
testl
cmp
xor
add
mov
adc
int3
or
xor
movsl
idivl
mov
mov
icebp
adcb
dec
sbbl
and
test
mov
xchg
adc
jge
scas
scas
xor
dec
or
rclb
pop
movsb
lea
stos
xor
mov
in
fucomp
shll
sbb
movsl
jns
jbe
paddd
sar
jl
in
push
sub
adc
xor
cmp
xor
inc
push
repnz
mov
scas
inc
inc
cwtl
add
jmp
xchg
cwtl
lods
add
sbb
jns
jb
ss
jns
or
std
shlb
pop
ficompl
in
scas
rorb
mov
cmp
mov
push
repz
xor
or
xchg
xchg
rcll
push
sub
cs
xor
cs
out
mov
pop
adc
repz
in
test
repz
pinsrw
lods
pop
gs
sbb
lods
lods
sub
arpl
shll
cmp
imul
lods
sbb
aad
add
mov
add
pop
les
dec
mov
sbb
stc
xchg
mov
mov
inc
sbb
daa
cmp
or
pusha
sub
jbe
cmp
adc
sbb
nop
das
cmpsb
shll
cmp
mov
pop
fldl
rcll
inc
mov
fsubl
out
mov
push
sbb
pop
in
bound
lea
pushf
mov
leave
lea
mov
shlb
js
daa
movl
or
nop
cld
stos
into
mov
fldl2e
or
adc
bound
mov
pop
loop
push
sub
andb
js
sbb
add
in
outsl
les
repz
xorb
out
repz
cmp
jmp
pop
push
popa
outsl
cmp
js
inc
pop
sub
shll
jnp
popf
sub
shlb
mov
and
inc
xorb
dec
testb
jecxz
or
sbb
negb
dec
popa
sbb
stos
clc
jmp
cltd
insl
jmp
adc
add
stc
adc
int
cmp
add
add
mov
jo
cmpsb
daa
and
inc
nopl
pop
add
lret
inc
es
gs
outsl
jg
repnz
popa
xchg
cltd
orl
push
jns
ja
dec
fimuls
pusha
sub
rcrl
add
aad
mov
lods
dec
push
cld
sub
mov
cmp
mov
out
in
in
pusha
xchg
add
iret
adcb
stos
lock
adc
rolb
aas
jne
adc
cmp
test
add
pop
jge
pop
jne
lret
into
in
cmpsl
push
into
sbb
mov
bound
out
sbbl
and
jne
xadd
inc
adc
add
in
xlat
adc
cmc
and
dec
or
sbb
dec
negl
xor
int3
mov
fldenv
andb
ss
push
mov
push
pop
inc
lcall
mov
call
loope
inc
addr16
xor
xchg
push
adc
fmulp
pop
bound
jnp
cs
mov
jl
repz
outsb
dec
mov
pop
jmp
pop
push
cmc
sub
ret
sbb
test
js
mov
shl
fisubl
fidivrl
sbb
decb
lret
pop
jg
jae
sbb
mov
xor
out
das
frstor
xor
sub
sub
ja
cmc
movsl
xor
insb
lret
or
loop
sbb
imul
lds
je
and
inc
add
push
mov
lods
pop
sbb
inc
pop
int
mov
pop
outsb
dec
shl
xlat
and
dec
imul
sbb
adc
pop
jo
imul
or
mov
push
or
stos
mov
jecxz
cmpsb
push
jmp
sahf
cs
cmova
pop
insl
push
jo
mov
inc
sysexit
xor
pop
xchg
ret
insb
mov
pop
cmpsb
pop
lods
push
xchg
idivl
adc
adc
fdiv
jg
mov
sub
rorl
movsl
pop
test
mov
test
addr16
mov
aaa
jecxz
or
gs
cld
jp
pop
lods
ljmp
fisubrl
adc
enter
xchg
sub
xlat
xchg
ficomps
mov
out
arpl
shlb
dec
testl
popa
xor
mov
sar
insb
inc
or
push
and
mov
push
pop
cmpl
push
jg
and
lahf
fistpll
xchg
icebp
push
sbb
and
test
push
in
sbb
dec
sarl
sbb
sbb
data16
jno
scas
mov
paddusw
ret
mov
nop
test
out
xlat
mov
jae
xlat
les
xchg
mov
sahf
out
xor
xchg
call
dec
in
daa
push
fcoms
sub
push
test
xor
fs
fcmovnbe
shll
lock
repnz
ret
inc
sub
aas
sub
push
scas
sarb
mov
test
jb
dec
popf
pop
or
imul
movsb
push
repnz
jmp
mov
or
rcrb
jo
out
cmp
jbe
add
aam
aaa
or
xor
cltd
sbb
jae
mov
mov
xchg
xchg
add
fs
jns
xor
inc
pop
roll
push
test
cmc
enter
mov
jno
push
jae
lds
arpl
cli
xor
push
jae
gs
iret
jp
pop
ret
mov
mov
adc
sahf
xor
push
push
ror
lods
push
stos
jge
ja
arpl
outsb
push
das
cmp
inc
dec
les
push
ret
vpsrld
or
leave
push
lock
shlb
cmp
mov
loop
add
cmp
xlat
rorb
xor
mov
or
push
cwtl
xor
or
shlb
dec
add
mov
mov
gs
aas
rcrb
jae
add
insl
adc
gs
add
aam
inc
mov
pushf
jae
icebp
out
cmpl
fisubrs
test
sub
mov
gs
jne
popf
int3
rol
mov
movsl
push
mov
mov
sub
cmpsb
es
ss
xor
sub
pop
shlb
jo
lret
cmp
push
xor
iret
cmc
mov
or
dec
shll
insl
into
xchg
in
xor
sub
cmp
jbe
loope
jl
mov
inc
mov
cmp
lds
stos
mov
rcl
jmp
cmp
sti
int3
out
popf
aas
leave
adc
scas
xchg
dec
mov
xor
cmpsl
mov
jle
mov
cmpsl
lea
stos
insl
mov
and
push
jp
or
ret
sub
sbbb
and
adc
int3
lods
mov
sub
mov
mov
jb
ud2
fcoms
gs
pop
fsubs
push
arpl
ss
jmp
adc
jg
inc
das
fisubs
cltd
xchg
jno
scas
jge
in
push
fsub
neg
cwtl
cld
xor
mov
xlat
add
xor
and
rorl
bound
enter
hlt
adc
cmp
es
cli
cmpl
or
pushf
mov
lcall
sub
daa
pushf
mov
shrl
jl
push
or
sbbb
pextrw
mov
in
mov
mov
repz
popa
bound
jnp
test
sbb
out
test
pop
jmp
inc
pop
jge
push
mov
dec
fsubrp
movsl
imul
shll
mov
arpl
aad
call
push
retw
shl
adc
sub
adc
pop
shrb
mov
sbb
sbb
call
arpl
cmp
and
xor
mov
cwtl
push
movsb
push
das
ljmp
push
shlb
inc
mov
je
jecxz
or
mov
loop
push
orb
pusha
inc
lret
jnp
push
das
mov
dec
push
cmpsb
clc
push
fadds
fisttps
xor
arpl
jmp
movsb
mov
sbb
jae
push
add
shlb
xchg
andl
pop
lahf
ja
inc
pop
test
sahf
movsb
data16
push
sub
arpl
dec
sbb
inc
inc
mov
push
mov
jecxz
lcall
push
add
jg
cwtl
or
sti
mov
mov
ljmp
popa
ret
or
dec
into
sbb
lahf
cs
rcrl
xor
jg
jge
xchg
and
push
gs
cli
jge
popa
nop
or
test
cld
adc
in
pushf
xchg
cmpsb
jns
dec
mov
mov
dec
sbb
rolb
inc
inc
xchg
pop
sbb
pop
mov
cmp
mov
push
sbb
mov
ljmp
std
push
mov
movsb
and
adc
inc
inc
xchg
mov
in
dec
dec
bound
rorl
fistps
aad
jmp
add
repz
or
insl
mov
xchg
je
ret
push
cmp
inc
leave
hlt
or
inc
push
xchg
mov
movsl
xchg
mov
pop
ret
and
xchg
cwtl
add
mov
cwtl
lcall
sbb
jmp
lods
mov
mov
js
ljmp
mov
loope
fs
sbb
repnz
stc
sbb
inc
fs
mov
aaa
lcall
adc
jns
int
push
fmull
popa
push
nop
jle
ss
lcall
sbb
xchg
ret
xlat
int3
lock
call
mov
in
icebp
inc
pop
aam
xchg
mov
xchg
repnz
js
cmp
hlt
and
mov
cmp
push
daa
movsb
stc
mov
testl
push
cmp
mov
sbb
push
lcall
jo
xor
fstpl
inc
notb
sar
repnz
jp
jbe
pop
push
lds
inc
es
insl
rcrb
test
divl
sub
cmp
cmpsb
add
xchg
mov
and
xchg
insl
fidivs
sub
inc
test
sbb
cmpsl
pop
mov
pop
sti
pop
clc
call
das
dec
push
add
mov
mov
xchg
add
je
and
and
and
fmuls
leave
xor
mov
mov
dec
mov
mov
cmp
pushf
adc
cwtl
mov
sti
pop
shlb
mov
mov
xlat
cmp
dec
movsl
cli
inc
mov
je
push
jne
lcall
xchg
push
xor
movsl
pop
js
mov
pop
mov
inc
loopne
pop
es
jp
ror
aam
xchg
fs
sub
adc
push
xchg
sub
rorl
or
mov
mov
mov
fstpt
rorb
