sub
mov
xor
mov
or
inc
add
xor
decl
push
mov
je
andl
push
lea
push
lea
push
movl
movl
movl
mov
push
call
testb
jne
testb
jne
cmpl
jne
mov
push
call
mov
pop
push
push
call
xor
pop
mov
rol
add
or
add
or
push
lea
sub
mov
xor
mov
je
inc
add
or
push
mov
je
inc
add
add
incl
inc
or
mov
movl
mov
je
inc
add
mov
jge
lea
loope
inc
add
push
push
pushl
pushl
call
test
je
inc
add
add
test
les
jne
mov
pop
mov
inc
aad
add
fs
add
or
push
lea
sub
mov
xor
mov
mov
mov
test
push
mov
je
andl
andw
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
movl
movl
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
add
add
test
inc
loopne
jne
pop
mov
pop
mov
xor
pop
call
add
leave
ret
push
lea
sub
mov
xor
mov
test
mov
push
mov
push
mov
je
andl
andl
testb
je
mov
mov
test
push
mov
jns
inc
add
add
orb
adc
add
aas
mov
pop
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
andl
lea
lea
push
pushl
lds
inc
int3
mov
movl
mov
movb
mov
push
call
test
jne
pushl
lea
push
call
testb
jne
testb
jne
testb
jne
testb
jne
xor
pop
mov
pop
xor
pop
call
add
pop
movb
movzbl
push
movzbl
push
movzbl
mov
or
shl
or
shl
or
mov
shr
movzbl
mov
imul
shr
movzbl
movzbl
imul
imul
add
add
cltd
mov
idiv
push
movzbl
lea
imul
add
cltd
pop
idiv
push
movzbl
add
imul
mov
pop
pop
cltd
pop
idiv
pop
ret
push
mov
sub
push
push
mov
shr
mov
push
pushl
mov
shr
mov
pushl
mov
shr
push
mov
mov
call
mov
mov
shr
push
mov
shr
push
pushl
call
add
cmp
mov
jb
cmp
jbe
cmpb
movb
movb
je
movzbl
shl
movzbl
mov
movzbl
movzbl
mov
mov
imul
cltd
mov
push
pop
idiv
mov
push
mov
sub
movzbl
movzbl
imul
cltd
pop
idiv
or
mov
shl
push
sub
movzbl
or
mov
imul
cltd
idiv
mov
movzbl
shl
mov
sub
movzbl
or
mov
mov
mov
sub
pop
imul
cltd
idiv
movzbl
push
add
movzbl
mov
sub
imul
cltd
pop
idiv
or
push
shl
add
movzbl
or
mov
sub
pop
imul
cltd
idiv
shl
add
movzbl
or
mov
mov
pop
pop
pop
leave
ret
push
lea
push
xor
mov
call
mov
mov
mov
push
call
test
je
xor
inc
pop
pop
ret
push
mov
push
push
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
test
jbe
xor
jmp
lea
mov
mov
test
je
lea
cmp
je
mov
add
test
jne
add
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
push
push
mov
call
pop
neg
sbb
pop
neg
pop
ret
push
mov
push
mov
test
je
push
mov
test
je
mov
push
xor
cmp
jne
cmp
je
mov
mov
mov
mov
cmp
je
pushl
mov
call
testb
jne
cmp
jne
pop
pop
xor
pop
pop
ret
mov
mov
push
push
push
call
jmp
xor
jmp
cmp
je
mov
mov
cmp
jne
cmp
je
push
push
mov
call
jmp
cmp
jne
xor
jmp
push
jmp
push
mov
cmp
jge
pushl
pushl
pushl
pushl
push
pushl
mov
call
pop
ret
push
mov
push
mov
cmp
push
mov
push
push
jg
mov
add
shl
or
add
add
add
mov
cmp
jg
lea
shl
or
add
add
add
mov
cmp
jle
mov
add
mov
shl
mov
mov
or
add
add
mov
incl
mov
mov
mov
mov
mov
incl
mov
mov
sub
shr
add
mov
mov
add
cmp
jle
mov
cmp
movzbl
jg
mov
shl
or
add
add
add
jge
jl
mov
dec
push
lea
call
dec
push
lea
call
pop
pop
pop
pop
pop
leave
ret
movzwl
mov
shl
mov
or
add
add
mov
incl
mov
mov
mov
mov
mov
incl
mov
mov
sub
shr
add
mov
mov
add
decl
cld
shl
or
add
add
mov
decl
decl
dec
adc
or
add
add
mov
incl
mov
mov
mov
mov
mov
incl
mov
mov
sub
shr
add
mov
mov
add
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
movzwl
push
mov
push
xor
test
movl
je
lea
lea
test
jl
add
add
mov
mov
lea
mov
movzwl
add
cmp
je
cmp
jge
jmp
lea
movzwl
mov
mov
sub
cmp
mov
jg
mov
shl
or
add
add
mov
sub
mov
jne
xor
test
mov
je
cmp
je
lea
lea
add
subl
mov
jne
pop
pop
pop
pop
add
ret
cmp
jl
jmp
movzwl
mov
shl
mov
or
add
inc
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
mov
mov
add
mov
jmp
mov
mov
jmp
test
je
cmp
je
movzwl
mov
sub
mov
mov
cmp
jg
mov
shl
or
add
add
mov
sub
movzwl
mov
sub
mov
mov
cmp
jg
mov
shl
or
add
add
mov
mov
add
cmp
jg
shl
or
add
mov
jmp
cmp
mov
jg
movzwl
sub
mov
mov
cmp
jg
mov
shl
or
add
add
mov
mov
add
cmp
jg
shl
or
add
mov
jmp
movzwl
mov
shl
mov
or
add
inc
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
mov
mov
add
mov
mov
jmp
movzwl
mov
shl
mov
or
add
inc
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
mov
mov
add
mov
mov
jmp
movzwl
mov
shl
mov
or
add
inc
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
mov
mov
add
mov
mov
jmp
mov
lea
jmp
mov
shl
mov
or
movzbl
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
add
mov
mov
jmp
mov
shl
mov
or
movzbl
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
add
mov
mov
jmp
movzwl
sub
mov
mov
cmp
jg
mov
shl
or
add
add
mov
mov
add
cmp
jle
mov
shl
mov
or
movzbl
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
add
mov
mov
jmp
shl
or
add
mov
jmp
add
add
loop
dec
adc
or
add
inc
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
mov
mov
add
mov
mov
jmp
mov
mov
lea
lea
cmp
push
push
jne
or
pop
pop
ret
mov
mov
movzbl
cmp
jne
sub
sub
jmp
xor
inc
mov
and
shl
mov
shr
and
neg
sbb
neg
ret
push
mov
push
mov
andl
push
push
mov
lea
mov
push
call
cmpl
jne
test
jne
cmpl
jne
lea
push
mov
call
test
jne
mov
lea
push
mov
mov
call
cmp
jne
lea
push
call
mov
xor
inc
mov
and
shl
mov
shr
shl
or
lea
not
and
mov
lea
push
lea
call
or
pop
pop
pop
pop
pop
ret
mov
test
je
mov
test
jne
mov
mov
mov
mov
mov
cmp
je
ret
push
mov
mov
mov
pop
jmp
push
mov
test
jne
pop
ret
int3
int3
int3
int3
int3
movzwl
push
push
mov
xor
test
push
movl
je
lea
lea
test
movw
jl
push
lea
add
mov
movzwl
add
cmp
je
cmp
jge
mov
add
xor
test
mov
je
cmp
je
lea
lea
add
sub
jne
pop
pop
pop
pop
ret
cmp
jl
jmp
mov
mov
jmp
test
je
cmp
mov
mov
je
add
add
jmp
cmp
mov
jg
addw
jmp
mov
lea
jmp
addw
jmp
push
mov
pushl
lea
push
call
pushl
lea
push
call
lea
push
call
add
push
pop
movzbl
cmpw
jne
dec
cmp
jge
mov
imul
add
add
pop
ret
sub
push
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jge
mov
sub
push
lea
add
mov
mov
mov
mov
mov
movzwl
movzwl
add
cmp
jg
cmp
mov
jg
addw
cmp
jge
xor
movzwl
movzwl
add
imul
add
cmpl
je
mov
movzwl
add
imul
add
mov
mov
add
subl
jne
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
sub
mov
mov
jmp
addl
mov
mov
jmp
lea
cmpw
lea
je
addw
addw
addw
lea
sub
test
jg
test
je
mov
mov
mov
mov
movzwl
test
je
mov
mov
lea
lea
mov
subl
sub
cmp
jg
lea
mov
movzwl
cmp
jne
mov
sub
mov
test
jne
mov
sub
sub
test
mov
mov
jne
jnp
inc
add
mov
xchg
jmp
scas
call
add
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
mov
add
push
mov
mov
mov
movl
mov
movl
jle
xor
lea
cmp
je
addl
mov
mov
mov
mov
add
cmp
jl
mov
cmp
jl
mov
mov
mov
cltd
sub
sar
cmp
jl
lea
mov
mov
jmp
lea
mov
lea
cmp
mov
jg
mov
mov
jge
mov
mov
movzwl
movzwl
cmp
jb
jne
mov
cmp
ja
add
mov
mov
movzwl
movzwl
cmp
jb
je
mov
mov
add
mov
cmp
jle
mov
mov
mov
sub
sub
cmp
mov
mov
mov
jge
mov
mov
mov
mov
mov
mov
lea
cmp
mov
mov
movl
jl
mov
mov
mov
cmp
jge
mov
mov
movzwl
movzwl
cmp
jb
jne
mov
cmp
ja
add
mov
mov
movzwl
movzwl
cmp
jb
je
mov
mov
add
mov
cmp
jle
mov
mov
mov
mov
mov
or
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
cmp
jb
movzbl
add
mov
movzwl
mov
mov
mov
mov
add
mov
cmp
mov
mov
jg
mov
mov
jge
mov
mov
movzwl
movzwl
cmp
jb
jne
mov
cmp
ja
add
mov
mov
movzwl
movzwl
cmp
jb
je
mov
mov
add
mov
cmp
jle
mov
mov
mov
mov
cmp
jge
addl
mov
mov
mov
mov
mov
call
mov
lea
push
call
add
pop
pop
pop
add
ret
mov
jmp
mov
cmp
jbe
jmp
movzbl
jmp
mov
cmp
ja
jmp
mov
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
lea
xor
mov
sub
lea
mov
add
add
movzwl
mov
add
cmp
jle
test
jl
xor
push
movzwl
test
je
movzwl
movzwl
add
mov
xor
mov
and
or
sub
shr
add
test
jg
shr
mov
add
cmp
jle
pop
mov
pop
pop
xor
call
add
ret
push
mov
push
cmpl
push
jle
mov
cmpl
jne
mov
call
mov
lea
push
call
lea
push
call
pop
pop
mov
call
add
mov
add
add
shr
shr
cmp
mov
jbe
mov
lea
cmp
jbe
cmpl
je
cmp
je
mov
cmp
jg
lea
shl
or
add
add
add
mov
inc
push
mov
inc
push
mov
call
lea
push
lea
push
mov
call
add
call
test
pop
je
mov
call
leave
ret
lea
mov
shl
mov
or
add
mov
add
incl
mov
mov
mov
mov
mov
incl
mov
sub
shr
add
mov
mov
add
pushl
leave
cmp
sete
mov
ret
push
mov
mov
cmp
je
mov
test
jne
pop
ret
push
mov
cmpl
je
mov
call
test
jne
mov
mov
push
call
andl
mov
mov
test
je
mov
mov
mov
mov
push
call
pop
ret
mov
pop
ret
mov
mov
test
je
pushl
pushl
push
call
add
cmp
je
mov
mov
xor
ret
push
mov
push
mov
mov
test
je
mov
lea
push
pushl
pushl
push
call
test
js
mov
push
xor
add
adc
mov
cmp
jne
xor
mov
mov
pop
pop
pop
ret
xor
jmp
mov
test
push
mov
mov
je
mov
test
je
push
push
call
mov
push
push
push
call
xor
pop
ret
mov
call
jmp
push
mov
mov
push
mov
test
jne
mov
test
jne
pop
pop
ret
mov
lea
push
push
call
mov
cmp
je
mov
push
push
call
jmp
mov
mov
push
movzbl
shr
and
neg
sbb
and
and
or
mov
mov
xor
cmp
mov
jne
and
cmp
mov
jne
mov
testb
jne
mov
push
push
call
pop
pop
pop
ret
mov
cmp
jne
jmp
cmp
jne
jmp
push
mov
push
mov
mov
mov
call
test
jne
push
pushl
mov
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
and
lea
push
push
pushl
call
mov
mov
pop
pop
pop
ret
xor
jmp
push
mov
push
mov
mov
mov
call
test
jne
push
pushl
mov
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
and
lea
push
push
pushl
call
mov
mov
pop
pop
pop
ret
xor
jmp
push
mov
mov
push
mov
call
test
mov
jne
mov
mov
call
test
jne
andl
cmpl
jne
lea
push
pushl
push
call
mov
mov
mov
pop
pop
ret
push
mov
sub
mov
push
mov
push
mov
cmpb
mov
mov
push
mov
je
mov
mov
mov
sub
cmp
jbe
inc
cmpb
jne
push
lea
push
pushl
call
mov
test
mov
je
andl
lea
push
push
push
call
add
cmpl
je
push
call
pop
mov
xor
inc
push
add
lea
mov
mov
mov
call
testb
mov
jne
testb
jne
mov
test
je
mov
push
mov
call
pop
add
mov
push
mov
lea
mov
call
mov
push
call
pop
pop
pop
leave
ret
push
push
push
pushl
mov
call
test
jne
push
push
call
test
pop
je
mov
andl
push
movl
movl
call
test
mov
je
mov
push
call
test
je
mov
mov
test
je
mov
push
push
call
pop
pop
ret
xor
jmp
xor
jmp
push
mov
sub
push
mov
mov
mov
call
test
js
mov
push
push
xor
mov
mov
mov
mov
push
mov
lea
mov
call
mov
mov
push
call
cmp
je
add
add
orb
call
mov
mov
lea
push
push
push
call
test
jne
mov
cmp
je
lea
push
mov
mov
push
call
cmpl
jl
mov
push
lea
mov
mov
call
mov
mov
lea
push
push
push
call
test
jne
mov
cmp
je
push
lea
mov
mov
mov
mov
mov
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
call
test
lea
jne
mov
push
mov
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
call
test
jne
pushl
add
pushl
pushl
push
call
test
jne
pushl
pushl
pushl
push
call
lea
mov
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
mov
mov
mov
mov
test
push
push
je
pushl
mov
push
push
mov
mov
mov
call
call
pushl
mov
push
push
inc
mov
call
call
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
mov
and
je
push
mov
test
push
mov
jne
mov
mov
push
mov
call
cmp
jne
mov
inc
push
mov
call
test
je
test
jne
mov
mov
pop
pop
pop
leave
ret
mov
mov
test
je
mov
jmp
mov
mov
test
je
mov
jmp
xor
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
inc
mov
inc
cmp
jb
lea
mov
movl
call
test
je
mov
xor
cmp
je
mov
lea
mov
mov
mov
push
mov
pop
lea
mov
movl
mov
mov
movzwl
sub
je
dec
je
dec
jne
cmpw
push
jne
movl
add
push
push
lea
movl
mov
movl
call
push
lea
push
call
pushl
pushl
call
pop
pop
cmpl
je
mov
cmpl
je
andl
lea
mov
mov
lea
push
lea
mov
push
mov
mov
movb
call
mov
andl
lea
mov
mov
lea
push
pushl
mov
mov
movb
call
push
pushl
call
pushl
mov
pushl
call
pushl
pushl
call
add
test
je
jge
testb
jne
test
jg
mov
movl
pushl
pushl
call
pop
pop
mov
jmp
xor
mov
pop
pop
xor
pop
call
add
leave
ret
cmpw
push
je
movl
inc
jmp
mov
movl
jmp
push
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
pop
ret
push
mov
and
sub
push
push
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
mov
mov
add
xor
add
cmp
ja
pushl
lea
push
call
inc
add
jne
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
mov
push
push
mov
push
mov
xor
push
mov
mov
mov
call
test
je
mov
cmp
jne
mov
lea
movl
mov
movl
call
mov
mov
lea
lea
xor
mov
mov
movl
movl
mov
movb
mov
mov
mov
mov
mov
cmp
je
cmpb
je
mov
test
mov
mov
mov
lea
jne
test
je
mov
cmp
jbe
mov
andl
movb
mov
mov
mov
mov
mov
add
jmp
push
mov
je
dec
call
mov
mov
mov
lea
mov
mov
lea
push
mov
push
push
mov
push
mov
push
push
movl
movl
movl
movb
call
mov
test
js
cmpl
je
push
lea
call
mov
test
jne
add
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
sub
cmpl
je
andl
lea
push
pushl
mov
call
test
pop
pop
je
mov
mov
call
mov
lea
push
pushl
mov
movl
call
leave
ret
push
mov
xor
push
mov
mov
mov
mov
mov
mov
push
mov
push
mov
mov
mov
mov
push
mov
mov
mov
call
lea
push
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
cmpl
jne
andl
add
lea
call
mov
add
lea
call
mov
flds
pop
fstps
pop
flds
fstps
flds
fstps
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
fldl
fsubl
fstpl
fldl
fsubl
fstpl
fldl
faddl
faddl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
faddl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
mov
push
mov
cmp
ja
test
je
sub
mov
mov
mov
cmp
je
cmp
je
push
pushl
pushl
call
add
add
add
mov
pop
ret
mov
mov
push
call
pop
mov
jmp
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jmp
lea
mov
sub
mov
mov
lea
sub
cmp
jae
mov
cmpl
jne
pop
pop
pop
pop
ret
mov
add
push
add
push
call
add
mov
add
cmp
jb
mov
mov
lea
movzbl
mov
mov
shl
movzbl
xor
and
mov
cmp
jb
mov
mov
cmp
jae
mov
add
cmp
jae
sub
cmp
jbe
mov
mov
push
add
push
push
call
add
add
mov
pop
pop
pop
pop
ret
lea
cmp
jae
sub
add
sub
cmp
ja
mov
push
add
push
push
call
add
add
pop
pop
pop
pop
ret
mov
push
lea
push
push
call
add
sub
sub
sub
mov
mov
lea
lea
movzwl
sub
cmp
jae
xor
sub
mov
jne
mov
mov
lea
lea
movzwl
sub
cmp
jae
xor
sub
mov
jne
add
jmp
sub
jmp
sub
jmp
mov
jmp
mov
cmpl
je
jmp
int3
int3
int3
int3
push
push
push
mov
push
mov
or
mov
cmp
jb
cmp
jb
mov
mov
mov
mov
shl
mov
movzbl
xor
and
mov
and
mov
mov
mov
mov
mov
and
mov
movzwl
test
mov
mov
mov
mov
je
mov
mov
sub
sub
cmp
ja
push
call
add
mov
cmpl
jb
mov
sub
mov
mov
mov
movzwl
mov
mov
mov
sub
mov
add
movzbl
movzbl
add
lea
add
cmp
jb
movzwl
shr
movzbl
add
mov
sub
cmp
je
xor
mov
sub
cmp
ja
mov
cmp
jb
add
mov
add
mov
mov
mov
mov
movzbl
shl
mov
xor
and
mov
mov
movzwl
and
mov
mov
movzwl
mov
mov
or
mov
add
jne
jmp
mov
mov
mov
mov
mov
movw
mov
mov
mov
add
movzbl
add
mov
lea
sub
cmp
je
xor
add
add
test
je
mov
test
jge
xor
mov
sub
push
push
xor
call
mov
mov
mov
add
call
mov
cmp
jne
pop
pop
pop
xor
pop
ret
add
mov
mov
add
mov
movl
movzbl
mov
shl
movzbl
xor
and
mov
jmp
movzwl
movzbl
jmp
push
call
mov
add
cmpl
je
test
jne
mov
cmp
jne
mov
mov
test
jl
mov
add
mov
sub
push
push
call
mov
mov
mov
add
call
mov
cmpl
jne
cmp
jne
pop
pop
pop
mov
pop
ret
cmp
jae
pop
pop
pop
xor
pop
ret
cmp
jne
pop
pop
pop
mov
pop
ret
xor
jmp
mov
jmp
mov
jmp
xor
jmp
int3
int3
int3
int3
sub
mov
mov
push
mov
mov
mov
push
mov
mov
mov
add
cmp
push
mov
lea
ja
movl
cmp
mov
lea
mov
mov
mov
mov
jae
mov
cmp
ja
mov
jmp
lea
nop
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
cmp
jne
add
add
lea
mov
add
add
cmp
jne
mov
add
add
cmp
jne
mov
add
add
cmp
jne
mov
add
add
cmp
jne
mov
add
add
cmp
jne
mov
add
add
cmp
jne
mov
add
add
cmp
jne
mov
add
add
cmp
jne
cmp
jb
mov
mov
sub
add
cmp
lea
jle
cmp
mov
mov
jge
movzbl
mov
mov
mov
mov
and
mov
mov
movzwl
cmp
jbe
subl
jne
mov
cmp
ja
mov
pop
pop
pop
add
ret
mov
jmp
sub
add
mov
jmp
mov
jmp
shrl
jmp
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
lea
mov
cmp
jb
cmp
jb
mov
mov
mov
mov
shl
mov
movzbl
xor
and
mov
and
mov
mov
mov
mov
mov
and
mov
movzwl
mov
mov
mov
mov
test
mov
mov
mov
mov
mov
je
cmp
jae
mov
mov
sub
sub
cmp
ja
push
call
add
cmp
mov
ja
cmp
jne
mov
mov
cmp
jae
cmpl
filds
add
add
cmp
xchg
mov
mov
add
add
mov
mov
mov
add
movzbl
add
lea
mov
sub
cmp
je
mov
add
addl
cmpl
jne
pop
pop
pop
xor
pop
ret
push
call
mov
add
cmpl
je
add
jne
cmp
ret
add
add
jne
mov
mov
test
jl
mov
add
mov
sub
push
push
call
mov
mov
mov
add
call
mov
cmpl
je
cmpl
jne
pop
pop
pop
mov
pop
ret
cmp
ja
mov
sub
mov
mov
mov
lea
mov
sub
movzwl
mov
mov
mov
mov
sub
mov
add
movzbl
movzbl
add
lea
add
cmp
jae
movzwl
movzbl
add
mov
sub
cmp
je
add
add
add
mov
mov
sub
add
add
mov
jmp
lea
add
mov
cmp
ja
mov
mov
mov
shl
mov
movzbl
xor
and
mov
mov
movzwl
and
mov
mov
movzwl
mov
mov
mov
addl
jne
add
cmpl
mov
mov
movl
mov
je
jmp
add
addl
mov
fcmove
inc
add
cmp
jae
pop
pop
pop
xor
pop
ret
movzwl
shr
movzbl
jmp
xor
jmp
xor
jmp
push
mov
mov
mov
push
mov
cmp
jbe
mov
test
je
push
pushl
pushl
call
mov
add
add
add
sub
mov
sub
mov
add
cmpl
je
pop
pop
ret
mov
mov
jmp
push
mov
mov
mov
call
test
jne
push
mov
push
mov
push
pushl
push
call
test
js
pop
pop
pop
ret
test
push
mov
je
lea
push
mov
push
call
test
je
mov
push
mov
call
test
jne
xor
pop
jmp
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
jmp
xor
jmp
in
inc
add
push
push
mov
call
xor
cmp
jne
mov
cmp
mov
jne
orl
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
push
mov
call
test
mov
mov
jne
orl
pop
mov
pop
pop
ret
pushl
mov
mov
push
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jne
mov
test
je
add
mov
ret
add
movl
mov
ret
mov
mov
cmp
jne
jmp
jmp
push
mov
and
mov
sub
test
push
push
je
xor
cmp
je
xor
pop
pop
mov
pop
ret
mov
mov
test
je
pushl
mov
pushl
call
ret
call
test
jl
movsbl
push
mov
test
je
testb
jne
testb
jne
push
pop
push
push
push
pushl
call
pop
ret
push
jmp
push
jmp
push
push
push
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
xor
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
movb
movb
movl
mov
pop
ret
push
mov
call
test
js
mov
mov
ljmp
call
xor
pop
ret
push
push
call
test
pop
je
mov
call
mov
test
je
mov
push
call
mov
mov
call
test
push
js
mov
mov
pop
pop
ret
xor
jmp
push
mov
push
mov
andl
cmpl
jne
lea
push
push
call
test
pop
js
push
mov
mov
push
pushl
push
call
mov
mov
push
call
pop
mov
pop
pop
pop
ret
mov
jmp
mov
incl
xor
ret
jmp
push
mov
test
push
je
lea
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
xor
jmp
push
mov
push
push
mov
push
mov
lea
add
push
mov
movl
mov
call
cmp
je
push
push
push
xor
push
inc
call
mov
mov
push
call
andl
mov
test
mov
jne
test
jne
testb
je
push
call
pop
pop
mov
pop
leave
ret
lea
push
call
test
pop
jne
push
call
pop
jmp
mov
test
jne
mov
test
jne
or
ret
push
push
mov
mov
test
movl
jne
mov
test
jne
lea
push
mov
call
mov
test
jne
mov
test
mov
pop
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
andl
call
add
push
or
mov
call
test
je
push
call
pop
jmp
push
mov
decl
mov
je
pop
ret
movl
movl
pushl
pushl
call
pop
pop
cmpl
je
lea
push
call
pop
push
call
pop
xor
jmp
push
xor
xor
inc
mov
mov
mov
mov
movl
movl
mov
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
xor
ret
mov
test
je
mov
mov
test
jne
mov
ret
push
mov
and
sub
cmpb
push
jne
pop
mov
pop
ret
mov
test
jne
ret
andl
andl
ret
mov
mov
shl
push
lea
shl
add
cmp
jne
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
cmp
je
cmp
mov
push
je
cmp
je
cmp
je
fistpll
je
andl
cmpl
pop
jne
lea
push
push
push
call
mov
mov
mov
pop
ret
mov
mov
push
call
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
test
je
lea
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
test
je
lea
jmp
andl
jmp
push
mov
push
push
cmpb
jne
push
mov
mov
push
xor
cmp
movb
jne
mov
cmp
push
je
mov
shr
test
jbe
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
pop
pop
pop
leave
ret
xor
jmp
xor
jmp
push
push
cltd
pop
idiv
sub
je
dec
jne
lea
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
jmp
push
mov
lea
mov
or
lock
dec
jne
movl
lea
call
push
call
pop
xor
pop
ret
push
mov
push
xor
cmp
je
push
mov
cmp
je
push
push
call
cmp
pop
je
mov
mov
mov
mov
mov
movl
add
add
je
mov
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
push
push
push
pushl
lea
call
add
add
je
test
js
mov
push
call
xor
pop
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
lea
call
push
pushl
mov
pushl
push
call
test
js
mov
push
call
test
jne
mov
lea
call
xor
lea
call
mov
pop
mov
pop
ret
mov
call
jmp
mov
jmp
mov
push
pushl
push
call
xor
cmp
setne
ret
push
mov
sub
mov
xor
mov
push
movzwl
mov
and
neg
push
sbb
inc
cmpl
mov
je
test
jne
movsbl
andl
and
shr
push
lea
mov
lea
call
lea
push
lea
push
push
call
add
test
js
push
pushl
mov
call
pushl
mov
call
mov
lea
push
mov
call
mov
test
mov
je
andl
andw
lea
lea
mov
mov
movl
movl
mov
call
test
je
mov
mov
push
push
push
call
pushl
andl
mov
lea
call
mov
mov
push
call
movzbl
push
push
lea
call
lea
call
pushl
add
call
pop
pop
lea
call
lea
call
mov
pop
xor
pop
call
leave
ret
testb
je
mov
call
test
jne
jmp
push
mov
push
push
cmpl
je
push
mov
cmpl
je
mov
push
push
mov
movl
call
push
call
test
pop
pop
je
mov
mov
push
mov
mov
call
movl
mov
mov
call
pop
test
je
pushl
mov
push
push
call
pushl
mov
call
pop
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
push
movl
xor
mov
lea
mov
push
movl
mov
movl
call
inc
add
lea
mov
push
lea
mov
call
mov
mov
push
call
mov
pop
leave
ret
mov
test
je
pushl
add
pushl
pushl
push
call
ret
push
mov
push
mov
test
je
push
mov
mov
test
je
mov
push
mov
push
call
test
js
mov
mov
push
call
test
mov
je
mov
push
call
mov
test
je
mov
test
je
push
mov
call
mov
lea
call
mov
pop
pop
pop
pop
ret
mov
jmp
movzbl
shr
and
cmp
je
push
call
test
je
push
mov
test
mov
mov
jne
push
call
jmp
call
shl
xor
and
xor
pop
ret
mov
andl
mov
mov
test
jne
ret
mov
push
push
push
call
jmp
mov
ret
push
mov
sub
andl
push
push
push
pushl
lea
push
movl
movl
call
lea
push
pushl
movl
pushl
pushl
pushl
call
test
je
mov
mov
cmp
ja
inc
movzwl
movzwl
mov
call
mov
test
je
mov
cmp
je
inc
mov
lea
push
push
lea
pop
call
cmpl
jle
xor
mov
mov
lea
lea
cmp
je
cmpl
jne
mov
mov
call
incl
movzwl
lea
cmp
jl
mov
cmpl
jne
movl
mov
mov
cmp
je
inc
mov
mov
call
mov
mov
push
lea
call
push
push
push
lea
push
mov
call
lea
call
pushl
pushl
call
pop
xor
pop
inc
pop
pop
pop
leave
ret
mov
push
pushl
mov
mov
call
pop
ret
push
mov
push
push
push
mov
mov
mov
push
test
je
mov
cmp
je
mov
mov
push
call
test
je
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
je
test
mov
je
cmpl
je
cmpl
je
cmpl
je
push
mov
call
mov
mov
mov
mov
movzbl
push
push
mov
push
lea
push
push
add
call
movzbl
mov
add
push
push
push
lea
push
lea
push
add
call
movzbl
mov
add
push
push
push
lea
push
lea
push
add
call
movzbl
mov
add
push
push
push
lea
push
lea
push
add
call
xor
add
cmp
je
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
pop
pop
ret
test
je
movb
movb
movb
movb
jmp
push
pushl
push
pop
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
je
mov
mov
mov
xor
pop
pop
ret
mov
movl
jmp
push
mov
decl
mov
je
pop
ret
push
mov
movl
pushl
movl
call
push
call
pop
pop
xor
pop
jmp
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
push
mov
push
push
push
push
push
call
mov
call
mov
lea
movl
xor
cmp
jne
add
decl
jne
mov
cltd
filds
inc
or
add
add
push
call
lea
call
lea
call
mov
pop
mov
mov
pop
leave
ret
mov
mov
call
jmp
mov
test
movl
movl
je
push
call
pop
push
push
lea
call
lea
call
lea
mov
mov
push
xor
mov
call
push
push
push
push
mov
call
mov
cmp
je
mov
call
test
je
pop
lea
pop
jmp
push
mov
sub
push
mov
cmpl
je
mov
orl
push
push
mov
push
mov
mov
movl
call
mov
test
pop
mov
je
mov
push
call
push
lea
push
lea
call
test
jne
cmpl
je
pop
xor
pop
pop
leave
ret
mov
test
je
mov
mov
test
mov
jne
xor
ret
mov
mov
test
mov
mov
jne
xor
ret
mov
push
call
jmp
pushl
andl
lea
mov
movl
movl
mov
andw
push
call
mov
ret
sub
push
mov
test
je
push
mov
push
push
xor
cmp
mov
jl
test
jne
mov
test
jne
mov
test
jne
mov
mov
test
jne
mov
test
mov
jle
mov
mov
xor
jmp
lea
cmpb
je
add
add
cmp
jl
test
jne
pop
pop
pop
pop
add
ret
movl
jmp
mov
mov
jmp
lea
cmp
jae
mov
mov
push
mov
sub
push
add
push
call
mov
pop
pop
pop
pop
add
ret
push
mov
mov
test
jne
mov
test
mov
pop
jne
xor
ret
mov
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
cmpw
push
push
je
mov
mov
mov
mov
jmp
lea
mov
movzwl
cmp
je
test
je
cmp
mov
je
cmp
je
mov
mov
mov
add
add
mov
cmpw
jne
mov
pop
pop
pop
add
ret
mov
sub
test
je
cmp
je
mov
mov
movw
mov
add
push
push
add
push
call
add
test
je
mov
mov
cmp
mov
jne
mov
add
call
test
mov
je
mov
mov
mov
movzwl
cmp
lea
je
lea
test
je
mov
cmp
je
mov
mov
mov
add
movzwl
add
cmp
jne
mov
cmp
je
mov
mov
lea
push
push
movw
mov
add
push
push
call
add
test
jne
mov
mov
cmp
jne
mov
mov
jmp
add
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
movzwl
mov
xor
test
mov
mov
mov
je
mov
test
je
cmpw
jne
cmpw
je
xor
test
je
xor
movzwl
test
je
cmp
jg
cmp
jne
test
jne
cmp
jne
mov
add
lea
movzwl
test
jne
test
jne
xor
cmpb
jne
xor
cmp
jne
test
jne
push
mov
cmpw
je
add
mov
test
jne
mov
push
call
add
test
je
mov
mov
lea
push
call
add
test
mov
je
lea
mov
mov
mov
mov
add
push
push
push
call
movzwl
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cmpw
je
mov
test
mov
mov
mov
mov
je
mov
test
jne
xor
pop
pop
pop
pop
pop
ret
cmp
jg
cmp
je
movb
jmp
xor
jmp
cmpw
jne
movzwl
cmp
je
test
jne
mov
mov
jmp
cmp
jne
mov
jmp
cmp
jne
jmp
cmpl
je
mov
mov
push
push
push
call
add
pop
pop
pop
xor
pop
pop
ret
xor
jmp
mov
lea
xor
inc
lock
inc
ret
mov
mov
test
je
push
pushl
lea
call
xor
pop
ret
push
mov
sub
call
mov
test
je
push
xor
cmp
je
mov
pop
leave
ret
push
lea
mov
movl
movl
movl
call
push
push
push
lea
push
lea
push
call
add
lea
call
cmp
je
mov
push
add
push
pushl
call
add
lea
call
mov
jmp
push
mov
sub
call
mov
test
je
push
xor
cmp
je
mov
pop
leave
ret
push
lea
mov
movl
movl
movl
call
push
push
push
lea
push
lea
push
call
add
lea
call
cmp
je
mov
push
add
push
pushl
call
add
lea
call
mov
jmp
mov
mov
test
je
call
xor
ret
push
lea
sub
mov
xor
mov
mov
andl
andw
push
mov
lea
lea
add
push
mov
mov
mov
push
movl
movl
call
test
js
lea
call
test
mov
je
testb
jne
testb
jne
xor
mov
xor
pop
call
add
leave
ret
mov
add
push
call
test
pop
jne
jmp
push
mov
sub
push
xor
cmp
push
push
mov
je
mov
call
test
jne
mov
pop
pop
pop
leave
ret
lea
mov
push
lea
push
lea
movl
mov
call
mov
test
jne
mov
lea
push
push
mov
mov
push
call
test
mov
jne
cmp
je
mov
lea
call
mov
jmp
push
push
push
pushl
push
pushl
pushl
call
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
push
mov
mov
mov
call
add
jne
mov
mov
call
test
je
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
push
push
je
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
jmp
mov
cmp
jb
push
mov
andl
xor
push
pop
mov
mul
seto
neg
or
push
call
mov
neg
sbb
pop
and
add
pop
ret
push
mov
push
lea
push
call
test
js
mov
mov
push
pushl
push
call
mov
test
mov
js
mov
mov
mov
pop
leave
ret
push
push
call
pop
xor
cmp
je
movl
mov
mov
mov
mov
mov
cmp
je
mov
push
call
pushl
mov
push
push
call
push
mov
push
call
pop
pop
ret
xor
jmp
push
mov
decl
mov
jne
movl
mov
test
push
mov
movl
je
push
call
andl
pop
andl
push
call
pop
xor
pop
pop
ret
mov
test
push
push
je
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
jmp
mov
cmp
jb
push
mov
andl
push
mov
call
mov
neg
sbb
pop
and
add
pop
ret
push
mov
push
lea
push
push
push
call
add
test
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
pop
pop
ret
xor
jmp
push
mov
decl
mov
jne
movl
mov
test
push
mov
movl
je
push
call
andl
pop
andl
push
call
pop
xor
pop
pop
ret
push
mov
push
mov
testb
je
mov
test
mov
jne
test
jne
mov
mov
mov
mov
mov
and
or
mov
adcl
sub
push
push
push
push
push
push
lea
push
call
test
push
add
lea
in
mov
cmpsb
pop
lahf
add
cmc
add
add
add
addl
jne
add
add
add
pop
mov
fwait
movsb
loope
sti
add
add
mov
add
mov
add
mov
in
call
push
push
push
push
push
lea
push
call
add
mov
add
mov
or
addl
pusha
xorb
hlt
xlat
cwtl
scas
cwtl
add
add
cmpsb
add
add
add
add
add
jmp
fadds
pop
shll
add
pop
sarl
add
sub
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
cmc
rcll
mov
mov
add
insb
add
add
add
add
std
jmp
in
add
mov
add
shrl
add
add
add
cltd
mov
mov
add
mov
push
fcmovne
add
add
sahf
cltd
clc
add
sub
pop
push
push
push
push
push
push
push
call
add
loop
push
lret
add
add
add
je
push
fsin
jae
mov
mov
add
add
popa
add
outsl
int3
mov
add
add
popa
testb
fchs
lcall
add
lcall
das
add
add
addr16
call
test
add
ljmp
ljmp
out
add
addb
add
add
add
pop
outsl
add
test
lds
lret
in
cmp
enter
roll
add
add
add
add
js
add
add
sub
pop
push
call
push
push
push
push
call
ljmp
xchg
cmpsl
add
scas
pop
cwtl
add
xchg
popf
sarl
mov
add
add
xchg
in
push
mov
add
lcall
add
add
sub
pop
jmp
push
push
call
pop
add
insb
push
add
mov
jne
je
incb
add
jbe
sahf
jne
add
movb
movsl
ja
mov
xchg
fistps
cmpl
push
enter
in
add
loope
pop
add
mov
insb
rcl
movsb
add
insb
xchg
add
roll
mov
push
lea
push
push
push
push
push
lea
push
push
push
call
push
loopne
mov
add
mov
add
jnp
imull
add
add
aad
test
out
add
add
add
mov
add
filds
lcall
pop
hlt
push
push
push
push
lea
push
push
push
call
add
ret
add
add
int3
add
popa
add
js
jl
add
jnp
add
js
add
call
add
mov
add
add
popf
add
add
mov
add
add
arpl
mov
mov
add
ret
addb
pop
push
add
add
out
lods
add
xchg
gs
pop
add
push
push
push
push
push
lea
push
push
push
push
call
add
jo
mov
mov
add
int3
fildl
pushf
add
mov
mov
add
add
mov
add
jne
add
add
fcompl
ret
add
add
add
push
push
push
push
lea
push
call
mov
lcall
jp
add
add
add
ret
add
popf
bound
pop
ficoml
mov
imul
out
add
jge
add
add
movsl
add
lds
fcoms
xchg
mov
insb
add
add
pushf
add
add
push
push
ret
lea
mov
add
push
std
je
add
pop
out
roll
pop
add
out
int3
iret
iret
push
lea
push
push
push
lea
push
lea
push
call
add
cld
pop
rolb
add
mov
xchg
mov
lds
add
lock
xchg
add
testb
mov
shl
pop
bound
roll
xchg
add
lahf
jb
add
jae
add
add
add
add
lods
pop
add
add
xchg
pop
add
out
sub
pop
xor
push
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
add
sti
push
add
xchg
pusha
push
mov
mov
mov
mov
add
add
mov
add
iret
ja
data16
xchg
clc
scas
add
movsl
add
add
lahf
add
push
int
out
mov
mov
aam
int
jb
movb
pop
add
push
push
inc
shl
not
add
push
xor
add
rol
xor
xor
sub
rol
add
dec
pop
sub
pop
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
mov
add
add
loope
add
mov
pop
add
xchg
mov
mov
add
out
add
mov
add
fiaddl
lock
add
clc
add
lret
add
mov
roll
add
arpl
movsb
loope
pusha
add
leave
jecxz
add
test
gs
sub
pop
pushl
push
push
call
arpl
lret
add
jl
push
vprotd
sahf
lods
add
xchg
imul
addr16
add
add
add
out
push
add
sub
pop
call
mov
push
push
push
push
lea
push
push
push
push
push
call
add
fadds
add
ja
jl
mov
cmpsb
test
lea
lcall
enter
jb
mov
nop
xchg
add
rorl
push
fdivs
cmpsb
add
sar
push
add
push
imul
pop
sub
pop
movl
push
lea
push
push
push
lea
push
push
push
push
push
call
pop
mov
xchg
mov
add
mov
sahf
std
mov
add
mov
push
lods
mov
insb
iret
test
add
add
in
xchg
add
lods
add
flds
cwtl
add
int3
fs
add
fcomp
add
inc
call
or
negl
aaa
pop
push
lea
push
lea
push
push
call
fwait
rclb
arpl
mov
add
jns
fsubs
add
mov
xchg
push
add
xchg
clc
aam
add
push
lea
push
push
lea
push
push
push
push
call
pop
into
add
jnp
add
cwtl
aam
mov
sti
lods
addw
in
mov
mov
add
add
sub
pop
pushl
pushl
push
push
lea
push
call
push
pop
add
jle
mov
mov
mov
imul
add
popf
out
add
add
push
mov
in
hlt
pop
call
pushl
push
lea
push
push
call
add
xchg
test
iret
mov
sahf
add
scas
jmp
je
cwtl
mov
xchg
movsl
test
insb
jle
pushf
add
jb
add
jbe
add
cmpsl
push
sub
pop
pushl
call
push
push
add
dec
push
push
pop
add
sub
sub
rol
sub
add
shr
pop
not
sub
pop
push
lea
push
push
push
push
call
mov
add
stos
mov
add
lds
stos
insb
out
mov
icebp
icebp
mov
mov
addb
roll
out
jae
add
popa
in
add
add
pusha
cltd
add
out
movsl
add
add
pushl
call
push
push
push
push
call
loope
add
add
add
cld
push
in
popf
add
pop
testb
add
nop
mov
mov
imul
movb
out
add
add
mov
add
cltd
roll
push
add
sub
pop
push
push
push
add
rol
sub
add
push
and
add
ror
dec
sub
shl
pop
dec
shl
pop
push
push
push
push
push
push
push
push
lea
push
push
call
mov
mov
ret
lock
push
cmp
int3
add
add
add
add
int3
fdiv
mov
xchg
add
mov
add
icebp
add
jl
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
rcl
lret
movsb
les
pop
add
mov
mov
add
mov
add
add
add
add
loop
in
in
call
mov
push
push
lea
push
push
push
call
mov
add
in
fistpl
add
push
repnz
stos
lret
add
incb
rolb
push
addb
pop
mov
add
rolb
add
add
fs
add
mov
xchg
mov
add
add
push
mov
in
pop
push
push
push
push
push
push
call
in
fadds
add
cmc
nop
push
shlb
xchg
add
add
push
div
add
imul
add
in
in
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
test
cli
lock
mov
shlb
out
add
lcall
shrl
flds
bound
mov
fildl
mov
add
sti
jb
jecxz
add
pop
hlt
push
push
push
call
add
js
jle
add
in
in
testb
add
add
lods
jecxz
xlat
add
add
add
add
push
push
add
mov
mov
movsl
out
mov
add
in
jb
mov
into
mov
add
jbe
jp
bound
outsl
lock
lock
fildl
pop
add
add
sub
pop
add
push
lea
push
push
call
add
mov
mov
add
cli
filds
add
int3
add
xchg
cmpsl
jns
fildl
fistpl
xchg
mov
ja
push
lods
jge
add
add
push
lea
push
push
push
lea
push
call
fstl
gs
int
add
incb
mov
lcall
pusha
movsb
push
ret
add
cwtl
add
add
outsl
hlt
add
mov
add
loopne
add
add
add
add
jno
in
in
pop
add
mov
push
push
push
push
push
push
push
call
mov
ror
addl
test
mov
add
push
add
scas
cmpsb
in
loop
fs
fildl
pop
cltd
lret
mov
add
pushf
xchg
popl
add
test
popf
pop
pop
loopne
in
call
push
push
push
push
call
movsb
insb
lds
jo
add
xchg
cmpsb
add
stos
add
add
icebp
notb
jecxz
jle
mov
add
popf
add
pop
aam
xchg
scas
sti
add
xchg
in
imul
in
add
add
add
jp
add
bound
fiaddl
mov
stc
mov
add
mov
sub
pop
add
push
push
call
add
cltd
add
cmc
add
add
movsb
pop
add
mov
add
jns
lods
pop
mov
loope
add
add
mov
add
clc
pop
add
push
lea
push
call
mov
add
add
fcomi
into
bnd
add
add
add
xchg
xchg
add
push
fisubrs
lods
push
add
xorb
add
add
mov
push
push
push
push
call
stos
push
add
pop
ljmp
fisubl
mov
pop
xchg
add
ljmp
nop
arpl
fiaddl
add
stos
shlb
test
out
in
hlt
pop
xor
push
push
call
testl
mov
jno
add
mov
gs
cmp
rolb
jb
add
mov
decb
add
add
add
fbstp
jge
add
add
jp
add
mov
mov
mov
clc
add
addb
scas
in
sub
pop
add
push
push
push
call
add
mov
push
add
pusha
add
mov
add
rolb
add
pop
clc
mov
push
add
outsl
jnp
scas
add
roll
mov
mov
in
add
testl
lcall
lock
push
push
push
push
push
lea
push
lea
push
call
cld
jl
fldt
mov
leave
stc
arpl
push
imul
loope
add
xchg
movsb
jmp
cmc
cmpsl
cli
xchg
pushf
push
jge
jne
out
mov
add
add
add
add
add
add
push
call
cli
add
add
add
hlt
lcall
pop
sub
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
cli
sub
add
flds
add
add
mul
add
add
cld
add
add
je
jo
mov
leave
test
jbe
movsl
add
repnz
out
test
mov
add
add
add
popa
add
imul
lret
add
lcall
or
push
push
push
push
lea
push
push
push
call
mov
mov
movsb
in
add
add
stos
add
add
mov
add
bound
pop
add
push
push
call
popl
mov
add
std
add
stc
mov
push
add
pop
add
add
rolb
faddl
icebp
rclb
mov
add
add
fadds
imul
shlb
stos
push
xor
sub
pop
push
push
push
lea
push
push
call
in
fwait
pop
iret
push
pop
cwtl
iret
add
pusha
movsb
imul
add
mov
mov
fdivrl
int3
notl
pop
addb
hlt
scas
add
pop
fcomps
push
add
add
test
add
add
pop
push
sub
pop
mov
push
push
push
call
pop
in
jo
add
rcll
mov
mov
jbe
lods
clc
mov
add
add
jmp
lcall
add
add
push
xor
add
fisubrl
clc
pop
xor
push
push
push
call
push
push
add
add
pop
add
sti
add
addl
arpl
xchg
cmc
add
add
movb
lods
add
xlat
add
add
test
add
fcmovne
add
stos
mov
sub
pop
add
push
push
lea
push
push
lea
push
call
add
add
imul
xchg
mov
add
add
add
add
add
fildl
clc
pop
add
into
mov
add
add
push
cmc
add
fsubs
sub
pop
sub
push
push
push
push
lea
push
push
lea
push
lea
push
call
nop
push
add
add
add
push
xchg
roll
add
add
movsl
jno
test
add
icebp
pusha
lds
add
jno
xchg
rcr
cmpsl
add
add
add
mov
in
pop
lcall
mov
lret
fcoml
lcall
push
push
push
push
lea
push
push
call
mov
add
popf
add
push
loope
add
test
lcall
in
into
add
out
add
add
xchg
mov
add
jno
rol
add
outsl
in
int
lods
add
std
add
xchg
push
mov
call
rep
pop
push
push
push
push
push
push
call
add
mov
test
mov
mov
shll
in
add
add
mov
add
loopne
fs
out
add
leave
add
les
pop
hlt
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
in
add
ljmp
add
add
test
mov
test
add
add
add
addr16
push
movsl
mov
add
add
add
xchg
jmp
add
enter
xchg
mov
in
fdivr
lcall
pop
in
push
push
push
push
call
add
aad
testl
add
add
add
add
add
nop
add
push
fnstenv
mov
add
cli
add
ja
add
ret
add
add
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
jmp
add
call
lahf
pop
mov
sahf
out
pusha
add
fs
cmpsl
xchg
out
rcrb
add
cwtl
insb
scas
add
in
fdivr
lcall
ret
or
inc
and
int3
iret
iret
push
push
push
push
push
call
int3
push
imul
imul
jne
add
ret
xchg
lock
into
xchg
add
testl
mov
add
pushf
xchg
data16
add
popl
add
out
mov
add
add
imul
add
xor
push
push
push
lea
push
push
call
shrl
add
xlat
mov
add
pop
out
xchg
call
add
outsl
add
add
push
lcall
add
sub
pop
add
push
lea
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
cmc
add
fstps
add
mov
add
hlt
jb
jl
add
mov
add
arpl
ret
xchg
clc
jnp
add
add
sahf
jmp
add
lcall
push
and
out
int3
iret
iret
push
push
push
push
call
rcl
add
add
add
shlb
push
loopne
mov
add
xchg
mov
js
int
cwtl
add
out
add
int3
jle
add
mov
add
sub
pop
xor
push
push
push
push
push
push
push
lea
push
push
call
jbe
mov
add
add
add
scas
add
add
add
nop
hlt
pop
push
xchg
push
rol
jecxz
testb
addb
add
les
lea
push
push
push
push
lea
push
lea
push
call
jecxz
add
lcall
cmpsl
int
add
adcl
add
add
add
ljmp
test
add
add
js
mov
jns
add
mov
cltd
faddl
int3
add
jne
insb
add
loope
jno
mov
mov
jp
out
jae
add
in
in
lcall
dec
sub
int3
iret
iret
push
lea
push
push
push
push
push
lea
push
call
add
add
xchg
add
add
mov
jecxz
test
movsl
add
cli
stos
int
pop
imul
loop
push
add
out
add
lret
sarb
add
bound
roll
mov
mov
std
out
add
leave
mov
cld
mov
lods
pushf
test
lcall
or
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
jo
mov
add
addr16
flds
push
aam
or
js
subl
mov
test
mov
mov
add
add
add
add
add
jge
mov
lds
test
add
add
jge
mov
pop
add
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
add
std
add
loopne
popl
add
xchg
add
add
outsl
mov
ljmp
mov
add
sahf
ror
add
cld
mov
les
sahf
add
xchg
add
lret
filds
sub
pop
add
add
push
lea
push
push
push
lea
push
push
push
push
call
sbbl
push
add
xchg
push
outsl
add
pushf
mov
les
imul
add
ja
xchg
call
mov
test
add
add
add
pop
mov
add
add
mov
rcrl
add
add
lcall
fsubrs
popf
mov
push
ror
push
and
add
ror
sub
xor
shl
not
add
pop
dec
shl
pop
push
push
lea
push
call
add
int
add
mov
out
stc
scas
xchg
add
add
fadds
cld
add
arpl
pop
xlat
mov
xchg
mov
scas
xchg
add
testb
pop
jge
add
loop
add
sbb
add
aad
mov
add
cli
icebp
jge
add
add
add
push
popa
mov
pushl
push
lea
push
lea
push
call
adc
add
mov
add
xor
fadds
pop
shlb
loopne
add
push
add
add
in
add
push
not
rol
add
pop
push
push
push
sub
push
xor
add
shr
not
sub
ror
shr
pop
sub
shr
xor
dec
pop
push
add
pop
push
push
lea
push
push
call
xchg
add
popf
add
pop
xchg
add
jp
add
jns
add
add
bound
xchg
add
hlt
pop
push
call
push
lea
pop
mov
push
add
sub
pop
push
push
sub
add
sub
add
pop
push
push
lea
sub
sub
dec
pop
mov
push
push
push
call
cmpsl
add
fistps
jecxz
add
add
jp
add
mov
add
add
testl
movsl
mov
cmpb
cmc
add
add
push
add
pop
in
push
push
push
push
push
lea
push
push
call
divb
add
imul
add
mov
idivl
pop
add
mov
mov
sarb
mov
add
push
int3
out
xchg
lret
ljmp
nop
add
push
lret
jecxz
add
loop
add
add
stos
pusha
cmpsb
rolb
add
add
push
push
push
call
out
xchg
mov
add
jns
add
xchg
cmpsb
jecxz
js
push
jbe
arpl
test
pop
leave
add
add
leave
add
out
add
jp
fcmovb
lock
add
cwtl
add
fstpt
arpl
add
lcall
ret
or
jae
xor
push
not
shl
xor
pop
add
push
lea
push
call
push
add
pusha
jns
addr16
mov
add
add
rcrb
add
scas
add
add
rcl
add
mov
xor
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
xchg
add
stos
fiadds
add
add
jae
add
jecxz
mov
cli
shlb
mov
mov
add
xchg
scas
add
add
jnp
testb
lcall
in
sub
pop
add
push
dec
pop
pop
push
sub
add
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
push
add
mov
add
mov
add
insb
add
add
add
js
xchg
add
add
cli
push
add
add
subb
loopne
lcall
or
push
push
push
push
push
call
sar
add
addb
loop
lods
xchg
push
or
sti
stos
lret
xchg
push
jb
lea
add
enter
push
mov
add
rolb
data16
test
add
add
lcall
les
add
push
pop
rep
mov
xor
push
lea
push
push
lea
push
push
lea
push
push
call
mov
add
shr
add
loop
jp
add
add
mov
cmc
add
add
movsl
lret
add
nop
jl
add
add
fiaddl
outsl
push
add
addb
add
add
add
stos
sar
sub
pop
or
je
push
rol
shr
add
not
pop
mov
xor
push
sub
inc
pop
mov
push
push
push
push
push
push
push
push
push
push
call
add
icebp
std
nop
mov
std
add
fldl
bnd
mov
stos
push
loop
add
sar
pop
jmp
add
jbe
xchg
add
add
fwait
add
sub
pop
xor
push
push
push
push
lea
push
lea
push
call
cwtl
xchg
add
in
push
mov
jno
sti
ror
add
aad
add
add
cltd
lea
popa
cwtl
add
add
rclb
in
std
mov
add
add
mov
mov
jbe
std
fidivrl
add
pop
sahf
mov
add
pop
sti
fcomi
add
jmp
imul
lcall
les
add
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
movsl
sahf
add
sti
mov
pop
test
mov
push
add
lea
lods
into
mov
jb
push
push
int3
add
add
cwtl
add
iret
jmp
sarb
mov
fiaddl
lcall
repnz
shl
add
add
pop
add
push
lea
not
add
sub
pop
push
push
push
call
add
add
lea
add
movsl
popf
mov
cld
loopne
mov
mov
add
add
sub
pop
mov
xor
push
ror
sub
sub
pop
add
pop
push
sub
xor
pop
rep
push
rol
lea
xor
pop
mov
xor
push
shl
inc
dec
pop
or
je
push
push
push
lea
push
push
push
push
call
mov
pop
push
rolb
les
cld
movsb
iret
xchg
add
add
jp
scas
add
lods
add
mov
xchg
xchg
add
add
mov
sub
pop
mov
add
push
pop
add
push
rol
inc
pop
rep
pop
push
push
shr
dec
sub
push
and
add
sub
rol
pop
sub
not
sub
sub
pop
push
lea
push
lea
push
push
call
movsl
add
mov
bound
add
add
add
mov
jmp
fsubr
out
and
adc
fcmovbe
leave
mov
add
mov
imul
add
lcall
push
pop
mov
mov
push
ror
shl
pop
mov
push
lea
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
fwait
add
mov
mov
fwait
pop
gs
in
nop
add
imul
add
jle
jbe
ret
lods
popf
sub
pop
jmp
push
lea
push
push
push
lea
push
push
call
add
sbbb
xchg
push
mov
scas
add
mov
add
mov
aam
and
leave
add
lods
add
js
lock
cmc
test
add
in
call
push
push
push
push
push
push
push
push
call
js
add
add
ja
add
fists
test
xor
cmpb
test
jmp
add
mov
add
in
add
push
lea
inc
rol
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
leave
jl
add
add
add
jnp
pop
movsb
jge
jl
add
add
test
add
lock
xchg
jp
sbbb
imul
roll
jl
push
add
lods
push
mov
popa
add
add
xchg
push
mov
jl
pop
add
jbe
aad
add
add
fdivr
lcall
push
push
push
push
push
lea
push
lea
push
push
call
loope
test
push
roll
add
cli
ljmp
mov
data16
pushf
add
data16
stos
scas
add
sub
pop
mov
push
push
lea
push
lea
push
push
push
push
push
call
add
add
jno
jo
mov
add
add
int
mov
add
out
pushf
jbe
popa
gs
sub
pop
pop
push
push
push
push
push
push
call
add
popf
add
lock
add
add
add
push
add
add
add
ja
add
xchg
rcr
add
out
add
repnz
mov
arpl
sub
pop
pop
pop
push
not
sub
dec
pop
pop
push
pop
leave
ret
push
push
push
push
push
call
add
add
add
add
ljmp
jno
mov
add
mov
mov
aam
insb
gs
add
sti
add
fiaddl
in
fmulp
bnd
add
add
ja
aad
mov
ret
jl
add
arpl
cli
flds
add
fcompl
mov
mov
add
xchg
lret
in
in
pop
push
push
inc
pop
mov
push
sub
dec
pop
add
push
push
lea
push
call
mov
push
add
jecxz
fadds
mov
add
push
add
add
lea
add
mov
ficoms
add
add
mov
jmp
hlt
push
add
add
movsl
in
add
movl
in
out
rcl
add
add
cmpl
sub
pop
push
push
ror
pop
push
push
push
push
push
push
lea
push
push
call
roll
push
test
incb
pop
fldenv
fucomi
add
int3
push
test
stos
ret
aam
rclb
std
leave
xchg
popa
jmp
mov
add
mov
data16
loope
in
ja
sti
in
stos
popa
lcall
out
sarl
sub
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
push
call
fadd
xchg
add
pushf
scas
movsl
jmp
add
lock
test
add
add
nop
add
mov
xchg
jbe
lahf
add
add
rol
incb
iret
nop
add
push
add
xor
pop
movl
push
shl
not
pop
addl
push
push
push
push
lea
push
lea
push
call
add
pop
lock
pushf
fidivrl
je
add
lea
add
xchg
add
les
repnz
add
shl
add
andb
xchg
xchg
xchg
xchg
add
xchg
push
add
test
mov
or
add
lods
mov
jb
add
shll
testb
in
call
test
add
push
push
call
xchg
push
mov
mov
add
fcomps
add
imul
in
loopne
add
pusha
int
xchg
add
int3
sahf
add
cmc
scas
jp
in
xchg
push
add
mov
data16
fistl
push
add
add
sub
pop
mov
pop
push
ror
add
pop
pop
push
sub
shl
sub
rol
pop
pop
push
lea
push
push
push
push
push
lea
push
lea
push
push
push
call
lea
imul
scas
sti
add
jbe
push
testb
add
add
add
aad
cltd
add
sub
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
mov
shlb
jb
mov
add
add
loop
clc
out
add
add
add
push
sub
pop
ret
push
push
sub
lea
pop
mov
add
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
enter
jnp
xchg
add
add
mov
add
add
add
push
outsl
add
imul
add
mov
test
mov
add
add
lcall
push
sub
ror
pop
push
push
dec
pop
push
push
push
call
mov
mov
outsl
in
pop
movsl
popf
add
gs
mov
jo
add
lret
push
stc
faddl
gs
add
add
lret
add
add
push
add
add
scas
addb
add
add
movsb
stc
mov
cmpb
pop
lods
in
std
into
fiadds
xchg
push
push
lea
push
push
push
call
out
std
shr
add
imul
xchg
add
test
std
xchg
insb
jcxz
enter
insb
rcr
and
jno
lock
mov
loope
fnstcw
xchg
mull
addr16
mov
add
js
fidivrs
in
lock
lcall
inc
cld
add
add
addl
push
push
lea
push
push
push
push
call
add
loop
neg
jno
in
pop
in
add
insb
add
pop
add
lret
add
mov
fwait
test
in
add
ret
pusha
mov
loope
mov
fistpl
jno
add
sub
pop
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
jl
add
add
mov
add
test
std
jge
add
push
add
clc
add
andl
add
enter
jp
mov
bound
jmp
mov
add
sahf
call
add
add
jnp
iret
jbe
out
stos
xchg
add
test
jle
icebp
mov
mov
add
in
loopne
lcall
xchg
cli
decl
rol
rorb
pop
push
push
add
not
pop
push
call
push
push
push
call
gs
add
add
add
lahf
add
push
add
leave
add
mov
add
add
mov
add
add
add
add
add
mov
lcall
jge
add
test
push
push
push
lea
push
lea
push
push
call
lret
push
lea
add
mov
jns
add
fwait
xchg
add
lock
bound
add
clc
add
mov
add
lods
les
jns
into
jae
mov
pop
xchg
fdivl
add
stos
test
pop
push
push
lea
push
push
push
call
out
add
add
add
add
lods
mov
arpl
std
push
jge
mov
aad
sti
xlat
cwtl
add
mov
lds
pop
fiaddl
add
xchg
cmpsl
add
add
addb
push
ror
lea
pop
pop
push
sub
pop
leave
push
add
pop
ret
push
push
push
call
ffreep
add
test
mov
fcomi
add
add
js
int
add
jge
jbe
add
jbe
add
xchg
aam
loop
add
scas
jb
mov
add
movsb
into
add
sub
pop
mov
push
push
call
mov
sahf
scas
mov
mov
add
cmpsb
in
jne
push
add
fiadds
add
fs
sti
std
lock
ljmp
mov
add
icebp
add
add
sahf
pop
mov
add
cld
push
push
push
push
call
pop
add
add
je
mov
fdivrp
mov
in
push
cmpsl
add
add
add
add
jne
lods
push
xchg
sub
pop
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
xchg
add
mov
add
imul
fadds
jo
jle
scas
aam
add
add
mov
fisttps
pop
add
mov
mov
add
cmc
scas
ror
xchg
mov
add
mov
enter
jge
add
pop
test
fdivr
lcall
push
xor
add
pop
push
push
push
push
lea
push
push
push
push
push
push
push
call
add
jl
add
add
out
mov
std
add
push
subl
pop
push
add
jle
jns
add
jp
hlt
lahf
lds
mov
pop
push
movl
push
push
push
push
push
push
call
add
ljmp
add
mov
add
add
push
push
int3
stc
js
pop
enter
add
les
add
add
add
in
add
xchg
mov
add
add
hlt
add
add
fwait
lds
mov
call
push
call
push
push
call
nop
fiadds
iret
test
aad
add
test
shll
nop
addr16
jp
sarb
leave
test
add
fwait
mov
pop
mov
loop
in
add
push
add
mov
sub
pop
push
push
lea
pop
call
push
pop
subl
push
push
push
lea
push
lea
push
push
push
push
call
xchg
call
mov
add
add
add
add
add
add
add
sub
pop
cmpl
jne
push
push
push
lea
push
push
push
push
push
call
xchg
add
add
add
jo
ljmp
add
pop
add
mov
leave
in
add
add
add
add
lret
imul
incb
lret
mov
pop
test
je
lret
push
out
add
add
fildl
idivb
pop
add
pop
pop
push
not
add
pop
pop
pop
push
lea
pop
leave
push
push
call
add
in
xchg
add
add
lods
add
add
add
cmpl
cltd
mov
mov
xchg
loop
mov
clc
cmp
movsb
fbld
je
xchg
add
ret
push
rol
pop
push
mov
push
push
push
push
push
push
push
push
call
fildl
test
std
jl
add
add
add
mov
add
jns
jns
add
add
pop
cli
mul
leave
add
cltd
add
add
jge
sub
pop
add
push
ror
not
inc
sub
pop
push
push
ror
pop
push
push
lea
push
push
push
push
push
push
call
add
pop
les
add
add
jmp
mov
push
stos
add
add
cmpsb
mov
add
mov
xchg
add
add
stos
out
add
add
sub
pop
push
push
push
push
push
push
call
add
mov
stc
pop
add
jge
xchg
add
add
call
add
push
push
cli
add
lcall
in
in
lcall
push
push
shl
xor
push
sub
add
ror
not
ror
sub
add
pop
shr
add
pop
push
lea
push
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
call
mov
add
add
jae
loope
aad
pushf
cmpsb
xchg
mov
xchg
jle
mov
mov
add
xchg
lcall
jne
call
push
lea
push
lea
push
push
call
je
add
mov
xchg
add
add
mov
pop
movsl
add
mov
add
push
test
sahf
jge
test
add
xchg
data16
add
out
stc
lock
mov
add
add
add
add
mov
popa
repnz
add
nop
add
add
in
lock
call
push
push
not
lea
add
push
and
add
ror
sub
sub
ror
pop
shr
pop
push
push
push
push
push
push
push
push
push
call
movsl
fbld
pop
add
add
enter
int
xchg
cmpsb
mov
cwtl
mov
add
add
add
mov
add
xchg
mov
std
add
sub
pop
pushl
push
inc
not
pop
call
call
push
push
add
rol
rol
push
push
pop
add
shr
sub
rol
pop
dec
sub
not
pop
push
ror
dec
lea
pop
pushl
push
lea
pop
call
call
push
push
shr
lea
ror
sub
push
push
pop
add
shl
rol
sub
ror
pop
dec
shr
ror
pop
push
lea
push
lea
push
push
call
add
add
add
push
fwait
add
jo
out
outsl
lcall
add
test
rclb
add
faddl
test
imul
aad
ljmp
testb
cld
xchg
repnz
add
jae
rclb
rcrb
into
add
lcall
jne
push
push
call
hlt
mov
add
cli
call
testl
data16
add
add
and
add
shrb
clc
pop
call
call
push
lea
push
push
push
push
push
push
push
push
push
call
mov
add
xchg
divl
add
add
jno
jns
mov
xchg
add
scas
stc
cwtl
scas
scas
add
jge
in
add
mov
push
lods
jmp
add
add
adc
add
add
pop
add
push
into
add
mov
push
add
add
sub
pop
mov
push
inc
pop
lea
push
lea
push
push
push
push
push
push
push
push
push
call
add
xlat
icebp
push
cwtl
add
add
add
add
sti
jmp
add
add
jecxz
add
clc
add
mov
pushf
add
jbe
popa
out
sbb
add
push
add
push
add
add
stos
add
cwtl
fcompl
add
ja
pushf
in
add
in
fcomps
call
not
lea
pop
mov
push
push
lea
push
call
test
testl
mov
mov
add
pusha
out
push
mov
aam
add
pusha
add
hlt
jne
outsl
xchg
mov
out
mov
int
leave
add
test
add
pop
cld
loope
add
js
lcall
mov
add
push
in
hlt
pop
shr
push
lea
sub
ror
add
pop
add
push
lea
push
lea
push
lea
push
call
jnp
mov
mov
add
movsl
mov
addl
fadds
push
add
add
mov
fdivrl
ljmp
testl
add
add
push
cmc
icebp
xorb
push
add
add
scas
add
jmp
pop
add
in
lock
mov
mov
push
add
rol
xor
sub
pop
add
push
lea
push
lea
push
call
add
imul
add
call
mov
in
add
add
loopne
add
jl
fwait
add
xchg
push
mov
cwtl
clc
in
add
add
int
addb
lret
sub
pop
add
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
movl
popf
jo
add
jmp
outsl
push
jecxz
adc
jge
add
lods
pop
add
add
add
add
out
cltd
add
int
jge
add
mov
mov
add
add
add
add
add
incb
add
push
lock
fs
lcall
inc
add
add
out
dec
or
call
loop
je
mov
arpl
add
add
mov
loope
pop
jns
add
push
add
add
add
add
arpl
jle
in
hlt
lcall
nop
nop
nop
nop
push
ror
shr
pop
cmp
jne
push
push
push
lea
push
push
call
add
add
stos
push
add
fldl
mov
int3
push
gs
imull
mov
movb
xorb
xlat
add
add
mov
sahf
in
add
mov
cli
jne
mov
add
cli
stos
lret
enter
hlt
mov
add
add
add
cli
sub
pop
cmp
jne
mov
push
lea
push
push
lea
push
lea
push
push
push
call
jle
imul
mov
in
add
add
out
popf
add
add
add
in
in
lcall
add
add
add
scas
mov
push
call
cld
xlat
movsb
add
imul
mov
fwait
ljmp
add
add
add
pusha
faddl
push
pop
lahf
add
add
push
in
hlt
pop
jmp
push
push
push
lea
push
push
push
call
test
imul
pop
jle
add
pushf
shlb
add
add
add
jns
nop
in
add
mov
xlat
xchg
add
lret
add
stos
jo
add
movsb
xchg
add
add
add
fucomi
cli
mov
lcall
inc
cld
push
lea
push
push
call
add
fbld
add
mov
add
add
test
pop
add
xchg
mov
in
mov
add
lret
lds
add
push
or
fcmovnb
jmp
not
pop
sub
jne
push
not
pop
mov
push
ror
inc
pop
movl
push
push
lea
push
push
call
jp
add
mov
add
lock
lods
add
mov
add
jb
mov
out
enter
jcxz
add
test
sti
out
mov
add
add
rclb
pusha
add
mov
fwait
add
push
addl
add
xchg
nop
arpl
shl
mov
xchg
sub
pop
jmp
mov
push
sub
dec
shr
pop
mov
push
lea
pop
cmp
jne
push
lea
push
push
push
call
roll
stos
icebp
movsb
xchg
call
jnp
add
popf
add
add
mov
add
movsl
pop
add
push
pushf
add
test
into
movsl
stos
add
add
nop
ja
pop
add
lcall
inc
adc
lea
push
lea
push
push
push
lea
push
call
add
add
stc
add
mov
jb
add
add
add
addl
add
rolb
ret
in
movl
jmp
push
rol
sub
pop
mov
cmpw
jne
push
shl
shl
pop
mov
push
push
push
push
push
call
cwtl
jne
add
out
mov
add
add
pop
add
lahf
add
add
mov
push
push
sahf
add
scas
orb
movl
add
rcl
roll
lcall
add
xor
add
push
push
lea
push
push
push
push
lea
push
push
call
add
incb
gs
aad
add
mov
add
arpl
cld
push
mov
mov
nop
mov
mov
pop
fwait
add
stos
push
sub
pop
pushl
pop
push
xor
rol
pop
mov
push
push
push
push
push
push
lea
push
push
call
movsl
clc
add
pop
mov
cmpsb
add
add
add
jecxz
xchg
add
add
jecxz
xchg
add
add
push
add
add
bound
pop
mov
push
push
push
lea
push
call
lods
add
add
add
neg
cwtl
mov
cwtl
jmp
int3
addl
add
cmpsw
push
rcrl
mov
ja
mov
xlat
sub
pop
mov
push
push
add
push
xor
add
lea
sub
lea
rol
sub
pop
add
pop
push
lea
push
push
push
call
add
push
add
mov
loop
jmp
rol
add
add
jle
add
push
movsb
negb
mov
lds
push
add
lcall
call
push
dec
xor
pop
cmpl
je
push
push
not
not
inc
push
or
not
add
not
shl
shl
sub
shl
inc
pop
not
pop
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
test
add
popa
add
std
out
out
add
fxch
arpl
add
add
lret
push
in
enter
add
xchg
lcall
push
push
lea
push
push
lea
push
call
stos
jle
add
add
add
stc
stos
sbbl
fxch
mov
add
push
add
add
fiaddl
lahf
lods
sar
ffree
cmc
add
jge
test
ljmp
jp
add
jbe
add
add
add
add
lcall
bound
add
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
mov
jge
cld
push
add
add
rolb
add
add
add
ja
add
out
add
pop
nop
add
mov
lcall
js
int3
fldz
ret
add
add
mov
rol
not
shr
push
or
inc
add
add
lea
add
sub
sub
shl
shr
sub
pop
rol
pop
push
dec
rol
dec
pop
push
push
push
push
push
call
mov
jno
mov
loopne
add
add
hlt
jl
add
xlat
mov
int
add
add
ret
sahf
nop
movsl
cmpsb
add
add
rclb
add
cwtl
jmp
cltd
add
add
add
scas
add
pop
jl
lahf
icebp
sub
pop
call
push
not
pop
cmpl
je
push
push
lea
shr
dec
lea
push
or
not
add
inc
add
sub
add
sub
pop
dec
add
pop
push
shr
pop
push
push
add
pop
call
push
push
push
call
add
add
aam
int
mov
nop
loopne
add
add
add
push
push
movsb
push
add
bound
lcall
cmp
test
test
sub
into
pushf
push
push
pop
add
inc
add
add
sub
inc
inc
pop
ror
shl
add
inc
pop
push
not
xor
sub
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
ret
add
ret
into
mov
add
add
xchg
lds
mov
out
mov
pop
je
int
xchg
mov
fdivr
add
add
cwtl
js
add
cmpsl
xchg
xchg
int3
add
divl
add
push
push
push
push
lea
push
push
push
call
add
lcall
add
mov
add
push
icebp
out
add
push
int
scas
xchg
add
xchg
add
add
mov
add
cwtl
mov
sub
pop
cmpl
je
push
push
push
push
pop
add
sub
sub
not
sub
inc
shl
pop
add
shl
pop
push
shl
shl
pop
push
call
push
push
push
call
std
mov
mov
orb
mov
ljmp
arpl
add
jo
add
add
add
divb
sti
int
lahf
loopne
add
js
jmp
les
je
push
push
add
shr
sub
rol
push
sub
add
xor
shl
sub
inc
pop
dec
add
rol
pop
push
push
push
call
pop
add
clc
add
in
add
xchg
icebp
add
add
movsl
lock
arpl
gs
xchg
add
add
in
xchg
in
add
testb
add
add
jge
nop
mov
ffreep
add
addb
add
jbe
lea
addl
add
mov
rorl
mov
lea
push
lea
push
push
push
push
call
mov
add
fmul
jecxz
in
mov
add
test
add
add
pop
mov
mov
gs
add
add
jbe
popf
xchg
push
add
out
add
mov
sub
pop
cmpl
jne
push
xor
inc
pop
mov
push
lea
push
push
lea
push
push
push
lea
push
push
call
cld
mov
add
add
loop
pop
jge
sbb
add
add
add
add
xchg
in
add
stos
add
add
mov
jne
popa
mov
add
jo
test
lea
mov
hlt
imul
pop
jo
clc
add
lcall
add
add
add
aad
rclb
aas
add
add
movsb
data16
mov
cltd
cli
add
add
testb
add
add
les
scas
add
add
not
stos
arpl
add
mov
mov
loope
add
shll
lcall
push
add
add
rclb
pop
mov
push
push
call
out
fildl
cmpsb
push
mov
mov
add
jmpw
cli
loopne
cld
cwtl
mov
fadds
std
mov
pop
sti
add
add
xchg
pop
mov
add
leave
add
lcall
push
shl
shr
sub
shr
pop
pop
pop
push
push
push
lea
push
call
lods
cwtl
mov
fildl
fld
add
fnstsw
stc
add
ja
rolb
add
add
add
fldl
iret
sub
pop
pop
leave
push
push
call
rcrl
mov
add
push
bound
add
imul
addl
cltd
out
mov
add
push
add
out
pusha
loope
leave
pop
test
lods
lahf
sbbl
add
ficoml
pop
jecxz
mov
aam
in
clc
lcall
or
push
lea
push
push
push
push
push
call
popf
add
loope
mov
add
add
mov
add
add
push
add
xchg
rolb
enter
add
movsl
push
lcall
add
add
add
lcall
push
shr
shr
add
pop
mov
push
push
push
push
call
add
push
arpl
mov
add
push
negl
push
jmp
add
add
add
add
mov
loopne
sub
pop
add
push
push
push
push
push
call
jmp
add
and
repnz
imul
leave
add
jo
filds
mov
add
lods
bound
cmpsl
pop
ficoml
rcr
ja
movb
in
add
add
mov
in
in
lcall
jge
add
test
add
add
pop
into
xlat
push
push
sub
add
shr
lea
sub
add
pop
rol
add
pop
push
push
push
lea
push
push
push
push
lea
push
call
bound
fldl
repnz
jae
push
in
lahf
add
push
add
jbe
in
in
faddl
mov
add
fadds
add
jmp
in
loopne
pushl
push
lea
push
call
lods
xchg
clc
mov
add
data16
std
xchg
pop
push
add
add
add
test
add
mov
add
xchg
arpl
icebp
vorpd
add
xchg
cmc
add
add
push
push
push
in
loop
add
xchg
sub
pop
call
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
add
add
test
int
add
add
add
add
add
sahf
mov
imul
add
cltd
push
out
movsl
loope
add
test
mov
jp
movl
add
xchg
pop
mov
rolb
loopne
sub
pop
call
push
add
sub
sub
pop
jmp
push
push
lea
push
push
push
push
push
push
push
call
in
mov
clc
leave
mov
addb
cmc
fldl
add
add
lods
jo
add
lret
push
fdivs
jecxz
add
add
mov
add
push
add
in
fcompl
jge
add
test
inc
or
rcrb
add
add
push
inc
pop
jmp
cmpl
jne
push
push
rol
sub
push
or
not
add
dec
xor
add
sub
rol
sub
pop
lea
rol
lea
pop
push
lea
push
push
lea
push
push
call
add
push
scas
js
jl
hlt
add
mov
jne
add
add
iret
mov
adc
mov
lret
insb
mov
cmpb
lcall
jne
call
push
pop
push
push
push
push
push
push
push
call
leave
add
jl
imul
add
jmp
mov
add
cld
add
add
in
mov
mov
jecxz
add
flds
pushf
sub
pop
call
push
push
lea
push
lea
push
push
call
xchg
add
mov
mov
add
add
enter
int
add
ret
add
cld
test
add
add
std
mov
fs
mov
jmp
cmpl
je
push
lea
lea
pop
cmpl
jne
push
dec
inc
sub
xor
pop
mov
push
xor
add
dec
ror
pop
mov
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
loopne
add
fiaddl
add
push
clc
add
insb
add
mov
movl
stc
mov
add
stc
add
idivl
add
add
add
add
fnstenv
scas
arpl
mov
js
add
add
pop
jns
add
sub
pop
ret
push
push
not
dec
shl
lea
push
xor
add
shr
dec
sub
sub
shl
pop
shl
pop
push
lea
push
call
insb
add
add
out
add
add
stos
add
add
add
mov
push
insb
add
jne
xorb
movsb
jmp
test
pop
in
sub
pop
pushl
push
push
lea
push
push
lea
push
push
push
push
call
jle
cltd
lret
add
pop
add
lods
add
push
add
add
add
enter
add
jns
test
add
arpl
xchg
add
fiaddl
addr16
add
fsubrs
add
add
add
ja
add
push
scas
scas
add
out
in
loopne
lcall
xor
push
push
push
push
lea
push
lea
push
call
mov
add
add
test
push
add
add
add
add
mov
out
shl
jp
test
pusha
add
jmp
add
movsl
icebp
add
add
into
leave
add
xchg
add
in
call
push
push
sub
sub
push
xor
add
add
dec
lea
sub
inc
ror
shr
pop
add
pop
push
push
push
push
push
push
push
lea
push
push
call
add
add
scas
add
add
mov
mov
jl
xchg
push
pop
int
xchg
add
push
lret
int
add
movsb
sahf
pop
add
add
in
in
fdivr
lcall
jne
push
lea
push
push
call
add
mov
test
add
add
in
icebp
add
int3
add
add
fsub
mov
jns
add
jno
test
add
out
mov
cltd
addl
jne
les
lret
xchg
pop
roll
pushf
fisubs
add
test
add
test
lcall
fisubl
outsb
not
pop
call
push
push
lea
inc
shr
sub
push
push
pop
add
rol
inc
sub
not
add
pop
add
not
pop
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
xchg
movsl
mov
add
add
test
pusha
fidivrl
fwait
mov
add
add
out
xchg
add
add
ja
pop
push
add
mov
add
mov
fisubrs
loope
mov
test
add
pop
test
add
add
xchg
xchg
push
in
add
push
sub
pop
pushl
call
push
dec
not
shr
pop
call
push
push
add
push
or
inc
add
dec
sub
inc
inc
shr
pop
not
rol
inc
pop
push
push
lea
push
push
push
push
call
in
add
mov
mov
pop
jnp
shll
mov
test
pop
mov
push
mov
add
pushf
mov
pop
pushl
call
push
not
shl
pop
call
push
push
dec
rol
push
xor
add
shl
add
sub
sub
ror
shl
pop
ror
sub
pop
push
lea
push
push
lea
push
push
push
lea
push
push
call
addl
add
add
add
in
push
lock
mov
imul
add
test
fildl
nop
add
add
mov
rcrb
xchg
cld
add
add
sti
add
les
loopne
pushl
push
xor
inc
pop
call
call
push
push
sub
push
sub
add
lea
lea
inc
not
sub
shr
pop
lea
sub
pop
push
lea
push
call
leave
add
mov
add
loopne
outsl
add
push
add
lock
sti
add
cmc
cmc
arpl
add
lea
mov
mov
mov
shll
add
cli
add
add
xchg
js
mov
jl
mov
lahf
fistpll
in
clc
lcall
jne
push
dec
shr
pop
call
push
push
push
push
lea
push
push
push
call
roll
ret
out
in
movsl
add
add
in
add
mov
out
ja
add
add
loopne
add
jne
pop
add
movsl
add
imul
jb
jmp
add
jae
push
add
add
mov
add
jl
popa
add
add
add
sub
pop
call
push
push
push
or
inc
add
inc
sub
ror
sub
not
add
add
pop
ror
sub
pop
push
push
push
lea
push
push
push
lea
push
push
call
cli
stos
popf
pop
add
imul
add
filds
add
push
add
gs
jmp
add
shlb
pop
je
bnd
scas
insb
mov
loopne
lcall
jne
push
push
lea
push
push
push
push
call
push
popa
leave
out
add
jns
imul
add
call
push
add
stos
aad
add
fistpl
pop
add
add
mov
add
add
out
jmp
arpl
cltd
aad
mov
into
push
loop
add
add
mov
add
fsubr
add
in
call
call
call
push
push
ror
not
dec
push
sub
add
add
inc
ror
shr
sub
lea
pop
shr
rol
pop
push
push
lea
push
push
lea
push
lea
push
call
outsl
jge
arpl
add
add
divb
out
add
pop
insb
jbe
add
fwait
xchg
add
iret
sub
pop
pushl
push
lea
push
push
push
push
push
push
call
add
push
clc
add
push
jo
push
add
add
xchg
push
add
add
add
mov
add
shlb
in
lcall
mull
add
push
push
lea
push
push
call
mov
mov
add
cltd
mov
enter
xchg
int
sbbb
fldl
aam
addl
add
push
mov
gs
jno
mov
mov
fisttpll
stc
pop
add
lcall
shrb
lret
or
push
or
not
add
sub
dec
rol
sub
add
add
ror
dec
pop
add
sub
shr
pop
push
rol
shl
rol
add
pop
pushl
push
add
pop
call
push
not
pop
call
push
push
add
add
sub
push
and
add
shr
sub
not
pop
rol
shl
ror
sub
pop
push
push
push
push
push
lea
push
push
push
call
ja
mov
test
add
mov
add
add
xchg
aad
add
add
movsb
shlb
addl
mov
lock
test
add
jl
mov
add
fs
pop
pushl
push
push
call
scas
aad
mov
add
icebp
add
movsb
adcb
fwait
mov
into
sahf
mov
lret
xchg
clc
add
add
jl
iret
add
mov
sti
add
addr16
push
push
add
ljmp
xchg
add
add
lcall
xor
inc
dec
dec
pop
lea
push
add
pop
push
call
push
push
lea
push
and
add
rol
sub
inc
add
shl
pop
inc
rol
shl
pop
push
not
xor
sub
not
pop
pushl
push
inc
pop
call
push
sub
not
pop
call
push
push
push
xor
add
sub
sub
xor
ror
ror
pop
sub
pop
push
add
pop
pushl
push
inc
pop
call
call
push
push
xor
push
push
pop
add
dec
sub
sub
not
not
pop
not
ror
shr
pop
push
pop
pushl
push
push
lea
push
push
push
call
mov
jecxz
mov
add
add
add
sbb
add
popf
add
jne
pop
add
add
add
sub
pop
call
push
push
push
push
push
push
push
lea
push
push
call
mov
add
shl
add
faddl
add
pop
rolb
in
xchg
add
add
add
add
insb
jnp
xor
idivl
aad
add
out
add
push
add
push
aam
in
fcompl
shrb
mov
pop
push
lea
push
push
pop
add
shl
sub
shl
not
pop
shl
shl
inc
pop
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
xlat
add
call
add
popf
mov
int
pop
rolb
mov
mov
add
xchg
mov
in
scas
add
add
stc
add
les
mov
add
lds
fidivrs
test
add
mov
sti
movsl
add
add
lret
xchg
int
push
incb
lcall
jne
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
xchg
push
add
movsb
add
in
add
add
lahf
lret
add
mov
scas
push
add
add
add
xchg
aam
xchg
pop
cmpsl
jmp
sub
pop
call
push
push
add
rol
push
and
add
sub
rol
pop
add
pop
push
push
add
push
sub
add
add
shr
shl
rol
sub
lea
not
pop
add
pop
push
shl
pop
call
push
lea
push
lea
push
call
cltd
add
lret
mov
xchg
add
add
add
iret
add
add
aad
mov
stos
mov
sub
pop
pop
push
sub
pop
dec
jne
push
push
add
add
inc
sub
push
or
inc
add
shr
xor
add
sub
inc
rol
pop
xor
not
pop
push
lea
push
lea
push
lea
push
push
push
push
call
iret
mov
pop
fcmovnb
add
add
je
xchg
push
mov
enter
add
mov
add
lret
add
je
lds
add
add
lock
push
lods
out
add
ret
mov
in
ret
add
movsl
lock
cli
add
add
test
pop
pushl
push
shl
pop
call
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
enter
add
fistpl
jb
iret
cmpsl
in
xchg
add
xchg
aad
add
gs
repnz
js
data16
add
add
out
add
add
test
pop
test
push
mov
in
loopne
mov
lea
push
push
dec
sub
dec
push
or
inc
add
add
xor
shl
not
sub
add
pop
shl
pop
push
push
push
push
push
push
call
lea
add
lds
add
xchg
add
rolb
test
lock
add
add
push
cld
push
add
add
enter
xchg
add
add
movl
jle
ja
xchg
xchg
stos
mulb
mov
mov
sub
pop
pushl
push
xor
ror
rol
lea
pop
call
push
push
push
lea
push
push
push
push
push
push
call
add
add
pop
push
add
jb
add
jo
shll
add
add
ljmp
push
jl
add
add
mov
loope
xchg
outsl
xchg
add
add
adc
add
xchg
iret
xchg
mov
push
add
ror
add
add
push
xor
pop
push
push
lea
push
push
push
push
call
add
add
test
mov
add
add
add
mov
clc
add
jp
add
imul
add
add
jno
add
rcrb
add
add
icebp
jb
sub
pop
push
push
push
push
push
push
call
lods
push
xchg
add
add
insb
xchg
add
add
add
out
arpl
pusha
add
clc
clc
outsl
fildl
mov
testl
add
fistps
add
jne
add
add
addl
lods
add
outsl
pop
add
jne
push
push
inc
push
xor
add
add
sub
dec
ror
shl
pop
xor
not
pop
push
sub
shr
not
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
scas
pop
out
push
pop
jns
movb
push
in
arpl
push
add
cli
hlt
lds
jmp
loop
add
add
lcall
lret
add
add
lods
add
add
lcall
mov
sub
pop
call
call
push
push
lea
push
push
call
add
add
out
add
test
mov
pop
fsub
add
jns
pop
movsl
mov
add
mov
pop
fadds
push
rcrl
add
call
add
add
add
popf
push
aad
add
add
roll
data16
lds
lock
mov
push
xor
rol
pop
lea
push
push
rol
push
and
add
rol
xor
sub
shl
sub
pop
xor
inc
ror
shr
pop
push
lea
push
push
push
call
clc
add
push
add
mov
add
xchg
mov
fs
sbb
mov
clc
clc
add
add
scas
movsb
jl
jne
sub
pop
pushl
call
push
push
push
lea
push
call
lock
loopne
movsl
add
add
notl
add
add
sahf
ficomps
incb
xchg
test
add
roll
lods
add
jno
pop
int3
mov
add
add
push
add
hlt
cld
rcr
int
jae
xchg
add
lcall
push
push
push
push
push
push
push
call
shlb
in
add
add
loop
insb
mov
add
add
fs
imul
in
add
add
in
mov
add
mov
jbe
add
stos
add
add
sahf
fwait
cli
lahf
lock
add
jle
popf
push
sarb
add
add
add
stc
fildl
pop
add
roll
in
in
lcall
shrb
ds
cli
adc
rolb
add
outsl
shl
xor
sub
sub
lea
shl
shr
pop
rol
inc
rol
pop
push
rol
shr
lea
pop
pushl
call
push
ror
not
pop
call
push
shr
pop
mov
push
push
push
push
push
push
call
add
add
les
mov
mov
clc
arpl
stos
stos
xchg
xchg
add
stos
js
lock
add
add
pop
fs
shrb
ljmp
ljmp
jmp
add
pop
imul
jo
add
add
fsubrs
call
aam
ljmp
push
repnz
sub
push
or
not
add
rol
shl
add
sub
shr
dec
not
pop
pop
push
push
push
push
push
call
mov
add
add
int3
add
add
add
movl
add
rolb
out
arpl
xlat
add
add
jns
scas
test
into
add
fidivrs
push
xlat
add
xchg
add
std
push
add
mov
mov
mov
in
in
pop
pushl
push
xor
pop
call
lea
push
push
push
push
call
add
les
jae
jmp
mov
add
lea
lahf
lds
push
icebp
mov
jae
add
sub
pop
push
push
push
call
je
add
pop
mov
pop
lret
add
jp
add
add
fucom
add
push
jge
xchg
add
push
clc
pop
push
push
add
pop
push
push
sub
pop
pushl
push
push
add
push
or
not
add
dec
ror
sub
pop
pop
push
add
add
xor
pop
push
push
add
pop
call
push
push
inc
rol
push
xor
add
dec
sub
dec
sub
shr
pop
lea
dec
lea
pop
push
push
push
push
push
call
aam
add
in
add
ja
xchg
add
test
push
mov
add
add
xchg
test
push
jbe
jmp
mov
push
xchg
jbe
rcrb
gs
scas
add
add
je
add
jne
lods
add
fwait
add
add
in
pop
pushl
call
push
push
call
jne
add
push
scas
arpl
xchg
test
add
add
pop
add
add
scas
add
sti
mov
add
ja
xchg
add
add
mov
push
add
mov
outsl
lcall
jl
add
leave
add
add
xchg
leave
les
mov
jmp
pop
sub
pop
push
push
dec
inc
shr
xor
pop
call
push
push
xor
add
push
xor
add
sub
xor
xor
sub
sub
pop
xor
rol
pop
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
add
add
add
nop
jbe
add
test
pop
xchg
pop
mov
add
in
roll
add
in
aad
add
lock
add
add
add
filds
add
pushl
push
add
add
pop
call
call
push
add
sub
pop
pushl
push
rol
sub
pop
mov
jmp
push
push
add
xor
push
xor
add
sub
sub
xor
add
pop
sub
rol
pop
push
push
lea
push
lea
push
call
add
mov
add
addb
imul
clc
clc
xorl
add
add
add
add
pop
jmp
fcom
add
fs
rcr
add
add
mov
mov
push
add
jne
call
push
lea
push
push
push
push
call
ljmp
xchg
push
add
fwait
out
rolb
jbe
aad
add
add
xchg
leave
stos
add
gs
test
add
add
jns
add
add
xchg
movsb
add
add
add
idivb
sub
pop
push
push
sub
xor
ror
pop
call
push
push
rol
push
and
add
sub
rol
lea
pop
xor
add
pop
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
cld
fidivs
jb
out
jge
add
add
mov
add
push
jno
shr
ret
jbe
mov
add
lahf
iret
leave
addr16
scas
imul
jae
push
xchg
xchg
add
fwait
add
add
sub
pop
pushl
push
pop
call
push
push
push
call
jb
int
jmp
nop
add
add
pop
cmpsb
add
add
add
add
movsb
cltd
add
add
in
sahf
jbe
ja
lcall
add
int
roll
popf
je
in
hlt
pop
push
push
add
pop
call
leave
push
push
push
call
sahf
xchg
add
fs
mov
mov
push
cld
mull
push
xchg
add
mov
add
sahf
bound
sub
pop
add
push
push
push
push
lea
push
push
lea
push
call
add
push
jae
test
add
cmpsb
imul
jge
pushf
mov
push
mov
cli
add
roll
imul
add
test
sub
pop
pop
pop
push
push
push
call
add
add
add
into
add
add
lods
shr
add
in
leave
cwtl
add
add
add
mov
add
mov
jmp
jecxz
add
popf
add
addr16
jle
idivl
js
pop
into
mov
mov
add
xchg
add
hlt
lcall
push
push
push
push
push
push
push
push
push
call
fidivs
add
in
add
rclb
data16
adcb
les
iret
leave
push
add
jnp
in
pop
add
add
stc
stc
fucomi
aam
loopne
mov
in
in
fcompl
rclb
cld
xchg
xlat
push
push
push
push
call
push
add
rcr
add
push
aam
add
movsl
add
add
mov
add
stc
add
int3
xchg
push
jb
mov
xchg
mov
add
fildl
add
mov
add
out
mov
out
add
add
add
bound
add
call
scas
in
sub
pop
inc
push
push
call
nop
add
in
add
fiadds
out
clc
cmpsl
mov
add
add
add
into
fs
lea
testl
add
mov
imul
push
clc
add
insb
pop
add
add
add
xchg
mov
xlat
int
mov
add
je
add
add
sub
lcall
or
leave
push
xor
pop
ret
push
lea
push
call
in
scas
add
arpl
add
xlat
movsb
cmpsl
add
ret
cmc
pop
mov
add
add
mov
rcrb
cli
mov
test
jmp
jecxz
add
push
xchg
scas
fiaddl
pop
add
add
mov
pop
sub
pop
push
push
inc
sub
pop
mov
cmpl
jne
push
not
sub
pop
mov
push
shr
pop
jmp
push
add
pop
mov
push
shr
pop
and
xor
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
call
scas
jecxz
repnz
arpl
add
loope
test
add
add
xlat
jns
mov
add
add
xchg
cltd
icebp
jecxz
mov
shll
mov
xchg
xchg
loopne
add
icebp
in
add
stos
movsl
add
js
push
mov
lcall
push
add
pop
add
push
push
push
push
push
push
push
lea
push
push
call
add
add
sti
mov
add
hlt
add
cli
test
add
clc
movsb
loop
add
push
fsubp
addl
pop
sahf
xchg
jl
jp
mov
test
nop
xchg
add
sahf
mov
add
mov
add
jno
icebp
aam
sub
pop
xor
dec
push
dec
shl
add
pop
sub
jmp
push
sub
pop
sub
pushl
push
push
push
lea
push
push
push
push
push
push
push
call
insb
jp
int3
add
mov
jae
add
in
out
add
fadds
lea
pop
ljmp
js
int
push
pop
mov
xchg
lcall
push
not
rol
xor
xor
pop
sub
push
push
push
push
push
lea
push
push
call
pop
add
call
int3
out
add
cld
out
jle
add
add
mov
add
add
add
pushf
loop
add
add
pop
enter
lcall
cmp
cmp
call
pop
mov
push
push
call
xchg
sar
add
add
add
int
movsl
add
push
add
lahf
cli
add
ljmp
std
in
sub
pop
lea
push
inc
not
pop
sub
mov
push
lea
push
push
push
push
call
jecxz
add
push
mov
add
mov
aam
cli
mov
fdivl
std
in
jge
in
add
call
add
jmp
add
jp
mov
fiadds
add
jecxz
scas
jae
mov
cli
add
lcall
jmp
pop
add
push
sub
dec
sub
pop
sub
push
lea
push
push
push
push
push
push
push
push
call
cmc
add
add
add
jbe
add
mov
add
add
jne
xchg
fyl2xp1
add
add
jmp
add
add
add
add
jl
mov
add
add
add
mov
shl
add
pushf
add
push
lds
pop
add
mov
add
push
stc
add
add
loope
jecxz
push
mov
fdivr
lcall
xor
lea
inc
pop
shr
and
push
pop
sub
push
add
ror
lea
dec
pop
cmp
jne
push
push
push
lea
push
push
push
push
push
push
push
call
push
mov
push
in
xchg
add
add
add
mov
add
js
imul
mov
aad
mov
lret
jle
out
loopne
aad
xchg
add
lcall
push
sub
shr
pop
ret
push
push
lea
push
push
push
push
push
lea
push
push
call
pop
out
add
jo
mov
add
add
add
add
xchg
add
mov
cli
jb
mov
add
out
xchg
push
add
shrb
out
jge
je
add
cltd
xchg
divl
sub
pop
mov
push
push
push
push
push
push
push
push
call
lods
add
in
add
cli
add
mov
out
icebp
cwtl
add
mov
pop
add
add
enter
add
add
add
add
lcall
cld
push
push
push
push
lea
push
lea
push
push
push
push
call
add
out
mov
add
mov
ret
add
jbe
jge
xchg
push
fcom
add
add
out
lret
mov
pop
pop
lea
xchg
add
add
add
mov
test
in
in
add
sub
pop
push
push
lea
push
call
add
add
mov
loopne
int
enter
fiadds
jns
flds
add
push
mov
add
add
popl
add
mov
add
push
push
push
je
insb
mov
rorb
jne
add
pop
xchg
add
push
pop
push
push
push
push
push
push
lea
push
push
push
push
lea
push
push
call
cwtl
mov
add
roll
add
mov
add
add
aam
test
arpl
test
fdivr
lcall
mov
push
sub
pop
lea
push
ror
lea
pop
sub
push
lea
push
push
push
push
call
mov
rolb
add
add
stos
aam
add
loopne
jmp
push
add
add
xchg
jbe
add
add
add
mov
add
add
xchg
jge
add
jne
jmp
into
in
sti
sub
pop
mov
push
push
lea
push
push
call
pop
push
add
add
lret
shr
mov
pop
add
fwait
cmc
andl
mov
add
into
jbe
add
fld
enter
add
movsl
ja
add
pop
add
roll
add
scas
add
push
roll
filds
add
mulb
lock
shr
add
push
dec
sub
shr
pop
mov
push
lea
push
call
stc
lret
mov
add
iret
add
push
add
fiaddl
mov
push
stos
pop
add
pushf
add
jge
faddl
add
arpl
movsl
jbe
in
loope
add
add
add
mov
pushf
add
jecxz
testb
add
add
ficompl
add
rorb
sub
pop
add
push
push
push
push
call
mov
sti
add
orl
pop
jmp
pop
mov
pop
xchg
add
imul
add
add
mov
add
scas
ja
sahf
enter
jno
popl
add
pop
mov
push
push
call
pop
int3
add
ret
add
gs
add
add
add
add
aam
add
int3
push
mov
lahf
push
js
stos
add
lods
add
jbe
push
add
add
pushf
pop
arpl
mov
jge
push
pop
xor
push
sub
add
pop
mov
push
ror
pop
and
rol
push
push
push
push
push
lea
push
push
push
lea
push
push
call
cmpsb
ret
data16
add
jmp
outsl
loop
add
les
push
mov
add
sahf
mov
enter
jnp
add
mov
add
add
mov
ret
push
xchg
in
std
enter
pop
rol
push
push
push
push
call
jno
rcr
add
add
arpl
les
add
add
addr16
nop
out
pop
movsl
jge
add
pop
js
lret
add
movsl
add
cld
add
stc
stos
add
add
add
add
pop
xor
inc
push
add
pop
cmpb
jne
push
push
push
call
jae
add
add
mov
stc
add
add
add
add
push
add
add
aad
add
add
cld
in
add
mov
mov
push
add
imul
add
jne
lret
je
sub
pop
add
push
lea
add
pop
cmp
je
push
sub
shl
pop
add
cmpl
jne
push
push
push
push
call
add
add
mov
add
mov
aam
add
sarl
add
add
hlt
jae
pop
mov
add
xchg
pop
add
pop
test
jae
nop
jmp
add
mov
test
pop
pushf
add
mov
add
ljmp
sub
pop
xor
pop
push
sub
add
pop
pop
push
add
add
ror
sub
pop
pop
push
xor
pop
pop
push
shr
pop
pop
push
lea
dec
dec
pop
leave
push
push
call
add
out
movl
pop
out
jp
mov
cld
scas
outsl
xchg
add
add
scas
add
add
leave
fs
cmpsb
add
add
notb
mov
xchg
mov
pusha
sub
pop
ret
push
push
push
push
lea
push
push
push
push
push
push
call
add
jno
mov
mov
addl
std
in
xlat
cltd
add
flds
mov
je
mov
add
add
add
addb
add
jnp
mov
cltd
test
cwtl
add
icebp
mov
mov
pop
mov
push
rol
rol
xor
rol
pop
add
mov
push
push
push
push
push
lea
push
push
push
call
add
stc
xchg
add
add
jne
jb
pusha
test
cltd
pop
stc
flds
mov
add
mov
js
add
push
lea
add
push
js
pusha
fwait
scas
add
jp
rolb
cmpb
loopne
lcall
mov
call
ret
add
push
shr
not
pop
push
call
push
push
push
lea
push
push
push
call
add
fcmovbe
cli
push
mov
ljmp
jbe
add
add
add
loop
mov
fdivr
add
outsl
jge
add
out
fst
cwtl
add
je
cmpsb
add
mov
jae
add
add
mov
in
call
push
shr
pop
pop
push
add
dec
sub
pop
pop
push
sub
shr
pop
pop
push
push
push
push
push
push
push
call
into
mov
pop
jns
cmpsl
add
add
add
add
add
add
sahf
add
movsb
add
faddl
fadd
aam
add
add
sub
pop
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
rolb
jns
fs
fldl
out
mov
cltd
in
add
idivb
rolb
popa
add
add
add
movsl
mov
out
ja
mulb
add
mov
push
cwtl
movsl
mov
jl
movb
add
add
lcall
push
lea
push
lea
push
call
mov
addb
xchg
mov
icebp
stos
add
lahf
add
add
add
into
add
mov
lcall
add
add
iret
add
sarl
jge
mov
push
clc
add
iret
sub
pop
leave
ret
push
push
push
push
push
push
push
push
call
pop
add
add
cmc
add
mov
pushf
add
add
add
add
mov
test
add
insb
add
lods
lods
movl
cwtl
mov
add
pop
add
repnz
sti
add
jecxz
imul
add
add
sub
pop
push
mov
push
ror
lea
add
pop
add
push
rol
rol
pop
push
push
push
dec
lea
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
pop
jne
add
add
aad
add
add
test
add
add
ficompl
rorl
add
add
jmp
icebp
add
loopne
add
xchg
std
mov
shlb
jmp
icebp
lahf
xchg
rclb
call
add
bound
mov
mov
fcomps
in
in
mov
push
push
call
jp
jo
lods
add
add
rorl
andl
xchg
imul
add
xchg
out
jnp
add
jmp
add
add
bound
add
movb
adcb
jle
mov
mov
push
fcmovnu
addb
push
push
push
push
push
lea
push
push
push
call
add
rorb
popf
jp
xlat
add
testb
add
imul
in
mov
mov
ja
xchg
push
add
pop
push
add
cmpsb
shll
in
std
mov
add
sub
pop
lea
sub
push
lea
push
push
push
push
call
add
ja
clc
add
add
push
add
push
aam
enter
out
add
mov
filds
cltd
negl
push
mov
add
out
add
test
jl
mov
pop
shll
add
faddl
xchg
jmp
add
rolb
adc
inc
adc
ljmp
push
lea
push
push
push
push
push
push
push
call
add
mov
data16
xchg
mov
in
leave
add
xchg
lea
test
data16
xchg
ja
add
out
iret
push
test
add
cwtl
add
add
in
addb
jne
add
add
add
ljmp
repnz
jle
addb
jl
hlt
xor
imul
leave
xchg
sub
pop
mov
push
lea
push
call
lds
add
pop
add
pop
roll
mov
add
jbe
cld
mov
jnp
enter
stc
add
faddl
add
test
jle
add
xchg
jo
add
add
add
scas
add
mov
add
add
out
add
out
push
into
pop
add
add
add
add
mov
in
clc
lcall
fcos
jae
push
push
push
call
out
mov
aam
pushf
mov
add
jge
mov
xchg
add
cmp
mov
pusha
mov
lcall
inc
clc
push
not
not
not
sub
pop
mov
push
push
push
push
push
call
mov
add
out
pusha
lds
add
fwait
pop
add
add
test
mov
popf
add
incb
lcall
stc
xor
push
sub
ror
pop
lea
push
dec
add
shr
pop
mov
push
sub
pop
add
xor
push
lea
push
push
push
push
call
xlat
add
clc
addr16
add
lahf
in
fadds
xchg
push
enter
xchg
add
add
jae
xchg
fcomp
push
rol
hlt
jns
loope
stos
mov
add
add
sub
pop
rol
nop
push
shr
rol
sub
pop
nop
push
push
push
lea
push
push
push
push
push
call
hlt
bound
add
mov
hlt
xchg
jns
add
bound
movsl
out
pop
int
lahf
bound
mov
add
add
mov
mov
lea
cli
mov
loopne
xor
push
sub
xor
sub
shl
pop
nop
push
rol
pop
nop
inc
push
lea
push
push
push
push
push
push
push
push
lea
push
call
mov
into
loop
add
cmc
pusha
add
stos
lods
fs
add
add
cmpsl
add
cli
add
mov
mov
mov
orl
push
movsl
mov
faddl
sarb
addl
push
lds
fdivrs
add
add
icebp
sub
pop
nop
nop
push
xor
ror
not
pop
cmpb
jne
add
push
add
pop
nop
nop
push
push
lea
push
push
push
push
push
push
call
mov
add
jne
add
add
add
rorl
add
mov
push
mov
xchg
test
add
data16
add
arpl
add
add
test
mov
pop
mov
mov
push
xchg
add
lcall
inc
or
test
add
add
and
add
pop
nop
inc
push
shl
pop
nop
push
sub
pop
nop
push
push
lea
push
push
push
push
call
jge
clc
add
nop
add
mov
ljmp
aam
std
jle
nop
fwait
imul
test
cmpsl
adcb
mov
cmp
jb
xor
push
sub
add
ror
pop
jmp
push
push
push
push
push
lea
push
push
lea
push
call
shl
pop
push
add
add
xchg
in
add
add
add
xchg
add
jle
add
xchg
mov
sub
pop
mov
add
push
shr
pop
movzwl
mov
push
push
push
push
call
add
repnz
lea
xchg
fwait
insb
pusha
jge
add
pop
jae
js
add
aad
add
add
in
hlt
sti
add
mov
shl
add
add
aam
add
loop
popa
lahf
add
mov
add
jbe
add
in
add
lcall
rcll
and
jae
push
lea
push
lea
push
call
ja
xchg
add
cmpsl
arpl
add
xchg
cld
pop
out
fs
jo
cltd
mov
out
ret
add
lds
js
add
add
mov
add
cmpsl
jns
add
add
add
add
add
leave
mov
add
sub
pop
mov
xor
push
sub
rol
pop
xor
shl
push
add
xor
add
pop
xor
push
lea
push
lea
push
push
push
call
jp
test
add
add
add
roll
add
xchg
fisttpl
out
ret
fldl
pop
shlb
add
add
filds
add
cmp
mov
in
in
lcall
loope
push
add
inc
shl
sub
pop
xor
push
add
pop
shl
push
rol
pop
xor
push
add
shr
pop
mov
add
push
ror
not
pop
pop
pop
push
push
push
push
lea
push
call
rclb
icebp
movsb
add
add
ja
mov
add
add
stc
mov
push
hlt
mov
mov
je
subb
int
movl
add
stos
mov
add
add
mov
xchg
mov
push
repnz
fwait
sub
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
je
jge
add
fisubs
add
jl
add
out
pop
call
add
in
fcompl
push
not
lea
shl
pop
leave
push
push
lea
push
lea
push
push
call
ficoms
add
movsb
add
fadds
add
add
xchg
mov
mov
add
roll
add
fcomi
mov
push
outsl
add
add
movb
add
mov
add
faddl
or
push
rol
sub
ror
dec
pop
push
mov
push
add
sub
pop
push
push
sub
sub
pop
push
push
push
push
call
hlt
std
popa
add
into
stos
jno
add
pop
mov
in
xchg
jmp
add
lods
popa
add
stc
add
add
mull
fldl
add
jne
call
add
lods
xlat
fcomps
add
lret
in
in
add
add
add
add
add
push
add
pop
push
push
lea
push
push
lea
push
push
call
fildl
movb
push
push
jnp
add
jl
add
test
add
mov
add
mov
jecxz
add
xchg
pop
pop
fisubl
roll
or
adc
movsb
lea
push
push
lea
push
call
xchg
add
xlat
add
push
add
add
les
add
lock
add
les
imul
push
cmpsb
mov
push
add
in
pop
mov
test
je
push
shr
rol
inc
inc
pop
mov
push
push
push
push
lea
push
push
call
add
mov
test
xchg
add
mov
xchg
add
imul
xor
mov
add
int3
mov
add
add
mov
mov
rol
add
push
lock
add
leave
add
add
add
filds
add
push
jae
sub
pop
test
je
push
lea
push
lea
push
lea
push
push
call
jno
xchg
ja
orl
imul
idiv
nop
mov
jge
add
push
movsl
fadds
add
jo
enter
add
add
test
add
add
cmpsb
int
mov
scas
pop
movsl
fiadds
lcall
notl
mov
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
xchg
add
mov
add
fisubl
imul
in
into
rolb
add
ja
add
mov
in
outsl
out
add
add
jne
data16
add
aad
lcall
add
xchg
in
movsl
mov
add
jecxz
jnp
add
push
cmpl
pop
push
push
lea
push
push
call
add
xchg
into
nop
arpl
insb
add
rcr
mov
movb
add
call
mov
add
rclb
loop
jle
jecxz
add
xchg
mov
jmp
add
push
jo
pop
lods
test
mov
imul
movb
add
hlt
xchg
add
add
add
add
lcall
push
pop
cmp
je
test
je
push
pop
mov
push
sub
rol
pop
inc
cmp
je
push
sub
lea
pop
test
jne
push
shl
lea
not
pop
xor
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
test
mov
imul
jns
add
add
mov
add
mov
call
lock
add
repnz
push
add
add
lcall
add
push
sahf
aam
jmp
add
xchg
add
add
lret
add
add
push
push
push
lea
push
push
push
push
push
push
call
in
imul
mov
out
add
mov
pushf
mov
add
push
add
icebp
mov
int
push
push
aad
movb
add
movsb
add
add
lahf
sub
pop
pop
pop
push
push
lea
push
push
call
fadds
xchg
rcl
hlt
repnz
add
cld
add
mov
data16
add
push
roll
fiaddl
imul
mov
test
out
add
add
aam
xchg
xchg
add
fwait
std
jmp
lcall
push
pop
ret
push
push
push
push
lea
push
push
push
push
push
call
loopne
jae
add
push
add
mov
add
fs
addb
je
mov
add
aad
add
jge
push
mov
repnz
mov
imul
add
xchg
jp
add
add
add
add
lcall
push
push
push
push
call
pop
add
cwtl
add
add
add
add
mov
lock
push
loope
add
push
push
mov
mov
mov
lahf
stos
int
add
lea
fmulp
cmpsl
add
push
shl
pop
cmp
jne
push
shr
add
sub
shr
pop
lea
push
dec
add
xor
xor
pop
mov
push
add
add
pop
test
je
push
push
call
xchg
jnp
add
fmulp
icebp
add
add
hlt
std
add
xchg
pop
add
xchg
addl
add
enter
fidivs
jecxz
stos
add
add
sar
jns
ljmp
sub
pop
mov
add
push
inc
ror
pop
cmp
jne
push
ror
add
not
add
pop
mov
test
je
push
lea
add
pop
mov
push
lea
push
lea
push
call
ljmp
push
add
outsl
mov
movsb
add
mov
roll
add
cmpsb
add
sti
add
stos
enter
mov
add
mov
lcall
roll
loopne
test
call
testl
sti
call
xor
push
pop
pop
push
push
push
push
push
push
call
pusha
add
into
add
mov
add
js
popf
add
xlat
les
push
call
xchg
add
insb
icebp
shl
sub
pop
pop
pop
push
dec
lea
dec
pop
pop
push
push
push
push
push
lea
push
push
push
push
call
pop
add
add
scas
add
ja
mov
xchg
ja
stc
pop
add
add
push
pop
flds
outsl
testb
in
sub
pop
leave
push
rol
inc
not
ror
pop
ret
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
je
lock
jbe
outsl
add
fdivs
add
add
ja
addl
add
pop
fucomi
add
add
add
popf
xchg
add
inc
call
call
ror
pop
pop
pop
push
lea
push
push
call
jbe
jns
mov
add
popa
out
add
add
add
popa
addb
add
mov
add
cmp
push
add
mov
faddl
sub
pop
pop
pop
push
shl
shl
pop
leave
ret
push
push
push
push
push
lea
push
call
mull
movsl
fldl
add
ret
add
add
mov
fistpl
enter
add
add
add
add
add
push
ror
jo
in
ror
add
test
lret
mov
sahf
add
jnp
sub
pop
mov
pop
push
push
push
lea
push
call
mov
add
test
repnz
mov
push
add
add
lea
add
movsb
add
pushf
add
test
add
lret
add
pop
mov
mov
iret
jle
add
xchg
jmp
nop
mov
jne
loop
movsl
add
addb
pop
pop
push
sub
lea
sub
pop
pop
push
lea
xor
sub
pop
pop
push
dec
pop
leave
ret
out
jl
iret
out
jl
iret
sub
iret
iret
out
lods
lret
iret
out
pushf
iret
iret
iret
iret
adc
iret
iret
out
fmul
iret
out
iret
iret
iret
mov
int
int
daa
and
sub
push
xchg
in
cmp
imul
fwait
popa
insb
pop
and
push
xchg
sub
dec
out
mov
xor
inc
sbb
stc
xchg
dec
lcall
inc
xchg
inc
xchg
aaa
fistpll
cmp
mov
popa
cmpsl
xor
mov
add
lock
jmp
cmp
andl
sub
lods
sub
shlb
sub
push
ja
jecxz
out
movsl
add
xor
scas
pop
cmpsb
icebp
add
cmp
in
xorl
inc
add
jne
pop
push
push
pop
push
jns
dec
xchg
xor
jbe
lds
notb
or
pop
sub
sbb
mov
push
loop
out
pop
sub
popa
gs
cli
mov
cmp
adc
cli
je
mov
mov
scas
mov
sub
dec
arpl
mov
imul
addr16
mov
loop
iret
addb
enter
cmp
dec
mov
fwait
sub
les
cli
pop
loop
inc
add
fs
clc
push
sub
repz
and
aam
subb
xor
push
mov
pop
jg
ficompl
rorl
xor
ret
daa
inc
push
stos
shr
out
divb
jns
cmp
movsb
dec
fcmovnbe
movsl
call
sub
mov
out
add
mov
mov
in
mov
sbb
adc
add
repz
and
cmp
mov
loope
flds
push
in
xor
pop
insl
sti
sti
pushf
push
mov
push
sbb
mov
lea
out
adc
mov
cmc
dec
pop
and
imul
mov
movsl
scas
icebp
cmpsl
std
jo
adc
rclb
enter
push
jnp
das
mov
mov
int3
push
ds
cmp
das
add
div
insl
ljmp
mov
mov
sub
rorl
jns
sarb
mov
mov
decl
xchg
nop
aaa
fldcw
or
add
movsb
jecxz
sbb
test
stc
mov
push
std
mov
incb
push
mov
enter
data16
ja
lock
jnp
jle
aaa
jae
idivl
mov
sbb
bound
sarl
ja
setl
cmp
cmc
mov
ja
mov
fidivrl
lea
xchg
push
and
pop
jo
mov
jp
mov
mov
sbb
push
imul
loop
orb
push
rorb
sub
cld
int
and
jo
sbb
jmp
fidivrs
xchg
stos
movsb
mov
xor
insb
lret
add
mov
push
cltd
bound
pop
sbb
or
faddp
push
call
and
inc
sub
mov
xchg
xor
mov
test
sub
pushf
sbb
fistl
in
fxch
scas
xchg
or
dec
or
mov
or
divl
push
in
out
mov
inc
lahf
pusha
mov
adc
pop
ss
jl
and
loopne
dec
lds
sbb
mov
test
sbb
aaa
aad
and
aam
iret
ljmp
scas
fldcw
pop
aaa
fisubs
das
sar
push
ja
xor
sti
outsl
in
or
inc
mov
sbb
das
mov
fnsave
push
loopne
mov
js
andl
push
imul
insb
add
adc
and
call
fcoms
sub
cmp
lret
jb
shll
cmp
push
jae
lds
lret
inc
mov
test
cltd
sub
push
and
add
xor
dec
aas
lret
in
outsl
mov
int3
movsl
lds
inc
mov
xchg
lea
dec
add
xchg
push
push
or
dec
sahf
lds
cmpsl
and
push
hlt
fs
decb
divb
test
in
repnz
imul
in
pop
nop
push
fcmovb
add
fsts
dec
sbb
or
cmp
cmp
jp
andl
stc
sbb
inc
or
adc
push
cmp
or
mov
xchg
push
movsb
icebp
add
lods
xchg
or
lret
les
mov
fidivl
xchg
fstps
mov
into
test
cld
rcrl
pop
lcall
jge
daa
adc
rclb
cmpl
arpl
ret
or
popa
aam
aaa
jo
or
mov
jl
push
test
dec
mov
jbe
int
mov
pop
cwtl
loope
outsl
jno
sub
xchg
xchg
inc
dec
sbb
mull
jo
int
insl
movsl
or
dec
in
lds
inc
lods
mov
cmp
inc
sti
lret
aam
xlat
jl
jge
lret
test
inc
lods
out
xor
test
mov
lods
hlt
mov
jp
icebp
add
fdivr
inc
aas
je
lock
xor
cli
push
addr16
inc
test
dec
jecxz
inc
mov
iret
and
pop
loope
jne
add
sbb
sub
mov
dec
movsl
test
stos
ret
xor
mov
outsl
sub
ret
test
jecxz,pt
es
cs
loope
adc
mov
arpl
xor
ds
adc
imul
lock
fsub
in
xchg
shll
fbld
fistl
fsubrp
inc
sti
cmpsb
sub
jae
movsb
out
outsb
xchg
fs
scas
mov
iret
xchg
dec
jge
pushl
xchg
aas
aaa
cmp
repz
lea
enter
add
mov
loope
ss
xchg
mov
push
pop
xor
dec
sub
pop
stc
xor
shrb
adc
pop
jle
push
add
and
jo
shll
jp
cmpsb
pop
jge
mov
jmp
call
int3
les
cs
in
push
dec
sahf
inc
cmp
xor
call
mov
int3
ljmp
cmp
lds
dec
add
idivb
shr
push
sahf
jle
inc
push
fcmovu
add
fs
cmpsl
stos
pop
lods
out
fldenv
jle
cmp
pushf
mov
adc
adc
rcll
jno
jb
cmp
adc
jbe
pop
js
push
push
testl
mov
push
push
push
sbb
pop
sbb
inc
or
aas
xchg
popf
mov
pop
pop
shrl
loopne
aas
test
in
jne
movsl
mulb
js
or
mov
ret
mov
movsl
popa
in
cmp
js
shr
lods
lods
push
bound
dec
lret
mov
fwait
xor
mov
aaa
leave
sbb
addb
loop
mov
ss
inc
or
dec
les
sti
adc
pop
xchg
push
fisttpl
in
sbb
jns
inc
jecxz
scas
aas
ret
loop
push
and
cmc
repnz
sub
and
mov
or
aas
push
lret
int3
fisttps
ljmp
or
addb
adc
mov
lock
insb
jmp
push
in
imul
jae
mov
xlat
cwtl
lahf
xchg
mov
insl
aam
data16
mov
fcmovnbe
xchg
push
mov
pop
pop
inc
les
mov
test
lea
add
inc
sbb
int3
sub
mov
testl
add
sbb
fcomps
mov
icebp
jmp
icebp
xchg
fcmove
sar
sbb
loope
sub
sub
xor
jno
ret
sbb
shrb
cmp
aam
jo
dec
push
pushf
fnstcw
dec
lret
xchg
test
pop
cmpb
cli
daa
fisttpl
dec
lret
jo
shll
sub
aaa
lds
xchg
cwtl
add
out
jp
in
dec
insb
cmpsb
jge
iret
xchg
imul
movsb
dec
cmpsb
xchg
jnp
testl
int
adc
jmp
pop
dec
dec
jmp
aad
jnp
daa
lock
mov
add
adc
scas
adc
jmp
push
fnstsw
loop
clc
rol
das
dec
fnstenv
cmp
jg
sbb
in
fsubp
dec
pop
mov
dec
iret
cmp
nop
jnp
mov
push
mov
push
jno
jno
jge
push
cmp
mov
add
stos
mov
int
mov
shl
test
add
jbe
test
sub
ja
test
xchg
pop
dec
mov
sbb
les
mov
cmpsb
ret
xchg
push
sbb
fiadds
push
cmp
mov
popa
neg
adc
dec
jg
and
inc
jae
cmc
addr16
add
popf
and
adc
notl
iret
movb
rclb
roll
aam
hlt
sahf
push
jle
jbe
popf
push
mov
negb
rolb
lret
jecxz
mov
mov
inc
jae
jmp
pop
xor
pop
fwait
or
seta
cmp
pop
jo
xor
mov
stos
xor
sub
add
loope
pop
push
rolb
out
xchg
fwait
sbb
inc
jno
out
iret
faddl
sar
aaa
ret
mov
hlt
and
xchg
xor
mov
pavgb
xor
mov
or
mov
nop
xchg
sub
push
sahf
adc
push
add
xorl
gs
or
arpl
or
lret
lods
lods
xchg
sbb
jmp
mov
leave
adc
xchg
test
cmp
lods
push
add
xlat
jle
adc
cmpsl
pusha
xor
fcomps
xchg
xor
insb
test
fildl
aaa
ret
push
leave
inc
ret
out
insl
adc
clc
push
pusha
xchg
lahf
push
js
mov
fwait
movsl
cmc
cmp
cmp
in
ds
sbb
adc
sub
mov
cmc
ja
rcrl
daa
xchg
sahf
jl
xor
sub
iret
cmp
inc
movsb
rcrl
stos
mov
jl
popa
and
mov
ret
inc
cwtl
xor
notl
dec
fucomi
jg
mov
ficoml
cmpsb
arpl
mov
pop
sbb
sbb
or
lea
push
xor
outsb
xor
out
loope
push
mov
sbb
push
add
jge
lahf
jl
sti
fildll
lods
insb
imul
jecxz
add
sti
cmp
xor
cli
call
ret
out
sbb
xchg
lds
pop
arpl
popa
mov
mov
pop
push
adcb
arpl
mov
outsl
loopne
scas
xor
sahf
imul
mov
and
add
dec
and
ja
js
es
pop
xchg
shl
sbb
mov
test
dec
iret
scas
xlat
push
adc
cs
scas
or
pop
and
add
xchg
cs
out
cs
std
jp
in
jecxz
xchg
addb
mov
pop
test
mov
sub
cmp
arpl
fsubp
mov
sub
mov
sub
incb
loop
adc
push
bound
test
xchg
ud1
ja
xchg
inc
sbb
mov
test
jo
and
jl
leave
xor
loope
jbe
mov
popf
or
int3
outsb
mov
out
movsb
dec
pop
leave
dec
loop
fists
xchg
test
fstpt
cmp
fs
jmp
sarl
cmp
call
pop
jnp
pop
add
inc
ret
or
xchg
mov
and
outsb
movsb
jae
push
cmp
ss
and
add
push
arpl
inc
mov
push
pop
sub
in
add
lcall
sub
add
shrl
cmpsb
cmp
popf
lea
sbb
popf
les
pop
ss
dec
xchg
jl
loopne
in
cmp
mov
cmp
popl
dec
push
pop
sub
pop
addr16
hlt
jmp
or
in
addl
mov
xor
jnp,pn
jbe
arpl
mov
pop
loopne
out
mov
sub
xchg
aad
push
data16
vmaxsd
dec
cld
mov
push
xor
mov
xchg
pop
inc
and
cs
mov
les
aas
jns
cs
sub
sub
lcall
imul
data16
inc
ds
stos
xchg
push
cmpsl
stos
push
mov
xor
es
jnp
add
push
fcomip
inc
mov
loop
outsb
imul
pop
dec
arpl
mov
cmpb
mov
lds
out
xchg
subl
xor
dec
xor
xchg
sub
pop
mov
stos
leave
xchg
dec
and
cmp
cli
jae
movsb
sbb
sbb
fdivs
push
lds
inc
js
sbb
add
aad
sbbb
mov
iret
or
push
imul
xor
shrb
mov
lods
mov
movsl
dec
or
push
aas
or
jns
call
not
adc
dec
mov
cs
jae
bound
mov
gs
cmpb
cmp
aaa
jp
mov
decb
pop
cmp
sub
imul
nop
adc
shl
sub
lods
cltd
mov
loopne
dec
repz
in
sub
xor
loop
push
or
sub
xchg
mov
sti
or
mov
clc
xchg
shrd
fisubrs
dec
shl
pop
jo
push
repz
idivl
push
jnp
mov
pop
xlat
lods
call
pop
mov
shll
out
inc
and
shlb
and
cld
xchg
push
sarb
shrb
aaa
dec
outsb
and
mov
sbbl
hlt
adc
sub
std
dec
dec
stos
arpl
ffree
push
pop
mov
aas
shll
enter
repnz
data16
sbb
movsl
cmp
or
aam
loopne
sti
jnp
push
xlat
in
push
fistpll
inc
aam
clc
jnp
test
xlat
lret
es
inc
fsubrl
sarb
mov
adc
mov
add
jle
bound
mov
push
popa
shrl
or
in
fdivrs
mov
iret
les
push
ret
lcall
sbb
aam
lret
cmp
int3
mov
enter
inc
jbe
xor
scas
and
mov
mov
inc
dec
cmp
jno
add
shl
mov
pop
lahf
xchg
decb
mov
iret
ds
test
adc
jmp
push
cmpsb
xchg
test
xchg
cmp
dec
sub
pushf
inc
aad
sbb
jg
ret
xchg
lret
sbb
mov
movsl
lds
mov
nop
fisubrl
push
jo
jns
and
ret
in
outsb
xchg
and
std
mov
loope
fimull
dec
push
test
nop
aas
std
pushf
fdiv
ja
and
loopne
jecxz
mov
mov
cmc
nop
movsb
pop
sub
jle
mov
dec
pushf
out
mov
sub
mov
stos
lods
cwtl
lock
mov
push
imul
stos
cs
pop
in
fstl
mov
jnp
fldt
dec
fsub
xor
mov
and
mov
fcomp
pushf
mov
pop
fcmove
fyl2x
jns
cmp
ret
mov
pop
fsubrs
inc
mov
test
jmp
lret
in
stos
test
adc
add
xlat
out
or
sti
fcmovnb
imul
xchg
push
mov
xor
mov
cmp
jns
adc
add
sahf
cmpsb
sub
mov
lds
popa
mov
mov
mov
dec
loopne
sarl
psubd
push
mov
jmp
sbb
or
pop
cmp
scas
push
mov
push
aad
xor
scas
aam
push
pop
repz
fnstcw
loope
aad
dec
ljmp
into
imulb
mov
pop
mov
inc
sbb
test
sub
gs
jp
rcrb
hlt
mov
int
adc
das
arpl
xchg
mov
and
mov
jo
xor
xor
mov
pusha
mov
jmp
add
inc
mov
popa
dec
lods
xchg
jmp
and
push
cmc
push
bound
rolb
pop
mov
add
testb
and
scas
or
and
cmp
out
dec
mov
je
add
stos
add
jg
out
sahf
test
out
push
mov
xchg
mov
mov
shll
jae
add
outsl
adc
in
mov
xor
inc
adc
add
mov
sar
push
mov
or
cld
out
fidivrl
sbb
mov
inc
out
dec
lods
fldcw
push
insl
xchg
or
imul
mov
int
in
clc
aam
movsb
adc
push
inc
xor
gs
popa
pushf
jp
pop
aaa
xchg
cmpsl
lock
nop
lea
mov
aad
test
clc
dec
repz
test
add
nop
fisttpll
jns
addr16
aas
mov
mov
xchg
sti
cmpsl
jp
gs
mov
lret
fdivr
rcrl
icebp
dec
pop
or
add
jb
adc
ljmp
std
sbb
sbb
and
mov
mov
push
ljmp
push
xchg
sbb
test
fcompl
loope
jle
daa
adc
stos
test
stos
xchg
xchg
jb
out
icebp
test
lret
xor
mov
jmp
mov
addb
pop
testl
cmp
pop
mov
push
xor
inc
inc
xchg
popa
inc
ja
mov
xchg
push
outsl
cmp
daa
fcoml
lret
push
std
add
jbe
and
xchg
lret
mov
out
inc
fs
jge
dec
dec
add
inc
mov
sbb
jns
or
pushf
cld
popa
dec
jmp
xchg
add
in
inc
test
pop
iret
jnp
notb
inc
lea
shl
enter
xchg
sbb
pop
int3
sbb
roll
mov
sti
mov
test
dec
push
vpsrlw
fcmovnb
test
jb
shlb
std
pop
lods
fwait
scas
imul
lcall
out
aas
loope
mov
out
sub
add
jp
je
in
test
outsl
xlat
push
call
adc
adc
out
cmp
fisubrs
bsf
test
jp
inc
inc
in
sbb
cmp
sub
mov
in
rolb
test
fistpl
sub
call
mov
aas
icebp
out
mov
mov
pop
pusha
leave
dec
push
xlat
xchg
sbb
arpl
fstpt
push
xchg
jl
mov
or
xlat
rcrb
xorps
test
test
jnp
imul
xchg
outsl
pop
mov
outsl
fcmove
mov
xchg
in
testl
cmp
rcl
jb
pop
movsl
mov
lret
arpl
mov
cmc
pop
ret
cmp
adc
xor
packsswb
xor
or
xchg
cmp
push
aas
dec
cmp
jle
into
mov
jmp
lea
xchg
or
pop
or
hlt
xlat
arpl
jl
bound
or
gs
sbb
fnstenv
xor
and
int3
jl
pop
jbe
cmp
and
aas
adc
sub
cld
mov
jg
mov
jo
mov
out
icebp
lock
mov
ja
hlt
inc
stos
sub
movsl
adc
pushf
push
movsl
ss
pop
pop
xchg
fisubrs
jo
shrb
fildl
jg
test
sub
int
ret
bound
and
cmp
mov
add
out
call
repnz
and
or
mull
and
xor
dec
inc
int
cmp
pop
jne
sbb
bound
lahf
mov
or
inc
pop
dec
mov
sub
ds
das
xor
mov
xchg
stos
pop
negl
adc
mov
mov
loope
lcall
pop
sub
out
inc
and
or
test
pusha
loopne
les
xor
add
ds
push
lret
ret
movd
push
rcrb
lds
adc
mov
xchg
xchg
lock
pop
cwtl
mov
dec
mov
push
mov
cmp
sub
mov
mov
enter
fdivrs
and
pushf
shlb
mov
sub
stc
flds
dec
icebp
ljmp
iret
fwait
les
out
jmp
sub
sbbb
mov
add
test
xor
lods
setno
inc
loop
mov
dec
test
in
sub
ljmp
jae
mov
jno
mov
sub
jge
jno
les
rcr
mov
aas
fidivs
insb
ret
add
int3
ret
out
dec
sub
orl
pop
fldenv
push
jo
daa
in
jb
mov
xor
rcrl
jb
repnz
sbb
fists
lahf
inc
fldl
pop
xor
into
and
out
inc
jno
dec
pop
mov
mov
icebp
push
cltd
dec
addb
mov
insl
js
cmp
fbstp
in
or
mov
adc
aaa
dec
lods
inc
cmpl
hlt
lock
dec
pop
jns
jg
adc
inc
cmp
imul
shl
and
add
daa
xchg
clc
mov
pop
pusha
or
notb
push
sub
loop
mov
mov
stos
add
mov
sahf
cmc
insb
adc
jge
add
push
push
out
pop
jmp
mov
cltd
stc
mov
or
in
jmp
xchg
js
dec
mov
test
mov
sub
add
mov
xchg
lahf
testb
or
sbb
mov
cmp
and
jmp
xchg
std
mov
xor
push
arpl
mov
mov
pop
insl
mov
mov
andl
jp
push
jns
inc
enter
ds
call
and
loope
iret
xorl
fldenv
or
and
les
ficoms
repnz
movsl
push
out
cs
inc
test
pop
dec
and
nop
jns
or
push
cmpsl
jns
push
inc
stos
jnp
out
into
pop
out
jnp
gs
and
cmp
cmpsl
xchg
addr16
mov
data16
fnclex
and
in
cmp
mov
and
jne
mov
lahf
mov
pop
xchg
mov
sbb
ret
push
out
imul
and
clc
sbb
xor
push
mov
out
xor
inc
sbb
jmp
xor
jns
std
js
pop
mov
add
sub
mov
bound
mov
dec
pop
mov
shll
xor
ret
js
sub
cmc
mov
cmpsl
cmpsb
fwait
or
mov
mov
scas
mov
cltd
mov
sub
in
rcrb
jle
xlat
mov
inc
sub
pushf
sub
shr
and
push
sub
inc
jbe
cltd
jle
or
inc
xlat
iret
mov
repz
jno
jae
jno
ljmp
mov
cwtl
pop
jbe
mov
xchg
cmpsl
nop
dec
popf
test
pushf
bound
insb
mov
add
inc
outsb
cs
cmc
das
sbb
sbb
dec
hlt
popa
sar
jg
out
push
mov
or
stos
shr
inc
test
loop,pt
stos
testl
pop
xor
test
rcl
mov
arpl
or
push
test
stos
or
in
imul
jbe
mov
push
dec
fdivrs
inc
pop
cmc
mov
into
push
out
aaa
aad
cli
in
mov
jge
lret
jno
adc
inc
or
or
sub
cmp
push
in
popf
fsubs
sbb
jno
pop
push
jmp
ss
lea
mov
jne
sub
cld
mov
cld
push
xlat
in
and
repz
lcall
sar
cld
push
shl
add
pop
int
cmc
std
rorb
add
mov
std
mov
push
add
nop
fcoms
xchg
es
int
pop
test
mov
push
outsl
xlat
adc
pop
xchg
cmp
cmp
mov
shll
andb
fnsave
mov
xchg
cmp
or
insb
xor
insb
daa
mov
xor
test
push
test
lret
add
mov
pop
into
inc
cltd
jge
sbb
mov
mov
icebp
sub
sbb
mov
mov
into
inc
sahf
push
or
imul
mov
test
and
push
clc
cld
adc
enter
and
call
cmpsb
sbb
push
cmp
or
int
fwait
testl
rcrb
mov
push
hlt
loopne
scas
jmp
xchg
adc
cld
addr16
lea
and
pop
test
repnz
dec
je
std
jecxz
pop
fdiv
outsl
aad
adc
clc
mov
pop
push
loope
das
pop
push
push
push
test
push
nop
adc
test
movsb
leave
cltd
sbb
xchg
stos
pop
and
out
aas
xor
and
stos
mov
jae
jge
sbb
fadd
in
int
pusha
ljmp
orb
sbb
adcb
movsb
loope
rcll
ret
xor
lock
out
fisubl
pop
ljmp
sub
into
movl
jbe
xlat
mov
pop
xchg
dec
jae
ret
mov
cld
pop
pop
sar
int
dec
out
iret
sbb
sbb
sbb
sbb
flds
jne
and
cmpl
inc
in
dec
aam
popf
clc
mov
js
imul
xchg
pop
in
jecxz
pop
std
notl
lret
push
xor
xor
push
push
pop
out
jns
push
xchg
sti
cmpsl
call
shlb
ret
sub
lods
dec
fiadds
ret
mov
sbb
xchg
gs
sbb
xchg
outsb
in
xchg
addr16
jl
repnz
arpl
std
mov
sub
cmpsl
or
lahf
cltd
es
xchg
nop
xchg
cmpsl
pop
loope
push
cmpsl
sbb
sarl
ret
push
and
add
popa
popf
mov
imul
pop
add
sbb
fdiv
mov
mov
lods
push
pop
ss
sub
outsb
repnz
push
cld
lahf
insl
sbb
ficoms
popf
sbb
push
or
mov
mov
bnd
loope
mov
test
mov
stc
divl
nop
sbb
jle
enter
fs
mov
ret
xchg
mov
rcll
dec
jecxz
inc
push
xor
fwait
cli
push
xchg
push
sbb
mov
adc
fmul
fcmovu
mov
add
jp
add
movsb
shll
mov
jo
jo
int
push
cs
pop
insb
dec
push
xchg
nop
arpl
arpl
inc
dec
fcoms
out
scas
xchg
jecxz
es
xor
jo
pop
add
enter
pop
scas
dec
std
out
ss
rcrl
call
sbb
and
mov
mov
shrl
mov
mov
adc
sbb
scas
stos
jnp
movsl
mov
ljmp
xchg
jnp
enter
adc
out
cmp
dec
lret
testl
enter
inc
lret
xchg
adc
mov
pushaw
add
or
sbb
jno,pt
int
rolb
mov
dec
faddl
aam
loopne
repnz
outsl
repz
add
and
subb
push
movb
sbb
aad
sub
call
repz
xchg
std
jb
push
mov
rcl
push
fldenv
cmp
popa
adc
mov
testb
stc
lret
mov
pop
movl
xor
clc
push
xchg
inc
stc
lea
add
dec
lcall
pop
xchg
add
hlt
jbe
out
call
ds
or
and
iret
ss
fcoml
dec
jmp
cmp
and
fnstenv
into
and
jmp
shl
mov
and
adc
insb
mov
xchg
bound
push
push
aad
cmp
das
jge
lret
pop
int3
pop
leave
sbb
lcall
pop
dec
dec
ja
jae
dec
int
in
int
out
cli
nop
stos
int
flds
xchg
orb
rclw
rorb
cmc
out
les
inc
xchg
jle
push
sub
push
jo
fnstcw
mov
jae
mov
repz
aaa
in
xor
out
call
pop
pop
jnp
inc
loope
gs
daa
xchg
or
fcomip
add
or
or
ds
pusha
scas
mov
popa
xor
push
and
xor
roll
xchg
mov
xor
imul
out
fwait
inc
js
movsl
adc
jmp
out
inc
rorl
mov
mov
mov
imul
or
mov
xor
sbb
dec
xor
outsl
test
daa
popa
adcb
add
dec
sub
ret
sbb
je
stc
repz
mov
les
lods
push
ds
popf
shlb
fnstcw
sbb
ja
inc
mov
cmp
mov
jge
lcall
jmp
testb
add
lcall
mov
in
repz
xor
ret
stos
rcrb
mov
subb
arpl
les
xchg
jmp
xchg
cmpsb
leave
inc
data16
jb
in
das
pop
ret
cmp
cmp
jmp
aam
jo
sub
cwtl
push
mov
mov
stc
jbe
push
xchg
pop
dec
or
push
test
das
cmpsl
add
sbb
push
mov
xchg
jne
sub
out
adc
dec
cltd
sbb
movsb
xchg
addr16
outsb
shlb
dec
pop
jmp
mov
test
call
add
movsb
imul
lds
ja
lahf
fcmove
jp
pop
in
xchg
pop
sbb
and
push
roll
mov
sbb
mov
orb
xchg
shl
push
cli
mov
nop
cmpb
xchg
fs
push
sbb
inc
xchg
mov
movsl
cmp
push
out
lahf
scas
mov
mov
in
jno
test
test
mov
fcoml
ret
and
out
js
rol
stos
jle
sub
cmc
sbb
out
aam
stc
fldln2
mov
test
sbb
lahf
mov
mov
xor
mov
adc
push
cmp
mov
in
dec
addr16
cld
jbe
int
fsubl
pop
icebp
fcomps
loopne
lcall
adc
and
daa
mov
clc
dec
and
cli
stos
mov
nop
and
mov
dec
dec
sbb
push
gs
dec
sub
cli
ret
pop
xor
or
jmp
dec
mov
stos
jns
jo
fbstp
cmpsl
push
mov
mov
push
shll
sbb
push
cs
jb
mov
xor
mov
mov
in
add
jg
hlt
sbb
orb
cli
clc
mov
fs
sub
jle
jae
fbld
repz
xchg
cmp
fwait
mov
notl
ret
sub
dec
inc
xor
outsb
fwait
push
cmp
pop
cwtl
cli
decb
jl
iret
bound
pop
clc
fnsave
fadd
cmpsl
add
mov
std
icebp
les
jno
or
xorb
mov
inc
int3
lds
mov
out
adc
pop
sti
add
cmp
sbb
stc
loope
sbb
adc
mov
data16
adc
xchg
sub
add
mov
stos
cmp
data16
sbb
adc
xchg
xchg
inc
rclb
add
adc
sub
xor
push
push
rorl
lret
in
in
lcall
mov
imul
cmp
xorl
mov
lcall
xchg
loop
adc
call
add
jle
sbb
push
cli
jge
scas
shrb
bsr
cmp
out
jecxz
ret
imul
and
jb
sub
fwait
dec
mov
rol
jo
or
out
mov
call
mov
push
xchg
call
xor
dec
adc
outsb
adc
pop
inc
leave
cmpb
bound
js
imul
in
in
out
pop
jmp
test
mov
inc
imul
pop
movsb
xor
fcomps
ja
mov
and
leave
hlt
loopne
cmpsl
push
dec
pushf
push
sub
shlb
push
insb
rcr
js
test
out
pop
popa
out
in
das
xchg
mov
mov
push
push
dec
imul
dec
jle
adc
push
addr16
pop
sub
push
call
shl
pop
push
repnz
lret
mov
out
mov
mov
cmc
mov
mov
insb
adc
xchg
push
xor
dec
jbe
jae
sbb
push
in
push
paddusw
mov
cld
xchg
mov
push
nop
sub
mov
jle
adc
decl
lds
and
in
mov
loope
mov
jl
xchg
divl
lret
cmp
jge
stos
mov
imul
push
xor
fwait
mov
sbb
clc
add
cmp
dec
lock
test
sub
mov
test
jne
xor
fdivrs
iret
test
ret
inc
push
add
jae
pop
daa
jns
adc
lds
aam
movsl
mov
sbb
scas
xchg
or
cwtl
je
push
movsl
mov
in
lock
dec
dec
ss
sbb
jecxz
push
jne
les
out
mov
mov
cld
lock
lds
clc
arpl
scas
add
mov
nop
lret
cmc
pop
out
jno
js
int3
out
xchg
sbb
shll
jo
pop
test
cmp
push
sub
sbb
nop
rorl
addb
loopne
pop
int
cmp
mov
dec
adc
push
jns
outsb
icebp
inc
mov
sub
inc
add
addr16
mov
push
xor
mov
in
movsl
inc
inc
adc
jo
push
fstl
xor
xor
int3
in
sub
fimull
lods
dec
mov
push
pop
sbb
leave
jmp
and
jbe
and
mov
jp
or
add
push
pop
out
sarb
fwait
pop
adc
lock
or
repnz
push
mov
push
ja
push
test
in
rol
mov
imul
mov
xchg
adc
lods
add
sti
xchg
repz
pop
imul
cmp
mov
insb
testl
lret
arpl
dec
loope
push
repz
jecxz
aad
inc
es
stc
cld
fisttpll
stos
aad
divl
ljmp
aad
faddl
daa
cmpsb
jg
xor
lret
adc
jle
jge
lock
leave
je
push
or
cmc
test
cwtl
mov
fdiv
cld
imul
outsb
out
mov
sbb
popa
cltd
cmp
inc
cmp
push
fstp
xchg
dec
out
inc
xor
pop
roll
popf
idivl
push
ss
cmp
clc
inc
pop
aaa
add
or
lods
jecxz
je
fwait
push
out
adc
dec
arpl
adc
mov
loop
push
mov
sbb
and
aad
or
lret
adc
cmp
repz
loop
mov
xchg
add
cmpl
inc
xor
fmull
popf
mov
xor
arpl
xchg
jae
or
cmp
iret
xchg
stos
jbe
dec
adc
dec
mov
push
jo
mov
cmc
aas
or
dec
daa
mov
add
or
push
dec
mov
mov
in
push
mov
xchg
test
dec
jl
jecxz
jge
scas
lock
lret
movsl
fdivs
fstpt
and
xor
pop
insb
divl
jne
adc
out
mov
mov
aad
mov
push
mov
dec
pop
test
mov
dec
ja
jge
cmp
icebp
xorb
pop
outsl
inc
int3
iret
jnp
pop
fs
fcomps
scas
mov
xchg
push
cmpsb
push
mov
push
push
inc
xchg
jo
jmp
sub
lds
shlb
dec
xor
jno
pushf
aas
cmpsl
sbb
aam
imul
mov
je
out
movsl
mov
mov
push
sbb
movsl
add
push
push
enter
sarl
pop
jb
bound
aas
sbb
into
faddl
data16
fisubl
mov
outsl
add
xchg
lods
or
stos
cmpsb
pop
adc
inc
pop
push
pop
into
test
jle
push
pop
mov
sub
std
testb
loopne
test
stos
mov
xchg
jae
mov
or
sti
es
imul
jae
dec
dec
cmpsl
test
sbb
fisttpll
or
and
mov
ficomps
popf
push
sub
sbb
cld
inc
pop
test
daa
out
cmpsb
inc
adc
pop
outsb
mov
inc
jne
lds
pop
sbb
or
loopne
test
or
xor
xchg
orb
ja
jno
cmp
xchg
mov
jp
mov
pop
pop
pop
inc
shlb
in
add
stc
aas
jp
shlb
lea
pusha
xchg
insl
jge
push
cld
addb
ja
lcall
jnp
sbb
cwtl
jns
int
out
pop
nop
push
loop
int
sub
jge
loop
sub
sti
mov
lahf
aad
xor
fildl
pop
xchg
ret
sub
int
mov
popf
aas
loope
pop
jbe
dec
mov
inc
jecxz
cwtl
push
pusha
sahf
adc
or
shll
xor
aas
imul
mov
mov
fbstp
leave
dec
js
andl
lds
sarb
orl
add
dec
lods
and
add
int3
ficoms
or
lahf
push
rcr
mov
add
sbb
dec
inc
lods
ljmp
and
jmp
pop
ds
insw
jno
jne
cli
dec
pop
adc
test
shll
movsb
fadd
cmp
adcl
xchg
xor
cmp
jle
xorl
push
pop
cld
and
xchg
shlb
in
inc
or
cltd
add
arpl
decl
add
in
bswap
rcrl
pop
mov
jno
pop
sbb
out
stos
aad
fnstcw
fwait
ss
fwait
mov
ljmp
inc
sub
scas
add
xchg
shl
pop
shll
pop
fs
xor
call
popa
fnstcw
loopne
mov
pop
mov
jp
flds
mov
jl
int
mov
dec
sbb
push
popa
dec
repnz
pop
cmpsl
dec
stos
cmc
ss
jg
sbb
out
or
fcoml
ret
jno
xor
std
and
in
push
pop
aam
dec
jbe
icebp
cmc
leave
and
push
pop
cmp
push
push
push
xor
xlat
xchg
inc
and
sub
cmpsb
mov
dec
outsb
mov
test
lcall
fnsave
add
stos
das
xchg
xor
cli
mov
test
and
lods
mov
test
cmp
aas
sub
jo
in
or
cmpsl
fs
cld
mov
dec
mov
mov
xchg
into
adc
clc
shrb
fwait
sbb
std
test
mov
mov
dec
popa
call
pop
into
mov
test
sbb
xchg
xchg
cmp
mov
mov
shl
test
int3
mov
xchg
xlat
rcrb
mov
mov
fucomip
dec
dec
sbb
std
cmp
dec
mov
shrb
pop
xchg
insl
adc
aad
shll
stos
or
aas
add
stos
fwait
mov
inc
pop
testl
fwait
push
lahf
repz
loop
and
test
dec
psrlq
lcall
out
xchg
daa
out
xchg
enter
shlb
mov
xor
mov
push
jno
dec
stos
adc
cli
sub
and
jmp
js
test
in
rcrl
lock
mov
fwait
lds
ss
xor
scas
sub
add
inc
cmp
push
cld
dec
lcall
and
sub
mov
sub
mov
fidivrs
test
imul
push
outsb
xor
cmp
xor
out
cmp
pop
push
jle
mov
push
test
ret
xchg
adc
push
rcl
add
aas
xor
pop
cmp
into
cld
insb
in
dec
insl
fs
fcmovnbe
ror
mov
es
adc
int
sub
xor
test
mov
or
or
mov
mov
fiadds
popf
and
mov
xchg
and
xchg
or
dec
adc
ljmp
add
fwait
xor
bound
js
cmpsb
daa
xor
xor
popa
xchg
pop
dec
or
and
cwtl
rclb
stos
dec
loopne
mov
fcoml
ja
mov
push
les
pop
divl
subb
negl
enter
gs
jns
clc
test
insl
mov
shrb
or
inc
dec
mov
filds
popf
adc
jnp
dec
adc
loop
repz
pushf
in
fldcw
xchg
and
pop
mov
adc
into
xor
ss
leave
in
shll
je
aad
jecxz
js
popa
pop
sub
jmp
mov
cmp
movsb
or
decb
enter
or
jb
push
adc
or
sub
cmp
or
aad
add
xchg
aam
stos
cmp
lret
cmpsb
andb
xor
cmp
xchg
xor
cwtl
xchg
xor
mov
popa
mov
clc
pop
jg
shl
jmp
jo
pusha
sub
pop
lret
nop
cmp
popl
cmpsb
push
pop
xchg
sbb
arpl
fstl
imul
sbb
and
pop
shlb
xor
ret
gs
adc
push
add
call
roll
mov
adc
rcrb
adcl
jg
negb
iret
push
xor
test
gs
fisttpl
jl
mov
dec
jp
xor
mov
cmp
jne
andl
add
fiadds
xchg
push
ficomps
mov
jo
std
ss
cmp
repz
scas
push
mov
inc
lcall
mov
sar
arpl
addr16
dec
aaa
dec
jne
add
jle
push
es
scas
inc
aad
ror
mov
xor
xchg
sub
pop
aam
fcompl
cwtl
rcl
lret
testb
push
fdivrs
out
push
xchg
sub
add
fistl
inc
inc
pop
add
btc
mov
sti
sbb
add
or
lock
lcall
or
cltd
mov
mov
scas
jge
cmp
addr16
repz
pop
push
cltd
mov
sub
decl
repnz
mov
jle
insl
pop
jmp
dec
dec
jnp
mov
inc
xor
aas
dec
shll
in
test
mov
subb
cmp
and
add
push
pop
out
cmp
pop
ja
adc
jge
xor
mov
add
mov
pop
mov
sub
inc
mul
push
add
sbb
out
cmp
test
test
loop
fbld
mov
popf
popa
aaa
repnz
xor
ss
test
inc
incl
jle
jo
dec
lock
cwtl
aas
xchg
mov
lret
xchg
mov
pop
mov
xor
and
mov
out
dec
inc
ja
jp
xchg
mov
mov
inc
nop
pop
push
sahf
add
sub
fisubl
cmp
mov
fsubl
and
cli
shr
adc
push
xchg
xor
push
pop
adc
iret
and
addb
cmpb
push
jo
dec
cmp
mov
mov
push
sbb
push
cli
xlat
or
icebp
outsl
xor
notl
or
and
out
push
dec
jbe
adc
xlat
mov
cmp
jg
sbb
aas
imulb
lods
jb
daa
pop
ret
mov
mov
pusha
cltd
js
xchg
mov
cmp
and
and
jbe
ret
sbb
inc
adcl
sub
add
ficoml
int3
sahf
push
mov
sbb
push
iret
add
cmpb
lods
pop
cmp
cmp
xchg
pop
popa
or
nop
cmp
into
hlt
clc
cltd
inc
inc
inc
shlb
xchg
std
icebp
arpl
inc
bound
cwtl
sbbl
xor
sub
fstps
imul
inc
lahf
sub
lahf
ret
add
xchg
adc
push
pop
add
mov
fucomi
in
icebp
lret
inc
adc
sbbl
cmpsb
push
push
xchg
xchg
cmpsl
fidivl
jmp
lret
popl
adc
lret
je
fsub
les
cld
repnz
pushf
test
fsts
and
xorb
mov
sub
movsl
shll
cltd
xchg
retw
rol
lods
mov
popf
or
cmpsl
out
inc
decl
push
jl
movsb
popa
in
sbb
rolb
push
sti
jle
pop
imul
or
adc
sbb
dec
cmc
add
pop
mov
loope
sub
repnz
push
xor
and
icebp
xor
fs
mov
pushf
or
push
sbb
jb
sbb
pop
lret
ljmp
adc
dec
jae
loope
aam
sbb
loope
aas
outsl
test
lea
loop
and
gs
es
push
pushf
movb
movb
lahf
push
push
out
xchg
insl
add
sbb
int
js
cs
inc
xor
mov
cli
aaa
test
xor
pop
mov
dec
jne
data16
sub
xor
sbb
hlt
mov
insl
mov
aad
pop
repnz
cmp
mov
xor
mov
dec
jns
xor
push
push
bnd
repz
clc
push
arpl
push
or
inc
cld
push
hlt
xor
pop
test
addr16
ret
out
jl
aas
insb
adc
mov
push
mov
outsb
mov
push
jbe
out
xor
sbb
loope
fisttpll
stos
lret
test
mov
mov
imul
lcall
in
fs
add
call
inc
rcl
sti
std
push
in
sub
add
fmuls
or
add
stc
mov
lea
xor
dec
push
shll
lods
adc
movsb
sbb
and
stos
adc
call
dec
jb
imul
dec
pop
xor
and
add
sub
fwait
cmp
lahf
mov
and
xchg
jecxz,pt
sub
inc
fistps
xchg
or
cwtl
lods
pop
pop
gs
push
stos
mov
lret
mov
loopne
add
mov
ljmp
scas
xchg
aas
hlt
sbb
xchg
lods
inc
je
jnp
repz
sbb
in
dec
pop
jp,pn
sbb
dec
insl
jae
jne
sub
incl
jecxz
cmp
orl
pushf
or
dec
hlt
loopne
iret
lret
xchg
cli
mov
cmp
dec
in
jl
call
enter
sbb
mov
add
or
mov
bound
stos
jnp
pop
and
fwait
xor
inc
scas
outsl
add
pop
call
lods
mov
cli
subb
inc
lock
shrl
or
and
inc
fadds
roll
sub
negb
mov
push
lods
push
jns
and
or
pop
push
inc
roll
pop
lds
push
inc
mov
pop
pop
mov
sub
inc
pop
mov
push
jg
mov
adc
jo
mov
cmp
rcl
mov
mov
jnp
movsb
cli
sti
shlb
cli
clc
rcr
inc
aas
mov
xor
std
mov
ret
xchg
mov
inc
call
jg
add
and
pop
jo
mov
and
lods
rcrl
xor
pop
fimuls
mov
outsb
mov
ljmp
sub
adc
sbb
cmp
aad
loope
ret
pop
fcomps
ffreep
movsl
idivb
push
mov
inc
mov
mov
adc
inc
xchg
jge
and
imul
ja
popf
mov
xchg
add
sub
xchg
cmp
divb
lds
in
fs
lods
pop
or
and
ret
jecxz
shrb
outsl
inc
mov
push
nop
js
in
in
adc
scas
addr16
inc
sarl
fidivrs
add
mov
jp
loope
cwtl
adc
jmp
or
cmp
mov
push
xor
mov
das
aad
loope
std
stos
daa
and
sahf
xor
pop
ret
stc
outsb
jecxz
push
mov
mov
jg
push
xchg
imul
hlt
js
sahf
test
sbb
sets
push
and
popf
rorb
dec
fwait
test
xchg
adc
and
lcall
pop
fistl
js
pushf
icebp
push
fsts
inc
hlt
mov
js
jle
sbb
push
fdivrl
ret
nop
jl
mov
inc
faddl
mov
cltd
inc
js
movsl
push
lahf
push
sbb
test
xchg
xchg
mov
push
xchg
jg
ss
movsb
leave
test
or
rclb
mov
pop
and
cmpsl
and
cmp
cld
or
inc
push
sbb
rcll
jae
dec
push
dec
cwtl
jmp
je
cmp
dec
shlb
popa
push
pop
movsb
and
sbb
jne
lret
mov
mov
and
push
sarb
xchg
sbb
ds
jns
pop
and
and
outsb
pushf
enter
push
es
adc
jle
aas
movsb
add
fldcw
insb
add
cmp
sub
mov
loop
aaa
sar
int
push
xor
and
push
xchg
cltd
insb
outsl
jmp
jge
sub
pusha
push
ja
data16
data16
test
sub
imull
lahf
aaa
sbb
mov
out
movsb
push
xchg
icebp
dec
sub
inc
mov
pop
test
leave
xchg
mov
mov
mov
out
push
adc
dec
out
lock
inc
mov
inc
arpl
ret
mov
push
mov
pop
ret
push
add
mov
pop
outsb
xlat
xor
andb
fnstcw
call
push
add
push
mov
lret
ss
xor
mov
cmp
aaa
or
jns
pushf
xorl
gs
adcb
fdivl
sti
push
pushf
pop
fidivl
loopne
inc
xor
push
loope
insl
gs
fs
cmpsb
aam
dec
jp
lock
int
cli
popf
cs
pusha
jno
shlb
adcl
inc
shll
mov
ljmp
xchg
or
add
fimull
int
das
jns
rolb
arpl
ret
sub
adc
and
xchg
jg
fwait
test
push
xchg
inc
cmpsb
lock
fisubrl
cmp
stos
fcoml
sahf
in
outsb
sub
push
dec
or
shld
std
daa
mov
or
fistps
scas
pop
adc
daa
push
xchg
outsb
aam
and
repnz
repnz
aaa
arpl
mov
enter
bound
xor
rorl
mov
mov
mov
xchg
fnstcw
stos
and
push
out
xchg
fwait
mov
rcl
aam
cmp
sub
inc
outsl
inc
mov
sub
sub
imul
mov
hlt
mov
aaa
lock
shlb
pushf
out
leave
je
jecxz
push
xchg
ljmp
out
push
mov
adc
jge
faddl
repnz
jle
dec
lcall
mov
adc
sub
gs
sbb
jo
xor
out
and
stc
mov
movsb
cmp
repz
cmp
jnp
jmp
lods
xchg
negl
cmc
dec
push
mov
scas
jge
fdivs
jae
jnp
lret
xor
fwait
scas
test
push
iret
jmp
pop
stos
mov
fwait
and
pop
xchg
or
gs
push
dec
xchg
dec
shll
fxam
sbbb
xor
je
pop
add
sbb
mov
ja
call
jecxz
orb
leave
dec
adc
inc
mov
jecxz
inc
ja
aas
out
lea
lret
pop
inc
clc
iret
fidivl
jae
sub
adc
adc
mov
cmp
sahf
scas
orl
jp
test
repz
and
and
roll
and
add
mov
loopne
aam
mov
insl
jge
aad
scas
and
sbb
int
mov
aad
mov
inc
sahf
addr16
inc
jns
mov
mov
mov
les
bound
sbb
clc
xor
ljmp
imulb
test
xor
pop
mov
push
xor
lret
fildl
outsl
inc
cld
push
outsb
xorb
xchg
lods
lahf
jecxz
ds
icebp
jge
icebp
jns
fucomp
push
mov
dec
stc
into
in
mov
insb
test
lret
mov
insl
and
gs
push
into
repz
jbe
out
sub
repnz
daa
push
adc
lret
sbb
test
push
or
in
jbe
movb
push
dec
dec
sub
xchg
or
lods
pop
sub
gs
add
mov
cmp
jno
dec
sarb
xchg
mov
mov
loopne
and
pop
jg
jo
push
adcl
in
cmpsl
repz
roll
xlat
inc
adc
rep
mov
push
in
ret
or
sbb
les
sbb
xor
mov
ret
aad
sub
xor
icebp
jbe
cmpsl
rorb
xor
data16
mov
pusha
xor
jbe
lock
shlb
aaa
add
inc
pop
scas
xchg
jo
push
xchg
sub
pop
cmp
subl
fistps
rorb
out
adc
scas
outsl
dec
add
loopne
jbe
in
dec
pop
and
cld
cmpsb
roll
mov
ljmp
jl
add
sub
mov
add
int
jg
arpl
stos
jp
ficoms
inc
in
xor
dec
jno
ss
test
das
push
cltd
lret
enter
pusha
ret
lcall
pop
sbb
int3
je
ret
xchg
pop
or
pop
mov
dec
xor
les
jo
sub
mov
aaa
push
xor
mov
push
clc
xor
xchg
adc
sub
push
inc
test
xchg
daa
cmp
in
les
inc
xor
add
pop
cmp
shlb
les
sub
push
cmp
jbe
imul
xor
cwtl
xlat
pushf
int
xchg
add
mov
dec
inc
into
aaa
adc
push
cmp
faddl
cmp
mov
push
push
xchg
sub
ret
pop
or
jae
sti
push
jnp
fs
push
into
fsubrs
mov
adc
adc
dec
sbb
in
mov
and
add
jg
mov
insb
mov
xchg
ret
inc
sbb
mov
inc
test
aas
push
push
lsl
mov
out
test
mov
std
jns
or
or
mov
pop
dec
mov
test
popf
cwtl
mov
cwtl
sub
lcall
fdivrl
cmp
sbb
xchg
sub
stc
push
push
pop
cmp
xchg
cmp
mov
push
ja
aam
lock
out
and
hlt
pop
repz
sub
inc
xor
outsb
iret
and
insl
cmp
out
push
outsl
sub
rcrb
popa
and
ja
jb
mov
lock
and
sub
inc
lret
xchg
sub
fucomp
xchg
das
out
jo
xor
in
xorl
cmp
mov
mov
and
pop
xchg
sbb
pop
jns
es
or
loope
dec
sbb
jne
mov
lods
or
dec
push
push
cmpsb
xor
mov
out
add
rol
adc
mov
lock
je
enter
popf
outsb
push
mov
mov
xor
xchg
in
repnz
xchg
in
cmp
cmp
pop
and
in
popa
fcomip
pop
adc
mov
shrb
int3
add
fdivr
dec
and
inc
sub
xchg
pop
pop
mov
xchg
shrl
ds
mov
sub
cmp
mov
jo
sub
mov
ss
dec
test
scas
mov
and
dec
pop
call
xchg
outsl
sti
xchg
sbb
repz
mov
sbb
icebp
repz
xchg
andb
jg
xor
jns
inc
push
mov
jmp
dec
add
jge
je
mov
xor
jmp
xchg
nop
lds
repz
outsb
sub
scas
ja
test
or
or
xor
sarb
pop
shrl
jle
or
lds
test
mov
jnp
mov
icebp
andb
les
pop
dec
adc
or
push
cmp
jbe
push
insl
subb
jg
andl
jnp
lea
pop
jp
out
xchg
inc
mov
lods
jb
jge
fwait
add
popf
cmpsl
iret
repz
adc
inc
jne
xchg
hlt
dec
movsb
mov
jbe
push
lea
or
xor
and
mov
cmp
dec
pushf
jp
int3
sub
fdiv
imul
sub
lods
cmc
or
sub
icebp
dec
adc
dec
sub
rorl
outsl
cmpsb
out
pop
mov
cs
ljmp
mov
sbb
call
loope
mov
add
loopne
fcompp
mov
xchg
mov
dec
cmp
daa
push
pop
lret
orl
loop
jecxz
add
ficoml
ljmp
mov
sub
add
repnz
std
push
lret
sbb
sub
dec
inc
pop
repz
push
sub
lock
mov
xchg
vmaxpd
push
daa
mov
pop
movsb
or
leave
push
sbb
addr16
push
jmp
push
dec
mov
xchg
mov
add
test
das
inc
pop
ss
iret
add
test
lock
and
mov
call
outsl
test
outsb
sbb
add
or
int
jno
jle
fcoml
stos
jo
jp
ret
mov
inc
and
dec
test
mov
sub
daa
fistps
insb
adc
es
repnz
std
bound
adc
inc
test
dec
mov
mov
cmp
fistps
add
aam
inc
insb
push
xchg
insb
inc
mov
scas
sarl
xchg
cmpb
cld
or
daa
push
or
fs
sub
sbb
adc
cmp
shll
mov
lahf
mov
notb
loopne
add
out
andb
jp
loope
mov
xor
repnz
jbe
and
pop
sbb
pop
lcall
lret
sahf
or
je
xor
int3
int
xchg
xchg
mov
sub
ss
leave
sbb
cltd
lret
sub
jns
sbb
stc
addb
sub
cmp
sbb
imul
add
adc
xchg
mov
mov
xchg
xchg
loope
xchg
inc
jg
sub
aad
mov
cmp
pop
mov
inc
enter
ljmp
pop
sub
xor
adc
and
sub
inc
mov
pop
divl
and
mov
mov
jns
cmp
les
sub
xchg
cld
and
ret
xchg
push
hlt
mov
add
ss
jbe
cmpsb
mov
gs
mov
addr16
in
les
es
mov
ja
loopne
ja
test
push
int3
in
test
testb
mov
inc
mov
test
jae
jno
cmp
popf
adc
jle
or
and
daa
jo
add
movb
ror
push
clc
std
fldcw
push
push
adc
imul
sahf
lock
xorl
pusha
ret
or
cld
mov
adc
pop
cmp
pusha
cld
sub
sbb
bnd
adc
outsl
and
jne
mov
mov
pop
inc
and
cmp
sub
pusha
xchg
push
push
lods
imul
fs
mov
and
push
mov
fidivrs
cmpsb
or
aas
mov
imul
cmp
jbe
das
xor
push
dec
xchg
xchg
orl
call
lcall
sbbl
ret
fwait
fsubl
in
dec
or
inc
mov
dec
xor
in
or
inc
pusha
lcall
stc
ret
loope
sbb
xor
jbe
xlat
test
ljmp
outsb
pop
sub
mov
inc
int3
push
and
popa
jnp
fwait
into
lock
sub
enter
repz
das
sub
adc
and
mov
pop
mov
pusha
cltd
cmp
sub
mov
data16
stos
xor
out
push
dec
xlat
or
mov
pushf
ja
shrb
nop
mov
iret
and
cltd
shll
xorl
dec
and
cmpsl
std
les
xchg
cmp
leave
push
inc
jmp
adc
push
rcl
mov
jnp
mov
in
mul
fdivrl
movsl
dec
out
test
hlt
jecxz
test
xchg
dec
orb
sub
mov
test
and
inc
cltd
int
inc
and
jge
xchg
fldenv
idivb
sti
test
push
cmp
dec
fs
jmp
jb
push
or
mov
mov
or
out
test
or
adc
inc
test
push
repnz
enter
jno
jge
bound
cmp
add
lods
push
mov
bound
mov
sarl
mov
shrl
cmp
and
jno
fld
cwtl
dec
pop
xlat
mov
daa
mov
inc
andl
pop
cmpsl
rcll
or
enter
push
push
out
jle
add
scas
je
sbb
jno
mov
fbld
and
xor
jle
hlt
xchg
aad
rcll
outsb
cld
jg
dec
sbb
iret
in
cmp
cmp
ds
or
repnz
add
out
fstl
sub
xchg
and
in
lods
pop
xchg
fisubl
jge
loopne
loope
inc
daa
test
sbb
fdivl
mov
lahf
xor
sub
inc
push
pop
arpl
and
js
xchg
out
or
in
insb
add
mov
mov
les
rclb
gs
lock
sub
scas
push
cmp
xor
stos
mov
push
js
js
ds
mov
nop
mov
pop
sub
pop
mov
mov
inc
and
stos
jge
or
pop
aaa
out
out
push
cmp
add
mov
mull
loopne
std
xor
xor
ja
lods
jg
stos
out
ja
adc
ljmp
mov
xchg
movsb
out
or
xor
xor
nop
in
lds
leave
mov
jbe
add
xor
inc
dec
pop
sahf
dec
dec
jns
imul
imul
push
imul
sbb
enter
movsb
frstor
inc
mov
mov
pop
jb
mov
aad
dec
mov
xor
out
loop
jno
bswap
xchg
mov
adc
xchg
or
push
loope
lods
cltd
sub
add
aas
xchg
add
pop
jb
pslld
clc
lcall
ror
and
push
fstl
aam
dec
es
cmp
out
mov
mov
xchg
pusha
pop
ja
int3
andl
add
inc
mov
jmp
das
into
aas
sub
out
sub
mov
outsl
dec
lea
lcall
test
inc
dec
test
clc
push
orb
jbe
je
cmp
push
push
mov
add
cltd
mov
stos
and
jg
jmp
mov
xchg
mov
dec
xorb
ffreep
or
add
add
jecxz
cld
sti
and
sbb
pop
test
out
mov
dec
lret
aaa
push
jne
cltd
inc
mov
sbb
or
mov
pop
insl
je
leave
test
dec
xchg
or
xchg
pop
arpl
xor
push
mull
dec
dec
dec
je
pop
clc
sarl
and
mov
jle
into
shl
jg
in
sbb
fidivrl
sbb
add
mov
add
int
mov
cmp
mov
add
mov
out
jmp
push
xor
or
sub
loope
leave
outsl
mov
in
lods
sbb
jp
popa
int3
inc
imul
daa
dec
out
das
das
imulb
in
sub
sti
out
jmp
cmp
dec
pop
aas
mov
scas
mov
jbe
sub
cmpsl
daa
jae
hlt
outsb
cmp
push
adc
cmpb
mov
aas
stc
add
sbb
dec
add
mov
xchg
jbe
clc
daa
nop
div
jmp
ret
fildll
jne
repz
dec
ret
xchg
push
jmp
je
mov
xchg
or
pop
push
nop
clc
push
xchg
jp
dec
int3
in
dec
jecxz
sub
dec
popf
jbe
cmp
inc
fs
mov
repnz
and
mov
cs
and
jg
push
insl
js
into
dec
cmp
pop
bound
cmp
jae
outsl
lock
cmp
adc
pop
in
bound
inc
add
sti
jecxz,pt
sub
dec
push
scas
sbb
repnz
adc
sub
sbbl
dec
repz
sbb
xlat
mov
sub
js
shl
xor
push
out
test
mov
incb
dec
dec
in
test
jb
outsl
ret
or
add
mov
add
scas
imul
xor
mov
mov
das
and
les
js
mov
jg
cmp
loope
cwtl
mov
add
pop
jge
xlat
mov
jae
incb
jae
dec
push
mov
or
ret
or
add
mov
add
repnz
cmc
out
lods
mov
cmpb
pop
xor
pushf
cmpsb
test
pop
jmp
ret
repz
jae
xchg
stos
int3
lret
mov
int
push
sbb
call
push
cmpsb
daa
mov
or
jmp
mov
adc
inc
mov
repnz
nop
mov
mov
and
push
stos
imul
xor
sub
stos
ds
cmpsl
inc
sbb
pop
push
adc
mov
les
push
add
aad
ud1
clc
xchg
and
scas
dec
mov
or
mov
cmp
mov
insl
ja
sbb
pop
sti
mov
or
pusha
inc
addl
int
and
and
mov
rorb
mov
lahf
jo
jo
mov
sub
je
popf
inc
mov
stos
pusha
ljmp
jnp
lds
fidivs
dec
xchg
or
insl
jnp
movswl
sar
int3
adc
sbb
js
jno
movsb
jno
lock
scas
nop
mov
inc
inc
scas
push
pop
and
js
popf
cmc
movsl
inc
lret
loop
rcll
push
stos
cmpl
out
flds
fs
popf
lods
adc
jbe
mov
cmp
sti
aad
aam
pop
hlt
adc
sub
mov
icebp
xor
sbb
pop
ja
inc
inc
aaa
imul
dec
inc
popa
xchg
mov
jle
rcrl
adc
cld
mov
xor
xor
dec
push
or
pop
daa
xor
or
mov
adc
push
gs
jge
and
call
icebp
mov
into
mov
outsl
push
adc
pop
inc
mov
lods
stos
fcompl
sbb
mov
pop
fildll
outsl
andl
xor
pop
pop
bound
jg
incl
cmpsb
pop
xor
inc
pop
js
and
cld
leave
shll
dec
pop
sbb
scas
push
adc
jmp
push
sbb
jg
inc
mov
into
cmp
and
cs
pop
pop
fmull
mov
mov
adc
arpl
jbe
aam
mov
in
sub
cwtl
insl
mov
pop
loopne
cmp
test
mov
mov
cmp
adc
mov
sub
jp
xorb
push
pop
movsb
icebp
into
rcll
pop
cmp
cld
movl
push
dec
push
pushf
sbb
jl
or
dec
wrmsr
ficoml
je
int3
xchg
aam
rcl
mov
push
ljmp
repnz
stos
pop
movsb
sahf
testb
jl
xchg
out
mov
lock
fadd
or
mov
push
mov
divl
xchg
pusha
or
fldcw
fidivrl
leave
shrb
mov
push
sub
push
test
push
xor
jg
insl
inc
jnp
bound
mov
mov
in
shr
insl
rcll
fsubr
cmp
jno
mov
dec
inc
ljmp
js
roll
clc
pop
repz
insl
add
sbb
mov
xlat
add
rclb
dec
daa
push
push
test
cmp
sahf
hlt
movsb
sub
out
movb
lret
into
std
sbb
cmp
cli
cmp
mul
out
arpl
pop
out
add
in
add
in
aad
xchg
aas
cmpsb
xor
pop
arpl
dec
ds
popf
jmp
inc
xchg
push
jns
sbb
xchg
scas
add
sub
ret
sahf
dec
div
roll
or
jg
clc
je
int3
cltd
loop
add
jecxz
lret
xchg
and
lret
pop
dec
lahf
leave
cld
jmp
xchg
ret
sbb
stc
aad
jg
repz
dec
xor
pop
mov
ljmp
fistpll
mov
or
xor
xor
inc
mov
pop
aaa
scas
mov
cs
sub
sbb
in
out
sbb
sbb
loopne
test
lret
ja
data16
jns
mov
xor
pop
dec
les
mov
sub
dec
sbb
icebp
pop
cmp
inc
push
pop
xor
mov
leave
daa
dec
dec
sub
jbe
jns
lret
xchg
mov
lods
and
repnz
xchg
js
out
sahf
push
dec
scas
fidivl
mov
lcall
push
out
sub
jge
roll
clc
xlat
xchg
or
dec
icebp
lea
sahf
inc
popa
into
pop
push
sub
xchg
push
xchg
jno
lods
sub
sarl
data16
test
pop
daa
dec
test
xchg
xor
in
jbe
xor
jp
imulb
enter
cmpsb
xchg
scas
insl
pop
xor
pop
push
mov
lret
das
jnp
or
divb
adc
mov
lcall
mov
xorb
das
mov
adcb
sub
jo
bound
xchg
push
je
test
in
sahf
xchg
push
hlt
jbe
fistl
dec
mov
dec
scas
fisubl
xchg
mov
stos
sahf
sti
test
inc
jmp
bound
xchg
out
dec
sbb
pop
shrl
jnp
repnz
mov
pop
lret
repnz
xor
mov
or
mov
add
movsl
or
cmp
cmc
push
mov
sub
pop
push
push
pop
xchg
sbb
mov
inc
aad
and
add
popf
xchg
inc
in
jmp
vpshaw
insl
pop
push
fisttpll
loope
adc
out
cmpsl
outsb
xchg
dec
sti
pop
cltd
cld
ljmp
mov
push
in
xchg
add
jmp
pop
inc
xor
jle
lock
push
in
fwait
cmp
rorl
cmp
test
inc
push
mov
xchg
dec
sub
xchg
xchg
jae
sbb
push
xchg
add
and
cmpsl
imul
pusha
mov
mov
xchg
xchg
repnz
clc
sub
cmc
add
dec
or
int3
cmp
mov
and
add
or
aaa
popa
sub
mov
sub
cltd
jg
loope
lods
int3
inc
dec
jo
sbb
sti
jno
iret
xchg
xchg
shll
inc
sbb
int3
cmpb
fs
enter
push
jl
repz
out
mov
push
adc
cmp
xor
cld
sbb
je
adc
adc
div
outsl
int3
pop
mov
in
and
dec
out
mov
loopne
cmp
aas
xchg
pop
je
out
mov
inc
inc
in
hlt
lods
das
fists
lock
in
xchg
pop
pushf
mov
adc
cmp
push
dec
sbb
adc
and
sub
lods
or
arpl
fnsave
xor
repnz
sbb
jne
ljmp
mov
push
cmp
jb
jno
cltd
pop
nop
adc
add
xor
cli
jge
cmp
pop
push
mov
popf
loop
add
icebp
or
and
xchg
cs
mov
xchg
lods
and
enter
mov
popf
pop
xor
mov
mov
cmp
jmp
out
mov
pusha
out
aad
popa
xor
sbb
xchg
rolb
lock
lock
sub
repz
and
mov
jle
xchg
cmp
push
repz
mov
sarb
pushf
xlat
lds
jg
ret
xor
fisttpl
nop
dec
mov
xchg
fisubrl
bound
dec
fisubl
dec
xchg
mov
and
test
and
lds
out
jns
popa
addr16
adc
mov
aaa
imul
xchg
stos
shl
js
jb
mov
fidivl
movsb
imul
and
mov
pusha
and
jno
nop
pop
cltd
xchg
in
in
mov
dec
push
sbb
mov
call
call
xor
mov
sbb
xchg
fs
jl
sub
push
xchg
subb
ds
dec
fucomp
fdivr
push
lds
ljmp
imull
xchg
mov
sbbl
cmpsl
inc
test
pushf
dec
mov
jecxz
xor
jne
xchg
insb
mov
mov
cmc
ficoml
pop
repz
sbb
sbbb
pop
xchg
adc
and
bound
dec
rcrw
mov
cmp
push
adc
lahf
sbb
lcall
loope
cmp
cmpb
fiaddl
adc
and
pop
popa
loopne
lea
mov
sbb
ret
and
loope
lret
xchg
dec
loop
or
lret
jo
jbe
loopne
out
data16
cmp
dec
adc
imul
jnp
rolb
xchg
data16
loopne
loopne
dec
mov
incl
push
cs
out
out
mov
ja
pop
test
pop
jecxz
adc
mov
in
test
insb
xchg
add
mov
jp
nop
mov
sbb
pop
aad
gs
cmp
push
jle
push
dec
mov
ljmp
test
scas
mov
fdivp
push
mov
push
cmp
xchg
data16
shll
addr16
pop
adc
inc
out
sub
pop
faddl
in
mov
xchg
cwtl
or
jl
pop
shl
loope
add
jl
mov
out
fsubrl
sbb
adc
adc
jo
sub
int3
adc
insl
out
push
pop
imul
add
repz
enter
sarl
inc
push
push
nop
inc
add
out
daa
lock
pusha
loope
xlat
pop
aaa
call
lret
in
dec
push
lret
jmp
int
stos
add
sbb
adc
sbb
or
adc
insb
stos
lods
lods
add
or
leave
outsb
jecxz
adc
sub
sub
adc
inc
and
mov
jns
add
pop
or
loope
xchg
dec
js
test
cmp
sahf
sub
cmp
push
adc
fs
imul
jge
jp
jl
mov
ss
aam
ds
mov
or
cmpsb
fisubl
sub
adc
cmpsl
mov
jns
hlt
rorb
xor
subl
cmp
bound
pop
jne
daa
and
outsl
stc
sub
ja
out
sub
nop
ja
lock
enter
loopne
jecxz
cmp
nop
comiss
mov
pop
addr16
jbe
popf
int
dec
movsb
pop
sub
lock
add
push
xchg
xchg
push
push
xor
clc
xor
out
ret
repnz
popa
fisubs
sub
call
aas
inc
cmp
icebp
jbe
add
inc
cmp
flds
test
jle
enter
nop
dec
xor
shll
sar
scas
dec
gs
ljmp
repnz
add
xchg
or
pop
sbb
shrb
sub
and
insl
mov
in
stc
test
inc
imul
stos
mov
out
xchg
jecxz
dec
sub
outsl
lcall
mov
mov
pusha
movsb
and
bound
lods
int
stc
lea
xchg
lret
add
sub
dec
xlat
push
jne
and
mov
inc
std
sbb
push
cmp
movsw
xchg
int3
cmp
or
xor
cmpsb
dec
fdivr
add
scas
in
sbb
jb
inc
inc
jge
xor
mov
jns
xor
cmpsb
cmp
fcoms
ja
mov
in
out
aas
or
mov
push
in
inc
in
push
add
push
cmp
je
xchg
inc
inc
or
in
int
pop
stos
les
mov
sbb
xchg
roll
repz
in
jmp
pusha
lock
cld
divb
rclb
sbb
enter
mov
arpl
aad
adc
aaa
sub
lcall
pushf
xor
mov
mov
ret
mov
mov
arpl
out
add
mov
icebp
lcall
fwait
mov
das
mov
mov
outsl
pop
xor
mov
cltd
scas
repz
mov
push
or
iret
movsl
jbe
or
test
ljmp
in
cltd
repz
xchg
add
aaa
and
fsubp
xlat
adc
scas
repnz
ret
lret
lock
xchg
cwtl
aam
cmpsl
insl
jns
mov
adc
push
jg
rcrb
lods
push
dec
insb
push
mov
loopne
pop
daa
lcall
stc
outsl
es
mov
xchg
jge
shrb
mov
jno
pop
roll
cs
lcall
mulb
fmuls
sbb
out
lods
imul
scas
mov
mov
xor
testl
push
fmuls
test
push
pop
dec
dec
cld
fwait
xchg
sub
loop
scas
test
mov
xlat
mov
sbb
inc
sbb
xor
fstpl
sete
es
sti
jmp
sbb
mov
mov
xchg
pop
xor
and
cmc
imul
fisubs
xlat
inc
fists
movsb
xchg
hlt
das
jp
push
push
inc
adc
mov
sarb
pushf
jge
aam
dec
inc
mov
shrl
les
and
or
fwait
or
xchg
lret
sbb
mov
pop
insb
and
mov
pop
stc
int
cmp
lret
mov
cmp
jae
sbb
and
jge
xchg
adc
sbb
sbb
push
mov
outsb
into
jnp
leave
imul
xor
incl
pop
ds
mov
je
fmull
sbb
sbb
das
or
sub
fs
cmp
jge
pop
inc
xor
or
insb
mov
mov
mov
xchg
jmpw
mov
std
shlb
dec
lret
mov
mov
jno
addr16
scas
and
add
cmp
out
cltd
pop
sbb
imul
sub
mov
sbb
and
add
sbb
mov
fs
lock
cwtl
mov
mov
push
jecxz
inc
xchg
and
aaa
stos
jb
rcrl
sysenter
outsl
push
or
jnp
out
test
sbb
adc
repnz
pop
mov
pop
sub
jge
cli
in
inc
gs
mov
jae
push
or
daa
sub
inc
pop
dec
mov
out
aas
aas
mov
jmp
sbb
sbb
sahf
pop
cmp
out
and
push
or
lcall
cmpsb
cwtl
in
sbb
mov
cmp
in
outsl
adc
push
int3
repnz
fcomps
call
push
lods
cmc
fwait
adc
je
movsl
roll
pushf
sbb
inc
shrb
repz
js
test
adc
fucomi
scas
sub
cmp
arpl
jno
test
dec
mov
ss
mov
sti
xor
sbb
rclb
data16
cmp
xchg
xor
mov
mov
test
mov
xor
mov
aad
mov
pop
cs
les
subl
sbb
sbb
data16
popf
stos
gs
pushf
mov
mov
cmp
cs
in
mov
in
add
lret
es
or
stc
rol
jnp
roll
jmp
jmp
mov
cmp
mov
mov
popa
test
push
xchg
in
ret
xchg
adc
sahf
aaa
pop
rcrl
shrb
or
pop
dec
inc
adc
out
pop
ja
cli
ds
jg
lods
inc
or
pop
or
sarl
sub
insb
sub
sbb
mov
push
push
add
jl
ljmp
dec
into
or
loopne
push
stos
clc
pop
sarb
mov
fcmovnb
mov
mov
sbb
cmp
movq
int3
mov
add
in
daa
inc
lock
push
sbb
dec
scas
icebp
in
push
les
ss
push
daa
mov
adc
loopne
mov
push
cwtl
test
or
cltd
mov
cmc
dec
mov
inc
adc
push
fwait
mov
aam
mov
lret
adc
push
mov
inc
xchg
mov
push
cld
sbb
repnz
imul
sti
sbb
addb
popa
in
es
sbbl
leave
push
mov
addr16
cmp
inc
popf
mov
int3
popf
hlt
imul
inc
lods
sbb
sub
inc
push
dec
mov
sub
mov
enter
mov
inc
and
int
movsl
loopw
movsb
xor
push
cld
push
sub
push
test
pop
test
hlt
ret
aaa
ret
mov
and
xchg
adc
shrb
xchg
test
push
cwtl
enter
lods
test
dec
jne
inc
and
xchg
nop
push
cmp
cmpsl
cmp
lret
mov
cmp
push
mov
inc
xor
fs
xchg
daa
jb
jmp
es
jnp
push
bound
insb
movsl
add
sarl
sub
or
mov
and
into
mov
sbb
mov
aaa
xchg
push
sbb
mov
pop
xorb
push
imul
or
mov
mov
push
mov
push
daa
pop
daa
dec
lock
ss
cld
sub
in
jmp
adc
repz
and
fdivr
xchg
xor
and
repnz
popf
jno
test
adcb
sbbb
cltd
lret
loop
dec
xlat
xchg
pop
neg
flds
test
sub
lahf
pop
xor
dec
leave
sbb
bound
iret
dec
adc
gs
stos
cmpsb
arpl
pop
insl
cs
push
sub
jne
aas
stos
fimuls
jmp
dec
mov
psrlq
call
jl
ja
das
out
cmp
and
fcmovnbe
lods
scas
inc
inc
insb
aaa
outsb
mov
outsl
pop
fisubrl
jmp
jae
pop
enter
stos
jae
cmp
xor
hlt
in
jmp
mov
lcall
mov
dec
insb
lret
dec
outsl
add
adc
movsb
inc
sub
lds
std
mov
out
call
xchg
cmpsl
cmpl
xchg
or
jb
xlat
sbb
and
mov
shrl
push
mov
rcrb
mov
icebp
mov
jo
xchg
mov
clc
add
std
mov
dec
mov
mov
sbb
sub
pop
fisubrl
fs
dec
jne
mov
clc
mov
xchg
or
cli
orl
test
push
mov
and
mov
rcl
cld
inc
mov
or
add
jge
mov
pop
test
gs
xchg
das
inc
filds
sub
mov
pop
in
leave
loope
sbb
push
add
push
jo
jmp
aaa
sub
shr
sub
dec
jb
xorl
xchg
jo
fucomi
inc
imul
dec
add
cmp
aaa
push
cmp
xor
mov
loop
ret
xchg
and
mov
mov
xchg
xlat
sahf
push
cmp
mov
iret
dec
push
lret
xor
aas
push
or
dec
xlat
int3
push
sub
and
xchg
mov
add
ror
repnz
fcmovnb
lods
je
mov
sbb
pop
mov
or
lahf
fs
push
fadds
pop
rclb
xchg
mov
fwait
pop
inc
arpl
pop
aaa
jb
add
scas
mov
adcb
loopne
and
mov
lret
addr16
movsb
jns
stc
cltd
cld
or
movsl
jl
std
jg
ljmp
push
adc
sub
xchg
icebp
jb
cmp
sbb
pop
jmp
in
push
lds
mov
sub
inc
sbb
enter
repz
inc
shr
sahf
xchg
inc
inc
cltd
lret
mov
jge
mov
jns
aas
mov
leave
shll
rdtsc
add
and
cmp
mov
and
mov
outsl
sub
pop
xor
sub
cmc
clc
jge
outsb
jae
es
repnz
xor
jns
xchg
xchg
aas
xlat
nop
adcb
aaa
cli
outsl
cmc
xlat
ret
and
sbb
push
sbb
xchg
inc
sub
pushf
movsb
pop
lock
int
call
andb
je
cmp
daa
add
pop
cmp
inc
inc
icebp
sub
jbe
xor
insb
mov
lods
adcl
dec
and
push
arpl
stos
pop
jmp
xchg
jmp
xchg
fldln2
data16
lea
testl
xor
ret
push
jecxz
scas
fcomp
mov
inc
push
negl
xchg
lds
jecxz
fwait
xor
mov
add
jne
scas
out
adcb
mov
sbb
aaa
aad
push
push
fwait
xor
jbe
and
lock
adc
sub
cmp
popf
in
sar
bound
jg
cwtl
jp
mov
cmp
jg
sahf
repnz
mov
xchg
test
das
mov
or
add
out
dec
imul
cmpsb
dec
or
adc
call
scas
xor
test
dec
fdivrs
xchg
cltd
cmp
je
fwait
mov
inc
cmpb
mov
test
jae
mov
push
push
xor
xchg
add
mov
cmp
push
inc
or
inc
jg
pop
shlb
cmp
xchg
aad
jns
cmp
add
fldcw
mov
inc
mov
mov
dec
jnp
cmpsb
popa
push
sahf
mov
push
out
lcall
aam
xchg
insb
push
aaa
sub
sahf
and
cmpsb
aaa
inc
dec
inc
mov
mov
cltd
out
mov
rorl
inc
imul
push
out
and
repnz
jb
shlb
ficomps
fldenv
add
jno
push
cmp
mov
in
mov
cmp
imul
aad
int3
repnz
mov
pop
and
sub
sahf
pop
scas
inc
iret
stos
or
push
push
mov
stos
rcrl
pop
pushf
sub
call
sti
fcomps
push
or
dec
jne
psllq
or
jg
ja
sub
cltd
jns
xchg
xor
lea
aas
repnz
xchg
and
je
and
loope
les
leave
in
jg
xchg
mov
ds
ret
push
dec
xchg
aaa
cmp
or
push
mov
cmc
cld
cld
stos
jb
in
sbb
repz
shlb
fidivrl
mov
outsl
imul
lret
add
xchg
movsb
lds
jae
xchg
lds
push
push
push
nop
jmp
loop
fcmovnb
jg
sbb
push
fstl
push
jmp
rorb
jne
xchg
push
xchg
mov
daa
push
out
jns
or
in
jle
or
jmp
fistps
dec
imul
jp
jp
push
in
divb
mov
push
sub
dec
cmp
fildl
add
xchg
es
adc
jmp
jge
mov
and
jecxz
pushfw
scas
icebp
js
sub
xchg
testl
outsb
and
and
aam
add
imul
ficoms
fnstenv
mov
cwtl
and
das
enter
sub
test
lock
cmpsl
lea
xor
popf
inc
and
inc
xchg
push
pop
mov
xor
arpl
clc
fisttpll
sub
aas
enter
lahf
call
push
test
xor
jmp
aas
push
push
jb
bound
movsl
int3
mov
mov
xchg
xor
mov
mov
mov
xor
mov
inc
pop
int
pop
imul
jbe
scas
jns
pushf
femms
popf
inc
inc
jnp
push
pop
inc
mov
adc
addb
je
xchg
lret
add
sbb
mov
into
dec
cs
and
iret
sbb
mov
xchg
enter
mov
push
mov
push
add
mov
xchg
ds
mov
adc
lret
out
adc
and
inc
repnz
sub
mov
add
xchg
or
add
clc
test
pop
lds
and
pop
test
arpl
mov
jbe
gs
mov
pushf
jmp
sahf
adc
ja
lea
enter
jbe
aas
jmp
lret
out
mov
or
push
dec
lds
sbb
mov
adc
mov
push
stc
cmp
cmp
xchg
pminub
popa
sbb
insl
rol
repz
or
mov
fs
push
ret
popf
pop
adc
movsl
xchg
pop
xor
not
dec
jg
and
andl
cmp
sbb
jb
pop
test
scas
test
rcll
or
cltd
lahf
loopne
jp
sbb
dec
pop
lods
pop
scas
or
pop
cmpsb
or
pop
divl
cmc
std
in
sub
adc
lods
movsb
nop
fcmovu
test
insl
sbb
mov
fsubs
sub
jecxz
sbb
hlt
mov
xchg
in
in
lods
sub
or
ret
xchg
adc
xor
scas
inc
xor
dec
shl
mov
sti
push
cmc
leave
mov
hlt
cld
sub
dec
dec
lods
test
adc
xlat
and
cmp
clc
bound
and
int3
dec
ss
push
es
ret
xor
shll
xchg
sub
and
addl
jnp
adc
nop
sbb
xchg
jbe
stos
cmp
ljmp
lds
ret
repz
ss
xor
enter
aam
mov
mov
xchg
add
ljmp
xorl
jbe
and
sbb
inc
sub
ret
mov
cmpsb
movl
jnp
jmp
jne
shlb
shll
add
lods
popa
cmp
arpl
mov
test
jl
into
lahf
mov
xchg
cmp
adc
outsb
xchg
repz
lret
inc
adc
pop
sub
movb
movsl
clc
jl
xor
notl
inc
pop
imul
in
dec
inc
push
sbb
cmovnp
js
xchg
cwtl
sbb
loopne
push
fistpll
aas
pop
sbb
dec
cwtl
fsubr
xchg
loope
je,pt
test
sbb
pop
in
add
fs
push
in
jmp
add
inc
lods
push
xor
xchg
out
leave
xchg
dec
xchg
out
push
test
daa
push
sbb
je
jbe
jo
mov
outsl
xor
pop
ret
lret
popa
sarl
inc
xor
stc
divb
cltd
xor
jnp
pop
mov
test
out
jbe
sbb
dec
push
jle
popa
push
sahf
pop
cmpsb
aas
lds
sbb
into
jge
lcall
int3
and
inc
testb
aas
mov
rcrl
test
rol
in
stc
adc
and
repz
fsub
and
into
pop
cmp
idivb
out
mov
movb
dec
or
ljmp
inc
repz
jmp
push
inc
adc
into
sbb
inc
pop
and
mov
xor
sbb
jo
scas
sbbb
inc
push
dec
push
repz
fidivl
sbbl
mov
divl
xchg
sub
jmp
arpl
or
push
jecxz
mov
outsl
jl
movsl
push
push
jb
push
mov
mov
mov
sub
xchg
add
push
lret
lds
inc
ss
push
out
lds
das
or
ficoms
leave
jmp
or
aam
ret
mov
xchg
negb
and
and
xchg
andb
insl
xchg
jg
out
cmpsb
jno
sub
dec
jbe
sbb
and
dec
cmp
cmp
add
lahf
mov
and
or
movsl
mov
js
ljmp
outsl
lods
pusha
fs
movsb
xchg
dec
mov
mov
push
mov
lret
stc
and
mov
inc
sti
jle
add
popf
iret
test
into
or
mov
jecxz
outsb
cld
mov
or
cmp
movsb
leave
jae
pop
popa
inc
dec
dec
icebp
mov
jbe
inc
sarl
or
and
test
mov
pop
hlt
xlat
lea
lds
xchg
jne
mov
lods
or
mov
jno
imul
adc
push
loope
dec
jmp
clc
mov
add
orl
sub
sti
ljmp
sub
adc
xchg
xchg
pop
mov
lods
mov
lret
jge
xor
jle
dec
lahf
clc
mov
push
and
call
lret
cli
mov
loope
pop
enter
cmpsl
cmp
or
mov
es
clc
insl
mov
je
jbe
bound
cmp
push
out
or
and
push
push
and
or
pushl
push
mov
mov
enter
outsb
fistpl
dec
mov
jb
and
sub
lock
adc
mov
mov
pushf
inc
push
loop
mov
packuswb
iret
push
dec
lret
cmp
cld
xor
lods
jp
fisubl
pop
loop
fcoml
pusha
in
sbb
lods
lods
sbb
into
sub
cli
sahf
cmpsb
in
sub
adc
leave
ljmp
xchg
mov
fidivrl
or
jg
jo
test
mov
dec
adc
in
cmpsl
mov
jnp
cli
inc
lods
mov
jg
dec
iret
pop
mov
popf
aam
push
jae
fwait
xor
dec
sarb
iret
cli
add
sbb
sub
pop
pop
push
jo
pop
cmp
outsl
adc
insb
bound
mov
push
mov
aad
mov
stc
xchg
addr16
int3
ss
in
nop
popf
mov
aad
cmp
adc
or
or
outsb
lds
cmp
aam
rcll
add
cs
push
loop
out
out
das
cltd
loop
js,pn
inc
mov
add
stos
lock
sub
int
sub
mov
adcl
leave
or
in
clc
das
cltd
pop
lods
ljmp
sub
mov
push
in
loope
loopne
std
inc
adc
scas
inc
inc
xchg
mov
arpl
add
sahf
ds
cltd
cmc
andb
cmpsb
jb
cmp
push
cmp
icebp
sbb
adc
sbb
and
sub
and
xor
or
push
jmp
je
pusha
movsb
push
jb
cmp
push
or
popa
mov
ds
movsl
imul
jae
push
inc
daa
cwtl
popf
mov
adc
add
aas
ret
incb
and
jbe
pop
cmp
mov
shlb
cs
js
sub
adc
pop
adc
jge,pn
jns
cwtl
in
inc
call
arpl
or
clc
lods
mov
jb
in
xor
cmpsl
mov
pop
sub
sbb
dec
loopne
sub
jbe
lds
aad
lock
nop
lret
test
inc
xor
bound
loopne
gs
mov
cmpsl
mov
add
data16
aaa
mov
es
or
stos
cmp
js
popf
insl
push
push
jnp
movsl
fsub
fcomps
enter
cmp
rolb
and
negl
in
shll
dec
mov
xchg
cmp
in
xor
insl
dec
addb
add
test
out
push
lret
lret
fs
loope
loope
mov
sbb
nop
mov
dec
dec
insl
fmuls
mov
dec
out
mov
in
mov
sub
mov
rorl
xchg
and
stc
and
jl
jmp
hlt
dec
xor
pop
cmp
lods
imul
adc
sbb
mov
jnp
mov
mov
cli
push
out
pop
stos
popa
mov
icebp
outsl
xlat
into
jmp
push
mov
loope
stc
addr16
inc
out
jnp
sub
xlat
arpl
popa
call
dec
aaa
lret
sbb
xchg
movsb
or
clc
mov
add
enter
imul
push
push
push
adcl
cmp
cmc
popf
lods
add
in
ss
jp
or
sub
cmc
pop
dec
sbb
pop
sbb
mov
xchg
cltd
outsl
jge
ss
xchg
pop
adc
or
sub
repz
cld
sbb
daa
mov
and
scas
mov
cmpl
fimuls
or
ljmp
stos
inc
and
xor
addr16
cmp
add
jmp
pop
ss
sub
mov
loop
mov
adc
adc
pop
ror
jb
mov
mov
test
mov
pop
cli
xlat
xchg
sub
stos
pop
test
dec
jg
and
adc
cmp
and
test
inc
fistl
mov
add
mov
mov
adc
mov
push
sahf
dec
fs
cmpsb
jno
int3
mov
bound
outsb
pusha
xchg
dec
pusha
imul
ss
adc
and
sub
stos
mov
popl
addr16
scas
inc
insl
xor
gs
hlt
mov
sbb
sbb
cmpsb
and
pop
loopne
scas
pusha
inc
mov
mov
out
popa
mov
aas
pop
imul
iret
ret
xchg
mov
fisttpl
mov
pop
in
cmpb
mov
mov
int
and
in
jno
or
popa
repnz
pop
mov
adc
xor
mov
dec
jmp
ret
dec
cli
outsl
inc
inc
dec
jns
xor
or
aad
das
stc
pop
add
push
sbb
fcoms
sub
pop
mov
pop
or
xor
enter
or
add
cmp
pop
insb
adc
lret
test
push
lcall
sbb
imul
jecxz
shrb
mov
leave
sbb
sub
inc
loopne
jnp
movsb
xor
lds
popf
dec
ret
pop
push
mov
outsb
lods
push
outsl
adc
push
dec
cltd
cmp
mov
enter
lahf
push
xchg
test
inc
dec
shrl
dec
mov
ljmp
sbb
xchg
addr16
jne
ret
rcll
sti
sbb
rol
jl
push
loopne
add
and
inc
imul
xchg
xor
and
lds
mov
inc
dec
pop
jmp
out
enter
rcrl
adc
sbb
jmp
or
mov
cmp
mov
inc
push
cmpsb
xchg
ljmp
pusha
jl
jmp
adc
scas
das
jl
mov
into
pop
rolb
insb
sub
and
xlat
or
fnstcw
insl
sbb
mov
xorb
popa
mov
stos
add
xchg
or
lahf
fwait
sub
imul
movsb
cmc
inc
or
mov
pop
gs
adc
call
pushf
cmpsb
call
popf
push
cltd
pop
xchg
push
push
repnz
sub
or
jmp
out
jge
push
mov
or
mov
mov
jecxz
or
and
das
push
add
shl
jl
sbb
lret
sub
daa
add
inc
cmp
cmpsl
repz
dec
ss
mov
fsub
mov
xor
mov
sbb
popf
jns
adc
rolb
jns
roll
fs
adc
imul
and
mov
std
or
xchg
outsb
aas
addr16
inc
jnp
rolb
sbb
sbb
sub
pop
or
call
and
pop
sbb
mov
imul
jb
mov
negb
test
aad
jl
push
sbb
xchg
jmp
loopne
insl
inc
or
dec
fstpt
push
sub
or
and
or
insb
adc
or
sub
jne
stos
popa
pop
mov
mov
cld
cmp
push
jae
fadd
lcall
insb
test
mov
loopne
das
cmp
ret
sbb
es
sti
and
arpl
test
outsb
imul
lods
xchg
sbb
loop
mov
sbb
pop
into
enter
stos
sub
pop
jb
inc
mov
sub
dec
xchg
inc
mov
jb
and
or
std
xchg
dec
sub
pop
cmc
push
add
negb
fstpt
pop
mov
adc
mov
mov
ds
adc
cmp
cmp
push
ja
pop
mov
enter
cmc
adc
cmp
cmpsb
call
ja
push
mov
mov
fmulp
pop
cli
dec
jge
lea
cmpsl
out
mov
sbb
cld
ret
dec
mov
adc
mov
cli
lahf
jno
sbb
sbb
or
xor
sarl
repz
hlt
xchg
mov
adc
imul
lock
pop
sub
push
aaa
incl
icebp
jmp
mov
or
pop
or
sub
mov
dec
cwtl
dec
cli
das
mov
nop
cmp
lahf
fstps
push
sbb
add
or
sti
scas
mull
mov
loopne
sub
or
out
push
xor
jl
insl
inc
iret
fcmovne
sbb
push
push
or
mov
outsb
out
mov
push
out
lods
pushf
mov
xchg
xchg
test
xchg
ljmp
notb
lods
sub
and
fwait
xchg
repz
jo
repz
jp
inc
imul
mov
pushf
xor
std
jbe
add
sbb
push
inc
inc
fstpl
movsb
xor
mov
inc
lds
popf
addr16
sbb
pop
dec
dec
xchg
push
mov
leave
xor
inc
sbb
dec
fs
lahf
and
jge
sub
cmp
mov
lods
shlb
rcll
mov
mov
mov
dec
pop
lds
mov
push
pushf
adc
xchg
mov
sub
push
aad
cmovae
jmp
xchg
xor
andb
inc
lcall
mov
xchg
mov
addb
push
daa
fisubrs
push
ja,pt
aad
or
jb
jbe
jnp
adc
lock
int3
lock
lcall
sbb
ss
cwtl
jge
mov
dec
gs
decb
mov
cs
dec
gs
mov
outsl
xchg
dec
in
shrl
call
xchg
xchg
aam
or
jbe
cld
mov
hlt
addr16
jge
add
js
sbb
pop
lods
jne
xor
jmp
aas
sub
pusha
sbb
and
fadd
sbb
push
mov
jnp
jne
add
inc
pop
push
mov
cwtl
aaa
enter
xchg
and
mov
mov
jbe
inc
aas
mov
pop
daa
pop
in
pop
xchg
mov
test
jbe
fadds
cmp
inc
inc
nop
push
add
sub
xchg
js
push
clc
scas
jnp
ret
jno
cmp
push
push
cmp
addb
jl
inc
jl
pop
or
sbb
inc
jnp
pop
mov
xlat
add
in
loopne
mov
jl
rorl
clc
popa
xchg
pop
and
call
in
push
outsb
mov
add
lcall
or
xchg
cwtl
pop
cld
jae
mov
sub
adc
rcrb
jl
xor
mov
add
inc
popa
pop
xchg
mov
push
dec
sahf
rorl
mov
sbb
add
ss
or
lods
lcall
and
fsub
and
or
or
mov
push
push
or
arpl
mov
pop
pop
add
mov
mov
jns
dec
and
mov
push
jo
aad
repnz
rol
lock
mov
cld
mov
fildll
mov
ja
lcall
adc
xchg
xorl
inc
push
or
add
lods
daa
cmp
inc
xchg
sbb
mov
bound
lea
shrb
or
inc
push
mov
jg
push
sub
in
popa
stos
ret
ret
repnz
and
mov
ror
inc
into
js
shr
xchg
stc
sbb
sub
sbb
sub
jmp
lock
adc
or
dec
xor
add
cmp
xor
and
cmp
xor
in
cmp
xchg
lret
push
les
jns
jg
xabort
dec
push
mov
clc
mov
sub
and
gs
and
or
notl
xor
xchg
divl
shll
xchg
add
push
push
imul
mov
add
cmp
pop
lds
aam
idivl
lgs
pusha
sub
xchg
xor
jmp
lock
shrl
insl
and
and
pop
fmull
jg
xor
inc
scas
mov
or
jne
xor
mov
sti
ds
shll
jb
lret
repnz
jp
lret
pop
mov
xchg
inc
sti
sub
mov
xchg
leave
xchg
mov
mov
fsubl
and
mov
ds
xchg
movsb
das
mov
ret
mov
push
nop
dec
daa
inc
jne
popf
ret
pop
xchg
cmp
push
inc
sbb
push
out
add
in
stos
stos
inc
pop
call
imul
enter
xchg
mov
or
or
pusha
cmp
shrb
js
pop
stc
adc
inc
stc
decb
dec
mov
lock
and
jge
enter
insl
je
in
enter
cmpsl
and
rcl
or
mov
mov
and
pop
daa
es
or
add
cmpsl
inc
add
lret
push
rol
repnz
sahf
out
push
and
mov
sub
mov
ret
ds
pop
push
sarl
push
paddd
bound
mov
insl
repz
rclb
xor
push
aad
xchg
jns
addr16
aad
jns,pn
in
aad
insl
out
fistpl
cmp
rclb
xchg
and
lock
lahf
mov
cli
mov
or
enter
or
cmp
mov
je
mov
push
out
das
mov
or
insl
das
pop
cmp
jle
mov
mov
jbe
in
fadds
iret
adc
scas
rcl
cmp
clc
mov
dec
ds
js
sub
int
fistl
and
fwait
jl
cmpl
scas
popa
sub
jg
xor
push
mov
or
jo
mov
or
pop
jnp
sbb
outsl
cmp
ds
adc
mov
jle
adcb
jl
aas
aam
xor
cmp
xor
aaa
add
pop
outsb
push
pop
adc
add
mov
add
push
cmp
in
repnz
or
mov
inc
divb
es
rcl
mov
adc
stos
push
push
jge
pop
lea
js
sbb
shll
fucom
cmp
aam
imul
stc
fwait
sbb
jg
cld
xor
enter
ret
push
stos
xchg
fs
sub
or
inc
ja
jo
lods
popf
ffreep
enter
lret
mov
dec
fs
iret
xchg
jae
pop
stos
xchg
mov
jo
sub
mov
xchg
adc
or
mov
dec
jle
imul
fs
jmp
sub
or
mov
sbb
inc
movsb
fwait
push
imul
filds
sbb
repz
repnz
and
xor
call
adc
lcall
scas
mov
xchg
stc
sub
out
sbb
jg
xchg
js
bound
shrb
imul
xchg
add
mov
sub
xchg
sbb
dec
sti
jecxz
cmp
cmp
test
int
push
ljmp
test
adc
std
mov
mov
jmp
outsb
fistl
mov
or
nop
mov
fcmovbe
inc
aam
rcll
jns
mov
shr
in
add
or
sbb
data16
mov
and
jge
insb
mov
push
pop
inc
cmpsl
rcrb
sbbb
sbb
add
xor
scas
ss
out
push
sarb
pushf
adc
jbe
and
cmp
dec
cmp
scas
icebp
mov
pop
stc
mov
sub
shlb
cld
fdivrs
xor
dec
scas
cltd
cmpsl
insl
outsl
ret
pop
stos
sbb
sub
cmp
fadds
das
mov
sbb
add
jp
mov
cwtl
mov
adc
sarb
cmpsb
sti
fimull
pop
fsubr
sarb
lods
mov
mov
pop
mov
pop
sbb
xchg
aam
out
mov
mov
in
out
daa
je
xor
ss
sbb
lahf
pop
mov
and
or
lea
xor
and
mov
ret
adc
mov
mov
fadds
lcall
lcall
add
xor
popw
fcmovu
xchg
jb
pusha
push
mov
xor
andb
insb
ja
cmp
and
add
loope
cmp
pop
inc
scas
lret
inc
aam
add
jmp
sub
fs
fstpl
sti
sahf
int3
xor
mov
rorb
xor
add
mov
out
sub
push
clc
leave
inc
js
lea
adc
mov
movsl
adc
or
stos
in
pusha
adc
das
into
pop
fs
lret
cmp
xlat
cwtl
pop
es
shrl
push
test
cmp
hlt
mov
adc
mov
int3
ret
sti
test
lock
rcll
and
je
pop
in
inc
jnp
in
cmc
mov
leave
ds
dec
xchg
sbb
fcompl
shlb
ficomps
out
aaa
repz
aam
dec
pushf
xor
iret
xchg
fnsave
add
lcall
xchg
xor
dec
add
or
fstpt
and
inc
xchg
fsubp
jae
jne
bound
mov
or
cs
pop
lods
pop
jmp
jo
lcall
stos
push
rcr
push
cmp
pusha
push
ss
mov
leave
jge
sarb
mov
test
in
xor
and
push
jge
pop
rcll
dec
or
es
lds
into
push
jno
or
in
sahf
or
push
ffree
test
stc
jns
inc
negb
or
jns
insb
imul
sti
rcrl
push
test
pushf
sbb
scas
dec
es
jl
cs
push
sbbb
loope
dec
jp
sbb
arpl
dec
and
mov
adc
loopne
lahf
mov
scas
je
fwait
add
xchg
mov
pop
sub
dec
dec
leave
xor
adc
aaa
stos
pop
pop
insl
add
leave
mov
mov
rcll
adc
int
pop
jecxz
aam
js
sub
sub
sub
test
sub
fcompl
test
loop
jns
aas
dec
aam
mov
xchg
inc
dec
xchg
repnz
out
xor
dec
push
dec
repz
in
loop
in
stc
xor
xchg
daa
mov
ljmp
dec
pop
lds
data16
arpl
lock
inc
divb
lcall
imul
pop
add
jnp
push
cmp
sbb
mov
sbb
push
and
shr
cmp
mov
sbb
adc
pop
sub
or
add
sub
mov
testl
outsl
adc
xor
push
add
sub
pop
out
inc
stc
mov
push
xchg
xor
lea
das
pop
sbb
lret
popf
jecxz
mov
push
rorb
cmp
testl
mov
cs
or
sarl
mov
ds
lods
fucomip
mov
xor
cmp
and
adc
jne
jl
jbe
xor
and
sbb
mov
icebp
push
adc
int
jnp
test
pop
dec
fisubrs
cltd
and
mov
or
aaa
sbb
sbb
jne
add
fidivrl
push
or
and
fisubrs
ret
mov
add
ja
xlat
add
aam
lret
mov
inc
in
sub
lcall
pop
test
push
xor
dec
iret
cmp
in
push
inc
or
mov
jle
mov
clc
nop
fs
jbe
sbb
test
add
pop
test
pop
fisubrl
sub
mov
inc
pop
jl
call
add
push
test
imul
fdivl
mov
js
jmp
jecxz
push
sbb
insl
icebp
sub
and
mov
cmp
sahf
pushf
adc
dec
fnstenv
sbb
xlat
mov
push
push
lods
pop
cwtl
pop
xor
push
shlb
xor
add
rol
mov
cmp
out
add
imull
mov
fs
xor
andb
sbb
add
lret
nop
aaa
cmp
lds
nop
push
mov
sbb
cld
xor
loope
jmp
pusha
js
xchg
dec
xchg
mov
pop
rcrb
movsb
mov
ds
xchg
call
imul
pop
jo
adc
mov
push
std
or
ljmp
jns
xchg
sub
xchg
mov
aad
push
pop
icebp
call
add
mov
xor
repnz
dec
popf
or
jb
push
xchg
mov
push
stc
stc
test
pop
dec
pop
out
push
or
mov
in
jo
mov
or
incb
dec
aam
xchg
mov
push
fcoml
push
sub
lods
lcall
cs
mov
ss
and
jge
sub
add
das
pop
cwtl
cmpsl
xor
cwtl
sti
push
insb
js
adc
pop
inc
pop
ret
shll
push
jno
mov
and
loope
add
cmp
dec
sub
popa
test
lret
outsl
shlb
cmpsb
in
cli
sub
sti
cli
stc
repz
jmp
jb
aad
out
shll
mov
xchg
and
in
lret
sub
xor
push
arpl
jle
negb
mov
loopne
jmp
pop
negl
cmp
jo
inc
dec
jbe
clc
jae
jle
or
pushf
icebp
sub
movsb
and
add
dec
and
jmp
dec
and
push
in
ret
dec
repz
push
lret
mov
aam
mov
mov
add
pop
inc
or
push
pop
mov
or
lea
insl
stos
xchg
xor
call
lods
dec
add
adc
add
dec
scas
and
lea
adc
in
ficomps
mov
in
lods
lods
rcrb
sub
mov
jbe
mov
out
sub
inc
jo
in
sbb
fiadds
popf
add
popf
cmpsb
xchg
push
leave
add
push
into
test
pop
mov
sub
cmp
cs
out
pop
xchg
push
jle
repnz
add
loope
xchg
fnstsw
inc
popa
in
mov
pushf
nop
mov
push
movsl
daa
pop
xor
jae
leave
fdivs
sbb
dec
xchg
or
dec
in
cmp
push
bound
add
sbb
push
lcall
cs
ret
cltd
loope
hlt
jae
aad
mov
leave
or
lahf
cmp
fstpl
mov
sbb
pop
jo
cli
ljmp
mov
mov
gs
stos
stos
xchg
adc
popa
pop
cli
out
adc
in
enter
dec
push
sub
mov
cwtl
sub
fstpl
push
and
mov
loope
sbb
mov
push
lods
ds
cmp
mov
adc
bound
fmul
and
cmp
pop
or
mov
ja
lea
mov
hlt
mov
movsl
pop
and
inc
sub
fmul
jnp
dec
pop
insb
pop
adc
or
repnz
cmp
js
lahf
jle
stos
mov
cmp
push
inc
cmpsl
inc
scas
sbb
cwtl
add
lcall
xchg
jmp
push
fadd
fistl
pop
adc
loopne
add
adc
xchg
aaa
or
dec
jo
stc
shl
jb
insb
sub
pushf
xlat
jg
xor
les
and
lcall
mov
addr16
into
ljmp
and
cld
icebp
xchg
mov
arpl
ljmp
outsl
cmp
push
sbb
repnz
inc
and
pop
add
ret
mov
or
int
inc
pusha
push
repz
ljmp
pop
push
dec
cmp
mov
lock
pop
xchg
repz
sub
add
sbb
inc
stos
mov
pop
xlat
inc
mov
add
out
jns
enter
cmp
sbb
lcall
add
test
clc
jnp
mov
aad
outsl
addr16
push
sub
or
xchg
inc
daa
gs
fiaddl
ljmp
push
sbb
mov
outsl
addr16
ret
cld
sub
mov
dec
jp
push
push
daa
movb
aam
jg
mov
outsb
cmp
ret
xor
cld
lret
repnz
xchg
cltd
xor
pop
and
imul
xchg
pop
sbb
cmp
push
sub
shrl
pop
test
adc
pop
xorl
testl
fdivl
lods
lods
push
out
cmp
mov
cmp
mov
inc
incl
mov
add
inc
test
pop
mov
cmp
testb
loope
orl
imul
jo
mov
sbb
into
mov
insl
hlt
push
mov
push
xchg
pop
outsl
sub
sar
cs
dec
xorb
insb
pop
xor
arpl
mov
or
xchg
mov
dec
xlat
add
testl
or
in
pop
push
jp
addr16
jl
and
sahf
push
adc
mov
mov
insb
lea
jmp
nop
mov
sbbl
push
ljmp
in
punpcklwd
xchg
pop
push
xchg
stos
inc
dec
sti
dec
addb
les
fucom
cs
push
and
imul
push
push
mov
inc
arpl
fldlg2
lret
aas
dec
stos
xchg
pop
cmpsb
push
cmpsl
scas
lret
add
xchg
and
add
popf
and
mov
mov
mov
in
pop
ret
xchg
mov
stc
fs
lock
cmp
popa
sub
cmpsl
cwtl
push
out
rcr
inc
adc
xor
sub
mov
and
repnz
fyl2xp1
cmpsb
daa
mov
popa
and
loope
and
iret
cmpsb
icebp
dec
cmp
leave
pop
jge
int
sub
push
jge
clc
cmp
ja
lods
aad
jle
pop
fisubrl
shrb
call
jno
inc
jb
popf
jmp
sub
xor
je
xor
out
mov
lock
push
aaa
ss
repz
inc
adc
xor
lahf
add
lcall
scas
jge
mov
popa
jle
cmpsl
ds
addr16
pop
mov
lds
cltd
xchg
mov
pop
cmp
pop
xor
mov
hlt
ret
adc
dec
hlt
enter
push
inc
pop
mov
sub
cli
stos
lods
add
xchg
pop
cs
or
sub
cli
xor
xor
fisubs
mov
pop
ja,pt
xchg
pop
insb
cltd
ffree
mov
sub
push
and
push
jge
out
xor
sbb
mulb
pop
cmpsl
lods
sti
iret
mov
repz
pusha
lret
pop
rep
test
int3
fsubl
imul
lods
aad
mov
in
pop
jnp
cmp
rolb
iret
pop
mov
je
mov
mov
sbb
in
cli
sub
cmp
insl
jo
call
jecxz
ret
adc
je
xchg
add
push
insb
imul
and
lods
mov
js
jmp
fdiv
xchg
daa
dec
ds
xor
cmc
and
mov
fdivl
out
jo
cmc
cmpsl
addb
mov
shld
mov
int3
lahf
jo
test
push
gs
int3
lret
push
in
in
idiv
nop
mov
or
sub
push
loopne
push
push
test
repz
fsubrl
adc
push
xchg
int3
gs
push
or
pop
int
inc
nopl
loopne
mov
adc
inc
mov
rcrl
outsl
dec
add
out
xlat
lret
fwait
jb
sahf
and
aam
addr16
inc
js
add
xchg
pop
rcr
out
push
adc
sub
outsl
and
in
mov
inc
or
jge
add
mov
rorl
mov
iret
fbld
and
popf
leave
adc
call
dec
xor
out
cld
or
cmp
imul
shrl
dec
mov
push
inc
mov
sub
or
rcl
or
dec
mov
mov
cli
dec
cmp
call
cltd
adc
adc
fwait
lods
loope
jge
inc
cmpsb
adc
fdivl
jne
aam
push
fidivl
xorb
popf
xlat
pop
frstor
mov
mov
addr16
push
jl
outsb
adc
dec
sbb
lods
lds
mov
sbb
jge
lcall
mov
lods
inc
lds
xor
push
stos
ds
mov
test
mov
lods
clc
popf
fiadds
fcompl
ja
sti
mov
outsl
fnstsw
stos
push
jb
sbb
mov
mov
xorl
pop
mov
mov
es
jmp
pop
add
push
push
fistl
dec
xchg
cs
dec
pushf
aas
roll
mov
std
inc
xor
outsl
pop
ljmp
inc
push
mov
mov
pop
jle
xchg
sahf
ds
lret
dec
xchg
call
pop
pop
lods
mov
mov
aad
cwtl
push
xchg
or
je
jecxz,pn
cmp
out
fcompl
stc
in
xchg
in
push
bound
adc
ret
mov
emms
jb
pop
and
cld
imul
das
fisttpll
lea
in
sti
xchg
xchg
ret
mov
sub
sbb
clc
sbb
addr16
loope
dec
jp
mov
test
inc
lret
xlat
out
jle
cmp
out
rol
out
mov
rcll
cmc
sbb
rcl
test
add
cmc
lods
pop
movsb
lock
cmpsb
push
sub
or
lods
lods
stc
pusha
testl
mov
and
out
arpl
aam
inc
not
dec
dec
mov
sar
insb
rolb
loope
in
fidivl
mov
sbb
sub
pop
inc
add
cmp
inc
js
mov
cwtl
popf
xor
push
mov
imul
pop
mov
and
dec
ds
add
push
imul
adc
loopne
sbb
movsb
adc
pusha
mov
int
int3
arpl
sub
xchg
ret
das
fwait
sbb
mov
outsl
pop
fistps
xor
movsl
push
xor
cmpsl
mov
std
hlt
test
fsubrs
pop
sarb
insl
je
repz
push
adc
sub
mov
mov
cmp
sbb
mov
pop
loope
inc
or
mov
jp
jl
and
cmc
into
insl
popa
jmp
aam
dec
push
xor
dec
lret
cmp
scas
pop
xchg
sahf
stos
add
lds
jno
stos
mov
lcall
add
jg
mov
push
mov
iret
icebp
stos
sbb
rcll
xor
mov
ljmp
aas
cmp
jbe
sub
xchg
dec
inc
lretw
sbb
sbb
and
and
orl
hlt
xchg
call
lock
xchg
xor
and
sahf
daa
int
add
mov
mov
test
sbb
jl
inc
sysenter
inc
insl
lods
sti
xchg
xchg
fwait
popf
shr
cmp
add
out
dec
inc
aaa
stos
ficompl
pop
and
cmc
or
nop
pop
lods
clc
dec
lret
lret
js
test
out
daa
push
bound
aad
loope
push
jo
test
push
mov
add
pop
sti
outsl
out
aaa
aad
mov
lcall
add
add
mov
daa
sub
mov
rolb
rcl
out
add
fldenv
push
jl
mull
sub
push
arpl
dec
or
push
jne
dec
pusha
jg
mov
fsubrs
mov
sbb
jle
pop
mov
dec
pop
leave
and
testl
jno
dec
lock
pop
push
je
jle
pop
push
aam
jp
push
sub
icebp
pushf
sbb
mov
mov
rol
xchg
repnz
adc
lods
pop
addr16
adc
xor
sbb
pop
pop
mov
cs
xchg
fs
dec
xor
and
or
adc
test
dec
push
das
movsl
jne
ret
loop
lret
mov
cmp
ss
lods
xor
cmp
cli
pop
out
mov
mov
mov
jle
xlat
loop
mov
fwait
and
adc
outsl
sbb
outsl
xchg
ss
adc
cmp
cmc
sub
fstps
repz
shlb
mov
test
sahf
loope
add
adcb
mov
idiv
push
mov
jecxz
sbb
xchg
cli
mov
sbb
pushf
addr16
jg
out
mov
mov
mov
sbb
mov
cwtl
dec
ja
scas
xor
loope
aad
jb
lods
testl
imul
cmpsl
std
push
fsubs
setle
sub
cmp
ret
pop
push
jle
and
cli
mov
mov
inc
pushf
sarb
nop
mov
jle
icebp
inc
int3
dec
stos
cmp
ja
enter
pop
cld
sti
jnp
mov
aas
stos
lea
and
stos
adc
inc
ds
add
outsl
adc
cmp
ret
ret
lock
fbld
mov
and
movsb
or
in
lahf
xchg
xchg
cmpsb
nop
movsl
pop
lret
lcall
mov
and
cmp
push
xchg
adc
push
fcmovu
push
dec
jecxz
jo
and
cmp
push
stc
out
mov
inc
cmc
pop
out
inc
mov
pusha
cmp
push
sarl
jmp
inc
hlt
outsl
sub
int
lods
ficompl
jnp
scas
pop
out
adc
in
das
cld
inc
sub
test
loope
jp
repz
sub
aad
out
jmp
mov
xchg
jle
fwait
test
shr
dec
shlb
push
mov
pop
imul
inc
data16
movsb
sub
sbb
pop
movsl
js
and
xchg
mov
pusha
mov
push
pop
mov
sub
jae
sbb
xchg
jg
fldcw
jnp
in
xchg
fstps
movsb
sub
lahf
mov
pop
jnp
xor
nop
jb
bound
jae
xlat
push
xchg
pop
bound
adc
jo
lock
xor
hlt
or
jmp
das
or
jnp
adc
xchg
aaa
imul
aaa
inc
rolb
inc
stos
push
daa
ret
movsb
ficomps
lods
enter
cmc
scas
jp
adc
lret
dec
lret
sbb
out
mov
cmp
fidivl
sbb
sbb
inc
movsl
fwait
dec
lds
pop
lcall
inc
mov
add
shlb
iret
pop
std
xchg
push
xor
mov
mov
mov
xor
insl
test
mov
mov
ficoms
pop
sub
xchg
bound
fnstenv
push
insb
and
hlt
add
jecxz
fsts
iret
mov
pop
pop
movsb
sarl
pop
push
jg
nop
jecxz
cmp
cltd
mov
mov
das
jmp
inc
dec
or
testb
loop
push
cli
mov
push
mov
and
xlat
fsubrl
xchg
fbstp
outsb
iret
out
pop
mov
and
add
pop
les
fidivl
movsl
testb
lahf
dec
loop
sbb
sahf
gs
mov
sbb
adc
push
lods
fists
mov
or
mov
sub
mov
cmc
adc
lea
adc
movsb
cmp
dec
push
push
stc
sub
test
sbb
dec
nop
or
push
subl
shr
icebp
jnp
xor
jle
hlt
out
xor
arpl
push
das
dec
and
sbb
and
cmp
hlt
fcomps
sbb
sbb
stos
inc
movsb
push
adc
pop
sbb
lods
adc
stos
fs
das
repnz
adc
sti
lea
lahf
inc
jecxz
pop
pop
pop
pop
sub
ficoml
lret
ja
cs
ud0
mov
xchg
rcrb
bound
add
jg
icebp
jno
and
int3
or
jmp
xchg
pop
mov
pop
add
or
mov
lea
mov
lret
push
shlb
scas
jg
pop
push
xor
sbb
popl
mull
xor
xor
sahf
lods
pushf
cltd
sub
sub
insl
and
insb
ficoml
fdivrl
mov
mov
mov
add
ret
repz
or
test
mov
mov
ficoml
call
out
inc
mov
iret
insl
popf
pop
popf
in
mov
std
arpl
dec
loopne
fidivl
xchg
push
push
cmpsb
inc
xchg
into
mov
shlb
jmp
cmp
add
push
cmc
dec
scas
jg
xor
aaa
aas
mov
loop,pt
addl
cmp
add
aaa
sbb
xor
xor
adcb
lahf
lea
scas
icebp
lret
insb
enter
cmp
pushl
lds
xchg
pushf
add
xlat
fsubs
fisubrl
mov
mov
jo
pop
test
repz
fdivrp
sub
pop
je
int3
fs
add
leave
mov
or
mov
xchg
sbb
or
jbe
nop
xor
lret
and
inc
flds
shrl
fists
rcl
js
cld
add
mov
mov
jo
adc
fcmovb
mov
jmp
adc
popa
repnz
add
out
addr16
add
pop
sahf
lcall
bound
imul
jle
adc
pop
jp
scas
xchg
mov
outsb
cwtl
mov
lock
jb
outsl
push
imul
or
mov
out
mov
sbb
mov
cli
mov
mov
sahf
cwtl
test
mov
icebp
lret
dec
scas
ficoms
sbb
enter
es
out
pop
pop
push
and
mov
xor
loopne
insb
push
fldl2e
sbb
sbb
sub
cmc
pop
mov
test
sbb
xchg
fnclex
jmp
mov
dec
sub
xlat
or
push
mov
fsts
out
pushf
aam
jmp
cld
xor
pop
jmp
push
je
push
jnp
imul
dec
out
and
dec
mov
sbb
les
popf
aas
loope
cmpl
sub
lock
mov
test
subl
inc
popf
call
add
mov
sbb
xchg
xchg
in
mov
pop
lods
xchg
or
add
fsubp
and
dec
pop
insl
lcall
test
jae
add
lock
addr16
leave
sub
dec
mov
pop
and
les
daa
fdecstp
nop
inc
aam
mov
loopne
stos
or
inc
or
sub
push
add
cld
inc
add
idiv
mov
outsl
push
andb
aam
imul
pop
shl
mov
push
mov
xchg
sarb
pushf
dec
movsb
pop
pop
push
notl
in
cs
cmc
lds
dec
popa
xor
mov
xor
push
repnz
js
out
add
and
ja
call
pusha
shlb
xor
lret
shll
adc
cmp
addr16
mov
shl
ja
and
add
inc
jo
aaa
push
incb
pop
lahf
out
loop
xor
jo
lods
int
mov
sub
jl
xchg
mov
push
mov
fidivrl
loope
loop
mov
or
xor
movsb
mov
mov
rcl
xchg
das
jecxz
das
insl
push
test
mov
cli
sbb
or
cmp
sub
aam
sbb
jp
aas
sub
xorb
clc
inc
inc
loop
scas
mov
add
inc
mov
out
sbb
call
mov
faddl
setg
pushf
push
jmp
inc
clc
je
rorb
leave
incb
xor
adc
and
movsl
fldcw
dec
cli
int
lods
push
cmp
mov
leave
adc
or
jo
test
lahf
dec
js
dec
nop
ficomps
ds
inc
push
xor
or
mov
or
lea
std
in
js
addl
pop
cmp
addb
int
mov
fs
stc
inc
rol
call
cmp
dec
sbb
jo
push
mov
and
push
mov
pop
out
sbb
lea
movsb
mov
sbb
jne
cmpsb
jne
lods
push
or
rcr
sub
xchg
loope
mov
pushf
or
les
push
shrb
out
out
xchg
or
xor
or
push
pop
mov
mov
mov
or
incb
popf
mov
sahf
stos
mov
sbbl
mull
jl
xchg
lock
dec
dec
gs
push
lods
movsb
fs
jno
addr16
push
fwait
push
jecxz
pop
inc
stc
mov
mov
lret
xchg
enter
mov
sarl
idiv
add
adc
call
mov
bound
cmp
push
add
sub
sbb
js
call
push
mov
sbb
icebp
inc
outsl
sahf
pop
test
pushfw
lods
pop
sub
dec
mov
andb
dec
pop
inc
mov
mov
pop
pop
cmp
enter
addr16
jmp
inc
orl
fstl
iret
ud2
loop
push
or
xchg
repz
out
scas
adc
or
sub
xor
lds
fdivp
lcall
fstl
lcall
xor
or
mov
daa
jbe
scas
int
ficompl
jo
ss
and
les
dec
xor
mov
dec
xchg
xchg
fs
test
adc
imul
inc
es
add
je
iret
stos
gs
cmp
in
jecxz
into
and
mov
subl
xor
js
jo
decb
test
cmpsl
pushl
cmp
mov
sbb
popf
or
adc
cmp
cmp
aam
pop
inc
scas
pop
push
ljmp
lcall
push
mov
insl
or
mov
mov
jecxz
dec
lds
dec
sub
mov
sub
sar
pop
fildl
xor
mov
arpl
mov
pop
rolb
ret
and
xchg
inc
add
popl
notl
mov
sbb
add
shll
sbb
push
push
xchg
mov
dec
mov
pop
mov
pop
call
inc
and
mov
and
mov
aad
mov
sub
daa
sbb
mov
fwait
pop
push
lret
imul
push
xor
sub
cs
rsqrtps
adc
xchg
xor
push
out
sub
shlb
cld
ret
out
fldt
and
sbb
imul
das
lods
xchg
sarl
mov
or
cld
and
sub
stos
sub
sub
pop
pop
aaa
mov
loopne
mov
or
xor
in
push
lahf
ds
call
or
jmp
mov
and
shr
pop
in
mov
fstpl
fisttpll
push
mov
pop
loopne
push
or
sub
hlt
loope
rcll
loope
pop
jecxz
sub
ljmp
sbb
mov
repz
aaa
lret
orl
lahf
and
push
les
stos
mov
cmp
lock
cmp
sbb
es
and
out
cmp
js
fwait
inc
xchg
aaa
movsl
sbb
xor
sub
adc
dec
popf
test
push
or
lea
pop
and
xchg
sbb
ja
xor
or
bound
jnp
in
jecxz
aas
jno
xchg
mov
ret
subb
pushf
mov
inc
cmp
sub
cmc
push
adcl
jecxz
std
cmp
xor
dec
or
sbb
adc
push
outsb
dec
movsl
mov
jg
adc
adcl
jne
loop
inc
ds
imul
testl
add
push
pusha
cmpb
inc
jne
jl
xchg
dec
cmp
daa
mov
xor
imull
add
pop
push
les
xor
or
xor
call
imul
ss
jbe
fistps
xchg
sub
or
cli
inc
inc
adc
add
dec
sub
ret
aas
adcl
jo
add
xlat
filds
dec
mov
adc
xchg
dec
cmp
pop
adc
sbb
push
repnz
push
jge
pop
sub
int3
mov
pop
enter
pop
fcomp
mov
jle
cmpsl
sbb
inc
shll
loop
jp
fsub
addr16
in
imul
fiadds
or
aas
ds
sub
add
push
test
cli
adc
mov
mov
mov
lret
pop
cmpsb
lcall
popa
sbb
loope
push
or
ret
and
xchg
push
adc
xchg
lea
adc
add
sbb
imul
cs
push
mov
or
mov
mov
test
sbb
xor
into
pop
push
in
jmp
scas
popf
jbe
es
lahf
into
xchg
jge
mov
or
inc
ljmp
and
inc
shrl
dec
dec
mov
shlb
add
lds
das
aam
ja
lret
xor
pop
add
je
xor
repz
cli
cmp
iret
into
clc
pop
bound
mov
iret
arpl
in
loopne
aad
ret
xor
and
jb
out
fninit
enter
dec
stos
jb
insb
mov
add
adc
inc
fwait
cmc
insb
cmpsb
add
push
mov
test
shrb
stos
dec
pusha
xorb
cmp
lods
sbb
je
jge
mov
call
imulb
dec
adc
in
jo
and
out
xor
xor
adc
xor
fs
jge
jle
adc
push
pop
xlat
imul
fnstsw
push
aad
notb
sub
in
xor
or
in
lods
sub
cmpb
iret
pop
jecxz
or
cmc
std
fwait
push
aas
lock
movsb
test
dec
pop
push
push
inc
jne
sarl
ror
add
sbb
jmp
repz
mov
cmc
xor
pop
xchg
adc
rorl
cmp
int3
sub
pop
push
cmp
add
push
data16
add
sarb
fadds
pop
push
shrl
jbe
cwtl
cs
fucomip
mov
ret
sti
das
gs
xorb
movsb
out
xor
push
cs
mov
cli
mov
lcall
or
sahf
fnclex
lahf
ja
andb
mull
int3
xchg
rclb
dec
repnz
call
add
and
mov
mov
ret
adc
push
cmpsl
add
fsubl
cltd
outsl
std
sbb
push
mov
and
jae
out
pop
inc
sti
lea
dec
inc
test
mov
fstpl
popf
daa
mov
pop
mov
xchg
repnz
test
loope
sub
xchg
int3
add
lahf
sbb
ss
mov
dec
sbb
xchg
and
imul
andl
es
push
cmp
add
aas
xchg
insl
cmpsl
mov
pop
jge
mov
mov
call
or
sbb
mov
inc
pop
push
ss
decl
ret
les
addr16
idivb
lcall
xor
aas
pop
shrl
jno
xchg
lahf
loopne
xchg
out
cltd
aam
sbb
xchg
mov
stos
push
jns
loopne
out
push
inc
in
pop
cmpsl
pop
pop
fisubrl
push
jmp
jb
push
jb
jg
jg
inc
sbb
jle
xchg
push
in
xchg
movsl
insl
shrl
jg
insl
test
xchg
cmpsl
sub
jg
stos
mov
adc
jbe
loop
repnz
andb
mov
push
outsl
scas
or
aad
adc
lret
mov
enter
scas
xlat
sub
cmpsl
adc
lods
outsl
lods
inc
stos
xor
inc
subl
push
in
movsb
push
popa
push
pop
pop
mov
cmpsl
jl
imul
or
lds
js
inc
lret
pushf
or
push
sbb
stos
lods
sqrtps
xchg
push
dec
lahf
sbb
mov
jecxz
sahf
cwtl
mov
or
ss
cld
outsl
push
stc
out
sub
nop
mov
cmpsb
loope
in
mov
je
inc
inc
push
mov
popf
cli
test
cld
sarl
mov
cld
stc
sahf
loopne
xchg
adc
inc
fwait
push
inc
ja
sbb
cli
loop
xchg
dec
jp
jge
xor
ja
jl
or
xchg
and
jp
out
xchg
lods
adc
pop
sub
mov
movsb
sbb
add
out
and
ljmp
stos
dec
adc
enter
fucompp
xor
adc
cmc
clc
out
nop
jle
daa
addl
add
pop
jmp
and
nop
test
int3
test
fsubrs
orb
xchg
cmp
mov
jge
popa
push
sub
push
or
gs
repz
adc
lock
push
mov
insl
sbb
idivl
daa
mov
out
dec
or
sub
push
testl
push
popf
arpl
xor
fdivrl
divl
sbb
mov
push
stos
jl
sub
divl
inc
movsbl
sbb
in
pop
mov
mov
jns
inc
test
lods
les
arpl
out
mov
jae
and
sti
shrl
shrb
cmc
fcomi
push
inc
outsb
xor
xor
mov
daa
fwait
mov
dec
xchg
arpl
xor
xchg
mov
mov
orl
cmp
sub
js
mov
and
dec
rcrb
jbe
leave
ss
imul
and
daa
pop
cmp
inc
ljmp
insl
pop
movsb
in
lds
and
mov
sbb
xchg
cmp
dec
xchg
jbe
lahf
neg
xor
jae
jl
jns
sbb
incb
out
adc
push
cmc
leave
leave
cmp
xchg
insb
pushf
add
jmp
add
lret
daa
decb
push
leave
pop
lcall
mov
cmp
mov
stos
ss
inc
shrl
pop
mov
or
xchg
cltd
ret
xchg
les
jmp
sbbl
sarl
inc
lcall
add
jo
fwait
daa
jbe
jle
stos
adc
out
dec
in
mov
mov
mov
fistl
std
xchg
insl
adc
mov
addb
lcall
insl
and
mov
lret
mov
ja
jb
add
rolb
cmp
pusha
xchg
inc
mov
in
into
fadds
add
lea
shr
push
ficomps
cmp
insl
in
add
or
push
es
js
leave
rorb
ror
jge
loop
enter
mov
into
inc
fcmovu
mov
outsb
in
jno
popf
mov
jp
and
jl
in
jns
pop
push
pop
push
xchg
dec
imul
and
pop
scas
mov
xchg
in
fsubs
xor
pushf
sbb
adc
mov
fs
pop
clc
pop
cmp
daa
pop
xchg
fsubrs
push
sub
push
xchg
jmp
popf
inc
aam
lock
mov
mov
loopne
mov
xor
inc
jnp
int
out
sbb
xchg
aaa
jns
dec
faddl
cltd
jecxz
js
sbb
std
cmpb
pop
cs
scas
movsb
rorb
pushf
adc
mov
or
mov
mov
out
test
jp
mov
test
mov
sbb
xchg
fmull
pop
jo
sbb
and
mov
call
jp
xchg
stos
xor
dec
inc
in
and
mov
xlat
jbe
into
push
aad
cmp
mov
mov
jno
mov
cmc
jne
mov
push
xchg
pop
inc
movsb
inc
daa
es
ljmp
inc
xchg
sti
jns
aas
ss
stc
sub
cmp
in
mov
mov
test
or
jmp
mov
repz
sub
push
in
fs
sbb
cmp
sbb
dec
ret
int3
cli
fcomip
jb
and
int3
stc
aam
xchg
ljmp
push
jge
ret
test
mov
xor
aas
cmp
mov
out
and
pop
cmp
or
xor
jecxz
mov
push
sub
adc
sbb
push
dec
icebp
pushf
sbb
iret
inc
repz
sti
pop
fstpl
sbb
jb
cmp
or
fildll
push
or
sbb
inc
sub
leave
cmc
rcll
dec
aas
enter
mov
push
mov
sar
mov
push
or
cmc
imul
adc
rcr
push
repnz
ds
push
push
pop
push
fneni(8087
jb
pop
cmp
pop
outsl
cmp
jb
pop
mov
aad
push
aam
or
adc
hlt
in
push
shll
xor
lds
adc
push
dec
mov
and
test
mov
or
push
pushf
ljmp
pop
fidivl
cld
cmpsl
mov
pop
push
rcrb
jle
cmp
aam
sub
sub
fcoml
idivl
lcall
cs
shrb
pop
movsb
xchg
mov
mov
inc
imul
inc
add
sub
pop
lds
jae
jns
into
mov
fstpt
pop
cmp
pop
cmp
xchg
scas
popa
and
mov
rcl
dec
ljmp
jo
test
add
pop
fwait
shlb
sub
lret
int3
cltd
cmp
clc
rcrl
mov
mov
daa
sub
and
in
test
sbb
in
popa
insl
lods
xchg
and
in
mov
jb
cmp
fildll
aam
in
fdivrs
push
and
jge
mov
cld
xchg
das
add
jbe
dec
fmull
fucomi
mov
cmp
cmpsl
and
mov
mov
shll
out
fninit
sbb
bound
orb
dec
rcll
cmp
add
lret
int
xor
add
or
add
dec
push
leave
jb
jae
aaa
lcall
addr16
dec
mov
mulb
jnp
pop
mov
movsl
dec
dec
nop
ret
xchg
jge
push
dec
out
xor
jmp
sti
cmc
xor
jae
xor
pushf
pop
push
inc
repz
in
lahf
pushf
pop
enter
btc
add
rcrb
int
sbb
loopne
xchg
test
pop
mov
jecxz
dec
pusha
mov
pop
push
sbb
jb
ljmp
cmpsl
pop
aad
adc
aad
cmpsb
xchg
insb
xchg
movsb
and
insl
jle
pop
cmp
sub
in
sbb
mov
mov
test
js
sbb
xchg
outsb
bound
das
lahf
xlat
pop
mov
adc
cmpsl
icebp
sbb
out
jne
pushf
sub
pop
and
lret
xchg
cmp
icebp
pop
mov
cs
xchg
push
jp
lds
cmc
adc
lret
add
rclb
repz
into
and
js
es
xchg
es
xchg
mov
dec
jg
mov
out
fcoms
out
in
fs
jae
sub
xchg
mov
fadd
into
in
faddl
push
negl
jmp
into
xor
lret
lahf
inc
sub
cmp
test
fisubs
push
and
inc
dec
insb
jns
mov
mov
cmp
cmp
hlt
jne
lcall
cli
mov
mov
mull
iret
das
inc
out
call
push
and
add
and
sbb
jmp
mov
popf
and
sub
std
add
xchg
xor
mov
repnz
cmp
ret
jmp
jp
push
stos
inc
inc
in
jb
push
jb
push
push
dec
das
fnstsw
xlat
inc
mov
dec
inc
shlb
mov
test
dec
jmp
mov
test
sarb
cmp
push
push
inc
not
mov
das
xchg
in
pusha
adc
sub
dec
mov
dec
jg
jle
insb
pop
and
cmp
ret
xor
mov
adc
pop
mov
mov
jle
cmp
jo
test
les
pusha
mov
add
inc
cmp
pusha
call
push
aas
popf
jne
rorl
sbb
cmpsl
popa
sti
rcrb
fwait
dec
pop
or
mov
cmp
mov
bound
jle
popa
andb
rorb
pop
sbb
pop
and
ret
xchg
add
jae
enter
loop
xor
int
add
inc
and
enter
or
sahf
insb
je
mov
insl
cmp
shlb
ret
mov
cmp
inc
pop
add
pop
sub
iret
repz
in
push
inc
mov
hlt
add
pusha
jns
xor
fnstsw
stc
notb
dec
test
mov
aam
pop
stos
mov
in
addb
dec
stos
jne
pop
add
mov
icebp
outsb
push
es
fimuls
jg
mov
dec
jmp
aam
jne
outsb
aam
in
call
fwait
les
aam
test
mov
or
dec
or
jbe
lods
push
sub
adc
jge
push
mov
jg
test
jg
pusha
and
dec
and
sub
les
push
std
cmpsb
sbb
and
inc
cmp
dec
adc
inc
aaa
aas
xor
mov
xor
and
ds
dec
leave
inc
pop
xchg
dec
out
add
inc
pop
jne
push
rcrl
addb
xor
sub
inc
xlat
mov
mov
cmpsb
into
cld
or
sub
outsl
roll
sahf
sub
inc
mov
cmp
shll
rcrb
loope
mov
cmpsl
lds
xorb
mov
stos
lcall
xor
int
and
sbb
popa
xor
mov
sahf
int
dec
and
dec
int3
xor
xchg
lds
dec
jnp
popf
loope
pop
clc
outsl
lret
fistl
lret
fimuls
adc
out
in
cmpsb
ja
fnstcw
call
sub
das
dec
nop
out
add
sbb
mov
mov
inc
pop
mov
mov
cmp
inc
lret
jp
or
rcrl
push
sub
or
jne
ja
sbb
jle
xor
je
xchg
mov
or
push
pop
insl
inc
movq
adc
repz
loopne
sub
mov
jo
fildll
cwtl
or
dec
xor
gs
in
push
adc
adc
mov
or
cmp
pop
mov
sub
lret
addb
ret
cmpsl
jecxz
sub
jge
les
lret
inc
cmp
sbb
mov
fcoms
and
imul
test
nop
std
lcall
imul
inc
cmp
xchg
sbb
pop
mov
loopne
sbb
cmp
ret
and
add
mov
fidivrl
jl
rcrl
popa
ds
add
fadds
jecxz
negb
or
inc
fisttps
cmp
jle
or
jp
and
inc
dec
adc
xchg
push
jo
dec
and
fst
shrb
stos
mov
adc
jle
push
imull
sub
cmp
add
adc
sub
sub
pop
clc
cmp
sbb
rorl
cmp
add
dec
mov
pop
mov
lds
sub
aad
test
leave
dec
rdpmc
fstpt
or
iret
nop
push
or
xor
xchg
dec
pop
inc
xor
hlt
jmp
inc
xor
loope
test
add
fisubrs
and
aam
jns
mov
cs
and
mov
cmp
pushw
insb
movq
mov
cmp
add
call
mov
mov
lret
aaa
arpl
js
jb
mov
into
jecxz
push
mov
xchg
mov
in
jae
cwtl
pop
sbb
out
dec
shrb
enter
into
pop
sub
es
cmp
pop
in
test
das
jb
sahf
jecxz
mov
mov
loopne
shll
dec
pop
push
pushf
sub
loop,pn
add
jae
mov
push
mov
mov
push
fisttpl
aaa
mov
adc
xor
imul
test
jg
inc
mov
mov
mov
sbb
das
inc
cmp
call
and
sti
popa
xorl
es
in
mov
lods
sti
sub
push
push
adc
jne
adc
fdivl
xchg
adc
cmp
es
sahf
rcrl
mov
jp
add
sub
sub
outsb
mov
or
push
push
sbb
xchg
scas
fcoms
mov
rolb
lock
pop
xchg
test
sbb
not
in
aam
xchg
jp
das
mov
push
push
inc
pop
xor
xchg
pop
jae
js
mov
cld
dec
leave
sbb
popl
mov
mov
jne
adc
dec
mov
push
xor
and
ret
push
mov
fs
sub
addl
cmp
fisttpl
leave
fs
dec
notb
stos
lcall
test
fwait
daa
sub
mov
sahf
xor
jbe
pop
and
xchg
rolb
scas
cwtl
adc
mov
or
sbb
mov
mov
js
or
jae
test
xchg
push
adc
xchg
ja
sbb
pop
sub
jo
pop
add
jae
int
xchg
ja
dec
sbb
test
ja
lds
in
rorl
sarl
insl
mov
or
cmpsb
imul
push
jmp
into
push
sahf
sarb
or
xor
xor
sub
rcll
jne
pop
mov
jnp
push
add
xlat
jne
mov
mov
mov
xor
nop
cwtl
push
icebp
ja
xchg
jp
mov
loope
cmp
inc
xchg
inc
mov
pop
flds
push
cs
dec
push
mov
imul
inc
or
xor
xorb
adc
pop
movsb
sub
test
out
fs
jle
or
rcr
xor
mov
call
mov
sub
inc
adc
mov
and
jnp
lahf
mov
mov
dec
mov
dec
adc
jecxz
stc
add
pusha
or
inc
adc
mov
cmpl
test
xchg
and
arpl
arpl
pop
push
adc
aas
inc
jo
and
jg
cmp
dec
adc
xchg
fldt
push
inc
sbb
fadds
in
and
adc
les
xor
daa
lds
mov
call
shrb
rcrl
rcrb
jecxz
cmp
scas
mov
or
imul
dec
inc
mov
inc
dec
adcl
xchg
test
imul
add
mov
test
ret
das
popa
ds
jns
cld
dec
shrb
jbe
test
ret
jne
push
mov
loopne
mov
mov
jne
out
std
int
xchg
xor
movl
push
mov
mov
stos
je
inc
outsl
out
fsts
shrb
lcall
mov
movsl
xchg
pop
push
add
out
pop
add
or
cli
notl
xchg
stos
in
add
push
int
bound
dec
sub
xchg
sahf
je
xchg
int
cmp
push
mov
jge
popf
and
xlat
jnp
push
mov
ja
xchg
fs
outsl
dec
xchg
inc
aad
insl
mov
pop
pop
mov
mov
add
jne
addb
loope
cmpb
mov
mov
les
push
push
or
pop
fdivr
jno
cltd
cmp
xchg
in
in
int3
outsl
std
or
ret
ljmp
imul
mov
xchg
fcmovne
xchg
ss
jns
mov
pop
xchg
out
fldt
or
mov
sub
dec
int3
gs
and
arpl
mov
popl
iret
push
cmpsl
dec
push
inc
add
in
xlat
fcomps
roll
movsl
xor
mov
rcr
mov
cmpsb
and
xlat
and
mov
inc
into
mov
mov
and
mov
jge
scas
sub
loope
hlt
fcmovb
add
shrb
das
xor
and
xchg
sahf
add
push
mov
movsl
add
imul
fsts
cs
adc
test
pop
mov
mov
xchg
icebp
lea
inc
out
arpl
mov
aaa
sub
in
imul
sub
jp
mov
jb
mov
push
arpl
pop
lods
lcall
dec
push
or
insb
and
jl
cwtl
call
outsb
test
std
mov
and
int3
aad
push
negb
push
daa
inc
push
add
lcall
in
push
stos
cmp
inc
cmp
cmp
fwait
inc
lret
dec
sahf
fdivr
sbb
daa
std
fistpl
sbb
lahf
shll
jl
sahf
push
dec
icebp
movzbl
sbb
ud2
mov
dec
repnz
cs
dec
in
test
lret
xchg
add
push
push
int
mov
or
js
lahf
lcall
mov
out
xchg
iret
jnp
push
add
mov
xchg
icebp
push
cmpb
xchg
movsb
add
lods
cmpl
push
adc
mov
pop
lock
jecxz
add
imul
divb
or
jl
mov
cmp
cld
sbb
and
or
jge
neg
inc
lds
ret
adc
jmp
mov
jmp
in
jl
sbb
lret
pushf
js
sub
aas
testb
jne
xchg
mov
test
add
std
add
jl
dec
loopne
inc
sbb
jp
das
adc
js
or
aam
in
cmc
mov
or
sarl
push
icebp
ret
filds
scas
shll
xor
cmc
es
cmp
mov
and
addr16
cmpsb
loopne
jae
inc
push
or
rorl
or
shl
mov
loope
lahf
pop
les
jge
sbb
mov
stc
cmc
loop
in
ja
clc
jb
cmp
pusha
call
sbb
addr16
mov
loope
in
pop
outsl
mov
out
mov
push
or
in
mov
repz
inc
sub
xlat
pop
or
std
ds
mov
and
add
movsl
hlt
jne
mov
mov
adc
enter
and
ret
pop
xchg
xchg
jge
mov
cmp
adc
iret
inc
jge
inc
mov
cs
hlt
lock
cltd
cltd
push
mov
jnp
sub
adc
jp
push
jnp
stos
xor
xchg
dec
int3
lcall
sbb
push
movsl
insl
cmpsb
fnstsw
and
mov
sub
cltd
adc
cmp
pop
cld
cmp
xchg
xlat
popa
rorl
xchg
sbb
data16
sub
adc
fwait
imul
cmp
jp
nop
outsl
xchg
mov
jne
rorb
cmc
out
or
cmp
push
push
sub
cwtl
insb
movl
fdivrl
fstpt
lahf
jl
pop
pushf
test
jo
xchg
jne
and
addr16
mov
leave
pop
xor
xlat
jb
sub
mov
rol
faddl
jo
add
add
xchg
mov
cltd
das
inc
pop
movb
cmpsl
iret
aam
mov
mov
mov
inc
sub
xor
mov
mov
repnz
mov
cmp
insl
jae
jo
fs
orl
decl
shrb
adc
jno
sub
aaa
adc
icebp
jo
or
sub
pusha
rcl
xor
jns
jbe
mov
hlt
hlt
xor
add
mov
or
sbbb
push
insb
lret
pop
or
out
push
mov
fs
addr16
divl
lcall
mov
inc
and
sbb
cwtl
fiaddl
dec
mov
sub
pop
push
cmp
cmpsb
fdivrs
mov
adc
mov
movsl
push
mov
jl
add
sbb
xor
sub
jb
dec
cmpsb
idivl
jb
mov
notl
aam
insl
jge
stos
ja
push
data16
scas
jno
dec
int3
jnp
out
mov
into
pushf
outsb
xlat
stos
stc
cmpsl
cmp
adcl
dec
xor
inc
aaa
lods
rorl
out
mov
stc
mov
js
into
clc
dec
jne
repz
fld
popa
or
sub
mov
xorb
mul
xchg
or
mov
inc
xchg
or
int3
sbb
cltd
mov
pop
imul
mov
ljmp
pop
xor
pmaxub
inc
pop
ds
mov
popa
mov
add
push
aam
stos
test
out
loope
stos
lds
nop
xchg
xchg
bound
in
add
xchg
cld
jne
test
orb
rol
repz
or
std
sbb
and
insb
clc
fsubs
mov
shrl
xlat
cmc
mov
in
pop
or
add
xor
shll
pop
jne
leave
test
inc
sti
pop
and
xchg
out
mov
mov
inc
cmpsb
roll
mov
call
jb
mov
mov
fs
or
out
js
xchg
xchg
in
popa
bnd
sub
dec
mov
sti
dec
xor
mov
pushf
cmp
add
add
and
rcll
out
mov
sbb
data16
orl
pop
jno
mov
mov
lahf
jmp
pop
xor
gs
loop
sub
stos
pop
pop
sub
ret
push
mov
jle
xchg
jb
or
adc
insl
adc
sub
inc
mov
pop
mov
xchg
mov
sub
outsb
push
push
test
imul
sbb
push
pop
repnz
cs
mov
xorb
addr16
push
mov
insb
ret
sahf
cmp
aam
cmp
mov
test
cmp
rcr
imulb
lahf
je
jae
rolb
test
aas
arpl
mov
ljmp
cmp
sbb
fildll
push
xor
mov
inc
int3
lcall
cs
and
lods
jp
xchg
sbb
fcomi
lods
rcll
mov
inc
sub
rolb
pop
inc
and
dec
mov
ret
push
push
push
pop
push
int3
mov
push
and
in
sbb
int
and
jp
repz
pcmpgtd
cmp
in
xchg
pop
push
imul
dec
dec
mov
mov
dec
inc
stos
add
outsl
push
mov
rcrl
test
insl
or
cmp
test
sbb
shlb
int3
pop
jle
icebp
mov
pop
lret
scas
dec
cwtl
fnstenv
sbb
mov
mov
dec
sbb
add
aam
push
popf
pop
mov
push
inc
je
pop
in
fcmovnb
xor
addr16
adc
jl
les
daa
outsl
push
mov
or
adc
mov
push
fnstenv
dec
xor
and
cmp
mov
sarb
sub
les
cmp
movsl
sbb
push
aam
lods
out
shr
in
jp
cmp
repz
cwtl
stc
sarl
dec
dec
rol
sti
push
and
pop
xor
sarb
and
mov
push
inc
adc
inc
insb
fwait
mov
cmp
shrl
ljmp
inc
jae
clc
xor
scas
lret
addb
fbstp
cmp
imul
push
out
imul
inc
cmp
sbb
bound
cli
shrb
popa
xchg
shll
pop
jae
std
add
dec
fldl
gs
add
jbe
xchg
pop
jp
ljmp
test
test
jl
push
aaa
inc
neg
dec
testl
fidivrl
jns
sbb
xor
sub
xor
push
cmc
stos
call
cwtl
loope
test
and
adc
mov
add
or
or
test
in
fwait
mov
pop
hlt
xchg
pusha
adc
cwtl
outsb
cmc
push
xor
fwait
add
push
dec
xchg
push
or
lea
icebp
and
repz
in
fisttps
xchg
sbb
or
aas
imul
repz
sbb
pop
popf
or
and
push
mov
pop
sahf
adc
pop
xchg
lea
pop
push
and
pop
inc
dec
mov
cmpsl
and
cmp
mov
fwait
lret
dec
test
xchg
push
mov
lret
fisttpl
fs
cmpsb
adc
adcb
cmp
mov
addr16
stos
inc
rcl
dec
out
out
in
mov
enter
imul
xor
icebp
pop
out
popf
sub
push
sahf
neg
out
aas
adc
rcll
mov
lods
out
mov
lret
cmovns
or
inc
fildll
cmp
inc
cmp
mov
dec
negb
push
xor
dec
fisubrs
or
inc
in
mov
ljmp
push
mov
adc
push
es
outsb
test
out
sub
cmc
adc
inc
and
add
sub
or
mov
ret
lcall
sub
cmpsb
in
fidivrs
cmp
scas
int3
test
or
ljmp
push
bound
jecxz
push
insb
push
lock
mov
dec
pop
ret
sbb
xchg
pop
shl
call
test
leave
lcall
bound
bsf
push
push
loope
aad
xor
jmp
pop
push
ds
bnd
dec
mov
cmc
ja
sahf
pop
push
or
mov
jl
inc
fsubl
adc
or
xchg
inc
xchg
shlb
and
xlat
fistps
std
or
insb
mov
mov
dec
sbb
out
ret
out
in
sbb
int3
xor
lahf
shrb
jecxz
xchg
stos
mov
jne
xchg
stos
xor
les
jbe
ljmp
dec
or
xor
sbb
sbb
xor
inc
add
or
mov
int3
jg
iret
gs
mov
pop
jno
in
lret
std
sub
dec
and
scas
push
scas
sub
dec
mov
mov
xchg
cmp
and
cwtl
add
adc
and
call
mov
pop
xor
push
addb
into
jl
mov
adc
out
enter
fucom
sbb
adc
mov
stos
adc
xor
fisubl
xor
rolb
test
mov
mov
dec
imul
mov
popf
ret
test
jle
jmp
test
divb
icebp
ljmp
mov
xor
call
mov
add
popf
inc
cwtl
js
jbe
icebp
adc
pushf
lret
xor
pop
int
and
pusha
push
pop
out
dec
cmp
test
shrl
mov
loop
sti
mov
xlat
jmp
pop
jno
xchg
outsl
mov
mov
add
mov
call
std
outsb
leave
fldcw
xchg
mov
dec
leave
inc
adc
xchg
mov
add
cli
cmp
and
idiv
sbb
adc
xor
cli
sub
loopne
jle
jo
pushf
push
ret
pop
cmpsl
inc
out
decb
mov
dec
add
pusha
ficompl
push
xor
outsb
cmp
outsl
mov
incl
xchg
roll
xor
xchg
lods
addr16
and
push
mov
xchg
fwait
pop
imul
push
ret
out
stc
or
push
into
pushf
popa
add
inc
sbb
jg
mov
xchg
mov
xor
and
rorb
popa
movsb
mov
sbb
addr16
mov
adcl
mov
scas
add
cmp
cmc
push
stos
repz
mov
push
test
push
nop
enter
xchg
test
jnp
pushf
mov
push
inc
cmc
inc
imul
cld
push
xor
stc
dec
insb
sbb
cltd
stos
xchg
push
filds
cmc
insb
test
testb
popf
enter
andb
imul
test
mov
adc
adc
lock
cmp
xchg
out
lcall
aam
lea
pop
sbb
mov
mov
push
cmp
mov
xorb
out
cmp
mov
add
ljmp
stos
lds
sub
loopne
or
ja
mov
hlt
push
ret
sub
dec
mov
rclb
inc
mov
pop
push
loope
inc
js
leave
or
inc
mov
mov
lods
lock
mov
pop
test
inc
sahf
js
je
std
mov
out
and
lock
lods
insl
add
lret
mov
je
sbbl
xor
cmc
sti
push
addr16
sub
mov
jne
sti
stos
bound
ds
rep
shlb
in
stc
data16
push
pop
and
stc
mov
jg
mov
mull
mov
adcl
lds
mov
ret
mov
call
sbbb
inc
clc
dec
aad
push
stos
mov
clc
ficoms
fs
hlt
jbe
add
jae
add
jecxz
sbb
jb
mov
arpl
jae
jne
leave
xor
pop
mov
rcl
sbb
loop
mov
int3
fistl
adc
sub
dec
clc
adc
ret
mov
ss
cli
cmp
cmpsl
or
out
pop
mov
dec
cwtl
pop
fmulp
jns
mov
add
jge
mov
add
orl
ficompl
dec
daa
xchg
and
call
insb
imull
mov
xchg
sub
mov
jl
or
lret
cwtl
int3
jno
repnz
adc
cwtl
adc
mov
adc
sahf
in
pop
sbb
aad
pop
imul
popf
das
xor
sub
xchg
sub
les
pop
test
cltd
lods
popa
popf
cmpsl
pop
sub
fists
cltd
mov
push
mov
mov
cwtl
jecxz
test
cmp
lret
push
popa
jle
aad
pop
sbb
cwtl
aam
nop
add
mov
xchg
clc
outsl
jmp
lret
inc
sbb
mov
pop
mov
inc
into
inc
stc
pop
mov
in
in
stos
dec
cmp
les
cmp
jecxz
lahf
nop
lods
popf
lods
mov
aam
or
or
push
fildl
jb
push
sbb
mov
fdivrp
aam
add
push
fsts
inc
cmp
push
mov
int3
xor
negb
mov
jnp
loope
pop
ss
dec
push
jecxz
insl
adc
jl,pn
loopne
mov
mov
pop
shll
adc
adc
push
push
xchg
testl
shrl
lea
dec
mov
rcrl
mov
cmp
jge
cmp
push
sub
adc
shl
jbe
in
rol
xor
cli
pop
or
push
ljmp
sub
lods
enter
sahf
dec
popa
xchg
xchg
cmp
xchg
cmpsb
add
push
icebp
roll
pop
rep
testl
push
mov
cmp
stos
adc
nop
inc
jmp
fidivrl
mov
xchg
add
scas
cmp
add
mov
inc
rol
cmp
mov
jae
mov
imulb
iret
test
loopne
xor
cmp
in
jno
jge
push
jb
sbb
roll
mov
ficomps
or
sub
je
push
mov
test
pop
imul
loopne
cmc
and
cmpsl
pop
roll
lret
xchg
hlt
cwtl
mov
sub
sbb
es
push
inc
mov
notb
mov
mov
sbb
loope
ret
dec
sub
adc
out
pop
inc
pop
insl
xchg
cmp
add
decb
pop
mov
xchg
sub
cmpsb
or
enter
std
push
movsb
sahf
adc
add
dec
adc
insb
bound
outsb
movsb
lods
gs
in
sbb
push
enter
push
mov
fsts
aaa
mov
xlat
xor
mov
jne
lods
xchg
mov
push
push
ret
inc
mov
adc
mov
mov
pop
ljmp
cmp
repnz
mov
in
push
mov
add
ja
pop
fnstenv
pop
jg
xchg
scas
cmp
xorb
inc
fidivs
and
xlat
adc
decb
inc
push
jmp
push
cld
add
dec
adc
lea
inc
cmp
popa
push
mov
test
addr16
inc
lret
and
mov
addr16
pop
pop
loop
ffree
cmpl
mov
jl
cmp
fwait
and
in
sahf
cmp
dec
push
cli
xchg
fmull
jns
stos
pop
xor
mov
and
aas
stos
fimuls
cmp
adc
into
mov
cs
sti
push
cli
and
pop
or
sahf
adc
mov
push
sbb
imul
and
xor
and
out
shrl
push
cmp
dec
xor
sbb
adc
in
push
xchg
jae
repz
ret
cmc
inc
mov
and
cmp
mov
pop
fnstsw
icebp
push
mov
jl
movsl
arpl
outsb
loopne
js
jmp
popa
cmpb
mov
ljmp
sbb
and
shl
icebp
imul
adc
into
mov
and
mov
popa
xchg
bound
jb
pop
addr16
addr16
movsl
inc
xor
cmp
pop
jg
mov
inc
cmp
movsb
aam
dec
mov
insl
sbb
lea
jae
fs
aam
in
imulb
fwait
or
adc
jl
ficoml
inc
adc
or
mov
and
adc
push
shrl
push
push
stos
scas
pop
out
dec
inc
cmpsb
scas
imul
cld
stos
lret
mov
inc
sub
ficomps
fcmove
or
xlat
adc
and
fld
lods
mov
mov
outsl
mov
rcl
push
leave
mov
cmp
jmp
push
test
inc
and
icebp
ljmp
push
push
mov
out
in
mov
xchg
movsb
shrl
pusha
loop
xor
ja
jns
js
or
out
adc
mov
in
xor
js
mov
mov
sub
inc
sub
pop
icebp
divb
lods
jns
in
in
aam
mov
pop
inc
jg
std
mov
fmuls
dec
outsb
or
nopl
mull
aaa
in
mov
push
jmp
outsl
inc
pop
imull
cmpsb
insl
leave
mov
loope
out
scas
repnz
adc
mov
push
mov
clc
jg
add
xor
mov
shrb
dec
cmp
int3
add
xchg
adc
test
pop
test
test
mov
sub
push
mov
mov
cmpsb
pop
mov
pop
and
add
sbb
adc
pop
insl
popf
jl
ret
or
sub
addr16
add
adc
imul
arpl
mov
cs
dec
fwait
or
cmpsl
int
push
scas
jge
dec
add
and
push
add
rclb
insb
movsb
or
or
stc
inc
fldt
xor
stos
adc
jecxz
test
mov
xchg
mov
jnp
ljmp
addb
mov
rcr
dec
push
mov
pop
cmc
cmpsl
pop
call
mov
dec
push
mov
mov
call
jb
out
sti
mov
iret
inc
loopne
pusha
xchg
fisttpl
arpl
inc
movsb
cli
cmc
push
mov
ljmp
inc
mov
jle
add
add
dec
out
push
imul
hlt
repz
jecxz
push
push
ret
xchg
and
cmc
fstpl
add
cwtl
cmp
fld
loope
lret
pop
fcmovne
dec
jae
pop
sbb
cmp
stos
pusha
sub
push
jns
sbb
mov
add
outsl
movsl
int
out
push
repz
cmp
xor
subb
dec
and
in
std
in
xchg
cmp
imul
push
mov
call
packssdw
push
inc
aad
push
fistpll
cmpsb
popf
into
addl
lcall
and
xor
or
xchg
cmp
fildl
cmc
cmp
xor
cs
movsl
mov
lods
and
pop
out
insl
loop
inc
mov
add
arpl
xchg
jmp
das
and
ds
in
stc
testl
mov
loop
mov
popf
jecxz
loope
adc
repz
ret
dec
movb
mov
mov
pop
mov
arpl
push
orb
aas
ss
xlat
mov
or
jne
jae
xchg
jl
jbe
xor
lret
and
jo
xchg
dec
push
push
ficompl
arpl
mov
sarb
adcl
scas
sbb
jl
pop
lahf
cmp
push
cltd
loopne
imul
jae
outsl
lods
sti
dec
daa
les
cli
pop
adc
cltd
filds
into
in
jbe
test
sahf
les
cltd
enter
adc
in
pusha
es
daa
loop
xchg
lods
xor
scas
clc
sahf
insb
mov
push
sbb
inc
jecxz
dec
xor
sbbb
jp
jbe
scas
scas
push
in
pushl
push
mov
adc
cmp
mov
pop
sub
push
in
cmp
sub
inc
clc
xor
iret
adc
dec
mov
push
outsl
std
jp
sub
xchg
mov
imul
mov
dec
shlb
scas
xchg
in
and
mov
jmp
mov
push
and
clc
push
pop
push
cmp
pop
fstpt
xchg
sbb
mov
call
mov
sub
xor
add
push
xor
sub
mov
out
popa
lods
xlat
and
addr16
xor
add
in
stos
add
leave
jb
cmpsb
xor
into
andb
push
cmp
bts
or
mov
fs
pop
xchg
out
add
insb
mov
pushl
shlb
xchg
outsb
mov
das
jb
in
jge
xchg
fsubrl
mov
std
inc
repz
jae
es
dec
push
call
fidivl
mov
dec
das
xchg
sub
mov
cmpsl
mov
jnp,pn
mov
call
rolb
cmp
mov
cmp
fdivs
cmp
aad
insb
add
mov
sub
cltd
add
jne
xlat
sub
inc
sahf
sbb
and
fcoml
rol
insb
jle,pt
jg
xchg
dec
or
in
cld
mov
js
mov
cli
clc
into
maxps
int
loop
xchg
push
ja
fs
test
add
dec
ficoms
stos
aad
adc
add
je
mov
bound
lock
mov
xor
pop
jl
roll
test
movsl
pushf
sbb
xor
adc
jge
cmpsl
and
or
push
pusha
cmp
cmp
lahf
xor
jl
ss
lcall
test
popf
jmp
and
sbb
mov
cmp
sahf
push
test
and
ret
idivl
sub
push
mov
cmp
pop
inc
int
sbb
mov
dec
insb
or
lahf
mov
into
push
das
iret
mov
xor
mov
add
in
adc
push
out
les
cmpsb
mov
mov
mov
jo
jae
lahf
or
ja
mov
pop
inc
stos
jno
pop
inc
imul
in
idivl
mov
into
jl
hlt
jmp
adc
xorb
ljmp
fisubs
fsts
mov
gs
push
push
pop
mov
cmp
aad
mov
mov
pop
rcl
add
or
cltd
pop
mov
out
mov
mov
cmp
pop
mov
nop
aas
pop
cld
in
mov
fcomps
pop
in
inc
add
pop
adc
mov
and
loope
xor
add
enter
stc
sub
sub
xchg
xchg
adc
ss
pusha
pushf
mov
les
inc
test
pusha
test
mov
jl
and
cmp
jns
and
push
jge
mov
cmpl
fadd
xchg
shrb
loop
out
nop
cmpsl
ds
xor
movsb
inc
popf
adc
fistpll
hlt
in
sbb
xchg
add
dec
aaa
fmull
repz
rcl
repz
rolb
test
scas
outsl
negb
jae
push
mov
fcomi
cli
imul
rclb
jle
add
mov
jmp
sbb
jnp
lcall
stos
mov
mov
insl
push
enter
adc
jecxz
outsb
pushf
in
push
popa
and
neg
test
jae
aaa
sbb
inc
icebp
rolb
mov
dec
insl
xor
in
or
push
scas
jbe
cltd
stos
mov
lds
in
test
dec
xor
setnp
mov
scas
inc
insl
pop
out
jmp
inc
sub
push
inc
addr16
jns
out
hlt
mov
es
call
xlat
subl
inc
in
xchg
ljmp
jp
sub
adc
jge
mov
ss
rolb
mov
fwait
movsl
and
mov
mov
inc
leave
xorl
fdivs
in
sub
insb
ljmp
stos
enter
icebp
mov
sub
lea
cmp
movq
add
in
lret
stc
mov
adc
jbe
push
andb
sub
cmp
and
pop
cld
ret
aam
sub
add
ffreep
jo
inc
sbbb
rcll
sub
sub
scas
mov
xor
int
shrb
outsl
xchg
jnp
daa
adc
hlt
daa
inc
jp
or
dec
mov
pop
inc
inc
jge
sub
mov
jnp
loope
xchg
mov
movsl
test
test
nop
xlat
in
loop
scas
inc
aas
addr16
dec
std
in
jmp
mov
or
push
data16
movsl
stc
add
imul
in
fiadds
cmp
jge
clc
loope
js
ljmp
scas
xor
movsl
mov
in
jg
loop
dec
idivb
add
out
and
sbb
inc
cwtl
icebp
sarb
xchg
xor
adc
xor
arpl
mov
dec
ja
mov
inc
or
movd
stos
lret
setp
mov
addb
outsb
cld
cmp
cltd
enter
cmp
bound
rcr
mov
mov
in
dec
movsb
xor
dec
jno
dec
scas
stos
or
pusha
imul
enter
add
dec
dec
cmp
jmp
add
test
loop
imul
dec
out
jmp
cltd
aas
imul
adc
xor
mov
int
jmp
sub
xor
xorl
add
mov
add
imul
imul
add
inc
xor
sub
nop
adc
cmp
aam
fdivr
ljmp
icebp
jno
outsl
mov
hlt
insb
inc
popf
outsl
rcrb
repnz
mov
cs
into
sbbl
and
scas
cmp
sub
mov
xchg
bound
push
aad
test
int
adc
in
jno
add
pop
in
or
inc
test
xchg
js
out
das
jmp
xlat
adc
mov
inc
jp
outsl
sub
mov
xor
repz
fildl
inc
aam
imul
scas
fldenv
jns
lret
mov
push
in
ljmp
mov
xorb
mov
inc
test
xor
push
in
stos
repnz
xchg
inc
bound
stos
cmp
stc
and
xor
inc
aas
shlb
jns
lcall
popa
psubb
lret
into
push
sti
inc
into
fimull
inc
pop
ret
mov
sbb
mov
dec
cmp
les
call
cmp
ds
or
sub
lds
call
inc
inc
cmc
dec
lret
adc
jmp
loop
jecxz
loope
int
fiadds
nop
cwtl
negl
pop
shrl
out
mov
and
xor
inc
rolb
not
stc
xchg
xchg
xor
jle
mov
lret
dec
xor
dec
and
adc
ljmp
or
shlb
aam
andl
pop
push
cmp
adc
fidivl
out
insb
lcall
test
fwait
rcll
push
cmpl
in
xchg
cwtl
stc
mov
jns
adc
xor
mov
ja
add
aaa
into
test
cltd
push
and
fstpt
mov
add
sub
cld
ja
insb
jne
jl
jne
mov
jmp
mov
jecxz
inc
and
test
xor
cmp
dec
inc
dec
mov
adc
adc
int3
js
lds
xchg
daa
rcrb
rclb
popa
inc
fstl
sub
mov
cmpsb
push
push
push
test
lock
arpl
aas
adc
mov
ret
mov
add
arpl
iret
mov
icebp
push
je
xlat
lods
rorb
inc
inc
push
sahf
dec
mov
stos
mov
jo
lods
sti
and
pop
inc
arpl
popa
ss
sbb
outsl
mov
jbe
cltd
flds
xchg
inc
pushf
jl
out
or
jmp
mov
mov
addr16
test
adc
lret
xor
je
mov
mov
mov
call
shlb
repnz
cld
js
into
pop
rcrl
lods
adc
push
xchg
out
push
mov
sub
add
addr16
outsb
jecxz
dec
adc
mov
outsl
cltd
adcb
sub
jno
mov
cltd
and
add
cli
test
inc
push
xchg
mov
mov
hlt
cmp
mov
mov
addl
add
or
bound
scas
cltd
push
add
ret
jo
rolb
or
xor
xchg
sbb
sbb
imul
int3
sbb
add
mov
xchg
lahf
jnp
jge
sbb
and
rorl
imul
jns
lret
fcoml
dec
orb
repz
push
loop
sub
insb
repz
scas
or
adc
popa
xchg
lds
sub
add
nop
les
sbb
enter
adc
and
ret
sbb
sar
daa
jg
and
lds
pop
call
aas
sbbb
ret
fadds
xchg
xchg
lahf
xor
iret
jno
ljmp
int3
decl
mov
mov
mov
push
lret
and
cmp
imul
mov
daa
ljmp
inc
in
push
adc
and
and
adc
pop
fildll
push
rol
mov
cwtl
jge
fbld
add
jge
sub
add
mov
mov
pop
out
mov
cmp
push
in
insb
fldenv
ret
mov
push
fwait
and
add
test
xchg
sbb
sahf
addr16
and
sbb
repnz
jae
popf
push
mov
cmp
repz
or
out
xchg
jmp
fs
dec
push
sbb
fdivrs
test
add
mov
ds
sbb
cmp
xlat
mov
ja
lods
repnz
aaa
sub
movsl
pop
js
push
call
vphadduwq
mov
int3
xchg
pushf
rol
xor
in
dec
subb
push
in
cltd
outsb
imul
stc
jno
outsl
ja
data16
mov
add
inc
mov
pop
push
out
jecxz
pop
scas
inc
mov
fdiv
shll
dec
add
int
xchg
jge
hlt
push
incb
jle
inc
push
dec
dec
xlat
ficompl
lods
fwait
outsb
adc
aas
push
out
and
testl
nop
std
jge
push
pop
fists
xor
mov
clc
or
or
push
lea
in
mov
and
fnsetpm(287
pop
adc
pop
mov
dec
hlt
lods
sbb
xlat
mov
stos
es
lds
cltd
hlt
dec
dec
inc
pop
roll
je
push
outsb
add
roll
int3
mov
stos
mov
fs
repz
inc
inc
clc
jg
dec
xlat
insl
xchg
enter
xlat
mov
dec
ret
add
scas
add
addr16
mov
lods
mov
jmp
loope
cmp
fdiv
enter
push
mov
or
push
in
dec
enter
in
stos
das
lcall
jns
pop
sub
push
mov
mov
and
inc
movsb
pop
inc
xor
push
faddp
xor
adc
scas
imul
push
cwtl
cmpsl
sub
sub
jmp
movsb
lcall
adcl
fisubs
mov
pushf
outsl
imul
add
xchg
sti
ret
pop
adc
mov
inc
push
inc
sbb
in
lret
pop
out
jl
cmp
dec
sub
shll
movsb
daa
sub
dec
lods
xchg
lcall
mov
das
ja
testb
xor
xchg
dec
gs
repnz
jmp
cmpsb
xor
mov
lcall
add
push
mov
push
orl
test
xchg
and
cwtl
aaa
aaa
data16
jmp
test
mov
jge
fsubrl
mov
cltd
xlat
add
pop
ja
stos
mov
mov
fidivs
ljmp
sub
sti
out
in
divb
test
js
jno
ss
out
aad
mov
cmpsl
mov
cld
inc
cli
test
jg
mov
jnp
jno
movl
mov
inc
jg
dec
push
pop
addl
sbb
loopne
xor
mov
dec
adc
fstpt
dec
xor
imul
adc
mov
insl
lea
add
mov
aam
movsl
insb
jbe
test
scas
sbb
sbb
inc
loopne
jo
addr16
mov
jmp
jge
repz
pop
cmp
lock
sub
mov
popa
and
cmpsl
dec
push
ss
mov
jge
clc
mov
or
push
lret
loopne
movsb
add
mov
lret
pop
sbb
int
pusha
jl
popa
sbb
lods
jno
rcll
out
loop
fiaddl
cltd
mov
xchg
mov
cld
dec
and
mov
cmpb
and
pusha
sub
subb
cmp
dec
jmp
or
fisttpl
fistl
lods
inc
gs
push
movsb
xlat
jae
push
aaa
mov
sub
mov
add
sub
push
insb
fsubrs
lcall
xor
pop
sub
sarl
mov
dec
leave
in
xchg
pusha
or
loope
stos
ds
stc
mov
sti
enter
add
scas
pop
hlt
popf
push
sti
outsb
sub
xchg
mov
cmpsb
jo
movsl
lea
lcall
mov
add
jae
test
push
mov
sub
aam
gs
push
faddl
mov
test
adc
push
xor
push
sub
arpl
push
dec
adc
mov
inc
push
push
pushf
std
ret
mov
pop
push
inc
loop
pop
jmp
or
cmp
inc
jg
inc
hlt
imul
iret
scas
pop
in
imul
mov
out
cld
insb
mov
dec
sbb
lret
repz
mov
pop
and
sbbb
mov
repz
divl
mov
add
sbb
divb
lds
popa
out
xchg
dec
seta
aad
popa
pop
mov
pop
add
fildl
or
loopne
ret
jb
popf
test
push
cmp
dec
cwtl
movzwl
das
or
jg
or
je
jno
fs
int
xor
push
xchg
and
mov
or
cltd
sub
mov
test
mov
xor
cmp
outsl
mov
dec
jb
stos
outsb
mov
push
xchg
xchg
sbb
jle
add
push
xorl
mov
fwait
in
test
fwait
pop
dec
cmpl
fs
pop
sbb
addl
or
fsts
fmuls
push
add
les
dec
mov
clc
fldcw
enter
jmp
fstpt
sub
cs
mov
orb
out
sbb
je
add
sbb
outsb
sbb
add
lea
mov
test
aad
insb
add
out
xor
mov
add
xchg
mov
movsl
imul
mov
sbb
sbb
lods
and
int3
cs
filds
ss
imul
mov
mov
fwait
mov
xchg
out
les
adc
mov
decl
cmp
mov
daa
loope
push
iret
push
mov
loopne
jno
lret
pop
cs
jge
push
lds
mov
mov
mov
ds
aas
pop
js
lods
cltd
xchg
icebp
mov
inc
xchg
cli
shll
mov
or
lret
cli
mov
aaa
lea
outsb
push
loopne
decb
jne
mov
pop
sbb
pop
lret
adc
mov
jl
cmpsb
cmc
pop
inc
xchg
mov
dec
movsb
mov
jb
push
shlb
cmp
or
imul
xchg
loop
shll
ds
bound
lds
jae
sahf
sbb
in
pop
push
mov
pop
sub
adc
lahf
out
mov
inc
push
pop
retw
add
lds
pop
add
mov
popf
xor
and
repnz
test
pop
mov
add
lret
stos
orb
jecxz
mov
cmpsb
push
mov
xchg
jecxz
jbe
dec
jno
and
ret
xchg
test
xchg
inc
out
es
or
mov
minps
lahf
sahf
out
rcl
out
push
cs
sbb
adc
push
push
xchg
mov
mov
cmp
inc
pop
out
ja
mov
hlt
xchg
daa
test
testb
and
xor
or
and
adc
sbb
rcrl
and
imul
inc
cmpsb
add
stc
fmuls
mov
or
sub
hlt
mov
push
sbb
lea
add
data16
mov
mov
and
or
cmp
or
cltd
add
and
cmp
insb
and
data16
or
std
mov
popa
and
jmp
sub
repnz
out
push
fs
inc
jge
jp
fwait
ljmp
push
imul
int
mov
sbb
pop
hlt
cmpsb
sbb
jae
aad
jns
mov
xchg
sbb
or
loop
ss
xchg
out
or
xchg
loop
sbb
repz
imul
mov
std
mov
sbb
popa
mov
les
mov
jp
xor
push
arpl
faddl
fs
add
add
mov
int3
xor
xchg
in
inc
sahf
adc
or
and
negl
jns
in
inc
adc
cmpsl
stc
ds
fcmovne
fdivrs
cmpl
xchg
out
pop
lea
inc
leave
mov
xor
mov
jne
cmc
cmpsl
test
sahf
mov
xchg
je
and
aad
gs
sbb
xchg
nop
jecxz
push
push
repz
jmp
lcall
mov
xchg
jl
dec
shll
mov
dec
sti
hlt
jg
fisubl
inc
inc
push
dec
sub
adc
gs
lds
dec
add
sub
rorl
icebp
scas
repz
hlt
jae
jmp
lea
jae
xchg
in
mov
mov
dec
dec
jg
out
outsb
fcompl
mov
lods
gs
sbb
jl
repz
cmp
push
jle
dec
adc
in
mov
inc
insb
cli
mov
pusha
pop
les
adc
push
jl
in
aam
stc
sbb
and
xor
mov
xchg
fs
jecxz
sub
das
pop
cld
aam
mov
cmp
enter
sahf
sub
cmpsb
xchg
je
mov
cmpsl
and
fwait
aad
test
pop
addb
sub
mov
cli
lahf
call
mov
cs
das
cs
dec
and
mov
stos
cmp
rcl
dec
sbb
and
inc
adc
push
into
cwtl
add
bound
push
mov
test
out
xor
push
repz
leave
out
mov
popf
and
mov
imul
inc
cli
cmpsb
add
mov
sub
out
dec
sbb
mov
rclb
lahf
mov
mov
popa
das
cwtl
or
pop
pop
add
mov
pop
mov
pop
jb
outsl
mov
shr
int
mov
mov
add
mov
pop
mov
xchg
mov
in
pop
add
cmp
add
push
lcall
jne
add
std
pushf
gs
mov
imul
mov
push
push
and
das
cmc
jmp
hlt
gs
mov
add
ret
add
stos
cmp
mov
je
add
jne
pop
jmp
imul
xchg
sbb
clc
push
out
cld
scas
push
test
sbbl
cmovne
or
lret
xchg
ss
push
test
fimull
out
fistps
sbb
inc
clc
mov
daa
mov
not
je
xorl
inc
xlat
ds
sbb
test
inc
fdiv
cmp
arpl
xchg
je
clc
mov
icebp
pop
jg
push
icebp
rorb
cmpsl
jp
push
cmpsb
rcrl
cmp
mov
loope
sbb
xor
xchg
mov
inc
cmpsb
inc
push
lret
mov
mov
enter
cwtl
jb
imul
add
cli
in
int3
xor
mov
push
xchg
imul
push
xchg
stc
cmp
sbb
cltd
into
pop
mov
add
stos
test
fcmove
xchg
loop
pop
or
dec
push
xorl
mov
pop
neg
mov
xchg
xor
in
pop
mov
aas
sbb
nop
insb
pop
or
cmp
fiaddl
cmp
mov
dec
and
xchg
mov
leave
arpl
push
shl
aam
dec
stos
adc
push
jo
sti
orb
inc
js
je
fdivs
sub
xchg
ja
push
xchg
xor
mov
loop
sbb
xorl
jg
lock
pop
mov
inc
addr16
jp
lds
je
cmpsl
sbb
jg
lods
mov
loopne
in
enter
xchg
push
les
mov
mov
add
pop
or
insb
loopne
testl
fstpt
and
push
cmp
sahf
out
xlat
sarb
cmp
rorl
sbb
jbe
lret
outsl
jmp
mov
jb
mov
shr
sub
cld
pop
aam
aaa
mov
mov
js
and
testl
inc
push
pop
mov
fdivs
mov
sti
int
jmp
dec
addr16
call
jge
pop
addr16
and
lahf
mov
xor
cld
sbb
sbb
lds
and
fcoml
mov
pop
fisttpll
loopne
add
fldt
dec
cmp
repz
cmp
rorb
inc
push
dec
inc
icebp
aam
pop
inc
pop
and
int3
push
add
xchg
psubb
fcomps
lods
into
test
jae
mov
adc
minps
bound
xchg
popa
dec
out
ds
mov
sbb
sbb
and
cmp
sti
mov
xchg
xchg
push
stos
xor
jns
adc
mov
add
je
in
cltd
mov
icebp
push
sub
enter
pop
push
adc
in
clc
movsl
sub
mov
repz
cmp
stos
imul
imul
cmp
jnp
mov
xor
lock
lcall
dec
cmp
jo
aaa
mov
pop
jbe
push
aad
pandn
mov
test
inc
xor
push
xchg
dec
in
mov
test
jnp
jne
dec
ret
mov
ja
bnd
lds
nop
sbb
mov
movsl
rol
jb
into
out
rcrl
pop
xchg
mov
ja
imul
pop
loopne
lea
lahf
stos
sub
jg
and
jle
xchg
pop
jge
cmp
out
or
popa
cmpsl
gs
das
stos
and
lcall
out
xor
mov
dec
or
cmp
pop
fdivrl
sbb
push
push
mov
sti
add
sub
pop
cs
js
cmp
adc
mov
dec
fiaddl
xchg
pushf
pop
nop
adc
inc
mov
sub
test
push
iret
mov
out
dec
shrl
pop
fcomps
or
lea
xor
stos
pop
pop
cwtl
addb
outsl
mov
jo
mov
jb
pop
inc
loope
ss
stos
divb
xor
shrl
jg
loop
mov
ss
idivb
mov
ljmp
bound
outsl
and
fwait
inc
or
cwtl
pop
lea
fildll
in
dec
push
or
add
sbb
push
dec
lahf
sahf
insl
mov
mov
jns
mov
test
jge
in
mov
pop
clc
mov
call
clc
in
scas
icebp
xchg
xchg
fdivr
and
mov
popf
adc
js
lea
mov
push
xchg
clc
test
popf
push
sahf
push
cmp
cmp
lods
fildl
pusha
or
stos
push
inc
fmuls
icebp
or
add
data16
lret
xor
sbb
cmpsb
leave
fs
lret
cmp
add
imul
or
inc
pop
cli
adc
loopne
jp
mov
mov
cwtl
mov
sub
cmp
cmpsl
mov
out
movsl
std
inc
aas
jge
jg
push
jle
lret
arpl
inc
test
xchg
sbb
push
inc
imulb
call
jbe
mov
mov
cmp
mov
std
sbb
repnz
lock
repz
repz
add
pop
adc
addr16
pop
pop
pop
lods
flds
bound
outsb
cmpl
inc
dec
mov
dec
mov
std
sbb
fnsave
jae
les
or
addr16
jo
add
rolb
xchg
mov
mov
shll
dec
jae
mov
enter
mov
out
cmp
stos
mov
nop
mov
pop
add
sahf
imul
mov
movsl
shll
pop
dec
cltd
jp
jg
xchg
inc
out
and
push
in
out
pop
xchg
cld
outsl
jp
mov
mov
scas
orb
pop
xchg
sbb
movsb
jno
cmp
lea
lea
es
and
mov
stos
mov
mov
out
xchg
mov
stos
dec
jnp
sub
cld
or
aas
mov
pop
add
xor
dec
enter
push
and
fcompl
adc
sub
lods
lea
ror
push
cmpsl
inc
fnstenv
fisttpll
inc
add
pop
jle
mov
xor
xchg
pop
mov
xor
inc
pop
mov
mov
pusha
scas
incb
push
lods
sbb
fadd
in
lock
push
cmp
ret
pop
mov
out
scas
xor
mov
nop
inc
fcmove
jno
mov
out
inc
call
or
mov
sub
mov
xchg
test
mov
enter
cli
xlat
hlt
and
stc
xorl
fdivp
test
inc
in
xor
pop
ja
popf
adc
jbe
sub
jmp
in
pop
gs
cmp
ljmp
test
stc
mov
dec
imul
inc
in
mov
incb
jl
sub
nop
cmpsb
dec
orb
ja
push
pop
sub
push
fdivl
push
ret
jbe
push
cld
inc
jl
out
jb
les
xchg
mov
mov
sbb
pop
repz
jg
ds
jl
cltd
movsl
dec
call
sarl
mov
stos
inc
test
pop
into
test
leave
inc
pop
sbb
or
faddp
addr16
ja
sub
xor
popa
mov
xchg
sbb
fistpl
pusha
xchg
ljmp
lahf
mov
mov
mov
mov
cs
call
fs
fistl
adc
xlat
sub
mov
ljmp
add
subl
push
scas
test
xchg
repnz
sarb
xchg
sub
into
dec
or
jmp
dec
push
je
xlat
scas
sub
cmp
jmp
lock
xchg
movsb
mov
pop
nop
cltd
test
pushf
in
jne
jle
inc
lea
sti
fcoms
mul
mov
mov
mov
and
movsb
dec
or
inc
dec
mov
sbb
push
xchg
shr
rolb
fiadds
push
fs
fistpll
idiv
and
mov
cmp
mov
pop
jnp
and
adc
rorb
clc
pop
jae
xchg
dec
enter
jbe
aad
push
pop
xor
pop
xlat
daa
es
pop
sbb
pop
cmpsl
loope
ret
sub
mov
aas
pop
or
scas
add
scas
insl
hlt
lds
imul
push
sub
imul
dec
xchg
push
add
sbb
lods
loopne
faddl
push
into
fisttpll
sti
push
or
ds
sti
lock
mov
jg
fisttpl
mull
into
cmp
inc
xchg
cmp
ja
dec
les
scas
push
add
mull
lret
sbbl
ljmp
divl
mov
or
cmp
fs
pusha
jns
jns
add
adc
push
add
loop
out
inc
ljmp
stc
cmp
clc
mov
fidivs
jge
jns
aam
jl
inc
and
push
call
imulb
movsw
mov
xchg
and
pop
xchg
loop
fs
das
inc
mov
mov
mov
jns
popf
into
jb
ret
jmp
iret
in
fistl
push
mov
xlat
fstl
inc
mov
clc
push
gs
mov
cmp
out
xchg
xor
and
outsl
sub
mov
js
add
and
fdiv
cmp
popf
mov
das
sub
jecxz
sahf
test
negb
add
mov
imul
in
cltd
ret
jg
mov
dec
adc
mov
bswap
mov
push
cmp
fcmovb
push
fldcw
movsb
cmpb
push
orb
xor
insl
nop
or
mov
or
ret
mov
stos
push
adc
test
sub
sbb
ljmp
hlt
es
pop
in
mov
es
ret
sub
xor
pop
jmp
mov
pop
add
fisttpll
addl
cli
adc
lcall
movsl
xor
mov
pop
jnp
fidivl
loop
shl
jmp
cmpsb
in
fstps
idivl
xchg
fsts
adc
outsb
pushf
pushl
push
jecxz
popa
or
xor
mov
inc
sub
ljmp
rorb
sti
adc
dec
mov
mov
nop
dec
xchg
adc
jbe
inc
lock
sub
mov
and
sub
jno
mov
into
sbb
xchg
std
hlt
repz
or
rorl
jmp
jbe
jle
inc
jg
sbb
icebp
or
or
aam
ficoml
jp
iret
insb
and
lods
out
pop
mov
scas
sahf
add
jle
or
pusha
and
sub
push
arpl
cmpsl
mov
jmp
in
ja
aaa
pop
loopne
repz
xor
xor
repnz
xchg
testb
call
cs
into
sti
and
pop
sub
jg
adc
aas
nop
or
mov
inc
scas
lds
adc
jae
fiadds
jg
aad
cmpsl
mov
adc
mov
mov
lods
cmp
in
mov
lret
daa
stc
mov
popa
out
arpl
mov
hlt
pusha
push
jno
xchg
push
movsb
cwtl
inc
mov
rcl
lahf
fs
popa
or
mov
nop
jbe
cmp
fsubr
cmpsb
rcr
push
loope
in
xchg
cmpsb
pop
mull
adc
pop
test
inc
pushf
ljmp
sbb
push
lds
inc
aas
icebp
add
je
pop
mov
inc
and
xor
xor
loopne
inc
inc
sbb
lea
lret
or
cmp
inc
lds
pop
aas
scas
pop
cmp
xchg
cltd
loop
rcll
dec
and
inc
jmp
mov
pop
mov
fists
xor
xchg
pop
lret
mov
xchg
fidivl
add
filds
and
sub
mov
int
repz
rcr
cwtl
jle
pinsrw
xchg
sahf
mov
xor
mov
sub
popf
lods
push
cmc
mov
ss
out
test
loopne
xor
ret
out
ljmp
jns
clc
cmpl
cwtl
pop
jno
ja
loope
adc
push
add
dec
out
inc
fstpt
notb
jl
fwait
hlt
mov
xchg
addr16
daa
mov
popa
lcall
ret
notl
mov
ret
push
mov
xchg
in
sbb
push
xlat
movhps
sub
cmp
rolb
in
xor
dec
dec
insl
shll
or
xchg
mov
inc
int
andb
clc
adc
push
add
test
js
lods
fldt
jae
cmp
sbb
icebp
pop
stos
pop
or
dec
xor
insl
or
xchg
add
mov
enter
hlt
jecxz
mov
lret
mov
cwtl
rolb
hlt
sbb
fwait
iret
xor
mov
mov
in
stos
xor
ja
dec
adc
iret
xchg
xchg
rcll
xor
outsl
pushf
sbb
mov
pop
cmc
or
xchg
mov
rclb
clc
test
mov
jo
dec
loopne
sbb
flds
mov
scas
clc
sub
repz
mov
mov
out
mov
pop
fstps
cmp
ficoms
les
lret
lods
inc
xor
sub
jg
jmp
or
nop
pop
xchg
negl
lods
ret
lahf
int
pop
aaa
mov
pop
sbb
ret
pop
int
mov
push
dec
cmp
jg
and
pop
pop
xlat
fs
fbld
mov
testb
outsl
bound
jnp
lds
push
aam
sub
or
repnz
jg
dec
outsl
adc
in
std
pusha
jmp
pusha
dec
je
pop
rolb
mov
jecxz
insb
mov
scas
sbb
push
lea
cmp
jno
mov
add
ret
add
jmp
sbb
pop
mov
nop
mov
mov
stos
jl
lahf
iret
pushf
dec
push
sbb
xchg
cmp
lock
das
and
enter
out
and
sub
test
inc
sbb
mov
leave
push
push
or
push
pop
adc
data16
jns
adc
xor
and
in
add
fdivrl
fsts
fsubl
mov
mov
mov
xchg
add
pop
sbb
jns
xchg
js
aad
rclb
scas
addr16
repz
out
outsl
cmc
pop
shll
pop
out
sbb
movzwl
mov
xchg
inc
pusha
mov
outsb
inc
push
mov
cmp
xchg
xchg
out
xor
mov
aas
out
sub
push
adc
push
stos
jne
out
sub
adc
jns
lahf
repz
cmpsl
pushf
outsb
cli
in
lock
xchg
cltd
ret
enter
add
mov
xchg
cmpb
orl
daa
subl
orl
scas
test
or
jns
xchg
cmp
data16
mov
push
lds
or
je
xchg
addr16
xchg
fisttpl
add
jne
vpand
push
roll
gs
fisubrl
mov
adc
and
imul
popf
xchg
cli
outsl
mov
pusha
cmp
fistps
jge
sbb
fstl
cmp
or
out
push
call
das
fidivrs
cwtl
scas
jl
lcall
inc
sbb
out
xor
pop
adc
shrl
or
adc
adcl
cmpsl
jns
pop
jmp
loopne
add
or
lret
jge
cmp
sahf
jnp
je
lds
dec
cmpsb
or
insb
stc
jecxz
fbstp
jg
mov
push
fwait
mov
jmp
or
cwtl
iret
das
add
cmpsb
xchg
add
loop
xchg
mov
imul
incl
bound
subl
mov
mov
mov
jne
and
xor
mov
movntps
xchg
mov
or
outsb
sub
into
pop
xchg
enter
and
or
xchg
push
xchg
popa
fcomp
repz
pop
pop
inc
popf
adc
sbb
je
pop
mov
dec
rcr
adc
mov
mov
inc
rorb
roll
in
mov
push
ror
and
jg
mov
and
sbb
popf
and
sub
fistpl
sub
aaa
pop
jp
lds
cmpl
jns
stc
cmp
cmc
xlat
shll
es
or
or
int
fldenv
mov
inc
dec
jmp
daa
adc
aaa
int
add
pusha
in
lahf
inc
insl
xchg
bound
sbb
scas
xchg
jo
loopne
sbb
out
adc
mov
icebp
push
pop
aas
repz
sub
test
xchg
sbb
and
shl
xorl
int3
pop
add
xchg
mov
dec
or
cmp
mov
push
sbb
dec
push
insl
or
mov
mov
mov
inc
adc
push
jmp
sub
testl
jbe
leave
sub
std
call
arpl
ud1
loopne
pop
cld
cwtl
mov
ja
mov
cmpsl
mov
in
ljmp
shrl
mov
cmp
test
dec
es
out
dec
das
mov
and
xor
mov
pop
les
sbb
cmpsl
push
pop
sbbl
push
jecxz
jp
xor
lods
arpl
insb
js
setg
imul
jne
pop
inc
xchg
cmp
testb
cmp
and
sub
push
lods
pop
sbb
jecxz
push
stos
adc
out
enter
int3
in
lret
cmp
sbb
lret
push
mov
arpl
adc
push
xlat
das
jns
and
push
insb
cmpsl
lods
test
jo
clc
and
mov
test
adc
or
lds
xor
movsl
jg
mov
xor
ljmp
pop
lret
test
das
mov
pop
ljmp
inc
ret
push
add
stos
xchg
mov
xor
push
push
ret
insl
jle
adc
call
push
cmp
xor
pop
lret
jne
fsubrs
mov
es
daa
scas
test
cmp
daa
add
or
mov
cld
dec
fdivrl
loope
xchg
mov
sbb
jecxz
jno
and
inc
sub
fs
add
fldl
in
sbb
js
nop
div
pop
push
mov
mov
outsb
sub
sub
mov
jecxz
xor
addl
cmpl
jo
xchg
and
les
sub
push
movsb
push
mov
dec
in
adc
jo
xchg
pusha
adc
jbe
inc
sarl
shrl
movsb
movsb
neg
xor
or
lret
sub
sbb
sahf
test
nop
and
dec
jmp
mov
mov
lods
arpl
icebp
xchg
xchg
into
data16
jbe
cmp
push
test
inc
inc
or
dec
cmp
push
mov
into
jmp
adc
out
bound
sub
mov
mov
scas
sbb
inc
adc
sub
push
jno
repz
mov
and
rorb
in
pop
mov
out
xchg
and
sbb
lcall
jnp
dec
xor
cmpsb
iret
mov
mov
xchg
pop
mov
jp
and
inc
popa
orb
dec
inc
push
mov
inc
ljmp
mov
sbb
faddl
push
jg
sbb
sarl
aaa
or
xchg
dec
mov
das
sub
cmp
loopne
add
fsubrs
popa
jl
jecxz
sub
sub
mov
sub
imul
mov
loope
lods
aas
jmp
lcall
std
xor
xchg
pop
ret
stc
jmp
sub
cmpl
gs
pop
in
jg
inc
sub
push
adc
push
scas
scas
cmpsb
xchg
xchg
add
shll
cs
jnp
icebp
or
aaa
pop
enter
xchg
adc
data16
loope
add
fdivrs
in
je
aas
pusha
jg
xor
in
jo
push
aas
mov
pop
adc
or
movsb
ret
imul
mov
push
out
sbb
ljmp
jl
outsb
jecxz
es
std
cmp
fcmovnu
rcr
dec
inc
push
xlat
or
pop
inc
aaa
xchg
rcrl
ds
sub
mov
and
mov
inc
fdivrl
ficompl
push
pop
nop
in
ds
sar
stos
add
adc
jge
and
call
sahf
incb
cmpsl
xchg
faddl
pop
xchg
out
jp
dec
push
add
push
orb
mov
out
inc
jo
jo
xor
outsl
pushf
pop
shlb
or
rol
out
mov
es
jp
add
cmpsl
shlb
fwait
ret
sbb
mov
enter
out
outsb
xchg
dec
cmpl
adc
ret
mov
dec
jno
sbb
movsl
adc
cltd
out
pop
cltd
aam
sub
dec
xor
in
lret
in
fsubs
movsl
adc
jno
cltd
daa
fldt
loop
inc
or
add
and
dec
popa
lret
scas
sbb
xchg
xchg
cs
lds
mov
mov
lods
jbe
adc
pop
mov
stc
jb
xchg
cltd
mov
xchg
jbe
pop
mov
sub
mov
es
cmp
adcb
scas
loopne
mov
inc
mov
mov
push
cld
cmp
into
loope
sub
push
sub
insb
dec
inc
dec
call
popa
cltd
pusha
xor
cwtl
jb
jb
inc
aam
xchg
and
mov
movsl
push
gs
push
and
pop
call
adc
and
sbb
andl
lahf
dec
xor
xchg
sub
mov
sarb
pop
sub
push
pusha
xor
and
int
into
ret
into
mov
sarl
dec
mov
outsl
mov
sub
mov
add
sbb
stos
mov
into
ret
rcrb
xor
xor
loope
mov
repz
mov
lret
sbb
mov
aas
cld
sbb
adc
in
fisubl
and
in
mov
jns
add
inc
fnstsw
xorl
outsb
push
fidivs
or
jmp
lret
loope
je
out
out
in
movsl
push
imul
cmp
add
push
bound
or
jge
gs
xchg
push
pop
pushf
dec
pop
adc
inc
sti
xchg
or
push
outsb
sbb
cmpsb
hlt
fwait
or
gs
or
sti
cmc
add
test
movsl
in
or
sub
and
xor
jmp
dec
inc
inc
xchg
sahf
fcomps
enter
or
dec
mov
into
sub
xor
inc
inc
loopne
cmc
xor
dec
into
popf
xchg
and
das
sbb
jmp
loopne
sti
and
rclb
sub
insl
ss
outsl
dec
mov
cwtl
cs
arpl
and
movsl
out
pop
aam
mov
pop
ret
sub
dec
adcl
add
cmpsb
mov
push
lret
mov
les
popa
add
xor
outsb
loopne
sub
push
jl
xchg
sbb
leave
jae
fstps
jp
jbe
cmpsb
rcrl
sbb
xor
sahf
inc
or
sti
gs
out
xor
test
fisubrs
push
mov
in
jg
pop
repz
mov
xor
imul
push
das
repnz
inc
mov
add
movaps
sub
shrb
mov
add
mov
mov
aas
xchg
mov
and
adc
xchg
xchg
fistpll
out
jle
std
xorl
adc
xchg
sub
loop
push
int
insl
icebp
loopew
sbb
les
xchg
xor
xchg
and
xor
jp
add
push
adc
ss
mov
pushf
inc
mov
imul
imul
push
es
pop
sub
inc
jns
imul
fidivrs
test
aad
enter
sbb
aam
inc
and
adc
cmp
pop
and
sbb
pop
shrb
js
jmp
pop
divb
addr16
add
jecxz
push
imul
outsb
jb
xchg
push
outsb
pop
divb
nop
mov
aaa
jne
cltd
add
outsb
ret
inc
lcall
mov
or
in
in
inc
pop
push
loop
dec
nop
xchg
mulb
mov
jecxz
xor
popa
mov
push
push
je
cmpsl
int
inc
add
push
push
dec
cmpsl
add
in
aaa
cwtl
aad
nop
mov
in
cmp
pop
push
invd
sub
dec
mov
mov
sub
popf
in
xchg
lret
aad
xor
xor
mov
repz
test
scas
cmp
test
push
insb
std
dec
push
push
leave
subl
adc
adcb
adc
add
test
sub
sahf
hlt
cmpsl
mov
stos
loopne,pn
arpl
jae
dec
popf
and
mov
jnp
inc
enter
pushf
xchg
addr16
stos
std
or
js
pop
fstpt
imull
pop
pop
xor
aas
outsb
iret
imul
push
inc
xchg
sahf
out
mov
in
or
int
sub
jp
xor
pusha
sub
ljmp
cmp
sbb
jne
fdivl
pop
push
loopne
add
sbb
vmovntpd
popf
pop
shrb
inc
addr16
inc
jbe
scas
clc
or
insl
iret
jle
fsubl
push
add
adc
add
push
aas
push
mov
jbe
push
rol
add
fistps
out
mov
push
mov
les
pop
scas
xchg
sub
sbb
test
dec
mov
int
lret
es
jge
fadd
sar
pop
rcrb
aad
test
test
iret
in
popf
sub
sbb
icebp
xchg
int3
stos
mov
jne
mov
mov
sub
popa
push
jae
repnz
push
cmpl
jb
popf
stc
hlt
pop
and
cmp
add
xchg
call
cs
cmp
cmp
gs
cld
out
aam
xor
je
xor
adcb
mov
outsb
mov
imul
jge
test
sub
mov
fld
push
shr
jno
clc
push
dec
ss
aas
ss
pop
and
cltd
outsl
xor
jp
lret
call
mov
shlb
lds
xchg
mov
push
push
xchg
mov
mov
mov
aad
mov
jge
ret
dec
pop
pop
or
mov
aaa
xor
xor
sbb
jno
mov
mov
or
dec
jne
imul
jns
pop
gs
jle
sub
inc
testb
cmp
jp
fsubrl
push
mov
fisubrs
cmp
cmp
leave
aas
lds
mov
adcl
sbb
mov
gs
push
add
cmp
js
nop
inc
inc
push
sub
adc
adc
adc
popa
jbe
aad
out
xlat
cmp
loop
popf
jbe
or
adc
test
pop
mov
lea
mov
jae
xchg
inc
stos
mov
jp
dec
and
push
adc
and
add
mov
inc
stc
andb
jbe
mov
sub
pop
repz
sbb
orl
in
call
and
call
sti
mov
jge
mov
push
rcrl
les
addr16
es
loop
and
repz
cld
dec
push
xchg
insl
test
adcl
iret
aam
fldl
cmp
out
sbb
test
and
sub
int
sub
dec
insl
lea
jns
jmp
cmc
and
jb
or
fimull
push
int
lods
xor
loopne
mov
fstpt
aad
cmc
jb
add
in
sbb
outsb
mov
out
inc
mov
popf
cmp
mov
adc
lock
pop
loope
out
and
decl
xchg
or
pop
xlat
push
jo
bound
sbb
lcall
vpmuludq
ja
in
sbb
and
mov
dec
dec
and
xchg
mov
lret
xchg
sbb
sbb
push
imul
lret
push
pop
xlat
pusha
shrb
xor
and
jb
pop
mov
sub
pop
out
push
test
js
mov
vpaddb
cwtl
mov
pop
out
dec
pusha
mov
mov
test
inc
mov
cmp
xchg
fisubl
gs
test
lods
pushf
xchg
clc
mov
push
icebp
or
out
cmp
jae
and
jge
call
movsl
mov
xchg
test
out
adc
pop
cmpsb
pop
mov
movsb
out
lret
movsl
xchg
lods
and
add
add
sub
jecxz
and
xor
sbb
in
add
lock
push
jns
add
out
dec
icebp
cmp
mov
xchg
add
dec
jne
movsb
cltd
cmp
movsb
clc
lcall
xlat
xor
sub
fstpl
mov
clc
ret
sub
adc
mov
and
sbb
sti
scas
dec
ss
push
mov
fincstp
mov
out
adc
fwait
js
fs
jmp
leave
xlat
lcall
ret
jne
in
test
fcoms
fucomp
cmp
push
jmp
xor
mov
icebp
stos
in
pop
push
pop
shrb
adc
dec
mov
sti
decb
cmp
negb
mov
cmpsb
lds
jmp
sbb
ret
daa
dec
lret
and
stos
adc
push
xlat
lods
pop
add
shrb
mov
xor
lret
dec
lock
push
jecxz
mov
out
mov
push
imul
int
call
and
dec
pop
xchg
lcall
mov
pop
and
addr16
jmp
sub
in
into
pop
push
xchg
lret
xchg
xchg
movhps
sbb
int3
mov
iret
sarb
int
sbb
xor
enter
mov
ret
xchg
xor
std
cs
subl
rcll
push
and
call
add
movsb
inc
xchg
sbb
mov
mov
aas
lds
fildll
jae
sub
or
daa
int
mov
add
pushf
jnp
mov
das
stos
dec
inc
xchg
sti
adc
jb
out
xchg
out
ret
xor
ja
movsb
push
dec
popf
adc
inc
fmull
repz
mov
xorb
inc
mov
je
mov
adc
inc
insl
xchg
push
mov
stos
mov
cmp
push
push
xchg
pop
adc
add
push
jmp
sbb
addr16
popa
mov
add
or
fcmovnb
and
or
mov
sbb
mov
ds
pop
lock
dec
stos
pop
sti
xor
fcoms
lcall
repz
push
jmp
repz
addr16
jns
jb
idiv
jmp
adc
mov
pop
or
add
pusha
andb
jge
aaa
lahf
mov
mov
mov
arpl
fidivl
test
or
xor
cld
inc
loope
movsl
xchg
test
jle
sti
test
ja
add
movsl
inc
cwtl
test
daa
out
mov
or
ret
jg
push
test
int
inc
repz
sahf
or
push
out
xor
gs
rcll
test
subl
mov
in
lds
xor
cli
and
shll
jo
or
pop
push
std
shlb
xchg
add
mulb
xor
insb
dec
cmpsl
cmp
ficomps
addr16
jbe
pop
xor
in
push
push
adc
jno
fdivrl
or
roll
mov
or
sbb
idivb
gs
pop
jb
mov
aad
scas
pusha
jmp
pop
movsl
ljmp
mov
popa
aad
clc
cwtl
lret
mov
sbb
lods
mov
mov
cmc
fmulp
mov
movsl
repnz
ja
or
addb
mov
ret
cld
cltd
mov
jbe
inc
sub
add
roll
jmp
pop
push
mov
mov
outsb
pusha
cmpsl
xchg
sahf
cwtl
mov
nop
xlat
aas
pop
mov
int
add
sbb
fsts
mov
test
xor
nop
inc
lea
jns
adcb
inc
sbb
mov
fbstp
enter
jo
push
hlt
mov
xor
mov
lcall
add
test
sbb
sub
out
pusha
fidivl
mov
sbbb
loope
inc
out
std
test
les
jecxz
xlat
test
movsb
jno
stc
push
mov
or
test
popa
inc
mov
jmp
es
mov
xchg
pop
ljmp
cwtl
adc
sub
hlt
jle
xor
or
aas
cmp
or
insl
mov
or
mov
js
pxor
fadds
push
push
inc
ja
aaa
es
in
mov
pop
push
lea
sbb
cmpsb
in
pushf
sbb
fisubs
mov
xchg
add
dec
test
cld
mov
cwtl
pop
or
shll
test
xor
sub
sbb
sbb
mov
push
mov
js
xor
test
fisttpl
inc
sbb
push
jp
stos
jmp
push
pop
cmc
aam
add
rorl
pop
clc
dec
ds
popf
mov
les
xchg
sub
addr16
mov
in
add
xchg
dec
jmp
fcomip
or
push
cmp
mov
xlat
inc
jge
testl
mov
mov
inc
adc
push
or
ret
cmp
bound
sub
data16
lods
xchg
mov
lret
cmp
adc
scas
pop
hlt
rep
and
push
mov
fistpl
xor
cmp
or
xchg
insb
divb
call
cvtpi2ps
ja
sahf
mov
lret
fcomip
test
sub
adc
sub
and
sub
add
cmpsl
enter
test
leave
sub
mov
jnp
call
xchg
arpl
sbb
and
dec
xchg
loop
out
mov
arpl
push
add
pop
mov
jnp
in
cmpsl
ret
cmpsb
push
test
push
inc
add
sbb
jmp
dec
adc
mov
mov
xor
mov
mov
dec
push
push
loopne
sbb
adc
pop
mov
mov
fiaddl
stc
lds
dec
rorb
xchg
mov
cmp
outsl
jb
popa
add
repz
xor
jns
xor
cmpsl
cmp
xor
dec
inc
pop
sahf
pop
cmp
es
push
mov
fnstenv
std
scas
inc
pop
mulb
repnz
mov
xlat
rclb
push
push
xchg
testl
rcrb
xchg
hlt
gs
icebp
loop
ljmp
sarl
push
xlat
repz
and
cmpsb
push
push
imull
roll
ret
jo
mov
loope
cmp
jle
lret
call
jecxz
lcall
cmovnp
rcrl
out
mov
and
rorb
push
pop
movsb
xchg
dec
pop
xor
sbb
cmpsb
push
dec
shlb
jnp
iret
mov
lret
or
inc
aas
sbb
ja
or
sub
icebp
sahf
mov
pop
imul
mov
in
jb
inc
sub
sbb
fcmovbe
xor
mov
cltd
jb
aam
add
mov
rolb
cmp
test
nop
xchg
and
lahf
nop
xor
mov
sahf
cmp
pushf
mov
xchg
insl
jno
out
jae
and
pop
and
inc
repnz
push
mulb
mov
fisttpl
rcll
cltd
dec
pop
push
pop
add
nop
fimuls
adc
mov
test
fldcw
jmp
sub
insl
sub
lcall
or
mov
mov
jmp
out
aad
inc
push
ds
in
repnz
jmp
add
mov
iret
js
push
jae
sti
fsub
xchg
add
notb
inc
lret
sbb
les
push
jns
sbb
push
dec
adc
dec
dec
mov
and
ss
dec
cli
push
pop
pusha
add
ja
sub
mov
pop
notl
or
cld
pop
mov
je
push
xor
push
mov
inc
mov
rol
pop
dec
scas
movsb
inc
rorl
xchg
test
add
popa
mov
and
and
mov
mov
jmp
push
xor
push
inc
pop
pop
jns
in
ret
pop
push
fs
rorl
lahf
sub
mov
inc
aad
popa
sub
incl
hlt
sbbl
gs
mov
out
ss
rol
xchg
push
sub
xchg
popa
call
sbb
push
repz
shrl
inc
leave
adc
add
orl
fwait
sub
dec
or
inc
outsb
xchg
addr16
push
shr
lods
in
pop
inc
rorl
or
arpl
aad
lcall
sahf
sbb
iret
mov
jge
cmp
and
xchg
pop
pop
xor
lret
jae
xchg
push
int3
loop
roll
movsl
mov
xor
int
sti
mov
jle
mov
scas
sti
lods
lods
mov
clc
leave
jb
mov
and
pop
push
ljmp
sarl
lock
dec
inc
xchg
int3
fstl
inc
dec
and
add
sub
xor
aas
test
jae
dec
sti
mov
loope
push
mov
fmul
lret
pop
mov
mov
outsb
push
enter
and
jecxz
in
xchg
mov
cwtl
pop
pop
div
mov
or
adc
mov
inc
xor
cmp
pop
sbb
jns
mov
sbbb
ret
push
bound
or
fsubs
push
push
icebp
fwait
cld
sbb
xchg
lcall
dec
ret
mov
add
sub
mov
or
aad
out
pushl
cmp
cmp
mov
pushf
and
test
addr16
mov
fisttpl
sbb
out
and
adc
xor
mov
push
in
mov
out
push
push
je
inc
add
nop
insb
out
js
adc
sub
sbb
mov
fcoml
xchg
mov
scas
jns
les
xchg
ds
cld
xchg
or
xchg
mov
lods
daa
in
adc
fcmovu
aaa
cmp
mov
or
popf
jbe
xchg
fwait
fidivs
fcmovne
outsb
lahf
sbb
adc
or
fstpl
stc
aam
sub
ficompl
mov
arpl
lock
pushf
js
int
mov
out
cmp
jne
inc
jnp
xchg
adc
pop
das
call
sbb
je
and
cwtl
loop
pop
movsb
push
mov
sti
push
cmp
or
mov
inc
xchg
test
cmp
mov
scas
int3
cli
or
jge
test
or
xor
mov
icebp
push
xchg
cwtl
mov
cmp
sub
mov
aam
mov
mov
leave
pandn
or
inc
out
in
dec
or
and
test
jmp
testb
mov
std
mov
test
xchg
jp
sub
int3
mov
in
rdtsc
pop
or
inc
mov
int
les
cli
pushf
shll
out
out
xor
dec
stos
add
rorl
lock
sbb
test
out
and
xchg
inc
out
pop
mov
adc
cmpsl
dec
cltd
pop
jnp
cmp
jle
popa
adc
pop
pop
lds
push
gs
sub
bound
lods
xor
stos
js
inc
or
cwtl
or
sub
into
adc
or
jg
inc
inc
mov
xchg
adcl
push
cmp
out
aam
adcl
mov
push
dec
out
add
pop
adc
cltd
fisttpll
cmp
in
inc
mov
xchg
imul
jl
test
cltd
add
jbe
shll
sbbl
mov
mov
mov
mov
jne
jnp
lods
mov
mov
xor
movsl
insb
pop
in
sub
sbb
lods
mov
push
int
push
aad
psraw
pop
sub
shll
lret
push
ret
sahf
mov
repnz
jle
sti
sbb
mov
mov
pop
mov
xor
pop
or
push
lods
mov
sub
or
ja
lret
xchg
jnp
push
into
in
jne
mov
lret
mov
xor
xchg
mov
xorb
clc
cltd
jb
jl
std
mov
cld
inc
pop
les
cmpsl
call
fs
call
or
pop
rorl
xchg
outsb
out
cmp
hlt
sub
out
fwait
inc
xchg
inc
inc
lret
test
clc
mov
ret
test
dec
lcall
aas
ret
ds
inc
mov
sar
jp
ja
push
xor
loope
jge
bound
mov
add
push
sarb
sti
cld
xorl
push
in
and
jecxz
inc
negl
ficomps
xor
in
outsl
int
push
jnp
cmp
bound
push
dec
sbb
shlb
fcmovnbe
js
or
cld
mov
xor
ljmp
fisubs
or
loope
sub
adc
xor
mov
cmpsb
xor
cmpsl
cwtl
aam
xchg
mov
xor
fcoml
pop
mov
mov
push
out
mov
push
lcall
movsl
movsb
repnz
orb
inc
aaa
ljmp
mov
jno
shll
pop
dec
push
xor
push
sub
push
loope
in
or
xchg
pop
enter
popf
bound
pop
scas
aad
in
cmpsb
jo
and
fisttpll
sub
inc
into
mov
sahf
lods
movsl
ret
jno
cs
mov
inc
mov
lods
loop
divb
push
xor
sbb
cltd
mov
xchg
insb
sahf
cmp
test
add
sub
mov
mov
jbe
mov
lock
mov
aaa
xor
sbb
sub
add
fsts
fcmovne
push
mov
fisubrs
sub
out
add
inc
sbb
pop
sti
mov
push
les
mov
daa
packssdw
addb
jle
or
sub
mov
mov
lods
adcl
sub
test
popf
sbb
std
ficoms
jp
test
mov
outsb
in
rcll
ret
sbb
push
jg
jno
mov
fstl
adc
mov
sub
sbb
pop
mov
sbb
jbe
dec
js
mov
testb
add
push
imul
jl
dec
je
and
inc
sbb
mov
aam
fcmovnb
sub
in
cli
xor
and
je
sbb
mov
cmpb
xor
adc
add
shll
les
and
or
cmpsl
and
push
pop
add
ds
or
sub
jb
add
sub
adc
inc
inc
xchg
in
mov
jno
xor
adc
shr
stos
or
in
xchg
xchg
daa
inc
stos
and
adc
jbe
mov
xchg
fsubl
mov
mov
nop
std
cld
gs
int3
ja
mov
mov
xor
enter
sbb
adcl
push
add
sti
notb
cmpb
subl
dec
lods
cmp
cmpsl
mov
ret
out
mov
pushf
mov
lret
jecxz
jae
outsb
loopne
jnp
inc
loop
mov
mov
inc
xchg
xor
ficoms
cmp
fisttpll
pop
cmp
popf
in
xor
cs
inc
dec
je
fbld
sbb
mov
add
stc
mov
cmp
repnz
mov
gs
inc
test
dec
inc
pop
es
xchg
imul
xchg
sub
outsb
ficompl
add
ss
js
movsb
ds
xchg
pop
cmc
xchg
jnp
addb
cmp
rcr
test
pop
push
xchg
daa
jb
popa
push
sub
push
adc
mov
xchg
fisubrs
and
adc
push
push
mov
ret
std
out
aad
outsb
lahf
mov
add
jbe,pn
dec
in
add
iret
ss
jp
icebp
insb
movsb
mov
mov
jge
test
inc
add
stc
lahf
fists
sub
cmc
xchg
inc
mov
jbe
mov
ret
pop
incb
add
cmp
mov
dec
cwtl
in
jb
push
inc
mov
xchg
adc
das
pushf
pop
fnsave
jno
mov
mov
jno
repz
test
cwtl
int3
aaa
inc
cmpsb
jbe
imul
mov
addl
mov
dec
aaa
insb
mov
stos
push
subl
iret
mov
rolb
sahf
push
add
add
pop
fwait
mov
pusha
lahf
nop
xchg
nop
lods
ss
or
pop
and
adc
pop
sbb
sbb
ret
daa
push
out
popa
jne
push
dec
xor
add
aas
enter
and
mov
aas
andb
dec
movsl
pop
faddl
add
fisttps
push
filds
dec
mov
and
cmp
xchg
pop
mov
lahf
lret
jo
mov
cli
add
fbstp
inc
repz
or
jb
icebp
fstpt
stos
adc
pop
repnz
sbb
add
cmp
push
ja
jmp
jmp
mov
scas
faddl
add
outsl
test
push
push
or
and
cmp
test
lods
sub
jle
inc
mov
fdivr
andb
dec
fisttpl
das
cmp
loop
in
bound
into
push
scas
ret
cmpsl
and
jl
mov
js
add
or
sub
xchg
loope
pop
aad
test
inc
mov
xchg
pop
xchg
scas
int
int3
and
mov
lcall
in
xchg
pop
fcmovbe
into
mov
push
inc
inc
sub
ds
mov
mov
sbb
in
or
lcall
xchg
push
xchg
mov
inc
xchg
pop
frstor
inc
or
testb
push
fmull
test
js
xchg
pop
clc
sbb
std
jne
and
sbb
sti
inc
sahf
ljmp
addl
fsubr
mov
es
int
clts
jmp
lret
daa
imul
pop
shl
fnstenv
das
stos
test
pavgb
stc
out
dec
rcrb
pusha
dec
jno
hlt
and
out
les
pop
pusha
lahf
sbb
sub
in
mov
sub
pop
cmp
out
cli
xor
mov
dec
sub
aam
enter
mov
jne
and
adc
mov
notb
add
push
das
mov
and
mov
push
mov
das
inc
mov
dec
loopne
ljmp
mov
xchg
pop
jmp
pop
push
mov
ds
mov
pusha
jbe
push
mov
xchg
xchg
or
ficoml
mov
sub
add
adc
inc
out
dec
mov
rolb
lcall
mov
add
dec
testl
push
or
call
sub
addb
cmp
aam
mov
xchg
rcrb
jae
insb
dec
adc
cmc
adc
negb
push
add
data16
push
adc
out
pop
fcomps
loope
ret
ss
jle
mov
jle
add
xchg
decb
xor
repnz
fistpll
pop
xchg
call
loope
pop
test
jecxz
testl
fidivrs
sbb
jnp
pop
ret
out
mov
int3
xor
inc
mov
aaa
lret
icebp
mov
and
pop
xor
xor
sub
shlb
pop
dec
es
clc
ret
test
outsb
fisubl
and
rorb
test
inc
push
and
inc
sub
mov
fildll
nop
iret
imull
pop
sub
leave
bound
test
cmpsl
pop
ds
add
push
mov
mov
or
xor
mov
mov
in
jecxz
mov
jecxz
fstps
insb
push
pop
fs
xchg
fcomps
jecxz
pop
mov
mov
out
test
cmp
add
inc
iret
cmpsl
sbb
inc
pop
sbb
addb
jbe
mov
adc
sub
cmp
push
push
sbb
sub
dec
and
shrl
addr16
aaa
incl
pop
les
js
fcomps
xor
sbb
in
sbb
pop
and
les
xchg
cmp
nop
adc
xchg
push
sbb
add
es
lods
in
pop
arpl
imul
xor
xchg
fildl
test
fistl
xchg
ss
icebp
ret
dec
dec
inc
imul
mov
out
sahf
movsl
cmp
out
rcrb
pop
lods
pop
shrb
push
inc
rep
clc
roll
stc
push
mov
ret
ja
sub
popaw
mov
enter
pusha
pop
push
push
xor
ret
and
add
ljmp
inc
dec
dec
mov
xor
pop
lret
lret
in
or
dec
shll
shl
cmpsl
sbbb
addr16
bound
push
pop
das
shlb
sub
inc
imul
stos
sbb
sub
fmulp
add
jle
mov
das
outsl
jmp
cmp
imul
xchg
add
cs
jecxz
ljmp
mov
pop
jo
xor
punpckhbw
add
push
fdivrl
loope
cld
ret
imul
les
add
xchg
nop
jge
sbb
outsl
inc
add
xor
pop
sub
push
cs
clc
les
mov
push
dec
push
mov
push
pop
xor
out
ljmp
add
inc
in
or
enter
clc
ret
cli
jge
push
lret
or
into
out
mov
out
ja
je
and
dec
jge
mov
mov
jbe
imul
in
insb
push
or
stc
push
xchg
jmp
scas
xchg
jmp
or
and
push
fidivl
mov
xchg
insb
push
rcl
mov
bound
inc
mov
cwtl
pop
les
stos
push
push
rcrb
aas
std
lret
mov
add
fsubrl
pop
ljmp
pop
and
sub
dec
repz
test
ss
repnz
notrack
fsubr
inc
pop
push
xchg
scas
sub
push
inc
adc
add
mov
aad
lds
jl
in
pop
jbe
arpl
dec
lcall
fistl
in
xor
fistl
sbb
cwtl
xor
xchg
stc
lahf
mov
fcmovnb
sbb
mov
fwait
mov
ja
xchg
es
pop
imul
repnz
xchg
imul
testl
dec
sahf
loopne
and
push
sti
jmp
inc
mov
xor
and
add
xchg
jns
lods
sub
mov
out
aam
mov
pop
testb
pop
push
jmp
ret
int
lret
call
pop
xor
cwtl
fldt
hlt
fildl
insb
push
sub
enter
pop
pusha
ret
mov
adc
data16
loop
sub
lret
leave
aad
adc
int3
and
loop
adc
and
jns
adc
js
jp
sub
sbb
mov
xchg
rcll
add
subl
pop
push
lods
mov
inc
decb
pusha
mov
mov
cmp
jne
inc
hlt
pop
lods
repz
adc
push
sahf
adc
lret
jnp
lods
jmp
push
icebp
dec
das
dec
inc
dec
mov
je
mov
and
movsl
gs
xor
dec
mov
lock
inc
xor
repnz
cmp
inc
jno
pop
push
subl
mov
xchg
pusha
lods
lods
dec
outsb
mov
sbb
lds
negb
adc
outsl
ja
loop
jp
inc
cmpsl
pop
cltd
cmpsb
cmc
out
jge
mov
aad
mov
bound
fcomps
lods
lahf
push
pop
outsl
inc
pop
push
repz
aam
fsts
cmp
outsl
sub
das
adc
sbb
mov
call
es
mov
dec
jo
dec
push
add
pop
lret
sub
fiadds
mov
pop
aas
ds
inc
leave
loopne
test
xchg
ss
adc
sbb
mov
jg
mov
push
push
dec
cmp
inc
mov
mov
push
insb
mov
pop
sarb
mov
mov
repz
inc
stos
test
mov
ja
cmp
add
leave
mov
xor
sbb
push
sbb
mov
sbbb
mov
push
mov
lods
test
cs
fwait
mov
sbb
inc
mov
pop
jmp
movsb
test
in
and
scas
es
mov
and
test
in
dec
or
mov
sub
adc
addr16
imul
add
jae
dec
data16
fs
aas
les
sub
iret
mov
pop
push
stc
sti
add
fildll
jg
cmpsb
or
xchg
push
mov
sbb
pop
xor
subb
adc
fabs
jne
mov
test
cmpsl
add
xor
in
mov
push
arpl
pushf
test
in
shr
xchg
jmp
xchg
repnz
mov
in
cmpsl
add
out
push
cmp
push
mov
out
in
xchg
ds
push
or
mov
rcrb
in
or
in
push
push
push
adc
fistps
stos
popa
jle
in
inc
mov
sub
sub
test
xchg
cmpl
mov
and
out
jge
lds
imul
sbb
aad
adc
push
arpl
pop
stc
lods
outsb
cli
rcrb
daa
pop
lock
push
int
mov
mov
rclb
pop
mov
mov
push
mov
sub
aad
cmp
add
jp
cli
js
ja
arpl
loop
jle
das
imul
jb
xchg
dec
inc
ret
mov
das
sbbb
sub
test
inc
fbld
bound
or
mov
xchg
pop
jge
popf
dec
inc
adc
imul
inc
shlb
mov
repz
insb
pop
addr16
xchg
pop
mov
stos
hlt
pop
in
adc
out
mov
mov
test
cmp
pop
insb
out
mov
jg
mov
pop
aaa
outsl
out
dec
sub
adc
movsl
mov
jmp
pop
leave
insb
dec
in
inc
dec
cmpsb
and
or
mov
jne
lods
xor
je
mov
in
cmpsb
movb
fistpl
ja
xor
mov
rcll
fisubs
push
dec
popf
push
push
xchg
sub
je
pop
scas
movsb
sub
cli
pop
and
rorb
sub
hlt
test
mov
sub
rol
jb
jb
pushf
dec
pop
leave
fldt
arpl
je
cmp
push
mov
test
in
loopne
mov
pop
jge
inc
andl
mov
dec
cmpsl
sub
and
inc
sbb
cs
sub
imul
push
call
inc
push
mov
xor
add
mov
mov
andl
sbbl
inc
das
ror
jle
inc
push
rclb
repnz
jp
stos
shll
in
popl
or
adc
and
sub
add
movsl
mov
mov
ljmp
cmp
fnstenv
adc
pop
push
jmp
sbb
push
scas
xor
call
into
fdiv
mov
orb
popf
mov
push
xlat
sub
jns
lods
pushf
xchg
test
adc
push
es
lds
lea
sbb
rcl
mov
inc
stos
das
xor
scas
ljmp
lahf
mov
dec
repnz
adc
pop
inc
nop
int3
add
or
out
add
and
daa
orl
xchg
adc
stc
cmp
sbb
push
push
jne
add
std
mov
rcr
mov
mov
mov
ja
pop
gs
lahf
sti
movsb
clc
ljmp
and
data16
shr
ljmp
ljmp
out
or
push
lahf
and
fs
push
test
les
sub
lret
mov
mov
xor
mov
adc
out
and
xchg
adc
sbb
pop
sub
jnp
roll
mov
pusha
dec
sahf
lret
aad
cmp
and
je
stos
or
push
push
mov
or
mov
negb
xor
fbstp
lret
daa
xchg
imul
enter
clc
mov
shll
sbb
movb
test
cmp
push
and
xchg
lcall
xorl
add
ss
out
inc
call
dec
fidivl
sbb
sbb
add
popf
shl
cwtl
or
and
pop
fisubs
xchg
inc
nop
xor
dec
or
outsb
or
push
out
in
add
sbb
shl
popf
cwtl
add
or
mov
push
dec
jo
shlb
outsb
pop
cwtl
les
jns
push
in
fs
mov
or
jecxz
fistpl
andl
divl
pushf
pushf
cli
and
ret
and
mov
shll
in
sar
push
lods
fadds
cli
xchg
pop
stos
xor
jp
mov
jae
pop
dec
mov
outsl
lret
lret
add
mov
push
mov
adc
push
out
popf
jnp
and
mov
xlat
in
xchg
xchg
adc
lcall
movsl
nop
aaa
cmp
fisttpl
arpl
arpl
ror
bound
call
mov
lods
jnp
clc
add
cmc
sub
dec
mov
or
sbb
pop
bound
rorl
pop
cmpsb
cwtl
sub
adc
popf
adc
popf
pop
call
fiaddl
or
adc
sub
int
mov
sub
imul
push
jge
jns
outsb
jns
jae
adc
cmp
mov
inc
es
movsl
cmp
dec
add
daa
xchg
addl
jmp
int
loopne
mov
cmc
mov
mov
pop
cld
sbb
adc
cli
adc
dec
int3
and
std
out
jo
in
stos
mov
fnstsw
push
xchg
pop
xor
pop
push
mov
insl
cmp
scas
pop
pop
xchg
xchg
and
shlb
sub
scas
or
adc
mov
adc
rcrl
dec
cmc
fdivrp
add
cmc
and
push
fs
and
mov
mov
addr16
mov
addl
add
adc
add
xor
out
ret
sar
jp
lock
test
scas
jae
orl
leave
into
push
negl
scas
aas
mov
push
repnz
inc
sbb
iret
out
pop
aas
dec
into
clc
shlb
test
dec
xchg
add
shll
and
jns
insb
push
xor
or
mov
xor
add
lcall
and
mov
gs
xor
pop
pop
add
lcall
mov
push
or
push
xchg
cmp
inc
das
gs
cltd
xor
fmulp
fdivl
and
loope
mov
int3
in
cmp
xchg
mov
inc
ret
in
cwtl
lahf
pop
pop
data16
push
push
adc
cmp
inc
rol
cmc
fwait
std
fstpl
push
ja
and
aas
mov
mov
es
pop
fbstp
dec
lods
mov
push
mov
testb
push
pop
and
out
psubq
and
mov
xor
adc
inc
push
movsl
mov
push
push
push
cltd
sahf
roll
mov
aam
insl
jbe
ljmp
xor
jmp
and
sub
or
adc
andl
xchg
fstpl
fs
mov
das
sub
test
lcall
mov
cmp
lds
add
aas
je
dec
dec
aam
push
fistl
stos
cmp
lcall
cmp
je
inc
push
add
add
insl
lods
fsubl
inc
push
and
sbb
xchg
cmpsl
cmp
popf
mov
mov
int
jge
xchg
add
pop
fiadds
inc
cli
insb
sub
sbb
ficoms
mov
push
iret
sbb
mov
jb
adc
rcr
pusha
or
xchg
mov
xchg
rorl
sahf
push
aad
out
clc
push
mov
mov
fisubl
sti
cmc
divl
adc
jns
adc
adc
xor
pop
fisubl
sbb
ficoms
inc
mov
xchg
mov
pop
test
mov
stos
xor
adc
test
cmp
and
iret
or
nop
loop
scas
outsl
mov
cli
aam
fdivl
out
rorb
push
adc
mov
xchg
int
push
sbb
mov
popf
mov
adc
xchg
mov
movb
mov
pop
mov
jl
pop
lds
push
cs
loopne
add
ss
in
pop
sti
lcall
std
stos
push
pop
cld
cltd
jl
dec
jnp,pt
and
jne
push
sbb
ja
lds
idivl
fadds
popa
lds
adc
inc
int
mov
xchg
mov
mov
in
jl
out
mov
xchg
arpl
or
xchg
aas
xlat
fwait
dec
outsb
cmp
push
push
xlat
call
dec
nop
outsb
out
mov
push
leave
inc
stc
push
mov
add
pop
cmp
popf
daa
lahf
add
daa
jbe
cmpl
jl
sub
dec
jg
add
push
insl
push
and
sti
adc
or
mov
mov
outsb
mov
fnstcw
cwtl
movsb
jno
jae
mov
xlat
xchg
fwait
mov
stc
rcl
scas
daa
loope
test
push
jl
mov
push
mov
fisttps
sbb
test
pop
lea
aam
jno
push
rolb
jb
ss
mov
lcall
std
jp
cwtl
pop
or
dec
lea
jnp
add
xor
mov
mov
out
popf
adcl
jmp
jnp
add
adc
pop
mov
cld
mov
test
jp
pop
enter
sub
mov
nop
mov
mov
inc
xchg
je
add
loop
repz
mov
int3
fimuls
sbb
push
scas
fsts
fwait
sahf
fwait
cmp
sbb
mov
test
jmp
dec
call
aaa
sahf
dec
cmpsb
mov
pop
mov
mov
test
push
aad
les
xlat
lret
and
bound
lcall
inc
push
jmp
mov
insb
out
ret
cmpsb
ja
or
mov
or
scas
es
loop
add
dec
popf
jp
movsl
pop
push
leave
xor
repz
inc
add
repnz
pusha
mov
out
cmpsb
xchg
pop
fldt
mov
dec
mov
push
fstpt
xchg
fimull
fnstenv
out
cmp
sbb
sub
scas
push
jmp
sarb
fstp
and
fs
popa
jnp
int3
inc
sbb
fbstp
les
inc
sub
xor
mov
push
jbe
and
psadbw
xor
jae
pop
mov
stos
sub
inc
rep
repz
push
xchg
loopne
xor
xchg
pop
or
dec
mov
shll
xor
cmp
loopne
jnp
sub
movsb
mov
jmp
pop
and
stos
ljmp
js
lds
stos
mov
int
xorb
movsl
andb
sub
ror
and
xchg
push
in
jae
aaa
fwait
in
push
aam
xor
mov
push
rcr
shrb
mov
jne
lods
adc
leave
mov
pop
icebp
test
adc
mov
dec
fmuls
pop
dec
das
sarl
mov
cmp
mov
jno
jge
inc
jns
mov
hlt
out
xchg
je
add
push
pop
dec
popa
data16
cs
popf
mov
mov
fidivl
test
lcall
lcall
sar
sbb
jnp
mov
outsl
sbb
pop
fldl
ficoms
adc
into
idivb
stc
fldcw
add
sub
dec
push
loop
sahf
adc
xchg
ljmp
in
scas
ss
in
adcb
pop
add
addb
adc
sub
sub
jmp
or
imul
mov
popf
test
enter
pop
push
jns
mov
dec
push
call
insl
sbbl
out
sti
xor
hlt
xchg
pop
push
xor
ret
cmp
imull
test
stc
add
and
fimuls
push
xor
mul
fstps
in
test
in
push
push
jmp
js
sbb
test
addr16
aam
out
add
or
ret
std
aaa
dec
cwtl
xlat
les
mov
push
or
leave
jg
nop
jp
pop
rorl
push
push
aas
rcll
lock
jecxz
add
fwait
out
inc
jecxz
mov
repz
mov
xor
jecxz
adcb
mov
pop
bound
and
sub
cmp
mov
dec
lahf
sbb
add
xor
rorl
out
sub
repz
cmp
jns
cmpsb
in
cmp
jae
or
xchg
mov
xchg
loop
or
add
dec
inc
fnstsw
daa
push
inc
popa
pop
or
cmp
rcl
insb
pop
jmp
mov
pop
mov
out
xor
insb
cmpsb
mov
cmp
ffreep
jns
jg
push
outsb
insb
out
int3
mov
mov
sub
testb
out
cmp
pop
adc
mov
push
lods
mov
dec
sbb
outsb
push
jge
cmp
addr16
mov
lods
xor
xchg
push
mov
pop
mulb
dec
shll
mov
inc
add
sbb
mov
xchg
stos
cltd
sub
les
repnz
sbb
add
ss
cmp
and
addr16
clc
adc
mov
cmp
and
hlt
dec
js
and
add
sti
mov
rcl
fcompl
cmc
out
pop
mull
movsl
pop
test
pop
pop
ret
addr16
ret
dec
or
lods
sbb
sbb
popa
je
xchg
cmp
adc
inc
mov
mov
pop
ss
dec
insl
xchg
sti
scas
scas
cmp
jnp
pusha
rcl
ret
push
jne
cmp
in
inc
call
inc
popa
test
xchg
mov
push
les
dec
shrb
cmpb
mov
push
addr16
mov
adc
outsl
insl
xchg
mov
add
push
mov
cwtl
mov
arpl
sbb
mov
hlt
outsb
enter
mov
fcompl
out
test
xor
jnp
and
xchg
loopne
mov
mov
add
popa
xor
jge
js
and
xor
push
and
ss
js
test
addr16
and
inc
push
jecxz
add
inc
jbe
leave
popa
shlb
mov
mov
cmpsb
inc
scas
outsl
lcall
pop
mov
push
dec
pop
inc
and
or
jl
mov
sbb
imul
dec
hlt
or
inc
roll
into
xchg
pop
lret
dec
mov
push
int3
fwait
mov
std
das
sub
sub
mov
arpl
pop
stos
xlat
sahf
loopne
insl
jo
lret
and
push
mov
cli
nop
arpl
notl
movsl
jne
data16
test
jmp
xchg
add
mov
pop
insb
popa
push
push
mov
rcrl
inc
mov
push
rorl
shll
nop
mul
xchg
mov
nop
sarl
cmp
and
lods
orl
repz
mov
or
mov
std
mov
pop
cmpsb
and
mov
into
pop
jns
mov
insl
es
sub
cld
inc
imul
mov
les
mov
mov
int3
push
dec
mov
lock
je
push
pop
es
pop
xchg
jl
xchg
mov
mov
and
stc
leave
xchg
cmpsl
adc
in
push
inc
aas
xor
add
inc
shl
or
addr16
ror
push
prefetchw
out
mov
jae
jecxz
cmp
aam
cmpsl
int
rorl
mov
add
jmp
ja
cmpsb
jns
mov
sbb
testb
sbb
subl
pop
repz
push
fadds
sub
push
fmuls
aaa
aas
fsubs
xchg
outsl
push
push
xor
mov
nop
addr16
xor
rolb
mov
mov
loopne
mov
in
mov
adc
std
and
jnp
out
in
pop
stos
adc
xchg
cmp
push
mov
mov
cmc
lock
fsubp
in
mov
xchg
jl,pn
sbb
jmp
enter
stc
cmp
into
push
lahf
jecxz
je
bound
sub
and
push
pop
mov
xchg
mov
ret
cmpsl
push
jecxz
xor
add
rorl
xor
lea
jl
jmp
sbb
dec
in
xchg
ret
mov
leave
std
rclb
jb
xchg
xchg
sbb
adc
xchg
ljmp
aad
inc
xor
mov
cwtl
inc
sbb
and
cmp
xchg
and
pop
push
and
andb
cmpsb
rorb
test
and
fs
pop
decl
xchg
xchg
pop
out
bound
sti
ds
popl
sarb
imul
sbb
jg
dec
mov
inc
mov
xor
dec
cmpsb
jo
stc
ret
ds
xor
push
scas
jge
xchg
in
fstpt
into
mov
dec
arpl
sti
std
adc
mov
sbb
pop
outsl
add
lret
mov
scas
fisttps
pop
and
pop
xchg
and
cmp
xchg
jp
dec
inc
and
out
bound
add
jge
inc
loopne
push
mov
mov
xchg
or
shl
push
fwait
mov
in
fs
lds
adc
mov
add
mov
and
sub
aam
cmp
sbb
mov
sub
loope
mov
scas
jnp
dec
jl
imul
dec
mov
inc
push
pop
xchg
mov
sbb
pop
dec
fwait
mov
xor
sbb
or
adc
scas
int3
call
sbb
mov
ljmp
jl
in
pop
cmp
sub
cltd
fwait
push
xor
or
dec
xchg
and
mov
mov
test
addl
notb
iret
sbb
sub
sub
jecxz
cltd
jae
dec
negb
push
sbb
out
add
out
push
mov
leave
xor
sti
inc
and
mov
fists
xchg
add
inc
lahf
sub
add
testb
out
movsl
jne
push
xor
sbb
mov
je
xor
shlb
push
sahf
jno
fdivrl
sub
aas
pop
dec
movsb
lods
inc
sbbl
jecxz
in
int3
pop
mov
out
sti
and
adc
daa
icebp
pop
inc
sbb
cld
fisttpl
cwtl
adc
push
push
jnp
cmp
mov
xorb
or
movsl
mov
out
jge
and
ss
or
rorb
mov
lahf
cmp
out
or
sbb
daa
jp
mov
jae
pop
test
enter
pop
sbb
sbb
cmp
xchg
xlat
and
test
shr
daa
push
mov
out
test
lcall
js
push
push
popf
pop
xchg
mov
push
add
or
push
cs
mov
dec
orb
mov
jo
jp
inc
push
mov
xor
inc
push
sti
fbstp
sahf
jp
adc
sub
adc
ds
push
insl
xor
xchg
sbbl
rclb
add
mov
ret
in
int
aaa
les
push
cmp
or
test
or
ret
pop
adc
inc
mov
mov
enter
insl
xchg
int
pop
or
cltd
jbe
fisubrl
outsb
cmpsb
int3
sub
divl
jge
add
inc
xchg
into
sub
das
push
fisubrs
mov
push
jmp
repnz
add
or
add
out
cmpsb
add
mov
pushf
pushf
lea
shlb
push
test
out
shlb
ljmp
mov
xorl
movsl
mov
mov
loopne
leave
lods
push
pop
jge
inc
cmc
cmp
mov
stos
xchg
arpl
dec
cli
xor
arpl
or
and
and
jbe
pop
shl
movsb
shrl
les
ret
pop
sub
decl
mov
scas
push
add
cmp
xchg
dec
insb
fnsave
cmpsb
fwait
xor
push
test
xor
xlat
lock
adc
mov
pop
add
mov
aad
fists
and
pop
aad
push
xchg
repz
or
pop
ja
fdiv
sub
sbb
jmp
ret
enter
xor
lret
push
stc
jg
in
repz
jbe
ret
mov
sti
mov
das
cs
pop
push
adc
stos
xor
mov
loope
mov
jb
cmpb
clc
jo
jbe
xchg
roll
shll
ficomps
adc
add
bound
leave
adc
fnsetpm(287
sub
jbe
sub
pop
into
mov
jno
sti
mov
insb
add
mov
adc
arpl
mov
outsl
or
adc
cltd
jp
nop
mov
pop
loop,pt
or
insb
and
xorl
jp
jge
cmp
andb
push
insb
mov
ss
cwtl
dec
xchg
pop
cmp
insb
jecxz
push
sub
movsl
lret
in
xlat
insb
sbb
xchg
xchg
pop
out
lret
cmpsl
dec
aad
push
pop
jp
je
aaa
in
xchg
mov
or
shrb
xlat
in
andb
aaa
xor
negb
xchg
mov
push
lret
enter
sbb
insl
push
push
shll
xchg
dec
sbbb
arpl
xor
das
outsl
dec
mov
rcrl
aam
and
lods
sub
push
aas
dec
int
and
inc
mov
cld
mov
hlt
mov
add
sbb
std
stos
jne
fldl
push
or
lcall
and
mov
idivb
popa
mov
stos
ss
mov
in
push
pop
pop
sbb
xchg
lahf
jno
mov
inc
and
ljmp
xchg
lods
add
je
cmpsl
shrl
push
std
push
xchg
fimull
mov
and
gs
xchg
aam
aaa
xchg
loopne
pushf
int
push
sarl
ja
xchg
in
es
jg
repz
imul
xchg
ret
push
cli
iret
push
lea
sub
sbb
pop
sahf
into
ljmp
add
out
outsl
iret
push
pop
inc
pusha
inc
dec
sbb
push
inc
sti
in
jge
sub
int
inc
inc
mov
mov
add
sbb
pop
outsl
test
mov
cmp
addr16
pusha
mov
inc
mov
sub
inc
adc
pop
sub
inc
outsb
fcmovb
cli
cmp
fstps
iret
pop
fiadds
jnp
adc
imul
sub
adc
shl
mov
xor
mov
stos
mov
pop
clc
insl
les
mov
push
mov
or
fwait
fwait
shl
sub
inc
gs
push
pop
scas
add
jb
rolb
mov
icebp
into
icebp
jno
push
fsubrp
sahf
imul
jns
add
push
arpl
jo
imull
push
pop
jns
rcl
jns
mov
aaa
pop
push
cmc
or
lret
lds
xlat
ljmp
mov
xchg
dec
lret
pop
fadd
ret
or
inc
mov
das
int3
lds
ficoms
jae
test
call
push
adc
lods
iret
add
sbb
mov
jnp
repnz
cmpsl
push
pop
xchg
or
pop
xor
adc
ret
add
jne
negb
test
xchg
popa
stos
enter
outsb
mov
jl
pusha
popf
adc
fnstcw
in
push
pop
inc
loopne
sbb
sbb
out
std
lcall
std
add
and
cwtl
js
or
out
inc
pop
sbb
sarb
cmpsb
push
repz
cmp
pop
dec
loope
push
jl
pop
sti
or
jo
fimuls
in
xor
shrb
shlb
movsl
jmp
push
test
push
push
jbe
jno
lahf
imul
movsb
dec
and
xor
les
xlat
cmp
loope
cltd
icebp
sti
pop
mov
cltd
loop
test
mov
adc
cmp
fs
sub
cltd
cwtl
pop
cltd
lock
aam
stc
bound
mov
sub
jo
popa
int
sbb
pop
add
fmuls
xlat
sub
cwtl
lock
insb
jae
or
adc
add
testb
sub
xchg
sbbb
xchg
adc
mov
cmpsb
mov
or
dec
mov
loope
aaa
adc
jmp
dec
sub
mov
icebp
outsb
stos
lahf
push
mov
imul
dec
pop
lea
stc
sub
pop
push
mov
bswap
ljmp
ljmp
cmp
jae
ljmp
push
imul
push
fistpl
or
stos
xor
xorl
outsl
in
in
jnp
nop
iret
popf
sahf
inc
outsb
mov
jmp
cmp
nop
xchg
arpl
push
dec
sub
jmp
dec
mov
add
push
mov
int
fiaddl
add
xor
cld
jae
repnz
mov
in
adc
or
adc
lods
aaa
xor
sbb
movsl
xchg
inc
sahf
xor
jb
and
lret
daa
mov
aaa
sbbl
dec
ss
clc
add
stc
iret
or
cmp
mov
push
push
sahf
xchg
popf
push
popa
fidivrs
cmpsb
stos
scas
jae
add
divb
lock
jnp
or
fisttpll
test
in
testl
jp
mov
push
jmp
push
xor
add
jp
jp
int3
or
inc
mov
outsl
sti
lret
xchg
sub
push
push
mov
cmpsl
cmc
mov
test
jb
push
lods
nop
push
adc
popa
das
in
ss
jl
cli
mov
sub
push
dec
aad
jns
iret
mov
push
adc
mov
mov
je
out
xchg
mov
imul
outsb
mov
das
rorb
insl
and
add
push
test
or
push
pop
xchg
xor
ss
jno
mov
xchg
pop
repnz
es
out
insl
xor
cmc
mov
hlt
push
out
jo
sub
inc
mov
or
xrelease
pusha
inc
sahf
add
add
test
mov
push
jp
out
das
mov
outsl
lret
adc
popa
and
fidivrl
mov
loope
add
lret
mov
data16
xor
div
xchg
notb
mov
adc
adc
xlat
jns
pushf
sub
ljmp
sete
mov
ljmp
inc
add
mov
cmp
and
aaa
cltd
lods
in
mov
push
int
mov
insl
insb
cs
xchg
test
sub
js
jne
cmp
pushf
test
in
jb
sub
or
insl
xlat
call
mov
nop
or
cmp
mov
aam
in
sub
sub
sub
sbb
insb
fidivrl
sub
push
push
ljmp
push
icebp
rolb
mov
mov
adc
negl
shrl
bsf
loope
and
hlt
push
mov
push
inc
cmp
jbe
clc
movsl
out
fcomp
dec
mov
or
and
fistpl
mov
add
mov
mov
mov
add
andb
lock
clc
fmulp
nop
test
fsubrs
xor
mov
in
cmp
push
cmp
fcom
leave
testl
outsl
loopne
mov
jnp
jle
pop
gs
jp
in
or
mov
cmp
nop
inc
test
test
inc
popf
fadd
pushf
sub
les
ret
mov
cmpsl
xchg
fdivl
jp
xorb
cmp
mov
dec
xchg
out
cwtl
mov
mov
ds
lds
mov
enter
mov
jecxz
fstpt
mov
inc
shlb
inc
out
fldl
imul
inc
fcmovne
mov
popa
ret
mov
es
out
fisubrs
sbb
sbb
lock
sbb
fwait
inc
lds
lret
fadd
rcl
adc
or
repnz
mov
sarl
adc
es
mov
xor
popa
repnz
mov
les
out
je
adc
xchg
lds
lcall
cmc
push
cmp
xchg
lcall
push
mov
xor
adc
iret
int3
int3
mov
sub
adc
dec
int
je
lock
aad
test
lock
lock
cld
ja
inc
mov
adc
jmp
repz
cmp
pop
sti
xchg
test
outsl
fstl
popa
sarb
lods
mov
repnz
cmpl
mov
mov
lret
xchg
push
imul
testb
dec
dec
cld
or
sub
add
xchg
mov
lcall
mov
mov
mov
xchg
roll
add
xor
cmp
enter
inc
push
stos
pop
jp
imul
pop
popa
fisubs
add
cmp
mov
pop
jp
xor
loop
mov
dec
insb
cwtl
idiv
jb
sbb
dec
das
mov
push
or
fistps
adc
push
leave
mov
mov
or
clc
cli
adc
scas
add
jge
fs
xor
ret
icebp
leave
fistl
mov
js
adc
jae
stos
xor
nop
sbb
mov
jg
sub
lds
imul
in
jne
js
in
test
andb
lahf
mov
xchg
gs
ljmp
fistpll
cld
cld
test
mov
out
scas
add
lds
fcoms
sub
loopne
in
push
gs
cmc
mov
imulb
outsb
aam
cmp
cwtl
pop
int3
or
push
mov
sbb
scas
insl
shrb
or
mov
insb
sbb
shr
xchg
lock
push
inc
in
xchg
bnd
cmp
pop
cmpb
sbb
flds
testl
fdivrl
decb
xchg
lret
and
inc
orl
lods
inc
xor
jmp
mov
or
adc
add
hlt
add
pop
mov
dec
scas
dec
mov
mov
mov
mov
cmp
lahf
cmpsl
les
dec
dec
push
aad
sub
jmp
iret
adc
sbb
adc
xor
fbstp
rcrb
add
ss
push
shlb
sbb
xchg
add
in
add
cltd
les
mov
fstps
pop
mov
xchg
sbb
and
icebp
push
fstpl
xchg
dec
mov
inc
push
loope
cltd
adc
push
in
sbb
push
push
xchg
andb
push
jmp
or
enter
cmc
push
lahf
jae
dec
or
push
dec
filds
jb
stos
mov
inc
or
int
pop
lds
mov
cmpsl
cmpsl
rcll
cmpsb
mov
imul
sub
cwtl
sbb
mov
sti
mov
ficomps
lahf
test
mov
push
sbb
ljmp
test
mov
sbb
loopne
inc
sbb
cmp
movsb
aaa
adc
xchg
cmpsl
dec
fsts
fdivrs
push
pop
sub
pop
pop
push
aad
and
pop
xor
pop
rol
pop
call
scas
adc
loopne
popa
cli
xor
mov
stc
pusha
shrb
lods
inc
mov
xchg
and
push
sub
movsb
orb
jnp
adc
dec
lods
call
add
jmp
sbb
mov
aaa
mov
aam
and
ret
push
dec
ret
lock
repz
lret
xchg
pop
pop
fisubrs
sub
jl
sbb
xchg
mov
pop
das
iret
dec
rcrl
xlat
ja
xlat
cs
add
nop
jl
adc
out
lret
enter
cltd
ret
fs
popa
repz
pop
xchg
mov
imul
filds
ja
pop
sub
xchg
cmovbe
pop
divb
mov
jg
xchg
lods
ror
xor
mov
popl
out
mov
push
lods
adc
jne
out
mov
clc
insb
dec
das
nop
stos
lods
push
mov
dec
shll
fwait
dec
jbe
mov
pop
das
dec
push
lret
or
loopne
notl
sbb
pop
movsb
loope
dec
test
push
lcall
mov
jae
outsb
sahf
in
or
cmpsl
loop
dec
movsl
testb
test
mov
jp
ffree
les
out
mov
dec
je
pop
rolb
pop
jge
fiaddl
or
in
xor
lods
jbe
shl
adc
andb
stos
inc
test
jbe
notl
pop
clc
adc
mov
loop
xchg
test
adc
cmp
jne
xor
cmp
outsl
scas
shl
xlat
test
mov
fdivl
or
out
xlat
aaa
and
xor
daa
shrl
loopne
jle
pop
out
push
mov
ljmp
xchg
sub
hlt
pop
and
orb
sbb
cli
loope
lret
sahf
push
push
xor
inc
test
xchg
jae
xchg
pop
test
and
int
scas
pop
enter
xchg
mov
jnp
outsl
lahf
mov
sbb
idivb
dec
sub
fdivs
scas
xchg
jb
shrb
add
fsts
dec
cmc
out
pop
xchg
into
repz
push
inc
add
fisttps
int3
and
dec
pop
sbb
out
push
dec
inc
xacquire
int3
pushf
neg
jmp
mov
fimull
push
cmp
repz
mov
addb
incb
push
das
jmp
stos
popa
mov
dec
repnz
push
xor
cmpsb
xchg
cwtl
mov
sub
mov
xor
pop
pop
pmuludq
ljmp
or
adcb
inc
int3
sub
xor
scas
enter
xor
jle
mov
xlat
lods
ljmp
jb
pusha
adc
rclb
jnp
aas
mov
pop
mul
clc
xchg
or
mov
stos
leave
mov
inc
iret
xor
push
lods
or
in
cwtl
ljmp
je
sahf
dec
xchg
call
scas
movsb
test
cld
inc
movsl
or
mov
sbb
mov
stos
cs
pop
out
add
or
sar
xchg
call
test
mov
jge
dec
mov
mov
rorl
cmp
data16
movsb
andb
imull
mov
inc
cmc
fwait
dec
dec
ljmp
and
in
inc
stos
es
and
dec
mov
pop
inc
jg
pop
cmp
mov
dec
adc
add
mov
mov
add
mov
ss
dec
and
sbb
std
aaa
add
push
push
test
lock
pop
sti
push
loopne
sub
jb
dec
add
mov
adc
aad
and
pop
and
xor
shll
cltd
dec
jmp
sbb
sub
sbb
sbb
mov
and
add
jmp
out
xchg
adc
mov
push
jle
insb
enter
mov
nop
and
les
frstor
fwait
repz
xchg
inc
mov
in
jbe
push
pop
jnp
and
mov
sbb
mov
jp
pop
mov
adc
imul
in
cmpsb
idivl
popa
xchg
add
pop
cmc
test
dec
add
ds
mov
pop
inc
enter
leave
cmp
cmpsb
mov
in
xor
lret
jmp
sub
ffree
mov
dec
int3
idivb
cmp
sub
jmp
push
ja
pop
bound
mov
pop
int
addb
fldenv
movsb
nop
xor
lahf
and
mov
inc
lods
popa
mov
and
add
or
sbb
pop
dec
mov
cmpsb
xor
xchg
loope
daa
iret
out
aas
popf
sahf
xchg
mov
mov
ja
and
xor
je
repnz
push
into
xchg
outsl
xor
mov
dec
les
mov
aad
lret
pop
mov
sub
mov
mov
sub
cmp
cmpsl
cwtl
sbb
adc
loopne
xchg
sbb
popa
sti
cld
dec
arpl
push
das
imul
mov
add
sub
daa
adcb
push
jae
xchg
in
iret
jge
pop
inc
pushf
lods
loope
test
sbb
add
xchg
insb
mov
stc
inc
dec
out
outsb
jle
daa
addb
jmp
es
loopne
sarl
scas
push
mov
icebp
ja
nop
frstor
faddl
sti
and
push
sbb
push
lock
pop
inc
sbb
mov
push
scas
ficompl
mov
lea
ror
int3
enter
mov
rol
jg
lret
cmpsl
dec
pop
xchg
and
lahf
sbb
in
mov
clc
out
cmpsl
repz
negl
lds
inc
xchg
adc
jmp
mov
in
and
xor
mov
xor
inc
cs
sbbl
ficomps
push
cmp
int3
stos
cmp
sahf
push
pop
imulb
pop
testl
notl
xchg
je
jb
leave
loop
adc
in
jp
out
cltd
add
lret
sub
xchg
mov
add
sub
mov
jge
popf
popf
movsb
sarl
xchg
in
sbb
cmp
stos
mov
inc
pop
das
in
repnz
stos
mov
mov
ds
or
imul
push
sbb
or
pop
test
cs
rcl
mov
sbb
mov
das
mov
outsb
xor
sarl
cmp
in
ss
cmp
scas
scas
in
loop
adc
mov
ret
mov
adc
fidivl
xor
or
jle
andb
fidivrs
pop
adc
and
sbb
cmp
ret
mov
stc
mov
xchg
adc
sub
js
mov
add
int
pop
mov
jo
jb
xor
push
das
in
sbb
aam
xchg
jae
inc
mov
inc
pop
cwtl
sub
dec
fwait
iret
in
jnp
ja
sbb
or
xlat
idivl
mov
out
jnp
nop
fwait
inc
ret
movsb
out
aam
mov
mov
scas
jp
xor
gs
sti
sti
js
pop
or
push
sahf
jbe
mov
sbb
or
cld
movsl
imul
mov
xor
pop
and
mov
push
jno
lcall
insb
push
mov
and
xlat
fs
or
pop
popa
bound
xchg
adc
xlat
xchg
and
leavew
loop
mov
out
xchg
orl
movsb
inc
dec
mov
xchg
add
lock
add
js
mov
icebp
loopne
enter
lods
dec
je
clc
pop
lea
jmp
sub
inc
icebp
popa
pop
add
lods
int
shrd
nop
mov
insl
add
and
dec
sbb
sbb
inc
imull
pop
inc
adc
jle
inc
jle
int
data16
cmp
adc
scas
push
xchg
std
cmp
add
sbb
ficoml
sbb
push
nop
mov
sbb
cmp
insl
xlat
sub
iret
inc
and
xrelease
jae
sub
lret
inc
idivl
fdivp
jmp
mov
dec
and
push
cmpsb
and
sahf
movsb
dec
sub
dec
inc
push
push
mov
icebp
mov
adc
jecxz
sub
shrb
pop
jne
jle
xchg
pop
adc
push
adc
inc
imul
lods
push
jne
test
or
loopne
inc
xor
push
mov
cld
dec
mov
sti
cli
jo
sub
enterw
daa
mov
xchg
into
jg
lret
mov
nop
nop
mov
leave
pop
push
scas
push
andb
loope
fldl
les
cmpsb
mov
ret
sbb
jo
jnp
xchg
mov
in
imul
rcr
popa
add
cwtl
test
mov
idivl
jecxz
jl
les
jnp
shll
pop
inc
sbb
push
jl
push
int3
or
or
sbb
pop
sti
mov
push
fcomps
xchg
adc
outsl
mov
sbb
or
lock
clc
inc
mov
jecxz
pop
mov
fildll
inc
pop
ret
inc
inc
cmp
das
push
push
ss
jnp
stos
aaa
push
js
loope
out
test
inc
jle
inc
stc
je
mov
mov
dec
cs
ret
roll
cld
out
sub
test
inc
cmp
push
mov
or
sub
shll
mov
cwtl
mov
sbb
push
rolb
test
inc
stos
dec
add
inc
stos
xchg
jg
shll
pop
cmc
out
aam
std
push
movsl
add
popa
test
int
adc
dec
jle
jmp
mov
mov
lcall
daa
jb
outsl
lahf
test
stos
lret
dec
and
push
iret
sbb
fiadds
rol
cmp
inc
je
add
mov
jg
bound
fnsetpm(287
pusha
imul
shlb
mov
push
jno
mov
ss
jle
jno
jae
stc
fldenv
aam
jbe
xchg
inc
sbb
cmp
xchg
outsb
lds
jb
add
pop
add
sub
sbb
pop
in
and
aas
sub
sarb
dec
push
lods
inc
jnp
ficoms
pop
sbb
push
out
xor
adc
mov
adc
in
negl
jae
fwait
xchg
adc
or
lcall
out
mov
dec
movsb
lahf
stos
xlat
xchg
jp
cs
mov
mov
xor
cs
jo
pop
mov
jns
mov
push
pop
and
imul
inc
cmpsl
shll
mov
rcr
fists
or
sarb
leave
adc
add
dec
mov
mov
inc
outsl
out
sbb
inc
shrl
xor
js
aad
xchg
inc
xor
iret
mov
fnsave
pusha
add
ss
inc
mov
dec
andb
and
pushf
jl
aad
into
adc
mov
into
dec
stos
std
out
shll
lock
sbb
decb
movsl
test
pop
je
sbb
cli
mov
mov
mov
jno
mov
xor
sub
mov
sahf
ret
in
inc
js
aad
cmp
xchg
jno
sbb
fs
jno
jnp
dec
and
jg
mov
icebp
cmp
sub
jg
loopne
stos
jne
mov
push
mov
sbb
sub
pop
jge
mov
cmpb
push
mov
sti
call
fldt
inc
out
insb
cmp
and
jg
int
dec
insb
pop
mov
xor
in
movups
sbb
aam
lods
jno
lods
ror
jle
sbb
repnz
push
adc
or
xor
dec
and
fwait
loopne
sub
mov
aam
mov
mov
fwait
stos
ret
lcall
jl
add
push
roll
sbb
cmp
jb
pusha
inc
iret
sarb
pop
js
push
mov
jmp
out
xlat
in
push
xor
jne
leave
xor
popw
aaa
gs
sbb
dec
setb
adc
data16
xor
addr16
sbb
stos
jnp
dec
or
or
push
pop
sahf
xor
mov
call
pshufb
fwait
pop
xor
cs
adc
jp
xchg
int3
leave
sbb
or
jno
adc
test
xchg
leave
lahf
ja
test
mov
pop
push
cmpsb
cld
mov
xchg
test
xchg
push
mov
lock
push
addr16
ljmp
fnsave
mov
fnsave
mov
int
sub
call
aad
pop
lahf
pusha
out
hlt
sbb
add
scas
adc
or
or
jno
les
push
sbb
ror
out
aaa
sbb
xchg
mov
orb
lods
in
and
jp
cmpsl
xchg
sub
xor
sub
in
jno
dec
jns
test
js
fs
add
sahf
hlt
xchg
inc
jge
shlb
lds
xlat
dec
inc
cmp
cmp
stc
imul
dec
cmp
dec
in
sub
bound
xor
fwait
sahf
bound
pop
in
jb
rdtsc
ret
into
fdivrs
sub
outsl
lret
fstps
pusha
mov
outsb
lret
adc
jno
jecxz
lcall
sahf
xor
mov
xchg
insb
sub
fsts
ljmp
cmpb
sub
sbb
inc
mov
iret
add
mov
and
jne
lods
add
sub
sub
push
ret
add
mov
jmp
test
push
pop
dec
imul
mov
test
xor
add
fidivs
dec
int3
bound
popa
inc
mov
add
sbb
mov
or
fs
in
inc
adc
ss
cmp
repnz
cmp
push
jecxz
in
je
adc
or
out
sbb
les
sbb
mov
lock
shlb
pop
push
sub
hlt
lods
mov
inc
mov
daa
movsl
adc
movsl
mov
fwait
and
xor
push
lock
mov
xchg
je
ficompl
or
iret
add
js
lcall
cmpl
stc
out
dec
dec
popf
xchg
fistpl
xchg
pop
sub
dec
xor
shll
push
push
mov
push
push
lahf
rcrb
icebp
adc
pop
fdiv
push
xchg
outsl
add
aam
mov
xchg
pop
cmpsb
mov
in
leave
and
sbb
dec
ret
flds
inc
ja
xor
out
fsubl
cmp
mov
addb
inc
les
inc
and
dec
inc
lods
cwtl
sti
add
loope
sbb
imul
out
enter
ja
or
mov
fwait
inc
sahf
das
sub
movaps
inc
sarl
aas
insb
mov
fsub
cmc
mov
and
insl
jg
in
setae
lcall
fistps
movsl
jbe
imul
cmp
mov
lahf
imul
adc
aam
daa
mov
inc
push
and
add
mov
mov
mov
scas
adc
jae
push
mov
add
pop
fiaddl
cmpsl
pop
std
iret
insb
lret
je
je
or
call
sbb
add
fsub
ss
pop
stc
add
mov
xchg
ret
int3
mov
aas
or
and
add
aas
stc
pop
sahf
xchg
lcall
ret
inc
pop
arpl
sub
or
dec
mov
repz
xchg
inc
adc
sub
sub
push
cmc
jl
mov
dec
test
scas
in
push
xchg
sub
inc
pop
sub
repnz
jge
or
stc
loop
jle
test
xor
xchg
cmp
xchg
sbb
leave
lret
sbb
test
mov
js
cmp
pop
jmp
fsubrl
push
das
xchg
outsl
in
into
or
lret
int3
pop
dec
jmp
pop
stos
pop
push
fadds
inc
xchg
push
push
test
mov
or
inc
fucomi
nop
nop
cmp
in
fdivrp
clc
mov
sub
cmp
subl
and
shll
mov
and
into
inc
cld
cli
inc
es
sub
pop
gs
mov
stos
inc
xor
jnp
inc
mov
jmp
movb
mov
mov
or
inc
cs
ss
outsl
fsub
add
cli
mov
dec
xor
jo
fwait
loope
cmp
inc
dec
sub
ret
repnz
movsb
mov
orl
aaa
in
or
ja
repz
ret
je
xlat
js
xor
in
jnp
xchg
aas
adc
out
test
xor
pop
push
push
dec
data16
iret
cs
mov
fwait
popa
loop
or
in
cmp
fnsave
ja
mov
mov
xlat
pop
aad
cmpsl
or
mov
jecxz
lret
xchg
sbb
push
mov
push
lahf
aas
sub
xchg
mov
test
mov
dec
fistpl
jo
or
sbb
mov
xlat
ja
cwtl
push
dec
frstor
rorl
jmp
repnz
out
int3
movsb
and
push
sub
movsb
dec
ss
or
mov
test
mov
rolb
sbb
cltd
mov
lods
hlt
xlat
test
inc
xor
sarb
adc
mov
mov
mov
movsb
mov
insl
fsubrs
xorl
add
sub
sbb
sahf
push
add
jmp
daa
sub
bound
mov
mov
jo
imul
fbld
cmp
cmp
pop
js
bndldx
adc
bound
push
stos
sub
stos
mov
mov
adc
mov
cmp
cmp
cltd
adc
mov
jo
mov
outsl
je
cwtl
fbld
test
jbe
mov
leave
mov
xchg
sbb
inc
mov
out
test
push
lret
mov
mov
mov
dec
loope
lahf
enter
or
mov
mov
sub
or
popf
loop
sub
fs
test
lods
popa
sbb
sub
or
pop
dec
jb
cmpsb
and
and
mov
cli
fcoml
and
xchg
sbb
mov
lret
jmp
mov
sub
shl
xchg
scas
rolb
aad
ret
push
stos
arpl
daa
stos
mov
xor
stc
cmp
mov
das
push
lahf
int3
push
mov
cld
pop
incl
aaa
adc
mov
mov
jge
push
out
push
sti
bound
or
mov
enter
ja
cmc
adc
pop
jns
inc
les
pop
jb
push
adc
pop
jp
mov
mov
leave
push
sbb
in
insb
push
into
insl
xor
jp
dec
mov
je
push
pop
jmp
cwtl
loope
jecxz
jae
int
sbb
idivl
data16
adc
xchg
fisubl
push
cmp
jns
lods
dec
mov
adc
lods
push
and
fdivl
xchg
scas
enter
lahf
mov
cmp
cmc
push
push
rcl
loop
cmp
incl
clc
mov
adc
cltd
outsl
vaddpd
outsl
inc
pop
inc
in
add
popa
lret
in
repnz
mov
lahf
bound
sbb
mov
xchg
fdivr
popf
pop
add
push
imul
stc
xchg
jae
arpl
xchg
lods
pop
scas
push
sahf
mov
inc
dec
jp
cmp
and
daa
mov
jg
dec
jecxz
std
jp
arpl
std
push
les
mov
adc
add
inc
mov
gs
popf
mov
popa
xor
ret
cmp
fcos
or
shl
insb
cwtl
call
sahf
and
adcb
push
enter
fnsave
mov
sahf
addl
mov
jg
xor
mov
mov
xchg
in
cmp
mov
mov
cmp
das
pop
call
cmp
push
imul
aad
jle
loopne
dec
mov
and
out
cmc
insl
xorb
push
push
push
fidivs
dec
sub
ljmp
pop
ret
nop
mov
sub
push
das
cmp
dec
cmp
popa
fwait
outsb
inc
cmpsb
int3
shrb
fbstp
xchg
nop
rclb
fs
and
add
and
int3
add
int3
mov
leave
jge
and
jp
test
jmp
jnp
mov
movb
ja
popa
aad
or
xor
jg
das
inc
ss
add
loop
cmpsl
pop
jmp
inc
cmpsb
nop
cltd
repz
push
add
roll
test
lock
push
sub
std
call
pop
std
sub
xor
rclb
lcall
xchg
daa
rclb
addb
gs
cmp
fisubs
pop
pop
push
aam
push
add
test
cmp
leave
or
icebp
hlt
ds
leave
mov
mov
mov
nop
dec
mov
dec
sbb
int
pop
jl
sahf
stc
leave
in
movsl
js
cmp
sub
pusha
ss
mov
aas
xchg
pop
pop
std
jge
and
insb
outsb
fistps
bound
mov
and
dec
aam
inc
sub
loop
push
movsl
jmp
popl
lahf
daa
mov
pop
fistl
push
cmp
jno
std
mov
jmp
mov
cmpsb
sub
rolb
jmp
mov
mov
jp
sbb
xlat
xchg
cmp
adc
push
icebp
and
sub
nop
or
lret
pop
or
fstp
scas
adc
jne
jnp
aas
xor
or
pop
sub
mov
js
inc
outsl
sbbl
shll
gs
add
xor
mov
fadds
mov
in
or
cmp
out
outsl
stc
pop
mov
push
or
jmp
pop
std
xchg
adc
mov
xchg
in
jmp
push
rol
fstps
enter
repz
int
mov
push
cmp
lcall
mull
dec
enter
fisubrl
ljmp
add
push
mov
call
sub
mov
sbb
aas
pop
push
xor
jbe
in
cmpl
sub
aaa
leave
nop
or
add
rorl
loope
cmp
push
int3
dec
mov
pop
sub
add
mov
jo
dec
xor
mov
repz
pop
sub
pushf
push
adc
mov
insb
push
or
fdivrl
jnp
shr
shr
mov
or
out
push
push
adc
sub
xor
outsl
lds
fiaddl
cld
popa
inc
push
sahf
cmp
and
push
mov
and
out
lods
or
les
xor
repz
fimuls
jmp
adc
std
push
push
mov
repz
mov
jmp
jo
imul
mov
icebp
push
xor
adc
mov
rorl
jne
xchg
mov
sbb
sbb
inc
mov
mov
jp
jb
sub
cmp
and
nop
je
xchg
mov
stc
adc
push
inc
push
aam
in
sbb
int
xor
or
cld
enter
testb
mov
jbe
std
dec
stos
rclb
lock
lahf
cmp
cmpsl
pop
data16
aad
xchg
orb
add
fcoml
ds
insb
pop
sbb
ljmp
dec
in
adc
adc
addr16
adc
sbb
fstpt
xchg
push
jne
lea
fdivrs
pop
aaa
sahf
or
jno
xor
jo
insl
mov
pop
add
rorb
xchg
rcrb
mov
or
or
xor
arpl
jbe
xchg
mov
xchg
scas
imul
xchg
cmp
cmp
mov
sbb
mov
jge
add
int3
jne
pop
outsl
leave
fs
cltd
jae
mov
mov
cld
jbe
xor
jl
push
sub
sub
fidivrl
ret
in
adc
mov
dec
mov
nop
add
or
mov
int
pop
gs
adc
sub
sub
push
mov
and
loope
mov
jnp
out
sbb
lret
lret
mov
cmp
out
cwtl
mov
outsb
sub
dec
insb
sub
push
data16
jo
mov
add
adcl
jle
inc
cmp
push
push
ljmp
notb
inc
mov
stos
push
mov
fcomip
aam
cmpl
dec
dec
cmp
adc
xchg
pop
push
das
arpl
xchg
aaa
jb
adc
shll
and
ljmp
inc
adc
mov
hlt
pop
sbb
pop
cmp
outsb
pop
dec
les
xorl
cmp
jbe
popf
mull
std
xorb
cltd
lcall
clc
sbb
xchg
repz
xor
cmp
cmp
push
fadds
jo
pop
add
les
repnz
or
jle
cmp
pop
push
jge
push
dec
or
xchg
jbe
inc
add
xor
sub
sbb
jno
xor
fdivs
and
cwtl
je
scas
mov
inc
mov
mov
dec
mul
dec
enter
inc
and
aas
outsl
dec
or
jg
ljmp
mov
jb
js
rclb
sub
pop
mov
add
jmp
xor
adc
inc
mov
cmp
push
xchg
jle
fs
pop
loope
xchg
mov
test
mov
pop
mov
pop
inc
cmp
mov
addr16
xor
mov
scas
dec
stc
shll
and
das
xchg
clc
in
cs
xchg
mull
cwtl
and
adc
out
rcll
jb
movsl
push
push
xlat
aad
sahf
lret
imul
xchg
movsb
xchg
push
in
sbb
cs
cltd
clc
aaa
inc
nop
cli
imulb
or
scas
mul
outsl
push
adc
aas
je
out
dec
mov
popa
pop
mov
lods
orb
dec
xchg
mov
pop
cmpsl
fiadds
inc
mov
enter
movsl
fnstcw
out
lret
in
pusha
hlt
pop
jne
sbb
lock
push
shll
sbb
inc
iret
dec
fists
out
push
lds
arpl
insl
pusha
inc
or
xchg
cmp
fidivrl
push
clc
test
cld
cs
sbb
rolb
push
adc
fwait
je
in
pop
ss
sbb
mov
pusha
pusha
mov
and
enter
shlb
xchg
dec
cs
jecxz
lret
in
fimull
stos
es
pop
add
adc
sar
lcall
mov
or
dec
add
mov
inc
daa
sti
jmp
pop
scas
cmc
sbb
push
sti
mov
sbb
stos
sub
scas
mov
and
xchg
cmp
pop
bound
dec
stos
pop
fiadds
rolb
inc
lret
or
dec
add
in
mov
mov
jl
push
sti
test
jge
push
adc
addb
shlb
mov
mov
sahf
jle
fbld
ret
inc
jno
mov
ds
insl
outsb
andb
pop
adc
movsl
orb
lret
jmp
xor
pop
push
lds
lret
mov
push
cli
js
sbb
xchg
or
xchg
pop
gs
and
sbb
sub
out
mov
stos
insb
popl
and
rorl
into
aas
xchg
xlat
leave
fucomi
mov
pusha
or
pusha
or
cli
outsb
add
adc
repz
sbb
icebp
nop
ja
mov
sub
jns
mov
push
lret
test
cwtl
pmullw
dec
test
jne
lods
and
fsts
dec
je
sbb
jbe
addl
data16
repnz
jg
sub
xor
jns
inc
mov
ljmp
xlat
in
mov
nop
sbb
xchg
lea
test
and
aad
pusha
fidivs
dec
in
mov
and
xlat
and
aam
jg
pop
fwait
stos
or
adc
inc
fwait
insb
bound
aas
pop
sbb
lahf
out
test
dec
stc
or
fisttpl
mov
or
xor
xchg
mov
pop
shrl
cmp
adc
and
xor
fildll
and
xchg
lahf
insl
js
jle
insl
lret
bound
xchg
paddb
jb
ja
fwait
mov
pop
xchg
stos
cli
icebp
cmp
sahf
stos
cld
xor
daa
mov
fcoms
imul
adc
dec
aam
sti
add
mov
pop
xchg
adc
out
or
mov
scas
xor
dec
sub
push
xchg
in
in
or
sbb
push
out
test
imul
pop
lock
push
imul
ret
leave
arpl
imul
jo
and
mov
sbb
pop
inc
and
add
mov
xchg
cmc
out
rolb
inc
fsubl
ret
pop
loop
sahf
out
dec
pop
stos
hlt
jmp
jbe
inc
addr16
and
jae
jg
push
rorl
mov
push
test
ds
decl
test
ja
mov
cwtl
dec
add
jo
add
or
cmpsb
inc
mov
and
push
stos
leave
xor
xor
jmp
add
mov
and
mov
das
lods
fsubrl
jle
fs
pop
sbb
mov
push
fimull
push
mov
shrb
or
xchg
pop
shll
sbb
ret
add
or
push
push
pop
sbb
fsts
jge
push
dec
rol
xor
fisubrl
repnz
enter
sbb
in
mov
das
fistps
jbe
cmc
rorl
pushf
xchg
inc
mov
aam
sub
fcomps
lcall
sub
mov
mov
scas
ljmp
fisubl
arpl
dec
ficomps
cmp
jns
mov
pop
js
pop
iret
scas
repnz
leave
loope
pop
mov
adc
mov
imul
popf
xchg
iret
push
lock
lock
das
imul
cmpsl
in
ds
ljmp
cmpb
sub
icebp
iret
sub
test
jne
pop
inc
testb
add
push
sub
xor
jle
push
jbe
inc
fisubrl
add
lret
xchg
mov
mov
jmp
movsl
inc
xchg
insb
out
sub
xor
sub
jp
jge
iret
or
pop
xor
lcall
mov
add
dec
adc
cmp
and
pop
mov
cli
loopne
push
out
jnp
int
cs
pushf
sbb
mov
imul
pop
mov
call
xor
mov
int
fisttpll
not
cmp
xor
add
mov
mov
addr16
sub
adc
add
daa
sub
pop
adc
test
adc
les
imul
popa
cmovne
adc
inc
std
stos
push
ret
aam
imul
lods
lea
sbb
adc
cli
pushf
filds
test
aad
loopne
or
fnstsw
pop
test
push
shrl
out
ds
xchg
in
in
add
xor
outsb
mov
sbbl
sub
leave
sbb
lret
in
dec
xor
sbb
push
mov
imul
fcoms
bound
or
aad
or
rolb
fidivrs
lds
cmp
mov
icebp
and
scas
stc
js
mov
jne
aam
popa
loop
jno
jl
cmp
fsubrl
daa
mov
stos
stc
les
jo
ret
hlt
jbe
and
dec
hlt
xor
out
sbb
xor
or
xchg
xlat
jle
cmp
adc
das
xchg
sbb
loopne
and
fistpl
xor
and
fstps
enter
test
ljmp
cltd
dec
mov
mov
push
je
push
scas
inc
movsl
push
cmpsb
mov
xor
mov
call
sub
mov
jae
mov
xor
es
enter
xchg
loopne
push
mov
mov
pushf
lret
sub
pop
push
cmp
aas
jecxz
aas
xchg
aas
repnz
ffree
mov
testb
and
push
mov
outsb
test
sbb
mov
sbb
jg
ficoms
push
into
xlat
fcmovnu
or
jbe
stos
dec
fs
stos
sub
xor
in
dec
or
xchg
or
add
push
pop
loopne
pop
push
mov
mov
cmp
and
push
push
cwtl
in
arpl
clc
mov
sub
fimuls
mov
sub
adc
fstpl
xchg
stos
or
test
inc
jnp
adc
xchg
out
mov
mov
je
ja
movsb
imul
outsl
and
pop
scas
out
xor
mov
mov
out
repnz
mov
aaa
push
push
faddl
cmp
call
xchg
jbe
jnp
mov
ljmp
xlat
in
imul
repz
push
ss
jne
jae
int
pop
repnz
cmp
shll
fldl
test
adc
popa
int
popf
xchg
scas
adc
out
popa
es
sbb
hlt
mov
mov
aas
jl
popa
add
shl
push
je
rcr
or
aas
sbb
and
stos
or
sub
nop
xchg
leave
movsl
lret
movsl
cltd
loopne
testb
push
ja
mov
dec
enter
mov
mov
mov
pop
sub
repz
js
dec
sub
pusha
adc
jle
ret
in
out
mov
lea
and
fildl
lods
sub
in
pop
lahf
inc
ret
lret
cmpsl
xor
cli
push
fwait
pop
sbb
insl
xor
outsb
pop
in
popa
fisubrl
js
add
scas
xchg
mov
inc
jge
or
notl
nop
outsl
sbb
repnz
cs
lods
xchg
mov
scas
arpl
cltd
test
mov
mov
jle
adc
pop
add
test
cmp
scas
xchg
jp
pop
add
dec
jmp
add
mov
shll
in
mov
inc
push
pop
lret
mov
and
addl
jb
push
cwtl
mov
ja
lods
add
or
lods
jne
cmpsb
adc
sarl
ss
sarb
pop
or
mov
cmp
push
ret
jno
sbb
push
mov
push
add
adc
jecxz
dec
xchg
out
ja
mov
inc
mov
jmp
in
xchg
clc
sub
sbb
adc
andl
nop
xchg
aaa
popa
push
ds
andb
icebp
fadds
pop
mov
out
loop
inc
js
sub
cmp
repnz
add
xchg
push
sbb
sub
mov
add
or
dec
ret
mov
xchg
mov
in
outsl
and
add
or
hlt
cmp
je
aam
xor
inc
mov
jno
ret
add
cmc
lahf
enter
jl
mov
outsb
out
arpl
hlt
lods
inc
pop
jae
and
flds
cmpsb
daa
add
xchg
xor
xchg
outsl
pop
push
in
sub
lds
pop
mov
pop
pusha
xor
xor
mov
sub
sarb
movb
cmp
addr16
in
cmpsb
and
sbb
in
arpl
push
xchg
ret
fwait
movl
and
mov
ss
enter
mov
adc
sub
inc
sub
mov
daa
je
dec
jle
insb
mov
jns
cmc
xchg
xor
mov
arpl
sub
test
jl
test
je
sbb
lods
fists
mov
jnp
mov
lods
ds
add
xlat
scas
jns
xor
mov
lods
jg
clc
jl
ljmp
jmp
sub
push
test
dec
pop
or
mov
int
push
jbe
mov
scas
cmp
xchg
or
xchg
mov
mov
inc
jl
xchg
mov
mov
je
pusha
sbb
cmp
mov
xchg
mov
mov
mov
mov
push
cmc
pop
out
adc
data16
pusha
mov
push
or
movntps
lahf
mov
gs
dec
ljmp
fmull
in
stc
cmp
push
mov
push
cmp
fwait
enter
shlb
xchg
cld
push
shrl
or
daa
xchg
imull
jg
sbbl
push
lock
inc
jae
xchg
xchg
ds
nop
data16
jge
fstp
ljmp
js
bound
adc
add
lds
imul
subl
push
sar
mov
mov
jae
push
jg
ror
movsb
lret
mov
add
into
jo
pusha
lods
cs
insb
dec
xchg
sbb
push
xchg
sbb
sub
clc
lret
and
cmp
bound
dec
fmull
inc
ficomps
ljmp
xor
xchg
es
test
fisubl
daa
xchg
andl
cmp
or
cmp
adc
fs
je
cmc
ds
stos
pop
hlt
cmp
lret
inc
pop
push
aaa
mov
lret
ja
and
cwtl
adc
add
loope
jbe
cmpsl
push
push
mov
ja
cmp
fistl
inc
and
jl
jo
or
cli
add
add
pop
sarb
xchg
push
sbb
scas
or
xorb
pop
divl
sub
xor
jecxz
xchg
xchg
lock
outsb
mov
dec
xchg
mov
stos
dec
push
stc
lods
and
cmp
or
cmp
add
mov
mov
mov
lret
ja
fcomi
movsb
in
pop
dec
push
jno
sub
dec
pushf
fucomip
xchg
scas
loopne
imul
addb
call
js
icebp
lock
xchg
pop
sbb
lods
jo
gs
mov
cs
dec
dec
arpl
mov
and
sbb
lds
lret
jo
mov
in
nop
mov
mov
xchg
js
sbb
push
cld
sub
popa
adc
jle
xor
push
inc
pop
faddl
push
xchg
jbe
add
inc
jecxz
xchg
ffreep
inc
mov
cld
mov
jge
xchg
in
stos
cmp
or
mov
inc
adc
movsb
lea
and
ret
ja
cmp
push
add
std
enter
inc
mov
out
and
shl
cld
xchg
pop
lock
mov
pop
xchg
in
inc
fsin
inc
inc
mov
inc
sti
mov
popf
adc
xor
mov
sbbl
mull
call
or
test
cwtl
mov
and
lret
mov
mov
adc
repz
lahf
sbb
xor
jp
cmovno
jmp
pushf
mov
insb
scas
lock
cmpsl
lods
cwtl
or
sub
jge
pop
repz
or
and
pop
pusha
sbb
inc
or
es
test
movsb
lock
pop
mov
cmpsb
mov
inc
xor
add
xor
inc
fs
cld
ret
fcmovnb
fisubl
jmp
fimull
jg
aam
add
insb
enter
mov
out
xor
repz
mov
mov
push
scas
repz
inc
dec
xchg
sbb
mov
pop
mov
jl
out
jmp
repz
xchg
stos
inc
and
cltd
cmp
ja
mov
es
fmull
dec
mov
sub
je
push
pop
in
fwait
mov
push
jno
mov
in
call
pusha
sbb
cmp
shl
jmp
mov
mov
xor
popf
orl
icebp
popf
xchg
pop
or
xchg
jbe
pop
pop
ret
fstpl
subl
jecxz
adc
dec
fwait
add
int
lcall
jle
js
daa
addr16
push
mov
or
ret
mov
pushf
mov
dec
or
ds
cmp
adc
mov
jle
lock
xchg
and
cli
ljmp
jnp
and
and
jp
mov
test
inc
xchg
cmovns
cmc
dec
wrmsr
or
loope
out
addr16
pop
pusha
mov
ret
mov
int
aas
xchg
jmp
xchg
loopne
adc
jle
and
shlb
fmull
mov
test
mov
cmp
push
hlt
stos
adc
mov
icebp
es
js
and
stc
sbb
test
stc
jmp
je
popf
push
cmpsl
jbe
push
push
jae
inc
dec
arpl
addr16
sbb
icebp
cmp
or
in
cs
int3
nop
xor
xor
dec
jae
subl
clc
dec
out
enter
lock
mov
repnz
sub
push
shll
pushf
adc
loopne
jle
inc
xchg
and
jg
repnz
repz
dec
std
mov
fists
mov
das
mov
mov
jl
mov
es
mov
sub
add
xchg
fnsave
and
outsb
mov
mov
cli
pop
mov
mov
andl
push
adc
mov
rorb
leave
mov
inc
bound
enter
ret
add
adc
mov
push
mov
xorb
test
lds
xor
clc
xchg
mov
jno
shrb
dec
jge
leave
sbbl
js
stos
mov
int3
xchg
js
loop
mov
jbe
push
or
cmpsb
xor
aam
add
push
xchg
scas
xchg
mov
mov
sub
jp
mov
ret
add
sub
pop
stos
cmp
mov
xchg
ja
and
pop
inc
and
roll
lods
mov
lds
push
lods
ret
arpl
popf
xor
scas
addr16
clc
sar
cmp
add
test
jns
and
icebp
sub
mov
adc
mov
or
fs
jo
rorb
xchg
es
mov
xchg
out
cmp
mov
lds
jnp
and
test
or
cmp
add
aaa
mov
movsb
js
in
xchg
xchg
addl
mov
mov
cmp
pop
test
jae
roll
pop
and
and
sti
ffreep
lock
testl
int3
push
cmp
mov
jp
cltd
push
imul
push
inc
cmp
dec
jle
scas
pop
popa
in
stos
mov
cmp
js
and
or
fwait
adc
jle
fnstsw
and
cmp
sub
imul
sub
lock
or
enter
inc
inc
mov
sub
movsb
adc
and
adc
addb
cmp
xlat
xchg
mov
xchg
xchg
movsb
arpl
mov
dec
les
mov
jns
stos
adc
mov
adc
pop
mov
hlt
mov
fstpt
dec
jl
stos
add
test
mov
and
jmp
push
pushf
outsb
add
jmp
sub
and
push
rcr
cmc
xor
pusha
mov
pop
mov
ss
sarl
cmc
loope
fwait
daa
or
lcall
js
inc
adc
pop
inc
push
xlat
out
xor
aad
aaa
nop
cmp
lods
xor
sahf
add
and
stos
int
jns
mov
dec
push
inc
cmpsb
je
mov
data16
std
jno
lret
lcall
ror
ds
jbe
or
imul
fimull
mov
into
cmp
inc
push
push
out
cld
lods
pop
loop
jnp
out
sub
xor
mov
or
cltd
ret
stc
int
std
fists
sahf
mov
lods
pop
iret
add
pop
or
test
pop
fsubl
add
inc
xor
lock
sahf
and
add
mov
lds
pusha
mov
push
daa
or
mov
mov
sahf
dec
rcr
push
inc
cli
sbb
and
cmpb
mov
cmp
or
xor
pusha
ret
add
pop
dec
inc
pushf
addb
fcomps
pop
xor
fcmovnu
rorl
mov
jnp
scas
dec
bound
lret
mov
and
stc
pop
js
push
mov
mov
or
popf
es
cli
lahf
inc
lods
cmovs
movsb
fstl
inc
cmpb
mov
push
inc
cmp
mov
and
jmp
xor
pop
jns
scas
aam
sbb
mov
adc
cmpsb
add
adc
sub
cmp
push
sub
lret
das
lret
clc
dec
aam
fists
fwait
test
xchg
shlb
push
les
mov
push
iret
rcrb
adc
sahf
dec
test
stos
jle
mov
clc
shr
pop
inc
callw
enter
arpl
mov
mov
fisttpll
push
mov
sub
sahf
test
leave
inc
lock
scas
adc
push
clc
insl
or
sbb
ret
push
popa
mov
or
jnp
js
xchg
and
adc
mov
adc
aaa
and
fidivs
mov
enter
sbb
nop
insl
aaa
xor
and
mov
imul
testb
lds
out
mov
movsl
iret
test
das
enter
add
mov
push
mov
xchg
pusha
xlat
fisttpll
xchg
sub
jmp
mov
or
gs
cmp
cltd
cmpsl
js
pop
ficoml
inc
daa
flds
ljmp
jle
jbe,pt
mov
push
subb
cmp
and
push
mov
and
push
mov
rolb
lock
add
push
pop
scas
test
cld
int3
mov
out
xchg
sar
fiadds
pop
cld
xchg
scas
or
lock
aad
fwait
stc
and
dec
jmp
arpl
mov
shll
push
lds
pop
loopne
or
fcomip
aaa
push
fsts
push
mov
mov
jae
outsb
xchg
mov
jg
sub
inc
lea
es
push
mov
lods
xor
mov
stos
rorb
xchg
out
pop
stos
push
push
xor
mov
outsl
mov
pop
lea
iret
movsl
gs
out
xchg
or
or
in
mov
lods
subl
sahf
pusha
insl
xchg
iret
push
dec
push
clc
fsubl
pop
mov
mov
lret
pop
mov
ror
add
testb
jmp
inc
icebp
xor
mov
pop
aad
clc
sbb
mov
aaa
adc
push
pop
and
dec
jge
adc
or
test
sub
pusha
mov
jle
dec
add
sbb
and
adc
cmc
stos
shlb
xchg
push
add
and
sub
lods
dec
fisttps
and
in
mov
mov
xor
stc
mov
dec
or
fdivrl
push
je
ja
clc
xchg
sbb
sbb
andl
in
dec
shll
pop
sub
sbb
cltd
shlb
fisubl
lock
out
mov
lea
push
or
mov
xchg
das
sub
lds
mov
xor
daa
push
mov
pop
imulb
nop
push
mov
sti
aam
inc
std
insb
fstps
pop
mov
xorb
je
clc
jne
cmc
fsubr
dec
cmp
inc
fs
test
and
std
insl
int3
jl
fnstcw
and
repz
imul
inc
aam
popa
add
pop
sbb
mov
mov
inc
int
arpl
out
ja
jp
lcall
pop
lods
test
pusha
mov
jg
jnp
jmp
inc
bound
and
div
orl
addb
and
mov
insl
pop
add
and
xor
jle
inc
push
js
aam
imull
xchg
pop
sub
es
popf
jg
cld
push
loop
dec
mov
into
rcll
adc
std
mov
inc
xchg
rcrl
lds
jge
das
lcall
ret
ror
mov
clc
leave
sahf
outsb
mov
clc
cmp
in
ret
loopne
ss
xchg
repnz
es
adc
adc
aam
push
and
popf
cs
ljmp
rcrb
movsb
xor
and
test
mov
pop
or
jbe
imul
dec
jb
inc
jns
fidivrl
push
and
mov
je
lds
scas
push
sbb
add
sbb
dec
scas
sbb
lret
xchg
sti
xor
cmp
imul
pusha
orl
push
push
push
rcl
inc
stos
popa
mov
mov
lcall
cmp
mov
xchg
xchg
clc
cmp
rorb
in
push
sub
xchg
and
sbb
cmp
sub
test
dec
dec
sti
lret
or
mov
flds
inc
or
pop
xchg
mov
xlat
jno
xchg
mov
jb
xlat
in
enter
push
adc
in
mov
ja
dec
jecxz
scas
sub
pop
adc
mov
or
popf
ret
inc
fidivs
mov
lret
sub
jmp
push
daa
push
mov
mov
test
push
or
xchg
inc
lret
movsb
jo
pop
dec
jmp
fidivs
das
sti
insb
loope
mov
mov
mov
out
jbe
push
outsl
push
mov
mov
cmc
jp
mov
add
add
xchg
jmp
stos
fcmovnbe
js
inc
nop
push
cs
test
std
push
mov
and
fmull
mov
fsubrs
and
lock
or
test
shll
loopne
push
lahf
fsubrl
fwait
insb
cmp
cmp
mov
clc
int
mov
xchg
xchg
push
sub
in
loope
adc
push
push
jns
lods
stc
pushf
mov
into
addr16
shlb
test
testb
jnp
arpl
dec
mov
mov
pop
cmpsb
sub
cltd
mov
pop
sbb
push
pop
ret
mov
scas
loopne
int3
or
sti
call
out
xchg
cmp
shl
orl
add
cmp
icebp
sbb
fidivs
or
add
outsb
and
ret
sar
ss
jp
into
int3
push
sub
xor
mov
dec
mov
cmp
mov
mov
mov
jg
pop
leave
jp
or
adc
lea
fnstcw
jnp
mov
push
cmp
std
aad
mov
jno
ficomps
jnp
pushf
sarl
sahf
pop
inc
inc
lock
insb
loopne
xchg
pop
sbb
xlat
xchg
dec
rorl
jne
mov
jmp
inc
xor
or
xor
jae
add
daa
aas
sub
cmpl
sub
xchg
and
faddl
in
lcall
xor
addb
ret
adc
cmp
mov
sti
call
and
dec
in
loope
lea
mov
or
into
je
cmpl
leave
mov
xchg
lahf
lea
mov
sti
mov
jl
shrb
xchg
leave
push
or
jmp
jnp
xchg
cs
in
shlb
loop
iret
test
inc
call
hlt
add
jmp
mov
dec
pushl
in
lahf
hlt
or
mov
test
sti
fimull
or
and
mov
nop
cmp
add
test
ss
pop
jg
push
xor
mov
adc
jmp
aad
mov
iret
out
xchg
sbb
clc
xchg
mov
sub
imul
xchg
adc
out
jmp
rorb
adc
sub
dec
sub
shl
pop
shll
push
iret
or
jb
pop
ret
jg
push
or
rcr
dec
scas
jge
xor
inc
mov
lcall
out
popa
pop
daa
loopne
add
cwtl
or
adc
dec
cmpsb
xchg
stc
cmp
mov
outsl
cmpsl
inc
mov
xor
outsl
insb
xor
pop
push
push
and
adc
xchg
pop
pop
lcall
mov
add
js
andl
cmp
mov
leave
das
pop
call
jl
mov
push
aam
cltd
js
ret
aad
xor
add
ds
outsb
and
jmp
jb
scas
add
push
push
xchg
add
stos
sub
pop
mov
scas
mov
fwait
or
in
adcl
in
test
imul
jge
inc
fnstcw
and
mov
std
fs
or
cwtl
jp
push
sbb
cld
xchg
sahf
out
icebp
mov
and
nop
sbb
lcall
shll
lods
icebp
incl
and
xchg
and
dec
jb
frstor
scas
in
arpl
push
test
aas
xlat
shl
inc
je
sbb
push
and
out
adc
test
adc
jo
push
sub
inc
fldt
outsb
mov
outsb
scas
rolb
leave
dec
nop
xchg
es
out
xchg
jns
mov
fwait
push
push
ljmp
and
dec
mov
sbb
iret
out
test
das
mov
popa
cmp
push
sub
pop
add
pop
ljmp
xor
ficoms
dec
pop
ds
shl
inc
cmpsb
pop
cld
cmpl
mov
in
mov
jg
mov
jnp
das
jg
push
cmpsl
je
and
aam
pop
xor
loope
inc
idivb
outsl
push
das
repnz
mov
rcrl
out
sbb
popf
jmp
jecxz
jge
lahf
test
leave
mov
or
jbe
icebp
out
cmp
ja
pop
push
xchg
in
xor
int3
stc
in
mov
lret
mov
ss
pop
pop
dec
arpl
push
addr16
shlb
mov
loop
jo
jg
pop
js
xchg
xchg
arpl
inc
aad
dec
jl
dec
cs
and
icebp
cmc
sub
les
das
push
or
outsb
out
push
and
mov
nop
lods
jp
fwait
push
lea
call
and
sub
sahf
outsb
insl
xchg
lods
negl
test
jmp
inc
or
or
lahf
dec
cmp
sbb
inc
mov
jns
shrb
push
jo
sbb
sahf
cmp
or
xor
jmp
es
loope
cmp
cmp
cltd
jge
mov
push
in
mov
dec
pusha
ret
push
mov
dec
fcompl
mov
mov
add
xchg
sub
into
enter
cmp
mov
sub
push
out
ss
jno
dec
int
in
cs
popf
loope
stos
out
or
ds
es
bound
fists
mov
sub
into
loopne
push
fcomp
incb
or
inc
xchg
rol
aam
ljmp
fimuls
lahf
mov
push
adc
dec
aas
mov
lret
movsb
subl
je
rcrb
lds
and
mov
jl
sarl
in
imul
clc
sbb
mov
xor
sahf
out
cmpsl
sbb
mov
shrb
add
add
pushf
or
push
xchg
int
push
jno
xor
dec
pusha
fildl
adc
gs
cmp
test
push
xor
lock
out
jge
add
cmp
add
div
outsb
jae
arpl
fdivrl
in
sub
int3
lods
fisttps
mov
les
sub
cli
mov
mov
lcall
adc
sbbb
loopne
addl
test
call
cltd
lds
cld
pop
test
inc
lods
loope
ret
int
or
fidivrs
xor
jle
cmp
mov
xchg
lock
jo
cmp
adc
in
sbb
jae
ja
in
cmp
loopne
fldcw
add
addl
push
out
push
mov
jmp
loope
sub
jge
std
fisubl
scas
mov
sub
add
stos
or
cmc
loope
sbb
pushf
in
je
aaa
xchg
lea
mov
lock
xor
int3
pop
test
and
sub
out
push
lret
lds
data16
add
ss
idivb
notl
or
sbb
loope
pop
outsl
xchg
cmp
enter
mov
adc
mov
stos
sahf
push
cmpsb
mov
enter
shrb
ja
sbb
xchg
mov
addr16
inc
xchg
xchg
push
and
xchg
test
mov
fdivrs
leave
mov
es
dec
sbb
add
push
and
int
or
fmuls
stos
outsl
aam
mov
pop
fidivrs
cltd
setg
lcall
or
cmp
movsb
jns
lea
fisubrs
stos
arpl
fisubl
push
push
lock
xchg
inc
stos
push
bnd
arpl
lds
subb
xor
jl
subl
jg
pop
mov
pop
jle
add
lret
les
mov
cmp
jnp
sub
into
ljmp
xor
lock
into
out
in
mov
jmp
out
dec
or
cmpsl
cmp
jg
movsb
mov
cmp
jo
aam
push
popl
in
add
pusha
aam
inc
pop
out
jmp
lods
addb
add
pop
lods
xor
or
lea
ss
add
or
dec
push
add
es
std
insl
or
jecxz
negl
jl
adc
xlat
icebp
push
cmovb
push
pop
fstpt
stos
aaa
pop
jl
ret
jne
mov
movsl
out
imul
pop
gs
mov
js
divb
insl
loopne
out
in
mov
xor
shl
cmpsb
xchg
adc
scas
sbb
adc
mov
push
dec
movsb
sbbb
in
mov
shlb
aad
lods
or
mov
mov
push
adc
mov
js
ljmp
adc
pop
inc
and
aas
or
scas
fs
cli
xchg
lods
faddl
je
stos
push
mulb
aas
xchg
and
jnp
stc
callw
inc
add
xchg
mov
out
or
sarb
or
mov
fld
mov
arpl
fisubs
rcll
gs
popf
or
xchg
xchg
dec
push
mov
sub
xor
inc
pop
cmpsb
mov
fcomps
lret
add
sbb
xchg
jb
rcrl
jae
int
cmp
repz
sub
push
mov
mov
pop
cmp
pop
insb
sbb
mov
push
decl
push
pop
int3
les
lret
inc
cmp
sub
ljmp
pop
inc
imul
aam
push
and
dec
cmp
mov
paddsw
loope
pop
sahf
test
push
jno
imul
xor
sbb
xor
call
dec
and
ljmp
enter
jmp
fnsave
dec
loop
adc
adc
or
lahf
sub
add
mov
outsb
insb
jg
adc
adc
arpl
jns
lret
cmpsb
push
idivb
ljmp
and
insl
test
jns
pop
adc
jnp
mov
test
stos
std
mov
mov
jp
mov
mov
adcl
out
fldt
gs
add
aas
push
insl
dec
ja
ror
data16
mov
fstpl
xor
push
dec
pop
jmp
psrlq
add
dec
sbb
mov
lahf
and
push
inc
adc
jge
repnz
in
sarb
ret
cmp
out
ret
jae,pt
cmc
test
pop
out
push
xlat
mov
jb
xor
lcall
jecxz
mov
dec
push
push
ret
lock
fstpt
lahf
xor
das
add
pop
pop
fsubr
xchg
pop
xchg
rol
jns
lahf
mov
mov
sbb
xor
in
mov
add
xlat
dec
cmp
aas
lahf
inc
push
push
add
jle
dec
cmp
sub
xor
movsb
push
mov
int
cs
cmovo
cmp
adc
adc
repnz
dec
test
dec
lret
std
cltd
xchg
push
inc
lock
jg
dec
adc
notl
cmp
push
adc
enter
iret
xor
inc
sbb
xor
push
iret
cli
pop
cmpsb
add
scas
fcoml
pop
mov
lods
das
aaa
scas
pop
pop
lcall
add
int
sarb
add
sbb
scas
push
add
jb
xchg
mov
jo
xchg
or
loope
inc
push
xchg
arpl
sbb
mov
rclb
repz
mov
loop
sub
add
adc
mov
sarb
insb
lock
pop
inc
and
stos
sub
cs
sub
sbb
pop
jns
test
into
int3
sahf
push
fcmove
inc
nop
mov
dec
ds
imul
fnstcw
icebp
repz
xchg
cld
les
test
es
adc
mov
pop
jl
mov
arpl
mov
imul
arpl
xor
les
push
jne
push
adc
mov
test
mov
push
ds
add
nop
lock
fstl
jae
test
incb
hlt
add
inc
scas
jo
ljmp
repz
or
inc
cmpsl
lock
or
mov
mov
pop
xor
jno
loopne
testl
sbb
cltd
sbb
loop
mov
fldenv
sub
sti
dec
and
jne
popfw
inc
sbb
add
push
dec
pop
loopne
mov
inc
cmp
enter
pop
fidivrl
mov
mov
insl
xor
jg
pop
sub
shlb
inc
mov
mov
icebp
int
mov
insl
fdivr
mov
lods
add
sub
cltd
cmp
dec
popa
int3
ret
add
push
lea
cmpsb
cmp
sub
inc
ljmp
shrb
lods
leave
in
int
faddl
hlt
and
loopne
cmp
push
jp
mov
pop
in
in
pop
cmp
int
test
jb
dec
inc
xor
mull
cmpsl
movsl
sti
fcmovbe
outsl
lahf
xchg
out
and
arpl
mov
test
sub
add
jmp
scas
mov
loopne
mov
mov
adc
pop
int
cmp
sbb
into
pop
dec
dec
lcall
sub
aam
xor
or
push
cmp
test
push
lock
lds
repnz
lret
cwtl
sbb
sbb
cmp
mov
popf
into
in
cmp
rcll
xchg
xor
sahf
cmp
and
es
mov
cld
jmp
or
add
cltd
incl
stos
stos
xor
jbe
lock
mov
fxch
loope
test
notb
mov
lods
dec
out
or
cmpsb
mov
dec
cltd
add
out
roll
cmp
loope
sbb
xor
popf
or
outsl
lds
int
jmp
imul
test
loope
adc
lea
jle
int3
cmpb
repz
and
rcr
lcall
ret
rolb
inc
aam
mov
ss
int3
push
mov
push
std
mov
jns
adc
adc
xchg
sub
sub
xchg
fisttps
xor
or
out
pop
cmp
cmpsl
movsl
mov
shrl
xchg
mov
pop
xchg
pop
pop
test
cmp
gs
adc
pop
sub
mov
xorb
mov
lds
fs
xlat
inc
cmp
lods
movsl
xchg
add
add
xlat
pop
lods
cmpb
pop
in
aas
adc
dec
movsb
jl
jmp
xchg
bound
popa
mov
pop
xor
dec
fnsave
mov
pop
andl
mov
jns
or
sti
mov
adc
leave
or
int
cmp
inc
outsb
test
nop
mov
adc
shr
adc
xchg
cmc
jb
pop
fnstenv
notl
or
and
and
push
xor
xlat
scas
stc
xor
mov
cmp
cmp
xchg
cmpsb
popa
cmp
xor
add
call
and
andb
inc
push
in
push
lcall
mov
xchg
imul
mov
pop
mov
out
xchg
cmp
lcall
outsl
mov
add
xchg
sub
push
adcb
and
adc
scas
push
ja
repz
jno
daa
pop
lds
imul
add
leave
iret
cli
das
rorl
add
pop
add
popa
shrb
sbb
inc
mov
pmulhuw
cmpsb
and
push
loope
mov
cld
push
aas
jle
in
idivl
dec
mov
inc
mov
subl
xlat
lret
mov
lea
dec
aam
and
inc
adc
push
lcall
jnp
mov
mulb
push
add
mov
aad
push
sub
cmpsb
fcmovbe
push
je
push
fcompl
add
push
sub
or
xchg
push
pushf
leave
cli
stc
xchg
and
adc
push
lods
insb
aas
push
clc
lret
cmp
in
lods
rorl
push
cmc
jno
in
je
mov
inc
push
or
aas
pop
inc
sbb
jl
inc
xlat
cmp
inc
movsl
lret
mov
inc
es
std
in
jbe
repz
in
aad
inc
jp
clc
jmp
imul
push
loope
push
dec
inc
xor
add
dec
ja
cmp
stc
dec
call
jbe
inc
imul
xor
mov
mov
cmp
je
testb
dec
loop
mov
jne
xor
lods
jo
lcall
sahf
push
pop
add
dec
test
loope
push
pop
mov
ret
ljmp
movsl
aam
jb
inc
movsb
lds
mov
ret
jne
pushw
mov
out
aas
movsb
sbb
xchg
aaa
rcr
mov
inc
je
cmp
sub
adc
bound
test
add
repz
sub
fs
shlb
xchg
fadds
cli
mov
arpl
adc
in
aaa
popa
loopne
push
xchg
dec
xchg
cmp
leave
sbb
mov
lret
int
push
sbb
xchg
pop
xor
scas
std
jmp
sbb
add
inc
jmp
xchg
mov
dec
add
jle
lahf
in
and
addl
aad
inc
fmuls
sbb
pop
sub
xchg
in
idiv
mov
outsl
mov
adc
push
xor
sub
push
pop
push
jl
xor
ljmp
outsl
sti
adcb
cltd
mov
into
dec
sub
inc
pop
mov
mov
mov
sbb
int
push
add
xchg
push
loop
add
jp
cmpsl
push
and
pop
sbb
and
insl
sub
insb
imull
xor
and
mov
scas
imul
ret
pop
xlat
or
push
fdivrs
fidivrs
cli
pop
pop
mov
push
cld
push
pop
les
ror
dec
and
mov
dec
xor
or
or
xor
xor
imul
dec
aad
adc
sub
jae
pop
push
mov
pusha
mov
stc
hlt
popa
push
and
addr16
mov
adcb
shl
mov
sub
stc
or
or
lcall
leave
jg
and
add
arpl
xchg
js
dec
jg
and
adc
mov
loope
out
or
repnz
in
cmpsb
jb
mov
pop
rorl
imul
aas
xchg
push
mov
and
mov
mov
dec
and
mov
icebp
jo
jge
popl
flds
cmp
cmp
sbbb
sub
fcomps
int3
adc
adc
dec
aas
xor
and
fwait
rcr
jbe
ret
cmp
and
jnp
shlb
pusha
pop
jp
fistps
repz
fists
sub
lock
dec
jb
lods
in
inc
or
je
mov
scas
mov
mov
fisubrs
sub
pop
add
inc
xchg
cmp
sahf
sub
mov
mov
test
lods
push
pop
bound
mov
ss
cld
mov
mov
push
shll
dec
out
mov
push
mov
sub
mov
testl
stc
and
loopne
rcr
imul
pop
nop
jp
or
repz
leave
mov
insb
push
jb
inc
push
mov
mov
inc
add
in
jecxz
dec
xorl
pop
jne
orb
fdivp
or
jmp
cmp
cwtl
scas
mov
inc
push
jbe
insl
dec
sbb
cli
adc
mov
shrl
lcall
pusha
and
sub
test
push
sbb
and
inc
mov
mov
sbb
or
or
jg
xor
mov
xlat
cmp
ds
adc
pushf
imul
sbb
dec
cmp
xacquire
lds
call
sbb
jb
lock
mov
sahf
add
sub
fcmovu
in
insb
shrb
mov
mov
mov
filds
cmpsb
mov
jl
cmc
jp
pop
cwtl
pop
ss
ret
push
sbb
movsl
test
cmp
js
mov
ljmp
xchg
xchg
imul
push
lret
out
lea
or
or
in
in
add
les
add
cmp
sub
fnop
push
aas
or
imulb
fwait
and
pop
lea
push
test
fdivrl
mov
and
push
mov
add
out
loop
mov
jne
int3
mov
mov
ret
mov
xchg
or
xor
fsubs
jnp
cmpsb
inc
popa
aad
mov
popf
in
sbb
push
push
enter
sbb
add
cs
in
imul
scas
or
or
aas
push
ja
nop
push
int
jne
xchg
jb
in
sub
mov
rcr
loopne
call
jbe
std
sbbb
adc
mov
jecxz
popf
jae
xchg
sahf
jmp
dec
xchg
sarl
jge
or
scas
mov
sub
outsl
ljmp
sbb
pop
loopne
icebp
out
mov
push
inc
rol
ds
scas
sbb
dec
repz
mov
lcall
and
stos
pop
mov
repnz
mov
add
xchg
jbe
push
popf
divb
fadds
add
pusha
data16
pushf
popa
icebp
jo
bound
loope
mov
scas
frstor
pop
out
iret
setae
jp
lahf
mov
pop
enter
lret
adc
cltd
in
mov
out
in
inc
pop
movsb
sub
push
cmpl
and
fdiv
std
cmp
push
adc
pop
js
push
fstps
mov
jns
lods
fildl
fdecstp
mov
shrb
adcb
push
scas
xchg
mov
cmp
jmp
test
stos
call
xchg
sub
enter
push
xor
ror
mov
lods
xor
inc
xor
fs
popa
call
mov
lret
jp
aas
cwtl
sbb
or
pop
popa
or
cwtl
hlt
add
sbb
push
cmp
mov
xchg
xchg
notb
jo
push
into
xor
mov
imul
inc
and
ficoms
pop
fs
lahf
lahf
lea
jo
ret
fs
pop
dec
fldenv
sbb
and
push
mov
sub
adc
xor
xor
ljmp
mov
sbb
stc
mov
pop
lds
stc
xlat
scas
aaa
fs
xorb
jae
mov
add
popa
mov
loope
mov
pop
andl
aam
cmpsb
hlt
cmc
mov
xchg
es
cmpsl
lahf
sbb
loopne
clc
cmpb
and
cmp
int3
and
lret
andnps
dec
movsb
popa
movsl
imul
cmc
mov
dec
sbb
push
lods
xor
sbb
adc
test
shrb
out
ds
sub
fwait
cmpl
cmp
and
push
inc
in
and
icebp
mov
mov
inc
lods
pop
sub
dec
aaa
in
or
lcall
push
mov
mov
mov
lea
cmc
shll
loop
insl
aam
sbb
movsb
cmc
outsb
ret
push
push
mov
std
scas
adc
cld
and
mov
mov
rcll
add
lock
in
xor
sub
adc
inc
xor
xchg
xor
pop
xor
pop
xchg
hlt
in
pop
push
pop
jmp
jnp
fcompl
mov
lea
jmp
outsb
mov
or
jbe
sub
dec
mov
pop
hlt
mov
stos
into
fdivs
cmpsb
lock
push
xchg
inc
outsb
mov
mov
mov
xor
lret
jno
jp
inc
mov
or
inc
cmp
insl
pcmpeqb
mov
addr16
mov
xor
cmpl
xor
frstor
out
or
icebp
bnd
int
jno
and
mov
jg
sub
orl
mov
js
push
pop
mov
mov
inc
xchg
je
mov
in
xchg
pusha
mov
add
pushf
mov
aas
imul
sub
jle
or
loopne
mov
lahf
sbb
ljmp
fwait
rclb
int
popa
std
mov
ja
inc
scas
int3
clc
xor
jg
xchg
cmp
lcall
je
arpl
mov
inc
jne
push
test
aaa
fisubrs
push
mov
cmc
push
popa
pusha
sbb
and
insl
and
daa
dec
pop
les
test
add
cs
jb
pop
outsl
jle
xchg
sub
lods
mov
out
cmp
adc
lret
hlt
push
leave
lcall
add
sahf
call
mov
xor
inc
decl
mov
mov
pusha
adc
in
stos
inc
push
lahf
mov
pusha
lock
das
bound
xchg
xlat
mov
mov
cmp
xor
adc
nop
mov
mov
sbb
iret
xchg
mov
jecxz
test
mov
xor
push
push
and
adc
arpl
popa
sub
or
sti
jg
cmp
subb
fisttpl
xchg
in
sub
inc
dec
incb
mov
sahf
cmovl
add
xor
add
es
aad
int
xchg
movsb
mov
or
jp
mov
shrb
int3
sub
and
xor
push
inc
inc
fistpl
mov
icebp
jecxz
sbb
adcb
ret
push
cmp
fldt
push
xor
inc
xchg
or
mov
out
fimuls
leave
flds
xchg
sub
pop
sub
mov
mov
orl
daa
xor
imul
int3
filds
add
test
mov
data16
push
cwtl
mov
jge
sti
lahf
push
sbb
lret
pop
clc
jne
sub
out
fmull
hlt
test
sub
out
push
adc
push
or
int
repz
insb
inc
jb
xor
xchg
adc
jne
imul
das
cmp
movb
sahf
mov
push
jo
popf
cmp
imul
mov
push
sub
xor
adc
xchg
push
arpl
pop
into
and
data16
fsubrl
in
mov
jmp
inc
dec
insl
sub
xlat
adc
push
add
cmp
lahf
xor
xorb
mov
in
jo
iret
mov
and
pop
fldz
movsl
fsubrl
jae
fdivrl
movsl
pusha
ja
xchg
in
xor
in
cmp
jns
mov
imul
fstl
xchg
mov
and
rcrb
andl
loope
mov
xor
cli
cmp
insb
lret
dec
xor
pop
int3
jne
inc
ja
test
sub
rol
mov
sub
jbe
xor
push
icebp
neg
cmp
lret
outsl
mov
or
arpl
sbb
cmp
fs
push
ret
jl
adc
addr16
out
push
xor
lret
in
dec
icebp
or
adc
fiadds
sub
fsubrs
add
mov
pop
stc
cwtl
aaa
dec
stos
mov
call
stos
pop
stos
idiv
push
pop
lods
mov
cmc
outsl
dec
and
js
pop
in
lods
mov
pushf
dec
movsl
pop
add
cmc
mov
mov
inc
and
insb
xor
adc
mov
push
pop
inc
inc
sub
push
icebp
jnp
mov
mov
adc
fnclex
and
pop
in
call
sbb
jle
mov
mov
mov
xchg
push
sub
rclb
jnp
ret
jbe
lcall
push
xor
orb
aam
pop
xchg
adcl
in
imul
je
cmp
data16
xchg
movsl
cwtl
in
movsb
out
and
orl
jns
or
or
mov
fisttps
dec
push
lret
dec
jne
decb
sbb
cltd
sub
xchg
mov
jle
mov
ljmp
mov
xchg
mov
in
xchg
orl
sbb
out
inc
inc
cltd
mov
repnz
mov
sbb
cwtl
cmp
push
aad
dec
sub
ret
cld
aaa
je
call
scas
dec
clc
dec
push
test
jmp
fisttpll
repz
mov
test
fs
lods
push
pushf
mov
repz
aas
fldl
inc
jecxz
stos
popa
jl
cltd
and
push
xor
mov
mov
xor
sub
fists
mov
push
das
ds
inc
mov
dec
stos
jl
lahf
cltd
mov
repz
arpl
sbb
aaa
imul
lods
inc
jne
lcall
xor
dec
shrl
addr16
mov
mov
stos
jge
call
cli
cmc
shrl
aad
jle
inc
sub
inc
mov
out
mov
test
dec
mov
sbb
xchg
jge
jb
sahf
xchg
in
aam
lea
push
mov
adc
lock
dec
sub
sub
fsub
and
mov
daa
clc
aam
jb
fcmovu
xor
jns
scas
insl
rcl
cmp
xor
out
movsl
mov
mov
add
cmp
movsb
mov
das
leave
push
mov
jbe
std
pop
outsl
push
iret
pop
jl
clc
pop
jle
nop
in
inc
add
mov
mov
bound
push
xor
xchg
sbb
mov
filds
jae
and
jge
mov
fs
mov
fisttps
jg
in
gs
pop
or
fnstenv
adc
pop
dec
jle
ja
in
sbb
iret
pushf
and
jp
cmp
aam
or
xchg
sbb
fisttpl
xchg
and
push
xchg
ds
test
lds
and
mov
aas
mov
lods
and
dec
test
cmpsl
add
push
in
pushf
adcl
and
data16
cmp
pop
mov
cli
mov
xchg
jp
cmpsl
in
iret
sub
popf
dec
push
jne
fs
xchg
ucomiss
mov
pop
cwtl
fldcw
mov
scas
mov
inc
popf
xchg
jb
clc
leave
scas
jne
sbb
in
fsubp
jl
mov
xor
lods
rorl
test
lret
ret
dec
xor
loop
inc
and
mov
icebp
jmp
xor
lods
and
pop
and
pop
cld
cmp
ss
popa
cmp
mov
js
adc
xor
xor
fnstcw
cmp
and
cmp
pop
popf
rcrl
cmpsb
adc
and
xchg
clc
movsb
xor
lea
mov
loope
subl
mov
lods
test
js
int3
push
inc
cmp
adc
and
mov
sbb
mov
or
mov
xchg
loop
adc
sub
sbb
in
xor
roll
sbb
sub
jecxz
loopne
inc
aas
lret
fadds
sbb
nop
pop
inc
fnstsw
xchg
dec
clc
repz
incl
push
imul
lods
xchg
inc
cmp
shl
das
pusha
add
dec
and
je
mov
cmp
xchg
fidivrs
mov
mulb
clc
inc
xchg
in
lea
pop
or
in
inc
cmp
mov
negb
inc
cwtl
movsl
push
pushf
inc
mov
sbb
add
lret
ret
lcall
xor
das
xor
ljmp
dec
mov
stos
and
dec
in
int
out
xchg
cmp
dec
sub
test
pop
outsb
xchg
pop
aam
xor
jmp
out
or
push
inc
and
or
les
ret
and
popl
xorb
leave
pop
sbb
dec
jecxz
cli
incb
inc
pop
adc
addr16
fnsave
pop
mov
jno
jo
std
dec
and
lcall
push
scas
stos
add
cmpsl
jecxz
sub
sti
ficomps
clc
push
sub
or
lods
xchg
pushf
icebp
adc
in
mov
mov
clc
sbb
loop
adc
pop
pop
mov
loope
add
mov
loop
ss
mov
add
arpl
js
jl
repnz
popa
fucomi
mov
mov
and
dec
mov
push
pop
test
mov
fprem1
sub
lods
ss
ss
mov
fcoml
lret
in
add
aam
adc
outsb
in
or
sti
mov
andb
out
xor
pop
ret
adc
inc
inc
jg
data16
push
leave
mov
pop
mov
dec
mov
icebp
mov
scas
mov
shll
js
jmp
xor
dec
xor
jl
push
insb
sub
push
es
xchg
xchg
mov
mov
ret
icebp
and
sub
sbb
pop
test
push
pop
sub
pop
xchg
arpl
adc
or
jo
cmp
inc
jb
adc
idivl
or
notl
std
pusha
push
jl
jmp
dec
aas
fsub
jecxz
repnz
pop
push
std
adc
mov
aaa
call
je
pop
movsl
rclb
mov
js
js
test
lea
je
out
lds
push
sarl
dec
xchg
or
fisttps
and
out
sarb
aam
xchg
sahf
fcompl
mov
adcb
aad
ss
mov
sub
jp
jge
pop
add
mov
push
clc
pop
fiaddl
push
sbb
sbb
xchg
push
mov
jb
cmp
iret
lahf
push
inc
movsl
cld
cmpl
lret
push
jo
or
ljmp
test
out
sub
in
mov
dec
inc
cmp
cld
ret
xor
cwtl
int
stc
call
stc
insb
pop
iret
test
push
or
aaa
add
dec
icebp
mov
je
dec
cmpsl
or
adc
rcll
add
sub
insl
push
cltd
or
pop
sub
push
les
add
test
les
mov
test
push
iret
mov
lods
mov
ljmp
inc
jb
dec
jno
xchg
pop
mov
lods
mov
addr16
jmp
cld
pop
inc
mov
dec
mov
lock
cmp
ljmp
sti
mov
rolb
xchg
cmp
mov
enter
add
xchg
jae
push
sub
and
adc
nop
movsb
xor
mov
addl
addl
out
push
fsubs
imul
lods
fstp
mov
cmovbe
mov
pushf
dec
outsl
fsubrl
adc
rcrb
shlb
xchg
cwtl
pusha
icebp
push
rorb
ss
flds
shrl
and
add
push
scas
rcr
cmpsl
popf
dec
je
cltd
and
call
mov
sub
pop
ljmp
stc
mov
push
mov
movsb
pop
les
dec
push
mov
cmp
outsb
data16
and
xchg
xor
out
test
push
outsb
jb
fbld
enter
cmp
xor
add
sarb
add
sub
add
aad
inc
pusha
mov
loopne
pop
push
hlt
sahf
jb
dec
test
outsl
or
mov
leave
lods
cmp
sbb
dec
popf
jb
xorb
xchg
xor
mov
mov
or
andb
sub
aam
sti
leave
mov
lret
ljmp
lret
imul
outsb
mov
inc
cmp
lcall
inc
fisubrl
dec
rcll
cltd
inc
cmp
add
insl
mov
push
mov
push
push
jecxz
ret
and
cmp
idivb
in
je
lret
scas
not
jae
sbb
insb
imulb
pop
cmp
jp
cwtl
divl
lods
lods
or
and
sbb
int
js
rclb
xchg
insl
fdivp
adc
pop
sbbb
push
mov
xchg
sub
lret
jl
cmpb
push
inc
ljmp
cmp
adc
scas
test
mov
ljmp
mov
fwait
out
leave
gs
pop
xchg
test
daa
insb
mov
jl
jnp
je
push
arpl
push
shll
out
xor
mov
loop
dec
add
js
xchg
sub
mov
mov
jae
fisubrl
pop
push
xchg
cmpsl
setp
out
pushf
jle
data16
dec
push
ret
inc
xor
sahf
and
outsl
in
mov
xor
xchg
push
inc
scas
jne
sub
pop
push
hlt
lret
lahf
xchg
xor
popf
inc
les
fistpll
xchg
roll
cmpb
jge
mov
push
bnd
sbb
mov
sbb
cmp
push
add
mov
adc
popa
repnz
add
lret
into
rcrb
push
xor
push
dec
dec
inc
mov
dec
xlat
into
mov
lret
add
sbb
gs
mov
cli
outsl
iret
adc
ret
or
cwtl
ret
jmp
mov
lods
xchg
xchg
subb
scas
cmc
sbb
mov
fldl
and
pop
and
das
add
out
xchg
push
jge
aad
adc
jne
cmpsb
int
call
add
pop
mov
xor
sbb
and
mov
movsl
cld
inc
lods
fimuls
cltd
mov
dec
cltd
jno
and
adc
mov
stc
push
lret
popf
cwtl
cmp
xchg
adc
dec
push
stc
into
cmp
add
sub
out
dec
dec
rcrb
adc
clc
test
imulb
mov
iret
sbb
in
shrb
cld
jns
jae
mov
aam
and
adc
pop
push
add
push
sub
pusha
mov
pop
add
aaa
or
loopne
pop
les
and
mov
push
cld
mov
mov
jno
shrb
xchg
sub
add
pop
pop
andb
add
mov
outsb
and
pop
dec
xchg
inc
cmp
mov
add
pop
ja
lcall
jnp
pop
push
iret
testl
jg
sub
mov
test
cmpsb
push
adc
pop
cmp
or
cmp
mov
jb
sbb
lds
cwtl
call
pop
scas
aas
movsb
mov
mov
add
inc
add
mov
and
jle
jmp
imul
les
mov
fs
stc
xchg
fwait
clc
sahf
popf
xchg
nop
and
ret
mov
out
cmc
mov
mov
jno
mov
cwtl
lds
mov
shr
jecxz
test
or
adc
mov
arpl
aam
fistps
clc
loop
cmp
mov
jmp
add
push
xor
mov
orl
xchg
mov
adc
daa
leave
fucomi
jmp
push
or
xor
test
minps
iret
dec
adc
int
push
das
adc
pop
lcall
dec
add
inc
clc
cld
xchg
shlb
daa
imul
pop
dec
clc
popf
out
xchg
or
je
add
mov
mov
rcr
mov
rorl
xchg
popa
xor
clc
dec
and
xchg
inc
and
push
cmpl
pop
sbb
xchg
cmp
push
je
in
xor
pop
jmp
push
fwait
xchg
out
adc
sub
jl
filds
inc
and
push
sbb
jmp
pop
mov
dec
jl
xchg
mov
mov
stc
iret
movsl
test
clc
out
sub
mov
lea
xchg
jns
mov
int
inc
add
xor
lret
mov
icebp
out
mov
sti
jno
xchg
xchg
mov
negl
lods
pushf
and
jnp
and
les
xlat
inc
enter
jnp
scas
lret
or
sub
push
pop
or
mov
loope
push
cmp
outsl
dec
push
fcoml
lcall
mov
pop
add
cmc
push
call
mov
push
test
add
aaa
add
mov
add
push
aad
cmp
stos
fld
fists
dec
mov
or
scas
xor
dec
in
xchg
fistpl
jno
xchg
mov
movsl
or
and
and
jae
outsb
cmp
icebp
dec
adc
push
sti
ror
add
mov
out
mov
jecxz
mov
pop
lret
cmpsb
out
adc
fidivrl
inc
pop
test
add
pop
jne
fldenv
mov
sbb
daa
push
imul
orb
jbe
push
dec
lods
mov
jg
mov
dec
add
ljmp
out
cmpsl
inc
clc
xor
add
fistps
xlat
pop
je
pop
xchg
sbb
add
divb
repz
xor
mov
les
jbe
pusha
rcll
dec
outsb
out
aam
xor
fs
js
or
insl
bound
rcr
cmc
ficomps
xchg
lds
dec
xchg
push
lock
stos
scas
inc
fisubl
popf
jnp
inc
cld
or
inc
mov
arpl
stc
sbb
push
mov
cmpsb
pop
sbb
vprotd
lock
xchg
cmp
push
pop
xchg
mov
pop
xchg
jecxz
cmp
inc
mov
pop
inc
pop
adc
or
cmc
push
aad
jg
insb
inc
test
and
xchg
lods
mov
mov
xchg
popa
push
fsubrs
sbb
and
mov
sbb
xchg
mov
pusha
lods
outsb
aaa
and
push
pushf
sbb
popa
pop
inc
jmp
dec
add
adc
out
loop
push
inc
jo
mov
jmp
jle
add
scas
and
add
sbb
dec
fucomp
cmp
test
pop
shr
xchg
lods
inc
add
xchg
movsb
xlat
clc
push
mov
popf
sub
sub
cmp
add
dec
dec
cmpsl
pop
aam
pop
lods
lahf
lcall
sahf
mov
mov
push
xor
aaa
jnp
push
rorb
jge
mov
xchg
adc
add
push
sti
js
jl
mov
add
dec
gs
or
dec
xor
mov
inc
add
fwait
movsl
cltd
dec
jo
call
or
gs
js
cli
or
iret
add
popa
divl
push
cld
cmpsb
fldt
out
jo
aam
gs
fildll
jne
sbb
movsl
sbbl
clc
jmp
mov
movsb
nop
xchg
cmp
mov
adcb
rorl
add
add
outsl
insl
loop
dec
pop
cmc
pop
mov
int
xchg
xchg
dec
mov
iret
lret
mov
int3
stos
jmp
add
jp
and
mov
lret
jne
or
subb
out
rcll
pop
out
push
iret
push
das
or
scas
imul
xchg
xor
inc
mov
and
les
inc
pop
aad
mov
iret
insb
xchg
gs
cltd
jge
mov
or
push
in
lahf
rcll
pop
aaa
cmp
adc
shll
mov
out
cmpsl
aaa
aad
xchg
rcll
icebp
cwtl
mov
sarl
cmp
fisubs
adcl
ficoml
mov
lock
inc
add
sbb
mov
into
rdpmc
cwtl
repnz
sarl
jno
xchg
lret
mov
or
xchg
cmp
lods
jo
sbb
sub
mov
inc
fisubl
clc
adc
aaa
cmp
adc
int
mov
mov
les
rolb
sbb
xor
cmpsl
pop
or
jp
push
cld
jo
add
or
push
das
cmpsb
xchg
xor
movsb
cmp
popa
xchg
js
mov
push
push
mov
out
push
adc
aaa
mov
xchg
and
add
xor
cmp
jmp
mov
inc
ds
cld
or
loop
adcb
add
cltd
mov
movswl
pop
stc
mov
icebp
jl
pop
in
jl
inc
jne
mov
inc
sbb
cmpsb
rolb
sub
in
fstpt
ficompl
mov
xchg
xor
test
push
hlt
sbb
je
out
adc
mov
adc
pop
mov
rolb
mov
test
test
cli
lods
xchg
mov
aaa
call
xchg
jne
jne
call
leave
mov
mov
in
xchg
pop
insl
push
push
mov
loope
jecxz
lea
push
imul
fwait
loop
insb
and
or
dec
ret
fidivrl
and
lret
lea
add
mov
adcb
add
aad
gs
inc
inc
stos
lcall
gs
or
dec
inc
ja
adc
pop
lods
pop
sbb
dec
jne
sub
scas
jne
js
or
dec
adcl
adc
adc
notb
dec
insl
push
adc
push
outsl
cmp
sbb
daa
cmc
scas
push
cmc
nop
cmp
fdivrs
mov
cs
xor
sbb
arpl
jmp
jmp
mov
add
dec
dec
stos
lock
pop
add
and
imul
push
jle
shr
test
loop
insb
in
mov
loopne
lea
repnz
xchg
pop
int3
mov
jle
clc
fstl
push
adc
aaa
bound
movsb
out
fcoml
jb
mov
jmp
mov
xchg
mov
ret
fsubl
xchg
dec
mov
jae
in
push
rep
mov
out
push
loopne
insb
popa
mov
into
dec
mov
cmp
aas
hlt
cmp
jl
cltd
rorb
fdivrs
int
ja
sbb
mov
xor
lret
pop
arpl
inc
rol
mov
adc
xor
push
mov
jns
inc
push
sub
aas
movsb
jb
in
pop
stos
lods
adc
clc
mov
ja
cltd
sbbl
xor
mov
fldl
jae
mov
mov
cmp
movsb
sbb
scas
fdivl
sbb
and
int
out
push
iret
pop
test
loope
int3
mov
inc
adc
fidivl
sub
xlat
push
pop
mov
mov
sbb
loope
mov
je
mov
push
outsl
loop
and
sbbl
popf
icebp
cmp
sahf
jecxz
pop
sbb
jnp
add
jl
xor
mov
push
add
stc
cmc
imul
jne
sbb
adc
mov
lea
mov
mov
sbb
loopne
out
xchg
mov
and
xchg
out
cmc
lcall
jle
dec
aaa
xorl
aas
loope
mov
sbb
imul
mov
mov
xchg
pop
push
aam
lds
xchg
xor
sub
and
mov
ljmp
scas
mov
lcall
test
and
shr
inc
xchg
push
aas
pop
std
mov
popf
xchg
data16
mov
stc
aad
or
dec
and
sbb
dec
lahf
pop
inc
xor
mov
inc
cmovl
mov
pop
cmc
test
das
fisubrs
cmp
lret
xchg
pop
or
lret
sbb
call
scas
lahf
sbb
xchg
cmp
loopne
out
sbb
daa
cwtl
jmp
addb
cld
outsb
call
xchg
arpl
mov
pop
push
cwtl
es
inc
cmp
jns
out
cmp
ds
and
scas
loop
xchg
pop
lods
cwtl
mov
and
mov
lret
sub
xor
mov
fsubs
xor
xchg
aaa
cs
or
adc
sbb
lahf
cmc
xor
cmp
and
push
shll
push
cmp
jne
adc
cmp
mov
clc
mov
push
cmpsb
mov
inc
mov
cmpsl
jo
dec
jnp
out
in
xchg
sti
push
fadd
inc
cmp
sbb
ss
add
ficoml
ljmp
cmp
fs
in
test
xor
mov
movsb
jp
add
std
xor
insl
insb
dec
push
jecxz
fsubrs
ret
and
sub
xor
loope
jnp
fstpt
xor
imul
ds
je
adc
push
pop
push
sbb
xor
inc
shll
les
addb
sbb
popa
into
test
aam
out
test
cmpsb
repz
iret
mov
sbb
aam
pushf
iret
pop
aam
adc
push
and
rclb
inc
loop
mov
inc
cwtl
cmp
incl
mov
fiaddl
outsb
xchg
rcll
sub
inc
shrl
hlt
pop
std
mov
jl
xchg
int
nop
pop
pop
jno
xchg
in
cmp
fucomi
jge
ss
sti
fdivl
pop
inc
inc
movsb
in
or
jmp
sub
aaa
cmpb
ljmp
add
iret
jmp
jnp
addr16
mov
pop
test
lahf
inc
pop
dec
cs
int3
and
pushw
sbb
cmp
js
ror
xor
mov
sbb
xchg
roll
or
pop
into
aam
fistpll
fisttps
cmp
mov
out
adc
pop
push
push
xchg
stc
mov
daa
mov
mov
adc
push
inc
dec
xchg
pop
stos
dec
xchg
pushf
les
jge
inc
cltd
das
cmp
enter
cmpsl
push
and
add
pop
push
std
inc
sbb
mov
add
xlat
mov
pop
inc
cs
rcll
xchg
lret
jle
jne
add
ret
cmpsl
and
es
and
js
fwait
pop
and
inc
add
xor
sbb
push
or
rcr
ret
xor
imul
xor
xchg
jmp
sbb
out
jne,pn
jb
mov
mov
fwait
jo
mov
adc
adc
imul
fs
push
pop
cmp
scas
jns
sbb
test
cmc
mov
jns
or
jns
mov
adc
push
andb
sub
xchg
les
add
stos
mov
sub
or
jle
and
adc
popa
xor
or
scas
mov
jno
rcrb
inc
pop
cmp
nop
icebp
mov
je
in
fidivs
add
shlb
xor
out
mov
fdivl
jp
or
pop
mov
mov
sti
sbb
scas
adc
dec
push
push
aas
push
mov
mov
jg
loopne
xchg
xchg
push
jge
test
popf
sti
fdivrl
pop
pop
pop
in
sub
ret
outsb
jmp
cmpsb
sbb
jmp
and
lock
repnz
shrb
mov
sub
sub
dec
das
mov
test
lods
mov
mov
in
pop
sub
adc
scas
insl
pop
movsl
imul
inc
sti
mov
test
jae
pop
fdivs
lahf
flds
bnd
scas
jne
jecxz
inc
mov
dec
pop
push
inc
inc
setns
push
sub
pop
fisubl
ljmp
mov
lock
fdivl
fnstcw
sub
cmpsl
enter
out
negb
adc
push
dec
fmull
call
dec
leave
jae
pusha
dec
out
or
jo
mov
roll
inc
sub
jp
aas
mov
cmp
add
lcall
insb
adcb
inc
mov
sti
mov
adc
hlt
mov
adc
mov
and
push
ficompl
pusha
dec
dec
sub
cwtl
pushf
and
aas
jg
pop
push
out
push
movsl
xor
mov
pushf
mov
arpl
sbb
pop
dec
push
jg
imul
cwtl
test
out
ss
mov
mov
or
int3
jg
pop
mov
lea
pop
dec
inc
loop
or
stc
jecxz
iret
pop
push
lods
fildll
imul
fidivs
pushf
ret
dec
les
jns
pop
dec
adc
or
xchg
mov
push
gs
sbb
pop
insl
lock
or
and
dec
cs
cmp
gs
rolb
pop
shlb
fsubrs
mov
jns
mov
in
ror
pop
hlt
cld
sub
adc
pop
push
xor
push
sub
mov
cltd
mov
subl
mov
mov
or
jbe
adcb
out
mov
adc
fisubs
push
aaa
push
testb
fiaddl
rclb
cli
dec
mov
dec
shlb
mov
mov
sub
cmpsl
mov
jle
jae
mov
clc
mov
xchg
out
fstl
cmp
jns
push
pop
pop
sbb
push
addr16
daa
push
in
or
loope
les
dec
xchg
and
jge
dec
sbb
setno
les
repnz
adc
and
enter
jnp
scas
xchg
mov
push
dec
je
iret
mov
inc
mov
fstpt
nop
add
sub
addr16
jae
cltd
jb
or
sbb
bound
lret
rcll
push
lea
jbe
jnp
repz
xorb
cmp
aaa
mov
aam
sbb
xlat
jns
inc
inc
adc
fs
test
and
jge
stos
jg
daa
out
fstp
loop
mov
cmpsl
cld
adc
jecxz
pop
sub
jg
aas
inc
mov
mov
xchg
adc
clc
pushf
jnp
pusha
sbbb
aas
dec
pop
rclb
mov
mov
mov
and
aas
iret
fists
jmp
and
rorb
stos
jne
mov
cltd
mov
dec
shlb
imul
push
sub
push
push
jle
push
sbb
xor
xchg
mov
lcall
int3
loope
push
add
inc
or
push
pop
pusha
repz
ret
inc
and
es
aad
lods
cwtl
and
inc
pop
mov
jmp
inc
aaa
and
aam
xchg
lock
jb
xor
fstl
jmp
adc
dec
lods
mov
xlat
dec
bound
mov
mov
sub
push
xlat
mov
pop
in
gs
mov
sahf
jecxz
sbb
adc
adc
sti
call
imul
mov
jecxz
je
clc
add
cmp
jecxz
pop
xchg
mov
pop
iret
mov
jb
push
js
jp
addr16
rcrl
inc
fistl
ret
lea
jmp
mov
ds
gs
inc
loop
cmp
leave
pop
mov
outsl
arpl
cmp
imul
loope
dec
scas
cmp
ljmp
jecxz
and
cmp
das
dec
stos
sub
cmpl
shrl
hlt
dec
push
cmpsb
and
dec
fwait
or
ljmp
das
popa
insb
in
adc
push
decb
or
mov
mov
mov
unpckhps
xchg
sub
stos
and
pop
pop
iret
pop
stos
fldl
fwait
adcl
xchg
rol
jecxz
mov
int
lcall
pop
test
mov
add
ja
ss
rorb
cmpsl
out
adc
cld
and
add
push
ret
sbb
jge
shl
sti
adc
adcl
push
mov
push
int
fbld
std
scas
leave
outsb
push
cmc
add
das
and
sbb
mov
stos
dec
inc
test
mov
xlat
into
lock
lahf
stos
jge
sub
movsl
sahf
and
inc
add
in
and
iret
lock
ljmp
in
jle
xor
and
cld
cmp
adc
cmp
dec
adc
sbb
mov
arpl
ret
hlt
inc
mov
jp
inc
fimull
inc
mov
xor
jno
das
fcoml
js
imul
lods
xchg
sbb
pop
sbb
idivb
fdivl
out
in
sub
aas
cmpsl
daa
inc
jne
mov
jl
mov
or
stos
aam
clc
jbe
adc
outsl
mov
out
dec
jle
pop
and
mov
jno
mov
jle
push
jnp
lret
adcb
xchg
push
movsb
cmp
out
fdivp
jge
ss
lods
sub
mov
int
testl
std
cmpsb
fbstp
jp
cltd
mov
sub
inc
scas
push
data16
sub
push
inc
cmovns
test
aaa
sbb
inc
push
icebp
push
mov
ret
push
jno
aaa
mov
add
sub
push
cmpsl
lahf
adc
sbb
mov
daa
cltd
jmp
jne
sub
clc
cmc
and
xchg
ja
stc
adc
or
jnp
ja
in
adc
push
gs
jmp
lahf
jne
or
inc
push
sub
or
test
jle
cwtl
mov
xor
mov
test
out
insb
daa
mov
mov
and
xor
pop
aad
jg
dec
mov
xor
enter
hlt
in
test
cmc
fcoml
lret
or
loop
jmp
in
repz
sbb
sbb
add
mov
mov
stos
rclb
or
xchg
enter
cwtl
lcall
or
sbb
or
adc
mov
pop
jl
dec
ror
sbb
movsl
ss
xchg
sub
add
je
xchg
test
adc
outsb
sub
pmullw
fs
lea
data16
std
jmp
push
pop
sub
repnz
mov
jl
int3
mov
pop
bound
jp
orb
js
mov
andl
sbb
ffreep
cmp
dec
push
out
repz
adc
and
cmp
push
sub
outsb
mov
pop
mov
mov
mov
fiadds
insl
stos
xchg
ss
mov
xlat
fwait
clc
mov
sbb
xchg
sub
mov
mov
ror
fdivrl
int
rol
repnz
sub
fwait
sub
out
sub
jb
jmp
shrb
adc
andl
jbe
stos
xchg
lret
cmp
mov
jp
pop
in
cwtl
lret
out
pop
sbb
orl
insl
ret
push
cmp
add
xchg
mov
jo
or
fs
mov
fwait
arpl
cwtl
mov
leave
fnstsw
or
jl
hlt
mov
xchg
add
cli
xor
es
mov
adc
scas
pop
adc
mov
cmpb
and
or
loopne
xlat
lds
out
adc
sbb
add
rcrb
out
dec
inc
stos
js
mov
fisubl
push
or
pushf
xor
adc
or
mov
cltd
dec
adc
sti
shll
jge
mov
mov
stos
jp
inc
pop
test
cmp
jo
add
fcomps
add
cwtl
xchg
aam
fninit
mov
jae
rolb
dec
pop
loopne
shll
mov
mov
insb
popf
imul
sub
dec
in
roll
and
push
or
lock
scas
popf
lahf
adc
push
jmp
mov
decb
outsl
movb
and
add
movsl
pusha
repz
jle
dec
loope
inc
or
arpl
or
push
pop
inc
ficompl
pop
jl
xchg
and
fs
leave
orl
fcmove
jl
dec
loopne
pop
aas
sbb
inc
pop
pop
jmp
pusha
push
or
pop
or
push
pop
ret
jle
inc
lock
jns
repz
cmpl
sti
jecxz
jbe
jno
add
cmp
rolb
test
test
ficomps
inc
fisubrs
shlb
fwait
mov
mov
nop
inc
pop
inc
std
adc
mov
xchg
mov
mov
cld
int3
outsb
pop
cs
adc
movsb
xor
or
sub
jne
cmp
sub
sbb
mov
and
xchg
stos
adcb
sarb
ss
sub
call
icebp
clc
fistl
fidivrs
mov
mov
lds
push
test
orb
or
rcr
inc
xchg
in
push
adc
nop
lods
repz
add
fsub
sbb
xor
hlt
adc
adc
imul
insl
insl
push
push
fdivrs
mov
sub
push
jecxz
sbb
arpl
out
mov
mov
fisttps
test
repz
push
xor
sbb
jno
lock
add
lea
les
dec
out
push
sti
cmp
es
sti
rolb
xchg
les
mov
rol
jmp
ljmp
push
xor
jmp
mov
inc
repz
xor
rorl
xchg
gs
gs
push
dec
sbb
inc
mov
faddp
in
into
mov
sbb
push
gs
stos
cmp
jmp
cmc
dec
or
sbb
shlb
ds
rcl
leave
mov
cmc
roll
ret
dec
cmp
addl
pop
push
push
jge
sub
pusha
shl
add
and
loope
dec
add
fistpl
leave
add
ss
in
cmp
inc
jle
cs
xor
pop
pop
pop
imul
mov
scas
negb
arpl
hlt
sahf
lock
mov
sub
fwait
mov
jg
cltd
dec
iret
pop
inc
mov
pop
rclb
and
jle
sub
lods
rolb
inc
sub
clc
leave
cmp
push
pop
lcall
dec
lods
test
add
sub
out
nop
fiaddl
inc
imul
push
push
add
in
or
cvtpi2ps
and
xchg
pop
lock
cmp
call
push
mov
leave
sti
push
push
test
imul
jnp
repz
shl
js
cltd
in
mov
xor
or
xchg
daa
dec
cmp
mov
add
fsubrl
cmpsb
lods
jle
xor
jl
shr
mov
cmp
pop
mov
cwtl
inc
lahf
arpl
sbb
pop
pop
or
sbb
ficoms
jp
ss
xor
jecxz
lea
aaa
sbb
pusha
lcall
lods
test
sub
xchg
cmpsb
or
lds
mov
mov
dec
addr16
xchg
xor
ret
push
push
fists
pop
sbb
add
dec
pusha
xor
cmp
fimuls
mull
mov
jg
fnstenv
stc
insl
adc
lret
sbb
ja
sbb
jg
in
mov
dec
mov
subl
adc
repz
jmp
jo
aaa
gs
pop
or
in
add
fistpl
stos
push
lcall
mov
out
scas
test
mov
pushl
js
cmp
jecxz
or
rol
out
lcall
inc
mov
mov
mov
push
leave
cmpsl
loope
adc
outsb
xchg
jge
enter
dec
push
xchg
iret
adc
lahf
dec
ss
push
inc
mov
sbb
daa
sub
das
sub
enter
push
movsl
sub
sub
cmp
mov
xor
inc
dec
xchg
or
in
xor
fldl
movsl
jb
cmpsl
adc
pushf
mov
fdivrs
fiaddl
mov
shlb
xchg
mov
js
lret
cltd
push
nop
adc
push
jbe
fcoms
and
loopne
jg
inc
aaa
lea
pop
sub
sub
mov
jbe
mov
shll
lcall
out
jmp
int
pop
cmp
rclb
cld
mov
mov
jns
xchg
mov
int3
adc
cld
popa
pop
in
lods
addl
pop
push
and
inc
stos
cmpsl
ret
xlat
je
lret
in
adc
inc
xchg
data16
mov
push
mov
call
imul
dec
in
enter
inc
push
lret
data16
or
pop
addr16
inc
cli
pop
dec
sbb
jg
lds
and
aas
xlat
in
out
shl
nop
dec
cmc
jp
inc
sti
jae
out
mov
cli
mov
push
fldt
sub
lret
fistpl
lret
jmp
sub
lea
xchg
aad
loope
pop
xlat
cmpsl
xchg
pop
jo
cmp
cmpsl
loopne
cmp
addr16
xchg
add
xchg
xor
fcomps
ss
mov
in
push
js
gs
ret
addb
insb
aas
lds
das
popf
dec
cmp
fs
xlat
pop
sbb
adc
test
push
xchg
pushf
sub
ja
jns
adc
or
test
loopne
pop
aad
push
cld
icebp
out
pushf
mov
add
xchg
or
loopne
out
fwait
sub
jp
imulb
xchg
or
xchg
scas
loopne
pop
xor
lock
je
cs
xchg
push
scas
repnz
pusha
cltd
mov
addl
lea
and
pop
mov
pop
mov
sub
pop
cmp
mov
xor
aad
into
sbb
and
scas
mov
bound
rol
test
dec
pop
repnz
push
mov
lret
xor
adc
int3
stos
loopne
jo
lds
mov
mov
ja
addr16
push
insb
inc
sbb
push
pop
sub
sbb
movsb
sub
sbb
enter
pop
pop
stc
gs
je
or
arpl
xchg
movsl
out
xchg
in
mov
fsubrl
push
ss
js
dec
dec
adc
mov
mov
sub
fwait
cmp
cwtl
adc
mov
cli
dec
jbe
mov
push
xlat
incb
aam
scas
mov
das
cmp
pop
orb
cld
push
inc
repnz
xchg
push
roll
fisubrl
push
xchg
test
nop
lods
pop
mov
mov
test
and
das
xchg
sbb
add
mov
or
cmpsl
pusha
adc
movl
mov
ficoms
repz
mov
add
outsb
fucomp
loop
out
test
fdivl
jbe
and
mov
xor
mov
mov
or
lret
mov
xchg
push
sub
repz
ret
sbb
xlat
or
dec
mov
inc
hlt
movsl
andl
mov
movsb
or
fnstcw
mov
inc
inc
subl
js
xorl
adc
movsl
ret
imul
and
cmp
or
inc
push
mov
push
xor
jo
cmpsb
lock
mov
jbe
dec
inc
outsl
sub
int
add
lods
jge
push
addr16
aam
ret
ret
sahf
jle
out
xchg
xor
enter
xchg
jmp
lock
or
and
push
fsubl
popf
sbb
in
jp
je
out
lahf
call
push
loope
sub
fisubrl
rorl
mov
aad
cli
loopne
dec
pop
enter
pushf
jne
fisubl
fs
test
leave
xor
dec
jl
dec
cli
mov
adc
dec
arpl
out
arpl
dec
and
jae
lret
in
mov
sub
mov
cmpsb
dec
xor
lods
xor
xor
jo
sub
fdivrl
or
in
mov
xor
dec
sbbl
mov
adc
mulb
pop
mov
into
xchg
faddp
outsl
icebp
pop
xor
sbb
xchg
pslld
sarl
loopne
mov
psrld
xor
push
pusha
inc
sub
repnz
pusha
jecxz
int
pushf
jb
mov
mov
ds
xchg
icebp
scas
aas
add
dec
adc
pop
sub
repz
insl
mov
fisttps
add
xor
stos
stos
mov
cs
lcall
outsl
and
inc
cmp
xchg
or
pop
dec
jle
addr16
loope
cmc
mov
add
repz
mov
pop
lahf
adc
xchg
cmpsl
out
in
gs
adc
fdivrp
sbb
inc
stos
xor
push
movsb
lahf
inc
mov
mov
mov
xchg
lahf
inc
enter
in
dec
pusha
adc
mov
ret
dec
pushf
shl
pop
cmp
jecxz
in
xor
adc
and
fnstcw
and
jae
addr16
adc
mov
mov
mov
lea
jge
push
loope
fldl
xor
lods
add
scas
xchg
adc
dec
mov
add
or
and
addb
jge
imul
mov
into
xchg
aas
pop
data16
xchg
pushl
jmp
inc
mov
pop
pop
test
pop
adc
outsl
mov
mov
gs
mov
test
dec
mov
in
lret
scas
add
xor
push
mov
or
push
sub
mov
sbb
push
pop
repz
lock
pop
adc
dec
stos
pushf
xor
in
dec
dec
inc
xor
mov
icebp
in
xchg
mov
aam
stos
ja
jae
cmp
test
loope
mov
leave
scas
xchg
call
jbe
test
ds
outsb
fs
jge
mov
push
push
cs
inc
insb
scas
testb
std
std
imul
out
jo
or
popf
popf
movsl
sarl
cmp
add
lods
cmp
push
je
add
inc
push
daa
xor
mov
dec
inc
popf
ljmp
lods
iret
push
push
nop
mov
and
mov
cmpsb
sahf
mulb
mov
in
sub
in
mov
xor
rclb
test
out
imul
mov
std
call
test
add
out
je
xor
cli
dec
mov
stos
insb
lret
dec
movsb
idivb
addr16
push
ss
mov
cmp
push
jnp
loop
aas
push
mov
aam
rorl
cmp
into
pop
insb
loopne
sub
adc
shll
sbb
hlt
clc
daa
inc
xor
int
add
ja
inc
pop
out
or
xchg
mov
cmp
pop
stc
jno
mov
orl
mov
shrb
lds
xor
xchg
mov
push
data16
test
sub
nop
jmp
std
add
push
dec
sahf
sub
clc
pusha
sbb
fwait
in
and
mov
mov
xchg
inc
push
lods
dec
mov
pop
jae
out
fildll
imul
xchg
xchg
push
cwtl
out
in
xchg
into
sbb
orl
aam
pushf
icebp
xor
fdivrs
fnstenv
aam
cmpsb
dec
sub
sub
fs
test
ds
js
push
cmp
mov
mov
jae
mov
sti
test
aas
nop
cmpl
ret
xchg
int3
jns
sub
xchg
jmp
cmpsl
push
daa
xlat
out
movsb
fbstp
jle
or
imul
sbb
cwtl
push
adc
cli
jo
cmp
mov
fwait
in
mov
jnp
jne
jb
fldcw
xchg
arpl
sahf
and
repnz
fnstcw
pushl
frstor
shlb
push
add
jge
xchg
jp
dec
jae
sbb
xchg
cmc
movsb
repz
andl
decl
data16
fstpt
loopne
lahf
mov
nop
pop
aas
pop
pop
mov
adc
loop
rorl
loope
cwtl
dec
movsb
mov
dec
int3
frstor
xor
data16
pop
stc
popa
dec
pop
jle
xchg
ds
add
cmp
adc
int3
movzbl
dec
cltd
sbb
test
lods
dec
in
dec
movsl
ljmp
dec
jns
xchg
ret
in
pop
test
ret
and
or
scas
push
shll
mov
stos
jl
dec
jp
pop
sub
mov
xchg
daa
sub
scas
cmpsl
lahf
mov
scas
frstor
cmp
sbb
add
subl
rcll
jnp
fwait
xchg
sbb
push
mov
pushf
sub
call
fadds
or
test
mov
test
cltd
lods
mov
adc
pop
or
lahf
adcl
jmp
icebp
outsl
or
lock
lods
or
aam
dec
push
fwait
shrb
jb
and
lcall
cmp
mov
mov
stos
xor
or
clc
sti
les
aas
outsl
aad
and
stc
call
push
xchg
xor
subl
push
nop
xchg
push
sub
adc
mov
insl
push
cmp
les
cmp
and
into
aas
mov
out
mov
ds
popf
jno
push
push
imul
icebp
pushf
or
pop
cs
dec
in
lea
jp
sbb
jle
dec
scas
popf
adc
jnp
adc
fldl
sub
add
test
jmp
pop
or
notb
test
xchg
sub
inc
rcll
popf
cmp
stc
jmp
icebp
icebp
mov
adc
jnp
mov
mov
cmp
fists
xchg
pushf
xchg
adc
jmp
inc
rolb
fcomi
imul
das
add
or
cmp
outsl
leave
jae
inc
xlat
inc
neg
dec
jbe
jmp
pop
in
mov
fstpl
push
xor
push
sahf
jl
mov
pop
loopne
cli
fcmovne
in
or
movsb
in
xorl
inc
jbe
push
in
test
out
rcrb
repz
test
or
cltd
xchg
sub
ret
das
movl
jo
sbb
lcall
cwtl
jle
xchg
pop
cmp
inc
jg
enter
mov
pop
add
push
sub
dec
mov
cld
sbb
sahf
sub
sbb
adc
pop
adc
mov
mov
int
insb
jb
sub
xor
jmp
sti
dec
jp
mov
push
push
sbb
sbb
inc
dec
ja
pop
sbb
jl
cmpxchg
or
jp
push
ljmp
xor
cld
rorb
xor
testl
ret
jo
test
js
xor
imull
hlt
nop
call
int3
xchg
adcb
xchg
int3
push
jp
ret
movsl
cld
adc
imul
popa
xchg
iret
fstpt
sbb
shrl
xchg
and
repz
rclb
mov
push
je
mov
cmp
xchg
addr16
xor
enter
or
xor
sub
jmp
and
pop
out
inc
inc
sbb
adc
add
mov
push
sub
scas
test
inc
inc
and
pusha
sbb
pop
ds
stc
mov
jb
xor
xor
fistps
mov
push
stos
sbb
xchg
loop
pop
jns
pushf
stos
and
das
out
jae
push
adc
add
mov
inc
jl
js
fdivs
outsb
add
jbe
inc
adc
lret
lea
rorb
cmp
dec
dec
in
sbb
popf
daa
ja
lcall
aas
xor
mov
sub
or
jnp
popa
cld
lock
test
mov
popa
and
dec
movsb
cmp
sub
shlb
sbb
jle
add
sbb
jp
ret
bound
int3
mov
jae
adc
stc
aam
out
xor
js
mul
adc
jb
sbb
lods
or
jb
insb
ja
lea
xor
inc
push
cmp
mov
push
and
xor
mov
aam
dec
inc
mov
xchg
pushf
fcomip
inc
xchg
inc
add
test
out
in
insl
add
in
loopne
sbb
mov
loope
mov
in
aaa
xchg
cs
andb
sub
cmp
dec
imul
or
ret
in
jp
inc
jmp
in
inc
and
sub
or
testl
jno
cld
mov
lahf
lcall
mov
pop
jp
das
imul
fcomps
push
in
adc
adc
testb
fldcw
leave
fisubrl
push
push
adc
sti
pop
pop
ss
mov
add
push
rcrb
xor
inc
shr
mov
or
lea
or
pushf
jbe
and
push
fbstp
mov
pop
adc
inc
outsb
xchg
sub
mov
pop
mov
ret
test
jmp
xchg
mov
jle
mov
nop
lods
mov
hlt
fdivrs
sahf
xchg
insl
jp
stos
fwait
ret
out
mov
dec
mov
pop
add
cmp
xchg
pop
in
dec
in
cmp
or
push
pop
rcrl
jg
pop
dec
push
cmp
imul
push
push
repz
mov
mov
shrb
pusha
mov
xchg
fdivrl
push
in
lret
out
inc
cld
lds
mov
xchg
fld
daa
inc
sbb
mov
mov
jno
daa
mov
add
dec
dec
in
movl
xlat
lods
pop
adc
jle
mov
movsl
insb
jge
jle
cli
sub
lods
fisubs
pop
icebp
inc
adc
push
scas
les
sub
mov
test
jnp
jb
xchg
cmp
jge
jge
xlat
inc
sahf
dec
mov
mov
fs
pop
and
xor
lds
sbb
sarb
sub
mov
mov
xor
adc
fidivrl
fiaddl
outsl
out
mov
es
bound
das
fdivl
mov
pop
mov
push
xor
mov
xchg
mov
mov
add
mov
mull
pushf
adc
call
or
mov
add
fld
cmp
mov
lds
mov
cltd
ret
jne
mov
inc
aas
lock
xlat
cltd
cmp
shrl
jno
je
negl
mov
icebp
mov
push
xor
leave
sub
inc
adc
cmp
cmp
cmpsl
pusha
lds
imul
in
push
imul
jns
cltd
lock
in
movsb
sbb
std
lods
icebp
or
cmpsl
sbb
dec
jecxz
and
sarb
enter
leave
jg
cli
mov
out
frstor
out
pop
adcb
jmp
outsl
xchg
or
mov
xor
pop
xchg
flds
sub
addr16
jb
pusha
out
enter
inc
jmp
ja
mov
add
push
lahf
jbe
cmp
mov
out
sahf
mov
mov
push
mov
ljmp
lcall
cltd
fs
pop
lret
into
pop
mov
orb
fstl
mov
mov
out
dec
or
xchg
xor
leave
push
mov
loopne
cmp
js
xchg
or
loope
jb
push
les
xchg
ret
scas
sub
nop
pop
add
mov
lods
sub
ja
aas
jns
mov
push
test
lahf
mov
pushf
inc
mov
mov
push
out
add
lahf
scas
push
mov
clc
xor
mov
xchg
push
mov
ret
and
xchg
fistps
stos
sbb
repnz
jno
popa
jo
fucomi
ss
mov
in
aaa
dec
test
cmp
enter
in
pop
lret
fadd
mov
lods
movsb
stos
std
dec
dec
pop
xchg
stos
jl
push
aad
jb
shll
pop
sbb
lcall
dec
mov
lahf
xor
aaa
fidivrl
sahf
cmpsb
cmc
loope
aas
inc
stc
movsb
fwait
ss
jno
shrb
sub
aaa
test
je
pop
dec
ror
ds
add
jnp
fidivl
xchg
inc
dec
movsl
and
mov
mov
and
and
cltd
shl
pop
loop
jnp
sbbb
pop
popa
sub
adc
subb
fsubrs
pop
mov
dec
aam
dec
shl
and
out
pop
aam
pop
js
ficomps
lods
add
sub
mov
les
adc
inc
add
les
push
mov
iret
es
in
repnz
add
and
pop
push
sbb
stc
call
push
push
xchg
pop
sti
ds
cmp
js
jl
add
shl
mov
pop
subb
in
std
int
js
dec
rclb
push
ret
or
push
int
push
jmp
pop
jecxz
ss
ficoms
push
popf
ja
jae
or
test
mov
or
inc
pop
xor
xchg
or
test
mov
cmpsl
mov
dec
xchg
fadd
cli
sub
daa
lods
push
push
dec
stos
int3
push
test
jp
mov
sub
inc
icebp
fdivl
fcompl
pop
sbb
mov
test
test
into
xchg
test
adcl
bound
pop
xor
in
jecxz
outsb
mov
xchg
cmp
bound
sbb
div
sbb
adc
fstl
ja
inc
test
js
das
clc
aam
fcomip
add
outsb
andl
leave
mov
inc
mov
int3
push
orl
js
push
sahf
cmp
xchg
and
clc
addr16
cwtl
cmp
xor
cltd
jo
stos
jle,pn
int3
mov
push
mov
popa
pop
fwait
add
addb
mov
div
movsl
push
imul
rcll
shlb
mov
sbb
adc
cmc
in
gs
rorl
push
sub
mov
mov
adc
ja
mov
stos
mov
out
jbe
cs
pop
sti
pushf
jmp
lods
mov
cli
test
xchg
sahf
mov
js
and
sub
mov
mov
pop
leave
out
test
mov
xlat
jae
test
dec
or
leave
cltd
sti
out
add
gs
movsb
ret
add
sub
xchg
cmc
push
and
fs
lods
push
ret
cli
arpl
sbb
jbe
es
rolb
insl
inc
out
stos
imul
scas
mull
test
mov
dec
adc
lock
icebp
mov
andl
cltd
inc
jb
sbb
aas
pop
ljmp
or
lea
dec
sub
fwait
jle
insl
imul
dec
in
jle
inc
pop
dec
das
dec
ss
test
ljmp
mov
xchg
dec
add
leave
cmc
test
aad
cmpsl
jl
push
dec
or
stc
or
dec
loope
leave
push
scas
ljmp
das
cli
ja
mov
push
imul
sbb
aam
adc
adcb
pop
jge
adc
cmpsb
cmp
mov
push
pushf
cmp
sbb
xchg
loop
hlt
repz
mov
add
mov
push
test
les
loop
push
pusha
mov
ljmp
push
jmp
addb
sub
adc
scas
out
fiadds
sub
mov
and
push
nop
sub
push
jns
push
sub
dec
andb
sbb
pop
push
pop
push
adc
lcall
mov
sahf
xchg
aas
dec
cmovo
fnstcw
inc
and
popf
in
repnz
loope
lds
mov
xchg
and
and
pop
xchg
dec
add
cs
mov
shr
daa
btr
xchg
add
movsb
cltd
std
pop
inc
pop
cmp
add
incl
jmp
xchg
lahf
dec
out
jmp
stos
adc
decb
test
xor
cltd
cmp
ret
pop
sbb
and
out
inc
or
sbb
loopne
xor
mov
xchg
jns
or
aam
repnz
jl
mov
pop
and
fs
enter
hlt
fisubrl
in
push
push
mov
das
pop
das
dec
and
aas
inc
aam
jnp
xchg
scas
testl
ret
mov
push
subb
xchg
je
dec
mov
mov
outsl
sub
and
fnstcw
pop
loop
xchg
inc
je
mov
adcl
loopne
inc
ss
inc
xor
rorl
pop
or
jmp
call
aam
mov
rdmsr
or
jnp
into
pushf
xchg
inc
xchg
ss
pusha
pop
dec
inc
xchg
and
stos
ljmp
and
popa
fidivrl
jl
scas
push
mov
add
pop
sub
xchg
pxor
xor
ret
or
cmp
lahf
fdiv
fucomp
bnd
lds
xor
mov
cmp
orb
in
push
push
popa
push
inc
shll
lret
xor
push
cmpsl
les
nop
add
std
jmp
pop
repz
das
or
insb
push
cmp
out
in
adc
mov
xorl
jmp
shl
lret
lcall
pop
mov
out
ss
stc
push
jge
pop
ret
out
test
rcrb
jno
imull
or
lahf
mov
lea
cmp
repz
bound
and
stos
xor
mov
shrl
mov
repnz
push
mov
pop
int3
popa
push
cmp
scas
mov
nop
rcr
sahf
jnp
and
cld
stos
or
stos
mov
dec
or
or
sub
ficomps
xor
into
sub
fwait
lret
and
jns
loop
xlat
stc
xor
push
lods
cltd
adc
iret
push
pusha
sbb
mov
mov
xchg
push
outsb
or
dec
push
dec
mov
idivb
outsl
xor
movsb
inc
mov
loope
mov
xor
add
mov
push
stos
mov
jb
clc
cs
jp
rcrb
outsl
cwtl
mov
jo
icebp
cs
subb
sbb
rcll
jnp
pusha
lock
lds
cmp
mov
jecxz
out
adc
mov
jle
or
rorl
out
rcrl
ss
cmp
ja
ret
or
nop
pop
jne
or
xor
fdivr
clc
xor
outsl
stos
lds
jnp
fdivrl
ret
push
incl
rorb
jno
jne
push
jo
sub
add
mov
dec
xor
out
pop
pop
in
in
sub
sarb
out
insl
pop
jle
out
lods
imul
mov
pop
iret
mov
outsb
popf
xor
andl
sbb
mov
aas
push
sarb
cmp
fwait
andb
mov
test
gs
sub
out
mov
sub
fs
pusha
repnz
adc
dec
cld
adc
iret
int
frstor
dec
cmp
jbe
cmp
mov
imulb
push
int
push
mov
xor
test
cmp
fsubs
push
hlt
sub
ficoms
rol
sub
mov
popf
in
jne
xchg
jns
sub
negl
xor
mov
pop
out
xor
dec
mov
and
or
xchg
sub
push
xchg
xchg
sbb
jnp
mov
jne
jnp
xchg
fmuls
int
or
ljmp
or
insb
fdivl
xchg
mov
cli
xlat
xchg
lcall
inc
outsl
imul
shrl
gs
sbb
test
inc
xchg
cwtl
dec
xor
xchg
inc
pop
bound
sti
hlt
adc
inc
mov
shll
inc
gs
and
push
inc
test
pop
mov
js
push
ret
jb
insl
xchg
sub
mov
movsl
jo
inc
mov
mov
std
clc
jns
mov
enter
pop
jbe
push
mov
push
mov
mov
adc
cld
insb
or
cmc
lock
jge
addr16
xor
dec
fnsave
jbe
sahf
pop
inc
inc
mov
into
pusha
ret
test
ret
testb
mov
mov
or
mov
in
xchg
jle
scas
cmp
fwait
sahf
jp
lcall
idivl
xor
call
mov
lock
ret
popf
in
and
mov
imul
sbb
stc
daa
sub
dec
ret
push
stos
lahf
pop
insb
decb
sahf
fisubrl
in
and
std
mov
jg
dec
jb
mov
test
pop
rcll
jecxz
fs
movsl
dec
pop
cmp
lcall
pop
stos
std
or
repz
inc
divb
dec
adc
mov
notl
pop
stos
mov
aad
stc
xorb
dec
out
dec
lcall
cmp
xchg
xchg
clc
jae
pop
add
or
push
mov
mov
and
andl
rcl
fwait
jp
stc
xchg
xchg
stc
js
xchg
pop
incb
fimuls
pop
imul
and
repnz
shlb
inc
mov
je
and
ss
fcoms
push
jl
ret
sub
cmc
sub
xor
iret
loope
and
lcall
dec
dec
sarb
mov
movsb
cmpsb
rcr
adc
subl
xchg
cmc
js
arpl
xor
sti
in
push
push
lcall
push
shl
or
dec
sbb
into
imul
test
cmp
mov
gs
sub
divl
xchg
icebp
inc
mov
dec
rcrb
sbb
loopne
mov
mov
mov
daa
adc
das
filds
push
in
lods
mov
fs
push
and
call
in
stos
pop
lods
outsb
or
adc
push
push
xchg
mov
pusha
ds
pop
aas
repz
in
or
add
dec
sub
sti
fsub
xor
clc
es
dec
stc
scas
pop
cmp
sahf
mov
test
xchg
cs
xchg
inc
jne
mov
inc
xor
in
mov
daa
push
subb
out
or
xchg
cli
mov
int3
pop
es
hlt
cmp
iret
dec
ja
xlat
jmp
les
lea
pop
push
inc
inc
ret
sub
fstpl
push
out
hlt
xor
adc
test
mov
leave
mov
nop
movsb
cmp
jle
or
jl
pushf
jo
sbb
fisubrs
xchg
loope
sbb
ljmp
pop
arpl
ficoml
pop
adc
mov
popf
dec
lods
pop
or
dec
out
push
add
ljmp
and
fldlg2
xlat
and
sub
in
das
cld
repnz
jns
push
or
out
cmp
push
out
jno
test
dec
sub
inc
pop
stos
shll
lods
shlb
mov
push
mov
out
add
mov
cmp
inc
ljmp
xchg
in
js
mov
movsl
popa
sub
or
xchg
cmp
fists
cmpsb
pop
fcmovnu
dec
push
fcomp
jmp
xor
roll
push
cmc
rol
inc
sub
aad
mov
shl
loope
fstpt
jno
scas
and
sbb
inc
pop
jge
sbbl
mov
addr16
es
adc
jo
mov
shlb
cmp
mov
mov
loopne
aas
out
add
or
adc
pop
into
sbb
fdivrp
sbb
fstpt
inc
out
jmp
insb
movsl
push
push
add
aaa
popf
scas
or
jmp
loope
andb
mov
mov
mov
icebp
fwait
das
mov
or
rol
pushf
addr16
cli
push
fdivrl
add
mov
inc
es
push
or
pop
sbb
sbb
sub
jbe
lret
pop
int3
ret
test
mov
pop
fsts
mov
sub
xor
push
jl
rol
or
sub
xor
jbe
aad
mov
loopne
pop
into
cltd
addr16
stc
add
inc
stc
movmskps
xlat
or
pop
cmp
cld
ja
add
jbe
push
ret
mov
inc
pop
push
movsl
push
pop
mov
jne
dec
pop
mov
shl
divb
lods
sub
and
push
pop
push
fldenv
xchg
sar
xchg
jne
push
pop
mov
insl
into
cmp
jnp
push
fsubrs
movsl
sbb
inc
xor
and
notl
push
aam
mov
push
mov
push
in
adc
ds
mov
daa
jo
cwtl
ja
and
adc
inc
cmp
push
jg
sbb
sbb
dec
sbb
pop
fnstsw
lcall
push
out
int3
mov
lcall
insb
xchg
and
ss
enter
or
scas
jmp
lcall
pop
fwait
js
cmp
jne
or
sub
sub
mov
jmp
cmp
shl
xor
jae
push
dec
rorb
xorl
scas
xchg
addl
jp
push
push
push
clc
bound
fcoml
in
adc
test
pusha
das
mov
rcr
pop
mov
pop
sub
movsb
in
or
das
aaa
shl
inc
roll
stc
aad
inc
push
adc
xlat
pop
fcompl
ljmp
adcb
xor
loopne
insb
xchg
xchg
popf
cmp
int3
mov
ret
arpl
mov
add
push
fpatan
arpl
cmp
inc
nop
cld
adc
push
sbb
adcl
add
jnp
jl
mov
jge
movsl
rcr
adc
push
rcrl
push
icebp
cltd
cld
xor
lock
cmc
sub
into
loop
xor
xor
dec
call
xor
arpl
cmp
divb
lea
pop
mov
pop
adc
mov
cwtl
ror
sub
movsl
add
lret
add
jno
negb
enter
and
imul
cmp
loop
inc
sub
and
gs
push
test
cld
std
mov
dec
inc
in
mov
rcrb
lahf
cmp
in
lods
js
add
sar
push
pop
adc
sbb
mov
mov
sbb
jnp
push
jbe
mov
pop
dec
mov
daa
outsb
nop
pop
dec
push
mov
out
stos
cmpsb
in
dec
mov
orb
shrl
pop
nop
add
jg
jg
and
cli
sub
scas
negb
adc
pusha
mov
mov
gs
ljmp
in
lcall
cmp
pop
pop
mov
xchg
jae
test
dec
cmc
sbb
xor
cmp
adc
mov
shlb
daa
lods
adc
div
xchg
mov
shll
arpl
mov
mov
idiv
lock
loope
mov
push
xchg
sahf
fists
gs
cmpsb
nop
jno
test
cmpsl
fnstcw
sahf
xchg
cmp
mov
lcall
aaa
stos
repz
mov
fmuls
fstpt
sbb
pop
pusha
lcall
push
cmp
dec
ficoml
inc
addr16
xor
lahf
lods
in
cld
mov
leave
adc
stos
ja
sti
sti
cmp
sub
cmpb
jg
xchg
iret
mov
shrb
push
lcall
insb
fdivrl
xchg
sub
mov
mov
enter
sti
loop
in
cld
dec
aaa
rcrl
fstl
adc
in
xor
jg
add
mov
adc
call
pop
sbb
mov
pop
in
sbb
xchg
xor
in
cmp
dec
mov
ljmp
pop
jae
jo
adc
inc
xor
cmp
roll
fdivs
dec
mov
out
addb
dec
push
sti
fs
les
outsl
ja
mov
out
jnp
insb
in
add
loope
mov
insb
jp
xchg
mov
out
fbstp
mov
es
push
push
js
mov
xchg
je
mov
xor
scas
dec
ss
enter
jp
mov
mov
jo
int
push
mov
inc
ss
mov
mov
ja
sbb
jb
inc
movsb
push
and
jle
mov
lcall
mov
testl
xchg
mov
cmp
cmp
jne
lret
ljmp
jge
cmp
fmuls
xchg
xchg
out
daa
mov
or
imul
and
sti
pop
movsb
bnd
and
add
dec
lahf
fistl
in
fnstenv
inc
mov
repnz
jns
lret
lcall
push
jns
sahf
not
and
push
aaa
mov
cld
or
xchg
sbb
inc
jns
ds
insb
cmp
mov
pop
push
adc
sbb
push
jmp
out
add
imul
pop
ret
add
xchg
fsubrl
test
mov
sub
je
pushf
cmp
mov
xchg
lcall
fs
inc
inc
jecxz
jle
push
mov
inc
loopne
insl
sbb
push
nop
xlat
adc
mov
adc
rorb
adc
push
xchg
fwait
adc
ja
jg
and
jns
sbb
lods
ret
jl
hlt
sbb
scas
lock
mov
jg
imul
dec
xchg
insb
cmc
push
cmpsb
mov
and
or
ret
sub
push
jl
sbb
jnp
mov
hlt
xchg
jae
cmp
or
sub
xchg
push
out
dec
sub
sbb
inc
push
jp
xor
jns
jae
mov
mov
enter
fisttpl
mov
fidivs
jle
ljmp
pop
xor
flds
add
pop
and
stos
leave
lret
jo
jmp
pop
dec
mov
clc
sub
sti
mov
push
push
sarb
inc
add
aad
roll
dec
ret
call
or
and
aaa
mov
mov
push
fsubl
xacquire
loope
or
aas
cmp
ret
lret
push
das
es
shrb
stc
jmp
dec
leave
subb
cltd
adc
xor
inc
das
and
aad
inc
cmp
xchg
xchg
movsb
mov
lods
mov
dec
es
fs
sahf
sub
cs
and
push
or
mov
sysexit
cmp
int3
pop
fists
lods
sub
mov
sbb
imul
lcall
in
add
push
sbb
lcall
cmp
push
ss
loopne
xor
fsubl
cmp
jle
repnz
xchg
stc
mov
hlt
aad
mov
jne
sbb
out
adc
jle
movsb
mov
js
push
inc
decl
dec
xor
test
inc
push
adc
sbb
sbb
bound
jmp
jg
push
rolb
add
inc
jnp
into
pop
mov
jmp
rcr
pop
icebp
pushf
test
leave
test
or
lds
pop
aaa
sub
mov
rcrl
nop
xchg
cmc
test
popa
repnz
xor
scas
fdivs
idivb
xchg
repz
add
movsb
ljmp
std
sub
cmp
pop
and
push
xchg
adc
mov
movsb
dec
and
pushf
add
dec
pusha
jns
mov
mov
lahf
sbbb
add
mov
aaa
mov
std
xor
gs
pop
out
and
inc
jo
rorb
scas
pusha
jmp
addr16
mov
xchg
add
cwtl
sbb
ret
jns
popf
mov
stos
outsb
adc
jge
lds
push
leave
pop
or
pop
les
push
xchg
sub
xor
xor
pop
xchg
mov
jl
lret
pop
xor
sbb
addl
cmc
push
fsubl
jns
mov
mov
jae
cwtl
xchg
add
clc
push
int3
jle
pop
ret
xchg
sahf
test
mov
into
aad
or
cs
daa
sbb
sbb
mov
leave
cmp
fcomps
test
adc
jae
inc
ret
cmp
test
jmp
ds
xlat
sbb
lds
mov
xor
test
sar
fisubl
rcrb
add
inc
jge
lea
mov
and
test
push
pop
cwtl
test
adc
adc
ja
addr16
xor
in
dec
call
call
sti
pusha
xchg
mov
inc
pop
ja
cwtl
fistl
push
mov
inc
push
cs
clc
jecxz,pn
aad
pusha
mov
in
cmp
xchg
repz
or
in
dec
push
and
push
dec
mov
negl
push
fwait
shll
rorl
mov
pop
cmp
lock
inc
inc
lret
into
fistpll
daa
xlat
push
pop
pop
mov
gs
rcpps
test
mov
adc
mov
or
dec
fisubrl
fcomp
mov
insb
cmpsl
cmpsl
das
lcall
mov
xor
loop
out
lret
xchg
xorb
jmp
sbbl
aad
shr
scas
fldl2e
fldcw
aam
scas
daa
into
push
mov
xlat
xor
inc
daa
and
das
pusha
inc
testl
sub
jp
addb
cmp
pop
inc
ret
ret
mov
shll
sbb
repnz
xor
sub
inc
mov
lods
add
lods
mov
jae
repnz
fistps
out
es
cmp
xchg
push
add
outsl
cmc
daa
ret
jecxz
cmovno
jmp
jp
cmp
js
mov
je
add
lods
int
xchg
sbb
dec
inc
out
or
jnp
je
or
enter
jne
es
xchg
mov
dec
push
pop
je
jbe
or
test
cmp
shrb
push
dec
ja
movq
or
sbb
xchg
mov
jecxz
aad
jmp
push
add
imul
and
mov
aam
sbb
pushf
rcrb
jae
inc
inc
rolb
inc
jmp
inc
bound
arpl
mov
sbb
outsl
divl
pushf
lods
lret
into
jb
xchg
clc
mov
loopne
das
fcomps
add
add
lock
xlat
add
test
add
fisttpll
out
js
loopne
xchg
mov
in
das
cmpsb
xor
sbb
jo
xor
sbb
pop
dec
pop
fldcw
ss
out
cli
lea
outsb
lret
xchg
fs
dec
in
mov
movsl
push
out
mov
ret
pop
dec
cmp
xchg
jo
mov
fimull
inc
lods
or
daa
gs
daa
or
pop
lock
test
cmc
aas
fisttpl
mov
mov
sti
inc
outsl
in
sbb
push
mov
out
mov
shrb
out
lock
adc
add
mov
jne
popa
cltd
push
cmc
cld
mov
addb
xchg
xor
fcomps
jnp
or
sbb
cmc
lahf
xchg
mov
decl
and
jecxz
pop
adcb
lcall
lods
daa
ja
lea
icebp
jo
movsb
dec
xchg
fbstp
inc
lods
mov
pop
hlt
mov
addl
mov
pop
inc
push
ficomps
xor
loop
pop
sub
lods
or
inc
ljmp
jmp
test
or
pop
inc
mov
inc
scas
sub
jbe
ret
cmp
ds
jo
and
sub
pop
pop
ret
std
adc
aas
xchg
xchg
orl
sarb
adc
jge
push
stc
sub
pop
jp
lea
push
fisubrl
mov
and
test
inc
iret
bound
fidivl
lret
cmpsb
mov
ljmp
fdivs
push
adc
bound
mov
shlb
and
pop
test
stos
fadds
outsb
pop
imull
sahf
mov
ret
mov
je
insb
xchg
cli
popf
and
pop
jge
and
add
push
mov
push
pop
ret
hlt
or
test
scas
xchg
mov
xor
stc
jge
jnp
inc
push
mov
jns
push
sbb
push
gs
mov
jno
lods
and
pusha
divb
mov
lcall
and
lock
cltd
icebp
repnz
fstl
push
mov
inc
mov
add
hlt
jp
jge
hlt
stc
mov
testl
mov
push
aam
stos
push
divb
mov
adc
xor
repnz
mov
mov
les
lret
mov
loop
mov
inc
push
mov
insb
aam
add
mov
loope
test
mov
mov
dec
mov
cmp
ret
xchg
sub
push
fsubrl
rolb
imul
aas
lcall
ss
ja
pop
js
add
pop
fdivr
in
pop
cmp
fsubl
dec
dec
ret
dec
cs
cli
dec
mov
jge
pop
adc
sub
mov
and
adc
mov
add
mov
lahf
push
out
mov
shlb
das
pop
xchg
lcall
mov
sarl
adc
jae
ret
sbb
sbb
jmp
dec
adc
repnz
sub
popf
cmpsl
jnp
fwait
sbb
add
enter
xlat
xchg
pop
xchg
stos
mov
add
jbe
mov
mov
fwait
dec
out
mov
push
xor
insb
lcall
sub
adc
mov
or
pop
or
xchg
mov
adc
cmp
pop
cmp
les
adc
shll
lea
jo
add
xlat
mov
add
inc
fiadds
or
int
lea
xor
clc
insl
pop
int3
jne
sbb
push
mov
xor
push
and
pop
loope
data16
lea
sahf
ficoms
dec
adc
bsr
push
inc
ficoml
add
xchg
push
or
test
xlat
es
sub
jb
lods
pop
and
out
adc
adc
sbb
dec
push
pop
mov
push
ret
icebp
daa
lret
test
push
shl
mov
ficomps
mov
mov
xchg
mov
fwait
sbb
inc
sbb
pushf
sahf
test
andl
adc
and
mov
mov
les
push
sub
add
xchg
mov
inc
cmp
adc
inc
add
cmpsl
mov
cmpsb
clc
jg
cmpsb
lods
xor
jp
mov
xchg
inc
movsl
fisubs
fistl
lods
dec
icebp
sbb
mov
into
jmp
pop
call
dec
cmpsb
std
mov
xor
orl
aaa
repnz
add
mov
inc
push
decl
jmp
jne
mov
rorl
push
aad
xchg
dec
push
int3
xlat
pop
dec
test
or
aaa
sub
cmc
mov
adcb
in
nop
je
jecxz
psrlw
outsb
ret
lcall
mov
data16
das
xor
fisttpl
pop
mov
dec
inc
mov
mov
adc
arpl
push
add
sbb
hlt
or
push
cmp
fstps
jns
pop
mov
jo
lcall
cmp
push
pop
mov
lods
jo
jb
jl
or
in
and
sar
outsl
into
and
stc
aas
push
jmp
adc
in
xor
fwait
hlt
jo
cmp
loope
cmp
pop
sub
lock
pop
div
jecxz
inc
in
jbe
pmaddwd
jns
ficoms
je
jecxz
inc
xor
mov
dec
push
sub
daa
sti
add
push
and
inc
pop
cld
ds
mov
pop
jnp
adc
dec
pushf
jns
outsb
shl
das
les
inc
imul
dec
out
fsts
jg
gs
cld
std
js
mov
add
lds
cmpsl
out
xchg
mov
scas
cmp
insb
xchg
gs
sub
push
push
gs
jnp
dec
mov
pop
push
inc
sbb
movsl
xor
test
adc
push
loopne
movsl
pop
jbe
inc
inc
fs
call
pop
sub
inc
sbb
cmp
jg
inc
loopne
outsb
xlat
xchg
rol
push
imul
repz
roll
jne
stc
in
lret
aas
add
cli
sti
mov
jmp
neg
dec
std
inc
call
adc
add
sub
jecxz
outsl
jl
sub
sub
sub
sub
rcll
push
or
fstpt
sbb
cltd
mov
repnz
mov
push
lret
cmpsl
mov
daa
popa
roll
je
add
jb
cmpsl
pop
cmp
aas
loope
arpl
sub
cmc
scas
push
adc
ret
cmp
cs
ret
push
xchg
or
loop
add
rcrl
mov
or
mov
push
in
or
notl
cwtl
leave
or
sbb
mov
pop
mov
sub
or
jmp
mov
rorb
nop
das
push
xchg
sbb
add
jnp
mov
ja
pop
jle
jle
push
dec
je
loop
pusha
push
jl
and
push
mov
lea
pusha
out
or
mov
hlt
jae
int3
push
sbb
mov
mov
nop
dec
or
mov
pushf
inc
mov
lods
mov
pop
lea
sbb
xchg
leave
ret
fldt
mov
arpl
neg
imul
pop
out
lret
lods
cmpsb
jne
mov
mov
adc
cmc
push
xchg
cwtl
fst
mov
lcall
jno
out
mov
pop
xchg
cmp
sahf
cld
cltd
mov
pcmpgtb
fldenv
sbb
aad
mov
xchg
mov
test
xchg
sbb
jne
push
ficomps
es
out
xchg
push
and
movsb
mov
ret
xlat
sahf
pop
std
add
loope
mov
lods
pop
cmp
add
sub
jge
lret
push
push
sub
call
sub
sbb
pop
mov
inc
hlt
pop
jae
pop
sub
sbb
fsubs
push
mov
out
or
xchg
push
pop
mov
mov
cmp
pop
inc
int
inc
sub
lahf
cld
scas
arpl
bound
inc
mov
rolb
sub
js
push
aas
loopne
and
jp
xor
inc
push
orl
xor
push
push
xlat
js
or
mov
cmp
pop
mov
dec
push
mov
mov
jmp
mov
scas
push
lods
xor
sahf
pop
test
out
subl
inc
cmp
push
and
sbb
fdivrp
add
xchg
xchg
into
loopne
fisubl
pusha
aaa
loop
pop
cmpsb
or
addr16
mov
push
hlt
aad
mov
movsb
push
rcl
push
cmp
fdivrs
mov
in
jmp
mov
adc
out
leave
inc
mov
rolb
jb
aad
daa
lret
or
in
xor
call
xor
sub
mov
dec
push
bound
pop
sub
push
adc
mov
and
jl
int
mov
ret
sbb
repnz
test
jns
push
jb
add
inc
daa
cmp
dec
dec
das
or
lods
push
adc
push
cwtl
pop
lods
mov
pushf
inc
mov
into
sahf
add
and
xchg
in
fcom
mov
and
pop
popa
add
cmp
lret
jbe
fucomi
enter
pusha
fiadds
pop
iret
cld
mov
aaa
jns
cwtl
rorl
pop
pop
mov
add
xor
jle
mov
je
dec
xchg
inc
jmp
lahf
sbb
cmp
jns
aaa
mov
outsb
loope
mov
push
int3
loopne
je
xor
adc
or
in
pop
sub
stos
incl
out
cmp
inc
xor
jno
pop
cmp
fadd
inc
jnp
cs
ja
fdivl
or
push
das
sub
push
cltd
flds
add
mov
xchg
pop
push
add
and
mov
push
jnp
dec
pushf
jl
sbb
add
or
inc
jecxz
imul
add
fwait
rcrb
sbb
cmp
pop
cmp
pop
data16
dec
cmp
pop
mov
jge
sub
dec
ljmp
jecxz
std
xor
es
inc
ret
xchg
out
and
xchg
fisubrl
popf
fistpl
or
repz
fbld
orl
cmp
push
pop
out
mov
iret
xchg
mov
push
jnp
and
leave
imul
xor
cmp
add
aad
stos
mov
sub
pop
shll
mov
into
call
imul
jmp
stos
mov
and
push
adcl
out
icebp
shrb
aaa
dec
out
in
dec
in
xor
cmc
and
add
pop
jp
ret
xchg
inc
sub
outsb
pop
lods
shlb
mov
out
dec
adc
inc
push
sub
out
lret
push
inc
movsb
and
inc
inc
je
insl
imul
and
xchg
stc
xchg
and
lock
lcall
in
mov
jecxz
add
or
ss
push
add
jmp
mov
cltd
test
jg
xor
rclb
cmp
ja
cmovae
jle
cs
xchg
push
gs
mov
dec
sub
pop
in
jo
insb
faddl
lahf
jo
clc
xchg
mov
test
dec
daa
add
jl
mov
mov
mov
enter
mov
loop
movsb
adc
sbb
or
lea
or
cmp
dec
scas
into
and
dec
sub
xchg
test
cmp
lock
add
xchg
call
add
fiadds
outsl
test
add
fnstenv
mov
pop
fwait
ds
xchg
fs
add
xlat
xlat
or
test
fadds
push
or
inc
mov
jne
test
lea
pop
xchg
mov
int
mov
dec
test
in
add
insb
sub
outsb
fdivl
jno
pop
out
push
inc
pop
push
mov
adc
clc
pop
cmp
pushf
add
aam
mov
in
push
popa
hlt
pop
lods
mov
pop
popa
adc
loop
imulb
out
in
int3
cld
repz
and
pop
jl
cmova
popf
pop
daa
xor
lods
ja
mov
ss
fstp
aaa
push
jp
push
pushl
xchg
inc
dec
inc
mov
hlt
xor
fsubr
loop
out
jns
cmp
xchg
fwait
add
out
xchg
xlat
cld
cmp
dec
bound
or
test
jno
mov
dec
or
push
insb
push
add
test
insb
loope
ja
adc
sbb
mov
lods
ds
xchg
and
xor
lea
mov
pop
pop
jl
mov
jbe
int3
or
ror
mov
loopne
inc
fcoms
dec
add
loop
mov
pop
pop
negb
or
xor
add
adc
ljmp
mov
xchg
mov
aad
ret
cmp
xchg
add
shll
lret
sar
or
mov
in
or
sbb
sbb
or
pop
mov
jmp
pop
and
and
and
and
mov
stos
inc
mov
adc
dec
mov
out
test
sbb
je
lds
xchg
ljmp
mov
pop
clc
mov
inc
and
shll
lds
jae
sbb
xchg
iret
clc
cmp
push
inc
int3
popf
cmpsl
cmp
in
loop
sbb
push
fistpll
sub
xor
xlat
sub
push
or
push
hlt
pop
and
and
stos
sbb
jo
push
fsubrl
inc
and
pop
ds
sbb
pusha
cmp
rclb
adc
cmp
or
push
pushf
adc
jno
iret
jns
and
xchg
sahf
rcrl
subb
dec
sub
popa
inc
lds
pushf
or
mov
cmovno
mov
arpl
push
and
cmp
jl
pop
jo
and
sbb
rcrb
push
xchg
aaa
stos
jb
hlt
push
or
mulb
cmp
push
jo
cmpsb
cwtl
or
test
jne
int3
test
ss
rolb
arpl
insb
inc
add
inc
push
jae
or
and
pop
rcll
decl
cld
aam
fsub
xchg
imul
xchg
cld
popa
jecxz
push
pop
adc
jno
jno
sbb
les
sbb
out
ret
xchg
in
orl
sarl
pop
stos
imull
xchg
sbb
push
cmpsl
push
jnp
stc
xchg
push
adc
rolb
lods
mov
inc
dec
push
jb
lods
inc
adc
ficompl
pop
pop
mov
mov
jb
hlt
pop
jge
mov
push
rcrl
xchg
xlat
movsl
jno
dec
and
in
push
int
xor
mov
push
pop
xchg
sub
adc
and
out
in
jns
sbbl
xchg
or
sbb
adcl
sbb
test
cmp
sbb
mov
data16
mov
sbb
clc
xchg
lea
ror
scas
inc
sarb
test
or
fucom
mov
pop
lea
icebp
mov
rcll
inc
sub
sbb
pop
jbe
out
out
push
xor
xchg
fnstenv
cs
cwtl
call
stos
pop
inc
jno
movsb
xchg
push
ffree
aam
jae
fcoms
push
push
jmp
outsl
dec
pop
fnstenv
iret
das
sub
sub
ljmp
mov
jno
sarb
mov
pop
push
sub
add
and
push
out
pop
pop
sbb
fwait
mov
mov
sar
xchg
ret
test
add
pop
clc
ror
icebp
push
adc
test
cli
clc
jmp
cmc
shlb
rorl
jo
jno
bound
fwait
out
insl
fs
mov
add
push
xchg
insb
cld
dec
arpl
std
stos
pop
movsl
cld
or
mov
cld
cmp
frstor
add
mov
movsl
js
ja
cmp
clc
jae
cmp
nop
adc
insl
and
out
sbb
dec
xor
ret
adc
cmpsb
in
and
in
mov
xchg
jb
rcr
inc
ljmp
sbb
cmp
mov
mov
mov
sub
enter
lods
pop
push
cld
xor
push
xor
fadds
fistl
fs
iret
sbb
je
sahf
xchg
inc
imul
or
mov
ret
movsl
adc
push
push
mov
cld
cmp
mov
mov
pop
jnp
mov
sub
les
mov
loope
sbb
imul
mov
adc
pop
stos
push
dec
xchg
js
pop
push
inc
lea
outsb
movsl
dec
fcoml
and
or
or
cmp
into
dec
std
push
or
dec
bound
sub
add
shrb
mov
xchg
xchg
pop
and
aad
sub
das
in
and
mov
sub
xor
popf
test
mov
xchg
push
shr
dec
dec
xor
push
xchg
mov
or
call
rolb
pop
mov
fcoml
insl
cmp
xchg
fsts
test
lcall
loope
in
adc
or
inc
or
js
inc
adc
mov
ret
scas
fnstenv
xlat
xor
push
sbb
xchg
cmpl
repz
and
cmp
xor
rcll
sbbb
es
pop
mov
or
jle
mov
in
lea
cmp
cli
xchg
mov
and
fsts
fsubrp
or
xor
les
pop
and
test
movsl
or
in
into
push
jno
dec
fimuls
scas
scas
js
xchg
xor
in
mov
iret
fs
sub
pop
shlb
movsl
cli
inc
push
mov
adc
fwait
inc
icebp
xchg
negb
daa
pop
add
jbe
ret
lahf
and
pusha
fmull
nop
insb
mov
push
xor
imul
fimull
adc
addr16
sar
push
inc
mov
xor
mov
mov
push
dec
mov
cmpsl
loope
loop
loopne
push
mov
fwait
dec
push
and
int3
repnz
xor
dec
clc
stc
hlt
and
out
negl
dec
add
sub
jo
test
push
ss
jmp
stos
fcoms
movsb
add
add
cld
pop
out
add
rcr
add
sub
sar
cmc
int3
sti
lahf
fs
xchg
xchg
mov
xchg
aas
not
pop
adc
and
mov
push
stos
insl
fcomip
cmp
sub
jo
sysret
dec
int
add
out
xor
test
mov
jne
pop
cmpsl
lea
cwtl
xor
or
in
xchg
cmp
xchg
and
sub
jo
mov
js
add
push
das
clc
xchg
xlat
push
or
pusha
lds
movsb
xor
cmp
pop
loopne
or
aam
loop
es
enter
mov
ja
mov
ret
jge
imul
lcall
lret
dec
ret
daa
jge
xchg
mov
loopne
or
ds
cmp
inc
jecxz
add
or
inc
mov
and
push
sub
fadds
add
insl
jecxz
xacquire
jne
mov
adc
mov
dec
loop
sahf
mov
rep
mov
jmp
inc
mov
mov
jo
cmp
push
fimuls
pop
mov
pushf
jmp
mov
mov
icebp
cmp
cmp
xorb
adc
es
sbb
and
flds
inc
push
sub
popa
mov
mov
in
adc
lcall
insl
enter
data16
data16
jb
outsb
shrl
adc
out
add
popf
sub
test
and
into
mov
lods
pop
xchg
cltd
jg
xor
xor
mov
push
jge
push
push
dec
pop
ljmp
sub
mov
divb
lcall
push
jg
test
cwtl
ja
inc
pop
lahf
adc
dec
dec
ret
push
aas
inc
test
cld
test
ror
inc
inc
mov
pop
jmp
xor
and
add
jmp
movb
adcb
xchg
les
jo
dec
fiaddl
add
jl
test
out
jg
pop
pop
das
ljmp
and
scas
in
movmskps
mov
jl
jg
jle
xchg
cmp
fldl
into
idivl
es
jns
cld
adc
sbb
jle
xchg
aad
push
mov
shll
test
movb
xor
xchg
or
mov
mov
mov
cmp
xchg
enter
nop
sbb
jno
push
sbb
sahf
push
fcmovbe
sbb
imull
int
js
add
xor
jbe
dec
lods
outsl
xor
cld
dec
repnz
jno
stc
cmp
imul
test
test
adc
hlt
xchg
or
or
popf
and
sub
mov
cmpl
pop
pop
xchg
bound
pop
jo
or
ds
loop
mov
call
lret
cld
stos
adc
std
or
rcrl
sub
adc
test
sub
out
repz
jl
adc
dec
out
sbb
push
dec
in
cmp
std
ffreep
fsts
xor
out
mov
push
loop
les
add
lret
pop
pop
cmpsb
inc
pushf
lea
test
jo
lret
decb
push
gs
push
int
mov
sub
fnstcw
icebp
mov
sbb
xchg
cmp
icebp
loop
std
cmpsb
lret
mov
cmpsl
xlat
mov
fcmovnb
imul
add
loop
enter
pop
rolb
aam
xor
mov
pop
xchg
dec
mov
xchg
leave
inc
mov
pop
fs
adc
mov
insb
mov
adc
xor
hlt
cmpsb
xlat
cmp
inc
jmp
jne
pop
repz
jb
je
loopne
jb
out
and
insb
ret
push
jo
xor
push
mov
rcll
les
and
inc
jg
add
in
cmpsb
or
add
es
cmp
inc
push
shlb
pop
push
in
mov
ret
leave
mov
sbb
mov
dec
push
cmpsl
xchg
stos
or
and
pushw
sub
ret
xorl
fisubrl
stos
movsb
cmp
pop
pop
mov
cmpsl
push
stos
lret
mov
cmpl
outsl
dec
push
pop
jnp
in
cmp
fcmovu
addr16
or
dec
pop
mov
subb
lret
push
xor
jmp
jb
add
sub
out
out
nop
mov
jmp
mov
outsl
enter
out
adc
std
add
fs
ds
push
aaa
or
cmp
jbe
in
ss
mov
inc
mov
jle
sub
out
stos
inc
dec
jge
or
imul
out
xchg
popf
pop
out
aam
mov
inc
js
add
or
adc
fs
pusha
enter
ljmp
jbe
mov
ljmp
inc
dec
loop
ljmp
enter
stos
pop
cmp
mov
and
sub
clc
push
sarl
cmpsl
arpl
popa
decl
movsl
fimull
dec
or
rcrb
xchg
xor
adc
lret
mov
pop
jnp
adc
add
push
addl
xchg
into
and
outsb
cmp
sbbl
jae
or
scas
cli
jne
cmp
mov
int3
inc
sub
push
scas
mov
lcall
and
fidivrs
addr16
sub
xor
sbb
add
jecxz
push
lds
movsl
pop
movsl
adc
cld
cmp
je
push
insb
insl
sahf
push
imul
aam
testl
dec
dec
dec
mov
imul
mull
mov
mov
aad
add
out
jmp
push
cmp
hlt
push
js
and
popw
lods
and
jle
lret
cld
add
rcll
sub
scas
rclb
ss
ret
fiadds
jmp
jge
mov
xor
hlt
adc
sub
jp
push
gs
cli
xor
lods
in
mov
in
adc
cwtl
idivb
sbbl
shll
fsubr
insb
cld
mov
xchg
add
lods
pop
lds
aas
and
in
cwtl
cmp
dec
sub
jmp
jmp
aad
pop
fisttps
loope
add
sbb
xor
cmp
sbb
or
repnz
les
stc
mov
scas
jbe
and
loope
test
pop
pop
arpl
scas
sahf
in
jbe
cmp
sub
mov
int3
and
cmp
popa
xchg
loop
rol
enter
insb
dec
rol
sarl
mov
mov
dec
and
pop
sub
subl
pop
lret
cld
outsb
out
xor
and
int3
cwtl
add
jge
jle
out
mov
adc
ds
push
enter
aam
mov
sti
ds
rcr
xchg
ljmp
jns
xchg
stos
mov
int
add
mov
cmp
sub
outsl
lods
mov
mov
mov
cmp
pop
loope
and
push
mull
es
xor
out
loopne
sub
and
scas
mov
scas
or
cmp
mov
scas
ds
dec
cmpsl
adc
aad
and
arpl
ret
fs
mov
xchg
fistl
cmp
dec
mov
add
fstps
adc
insb
jno
addr16
inc
mov
mov
fwait
cltd
insb
xchg
push
and
sub
and
in
popf
or
sub
addr16
mov
popf
lret
pop
pushl
jle
pop
lahf
cmp
mov
div
and
sub
call
sbb
dec
add
ret
mov
call
add
xchg
sub
mov
add
jae
fildll
lods
das
pushf
dec
cmp
jns,pn
jmp
dec
cmpsb
sub
out
push
jne
sub
loopne
or
fistpl
es
ja
ret
mov
push
outsl
cmc
shlb
push
xchg
dec
mov
sbb
in
idivb
jge
cmp
mov
pop
enter
test
push
lahf
pusha
xor
pop
imul
push
mov
int3
push
outsb
cmp
pshufw
add
or
iret
inc
adc
fs
or
xorb
mov
sbb
jne
fisubs
sub
fxch
cmpsl
adc
jle
lcall
add
in
pushf
dec
xchg
inc
mov
inc
jl
lock
or
or
movsb
sbb
adcl
insb
and
cmp
stos
out
sbb
daa
or
test
xchg
outsl
push
add
mov
xchg
mov
dec
test
inc
jbe
mov
lds
sbb
mov
or
sbb
jo
and
xor
adc
adc
jae
push
sub
in
loop
imul
imul
hlt
adc
jbe
sbb
cmc
dec
pop
repnz
mov
das
cmp
cltd
xor
jo
mov
mov
mov
aad
sbb
daa
jo
test
inc
lahf
pop
iret
hlt
pop
leave
sub
or
clc
adc
or
sub
jnp
push
jo
xorl
mov
stos
sahf
adc
mov
lock
mov
sahf
cwtl
mov
or
out
and
xorl
jne
ljmp
mov
push
pop
jecxz
in
mov
push
fwait
scas
mov
fsubp
lret
adc
mov
push
and
jb
adc
add
add
cli
dec
arpl
pop
or
jmp
cmc
std
adc
sbb
cltd
push
fcoml
int3
pushw
stc
aam
fiadds
sbb
and
fldenv
sbb
push
mov
clc
push
es
jbe
sbb
imul
cmp
mov
dec
outsb
mov
sbb
pop
stc
xchg
cmc
dec
rcrl
inc
or
adc
cmpsl
add
and
or
mov
inc
dec
xchg
mov
push
mov
clc
cwtl
xor
pop
push
inc
rorb
add
inc
in
jp
mov
inc
ret
hlt
mov
cmp
sahf
call
pushf
jo
gs
lea
jnp
in
daa
int
and
sbb
mov
cmc
and
mov
xor
and
inc
jp
lcall
xchg
mov
sbb
fucomi
fdivl
mov
cwtl
movsl
ljmp
inc
push
cwtl
pop
xor
push
in
or
adc
adc
xchg
jae
daa
dec
aas
je
cwtl
xchg
xor
es
inc
jae
mov
cmpsb
jl
jno
cltd
jl
aam
add
and
sbb
sbb
push
leave
pop
bound
pop
insb
in
sbb
inc
adc
pusha
mov
inc
loopne
sbb
dec
and
roll
ss
mov
cmp
pop
rcl
mov
mov
fbld
jns
adc
call
dec
ret
lods
bound
sbb
mov
dec
jp
pop
cltd
fidivrl
adc
mov
pop
cli
pop
xchg
stos
out
shl
cli
sbbb
das
jbe
or
push
cmp
fidivl
lea
jl
in
and
lods
xor
mov
cmp
xchg
cli
stos
jae
icebp
insl
into
mov
rol
mov
dec
and
lret
ja
and
xchg
scas
or
adc
mov
imul
adc
lock
leave
sub
dec
das
out
lods
stc
dec
icebp
and
xor
ss
add
and
ss
lock
roll
scas
or
lds
aam
ljmp
inc
mov
rcll
inc
inc
mov
xor
data16
mov
sahf
inc
arpl
popa
jbe
xlat
jb
lahf
xchg
and
xchg
nop
push
int
fdivs
decb
ret
and
push
outsb
aaa
rcr
pop
punpcklwd
cwtl
inc
ja
mov
pop
frstor
or
and
outsb
incb
cmp
mov
add
push
mov
inc
aaa
adc
adc
jne
sbbb
push
mov
jg
pop
scas
push
xchg
xor
xor
js
outsl
cmp
out
xchg
mov
mov
inc
or
pushf
sarl
jge
mov
andb
sub
js
out
stc
out
push
outsb
adcl
repz
test
cmp
gs
push
push
mov
xchg
testb
mov
test
add
rclb
iret
aam
rcll
sub
inc
in
icebp
incl
sub
test
add
lahf
lcall
and
std
pop
xlat
ret
mov
push
jnp
dec
call
add
jne
adc
cmpsl
mov
dec
jge
test
adcb
xor
sub
imul
mov
into
push
sub
cld
jns
stos
gs
movsl
inc
add
dec
xor
mov
and
mov
xchg
ja
pop
add
adc
lret
stc
movsb
cmp
lret
push
leave
rorb
incb
pop
lahf
cmp
scas
pusha
test
jno
sti
testb
xchg
xchg
adc
js
sahf
ds
inc
mov
cmp
sub
mov
pop
cmp
in
add
repnz
sti
and
jecxz
xor
xlat
outsb
bound
shr
pop
sub
into
clc
sub
sub
jno
sbb
sarb
test
cli
lret
sub
das
push
jbe
pop
out
xchg
in
add
imull
adc
cmp
mov
das
or
mov
roll
ret
mov
xchg
xchg
inc
loopne
stos
loop
ficomps
es
and
dec
and
add
xor
adc
mov
xor
gs
push
iret
popf
pop
pop
or
fs
ffree
aas
rorl
mov
sti
mov
cmpb
push
jl
and
int3
fdivl
repnz
sbb
inc
jno
xchg
xor
je
dec
dec
push
push
jno
or
outsb
or
or
js
jno
xchg
add
and
in
std
xchg
push
push
mov
xor
aam
jmp
jmp
js
hlt
aam
push
and
ja
xchg
pop
dec
xor
loopne
orb
mulb
mov
dec
scas
mov
mov
fnsaves
cs
dec
sub
push
jns
out
pop
stos
or
push
xor
out
lret
pop
arpl
xor
orb
pshufw
xchg
mov
adc
loop
fsubp
pop
lods
lea
pop
xor
orb
mov
push
addr16
inc
sub
repz
inc
mov
in
xchg
shlb
pop
std
stos
ret
mov
adc
sbb
in
pusha
sbb
bound
shll
inc
scas
xor
dec
mov
sahf
xchg
test
pop
dec
sub
sbb
xchg
pop
xor
push
sti
dec
pop
mov
push
outsb
adc
mov
notl
sarb
pop
stos
push
fcomps
addr16
into
popf
incb
push
subb
jmp
in
xchg
xlat
and
push
mov
mov
jle
repnz
cltd
dec
call
push
dec
rorb
jle
dec
cmc
lahf
pop
lret
cmc
xchg
sub
fisubrs
or
bound
push
jge
jle
pop
in
dec
or
outsb
nop
sub
hlt
sbb
sub
mov
xchg
repnz
fildl
dec
sub
add
test
hlt
mov
mov
stos
leave
testl
sbb
cwtl
pop
mov
mov
pushf
in
adc
mov
dec
xchg
xor
push
jg
push
jmp
fst
sub
out
cmp
xor
dec
daa
add
xchg
setle
jne
mov
mov
mov
adc
sbb
iret
or
pusha
iret
mov
imulb
dec
dec
mov
pop
adc
jno
aam
mov
test
and
sub
xchg
push
jg
cmp
adc
inc
push
icebp
loope
lcall
cmp
mov
icebp
mov
cmc
scas
sub
icebp
sub
mov
mov
dec
push
inc
pusha
arpl
jns
mov
ss
sahf
push
insl
enter
cmpsb
adc
je
adc
jno
cwtl
cld
mov
out
xchg
add
jne
test
enter
scas
ficompl
or
and
out
hlt
leave
lds
xor
cmp
lret
icebp
jle
outsb
jbe,pn
fs
fwait
movsl
lahf
sbb
mov
jns
adc
lret
cld
je
sub
xchg
popf
imul
pop
dec
out
rcll
sub
push
push
xor
and
mov
add
push
fimull
ss
xchg
inc
pop
mov
cltd
push
jle
cmpb
mov
aaa
push
nop
xchg
push
sub
fxam
outsb
or
fists
mov
sub
mov
dec
pop
mov
pop
mov
outsl
cmp
sbb
dec
shrb
jle
shl
cmp
ljmp
inc
test
daa
inc
jae
sub
ljmp
cmpsb
or
jae
adc
stos
cwtl
rep
repnz
sbb
jbe
xlat
xchg
mov
popa
jp
sub
cli
cmp
stos
inc
or
std
sub
cs
and
les
cmp
xor
or
push
ret
cmpsl
scas
xor
cld
mov
xchg
enter
adc
scas
xor
adc
cmp
sub
mov
jbe
mov
xor
lods
test
fistpll
std
mov
push
xor
jmp
sarl
ja
movsb
mov
mov
pop
cmp
xor
fdivl
inc
mull
div
adc
jno
or
adc
int3
xchg
lret
mov
gs
stos
mov
adc
jne
cs
aaa
mov
dec
inc
adc
inc
icebp
jmp
arpl
rcll
pop
or
and
mov
insl
or
mov
or
outsb
xor
test
jno
fidivs
gs
and
int3
mov
pop
inc
stc
push
addr16
dec
icebp
test
out
mov
mov
notl
dec
cli
mov
jb
fnstenv
jne
fimuls
popf
data16
sbb
mov
inc
in
xor
jno
xchg
push
dec
decb
mov
scas
jg
mov
jp
ja
popa
lret
in
fwait
sahf
cmp
sbb
xor
test
test
xor
lret
das
rep
dec
test
push
push
mov
mov
imul
xchg
sbb
test
in
push
cli
rcrb
fs
push
jle
sbb
xor
or
add
rcrb
mov
dec
mov
mov
inc
mov
test
cmp
scas
and
push
xchg
push
cltd
test
negl
push
cmpsb
fscale
icebp
rolb
inc
lret
xor
int
inc
shl
cmp
jns
sbb
mov
aaa
jae
push
dec
subl
or
mov
pop
loope
adcb
jg
data16
dec
shl
push
pop
fists
jns
les
jno
cmp
movsl
xor
mov
out
popf
stc
es
in
shlb
mov
push
mov
testb
xor
mov
fmuls
loope
dec
xlat
xchg
lods
pop
pop
jl
push
data16
outsl
in
clc
adc
movsl
xor
popf
movl
or
push
aaa
adc
cmp
imulb
arpl
inc
cld
inc
enter
call
mov
in
lahf
or
cmp
lahf
in
jmp
stos
xchg
sub
loop
cli
fldcw
ljmp
scas
insb
adc
push
inc
aad
lods
push
fst
or
sub
or
mov
mov
dec
stc
xchg
dec
mov
hlt
add
jo
sahf
jbe
pop
pop
mov
ret
jnp
jmp
clc
outsb
xchg
push
push
test
cs
push
into
sbb
mov
add
das
fs
ljmp
in
and
cmpsl
mov
lcall
shll
xchg
ret
fiaddl
add
dec
sahf
mov
scas
fldl
into
pop
lods
out
pop
jmp
mov
in
lock
pop
outsb
int3
dec
add
test
frstor
cs
ret
divb
loopne
fsubrs
add
rorb
fistps
scas
popf
clc
xchg
jl
cmp
xor
test
cmc
jnp
and
adc
dec
lcall
xor
pushf
jmp
push
sbb
std
inc
pop
xchg
into
cmp
xchg
pop
push
xor
xchg
mov
rcr
xor
push
fidivrs
mov
fidivs
push
mov
fnsave
lods
xor
mov
xchg
mov
fidivrs
ret
das
cmpb
inc
sti
fildl
mov
shll
stc
and
shrb
mov
fbld
movsb
arpl
or
dec
in
and
imul
ftst
sti
in
dec
aad
mov
push
inc
jns
lret
cli
push
push
sbb
xor
mov
sahf
stos
in
or
push
pop
bound
dec
dec
xor
or
lcall
mov
enter
cmpsl
shlb
lds
and
fcomip
xchg
mov
mov
ljmp
cld
mov
adc
js
sbb
scas
les
add
loop
mov
ret
add
jge
ror
inc
jg
push
xor
add
cmp
andl
or
cmp
sbb
js
addl
mov
add
mov
sub
push
mov
cmp
xor
iret
and
scas
movsl
outsb
jg
hlt
xor
imul
dec
in
mov
or
pop
mov
dec
xlat
repnz
inc
xchg
xor
pop
xchg
add
adc
fadds
ja
lcall
pushf
scas
inc
loop
daa
and
loopne
mov
js
jae
inc
sbb
xor
sub
insl
xchg
mov
xor
lods
cltd
in
or
fsubs
aaa
fcomps
test
pop
outsb
dec
repz
insb
outsl
fst
xchg
loope
inc
scas
stos
push
dec
pop
andb
xor
pop
mov
jge
popa
mov
inc
ljmp
jns
sahf
adc
cmc
adc
push
cwtl
cmp
and
loop
dec
ss
cmp
outsl
jne
movsb
mov
or
repz
or
stos
mov
test
in
scas
mov
xchg
lret
dec
push
inc
push
push
or
shll
addb
cwtl
xor
jl
or
movsb
cmp
mov
outsb
fnsave
xchg
mov
pop
and
cld
cli
dec
loop
fistpll
sbb
in
int3
mov
sub
jmp
int
mov
jne
lret
mov
ja
inc
inc
ss
add
mov
call
cmc
nop
inc
xchg
mov
mov
sbb
cmp
stc
adc
data16
in
add
aam
add
cwtl
mov
into
leave
in
cmpl
adc
mov
mov
arpl
push
and
mov
in
jno
xchg
loope
jns
push
sbb
xor
cld
xacquire
lcall
stos
jnp
or
cli
mov
inc
popf
test
mov
pop
sti
add
lods
into
jno
or
outsl
sbb
loop
cmp
dec
pop
jns
addl
or
inc
xor
cmp
push
dec
dec
insb
cltd
dec
mull
mov
rclb
xchg
ss
pop
inc
push
or
sub
jmp
and
jno
ficomps
xor
mov
mov
cmc
sahf
or
or
inc
jmp
ljmp
fildll
inc
sub
push
stos
inc
scas
ror
fadd
or
xor
test
dec
adc
adc
iret
cmpsb
aas
dec
inc
push
popf
mov
imul
xor
loope
std
mov
aam
rcrl
xor
mov
cmp
in
scas
dec
xor
and
sbb
mov
xchg
adc
or
add
pop
jl
xchg
add
lcall
enter
inc
add
xor
push
mov
loop
into
int
pop
fbld
xor
mov
lahf
lret
adc
jmp
push
cmp
mov
pop
mov
inc
fnstenv
popa
loope
push
sbb
cltd
xor
cwtl
and
pop
rcl
mov
nop
cmp
rorl
aad
sub
shll
mov
das
and
and
push
lods
lcall
dec
jle
stos
adc
mov
stos
or
pop
and
pop
push
lret
mov
rolb
outsb
and
dec
xor
push
out
cmpsb
js
repz
push
jne
and
stos
push
mov
test
dec
cmpsl
push
shrl
inc
psubusw
cld
pop
ror
pop
cmp
sbb
fadds
frstor
fnstsw
cli
adc
jo
or
and
inc
and
shrl
mov
pop
les
pop
inc
jmp
cmc
adc
insl
or
mov
sbb
addr16
xchg
mov
loop
pop
and
xlat
push
cmp
fstl
mov
inc
out
stos
jl
xor
fsubs
idivl
push
xchg
imul
int
pop
jecxz
pop
and
pushf
jg
ficomps
mov
jne
das
xor
leave
jmp
add
out
ljmp
aaa
mov
mov
hlt
int
jp
or
adc
xchg
sub
data16
bound
push
jne
test
adc
lods
push
xchg
cwtl
push
xchg
sbb
xor
mov
popa
dec
dec
ds
neg
jecxz
adc
movb
imul
cld
inc
scas
mov
idivb
je
push
movsb
xor
cmpl
cmc
xor
adc
and
mov
lcall
xlat
cmp
movsb
dec
imul
shrl
jno
cmpsl
pop
sbb
adc
sub
xchg
addr16
xchg
or
push
cs
in
cmp
call
faddl
insl
in
ljmp
pop
cmp
adc
pushf
cmp
addr16
or
lods
inc
inc
and
or
outsl
xchg
mov
fnstcw
xor
imul
out
inc
stos
mov
and
mov
mov
in
add
in
js
in
dec
adc
mov
popa
rorl
sub
mov
adc
cmp
mov
stos
sbb
mov
ds
mov
cmpb
or
jne
fdivrp
mov
aaa
loop
loop
mov
clc
sbb
dec
repz
cltd
add
aad
and
mov
into
insb
sbb
js
test
add
sahf
cli
sbb
loopew
xorl
mov
xor
imul
pusha
cmp
cli
call
push
adc
jp
movsb
add
add
les
sub
icebp
cmpsl
jb
icebp
andb
in
jne
jnp
mov
adc
out
or
mov
movsb
xor
dec
pop
cmp
xchg
mov
lret
aam
fisttps
push
lcall
mov
add
and
cli
vphaddudq
ds
lock
pop
std
fnstenv
jb
inc
gs
out
adc
ret
jl
cmp
jg
or
xorb
scas
mov
popf
popf
sti
mov
mov
and
call
pop
xchg
add
cwtl
cmp
push
xlat
mov
lods
jae,pt
and
mov
out
jns
cmp
cmp
mov
xor
and
and
push
inc
adc
cmc
or
push
rclb
popf
add
or
pusha
popf
sbb
pop
pusha
vpcmpgtb
out
cmp
icebp
and
pmullw
jle
es
cmp
lret
daa
jbe
push
pop
popf
jnp
mov
aad
scas
sbb
jp
dec
inc
shl
jmp
inc
and
jle
cmp
cmc
push
pop
cwtl
jg
jmp
jbe
jge
xchg
xchg
mov
sbb
repz
or
cmp
fdivs
xchg
cld
push
push
int
in
pop
mov
inc
imul
imul
mov
mov
lods
insb
cltd
out
cli
stc
arpl
dec
sub
lock
dec
xchg
lea
mov
mov
lret
xor
or
rcl
icebp
mov
out
mov
inc
adc
cmp
loope
jae
cs
or
or
decb
test
mov
push
sub
bound
mov
mov
inc
test
dec
jae
fstpt
pop
mov
jl
repz
push
push
and
pop
sub
std
cmpsb
dec
or
and
and
mov
into
xchg
std
mov
rcr
popf
pop
mov
cmp
icebp
push
shll
pop
adc
stos
inc
push
in
cmpsl
bound
pop
rorb
jnp
in
jecxz
icebp
or
xchg
mov
and
sbb
inc
push
in
popf
jmp
mov
mov
orl
lret
jbe
insb
enter
xor
or
jl
dec
pop
lds
popa
mov
jecxz
push
cmpsl
aad
cmp
xor
xor
sub
jecxz
sbb
std
cli
jecxz
test
and
pusha
and
jae
pop
push
mov
push
adc
movsb
xor
insl
or
push
out
jmp
inc
inc
pop
cmp
andl
test
add
xor
out
cld
lods
movsl
sbb
mov
xor
cld
int
or
sbb
call
test
sbb
pop
sub
inc
cmp
loope
jp
lock
int
adc
fsubrs
out
pop
cmp
adc
stos
ficompl
adc
fldt
mov
xchg
jb
pushf
loopne
dec
xchg
fsubrl
sub
gs
cmp
jo
jnp
imul
mov
xchg
mov
pop
loope
inc
sbb
and
pop
out
sbb
fisubl
fsubrs
cmp
cli
dec
or
pop
jp
mov
mov
test
sub
mov
jo
jo
dec
cmpsb
lock
cwtl
sbb
js
push
inc
cmp
mov
push
dec
lods
sub
cmp
je
xchg
fidivrl
xchg
push
scas
or
push
push
or
xlat
ret
mov
add
scas
stc
test
fnstsw
cmp
gs
xor
dec
outsl
and
in
inc
cmp
xor
aam
jne
rcrb
dec
jns
mov
mov
popf
and
jl
xchg
or
lret
cmp
cld
inc
shld
xlat
xchg
imul
mov
xchg
inc
in
les
xchg
pop
xor
shrb
mov
and
dec
xchg
lret
test
daa
push
shlb
int3
jle
and
loope
aaa
xchg
stos
mov
mov
in
pop
mov
cmp
sbb
add
scas
std
outsb
aas
pop
mov
mov
fcoms
icebp
test
push
cmp
icebp
sub
sbb
adc
or
dec
cmp
jp
cld
lods
xor
std
cmpsl
cmp
push
pop
out
xchg
dec
jp
insw
and
adc
or
adc
push
movsl
arpl
cli
notb
jo
add
xor
xor
push
cmpsb
cld
dec
data16
or
pop
gs
pop
sbb
add
cltd
pop
test
sti
inc
or
sti
loop
ds
outsb
and
dec
pop
cmp
es
inc
fmuls
mov
mov
or
inc
cmp
jnp
xchg
cmp
test
pop
movsb
ss
ss
inc
cld
in
sar
loopne
inc
jae
lds
jae
in
lret
adc
sarb
stos
inc
ds
fs
jo
add
cli
inc
in
call
scas
jnp
outsb
sub
mov
push
sahf
and
cld
cmp
call
dec
stos
pushf
in
mov
call
push
idivl
cltd
fcomp
jno
and
cmc
push
testl
dec
in
pop
es
dec
rorl
cmc
or
xor
aad
push
lds
jge
mov
xchg
ds
add
nop
mov
sub
mov
push
xchg
cmc
dec
ret
pop
pop
fidivrs
dec
cmc
cmp
sub
outsb
into
xchg
lret
dec
ret
orb
jp
adc
and
sbb
lods
adc
push
repz
xchg
xchg
push
inc
dec
nop
aaa
stc
sub
jl
xor
roll
sub
leave
dec
adc
in
or
pop
mov
sahf
jmp
fisubrl
lds
push
pop
sbb
xchg
xchg
sti
fwait
jl
xchg
mov
pop
ljmp
test
or
push
movb
or
loope
or
jb
sub
ja
outsl
sbb
scas
and
jae
movsb
cmpsl
xlat
cmpb
ss
and
imul
add
dec
pop
jae
sub
ds
jns
mov
xor
add
push
lcall
add
add
jl
mov
xchg
xlat
inc
enter
nop
push
mov
daa
fwait
or
mov
add
adc
mov
imul
sbb
mov
dec
enter
pop
xchg
sbb
xor
mov
push
and
adc
mov
lds
imul
jge
enter
dec
add
test
mov
test
icebp
mov
pop
fstps
ds
ficompl
insb
inc
jbe
movsb
movsb
dec
dec
xchg
jl
push
out
add
out
or
icebp
jge
mov
ficoms
pop
std
fbstp
fsubs
cmp
mov
lret
imulb
inc
fsubp
or
jg
lret
das
ja
push
aaa
push
sahf
xor
test
cmp
add
adc
mulb
jmp
cmpsb
aaa
mov
inc
sbb
sbb
adc
shl
pop
sbb
dec
and
inc
stos
dec
cmp
insl
stos
rcrb
push
push
add
ss
sub
in
leave
cmp
es
ds
jae
xchg
ds
test
mov
lods
adc
sbb
and
pop
sti
cmc
mov
xor
mov
mov
mov
or
ds
pop
adc
sbb
test
mov
sbb
iret
push
mov
mov
sbb
aad
scas
xchg
rorb
push
adc
and
lock
mov
adc
xor
lods
jp
sbb
mov
mov
dec
imul
lods
cmp
clc
mov
dec
mov
push
jp
cmpsb
push
jmp
xchg
mov
inc
push
and
push
xlat
add
add
or
shll
cli
adc
sub
xchg
xchg
shrb
lret
loopne
jb
push
lret
add
push
sub
popa
scas
inc
push
scas
adc
into
call
pop
cmp
or
pushf
xor
and
sub
push
mov
or
xchg
mov
std
push
mov
scas
adc
mov
add
add
out
add
arpl
pop
push
pop
sbb
xor
mov
fwait
or
fstpt
add
cs
mov
jmp
enter
movsl
movsb
rcll
mov
mov
mov
mov
popf
int
lods
mov
pushf
lock
in
and
inc
dec
cmc
push
cmp
mov
repnz
jmp
into
stos
mov
xor
pop
mov
xor
fistps
cli
stos
pop
or
and
stos
je
jg
xor
add
cmp
add
push
xor
pop
mov
dec
and
idivl
cmp
xchg
mov
aam
leave
ffree
iret
push
jne
aad
pop
fwait
addr16
ja
push
sahf
mov
mov
aam
pusha
mov
pop
scas
out
jae
out
pop
mov
in
ret
sub
aas
push
inc
adc
mov
fmul
aaa
inc
xchg
inc
mov
insb
cmpsb
cltd
mov
arpl
dec
mov
fwait
outsl
in
push
loopne
mov
or
adc
cmc
insb
iret
jbe
mov
sub
imul
push
pushf
mov
cli
enter
add
sbb
mov
or
cmc
sub
sbb
or
aas
leave
mov
ljmp
adc
idiv
in
push
hlt
xor
cmp
data16
stc
add
out
or
mov
dec
test
push
out
movb
add
push
aaa
sbb
dec
jmp
xor
pusha
xor
jne
xchg
mov
sub
shlb
jle
cmpsl
adc
xchg
repnz
and
adc
mov
psubusb
adc
cld
fstps
mov
js
in
xchg
cltd
mov
inc
and
adc
js
inc
jno
xor
rcll
leave
sbb
out
and
xor
ficoms
or
push
adc
mov
fnsave
and
shrb
lahf
sub
mov
repz
xor
adc
lea
mov
loop
pop
pop
mov
scas
mov
cmp
leave
enter
rol
xchg
sbb
ds
xor
pop
lcall
mov
push
add
adc
ret
jmp
xchg
sub
cld
mov
adc
lret
jp
scas
fwait
push
pop
popf
or
popa
outsl
inc
fisubl
lret
ja
mov
divb
add
stc
xchg
divb
mov
shl
cwtl
lods
incb
loope
fnstcw
inc
xlat
add
clc
ja
mov
stc
and
jae
les
add
loop
out
pop
cltd
xchg
repnz
ret
std
sbb
sub
add
ret
fistpll
insl
lods
cmp
sub
lahf
or
or
push
pop
mov
inc
mov
sbb
xchg
adc
ss
push
pop
lret
mov
repz
mov
mov
mov
stc
push
ss
pop
mov
mov
jae
lahf
pop
lock
mov
inc
les
add
sbb
je
gs
and
and
push
js
pop
ficomps
icebp
pcmpgtd
popf
and
sub
and
adc
lcall
jmp
cmc
jge
mov
xchg
outsl
sti
xor
incb
dec
adc
pop
mov
cmp
mulb
loope
sub
mov
pop
add
pop
pusha
cmp
rcpps
inc
pop
cmpsb
movsl
xchg
dec
mov
sbb
sbb
scas
and
or
dec
imul
pop
and
jge
imul
fcomps
dec
adc
push
xchg
dec
stc
and
xchg
dec
add
pop
jecxz
xchg
or
mov
scas
ja
dec
lret
div
sbb
dec
pop
pop
add
sar
add
lods
sub
cmp
xchg
ret
push
imul
ja
leave
ficoms
fistps
test
shlb
call
sub
sarb
push
sti
ret
repz
sti
je
sbb
and
mov
movsb
jl
pop
or
or
jecxz
push
push
adc
std
fmull
in
cli
sbb
jno
pusha
mov
mov
aad
test
sub
flds
jmp
jns
cmc
sbb
mov
dec
xlat
jle,pt
icebp
ffree
and
popf
pop
pop
shl
leave
rol
jp
mov
push
fdivs
in
dec
sbb
cmp
push
arpl
fimull
mov
mov
icebp
xchg
cltd
xor
cmc
scas
shrb
sub
pop
cmp
fldl
push
pushf
fwait
in
or
jbe
sbb
lea
inc
es
jge
int
test
mov
enter
rclb
cmp
add
dec
add
loop
xchg
inc
sub
rclb
inc
dec
dec
lahf
pusha
sub
sbbl
sbb
roll
xchg
test
pop
xchg
dec
mov
sbb
mov
pop
push
addr16
jp
mov
mov
xchg
push
dec
mov
loop
xchg
push
or
xchg
sbb
xchg
jle
sbb
in
push
ss
jne
sbb
dec
mov
shl
or
aaa
mov
je
mov
sbb
loop
fdivl
and
lock
insb
mov
in
sub
xchg
jmp
push
sti
aad
std
push
fdiv
mov
scas
push
stos
and
lock
js
mov
cmp
sub
mov
mov
sub
cwtl
faddl
and
inc
out
mov
dec
aad
ret
mov
dec
test
xchg
mov
mov
js
mov
int
jecxz
or
lret
lea
call
je
out
je
jbe
cli
cli
mov
mov
pop
xchg
ret
ja
jbe
daa
rcrl
aas
pop
xchg
std
cld
int3
into
cld
shl
mov
das
mov
lret
adc
sbb
mov
cltd
fidivl
bnd
call
sbb
push
push
push
xchg
clc
out
inc
push
push
add
rcrb
and
test
test
adc
out
aam
call
aam
inc
add
rclb
popa
ja
pushf
cltd
pop
pop
imul
mov
adc
lock
or
xor
xchg
jns
inc
cld
xor
fs
fstpl
imul
outsl
pop
or
cmp
mov
jmp
pop
daa
fs
lods
mov
cli
imul
push
ljmp
xchg
jg
adc
in
jo
adc
or
jge
sub
inc
add
in
das
imul
imul
inc
inc
or
movsl
sbb
mov
loope
test
jecxz
js
pop
fisubrl
cmp
fnstcw
cli
test
jecxz
xchg
aam
fcompl
mov
mov
cltd
lret
or
inc
xor
rcrl
add
cmp
add
test
sub
in
filds
jecxz
cmp
xor
fcomip
cmc
daa
in
scas
dec
xchg
mov
popf
mov
dec
pop
inc
aas
sub
aad
nopl
dec
mov
sub
loop
jle
xor
enter
cmp
ret
lret
mov
dec
adc
dec
push
int3
xchg
jno
lock
les
in
popl
add
movsl
dec
repnz
sbb
loope
mov
sub
loop
int3
sbb
aaa
popa
fs
aam
and
adc
bound
push
enter
sarl
mov
pop
fcmovne
test
xor
pop
lahf
mov
mov
jae
add
push
lcall
mov
mov
aas
mov
ficompl
cmpsl
je
add
fxtract
pop
mov
ficomps
mov
subb
and
push
mov
add
out
fistps
sub
jge
icebp
mov
clc
pushf
mov
inc
hlt
out
sti
push
icebp
mov
cmpsl
fldcw
lods
and
jns
inc
sbb
adc
loop
outsl
xor
xor
out
xchg
mov
inc
outsl
adc
mov
push
enter
ljmp
jp
cmp
xchg
sbb
or
sub
sarb
dec
scas
vmovdqu
sbb
clc
xchg
rcrb
dec
sbb
ljmp
fmuls
repz
sub
addb
dec
adc
cmpsb
arpl
inc
adc
add
stos
adc
sbb
loopne
or
pop
negl
lret
sahf
pop
xchg
push
test
dec
lods
push
jl
std
insl
sarl
into
enter
stos
xor
xchg
inc
push
and
add
cmp
loop
loopne
arpl
cmpsb
data16
push
imul
pop
pop
mov
mov
push
mov
lret
mov
mov
push
xchg
push
push
bswap
push
outsb
mov
out
rcll
jae
popf
or
sub
pop
cwtl
fldl
pop
std
cmp
cld
xor
insb
mov
xor
pop
cmp
mov
xor
jecxz
test
xchg
jp
shrb
jecxz
xorl
jg
mov
mov
sbb
stos
addr16
in
jae
sahf
into
leave
mov
jl
xchg
insb
call
leave
es
jnp
xchg
jmp
sbb
sub
cmpsl
fwait
addr16
push
mov
lea
aad
cmc
in
inc
je
dec
inc
hlt
push
dec
ja
adc
out
bswap
incb
push
xor
xchg
push
jg
repz
or
cmp
push
sarl
shr
xchg
push
aam
jecxz
mov
xor
xlat
push
clc
cmp
lds
fistps
shlb
xor
bound
mov
xor
scas
leave
sbbl
scas
lahf
movsl
xlat
jecxz
or
mov
and
cs
das
dec
lahf
pushf
test
out
push
or
std
daa
pop
ljmp
push
roll
inc
lods
or
cmp
mov
xchg
pop
arpl
ror
lret
test
and
movsl
dec
fiaddl
das
cmc
pusha
shr
mov
sbb
shl
outsb
cltd
dec
iret
mov
adc
lods
daa
out
imul
dec
add
pop
shl
imul
mov
fstl
inc
push
fdivs
pop
or
js
inc
mov
ret
popa
fwait
cld
sub
pushf
xor
imul
insb
loop
and
aaa
or
jno
mov
mov
dec
xchg
aam
jmp
lret
cmp
jns
loopne
inc
lods
mov
add
jecxz
out
test
mov
xor
pop
xchg
in
add
jns
insb
jo
arpl
aam
xchg
enter
ds
jmp
inc
xorb
in
mov
or
mov
imul
fs
ret
jb
dec
lret
and
sbb
cld
sub
mov
fwait
test
mov
adc
enter
mov
loop
es
jnp
adc
scas
sub
aad
push
xchg
pop
pop
shll
sub
cmp
xchg
mov
dec
inc
fsubrs
mov
call
mov
or
jge
loop
jmp
mov
jnp
cli
test
cmp
cmpsl
fldenv
jecxz
outsb
xor
jge
aad
jbe
mov
movl
mov
movsl
int
shlb
mov
mov
cld
in
sbb
addr16
mov
pop
std
ret
data16
cmpsl
mov
add
insb
dec
lcall
mov
stos
pop
xor
stos
dec
jne
mov
add
pop
adc
lods
jnp
add
jecxz
push
loope
or
imul
fmull
icebp
add
in
loopne
dec
shrl
push
ja
cld
scas
jo
movsl
cltd
ret
xchg
in
in
inc
pop
ss
push
pop
dec
pusha
push
cmp
ja
cmp
cmpsb
xor
add
cltd
and
push
cmp
jp
and
push
jge
enter
call
xlat
rcll
imul
inc
jo
leave
lret
xchg
push
icebp
jb
cwtl
es
inc
fwait
and
xor
mov
daa
negl
cmpsb
cld
jbe
push
pop
gs
aas
dec
xchg
aam
lret
ficoms
repz
or
sbb
inc
sbb
out
in
add
jge
rcl
imul
xchg
nop
jge
sub
icebp
je
jmp
stos
sub
cmp
loope
sub
insb
loop
sbbb
pushaw
out
pusha
repnz
xor
andl
leave
or
ret
jp
mov
mov
mov
sub
sbb
cmp
shr
jbe
xor
mov
in
push
and
jmp
es
andl
push
mov
jae
int3
loop
adc
push
out
insb
lcall
cmpsb
jecxz
rclb
sbb
add
jg
je
sub
pop
sbb
jno
or
jbe
push
mov
stc
int3
mov
jne
jns
pop
test
pop
mov
int3
lahf
in
sbb
mov
pop
addr16
xchg
lret
jge
jne
dec
push
push
fwait
xchg
das
enter
jg
shll
sbb
out
pop
fldl
out
or
lods
or
stc
pop
cmp
mov
mov
loopne
dec
pop
mov
adc
inc
cs
push
pop
aad
outsl
sbb
add
or
inc
push
jecxz
fstps
push
das
inc
enter
test
lock
js
imul
or
push
les
movsb
push
mov
hlt
and
sbb
iret
or
pop
cmpsb
stos
push
sub
movsb
adc
fcoml
dec
mov
xchg
pop
adc
call
push
xchg
xor
into
int3
lcall
push
lods
and
xchg
sahf
stc
js,pt
ss
sbb
or
icebp
test
je
sti
ss
add
mov
outsl
mov
arpl
cltd
mov
jecxz
aam
in
jns
popa
mov
cs
iret
cmp
jmp
lret
jns
mov
and
cli
js
mov
lds
out
inc
loopne
sub
jo
jbe
sbb
aas
ret
in
cmpsl
repz
jle
outsb
fisubrl
fisubrl
daa
mov
push
jne
stos
int3
enter
inc
out
sub
loope
shrl
lods
adc
mov
lcall
shll
test
fidivl
ljmp
aas
addb
push
cmp
pop
test
inc
fptan
sub
adc
push
dec
mov
sahf
jmp
dec
outsl
push
adc
outsl
fmul
jmp
adc
add
mov
xchg
xchg
sub
cmp
gs
out
jge
xor
addr16
push
xor
lcall
sti
outsb
jns
pop
and
sbbb
sub
jnp
push
lret
jne
in
test
mov
sar
test
inc
sbb
es
repz
mov
and
lods
jle
ljmp
pop
or
pop
or
and
js
mov
mov
test
lahf
or
sbb
repnz
pop
jge
pop
jo
xchg
mov
pop
jmp
pop
add
repnz
in
mov
push
mov
jecxz
lret
popa
adcb
inc
or
fwait
cmpsb
test
lahf
pop
shll
scas
push
xchg
aam
ja
mov
jae
sub
int
dec
pushl
roll
shl
fstps
std
cmp
dec
pmaxsw
push
popa
fnstcw
inc
dec
and
mov
xchg
and
arpl
add
cld
movsl
and
jb
jecxz
mov
fsts
push
loopne
mov
lahf
daa
dec
add
jge
rclb
add
call
jp
adc
adcb
lods
cmp
and
cmc
lcall
pop
and
lods
adc
inc
test
dec
mov
loop
adc
lds
pusha
sti
or
hlt
mov
sub
jmp
mov
repz
fbld
clc
adc
sub
inc
jg
shlb
iret
adc
xlat
mov
loopne
push
out
jecxz
movsb
sti
jae
mov
push
cs
fwait
add
push
dec
jno
rcrl
sub
inc
xchg
sbb
insl
pop
xchg
rcrb
test
pop
jnp
outsb
out
xchg
mov
pop
jns
inc
dec
add
hlt
in
aad
mov
jl
xchg
mov
inc
jl
loopne
mov
icebp
or
cmp
notb
mov
iret
mov
outsl
jle
xchg
pop
sub
xor
int
pop
fistps
lods
cmp
mov
sub
push
inc
xor
push
cmp
popa
loop
jo
mov
repz
pop
mov
aas
gs
and
jbe
jb
outsl
outsb
pop
mov
pop
bound
sub
push
popa
xchg
inc
dec
mov
fwait
loop
aad
icebp
mov
mov
in
aas
iret
sahf
xor
insl
xchg
adc
les
push
scas
std
fildll
add
mov
movsb
sub
test
xchg
jmp
cmpsl
add
scas
pop
js
subl
jne
xchg
pop
push
popf
shrl
je
fisttpl
sbb
sbb
loop
adc
scas
dec
lds
mov
dec
mov
cmp
loope
ret
sti
or
lods
shlb
push
test
icebp
push
cs
cli
imul
mov
fdivrs
push
popa
shrl
in
lock
lods
cmp
out
mov
rcrb
xlat
xor
les
add
aas
xor
xchg
cmp
add
mov
aas
jns
shlb
sbb
testb
jp
lock
js
mov
push
cmp
sub
test
ja
push
pushw
ljmp
out
rclb
mov
pop
mov
lock
jne
pop
mov
sbb
pop
imul
lret
rol
out
fmull
in
add
outsw
fdivrl
repz
pushf
aas
cmp
outsb
xchg
enter
sbb
xor
cmp
int
jge
sub
push
and
push
mov
mov
out
add
mov
pop
push
mov
mov
push
jg
cmp
test
int3
mov
xchg
xor
xchg
dec
inc
xchg
xchg
cmpsb
movsb
cli
rcrb
or
mov
inc
adc
xchg
ds
lds
orps
jmp
scas
icebp
xor
iret
aam
dec
stc
push
clc
mov
or
push
xchg
daa
adc
push
jo
sahf
inc
test
iret
inc
inc
inc
adc
cs
or
sub
iret
into
aas
in
int
ja
aas
mov
icebp
xchg
mov
popa
cmpl
cwtl
pusha
push
sahf
repz
mov
aad
mov
adc
roll
out
xchg
loope
aad
xor
insl
test
sbb
and
popa
mov
in
dec
jle
in
dec
inc
leave
outsl
add
inc
push
rorb
arpl
push
inc
fcomp
fiaddl
adc
ss
sbb
imul
repz
inc
test
add
enter
ja
dec
xchg
inc
push
mov
and
sub
jne
nop
fs
and
mov
clc
push
fiadds
jbe
jb
xchg
out
mov
inc
inc
inc
mov
or
jb
sbb
ror
ds
jp
shl
jbe
pop
out
mov
les
test
and
adc
pop
cmp
adc
pop
xchg
out
in
fwait
push
inc
ss
es
mov
andb
push
dec
mov
imull
clc
fmuls
ds
cmp
std
add
ret
push
adc
imul
push
cmc
adc
cld
out
les
cwtl
fistpl
jae
mov
mov
fisttps
xchg
xchg
daa
fcmovu
ja
xor
daa
xor
fadds
fldcw
xor
test
push
mov
mov
mov
push
push
adc
mov
pushf
inc
inc
pop
out
pop
in
push
into
jb
mov
and
cmpsb
jb
inc
mov
jl
xchg
aad
push
iret
adc
jns
adc
add
sub
push
push
xchg
out
push
clc
dec
out
add
add
clc
pushl
out
jl
fnstsw
lods
push
icebp
xchg
shll
jecxz
enter
pushf
jg
imul
mov
inc
mov
inc
cld
daa
sbb
pop
mov
push
xchg
inc
xor
sub
mov
xchg
mov
or
pop
lods
fwait
sub
mov
in
xor
lea
out
push
jne
cmpsl
loop
dec
fwait
shlb
mov
test
sub
add
mov
jp
xor
test
push
stc
inc
or
push
inc
jb
mov
ljmp
inc
jno
inc
idivb
in
aad
outsl
push
dec
xchg
cmp
inc
jno
idivl
adc
jae
lea
into
mov
rcrb
inc
mov
or
cmp
adc
movsb
push
pop
push
out
adc
add
cmp
test
cmc
dec
push
ds
mov
lods
es
fs
xchg
leave
stc
mov
cld
jl
xlat
pop
dec
mov
rol
pop
int
faddp
sub
mov
test
mull
pop
sbb
fstl
mov
add
out
call
mov
pop
pop
mov
push
add
int3
inc
enter
pop
mov
stos
mov
stc
mov
or
or
mov
cmp
ds
pop
cmp
fidivrl
icebp
push
xchg
test
xor
adc
aaa
scas
rcl
bound
xchg
out
fs
lock
xor
xchg
or
xor
sbb
orl
call
mov
leave
ret
cmpl
add
rcrl
mov
mov
gs
jp
jmp
shlb
jnp
dec
jmp
cmp
xor
out
and
jecxz
sti
mov
call
fistps
xor
mov
lahf
mov
mov
adc
add
fwait
gs
or
xor
xor
adcb
clc
sti
insb
jno
pop
loop
sbb
lcall
sbb
or
dec
cmp
and
xlat
push
mov
test
xchg
jecxz
in
std
mov
lock
sbb
cltd
jp
iret
xlat
pop
mov
xchg
xchg
sahf
push
loopne
sub
fwait
and
das
pop
shll
and
add
push
bound
add
repnz
push
xor
sub
fidivs
leave
movsl
mov
push
pop
add
jge
loopw
mov
mov
fsubr
mov
sub
add
cmp
push
xchg
inc
push
rolb
lahf
cwtl
addr16
fidivrs
test
cmp
mov
imul
pop
sarl
add
lods
push
mov
fbstp
mov
loope
or
or
or
daa
les
mov
add
lcall
into
out
cmp
mov
imul
inc
dec
aad
jne
adc
shrl
popa
cli
xor
push
pushf
mov
insb
jl
add
mov
dec
sub
and
jno
loop
push
in
in
mov
jbe
ret
mov
les
jg
rolb
iret
mov
out
inc
push
mov
xor
insb
sbb
xchg
mov
push
testb
sbb
mov
leave
push
les
pop
fisubs
andb
mov
imul
lahf
ds
imul
cmpsb
sub
jl
sub
shll
and
cwtl
adc
jge
cmp
out
cwtl
xchg
fcoml
lea
and
sub
insb
push
repnz
xor
add
rep
cmp
out
mov
repnz
aam
into
cmc
mov
and
xchg
loop
pop
fsubrs
dec
loope
jecxz
pop
fwait
jge
push
push
shr
cmp
mov
stos
inc
mov
test
shll
xorb
xchg
in
adc
mov
and
pop
push
lahf
js
mov
jecxz
rorl
aam
lret
inc
repnz
aaa
pop
add
repz
jbe
push
ja
cli
lret
call
cmp
jg
lret
xorb
clc
push
bnd
shlb
lods
pop
inc
cmp
pop
scas
leave
xchg
xlat
jo
call
cmpsl
jns
fwait
lret
adc
sbb
lock
mov
test
xor
pop
push
pusha
cli
xchg
add
push
mov
pop
loopne
ret
cmpsl
ret
ss
lcall
sti
cld
cltd
sub
cmp
pop
push
sub
pop
jbe
push
dec
xor
inc
testb
addb
or
dec
jecxz
cmp
and
popa
xlat
sub
mov
sbbl
inc
idivb
iret
or
or
ret
addr16
mov
fcmovnb
test
sti
mov
mov
push
inc
xor
loop
pop
mov
mov
inc
pop
xor
cli
sbb
bound
sub
and
inc
cmp
mov
jb
mov
xchg
cmpsb
je
push
mov
lret
fisubrs
xor
loope
inc
and
mov
adc
shrb
inc
addr16
mov
xor
int3
popf
mov
adc
xchg
stos
stos
push
inc
push
cmp
or
pop
adc
mov
push
mov
fwait
testl
jnp
cs
xchg
data16
jge
dec
loopne
divb
js
mov
jle
fistps
loope
sub
mov
push
mov
xlat
pusha
leave
ret
mov
inc
ss
mov
xor
nop
or
mov
call
push
jo
cmpsl
stos
dec
xchg
jle
loope
mov
movsl
mov
mov
cmp
fs
flds
imul
repz
push
mov
lea
sub
in
in
bound
int3
cmpsl
push
mov
lahf
int3
sbb
ds
in
mov
and
ret
mov
pop
push
mov
pop
int3
mov
and
and
pop
mov
addr16
movb
lahf
and
ds
fsub
sbb
push
repz
mov
lret
int3
test
rcr
rorb
mov
lret
adc
shl
loope
jle
pop
push
or
std
mov
jle
jp
test
xchg
xor
cmp
es
cmpsb
inc
daa
movaps
fisttpll
push
daa
or
in
into
mov
xchg
or
pop
jno
mov
pop
fistpl
out
fwait
outsl
cwtl
pop
push
mov
sahf
jbe
into
neg
sbb
dec
imul
into
pop
int3
ret
mov
dec
jp
add
fdivr
fwait
and
cmp
lret
or
or
shl
ret
xchg
aaa
push
sub
jmp
inc
lahf
and
xlat
je
xchg
sbb
cs
sbbb
addr16
inc
loop
or
dec
sub
fistpl
call
lcall
xchg
out
dec
push
test
popa
fdivl
push
mov
adc
push
and
xchg
and
mov
adc
gs
aad
ret
cwtl
mov
mov
lods
push
scas
scas
sahf
mov
fmul
mov
imul
shrb
sti
jecxz
lret
test
mov
int3
xchg
popf
inc
loope
pop
pop
in
lods
outsb
dec
push
inc
dec
jb
mov
or
or
adc
pop
mov
loop
xchg
dec
inc
cmp
mov
inc
aam
int3
xchg
es
iret
or
jb
sahf
cmp
pushf
sub
lea
xor
maskmovq
idivl
in
rcr
inc
mov
sahf
xchg
lods
mov
sbb
loope
cmp
test
push
movsb
lcall
jae
sti
loop
pop
pop
xchg
ret
mov
sbb
adc
rcll
dec
ret
xor
ss
mov
lea
xor
test
int3
sbb
add
adc
xor
jmp
lock
inc
and
jns
insb
pusha
data16
jmp
pop
sub
xor
rorl
or
ljmp
fnstenv
dec
push
insb
enter
dec
insl
movsl
sbbb
mov
jns
mov
dec
pop
jp
mov
push
push
prefetch
xchg
dec
sub
mov
imul
incl
cmp
jne
mov
test
push
stos
f2xm1
pop
add
test
cwtl
inc
sub
push
sub
xor
daa
sub
notb
and
loopne
rolb
imul
mov
insb
insb
mov
sbb
jmp
dec
xor
or
cmp
jmp
add
dec
loop
push
mov
or
adc
inc
jae
adc
data16
movsb
jmp
shrb
pop
test
arpl
cmp
fmuls
mov
pushf
aam
mov
iret
sbb
lahf
ficompl
sbb
adc
dec
sub
pusha
add
std
add
sub
dec
xchg
int3
add
pop
push
push
popf
sti
fmul
aaa
les
add
shlb
scas
lea
arpl
hlt
xlat
int3
pop
jg
xchg
pushf
pop
cmp
push
jge
mov
loope
call
js
loope
icebp
inc
or
and
sbb
mov
lock
xchg
or
sub
mov
and
xchg
pop
mov
ror
lea
dec
cs
sbb
add
idivl
arpl
repnz
inc
es
arpl
testb
inc
pop
mov
jg
or
dec
add
fwait
jg
xchg
xchg
test
mov
rcrb
inc
mov
mov
lret
aam
dec
jmp
adc
dec
daa
push
mov
and
dec
test
push
sti
mov
pop
repnz
daa
pop
repnz
or
mov
sbb
inc
cmp
out
push
les
or
stos
call
int
mov
gs
and
mov
shr
lds
loop
addb
sub
inc
shll
dec
dec
mov
fisttpll
outsb
mov
mov
xchg
or
sub
pop
test
lea
cld
in
ret
add
shrb
dec
mov
mov
xchg
aam
fwait
int3
aas
adc
int
push
add
jns
addr16
fstpt
mov
adc
jecxz
add
inc
push
jb
jg
dec
mov
sub
movsb
adc
push
lods
push
pop
test
lods
xchg
and
or
daa
jle
or
mov
loope
pop
sbb
mov
in
test
icebp
pop
jp
sbb
xlat
adcb
rorb
ret
inc
enter
lahf
xchg
call
pop
ljmp
movups
ss
js
xor
inc
repz
xchg
mov
mov
xchg
push
ret
out
divl
aad
fs
iret
push
das
adc
ret
cmc
daa
mov
ljmp
add
or
push
mov
int3
jl
and
cmpsb
xchg
addr16
test
pop
mov
fwait
jno
outsl
cmpsb
bound
dec
ja
test
push
frstor
jae
mov
imul
add
dec
push
jge
stos
mov
hlt
xchg
pop
adcl
out
out
decl
jns
mov
and
dec
mov
js
out
shrl
cs
push
jne
or
cmpsl
aaa
push
icebp
fsubl
and
inc
dec
pop
add
pop
cli
into
pop
jae
sub
call
imul
es
dec
sub
sahf
xchg
xchg
movsb
aam
jbe
jmp
sti
and
outsb
imul
bound
ja
and
xor
or
sarb
lahf
pop
cmc
movsl
and
pop
test
cmpsb
sbb
in
jnp
sahf
negb
push
mov
xlat
push
test
mov
loop
push
jle
pop
jno
sub
xchg
sbb
xchg
aaa
or
push
push
and
dec
pusha
movsl
mov
cmp
cmp
sahf
sub
je
daa
and
lcall
icebp
repz
int
imul
test
cli
fimull
cmp
add
mov
xor
lret
leave
mov
insb
inc
xchg
adc
adc
dec
stos
gs
mov
jle
add
jmp
jno
shl
mov
loope
and
or
xor
sbb
scas
mov
pop
neg
or
leave
gs
jns
xor
mov
push
add
fisubrs
lds
es
mov
notl
insl
mov
movsl
scas
jae
dec
push
stc
insl
mov
push
popa
xor
and
and
push
mov
jb
adc
je
lahf
dec
and
std
mov
fcoml
push
xchg
add
inc
pop
rorl
jae
mov
mov
xlat
in
rorl
dec
lds
pusha
fldt
or
push
pushf
add
insl
das
push
mov
cmpsb
test
ret
lds
inc
in
test
and
pusha
sbb
testb
sub
mov
cmp
or
imul
movsb
jl
cmpsl
aam
lahf
sbb
dec
push
notb
and
pop
mov
arpl
nop
pop
dec
adc
push
mov
jecxz
shlb
push
andl
fsubs
add
mov
data16
xchg
pop
sub
push
mov
pop
gs
sub
into
in
enter
fadd
repnz
fidivs
fwait
movd
mov
and
scas
push
sub
movsl
pop
push
mov
iret
enter
add
pop
and
shrl
mov
not
cmp
out
xor
adc
mov
jp
xchg
push
lahf
sub
cmp
lret
filds
pop
dec
mov
out
and
jns
push
adc
jmp
std
das
adc
fildll
mov
orl
or
insb
int3
sbb
pop
dec
push
push
nop
jl,pt
sbb
adc
dec
stos
pop
cmc
jecxz
pop
cmpsl
clc
jecxz
adc
dec
mov
fistps
aaa
dec
push
cli
mov
xor
test
sarb
sbb
push
mov
dec
les
cmp
add
pop
xlat
mov
and
pushf
decb
jns
add
cwtl
inc
mov
inc
jge
inc
mov
xchg
nop
sub
sub
das
mov
mov
mov
push
or
int
shrb
out
test
mov
outsb
das
fsubrl
nop
icebp
jo
loop
fisttpl
mov
jbe
jae
les
cli
nop
xor
clc
push
dec
call
fsts
ja
loop
nop
mov
pop
mov
cmp
pusha
or
test
or
push
imul
ss
loop
cmp
dec
outsl
mov
push
rolb
mov
jbe
enter
iret
pop
cmp
and
xor
adc
shlb
mov
jo
push
cli
xor
pop
xor
ljmp
xchg
add
mov
pop
in
sarl
push
jp
xchg
push
adc
cmp
rcll
mov
mov
mov
or
sbb
lret
mov
and
lret
iret
inc
rdtsc
hlt
idivb
insb
cmc
fcompl
cli
xor
and
push
call
mov
add
jecxz
jb
fidivrs
cmpsb
pop
xchg
dec
mov
stc
pop
push
xor
pop
xchg
pop
push
cmp
xor
aaa
add
or
or
stos
cld
into
ret
mov
enter
or
loop
enter
ds
or
lods
clc
data16
or
cmp
dec
outsl
neg
cmp
adc
xchg
jmp
pop
cs
fsubrs
addb
sbb
push
push
or
dec
ret
xchg
push
lock
cmp
and
dec
or
inc
mov
push
negl
sub
cmp
lods
out
outsl
push
lret
inc
mov
test
movsb
adc
pop
fcomps
mov
cmp
mov
pop
jnp
mov
fldl
or
loopne
bound
pop
mov
test
hlt
xchg
inc
adc
test
das
lcall
insl
call
sub
inc
xchg
bound
and
pop
jne
xlat
shlb
push
inc
out
mov
dec
and
or
xor
sbb
inc
gs
sub
movsl
and
mov
jl
pusha
mov
insb
fs
cmp
mov
adc
imul
repz
ljmp
xchg
xchg
adc
or
movsl
daa
ficoms
aaa
jbe
pop
xor
scas
fildl
push
out
cmp
filds
cmp
daa
cmp
ljmp
stos
mov
dec
in
sub
negl
fstps
push
lock
xor
pop
push
add
loope
push
push
pop
leave
sti
xlat
dec
push
loope,pt
enter
inc
sarb
gs
jae
lcall
jb
jle
xlat
sub
adc
add
inc
cmp
jne
lds
mov
call
cwtl
pop
adc
jp
sbb
mov
mov
jbe
jl
leave
lds
lret
add
xchg
je
icebp
cltd
xchg
bnd
cmpsb
push
mov
in
and
mov
lret
add
mov
scas
and
loope
xchg
fimuls
pop
add
sub
sti
sub
xchg
jns
pusha
sbb
cltd
or
ss
or
out
jb
ret
mov
mov
mov
shrl
pop
adc
mov
xchg
popf
or
or
xchg
xchg
es
cmp
fmuls
ds
gs
scas
jp
sub
xchg
xchg
enter
adc
sub
pushf
sbb
jecxz
jecxz
lea
adc
push
push
sbb
andb
mov
and
mulb
xchg
je
add
sbb
or
test
clc
int3
push
adc
dec
out
cmp
ss
cmp
pop
sub
cmpsl
lods
mov
dec
rol
cmpb
jle
nop
pop
cmp
jp
arpl
mov
lahf
mov
loopne
mov
jae
lahf
xor
push
fimuls
or
loop
mov
add
or
and
lret
out
mov
push
ficoms
decb
scas
out
and
rcrb
or
inc
jno
cld
mov
scas
lea
or
nop
mov
xor
dec
rcrb
lods
lds
icebp
push
data16
sbb
xchg
pop
mov
mov
inc
pop
addl
add
pop
loop
sbb
fadds
fnstcw
sbb
shrl
aam
mov
ja
in
xchg
sub
pushf
in
jg
scas
popf
xchg
orb
jb
sbb
loopne
jns
cmp
sub
pusha
rcrb
sbbl
xor
xlat
test
jge
cmp
mov
mov
cmpsl
cmpsb
aad
ret
in
or
cmp
add
lret
pop
shrl
out
push
and
lcall
repnz
xchg
imul
les
mov
dec
lahf
sub
push
mov
pop
mov
pusha
inc
nop
negl
cs
scas
jne
xchg
stc
pushf
ds
or
push
imul
push
jno
out
in
mov
sub
rcl
mov
sub
or
xor
add
enter
fmul
loop
and
jmp
aaa
es
pop
dec
xchg
jle
lods
aaa
bound
or
sub
hlt
setle
or
fwait
cli
loope
mov
jne
inc
mov
mov
mov
jecxz
dec
ret
jg
call
gs
push
xchg
fmul
push
jge
push
aam
fsubl
addr16
je
ret
mov
stos
mov
call
jge
mov
pop
cmp
js
ficomps
sahf
in
scas
loop
inc
inc
jbe
movsl
dec
dec
add
jnp
in
fimuls
out
push
push
pop
scas
test
lahf
add
les
mov
xor
out
xor
mov
mov
sub
xchg
mov
pushl
ss
jno
dec
jns
sub
data16
or
sub
stos
pushf
ljmp
lods
xlat
jecxz
jbe
xchg
iret
jo
jl
pop
inc
rorl
push
lcall
int3
mov
int3
sahf
lea
das
imul
push
add
imul
push
sbb
xor
fs
pop
sub
push
in
mov
push
mov
int
addr16
mov
mulb
mov
jecxz
int3
sub
dec
jnp
jg
push
popa
mov
cmp
divb
mov
rolb
sub
cmp
enter
push
mov
ret
xlat
andb
xor
sub
div
mov
pop
cvtpi2ps
stos
adc
inc
push
sbb
adc
dec
divl
jmp
push
je
jmp
xor
xor
ficoml
pmaddwd
or
add
adc
movsb
fdivl
jne
cmp
push
sti
or
lods
je
jecxz
lock
ljmp
and
jns
fdivrl
mov
lret
aaa
mov
push
test
mov
std
repz
inc
scas
pop
add
test
ja
adc
int
cmpsl
sbb
lock
jmp
rcll
fdivrs
ret
rorl
hlt
sbbb
mov
test
nop
push
xchg
xor
enter
sub
mov
cmp
int
mov
add
push
mul
dec
pop
and
xor
cmpsl
mov
stc
icebp
lcall
pop
mov
in
sub
or
scas
push
ss
cmpsb
add
pop
xor
sub
mov
ja
xchg
and
sub
scas
adc
sub
fiaddl
insb
xchg
mov
pop
pop
pusha
test
jmp
sbb
or
mov
xchg
fwait
jo
loope
sub
pop
cli
js
adc
pop
mov
push
lahf
out
bound
sub
leave
push
int3
lock
push
inc
not
lahf
sub
jno
and
cmp
or
inc
cs
adc
out
ret
movsl
pop
stos
xor
imul
inc
or
sub
stc
jo
gs
gs
ss
mov
cmp
push
jp
repz
iret
push
add
and
xlat
cs
outsl
test
mov
aad
loope
mov
cwtl
shrl
xlat
xor
mov
sbb
cli
add
mov
lea
call
ds
push
cmpsb
cmc
jp
or
xchg
fisubs
ja
push
xor
orl
xor
lock
call
sub
mov
jns
push
fimuls
push
pop
xchg
mov
loop
sbb
test
pop
adc
push
inc
std
mov
repnz
sbbb
add
sub
lcall
pushf
lahf
xor
add
movsl
mov
out
out
mov
jmp
dec
fs
lock
cli
adc
inc
ret
cwtl
xor
fldt
setb
push
outsl
fbld
inc
jo
dec
out
rclb
int3
in
icebp
adcl
inc
rcrl
or
jno
push
loope
cli
cmp
pop
inc
mov
inc
jle
push
xor
jb
mov
jle
push
negb
movsb
fmul
loope
test
repz
movsl
pop
mov
mov
cmp
sub
scas
and
add
lds
fmuls
lea
xchg
or
loop
lahf
in
add
fdivs
scas
xchg
cltd
push
jle
sub
clc
xlat
sub
mov
and
ss
jb
test
repz
and
jl
into
adcb
dec
cmp
adc
hlt
mov
pop
mov
cmc
call
lods
mov
loopne
jo
pop
hlt
dec
xchg
sar
imul
mov
pop
lret
add
aas
or
int3
jns
sub
sahf
pop
inc
shlb
mov
xor
jno
xchg
mov
xchg
repnz
out
mov
and
into
adc
mov
sbb
lea
loop
fxch
sbb
pop
xchg
mov
hlt
pop
cmp
fnstsw
addb
mov
jl
inc
push
gs
fists
bound
xorl
jae
dec
inc
leave
sbb
jb
pop
dec
fisttpl
out
mov
mov
mov
add
sub
add
dec
lods
cltd
sbb
jns
mov
xchg
jmp
xchg
and
sub
testl
xchg
mov
std
ja
dec
movsl
testl
lret
lods
sbb
push
outsl
roll
push
and
movsl
outsl
mov
sbb
lret
loope
add
cs
rol
sbb
lret
test
dec
mov
fisttpll
xchg
push
imul
xchg
push
les
sahf
add
xor
fnstsw
and
popa
mov
lahf
jae
shl
sbb
jae
adc
sbb
rorl
hlt
mov
inc
inc
push
push
int3
cli
xlat
cmp
call
fwait
jle
roll
je
mov
filds
add
leave
lea
xchg
or
mull
push
lret
idivb
mov
and
push
in
sti
mov
fcomip
xchg
std
cmp
and
in
mov
into
jo
cmpsb
ss
mov
mov
test
xchg
mov
sbb
loope
pop
fsubl
out
sbb
or
mov
add
test
cmpsb
xor
mov
lods
jl
jo
xor
jmp
das
mov
pop
and
mov
pushf
or
movsb
jle
les
mov
dec
aad
stc
cmp
pop
aaa
pop
test
stos
jmp
iret
lea
repz
fs
out
test
sub
jne
test
leave
pop
lods
add
sub
jb
fwait
cmp
sbb
lock
andb
inc
cmc
inc
mov
inc
sub
lods
dec
sbb
and
inc
fiadds
push
and
testb
add
dec
stos
pusha
jbe
pop
cmp
add
lods
inc
scas
aad
sbb
insl
data16
sbb
lcall
cmp
repz
xor
add
or
inc
mov
jp
and
fsubp
repnz
mov
push
xchg
adc
jbe
adc
xchg
mov
inc
xchg
push
mov
mov
dec
rcr
imul
mov
enter
sbb
or
mov
lret
pop
shll
cmpsl
movsl
jbe
shrb
mov
lods
xchg
push
or
inc
adc
sub
pop
aas
data16
std
fcoms
mov
mov
mov
mov
sti
je
sarl
xor
xchg
sub
test
or
pop
imul
inc
dec
arpl
fwait
scas
imul
xor
mov
pop
mov
mov
aaa
rolb
fstpl
or
jl
cmpsb
shlb
cmpsb
adc
movsb
mov
stos
imul
mov
aam
outsl
push
fwait
push
and
and
lret
dec
and
cli
sti
mov
jo
inc
adc
push
in
scas
push
adc
repnz
fbstp
hlt
sbb
imul
fdivl
sub
adc
sbb
jecxz
dec
push
aam
push
fwait
jbe
mov
movsl
xchg
mov
out
lcall
fwait
fs
mov
ret
aam
sbb
vmovaps
jge
pop
sub
jno
ja
aad
in
aas
xor
xchg
sub
jb
sbb
sub
aad
jnp
out
shrl
sub
test
xchg
insb
cli
mov
and
loope
mov
cmp
push
into
bound
bound
lds
xor
shrb
cwtl
jbe
clc
das
add
and
nop
push
in
lcall
sub
movsl
jbe
xor
pop
push
movsb
gs
mov
outsl
pusha
lahf
xchg
imul
test
push
jl
rclb
push
cmovo
dec
stos
cmp
mov
adc
stos
arpl
mov
lret
pop
fstps
dec
clc
add
inc
je
lret
sti
imul
xchg
inc
movsl
ja
mov
imul
jnp
jecxz
repnz
mov
jno
mov
xchg
lcall
or
lret
sub
push
inc
inc
jp
sqrtps
leave
out
dec
fdivs
mov
movsb
fiadds
lcall
add
shl
repnz
push
je
sub
aas
popa
xor
jg
jl
push
add
jle
lahf
test
lods
dec
pop
jne
ficoms
mov
mov
lret
repz
sti
negb
xchg
scas
das
push
pop
rorl
inc
orl
add
into
cmp
pop
push
in
pop
jb
jno
sbb
or
inc
mov
mov
mov
pop
es
mov
lds
loop
call
shrb
aad
sti
inc
pop
dec
outsl
cmp
mov
enter
movsl
or
sti
pop
and
and
sbb
xor
cmp
cmp
pop
imul
or
cmpsb
sbb
dec
jnp
pop
add
cmpsl
or
in
mov
sub
cmp
sbbl
mov
daa
dec
sub
add
jns
push
out
cmc
pop
push
jno
mov
inc
pusha
sub
addr16
push
cli
testl
int
icebp
push
lret
xchg
lock
shlb
cmp
add
dec
movsb
jnp
adc
test
lret
or
mov
fistps
std
mov
dec
xor
xor
fisubrl
clc
xchg
in
je
shll
shr
cwtl
int
cld
jecxz
pop
dec
xor
pop
xor
pushf
dec
push
mov
gs
das
sbb
xor
add
add
push
ret
mov
inc
test
fsts
jnp
mov
lea
imul
jbe
in
xor
mov
lea
mov
jbe
push
dec
sbb
mov
xchg
or
dec
mov
fistpl
lds
lret
push
in
mov
imul
add
and
mov
lods
add
stc
adc
das
dec
jmp
cmp
push
mov
xchg
adc
dec
lock
sub
fwait
jns
leave
jb
and
sbb
xchg
sti
gs
mov
mov
pushf
mov
push
imul
xchg
nop
pushl
xor
mov
nop
ss
test
xor
sub
and
je
sbb
mov
push
fbld
ljmp
out
cld
pusha
xchg
hlt
xchg
out
ljmp
or
jbe
and
jb
cwtl
xlat
std
int3
fadds
fwait
jg
out
add
dec
insl
addr16
lock
dec
mov
lock
into
mov
xchg
pop
pop
push
cmp
and
jp
sub
stc
jge
mov
rcll
movsb
ret
je
xchg
xchg
xor
xor
ret
into
loope,pn
subl
jae
xor
xchg
add
fwait
test
cmp
int
sub
negb
lret
mov
loopne
mov
test
push
sub
rorl
add
popa
icebp
outsl
jecxz
popa
mov
ret
daa
enter
ja
push
sbb
fildl
bound
inc
out
movsb
das
pop
out
sbb
data16
fs
cltd
jbe
push
lret
fisttpl
mov
out
cmpsl
fsubl
fistpl
lods
or
sbb
mov
dec
es
jbe
inc
in
mov
push
dec
popa
xchg
pushf
sbb
dec
shll
mov
js
leave
pop
fdivp
sbb
out
std
in
inc
and
inc
mov
nop
and
mov
shlb
fnstcw
loopne
pop
loopne
cmp
aam
pop
push
push
xor
pop
inc
xchg
mov
adc
nop
cmp
sub
es
cmpsb
loopne
xor
sti
cld
push
sarb
in
add
ret
mov
sub
out
xor
movsl
stos
pusha
push
mov
xor
arpl
pop
add
and
in
push
call
shrl
dec
mov
mov
int3
outsl
dec
cmp
pop
dec
jno
mov
lea
sub
xor
xchg
pop
jmp
mov
xchg
imul
fmuls
ret
xchg
pusha
mov
add
icebp
sbb
push
cmpsl
cmp
xchg
adc
mov
or
or
mov
bound
xchg
push
mov
cmpb
mov
aam
std
mov
dec
mov
mov
shlb
cmp
out
fcoms
rcrl
outsb
xchg
cmp
xchg
inc
fcoms
loop
outsb
or
roll
xor
mov
sbb
cltd
enter
and
repz
inc
add
push
fmull
out
fidivrs
fstps
adc
xchg
push
imul
sub
mov
mulb
movsb
inc
pop
jl
push
rcll
add
adc
lret
xchg
xchg
std
cmp
iret
mov
outsl
ret
cmc
imul
jb
sub
enter
xchg
arpl
pop
mov
repz
test
add
icebp
mov
mov
stc
sarb
jecxz
imul
movsb
loope
xchg
sti
mov
in
mov
mov
push
xchg
inc
dec
lods
cmp
push
mov
xor
inc
add
cmp
push
cmc
jp
pusha
pop
sahf
scas
mov
hlt
add
gs
xor
fistpll
dec
repnz
xor
cmp
dec
js
mov
xor
add
mov
std
push
mov
aaa
mov
xor
jns
pop
or
inc
in
xchg
sti
xchg
not
push
pop
imul
unpckhps
repz
mov
xchg
aaa
jmp
in
dec
inc
lahf
pop
pop
addl
lods
ljmp
out
add
adc
jg
cld
xlat
out
out
sbbb
add
fistps
nop
or
jl
and
cmc
jl
iret
push
jmp
mov
push
mov
std
cmp
add
iret
rcrl
add
inc
dec
adc
rolb
test
mov
nop
inc
out
pop
popa
adc
sahf
xchg
sti
dec
ret
fdivrl
push
add
or
test
shrb
cmpsb
std
dec
aaa
lods
ss
sub
loopne
aad
xchg
jns
push
cmp
jmp
inc
decl
stos
lock
jb
mov
fcoms
jbe
in
arpl
pop
xchg
add
and
into
xor
popf
fs
and
cwtl
pop
push
scas
or
dec
xlat
mov
cmp
nop
mov
imul
sarb
inc
out
adc
add
mov
lods
daa
ret
inc
jle
cltd
adcb
inc
mov
xchg
add
fdivs
pusha
lret
pop
xor
cwtl
mov
adc
loop
mov
lea
inc
add
cmpb
and
cmp
in
fdivr
jne
mov
xchg
pushf
addb
cli
add
imul
in
xchg
jmp
jne
into
in
in
je,pt
push
fisttps
jmp
pushl
je
jae
cmp
mov
mov
ss
mov
fcomps
rclb
cli
xchg
pop
cmp
mov
fstpl
repz
mov
mov
mov
push
imul
std
les
xchg
outsl
bound
sbb
fiaddl
test
inc
push
loop
lods
fwait
in
out
push
mov
cmc
test
fadds
fcoml
ljmp
pop
dec
mov
fbld
and
xor
adc
xor
push
fwait
aaa
popf
outsb
or
inc
mov
ret
add
adc
mov
push
jecxz
pop
aaa
outsb
pop
loopne
jle
je
nop
ja
fwait
mov
insb
lods
repz
lods
rcl
pop
sbbl
lret
sbb
jl
cwtl
push
mov
orb
mov
inc
adc
pop
test
imul
or
cmc
sub
xchg
enter
or
xchg
sub
popf
addr16
loop
mov
sub
inc
imul
call
xchg
push
pop
fsubl
loopne
scas
mov
jne
cs
mov
or
jecxz
push
pop
sub
adc
stc
mov
and
sub
lds
push
jb
into
cltd
daa
push
aam
xor
dec
rcrl
mov
add
mov
fldenv
mov
or
sub
mov
cmp
push
outsb
in
push
xor
mov
ficoml
jb
sahf
popa
sbb
adc
jb
dec
or
and
pop
xchg
mov
jo
fsubp
lcall
dec
dec
sub
adc
scas
dec
pop
and
int
dec
les
jge
sbbl
sub
iret
jb
xchg
pop
push
fcoml
dec
imul
movq
js
inc
or
lcall
sub
popa
movsb
mov
in
ficoms
mov
push
pop
stos
hlt
fildl
xlat
icebp
mov
mov
stos
xor
rcrl
sub
sbb
jnp
mov
jns
aas
push
data16
xor
sub
sub
ret
jg
or
mov
jo
idivb
cmp
sbb
les
aam
cld
data16
test
ret
xor
fisubs
adc
bswap
mov
lds
push
mov
sub
icebp
ljmp
mov
dec
sbb
pop
test
hlt
sub
adc
jbe
inc
push
mov
and
mov
push
clc
cmp
lods
jmp
jle
fisubrl
adc
mov
inc
jae
je
adc
loope
sahf
sarl
es
jle
jg
cli
in
hlt
cld
xor
ljmp
pop
rclb
mov
fwait
pop
cmp
aas
imul
mov
mov
test
add
pop
loop
xchg
sahf
jnp
add
jp
dec
call
enter
sub
ljmp
fcmovne
mov
dec
popa
cmc
fldenv
iret
sub
int3
out
push
int
push
fisttps
push
xor
mov
rolb
bound
stos
mov
mov
pop
popf
jne
shlb
pop
mov
jne
lahf
lea
inc
dec
pop
lock
fs
dec
nop
jl
aad
je
pop
xchg
mov
mov
mov
inc
jmp
add
inc
inc
xchg
insb
or
int3
pop
je
arpl
cmp
aad
or
adc
or
xchg
jne
inc
cmpsb
mov
mov
in
dec
rolb
fwait
and
mov
inc
mov
repnz
out
dec
push
pop
fmull
pop
dec
xchg
jne
lcall
mov
and
shrl
mov
shl
xor
inc
in
mov
xor
push
arpl
imul
push
in
push
mov
daa
sbb
arpl
dec
inc
and
test
pop
cmpsl
jmp
pop
arpl
test
mov
shll
je
loop
cltd
pop
or
mov
and
push
mov
push
insl
data16
dec
xor
loope
cmp
cmp
dec
or
mov
mov
fmuls
or
stc
test
in
xchg
add
push
add
mov
pop
push
ljmp
lret
mov
scas
mov
xchg
stos
mov
jecxz
into
ret
aad
adc
xchg
imul
mov
inc
aas
jle
je
push
mov
push
ds
xchg
xchg
pop
sbb
mov
xor
dec
rcll
xor
or
pop
pop
push
les
int3
mov
addr16
lret
jge
mov
ret
sbb
mov
and
sub
jecxz
mov
cmp
iret
pop
mov
je
jo
movsl
out
shlb
push
mov
stos
mov
shl
lcall
pop
sub
fistpl
cmp
movsl
cmp
add
xor
mov
jbe
addr16
dec
inc
cltd
add
mov
push
into
lock
push
outsb
add
mov
push
sbb
gs
jp
mov
add
mov
into
mov
pop
push
fsubrs
add
xor
mov
adc
mov
mov
fcmovnbe
cmp
jbe
jne
mov
sbb
or
and
mov
or
pusha
jae
mov
push
rorb
sub
mov
ljmp
sbb
adc
into
es
cwtl
addr16
outsl
mov
cmp
inc
dec
inc
or
dec
mov
mov
mov
lret
pushf
mov
imul
stc
or
add
add
scas
lock
into
enter
scas
ret
stos
mov
xlat
shrb
sub
aam
lret
movsb
in
push
ja
icebp
jo
add
pop
repz
rorb
and
push
push
inc
cmp
mov
test
cmpsl
inc
xchg
out
inc
xchg
and
pop
or
pop
pop
imul
fstl
and
and
out
mov
xchg
jecxz
aas
push
jmp
ds
adc
in
jo
push
in
mov
iret
xor
fsubl
pop
arpl
notb
pushf
or
sahf
push
dec
mov
in
pop
jecxz
ss
fldl
dec
jl
pop
jl,pt
mov
out
into
sub
jae
mov
in
out
sbb
cmc
imul
xor
sbb
into
rclb
inc
idivl
daa
inc
jle
sbb
add
jb
movsl
cmpsb
sub
jle
stos
xchg
nop
sub
popa
mov
mov
imul
cld
icebp
xor
testb
dec
repz
add
pop
loopne
insb
out
cli
movb
dec
data16
mov
sti
mov
int3
call
dec
inc
jne
mov
int
mov
and
popa
repnz
jge
push
iret
mov
cmp
inc
pop
shll
outsl
cmp
subl
pop
in
inc
mov
and
xor
mov
ss
jmp
or
lret
jmp
lds
arpl
arpl
push
fs
faddl
or
add
cmp
hlt
jmpw
xor
mov
mov
push
sbb
cld
jne
fwait
inc
sbb
push
jne
cmp
jne
loopne
cmp
movsb
leave
sub
and
hlt
into
das
mov
mov
sbb
mov
iret
mov
mov
xchg
sbb
mov
cwtl
nop
mov
adcl
jb
cwtl
aam
stos
fs
mov
xor
scas
add
pusha
push
scas
lock
lahf
cmove
push
icebp
scas
cmp
cmp
add
fimull
dec
push
fpatan
cli
or
push
sub
sub
adc
mov
cmp
pop
lret
aam
and
stos
adc
xlat
stos
cmp
add
movsl
pusha
mov
sar
fcmovnu
daa
pop
into
dec
divb
addl
mov
movsb
xor
mov
fwait
and
xchg
xchg
jnp
xor
adc
sub
xrelease
inc
shlb
rcrb
lahf
jmp
clc
and
aam
mov
lds
fnstsw
mov
inc
mov
cmc
pop
xchg
popa
subl
adc
and
xchg
out
dec
adc
out
cmp
fsts
ficoms
jle
in
lcall
in
xchg
ret
push
inc
and
inc
push
cmp
sti
stos
loopne
fnsave
repnz
dec
dec
je
pusha
pop
cmp
mov
add
cmp
sub
sbb
cmp
sbb
push
jnp,pn
popf
rcll
jns
test
or
shr
rcrb
in
sub
icebp
test
sbb
push
stos
dec
sub
sbb
fwait
loope
or
cs
ret
pop
aaa
sbb
bswap
call
jbe
icebp
sub
lcall
ret
xchg
cmpsb
sub
add
push
loope
insl
ljmp
or
in
jmp
movsw
cmp
xor
arpl
arpl
in
out
das
xchg
je
sbb
xlat
shll
arpl
jmp
adc
gs
mov
sahf
or
mov
ljmp
subb
jl
push
stc
xchg
insb
xchg
mov
xchg
jbe
inc
clc
das
push
inc
jae
in
cltd
pop
roll
mov
mov
or
push
in
pop
jae
lock
stos
outsl
out
sahf
fidivl
aad
cmpl
push
or
in
pop
nop
out
add
insl
add
cs
call
mov
out
cmp
leave
inc
shr
loop
and
iret
or
pop
push
scas
sub
xchg
or
repz
aas
mov
repnz
or
mov
and
fistps
push
dec
adc
rorb
jecxz
imul
mov
xor
cmp
pusha
rcrb
mov
jg
iret
mov
loop
mov
cmp
adc
cmc
jp
out
in
aas
dec
xchg
in
sub
test
mov
adc
mov
jle
xchg
push
push
jne
sub
xor
sub
jns
and
fstpl
stos
pop
or
stc
ret
cmc
sub
dec
cmp
and
adcl
in
popf
repnz
dec
rorl
adc
sub
push
sub
inc
sahf
inc
adc
xchg
mov
jp
cmp
mov
mov
inc
jo
aad
fbld
xchg
loopne
pop
lret
clc
mov
fstpl
int
jb
jmp
stc
adc
lret
mov
cmp
rcr
in
push
inc
adc
and
dec
mov
aas
jmp
pop
clc
adc
cs
popa
addl
cltd
leave
jae
out
sub
push
mov
jo
sbb
lret
xor
dec
inc
flds
or
fsubrs
cltd
mov
mov
scas
aaa
lods
xor
xor
sbb
sbb
roll
loope
cmc
inc
mov
pusha
test
mov
add
out
pop
pop
xchg
ds
popf
loop
lds
or
pop
adc
mov
jmp
cmp
xor
dec
rol
gs
rcrl
dec
mov
lea
push
dec
shrl
adc
fsubrs
lahf
fstpt
in
data16
sarl
je
enter
mov
xchg
mov
cwtl
add
pop
leave
hlt
mov
aam
popf
xchg
xchg
add
ret
stos
mov
sbb
bound
xor
cld
int
sti
inc
roll
jp
pop
jne
add
cwtl
std
adc
nop
fsubl
popf
mov
pop
mov
test
addb
andl
lea
cmp
sbbb
jge
daa
ljmp
mov
out
jo
icebp
push
jg
jmp
lds
hlt
ret
cmc
mov
fistpl
jb
or
mov
sbb
adc
popa
push
js
roll
stos
jae
add
neg
xchg
pop
push
or
ret
sbb
aam
out
stc
jbe
jl
scas
inc
xlat
iret
sub
sub
inc
add
adc
fs
pop
lea
pop
adc
gs
sub
out
xchg
outsb
push
inc
ret
mov
out
and
outsl
add
xchg
or
cmp
iret
push
lret
dec
test
or
sbb
jle
incb
sub
mov
sub
push
js
inc
lea
arpl
std
sti
popf
and
mov
icebp
in
jp
jb
or
popa
imul
outsl
fcmove
pop
dec
test
stos
xor
pop
mov
gs
push
cwtl
sub
sub
mov
loope
inc
adc
push
pushf
add
dec
cld
jns
inc
xchg
aas
inc
mov
pop
cmpsb
xchg
mov
fwait
mov
cmc
xor
jno
insb
es
cwtl
and
mov
icebp
dec
inc
inc
pop
testl
sub
dec
dec
js
adc
push
sub
out
stos
and
cmp
inc
insb
inc
pop
jo
lcall
shll
mov
iret
cmpsb
or
xor
mov
xor
cmp
pop
cmpsb
stc
push
xchg
mov
pop
pop
sbb
popf
test
xor
push
push
mov
jmp
loopne
sub
mov
enter
jmp
jnp
arpl
mov
inc
push
out
xor
addr16
sub
fdivs
pop
jge
jl
scas
idiv
add
sar
and
mov
xchg
fwait
push
scas
or
sbb
out
inc
mov
bound
adc
daa
stos
test
mov
dec
outsl
jbe
js
lret
mov
fdivr
pop
pop
fadd
add
mov
and
xor
hlt
lods
lea
sbb
js
and
and
xchg
arpl
fnstenv
adc
push
add
xchg
adc
nopl
repnz
cli
je
sbb
nop
mov
gs
stos
ss
fisttps
and
shrl
movsb
dec
ljmp
arpl
cmp
out
lret
mov
adc
push
xchg
push
xchg
jo
lcall
fmull
in
sbb
ja
mov
mov
test
fidivrs
jnp
mov
push
mov
dec
aam
xchg
scas
mov
loop
sbb
popf
push
sahf
sub
mov
test
int3
and
xchg
sbb
xor
mov
scas
mov
or
aaa
sub
dec
sub
cmp
xor
out
sbb
mov
aaa
loop
scas
test
out
sahf
add
repz
mulb
cmp
loopne
shll
cmp
jmp
sbb
fists
fisubrl
mov
pop
fucomip
xchg
mov
daa
loop
stos
lret
jbe
add
fwait
jmp
add
loope
mov
jge
clc
cmpsl
or
dec
mov
xchg
sbb
mov
test
lods
data16
cwtl
jae
ret
pusha
inc
mov
sub
test
in
xchg
mov
xor
xchg
mov
repz
into
jecxz
jne
clc
cmpsl
mov
sub
test
rcll
sub
add
sti
mov
mov
rcl
push
inc
sub
pop
inc
subl
ret
dec
add
xchg
pop
push
lods
aas
das
adc
icebp
xchg
jp
inc
aam
jle
outsb
or
aam
std
jne
sahf
and
fdivrs
sbb
push
xlat
mov
test
jge
sbbl
xchg
adc
dec
jle
push
dec
xchg
mov
mov
inc
or
mov
loope
cmp
mov
push
out
xchg
lds
test
push
push
cmpsl
in
outsb
adc
xor
js
inc
sub
les
pop
xchg
mov
cmp
inc
cltd
scas
enter
test
xor
insl
dec
lds
jp
shr
push
push
add
jle
xchg
gs
imul
ret
and
cmp
pushf
jmp
cmpb
fucom
xor
mov
sarl
pop
call
mov
and
mov
jecxz
nop
adc
adc
clc
push
enter
jle
pop
inc
mov
lds
in
sti
push
mov
daa
nopl
jb
repnz
sahf
fstps
insb
stc
inc
ss
jnp
or
cltd
xchg
sbb
pusha
cmpsb
jne
mov
fs
jnp
dec
aas
or
xor
mov
in
sub
xchg
inc
or
xchg
fsub
loope
sahf
mov
pop
pop
movsl
push
push
dec
jmp
push
hlt
mov
pop
sub
out
jns
fldl
push
lds
mov
int
mov
roll
sub
or
sbb
call
cltd
add
sbb
in
in
aas
stos
stos
inc
sub
int
pop
repz
dec
in
and
mov
dec
cmp
push
jle
sub
cwtl
out
es
mov
outsl
and
sti
push
out
add
xor
stos
xor
repz
fwait
arpl
lret
mov
jp
incl
push
mov
and
inc
mov
add
pop
pop
nop
aaa
xchg
inc
mov
mov
aam
popf
mov
rclb
dec
das
dec
sbb
pusha
mov
push
cwtl
stc
push
movsl
mov
packsswb
gs
mov
push
ds
mov
inc
fsubr
sub
sbb
cmp
xchg
out
mov
mov
push
mov
add
jmp
lds
ljmp
xchg
insl
sub
test
add
repnz
das
cmp
xor
sti
jns
sarb
and
push
js
and
dec
dec
cld
decb
xchg
std
inc
push
mov
out
and
cmp
cwtl
popa
inc
fs
fidivrl
mov
leave
xchg
fcoml
xor
loopne
jg
pop
xlat
sbb
js
cmp
cmp
fs
xchg
pop
aam
mov
push
lcall
std
jmp
int3
idivb
ljmp
jle
imul
mov
or
movsb
iret
pusha
or
fmul
iret
push
shlb
mov
cltd
mov
rorl
mov
jmp
sub
repz
push
xchg
jg
sbb
xchg
xchg
repz
mov
adc
sbb
imul
dec
fisttps
and
test
jns
adc
cmc
xor
cmc
lds
jb
pop
push
cmp
std
push
push
pop
outsb
ja
xlat
and
mov
repz
test
xor
add
mov
shrb
in
sbb
inc
and
loope
or
cmp
cmp
push
pop
push
mov
jo
lds
mov
mov
cmp
jge
lret
mov
mov
xchg
insl
add
or
lahf
sbb
sbb
xor
adc
push
sub
cmpsl
pop
add
jge
dec
sub
xor
sti
add
cmp
push
sub
dec
pop
inc
push
iret
outsl
sub
adc
cmp
push
mov
jecxz
inc
enter
and
lods
push
test
popa
xchg
add
mov
inc
mov
jmp
out
lea
insl
xlat
and
les
cmp
dec
in
cwtl
or
adc
xor
in
lret
imul
or
ljmp
or
mov
xchg
add
cmp
cs
sbb
lahf
flds
ret
addl
scas
inc
push
push
sub
mov
adc
mov
cmpsb
push
jnp
dec
leave
rorb
inc
mov
ljmp
and
clc
stc
cmp
decl
leave
mov
jmp
imul
imulb
pop
loopne
scas
mov
vcmpps
fildl
dec
pop
ret
popw
cmp
pop
dec
inc
push
loop
je
mov
mov
xor
rcr
mov
loop
loop
shlb
cmc
xor
in
sbb
cmp
je
mov
cmpsl
pushf
mov
push
jb
mov
jnp
ljmp
xor
adc
mov
mov
aas
std
xor
into
imul
push
xor
stc
mov
in
mov
adc
cmp
add
dec
add
rcrl
ljmp
leave
sbb
push
dec
mov
cli
sbb
ss
xchg
mov
scas
sub
mov
sbb
push
stc
je,pt
xchg
nop
xchg
dec
js
jae
cmpsb
daa
test
dec
and
jp
cmp
scas
lock
outsb
add
mov
hlt
or
test
adc
pop
xlat
cmp
sbb
xor
loope
lds
mov
movsb
lret
and
call
pop
mov
shrb
pop
dec
or
jle
loop
pop
or
adc
cmp
or
jnp
insl
out
dec
adc
inc
cmp
mov
cmpsb
fcmovu
pusha
xor
adcl
cwtl
testl
fs
or
mov
add
jo
or
xchg
lahf
xor
adcl
enter
or
loop
jge
pop
jns
adc
mov
popf
sub
fidivrs
int3
andb
ja
fldenv
pushl
lahf
jmp
pop
into
and
enter
mov
jae
add
test
adc
adc
xor
out
lods
jnp
dec
sub
mov
inc
stc
sub
sub
push
cmpsl
in
cmpsl
inc
adc
jo
movsbl
xchg
xchg
sahf
pushf
mov
mull
pop
arpl
inc
mov
stos
sub
sbb
xor
ret
mov
push
pop
xchg
mov
out
es
mov
push
repz
shl
xchg
aas
adc
aam
jns
jg
push
pop
pusha
add
insb
fnstsw
ret
nop
mov
cmp
int3
pop
jb
or
ja,pt
mov
push
jb
push
into
arpl
push
out
les
sbb
mov
out
cwtl
inc
in
pop
loopne
aad
cmpb
inc
mov
jnp
mov
icebp
fimull
ljmp
sbb
sbb
mov
sarb
inc
iret
xlat
bound
pop
mov
call
cmp
aas
mov
loopne
adc
adc
or
mov
insl
xchg
inc
add
lods
adc
mov
push
clc
loopne
subl
sbb
dec
pop
aas
ss
sbb
xchg
adc
xchg
cmpsb
out
cltd
loop
clc
inc
xchg
push
mov
cmpsl
dec
sbb
pop
sub
pop
out
adc
fstl
minps
lea
aam
or
mov
cs
mov
test
fwait
xchg
stos
cmp
int3
les
push
loopne,pt
stos
lcall
cs
sbb
frstor
fucomip
add
or
stos
pop
xchg
mov
inc
xchg
pop
rcrb
vsqrtps
stc
mov
loope
mov
sub
pusha
popa
ljmp
int
cmp
pop
lahf
inc
frstor
and
jne
jmp
push
and
out
pushf
dec
cwtl
add
sub
adc
jecxz
push
add
fldl
in
push
cli
pop
cs
gs
inc
mov
xor
fcoms
pop
mov
aaa
das
mov
mov
and
mov
sub
ret
lock
mov
pop
jns
jae
iret
cmp
dec
fadd
dec
loop
sub
cmp
jbe
stos
add
pop
pop
test
sub
imul
cltd
jnp
clc
xor
jmp
adc
int3
insb
push
repnz
push
sub
xor
pop
sbb
test
ja
pop
orl
mov
adc
inc
pop
inc
mov
xor
int3
leave
mov
enter
rcll
mov
test
iret
push
push
test
addr16
mov
add
mov
mov
lods
iret
add
int3
jbe
into
mov
push
mov
ret
insb
jno
jo
cmp
jecxz
aam
xor
pop
pop
sbb
cmpsb
cmp
inc
imul
jl
jnp
sti
js
dec
into
jbe
push
xchg
cs
mov
push
clc
mov
pop
out
pop
mov
sub
outsb
cmp
jmp
in
in
fs
cmpsl
mov
cltd
out
mov
sbb
xchg
lods
jge
jbe
repnz
pop
ss
in
lods
int
push
fldenv
inc
lods
mov
lods
cltd
sahf
in
popa
imul
xchg
test
or
xchg
les
jle
rclb
or
ds
mov
cmp
hlt
rolb
cld
std
adc
aad
pusha
pop
ja
push
jp
sub
icebp
sub
lea
mov
fisubs
and
dec
addb
push
sub
loope
stos
xor
xchg
xchg
aam
lret
stos
enter
add
mov
and
or
push
popf
lret
loop
mov
in
sbb
xor
push
jne
insl
nop
out
sub
iret
sbb
popf
insb
dec
push
lods
sbbb
jno
or
mov
push
pop
mov
cltd
push
add
mov
ret
sbb
loope
mov
ret
out
sti
je
xchg
push
adc
adc
push
inc
popa
and
fdivs
cmp
fdivrl
push
xchg
add
mov
les
jne
das
mov
out
or
lea
jns
sub
fdivs
enter
fbstp
inc
movsb
xor
inc
push
pop
jnp
cltd
test
dec
pop
inc
pop
xchg
push
das
fsubl
out
test
cmpsl
xchg
mov
mov
rorb
pop
jp
loop
xor
mov
popf
mov
cltd
pop
xor
push
adc
movsb
ret
or
mov
mov
in
sub
xor
clc
in
repz
lea
xchg
arpl
scas
faddl
fs
xor
movsl
imul
scas
adc
in
sub
filds
mov
dec
mov
mov
movsb
push
icebp
fimuls
insl
jbe
push
add
js
repnz
push
std
inc
xor
outsb
xor
or
adc
divps
cmp
pushf
mov
cmp
dec
popf
std
js
rcrb
pop
inc
popf
imul
pop
nop
jns
imul
sti
cltd
in
xor
shlb
jne
outsb
add
outsl
mov
pop
add
addr16
xchg
nop
pushf
and
out
mov
int
dec
add
mov
addr16
sarb
les
adc
jno
xchg
jnp
jecxz
push
or
mov
rorl
push
js
cmp
jns
stos
into
push
mov
daa
add
sub
ror
push
mov
pop
stos
fiadds
jp
shlb
lret
fs
stc
mov
clc
xor
cmp
mov
iret
sahf
pushf
lock
nop
lcall
mov
push
adc
shll
inc
pop
push
pop
out
shll
testl
rcr
cmpsb
xor
mov
cmp
jle
add
dec
mov
sub
push
cmpsl
int
dec
mov
jb
sbb
hlt
idivl
jno
and
stos
sbb
dec
cmp
loopne
imul
mov
je
mov
push
lret
mov
jmp
or
cmp
in
xor
cmc
out
fistl
lods
loope
fcmovne
sub
jae
jmp
pop
jnp
or
cmp
loope
je
push
in
daa
mov
mov
push
cmpsb
stos
ja
out
push
sahf
jns
insl
lahf
xor
arpl
in
hlt
mov
test
imul
or
call
fwait
mov
popf
icebp
cmpl
jp
cmp
sub
mov
push
mull
lret
int
mov
adc
add
mov
jne
shr
lret
das
jae
xchg
insl
push
xor
mov
ret
add
inc
jb
rcll
xchg
jmp
jl
cld
mov
pusha
ja
xor
mov
in
imulb
sbbl
adc
xchg
mov
arpl
mov
mov
cltd
pushf
fidivrl
cs
lock
inc
aam
iret
popf
out
sbb
popa
popf
or
fsts
into
popf
pop
insb
out
ret
int3
push
jg
loope
or
pop
stos
and
bound
bound
push
je
addr16
jp
cmp
ja
shrl
rcll
das
mov
into
faddl
inc
icebp
jle
and
outsl
xchg
rol
mov
jl
jg
fists
int3
call
mov
fsubs
loopne
aas
adcb
xlat
out
rolb
cmp
inc
xor
mov
push
shll
cmp
xchg
push
movsb
sbb
sub
jne
lock
cmpsb
call
push
dec
xor
aad
xchg
and
pop
push
xor
mov
popf
test
adc
adc
inc
push
inc
fwait
es
dec
pop
adc
mov
insl
lcall
repz
cld
push
std
jmp
stc
out
fsubrs
lret
sahf
push
mov
daa
xchg
or
jbe
hlt
dec
mov
xor
dec
jl,pt
xlat
xchg
bound
jnp
scas
inc
scas
push
mov
pop
cmp
dec
xchg
cli
in
int3
mov
inc
push
jge
or
adc
lcall
sahf
xchg
arpl
pop
clc
pop
jle
mov
les
push
jl
lret
cmp
icebp
subl
call
lret
mov
xor
cmpsb
add
shll
push
mov
imul
ljmp
push
cld
fbld
lock
flds
add
sub
orb
jne
pop
push
lods
xchg
loope
pop
fdivp
aam
std
pop
add
and
stos
inc
sub
repz
icebp
nop
arpl
stos
push
or
or
shll
icebp
mov
xchg
fidivrs
out
ss
cmpsl
leave
push
test
test
outsb
mov
outsl
lret
call
add
pop
cmp
lahf
or
fistps
jge
cmp
push
std
fcomp
ja
cmpsl
daa
add
lret
mov
inc
rcl
xchg
js
pop
and
test
dec
movsb
cmpsb
cwtl
lret
jne
jg
packssdw
cmpsl
dec
mov
sbb
rclb
lret
sub
loopne
insb
rolb
sub
cmp
jecxz
mov
rclb
addb
addr16
repnz
sub
sbb
or
icebp
test
mov
lock
test
inc
add
sub
outsl
pop
movsl
sub
pushf
or
sbb
push
int
mov
push
mov
lods
aad
je
cmp
xor
orb
aam
hlt
outsb
in
jge
data16
xor
or
das
mov
sub
jg
push
add
pop
jle
aaa
xchg
jae
xor
aas
insb
inc
cltd
jo
ja
idivl
lret
xchg
scas
lock
adc
and
inc
inc
pushf
pop
push
sbb
das
or
ja
push
mov
sti
gs
dec
fcompl
into
mov
inc
loop
ficompl
xor
or
or
pop
adc
inc
adcl
scas
sbb
mov
jl
scas
xchg
mov
arpl
shl
lcall
cmp
inc
fisubs
adc
cmpsl
out
into
js
cs
data16
cwtl
lds
mov
scas
dec
xor
int3
pop
fdivrl
pop
pusha
xchg
bound
insl
les
mov
in
pop
add
fnstcw
aad
push
jge
cmp
je
push
inc
cmc
cmp
add
adc
push
mov
inc
lahf
lcall
jecxz
xchg
shrl
in
lcall
adc
out
push
sbb
push
or
adc
imul
imul
and
pop
mov
jno
in
repz
fs
imul
jne
lods
pop
jp
stos
mov
mov
adc
sbb
jle
inc
xchg
pop
sbb
pop
push
sbb
push
pusha
and
push
jecxz
jo
cmp
in
cld
movsl
call
aam
lea
cld
xchg
xchg
jnp
mov
mov
addr16
sti
pop
fcmovb
int3
test
testb
pop
xchg
add
fwait
popa
cmp
xchg
outsl
sub
sti
in
mov
fbstp
dec
and
aas
push
test
mov
sbb
jmp
inc
xor
stos
push
mov
imul
jns
mov
mov
xchg
rcr
cs
dec
and
mov
mov
mov
xor
dec
lds
test
fcoms
jbe
imul
adc
add
sbb
out
pop
xchg
lret
loop
jp
push
sbb
mov
mov
push
and
in
pop
mov
sub
sbb
testb
add
jecxz
movsb
xchg
std
adc
jecxz
mov
jg
scas
jne
and
ljmp
add
notl
pop
sbb
out
mov
ljmp
push
cmc
dec
inc
sahf
in
mov
pop
int3
in
pop
mov
adc
repnz
sti
mov
push
pusha
mov
dec
in
push
cwtl
or
mov
pop
and
mov
shll
mov
dec
mov
ds
pop
arpl
fists
cmc
xchg
xchg
lock
xor
sti
js
pop
shlb
out
xchg
pop
cmpb
jb
jl
inc
clc
test
mov
fcoms
aas
push
adc
mov
pop
mov
pop
fiaddl
rcrb
fwait
pusha
das
dec
cmp
aaa
mov
xor
ja
pop
and
jp
mov
nop
cld
adc
cld
jl
sahf
test
push
bound
sbb
stos
mov
push
loop
pop
arpl
pop
cmpb
popf
rorb
mov
aam
mov
xchg
aam
xor
cmp
sub
inc
push
stos
mov
cmp
inc
ret
ret
cwtl
lret
push
ja
addl
xchg
jno
scas
pop
dec
and
mov
mov
or
add
scas
mov
jbe
push
adc
scas
xor
xchg
psubsb
and
jmp
cmpsb
jne
mov
and
xchg
pop
add
sbb
call
loopne
jne
ljmp
mov
cmova
in
dec
mov
repnz
jno
rolb
bound
scas
je
into
push
inc
lret
aaa
jmp
sub
in
jnp
subl
cmpsb
inc
inc
jg
inc
shl
repz
xchg
das
push
aad
inc
jo
rcrb
outsl
or
stos
sbb
pop
mov
jle
mov
pop
jecxz
add
and
in
roll
dec
call
sbb
mov
cmpsb
out
inc
dec
inc
test
out
mov
xor
vpcmpgtb
sub
pop
ja
adc
dec
pop
mov
leave
in
mov
lcall
mov
testl
rorb
push
push
cmp
leave
addb
inc
in
leave
pop
dec
dec
and
les
lcall
in
ss
lahf
push
push
dec
sbb
or
fnstsw
jecxz
jge
cmp
fisubrl
call
jecxz
xchg
mov
xchg
adc
dec
sub
fs
sbb
xor
fmull
cmc
xchg
lods
and
out
test
out
hlt
sub
addr16
icebp
lret
mov
fldenv
lret
daa
sbb
lea
outsl
cwtl
push
mov
sbb
cmc
dec
jae
cmp
outsl
jno
adc
sub
pop
das
cmp
inc
cmp
in
pushf
push
frndint
mov
sti
xor
repz
rclb
insl
stos
cltd
sti
add
fwait
jb
sub
cmp
sbb
or
icebp
into
pop
add
or
fistpll
sub
adc
jnp
and
or
leave
movsb
inc
out
dec
xlat
mov
sarb
aad
sub
mov
mov
and
sbb
loopne
xchg
pop
and
int
jg
js
xchg
inc
iret
sub
jp
insl
inc
arpl
mov
pop
popl
popa
int
pushf
mov
xor
cmp
inc
cmp
js
int
hlt
popf
mov
mov
adc
inc
xchg
dec
imul
sub
add
or
add
imul
cwtl
cltd
xchg
dec
add
inc
and
mov
int
sub
xchg
adc
sub
or
clc
sbb
cmp
cmpsl
xchg
xchg
mov
test
mov
leave
mov
mov
jns
mov
rolb
lahf
cmp
seta
mov
xor
int
stos
jo
adc
mov
jp
xchg
shll
pop
sbb
pop
or
iret
pop
icebp
les
mov
in
mov
mov
add
mov
pop
dec
jbe
xor
xchg
pop
xchg
jmp
scas
test
pop
push
push
cmp
and
mov
in
push
repz
in
jp
sub
addr16
cmpsl
push
jl
imul
aaa
ss
mov
sbb
mov
dec
sbb
inc
jb
cwtl
xchg
fldenv
add
cwtl
jmp
or
sbb
xchg
roll
inc
test
xor
pop
inc
sar
daa
insl
fcompl
ficoml
pop
or
inc
scas
inc
xchg
mov
daa
and
sbb
movsb
leave
ror
or
cmp
add
or
xchg
lcall
lock
jge
xor
das
enter
repnz
add
inc
addb
in
push
adc
std
add
xor
mov
shll
ja
imul
popa
mov
sbb
inc
mov
pop
push
jae
push
push
ljmp
mov
movsl
dec
xchg
jge
imul
mov
aas
in
clc
ds
xchg
mov
add
fdivrl
pop
out
hlt
cmp
lsl
loop
push
mov
xchg
mov
add
cmc
mov
insb
push
insb
sbb
mov
mulb
dec
cs
call
push
push
pushf
push
xor
sub
popf
xchg
dec
lret
rcrl
push
push
inc
xor
scas
ret
flds
ja
adc
fxch
dec
mov
or
inc
dec
cld
inc
stos
push
sbb
xchg
add
fucom
mov
clc
aam
arpl
pushf
lret
mov
lods
sahf
jnp
mov
and
dec
in
jle
sbb
fs
and
and
add
push
sti
iret
push
mov
adcl
add
lock
mov
mov
lods
aaa
sbb
js
pop
pop
jae
mov
mov
lods
push
movsl
cwtl
psllw
lods
sbb
sbb
data16
mov
mov
jmp
pop
scas
mov
adc
xchg
inc
inc
cltd
mov
scas
mov
lret
and
pushf
mov
out
pop
aaa
pop
rcr
xorl
test
idivl
xor
push
add
mov
daa
in
imul
inc
lret
popf
mov
dec
sbb
push
pusha
lret
int
pop
leave
dec
movsl
lds
sub
popa
sbb
scas
orl
jno
inc
dec
mov
push
lock
mov
mov
ret
dec
xorl
or
test
push
adc
test
jnp
dec
xchg
mov
mov
popa
aas
lods
jp
jge
jge
loopne
pop
lock
adc
sbb
inc
and
push
jl
push
xor
cmp
push
adc
mov
or
outsl
sahf
lock
flds
lods
pop
mov
xor
mov
inc
repnz
fistpl
rorb
jmp
inc
and
mov
pop
and
xchg
dec
mov
stos
lret
testb
rolb
xor
aaa
mov
xor
outsb
loopne
cmp
mov
andl
pop
inc
popf
and
cmp
inc
mov
push
orb
js
dec
testl
push
insl
nop
pop
push
cwtl
xor
cmpb
rol
pop
mov
xchg
cmp
ds
sbb
push
jo
adc
push
or
push
aad
sbb
xor
int
out
repnz
pop
push
adc
add
rclb
fcmovb
cli
or
jg
in
pop
out
dec
adc
xchg
dec
inc
cmp
mov
sub
in
js
repz
int3
dec
or
xor
cmp
loop
scas
shlb
imul
jae
repz
into
jbe
push
js
cli
clc
jb
lock
stos
imulb
std
jns
mov
and
stc
das
mov
cmpsl
adc
push
push
mov
cmp
pextrw
pop
xor
and
push
add
insb
ret
or
fdivs
bound
sub
pop
push
pavgw
pop
mov
cmp
test
xchg
add
shr
loop
add
mov
pop
imul
sub
inc
push
popf
movsb
dec
insl
mov
lcall
or
sub
aad
xor
adc
insb
pop
insl
cmp
mov
and
cs
mov
subb
inc
insb
das
cs
adc
into
lahf
mov
inc
dec
cs
movb
aam
stos
add
jo
test
insl
jb
xor
xor
scas
sub
clc
sbb
lret
stos
cwtl
push
add
lcall
stos
sti
mov
js
sbb
and
or
sbb
test
aam
pop
add
gs
xchg
push
arpl
aad
pushf
fistpll
xchg
stc
jle
mov
xorb
push
int
mov
frstor
sub
out
cli
push
fsts
das
sub
and
push
ss
ja
cmpsb
dec
sbb
mov
inc
ds
jge
dec
hlt
mov
jo
or
cmp
xlat
xor
out
aas
stos
arpl
mov
push
add
ljmp
aad
adc
mov
push
sbb
xchg
test
inc
pusha
jne
xchg
or
lahf
cmp
xchg
and
sbb
rcrl
lahf
cli
fildl
push
int
mov
sub
push
fidivl
icebp
das
or
jg
jbe
jmp
imul
or
ds
incb
and
pop
outsl
xor
repz
gs
aaa
jl
outsl
jle
frstor
mov
movsb
ret
lahf
mov
push
scas
hlt
push
dec
jle
imul
daa
inc
jae
adc
xchg
jnp
imull
push
sub
and
or
into
sub
dec
push
lahf
in
mov
insl
fidivrs
jecxz
cwtl
ror
xor
adc
jg
faddl
and
lret
jg
inc
xchg
mov
lods
xchg
aad
jb
inc
mov
jae
pop
add
cs
rol
add
jb
push
push
sbb
pop
lods
pop
jns
and
mov
xor
xor
ret
add
lock
jle
add
daa
pop
popl
repz
mov
mov
xchg
das
or
int3
leave
xchg
fistl
pop
ja
clc
adc
les
mov
xor
sahf
mov
add
loop
mov
mov
fsubl
int
clc
add
sti
pop
cltd
pop
and
lret
rcl
outsb
inc
dec
jg
dec
clc
push
add
pop
and
dec
dec
in
mov
int
xchg
bound
ficoml
js
daa
imul
mov
js
mov
mov
bound
call
push
lea
out
ss
xchg
or
popa
imul
repz
pop
pop
jge
pop
mov
cmpsl
imul
jle
inc
jg
test
mov
xchg
cld
jae
dec
xchg
lock
pusha
and
lcall
xlat
inc
adc
mov
mov
push
push
int3
dec
add
je
xor
mov
or
or
xor
pop
pop
repz
mulb
lea
sbb
dec
jge
pop
mov
pop
xchg
les
push
pop
lods
sbb
xchg
das
xor
pop
sarl
and
mov
int
push
mov
jecxz
pop
test
shrb
mov
xchg
jne
in
pop
cld
jmp
fisubrl
negb
sbb
aaa
dec
xchg
shrl
mov
into
aaa
dec
cli
bound
add
mov
mov
push
dec
add
sbb
mov
pop
mov
stos
in
dec
paddq
inc
inc
dec
mov
lret
xchg
ja
xchg
mov
insl
inc
inc
push
sbb
sbb
mov
movsb
aam
dec
idivl
aad
icebp
imul
call
je
stos
sbb
movsl
cmpsb
dec
frstor
adc
lods
icebp
and
inc
mov
jno
mov
inc
pusha
out
into
mov
outsl
test
sub
cmc
sub
mov
les
movntq
out
addr16
bound
sbb
inc
jbe
cld
xchg
daa
out
dec
xchg
push
mov
insb
mov
push
pop
mov
jle
lods
push
pop
pop
jbe
pop
fnstsw
add
adc
popf
jo
xchg
mov
sarb
cmp
push
jp
enter
lea
call
pusha
lea
lods
aaa
push
movsb
mov
push
imul
xchg
inc
mov
push
fisubrs
pop
lds
ret
iret
mov
jae
adc
cs
cmc
xor
xchg
or
mov
push
jmp
andl
inc
mov
andl
leave
in
push
cmpsb
loopne
in
mov
or
pop
push
dec
mov
and
das
mov
or
rolb
in
fwait
test
and
popf
rorl
das
sub
shlb
int3
xchg
loope
jl
pop
je
mov
jae
cmpsb
in
cmc
int
jo
pusha
or
mov
rorb
ss
push
xchg
std
bnd
xor
or
xchg
and
fmul
sub
sub
lea
inc
mov
gs
cwtl
roll
push
roll
outsl
lret
add
push
rcll
fstpt
filds
ss
mov
adc
outsl
push
mov
push
mov
mov
add
xchg
mov
and
dec
push
adc
dec
outsb
push
add
or
outsb
sbb
xchg
aaa
mov
test
or
or
lahf
xchg
cs
punpckhbw
pop
inc
pop
in
sti
lret
mulb
repnz
dec
sbb
adc
sbb
add
xchg
pop
lods
mov
in
popa
movsb
dec
or
fidivl
jbe
shll
insb
jo
cmp
bound
mov
pop
inc
fs
cmp
mov
lods
xchg
push
je
inc
jmp
scas
push
lods
insl
cmp
cmp
cmc
mov
in
in
jmp
add
cmc
mov
jnp
scas
outsb
sarl
xor
push
gs
or
mov
jl
cmc
ja
daa
cmp
cmp
nop
xchg
cmp
or
push
js
sbbb
std
je
jp
add
add
jle
lods
cmp
xor
push
pop
add
icebp
inc
mov
ds
jmp
repnz
sub
ss
insb
xchg
bound
mov
sahf
and
js
rcr
mov
add
cmpsl
mov
lcall
fwait
inc
aam
mov
cmp
mov
or
add
mov
sbb
fwait
test
add
xchg
popa
jnp
out
shll
sub
push
jle
lock
shrb
ret
ja
enter
stc
mov
addr16
inc
mov
aas
jns
cmp
std
dec
add
cs
push
imul
adc
ds
push
pushw
std
daa
xchg
or
je
adc
adc
into
into
lods
stos
xchg
inc
repz
adc
and
mov
stos
pop
repnz
cmp
cmp
cmp
cmp
and
orl
and
jge
inc
pop
lret
inc
sbb
jno
inc
xor
lret
call
inc
jno
jae
jg
pusha
out
outsb
or
jns
adc
aam
enter
push
les
push
dec
fadd
sbb
dec
cld
aad
fnstcw
xor
imul
icebp
xchg
or
pop
push
aas
clc
repz
dec
adc
ss
dec
inc
mov
xor
add
add
jp
xchg
xchg
xor
pop
jbe
xorl
loope
xchg
repnz
xchg
dec
pop
mov
push
icebp
push
movsb
xor
je
fs
inc
sub
lds
cvtps2pi
outsb
xor
into
loope
sahf
arpl
test
mov
push
ss
pop
push
xor
mov
lods
mov
mov
addl
cli
mov
cmp
data16
cmpsl
pushf
dec
imul
push
cltd
push
pop
sub
ror
sarl
jbe
lock
loop
ljmp
inc
aas
lcall
lret
test
cmpsl
push
mov
fnsave
add
inc
bound
enter
xchg
cmpsb
or
repz
push
bound
mov
sarb
lods
mov
clc
sub
dec
mov
mov
cld
mov
mov
fldenv
push
mov
adcl
dec
cmp
and
xchg
out
rclb
or
pop
xchg
jbe
mov
sbb
pop
adc
movsb
incb
cmpsl
das
sti
repnz
andb
pop
stos
cwtl
cmpb
test
lcall
data16
ss
mov
dec
loopne
scas
xor
pop
in
mov
dec
push
shll
mov
xor
mov
xchg
adc
lds
lahf
aas
adc
out
pop
sar
pusha
jecxz
or
sub
pop
push
fsts
aam
mov
xchg
push
push
mov
mov
sbb
or
add
jno
fstpl
shrl
xchg
int
xlat
loopne
push
push
loop
testb
inc
push
ljmp
movsl
lret
fs
pop
jno
lds
bound
popa
stos
stos
mov
mov
stos
cmp
addb
mov
push
shll
enter
stos
nop
fnsave
scas
dec
lds
and
xchg
insb
jle
pop
or
adc
out
icebp
add
xchg
mov
dec
lahf
pop
je
fnsave
es
rorl
jp
rorl
fisttpll
jno
push
xchg
in
mov
dec
dec
xchg
or
xchg
loop
jbe
ss
imul
sub
aad
sbb
int3
pop
gs
dec
divl
in
orl
cli
movsb
xor
and
sub
inc
fwait
add
push
pop
push
data16
loopne
push
jg
addr16
xor
lock
movsl
ret
or
cld
jae
or
jg
cmp
mov
fdivp
sub
mov
mov
pop
inc
into
mov
xlat
add
lods
pop
lds
mov
sub
in
inc
nop
push
in
dec
movsl
mov
jbe
es
leave
jmp
popa
stos
stos
jmp
shrb
push
sub
or
xor
ljmp
sub
jbe
jns
jb
or
mov
adc
divb
dec
inc
fdivl
cmpsb
mov
push
loopne
dec
jne,pt
xchg
out
popf
jle
ja
dec
or
imul
mov
mov
or
and
dec
leave
mov
out
or
push
rcl
fwait
push
lret
push
sbb
lret
mov
jne
scas
cmc
xchg
sbb
imul
loopne
jb
movsl
inc
dec
xchg
jg
sbb
cmc
mov
outsb
push
inc
mov
sub
jle
scas
add
sar
sahf
push
rcll
cmp
cmp
loopne
mov
int
pop
mov
xor
loopne
adc
popl
xchg
lahf
pop
lods
xorb
or
mov
xchg
out
fwait
bound
js
pop
dec
mov
cmpl
mov
add
fcoms
jne
cmpsb
xor
cmpsl
and
adc
xchg
sub
push
adc
fidivl
pushf
arpl
push
outsb
push
cmp
pop
stc
xor
pop
push
mov
xchg
xchg
pop
ja
in
das
jge
cmp
popf
fnsave
push
add
mov
xor
push
adc
bound
stos
or
or
loop
shr
ud1
aas
fsts
jnp
shll
xchg
xor
fcoml
inc
lea
adc
cltd
sub
xchg
shl
cld
imul
negb
adc
imul
rolb
repz
gs
dec
shl
jbe
mov
mov
ret
mov
xor
ds
sti
mov
cld
out
rcrl
xchg
icebp
mov
xchg
inc
movsb
pop
les
and
xor
lsl
push
inc
jge
mov
or
nop
int
mov
add
xor
out
divl
inc
in
mov
idiv
cs
sub
roll
or
adc
xchg
jge
lock
mov
pop
pop
in
jecxz
push
cltd
dec
adc
addr16
jge
nop
fucomip
mov
push
inc
movsb
sub
sub
dec
subps
repnz
add
call
mov
jbe
gs
cmp
jns
ds
mov
test
aaa
dec
mov
add
dec
xor
inc
fbstp
sbb
xchg
fisubrs
and
insl
or
cmp
adc
subb
ds
pop
loope
insl
insb
jecxz
divb
mov
aad
les
pop
add
imul
lcall
add
jb
sbb
incl
jae
and
mov
or
push
add
push
aas
stos
jmp
ret
cmp
or
push
jecxz
jl
inc
mov
cmpsb
xlat
cltd
inc
cld
jl
out
or
mov
mov
add
int
pop
jmp
sub
inc
leave
lea
push
aas
jne
xor
xor
leave
pop
imul
mov
out
mov
js
adc
mov
gs
cltd
mov
ja
xlat
repnz
jmp
jae
call
push
mov
mov
lahf
addr16
pop
dec
jle
fisubrl
fwait
mov
fbstp
xor
mull
inc
js
or
mov
call
scas
lcall
add
test
imul
imul
xor
fisubl
ja
inc
pusha
push
xchg
leave
add
add
scas
sub
sbb
fstpl
mov
push
mov
ljmp
lods
cld
or
xchg
dec
stc
push
and
nop
lods
xor
std
pop
and
dec
adc
idivb
cmp
pop
mov
lock
arpl
xchg
test
pop
cmc
shrl
mov
xchg
cmpsb
leave
inc
sbb
das
arpl
mov
pop
dec
add
sbbb
dec
imul
insb
clc
and
push
cwtl
bnd
popf
loope
sti
cmpsl
inc
imul
aam
mov
addr16
mov
icebp
sbb
cmc
dec
in
push
xchg
push
cmp
shll
roll
dec
shlb
incl
ljmp
or
aad
cld
jmp
inc
rcll
xchg
inc
sub
jne
jbe
into
cmpsb
pop
outsl
lods
push
mov
or
jno
ficomps
or
fiadds
dec
dec
cltd
push
xor
lahf
inc
adc
in
mov
add
cmp
dec
int
inc
gs
mov
imul
aad
add
pop
scas
fs
popf
jae
xor
dec
cwtl
adc
fisubl
fwait
lret
inc
or
mov
mov
arpl
mov
and
pop
mov
cltd
mov
aam
xchg
inc
fxtract
adc
loop
je
ss
inc
arpl
mov
fimull
push
sahf
or
arpl
xchg
or
xchg
dec
sbb
testb
push
imul
or
inc
adc
lds
cmp
mov
and
test
mov
ret
jbe
fidivs
aas
mov
jp
jecxz
lock
sub
sbb
stc
fistps
xchg
cmpsb
sbb
int3
jp
lret
notb
add
xorl
adc
fmul
inc
daa
sbb
mov
int
adc
outsl
stos
push
mov
in
out
adc
sti
out
xrelease
cmp
clc
sbb
out
jbe
das
imul
je
stos
hlt
les
pop
imull
cld
pushf
out
jmp
decb
mov
mov
in
nop
inc
outsl
bound
pop
dec
adc
out
in
add
add
jae
in
adc
aaa
test
into
repnz
cmpsl
push
and
cli
scas
into
cmp
adc
out
inc
ret
cs
int
dec
xor
inc
ljmp
je
inc
xor
inc
or
pop
push
or
jecxz
pusha
mov
sbb
mov
outsl
scas
stos
jo
pop
movl
test
pop
mov
add
test
movsb
stos
enterw
dec
cmc
sbb
fs
jl
orl
push
ficoml
xchg
push
push
movsl
outsb
and
and
fimuls
sbb
inc
stos
mov
xchg
sbb
xchg
and
cmp
dec
dec
pop
xchg
sarb
out
cmp
daa
cmp
inc
mov
popa
lods
popa
dec
jmp
sbbb
stc
push
xor
mov
das
sub
sbb
xchg
repz
loopne
add
fsubrl
add
int3
adc
aas
cmp
adc
adc
cmpsb
add
cmpsb
sbb
xchg
mov
sub
cld
mov
xchg
in
cmpsl
popf
adc
xor
mov
int
xor
dec
add
add
hlt
jnp
cltd
pop
sub
push
pop
pop
sbb
out
pushf
lahf
dec
pop
sub
sbb
and
xchg
outsl
add
mov
add
std
and
pop
outsb
xchg
and
jl
imul
jmp
add
clc
dec
xchg
rcl
lret
and
sub
add
out
jl,pn
or
lret
stos
call
lcall
inc
fs
hlt
stos
and
xchg
lahf
mov
add
adc
xor
imul
mov
sbbl
dec
fstps
adc
adc
dec
xor
adc
sub
sbb
mov
popf
xor
sub
jno
loope
lods
jnp
insb
push
push
arpl
and
adc
jl
loop
jae
cmp
cmpsb
pop
push
push
fnstsw
and
stos
jae
dec
fwait
and
lds
lret
mov
aad
fcmovne
ror
cmp
dec
fbstp
jno
add
mov
jle
aam
or
push
push
sbb
mov
add
out
push
bsr
lcall
mov
outsb
push
or
ja
data16
imul
xor
mov
sub
inc
lret
imull
lods
out
shl
inc
fadds
lods
xor
lcall
cltd
pusha
mov
push
roll
ss
xchg
cmp
xor
lahf
add
out
iret
lea
push
pop
es
pop
adc
pop
out
iret
adc
xchg
clc
imul
nop
js
xchg
clc
loopne
pushf
fwait
arpl
lods
mov
cmp
push
push
adc
jne
movsb
and
shrl
cmpsl
xchg
mov
les
repnz
mov
fs
fcmovu
add
fdivr
jle
ljmp
jge
inc
lea
cmc
or
adc
xor
das
int3
dec
inc
cmpsb
fstl
mov
sub
dec
mov
dec
sbb
push
jp
mov
in
repnz
jle
xchg
fmul
std
shrb
cmpsb
and
mov
xchg
push
cmpsl
outsb
inc
inc
jbe
stos
je
jno
in
inc
imul
stos
not
pop
lock
fisubs
dec
cmc
fsubrs
inc
xlat
cmpsl
or
push
idivl
or
pop
ljmp
pushf
adc
add
pusha
push
fiaddl
adc
push
sbb
xor
pop
daa
sub
repz
mulb
add
xor
imulb
dec
mov
jo
shll
fnstcw
sub
outsb
jo
jb
mov
ret
cld
std
out
iret
jmp
orb
inc
push
pop
xorb
inc
les
mov
lock
mov
dec
rorb
fsubrl
cmpsb
push
ja
out
cmpsb
std
pushf
or
ret
adcb
and
data16
js
mov
jb
mov
das
jl
mov
sub
in
sub
mov
jge
mov
pop
incl
pop
jp
inc
xchg
fisubl
and
shll
push
test
mov
sub
sbb
cmp
lcall
popf
lret
xchg
in
jae
bound
pop
adc
add
dec
adc
int3
outsb
pop
fs
inc
mov
cmp
or
lcall
or
je
aad
mov
inc
and
pop
das
jmp
mov
outsl
mov
mov
les
cld
bound
dec
inc
mov
loope
bnd
repnz
ljmp
enter
shrl
sub
lcall
pop
sbb
sbb
fstps
pusha
les
and
ja
imul
sub
xchg
adc
call
jp
or
xchg
jo
fstl
mov
and
jmp
sub
and
add
xchg
add
pushf
mov
and
add
dec
lahf
jbe
int
pop
in
and
ret
jbe
dec
leave
das
in
in
arpl
pop
jmp
cltd
fst
and
jae
movsb
inc
xchg
icebp
and
in
and
xchg
shrl
call
xor
dec
mov
add
ja
xor
jecxz
xchg
cs
sub
inc
int3
test
call
insl
enter
fimull
cmp
rclb
rol
adc
push
add
outsb
cwtl
adc
mov
cmp
sbb
sub
pop
outsb
push
mov
push
into
daa
addr16
and
mov
and
int3
sti
xor
mov
adc
lcall
cltd
stos
jl
rcrl
in
mov
fsubrs
jge
lods
xor
add
cmp
hlt
pop
push
dec
fwait
repz
cmpsb
inc
ret
push
push
enter
inc
mov
xchg
lret
mov
cmc
pop
movsl
daa
push
into
and
mov
xchg
ljmp
rorb
pop
cmc
scas
cmp
push
fstl
outsb
sbb
ficoml
xchg
sub
push
dec
dec
or
dec
push
pop
add
cmp
xlat
fadds
mov
enter
mov
push
dec
insb
mov
xor
insb
inc
cwtl
inc
mov
xor
das
dec
icebp
xchg
xor
stos
mov
inc
or
and
sbb
inc
repz
int
mov
pop
jne
rol
mov
mov
dec
mov
clc
stos
jp
and
sbb
cmp
stos
dec
in
sub
pop
xchg
ret
and
jecxz
jecxz
std
inc
pop
inc
xchg
clc
test
mov
add
dec
rcr
push
cli
fbstp
fwait
mov
rcll
mov
cmp
rorb
movsl
xchg
xor
jecxz
ja,pt
rorb
lret
fidivrl
js
add
std
pop
mov
into
add
add
lock
pushf
js
sub
mov
or
add
popf
movsb
jnp
lcallw
push
sti
jmp
arpl
jge
cmp
push
ljmp
dec
lret
jl
sahf
idiv
xchg
push
dec
sbbl
aad
dec
push
xlat
in
adc
pop
fsubrs
xor
mov
jl
cmovo
inc
sbb
stos
lods
fstpt
sub
push
cwtl
dec
sub
jns
movsl
lea
add
mov
shrb
and
xchg
shrb
std
and
or
in
sub
xchg
pop
inc
xchg
jno
mov
inc
xchg
adc
mov
sub
leave
stc
sahf
dec
iret
pop
clc
lahf
adcl
and
iret
or
cmp
mov
cltd
test
lods
sub
jecxz
dec
lods
rol
inc
xchg
sub
pop
pop
dec
cltd
pop
mov
xor
aas
add
add
mov
je
popf
sbb
ret
pusha
fs
mov
das
sub
ret
aam
or
xor
cwtl
cltd
out
jnp
inc
or
and
pop
adc
sub
mov
inc
loope
adc
or
daa
andl
sbb
add
test
cmp
bnd
jmp
stos
mov
or
adc
addr16
add
and
xor
out
adc
fmull
out
dec
push
in
negl
insb
movb
stc
cld
jo
adc
cmc
lret
xchg
fisubrs
movsl
std
cmp
sbb
xchg
adc
sbb
gs
lods
lea
sub
inc
lock
xchg
inc
dec
vmovlpd
adc
push
cmp
xchg
dec
lds
pop
std
rcrl
popf
dec
dec
inc
sub
mov
stc
jbe
mov
dec
sub
pop
loope
jp
lcall
das
pop
mov
movb
sub
outsb
mov
das
pusha
sbb
dec
dec
mov
fmull
mov
shlb
dec
jp
pop
or
scas
es
bound
xchg
out
cmp
or
xchg
enter
lods
inc
rorl
xchg
add
loop
test
add
iret
aad
movsl
jmp
scas
rolb
imul
push
inc
cltd
aad
jno
cwtl
jg
mov
das
cwtl
xchg
int3
cmpsl
mov
js
les
pop
fisubs
jnp
adc
icebp
hlt
das
imul
daa
rdpmc
mov
sub
dec
fdiv
mov
jl
scas
cmp
jmp
in
fsubl
xchg
rorl
pop
in
lea
rcll
mov
dec
push
mov
cmp
xlat
jno
cmp
in
inc
cmpsl
pop
cltd
jmp
jae
loopne
xchg
nop
jns
jecxz
lds
xchg
or
mov
lahf
arpl
jo
inc
mov
jne
pusha
mov
add
mov
test
iret
push
nop
ljmp
fwait
movsb
pop
inc
jecxz
cld
das
pusha
addr16
mov
shll
sub
addr16
pop
je
les
pusha
push
xchg
adc
leave
push
test
cltd
call
sbb
jo
push
jle
addr16
in
xchg
push
or
cmpsb
fucomip
fwait
push
push
push
jg
jae
je
and
push
jp
loopne
arpl
jmp
mov
push
pop
push
idivb
push
jmp
pop
out
jne
jmp
xor
das
lods
inc
mov
insb
pop
inc
and
jge
mov
lret
sbb
aad
mov
pop
jns
or
or
push
cmp
lods
xor
sub
jge
push
push
inc
xchg
mov
adc
mov
inc
fs
dec
inc
xchg
cmpsl
lcall
add
sbb
mov
and
inc
cwtl
push
lock
push
xchg
jo
vpshufd
and
or
loop
sub
sub
mov
push
popa
scas
pop
mov
pop
insb
gs
jo
int
and
mov
insb
dec
stos
lea
push
adc
add
mov
mov
mov
pop
popf
push
fstl
fdivrs
enter
pop
inc
xlat
sbb
lcall
jmp
push
xor
pushf
movsb
mov
inc
xor
scas
mov
inc
std
and
jns
pop
sub
push
ficoms
sbb
lahf
dec
mov
insb
xor
mov
sub
cmp
stc
sbb
dec
jae
out
aad
mov
add
dec
addr16
imul
pop
aad
or
adc
sbb
lahf
cli
and
pop
jg
sbb
arpl
push
add
jb
fisubs
inc
push
ret
test
push
loope
sub
or
in
aad
mov
jmp
bound
push
cmp
out
pop
xchg
xlat
jmp
out
add
mov
scas
cmc
call
pop
push
into
in
adc
xchg
push
or
mov
push
push
addr16
xchg
or
and
gs
icebp
ljmp
or
cli
jmp
nop
lahf
out
mov
cmp
xchg
xor
add
lock
xchg
movsl
mov
or
insl
push
pop
in
xor
xchg
pop
cltd
popf
inc
sysenter
push
arpl
sbb
iret
into
push
mov
cmc
in
movsb
je
mov
jle
push
scas
and
pop
mov
daa
ret
or
jmp
mov
xor
mov
mov
stos
testl
lret
pop
arpl
sahf
je
mov
xchg
test
shll
inc
jl
dec
sahf
arpl
and
pop
mov
incl
lret
out
fsubrs
enter
or
cli
pop
push
inc
movsl
xchg
jb
popf
nop
mov
push
push
cmp
imul
int3
add
addb
dec
clc
mov
scas
cwtl
jbe
fldenv
mov
cmp
cmpsl
int3
push
push
fbstp
cwtl
mov
pushf
mov
mov
jmp
dec
and
sub
movsl
add
insl
jnp
lods
inc
iret
aad
js
jmp
mov
out
les
push
mov
outsb
pop
add
or
mov
jle
das
lods
js
xchg
xchg
dec
jecxz
roll
push
push
cltd
imul
fisttpl
loope
and
popf
fstl
outsl
hlt
xor
inc
inc
cwtl
inc
scas
cmp
and
sub
xchg
push
iret
push
mov
push
scas
mov
mov
stos
sub
fwait
push
es
dec
mov
mov
sub
mov
pop
cmpl
sub
call
mov
outsl
inc
inc
mov
loopne
imul
rcll
outsl
xchg
test
pop
ja
jle
outsb
inc
int
clc
mov
sub
out
xchg
pop
or
pop
dec
scas
shlb
std
cmp
pop
push
jne
pop
fcoml
pop
imul
aad
leave
add
lret
push
dec
dec
push
imul
sub
dec
es
popf
lcall
das
out
add
and
push
sahf
lahf
jle
jb
insb
inc
fildll
lret
stos
or
cwtl
test
gs
dec
gs
xchg
sub
push
in
dec
and
xchg
jge
lods
and
jle
test
loop
dec
mov
cmp
imul
adc
cltd
je
mov
push
jae
rcl
jge
push
mov
or
push
push
xchg
outsb
xchg
es
xor
js
mov
orl
sub
pop
pushf
enter
out
sbbb
das
aas
xor
cmc
dec
inc
int3
pop
or
pop
inc
sbb
nop
sbb
pusha
popf
cmp
lds
test
or
push
dec
dec
vpsubusb
jns
or
nop
xchg
in
outsb
mov
daa
into
pushf
stc
clc
daa
and
lods
ficoms
cmp
xchg
sub
adc
xchg
lret
mov
xor
dec
pop
and
into
lret
pop
dec
cld
idivl
rcll
jecxz
xor
push
sbb
divb
push
jmp
push
jns
dec
sub
push
imul
insb
adc
adc
cwtl
mov
and
push
mov
mov
sbb
dec
pop
fdivs
rclb
jge
insl
xchg
add
ret
rclb
dec
lock
ss
push
push
push
mov
imulb
test
cmc
cmpsl
and
es
push
xor
div
lcall
xchg
std
xor
mov
pop
mov
cmp
mov
xor
cmp
stos
dec
adc
xor
lahf
cltd
stos
push
ret
inc
test
dec
pop
fistpll
mov
int3
ss
iret
sub
push
ljmp
cmp
shll
cld
adcb
lods
xor
sbb
or
xor
les
sub
aad
sbb
lock
shr
xor
pop
inc
cmpsl
sub
and
mov
sub
fstp
mov
jne
test
mov
pop
cmp
les
test
push
xchg
test
out
dec
loop
sbb
pop
loopne
add
inc
mov
stc
xchg
add
xchg
les
in
in
jb
rcll
pop
mov
stc
pop
and
add
push
lock
iret
pop
or
pop
flds
lods
adc
adc
add
jno
lret
fidivl
mov
jbe
fsubrp
push
pop
insl
cmpsb
xor
add
push
je
lock
mov
mov
fwait
and
test
inc
dec
adc
mov
cmpl
jb
lret
or
arpl
xchg
notb
ss
fucomi
out
push
rorl
jmp
xchg
inc
mov
cmpl
push
mov
adc
cmp
movsb
nop
xchg
outsl
pusha
inc
xchg
mov
xlat
sub
sub
pop
push
dec
or
leave
xchg
ret
mov
mov
cld
ret
adc
jg
inc
cltd
ds
cli
push
aad
and
in
sahf
mov
mov
das
jmp
sti
cmpsl
push
sti
jo
sbbl
aad
cmp
mov
pop
push
lea
cmp
iret
jmp
lods
sbb
mov
repnz
sub
inc
sahf
push
div
je
outsb
leave
xlat
loop
jge
inc
jmp
aam
sbb
xchg
sub
and
btc
jo
loopne
dec
insl
cmp
cmp
in
xchg
xchg
or
mov
add
mov
pop
cli
sti
mov
enter
push
out
or
mov
jg
imul
push
adc
mov
adc
imul
xchg
nop
push
dec
movsl
mov
xchg
xchg
mov
aam
xchg
or
lock
or
js
aad
cmp
jle
mov
push
jmp
pop
and
mov
stos
dec
outsl
jg
xchg
pushf
add
fildll
pushf
sbb
mov
icebp
inc
mov
out
movsl
xchg
jbe
cmpsb
rcl
mov
jle
into
jno
jl
cmp
js
dec
je
repnz
inc
leave
subps
add
mov
vaesdec
pop
jecxz
cmp
std
shrb
je
inc
fldcw
loope
cmp
daa
xor
aas
out
mov
in
negl
adc
pusha
test
add
inc
insl
xor
and
pusha
outsl
pop
add
out
bound
push
push
mov
shrb
aaa
notl
insb
fmuls
mov
or
dec
xchg
inc
cld
mov
mov
std
data16
ds
adc
fiadds
or
dec
js
outsl
fcomps
cmc
les
xchg
cmp
jp
push
adc
and
pop
xorl
jmp
mov
rcll
enter
mov
lds
lahf
pop
divl
inc
mov
cld
jle
add
ret
jp
jl
stos
or
xchg
push
adc
out
out
and
add
test
cwtl
xor
push
jle
shll
sub
sub
scas
push
out
imul
xchg
cli
pop
test
mov
nop
fisubl
sar
cmp
sub
push
add
negl
gs
push
dec
daa
cmp
cmpb
test
dec
push
jecxz
adc
push
scas
sbb
cmp
adc
jae
push
inc
adc
sbb
or
jae
xlat
push
cltd
mov
add
xor
cli
subl
cmp
fwait
test
lahf
add
jnp
sub
outsl
jns
shrl
icebp
stos
je
sub
mov
mov
mov
lea
cmp
fimuls
pushf
fadds
or
pop
pop
ret
fwait
in
popf
pusha
cwtl
xchg
arpl
aad
push
lea
ret
jno
icebp
dec
adc
pusha
xor
mov
in
sbb
popf
mov
mov
mov
or
nop
andb
mov
inc
inc
or
in
mov
imul
or
ljmp
xchg
loop
xor
sbb
adc
ljmp
xchg
fdivrl
fiaddl
int3
mov
xor
pop
adc
loope
popa
xlat
scas
icebp
adc
test
movsl
xchg
iret
sub
bound
dec
dec
lods
loop
fiadds
hlt
or
jle
cs
addr16
inc
lcall
inc
stc
adc
fistl
add
xlat
push
dec
pop
sbb
mov
fwait
jno
and
mov
lcall
addb
test
xor
fstps
dec
repz
inc
cmc
mov
movsl
sbb
mov
push
mov
mov
push
dec
push
pop
dec
mov
xlat
scas
mov
add
dec
xor
push
mov
inc
ret
mov
push
shll
nop
cmpl
push
inc
cmp
out
sbb
inc
adc
push
mov
aas
into
cmp
sub
push
sbb
inc
jg
pop
mov
shrl
inc
add
inc
or
dec
stos
push
and
xor
insl
fwait
clc
sbb
test
test
pop
cltd
lea
shlb
ljmp
and
xchg
out
andb
fisttpll
leave
dec
imul
sbb
pop
cmp
pop
clc
mov
jae
mov
inc
nop
mov
jnp
fildl
data16
out
xlat
call
jo
pop
call
cld
xor
sub
or
cld
stos
scas
int
andl
mov
lahf
jbe
lods
jmp
jmp
inc
mov
aaa
cltd
push
repnz
dec
push
lods
adc
fisubs
lea
dec
push
dec
mov
cmp
insl
lock
bnd
repz
daa
fldl
leave
xor
jae
inc
inc
aaa
imul
out
xor
xchg
shrl
test
pop
inc
insb
mov
dec
jne
pop
mov
mov
repz
or
clc
add
loop
push
imul
int3
ljmp
add
lea
xorb
pop
in
mov
jecxz
leave
loop
ficoml
adc
inc
stos
jno
mov
inc
movsl
mov
in
adc
or
js
es
aam
xchg
or
cmpsb
xchg
loope
inc
pop
out
push
inc
nop
movsb
sbb
xchg
out
inc
pop
mov
cmp
xchg
pop
neg
fiadds
cmp
sub
rolb
xchg
lret
and
in
aas
mov
stos
sbb
sarb
in
les
lret
mov
sbb
fxtract
pushf
aam
imul
cwtl
and
call
push
pop
push
push
cli
shll
or
sub
in
dec
jl
into
imul
in
dec
sar
jnp
cmp
lock
daa
mov
xchg
loope
mov
aas
mov
loope
xorw
add
dec
inc
dec
add
je
lcall
xor
inc
das
jb
ja
mov
adc
mov
pop
sub
xchg
sub
add
mov
negl
mov
or
add
sbb
daa
les
mov
pop
cmc
sbb
rcrb
inc
cmp
fisubrl
sub
and
xchg
add
ret
mov
stc
jle
jb
xchg
mov
sti
jne
push
notb
pop
rcrb
rclb
fnstcw
jge
xor
test
dec
shll
push
or
xchg
subl
lahf
inc
xchg
mov
insl
dec
repnz
pop
mov
or
int3
data16
inc
lock
or
mov
dec
sbbb
je
out
cs
in
or
sub
dec
mov
movsl
cmpsb
pop
mov
inc
scas
notl
dec
lret
add
jb
push
push
aad
fidivrs
mov
jecxz
mov
inc
ret
lahf
mov
mov
xor
mov
sub
test
gs
out
pop
fwait
pop
add
mov
push
pop
das
leave
mov
outsl
inc
cmp
xor
rorb
mov
jge
sbb
adc
lahf
lret
cmp
mov
into
cmp
popa
add
loope
and
push
inc
jo
ret
outsl
test
cmp
js
jae
sub
enter
movsl
js
dec
jp
jae
loop
jge
mov
sbb
mov
pop
ret
inc
inc
jae
inc
adc
pop
test
add
ss
cmp
pop
mov
dec
mov
xlat
mov
jmp
pop
pop
psubw
jno
and
or
xor
cmp
lret
outsb
and
lock
rcr
fstpt
dec
sub
xchg
scas
lret
inc
jecxz
mov
shll
ljmp
fbstp
xchg
mov
jbe
mov
je
jl
iret
jb
push
sub
sub
sbb
push
stc
dec
push
notb
jne
cld
or
sbb
repz
xchg
imul
mov
js
xlat
test
sub
daa
dec
lret
aad
gs
ret
add
or
repnz
shlb
adc
cmp
subl
test
xor
xor
lret
push
pop
add
stos
and
movsb
xchg
outsl
lahf
add
imul
and
lahf
scas
daa
mov
pop
dec
and
adc
push
out
imul
call
out
cwtl
pop
aas
ret
stos
ss
mov
mov
stc
out
adc
sti
out
and
cwtl
nop
mov
out
xchg
or
mov
cltd
loopne
push
dec
dec
push
dec
outsb
rcrl
out
sarl
sub
bound
adc
stos
call
cwtl
sbb
in
insl
inc
les
push
mov
gs
fldenv
or
push
sbb
icebp
iret
jne
jns
pop
mov
inc
hlt
push
jne
